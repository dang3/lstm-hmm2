lret
ja
push
jmp
sbbl
ja
and
ja
mov
jmp
xchg
push
out
iret
mov
ja
sti
in
xor
ja
adc
ja
inc
out
jno
jmp
loope
in
pusha
push
out
pushf
sbb
ja
add
ja
mov
jmp
mov
ljmp
add
add
pop
jbe
add
add
int
ja
jo
ja
into
cmp
jne
ja
mov
cmp
das
cmp
add
ja
cmp
cmc
aad
ja
iret
cmp
cmp
jo
ja
cmp
ja
jo
ja
fdivrl
add
ja
jbe
add
add
sti
lea
loopne
fwait
mov
or
scas
jb
bound
arpl
and
testl
pusha
mov
mov
movsl
mov
adc
xor
jo
mov
mov
add
mov
popl
mov
inc
in
or
jle
add
in
pop
sub
aaa
pop
push
dec
mov
sub
push
push
arpl
xchg
cltd
fdivrl
scas
loop
xorb
push
mov
arpl
sub
pop
push
inc
dec
mov
je
dec
push
std
ret
repnz
mov
xchg
repnz
jp
jge
out
and
sub
mov
sbb
mov
or
rcr
cmc
iret
jmp
or
in
jp
push
mov
inc
mov
das
ja
inc
xchg
sub
out
mov
ds
mov
arpl
hlt
lret
jae
inc
and
jp
jns
adc
or
lods
stos
push
popl
mov
add
mov
fstpt
cmp
or
stc
adcb
das
push
lret
adc
sbb
xchg
popf
xor
or
sub
pop
fdivs
cmp
sarl
test
jne
push
jp
aaa
pusha
jns,pt
repnz
movsb
adc
and
dec
jmp
add
xlat
in
jle
xchg
les
arpl
imul
jo
mov
shl
cli
or
in
into
and
sub
xchg
jno
jp
shlb
das
jnp
inc
addr16
repz
notb
mov
inc
cltd
push
xchg
dec
xor
fisubrs
filds
ficoml
sbb
mov
push
add
mov
sub
sub
push
add
push
mov
push
sub
add
sub
mov
call
mov
push
sub
mov
dec
xor
dec
lea
mov
mov
add
add
dec
mov
mov
mov
inc
movsbl
inc
mov
mov
sub
xor
imul
add
mov
add
xor
sub
add
mov
mov
test
je
add
or
inc
mov
add
mov
xor
add
sub
mov
sub
mov
movswl
sub
add
sub
mov
repnz
and
add
add
jmp
xor
mov
mov
add
add
add
mov
mov
or
inc
sub
mov
lea
sub
dec
imul
add
mov
pop
movzwl
add
pop
jmp
push
movswl
xor
mov
mov
add
movsbl
sub
mov
push
mov
push
call
or
add
jmp
sub
imul
mov
mov
mov
mov
inc
mov
add
dec
mov
add
mov
xor
and
add
push
add
add
push
lea
mov
inc
sub
inc
sub
pop
mov
lea
pop
movsbl
add
cmp
jne
sub
push
sub
mov
mov
add
xor
push
add
add
push
mov
xor
inc
xor
movsbl
movzbl
xor
sub
mov
push
sub
xor
sub
movsbl
mov
sub
mov
mov
or
add
movzbl
sub
mov
add
add
sub
add
xor
add
movzbl
mov
imul
xor
inc
mov
lea
inc
imul
xor
mov
sub
add
mov
sub
sub
cmp
jb
movzwl
xor
add
mov
mov
sub
add
inc
movswl
add
inc
mov
mov
and
dec
sub
xor
mov
mov
mov
cmp
jb
sub
xor
dec
add
mov
mov
add
inc
imul
mov
xor
dec
add
xor
sub
mov
pop
mov
test
jbe
movzwl
dec
add
mov
lea
push
sub
movsbl
incl
xor
add
pop
mov
sub
push
sub
add
add
mov
and
add
add
mov
add
movzbl
sub
add
mov
and
add
sub
mov
dec
mov
add
lea
mov
dec
and
pop
add
jmp
sub
dec
mov
mov
add
sub
nop
jne
movswl
mov
mov
mov
movsbl
add
sub
add
mov
sub
sub
mov
inc
add
lea
dec
dec
add
mov
mov
mov
test
jbe
inc
sub
imul
add
lea
lea
sub
dec
add
sub
lea
push
inc
movzwl
xor
add
sub
pop
mov
xor
add
sub
mov
and
add
movzbl
mov
add
sub
and
imul
xor
mov
add
mov
movzbl
add
sub
mov
sub
sub
mov
mov
movzbl
add
inc
add
sub
mov
and
mov
movzbl
add
sub
xor
sub
inc
add
mov
sub
add
add
add
mov
dec
jne
sub
mov
add
add
mov
lea
pop
inc
movsbl
pop
add
add
pop
mov
and
sub
sub
add
mov
add
ret
push
push
dec
xor
push
push
xor
add
push
lea
push
imul
inc
mov
inc
add
lea
add
xor
movswl
mov
add
push
mov
xor
add
or
push
inc
mov
push
lea
push
xor
sub
and
mov
mov
inc
call
sub
add
add
sub
mov
add
add
dec
pop
jmp
push
sub
push
mov
mov
inc
je
add
dec
inc
dec
mov
mov
mov
mov
add
mov
movzbl
movzwl
lea
add
mov
cmp
jne
sub
add
dec
add
add
sub
mov
mov
inc
add
lea
add
jmp
mov
push
mov
mov
sub
test
je
movzbl
sub
add
mov
add
or
add
sub
repnz
mov
pop
sub
jmp
xor
pop
add
add
mov
sub
add
movb
sub
inc
add
sub
dec
jne
mov
pop
xor
pop
ret
mov
sub
add
inc
mov
sub
mov
mov
sub
mov
sub
sub
mov
add
mov
and
call
sub
sub
mov
lea
inc
add
imul
add
add
sub
dec
add
mov
dec
sub
call
and
push
add
call
mov
pop
dec
add
add
call
add
mov
push
and
movzwl
sub
mov
mov
add
add
movzbl
sub
add
inc
sub
add
call
mov
sub
movswl
pop
sub
mov
add
mov
pop
add
pop
sub
pop
add
mov
mov
pop
add
dec
pop
add
mov
mov
mov
pushl
sub
sub
push
add
jmp
mov
push
mov
push
sub
push
or
sub
push
mov
push
mov
mov
add
push
jmp
push
inc
xor
add
mov
sub
imul
sub
sub
mov
inc
add
sub
mov
mov
add
dec
add
sub
mov
dec
pop
pop
jmp
push
call
sub
add
add
lea
add
dec
add
add
add
mov
push
inc
movzwl
inc
sub
mov
add
add
sub
call
sub
lea
add
dec
sub
add
pop
mov
lea
xor
add
inc
sub
mov
sub
xor
sub
sub
lea
inc
movzwl
inc
mov
lea
dec
movsbl
add
mov
test
je
mov
int3
and
add
add
sub
mov
add
sub
add
sub
mov
add
xor
add
add
mov
sub
sub
dec
sub
lea
add
movswl
sub
add
mov
add
sub
xor
sub
mov
add
dec
and
sub
mov
dec
sub
dec
mov
mov
add
add
and
mov
mov
and
dec
add
add
mov
imul
add
inc
call
sub
mov
xor
sub
xor
add
mov
movzwl
movzwl
sub
add
mov
sub
sub
inc
sub
mov
movzbl
pop
sub
imul
ret
sub
mov
jmp
xor
xchg
jg
jb
fadds
ss
push
add
pop
add
test
mov
pop
ss
ficoms
xchg
cmp
notl
loope
mov
or
xor
loope
das
inc
and
sbb
sbb
test
aas
xchg
push
xor
rdpmc
call
pushf
shll
stc
xchg
int
and
jmp
inc
jg
in
pop
aaa
fs
mov
jo
frstor
aam
lret
pop
repnz
test
jno
or
daa
xchg
imul
lret
mov
sbb
outsl
out
cmp
jae
mov
pop
push
idivl
call
push
xor
xchg
gs
insb
xchg
pop
je
lahf
pop
jb
scas
push
es
jg
push
rcrb
loope
inc
xchg
cmp
cmp
lock
or
dec
jb
cltd
mov
push
and
fwait
add
das
std
cli
call
jne
or
scas
pop
scas
lods
sub
ficomps
xchg
adcl
add
int
nop
repnz
fstps
adcb
test
js
pop
cmp
jecxz
add
fsts
fsubl
movsb
push
pop
dec
dec
xor
or
sti
jle
fcoms
icebp
adc
mov
aas
imul
cld
fsub
movsb
dec
test
insl
inc
jne
adc
cmp
mov
and
mull
add
insl
mov
js
sbb
ljmp
sahf
jp
and
lods
or
scas
mov
pop
mov
std
mov
loop
adcl
dec
or
cmp
sarb
cmpsb
mov
mov
or
push
scas
sub
iret
add
lahf
inc
shlb
les
dec
sub
mov
cld
fdivrs
int
inc
jb
mov
aas
mov
iret
xchg
xchg
stos
mov
fildll
mov
mov
outsb
inc
outsl
sti
js
mov
jmp
es
loop
jae
rcll
nop
push
adc
mov
loop
mov
adc
les
loop
mov
push
lds
pop
shll
cmpsb
jl
sub
adc
test
loopne
xor
mov
clc
aad
mov
ret
rol
outsl
sub
add
fwait
lea
mov
jg
or
inc
aad
rep
cmp
aam
test
sbb
inc
sub
cltd
std
mov
clc
arpl
xor
mov
sub
push
pop
jb
add
adc
xlat
or
ds
mov
popf
sbb
mov
nop
jle
mov
rorb
aas
pop
ficomps
push
outsl
pop
add
lds
inc
orl
adc
jge
es
pop
dec
and
xchg
dec
in
aas
adc
sbbl
sbb
fisttpll
mov
out
sbb
push
push
pxor
test
jge
or
sbb
shl
je
lcall
sub
push
jmp
stos
add
shlb
arpl
mov
pop
fildll
sahf
fstps
insb
stos
fs
adc
shrb
das
cs
fsubrs
jb
test
nop
xchg
fistpl
cld
adc
dec
jns
mov
cmp
loop
loop
dec
sub
jno
sahf
or
icebp
movsl
test
pop
pop
repz
mov
je
sbb
mov
xchg
xchg
das
inc
inc
sbb
loop,pt
fsubp
add
in
leave
insl
aas
cmp
iret
loop
cmp
add
and
scas
das
adc
pop
sahf
mov
sbb
sub
sar
pop
aaa
test
sbb
sbb
mov
into
call
xchg
inc
dec
jp
xchg
cmp
jb
sub
push
test
mov
loope
xchg
mov
cltd
xor
rorb
mov
test
fsubrl
into
jge
pop
inc
jecxz
shlb
mov
enter
dec
iret
mov
mov
jecxz
nop
sbb
mov
inc
cwtl
aaa
cmp
jnp
inc
or
sbbb
in
lock
filds
sub
mov
leave
and
add
lock
add
stos
cmp
mov
les
sbb
mov
jno
jne
out
xor
push
xor
out
mov
sahf
cmpsb
or
in
in
xchg
std
push
out
ficompl
mov
aad
fdivs
je
andb
jg
add
xchg
jb
lds
or
aad
mov
cmpsb
daa
arpl
push
sbb
gs
popa
pushfw
and
add
rol
es
pop
add
jne
enter
xchg
test
hlt
cld
push
xor
sub
xor
mov
jno
sbb
cltd
cld
repz
inc
pop
lock
adc
pslld
jge
dec
xchg
sub
adc
rol
int
int3
lds
movsb
mov
dec
or
scas
and
daa
ljmp
fcmovnu
pop
outsb
xor
stos
mov
repz
ret
es
and
mov
mov
lahf
pop
mov
xor
inc
mov
xor
add
cltd
jl
rcll
pushl
sub
add
inc
sbb
xor
dec
stos
loopne
fadd
fisttps
js
inc
mov
aaa
es
push
shlb
mov
cmp
sbbl
andl
popa
push
jo
cmpb
adc
dec
dec
dec
push
hlt
add
add
inc
cmpsb
dec
popf
xchg
push
wbinvd
xchg
and
ja
ja
and
adc
mov
dec
mov
mov
ficoms
dec
push
sbb
cltd
jo
mov
jo
add
push
pop
push
adc
mov
fcompl
mov
pop
mov
mov
mov
inc
lods
fdivl
sbb
and
rorl
lods
divl
lock
inc
adc
push
out
and
dec
negb
xor
sub
test
dec
inc
popa
mov
pop
stos
sbb
pop
mov
or
mov
jae
push
lcall
mov
push
xchg
xor
mov
negb
inc
add
imul
or
pop
push
test
test
insl
and
loop
sub
push
xchg
daa
icebp
mov
out
dec
test
ljmp
insl
push
loop
push
fs
lret
mov
mov
dec
ret
add
repz
nop
sbb
and
xchg
mov
shr
pop
push
mov
cld
push
pop
ror
xchg
cwtl
ret
pusha
sbb
loope
add
push
mov
jmp
pop
imul
insb
test
lods
xchg
in
cld
fildll
fsubs
or
jo
xor
mov
adc
cmp
xchg
jbe
inc
pop
add
imul
inc
pop
xchg
aam
mov
fs
neg
push
jl
mov
lcall
leave
in
or
cmp
xchg
sti
andb
xchg
aam
pop
stos
sub
decl
or
cmpsl
dec
jmp
adc
add
and
icebp
lret
dec
in
out
pop
jge
cmc
mov
cli
scas
jae
push
pop
hlt
push
or
sbb
rorb
jge
cs
inc
dec
leave
or
adc
push
jge
lods
jle
pusha
jbe
cmp
jns
je
and
popf
cmp
cmp
xchg
mov
mov
add
and
xor
shll
cmp
sbb
xchg
stos
inc
sbb
or
mov
pop
mov
dec
lods
bound
sbb
or
add
or
out
pop
mov
or
or
pop
or
dec
sbb
pop
mov
xchg
mulb
cmpsl
sub
jmp
aam
fwait
mov
les
pop
push
dec
scas
fld
nop
dec
sti
xor
out
xchg
xor
push
nop
loopne
test
movl
jno
ja
roll
out
or
inc
pop
pop
pop
lret
pop
clc
jno
mov
dec
add
xchg
vmovhlps
repz
enter
leave
add
or
push
aaa
lods
arpl
fs
sub
daa
in
cmp
scas
scas
pop
fcoml
cli
jbe
pop
xor
mul
or
aad
inc
cmp
xor
fs
and
andl
lcall
add
dec
aas
fisubs
dec
imul
dec
or
sbb
outsl
in
popa
mov
ss
inc
push
outsb
repz
xchg
xchg
xchg
xlat
in
jne
or
fcmovne
aas
dec
adc
jns
mov
inc
pop
jae
sbb
lret
iret
cmpsl
pop
cmp
inc
shrl
scas
and
and
out
mov
pop
jl
je
mov
mov
jae
in
and
pop
icebp
addr16
stos
mov
add
testl
scas
sub
test
stc
or
fsubrl
lea
outsb
mov
aaa
mov
jmp
cmp
lret
mov
mov
test
inc
jp
dec
sbb
rcrl
fcompl
rcll
lock
adc
in
inc
cmpsl
into
adc
cmp
das
dec
mov
mov
inc
popf
neg
cmp
in
clc
mov
xorl
or
fsubr
iret
mov
shl
and
xchg
int3
cmp
subl
lret
jne
jae
and
jg
repz
jb
scas
in
mov
xchg
mov
jg
sub
pop
outsb
cmp
cwtl
mov
pusha
cwtl
ret
or
fisttps
das
ss
mov
out
aaa
in
cmpsb
push
jmp
mov
cli
loope
leave
mov
fwait
movsl
fidivrl
loopne
std
ret
dec
cmp
imul
das
jg
and
dec
xchg
or
add
aaa
pop
mov
sbb
xchg
jmp
xor
add
add
push
ja
addr16
repnz
add
test
jae
int3
jge
test
dec
andl
cmp
into
xchg
mov
push
je
mov
pusha
popf
pusha
cmp
sub
lahf
sbb
push
adc
andb
or
fsubrl
sti
loope
or
mov
repz
push
out
mov
gs
in
shll
mov
mov
mov
or
mov
and
jb
mov
loopne
mov
mov
fidivs
mov
push
cld
pop
pop
mov
jo
push
cmc
cmp
ljmp
outsb
jnp
mov
iret
dec
dec
test
xchg
out
mov
negb
std
fdivrl
out
subl
cmp
jl
cmp
int3
jle
inc
cmpb
shlb
rorl
pop
test
add
sub
mov
int
imul
dec
xchg
lock
and
or
sarb
jl
and
sub
stc
sahf
and
pusha
cmp
out
xchg
mov
insb
mov
loop
and
mov
jle
cmpsb
fcompl
pop
movsb
movsl
xchg
adc
jnp
mov
xchg
xchg
xor
inc
rorl
sub
or
or
mov
hlt
int3
push
es
jmp
dec
repz
call
imul
mov
add
jl
jae
pusha
dec
repz
mov
pop
add
fcomps
or
pop
mov
push
cmp
xor
jecxz
mulb
subl
cmp
pop
jnp
mov
loope
jg
xor
adc
ret
pop
js
jae
xor
pop
xor
test
pop
jge
mov
add
ljmp
xchg
xlat
push
add
dec
and
mov
sbb
xchg
mov
mov
mov
mov
pop
cmp
jne
xchg
adc
mov
dec
push
rcl
adc
sub
std
dec
pop
xor
pusha
inc
cmp
stos
pushf
ja
jbe
inc
adc
adc
and
cmp
xchg
jl
jle
fisubrl
shll
stos
mov
aas
jecxz
inc
and
pop
shlb
fsts
cli
scas
jae
inc
dec
dec
mov
push
lock
aas
jno
add
int
sub
xchg
ljmp
lcall
jecxz
jns
scas
std
pop
jge
cld
aam
popl
sbb
je
fadds
pop
jl
jae
ret
std
daa
sub
mov
pop
push
decl
cmp
loopne
jae
jb
int
xchg
jae
imul
data16
dec
mov
jl
rcrb
xchg
pop
pop
cmp
cmpsl
mov
test
push
sahf
sub
leave
add
out
xchg
int
push
xchg
jno
xchg
pop
ds
loop
push
mov
test
nop
inc
dec
sub
enter
roll
sti
out
mov
ljmp
loopne
sarl
pop
and
clc
mov
pushf
inc
jns
cmp
sarl
mov
popa
js
pop
sahf
fwait
out
sub
int
sbb
cmpl
mov
std
adc
xchg
setb
sub
sbb
or
push
cmp
leave
popa
addr16
adc
and
pop
sbb
popa
aas
fwait
mov
lock
inc
divb
mov
lds
dec
sub
jmp
cmpsl
shll
dec
inc
sbb
enter
pop
sbb
pop
in
ja
aaa
div
pop
sbb
jns
add
xchg
mov
jge
lods
pop
in
dec
ds
add
mov
mov
into
pop
mov
out
adc
xor
dec
dec
mov
ret
mov
imul
adc
mov
cmpsl
loope
jo
ljmp
sahf
push
ret
xchg
std
mov
clc
sbb
lret
cwtl
clc
xchg
cld
mov
fcomi
lret
or
pop
or
inc
xchg
sbb
adc
pop
mov
shll
cmp
xchg
mov
sub
pop
scas
xchg
lcall
sbb
hlt
ret
mov
idivb
add
cmp
mov
cs
mov
push
pop
idivl
dec
fisubrs
and
sub
dec
cli
adc
jbe
xchg
test
aas
pop
sub
ljmp
mov
pop
das
jae
or
aas
outsl
pop
jecxz
test
adc
insl
dec
les
popa
adc
pop
mov
movsb
arpl
cmp
pop
adc
arpl
and
xor
ljmp
icebp
push
out
jne
cmp
jg
aaa
ja
mov
jl
rcrl
nop
lea
dec
ss
in
maxps
mov
fbld
ss
mov
xchg
imulb
mov
daa
pop
sub
in
rclb
jbe
jne
xor
and
outsb
cmc
cmp
and
and
add
add
add
fdivrp
pop
xor
lret
push
cmp
inc
mov
jo
lock
les
add
mov
stos
movsb
pop
je
cmp
into
dec
dec
adc
push
add
cli
mov
push
and
sub
xchg
mov
jp
ja
inc
cmpsb
pop
pop
dec
dec
jp
xchg
movsl
fwait
setle
mov
mov
js
gs
xlat
sahf
cmp
in
jns
jbe
cmp
aam
out
bnd
ret
es
insl
mov
fnstsw
push
addr16
cmp
xchg
jne
sbb
mov
or
adc
mov
enterw
pop
mov
fstps
punpckhwd
xchg
sahf
imul
outsb
mov
call
popl
shrl
push
mov
flds
or
out
mov
jb
scas
dec
cwtl
pop
into
push
xchg
mov
push
sahf
cmpsl
fldt
popa
rcr
add
pop
xchg
adc
fnstsw
or
xchg
imul
arpl
in
xor
daa
sbb
xchg
lods
pop
cmp
add
rclb
jle
lods
or
mov
mov
xlat
mov
push
xor
and
arpl
outsl
int3
jnp
inc
sbb
push
pusha
xor
sbb
je
mov
sbb
enter
dec
icebp
addr16
push
clc
test
loop
int
jnp
cmp
xchg
stc
cmp
pop
cmp
and
mov
mov
xchg
enter
aas
imul
leave
cmp
jnp
sbb
loopne
mov
and
mov
dec
adc
call
lahf
mov
jl
enter
loop
pop
add
ret
add
xchg
push
mov
adc
fildl
and
enter
push
xchg
or
pop
push
mov
fdivl
daa
xor
iret
rcrl
xor
push
pusha
or
fidivrs
lret
movsb
and
pop
out
or
inc
mov
pop
sub
mov
fmul
push
and
daa
ljmp
scas
pusha
idivb
xchg
inc
sub
out
sahf
loopne
data16
fwait
lds
test
xor
faddl
or
dec
jecxz
mov
fsubs
xor
or
repnz
pop
cmp
not
lahf
adc
gs
or
dec
mulb
out
leavew
mov
loopne
nop
outsb
cwtl
push
ljmp
nop
aaa
inc
ss
fmul
sbb
ficomps
data16
bound
xor
into
bound
sbb
adc
push
hlt
mov
xchg
sub
xchg
xorl
adc
adc
fdivs
dec
outsl
inc
in
je
xor
mov
xor
jne
pushf
push
loope
adc
push
jb
stos
in
xor
jp
out
mov
cmp
or
sub
sahf
rcrb
loope
out
dec
push
addr16
shrl
popl
dec
jle
xchg
jns
cmc
jns
nop
mov
push
mov
loope
mov
jmp
sahf
icebp
jns
cld
lea
test
adc
addl
pop
sbb
and
dec
jl
rorl
test
cld
adc
scas
and
loope
xlat
in
out
inc
andb
int
fisttpl
cwtl
aas
or
fwait
repz
lods
rorb
cmp
push
test
push
sbb
push
fsincos
arpl
ja
xchg
push
pop
jecxz
sbb
mov
push
jmp
mov
push
xor
mov
mov
xchg
push
stos
enter
push
test
idivb
lret
pop
xlat
or
fbstp
lcall
xchg
js
pusha
subb
data16
ljmp
aas
and
inc
aam
jno
outsl
push
cmp
lret
cwtl
testl
dec
cmp
jnp
mov
movsb
out
add
in
sbb
jb
in
int
fistl
enter
sbb
adc
push
clc
pop
test
push
push
or
dec
outsb
sti
test
xchg
lret
lret
pop
cmp
push
mov
jno
sbb
test
in
pop
mov
jne
push
cmp
fwait
xchg
inc
adc
sbb
jbe
xorl
out
cli
ror
clc
and
pushf
dec
icebp
jmp
in
cmp
pop
add
mov
in
dec
mov
mov
out
ds
ja
sbb
aas
gs
mov
xorb
nop
in
add
sbb
int
xor
pop
inc
in
push
pop
vmovaps
inc
bound
xor
loop
jmp
add
inc
xor
pop
sahf
ds
dec
nop
js
jg
dec
hlt
sbbl
sbb
mov
movsl
rcrl
out
lahf
pop
mov
fwait
scas
cltd
adc
xorb
push
lods
mov
dec
pop
out
push
mov
push
adcl
pop
inc
rorb
loop
adcl
sbb
mov
fsubrs
repnz
or
adc
movsb
mov
and
aad
push
sbb
xrelease
insb
pop
push
popf
shlb
jb
push
push
je
outsb
jp
cmpsl
es
imul
gs
inc
xor
aas
pop
dec
insl
xchg
shrl
testb
mov
iret
dec
inc
add
add
dec
cwtl
mov
daa
add
adc
mov
push
or
hlt
xor
ljmp
loopne
movsl
loope
pop
fdivs
push
loope
cltd
inc
mov
and
mov
xchg
jle
lds
rclb
clc
sub
movb
pop
sbb
xchg
xchg
mov
cltd
mov
loope
dec
mov
xchg
rcll
cmc
jbe
cmpb
push
stc
gs
pop
mov
xchg
adc
ficoms
or
cmp
scas
sub
out
xchg
aad
mov
cmpsl
rcrb
xchg
rclb
xchg
pop
lock
daa
jl
pop
arpl
and
add
mov
cmpsb
imul
and
mov
cmp
or
lcall
ss
mov
ret
or
add
xor
dec
xchg
mov
jg
adc
sbb
aad
hlt
fidivl
mov
sub
mov
push
stos
test
loope
je
popa
gs
into
mov
mov
mov
xchg
roll
sub
fwait
add
inc
push
pop
int3
out
punpckhdq
pusha
adc
cli
fs
jbe
adc
sti
lret
ret
mov
xor
jns
cmp
mov
mov
es
mov
rcll
pop
inc
ja
sbb
stos
pop
jnp
mov
xor
std
movsl
rolb
add
dec
mov
testb
loopne
jl
scas
xor
aas
imul
cli
popa
jno
jle
cli
jns
xchg
cli
stos
xor
fisttpl
lcall
mov
pop
out
push
andl
inc
xor
mov
or
mov
les
mov
iret
jge
into
xor
ljmp
and
ja
repnz
fs
loop
and
mov
sbb
and
or
mov
mov
jae
jns
lods
das
mov
sahf
dec
mov
push
jno
xchg
and
inc
test
pop
xchg
sub
daa
sub
xor
sub
test
shl
into
leave
xchg
lea
xor
daa
pop
arpl
and
xor
sbb
mov
popf
dec
retw
fst
inc
cwtl
dec
jns
fiadds
fistpll
add
pop
xor
ficomps
adc
insb
cmp
mov
cmp
pop
push
loope
xchg
cmpsl
es
outsb
sarl
jo
jno
loope
or
add
push
and
cmp
and
divl
divl
into
push
mov
aas
mov
mov
cmp
or
sbb
enter
cmp
or
push
mov
testb
pop
mov
jae
add
adc
sub
and
arpl
sub
rclb
cmp
pop
shrb
dec
je
stos
imull
and
xchg
push
push
cmpsb
test
cmp
mov
xor
sub
dec
testl
enter
pusha
sub
pushf
mov
cmp
int
inc
mov
pushl
fsubrl
repnz
cmp
push
test
aaa
push
rcll
mov
jmp
mov
xchg
xor
aam
xchg
xor
or
aam
or
jns
or
inc
outsl
dec
mov
xor
add
push
mov
add
sbb
sbb
fdivr
add
cmp
sbb
push
loop
cmc
test
or
add
or
js
fstpl
xchg
mov
cltd
add
scas
mov
jge
lods
iret
loopne
orb
aam
repz
pop
inc
pop
mov
shrl
dec
xchg
aaa
jl
mov
cmp
xor
gs
and
cmp
ret
fwait
mov
xchg
stos
xor
sbb
inc
ret
jno
out
pop
sub
push
rcrl
hlt
inc
xchg
loope
push
and
dec
test
xchg
xlat
icebp
inc
pop
hlt
ss
je
push
test
jp
fucomp
push
shl
mov
or
xchg
ja
jo
sbb
icebp
xchg
sbb
test
sbb
fisttps
aaa
in
mov
clc
xor
cmp
mov
popa
sbb
test
cmpsl
inc
insb
cld
stos
or
jne
in
push
fdivrs
sbb
idivb
sbb
sarb
mov
sub
add
lods
add
in
sub
rcrl
and
xor
jbe
sub
aam
xorb
jns
scas
into
pop
mov
pop
mov
mov
fucomi
sets
xor
mov
out
inc
out
sub
rcr
cmc
mov
jo
xlat
xchg
add
cld
jbe
lock
andb
jg
inc
mov
pop
ljmp
or
out
or
adc
cmp
lea
scas
and
mov
push
mov
jecxz
sbb
or
es
enter
or
sub
aam
mov
fadds
or
shll
cmc
sub
mov
dec
ljmp
push
into
adc
int
sbb
dec
xchg
pushf
push
jns
outsl
add
push
ja
mov
cmp
andnps
push
jae
mov
and
adc
mov
cmpsb
popa
cmpsb
push
sbb
mov
es
orb
inc
cmp
fs
mov
xchg
jmp
mov
inc
in
mov
xlat
adc
lock
dec
sbb
lock
hlt
sub
push
mov
jnp
outsl
notl
icebp
pop
pop
ss
nopl
mov
dec
adc
pop
jnp
jg
and
std
mov
fcomps
mov
in
fwait
push
out
sahf
adc
mov
xor
addr16
ja
fsubs
fcmovbe
cmp
notb
xchg
or
inc
aas
mov
sbbb
mov
mov
xor
push
or
loopne
xor
js
cld
push
push
out
sti
sbb
in
int3
mov
data16
fwait
xchg
movsl
cmpsl
xor
fnstsw
mov
pushf
jbe
dec
test
push
stc
jbe
pop
add
xor
stc
sahf
and
jns
adc
sub
mov
sbb
dec
stos
sub
push
cld
es
mov
setle
lods
insl
idiv
inc
idivb
nop
sti
push
jbe
loop
or
mov
cltd
jb
adc
ret
int3
mov
shr
insl
imul
outsl
pop
das
stos
pop
or
mov
sahf
stos
inc
insl
push
cmp
adc
dec
mov
pushf
pop
mov
bound
xchg
push
dec
mov
or
fistps
call
loope
xor
jnp
repnz
mov
mov
push
mov
clc
scas
repz
pop
push
jle
popa
cmp
scas
cltd
mov
mov
psllq
sarb
lret
mov
add
lret
cs
and
sbbl
add
jge
popa
inc
mov
es
ficomps
pop
inc
dec
inc
test
xchg
lcall
in
bound
insb
pusha
xchg
add
aas
int
test
loope
or
mov
dec
inc
dec
pop
jmp
adc
mov
movsl
insb
mov
movsb
xchg
hlt
adc
emms
dec
test
adc
ret
data16
jae
jbe
data16
movsb
push
in
into
arpl
cmp
out
dec
mov
xchg
jns
insb
popf
bound
and
loope
mov
fisubrl
add
stos
lret
push
mov
add
or
or
inc
mov
scas
lret
pusha
aaa
sbb
aad
jb
inc
adc
call
lret
adc
sub
inc
pop
jl
dec
xchg
mov
movsb
repz
dec
sub
xchg
and
sbb
int3
cmp
mov
or
cmp
daa
mov
mov
stc
mov
xor
mov
jle
mov
je
mov
mov
pusha
pop
push
mov
adcb
fimull
fwait
and
dec
xor
inc
dec
jge
pop
pop
mov
fistps
and
jmp
in
mov
cmp
xor
sbbb
adc
sbb
popa
inc
jne
rcll
and
sbb
stos
int3
loop
shl
xchg
add
push
shrb
or
lds
xor
jecxz
lods
inc
inc
cmp
dec
aaa
mov
test
pop
cmp
mov
xor
test
xchg
pop
aaa
jg
inc
mov
or
in
mov
and
imul
mov
inc
jae
inc
jle
test
adc
adc
xor
cs
out
lds
mov
and
dec
cltd
jbe
mov
dec
leave
adc
adc
inc
negb
adc
adc
aaa
movsb
mov
or
mov
xchg
push
adc
adc
orb
les
inc
lods
adc
sahf
jns
je
movsl
mov
push
and
shrl
pushf
not
insb
frstor
sbb
cwtl
imul
jge
add
shrb
sub
test
fs
fdivp
scas
jb
ja
fcomi
scas
jo
fwait
mov
fcmovnu
mov
pop
pop
or
sbb
ret
test
push
cmpsl
xchg
in
fwait
imul
jbe
data16
add
jg
ret
adc
cmp
sbb
mov
out
cmp
cld
sbb
dec
repz
popf
sbb
int
adc
xorl
fiadds
jg
mov
lret
and
fwait
cltd
ret
int
iret
adc
lods
xchg
jne
add
lret
mov
lcall
bound
dec
or
fwait
popa
stos
mov
xchg
mov
filds
cmp
rcll
jae
ficompl
cld
aad
jmp
iret
rcrl
xor
xchg
repz
jle
out
push
inc
rol
sub
dec
xchg
jmp
mov
repnz
ss
sub
xchg
int
inc
add
xchg
stc
xor
imul
mov
xor
jge
push
pop
shrl
movsl
inc
enter
repnz
push
xchg
dec
inc
mov
lahf
je
sbb
xor
outsb
js
xchg
xchg
push
bound
mov
shrl
inc
jne
inc
mov
push
lcall
sbbb
call
add
in
lock
jmp
imul
add
push
mov
jle
sbb
test
ret
xchg
stc
aas
dec
xchg
mov
pop
std
dec
icebp
add
icebp
jp
scas
xchg
cmp
mov
add
out
mov
lret
adc
loope
js
ja
out
repz
fistpl
jae
pop
inc
pop
shl
std
jmp
mov
sub
push
dec
add
xchg
mov
cmp
in
mov
mov
lahf
mov
shll
cli
cmp
leave
scas
fcos
ret
imul
movsl
fs
mov
cmp
gs
stos
leave
negb
xlat
repnz
and
lds
mov
push
sarl
dec
fists
mov
ficomps
cmpsl
andnps
cltd
or
test
loope
pop
pop
cmp
movaps
inc
xor
das
jne
cmp
clc
lcall
inc
jl
cmp
adc
adc
fstpl
xlat
pop
jne
jb
inc
jns
cmpsb
mov
push
mov
jo
mov
leave
lock
mov
sbb
test
das
fwait
shlb
daa
rorb
int
cmp
mulb
pop
xor
sbb
push
dec
cmp
adc
leave
inc
cs
xor
xchg
xor
stc
inc
jne
stos
and
mov
aas
shl
lock
in
imul
inc
cmpsb
lock
pushf
in
pop
insl
and
fbld
cmpl
jle
cmp
push
dec
repz
inc
movsl
das
fidivrl
hlt
imul
cmp
xchg
cmp
mov
push
repz
lret
xor
add
in
dec
out
rcll
push
sub
into
insl
out
xchg
mov
lock
or
add
sbb
cltd
fistpl
loopne
mov
adc
cmpsb
jno
das
jmp
mov
sbb
jns
adc
jmp
std
in
leave
push
jecxz
mov
xchg
jecxz
enter
lods
mov
fnsave
pop
das
cmp
pop
mov
arpl
inc
fcomps
cmp
aad
xor
std
ss
pusha
test
data16
loop
jno
insl
outsl
cwtl
lret
cmp
cmp
mov
bound
jb
cmp
push
ud2
mov
enter
xchg
mov
insb
lods
bnd
test
sbb
fimuls
cld
mov
fldenv
push
jp
sahf
sahf
pop
outsl
sahf
shll
sub
hlt
js
lods
pop
dec
dec
push
pop
and
xchg
push
cltd
dec
adc
ja
aad
shlb
mov
nop
or
out
repnz
sbb
and
enter
cmp
mov
arpl
fcomp
sbb
in
sub
rcrl
mov
enter
pop
push
dec
rolb
lahf
or
pop
xor
outsl
loopne
xlat
es
idivb
scas
push
movsl
pop
sarb
xchg
adcl
movsl
and
iret
insl
les
or
cmp
sbb
push
in
xor
xchg
mov
in
mov
push
mov
xor
mov
lods
fisubs
out
mov
data16
mov
fxch
push
scas
mov
aam
mov
cltd
lret
cmp
xor
in
mov
sbb
orps
jle
int3
outsb
mov
dec
cwtl
cmp
pop
jl
mov
or
mov
ja
pop
testl
inc
clc
xchg
inc
je
push
add
push
scas
cwtl
xchg
insl
lds
bound
lret
sub
lods
ds
jl
test
mov
and
test
xor
mov
movsl
mov
pop
push
pop
and
jo
xchg
and
rcr
jbe
or
mov
jle
outsb
dec
adc
adc
ljmp
push
outsb
imul
or
xchg
push
jo
or
sub
inc
in
lock
lds
adc
mov
mov
mov
jg
mov
or
outsb
mov
sbbb
push
shlb
cs
ret
addr16
call
xchg
lcall
jbe
sbb
js
add
sub
sub
add
push
mov
int
and
inc
push
xor
dec
adcl
fldenv
mov
or
push
push
pop
shrb
lcall
int3
call
ljmp
pop
push
test
sub
and
jp
cmpsb
ret
add
push
mov
sub
clc
or
push
aad
jmp
adc
pop
rcll
fidivl
cmp
mov
popf
lds
mov
cli
frndint
sbb
xchg
test
sbb
dec
vpunpckhbw
or
mov
add
rclb
xchg
dec
mov
jb
movsl
cmp
test
xchg
rolb
pop
scas
outsb
aad
jne
push
mov
sub
jl
jb
mov
dec
jl
xchg
push
ds
ret
je
leave
mov
xchg
or
clc
mov
mov
test
psubq
pop
jp
loope
sbb
xchg
clc
jnp
pop
adc
aad
addb
cmp
mov
and
xchg
cltd
and
out
mov
ficompl
loop
sub
mov
pop
popf
and
and
pop
push
jp
or
ds
icebp
popa
loope
or
or
sbb
inc
adc
push
cmp
mov
fs
loop
scas
cmp
rcrl
jge
icebp
das
push
js
cmp
pop
pop
push
and
xor
inc
rclb
jnp
xchg
and
test
sbb
aam
into
mov
dec
scas
pop
lock
lea
cmpsl
dec
das
in
jbe
add
loopne
call
mov
enter
inc
xchg
pop
and
jno
push
xchg
fmul
mov
mov
repz
jnp
or
cwtl
jmp
dec
aam
inc
lcall
inc
mov
jmp
xor
je
jmp
test
or
sti
cmc
or
mov
mov
outsb
fs
addr16
sub
sar
cmp
fistl
cmp
repnz
adc
sbb
cmp
test
xchg
fimuls
enter
ljmp
test
shlb
cld
mov
xchg
sbb
sbb
xchg
ljmp
adc
dec
pop
in
setbe
sub
inc
sbb
cltd
mov
repnz
lds
mov
mov
jl
fucomi
mov
lods
pop
jo
mov
je
push
sbbb
mov
push
push
movsb
jge
bound
jecxz
adc
in
lret
gs
xchg
aam
leave
pop
jg
fstpl
jnp
and
adc
imul
stos
xor
jbe
xchg
cmp
adc
in
push
jp
sub
ja
int3
pop
and
mov
dec
mov
jns
and
test
or
lcall
enter
pusha
int3
pushf
or
lahf
imul
hlt
xchg
and
sub
rcr
inc
sub
lods
pop
push
mul
notl
lods
cmp
sbb
icebp
jno
sbb
into
loope
and
jg
js
testb
or
inc
xor
shll
loopne
cmc
xchg
popa
push
sbb
mov
xchg
popf
xchg
aad
jle
mov
bnd
inc
mov
roll
mov
sti
rcll
or
mov
icebp
jg
aaa
lods
pushf
dec
jns
icebp
cmp
cmp
repnz
pop
repz
xor
call
lahf
fidivrl
cmpsl
push
sub
sub
jp
in
ljmp
aad
jecxz
aad
mov
jge
xor
xor
add
cltd
nop
insl
jg
roll
loop
push
mov
mov
dec
jp
jns
push
aad
insb
lret
lahf
int
es
cmc
or
cmp
repz
pop
add
in
or
mov
in
jns
xor
std
int3
dec
dec
mov
adc
xor
enter
inc
jecxz
das
sbb
in
jb
sahf
mov
int
lock
jge
xchg
cmp
gs
jb
in
cmp
or
stos
jmp
xor
ds
or
pop
mov
lods
dec
or
pop
scas
out
fcmovbe
lock
sarl
and
stos
ss
xor
and
enter
fdivl
or
xchg
mov
iret
jb
jl
sub
add
dec
lods
lcall
addr16
bnd
roll
cmc
pop
xchg
push
sub
add
fadd
push
xlat
std
pushf
inc
xchg
stos
mov
or
gs
dec
or
shlb
xchg
imul
cwtl
dec
insl
icebp
in
rcrl
outsb
push
jne
push
and
push
mov
lret
adc
cmp
mov
sarl
popf
push
sub
jbe
pop
mov
sub
adc
xor
mov
pop
xor
xor
negl
xchg
ret
loop
xchg
xchg
dec
leave
mov
xor
mov
or
cmp
and
cltd
xor
fwait
repnz
lret
in
ret
cmp
out
data16
test
cmp
test
loopne
jae,pn
scas
fildll
das
pop
lea
lahf
enter
sub
arpl
aad
addr16
shrl
or
cmp
mov
jmp
jns
pop
stos
mov
jne
cs
xchg
shrl
imull
push
pop
int3
and
inc
je
jnp
popa
or
mov
fnstsw
hlt
aam
cmpsb
mov
mov
mov
pop
jmp
cmp
and
mov
inc
repnz
std
or
adc
mov
push
and
cmp
daa
dec
mov
call
xlat
lock
inc
cld
push
scas
xlat
adc
and
or
call
mov
lock
push
and
mov
hlt
jnp,pt
jbe
add
cmp
push
adc
and
bound
rclb
pop
add
lock
jp
adc
mov
cltd
xchg
in
ljmp
xor
push
outsl
test
push
call
sub
sarb
sbb
xor
mov
clc
movsb
sub
repz
icebp
movsl
dec
push
cmc
das
mov
enter
cltd
cmp
lahf
leave
lock
sbb
std
jecxz
ss
mov
cmp
sbb
cmpb
scas
adc
cmp
push
mov
xor
pop
loope
pop
mov
stos
in
pop
ret
sub
jne
prefetcht0
iret
hlt
hlt
inc
mov
pop
int3
outsl
loope
test
inc
into
or
shlb
aaa
fsin
mov
out
rcr
push
fdivrp
dec
inc
dec
aaa
test
leave
sbb
test
rcrl
push
fistl
mov
mov
and
testl
jl
xor
jns
bound
in
iret
dec
cmp
mov
dec
daa
enter
repz
fs
cli
scas
xor
loop
and
aas
insb
mov
sbb
jl
mov
rcl
xchg
test
gs
jno
jmp
fsubrl
xor
ficompl
mov
push
inc
jne
js
jno
in
pop
or
sbb
pusha
lcall
sub
imul
hlt
imul
mov
scas
sub
or
loope
jae
cli
lahf
cli
jne
mov
cmp
inc
mov
mov
outsb
setns
inc
out
lock
mov
mov
jg
stc
and
lods
bound
sti
fidivrs
stc
xor
mov
mov
cli
pusha
insl
pushf
mov
sbb
dec
sbb
lret
or
testl
add
ficoms
xchg
and
test
inc
mov
jmp
call
fsubs
pop
mov
out
stos
popa
test
lcall
xor
jp
lcall
nop
and
mov
or
and
loope
adc
jb
ja
mov
xchg
pop
out
or
mov
in
sub
fwait
sbbb
rcll
dec
int3
pop
push
xchg
mov
or
xchg
xlat
and
sbb
fs
sbb
cmpsl
mov
push
inc
and
adc
pop
test
out
push
add
lock
movsb
popa
xchg
xchg
push
scas
and
aaa
xor
rorl
inc
fs
es
sub
inc
pop
dec
leave
lret
jne
push
adc
lahf
lea
scas
push
dec
jne
pop
xchg
or
out
cmpsl
out
jae
jo
repz
sbb
je
sub
fistps
jg
xor
sarb
sub
add
xchg
je
nop
sarl
mov
adc
mov
test
pop
pop
mov
rorb
cmc
xor
xor
ljmp
lock
stc
scas
mov
mov
rorb
bnd
sahf
push
into
sti
mov
push
ret
faddl
test
pop
test
shll
repnz
leave
mov
ss
add
movsb
jbe
inc
jbe
lods
or
repz
andnps
inc
pop
dec
fldt
or
mov
sub
movsb
int3
push
inc
loop
adc
cs
and
mov
mov
mov
pop
pop
stos
xchg
push
push
pop
pop
xor
jno
and
sbbl
inc
jecxz
in
leave
dec
mov
add
fdivs
pushf
sub
xorl
int3
xchg
add
sbb
int
jp
cwtl
fwait
and
push
out
jae
xor
andb
cs
lahf
std
ror
and
enter
or
xor
push
imul
cmc
cmp
xor
dec
push
rcrb
shl
sub
daa
sbb
rorb
popf
or
ss
and
sub
or
xor
jle
rorl
out
out
int
push
mov
ds
lret
out
xchg
sbb
fdivl
pop
and
enter
push
jb
or
sub
mov
push
aaa
adc
loop
popf
xor
int
cltd
sbb
sub
gs
sti
das
xchg
jae
out
jge
jecxz
icebp
pop
arpl
imul
mov
js
jp
cmp
add
jo
push
jge
rcr
jp
inc
jge
jle
inc
ja
xchg
pop
cmpsl
ror
lods
add
decb
mov
mov
pushf
jnp
icebp
outsl
and
pop
mov
movsb
cmp
loope
nop
xchg
xlat
adc
mov
cltd
fcomps
sub
xlat
mov
cwtl
add
ret
and
hlt
xchg
call
pop
cmp
inc
fdivr
jmp
mov
adc
add
test
js
rorb
jo
pusha
jo
cmpsb
adc
nop
inc
lret
lds
outsb
daa
je
mov
repnz
mov
loopne
sbb
dec
mov
movsl
and
and
repnz
xorl
pop
pop
xor
xor
adc
cltd
inc
sti
pop
mov
leave
repz
push
shr
mov
inc
rolb
outsl
mov
cmp
pop
in
or
repnz
aas
stc
es
leave
in
dec
pop
jnp
nop
stos
test
push
mov
popf
repz
repnz
sbb
mov
gs
std
pop
cmp
mov
lcall
aaa
dec
pusha
xchg
lds
mov
adc
xchg
push
cmp
daa
into
cmp
lret
adc
imul
fnsave
sti
scas
aaa
jne
test
push
push
sub
push
movsb
add
push
fldcw
mov
mov
add
pop
mov
mov
pop
int3
stos
icebp
jp
int
aaa
mov
mov
inc
iret
xor
jnp
xor
test
jo
imul
dec
cmp
dec
stos
sbb
test
es
push
scas
es
cmp
xor
loopne
add
sbb
mov
adc
dec
test
hlt
jns
cmp
mov
pop
add
cwtl
and
aam
decl
mov
xor
aam
adc
and
add
mov
je
outsl
loope
sbb
test
lcall
mov
dec
sbb
aaa
fiadds
mov
pushf
or
or
imul
jp
pop
inc
xchg
or
or
in
cs
and
pop
pop
mov
leave
sarb
ljmp
es
jge
test
jg
pop
mov
or
out
mov
sub
jne
xchg
jle
mov
add
pop
cmp
stos
inc
or
bound
xchg
js
inc
rorb
inc
jmp
cmp
out
xor
ret
popf
mov
mov
andb
dec
je
movsl
popa
push
mov
int3
add
jo
fs
push
cmc
pop
test
lahf
stos
aam
push
mov
mov
inc
push
or
sub
rclb
sub
cmp
scas
leave
jnp,pt
clc
add
sahf
mov
sbb
dec
jae
mov
repz
dec
es
push
stos
outsl
lret
or
push
aam
jmp
dec
mov
int
xchg
pushf
cmpsb
into
mov
aaa
push
push
sbb
in
adc
cwtl
faddl
xor
icebp
push
mov
or
mov
cmc
ljmp
call
int3
dec
mov
adc
in
jbe
inc
cmp
mov
push
notb
incl
dec
dec
in
or
inc
mov
les
ficoml
push
lret
test
mov
loope
jo
push
loop
mov
sahf
dec
pop
pushf
and
sbb
add
inc
fdivp
adc
nop
cmp
sbb
emms
mov
inc
lods
cwtl
mov
outsl
sahf
cmp
add
rcl
sbb
test
pop
ljmp
mov
ret
shrb
fcomps
adc
arpl
sub
rcll
jae
xor
push
pop
or
iret
shl
cmpsb
adc
fsubrs
stos
push
addr16
dec
cmp
xchg
dec
lds
pop
adc
xchg
outsb
call
pop
insb
sub
and
push
and
mov
jge
repnz
rcr
test
out
jns
shrb
into
xchg
xor
sub
inc
enter
std
fwait
and
ds
jns
mov
iret
dec
int
imul
jo
out
ret
xchg
dec
mov
leave
shl
xchg
jne
fbstp
lds
pop
cmpsl
push
adc
out
aad
add
and
and
pop
or
adc
mov
jg
jle
stos
and
jnp
sahf
mov
in
loop
xchg
dec
sub
xchg
or
pop
ret
add
push
imul
stos
push
jo
jle
stos
lock
lret
mov
fadd
loopne
push
inc
and
lods
fisubs
pop
out
sbb
mov
adc
xor
popa
xchg
push
mov
mov
inc
inc
sbb
call
repnz
pop
mov
jl
push
and
stos
int
or
ss
gs
movsb
mov
pushf
cmp
lods
or
inc
cmp
sahf
jnp
jmp
add
push
int
xchg
cmp
test
mov
push
lds
mov
and
mov
sbb
data16
les
sub
mov
mov
push
and
cmpsb
jg
add
dec
add
or
clc
or
mov
pop
add
xor
scas
jns
hlt
pop
dec
or
test
adcl
push
cmc
data16
xor
add
jne
xor
mov
out
jg
sbb
cmp
or
dec
lret
rcl
mov
sbb
outsb
jmp
xor
das
pop
punpcklwd
sbb
jae
jnp
les
mov
or
mov
mov
in
jp
aaa
mov
sbb
hlt
add
iret
insb
aam
arpl
roll
or
sbb
ss
mov
mov
inc
jp
outsl
sbb
pusha
cmp
je
cmp
push
push
adc
lcall
ljmp
jmp
xor
inc
mov
lahf
in
popa
push
ss
sti
mov
inc
or
or
popa
and
xchg
ret
lret
push
loop
loop
movsb
fisubrs
jae
adcb
or
adc
jecxz
testl
xor
arpl
pop
mov
push
mov
lds
jg
inc
jne
inc
pop
idivb
repnz
scas
repz
xor
jecxz
ja
xchg
or
in
lds
xorl
testb
or
xchg
ret
push
imulb
iret
test
adc
jmp
push
xor
or
mov
dec
push
out
sub
mov
in
ss
ljmp
adc
adc
and
call
insb
pop
jmp
lcall
fmul
data16
push
jmp
xabort
bound
pop
jae
sub
in
imul
dec
xchg
push
in
in
jle
sbb
xchg
insb
xor
addl
xchg
ret
in
inc
loop
push
out
das
pop
movsb
cmp
test
push
es
mov
xorl
incb
dec
lds
sub
dec
inc
ja
jne
jmp
pop
fadds
shlb
xchg
and
addb
mov
and
mov
pusha
cltd
frstor
sbb
inc
mov
inc
lret
pushf
outsb
in
and
addr16
jl
in
sub
sbb
cmpsb
jmp
push
mov
cwtl
subb
sti
pop
mov
jnp
and
mov
icebp
adc
loope
movsl
push
test
sub
and
sub
jno
sub
xlat
or
call
call
pusha
shll
mov
fisttps
jae
pop
jl
pop
xor
dec
test
lret
lahf
pop
popf
mov
test
testl
rol
adc
cmc
scas
rcrl
mov
repz
call
das
jne
pop
pop
mov
sub
cltd
jl
cmp
push
add
cmc
add
cmp
arpl
push
es
lds
or
addr16
add
add
inc
push
sub
mov
addb
imul
adc
stos
idivl
dec
and
rolb
aam
mov
aad
ljmp
xchg
cmpsl
adc
decl
adc
adc
ja
mov
out
sub
cmp
mov
ds
lahf
ss
jae
lahf
insb
jl
in
or
mov
xchg
push
jbe
out
inc
lahf
mov
inc
cmpsb
cmpsl
pop
ds
push
add
outsl
daa
out
sub
add
repz
into
mov
mov
filds
cmp
ja
nop
jg
or
sub
xchg
lret
sub
xor
cwtl
adc
inc
popa
sbb
inc
andb
mov
mov
pop
or
fs
jge
aaa
leave
outsl
int3
cmp
lods
push
es
inc
xchg
movsl
xchg
xchg
pop
scas
push
xor
inc
mov
or
jl
push
mov
insl
shlb
leave
cmp
cmp
leave
jp
jns
or
leave
add
test
pusha
xchg
loop
enter
dec
cwtl
and
pop
in
cltd
dec
hlt
mov
stc
jo
add
mov
cltd
jae
add
out
je
out
cmc
push
in
in
dec
cmp
sub
addr16
rcr
mov
xchg
adc
cmpsb
mov
jno
movsl
addr16
mov
lahf
mov
les
nop
je
dec
push
aaa
xor
fs
cmc
jae
dec
loop
and
sbb
addr16
pop
xlat
push
in
pop
push
jne
or
or
cmpsb
test
jo
adc
aaa
movsb
movsl
lods
or
or
push
scas
adc
xchg
push
arpl
cli
addr16
mov
mov
lcall
xor
pushf
mov
test
dec
cli
inc
loopne
in
mov
inc
jb
inc
mov
adc
gs
jnp
inc
xor
inc
movsl
xor
push
jmp
xor
xchg
adcb
mov
cltd
push
cmp
sbb
fld
and
fbstp
inc
lret
subb
es
in
addr16
jae
sbb
mov
or
xor
add
adc
adc
loop
sub
inc
mov
or
mov
imul
pop
xchg
xchg
dec
dec
push
repnz
cmpsb
repnz
cmpl
jo
lods
cs
pop
fcomps
dec
adc
xor
or
aaa
add
xchg
icebp
or
movsb
adc
push
or
mov
pop
vandps
mov
clc
sub
out
and
int
push
xchg
clc
mov
loope
mov
mov
push
sub
jb
cmp
enter
mov
scas
data16
scas
enter
xor
mov
inc
mov
push
lret
in
ljmp
dec
dec
mov
xchg
dec
cmp
mov
and
xor
loop
push
insl
inc
cld
mov
shrb
js
in
inc
dec
stc
rcrb
and
inc
jle
sbb
addr16
je
dec
pop
test
push
aaa
scas
movsl
or
mov
cli
or
adc
add
push
dec
pop
jbe
cmpb
xchg
mov
adc
sahf
arpl
xor
jge,pt
out
mov
int3
jp
xchg
xchg
xor
dec
pusha
aam
mov
pop
pusha
sbb
fmuls
sbb
jb
sub
mov
ret
jp
mov
in
insl
ret
lret
fmul
pop
das
out
or
push
jmp
mov
xchg
dec
int3
mov
in
mov
outsb
lods
mov
sahf
jo
add
lret
cltd
imulb
popa
out
dec
xor
xor
scas
scas
mov
adc
sub
sub
dec
sub
jae
mov
xor
cmpsl
inc
mov
inc
or
loopne
cmp
stos
or
push
testb
stos
xchg
sub
int3
test
cmp
popa
out
scas
adc
rolb
scas
adc
fcmovnu
mov
out
mov
pop
ret
inc
incb
icebp
clc
or
sti
xchg
insb
fildll
sarl
cmpsl
nop
lcall
lods
push
mov
adcl
mov
ret
adc
adc
or
or
xor
sbb
call
out
outsl
addl
loope
cmp
idivb
adc
lea
clc
outsl
xchg
addb
mov
pop
sbb
frstpm(287
xor
cmp
mov
sub
cld
ret
out
jnp
mov
clc
es
je
mov
nop
add
xchg
iret
jbe
shlb
test
and
jns
xlat
adc
jns
jle
inc
mov
push
clc
stos
rorl
mov
mov
push
repnz
daa
fwait
mov
mov
adc
and
arpl
ret
je
dec
js
mov
lret
sbb
mov
ss
or
arpl
loopne
cmc
pop
sbb
call
and
jecxz
mov
cltd
testl
sub
enter
daa
js
jp
sbb
popf
mov
push
xchg
test
sbb
aaa
push
adc
mov
add
inc
mov
imull
and
add
fwait
mov
push
and
mov
dec
daa
loopne
mov
cmc
loope
stos
cmp
loope
dec
jmp
and
xchg
adc
fbstp
sbb
pushf
rol
fidivrl
sub
pop
lahf
or
mov
shr
clts
and
jl
sbb
and
aad
mov
sub
fcom
and
xlat
stos
adcl
xor
mov
xor
adc
inc
push
xor
or
xchg
jno
pop
push
push
cld
ja
inc
sub
xchg
nop
adc
repz
jmp
je
sbb
xor
pushl
and
cwtl
sbb
inc
negb
ret
rcrl
movsb
jno
pop
dec
call
cli
inc
xor
push
jl
in
mov
jl
dec
push
ljmp
es
mov
jb
es
jns
mov
add
call
cmp
rorb
mov
dec
js
mov
cmc
cld
add
js
cwtl
xchg
std
and
ja
or
and
fwait
mov
inc
call
popf
int
popf
push
cmp
push
and
dec
add
test
rorb
inc
or
test
mov
out
pop
pop
or
fsubrs
xor
movsl
mov
into
and
pop
dec
mov
mov
xchg
mov
test
mov
mov
cmp
lock
cmpsl
sahf
sbb
lea
out
lcall
mov
adc
dec
mov
fnsave
push
frstor
xchg
jns
outsb
xlat
push
mov
dec
clc
popf
test
push
dec
mov
mov
test
bound
lret
and
gs
cli
ds
in
cltd
lds
cld
xchg
popf
xchg
fnstsw
mov
adcl
pop
jle
into
jmp
sbb
loop
cmpsl
or
mov
and
adc
sub
xor
cmpsl
sbb
push
cmp
in
jne
out
cmpsl
xchg
flds
mov
sarb
rorl
inc
push
adc
or
pop
cmp
repz
push
and
mov
mov
sbb
int3
xchg
and
mov
xor
ja
push
outsb
scas
int
dec
fs
test
out
add
xchg
inc
mov
out
out
push
mov
ljmp
mov
and
lock
addb
push
xchg
cmp
aam
xor
dec
in
xorl
sbb
mov
repnz
mov
test
xor
daa
xchg
mull
pcmpgtb
mov
iret
xchg
rcrl
push
mov
inc
call
cltd
subb
ja
jo
jp
cli
int3
add
dec
adc
pushf
sbb
repnz
pop
je
adc
or
test
add
adc
inc
push
lock
mov
adc
call
mov
stos
shrb
sarb
or
ljmp
mov
sbbl
ljmp
sbbb
mov
xchg
xchg
jae
cmpsl
je
jo
jb
cmc
jl
dec
int
divl
mov
adc
lret
mov
leavew
repz
jle
mov
pushf
stos
push
dec
divb
icebp
mov
add
xor
push
je
loopne
in
xor
push
icebp
adc
fsub
dec
daa
jo
jae
inc
add
lret
jecxz
gs
mov
int3
insb
lds
insb
popa
push
mov
mov
mov
pop
mov
xor
push
out
xchg
hlt
inc
and
cmc
jne
lods
and
arpl
xchg
push
mov
leave
push
inc
push
pop
add
dec
jle
aad
mov
js
iret
loop
std
mov
mov
out
mov
fs
fdivs
es
test
add
push
out
mov
add
cwtl
addr16
xchg
xor
sub
idiv
mov
movsb
loope
jae
mov
mov
out
lds
cmpsl
loope
jbe
or
cmp
xor
add
sbb
jns
aaa
xchg
mov
stos
enter
hlt
xor
stos
aad
int3
add
ss
test
sbbb
push
xchg
xchg
loop
push
jno
cwtl
imul
mov
cli
cmp
loopne
cs
bound
mov
pop
cmpb
std
mov
adc
jp
jmp
inc
xchg
mov
fisubrl
push
lea
lret
out
mov
sbb
repz
andl
cmp
mov
imul
cli
outsl
cli
out
or
out
data16
iret
shlb
mov
pop
gs
daa
jle
sub
cld
stos
pop
xchg
fcmovbe
scas
dec
addr16
and
adc
nop
mov
addr16
jmp
scas
or
adc
jb
pop
mov
call
mov
sahf
mov
mov
mov
pop
pop
push
and
mov
mov
mov
and
test
cmp
add
lea
pop
test
out
jecxz
repz
fstpl
xor
mov
dec
mov
sub
adc
jne
movsl
sub
rolb
notl
xchg
dec
mov
std
add
sbb
loope
xchg
out
icebp
mov
jl
add
incb
mov
out
or
call
int3
dec
mov
das
or
roll
js
je
jg
jns
inc
xchg
decb
cmp
loop
pop
imul
int3
inc
xchg
and
lret
lcall
add
and
xchg
sbb
jl
cli
dec
lea
sub
in
stc
hlt
movsl
jb
insb
sahf
xlat
cmp
aad
dec
mov
or
inc
into
jns
mov
xchg
lds
sti
and
fdivl
sti
shll
xlat
in
mov
pusha
in
sub
xchg
and
repnz
fdivrs
std
mov
imul
sbb
lcall
dec
in
addr16
jg
and
mov
jmp
fsubp
pop
daa
int3
mov
leave
imul
pop
jg
mov
ljmp
xlat
sbb
jo
fwait
lea
dec
xchg
mov
xor
or
addr16
pop
fbstp
insl
dec
adc
mov
loop
wbinvd
and
xchg
fcmovu
add
pop
out
adc
ret
cltd
fldl
xchg
add
and
lea
inc
je
xchg
push
cwtl
push
lds
cmp
fbld
jmp
inc
shl
mov
dec
fdivl
int3
jecxz
test
sub
loopne
in
jge
mov
cmp
mov
adcl
jno
test
sbb
outsl
outsb
clc
shll
sbb
aas
sbb
mov
cmp
rclb
ret
loopne
xchg
es
repz
add
stc
cltd
dec
bnd
clc
in
out
inc
xchg
stc
or
clc
push
pop
xchg
sbb
push
ljmp
or
dec
cmp
or
mov
push
sarb
sub
cmp
adc
add
dec
jne
adc
mov
mov
lret
imul
mov
mov
mov
movsb
sbb
sbb
mov
mov
scas
or
js
xchg
in
cli
add
mov
push
mov
xchg
inc
stos
movsb
test
int
jg
lahf
addr16
stos
lret
jp
insb
lea
sbb
or
inc
adc
iret
cmc
mov
dec
rcrb
pop
fldt
loopne
js
push
cli
xor
dec
jmp
mov
lahf
sbb
pop
insb
loope
adc
push
jmp
xor
inc
lret
rcll
daa
ss
pop
adcl
nop
bnd
mov
mov
je
orb
mov
inc
maxps
xorb
rolb
cld
sub
xor
dec
pop
xchg
sbb
jl
les
mov
push
and
add
pop
lock
fsubrs
push
repz
sahf
mov
dec
jmp
mov
mov
es
mov
fmul
push
lsl
inc
cmp
fisubrs
add
dec
test
rclb
aad
daa
in
cs
in
mov
xchg
pushf
mov
rorb
mov
gs
inc
mov
mov
sub
push
jbe
or
jne
pop
sarl
adc
jg
lods
add
pop
and
jne
jb
cltd
dec
test
pop
xor
push
insl
sbb
lret
and
ljmp
add
pop
sub
and
movsb
jne
sub
fsub
xchg
jg
dec
jge
lods
add
or
jp
test
add
bound
xchg
and
and
push
xor
mov
loope
add
call
popa
movsb
jne
mov
cli
xchg
rcrl
xchg
shll
in
fldt
arpl
push
sub
xlat
wbinvd
mov
jne
out
rolb
scas
pop
jmp
nop
movsl
xor
xchg
subl
in
pusha
xor
adc
mov
fildl
push
cltd
pusha
cmpsb
negb
fidivs
shlb
mov
push
hlt
fldz
hlt
sub
or
hlt
push
repz
out
jmp
lahf
cmp
xor
imul
dec
xchg
sub
lahf
add
pop
sti
push
xchg
sbb
dec
xchg
pop
jae
push
sub
xchg
ja
mov
nop
jle
sbb
xor
pop
icebp
paddsw
bound
and
test
jb
adc
mov
xor
rcrl
xor
mov
or
mov
mov
mov
in
add
pop
jl
ljmp
or
mov
insb
mov
mov
push
ret
and
sub
dec
cmp
nop
or
aad
popf
fsubs
mov
push
xchg
jbe
shl
orb
popa
js
pushf
push
lahf
xor
sub
cmp
xchg
or
stc
mov
pusha
scas
nop
fstl
lds
or
inc
into
xor
dec
ret
sti
cmpsl
mov
jnp
cmp
gs
mov
dec
rol
pop
leave
xchg
cwtl
mov
fs
pushf
pop
jns
lret
pop
fsubr
lods
xchg
push
addr16
xchg
mov
mov
xor
aad
outsl
push
repz
rorb
sub
mov
dec
sahf
pop
pop
cwtl
sub
sub
lcall
sbb
dec
xchg
imul
test
or
sub
lcall
jmp
fnstenv
cmp
shl
jmp
cli
movsl
cmp
mov
push
fnstcw
jp
cmp
jno
dec
ret
push
adc
adc
pop
push
xor
push
testb
test
adc
add
dec
xchg
mov
rdmsr
in
xor
and
test
push
adc
jp
xor
mov
fsts
leave
inc
fs
dec
fsubrs
bound
xchg
outsb
cld
adc
lret
push
ud2
and
jnp
xchg
icebp
andl
fadds
rcrb
jle
insl
mov
les
mov
stc
pusha
or
mov
outsl
fwait
sbb
dec
jns
sbb
pop
leave
ja
xor
jbe
or
pop
lahf
shlb
jne
mov
out
xor
jbe
aaa
sbb
xchg
jns
jae
add
es
fwait
test
pop
xor
loope
xchg
bound
jp
cmc
adc
xchg
das
lret
or
in
mov
out
push
repnz
cmpsb
push
pushf
jle
cld
mov
pop
int3
xchg
stos
cltd
jb
xlat
sarb
push
push
jge
xlat
sbb
lods
popa
aad
shl
push
lret
out
adc
mov
inc
ss
daa
into
and
adc
sub
add
sarl
fstl
jge
inc
popf
andb
sub
jp
dec
out
orb
sarl
fadds
push
pop
movsb
pop
imul
mov
lcall
outsl
ret
cmp
sbbl
dec
ds
insb
int
test
pusha
shlb
stc
mov
bound
sub
test
insl
mov
repz
cmp
js
sbb
jp
pop
jbe
ret
jmp
jo
add
mov
out
les
jne
loop
ret
sub
sbb
dec
imulb
pop
ljmp
call
or
ret
popa
lods
sbb
add
mov
or
das
pop
jo
add
xor
mov
aad
sub
enter
ret
push
jl
cltd
cmp
imul
popa
add
dec
sti
dec
inc
add
mov
fdivp
pop
outsl
pop
mov
arpl
loop
into
pop
pop
stos
insl
sub
pushf
xchg
push
es
xor
mov
pop
xor
fxch
stos
cmpsl
nop
adc
mov
mov
cmpl
sub
cli
and
pop
sbbb
in
ret
sub
scas
mov
sub
je
jns
add
inc
out
addr16
pop
enter
pop
sbb
push
push
jmp
cli
leave
mov
jnp
rol
pop
dec
fidivl
repnz
popf
mov
pop
push
cmp
pop
mov
rcll
loopne
push
add
fldl
out
jns
fnstcw
lahf
in
xchg
jb
inc
xchg
adc
stc
dec
sti
push
stc
lret
and
fwait
ja
lcall
cmp
fs
inc
lret
dec
iret
adc
adc
jo
lahf
add
add
inc
mov
sbb
mov
or
mov
sub
and
mov
test
pusha
roll
push
aad
leave
rep
cmp
mov
ficoms
das
lea
je
movsl
xor
dec
push
sub
outsl
outsb
rorl
aaa
cli
xchg
sub
mov
fbstp
fisttpll
loope
call
lds
imul
outsb
loopne
mov
test
test
cmc
sti
pop
js
mov
lea
cli
dec
or
lret
push
nop
fidivl
shr
jp
test
imull
inc
mov
mov
xlat
mov
lds
mov
std
loope
mov
mov
imul
cmp
arpl
mov
mov
mov
sub
in
cmpl
pop
movlps
cld
sbb
xor
test
jo
dec
fmul
jno
pop
lcall
sti
and
fcoml
fadd
in
sbb
cwtl
mov
and
cwtl
leave
js
inc
lcall
test
insl
mov
enter
push
inc
push
dec
imul
jnp
jp
nop
xor
fmull
or
ljmp
int
int
xor
adc
arpl
int
movsb
adc
sbb
push
cmpsb
xor
push
shl
loope
lods
cs
dec
mov
aas
mov
adc
inc
mov
clc
or
xchg
and
jns
adc
js
push
pop
or
or
xor
adc
xchg
pop
or
mov
cmp
jecxz
xchg
das
sub
shll
push
add
cs
out
cwtl
lret
mov
jno
arpl
pop
out
xchg
cmp
lea
xchg
aaa
push
cmp
cs
and
push
mov
and
jmp
aas
cmp
or
and
fdiv
add
out
divl
adc
adc
add
jmp
test
popa
pop
xchg
xor
lock
cmp
adc
adc
lret
mov
fidivrl
shl
adc
ljmp
xchg
into
scas
lock
es
xchg
mov
in
pop
jno
jmp
xchg
pop
sbbb
sarl
out
xchg
and
je
and
adc
arpl
cmpsb
inc
roll
pop
call
or
sbb
xchg
aas
pop
xchg
stc
adc
mov
in
cmc
push
popf
aaa
jae
and
sbb
enter
xor
pop
add
js
lods
jo
stc
cmpb
insl
jnp
cmp
xor
shl
xchg
push
pop
xchg
pop
mov
xor
xchg
popa
sub
jl
cld
sbb
test
jecxz
xor
lret
in
or
test
mov
or
xor
cs
movl
xchg
adc
stc
das
and
rclb
pop
int3
xchg
shll
repz
je
xor
jp
in
pusha
jne
push
xchg
and
sti
sbb
cmp
pop
push
xchg
add
mov
pop
xchg
movsl
mov
or
adc
mov
dec
outsb
lea
pop
dec
rcrb
cmpsl
js
sbb
sbb
fcmove
fnstcw
loopne
dec
out
and
jns
in
inc
bound
xor
xchg
jge
sub
nop
mov
xchg
daa
int3
negl
wrmsr
xchg
fidivrs
adc
in
mov
adc
mov
cs
add
arpl
cmp
push
push
stos
cmpsl
mov
sbb
aad
push
sbb
insl
fldcw
addr16
addr16
sbb
fstpl
pushf
push
insb
push
jbe
fadds
xchg
mov
add
gs
sti
popa
sti
pusha
cmp
pop
insb
or
jbe
aam
into
and
add
ret
lock
sbb
push
ljmp
jnp
je
int
cmc
pop
pop
hlt
fstpl
stos
aad
mov
and
out
icebp
push
dec
dec
and
xchg
jmp
cmp
xchg
pop
out
iret
test
ret
out
or
mov
cmp
cmpsl
xor
cmpl
add
pop
or
cli
push
std
ja
stc
inc
rcrl
sbb
call
mov
dec
and
and
leave
and
jne
and
fdivrs
lret
sub
push
add
push
dec
push
fistps
imul
xor
push
rcrb
jecxz
sub
sub
adc
lods
push
fsub
out
adc
les
sbbl
jg
xchg
or
rcll
pushf
lret
mov
add
or
or
in
decb
cmp
es
mov
mov
imul
xchg
add
ljmp
out
push
sub
test
fs
repnz
xlat
mov
inc
pop
sub
in
lcall
mov
pop
sbb
int3
stc
sub
push
in
iret
lods
nop
add
icebp
test
mov
fldz
mov
test
leave
fisubrl
sbb
mov
mov
into
inc
loopne
test
mov
xorl
xchg
into
mov
and
xchg
jmp
sti
pop
push
jnp
pop
push
inc
dec
mov
rclb
add
ja
mov
fistpll
sub
insl
fiaddl
dec
or
pusha
sbb
fucom
rcrb
lock
xchg
loopne
loop
pusha
inc
mov
xchg
cmp
and
mov
push
inc
repz
jg
xor
sbb
leave
test
inc
sub
and
imul
adc
fdivrs
pop
xchg
mov
jge
mov
mov
fistl
jp
fucomp
imul
mov
xlat
in
adc
loope
frstor
pusha
sbb
jg
push
mov
cmp
jb
adc
xchg
pop
clc
insb
mov
jge
jne
sbb
ret
les
jae
sub
pop
dec
cli
aaa
push
add
cmpl
sbb
jb
mov
xchg
mov
inc
test
jle
cmpsb
fstp
incb
push
fadds
xchg
mov
xor
pop
lret
das
fldz
dec
or
sbb
loope
add
push
repnz
jl
cmp
adc
ret
frstor
rcrb
dec
cs
andb
pop
inc
dec
rorl
push
stos
sub
sbb
add
add
js
das
test
test
ficoms
sbb
arpl
in
pop
xchg
ds
cmpsb
outsl
sbb
mov
mov
xor
jge
push
popa
fidivl
mov
int3
std
adc
pusha
lods
xorl
push
jne
cmp
stos
push
sti
inc
pop
adc
in
aas
sub
sub
mov
mov
test
xchg
jbe
data16
or
bound
sbb
shlb
fucomp
push
dec
xor
jl
shl
cmp
dec
xor
sbb
jnp
sahf
lret
dec
jns
dec
les
mov
les
or
pop
testb
test
jecxz
ljmp
jg
aam
mov
adc
mov
lret
sti
jbe
mov
daa
arpl
jle
cmc
das
cltd
inc
mov
xor
sbb
inc
xchg
cmc
sub
adc
xchg
and
xchg
adc
or
enter
sahf
daa
aaa
xor
sbb
push
fucomp
mov
and
in
adc
push
in
add
mov
push
pushf
es
push
sbb
imul
scas
into
ds
lret
shr
insb
outsl
add
sti
jmp
xor
call
arpl
sbb
push
jmp
aam
lcall
daa
xchg
dec
sbb
in
fisttps
in
inc
hlt
cmpl
rol
inc
leave
fnstcw
xchg
shl
adcl
mov
cwtl
dec
dec
cmp
push
inc
or
cmc
shll
loope
sbb
or
in
fbstp
jbe
sbb
cmp
dec
pushf
int
rolb
or
or
push
cmpsl
push
mov
stos
cmp
insb
mov
int
push
ret
adc
xchg
push
mov
call
and
cmp
and
adc
sbb
mov
mov
es
lret
loopne
outsl
lds
mov
scas
lods
loop
xor
jecxz
orl
xlat
push
scas
mov
cmp
aaa
dec
push
and
out
add
popa
pop
add
push
cmc
aad
ret
dec
inc
xchg
adc
ja
mov
jp
es
pop
or
sub
cmp
pop
lret
mov
dec
sbb
cmp
fwait
in
stos
xchg
shlb
in
adc
cmc
ljmp
push
push
jne
int
dec
ret
jb
pushf
xor
mov
push
ds
ss
out
mov
test
sbb
jbe
push
sub
mov
int3
pop
dec
test
push
push
pop
fsubr
nop
int3
inc
notl
fsubrl
xchg
iret
test
popa
in
pop
imul
xor
repz
jne
nop
mov
pop
movb
adc
and
or
dec
dec
test
push
shl
lock
push
imul
icebp
mov
adc
movsl
push
pop
inc
cmp
push
mov
push
lock
aas
std
inc
iret
mov
jb
pop
in
dec
sbb
out
repz
in
mov
adc
data16
ljmp
sbb
ret
cli
ds
or
pop
sbb
adc
test
add
pop
call
and
cs
xchg
data16
mov
aas
pop
pop
cmpsb
jae
mov
add
mov
aam
stos
jmp
mov
dec
mov
xchg
xchg
mov
and
test
fwait
mov
add
xchg
jns
int3
enter
dec
sarb
dec
mov
imul
mov
sbb
lea
and
xlat
mulps
das
mov
rolb
mov
in
dec
fisttpl
add
ficompl
sub
and
es
pop
nop
jae
loopne
mov
jo
call
out
ja
es
pop
sbb
or
rorl
jge
icebp
not
into
lds
mov
adc
lcall
or
icebp
push
sub
push
loopne
lds
mov
push
lahf
xor
je
je
fisttpll
xchg
imul
aad
cld
outsb
dec
bound
pop
les
je
jb
and
ss
mov
sbb
mov
in
mov
mov
fldenv
imul
push
xlat
jmp
mov
lea
and
out
jge
push
mull
cli
aaa
cmp
loop
lea
pusha
xchg
adc
push
push
sub
cmp
fisttpl
push
cmpsb
pop
jno
nop
dec
jno
outsl
jb
lea
cs
jge
sub
push
insl
push
faddp
xchg
xor
popl
inc
mov
mov
push
sarb
xor
test
mov
sarl
jbe
cmpsb
xor
into
cmp
hlt
sti
pop
inc
pop
mov
ficoms
cmp
js
xchg
ds
sbb
fisubrl
leave
adc
xchg
push
adc
push
movsl
in
inc
xlat
push
adc
fisttpl
cmpsb
cmp
fwait
and
js
pop
fstpt
or
or
sbbl
jno
out
insb
dec
and
xchg
cmp
bt
arpl
and
pop
dec
je
les
aam
mov
fs
push
push
lret
push
loope
mov
xor
fsts
push
xchg
out
lahf
adc
arpl
mov
add
std
dec
insb
lret
xor
icebp
aas
mov
icebp
cli
or
loopne
dec
decl
ljmp
mov
jle
fdivl
add
cmpsl
andl
loope
loope
movsb
loope
rcrl
adc
pop
xor
stc
add
dec
rolb
dec
jbe
jne
fmuls
pushf
mov
or
or
jne
out
cmp
mov
lea
add
ficoms
lret
jg
sbb
jmp
adc
icebp
push
mov
imul
add
out
mov
pusha
jns
adc
xchg
push
add
inc
xchg
push
loope
push
fucom
sbb
pop
out
xor
sub
jo
bound
mov
cmpsb
stc
iret
xor
cmpb
in
pop
pusha
dec
fimuls
mov
inc
bound
leave
in
jl
sbb
lods
xchg
pop
mov
sti
pusha
push
testl
dec
repnz
pop
into
xorl
xchg
sbb
adc
daa
xchg
popf
jne
cmpsb
mov
aaa
insl
loopne
jno
sarl
in
dec
popf
jo
xor
cmp
mov
mov
shrl
cli
incl
mov
bound
fs
repnz
insl
rcl
jl
add
xlat
sarl
out
inc
pop
sti
in
xor
mov
and
shll
out
and
xchg
js
aaa
jl
popf
add
nop
movsb
idivl
stc
fimuls
lret
inc
jl
subb
jp
es
xor
jl
scas
pop
insb
sub
lds
mov
mov
test
das
mov
push
sub
or
fwait
inc
roll
jns
daa
arpl
mov
pop
inc
movsl
rep
fcompl
outsl
sub
cmc
dec
mov
push
mov
int3
in
push
cmp
pop
sti
loop
mov
out
sbbl
pop
pop
xor
imul
icebp
test
mov
psubw
push
sub
mov
and
lods
pop
push
test
inc
adcl
mov
movsb
lret
xchg
ret
js
rcrb
jae
mov
out
mov
popa
mov
movb
nop
into
mov
popa
jg
mov
pop
jo
lret
xchg
fwait
mov
out
push
adcb
cmp
inc
jp
xor
or
ds
pop
loopne
inc
imull
cli
pop
shll
call
out
cmp
fcoml
xchg
shr
mov
jbe
pop
cltd
outsl
pop
imul
dec
pop
cmp
or
mov
cs
push
push
ret
test
je
xchg
xor
jl
in
shld
imul
adc
push
push
or
cli
add
mov
lods
pop
into
mov
jnp
filds
xchg
aad
add
inc
jle
ljmp
mov
and
call
mov
xor
lea
xlat
mov
mov
mov
mov
push
lret
stos
add
cmc
mov
dec
adc
inc
leave
and
push
pop
or
sbb
lea
lods
cmpl
and
and
lahf
dec
xor
hlt
rcr
fcoml
test
xchg
loopne
dec
mov
imul
fs
mov
xchg
js
cmp
hlt
daa
jg
int3
cmpsl
nop
mov
dec
mov
xchg
adc
out
push
rcl
pop
fldt
sbb
arpl
add
and
ffree
push
pop
test
mov
add
sub
mov
inc
dec
jge
xor
movsb
jbe
cmpsb
cmc
pop
xor
push
adc
fcoms
clc
pushf
sbb
enter
adc
jo
jl
push
rclb
sub
shll
ret
jne
sbb
orb
lods
adc
mov
and
fwait
ret
mov
inc
pushf
cmp
jno
jle
movb
mov
sub
shlb
sbb
xor
stc
xchg
scas
sti
xchg
push
xor
xor
popf
filds
inc
jbe
andb
shlb
dec
inc
xor
add
and
xchg
sbb
lahf
lods
push
lret
push
test
mov
mov
insb
arpl
imul
fimull
or
scas
or
loop
xor
mov
aas
xchg
testb
cmp
aad
mov
insl
cwtl
mov
pushf
mov
pop
aam
popf
outsl
les
push
movsl
incl
or
outsb
jo
pop
mov
cld
cld
out
jns
fstpl
insb
imul
stc
cs
fnstsw
and
jecxz
out
mov
ret
sbb
dec
ss
out
jp
int
pop
addb
es
mov
sti
fisubl
xor
aad
pop
mov
stos
jo
or
sub
jae
dec
cmp
fs
in
pop
scas
mov
mov
mov
pop
movsl
pop
ret
imul
fcom
or
bound
jne
sub
adc
mov
push
out
mov
mov
pop
mov
mov
cmpsb
xchg
arpl
sbb
loope
shrl
xchg
pusha
filds
test
sub
push
ret
sbb
or
insb
in
je
jle
pop
sub
pop
add
xchg
ret
jg
nop
jg
pop
adc
jae
in
out
in
pop
sbb
imul
or
daa
mov
or
inc
cmp
mov
sub
dec
fcoms
movsb
faddl
mov
dec
xchg
scas
mov
mov
out
jmp
cwtl
dec
call
adcb
scas
push
sbb
sahf
push
inc
lret
adc
jae
lea
iret
rclb
sub
and
add
push
arpl
aaa
add
mov
and
inc
mov
mov
inc
arpl
stos
sub
fadds
adc
nop
and
pop
sti
inc
jl
loop
rolb
sarb
int
push
aas
add
jns
xor
adc
mov
jp
mov
inc
xorl
ret
mov
addl
clc
mov
jmp
and
loop
mov
loope
test
jmp
mov
fucom
loopne
popf
add
repnz
xchg
xchg
cmp
mov
adc
sub
ja
popf
in
pushf
ds
pop
xor
in
sbb
inc
sub
cmp
mov
jns
dec
jl
mov
ja
or
loopne
jnp
popa
pushf
ret
mov
push
out
mov
mov
mov
mov
nop
stc
adc
ljmp
ja
push
sub
pop
ret
sti
or
testl
jmp
in
fbstp
mov
test
scas
cmp
xor
push
pop
mov
xchg
sahf
cs
jge
push
jl
mov
pop
or
xchg
pop
test
out
imul
movsl
das
in
fwait
and
into
nop
stc
jp
enter
push
dec
fisttpll
std
daa
cmpsl
stc
inc
es
sbb
int
dec
add
in
sbb
jmp
cmc
and
sahf
cltd
cltd
adcl
mov
cmp
cmp
lods
ss
and
fcomp
pop
shr
xor
loope
inc
cltd
cmp
jmp
incl
mov
sbb
mov
nop
sbb
nop
sti
jbe
arpl
aaa
pushf
mov
jo
je
or
enter
sub
jl
dec
push
xchg
push
adc
mov
sub
fwait
xor
shlb
sbb
inc
xchg
cwtl
sub
movl
das
fbstp
movsl
out
or
inc
hlt
dec
aam
dec
iret
xor
ret
loopne
sub
mov
jns
rcrl
xor
test
shll
push
add
ret
mov
repnz
pushf
push
stc
cmp
andl
xchg
aaa
dec
jae
hlt
push
sbb
mov
aam
int
shll
clc
mov
push
pop
in
cmp
nop
ret
adcl
xchg
stc
aaa
xlat
into
loope
aaa
clc
xor
in
testl
test
rcl
sub
adc
and
outsl
dec
dec
je
out
and
into
adc
xchg
add
fnstsw
aaa
mov
push
xor
in
fnstsw
fbstp
jl
add
mov
movsl
fs
push
push
outsl
std
lret
xor
pop
loop
test
std
pop
pop
mov
pop
cwtl
inc
push
std
outsb
pop
bound
and
mov
rcrl
inc
push
adc
push
jns
cld
pslld
mov
pop
push
xchg
es
cmp
arpl
sti
push
or
cli
es
cmp
into
rolb
daa
fsubs
sahf
icebp
sbb
fistps
cmpsb
jg
data16
inc
repnz
pop
addr16
std
dec
scas
mov
mov
jne
and
iret
sarb
pop
punpckhdq
sbb
roll
adc
xor
lret
repnz
jb
enter
leave
sbb
fiadds
xor
cmp
mov
xchg
ja
jp
inc
roll
repz
repnz
fld
das
jbe
bound
jmp
mov
inc
in
jl
mov
lret
mov
jmp
imul
loope
imul
dec
add
push
or
sbb
lea
fs
xor
push
nop
cmpsl
mov
xchg
pop
cmc
fnstenv
cmc
mov
jae
fmulp
leave
and
add
sbb
mov
clc
and
call
lock
jmp
popf
testb
hlt
ret
lock
cli
dec
or
cmp
loope
lahf
pop
sub
popa
ljmp
icebp
aam
iret
push
fdivr
jg
jp
lahf
push
bound
mov
sahf
dec
fimull
or
inc
inc
cmp
in
aad
push
fidivs
in
jae
call
ds
push
jns
inc
mov
adc
cmp
push
push
jg
and
mov
add
or
xchg
clc
or
cwtl
add
cmp
call
sbb
not
fadds
mov
pusha
xchg
xor
je
mov
pop
sahf
adc
pop
test
mov
lock
addr16
pusha
aaa
add
pop
dec
pop
cmp
lea
xor
xchg
sub
jmp
mov
lret
cwtl
sub
xor
push
sbb
cmp
pop
cmc
xor
jns
push
dec
jbe
ficoms
lret
adc
jg
sar
xchg
pop
ss
and
insb
push
and
pop
in
sbb
lahf
add
xchg
adc
inc
xorl
inc
pushf
mov
icebp
sub
xchg
cld
addr16
setns
pop
in
sub
shlb
xor
add
movsl
in
cmc
inc
int3
imul
hlt
popf
adc
lods
out
sbb
aam
dec
ret
call
insl
popf
and
dec
dec
pop
nop
mov
mov
fs
pop
sub
movsb
loope
test
push
push
fldt
out
aad
add
adc
sub
mulb
rolb
push
icebp
adc
xorl
pop
adc
push
xchg
gs
mov
cmp
out
mov
fadds
push
pusha
cs
scas
mov
shll
loop
imul
rol
nop
iret
daa
mov
cmp
sub
add
dec
sar
mov
aad
or
xor
ret
fidivrs
sbb
jle
jmp
nop
in
sbb
les
loope
pusha
jmp
xlat
jmp
or
hlt
push
ret
and
cmp
add
jmp
movsb
xor
xlat
aad
jle
nop
dec
jmp
xchg
xchg
inc
mov
sub
adc
pop
movsb
mov
ja
inc
in
inc
xor
imulb
add
addb
shrl
push
add
sub
mov
loop
inc
sub
cmp
jnp
mov
lret
xor
int3
inc
dec
out
sti
fsubrl
decb
faddp
in
or
pop
into
mov
or
cmp
loopne
sbb
inc
in
add
in
sub
cmc
shlb
test
int3
sub
fistl
jle
test
leave
fcmovne
xor
fdivr
jmp
jns
lea
insl
and
lret
std
mov
pusha
sub
ret
out
inc
out
imul
push
das
pop
push
adc
pop
stc
rolb
push
fadd
and
mov
lock
pop
fiaddl
leave
sbb
sub
incb
lret
arpl
sub
cmp
into
xchg
jmp
sarb
mov
rolb
pop
lcall
pushf
shrl
jl
or
fimuls
jno
jg
add
insb
les
hlt
mov
std
arpl
jecxz
push
dec
cs
in
insl
loop
aad
lods
lahf
outsl
ds
out
inc
jl
outsl
bound
push
outsl
cmp
mov
inc
dec
popa
xor
pop
inc
jl
xchg
insl
pop
das
test
stos
inc
test
rcr
test
dec
jle
dec
imul
insb
lahf
or
add
mov
pop
lret
cmp
clc
sub
add
xchg
mov
aam
ljmp
jle
nop
mov
xchg
xchg
test
loope
and
mov
xchg
ret
xchg
jg
sub
sub
inc
push
shrl
cmc
out
lret
push
sbb
push
pushf
decl
movq
subb
pop
sbb
pop
xor
loopne
call
scas
fnstcw
jge
movsl
pop
mov
leave
das
inc
and
hlt
cmpsl
mov
ljmp
xchg
push
mov
inc
jl
mov
sub
aam
mov
punpcklbw
stos
sub
push
cli
nop
or
icebp
push
lcall
pop
mov
popf
cmp
jb
jns
clc
lock
scas
mov
mov
pushl
cmp
sub
mov
dec
fsubrl
ja
dec
clc
insl
sbb
arpl
rclb
jl
and
in
loopne
fs
sti
out
into
leave
clc
sbb
mov
mov
cmp
loop
xchg
sub
adc
mov
dec
testl
push
aas
mov
or
int
pop
pushf
sub
and
push
inc
lods
push
movsb
dec
jnp
sub
popl
or
das
scas
imul
or
sub
adc
insb
out
subl
mov
scas
std
popf
xchg
lds
add
or
mov
ja
xor
je
outsb
sbb
ja
scas
addr16
xchg
addr16
push
cli
xchg
scas
int
pushw
jge
scas
and
pop
xchg
rcll
aad
outsl
add
test
lock
dec
ss
pop
fst
pop
shll
cld
add
in
rcrl
imulb
inc
icebp
add
enter
dec
jne
jge
shr
dec
cwtl
decl
iret
xlat
cld
sub
jp
xorl
cmp
jns
cli
sub
aam
addl
adc
and
inc
mov
test
cmpsl
sbb
adc
inc
repz
and
push
cmp
in
push
inc
add
add
sub
dec
popa
js
xchg
hlt
or
fiaddl
cmp
jne
and
xlat
inc
push
and
mov
dec
sbb
push
call
lods
pop
inc
ja
dec
sbbb
jno
sub
sahf
es
cmp
es
hlt
dec
jle
icebp
clc
ds
pop
pop
je
data16
add
repz
mov
outsl
cmp
push
fsubl
jo
inc
lock
ret
int3
call
mov
and
or
out
xchg
repz
jge
lods
or
inc
pop
sti
dec
stc
pusha
pop
mov
mov
dec
push
sbb
push
gs
mov
fstps
loop
aaa
lea
jmp
in
jmp
add
popf
mov
xchg
sbb
aam
jo
mov
fists
ret
mov
add
mov
fidivs
or
xor
cmp
enter
xchg
pop
dec
imul
push
dec
fnstenv
fldcw
aas
filds
sub
xor
xchg
pop
lcall
js
pop
sub
dec
push
jns
js
mov
sub
out
sub
jno
stos
mov
lock
cli
xlat
sub
loopne
icebp
pop
xchg
pop
movb
lock
aaa
jne
lock
test
fisubl
ficoml
adcb
iret
sahf
sbb
mov
add
mov
cmp
push
icebp
pop
enter
sti
nop
lods
jmp
adc
test
sahf
jnp
popf
mov
lock
cmp
mov
jl
push
imul
aas
add
cmpb
rol
xor
outsb
cmpsb
xor
sub
sub
loopne
mov
lods
mov
or
push
sbb
mov
scas
lods
mov
pop
add
or
sub
mov
div
je
fistpl
aam
mov
shl
addr16
jo
adc
sahf
sahf
out
stc
imul
xchg
inc
mov
cs
cs
leave
rolb
or
cmp
push
push
jmp
or
out
or
movsl
stos
in
add
outsb
lods
or
shrb
cwtl
ret
test
or
fldt
mov
repz
sbb
inc
mov
add
and
mov
aas
sbb
sarb
mov
lods
inc
or
arpl
sub
or
outsb
clc
dec
hlt
test
and
cmp
adc
inc
imul
cmpl
hlt
into
mov
icebp
stc
mov
out
fnstcw
lahf
pop
and
jo
lret
cli
popl
aas
jle
jbe
dec
jmp
push
test
test
cmpsl
pop
das
push
hlt
sbb
nop
pinsrw
jge
movsl
xor
lea
and
enter
jnp
jnp
mov
pop
fwait
dec
fsubrl
insb
dec
aam
stos
adc
sbb
insb
sbb
mov
push
std
fwait
or
in
pop
daa
loopne
or
add
in
add
sub
lock
pop
mov
dec
sbb
xchg
fisubs
jge
inc
andl
shrb
push
stos
xor
inc
or
dec
jns
in
test
inc
jl
ret
int
add
add
mov
popa
dec
cltd
mov
std
xlat
loop
outsb
mov
xor
mov
out
mov
xchg
leave
sbb
pop
lcall
cmp
inc
dec
inc
xchg
test
jnp
xorw
negb
sbb
xchg
sbb
or
daa
cmp
and
iret
rclb
shlb
ja
cmp
pop
pop
pushf
dec
push
push
pop
pop
loop
add
lahf
sbb
add
jecxz
mov
mov
lret
and
aam
jbe
lahf
inc
push
jbe
jmp
dec
jl
mov
movsl
cmc
mov
mov
or
stos
rcpps
dec
add
sub
sub
ret
xor
mov
inc
repnz
mov
pop
loop,pt
ret
add
xchg
mov
sbb
dec
and
mov
add
int
test
in
push
neg
jecxz
fidivrs
xchg
or
dec
pusha
adc
sbb
scas
lcall
in
jne
dec
jg
hlt
fs
leave
cmp
setg
adc
sub
ja
test
call
dec
addr16
xor
or
popf
insb
mov
mov
mov
adc
dec
push
dec
jmp
mov
in
xor
test
dec
jge
pop
push
mov
aam
or
and
movsb
xchg
pop
jecxz
sub
xor
ljmp
clc
cld
stos
es
and
lds
enter
mov
sti
addr16
sbb
lahf
int
nop
insl
pop
xor
xor
lahf
daa
fcmovnbe
rclb
push
jbe
pop
sbb
mov
push
sub
gs
xlat
stc
je
cltd
xlat
aas
into
shl
and
mov
lds
aam
adc
test
cld
mov
or
inc
and
mov
mov
pop
lock
scas
clc
xorb
or
aas
sub
xor
sub
inc
sub
cmc
and
mov
data16
movsl
pop
bound
jb
scas
inc
push
sub
jmp
sub
inc
pop
dec
pop
sbb
imul
std
fisttps
cmp
cli
cli
xchg
pushf
or
sub
jns
je
mov
or
xchg
push
xor
test
inc
cs
scas
xchg
mov
cwtl
and
int
aas
mov
add
xor
test
pop
leave
pop
lock
add
pop
and
mov
arpl
lret
in
sbb
sbb
dec
and
jno
mov
jmp
cmpsl
lcall
mov
popf
or
jecxz
sbb
pop
stos
fildl
jl
add
dec
sub
addr16
xchg
insb
pop
adc
push
ss
fwait
lcall
ja
test
push
rcrb
or
test
mov
out
mov
mov
push
out
add
mov
arpl
movsb
aaa
or
xchg
sbb
jbe
sbb
clc
sbb
fcomps
call
pusha
pop
or
inc
test
fsts
mov
out
test
pop
neg
jno
cmp
inc
jo
sbb
dec
cli
test
mov
test
xchg
pop
add
aam
push
jne
cs
sbb
mov
adcl
icebp
lea
sahf
in
vpcomb
pop
mov
mov
jb
and
and
mov
idiv
mov
sti
adc
call
pop
add
push
adc
adc
rclb
cld
lcall
jne
and
je
aaa
or
xlat
push
dec
jnp
mov
arpl
outsb
int
mov
aam
dec
in
pop
je
fisttps
cli
jecxz
and
dec
pushf
incl
scas
popf
xor
das
or
test
stos
mov
addb
mov
cmpsl
and
push
addr16
xor
andl
push
pushf
fdivl
jns
add
inc
push
gs
adc
aad
lcall
jnp
inc
int
and
sbb
sbb
add
cwtl
mov
cmp
or
adcb
cmp
bound
mov
mov
sbb
cmpsl
jg
pop
test
and
push
mov
adc
xchg
enter
lea
xor
jbe
pop
push
cmp
pop
mov
stos
sbb
sub
or
push
insb
movsl
pop
nop
pop
sub
iret
and
sub
inc
add
push
leave
icebp
and
outsb
add
push
mov
in
mov
cmpsb
xor
pop
andl
fidivrs
add
cmpsb
lods
fcmovnb
fdivp
inc
cmp
push
jbe
mov
and
aad
sbb
loopne
idivb
lods
rclb
push
xchg
pop
shl
add
lods
addb
jecxz
out
inc
leave
jno
je
or
jle
mov
mov
xor
mov
and
loope
adc
adc
or
dec
mov
movsb
test
jnp
or
lock
xlat
xchg
cwtl
push
jns
out
shll
mov
sub
inc
insl
out
leave
leave
xchg
push
stos
add
jae
shll
les
mov
rol
outsb
fcomp
sbb
mov
ss
mov
add
sarl
fistpll
loop
hlt
xchg
aas
push
xchg
insb
sub
out
inc
cmp
inc
inc
add
xchg
shr
mull
sbb
jp
mov
sub
into
jae
mov
add
sub
jg
negl
inc
and
push
out
sti
xchg
dec
inc
adc
adc
and
adc
xchg
inc
mov
cmp
call
push
xchg
add
loop
lret
and
call
enter
lahf
mov
sbb
jle
stos
outsl
test
mov
test
ljmp
ds
int3
mov
push
mov
shll
mov
mov
cmpsb
push
loopne
sub
jmp
stos
xlat
stc
call
push
push
xchg
jne
loope
jg
jmp
fwait
sahf
int3
lds
sti
inc
test
outsl
out
orb
jne
inc
sub
xchg
sarb
inc
sub
aas
es
jno
sub
inc
dec
adcb
ljmp
push
mov
in
jbe
aam
mov
js
and
data16
shlb
xchg
jl
aad
or
inc
and
fcoms
xor
enter
sub
int3
test
sbb
std
lcall
mov
icebp
mov
jb
xor
insl
test
jge
xchg
mov
movsb
and
int3
push
ss
xchg
cmp
pop
dec
xor
cwtl
push
push
pop
fildll
popa
aaa
dec
mov
add
pop
and
push
add
outsl
addl
ficompl
int3
sbb
push
je
mov
pop
mov
jp
cmpl
xchg
into
push
outsl
fidivs
push
jno
jns
mov
and
sbb
stos
dec
mov
pop
into
imul
ret
mov
push
ret
movsl
movsl
add
mov
ds
popf
mov
push
nop
popa
out
cs
inc
cmp
add
ss
sub
xchg
das
mov
fmulp
jg
inc
or
aas
xchg
aad
imul
repz
loop
push
cld
jp
pop
jecxz
add
movsb
push
sbb
ja
addr16
out
mov
mov
add
push
icebp
clc
ffreep
add
jl
pusha
mov
mov
sub
movsb
dec
add
dec
test
mov
sahf
stos
test
pop
inc
clc
mov
dec
dec
pop
mov
in
movsl
testb
xchg
and
ja
adc
pop
mov
push
rorl
cmp
add
stc
cld
or
mov
or
popl
lcall
imul
inc
jns
adc
cmp
aad
push
scas
inc
add
push
addr16
mov
mov
inc
daa
lds
pop
mov
add
movsl
insb
xor
movsb
lret
jbe,pt
mov
inc
dec
jl
or
repnz
push
sub
cmp
out
daa
jbe
push
inc
mov
dec
sub
adc
adc
push
and
mov
jbe
mov
call
cmp
add
call
add
sbb
ja
out
fwait
popa
push
and
mov
mov
and
ffree
push
add
mov
push
mov
xchg
jmp
insb
mov
sahf
pop
xor
sub
std
mov
pop
adc
mov
sahf
pop
negl
jnp
mov
loop
xchg
add
out
cld
and
mov
jl
lret
enter
jns
and
jb
dec
sbb
push
lea
iret
adc
add
les
lods
imul
mov
adc
ret
outsl
xlat
repnz
sbb
sahf
out
sub
imul
cld
add
andb
pop
in
jg
push
sbb
stos
push
pop
lcall
sub
imul
mov
jns
pop
adc
xchg
cltd
cld
enter
xorl
ret
mov
push
pop
or
push
pop
dec
daa
and
mov
test
scas
std
xchg
repnz
fildl
cmp
or
loope
mov
rclb
or
in
or
mul
stos
popf
loop
inc
xor
mov
and
sbb
out
ss
and
test
inc
push
mov
or
loop
repz
sbb
mov
dec
dec
push
push
push
ret
in
gs
inc
cmp
jo
adc
arpl
dec
or
mov
fmull
or
and
push
shld
inc
and
push
sub
xchg
fstpt
pop
js
mov
adc
xchg
xchg
jae
enter
mov
aaa
ret
inc
lock
in
dec
test
test
xchg
rol
imul
sub
fisubs
into
mov
mull
sub
add
push
ret
dec
dec
xorb
jl
xor
outsl
xlat
mov
clc
imul
shr
xor
mov
insb
push
shlb
popa
and
sub
inc
pusha
in
cmp
sub
sub
xchg
xlat
dec
mov
popf
push
shrb
int
gs
or
fcompl
inc
mov
xchg
cmp
cmp
dec
xchg
loopne
arpl
mov
push
inc
mull
xor
dec
out
sub
sub
or
out
clc
scas
xor
ds
aam
jp
imull
jo
addr16
xor
add
movsl
in
in
sub
jp
das
mov
inc
loop
inc
sub
xor
js
adc
les
xor
fstl
loop
sbb
mov
inc
in
in
hlt
lcall
push
das
inc
out
mov
shrb
imul
cltd
inc
adc
cmp
stos
jnp
in
xchg
mov
mov
sbb
cli
lret
ret
cli
xor
lock
nop
xor
cs
mov
adc
cmp
clc
push
rolb
scas
hlt
int
mov
pop
js
sub
mov
add
mov
enter
mov
dec
int3
cmp
sbb
and
in
xchg
pop
jp
add
leave
fidivs
or
cwtl
pop
dec
mov
rcrl
push
dec
in
mov
mov
cwtl
sbb
ret
loop
es
jecxz
sbb
xchg
je
pop
scas
jg
and
or
sbb
clc
jle
ja
test
push
or
mov
jb
mov
mov
push
mov
xor
mov
hlt
xor
mov
daa
xchg
cli
lock
cmp
das
push
adc
pushf
mov
stc
sbb
js
jo
shl
cli
sub
xor
inc
rol
shll
mov
shufps
test
and
pop
mov
subb
jmp
out
mov
ljmp
fwait
jge
dec
push
adc
scas
mov
fcmovnbe
xchg
hlt
mov
push
jge
jmp
dec
rcr
sbb
mov
push
test
xor
pusha
adc
and
repz
sub
jmp
pshufw
jo
push
mov
ljmp
cmp
pushf
push
loope
pop
movsb
cld
loopne
out
pop
mov
aas
xchg
out
in
int3
icebp
cmc
push
pop
aaa
or
pop
fsubs
mov
push
aam
test
sbb
add
or
cmpsl
test
je
xor
sbb
or
inc
fnstsw
loopne
stc
mov
lock
mov
or
xchg
scas
xor
les
aad
mov
jge
or
jg
mov
or
sbb
lahf
movsb
mov
ds
jl
sbb
sti
push
pop
or
hlt
dec
inc
test
sub
xor
int3
inc
icebp
cli
popf
subb
mov
pop
nop
rorl
cmp
add
cltd
scas
cmp
adc
ss
sub
pushf
mov
ret
and
cmc
ja
xchg
and
movsb
stos
ds
scas
push
pop
mov
nop
sbb
fsubr
cmp
rolb
ds
dec
or
lock
outsb
fisubrl
sub
and
lahf
repz
rcrl
push
in
mov
fidivrl
in
adc
fcompl
out
stc
test
test
or
stos
inc
dec
enter
jg
imul
fsts
ja
cmp
dec
dec
mov
adc
lods
jp
mov
dec
ficomps
xchg
xor
xchg
lods
xor
sti
sub
jbe
aaa
in
inc
rorl
sub
shlb
jbe
roll
pop
sbb
xor
pop
and
ljmp
push
xchg
les
pop
rorb
out
js
jb
pop
mov
cmpsb
add
sti
xlat
js
out
lea
enter
jb
int3
xor
push
pop
cwtl
mov
or
rcl
ret
dec
movsb
fisttpl
xchg
or
mov
call
out
pop
push
inc
testb
and
fcomip
push
mov
mov
cld
mov
xchg
rclb
decb
ljmp
pop
fnstenv
repz
cmp
imul
or
pop
dec
aas
jbe
and
xchg
sbbb
sbb
leave
dec
and
ds
cmp
add
insb
fistpll
push
push
outsl
jmp
jg
inc
mov
fwait
icebp
in
pushf
in
xlat
mov
lock
nop
push
movb
sbb
fldenv
jnp
jg
sbb
mov
ret
insl
add
lods
enter
add
lds
lds
xor
cltd
leave
cmpsl
xor
pop
push
xchg
dec
xor
push
loop
jmp
sub
cmp
rcrl
repnz
ljmp
in
or
jg
cmp
pop
fdivs
aas
jmp
in
nop
inc
out
lea
sub
movsl
adc
sahf
or
pop
ja
xchg
mov
add
cmpsb
ljmp
sub
or
cmpsb
pop
mov
sub
add
or
popa
sbb
xor
lods
adc
scas
sub
mov
mov
shrd
xchg
data16
ss
mov
dec
jmp
stc
mov
inc
nop
and
out
sbb
mov
add
pop
mov
pop
je
iret
pop
aam
pop
inc
movsb
cwtl
jns
adc
addr16
mov
loop
mov
sub
stc
xor
mov
repnz
incb
mov
out
add
adc
inc
mov
mov
push
inc
mov
loopne
mov
dec
rcl
mov
push
and
sub
sbb
lret
stc
fidivs
mov
cmp
gs
jo
jb
lea
inc
enter
push
stos
push
test
sti
push
js
jl
and
pop
cmp
frstor
and
mov
cmp
andl
out
mov
mov
testl
mov
sbb
adcl
repnz
lds
adc
push
enter
xor
jmp
adc
cli
icebp
mov
leave
or
xor
ljmp
jne
and
stc
pop
imul
mov
push
mov
andps
and
inc
push
push
stc
mov
lds
pop
pushf
int3
add
shlb
mov
xchg
mov
mov
test
xor
shrb
sub
sbb
fdecstp
pop
adc
sub
inc
pop
jmp
push
scas
push
mov
mov
fwait
sbb
aad
jae
xor
push
fcmovu
mov
lock
jge
sti
in
out
nop
cmp
push
jl
shl
fsubrs
in
inc
shlb
cli
cltd
ss
insl
cmp
and
mov
dec
pop
push
add
scas
ret
dec
orb
nop
test
pop
addl
push
insb
adc
jl
pusha
dec
inc
subl
pusha
loope
stos
imull
cltd
inc
shlb
push
cmp
jns
daa
xor
das
cmpsl
dec
jl
mov
aaa
sub
inc
xor
adc
dec
jae
cmp
and
in
or
mov
lret
add
lds
mov
adc
fcoml
sub
fsubrs
xchg
mov
fcoml
insb
jne
sbb
call
rolb
fildl
leave
cwtl
clc
cltd
loope
xchg
lods
mov
mov
xor
mov
aam
xchg
lods
cmpb
push
gs
sbb
cmp
das
mov
pop
in
stc
out
add
enter
mulb
into
pop
imul
mov
bound
mov
sahf
jl
pop
lea
dec
clc
lods
and
shrl
cwtl
and
stos
leave
lcall
aad
fld
push
ret
leave
ficoml
inc
or
out
pop
lds
in
sbb
mov
shl
mov
movsl
lods
rolb
mov
mov
sti
mov
call
xchg
ja
lret
adc
inc
jne
jns
jbe
xchg
or
roll
fdivs
mov
push
add
lods
pop
jbe
dec
cmp
sub
and
sub
sarl
std
js
cmpsb
pop
push
pop
jle
lods
adc
cmpsl
into
addb
add
pop
mov
mov
cmp
sub
cmpsb
imulb
dec
repnz
ret
popa
ret
iret
adc
mov
or
stos
inc
sbb
cmpsl
lock
add
aaa
out
or
xlat
cmp
and
inc
fidivl
aam
insb
je
bound
xchg
cmpsl
add
pop
mov
mov
int3
fcomp
lea
push
cltd
popf
cs
lods
jnp
psubusw
cmc
dec
inc
cld
cli
out
aam
fs
imul
inc
rcrl
pop
cmp
lahf
fadds
ds
loopne
leave
adcl
addr16
out
mov
out
xchg
test
and
jg
mov
sbb
mov
or
das
cmp
mov
sub
testl
inc
nop
js
sub
sbb
or
sub
xor
je
insl
mov
xchg
mov
cltd
fstps
ljmp
jns
loop
jg
and
pop
push
int
mov
out
lcall
mov
aaa
arpl
je
adc
rol
sbb
int3
cltd
adc
and
push
inc
loop
imul
jb
scas
mov
mov
fcomps
push
xor
and
aaa
inc
ret
jo
jmp
adc
notb
ds
outsl
sarb
rorl
sub
pop
pop
xchg
mov
pusha
fcmovnb
negb
push
incl
ljmp
mov
xor
mov
push
sub
fildll
mov
jge
aam
pop
mov
sbb
stc
das
shrl
or
mov
pop
xchg
addr16
fcmovnu
pop
rcr
cmp
inc
daa
hlt
push
sub
xchg
add
push
lock
cmp
mov
add
pushf
int
js
enter
dec
popa
xchg
sahf
sbbl
xor
aas
movsl
jp
mov
pushf
push
xchg
dec
add
adc
inc
std
xor
jl
xchg
addl
xor
push
incl
out
sbb
push
dec
mov
pop
cmp
outsl
xchg
and
inc
or
lahf
mov
mov
fsubrl
adc
ret
cmp
das
popf
test
es
mov
dec
push
mov
push
mov
xchg
mov
daa
loop
xor
mov
or
adcl
inc
cmp
hlt
ret
xchg
das
or
push
lods
stos
sub
fidivrs
in
jp
lcall
jl
mov
mov
xchg
sub
imul
stc
inc
sub
lret
and
ja
adc
jmp
mov
push
cmpsl
in
mov
lahf
pop
dec
sbbl
popa
cmpsl
sub
mov
xchg
hlt
xchg
gs
adc
aas
cmp
imul
hlt
xor
imul
aad
jle
pop
cmp
jbe
sbb
dec
int
dec
adc
daa
mov
cmpsb
and
jp
pop
and
push
dec
scas
fs
jmp
push
add
cmp
xchg
div
adc
jge
ret
jp
sub
out
xchg
xor
ljmp
xchg
cld
mov
repz
mov
ret
mov
iret
ficoml
mov
sarb
fcomi
mov
dec
into
push
aam
pop
in
add
sub
sub
xor
fcmove
push
jnp
mov
mov
leave
add
daa
push
jnp
adc
pusha
pop
dec
sti
inc
cmp
xlat
mov
call
adc
cmc
add
imul
pop
hlt
out
enter
pop
shr
xchg
cltd
mov
push
pop
fcmovne
mov
lea
sbb
inc
jge
add
int3
popf
push
icebp
dec
jg
add
aad
xchg
mov
xor
movsl
adc
outsl
popa
fdivr
in
out
mov
jne
sbb
sbb
xchg
movsl
and
fidivrl
pop
test
mov
int
shrl
cmpsl
jbe
jns
mov
mov
jo
inc
aam
incb
push
mov
stos
sub
push
jnp
scas
xchg
call
jns
leave
pusha
sub
shlb
stc
and
rorl
dec
enter
repnz
bound
push
dec
push
sbb
pop
pusha
cmp
push
aaa
xor
daa
sub
mov
cmp
xchg
andl
out
pop
pop
push
mov
rcll
and
lret
inc
in
xchg
push
rcll
stos
and
jmp
adcl
lds
jmp
jp
push
cld
jecxz
cltd
sbb
jle
addr16
or
mov
xor
lahf
pop
xchg
jne
dec
pop
aad
arpl
inc
inc
insl
and
add
stos
cmp
lcall
pop
adc
fbstp
jnp
mov
out
jl
xchg
jb
jne
repz
mov
pop
add
push
icebp
mov
mov
sbb
dec
outsb
dec
and
outsl
cltd
add
cli
movl
shll
ss
clc
xor
and
xchg
sbb
fcompl
sbb
xchg
mov
pop
scas
test
mov
jge
shrb
adc
mov
in
inc
decl
cs
mov
cmp
jne
repnz
arpl
testb
xchg
sar
jo
das
push
outsb
ret
add
and
sub
dec
movb
jae
mov
cld
mov
repz
ret
aas
fcoml
icebp
jno
inc
repnz
rolb
jnp
push
xor
xor
inc
cmpsb
cmp
mov
cltd
outsl
mov
idivb
movsl
adc
pop
mov
scas
pop
lret
mov
cmpsb
xlat
in
inc
cmc
xchg
adc
nop
dec
fcomps
push
gs
jle
jge
sub
and
adc
xor
lcall
add
mov
sbb
mov
push
frstor
adc
sti
mov
push
in
cmp
xlat
loopne
repnz
mov
pushf
es
mov
insb
mov
std
push
xchg
je
xor
mov
scas
adc
pushf
pop
mov
sbb
adc
pusha
sbbb
push
fnsave
pushf
lret
ds
mov
nop
or
or
cmp
xor
jns
push
nop
cmpsl
cmp
mov
fsubrs
clc
divb
sbb
xor
mov
jg
inc
movsb
dec
loop
nop
imul
into
pop
std
mov
fdivr
and
and
mov
and
mov
movsb
lods
pusha
cmp
test
mov
out
sub
repz
add
or
sub
mov
lock
push
pop
sti
add
xor
sbb
xlat
hlt
mov
xor
push
cmp
and
imul
adc
stc
xor
or
shlb
dec
mov
or
or
imul
pop
mov
test
dec
xor
mov
fsts
lea
add
and
movsl
mov
pop
adc
dec
scas
loope
mov
push
leave
icebp
out
lret
and
mov
into
mov
stos
mov
bound
repnz
gs
test
rorl
xchg
enter
jmp
mov
mov
fcomi
mov
push
lcall
pop
in
cmc
pop
push
cmp
mov
pop
mov
push
sti
add
mov
or
imul
mov
add
cmp
adc
pop
pop
inc
cmp
lds
faddl
sub
loopne
mov
jae
je
rorb
pop
xor
dec
rolb
jl
push
leave
mov
cmp
jnp
sbb
xor
mov
cmp
push
lods
imul
mov
gs
rcll
inc
sbb
mov
pop
push
or
sbb
idivb
adc
loop
cmpsl
std
insb
lcall
xchg
daa
xlat
shrb
push
xchg
ret
mov
and
jo
xor
nop
mov
lock
out
add
in
repnz
call
dec
sbb
xchg
mov
sub
add
shlb
mov
mov
xlat
andb
xchg
fisubl
negl
sti
and
addb
mov
sarl
push
jo
aas
xchg
adc
cmp
stc
xchg
inc
shll
and
lds
cmp
xor
add
xchg
fistps
add
and
pop
xchg
bound
mov
pop
call
sbb
push
lods
xchg
test
fstps
les
and
scas
push
shlb
hlt
inc
xor
inc
int3
stos
lods
cmp
xchg
jl
xchg
mov
inc
js
and
or
adc
inc
rcrb
sub
mov
aam
adc
xchg
aam
call
je
les
cmpsb
and
and
enter
xor
gs
loop
push
int
cmp
inc
sbbl
lret
mov
dec
xchg
dec
out
xor
clc
push
push
popf
adcb
subl
ja
iret
cmpb
mov
in
push
aad
adcb
add
stc
insl
xlat
repz
into
data16
cmp
dec
aaa
pop
arpl
dec
xchg
jg
mov
mov
out
mov
adc
movb
mov
push
iret
mov
in
sbbb
xchg
fidivs
or
jbe
pushf
and
mov
loope
adc
dec
xchg
mov
adc
xchg
subb
pop
mov
inc
enter
dec
mov
cmp
add
sarb
pop
dec
sub
les
cmp
adc
xlat
inc
sbb
popf
push
call
inc
int
xchg
sub
mov
test
add
jbe
fs
stos
fcmovb
xchg
pop
mov
push
pop
or
jge
rolb
daa
add
fwait
mov
pop
out
pop
or
nop
xlat
movl
andl
cmpsl
lock
sbb
or
mov
iret
lds
out
xchg
fs
fmuls
mov
jg
loop
jns
sbb
aaa
jp
sbb
push
idiv
mov
push
int3
pop
push
les
test
jg
xor
shlb
lret
pop
cmp
sahf
cmp
inc
cmp
sbb
int3
jge
test
into
iret
mov
fidivs
orl
push
sahf
mov
insl
inc
hlt
cmp
mov
mov
inc
shlb
xor
jge
inc
sub
dec
mov
rorb
roll
pushf
push
jmp
mov
shlb
dec
outsl
pushf
inc
mov
repz
dec
rcrb
xchg
mov
jb
notl
xchg
imul
sub
pop
or
dec
sub
lcall
push
lea
dec
add
hlt
or
fbld
push
pop
mov
pop
cmc
bound
ret
stos
les
ret
inc
out
pop
jb
sti
fimull
sub
xor
mov
push
popa
ja
ljmp
push
test
push
stos
mov
add
adc
mov
xor
leave
xchg
xlat
dec
dec
lods
add
cmc
xlat
sbb
add
push
mov
imul
pop
lods
add
daa
xor
pop
shlb
pop
jge
cltd
xchg
sub
cmp
lods
cltd
jg
mov
xchg
adcb
cmp
out
out
mov
dec
fmulp
pop
sub
incl
rcr
mov
jb
int3
mov
pop
int3
cmp
shld
lods
inc
xchg
push
mov
jmp
dec
push
mov
or
mov
andb
sbb
aam
lret
pop
lods
fcoml
clc
push
test
arpl
lret
test
movsl
jne
mov
daa
dec
cmp
pop
xchg
out
repz
add
icebp
les
pop
jo
inc
fcmovnb
add
mov
mov
mov
xchg
sbb
movl
xor
inc
pop
outsb
lret
mov
pop
push
and
test
out
or
and
insb
popa
arpl
and
pop
xor
lret
add
cli
das
out
insl
adc
mov
jnp
adc
xor
adc
nop
sub
ss
ja
addb
ret
dec
jb
push
xchg
in
pop
mov
sub
jle
repz
dec
lds
mov
add
and
aas
or
out
incb
and
and
jo
dec
lret
je
pop
in
pop
not
add
divl
mov
aas
std
lea
inc
xchg
pusha
and
mov
inc
dec
mov
xchg
mov
add
in
lret
out
shlb
jmp
mov
pop
jle
outsb
sub
dec
mov
jecxz
test
xchg
sbb
push
pop
pop
into
shll
fmuls
imul
out
mov
in
cmp
in
jmp
movsb
fsubr
shll
mov
je
scas
mov
push
inc
mov
lods
cwtl
outsl
sub
inc
pop
loopne
sbb
jb
lea
or
nop
xchg
jne
inc
dec
cmpsl
adc
repz
jmp
mov
ficoms
dec
pushf
addr16
push
fdivrp
jecxz
add
jnp
popf
and
sbb
cli
addr16
outsl
or
inc
mov
ljmp
movb
xchg
xor
scas
lock
pop
stos
xorl
shl
movsl
or
push
rol
mov
ljmp
and
iret
and
rcr
pop
int3
push
add
int
mov
jns
fldcw
jnp
out
stos
mov
test
jecxz
pop
xchg
les
orl
out
loopne
adc
push
mov
repz
mov
cmp
cmp
xchg
loop
sub
push
push
mov
xlat
out
shlb
or
and
leave
mov
fldcw
int
in
pop
in
add
stc
cmpsb
out
jmp
popf
aaa
out
push
leave
cld
jl
sub
sbb
dec
test
xor
mov
mov
inc
pop
mov
aad
dec
daa
add
mov
mov
xchg
or
sar
jnp
aaa
stos
cltd
sahf
cli
jae
loopne
pop
sahf
mov
popf
out
out
mov
lret
icebp
mov
lock
js
fistl
fcomi
and
inc
pushl
mov
pop
add
cmp
lcall
je
frstor
jmp
lods
xchg
mov
addl
ss
std
jle
xchg
ss
lahf
loopne
test
lahf
out
xor
test
cmp
inc
data16
mov
mov
pop
inc
mov
dec
sbb
subb
push
loopne
mov
xchg
push
shll
pop
out
test
js
cmp
movsl
loopne
sbb
hlt
out
lock
cmp
adc
fistps
or
cmp
je
popa
ret
push
pop
inc
mov
pop
aam
mov
stc
lea
mov
cmpsl
hlt
sbb
mov
decb
sbb
mov
test
repz
xor
adcb
jp
popf
fisttps
sbb
nop
mov
jge
ja
or
test
push
xor
jp
pop
mov
aas
mov
mov
out
andl
clc
inc
sbb
outsb
and
jge
test
xor
pop
stos
or
xor
sbb
fnstcw
jae
add
dec
dec
push
xchg
or
pusha
cmp
mov
orb
jo
out
aam
negb
push
push
pop
mov
or
fs
pop
lahf
pop
idivl
mov
or
sbb
mov
cmpsb
jbe
fisttpll
fnstsw
push
fcomip
xor
xchg
scas
cltd
cmp
cmp
add
insb
mov
push
jno
and
fdivrs
dec
cs
sbb
and
es
rorl
mov
pusha
jmp
push
push
pop
add
jle
daa
sub
sti
addr16
das
inc
sarl
addl
xchg
stos
ret
and
jecxz
push
cmp
xacquire
insb
mov
fimuls
mov
adc
or
and
cmc
push
ficoms
pushf
dec
icebp
sbb
pop
adc
mov
mov
pop
aas
jg
in
push
cmp
inc
out
add
adc
dec
in
fisubrl
sub
adc
lock
popf
mov
movsl
push
js
adc
pop
mov
jns
jp
or
cs
lock
aas
push
mov
int3
stc
mov
int3
xchg
adc
js
mov
and
ret
mov
lds
mov
sbb
adc
mov
sbb
pop
dec
lods
jecxz
xor
xor
xchg
push
xchg
add
sbb
cmp
pop
xchg
stc
test
icebp
jae
rclb
adc
add
sbb
jle
sbb
inc
int
ret
ret
sub
cmp
pop
xchg
aas
sti
aas
adc
pop
nop
sbbb
in
and
cmp
dec
jns
and
loopne
inc
loopne
pusha
mov
mov
notb
adc
push
insl
aaa
cmpsl
aad
loop
les
mov
mov
lods
xchg
add
jge
sub
leave
pop
lds
mov
pop
sbb
add
rorb
daa
mov
loop
loope
pop
scas
lret
lcall
dec
adc
jl
cmp
inc
add
dec
push
jg
out
imul
shl
or
inc
jns
adc
mov
pushf
fdivrl
adcb
lock
lock
enter
jnp
dec
rcrl
sbb
lcall
push
mov
into
popa
mov
andb
shl
dec
pop
mov
icebp
push
xor
sbb
push
aaa
shl
jno
call
cltd
aad
cs
dec
xchg
rcl
fnstsw
pushw
ret
adcb
cmpsb
es
sbb
mov
xchg
push
mov
xchg
xchg
daa
mov
and
iret
fidivs
mov
daa
into
dec
mov
sbb
push
adc
cltd
xor
faddl
outsl
out
push
add
mov
xchg
imul
shll
sarl
adc
hlt
lock
stos
pop
shrl
in
dec
mov
std
inc
cmp
iret
mov
jecxz
flds
mov
inc
outsb
daa
insb
iret
aaa
inc
mov
push
daa
nop
mov
in
inc
cmp
mov
sbb
cmp
pushf
mov
inc
xlat
fbstp
adc
jp
xlat
lahf
jnp
int3
xor
jno
test
inc
data16
leave
into
pop
shrb
test
cwtl
call
out
nop
jp
icebp
jae,pt
test
adc
push
cli
mov
out
jle
jge
pop
fisubrl
lods
mov
mov
mov
loop
aam
push
xor
rolb
cmc
maskmovq
testl
lods
push
ret
mov
dec
les
adc
adc
pusha
xchg
cmp
inc
stos
sti
sbb
lods
loope
lods
mov
cmp
cmp
pop
lds
sbb
push
lahf
or
or
mov
sbb
leave
stos
and
sub
lds
imul
pop
roll
fstp
mov
inc
loop
add
ljmp
test
mov
jmp
mov
mov
aaa
or
jnp
sbb
jnp
mov
pushf
mov
and
int
push
xor
dec
jg
xor
adc
into
adc
pop
in
loop
cmpsb
test
ret
out
int3
clc
or
mov
mov
pop
inc
loopne
push
sbb
into
dec
add
or
sub
aas
adc
imulb
movb
inc
neg
out
dec
outsl
inc
jno
in
fidivl
in
xchg
je
data16
mov
sti
mov
fnstsw
push
add
cmpsl
shrb
mov
xor
adc
sub
movsl
cltd
sbb
out
jae
mov
cmp
lret
jecxz
not
add
xchg
fnstcw
loopne
push
rcll
cmp
dec
push
add
int3
fwait
and
sti
stc
cs
les
pop
mov
xlat
cmpsl
and
movsl
loopne
mov
das
arpl
xor
lods
xchg
mov
repz
inc
popf
sbb
jnp
cmp
jb
or
or
xchg
mov
les
sti
test
sub
pop
aas
cltd
and
add
jbe
or
in
sub
std
push
mov
std
push
shll
ss
gs
pop
je
iret
pop
pop
sub
mov
ret
mov
lahf
sbb
pop
aam
xchg
mov
sbb
out
popl
dec
adc
mov
pushf
in
stos
scas
cmp
test
cs
xor
mov
jns
scas
inc
or
sbb
push
add
mov
push
in
push
sbb
daa
mov
xchg
leave
mov
mov
sub
out
mov
mov
pusha
call
aas
aad
jle
cltd
bound
scas
cmp
popf
fs
imul
rorl
dec
je
fwait
inc
push
xchg
lods
mov
loope
pop
je
jle
test
les
mov
test
lahf
xchg
or
loopne
pop
imul
dec
jp
pop
das
mov
jb
mov
dec
scas
jl
dec
adc
dec
jb
scas
pusha
adcb
sub
sub
push
xchg
addb
and
decl
sbb
negl
pop
pop
push
adc
clc
das
sbb
test
mov
cmc
hlt
sbb
je
xor
cmp
cmc
shll
mov
addr16
mov
push
fisttpl
add
mov
push
in
push
rorb
sub
sbb
je
sub
pop
mov
mov
or
pop
cmp
jmp
jp
lret
push
add
xor
sub
test
pushl
jno
or
add
adc
mov
and
std
fwait
test
lods
fmull
or
out
insb
dec
and
sub
icebp
cmp
xchg
pop
into
bound
mov
jmp
sbb
mov
xchg
pusha
push
mov
adc
jns
and
popf
xor
jecxz
scas
cwtl
mov
xchg
mov
aam
ja
jl
mov
adc
jo
fmull
add
mov
xor
rcl
dec
jg
push
mov
pop
filds
cmp
ljmp
mov
jae
jnp
stos
imul
out
aas
stc
inc
ja
orb
inc
jbe
stc
mov
imul
push
push
js
pushf
lret
and
test
subb
push
mov
lret
rclb
int
and
lods
dec
dec
jle
jmp
sub
fst
psubq
ret
ja
mov
pop
inc
dec
sub
dec
in
rcrl
out
inc
pushf
or
repnz
into
and
inc
mov
xor
and
and
mov
in
fcomp
or
aas
fwait
mov
insb
rcr
dec
push
pop
inc
out
test
sub
das
ds
loop
lods
andb
mov
and
hlt
pop
ret
movsb
or
jbe
sbb
mov
imul
fistps
stos
push
cs
daa
or
fmulp
int3
loope
push
jmp
or
int3
imull
and
xor
adc
push
repnz
lods
or
rcrl
lock
test
rorb
test
add
cli
push
mov
aam
sub
add
and
jecxz
jo
add
xor
scas
and
mov
movb
fisubrs
inc
in
callw
aad
leave
dec
xchg
sbb
lret
fcompl
cmp
cmpsl
sub
mov
push
fists
mov
scas
sarl
push
aaa
pop
lods
ficompl
push
rol
mov
out
cli
pop
test
cmp
les
sbb
jbe
and
and
mov
mov
push
push
cmpsl
adc
and
jnp
sahf
cwtl
cltd
mov
add
out
fisubrs
pop
xor
cmp
xchg
mov
lret
aam
jns
pop
pop
add
ja
add
mov
push
or
mov
scas
fdivrl
sbb
mov
jg
gs
push
negl
mov
ljmp
pop
fwait
pop
mov
pop
fnsave
cmpsb
aam
mov
push
mov
daa
out
test
xor
push
insl
les
lea
inc
inc
jno
add
sbb
flds
mov
xchg
hlt
jmp
sub
pusha
cmp
jl
push
or
popf
xor
fcoml
dec
jle
jae
icebp
orl
inc
aaa
mov
push
stos
mov
lods
sbb
xor
in
mov
mov
andb
push
mov
lahf
xchg
ret
rcrl
and
inc
push
daa
aad
add
insb
lods
or
sub
jp
das
mov
xchg
repnz
mov
mov
push
es
aaa
xchg
xor
nop
fcmovu
mov
mov
out
mov
loope
daa
add
xchg
loop
pop
mulb
dec
jle
sbb
mov
xor
jp
cmpsl
lret
jno
mov
mov
daa
das
test
xor
push
scas
cmpsb
cmp
sub
pop
movsb
adc
les
jno
outsl
stc
inc
fcmovu
jne
or
dec
mov
and
js
insl
jge
and
leave
add
das
repz
mov
inc
mov
movsb
xchg
sahf
movsl
cmp
inc
jecxz
jg
xchg
int3
mov
test
clc
ds
ds
cmp
gs
add
inc
inc
lock
xor
insl
and
pop
pop
repnz
mov
push
pop
xchg
sub
cltd
loope
mov
imul
adc
popf
hlt
cmp
fstps
inc
ficompl
inc
jecxz
lock
adcl
sub
scas
ljmp
push
addl
ret
jmp
ror
cmp
iret
push
icebp
pop
ja
aad
adc
add
pop
rcrl
sbb
or
aad
pop
cmp
les
sbb
xor
loope
sahf
xchg
ljmp
xchg
mov
out
cmp
add
aaa
imul
or
fnstenv
push
cwtl
pop
pop
mov
jbe
xchg
adc
stc
jns
jno
lock
divl
and
das
mov
std
data16
mov
dec
lea
imul
xor
mov
pop
mulb
test
rcl
push
adc
rol
shrl
sub
sahf
inc
test
dec
lds
pop
mov
dec
andl
insl
xchg
cli
gs
mov
xlat
insb
cmp
push
sbb
movsb
jg
addr16
jbe
test
ret
mov
add
xchg
and
je
call
xor
ja
out
sbb
xchg
lret
movswl
movsl
xchg
xchg
add
or
addb
hlt
std
andl
jns
stos
and
js
pop
repnz
xchg
pushl
push
pop
xor
cmp
adc
aaa
jns
lds
sti
mov
jl
pop
cmp
fwait
sbb
dec
leave
or
add
adc
pop
outsl
mov
sub
aad
or
pop
and
jbe
pop
gs
push
jp
sbb
dec
sbb
xchg
mov
movsw
daa
movsb
std
jle
push
out
ds
aas
sbb
or
mov
jmp
cwtl
sbb
pusha
scas
jmp
mov
sarb
or
dec
rcll
adc
jo
imul
pop
das
pop
push
push
or
push
cmp
enter
sub
std
xchg
jl
insl
mov
lds
aad
jle
sub
mov
dec
and
mov
sub
xor
xor
jnp
fwait
enter
fildl
test
test
insl
xor
cmp
mov
push
add
fcmove
in
fs
ret
fstpl
faddl
add
mov
jbe
mov
xchg
xchg
test
gs
jo
flds
mov
push
push
jo
mov
push
stc
mov
cmpsb
stos
dec
jb
faddl
movsb
jb
cmpsb
xchg
sub
addr16
pop
push
hlt
sbb
mov
lds
outsl
sti
js
lret
fwait
int
movsl
fwait
mov
fs
adc
lds
lea
mov
mov
je
cmp
lock
xchg
lea
adc
mov
mov
adc
shlb
xchg
addl
in
scas
popf
pop
into
test
mov
int
imul
arpl
mov
and
std
or
jl
xchg
or
jo
outsl
jnp
pop
xchg
push
icebp
xchg
mov
faddl
not
add
sbb
scas
mov
jg
mov
imul
pop
jecxz
iret
add
out
sbb
lahf
inc
or
xlat
jg
xlat
xchg
jle
fcomps
xchg
or
cld
adcl
sbb
test
jg
mov
jnp
das
push
pop
lcall
std
xor
xchg
aad
push
in
mov
sub
and
jg
fimuls
adc
push
popf
enter
mov
dec
push
lret
push
dec
lret
pop
jmp
mov
js
ret
dec
das
dec
xlat
dec
adc
and
repz
iret
cli
repz
lds
lahf
push
mov
xchg
mov
and
adc
fidivs
or
xor
mov
fs
dec
pushf
adc
inc
mov
mov
cmp
mov
push
pop
cmpb
das
scas
xor
xor
mov
push
dec
mov
jbe,pn
int3
xor
cmpl
in
add
daa
dec
adc
out
cld
jae
adc
pushf
jne
clc
test
dec
mov
hlt
cmpsl
xchg
mov
dec
push
and
icebp
mov
pop
mov
outsl
cmp
repz
mov
hlt
mov
mov
add
inc
add
or
test
inc
xchg
and
movb
test
arpl
call
mov
sub
pop
cmp
adc
fs
mov
xchg
xchg
es
xchg
clc
sbb
xchg
mov
fsts
loop
xchg
cltd
mov
sti
iret
pushf
icebp
adc
sub
sub
scas
pop
stc
adc
stos
cli
jno
cmpsl
xchg
popf
outsb
je
scas
mov
sub
fisubs
jl
xchg
idivl
lret
mov
mov
xor
add
icebp
sbb
push
mov
jge
dec
jo
fnsave
pop
test
mov
aaa
inc
mov
popa
shll
xchg
clc
or
or
andb
imul
testl
mov
ret
xchg
xchg
jge
xor
add
mov
cli
or
cli
push
in
imul
push
int
jae
scas
push
leave
dec
or
sbb
sti
in
lods
js
pop
pusha
jmp
adc
add
dec
cmc
pop
push
cwtl
test
ja
inc
fdivrs
xor
fmuls
pop
stos
and
xchg
mov
sbb
imul
mov
aad
imul
sbb
movsb
pop
mov
adc
lods
stos
shr
sbb
xor
out
push
repnz
loop
push
jno
mov
push
push
push
add
es
int3
ds
outsb
dec
ret
jae
lahf
dec
sub
sahf
jb
ficompl
popa
aaa
jns
and
sarl
pop
shlb
addb
repnz
fsubrl
pushf
cld
adc
stos
mov
inc
lods
sbb
andl
xchg
fucomip
jnp
shlb
inc
in
nop
dec
cmc
sub
dec
jnp
out
sub
push
dec
lret
or
pop
jmp
mov
lods
mov
aas
bound
sub
cmc
stos
or
jecxz
xor
push
jno
cmp
jbe
daa
ret
stos
orl
mov
and
shrb
lock
xchg
dec
in
xchg
cld
call
nop
std
cmpsb
jb
sbb
rcrb
popa
fs
fdiv
les
aam
xchg
add
mov
imul
cltd
sbb
movsl
iret
dec
outsl
and
pop
sub
cli
xor
lea
lret
outsb
mov
pop
and
shrb
es
jo
sub
das
xorb
cmpsb
jle
pushf
jl
push
jno
repz
and
icebp
mov
push
inc
int
sbb
cld
mov
repz
jno
out
mov
xchg
cvtdq2ps
repnz
pop
push
pop
mov
pusha
fwait
lods
dec
test
add
xor
lret
jbe
scas
and
into
pop
jl
jl
sub
arpl
sbb
adc
add
mov
lock
lea
pop
pop
jecxz
enter
lcall
in
adc
arpl
pop
cmp
and
jbe
fcoml
test
jbe
dec
lods
mov
cmp
stos
enter
cmp
xchg
fdivrp
fucom
lds
pop
xor
or
pop
cmp
add
cmp
and
push
cmp
sbb
fildll
xor
in
jmp
dec
dec
aaa
dec
cmpb
pop
lds
ret
cmc
xor
aam
jg
lret
ds
or
xlat
call
mov
pusha
repnz
pop
pop
mov
cmp
ret
and
jbe
mov
lret
adc
jmp
xchg
mov
mov
dec
push
mov
push
add
xchg
iret
sbb
pop
inc
lahf
addr16
mov
sub
scas
inc
jmp
sahf
xchg
pushl
shrb
pusha
xchg
es
bound
sbb
xchg
ret
stc
stos
jns
pop
btsl
sbb
mov
addl
cwtl
adc
push
jno
cltd
sub
stos
fs
sarl
insb
insb
sub
fadd
aas
out
nop
jne
or
fldcw
xchg
movsb
fdivrs
dec
xchg
lcall
inc
out
addr16
shlb
mov
in
xchg
cli
sbb
dec
sub
out
shll
stos
mov
iret
addb
cmp
test
lahf
dec
or
cmc
xchg
ja
mov
enter
xchg
arpl
add
test
sub
pop
mov
jp
lret
or
sub
stos
mov
pop
or
cld
das
push
mov
es
jmp
mov
movsl
fwait
adc
sub
add
sub
mov
cmp
and
pop
pop
mov
call
push
xacquire
addr16
add
lcall
cltd
into
imulb
push
mov
mov
ds
and
testl
das
mov
inc
adc
or
fsts
cmpsl
pop
add
xor
inc
filds
std
mov
outsl
ja
inc
push
std
dec
mov
cld
cmp
adc
jge
sub
push
dec
inc
adc
jmp
pop
cmp
in
fs
or
mov
and
dec
rolb
out
aas
mov
dec
push
pop
imul
int3
outsb
jmp
sbb
mov
arpl
aas
cltd
xchg
fstps
sub
scas
sub
fwait
lods
mov
cmc
aam
rclb
outsb
sahf
in
popf
js
push
int3
fcompl
push
mov
and
adc
mov
ss
rcrb
mov
mov
jecxz
jns
setnp
jbe
lock
pop
and
jb
mov
push
mov
jp
sbb
pop
int3
cmp
daa
sbb
sub
and
movsb
icebp
lods
daa
jp
jecxz
pop
jecxz
mov
leave
adc
cmpsb
arpl
lds
xor
out
sbb
fucomi
xlat
ret
sarb
outsl
or
scas
mov
inc
sub
inc
imul
push
add
rcrb
xor
cmp
test
add
out
loopne
out
dec
push
cs
push
aam
jle
push
mov
fs
dec
jne
push
xor
lret
out
mov
sub
test
xlat
repnz
scas
lahf
mov
dec
and
insl
mov
inc
inc
int3
arpl
mov
jne
clc
arpl
aad
incb
adc
inc
jo
imul
xchg
lods
sub
inc
cmp
mov
jbe
popf
xchg
xlat
sub
andl
cmp
add
movb
jmp
aam
clc
aam
into
lock
inc
jmp
push
push
sub
sahf
xchg
arpl
xlat
or
mov
in
cmp
les
clc
aaa
out
sbb
pop
imul
inc
cmp
pop
mov
cmc
faddl
adc
xchg
aam
jge
lock
outsb
add
fstps
mov
in
and
cmp
mov
mov
mov
and
daa
push
sbb
cmpsb
inc
les
xchg
xor
push
push
cltd
and
test
stc
in
pop
fcoms
xchg
pop
ret
movb
and
std
cmpsl
mov
fldcw
adcb
mov
or
insl
adc
lea
push
loopne
and
in
xchg
ja
pop
xor
stc
and
push
mov
cmp
imul
xlat
mov
inc
imul
add
arpl
call
xlat
inc
imull
add
lds
xchg
inc
adc
push
xchg
push
or
add
and
jbe
mov
jbe
push
dec
mov
pop
xor
insl
and
pop
fstps
push
cmpsb
hlt
and
sbb
icebp
and
gs
es
or
xor
cmp
adc
mov
out
jbe
testl
xor
cmp
outsl
stos
aas
ja
jg
je
loop,pt
pminub
mov
lret
lret
icebp
test
cmpsb
jne
loopne
test
pop
pop
mov
pushf
push
lret
dec
mov
xchg
sbb
dec
dec
test
pop
pop
push
inc
or
in
shrl
ficompl
das
cwtl
push
jns
adc
into
es
jl
mov
popa
xor
or
sub
push
and
mov
xchg
daa
mov
lahf
sbb
into
mov
fwait
xor
push
int
repz
pushf
andl
lock
sarl
mov
xlat
les
push
addr16
inc
loopne
in
aad
mov
xor
xchg
jbe
fsubl
daa
leave
add
mov
dec
or
push
jl
jmp
and
flds
out
xchg
mov
lcall
inc
popa
lahf
ljmp
testb
in
mov
imul
xor
std
fsqrt
repz
aaa
xor
add
loopne
push
daa
in
aam
or
push
cmpsb
and
jbe
jno
shlb
push
sbb
arpl
jns
sub
sub
or
xor
movsb
pop
xchg
lea
jne
ljmp
les
pusha
insb
cwtl
and
adc
and
adc
or
je
js
insb
loope
imulb
mov
cld
xchg
mov
mov
or
and
arpl
mov
es
add
call
or
in
sbb
popa
ja
aaa
or
jne
push
or
dec
stc
fs
pop
mov
cmp
jo
pop
ficoml
fstl
and
fisttps
sub
jne
stc
push
sbb
add
push
jmp
add
je
jle
cltd
inc
xlat
negl
mov
jb
pushf
test
lods
ret
lret
fwait
outsb
sub
stc
popa
in
jge
cwtl
lea
push
cwtl
arpl
fcoml
ret
and
popf
push
inc
inc
pop
push
jmp
pop
xchg
dec
xchg
xchg
das
test
fisttps
mov
xor
negb
out
xchg
hlt
outsl
inc
sbb
inc
inc
sbb
pop
lds
stc
pop
fisttpll
sbb
shlb
add
xchg
or
les
sub
and
lock
pop
enter
arpl
xchg
out
mov
push
ja
fprem1
aad
mov
js
xchg
fisubrl
mov
xor
sbb
out
mov
rclb
out
lcall
pop
mov
dec
out
or
xchg
xor
test
rol
insb
andl
cmpsb
stos
loopne
test
xlat
inc
push
adc
pop
lcall
add
loope
and
cmpsb
pop
es
jns
or
stos
pop
movsb
inc
jbe
mov
push
sbb
fdivl
pop
add
push
mov
insl
jnp,pn
cltd
aas
or
popa
cmpsb
leave
mov
mov
push
pop
and
scas
daa
rclb
sbb
fmull
jno
sbb
dec
in
push
mov
lea
sub
ja
js
pop
movsl
mov
sbb
jg
icebp
je
dec
push
mov
or
in
pop
addr16
fisttpll
cmp
sbb
mov
pop
lock
and
pop
fiadds
sbb
xor
dec
les
loop
movsl
push
repnz
dec
mov
and
add
push
mov
aas
sub
pop
aam
aaa
jge
js
fldl
dec
mov
jecxz
xchg
ss
cmp
xchg
dec
sub
jg
dec
andb
je
inc
inc
mov
xor
mov
test
jns
pop
push
xchg
iret
xchg
mov
ss
test
lds
pushf
lds
mov
mov
std
je
dec
mov
out
lcall
fbstp
daa
adc
lret
fbstp
hlt
adc
sub
inc
mov
mov
add
mov
and
bound
call
mov
jno
addl
fs
call
xchg
inc
repnz
addr16
add
mov
xorb
cvtpi2ps
int3
in
xchg
push
cmp
ja
ss
ss
pop
mov
cmpsb
push
stos
jl
adcb
sbb
lea
faddl
cmp
xchg
inc
pop
ficoml
jno
push
add
lcall
push
jno
sbb
or
push
movsb
ja
and
sbb
fstps
mov
mov
lret
xchg
sub
mov
arpl
lcall
imul
in
pop
adc
imul
push
mov
mov
lret
fistps
sbb
mov
fsubs
and
inc
loopne
bound
call
jl
in
mov
dec
mov
mov
js
mov
pop
or
outsb
mov
rclb
sbb
dec
mov
test
jb
or
rclb
mov
mov
test
cmp
pop
inc
lahf
addb
push
or
xor
fstl
popa
push
or
mov
ret
mov
fimuls
adc
stc
leave
dec
push
dec
and
out
fistps
in
inc
nop
push
mov
test
daa
jge
push
pop
pop
dec
jecxz,pn
sub
stos
cmpsb
loopne
je
pusha
xor
mov
popf
sub
xor
inc
mov
push
pop
dec
mov
dec
aas
lret
adc
mov
insb
jno
pop
into
lods
mov
pushl
inc
sahf
stos
jne
test
adc
jae
addb
pop
pop
push
xchg
jns
mov
pop
sub
jmp
mov
addl
mov
adcb
xlat
shr
call
mov
dec
cmpb
insb
dec
dec
lcall
xchg
aad
mov
pop
push
imul
dec
xchg
sbbb
xchg
movsl
cmpl
sub
xchg
sub
ss
or
pop
xchg
aas
dec
sbb
dec
ret
gs
mov
stc
shrb
shll
and
mov
add
push
insl
jmp
inc
gs
or
and
add
faddp
gs
inc
xchg
jb
mov
jge
daa
xchg
enter
mov
mov
jle
xor
call
sub
iret
mov
cmp
in
shr
or
and
add
jecxz
push
pusha
xchg
pop
pop
test
mov
dec
mov
jmp
call
lea
jge
jno
movsl
std
pop
mov
aaa
fildll
scas
adc
inc
enter
out
sub
sub
fistpll
enter
inc
ds
inc
jne
mov
stos
repnz
lods
dec
imul
inc
cli
rorb
fistps
test
stos
inc
cmp
xchg
lcall
push
rol
push
sarl
into
inc
cmpl
and
shlb
adc
mov
cmp
inc
mov
mov
cld
cmp
nop
test
and
testl
dec
insb
dec
or
mov
cmpsl
push
idivb
add
jbe
mov
clc
dec
daa
xor
cmc
aam
jp
xor
jg
mov
flds
mov
rcrb
sub
and
stos
xchg
add
xor
push
rcl
test
adc
lcall
dec
ljmp
jae
pushf
pop
sti
xchg
ja
mul
cmpsb
fmull
dec
add
fadds
movsl
add
sbb
stc
sar
in
icebp
out
inc
icebp
daa
xlat
pop
push
out
jno
add
or
push
push
jae
push
jge
ds
test
adc
mov
sub
inc
int3
ffreep
push
jge
inc
ja
ja
push
mov
stc
xchg
mov
xchg
pop
shll
sbbb
adc
lods
loop
cmpsl
mov
cmpsb
movsl
in
aad
pop
dec
test
mov
fldenv
xchg
inc
mov
adc
push
ret
in
lea
jo
imul
pop
mov
popf
lods
jecxz
imul
dec
ss
nop
in
fwait
dec
in
adc
leave
outsb
loopne
fnstenv
aad
sub
imul
sub
jge
cli
xchg
xor
or
int
call
cmp
movsl
dec
shl
jecxz
jg
dec
cmp
sub
pop
push
sbb
lcall
push
xor
ljmp
repz
mov
add
add
fs
ja
insb
in
fistps
stos
pop
rcrl
add
adc
mov
rcl
out
mov
incl
sbb
cmpsl
in
int3
std
stos
jle
xchg
ja
and
cmpsl
into
push
cltd
dec
and
in
dec
xchg
xchg
loop
ficoms
js
fwait
cli
int
cwtl
xor
out
xor
out
fiaddl
mov
nop
sbb
hlt
jecxz
mov
sarl
int
mov
popa
mov
push
push
pushf
iret
and
pop
aas
ss
insb
dec
add
std
push
jle
add
int
rorb
das
push
jae
ret
cwtl
mov
pop
cli
xor
call
mov
xchg
imul
test
lcall
aas
addr16
mov
push
pop
push
mov
jne
jmp
mov
inc
or
in
stos
in
repz
stos
fidivrl
pushf
cmpsb
lds
inc
cmpsb
push
xchg
jbe
sbb
jmp
repnz
add
adc
jmp
daa
xchg
in
mov
sbb
mov
xchg
fdivrp
cmp
test
adc
mov
adc
pushl
subb
scas
movhps
shrl
mov
outsl
mov
adc
popa
and
ljmp
cmpsl
call
gs
inc
or
sub
fwait
imul
and
push
scas
sahf
cmpsl
outsl
mov
loope
mov
adc
jno
fstl
adc
mov
add
xchg
mov
aas
push
cltd
test
pushf
jnp
cld
push
imul
test
sbb
dec
bound
repnz
jl
ret
ss
scas
adc
jmp
nop
shr
mov
pushw
orl
mov
xchg
sbb
stos
test
cmpsb
push
stos
fimuls
ss
push
stos
scas
mov
jl
and
add
and
aam
outsl
xor
jbe
enter
dec
sbb
insb
xor
push
insl
das
sub
lret
jmp
test
xchg
inc
ror
mov
and
aaa
adc
adc
cmp
xchg
aaa
adc
cltd
sub
add
movsb
jbe
lea
mov
and
jge
xor
aas
sbb
fisttps
out
sub
aaa
js
adc
out
test
mov
jg
int3
subb
push
cmc
jbe
push
cmc
fstpt
mov
rorb
into
icebp
test
mov
out
cmc
and
aaa
mov
inc
inc
sub
popf
add
dec
movsb
stc
nop
in
push
in
mov
sbb
psubusw
and
mov
sahf
rcll
push
int
xor
out
int3
popf
mov
sub
mov
or
scas
stos
setns
outsl
jp
mov
rcrb
sbb
xorl
mov
cmp
dec
push
test
and
ja
adc
orl
loopne
pop
push
movsl
sub
incl
or
sub
sbb
fldenv
sbb
mov
and
adc
pop
or
les
lahf
jns
jg
outsl
mov
pop
inc
in
add
lcall
popa
incb
pop
sbb
jnp
mov
nop
subl
stos
in
in
cmp
shrb
jcxz
cvttps2pi
dec
xchg
ds
shll
mov
rorl
jno
and
pop
shl
mov
je
arpl
imull
mov
iret
dec
jae
ljmp
mov
xchg
imul
mov
sbb
add
inc
xor
add
sti
jle
push
and
shl
sar
adc
flds
or
xchg
out
mov
push
push
adc
int3
sub
in
pop
frstor
cwtl
decl
das
cltd
pop
test
add
fisttps
pop
and
push
lods
adc
inc
and
repz
scas
jo
cmp
dec
xlat
dec
mov
int3
aaa
inc
fnstcw
clc
loopne
imul
mov
mov
ja
popf
pop
mov
dec
leave
hlt
dec
out
into
xchg
stos
ds
notb
mov
push
jnp
mov
int3
pop
mov
les
lahf
test
or
in
or
mov
addl
enter
ret
leave
repz
negl
add
je
jmp
mov
or
xchg
push
pop
adc
ljmp
ss
and
pop
adc
or
enter
dec
popf
sub
push
sbb
lods
sbb
jl
ficomps
aam
xlat
mov
pop
push
mov
xchg
dec
stos
inc
pop
dec
mov
push
lcall
inc
shlb
lahf
xchg
sbbb
adc
loop
les
nop
inc
push
xor
fsubl
pushf
je
dec
push
into
sahf
sbbl
mov
xor
jne
movsb
int
stos
lds
lahf
mov
mov
sbb
jns
insb
pop
repnz
cmc
mov
cmp
mov
mov
lods
mov
jno
add
cli
test
fmull
js
mov
push
js
xchg
or
test
fwait
aam
jp
push
adc
lea
jno
mov
lahf
xchg
inc
bound
pop
imul
insb
popf
add
pop
lahf
pop
jmp
jmp
iretw
les
sarb
jae
push
lea
pop
pop
lea
inc
aad
mov
cmp
jl
pop
xchg
sub
push
adc
jmp
aam
sbb
ficompl
cld
pop
xchg
push
sub
je
sbb
mov
mov
std
mov
mov
cs
sub
and
filds
sbb
mov
add
fwait
pop
and
lods
xchg
je
push
fisttpl
in
repnz
inc
subb
std
je
jae
adc
mov
pushf
lret
rcll
sub
xor
stc
inc
and
pop
xchg
cmp
or
scas
xchg
btr
in
stos
imul
cld
add
fsub
movsl
push
sub
jb
or
cwtl
movsb
test
cmc
mov
cmp
push
mov
jmp
dec
pop
hlt
sub
inc
cmp
xchg
testl
movsb
mov
int3
test
xchg
cmp
int3
sahf
cmp
push
repnz
loop
das
fcomip
xchg
faddl
pop
inc
bound
lret
jp
and
dec
nop
lret
dec
and
sahf
add
scas
das
sbb
cwtl
lea
push
or
nop
mov
incl
stos
mov
jmp
ret
lcall
gs
or
mov
cmp
mov
mov
dec
mov
arpl
mov
or
int3
adc
mov
cmpl
push
and
loope
sahf
call
into
ret
mov
sub
cmc
dec
popf
inc
pop
cmp
xor
cmp
sub
shlb
scas
pushf
pop
adc
fldt
adc
or
mov
push
gs
in
mov
jnp
pop
sahf
add
jmp
cmp
aas
cmp
mov
mov
int3
fsincos
ds
pop
cwtl
mov
pop
notb
mov
and
cmc
mov
movsb
mov
add
loopne
adc
fmuls
cmpsb
adc
dec
daa
repnz
add
loopne
insb
cwtl
fwait
or
mov
mov
ret
jae
add
mov
sbb
jg
cmpsb
in
sub
jge
mov
or
lea
mov
xchg
mov
xor
lea
dec
adc
adc
xor
mov
sub
xor
push
add
sbb
add
dec
push
imul
xchg
xchg
push
xchg
dec
add
jle
test
cld
dec
push
into
clc
ret
jg
outsl
pop
mov
push
push
or
xor
test
and
adc
imul
orl
mov
push
les
xor
pop
cmpsb
pop
cmp
leave
xchg
cmp
wrmsr
out
mov
fst
xor
pop
popf
mov
xor
mov
repnz
aaa
xchg
sbb
nop
es
jecxz
mov
shl
popa
dec
dec
test
xchg
xlat
lods
stc
aas
adc
jmp
sbb
ljmp
movsl
test
mov
arpl
inc
or
stc
mov
dec
xor
mov
and
aaa
inc
xor
rcll
jp
dec
push
add
jne
sub
insb
notl
into
out
push
and
mov
or
fwait
imul
icebp
js
mov
lcall
fbstp
xor
cmpsb
and
xchg
shll
gs
sub
jae
popf
mov
sub
jp
pop
repnz
push
in
xchg
inc
fistps
shlb
andl
jl
repz
xchg
int3
loop
sahf
bound
es
daa
xchg
pop
fnsave
xor
jle
je
push
test
adc
mov
inc
xor
and
stc
negl
sub
ja
ljmp
pop
cmp
jnp
das
rep
pop
xor
ret
enter
dec
sbb
xchg
ret
int3
shlb
adc
cmp
xchg
mov
aad
adc
dec
jg
mov
mov
fs
jns
fwait
out
gs
jmp
dec
fdivrl
xor
pop
push
cmp
xchg
mov
lret
jp
mov
cltd
mov
out
iret
cmp
mov
ja
lods
push
test
push
icebp
push
mov
and
and
fildl
or
test
aas
in
addr16
inc
jmp
test
frstor
push
dec
arpl
incl
jle
dec
add
ljmp
jne
cmp
pop
pop
lea
sub
mov
jmp
mov
add
and
pop
xor
lods
dec
mov
jnp
inc
sti
cmp
push
or
sahf
add
es
xor
jge
sbbb
popl
sbb
ret
mov
xlat
push
cltd
jecxz
jnp
in
sbb
mov
push
scas
push
mov
loope
in
out
test
inc
stc
enter
mov
mov
mov
pop
sub
enter
or
insl
test
popf
imul
mov
aas
lock
mov
icebp
xor
or
js
push
mov
lea
pop
adc
mov
pop
adc
aad
lods
ja
cmpsb
cmp
rcrl
push
pop
in
mov
lods
mov
aam
outsb
mov
icebp
pushl
xchg
enter
dec
mov
fildll
pusha
jl
and
data16
dec
subl
cmp
sub
cmp
and
pop
mov
push
pop
xchg
inc
xor
scas
hlt
add
jnp
mov
mov
push
or
jge
dec
outsb
out
outsb
inc
insb
je
pop
adc
fwait
inc
mov
mov
popa
mov
repnz
ljmp
xchg
je
xor
jle
int3
movsl
or
ret
adc
ljmp
adc
cmp
sub
lds
es
adcb
pop
hlt
jo
push
jmp
pop
repz
enter
mov
fdivrs
test
xchg
out
pop
fwait
sub
lret
jge
lcall
sti
sub
jae
mov
cmc
pop
popa
xor
es
jne
mov
pop
push
push
jnp
movsb
add
adc
dec
jp
call
out
sbb
into
push
sbb
ret
sbb
sahf
fmuls
jmp
daa
xchg
dec
push
shll
mov
pusha
nop
sbb
cmp
xchg
popf
stos
mov
aad
push
or
mov
push
push
and
adc
jl
jmp
lret
fdiv
jecxz
push
cmp
sub
das
mov
icebp
out
bound
in
or
xor
mov
mov
jno
sbb
aas
inc
pop
sbb
nop
stc
loope
pop
pop
jbe
addr16
imul
out
insl
and
pop
sar
test
xor
imul
sbb
mov
repnz
jecxz
in
xchg
sbb
mov
sbb
add
jnp
sbb
sarl
dec
pushf
and
jle,pt
xchg
call
in
sbb
ret
aaa
stos
add
mov
ret
into
cmpsl
je
mov
inc
dec
mov
dec
mov
dec
lods
push
scas
rclb
xor
lahf
stc
sarl
ret
mov
jp
push
scas
xor
mov
fwait
push
cld
icebp
mov
sahf
sbb
sahf
popa
rclb
mov
sub
js
or
jecxz
popa
popf
xchg
cmp
filds
push
int
outsb
inc
ljmp
cmp
inc
pushl
push
jbe
test
cmpsb
sbb
imul
or
jb
int
add
arpl
jmp
push
roll
aam
sbb
pop
jmp
jne
out
stos
rorl
mov
xlat
insb
mov
cltd
mov
aaa
sahf
popl
loopne
xor
in
push
leave
popa
ret
mov
pop
jl
test
imulb
sub
lret
inc
sbb
gs
jge
cltd
cltd
mov
aam
xchg
mov
lea
gs
adc
jno
adcl
cs
push
pop
pop
adc
scas
and
pop
pop
movsb
mov
scas
push
in
xchg
or
cmp
mov
call
mov
ret
xchg
loop
mull
and
and
sti
fstps
stc
push
mov
aaa
xchg
pop
inc
in
hlt
cmp
je
adc
pop
inc
or
nop
push
lcall
hlt
sub
cmp
mov
inc
cmp
mov
movsb
leave
ficoms
mov
mov
or
fldt
aas
test
or
scas
mov
fs
out
dec
inc
aam
xchg
aaa
addr16
ret
ds
xchg
or
mov
push
add
cmp
out
jle
jmp
dec
shrl
les
das
mov
clc
gs
inc
mov
icebp
cmp
adc
out
cmp
adc
mov
loopne
shrl
jmp
loop
jae
in
pop
push
push
or
mov
pop
inc
data16
pushf
push
popa
in
jae
shll
xchg
push
into
inc
jno
xchg
adc
ret
js
inc
push
mov
shl
xchg
xchg
inc
and
loop
push
jge
mov
adc
adc
sbb
pop
lods
sub
dec
loope
call
push
aas
out
push
aaa
lds
cmp
jb
inc
dec
rol
mov
adc
adc
mov
fcoml
jae
fisttps
subl
iret
xor
insb
repz
mov
ljmp
push
xor
mov
mov
out
imul
cs
iret
xchg
cmpsl
gs
and
mov
sub
scas
sbb
mov
cmp
iret
sub
clc
mov
pop
lock
jbe
out
shlb
cmp
sbb
es
movntq
inc
jno
add
insl
and
push
mov
in
dec
mov
sub
std
mov
jecxz
add
outsl
or
fadds
adc
negl
sbb
ret
call
cmp
sahf
fimull
fsubrs
push
lahf
into
clc
inc
fldl
gs
dec
sub
mov
add
aam
pop
lret
jns
ja
mov
mov
ret
lock
loopne
sub
test
and
scas
lahf
adc
inc
jnp
stc
inc
or
jg
jge
cmp
push
cmpl
inc
inc
sub
incl
inc
or
or
mov
out
jecxz
jmp
jmp
sti
les
ljmp
push
xchg
pop
mov
jge
shlb
in
jle
cmp
dec
vpmacssdd
pop
imul
jne
rcrl
sbbb
out
add
xchg
inc
lds
sub
int
pop
and
lock
jne
cmp
inc
pop
into
stc
mov
xchg
dec
nop
dec
test
xchg
in
mov
cltd
mov
stos
xor
sbb
test
loop
inc
cmc
jae
lea
xor
sbb
es
addr16
lock
mov
xlat
push
jg
adc
imul
inc
inc
mov
ffreep
ret
pushf
int3
pop
adc
bound
outsl
or
adc
stos
dec
inc
cmp
or
orb
cli
and
pushl
mov
xor
mov
mov
addr16
mov
or
nop
push
sar
push
es
inc
push
jns
cmp
jle
es
jge
lea
lods
xchg
loop
add
push
xchg
jae
and
xor
cli
cmp
ret
add
je
mov
and
push
out
push
ficompl
aad
std
sahf
addb
xor
scas
or
adc
cmp
sbb
push
fildll
inc
repnz
js
or
fsts
aam
push
sub
xchg
and
les
outsl
xchg
push
notl
div
jge
cmp
jnp
xchg
cmpsl
out
xchg
mov
xlat
lret
cmp
arpl
arpl
mov
adcl
imul
pop
jne
mov
add
iret
inc
ds
dec
mov
test
scas
pop
xchg
loop
push
and
jecxz
nop
mov
add
lods
and
jecxz
dec
mov
int
inc
or
imul
cmp
or
repz
xor
fwait
push
dec
les
fcmovnbe
xchg
xorl
push
mov
push
stos
mov
mov
push
sbb
aas
xchg
ficoml
les
gs
xor
or
push
movsb
lods
stc
scas
inc
clc
insl
iret
ret
test
xchg
arpl
out
repz
dec
or
cwtl
and
jle
loopne
std
add
jae
pop
sbb
jns
adc
add
mov
sub
in
jmp
pusha
cmpb
jo
cwtl
or
xor
sub
rorl
jb
pop
pop
scas
cmc
add
cmp
call
insl
jg
repz
sub
outsl
addr16
fsubrl
bound
pop
add
cmpsb
xchg
push
xchg
or
sbb
sub
mov
mov
lahf
loope
xchg
testb
cmp
xchg
loop
jo
ljmp
nop
idivl
dec
jg
iret
xchg
sub
mov
hlt
mov
dec
jae
and
repz
pop
add
inc
rcrb
or
aam
mov
sub
out
mov
les
or
add
lcall
scas
aaa
aas
pop
cmp
test
mov
flds
sbb
outsl
fidivs
or
out
addb
jmp
jo
es
jge
mov
cmpb
mov
push
mov
addr16
lret
jnp
pop
mov
xchg
nop
mov
jns
sbb
mov
into
pop
mov
xchg
test
jnp
fstpt
lds
sub
lods
test
cmp
cwtl
repnz
mov
sub
mov
je
add
clc
int3
inc
jb
std
scas
arpl
push
add
es
sahf
cmp
xchg
or
je
or
out
add
das
aam
mov
cmp
inc
jl
xchg
jg
lea
push
add
lcall
xor
sbb
outsb
or
js
adc
jb
ljmp
adc
in
and
movsl
fldl
pop
jb
test
mov
fucomip
loopne
or
cltd
mov
call
aad
imul
fildll
push
shl
mov
sbb
xchg
daa
pusha
xchg
sub
xchg
in
pop
jno
in
lahf
cmp
adc
enter
mov
loope
stos
add
dec
xor
clc
jo
in
sahf
loopne
inc
jp
shr
das
push
jo
arpl
mov
or
out
bound
and
cmp
outsb
cmpsb
push
add
mov
or
out
shl
fsubrl
ja
jbe
ffree
enter
in
mov
or
and
mov
shrl
xor
sub
mov
ret
nop
pop
mov
xchg
jo
jle
sub
xchg
mov
out
aaa
sbb
bound
mov
or
mov
jge
aaa
adcb
je
cmp
xor
ljmp
repz
add
adc
xchg
mov
pop
lcall
add
enter
cmpsl
mov
inc
adc
or
pop
movsb
sub
mov
test
imull
xchg
add
adc
adc
jno
mov
nop
roll
pop
jg
mov
xchg
cld
mov
jg
cmp
ret
stos
dec
rorl
pop
dec
ja
ss
lret
aad
mov
sarl
push
int
and
shl
sbb
cmpb
cmc
or
mov
rcrl
div
cmp
inc
mov
push
jmp
das
pop
push
insl
in
fimull
mov
cltd
pop
inc
leave
push
pop
inc
sbb
sub
and
xchg
shll
fstps
mov
ljmp
xchg
incl
mov
arpl
or
in
xchg
cld
xchg
pop
in
data16
int3
jl
jne
std
mov
pop
repnz
xchg
mov
jge
pop
or
stos
xor
in
fcmovu
mov
push
pop
fwait
push
mov
data16
ljmp
push
push
rcrb
mov
aaa
and
fstp
xchg
sbb
jmp
lret
dec
or
xchg
xor
addr16
leave
xchg
mov
rcll
jecxz
scas
movsb
jno
pop
into
in
insb
jge
pop
or
popf
mov
mov
aas
add
inc
orb
mov
inc
dec
int3
add
jmp
and
outsl
incl
fisttps
add
or
lret
lds
call
lods
jecxz
cmp
add
mov
sahf
imul
loope
and
lahf
popf
mov
sti
mov
jns
push
xlat
sbb
mov
jns
in
insl
fwait
ljmp
movsl
clc
mov
adc
push
in
sub
notl
fsub
and
out
in
fstpl
mov
ljmp
outsb
jle
lods
fdivl
xor
flds
add
cs
jmp
in
out
pop
mov
and
xor
adc
arpl
fidivrs
fcom
int
dec
lock
pop
jbe
pop
test
mov
push
cwtl
cmp
mov
add
stos
dec
mov
pop
stc
fdivr
sti
pop
inc
cld
cmpsb
mov
add
cmp
sub
add
test
cmp
cli
scas
push
and
adc
aam
mov
cld
nop
inc
adc
cli
lods
mov
xor
sar
adcb
fnstsw
adc
icebp
xor
in
push
cmp
mov
pop
hlt
inc
pop
jge
push
cmc
lret
scas
dec
xorl
sti
imul
inc
inc
cltd
mov
xchg
pop
adc
lret
hlt
in
mov
into
js
fbstp
insb
rorl
fadd
leave
dec
lods
movaps
movsb
jg
add
ficompl
xor
test
popa
inc
js
mov
cld
push
popa
cld
fisubl
and
std
in
leave
mov
or
and
daa
pop
dec
fsts
pushf
clc
xchg
xlat
mov
mov
cmp
sub
and
ret
out
push
mov
std
jae
lahf
scas
je
inc
pop
sub
sbb
mov
mov
in
cmpsb
popf
mov
test
lods
in
mov
pop
cmp
pop
mov
cmp
cmc
push
mov
xlat
mov
out
fwait
mov
lods
lahf
and
fucomi
je
pusha
js
test
mov
sbb
icebp
cmp
jnp
andb
jo
mov
mov
pop
dec
mov
xchg
hlt
and
ljmp
pop
inc
xor
adc
bound
in
imul
arpl
sub
imul
mov
jle
enter
scas
dec
mov
xchg
mov
mov
arpl
and
push
adc
dec
movsl
dec
jb
dec
stos
mov
lock
out
adcb
movsl
mov
pop
sbb
adc
shrl
pop
sub
mov
sub
cwtl
push
imul
outsl
xchg
lret
push
aad
and
mov
mov
fmul
push
sub
sub
jns
sub
jno
movsb
into
xchg
mov
test
inc
sbb
ret
mov
stc
ficompl
adc
jp
icebp
mov
into
clc
fsubp
aam
cmpsl
fld
add
xchg
and
inc
sub
mov
repnz
sbb
jmp
and
and
pusha
pusha
sahf
loopne
out
sbb
filds
or
out
jp
mov
sub
pop
cwtl
movsb
jnp
ljmp
jo
push
push
mov
dec
cmp
sbb
pop
es
xor
int3
popa
sti
mov
jmp
push
mov
jns
scas
pop
push
jmp
daa
sahf
adc
jg
jne
ja
ss
stc
cmp
and
insb
or
stos
call
out
mov
test
mov
pop
addr16
dec
in
call
adc
inc
and
adcl
aam
xchg
jp
push
sti
lds
gs
mov
cmp
scas
sbb
adc
aaa
mov
mov
ret
add
add
inc
inc
pusha
add
push
lret
cmpsb
push
sub
push
lds
sub
jbe
mov
inc
cs
hlt
or
js
push
dec
gs
aam
movsb
mov
xor
sahf
lods
and
add
jae
mov
xchg
cmp
iret
inc
jmp
das
mov
fxch
out
pop
add
sbb
and
push
lds
imul
jbe
xor
sti
pop
leave
inc
aas
cwtl
das
or
fst
or
lret
mov
mov
dec
aas
insl
aad
popf
shlb
je
ja
push
mov
mov
test
pop
cmpsl
pop
push
out
orb
xchg
adc
aas
mov
jmp
push
pop
out
sub
push
sub
fwait
pause
dec
test
and
jbe
pop
pop
add
mov
pop
fs
arpl
test
cli
mov
ljmp
jmp
jo
mov
cmp
ja
test
dec
lods
mov
dec
xor
stos
dec
pusha
scas
xor
or
js
fbstp
mov
push
lahf
loopne
mov
out
xor
mov
lods
mov
stc
pop
mov
jg
std
adc
mov
xchg
pop
inc
int
push
xor
push
xor
stos
push
xchg
push
mov
or
in
das
fcompl
cmp
push
ret
cmpsb
fldt
and
jnp
jge
xchg
sbb
das
cmpsl
mov
mov
push
and
mov
push
ljmp
js
stos
les
jmp
or
xchg
pushf
sbb
sbb
jp
push
push
mov
dec
aam
pop
rcll
loop
jl
inc
shll
sbb
fistpll
mov
je
dec
les
adc
lret
sbb
xchg
xor
dec
data16
imul
inc
scas
gs
xor
inc
bound
lods
ja
cmc
add
add
aad
imul
push
pop
lahf
inc
out
push
push
scas
cmc
pop
sbb
imul
adc
lock
aas
sbb
add
push
test
insl
dec
cltd
adc
stos
in
jae
fs
ljmp
sahf
cmpsl
or
sub
mov
sbb
xor
in
pusha
mov
mov
mov
and
adc
pop
pop
xchg
or
add
cmpl
insl
cli
cmpsb
mov
lea
orps
dec
xchg
or
lods
xchg
cmpb
push
fnsave
jbe
std
clc
or
in
xor
mov
xorb
dec
lret
out
push
in
fnstcw
rolb
fs
inc
fdivs
sub
sub
jge
sti
mov
dec
mov
sbb
outsl
incb
cwtl
insb
adc
cmc
sbb
sub
idiv
cmp
jmp
cmpb
ljmp
cmc
push
push
cmc
fdivr
and
jb
movsb
int
call
dec
adcb
or
fldenv
nop
js
in
loope
cmpsb
jl
bound
or
pop
mov
faddl
in
test
mov
ja
push
dec
dec
mov
out
pop
lea
mov
push
push
mov
add
and
push
adc
sbb
movsb
iret
dec
jb
push
sub
shl
pop
cmpsb
js
xor
sub
lods
imul
pop
movl
jl
cld
vandpd
fnsave
pop
fwait
jo
repz
jl
and
xchg
mov
sbb
cmpl
sbb
loop
pop
push
movsb
in
push
sub
sbb
cmovo
xchg
mov
lahf
xor
mov
popf
push
pop
mov
adc
ret
add
daa
addr16
inc
mov
mov
adc
or
lods
ds
mov
icebp
lret
adc
mov
add
lret
mov
fcmovne
add
clc
push
fs
jmp
add
lock
sbb
jmp
out
out
ds
push
push
js
mov
ret
repnz
push
xor
loopne
pop
mov
pushl
pop
xor
fcoms
jo
jns
call
add
popf
mov
divl
pop
inc
xlat
or
jae
cmpl
jmp
out
push
push
and
les
mul
push
xchg
iret
lahf
jns
xor
sub
pop
in
pop
orb
cli
add
int3
jecxz
mov
int3
add
jae
pop
pop
inc
mov
pusha
adc
cmc
xchg
mov
dec
inc
sar
insl
mov
mov
jecxz
mov
std
es
ret
daa
sti
push
push
push
inc
aam
popa
mov
xor
lea
bound
push
sub
xchg
push
daa
add
pop
std
and
adcl
sub
fisttpl
leave
fsubl
mov
xchg
es
movsb
xor
sti
xor
sub
lcall
lds
daa
mov
insl
clc
nop
addr16
lods
xor
js
and
clc
je
pusha
dec
arpl
fbstp
cmpsl
test
mov
es
roll
and
pop
fiadds
cld
fldenv
ret
mov
in
sti
cmc
lcall
mov
imul
and
in
adc
fwait
xor
or
pop
cmp
bound
in
add
push
cltd
mov
enter
imul
push
sbb
dec
out
add
mov
cmp
shlb
fisubrs
xchg
xchg
or
xlat
xor
mov
sub
mov
fcoms
mov
stos
gs
shll
push
xor
mov
outsb
scas
inc
popf
cmp
adcl
xor
and
cmp
mov
sahf
push
leave
gs
mov
icebp
jl
pushf
inc
mov
lods
mov
subb
cld
jl
test
xchg
lods
sbb
ret
fs
mov
sti
ret
push
sbb
cmp
insl
cmp
decl
dec
fld
in
data16
mov
lods
xor
inc
push
lock
shrl
adc
jmp
mov
jge
aad
bound
push
shr
cmp
sti
push
mov
pop
mov
ljmp
fwait
sbb
stos
daa
lret
mov
jg
inc
test
lds
mov
and
jmp
xchg
cmp
les
sbb
cld
icebp
in
in
mov
mov
mov
and
sub
adc
sbb
cmp
mov
imul
cmp
sub
inc
icebp
add
arpl
add
stos
aad
cmc
cld
cs
push
cltd
or
out
push
lods
add
and
cltd
pusha
inc
mov
xchg
cmpsb
mov
mov
push
pop
rorl
shll
lds
add
mov
xchg
inc
icebp
jns
xlat
outsl
and
cltd
cmp
mov
xchg
std
mov
test
mov
stos
test
fnstcw
mov
xchg
jbe
bound
out
sbb
pop
into
mov
mov
sarb
mov
cs
jl
sbb
mov
and
cli
cmpl
imul
out
sub
int
insb
nop
ret
push
pop
push
icebp
int
jb
inc
dec
iret
push
ret
adc
jg
ds
daa
hlt
fimuls
outsl
dec
cmp
adc
adc
mov
xlat
push
add
inc
subb
lock
dec
jg
xchg
loope
sbb
add
insl
xchg
xor
icebp
pushf
pop
dec
sub
adc
xor
loope
mov
inc
push
daa
enter
gs
ret
or
jno
hlt
mov
inc
and
and
outsb
daa
aad
and
ja
movsl
adc
push
cli
cmp
sub
xor
pushl
insb
cmc
jl
outsb
sahf
stc
jbe
dec
fbstp
movsb
cld
sub
daa
stc
out
data16
clc
ror
push
xor
cmp
sti
xor
mov
cmp
xlat
sarl
stos
xor
inc
movsb
xchg
enter
fwait
test
pop
mov
fs
cmp
fcmovnu
inc
call
adc
xor
mov
sbb
sbb
mov
push
pusha
in
std
or
mov
dec
jb
jo
call
jns
loope
jne
add
lahf
lret
or
sub
add
das
adc
insl
sti
dec
push
and
mov
arpl
mov
jg
mov
sti
rclb
int3
lods
jecxz
sar
addl
hlt
aam
mov
push
jg
jb
pop
lods
ja
xor
lds
adc
arpl
jl
ja
or
sbb
hlt
icebp
inc
pop
add
cli
fiaddl
lock
add
push
pop
and
jbe
inc
rorb
cmp
sbb
cwtl
and
test
and
sahf
xchg
icebp
push
test
fcmovbe
leave
mov
mov
mov
sbb
cmp
sbb
sbb
les
outsb
jl
aas
in
fwait
repz
ret
push
out
bsf
sbb
test
divb
in
aas
sbbb
hlt
jnp
mov
add
pop
es
fsubrs
sbb
sub
mov
mov
jp
shrb
sbb
out
mov
cwtl
fs
push
jp
mov
pop
je
in
sahf
pop
sub
xor
mov
xchg
je
xor
fwait
xlat
dec
jns
xchg
add
mov
in
cmp
mov
xchg
push
mov
rol
test
adc
push
inc
adc
cmp
stc
insb
push
or
ret
add
sbb
add
inc
test
pop
sarb
pop
ret
xchg
pushf
les
cwtl
cmp
inc
adc
loope
xor
lods
fidivl
loop
xorb
sub
aaa
fsubrl
or
mov
mov
outsb
mov
mov
pop
pop
outsb
cmp
pushf
repz
mov
mov
pushf
mov
rorl
das
cmp
add
cmpsl
popf
fbld
leave
cmpsl
test
jecxz
lret
cs
xor
popf
pop
cmp
inc
mov
ret
popf
adc
sbb
daa
jo
cmpsl
xor
cmp
xchg
call
lcall
inc
sbbl
popa
jle
gs
push
fcomps
jecxz
popa
test
xor
les
push
adc
mov
js
out
sbb
ljmp
not
stc
leave
push
jmp
imul
or
xor
movsb
movsb
rorl
out
xlat
or
xchg
gs
adc
inc
outsl
mov
jb
inc
mov
stos
push
push
ljmp
leave
pop
sub
cwtl
xor
mov
je
testb
or
pop
cwtl
pushf
xchg
inc
aaa
psadbw
sub
mov
or
shl
loopne
shlb
inc
pushf
rcrl
das
adc
mov
sbb
xor
xchg
dec
mov
sarl
push
outsb
add
filds
clc
mov
repz
aam
jp
cmpsl
adc
lea
mov
in
pop
dec
fdivrl
mov
mov
adc
pop
mov
xchg
scas
test
dec
and
xchg
mov
cmpsl
mov
dec
fsts
in
js
sbb
imul
mov
rcll
clc
iret
xorb
push
pop
pop
sbb
cmpsb
test
and
push
mov
push
out
adc
stos
sub
push
sbb
xchg
js
popf
xchg
mov
adc
test
xor
xchg
mov
ds
call
xor
push
clc
nop
rol
jl
gs
in
dec
into
call
add
ja
xlat
dec
push
cmpb
or
add
fwait
call
dec
bound
xor
inc
pop
xchg
pop
out
xlat
insb
inc
pop
in
scas
repz
pop
insl
call
jb
xchg
cmp
js
pushl
or
mov
xor
mov
and
and
mov
mov
iret
aam
andb
xor
shlb
fdivl
mov
xorb
mov
sub
inc
pop
xchg
dec
fs
movsl
data16
hlt
lret
jo
int3
push
dec
pop
enter
test
cmp
sub
fistpl
sbb
out
adc
arpl
cld
outsl
jecxz
sub
adc
mov
loope
cwtl
inc
or
sub
or
addl
decl
pop
cwtl
jne
dec
mov
inc
jl
mov
aam
mov
dec
add
imul
stc
pushf
fistpl
in
insb
jg
sub
addr16
aad
mov
cmp
cmc
ret
push
lds
loope
or
dec
cli
and
mov
dec
mov
mov
mov
add
scas
push
jo
jae
pop
xor
dec
xchg
cmp
sbb
push
aas
and
fdivl
pop
cmpl
mov
repnz
je
sub
mov
xor
push
fsub
adc
dec
xchg
mov
jnp
push
add
dec
sub
add
inc
xor
mov
xlat
add
lcall
pusha
cmp
sbb
pop
repnz
lods
das
dec
icebp
fstl
mov
cmpsl
push
lret
fs
and
push
movsb
mov
test
jge
push
lds
push
movsl
fisubrs
jl
mov
fisubrs
jl
imul
outsb
in
mov
adc
mov
int
add
sbb
adc
lahf
push
mov
cmp
addr16
loopne
ja
and
scas
dec
push
sti
aad
das
imul
out
mov
mov
xor
fimull
int3
mov
xchg
pushf
fnstcw
and
mov
in
or
jp
iret
das
mov
pop
add
push
in
je
push
mov
shrl
cmp
pushf
rcll
inc
popa
pop
dec
sbb
ss
in
jmp
adc
sub
xchg
idivl
dec
ds
scas
xchg
push
out
outsb
mov
pop
ret
sti
lea
push
aas
xor
rolb
bnd
popa
ret
popa
push
int3
push
jecxz
mov
mov
mov
mov
pop
xchg
test
call
repnz
popl
pop
add
inc
mov
jl
cmc
sbb
push
adc
pop
lds
loopne
push
jge
xchg
lds
push
rorb
adc
fisubs
xchg
mov
push
adc
fcoml
jl
jl
scas
adc
xor
iret
lods
popa
mov
pop
or
jne
lock
or
sbb
add
cmc
sub
mov
pop
mov
subl
sahf
cmp
and
sbb
lock
xchg
sub
cmp
mov
outsb
aam
mov
imul
xchg
js
dec
incb
cld
outsl
jo
cmpsb
inc
adc
ficompl
sbb
repz
jne
mov
jo
pusha
sbbl
faddl
mov
fcompl
xor
push
cli
outsl
inc
scas
sbb
js
lret
hlt
pop
jo
jbe
jb
push
adc
out
cmp
mov
dec
rorb
push
jo
cmp
mov
mov
pop
and
cmp
pop
outsl
pop
push
mov
je
xchg
jg
xchg
jne
fst
add
push
mov
mov
mov
push
inc
pusha
inc
pop
jb
xor
dec
dec
or
mov
dec
or
and
icebp
es
fwait
adc
clc
stos
xchg
inc
stc
rcr
insb
mov
push
repnz
mov
clc
and
mov
in
push
loopne
push
test
jp
imul
lods
pop
xlat
in
xor
imul
push
nop
jnp
mov
xor
out
in
pop
dec
mov
cvtdq2ps
sbb
add
in
popf
and
je
call
iret
pop
mov
xchg
push
in
xchg
fildl
nop
mov
sbb
sarl
daa
repz
xor
dec
fldl
fistps
fistpl
adc
inc
lock
mov
cs
or
fstp
and
push
cmp
xchg
xchg
push
shl
sbbb
loopne
inc
inc
mov
jge
xchg
mov
repz
dec
xchg
pop
mov
adc
push
adc
cli
test
testl
popa
int
aam
jp
or
stos
es
scas
lret
jae
xchg
fcmovb
in
pushf
jg
sar
xchg
jge
jno
lods
jne
out
inc
testl
in
or
outsl
cld
jg
inc
imul
pusha
outsl
addr16
cmp
sub
sub
add
and
and
jb
sbb
das
sbb
and
inc
repz
mov
cmp
insl
adc
lea
cmp
mov
jle
test
andb
mov
ljmp
or
mov
and
push
into
outsl
jne
daa
aad
mov
mov
rolb
mov
jmp
arpl
xor
fimull
push
xchg
lock
mov
cwtl
lds
and
xor
cmp
fisubl
xchg
jl
jmp
mov
sbb
mov
popa
mov
loop
clc
xor
es
dec
imul
or
ret
or
adc
adc
sbb
or
aaa
ret
je
es
addr16
jns
stos
and
cmp
in
sub
js
mov
mov
xchg
rcrl
cmp
ret
xchg
add
sahf
fdivrs
fsubr
imul
loop
negb
fidivl
addb
sbbl
scas
outsl
sbb
cmp
mov
fwait
xor
gs
pusha
dec
cmp
mov
xor
shr
push
push
out
stos
xor
jle
data16
inc
jge
xlat
iret
sti
inc
or
or
jb
gs
ja
iret
inc
mov
fwait
stos
mov
scas
mov
clc
insb
sbbb
loopne
int
jns
push
ljmp
jbe
leave
jo
sbb
aas
out
dec
sub
lret
pushf
dec
pop
out
xor
inc
xchg
push
xchg
mov
arpl
loopne
es
cmp
pop
pop
jecxz
pop
js
xor
test
test
or
xor
push
out
push
inc
test
jg
int
mov
sub
icebp
test
popa
mov
fmull
and
movsl
and
xchg
mov
mov
mov
int3
pop
sub
loope
lcall
cmp
sub
sbb
dec
and
pop
sbb
xor
dec
add
scas
pop
xor
call
stos
push
sub
fistps
dec
push
adc
adc
shlb
pop
mov
mov
int3
sub
pusha
lcall
cmp
mov
outsl
cmc
xor
movsb
fs
fdivrs
jae
push
mov
push
xchg
into
int
stos
cmp
ud2
iret
push
out
or
fbld
fistl
xor
mov
lods
xor
pop
pop
jbe
push
mov
ds
pusha
mov
ficompl
adc
pop
dec
fistps
arpl
push
loope
mov
std
jmp
mov
es
loopne
out
shrl
cmp
cmp
pop
push
fisubrs
add
or
dec
cmpsb
mov
pop
xchg
sub
cmpsb
jge
adc
push
push
test
cld
lods
add
cmc
pop
ds
out
xchg
mov
fistl
cmpsl
ret
cltd
pop
push
ljmp
mov
jbe
pop
cmp
pusha
xchg
insb
mov
test
push
icebp
enter
cmp
loop
das
fidivl
ljmp
mov
sbb
adc
out
cmp
stos
aaa
inc
mov
and
cmp
fistps
cmp
js
adc
repz
or
or
xchg
dec
sbb
shr
cld
pop
mov
xor
test
and
loop
test
pop
andb
imul
cli
or
loope
mov
pop
xchg
repnz
pop
movsl
outsl
fistl
jle
jb
test
fstl
es
roll
sbb
sti
sarl
cwtl
or
add
push
or
in
popa
rclb
faddl
mov
cmpsb
pop
jns
sub
sub
icebp
cmpb
mov
xchg
in
jmp
mov
xor
jecxz
cltd
arpl
adc
jl
and
enter
sub
dec
mov
fsubrl
pop
lods
or
dec
fstpt
inc
adc
popf
cmp
push
dec
in
dec
pop
hlt
andb
xorl
and
cmc
pop
jnp
aad
data16
mov
mov
push
iret
dec
sbb
loope
loopne
or
jnp
iret
mov
sbb
sub
lret
addl
test
jno
ret
das
sbb
pop
scas
push
jb
pushfw
pop
mov
fidivrl
test
pusha
push
insb
ret
cmp
mov
inc
mov
xlat
stos
in
sub
jb
jmp
dec
in
aad
push
pop
and
nop
pop
xchg
into
inc
dec
mov
movsl
outsb
xor
movsl
xor
pop
cmp
lret
mov
jne
outsb
mov
je
out
xor
pop
adcl
clc
push
neg
imul
add
imul
xor
inc
push
jg
cmp
lret
in
pop
and
adc
ds
push
bound
fiaddl
rcr
mov
mov
adc
dec
mov
add
adc
imul
sbb
arpl
outsb
das
int3
fisubrl
pushf
insl
cwtl
int3
decb
push
sti
inc
fldcw
je
into
imul
cli
cmp
mov
xchg
fwait
lahf
dec
das
push
aaa
out
jge
data16
xor
into
pushf
inc
scas
outsb
loope
or
pop
and
jp
rcll
jmp
xchg
stc
cld
sub
int
fnstcw
jge
fldenv
cmp
inc
xorl
add
jge
mov
mov
mov
pusha
lahf
imul
dec
ljmp
xchg
sti
pop
insb
ja
push
cmpsb
jge
mulb
fbstp
xchg
dec
inc
cmp
xor
pop
iret
adc
iret
paddsb
lods
sbb
jne
push
mov
mov
sub
rolb
push
xchg
mov
dec
fcmovne
pop
jno
sub
mov
inc
and
rorl
aam
icebp
sub
pop
aam
adc
roll
mov
push
adc
xor
xchg
cli
dec
or
jnp
lods
add
pushf
cli
repz
ljmp
push
inc
push
scas
pop
test
lahf
movsl
arpl
jp
stc
in
popf
add
lea
jmp
push
loope
pop
cwtl
pop
dec
rol
adc
add
outsl
imul
int
imul
nop
mov
mov
shr
and
fsts
pop
ret
xor
adc
jmp
inc
lret
lret
pop
fcompl
movsb
pop
ret
inc
lahf
daa
sub
pop
test
jp
fsubrl
sbb
lahf
push
sub
add
jb
mov
sbb
outsb
sar
ja
pusha
lret
mov
and
jle
add
cld
jg
sub
fadds
iret
scas
popa
dec
fldenv
mov
add
stos
insl
pop
lahf
dec
push
sub
and
jle
push
gs
adc
movb
xchg
cmp
pop
aas
ror
ret
xor
pop
sbb
dec
lods
loopne
add
jne
fs
adc
jg
sbb
test
imul
jge
xchg
xlat
repnz
jle
in
outsb
jge
jbe
mov
hlt
inc
hlt
xchg
mov
lock
sub
lret
jne
js
inc
vandpd
lods
push
mov
sbb
cmp
jg
loope
or
mov
sub
ret
add
dec
or
mov
cmpsl
and
or
call
inc
inc
push
sar
roll
push
ret
adc
mov
xchg
aaa
lret
pop
arpl
ss
or
shrl
idivb
js
loop
xor
jl
sub
dec
sbb
push
ja
sti
sub
repnz
jae
jp
jo
fwait
scas
xor
push
aaa
pop
add
jg
or
sub
fidivrl
scas
jl
frstor
hlt
enter
or
gs
cwtl
stos
or
pusha
and
push
sbb
add
cmc
out
call
aaa
ljmp
lods
jle
mov
mov
dec
push
inc
mov
push
inc
cltd
shlb
push
add
loope
adc
notb
pop
mov
mov
xchg
aaa
shlb
or
push
cmc
shr
inc
jmp
cmp
rep
fabs
xor
pop
test
paddsb
add
and
cmp
push
test
mov
les
int
stc
adc
cmp
push
cmp
jb
push
scas
mov
pop
imul
adc
leave
lds
push
pop
in
out
jne
cmp
fldenv
andl
movsl
and
sbb
shlb
mov
movsb
sub
push
out
dec
lock
ret
adc
adc
in
mov
jmp
inc
cmc
nop
and
or
push
shlb
mov
or
push
mov
mov
cmpb
jecxz
into
sub
or
or
mov
pop
popf
fdivrp
lods
cmp
test
movsl
and
sub
jne
std
mov
icebp
test
cwtl
add
std
mov
shlb
mov
inc
jle
enter
add
cmp
or
test
outsb
xchg
jge
mov
mov
pop
imul
test
mov
test
sar
mov
icebp
ret
dec
in
fs
mov
cli
and
mov
lods
jb
adc
cli
cmc
loope
in
inc
or
lahf
imul
insb
mov
outsl
lcall
insl
sti
out
scas
nop
sbb
dec
fidivs
xchg
stc
sti
cli
aaa
ret
push
ficoms
xor
cmc
jbe
cmpsl
cmp
repz
pop
jge
mov
adc
or
ret
cmp
cs
mov
pop
out
push
cmp
pop
cmp
push
in
adc
mov
xor
push
sub
mov
pop
cmp
imul
adc
inc
pushl
pop
das
sbb
cmpl
iret
dec
mov
insb
pop
sub
push
xor
or
stc
hlt
rcrb
xor
aam
ret
stos
mov
dec
mov
mov
adc
dec
not
leave
mov
pusha
mul
mov
lds
xor
stc
andl
xchg
adc
mov
adc
idivb
push
out
sahf
adc
cld
test
test
daa
push
pushf
sbb
arpl
adc
int3
fldl
loope
jno
mov
push
roll
sahf
scas
mov
cmpsb
xchg
jbe
cmpsl
cmc
lods
mov
mov
xchg
lock
mov
mov
lret
data16
pusha
jecxz
movsl
sub
jo
mov
cmp
jne
sbb
jle
or
mov
add
push
int
enter
push
jne
jnp
cmpb
jno
loopne
push
or
cmp
out
push
push
mov
jg
xchg
mov
cltd
daa
push
aad
jmp
flds
mov
loope
lea
cltd
scas
rcll
sahf
rclb
jbe
popa
cmp
xchg
out
xchg
dec
cli
inc
int3
xchg
mov
pusha
cmp
insb
inc
in
xor
stc
bound
js
mov
cli
outsl
imul
push
movsl
hlt
incl
orb
repz
cmp
inc
jbe
jge
sbb
in
mov
inc
push
mov
test
or
jmp
add
ret
das
ljmp
ret
fstp
in
push
jg
jle
test
lods
xchg
push
jb
pop
cli
mov
mov
movsl
cmp
addr16
in
mov
adcl
arpl
and
inc
movsl
mov
cmp
jg
scas
repz
flds
out
fldcw
dec
iret
fnstcw
pop
mov
stos
lret
xchg
inc
loope
fimuls
jo
mov
sbb
inc
jo
fadds
leave
inc
cmp
je
sahf
xchg
rcr
mov
jo
fstpl
push
jg
dec
mov
cmp
add
inc
lock
dec
aad
lods
testb
mov
inc
xchg
loop
dec
xchg
add
inc
jge
mov
in
repnz
out
or
mov
xor
push
fwait
jmp
xchg
out
out
lea
movsb
sub
lea
fwait
stos
push
lods
mov
insb
mov
mov
int
movsb
cld
xchg
stos
xor
nop
push
or
and
adc
inc
mov
xor
dec
mov
dec
insl
xor
cmp
les
add
add
shlb
xchg
and
dec
push
sub
xor
jbe
pop
inc
xchg
das
or
fdivrs
cs
sbb
and
das
xchg
movsl
ds
dec
cmpsl
pop
pop
stos
push
movsb
inc
mov
cmp
scas
add
jne
mov
leave
repnz
mov
or
std
pslld
cmc
out
je
dec
out
mov
sarl
dec
jbe
mov
push
sbb
xor
sar
cs
inc
xlat
jae
mov
cld
rorb
mov
lock
sbb
jb
mov
fldcw
inc
loope
gs
add
lods
and
and
int3
test
cmpsl
cmpsl
jbe
js
inc
outsb
jl
sbbl
aad
jbe
lret
mov
sbb
mov
push
inc
popf
mov
dec
in
popf
icebp
lods
scas
and
adcl
cltd
inc
gs
hlt
sbb
xchg
mov
cmp
out
mov
dec
aas
pop
jecxz
fsubrl
mov
call
imul
lahf
stc
push
into
std
inc
out
fwait
daa
loop
into
push
jecxz
jno
fwait
dec
cmpsl
xor
loope
test
popa
push
dec
jp
push
repz
nop
sbb
fstpl
out
sbb
push
adc
repz
fwait
cmp
and
xorl
lret
stc
ror
xor
or
pop
int
std
inc
jne
sub
data16
jne
call
call
or
aam
and
bound
in
mov
mov
inc
jbe
pop
pop
xor
mov
mov
sub
cltd
push
xor
or
stc
jo
cmpsl
cli
std
sbb
pusha
mov
xchg
mov
xor
or
jns
mov
jnp
mov
testb
out
jne
jecxz
leave
pop
jmp
dec
clc
jmp
sahf
or
cld
pop
int3
jns
and
xor
pop
test
mov
test
push
imul
pop
or
cmp
sbb
jmp
insl
ret
add
insl
jp
mov
xchg
mov
and
into
loope
stos
xchg
jae
dec
aas
mov
jecxz
jo
xchg
sbb
mov
lret
loopne
rcl
or
pop
or
mov
bnd
or
filds
jo
and
or
fnstsw
mov
aam
and
jecxz
and
scas
xchg
xorl
mov
jnp
jae
pop
sub
popa
jno
mov
lcall
fs
and
add
hlt
cmc
jle
aas
jne
ja
push
and
lret
sbb
jg
pop
aam
dec
or
stos
mov
mov
insl
and
sbb
mov
les
loop
pop
xchg
inc
mov
push
cmp
cmp
inc
xchg
sti
js
pop
je
xchg
ljmp
repnz
jg
nop
xor
mov
lock
jbe
arpl
ficoml
mov
and
mov
xchg
push
ljmp
sbb
xchg
cmc
cs
shl
gs
aaa
jne
in
mov
cmp
std
jb
or
xchg
lcall
cmp
sbb
daa
mov
lods
jle
and
push
xchg
enter
scas
xchg
outsb
loopne
ret
clc
addr16
mov
rorl
xchg
add
and
int3
xchg
das
jl
out
repnz
jns
xlat
adc
aas
jno
mov
cmp
pop
mov
cmc
xor
mov
mov
sahf
out
inc
int
iret
imul
subl
insl
pushl
popa
stos
add
add
cmp
push
push
pusha
lods
lret
les
repz
pop
scas
roll
push
bnd
movsl
cmp
cmp
cld
ret
mov
xor
repnz
xchg
fstpl
mov
xor
jmp
mov
mov
jle
add
push
dec
test
lret
sbb
sub
bound
imul
inc
loope
mov
out
insb
shlb
mov
inc
cwtl
lahf
mov
daa
cmc
sub
jecxz
xchg
out
lds
jns
int3
push
push
add
xor
sbb
data16
pop
std
mov
inc
mov
and
mov
add
rcl
mov
inc
hlt
xor
push
mov
jns
out
stc
shl
xor
pushf
mov
repz
xchg
scas
bound
cmp
leave
leave
outsl
std
hlt
inc
test
mov
pop
cmp
repz
test
and
or
adc
adc
scas
xchg
and
aam
add
cmp
jne
pop
dec
mov
add
jle
jae
shll
inc
xchg
push
mov
inc
jmp
mov
in
es
lahf
sahf
aaa
dec
sub
jno,pn
push
mov
add
mov
or
jmp
repnz
insb
cli
push
rolb
xlat
mulb
pop
mov
scas
xor
ficoml
fildll
xor
mov
cmpsb
xor
cltd
loope
sti
push
and
pop
and
int3
mov
push
sbb
cmp
inc
mov
mov
push
push
loop
gs
fstl
mov
cmp
mov
pop
out
jecxz
roll
push
mov
call
mov
in
in
pop
dec
jns
push
jae
mov
mov
cwtl
repz
mov
cmc
adc
repnz
add
adc
push
ss
mov
sbb
les
push
imul
fcompl
movsl
xchg
inc
xchg
mov
mov
arpl
ret
jbe
pop
sti
enter
xchg
clc
stos
push
mov
mov
test
adc
rcll
lret
push
pop
aad
daa
or
adc
xchg
daa
sub
test
arpl
fisubs
je,pn
icebp
sub
push
mov
inc
pop
dec
mov
dec
mov
mov
push
cmp
and
mov
cmpl
ret
sbb
fcom
flds
jns
testl
ja
pop
aam
xchg
add
hlt
xor
pop
lods
ljmp
hlt
icebp
ret
aam
or
aam
lods
loop
adc
jns
dec
insl
jnp
mov
pop
scas
jo,pt
inc
mov
inc
cmp
cmp
repnz
jp
incb
and
mov
sbb
xchg
outsl
shll
rclb
cmpsb
andb
push
loopne,pt
clc
fsubp
aaa
adc
lret
and
adc
testl
daa
iret
mov
adc
adcb
push
adc
mov
inc
mov
inc
jecxz
lock
bound
or
fs
into
sbb
push
xor
add
movsb
dec
pusha
clc
test
leave
mov
out
popa
pop
imul
inc
sti
pop
fisttpl
lahf
xchg
inc
mov
cmc
shrb
sahf
cmpsl
mov
inc
cmp
ljmp
xor
daa
dec
add
cmp
inc
jg
xlat
inc
jno
loopne
lods
mov
mov
lock
xor
ret
out
adc
mov
dec
push
int3
xor
mov
data16
and
fstl
xor
out
xchg
cmc
adc
fcompl
and
ds
cmp
iret
test
add
arpl
add
cmp
test
dec
fwait
aaa
adc
std
xchg
mov
leave
pop
les
rcrb
mov
call
inc
repz
in
xlat
cli
inc
mov
and
sub
aaa
mov
lds
lcall
rclb
out
jns
push
sldt
cmp
pushf
jmp
pop
xchg
add
jns
lret
push
mov
sbb
mov
pop
or
aad
loopne
ret
push
test
jb
xchg
lret
pop
xchg
cmpsb
cmc
pop
jns
lds
dec
fcoms
dec
imul
loopne
les
xor
inc
xchg
mov
int
shr
div
sbb
popf
push
jnp
out
fstpl
mov
cmpsl
cmp
out
lock
jo
loope
stos
jne
xchg
jg
lock
pop
sbb
nop
fnstcw
cmp
sbb
jno
inc
loopne
pop
dec
jns
aas
jae
fnstenvs
lea
psllq
into
jbe
inc
out
inc
loop
xchg
lea
mov
or
cmp
popa
sbb
and
sub
inc
push
xor
dec
inc
jg
or
jmp
cmpsl
test
mov
cs
cmc
mov
mov
adc
xor
pop
sahf
out
dec
mov
rcr
nop
push
xor
cmpsb
ljmp
out
int3
mov
sti
pop
pop
lret
sti
pop
pop
pop
lret
sub
je
lods
cmp
leave
shll
pusha
and
pop
ja
sbb
jo
push
push
loop
stos
push
outsw
cmp
pushf
mov
out
cwtl
jle
data16
idiv
sbb
or
xchg
test
xchg
adc
add
and
stos
jo
pop
inc
dec
adc
fldcw
aas
mov
sahf
sbb
insb
popa
addr16
addb
and
ret
cmpsb
lods
mov
dec
xchg
pop
adc
sbb
inc
into
adc
and
xchg
subb
push
loopne
clc
rorl
imulb
mov
loope
pop
cmp
lcall
jnp
sub
dec
pop
loope
bound
adc
pusha
fidivl
xchg
stos
hlt
push
xor
mov
in
cwtl
adc
ret
fisubrl
out
jmp
in
es
adc
mov
and
mov
cmpl
rcll
imul
loop
in
mov
mov
mov
dec
lret
dec
lcall
pop
sub
lret
push
mov
xchg
xor
rcrb
lret
pop
je
stc
lock
das
dec
cmc
sbb
repnz
add
enter
sub
dec
and
and
sub
pushl
and
mov
ret
ljmp
hlt
loopne
jbe
jo
jne
mov
xchg
lods
dec
and
mov
inc
sbb
in
jb
xchg
jle
insl
xchg
jge
mov
js
sub
mov
stos
add
xchg
and
inc
cmp
dec
fistps
and
inc
push
les
daa
and
xor
mull
sub
test
int3
sub
in
or
shll
or
in
mov
shlb
pop
imul
fmuls
jge
ficomps
test
das
xchg
and
fwait
ret
aam
je
mov
jo
cld
cmp
int3
mov
and
mov
ret
add
and
mov
mov
push
add
mov
cmp
jle
aad
sub
cld
enter
loopne
in
dec
xchg
pop
scas
xor
cli
cli
fadds
aas
les
inc
inc
nop
mov
or
add
dec
out
add
xchg
faddp
xchg
jns
dec
add
sub
sbb
loop
sbbb
push
pop
popa
or
lds
adc
add
push
push
fs
jecxz
mov
shl
mov
ret
pushf
mov
aas
dec
insb
pop
sahf
add
mov
mov
outsb
stos
nop
sarl
cs
sbb
in
test
add
mov
cwtl
jle
repz
andb
push
stos
dec
jb
xorb
stc
xlat
int3
ss
arpl
mov
add
popa
sahf
pop
fstpl
add
fs
pop
pop
into
pop
add
mov
iret
cmp
or
xchg
leave
mov
insl
sbb
bswap
xor
push
div
xor
cmpb
das
push
je
add
mull
xchg
mull
aam
mov
add
mov
mov
les
xchg
pop
or
adc
bnd
or
xrelease
arpl
mov
mov
test
pusha
dec
lcall
and
sub
sbb
loop
mov
int3
push
xor
jo
mov
ljmp
dec
insl
cmp
fdivl
hlt
lods
out
inc
in
popf
leave
enter
or
ljmp
mov
stc
lods
push
int
ds
test
cmp
push
mov
xchg
jecxz
jb
jns
lcall
jecxz
push
xchg
xchg
jge
lret
loope
or
sub
test
xor
std
xlat
js
fdivs
or
add
ja
mov
xlat
inc
mov
cmp
or
fisttpl
mov
jb
lahf
sbb
xchg
nop
pusha
sub
jbe
push
leave
loop
int
mov
cmp
cltd
mov
mov
or
sahf
aas
ja
pop
mov
sub
adc
pop
stc
adc
stos
mov
or
in
lods
dec
in
and
jmp
int
mov
sbb
sbb
out
add
mov
and
insb
pop
and
mov
push
es
mov
mov
cltd
incb
daa
in
adcb
add
in
push
cmp
cld
jo
sub
lea
xor
fidivrs
lea
and
mov
mov
dec
pushf
mov
mov
gs
xorb
gs
shrb
pop
insb
xlat
js
and
sub
xor
clc
xlat
mov
ret
add
xor
xchg
insl
rcrl
sub
cmpsl
jo
mov
jns
fidivl
out
jg
repz
int3
mov
test
in
in
cmp
int3
xor
mov
es
les
add
cld
adc
ds
imul
push
sbb
shl
roll
cmp
icebp
das
ret
movsb
outsl
sbb
js
xor
imul
adc
rcrl
int3
mov
and
gs
div
adc
lret
mov
jne
inc
xor
mov
jp
push
mov
in
sbb
loopne
outsb
cli
push
cmp
sbb
insb
push
imul
ds
outsb
cli
pop
or
out
add
mov
pop
adc
outsl
decl
pusha
jmp
test
pop
cmpsl
dec
jecxz
pusha
ss
sub
ja
jno
push
and
lret
loope
in
dec
adc
cli
jg
push
movsl
bound
sbb
mov
loopne
daa
test
jecxz
jbe
enter
dec
push
xchg
add
int
jmp
je
cmpsb
lea
notl
jmp
repz
cli
pop
mov
mov
push
cmc
mov
jecxz
pop
arpl
dec
cld
inc
pop
stc
xchg
xlat
jae
ds
adc
cmp
cltd
fsubrs
sbb
add
loope
push
cld
outsb
imull
js
fsubr
ret
std
stc
ds
xchg
or
repz
lcall
add
inc
fbld
and
movsl
bound
out
sub
inc
cmp
aaa
add
shlb
mov
ret
jle
cwtl
push
lock
dec
std
subl
jns
lea
out
mov
pop
loop
xor
jnp
jmp
mov
int
daa
out
push
mov
repz
lods
add
pop
lods
and
movsb
outsl
pop
xor
mov
adc
pop
inc
push
dec
sub
mov
adc
cmp
popf
push
insl
add
jg
and
inc
repz
aas
popf
into
push
ret
lea
inc
lds
js
add
mov
xor
dec
add
test
cmp
ret
mull
sbb
push
fistl
outsb
pop
pop
int
sbb
pop
pop
std
pusha
ret
push
pop
adc
cmp
or
or
cmp
stos
mov
call
sub
imul
pop
pop
pop
fistl
jne
inc
pop
cld
incl
mov
leave
std
loope
lea
mov
and
outsb
or
mov
enter
cmp
lret
mov
test
loop
xlat
mov
jge
popf
lret
cmpsb
movsl
scas
jp
mov
and
sub
mov
dec
push
outsb
inc
cmp
pop
sbb
push
enter
or
pop
aad
cwtl
and
sub
sbb
inc
insl
cmpsl
jo
jle
out
add
in
loopne
in
cmc
sbb
push
add
and
in
mov
push
aas
lcall
das
movsb
in
stos
loop
je
insl
sbb
mov
pop
cli
jge
fbld
xchg
inc
and
sbb
sub
out
mov
cli
lds
call
pop
jns
jae
test
sbb
jbe
rcrb
lret
and
int3
ficoms
jb
rcl
js
dec
enter
movsl
or
xchg
sub
mov
pop
jp
sbb
pop
sahf
mov
jo
lcall
jle
addl
or
pop
repnz
movsl
je
lahf
movsl
hlt
dec
add
xchg
mov
sbb
stos
push
sub
jmp
push
add
sub
test
mov
orl
imul
dec
jmp
pop
das
sbb
lods
nop
adc
dec
es
mulb
lahf
scas
imul
mov
mov
in
sub
or
mov
imul
cmp
rorb
aam
test
shl
inc
into
out
dec
inc
push
and
mov
leave
mov
movsb
mov
dec
dec
push
dec
test
outsl
jl
js
and
pop
mov
movsl
pop
loope
insl
popf
sub
adc
dec
adc
mov
lock
int3
call
mov
jns
dec
lcall
sti
mov
lret
xlat
sbb
mov
sbb
cs
xor
inc
inc
push
jmp
cmp
ficoml
stos
mov
sbbl
mov
xchg
addl
xchg
fs
aas
outsb
sbb
xor
or
dec
mov
call
sti
push
out
mov
or
cwtl
test
iret
mov
orb
nop
nop
sbb
sub
jge
inc
sbb
lret
lods
push
sti
loope
outsb
aas
aas
sahf
es
inc
or
mov
pop
push
call
inc
push
pop
mov
cmc
lods
notb
into
bound
int3
pusha
pop
in
cs
enter
aad
lret
daa
inc
mov
out
mov
add
out
pop
push
push
dec
movsb
sti
pop
nop
repnz
mov
mov
sbb
inc
mov
test
pusha
outsb
and
sahf
movsl
push
pop
cmp
sti
cld
xchg
adc
adc
xor
sar
sub
mov
push
aad
and
cmpsl
pop
and
dec
inc
cmp
loop
jecxz
in
push
push
stos
add
dec
roll
repnz
jbe
pop
lea
xor
cmp
fsubs
ds
je
adcl
dec
cltd
test
shl
popa
enter
sarl
adc
ljmp
stc
in
movl
lcall
fidivs
jns
icebp
or
or
xorb
mov
and
jl
push
or
and
jb
idivb
divb
jmp
sbb
pop
aam
push
sbb
jmp
bound
push
sub
repnz
jnp
cmp
inc
jmp
rcrl
rcll
stos
adc
jno
sub
fdivs
cltd
orb
jl
jnp
daa
scas
roll
jae
adc
stc
sub
popf
aad
stc
movsl
movsl
popa
aam
clc
dec
jmp
mov
mov
mov
push
test
cwtl
mov
mov
hlt
jae
subl
ds
enter
mov
mov
dec
cld
add
push
add
daa
outsl
icebp
fsubr
scas
fiadds
sbb
push
xchg
imul
pop
and
jbe
or
lds
xlat
mov
or
push
add
lahf
bound
int3
push
pop
inc
inc
ja
add
stos
or
repz
dec
push
or
mov
loopne
adc
fs
enter
iret
pop
cmpsl
cmp
sbb
notb
pop
fcmovnbe
cmp
sbb
adc
cmp
jae
or
and
repz
dec
pop
inc
cs
pop
bound
inc
jecxz
in
insb
sbb
in
aam
xchg
push
mov
or
jmp
jo
push
hlt
jg
push
daa
mov
aaa
jle
sti
or
ficoml
push
sub
mov
jbe
xor
or
lods
imul
int3
test
leave
mov
imul
lcall
xor
sub
insb
test
ds
mov
movb
sub
daa
xchg
mov
and
pop
test
or
mov
movl
mov
cmp
call
and
pop
cmp
xchg
xchg
rorb
or
mov
jge
xchg
add
addr16
add
out
xchg
fisttpll
xor
sub
inc
addr16
jg
and
push
adc
and
addr16
cmp
fbld
sbb
mov
lock
xchg
loopne
lea
add
aad
pop
pop
lret
xor
jnp
mov
jle
call
cltd
clc
or
fcomps
jge
jo
call
push
adc
push
cmp
xor
xor
out
cmpsl
sub
xor
cmp
test
je
and
xchg
fcomps
les
adc
mov
xchg
js
dec
push
insl
hlt
dec
out
movsl
mov
mov
scas
mov
sub
and
fs
cmc
imul
push
in
jbe
jg
sbb
dec
adc
sbb
cltd
mov
adc
lcall
leave
sbb
lods
push
subb
mov
ja
mov
mov
imul
push
and
dec
shlb
mov
or
js
jge
mov
ds
lock
cmp
sub
mov
loop
dec
xchg
xlat
lret
cs
xor
pop
mov
sbb
mov
fwait
push
dec
jp
jmp
stos
stos
xlat
fs
cmp
push
out
out
out
inc
lea
and
inc
fmull
in
cmp
pop
xor
sahf
sub
push
adc
repz
test
js
mov
mov
xchg
or
xchg
dec
divl
mov
test
xor
push
and
sahf
imul
or
loop
xchg
ljmp
jp
ror
push
loope
or
xchg
bound
pop
sahf
das
and
xor
or
pop
adc
popa
sbb
mov
push
out
stos
pop
ds
push
mov
push
js
dec
int3
mov
mov
outsb
clc
dec
rcrb
imul
call
push
cmc
pop
setl
push
jmp
sub
scas
inc
sbbb
or
imul
sub
les
sbb
jmp
iret
ss
movsl
outsl
or
push
cltd
xlat
jge
cmpsb
icebp
cmp
push
dec
stc
repz
rep
fsubs
xchg
fs
sbb
outsb
jecxz
inc
push
mov
out
fildl
loope
jae
lcall
mov
roll
fwait
inc
or
mov
jns
jne
push
inc
mov
add
in
sbb
out
mov
mov
jo
dec
pop
leave
mov
add
popa
fs
jecxz
pop
xor
jecxz
pop
cmc
xchg
xchg
shrb
jp
mov
sbb
mov
das
adc
clc
mov
pushf
and
ret
repnz
jns
sbb
lcall
in
and
push
int3
mov
sbb
fldt
xor
inc
push
clc
inc
jle
pop
pop
cld
add
rcrb
xchg
push
iret
mov
sub
out
pop
mov
xchg
repnz
jbe
jbe
and
loope
adc
sub
push
inc
mov
or
add
inc
fistl
cmpl
pushl
jle
mov
jb
icebp
add
dec
pop
loopne
ja
cmpsl
or
inc
arpl
lds
add
and
adc
inc
mov
mov
dec
xchg
or
scas
xlat
inc
xchg
mov
or
lret
jle
sub
mov
and
or
cmp
add
xor
inc
hlt
test
popf
mov
mov
add
aad
int
mov
clc
loop
jmp
mov
mov
lret
jno
data16
adc
subb
js
cmc
sbb
mov
popf
sarb
je
rorl
push
and
pop
jo
mov
mov
jb
lea
mov
cwtl
and
pop
test
scas
sbb
and
lods
in
or
dec
xor
dec
push
js
and
mov
cmp
cmpsb
mov
ror
cmp
jae
lods
pushf
lret
xlat
fs
inc
into
mov
and
mov
jns
cwtl
dec
dec
sub
mov
fsubrs
movb
adc
mov
into
stc
adc
out
add
cld
dec
pop
ss
push
aad
lock
in
adc
cmpsb
imul
imul
cmp
and
fidivs
push
gs
repnz
shll
and
bound
leave
dec
xchg
imul
jae
adc
or
out
cmp
stos
adc
neg
inc
int
dec
adc
push
push
stos
bound
shrl
push
pop
ret
jecxz
sub
int
arpl
cmp
or
lret
lock
mov
sahf
aam
xchg
mov
out
or
xchg
add
sbb
jl
pop
stc
sub
cmc
arpl
bound
into
lret
ret
sub
add
movsb
or
jmp
cmp
xor
mov
cmc
repnz
pop
cmp
fistpll
jae
fs
add
je
mov
pop
cmp
xchg
push
aad
pop
test
xor
add
outsl
dec
and
mov
mov
fdiv
fisttpll
leave
xor
sbb
inc
clc
icebp
adc
dec
pop
push
mov
and
scas
pop
sbb
pop
pusha
sbb
dec
popf
subl
pop
ret
cltd
bound
or
sbb
push
data16
jae
mov
movsl
popf
lcall
mov
insb
and
adc
and
outsl
popa
adc
jge
out
mov
pop
jae
and
mov
jg
mov
mov
and
pop
ret
sahf
and
jb
add
push
cmc
iret
mov
pusha
adc
fcoms
mov
cltd
xor
add
dec
cmp
dec
jbe
xchg
sbb
and
ss
test
mov
inc
mov
in
or
mov
cmp
sbb
sbb
cmpsl
in
rcr
jae
push
lret
inc
lret
sub
jne
inc
stos
jne
xchg
out
inc
push
sbb
sub
xchg
cmp
pop
arpl
mul
dec
rcl
and
in
test
roll
leave
mov
cmp
jecxz
adc
out
cmpsb
add
std
xor
lret
mov
or
inc
pop
aam
iret
repz
ficoml
inc
add
jle
mov
cwtl
das
jns
xchg
ffree
inc
lret
pop
add
inc
shl
in
inc
sbb
out
stc
scas
jb
scas
adc
dec
push
dec
cltd
iret
sub
cmp
xor
fists
sbb
std
cmp
lods
mov
add
cmp
fnstenv
xlat
sub
mov
push
int3
mov
rol
stos
mov
ja
ret
push
inc
or
subl
add
xchg
nop
dec
jge
xchg
in
xor
stos
pop
jmp
mov
adc
lea
mov
jno
aad
cmp
loopne
faddl
dec
pop
mov
inc
aaa
ljmp
and
rcll
adc
push
push
fwait
xchg
mov
jno
movsl
sub
xchg
pusha
add
sub
mov
dec
lahf
dec
xor
inc
out
inc
mov
mov
scas
or
jne
lds
insl
sarl
aas
mov
push
test
data16
test
cmp
or
aaa
xchg
pusha
in
pop
and
mov
test
xor
rcll
outsl
addr16
adc
stos
mov
sbb
ret
imul
pop
pop
mov
and
dec
cmp
xlat
or
fwait
pop
lcall
or
jnp
xchg
out
imul
sub
loop
ljmp
lods
mov
inc
out
sahf
lcall
cmp
pusha
arpl
xor
add
pop
sub
mov
arpl
lock
pusha
adc
mov
imul
and
push
pop
ds
std
jecxz
scas
and
jecxz
dec
bound
mov
jmp
jno
sub
or
fucomip
or
faddp
shrl
mov
mov
cli
lcall
cmp
push
movsl
xchg
sbb
leave
cvtps2pd
into
xchg
jg
pop
cwtl
aad
notb
cmpsb
ljmp
adc
cld
je
xor
inc
or
cmp
jbe
push
clc
ret
sar
jne
icebp
jae
jg,pn
aad
xor
lods
cmp
icebp
pop
dec
test
pop
jecxz
orl
pusha
mov
add
ljmp
test
inc
lret
shll
mov
cmp
xor
mov
adc
and
pop
adc
push
sub
adc
notl
inc
inc
xor
ds
add
push
std
jbe
movsl
les
pop
push
loop
mov
mov
mov
daa
dec
fdivp
jge
mov
nop
ss
scas
pusha
fcmove
sub
out
xchg
test
cmpsl
stos
or
sub
or
imul
and
jl
push
mov
bound
js
jle
jnp
test
xor
dec
xchg
leave
testb
pop
ret
mov
add
sti
or
fidivrs
loope
adcl
dec
inc
in
cmc
lods
add
sarb
xor
xchg
adc
jb
jnp
loope
mov
sub
cld
cmp
mov
cmp
jecxz
icebp
pop
mov
in
push
lret
push
pop
iret
adc
not
xchg
jae
dec
add
stos
repnz
jo
push
or
sbb
sarl
ljmp
sub
in
pop
cwtl
insl
push
lcall
sub
xor
pop
cwtl
xor
dec
inc
xchg
sbb
negb
or
cld
icebp
inc
bound
shrl
add
test
loopne
push
cltd
enter
mov
xchg
xchg
push
pop
adc
lods
sbb
ret
mov
and
not
cli
aad
test
push
push
daa
cmp
fldenv
jnp
push
xor
add
xor
xor
cmpsb
mov
and
lock
sub
inc
imul
xor
and
sub
adc
jp
ja,pt
ss
jg
pop
imul
lahf
ss
dec
pop
dec
mov
repnz
jp
adc
jb
jl
outsl
fstpl
leave
or
lahf
push
out
into
adc
cmpsb
add
push
sub
and
lock
fildl
dec
popa
mov
mov
mov
or
testb
jmp
out
or
movsb
cmp
daa
imul
sub
repz
pop
mov
or
aam
jne
sbb
jge
stc
push
dec
mov
or
pop
pop
cmp
jb
test
push
or
cwtl
inc
pop
jle
mov
mov
test
add
daa
pusha
xchg
inc
jmp
outsl
lahf
jecxz
ret
out
aaa
and
jnp
imul
out
popa
outsb
and
in
mov
xor
sbb
push
call
ds
cmp
sub
inc
add
mov
push
jl
inc
sub
and
push
aas
movsl
ja
shll
push
and
xchg
inc
and
add
xor
int3
mov
push
fsubl
sub
and
push
cli
out
add
cmp
push
fsubrs
cmp
adc
lods
data16
neg
stos
mov
push
jecxz
mov
into
sub
movsl
mov
mull
sub
movsl
mov
ds
pushf
and
pop
pop
mov
sub
push
mov
cmp
dec
or
imull
add
sub
mov
fidivrl
subb
mov
cltd
dec
sbb
inc
mov
aaa
push
sub
insl
or
jmp
call
int
xchg
and
pop
aad
pop
shlb
push
repnz
jmp
lods
lock
pusha
repnz
xchg
add
sub
add
or
dec
test
imul
popf
into
sbbb
push
rclb
outsb
mov
sbb
push
adc
push
and
or
sbb
xchg
sbbl
push
rcrb
les
dec
mov
lea
cld
nop
ficoms
lods
clc
jns
icebp
inc
mov
cmp
outsl
fwait
in
ja
addr16
push
out
push
addl
pop
jg
sbb
sbb
dec
imul
mov
loopne
inc
push
lds
lret
cld
lret
faddl
jae
fsubs
mov
sahf
enter
push
or
mov
in
jb
fcmovbe
push
dec
call
mov
push
sarl
cmpsl
xor
icebp
jne
push
inc
cs
mov
lods
bound
or
ljmp
push
sbb
push
cltd
addb
in
dec
outsl
inc
lret
inc
movsb
lret
or
push
cld
mov
lea
inc
enter
shl
loope
inc
adc
daa
idivb
out
sub
arpl
idivl
rorl
mov
xchg
mov
fs
cmp
es
pop
mov
dec
dec
or
shrb
aas
shlb
push
cmpsb
test
cvttps2pi
and
adc
sub
or
or
add
cltd
fs
jg
lahf
jns
jae
mov
sub
bnd
cli
and
dec
mov
es
stc
fnstcw
fdivl
inc
jmp
sub
dec
scas
bound
outsb
pushl
mov
shll
pop
jmp
cmpsl
inc
push
cmpsb
inc
ljmp
out
loop
mov
cwtl
test
and
cld
insb
fs
xchg
sub
scas
ds
mov
cmp
adc
mov
xchg
push
add
nop
leave
clc
shr
movsb
xlat
push
pop
arpl
mov
outsb
inc
rcr
clc
adc
lea
in
psrld
das
clc
cmp
test
shrl
jecxz
out
xor
icebp
xchg
ljmp
jg
loope
imul
dec
xor
lock
dec
aam
rcrb
fstp
sbb
imul
jb
inc
cmp
into
aam
subl
cli
mov
and
mov
ja
fwait
lahf
cmp
inc
addr16
lcall
xlat
xchg
jo
lahf
pop
andl
cmp
push
je
arpl
stos
or
pop
cmpsb
es
fcoms
jns
push
fdivp
int3
dec
cmp
jl
mov
out
pop
aad
xor
xor
adc
nop
adc
aaa
or
xchg
fidivs
insb
pop
pop
lea
dec
pushf
daa
fisubl
in
lods
xor
xor
sub
dec
lahf
inc
insl
pushf
lods
jns
xchg
add
pop
bound
mov
jb
jmp
mov
bound
imul
in
sub
sub
mov
std
fmul
push
adc
push
out
mov
pop
aam
call
mov
pushf
ret
lods
jno
leave
inc
fidivl
cmp
mov
sub
fstps
arpl
mov
push
sbb
cmc
sti
jbe
mov
ds
fstpt
mov
imul
jno
test
jno
fstpt
mov
outsl
xor
pop
lea
into
stos
scas
and
xchg
das
or
add
test
pop
mov
push
test
sbb
daa
push
pop
add
jns
arpl
insb
lret
inc
xor
sbb
mov
xlat
imul
mov
push
mov
push
sub
and
in
ds
dec
stos
or
pop
divl
inc
mov
shrl
lock
shll
sub
divl
into
lret
pusha
inc
pop
dec
int
fisubrl
cltd
jl
cmp
jmp
pushfw
mov
js
inc
xchg
lock
pop
mov
inc
mov
lea
inc
popa
cmpsb
decl
and
inc
add
ds
inc
rep
inc
stos
fucomp
and
imul
sbb
inc
ret
jno
out
pusha
jp
mov
je
inc
inc
mov
rclb
faddl
sub
sahf
xor
jns
pop
cmp
movsb
mov
pop
ss
movsb
aaa
xchg
xor
lcall
pop
and
dec
sbb
stc
sbb
clc
sbb
push
stos
cmp
jnp
dec
repnz
js
or
into
repz
scas
leave
and
cmp
sbb
xchg
es
inc
adc
cli
in
xchg
cmp
int
lret
iret
cld
test
sub
or
mov
and
movsl
add
pop
sti
shll
sbb
out
lods
popl
pushf
mov
call
mov
mov
ficompl
jp
cmp
lcall
pop
outsb
xchg
mov
mov
xchg
mov
hlt
mov
cli
lock
adcb
pop
xchg
sbb
sbb
xchg
mov
mov
xor
popf
clc
pop
outsl
inc
mov
mov
xor
les
cmp
inc
icebp
out
dec
dec
stc
pushf
or
ret
xchg
lds
adc
std
push
negb
clc
lret
jns
mov
mov
add
push
loop
sub
mov
fidivrs
or
add
repz
and
sbb
call
test
jl
int
shl
lds
pop
jle
insb
cltd
mov
xchg
xchg
pushf
dec
and
jae
xchg
and
nop
arpl
mov
fldt
cmp
and
add
mov
dec
icebp
imul
test
imul
rcl
and
mov
cli
push
mov
sub
mov
sbb
mov
ds
ss
in
mov
loope
inc
push
pop
lock
push
lret
push
out
jge
xchg
mov
jne
cmp
les
mov
dec
cwtl
xchg
out
xor
adc
or
xor
test
sub
and
jno
testb
pusha
loop
cwtl
pusha
inc
pop
ja
cltd
rclb
mov
std
mov
popa
pop
cmp
push
pop
aam
mov
test
inc
inc
inc
fisubl
adc
jne
in
push
jg
daa
addb
std
in
lea
stos
cltd
subb
mov
push
jge
and
fcoms
jecxz
rol
in
xor
and
daa
jo
mov
fdivl
pop
jmp
add
sbb
xchg
loop
push
pop
adc
pop
cmp
push
pop
inc
lcall
sub
cld
inc
test
rolb
push
mov
pop
push
pop
adc
addr16
dec
es
add
ret
fistpl
cld
insl
jge
xchg
lret
in
int
mov
rcl
shl
lods
xchg
sbbb
jo
fidivrl
pop
lcall
add
mov
mov
pop
fstl
sub
fdivr
push
push
sub
add
in
or
adc
nop
cmpb
push
sbb
sbb
xchg
out
xor
dec
ds
js
in
push
es
mov
inc
sbb
dec
lret
lock
xorb
mov
or
or
in
push
mov
jle
in
sbb
call
lcall
lahf
inc
pusha
jmp
pop
js
mov
push
adc
lds
inc
sbb
fstpt
jecxz
push
test
arpl
cmp
repz
rcrb
pop
stos
loop
xor
ja
adc
cld
xor
out
mov
int
xor
icebp
dec
rcrb
lock
fwait
imul
cmpsl
inc
repz
pop
mov
sub
jecxz
in
and
js
mov
mov
cltd
pop
loopne
adc
nop
cli
push
in
and
shll
lods
rcrb
mov
fnstsw
fldt
ds
and
mov
cmp
in
xchg
lret
or
gs
pop
or
xchg
xor
pop
xchg
lea
inc
dec
pop
fcmovb
jge
xor
decl
out
inc
int3
and
and
lods
or
xchg
and
mov
fdivl
jmp
or
rorl
ret
mov
add
adc
test
jmp
scas
xor
inc
sub
iret
scas
cs
imul
mov
mov
cmpb
cltd
dec
clc
addr16
mov
inc
sub
ja
sub
sub
shrl
jp
mov
ss
dec
push
in
xchg
fwait
leave
cmp
ret
inc
lahf
repnz
fsubr
loop
push
imul
movsb
test
rolb
sub
mov
jno
fwait
popf
fisttpl
mov
insl
pop
mov
jbe
push
fisttpll
jns
lock
gs
in
jmp
push
cmp
mov
add
movsb
loope
mov
roll
out
shrl
cwtl
daa
in
and
xchg
pop
xor
nop
lcall
push
leave
inc
lock
jo
mov
xchg
jns
test
notl
into
cmp
xorb
data16
cmp
dec
mov
ds
cmpsb
cmp
jl
sub
icebp
popf
cmp
lods
loope
cmp
fdivrl
push
iret
cmpsl
shl
mov
in
or
in
pusha
sbb
sub
sbb
inc
inc
jl
xchg
cmp
sub
jnp
inc
imul
fs
sbb
fadds
sub
mov
xchg
adcb
adc
cltd
in
jmp
mov
imul
popf
sar
leave
xchg
xchg
mov
scas
sarl
dec
ds
xchg
jl
movb
sbb
loop
and
stos
mov
lods
xchg
jnp
repnz
scas
pop
inc
mov
data16
cmpsl
les
dec
push
push
in
insb
push
pop
ja
ret
ret
and
jno
loop
fcomps
movsl
push
lds
xchg
scas
scas
inc
inc
push
dec
or
andb
sub
mov
inc
adc
in
bound
fnstsw
pop
lret
loopne
push
test
cli
pop
inc
cmp
push
shrl
das
jno
xor
adcl
adc
cmpsb
inc
imul
add
ret
mov
sub
xor
mov
and
mov
jecxz
mov
dec
in
sub
dec
ljmp
mov
or
iret
lds
loopne
out
or
or
pop
adc
repz
mov
xchg
mov
mov
add
pop
xor
adc
adcb
mov
adc
out
testb
rorl
dec
xor
lahf
jp
add
cmp
into
jmp
ds
and
into
repnz
es
fistpl
adc
sbb
inc
cmpsl
das
add
sti
out
xchg
jg
xor
rorb
movsl
xchg
jge
sarb
cmpb
outsb
xor
adc
mov
in
xchg
or
outsb
test
ret
outsl
repz
aaa
test
push
call
daa
aam
mov
addb
addb
into
sub
push
outsl
daa
fdivs
sub
jno
mov
adc
lock
cmp
sbb
and
mov
lcall
lods
jb
leave
insl
add
xlat
sub
imul
iret
addr16
fidivl
and
cs
add
rcl
push
mov
push
scas
sbb
in
mov
repnz
add
into
xor
inc
stc
cmpsl
into
jb
cmp
pop
andl
mov
movsl
fstpl
cs
nop
das
pusha
in
mov
and
mov
adc
stos
sub
ret
out
js
orl
outsb
leave
and
xchg
xchg
aam
and
mov
mov
and
pop
cld
pop
in
lods
pop
addr16
test
sbb
cwtl
cltd
cmp
js
xor
mov
les
lret
inc
mov
stos
push
xchg
jns
sbbb
outsb
jne
adc
inc
scas
jnp
loope
cmp
xlat
xor
mov
pop
mov
jne
xchg
mov
subb
mov
cs
cmp
mov
fmulp
pusha
aam
add
loop
inc
xor
je
fimuls
mov
lods
loop
sbb
mov
arpl
orl
hlt
fstps
mov
movsl
andb
xchg
dec
mov
mov
fldenv
ret
int3
ss
xchg
pop
negb
cmpsb
or
nop
mov
cmpsl
jmp
into
dec
lret
repnz
push
stos
fistl
jmp
divl
jg
push
test
push
add
or
push
fucomip
insl
loop
mov
cmpsl
jle
adc
insb
shll
adc
lret
stos
mov
mov
xchg
loop,pn
in
jbe
sbb
xlat
repnz
adc
mov
push
leave
cmp
out
call
lea
adc
and
add
push
outsb
adc
mov
fidivrs
std
inc
aas
and
hlt
dec
sub
mov
mov
ret
aas
sub
aas
inc
pop
sti
daa
adc
dec
cld
xor
in
sbb
inc
pop
pop
xlat
les
jp
imul
adc
and
das
mov
lock
dec
jg
mov
popa
jg
add
das
fisubrl
inc
nop
adc
sahf
mov
fcmovbe
mov
loope
lret
push
jbe
xor
dec
and
add
and
inc
imul
push
popf
cli
mov
mov
cli
movsb
xorb
aaa
in
adc
repz
xchg
mov
fisubl
int3
ss
pop
lods
test
mov
idiv
fcoms
dec
test
adc
mov
testl
jle
ds
and
cmc
popf
push
insl
int
push
out
lret
repz
add
clc
mov
dec
push
sbb
scas
mov
int3
es
in
in
cs
mov
pop
cmp
and
and
movsl
repnz
jae
pop
in
lret
add
addr16
sub
rcr
mov
inc
pusha
push
movsb
jle
mov
jp
repz
iret
fiadds
cmp
cmc
in
mov
rolb
push
xorl
cmp
xchg
inc
pop
mov
pop
push
repnz
inc
fistps
xor
cltd
or
or
jge
dec
mov
jmp
inc
jmp
jb
out
mov
in
rorl
iret
mov
cltd
loopne
andb
add
divl
xor
int
clc
mov
push
xchg
and
subl
inc
in
lds
push
scas
jo
jae
push
pusha
dec
sbb
xor
or
adc
xorb
shll
in
sbb
sbbl
cld
aas
mov
enter
jmp
pop
and
push
repnz
shll
mov
xchg
dec
jbe
inc
stos
dec
aas
pop
xchg
icebp
div
and
sbb
pusha
and
mov
roll
aaa
sarb
loop
pop
dec
jnp
icebp
sbb
pushf
or
repnz
ret
or
add
fcomps
std
enter
xor
or
push
sub
ds
int
dec
dec
add
call
add
outsb
sbb
push
jl
leave
mov
add
int3
call
bound
loope
or
xchg
push
lret
mov
loopne,pt
mov
and
ljmp
aaa
shr
adc
jle
fsubs
push
dec
out
outsb
pop
fidivs
xchg
addr16
mov
push
lea
mov
mov
rcl
mov
push
cmp
mov
das
inc
adc
sbb
outsb
pop
mov
rorb
lods
sub
mov
and
mov
or
push
int
mov
jno
sbb
fwait
les
mov
xor
inc
pop
jae
push
xlat
pop
pop
push
jo
mov
inc
lock
add
cmp
sub
and
andb
outsb
push
inc
pop
imul
ljmp
jnp
cmpb
shrb
loope
imul
push
movb
lahf
sub
pop
subl
jns
jnp
mov
dec
cmp
popa
les
inc
ret
xchg
xorl
jb
push
and
push
ljmp
shlb
outsl
jle
xor
sub
pop
sahf
push
jg
and
mov
jg
cmp
jmp
pop
xchg
call
in
lcall
xchg
dec
pusha
lahf
xchg
test
pop
inc
out
negl
xorb
mov
jne
push
add
or
mov
cltd
push
movaps
in
or
movsb
sbbb
mov
lock
mov
call
subl
push
dec
into
push
pop
dec
jno
nop
xchg
mov
or
push
test
test
and
lahf
popa
mov
les
sbb
out
js
rorl
std
fwait
inc
pop
dec
dec
mov
add
out
inc
std
xchg
imul
add
movsl
mov
movsb
pop
mov
push
aad
test
fdivs
inc
aam
pop
inc
jns
movsl
inc
sub
scas
and
shlb
push
push
push
dec
clc
fwait
adc
sbb
scas
cmpsb
mov
jnp
inc
mov
mov
lods
pop
xchg
int3
cmpsb
outsb
ret
repnz
inc
pop
stos
pop
out
fwait
lods
cmp
jo
cwtl
addb
in
jle
xor
xor
lret
scas
mov
enter
push
movb
jno
pop
push
leave
jbe
mov
stos
mov
aam
jb
push
push
ss
xor
out
add
pushf
loopne
adcb
mov
mov
test
mov
loop
jo,pt
or
xor
ficompl
mov
loope
mov
ljmp
test
jnp
add
or
adc
jbe
sbb
inc
je
sub
mov
inc
js
iret
sbb
insb
sbb
sti
or
adc
sub
inc
and
ljmp
inc
mov
loop
adc
mov
fwait
adc
in
or
mov
je
dec
daa
fucomp
inc
and
xor
gs
fimuls
pop
fmull
imul
imul
dec
pop
and
lcall
mov
movsl
arpl
sub
repz
fiaddl
fcmove
arpl
dec
popl
or
mov
push
outsb
fsubs
sahf
inc
sub
adc
pop
hlt
and
or
xchg
xorb
js
or
cmpb
sub
pop
rorb
mov
pop
addl
scas
sub
cmpsb
jecxz
add
and
mov
jle
pop
mov
int3
daa
adc
fwait
and
lahf
xor
lcall
mov
loopne
pop
dec
xor
fistpll
ret
push
shlb
and
xchg
xlat
push
aaa
jecxz
jecxz
jle
ret
mov
jnp
out
mov
std
cmp
push
je
add
enter
mov
ret
adcb
into
jp
add
shl
cli
mov
lcall
inc
dec
test
mov
mov
add
jmp
mov
jg
daa
cmp
sub
lea
shr
xchg
mov
or
jb
jnp
clc
stos
iret
push
inc
dec
cmp
pusha
aad
popf
jbe
ret
xchg
and
inc
loop
sti
inc
ret
clc
sub
outsl
sti
ret
mov
repz
mov
pop
cwtl
gs
sbb
xchg
in
fidivrs
xchg
movsl
xor
gs
and
jb
push
aad
lods
ja
inc
and
movsl
je
sbb
pushf
jno
or
rcr
sbb
or
mov
aas
xor
jbe
pop
inc
mov
subb
mov
dec
jecxz
fstps
sahf
push
lds
lock
imul
adc
stc
stos
jecxz
mov
adc
pop
bound
add
pop
fisttpl
pop
insb
xchg
fstl
xchg
cmp
mov
movsl
jecxz
jo
test
hlt
mov
or
jge
xchg
pop
jp,pt
loopne
cs
fwait
int3
dec
aaa
adc
and
repnz
ret
pop
adcb
ds
jmp
jae
movsb
mov
mov
inc
xor
rcrb
out
push
mov
sbb
loopne
aas
and
fstpl
cwtl
insl
jb
push
mov
in
notb
cltd
sub
mov
add
jp
loop
dec
xchg
cltd
ds
or
call
scas
out
or
sbb
pop
mov
test
xor
cmp
aad
dec
outsb
mov
jae
xor
mov
push
cli
mov
add
sti
push
and
mov
pop
pop
fsubl
lods
adc
rcr
xorl
ss
sahf
sahf
jecxz
add
pop
push
mov
pop
push
fstps
lds
and
cmp
int
push
es
sbb
dec
mov
imul
adc
add
jns
repz
jmp
mov
pop
dec
or
or
movsl
incb
jae
lret
movsb
push
test
ja
xchg
mov
xchg
mov
pop
or
jnp
and
xor
cmpsl
mov
jle
je
jo
aad
dec
sbb
les
cmp
mov
and
out
cmc
push
jnp
lret
js
pusha
sbb
jb
loop
sahf
or
dec
lea
sbb
sbb
pop
push
lahf
inc
push
roll
imul
mov
dec
mov
lods
mov
cs
ret
jmp
gs
cwtl
mov
push
and
ljmp
sti
fldcw
xchg
pop
adcb
cmp
outsl
imul
add
cmp
dec
push
xchg
das
loopne
repnz
rorl
jne
cmp
pop
add
jnp
sub
xchg
jmp
sub
push
stos
popf
dec
lcall
out
inc
aam
dec
subl
xchg
call
cmpsl
mov
int
mov
mov
xchg
out
xlat
cs
ja
fnstsw
aam
adc
rorb
push
cmpsl
gs
adc
pop
push
mov
push
popa
mov
sahf
mov
mov
inc
in
pushf
inc
jns
fs
lahf
out
mov
dec
stos
jge
adc
addr16
in
aas
xchg
notb
cmpb
std
inc
outsl
movl
ljmp
js
gs
lret
cmpb
sbb
cld
or
loopne
sbb
pop
mov
mov
sbb
xchg
pop
or
mov
es
adcl
test
aad
mov
jl
lods
cmp
loop
push
mov
xchg
add
aad
or
push
aas
mov
adc
es
lret
ds
inc
xor
pop
mov
lea
js
sahf
dec
xchg
adc
adc
and
lods
push
or
or
ret
adcl
xlat
shll
ret
mov
inc
jo
cmp
or
ds
dec
jle
push
aas
jnp
add
mov
inc
in
sbb
ljmp
xor
jmp
mov
mov
test
mov
xchg
push
sbb
mov
mov
inc
int
mov
js
cmp
cmp
lea
push
xchg
repz
imul
jnp
std
scas
add
xchg
sub
aad
sub
xchg
lds
pop
jo
lret
movsl
fbstp
or
fwait
es
mov
test
ljmp
push
add
mov
jp
scas
and
outsl
aad
push
fwait
adc
outsb
dec
jno
sbb
loopne
lahf
out
enter
jne
sahf
sub
test
cmpsb
xlat
cmp
fcomp
cmp
lret
and
popf
jns
inc
xchg
jg
push
pop
lahf
xor
loope
dec
rol
and
test
xchg
pop
lds
cmp
js
cmpl
cs
ficomps
pop
mov
mov
aas
or
xor
dec
jge
scas
cmp
pop
ja
fxam
mov
loope
xchg
rcl
testb
lret
adc
sub
jp
fdivl
add
cmp
inc
ja
repz
add
add
mov
mov
pusha
and
dec
inc
ret
daa
push
add
inc
je,pt
clc
ds
arpl
icebp
push
xor
into
aam
dec
scas
fidivs
xor
adc
sbb
mov
lahf
es
insl
jp
mov
sub
out
mov
stos
adc
inc
out
mov
xor
xor
js
xchg
out
insb
pop
mov
inc
and
mov
and
mov
sbb
adc
mov
sbb
cmpsb
shlb
jbe
repz
jmp
lahf
pop
leave
dec
seto
xchg
push
push
lds
mov
inc
sahf
mov
iret
mov
loopne
movsb
aad
fidivl
inc
mov
mov
jbe
lret
xchg
jg
pop
out
stc
mov
shrb
mov
cld
scas
jl
jns
outsl
mov
cltd
jbe
push
out
in
jle
jl
movb
subl
inc
aam
test
inc
mov
out
sbb
loop
test
scas
dec
inc
gs
mov
cmp
rorb
push
pop
sbb
fdivrs
mov
mov
mov
pop
fs
add
stc
sub
mov
push
mov
loope
sbb
shrb
addl
imul
fidivrs
xchg
dec
pop
daa
std
jg
ljmp
je
imul
mov
shl
lock
pop
xchg
and
lea
dec
pop
lock
lea
sar
or
and
loope
in
sarl
imul
je
xchg
fwait
std
lcall
mov
dec
rolb
decb
ss
push
sub
call
loop,pn
nop
lahf
xchg
into
out
idivb
mov
inc
sbb
push
inc
fwait
ret
jb
dec
sbb
mov
in
js
iret
popf
or
dec
ret
lea
repz
loope
loop
mov
dec
mov
sub
ret
jne
iret
inc
sub
stc
imul
sub
rorb
xor
ds
or
pusha
insb
add
fdivrl
push
or
dec
inc
cmpb
add
push
fisubrl
lock
aam
lcall
jnp
sub
adc
insl
mov
ss
push
in
pop
rcll
nop
outsb
stos
rol
and
in
inc
nop
mov
inc
mov
pushf
outsl
add
xchg
mov
bound
lds
mov
ret
jno
addl
icebp
lock
cmpsb
stos
sbb
lea
xlat
add
cmpb
shrb
rorb
ss
dec
pop
ja
pusha
daa
push
out
cli
and
xchg
aad
nop
sahf
popf
vmwrite
and
xchg
ret
push
outsl
jmp
aaa
pop
and
sbb
push
mov
gs
and
xchg
mov
bound
adc
movsl
inc
lods
jmp
xor
lods
inc
xor
icebp
pop
les
ss
mov
into
ja
das
lahf
insb
xchg
push
sbb
cmp
add
pushf
sti
or
cmc
es
into
xchg
stos
or
test
pusha
sbb
xchg
scas
out
repnz
mov
cmp
ret
cmp
jg
push
dec
js
fisubrs
mov
add
in
in
sbb
sarl
cmp
add
mov
scas
pop
or
add
push
or
mov
cmp
mov
adc
dec
enter
cpuid
xorb
xchg
push
repnz
std
mov
adc
jbe
cmp
cwtl
ficoms
filds
sbb
hlt
adc
iret
mov
pop
push
ret
fdivl
and
pop
loop
pop
imul
movsl
pop
and
mov
out
movnti
cmp
ds
je
add
out
mov
and
or
lds
lock
mov
lock
jmp
stc
jmp
xor
in
sub
adc
sahf
test
push
outsb
enter
sub
shl
sahf
pop
inc
mov
ljmp
or
repnz
fcmovnb
jl
mov
mov
xchg
pop
das
nop
test
pop
pop
imul
rolb
sti
xchg
adc
jge
cwtl
loopne
daa
jmp
sub
repz
xchg
lods
movsl
inc
and
mov
pop
aad
mov
push
or
cmp
int3
sub
inc
lret
sub
imul
cvttps2pi
test
insl
repnz
jecxz
xlat
push
ljmp
stos
and
or
dec
in
sbb
mov
popa
test
pop
cmpsb
sbb
insb
hlt
outsb
inc
gs
cltd
or
inc
mov
cmpsl
popf
addb
push
ljmp
in
dec
pop
es
sbb
sbb
ds
pop
and
ret
xchg
lds
sti
pop
out
sbb
pop
adc
mov
test
adc
mov
icebp
lea
jl
mov
jle
mov
jno
imul
mov
movsb
lods
cmp
leave
stc
mov
lahf
push
add
inc
fmull
jno
add
lret
push
leave
push
jbe
mov
push
push
sub
movsl
push
clc
dec
cwtl
je
xchg
and
xlat
ljmp
adc
and
mov
cmp
pop
hlt
or
arpl
xchg
mov
jmp
mov
jb
and
mov
cmpsb
loop
loopne
loopne
jnp
cmp
loope
and
mov
test
imul
mov
lret
jne
imul
cmp
xchg
aad
movw
mov
movb
cmpsb
pop
testb
cmpsl
mov
add
mov
movsb
fists
fcomps
cs
xorl
mov
lret
push
fstpl
sub
add
stos
sbb
xor
inc
mov
and
mov
lock
jno
or
pop
sub
cmpsl
scas
mov
sub
dec
jne
or
outsb
cltd
es
jne
rorl
cmp
sub
scas
les
xor
adc
stos
add
cmp
jge
or
jle
popf
loop
test
in
loope
addr16
int
push
lret
xor
andb
test
add
ja
xchg
and
xchg
hlt
push
fiaddl
xchg
leave
sbb
inc
das
cmp
mov
mov
es
xchg
lods
cmp
test
je
jns
inc
inc
jg
xor
in
out
xchg
aad
cli
idivb
mov
jge
push
pop
ss
and
fs
out
out
mov
add
dec
lock
cmp
inc
add
push
enter
xchg
xchg
out
or
mov
and
xor
ret
add
cmc
das
jbe
shrl
ss
ljmp
pop
cld
sub
scas
and
xchg
clc
fistpll
cmp
inc
cmpsb
pop
dec
pop
add
movsb
ret
xchg
mov
les
inc
xchg
mov
fisttps
rclb
jmp
fstpl
loope
push
mov
addr16
mov
adc
add
ret
adc
stc
rcrl
inc
push
lods
xlat
inc
xchg
hlt
lds
sbb
aaa
loopne
push
mov
cmpsb
pop
imulb
cmp
fisttpll
cmp
pusha
inc
cld
orl
jae
jg
ljmp
int
inc
sbb
iret
cmp
daa
gs
leave
in
and
out
or
iret
fadds
or
out
adc
ljmp
fidivl
dec
xchg
sub
mov
or
repnz
sar
sbb
shr
pop
push
shll
sti
mov
mov
cmc
push
xchg
int
xchg
mov
ljmp
idiv
cs
in
mov
mov
add
sbb
test
das
push
cmp
cmpsl
cmp
rcrb
lea
insb
and
scas
and
dec
jmp
repz
jle
das
mov
xchg
xchg
add
pop
sbb
test
lcall
jbe
imul
xchg
jae
fsubrl
pop
push
and
sub
sahf
push
xor
and
add
push
pusha
insl
mov
dec
push
xchg
sub
out
adc
addr16
das
adc
movsl
fdivl
popa
jae
lcall
inc
xor
mov
stos
sub
fiaddl
push
iret
mov
mov
fs
xchg
inc
out
inc
push
mov
aam
xchg
pop
pop
aaa
push
pop
push
fsubrp
adcb
pop
mov
iret
xchg
shlb
test
cli
and
pop
add
test
popf
xchg
adc
das
cmc
xchg
cltd
sub
pop
inc
iret
pop
fnstcw
or
sub
jp
jno
or
rcrb
mov
mov
cmc
movsb
push
in
test
aas
mov
stos
push
adc
inc
cmp
test
rolb
dec
mov
fsubr
lods
mov
pop
pusha
inc
or
inc
ds
cmpsl
add
or
dec
push
leave
push
out
xor
and
into
test
scas
stos
loop
xchg
mov
jmp
test
popf
test
mov
es
iret
stos
xchg
test
push
dec
mov
clc
in
ljmp
push
xchg
pop
idiv
xchg
mov
jo
shrb
mov
icebp
jns
push
adc
movsl
cli
push
add
xor
add
dec
sahf
repnz
test
mov
jmp
adc
sub
mov
mov
addr16
sbb
enter
add
and
dec
xchg
xchg
mov
stos
mov
fwait
popf
je
lock
pop
cli
iret
out
scas
cmpsl
sub
flds
test
push
insl
adc
cmpsl
and
pop
jae
pusha
aad
cmc
leave
add
push
es
push
and
sub
testl
cld
jnp
enter
ficoml
lods
mov
clc
sbb
mov
mov
ljmp
leave
movsl
xchg
push
jmp
or
js
fpatan
scas
sub
clc
arpl
jmp
lret
rcrb
sahf
roll
sub
sub
mov
xchg
adc
push
sbb
lock
sub
mov
lahf
mov
test
mov
fbstp
cmp
cmp
pop
pop
int
xor
push
jno
bound
pusha
fnstcw
insl
dec
inc
xlat
out
std
fstpl
mov
add
rorl
aam
in
in
jo
mov
in
and
int3
cmp
repz
pop
jnp
call
push
and
out
cmp
xchg
pop
aas
lods
loop
mov
xchg
fimull
jno
sub
imul
lahf
and
mov
xor
mov
outsb
mov
pop
leave
mov
ds
mov
adc
pop
outsb
jl
adc
ds
test
and
cwtl
mov
xchg
mov
adc
leave
dec
or
mov
jg
and
pop
jmp
and
addl
jae
xchg
insl
push
es
mov
lcall
mov
mov
xchg
mov
idivb
xor
std
popf
rol
imul
popa
dec
mov
mov
test
mov
mov
mov
mov
lahf
adc
pop
lods
movsl
adc
ja
push
mov
icebp
inc
push
loope
cwtl
imul
or
pop
pop
or
cmc
mov
cwtl
shlb
scas
cmp
jmp
lcall
movsb
movsb
bound
push
cmp
and
adcl
nop
add
clc
movsb
jmp
jnp
insl
xor
fbld
xchg
xor
cld
ss
mov
sub
pop
cld
xchg
adc
add
jnp
sti
dec
imul
push
fcoms
xchg
mov
sub
mov
jns
fmuls
aad
xchg
pop
xchg
stos
jno
subb
dec
jae
mov
out
in
sbb
int
mov
add
fnstsw
push
popa
xchg
aad
adc
aad
nop
je
jo
push
jmp
pop
jne
xor
pushf
sub
rolb
lcall
mov
xchg
out
xchg
inc
cs
shl
push
test
add
pop
push
inc
xor
xlat
add
jne
movb
stos
xchg
pop
lock
adc
and
adc
push
mov
push
cmp
mov
jp
mov
mov
mov
scas
adc
test
mov
jmp
insl
icebp
xor
xor
pusha
test
push
inc
test
cmp
add
data16
in
ss
subb
bound
sahf
and
push
repz
fwait
push
pushf
sub
bound
bound
inc
test
sbb
in
and
jne
pop
inc
imul
pop
test
in
inc
xchg
mov
xchg
and
jmp
movsl
pop
pushf
sti
sub
aaa
lods
int3
out
ficompl
mov
mov
leave
enter
aas
sub
push
clc
test
mov
xchg
mov
sbb
add
or
xchg
and
pop
addr16
lods
lahf
inc
dec
icebp
adc
sbb
outsb
pop
sahf
scas
out
sti
mov
inc
mov
outsl
cmp
test
xor
test
jne
mov
inc
stc
mulb
pop
mov
dec
sbb
push
adc
popf
sub
lock
and
scas
mov
and
pop
adc
sub
enter
mov
sub
push
ljmp
sbb
pop
ffree
sub
pop
jmp
sqrtps
adc
pop
sub
jae
sbb
mov
add
fwait
pop
push
push
lds
pop
bswap
jmp
pop
pop
movsw
pop
dec
dec
pop
stos
sti
test
pop
dec
dec
inc
or
cld
repnz
shrb
add
insb
std
aad
loop
ret
or
sahf
insb
push
inc
mov
jecxz
push
adc
jns
mov
cld
lea
mov
sbb
inc
jae
popf
les
jae
and
fisubs
ss
dec
push
test
leave
or
mov
pushf
xor
xchg
sbb
inc
mov
push
push
fsubs
mov
mov
sub
lods
sti
jle
or
leave
push
adc
push
mov
lcall
es
jecxz
jmp
imul
add
into
push
mov
js
in
cmp
xchg
xchg
xchg
dec
std
sbb
aaa
aas
outsb
xor
mov
xor
ret
ret
push
push
dec
sbb
insb
cld
inc
push
ss
jnp
sub
sarb
in
rcll
xchg
test
pop
xchg
mov
or
in
add
ficompl
cli
mov
aam
push
das
lcall
out
mov
xor
sbb
jge
add
subb
stos
push
lret
sti
cmp
mov
or
add
shlb
xor
push
and
push
mov
jo,pt
or
pop
xor
lods
xchg
out
add
inc
add
popf
shlb
stc
pop
or
dec
add
cmpsb
inc
repnz
rclb
and
loopne
mov
int3
in
cltd
cmp
mov
push
lahf
or
push
fistps
and
inc
stos
inc
xor
imul
cs
aaa
lods
jmp
je
push
cltd
jge
subl
or
sbb
xchg
and
xlat
out
rclb
call
mov
decl
pop
pop
cmp
mov
mov
repnz
or
inc
packssdw
xchg
sub
inc
movsb
into
lods
mov
adc
mov
pop
pop
pop
xor
sahf
adc
in
outsb
sti
test
cmpsb
fidivs
push
stos
inc
mov
sub
stc
fs
in
loope
shlb
lods
adc
sub
stc
and
sahf
mov
stos
hlt
and
add
lret
test
push
loopne
scas
lret
es
xchg
pop
aas
cmpsl
aam
mov
movsb
cmp
inc
push
daa
gs
mov
addr16
imull
mov
lock
adc
lcall
inc
test
dec
icebp
push
jl
scas
fs
imul
mov
lods
inc
xlat
lahf
int3
mov
cmp
rcrl
push
lret
push
mov
pop
cwtl
cwtl
xor
or
ss
cmp
jmp
call
push
cmp
jnp
or
ret
pop
ret
scas
pop
xor
add
lods
arpl
push
inc
and
addr16
push
movsl
mov
push
ljmp
hlt
bound
and
push
dec
jne
mov
mov
or
rcrb
fcompl
mov
sahf
jmp
jb
fwait
push
fs
jmp
sub
push
inc
mov
mov
cs
jbe
shl
adc
ret
pusha
cmp
xchg
ja
imul
cmp
lods
dec
fstps
jl
jnp
jle
push
sub
std
repnz
adc
outsb
mov
pop
xchg
mov
jb
mov
scas
pop
lods
lret
pop
sar
mov
icebp
xor
aaa
cmp
mov
repnz
mov
xor
mov
ret
mov
insb
push
lods
fwait
notb
jae
cltd
cs
sub
out
out
xchg
xchg
or
stc
or
add
xor
add
lahf
sarb
aam
rol
or
mov
andb
mov
fmull
mov
adc
fnstsw
out
sarl
fiadds
mov
fcomip
or
in
adc
stc
ret
fwait
xchg
jbe
nop
outsb
or
and
ljmp
xor
test
addl
mov
inc
insl
jns
bound
xor
cmp
repnz
scas
sti
mov
xchg
ss
gs
jnp
mov
inc
push
xchg
sahf
notl
fdivrl
subl
lcall
movsb
in
and
shlb
sub
in
jmp
and
js
leave
adc
imul
dec
jle
jnp
js
xchg
daa
cmp
add
cmp
mov
jb
cld
aas
push
icebp
sbb
push
sbb
dec
or
sub
cmpsl
out
dec
int3
push
je
fidivl
mov
rclb
scas
sbb
test
jo
div
jle
sarl
xor
dec
sub
out
mov
xchg
pop
rcrl
stos
inc
rol
push
clc
lcall
pop
arpl
push
dec
repnz
loope
mov
popa
lret
sub
xor
lret
mov
scas
cld
fmuls
jno
mov
dec
cmp
in
mov
xor
das
cmpsb
pop
sub
add
sbb
mov
leave
loopne
and
push
and
inc
faddl
mov
lahf
out
inc
cmp
int
pop
adcb
movsl
cs
jb
mov
xorl
lret
mov
jl
lods
ljmp
sahf
jb
popf
daa
or
xor
ds
jg
loopne
jns
xlat
rorl
sbb
rorb
xchg
mov
stos
test
jo
inc
mov
sbb
sub
popa
out
dec
xor
or
pop
cmp
outsb
stc
and
icebp
popa
xchg
inc
data16
jb
leave
jne
push
leave
rcrb
fwait
sub
add
xchg
jle
and
sub
popf
sub
repnz
or
stos
push
adc
mov
xchg
cmp
dec
ds
das
out
pushf
push
mov
lock
mov
sub
in
fsubl
push
movsl
clc
jne
int
rcll
add
pop
sbb
test
mov
push
inc
sbb
pop
jo
outsb
movb
push
cmpsb
xor
scas
idivl
cmpsb
in
fisubrs
xor
addb
sbb
and
xor
sub
sbb
or
nop
inc
lock
stos
lea
push
lds
jg
std
out
call
mov
in
mov
mov
mov
mov
jns
jecxz
mov
adc
lret
or
imull
aad
cli
xor
ret
ret
fimull
sub
sti
inc
xchg
cmpl
sub
pop
aam
fs
mov
cs
add
aaa
and
repz
mov
sbb
enter
enter
fistps
dec
pop
scas
inc
ja
cmc
fs
cmp
cltd
cmpsl
cmp
call
scas
dec
les
andb
test
lock
lret
shrb
mov
lret
fisubs
out
dec
fs
negl
sub
das
shlb
xor
sub
mov
in
jae
xlat
pop
mov
mov
mov
pop
mov
ljmp
fcomps
out
add
xor
xchg
mov
aam
and
stc
xchg
repz
sub
ss
fcoml
sub
mov
and
hlt
sub
add
add
fidivrs
loopne
aaa
mov
lret
lcall
pop
sub
das
sub
mov
sub
cmp
rcrb
lret
mov
inc
inc
outsl
lock
inc
inc
cmpsl
insl
shl
pop
dec
adc
jecxz
xchg
sti
mov
das
bound
sub
jbe
dec
push
dec
jl
fs
pop
adc
in
xor
mov
dec
mov
outsb
mov
inc
dec
ret
xchg
push
inc
mov
push
lret
xchg
mov
ss
sbb
dec
xchg
addl
xor
call
in
jno
push
push
push
jl
mov
push
adc
outsb
mov
adc
adc
jns
test
rcl
inc
add
shrb
jae
mov
stc
inc
shll
cmp
lods
push
or
mov
pop
icebp
popf
insb
adc
pusha
mov
repnz
or
scas
decl
pop
mov
call
jno
pop
and
scas
cmp
jl
mov
outsb
mov
sub
cmp
jge
adcb
pop
and
iret
fs
inc
sti
push
aaa
or
sbb
aaa
fsts
mov
jns
xchg
addl
cmc
jno
xlat
ret
pop
pop
mov
and
inc
out
xchg
test
cmpb
gs
imul
or
mov
jl
arpl
cmp
es
dec
inc
ret
xchg
insl
xor
mov
orl
inc
rcrl
stc
xor
cld
scas
add
pushf
scas
push
popf
xor
inc
mov
inc
ja
adc
inc
aad
dec
push
adc
jno
pusha
pushf
cmp
push
arpl
icebp
mov
dec
ss
ret
scas
xchg
rolb
mov
aaa
push
lcall
enter
jne
pushf
idivb
add
addr16
dec
xchg
popf
xchg
sub
sub
pop
in
push
push
fimuls
sahf
and
mov
in
leave
mov
test
int
mov
test
sbb
sbb
fimull
pop
call
jle
xor
sub
subb
add
fisubrs
mov
addr16
fnstcw
inc
mov
repz
push
inc
popa
outsb
pop
movb
adc
xlat
push
les
clc
xchg
dec
add
xor
xor
pop
jmp
pop
or
sahf
rcll
adc
inc
dec
sub
imul
jge
cmp
popa
hlt
sti
and
int3
and
out
mov
add
aad
lcall
das
loope
mov
push
xor
fbld
or
scas
add
ljmp
adc
xor
dec
xchg
mull
fnstsw
xchg
std
loop
mov
cld
rol
push
imul
lods
insb
push
rol
xchg
stc
inc
bound
movsl
dec
mov
imul
mov
enter
cmp
imul
pop
cltd
pop
push
add
insb
push
dec
jp
sub
sub
and
hlt
mov
mov
push
lret
imul
fdivrs
rcll
out
inc
xchg
and
outsl
lret
rorb
test
cmp
xchg
les
stc
or
pop
pushf
mov
hlt
sbb
lahf
pop
loop
cmpsb
dec
movsl
out
decl
jle
shr
ds
out
pop
lock
bound
lods
add
stc
add
mov
cmp
adc
jae
adc
pusha
add
fs
aad
leave
shrl
sub
xor
cmpb
mov
and
es
mov
movl
xchg
out
mov
in
mov
addr16
cmp
std
repz
imulb
and
and
inc
in
sbb
fisubl
sahf
jp
xor
push
and
sti
insl
push
dec
dec
aaa
xor
xchg
push
pop
loopne
push
push
mov
mov
nop
pop
inc
push
inc
das
or
test
clc
bound
orb
popf
push
mov
mov
das
mov
aad
and
xchg
xor
mov
nop
sub
and
push
jnp
cltd
and
mov
mov
jno
es
repz
nop
aas
arpl
add
ss
mov
imul
mov
sub
or
inc
cmp
cmp
and
movsl
and
jb
mov
mov
sub
mov
xchg
mov
inc
adc
dec
jb
outsl
in
mov
xchg
or
test
arpl
cli
fistpll
inc
mov
push
dec
cmp
pop
push
sub
mov
arpl
les
adc
cwtl
jb
in
in
pand
add
clc
insl
cmpsl
test
push
sub
aam
ret
and
fbld
test
push
pop
test
push
ss
mov
movsl
out
add
ds
fs
test
cmp
push
lds
and
cli
mov
jbe
bswap
inc
hlt
sbb
roll
pop
mov
daa
sub
or
add
or
push
dec
das
cmp
mov
imulb
xorb
or
mov
cmp
mov
mov
mov
in
or
aam
roll
data16
pop
push
in
jmp
adc
outsl
jno
mov
and
icebp
and
das
mov
fs
push
mov
out
jo
hlt
pushf
mov
stc
sbbl
mov
push
xor
xchg
dec
xlat
and
dec
jns
testl
jnp
mov
mov
push
mov
test
mov
mov
lahf
jne
aad
enter
and
and
fisubrl
test
mov
push
ss
pusha
add
aam
das
ret
cltd
loope
sbb
dec
jns
pop
leave
pop
cltd
xor
pop
imul
fdivp
push
push
out
sbb
dec
or
inc
jne
cmp
ljmp
lds
mov
pop
mov
mov
repz
test
icebp
hlt
ljmp
and
aam
fiaddl
xchg
arpl
inc
cmp
dec
adc
int3
adc
sub
lret
jno
cli
lret
scas
lea
loope
or
dec
xor
shrb
lock
xorl
cmp
adc
and
lea
outsb
jnp
aas
int3
lgs
addb
cmpsb
ljmp
data16
pop
add
pop
ljmp
cwtl
and
push
cltd
mov
inc
cmp
clc
dec
pop
push
test
mov
adc
pop
adc
mov
fldenv
into
in
frstor
or
jnp
and
mov
xchg
fcoml
roll
test
xorb
cmp
cmpl
and
idivl
cmp
sub
adc
xor
push
stos
sub
cmpb
ret
in
jbe
shlb
add
add
xchg
lock
test
in
push
xor
mov
stos
push
cmpsb
fstl
ret
pop
jb
outsl
xlat
push
sbb
dec
pop
icebp
mov
xchg
daa
cltd
aam
sub
roll
in
cmc
shrb
adc
push
imul
push
loopne
pop
adc
push
fists
dec
das
sbb
cltd
cmp
imul
repnz
add
daa
sbb
push
stos
aad
adc
or
adc
pushf
inc
lods
lods
cmpsl
mov
rdmsr
mov
out
call
or
repnz
pop
in
fmuls
lahf
mov
sbb
aam
in
aam
mov
fnstcw
outsl
mov
leave
stos
jb
pop
add
or
push
ja
xor
mov
xchg
sti
sarb
shl
aas
xor
cmp
popa
xlat
aam
cmpsb
std
push
outsl
test
jbe
lods
pop
cmpsl
sbb
mov
xor
mov
inc
mov
mov
stos
ficoms
dec
les
fdivs
add
imul
andl
mov
mov
mov
xor
and
inc
xchg
xchg
sbb
push
notl
xchg
xchg
rorb
push
push
test
push
adc
push
orb
fldcw
inc
out
pop
ret
lods
mov
sbb
shrb
and
in
cmpb
nop
ss
outsb
pop
xchg
icebp
lret
insl
push
aas
cs
mov
jg
cmp
mov
test
call
push
pop
insl
shlb
inc
and
push
ret
nop
stc
push
and
inc
jmp
ss
ret
cltd
imul
into
push
popa
cmpsl
mov
jl
mov
pop
push
rcrl
mov
mov
fwait
push
fdivs
dec
sarb
ss
xor
sbb
add
shl
rcl
or
or
roll
rclb
mov
mov
cmpsb
push
dec
mov
xor
adc
fwait
add
cmp
sub
push
push
scas
stos
imul
js
ficompl
cmpsb
outsb
push
shrb
pop
add
sbb
lcall
shl
dec
leave
sti
cmove
test
fnstsw
xlat
mov
jo
test
or
mov
or
lcall
inc
add
movsb
ja
call
jle
xchg
roll
das
xchg
adc
cmpsb
jbe
inc
push
dec
jne
fnsave
jns
lods
fidivrs
push
jecxz
sbb
sub
jmp
movsb
add
cmc
mov
xchg
push
or
arpl
xchg
insb
ret
scas
clc
push
dec
adc
pusha
sbb
jmp
push
aam
and
pusha
inc
hlt
or
inc
cmpsb
sti
sub
clc
jge
shl
push
jmp
dec
mull
mov
aaa
pop
push
scas
fstl
leave
push
add
in
xor
fsubrl
sub
imul
jge
enter
cmp
call
inc
mov
sbb
loope
jmp
adc
sub
jle
stc
sbb
nop
mov
jno
loopne
fucomp
outsl
dec
mov
js
adc
add
cmpsl
xor
xor
mov
fisttps
fwait
mov
mov
test
pushf
out
repz
mov
loope
or
xor
loop
leave
jmp
inc
inc
and
xor
jmp
jmp
dec
rorl
inc
icebp
lods
flds
pop
sti
in
rolb
push
out
jge
mov
add
add
push
mov
popf
mov
lock
xor
dec
adc
in
xor
push
xorl
dec
and
cmp
sar
inc
mov
outsl
jg
xor
pop
cltd
gs
popa
arpl
add
mov
arpl
repnz
aaa
cmc
sub
out
call
ret
test
pop
out
cmp
arpl
in
clc
pop
repnz
push
iret
add
pop
sub
cmp
pop
sbb
add
lret
jb
jle
mov
or
stos
and
mov
mov
and
repz
ret
jl
mov
fstl
sbb
scas
clc
daa
pop
in
inc
mov
sub
jp
loopne
jae
xchg
popf
fwait
ja
pop
inc
inc
and
pop
lret
sub
enter
cmp
and
xchg
rclb
adc
xchg
mov
and
xchg
or
sahf
mov
add
je
test
sbb
mov
popa
in
cltd
inc
rorl
addr16
inc
mov
imul
sbb
mov
cs
xchg
outsb
inc
jl
inc
fimull
lods
push
sub
ljmp
fcmovnu
sbb
xchg
mov
mov
cwtl
ret
lcall
push
in
imul
inc
xchg
fimuls
jecxz
aad
inc
adc
aam
xor
jne
push
pop
mov
int3
movsb
sub
dec
xor
or
mov
cmp
mov
inc
sub
shlb
dec
mov
mov
sbb
push
dec
call
out
jnp
pop
mov
pslld
inc
sahf
int
aad
pop
dec
movsb
adcl
mov
insl
sar
dec
mov
sub
sub
in
daa
fisubl
decl
or
out
add
ret
rorb
pop
sub
jne
and
shlb
xor
mov
in
xor
pop
popa
jl
outsb
sbb
imul
mov
xchg
push
subl
lods
test
push
sbbl
out
and
sub
andl
mul
mov
inc
and
inc
add
xchg
lahf
fs
xor
push
mov
inc
dec
test
cmpsl
mov
outsl
cmc
fmull
loop
pop
sbb
mov
and
jle
xchg
lahf
fs
jmp
xor
out
ljmp
xor
inc
in
aas
sub
push
int
js
int3
push
cmp
ficoms
or
sbb
pusha
iret
add
pop
pop
imul
lret
addr16
sub
aam
mov
push
pop
and
pop
loope
sti
movsb
add
xchg
test
scas
mov
adc
or
call
bswap
ljmp
xor
cli
mov
add
lea
xor
mov
lcall
mov
cs
fbstp
sti
lahf
rcr
movsb
out
fnstcw
mov
mov
adc
cmp
jbe
push
mov
push
jno
add
inc
jmp
in
add
aad
inc
cmp
stos
dec
and
das
cmp
pop
rorl
pop
nop
xor
cwtl
fnstcw
outsl
mov
mov
ljmp
cld
pop
adcb
dec
xor
in
mov
adcb
mov
xlat
xchg
xchg
dec
int
pop
push
fisubrl
jmp
les
lock
fiaddl
xchg
inc
cli
pop
clc
dec
js
dec
jnp
cmp
pcmpeqw
or
adc
mov
sbb
les
dec
mov
pop
xor
fnstenv
jae
fists
lret
cmpsl
push
out
push
push
scas
out
push
sar
jb
adcb
repz
mov
popf
lock
fs
jno
mov
lods
mov
xor
cld
pop
scas
inc
loopne
cmpsl
mov
xadd
sbb
in
cmp
inc
pusha
or
test
das
imul
out
mov
lock
mov
cmp
push
sbb
stos
lcall
imul
push
pushf
or
daa
aad
ret
pop
mov
call
mov
mov
inc
lds
add
jle
leave
test
repz
rcll
stos
sub
cmp
enter
adc
cli
into
jno
sahf
repz
jge
enter
adc
sub
loop
sub
and
call
dec
jbe
add
rorl
mov
or
nop
push
outsl
or
adc
loope
add
lods
push
ds
push
mov
xor
cmp
xlat
lods
and
mov
int3
imul
addr16
js
aad
ja
xor
fisubrl
mov
in
mov
fs
sbb
dec
pushf
cltd
and
dec
jno
in
imul
add
add
addr16
orl
pop
and
imul
mov
sub
notl
popa
repz
repz
int
les
mov
ljmp
mov
sbb
int
mov
sbb
mov
pop
sub
mov
mov
lds
incb
mov
test
or
cltd
outsl
popa
push
jecxz
out
sti
dec
andl
mov
xchg
mov
jne
daa
jle
std
enter
push
jle
xor
into
xchg
cmp
xchg
mov
or
out
push
jnp
and
push
pop
add
xlat
loopne
jg
sub
lds
inc
js
mov
or
push
pushf
jl
lret
shlb
cmp
pop
iret
lods
cmp
int
pop
sbb
add
sbb
cmpsl
pop
int3
in
outsl
out
decl
mov
ficomps
pop
es
cs
mov
cmp
mov
cmp
xchg
jecxz
push
fcmovnu
lds
jb
xor
mov
add
push
mov
inc
inc
negl
leave
insl
fs
popa
test
scas
test
lret
pop
shl
or
lea
scas
subb
sbb
gs
dec
push
mov
shrl
xchg
fsts
ja
std
outsb
jp
in
mov
xchg
nop
lea
jmp
test
repnz
xchg
and
jmp
js
or
je
aam
sbb
mov
dec
and
sbb
or
subl
dec
or
lahf
addr16
adc
call
call
xchg
push
cli
or
daa
mov
push
jp
jbe
xchg
xchg
in
pop
shll
rcll
nop
gs
xchg
cmp
movsl
sti
aam
xorl
push
push
ret
mov
sarb
imul
iret
fucomip
add
xchg
test
enter
add
jne
out
mov
test
inc
push
mov
mov
sbb
mov
xchg
lret
stos
push
loope
push
cmp
outsl
mov
cmc
add
xchg
arpl
push
and
or
jns
sbb
or
test
sub
fs
adc
aas
push
or
dec
inc
xor
repnz
jg
ja
into
and
xor
insl
in
and
push
mov
fdiv
add
ficoml
jmp
das
xor
jbe
lret
mov
and
mov
addb
jbe
das
jmp
mov
dec
faddl
adc
fsub
push
fisttpll
inc
xchg
stc
sbb
xor
bound
jnp
leave
mov
jge
ret
mov
sti
sub
xor
xchg
daa
xor
bound
dec
sbb
std
int3
out
xchg
rolb
cli
inc
adc
out
xor
and
xchg
mov
loop
inc
jecxz
add
or
jo
arpl
fisubs
or
add
popf
rcrb
adc
in
or
sbb
jmp
into
data16
jnp
ljmp
push
dec
and
data16
add
cmpsl
fiaddl
sbb
test
filds
sbb
addl
xor
xchg
cmp
out
pop
mov
jg
ror
movsl
ja
mov
lret
mov
push
xor
xchg
jp
cmp
or
jecxz
mov
lea
mov
xchg
push
testl
and
push
call
clc
fs
stc
lods
outsb
movsb
jmp
inc
push
mov
or
adc
push
std
test
testb
pop
and
js
fisubrl
test
testb
cmp
jle
inc
into
pop
lods
rcl
pop
gs
popa
push
sahf
pop
clc
jecxz
es
xor
inc
mov
mov
ret
or
xor
shlb
movb
pop
xchg
stc
and
cmc
stc
xchg
sbb
jmp
mov
in
mov
loope
xor
std
jp
into
cld
test
xor
xor
mov
adc
cld
lock
outsl
dec
scas
fcmovne
sbb
add
push
add
lret
cmpl
cmp
push
ljmp
sahf
pop
jne
shrb
stc
sub
test
adc
shll
or
or
pop
cmpsl
sub
dec
or
data16
sbb
pop
inc
add
repz
cmp
push
push
cmc
fldl
stos
xchg
outsb
add
in
sahf
xor
cmp
xlat
fistps
outsl
orl
ss
jg
cmc
jns
cpuid
mov
pop
ljmp
fs
pusha
mov
jle
jo
sub
push
push
push
dec
add
and
adc
jp
in
sbb
push
jg
xchg
inc
push
mov
movsb
and
ds
mov
adc
mov
cmp
addr16
loop
repnz
push
pusha
je
orb
push
int
xorb
xchg
inc
jno
aaa
add
idiv
mov
sarl
jbe
imul
out
xor
mov
and
lea
pop
leave
movsl
cmp
xchg
insb
test
fs
push
sbb
sub
pop
cmp
xchg
or
sahf
xchg
and
mov
aas
xor
mov
sbb
aad
push
inc
inc
jbe
stos
xor
jno
outsb
and
popa
push
mov
jb
jmp
test
dec
jecxz
cld
pop
add
sahf
lahf
shl
sub
out
pop
dec
dec
add
decl
ja
jbe
stos
xor
gs
addr16
and
lea
adc
or
adc
loopne
cmp
jb
pop
push
lock
jo
sub
inc
dec
adc
sub
jae
pop
je
pop
ret
cmp
into
out
inc
mov
cld
into
sub
in
add
mov
and
sub
xor
pop
fldcw
cmp
and
aaa
das
addr16
ja
int
or
js
loope
push
mov
cmp
fcompl
push
dec
xor
mov
jb
mov
mov
loop
cmpsl
mov
xchg
aad
xor
jne
xchg
rcl
rcrb
lea
int3
xchg
mov
sub
cmpsl
popf
ffree
sub
xlat
mov
out
ret
daa
mov
xlat
daa
lock
and
shll
inc
sbb
mov
inc
mov
dec
iret
and
loop
mov
or
push
inc
icebp
clc
and
and
fabs
and
fsubl
sub
push
call
jnp
aam
mov
mov
sbb
cmp
jmp
mov
pop
lds
shl
daa
sti
daa
and
mov
and
mov
jb
jnp
adc
outsb
popf
fnstcw
mov
movsl
fsts
adcl
adc
js
xlat
call
insb
sub
repz
or
cmp
pop
stos
add
in
and
push
cli
inc
mov
sbb
sti
popa
and
cpuid
jp
pop
fxch
fisttps
xchg
cwtl
arpl
or
jmp
dec
arpl
cmp
and
cmp
stos
xchg
out
xchg
mov
imul
and
add
xchg
insl
loopne
rorl
jne
mul
outsb
test
fldt
negl
fdivrl
fadds
pop
popa
add
jae
in
xor
pop
sarb
loope,pt
xchg
insb
adc
addr16
adc
call
imul
cmpsb
sub
push
jp
push
inc
out
xor
clc
mov
gs
dec
cwtl
adc
push
push
les
add
jp
popf
std
mov
movsb
imul
lahf
push
adcb
push
enter
lods
test
mov
or
mov
scas
xlat
pusha
mov
mov
jge
unpcklps
lea
inc
push
sub
imul
xlat
sub
dec
repnz
jae
mov
decb
outsb
ret
mov
mov
jp
xor
sub
lock
or
push
jp
ret
out
lcall
xor
inc
imul
mov
sbb
into
scas
xchg
and
mov
les
jbe
das
adc
mov
pop
stos
sub
jno
stos
mov
loopne
and
clc
jbe
fnclex
sbb
mov
sbb
outsl
mov
lods
mov
dec
or
mov
pop
fnstsw
mov
xchg
scas
push
mov
pusha
loopne
aam
cltd
and
inc
nop
push
dec
adc
sub
in
stos
nop
stc
testb
push
adc
mov
iret
xchg
mov
adc
mov
fistps
inc
and
repnz
aaa
rcrl
fsubl
data16
test
fs
mov
push
rorb
xor
sbb
sbb
sub
inc
loope
sub
mov
add
inc
sub
test
sbb
add
ret
aas
dec
out
loope
jno
into
das
push
mov
cmp
ja
and
ss
pop
lock
sbb
xchg
sbb
xchg
ja
jnp
or
or
js
fisubrs
sahf
adc
sub
inc
data16
cmc
mov
sub
in
fmull
xchg
stc
jmp
clc
arpl
jo
push
pop
mov
jmp
stc
mov
mov
jmp
sub
mov
pop
shl
movsl
add
mov
aam
jns
or
les
xchg
add
stos
and
nop
out
xlat
push
mov
dec
adc
push
mov
scas
clc
jne
rolb
popf
add
cld
pop
hlt
test
rcrl
dec
out
inc
bound
je
add
xor
sahf
scas
sub
lea
jns
jl
jae
mov
sbb
stos
shrb
xchg
dec
and
xchg
pop
pop
dec
popa
out
mov
dec
push
das
dec
sbb
out
stos
push
movsb
jae
jmp
es
jge
dec
xchg
test
cmp
cmp
int3
sub
jae
mov
cmp
mov
mov
arpl
inc
jbe
sbb
mov
adc
push
mov
cmp
movsl
sbbl
jbe
sti
adc
idivl
ror
jns
mov
push
jmpw
in
pop
or
dec
sbb
in
mov
stc
and
ret
cmpsl
jno
sbb
fimuls
lock
js
nop
mov
test
andb
fists
inc
dec
mulb
adc
adc
sub
je
jmp
sbb
inc
mov
leave
push
arpl
cmp
lods
jmp
inc
incl
cmp
and
incl
mov
movsl
xchg
and
pop
arpl
int
aaa
mov
mov
lds
jp
mov
or
shrb
int3
push
shll
push
dec
push
test
lcall
jg
loope
data16
adc
das
add
out
repnz
ret
daa
mov
enter
fldl
in
insb
sarl
push
out
outsl
lock
pop
mov
ret
in
and
xor
in
shlb
xchg
mov
sbb
push
and
sahf
in
gs
xchg
sub
xchg
mov
push
out
cmpsl
dec
fmull
inc
dec
push
sti
and
addr16
pop
adc
pop
sbbb
xchg
push
in
js
mov
arpl
mov
gs
ffreep
shlb
add
mov
pop
loope
pop
jb
pop
sahf
cmp
repz
xchg
mov
push
dec
pop
xchg
in
sti
mov
push
inc
pop
adc
jbe
pop
xchg
dec
pop
jmp
in
jns
mov
stos
inc
test
push
je
in
in
pusha
cmp
fs
stc
int
stos
iret
js
pop
jb
dec
enter
cmp
into
or
out
clc
xchg
or
sub
les
sbb
addr16
push
cld
adc
mov
jb
mov
cmpsl
lea
xor
sahf
jo
push
mov
shlb
movsb
inc
dec
jp
cmp
or
xchg
arpl
cwtl
sahf
sbb
push
or
jo
sbb
xlat
out
and
sbb
xchg
rclb
imul
cltd
pop
pop
fmuls
inc
cmc
insb
sbb
mov
push
push
int
mov
negb
add
sub
mov
mov
and
rclb
mov
int
push
mov
imul
push
test
push
add
sbb
mov
mov
cmpsl
sarb
add
adc
push
jbe
xchg
push
in
xchg
fistl
mov
aas
bnd
xor
mov
push
js
and
push
adc
popf
sub
lods
arpl
addl
lret
push
xlat
repnz
repnz
in
or
push
imul
data16
xor
push
xor
test
push
and
push
aam
mov
imul
mov
jecxz
int
test
inc
push
lea
xchg
rorb
hlt
ficomps
sbb
lahf
dec
jg
pop
test
out
xchg
or
testl
jne
scas
out
mov
mov
popf
sahf
pop
jno
cmpsl
xchg
out
xor
dec
lods
jae
adc
mov
jle
repnz
test
add
flds
outsb
popa
arpl
cmp
lahf
mov
and
lret
add
out
jae
lock
adc
pop
daa
dec
inc
xchg
sahf
cmpsb
popa
pop
mov
mov
and
sahf
cmc
pop
stc
jo
inc
notb
leave
jle
aam
jns
cmpb
xchg
lret
push
mov
push
or
rcrl
dec
aad
in
repz
loop
dec
aaa
cwtl
or
sub
subl
xchg
ficoms
xor
add
out
popl
xorl
mov
cwtl
or
push
bnd
sub
mov
fisubs
repnz
jns
jecxz
mov
xchg
mov
mov
test
insb
push
fwait
mov
xchg
dec
scas
cmp
movsb
jns
xor
jb
jnp
cltd
and
fistps
mov
andb
clc
cmc
cmp
daa
bound
lahf
sub
jo
jge
sbb
out
push
cs
adc
aaa
popa
add
add
adc
mov
mov
cmp
sub
add
inc
rcrl
mov
sti
pop
xchg
sub
jns
jle
popa
insl
imul
push
sub
xor
mov
jo
dec
dec
stc
push
xchg
std
dec
adc
push
adc
jbe
push
imul
loopnew
mov
mov
lret
mov
cmc
shr
or
mov
lods
pop
clc
cmp
xchg
and
and
popa
sbb
pop
cmp
leave
scas
pop
inc
or
stc
dec
jg
stos
out
mov
mov
imul
adc
outsl
loope
daa
les
imul
mov
xchg
mov
add
pushf
and
dec
test
sbb
jb
out
mull
ss
push
push
orl
sub
sub
outsl
test
sahf
sub
and
inc
sbb
ss
sahf
push
dec
je
scas
dec
lds
lcall
cmp
jl
movsb
aaa
and
mov
sbb
leave
mov
sub
test
sbb
js
imul
jnp
bound
ja
fwait
cltd
mov
pop
add
mov
in
shll
xor
adc
fmul
paddusb
adc
cmpl
call
lods
sbb
mov
out
pop
cmp
pop
shlb
leave
xchg
adc
push
sub
inc
push
and
push
or
jnp
adc
scas
or
pop
jl
out
adc
or
inc
pop
andb
lcall
push
negl
clc
jbe
rol
test
test
adc
imul
fwait
push
ficompl
popf
repnz
pop
or
xchg
in
jns
and
pop
lods
les
add
cmp
jge
push
aam
pop
fwait
daa
and
xchg
dec
mull
xchg
push
and
fidivrs
jns
jo
add
add
push
add
cmc
xchg
push
call
mov
test
push
pop
mov
cmp
sub
iret
pop
add
mov
cs
cmp
mov
adc
mov
xor
mov
cmp
mov
cltd
fdivl
gs
lock
xchg
dec
jb
test
push
add
scas
mov
outsl
js
add
out
xchg
testb
jae
xchg
cld
mov
mov
adc
mov
mov
js
sbb
and
outsl
xchg
int
pop
push
inc
stos
imul
push
insl
inc
rcll
mov
pop
mov
scas
jp
inc
push
dec
jp
mov
hlt
in
cmp
jmp
je
dec
xor
add
jo
xchg
mov
in
pop
nop
dec
ljmp
outsb
lea
xlat
outsb
aas
iret
psubd
add
test
test
stos
xor
jns
jbe
inc
flds
jne
xor
mov
xor
or
sbb
jns
cmpsb
stos
es
loopne
push
hlt
or
jb
sub
insl
jbe
push
pop
xor
andb
inc
adc
push
lahf
test
rcll
xchg
aam
push
inc
pushf
fldt
ds
pop
sbb
popaw
in
inc
sarl
jge
subl
into
jle
or
mov
xchg
mov
or
xor
fwait
lods
mov
frstor
adc
mov
in
mov
adc
test
jb
ret
mov
dec
adc
clc
mov
fstps
imul
mov
out
adc
lret
cs
jle
repz
jmp
in
scas
repz
push
sub
icebp
xchg
sub
daa
push
mov
movsl
sbb
out
sarl
sub
mov
test
xchg
sub
scas
cmpsb
xor
or
test
xor
add
sub
loop
cwtl
mov
pop
sub
cld
imul
imul
add
iret
into
testb
enter
or
mov
xor
rcrb
adc
sti
pop
jo
mov
jnp
jnp
xchg
sbb
xchg
pinsrw
jo
jmp
inc
enter
in
nop
sub
adc
daa
ret
rcrl
mov
jae
in
sub
inc
xchg
in
adc
ja
movswl
mov
push
adc
pop
or
mov
sub
pop
mov
aas
xchg
insl
and
pushf
inc
lods
xchg
adc
mov
std
sti
lret
mov
cmpsl
ljmp
ficompl
sub
mov
pop
jle
cmp
and
lahf
lods
gs
add
or
pop
sub
aad
xchg
sub
lock
daa
xchg
lret
subl
dec
jmp
adc
mov
push
lret
das
stos
mov
xor
jecxz
ficoml
and
hlt
lret
bnd
movsl
in
sub
or
push
jbe
lahf
or
sahf
xor
pop
mov
lret
test
inc
mov
mov
mov
or
popa
mov
shrl
test
add
lds
arpl
fisttpl
int
inc
xchg
aam
xchg
jmp
pop
movsl
and
push
ljmp
cmp
lock
mov
xchg
xor
nop
mov
cli
mov
and
ret
mov
pop
mov
stos
push
pop
bnd
adc
push
adc
xchg
dec
xchg
xor
leave
popa
lahf
shrb
mov
cmp
ret
mov
jmp
lods
scas
push
inc
add
inc
inc
pop
jno
xlat
fisubl
addr16
push
cmp
sbb
add
out
fisubrs
inc
aam
push
xchg
out
leave
pop
mov
sub
jo
pop
mov
rolb
out
ret
sub
mov
and
es
mov
out
in
dec
xor
or
movsb
out
adc
mov
movsb
bound
push
call
out
lcall
fildl
jne
imul
insl
out
xor
xorb
mov
stos
nop
mov
lahf
es
inc
into
push
bnd
stos
and
lods
dec
sub
mov
or
sbb
inc
mov
cld
mov
ja
mov
sahf
stc
cmp
inc
mul
xchg
push
jnp
cmp
and
lds
cmp
repz
xchg
popa
aas
push
inc
xchg
test
sbb
xchg
mov
xlat
sbb
xor
out
pop
in
push
cmp
inc
mov
pushl
sub
adc
test
jmp
lods
pop
sub
gs
stos
dec
in
sbb
shrl
fiaddl
mov
pop
xchg
cmc
adc
sar
mov
jnp
ret
jo
enter
iret
cli
sub
xchg
push
lret
ret
rcll
je
inc
popa
add
xchg
and
mov
mov
mov
inc
xor
sbb
movsl
mov
aam
push
lcall
sub
sahf
add
jge
call
aaa
notl
mov
mov
sub
lahf
jg
inc
cli
sub
jnp
or
push
mov
push
fidivl
inc
jno
lahf
xchg
sub
fidivs
dec
mov
or
xor
shrl
pop
jbe
mov
lret
pop
stos
cmpsb
movsl
ja
jmp
xor
shrb
test
fchs
push
shl
das
mov
and
xchg
jns
in
into
ljmp
xor
dec
clc
xchg
subb
add
or
aas
dec
repnz
adc
jp
sti
dec
scas
cmc
inc
mov
rcrb
into
mov
sti
popf
iret
add
out
mov
cmpsl
sub
out
addl
hlt
arpl
sub
lods
mov
ret
jle
outsb
dec
cltd
cmc
into
cmp
pop
cmp
and
mov
pop
and
imul
or
pop
popf
arpl
cmpsb
hlt
repnz
jmp
and
cmc
mov
mov
scas
std
in
ds
sahf
adc
xor
int3
into
mov
int
ss
in
or
lods
cmpsl
outsl
jnp
mov
sub
in
push
popa
inc
cmp
adc
cmp
add
lods
xchg
mov
inc
pop
or
gs
mov
popf
cmp
repnz
ret
in
mov
push
filds
mov
mov
stos
pop
mov
push
push
test
push
cwtl
ffreep
cmp
adc
in
add
int
or
aam
lock
shrl
xor
out
fs
push
mov
loope
pop
cs
movsb
iret
jno
lods
push
cmp
inc
mov
int3
insl
cmp
push
pop
mov
movsb
mov
sbb
ljmp
sahf
cltd
cld
out
cld
imul
cmp
xchg
jnp
or
add
inc
cmp
pushf
mov
sub
and
lret
loope
dec
jae
movsb
pop
movsl
ss
lcall
ret
jno
xlat
out
sbb
pop
push
fcomps
or
jg
and
outsb
lcall
jno
loopne
hlt
lock
xchg
cs
cmp
test
add
xchg
lods
scas
mov
fnstsw
and
cltd
push
cmpb
cli
rcrl
negl
jae
mov
dec
cmp
test
ja
out
xchg
add
mov
lret
ja
pop
mov
add
stos
andl
loop
jno
and
push
or
cmp
mov
inc
ljmp
pop
cmc
aad
shrl
pop
enter
and
adc
sub
pusha
push
orl
pop
rorl
adcl
adc
fs
cmpsb
stc
je
cmp
cmp
imul
adc
es
sbb
mov
pusha
jecxz
mov
ret
jp
xor
jbe
mov
insl
jns
cmp
push
cmp
scas
js
push
push
add
int
jecxz
dec
xor
pop
push
popf
adc
adc
jmp
in
add
das
pop
xlat
das
xchg
jb
repz
pop
add
int
sbb
call
jmp
daa
es
add
loope
push
add
in
cmpsl
ffreep
or
into
cmp
das
iret
adc
clc
push
aam
xlat
movsb
into
insl
nop
addl
int3
xchg
jnp
cmp
jo
and
add
test
out
faddl
push
rcll
loope
bound
jge
sbb
jbe
lahf
or
pop
fldenv
gs
scas
movsb
sbb
jmp
adc
cli
daa
shll
xchg
and
fisttpl
je
xchg
dec
pop
das
cltd
mov
test
mov
subl
cwtl
pushf
push
ja
pop
inc
pop
inc
add
cmp
dec
add
out
ja
in
sbb
jle
cmpsl
jo
add
pop
in
stos
out
jg
or
cs
ds
outsl
xchg
fsubs
out
cmp
dec
inc
add
mov
inc
inc
push
mov
into
inc
and
cmp
imul
roll
lcall
imul
push
cmp
mov
outsl
clc
outsb
adc
or
imul
dec
repz
int
mov
mov
shlb
fbld
test
sbb
pop
sbb
add
push
push
testl
loopne
add
stos
pop
in
pop
aad
jb
mov
inc
xchg
test
jle
adc
and
movsb
sub
fs
inc
cmc
fbld
scas
out
push
xor
movsl
sbb
mov
fistps
mov
stc
jnp
jo
or
jp
add
xchg
dec
cmp
imul
std
push
lret
stos
in
outsb
mov
fildl
stos
jns
das
shl
fisubrl
outsl
clc
adc
jnp
mov
adc
movb
mov
pop
test
add
add
or
inc
popa
dec
shr
cmpb
inc
es
jne
adc
arpl
dec
inc
inc
xchg
xor
xchg
mov
cs
xorl
cmp
fsubp
pusha
cmc
cs
fidivrl
ljmp
sub
dec
sub
mov
subb
rsm
sub
pusha
lds
andl
ja
test
adc
cli
cs
inc
outsl
int3
dec
pop
xor
sbb
call
push
int
inc
in
imul
mov
fstpl
idiv
dec
mov
aam
inc
and
cmc
in
filds
bound
dec
pop
test
sarl
push
pop
add
jne
test
shlb
inc
adc
pop
mov
xor
cs
mov
add
push
and
push
mov
sbbl
cmpsb
mov
dec
mov
or
out
add
cmp
or
lcall
cmp
xchg
in
cmp
ds
and
mov
popf
outsb
loopne
inc
add
cmp
pop
mov
push
mov
cmp
lods
add
int3
jo
jb
xor
xchg
test
and
js
and
clc
roll
mov
or
push
mov
jmp
out
cmp
pop
aam
mov
and
and
xchg
push
stos
mov
out
or
jmp
int3
fimull
jo
hlt
mov
bound
or
es
cmp
mov
dec
inc
or
test
call
push
xchg
pop
hlt
cmpsl
mov
jno
in
sub
popl
inc
xchg
test
jae
jmp
pop
xor
or
add
addr16
sar
add
cmp
in
add
stos
shrl
pop
movsb
pop
jle
add
cmp
mov
mov
call
insb
mov
imul
push
mov
aas
lcall
push
or
out
rolb
fisubs
jne
xchg
xor
push
daa
pop
xorl
cmpsl
push
mov
lcall
xor
divl
and
cmp
jns
inc
sbb
dec
iret
out
fcmovne
inc
notrack
and
loope
mov
js
repz
leave
lods
out
jmp
mov
ficoml
xchg
mov
fidivl
out
mov
xor
test
sbb
mov
sti
and
andl
jge
push
test
cmp
pushf
scas
or
rol
test
cmp
or
xor
enter
mov
pop
dec
mov
ja
dec
movsl
push
cmp
push
sbb
faddl
jl
jge
mov
sbbl
mov
adc
scas
scas
pop
iret
addr16
mov
cmp
adc
jecxz
ja
aad
pop
gs
add
jae
hlt
lea
jle
or
int
xchg
mov
testl
mov
push
subb
or
jnp
mov
or
pop
jge
addl
cmpsb
sub
add
lods
cmp
sbb
push
mov
loope
inc
sub
mov
cmp
cmp
xchg
hlt
mov
test
stos
es
gs
leave
fs
sbb
in
sbb
xchg
cmp
gs
ret
cwtl
sahf
out
bound
push
dec
adc
sahf
ret
xchg
stc
or
sbb
bound
mov
jno
cmpb
inc
push
adc
jae
mov
les
jg
cmpsl
cmpsl
sub
lds
jmp
scas
scas
mov
andl
add
leave
xor
inc
sub
mov
jg
sub
inc
hlt
mov
jle
lock
mov
lods
test
and
idiv
sub
pop
fsubs
push
mov
jno
loopne
cli
add
xchg
stos
push
xlat
cld
call
mov
add
jecxz
pop
daa
loopne
pop
jnp
xor
mov
outsb
lahf
mov
iret
loope
jle
out
aad
sub
mov
push
pop
jge
and
aaa
jecxz
enter
jg
push
out
jl
fincstp
cs
mov
or
fistpl
xchg
mov
insl
push
in
inc
adc
sbb
test
ret
inc
popf
jb
insb
cltd
movsb
sub
xchg
es
and
xlat
push
push
push
stos
fbstp
lret
movb
mov
sarb
lds
popa
xor
mov
pop
mov
icebp
or
dec
in
lods
push
pushf
movsl
add
cli
mov
xor
mov
inc
test
push
data16
jb
mov
cltd
inc
in
sbb
xor
pop
pop
ljmp
mov
add
xchg
push
fs
imul
insl
inc
mov
adc
setns
out
mov
test
test
xor
push
stos
adc
cwtl
inc
sub
sub
decb
test
adcl
andb
imul
dec
das
mov
lds
push
call
sub
fldl
dec
std
fstps
sbb
mov
dec
lret
inc
les
into
mov
inc
js
mov
lahf
xlat
inc
ret
and
iret
je
call
lcall
and
loope
imul
aaa
mov
stc
idivl
push
mov
outsb
popa
insb
fdivl
mov
sbb
cs
xor
sti
xchg
aad
jae
cmp
cmpsb
and
xchg
mov
mov
or
shll
icebp
lret
dec
jle
cmp
pusha
in
movsb
fcompl
addr16
xchg
mov
sti
test
ret
xchg
faddp
dec
sub
cmpsb
int3
pop
ja
sub
add
push
xor
and
rcrl
cmp
dec
push
popw
or
ds
adc
hlt
pop
das
dec
in
mov
jle
pop
divb
inc
cmp
repz
aas
test
push
jmp
mov
xor
bts
xchg
ljmp
imul
xchg
add
sub
in
and
mov
sbb
daa
inc
and
sahf
ret
jge
cld
lcall
data16
rorb
std
gs
and
pop
lock
push
mov
sub
xor
std
test
cmpsb
dec
repnz
mov
sub
jle
and
popf
mov
pushf
add
jae
cmp
mov
mov
xchg
lcall
scas
imul
ds
pop
loopne
bound
rcll
cld
pop
jp
or
xchg
or
adc
aas
insl
popf
xchg
andl
push
mov
inc
rorb
cwtl
rolb
sub
xchg
aas
mov
and
je
lods
push
aaa
cmpb
inc
testl
jns
mov
push
inc
adc
fidivrl
test
push
mov
mov
or
bound
sbb
xlat
adc
and
mov
sbb
in
push
in
or
sarl
pop
jae
fisttpll
pusha
add
js
add
adcl
les
or
out
adc
outsl
ficoml
pop
rclb
or
enter
mov
add
adcb
pop
dec
ljmp
popf
adc
or
mov
inc
gs
aam
popf
sub
gs
fildl
mov
addr16
out
add
or
push
scas
outsl
shlb
xchg
fdivrl
aaa
add
jae
icebp
lret
mov
dec
xchg
mov
lods
xlat
sti
mov
in
inc
push
in
movsl
xchg
jnp
or
add
inc
ss
mov
rcrl
inc
xchg
sbb
mov
mov
sbb
push
std
fldl
mov
les
inc
stos
sub
bound
ljmp
xchg
or
push
loope
fbld
sub
std
rol
imulb
mov
push
mov
cmp
add
shr
add
xchg
add
adc
pop
ret
push
popf
gs
and
imul
mov
aad
les
out
push
insb
or
and
sbb
and
push
rcrl
rorb
pop
or
fadd
js
aas
divb
push
pop
stc
and
imul
lea
and
loopne
cwtl
sub
ljmp
dec
dec
inc
adc
das
shl
iret
mov
scas
gs
shlb
cmp
xchg
stos
adc
add
dec
in
imul
add
leave
sbb
push
test
pop
cmp
and
sub
sahf
paddw
add
sahf
jo
fwait
lret
dec
dec
jg
arpl
rcll
lretw
push
outsb
andl
rcl
jns
inc
mov
stc
xor
sub
call
ss
lods
shrl
lods
mov
sbb
rcl
clc
rcrl
mov
mov
cld
aas
push
mov
push
outsl
mov
mov
lcall
mov
sub
insl
sub
sub
jns
pop
jmp
les
jmp
push
adc
add
sub
out
rcll
lods
mov
out
push
inc
mov
movsb
test
leave
sub
stos
dec
mov
loope
sub
pop
mov
add
mov
jmp
push
mov
pusha
cltd
hlt
sub
dec
sbb
aaa
jle
movsl
jle
ss
insl
cmp
sbb
sbb
cmp
out
shl
sbb
push
sub
mov
fildll
out
dec
pop
lret
inc
stos
js
pop
jmp
jge
mov
outsb
into
push
dec
and
shll
sbb
rorb
dec
dec
jl,pt
sub
fnstsw
sub
fiaddl
jecxz
stc
pop
aam
and
xchg
mov
adc
sahf
repnz
or
jge
in
xor
jl
arpl
sbb
bound
inc
mov
je
and
fs
test
push
mov
push
adc
out
cmp
inc
das
loop
mov
jp
adc
lds
mov
out
ret
add
inc
xchg
inc
lahf
mov
ret
adc
xor
xchg
leave
idivb
add
push
in
sub
call
pop
sbb
sub
jno
or
cmc
cmp
xchg
sub
push
adc
imul
mov
mov
sbb
dec
enter
sti
sbb
dec
cmp
shlb
sbb
in
data16
push
mov
push
mov
fstps
int
scas
imul
pop
jo
xor
mov
dec
fcomps
adc
jle
call
mov
ret
in
sbb
inc
add
xchg
push
jecxz
jle
or
mov
sbb
ss
xchg
shrb
inc
push
jecxz
and
ret
sub
xor
mov
add
movsl
xor
xor
mov
cmp
ret
jle
mov
enter
jge
fadds
sbb
hlt
pop
enter
cld
out
out
aaa
push
add
test
iret
jae
jg
rorl
adc
cmpsb
push
push
into
test
or
pop
jbe
xor
jns
outsb
and
push
movsl
jle
jge
cld
sub
sub
push
pop
dec
cvtdq2ps
out
shrl
negl
andb
mov
adc
loope
aad
push
aaa
ss
xchg
cmp
imul
iret
popa
mov
stos
inc
repnz
faddl
test
lcall
imul
icebp
dec
or
sub
cld
push
push
push
into
insb
push
adcb
daa
mov
fistpll
test
ficompl
in
and
mov
test
cs
cltd
cmp
sar
mov
lock
pop
pop
flds
push
mov
pushf
scas
sbb
aas
stos
fistl
pop
xchg
add
xor
stos
mov
mov
jns
icebp
add
xor
sub
ljmp
pop
mov
push
sub
xlat
sub
movsl
sahf
int3
inc
rorb
push
scas
fwait
lcall
mov
sahf
adc
addb
add
sub
ss
push
xchg
xchg
loopne
jecxz
xor
flds
inc
sbb
shl
je
les
pop
jne
out
rcll
cmpsl
xor
js
faddl
jl
movsl
xchg
movsb
repnz
pop
jbe
cmpsl
ds
icebp
sub
xchg
pop
cwtl
dec
add
push
inc
push
out
in
stos
and
lret
insl
cli
test
jae
pushf
mov
jle
jmp
add
aaa
out
fcompl
sbb
adc
test
mov
fldl
cmpsb
pop
test
cmp
jbe
push
lds
mov
sbb
repz
scas
fs
scas
push
xor
mov
es
sub
stos
xchg
cld
rcl
fists
gs
xchg
and
mov
movsb
iret
xchg
int
dec
cld
cmp
cmpsb
sub
mov
add
cli
xchg
xor
std
shr
cs
sub
fucomp
or
jbe
mov
pop
jb
xor
jno
or
sub
orb
xchg
mov
xlat
cld
cmp
dec
sub
mov
xchg
dec
lcall
imul
lods
cld
sub
ljmp
fbld
movsb
jp
cld
lds
jl
or
push
sti
lahf
push
add
mov
stos
xlat
push
sub
inc
lret
scas
js
jg
or
out
push
mov
or
mov
loopne
or
jmp
sbb
jo
xor
sbb
rcl
push
pop
pop
mov
subl
addr16
push
sbb
push
jo
popa
adc
fdivl
xor
jge
pop
add
pop
cmc
fdivrs
xor
pop
inc
fisubrs
mov
les
xchg
inc
repnz
clc
mov
jge
or
shrl
into
mov
pop
addr16
repnz
sub
scas
aaa
imul
xchg
push
add
lcall
jne
push
leave
pusha
mov
stos
cmp
mov
cltd
pop
xchg
pop
or
cld
and
dec
ret
xchg
imul
jae
sub
mov
jno
mov
jae
lahf
sub
out
mov
insl
in
sub
mov
insl
jno
scas
leave
fbld
in
adc
insl
aad
inc
fisttpl
push
arpl
sahf
cltd
jmp
or
xor
pop
cmp
inc
in
jno
xorb
push
jmp
lds
int
mov
jge
adc
pop
lahf
xor
dec
adc
push
jo
dec
mov
xchg
jmp
inc
sarb
stos
sub
mov
pop
popl
andl
push
or
add
roll
in
cmpb
mov
pop
test
repz
pop
jg
sahf
mov
add
out
rorl
das
test
push
dec
xor
or
or
push
outsl
fidivrl
jns
out
push
or
aas
lcall
movsl
and
divb
rcll
fldenv
push
dec
inc
or
sbb
push
mov
incl
push
mov
push
fnsave
test
fwait
xchg
into
out
fisubs
fsubl
mov
mov
cs
xchg
pop
cwtl
cmp
ror
sub
sub
popa
insb
or
lret
cs
lods
mov
mov
andb
jg
pushf
sub
test
ficoms
das
jecxz
xchg
pop
pop
loopne
cmc
xchg
in
mov
fistpl
ja
movsl
fisubs
add
lods
xor
pusha
call
es
pushf
into
scas
cmc
or
daa
sahf
rorb
lahf
test
pop
fstps
cmc
in
push
sbb
fsubl
mov
faddl
mov
sti
pop
aad
je
xchg
xor
aas
mov
push
idivl
push
pop
jge
pop
pop
ds
or
mov
add
nop
cmp
movsb
inc
sarb
mov
imul
fildl
daa
push
rclb
hlt
inc
testl
push
mov
push
add
lret
jne
js
call
sub
pop
movsb
shrl
mov
movsl
xchg
xchg
sub
mov
ficoml
outsl
loop
and
xor
dec
inc
push
adc
int3
mov
lahf
mov
adc
lahf
adc
mov
sub
stc
xchg
lret
loop
sub
pop
dec
ret
test
push
push
add
jbe
and
lcall
ss
jecxz
add
lahf
test
inc
pop
mov
cwtl
sbb
pusha
stos
sarb
pushf
lahf
iret
lret
push
adc
pop
inc
rcrb
loop
clc
int3
jne
push
xchg
sbb
add
sbbb
and
lahf
mov
out
push
mov
inc
rcrb
sub
push
inc
cltd
sahf
add
scas
aas
inc
dec
stos
es
ret
sub
sti
rcrb
and
in
sub
lods
sub
jle
jb
xchg
push
jbe
ss
xchg
jne
mov
jno
cwtl
mov
mov
popa
bound
cvttps2pi
cmp
mov
into
jnp
in
cmp
mov
out
and
push
xchg
pop
pop
jle
dec
jp
dec
lods
sub
mov
mov
pushf
arpl
dec
aas
fistps
out
mov
cmp
or
daa
or
sahf
bound
xchg
gs
bound
xchg
push
xchg
dec
jg
sub
mov
loop
pop
inc
mov
sbb
aad
loope,pn
negl
cs
mov
sti
outsl
enter
jp
jmp
ret
fwait
test
push
in
mov
movsl
out
inc
jl
pusha
mov
ja
out
mov
dec
push
push
addr16
inc
leave
inc
jo
cmp
adc
xor
pop
mov
push
repz
inc
inc
ljmp
out
cmp
xlat
dec
pop
mov
push
insl
dec
push
pop
and
test
push
pusha
mov
lahf
xchg
jp
pop
in
sub
mov
imul
popaw
cmpsl
sbbl
jne
pop
xchg
outsl
out
insl
jge
roll
lea
imul
push
pusha
rolb
rcrl
pop
aad
dec
xor
addb
test
jne
lcall
pop
mov
daa
pop
adc
xlat
adc
xor
add
mov
clc
clc
imull
mov
sbb
data16
lcall
inc
and
push
inc
adc
push
pop
testb
jg
leave
ret
inc
aam
pushf
or
push
jnp
jmp
jge
and
shrl
scas
mov
mov
adc
mov
cmp
jnp
mov
inc
ja
lock
push
xchg
adc
movsb
xchg
loopne
adc
pop
mov
lds
jne
lret
dec
inc
sbb
xchg
jle
ret
add
push
cld
andb
mov
push
ljmp
stos
jbe
push
jecxz
call
xor
insb
sub
mov
popa
mov
in
aaa
ret
jnp
scas
jne
leave
inc
bound
cmp
adc
push
insl
xor
mov
fnstcw
stos
mov
call
mov
int
js
dec
out
mov
mov
out
cmp
jo
mov
in
ret
sbb
mov
pop
cmc
xor
ret
adc
mov
bound
outsb
clc
add
js
movsl
mov
or
outsl
adc
pop
pop
hlt
jmp
test
and
jg
xor
pop
push
test
push
pushf
cmp
cwtl
jbe
add
mov
loope
rolb
xchg
std
in
dec
sub
mov
in
pop
sub
test
push
jl
je
sbb
nop
jne
add
adc
xlat
or
or
or
and
and
cltd
rcrl
pop
mov
subl
jmp
js
fisttpll
cs
push
adc
cmc
lret
xchg
adc
rcrl
jno
xchg
pop
xchg
es
ret
ljmp
mov
shll
jb
push
movsb
jbe
int3
shrb
xchg
mov
jb
into
jne
mov
dec
pop
inc
cmp
sub
jp
test
call
roll
xor
cli
mov
cmp
sarb
push
mov
mov
xor
mov
and
xchg
jbe
mov
call
lock
mov
jns
fbld
xorl
lea
jnp
in
fisttpll
mov
fildl
das
je
andl
mov
xchg
push
popf
imul
lahf
pusha
inc
dec
inc
out
jle
pop
and
stos
lret
cltd
and
sub
mov
inc
mov
jp
jp
dec
sahf
es
nop
cmpsl
loop
das
aaa
fcmovb
int
cmp
adc
adc
repnz
loope
in
mov
ficompl
mov
imull
inc
add
call
shll
aas
shlb
data16
cmp
push
mov
cltd
xchg
push
mov
int
out
mov
jnp
mov
imul
hlt
pop
scas
and
data16
jae
movsb
int3
sub
shl
jbe
jp
jae
jbe
adcl
mov
stc
scas
inc
in
out
mov
or
or
sbb
add
das
cmp
outsl
pop
rorl
cltd
push
mov
addr16
sbb
adc
add
add
stos
and
test
xor
adcb
iret
xchg
in
and
mov
dec
arpl
xor
mov
pop
inc
mov
divb
leave
sub
cmp
int
fwait
adc
faddl
pop
push
insb
repnz
mov
sbb
mov
mov
lods
cmpsl
xchg
test
push
xor
je
cmp
das
rcr
nop
clc
adc
fstpl
jle,pn
movsl
pop
add
loopne
cmp
add
pop
insl
mov
lahf
pop
testb
push
dec
mov
mov
pop
inc
mov
out
jno
cwtl
hlt
cmp
jbe
inc
sti
xor
cmp
aaa
push
or
stos
pop
pop
jp
leave
inc
ficomps
push
loopne
fdivs
xchg
and
inc
sahf
divb
pop
pop
jmp
ds
jbe
dec
push
push
sub
and
ja
addb
mov
dec
mov
lods
jmp
jg
mov
mov
mov
lea
mov
and
scas
ret
aas
dec
aad
js
int
cmpsb
push
arpl
shlb
and
enter
mov
cld
cmp
add
jp
inc
enter
stc
add
xor
loop
add
mov
loop
ret
fxch
dec
int3
data16
scas
rolb
repz
and
cmpsb
mov
sarl
lods
flds
scas
cli
push
mov
jae
ja
xchg
add
mov
outsl
or
fisubrl
shlb
mov
mov
cli
ret
cmpsl
jl
lret
mov
inc
push
lds
add
push
and
pop
xchg
std
clc
jno
cmpsb
or
cmp
push
inc
stc
mov
test
ljmp
xchg
cmp
jno
inc
mov
scas
mov
xor
aas
mov
mov
add
dec
mov
xchg
in
js
xor
sub
dec
cmp
xchg
mov
fdivrl
cli
xchg
stos
js
leave
and
and
mov
call
jge
push
movsl
lds
cmpsb
xor
pop
pop
pop
out
xchg
movsl
or
jb
cmp
or
pop
jo
out
mov
iret
push
repnz
jl
xchg
adc
iret
dec
idivb
jmp
mov
dec
xchg
mov
cs
pop
pop
pop
inc
out
pop
test
and
jle
sti
mov
mov
or
das
and
ljmp
pusha
sub
addb
or
arpl
inc
jle
clc
adc
aaa
adc
cmc
mov
pop
repz
fnsave
xor
imul
push
mov
iret
cltd
leave
mov
adc
or
stc
in
sbb
mov
ret
lods
outsb
pop
push
pop
push
test
orl
pop
mov
dec
jo
xchg
xchg
mov
les
xor
inc
sbb
fiaddl
xor
fisubl
daa
fcoml
xor
jp
popl
stos
and
test
or
daa
xchg
dec
xchg
andb
clc
jnp
test
es
loope
arpl
ljmp
shrl
sub
std
rcrl
lods
push
fdivrp
push
je
mov
lds
je
shrb
nop
pop
repnz
dec
jbe
cmpsb
dec
mov
jecxz
adcl
in
pushf
dec
inc
ficomps
mov
or
das
sti
mov
cmp
js
btc
das
inc
icebp
inc
sbb
xchg
cltd
push
mov
or
xchg
sti
xor
xchg
je
int
cmp
jns
inc
aam
fnstsw
movsb
mov
scas
leave
shlb
cwtl
addr16
xchg
pop
bound
test
push
xchg
pop
pop
sub
pop
cmp
je
movsb
data16
icebp
cmp
ljmp
andl
lods
cmp
dec
leave
mull
aam
das
inc
fld
out
imull
sahf
cmc
incb
xchg
pushl
ret
xchg
cmp
adc
mov
cmpsl
pop
or
push
sbb
rcrb
cmpsl
add
dec
pop
popl
push
out
add
dec
add
dec
dec
das
loope
ret
adc
clc
xchg
arpl
int3
push
movsb
mov
rcll
addr16
pop
test
push
xchg
into
inc
ficompl
int
imul
lds
push
push
or
fisttpl
adc
ja
push
mov
lahf
loope
aad
gs
les
mov
movsl
mov
mov
lds
inc
cld
clc
incb
inc
leave
adc
and
ja
xor
or
mov
pop
dec
lret
out
outsl
addr16
adc
enter
mov
fnstsw
sub
test
xchg
fistpll
mov
mov
mov
inc
shl
test
arpl
mov
test
popf
xchg
sub
out
je
mov
adc
sbb
mov
jmp
cmp
sbb
cmp
popf
in
sbb
lahf
fnstcw
jne
pop
add
shll
sub
push
lds
inc
push
push
lahf
xchg
xchg
xchg
and
and
jbe
std
aaa
sbb
scas
test
call
and
mulb
aas
add
fs
push
push
shrb
dec
jo
lods
and
pop
add
mov
sub
pop
mov
jbe
imul
and
fld
and
inc
outsl
in
scas
in
sub
mov
or
into
or
adc
les
push
test
arpl
adc
mov
mov
ret
adc
stos
pop
cmp
dec
mov
aaa
test
or
dec
dec
or
xchg
enter
mov
jo
pop
push
mov
in
jmp
cmp
loopne
repz
cmp
mov
xchg
pop
loop
and
pop
mov
adc
xchg
xlat
aas
int3
mov
sar
jl
in
jae
std
sub
lret
je
test
push
jb
jp
pop
cmp
inc
add
in
pop
sti
mov
ficoms
pop
jne
popf
sarb
cmpsb
mov
push
mov
cmp
daa
shlb
add
add
pop
pushf
xlat
icebp
movsb
lea
adc
xacquire
lods
dec
fistpll
xor
mov
rcl
ds
adc
push
test
adc
inc
lret
lock
cmpsb
jg
mov
dec
xor
mov
rcl
out
sbb
mov
fnsave
sarl
imul
sbb
dec
rcrl
stc
dec
lods
and
nop
cli
add
mov
cmp
cmp
pop
xlat
daa
lds
mov
inc
fsub
imul
out
fnstsw
out
stc
scas
inc
jns
inc
add
aam
pop
rcrb
dec
dec
mov
xchg
lock
mov
negb
ss
pop
xlat
ja
or
pop
push
fisttps
rclb
jmp
pop
pop
btr
leave
ret
sbb
cld
pop
in
scas
mov
mov
fmuls
ds
push
sbb
xor
int3
pop
bound
enter
mov
mov
das
cmp
push
out
pop
scas
ret
lock
jp
jne
mov
sub
mull
lds
fidivrs
xchg
rorl
dec
cmp
stc
jne
push
lds
mov
add
jbe
outsb
aad
pop
push
movl
faddl
jge
hlt
xchg
aam
leave
popa
test
mov
addr16
inc
and
pop
out
lds
pop
insl
pop
es
push
ret
and
cmp
stc
add
lahf
adc
xchg
fmul
pop
es
jb
mov
jo
xor
inc
je
lea
es
or
les
hlt
insl
cmpsb
add
xor
pop
lods
adc
xchg
push
pop
mov
and
add
iret
addr16
imul
in
cmpsb
cs
sbb
pop
sub
mov
adc
sbb
sahf
dec
push
out
stos
cmp
decl
stos
cmp
pop
push
mov
inc
adc
push
sbb
fidivrl
fidivrs
sbb
out
outsb
jecxz
mov
dec
pop
mov
out
cld
shlb
popa
cwtl
mov
sbb
add
or
daa
mov
sbb
pop
loopne
fwait
xchg
or
int
fsubr
dec
xrelease
cli
push
mov
dec
xor
mov
pop
cmp
add
jbe
pop
es
push
enter
jne
or
lods
push
dec
sbb
int
xor
or
pop
and
jmp
int
pusha
dec
push
dec
outsb
clc
adc
xor
nop
pop
xchg
push
pop
test
movsb
leave
jecxz
mov
jge
push
cmp
cmp
adc
mov
fcompl
int3
sub
js,pt
mov
je
mov
push
mov
and
mov
iret
imul
mov
lds
in
lahf
xchg
adc
lcall
jnp
test
fildl
ljmp
adc
mov
jo
iret
pop
adc
fnsave
and
xchg
xor
psrlq
lahf
xor
adc
arpl
sti
sub
cli
in
push
adc
xchg
xchg
push
mov
mov
arpl
lods
idiv
scas
mov
cs
fisttps
stos
push
enter
ds
mov
xchg
mov
add
and
mov
ror
inc
and
adc
add
add
in
pop
insl
pop
jbe
test
adc
repz
push
bnd
mov
rorl
push
jae
movsb
mov
lock
xchg
xor
mov
sbb
stc
stos
cmpb
add
mov
xor
sti
inc
ret
shll
test
pop
dec
jecxz
scas
fs
push
cmp
jbe
push
jae
dec
popf
out
loope
sahf
fstps
push
pushf
mov
mov
inc
lods
daa
dec
or
test
mov
andb
cltd
iret
mov
cmp
and
mov
icebp
ja
jae
sub
test
fistl
ja
mov
push
xchg
les
push
and
into
mov
mov
je
cmp
rcrl
rorb
cmp
scas
xor
xorl
xchg
mov
cmp
jnp
ret
clc
xchg
jno
sbb
addr16
call
jo
push
test
lret
test
out
mov
js
subl
or
sbb
popa
xor
ret
jo
mov
out
insb
inc
cmp
xlat
jb
jnp
xchg
push
fiadds
das
add
push
imulb
dec
and
js
es
push
lret
jg
cli
pop
fdivrl
hlt
add
pop
xor
sub
sqrtps
or
out
xchg
sub
push
pop
or
aas
push
aad
pushf
push
push
mov
sbb
mov
xchg
sub
mov
mov
sbb
dec
out
mov
rsm
push
dec
icebp
dec
cmp
sbb
xor
lcall
inc
out
aam
int
mov
pop
shr
pushf
test
fs
jl
jne
mov
mov
mov
out
sbb
test
pushf
bound
adcb
push
mov
sub
mov
loope
xchg
cmp
in
cltd
mov
outsb
aad
jl
sub
sub
in
jge
pop
ret
add
sbb
sarl
push
or
icebp
sbb
pushf
cmp
mov
xchg
xor
popa
adc
or
xor
and
cmp
ret
jg
xorl
push
jl
popf
in
or
rcrl
add
das
sub
cmp
inc
sbb
faddl
mov
fldln2
cwtl
mov
leave
add
lret
out
push
les
xor
sub
test
std
mov
mov
dec
scas
lock
lds
pop
and
jnp
loopne
mov
cmp
adc
loop
cld
push
mov
mov
push
movsl
lds
sbb
cmp
adc
sbb
pop
fnsave
fldt
lods
insl
and
jge
bound
scas
insb
aaa
maxps
adc
faddp
push
xchg
adc
cmp
stos
scas
int
mulb
js,pn
push
and
push
movsl
push
xchg
sub
mov
xchg
adcb
or
jo
and
scas
aaa
lahf
sbbb
clc
adc
inc
cltd
pop
and
lret
insl
sub
jge
mov
sbb
loope
push
outsb
add
push
ds
aas
adc
cltd
lea
add
jp
out
mov
aad
inc
jecxz
jns
mov
ja
leave
ja
inc
clc
fstps
cmp
sar
sbb
xor
dec
ret
sbb
pusha
imul
dec
sub
lret
xor
jle
lea
sbb
push
fisttpl
push
dec
int
pop
push
pusha
fdiv
jne
xchg
loope
jl
sub
pop
or
dec
xchg
orl
js
rorb
mov
ret
jp
mov
lds
decb
aaa
xchg
xor
sbb
cmpsb
outsl
add
pushf
imul
add
stc
sub
add
daa
dec
sbb
out
jne
das
shrb
xlat
mov
dec
out
sbb
insb
cmpsl
or
negl
movsl
fs
mov
ja
lods
jb
fidivs
lds
mov
xor
test
jnp
hlt
sub
int3
lret
push
sti
fsub
pop
adc
xchg
pop
sub
xchg
and
inc
sti
mov
out
rolb
out
sbb
sbb
and
mov
and
pop
fimuls
push
adc
mov
lods
and
jno
mov
or
mov
cmp
into
mov
cmp
cmp
nop
fbstp
jae
add
pop
add
cld
jbe
pop
fsubs
stos
add
xor
pop
adcb
lret
pop
arpl
mov
cmp
dec
inc
sahf
data16
test
es
insl
or
inc
xor
les
push
and
xor
inc
data16
add
out
or
add
mov
add
mov
pop
imul
fwait
inc
push
push
scas
and
push
push
add
cmp
pop
pop
jb
orl
iret
nop
mov
push
mov
aaa
cmp
and
loope
dec
sbb
enter
xor
data16
push
movsb
int
cli
imul
mov
sbb
std
inc
push
stc
sub
das
inc
or
rclb
adc
adc
pop
adc
js
enter
lea
mov
sysexit
sbb
out
push
pop
in
scas
mov
fldt
sbb
out
push
inc
pushf
sbbl
jne
sarb
push
popa
jnp
lahf
mov
push
inc
dec
xchg
das
test
add
push
jb
pop
xchg
mov
cld
das
or
adc
fisubs
out
orb
cmp
ja
lret
mov
jl
mov
pop
loop
mov
cld
adcl
lret
mov
fwait
loopne
fistpll
sub
mov
xor
mov
pop
loope
loopne
es
test
lock
add
jge
das
inc
mov
add
pop
mov
icebp
out
push
mov
sti
ja
jno
pop
lods
add
add
add
and
xchg
pop
movsb
imull
lea
ss
push
ret
shll
mov
sub
jne
lock
pushf
fwait
or
mov
cmp
fcmovu
test
mov
jl
pop
vmovsd
pop
jl
add
pushf
pop
and
adc
lahf
mov
ja
enter
dec
xor
movsb
push
mov
lods
adcb
jge
jns
mov
leave
adc
fldt
lds
dec
pushf
decb
dec
inc
arpl
shlb
pop
sub
adc
sub
enter
or
xlat
pop
ljmp
sub
dec
clc
add
push
pop
sbb
cmc
test
pop
jbe
add
arpl
jmp
dec
dec
mov
pop
push
hlt
scas
xchg
xchg
ds
pop
repz
pop
cmp
pop
adc
mov
mov
scas
out
es
pop
or
lea
or
das
sbb
pop
ljmp
mov
shr
mov
or
jge
insb
scas
lods
js
das
push
jno
inc
and
inc
inc
jmp
mov
mov
sahf
nop
adc
sahf
fldcw
insl
push
sti
inc
pushf
loope
test
push
test
cmpb
xor
mulb
lods
ja
add
pushf
mov
add
sub
call
pop
fdivrs
es
pop
xchg
mov
cmp
pop
adc
xor
ds
sbb
repnz
dec
sub
fbld
sti
and
xchg
mov
dec
sbbl
pop
inc
sahf
cs
cmp
es
and
xor
mov
mov
xor
push
lahf
mov
lahf
daa
mov
gs
ret
sbb
sahf
jl
pusha
shrb
subl
add
dec
in
push
aam
sub
pop
nop
and
xchg
adc
scas
jbe
cmp
call
add
lcall
push
movsb
xchg
lcall
sbb
arpl
aam
and
add
mov
mov
jl
adc
es
mov
inc
in
xor
shrd
add
adc
int3
das
and
enter
xchg
or
or
xor
pop
gs
and
mov
iret
xchg
add
lods
test
lcall
mov
int
aaa
out
cmpsl
loopne
xor
xor
loop
in
clc
jp
mov
cmp
test
imul
stos
sbb
dec
cltd
cmc
stos
shl
test
adc
popa
subl
lods
ficompl
dec
out
sub
test
adc
cmp
fisubl
lds
repnz
cmp
mov
jo
cld
mov
xchg
in
push
sub
pushf
shlb
jmp
pop
mov
repnz
sahf
fwait
mov
jb
nop
push
sti
out
and
pop
fsubl
jb
push
lret
pop
mov
sub
outsb
mov
outsb
sbb
push
pusha
call
cmpl
dec
aas
push
idivl
xchg
and
cltd
pop
mov
pop
xchg
popa
dec
out
mov
mov
dec
les
add
outsl
jge
and
mov
mov
int
sbb
push
adc
or
pushl
adc
aaa
outsl
and
adc
stc
call
and
das
jo
add
das
das
pop
pop
add
and
inc
pop
xlat
push
or
cmp
jne
aas
inc
out
add
jnp
frstor
adc
cs
jns
dec
sbb
jae
xor
out
and
aas
sub
out
loope
gs
xor
int3
inc
jg
shlb
jo
lcall
jo
jbe
ss
push
dec
and
in
mov
inc
js
dec
push
sarb
loopne
mov
sbbb
cli
out
outsb
push
or
adc
int
daa
adcl
or
les
ret
sub
in
pop
mov
cmpsb
fbld
in
inc
popa
cmp
iret
in
dec
xchg
jp
add
adc
lea
insb
mov
xchg
mov
and
sti
xchg
lcall
mov
mov
sub
movsl
addr16
insb
lock
and
in
lods
in
movsl
fdivs
test
daa
jmp
loop
jnp
sub
add
scas
icebp
repz
sub
mov
daa
gs
jmp
fwait
imul
inc
jbe
adc
lock
pushf
push
cmp
jne
out
lret
in
mov
repnz
ljmp
pop
pushf
push
movsb
pop
jmp
mov
and
sbb
or
lea
shll
pop
ja
ret
sub
fisubrl
dec
mov
cmpsl
nop
imull
and
mov
bound
xchg
cmpsl
movsb
pop
hlt
add
shrl
iret
adc
es
popa
push
push
lfs
lret
jb
dec
dec
xchg
and
cmp
sub
mov
ds
enter
jg
pop
ljmp
dec
imul
jmp
mov
sub
add
movsl
fucomp
cld
mov
inc
add
mov
mov
cwtl
test
pop
clc
push
cmpsl
or
add
imul
in
pop
cmp
adc
sbb
push
testb
scas
cmp
test
dec
popa
addr16
sub
gs
popa
xor
movsb
shll
sar
fmuls
hlt
inc
loope
add
hlt
rol
sbb
sbb
cmp
inc
or
mov
mov
std
icebp
movsl
cld
jno
push
fiaddl
jp
sbb
flds
pushf
pushf
mov
mov
push
ret
test
jb
xor
mov
std
fistpll
push
sbb
lret
lahf
sbb
jae
fimull
push
ss
and
push
std
int3
or
and
je
mov
lcall
jbe
rolb
repnz
xchg
sbb
lock
jmp
or
test
sub
icebp
mov
xor
mov
add
mov
das
das
lock
ja
adc
addl
cmpsb
fnstsw
into
insl
out
iret
dec
outsb
shll
mov
lea
fcmovb
adcl
or
mov
lea
sub
xchg
mov
mov
sbb
add
xor
dec
sahf
cmp
add
sbb
xchg
leave
fldenv
inc
push
xor
adc
movsb
lods
scas
xchg
icebp
cltd
push
loopne
hlt
push
test
fisubl
mov
js
jg
js
adc
fadd
lods
loope
cmc
movups
fnstcw
shll
test
or
and
mov
push
mov
push
mov
lcall
mov
dec
jno
imul
popf
xchg
xchg
xor
test
inc
movswl
jnp
insb
mov
sahf
xchg
or
cmpsb
add
shrb
std
leave
test
out
lret
shl
popf
and
xchg
pop
mov
cmp
cmp
shll
cs
insb
push
imul
lahf
or
add
cmc
mov
sub
nop
es
sbb
mov
pop
jns
ret
xchg
and
fnstcw
test
je
in
out
adc
push
call
stos
aas
sub
xor
pusha
and
mov
imul
jnp
or
fdivrp
dec
jmp
lods
lcall
xchg
test
fimull
and
dec
in
pop
fwait
sbb
mov
jmp
fidivl
arpl
jo
push
shlb
xchg
lds
ss
in
lret
into
cli
jl
cmpsb
shrl
xor
shlb
out
pop
movsb
jp
cmp
out
lock
leave
and
addr16
xchg
xorps
xchg
lods
mov
mov
ds
fcoms
repz
inc
out
in
sbb
iret
sti
repnz
outsl
mov
daa
shrl
std
nop
add
jl
fisubl
clc
and
lods
mov
hlt
or
jl
and
into
cmpsb
inc
mov
test
scas
cmp
xor
add
mov
ja
push
lret
std
ret
jl
iret
mov
fbstp
pusha
adc
jne
inc
adc
dec
pop
addr16
roll
mov
and
fadd
jle
hlt
or
or
adc
mov
mov
cmp
sub
jmp
scas
repnz
out
push
in
into
fcomp
lea
mov
sbb
nop
stos
cmp
sahf
adc
cld
data16
call
ja,pt
ret
xchg
and
int3
mulb
cli
lds
sbb
inc
mov
rol
and
sbb
mov
leave
cmp
sub
mov
xchg
std
loope
aaa
xor
scas
dec
mov
xor
push
jne
cmpsb
cmp
int
or
addr16
mov
aad
fildll
test
lods
xor
sub
in
daa
bound
cmp
movb
xchg
test
daa
aaa
xchg
adcl
pop
adc
inc
test
jne
movsl
mov
adc
dec
mov
pop
push
test
mov
dec
jge
addl
mov
and
fwait
adc
movsl
mov
out
mov
shl
add
aad
or
stos
addr16
mov
push
aad
jmp
cmp
jno
push
lahf
enter
dec
xor
insl
cmp
in
stc
or
push
fwait
std
mov
jp
out
adc
jne
adc
and
xchg
dec
outsb
insb
mov
in
push
es
in
inc
inc
fildl
negb
int
mov
jae
inc
lret
and
pop
push
push
cmp
arpl
jns
frstor
dec
aas
addr16
push
mov
adc
mov
inc
ja
dec
inc
data16
out
mov
add
insl
jno
test
notb
ss
add
pop
cmp
push
mov
movsl
lea
bnd
xor
pop
mull
push
pop
lock
lret
push
subb
push
cltd
ljmp
pop
lret
ljmp
outsl
pmaxsw
test
inc
aaa
stc
pop
cld
out
jb
xorl
mov
movsl
daa
dec
pop
movsb
test
in
adc
inc
loope
sub
push
and
push
add
clc
push
notl
pop
inc
insb
rcll
popa
jmp
leave
lds
aam
sti
jmp
inc
adc
notb
xchg
cmp
sbb
sarl
or
xchg
mov
mov
or
ficoml
jb
fbstp
inc
les
rorb
rorl
out
sub
pop
fprem
lret
into
push
push
add
andl
loope
je
cld
and
aad
insb
data16
jno
fistl
mov
lods
shll
cs
loope
cmc
ret
cmp
pop
popf
mov
cmp
shll
fsubl
mov
inc
mov
sbb
outsb
dec
shrl
or
jne
jp
xor
ljmp
or
stc
mov
insb
or
pop
inc
out
lcall
pop
adc
push
mov
jecxz
fisubrs
and
mov
mov
xchg
dec
in
pop
jnp
es
mov
adc
or
sbb
not
int
daa
lret
mov
call
adc
scas
dec
cmp
stos
hlt
fimull
pop
push
nop
pop
mov
xor
mov
pop
mov
or
dec
adcl
push
jle
dec
pop
sbb
nop
mov
adc
leave
push
dec
repnz
and
jno
test
shll
mov
popa
xor
xchg
push
testb
push
pop
and
inc
push
cmp
push
mov
push
pop
mov
or
inc
shlb
imul
sti
daa
sahf
adc
fadd
lcall
add
dec
imul
cmc
lret
fadd
addr16
adc
loop
les
cmpsl
mov
cmp
xor
aas
jge
push
cs
fsubrl
push
lcallw
call
or
cmp
std
lret
xchg
and
sbb
in
inc
ds
cmpsl
pop
or
push
push
add
cmp
dec
scas
daa
rep
cmpsl
cltd
push
fst
and
out
scas
fwait
lret
jg
add
repnz
sbb
pop
xlat
push
sub
and
cmp
nop
sbb
or
rorb
loopne
dec
gs
lods
lret
fisubrs
mov
or
adc
nop
add
jp
xor
mov
dec
gs
rol
inc
in
test
aas
jns
push
inc
ljmp
mov
repz
adc
inc
mov
mov
push
xor
push
stos
inc
push
pusha
mov
popa
cmpsb
sub
xchg
dec
stc
lods
stos
or
or
pop
dec
xor
push
jmp
int
or
sub
ret
rcrb
sub
cmp
sbb
dec
in
int
dec
xor
dec
mov
push
stos
and
lock
scas
pop
sub
mulb
ficompl
sbb
xchg
popf
xchg
popa
mov
inc
push
sbb
push
sub
pop
push
subl
mov
sbb
mov
xor
ds
and
call
sub
test
xor
lea
insl
pop
inc
fwait
xchg
and
inc
in
cwtl
mov
addr16
icebp
shll
rorl
dec
adc
push
movsb
out
xchg
mov
call
sub
push
popa
xchg
lea
adcb
xor
es
fdivrs
cld
jg
dec
xchg
shll
fdivp
inc
outsb
out
repz
sub
int
inc
test
jle
and
pop
lahf
push
aam
add
mov
insl
pop
jo
fldt
push
sti
les
jl
addr16
push
sbb
outsl
mov
das
arpl
movsl
adc
lods
jne
inc
dec
icebp
pop
sub
jns
arpl
pop
dec
aaa
jo
nop
popf
pop
arpl
mov
mov
cli
adc
into
xor
repnz
shlb
rorb
sti
and
sbb
sub
ret
push
and
fistpl
scas
xchg
aad
sbb
jno
adc
fnstsw
cmpsl
sarb
mov
cmp
dec
and
out
fmuls
mov
jmp
es
fs
popf
test
sub
stc
or
mov
cli
test
cltd
js
cmp
les
mov
rep
shrl
bound
addr16
mov
xchg
push
sbb
movsl
and
enter
mov
lods
mov
jb
std
mov
fcmovnbe
insl
sub
add
jne
xor
sbb
in
lods
outsb
xlat
pop
or
adc
lds
test
jge
or
dec
push
cld
cmp
adc
jle
nop
daa
sti
pop
xlat
pop
rcrl
cwtl
xor
pop
jbe
sbbb
add
mov
adc
insb
pop
arpl
sbb
xor
push
xor
xor
into
movsl
dec
adc
sub
dec
sub
rolb
sub
sub
xchg
or
bound
push
xchg
adc
jno
sub
repnz
lods
mov
xchg
out
and
add
stos
shl
stc
outsl
mov
popf
fiaddl
mov
mov
mov
pop
imull
mov
cmpsl
push
cmp
mov
out
aas
flds
mov
fstps
imul
scas
loop
shll
add
test
jae
outsb
xchg
movsl
pop
jo
pop
mov
loop
push
gs
jno
addb
push
cmp
mov
aad
inc
out
es
lods
js
jle
xor
sahf
gs
jne
dec
pop
mov
pop
shll
testb
xchg
mov
pop
je
lods
mov
out
outsb
stos
test
cmpsb
fsubrp
inc
and
sbb
adc
inc
arpl
mov
lahf
cs
mov
das
sbb
and
adc
les
popa
xchg
and
cld
cltd
daa
push
and
lret
mov
das
sbb
cmp
lret
or
sti
add
mov
ficomps
hlt
cld
inc
cmp
pushf
dec
es
aad
mov
je
pop
cltd
mov
xor
addr16
push
xchg
pop
gs
in
push
mov
gs
clc
jnp
and
push
xchg
outsl
xchg
mov
fs
fs
dec
lsl
fsubs
sahf
cmp
addr16
lret
pusha
dec
ljmp
pop
out
fldt
repnz
shl
add
outsb
roll
test
pop
inc
xchg
jge
icebp
cltd
sub
pop
jl
popf
cmp
cmp
lods
test
sub
jnp
sbb
push
call
sti
movsl
dec
jne
xor
inc
iret
insl
in
out
pop
aaa
cmp
xor
inc
sub
js
aam
call
dec
bound
int
fadds
ret
fists
dec
add
pop
pop
dec
test
inc
lock
sbb
jp
or
jecxz
orl
in
mov
idivl
popa
cwtl
cmp
fcompl
dec
lret
in
jp
orl
xchg
mov
in
inc
cmp
js
jo,pn
orl
mov
or
mov
cmpsl
xchg
sbb
das
xor
push
inc
test
inc
push
mov
pop
lock
cmp
and
int3
mov
addl
mov
lcall
cmp
push
repz
outsl
pop
js
inc
inc
mov
je
pop
adc
lret
cmp
jmp
and
sbb
ja
test
icebp
or
ja
mov
lods
test
mov
and
stos
pop
outsl
xor
incb
jae
les
mov
xor
mov
cmpsb
cli
push
test
xor
and
sarb
inc
nop
cmp
and
push
cld
push
scas
pop
jecxz
jg
dec
xor
fisttpl
jb
mov
push
andl
es
iret
out
test
test
jge
mov
mov
sarl
add
and
call
cli
jo
adc
imul
push
jmp
stos
test
sub
ficoms
jb
sub
test
push
cmpb
inc
fadds
cmp
gs
xchg
roll
data16
test
sub
push
xchg
frstpm(287
pop
movsb
ds
inc
fcoml
leave
test
lea
jecxz
or
insb
inc
nop
adc
fstpt
sub
cli
test
into
pop
xlat
std
xchg
loope
adc
negb
insl
ret
fdivr
lret
inc
repnz
xor
sarb
dec
jle
mov
xchg
sub
fistpll
sub
inc
sub
jecxz
ja
mov
mov
in
lods
pusha
int3
add
insl
pushf
dec
popa
jecxz
fdivl
mov
add
stos
and
dec
adc
gs
inc
or
not
cli
popf
push
adc
xorb
push
out
sarl
daa
clc
rorl
lret
pop
aam
insl
imul
lds
addr16
cmpsb
xchg
out
mov
outsl
pop
imul
out
cs
shrb
sub
pop
xor
xchg
push
les
in
andl
and
hlt
jno
mov
leave
pop
ds
data16
mov
and
mov
cmpsb
mov
xchg
js
ret
sub
idiv
daa
dec
mov
aaa
lret
movsb
pop
jmp
decb
aas
push
mov
call
cmp
cmc
push
and
movsb
dec
lcall
ret
daa
sarb
sarb
mov
push
sbb
leave
outsb
inc
test
xor
fsubs
lret
in
das
daa
pop
cmpsb
inc
sahf
pop
push
popf
nop
int
sbb
adc
pop
fisubrs
push
lret
pop
mov
cmc
jecxz
mov
ja
or
adc
mov
cs
out
push
and
lea
fs
js
sub
mov
popf
jecxz
aaa
ljmp
jns
pop
mov
dec
inc
sbb
jg
adc
cmp
mov
push
mov
sbb
int3
out
inc
xchg
cmp
push
inc
mov
sbb
nop
and
xchg
pop
cmc
hlt
xchg
in
pop
jle
xchg
cltd
repz
or
mov
shr
mov
insb
jmp
pop
xchg
int3
adc
sbb
cmp
call
scas
dec
cltd
adc
cmp
add
push
mov
dec
or
and
pop
sysexit
out
and
inc
pop
xchg
pop
cmp
scas
ret
inc
int3
sbb
cmpsb
xor
cmc
test
pop
popa
scas
ja,pt
mov
popa
adc
or
cs
incb
cmpsb
xchg
sahf
sbb
sbb
dec
adc
jo
stos
aam
mov
mov
out
cmp
jmp
pop
or
jb
int3
cli
mov
sbb
xchg
push
mov
dec
lods
shl
dec
rorb
xor
lods
pop
add
mov
jb
loopne
fadds
xchg
imul
cmp
leave
rcll
dec
sbb
xchg
or
push
xor
movsl
das
cli
mov
sahf
stos
or
or
mov
cs
call
hlt
out
jne
jnp
sub
xchg
roll
push
add
aam
cvttps2pi
xchg
nop
pop
pushf
rcll
cmp
mov
sbb
xchg
mov
pop
rolb
test
popa
fstps
jecxz
sbb
and
and
sub
lahf
and
pop
pusha
mov
adc
scas
pop
dec
push
loopne
mov
addb
adc
mov
cmp
mov
cmp
mov
lcall
test
sub
xor
sbb
jg
xchg
fwait
dec
dec
and
ss
ja
xchg
call
sti
sti
mov
cmp
dec
mov
out
ja
add
nop
mov
insl
and
lods
lret
roll
arpl
mov
fs
out
hlt
cmc
mov
ljmp
xchg
push
jecxz
jmp
push
ret
movsl
pushf
mov
push
jle
push
mov
or
inc
fsub
mov
aaa
sub
je
in
adcl
add
pop
add
fiadds
test
jmp
xor
cmp
cmp
shrl
daa
push
insb
mov
stc
ja
loop
scas
jecxz
fsts
loope
xor
enter
mov
hlt
aam
sbb
jae
sub
cmp
shll
cmp
js
lcall
dec
clc
mov
movsb
mov
and
sarl
cmc
lods
xchg
mov
fwait
insl
scas
test
in
pushf
push
divl
insb
dec
mov
leave
leave
sub
aas
test
cli
add
cmpsl
lods
push
bound
pop
mov
adc
xchg
xor
insl
stc
outsl
cmpsb
in
inc
adc
sub
mov
inc
mov
outsl
rorl
js
hlt
adc
loope
push
subb
xchg
stos
mov
ds
add
jmp
movsl
jp
faddl
mov
xchg
or
jns
test
pushf
sarb
adc
outsl
aad
mov
inc
adc
sbb
dec
mov
bound
sbb
sbb
mov
cmp
sbb
neg
pop
ret
jb
lret
jl
cs
sar
jno
push
add
ret
xor
fistps
xchg
popf
jle
aaa
outsl
mov
and
sbb
adc
subb
and
mov
dec
xlat
mov
mov
gs
mov
scas
loop
in
sbb
repnz
pop
mov
out
movsb
addr16
lds
or
mov
fcoms
dec
int
fstps
xchg
adc
sbb
xchg
lea
hlt
cmc
mov
int3
lret
movsl
sti
clc
xlat
push
dec
adc
mov
icebp
stc
mov
xor
adc
outsb
jg
or
mov
out
mov
out
inc
ljmp
nop
dec
sub
rorb
mov
cmp
inc
or
push
insl
cld
push
pop
fisttpll
adc
xchg
inc
sbb
and
mov
stos
call
aad
test
jp
pop
lcall
adc
fisttpl
loop
add
xchg
mov
es
je
mov
out
mov
push
inc
adc
js
and
rorl
fldenv
adc
push
lods
push
shll
dec
popa
and
cld
xchg
int
data16
pushf
addr16
aaa
adc
mov
xor
fmull
test
cli
out
std
xor
sub
fnstcw
movsb
push
sub
mov
fistpll
stc
fcomip
mov
mov
sub
out
add
jge
ljmp
lcall
cltd
loopne
ret
jbe
repz
xor
mov
mov
sbb
dec
pusha
sbb
pop
xor
mov
jg
popf
les
pushf
xlat
cmp
mov
jbe
daa
mov
inc
insb
cwtl
xor
cmp
mov
pop
stc
push
xor
inc
packssdw
pop
sti
mov
push
pop
xchg
mov
rclb
jns
xor
pop
es
inc
sub
mov
and
mov
stos
fucomip
cmp
push
dec
fdivrl
push
or
pop
addb
and
mov
mov
jecxz
add
dec
xchg
pop
xchg
inc
enter
test
ds
push
insl
fucomp
jge
push
cmpsl
fistpl
das
add
in
ss
das
and
push
cmc
stc
aam
sti
cmpsl
test
inc
mov
push
mov
push
xlat
xlat
jmp
pop
and
orb
pop
in
mov
arpl
adc
jns
test
add
fs
and
and
jp
leave
es
mov
pop
cs
aam
pop
outsl
sbb
and
cmp
jno
mov
popf
pop
pop
andb
xchg
adc
aaa
cs
mov
dec
in
test
fnstcw
xor
nop
lea
cmpb
dec
clc
iret
or
mov
adc
pop
cld
outsb
sahf
sub
mov
push
xchg
cmp
mov
cwtl
aas
dec
sub
cmp
fwait
lods
ret
sarl
aas
mov
xlat
and
es
inc
lcall
jns
mov
movsl
xchg
push
les
int3
or
inc
shll
cmp
cmc
fimuls
cli
mov
add
push
cs
xor
inc
or
cmp
or
nop
outsb
xchg
sub
ljmp
imull
rcrb
sub
pusha
les
outsl
xlat
cmovae
inc
adc
mov
push
jnp
or
insl
sbb
lea
mov
fidivrs
cmp
test
loop
inc
mov
clc
rorl
sub
push
push
cmp
push
ret
shl
mov
and
dec
fs
push
pop
arpl
dec
insb
popf
aas
test
outsb
inc
mov
pusha
std
jns
sbb
xor
mov
mov
mov
add
or
je
sarl
cmp
adc
push
cmp
inc
mov
fildl
in
repnz
pop
cmp
push
xor
out
scas
lods
adc
dec
nop
add
aad
cmp
mov
scas
into
sbb
cmp
pop
ja
xchg
mov
cmpl
or
add
mov
scas
insb
xchg
dec
fbld
andb
repz
in
mov
xorb
and
or
push
in
into
not
push
adc
adc
adc
sub
or
xor
mov
popa
or
aas
sahf
fisttps
jne
push
xchg
pop
out
inc
and
sub
lret
mov
ret
mov
ret
or
aaa
xlat
lret
inc
mov
cmp
out
mov
in
aas
aad
cmp
test
mov
jmp
mov
aam
movsl
add
andl
test
into
aaa
jl
mov
fistpl
es
mov
pop
or
push
or
scas
clc
cs
fiadds
push
incl
mov
stos
imull
fs
das
or
xchg
fwait
xchg
call
adc
adc
pop
pop
cmovge
xor
sub
orb
mov
mov
xchg
lret
push
push
loopne
insl
mov
xor
jns
notb
jne
inc
dec
mov
testl
push
popf
inc
test
mov
ret
cli
jg
xchg
mov
int
imul
cmp
outsl
mov
mov
fldt
push
enter
es
push
pushf
and
xchg
in
push
inc
cmc
es
add
lock
loop
pop
iret
out
pushf
lret
and
fbld
addb
dec
push
icebp
je
iret
inc
daa
lods
loop
icebp
dec
pop
subb
fcmovnbe
jecxz
sbb
ret
out
xchg
mov
lods
mov
dec
repz
enter
aad
jmp
cli
ret
xchg
gs
test
cmc
mov
test
sbb
mov
pop
arpl
push
sub
mov
shlb
iret
mov
loop
lret
xchg
jo
int
lds
push
pop
add
cwtl
pusha
jbe
ss
icebp
sahf
orb
das
addr16
in
iret
cmc
push
stos
xor
into
mov
nop
imul
pop
in
adc
xchg
pusha
jl
icebp
hlt
pop
fnsave
faddp
mov
test
mov
and
loope
or
dec
add
jecxz
stc
push
dec
wbinvd
mov
sub
dec
enter
arpl
lret
mov
outsl
inc
add
adc
adc
movsl
jns
sub
enter
jp
jb
test
jmp
mov
mov
mov
insb
xchg
cmp
dec
mov
sub
adc
dec
add
dec
ret
pop
inc
cwtl
and
mov
xchg
scas
loope
popf
xchg
lea
push
pop
jno
mov
shlb
cmp
inc
or
aam
iret
xchg
in
in
cmc
xorb
sahf
mov
jne
cmp
imul
out
cmpsl
and
mov
sbb
push
xor
cmp
mov
nop
mov
stc
loope
and
pop
sub
rcr
jae
lcall
pushf
jge
adc
rol
mov
and
js
stos
jmp
sbb
cltd
aaa
into
jb
pop
out
add
or
or
ljmp
jae
sbb
std
lea
mov
add
std
xchg
sbb
sbb
outsb
push
xchg
and
stc
daa
mov
pop
mov
ljmp
sub
jne
push
mov
lds
loope
insl
mov
lock
sti
jp
dec
adc
push
sbb
lcall
or
mov
sub
pop
cmpsl
mov
or
inc
insl
ljmp
rcr
mov
sarl
mov
test
popa
in
jo
mov
stc
ss
fprem1
ret
mov
out
push
mov
adc
push
pop
lahf
xor
adc
jl
lock
out
inc
mov
sub
jge
dec
ret
sbb
cmp
cli
test
jle
test
out
pop
add
cmp
adc
xchg
out
sbb
les
shll
xor
inc
lret
sub
cmp
adc
cmp
out
adc
jp
cmp
adc
imul
adc
mov
pop
add
mov
sahf
fistpl
mov
ljmp
pop
add
fwait
popa
sbb
adc
pop
nop
add
mov
mov
add
inc
aad
xor
ljmp
in
or
dec
cld
ficoml
pushl
int
aaa
stos
jl
add
outsb
test
repz
loop
mov
dec
into
pop
in
pop
cs
data16
inc
inc
jo
fsubl
fcomp
mov
mov
add
sub
lret
andb
fists
or
lcall
pop
cld
inc
dec
cs
inc
cmpsl
fnsave
dec
adc
sbb
sbb
pop
in
pushf
jmp
push
dec
inc
sbb
add
sarb
add
sti
jg
push
leave
pusha
mov
jnp
leave
loope
jle
cld
test
imul
adc
cli
mov
iret
pop
aam
cld
push
insl
mov
rorl
pop
xor
testb
pop
test
mov
adc
fistps
iret
out
ret
aad
mov
bound
in
add
sbbb
lcall
out
fs
testb
js
in
loopne
out
mov
loope
push
in
in
cltd
lret
stc
shrl
fnstenv
lods
ds
xchg
in
rorb
hlt
enter
adcl
jp
xchg
mov
ss
xlat
hlt
je
jno
push
adc
int3
imul
inc
xor
cmp
mov
test
fwait
mov
xchg
push
mov
sti
outsb
nop
loopne
or
daa
jl
dec
xor
inc
jno
popl
xchg
pushf
cmpsb
inc
fwait
cmpsb
mov
call
inc
jl
aad
fs
mov
mov
dec
rcl
cmpsb
cmp
push
jae
and
ss
lahf
cmc
xchg
add
movsl
imulb
adc
xchg
pop
jp
lcall
jp
shlb
fadds
repnz
cmpsb
push
scas
mov
hlt
cmp
mov
add
pop
faddl
and
xchg
loopne
jl
arpl
ja
std
push
bswap
pop
xchg
cwtl
cmpsb
imul
adc
and
push
repz
and
push
cmp
repz
insb
test
pop
imul
jmp
nop
inc
ficoml
cmp
add
filds
dec
cmp
cmp
dec
iret
xor
clc
xor
clc
imul
daa
mov
cltd
movsl
cmp
xchg
stc
dec
jo
and
sub
outsl
jge
popf
nop
pop
inc
ljmp
aaa
mov
adc
or
lods
clc
adcb
jns
out
push
std
fwait
pop
mov
xchg
lock
dec
adc
push
lods
shlb
sub
push
iret
sbb
shrb
pop
shll
hlt
mov
lahf
enter
pop
jmp
fnsave
inc
push
data16
pop
xor
test
pusha
dec
lret
insb
in
fmulp
fsubrs
pop
das
icebp
int3
lcall
pop
pusha
pop
bound
xchg
loope
rorl
call
in
jns
and
mov
lock
in
mov
sbb
mov
jnp
daa
shlb
addr16
jnp
sbb
jne
mov
inc
sub
pop
mul
call
mov
lods
or
jle
insl
dec
jne
xchg
dec
sbbl
popa
xchg
dec
das
je
push
xorb
adc
mov
push
hlt
movsl
mov
enter
pop
adc
shrl
jbe
ficoms
jo
jp
int
cmpsl
push
inc
cmp
es
jg
pslld
or
mov
inc
repz
mov
mov
sub
clc
fimull
outsl
testb
shrb
mov
scas
sbb
in
jecxz
mov
or
test
pop
mov
clc
push
cmp
sub
daa
ret
push
push
pop
add
pop
adc
add
xlat
xchg
jmp
mov
fbld
xchg
xchg
out
or
dec
sbb
push
lret
in
xchg
repnz
test
in
nop
mov
jecxz
mov
dec
xchg
in
js
cmovo
dec
pusha
shlb
test
filds
pusha
sub
push
jecxz
fnstsw
or
inc
ja,pn
or
out
adc
dec
pop
push
ret
sub
push
in
cltd
lahf
fidivl
aas
nop
xor
mov
xchg
mov
mov
clc
outsb
aas
add
cld
jmp
xchg
jp
ds
jecxz
ret
push
sub
push
cmp
add
cwtl
negl
std
mov
push
aaa
add
xor
cmpl
dec
psrlq
sbb
dec
loop
incb
jp
dec
mov
test
lods
dec
pop
push
sbb
add
mov
jo
fimuls
jbe
adc
adc
sahf
sbb
inc
dec
outsl
dec
and
nop
push
fcmovne
mov
or
cmp
shrb
cmp
jmp
mov
ret
cmpsb
fdiv
add
ficompl
stos
cmp
pop
and
push
fwait
pop
push
lahf
cmpsb
mov
or
sbb
jmp
sub
xchg
ret
loope
cmp
add
push
cli
scas
sarb
orb
ja
aam
xor
inc
rolb
out
adc
or
xor
loopne
xchg
sahf
loope
pop
ja
cld
int
push
ja
shlb
sbb
push
movsw
mov
sub
mov
shlb
jb
or
inc
jp
mov
xor
sahf
pop
jae
leave
sub
xor
test
jb
jecxz
mov
jae
pop
fisubrl
bound
dec
ja
std
inc
popa
jb
enter
inc
les
cmp
xchg
mov
mov
pop
shrd
inc
xchg
test
jb
add
push
daa
cli
mov
dec
jno
sbb
xor
bound
inc
stc
jbe
sti
fistl
imul
fiadds
addr16
fnstsw
ljmp
cs
cmp
dec
dec
sub
cmpsb
bound
mov
sbb
inc
mov
stos
push
sbb
in
adc
and
lahf
gs
pop
jnp
jo
mov
insb
push
cs
lock
fdivr
push
xchg
add
fcom
pushf
xchg
sti
addl
push
push
pop
jb
push
in
cmp
adc
aam
mov
mov
pop
xor
pop
sbb
add
sbb
add
mov
jp
xor
aam
dec
inc
movsl
add
arpl
movsb
iret
imulb
pop
and
or
test
fwait
lods
jne
pop
mov
popa
enter
jno
hlt
lcall
loope
xchg
outsl
je
ror
mov
or
popa
pop
leave
mov
dec
or
test
mov
fdivrl
testb
icebp
orl
dec
xchg
rorb
push
xchg
ret
cmp
aad
out
movhps
mov
push
jle
cmp
movsl
ss
shlb
int3
jo
in
cmp
push
ss
inc
xor
adc
adc
jnp
lds
ss
testb
mov
in
loopne
pop
mov
xchg
sub
aad
and
popa
mov
in
jne
sub
arpl
add
push
ljmpw
daa
or
in
sub
addr16
lods
popa
fists
add
pop
in
pop
jmp
bound
lock
jp
jecxz
mov
imul
aam
stc
test
popf
cltd
repz
sbb
lods
jo
into
inc
xchg
dec
pop
inc
in
jg
or
adc
scas
dec
jecxz
cmp
mov
inc
add
stc
inc
clc
push
cmp
fstpl
cwtl
loopne
xor
inc
jo
stc
cmp
push
adc
xchg
mov
mov
pop
outsl
jg
and
out
xchg
arpl
aas
push
bound
bound
fdivs
adc
repnz
xchg
lahf
in
sub
lret
out
lods
xor
aas
mov
dec
mov
push
add
test
xchg
and
sbb
jmp
cmc
iret
cmp
out
imul
pusha
addb
add
rol
outsl
mov
jne
and
rcl
jmp
out
aam
es
sti
insl
mov
aas
popa
jp
xor
stos
dec
cmp
push
test
cli
aas
lcall
lret
mov
test
dec
shrb
jne
and
or
aad
mov
pop
loope
or
inc
ficoml
clc
popf
inc
fsts
jecxz
jmp
lods
mov
add
dec
jge
or
mov
call
sub
and
adc
lahf
push
fdivs
pop
iret
xor
pop
add
and
mov
push
sub
pop
pushf
fnstenv
add
fldt
adc
lock
aaa
mov
mov
dec
ja
push
lret
inc
int
imul
dec
stos
inc
xor
sarl
mov
shr
in
xchg
jecxz
jle
pop
push
push
pop
dec
movsb
cmp
jne
xor
loopne
fsubl
fs
mov
adc
xor
push
mov
das
mov
in
js
cmpsl
stos
mov
jl
push
fstpt
fucomi
mov
sti
hlt
popa
clc
mov
cli
mov
inc
cs
mov
jae
ljmp
xor
mov
add
dec
loop
push
mov
cmpsl
fwait
not
pop
push
jge
daa
aad
cmp
push
add
mov
and
in
test
xor
test
jae
xor
aam
out
ja
aas
addb
sub
ds
jb
and
int
sbbb
movb
outsb
dec
dec
and
sub
loopne,pt
scas
mov
jge
cmp
adc
xlat
enter
cmp
cmp
mov
idivb
xchg
mov
xchg
jle
and
xchg
inc
mov
or
cmpl
jb
test
cmp
rcrl
mov
mov
fiaddl
adc
push
add
adc
data16
loopne
rorl
js
pop
gs
negl
lods
fmulp
mov
cmc
lret
inc
xorb
xchg
pop
out
movsl
mov
push
repnz
call
sbb
jo
fyl2x
es
movsl
inc
nop
jns
iret
lret
dec
stos
mov
xchg
fs
and
sbb
inc
jno
cld
sbb
sahf
pop
testl
notb
cmpl
lea
addr16
mov
das
repz
and
dec
jg
mov
mov
cmp
jae
mov
aaa
jp
dec
cmc
jge
cld
insl
mov
outsb
adc
sub
push
les
xor
aas
repnz
mov
push
jge
xchg
jbe
xchg
in
les
cmp
int3
dec
out
adc
cld
rcr
stc
push
xchg
aaa
cs
mov
shll
add
andb
loopne
rcll
jle
sbb
imul
push
jno
cmpl
pop
mov
mov
pop
xor
sti
jecxz
std
leave
fstpl
add
imul
inc
jl
in
dec
rcl
iret
inc
cmp
std
pushf
pop
adc
aaa
sbb
fcomp
or
pop
xor
shlb
xor
and
leave
pop
aaa
mov
and
test
lahf
jns
out
testl
out
in
xchg
jbe
in
jle
lcall
add
push
and
mov
das
lods
call
sbb
lret
pop
imul
insb
sub
addr16
adc
inc
sub
push
outsl
andl
sub
push
or
aaa
cmpsl
dec
adc
icebp
fisubrl
lret
imul
xor
js
sahf
mov
lret
out
xchg
push
and
insb
push
push
ret
lret
dec
outsl
dec
lahf
inc
sub
popf
jae
lret
sub
or
test
hlt
cmpsb
add
js
and
out
lahf
jne
sbb
xlat
cmp
dec
lds
lea
cli
lcall
sub
ja
pop
xor
fcmove
xchg
add
sub
mov
cmp
jmp
pop
and
jp
pop
mov
mov
push
sbb
out
lods
sti
mov
push
or
and
repnz
xchg
mov
push
pop
dec
bound
stos
mov
arpl
pop
inc
and
cli
jg
mov
sub
enter
repnz
and
pusha
fisubs
inc
adc
push
jle
cmp
xchg
mov
push
popa
xor
andl
popf
mov
xchg
ja
addr16
movsl
add
test
in
nop
cmp
and
or
xchg
jl
adc
dec
pop
add
lcall
push
mov
in
movsb
mov
mov
and
les
imul
lea
jo
sub
push
pop
gs
mov
mov
mov
or
push
sbb
scas
inc
ficoml
ficomps
test
popa
sahf
sbb
mov
in
cmp
mov
inc
test
in
fwait
lods
or
xor
loope
xor
dec
insl
sahf
jns
addr16
or
and
dec
insl
and
xchg
mov
jns
addr16
push
aaa
sub
nop
jno
jb
jae
ds
adcl
lock
push
rorb
mov
lds
fnstcw
lret
xor
ds
stos
das
movsl
xor
in
inc
pop
or
pop
dec
xchg
xor
or
pop
or
dec
shll
aad
in
push
dec
test
je
into
cmp
xchg
addl
std
rcll
sbb
cltd
aad
jbe
data16
rclb
cwtl
fwait
fs
xchg
adc
fstpl
dec
fmuls
jnp
jns
push
sub
xor
cmp
dec
gs
sbb
loope
mov
mov
popa
or
or
popa
addr16
and
push
add
push
fisttpl
mov
and
push
cld
repz
cmp
xlat
mov
mov
push
insb
das
popa
sub
jne
dec
jo
add
jmp
dec
sbb
mov
mov
mov
and
push
sub
cwtl
or
inc
pop
aad
je
daa
sti
jns
lea
ljmp
test
lar
imul
mov
inc
fcom
outsb
fld
pop
adcl
mov
mov
stos
pushf
xor
xor
fdivrl
mov
push
es
pop
sbb
xchg
icebp
or
pop
jae
outsl
cmp
mov
add
or
xor
loopne
clc
ljmp
push
ljmp
sub
push
ret
insb
sub
xlat
pop
icebp
mov
mov
xchg
out
mov
dec
test
dec
pop
xchg
scas
jno
repnz
bound
or
mov
adc
lea
ficomps
aaa
stos
les
iret
repz
push
adcl
in
sbb
jb
cwtl
sub
ret
xchg
arpl
push
repz
in
jl
dec
cltd
ja
arpl
nop
jne
push
fwait
scas
cld
aas
cltd
subl
and
shll
pop
mov
inc
and
mov
loop
outsb
jmp
aaa
xor
cwtl
sbb
pop
adcb
and
clc
movsb
xor
push
jge
dec
mov
out
pop
mov
add
out
jno
mov
pop
inc
and
sub
pop
outsb
movsl
mov
cli
mov
pop
popa
mov
leave
sbb
jbe
mov
inc
insb
outsb
lods
imul
js
jno
scas
aaa
and
jno
pop
rorb
mov
jne
dec
adc
mov
in
shlb
xor
idivb
es
movsb
int
and
jp
pop
jmp
cltd
sbb
loop
mov
lods
lods
ss
cmp
cwtl
subl
mov
es
fs
sbb
sbb
stc
repz
push
inc
fadds
cmp
push
jg
insl
jmp
xchg
xchg
jle
insb
arpl
mov
and
shlb
pushl
ror
xor
xchg
inc
clc
sub
pop
cld
gs
mov
jno
mov
xchg
push
lds
sbb
negl
pop
cmp
rcrl
adc
cmc
inc
ret
pop
gs
das
sbb
cli
mov
sbb
mov
popf
icebp
push
xchg
sbb
adc
add
ds
or
sbb
push
and
adc
push
jb
notb
or
mov
test
insl
ljmp
in
xchg
gs
mov
ds
das
xchg
or
cmc
mov
stc
out
aam
insb
ljmp
jmp
xor
outsb
and
or
sub
xor
jle
mov
mov
mov
outsb
je
cmpsb
jge
lahf
arpl
pop
ss
mov
aaa
enter
mov
pop
push
ffreep
sti
and
pcmpgtb
mov
sarb
movsl
push
xchg
xchg
lcall
sub
cmpsb
jmp
xor
jbe
cltd
stos
xchg
sub
add
pop
and
data16
fwait
inc
cmp
daa
orl
jl
mov
test
mov
mov
sti
stos
in
cmp
out
or
xor
insl
sub
ss
fidivrs
lods
rcrb
xchg
orb
int
stc
sahf
pushf
push
dec
xchg
add
inc
and
cld
pop
hlt
aad
hlt
or
outsl
out
out
push
loopne
in
push
pop
add
mov
andb
mov
cltd
sbb
sar
idivb
pop
imul
mov
nop
jl
mov
sbb
out
fs
movsl
aas
pop
jne
fildl
outsb
mov
add
push
sbb
xor
push
in
adc
daa
xchg
mov
pusha
outsl
lcall
fwait
std
sub
push
pop
jno
stc
out
repnz
or
add
and
pop
push
lock
ret
loopne
and
cwtl
lret
pop
sbb
aam
sarb
mov
xchg
rorb
sbb
sub
fdivr
fwait
adc
cmp
push
jne
push
adc
pusha
dec
adc
stos
jg
jae
sbb
jne
xchg
adc
nop
dec
in
loope
enter
call
mov
das
mov
dec
sbb
mov
aaa
jp
and
cmpsl
sbb
stos
fucom
sub
insl
data16
mov
cmp
cmp
pop
in
push
in
sub
iret
mov
sahf
jp
les
fmulp
add
mov
sbb
fsubs
arpl
cmp
iret
cmp
jno
cmp
sub
cld
add
push
das
push
outsl
movsl
mov
mov
ret
pop
pushf
mov
and
xchg
mov
and
jl
xor
sub
mov
subb
mov
outsl
rol
xchg
and
pop
mov
cmpl
imul
jne
aaa
and
stos
scas
pop
jo
fsubl
pop
shr
pop
dec
sbb
and
popf
sbb
fimull
mov
add
and
dec
repz
je
push
in
ds
dec
adc
shrb
xor
push
jo
xchg
jp
xlat
dec
cwtl
push
cltd
fidivl
add
sub
shrb
lods
mov
inc
dec
std
dec
repnz
mov
xor
sub
sti
adc
mov
lods
and
test
xchg
jge
shll
into
test
cmp
add
ljmp
shll
hlt
pop
ja
ss
inc
pop
sub
push
mov
fnstenv
ja,pn
lods
jmp
xor
ja
call
rcl
nop
xchg
idivb
jp
cli
popa
aaa
cli
cmp
push
jl
jp
and
int
jg
lret
mov
hlt
lods
popa
jge
sbb
ret
push
dec
or
out
sub
loope
out
iret
mov
cmp
xchg
and
addl
mov
add
fsubr
scas
mov
inc
jge
pusha
xorb
popf
pop
mov
jo
dec
sbb
adc
nop
out
test
mov
adc
xchg
ljmp
pop
xchg
jg
call
arpl
mov
ja
cwtl
xor
add
loopne
mov
xchg
inc
cltd
pushf
orl
dec
lret
and
aas
inc
fwait
push
sbb
ss
ljmp
push
cld
sub
lcall
imul
outsl
xor
lods
lds
imul
inc
mov
push
mov
mov
cmc
cs
inc
sti
inc
orl
ds
stc
mov
outsl
xchg
mov
pop
cli
cmp
mov
pop
call
fistps
test
cmp
cwtl
int
sbb
xor
outsl
jle
rcr
xchg
xchg
aam
lods
sahf
jno
push
xchg
ljmp
xor
mov
inc
adc
lret
mov
mov
jae
or
pop
mov
rcrb
iret
mov
std
in
xchg
shr
pop
jo
fidivs
je
push
out
sbb
mov
inc
sub
push
add
mov
sub
arpl
dec
push
out
fnstsw
loopne
cmc
icebp
jge
fcom
lock
test
enter
or
lods
fistpl
arpl
dec
and
test
or
mov
add
mov
notl
jbe
mov
popa
hlt
inc
lret
xchg
movsb
js
fcomi
xorb
dec
jo
das
ljmp
mov
and
and
jge
cld
es
mov
into
cmpl
push
scas
test
mov
ja
and
and
cli
mov
jecxz
xlat
jne
sti
mov
xchg
jne
lds
insl
fidivrs
mov
test
test
xor
and
into
or
jne
lock
popf
test
in
sbb
xchg
cmpsl
out
out
rorb
pop
jecxz
or
pop
fildll
out
insb
inc
es
mov
les
jp
bound
inc
jno
mov
movsl
daa
lea
std
dec
mov
jne
jb
aaa
inc
dec
cwtl
mov
test
daa
cmp
stc
lods
repz
dec
insl
pushf
fcmovne
test
pop
xchg
mov
add
push
xchg
jno
roll
push
jo
jle
pop
push
data16
stc
loopne
out
push
repnz
loopne
es
sbbb
adc
ljmp
cmpsl
add
pusha
add
cmp
loopne
in
out
inc
stc
filds
ficoms
decl
sbb
sub
repnz
and
cmp
imul
clc
xor
daa
cmp
lcall
jge
dec
call
pop
mov
xchg
mov
div
ljmp
pop
dec
or
daa
mov
cltd
imul
adc
int3
in
dec
push
ds
xor
enter
pushf
push
jp
cmp
stos
and
mov
mov
mov
aaa
dec
shlb
and
lock
les
jge
or
sub
push
stc
mov
push
adc
dec
sbb
sahf
outsb
loope
aad
adcl
fs
push
cmpsb
ss
cld
into
dec
imul
std
add
jg
incb
iret
repnz
xchg
sarl
divl
daa
pushf
insl
lahf
pop
sbb
mov
addl
sbb
and
jbe
inc
in
insb
mov
rorl
add
cmp
mov
lods
pop
and
ss
jns
mov
mov
mov
mov
out
stc
icebp
xchg
loop
stos
push
fucomip
add
mov
sti
jmp
xor
leave
pushf
jae
arpl
loopne
in
iret
int3
jns
add
pusha
cmp
and
push
or
outsl
cli
loopne
sub
sahf
dec
in
mov
add
jns
iret
pop
loopne
and
popl
in
loope
mov
push
lahf
rcl
adc
repnz
cmp
mov
outsl
adc
xchg
std
imul
mov
movsl
dec
inc
lock
push
fld
int
mov
mov
sbb
in
ud2
test
pushf
dec
dec
je
pop
xor
test
xor
mov
dec
les
mov
push
sbb
mov
sub
cmc
dec
inc
or
test
sahf
lahf
mov
jmp
push
lods
cmpsb
sbb
jns
pop
fmulp
xchg
repz
sbb
push
shrb
mov
test
xor
hlt
lea
in
test
decb
push
sub
into
popa
dec
adc
mov
add
push
loop
cmpsl
xor
xchg
aaa
ret
cwtl
mov
sbbb
jge
sub
stos
or
jmp
rcrl
dec
roll
pop
xchg
jge
xor
sub
jp
xchg
test
ja
jb
iret
mov
dec
outsb
inc
bound
movnti
push
add
scas
sub
jecxz
mov
std
outsb
sub
hlt
dec
lcall
inc
icebp
scas
fisttpll
lahf
mov
mov
cltd
sbbl
push
push
into
and
ret
into
mov
cmp
cmpl
sbb
cmp
jle
popl
jecxz
out
xchg
flds
sub
jno
jns
xor
and
int
jo
enter
imul
cmpsl
mov
jnp
sahf
insb
add
cmpsl
adc
push
sahf
or
lcall
xchg
loopne
jge
rcl
aam
mov
arpl
gs
pop
dec
and
jg,pt
divl
jo
enter
rclb
arpl
lods
xchg
xor
sub
cmp
inc
popa
adc
mov
sub
jmp
aam
or
pusha
mov
xchg
hlt
add
outsl
or
out
cmc
xchg
push
mov
xor
jg
out
mov
adc
pop
fcmovne
pop
jnp
pop
and
jp
or
mov
cmp
insb
mov
bound
int3
idiv
je
mov
lods
test
or
pop
mov
xor
pusha
inc
and
mov
aad
dec
sbb
lods
insl
fninit
pop
adc
pop
rorl
fisttps
pop
push
adc
scas
bound
repnz
push
loope
cmp
pop
jmp
lcall
pop
mov
fidivrl
cltd
mov
loope
pushf
mov
add
rcr
and
ret
negb
or
pop
roll
imul
cmp
fistpll
out
inc
sti
or
mov
movsl
adc
test
ds
cwtl
gs
jmp
ja
int3
push
sbb
push
and
rorb
mov
fcmovu
test
add
leave
mov
xor
loopne
rorl
or
leave
shlb
outsb
jp
pop
stos
jae
incl
mov
inc
fs
sub
hlt
mov
lahf
or
es
add
es
cmpsl
into
pop
cli
and
xlat
xchg
adc
cmp
nop
pop
popa
xor
loop
adc
jge
dec
aaa
or
arpl
and
mov
pop
push
pop
mov
and
cmp
jae
pop
add
xchg
xor
aam
jns
jbe
les
sub
stc
cs
mov
dec
pop
scas
mov
neg
ljmp
das
dec
inc
xor
sbb
pusha
aam
xchg
inc
addr16
pop
sti
and
insb
data16
xor
mov
idivb
mov
pop
sub
xchg
mov
sbb
mov
mov
sbb
or
dec
lock
pusha
rorl
pop
data16
jns
xchg
push
add
sub
dec
mov
cwtl
loop
into
xor
mov
jne
xchg
dec
xchg
push
repz
xor
jmp
insl
scas
sbb
sbb
cmpsb
sbb
inc
xor
dec
mov
push
arpl
lcall
jle
xchg
cltd
lods
cmp
add
jno
lret
cmc
movsl
cli
cmpl
cmp
push
roll
mov
push
orl
jne
pop
pop
inc
cmpsb
aas
cmp
in
movl
fldt
outsl
push
add
cli
adc
cmp
xchg
pop
pop
cltd
cmp
or
pushf
add
jge
mov
imul
inc
das
inc
xchg
jp
mov
out
jp
cmp
ret
or
mov
mov
mov
and
and
cmc
xor
pop
int
rorb
movsl
cmp
cmp
in
jle
sbbl
jge
pop
sarb
sub
sub
outsl
adc
sbb
lret
pop
cs
add
cld
in
movups
clc
xchg
mov
add
stc
xchg
mov
in
cmp
leave
push
add
sub
daa
mov
into
push
adc
decb
xor
pmaddwd
jns
pop
xchg
cmpsl
jne
call
pop
test
loope
out
fwait
in
je
in
cmp
xchg
loopne
rcll
movsb
sub
fidivrl
jg
push
mov
fstpt
fs
dec
or
pop
insl
jl
mov
out
pop
shrb
add
les
enter
xor
add
inc
subb
xchg
dec
adc
add
loope
or
sub
mov
jnp
push
and
mov
stos
xchg
loop
fsubr
xchg
subb
dec
negl
and
sbb
jae
dec
out
add
mov
fcmove
ja
jp
cli
ret
sti
ret
jp
mov
bound
adc
inc
jmp
mov
mov
in
mov
inc
pop
mov
insl
inc
add
out
aam
mov
cmp
xchg
mov
mov
ja
adc
shr
pop
rcrl
pop
jnp
cmp
jb
stos
sbb
aaa
xchg
and
idivb
mov
cwtl
or
fstps
call
dec
and
dec
fidivs
cmpsl
test
push
xchg
int3
jle
pop
xchg
std
stos
cmp
jl
push
stos
ja
mov
sbb
bound
push
outsl
out
clc
inc
test
pop
ja
frstor
lcall
lea
adc
or
add
xchg
lods
xchg
lea
sbb
ja
sub
movsl
pop
or
jmp
xchg
jnp
pop
mov
dec
mov
xchg
ficoms
pop
cmp
xchg
in
ja
push
aam
xchg
in
mov
push
xchg
mov
dec
frstor
movsb
jg
push
push
jmp
ret
addr16
mov
jo
jecxz
jb
insb
test
cmc
jmp
imul
and
aaa
mov
ljmp
out
xchg
adc
gs
or
stos
sahf
adc
cli
jbe
inc
cmc
add
dec
xor
mov
jne
sub
adc
imulb
sub
in
out
mov
int3
adc
sti
mov
cmp
inc
popa
sbb
inc
fadds
or
mov
jmp
jnp
pop
sub
cli
aad
int
sbb
cld
inc
jno
xchg
or
sbbl
and
outsl
int
and
test
mov
adc
insl
sbb
dec
icebp
xor
iret
or
inc
mov
adc
cmp
xor
nop
jbe
data16
inc
mov
hlt
imul
jo
mov
pop
mov
paddd
xlat
dec
cmp
fists
int
mov
clc
cmp
xchg
enter
mov
lock
cld
lock
in
fldenv
sub
fildll
add
loop
out
sub
lahf
mov
inc
or
xchg
and
mov
aas
pop
jg
xor
popf
lea
dec
mov
lods
aad
pop
inc
cmpl
jle
insl
nop
inc
xchg
icebp
das
push
inc
inc
inc
mov
mov
and
stos
adc
test
push
imul
mov
icebp
adc
xor
lret
cmp
inc
or
add
xor
and
shr
subl
jl
hlt
test
and
sahf
xor
sub
ss
jno
cltd
dec
sub
inc
sbb
lret
mov
lea
sbb
aaa
nop
out
fdivrs
push
jne
mov
aad
ret
pop
sti
lcall
ret
jge
jge
push
push
sub
mov
pop
and
stc
cmc
xor
gs
stos
les
jge
push
xchg
cmp
pusha
add
cs
mov
xchg
xchg
mov
mov
mov
xchg
ljmp
jb
pop
hlt
mov
es
pop
xor
insb
test
std
jo
hlt
or
jb
popa
rcl
mov
stos
pushf
ror
stc
jmp
jns
out
push
xchg
faddp
int
xchg
cltd
enter
mov
clc
ss
push
push
adc
and
sub
jne
mov
pop
adc
sbb
pop
pop
je
fabs
mov
mov
lds
jo
cmpsb
jle
shll
push
xor
jl
mov
enter
es
mov
mov
lret
or
jns
ljmp
sti
sbb
sti
iret
je
lods
cli
jmp
ljmp
addr16
arpl
push
mov
iret
js
aaa
fdivrs
imul
shrl
or
cld
xchg
out
in
adc
sbb
dec
and
mov
mov
add
mov
out
shlb
lds
inc
jmp
insb
aad
mov
xor
into
scas
push
subl
mov
imul
inc
stos
stos
sti
xchg
dec
jnp
or
pop
mov
outsb
lods
test
mov
rcll
sbb
adc
adc
mov
adc
mov
add
jae
addr16
mov
repnz
mov
dec
and
imul
jo
pop
das
mov
push
inc
mov
loope
dec
and
ficoms
or
pushf
and
sub
bound
enter
div
push
cs
cmc
ss
adc
push
shll
push
cmp
sti
scas
xchg
gs
mov
mov
in
push
test
dec
scas
adc
lahf
jno
push
mov
mov
mov
jb
dec
pop
push
jmp
cltd
testb
push
call
rol
push
popa
movsl
jb
addr16
mov
addr16
bound
mov
pop
push
int
mov
loope
adc
pop
inc
push
jo
jo
fcompl
dec
loopne
push
in
mov
adc
data16
mov
jmp
xor
ss
fdivrs
pop
cmp
addr16
inc
pop
dec
outsb
and
sub
jnp
jb
imul
xchg
adc
inc
sbb
sahf
pop
sub
add
aad
pop
and
jns
xchg
ret
cmp
std
inc
jp
leave
sahf
mov
xchg
sahf
and
inc
cmpsl
sahf
in
lds
fldcw
push
sbb
adc
pop
sti
fstps
lods
insb
inc
add
fistpl
dec
pop
xchg
int3
imul
lret
inc
mov
repnz
hlt
loopne
es
jle
arpl
push
push
cmp
movl
bound
test
mov
jecxz
pushf
xchg
fistpll
repz
push
xchg
xor
lock
xor
les
dec
stos
in
and
es
jnp
cmp
sub
aas
rolb
xchg
xchg
out
xlat
pop
push
jb
test
adc
or
jg
xchg
adc
push
add
lret
aas
insb
fsubrp
mov
inc
data16
or
pop
mov
xlat
int3
inc
mov
mov
shlb
jge
mov
sub
stc
sub
xchg
es
call
cmp
add
cmc
std
jae
mov
in
loop
data16
mov
sub
inc
jl
clc
push
imul
cmp
push
dec
jno
fucomp
mov
jl
pop
cmp
xor
sbb
mov
adc
mov
bound
adc
fimull
fnstsw
addr16
out
push
xor
and
out
push
lods
ret
push
daa
js
xchg
push
mov
std
mov
and
and
pop
jae
sub
addb
data16
sub
lds
clc
and
pop
lcall
xchg
sub
loopne
rorl
lods
aad
sbb
enter
das
imul
dec
xchg
sub
dec
cwtl
lea
stos
push
mov
pop
icebp
fs
xor
sub
std
enter
mov
fiaddl
sbb
jmp
int3
xchg
es
arpl
xor
cwtl
scas
fsubs
movsb
xor
in
leave
and
lea
outsb
je
adc
jge
jle
imul
loope
pop
push
push
daa
xor
and
pop
xor
dec
push
loop
xchg
adc
stc
cmp
leave
mov
inc
inc
outsb
cwtl
mov
cmp
popa
arpl
repz
cmp
adc
sub
popf
pop
jo
jp
lods
sti
jmp
xchg
cltd
cmp
or
cs
xchg
mov
jecxz
and
loop
xchg
inc
xchg
push
adcb
sti
clc
mov
in
scas
shll
fnstsw
inc
cmp
cmp
lods
stos
mov
inc
adc
mov
cli
push
imul
push
in
xor
loopne
cwtl
addb
sub
stc
sahf
xchg
shl
xor
call
inc
aaa
inc
pop
bnd
push
push
cli
xor
or
mov
jnp
out
bound
mov
cmc
xor
inc
or
push
push
and
pop
in
sti
add
scas
mov
mov
sbb
sbb
cmp
subl
int
jle
js
jl
jecxz
xor
xor
cmp
xchg
repz
jbe
pop
mov
orb
cmp
and
aad
add
into
lock
loopne
aad
cli
pop
xchg
cmp
test
std
out
repnz
dec
rcll
inc
popf
pushf
int3
xor
adc
mov
mov
sbb
into
data16
cmpsb
push
sub
fcmovne
cld
push
pusha
add
std
cmc
out
fsubs
xchg
push
cmc
cld
and
xchg
mov
sti
sbb
das
daa
sahf
scas
add
mov
cld
mov
test
add
jae
cmp
insb
pop
dec
bound
mov
xchg
cmpsl
sar
insb
sbb
cmc
jb
popf
mov
xchg
xlat
cli
jae
cmp
pusha
push
pop
lods
push
push
cmp
aam
pushf
out
mov
mov
stos
negl
push
push
jmp
sub
pusha
push
in
sub
pop
mov
test
push
and
mov
pushf
xchg
fldl
add
ss
int3
xchg
or
xchg
mov
sbb
pop
imul
pushf
test
push
inc
loop
jne
xchg
stos
std
pop
adc
hlt
dec
mov
xchg
fldl
hlt
xchg
cli
in
in
outsb
ds
push
ljmp
test
sub
insb
inc
pop
mov
dec
sub
mov
mov
xor
mov
call
stos
out
sti
inc
scas
lock
mov
push
jmp
push
jae
sbb
movsb
ds
xor
test
popf
sub
int
push
push
ret
inc
and
inc
aas
arpl
adc
es
xchg
xor
into
sbb
adc
fcmovnbe
les
add
push
aad
pop
or
cmpsb
pop
or
imul
dec
mov
ljmp
adc
mov
push
fsubl
add
xor
pusha
aam
cmp
lods
test
sbb
out
pop
dec
dec
mov
add
mov
xchg
push
jmp
into
pop
xchg
out
leave
je
ret
add
or
fs
jp
jl
pop
xchg
gs
scas
sub
mov
mov
cmpsb
mov
insl
inc
mov
fs
jle
enter
jge
pop
push
add
cmp
adc
ret
jmp
int3
xor
pop
setbe
add
lahf
and
add
dec
out
test
outsb
or
dec
imul
cmpsl
out
ljmp
mov
scas
in
jge
in
sbb
rcr
xor
xchg
imul
mov
enter
lcall
mov
xchg
and
out
icebp
sbb
push
inc
and
sarb
cli
push
data16
lods
or
scas
popa
or
xor
imul
pop
mov
or
or
rorl
jae
test
xlat
mov
fs
mov
pop
sbb
std
mov
pop
adc
cmp
push
popa
pop
fistps
adc
ret
jmp
ljmp
xchg
arpl
pop
inc
ficoml
or
inc
push
or
xorb
or
outsb
scas
pop
mov
add
sbb
inc
pushf
pop
pop
dec
aas
mov
push
cld
mov
ljmp
jp
dec
clc
sbb
add
addb
dec
inc
push
aaa
mov
stos
xor
sbb
sub
ret
test
xor
popa
ljmp
js
stos
pop
fnsave
xchg
mov
sbb
jae
das
fwait
pop
shrd
cld
inc
add
jo
adc
cwtl
negl
jae
jns
xor
sbb
in
mov
jle
lret
mov
sub
inc
shl
loope
sub
movsl
test
int3
sbb
mov
inc
mov
out
dec
lahf
or
aaa
dec
mov
xchg
inc
push
push
popf
xchg
icebp
mov
xor
addr16
out
out
jns
mov
je
sub
sahf
test
cltd
das
adc
les
or
pop
bound
sub
rcrl
sbb
add
sahf
dec
das
roll
fwait
cmpsl
and
pushf
push
sbb
mov
push
pop
lds
mov
std
jg
andb
pop
hlt
sbb
fbstp
inc
das
cmp
adc
xor
mov
mov
and
push
push
xchg
jb
pusha
or
sbb
lds
sub
mov
mov
jp
stos
mov
xor
or
lock
scas
arpl
icebp
lahf
jl
add
andb
xchg
pop
sbb
rcll
xchg
jle
xchg
inc
inc
ret
sar
imul
shrb
push
mov
ret
jge
outsb
cmp
roll
insl
cmp
ret
cmpsl
arpl
gs
cmp
mov
loop
lods
add
push
int3
jl
mov
and
pop
cmp
mov
push
mov
add
or
xchg
fs
insb
dec
cmp
jbe
cmp
bound
fwait
and
loop
inc
push
pop
scas
in
xor
outsl
xchg
pusha
and
adc
test
adc
xchg
add
mov
psllq
aad
cmp
mov
sub
adc
adc
insb
out
sbb
aad
jge
fwait
push
sbb
and
js
push
xchg
lret
add
sub
aad
lcall
fmul
movsb
loope
mov
fstpt
mov
ds
or
loopne
cmpxchg
fdivs
pop
mov
mov
rorl
mov
inc
add
iret
add
ret
je
lods
and
lods
jae
out
in
or
push
adc
lcall
ja
dec
inc
stos
push
sbb
push
jo
cmp
sub
cld
insb
pop
sub
call
addl
sbb
adc
adc
lds
gs
stc
pop
mov
dec
dec
fidivs
iret
hlt
loopne
push
add
sbb
jbe
xlat
je
add
stc
arpl
cmp
into
decb
rorl
inc
daa
push
andb
into
jl
inc
loop
cld
jle
icebp
gs
pop
xchg
test
lcall
scas
push
cmc
lret
sub
shrb
in
call
dec
add
iret
bound
add
jle
cmp
std
or
and
sbb
dec
cmp
scas
xchg
out
mov
and
aaa
mov
hlt
jae
xchg
ret
mov
lcall
movl
sbb
push
add
in
je
std
or
xchg
dec
push
push
out
add
repnz
out
cmpsl
iret
jcxz
mov
sbb
test
sub
inc
pop
mov
xchg
in
imul
jp
popf
nop
mov
adc
mov
dec
imul
mov
into
adc
fstps
pop
xchg
and
scas
jnp
pop
mov
push
lea
mov
enter
fstps
add
ss
lahf
bound
test
iret
jp
cli
add
dec
inc
imul
xchg
cwtl
xlat
xchg
ficoml
cli
push
or
pop
cmp
out
inc
gs
ds
cmp
mov
mov
xor
in
movsl
repnz
dec
pushl
mov
sub
xchg
lcall
call
jae
sub
cld
fs
and
dec
fdiv
dec
out
adc
xchg
adcb
mov
pop
add
sub
out
mov
enter
into
sub
jns
or
jnp
mov
pop
sbb
daa
adcl
jnp
mov
ss
xchg
pop
dec
sbb
cld
shrb
pop
fcoms
call
add
ret
mov
jg
lods
pop
jo
pusha
push
mov
movsb
rorl
mov
pop
out
movsl
dec
sub
js
arpl
pop
sub
xor
adc
xchg
or
and
aas
push
jmp
sbb
cmp
or
popf
xor
xchg
fwait
lods
jle
mov
je
test
nop
into
push
insl
in
add
rclb
sub
shl
jmp
jecxz
test
lret
jbe
in
inc
push
popf
in
out
dec
jb
push
stos
inc
pop
loope
pusha
inc
rcll
shll
aaa
mov
rcrb
add
clc
jae
shrl
pushf
mov
decb
and
andl
pop
pusha
lcall
repz
dec
pop
in
push
enterw
sub
out
bound
inc
lcall
shll
xor
js
inc
jns
sti
pusha
dec
lds
xchg
and
add
stos
lcall
jmp
mov
std
jg
mov
pop
bound
mov
pop
lret
fidivrl
cmp
inc
pop
xor
mov
push
add
mov
stos
subl
pop
add
clc
dec
je
popf
out
inc
imul
imul
mov
je
and
sbb
add
lahf
icebp
div
imul
xchg
imul
xchg
xchg
cmp
aam
out
and
lea
cmp
sarl
rclb
pop
shrl
decl
ficoms
cmp
mov
cmp
ret
dec
inc
leave
lret
scas
stos
adc
sbb
push
fisubl
sbb
add
push
aam
cmp
xlat
inc
mov
adc
scas
cmpsl
dec
inc
or
imul
push
add
mov
inc
bound
xlat
js,pn
pop
enter
movsl
push
ja
std
push
addr16
jbe
cmp
fwait
xor
pop
mov
or
lcall
sbb
jge
jo
pop
add
xchg
out
mov
pop
jecxz
xchg
fbld
mov
mov
in
roll
frstor
jle
fucomi
dec
add
adc
cmp
add
xchg
fimull
pop
and
jb
mov
test
mov
cmp
out
enter
dec
popf
filds
adc
xor
scas
cltd
mov
jno
ss
insb
mov
cs
cmpsb
lret
mov
lods
jne
dec
sahf
imul
xchg
je
sbb
sub
popa
dec
mov
pop
jb
dec
insb
xchg
dec
mov
mov
cld
enter
bound
loope
rcrb
xchg
cli
sbbb
arpl
jecxz
sbb
dec
push
mov
addb
sub
nop
rcrl
jp
sbb
cmp
adc
pushf
in
cwtl
ds
dec
pop
add
fprem
daa
sub
mov
fucomip
push
mov
das
arpl
int
sub
mov
hlt
or
adc
fimuls
sar
xchg
out
xor
inc
add
cli
es
push
ds
loop
hlt
loop
fnstenv
lods
popa
cltd
adc
out
mov
in
adc
addl
adc
sti
xchg
push
mov
mov
adc
fwait
inc
inc
aas
std
lds
inc
push
fdivl
and
dec
je
jl
insb
inc
xchg
mov
adc
push
aam
mul
sbb
fucomip
mov
xchg
xor
mov
ficoml
lods
imul
xchg
into
jnp
loope,pt
and
mov
out
stos
mov
xchg
inc
mov
sub
adc
jno
xor
rcll
lret
pop
add
add
stos
scas
movsb
add
mov
mov
adc
jmp
jb
out
dec
sbb
cmpsb
xor
xor
dec
test
ret
sub
std
xor
repz
and
push
push
jbe
jmp
nop
loopne
addr16
inc
hlt
mov
mov
cmp
bound
bound
cmc
out
std
sahf
dec
clc
and
mov
pop
adc
push
push
adcl
push
ss
mov
sar
adc
repz
sbb
fisubrs
and
sbbl
sub
xchg
push
cmp
sub
push
pop
mov
push
xchg
cmpsl
mov
fmul
sbb
sub
sahf
in
mov
cwtl
out
jp
cmp
inc
test
xchg
xchg
and
xor
xchg
fimuls
jge
mov
ds
iret
push
and
jne,pn
jp
adc
in
popf
sar
imul
arpl
and
loopne
std
mov
jo
sub
rorl
push
addr16
fcomps
mov
test
jmp
sbb
cmpl
pop
scas
fdivs
pop
mov
fldenv
pop
push
ljmp
loope
lret
movsl
mov
push
bound
inc
jns
jbe
stos
sub
push
add
sbb
aas
dec
jmp
dec
jmp
sti
xchg
inc
adc
cli
leave
add
daa
aam
imul
mov
vmwrite
jne
sbb
popf
jnp
add
mov
xchg
mov
enter
mov
xor
jmp
adc
cmp
flds
push
rcr
adc
addb
fs
mov
mov
mov
stos
aad
iret
cmc
into
and
mov
mov
test
int3
dec
insb
pop
aam
pop
ficoms
repnz
sahf
jecxz
dec
push
movsb
rol
neg
mov
cmp
lods
pusha
cmp
shr
int
add
int3
jmp
push
mov
in
push
stos
rorl
lods
popf
test
and
push
push
add
scas
mov
jecxz
idivb
sub
add
or
sub
cmp
jle
js
test
pop
mov
movsb
loop
mov
js
pop
in
mov
inc
int
sbb
out
std
push
dec
lods
fildl
lahf
add
mov
adc
mov
sub
aaa
test
and
pop
mov
add
call
jg
push
mov
sub
cmc
in
cmp
cmpsb
push
lds
xchg
xor
mov
adc
xor
xchg
inc
inc
scas
popa
or
jns
adc
out
in
ss
dec
fsubrs
and
inc
imul
pop
dec
lods
inc
lods
mov
test
cmp
es
adc
add
cmpsb
lods
cmp
dec
aaa
adcb
rorl
add
sub
mov
incl
mov
les
mov
test
dec
int3
cli
fadd
ret
dec
outsb
fsubs
xchg
lahf
ds
sub
push
xchg
xchg
repnz
stos
hlt
mov
scas
xor
cli
insb
xor
pop
testl
idiv
incl
es
or
repz
jl
jecxz
orl
cmc
jae
jno
sub
in
cs
mov
das
int
jge
sub
lret
or
out
mov
push
mov
lds
or
cmp
aam
aaa
adc
imul
dec
rcll
jle
out
pop
mov
fcmove
add
into
xor
adc
pop
movsb
cltd
xchg
lock
mov
rolb
lahf
add
stos
call
pop
rcrl
scas
adcb
js
in
jae
mov
mov
jne
cld
outsb
fnsave
fs
aam
cld
bnd
push
inc
addr16
or
pop
out
mov
jb
loop
add
dec
testb
mov
mov
or
jae
js
stos
push
insb
aad
inc
stc
insl
loop
shlb
push
add
into
jb
fsubl
loopne
sar
push
fcomip
inc
jg
mov
adc
out
movsl
sti
aaa
pop
std
dec
add
sahf
jbe
xor
aam
loop
push
sub
adc
out
ss
jb
cmp
add
inc
push
add
push
leave
push
mov
add
stos
lods
pop
test
enter
cli
xchg
sub
add
das
and
sbb
jmp
and
scas
mov
fsubrl
jae
lods
pop
loope
aam
push
push
push
shrb
je
pop
cmpsb
add
loope
fs
push
pop
push
je
fstpt
outsl
testl
nop
gs
sbb
dec
push
gs
loope
and
cmp
xchg
xchg
xor
xchg
adc
inc
cmp
bound
test
cmpsb
add
iret
push
cmpsb
add
xchg
and
mov
subl
fcompl
xchg
and
push
cmpsl
mov
scas
mov
dec
pop
fdivrp
mov
dec
das
imul
inc
mov
rorl
dec
adc
dec
movsl
sbb
or
adc
inc
enter
in
jns
mov
add
jns
roll
daa
sarl
jg
jle
out
sbb
ret
jo
lret
popf
test
inc
andb
lods
push
mov
sub
pop
lods
add
insl
inc
dec
gs
pop
xor
lahf
and
test
jl
andl
fimuls
inc
das
cmp
cmpsb
mov
sbb
mov
in
jmp
push
int
pop
jge
add
nop
inc
xchg
push
aas
sti
gs
sub
sti
cmp
cmp
or
inc
sti
mov
fisubs
push
add
sub
dec
orb
push
pop
dec
and
push
sbb
xchg
gs
jb
dec
mov
and
pusha
or
jp
jg
push
pop
nop
aas
sbb
dec
sti
cmp
cmpl
cmp
xchg
jecxz
sahf
enter
mov
in
popa
mov
push
popf
or
cld
dec
dec
es
add
insb
int3
mov
dec
jg
pop
mov
xor
and
sub
pop
pop
cmp
pop
dec
fadd
fcmovnbe
push
mov
stc
ljmp
repnz
mov
cmpsl
cmpsb
push
aam
jl
push
inc
adc
daa
xchg
and
pushf
in
mov
fwait
and
stos
sub
bound
mov
sbb
push
movsl
jne
mov
pop
shlb
sbb
stos
add
pop
rol
or
out
cmpsb
fcmove
movsl
and
gs
shrl
sbb
mov
dec
icebp
push
dec
add
mov
xor
xchg
test
push
adc
dec
sbb
pop
mov
les
push
pop
jmp
push
mov
cmpsb
sti
xlat
mov
xchg
pop
or
loop
leave
xor
mov
mov
mov
nop
mov
test
lods
ds
je
out
decb
stc
pop
add
push
clc
cwtl
mov
icebp
in
mov
clc
fcoms
cmp
mov
hlt
repnz
cmp
ret
in
aam
pop
lahf
insb
push
rolb
jns
dec
add
inc
adc
mov
jbe
or
xchg
imul
addr16
jecxz
arpl
push
sbb
cld
dec
xor
xor
pushf
add
stc
fcomp
xor
adc
rcrl
add
jg
dec
dec
iret
cwtl
fs
sahf
xchg
imul
cmp
mov
sbb
insl
ss
lcall
jbe
sbb
jmp
add
mov
ljmp
push
or
mov
xchg
push
push
inc
ljmp
cmp
pop
stos
pop
or
dec
cwtl
in
jb
aam
stos
pop
push
xchg
imul
or
jle
xchg
pushf
push
pop
jno
pop
jle
jmp
xchg
mov
dec
je
sbb
shrb
fsubl
rolb
imul
je
or
xchg
mull
push
lret
xchg
test
imul
xor
xor
ss
and
shlb
fnstsw
sbb
sub
xchg
sub
insb
mov
mov
cltd
lret
add
ror
add
pop
pop
jp
rorb
xor
stos
pop
jp
or
lret
sbb
sbb
popa
les
sbb
in
sub
adc
fucomip
pop
pop
or
mov
inc
pop
mov
cmp
sbb
pop
jns
outsb
jmp
or
mov
xor
xchg
lods
jle
mov
cmp
pop
call
push
xchg
push
adc
xor
mov
sbb
mov
dec
jbe
in
enter
add
sbb
or
fnstsw
sub
cwtl
jp
jae
andb
push
test
sbb
inc
mov
mov
fimuls
adc
jle
aas
divl
aam
add
lret
gs
mov
fidivl
fwait
xchg
imul
push
xchg
mull
mov
mov
fnsave
xor
pushf
xchg
cmp
xchg
movsb
xchg
add
adc
push
or
mov
int3
loop
aas
adc
sahf
int3
lods
inc
lret
push
pop
outsb
jmp
int
cmpsl
or
int3
lods
pop
repz
movzwl
fwait
mov
fcompl
adc
stc
cmp
cmp
dec
lret
mov
add
test
fstpl
not
jnp
dec
push
jnp
clc
xor
rcll
mov
loope
aam
bnd
sbb
xchg
sbb
stos
test
jge
dec
leave
gs
push
push
jae
jno
int
sub
inc
jp
sbb
shl
out
les
subb
notl
and
pop
ljmp
aad
pop
scas
fiadds
mov
test
out
sbb
mov
jmp
dec
jns
decb
repz
jmp
cmp
and
ja
not
push
out
mov
ja
call
ret
stc
subb
fcmovbe
mov
pop
push
lret
pop
dec
leave
popf
dec
mov
cmp
push
fimuls
rorb
inc
daa
scas
lcall
lock
pop
divl
cmp
sbb
push
fldl
xchg
xchg
inc
adc
sbb
adc
xchg
cli
mov
inc
test
inc
xor
push
sti
mov
xlat
btc
sahf
xor
or
sbb
mov
aad
scas
lret
jp
xchg
and
xor
adc
dec
clc
adc
push
test
sbb
stos
sub
add
pop
mov
xor
add
cmp
jnp
arpl
jb
pusha
or
push
jmp
jnp
or
mov
xchg
out
fidivs
and
scas
or
fldl2t
add
jmp
mov
outsl
movb
cmp
and
xlat
dec
push
repz
outsl
mov
mov
adc
inc
inc
xchg
jle
aas
dec
lds
jnp
fiaddl
cmpsl
mov
sti
xchg
out
movsl
pusha
jns
sarl
repz
divl
fnstcw
or
jbe
dec
push
dec
pop
push
das
adc
inc
iret
xor
outsl
rcll
or
fisubl
testb
daa
fisttpl
sbb
adc
jnp
iret
insl
push
pushl
or
lahf
adc
es
fxch
bound
sahf
dec
jge
inc
stc
leave
loopne
mov
cwtl
scas
adcl
out
mov
bound
stos
or
sub
leave
push
bound
cltd
and
push
mov
test
mov
pusha
imul
cli
inc
mov
inc
hlt
popf
insb
jge
push
out
pop
icebp
bound
lods
push
jl
outsl
jp
stos
or
in
aam
xchg
jns
dec
xchg
and
inc
or
cmpsb
cmp
cmpb
inc
and
add
outsb
sbb
lods
mov
xchg
sub
dec
mov
mov
jo
inc
dec
out
aaa
mov
fidivrl
mov
jp
sarb
jae
addb
test
sbb
stc
add
mov
mov
loopne
lods
push
or
xlat
shrl
mov
cltd
outsb
js
jle
test
js
sbb
mov
adc
imul
pushf
cmc
and
mov
jl
in
cmpb
lea
sbb
fsubrs
repnz
out
stos
xchg
add
jb
push
cmpsl
dec
mov
jge
test
jp
dec
cld
aas
cli
cwtl
pop
fnsetpm(287
adc
fnsave
push
loope
and
cmp
into
push
add
and
xor
fcompl
push
and
decl
leave
mov
jmp
lret
test
mov
adc
das
jne
adc
adc
mov
rcl
jl
mov
scas
push
lods
pop
cmp
movsb
push
inc
xlat
add
loope
je
stos
cmp
or
jle
add
popa
sub
push
and
cmc
xchg
in
cwtl
repz
shl
dec
repz
xor
inc
and
jmp
inc
xsha256
cmpsb
push
jmp
sbb
sub
movsl
stc
sub
dec
or
xchg
xchg
in
outsl
std
sub
fists
xchg
in
jl
stc
movl
lock
addr16
mov
stos
push
and
test
xchg
test
and
dec
lret
push
movsl
xchg
dec
out
std
rcll
shlb
insb
aaa
and
inc
push
pop
std
and
xchg
push
scas
push
pop
popl
movsb
sbb
cmpsb
cld
inc
sub
pop
xchg
jbe
or
retw
pop
daa
shr
std
push
mov
adc
mov
mov
inc
mov
mov
inc
aad
xlat
test
mov
call
sbb
jecxz
mov
ss
xchg
adc
sbb
cli
stos
nop
jmp
in
js
pop
jae
jle
inc
stos
cmpb
sarl
add
xor
call
or
inc
ret
pop
call
movsb
aad
inc
aad
xchg
cmp
int3
fdivl
and
test
ljmp
or
nop
inc
nop
je
mov
aaa
scas
fs
pop
pushf
outsb
mov
and
ljmp
xlat
jnp
xchg
fsubl
sub
mov
lods
dec
sarl
outsl
push
sti
add
and
lds
dec
and
nop
int3
stc
fbstp
inc
in
sub
push
roll
mov
sub
mov
fldenv
cwtl
cs
cld
subl
daa
dec
push
ljmp
rol
leave
loope
pop
xor
int
lcall
sub
cmp
into
in
mov
mov
js
ror
sti
mov
and
sahf
iret
roll
and
gs
adc
test
mov
jnp
das
pop
mov
int3
xor
jmp
pop
addr16
ds
mov
pop
push
leave
cmp
pop
xor
fildll
arpl
fistl
pop
js
xor
iret
int3
jp
scas
pop
or
je
and
lea
dec
dec
jmp
or
jecxz
cwtl
mov
adc
mov
push
je
xchg
jnp
push
and
lahf
roll
shll
or
sub
shl
arpl
leave
lea
icebp
or
testb
pop
sub
faddl
or
push
and
sub
lods
les
leave
inc
mov
movsb
xlat
clc
mov
outsb
fisttps
dec
push
andb
leave
insl
push
and
push
mov
fisubrl
aad
lock
pusha
xor
xchg
dec
leave
sti
mov
sub
xchg
mov
and
es
pop
imul
push
ret
xor
into
sbb
cmp
mov
pop
mov
xchg
cmpsl
hlt
sbb
shrl
loop
xchg
jns
cmpsb
jbe
in
fistl
and
or
add
pop
data16
inc
mov
inc
sti
repz
loope
icebp
sub
shrb
push
in
cltd
sahf
in
or
movsb
lds
fstp
push
xchg
dec
cmp
cwtl
jecxz
imul
pop
jno
fs
leave
or
rcr
xchg
sbb
lea
pushf
mov
mov
lods
stos
jmp
pop
xchg
jae
jg
inc
addr16
mov
test
pop
popf
fcoml
popa
mov
ss
push
inc
in
jbe
int
mov
lret
dec
inc
int
scas
push
adc
push
daa
fstps
data16
lret
addb
inc
repnz
mov
pop
pop
jl
mov
hlt
push
dec
lods
hlt
aad
stos
jnp
cmp
mov
in
sar
jno
jo
sbb
dec
sbb
and
mov
into
and
daa
scas
push
pusha
sahf
stc
loopne
mov
sub
jl
jnp
mov
and
push
push
xchg
jg
insl
jns
stos
push
iret
mov
mov
les
jno
xor
cmc
daa
jmp
insb
dec
mov
pop
repnz
mov
sbb
adc
and
dec
xor
lea
iret
mov
rorl
mov
lcall
cli
pop
sub
sub
mov
cld
rorb
stc
notb
out
inc
je
jbe
popa
mov
lea
lods
adc
in
sub
mov
cld
fnsave
stos
sub
pushf
dec
dec
loopne
movsb
cmpsl
xorb
mov
push
and
movl
div
pop
xchg
aas
ss
clc
sub
xor
cmp
mov
cmpsl
fsubl
cwtl
add
jae
iret
aam
outsl
cmp
popa
add
or
sub
mov
inc
xor
incb
dec
daa
ja
push
pushf
in
dec
aas
lret
fimull
or
ret
jp
push
lods
and
or
xchg
xchg
lahf
jecxz
push
push
sub
sub
in
xchg
dec
lahf
sbb
outsl
cltd
je
enter
jmp
dec
pop
cmpsl
jae
loop
cmpsl
scas
pop
and
xchg
adc
cmp
or
jge
aad
rcl
das
mov
outsl
mov
mov
xor
mov
push
cmc
inc
sbb
lret
xor
sbb
push
es
mov
icebp
sti
clc
scas
insl
sbb
icebp
xor
push
pop
mov
mov
popa
xchg
xchg
cmpsl
add
push
dec
or
inc
mov
jl
fisubl
inc
mov
add
call
imul
jp
loop
test
add
test
add
push
dec
and
out
pusha
lock
mov
adc
mov
cmp
adc
jmp
dec
hlt
in
jle
fcoms
les
faddl
dec
add
lods
aaa
and
aam
lea
adc
mov
or
pop
rorl
cmp
lods
stos
es
add
in
dec
hlt
bound
pop
add
lcall
pop
xlat
or
cmc
xor
push
sarl
mov
push
loopne
jo
pop
pushf
cmp
jnp
mov
jmp
int
jmp
dec
add
outsb
cmp
add
jno
leave
push
jle
jo
mov
mov
pushf
xor
scas
adc
popa
test
ficomps
dec
dec
and
in
leave
mov
subb
sub
sbb
cvtps2pd
add
dec
xchg
rcr
repnz
pop
mov
or
imul
enter
out
add
mov
xchg
enter
mov
xchg
cltd
dec
push
sahf
outsb
pop
lea
xchg
or
add
jno
scas
sub
push
mov
subl
pusha
cli
adc
fldcw
jnp
mov
mov
push
cmp
inc
pop
gs
sub
xchg
xchg
xor
dec
gs
mov
xor
mov
mov
inc
in
mov
or
ss
xchg
ja
clc
xchg
cwtl
sahf
adc
fsubrl
je
addl
orl
into
and
jne
push
insb
add
lds
pop
mov
push
sbb
stos
pop
call
ljmp
sbb
repnz
ds
sbb
faddl
sub
or
sub
lea
enter
pop
popa
cmc
push
push
push
popf
cmp
add
int
mov
cs
or
add
add
jl
jb,pn
inc
scas
scas
xor
pop
imul
fnsave
mov
adc
addr16
cltd
push
mov
mov
pop
dec
add
xchg
mov
sar
and
popa
sti
push
sub
xor
in
fmul
stc
fsubrs
pop
sub
rcr
addl
sbb
adc
and
inc
daa
ds
lds
push
mov
xor
jnp
push
pop
inc
mov
aas
imul
out
jnp
outsl
inc
lret
xor
or
adc
jl
adc
jg
lods
outsl
mov
cmc
mov
xor
jp
pop
sbb
fsts
cwtl
pop
pop
push
sub
arpl
dec
filds
mov
xchg
mov
push
push
inc
mov
pop
or
loopne
mov
gs
xor
in
aaa
cli
mov
or
fs
or
push
dec
imul
in
add
das
dec
test
fwait
arpl
or
lods
movsl
cmp
aad
bound
xor
call
inc
inc
mov
mov
jl
jno
mov
sti
les
rcrb
adc
mov
out
xor
sahf
scas
dec
inc
cmp
add
or
mov
shl
in
mov
imul
subl
pushf
js
cmp
leave
mov
mov
sbb
jmp
fildl
pop
outsl
xchg
bound
sub
popf
sbb
or
inc
sarb
sbb
jge
push
imul
test
pop
les
dec
inc
movsl
cmpsb
push
pushf
mov
sbb
lea
fadd
add
loope
pop
adc
into
cmpl
lods
sti
jg
mov
call
aam
xacquire
jnp
repnz
pop
mov
adc
daa
pop
test
cli
mov
jmp
mov
jecxz
shlb
xchg
xchg
fstpt
cmpsl
jno
jl
sub
cli
dec
inc
mov
mov
nop
lods
pop
scas
dec
push
leave
xor
repz
aam
mov
into
and
ds
xlat
std
insl
sub
dec
sti
imulb
imul
jge
and
dec
movhps
mov
cmc
add
push
sti
adc
push
jp
mov
ficompl
pop
push
fisubrl
mov
push
and
sbb
dec
insl
add
push
sub
sub
xor
add
pusha
and
jae
or
jecxz
dec
mov
jecxz
imul
out
cld
sbb
in
or
xchg
or
push
sbbl
xlat
cmpsb
dec
popf
adc
pop
out
aad
adc
int
adc
dec
xor
in
call
mov
add
sarl
xchg
push
jb
mov
outsl
outsl
cmp
cmc
leave
mov
testl
ret
adc
bound
mov
add
aas
adc
adc
hlt
imul
mov
pop
mov
mov
insl
in
out
dec
push
sub
ja
rcll
mov
add
jl
sbb
jae
xor
add
push
jg
sub
scas
xchg
pop
mov
leave
sbb
lock
pop
xor
push
add
cmpsl
xor
mov
jae
xchg
xchg
cmp
pop
cmp
jns
sahf
lock
mov
and
add
add
pop
outsl
cmp
gs
or
cld
adc
and
daa
mov
pop
adc
mov
mov
leave
push
add
loop
jmp
orl
insb
pop
cwtl
xor
xlat
push
dec
mov
lods
stos
pop
sub
dec
jle
jo
out
jb
insb
sub
in
cltd
lods
cmpsb
xchg
into
xor
mov
mov
sarb
daa
int
loopne
jecxz
je
sbb
sbb
cmpsl
jl
add
dec
das
cld
mov
and
and
xorl
insb
push
mov
inc
rorl
sarb
mov
mov
sarb
aas
cmp
add
mov
enter
cld
or
insl
sbb
mov
stc
inc
aam
pop
dec
xchg
lahf
imul
cmp
push
loopne
fdivl
mov
jecxz
adc
jns
lods
push
cltd
mov
cmp
jne
movsb
sbbb
push
enter
mov
cli
jmp
fcoms
pop
into
mov
das
lret
imul
jb
test
mov
push
xchg
and
in
rclb
andb
inc
pop
xchg
push
addr16
adc
in
icebp
dec
les
ss
cld
insb
cmp
cwtl
bound
sbb
movb
push
sbb
adc
mov
and
pop
jmp
ss
cmp
jb
aam
rorl
in
push
sbb
xchg
insb
mov
xchg
sub
xor
push
add
push
fists
pushf
or
cmp
fadds
adc
shrl
xor
mov
outsl
aad
xor
mov
lock
xchg
fistps
rorb
dec
cmp
mov
or
push
xchg
mov
cltd
icebp
popa
mov
cmp
aam
inc
call
and
ret
clc
insl
rolb
xchg
or
fxch
jb
ds
test
jno
pop
jns
movsl
pop
xor
out
xchg
neg
in
dec
stos
inc
sbb
mov
inc
nop
stos
gs
and
stos
jne
jae
xor
lea
pop
test
mov
mov
scas
gs
sbb
dec
test
lret
xor
sub
jne,pn
mov
in
pop
in
fiadds
mov
cmc
pop
stos
cmp
mov
cwtl
punpckhbw
push
insl
lahf
test
mov
mov
sub
xchg
cmp
fstpl
psraw
int3
jecxz
sub
enter
das
mov
lock
les
pop
fs
mov
lods
push
sbb
mov
push
sub
mov
out
mov
pop
add
dec
jbe
dec
jmp
stc
dec
or
mov
mov
pop
mov
add
sahf
es
and
jl
call
inc
leave
int
push
pop
bound
ss
dec
xchg
adc
inc
leave
in
xor
cmp
mov
push
lcall
cmp
add
sub
and
mov
push
sub
lods
mov
lret
outsl
fiadds
addr16
add
fldcw
test
leave
jne
repnz
ret
addr16
mov
mov
mov
scas
pop
shl
imul
pop
mov
dec
xchg
adc
and
adc
inc
aam
adc
shlb
mov
mov
inc
ficompl
mov
pop
jae
inc
adc
sbb
enter
cltd
cmc
dec
call
add
xor
and
jnp
filds
rcrb
mov
pop
pusha
test
loop
mov
adc
subb
lods
jno
mov
sub
inc
mov
lret
dec
sti
mov
iret
mov
fmulp
jne
imul
dec
mov
cli
push
or
loopne
lcall
or
cltd
arpl
aaa
push
adc
mov
add
jmp
hlt
ja
mov
aaa
aas
into
lea
mov
jb
dec
into
push
insl
push
push
mov
jle
add
xchg
sbb
bound
mov
inc
popf
test
mov
shrl
xchg
mov
adcb
dec
mov
dec
imul
adc
aad
mov
xchg
xchg
jle
out
insb
cmp
and
sbb
pop
out
dec
mov
ret
int
cli
and
add
mov
inc
pop
aad
sbb
ret
dec
mov
je
push
adc
inc
or
and
clc
sarb
clc
mov
jne
cmp
out
mov
sarb
es
xchg
push
fbstp
adc
mov
movsl
arpl
xor
aaa
out
dec
subb
pushf
push
out
incl
rcrl
add
roll
sti
lea
or
je
stos
testb
lods
ss
push
shll
sbb
push
and
mov
in
movsl
mov
loopne
popa
repz
imul
mov
fldcw
inc
sbb
sahf
daa
and
jo
je
xorb
fidivrl
lods
mov
imull
mov
fs
xchg
xchg
jg
and
xor
lds
jecxz
jnp
pop
aam
push
mov
aas
mov
pop
xchg
out
lahf
xchg
outsb
lahf
pop
out
pop
int3
es
xor
popf
out
sbb
stos
test
pop
cs
in
push
adc
pop
sarb
das
xchg
cmp
lret
jbe
cmp
lods
stos
fcoms
inc
jg
fwait
sti
in
xor
inc
lods
push
adc
mov
loopne
shll
cmp
mov
andb
aas
sahf
ss
ror
mov
cmp
cmp
cmpsb
cmp
push
sub
fst
lds
sub
icebp
outsb
mov
hlt
mov
cmp
xchg
imul
jl
add
inc
mov
sub
xor
mov
pushf
xor
sbb
shll
in
sbb
ret
pop
sub
out
sub
repz
xorb
jecxz
pop
mov
rorb
sbb
idivl
pushf
jno
popa
shll
inc
in
js
fistl
xchg
jbe
cmc
icebp
sbbb
inc
cltd
addl
fidivrl
lret
es
cmp
and
lcall
cmp
imul
arpl
popf
dec
loop
xlat
negb
hlt
cmp
push
xchg
mov
fimull
cmp
push
push
sub
sub
mov
lcall
mov
or
lret
dec
imul
pop
fcomip
les
test
sbb
mov
jle
xor
sbb
leave
aaa
aaa
incl
addr16
sub
pop
mov
scas
push
adc
xor
jae
insb
idivb
sub
repnz
dec
out
aad
adc
xor
fprem
inc
lcall
out
andl
inc
sub
ss
pop
mov
jb
lea
pop
cli
dec
repz
inc
test
mov
push
fcmovnb
scas
xor
mov
or
jl
jge
cmpl
lret
lock
jg
xchg
push
mov
outsb
cwtl
out
mov
pushf
adc
dec
or
cmp
clc
mov
mov
je
sti
rcrl
lea
or
in
cs
jl
mov
mov
jnp
les
jnp
mov
cmp
aas
dec
cmp
and
inc
pop
xor
jbe
xchg
arpl
adc
lahf
pop
cld
xchg
clc
mov
sbb
repz
xchg
stc
sbb
mov
data16
cmp
sub
pop
frstor
xchg
rclb
lds
sahf
push
arpl
mov
mov
jl
push
loopne
jg
jae
mov
aad
js
pop
ja
mov
xor
shll
mov
and
adc
insb
dec
add
add
pop
orl
adc
add
fmul
sub
hlt
ja
rcr
mov
int3
fs
cmp
rcll
push
push
popf
enter
lods
fsubrl
jp
mov
push
shrb
push
andl
sub
lahf
adc
adc
fbld
xor
xchg
sti
pop
xchg
xchg
pop
aam
inc
cmp
movsl
shrl
iret
pop
inc
mov
enter
xchg
push
adc
sub
push
adc
or
adc
ret
fiadds
movsb
xorb
std
mov
mov
push
ret
fcmovb
repnz
imul
int3
lret
out
mov
ja
xchg
imulb
push
push
int
mov
xor
dec
pop
popa
mov
dec
xor
xlat
xor
adc
cmpsl
xlat
jecxz
ss
in
icebp
jle
fidivl
es
mov
adc
adc
xor
cmp
outsl
inc
and
cmp
and
aas
das
pop
xor
sbb
dec
or
mov
and
sbb
xcrypt-ecb
cmpsl
push
aam
test
mov
divb
cld
pop
lea
cmp
push
lods
push
arpl
adc
adc
jmp
sbb
nop
sub
cli
mov
mov
jp
xchg
shl
shrl
sub
jb
les
xor
and
mov
pop
mov
adc
mov
mov
sbb
or
and
bound
mov
mov
mov
xor
jbe
cmpb
xchg
push
jb
lahf
outsb
xor
orb
movb
jge
call
lret
add
aam
fsubrl
sbb
test
mov
repz
dec
xchg
xorb
dec
push
jmp
mov
test
cld
jmp
mov
xor
mov
fstps
jb
jo
jo
lods
mov
mov
sahf
cmpl
adc
aad
mov
cmp
add
sbbl
ficoms
jl
int
mov
lods
in
sti
cs
aas
test
icebp
inc
call
cli
outsb
mov
insl
pop
test
cmp
mov
cwtl
mov
xchg
add
cmp
xchg
dec
sub
mov
pop
mov
in
testl
test
jmp
fiadds
mov
loopne
lcall
mov
dec
lea
sarl
adc
jno
pop
cmp
imul
mov
lea
or
sti
popa
insb
sub
xchg
jecxz
add
mov
pop
cs
inc
inc
ds
test
bound
loop
cmpsl
popf
and
loopne
daa
xchg
cmp
movl
fidivrs
dec
jne
sub
pushf
push
je
shl
xchg
jmp
call
daa
xchg
cmpl
rorl
push
mov
es
test
inc
hlt
jle
cmpsb
add
sbb
cld
sub
outsb
inc
xor
adc
mov
aas
repnz
cwtl
inc
movsb
or
lods
mov
imul
cltd
test
lds
dec
cmp
adc
inc
mov
enter
inc
dec
pop
jnp
or
or
mov
jle
jb
cmp
adc
ja
or
call
stos
push
jg
lret
std
pushf
shlb
xchg
test
addr16
les
xor
inc
mov
cmp
dec
pushl
out
mov
mov
repz
pop
mov
add
lock
xchg
inc
jecxz
xchg
cmc
mov
inc
mov
test
cmp
and
cmp
mov
pop
popa
xchg
mov
inc
sarb
lods
sub
mov
pop
dec
incb
clc
xchg
mov
fiadds
ds
mov
addr16
xor
aam
inc
out
mov
inc
in
pop
dec
inc
push
jo
mov
dec
pop
adc
push
out
cmp
mov
cltd
stc
add
add
popf
fbld
inc
mov
sbb
mov
jmp
mov
xor
lods
clc
xchg
jecxz
push
gs
movsl
lea
cld
daa
sbb
outsl
into
lret
mov
adc
pop
cmp
xor
pop
in
sbb
addr16
or
sbb
mull
jne
sti
inc
out
cmc
pop
add
mov
loopne
subl
pop
pushf
fwait
sbb
cmp
data16
or
xchg
dec
pop
mov
icebp
rcrl
call
mov
aad
sub
pop
and
cmc
ja
mov
sbb
leave
std
xchg
jnp
xchg
xchg
dec
pusha
sub
test
push
pop
cmp
mov
fidivrl
mov
dec
movsb
std
pop
pop
int3
mov
lods
push
cmc
jmp
add
jae
pushf
and
notb
and
jnp
test
out
xor
inc
adc
cmp
cmp
popf
stc
adc
sbb
push
dec
fsubrl
jp
leave
jg
mov
jp
pushf
push
jecxz
stos
inc
dec
dec
mov
cmp
and
pop
adc
push
lds
and
imul
test
insb
pop
pop
movsb
call
pop
idivb
out
push
jmp
and
inc
lcall
loope
mov
in
test
push
pop
push
std
or
dec
stc
outsl
scas
dec
mov
cmp
les
out
sbb
das
enter
rorb
push
mov
jecxz
adc
xchg
pop
aad
das
in
out
adc
pop
movaps
aaa
test
xor
cli
cmc
pop
popa
jecxz
inc
or
loopne
mov
inc
cmpl
lds
insl
fdivrs
xor
xchg
sub
sbb
pop
shrb
mov
inc
cmp
push
in
sbb
setl
push
jnp
push
mov
fsubrp
push
lcall
or
outsl
nop
mov
mov
popf
add
jecxz
outsl
test
popa
dec
vscalefps
movsl
cmpb
xor
push
mov
insl
enter
out
mov
cmp
sbb
in
jne
push
mov
sbb
jl
mov
pusha
adc
dec
in
push
cmp
rcrb
imul
dec
cmp
dec
or
fildll
sbb
das
inc
aas
cmp
sbb
clc
sbb
push
sbb
inc
loopne
and
inc
push
inc
push
mov
clc
push
xchg
jg
jmp
fstpl
loop
sub
lahf
nop
cld
stos
dec
lahf
stc
jne
outsl
mov
repz
inc
xor
cmpsl
lock
push
adc
icebp
movsl
xchg
mov
xor
in
es
push
inc
subb
orl
adc
gs
mov
in
sbbl
sbb
loopne
stc
fsts
xor
add
insb
cmp
push
out
xor
pushf
shrl
jo
shll
scas
add
sub
pop
jo
xchg
mov
or
ret
daa
movb
sbb
insl
shll
mov
jbe
mov
sbbb
fs
cmpsl
cmpsb
pop
imul
jns
cmp
add
fidivl
fs
push
or
std
fdivrl
pop
js
pop
ss
xchg
mov
mov
xchg
out
mov
adc
sbb
and
pop
clc
sahf
scas
adc
mov
jno
in
jae
cmc
adc
mov
adc
inc
dec
mov
xchg
mov
sarb
aaa
imul
cwtl
dec
push
push
sbb
dec
inc
rclb
push
test
jne
adc
mov
pushf
sarl
popa
jns
cmp
loope
cmp
loop
je
and
xchg
outsb
sarl
stos
jp
mov
cwtl
xchg
sub
vpminud
aad
movsb
inc
repnz
fldt
mov
sub
js
push
dec
nop
xor
insb
inc
scas
jecxz
jmp
cmp
add
push
cmpsl
mov
mov
fwait
lahf
mov
ljmp
out
add
sbb
xchg
roll
movsl
mov
xchg
testb
outsb
jb
and
sar
cwtl
sub
pusha
or
sub
mov
aaa
fisttps
add
daa
cmp
and
js
fcom
lods
mov
les
fwait
mov
mov
adcl
mov
push
or
mov
xchg
outsl
js
sti
rorb
jp
inc
xor
mov
inc
dec
dec
mov
adc
std
xchg
mov
mov
mov
test
je
dec
jmp
mov
or
mov
repz
int
jle
pop
loop
repnz
cmp
cmp
repnz
cmp
sub
sub
stc
mul
sub
dec
ja
jl
jle
xchg
pop
cmc
repnz
cld
lcall
and
enter
sub
and
inc
jp
push
xchg
out
adc
xchg
stc
push
int
xchg
cwtl
insl
jnp
sbb
xor
or
in
cmp
pop
cmp
push
xor
and
and
sbb
mov
or
push
cmp
aad
xchg
popf
mov
and
lcall
enter
and
mov
jmp
mov
dec
mov
pushf
dec
movsl
cmpsb
cmpsl
test
out
in
in
fistl
mov
jae
out
insl
xchg
push
test
test
out
xchg
push
mov
push
xchg
add
jo
hlt
sub
cmp
push
mov
ret
jb
sbb
repz
aaa
ljmp
sbb
insb
inc
inc
aas
adc
int3
adc
adcb
sub
iret
cmpsb
adc
mull
aad
inc
xchg
push
sub
jmp
repz
adc
jae
sbb
dec
int3
pop
pop
add
jns
cmp
and
test
hlt
js
gs
mov
cmp
and
data16
lret
pop
ss
cmp
jnp
inc
fnstcw
jne
out
push
shl
push
pop
cmp
leave
sbb
rcll
push
mov
add
pop
ret
xor
mov
bound
add
shl
std
adc
cli
outsl
jmp
mov
pop
cmpsl
outsl
or
xchg
add
mov
mov
inc
addl
add
sub
into
jae
xchg
in
in
int3
cmpsl
jmp
dec
sub
and
dec
mov
sbb
lcall
hlt
mov
mov
mov
nop
out
lret
fmul
lret
aas
mov
fdivrl
inc
mov
and
dec
leave
xchg
jle
push
push
pusha
mov
cmp
xchg
ljmp
add
in
xchg
adcb
rclb
scas
shll
lods
mov
roll
and
inc
jns
shrb
adc
push
inc
add
jo
jmp
jp
call
mov
roll
scas
and
lahf
inc
push
inc
nop
aas
push
aad
jge
xchg
jp
loopne
jge
adc
mov
addr16
shrb
scas
subb
flds
sub
sub
push
mov
test
push
imul
test
ss
jb
or
xor
dec
movsb
jg
inc
ljmp
cwtl
cmc
sahf
or
push
arpl
mov
jne
jo
jns
fs
sub
pop
ds
fmuls
jae
data16
fstp
iret
or
mov
mov
test
sub
scas
pushf
xor
pop
pop
aam
call
pop
lds
jmp
mov
mov
sbbb
imul
jbe
xor
jge
test
std
adc
test
sbb
xor
pusha
or
ffree
add
adc
shlb
mov
xchg
aam
and
aaa
cmc
cmc
jnp
scas
fisttpl
leave
lea
std
dec
nop
dec
cmp
and
test
push
outsl
les
adc
shll
jle
xor
cmpxchg8b
scas
fsubrs
pop
or
arpl
jp
lret
pushf
andb
xor
and
in
loope
call
imul
je
pop
pop
xor
fsub
ret
push
repnz
xadd
adc
dec
xorl
dec
cld
aaa
sbb
idivb
hlt
and
or
cmp
add
addr16
popa
cli
xchg
mov
mov
fs
mov
push
dec
sbb
mov
lds
and
adc
cmpsl
mov
add
xor
in
movsb
sarl
inc
xor
inc
sarl
jl
mov
or
cmp
idivl
into
mov
sub
jnp
sbb
push
push
mov
sub
or
inc
add
dec
repz
pop
in
ds
mov
iret
and
in
jmp
push
mov
js
or
dec
dec
pop
ret
mov
ds
jne
aad
enter
mov
mov
add
daa
mov
cld
sti
out
rep
ja
int
loopne
addr16
push
dec
cwtl
pop
filds
jecxz
aaa
cld
push
fildll
mov
push
fldl
jae
pop
sbb
pop
xor
cli
ja
ror
notb
push
out
jno
push
mov
lcall
sub
push
sbb
inc
std
dec
mov
out
mov
arpl
stc
dec
lea
sbb
adc
popa
addr16
lods
xchg
lds
push
ljmp
add
imul
or
cmpsl
das
jae
aas
imul
or
inc
arpl
cmp
adc
arpl
cmpsl
imul
or
xor
addr16
scas
roll
push
jnp
cmp
loop
rclb
lcall
daa
aas
xchg
out
sbb
shr
repz
lahf
cmp
loope
fstp
and
jp
testl
ss
iret
popf
icebp
push
and
in
decb
int3
inc
cmp
cmp
or
ds
in
movb
insb
and
loop
sbb
roll
stos
lea
sbb
xchg
push
sbb
lahf
or
pop
lret
pusha
sbb
cs
mov
pop
push
xchg
jmp
dec
fisubrs
or
stc
out
rorl
fimuls
jnp
xor
push
sahf
addr16
lds
mov
js
push
adc
cmp
mov
push
sub
pop
mov
cs
sbb
mov
out
test
push
inc
add
xlat
popa
xor
in
or
jo
cwtl
pop
shll
jae
xor
fidivs
fidivl
cwtl
adc
lods
xor
lock
fmuls
pop
jb
adc
in
sub
xchg
movsl
in
xchg
in
mov
faddl
adc
pop
adc
xchg
xor
and
repz
sbb
fimuls
cld
push
and
fsubr
sbb
shll
add
jle
int
sub
adc
or
dec
or
xor
inc
arpl
or
hlt
jge
add
mov
fmuls
add
push
dec
rorb
enter
outsb
mov
mov
lahf
xchg
jnp
mov
xchg
xorl
dec
xchg
mov
adc
jno
add
mov
idivl
loopne
cmp
or
fwait
inc
push
iret
xor
stos
insb
jnp
movsb
jae
pop
bnd
ja
cmp
icebp
lock
shll
lret
sub
enter
dec
lock
lret
cs
stos
cmp
or
jmp
call
aaa
cmp
jmp
xorl
mov
rcl
imul
cmp
and
mov
mov
mov
bound
clc
cmc
pop
sahf
bound
mov
lods
jns
ja
sub
les
mov
sbb
fmull
cmpsl
rorb
pusha
fistpll
lea
cli
mov
pop
fdivr
push
jmp
rcll
pop
lret
add
lock
out
mov
xor
mov
jbe
mov
test
stos
and
outsb
popf
orb
clc
pop
and
mov
iret
imull
cwtl
or
adc
jns
cmpsl
aaa
and
bound
xchg
out
ja
push
pop
cli
stos
mov
sbb
sub
mov
bound
jo
in
out
push
dec
cltd
shlb
ljmp
sahf
inc
int3
mov
jns
iret
bound
dec
xchg
xchg
je
ss
ljmp
mov
cmp
pop
sub
call
cld
sti
jge
pop
out
cltd
push
jmp
out
out
pop
xchg
jmp
shl
xlat
and
imul
jl
dec
add
jns
leave
test
mov
push
mov
pop
mov
loop
pop
sbb
out
mov
cmpsl
hlt
pop
outsl
and
inc
xchg
fwait
mov
push
pop
mov
and
and
mov
mov
mov
mov
and
js
or
and
hlt
lret
sub
daa
adc
outsb
or
push
adc
les
mov
push
je
jl
push
fimuls
push
popa
pop
popf
mov
dec
lea
test
mov
xor
jg
jmp
mov
ds
add
ficomps
stos
daa
xor
xchg
xor
aad
mov
add
push
jb
xchg
int3
xlat
arpl
stos
jo
sbb
cmp
sub
stos
xchg
lahf
mov
cmpsl
fldt
stos
js
sbb
push
loopne
mov
xor
inc
jp
loop
lahf
mov
nop
add
jge
std
arpl
dec
sub
mov
cmpsb
aam
aam
fistpll
pop
inc
ja
lods
out
int3
scas
lods
mov
sub
and
sahf
in
int3
int
test
add
lock
frstor
mov
je
mov
mov
jnp
fs
push
pop
out
jmp
mov
lea
nop
or
jp
mov
push
mov
push
mov
mov
sbb
cmp
mov
ret
out
rorb
mov
xor
fiaddl
and
push
sbb
mov
cmp
shrl
jnp
cmpsl
pop
inc
jp
dec
pcmpgtb
cmp
add
nop
out
popa
or
push
sbb
mov
jp
and
mov
pushf
cmpsl
test
bnd
lods
mov
jns
push
or
pop
mov
and
push
daa
mull
ficompl
fidivrl
movsl
lret
aad
aad
dec
cwtl
sbbl
lods
mov
mov
xchg
cltd
loop
jb
and
test
pop
xchg
arpl
pop
jnp
adcl
cmp
jp
sbb
mov
pop
ficoml
fs
inc
insl
push
pop
xchg
xor
pop
arpl
sub
xor
int
mov
insb
add
dec
gs
mov
es
jg
lock
mov
nop
xchg
cld
add
lods
int3
in
and
sbbb
pop
cmpl
or
lea
xchg
fbld
sbb
fprem
mov
bound
loope
insb
jge
stos
arpl
mov
dec
jnp
rcll
mov
ds
subb
mov
mov
push
pop
add
mov
shl
in
dec
popa
xchg
inc
jecxz
test
adc
clc
in
mov
pop
mov
or
popf
and
out
sub
cs
popl
jnp
push
mov
inc
cmp
cmp
push
addb
mov
sbb
in
mov
xchg
xor
aam
inc
sti
xlat
insb
xor
jecxz
bound
in
aaa
imul
in
sub
addr16
xlat
inc
test
jg
rorl
inc
or
aam
sub
stos
fidivl
jge
mov
iret
sub
lods
cmpsb
adc
testl
pop
jae
aas
out
xor
decb
mov
fsubs
dec
mov
ret
in
imul
mov
add
int3
adc
mov
add
inc
lods
popf
cmpsl
push
jae
lret
dec
inc
pusha
stos
sub
clc
pusha
pop
and
jo
mov
sbb
cwtl
outsl
cmp
cltd
xchg
out
cld
mov
orb
pop
jle
shld
mov
mov
lret
mov
pop
clc
jno
mov
ss
pop
ficoms
mov
lahf
mov
jge
xchg
dec
jp
rdmsr
jecxz
cltd
fwait
mov
xchg
sbbl
in
cmpsb
imul
inc
and
movsb
jo
pop
sbb
jle
xchg
dec
fcomps
mov
js
scas
inc
lods
push
inc
mov
imul
mov
pop
dec
aad
test
adc
jno
add
cld
dec
mov
aaa
sub
sub
xchg
aaa
sub
push
add
adc
lods
mov
fsts
cmp
jmp
mov
mov
adc
push
dec
push
into
add
stc
or
in
pushf
loopne
adc
cmp
popa
int
mov
shrb
inc
test
or
sbb
mov
push
pop
call
jmp
bound
add
dec
jae
dec
push
outsb
das
xchg
aas
cltd
arpl
cli
andl
repz
shlb
xor
pop
push
fdivrs
pusha
xchg
je
adc
jecxz
test
fnsave
mov
aaa
adc
hlt
loope
psubw
pop
clc
ret
adc
adc
iret
cli
mov
sub
inc
xchg
repnz
inc
inc
daa
mov
pop
xchg
notl
sbb
mov
fistl
dec
das
sub
inc
mov
and
jae
xchg
sub
scas
addr16
das
fs
and
add
add
subb
mov
in
mov
les
push
ss
adc
pop
fimuls
xchg
jecxz
int3
sbb
mov
arpl
insl
adc
cmp
adc
out
or
stos
aad
enter
dec
lcall
and
xchg
rcl
dec
cmp
mov
movb
std
repnz
or
fchs
enter
jb
push
xchg
out
leave
pop
aam
adc
outsl
adc
int
add
insl
shll
push
lahf
repz
out
cmp
lock
mov
cmp
loopne
icebp
pop
cmp
sbb
ljmp
xchg
dec
push
addr16
outsb
xchg
sbb
idivl
fdivrs
iret
fisubrl
movb
dec
gs
mov
inc
dec
dec
sbb
sti
inc
jno
int
mov
aas
push
or
ret
dec
stc
dec
sub
cltd
adc
mov
jecxz
mov
or
cld
and
jae
into
mov
cmp
test
mov
add
fstpt
push
push
dec
push
mov
sub
pop
pop
pop
lcall
and
fcmovbe
test
fistpl
mov
fcoml
jl
push
fiadds
pusha
push
add
in
pop
push
push
push
push
pop
loop
jno
and
fstps
add
sbb
enter
or
push
cmp
repz
shlb
movsb
xchg
ja
sub
xchg
lret
lea
imul
xor
mov
pop
pop
rorb
enter
lock
mov
fstpt
inc
int
sbb
in
ror
xchg
jnp
add
sub
cmpb
cli
add
ja
mov
and
cli
adcb
in
jp
jmp
mov
int3
or
fs
insl
fistl
repnz
sbb
sahf
stos
repnz
arpl
es
test
xchg
xchg
cmp
fiadds
sub
in
mov
ja
xchg
fwait
cmpsl
sub
enter
cltd
icebp
or
test
fcmove
scas
mov
ss
jle
cwtl
pushf
sbb
mov
pop
iret
cmpsb
sbb
fmul
aaa
dec
mov
mov
fs
daa
cld
sbb
or
gs
shll
lea
mov
jns
lds
mov
jg
test
adc
xor
push
and
pop
jns
ljmp
add
ficompl
outsb
adc
imulb
cmp
cli
in
mov
out
mov
mov
inc
test
cs
mov
ss
pusha
aad
xor
add
ficomps
fs
repz
inc
jne
out
fs
and
cltd
add
pushf
xchg
pop
inc
nop
movsb
inc
cmp
mov
add
stc
les
mov
aam
mov
push
jne
ficoml
bndstx
nop
dec
call
rcrb
icebp
inc
movsl
sbb
jbe
ret
dec
shrb
mov
xchg
cmp
lods
push
ds
sub
fs
xchg
dec
xchg
rcl
and
inc
mov
rcll
or
mov
sti
xchg
pushw
or
adc
movsl
lcall
xchg
mov
int
je
stos
sbb
dec
imul
add
mul
mov
cmp
sbb
inc
repz
mov
lret
mov
mov
jb
lds
mov
rcrl
repnz
xchg
or
lods
rorl
popf
and
pop
movsl
mov
xchg
jno
and
fwait
mov
xor
int3
lods
insl
jmp
xlat
add
divl
sbb
mov
sub
imul
xor
ds
push
lods
sbb
stc
cmp
sub
adc
ja
sbb
xor
outsb
aam
outsl
xor
inc
adc
lret
push
cmp
jp
inc
xchg
das
mov
wbinvd
and
xor
and
and
push
int3
mov
lea
test
scas
mov
test
arpl
jg
dec
pop
pop
inc
stos
pop
lcall
and
inc
pop
repz
add
adc
add
xchg
enter
cli
pushf
lret
addr16
mov
loope
ret
insl
mov
and
popa
push
pop
xchg
les
mov
fsts
push
sarl
repz
je
cld
imul
sub
pop
sub
xor
sub
sub
jb
add
icebp
int3
sub
outsb
sub
lods
mov
push
adc
dec
mov
lods
fldt
fisttpl
fs
in
movsb
mov
jle
mov
push
mov
cs
add
dec
daa
or
insl
f2xm1
arpl
cmp
or
imul
mov
aaa
andb
cwtl
scas
test
out
fisttps
mov
cmp
cmp
dec
cli
mov
scas
push
mov
mov
adc
mov
mov
repz
sub
lar
stc
stc
icebp
xor
add
lret
and
xchg
sbb
call
mov
xor
jno
dec
out
call
fimull
fwait
cmpsb
pop
push
and
rorb
fs
jl
and
stos
arpl
enter
jns
inc
in
inc
inc
push
mov
insb
iret
ja
push
add
fdivs
inc
imul
xor
pop
and
mov
hlt
sub
mov
jp
sub
sbb
out
lcall
push
pop
lods
repz
in
or
mov
lahf
lea
in
fidivl
xchg
addr16
scas
jp
sbbl
mov
subl
mov
mov
mov
das
notb
fidivrs
or
in
push
sbb
jmp
and
ds
push
xchg
or
cli
loope
and
pushf
mov
cmpb
jmp
sahf
jb
mov
cmp
cmpsb
inc
test
js
inc
lret
jb
aad
cmp
inc
stos
and
xor
repz
fwait
adc
stos
lds
mov
rcl
ret
jbe
add
mov
mov
dec
ja
les
push
fsincos
xchg
aam
push
cmpsl
repz
and
addr16
gs
pop
jae
sub
mov
testl
mov
sets
pop
inc
cmp
or
icebp
stc
inc
cmp
in
lds
pop
lods
stc
ret
ficoml
jl
loope
push
aas
adc
mov
cwtl
xchg
jmp
cmc
jnp
pmullw
adc
xchg
adc
outsb
jnp
pusha
jo
xchg
arpl
ljmp
mov
nop
hlt
into
inc
pop
xchg
fs
gs
sbb
shl
xor
sub
mov
insb
fs
cmp
xchg
jbe
and
sahf
pop
cld
jnp
icebp
aas
scas
and
inc
les
or
lcall
push
mov
jae
xchg
shlb
pop
cmpsb
mov
jecxz
mov
stos
enter
jg
insb
or
fstps
sahf
lods
inc
sbb
xchg
mov
mov
add
jne
in
dec
sub
dec
inc
cli
mov
outsl
adc
enter
inc
push
mov
xor
ljmp
push
cmp
scas
push
addr16
jp
bound
dec
rclb
add
xchg
sbb
add
shll
dec
scas
sbb
cmpsl
aam
xor
cmp
mov
addb
and
and
cmp
push
inc
pop
scas
mov
ljmp
dec
int3
add
lods
cmc
mov
inc
inc
and
mov
popf
test
and
add
pop
dec
sbb
fisubrs
adc
fimuls
add
int
adc
and
jle
inc
arpl
xchg
and
les
push
jo
hlt
pop
mov
cwtl
sarl
lcall
mov
orl
mov
popf
test
bound
pushf
shll
add
divb
in
push
out
adc
outsb
push
out
scas
pop
jne
lahf
lea
adc
insb
mov
xchg
jmp
insb
cmp
xchg
inc
and
xor
lods
mov
dec
pushf
orl
add
sbb
mov
in
and
fstl
lret
inc
mov
inc
cmp
hlt
jp
sbb
aam
jp
icebp
xchg
cmc
pop
movsl
aas
mov
sbb
jge
cmp
mov
adc
pop
sbb
ja
jnp
lds
cli
rcll
cld
inc
test
mov
fimull
loopne
mov
clc
xor
add
sub
mov
push
mov
mov
popf
or
enter
outsl
cltd
out
sub
sub
repnz
or
in
jge
ret
push
add
jge
xlat
pop
dec
arpl
dec
xchg
mov
ficoms
aas
cltd
pop
in
enter
testl
push
push
in
mov
testb
jb
int
gs
or
rcr
in
lcall
clc
xchg
mov
andb
adc
mov
ss
sbb
inc
add
imul
sti
fwait
lds
mov
dec
into
or
addr16
xchg
je
enter
jb
pop
sub
mov
pop
and
repz
in
rclb
xor
movsl
fisttps
fistps
aaa
test
push
sahf
movsb
lret
and
push
push
fwait
push
orl
hlt
roll
xor
popa
add
xchg
sbb
ficomps
pusha
cmc
std
jmp
xor
loope
idivl
push
cmpsl
pop
xchg
addr16
popf
pop
xchg
sub
in
aaa
mov
push
dec
dec
adc
sysret
lds
and
movsl
loopne
out
cmp
xlat
pushf
adc
fwait
mov
inc
mov
scas
stos
mov
sbb
jbe
add
movb
outsb
mov
push
jnp
hlt
mov
ja
xchg
sub
daa
mov
sti
and
cwtl
loopne
in
mov
or
push
mov
and
inc
adc
mov
movsb
cmc
scas
sar
popf
imul
cmp
into
dec
cld
mov
in
pop
inc
dec
cmpsb
cli
inc
jo
fstpt
mov
pop
cmpsl
mov
js
pop
mov
repz
test
clc
mov
mov
incl
out
sub
stos
xor
mov
loope
inc
out
aad
arpl
inc
pop
enter
cli
rorb
push
xchg
fiadds
push
sub
dec
roll
fsubrs
in
cmp
shll
adcb
xor
das
fisttps
cld
or
insb
rcl
stc
cwtl
ret
shl
mov
int3
loop
mov
movsb
pop
shl
negl
lret
aam
lcall
push
cmp
adc
xchg
cmp
adc
dec
push
lods
mov
sub
mov
popa
aam
sbb
xor
outsl
and
push
cld
filds
repnz
test
fdivs
shrl
arpl
jnp
cmp
jnp
add
aaa
enter
ror
movsl
popa
fistl
xchg
jmp
ljmp
lods
pop
xlat
fsubrs
lods
xor
idivb
insl
or
mov
mov
dec
adc
and
jno
push
ror
xchg
and
lods
movsl
jg
lcall
push
inc
mov
pusha
add
mov
jge
loopne
mov
scas
and
daa
negl
into
mov
sub
add
orb
xchg
jl
rorl
mov
xchg
mov
dec
shlb
gs
push
iret
popf
jg
jb
int
fmul
and
adc
mov
xor
xchg
sbb
nop
scas
cmp
push
aaa
lea
jns
ds
sub
sbb
icebp
mov
fdivrl
into
ljmp
je
outsl
ljmp
push
hlt
xchg
pop
lods
cmpsb
fdivl
out
in
pop
popf
cli
xchg
jne
imulb
je
imul
rorb
jo
push
xchg
je
mov
cmc
out
and
rcrl
or
mov
aas
xchg
cmpsb
sbb
and
inc
or
adc
out
lods
aam
jae
jge
pop
fisubrs
fmuls
inc
sbb
add
sub
lcall
lcall
ficompl
jne
dec
dec
inc
push
adc
adc
xchg
jecxz
outsb
rclb
dec
add
push
inc
xor
mov
sub
shrl
in
xchg
xor
jae
lods
test
jge
inc
pop
adc
ss
cmp
in
xor
jns
iret
xor
ljmp
in
inc
lods
insb
outsb
cli
xlat
jno
inc
cwtl
mov
int3
inc
or
imul
fs
cmp
lret
xor
cli
es
test
inc
pop
aad
bound
mov
jo
js
push
push
rcrb
adc
push
orb
rorl
cmp
or
mov
cmp
stos
movsb
sub
mov
inc
jmp
sar
jecxz
fs
test
xor
mov
addr16
pop
pop
pusha
cmpsl
pop
add
dec
push
mov
scas
dec
lods
xchg
addr16
aad
scas
iret
lahf
cmp
or
jbe
adc
mov
xchg
or
or
lock
pop
lcall
jmp
fimull
jno
adc
mov
push
sbb
mov
sahf
dec
mov
mov
mov
jbe
into
cld
iret
push
flds
mov
test
dec
pusha
popa
pop
sahf
mov
xchg
adc
jbe
or
inc
in
adcl
addr16
test
add
xchg
pop
xlat
xchg
add
add
movsb
adc
adc
mov
es
popf
push
nop
icebp
loope
addb
mov
mov
loopne
psubusb
mov
es
pop
aaa
jmp
adc
aad
fldcw
lcall
out
sbb
dec
test
jno
cld
das
lods
cmp
enter
xor
jmp
xorb
dec
pop
sbb
pop
popa
push
sti
fs
insb
or
sarb
jnp
int3
pop
test
popa
mov
pop
push
sbb
cmp
mov
fwait
jae
push
adc
xchg
xor
sbb
dec
fidivs
ret
xor
scas
outsb
lds
ja
inc
and
cmpsl
pop
test
sub
dec
push
jg
ss
inc
push
pop
scas
xor
imul
sub
int
cld
push
out
fdivrl
xchg
out
jae
dec
popf
and
fadds
and
cmp
cvtps2pi
aad
push
sarl
dec
in
in
add
lods
mov
push
jle
jns
fistps
push
arpl
sbb
cwtl
add
xor
xor
adc
cli
adc
repz
fcomps
cmp
mov
push
pop
jle
or
mov
jg
xor
in
addr16
add
in
or
mov
jno
xor
fdivrl
js
sub
lods
or
imull
xchg
aam
sub
imul
push
inc
ror
and
test
ret
test
scas
push
rcll
or
mov
out
sub
std
fwait
mov
and
aaa
dec
cltd
int3
mov
xor
lret
jge
pop
and
insb
mov
xor
jnp
mov
dec
xchg
sar
das
mov
movsl
out
movsb
or
inc
iret
inc
adc
stos
out
arpl
sub
and
stos
jmp
xchg
mov
mov
pop
inc
imulb
rorl
cmp
sbb
xlat
sub
pop
push
mov
into
pushf
pop
dec
ljmp
inc
call
cld
outsl
xchg
mov
lock
cmpsl
push
mov
or
inc
adc
cld
cltd
data16
or
sub
sub
sbb
jecxz
cmp
jne
mov
or
add
adc
adc
test
ret
mov
inc
pop
scas
imul
loopne
jecxz
faddp
fmull
sahf
sbb
cltd
dec
popf
push
xchg
cmp
sbb
pop
or
sarb
test
aam
add
cmp
imul
jne
loop
adc
add
or
or
pop
xor
push
int
scas
fildl
sbb
loope
or
pop
sahf
jnp
test
in
into
js
bsr
mov
inc
inc
outsb
es
into
outsb
or
or
ds
push
mov
dec
imul
shl
inc
jnp,pt
pop
adc
and
sarl
movsb
pop
add
add
add
aaa
push
and
push
push
or
cmc
cmp
aad
mov
int
cmp
pop
cmp
xor
xchg
pop
sbb
hlt
lret
xchg
cmp
js
mov
add
mov
orb
popa
and
mov
add
addb
mov
std
sti
mov
ret
shr
call
mov
ss
lock
xlat
icebp
sbbb
cmp
mov
pop
push
aad
add
dec
fdivrl
xchg
insb
dec
fsubrl
loope
pop
jne
loopne
and
jo
dec
mov
test
pushf
ret
pusha
stos
lahf
stos
test
push
add
jne
loop
dec
fs
cmp
xor
push
or
int
add
pop
xchg
fidivrs
adc
ficoml
les
addl
je
cmpsb
xchg
shl
sbb
scas
or
ljmp
lock
mov
lds
pop
insb
mov
pop
mov
xor
xchg
inc
and
adc
xchg
addr16
mov
out
xor
cltd
in
cmp
loop
jno
jo
popf
pusha
idiv
imul
adc
mov
into
int3
push
test
je
movsl
sahf
jp
in
xchg
hlt
push
loopne
push
mov
pop
fs
test
and
jmp
pushf
mov
push
add
aad
and
leave
mov
stc
dec
pop
test
mov
gs
pop
sbb
inc
sub
jle
lds
pop
bound
xchg
aaa
cltd
adc
and
and
mov
mov
sbb
lret
pop
xor
sbb
out
stos
sub
fistps
test
jnp
or
stc
mov
sahf
adc
mov
lcall
xor
lcall
xchg
adc
pop
xor
test
fisubs
or
adc
mov
xor
cmp
stc
in
movsl
pop
dec
fmull
sub
loope
and
xchg
xor
arpl
push
icebp
push
in
leave
jne
mov
hlt
lea
dec
jno
pop
push
fimuls
add
inc
cld
lods
dec
xor
push
inc
nop
sbb
sahf
pop
repz
inc
clc
cmc
mov
sahf
fcoml
mov
jge
pop
xor
in
mov
inc
sub
negl
or
in
mov
push
lds
ret
mov
mov
int3
mov
xchg
sub
and
mov
xchg
pop
xor
inc
popf
int
pop
jnp
sub
pop
out
movsl
mov
dec
and
out
jnp
pop
call
popf
mov
sbb
lods
stos
dec
lcall
dec
adc
and
sub
dec
insb
daa
xchg
xor
jg
push
les
inc
outsl
push
aad
sahf
xchg
jmp
pop
int
jne
test
ja
out
movb
mov
or
test
idivl
outsb
ret
std
push
pop
testb
xchg
inc
sub
lea
imul
pusha
hlt
push
js
mov
lods
loope
inc
fsubl
lods
aaa
mov
test
and
pop
insb
pushf
aad
jns
jns
dec
sbb
loope
mov
cltd
inc
neg
pop
cmpsb
cmc
out
mov
fmuls
xchg
in
lock
mov
adc
jno
mov
mov
sub
fidivrs
lcall
fadds
jecxz
sub
sbb
inc
or
dec
dec
push
xor
cmpsb
mov
fadd
mov
jge
xchg
ret
cmp
loop
std
popa
lahf
rcll
rep
adc
je
push
stos
loope
push
xchg
pop
jmp
add
repnz
data16
aam
jle
enter
mov
jbe
scas
pop
out
imul
dec
in
lret
pop
insl
lret
testb
pop
pop
pusha
cmp
jo
stc
rolb
cli
jl
xor
push
mov
jle
and
xor
cld
mov
adc
call
jbe
test
xlat
pop
sar
fcmovbe
sub
or
xor
cltd
jecxz
mov
add
jp
call
je
incl
and
clc
ror
cli
mov
or
out
lcall
mov
cmp
jg
shrl
xlat
shl
xchg
call
dec
mov
pop
adc
lods
xlat
adc
pop
mov
stos
pop
adc
dec
movsb
lods
jl
aad
dec
mov
popa
rorl
and
push
sbb
daa
push
insl
mov
out
movsl
imul
in
enter
mov
xor
icebp
cmc
arpl
adc
ret
fisttpll
insb
jmp
cli
fbstp
retw
jmp
stc
cs
jbe
push
out
iret
test
dec
fcompl
jge
jmp
dec
lret
xor
in
add
stos
sub
pop
sub
call
loopne
sub
or
mov
popf
mov
xor
jae
sti
xor
mov
jle
cwtl
outsb
mov
inc
jb
inc
mov
test
jmp
fwait
inc
jge
in
sbb
mov
fbld
mov
xor
in
dec
sbb
in
sub
cmp
dec
sub
pop
adc
arpl
mov
pop
adc
mov
mov
push
sbb
mov
into
aam
inc
bound
or
inc
shl
mov
inc
es
add
sbb
or
lcall
jbe
push
xor
jmp
or
pop
cltd
ficompl
jge
sahf
fwait
sub
push
jge
jle
mov
icebp
mov
xlat
lret
adc
adc
mov
mov
mov
jno
gs
arpl
paddd
bound
xchg
push
adc
stos
int3
inc
stos
loope
jmp
mov
push
andb
movsb
icebp
dec
mov
loop
rcrl
lret
repnz
sub
ficoms
bound
cmp
add
sbb
das
jbe
cs
lods
pop
je
test
cld
mov
mov
ret
dec
and
mov
lods
loopne
mov
adc
inc
jg
cmpsl
xor
push
aas
pop
insl
or
ret
add
call
loopne
pop
sbb
push
daa
and
int
aam
pushf
sub
pop
rcpps
dec
pop
aaa
test
sbb
lock
gs
mov
mov
mov
cld
mov
shrb
nop
movl
test
cmp
pop
ja
jle
adc
mov
mov
popf
xchg
xchg
stos
inc
out
xchg
popa
mov
bound
cltd
jg
test
mov
jbe
sbb
push
stc
pop
mov
rorl
pop
mov
xchg
fldenv
lret
mov
mov
sub
pop
js
int
cwtl
add
adc
mov
out
adc
mov
mov
aas
std
push
cmp
mov
pop
ret
pop
inc
sub
fildl
lods
enter
dec
in
mov
faddl
sbb
push
test
jae
sbb
lahf
sub
adc
out
je
cmp
jb
in
icebp
push
xchg
xchg
mov
cltd
jp
mov
stc
adc
out
stc
ss
mov
jo
mov
fistpll
mov
loop
hlt
iret
addr16
fwait
stos
dec
int3
std
out
mov
add
adc
pop
mov
mov
mov
or
xchg
imul
sub
les
add
pop
mov
loopne
lahf
mov
lcall
sub
stos
or
xlat
push
pop
scas
in
gs
push
test
int
jecxz
int
sub
mov
adc
xchg
test
hlt
cmp
out
roll
scas
hlt
sub
mov
lret
or
cltd
dec
mov
push
push
movsb
aaa
push
out
inc
ret
jb
adc
out
add
lahf
cmpsl
push
and
cltd
and
push
in
mov
rolb
pop
ret
cmp
pop
fisubrl
addr16
aaa
out
jne
je
mov
push
dec
add
mov
lock
movsb
outsb
ljmp
lods
xor
mov
xor
dec
loopne
imul
push
jnp
imul
mov
jg
push
cmpsb
add
xchg
push
cmp
fs
dec
push
mov
sbb
lds
sbb
stc
add
mov
lret
ret
inc
das
pop
out
sub
fwait
lock
test
cli
dec
lret
in
xchg
imul
mov
push
jle
insl
mov
popf
imul
xchg
xor
cmpsl
out
sbb
inc
imul
sbb
or
ds
or
scas
ret
aaa
xchg
int
in
mov
stos
sub
add
jb
jg
adc
push
insl
int
mov
in
pop
mov
ror
cmp
inc
push
inc
jb
inc
mov
out
push
inc
movsb
push
stos
pop
rcrb
lcall
out
jo
ret
mov
popf
cli
cmp
inc
fstps
and
jnp
mov
clc
dec
push
into
enter
gs
or
jns
outsl
lfs
jo
add
std
push
or
shrl
dec
sub
jle
out
jge
insl
daa
dec
aad
xchg
testb
cmc
gs
xor
xor
addl
push
or
lahf
mov
or
add
inc
ja
cmp
sbb
test
or
push
fs
sbb
jmp
adcl
insb
sbb
sbb
lret
jge
dec
dec
dec
cltd
mov
sub
repnz
inc
xchg
adc
and
out
stos
cmp
xchg
jge
cmp
xchg
sbb
aas
pop
sbb
jb
inc
mov
or
cmpsb
fnstcw
jbe
sub
in
fisttps
je
mov
aas
push
ljmp
bound
js
out
in
and
xchg
inc
push
hlt
cmpsl
mov
flds
and
in
mov
dec
cld
jp
or
loope
dec
clc
aas
int
fsincos
jle
cmp
in
and
clc
jno
inc
pop
cmp
add
jecxz
inc
adc
es
es
enter
pop
cmp
push
fadds
aam
and
jb
mov
pop
and
stc
push
outsb
mov
nop
add
sub
mov
aaa
cmpsb
push
xchg
sub
pusha
add
es
xor
rorl
or
sarb
adc
cmp
adc
mov
push
sbb
cld
mov
ja
add
jmp
and
dec
mov
pop
mov
sbb
cmp
xor
rorl
fdivs
dec
andb
mov
jne
push
jns
inc
or
inc
jl
lahf
out
cld
test
aas
mov
xchg
adc
lods
aad
push
sbb
repz
cwtl
cld
lods
sti
xchg
test
inc
jns
push
jne
sub
in
out
lods
aaa
sub
and
stos
push
xor
fs
mov
test
mov
pmulhw
push
xchg
call
movsl
mov
inc
int
aad
cltd
shll
cld
test
hlt
xor
stos
mov
in
xor
cmp
pop
add
jae
jle
mov
repnz
clc
hlt
aaa
sbb
xchg
es
jp
cmpl
arpl
add
inc
pop
inc
mov
mov
cwtl
mov
into
adc
jo
xchg
jbe
inc
push
and
nop
loope
loop
adc
dec
les
sbb
iret
repz
daa
add
mov
adc
mov
push
outsb
pop
cmp
roll
or
sub
or
idiv
add
ds
cmp
cmp
fadd
or
cmp
jno
loop
mov
pop
cs
push
xsha1
cmpsb
int
jge
mov
inc
xlat
mov
cltd
xor
cmpsl
xchg
jecxz
jne
inc
mov
mov
mov
jge
call
pop
adc
push
inc
mov
das
mov
loopne
shl
push
pop
clc
fs
cli
jmp
imul
lcall
add
clc
mov
jo
jle
in
xchg
cmp
je
pop
xor
sbbb
cmp
iret
or
mov
mov
dec
inc
test
xchg
scas
jge
outsl
xor
or
call
pop
jne
pop
jo
sahf
test
cli
repz
push
sub
dec
mov
outsb
fsubs
or
sahf
jecxz
jle
add
rolb
lret
adc
imull
pushf
out
sub
add
mov
aaa
or
pop
and
out
inc
jb
xchg
dec
fcmove
or
aaa
xor
mov
and
out
arpl
and
int
popf
in
sub
fnstsw
push
fdivs
loopne
inc
cmp
mov
gs
call
or
fsubrs
inc
lcall
push
cmp
fs
test
push
pop
arpl
add
add
or
cs
ljmp
mov
je
cwtl
cmp
pop
mov
je
rcll
push
cmp
int
and
xchg
mov
xchg
mov
decb
push
mov
nop
cwtl
cmpsl
inc
addr16
cli
pop
popf
xchg
pushf
push
add
loop
inc
pop
enter
fsubrl
xor
inc
mov
xchg
lock
push
adcb
push
sbb
xchg
mov
mov
test
iret
lcall
fs
jne
xchg
pop
and
fdivp
dec
fmull
push
int3
add
stc
imulb
pushf
ret
outsl
rcr
sbb
cmpsb
xchg
rol
imul
add
out
aam
loopne
dec
bound
mov
cs
mov
movq
xchg
pop
and
mov
or
mov
mov
xor
fwait
lds
sbb
inc
inc
adc
xorl
mov
in
dec
cli
cltd
mov
stos
push
sahf
imul
sbb
mov
push
aas
push
sbb
xor
insb
lods
leave
out
dec
jp
xor
mov
mov
add
jle
dec
jmp
jno
lcall
and
out
push
xor
xchg
push
pop
jecxz
jo
mov
das
mov
and
inc
outsb
stos
pop
std
repnz
sti
jns
in
adc
imul
lret
fsts
jno
cmp
sti
pop
mov
adc
push
repz
xchg
push
sub
subl
pushf
repz
ret
mov
mov
flds
cltd
std
fcmovnbe
rcl
popf
lret
mov
xchg
mov
jle
mov
and
pusha
notb
mov
mov
dec
repz
jns
stos
dec
mov
push
and
neg
stos
mov
test
mov
push
mov
mov
fld
shlb
cmpsb
and
into
jmp
jecxz
mov
push
mov
push
and
stos
fistpll
sub
jb
stos
data16
jg
mov
mov
fistps
out
ret
jmp
mov
cli
cmc
cmpb
pop
push
add
sbb
sahf
xor
icebp
dec
clc
sub
xor
and
add
adc
inc
adc
or
cs
in
scas
int
imul
mov
shll
cli
jp
mov
xor
data16
loopne
or
and
icebp
test
or
jne
popf
in
add
push
xlat
mov
inc
or
pop
mov
jmp
pop
loop
push
out
dec
adc
mov
test
or
aaa
push
dec
ret
call
mov
push
neg
nop
cli
xchg
jl
daa
or
push
push
movsb
cmp
push
inc
pop
repz
mov
sbb
pop
push
nop
and
push
cmpsb
xor
in
cmp
mov
cmpsl
shlb
inc
stos
cmc
lea
daa
lock
hlt
clc
jne
std
add
sbb
mov
pop
lcall
push
or
add
enter
mov
mov
int3
mov
clc
shlb
and
ret
ja
jb
test
push
push
mov
jo
mov
xchg
or
adc
mov
xchg
stos
or
sbb
mov
cwtl
comiss
loopne
jo
sbb
pop
mov
add
ret
adc
jno
fstpl
xor
jg
fwait
sbb
mov
mov
cld
add
movsl
mov
mov
out
pop
mov
cs
xchg
sbb
jmp
push
jns
or
or
icebp
sbb
and
push
outsb
ja
ret
jno
ret
cmp
or
jge
mov
xchg
bound
dec
and
mov
cmp
bound
mov
cmpsl
das
les
repnz
cmp
scas
bound
sub
sub
rcll
mov
scas
or
dec
ret
rcr
movsb
mov
inc
dec
jbe
fistpll
fstpl
enter
test
out
fnstenv
mov
sbb
push
xchg
rcll
jl
cmc
add
jae
iret
lret
push
repnz
cmp
repz
pusha
cmp
sbb
repnz
jne
mov
sahf
cmpsb
mov
jne
dec
pop
movl
std
pop
js
lahf
stos
mov
push
push
pop
jo
mov
cmc
mov
stos
mov
repz
inc
movsl
into
mov
cmp
popa
dec
cmp
aad
imul
adc
call
es
shlb
mov
cmp
lcall
lcall
xlat
sub
pop
mov
incb
cmp
push
jecxz
fsubs
mov
loope
pop
aam
or
xchg
jne
sub
clc
sub
jne
adc
cmp
or
jecxz
mov
cltd
mov
push
test
add
pusha
xchg
mov
test
pop
sub
add
rclb
mov
es
xchg
mov
add
ret
xchg
out
inc
or
sbb
add
popf
mov
aad
jns
hlt
in
inc
or
or
dec
xchg
cmp
arpl
or
aas
jne
adc
sbb
aas
data16
mov
enter
daa
dec
loop
imul
jo
insb
loopne
aam
mov
inc
mov
shrb
sub
adc
mov
mov
mov
test
hlt
dec
adc
div
lock
out
out
pop
jb
cmp
cmp
cmp
sbb
shr
mov
aad
cmp
mov
lret
subl
sub
je
cmp
out
cmp
xchg
pop
or
fsubrs
jbe
nop
push
fwait
jmp
cmp
xor
pop
aas
inc
outsb
mov
bswap
gs
lods
push
sbb
in
aam
sbb
mov
cmpsl
jp
loopne
ja
xor
sbb
xchg
add
stos
xor
pop
ds
divl
push
xor
clc
cmp
outsb
fmuls
cmp
stos
movsb
lahf
sti
popf
ljmp
sbb
mov
fildl
orl
out
sbb
adc
pushf
mov
daa
push
bound
pop
fcomps
mov
call
mov
dec
aas
test
push
xchg
subl
insb
sub
or
popa
into
sub
repnz
dec
xchg
jo
repz
push
push
cmp
xor
hlt
xchg
sbb
xor
stos
push
imul
aad
cmp
cmpsb
insl
subb
test
fidivrl
leave
leave
push
adc
ficomps
rcl
cmp
lods
dec
jle
jmp
adc
pop
sbb
inc
repnz
in
nop
lret
xor
inc
insb
jmp
popf
fisubl
pop
lods
push
arpl
adc
outsl
xchg
pop
popf
popa
jmp
pop
mov
mov
and
adc
loop
push
icebp
jae
divl
xor
xlat
jno
adc
and
push
pop
lods
sbb
sti
loop
adc
std
icebp
or
sub
enter
push
call
fucomp
ret
in
aad
push
xor
xchg
adc
int3
or
in
or
js
lahf
dec
dec
cmp
outsb
sbb
cld
pop
enter
fidivl
add
sbb
push
mov
std
mov
lods
jno
mov
xchg
jp
pop
or
push
shlb
test
jbe
dec
js
fdivs
jecxz
mov
fsubl
lcall
inc
mov
notb
push
pop
fs
adc
shlb
inc
ljmp
call
stos
data16
xor
hlt
mov
sbb
lret
in
out
cld
lea
cmp
loope
mov
loop
ficoms
add
mov
inc
dec
jl
fnstcw
dec
rcrl
fbstp
cmpsb
push
aam
aaa
adc
addb
out
xlat
push
sub
fdivs
scas
out
mov
pop
cmpsb
lea
push
mov
add
dec
mov
cmp
div
push
aad
out
dec
sbb
enter
cmpsb
cmp
int3
outsb
hlt
cmp
adc
or
movb
loopw
int
jae
leave
mov
mov
and
lcall
sbb
int3
call
and
sub
or
pop
jp
aad
fs
xor
dec
xchg
ljmp
nop
out
pushf
rolb
cmp
fldcw
sub
sti
in
ret
imul
lea
sub
xchg
mov
inc
xorl
in
orl
add
mov
mov
fwait
lods
dec
inc
push
sbb
mov
mov
mov
xor
leave
cmpl
mov
lret
adc
arpl
gs
daa
std
stc
stos
jne
and
adc
mov
mov
jnp
dec
jbe
fistpll
insb
cmp
repnz
adc
enter
jp
dec
std
fs
push
mov
and
repz
jl
push
add
pop
in
mov
addr16
movsb
test
jle
shrb
int3
dec
pusha
movsl
jne
adc
lret
fbld
pop
mov
cmp
inc
out
mov
pop
gs
or
or
pop
fistpl
jg
lods
cli
inc
xor
aaa
std
push
and
pop
in
mov
sbb
stc
je
cmp
frndint
dec
pandn
dec
dec
mov
adcb
mov
jmp
mov
jmp
out
outsl
fcmovnu
fdiv
test
push
inc
pop
leave
push
push
inc
cmc
out
loop
in
sub
adc
enter
xor
int3
sbb
shl
mov
and
xchg
loope
and
ljmp
xchg
adc
and
movsl
rorb
outsl
outsb
into
test
std
dec
cwtl
push
xchg
popf
fsubr
rorl
jp
pop
aad
std
sbbb
gs
adc
add
hlt
pop
loop
mov
js
mov
xchg
ljmp
aam
repz
es
inc
or
and
arpl
icebp
pop
filds
cmp
mov
or
repz
and
rol
arpl
addr16
cmp
add
int
lret
out
adc
fcmovb
inc
push
push
push
mov
xchg
outsb
test
cmp
lret
and
repnz
mov
bnd
pushl
jnp
push
xchg
mov
sbb
scas
sub
dec
push
mov
decb
mov
pop
std
jnp
push
mov
xor
sarb
mov
out
dec
bound
in
scas
xchg
mov
push
xchg
push
inc
jbe
sbb
setnp
enter
xchg
es
xchg
mov
cmpb
shlb
jns
inc
sub
xchg
sub
pop
adc
aad
out
imul
xorl
sbb
cmp
adc
adc
mov
orb
in
dec
fnsave
fdivrl
loopne
out
ret
and
or
bound
fldt
pushf
jg
vpshad
and
xchg
fwait
int
pop
sbb
or
clc
add
sbb
cmpb
std
subl
inc
dec
test
test
xor
aad
mov
mov
mov
iret
lods
sbb
cmp
out
jmp
hlt
hlt
sbb
mov
cmp
sti
push
dec
into
addl
adc
mov
data16
out
ror
sti
insl
lds
dec
xchg
or
or
insb
cmp
ds
call
jno
dec
add
js
rol
and
inc
xlat
repnz
testl
shr
dec
insb
pop
lds
stos
int3
mov
dec
negl
push
mov
icebp
ss
pop
clc
adc
cltd
loopne
sub
cmp
lods
mov
jo
insl
lahf
push
sahf
lret
cmp
cld
pop
mov
popf
push
pushf
sub
or
or
sub
or
mov
sub
xchg
lcall
bound
out
hlt
sbbb
cmp
aam
insl
and
pop
push
dec
ja
or
movsb
cmp
push
in
je
mov
pop
lret
mov
fisttpl
rcr
pop
bound
outsb
inc
mov
jmp
dec
imul
sbb
xchg
out
dec
fcoml
lgs
aas
cmpsl
pop
les
mov
push
lcall
pop
hlt
mov
jae
movsl
adc
cmp
fimuls
xchg
and
les
push
sbb
mov
incl
jmp
sub
inc
push
and
mov
cmp
mov
push
inc
lahf
pop
fsubrs
pop
jecxz
sbb
outsb
fldenv
dec
and
or
fcmovu
jns
test
adc
pop
inc
test
cmp
imul
add
insl
jae
inc
push
cmp
fildl
or
filds
add
enter
sbb
xor
sub
jo
mov
ljmp
pop
and
das
pop
push
sub
adc
inc
mov
add
or
testb
ret
cli
jo
and
mov
mov
mov
imul
xlat
inc
ffree
xchg
xor
dec
inc
push
pop
pop
test
sbb
sti
xor
cwtl
cmp
adc
mov
fnstcw
pusha
push
pop
lds
cmp
or
aad
scas
xchg
inc
adc
int3
jae
add
cmp
fists
movsb
mov
pop
cltd
bound
and
lock
inc
repnz
and
jp
repnz
fisubl
or
ljmp
push
cmp
adc
loopne
inc
xchg
mov
inc
inc
push
sub
cmpsb
pop
cmp
jl
ja
mov
push
int
and
pop
pop
mov
cld
add
mov
push
and
popf
lods
das
jecxz
test
sbb
int
xchg
and
mov
cwtl
movsl
jle
icebp
test
dec
fstpl
imul
jl
jno
push
and
in
imul
xor
xor
xlat
cmp
inc
mov
mov
dec
dec
insl
xchg
mov
repz
test
xchg
xor
cmp
nop
cmp
xor
hlt
enter
xor
and
jb
cwtl
jae
das
jo
mov
dec
dec
mov
sbb
iret
roll
push
adc
dec
adcb
xchg
ja
aad
push
xorb
clc
mov
filds
mov
pop
fldcw
pop
push
fs
cmp
mov
pop
fcomip
push
xchg
test
inc
es
mov
pop
test
loopne
outsb
scas
call
push
push
hlt
add
jmp
ljmp
mov
push
test
inc
stc
shl
adc
fidivl
in
mov
lret
cmp
or
or
mov
xchg
shll
pushf
imul
mov
xor
push
pop
jb
dec
mov
xor
xchg
je
or
add
cmp
xchg
movsb
stos
xor
xchg
mov
push
loopne
sbb
test
sub
test
xchg
pop
icebp
out
add
test
ljmp
sbb
mov
ret
int3
cmpl
iret
dec
fisubl
out
pop
call
gs
icebp
in
cli
add
lods
jns
mov
fisttps
jne
push
inc
test
adc
adc
cmpsl
addb
dec
push
data16
or
mov
pop
jae
inc
push
shlb
leave
ficomps
aad
xchg
or
outsb
cmp
jmp
push
pop
dec
mov
fld
jns
mov
nop
test
popf
push
or
and
cmp
loop
pop
mov
out
dec
out
cmpsl
hlt
pop
icebp
cmp
bound
add
mov
or
leave
inc
iret
or
shr
mov
jmp
cmp
cltd
pushf
sahf
test
stc
jmp
inc
xor
pop
and
add
lcall
les
adc
push
lods
loop
cs
lea
sbb
and
dec
pop
jmp
in
pushf
pop
adc
mov
and
mov
and
int3
xor
movsb
jbe
xor
sahf
inc
sub
lcall
in
out
dec
lds
jne
jp
adc
out
fiadds
je
fbld
pop
push
popa
lods
mov
sbb
sub
ffreep
fwait
push
add
mov
insl
ja
and
cmpsl
jle
inc
mov
jbe
lea
mov
sub
sbb
fisttpl
in
and
push
and
lds
mov
fildl
lock
aam
mov
mov
jle
popf
js
adc
xchg
dec
xor
or
mov
movsl
scas
imul
cmpsl
rcrl
inc
fstpt
cmpb
mov
add
lods
dec
ja
or
adc
jne
push
jmp
sahf
mov
push
jb
push
mov
imul
shrb
dec
fidivrs
sbb
and
or
adc
std
adc
test
sti
mov
jg
sbb
insb
inc
mov
aad
imul
mov
jg
cmpsb
int
loop
mov
mov
les
lock
xlat
or
lods
incb
fcomps
imul
data16
or
jb
pushf
sti
pop
ljmp
into
dec
jns
sub
sahf
adc
loopne
xchg
add
into
fcompl
cltd
push
mov
movsb
jle
leave
jnp
pushf
loope
aad
test
int
call
mov
enter
ds
cmp
xchg
test
and
aaa
sbb
out
cmp
es
push
in
jp
jo
xor
fistpl
nopl
mov
pop
enter
mov
subb
outsl
mov
ret
pop
pop
push
das
fmull
xor
loop
std
pop
enter
add
and
imul
lock
insl
xorl
out
outsl
jmp
jae
ret
addl
fisttpl
dec
and
adc
push
or
push
xor
push
xlat
fistpl
jno
xor
ljmp
pop
out
lea
in
jmp
sbb
into
adc
xor
mov
test
in
pop
cltd
outsl
or
mov
test
pop
andl
mov
push
adc
inc
sarl
push
inc
in
sbb
pop
lds
mov
xchg
pop
fs
cmp
pop
jnp
sbb
pop
sbb
or
out
pop
daa
inc
xor
mov
jbe
jno
insl
sub
lahf
loop
mov
adc
push
stc
cmpsb
pushf
or
cmp
xor
fldenv
push
mov
dec
xcrypt-ecb
cmpsl
or
mov
xor
insb
mov
mov
into
repz
mov
dec
cmp
lahf
push
dec
or
js
push
mov
pop
arpl
push
test
xlat
pop
je
outsb
sbb
movsb
movl
pop
jo
mov
pop
popf
icebp
and
leave
xor
shll
inc
add
rorl
mov
divb
push
cmp
cmp
popa
loope
repnz
pop
inc
js
mov
out
mov
clc
push
sbb
adc
jae
mov
popf
inc
jae
mov
xchg
pop
shll
cwtl
imul
xchg
scas
or
iret
shlb
popa
adc
inc
lcall
adc
cmpsl
in
sbb
xchg
out
jmp
dec
pop
mov
lea
xor
fcmovb
repz
sahf
lret
add
mov
adc
cmp
sbb
xchg
dec
enter
xor
adc
stc
jecxz
popa
movsb
and
movsb
fisttpl
test
inc
call
mov
pop
in
je
ret
xor
fisubl
push
mov
sbb
cltd
push
mov
enter
xor
jbe,pn
mov
leave
jb
sub
cli
je
dec
dec
out
bound
mov
lss
insb
push
dec
jmp
mov
sbb
clc
inc
lret
mov
jmp
xor
cmc
pop
xchg
mov
pop
js
popa
cs
shll
jae
rcrb
iret
in
jnp
fwait
xor
mov
mov
int3
xor
adc
mov
roll
pop
and
jnp
mov
sahf
out
cmp
mov
outsb
jg
movsl
mov
add
repz
fs
jecxz
pop
lods
or
add
lods
stos
xor
lea
mov
xchg
in
push
in
mov
push
out
pop
je
lea
pop
pop
into
test
push
add
mov
sbb
pop
sub
fisubrs
jne
dec
pop
push
pop
dec
lcall
push
fmul
ret
sbb
sbb
xchg
mov
arpl
mov
je
leave
loop
sbb
leave
or
popf
or
shrl
mov
mov
pop
ds
dec
mov
jo
adc
mov
sbb
call
add
mov
xchg
in
jl
loopne
fstl
ret
pop
frstor
filds
stos
xor
add
movsl
cmp
inc
xchg
xor
xor
mov
cmp
fidivrl
popf
push
or
sbb
es
mov
add
push
add
testl
inc
xchg
nop
sub
setbe
jno
jmp
jbe
test
adc
leave
adc
mov
pop
xchg
or
pop
pop
int
cmp
aad
jbe
cld
in
dec
pop
loop
stos
sbb
cmpb
leave
jp
jb
int
daa
cmp
cmp
adc
rolb
pushf
xor
sub
je
push
push
rcl
cmp
loop
mov
nop
iret
ja
inc
iret
pop
clc
std
jmp
adc
cmp
jno
cltd
jnp
pop
repnz
xor
pop
clc
push
aaa
aad
dec
sbb
inc
out
imul
es
add
loop
js
repz
mov
stc
xchg
mov
lcall
push
enter
outsl
xor
and
sbb
pop
ljmp
mov
adc
jp
xchg
stos
xchg
rcrb
mov
mov
idivl
stos
clc
xor
or
pop
incl
add
int
jl
int
jb
mov
mov
into
adc
fidivrs
das
es
add
shll
enter
push
jb
popf
daa
pop
or
pop
aas
xchg
mov
inc
push
dec
ljmp
les
jae
xchg
stos
and
dec
retw
inc
sub
cmc
fldt
mov
bound
aam
hlt
stc
inc
sub
push
jle
push
sub
xchg
aam
push
aaa
lods
jmp
lahf
aas
xchg
sub
cmp
xor
add
leave
adcb
jb
inc
jno
rep
pop
mov
cli
push
sti
shlb
sarb
bound
loop
icebp
jns
fs
jae
ret
jne
xchg
outsl
mov
sbb
lods
cltd
xchg
into
icebp
es
arpl
out
xor
mov
mov
mov
mov
test
scas
lcall
add
cmp
push
addr16
aad
xlat
test
adc
push
inc
add
in
into
cmc
daa
xchg
xor
cmp
adc
sbb
push
stc
push
lea
cmp
lcall
ficoms
lret
dec
stos
ja
insb
test
mov
pop
sbb
nop
jmp
jge
cwtl
shl
cld
jnp
ja
push
fdivrs
jmp
pop
mov
daa
arpl
cmc
dec
jmp
je
int
xchg
mov
mov
imul
aas
sub
jo
fbld
mov
roll
pushf
dec
andl
bound
pop
insl
ja
nop
scas
ss
ss
dec
xlat
push
xchg
push
pop
jns
jae
out
insl
roll
mov
and
in
testb
shll
mul
test
sub
repz
lcall
push
or
xor
std
xor
xor
stos
cwtl
clc
dec
fmull
repnz
jmp
and
inc
andb
mov
andb
mov
orb
push
pop
inc
and
out
jp
popa
jno
scas
jecxz
sbb
call
push
and
cmpsl
add
ja
inc
inc
xor
xchg
sahf
push
sbb
and
cmp
clc
lods
bound
lcall
mov
sub
cmp
stos
jge
lea
add
mov
mov
push
jb
xor
loope
jecxz
daa
sub
jp
sbb
lret
test
sbb
mov
and
inc
pop
dec
popa
cmp
add
testl
mov
push
arpl
xor
es
repz
mov
cltd
decb
xlat
ret
jnp
stc
sub
lahf
fistpll
pushf
enter
jp
scas
pop
mov
mov
pop
xlat
sbb
pop
xchg
outsb
mov
mov
fiaddl
jg
and
push
jno
icebp
pop
dec
dec
xchg
pop
sbb
orb
xchg
imul
push
ja
in
in
outsb
out
dec
arpl
mov
jg
movsl
lret
sub
mov
xor
mov
jo
and
push
pop
pushf
pmuludq
sbb
out
cli
xchg
lods
pop
dec
jno
shr
icebp
push
push
daa
dec
pop
inc
xor
jnp
pop
int
xor
js
lock
jmp
xchg
jno
sbb
xchg
lods
je
mov
mov
rolb
stos
test
mov
insl
adc
adc
lods
aas
pop
mov
rolb
aam
popf
adc
jnp
sbb
adc
mov
or
iret
or
sahf
out
clc
out
inc
out
mov
sub
clc
lods
fiaddl
adc
mov
pop
pop
loopne
inc
xlat
push
sbb
movsb
cmp
jp
sti
loopne
mov
clc
ds
sub
dec
push
add
cmp
inc
mov
pop
lods
lea
ss
sub
ss
push
hlt
dec
and
xchg
xchg
gs
mov
push
arpl
leave
out
frstor
mov
rorl
iret
fwait
or
mov
movd
stc
ret
sub
call
add
out
xchg
push
lock
test
or
mov
je
add
stos
and
repz
repz
push
test
xchg
mov
js
mov
push
adc
jo
jp
add
das
loopne
sbb
xchg
add
jno
ficompl
dec
mov
nop
push
addr16
jne
xor
decb
inc
loop
daa
std
or
jp
mov
aaa
or
mov
lods
xor
jp
adc
popf
sub
add
mov
xchg
pop
add
and
loope
or
call
lret
int
pop
mov
out
aam
jne
rorl
cmc
dec
mov
loopne
push
mov
sub
jbe
cmp
iret
adc
sbb
imul
xor
not
cwtl
jno
pushf
pop
mov
mov
mov
mov
out
push
jle
rolb
in
cmpsl
push
and
gs
xchg
or
out
mov
and
fwait
push
pop
cltd
addr16
or
fiadds
and
dec
xchg
or
loopne
add
js
cmp
sahf
push
xor
sbb
sbb
mov
sub
int
mov
push
ds
movsl
xor
jo
repnz
xchg
test
cmp
pop
mov
push
ret
xor
inc
or
mov
mov
in
loop
xchg
addl
mov
jp
gs
inc
setns
or
in
sbb
negl
lret
lock
adc
repz
mov
adc
xchg
dec
jg
jecxz
lods
dec
loop
mov
mov
jno
arpl
jae
mov
jmp
inc
movsl
aad
or
fcmovnb
out
outsl
push
or
mov
mov
jecxz
mov
fcom
test
insl
fistpll
xchg
and
xor
aad
adc
mov
or
and
mov
rclb
gs
and
fstpl
inc
lret
roll
cmp
add
repz
pop
jno
scas
sbb
push
rcrl
dec
and
dec
and
pavgw
ret
loope
repz
pop
pop
ret
or
mov
fisttpll
sbb
scas
int3
sub
sub
add
out
fildl
dec
or
xlat
stc
sbb
inc
out
mov
lret
pop
cmpsb
or
mov
jno
into
mov
xor
cwtl
outsb
push
stos
aam
es
out
or
loop
sub
and
aaa
cmp
and
jnp
inc
daa
lret
sub
and
sbb
ficomps
xor
mov
cli
mov
sub
je
test
mov
sub
or
jne,pt
lret
aaa
sbb
add
lret
mov
sti
push
sub
dec
shl
mov
add
inc
push
dec
insb
inc
add
mov
xchg
out
inc
call
in
mov
es
dec
cmpsb
fldenv
xor
imul
cmpsl
sbbb
push
and
jmp
and
leave
push
insb
sub
jae
scas
cmp
xchg
je
mov
or
jbe
cmpsl
jno
lcall
lds
dec
add
shrb
or
or
mov
dec
push
jg
jns
std
fbstp
cmpsl
jo
lret
xchg
xchg
and
fisubrs
push
scas
mov
push
jne
ljmp
fwait
mov
inc
mov
push
shr
mov
add
xchg
sub
add
loope
inc
and
and
adc
std
cs
cmpsb
test
jnp
out
nop
in
push
fnstenv
cmp
imul
xchg
in
out
nop
xchg
scas
gs
loop
adc
das
dec
jnp
lods
sbb
repnz
in
in
das
add
mov
jmp
fwait
pop
mov
inc
rclb
xchg
mov
xchg
test
inc
jmp
cmp
clc
lret
jle
push
test
mov
pop
mov
fldt
add
cld
xchg
in
loope
adc
or
push
xlat
push
jnp
dec
pushf
mov
leave
cwtl
movups
les
mov
test
jno
pop
adc
sbb
je
clc
sbb
int3
jne
xchg
fnstcw
pop
cmpsl
push
fiaddl
sub
pop
mov
cmp
fidivl
mov
mov
in
sbb
and
bound
xchg
xor
sbb
sarl
jge
stc
mov
inc
xchg
jle
mov
insb
pop
negl
adc
push
adc
mov
cltd
add
pop
mov
sub
stos
xchg
mov
push
xor
adc
mov
jl
mov
mov
lret
adc
ja
jg
push
xor
xchg
mov
outsb
sbb
adc
mov
dec
insl
adc
inc
in
cmpsb
cmp
mov
hlt
inc
es
lock
sub
daa
lcall
sbb
jnp
mov
in
mov
mov
addl
test
add
mov
fcompl
mov
or
pop
aam
movsl
adc
test
out
or
push
popf
adc
dec
mov
fnstcw
add
call
sub
shl
jmp
pop
popf
mov
icebp
leave
ja
sbb
sub
roll
cmp
jle
inc
lret
call
jmp
gs
sahf
mov
mov
sbb
pop
rclb
or
fs
fisubrl
mov
jmp
jns
inc
add
inc
xorb
int
ret
fistl
bound
out
xor
pop
xchg
mov
push
sbb
clc
adc
xor
or
cmp
movsl
enter
pop
cmpsb
push
lds
cs
inc
std
vmovapd
push
fbld
xor
pop
mov
or
cmp
add
cmp
scas
ja
stos
add
sbb
jecxz
and
lahf
comiss
mov
jecxz
push
insl
mov
push
xor
mov
sbb
xchg
pusha
jbe
icebp
sti
push
jecxz
imul
cmpsl
in
and
mov
js
lcall
gs
loop
cmp
or
data16
add
pop
lret
nop
inc
call
lock
push
jno
adcb
cltd
pop
cs
cmp
jmp
inc
cmp
pop
jecxz
sub
cmpsl
or
pop
cs
add
sbb
inc
push
pop
add
push
in
insb
bound
aam
xchg
adc
nop
pop
and
dec
adc
and
jae
and
shl
insb
pusha
sub
sbbb
aaa
jmp
add
test
test
cmp
lret
jle
je
and
out
fidivs
in
jbe
fs
and
adc
lret
test
loope
imul
push
push
jbe
sbb
es
imul
mov
aam
adc
push
insb
add
jo
add
dec
xor
es
pop
adc
fnstenv
push
les
mov
mov
aas
sti
sbb
mov
and
xchg
test
repz
fcomip
popa
mov
imul
and
jl
add
add
data16
fwait
mov
dec
popa
push
cmpsl
add
pop
pop
mov
add
sub
gs
mov
test
pushl
rclb
dec
jp
js
jp
mov
pop
into
cmp
xchg
mov
push
dec
jnp
xor
ljmp
add
sbb
hlt
xchg
fcmovbe
mov
lea
push
filds
add
inc
clc
sahf
mov
dec
idivb
lods
push
xor
sbb
xchg
push
push
ja
mov
enter
cs
fistps
mov
dec
dec
out
pop
jno
xor
dec
or
and
mov
aad
into
mov
enter
jg
jne
xor
dec
arpl
mov
add
xchg
or
call
jmp
lcall
fs
adc
mov
out
pop
nop
cmp
sbb
mov
cli
mov
sbb
or
add
iret
adc
rorb
cld
pop
fwait
mov
inc
jo
sti
nop
or
loopne
xchg
pop
negb
push
icebp
scas
inc
in
xor
or
cmp
call
ret
ss
jge
cmc
out
xor
es
addl
fwait
mov
je
andl
jbe
adc
or
into
adc
xor
cmc
fisubs
dec
mov
ret
loopne
in
dec
out
fisttps
xchg
clc
xchg
or
xchg
hlt
sub
sarb
sbb
lret
leave
push
cmp
ret
ret
test
fsts
cwtl
pop
daa
jg
rcr
mov
movb
cmp
int
mov
subb
dec
xchg
push
cmc
outsl
lret
shlb
sbbb
lret
mov
std
or
mov
addl
push
fsubl
sub
outsl
push
push
xchg
mov
les
sbb
cmp
jl
jae
push
push
adc
jp
xchg
sti
cld
mov
cwtl
sub
dec
pop
cli
cmp
cmpl
mulb
xchg
ss
sti
repz
push
inc
lods
repz
mov
push
std
lea
jbe
xor
cmpsb
imul
cmp
in
dec
push
add
cmc
in
movsl
mov
inc
xchg
sbb
or
and
jg
in
movsl
pop
sbb
cltd
sti
imul
loope
xchg
test
sahf
and
test
and
and
ja
mov
dec
movsl
rclb
push
daa
sbb
repz
insb
mov
and
lds
ror
adc
jecxz
jl
jl
in
das
mov
int
push
in
std
cli
scas
xor
and
popa
and
out
rcl
dec
imul
add
adc
and
and
int3
push
pop
into
add
loope
insl
fstps
inc
mov
gs
sbb
cmpsb
dec
lea
xchg
jns
orb
sub
movsl
shlb
arpl
pop
dec
int3
outsb
dec
in
cmp
mov
hlt
jne
sbb
or
les
cmp
dec
pop
psrad
xchg
dec
dec
sahf
cmc
pop
or
mov
movsb
jo
jp
push
pusha
xlat
fiadds
jmp
stc
xchg
mov
daa
dec
inc
push
xor
les
cmp
jge
inc
mov
bound
in
clc
pop
push
clc
xorl
cmc
leave
xor
and
pop
lods
lahf
and
ja
shrb
mov
in
jge
jge
cmpsl
adc
xchg
mov
mov
add
adc
pop
cmpsl
fists
sbb
pop
xchg
test
fwait
and
or
aas
sar
pop
divl
or
cmovns
jl
fs
xor
arpl
test
nop
in
inc
pop
cli
iret
mov
fbstp
or
call
cmp
or
push
or
shll
jo
or
arpl
sbb
test
popa
adc
ja
xchg
call
cmp
hlt
mov
adc
sbb
push
dec
rorb
enter
int3
cli
and
ja
xchg
inc
fiaddl
addr16
xchg
mov
cmc
cmp
test
in
mov
dec
gs
leave
mov
mov
aaa
lock
out
xor
mov
cmp
adc
test
sbb
fcmovu
in
sbb
loope
pop
push
movsb
mov
enter
cmpsb
test
stos
jle
dec
inc
jl
pop
in
lcall
cltd
mov
xchg
insb
xchg
sbb
xchg
enter
mov
cltd
jno
cmp
xchg
clc
js
aaa
shll
add
ja
ret
aam
mov
sbb
or
cmp
das
cmp
call
push
push
lods
shrl
jmp
add
xchg
pop
pop
dec
xchg
test
rdmsr
sbb
adc
lcall
mov
hlt
mov
cmc
push
pop
ret
movsl
lock
and
cmpsb
mov
sbb
movsb
cmpsb
mov
dec
mov
mov
lret
or
ss
sub
scas
adc
test
jg
clc
mov
stc
insb
test
jns
dec
xchg
lods
hlt
cwtl
xor
cmp
insb
mov
fst
push
aas
popf
add
loope
push
or
and
cltd
lea
clc
push
xor
mov
repz
adc
ret
push
inc
test
jge
jl
adc
sub
jbe
mov
js
test
cld
mov
push
adc
mov
adc
shrl
cltd
add
stc
push
inc
out
out
adc
jmp
cmpsb
shr
repnz
testl
xchg
cmp
jnp
push
add
movb
push
int
leave
adc
stos
out
xchg
lea
rcrl
mov
popa
insb
arpl
sbb
aam
hlt
xlat
sysret
fiaddl
jle
push
test
mov
cmp
pop
xor
dec
or
test
pop
and
test
pop
mov
rorl
negl
out
mov
outsb
xchg
fldl
pop
add
adc
jb
mov
pop
cltd
dec
pop
mov
adc
ret
sbb
aaa
mov
mov
cmp
adc
xlat
mov
sub
xor
cmp
out
mov
jmp
test
push
out
jp
mov
lods
cld
es
movsb
into
lods
rcrb
testl
insl
mov
jne
dec
out
insb
cmp
js
popa
and
test
scas
fs
scas
or
pop
cmp
or
shll
jle
mov
cmp
and
push
fldenv
mov
xor
mul
loop
jnp
xlat
jb
mov
mov
mov
repnz
sahf
xlat
jns
adc
pop
iret
mov
mov
lods
div
in
add
inc
das
xchg
icebp
mov
cli
lods
mov
movsb
push
sub
mov
fwait
adc
popa
les
les
shlb
fadds
xchg
mov
popl
std
sub
push
push
xor
mov
dec
xor
or
test
cmp
sbb
test
and
hlt
es
pop
shl
insb
repz
and
lea
es
int
fstp
fs
push
push
inc
das
sub
mov
enter
sbb
out
out
lret
aam
sahf
and
or
testb
scas
in
pop
imul
test
subb
out
jo
leave
pop
lds
test
pop
ficomps
xrelease
jae
mov
dec
lea
loope
jae
arpl
or
int3
aas
jb
xor
mov
xchg
roll
dec
or
cmpsb
sahf
adc
jge
xchg
add
mov
mov
push
aaa
or
pop
pop
aam
xor
fwait
dec
outsb
orb
xchg
pop
adc
sub
lret
hlt
data16
cmp
mov
sahf
mov
inc
aas
imul
add
stc
pop
lea
add
xchg
jmp
loop
dec
movsb
mov
popf
fistps
inc
popf
fcompl
pusha
test
ret
popa
aam
sahf
outsl
jle
fimull
insl
ret
sahf
push
cltd
adc
mov
push
scas
inc
push
imul
mov
mov
mov
xchg
andb
sbb
js
and
mov
loopne
aad
mov
ror
and
fwait
sbb
sbb
vdivsd
clc
les
clc
or
jae
xor
in
sbb
xorb
addr16
jl
syscall
and
movsb
push
xor
andb
sti
lds
adcb
cld
fwait
pop
fcoms
xor
popf
xchg
leave
and
and
mov
leave
jns
lea
pusha
inc
or
and
push
outsl
push
add
lcall
add
aas
mov
mov
repnz
jmp
push
mov
std
subb
jecxz
int3
cmpsb
stc
xor
add
das
lds
aad
jl
or
js
inc
xor
lods
roll
adcl
imul
cmova
pop
jne
xchg
xchg
fsubr
pop
popa
xchg
mov
pop
add
rolb
push
dec
mov
xor
jb
xchg
cmp
cmp
cmp
adc
add
outsb
push
cmp
inc
jge
rcll
sbb
jmp
and
call
icebp
pop
int3
das
subl
clc
xlat
pop
outsb
sbbl
pop
jecxz
sbb
mov
mov
add
gs
outsb
adc
pop
jl
sbb
fldt
insb
insb
popf
xchg
adc
pop
pop
mov
xor
je
xor
pop
cmp
mov
mov
push
xchg
popf
fst
bswap
adc
mov
sbb
sub
hlt
je
pop
dec
aaa
mov
call
ret
sub
aas
in
inc
add
cmpl
sahf
mov
jl
mov
push
cmp
lcall
bsr
roll
mov
push
mov
imul
jmp
mov
mov
mov
xlat
aad
iret
mov
loop
sbb
popl
je
xchg
js
cli
xchg
and
lods
push
dec
sar
push
cmp
add
push
mov
push
xchg
mov
in
push
cmp
in
into
ss
xor
add
xor
jge
lret
imulb
lahf
aaa
imul
sub
test
mov
xlat
sub
mov
dec
test
pop
aaa
das
jno
adc
sbb
scas
ja
sub
or
gs
ja
add
not
xor
add
add
and
ret
mov
sub
cld
add
push
call
aam
push
pop
dec
incb
fidivl
dec
call
fistps
mov
mov
cmp
xchg
callw
pop
mov
cmp
push
xchg
sub
push
pushf
or
icebp
xchg
dec
out
fs
jns
push
xlat
pop
dec
cmc
nop
xor
pop
and
es
jo
add
mov
sbb
or
mov
outsl
cmp
out
jno
push
mov
mov
adc
ror
push
stos
fwait
sbb
push
mov
jl
outsl
push
xchg
lret
fwait
lds
jae
lret
shll
pop
mov
mov
adc
mov
out
cmp
mov
and
testl
or
push
out
fmulp
xchg
pop
les
imul
sbb
mov
pop
and
and
mov
bound
adc
stos
iret
outsb
mov
daa
pushf
xor
push
add
dec
inc
rcll
jg
dec
movsb
jle
xchg
notl
xchg
pop
jle
in
fcomps
std
dec
cmp
in
xor
add
cvtps2pi
adc
or
lcall
ljmp
addl
and
bnd
insb
mov
idivl
outsl
add
imul
sbb
push
imul
int3
les
jnp
xor
mov
dec
repnz
mov
ret
mov
daa
arpl
jmp
mov
mov
jmp
mov
stos
rolb
inc
ret
push
mov
pop
mov
dec
mov
jmp
or
lock
adc
and
xchg
stc
insl
test
push
das
mov
adc
ret
xchg
in
hlt
shl
clc
sub
cs
lods
cmpsl
pop
or
outsl
sbb
enter
sub
xchg
sti
ljmp
mov
imul
fldenv
jo
mov
ds
lahf
push
sbb
ja
loop
sbb
adc
int
stc
movsb
or
pop
lahf
and
nop
enter
mov
jb
repz
push
cwtl
test
inc
add
test
ss
pop
repz
dec
xchg
fistpl
cmp
fcmovnu
test
mov
and
adc
cli
pop
xor
arpl
subb
ss
add
test
and
cmpsl
push
jmp
mov
sarb
xchg
test
dec
cld
sbb
xchg
fistpll
ljmp
in
leave
xor
pop
sub
outsl
in
shll
ret
inc
mov
outsl
xlat
stos
std
sbb
mov
sbb
sti
movsl
out
fiadds
imul
mov
rcrl
ljmp
fs
clc
int3
and
daa
shlb
cmp
js
pop
dec
sbb
dec
pop
loopne
aas
xor
pop
cmpsl
pop
pop
cmp
insb
ss
dec
in
mov
mov
daa
mov
sub
shlb
fisubs
mov
aam
lahf
push
xor
and
in
jg
int3
xchg
pop
and
sub
ja
mov
and
fsubrl
loopne
fld
lods
cmp
fbstp
outsl
pusha
iret
sahf
je
test
imul
bswap
pop
je
rcrb
loopne
pop
dec
out
jmp
lods
insb
pusha
add
stos
mov
mov
and
cmpsb
sbb
imul
lahf
bound
repz
movsb
adc
out
adc
jp
std
js
or
cli
dec
jecxz
xchg
inc
leave
icebp
clc
ss
test
cmp
test
cli
cli
sbb
dec
xor
rorl
je
aas
les
sub
cmp
adc
or
push
sub
add
push
push
add
cmpb
pop
insb
jge
mov
push
or
sub
push
cmpl
adc
xor
roll
clc
je
jns
jmp
mov
ret
sub
aas
mov
sbb
pop
mov
sbb
push
xchg
mov
imul
imul
push
xor
jg
push
xor
loopne
mov
push
xchg
insl
sub
test
decl
cmpsl
cmpsb
pop
outsl
and
imul
adc
push
jbe
outsb
and
push
adc
xorb
inc
mov
dec
popf
fisttps
add
push
dec
popa
lods
sub
xor
inc
arpl
sysenter
cmp
fcmovb
test
lcall
xchg
sbb
jne
cmc
push
mov
dec
and
pop
jle
stc
mov
mov
push
addr16
mov
stos
test
xor
inc
xchg
jno
pop
jne
xchg
mov
lods
in
or
rol
xchg
mov
mov
and
mov
jmp
xor
inc
mov
cltd
xchg
icebp
aad
aas
dec
xor
rcrl
movsb
rcrl
adc
push
std
and
mov
call
leave
in
add
add
mov
fldcw
sbb
and
es
push
rcrl
push
mov
mov
sub
repz
inc
mov
jge
inc
or
dec
xor
cmp
add
clc
subl
jo
xor
adc
gs
mov
pushf
jmp
out
aam
fisttpll
inc
pop
leave
mov
mov
out
adc
inc
ret
xchg
stos
dec
xchg
mov
ret
jecxz
pop
jb
fdecstp
testl
cmc
dec
test
mov
push
push
das
sahf
fcoml
int
inc
movsl
mov
push
fmull
xchg
xor
xchg
mov
or
pop
les
dec
mov
loopne
iret
stos
pop
jge
jne
pop
fs
cmp
inc
jl
xchg
xor
enter
mov
movsl
pop
add
xchg
add
mov
mov
ljmp
sub
mov
js
ljmp
ljmp
sbbb
adc
pusha
mov
pmaddwd
outsl
imul
cmpsb
jns
in
ret
add
mov
pop
jl
push
insb
insb
out
icebp
std
dec
ret
pop
test
loop
or
out
scas
out
mov
out
push
fwait
mov
inc
inc
cmp
pusha
scas
aam
popf
mov
and
jmp
adc
xor
inc
add
test
rcr
insl
xchg
stos
loop
sub
mov
sbb
das
inc
or
sbb
jmp
jl
jmp
das
mov
mov
in
jmp
ret
in
fs
mov
xor
lret
rorl
sbb
sbb
push
add
sbb
out
sub
lock
mov
inc
shrb
clc
pop
aam
xchg
lea
and
aam
stc
scas
outsl
cmp
jp
cli
jbe
aam
ljmp
icebp
inc
test
jmp
xorl
jmp
jns
out
mov
jnp
lret
fldl
or
mov
add
sbb
jo
cmp
sub
enter
jle
cmc
outsl
mov
test
and
stos
nop
adcl
xchg
sar
inc
adc
inc
test
mov
es
push
shll
orb
mov
imul
sbb
mov
xchg
add
iret
mov
jle
push
ljmp
sahf
cli
lret
shll
clc
lret
adcb
sbb
std
push
inc
gs
cli
fadd
ds
inc
and
lcall
jnp
movsb
jns
into
incb
adc
rorb
ffreep
mov
jns
mov
inc
mov
lahf
fcoms
xchg
push
daa
lcall
ror
inc
inc
movsl
ss
xor
sbb
inc
mov
cmp
push
jge
cmpsb
sbb
dec
ds
push
sti
dec
enter
push
je
dec
sbb
icebp
add
mov
sub
cltd
lret
mov
in
icebp
pushl
xchg
xchg
add
out
in
lret
sarl
les
fdivr
aad
xchg
hlt
out
imul
sbb
or
jae
push
rcrb
vorps
sbb
or
and
add
xchg
jge
sar
mov
mov
shrb
test
xor
push
rcl
jl
or
mov
mov
cmp
repz
dec
inc
subb
xor
enter
cmpsb
xor
push
sub
pop
shrb
test
ficomps
cli
inc
addr16
lret
lea
xchg
add
add
mov
jg
sahf
inc
add
xchg
mov
add
or
jbe
lods
or
jg
shrl
or
sbb
es
lods
outsb
faddl
stc
fs
loopne
and
into
or
dec
and
lock
push
push
jecxz
adc
add
cmp
lea
aam
aam
add
dec
call
add
mov
and
stos
dec
imul
cmp
or
enter
pushf
js
lea
and
popf
pop
int3
sub
mov
div
cwtl
iret
xor
fdivr
mov
cmp
sbb
les
stc
mov
rorl
push
and
icebp
repnz
adc
ret
push
pop
adc
sub
push
fsubrs
push
xchg
lods
jecxz
jmp
jge
push
les
js
push
loope
lretw
cli
mul
jno
ret
int
add
bswap
push
mov
into
enter
add
in
fdivl
sub
inc
mov
imul
jge
xor
clc
fdivr
fs
xchg
lods
dec
jnp
inc
mov
mov
xchg
repnz
cmpsl
fildl
rol
insb
mov
call
lock
negl
lahf
xor
pop
pop
mov
fsubr
dec
push
aaa
addr16
dec
push
jmp
aad
repz
pusha
dec
insb
and
ss
scas
xor
repnz
dec
xchg
fldt
inc
inc
jns
leave
adc
scas
mov
dec
xor
cmpsl
inc
mov
fsubrl
xor
ret
xchg
xchg
and
xchg
cmp
fldenv
outsb
mov
xchg
es
in
pop
int
mov
pusha
push
inc
mov
push
insb
adc
add
sbb
addr16
add
push
pop
pusha
push
adc
outsb
dec
cs
jmp
sti
popa
pop
cmpsb
push
cltd
and
lret
add
push
xor
subb
push
push
inc
jmp
sub
ret
xor
hlt
es
stos
mov
fidivl
ljmp
xchg
jmp
mov
stos
int
mov
enter
mov
inc
xchg
outsl
js
jge
std
ret
mov
inc
add
xor
inc
pop
scas
aas
inc
xchg
push
adc
push
jb
fisubrs
push
jnp
push
fstps
dec
push
adcb
movl
mov
pop
sub
sbbb
cmp
insb
pop
or
leave
rep
mov
and
mov
xlat
out
or
mov
and
lcall
shrb
cmp
loop
lret
notb
shlb
mov
outsb
stc
cmp
ret
jg
in
fs
sub
or
aam
je
xchg
push
adc
lds
jle
jl
movsb
add
jae
adc
xchg
mov
mov
test
ss
sub
add
pop
int3
outsl
hlt
repz
mov
fbstp
and
out
adc
xor
mov
cmc
sub
xchg
xchg
pushl
sbb
add
addr16
and
insl
jmp
imul
mov
jo
and
mov
in
xor
cmc
push
xchg
int
xlat
mov
or
cmp
sbb
idiv
pusha
pop
adc
push
adc
mov
in
hlt
cmp
jo
mov
xor
aaa
dec
cs
xchg
shl
mov
xor
pop
enter
sub
fnstsw
ja
gs
jle
push
mov
mov
or
lds
mov
or
push
pushf
dec
sub
loope
jmp
dec
inc
sub
shlb
adc
gs
lcall
dec
mov
cmp
stos
jae
notl
mov
sbb
inc
jo
repnz
dec
cltd
addr16
xchg
xchg
inc
jno
mov
sub
adc
repnz
and
pop
ftst
lock
xor
jne
pop
mov
shl
sarb
or
loop
and
push
sbb
and
pop
orl
jns
jmp
test
pop
mov
sbb
mov
cwtl
inc
mov
lock
out
addl
xor
jp
sbb
fdivrs
ror
hlt
mov
jl
xor
add
sub
cmp
sub
pushf
fisubl
scas
cmp
or
das
cld
outsl
out
mov
sub
inc
outsl
add
push
aad
or
xchg
std
sub
pop
adc
push
movsl
lahf
xchg
jmp
fisubl
adc
xchg
and
mov
add
stc
pushf
lods
cli
add
jo
out
push
mov
imul
fcoms
orb
sub
sbb
shll
sti
scas
mov
and
enter
add
test
cmpsl
and
ss
jo
sbb
jo
lods
mov
addl
stos
dec
pop
push
jbe
sub
ret
or
in
jae
cwtl
sbb
sub
push
push
or
adc
mov
sbb
jo
push
pop
stos
mov
mov
ljmp
mov
dec
inc
je
xchg
jmp
xchg
out
aaa
jl
xchg
in
xchg
outsb
xchg
sub
push
mov
insb
daa
sub
push
test
jp
push
fisttpll
aas
push
pop
mov
sub
mov
mov
sbb
mov
pop
roll
jo
mov
add
ret
insb
lea
es
lret
cs
xchg
pop
fdivrl
out
psubw
sbb
jecxz
xchg
sbb
mov
es
jnp
mov
loopne
out
mov
lahf
dec
mov
adc
xlat
xor
arpl
ds
jb
test
sbb
out
and
jnp
cwtl
push
add
mov
cli
out
fisubs
es
cmp
sbb
or
repz
xor
mov
mov
lods
ss
daa
fs
adc
shlb
mov
ja
sub
lahf
cmp
sub
mov
jmp
testl
out
pop
insl
pop
add
inc
nop
clc
out
cmpsb
jp
stos
pop
dec
add
pop
es
stc
push
dec
mov
inc
mov
ljmp
sub
pop
nop
cmp
mov
sbb
and
xchg
lods
cmpsl
lock
repnz
mov
ret
lock
adc
ja
in
push
push
push
push
and
mov
outsl
cli
in
xchg
or
mov
mov
mov
pop
movb
pop
and
es
push
mov
cmp
jmp
dec
push
dec
or
mov
arpl
daa
ljmp
jge
pop
inc
cli
aam
in
and
mov
inc
add
inc
pop
xchg
add
xor
ds
lea
and
jge
shlb
sti
pop
and
fstl
sub
adcb
dec
ja
dec
clc
fsubs
repz
jl
sbb
or
pop
jo
sub
sarl
addr16
cld
pop
inc
xchg
xor
test
fldenv
mov
xor
stos
movsb
mov
inc
out
jge
push
jbe
push
in
push
jae
push
add
aad
mov
mov
sbb
xor
jmp
nop
push
testl
xor
dec
sub
dec
fisttps
in
push
fiadds
sti
xchg
jg
cmp
cli
dec
adc
mov
xor
lret
loopne
cmpsb
or
mov
pop
adc
js
jl
add
das
sahf
mov
mov
jns
dec
add
inc
cld
mov
gs
xchg
adc
xor
xchg
xchg
or
mov
fsubr
cmp
add
andl
dec
fcompl
incl
cmp
aaa
es
xchg
jmp
jge
cmp
sbb
push
jp
loopne
mov
in
in
add
xlat
sbb
jns
xchg
dec
and
xor
mov
fdivrl
pop
outsb
fmuls
rorb
addr16
mov
sbb
xor
sub
inc
sub
cwtl
xchg
not
test
in
in
and
lock
fbld
xchg
jns
call
mov
mov
cmp
rol
pop
xchg
dec
test
mov
sbb
jb
repz
mov
aaa
or
and
pop
sub
mov
adc
in
fs
ret
cld
and
push
out
or
jle
mov
ljmp
mov
sub
notl
rol
es
call
filds
mov
add
push
movsb
imul
sub
xchg
js
repz
leave
aaa
aam
adc
enter
jmp
push
mov
test
clc
std
lret
movsl
push
add
lods
pop
push
xchg
es
mov
aaa
cmpsl
adc
or
cmp
jle
lds
push
popf
mov
push
mov
lahf
jg
pop
stc
and
lcall
dec
frstor
adc
bound
xchg
inc
inc
stos
xchg
cmp
fstpl
push
pop
jl
bound
mov
ret
loopne
insb
mov
xchg
pop
jl
fnstcw
movsb
mov
add
pop
repz
iret
xor
or
xor
enter
outsb
push
inc
mov
outsb
mov
out
add
mov
sti
cmpsb
dec
or
sarb
aas
call
jnp
mov
xchg
testl
push
out
fs
push
inc
add
mov
cmp
or
mov
pop
out
int3
cmp
jns
xchg
jl
cmp
and
fistpl
push
adc
xchg
mov
mov
mull
mov
scas
pop
cmp
aaa
js
add
and
sub
sahf
loope
xchg
les
lea
xor
inc
andl
iret
adc
fldcw
faddl
jbe
adc
add
and
out
mov
or
mov
daa
lods
prefetchwt1
int3
jne
adc
nop
bound
into
mov
sub
cmpsb
in
dec
pop
jno
cmpsl
loopne
adc
mov
bound
in
ds
inc
xlat
rcrb
sub
push
xchg
popf
decb
lea
fwait
arpl
into
mov
sbb
dec
mov
cwtl
adc
outsl
push
imul
jne
dec
inc
out
aas
andl
and
fsubr
stos
mov
jae
lahf
jl
dec
ja
adc
jno
in
mov
cltd
sub
cmp
mov
test
rcrl
pop
lret
jg
push
stos
jb
fldt
in
addr16
fdiv
out
pop
fcoml
push
cltd
sub
pop
add
rclb
lcall
lahf
and
cmpsb
jns
stos
or
outsb
mov
pop
and
popf
filds
inc
push
in
clc
adc
mov
ret
mov
push
repnz
popf
xor
pop
xchg
shrl
sub
icebp
popa
shl
dec
ss
jno
int
dec
dec
mov
cs
roll
rorl
xchg
vmread
pop
or
pushf
out
inc
pop
push
or
mov
notb
or
cmp
and
xchg
movsl
or
lock
ss
jns
pushf
jno
dec
rcl
xor
ljmp
dec
cmp
iret
mov
es
out
xchg
movsb
push
push
mov
push
bnd
out
addr16
fistl
out
inc
int
sub
pop
or
imul
mov
rcrb
addr16
lock
repnz
cmp
imul
data16
stos
dec
ds
insl
cmp
jle
mov
add
sbb
mov
fs
xor
lods
lods
pop
cmpsl
leave
fsts
xlat
das
mov
mov
jbe
xchg
sub
mov
bound
js
inc
sbb
or
orb
aad
adc
hlt
dec
stc
lcall
dec
jbe
cwtl
test
cmp
out
pop
xchg
mov
hlt
mov
inc
ss
adc
pop
mov
in
push
lds
fcmovbe
sub
jbe
jecxz
cld
fwait
std
clc
in
sti
mov
insb
xchg
out
or
inc
mov
mov
sbb
sub
nop
test
loopne
out
or
test
cli
mov
mov
enter
cmpsl
push
inc
mov
mov
jmp
mov
mov
pop
push
or
adc
mov
dec
cmp
xorb
sti
aaa
lret
and
sbb
out
jnp
inc
pop
fs
shrb
bound
add
out
dec
imul
shll
jmp
outsl
push
mov
add
sbb
add
cmp
cmp
ljmp
sahf
mov
xchg
jg
xchg
jmp
inc
std
sbb
xchg
fldl
fbld
inc
sbb
cmp
mov
xlat
push
jo
test
mov
leave
jne
xchg
push
jp
sbb
push
mov
xor
adc
add
and
shlb
notb
idiv
lock
add
inc
xchg
mov
cmp
sub
mov
xor
dec
lds
jl
sub
jno
shll
sbb
push
push
xor
adc
mov
xchg
xchg
pop
pop
loope
or
push
inc
repz
xchg
add
lret
aad
popf
lods
lea
fsubs
mov
and
out
cmp
in
int3
shrb
mov
push
cs
in
add
mov
daa
lea
hlt
push
loope
mov
cld
lea
mov
or
int3
rcrb
fwait
push
sub
mov
call
out
xlat
push
xor
repnz
js
push
or
pop
sbb
xor
or
faddl
sbb
sbb
pop
iret
std
cmp
xchg
mov
ds
fistpll
jns
lret
js
xchg
icebp
inc
ss
or
and
scas
hlt
add
lods
inc
jbe
pop
jno
xchg
dec
dec
outsb
xchg
cmp
inc
pusha
add
mul
jmp
xchg
jo
pop
push
or
push
jne
mov
mov
repnz
mov
aaa
mov
dec
mov
xchg
sbb
adc
mov
mov
or
aas
jb
nop
pop
pop
fdivrl
test
bound
adc
pushf
test
and
push
jae
repz
into
ss
jge
loop
xor
mov
mov
loopne
imul
inc
push
mov
sub
push
sub
sbb
out
lock
jb
dec
shrb
stos
insb
jno
jne
adc
sarl
cmp
cltd
rcrl
loope
or
shrl
adc
mov
ret
mov
in
sub
lods
mov
dec
out
mov
addr16
inc
cmp
jne
and
pop
xlat
mov
imul
pop
push
lods
cli
mov
popa
loopne
cld
sub
movsb
and
inc
pop
jmp
gs
arpl
cmp
mov
pop
mov
cli
cmc
mov
bound
in
xchg
enter
lret
mov
mov
xchg
xchg
movsb
push
dec
xchg
jle
pop
scas
inc
aaa
stc
sub
cmp
lret
sub
push
bound
lds
pop
jmp
mov
jne
cwtl
or
ffreep
pop
push
orb
fstl
nop
data16
sub
jp
mov
mov
out
sti
pop
pushf
mov
push
mov
pop
add
nop
adc
mov
push
addr16
cli
aas
cmpsb
dec
mov
dec
adc
fistl
adc
cli
out
pop
mov
mov
xchg
inc
push
xor
lds
sub
pop
fdivp
mov
cld
push
and
xchg
jae
sub
sti
mov
divl
mov
in
aas
fwait
movsb
jl
fs
lcall
sub
in
cmpsl
inc
rcll
mov
and
sub
fwait
pop
mov
arpl
jmp
push
sub
dec
lret
sub
mov
out
pop
lock
xchg
add
hlt
pop
jns
adc
iret
fidivrs
fidivs
faddl
fst
inc
scas
jge
push
cld
adc
dec
insb
pop
cmpsb
push
sub
xchg
sub
sbbb
popf
pop
xchg
lods
pop
in
icebp
ret
mov
add
inc
sbbb
pop
xchg
fwait
ret
aad
data16
push
js
mov
sbb
push
or
les
jae
sbb
mov
popl
movsl
add
test
andl
adc
or
jns
and
fidivl
push
xor
subl
notl
call
xor
push
popa
or
mov
outsl
jl
fdivs
push
ret
cs
les
push
and
roll
and
push
xchg
push
int3
flds
mov
xchg
push
movsl
xor
das
push
sub
add
imul
sahf
push
push
inc
inc
insb
jns
inc
ud2
mov
ja
mov
iret
pop
dec
fisttpl
sbb
xchg
xchg
jl
pop
shlb
out
es
pop
sub
adc
mov
jbe
cmpsl
mov
or
orl
pop
int3
popa
mov
adc
aas
dec
pusha
movsl
insb
dec
and
push
jg
jnp
test
in
lds
mov
and
mov
repnz
mov
shrb
test
pop
jae
inc
bound
adc
test
out
pop
arpl
jp
insl
push
and
pop
xor
jo
xchg
cmp
mov
lcall
subl
and
or
std
jbe
push
push
les
icebp
mov
insb
jb
shl
pusha
mov
inc
mov
in
cli
mov
and
or
mov
xor
cld
into
shlb
push
cmpsl
xchg
mov
xor
outsl
push
repz
cs
xchg
inc
inc
je
mov
inc
ret
cli
push
test
xor
into
push
mov
cs
mov
dec
push
andl
decb
or
adcb
or
daa
outsl
cmp
hlt
and
xchg
sbb
pusha
xor
enter
jnp
push
inc
jne
xchg
and
or
je
add
push
sub
and
mov
and
lds
xor
cmp
jnp
jbe
call
push
xchg
lds
mov
aaa
mov
xchg
cmc
clc
push
mov
inc
call
cmc
adc
rcll
pop
lahf
xchg
incl
nop
adc
lret
push
jbe
subb
loopne
lahf
outsl
cltd
pop
dec
cwtl
enter
jle
roll
mov
lods
aaa
loopne
and
in
in
sti
add
ljmp
aad
push
sbb
or
in
cld
mov
addr16
and
jo
out
sti
test
sub
sti
inc
xchg
loop
rcrl
ret
push
mov
jle
pusha
sbb
insl
imul
lcall
mov
push
jns
adc
mov
adc
xor
outsl
mov
rcll
cli
dec
test
push
jb
int
enter
mov
mov
xchg
aaa
out
mov
mov
imull
sbb
addr16
mov
lahf
mov
rorb
test
push
adc
mov
adc
js
out
ret
inc
xor
add
xchg
mov
repz
push
pop
mov
stos
xor
inc
loopne
adc
aas
or
sahf
stc
sbb
mov
pop
icebp
fs
lock
add
out
adc
test
dec
xchg
pop
jbe
or
jbe
jbe
clc
sub
loope
push
inc
jno
pop
fs
lods
push
pop
mov
aas
push
adc
pusha
mov
js
and
inc
and
insb
cmp
sub
sbb
inc
xchg
xchg
jnp
pushf
push
movsb
or
xchg
fcoml
scas
in
daa
adc
push
into
and
daa
fnstsw
and
pop
add
mov
fisubs
iret
sub
mov
pop
sub
mov
std
in
push
gs
loop
sbb
dec
fs
xchg
mov
sbb
dec
aad
or
inc
xor
dec
subl
xor
jp
mov
cmpsl
outsl
loop
fsub
adc
xchg
mov
in
jge
pop
das
cld
mov
push
xchg
push
inc
pop
and
out
fwait
jge
lahf
int
add
lds
add
or
xor
xchg
pop
fists
push
jne
addr16
insl
pusha
rcrb
pop
inc
loop
cmp
xor
imul
jl
lods
cmpsb
inc
fistps
pop
add
idivb
and
sarb
jle
scas
in
pop
int
mov
test
test
pushf
out
clc
arpl
enter
rorl
in
adc
adc
repz
dec
fwait
mov
dec
inc
insl
test
pop
pop
jns
ficoml
adc
mov
xchg
das
lcall
and
leave
mov
or
mov
fcomp
pop
dec
jp
xor
je
inc
std
test
push
fldcw
xchg
loope
lods
jae
jp
push
jmp
loop
sarb
daa
arpl
and
inc
jp
xor
jp
push
loop
jl
dec
mov
add
push
mov
in
push
loopne
call
or
pop
pop
xchg
stos
mov
fsub
test
jge
and
jmp
out
inc
in
jbe
cltd
fidivrs
jmp
xchg
push
xor
and
cmp
cmp
cwtl
jo
sub
lret
mov
enter
stos
out
dec
fdivr
stc
and
out
and
push
sub
fst
xchg
inc
mov
mov
dec
lret
mov
aaa
jecxz
sbb
add
xchg
xchg
icebp
jo
add
out
jns
xor
cltd
incl
mov
or
in
hlt
loopne
inc
into
stos
jl
xchg
and
cmc
iret
in
enter
sti
adc
inc
mov
dec
in
lahf
cmp
sbb
jmp
push
inc
fstpl
cmp
test
pop
movsb
jae
insb
mov
xlat
jp
in
add
mov
pop
pusha
pop
stos
setae
inc
and
or
lods
jecxz
inc
cmp
lret
repz
cmp
lods
add
lret
sub
push
push
or
cmp
sbbl
jge
mov
dec
jecxz
loop
scas
adc
bound
aad
xchg
adc
repz
lds
xor
arpl
addr16
bound
lods
mov
mov
dec
lods
in
ret
cmc
cmp
fistps
add
push
pusha
loopne
push
lret
push
mov
into
aam
dec
cmp
jmp
cmp
mov
mov
sub
mov
sbb
ret
pusha
dec
cmp
and
les
pop
push
adc
enter
inc
push
out
lds
mov
mov
test
ds
subl
cli
xor
pop
adc
ret
pop
mov
mov
push
aad
adc
sbb
push
popf
xor
push
inc
cmp
orb
xlat
hlt
pusha
ds
add
jmp
mov
fimuls
and
mov
loope
stos
pop
mov
add
xchg
jmp
in
pop
stos
xchg
fimuls
jmp
in
cwtl
cmp
lahf
cmp
pushf
subb
pop
int3
xchg
push
call
movsl
aam
subl
out
into
repnz
out
cmc
mov
popl
push
add
lret
fwait
jp
das
fsubrs
sbb
std
lock
loope
in
hlt
cmpsb
pushf
adc
into
xchg
jge
fcmovnu
add
arpl
out
mov
sbbb
pop
adc
xor
jae
int
and
shll
test
cmpsb
push
inc
sbbb
sbb
aaa
add
add
out
loope
xlat
xchg
jne
cwtl
ror
orb
out
dec
mov
lods
pop
cmp
pop
add
add
loope
roll
pop
popa
pop
xchg
mov
push
lret
and
dec
adc
lahf
vpslld
outsb
or
jp
sbb
sti
dec
push
fbld
jge
inc
lea
imul
ja
cmp
insb
add
sub
addr16
gs
pushf
scas
popa
mov
cmp
jl
shlb
loope
or
jg
test
test
scas
leave
sub
mov
mov
lock
mov
xchg
shlb
xchg
mov
xchg
jns
inc
sub
xor
mov
mov
test
lcall
lret
mov
scas
les
xor
inc
ljmp
xchg
addr16
jle
or
mov
mov
push
cmp
pop
inc
loop
sbb
jae
sbb
das
cs
movsl
aaa
lock
dec
mov
lods
sbb
sbb
fcmovb
pushf
fadds
cmp
popa
js
jb
clc
mov
mov
lcall
movsb
add
mov
inc
and
sub
sub
push
fdivs
jb
xor
aad
test
lahf
arpl
jns
stc
xchg
xorl
adc
add
jns
inc
pop
in
outsb
jg
and
orl
loopne
popa
push
inc
jl
or
call
mov
pop
xor
cmpsb
out
cmpsb
cld
jl
aas
dec
adc
xor
mov
pop
fwait
ljmp
mov
pop
arpl
les
lret
jns
cs
mov
or
and
dec
imul
pop
jb
dec
das
push
dec
jns
jno
or
xor
pop
ljmp
pop
pop
push
bound
jno
pop
rcl
loop
shr
sub
int3
jo
pop
xchg
jle
cmp
add
daa
xchg
jp
mov
adc
lret
fxam
xlat
pop
xchg
pop
outsl
imul
or
rcrl
dec
sub
dec
mov
sub
and
cld
icebp
fs
mov
push
cmp
call
adc
cmp
pop
fsubrs
insl
repnz
mov
lret
or
repz
inc
dec
adc
xor
push
xor
mov
das
sbb
mov
test
mov
pop
jbe
xchg
stc
jne
int3
das
mov
cs
mov
movsb
dec
popf
push
xlat
cmpsb
dec
cmp
and
test
add
dec
rorb
mov
popa
mov
sbb
fcmovnb
xor
sahf
lcall
fildll
mov
jnp
insb
dec
add
test
sub
jp
outsl
aad
and
das
das
and
mov
inc
scas
ret
outsb
push
out
roll
mov
inc
loop
mov
jecxz
call
adc
xchg
insl
and
cmp
fcompl
add
mov
into
popf
pop
clc
repnz
add
fcoms
push
xor
pop
lret
popf
int
fstl
lcall
mov
xchg
dec
xchg
push
and
lods
dec
inc
insb
push
out
mov
xchg
push
mov
jns
push
je
adc
mov
inc
mov
adc
mov
pop
xchg
xchg
cmp
dec
out
cmpsl
fiadds
and
lret
outsb
push
pusha
shrl
push
imul
inc
push
dec
lret
cmpsb
addr16
insl
and
mov
cmp
dec
mov
fucomp
pop
pop
inc
movsl
loope
inc
bound
cmpsl
bound
stos
aaa
gs
roll
fsubs
inc
repz
iret
imul
pop
pushf
leave
in
jp
add
sbb
inc
push
js
aam
add
aaa
nop
sbb
and
and
jne
push
lahf
aas
jge
inc
test
iret
add
imul
subl
add
scas
or
jp
stos
dec
or
aas
jae
mov
insl
add
popf
push
fnstsw
push
int
scas
and
adc
in
and
jbe
xchg
lock
inc
mov
mov
sarb
lahf
lss
xor
in
adc
dec
cmp
test
lret
subb
dec
adc
ret
loope
cld
das
jo
ljmp
fdivl
inc
mov
add
cmp
insl
mov
pop
test
jp
les
pop
and
incb
aas
into
pop
push
fs
sub
inc
clc
pop
outsl
fdivl
int3
cmc
add
push
jmp
shr
fisttpl
push
xchg
cmp
pushf
add
inc
xacquire
arpl
xlat
push
xchg
mov
push
int
addl
xchg
aas
mov
sti
and
inc
mov
inc
add
jnp
inc
mov
dec
fmul
xchg
mov
int3
cld
ret
cs
sbb
mov
gs
scas
inc
sahf
das
cs
sbb
cmp
rolb
sti
xor
xor
xlat
or
mov
lcall
xor
or
mov
mov
rorl
call
aaa
cltd
lahf
pop
sahf
leave
out
sbb
lahf
sub
loope
movsl
mov
xor
or
cmp
xor
cwtl
push
mov
dec
mov
pop
pop
mov
test
orl
mov
orl
adc
dec
cli
mov
test
push
repz
fs
sahf
rorl
out
rolb
fxch
nop
jne
cmp
and
xchg
xchg
sub
pop
push
jecxz
lods
xor
clc
pop
inc
out
pop
cmp
jp
and
out
mov
test
add
add
push
dec
xchg
aas
jmp
lds
xor
push
jle
jle
mov
mov
addl
dec
dec
push
fadd
aaa
inc
sub
add
loope
imul
xchg
scas
test
push
in
insl
std
std
mov
mov
sahf
popf
fsubl
out
frstor
addr16
iret
std
pop
jae
xrelease
mov
repnz
pop
xor
cmp
inc
sbb
out
xor
xchg
je
cmpsl
fdiv
pop
shll
mov
adc
fwait
inc
xlat
icebp
loop
push
mov
xchg
or
sub
sub
int3
push
ljmp
pop
mov
push
rcrb
inc
xchg
je
repnz
loop
or
push
test
mov
or
pop
cmpsb
add
call
sahf
cltd
bound
xchg
hlt
pusha
mov
loop
sbb
mov
jne
notl
push
test
mov
cmpb
pop
or
sub
mov
addr16
ror
test
jne
jl
shl
dec
fcom
mov
and
push
cli
xchg
and
in
jne
mov
lods
mov
jo
cmc
rorl
je
and
das
sbb
pusha
lcall
out
jge
fidivl
pushf
push
or
in
cmp
scas
mov
jg
nop
aad
lods
xchg
jp
loope
mov
cltd
and
jp
cli
roll
cli
or
stos
aaa
pop
in
adc
mov
mov
shlb
out
pop
pop
call
pop
dec
add
jo
loop
and
sub
sbb
data16
fisubrl
sbb
das
push
inc
movsl
subl
in
pop
mov
xor
jae
mov
pop
sbb
adc
push
pop
push
mov
sarl
mov
push
into
dec
push
shlb
cmpsl
in
cwtl
pop
loope
pop
out
jo
faddl
xchg
adc
fsin
or
shll
or
push
inc
mov
jp
sbb
dec
mov
jno
push
and
pop
sahf
xor
mov
rol
enter
popa
jb
jne
filds
add
test
popa
mov
ret
dec
or
movsb
pop
push
mov
and
xor
std
sbb
pushf
imul
xchg
stos
xchg
out
cmp
popa
push
jp
sbb
ljmp
add
jnp
fidivs
pop
sarb
mov
adc
xor
pop
xlat
cmp
sub
lock
scas
push
cmp
ret
add
lcall
lahf
adc
push
sbb
dec
loope
nop
leave
js
shll
sub
in
jno
loop
xor
mov
dec
sbb
bound
push
add
xchg
cmp
repz
movsl
fimuls
enter
mov
movd
push
aam
inc
lods
stos
adc
mov
xor
movsl
xor
inc
out
addl
js
outsb
push
sarb
out
push
lcall
xor
ja
jge
xchg
adc
out
outsl
out
jae
out
cmp
cmp
fisttpll
lahf
out
repz
jae
sbb
insb
sbb
add
pop
push
dec
jae
mov
iret
xchg
cltd
movsl
xchg
loop
subb
pop
roll
xchg
imul
ds
fwait
add
jne
cmpsl
xor
cmpsb
mov
jecxz
pop
jae
jnp
jne
stos
loopne
je
movsb
fidivs
cwtl
jmp
fsubs
xchg
dec
mov
push
mov
fucom
or
jnp
ds
leave
fisttpl
ret
out
sbbb
mov
prefetch
pop
sub
or
jp
xor
imul
in
xchg
jb
dec
pop
icebp
clc
mov
ja
movsl
jno
scas
sahf
sub
push
in
dec
cmpsl
push
push
mov
push
or
je
dec
insl
adc
xchg
fs
outsb
scas
std
loopne
jae
popa
add
xchg
xor
dec
ds
insb
dec
stos
sub
fisttpl
loop
and
and
jae
xchg
and
dec
popf
sti
arpl
add
mov
clc
dec
lods
add
or
scas
cs
loop
ficoms
je
push
ja
popw
sbb
cmp
jo
mov
push
rorb
push
les
lret
pop
dec
xor
xchg
push
stc
aad
les
add
lds
cmpsl
lret
mov
test
mov
cltd
sbb
jae
mov
cmp
mov
insb
nop
cltd
daa
push
je
scas
mov
or
mov
adc
xchg
lea
icebp
sbb
hlt
aas
add
imul
dec
dec
add
sbbl
pop
xchg
jg
add
jle
xor
push
sbb
sahf
cmp
pop
cmp
jbe
pusha
pusha
lock
jnp
push
pop
sub
mov
jmp
mov
cmp
std
cld
fcoms
cwtl
add
mov
cmc
xchg
mov
roll
push
add
mov
xchg
sbb
or
adc
andl
xchg
sub
pop
call
lds
pop
aaa
ja
add
jp
or
call
inc
mov
out
jg
pop
imul
movsl
wbinvd
aas
inc
out
sbb
in
fcomp
cs
aas
mov
jmp
xchg
xor
mov
mov
ss
jmp
mov
stc
mov
sbb
pop
mov
jnp
pop
dec
pop
sub
loop
pop
xor
push
add
rclb
sbb
mov
loop
sbb
mov
icebp
push
cmp
out
pop
out
aas
test
push
adc
or
in
data16
outsl
dec
dec
mov
bound
jno
int
in
mov
fdivrs
popf
xor
je
xorl
stos
mov
fsts
dec
mov
jmp
and
dec
dec
add
adc
int
sbb
test
push
push
xor
mov
jl
push
adc
mov
cmc
aad
jmp
shl
pop
fwait
cmpsb
imulb
enter
subl
add
and
xchg
push
add
xchg
in
xchg
sahf
test
jmp
push
lret
adc
and
orb
pop
inc
dec
pop
sub
pop
xchg
rcrl
std
push
pop
inc
mov
ljmp
push
and
dec
fstpt
cmp
test
mov
add
inc
sbb
or
and
jo
sub
mov
iret
push
ret
lcall
inc
jmp
loopne
in
call
jg
test
sbb
sarb
pop
pop
out
push
int
adc
clc
outsl
imul
push
sahf
mov
lods
xor
jno
xor
lret
in
sti
xchg
xor
sahf
jp
jecxz
mov
mov
and
adc
clc
je
sub
cmp
add
and
add
mul
sub
sub
sub
int
and
arpl
pop
or
cmp
xchg
mov
xchg
fadds
jo
xor
sbb
outsl
xor
repz
pop
cmc
xchg
sti
lcall
mov
fdivl
mov
mov
ret
imul
call
mov
int
push
pop
rolb
xlat
pop
inc
imul
stc
push
repnz
mov
dec
jb
subl
sub
aam
orl
movsb
push
mov
and
ja
sbb
aaa
shlb
sbb
lods
shll
add
jne
or
aaa
lock
xor
mov
sbb
out
inc
divb
clc
aad
divl
cmp
js
cwtl
inc
fdivrl
push
mov
add
bound
lock
nop
out
and
xor
cmpsb
xchg
add
inc
or
pop
cmp
xor
out
mov
or
and
push
xor
mov
xchg
cmp
rolb
jmp
and
mov
loopne
mov
decl
dec
out
stos
dec
cli
loop
aad
lods
dec
fwait
xchg
mov
out
push
push
scas
xchg
xor
xchg
lret
pop
mov
bound
std
bswap
pop
sbb
or
scas
pusha
xor
inc
and
push
cwtl
cmc
mov
fildll
leave
jb
test
loopne
repnz
adc
lock
push
inc
adc
daa
jecxz
mov
orb
and
mov
iret
cmpsb
mov
fcomi
dec
into
pop
xchg
mov
lds
push
das
jae
and
xlat
scas
jp
xchg
sbb
stos
jecxz
sbb
lods
sbb
ljmp
cmp
std
sub
push
icebp
inc
lock
push
fmulp
orl
pop
and
add
jp
inc
pop
out
sbb
fs
jle
jmp
repnz
and
mov
scas
adc
xlat
stos
mov
cwtl
or
dec
std
push
inc
inc
jb
or
std
rcrb
mov
scas
insl
sbb
jnp
xor
sbb
aaa
sbb
and
add
ficoms
xchg
ds
gs
or
incl
add
mov
mov
popa
jns
pop
insb
test
adc
pop
fiadds
and
xor
imul
mov
decl
mov
cmpsl
xchg
test
imul
inc
bsr
jmp
mov
js
aaa
loopne
cmpsl
arpl
pop
add
loop
dec
int3
arpl
inc
ret
out
inc
pusha
repz
add
rcll
mov
and
js
push
and
pop
cmp
sbb
and
call
adc
js
stos
aam
out
stos
jecxz
psrld
mov
cmp
adcb
stos
movsl
push
mov
cwtl
out
cmc
mov
jmp
les
push
icebp
cmpsl
mov
loopne
icebp
stos
pusha
or
sbb
outsl
mov
jl
rcr
dec
rol
add
push
lahf
inc
mov
and
pop
imul
adc
int
mov
pop
mov
loopne
add
ficomps
dec
xor
test
xchg
inc
lret
mov
inc
cld
jb
mov
inc
lods
js
in
arpl
sbb
sub
ja
mov
scas
sti
test
and
mov
add
xchg
lcall
xchg
dec
adc
mov
movsb
test
mov
sbb
xchg
adc
sub
xor
jmp
das
lret
arpl
mov
add
outsb
mov
lods
shll
fwait
lahf
dec
jmp
cwtl
mov
in
lea
shlb
pop
sbb
adc
cmp
jnp
stos
mov
pop
imul
addr16
neg
add
mov
xchg
jae
pop
add
and
rclb
and
pop
ret
pop
and
jmp
add
out
in
out
lahf
cmp
cs
outsb
pop
negl
les
aad
test
or
sub
prefetchwt1
insb
jge
arpl
mov
push
mul
loope
add
jno
dec
ds
cmpb
je
sub
dec
cmp
cmp
and
fcmove
movsl
jb
ret
pop
mov
jecxz
jl
enter
cmp
add
rorl
push
loop
enter
call
lods
cmp
dec
xchg
and
or
push
call
xor
scas
lods
in
mov
dec
xor
negb
adc
xlat
test
push
mov
or
test
mov
sub
pop
cmp
sbb
ds
or
or
push
fisttpl
push
dec
repnz
jae
dec
lods
mov
stos
add
add
jecxz
xchg
arpl
aas
pop
push
lods
cmp
push
mov
mov
enter
mov
mov
aam
or
cmp
inc
push
rorl
sbb
cli
loop
xor
and
xchg
sti
push
aas
inc
inc
push
outsl
les
push
push
dec
cmp
cwtl
mov
add
adc
arpl
lock
mov
sbb
pop
loop
xchg
fisubrl
addl
outsl
mov
pop
mov
mov
mov
stos
mov
or
in
fdivl
cltd
repz
addb
jb
js
xor
cmc
push
insb
into
lahf
adc
clc
shlb
ljmp
push
test
add
pop
cmp
shll
cmp
xchg
enter
aas
mov
mov
mov
iret
cmp
add
lods
dec
push
shll
push
adc
cwtl
push
and
aad
push
stos
jg
jl
mov
ja
call
push
push
jg
outsb
lahf
xchg
jb
pop
sti
mov
mov
bound
loopne
inc
jo
jnp
call
mov
incb
xor
gs
ljmp
pop
ljmp
xchg
int
mov
cmp
aas
vmovsd
outsb
rcl
sbb
or
clc
adc
clc
push
jmp
gs
push
push
sahf
insl
cmpsb
adc
test
mov
scas
sbb
xor
or
pop
inc
xor
cmc
mov
dec
adc
and
fnstenv
lock
shlb
dec
loopne
inc
test
fs
or
gs
push
scas
xchg
sub
fildl
dec
fsubrp
lods
adc
cmc
or
int3
jnp
clc
push
pop
dec
addb
movl
sbbl
mov
mov
rcrb
lock
sub
enter
jge
das
mov
outsl
inc
and
aaa
pop
insb
fldl
mov
dec
icebp
nop
test
les
bound
fistpl
orb
xor
jo
lret
push
push
out
jecxz
inc
fisubrs
in
jg
add
cmp
or
mov
subl
pop
insl
pushf
xor
and
ret
js
test
or
sub
imul
mov
popf
push
sbb
movsb
sahf
rol
or
mov
add
into
mov
fneni(8087
jae
pop
adc
push
push
and
mov
cmp
adc
inc
jno
xor
mov
mov
or
enter
push
and
jp
nop
repz
and
out
fwait
stos
loope
out
mov
lock
in
or
xor
stc
stc
xchg
popa
push
movsb
loopne
pop
cld
int
out
rcrb
cmpsb
xor
std
cwtl
pop
xchg
adc
mov
loopne
mov
ss
fnsave
enter
xchg
int3
pop
in
add
faddl
push
adc
inc
sub
mov
or
pop
add
add
imull
cmp
xor
int
pop
pop
sub
loope
out
stos
testl
lods
jo
imul
cmp
or
cmpsb
ffreep
jge
jns
ret
cmpsb
jecxz
add
aam
test
sbb
xor
scas
loope
or
push
add
xchg
loop
sbb
mov
xchg
incb
sbb
sbb
xchg
inc
dec
or
cwtl
or
jbe
into
std
loopne
repnz
or
les
xor
or
pop
rcll
stc
cmp
ret
jae,pt
add
pop
adc
push
and
sbb
getsec
ja
xlat
lods
aas
fwait
xchg
out
sti
jo
aas
sti
sbb
xor
mul
ds
sub
sub
mov
icebp
pop
cmpsl
push
pusha
jecxz
pushf
cld
mov
sbb
je
arpl
xorl
test
aad
sbb
xor
mov
cmp
cmp
mov
dec
int
lods
mov
mov
in
imul
dec
bound
test
or
out
pop
in
xor
sbb
scas
xchg
mov
xor
cmp
lahf
inc
imul
dec
ret
sbb
ljmp
sbb
xor
sbb
lcall
sbb
sbb
push
in
cwtl
and
mov
hlt
fidivs
aaa
push
and
cwtl
push
andl
imul
add
dec
xchg
adc
lret
and
mov
push
shrl
xlat
jmp
jge
mov
clc
imul
pop
pushf
pusha
mov
and
bound
and
daa
outsb
mov
pusha
dec
data16
stos
add
xor
stc
aad
ds
mov
dec
xor
loop
pop
popa
jge
je
sbbb
pop
std
and
add
add
mov
ret
push
or
outsl
xchg
jl
jecxz
test
xchg
rol
push
push
mov
sbb
sti
adc
lea
into
dec
cmp
pop
inc
imull
mov
or
aam
leave
fwait
hlt
loopne
xchg
lret
cmp
add
xchg
test
in
jmp
mov
pop
xchg
xchg
ret
inc
push
mov
push
or
pushf
sbb
xchg
data16
rcrb
xor
sub
test
mov
push
or
pushf
pushf
pushf
jns
push
mov
call
fscale
je
adc
repz
in
mov
fistpll
testb
xchg
push
mov
sub
inc
popa
mov
call
lret
jg
cmovns
pop
gs
insl
arpl
sahf
fnstcw
dec
sbb
popf
inc
shrb
mov
int
and
inc
push
xchg
lret
repnz
popf
subb
outsl
aas
jnp
lcall
mov
or
iret
inc
pop
jp
lds
andb
cwtl
mov
clc
cmp
stos
jl
outsb
sbb
sub
movsb
loopne
out
orl
dec
xchg
xor
and
push
imul
push
nop
and
ss
shlb
ja
mov
dec
xchg
pop
and
dec
mov
cwtl
je
xchg
jmp
loop
fstl
bound
mov
rcrl
xchg
in
pop
xchg
sbb
cmp
insb
stos
push
addr16
imul
sti
sub
add
adc
mov
ss
movsb
mov
mov
scas
mov
pusha
jne
add
xchg
enter
test
push
call
dec
lods
into
sbb
xlat
ljmp
or
jp
or
pop
mov
adc
dec
adc
dec
cmp
sbb
adc
out
adc
xor
push
add
dec
sub
out
gs
xchg
mov
js
sbb
push
pop
push
or
adc
fwait
ret
fcomps
insb
mov
fwait
inc
clc
les
in
lods
scas
pop
jmp
shll
mov
pushf
mov
add
nop
push
js
je
arpl
loope
mov
nop
imul
xor
loopne
std
sbb
fsubrl
pop
jbe
pand
jb
mov
push
repnz
movsb
xor
adc
lcall
dec
cmp
fisttpll
pop
mov
xlat
fstps
push
call
and
repnz
push
pop
rolb
mov
cmp
sub
or
mov
sbb
cmp
sub
dec
jg
call
jb
roll
sub
inc
or
xchg
sub
mov
xor
test
stos
lea
out
cmp
push
inc
mov
mov
mov
out
in
jg
xor
push
push
imul
and
push
fs
je
xor
aaa
cmp
test
jae
pop
sti
mov
pushf
shr
stos
mov
mov
je
mov
lcall
fwait
and
das
es
jae
dec
stc
xchg
jg
cmp
xchg
jmp
popa
and
mov
push
adc
push
lds
fdivp
stos
pusha
mov
ret
and
jnp
movd
add
fimull
pusha
cmpb
xor
and
sbb
and
fcompl
dec
enter
pop
aam
lret
test
mov
inc
cld
shr
jl
mov
jno
push
or
push
or
adc
lods
sub
jecxz
xor
fs
xor
jae
test
push
inc
xchg
and
pop
cmp
test
mov
testb
stos
ss
outsb
mov
sbb
sbb
movsl
outsb
push
int3
xchg
or
pop
jmp
cli
push
mov
jecxz
lds
aam
jmp
cltd
push
adc
push
les
or
inc
pop
lods
repz
das
add
mov
cmp
andb
outsl
xchg
push
xchg
dec
pop
nop
xor
test
add
mov
lret
shll
adcl
loop
inc
imul
xchg
fbstp
into
repnz
fnstenv
fmull
pop
pop
cmc
xor
push
cmp
hlt
idivl
pushf
mov
add
cmp
cmpsb
mov
dec
jb
xorb
sub
cmc
movsb
fwait
popf
aaa
in
cs
in
push
sub
hlt
mov
add
xchg
stos
push
push
aam
inc
pushf
push
push
sbb
sub
and
subb
and
jo
imul
pop
test
push
add
add
adcb
jmp
mov
sahf
out
adc
mov
add
ljmp
pop
xor
push
es
jecxz
out
cmp
popl
pop
loope
xchg
sarb
jge
loopne
xor
testb
inc
sbb
jae
sti
inc
sbbb
sub
xor
hlt
mov
in
inc
xchg
ss
jmp
inc
repz
jecxz
xchg
arpl
fstp
in
mov
ret
out
dec
ficompl
fistpl
in
movsl
insl
sbb
ret
sub
call
repz
loope
or
mov
sub
lcall
shrl
jnp
pop
loop
inc
stos
je
inc
pop
cmp
or
jo
repz
scas
mov
iret
mov
xchg
xor
test
sub
jecxz
jnp
mov
fistpll
pushf
ja
or
mov
call
mov
push
xchg
adc
inc
xlat
leave
loope
sbb
mov
or
mov
add
in
xchg
subl
xor
xor
mov
pop
popa
push
popf
addb
mov
sub
dec
dec
pop
mov
mov
sbb
fstl
mov
jbe
sti
jns
repz
pusha
sbb
pushl
xor
or
add
seto
mov
xor
jle
mov
das
out
mov
fcmovne
arpl
jg
cmpsl
in
shll
mov
mull
loop
jns
mov
xchg
xchg
je
mov
outsl
pop
adc
xchg
fldenv
lret
mov
lods
fisttpl
push
lods
and
cltd
jbe
and
shll
inc
gs
and
xor
adc
ficompl
jge
outsb
rolb
jns
mov
push
xlat
cmp
push
inc
je
inc
inc
sbbl
mov
notl
stos
out
adc
push
test
inc
stc
pop
mov
sahf
outsl
scas
in
repnz
pop
leave
dec
fst
mov
push
push
jne
lcall
fldcw
sub
jb
je
fsubs
into
inc
inc
inc
fiaddl
fiadds
arpl
mov
das
shl
sub
mov
test
andl
push
xchg
sub
sbb
ss
cmp
dec
pop
jge
addr16
sbb
lret
mov
sbb
sbb
bnd
xlat
mov
negb
mov
inc
shl
out
cmp
out
arpl
imul
clc
jnp
mul
push
pop
jge
xchg
or
dec
mov
outsb
in
jno
out
push
xchg
in
sub
fcoms
push
insb
gs
push
std
mov
stos
or
mov
jbe
mov
out
mov
data16
and
mov
xchg
gs
popf
xchg
push
cmp
mov
fldcw
pop
or
xchg
mov
adc
clc
inc
cltd
aas
out
clc
adc
call
jns
mov
sub
fldenv
pop
les
xor
jnp
fldl
lahf
in
sti
fs
add
pop
das
or
push
inc
bound
sbb
hlt
push
xor
shll
imul
or
jnp
or
mov
and
mov
bound
lret
lret
xlat
mov
insb
sbb
adc
push
dec
sbb
test
inc
sbb
or
test
mov
mov
mov
sbb
fdivr
cli
pop
push
cmc
mov
ja
dec
inc
mov
jnp
xchg
cmp
jmp
push
cmpsb
sub
call
and
out
xchg
push
push
push
push
adc
iret
scas
movsl
iret
decl
xor
lret
in
icebp
jmp
inc
jmp
xor
jmp
cmp
mov
xchg
ret
sub
pop
sbb
filds
xor
cmp
std
cmp
mov
jbe
mov
mov
push
and
inc
in
sub
stc
xor
movsl
rolb
movsl
cwtl
rcrb
in
add
dec
fstps
imul
das
loopne
mov
push
push
xchg
xor
movsl
and
call
pusha
add
add
scas
outsb
daa
cmp
cld
fists
dec
mov
mov
stc
std
enter
xor
mov
or
test
test
sbb
stos
std
mov
adc
jp
mov
or
xlat
or
mov
cmpsl
nop
add
add
test
movb
in
in
and
sub
lret
mov
cmp
fiaddl
cmc
add
mov
cltd
insl
in
pop
xor
pop
vphadddq
andl
or
testl
mov
fsubr
lcall
out
mov
cmp
push
test
loopne
fimuls
pop
inc
in
ja
lock
out
pop
lret
dec
push
es
push
lock
pop
lods
popa
mov
cmp
jle
sub
jns
xor
pop
fcmovu
inc
roll
icebp
aad
hlt
push
in
pop
cmp
pusha
xchg
dec
cmp
inc
pop
xchg
push
sbb
inc
lret
arpl
pop
mov
in
sbb
pusha
lods
push
cmp
aam
aas
popa
sbb
mov
and
mov
jge
popf
das
add
mov
faddp
xor
out
pop
dec
je
call
pop
inc
lock
in
dec
push
fidivl
les
scas
sub
ds
mov
mov
jnp
inc
shr
insl
mov
sbb
xchg
push
pop
pop
jmp
cli
mov
pop
les
das
sahf
gs
cmpsl
dec
or
xor
lds
out
pusha
or
pop
mov
xlat
ret
test
mov
sbb
stos
cli
xor
insl
ret
jo
xchg
jne
bound
test
fisttpll
pop
movsl
adc
jne
das
int
xor
push
fnstenv
add
insl
scas
dec
scas
cmc
xchg
cmp
fsubrl
mov
jo
outsb
das
push
mov
mov
xchg
jne
push
jnp
fcmovb
movl
popa
inc
xchg
jle
or
jl
popf
mov
or
aad
mov
popa
mov
xchg
and
fsubr
and
popf
mov
and
mov
imul
sti
and
pop
ret
andb
cld
pusha
ret
movb
dec
jns
les
or
adc
nop
nop
repnz
cmp
cmc
push
dec
cmp
xchg
inc
cmp
shl
dec
repnz
movsl
test
cmp
int3
into
int3
repz
addr16
es
clc
fdivrs
ret
jp
cmpsl
test
and
jno
adc
xchg
sub
cli
addr16
adcl
out
pusha
mov
test
xlat
int3
imul
ljmp
inc
insl
lret
and
mov
stos
mov
sti
push
xor
xchg
xorb
testl
sbb
jg
inc
pop
xlat
jmp
sub
dec
into
pop
test
je
call
or
mov
lahf
ja
xor
and
dec
iret
jae
sar
or
ljmp
insl
push
paddsw
outsl
adc
xor
pop
push
out
add
sbb
fistpll
fs
xchg
mov
sbb
fwait
add
hlt
cmp
cmp
inc
out
cmp
mov
adc
sbb
addr16
pop
in
nop
shlb
mov
sub
cmp
pusha
test
jmp
ljmp
mov
out
gs
jge
lds
xor
movsbl
lock
mov
push
stos
stc
fs
aad
adc
stc
popa
mov
mov
mov
cmp
iret
or
icebp
scas
push
mov
sti
icebp
inc
stos
notb
data16
mov
pop
or
fisubrl
add
es
test
mov
scas
or
insl
in
hlt
sub
dec
loopne
pop
sbb
mov
mov
mov
and
xlat
clc
mov
roll
add
fidivl
imulb
pop
bound
xchg
mov
or
pop
jbe
xchg
inc
test
sbb
dec
mov
dec
sti
movsl
fisubs
dec
aam
cmp
sbb
movsb
mov
mov
push
test
cmp
sbb
jo
push
fldenv
and
mov
inc
jmp
inc
jno
test
mulb
inc
je
or
ffree
mov
lret
fcomi
push
leave
cmp
fcmovu
xor
mov
arpl
jmp
lcall
mov
or
adc
iret
mov
and
nop
mov
and
inc
add
imul
xchg
outsl
adc
and
sub
mov
pop
into
sbb
adc
mov
adc
or
leave
ds
lcall
add
pop
inc
xorl
xchg
mov
xor
sbb
popa
pop
mov
sub
sbb
rolb
loope
ret
jno
mov
lret
add
bound
out
xchg
mov
jg
mov
xor
repz
es
cmp
shll
fwait
xlat
cli
or
mov
and
call
out
dec
pop
mov
filds
cli
and
push
push
cmp
jge
jp
popa
pop
rclb
cmp
ja
adc
aam
xchg
xchg
out
jbe
sahf
lods
lods
imul
cs
cld
and
idivb
shlb
or
pop
mov
aad
inc
mov
jmp
out
loope
je
dec
sti
adc
mov
ss
movsl
setbe
fidivrl
aam
fdivr
lock
and
aas
into
xchg
ljmp
icebp
clc
jno
cmp
movl
dec
out
mov
loopne
mov
ficomps
loope
xchg
mov
xchg
inc
rcrb
push
or
pop
out
jns
sahf
sub
pusha
jl
sub
sbb
fwait
jle
int
cmp
mov
cmp
rcrb
int
cmpl
jl
push
jle
sahf
mov
adc
fidivrs
mov
xor
out
pop
xchg
leave
adc
popf
leave
cmpsl
sbb
adc
cmp
stos
aad
cwtl
or
js
dec
jbe
or
call
inc
loope
je
bound
push
lret
mov
push
and
gs
dec
sub
sahf
outsb
divl
icebp
pushf
movl
push
clc
test
cmp
lea
or
cmp
es
mov
in
jmp
pusha
addr16
mov
mov
xor
adc
jecxz
fstl
out
popl
sti
jg
sbb
adc
outsb
push
add
mov
repnz
mov
sbbl
ficoml
xor
stc
dec
mov
push
in
lods
or
xor
adc
fsubs
xchg
pop
dec
add
dec
xchg
into
sar
test
add
incl
mov
jo
fwait
xor
pop
fwait
or
shl
out
xchg
in
fidivl
push
xchg
pop
aam
jnp
push
jns
repnz
dec
inc
jge
sti
inc
hlt
rcl
fwait
mov
aam
push
ret
stos
aas
push
jbe
or
stc
push
lds
cmpsl
aas
cmp
jmp
mov
cwtl
les
pop
xor
mov
clc
js
xor
mov
movsb
in
xchg
lock
jp
cs
pop
pop
push
aad
jle
mov
shlb
and
fidivs
outsb
fs
lods
fldln2
inc
mov
adc
lret
aaa
or
mov
cmpsl
lock
in
mov
lahf
bound
adc
aaa
mov
rol
shlb
clc
int3
or
test
pop
sub
pop
loop
xor
xlat
pop
or
stos
rol
xchg
jg
mov
fldt
pop
imul
and
xchg
jl
mov
jo
fimull
iret
lods
addr16
cs
fistl
scas
push
lret
xchg
std
xlat
pusha
in
int
into
repnz
icebp
orl
mov
rcrb
mov
cmpsl
push
xchg
jne
fcoml
add
xchg
int3
mov
mov
jns
sbb
daa
sarl
cld
jle
xchg
and
mov
dec
and
xchg
gs
icebp
xchg
push
mov
push
xchg
cmp
sub
ficoml
stos
and
xor
pusha
test
and
insb
movsb
jle
or
inc
cmp
adc
fchs
out
test
or
jnp
fsubrl
jle
or
mov
jge
inc
add
ljmp
dec
push
cmpsb
and
bnd
mov
inc
sbb
repz
mov
movsb
in
add
jmp
fwait
repnz
mov
ljmp
repnz
leave
mov
inc
cmpsl
sub
push
mov
and
int3
icebp
out
std
sbb
mov
movsl
aas
popa
fs
dec
sbb
cli
data16
cltd
adc
mov
mov
sarl
fstps
imul
add
int
xchg
lea
xlat
pusha
mov
fsubrl
jb
je
int
pop
mov
cmp
mov
sbb
stc
daa
mov
pop
xchg
mov
jl
es
sub
adc
or
xchg
push
rcll
mov
xchg
push
arpl
in
adc
add
cmp
cmp
cli
mov
mov
sahf
mov
in
fwait
adc
mov
ja
or
mov
push
test
pop
mov
cmpsb
movsb
mov
xor
movl
cmpsl
test
data16
lcall
jle
lret
xor
pop
jns
testb
sar
loope
mov
and
push
inc
iret
add
adc
inc
mov
movsb
pop
test
and
movsb
mov
jmp
sbb
add
adcl
je
xor
jp
push
loop
jmp
cwtl
inc
jne
mov
sub
roll
es
inc
pop
jp
nop
mov
flds
add
mov
and
mov
stos
mov
xor
mov
push
jae
sub
cwtl
int3
mov
fsub
xchg
stc
popf
or
loope
bound
xchg
dec
jmp
push
and
cmp
pop
scas
pop
inc
fucomi
bndldx
mov
pop
xor
aaa
enter
aas
cli
sbb
push
lods
arpl
push
fs
or
or
test
outsb
pusha
movsb
dec
mov
in
mov
movsl
test
notl
xchg
mov
xor
xchg
xchg
lcall
jnp
sar
jl
sub
cs
adc
dec
mov
sbb
dec
mov
andb
inc
test
mov
in
sbb
or
cmc
add
dec
adc
ss
lds
mov
loopne
fucomip
fs
cwtl
sub
jecxz
inc
mov
mov
gs
push
imul
loopne
adc
sti
negb
xchg
sbb
pop
sub
pushf
xchg
cld
cmp
inc
push
add
icebp
popa
lret
leave
cmp
dec
test
pop
inc
push
sti
xlat
andb
sbb
adcl
mov
das
repz
jno
push
inc
pusha
cmp
mov
bound
lret
mov
jbe
jecxz
and
mov
xorl
xor
lret
cltd
push
fildl
mov
push
pushf
stos
inc
out
or
xchg
jns
jae
adc
xchg
add
fs
push
jbe
dec
ret
mov
push
mov
jmp
daa
pushf
cmp
pop
sbb
int
adc
enter
std
adc
clc
jbe
push
jl
xor
xchg
daa
pop
jmp
cwtl
dec
loope
hlt
fiadds
dec
jb
ss
inc
icebp
cmp
sti
sub
add
mov
out
icebp
hlt
inc
push
lea
mov
rorl
popa
xchg
xchg
test
sub
push
scas
lods
xchg
inc
or
fisttps
push
xchg
xchg
mov
add
js
pop
fs
inc
out
push
mov
xor
or
cmp
push
mov
inc
adc
imul
jg
shr
popf
cld
dec
pop
scas
mov
pop
mov
xchg
jne
shlb
cld
pop
jl
push
and
int3
aam
adc
adc
vmovaps
mov
jle
jp
jmp
pop
sbb
push
mov
data16
mov
fs
sbb
stc
std
and
in
popf
mov
pop
push
dec
adc
clc
mov
lods
lods
cmpsb
daa
fcompp
aam
aaa
sub
lods
mov
imul
fptan
mov
mov
ljmp
lods
and
mov
jns
mul
jge
iret
das
xor
dec
dec
add
stc
push
lock
push
shrl
fucomip
rcr
cmp
dec
jae
add
divl
push
ficompl
scas
push
lcall
fnsave
pop
in
test
fistpl
jmp
imul
into
rcr
inc
mov
xchg
repz
cwtl
fisubs
cmpsb
je
or
into
addb
xor
into
fnstenv
arpl
cs
sbb
mov
repz
add
inc
dec
sub
je
movsb
cwtl
enter
mov
cmpsb
std
push
mov
jbe
aaa
and
loopne
mov
cmpb
pop
mov
and
addb
push
and
add
jl
sub
sbb
or
arpl
pusha
dec
cmc
in
fcmovnb
adc
lds
xchg
sbbl
push
test
test
push
loope
mov
popa
ds
mov
sub
bound
dec
jl
xor
jno
ret
das
add
fwait
in
pop
mov
stos
shlb
ss
out
ljmp
data16
mov
icebp
and
aad
aaa
mov
stc
test
out
add
jae
fists
pushl
int3
mov
pop
stc
jo
loop
and
mov
pop
call
insl
push
mov
jmp
lods
enter
fdivl
ret
clc
add
pop
ret
sub
mov
and
mov
sbb
jno
into
pop
push
loopne
sti
stos
loop
rorl
jl
imul
lock
inc
pop
inc
xor
out
int
mov
sahf
repz
dec
popf
out
cltd
adc
adc
filds
push
mov
outsl
xor
loopne
and
subb
xor
jl
mov
pop
pop
cld
lock
ds
sbb
mov
pop
push
and
mov
inc
mov
adc
or
jno
out
jecxz
dec
insb
jmp
cltd
enter
or
cmpl
inc
aaa
or
push
loopne
les
xor
sub
fstpt
pop
es
loope
cmp
adc
cmpsb
sbb
mov
iret
push
pop
movsb
inc
add
xchg
imul
enter
in
pop
mov
call
sub
inc
adc
mov
xlat
stos
push
les
movsl
rclb
push
stos
imul
lret
mov
arpl
jnp
add
sbb
inc
xor
enter
arpl
rcl
outsl
xchg
mov
xchg
lret
pop
stos
push
push
fsubs
adc
cli
outsl
cmp
cld
pop
jmp
outsb
das
push
imul
sbb
dec
shrb
jo
scas
xchg
and
aam
adcl
sbb
jno
lock
add
mov
mov
aad
xchg
mov
fsubl
insl
dec
cwtl
outsl
ds
call
inc
inc
fstps
popa
pop
lahf
aad
daa
pop
ds
rorl
mov
gs
lahf
jle
inc
iret
cmp
pushf
rcll
loope
insb
inc
nop
jmp
inc
add
pop
sahf
leave
jle
add
std
cmpsb
movb
jge
addr16
inc
cli
dec
shrb
imul
daa
mov
pusha
mov
test
mov
lret
jae
pop
mov
mov
lods
orb
xor
dec
iret
sbb
add
mov
xor
xor
fs
inc
adc
jo
jbe
test
push
add
iret
and
and
pop
sbb
or
js
fisubrs
mov
in
frstor
pushf
ljmp
mov
dec
and
aam
mov
sbb
adc
mov
or
movl
push
sub
and
jmp
stos
cwtl
in
das
pop
sub
push
pop
add
mov
mov
mov
adc
cli
jecxz
ss
dec
dec
mov
sub
cmpsl
and
jle
mov
dec
adc
insl
int3
push
pop
test
sahf
push
xchg
cwtl
les
testl
sbb
or
and
hlt
mov
xchg
fisubs
daa
adc
dec
mov
xchg
adc
into
das
movsl
inc
mov
pushf
stos
and
movsb
jmp
fadds
shrl
lea
mov
cmp
xchg
arpl
imul
mov
pop
into
add
jnp
insl
xchg
insb
or
jge
jecxz
sub
notl
cmp
sbb
add
sub
xor
mov
fimull
mov
std
mov
sbb
daa
push
cld
pop
add
cld
mov
andb
xor
xorl
push
jecxz
push
repz
ss
dec
push
xor
lcall
lret
xor
xor
inc
pop
cmp
test
jge
stos
xor
sbb
cmc
dec
nop
xor
cmp
lea
lret
sarl
aaa
inc
aas
inc
mov
push
adc
rcrl
jp
dec
adc
fisubs
in
mov
push
mov
and
add
dec
cmp
ljmp
push
pop
fwait
adc
hlt
sbb
jae
push
int
mov
xor
pop
scas
mov
mov
movsl
inc
sbb
fsts
jmp
jle
fdivp
mov
dec
push
pop
mov
testl
xor
xor
int
cmp
insb
xchg
ja
stos
in
imul
push
movsl
pop
in
pop
outsl
test
fwait
mov
mov
aad
push
scas
adc
aas
and
pshufw
adc
inc
pop
add
push
xor
movsl
imul
adc
jmp
jg
push
lods
add
mov
dec
adc
int
cmp
cmp
outsb
adc
repz
add
je
mov
jecxz
pushf
rolb
cmp
lret
xchg
mov
inc
movsb
lods
sub
push
gs
fs
imul
bound
mov
cmp
push
push
fistl
repz
xchg
jb
xchg
mov
popa
sbb
mov
add
push
mov
outsb
stos
add
xchg
push
add
xlat
xor
push
and
lcall
cmp
ret
cmp
aas
ljmp
push
fs
into
mov
pushf
addr16
or
sub
sub
xchg
daa
outsl
or
in
fcoms
and
sub
jp
fwait
repnz
pop
test
in
pushl
lea
mov
sbb
nop
into
push
jo
push
cmp
jo
adc
sbb
mov
repz
add
ret
jmp
lret
ret
shll
pop
mov
pop
jb
or
leave
or
or
inc
adc
sbb
fsubl
sbb
adc
lret
adc
pop
dec
xchg
xchg
pusha
vmulpd
or
loope
les
loopne
adc
call
subb
jb
lods
ljmp
rcl
in
mov
dec
pushf
add
das
lods
jge
mov
sbb
sub
lahf
popa
push
adc
adc
rclb
sbb
push
ljmp
mov
movsb
test
shrl
or
mov
hlt
js
adc
mov
in
mov
push
repz
stos
aam
dec
ret
pop
idivl
sbb
cmc
shll
xchg
cld
adc
fisubs
popf
cmpsb
xchg
fcomps
xchg
les
imul
test
cltd
pusha
incb
mov
jl
sub
pusha
cwtl
fmuls
ret
push
fwait
popa
int3
xchg
cltd
mov
or
jg
rol
dec
jnp
add
aam
xchg
xchg
pop
shlb
jne
mov
xor
mov
fstps
test
ss
mov
das
push
arpl
popf
sub
scas
pop
adc
daa
xchg
adc
xchg
push
dec
jb
cmp
stc
fisubrl
push
jmp
enter
jmp
push
sub
pusha
stc
cmp
sbb
ljmp
aaa
out
fdivl
int3
adc
inc
test
dec
addr16
stos
out
adc
pop
dec
mov
jbe
dec
inc
pop
pusha
mov
jns
ds
mov
ss
dec
inc
fildll
push
into
addr16
dec
push
or
mov
pop
sub
lahf
imul
ja
fidivl
mov
dec
push
sbbl
cmpsb
xchg
adc
imulb
cmp
das
insb
and
xorb
push
push
cmp
leave
sbb
ss
imul
cltd
push
clc
cmp
ret
std
insl
repz
mov
or
inc
mov
fdivrl
pop
mov
iret
imul
mov
push
xchg
insl
bound
mov
mov
aad
adc
lahf
insl
inc
cli
jl
mov
insl
jne
testl
test
sub
data16
push
or
xlat
out
outsl
push
loopne
xchg
push
ret
push
sub
push
je
xchg
jmp
frstpm(287
jae
popf
mov
cmpsb
scas
lods
nop
repnz
add
in
sub
push
in
movsl
and
cmp
mov
popf
xorb
movsl
inc
xchg
lods
jns
push
push
mov
push
sbb
adc
rcrb
nop
mov
mov
sbb
repz
push
pop
cmp
pop
cld
push
mov
or
cmp
xchg
and
aaa
arpl
xchg
fisubrs
stos
inc
push
push
mov
pop
fwait
push
push
repnz
jmp
and
enter
mov
idivl
pop
jmp
call
in
dec
filds
loope
add
mov
pop
mov
jge
push
loop
mov
fs
xchg
mov
subb
cltd
cmc
pushf
cmp
addb
add
cli
mov
cli
xchg
shll
ret
aad
push
mov
repnz
or
add
add
mov
sbb
mov
pop
or
call
dec
pop
push
add
out
cmpsl
sub
and
je
pop
jmp
stc
inc
push
es
sahf
aas
sub
movsw
out
xchg
mov
insl
hlt
jo
jle
pop
mov
or
dec
add
or
std
mov
rorb
test
cmp
add
dec
adcl
aaa
or
adc
jmp
and
xlat
rcll
jmp
mov
cmp
or
ret
or
push
jb
les
out
cmp
test
mov
lock
or
pop
mov
ljmp
inc
insl
push
inc
aad
test
push
lea
mov
insb
and
and
cmp
into
fidivrl
mov
cmp
lock
jmp
pop
jno
mov
lea
shrl
add
push
lcall
popa
lret
js
adc
cld
fcompl
xchg
fnsetpm(287
cmp
idivb
pop
mov
pop
jge
mov
jp
xchg
mov
xchg
gs
repz
mov
es
rcr
shrb
xor
fmul
jne
leave
inc
sti
ja
in
xor
adc
inc
cmp
push
sub
jnp
sub
or
xor
mov
jno
or
push
imul
jecxz
js
loopne
test
push
out
mov
ds
pop
and
xchg
lar
vphaddudq
add
or
pushf
test
adc
fnsave
xchg
sbb
js
aas
ret
pop
add
push
data16
ljmp
jecxz
iret
insb
call
mov
jl
or
and
push
lock
and
ja
cs
push
mov
jp
inc
call
xor
and
mov
les
lahf
mov
imul
inc
int3
cmpsl
outsb
xor
ret
adcl
jge
fdivr
rol
mov
mov
mov
or
sahf
mov
or
repz
ret
pushf
nop
sti
sub
ffreep
and
ja
leave
shl
lahf
cmpsl
sub
xor
outsb
push
mov
lods
cmp
out
pop
sub
subl
insb
iret
xchg
xchg
aad
int3
mov
xchg
cmpsb
andb
cmp
push
in
or
jae
gs
xor
fwait
pop
jno
mov
jae
add
mov
sub
cmp
and
scas
ficomps
push
pop
movsb
lret
pop
rcl
jp
pop
dec
jmp
mov
mov
xchg
mov
cmpl
and
outsl
cmp
dec
jecxz
jne
jle
push
sub
mov
mov
ret
mov
xor
xor
xchg
aas
jmp
mov
outsb
mov
lcall
decb
push
out
inc
inc
or
sbb
and
outsb
cmp
in
adc
dec
xchg
push
dec
lret
jb
xor
lret
in
dec
push
push
mov
cmp
out
jle
repz
out
outsb
mov
cs
adc
int
jo
push
popa
push
or
mov
gs
loopne
imul
sub
loope
out
lods
insl
mov
dec
mov
pop
push
mov
bound
and
sarb
fidivrs
cmpsl
pop
xchg
xor
insl
pop
push
test
or
sahf
pop
mov
sub
jb,pn
cmp
push
inc
add
std
std
jmp
mov
jl
in
sbb
mov
lods
and
cmp
lret
inc
sbbb
push
sub
xchg
shlb
lods
cmp
fwait
sbb
or
pop
int3
mov
ss
mov
cs
jge
pop
ret
push
and
iret
lods
rcr
jb
loop
test
and
and
and
sbb
mov
adc
mov
cld
jmp
mov
push
push
sbb
mov
div
mov
fwait
mov
cmp
rcrl
lods
mov
in
push
xchg
xchg
in
pop
mov
push
aam
shlb
xchg
mov
fwait
inc
and
xor
cmp
stc
sbb
sti
sbb
push
sti
sbbb
or
xor
push
xor
in
gs
mov
sub
mov
fisttps
shl
cmp
hlt
data16
jne
or
or
adc
out
sbbl
cli
jb
or
insl
out
xor
enter
xor
sub
es
cmc
push
addr16
mov
push
inc
icebp
inc
addr16
hlt
mov
jmp
cld
push
rclb
xlat
pop
jmp
jle
or
add
loopne
pop
ds
push
pop
mov
adc
test
jb
sahf
inc
jmp
mov
cs
xchg
mov
rorb
adc
dec
daa
mov
adc
jno
cld
adc
outsl
mov
lcall
repz
jg
jmp
repnz
sahf
push
or
mov
inc
and
dec
outsl
popf
mov
test
imul
mov
xor
xchg
jecxz
adc
dec
lods
sbb
lock
jae
mov
xor
ds
repz
outsb
jbe
ljmp
scas
or
inc
insb
mov
push
or
notb
dec
les
leave
or
mov
sbb
in
nop
xchg
xchg
ljmp
push
xchg
xlat
subl
push
xchg
ffree
push
pop
imul
out
adc
and
outsl
push
add
and
sub
mov
xchg
imul
aaa
lods
sub
or
fsubrs
int3
fimuls
and
scas
imul
xchg
mov
fwait
push
aas
stos
inc
leave
ja
test
in
sbb
aas
cmpsb
popa
jge
pusha
neg
xchg
cmp
pop
loopne
fsubs
cmpsb
lcall
add
cmc
adc
in
leave
ss
sahf
xchg
nop
sub
adc
je
int
in
xor
ret
ffreep
and
cmpsl
mov
cmpsl
jmp
or
mov
in
jp
push
negl
bound
stos
add
lock
push
mov
inc
mov
jecxz
scas
jge
je
dec
inc
in
test
cltd
adc
xchg
ds
imul
stos
inc
mov
sub
xor
mov
jns
add
dec
in
mov
setle
hlt
aam
aad
cs
jbe
pop
cwtl
vmovmskps
xor
add
das
xchg
inc
pusha
jne
adc
bound
mov
shr
daa
pop
lcall
fwait
pop
or
cwtl
stc
mov
or
add
ret
xchg
inc
ja
mov
push
push
fs
add
lea
cli
mov
or
ret
or
or
mov
mov
call
aad
or
repnz
sbb
jo
ret
iret
orl
pushf
mov
push
mov
push
mov
mov
xchg
add
shll
lods
push
je
aas
outsb
fwait
sbb
movsb
and
nop
out
jmp
push
cmp
push
fcmove
xchg
jge
adc
call
test
adc
shlb
arpl
lcall
adc
adc
sbb
insb
cltd
jbe
lret
aam
xor
cmp
in
xorb
cmp
clc
rclb
cmp
and
inc
sbb
in
jmp
ljmp
je
cmp
dec
ljmp
cmpsl
dec
lahf
popf
mov
jne
test
scas
sub
sbb
cmpsl
bswap
and
fcom
pop
cmp
or
mov
into
insb
xchg
orl
popl
xchg
adc
js
mov
mov
mov
jmp
nop
and
mov
mov
mov
insl
imul
fs
jl
mov
xchg
add
rcrl
ljmp
sti
adc
jecxz
push
mov
sbb
adc
pop
scas
jp
test
push
inc
std
cs
and
xor
dec
mov
into
inc
imul
repnz
ret
testl
sub
lret
mov
mov
and
sbb
inc
inc
jmp
addr16
pop
out
cmpsl
fnstsw
push
sub
sbb
testb
mov
rorb
ret
test
out
out
in
mov
sarb
cmp
mov
sbb
or
pop
mov
mov
add
mov
pop
sub
outsb
imul
xchg
std
jno
add
push
shlb
jno
xor
push
jg
fbstp
dec
sub
push
dec
jae
enter
push
jl
add
xchg
std
out
fmuls
movsl
fnsetpm(287
mov
jp
imul
nop
and
into
aas
pusha
xchg
jb
movsl
mov
xor
ja
mov
jb
adc
stos
pop
sahf
movsb
push
push
addl
out
cmpsl
fmull
add
mov
push
andb
xchg
xchg
ffree
in
cltd
mov
call
push
test
dec
jne
fbld
fsubrs
shrb
adc
fcmovnbe
dec
pop
jge
sub
sub
sahf
inc
add
xchg
and
jmp
scas
inc
testl
xchg
es
push
pop
repz
ret
jno
xchg
stos
lahf
and
bt
adc
cltd
testb
and
sahf
lock
cmp
enter
mov
jno
sbb
dec
or
insb
push
cmc
xchg
or
ficoms
bound
mov
fdiv
dec
lahf
popf
mov
lcall
mov
mov
add
jp
dec
mov
inc
ds
xlat
hlt
sub
sbb
es
lock
lea
pop
sbb
cmc
jle
imul
fwait
lret
inc
sahf
inc
add
movsb
pop
outsl
xor
cmp
aas
sbb
movsl
xor
aas
jno
and
inc
cwtl
pop
adc
orb
or
dec
pop
or
mov
nop
fwait
mov
or
into
cmp
into
cs
cmp
xchg
push
xor
fs
jge
push
in
xchg
xchg
bound
stos
xor
rcll
fwait
addl
adc
mov
mov
jo
jae
push
push
pop
loop
ds
jg
push
cltd
xchg
test
sahf
das
clc
mov
idiv
fiaddl
xchg
push
int
dec
xor
adc
pop
int3
jno
jno
cmp
mov
paddb
cmp
dec
cld
insl
adc
movl
xchg
xchg
cmc
sub
xor
push
fs
xchg
pop
ss
in
mov
xor
cmp
jae
imul
mov
adc
jnp
scas
lcall
push
xchg
jbe
mov
fwait
mov
cs
or
dec
aad
pushf
aas
mov
mov
adc
cmp
testb
lret
ja
stos
xchg
mov
jecxz
movsb
aas
aad
push
lock
sub
mov
and
pop
cmpsl
sbb
xchg
repnz
out
cmpsl
lahf
lds
sahf
loop
xchg
jb
and
int3
dec
jmp
insb
add
lret
rcrb
jle
pusha
into
aaa
lcall
and
imul
fs
fldz
xchg
inc
sbb
scas
repnz
adc
arpl
es
int3
sbb
push
ret
mov
in
pop
pop
xchg
push
loopne
shr
mov
mov
adc
cmp
aaa
pop
lds
inc
int
popa
out
xlat
sbb
xchg
cli
stos
lret
mov
test
dec
add
and
sbb
sbb
icebp
mov
out
push
or
sub
mov
pop
sbb
ret
jo
aad
mov
dec
hlt
pop
adc
test
hlt
mov
push
or
fstps
sbbl
rcrl
xchg
mov
fs
dec
mov
inc
imul
sub
ss
mov
mov
int
lea
rcl
pop
ljmp
dec
cmp
push
clc
jb
popf
add
mov
sbb
outsl
mov
mov
push
std
or
lcall
jb
or
pushf
mov
xchg
out
pop
add
xor
sbb
imul
int
inc
adc
clc
int
fidivl
jnp
push
xor
bound
pop
lds
mov
mov
jns
repz
mov
inc
mov
and
mov
mov
jns
jl
adc
cmpsl
es
filds
pop
mov
or
loope
inc
shrb
xchg
test
jnp
and
or
std
stc
pop
mulb
inc
or
call
add
push
addr16
fidivl
sub
std
sarb
adc
dec
xor
idivl
cmp
push
int
loop
cld
cmpsl
sub
or
add
ds
jp
stc
aam
xchg
enter
in
or
stos
out
or
loope
add
jne
movsb
push
add
push
jmp
mov
jne
xchg
aas
pop
cmpsl
iret
cmp
popf
jmp
or
xchg
dec
sbb
cld
jle
or
imul
mov
sub
xchg
sub
adc
xor
out
ret
das
imul
js
icebp
test
xchg
inc
dec
xor
out
lret
pushf
xor
xor
pop
sub
imul
jo
ret
roll
fildll
inc
imulb
or
fmul
loop
scas
dec
mov
sbb
and
add
divl
mov
jno
inc
in
push
push
fnstcw
das
xchg
xchg
cmp
inc
dec
mov
ficoms
pop
add
insb
push
repnz
mov
mov
je
int3
inc
movaps
sahf
mov
mov
pop
dec
push
add
xchg
adc
jnp
jl
gs
and
mov
mov
scas
out
and
and
repz
in
xchg
pop
icebp
divb
ret
dec
pop
jno
dec
rcrl
push
fcmovbe
mov
testl
test
stos
or
inc
jb
jae
cs
add
adc
lea
mov
inc
repnz
pop
fs
xchg
mov
ret
mov
cltd
xchg
pusha
repnz
pop
cli
fstps
mov
loope
call
gs
imul
stos
in
mov
xor
out
mov
lds
inc
xor
push
or
or
sti
pop
dec
mov
adc
adc
cmp
in
daa
cmc
shll
push
sbb
pop
mov
jnp
xor
push
push
dec
ret
push
iret
imul
cmp
into
jno
repnz
jb
xor
mov
repz
lcall
lds
mov
adcb
xlat
fildl
mov
sub
iret
jmp
push
loopne
shl
mov
dec
mov
mov
mov
or
popw
adc
pop
xor
mov
sub
repnz
adc
xchg
in
mov
mov
mov
inc
jbe
dec
lret
mov
inc
sarb
jne
mov
ret
in
js
addr16
pop
out
jg
mov
scas
push
mov
mov
iret
jg
lahf
loopne
into
push
and
inc
pusha
loopne
loopne
test
push
or
ja
int3
push
pushf
movsb
pop
push
aas
test
addr16
in
shlb
movsl
cltd
ja
divl
in
jmp
jg
popf
xor
xchg
or
ds
and
xor
inc
test
repz
stos
dec
mov
pop
popa
cmpsl
in
jmp
test
loop
sarb
pop
out
stos
insl
outsb
insl
xor
adc
leave
fucom
dec
mov
mov
mov
push
pushl
cmpl
ror
cmp
lock
add
mov
dec
cmp
push
loop
adc
in
lret
fimull
xchg
cmp
xor
dec
pop
cmp
push
fdivrs
lock
out
or
mov
repnz
dec
sbb
scas
loopne
aas
ds
test
loope
cwtl
mov
out
add
or
xchg
gs
cwtl
fiadds
lods
fcompl
ja
movsb
in
push
and
mov
xchg
fsubrp
out
fdecstp
cld
repz
out
xchg
in
hlt
jns
jo
push
xchg
call
mov
sbb
lcall
ret
mov
dec
push
push
and
pop
push
and
inc
ss
dec
push
outsl
pop
rcrb
leave
mov
and
add
lods
ja
lea
addr16
scas
aas
add
mov
xor
adc
stc
push
fidivrs
daa
lock
pop
jge
rclb
ja
les
data16
cmp
xlat
push
lea
jle
ljmp
mov
pop
sbb
cmpsl
sub
in
das
jns
in
xchg
lock
push
sbb
or
ja
jg
mov
lahf
or
xor
jae
ss
daa
mov
cmc
mov
fistps
fstps
xlat
pop
xchg
iret
push
mov
mov
cmpsl
add
test
out
pop
xchg
fidivrs
arpl
dec
or
xor
and
mov
into
addr16
push
or
inc
aad
push
sbb
cltd
ljmp
outsb
ror
in
mov
xchg
aad
push
movsl
mov
xchg
push
lret
lahf
neg
mov
movsl
and
mov
sbb
jns
mov
mov
mov
cwtl
loope
ja
pushf
pop
in
enter
popf
jge
clc
and
ret
ja
decb
clc
lods
sub
adc
cmp
ss
xchg
into
sbb
into
bound
ror
xor
daa
add
adc
scas
imul
jne
xor
fidivl
sub
orl
lret
fpatan
mov
push
loopne
push
outsl
andb
test
xor
jne
out
cltd
out
loopne
aad
jnp
cmp
mov
jns
lret
aam
jecxz
sbb
cli
or
cmp
leave
jp
mov
inc
adc
shl
mov
ficoms
andl
in
cmp
pusha
push
and
add
or
pop
or
push
sbb
mov
popf
daa
mov
repnz
sbb
adc
jns
add
mov
mull
lds
push
rorb
or
ret
mov
or
and
int3
push
jo
addr16
pop
ret
pusha
das
push
bound
dec
xor
or
adc
in
add
xchg
int3
jle
and
sbb
insl
inc
pop
call
dec
xchg
mov
add
mov
mov
popa
aas
adc
xchg
inc
xchg
push
mov
inc
int
cld
stos
mov
and
jl
cmpsb
xor
nop
cmpl
scas
jbe
jns
cltd
testb
inc
stc
fiadds
scas
dec
std
sbb
push
or
sub
movl
insb
dec
loop
lods
xchg
mov
xor
pop
mov
push
fsubs
sbb
bound
or
push
pushf
jg
mov
mov
es
xor
xchg
mov
shl
js
push
pop
jg
dec
leave
mov
and
xchg
pusha
jle
into
xchg
jecxz
mov
fs
cwtl
or
repz
out
xchg
stos
cmp
sub
and
psrld
pushf
dec
stos
dec
xchg
and
cmpsl
push
mov
fistpll
popf
scas
mov
dec
cwtl
loopne
adc
aam
pop
dec
ficomps
mov
rorb
sub
pop
pop
call
inc
jno
imul
dec
nop
movsl
dec
mov
test
mov
pushf
lods
mov
add
pop
xor
fcomp
int
fsubs
imul
je
jge
mov
fs
adc
clc
jle
shrl
pop
cmp
mov
mov
push
dec
daa
push
popf
fistpl
mov
fdivr
or
mov
and
cli
add
ja
test
into
mov
movsb
sbb
fucom
loop
adc
imull
rolb
cmp
mov
xor
dec
clc
cmpsb
cli
mov
outsl
push
jecxz
inc
cmc
push
mov
sub
add
outsb
jae
js
pop
loopne
fisttpll
fmulp
mov
in
xor
mov
mov
mov
add
cli
inc
jmp
xor
pop
adc
int
and
push
fists
movsl
out
lret
out
and
jge
rcrl
pop
in
push
cmp
popa
xor
ret
xor
lock
dec
data16
sub
jae
pusha
add
mov
inc
mov
jl
rclb
jno
into
in
arpl
jne
test
pop
bound
aad
ss
dec
js
adc
daa
dec
jnp
mov
popa
mov
dec
pop
into
je
andl
sub
loope,pn
dec
jbe
sahf
out
iret
sbb
adc
test
mov
sub
pop
clc
cmp
in
clc
xchg
rcll
sub
sbb
mov
cmp
xor
inc
xor
popf
ss
ds
jecxz
cmpsl
sbb
stos
shlb
dec
mov
xchg
cmp
stos
enter
bound
mov
mov
mov
in
push
insb
sbb
mov
leave
sarb
xchg
or
sbb
das
iret
adc
in
mov
ljmp
es
jb
cmp
mov
popf
inc
jmp
data16
call
arpl
scas
test
push
mov
repz
xor
inc
xchg
dec
shlb
out
push
pop
int
daa
jns
dec
data16
inc
mov
mov
or
incl
sysenter
fcomip
xor
inc
stos
mov
andb
inc
dec
loope
sub
aam
sarl
jecxz
or
xchg
out
ret
ja
rcrb
in
orb
pop
decb
mov
adc
cmp
sarl
lock
and
in
shrb
cmp
divb
xchg
insb
lods
scas
arpl
sub
imul
inc
clc
mov
das
lcall
jae
xor
cld
cmp
sub
ss
enter
std
ljmp
arpl
outsl
or
lahf
lock
dec
xchg
dec
shlb
mov
inc
mov
syscall
mov
mov
imul
pop
outsl
movsl
pop
shr
leave
mov
jb
or
jmp
outsl
ret
dec
ficoms
fwait
int3
and
push
push
pushf
rcll
shlb
push
pop
pop
scas
dec
sub
sarl
xorl
repz
mov
xchg
movsl
dec
js
xorl
outsl
out
les
aaa
adc
xchg
or
mov
ss
dec
mov
dec
adc
imul
int
jp
cli
xor
int
jb
pop
mov
std
push
aaa
pop
insl
inc
add
xor
rcr
mov
xchg
aaa
repz
or
sti
adc
clc
xchg
mov
jp
inc
mov
orl
fcomp
adc
adc
pusha
dec
ror
sbb
fisttpll
daa
rclb
pop
fnstenv
xor
arpl
inc
mov
mov
dec
sarw
cmc
push
sbb
and
dec
add
pop
fmull
jmp
jle
seta
push
data16
xor
insl
sub
or
cmp
popf
and
nop
imul
inc
fbld
les
mov
sahf
incb
int
lea
jo
mov
int
ss
pop
cmpsl
call
add
mov
xchg
cmpsb
mov
ficoml
insl
dec
inc
pop
inc
jge
fidivrl
or
push
push
test
fld
push
nop
pop
enter
daa
push
or
std
aam
xchg
test
stos
push
leave
add
repz
std
mov
cmp
adc
pop
cmp
cmpsb
mov
push
xor
data16
jg
outsl
mov
insb
popf
dec
es
dec
fs
xchg
push
ret
jne
cli
frstor
mov
mov
cmp
lds
iret
jo
test
xchg
sbb
adc
daa
push
pop
jp
cmpsl
out
pop
sbb
jb
push
lret
cmpsl
push
cwtl
fmull
pop
nop
xor
inc
pop
pop
sub
repz
jmp
sbb
cmpsb
ss
xor
adc
and
pop
loop
popa
and
jge
mov
out
inc
xchg
mov
and
cmp
mov
cwtl
jmp
mov
pop
add
cmp
dec
push
jp
shl
mov
addr16
scas
fmul
setle
pop
int3
inc
pop
jno
sbb
loop
lock
inc
push
dec
rolb
rcll
test
mov
mov
xor
and
mov
mov
jns
jnp
out
jae
enter
mov
and
stos
jmp
div
test
daa
jns
cmp
jns
xchg
loopne
inc
leave
jl
pop
cmpb
int3
inc
xorl
cmp
jo
and
aaa
stos
loope
mov
js
subb
fs
xchg
js
outsl
insl
int
lea
push
mov
or
dec
jmp
mov
pop
sub
fidivs
fildll
repnz
sbb
inc
scas
pop
int
mov
ljmp
in
xor
mov
mov
pop
mov
mov
rolb
xlat
mov
cmc
scas
inc
test
in
or
add
xchg
clc
inc
aam
xor
or
test
jl
frstor
lahf
jmp
sub
fs
jp
sbb
rol
loope
jle
pusha
inc
mov
lea
adc
stos
shlb
movzbl
outsb
adc
cmp
clc
sub
xchg
pop
sub
out
or
or
jp
dec
sub
or
jno
jnp
dec
and
into
ret
pushw
shl
subb
ja
or
fdivs
or
push
sti
jp
pop
jnp
sub
int
push
lret
jp
outsb
mov
xlat
mov
shrb
or
pop
movq
jmp
adc
push
add
mov
and
mov
xchg
adc
or
cwtl
sti
and
xchg
ljmp
pop
inc
lahf
push
nop
ret
pop
cmpsb
pop
arpl
movsb
jp
jne
add
xor
mov
pop
cmp
repnz
inc
test
mov
outsb
repnz
cmpsb
adc
jmp
push
mov
jmp
adc
ret
pop
push
stos
pushl
xchg
lds
mov
call
mov
shrb
fmulp
xorl
fstpt
jno
std
subl
add
jle
push
add
push
dec
add
push
jge
jmp
loope
test
scas
and
push
shrl
ss
xor
sbb
lret
adc
arpl
insl
call
leave
add
test
shll
bound
sbb
in
leave
push
mov
cmp
push
push
xor
mov
fwait
repnz
imul
xor
jl
testl
and
dec
jbe
loopne
add
shll
roll
ret
mov
into
sub
pop
jbe
pop
fldl
lods
pop
add
imulb
ljmp
pop
jns
jecxz
das
faddl
roll
ret
push
adc
jb
jae
pop
roll
mov
push
pushf
sahf
dec
mov
cmp
jno
jb
cmpsb
fwait
loop
push
pop
mov
roll
loopne
inc
sbb
pop
push
add
lcall
int
adc
sbb
mov
mov
mov
icebp
sub
pop
inc
mov
icebp
xchg
int
shrl
fdivrs
jae
je
imul
scas
jnp
movb
cmpsl
jp
mov
ljmp
cmpsl
or
roll
cmp
int
mov
in
in
and
jmp
in
cs
mov
and
inc
xchg
sbb
in
or
add
adcl
jnp
sub
mov
mov
push
sbb
push
out
jp
jb
jmp
xor
add
mov
cmpsl
xchg
and
ss
and
and
mov
imul
test
xlat
sti
jecxz
pop
fists
mov
push
mov
mov
out
jns
std
jmp
scas
es
xadd
aaa
sub
movsb
das
clc
push
lea
mov
sub
dec
mov
mov
outsl
je
out
add
scas
push
pop
pop
fsubs
sub
dec
pop
xchg
mov
add
mov
divl
pop
xchg
bound
jl
lods
lods
lret
or
jg
adc
je
push
xchg
repnz
mov
aad
mov
pop
lahf
je
or
sbbb
testb
xor
daa
xchg
orb
inc
int3
sbb
popf
and
loope
sub
mov
inc
sbb
jns
dec
aas
push
fldl
dec
loop
jg
ret
test
push
into
pushw
insb
sub
aad
lcall
or
cli
call
sbb
ror
xor
push
add
repz
dec
gs
add
mov
popf
leave
cmp
mov
rclb
dec
mov
cmp
cld
sahf
stos
xchg
xchg
and
and
scas
fstpl
scas
cmp
jecxz
xchg
loopne
lret
dec
add
xchg
inc
loope
repnz
jg
std
lds
out
push
push
or
sbb
adc
adc
xchg
and
and
insl
jmp
adc
sarb
sbb
insb
mov
outsl
pusha
movsl
rcll
enter
mov
and
or
mov
mov
add
inc
aas
dec
inc
xor
dec
xlat
ja
gs
sbb
cli
std
sahf
push
and
mov
xorb
rcr
adc
push
or
adc
cwtl
dec
dec
fxch
inc
loopne
jp
jns
mov
jecxz
push
rcll
sub
js
jbe
fistpll
pop
pop
mov
mov
mov
push
xchg
push
sub
inc
rclb
daa
iret
inc
jmp
testb
jecxz
inc
cld
xchg
inc
push
test
adc
mov
push
icebp
push
mov
addr16
aaa
dec
adc
mov
sub
addb
imulb
sbb
stos
pop
aas
sbb
int
mov
push
ds
stc
std
lahf
dec
add
test
sub
jmp
jae
rolb
push
inc
pop
in
pusha
cs
xor
push
jle
push
xchg
lcall
enter
mov
pop
and
je
sti
fcomip
dec
sahf
pop
push
and
sti
sbb
jbe
movsb
mov
sahf
clc
dec
xchg
dec
rcr
pop
push
imul
ljmp
in
push
pop
sti
cmpl
cs
dec
mov
decl
xchg
xor
mov
sub
cmp
xor
dec
pop
dec
xchg
test
inc
xchg
jmp
scas
cld
in
xorb
imul
mov
sub
in
mov
dec
inc
sbb
push
cmpsl
adc
dec
sub
ljmp
in
inc
shrb
xlat
call
xchg
xchg
push
repz
aad
shl
je,pn
lods
jne
cmp
jae
xor
sub
int3
sub
cmp
xor
call
faddl
mov
inc
pop
add
pop
add
cmp
mov
jg
pop
cmp
in
jmp
pop
test
mov
stos
sub
xchg
xchg
pop
jg
arpl
ljmp
psrld
xlat
push
dec
jns
dec
inc
js
adc
lret
rcr
adc
or
test
xor
mov
test
cwtl
pop
movsl
xchg
inc
mov
loop
xor
in
loopne
adc
and
loopne
jo
push
insb
sarl
out
dec
fimull
inc
std
fwait
mov
andl
mov
ret
mov
ja
add
jmp
stos
sahf
mov
jb
sbb
gs
dec
mov
clc
fs
inc
ret
insb
je
aas
imul
lds
push
jbe
sbb
inc
push
mov
push
sbb
add
sub
pop
loop
shl
xchg
ss
jg
test
xlat
pop
add
sbb
or
xchg
in
sbb
jmp
pop
pop
leave
fnstenv
mov
lret
add
pop
or
mov
out
mov
addr16
addr16
popa
xorl
jg
mov
xor
lea
jbe
ss
stc
decl
mov
or
dec
cmpsb
adc
nop
inc
js
stc
outsl
mov
jb
jb
lea
xchg
xchg
insl
loope
js
push
or
aam
rclb
pop
movsl
adc
insb
cmc
adc
xchg
imul
xchg
or
xor
mov
incl
dec
xor
push
cmp
dec
pop
rorb
jne
je
cmp
shll
or
jne
in
orb
jno
jae
ljmp
not
pop
or
fists
add
pop
notl
cmp
pop
lahf
xor
inc
rorl
cltd
jmp
xor
loope
adc
sub
stc
xor
scas
mov
mov
loope
sti
xchg
dec
pushf
in
inc
pushf
inc
sub
cs
xor
fisubrl
cmc
sbb
push
inc
jb
jae
mov
orb
das
in
push
imul
xor
push
cmp
cmpsl
add
mov
sub
xlat
out
in
shl
lds
leave
jb
incl
hlt
mov
push
aas
mov
inc
mov
mov
xchg
jnp
pop
inc
insb
in
cmp
jo
scas
sbb
popa
mov
stos
adc
mov
arpl
pop
inc
mov
cmpsl
inc
add
or
hlt
adc
in
push
mov
push
outsl
add
mov
mov
mov
cmpsl
add
ljmp
lahf
hlt
aam
mov
scas
lcall
push
xchg
ror
xchg
lret
mov
mov
xchg
cmp
pop
jne
push
xor
mov
sbb
je
test
pop
shl
shrb
cmp
cmpsl
mov
mov
nop
sbb
mov
inc
stos
xchg
lock
aam
fmuls
repz
dec
jno
fsubrp
adc
or
sub
adc
ds
dec
sub
xchg
std
add
rcll
xchg
dec
mov
cmp
and
adc
xor
and
jns
in
sbb
int3
jecxz
xchg
cmp
sub
add
pop
jbe
pop
mov
xchg
fstpl
mov
push
out
xlat
daa
test
add
pop
pop
sarl
les
sahf
mov
jge
stc
jb
testb
imul
xlat
xlat
imul
xor
dec
cmc
sbb
dec
push
push
dec
jo
leave
mov
mov
cmp
dec
in
test
jbe
fimull
fadds
or
sbb
inc
int
imul
xchg
inc
sbb
stc
push
push
push
mov
enter
cs
jecxz
addr16
mov
inc
in
adc
jp
dec
outsb
je
xchg
cmp
or
cmp
popf
jg
out
sti
cli
loop
push
mov
addl
das
outsb
lret
ret
adc
imul
stos
clc
cmpsl
push
stos
pop
inc
bound
int
cs
cmpsb
leave
mov
adc
mov
sbbl
lcall
jecxz
xlat
jp
fcoms
jle
pop
pop
add
jo
scas
push
push
push
jne
sub
pop
std
and
inc
push
inc
pop
dec
cmp
es
arpl
dec
lods
mov
in
leave
cmp
aad
mov
iret
mov
je
stos
fs
jb
mov
mov
push
sbb
clc
xchg
fdivrl
add
or
sbb
lods
ficompl
inc
pop
pop
mov
cmc
rcrb
fisubl
sub
push
stos
shl
or
lahf
cmpsl
push
ja
xchg
fwait
in
aad
rcl
lds
mov
adc
and
sti
sub
sahf
lods
or
sub
sar
xor
notb
scas
push
mov
pop
mov
lock
popa
testb
jae
js
cmp
and
push
rolb
in
mov
xchg
cmc
stc
and
jmp
gs
fcmove
ja
push
dec
cmp
or
stc
jg
xor
inc
jb
push
and
lahf
cmpsb
pop
mov
xchg
stos
pop
out
push
or
repz
jl
push
mov
cld
lret
inc
bound
push
arpl
mov
push
push
sub
pop
aas
repnz
in
xor
test
pop
imul
test
add
outsb
incb
jecxz
cmpb
push
xorl
dec
lcall
sahf
push
or
sub
and
mov
jmp
pop
sub
sbb
lea
jp
xchg
gs
test
out
sbb
cld
outsb
insl
popf
in
test
push
lcall
push
mov
stc
adc
jne
shlb
sub
mov
add
pop
xor
xor
jp
call
sahf
and
cmp
loop
add
jnp
cmp
mov
cmp
inc
sbb
lea
add
add
mov
ss
add
test
shl
sub
leave
enter
pop
icebp
aam
xorl
cmp
idivl
ret
sbb
loopne
fisubl
pop
ja
pusha
test
lret
inc
pop
or
enter
or
mov
sbb
icebp
paddusb
push
push
int3
push
les
sub
xchg
push
mov
ret
and
cmpl
push
movsl
sti
mov
jp
stc
sbb
rcrl
mov
shrb
adc
notl
cmp
mov
cltd
cs
sbb
jb
mov
mov
cmp
mov
ret
mov
mov
out
scas
adc
daa
ljmp
mov
lds
pop
cmc
shrb
je
jbe
push
mov
test
xchg
cmp
mov
in
add
stos
pop
es
pop
xchg
inc
mov
fwait
adc
push
xor
dec
enter
add
sub
lret
test
cli
ja
aam
push
xor
pop
scas
mov
ficoml
cmp
pushf
cltd
pop
hlt
jg
movsb
or
cmp
aas
inc
mov
int
jg
mov
test
fcoml
and
jne
jne
sbb
popf
test
pop
xor
jns
insl
add
aas
push
lds
cmp
nop
jb
cmpsb
rcrb
push
testl
lcall
inc
push
rcl
orl
gs
popf
shll
aad
movsl
cli
cmpsl
push
sarb
xchg
arpl
jae
inc
jecxz
cltd
xor
jl
fisubl
imulb
scas
pop
sub
push
popa
mov
scas
fstps
push
rolb
mov
mov
cmp
jl
cwtl
jl
mov
push
and
imul
pushf
lock
xor
rorl
lea
fimuls
push
jg
loop
push
mov
dec
insb
in
dec
sub
jmp
push
out
imul
push
jb
ljmp
push
ss
lret
les
test
xchg
neg
stos
mov
aam
sub
mov
inc
out
mov
xor
jle
aad
dec
stos
inc
inc
nop
cmc
std
xchg
jle
rcrl
and
imul
mov
fldenv
jne
mov
fbld
jle
xchg
fldcw
arpl
rorl
cli
iret
jo
scas
jl
xchg
push
movsb
jl
jl
fldenv
arpl
push
mov
ss
scas
repz
jecxz
push
inc
mov
push
adc
jmp
repnz
loope
jle
jne
les
fisubrl
push
and
mov
dec
aad
loop
scas
mov
data16
cltd
aaa
mov
inc
sbbb
sbb
test
repnz
push
mov
repnz
lahf
jns
aaa
add
leave
hlt
sbb
call
adc
add
stc
sbb
mov
or
sti
mov
mov
lcall
mov
inc
cmp
dec
fadds
lods
sar
cwtl
enter
aad
xchg
mov
or
psllq
cld
cmp
adc
mov
push
ss
cmp
es
jp
in
insl
xor
sub
shrl
inc
xchg
hlt
xchg
sbb
adc
sbb
jb
jg
lods
aam
xchg
aas
push
push
cmp
out
jl
xor
mov
cmp
outsl
inc
add
shr
cmp
iret
jl
mov
pop
les
and
lret
and
mov
sub
xchg
mov
loopw
inc
pop
or
cmc
cmp
fmull
cmpsl
test
loope
add
mov
lret
sub
aaa
xor
add
in
jns
jge
inc
test
dec
fsubl
inc
shrl
fucom
or
pusha
pop
sbb
stos
pop
cwtl
sbb
cmp
fwait
loopne
mov
scas
rolb
push
jle
push
lcall
mov
xor
jmp
or
add
pop
lods
loope
pop
jne
or
adc
in
mov
sub
add
adc
nop
and
add
sbb
movsb
andb
push
xchg
outsl
sbb
mov
pop
cmp
rcrb
outsl
icebp
dec
jne
push
mov
xorb
mov
cmpl
inc
or
inc
dec
jg
jmp
les
rcrb
fwait
incb
inc
xorl
xor
cmp
jne
cmp
jle
call
mov
jmp
nop
xor
je
sbb
jbe
push
adc
gs
cwtl
dec
push
aas
push
mov
cmp
out
or
jl
add
xchg
mov
in
pop
fwait
or
push
jg
lahf
mov
adc
negb
mov
push
aaa
or
cli
cwtl
mov
pop
stos
xor
inc
dec
insb
sbb
push
mov
insb
push
repnz
jae
popf
sub
xchg
addl
aam
roll
sbb
pop
fstl
mov
lret
test
add
jge
stc
fnsave
push
imul
int
in
push
ljmp
mov
mov
add
arpl
in
out
imul
lahf
push
jbe
stc
jae
add
dec
imul
adc
lret
or
imul
cmp
inc
cld
pop
sbbl
jno
hlt
mov
pop
mov
mov
adc
mov
test
adc
xchg
sbb
aad
cmc
xorb
hlt
pop
aad
arpl
sub
repnz
loopne
lock
sub
push
loopne
int
jbe
fwait
popf
inc
add
pop
or
test
fwait
and
cmpsb
pop
addr16
sub
test
adc
test
inc
push
xchg
imul
cwtl
xchg
fisubrl
fwait
push
and
enter
bound
into
fadds
pop
fcmovnb
sbb
sub
adc
jo
xor
cld
fnstcw
shrb
and
lock
in
push
sbb
xlat
enter
adc
scas
imulb
outsl
mov
test
mov
inc
movsb
std
mov
rorl
sub
pop
sarb
dec
jae
js
imul
dec
nop
add
out
sbb
call
imul
lahf
push
mov
pop
or
adc
mov
mov
cmp
loopne
imul
cmp
in
dec
mov
adc
sub
jns
sbb
dec
enter
call
xchg
push
jo
movsb
and
fidivs
rcll
out
cmpsl
xchg
imul
adc
jg
stos
sub
cld
cmpsb
inc
cmp
cmp
scas
add
jne
sbb
lahf
pop
and
push
xlat
xchg
push
shll
ret
push
mov
imul
and
ja
gs
bnd
jecxz
ret
cs
inc
clc
rcl
inc
adc
orb
inc
rcrb
mov
pop
inc
add
pop
cmp
jo
jo
push
mov
hlt
mov
ss
xchg
inc
popa
mov
pop
js
loope
or
fstl
or
icebp
in
sub
mov
push
dec
mov
movsl
lods
xrelease
or
fsubp
mov
dec
push
sbb
iret
push
adc
ljmp
lahf
xor
jns
mov
fisttpl
jb
jecxz
loopne
cwtl
aas
aas
repnz
sbb
scas
dec
mov
add
ljmp
imul
nop
cli
nop
push
fists
cs
cmpsl
mov
dec
cmp
or
outsl
sbb
insb
mov
icebp
push
pop
sub
and
sbb
xor
adc
les
imul
lea
inc
push
pushf
gs
arpl
cld
mov
mov
xor
jns
dec
jbe
daa
jbe
sbb
insb
sbb
push
ja
lahf
mov
adc
int
test
in
hlt
cmp
pop
inc
adc
scas
loope
or
xlat
fldenv
xchg
mov
scas
enter
cltd
add
aaa
or
jp
test
aaa
inc
lds
jae
movsl
out
call
lods
pop
cmp
es
pusha
in
js
dec
mov
jge
andl
sbbb
push
daa
cmp
jns
mov
mov
lahf
nop
and
repnz
or
je
sub
loop
inc
call
jns
or
fnsave
mov
aam
xor
mov
xchg
jp
loope
out
lret
mov
lcall
add
mov
stos
ror
movsl
xor
popf
adc
jb
mov
sub
jg
fcoms
fldcw
shrl
lret
xchg
scas
ss
sub
in
xor
stos
movsb
rcl
arpl
xchg
inc
popa
sub
dec
pop
call
int
idivl
mov
fbstp
jb
test
mov
repz
into
cltd
fwait
cmpsb
push
mov
mov
push
fidivl
adc
repz
out
idivl
enter
sti
push
ss
jle
mov
mov
dec
les
ds
cmp
and
lcall
stos
aad
push
add
dec
shll
cli
movsl
pop
fdivr
sub
mov
cwtl
xor
or
arpl
cmp
cltd
psubsb
xchg
and
test
sub
sub
and
aaa
dec
push
pop
mov
mov
cmp
mov
mov
dec
pop
mov
sti
scas
add
mov
dec
fldcw
test
in
jns
xchg
adc
sub
inc
insb
repnz
add
cmp
xchg
pushf
lret
pop
and
xchg
rorl
sbbb
xchg
incb
xor
in
jl
cmpsb
pop
lea
sub
iret
xchg
pop
sub
adc
pushl
add
inc
inc
mov
push
movsb
or
add
adc
xchg
lods
jecxz
aam
and
shll
and
add
xor
push
data16
ret
pop
push
in
nop
push
mov
mov
shll
sarb
fwait
mov
push
ljmp
addr16
sub
mov
mov
movsl
js
cwtl
loope
add
xchg
scas
jle
push
pop
push
adc
ja
inc
pop
inc
add
test
add
jo
ds
loope
ja
adc
movzbl
adc
mov
adc
mov
loopne
leave
sarl
sbb
int3
cmpsb
subl
push
stc
pop
sbb
add
and
xchg
add
mov
mov
sbb
xchg
testb
jmp
imul
sarb
lcall
jno
andb
lret
out
jle
adc
xchg
jecxz
add
lock
adcb
hlt
movsb
mov
pop
cltd
fiadds
inc
call
mov
or
lret
je
jmp
lahf
lods
ss
lea
fcomi
mov
push
mov
repnz
pop
xor
insl
inc
icebp
sti
enter
dec
mov
xchg
insl
mov
shll
sbb
pusha
xchg
jmp
jno
ljmp
cmp
mov
repnz
fisubl
push
dec
cs
sub
xor
ds
add
outsl
popa
es
and
adc
jbe
xor
or
jmp
dec
lahf
push
mov
mov
or
clc
pop
add
aam
jnp
out
dec
testl
aas
insl
adc
mov
mov
scas
sahf
jbe
aaa
fwait
cmp
add
cmp
or
mov
aam
jne
pop
movsb
xor
addr16
scas
sbb
push
pop
fucomi
sbb
push
loope
jle
insl
sbb
dec
out
test
dec
negl
dec
jle,pt
sub
decb
scas
xor
mov
mov
add
sub
push
xor
jae
aad
pop
jp
adc
ret
inc
iret
lret
adc
jg
pop
or
addr16
xchg
arpl
lret
adcb
xor
mov
int3
or
lods
popa
cmp
out
pop
daa
xchg
clc
adc
test
inc
push
xchg
pop
mov
adc
test
mov
data16
loope
pop
in
imul
cwtl
sbb
push
xor
out
pop
dec
dec
pop
repnz
ret
sub
add
cmp
xor
xlat
mov
mov
push
fmuls
sub
std
repz
cmp
nop
ss
push
les
popf
push
push
nop
in
cmpl
lea
jmp
repz
adc
sbb
cmp
adc
ljmp
sub
ret
mov
icebp
mov
les
ror
insl
cli
push
test
divb
jne
sub
adc
decb
fstpt
cmp
test
cmp
sub
cli
or
lea
movsb
mov
pop
ljmp
imul
cmpsl
in
mov
decb
cmp
sub
cmpb
inc
imul
shr
dec
push
xchg
fucom
jl
rcrl
or
dec
rcl
ficoms
into
jne
jmp
movsl
cmp
mov
movsl
or
je
arpl
decl
cwtl
inc
in
mov
movsl
fs
mov
sbb
shlb
pop
xor
xchg
push
dec
addr16
insb
sub
or
mov
adc
inc
lcall
jnp
sub
and
mov
mov
arpl
in
ret
cmpsb
ljmp
jae
dec
cltd
push
sub
dec
push
add
ljmp
pop
dec
pop
test
sub
sbb
int
push
fsubrl
cmp
enter
pushf
mov
js
mov
jne
in
mov
mov
leave
out
scas
xor
push
pop
cmc
and
cmp
jo
addr16
jp
adc
xor
or
sub
xor
paddd
mov
test
sbb
pop
mov
sbb
test
lret
mov
pushf
les
dec
test
cmp
rdtsc
imul
push
mov
shrb
cmp
jmp
lea
push
lret
rcrb
cmpsb
pop
mov
xchg
or
mov
int3
xchg
jmp
pop
add
mov
add
dec
xchg
out
mov
adc
jno
xchg
ja
and
dec
pop
sti
repnz
inc
sub
in
bound
js
popa
daa
popa
cmp
mov
stc
mov
fdivrp
xor
add
scas
out
int3
or
repnz
xor
jmp
sub
xlat
pop
or
cs
and
push
or
sbb
xchg
jno
es
out
ljmp
dec
addr16
int3
ror
adc
mov
bound
adc
stos
shlb
and
sbb
lods
sub
fisubs
pop
aas
imul
mov
jo
adc
pop
push
and
nop
ret
in
pop
jb
add
gs
xchg
movsb
ficoml
dec
mov
pop
inc
dec
jne
xor
cmpsl
lock
rol
dec
out
mov
push
fildll
mov
in
and
push
clc
iret
xor
fnsave
imul
sub
stos
pop
cmp
les
popa
stos
stc
inc
push
pusha
insb
cs
xchg
into
mov
sub
jp
lret
je
cmp
cmpl
mov
sar
loop
pxor
into
inc
aaa
or
xor
out
test
out
ret
mov
fucom
dec
sbb
pop
sbb
pop
ret
push
and
cmpsb
imul
outsl
pop
mov
popf
sbb
and
jle
fisubs
jb
ljmp
sarl
stc
lods
call
add
ds
and
xchg
add
je,pn
popf
scas
pop
rcr
out
incb
add
insl
inc
xor
mov
imul
aaa
mov
outsl
ss
jae
inc
loopne
xor
ror
mov
arpl
repnz
movsb
mov
shll
test
mov
fsubr
int3
xchg
andl
mov
jb
add
stos
lds
add
mov
fsts
lock
std
mov
ds
cld
test
andb
mov
or
jle
lahf
in
cltd
test
sub
xor
mov
fs
pop
or
xchg
xor
lods
xor
enter
scas
pop
stc
adcb
std
sbb
jecxz
pop
outsl
push
sbb
cmp
mov
shl
cmp
add
or
inc
dec
cs
enter
dec
lods
gs
inc
inc
cmp
popf
mov
mov
inc
inc
sbb
xor
mov
jo
adc
ror
and
sub
in
and
mov
sarb
popa
subl
scas
jl
adc
hlt
adc
or
pop
andl
insb
and
mov
movsb
jecxz
and
adc
cltd
cmp
sbb
lahf
lds
inc
cld
xor
in
mov
push
pop
ret
pop
jae
pop
adc
rcr
cwtd
xchg
sahf
jns
cmp
mov
pusha
xor
cmpsb
test
and
lods
jmp
stos
xchg
loop
cmp
ficoml
jo
push
jle
shlb
lcall
adc
outsl
clc
lds
in
js
dec
rcrb
xor
sbb
push
sbb
adc
pop
les
into
jecxz
sub
scas
ret
mov
mov
fsubrl
or
xchg
jp
mov
and
sti
sahf
cmpl
xchg
retw
jae,pt
in
xor
add
fs
cmp
testl
lds
pop
in
mov
dec
repnz
lds
jae
mov
cmpsb
pop
inc
cmp
loope
cwtl
aas
mov
push
push
push
nop
sbb
addr16
mov
lret
mov
movsb
or
pop
mov
sahf
sub
fildll
add
mov
mov
imul
adc
cltd
or
ja
lds
xchg
jae
sub
mov
jp
nop
sub
icebp
in
and
push
std
sbb
dec
ljmp
or
jp
ficompl
lock
jg
push
sub
ja
xchg
repnz
jp
dec
fists
mov
scas
pop
out
push
repnz
cmp
adc
out
cltd
or
addr16
adc
xchg
out
inc
insl
adc
jl
or
inc
icebp
pop
xor
gs
bound
pop
jecxz
mov
movsb
xor
mov
jg
das
in
bound
test
ret
xor
pop
call
shlb
xchg
je
inc
clc
add
bound
xchg
fwait
xchg
punpcklbw
mov
or
push
jb
adc
inc
lds
pmuludq
aas
and
pop
gs
inc
es
test
scas
inc
or
cld
pop
pop
lea
shrl
xor
popf
or
clc
pop
in
jo
fdivrl
sub
sbb
xorb
sbb
pop
sets
sub
rolb
test
lock
ds
mov
mov
xchg
dec
out
mov
leave
lea
rcl
popa
dec
push
loop
sarb
roll
push
pushf
test
cltd
cmpsl
mov
or
xchg
hlt
dec
dec
fcmovnb
jne
push
bound
sbb
arpl
add
cmp
mov
mov
sbb
test
mov
cmp
cltd
repnz
jno
push
xor
mov
inc
test
ret
mov
sub
popf
sbb
xor
aaa
popa
inc
push
out
jne
ftst
mov
into
aad
daa
or
insb
cmp
hlt
mov
jge
sub
mov
jb
pop
subb
and
sbb
mov
jno
jbe,pn
popf
push
inc
mov
mov
out
aam
out
pop
fsubr
dec
push
xchg
cmp
dec
cmpsb
push
aaa
and
xchg
adc
jl
stc
js
test
mov
repnz
xor
je
push
pop
popf
mov
push
cmp
dec
and
rcll
test
add
clc
pop
jg
in
dec
mov
add
pop
movb
dec
push
adcl
and
movsl
or
xchg
rolb
cltd
das
shll
out
sub
push
ss
ljmp
add
clc
jae
int
inc
adc
stos
xchg
add
pop
xchg
pop
outsl
mov
push
aam
xor
mov
fcmovnu
arpl
imul
xchg
repnz
add
mov
jns
and
mov
repnz
mov
leave
mov
pop
mov
ror
fwait
push
mov
push
mov
mov
sti
lret
pop
in
loop
shll
mov
cmp
dec
push
add
stc
pop
mov
nop
inc
daa
neg
dec
scas
fistps
add
cwtl
ror
xor
test
test
in
sbb
incl
stos
mov
mov
mov
js
cmp
jge
pop
mov
bnd
pop
shrl
push
test
push
xchg
ret
mov
cmpb
icebp
test
test
sbb
mov
cs
push
jle
pop
inc
bound
xchg
sahf
dec
std
stc
mov
mov
dec
xchg
pop
insb
inc
insl
push
mov
inc
sub
iret
push
pop
scas
in
sub
mov
lret
pop
adc
bound
mov
push
cmc
sarl
and
sahf
les
stos
and
loopne
pushf
mov
divl
xchg
shlb
cmpsl
loope
je
subb
test
inc
xchg
inc
frstor
pop
inc
jg
mov
mov
sbb
xor
add
movsb
aaa
movsl
cmpsb
or
jns
aaa
mov
sbb
arpl
sar
lods
scas
sbb
stos
out
jl
sbb
xor
cmc
je
adc
aam
xchg
out
cwtl
cmp
xor
imul
jge
imul
rclb
push
insb
in
shrb
cs
push
out
add
bound
fnsetpm(287
push
xchg
sub
test
push
lcall
fstsw
or
inc
pop
sub
xchg
mov
dec
stos
sub
xchg
jae
fsubrs
pushf
inc
out
dec
push
rcrl
xor
jle
xor
enter
lds
lods
mov
movsb
xchg
sbb
xorb
je
sbb
mov
xchg
leave
xchg
cltd
aas
push
popf
push
fidivs
xchg
cld
xchg
adc
outsb
sbb
shll
pop
clc
add
insb
jecxz
fnsave
es
sbb
imul
adcb
adc
repz
into
aad
loopew
adc
and
fstps
jle
ja
lods
scas
push
jo
pop
loope
stos
sar
sahf
mov
testb
mov
pop
pop
jno
or
push
mov
inc
inc
sbb
adc
and
inc
cmpsb
inc
in
insl
pop
fdivp
popa
scas
mov
jg
xor
mov
popf
or
fiaddl
insl
in
fidivl
mov
lea
or
add
fmull
fldl
push
cmc
or
vmwrite
cmp
out
sbb
loope
xchg
cmpl
push
movsb
pop
mov
cmp
scas
mov
icebp
aam
mov
loope
dec
nop
pop
cmp
outsl
and
push
enter
dec
nop
pop
and
in
mov
mov
aad
add
and
inc
mov
out
sbb
imul
test
or
roll
xchg
in
not
add
xor
movsl
jno
icebp
fbld
or
cmp
jmp
dec
jns
fs
or
cmp
and
pushf
jmp
jmp
cli
cwtl
jo
pusha
fnsave
call
mov
inc
pop
mov
jmp
leave
and
and
xbegin
stos
lods
mov
add
loop
sbb
xchg
ss
mov
mov
ds
add
into
test
psubsw
and
aas
and
jp
mov
outsb
inc
jo
adc
sbb
out
jmp
push
lret
in
or
inc
lds
dec
xor
mov
jns
xor
sbb
scas
movsl
xor
jecxz
ja
sbb
hlt
fbld
dec
mov
push
and
mov
adc
inc
movsb
daa
add
xlat
dec
inc
cld
inc
mov
jle
dec
dec
cltd
insb
push
fidivs
mov
jbe
push
pop
lock
outsl
mov
jae
out
jl
pusha
jecxz
push
sub
dec
mov
jo
mov
test
sbb
cmp
mov
xchg
cmp
ret
daa
lret
fcmovu
add
in
jo
adc
lret
push
sbb
loope
mov
inc
sub
js
mov
mov
cmpsl
dec
nop
test
mov
push
or
fmul
inc
inc
fcmovbe
dec
je
addr16
sarb
shrl
out
call
rcr
rolb
jmp
pop
imul
and
push
jmp
dec
sbb
int3
push
sarb
movsl
push
xchg
enter
into
fadd
inc
repnz
or
jnp
scas
adc
inc
clc
mov
add
cmc
add
xchg
insl
adc
push
loope
add
mov
jl
push
cmp
repz
sub
push
push
pop
pop
inc
cmpsl
dec
and
inc
and
lret
out
outsb
ja
xor
dec
fsubrl
and
or
lds
jne
inc
pushf
aas
dec
repnz
nop
cmp
mov
push
add
mov
cltd
jl
ret
mov
mov
test
shld
fdivr
mov
scas
dec
mov
mov
sub
orb
int3
cmpsb
sub
push
add
push
add
mov
or
cli
xchg
test
incb
pop
frstor
lea
fwait
sub
ss
or
xlat
dec
ljmp
mov
sub
bound
or
push
lea
add
ljmp
mull
stos
dec
xchg
fbld
aam
pop
mov
mov
lea
je
adc
clc
repnz
pop
jno
dec
push
pop
mov
gs
mov
in
cmp
lock
jp
lret
inc
dec
push
sub
add
pop
lea
push
insb
mov
push
rolb
or
sub
daa
sbb
mov
mulb
xor
cmpl
add
jb
add
or
test
cld
das
sbb
das
mov
xor
aaa
sarl
push
push
xor
cltd
les
fisubs
das
insl
cmp
jecxz
sub
adc
cli
pop
adc
push
fnstenv
addr16
nop
jne
push
xchg
ljmp
lods
std
ljmp
testb
adc
sbb
fsubrl
dec
mov
out
xor
push
lock
mov
jno
sbb
push
scas
push
sub
arpl
jg
in
shll
push
aas
fdivrp
mov
xchg
rcll
cltd
jmp
loope
and
jmp
push
xor
int3
test
xor
jns
jns
and
daa
mov
add
mov
aam
and
lods
lahf
dec
cmpsl
mov
fs
and
pop
scas
jnp
xor
jae
ret
fs
dec
lret
cmpsl
dec
pop
cld
and
gs
and
and
cmpsb
int
loopne
std
mov
adc
mov
int
ds
mov
lock
xchg
mov
shlb
add
daa
and
mov
xchg
xorb
push
and
dec
arpl
sub
xor
cmp
inc
add
mov
rcrl
fcoms
add
pushf
dec
xor
add
sub
sbb
cmpsl
pop
mov
lock
xchg
inc
fstps
pop
or
pop
xchg
jmp
test
das
jne
push
pop
adc
or
outsl
mov
lret
arpl
pusha
rcrl
push
int3
divl
adc
sub
sahf
hlt
cmp
ret
int
or
lods
mov
cmpsb
mov
lods
adc
dec
cwtl
sti
mov
mov
jbe
mov
stos
je
out
add
mov
add
xor
aaa
inc
scas
mov
add
push
bound
push
mov
insl
loope
dec
clc
or
test
and
inc
mov
cmc
ror
insl
mov
jno
dec
lods
loope
xor
dec
xchg
cmp
adc
xchg
pop
or
std
dec
xor
jmp
sbb
frstor
push
sarb
cmc
adc
es
sbb
mov
mov
lahf
sbb
mov
push
lds
dec
cwtl
sbb
add
dec
dec
ret
mov
sbb
xor
cwtl
out
cmc
dec
sub
mov
mov
xchg
aam
mov
xor
lret
and
dec
dec
sti
aaa
stos
pop
lcall
xchg
out
xchg
pop
cli
xor
out
push
popaw
and
pop
fildll
mov
lret
aas
and
sarb
inc
jle
out
push
dec
fwait
push
or
jnp
mov
dec
std
mov
int
xor
pop
push
xor
cld
aam
dec
movsl
jmp
popf
mov
push
xchg
rcrl
jg
mov
xchg
int3
mov
adc
push
movsb
popa
mov
sub
jno
push
out
jb
aam
cmp
data16
scas
test
push
fwait
mov
adc
dec
jnp
out
in
xor
xchg
imul
jp
loopne
xor
add
lcallw
das
loope
sub
xchg
pop
pop
pusha
sub
test
aad
lea
mov
sub
dec
insb
in
dec
mov
dec
jo
jae
mov
jmp
or
fsub
out
or
jle
div
mov
out
mov
call
daa
stc
fwait
adcb
sub
icebp
mov
outsl
adc
sub
out
push
xchg
inc
ficoml
pushf
out
dec
xchg
xor
bound
lods
clc
call
inc
fwait
mov
mov
jb
jmp
push
in
inc
cli
pop
mov
outsb
xchg
mov
jno
les
adc
cmpsb
inc
aam
cmp
js
outsb
rcl
mov
sub
lea
mov
mov
cld
test
cmp
fisttpll
or
push
mov
push
mov
dec
adcb
pop
dec
jle
jae
adcl
and
ss
repz
jo
mov
jle
cs
ljmp
xor
push
nop
call
aam
in
xlat
out
outsb
incl
mov
pop
dec
jno
xchg
cmc
lret
popf
notb
jo
das
xchg
mov
cwtl
icebp
or
xor
je
xorl
or
rcr
mov
test
push
movsl
sbb
xor
jns
lds
adc
inc
pop
push
cli
mov
lods
jb
pop
xchg
popf
mov
and
jae
xchg
mov
mov
sbb
xchg
cli
movsl
adc
and
fs
sub
jge
xchg
mov
mov
fldl
jecxz
cmc
and
mov
loope
pop
mov
lcall
mov
fcomps
mov
adc
sub
xchg
jp
adc
jb
packsswb
sbb
repnz
pusha
out
xor
insl
dec
adcl
adc
and
ja
pop
fmull
xor
push
daa
mov
push
inc
adc
jl
fdivrl
enter
cld
lock
and
sub
sbb
pop
sbb
clc
sahf
fldcw
adc
xor
insb
es
pop
test
xlat
addb
sub
push
mov
or
dec
sub
xchg
test
sbb
ja
test
int
popf
fistl
push
add
adc
mov
pop
cs
and
adcb
notb
sbb
mov
jae
jmp
cmp
or
jge
xchg
dec
xchg
int3
repz
mov
clc
cmc
mov
scas
sub
mov
inc
xor
jns
int
cmpsb
leave
mov
fstpl
push
outsl
cltd
stos
hlt
jg
sti
insl
mov
mov
cmp
xchg
adc
xchg
push
inc
wbinvd
mov
mov
lods
mov
lds
lret
repnz
loopne
xor
pop
push
xchg
lods
cmp
mov
push
or
adc
das
mov
ss
adc
frstpm(287
mov
daa
jecxz
jmp
add
lcall
push
dec
aaa
pop
ss
jl
enter
ret
jl
pop
insb
ret
orl
bound
int3
jo
lods
bound
and
int3
mov
jle
push
mov
data16
es
lea
stos
stos
adc
repnz
pusha
xlat
and
mov
mov
das
mov
xor
pushf
lahf
lods
sbb
lds
push
xchg
add
cmp
hlt
int3
fiaddl
ljmp
lahf
cmovp
pop
pop
lea
sub
xlat
cmp
mov
xchg
sub
arpl
dec
push
jno
xor
insl
mov
lret
cmp
or
mov
pop
or
outsb
xchg
insl
jl
sub
addb
jne
repnz
cmp
or
xor
inc
inc
push
lea
dec
icebp
mov
xor
pop
adcb
das
mov
or
fldenv
shl
into
hlt
in
adc
mov
fs
ds
fs
sahf
cwtl
aas
fld
jle
pop
ss
arpl
pop
fdivrl
aad
and
fcos
test
or
adc
mov
lea
movl
or
lret
cmp
sbb
xchg
pop
push
pop
sbb
sbb
mov
aaa
loopne
adc
out
lds
cld
movsl
addr16
jp
out
or
mov
mov
out
out
aam
test
mov
bound
cmc
test
mov
cmp
inc
xor
xor
movsl
andl
push
xor
xchg
fs
jecxz
arpl
fistl
xlat
std
add
cmp
jle
mov
ds
popa
gs
jmp
lahf
jg
sbb
je
aad
icebp
cs
cld
ja
jl,pn
loope
loop
sbb
lods
pop
daa
mov
sar
cmc
scas
ss
test
incb
cmpl
call
mov
test
pop
jmp
les
shrl
in
push
xchg
pop
xor
jg
rorb
negb
push
mov
sub
jmp
fs
mov
ja
test
xor
add
cltd
das
je
inc
aad
push
outsl
add
pop
sar
mov
dec
jl
adcl
xor
and
adc
fwait
jmp
xchg
in
jmpw
into
nop
ficompl
jae
xor
and
enter
or
cli
shr
add
scas
push
sub
xor
sub
dec
sbb
mov
test
addr16
stc
dec
jnp
pop
jmp
sub
dec
rcrb
xlat
sbb
sbb
test
jno
enter
rcrl
push
lret
dec
movsb
pop
popf
pop
xor
adc
addr16
mov
add
or
cmp
jb
lret
ret
push
aaa
daa
pop
jns
das
mov
xlat
pop
jle
xor
pop
jo
adc
fidivs
mov
rcrb
dec
int
pop
jo
sbb
or
fwait
nop
arpl
adcb
or
jbe
sbb
pop
cltd
jp
loop
negb
call
mov
sub
ret
jge
test
icebp
out
mov
mov
sahf
push
cmpsb
stc
push
mov
aam
mov
stos
call
xor
lods
dec
jb
sbb
jge
pop
pop
push
inc
in
dec
jae
sbb
jno
ljmp
pusha
sbb
mov
pop
stos
inc
ds
repz
scas
iret
pop
mov
out
or
je
hlt
mov
pop
adc
pop
sbb
arpl
fmuls
xchg
xor
sahf
sub
push
mov
add
pop
lods
test
mov
mov
cmp
rcl
jmp
gs
jae
testb
sub
test
dec
cmp
aad
out
push
shrl
dec
or
pushl
dec
xchg
scas
mov
dec
leave
rcr
mov
out
sbb
leave
call
icebp
pop
adc
out
jb
lods
mulb
test
sbbb
mov
out
loope
jb
pop
je
mov
xchg
in
cmp
push
stos
push
dec
push
ljmp
les
fcoml
inc
in
lock
lods
sbb
dec
adcl
pop
andb
in
lds
mov
pusha
xchg
dec
xchg
xchg
mov
xor
push
imul
movsb
mov
std
enter
ljmp
rorb
pop
mov
mov
push
xor
push
sub
dec
popa
push
repz
xchg
and
cli
push
repnz
pop
mov
rcr
and
pop
mov
add
arpl
incl
sti
sub
sbb
sbb
out
add
aaa
and
jns
xchg
push
inc
sub
push
jns
orb
or
mov
push
das
test
push
out
sbb
mov
dec
mov
movsl
testl
loop
jmp
xchg
adc
mov
or
mov
inc
mov
mov
add
shrb
sub
push
in
lds
pop
pop
pop
test
popf
cld
mov
dec
enter
xorl
lods
test
cmp
roll
xchg
enter
rcrl
fisubs
clc
mov
push
mov
sahf
fcomps
lds
push
xor
xor
out
in
sub
pop
and
cmpsl
jnp
mov
mov
aas
inc
call
jmp
mov
roll
pushf
sti
adc
and
sub
add
mov
out
mov
lods
jns
shll
js
inc
jg
shll
push
ret
mov
mov
fs
xchg
pop
popf
xlat
dec
loop
pop
shlb
lock
push
adc
inc
fstl
bnd
push
in
subb
xor
icebp
aaa
pop
xor
adc
add
xchg
test
mov
xchg
mov
jmp
xor
imul
mov
js
or
popf
pop
out
not
mov
in
cwtl
mov
dec
sbb
je
or
lds
in
push
mov
lods
out
hlt
cld
jge
je
int
inc
loope
ja
loope
lods
pusha
loope
fsubrl
xchg
ss
daa
cmpsb
movsb
mov
pop
nop
fisttpl
add
push
jp
mov
push
cs
test
sbb
jg
xor
out
push
stos
rcll
outsl
idivl
xlat
or
in
push
pop
or
mov
aam
or
call
xchg
rorb
aaa
and
test
out
popf
fldcw
sbb
jecxz
outsl
sub
lea
mov
out
pop
xchg
ljmp
cmp
mov
iret
xor
out
jbe
push
imul
and
icebp
mov
push
into
lea
push
imul
icebp
sbb
jne
test
xchg
adc
sub
mov
sarl
imul
push
es
pop
js
xlat
pusha
test
mov
fsubrl
pop
iret
sarb
dec
sbb
icebp
addr16
leave
sub
lcall
cmc
lock
dec
cmp
std
in
lea
into
fwait
mov
cwtl
int
mull
add
mov
push
dec
in
jae
lods
inc
inc
fsubs
idiv
push
inc
xlat
mov
es
andl
movsb
stos
cld
jns
pop
dec
prefetch
xchg
dec
and
in
and
cmp
mov
ja
xchg
jbe
in
aam
cmp
mov
cmpsb
and
jle
pop
jmp
lds
cmp
jle
insl
repnz
mov
out
adc
xchg
dec
push
clc
cmpsb
and
pop
dec
inc
mov
adc
pop
xor
mov
and
push
or
sub
hlt
icebp
loope
arpl
or
outsb
mov
adc
ret
xchg
cmc
pop
dec
mulb
inc
ss
xor
scas
in
inc
or
ljmp
sbb
insb
dec
inc
notl
je
sti
movsl
push
jo
jns
lds
mov
push
mov
insl
iret
cmp
push
sbb
stos
mov
dec
fcmovbe
sbb
xor
je
xchg
xchg
mov
add
dec
mov
scas
push
mov
adc
fisubrs
flds
adc
cmp
popa
pushf
in
pop
rclb
test
jnp
mov
and
sub
push
adc
sti
adc
call
repnz
push
sub
adc
mov
scas
jne
xor
sbb
xor
add
shll
xchg
xchg
adc
dec
cmp
xchg
push
cmp
jns
loope
je
pop
pop
jle
jmp
or
pop
test
sti
and
fstpl
xchg
ja
push
enter
lret
dec
mov
lret
pop
xor
lea
sarl
cmpsl
sbb
xor
ljmp
in
fwait
xchg
xchg
jle
mov
mov
and
push
xor
xchg
mov
enter
jo
pop
dec
xchg
jns
jg
jge
ljmp
jle
dec
roll
jmp
cmp
out
and
sarb
push
xchg
rolb
pushf
scas
xor
sub
scas
std
mov
lret
push
xchg
int
cmp
test
xor
out
shll
add
seto
mov
in
insb
xlat
xor
and
into
bound
idivl
pop
lds
adc
loopne
arpl
cwtl
insl
repnz
repnz
insl
lock
xchg
mov
rclb
lcall
pop
ja
test
pop
lods
repz
jno
stos
sbb
test
push
aam
mov
out
xchg
das
nop
dec
and
xor
cmpsb
pop
inc
cmp
ss
xchg
and
out
jp
imul
xchg
je
or
or
arpl
aam
int
mov
push
dec
iret
mov
insb
test
pop
cmp
imul
inc
sub
jo
jnp
test
or
loop
push
inc
test
cmp
in
sub
ss
or
cmp
enter
adc
mov
lret
jbe,pn
loope
jle
scas
mov
lods
dec
add
mov
sbb
test
cs
in
inc
add
add
xchg
dec
out
in
pop
arpl
sub
popf
dec
jbe
imul
xlat
mov
scas
cmp
push
in
xchg
fdivs
in
add
js
cltd
pop
xor
cs
jae
adc
xor
out
mov
std
hlt
mov
xchg
and
popa
daa
test
scas
int
add
negb
pusha
aaa
ret
sbb
adc
xchg
xchg
test
mov
mov
sub
inc
push
jp
add
daa
mov
lds
stc
ret
add
push
insl
inc
fmull
mov
cli
xor
loop
daa
andb
push
ja
pop
jae
adc
mov
xchg
popf
add
addr16
sub
mov
cmp
pop
mov
scas
or
mov
push
sub
jne
sbb
xor
mov
idivb
shll
jl
pop
dec
cmp
cwtl
mov
in
adc
and
pop
stos
movsb
popf
clc
jae
pusha
pushf
movsb
xor
mov
das
aas
es
adc
cmpsl
push
mov
int
les
and
bound
fwait
xorl
cmp
jp
xlat
outsb
icebp
mov
push
jp
pop
or
adc
jmp
push
xor
push
adc
pop
shl
movsl
daa
negl
inc
test
aam
jp
lock
or
addr16
test
popa
in
jne
les
aaa
cmp
jne
cmpb
mov
xchg
pushf
cmp
das
cs
test
hlt
stc
mov
lahf
or
loop
push
adc
stos
mov
lods
adc
sub
or
mov
xor
insl
lods
push
cmpb
jne
xor
sar
inc
and
sbb
aas
inc
pop
outsl
push
loopne
xchg
or
inc
scas
jns
mov
daa
inc
icebp
neg
lock
mov
jle
jg
jb
cltd
nop
xor
push
mov
lock
pop
in
cmp
imul
lcall
or
and
add
imul
pop
sahf
movsl
js
insl
test
movsl
pop
add
pusha
pop
pushf
xchg
xchg
les
imul
in
mov
scas
lret
fstpt
adc
push
add
and
xor
push
or
xchg
and
pusha
setg
test
mov
daa
pop
add
rcrb
lret
xor
ljmp
and
pop
pusha
mov
cli
push
scas
divb
sub
fisubl
cmp
jb
pop
jne
mov
outsl
cmp
addr16
out
and
push
pop
fwait
xchg
dec
ljmp
jmp
and
xor
xchg
lods
push
pop
loope
mov
cwtl
jns
dec
arpl
sbb
out
iret
lods
fldt
arpl
fwait
inc
jmp
rcr
or
add
push
add
in
jmp
gs
jge
mov
mov
jge
push
adc
jae
push
cmc
mov
xchg
sbbb
dec
and
push
adc
sub
int
sbb
inc
mov
lods
fidivs
xchg
aas
jmp
inc
pop
movb
cwtl
imul
adc
sub
pop
lods
and
jl
shlb
mov
dec
lcall
push
jge
outsb
push
bound
testb
jl
xor
and
mov
adc
dec
arpl
ja
xchg
adc
mov
es
cmpsl
test
stos
stos
and
and
sbb
add
push
inc
push
andb
ret
jne
repz
addb
push
mov
sbb
into
fwait
lret
stc
movsl
sub
icebp
es
adc
out
rcrl
mov
or
sub
sbb
filds
outsb
popa
cmp
xchg
std
push
mov
cs
mov
jmp
xchg
nop
mov
xor
xor
sbb
push
mov
stos
loop
and
cmpsl
daa
pop
negl
insl
pop
mov
jno
data16
cli
dec
jp
mov
pop
imul
xchg
scas
mov
rcrl
das
int
aad
pop
sub
cld
mov
jae
cmp
jno
adc
inc
andl
mov
js
adc
rol
jb
daa
fistpl
lock
shlb
inc
in
ret
adc
lods
push
push
add
add
call
xchg
int3
mov
inc
and
sbb
incl
jp
movsl
dec
mov
hlt
adc
pop
or
mov
cmp
mov
adc
mov
xorl
jge
inc
daa
xchg
sub
dec
jo
clc
insl
hlt
jbe
cmc
shll
cmp
and
movsl
je
enter
and
rcr
rclb
pop
jle
imul
mov
aam
xor
inc
mov
stc
mov
insb
jg
mov
aas
jo
out
inc
adc
fsubr
scas
repz
popf
inc
xchg
xchg
dec
movsb
icebp
leave
pop
pop
add
xlat
or
xor
mov
test
arpl
div
enter
int
js
arpl
mov
mov
sbb
dec
jmp
xchg
sbb
and
fmul
daa
mov
lcall
pop
movsl
lods
sub
mov
int3
add
fdiv
xchg
mov
movsl
int3
jle
push
pushf
ds
test
out
push
pop
mov
xlat
movsl
cmp
fsubrp
mov
cld
mov
shrl
insb
ss
mov
pop
mov
insb
aad
rcr
mov
nop
push
xor
sbb
xchg
in
push
pmullw
imul
stos
push
mov
sbb
cmp
or
rorl
dec
and
ss
jecxz
sub
cmpsb
std
xor
pop
jecxz
bsf
jg
out
inc
sbb
add
xchg
and
nop
jb
in
mov
sbb
out
xchg
push
mov
je
insl
inc
pop
out
fwait
mov
stos
test
in
daa
xchg
in
sub
mov
mov
mov
fsts
or
cmp
out
daa
fcomip
sub
sbb
insl
xchg
into
pop
fnstsw
gs
mov
or
dec
aad
in
andl
mov
sub
mov
adc
jns
dec
nop
cmp
mov
jmp
adc
jl
or
dec
fldt
cmc
pop
cli
aas
inc
jb
ljmp
or
jmp
cmp
in
outsb
xchg
sbb
ja,pn
rcll
mov
mov
decb
mov
inc
nop
xor
adc
int3
push
faddl
mov
or
ljmp
mov
mov
mov
mov
mov
shll
scas
push
notb
add
cmpsb
jb
loope
cmp
inc
int
xor
jge
lret
mov
imul
fsubl
pusha
mov
inc
outsb
jne
jns
movsl
mov
push
in
repnz
aad
and
jl
mov
sarb
movsl
fsubs
insl
es
cmpsl
jnp
xchg
mov
fsts
popf
shrl
loopne
pusha
insb
popf
jbe
sub
lods
in
pop
pop
les
or
out
sub
test
dec
inc
jg
mov
mov
fdivl
push
cmp
arpl
jnp
xor
js
and
cmp
aad
jmp
fisttpll
sbbb
mov
or
outsb
pop
dec
jecxz
mov
mov
mov
insl
mov
lret
adcb
and
cs
js
mov
sub
xlat
ret
xchg
jae
mov
xchg
dec
subb
loope
mov
xchg
adc
adc
cmc
mov
mov
pop
stos
mov
int
pop
aam
push
dec
leave
mov
test
pop
shll
pop
jno
or
pop
mov
mov
into
sbb
mov
and
stos
filds
stos
inc
pop
xchg
pop
jge
inc
adc
adc
inc
ja
mov
pop
pop
pop
iret
dec
mulb
xchg
arpl
jne
dec
sbb
mov
test
lret
mov
mov
mov
jae
jno
jae
adc
and
mov
ljmp
es
out
mov
xor
sarb
jo
dec
push
and
and
mov
xchg
lret
pop
jns
and
out
jo
ffree
jb
sbb
pop
mov
cli
mov
test
cli
jne
lods
js
jecxz
roll
lret
dec
sahf
mov
sbb
cmp
push
pop
hlt
jecxz
pop
das
test
mov
add
int
xor
adc
or
pop
aaa
bound
lods
adc
cmp
das
push
in
pop
push
rcll
or
mov
xchg
pop
ficomps
fdivr
shl
inc
dec
sub
jne
cmp
int
sub
jp
push
mov
mov
sbb
mov
or
jno
xchg
sub
sub
xchg
mov
add
iret
aaa
ret
out
stc
mov
adc
scas
mov
std
or
lods
pop
adcb
sbb
orl
out
popa
pushf
std
add
nop
mov
test
pusha
xchg
push
mov
xchg
and
mov
aad
xchg
inc
hlt
dec
xchg
adc
sbb
je
xor
mov
xchg
mov
push
and
rcrb
insb
adc
je
fs
negl
scas
xorl
jnp
cmp
mov
stc
xchg
dec
mov
push
pusha
stc
nop
add
xor
rolb
pop
rcr
jns
insb
dec
mov
pop
std
outsb
pusha
push
pop
xchg
sub
lds
enter
repz
fimuls
loopne
dec
or
and
ud0
fldt
test
lahf
ret
arpl
es
fbstp
cmp
mov
in
adc
test
pop
je
vphadddq
xchg
stc
outsl
adc
mov
rcrb
cwtl
mov
arpl
mov
fiaddl
mov
jle
out
data16
mov
insb
sahf
jp
jbe
cmp
add
push
mov
ja
std
fisubrl
mov
and
inc
lods
and
insl
out
leave
ss
xlat
push
mov
int
jmp
jecxz
mov
dec
cmp
sub
xor
fnstenv
or
or
popa
movsb
pushf
xchg
sub
xor
sbb
imul
or
jl
dec
out
adc
pop
imul
insb
lret
std
fsubr
mov
pop
out
cs
pop
out
lcall
sbb
inc
out
fstpt
les
mov
cltd
jns
scas
rcrb
jle
sub
pop
inc
je
cld
icebp
sbb
adc
stos
push
sub
enter
push
cmp
mov
insl
pop
inc
adc
lret
mov
outsb
push
push
mov
or
jns
mov
and
pop
jne
roll
adc
loope
jle
aaa
in
mov
lahf
xor
cmp
pop
cmp
into
mov
mov
xchg
pusha
push
sti
mov
ljmp
daa
inc
movsl
jno
mov
jmp
clc
not
jbe
jmp
dec
mov
sti
sbb
or
mov
test
jo
int
in
icebp
sahf
je
lcall
pop
dec
and
iret
pop
insb
cmc
negb
mov
aas
xchg
cmp
nop
ja
lret
jns
movsb
mov
into
lret
sti
add
inc
aad
dec
iret
in
fwait
out
fistl
lods
outsl
cmp
fwait
xchg
imul
add
lods
shlw
inc
xchg
stc
inc
or
sbbl
sbb
mov
icebp
test
fnsave
mov
dec
pop
out
dec
push
add
je
shll
aaa
mov
imul
jp
add
mov
xorb
out
ret
sub
shr
fs
fs
cs
pop
js
cmp
testl
addb
push
sub
pop
jge
ljmp
xor
clc
mov
cmp
test
adc
call
sub
xchg
pop
out
xor
or
stos
sbb
mov
outsb
xor
mov
cld
inc
test
push
sbb
mov
jl
fiaddl
je
sbb
dec
hlt
popf
popa
jnp
sbbl
js
mov
mov
bnd
adc
pop
add
rcl
fmul
rorb
cmpsl
fiaddl
xchg
inc
imul
sub
stos
fbstp
stos
add
mov
jecxz
add
pop
jecxz
stc
jns
mov
fldt
cli
clc
pop
shlb
push
std
inc
out
pusha
orb
test
ficoml
scas
or
mov
stc
adc
push
lock
mov
sbb
lods
sub
inc
pop
add
xchg
mov
push
jle
sbb
xchg
lods
jae
leave
decl
adc
inc
in
cmp
and
rorl
lahf
mov
cmc
lea
xchg
lds
xchg
xor
push
push
jp
lea
mov
inc
or
dec
les
js
mov
call
je
aaa
dec
or
or
cli
or
arpl
push
pop
lds
xchg
sub
gs
sbb
mov
daa
sbb
fdivs
adc
das
das
add
leave
mov
mov
sub
sbb
cltd
sbb
pop
out
aam
jno
cmpb
cmovl
add
in
and
mov
lea
outsb
xchg
outsb
test
fisttpll
icebp
pushf
add
in
ret
test
or
mov
mov
sti
pushf
dec
movb
ss
str
jle
cmp
mov
call
or
mov
pop
pushf
repz
dec
ds
pop
add
ret
add
lods
xor
sti
adc
test
mov
mov
cld
enter
mov
pusha
mov
pop
lret
in
in
bound
jbe
mov
pop
ficoms
push
pop
dec
sub
mov
or
pop
mov
fwait
xor
loop
jnp
andl
push
aad
xchg
pushf
jmp
test
push
aam
jecxz
dec
int3
mov
mov
pop
cmp
push
das
mov
inc
shll
add
fadds
mov
popf
ja
aaa
or
lds
mov
fwait
sbb
mov
pop
mov
cwtl
pop
pop
xor
fwait
push
pusha
pop
jp
jno
or
pop
les
cmp
mov
push
xor
lcall
lea
cmp
xor
pop
rcr
pop
test
jp
mov
cwtl
scas
mov
in
jne
jne
push
testl
ds
fcoms
fwait
mov
clc
xor
int
out
sbb
int3
sarl
and
repnz
dec
call
mov
mov
clc
pop
addr16
jge
xchg
pop
lcall
inc
mov
cli
sub
jbe
cwtl
loop
sbb
in
or
lods
into
sbb
cmpsb
sbb
int3
aam
xchg
sub
clc
loopne
mov
int
addr16
jnp
xlat
push
sub
inc
je
in
xchg
leave
lret
popa
and
iret
pop
sarb
cmpsb
mov
imul
xlat
sub
dec
aad
fldl
mov
push
in
adc
pop
scas
imul
fcmove
xchg
clc
roll
jns
nop
mov
test
test
inc
and
pusha
cltd
adc
icebp
and
lcall
mov
push
out
lods
loope
jo
jmp
popl
sub
testl
cwtl
test
push
cld
xor
test
xor
jecxz
mov
cmp
mov
push
sub
inc
stc
pop
xchg
pop
pop
arpl
dec
icebp
dec
cmp
loopne
mov
lock
xor
and
xchg
sbb
aam
xchg
add
inc
out
int
or
xchg
loopne
test
cwtl
xchg
sbb
repnz
push
pop
cmp
or
mov
shll
out
xchg
js
or
add
pop
jl
push
aad
scas
scas
loope
clc
rcrl
mov
mov
mov
mov
cltd
test
xlat
clc
test
xchg
test
cmc
fmul
and
sbb
std
jno
push
shrl
inc
mov
mov
icebp
sbb
std
or
xlat
fs
rcll
inc
push
popa
lret
mov
pop
cltd
adc
vpmacssww
push
pop
int3
movsb
jge
pop
dec
pop
cmp
roll
jo
sub
out
movsb
outsb
mov
xor
dec
pop
cmp
cmpsl
fdivs
fwait
clc
add
add
ljmp
mov
mov
dec
stos
into
pop
inc
insl
xor
aaa
loope
mov
cmc
mov
mov
loopne
xchg
pop
shrb
xor
std
xor
fmuls
insb
mov
pop
lahf
outsl
fstl
scas
jbe
in
jg
out
mov
shrb
insb
out
arpl
push
dec
or
fdivrp
jle
ss
sub
and
jge
ret
push
jnp
aas
inc
sub
js
dec
mov
push
les
sbb
fidivrl
cmpsb
sbb
add
jl
sbb
mov
sbb
mov
xor
test
out
ja
xor
lret
jp
push
stc
and
inc
jmp
sbb
in
call
pop
div
xor
lods
sbb
shll
xchg
fildl
pop
jp
xchg
lods
adc
xchg
ljmp
add
popf
out
packuswb
adc
push
mov
mov
std
xor
push
inc
jl
cwtl
popf
enter
loopne
dec
sar
fmull
mov
mov
pop
sub
scas
sbb
popf
adc
and
fadd
xchg
mov
push
test
mov
jns
inc
sub
pop
and
cli
mov
shll
arpl
xor
daa
shll
push
jbe
in
push
mov
and
pop
mov
mov
lods
jb
bound
inc
cmp
push
mov
mov
lcall
adc
cltd
sbb
xchg
aaa
push
out
adc
fsubrs
inc
call
aam
lds
sub
out
mov
pop
jne
push
sub
in
nop
sarb
sub
xchg
inc
sub
xchg
out
in
bound
or
mov
push
loopne
sbb
flds
dec
dec
xor
mov
test
push
sub
push
xchg
daa
imul
add
push
subl
or
inc
xchg
and
jl
cmp
xor
mov
ljmp
fcoml
push
mov
or
dec
fnstenv
inc
sbb
and
fsubs
adc
mov
inc
in
jge
fstl
or
adc
mov
mov
mov
mov
movsb
cmp
mov
or
cmp
push
push
xor
or
mov
cmp
pop
ret
pop
call
gs
lods
inc
xchg
cmp
mov
xor
sub
cli
lea
ret
les
xor
ljmp
jbe
and
insl
xchg
jb
cld
nop
lcall
adc
mov
xlat
mov
push
orl
icebp
mov
lret
fisttps
cld
and
in
into
sub
mov
int3
cmp
ret
outsl
int
popf
fcmovnbe
sbb
mov
sub
ds
dec
dec
and
add
mov
in
mov
adc
sub
and
mov
test
mov
pop
int3
cld
xor
pusha
cli
insl
cld
daa
and
call
or
adc
cmp
test
sbb
mov
rorb
or
add
xor
mov
or
adc
lcall
xchg
xchg
adc
inc
aas
push
sbb
jo
cmpsl
cli
mov
mov
mov
cmpsb
inc
mov
add
xor
push
sub
cmpb
mov
and
sub
push
mov
fsubrs
fwait
push
into
loopne
int3
jae
lds
cli
and
push
mov
fnstenv
lret
loop
and
test
dec
rcrl
pop
push
inc
stos
imull
pop
aad
xor
rcll
lcall
mov
adc
push
or
push
push
cmpsl
sub
sub
movsl
jnp
je
test
sbb
inc
cmpsl
fwait
mov
shr
dec
stos
sbb
ja
mov
pop
jbe,pt
out
jle
xor
js
fnsave
testl
fwait
sub
sti
fs
mull
fisubs
stc
les
and
scas
dec
push
jp
adc
dec
dec
js
aaa
mov
pushw
pop
stos
popa
movsl
push
out
mov
lea
cli
mov
sbb
sbb
lods
sahf
inc
jge
arpl
sbb
dec
scas
jmp
mov
or
std
sarl
inc
inc
popf
jae
or
push
insl
push
out
jnp
sti
bnd
add
pop
int3
mov
repz
push
jg
xchg
movsl
pop
scas
mov
insb
mov
fisubl
jmp
ja
and
out
mov
adc
or
ror
imul
mov
mov
lahf
push
setp
mov
xor
out
pop
sbb
mov
and
jb
xor
call
pop
xchg
sub
int3
aaa
jp
test
adc
cmp
adc
je
les
and
xor
ja
mov
imul
jno
mov
jg
in
or
lahf
adc
mov
mov
cmp
fisubrl
push
mov
fs
xor
cmc
pop
sbb
inc
fs
sub
mov
idivb
xchg
jp
jl
cmp
or
xor
or
test
stos
popa
jno
dec
sub
test
or
jne
mov
jbe
or
loopne
shll
sub
adc
mov
int
popf
cltd
pop
stc
sub
or
dec
mov
daa
ja
test
imul
arpl
sbbb
cmp
and
data16
inc
shrl
scas
pusha
fisubl
std
lea
mov
mov
fldenv
pop
jno
stos
in
arpl
loope
and
dec
mov
dec
rcl
mov
adc
jnp
adc
sbb
sbb
xchg
lahf
stc
adc
pop
add
icebp
cli
pop
adc
pop
jmp
jecxz
loopne
jb
aad
sbb
test
inc
sbb
lods
push
xchg
xchg
jns
jmp
in
add
lret
test
xchg
adc
lret
or
nop
fbld
xchg
icebp
sahf
vcomiss
xor
cwtl
nop
push
arpl
imul
lret
mov
pop
int3
inc
lahf
inc
pop
jp
xor
fstl
test
cmpl
pop
jae
out
inc
adc
pop
push
jno
xchg
dec
inc
mov
jmp
mov
out
pop
lret
cmp
sbb
ss
add
push
sbb
adc
mov
rcrl
mov
push
in
xchg
ret
adc
repnz
gs
inc
fstpt
or
inc
fwait
sub
xor
fdivl
loopne
mov
pop
xor
hlt
dec
jo
jmp
push
pop
rclb
add
or
movsb
mov
outsb
test
popa
lods
add
xor
xchg
sub
mov
pop
jbe
or
scas
inc
test
or
push
jle
cltd
xor
sbb
int
fs
test
or
pop
fcoms
xchg
mov
jno
or
icebp
sbb
insb
aam
add
mov
inc
jns
bnd
aam
mov
cwtl
or
aam
popa
or
xchg
cmp
into
mov
mov
ss
movsb
pop
mov
push
adc
push
xor
mull
adc
xor
test
das
mov
cwtl
lcall
mov
add
pop
xchg
in
sub
inc
fldenv
insl
loope
jae
out
xor
pop
xchg
sub
fs
xchg
pop
mov
or
jmp
fcoml
outsl
xor
insl
cld
adc
imul
inc
pop
jne
push
and
adc
roll
dec
and
mov
sub
lods
leave
cmp
repnz
push
xor
loopne
insb
pop
sub
sub
push
xlat
fcomp
sub
fbld
mov
les
mov
mov
mov
sbb
inc
lods
xor
sbb
in
and
dec
pushl
bound
xchg
push
bound
sbb
rorb
adc
ja
push
adc
and
fldcw
into
adc
pop
inc
mov
sarb
orb
mov
pop
clc
xor
mov
mov
addr16
hlt
pop
pop
inc
loope
insb
movsb
push
sti
loope
ja
addr16
mov
insb
js
or
adc
cmp
adc
in
testb
cmc
popf
xchg
pop
stos
lods
jl
sub
jle
mov
movsb
mov
mov
rorb
push
inc
push
xor
je
sub
shl
movsl
int3
jnp
lahf
jmp
scas
sub
cmpsl
testb
inc
fistps
in
cmp
popf
cli
mull
pop
mov
sbb
cmp
xchg
push
pop
mov
mov
repz
xchg
mov
in
add
imul
imul
pop
and
fldcw
sbb
daa
push
mov
sub
pop
outsb
mov
push
cmpsl
sbb
mov
incl
adc
xchg
push
inc
stos
add
add
add
out
xor
lcall
jbe
lret
mov
into
fadds
push
enter
pop
jno
sub
xchg
andb
xchg
aas
push
inc
movsl
mov
or
push
dec
dec
push
ret
insb
scas
xor
mov
adc
cmp
das
push
push
adc
icebp
insl
pop
jge
and
rorl
add
cwtl
rol
fidivl
cltd
fnstsw
pop
out
scas
sbb
add
shld
xor
inc
arpl
lock
mov
mov
aas
inc
outsb
pop
popf
lock
es
xor
dec
outsb
jmp
xor
adcb
sub
in
scas
lahf
xchg
inc
push
out
movsb
jecxz
movsb
rolb
js
mov
out
jns
movsb
imul
sub
enter
sub
pushf
pop
sbb
cmp
add
andb
jo
jmp
mov
xlat
shl
int3
stos
cmc
dec
mov
mov
dec
adc
xor
data16
outsl
jbe
les
test
aas
pop
fisubl
pop
or
xchg
cmc
js
jl
lock
lods
cmp
xchg
push
push
pushf
imul
mov
stos
cmp
popa
pop
cwtl
aam
mov
add
push
pusha
jnp
jb
dec
push
hlt
mov
pop
idivl
pop
jo
in
test
sub
cmc
push
stos
or
dec
xchg
das
fwait
jmp
adc
in
push
dec
int
xlat
fdivrs
gs
pop
daa
fildll
xchg
sbb
scas
jmp
fs
dec
nop
push
pop
mov
arpl
jl
mov
in
insb
loope
call
out
xor
pop
and
jns
inc
dec
mov
jo
and
xchg
jge
jns
ret
cmc
mov
ret
aaa
push
mov
mov
daa
cmp
and
adc
ret
aad
jne
add
cmpsl
data16
xlat
cli
dec
cmp
dec
inc
jb
clc
test
pop
out
sahf
pop
xor
imul
xchg
jg
mov
adc
xchg
and
mov
sbb
fucomp
xor
cmp
mov
pop
repz
shll
idiv
cld
out
fwait
mov
pop
jecxz
daa
adc
pushf
outsb
pop
sbb
cmc
pusha
mov
pop
ret
out
mov
in
lods
pop
jg
sarl
xchg
jl
jo
jmp
push
push
xchg
lock
sub
imull
shlb
or
pop
mov
adc
add
and
jne
and
xchg
mov
cmp
xchg
outsb
lds
push
pop
orb
and
insb
push
cmp
rolb
fsave
add
incb
adc
pop
jae
and
and
push
dec
cmc
mov
stos
fcoms
jne
add
mov
pushf
cs
jecxz
imul
pop
sub
mov
xchg
mov
lret
xor
sub
sub
out
push
inc
out
call
inc
add
pop
imul
ffreep
je
loop
pop
add
dec
mov
hlt
fs
divl
push
lahf
mov
cmpsl
notl
fldl
negl
dec
mov
stos
push
adc
pusha
shrb
push
imul
iret
insb
imul
adc
or
cmp
mov
cltd
fs
cmp
dec
aam
add
push
dec
in
xchg
cmp
int
mov
cs
stos
jae
arpl
out
xchg
push
inc
lret
cmp
pop
push
mov
subl
jno
rclb
adc
leave
loope
mov
rcrl
mov
pushf
imul
shlb
pop
or
sub
jmp
adc
inc
cs
mov
scas
push
xor
test
add
sbb
cmp
sti
mov
pop
dec
inc
inc
lock
ds
dec
cmc
dec
mov
xor
sti
fdivrl
testb
xchg
xor
mov
cmpsb
stos
stos
inc
loopne
mov
aaa
arpl
or
test
push
sub
jecxz
inc
dec
add
imul
into
movsb
or
hlt
sbb
add
or
jle
clc
pop
add
decb
pusha
xchg
aam
add
or
pop
push
lret
cli
pop
sbb
xor
sub
popf
insb
fucomip
pop
scas
mov
rorl
push
subb
xorl
mov
jge
jg
and
orl
mov
ja
fxtract
pushf
add
cltd
jl
cmc
and
add
repz
mov
out
setb
cmc
das
jecxz
push
repz
xchg
xor
lret
lds
jo
add
sub
mov
xchg
jnp
mov
shrb
imul
xchg
push
stc
pop
push
mov
in
and
sub
sub
mov
jmp
mov
jbe
movsl
ljmp
sbb
jne
int3
cwtl
ds
push
mov
dec
pop
cli
fnstsw
scas
fcompl
and
push
push
or
mov
dec
aas
outsl
xor
or
repz
lcall
sahf
lcall
jnp
mov
loopne
imul
mov
inc
arpl
push
mov
clc
mov
pop
rcrb
and
ret
outsb
aad
push
fcomps
mov
cli
lods
imul
dec
push
jle
insl
aad
cmc
lahf
sarl
cltd
into
pop
fistl
mov
jle
repz
jb
aam
dec
jmp
mov
or
repz
jecxz
mov
scas
lods
ds
aas
fstps
push
add
fstpt
add
mov
dec
cmp
mov
std
mov
cmpsb
js
ss
push
add
sub
mov
jbe
jle
lods
push
cmp
or
mov
int
stos
clc
pop
cwtl
lods
lods
mov
aaa
mov
repz
dec
test
into
inc
sbb
mov
xor
cld
pop
xchg
rcrb
call
addr16
shrl
pop
inc
push
dec
xor
int3
inc
inc
loope
imul
or
lds
test
pop
jo
syscall
xor
xor
or
add
dec
mov
movsl
aaa
push
inc
dec
jp
cmp
cmp
ret
pop
aaa
punpckhdq
add
add
ret
xchg
mov
in
fmuls
push
mov
jb
mov
bound
iret
mov
and
scas
and
sbb
test
push
test
cld
xlat
in
pop
fcoml
push
add
stos
pop
mov
pop
and
sub
aam
frstor
and
push
lret
cmp
inc
cmp
ficomps
cmp
lret
and
sbb
fcomps
jle
outsb
or
inc
add
mov
mov
xchg
cltd
cmpsb
dec
call
xchg
jg
xchg
rcl
in
cmp
or
xchg
mov
push
lret
cmc
add
xchg
or
fadds
std
cltd
inc
in
loope
push
les
ficompl
xchg
out
sub
sti
dec
mov
rcl
mov
or
icebp
in
ds
fwait
sbb
int
cmp
xchg
mov
or
call
xchg
roll
icebp
outsb
adc
and
out
mov
test
insb
lret
jnp
jl
cmp
sub
sbb
xchg
imul
test
cmp
test
xchg
ljmp
mov
arpl
hlt
pusha
add
or
or
jnp
mov
mov
sbb
jne
xor
sub
test
scas
aaa
add
adc
in
jns
mov
sahf
daa
xor
in
rol
das
stos
or
mov
push
mov
or
stos
adc
dec
shrl
xor
inc
mov
push
aam
mov
fwait
lret
shlb
cmp
push
xchg
sub
aad
js
out
inc
adc
je
lcall
mov
and
cmp
push
setns
sub
sahf
in
push
push
and
popa
lds
dec
xchg
imul
and
lea
lret
sar
lahf
mov
add
das
and
pop
adc
cmpsb
cmp
cs
ljmp
mov
cmp
sbbb
mov
push
rcll
iret
mov
test
test
lahf
fcoml
sub
mov
push
in
in
pop
test
jo
jmp
addr16
mov
imul
sti
mov
icebp
sbb
cmpb
xchg
fwait
push
dec
jo
test
mov
pop
clc
std
jl
add
loope
insl
dec
les
inc
jno
shrl
pop
lea
push
shrl
fsubrs
mov
mov
cmp
pusha
inc
enter
pop
xchg
inc
cmp
cmp
pop
xor
or
lock
aaa
mov
lcall
jae
icebp
rolb
fisubrs
fisubs
push
movsl
loop
cld
int
mov
inc
add
and
fidivrs
adc
andl
aaa
adc
movsb
adc
test
pushf
aad
mov
cltd
lcall
mov
outsl
pop
cwtl
xor
rcl
mov
mov
rorb
sbb
inc
lahf
jge
jecxz
inc
pop
fs
mul
cmp
lds
repz
testb
dec
or
push
push
add
jo
sti
and
jns
ret
ds
scas
dec
adc
mov
sbb
shll
sub
or
mov
int
add
cmp
in
mov
mov
push
add
adc
push
and
jbe
inc
push
xchg
jae
stos
cmp
jae
xlat
stc
iret
inc
int3
mov
xchg
cltd
sub
jb
inc
mov
insl
mov
mov
jg
jg
or
dec
fisubs
inc
sbb
mov
das
inc
mov
sbb
nop
imul
insb
adc
push
inc
movsb
test
push
cld
sub
fwait
sbb
inc
fimuls
pop
lret
fsubp
cld
sarb
enter
push
xor
addr16
stos
mov
lahf
loopne
pushf
inc
in
or
cmpsl
pop
flds
mov
das
lret
jnp
mov
or
jb
adc
addb
fimuls
aad
sti
fisubrl
mov
add
call
sahf
pmuludq
aaa
lret
xor
pushf
adc
mov
orb
imul
dec
loop
out
inc
sti
and
mov
jl
out
sbb
aas
cmp
insb
pop
add
or
pushf
scas
pop
out
outsb
mov
inc
loopne
sub
push
mov
dec
fldcw
or
push
push
fs
cmp
xchg
mov
in
das
mov
mov
js
pop
jmp
cmp
repz
fdiv
sub
cmpsl
cwtl
int
xor
dec
cmp
lahf
cltd
ret
and
loope
jb
in
mov
fsubrp
fdivrl
and
dec
mov
dec
pop
jg
adc
mov
stc
mov
jbe
add
inc
stc
mov
andl
inc
xchg
iret
ds
fisttps
mov
xor
mov
inc
add
adc
inc
jo
fisubrl
pop
adc
test
cwtl
sbb
mov
mov
pop
fisubl
inc
push
cmpl
mov
repnz
sti
into
jno
xlat
inc
out
daa
xchg
xchg
adc
sahf
and
out
jne
mov
jge
or
mov
sbbl
es
jbe
inc
shl
sbb
push
add
or
push
add
jne
adcb
outsb
insb
popf
or
cmpl
jb
mov
xchg
pop
mov
movsl
cmp
inc
in
or
shrb
es
pop
add
dec
rolb
rcrb
pop
cld
xor
mov
testl
push
inc
sub
es
es
es
jns
mov
fldt
mov
pop
jne
jle
rorl
add
test
ljmp
and
fs
and
fcomi
ljmp
and
or
jge
mov
push
cmp
xchg
xor
dec
clc
aad
inc
scas
ret
es
fucomi
aam
clc
lock
xchg
jns
jb
adc
pop
int
aam
hlt
jecxz
cwtl
scas
nop
movsl
insl
xor
jl
test
in
jp
dec
sbb
pop
mov
add
push
sbb
mov
dec
push
sub
or
xor
rorb
insb
stos
xlat
pop
inc
cmp
pop
test
mov
add
mov
inc
rorb
daa
fcomps
insl
pop
movsl
xchg
les
inc
jp
adc
xchg
jge
shl
xchg
jle
mov
mov
jns
and
data16
lock
push
jle
jns
js
jl
xor
shl
pushf
pop
popa
add
cmp
jb
pop
adc
int
lods
xchg
in
aas
sub
pop
inc
daa
loopne
dec
or
adc
stos
in
lea
repz
je
insb
xlat
movsb
aad
in
pop
jne
scas
lods
and
stos
addr16
jnp
xchg
cmp
xchg
mov
mov
sbb
inc
adc
sub
sbb
push
cmpl
cmp
int
push
inc
cmp
pop
adc
cli
push
adc
repz
jg
loope
mov
mov
fcoms
xchg
inc
add
push
inc
cmp
fsts
jbe
cltd
add
cmpsl
aas
jae
sbb
cli
out
xor
and
je
data16
push
push
or
sbb
dec
mov
dec
or
sti
fcmovnbe
push
push
sarl
add
subl
or
sbb
andl
pushf
push
cmp
add
faddl
xchg
sbb
xchg
add
lcall
xchg
loopne
mov
mov
push
std
xchg
pusha
cmp
inc
aas
mov
or
insb
rcrl
lods
pusha
js
out
inc
jo
mov
fnsave
ret
out
sbb
aad
dec
or
xchg
cmp
jl
lcall
push
pusha
jnp
lcall
add
sub
into
out
jno
xor
sahf
in
hlt
mov
dec
int
popa
fs
cs
pop
test
dec
cmp
adc
jge
cmp
test
fistpll
add
mov
push
std
adc
and
test
mov
fdivrl
adc
pushf
sub
jo
mov
xor
jge
int3
js
lock
xchg
or
fsub
stos
cwtl
jg
addr16
ss
mov
jp
scas
ds
das
dec
adc
xorb
test
pop
pop
mov
or
xor
add
je
jg
cs
xor
dec
xchg
xor
xchg
cmc
sbb
sbb
or
sub
adc
and
fstps
push
in
lds
mov
rclb
mov
and
add
adc
lock
dec
push
adc
xchg
xchg
fcoms
pushf
fsts
mov
mov
cmp
clc
test
mov
xlat
rol
xchg
les
cltd
mov
jl
pop
aaa
cmp
mov
ja
or
std
sbb
fstps
std
jne
xor
cmp
pop
cmpsl
mov
cmp
out
lds
or
leave
popf
push
or
cmp
fidivrs
jb
dec
mov
xlat
dec
jmp
or
xlat
std
xchg
lret
inc
cmp
mov
xlat
dec
push
ja
repz
fs
nop
out
pop
in
push
and
adc
fsubrl
sub
add
in
cmpps
call
rcrb
jmp
data16
push
pop
xchg
mov
jmp
lcall
insl
je
sub
in
xchg
repz
or
aas
push
sahf
ret
mov
push
jecxz
sarl
mov
testl
popa
sub
mov
or
sub
xor
xor
push
inc
jne
jp
lcall
jne
out
sbb
js
push
push
call
sub
aad
cs
and
ds
mov
pop
sub
ljmp
jmp
dec
cmpsb
jne
xor
lods
test
repz
std
sub
add
xchg
mov
pop
push
jb
in
xchg
jmp
popa
dec
mov
leave
inc
cmp
enter
xor
pop
cmpb
xlat
pushf
aas
mov
test
xorl
scas
cmp
adc
xchg
out
pop
add
sahf
xchg
pop
mov
outsb
and
out
jbe
xchg
lods
jns
xchg
mov
testb
jns
push
lods
inc
cmp
out
cs
mov
jg
loop
jns
dec
dec
stos
fnstenv
jmp
and
cmc
mov
pop
jae
push
jno
dec
mov
fucomip
sbb
testb
add
inc
sub
int
sub
and
jmp
adc
jmp
inc
or
iret
cmp
pusha
ret
cmp
movsl
test
nop
sahf
fsubs
pop
adc
jne
sarb
out
pop
sahf
fwait
movsl
cmp
xor
icebp
mov
jne
ja
pop
inc
dec
jl
out
mov
fisttpl
aam
aaa
scas
jg
lret
adcl
in
sti
pop
outsb
mov
rcl
cmp
movsb
lods
push
jecxz
sub
cld
mov
jo
fdivs
mov
inc
pop
mov
jge
push
sbb
ds
cmp
push
adc
push
mov
rcll
add
mov
or
icebp
aaa
dec
mov
test
jae
adc
mov
and
les
pop
add
push
sbb
lock
fs
ss
jp
incb
das
dec
mov
xor
shlb
adc
outsl
outsl
gs
cmc
jmp
push
add
mov
stc
jmp
pop
dec
shll
pop
test
stos
add
loop
inc
pop
mov
add
aad
lods
ljmp
dec
dec
js
dec
mov
mov
std
or
testl
gs
clc
shr
es
mov
pop
andl
hlt
pop
inc
add
test
popf
and
mov
outsl
popf
jge
adc
fwait
dec
notl
xchg
xchg
aas
mov
lcall
fcmovu
or
mov
mov
add
mov
xchg
sbb
lret
stc
enter
inc
and
xchg
les
leave
jp
adc
jo
ss
sbb
or
in
popf
enter
pushl
mov
push
cmp
movsl
pop
sarb
decb
stos
jecxz
lcall
mov
push
xor
idivl
and
add
les
push
pop
negl
fisttpl
adcb
jbe
or
sbb
xchg
cmp
jae
cmp
dec
test
xor
mov
stc
stos
test
cmp
and
pop
stos
inc
loope
lcall
mov
je
aaa
inc
sbb
daa
repnz
lods
jecxz
mov
jecxz
push
fwait
or
xor
mov
fldcw
push
lods
iret
and
cs
xchg
outsl
rcrl
in
adc
dec
add
clc
out
dec
out
addr16
ljmp
xchg
jo
pop
daa
test
mov
xlat
jg
mov
mov
insb
sbb
dec
lahf
pop
setle
out
jge
rcll
inc
mov
mov
xchg
and
fbstp
xlat
out
mov
bnd
add
mov
stos
ljmp
test
dec
sub
jmp
mov
repnz
mov
outsl
xchg
fsubr
in
sub
adc
sub
jnp
mov
mov
enter
jp
stc
jle
bound
adc
or
jecxz
je
es
push
dec
ja
pop
cltd
push
fildll
inc
xor
fcoml
mov
lret
add
in
mov
addr16
adc
int
mov
inc
cmp
sbb
mov
jl
add
fs
out
mov
aam
xor
daa
mov
sub
mov
into
ja
push
icebp
pop
insb
jle
lods
cmp
imul
and
jbe
in
ret
cmpsl
lea
out
sti
jo
addr16
js
movsl
divl
mov
and
pop
out
xchg
mov
shrl
push
imull
and
jae
inc
pop
pop
jns
fwait
mov
adc
lods
jnp
sub
lahf
fnstcw
stos
mov
xchg
pop
pop
rorl
sbb
pop
sbb
fiaddl
jno
jnp
push
lret
ret
ret
dec
mov
and
roll
inc
loope
adc
and
in
adc
sub
add
aas
dec
mov
mov
xchg
push
std
dec
dec
sub
pushl
popa
sbb
stc
outsb
scas
test
lret
mov
mov
xlat
cmp
or
xlat
mov
lds
mov
inc
call
sahf
push
lret
enter
sbb
pusha
inc
or
das
addr16
sbb
cld
cmp
bound
inc
mov
inc
and
adc
ficompl
or
icebp
inc
xchg
ljmp
enter
mov
aad
push
jl
jl
pop
out
cmpsl
shl
dec
sbb
sysret
into
insl
mov
std
xchg
shl
popf
std
iret
sbb
aam
imul
dec
jmp
dec
mov
mov
cmp
mov
and
je
cmc
jne
adc
and
jbe
pop
repnz
fadds
fcomps
divl
sub
sbb
jbe
or
mov
xchg
loop
pusha
mov
mov
iret
aaa
scas
jno
lea
loope
mov
sub
addr16
cli
pop
insl
mov
jno
mov
imul
and
gs
mov
stos
xor
lcall
cmpsl
out
test
xor
sbb
add
pop
in
dec
clc
imul
gs
je
and
sbb
sbb
outsl
hlt
xchg
nop
cli
jg
in
in
xchg
add
sub
pushf
int
dec
sub
push
xchg
sbb
dec
in
mov
and
out
sub
leave
mov
jae
stc
out
imul
pop
ret
shl
push
mov
stos
or
jmp
xor
in
lcall
ja
push
shll
xchg
scas
dec
push
xor
mov
out
sbb
or
mov
pushf
jo
das
fbld
shr
cmc
fildl
cmc
add
push
ficoml
test
inc
mov
mov
ja
repz
or
outsb
pop
mov
mov
imul
out
push
icebp
sub
push
jg
out
aaa
insl
lock
xor
inc
jmp
push
ljmp
rclb
and
dec
or
cltd
sub
es
pop
add
cmp
pop
mov
pusha
mov
mov
or
fldt
mov
mov
inc
bound
mov
jb
pop
gs
xchg
lea
push
adc
xor
adcb
xor
xor
mov
dec
insb
push
sbb
cmp
xor
lret
lods
in
sub
push
lods
rcll
mov
daa
loopne
or
pop
nop
andl
sbb
or
inc
mov
mov
jmp
mov
push
pop
in
js
mov
aaa
mov
ja
jg
mov
pop
sahf
xorb
fsubr
iret
fadds
adc
out
loope
sbb
arpl
insl
pop
in
cltd
lds
or
addr16
lret
fxch
fwait
jmp
xchg
mov
ret
add
es
in
and
fs
sub
out
insl
or
dec
enter
xor
pop
loop
mov
xor
leave
test
enter
xchg
fldl
sti
cmp
and
dec
das
xchg
push
mov
adc
aam
adc
pop
out
pop
cmpb
js
dec
dec
std
fisttpl
repz
daa
jmp
xchg
mov
mov
jae
lret
test
das
push
dec
out
out
dec
and
dec
stos
pop
mov
pop
sub
lods
sub
sbb
add
subl
orl
test
xchg
incl
and
adc
pop
out
fs
and
fstps
scas
addb
lret
out
add
cmp
ret
add
repnz
sti
aam
test
adc
jmp
loop
mov
mov
mov
mov
les
push
inc
andl
pop
jle
aaa
push
lock
inc
fwait
enter
sbb
dec
dec
mov
cmp
arpl
data16
add
pop
sub
add
mov
cltd
scas
popf
push
leave
clc
jge
ljmp
test
aam
sahf
and
mov
pop
push
xor
cltd
jg
and
cmc
sbb
into
push
mov
lcall
sbb
pop
jge
lea
xchg
push
mov
sub
mov
xchg
or
lods
in
fbstp
cwtl
dec
adc
leave
sub
mov
enter
cmc
sub
mov
loopne
push
add
daa
lock
iret
mov
mov
add
push
or
adc
cli
movsb
rcrb
push
div
pusha
ret
jno
pop
fldl
shrl
inc
mov
push
dec
mov
inc
mov
xor
adc
sub
syscall
mov
pop
popa
push
push
flds
jecxz
pop
xchg
mov
ret
aaa
out
lds
push
por
xor
add
pop
call
insb
pop
mov
lds
ja
jo
jl
and
add
push
sub
push
jno
mov
rorb
sub
push
mov
fmulp
push
call
xor
fnstenv
sub
pushl
cld
mov
in
sub
sahf
arpl
inc
shl
inc
addb
pop
xchg
js
cld
cmp
mov
push
gs
xor
or
fdivr
inc
sbb
enter
imul
push
testb
iret
mov
jnp
and
lock
ret
sub
lods
mov
aam
stos
idivl
dec
nop
andl
push
push
inc
or
clc
repnz
jne
ds
mov
in
mov
jle
in
push
mov
and
outsb
mov
mov
pop
mov
xor
lock
or
mov
cwtl
mov
int3
test
mov
inc
mov
test
jl
pop
and
add
xchg
fiaddl
enter
out
pop
inc
js
xchg
mov
dec
sbb
pop
push
mov
fisubrs
stos
mull
mov
pop
jo
mov
stos
das
jg
inc
negl
mov
nop
pop
adc
jnp
aad
out
pop
jns
clc
in
bound
cmpsl
or
lock
xlat
les
les
sub
test
sub
inc
cmc
dec
in
int
nop
imull
loope
adc
mov
sahf
cld
loop
adc
pusha
jno
cwtl
insl
sbb
stc
jp
or
mov
imul
inc
xchg
add
dec
std
jl
jns
cmp
loopne
pop
lods
hlt
jae
sbb
repz
mov
pop
xor
and
mov
scas
in
push
and
je
test
in
push
inc
pop
jmp
add
iret
int
inc
xchg
dec
dec
jecxz
pop
popf
or
rorb
cmc
adc
lock
add
mov
ss
or
sub
in
cmp
outsb
loopne
pop
adc
mov
mov
xchg
mov
in
inc
movsb
xor
arpl
outsl
jns
leave
and
jp
adc
std
xchg
cs
pop
outsl
pop
in
out
aad
xor
inc
and
stos
adc
in
lds
out
add
add
fabs
fadds
loope
inc
ljmp
filds
es
push
es
test
pop
and
pop
jecxz
inc
data16
cli
mov
gs
test
fstpt
inc
div
ret
pop
mov
mov
and
int
fs
xor
or
inc
pusha
stos
jb
insb
icebp
or
loope
fwait
mov
out
int3
cmc
mov
popf
out
mov
jae
xor
fistps
lods
cld
mov
out
sahf
sub
lret
xchg
ret
mov
aam
sti
call
test
sub
cmp
into
std
lock
lea
adc
and
xchg
mov
ret
fcmovnu
push
dec
push
movsb
pop
dec
fwait
icebp
add
dec
adc
mov
jge
int
sub
add
out
and
iret
cmp
les
jp
inc
inc
mov
dec
das
insl
fisttpll
mov
testl
sbb
jmp
jecxz
movsb
pop
loop
push
xchg
je,pn
adc
sbb
lahf
push
repnz
sahf
and
and
pop
call
fildll
sub
mov
or
sbb
jge
fwait
mov
subl
xchg
jnp
shll
and
mov
fnstenv
fldpi
pop
jecxz
out
push
rcll
mov
clc
shlb
xchg
adc
aam
dec
rorb
xor
out
jnp
ficomps
call
into
fistps
mov
and
jle
hlt
push
push
sbb
pop
or
mov
out
lock
jb
dec
lret
adc
or
dec
aas
adc
push
add
xchg
xchg
ret
push
sub
mov
push
cli
xchg
repz
pop
fcoms
jp
or
xchg
mov
add
fldenv
ljmp
mov
outsl
jns
loope
subl
push
ja
or
int3
xchg
push
jg
push
mov
push
cmp
and
data16
fisubrl
dec
cmpsb
stos
dec
lcall
push
ret
lahf
lea
push
dec
fisttps
jbe
xor
mov
pop
mov
xor
stos
jno
pop
xchg
pop
jno
mov
jbe
dec
lcall
lods
pop
push
popf
clc
inc
sub
mov
mov
xchg
mov
mov
mov
xchg
movsb
jo
mov
cmp
rolb
testl
cmpsl
mov
xchg
jo
cwtl
cmp
insl
mov
aad
scas
jg
cwtl
ficompl
cmovg
xchg
mov
pop
icebp
cwtl
aad
fwait
mov
inc
mov
imul
mov
lcall
aaa
cmpsb
fidivrl
xor
fistpl
into
pusha
movsl
aas
add
xchg
movsl
fwait
add
sti
lods
lret
mov
jp
xor
cmovl
sbb
call
push
cwtl
lret
push
pop
xchg
iret
sub
loopne
adc
push
jnp
sbb
mov
clc
inc
and
mov
or
xchg
dec
jmp
cli
int3
pusha
ja
sbb
rol
mov
lock
mov
bound
pop
add
push
fdivp
mov
div
lret
or
iret
or
xor
lret
and
mov
push
xchg
leave
iret
cs
rol
sub
push
adc
mov
dec
pop
imul
repnz
inc
add
into
icebp
push
add
add
ds
xchg
fwait
stos
push
jb
movsb
daa
sbb
pop
add
daa
add
in
cmc
mov
sbb
jg
xor
ror
dec
pop
dec
add
sub
popf
mov
loope
and
add
pop
pop
cwtl
mov
inc
pushf
stos
movsl
in
sti
popf
mov
cltd
fimull
xor
mov
mov
out
nop
scas
or
sub
cmp
push
cwtl
push
call
fs
xchg
jmp
sub
mov
ret
sbb
xor
jbe
adc
mov
out
push
jo
imull
dec
pop
imul
xchg
jmp
or
dec
clc
dec
std
ret
in
stc
lahf
jb
out
ret
inc
mov
je
pushf
test
xchg
es
mov
out
int
icebp
jecxz
nop
pop
push
pop
lock
mov
add
ja
jae
inc
mov
aaa
jge
xchg
ja
xchg
sub
dec
pusha
or
lods
call
fisttps
int
imul
nop
xor
push
mov
rcr
fiaddl
xchg
pop
or
inc
jbe
or
mov
imul
je
ret
pop
outsb
sub
xchg
lods
add
out
jecxz
inc
icebp
cwtl
enter
dec
jge
adc
es
xchg
dec
mov
insl
xchg
popf
testb
sbb
inc
lods
or
stos
dec
push
mov
ja
scas
popa
aaa
push
nop
mov
cwtl
sub
jge
push
mov
sub
bound
scas
jae
popa
in
or
aas
mov
push
pop
cmpl
push
popf
popa
dec
and
push
fists
sbb
rcrb
je
sbb
cmc
lret
int3
lahf
and
sbb
shrb
sti
and
pop
out
pop
sahf
ret
aas
andnps
pop
pusha
mov
xchg
insl
push
xchg
dec
ret
pushf
jo
int3
rcrb
icebp
jl
cltd
adc
sub
or
adcl
pop
dec
fisubl
dec
loop
xchg
test
add
leave
sti
xchg
dec
in
mov
hlt
mov
cld
sub
cmpsl
mov
sahf
mov
cmp
nop
cmp
xchg
lock
sbb
stos
sub
out
shl
iret
movsb
sub
shll
pop
dec
in
mov
cmpsb
loope
push
push
xlat
pop
adc
cwtl
inc
jp
in
jge
jne
daa
mov
xchg
in
mov
es
push
sar
inc
fwait
out
imul
jge
inc
data16
sub
outsb
test
fcmovnu
jmp
xchg
pop
and
lret
and
fistps
into
in
dec
xchg
or
sub
rcl
fiadds
mov
inc
pushf
cmp
sub
xor
test
or
stos
mov
lock
sbbb
mov
sbb
adc
int3
push
hlt
ja
mov
sti
repnz
clc
mov
fcomps
nop
inc
pop
or
jle
popa
rcl
rcll
fxtract
cmp
mov
push
xchg
imul
lcall
sub
mov
sub
sbb
pop
data16
push
and
pop
fdivs
pop
mov
jns
test
push
les
jo
pinsrw
je
pop
addr16
sbb
pop
sub
out
xchg
outsb
int
iret
cmpsl
add
or
sbb
adc
lahf
push
xchg
mov
nop
jne
sub
movsb
adc
jbe
fcmove
xor
push
clc
jecxz
mov
mov
stos
fwait
mov
sbb
push
stc
jb
add
mov
cmpsl
mov
outsb
xchg
outsl
aaa
push
std
fs
sub
mov
aam
dec
pop
nop
jns
mov
and
bound
hlt
mov
xchg
or
subb
sbb
add
in
sti
fldenv
stc
test
jg
pop
inc
test
shlb
aam
ret
pusha
dec
aad
adc
inc
jbe
sbb
setne
sarl
jbe
ja
mov
mov
xor
incl
outsb
pop
clc
rcrl
and
hlt
cmp
sti
and
loope
sbb
shrl
or
mov
popf
fildl
fcompl
pop
xorl
repnz
or
push
push
je
nop
jno
fistl
mov
cmp
xchg
dec
pusha
popf
add
fmulp
push
mov
cs
lret
mov
or
aam
lret
pop
push
sub
sbb
mov
sarb
sbb
ror
xchg
jnp
das
movsl
shlb
add
cmpsb
jmp
mov
outsb
cmp
inc
cmpb
popf
es
add
aas
test
pop
and
insb
jns
flds
pop
aaa
sbb
leave
xor
jg
pop
push
xor
add
push
xchg
add
ret
jns
adc
adc
into
xor
loope
dec
jns
fadds
out
mov
sub
push
ja
pop
pop
fsubr
or
or
mov
mov
in
cmc
and
mov
push
ss
pop
ljmp
rcll
pop
mov
jge
pop
xchg
aam
outsl
and
test
push
push
cli
lret
cmp
test
int3
push
jbe
xchg
cmp
fincstp
in
pushf
mull
mul
sub
inc
subl
mov
mov
adc
dec
adc
lds
arpl
fwait
gs
sti
add
mov
rolb
mov
inc
cs
jg
mov
pop
mov
sub
std
pop
push
clc
jne
lea
cmp
mov
sub
push
shlb
repz
lea
pop
mov
out
in
push
adcl
das
dec
jg
mov
jno
negl
daa
movsb
les
rcl
jg
jns
adc
std
pushl
lahf
xchg
fwait
mov
jl
add
out
lahf
sbbl
aad
sbb
xchg
sub
aas
jbe
and
jnp
insb
mov
es
push
mov
lcall
cmp
sub
test
popa
mov
stos
mov
lock
cmpsl
scas
into
add
inc
pop
xor
mov
push
jecxz
les
sbb
sbb
or
repz
dec
fs
movsb
mov
bound
xchg
mov
imulb
push
loop
or
jle
xlat
inc
fcoms
std
in
mov
adc
in
jns
les
xchg
push
inc
or
xchg
ljmp
mov
add
push
fmuls
js
inc
fimull
call
ror
lock
push
pop
lock
pushf
stos
or
imul
sbbl
out
insl
dec
loop
incb
sub
test
xor
jp
iret
aas
or
inc
push
into
mov
insl
push
ja
in
xor
jbe
inc
pop
lcall
fidivs
mov
lods
fmull
js
js
test
or
or
cmpsl
or
and
pop
inc
and
mov
mov
repnz
ss
pop
sbbl
int3
cmp
fcom
xchg
mov
stos
dec
push
arpl
cli
mov
adc
enter
or
pop
fcomip
xor
cmpsb
xchg
lahf
and
xchg
lods
dec
out
jecxz
movsl
fwait
out
sub
andb
mov
movsl
sub
aam
lcall
xchg
mov
ficoms
in
xor
pop
push
in
out
mov
sti
daa
inc
add
arpl
mov
jle
pop
mov
xor
imul
nop
cltd
popa
jge
cltd
adc
roll
add
scas
or
mov
ret
mov
in
sub
in
add
cmpsl
and
shrb
shll
sti
xchg
out
lds
push
subl
imul
aam
sbb
fiadds
aad
mov
or
dec
ret
leave
icebp
int
or
xchg
jl
sahf
sub
mov
mov
pop
and
and
mov
loop
popa
mov
xchg
xor
dec
cmp
lds
insl
jge
add
mov
and
hlt
data16
sbb
fwait
inc
pop
ljmp
add
jp
inc
mov
lods
pop
push
push
adc
andb
jo
inc
and
pop
in
ljmp
loope
ljmp
rclb
mov
pusha
mov
popf
jo
mov
int3
mov
out
dec
add
loop
sbb
adc
pushf
rcrb
ds
jmp
es
fisubrs
lods
comiss
mov
lcall
sbb
cmpsb
out
insb
sub
adc
imul
and
push
lret
mov
adc
insb
jl
xchg
or
std
add
inc
jo
jle
imul
cmp
xchg
and
lods
loopne
jle
fldcw
stos
lods
icebp
incb
loopne
lret
mov
mov
push
fsubrs
push
mov
insl
ret
lods
mov
cmp
fdivr
or
add
ja
jo
sub
fmull
insb
add
xchg
scas
sbb
jmp
jle
push
inc
mov
xlat
mov
mov
loope
sub
add
mov
push
xor
jp
mov
std
sarb
push
lcall
notrack
add
inc
push
add
push
into
cld
sbb
xchg
enter
pop
stc
pop
and
movsl
dec
ljmp
mov
mov
int3
mov
inc
push
xchg
jnp
gs
fwait
cmp
cmp
frstor
jl
lea
leave
in
xor
cmc
jg
pop
sub
dec
pop
pop
aaa
dec
dec
movsb
cli
loope
inc
pop
stc
push
xor
pop
cmc
popf
mov
add
pop
sahf
push
mov
push
int
sub
and
idivl
cltd
scas
mull
gs
pusha
sbb
fdivrp
loopne
push
into
jno
mov
sub
aaa
jne
add
stc
push
push
push
jl
inc
jl
jne
scas
mov
rclb
in
or
sahf
push
lcall
dec
dec
push
fsts
sub
subb
dec
jnp
jbe
not
xlat
pop
mov
pop
push
fnsave
in
jg
push
out
and
push
dec
addr16
inc
pop
inc
rolb
pop
std
lahf
mov
jle
jb
inc
mov
mov
ja
jnp
mov
into
ds
or
or
and
into
jle
sub
or
and
sub
sarb
mov
aas
loop
lock
sarl
mov
hlt
push
insl
sbb
out
jecxz
mov
push
mov
xor
cmp
iret
fldl
xor
test
and
movsl
add
cmpsb
call
pop
icebp
sbb
sar
loop
sbb
out
jns
movsb
addl
movsl
sarb
mov
and
push
fs
out
mov
pop
out
fbld
repnz
repnz
mov
sub
sub
mov
in
sub
divb
scas
out
mov
cwtl
or
lock
or
sbb
stos
pop
inc
lahf
dec
pop
jb
add
cmp
test
and
cli
dec
pop
add
xor
mov
adc
mov
out
out
mov
sub
xor
les
xor
popa
lret
movsl
dec
cwtl
scas
fs
imul
xchg
sub
ret
jne
adc
mov
lods
xchg
mov
pop
addr16
mov
or
ret
aaa
cmp
xorb
add
movsl
xchg
dec
mov
mov
fnstcw
add
dec
popf
and
out
lods
or
repnz
pop
out
rol
pop
inc
push
jno
test
xchg
cmp
aaa
nop
and
test
dec
sbb
sbb
loopne
push
mov
cmpsl
xchg
test
lods
xchg
test
pop
cli
clc
mov
cli
dec
add
xchg
and
int
adc
fcompl
test
arpl
rorb
push
hlt
sti
scas
popf
pop
mov
or
adc
aas
sub
xchg
xchg
loopne
stos
imul
push
test
cs
in
sti
xchg
mov
bound
or
dec
xchg
sub
mov
rcrb
jne
fsts
nop
mov
hlt
sub
dec
int
xchg
pushf
xor
mov
into
mov
add
mov
loopne
pop
shl
cmp
ret
or
push
push
insl
xor
lods
lods
decb
mov
cli
in
mov
sub
push
jne
xchg
jmp
and
sbb
add
or
repz
jbe
cmp
jecxz
lret
cld
xchg
sbb
dec
loop
push
mov
loopne
stos
rol
sub
ret
mov
mov
jmp
xor
mov
enter
mov
shlb
ljmp
jl
push
jae
ret
std
dec
sahf
jge
sahf
mov
int
jp
jecxz
ret
hlt
adc
std
mov
hlt
push
jg
add
add
adc
pushf
mov
jno
lret
mulb
jg
pop
and
adcl
iret
cmpsb
aad
sti
iret
mov
xchg
or
mov
enter
loop
call
out
or
jne
negb
push
insb
aad
popa
xor
xor
jns
mov
iret
lret
les
addb
ljmp
or
mov
pop
jp
cwtl
notl
testl
jmp
das
outsl
xchg
inc
scas
add
inc
pop
inc
push
mov
test
loopne
inc
popl
mov
adc
pop
rorl
rcrb
xchg
and
ret
pop
mov
sub
pop
rorl
cmp
sub
mov
pop
add
sub
cmp
nop
add
lods
and
or
sbb
jae
imul
cmpsb
sub
arpl
mov
mov
adc
movsl
push
insb
out
les
adc
test
sbb
push
adc
loop
jb
shlb
lock
inc
mov
jnp
pushf
imul
inc
xchg
fwait
or
mov
es
loopne
in
clc
arpl
aas
lahf
jb
add
lods
jl
loop
cmp
idiv
xchg
ljmp
in
int
cli
stos
or
pop
popf
sub
cmp
push
cmp
mov
pop
jge
and
clc
and
mov
cmp
enter
push
rcr
xchg
ficoms
rcrl
mov
call
or
dec
or
repz
cmc
fstpt
push
adc
fwait
sbbl
clc
push
test
cwtl
sbb
mov
pop
cmp
pop
mov
jb
nop
ficoms
clc
sub
adc
leave
adc
andl
xor
mov
bound
add
setns
sahf
push
bound
pop
jg
lock
clc
rolb
sbb
fwait
push
jmp
push
gs
xor
aas
ljmp
mov
popf
push
test
mov
shll
hlt
lahf
mov
loop
xchg
xor
pop
cmp
outsl
mov
into
jbe
mov
sub
cmp
xchg
negl
mov
push
mov
jno
mov
inc
cld
imull
xchg
mov
lret
aaa
adc
cwtl
in
jmp
push
add
sti
aaa
add
dec
lea
xchg
js
stos
add
sbb
icebp
or
add
push
cmc
ss
mov
cmp
mov
adc
gs
lods
subl
aam
lock
pop
out
js
or
hlt
aas
nop
enter
pop
scas
mov
pusha
lods
xchg
arpl
out
mov
and
xor
ret
addl
mov
mov
in
int3
les
jbe
mov
arpl
mov
out
rorl
ror
fnsave
or
sarb
mov
pop
adc
lfs
xor
cs
ja
dec
cmp
push
mov
subb
stc
aas
mov
pop
enter
mov
out
pop
and
inc
xchg
fnstsw
aas
jp
push
push
xchg
mov
and
jle
sub
sub
adc
dec
lahf
dec
fs
add
icebp
inc
fsubr
push
or
imul
cltd
xchg
fnstenv
xchg
mov
mov
cwtl
test
jae
outsl
enter
jno
xchg
xchg
fwait
dec
fisttpll
or
push
xchg
push
jl,pt
mov
lcall
inc
call
test
fists
jbe
add
dec
loope
jbe
movsb
into
mov
insl
cmp
xchg
mov
out
mov
sti
and
lds
outsb
inc
aaa
cltd
push
xchg
push
jnp
mov
adc
out
mov
adc
jle
shlb
and
mov
mov
xchg
jecxz
scas
mov
arpl
xor
in
cmc
clc
dec
dec
mov
xor
imul
daa
scas
aaa
lods
notb
sbb
and
mov
dec
add
in
or
push
mov
pop
cmc
mov
outsl
int3
mov
jg
sbb
jb
das
ret
dec
in
lods
rcll
je
jle
fiadds
lahf
or
fisubs
call
aam
jmp
mov
add
xchg
lahf
pop
in
cwtl
out
loope
pop
mov
or
shrl
mov
jl
dec
rcl
sub
mov
and
mov
scas
cld
cmp
sar
stc
push
xchg
cmpsb
hlt
repz
aam
aas
fnstcw
in
movsl
loopne
ret
ljmp
and
push
out
xchg
xchg
stos
das
lret
sahf
outsl
or
sbb
inc
icebp
sti
lds
mov
out
jp
int3
jmp
push
scas
jg
sti
mov
cmp
mov
mov
shrb
and
je
daa
dec
jmp
xchg
xchg
lock
adc
xchg
cmp
jg
stos
mov
pop
dec
mov
inc
sbb
ret
fcoml
lret
jle
rcl
pusha
aam
rcrb
xlat
roll
xchg
jl
insb
lcall
iret
mov
sbb
movsl
cmp
dec
sub
outsl
test
push
addr16
outsl
fs
jge
dec
ret
dec
jnp
lea
daa
rcl
pop
or
cmp
mov
or
cmpsb
pop
inc
in
mov
in
lds
insl
mov
pop
push
lret
jno
mov
sbb
xor
push
loopne
push
test
jo
xchg
fmul
fistpll
adc
jecxz
xchg
out
cmp
sarl
lahf
bound
mov
sbb
test
jecxz
lret
out
cmpsl
js
imul
mov
mov
and
sbb
ret
push
cmp
insl
out
adc
and
sub
push
xchg
mov
scas
dec
inc
leave
lds
cmp
xchg
and
dec
pusha
lcall
fidivrl
sub
scas
mov
dec
jno
in
mov
pop
into
shlb
sahf
sub
mov
xchg
mov
sub
movsb
loope
cwtl
xor
mov
mov
je
fwait
mov
ss
popl
mov
xchg
cs
mov
jmp
fucomp
jae
outsl
scas
pop
push
int3
and
fwait
mov
sbb
xlat
pop
cmpsl
cmpsl
fcomp
lods
divl
pop
xchg
pushf
mov
shrb
inc
inc
cli
movsb
ret
lcall
scas
insb
jge
push
cli
rorl
sub
jo
rcl
jae
add
or
rcll
ret
dec
gs
and
ds
mov
pop
ds
jle
mov
push
psllw
mov
je
push
rorl
push
jns
mov
loope
xor
mov
adc
loope
test
adc
mov
pop
fisubrl
or
and
adc
pop
jecxz
mov
dec
or
xor
xchg
xlat
mov
das
adc
arpl
cmpsb
sahf
and
sbb
mov
insb
in
add
add
mov
sub
addr16
jge
sub
pop
add
insb
mov
dec
pop
add
xchg
push
scas
lds
adc
mov
faddl
mov
stos
das
pop
insb
add
fcmove
icebp
adc
data16
popa
std
mov
ja
mov
fdivs
xchg
add
and
mov
sbb
outsb
inc
jl
fnstsw
add
mov
ret
pop
testb
int3
andb
or
and
scas
dec
jp
and
mov
aaa
sti
inc
xchg
add
iret
mov
adc
sbb
pop
mov
mov
and
or
inc
sbb
mov
sub
rcrb
insl
cs
push
mov
mov
mov
sti
xorb
fmull
fmul
mov
push
iret
test
mov
ss
rol
cs
adc
daa
xchg
scas
data16
cltd
insb
cmpsb
test
mov
sbb
and
ja
aaa
pop
dec
push
out
in
mov
in
pusha
sub
in
mov
ret
icebp
outsb
gs
in
mov
negl
hlt
outsb
or
and
inc
pop
push
js
cmp
xchg
cwtl
xchg
aad
mov
xchg
jg
cmp
add
fsubl
faddl
sar
mov
sub
pop
out
adc
pop
mov
in
sti
das
repz
jo
inc
jecxz
xchg
jmp
pop
xchg
push
dec
lds
adc
jge
add
negl
sbb
daa
mov
sbb
push
inc
push
push
xlat
imul
sub
cmpsb
xchg
imul
leave
inc
lret
mov
test
cmp
jnp
sbb
lds
imul
insb
sbbb
xor
cld
add
in
mov
pop
out
loop
addr16
and
mov
pop
enter
add
and
sbb
mov
adc
bound
dec
sahf
sbb
aam
out
imul
cli
inc
fsts
push
pop
in
dec
cli
and
pop
sbb
push
aas
inc
xchg
lret
ss
add
mov
addr16
in
xor
mov
sub
fisttps
cmc
sub
sahf
in
test
mov
push
mov
pusha
in
lcall
mov
mov
iret
test
imul
les
divb
cmp
xchg
sbb
push
xchg
fwait
adc
mov
rcr
adc
cmpsb
rcrb
add
add
sub
aas
jmp
enter
cmpsl
aam
lret
dec
inc
mov
repnz
sub
imul
es
call
cs
in
inc
and
negb
cmpsb
outsb
push
sahf
and
jno
repz
popa
nop
add
ds
mov
fildl
roll
sbb
jp
mov
dec
mov
sbb
ja
mov
cmp
fistl
jl
nop
mov
sti
cmpsl
jns
mul
push
subl
or
cmpsb
bound
inc
lock
add
push
cmp
fsubp
ror
in
mov
sbb
lret
mov
push
cmp
mov
mov
push
adc
fsubrs
setne
loope
dec
daa
hlt
pop
push
add
inc
pusha
ficompl
mov
mov
pop
mov
sbb
xor
or
jo
enter
je
clc
stos
jno
cmp
xor
test
std
ret
mov
ja
lret
insl
fistl
insb
mov
sbb
loopne
jnp
adc
int
aad
inc
mov
xchg
mov
mov
aad
jns
mov
leave
sub
stos
or
jns
sub
test
mov
inc
out
dec
inc
sub
adc
mov
mov
xor
sbb
push
lds
xor
cs
xrelease
call
scas
addr16
push
cmp
pop
dec
cmp
mov
mov
fistl
stos
push
add
stos
into
push
lods
movsl
mov
mov
cmpl
inc
sub
mov
cmp
repz
fcmovnbe
mov
dec
test
xor
adc
je
xchg
mov
test
imulb
jge
icebp
or
clc
dec
xchg
stos
adc
xchg
lods
add
out
sub
data16
jnp
mov
out
movsl
push
xor
leave
and
dec
scas
mov
mov
xor
stos
xor
inc
sar
imul
mov
mov
xor
daa
repnz
jns
mov
adc
and
push
pop
iret
sub
jbe
inc
lret
cmpsb
mov
movsl
sbb
jae
add
pop
push
inc
mov
push
int
xor
popfw
leave
add
sub
jle
jae
mov
fs
xchg
popa
scas
repz
sub
jecxz
pop
pop
loope
mov
mov
cmp
push
out
fisubrs
popa
mov
xor
aaa
int
sbb
xchg
ds
jg
dec
mov
movsl
cmp
call
out
add
scas
inc
mov
notb
inc
ja
hlt
adc
push
test
lret
cmpsl
iret
or
dec
movsb
hlt
in
cmp
pusha
imul
in
insb
das
in
inc
jl
mov
xor
movsb
mov
sbb
insb
jbe
sahf
sub
xor
popa
xchg
mov
pop
cmp
push
jmp
and
mov
inc
and
filds
adc
push
iret
addr16
clc
popf
mov
cs
sbb
shll
mov
test
dec
icebp
imul
sbb
popa
and
rcrl
xchg
and
int
std
icebp
enter
pop
push
xchg
icebp
pop
enter
jns
les
out
pop
dec
xor
ja
cmpsl
or
mov
enter
cmp
add
fisttpll
stc
andb
test
push
in
mov
push
or
add
outsl
pushf
int3
xchg
mov
rcrl
push
lret
cwtl
fwait
jo
xchg
insb
inc
or
cmp
aad
xor
xor
cli
imul
mov
pop
push
push
lock
popl
aam
adc
hlt
cs
push
jl
push
cmp
sub
sbb
xor
dec
out
popa
int
aam
jmp
arpl
jmp
movsb
pop
lahf
rclb
cwtl
cld
mov
scas
js
loope
adc
das
cmc
or
mov
fnstenv
pop
mov
or
outsl
mov
push
stc
and
pop
jge
adc
add
int3
neg
pop
jge
jo
dec
pop
mov
aam
cltd
sahf
enter
stos
jge
add
add
out
enter
stc
pop
fimuls
or
inc
jl
ds
aaa
push
sbb
dec
dec
hlt
dec
mov
ret
adc
roll
mov
les
aam
vprotd
push
inc
xor
jmp
stos
xchg
mov
pusha
jbe
xor
mov
out
cmc
xchg
and
orl
dec
adc
ljmp
cmp
and
icebp
and
xchg
mov
xchg
int
das
test
xor
and
fs
add
and
in
data16
mov
call
iret
ljmp
or
mov
das
cmp
scas
add
test
lret
mov
daa
push
push
jne
mov
pop
push
arpl
mov
mov
adc
sub
test
pop
jno
xchg
push
mov
and
fistpll
int3
dec
push
and
xchg
adc
or
jnp
adc
imul
ret
fcomp
cmp
cmpsb
lret
cmp
inc
adcb
fnstcw
pushf
sbb
aaa
lds
xlat
xlat
xor
xor
test
outsl
inc
mov
xlat
adc
mov
xlat
jp
xchg
fcoml
push
mov
or
jbe
inc
mov
into
stos
inc
cmp
jbe
pop
push
inc
pop
test
xor
xchg
sbb
aas
jno
mov
cmp
and
popa
inc
fs
jbe
insb
cmp
adc
leave
cmc
call
sbb
subb
jnp
aad
fsubrs
nop
mov
sub
jb
mov
jae
dec
or
pop
jno
ret
cs
pop
sub
push
mov
sahf
mov
inc
fbstp
sbb
je
add
push
jge
dec
mov
out
adc
lods
js
clc
outsl
fisubrl
sarb
and
rorl
push
dec
or
inc
cmp
sub
inc
scas
in
pop
push
push
addr16
pop
mov
out
or
xchg
enter
dec
jp
enter
and
in
retw
or
dec
push
push
fwait
cmpl
movhps
jmp
push
dec
add
lds
jg
rorb
repz
int3
cmpsl
and
sarl
dec
mov
adc
jecxz
add
push
fdivrl
inc
jnp
test
adc
lret
in
push
xor
add
dec
shrl
mov
scas
push
sbb
inc
movsl
nop
decl
repz
mov
jne
sbb
jo
cltd
pop
mov
jg
jg
lret
mov
cmpsb
repz
sub
scas
inc
ret
xchg
mov
cmc
int3
jno
adc
xchg
sub
cmpsb
push
es
repnz
les
adc
lret
mov
cld
add
inc
cltd
mov
test
lss
jmp
fisttps
es
inc
lahf
scas
into
pop
pop
and
inc
sub
test
dec
jb
adc
push
arpl
lock
faddl
adc
xchg
inc
mov
xor
scas
or
leave
imul
mov
push
sbb
cltd
sahf
jl
ss
int3
cmpsb
or
out
arpl
gs
push
movsl
push
jb
sbb
repnz
push
add
mov
scas
cmp
xchg
scas
sub
cli
mov
sub
fwait
test
je
pop
pop
fidivrs
into
sub
mov
jp
cwtl
adc
pop
test
or
stc
xchg
add
out
xchg
xchg
cld
fsubs
and
or
mov
inc
sub
jl
and
jbe
cmp
in
fucomi
push
into
dec
frstor
mov
div
adc
fcomp
mov
xor
int
in
shl
dec
push
mov
dec
sub
stos
sbb
cwtl
mov
ss
or
out
jg
cwtl
sbb
xor
xchg
addl
or
or
mov
inc
adc
inc
lds
fs
sub
insb
cs
lret
push
sahf
mov
test
or
int3
sti
jae
sub
insl
insl
data16
icebp
lods
movsl
jge
mov
imul
xor
shlb
mov
ds
shrl
imull
movsl
cwtl
popa
jmp
cs
push
sarl
lds
hlt
aas
ljmp
fcmove
add
lods
jg
es
aad
cmp
ss
nop
mov
fsubrl
cmc
mov
sub
pop
bound
and
sub
int3
inc
sub
stos
daa
lea
icebp
leave
xchg
pop
loop
xchg
mov
incl
or
stos
je
mov
push
dec
mov
out
int
repnz
out
test
out
mov
jmp
mov
push
pop
fnstenv
cmpsb
idiv
pop
xor
sbb
dec
xor
adc
jo
in
testl
inc
cmpsl
mov
cmp
cwtl
std
or
inc
push
or
cmpb
or
dec
sbb
xor
jae
pop
ret
inc
cmp
mov
inc
rorb
add
adc
addr16
xchg
xchg
dec
bound
test
sbb
dec
fidivrl
push
shl
mov
hlt
mov
pop
mov
and
or
jo
in
cmp
xchg
push
inc
xchg
loop
sbb
pop
sbb
lea
shrl
fldl
pusha
xchg
stos
cmpsb
outsl
cmp
movsl
ja
scas
mov
sar
mov
dec
inc
add
and
and
shrl
add
cld
mov
pop
test
or
sbb
inc
pop
xor
hlt
test
pop
fistl
cwtl
mov
seto
cld
test
lock
lcall
fiaddl
pop
dec
push
xchg
hlt
dec
out
fbld
lds
adc
pop
add
sbb
push
shrl
rorb
dec
lahf
lock
pop
jmp
mov
mov
pop
cmp
int3
xchg
dec
out
inc
mov
cmp
mov
push
mov
pop
or
jp
pop
and
aas
mov
cmp
mov
test
mov
test
das
push
cli
es
icebp
mov
loope
xor
fwait
sub
mov
adc
inc
pop
dec
repz
or
arpl
xor
mov
imul
xchg
pop
add
push
lock
and
lods
mov
and
adc
jp
inc
jg
mov
xchg
fisttpll
jge
xchg
arpl
inc
subb
mov
negl
cmc
in
icebp
rorb
mov
xor
into
xor
iret
sub
inc
sub
xchg
jp
xor
push
cmp
mov
jecxz
pop
cmp
jno
movsl
jg
pop
mov
das
cli
ret
std
or
and
stos
aaa
lods
mov
stos
push
movsl
pop
mov
jnp
mov
and
adc
and
mov
clc
mov
sbb
and
out
stos
lods
outsl
outsl
or
jl
repz
cmpsl
call
call
rolb
cltd
mov
ja
out
add
ljmp
mov
add
imull
mov
fistps
and
mov
inc
in
enter
xchg
arpl
inc
imul
imul
test
aas
fwait
cwtl
add
xchg
mov
test
jecxz
addr16
insb
push
aas
jo
xor
xchg
sub
dec
xchg
gs
out
std
push
mov
mov
les
lahf
lcall
dec
adcl
mov
out
inc
das
push
adc
andl
clc
sbb
outsb
xchg
ds
jmp
and
xchg
cmpsb
insl
sbb
test
pop
cmp
sahf
les
movsb
out
mov
sbb
sbb
fimull
sub
add
cmp
push
adc
jmp
mov
and
dec
push
std
lcall
sbb
mov
insb
ficoms
sarl
sub
bound
outsl
jmp
inc
adc
mov
test
out
lret
cmp
jae
cmp
rep
xor
jno
in
inc
inc
addl
lea
cmp
filds
sub
xchg
fwait
cs
and
pop
imul
mov
push
jp
mov
dec
xor
shrl
xor
test
inc
dec
jle
jmp
int3
js
rorb
mov
xor
xchg
xor
in
gs
and
bound
loopne
sbb
mov
inc
inc
test
jb
in
pop
push
lock
loop
xchg
daa
out
addr16
cmpsb
push
push
fldcw
pop
mov
add
and
xlat
adc
xchg
rcr
xchg
push
add
rcrb
cs
jle
insl
mov
sbb
jbe
stos
into
lret
sbb
mov
das
out
mov
pop
addr16
pop
shrl
rcrb
or
pushf
das
in
mov
pop
pop
cwtl
mov
imul
or
jo
std
push
add
test
sahf
and
loop
nop
pop
fldcw
cmp
in
xor
scas
push
cmpl
aam
inc
mov
lods
adc
jl
cltd
adc
fnstcw
adc
push
push
add
or
sbb
adc
les
dec
push
jl
cmpsb
inc
mov
pop
inc
ret
ficoml
daa
movsl
pop
stc
mov
in
pop
scas
sub
dec
dec
jl
outsl
popa
inc
out
out
aam
ret
imul
xor
jno
out
sahf
stos
jo
dec
xchg
ja
in
daa
mov
shrl
mov
mov
ja
aaa
addr16
testl
ss
fcoml
dec
fstpt
ficoml
xchg
pop
cld
rcl
push
outsl
out
repnz
adc
jne
dec
pop
data16
fld
in
and
in
jl
idivb
adc
xor
cmp
jge
push
and
add
jnp
push
and
xchg
jo
pusha
jg
push
sti
fimuls
adc
fwait
das
xchg
push
xchg
inc
and
jecxz
mov
cmpsl
clc
mov
stos
je
mov
xor
scas
popa
std
int3
popf
pop
push
add
cli
repz
sub
mov
rcrb
dec
data16
outsl
movsl
shll
movsl
pushf
faddl
add
into
pop
ret
inc
cmpsl
or
ret
push
mov
dec
or
insb
int
imul
pop
xchg
in
data16
adc
ds
inc
dec
lock
test
mov
ja
test
and
cmp
or
out
add
mov
lea
inc
imul
jmp
mov
sub
leave
inc
jnp
insl
jmp
fs
inc
ja
mov
mov
ss
icebp
aaa
loop
stos
ret
sbb
push
aad
lahf
inc
sbb
sub
aaa
cmp
aas
jp
and
mov
in
inc
mov
xor
sbb
cmpsl
mov
test
icebp
mov
push
imul
ficomps
int3
xor
inc
aas
shr
and
sbb
mov
fwait
int
jbe
push
fnstcw
or
cmp
sub
and
pop
and
jecxz
cmp
ljmp
add
sbb
insb
lret
cli
sbb
sbb
mov
shll
dec
mov
sbb
sbb
and
arpl
jno
popa
inc
icebp
js
fldl
test
inc
ret
adc
sti
and
jns
shlb
data16
xchg
sub
mov
mov
movsl
xlat
js
lahf
mov
sub
fstpt
mov
cmpsb
pop
je
push
sti
jg,pn
adc
pop
fs
xor
cmp
mov
xor
jg
in
lret
inc
dec
pop
loopne
mov
fldenv
mov
int
sub
and
push
negb
pusha
xchg
fucomp
js
pop
inc
adc
ret
call
cs
in
ljmp
cs
adc
add
ljmp
pop
cmpsl
loope
std
divl
sarl
adc
cwtl
dec
xor
jp
lcall
mov
xchg
sub
je
mov
dec
repz
pop
std
ja
mov
es
mov
push
pushf
mov
shrl
mulb
adc
add
insb
xor
int3
adc
aaa
js
inc
outsl
fcoms
scas
loop
adc
and
xor
xor
push
xchg
in
mov
sub
pop
xor
add
leave
leave
pop
enter
pop
cmp
flds
lret
sbbb
adc
das
mov
andb
jns
scas
and
and
and
inc
cmpsl
icebp
xor
les
ja
enter
faddl
ss
ljmp
inc
ffree
sbb
dec
push
into
and
add
mov
adc
fmul
lock
rcrl
mov
popa
mov
inc
inc
or
into
cmpsl
lds
xchg
dec
xchg
out
in
repnz
jmp
push
push
iret
scas
cmp
adc
mov
sub
and
jb
inc
xor
and
js
or
push
sub
ficompl
mov
insl
xor
out
dec
mov
add
es
push
xor
sbb
rolb
lea
pop
or
lret
xchg
inc
xor
mov
mov
dec
xchg
add
xorb
inc
xchg
fcoml
xchg
stos
sbb
or
jle
lds
xor
cli
ss
sbb
outsb
inc
lret
push
pop
pop
rorb
pop
dec
pushf
daa
andb
mov
out
mov
mov
loopne
mov
xchg
jge
xor
jmp
mov
or
xor
sbb
xchg
test
sub
inc
out
cmpsb
ss
mov
mov
mov
shl
xchg
push
or
iret
mov
insl
sub
int
fisttpll
xchg
xchg
mov
out
mov
mov
xchg
insb
lret
jecxz
ds
mov
fstpl
test
adc
jl
mov
adc
dec
inc
xchg
aaa
mov
fs
adc
inc
stos
sbb
mov
mov
bound
lea
xchg
jb
mov
jo
movl
cmpsl
lods
ret
fldcw
loop
dec
aaa
pop
cmp
inc
shll
xor
sub
push
test
sbb
stos
fwait
push
mov
mulb
test
mov
fdivs
imul
aaa
jg
enter
dec
mov
mov
cmp
jns
pavgb
adc
and
jne
sti
sub
fisttps
loopne
xchg
in
imul
and
lahf
jecxz
lock
xor
xlat
imull
sbb
leave
dec
inc
mov
cmp
mov
xchg
bound
data16
jle
dec
cmc
dec
loop
mov
add
scas
dec
or
sahf
mov
data16
les
or
iret
cwtl
push
dec
pop
fidivrs
lcall
fdivr
or
fdivr
rorl
hlt
repnz
call
pushf
or
lock
stos
cld
adc
cmp
popa
sbb
xor
pop
xor
sti
imul
xchg
adc
jo
xchg
sub
inc
popfw
idivb
cmpsl
pop
mov
dec
in
or
in
xchg
outsl
and
sbb
sub
sbb
aam
loope
bound
and
cmpb
jnp
enter
mov
mov
pushf
mov
mov
clc
add
mov
or
test
in
or
mov
in
sbb
test
ds
movsb
stc
aad
sbb
movsl
push
mov
rcrl
pop
test
inc
jle
mov
cmpsb
fucom
stos
push
or
in
nop
push
mov
mov
pause
or
xchg
fldenv
jne
ds
pop
pop
popf
mov
ds
mov
xor
xchg
pop
outsb
sbb
nop
es
iret
les
je
or
sub
adc
sub
mov
sbb
mov
test
add
or
sar
mov
stos
push
adc
mov
add
mov
mov
test
pop
scas
push
fisubrs
cld
ret
out
sbb
mov
xlat
fdivs
test
movsl
aam
mov
inc
mov
loop
mov
or
push
lea
xchg
clc
sub
jno
pop
jno
push
push
mov
jb
rorb
sub
or
add
pop
sbb
and
iret
test
mov
cmp
je
pop
pusha
pop
pusha
popf
fwait
dec
pop
push
movb
pop
sbb
pop
push
clc
arpl
stc
jae
or
sub
pusha
repnz
sub
rorl
jo
loop
gs
jno
fwait
jmp
or
adc
imul
cmp
inc
push
mov
cmp
iret
je
fistpl
popa
inc
xor
push
push
jns
in
loop
pop
sbb
negb
pop
repz
iret
push
xlat
mov
notl
dec
aaa
mov
aam
dec
sub
loope
in
dec
push
inc
pop
jae
cmp
scas
dec
cmpsl
mov
popfw
std
or
aad
add
popf
inc
sub
aaa
add
scas
xchg
rcrb
loopne
das
scas
repz
lea
hlt
or
cmp
aam
aas
jge
stos
dec
sub
notl
jmp
push
lods
cmpsb
sub
sub
inc
push
rcll
int
and
ljmp
fisubs
sub
push
push
cmp
jne
fadd
xor
sub
lods
cmp
std
leave
out
pop
js
aaa
push
dec
call
mov
jne
aam
cs
sub
imul
xor
cmp
jle
pop
ljmp
jno
aam
push
bound
jno
add
mov
cmp
push
aam
ror
cs
mov
jecxz
mov
jp
jmp
cmp
loop
fidivrl
nop
test
pop
xchg
in
addr16
jl
aas
nop
sub
mov
cwtl
int3
mov
pop
jmp
call
mov
mov
xlat
in
xchg
mov
mov
dec
push
and
loop
aaa
pop
lret
sub
or
sti
add
std
pmaddwd
out
cmp
sbbl
loope
fs
xchg
xchg
mov
aad
jo
arpl
fs
xor
sbb
adc
jl
and
test
lret
mov
jp
inc
pushl
aad
dec
inc
jbe
dec
incb
loopne
mov
mov
js
jl
cs
add
add
push
push
imul
loop
aaa
outsl
sub
mov
sub
push
pop
lret
xchg
mov
inc
shll
insl
xchg
mov
dec
lahf
push
pop
mov
push
and
xor
push
pop
rclb
cmpb
dec
mov
or
insb
inc
test
cmp
sub
mov
hlt
inc
push
sbbb
push
or
jmp
jbe
inc
sti
sub
mov
hlt
ljmp
pop
ficompl
iret
shll
inc
mov
mov
popa
xor
add
mov
cltd
test
call
sbb
bound
stc
mov
mov
inc
aam
adc
hlt
subl
subb
scas
xor
mov
std
or
test
xchg
add
and
sbb
mov
cmpsl
inc
sti
in
dec
out
psubsb
fstpl
xor
add
mov
push
push
adc
pusha
bound
enter
ljmp
jecxz
addr16
adc
popf
push
shlb
loope
addb
cmpsl
test
fdivr
pop
scas
scas
jmp
out
in
out
add
mov
add
stos
call
mov
mov
insb
lods
jle
adcb
push
jle
cmp
movsb
and
xor
sbb
test
in
dec
push
mov
cwtl
inc
test
dec
push
dec
pop
xor
cmp
push
scas
inc
adc
addb
jl
ds
jae
ja
popa
xchg
push
push
sti
imul
xor
fwait
add
popa
scas
xchg
fnstsw
add
mov
dec
sub
stc
or
add
pop
push
push
loop
rorb
adc
fldcw
cmp
dec
cmc
adc
and
add
mulb
pop
add
fs
dec
aam
pop
dec
add
jno
pop
xor
fmul
or
mov
mov
jae,pt
jle
arpl
loop
lret
cmpl
cmp
mov
mov
repz
mov
das
data16
xchg
js
int
out
ret
shrl
jp
sub
jae
lcall
test
enter
mov
and
dec
mov
out
lock
outsl
fnsave
push
popa
sbb
mul
pop
xor
xchg
mov
add
add
ljmp
push
imul
shlb
ret
outsl
dec
adc
xor
and
mov
pop
nop
jo
and
lcall
fwait
lahf
mov
and
sbb
adc
xchg
cmpl
arpl
sbb
lret
test
cmp
xchg
push
cmpsl
mov
fwait
lcall
in
psadbw
dec
mov
adc
or
adc
sarb
pop
lret
out
lret
out
mov
mov
cmpsl
add
inc
push
adc
out
fimull
mov
pusha
jmp
xchg
cmp
sarl
dec
inc
push
push
xor
js
les
sbb
mov
lods
mov
inc
sub
lods
jns
movsl
lods
mov
jb
mov
jecxz
les
xor
inc
mov
iret
mov
pop
rorl
lahf
xchg
add
cli
add
mov
stos
ret
pusha
mov
pop
ret
cmovns
jbe
xor
mov
call
fidivrs
lret
add
subb
fcoml
sub
adc
mov
mov
mov
lret
and
mov
mov
mov
shll
jp
movsl
inc
stc
fcmovne
imul
stos
jne
xchg
adc
adc
pop
adc
pusha
adc
add
sub
dec
lret
fldenv
lea
lahf
cli
test
jecxz
lods
add
adc
lock
mov
sub
mov
pop
xor
and
push
xchg
jno
add
mov
add
movb
xchg
lea
xchg
inc
test
mov
scas
cmp
lds
sub
pop
or
cmp
icebp
test
push
cmp
ret
imul
loope
daa
push
and
lods
popf
xlat
xor
pop
xchg
sahf
fwait
mov
loop
push
fcoms
into
fsubrs
or
in
nop
fisubs
leave
xchg
sub
and
push
mov
xchg
sbb
jb
imul
orb
scas
cmpsl
inc
push
loop
dec
in
in
iret
inc
repnz
lock
call
mov
mov
sub
cltd
pushf
and
sbb
psadbw
jp
test
mov
push
inc
or
jnp
jnp
icebp
pop
mov
push
es
loop
and
loop
fcmovnu
lret
dec
loope
dec
mov
loop
in
lahf
es
shlb
xchg
cmp
test
cltd
and
mov
ffreep
rcr
js
or
fistl
cs
mov
mov
jb
sbb
jecxz
pop
inc
xchg
call
inc
js
xchg
jb
xchg
in
push
xchg
jno
mov
fadd
call
pop
sbbb
jmp
cltd
mov
mov
xchg
enter
pop
out
adc
rorl
ret
ret
xchg
cmp
rol
scas
mov
cmp
in
fcompl
repnz
or
sub
inc
add
les
mov
cmc
shlb
in
cs
pop
mov
jge
push
das
int
and
fistpll
mov
inc
stc
add
shrb
aaa
sbb
add
mov
sbb
mov
pop
pop
inc
pop
icebp
lods
cmp
and
add
or
adc
test
pop
fisubs
std
pusha
loope
dec
in
pop
push
xor
inc
jbe
or
je
push
or
sub
loope
outsb
insb
out
lcall
rcr
pop
lcall
sahf
push
cmp
shll
cwtl
insb
imul
jb
aaa
mov
in
rorl
inc
add
cmp
subl
xor
inc
mov
jb
iret
stos
inc
jp
xorl
add
es
push
cli
mov
stos
mov
dec
jmp
ret
xchg
mov
or
sbb
loopne
clc
cmpsl
push
mov
dec
dec
xchg
cmpsb
lcall
inc
roll
adc
inc
out
cld
push
notb
dec
mov
in
mov
daa
push
lahf
add
inc
stos
push
ss
mov
out
mov
in
movsl
mov
fmull
ror
mov
pop
inc
enter
push
icebp
mov
sub
test
sbb
xor
lcall
ss
stos
cmp
fsubrl
movsl
daa
hlt
rclb
arpl
mov
sbb
jnp
movsl
or
cmc
inc
pop
mov
ljmp
mov
adc
jne
push
int3
in
mov
or
outsb
outsb
out
pop
mov
pusha
popa
addl
shl
mov
dec
inc
pop
mov
int3
mov
int3
insb
dec
insb
jo
in
pop
cmp
mov
sub
cmp
add
inc
jne
jmp
sub
divl
test
jo
insb
popa
mov
sbb
adc
in
ret
sarb
pop
stos
fnstsw
lcall
push
bound
je
pop
xlat
sub
repnz
dec
xor
int
movsl
xchg
push
int3
jbe
imul
sub
jbe
leave
xor
nop
or
cmp
cli
and
gs
jmp
xchg
add
mov
mov
inc
cmp
dec
jno
dec
sar
adc
sbb
push
cmp
out
cmp
in
jo
iret
roll
cmp
xor
mov
mov
arpl
xor
hlt
mov
mov
push
in
xchg
adc
ljmp
incl
cmp
sbb
adc
stc
jle
jbe
or
ljmp
ja
adc
mov
repz
sarl
divl
clc
das
nop
jge
jb
cmp
jecxz
test
insb
add
addr16
push
xchg
and
push
jae
das
xchg
lahf
sub
rep
xorb
mov
inc
bound
fadds
pop
xlat
inc
imul
call
cmp
mov
test
pop
xchg
mov
jl
jp
fmul
sbb
in
int
test
xor
testl
and
xchg
add
sub
or
in
fistpl
push
xor
stos
inc
xchg
jno
and
iret
stos
std
shll
clc
int3
dec
data16
push
in
add
into
std
jg
inc
sub
out
lahf
mov
rclb
lods
not
insb
xor
std
movsl
mov
ret
adc
push
stos
repnz
mov
fildl
std
gs
push
enter
dec
and
jle
lcall
push
sti
adc
pop
rcr
cmp
fsubl
movsl
dec
scas
inc
mov
push
movsb
out
dec
push
dec
sbb
mov
rcrl
idivl
push
arpl
aad
inc
ljmp
test
sub
cmp
adc
nop
mov
mov
aam
out
jnp
pop
pcmpeqb
jo
iret
lods
subb
fwait
jecxz
mov
nop
fstpt
ss
adc
mov
insl
push
scas
mov
mov
stc
sarl
cld
and
adc
pop
mov
es
inc
add
cmp
cld
xchg
idivl
or
push
xchg
adc
or
cld
xchg
je
xor
lods
xchg
fnstsw
pop
das
xor
pushfw
out
and
addr16
mov
push
fcomps
xchg
add
xor
pop
push
fsubr
xchg
pop
inc
xor
xchg
add
pop
dec
sub
pop
test
xor
inc
xacquire
bound
arpl
inc
fcomp
adc
sahf
jno
xor
fists
iret
int3
hlt
pop
inc
jl
inc
sub
xchg
push
in
fbstp
mov
jae
dec
nop
sub
shll
or
push
fsubl
sub
sbb
cmp
cvtdq2ps
testl
pusha
cmp
or
inc
call
sub
jnp
ljmp
dec
iret
popa
je
test
mov
pop
jl
lds
sahf
mov
push
jns
inc
rcrb
aaa
and
out
dec
push
repnz
jmp
mov
lret
rcll
into
nop
in
jns
test
aas
inc
sub
in
inc
pop
out
iret
btl
bnd
enter
nop
push
jae
xchg
fs
pop
and
int
jae
sbb
xchg
movsl
add
adc
mov
jp
inc
inc
and
out
sbb
aas
inc
pushf
lcall
repz
pushf
xlat
push
push
fs
push
push
into
adc
pop
sbb
ljmp
mov
or
std
ljmp
add
in
push
mov
xlat
cmp
mov
jge
ds
xor
cmp
pushw
dec
xorl
jl
xchg
xor
pop
push
dec
lahf
ret
mov
ds
fs
and
jns
lret
arpl
xor
aaa
das
dec
movsb
mov
mov
adc
orl
dec
add
adc
add
xlat
pusha
xchg
fimull
mov
gs
jo
xchg
lcall
lock
pop
xchg
and
lcall
repz
jmp
in
cmc
mov
test
mov
inc
lods
sarl
mov
fs
pop
push
out
cmp
fnstcw
jmp
or
ds
push
data16
fcomps
fucomip
lcall
xchg
sub
mov
hlt
cmc
dec
xchg
push
loop
adc
daa
imul
test
xchg
js
mov
jg
out
stos
adc
ljmp
jne
mov
insb
dec
mov
into
or
std
data16
iret
ficomps
pop
jb
xchg
imul
mov
call
mov
pop
sbb
lret
aas
adc
jne
aam
dec
adc
fsubp
mov
les
add
pop
mov
insl
das
xor
pop
xor
dec
cld
shlb
cmp
loop
fs
xchg
jl
mov
inc
cmpsl
jecxz
xor
jno
scas
popa
dec
pusha
ret
push
xorw
or
cmovno
sub
js
mov
loop
test
ficoml
or
push
dec
push
fadds
xor
or
or
dec
clc
inc
or
xor
enter
pusha
mov
out
push
repz
xchg
das
add
dec
xor
push
lods
push
outsl
inc
cmpl
sbb
and
mov
mov
clc
sbb
or
push
iret
xor
pop
xchg
mov
push
repnz
push
mov
outsb
lret
sub
adc
sub
pop
nop
ret
out
or
mov
fsincos
inc
das
mov
adc
xor
mov
add
push
pop
add
clc
cmp
dec
xchg
inc
jno
cli
fcmovb
push
sbb
sarl
fisubrl
push
cmp
lock
out
outsb
loopne
add
out
stc
insl
jno
cmpsb
pop
xor
in
gs
push
mov
xchg
rcl
inc
cmp
mov
enter
jp
movsb
fwait
or
xor
push
adc
daa
xor
les
loope
push
pop
adc
xlat
ljmp
push
mov
cmc
fldenv
push
xchg
xlat
jb
cwtl
push
setg
inc
push
popa
inc
mov
lods
mov
mov
bound
xchg
add
cmp
adc
and
pop
movsb
jg
jecxz
in
cmpsb
movzbl
mov
es
imul
daa
sub
loop
scas
int
jl
pop
imul
xor
inc
add
es
jno
jno
or
cmp
sub
inc
adc
push
negb
mov
shrb
and
stos
andb
jo
jg
loopne
int3
repz
dec
cs
popf
mov
test
inc
sub
arpl
popf
mov
sub
enter
xchg
das
pop
and
das
lds
mov
lds
or
sahf
fcom
insb
fcomps
xor
mov
ljmp
aas
movsb
lcall
lock
and
mov
mov
xchg
sub
aad
inc
in
cs
push
fidivl
clc
test
adc
mov
xchg
imul
dec
dec
fiadds
daa
xchg
inc
dec
mov
mov
cs
subl
shlb
mov
ror
sub
iret
and
xchg
fs
jns
cmpsb
es
add
stos
add
out
divb
out
mov
data16
pop
xor
xchg
adc
ljmp
lods
dec
pop
pop
push
les
pop
test
push
and
xor
xor
pop
xchg
dec
enter
ljmp
or
adc
iret
int
testl
push
inc
je
push
adcb
and
shlb
adc
push
movsb
js
jnp
daa
ficomps
or
movl
ds
mov
outsb
sub
mov
push
or
pushl
or
pop
sbb
adc
stos
mov
int3
and
loopne
mov
sbb
inc
jl
popa
push
or
mov
dec
fldcw
fwait
ja
mov
or
cmpsb
mov
mov
loop
mov
jo
adc
lods
pop
jmp
adc
mov
pop
adc
lods
dec
mov
imul
mov
notb
mov
fidivs
pop
cmp
aaa
mov
dec
movsl
imul
jnp
les
jp
xor
xor
jns
int
int3
dec
fisubl
pop
jl
ss
fwait
ret
mov
shll
or
push
std
cmp
mov
adc
outsb
lret
pop
scas
imul
fistpll
jle
sarb
dec
and
and
repz
shrb
mov
adc
int3
sub
mov
inc
std
sub
mov
mov
jbe
cmp
mov
in
aad
aad
xchg
lods
or
int3
mov
or
adc
add
sahf
inc
in
outsb
jmp
jno
push
iret
sbb
fwait
dec
cmc
jmp
pop
decb
bound
pop
jo
cltd
pusha
and
mov
aaa
xor
jo
or
inc
mov
iret
or
loopne
imul
sbb
mov
xor
push
cs
push
ljmp
xor
testl
sbb
icebp
insl
jns
rol
stc
test
xchg
xchg
sarl
push
cmpsl
mov
popf
inc
inc
stos
dec
add
pop
xor
dec
or
or
cwtl
cmp
aaa
lods
add
jb
bound
sbb
jecxz
mov
cwtl
mov
aas
cmpsl
jnp
dec
push
jns
and
pop
and
jle
xor
bound
mov
ds
fisubrl
push
es
pop
cs
xor
mov
aaa
mov
mov
pop
insl
clc
int3
sti
cmp
inc
aad
daa
pop
cwtl
test
das
jae
jbe
cmp
mov
fdivrl
pop
scas
dec
cmp
sarb
xchg
test
xor
push
std
repnz
xchg
call
lcall
or
imul
test
xchg
daa
int
jp
or
arpl
xchg
mov
xorl
fldl
or
xor
lret
add
data16
add
xlat
fwait
std
sti
xor
push
and
rorl
pop
add
cltd
in
sbb
mov
adc
dec
rcr
outsl
mov
push
push
imul
cmp
and
jb
loop
mov
insl
or
push
xchg
push
popa
aam
stos
addr16
inc
xchg
ficoml
sub
dec
ffree
pop
subb
mov
enter
jbe
test
jns
imul
sub
shrl
flds
test
ja
sub
scas
movsb
add
data16
push
cli
jmp
and
lcall
push
pushf
lret
ljmp
push
xchg
mov
push
sbb
inc
push
pop
out
mov
arpl
cwtl
or
jecxz
sub
inc
cld
lods
cmp
jmp
inc
inc
xchg
push
mov
int3
aas
pop
loope
sub
xchg
cwtl
cmp
sahf
sti
xchg
pop
inc
inc
call
push
scas
and
fmull
ficomps
ret
in
rclb
scas
sbb
mov
out
push
lods
scas
cmp
stc
pop
loopne
fld
or
sub
mov
push
xor
out
mov
rcl
jne
imul
dec
adc
jl
and
in
push
inc
hlt
lock
jecxz
repz
xchg
pop
jbe
xchg
pop
push
mov
cltd
push
jl
push
jecxz
mov
xchg
xor
int3
fiaddl
shrb
cltd
aad
mov
mov
std
icebp
rcr
cmp
int
or
mov
push
fucomp
jmp
adc
int
cmp
in
das
xchg
icebp
cmp
sub
mov
mov
js
inc
dec
pop
inc
xor
mov
sbb
imul
push
out
add
hlt
js
mov
mov
ds
mov
das
adc
je
or
cmp
arpl
mov
adc
icebp
scas
in
fisttpll
std
loope
cmp
sub
test
hlt
movsl
pop
push
push
pop
cltd
add
dec
add
arpl
aas
lret
sbb
dec
sub
dec
stos
add
clc
mov
mov
xchg
jge
cmp
into
xor
cmp
shl
cmp
fiadds
cs
movsl
arpl
daa
mov
mov
mov
jmp
add
ds
push
pop
mov
dec
xchg
xor
xor
test
insl
adc
insl
in
mov
cmc
int
lret
and
jo
inc
inc
mov
add
out
into
jne
inc
out
jb
in
js
add
out
stos
jg
and
xor
mov
sub
loope
mov
mov
dec
pop
mov
lea
push
jmp
mov
mov
pop
fcoml
and
xorb
jge
stos
mov
nop
or
mov
test
pop
xchg
xchg
rcll
jp
xbegin
inc
ret
push
sub
outsl
out
push
and
pop
hlt
cmp
pop
repz
mov
call
cmpsb
xchg
enter
mov
daa
out
cmp
jge
je
cwtl
test
lock
xor
push
sub
adc
mov
fcoml
cltd
and
push
fisubs
dec
jb
mov
in
or
cmp
ret
cmp
jno
jnp
aad
sub
dec
lret
hlt
add
xchg
mov
inc
inc
mov
push
movd
int3
gs
imul
test
lods
adc
dec
cmpsl
pop
inc
cmc
xor
gs
lea
and
movsb
push
inc
xor
push
cmc
push
lret
mov
pushf
adc
fcoms
cld
mov
out
inc
out
mov
in
loop
add
and
add
sub
dec
outsb
fidivs
jo
mov
add
xchg
xor
ljmp
lds
sbb
mov
bound
mov
adc
push
mov
repnz
adc
cmp
inc
insl
or
call
xor
pop
jo
pop
cmp
bnd
sbb
js
in
dec
lahf
fxch
hlt
or
mov
orb
inc
aaa
int3
push
arpl
imul
add
xor
notb
xchg
pop
pop
mov
popf
adc
xor
pop
cmc
in
lret
jl
popa
imul
imul
or
testb
mov
and
pop
xor
pop
pop
popf
jbe
lcall
adc
int3
pop
test
xor
mov
push
inc
icebp
daa
and
punpckhbw
out
addr16
fsubrs
lcall
fcoml
in
jns
sbb
cmpsb
sbb
inc
or
out
sbb
inc
faddl
dec
stos
xchg
push
out
fildl
xchg
lret
sbb
mov
test
adcl
pop
es
test
mov
mov
and
fprem1
dec
mov
push
push
adc
shlb
add
push
fs
bound
cld
imul
adc
push
adc
push
cwtl
jp
ret
add
and
fs
push
sub
xchg
sti
in
xchg
int
xchg
rdmsr
and
cmp
jmp
xchg
test
sahf
jle
mul
pushf
mov
iret
aad
mov
mov
jo
mov
push
xor
push
test
fadd
lock
stos
jnp
adc
cmp
push
and
stos
movsl
mov
xchg
aad
inc
add
cmc
outsl
sarl
jge
loopne
sbb
push
fildl
in
and
orb
pop
mov
ss
dec
sahf
int3
iret
test
scas
lcall
sahf
lock
xor
clc
lds
ja
lret
dec
sbb
sbb
fsubrp
clc
jg
loope
fs
lret
inc
and
add
mov
in
push
repz
push
mov
and
mov
std
add
sub
mov
mov
add
repnz
aas
pop
or
and
cmp
xorl
and
in
enter
rcr
mov
cmp
jl
fmuls
dec
pop
mov
mov
inc
fwait
cmc
sahf
sub
jo
xchg
mov
inc
clc
dec
push
out
sub
add
and
mov
std
adcl
xchg
adc
orl
dec
xlat
mov
movsb
sbb
cs
and
js
sub
cwtl
fld
xchg
xchg
add
daa
xor
cwtl
inc
rorl
xchg
rorb
pop
jl
sbb
decb
jecxz
adc
dec
add
inc
jmp
pop
insb
xor
in
and
pop
xchg
sbb
add
push
js
pushf
popa
pop
mov
jp
adc
fsub
xchg
in
cmp
mov
stos
cmpsl
imul
xlat
std
stos
fwait
loopne
test
mov
imul
jl
loop
and
mov
cmpsl
cwtl
mov
mov
pushf
int3
push
and
daa
sub
mov
out
mov
xchg
mov
jecxz
cld
push
pop
leave
das
movsb
inc
lcall
in
stc
mov
out
add
test
inc
xchg
dec
mov
subl
testb
mov
loop
xchg
mov
rorl
sbb
ja
mov
sbb
cmp
xor
mov
push
lds
loope
dec
dec
mov
dec
adc
push
fidivrl
jb
dec
xchg
pop
mov
pop
lds
mov
in
mov
and
push
dec
ja
dec
mov
loope
shrb
gs
inc
cmp
mov
inc
lds
mov
fisttpl
add
lds
jp
outsb
or
push
test
pop
or
add
xor
pinsrw
stc
je
int3
loop
push
mov
dec
aam
pop
imul
xchg
arpl
es
aas
cli
cld
scas
jns
pop
add
push
jp
inc
das
mov
xchg
jno
xchg
mov
fcomps
adc
loop
push
ljmp
mov
pop
xchg
fcomi
aaa
pop
xor
addr16
mov
sbb
fs
jb
insb
leave
sub
mov
ret
adc
sbb
jmp
jbe
xchg
inc
mov
xchg
lahf
dec
paddsw
jle
push
sbb
and
adc
push
imul
nop
jl
rol
mov
add
popa
xorb
add
inc
ds
and
clc
adc
mov
sub
sbb
repz
lods
sarl
lock
fisttps
int
scas
movsb
addr16
lods
fldl
pop
adcl
gs
shlb
xor
leave
pop
xchg
les
lcall
out
xchg
push
add
pop
in
movsb
in
in
je
xor
ret
mov
dec
mov
iret
inc
push
sbb
mov
sbb
pop
and
cmpsb
cmc
add
mov
adc
mov
lods
push
fcompl
push
ss
out
jae
cmpsb
dec
stos
and
stc
sbb
and
push
fldl
dec
or
mov
xor
jbe
and
mov
inc
frstor
xchg
insb
in
fnstenv
or
jno
mov
push
pop
adc
test
sar
divb
lret
mov
movsl
and
mov
add
cld
xchg
xlat
jb
fwait
or
testb
fwait
cmpsl
push
jl
or
jnp
jno
ret
inc
push
inc
cmpsl
bnd
xchg
mov
push
xor
les
std
add
and
jg
pop
loopne
mov
das
xlat
int3
xorl
mov
aam
push
push
rorb
mov
jmp
push
stos
stos
inc
das
aas
pushf
fmuls
fstps
shrb
imul
cmpsb
decb
ja
push
repnz
lods
adc
shlb
cmp
mov
xlat
fldl
insb
mov
sbb
pop
sbb
add
add
lods
xchg
jp
rcl
fidivs
insb
bound
mov
and
xchg
ret
or
mov
out
jae
insb
jnp
or
xchg
sub
lds
add
pop
and
ficoms
or
mov
jecxz
lock
lret
xchg
sarl
daa
nop
flds
mov
add
mov
xchg
dec
or
lret
pop
scas
xchg
and
jecxz
mov
xchg
sbb
clc
xchg
ljmp
xchg
jecxz
dec
cld
mov
xchg
notb
cmpsb
jne
cmp
adc
test
ss
lea
cwtl
pop
jp
add
push
push
repz
in
fldl
push
stos
pop
cli
mov
jmp
out
xchg
rol
mov
add
addb
test
sbb
adc
inc
and
or
outsl
in
stos
jg
dec
jp
cwtl
les
push
pop
aas
pop
adc
push
pushf
fdivrs
xchg
imulb
sub
aad
popa
or
mov
mov
sahf
sbbb
pusha
jmp
pop
in
push
orb
inc
scas
cltd
or
clc
sbb
das
sbb
fisttpl
push
jno
mov
dec
sbb
pop
fistpll
jne
repz
push
sbb
add
shl
icebp
lds
mov
test
push
adc
lock
inc
je
jbe
and
mov
xchg
cmp
xlat
cmpsl
pop
jecxz
xor
push
aaa
add
in
sbb
in
and
inc
mov
test
outsb
sub
adc
inc
mov
movsb
sub
cwtl
xchg
inc
in
sub
inc
cmp
cmpsb
in
test
inc
sub
mov
cmp
jb
jbe
pop
dec
clc
xchg
adc
mov
sbb
xor
mov
or
cmp
xchg
fidivl
stos
fsubrp
dec
and
addr16
rclb
or
cltd
cli
mov
fcmovnu
lods
int
pop
std
fidivl
leave
cmp
inc
sti
fisttpll
sbb
xchg
mov
sub
add
mov
push
dec
adc
shr
mov
aas
and
push
jnp
inc
lods
jbe
sti
pop
and
push
cwtl
cmpsl
sub
push
mov
cli
adc
repnz
lret
cmpsb
std
cltd
sbb
cmp
in
mov
inc
push
sub
adc
sub
psrlw
mov
cmpsb
ret
jbe
stc
lds
into
sti
cmp
push
mov
mov
loope
pop
pop
popf
hlt
out
xchg
mov
pop
lock
es
mov
popa
ljmp
jbe
mov
mov
mov
js
sub
cmp
scas
push
pushf
mov
imul
and
pop
cmp
jne
fwait
xchg
push
imul
test
test
hlt
mov
xchg
stos
sarb
mov
add
jecxz
and
push
mov
push
dec
mov
lock
popa
jecxz
pop
xchg
ss
sub
pop
cltd
fistl
and
icebp
popa
mov
hlt
sar
sbb
shlb
ljmp
iret
leave
sub
outsb
dec
cmp
lahf
and
imul
ljmp
jle
cmp
scas
mov
lock
in
cmpsl
shll
push
xor
rol
jae
ss
mov
lock
push
mov
fcomp
jne
xchg
test
xor
inc
xor
inc
push
outsl
mov
lret
mov
mov
xchg
loopne
xchg
mov
xchg
add
jge
jae
add
adc
lods
xlat
inc
dec
xor
cmpsl
push
sub
bound
mov
pop
push
lds
ja
lds
xorl
pop
stos
popf
movsb
dec
in
int
mov
cmc
lock
mov
xchg
fimull
nop
lret
out
adc
xchg
gs
cmp
iret
cmp
xchg
add
cmp
insb
or
arpl
std
imul
enter
sbb
addl
into
lea
inc
cmpsb
aad
lahf
clc
push
scas
gs
jmp
enter
push
xchg
xchg
add
add
adc
rcll
cld
repz
sti
mov
adc
lea
stc
mov
dec
int
inc
jno
mov
out
fdivs
fsub
aas
outsb
lods
adc
scas
rcl
cltd
cs
lods
int
out
cmpsl
das
jne
loopne
lret
lods
call
inc
adc
adc
jcxz
pop
push
icebp
jo
pop
cmp
xchg
insl
out
cmpsb
sti
mov
jmp
pop
sbb
popf
jae
test
lret
ror
je
inc
xor
fmull
or
in
pop
call
bound
xchg
scas
sbb
jo
or
shl
pop
or
jle
outsb
ljmp
push
sub
in
sub
sub
xchg
inc
mov
arpl
icebp
mov
in
sub
insb
stos
outsb
pop
sbb
mov
sbb
jb
mov
insb
into
rol
fdivs
lock
notb
arpl
cltd
push
jg
sbb
jnp
xor
in
xchg
xor
dec
icebp
jae
and
insb
lret
testl
push
pop
pop
pop
sub
aas
mov
adc
push
cmp
jb
enter
mov
xor
xchg
lods
xchg
repnz
and
ss
cmpsb
inc
loopne
popa
data16
scas
outsb
mov
sbb
ja
push
pop
test
aad
push
repnz
nop
cmc
dec
stc
jo
mov
bound
jl
int
mov
in
leave
nop
addr16
lret
fbstp
pop
mov
sbb
insb
jp
lds
bound
pop
insb
movsb
cli
cwtl
scas
into
xchg
mov
aaa
in
mov
adc
and
xor
shlb
imull
movsb
xchg
iret
cwtl
adc
adc
xlat
add
sarl
fsubs
mov
jg
bnd
out
negl
jecxz
mov
cmp
rcr
je
push
aas
cmp
in
lods
push
mov
or
jno
js
in
int
aad
aad
mov
sbb
inc
cmp
mov
lcall
lcall
jl
in
mov
pushl
daa
out
aas
mov
pop
cmp
cli
arpl
adc
sbb
movb
and
iret
or
movl
mov
mov
push
movntq
test
addr16
cmp
and
mov
mov
cwtl
pop
add
repnz
sub
lret
xchg
mov
push
outsb
nop
pop
adc
or
mov
ss
mov
cmp
fwait
dec
mov
inc
xchg
fdivr
mov
stos
test
dec
nop
inc
pop
sti
sti
test
cmp
cmp
jge
testl
aaa
cld
cld
std
xor
jb
jnp
push
dec
in
dec
mov
enter
sahf
or
inc
fsubl
stc
mov
js
aam
mov
rorl
cs
push
mov
sub
sbb
fwait
sahf
ljmp
cld
or
cmp
out
popf
adc
mov
jl
pop
mov
push
mov
leave
adc
shr
cmp
fisttpll
mov
cld
fstps
xorl
shr
xchg
adc
dec
cmp
outsl
fcoml
cld
and
imull
xchg
shll
call
and
fcompl
popf
aas
inc
pop
pop
iret
or
add
and
sub
jnp
sub
call
out
jmp
mov
xchg
adc
mov
jno
shrb
sub
nop
std
dec
scas
pop
or
or
in
push
push
sub
clc
js
lock
push
inc
lret
lret
mov
decl
into
ljmp
lods
mov
xorl
jp
jb
sbbb
enter
mov
pop
pop
out
lcall
test
cs
dec
pop
and
jge
ds
cmp
sbb
fmull
loopne
push
pop
pop
in
jmp
and
mov
push
mov
int3
jno
pop
mov
cmp
sti
mov
cltd
mov
jl
insl
ds
fidivrs
xor
adc
mov
push
or
xor
shl
shrl
push
add
shll
rorl
xlat
inc
movsb
mov
xor
sbb
xchg
pop
rorb
sub
js
movsl
es
mov
ror
jae
imul
popf
int
lahf
insl
out
xchg
lds
into
or
cli
inc
out
inc
jno
sbb
leave
mov
push
popa
negb
das
pusha
dec
or
nop
into
sbb
sub
jnp
fmul
cmp
xchg
adc
mov
out
leave
add
xor
fisubrl
mov
xchg
sbb
mov
imul
stos
es
mov
mov
mov
mov
test
pop
and
pushf
fisubrs
mov
cmp
cmp
cmp
fbld
xchg
push
pusha
lret
push
fsubrl
gs
fwait
sbbl
dec
push
outsl
cmp
out
add
outsb
cmp
dec
add
push
mov
xlat
clc
adcl
in
mov
das
cmp
div
or
jmp
add
js
lea
test
adc
jle
arpl
or
out
lods
shlb
popf
ret
enter
test
cmp
mov
dec
sub
push
push
xor
and
out
pusha
repz
lods
cmpsl
stos
cmpsl
pop
mov
or
bound
push
lea
ljmp
insb
jb
xor
xor
test
jl
ss
shll
push
adc
fadds
ret
sub
mov
ja
add
xor
inc
nop
cwtl
add
adc
fistl
dec
int
lock
push
jge
fidivrs
mov
sbb
jns
stos
lock
fs
jne
mov
jge
adc
loopne
cmp
add
fsubrp
les
outsl
cmp
jmp
nop
ds
dec
or
jo
mov
sbb
fwait
movsl
data16
fbstp
jns
lea
mov
pop
sub
repnz
lds
dec
fcmovbe
inc
pop
cmpsl
sub
rcll
or
bound
ret
in
loop
pop
mov
sub
sub
aad
stos
out
lret
div
int3
cmc
ja
xorl
cmp
popf
ss
lods
fs
xor
loopne
add
xchg
cmp
sbb
cli
test
add
dec
and
pop
nop
outsl
aas
nop
mov
add
pusha
mov
pop
sub
imul
hlt
dec
sub
fdivrs
mov
loop
mov
fs
dec
cmp
popf
jmp
repz
ljmp
cmp
inc
pop
cmp
movsb
sbb
and
test
cmp
and
dec
movsb
adc
mov
sub
ss
clc
fdivrl
inc
loop
fists
mov
loopne
adc
daa
sbbb
or
push
or
movsl
les
stc
pop
cltd
iret
mov
push
cmp
sub
inc
push
call
cmp
xor
or
mov
repnz
out
hlt
lret
xor
sub
jno
or
inc
or
xchg
aas
adc
jmp
imul
sub
fsubrl
mov
adc
decb
xchg
into
mov
pop
into
mov
les
repz
mov
mov
dec
mov
push
fcompl
jp
xchg
pop
adc
imul
jae
sbb
add
mov
das
jbe
test
mov
les
add
or
and
mov
sbb
out
push
pop
test
xchg
dec
arpl
cmp
add
shl
adc
push
int3
pop
adc
mov
add
into
imul
icebp
pop
sbb
loope
ja
push
popa
insl
iret
inc
popf
rorb
fsubl
aaa
outsl
dec
and
xchg
inc
cmp
push
fbstp
cli
shll
shll
cmp
iret
lock
fsubp
mov
repz
mov
sbb
fnsave
andb
mov
imul
pop
cmp
mov
jno
push
and
sub
mov
jmp
addr16
shrb
sti
and
femms
dec
lods
sbb
fsubl
push
test
jecxz
sub
rcll
rorb
mov
push
sahf
mov
nop
jg
cmpsl
imul
ss
imul
sti
dec
sub
push
push
sar
push
lock
pop
repz
jae
jle
jbe
std
cmp
rcll
movsb
repnz
outsb
push
rcl
movsl
xor
push
cmp
push
inc
shll
pop
inc
adc
add
xchg
or
adc
rorl
dec
mov
fisubs
sub
cltd
xchg
sub
mov
aaa
mov
sbb
cmp
sub
and
cwtl
mov
flds
outsl
stc
jl
loope
cmp
mov
push
push
cltd
cs
sub
xchg
xor
add
add
sub
cli
xchg
push
inc
or
sti
dec
dec
nop
mulb
jno
movl
add
ljmp
jae
imul
loope
sbb
aas
lods
mov
push
inc
jnp
in
ret
mov
pop
pop
dec
lea
test
add
push
stos
and
dec
fldenv
xchg
testb
cmp
aaa
rcl
nop
jbe
sub
pop
pop
adc
fstl
movsb
lods
daa
ret
sbb
fsubrl
lods
rcrb
push
jne
adc
arpl
dec
inc
rorl
fidivrs
fwait
jmp
push
cmc
mov
ss
jmp
jo
jg
repnz
push
pusha
lea
push
or
mov
sub
jae
or
or
ds
dec
push
dec
mov
xchg
sub
mov
xchg
adc
adc
insl
sub
pop
xor
sub
adc
lea
cs
inc
daa
mov
mov
int3
out
cmp
int
mov
sbb
pop
add
jb
ret
shl
push
cmp
jno
pop
cwtl
jecxz
dec
aam
add
shr
xchg
in
lret
sbb
xchg
stc
inc
cmpsb
jbe
test
mov
out
repnz
inc
stc
iret
and
sahf
arpl
int
cltd
stc
pop
mov
stos
mov
imul
imul
jg
imul
orb
dec
push
mov
int
jne
dec
or
cmp
pop
mov
push
mov
pop
xchg
sbb
hlt
jg
mov
cld
and
add
push
movl
cmp
in
stos
xchg
stc
ror
jl
loopne
push
jns
loope
pop
adc
sub
push
or
dec
xor
mov
cld
add
insl
add
dec
cmc
dec
rcrl
repz
mov
arpl
and
mov
jg
mov
ja
lds
imul
mov
adc
adc
mov
loope
push
inc
sub
aad
test
mov
push
cld
and
dec
sub
jnp
sbb
dec
dec
cmp
mov
js
mov
push
lahf
mov
sbb
sbb
addr16
ret
and
in
inc
xor
fisubs
adc
xor
lods
sbb
aaa
mov
mov
xchg
loopne
or
leave
loope
leave
adc
test
xlat
xchg
call
xor
pop
stc
inc
dec
iret
outsl
mov
push
cmp
inc
out
lahf
mov
aad
inc
imul
cmp
xor
adc
lret
je
bound
sub
jo
popa
loope
cmp
std
or
data16
pushf
lds
push
imul
in
add
fildl
mov
fcoms
jae
xor
leave
jle
es
mov
mov
add
sub
cmp
inc
ja
inc
orl
adc
inc
xor
pop
movsb
clc
ja
popf
push
mov
in
inc
mov
dec
push
cmc
push
mov
lret
pop
add
daa
clc
inc
lods
fsubs
or
orl
imul
cs
dec
dec
add
mov
push
fwait
mul
outsb
pop
lock
clc
xchg
or
fwait
mov
int
sub
repnz
and
sub
aaa
push
std
mov
and
sbb
sbbb
add
xor
loope
scas
loope
xor
cs
aas
mov
idiv
dec
sub
mov
push
dec
jns
std
lahf
dec
rcrl
xchg
mov
cmpb
bound
jns
out
ffreep
es
in
jnp
pop
pop
out
int
pand
mov
int
fstps
pop
movsb
out
inc
lods
je
sub
rorl
adc
ret
out
gs
clc
xor
adc
dec
xlat
sbb
xor
int
mov
push
pop
daa
dec
fld
ja
mov
fildl
les
xchg
fadds
xor
inc
adc
enter
and
testl
shl
inc
mov
sbb
sub
xorb
pop
lods
repz
or
aam
xor
cld
sbb
ss
mov
fisubs
rolb
lea
idivl
inc
add
and
jp
sub
pop
into
cmp
dec
jge
mov
inc
cmc
jno
out
lret
pushf
aam
cli
je
adc
bound
scas
push
mov
es
clc
and
mov
push
popf
into
mov
nop
and
pop
inc
xor
mov
pop
pop
mov
and
je
mov
jne
cmp
push
pop
loop
loope
jo
fnsave
jo
push
stc
dec
fcmovb
push
jne
pop
cmpsl
jp
xchg
add
jne
cs
adcb
std
cmp
fdivl
and
jl
adcb
andl
fsubrs
xor
adc
scas
sahf
lahf
mov
icebp
xchg
jbe
insl
mov
ss
jecxz
lcall
mov
adc
inc
push
xchg
psraw
shrl
xlat
lret
fwait
or
or
ds
sub
push
mov
je
mov
inc
push
nop
mov
mov
out
mov
push
inc
xorb
leave
dec
adc
filds
rorl
not
and
push
rcl
pop
dec
lret
pop
leave
pop
das
sub
push
jge
mov
mov
in
cmp
mov
xchg
and
cmp
clc
shl
cmpsb
xor
inc
adc
cwtl
enter
pop
mov
test
jle
mov
adc
adc
ss
arpl
mov
loop
int3
aaa
or
std
pop
add
pop
cmp
cltd
repnz
pop
repnz
insl
shlb
stos
pop
fisttpll
mov
inc
in
mov
push
scas
daa
sbb
cmp
outsb
inc
xor
sbb
push
out
mov
xchg
ret
sbb
pop
xchg
jecxz
mov
pop
jo
pop
sbb
jno
iret
add
dec
sbb
dec
mov
popa
cwtl
mov
add
jmp
adc
call
pushf
push
and
test
cmp
jl
stos
mov
sub
iret
inc
or
popf
rorl
aas
fimull
and
push
mov
popa
stc
daa
std
fadds
jns
mov
sub
or
mov
stos
xsavec
dec
outsl
pusha
bound
xchg
stc
mov
ret
pop
popf
mov
xor
inc
mov
mov
sahf
pop
sbb
stos
sub
sahf
dec
clc
cmp
or
mov
jmp
lcall
sahf
and
aad
jecxz
les
cmp
pop
fdivr
jns
push
sti
cli
jmp
cmp
sub
int3
sub
pop
or
test
adc
pop
lods
mov
mov
insb
ret
adc
pop
cmp
xchg
ja
cmp
sbb
sub
lahf
xchg
movsl
inc
xor
cld
xchg
push
mov
stos
push
jno
jno
fistpl
inc
sub
pop
sub
pop
cli
punpckhdq
jne
daa
add
jle
cmpsb
add
push
mov
push
insb
nop
push
lock
out
sub
shlb
xor
push
cmp
stos
mov
or
je
das
ds
adc
movsl
push
ret
pop
iret
xor
fadds
mov
cmp
mov
out
push
jo
ss
outsb
jmp
add
loop
in
insl
loope
push
mov
inc
jo
jnp
loope
testl
adc
cmp
std
shrl
dec
mov
mov
pop
insl
push
xlat
repz
or
add
push
push
push
shll
inc
enter
adc
dec
dec
nop
int3
mov
shr
movsl
enter
int
jo
repnz
pop
fisttpll
ret
jmp
fbstp
mov
inc
dec
fisttpll
inc
push
sub
xchg
mov
adc
or
je
adc
outsb
clc
fucomi
or
filds
jle
ret
es
mov
or
repz
in
lods
and
fwait
jns
int3
xchg
test
mov
and
and
out
adc
call
out
or
bound
sbb
cmp
cli
cli
in
lods
das
mov
mov
push
scas
out
or
ss
dec
movl
stc
mov
lock
rorb
jbe
lcall
push
or
insl
clc
popf
pop
pushf
push
addb
test
mov
dec
or
stos
and
push
xor
idiv
and
pusha
fmuls
cs
inc
lock
insb
daa
mov
jmp
dec
add
out
mov
rclb
or
inc
ret
add
and
xchg
adc
cmp
sbb
insb
mov
mov
fs
cmpsb
jae
inc
cli
ljmp
arpl
out
into
pop
stos
sbb
cmpsb
dec
xchg
push
in
adc
fisubrs
xchg
and
loop
stos
xchg
imul
dec
ss
sbb
xor
sub
dec
repnz
imul
inc
sub
out
leave
jle
mov
sbb
and
shll
jb
and
or
jne
das
mov
test
mov
sub
mov
pop
mov
push
orb
and
or
sub
int3
lock
jl
mov
cltd
and
mov
and
sub
iret
pop
movhps
inc
loopne
lret
xor
sub
ljmp
fsubrs
or
out
and
and
mov
mov
in
sub
add
pop
das
vcvtss2si
push
mov
inc
xchg
push
mov
or
jmp
and
out
cmpb
mov
in
xchg
and
xchg
inc
dec
jno
mov
pop
icebp
loopne
mov
and
sub
adc
jge
inc
xor
int
pop
inc
add
dec
clc
mov
stc
dec
mov
loope
arpl
cmp
pop
scas
jae
and
dec
roll
sub
rcll
pop
aas
outsb
in
push
pop
and
or
cltd
push
mov
lcall
xchg
jge
rep
fsubl
xor
pop
xchg
loop
sbb
jne
push
lods
and
mov
cmc
push
add
mov
mov
test
cld
test
push
ds
out
sbb
mov
sub
popf
lahf
mov
xchg
test
or
loop
inc
adc
pop
lods
sub
in
pop
inc
adc
aas
push
mov
scas
jl
mov
jle
fisttpll
xlat
inc
loopne
shrb
dec
repnz
fidivrl
and
shrb
sub
mov
sbb
ljmp
call
repz
pop
rcrl
ss
pop
push
push
push
xor
inc
rcrb
test
cwtl
jbe
shlb
into
cmc
add
aaa
test
add
pop
test
add
mov
xor
notl
cwtl
leave
cmp
jae
cmp
ret
ret
mov
push
ds
jmp
jo
sub
xchg
push
adc
cmp
xor
scas
or
fwait
iret
int3
add
push
fisubl
lcall
out
dec
jnp
xchg
mov
jae
test
push
negb
jp
mov
pusha
or
cmp
test
cmp
xor
push
sarb
and
bound
xchg
mov
inc
push
xchg
add
jne
jge
ljmp
stos
xor
mov
push
xchg
jmp
adc
arpl
lsl
push
xor
jge
rcr
pushf
popa
into
pop
sahf
sbb
mov
jp
stos
inc
and
xchg
pop
hlt
xchg
pop
mov
add
std
inc
xadd
and
sbb
jge
cmp
rclb
jg
xchg
fdivrl
xchg
pop
push
push
jae
or
adc
lret
adc
mov
push
dec
pop
rcl
cltd
fbstp
pop
iret
mov
popa
pop
lods
cmp
xor
nop
sbb
rcrl
dec
pusha
jns
incl
inc
cmp
sbbl
ja
inc
cli
outsl
mov
push
mov
sbb
test
je
or
scas
dec
sbb
and
rol
movsb
add
jo
mov
xor
lret
dec
xor
mov
mov
int
shl
sti
cmp
dec
insl
push
daa
loope
adc
les
and
shlb
mov
ja
ss
es
pop
loopne
cmp
jl
adcl
in
sbb
push
jl
dec
mov
mov
and
pop
xabort
sub
je
mov
xchg
sub
icebp
or
call
push
mov
add
adc
dec
lock
sbb
cli
add
aad
outsb
out
jge
pop
in
push
cmovns
or
pop
or
mov
jae
xchg
in
lods
xor
add
jp
or
out
stc
sbb
sahf
mov
pop
or
adc
je
or
mov
loopne
sub
jg
push
mov
cmpb
in
push
mov
jno
push
cmp
mov
mov
roll
mov
aam
in
clc
fdivp
xchg
data16
and
test
or
inc
call
sub
movsl
and
mov
mov
mov
rcll
test
inc
ljmp
andb
inc
push
cmpsb
repnz
cltd
xor
repz
or
pusha
dec
or
subb
sbb
loope
xorl
mov
and
add
jmp
jo
push
cmp
add
jle
dec
repz
cmp
popf
mov
sbb
jge
mov
ret
movsl
pop
rol
jns
icebp
inc
loop
push
dec
test
jecxz
pop
and
mov
cld
lods
xor
mov
lea
insl
inc
jo
pop
pusha
cld
popl
fsubr
xor
mov
and
cmc
bnd
cmp
ja
push
xchg
cmp
dec
in
mov
jne
in
push
es
loopne
dec
mov
sub
int
adc
dec
je
lods
xor
scas
and
sbbb
in
cmp
pushf
testb
jnp
sub
mov
or
inc
fisubrl
fsubrl
sub
in
in
inc
mov
pop
jmp
ret
push
lock
mov
and
addps
dec
sbb
sti
inc
fs
sbb
dec
out
sbb
dec
sahf
cmp
xchg
mov
cmp
imul
and
sbb
lahf
loopne
divb
pop
loop
shrl
mov
lock
lods
popa
popf
repnz
rcr
sti
adc
jge
inc
push
cmp
push
push
dec
xchg
dec
inc
int3
lods
jecxz
add
push
push
imul
popa
jp
mov
mull
aaa
lods
nop
shlb
inc
sbb
xor
call
inc
pop
xchg
xor
ds
leave
xchg
push
push
cmp
add
jae
sar
jmp
push
sub
mov
and
jg
insl
xor
xchg
pusha
or
fimull
pop
movsl
dec
xor
dec
pop
adc
or
push
sbb
pop
pop
test
rcr
pop
fildll
int3
std
xor
xor
nop
xor
push
movsl
iret
lods
cltd
mov
or
dec
cs
dec
decb
orl
sbb
repz
lahf
sti
mov
mov
or
dec
and
loopne
lret
inc
cltd
insb
stos
pop
jno
sti
inc
mov
mov
repz
and
shll
movsb
es
mov
out
pop
adc
int
fwait
adc
mov
xor
adc
in
insb
adc
pop
getsec
xor
pop
pop
ja
pop
inc
mov
mov
icebp
adc
mov
arpl
dec
dec
outsl
dec
add
test
call
fbld
xchg
out
jmp
lret
jmp
sbb
loopne
and
jbe
lahf
mov
jnp
xor
int3
cwtl
lods
aaa
xor
ficoml
or
outsl
sub
xor
pushf
outsb
jnp
popa
out
cld
xor
ja
call
dec
mov
mov
cmpsl
mov
push
mov
add
or
xchg
adc
scas
inc
jecxz
pushf
adc
rol
and
adc
loopne
and
add
repnz
pop
sbb
pusha
sbb
sti
sub
rcll
jno
mov
insl
xchg
sbb
jne,pt
out
cmp
repz
inc
xchg
loop
cmc
sbb
and
mov
add
pop
xorl
push
pop
cltd
mov
cld
lret
scas
dec
push
stos
push
sbb
inc
icebp
aad
jmp
les
call
fdivs
repz
push
insl
mov
mov
xchg
inc
and
scas
add
sarb
or
sub
mov
mov
adc
jnp
in
add
mov
aas
add
jmp
push
mov
push
dec
imul
sub
mov
mov
jmp
mov
sub
mov
outsb
nop
sbb
sub
jne
xchg
sub
xor
sub
les
fld
aad
jb
sub
je
mov
mov
push
leave
shll
xchg
mov
sbb
mov
leave
ljmp
imul
popa
pusha
mov
fs
sub
test
push
and
push
add
fs
lods
xor
js
push
jp
dec
scas
mov
cmpsw
nop
xor
inc
ljmp
shrb
jae
pop
pop
mov
pop
shlb
mov
pop
jecxz
mov
and
or
js
adc
jnp
enter
jecxz
sbb
xor
xor
pop
xchg
jl
call
add
sbb
std
xchg
in
or
cli
jno
jb
das
jns
ficompl
popa
or
push
imul
cli
inc
fsub
int
insb
sbb
imul
push
push
out
sub
push
cmp
pushf
pushf
sbb
dec
aaa
or
dec
pop
xchg
xchg
out
push
and
pop
ds
lahf
test
dec
gs
call
in
xor
or
test
scas
add
stc
inc
cmp
test
lahf
xchg
xchg
dec
arpl
js
push
lcall
scas
in
pop
or
pop
sarl
adc
fcoms
mov
jecxz
add
sub
out
cs
mov
pop
xlat
xlat
ja
sub
and
imul
sbb
and
push
mov
hlt
mov
das
add
cmp
push
sahf
push
out
sub
sub
mov
stc
movsb
sub
repnz
int3
orb
lret
mov
xlat
push
pop
out
mov
mov
movsb
xchg
push
int
mov
or
fisttpll
mov
dec
lods
aad
mov
inc
out
or
enter
sub
popf
repnz
cmp
clc
ficoms
sahf
push
xlat
sub
adc
inc
jl
fstl
das
icebp
jg
out
or
dec
sbb
cmp
push
pop
rcl
adc
out
or
dec
and
push
adc
add
rolb
dec
rorl
jnp
add
cltd
mov
sbb
imul
lcall
jns
rorl
mov
andl
shr
dec
pop
mov
adc
loop
fidivs
sbb
mov
mov
and
push
fisubrl
dec
cmp
inc
jo
dec
dec
or
imul
rol
adc
dec
jne
jno
fcmovnu
loopne
adc
push
cmp
pop
add
loop
xor
jg
sub
cmpsb
je
lock
mov
orl
in
lret
push
inc
push
lea
pop
push
ficoms
aad
pop
dec
loop
inc
jb
test
out
sub
xchg
in
loope
repz
pop
shll
hlt
fsubl
add
xor
push
sahf
outsl
or
jmp
ud1
jbe
xor
out
jg
scas
mov
mov
leave
lret
decb
cli
mov
lods
pop
jl
pop
inc
sarl
lahf
cmc
shll
push
arpl
test
in
test
test
pop
xor
push
test
xchg
ds
shlb
jbe
xor
je
sub
jno
sub
jns
nop
movsl
data16
leave
rcl
sub
jns
movsb
xchg
push
xor
cmp
mov
adc
rcr
dec
adc
and
mov
fsubl
mov
cld
push
mov
aaa
ret
pop
movsl
popf
repz
cwtl
fwait
mov
mov
sub
xor
pop
mov
mov
addr16
inc
mov
jnp
ljmp
sub
cmpsb
xor
pop
sbb
cwtl
mov
mov
fidivrl
aaa
jl
push
fsubrl
jne,pn
call
push
lock
fwait
add
cmp
sub
mov
xor
iret
in
push
dec
clc
jmp
xor
jp
clc
call
mulb
inc
iret
stos
mov
add
lret
push
mov
lock
iret
in
les
pop
scas
pop
push
xchg
fwait
cmpsb
imul
aaa
xchg
enter
nop
sbb
in
adc
push
out
lea
jns
ljmp
pmaxub
scas
push
inc
lds
in
adc
aad
sbb
notb
push
cli
mov
ret
push
add
cld
rcrl
add
add
stc
imul
insb
test
xchg
test
pop
add
icebp
xor
mov
push
cli
jns
hlt
dec
jbe
adc
or
or
andl
into
leave
in
leave
mov
lock
mov
sub
dec
cmp
imul
xlat
fnstenv
out
sub
lret
cmp
or
pop
sahf
pop
sbb
or
aad
fistl
stos
cwtl
dec
pop
out
mov
and
inc
pop
mov
push
or
and
pop
test
into
out
shlb
jbe
push
pop
dec
xchg
scas
mov
daa
push
das
mov
mov
jne
pop
cmpsb
js
dec
sbb
xchg
add
lret
cmpsb
fsubrs
adc
xor
and
sub
jbe
mov
fldenv
mov
jmp
cmp
pop
stos
dec
dec
sbb
push
test
push
pop
dec
jnp
pop
call
sbb
mov
pop
xor
into
pop
cmpb
inc
xchg
jecxz
sarb
jo
jnp
test
pop
push
push
cmp
and
mov
jns
sbb
sbb
push
lret
test
leave
cmp
mov
addr16
push
sub
push
mov
mov
xorl
aas
push
stc
std
xchg
test
lock
fnstenv
or
aas
hlt
pop
arpl
inc
into
das
repz
outsl
dec
test
cmp
mov
jne
cmp
push
inc
jecxz
inc
scas
adc
adc
pop
sbb
mov
data16
stc
in
aad
mov
bnd
or
and
repz
popa
movsl
add
add
push
xor
fsub
sbb
pop
push
inc
test
mov
in
test
mov
das
push
pop
cld
mov
out
ret
push
ret
xchg
repnz
repnz
xchg
fistps
lcall
push
push
sub
dec
mov
jp
lock
stos
pop
in
js
xor
loop
hlt
pop
aaa
jg
dec
adc
mov
mov
add
adc
and
jae
push
mov
mov
xor
xchg
stos
mov
adc
imul
mov
dec
pop
lea
xchg
je
repnz
into
int
mov
aas
push
inc
mov
jmp
mov
iret
gs
mov
iret
add
out
mov
bound
lret
or
xorb
cltd
sub
test
xlat
pop
mov
inc
nop
jbe
and
xor
sub
js
movsb
mov
mov
sbb
in
ret
cmpsl
mov
mov
repnz
scas
ret
in
push
xor
pop
mov
and
jns
push
cmpsw
mov
add
hlt
jl
push
and
mov
lahf
hlt
lret
mov
and
inc
xchg
pop
in
cmp
loope
imul
cld
jno
test
jbe
sub
sub
pop
test
sbb
test
cmc
cmpl
addr16
imul
mov
imul
mov
lret
cld
adc
cli
mov
push
xor
and
mov
fwait
mov
testl
adc
imul
add
and
sbb
or
sub
das
dec
ja
mov
pop
arpl
lods
lcall
mov
mov
rcrb
jae
je
mov
fwait
cld
mov
movsb
mov
fistpll
pop
aad
fistpll
arpl
loop
imulb
pop
pop
dec
addr16
dec
lcall
imul
sub
test
stos
mov
lods
rcrl
cmp
dec
push
mov
notl
xchg
lea
cmp
push
cmp
mov
imul
sbb
imul
js
sbb
repnz
popa
adc
movsb
loop
popa
orl
mov
in
lods
mul
clc
mov
inc
adc
movsl
pop
lahf
popf
xchg
and
or
jecxz
sub
xchg
pop
cmp
cmc
cmp
xor
loope
jp
inc
inc
inc
stos
push
out
push
lods
push
and
pop
cmp
mov
jmp
inc
lret
xlat
aaa
pop
add
or
clc
gs
stc
push
in
stos
mov
clc
mov
xor
imul
mov
shll
hlt
in
xchg
aas
inc
dec
xchg
imul
mov
popa
bound
add
addl
dec
inc
les
and
push
lahf
cmp
sub
pop
add
repnz
pop
add
in
inc
aad
pusha
xchg
std
ds
push
std
cli
mov
cmp
jmp
dec
jle
aas
lret
xor
jnp
inc
mov
jne
loopne
or
fbld
mov
in
hlt
dec
jno
jmp
lret
pop
dec
fldcw
push
xchg
inc
sub
in
dec
stos
imul
mov
or
ljmp
addr16
orl
dec
cmpsl
xchg
loopne
cltd
bound
and
int3
sbb
add
scas
mov
fs
mov
xor
sbb
js
pop
push
xchg
bound
pop
jmp
es
inc
push
cltd
std
out
movsb
test
fs
repz
mov
in
popa
or
pop
sub
xchg
insl
lea
cmp
sbb
push
test
loop
lds
test
cmpsl
add
xor
sub
out
xchg
xor
jge
sbb
clc
nop
inc
jg
loope
pop
mov
sbb
fisubl
mov
sub
push
lods
xchg
aam
jo
inc
jge
cs
cld
popa
push
pop
dec
fstpt
push
xchg
jns
hlt
js
stos
icebp
insb
shll
mov
insb
aad
and
or
clc
xchg
lods
ljmp
mov
mov
jecxz
fbld
fsub
cmp
cmp
and
xchg
xchg
dec
adc
bound
mov
cmp
mov
cs
sbb
popa
push
out
or
notl
sub
fwait
sub
cmp
aam
stos
fwait
outsb
imul
scas
push
cmc
xor
mov
clc
aad
cmpsb
add
ds
xchg
imulb
jb
and
lret
adc
pushf
xchg
cwtl
mov
lock
aaa
add
cld
mov
push
shll
sub
sbb
incb
movsb
push
mov
hlt
pushl
or
inc
jae
xlat
and
xchg
adc
stos
pop
daa
cli
or
pop
rcll
in
mov
in
mov
stos
cmc
jge
shl
mov
adc
mov
xor
dec
mov
mov
push
les
ret
mov
out
jne
imul
and
lock
mov
xchg
jns
aad
add
fldt
leave
mov
sub
mov
sti
dec
push
add
sbb
loop
mov
cmp
dec
aam
ss
lahf
in
into
out
adc
sahf
inc
jns
mov
popl
cmp
pop
cmp
pop
decl
outsb
mov
cli
push
push
mov
add
mov
or
iret
test
mov
sbb
push
sarl
sahf
imul
mov
sbb
push
mov
ljmp
adc
dec
adc
notb
xchg
ja
add
sbb
int
add
lcall
out
add
pop
push
mov
mov
bound
dec
cmp
fstpl
mov
insl
push
test
icebp
inc
mov
movsl
pop
jmp
lcall
xchg
inc
mov
mov
cli
mov
fidivrl
pusha
or
add
xchg
imul
js
xchg
sub
lods
pop
dec
andl
subl
mov
sub
clc
mulb
outsb
mov
out
in
les
gs
pop
into
pop
lea
outsb
push
clc
or
ret
imul
cmp
cmp
lret
jno
xchg
mov
dec
idivb
js
jb
cld
jp
mov
xchg
xor
dec
insb
adc
push
sub
push
inc
rcr
dec
inc
cmp
cld
lret
out
add
pop
jle
inc
fistl
stos
popa
sub
pop
mov
sub
sahf
inc
test
mov
sbb
mov
cli
ret
les
je
cmc
sbb
add
fs
jne
inc
pop
popf
fildl
dec
mov
and
mov
shll
push
sub
xor
ljmp
call
sbb
xchg
xchg
push
push
ds
fwait
jbe
cmpsb
xor
lods
mov
inc
push
mov
or
loop
data16
and
and
aas
cmpl
in
sbb
fs
cli
jmp
xchg
aas
cmp
leave
fwait
or
sbb
mov
loop
ret
ljmp
addr16
fidivs
fdivs
sub
xor
add
icebp
repnz
jbe
pop
sub
xchg
iret
out
xchg
sub
imulb
int3
adc
aaa
test
push
pop
push
cmp
dec
lahf
andb
push
mov
cli
je
pop
jl
adc
pop
mov
xchg
test
push
xchg
mov
lock
sbb
xchg
jmp
adc
inc
dec
xor
xor
cltd
into
and
out
cwtl
lret
jae
mov
aaa
mov
pop
fsubs
xchg
test
dec
jp
xor
xchg
or
loop
bound
sarb
aad
aaa
inc
push
mov
imul
push
adc
addb
cmp
dec
repnz
pop
dec
inc
call
scas
fimuls
loope
jge
mov
cs
and
cmc
push
scas
int3
push
xor
mov
scas
in
push
fbld
mov
push
add
xchg
ljmp
pusha
inc
inc
inc
mov
push
push
popf
push
cmp
push
sti
jnp
mov
idiv
js
popa
and
sbb
add
sub
lret
xor
add
xor
jge
push
cmp
sub
ficoml
pop
inc
orl
addr16
es
fs
and
cmp
les
daa
test
pop
jge
je
mov
rcr
hlt
or
gs
iret
cmpsb
jge
movl
sub
iret
mov
sahf
in
out
call
cmp
xchg
cmpsb
das
inc
pusha
repnz
jnp
xor
mov
outsl
cli
jno
insb
loope,pt
shrb
scas
inc
inc
and
xchg
shrb
enter
jmp
inc
sbb
mov
mov
cmp
lods
jg
and
inc
jle
fs
xor
mov
pop
add
aas
lods
shrl
test
aaa
cmp
mov
test
sub
scas
lds
hlt
movd
jo
movsb
and
sub
mov
iret
sahf
mov
repz
xor
xchg
daa
addr16
mov
mov
pop
push
jg
or
aaa
das
pop
in
shll
cmc
xchg
call
pop
into
loopne
arpl
adc
lock
hlt
lret
scas
lret
stc
ja
int3
and
das
ljmp
push
push
fwait
fwait
xchg
int3
outsl
in
test
cwtl
fcomps
pop
push
int
mov
push
in
loopne
xchg
lods
sub
rcll
xor
lahf
sub
repnz
push
mov
inc
and
jmp
mov
dec
sbb
sub
nop
push
sbb
loopne
pusha
push
fsubrl
dec
stos
stos
xor
shlb
dec
mov
xchg
jl
cmp
or
rorb
sub
mov
sti
out
mov
inc
sbb
in
inc
add
ss
mov
mov
into
adc
fs
xorb
xor
stos
js
push
adc
push
mov
sbb
out
add
fdivs
dec
pop
mov
or
dec
jae
or
cld
es
pop
cmpsb
ja
push
int3
or
fnsave
in
push
sub
inc
fs
sub
sbb
fwait
xchg
add
jge
dec
xor
pop
icebp
inc
or
arpl
popa
stc
sbb
mov
or
test
mov
outsb
adc
cwtl
pop
push
mov
and
decb
mov
push
cmp
repz
repz
add
jb
mov
inc
mov
imul
xchg
imul
push
outsb
add
mov
xchg
sbb
in
inc
pop
rcrl
xor
jb
addr16
aas
cwtl
sbb
and
dec
xchg
and
roll
flds
mov
cmp
cmpsb
push
enter
sbb
in
and
xchg
adc
gs
test
jo
stos
push
cmpsl
lds
cmp
or
sbb
ljmp
int
stos
jo
rcll
icebp
xchg
mov
add
jno
out
xchg
and
cwtl
popa
jge
pop
dec
cmpsl
sahf
push
rorl
fstpt
cmp
adc
or
fs
jno
jo
inc
push
sti
inc
sbb
inc
dec
push
sbb
jmp
add
repnz
fisubl
push
int
and
ja
das
icebp
bound
test
in
cli
sbb
sbb
sbb
pop
cwtl
cltd
dec
sbb
jae
or
repz
loop
scas
mov
or
jl
call
sub
jns
mov
lret
jno
into
push
stc
testl
mov
xlat
scas
xchg
inc
sbb
pop
sub
cmp
outsl
or
sub
cmp
jbe
andl
cli
fdivr
cltd
xchg
rorb
dec
outsb
mov
mov
or
insl
outsb
sub
xor
shlb
xchg
and
out
cmp
pop
mov
fsubrl
mov
loopne
fs
fnstsw
pop
ja
push
std
adc
fdivrs
cmpsb
mov
push
dec
leave
push
push
in
inc
adc
fldenv
pop
sbb
pop
test
and
lret
in
popf
bound
cmp
dec
mov
popf
or
test
out
movsw
iret
sbb
pushf
je
mov
sub
push
int
push
mov
adc
and
mov
inc
lret
psrlq
jo
pop
call
subb
inc
sbb
inc
mov
jle
in
cli
mov
iret
xchg
pop
pop
jbe
pop
mov
mov
or
lcall
mov
aaa
add
movsl
sahf
addr16
out
je
and
jle
jp
lcall
mov
inc
ret
es
or
push
out
int
dec
inc
in
lds
dec
mov
push
out
mov
lea
adc
jle
mov
test
stc
mov
adc
ret
jge
mov
or
jg
sbb
mov
hlt
mulb
inc
inc
inc
fwait
jp
fstpl
test
or
cmpsb
push
adc
fildll
xchg
fstpt
dec
pop
andl
shll
mov
sub
int
dec
enter
notb
loope
pushf
lods
inc
mov
stc
iret
xchg
loopne
mov
test
sbb
std
mull
lock
nop
lods
jecxz
pop
push
xor
mov
movsb
je
mov
enter
xchg
mov
dec
int
aam
dec
jns
lds
in
push
cmp
ss
mov
clc
enter
shl
test
push
jnp
test
insb
jle
sbb
inc
fwait
lcall
imul
testb
jge
or
cld
pop
cmp
ljmp
fcoml
push
ljmp
push
mov
cmc
cmp
popa
or
stos
inc
pop
inc
lret
adc
or
mov
inc
in
cmp
mov
outsb
adc
jecxz
push
push
mov
fadd
xchg
fcmovne
push
cli
mov
outsl
jnp,pn
orl
adc
in
pop
incl
sbb
pop
cmp
mov
fidivrl
push
sarl
sbb
outsl
lret
and
jmp
imul
out
sbb
ljmp
insl
add
scas
dec
cmp
pop
dec
mov
dec
add
scas
xor
push
add
xor
mov
aaa
fstpt
cmp
mov
int
mov
mov
repnz
push
cmp
xchg
xchg
xchg
ja
cmp
lods
push
sbb
test
adc
and
dec
jo
out
lret
inc
divb
push
mov
adc
cltd
lahf
or
mul
pop
out
adc
pop
ret
shlb
and
cmc
icebp
scas
rclb
in
jae
pop
repz
mov
popf
rcl
mov
inc
mov
jl
sbb
pushf
cmp
xchg
lret
or
jle
fcmovb
outsb
jecxz
and
fdivp
cmp
or
fstpt
mov
cmp
pop
mov
xchg
imul
jnp
push
mov
pushf
add
test
sbb
ss
bound
repnz
dec
cmpb
int
pop
pop
stc
push
xchg
movaps
pop
sarb
jmp
push
xchg
je
mov
mov
push
shlb
enter
mov
cltd
sbb
out
or
push
es
movsb
sub
sbb
in
pop
in
inc
out
inc
cmp
outsl
les
gs
outsb
push
cmp
cmp
and
cmpsl
lahf
mov
lahf
jle
xchg
mov
cmpsb
add
adc
test
hlt
xor
push
xor
jle
fs
xchg
pop
adc
pop
cmp
jmp
andb
fcoms
js
cmp
mov
cmp
jle
lods
cmp
lret
dec
jno
mov
jl
or
cmpsb
inc
xor
rorb
xor
push
jno
sub
jne
add
and
imul
fnstcw
orb
dec
fldl
push
cmpsb
or
push
add
int3
push
stos
loope
into
cmp
dec
dec
lahf
cmp
push
arpl
lods
test
icebp
lret
ss
pop
push
int3
fistpl
jg
repz
adcl
icebp
pop
pop
sub
xlat
addl
data16
leave
sahf
adc
lock
cmp
insb
addr16
stos
stc
pop
sub
mov
outsb
fdivs
or
sbb
in
jns
or
aam
or
vmread
xchg
inc
jno
pop
pop
out
push
das
adc
jecxz
sbb
and
xor
into
lods
pop
pushf
sar
mov
test
aad
push
je
es
mov
adc
pusha
in
ljmp
fisubs
or
pop
out
push
jnp
stc
mov
pop
mov
jmp
mov
xor
repz
dec
into
pushf
jg
xlat
repnz
push
dec
das
int3
mov
xchg
stc
flds
or
pop
cmp
jg
adc
add
rcll
jp
add
jmp
xchg
int
push
and
outsl
js
loop
push
jno
jg
mov
fs
imul
cmpsl
pop
in
aaa
mov
cmp
call
mov
xor
pop
push
lea
pop
sub
xchg
popl
movsl
cmp
idivb
out
jne
sub
daa
pop
add
jno
adc
dec
sub
pop
mov
ss
push
pop
mov
pop
adc
lret
stc
outsl
xchg
sbb
add
pusha
andb
mov
shll
or
test
test
push
test
mov
add
adc
movsl
dec
sub
mov
pop
mov
ds
fs
sub
mov
sahf
adc
mov
addr16
imul
in
in
push
loope
sbb
lcall
aam
dec
cmp
push
xchg
lcall
inc
mov
dec
std
aam
jnp
test
addl
rclb
sub
in
lods
add
aaa
and
mov
sbb
out
push
out
pop
stos
dec
lret
adc
inc
sub
fscale
pushf
stc
xchg
std
sbb
fdivrs
inc
dec
scas
std
inc
dec
push
mov
inc
sarl
inc
inc
lods
enter
dec
test
rorb
lods
daa
and
pop
hlt
xor
lea
xor
sti
addr16
lret
add
jnp
test
mov
sbb
add
outsb
and
sbb
inc
fnsave
arpl
ljmp
pop
adc
cltd
stos
imul
dec
fildll
popf
adc
pop
add
xchg
xor
pop
push
cmpsl
fwait
xchg
jmp
mov
mov
dec
stos
jg
mov
andb
mov
scas
jle
cmp
or
stc
sti
jb
adc
test
xchg
iret
xor
and
or
pushf
mov
je
pop
out
pop
test
xchg
pop
inc
test
nop
insl
gs
pusha
ss
mov
push
add
or
cltd
call
mov
inc
push
mov
mov
filds
xchg
xor
fimuls
pop
or
or
inc
adcb
ret
pushf
mov
notb
xlat
lods
mov
loope
cld
jb
sub
pop
data16
inc
aam
xor
adc
in
adc
pusha
xor
pop
test
rcll
dec
mov
flds
jno
pushf
mov
jo
mov
adc
test
mov
stos
mov
cld
push
mov
sub
je
loop
adc
xchg
mov
dec
daa
and
mov
xchg
inc
sbb
out
in
add
sub
cmpsl
cmp
pop
fstps
nop
mov
pop
arpl
jge
in
addr16
repz
dec
sub
testl
or
push
ds
cwtl
sbb
test
jecxz
xchg
xchg
mov
roll
sbb
lods
outsb
xor
sbb
push
cmp
sub
das
inc
aam
scas
pop
cmp
mov
jg
mov
xchg
adc
loop
and
test
mov
inc
adc
imul
mov
or
cwtl
scas
mov
push
lret
push
ficoml
jl
std
stos
leave
outsb
jbe
cmp
imul
jmp
pop
dec
int
mov
mov
add
ret
ja
pop
fwait
sub
cmpsb
addr16
data16
add
sub
test
xchg
mov
addr16
es
lods
push
or
push
repnz
into
lea
sub
in
sbb
pop
mov
icebp
dec
pop
mov
push
mov
mov
adc
xchg
aad
xchg
imul
xor
and
in
xchg
xor
ret
inc
cmp
int3
sub
and
int
test
icebp
mov
dec
lods
das
push
addr16
mov
into
out
xchg
test
cmpsb
divl
hlt
ret
inc
jns
and
dec
add
add
xlat
in
sub
aas
mov
aas
out
mov
sbb
imul
mov
push
aaa
adc
sti
repz
pusha
fisubl
sub
mov
jge
push
jb
aas
mov
jbe
dec
les
mov
add
sub
push
and
in
cs
adc
pop
xchg
daa
imul
lcall
sub
mov
xchg
cmpsl
jl
js
bnd
insb
stos
popl
xor
jle
insb
mov
out
inc
pop
ja
fimull
mov
add
add
cmp
cmp
sbb
sub
ret
in
inc
jnp
jns
fisubl
adc
popf
jg
sub
fldl
pop
dec
inc
jmp
mov
insb
xchg
sar
ret
mov
xor
aas
clc
icebp
lock
push
icebp
cwtl
mov
cmp
or
xchg
into
inc
cmp
jb
add
repz
inc
jae
pop
cmp
cs
jb
sub
mov
cld
lret
cld
lcall
push
in
std
loope
nop
repnz
pop
call
cmpl
outsl
push
hlt
pop
sarl
mov
sub
add
test
pop
imul
sub
sbb
fstpl
clc
mov
sbb
bound
or
mov
inc
sti
sbb
sti
mov
adc
and
sbb
out
lahf
pop
fwait
gs
pop
dec
xchg
jmp
fisubrs
push
xchg
call
xchg
dec
mov
fcomps
ljmp
fsub
cmpsl
sub
jne
cs
sti
xor
inc
pop
lahf
sti
dec
in
into
sub
in
xor
jge
cmc
lods
iret
pop
out
adc
lods
adc
cwtl
and
mov
inc
cli
cmpsl
loopne
cwtl
inc
das
out
or
mov
inc
ljmp
enter
mov
jp
and
jmp
or
std
lods
ljmp
dec
imul
push
iret
push
aaa
roll
add
and
aam
movsb
dec
cltd
mov
sub
xor
mov
lods
mov
push
scas
inc
mov
lods
and
cmp
ss
ret
push
mov
jne
mov
daa
push
dec
out
outsl
jae
xchg
push
insl
and
cmpsb
dec
adc
add
les
imulb
cmp
lahf
lods
mov
roll
and
stos
adc
mov
mov
xor
repz
xchg
out
sub
jne
add
outsb
mov
es
xchg
push
cmp
xor
ret
cwtl
jae
leave
gs
pop
std
cmc
imul
or
scas
stos
scas
mov
enter
cmp
repz
aas
lahf
xchg
xlat
jle
jle
sbb
js
lock
out
sub
adc
push
dec
push
insl
jne
data16
or
and
and
daa
push
shr
jmp
or
pop
nop
les
sti
sbb
pop
arpl
mov
jl
and
scas
sarb
jle
insl
je
movsl
mov
ss
js
mov
ret
xchg
add
mov
outsb
ret
sti
enter
xchg
push
push
stc
jl
ja
mov
mov
fidivs
lds
lcall
push
insb
dec
mov
mov
imull
fistpl
or
dec
jmp
jne
sti
inc
jle
sub
test
repnz
mov
ret
fwait
imull
push
into
test
outsl
test
jmp
cmpsb
fildl
dec
jge
pop
insl
jb
jp
mov
cmp
div
aas
popa
jb
fisubrl
test
addr16
jp
ss
jmp
popf
mov
ljmp
test
pop
or
scas
mov
xchg
push
xchg
ljmp
cltd
orb
mov
lcall
mov
mov
xor
int3
lcall
aas
cmp
add
cmp
add
shrb
cmp
mov
mov
sahf
pop
mov
aaa
adc
dec
fidivl
leave
pop
add
arpl
out
outsl
push
mov
inc
xchg
inc
int
ss
jbe
dec
sub
ds
into
ret
testb
xchg
insl
cmp
fdivs
push
bnd
cmp
cmp
out
push
and
lret
pop
imul
mov
in
shlb
jle
arpl
cmc
mov
cmp
xchg
jns
or
out
jnp
xchg
int3
cld
xor
das
outsl
lcall
push
mov
adc
xchg
cmp
movsb
fisttpll
out
lods
loop
add
sbb
std
cmp
xchg
push
mov
enter
xorb
inc
cld
inc
in
fcmovb
popf
push
mov
or
xchg
cmc
aam
dec
flds
imul
pop
ret
faddl
xor
jge
cs
insl
in
test
xchg
mov
cmp
inc
arpl
xor
mov
xchg
stos
repz
es
mov
cs
jne
ja
pop
add
ret
jg
in
ret
in
pop
cmp
push
jl
add
stc
mov
adc
mov
dec
push
imul
cmc
adc
xorl
insl
dec
adc
xchg
cmp
scas
xchg
cmp
ret
cmp
in
pusha
adc
dec
jp
dec
sub
enter
xchg
push
fcompp
out
lock
xrelease
and
adc
dec
orl
push
shl
adc
insb
mov
fs
lcall
mov
test
lret
ret
and
adc
mov
push
xor
and
repz
mov
in
sbb
test
pusha
cltd
test
bnd
pop
cwtl
sub
cmc
test
inc
xchg
test
out
mov
xor
jne
lret
adc
cli
dec
pushl
jl
inc
adc
in
mov
movsl
push
mov
jmp
insb
insb
or
xor
mov
push
mov
mov
mov
add
jmp
xor
inc
pop
sbb
xchg
jmp
inc
test
mov
xchg
sahf
ja
repnz
imul
andb
repnz
sub
fistpll
into
sub
into
cltd
mov
pop
adcb
dec
mov
push
inc
sbb
cltd
dec
jb
mov
jbe
mov
jnp
xchg
sarb
bsf
data16
jae
imul
lcall
adc
jecxz
adc
cmpsb
enter
dec
mov
lods
and
sbb
jecxz
loopne
cmp
stos
xchg
int3
pop
ficoml
adc
inc
xchg
xor
pop
insl
cmc
cmp
fs
inc
mov
es
outsb
push
cmpsb
ljmp
jg
mov
fsubr
jp
out
scas
mov
sbb
das
push
inc
lret
push
out
test
shrl
loop
cmp
jecxz
inc
pop
pop
add
shrl
sarl
xor
jge
mov
lods
cmp
lds
aas
dec
adc
movsl
vcvtsi2sdl
add
imul
faddp
pop
lret
js
aad
push
insb
fists
xchg
loop
test
jo
adc
push
jmp
in
jmp
jnp
jecxz
outsb
test
jbe
je
dec
aas
jmp
fwait
outsl
xchg
popl
fcompl
jg
es
sbb
das
xor
hlt
sti
xchg
or
iret
aaa
insb
insb
xorb
test
xchg
das
add
mov
in
push
mov
mov
out
mov
shl
jle
lret
cwtl
repnz
jnp
stc
sub
sub
mov
add
cmp
jg
out
inc
jne
enter
lret
lock
push
mov
ficompl
mov
mov
roll
jge
notl
dec
sub
add
enter
sbbb
fbld
lds
cmp
lds
ljmp
sbb
hlt
lret
and
pop
gs
pop
lret
mov
mov
dec
xchg
sbb
into
mov
jno
sub
adc
push
xor
sbb
xor
adc
lfs
inc
cmp
leave
pop
push
mov
int
jl
enter
jbe
hlt
imul
aas
imul
and
jp
int3
mov
pop
xchg
loope
xchg
sub
sahf
xchg
push
rcr
ret
nop
xor
iret
and
mov
sbb
lcall
dec
daa
call
sub
ljmp
or
xor
mov
iret
mov
orl
adc
jb
movsb
and
rorb
daa
sti
gs
cmc
ds
sti
andb
in
mov
insl
lret
popf
push
jge
pop
aad
into
jmp
sahf
pop
push
cwtl
rcrb
jno
insl
sbb
cmp
dec
popa
jnp
jge
push
jno
cld
into
gs
stos
dec
int
aad
mov
xorl
xor
add
dec
out
cmp
dec
insb
cltd
lock
test
addr16
mov
loop
ljmp
icebp
xorl
mov
daa
aas
sub
sbb
ja
loopne
jae
in
add
cld
test
mov
dec
hlt
clc
mov
fmul
or
into
aaa
outsl
or
or
ds
jno
add
mov
lahf
or
sbb
cmp
ror
neg
cmpsb
fildll
jae
cmp
xor
or
adc
xchg
mov
mov
repz
insl
jge
les
cs
pop
cs
push
imul
mov
and
dec
neg
adc
scas
add
xchg
xor
xchg
rorb
jmp
mov
cmp
jmp
jnp
addl
mov
cmp
push
lods
adc
addr16
lods
fcomp
out
lods
xor
ljmp
fdiv
xor
fwait
or
mov
les
jg
addl
mov
jle
jecxz
mov
cli
cmp
das
xor
in
inc
and
das
or
xchg
mov
jecxz
jle
and
outsl
push
rcrb
inc
nop
orl
pop
sbbl
jbe,pn
js
jo
mov
test
jle
mov
dec
adc
cmp
lods
jae
flds
stc
inc
push
out
xchg
cmp
sbb
add
push
fisttpl
mov
push
stos
sbb
ficoml
xor
sbb
test
rorb
jnp
dec
adc
push
fwait
sahf
cmpsl
into
bound
add
inc
mov
inc
rcrl
push
cmpsb
inc
clc
stos
sar
popa
or
mov
ficomps
sbb
rolb
lods
gs
fists
pop
test
cld
mov
stos
arpl
movl
cwtl
sub
jae
ret
jl
in
data16
pop
mov
push
out
not
ljmp
push
pop
mov
mov
pop
pop
add
pushf
jmp
fwait
mov
mov
mov
ja
cwtl
mov
mov
jle
sub
sti
xor
sti
in
mov
push
pop
pop
fsubl
jbe
push
movsb
gs
xlat
and
rorl
push
add
out
mov
in
cmpsb
and
sbb
or
aaa
xchg
dec
fstl
rcrb
imul
pop
or
adcl
mov
je
push
jmp
clc
inc
mov
push
mov
je
aad
mov
xlat
loop
lea
imul
sti
add
or
push
ror
cmp
rol
add
sbb
push
arpl
insb
push
sbb
in
mov
jnp
sbb
sub
imul
pusha
fcoms
cmp
pop
sub
mov
cli
push
inc
neg
es
cld
xchg
xor
cmp
divb
in
adc
les
and
push
cmp
sub
xchg
repz
ljmp
push
icebp
jbe
dec
push
movsl
outsl
sbb
dec
lret
adc
push
push
sti
mov
push
ret
jns
xchg
testb
xlat
stos
xchg
out
mov
loope
mov
push
pop
test
shrb
gs
jo
leave
pop
mov
pop
and
imul
jno
cmp
sbb
js
cmpsb
cmp
jo
mov
rorl
jecxz
add
mov
xchg
repz
jbe
xchg
in
inc
jg
sbb
int3
and
cmp
mov
mov
stos
sbb
sub
mov
cmp
adc
mov
pop
and
and
pop
inc
stos
jae
xchg
lret
cmc
xor
arpl
call
shlb
les
cwtl
div
inc
daa
sahf
lock
adc
loopne
divl
push
xlat
dec
jp
cmp
addb
or
dec
fsts
add
push
out
in
jle
or
or
mov
jae
pop
hlt
outsb
js
pop
stos
jae
mov
shlb
fstpt
test
pop
xchg
cltd
and
inc
fsts
shlb
in
add
sbb
mov
xor
cmp
rol
das
jmp
mov
jl
or
loop
inc
lcall
pushf
pushf
gs
cld
into
adcb
inc
lcall
mov
push
aad
repz
add
mov
jnp
mov
jge
cmp
imul
pop
push
subb
jp
pop
pop
cmp
nop
xchg
pop
cmp
sub
jb
fisubrs
adc
cs
cmpb
xchg
mov
inc
sub
insl
test
dec
pop
mov
pop
add
and
or
sbb
lret
in
push
imul
ret
hlt
cltd
xchg
mov
outsb
ljmp
in
add
mov
jb
sub
lods
and
add
add
and
popf
mov
idivb
mov
fildll
aad
sbb
inc
lods
enter
push
lods
xor
cmp
ret
jbe
jge
popa
aas
dec
xor
pop
nopl
pop
sub
adc
jg
leave
and
lret
lods
ficoml
ret
cltd
sub
cmp
rcrb
sub
inc
pop
xchg
repz
dec
dec
lods
mov
fdivp
stc
iret
xlat
cltd
sbb
orl
shl
dec
lods
jbe
in
popa
mov
lods
dec
mov
sahf
sub
testl
scas
mov
mov
pushf
push
and
ret
push
xchg
mov
ss
les
cmpl
loopne
cld
jl
jl
lret
test
fsub
sbb
push
shlb
jns
mov
xchg
outsb
xchg
and
jl
data16
jo
ljmp
mov
ja
mov
mov
jmp
cmp
xor
sahf
pop
sbb
mov
push
xchg
or
pushf
call
cmp
mov
out
xchg
cmp
xchg
mov
mov
mov
lahf
in
into
cwtl
pop
lds
cltd
xchg
push
rcrb
outsb
dec
pushf
sbb
mov
or
scas
das
mov
jmp
lret
in
xchg
jecxz
loopw
cwtl
xlat
jnp
dec
jl
xor
insb
mov
int
outsb
out
pop
dec
push
sbb
je
cs
dec
inc
imul
movsb
xchg
jl
dec
pop
and
or
push
push
mov
icebp
adc
push
in
and
ds
add
jbe
int3
jo
jnp
sub
aas
mov
sbb
or
test
jnp
movsl
jmp
xor
push
xor
mov
decb
push
xor
cmp
cmp
lahf
lret
nop
je
in
std
loop
aam
dec
leave
loopne
gs
adc
xchg
push
mov
stc
int
push
bound
inc
loopne
sbb
into
inc
rcrl
popf
inc
or
loope
gs
imul
jmp
paddusb
popf
iret
xchg
in
insl
or
outsb
fwait
ja
mov
lcall
and
test
pop
sub
push
push
push
adc
push
lret
inc
mov
mov
xlat
sbbl
sub
ret
lret
lcall
and
cmpsl
hlt
pusha
js
pop
stos
mov
jle
xor
imul
adc
inc
pop
pop
movsl
dec
push
xchg
push
das
out
pop
aad
mov
addr16
pop
insb
sbb
jg
shl
ret
mov
cmp
icebp
xchg
mov
adc
dec
imul
push
mov
jnp
inc
xor
xor
stos
and
adc
inc
jb
imul
mov
adc
jg
out
add
ljmp
ret
les
jns
xchg
jne
dec
fwait
and
xor
pop
add
push
filds
inc
inc
rcll
and
mov
cmp
pmuludq
and
or
jecxz
fbld
setb
test
push
push
xchg
adc
add
sub
jmp
outsl
pop
dec
lret
cltd
fucomi
lea
sbb
rclb
sti
push
cli
pop
mov
sbb
cmp
pop
jmp
inc
outsl
ficomps
ret
sub
loop
enter
rcrb
lock
xor
xchg
mov
jne
adc
add
cmp
sbb
stos
movsb
fsts
add
out
pop
sbb
cmp
mov
stc
lods
adc
jae
incl
lods
pop
fisttpll
cmpsb
adc
push
movsl
stos
dec
ror
mov
push
repz
mov
pop
or
inc
xor
jecxz
outsl
jbe
aam
dec
scas
cmp
rcll
scas
pop
lea
mov
sbb
dec
out
movsb
stos
xor
frstor
cmpsb
sbb
daa
mov
push
inc
ljmp
push
test
xchg
scas
and
xor
adc
mov
lock
lods
inc
outsl
sbb
fsubr
pop
push
jno
mov
in
xor
cmp
shl
adc
sub
add
addb
ds
data16
pop
movl
xor
xchg
add
mov
lret
test
mov
std
adc
mov
stc
inc
test
sti
outsb
enter
and
or
pushf
push
mov
xor
adc
jge
ja
cmpsl
ljmp
stos
sti
xor
dec
mov
mov
cltd
cld
fisubl
sbb
notb
dec
cld
mov
pop
mov
cmp
xchg
pop
xor
in
std
popf
loopne
imulb
call
outsl
jno
push
xchg
mov
leave
adc
jmp
adc
addb
sti
or
or
jnp,pt
sbb
test
cmp
rol
outsb
push
aaa
sub
pusha
mov
pop
or
mov
push
fsubl
adcl
loop
pop
mov
push
sub
jne
sub
ret
daa
repnz
mov
jo
shll
insb
and
popf
sarl
cmp
cmp
dec
mov
call
js
xchg
xor
mov
push
int
in
mov
jae
and
call
push
and
in
idiv
adc
inc
mov
cli
dec
inc
push
cmovno
je
es
mov
mov
or
icebp
dec
lock
shrl
les
add
jge
in
jns
jns
mov
std
mov
in
mov
inc
xchg
or
sub
int
enter
dec
sub
inc
outsb
lret
insb
rclb
outsl
mov
stos
or
xor
inc
adc
push
add
mov
insb
ret
int
xor
fwait
cmp
gs
sbb
out
add
clc
cltd
test
jnp
into
mov
aam
out
flds
mov
mov
xor
sti
mov
testb
shll
xchg
mov
push
popf
aad
inc
jp
inc
adc
cmp
daa
xor
dec
sbb
xchg
ret
xor
rep
lock
movsl
pop
push
jmp
lahf
sub
sbb
shll
jmp
incb
add
jbe
pop
mov
cs
imul
test
mov
mov
xchg
icebp
push
sbbl
or
test
or
xor
js
pushf
out
fs
adc
pop
dec
cmp
xchg
dec
add
test
jmp
mov
pop
gs
mov
out
cmpsb
dec
mov
jle
or
mov
scas
out
es
sub
mov
hlt
imul
leave
dec
cld
insb
inc
sti
push
mov
hlt
fstl
fcmovnbe
scas
jge,pn
repz
test
jo
and
shll
or
repnz
mov
inc
les
add
and
xlat
test
xchg
dec
push
pop
jnp
data16
in
fldl
notb
fdivrl
jne
fcmovnb
pop
imul
test
rolb
aas
adc
cmpsl
lock
inc
inc
fildl
in
mov
data16
xchg
xor
cmc
rorb
mov
cmovs
adc
dec
pop
notb
add
push
xchg
lock
ss
jno
les
cmp
outsl
aas
mov
loopne
add
or
xchg
jno
shll
lods
adc
ret
test
aas
pushf
ret
inc
pop
call
mov
cmp
mov
inc
mov
adc
out
push
jl
adcl
frstor
repnz
sbb
shrl
inc
dec
pop
adc
andl
mov
jae
in
cltd
sub
and
cmp
mov
lods
pop
sbbb
les
cltd
inc
inc
sbb
sub
push
cmp
leave
mov
adc
adc
push
ret
and
xrelease
push
cmp
leave
push
adc
cmc
ss
push
push
add
clc
jnp
mov
enter
jge
iret
arpl
add
aad
ljmp
imul
out
int
mov
xchg
hlt
xchg
test
xchg
xor
mov
ret
pop
out
das
pusha
pop
js
mov
mov
loopne
insl
imul
push
sahf
lods
sub
fdivs
inc
xchg
cwtl
and
jle
mov
mov
pop
jp
lahf
inc
jmp
and
mov
cmp
cmpsl
arpl
mov
jae
orb
aas
ljmp
scas
lock
fcomi
jne
inc
and
ret
stos
in
inc
mov
pusha
dec
or
nop
jb,pt
dec
sub
movsb
cmp
lcall
mov
push
nop
data16
add
testl
xchg
add
sub
sub
jae
xchg
test
insb
cmc
arpl
add
sub
jge
mov
sub
fprem
rcr
push
mov
jle
popa
cmp
mov
int
or
loopne
mov
sbb
faddp
xor
in
push
jmp
das
sbb
fwait
test
sub
ret
mov
test
inc
shlb
outsb
js
cmp
js
xchg
stc
lcall
loopne
inc
sub
jne
jae
insb
adc
cli
insb
push
addr16
mov
insb
pop
fwait
les
lret
push
push
outsl
sub
jnp
pushf
cmp
repz
adc
dec
cmp
push
mov
cmp
or
lds
sub
sbb
mov
in
dec
pop
push
dec
or
enter
pop
sahf
and
jbe
mov
push
aaa
add
adc
dec
scas
cmpl
js
or
pop
xor
lcall
and
je
push
push
mov
into
iret
sub
adc
sti
xchg
jbe
cmp
daa
mov
sub
push
out
fwait
lods
mov
inc
mov
mov
stc
test
xor
xlat
orl
data16
mov
stc
movsl
mov
mov
enter
ja
xchg
lret
pop
dec
loop
cmc
jg
xchg
mov
outsb
jmp
scas
sbb
je
clc
jb
cmp
testl
jmp
sub
add
mov
lret
outsl
movsb
adc
hlt
je
lods
ret
fnstcw
pop
pusha
jmp
xchg
dec
enter
popf
shlb
mov
jbe
orb
jle
jp
inc
lahf
push
jo
repnz
xor
outsb
scas
lret
mov
out
sub
iret
jmp
mov
inc
lcall
push
push
les
cmovnp
xor
push
je
lods
xchg
in
jl
es
mov
push
cli
sub
int
or
xchg
or
ds
add
xor
sar
xor
lret
xchg
enter
inc
push
cmc
inc
pop
jo
int3
aad
jno
mov
js
sub
lods
xlat
in
adc
sub
inc
mov
mov
sub
sti
xor
inc
shll
lret
lahf
rep
mov
adc
sti
nop
lcall
jns
fwait
mov
lods
test
sub
shrl
jmp
daa
decl
xchg
adc
xchg
sub
mov
dec
int
sub
in
lds
sub
cmp
jge
pusha
jle
loopne
cld
mov
cmc
sub
cmp
xor
inc
and
in
lahf
loop
rcpps
mov
adc
and
jnp
ret
nop
mov
pop
or
add
sub
xchg
mov
movb
pop
pop
dec
int3
mov
mov
push
scas
in
mov
daa
sub
dec
lods
mov
mov
addb
mov
int3
pop
mov
push
jns
movsb
int3
adc
inc
sbb
incb
push
add
loopne
js
int
mov
sbb
sub
cmpb
test
inc
dec
in
clc
mov
mov
pop
outsb
mov
dec
rorb
pop
mov
cs
bound
xor
inc
sbb
mov
add
and
lret
cltd
or
xchg
int3
scas
xchg
int
mov
mov
ljmp
dec
mov
mov
jge
adc
mov
jge
pop
scas
stos
and
push
or
or
xor
iret
pusha
pop
cmpl
xlat
push
lret
pop
rcrl
ja
xchg
sub
loopne
mov
inc
es
cmp
jl
repz
sub
and
xlat
push
jo
movb
out
jno
xor
adc
add
push
popf
push
push
pop
adc
popf
mov
imul
leave
icebp
push
cltd
and
mov
xchg
pop
bound
aas
movsb
or
pusha
daa
inc
daa
sub
negb
adc
js
es
xchg
dec
xchg
jns
or
bound
adc
cmpsb
enter
pop
lcall
aad
mov
mov
pusha
inc
push
xlat
inc
push
jno
mov
push
lret
pop
pusha
push
aad
dec
dec
stc
pop
xchg
mov
pop
mov
ja
inc
insl
push
pop
out
in
in
pop
push
sbb
shlb
sbb
push
inc
fisubl
push
pop
sbb
shl
js
sahf
cli
xchg
pop
enter
add
pop
cmp
mul
push
sbb
ficompl
push
mov
xchg
sub
aaa
mov
push
push
pop
dec
xor
xchg
cld
jbe
cmp
sub
js
xchg
mov
into
roll
sbbl
jmp
into
fldenv
daa
xchg
jns
rcrl
mov
in
pop
pop
push
jg
lods
and
sub
jo
out
push
loop
or
insl
dec
or
shlb
xchg
xor
push
jmp
mov
clc
int
insb
or
inc
ss
loop
dec
lcall
lock
inc
cmpsb
jle
sbb
dec
sahf
or
push
mov
adc
xlat
xchg
adc
adc
xor
sub
mov
data16
dec
add
xor
jl
repnz
mov
cmp
inc
add
jmp
xchg
and
xor
pop
into
ds
flds
out
rcrl
daa
pop
and
test
in
iret
leave
arpl
jo
pop
mov
mov
jp
out
dec
sub
daa
cltd
les
and
inc
xor
xchg
fistps
in
ret
call
and
push
and
test
jae
in
ficomps
mov
jns
cmp
repnz
jns
sahf
in
inc
cmp
mov
sbb
dec
push
out
loop
ret
pop
xchg
in
inc
mov
sub
jecxz
lock
fwait
popf
inc
mov
popf
imul
or
sub
jp
cwtl
data16
imul
ja
mov
lods
cs
jge
jbe
inc
add
pop
repnz
nop
dec
mov
cmpb
push
je
jge
jno
inc
cmp
jo
aad
popa
mov
push
pmaxsw
xor
jle
push
push
enter
decl
loop
fsts
pusha
mov
pusha
out
dec
inc
dec
xor
imul
loope
stc
sbb
mov
imul
pop
mov
mov
test
ret
aas
dec
cmp
mov
mov
inc
pop
xchg
pushf
shlb
sbb
popf
js
dec
jae
xor
rorl
pop
xlat
jle
mov
jae
sbb
or
push
ret
mov
jmp
hlt
out
push
xchg
mov
inc
mov
popf
cmc
mov
lods
and
jo
or
sub
je
and
mov
imul
dec
xchg
daa
xchg
push
sbb
xchg
jmpw
push
aaa
xor
lea
mov
adc
add
sbbl
sbb
popa
insl
mov
inc
dec
mov
sbb
sbb
pslld
add
decl
lahf
mov
push
cltd
bound
outsb
aam
xor
sub
push
aas
pop
inc
push
or
ds
rcll
jnp
sub
dec
sub
sahf
rcrb
imul
and
mov
xchg
ss
fsubl
sbb
ror
inc
xlat
adc
lret
insl
xor
add
xchg
int
mov
ret
stos
mov
and
sub
movsl
in
xchg
add
repz
cmp
sbb
insb
mov
movsb
or
sbb
jmp
xchg
imul
ret
imul
shlb
xchg
xchg
mov
mov
pushf
lret
and
imul
into
cs
fwait
mov
add
push
lret
in
or
add
fldl
jmp
iret
call
xchg
sub
shl
data16
add
test
shll
and
cmp
and
inc
dec
scas
in
inc
cmpsl
xchg
cmp
test
push
inc
out
aam
jae
xor
cltd
jge
in
mov
pop
sbb
out
dec
ss
xor
jae
sub
ljmp
inc
test
das
clc
popa
adc
daa
fstpt
stos
cmp
pop
sbb
mov
ss
es
pop
rorl
cmp
or
mov
pop
jg
sbb
pop
push
sub
jle
inc
insl
lret
jmp
and
scas
rol
mov
adc
ret
dec
scas
scas
pop
xchg
nop
sti
sbb
sahf
xchg
mov
cwtl
pop
or
xor
mov
je
inc
xor
mulps
movsb
fdivrl
mov
fcmove
adcl
sbb
sti
xor
loopne
mov
cltd
pushf
mov
and
es
or
jmp
adc
inc
data16
sub
loope
push
into
subl
add
cltd
mov
mov
gs
test
or
int3
repz
sub
fistl
ret
movsb
add
push
enter
inc
and
cmpsl
pop
lea
push
mulb
dec
and
gs
cmp
es
loop
aam
out
js
inc
ja
pushf
mov
mov
mov
mov
stos
inc
sbb
push
mov
jns
cmc
arpl
adc
xchg
fsts
adc
insb
ret
sub
fstpt
cmp
xchg
lock
pop
mov
sbb
rorb
test
fcmovnu
popf
sti
mov
inc
cli
insb
add
pop
testb
sbb
std
cwtl
test
add
add
bound
int
fists
dec
js
push
lock
xor
es
clc
lods
jae
inc
xchg
push
jg
loop
xor
sbb
push
pop
bnd
rcll
and
jo
mov
cli
xor
jb
mov
imull
xchg
mov
or
or
xchg
mov
pushf
repz
aas
push
push
jmp
add
movl
shl
pop
lahf
inc
push
push
mulb
mov
incb
mov
iret
inc
ja
pop
aas
add
mov
jo
push
bound
cmp
mov
xchg
push
ret
pop
shlb
shlb
repz
push
cli
push
fnsave
jl
push
push
mov
xchg
outsl
ja
stos
fs
jo
cmp
jbe
pop
mov
jb
dec
in
sarb
ds
inc
std
xchg
mov
cmp
sub
sub
mov
movsl
inc
hlt
das
push
push
addl
and
loop
aas
cld
jbe
iret
push
pop
cmp
or
idivl
pop
rorb
repz
imulb
call
mov
sub
fnstsw
shlb
add
bound
lock
pop
push
fldl
xchg
sbb
xchg
ror
adc
mov
fstps
in
je
cmpl
or
jno
sbb
add
popa
mov
or
scas
mov
mov
pop
iret
xlat
push
jae
ljmp
pop
mov
cmpsb
and
xchg
jno
jns
data16
test
mov
fisttps
ret
sub
mov
inc
cs
pop
lods
in
xchg
cmpsl
jnp
in
test
mov
or
fidivl
sub
in
xchg
in
sub
xlat
icebp
aam
xchg
xchg
aam
sti
pop
daa
lret
dec
xorb
xabort
push
or
aam
flds
and
add
or
lahf
xor
jb
or
movsl
cmp
xchg
mov
sub
push
xchg
sbb
stos
mov
shlb
mov
mov
pop
je
pop
orl
xor
ret
nop
sbb
insl
andb
mov
sub
pop
mov
pop
imul
jmp
add
add
push
mov
mov
test
repnz
push
jge
out
cmpsb
fdivr
ss
dec
ds
in
dec
test
movsl
leave
mov
pushf
xchg
pop
gs
cmovbe
inc
dec
movsb
scas
into
pop
cmp
aas
sarb
je
fnstsw
xor
fisubrl
movsb
outsl
pop
cmp
jne
dec
stos
jp
cwtl
mov
mov
ffree
cmp
fldcw
mov
and
jge
cmpsb
jl
mov
ja
test
xchg
lahf
mov
xor
loope
xchg
inc
xchg
sbb
test
les
not
push
scas
jle
in
inc
fwait
mov
add
sbbl
and
lock
add
pop
mov
xor
xchg
cmc
push
into
outsb
and
mov
mov
adc
sub
lock
xchg
out
stc
inc
imul
sbb
mov
outsb
push
and
out
mov
lahf
mov
ja
xlat
sub
jg
jge
inc
jg
add
in
test
add
mov
test
in
roll
repnz
lahf
stos
push
sbb
stos
cmpsl
repz
rcr
and
mov
xor
pop
rcr
incb
cmp
repnz
insb
out
aam
cmp
sarb
pop
sahf
icebp
sub
out
sbb
xchg
icebp
mov
in
mov
mov
cli
adc
or
loopne
adc
cmp
push
notb
adc
jge
xor
fwait
inc
mov
xlat
repnz
jno
das
xchg
out
adc
jg
adc
pop
pushf
push
mov
jg
or
es
pop
lods
in
out
adc
stos
outsb
stc
mov
in
mov
aas
shlb
sub
sbb
outsl
out
movsl
xor
cmp
fisubs
mov
leave
movsb
pop
ret
ds
cmp
xor
push
pop
outsb
stc
push
jns
clc
push
fildll
jmp
push
sahf
and
mov
out
lret
dec
sbb
jmp
push
es
loop
mov
mov
mov
cwtl
insl
jbe
mov
mov
cmp
icebp
jmp
cmpsb
pop
clc
xlat
aas
cmp
mov
sti
inc
jae
mov
jmp
mov
cmpsb
add
in
jbe
jp
cmp
fs
loop
sbb
mov
ffreep
push
jecxz
cmc
add
repnz
fnsave
jno
pusha
movsl
push
add
lcall
cld
inc
ret
jnp
xchg
nop
and
scas
movsb
mov
mov
repz
mov
and
mov
jle
add
jg
pop
pop
push
mov
xor
mov
lock
dec
and
ljmp
dec
fisttpl
mov
pushf
in
adc
mov
adc
xchg
jp
cmp
lahf
rcrb
mov
xchg
lahf
in
sbb
dec
cmpsb
popa
fbld
lahf
mov
pop
pop
xor
mov
sbb
cmp
mov
dec
cld
or
rol
out
int3
out
sbb
cli
int
and
addr16
sbb
mov
or
cmp
and
mov
lods
cmp
lahf
out
pop
or
xchg
std
imul
popf
movsl
movsb
sbb
iret
rolb
and
and
sbb
fwait
movsb
fucomi
push
aas
dec
loope
jns
iret
jge
cmp
xchg
mov
imull
addr16
rclb
mov
adc
movsb
mov
inc
adc
shl
sti
adc
out
pop
out
pop
xor
cmp
mov
bound
xchg
aad
pop
sbb
xor
jb
stos
inc
movsl
adc
or
test
jmp
negb
mov
mov
js
lock
sub
cmp
test
cltd
add
addl
xor
pop
hlt
cmpsl
inc
shlb
addr16
inc
xchg
mov
test
sarb
mov
in
add
addr16
inc
into
call
or
leave
inc
andl
xchg
dec
fdivrl
lock
lret
jb
lods
sbb
pop
dec
adc
xchg
add
push
roll
add
jo
inc
fcmovb
inc
scas
dec
push
cli
cwtl
cmc
sarl
inc
mov
xor
mov
ljmp
mov
std
dec
fimuls
jbe
jo
jge
sbb
push
push
or
xchg
jmp
cmpsb
mov
dec
and
mov
sbb
cltd
aam
mov
idivb
sarb
mov
cmp
mov
add
inc
js
push
mov
movsb
out
popa
fs
adc
daa
push
push
mov
hlt
dec
scas
jg
cmc
cmp
push
idivb
jno
or
sbb
in
sbbl
xor
cmp
xor
out
xchg
pop
std
and
iret
sahf
mov
std
lods
pop
mov
test
stos
pop
inc
jnp
inc
pop
xor
cltd
jle
cmpsb
je
jo
rorl
sub
out
scas
lock
test
add
add
aas
shrl
adc
nop
notl
dec
mov
mov
xchg
lods
mov
sbb
xchg
roll
loopne
bound
and
add
mov
jecxz
sti
enter
call
push
lods
push
pandn
movsb
iret
lahf
mov
sub
sbb
in
sub
popa
mov
sbb
jns
iret
fcmovne
enter
in
loope
call
rol
inc
mov
cmpsb
ljmp
imul
fwait
and
add
data16
lock
orl
jle
push
push
pop
and
ss
jmp
div
test
cs
push
lret
adc
fiadds
dec
nop
outsl
or
out
icebp
cmc
and
jnp
jns
enter
pop
mov
xchg
cmp
push
repz
imul
jns
mov
or
dec
adc
xor
mov
gs
sbbb
mov
xor
mov
pop
push
rcrl
jno
data16
mov
out
dec
sbb
in
cmp
inc
out
xchg
pop
fs
cmpsl
int3
dec
jecxz
cmp
dec
mov
fisubl
sbb
out
aaa
mov
sar
ja
sbb
lret
es
xchg
mov
stc
xchg
mov
push
or
test
sar
std
jmp
inc
cmc
fcmovnbe
and
jno
jmp
lahf
fstpl
lret
daa
inc
ficompl
jnp
addl
lahf
mov
mov
andnps
mov
popa
push
cmc
rorb
int
inc
sbb
xor
mov
dec
out
shll
aas
repnz
and
xlat
scas
cwtl
jbe
data16
or
shrb
lret
aam
sbb
and
cltd
jl
movsb
stos
sbb
jge
xchg
les
pop
pop
les
aaa
outsl
mov
or
movsb
inc
fildl
adc
outsb
in
rorl
lahf
sub
mov
sbb
roll
pop
cmp
cmpsb
sbb
push
and
cmp
or
dec
adc
int
cmc
pusha
and
data16
les
data16
adc
xlat
repz
dec
adc
adcl
mov
push
xchg
mov
outsb
dec
out
sti
mov
and
push
sub
jmp
sub
jl
insl
xlat
adc
jno
xchg
test
adc
sub
xchg
xchg
xchg
mov
and
mov
xchg
jbe
adc
mov
shl
mov
add
pop
lea
or
inc
in
inc
push
and
aas
mov
andl
ja
pop
clc
mov
push
outsb
xor
jecxz
jmp
popa
movsl
inc
enter
sbb
out
sbb
mov
sub
out
mov
add
add
sub
or
cs
xchg
jns
ds
xchg
imul
out
int3
xchg
and
push
push
adc
fadds
sti
jae
cmpsl
popa
fisttpl
mov
rcrl
inc
push
pop
lea
and
pop
sub
sbb
pop
cmp
xchg
sub
mov
pop
fs
ret
test
dec
push
ds
adc
mov
fs
lods
inc
mov
shlb
popa
or
pop
wbinvd
pop
add
or
adc
mov
inc
and
and
daa
jg
xchg
xchg
adc
and
popf
hlt
mov
outsl
cmpsl
xchg
cmpl
movsb
sbb
addb
inc
or
mov
push
jge
stc
push
cli
lcall
je
add
mov
sbb
out
outsl
out
adc
pop
sti
inc
dec
jae
movsl
inc
fsubl
gs
arpl
jbe
hlt
or
pop
or
jecxz
repz
pusha
lret
add
rcrb
sub
jecxz
daa
push
js
sti
das
loope
out
out
jecxz
sub
mov
adc
push
push
out
inc
adc
xorb
push
bnd
popa
inc
mov
mov
pop
sbb
dec
clc
dec
mov
mov
movb
mov
sub
mov
pop
hlt
mov
in
lret
sbb
and
jge
data16
out
ret
mov
dec
stc
xlat
mov
inc
jg
xchg
push
push
mov
fcomps
adc
daa
dec
sti
sub
leave
jnp
mov
movsl
mov
les
dec
jno
pop
xchg
stos
mov
sub
mov
mov
shlb
cmp
repz
sbb
mov
mov
int3
fisubl
repnz
lods
leave
pop
icebp
add
stc
cmpsl
or
cltd
fnsave
adc
ficompl
dec
popa
mov
jmp
dec
std
push
mov
mov
mov
sub
mov
ja
mov
aas
mov
xor
xchg
scas
mov
and
xor
out
mov
push
and
das
mov
or
jl
jmp
push
mov
sub
dec
sbb
fs
push
cmova
xor
fnstcw
cwtl
sarl
bnd
mov
cwtl
sub
lahf
add
fidivrl
jl
jo
cmpsl
nop
popf
mov
addr16
es
das
call
and
jnp
push
lock
sahf
mov
and
pop
test
jl
xor
loop
in
mov
negl
lret
push
aad
xor
div
iret
hlt
push
add
xor
inc
xor
push
mov
mov
mov
pop
icebp
add
insl
fnstsw
and
imul
cmpsl
lret
jle
dec
pushf
mov
sbb
aas
xchg
mov
jae
and
sbb
adc
dec
aad
aas
and
push
jg
daa
xchg
mov
xlat
inc
sub
lods
push
stos
das
shrl
negl
pop
test
sbb
in
int
lods
dec
test
test
sub
cmp
pusha
scas
fmuls
into
adcb
cld
cli
or
call
out
add
mov
addr16
lods
adc
xchg
sub
push
xchg
jge
push
dec
ja
mov
scas
movl
idivl
inc
and
sahf
xchg
loopne
mov
push
adc
inc
cmp
mov
add
add
cmp
mov
xor
mov
xchg
cmp
pop
sbb
pushf
hlt
test
add
lcall
dec
aaa
sti
cmc
outsl
lock
daa
add
cli
inc
cmc
int
outsl
and
sahf
push
push
mov
dec
imul
test
mov
mov
pushf
sub
add
xor
xchg
dec
mov
cli
push
sub
mov
in
push
rcr
arpl
cs
enter
sub
sbb
mov
stos
sbb
mov
adc
call
test
xchg
dec
mov
iret
and
or
daa
lret
or
pop
gs
test
ss
adc
pop
mov
adc
ret
fsubrs
dec
stc
sahf
int
lds
in
frstpm(287
aam
mov
hlt
aaa
leave
dec
aaa
and
int3
mov
and
lret
xchg
jmp
mov
lcall
pop
jmp
aad
lcall
xchg
adc
sahf
outsl
les
sar
sub
add
add
cli
sbb
lods
jnp
push
in
mov
hlt
add
adc
divl
arpl
cmp
add
mov
mov
int3
cwtl
int
sbb
jo
push
clc
cmp
nop
or
outsl
cs
inc
inc
addr16
mov
xor
jp
ds
lods
fsub
pop
data16
jge
jo
jl
adc
test
sbb
xchg
mov
loop
cmpb
add
inc
inc
mov
xor
mov
push
adc
adc
push
or
jno
jne
push
or
addr16
ret
and
nop
push
push
cmpsb
dec
and
repz
insb
lock
jmp
scas
lock
xor
inc
sti
pop
jecxz
das
inc
pop
jp
mov
aaa
push
lods
pop
subb
repnz
xor
mov
cmp
xchg
mov
cs
insb
lret
pop
repz
sub
mov
cmp
pop
rorb
jns
cli
dec
sub
xor
aam
xor
data16
test
adc
andl
in
xor
sbb
push
sub
shl
mov
fimuls
cwtl
adc
mov
jp
icebp
xchg
rcll
mov
mov
sub
loope
add
fsubs
push
cmp
int3
out
dec
dec
or
sahf
adc
lea
xor
hlt
iret
jne
dec
xchg
dec
icebp
mov
push
or
je
xchg
mov
arpl
lea
dec
testb
and
lahf
mov
les
push
xor
sub
push
xor
xor
mov
das
and
push
jb
push
and
dec
insb
orl
sub
and
jge
mov
jl
mov
cmp
lret
rcll
stos
cmp
and
mov
or
and
ljmp
sbb
stos
repz
xor
mov
mov
movzwl
decb
push
pop
dec
push
xor
arpl
mov
cmpsl
cli
cs
in
add
push
xchg
dec
adc
jmp
jg
test
dec
sbb
lods
cmc
mov
data16
clc
jbe
adc
push
xchg
and
adc
jge
movsb
sub
int3
dec
jb
push
movsl
out
inc
jle
xchg
shl
gs
rorb
push
or
adc
push
jl
xchg
fsub
daa
sti
sarb
pop
pop
mov
sub
outsl
outsb
lock
stos
cmpl
dec
test
xchg
pop
scas
pusha
or
sub
jle
les
xor
je
repnz
gs
pmaxub
xorl
imul
pop
push
cmp
push
lcall
xchg
fistpl
loopne,pn
hlt
jp
xchg
cmp
cltd
out
mov
fsubrl
insl
testb
int
mov
shll
ss
rcr
jno
ret
arpl
in
cltd
out
mov
dec
lret
pop
test
pop
in
add
hlt
in
outsl
aas
mov
mov
icebp
xchg
data16
fs
out
inc
xchg
ret
push
js
lcall
or
pop
out
stos
xchg
and
ja
in
mov
aam
lock
xchg
lret
push
stos
sub
loope
std
add
jne
sbb
ret
jle
lret
add
js
aad
mov
mov
adc
pop
ljmp
ficomps
add
jb
push
rorb
and
sbb
lret
rcrl
mov
rcll
and
fistpll
stos
aam
xchg
out
push
loopne
flds
xchg
add
std
lock
push
sar
cli
xchg
add
and
dec
out
ret
shll
out
jns
mov
mov
mov
imull
jl
pop
test
sub
fsts
jno
out
mov
pop
add
ja
add
adc
xchg
cmpsl
scas
nop
pop
insl
mov
int3
shrb
lea
out
in
nop
and
jne
sub
inc
mov
push
clc
sub
adcb
test
ffree
in
pop
jae
inc
push
jge
lret
sti
mov
cmpsb
xchg
cli
in
sbb
jae
lds
mov
xchg
add
jno
add
or
add
or
jge
mov
cmpsb
jb
and
cmp
add
das
neg
xor
jg
adc
mov
dec
fnsave
scas
jmp
and
inc
sarb
or
dec
hlt
push
fidivrs
add
push
call
cmp
insl
in
subl
xor
sbb
imul
pop
lahf
add
inc
inc
imul
add
xor
push
cli
jmp
lock
ret
loop
into
push
sub
jbe
jge
adc
inc
and
mov
cmpsl
xor
dec
jne
inc
lods
jne
or
mov
mov
dec
and
mov
scas
jne
data16
xchg
into
inc
in
rclb
lea
outsl
or
mov
mov
sub
ret
adc
or
adc
jo
pop
or
mov
inc
mov
fwait
push
add
out
cmp
nop
jge
das
dec
fildl
xor
icebp
vpsubusw
adcl
scas
xor
mov
adcl
cmp
hlt
in
mov
test
insb
into
fnstsw
dec
xchg
cmp
insl
add
xchg
lods
cmpsl
ss
sbb
aam
pop
mov
mov
inc
mov
mov
and
mov
pusha
pusha
popa
or
add
test
xchg
dec
adc
mov
hlt
jl
mov
stos
pop
cld
sub
jne
push
scas
xor
cli
std
lret
pusha
push
and
sbb
mov
leave
xor
cmp
testb
dec
sti
mov
xchg
lock
jge
les
std
sub
xchg
push
dec
inc
pop
jg
gs
lret
fldl
enterw
mov
xor
sub
fisttps
mov
dec
pop
testb
ret
xchg
push
xor
hlt
cltd
adc
push
das
inc
cmp
sti
mov
repz
inc
jbe
mov
out
out
fildll
mov
jg
and
inc
push
jp
jnp
test
out
sub
aam
xor
and
or
xchg
or
popa
repnz
add
mov
inc
mov
es
fwait
rol
sbb
dec
out
roll
leave
mov
cmp
cli
push
mov
pop
mov
jb
add
int3
mov
adc
stos
nop
sbb
sti
repnz
outsl
sub
insb
pop
adc
into
cmp
std
jecxz
jmp
call
adc
mov
jle
lods
inc
in
push
lods
ftst
out
repz
imul
add
adcl
inc
add
or
xor
in
lret
leave
pop
adc
jbe
xchg
mov
insl
cmp
loop
aad
add
in
bound
fucomip
test
data16
jecxz
fsubr
xor
mov
push
jp
std
fsubl
dec
jmp
mov
in
lret
mov
aam
add
testl
jne
ljmp
std
xchg
cmp
xor
popa
lods
cmp
add
pop
inc
inc
jle
dec
pop
and
dec
inc
in
insb
pop
xchg
iret
and
mov
add
pop
cmp
js
add
xchg
jp
in
xor
cmpl
pop
jae
jae
aam
ja
insb
nop
cli
outsb
sti
shl
data16
ljmp
call
jbe
jno
sub
mov
out
dec
cmpsl
test
add
mov
push
enter
xchg
add
rclb
daa
test
cmpsl
aas
ss
fldenv
orb
cmp
xchg
push
dec
adc
jo
stc
rcrl
rorb
push
mov
std
test
popa
out
dec
jne
add
fmul
xor
pop
insl
in
lahf
cmp
add
fmuls
push
dec
mov
int3
js
pop
sti
mov
push
pusha
inc
icebp
sbbb
je
iret
cmp
pop
aaa
mov
adc
pop
ljmp
shll
inc
mov
vsubpd
xorb
aaa
push
dec
or
out
scas
sbb
in
cmp
sub
adc
lret
fnsave
inc
or
xchg
or
xchg
imul
popa
jb
lods
dec
hlt
ljmp
xchg
enter
mul
xor
sub
adc
lahf
xchg
xor
fs
xchg
inc
lods
or
adc
sub
xor
shlb
sbb
lahf
dec
in
pop
outsl
xor
hlt
push
enter
daa
cmp
xor
jle
mov
pop
clc
mov
and
xchg
add
shlb
pop
test
nop
dec
leave
cmpsb
jns
lock
jne
lret
pop
and
adc
sub
or
stos
lahf
mov
fs
sub
cltd
cmc
dec
fxch
adc
push
xor
filds
scas
and
in
jne
adc
lods
or
or
je
jge
clc
repnz
hlt
sbb
sub
cmp
daa
in
inc
mov
adc
jp
repnz
push
sbb
rorl
jb
cmp
mov
icebp
je
inc
sub
clc
divb
jle
sub
icebp
jmp
out
sbb
and
dec
notl
mov
mov
out
out
test
cmp
pop
cltd
jp
push
cmp
loope
sub
call
cmpsl
pop
sub
sbb
xor
xor
mov
mov
scas
addr16
shll
sbb
xlat
lcall
sahf
sbb
mov
das
mov
jae
mov
hlt
in
and
adc
hlt
aaa
jne
int
cltd
xchg
dec
cld
mov
sub
popf
jmp
loopne
xor
sti
mov
xlat
pop
pop
les
std
aaa
or
and
push
xor
xor
add
aam
ljmp
mov
fldenv
adc
sti
add
leave
mov
pop
jnp
xchg
rorb
movsl
mov
aas
nop
mov
test
scas
sbb
aaa
ds
fidivs
sbb
adc
dec
or
xor
cmp
sbb
enter
das
xchg
jne
push
jae
pop
lock
addr16
mov
lods
movhps
leave
test
sbb
rcrl
sub
jbe
xor
mov
cld
push
clc
test
fcomi
and
pop
shrb
ret
add
fistpll
std
ds
test
pop
lret
cmc
inc
xor
rcrb
pop
test
ret
arpl
int
xchg
pop
mov
mov
mov
subl
mov
dec
adc
pop
push
loope
cmp
pop
pushf
stos
jb
out
out
testb
push
js,pn
nop
shll
mov
and
pop
pop
es
roll
in
loope
inc
sub
sbb
subl
add
mov
jbe
enter
jp
pop
sub
loope
cltd
or
aad
or
pusha
popa
xlat
mov
mov
push
mov
scas
cli
imul
push
inc
jmp
mov
test
cld
mov
sahf
repz
lea
pushf
inc
das
mov
xor
ret
adc
lcall
sub
shl
sub
cwtl
mov
ljmp
call
mov
add
dec
sub
sub
sti
and
int
sub
jmp
xor
mov
scas
in
cmc
andl
push
fnstcw
scas
push
outsl
xchg
lock
push
das
dec
fdivs
or
jnp
and
out
sbbl
stc
push
cmpsl
cmc
sbb
sbbl
loope
and
adc
daa
fcomps
mov
xor
sub
jp
cmpsb
mov
and
aaa
sbb
sbb
pop
push
std
mov
pop
in
sub
ss
xorb
push
pop
cltd
aaa
or
sbb
push
pop
or
cmp
mov
cmp
ffree
add
cmp
cmp
lods
aam
repnz
push
dec
dec
and
adcl
dec
add
jl
scas
xor
sbb
add
sbb
pop
jge
jge
and
enter
or
add
or
mov
cmp
fldenv
addr16
movb
cmp
pushl
iret
xlat
cmp
cmpsb
push
scas
clc
mov
jecxz
adc
or
stc
std
xlat
xor
mov
mov
push
hlt
pop
in
lret
out
out
les
add
cmp
and
movsl
clc
adc
addb
mov
sbb
bound
push
test
dec
imul
scas
aaa
fidivl
ss
cmc
adc
and
fistpl
mov
idivb
std
dec
xlat
clc
and
mov
inc
idivb
mov
or
ret
pop
mov
repz
insl
add
call
mov
bound
outsb
jecxz
xchg
imul
lret
test
inc
fdivl
int
fldenv
ljmp
or
rcrb
xchg
call
or
xchg
xor
mov
jbe
and
testb
jp
lock
cmp
add
xor
fwait
mov
push
mov
aad
xrelease
push
mov
mov
cmp
pop
in
movsb
hlt
dec
jne
ja
pop
push
hlt
cld
cld
into
mov
inc
std
inc
pop
sbb
inc
push
cmp
and
repnz
mov
adcl
jle
pop
dec
imull
shlb
pop
sbb
push
jge
mov
xor
insb
decb
pop
repz
aad
std
push
mov
iret
xor
ret
ss
jmp
outsb
add
stos
rolb
sub
mov
or
sub
push
jge
fwait
push
fnstsw
shll
inc
repnz
cmp
stos
out
hlt
in
aam
fistpl
loop
add
xchg
cmp
adc
fdivl
ret
fiaddl
and
incl
mov
dec
adc
lret
shl
add
or
pop
sub
jp
leave
cld
mov
int
pop
out
sbb
pop
sbb
frstor
push
jbe
sbb
sti
shlb
lds
xlat
dec
mov
inc
pop
sbb
sbb
push
pop
mov
popa
pop
sbb
pop
sub
rcl
ret
out
pop
insb
out
movsl
xlat
inc
xchg
sub
shrl
stos
jmp
fs
sub
xchg
shr
das
add
sahf
or
sub
nop
add
iret
shrl
out
pusha
mov
es
adc
lret
push
cmp
mov
adc
push
mov
addb
dec
mov
sti
sub
out
loop,pn
orl
push
xor
jg
sub
sub
add
push
std
std
sub
in
iret
jno
in
xor
movsb
xchg
idivb
fimull
shr
mov
cmp
in
repz
lock
popa
cmp
stos
mov
xor
add
pusha
fistps
jge
imul
ss
addr16
stc
push
das
xchg
jae
imul
mov
lret
add
adc
fwait
or
mov
sti
into
enter
stc
xchg
and
imul
rclb
fldl
out
mov
cmpsb
ret
int3
je
movsl
popf
cmp
mov
test
jl
add
mov
in
mov
cs
cmp
insl
pand
or
mov
push
add
daa
test
add
or
test
push
shrb
mov
scas
ds
and
cmp
vmovshdup
lret
jp
js
xchg
repnz
adc
scas
and
fcmovnbe
dec
and
jmp
sbb
and
in
push
adc
and
icebp
test
dec
aaa
cmp
sbb
dec
jle
adc
push
fnstcw
push
fdivs
xor
push
or
movsb
inc
mov
push
in
xor
cmp
push
popa
push
sub
imul
les
add
enter
fnstcw
cmc
shl
jb
sub
mov
mov
arpl
sub
fcoms
loope
jno
fiaddl
xor
mov
dec
pop
push
cltd
in
pop
xchg
pop
lods
mov
jg
or
push
mov
cmp
xchg
ljmp
fisttpll
inc
scas
jmp
aaa
inc
push
fsubrs
xchg
mov
push
or
negl
dec
movsl
adc
ret
int
addr16
mov
lods
jmp
sub
adc
mov
mov
addr16
daa
ret
and
movsl
stos
or
lock
mov
std
movsb
cmp
repnz
inc
aam
lldt
pop
and
ret
xchg
cli
mov
loope
lea
dec
cltd
mov
mov
pop
xchg
stc
das
nop
lea
fmuls
out
pushf
cmpsb
lea
in
pop
and
or
arpl
mov
xchg
mov
fidivrs
adc
cmpsb
pop
add
out
int3
push
fldenv
lret
pop
jmp
cltd
xor
mov
insl
fldcw
outsl
sbb
sub
sahf
jb
adc
cmp
std
push
jnp
sbb
xchg
xchg
xchg
push
out
scas
inc
or
mov
inc
xor
xchg
add
jecxz
mov
xchg
pop
pushf
jecxz
es
mov
dec
and
add
pusha
stos
add
dec
insb
fcomip
lds
mov
jb
inc
jbe
jl
shlb
push
std
push
jnp
sbb
int3
and
out
mov
in
sbb
lgs
int3
inc
sbb
push
dec
mov
mov
ret
lcall
dec
inc
pushf
or
mov
push
imul
inc
fwait
xor
rorb
xchg
pop
or
call
dec
call
gs
sub
dec
in
cmp
mov
in
int3
jno
addl
mov
xchg
adc
xor
xchg
stc
stos
push
adc
clc
sub
add
mov
dec
mov
nop
or
pop
sub
std
bound
add
sbb
jecxz
push
out
cwtl
movsb
push
push
mov
pop
insb
insb
lock
jl
push
or
outsl
mov
xchg
scas
push
es
xlat
dec
lock
push
sbb
addr16
mov
jbe
adc
cmp
inc
sub
mov
cmpsl
jns
lret
cwtl
push
jmp
push
scas
aam
push
pushf
lret
clc
jnp
hlt
cwtl
scas
sub
cmp
mov
aas
dec
jnp
fidivs
sub
cwtl
les
subb
jmp
sbb
cmp
pop
movsb
std
ja
leave
insl
call
test
ljmp
jp
xchg
cmc
add
pop
clc
insl
popf
sbb
ds
mov
mov
test
inc
test
mov
stc
cmpsb
mov
inc
pop
cmc
xor
dec
loope
push
xor
fisttpll
dec
dec
cwtl
in
fnstenv
mov
adc
mov
or
pop
sbb
and
movl
push
and
or
mov
movsb
jnp
add
sahf
dec
es
jns
mov
fucomp
loopne
xor
jno
mov
push
aad
ja
into
adc
cmc
inc
push
pop
aaa
cmpl
loopne
aaa
repnz
sbb
into
cltd
mov
pop
test
mov
xchg
adc
das
ja
push
clc
fwait
jmp
test
out
pop
pusha
add
and
rclb
dec
push
imul
and
cli
sbb
leave
push
leave
pop
pop
repnz
cvttps2pi
arpl
adc
jo
mov
sti
adc
movsb
imulb
cvttps2pi
out
shl
mov
and
and
int
out
loop
rclb
adc
test
jae
xor
push
adc
mov
mov
out
fmuls
notl
push
sbb
sbb
add
xchg
aad
out
mov
jge
lods
push
mov
add
adcb
cmp
or
enter
insl
lret
ja
add
cld
std
or
outsl
push
inc
xchg
setne
cmpsl
sub
add
xchg
rorb
jbe
sbb
xor
add
pop
out
mov
fstps
nop
flds
jbe
jp
popf
mov
jg
push
or
mov
xor
lret
xor
das
add
xchg
rorb
xchg
xor
sub
jecxz
mov
push
inc
pop
pop
lea
sub
sub
ret
push
xor
adc
add
xor
add
fs
movsb
jl,pn
ja
cltd
fcomps
mov
imul
inc
hlt
in
cmp
pusha
sbb
adc
jno
xchg
add
lock
insb
and
cmc
adc
jg
ftst
clc
in
or
dec
icebp
cmpsl
push
xorb
pusha
call
pop
hlt
rolb
inc
mov
add
pop
inc
cmc
xchg
jecxz
mov
call
lcall
mov
dec
jo,pn
mov
cltd
push
jecxz
dec
mov
xchg
das
ret
notb
xchg
mov
int
cli
test
shll
test
pop
in
sahf
cmpsl
scas
stos
adc
js
pop
ficomps
inc
add
iret
inc
mov
sbbl
cmp
loope
mov
lea
add
sbb
aad
add
mov
test
jbe
into
add
mov
lret
cli
mov
push
lock
dec
sub
jo
insl
push
call
xchg
and
les
sbb
dec
pop
sarl
das
adc
aad
jnp
dec
mov
sbb
shll
aaa
pop
sarb
daa
mov
dec
mov
adc
clc
push
stos
jnp
sub
sbb
xchg
jne
mov
dec
out
push
mov
pop
cmp
xchg
mov
and
xchg
es
xchg
mov
mov
sub
inc
jp
popa
xchg
or
push
aas
lds
dec
fimuls
push
xchg
and
add
popa
mov
test
and
es
cmp
clc
push
jp
scas
cmp
js
dec
sub
pop
jnp
xchg
ljmp
les
pushf
pop
lret
sub
repz
cmp
mov
or
adc
inc
add
cltd
xchg
and
enter
inc
adc
cli
daa
ds
scas
test
cltd
adc
loopne
xchg
and
scas
add
jbe
jle
fdivr
or
xchg
push
jmp
mov
push
movd
xchg
rclb
call
js
shll
xor
dec
xor
or
test
jne
lods
icebp
inc
push
cmp
xchg
lret
sbb
outsl
leave
xlat
test
int
dec
enter
inc
mov
sub
test
clc
push
mov
adc
mov
rorl
pop
stos
mov
ljmp
call
aad
pop
cmc
jbe
in
movsl
pop
es
ret
add
es
shrl
cmpb
aaa
int3
xchg
dec
sbb
xchg
sbb
pop
jne
push
or
jge
cli
nop
jmp
rcrb
shlb
push
xchg
push
push
add
je
xchg
push
sarb
cmp
js
test
mov
mov
js
movsb
lret
jbe
loop
int3
and
mov
lods
lret
jnp
test
push
gs
fisubs
clc
mov
jge
adc
pand
xchg
ss
nop
daa
add
sbb
push
ss
lret
pop
or
fiaddl
pushw
ficoml
xor
es
ds
xchg
roll
imulb
ljmp
jge
push
out
sti
scas
mov
cmp
sbb
test
ficoms
fnstenv
adc
lods
ret
cmpsb
xchg
lods
daa
bound
jecxz
dec
adc
push
test
aas
xchg
mov
jg
or
shrb
icebp
call
xor
xchg
cmp
push
rcrb
mov
mov
subb
and
rcrb
mov
sbbb
fs
das
jg
adc
les
sbb
icebp
loopne
sbb
mov
sbb
dec
fmull
dec
add
adc
addr16
push
add
push
mov
cmp
lods
stos
outsb
call
mov
sbb
xor
ljmp
div
pop
mov
sub
cld
adcl
out
imul
sarb
sbb
push
scas
data16
jge
add
sbb
xor
stos
and
mov
orb
ret
popf
xchg
in
mov
loop
out
int3
pop
add
daa
dec
orl
test
testl
mov
cmpsb
pusha
test
xchg
out
push
xchg
idivl
mov
je
orl
push
sbb
jne
jmp
addr16
rorb
or
push
cltd
jle
or
inc
sbbl
into
sbbb
dec
mov
xor
lods
iret
aaa
jne
leave
xchg
test
iret
bound
jbe
xor
sub
xchg
test
xchg
jl
shrl
bound
imull
in
xor
sbb
mov
rcl
repz
daa
es
rcr
lds
push
add
daa
scas
mov
repnz
mov
test
ficoml
movsl
in
aas
enter
add
mov
lahf
jo
pop
push
mov
cs
and
std
mov
dec
sub
cld
addb
in
fs
or
jecxz
pop
pop
fidivrs
bound
inc
outsl
jp
jg
push
repnz
shlb
pop
pop
aaa
stos
mov
push
pusha
clc
adc
fcoml
sub
add
les
outsl
sub
imul
sub
pushf
sahf
lahf
add
fsubrl
clc
cmc
jns
xor
popf
loop
add
stos
xor
mov
ljmp
push
outsb
cmp
hlt
push
lock
sahf
mov
mov
scas
cwtl
mov
daa
mov
xorl
push
or
lds
cmpsl
jns
mov
push
sbb
scas
daa
enter
and
in
xor
ret
ljmp
mov
push
imull
gs
or
inc
mulb
scas
cli
pusha
in
cmpsb
shr
add
scas
mov
sahf
or
int3
xchg
scas
lcall
stos
addr16
fsubr
out
int
pop
xchg
lds
mov
insb
mov
cmc
push
in
pop
cmc
loop
sti
stos
mov
dec
shrl
inc
mov
rorl
dec
cli
stc
pusha
dec
adc
lds
jb
mov
pop
or
into
mov
imul
inc
cmpsl
xor
sbb
pop
jl
xchg
arpl
inc
lcall
xor
xor
pop
fisttpll
cmpsl
repz
in
rcrb
cmp
cmp
fisttpll
adc
jmp
sbb
pop
push
lret
ja
andl
fdivrp
add
repnz
jne
pop
cmp
pop
jp
cmp
mov
test
mov
jge
cmp
or
add
arpl
pop
mov
fdivp
movsl
mov
imul
push
loope
test
adc
mov
sub
jno
xchg
dec
or
adc
jno
jnp
sbb
and
dec
jae
test
lods
push
mov
xchg
loop
mov
and
pop
lds
jg
mov
fdivrl
dec
xchg
cmpsb
in
pop
fimull
push
mov
imul
out
mov
loop
cmp
cmpsb
jg
das
sahf
xchg
test
nop
pop
push
aas
js
xor
bound
lahf
mov
mov
push
data16
pop
aad
add
xchg
sub
mov
data16
sbb
mov
test
cmp
bound
icebp
lcallw
lret
xchg
sub
xchg
mov
mov
int3
lods
fdivs
dec
and
add
in
pushf
pop
out
xchg
push
fbld
ror
jg
add
mov
lcall
sbbb
mov
insb
popa
jae
push
out
shl
outsl
jg
jmp
cmp
mov
mov
clc
stos
popf
inc
pop
mov
insl
or
and
push
lock
xchg
pop
fstl
mov
lock
and
outsb
inc
inc
cmpl
push
int
mov
add
sub
int
dec
sbb
inc
jp
dec
sbb
outsl
push
fimull
and
adc
sbb
cmp
loope
mov
movsb
cmp
lcall
mov
pop
or
leave
inc
xchg
add
lret
mov
pusha
mov
fwait
jb
mov
pop
xchg
mov
fldt
pop
jnp
push
mov
jle
cli
rcrl
push
push
sub
stc
jbe
lea
shlb
jge
and
ljmp
sub
ret
inc
lret
add
hlt
int
pusha
xor
add
cltd
pop
mov
sub
dec
dec
or
cmpsl
add
icebp
cld
inc
pop
cmc
jnp
pusha
in
and
mov
test
enter
push
mov
mov
xchg
cld
out
mov
iretw
iret
xor
leave
push
pop
not
in
insb
call
mov
fadds
sbb
dec
xchg
cld
into
data16
jno
mov
insb
ret
jb
sub
sub
pop
repnz
xchg
sar
movsb
jne
into
adc
out
lods
jl
sahf
jb
mov
xor
repnz
fcos
xlat
ret
loope
es
or
daa
mov
jl
mov
mov
xchg
fisttps
dec
mov
cwtl
out
sub
fcomps
inc
and
int
in
cmpsb
xchg
cmp
das
jnp
jo
inc
mov
sbb
jle
lea
jbe
jg
and
loop
adc
cld
inc
ljmp
insb
sub
sahf
jns
movsb
cmp
loopne
xor
add
push
jnp
stos
push
mov
test
lods
imul
push
into
sub
divb
cmc
scas
flds
dec
xchg
and
cmp
inc
pavgb
or
xchg
add
aad
inc
icebp
movsl
push
push
inc
es
mov
adc
pop
adc
cld
addr16
cmp
fwait
inc
std
jno
outsl
stos
daa
lds
mov
xchg
xor
iret
inc
loopne
xor
popf
aas
nop
rcrl
pop
rcll
and
psraw
xchg
repnz
mov
negl
mov
dec
mov
mov
adc
fdivl
add
or
out
mov
jecxz
dec
inc
push
cs
cs
dec
in
jge
loope
pushf
adc
pop
movsl
scas
jmp
leave
ljmp
leave
xchg
clc
mov
bound
gs
and
lret
pop
sbb
fs
jnp
xchg
ret
and
push
cltd
imul
outsb
adc
dec
mov
mov
pop
xor
or
stc
push
test
cld
loop
jns
bswap
dec
push
shll
ljmp
js
cmp
sub
iret
lret
dec
mov
sti
sub
icebp
outsl
sbb
adc
xchg
out
sbb
or
imul
andb
jne
sub
mov
jg
sti
inc
cmp
out
inc
dec
ja
jge
and
sbb
xor
or
adc
cli
test
push
mov
mov
or
lahf
or
inc
pop
aad
push
jecxz
mov
loop
rol
ss
xchg
jecxz
loope
pop
arpl
sub
ficompl
and
jecxz
nop
notb
rcrl
xchg
pop
mov
xor
std
repz
pop
mov
enter
repz
dec
loope
xchg
xchg
in
push
add
sub
add
adc
in
mov
addr16
sahf
push
jb
enter
sub
and
cmp
and
xchg
je
add
push
movsl
xor
ficoml
and
push
repz
inc
and
loopne
adc
jo
or
cwtl
xchg
add
mov
inc
pop
mov
and
xchg
ja
xor
mov
adcb
pop
mov
jae
mov
adc
loop
pop
js
add
and
mov
inc
and
cli
adc
es
pop
lds
dec
adc
xor
fists
insb
hlt
mov
mov
subl
jbe
cmp
mov
push
loop
mov
fistpl
xor
push
inc
shlb
mov
mov
pop
out
and
sbb
test
andl
cwtl
idiv
sub
pusha
in
mov
dec
loopne
insl
pop
sub
mov
rep
inc
mov
das
or
or
sar
cltd
out
push
movsb
adc
ret
adc
shrl
nop
and
pop
dec
xchg
daa
jae
loop
aas
jbe
add
out
je
jge
lahf
fdivrs
repz
popf
daa
movsl
mov
jne
nop
pop
sub
mov
mov
adc
les
in
mov
sbb
out
adc
push
mov
jne
movsl
inc
jecxz
jg
lret
mov
rclb
push
stc
fidivrs
or
cld
mov
orb
sbb
cmpsb
and
out
arpl
push
xor
pop
mov
popf
fbstp
iret
inc
xlat
jns
push
loope
and
sbb
push
out
push
push
sbb
cmpsl
xor
dec
shl
ja
push
fdivp
and
outsl
xlat
jge
ret
and
sbb
neg
stos
fcomp
cmc
sub
aas
jmp
or
add
xchg
mov
int
fisttpl
sbb
leave
lds
inc
inc
or
dec
jl
inc
adc
lea
mov
mov
xchg
hlt
rcll
adc
sub
jle
enter
cmp
pop
in
lds
stos
xchg
addr16
mov
sar
mov
aam
fstpt
sti
aaa
xor
xlat
out
lds
dec
add
mov
daa
mov
shlb
adc
pop
xchg
adc
xchg
adc
pop
imul
xchg
jb
cmp
and
roll
sahf
enter
adc
test
or
mov
or
sti
xchg
mov
repnz
bound
pop
dec
not
xor
jmp
sti
xlat
cmp
mov
insb
jns
movsb
iret
outsl
andb
das
inc
outsl
test
mov
xchg
xchg
loopne
adc
movsb
sarl
lret
xor
xor
loope
mov
ret
push
fmull
sbb
lea
es
insb
pop
clc
jne
or
outsb
dec
shrl
mov
in
mov
lods
add
mov
push
pop
imul
imul
stos
push
mov
sub
pop
loop
in
in
xor
test
adc
xchg
nop
adc
cltd
call
out
out
fsubs
aam
xchg
inc
inc
xor
mov
or
out
adcb
xchg
sbb
xchg
sbb
sub
scas
or
push
cmpsl
mov
jae
xor
ds
cld
dec
cli
push
imul
dec
sub
in
out
cmpsb
sub
or
ss
in
cli
out
lods
cmp
dec
data16
pop
xor
xchg
sbb
inc
psubd
dec
rcl
aad
jle
pop
adc
js
ja
sbb
mov
test
inc
ja
movsl
into
and
popa
test
sbbb
dec
xor
adc
inc
and
mov
push
mov
and
push
out
les
mov
sub
jge
mov
ja
push
or
push
sbb
lahf
push
lds
leave
mov
mov
out
dec
ljmp
sub
clc
js
dec
adc
mov
int3
add
and
inc
sbb
xor
dec
cmp
popa
cmpsb
loop
mov
jno
xor
add
mov
std
jne
cmp
out
mov
mov
dec
rorb
mov
and
loop
add
push
outsb
xchg
mov
aad
pop
lret
mov
push
popf
dec
addr16
scas
sahf
loop
or
adc
nop
jg
inc
test
cld
fisubrl
inc
xor
sub
jecxz
ret
mov
add
pop
pop
rcrl
xor
lock
dec
ljmp
mov
sahf
mov
lret
pop
xor
les
dec
lahf
pop
mov
jle
or
fisubl
aas
movsb
out
dec
and
fs
add
std
loop,pn
pop
aaa
pop
mov
outsb
fnsave
push
jns
inc
lahf
les
inc
std
in
outsl
rcrl
mov
in
lock
out
stos
mov
mov
test
ret
stc
hlt
daa
xorl
lcall
or
pushf
inc
cmc
push
std
les
mov
stos
and
fwait
xchg
mov
int
lahf
and
dec
push
mov
jae
sti
cmp
pop
hlt
xchg
es
stc
imul
sub
lock
mov
pusha
fsubs
xor
out
fidivrs
cld
in
cmpsl
push
sub
mov
int3
addl
add
sub
xchg
xor
in
lret
scas
popf
das
and
xlat
test
mov
push
clc
jle
xchg
mov
and
inc
dec
mov
ror
and
cmp
dec
mov
popw
add
push
mov
push
jbe
popf
cmp
jmp
loop
push
adc
imul
repnz
cltd
mov
rcl
imul
inc
lock
cmpsb
sbb
cmp
cmc
aad
sub
hlt
aaa
sub
jge
xchg
test
stos
adcl
test
sub
adc
dec
enter
outsb
cmp
jno
sbb
lock
mov
adc
movsb
daa
aam
mov
cmc
xor
std
in
and
or
pop
mov
mov
aaa
shl
popf
jp
int3
sahf
sub
insb
loope
popa
sbb
daa
repz
les
lea
mov
adc
int
iret
xor
xchg
dec
leave
mov
add
inc
mov
pop
ljmp
adc
xor
ljmp
xor
adc
mov
cltd
cmpb
adc
lds
in
in
dec
lods
out
fdivl
adc
mov
and
fmuls
add
scas
push
xlat
cli
pop
inc
bound
mov
cs
stos
outsl
and
movb
and
fistpl
or
mov
maxps
fistpl
add
xchg
sbb
inc
ret
rcr
push
cmc
cmpsb
das
ja
mov
shlb
mov
mov
in
movsb
push
lock
sbb
cmp
stc
es
ja
mov
jno
jb
pop
add
add
sub
das
push
pop
push
iret
adc
adc
mov
jae
repz
popf
xor
push
jle
pop
loope
pushf
fwait
xchg
and
bound
mov
roll
dec
rolb
mov
lret
xor
cli
pusha
aad
pop
sub
xor
popf
std
push
xor
gs
jo
sbb
cmpsl
popf
adc
repnz
sbb
xlat
repz
cld
push
xchg
repnz
xchg
ret
jp
mov
rcrb
je
test
add
or
insl
inc
ret
cmc
or
fwait
jecxz
pushf
mov
jge
fcoml
loope
jmp
mov
dec
jbe
dec
int3
mov
ret
and
adc
push
jo
xor
sub
lahf
push
sbb
aas
ds
loopne
lahf
loopne
das
and
inc
mov
mov
cmp
mov
frstor
cmp
inc
and
sub
incb
stos
in
ret
push
loope
xor
scas
pop
insb
out
lret
jne
mov
repnz
dec
jbe
stc
mov
fiadds
stos
sub
ds
pop
jg
inc
cmp
sub
xor
pop
push
insl
mov
adc
mov
cmpsb
add
jno
mov
and
cmp
fwait
in
dec
and
inc
mov
fdivrs
xlat
sbb
dec
icebp
mov
jno
aam
mov
ja
push
std
pop
mov
mov
dec
push
xor
inc
push
test
cltd
jp
pop
sub
dec
or
decb
mov
in
mov
repnz
not
cmc
lret
daa
sahf
clc
mov
jne
jecxz
das
pop
mov
and
cmp
and
adc
xchg
das
shrb
repz
punpckhwd
and
push
or
jg
sbb
insb
pushf
imul
out
cmp
jmp
sarl
movzbl
movsl
pushf
in
pop
aam
push
in
jns
mov
pop
add
aas
mov
xor
mov
mov
push
xor
mov
jl
or
lea
adc
clc
jmp
imulb
andb
adc
daa
cmp
inc
lods
out
mov
xlat
lret
test
cwtl
out
xchg
add
add
icebp
stos
push
adc
outsb
ret
stos
ss
and
sub
jl
inc
sahf
movsb
fsubrl
outsl
sub
sbb
test
movsl
mov
push
out
adc
stc
adc
lcall
cmp
mov
loope
mov
xchg
xor
ret
imul
jns
xor
stos
cltd
ja
and
fwait
outsb
mov
test
push
arpl
mov
xor
ret
div
mov
mov
jno
push
mov
sub
xchg
mov
dec
hlt
sub
rolb
cmpsb
div
fsubs
xor
mov
pop
das
add
ret
fsubrs
aaa
loope
cmpsl
test
or
inc
iret
sbb
aad
int
fmul
cltd
popf
mov
out
dec
addl
xchg
cmp
in
loopne
mov
jle
jno
push
scas
jae
insb
fldcw
sub
sti
rcrl
and
cld
add
push
and
movsb
xchg
rolb
mov
sbb
mov
sti
xor
int3
les
repz
and
ss
push
shlb
mov
mov
cli
xchg
dec
and
lods
andl
leave
push
sbb
lock
fdivrl
sar
jg
fwait
icebp
mov
dec
push
outsl
aas
pop
ds
xchg
scas
mov
popa
adc
sbb
push
inc
ljmp
and
xor
mov
or
and
cmp
and
fisttpll
jl
mov
cmpsl
jp
lahf
push
mov
push
jb
shll
mov
faddl
insb
inc
pusha
sbb
jle
leave
shrb
cmp
mov
push
and
addb
mov
pop
mov
out
sti
pop
imul
shl
in
push
shll
mov
jno
js
xchg
xchg
and
mov
int3
add
jge
fsubr
sbb
fwait
jo
loope
push
push
xchg
loop
or
mov
mov
js
sub
loopne
fistps
mov
pop
xor
and
inc
mov
inc
ret
lret
lods
je
jbe
cmp
xor
fnstcw
pop
out
xchg
popa
inc
inc
sub
inc
push
fsubl
inc
fldl
or
stc
mull
jb
dec
mov
in
mov
imul
pop
pop
loop
dec
push
push
xorl
xchg
and
test
inc
jg
cmp
imul
and
fisubrl
inc
xor
je
repnz
sub
or
stos
cmp
cmp
in
sbb
popa
cld
mov
and
cmp
iret
mov
aas
cmpsl
or
adc
push
int3
push
orl
xor
ja
ja
jle
mov
cmp
or
div
jbe
lret
stc
xchg
or
mov
jno
xchg
mov
pop
cmp
notl
xchg
icebp
jo
out
adc
notl
or
clc
and
lret
jmp
xchg
repnz
xor
repz
inc
scas
mul
bound
rep
push
xor
movsb
mov
arpl
out
outsb
push
pop
adc
stos
mov
and
push
jl
jo
insb
sbb
cmp
push
add
shll
outsl
js
mov
sbbb
movsl
cld
dec
cmc
inc
pop
repnz
in
cld
dec
xor
add
lret
mov
movsl
sbbl
das
push
sbb
fcoms
movsb
dec
rcrb
mov
fnsave
and
mov
iret
pusha
ja
pop
arpl
out
xlat
fisttps
ficomps
sbb
out
cmp
aam
mov
es
clc
jmp
andl
ljmp
jno
jno
sub
mov
mov
jno
push
xchg
xlat
or
sbb
add
cmp
fisubs
mov
cmp
mov
loop
mov
push
in
mov
test
jno
dec
movsl
xchg
mov
out
stos
push
test
cmc
dec
pushf
mov
mov
scas
into
cltd
sti
push
adcl
or
jbe
shrl
pop
pushl
lds
aaa
pop
jb
mov
mov
repnz
pop
xchg
popf
mov
icebp
push
adc
lret
mov
rolb
pop
cli
xchg
fcomps
mov
in
xchg
sub
test
jge
sbb
jp
add
test
jbe
mov
add
frstor
lds
pop
inc
lret
rcrl
lock
mov
add
int3
adc
push
jbe
ret
out
mov
cmpsl
or
mov
out
test
xchg
lret
cmp
mov
pop
mov
loop
inc
into
les
adc
rcrl
lods
xor
jbe
inc
lcall
inc
jae
sbb
outsb
jno
hlt
jl
jp
repz
xor
stc
xor
call
mov
push
or
add
cltd
outsl
fwait
xchg
js
fbld
out
inc
in
clc
mov
outsb
mov
es
cmp
push
loop
dec
cmp
repz
sbb
inc
jle
rcrb
or
sub
push
cmc
mov
push
aaa
mov
lea
in
cmp
cli
out
roll
xorb
xor
xor
pop
loope
aad
lds
into
dec
cmp
or
test
stc
push
push
bound
stc
mov
xchg
xchg
mov
sbb
mov
mov
and
xchg
inc
fstpl
and
pop
inc
push
call
dec
sub
cmp
pop
or
pop
add
xchg
jbe
repz
insl
push
outsl
mov
scas
and
inc
pop
adcb
call
cmpsl
out
cs
xchg
sar
bnd
inc
shrl
and
popa
xlat
jnp
aaa
push
hlt
imul
mov
sbb
cs
add
in
push
aad
pop
sbbb
and
lret
pop
sbb
rorl
fisttps
xor
push
popa
xor
cli
mov
das
push
inc
sbb
adc
mov
sub
dec
xor
mov
clc
shrl
stc
fidivrl
or
push
inc
insb
jl
jge
xchg
jb
lret
jmp
mov
mov
mov
sub
bndstx
loopne
stos
add
mov
es
dec
ds
hlt
adc
sahf
out
mov
aad
xor
cmp
pop
inc
mov
call
add
jns
adcl
push
pusha
adc
dec
xchg
icebp
icebp
mov
mov
xor
repnz
mov
cmp
pop
sbb
jnp
or
sbb
mov
cmc
fmull
ret
stc
and
cmp
or
jo
adc
pop
call
cmp
push
les
xchg
das
out
pop
sbb
jle
adc
jnp
xor
lods
cmp
movsb
nop
mov
or
jmp
je
ljmp
cmpsl
inc
aam
pop
mov
sbb
cmp
sub
adc
jns
hlt
dec
loope
inc
sub
fwait
rcll
std
cmp
ret
pop
stos
mov
adc
mov
hlt
popf
xor
movsb
scas
cmc
adc
cmpb
aam
cmp
scas
mov
xchg
dec
in
repnz
shr
fstl
imul
xchg
pop
jne
stos
or
stos
mov
sub
or
jmp
and
push
lahf
push
xlat
adc
mov
xchg
shlb
mov
scas
jo
sub
push
jle
movsl
push
pop
dec
fucom
cmp
js
mov
rolb
dec
ds
pop
in
ds
add
int3
adc
mov
xor
dec
clc
insb
or
pop
sahf
cmpsl
icebp
push
mov
pop
and
or
outsb
lahf
and
pop
decl
sbb
mov
ds
xchg
pop
fucomp
hlt
add
into
mov
in
and
xor
rclb
push
add
pop
addr16
mov
clc
in
orl
icebp
icebp
cmp
mov
jne
leave
mov
inc
scas
cmpsl
daa
fcomps
cmp
adc
mov
mov
xor
add
cmp
insl
insl
divl
jbe
sbb
mov
out
xlat
dec
mov
inc
pusha
loopne
xor
and
dec
stc
data16
mov
jb
xchg
ljmp
push
push
movsl
fcoms
jge
and
loope
movsb
int
lret
xchg
cmpsl
push
xchg
lcall
rorl
ret
cwtl
popa
pop
fstpl
jge
xor
push
stc
adc
negl
sarl
lcall
xor
pop
sub
imul
push
idivl
or
pop
out
rorl
loop
and
xchg
out
or
outsb
mov
jnp
jle
stc
aas
xor
xchg
fwait
lret
es
push
arpl
enter
jle
inc
lahf
push
mull
pushf
push
push
repz
cmpsl
mov
sbb
imulb
sub
nop
sbb
popa
in
xchg
sahf
cltd
loop
mov
xor
cmpsb
pop
nop
js
and
adc
loopew
pusha
movsb
movsl
jnp
mov
repnz
dec
jne
out
xchg
mov
flds
popf
mov
imul
mov
cmp
or
js
mov
adc
icebp
aam
leave
dec
gs
sub
nop
and
in
out
in
lods
inc
pop
pop
hlt
daa
lcall
cs
push
mov
or
mov
stos
or
fidivrl
xor
sbb
sahf
dec
push
notb
rcrb
hlt
sbbb
loope
es
jmp
and
sbb
arpl
out
sub
jge
xchg
pop
leave
dec
ret
cwtl
mov
push
dec
cwtl
add
mov
sarl
dec
cmp
lss
mov
js
sbb
dec
xlat
jns
mov
xchg
orl
fdivr
cmp
dec
sti
cmp
jge
sbb
dec
jno
jg
or
inc
fmull
mov
movsl
inc
fsubr
xor
sub
adc
dec
lcall
cmp
nop
cmp
dec
cmp
adc
out
mov
push
push
pop
lret
add
std
shrl
shll
xor
mov
and
lcall
in
jo
pop
call
fsubr
dec
mov
push
xchg
repz
out
xchg
jle
repz
push
cltd
and
lods
aam
xorl
mov
ljmp
filds
mov
jecxz
lahf
mov
fs
fistps
or
cmp
mov
das
lret
inc
nop
mov
das
xchg
push
sbb
push
dec
inc
xor
frstor
or
mov
int
add
shll
push
push
add
pop
jae
or
mov
or
rolb
dec
mov
sti
mov
jl
xor
adc
lock
fistpl
jae
aas
or
stos
rorl
push
or
cmpsl
xchg
test
push
pop
or
or
or
mov
xchg
or
fmull
jae
add
xchg
add
or
popl
fists
xchg
cmp
negl
mov
pop
adc
cmp
cli
sub
mov
stc
xchg
movb
mov
adc
data16
lcall
or
sbb
iret
out
out
mov
into
mov
dec
xchg
mov
faddp
and
and
xor
enter
sbb
loopne
and
inc
sbb
sub
mov
and
mov
fsubrs
iret
test
mov
scas
push
inc
sti
jle
inc
sti
push
jge
sahf
aaa
lret
sbbb
mov
lcall
and
xor
mov
push
pusha
xchg
pop
mov
outsb
mov
or
mov
jbe
lahf
outsl
push
sbb
jns
or
aas
jge
aad
and
adc
pop
ss
bound
mov
data16
pop
adc
sub
jb
pop
stos
lds
adc
pop
stc
push
subb
push
lods
rolb
mov
jno
xor
test
xor
pop
stos
rolb
movsb
jecxz
or
or
dec
mov
fcompl
xor
out
cmpsl
or
nop
gs
mov
mov
dec
sbb
cs
push
sbb
pop
inc
push
xchg
mov
cmpsb
xor
ss
repnz
rorl
mov
xor
dec
cmp
sti
cs
mov
cmp
jnp
add
outsl
loopne
ja
pop
mov
jnp
out
push
sub
stc
inc
mov
mov
jge
popf
mov
cmp
lods
movsb
or
mov
sbb
call
xor
push
addl
jl
mov
repz
pop
dec
scas
rcr
push
inc
ret
call
xor
push
stos
cmp
and
ret
icebp
imul
pop
aaa
cmpsb
jns
add
movsl
cwtl
mov
xor
imul
or
sahf
pop
pop
shll
gs
out
mov
inc
jbe
pop
jge
mov
and
adc
pop
adc
lret
seta
stc
mov
cmc
outsb
mov
cmc
inc
jg
int
push
cmc
pop
push
mov
fwait
push
push
idivl
icebp
cmpl
ja
fcoms
cmp
xor
movsl
jo
cld
cltd
inc
cmp
add
popa
cltd
data16
bnd
pop
or
fstps
xchg
mov
cs
stos
out
lods
add
out
int
sbb
adc
out
sbb
cmp
cld
mov
ja
inc
stos
mov
xlat
outsl
push
cmpsb
xor
inc
jle
testl
lods
sub
adc
or
add
push
push
adc
dec
enter
jo
push
repz
and
decl
pushf
mov
cmovns
insl
and
jbe
cld
fdivl
jae
sahf
out
ret
push
test
mov
mov
addr16
dec
xchg
adc
cwtl
dec
int
fcmovu
pushl
xchg
xchg
dec
ljmp
cld
sub
and
mov
popf
mov
push
leave
outsl
mov
xchg
mov
adc
add
test
and
xor
jbe
addr16
fnstsw
loop
and
cli
inc
add
fmull
push
imul
push
fdiv
pop
mov
aaa
cmp
pop
ret
xor
sub
push
out
add
dec
stos
ss
outsl
jo
jle
jne
insb
cmp
mov
stc
mov
movsl
and
sub
mov
gs
fnstsw
test
outsl
enter
adc
es
jl
jo
jl
mov
push
xchg
jle
mov
in
mov
dec
sbb
dec
fisubl
adc
add
xor
dec
into
sti
fwait
mov
push
mov
jle
xchg
xor
out
cmpsb
out
sub
and
subl
sub
xchg
push
lahf
daa
ljmp
jo
xor
lods
dec
xor
cmp
fisttpll
jne
test
aam
int
cmp
xchg
mov
outsl
push
cmp
jb
lcall
mov
rcll
sbb
xor
pop
inc
dec
test
mov
inc
jno
mov
mov
cs
xor
call
inc
mov
pop
imul
xlat
out
or
sar
subl
movsl
and
pop
js
bound
xor
movsb
dec
adc
je
xchg
sahf
dec
xchg
mov
cmp
daa
push
nop
popa
rorl
pusha
mov
xorl
sbb
dec
and
mov
jnp
mov
xchg
or
jns
push
popf
hlt
js
sub
xchg
out
lods
cmpsb
test
jae
shl
xchg
adc
mov
sub
gs
mov
in
lret
sbb
pop
cmpsb
insl
jno
sbb
mov
xlat
je
or
loope
push
hlt
clc
adc
xor
or
xchg
ret
out
enter
pusha
add
stos
scas
sbb
mov
aad
loop
test
add
imul
xor
adc
pop
jl
fs
and
jp
mov
mov
xchg
int3
enter
mov
xor
incl
xor
arpl
aas
xchg
fstl
push
or
fstps
imul
pop
pop
sub
mov
arpl
scas
fs
aad
mov
js
sbbl
fstps
jl
dec
pop
xor
mov
push
pop
addl
jo
movsb
adc
jg
dec
out
jne
test
jns
dec
xchg
rclb
movsl
add
ljmp
test
jno
push
insb
add
xor
cmp
in
mov
pop
subl
sub
xor
jle
mov
dec
push
pop
jae
inc
mov
notl
ret
ljmp
shll
push
sahf
xchg
in
movsl
or
mov
pop
xchg
inc
pop
adc
push
test
adc
ljmp
mov
pop
sbb
sbb
or
test
call
popf
xor
push
insl
cli
jmp
mov
lds
and
dec
cmpb
daa
jo
stc
rclb
lahf
jmp
cmpl
jge
inc
aam
cltd
outsb
xchg
jmp
stc
popa
sbb
push
fmull
and
or
inc
inc
enter
mov
inc
sbb
sbb
ficoml
cli
imul
addb
addl
jb
testl
loop
mov
lods
sarb
adc
mov
test
lock
xchg
ficoml
lods
add
adc
test
dec
cmpsl
es
mov
test
jno
and
and
sbb
sbb
add
push
frstor
sbbl
or
int3
mov
mov
fwait
mov
add
aad
ss
jbe
lret
add
ret
sarb
into
pop
lods
pop
cwtl
mov
subl
sti
add
sub
push
mov
mov
or
mov
jl
pop
cli
mov
mov
pushf
xor
add
push
aad
adc
in
icebp
xchg
sti
push
mov
or
push
stos
lea
ds
jg
sti
cmp
mov
pop
xchg
pop
rorl
cmp
lahf
push
sub
mov
push
aas
sub
lret
push
cmpsb
lock
jg
cmpsb
sub
cmpsb
inc
imul
ret
mov
xchg
jns
pusha
lods
lcall
mov
or
and
fsubl
icebp
and
cmp
mov
insl
rcrl
mov
mov
and
in
addl
cmp
pushf
mov
inc
addr16
sub
push
xor
testl
hlt
sub
dec
and
nop
arpl
fs
sbbb
inc
sbb
sub
andl
jge
lcall
mov
cli
and
pop
jne
jbe
imul
jmp
xchg
loope
adc
sub
ss
dec
add
ss
popf
sbb
loop
push
js
dec
cmpsl
std
push
dec
add
mov
or
das
push
inc
movsl
leave
repnz
sbb
add
idiv
lcall
stc
push
lods
and
insl
fiadds
jbe
pop
jg
mov
adc
enter
or
xor
lahf
das
dec
lds
push
mov
shlb
gs
je
insl
xor
push
sbb
pop
pop
nop
aaa
lock
stc
sub
rcl
adc
mov
adc
test
and
push
jnp
mov
jge
fisubrs
pop
pop
cmp
sbb
or
and
push
ret
xor
inc
add
outsl
mov
sbb
outsb
mov
push
test
mov
movsl
stc
stos
cli
cmpsb
gs
push
jge
cmp
cmpb
sub
mov
fdivrp
dec
push
xchg
xchg
jo
mov
jmp
addps
popf
and
adc
sti
lret
divl
js
stos
inc
mov
xchg
orb
rorb
pop
mov
and
pop
dec
xchg
jns
subl
pop
fcomi
xchg
sbb
dec
nop
gs
dec
cmpsl
cmpsb
fcoms
push
jmp
ret
lret
jae
lahf
test
fsubl
xchg
or
sti
fcmovu
test
sarb
data16
popf
std
adc
sbb
cwtl
jns
pop
inc
outsb
mov
lods
mov
das
jns
rolb
jmp
mov
fs
push
enter
sahf
fwait
inc
pushf
mov
enter
push
into
fcomps
sub
push
sahf
lret
aad
xor
dec
pop
ja
mov
inc
add
mov
and
push
add
push
push
inc
cli
int3
es
adc
add
repz
inc
repz
cwtl
mov
xchg
inc
push
pop
mov
push
sub
or
fmuls
into
push
xchg
mov
sbb
sbbl
ret
lcall
sbb
scas
ret
xchg
iret
cld
mov
cltd
push
sub
sbb
dec
and
cmp
push
fmul
sbb
std
add
sti
daa
les
pop
push
das
sub
enter
mov
stc
mov
add
mov
shrl
arpl
sbb
xor
in
dec
sbb
insl
loopne
rorl
mov
jne
pop
sub
push
mov
sub
lret
or
mov
mov
dec
push
scas
mov
leave
mov
sub
movsl
movsl
ljmp
addr16
push
push
jns
push
fwait
mov
or
daa
jg
or
out
mov
outsl
push
mov
cmp
and
mov
jmp
shll
xchg
push
or
insb
fcoml
jl
push
int
mov
jl
add
sub
dec
jge
jno
sub
fldcw
scas
pop
jo
lahf
call
scas
and
xchg
in
xor
pusha
mov
push
jbe
ds
pop
test
jb
adc
int3
pop
inc
aaa
sub
and
push
lds
adc
jle
xlat
stos
adc
xchg
or
cwtl
mov
pop
mov
jmp
fldcw
mov
ja
shl
mov
lea
cmpsl
mov
xchg
and
shr
cmc
mov
xor
add
push
mov
std
xchg
stos
je
dec
test
xor
sarb
adc
pop
or
outsl
repz
cmc
add
push
cltd
or
shlb
lret
inc
fwait
dec
push
sub
push
cli
xchg
scas
enter
data16
mov
or
ss
lods
mov
add
das
ljmp
outsb
aam
jmp
mov
scas
pop
xchg
or
dec
mov
xchg
xchg
add
lcall
xchg
mov
pop
lock
jmp
sub
fs
insl
push
mov
stc
lods
std
sbb
cmc
jle
rcrl
lret
adc
orl
xlat
jg
mov
and
jnp
hlt
mov
cmp
mov
mov
pop
inc
pop
hlt
mov
and
cmpl
jmp
cmpsl
outsb
cld
jmp
lea
shll
fimull
push
adcb
push
mov
into
adc
or
inc
rcrl
inc
push
jg
clc
mov
fwait
mov
jne
cmp
mov
mov
arpl
mov
hlt
sbbl
sbb
push
push
loop
frstor
std
mov
cmp
cmpsb
js
dec
jns
ljmp
mov
daa
testb
xlat
mov
fmuls
cmp
aad
sbb
sti
sbb
mov
int3
inc
iret
mov
inc
xor
mov
jle
pop
mov
and
inc
cmpsl
and
sahf
ss
add
aaa
dec
or
xchg
mov
add
xlat
mov
pop
pusha
mov
inc
adc
cltd
add
jmp
or
test
iret
je
push
cmp
xchg
push
xor
pop
je
jmp
cs
sbb
push
and
cmp
imul
lahf
dec
lods
jae
and
movsl
shll
mov
out
sub
stos
sbb
inc
stos
faddl
aaa
repnz
push
or
mov
insb
mov
or
pop
sub
nop
or
dec
mov
orb
outsb
mov
mov
rorb
mov
jo
xchg
stos
sub
fdivl
pop
adc
shlb
mov
mov
pop
push
and
adc
lods
loop
push
pop
jmp
pushf
mov
inc
sahf
cs
xchg
clc
lahf
push
fmull
and
mov
fidivl
dec
pop
sbb
setns
add
adc
cld
mov
cmpsl
jo
dec
imulb
stos
jae
into
mov
in
mov
or
je
adc
ret
insb
int
sbbb
adc
pop
or
cld
mov
mov
push
sub
or
outsl
daa
stos
pop
dec
dec
inc
rol
jno
sbb
pop
pop
fidivl
pop
lock
xchg
fidivs
dec
das
out
pusha
or
sub
xor
fisubs
mov
fsts
inc
sub
or
mov
std
cmp
es
cmpsb
lahf
xchg
inc
aad
rol
test
cmp
std
pop
aas
iret
clc
ret
sbb
mov
leave
jmp
add
sub
repz
sub
in
movsb
jns
cmp
cmp
push
mov
xor
sbb
lret
sbb
out
addr16
xor
subb
mov
rcr
and
ja
mov
inc
mov
xchg
iret
adc
fabs
xor
mov
mov
sti
mov
fnsave
stos
mov
pop
mov
ljmp
xchg
test
imul
lea
sub
fcom
mov
mov
popa
call
out
sub
mov
pop
aam
push
mov
rclb
cmp
psadbw
sahf
pop
mov
test
movsl
imul
rcrl
cmp
or
cmp
gs
xchg
ret
ljmp
add
xchg
or
push
fidivrs
data16
xchg
mov
scas
inc
jae
sbb
test
imul
jnp
imul
cltd
inc
push
mov
add
fdivrs
dec
mov
mov
sbb
out
xchg
mov
xor
int3
dec
inc
notb
fists
stc
mov
es
js
xor
dec
push
adc
lods
fldcw
jno
dec
lret
imul
je
or
mov
out
xor
and
jno
mov
shrl
jae
push
xor
push
and
push
mov
int
push
mov
sbb
dec
cwtl
ja
cmp
sub
jne
pop
xor
jbe
mov
leave
jle
out
mov
mov
pop
and
adcl
cmc
inc
nop
cmpsb
push
mov
dec
insl
inc
push
mov
sbb
inc
and
push
cmp
push
sbb
dec
popl
test
fwait
sbb
std
adc
gs
mov
insl
test
lahf
mov
ficompl
cmp
dec
outsb
push
pushf
sub
shl
not
subb
cmp
pop
jle
sub
jmp
and
icebp
dec
sti
add
xor
incb
out
sub
test
enter
loopne
pop
mov
or
sbb
jnp
mov
push
testl
jl
fists
aam
sbb
adc
inc
add
mov
dec
cltd
and
or
cmpsb
je
data16
scas
enter
cmp
push
inc
and
imul
js
aas
sub
ret
cmpsl
test
rcrl
dec
mov
adc
in
xor
push
sbb
clc
mov
pushf
push
dec
sarb
add
scas
iret
daa
jae
adc
rol
add
lds
xchg
gs
in
fldt
fdivrs
xor
xchg
mov
cltd
ljmp
int3
fmuls
mov
out
jle
rol
mov
dec
cltd
sar
mov
hlt
inc
adc
cmpb
pop
ja
fists
add
mov
mov
rclb
inc
sbb
je
hlt
insl
gs
xchg
cld
dec
inc
and
ret
sub
pop
or
jns
nop
frstor
test
fadds
pop
mov
lcall
dec
daa
cmp
jp
mov
mov
lods
pop
imulb
aas
mov
pop
mov
push
mov
sub
mov
aad
inc
stos
jbe
aas
cmpsl
test
test
lret
adc
in
bound
mov
bound
xchg
and
push
call
loope
pop
cmpsb
mov
mov
pop
movl
jle
mov
push
cmpsl
lret
mov
cmp
test
fcmovb
shl
jmp
popa
nop
repnz
cwtl
out
sahf
pop
lcall
divl
mov
cli
pop
cli
es
out
jns
sbb
mov
and
lods
xorl
popf
aad
dec
sbb
inc
hlt
mov
xor
and
icebp
inc
test
neg
mov
xorb
icebp
mov
ljmp
inc
jmp
clc
or
adc
mov
stc
cli
pop
pushw
ret
fimull
and
scas
pop
mov
inc
lods
imul
mov
pop
or
sbb
pop
cmp
shlb
loope
shl
adc
mov
mov
pop
ret
outsl
jge
adc
dec
loope
imul
rorb
mov
inc
in
fistpll
push
aad
mov
hlt
cmc
mov
int
call
rcr
cmpsb
jmp
into
inc
xor
sbb
lock
pop
jne
insb
cmpsl
adc
mov
mov
cs
rorl
pop
imul
ja
cmp
sub
je
mov
mov
xor
movsl
jle
pop
push
and
add
mov
cmp
xchg
lock
xor
or
mov
sub
jle
jl
out
dec
nop
loop
mov
add
pop
mov
mov
cs
push
enter
and
or
sbb
sahf
inc
fstl
xchg
pop
xor
aas
sub
aad
rclb
lcall
lcall
enter
push
jae
xor
jmp
ja
or
mov
cmp
pop
mov
es
inc
pop
pusha
xchg
pop
into
mov
sbb
jnp
not
fimuls
pop
jae
ja
cmpsb
rsqrtps
and
mov
jecxz
cmp
cld
imul
dec
cld
add
pop
xchg
int
jne
push
bound
mov
pop
pmullw
xchg
jne
cmp
jns
mov
or
sub
cmc
cld
test
in
lret
ss
dec
in
push
xchg
cld
push
push
es
inc
in
jp
call
push
pop
out
jp
mov
and
insb
jo
mov
insl
pop
loope
cmpb
jl
inc
add
out
adc
cs
xor
loopne
andl
xor
inc
push
fwait
bound
mov
sbb
jge
cmpl
dec
shlb
mov
std
leave
jae
dec
fstpt
xchg
sti
in
dec
out
lahf
adc
int
pop
int
cmpl
pop
andl
xor
jle
imul
inc
mov
sub
loope
sbb
pop
out
lods
or
bound
and
mov
pop
test
hlt
popa
pop
cmp
aas
push
push
pop
ficompl
lea
call
inc
mov
sub
popa
xchg
push
call
mov
inc
outsl
adc
lahf
push
fnstsw
or
dec
push
lods
pop
mov
pusha
and
pop
mov
jbe
xchg
loop
in
popa
in
imul
xchg
stos
jmp
and
mov
mov
xchg
fisttpl
mov
les
shll
and
adc
push
xchg
xchg
aad
adc
inc
aaa
push
aaa
adc
fiaddl
mov
sub
inc
push
movsl
sbb
add
arpl
push
daa
cmp
cmp
repnz
adc
xor
movsl
imul
outsb
or
stos
cmp
cld
mov
cmp
push
sbb
or
ds
push
nop
sbb
cmpl
daa
pop
jae
stos
xchg
daa
inc
xor
jg
insl
mov
les
push
out
jbe
xchg
testl
adc
outsb
mov
rorl
fs
jo
or
jmp
sbb
rcll
sbb
adc
mov
jmp
pushf
xor
testb
popf
shr
mov
adc
pop
mov
and
movsb
into
jo
call
std
jb
movsb
test
add
add
xchg
int
cltd
lahf
pop
inc
pop
pop
push
hlt
lret
aas
or
jnp
orl
cmp
mull
gs
cltd
jmp
stos
push
mov
mov
psllq
dec
cs
test
js
int3
pandn
jle
push
sbb
mov
int
lods
push
mov
ror
jecxz
arpl
cld
push
insl
inc
dec
dec
mov
test
repnz
lods
adc
cwtl
push
fldcw
push
pop
pushf
shrl
movsl
xorb
adc
sbb
mov
test
mov
push
inc
test
ret
out
sbb
push
aad
fsubrl
jl
xchg
push
add
lret
and
in
sub
inc
lods
in
gs
lret
push
shrb
adc
inc
sti
jmp
outsl
mov
in
paddw
loopne
stos
sbb
push
mov
push
and
ds
ja
push
repnz
mov
pslld
inc
cmp
push
sbb
jbe
dec
push
rcl
les
or
mov
lds
pop
imul
and
sub
mov
sti
aaa
loopne
pop
mov
aad
insl
mov
mov
test
lds
sub
sbb
xor
xchg
and
pop
push
daa
mov
dec
mov
loopne
add
lods
ret
lretw
cmp
dec
push
sbb
mov
out
and
pop
fnstcw
pop
and
outsb
shlb
xchg
hlt
adc
mov
xchg
inc
jnp
push
or
popf
sahf
inc
mov
lea
lds
gs
xlat
test
cs
push
rep
jae
test
pushf
jecxz
mov
movsl
xor
inc
inc
movsb
mov
fldcw
add
mov
or
add
pop
sbb
ret
push
stos
sar
les
sbb
dec
add
or
popa
stos
outsb
call
lcall
jbe
dec
mov
mov
test
jbe
mov
mov
jo
lcall
xor
stos
aas
mov
adc
into
mov
call
xchg
add
inc
in
aad
jecxz
movsl
insb
ljmp
and
hlt
test
repz
mov
std
in
orps
mov
das
pop
loop
inc
xchg
adc
mov
mov
es
push
adc
test
jae
pusha
mov
and
cmp
sbb
or
int3
mov
mov
mov
adc
dec
fwait
cmp
mov
into
shll
xor
shll
cwtl
sub
lods
ds
mov
stos
cmc
push
jne
outsl
hlt
cmp
pushf
xchg
sbb
add
enter
push
or
cmpsl
inc
inc
imul
sti
insb
or
mov
mov
xchg
xor
xchg
jnp
mov
cmpsl
add
testb
faddp
or
adc
dec
fsubr
ret
xchg
mov
shll
mov
and
call
std
scas
imul
orb
fcomps
or
xchg
scas
mov
and
fadds
xor
xor
movsb
dec
inc
sub
test
push
icebp
ljmp
test
cmpsb
inc
sub
pop
cmp
push
push
lock
test
imul
shl
cwtl
sub
ret
repz
clc
add
push
cmp
dec
bound
fmull
or
jae
cmp
jg
push
pop
mov
inc
xchg
popf
inc
das
in
jns
daa
jg
dec
addl
push
rclb
stc
push
add
mov
dec
fisubl
call
push
lea
mov
push
xchg
or
or
repz
mov
and
pop
sbb
stos
sbb
daa
lds
lcall
dec
inc
shrl
xor
xor
mov
iret
cli
dec
sarb
test
sbb
sub
testb
add
or
mov
dec
xchg
mov
dec
loope
rcl
dec
cld
aas
in
add
testb
lods
push
pushf
xchg
inc
mov
and
or
dec
add
pop
enter
dec
cmp
outsb
or
jle
and
xchg
mov
pushf
jl
jmp
std
mov
pop
xchg
iret
leave
aas
out
xor
lock
push
out
add
and
out
or
out
push
lods
jo
sub
jo
or
je
mov
mov
or
xor
dec
ljmp
pop
outsl
or
imul
sub
inc
jnp
adc
xor
push
ss
enter
dec
sbb
mov
dec
mov
test
repnz
mov
test
jo
and
mov
js
inc
pop
push
repnz
jno
cli
popa
cmpsl
mov
push
lahf
dec
cmp
mov
sub
xlat
mov
test
jb
flds
inc
std
mov
adc
jl
sub
adc
cmp
mov
test
sub
xor
shrl
in
jge
mov
aaa
call
arpl
fxtract
ret
jns
xchg
mov
mov
inc
dec
jmp
inc
push
fimull
mov
mov
jl
jnp
sarl
xor
inc
hlt
sbb
mov
push
loopne
js
xchg
ds
fisubs
adc
xchg
xchg
inc
sti
lods
push
and
jns
pop
fisubrl
orl
sub
xor
push
jge
mov
jbe
and
add
pusha
dec
xchg
xor
leave
mov
inc
mov
clc
aad
xor
int
lea
adc
inc
inc
idivb
and
lea
pop
dec
int
push
mov
jle
arpl
jp
sbb
push
pop
jne
js
mov
jge
lret
jae
push
sbb
or
inc
mov
shrb
cmp
imul
add
in
fiaddl
call
lods
scas
sub
std
inc
pushf
inc
test
xor
js
insb
xor
test
push
pop
jnp
cmp
es
imul
cld
pop
ljmp
popf
push
divb
in
and
inc
adc
push
pop
adcl
sub
jg
sbb
and
cmpsl
jns
jns
dec
clc
repnz
add
jge
xchg
push
cmp
cmpsl
sbb
lcall
inc
aad
je
rcl
repnz
call
test
mov
push
fmulp
cmp
rorb
push
push
js
xchg
inc
mov
test
pop
inc
fsubrs
jecxz
pop
cmc
adc
push
sub
and
cmc
idiv
xchg
faddp
pusha
mov
shll
or
cmp
and
cltd
mov
lret
pop
lret
dec
push
filds
test
jge
dec
shrb
jno
mov
add
or
aad
or
jno
xchg
les
pop
aaa
jb
scas
xlat
or
jl
mov
xchg
sbb
mov
test
jnp
adc
xor
mov
and
pop
aam
rorb
jecxz
stos
out
lret
pop
stc
in
enter
jb
xor
push
pop
aam
xchg
aad
and
mov
xor
jg
ds
pop
sub
test
mov
push
sub
test
in
inc
lcall
stc
cmp
out
arpl
insl
dec
jecxz
fisubs
mov
dec
sub
aam
push
jge
mov
aaa
test
jbe
mov
loopne
aad
push
ja
testb
test
push
popa
cmpsb
and
mov
stos
adc
adc
ja
sbb
pop
icebp
sbb
cmpl
adc
rorl
xor
repz
and
jbe
in
dec
mov
cmpsl
jbe
adc
subb
xor
out
test
lret
movsb
ret
aas
jae
inc
mov
or
mov
int3
lock
repnz
xchg
pop
mov
shlb
xchg
mov
jle
jl
dec
xor
mov
clc
mov
adc
lret
gs
es
adc
stc
jle
push
shl
mov
sbb
mov
cld
add
iret
mov
mov
adc
sub
test
or
xchg
imul
cltd
jae
inc
and
outsl
jp
enter
jmp
test
dec
mov
xlat
jecxz
aad
push
lods
pop
or
outsw
enter
cmp
dec
test
aad
xor
mov
gs
sbb
fs
fdivr
dec
out
rolb
sub
and
rorl
cli
dec
mov
adcb
and
mov
pop
push
lock
mov
cltd
addl
add
inc
mov
movsb
pop
ja
pusha
cli
movsb
inc
loop
cmp
jb
mov
xchg
add
sti
ficoms
pop
inc
or
imul
outsl
adcl
arpl
pusha
or
shlb
xchg
aad
andl
cmp
testb
loop
push
sbb
push
sbb
jp
iret
cli
cwtl
outsb
loope
push
sarb
out
enter
mov
pop
or
ret
fmull
aad
xchg
mov
loope
push
iret
mov
xor
or
cli
popa
mov
arpl
dec
aaa
mov
pop
jo
mov
push
es
popf
addr16
inc
mov
dec
sub
lret
and
jecxz
dec
jl
jge
into
or
adc
xchg
lods
inc
frndint
xorps
sbb
call
add
add
cmp
fcmovnb
stos
mov
dec
popa
mov
test
or
arpl
cmpb
fs
push
test
xchg
fildl
mov
cmp
loop
jmp
int
ljmp
cmp
data16
sub
stc
sub
lods
push
lods
xor
in
mov
xchg
xchg
sbb
dec
push
ds
aad
mov
shlb
cmc
jl
clc
or
mov
test
push
sarl
add
icebp
or
pop
ds
aas
movsb
movsl
mov
xlat
bound
jp
push
inc
mov
adcb
into
cmpsl
dec
mov
sarl
mov
fwait
mov
dec
xor
outsb
mov
mov
add
push
data16
sbb
cld
lret
test
ljmp
inc
rcll
out
fs
inc
adc
cmp
jbe
and
mov
sub
data16
outsb
movsb
outsb
xchg
jge
xchg
lret
xchg
out
xchg
dec
and
sbb
dec
xor
pop
pop
in
pop
hlt
pop
dec
daa
jmp
add
das
out
insl
test
jnp
fwait
xchg
jbe
jae
adcb
cli
dec
in
add
mov
pop
push
mov
xor
cmpsl
outsl
lods
rcrb
insl
mov
int3
inc
in
sbb
or
inc
data16
xor
mov
rcl
adc
imul
mov
push
mov
push
scas
repz
push
jge
and
xchg
sub
sub
push
scas
loopne
dec
mov
mov
fnstenv
jle
xchg
cwtl
inc
jge
outsl
push
insb
mov
mov
lcall
icebp
adc
mov
mov
leave
aaa
add
lock
shll
fucomi
add
test
mov
push
jne
scas
jmp
insl
mull
movb
cmpsb
mov
lret
push
popa
pop
js
dec
inc
adc
mov
ja
push
cmp
add
cmp
mov
shrb
cmp
mov
dec
fimuls
sbb
cmpsl
fwait
adc
fcomi
pop
jo
xchg
repz
and
xchg
mov
inc
scas
inc
ud2
add
mov
add
enter
add
pop
push
mov
out
pop
es
or
push
mov
fstps
cmp
pop
push
jmp
addl
pop
inc
dec
push
pushf
pop
fisubrl
mov
test
adc
cmp
stos
pop
and
aaa
sbb
inc
xor
jbe
and
stos
flds
and
scas
das
nop
out
stos
ret
push
divb
lret
and
xor
sar
imulb
rol
adc
sub
push
mov
rcll
sub
idivl
fdiv
or
mov
in
push
push
out
fldt
addb
sbbb
xor
clc
jae
das
inc
aaa
insb
lahf
cs
inc
test
pushf
shlb
inc
push
hlt
xchg
aad
movsl
invd
xor
std
aad
inc
mov
jb
pop
hlt
daa
stc
mov
dec
pop
inc
rclb
std
mov
and
mov
out
xchg
push
rcrb
add
adc
xchg
in
movaps
inc
fwait
lds
das
sti
fwait
out
dec
and
dec
fdivrl
ja
sar
mov
jne
aaa
imul
test
mov
pop
hlt
push
lods
jmp
icebp
lock
imul
sbb
movsl
repnz
mov
pop
xor
mov
sub
gs
int3
xor
lcall
cmp
xchg
adc
ror
ss
push
inc
les
push
clc
mov
mov
xor
xchg
test
into
pop
adc
mov
sub
ljmp
scas
out
mov
or
pop
neg
mov
lea
add
lods
shrl
xchg
xchg
mov
add
add
scas
pop
sub
int3
mov
and
jae
je
mov
adc
cld
push
adc
jle
xchg
lcall
and
mov
and
roll
xor
cmp
mov
inc
xchg
mov
in
loope
scas
jb
mov
inc
cmp
test
and
mov
add
fildll
lahf
sbb
or
aas
dec
je
enter
xchg
push
add
mov
pop
cltd
iret
xchg
mov
xor
lret
push
sarl
fsub
pop
imul
xchg
mov
lea
adc
popl
cmp
dec
jns
xor
fimull
jns
stos
out
ja
adc
test
push
dec
loop
sub
mov
call
out
jb
inc
aas
pop
and
loop
cmpsb
pop
mov
addr16
xchg
sahf
outsl
lods
arpl
or
xor
test
data16
lret
movsl
popf
push
add
jle
shlb
imul
pusha
adc
in
aam
mov
mov
divb
xor
outsb
test
mov
mov
sahf
sbb
fcmovnb
cmp
cmpsl
push
sbb
inc
gs
pusha
mov
clc
gs
pcmpgtd
out
and
cli
jno
lret
lds
xor
or
cmp
in
loop
pop
clc
leave
loopne
dec
lret
shlb
push
mov
lcall
mov
mov
dec
sub
stc
out
cli
jg
jns
pusha
jb
pop
ja
mov
shl
sub
rcl
bound
repz
xchg
ror
sbb
mov
mov
sahf
pop
add
testb
xor
rorl
repnz
loope
hlt
dec
sbb
repz
and
arpl
inc
push
adc
lea
mov
insl
add
mov
testb
flds
leave
and
sub
mull
sbb
mov
mov
cwtl
faddl
jle
dec
popaw
cmp
mov
ret
dec
inc
add
jbe
lahf
pop
sbb
inc
dec
or
movsb
xor
jnp
adc
or
bound
fcompl
int
ljmp
jp
add
mov
or
cltd
jno
ja
cmpsl
adc
fwait
xchg
test
jns
and
fs
imul
in
inc
jae
fsubs
jle
or
movsl
es
dec
pop
mov
aad
out
dec
sbb
fcomp
in
movsl
cmp
push
sahf
dec
inc
movsb
test
push
les
fisubrl
into
push
xor
push
sub
mov
push
xchg
stos
mov
dec
push
dec
lret
inc
or
inc
jb
in
movsb
sub
dec
mov
xchg
mov
dec
and
mov
sbb
inc
jb
fcompl
jge
es
fdivs
mov
stc
pand
sub
jmp
cmp
inc
push
lcall
stos
mov
jl
push
stc
adc
sahf
es
scas
adc
test
xlat
repz
les
dec
mov
pop
push
leave
jae
cmc
imul
out
rolb
pop
adc
in
push
or
xor
pushf
jecxz
push
mov
movsl
push
cmpsb
pop
pop
jg
stos
adc
adc
dec
or
jl
pop
stos
push
icebp
or
out
push
stos
push
pop
jo
mov
sti
stc
mov
cmp
pop
lea
pcmpeqw
pop
pop
add
pop
mov
outsb
mov
fiaddl
add
mov
lea
cmp
pop
push
mov
cmp
cli
xchg
out
xchg
sbb
arpl
push
popf
jle
jne
out
fcmovne
stos
dec
pop
jae
loope
xor
xchg
jecxz
hlt
jne
scas
cmp
jbe
rcll
movsl
xor
dec
movsl
es
push
and
mov
inc
dec
rorb
cltd
sarl
push
repnz
xlat
inc
add
mov
pop
test
sub
or
jp
mov
int
inc
insl
ja
pop
outsb
je
in
and
push
inc
ds
jecxz
cmpsb
mov
adc
daa
lcall
stos
jns
les
jle
push
adc
xor
cmc
in
xor
xchg
bound
cmp
jecxz
dec
pop
fdivrs
xor
cltd
mov
cltd
inc
sub
xchg
mov
push
sub
pop
in
sub
xchg
scas
fists
test
mov
jge
ds
lcall
imul
jne
scas
cld
aam
jnp
jno
stos
jne
adc
loopne
jg
pop
cmpsb
cmp
mov
ret
test
loope
das
push
stos
sub
cld
jecxz
push
sbb
xor
fnstsw
dec
sti
fadds
push
enter
and
cmp
lret
andb
mov
in
sbb
jo
loop
repz
fdivs
cmp
xor
idivb
jmp
outsb
cs
outsl
xor
ret
pop
fldcw
mov
mov
pushf
push
cmc
out
fidivl
loop
pop
clc
push
js
popa
inc
add
stos
mov
push
fnsave
mov
out
xchg
imul
push
rorb
push
cld
push
pop
sub
and
repz
lcall
sub
dec
and
fsubs
rcrb
stos
stos
faddl
jno
sbb
jno
push
jmp
jg
imulb
fstpt
mov
aaa
jp
or
sbb
and
orb
mov
xor
add
sbb
andl
mov
cmpsb
daa
inc
xchg
lret
push
or
dec
mov
and
dec
rcll
daa
enter
bound
mov
std
and
enter
cmpsb
mov
jns
in
or
add
dec
ja
or
pusha
push
push
fnstsw
enter
mov
and
xchg
je
outsl
aas
out
out
leave
dec
test
pop
dec
jl
jmp
repz
mov
js
xor
cmc
adc
jno
pop
enter
mov
addb
xchg
out
jge
mov
dec
aas
loopne
cmp
push
ja
push
outsb
js
sarl
out
out
dec
xor
gs
pop
daa
add
aas
adc
xlat
les
roll
push
push
inc
pushf
xchg
imul
adc
pop
jne
push
cli
int3
xchg
cltd
fcomps
cmpsl
mov
inc
fildll
int3
push
jle
lret
jae
in
pop
add
jl
sbb
sbb
into
ret
dec
mov
fstpt
scas
or
jge
lods
clc
pop
inc
mov
inc
dec
xchg
cltd
inc
outsb
imul
push
hlt
xor
inc
or
js
in
bnd
daa
xchg
push
sti
mov
dec
pop
mov
aam
insl
cld
add
mov
xor
dec
icebp
pop
jmp
mov
in
pusha
cld
ljmp
and
shll
pop
xorl
xlat
cmc
xor
das
imul
sahf
jb
in
add
lahf
mov
and
fisubs
scas
out
inc
ds
aad
loope
pushf
inc
stos
pop
js
xor
sbb
imul
or
cwtl
aam
jg
mov
push
sbb
aas
cmpsb
jae
mov
inc
mov
push
fs
jbe
inc
and
cmpsb
jno
idiv
movsl
aaa
mov
jecxz
pushf
sbb
icebp
jecxz
push
xor
push
lret
sarl
and
cmpsl
jbe
clc
sbb
cld
adc
cs
imul
lret
push
mov
sbb
sti
mov
repz
mov
adc
ljmp
and
lcall
jge
cmc
inc
jb
xor
rorl
jbe
je
or
sub
adc
ljmp
int3
jns
or
fistpll
xchg
dec
push
jle
mov
ja
aad
inc
cmpsl
fisubl
out
loopne
cltd
shlb
adc
mov
adc
jbe
scas
ss
add
and
sbb
add
outsl
adc
mov
inc
rorb
inc
popa
je
jecxz
or
sarl
sub
je
dec
test
mov
lea
cltd
into
in
test
push
in
shll
cltd
cld
push
cli
dec
xor
inc
adc
mov
push
sti
test
sub
test
push
xor
adc
inc
adc
xchg
dec
aas
outsb
xchg
fldl
cmpsl
insb
shl
movsl
push
inc
outsl
adcl
lret
js
jecxz
adc
movb
push
aaa
adc
or
mov
push
rolb
insl
repnz
inc
popf
fidivl
add
xchg
pusha
dec
mov
mov
mov
pop
popf
ret
inc
fwait
mov
fsubl
inc
iret
and
add
inc
or
xchg
lahf
or
pop
out
js
test
cmc
ss
outsl
jae
mov
nop
fsubrl
xor
rolb
inc
and
mov
jecxz
fdivs
call
mov
sbb
rcr
enter
scas
out
cltd
sub
mov
ja
idivl
movsb
mov
dec
pop
cmp
jb
xchg
mov
test
jnp
sbb
pop
loop,pt
jl
jbe
shrl
add
ret
pop
mov
adc
into
orb
stos
xor
daa
std
adc
mov
in
or
bndldx
mov
cmp
lock
mov
aad
cmp
pop
pushf
mov
push
daa
pop
xchg
movsb
or
int3
mov
icebp
int
cmp
xlat
dec
aaa
aad
je
mov
mov
xchg
sahf
negl
or
xor
add
pop
test
add
mov
gs
outsb
js
pop
lahf
jo
adc
add
inc
xchg
outsb
jg
cmp
imul
cmp
or
aaa
leave
mov
jmp
sbbb
repnz
jae
stos
out
popf
in
adc
jne
addl
xchg
cmp
dec
cmc
inc
out
push
jbe
cmp
sub
sti
incb
mov
cmpsl
sub
mov
gs
les
xchg
fdivr
jbe
pop
fdivs
dec
inc
jno
cltd
out
lcall
cmp
sub
xor
js
inc
clc
je
daa
cmp
orl
cs
outsb
incl
sub
xchg
add
dec
xchg
icebp
test
mov
push
cmp
dec
or
add
mov
mov
inc
roll
lea
dec
dec
mov
lds
sbb
stc
sbb
sahf
jmp
aad
mov
lock
jp
dec
cmp
jge
call
lods
jge
pop
lahf
xor
dec
xchg
nop
hlt
mov
dec
mov
jns
in
push
lods
sub
jl
inc
out
jmp
aas
pop
das
mov
jmp
imull
shll
mov
pop
or
mov
xchg
movsb
cltd
scas
dec
jle
arpl
rorl
movsb
adc
sbb
mov
les
fbld
scas
jmp
movd
stos
adc
push
iret
sbb
pop
jns
in
addr16
fdivrs
push
inc
ja
les
inc
jo
fs
push
cmp
mov
pop
or
mov
push
and
sub
mov
fistpl
int3
loopw
xchg
jbe
repz
xchg
ftst
mov
xchg
je
xor
leave
lock
mov
test
mov
test
in
cli
or
fsts
lods
nop
les
lcall
xlat
stc
sub
lcall
mov
test
lret
mov
push
adc
jo
xor
sbb
roll
test
shll
xchg
xchg
jmp
sub
lods
in
cmp
cmpsl
inc
xor
ja
jmp
mov
xchg
mov
adc
jo
mov
aam
fimuls
xlat
incb
stc
sahf
fmuls
mov
inc
pusha
or
jp
xchg
rcll
add
mov
push
pop
roll
sti
loope
mov
push
mov
xorl
cmp
js
movsb
inc
push
fstpl
roll
fistps
in
cwtl
sahf
and
adc
mov
mov
xchg
dec
mov
sbb
mov
cmc
xchg
cmpsb
sbb
cwtl
sub
fsubrs
sub
fwait
dec
adc
std
out
or
xor
and
gs
hlt
pusha
rorl
ret
fistpl
outsl
pop
rorb
inc
stos
add
push
pop
loope
pop
sub
in
push
xchg
cld
push
andl
xchg
sbb
mov
mov
pushl
shlb
pop
cmp
cmc
and
dec
pop
imul
cmp
fidivrs
test
stos
mov
lock
cltd
lahf
fists
lods
pop
notl
cs
jge
and
pop
fnstcw
or
shrl
out
and
cwtl
push
add
mov
rcrl
arpl
jecxz
dec
out
cli
xchg
mov
cmp
xor
into
negl
sub
adcl
aad
dec
out
push
dec
push
popa
neg
aam
sub
ja
sub
inc
aaa
movsb
or
stos
ss
dec
fisttpl
stc
xchg
mov
jae
or
inc
push
and
push
xchg
inc
in
andb
cmp
insl
icebp
int
mov
mov
dec
dec
fisubl
addr16
inc
add
cmpsl
xorl
push
xor
test
lea
add
sbb
lds
sub
call
in
add
cli
pusha
es
xchg
int
int
ds
cmp
and
sub
outsl
incb
push
ds
lahf
cwtl
out
stos
adc
mov
popa
lret
vcvtdq2pd
int3
xchg
pop
in
popf
loop
push
jne
repnz
mov
inc
aas
fpatan
js
sub
popa
jmp
imul
push
fwait
dec
lahf
arpl
xchg
push
lods
negb
xchg
cltd
push
repz
pop
pusha
sbb
dec
into
orb
int
mov
jg
cmp
popf
xchg
ja
push
push
outsb
mov
data16
sarb
lea
pop
icebp
sbb
jmp
mov
mov
or
lock
xor
dec
icebp
icebp
cwtl
cmp
jle
loopne
sahf
lods
sti
push
mov
ja
daa
mov
cmp
pop
sub
cmp
mov
add
arpl
ds
sbb
repz
push
xor
sbb
ret
mov
repz
cmp
mov
push
sub
pop
mov
inc
cmp
cmp
xor
pop
hlt
mov
xchg
jmp
and
out
jmp
cmpsb
push
mov
xchg
fwait
mov
pushf
inc
frstor
or
adc
jecxz
sti
mov
hlt
add
popa
std
xor
lret
mov
ljmp
dec
sbb
subl
inc
add
divb
inc
mov
sbb
in
push
pop
cld
jbe
mov
decb
and
push
dec
pop
xchg
fldt
test
pop
icebp
add
xchg
pop
or
movsl
push
push
dec
ficoms
mov
jecxz
pop
mov
in
pop
movsl
xor
sub
fs
add
sbb
mov
daa
add
loopne
lea
xchg
cmp
adc
mov
cmpsl
inc
cmp
popa
inc
pop
push
out
dec
mov
lods
mov
fistps
enter
notl
lds
add
xchg
jb
test
xchg
outsl
mov
and
xor
mov
addr16
or
pop
stc
push
xchg
test
inc
fidivs
jne
aam
sti
repnz
jge
ljmp
mov
sbb
adcb
jno
add
and
aam
inc
mov
sub
mov
mov
loope
ficoms
sbb
ficompl
or
repnz
loopne
adc
xor
je
mov
push
jb
mov
and
test
rcrl
sub
fcoms
add
jle
push
dec
fdivrl
pop
sub
cwtl
ret
jns
and
in
xchg
in
mov
add
adc
shrb
aam
cmp
test
pop
sbb
inc
dec
popa
icebp
adc
insl
sub
and
xchg
jle
mov
ret
lret
mov
cmpsl
jge
cli
icebp
int3
jo,pn
lock
and
ror
and
adc
push
addr16
aad
lahf
cmpsb
add
xchg
lcall
jmp
push
xchg
aam
push
fisubs
mov
or
cmp
jnp
jb
cs
xchg
inc
adc
out
cwtl
push
jge
or
repnz
dec
mov
jns
mov
fstps
pop
stos
dec
iret
mov
leave
jo
out
sbb
mov
mov
or
cmpxchg
fisubrs
mov
adc
fisttpll
pop
aam
mov
xor
jecxz
insl
movsb
insb
jbe
sbb
pop
mov
adc
pop
std
je
ret
fcoml
jo
cmpsb
iret
cmpb
jo
hlt
push
adc
adc
push
cmp
out
outsb
imul
add
pop
xchg
in
test
incb
fildll
add
mov
adc
sti
sbbl
js
cmp
test
lret
decl
lahf
xlat
das
call
cmpsb
and
add
dec
push
in
lock
cmpsl
mull
test
xor
push
pop
dec
sti
cs
insl
xchg
pushf
or
xchg
jecxz
ja
rol
jnp
ljmp
lret
xor
out
add
scas
lods
leave
add
add
imul
mov
bound
mov
sbb
shrl
loope
sahf
add
cltd
call
mov
inc
stos
fnsetpm(287
es
mov
or
divl
pop
lret
push
push
loopne
dec
pop
add
fwait
lret
fists
loopne
insb
mov
lret
enter
mov
xlat
add
sbb
xor
xchg
push
mov
aad
repz
cmpsb
mov
jbe
inc
test
aas
clc
inc
and
mov
add
jmp
mov
addr16
jp
test
pop
loope
ret
or
xchg
test
cmp
add
mov
imul
add
sbb
lahf
rcr
jbe
and
mov
mov
movsb
add
cmp
adc
adcb
xchg
and
lcall
jmp
adc
jl
cwtl
clc
addr16
stos
cmp
jg
sti
sahf
test
mov
pop
cmp
stos
xchg
lea
jb
adc
les
addr16
cltd
mov
jmp
inc
sbb
mov
int3
js
and
xorl
ficomps
or
out
pop
jmp
sub
outsl
fldenv
adc
push
jnp
stc
mov
xchg
sahf
adc
and
dec
adcl
jle
ljmp
fwait
outsb
adc
mov
mov
je
in
mov
mov
repz
push
ja
mov
rorb
es
dec
mov
das
or
inc
add
std
icebp
pop
inc
and
out
jo
jnp
insl
inc
lcall
pushf
lds
aaa
insl
or
jg
and
jmp
in
in
xor
incb
cli
cmp
inc
inc
push
sbb
dec
jecxz
outsl
rcrl
pop
mov
ss
jo
xchg
sub
sub
cmpsb
jb
sub
setae
add
sbb
test
inc
ja
push
pop
cmpsb
out
in
mov
jg,pt
add
cmp
adc
std
popa
sarl
mov
mov
cwtl
mov
mov
add
mov
shr
mov
or
sarl
xchg
cs
es
mov
movsb
lock
bound
rcrb
mov
lcall
mov
aas
sbb
ljmp
stos
jp
fwait
pop
mov
fimull
push
lods
push
add
iret
pop
jge
popf
test
xchg
push
adc
test
pop
scas
gs
rolb
adc
xchg
leave
mov
push
repnz
fs
aaa
push
insb
push
mov
ror
jae
stos
sbb
mov
inc
out
fimull
jnp
mov
addr16
xchg
sub
pushf
fnsetpm(287
and
xchg
mov
fbstp
mov
pop
and
sarl
sbb
mov
jnp
push
sbb
popa
and
pop
movsl
jmp
fidivrs
out
inc
mov
sbbb
cmp
add
inc
jp
add
cld
push
sub
sub
push
sbb
or
mov
repnz
out
xor
out
xchg
add
std
mov
push
cmp
or
es
outsl
lds
ret
xlat
in
jae
out
push
add
mov
scas
repz
rorb
xchg
aas
lds
mov
ss
mov
adc
add
ret
pop
outsb
sub
xchg
ss
mov
dec
mov
aaa
shl
mov
lret
outsb
frstor
pop
inc
roll
adc
sbb
shlb
mov
shlb
fisubrs
ret
mov
xor
jp
add
dec
mov
sbb
stos
mov
iret
mov
mov
lcall
test
and
jno
mov
loop
shlb
cli
fwait
pop
mov
ljmp
std
jb
lret
fwait
push
pop
data16
jmp
lcall
adc
cmpl
dec
cmpsb
bound
cld
lock
sbb
adc
shr
mov
gs
mov
cmp
push
clc
cmp
inc
push
fstps
adc
sbb
std
loopne
sub
cmp
mov
pushf
jl
pop
cmpsb
jae
mov
fs
in
popf
jmp
aaa
mov
dec
jnp
or
xor
rclb
gs
pop
test
pop
xchg
add
push
xchg
sahf
add
sahf
in
xor
xlat
push
dec
lods
fldt
lret
mov
imul
cmp
xchg
lds
test
std
mov
sub
inc
inc
int3
into
out
pop
pop
negl
data16
cwtl
mov
adc
dec
ja
and
lds
jno
or
mov
enter
push
mov
dec
or
adc
insl
push
and
mov
or
repnz
test
mov
xchg
popa
mov
pop
outsl
xor
scas
cmp
std
jmp
mov
repz
sub
cmp
pop
pop
arpl
movsl
inc
sub
sub
cltd
push
push
gs
jae
mov
pushf
cli
push
pushf
dec
cmp
out
mov
bsf
cmp
lea
aad
sub
cs
xchg
mov
push
sbb
popa
pushf
xchg
xor
jmp
movsb
jo
iret
es
mov
enter
lods
mov
mov
adc
shrb
push
cmp
xor
cmc
and
cmpsl
inc
iret
insl
cmp
and
loopne
iret
sarb
nop
fdivp
rclb
xchg
cs
gs
push
push
leave
jge
pop
adc
int
loop
mov
cwtl
jnp
jne
lods
xchg
cmp
xor
sti
xor
roll
pusha
cs
lea
xor
adc
int
sti
enter
dec
data16
std
xor
movsb
pop
sbb
mov
xor
testb
cmp
out
pusha
sub
std
push
inc
and
in
add
dec
adc
inc
std
fadd
jbe
jmp
push
addr16
imul
addr16
and
jp
fisubrs
int
dec
or
inc
addr16
cmc
and
mov
lea
and
in
rcr
add
out
lea
pop
sbb
lret
iret
xchg
pusha
rcr
sub
ds
ds
fadds
ret
mov
xor
sbb
inc
cmc
je
gs
aam
mov
dec
ret
push
sti
das
and
xchg
mov
add
cmp
test
aam
mov
test
pop
loop
jne
inc
movsb
add
cltd
mov
dec
mov
jmp
mov
fbstp
ds
xorb
mov
js
mov
repnz
dec
pop
fwait
and
push
sbb
mov
push
sbb
je
mov
pop
aas
jae
mov
xchg
adc
pusha
lret
ds
data16
push
addb
das
adc
jae
cltd
mov
xor
xchg
pop
pushf
insb
ret
out
bound
and
sbb
jecxz
sub
lcall
dec
jge
push
add
daa
xchg
pop
adc
in
scas
lea
mov
aas
or
mov
mov
mov
loope
in
mov
test
mov
icebp
int3
loopne
push
mov
aas
cmpsl
push
xchg
jbe
mov
fs
test
fsts
shrl
into
fs
ret
lcall
xchg
pop
cmp
test
nop
fs
push
lret
mov
push
inc
pop
sbb
dec
pop
neg
mov
outsl
stos
out
rcl
popa
test
jo
sub
scas
mov
xchg
or
bnd
rcr
mov
cmp
sub
or
notb
jmp
sbb
xor
ficoml
daa
push
mov
lock
mov
rcrb
dec
mov
push
jns
push
add
mov
lea
xor
xchg
push
jmp
and
test
in
lahf
out
sub
mov
pop
push
pop
inc
aad
cwtl
jae
lea
in
sub
cld
adc
lock
call
mov
adc
lock
xorl
inc
aam
jp
pop
add
mov
lock
ja
cmpsl
mov
or
neg
hlt
push
inc
insl
and
mov
fimuls
jo
daa
and
data16
jae
aad
adc
and
ret
lods
stc
lds
pop
push
mov
jmp
mov
push
push
mov
sub
mov
ss
xchg
add
bound
aaa
das
fwait
push
mov
jns
sbb
adc
inc
pop
outsb
mov
xchg
in
imul
cmpsl
aad
rorb
in
clc
mov
mov
add
inc
pushf
push
pop
jp
aaa
cli
push
jbe
fmull
push
movsb
xchg
push
outsl
test
shlb
sbb
pop
ds
out
fcmovbe
xor
div
aas
pop
lret
ds
add
imulb
sbb
test
mov
push
mul
sbb
mov
sbbb
mov
rclb
sti
xchg
sarb
xor
mov
cmp
add
aas
mov
icebp
cli
daa
insb
stos
test
cmp
push
xlat
sub
pop
jno
jp
repz
pop
lods
cmp
insb
lahf
jecxz
pop
sub
sub
pop
cmpsl
leave
fisttps
xor
pop
in
cmovbe
xchg
and
add
push
imul
xchg
add
icebp
sbb
sub
xchg
mov
sti
mov
nop
inc
push
jne
mov
decl
sbb
es
test
jecxz
cmpsl
cmpsb
shl
std
std
mov
es
pop
sbb
movsb
push
movsb
fsubl
adc
push
shl
call
inc
xchg
inc
ror
add
cmpsb
fists
roll
ss
add
loopne
subl
sar
inc
sti
xor
xchg
nop
sub
shll
add
test
filds
sub
ja
push
js
and
inc
add
leave
lret
or
fdivr
aam
pop
pop
mov
xor
inc
mov
xchg
loopne
aad
mov
sub
xor
mov
jle
push
push
mov
add
mov
xorb
or
clc
cltd
cwtl
ja
inc
sti
mov
lds
movsb
movsl
pop
pushf
lahf
cmp
negl
mov
rolb
ja
cltd
jmp
movsl
test
int3
mov
jae
shrb
iret
btrl
in
or
iret
je
mov
add
jp
xchg
in
sbb
ljmp
mov
mov
icebp
int
shrl
add
push
arpl
sub
sub
movsl
incl
xchg
inc
push
add
sbb
xchg
mov
je
jge
fldt
jns
push
call
push
adc
icebp
pop
ret
icebp
sti
and
sbb
inc
pop
les
in
jecxz
adc
in
jg
popf
mov
adc
and
mov
jb
out
aad
inc
sbbl
jae
inc
sub
cltd
insl
mov
pop
push
pop
pop
int
push
std
in
popa
cmp
js
into
mov
in
pop
loope
push
loopne
imul
lahf
into
jg
mov
mov
cmpsl
add
flds
ss
jb
lcall
or
dec
mov
adc
fcom
jnp
test
mov
sbb
adc
loopne
sbb
sbb
pop
in
add
xor
ss
mov
sbb
mov
jle
fisubrl
mov
sub
cmp
jo
jae
adc
push
jnp
imul
sbb
aam
jmp
xor
cmp
pop
orps
jo
sbb
push
xor
jmp
iret
orb
pop
data16
incb
jg
xchg
stc
xor
rolb
daa
mov
mov
and
call
call
rorb
sbb
ret
cld
nop
push
sarl
mov
xchg
push
xor
aad
xchg
jns
mov
mov
ja
pusha
sbb
int3
adcb
and
nop
pop
push
mov
ficoms
mov
xor
mov
mov
mov
je
dec
sub
int
lock
xor
adc
les
jp
xchg
into
pop
test
xor
xchg
cmp
xchg
inc
pop
pop
popa
inc
repnz
lods
maxps
xor
aaa
xchg
out
pop
mov
xchg
xor
adc
mov
mov
fsub
imul
adc
out
sbb
test
sbb
xchg
and
xor
out
dec
mov
rcl
in
add
xor
es
mov
inc
es
mov
mov
ja
loope
push
sub
push
data16
test
dec
jnp
mov
dec
ss
xchg
jnp
lcall
or
stos
lcall
add
adc
xor
lret
xor
sbb
inc
xchg
jae
xchg
cmp
mov
xchg
rcr
iret
fs
xor
dec
cmp
into
pop
repnz
lods
mov
add
call
dec
mov
ja
and
std
adc
adc
xor
mov
fdivr
jbe
xchg
sbb
test
push
push
mov
fnstcw
lcall
test
adc
and
lea
out
test
push
ret
cmp
ja
das
ljmp
xor
mov
icebp
adc
jl
or
pop
loope
bound
add
or
sbb
mov
mov
clc
mov
lds
push
std
aad
pushf
fidivrs
and
mov
pop
adc
ljmp
mov
stc
mov
std
mov
dec
xchg
lret
mov
xchg
add
mov
cmp
mov
lret
jns
cltd
push
adc
jbe
pushf
fnstenv
add
push
jae
lods
cmp
cs
or
insb
cs
mov
int
dec
gs
aam
jge
xor
sbb
enter
mov
lcall
mov
inc
icebp
insl
ret
aam
mov
jecxz
shl
dec
dec
mov
out
cmp
loop
movsl
jb
jp
fwait
test
test
clc
push
or
mov
push
arpl
xor
sbb
iret
or
xor
mov
cwtl
movsl
jp
mov
inc
push
lock
scas
pop
push
adc
xor
dec
repz
lock
add
test
mov
jmp
jae
faddl
push
nop
xor
push
adc
lock
int
test
mov
fdivrl
and
xchg
clc
sbb
xchg
and
jl
lret
enter
add
insl
adcb
sbb
mov
inc
inc
div
fsubrp
xchg
mov
fstpt
xorl
or
fxch
andb
xor
hlt
leave
add
sbb
xorl
mov
ror
xchg
sub
gs
mov
into
push
mov
ds
and
push
mov
dec
inc
out
jo
cmpxchg
stos
jmp
xchg
sbb
sbb
jmp
testb
push
mov
inc
or
push
inc
push
xchg
pop
dec
dec
mov
iret
dec
lock
cmp
in
xchg
cmp
xchg
push
into
inc
mov
inc
mov
jg
aam
or
sbb
je
or
jae
or
mov
cmp
cmp
xchg
add
scas
ja
mov
lret
push
mov
and
adc
and
pop
pop
or
cmpsb
or
jns
xchg
add
fimuls
fldcw
mov
cmpsl
push
mov
cmp
inc
and
mov
std
adc
sbb
sbb
cld
pop
pop
lods
add
mov
int3
jb
add
jb
repz
inc
cmp
stos
outsl
xchg
movswl
outsl
sarb
lea
mov
add
xchg
les
popa
loopne
cmp
cmp
cmp
dec
add
jo
add
inc
mov
mov
lods
or
out
cld
stos
mov
out
pop
ljmp
sub
push
xchg
je
push
loop
xor
sti
inc
int
fiaddl
incb
xor
lods
jo
pop
or
mov
xor
out
push
roll
fcomps
in
jns
add
xor
fadd
mov
iret
nop
subb
xchg
jno
repz
movsb
inc
outsb
aad
dec
jbe
rolb
push
dec
pop
addr16
in
jg
jo
sbb
add
push
inc
loope
ss
inc
mov
or
and
mov
cwtl
jo
xor
mov
fcmovnu
ja
push
cmp
ret
test
add
sbb
add
imul
pop
out
lods
and
mov
ss
mov
xchg
movsb
mov
sub
pop
sub
jl
pop
jbe
xchg
xor
mov
fsubrs
xlat
popf
shl
pop
jo
lea
shlb
arpl
sub
ja
fiadds
lret
sbb
daa
add
inc
test
and
lret
inc
rcr
adc
cmp
cmpsl
loop
jle
sbb
xor
fidivrs
sub
push
jns
loop
pop
jnp
cmpsb
cmp
les
shlb
jmp
or
in
fsave
jle
scas
push
fcmovbe
hlt
nop
sub
out
inc
add
xlat
pusha
adc
jmp
arpl
dec
sbb
flds
mov
and
insl
fisubrs
js
mov
jecxz
jae
jl
mov
pop
mov
xchg
or
cmp
stc
push
inc
fbld
pusha
jbe
inc
pop
adc
add
call
out
lods
test
outsb
push
sub
movsb
pop
sub
add
nop
sarb
mov
push
and
adc
mov
cmpb
pop
outsb
jmp
adc
jbe
pop
or
stos
jnp
inc
inc
call
in
sbb
repnz
jne
in
clc
adcb
add
push
sarb
js
xchg
je
sbb
test
hlt
jne
stc
clc
test
pusha
push
jmp
iret
push
pop
mov
mov
push
push
movsl
ljmp
jmp
cs
mov
mov
fldenv
dec
outsb
das
push
sbb
jae
sbb
add
movsl
pushf
rolb
cmpsl
push
xor
cmpsb
loopne
pop
cli
ja
js
jle
movsl
fisubs
fwait
and
rcrl
jp
pop
push
pop
daa
pop
mov
mov
adc
xlat
sub
adc
sti
out
xlat
stos
sti
push
iret
xchg
inc
icebp
daa
mov
loopne
mov
idiv
or
icebp
inc
push
test
cmpsl
push
stos
movsl
addr16
lods
adc
aad
outsb
jle
fildll
lock
mov
cmc
mov
mov
mov
mov
jne
lret
and
bound
rcrl
dec
cmpsb
cmpsl
adc
ja
fwait
cmp
stos
es
inc
rorl
std
mov
decb
daa
stc
mov
mov
clc
jns
push
lret
into
xchg
fmulp
jg
cmpsl
adc
mov
pop
or
aad
push
test
jno
out
xchg
out
pop
inc
push
push
adc
ljmp
mov
sbb
or
int3
popf
scas
push
mov
push
xchg
jo
inc
dec
out
sarb
push
out
lret
xor
mov
jecxz
pushf
jl
scas
adc
stos
sti
inc
xchg
test
bound
icebp
cmp
cltd
or
out
xchg
mov
jle
sbb
test
sub
jne
sub
push
push
cmp
nop
scas
sub
aam
cmp
int3
mov
inc
movsl
and
sbb
sub
mov
mov
jmp
mov
mov
cmp
add
mov
in
push
jae
in
scas
or
mov
cmp
xorb
int3
inc
cmpsb
test
cwtl
jp
aam
aaa
imul
mov
jle
jb
mov
or
adc
shll
shll
or
sub
mov
rclb
lods
push
pop
push
shll
mov
test
pop
mov
push
out
dec
das
and
sbb
stos
jmp
push
sahf
adc
loop
and
fcomp
or
loopne
mov
sub
out
push
jae
lcall
pop
insb
adc
sub
sub
cwtl
inc
push
out
mov
rcrl
jne
aam
cmp
pushf
fprem1
sbb
ss
mov
xor
cmp
repnz
out
test
adc
loope
dec
into
out
xchg
xor
and
cli
int3
repnz
fistpll
das
in
dec
stos
loope
stc
in
cld
icebp
enter
aaa
jg
gs
pop
add
repz
xchg
test
adc
dec
notb
jle
test
out
sub
daa
lods
mov
and
aam
in
xchg
pop
cmc
stc
mov
jle
daa
cwtl
loop
and
leave
xor
add
mov
lea
fs
push
pusha
fldt
js
pusha
pop
inc
pop
lea
pop
push
pop
xchg
sub
jecxz
inc
pop
cli
into
sbb
ret
cmp
xchg
push
in
loopne
dec
stos
push
shr
stc
pop
inc
fdivrl
and
mov
leave
pushf
jns
mov
cs
sbb
int
lds
mov
mov
mov
pop
repnz
add
imul
mov
sub
in
add
xchg
lfs
dec
ret
outsb
pop
sub
fdiv
jmp
dec
push
and
pusha
lods
sarl
and
lret
int3
insb
add
dec
pop
inc
xor
mov
shrl
xor
xchg
gs
cmp
test
lods
push
jne
cmp
sub
mov
push
lret
mov
fs
inc
or
mov
rcrl
cmp
pop
mov
int
movsb
jo
adc
out
jb
jp
mov
and
or
mov
dec
push
pushf
push
mov
xor
and
xor
push
mull
mov
adc
cmp
sub
adc
addr16
mov
mov
xor
in
out
aam
clc
dec
loope
enter
sub
inc
iret
sbb
xlat
inc
mov
hlt
and
pop
xor
pop
ss
jg
push
xchg
push
shl
sbb
sub
xchg
jb
movsl
fldcw
rcrl
std
push
leave
in
mov
push
ret
scas
adc
shrb
jp
mov
fldt
xchg
les
xor
mov
mov
ds
or
movsl
test
mov
out
jbe
out
ret
lods
aad
fbld
or
mov
shrb
pushf
mov
test
mov
rorl
sbb
cmp
xchg
lea
push
mov
lahf
mov
ljmp
inc
inc
cmp
std
xlat
push
sbb
jo
outsl
les
jge
imul
push
les
mov
mov
in
xchg
in
xchg
cmc
fsubr
xor
push
mov
ja
push
inc
inc
sti
cmp
sub
sub
dec
adc
popf
mov
cmpsb
outsl
inc
cmp
testl
daa
in
mov
mov
ret
cmp
sbb
in
mov
inc
push
dec
adc
sarl
nop
arpl
inc
scas
rcrb
fs
add
cwtl
dec
xchg
lods
push
adc
dec
jg
lods
push
sub
cmp
cmpsb
test
push
test
lock
gs
subb
pop
lods
and
inc
ljmp
ds
adc
and
shll
cmp
dec
repz
jmp
adc
arpl
mov
mov
adc
iret
xchg
push
mov
and
push
cmp
mov
push
dec
inc
enter
scas
mov
mov
dec
dec
mov
mov
cmp
loop
loop
and
and
addr16
movsl
lret
dec
cli
mov
cmpsl
push
and
clc
fsubrl
pushf
jp
aas
inc
jbe
cli
adc
cmp
enter
push
add
stos
or
dec
pop
pop
mov
jo
or
adc
xor
xchg
mov
xorl
dec
pop
sbb
aaa
out
sarb
and
push
sub
icebp
sarb
add
idivl
jmp
inc
and
sub
jecxz
inc
jae
aaa
inc
repz
js
and
mov
inc
aad
jle
inc
push
xchg
call
movsb
pusha
cwtl
inc
pop
sbb
and
mov
imul
jno
data16
jns
push
and
cli
inc
mov
add
jle
sbb
loop
inc
pop
xchg
into
fdivrs
loopne
fucomp
mov
sub
int3
adc
into
call
mov
ljmp
sbb
or
sbb
fmuls
in
popf
mov
sarl
leave
leave
fs
xchg
and
cs
adc
idivb
jl
repz
add
aam
dec
adc
repnz
dec
and
pop
sbb
ss
mov
xlat
or
bnd
lds
insl
neg
mov
xchg
and
xor
out
push
aaa
jno
mov
push
bound
jge
jns
sbb
cmp
lock
and
repz
sub
pop
loopne
jl
cmp
fmulp
out
sarl
jo
push
dec
loopne
jo
lods
push
imul
scas
xchg
jmp
clc
int3
push
test
sub
je
sbb
fistps
fmulp
fidivrl
xchg
jbe
push
dec
out
pop
inc
mov
and
lret
icebp
inc
sahf
outsb
scas
add
dec
or
popl
adc
into
and
out
add
jge
mov
stos
jg
or
jge
xor
cmp
sbb
or
jp
push
cmp
ffreep
add
push
imul
loope
cmpsb
push
fwait
dec
cmp
xor
lahf
inc
hlt
jmp
sub
icebp
xchg
call
sbb
mov
test
mov
out
repnz
push
repnz
and
int3
mulb
mov
pop
inc
push
pop
xchg
fidivs
mov
or
mov
test
rorl
movsl
mov
adc
stos
add
cmp
je
or
filds
cmp
jae
shrb
popf
aam
or
arpl
decb
aam
jbe
jbe
dec
lcall
pop
mov
or
dec
pop
sub
sub
icebp
popa
fidivl
int3
adc
xor
mov
inc
cs
or
shlb
xchg
mov
pop
out
jns
sbb
cmp
fisubs
movsl
lcall
cli
call
push
in
cmp
cmp
loop
push
sbb
lret
mov
adc
shlb
sub
ljmp
enter
xorl
jmp
push
cmpsb
orl
cmc
and
mov
pop
pushf
cmp
xorl
stos
imul
rcr
out
sbb
pop
daa
jecxz
das
jp
sti
lret
cmc
add
pop
xor
int
push
cmp
xchg
dec
and
es
cmpb
mov
sub
xlat
jg
fmul
push
lret
mov
mov
or
dec
adc
lods
test
nop
shlb
cmp
imul
ja
loopne
jbe
aaa
mov
cwtl
data16
rcrb
xor
imul
aaa
xchg
mov
dec
aam
out
loop
pop
iret
mov
addr16
cwtl
mov
insb
jmp
inc
sbb
or
fcom
fiaddl
out
mov
and
cmp
test
lock
test
sub
inc
rcll
es
jne
dec
arpl
fistpl
les
fmulp
aaa
adc
inc
imul
pop
mov
mov
jmp
rcl
push
jl
mov
jg
movsb
sub
push
push
pop
ljmp
shrl
add
ret
mov
jecxz
out
andb
cs
xchg
cmp
cmp
loope
xchg
mov
xchg
add
out
push
cltd
leave
sub
insb
adc
lcall
hlt
lock
fimuls
in
sub
fcompl
adc
jmp
sub
cmp
sbb
xor
pop
dec
push
movsb
xor
jg
loope
lret
popl
das
mov
mov
repnz
ja
dec
mov
add
jnp
jb
scas
xchg
shrl
cwtl
fiadds
mov
sbb
sbb
lods
mov
pop
inc
shll
mov
or
cli
pop
push
flds
add
cmp
mov
and
mov
xchg
bswap
out
rcrb
mov
jecxz
mov
xor
repnz
cmpsl
lods
mov
push
out
xor
mov
test
jns
cmp
push
aad
je
stc
cwtl
fwait
xlat
aam
sub
pushf
pop
mov
pop
xchg
ss
dec
cmp
adc
or
andb
jecxz
push
cmp
dec
scas
sub
inc
push
andl
pop
cli
jge
cmp
cmp
pop
popa
scas
das
push
jle
insl
xchg
or
xor
out
push
sbbb
inc
sub
int3
cmpsb
outsb
insb
pop
in
inc
jne
cmc
ljmp
pushf
mov
sub
shll
test
adc
ds
dec
sub
cs
lret
mov
cmp
dec
mov
shlb
mov
movsl
sbb
loope
fisttps
aaa
stos
mov
sub
jne
jg
insl
lock
scas
mov
leave
nop
shll
mov
cmp
pop
fstps
adc
cwtl
adc
pop
fisubrl
lret
fdiv
cli
ljmp
mov
inc
mov
add
faddp
push
add
arpl
mov
cmpxchg
push
jbe
movsl
jp
es
dec
or
jmp
or
nop
mov
ret
stc
out
dec
addr16
fisttpll
lea
int
push
dec
and
cld
adc
fmul
add
xorl
cmp
fiaddl
dec
sub
lods
adc
hlt
inc
and
ss
int
add
jb
mov
or
jo
jns
gs
mov
cmp
add
sbb
add
loopne
pop
sti
leave
push
mov
dec
ja
push
mov
addb
fimuls
out
fwait
push
fwait
pop
mov
jl
bound
push
xor
popa
jp
stos
leave
add
sahf
leave
jbe
mov
jne
or
les
jge
test
daa
mov
pop
xor
ljmp
popa
sbb
or
repz
pop
sub
into
or
ds
mov
xchg
push
rolb
inc
jge
push
lds
inc
jmp
pop
cmpsb
enter
inc
out
mov
fcmovb
movsl
pop
aas
sub
leave
js
loopne
mov
jecxz
dec
and
jl
movsb
les
jno
lock
in
pop
lcall
pushf
pop
jnp
int3
movsb
cmc
add
loope
jnp
cmp
lcall
sub
xor
and
jmp
ja
add
aaa
push
or
push
or
outsl
dec
pusha
add
cli
add
dec
jno
mov
mov
jg
shl
rolb
sarb
stos
aas
lds
xor
adc
adc
adcb
or
add
jle
sarb
clc
and
mov
push
adc
xchg
movsl
pop
lret
aad
fidivrl
das
and
or
movsl
mov
fisttps
pop
jmp
sti
xchg
std
pop
mov
xchg
mov
fs
fisttpl
mov
push
enter
lds
dec
and
xor
pop
add
adcl
inc
scas
lcall
push
push
sub
mov
ficomps
jmp
lods
lcall
and
pusha
mov
pop
movsl
sti
loope
sbb
aad
cmc
adc
enter
sbb
or
pop
loopne
es
gs
inc
fstpl
xor
cmp
fadd
loope
xchg
dec
sub
jne
fldl
mov
aaa
pop
or
enter
pop
outsb
and
mov
sub
pushf
cmp
movsl
stc
mov
sbb
push
cmp
cmc
sbb
jg
mov
sarl
pop
inc
aad
insb
pop
inc
aas
sub
xchg
and
rolb
lods
aaa
pop
ret
mov
jecxz
and
lret
stos
xor
in
xor
xchg
sbb
les
push
testl
inc
adc
sub
loope
mull
pop
xlat
xchg
jne
imul
in
or
adc
sbb
cmp
ja
scas
aam
dec
out
mov
sti
sbb
js
shlb
aaa
mov
int
and
cmp
pop
jno
sahf
or
cmc
dec
mov
outsb
mov
daa
mov
pop
fdiv
push
subl
xlat
cltd
inc
mov
int3
mov
pop
sbb
cmp
gs
pop
dec
arpl
add
sub
shrb
jns
arpl
cld
pop
add
push
adc
inc
pusha
loopne
pop
jo
inc
mov
mov
fmul
sbb
call
dec
push
pop
out
inc
push
sbb
aad
notl
mov
addr16
or
or
cli
inc
pop
test
jae
mov
push
fwait
aaa
lret
fisubrl
sub
pop
pop
outsb
lcall
test
dec
lods
les
add
lcall
mov
pop
inc
call
mov
dec
jle
es
push
ret
push
clc
mov
out
stc
ss
push
gs
inc
cltd
xchg
sub
inc
lret
aas
lods
push
sbb
int3
add
cli
sbb
aas
mov
inc
mov
roll
cltd
and
cltd
out
pop
bound
pop
xchg
je
notb
mov
add
mov
pop
outsb
push
pusha
cmpsb
scas
inc
cmpsb
je
cmp
sarl
sub
sub
stos
xchg
sub
adc
push
jecxz
pop
jg
lcall
jge
mov
inc
push
movsb
add
sub
shll
ret
jo
hlt
or
add
popf
fstp
adc
ja
fst
es
push
lock
xchg
leave
ret
js
cmp
and
das
mov
out
cmp
out
push
push
mov
add
mov
push
push
je
rcrb
es
in
sub
stos
movsl
rcrl
jno
mov
dec
jp
or
jge
cwtl
mov
add
ss
add
jns
ja
neg
push
sbb
push
sbb
sahf
imulb
sbb
popa
rolb
dec
xchg
sbb
push
int
sahf
mov
and
lret
fucomp
jo
clc
mov
or
dec
or
inc
scas
xchg
repz
jle
lods
sarb
xchg
add
stos
out
mov
mov
add
testb
int3
xchg
lock
inc
outsl
inc
mov
adc
addl
test
cmp
jg
xor
inc
mov
mov
aas
xorb
mov
inc
push
cmc
mov
in
xor
test
outsl
cmp
mov
out
test
pop
push
insb
fisubrs
loope
or
je
dec
xchg
je
or
xchg
subl
adc
inc
data16
popa
cld
rolb
jl
ret
fisubs
pusha
sub
push
fmul
mov
jo
push
outsb
inc
xchg
xchg
jecxz
ss
ret
subb
es
jl
adc
rorb
dec
xchg
and
cmpsb
iret
pop
jnp
loope
xchg
icebp
push
lret
dec
fidivs
scas
sahf
test
jg
fs
ja
add
dec
inc
jg
xor
sahf
not
push
sub
push
pop
fisubrs
daa
idivb
jae
call
push
cmp
aad
inc
iret
iret
lcall
jp
ret
lock
pop
add
mov
test
and
imul
mov
insl
mov
add
xlat
add
insb
stos
test
les
ret
or
dec
clc
mov
sbb
sbb
push
xchg
inc
out
mov
ret
jg
loop
pop
xchg
mov
data16
ret
sub
into
sahf
aad
fisttps
loopne
data16
repz
xor
push
out
pusha
sbb
lret
mov
inc
add
imul
adc
cs
aam
lds
popf
aas
sub
inc
sahf
pop
xor
xchg
fcmovu
movsb
pop
mov
xchg
cmp
imul
pop
popf
and
mov
es
mov
xor
push
cmc
jmp
mov
andb
ds
ss
jbe
and
sahf
pusha
sub
arpl
call
pop
fs
mov
ret
push
shll
cmp
fisttpl
adc
call
push
cmp
cli
sbb
outsl
xor
mov
lea
andb
dec
inc
out
mov
inc
inc
jbe
adc
add
insb
push
inc
aam
lcall
aam
fisubrs
ja
dec
aam
lods
in
data16
les
cmpsb
jp
shl
cli
mov
fstl
mov
lods
add
jbe
sbb
cli
pop
xchg
jno
movb
xor
pop
lods
pop
add
mov
jecxz
dec
dec
xor
xor
arpl
cli
dec
cwtl
scas
lods
cltd
pusha
ret
and
sbb
mov
pop
in
mov
inc
add
add
cmp
data16
push
inc
sub
cs
mov
jge
clc
aam
push
shlb
xchg
ficompl
pop
dec
push
lahf
xchg
stos
or
roll
out
push
out
xor
pop
or
push
xor
sbb
jne
sbb
out
jg
adc
js
imul
fadds
adc
fisubrs
icebp
cmp
add
test
ds
es
mov
test
sbbl
cltd
outsb
adc
inc
cmc
nop
add
aas
ficompl
in
xchg
fbld
fnstsw
test
sti
arpl
iret
inc
mov
jle
fisttpll
and
fisubrl
dec
pop
outsb
inc
popf
rorl
aas
cmp
jl
in
pop
adc
out
xchg
inc
fs
rcrb
fdivrs
cmc
insl
fsincos
jae
insl
mov
pop
je
loop
or
or
fcoml
inc
mov
fwait
adc
lret
jne
xor
data16
mov
mov
cli
mov
jecxz
cmpsl
jae
testl
dec
push
fidivrl
pop
adcl
cmc
cmc
icebp
push
imul
out
addr16
cmp
bound
aad
rcrb
imul
mov
push
jp
cmp
inc
xlat
or
mov
lcall
sub
loope
leave
test
push
mov
gs
adc
ret
add
aas
lock
mov
add
scas
lock
jl
cmp
jge
mov
adc
sub
dec
jns
stos
jne
push
mov
aad
pusha
cmp
shll
fnstenv
ds
cli
mov
and
and
int3
adc
movsl
shl
insb
jnp
jmp
and
divb
jno
addl
sbb
push
or
movsb
xor
pop
sub
std
mov
insl
loop
imul
fs
mov
int3
pop
negb
sub
stos
xchg
jg
popa
mov
in
div
ret
fadds
push
pop
loope
out
arpl
test
int
punpckldq
sub
ret
xchg
repnz
mov
mov
pop
cmp
push
ficompl
out
js
mov
mov
adc
or
sbb
inc
pusha
es
mov
rorl
add
aam
pop
mov
xlat
das
dec
push
mov
aam
or
out
xchg
ret
push
push
popf
mov
data16
into
push
maxps
or
xchg
pop
adc
jae
mov
cmp
cld
fisubrs
xlat
xor
push
daa
sub
lret
adc
mov
fucomip
into
insl
inc
push
cmpsb
out
mov
gs
pop
mov
data16
jns
movsl
add
adc
lods
push
jnp
mov
xchg
mov
xchg
jnp
cmp
fnsave
sahf
sbb
stos
ss
inc
out
arpl
cmpsb
mov
les
cmp
dec
dec
jo
jmp
mov
xchg
mov
or
pop
jge
out
sbb
add
scas
cmp
or
dec
adc
inc
divb
loop
dec
mov
jle
xchg
xor
outsb
push
adc
adc
mov
cld
int3
cmc
mov
sub
in
mov
clc
push
popf
lret
inc
popf
fistl
movsl
inc
scas
je
mov
test
cmpsb
jecxz
sbb
stos
lds
inc
cld
and
xchg
xorl
clc
pop
outsl
in
das
out
notl
in
testl
in
dec
or
insl
fidivs
int3
cli
or
push
xchg
daa
fildl
fisubs
xorl
sbb
push
out
cmp
int3
sbb
xor
xchg
ret
insb
inc
jbe
loop
jp
std
sbb
or
daa
cmp
push
shrd
add
xchg
push
mov
mov
out
push
stos
cmp
mov
dec
lahf
add
pop
cwtl
mov
sarl
add
pop
xor
fidivs
cmp
push
fstps
mov
jge
and
loop
xchg
inc
lea
pop
push
push
lahf
ds
sbb
xor
add
shr
pusha
movsl
fldt
dec
pusha
lds
loop
roll
mov
cmc
loop
xor
jnp
and
fdivr
add
out
sub
mov
sbb
cmp
es
shl
and
into
inc
mov
adc
repz
daa
imul
push
mov
or
sahf
clc
aas
clc
stc
imul
mov
pop
lods
movsl
sbb
enter
sbb
out
adc
mov
cmp
cmp
outsl
ds
xchg
inc
jl
add
orb
cli
les
fstps
mov
mov
ja
std
ljmp
ljmp
out
out
and
mov
push
dec
or
inc
addr16
loop
jmp
xchg
pop
mov
aas
imul
cmp
cmp
dec
ljmp
sbb
js
pop
test
mull
arpl
stos
repnz
or
lods
loope
push
xor
data16
gs
cmp
adc
cmp
mov
pop
xor
jle
cmp
mov
mov
popf
jg
in
jns
add
loope
dec
and
jp
adc
test
ss
push
push
dec
in
xchg
frstor
cmp
icebp
mov
adc
rcll
and
xor
xchg
sub
test
mov
lea
leave
insb
popa
sub
sub
ss
repz
xchg
and
jns
mov
mov
fisttpl
int
pop
int3
xchg
leave
out
push
cmpl
pop
or
sbb
push
pop
aaa
push
jnp
sub
lods
mov
testl
ret
or
mov
lahf
push
decb
sbb
loop
jl
add
pop
add
movsb
mov
stos
les
mov
dec
scas
xchg
neg
jnp
cs
jnp
xlat
ss
jge
jmp
mov
mov
mov
push
push
rcll
addl
mov
mov
mov
cmp
jp
jbe
push
xor
pop
fnstsw
ljmp
jnp
push
sbb
sarl
and
mov
mov
ja
aaa
pop
mov
rorl
or
push
out
movsl
adc
loop
jl
pop
fcomps
mov
mov
cmpsb
jmp
push
fsub
fisttpl
shrb
in
cmp
call
cmpsb
insl
je
out
jbe
subl
pushf
cltd
xchg
pop
aas
dec
jne
adc
ja
add
loopne
stos
or
lahf
fmull
xlat
ret
pushf
sbb
and
iret
mov
dec
cmpsb
es
in
shll
test
daa
jecxz
cmc
ret
inc
or
mov
fwait
jo
mov
jne
sub
jl
das
test
push
sbb
pop
mov
sub
sub
cs
sbb
negb
sahf
push
mov
pop
xchg
ss
imul
xor
sub
push
lods
test
lcall
pop
mov
mov
sahf
shr
xor
into
and
repz
mov
rcrl
inc
add
xor
out
pop
addr16
cmc
lahf
xchg
lcall
mov
cmpsb
out
jno
je
jbe
push
pop
push
dec
clc
fwait
daa
out
push
fstp
adc
fistps
adc
lret
test
adc
repz
fcoms
mov
sbb
in
pop
dec
or
imul
cld
pop
mov
lods
int3
cmp
inc
mov
cltd
add
aam
push
sub
popf
add
scas
mov
in
jbe
clc
mov
subl
sbb
insb
in
out
jecxz
shll
mov
and
in
cmpsb
push
lods
dec
push
cmpsb
xor
imul
mov
int
pop
out
push
cmpb
cmp
mov
pushf
push
push
ljmp
inc
jno
cmp
pop
adc
movsb
dec
hlt
fisubrs
push
int3
push
pusha
andb
mov
sub
mov
adc
and
arpl
adc
in
cmpsl
pop
adc
lea
dec
fisttpl
or
out
xchg
fcmovnb
in
leave
testl
and
lods
dec
adc
xchg
push
add
adcb
mov
bnd
adc
mov
dec
inc
mov
push
leave
add
xor
inc
cltd
dec
stos
loop
daa
mov
jg
sub
and
jg
jge
pop
fs
je
call
jl
cli
pop
xchg
mov
pop
iret
loope
jne
into
sub
iret
mov
mov
scas
fs
test
dec
rorb
mov
stos
jmp
fstpt
add
xchg
shrb
pop
scas
outsl
stc
mov
and
adc
and
fdivl
sub
inc
jno
bound
fidivs
ss
fiaddl
sub
cmp
das
sub
dec
mov
jne
popa
xor
aad
pusha
pop
imul
sub
sub
test
sub
les
ljmp
ja
adc
or
mov
dec
jl
movsl
popf
mov
mov
mov
sbb
cltd
pusha
fiaddl
outsl
out
loopne
inc
sub
xchg
xchg
push
mov
mov
test
ret
cwtl
loopne
xor
fcmovb
fwait
mov
mov
fdiv
jae
stos
shlb
push
pop
fldl
xchg
cmp
in
out
test
sub
xor
or
xor
lret
push
lock
inc
add
push
xchg
xor
pusha
xor
lods
push
pop
pop
mov
mov
xchg
mov
sub
or
mov
sbbb
loopne
cmp
lods
ret
in
sbb
lea
sbb
xchg
loope
pushf
xchg
jbe
mov
shl
ret
scas
testl
enter
sahf
jge
test
fildl
cmp
mov
lock
fnstsw
push
inc
xchg
jp
aaa
lcall
add
adc
lret
sbb
rcll
sbb
ljmp
inc
mov
je
lods
lock
sbb
mov
push
sub
aaa
outsl
jmp
mov
mov
jmp
lock
test
inc
divb
or
xchg
mov
mov
mov
pop
test
xor
cmpsb
jle
scas
push
pop
pop
outsb
mov
jle
xchg
xchg
push
push
cmp
xor
sub
mov
sbb
loopne
outsb
pusha
or
cmc
sub
adc
pop
jns
imul
jp
xor
pop
inc
sbb
loopne
hlt
push
dec
cwtl
cmpsb
sbb
ds
mov
frstor
pop
adc
mov
clc
push
shrb
xchg
fs
xor
fsubl
push
mov
fwait
mov
iret
test
or
push
mov
cmpsb
fs
sub
pop
ss
les
loope
mov
add
pop
das
pop
loope
dec
push
push
pop
push
lret
mov
scas
fmuls
stos
jno
mov
jb
out
rcr
cld
out
sub
stc
pop
out
adc
out
mov
leave
and
cmc
movl
sbb
jecxz
jg
xlat
mov
addr16
icebp
cmp
push
hlt
fwait
or
scas
sub
or
aad
incb
or
aas
adc
out
adc
xor
adc
lahf
jl
mov
sti
add
xchg
les
dec
pop
mov
gs
or
repnz
mov
jle
adc
lock
adc
rorb
cwtl
dec
int
jg
jl
pop
call
jbe
loope
or
and
mov
ja
jbe
imul
push
insl
jge
fdivl
mov
push
adc
insb
aam
sbb
xchg
push
shlb
mov
add
inc
repnz
cs
cwtl
push
ljmp
or
xchg
lods
ret
jbe
jns
and
pop
shrl
xor
mov
sub
lahf
dec
loopne
test
adc
dec
stos
adc
test
mov
mov
adc
rcr
aaa
mov
fucomi
xchg
adc
dec
adc
inc
mov
rcpps
add
out
push
fsubrl
insb
push
mov
jae
jmp
pop
push
and
inc
mov
rcrb
pop
inc
je
xchg
sub
mov
adc
lret
jae
push
mov
sbb
inc
push
and
aad
insb
rcrl
aam
pop
jge
aad
lahf
imul
or
sahf
repz
cmp
mov
sahf
xchg
aam
in
mov
dec
cmpsl
and
jae
mov
or
fisubl
xlat
mov
add
arpl
mov
popa
mov
pop
popf
les
dec
adc
sbb
mov
popa
shr
lea
mov
cmp
shlb
jle
mov
xor
lods
inc
cmp
xchg
fstps
xchg
xor
mov
lret
pmaddwd
push
xchg
sub
lcall
cmp
push
bound
xchg
js
imul
iret
push
mov
cmc
cmp
add
cmp
sub
mov
movl
ret
mov
ficomps
out
sub
std
push
mov
or
adc
int3
pop
dec
pusha
int
fsubrl
enter
cmp
jl
inc
loop
sahf
cmc
and
int
mov
dec
es
push
call
mov
add
xchg
jae
cmpsl
dec
add
jecxz
ret
testl
ja
push
mov
fnstenv
rorl
or
insl
bound
nop
cld
icebp
cmp
xchg
pop
lds
jb
sbb
dec
stos
jmp
lock
inc
or
xchg
icebp
xchg
pushf
lret
leave
and
cmpsl
bound
cmp
mov
mov
es
je
ja
xchg
hlt
xchg
or
std
xchg
in
pop
xchg
mov
pop
sbb
ror
scas
cmpsl
into
xchg
movsl
xlat
xchg
dec
pop
pop
out
xor
ljmp
insb
mov
loopne
jno
xchg
and
cmp
mov
mov
and
cmp
int
add
dec
mov
aaa
lods
sbb
mov
sbb
std
xchg
sahf
mov
pop
and
test
mov
push
test
cwtl
push
cmc
lahf
repnz
in
gs
cwtl
xchg
xchg
mov
and
xor
fisubrs
add
in
mov
dec
in
and
xlat
mov
pop
sbb
and
test
jnp
pop
push
sub
xchg
jge
fisubs
and
fidivrs
repnz
mov
mov
lock
xchg
enter
jp
jecxz
call
and
lods
push
leave
ret
xor
mov
pop
xor
or
std
negb
shl
pop
jb
pop
add
fstpt
pop
dec
insl
imul
sbb
add
inc
stos
and
shlb
sbb
imul
in
pop
imul
adc
push
dec
iret
jne
or
imull
sbb
add
pop
adc
jg
or
int
popf
adc
adc
push
pop
pop
adc
and
sub
adcb
insl
test
hlt
add
inc
mov
test
jecxz
lret
xchg
jns
movb
sti
jns
jge
gs
sub
mov
push
add
mov
je
mov
inc
test
fsubl
xchg
lahf
inc
jl
mov
lods
mov
mov
sub
out
inc
outsb
sbb
les
xor
mov
sbb
dec
addr16
ljmp
cli
imul
dec
and
bound
imul
push
inc
dec
lds
neg
push
pop
xlat
or
dec
xchg
add
sahf
dec
pop
mov
cmp
ss
or
clc
js
cmc
aad
lock
int3
mov
cmp
loop
cld
push
cmp
lods
loop
popf
mov
shll
js
test
or
pop
mov
adc
cmp
test
mov
subb
sub
pop
jmp
enter
add
and
adc
or
dec
jg
jmp
mov
pop
inc
out
adc
push
bound
inc
pop
popa
stos
iret
push
pop
inc
iret
push
idivl
jne
loop
xchg
mov
and
pop
addr16
shll
pushf
xchg
mov
or
in
mov
cmp
gs
add
dec
push
sub
mov
gs
adc
inc
xchg
pop
or
push
enter
push
pop
shr
loope
push
fsts
arpl
pushl
add
xor
int
xchg
ret
or
dec
adc
ds
or
jg
int
mov
inc
ret
repz
das
in
out
rol
inc
adc
aas
pop
es
adc
and
cmp
mov
cld
pop
dec
lods
and
or
sahf
out
jp
xchg
imul
sahf
inc
lahf
mov
sarb
inc
fs
sub
daa
test
fwait
xchg
jae
adc
leave
rorb
outsb
push
xchg
jmp
dec
les
inc
mov
mov
jns
or
adc
pop
clc
lahf
cltd
lcall
and
ja
outsb
or
mov
cmpsb
mov
rclb
out
lahf
popf
jns
xor
and
add
test
pop
sbb
inc
scas
sub
popf
ror
mov
bound
pop
pop
cmp
jno
jne
hlt
pop
ds
outsl
cld
test
cmp
iret
fsubl
inc
lcall
js
adc
cmc
cmp
insb
call
call
push
stos
aaa
test
iret
jg
movsb
xor
es
push
ds
test
jbe
jge
sub
lcall
ficomps
add
pop
aad
mov
mov
sbb
adc
fwait
test
idivl
subl
push
pop
adc
leave
ljmp
mov
loop
jnp
daa
push
clc
les
lock
push
sub
mov
aad
sahf
xor
jo
in
inc
lods
out
cmc
addr16
lods
fsubrl
repnz
subl
test
into
adc
nop
mov
cwtl
jns
pop
adc
js
movsl
push
dec
aaa
das
icebp
shl
jge
and
jae
or
sub
icebp
js
jno
jne
jg
mov
insl
push
mov
dec
xor
lock
adc
in
mov
mov
cmp
cmp
and
mov
xor
popf
jb
outsl
or
lret
xlat
imul
cmp
aaa
cld
dec
das
lahf
push
push
sub
or
add
mov
xchg
xor
and
mov
xchg
addb
call
jmp
divl
mov
cld
adc
gs
mov
pop
mov
aad
xor
pushf
add
insb
scas
popa
xchg
mov
cmp
ja
aas
les
xlat
aad
insl
mov
je
jp
sarb
out
popf
cmpb
cmp
xor
loop
and
clc
aad
ljmp
mov
jp
int3
sbb
push
mov
hlt
cmp
dec
frstors
inc
mov
es
mov
mov
nop
cmpsl
pop
push
cmp
jge
adcl
aam
cmp
mov
inc
shr
call
jecxz
cmpl
jo
and
popa
add
leave
pop
sbb
and
push
mov
or
rcr
pop
adc
lods
jns
test
push
das
je
inc
mov
aad
vcvtsi2sd
aas
sub
nop
xor
test
sbb
cmp
inc
cmp
orb
push
lock
out
xchg
in
outsl
aaa
imul
cmpsb
push
cmc
mov
aas
loopne
and
pop
pop
pushf
adc
mov
lcall
shlb
lods
in
pop
push
imul
sub
mov
cmp
popl
xor
push
jmp
fstp
pop
xor
pusha
xchg
and
cmp
push
add
pop
pop
inc
lock
jne
cmc
adc
enter
test
xor
popf
dec
push
push
jecxz
popa
das
mov
out
mov
std
popl
adc
addr16
pop
jecxz
add
or
ret
pop
imul
cli
inc
fldcw
pop
or
shrl
call
or
lret
sub
adc
call
mov
adc
cli
pop
sti
adc
pusha
insl
push
adc
in
mov
fdivl
shl
dec
push
in
fbld
pop
sahf
ljmp
pop
push
sbb
xchg
or
jbe
sub
lcall
push
adc
ficompl
adc
or
adc
mov
push
mov
scas
pop
cmp
pop
lcall
push
add
pusha
mov
jae
mov
aam
clc
in
in
mov
push
inc
and
push
sub
jnp
mov
mov
nop
xchg
inc
scas
xorb
cmpsl
icebp
jmp
push
or
inc
fists
test
adc
pop
insl
jl
stc
and
mov
or
mov
mov
in
fisubrs
pmulhuw
repz
ja
lcall
push
aam
movsb
imul
push
cld
aam
sub
outsb
mov
int3
add
ss
jno,pt
subb
jb
xchg
xor
fcmovnu
mov
test
cmpsl
mov
pop
outsl
or
pop
test
sbb
stc
ror
jge
pop
es
lods
mov
scas
inc
out
jecxz
xchg
cld
js
inc
out
and
aas
pop
dec
std
fdivs
fs
push
adc
cmpsb
sub
fstp
test
cwtl
dec
mov
lock
arpl
mov
popf
test
dec
jo
xchg
jo
lcall
jmp
rolb
sbb
fnstsw
fsts
sbb
add
imul
xor
jle
jp
cli
mov
in
jmp
push
fstpl
out
jecxz
lret
test
inc
inc
push
push
scas
xchg
aaa
adc
sbb
sbbl
das
cmp
mov
adc
mov
pop
pop
in
mov
loope
stos
push
sub
out
jmp
push
aad
pop
dec
mov
pushf
mov
fdivrs
mov
adc
pushf
icebp
jns
dec
mov
and
pop
push
mov
ljmp
cmpsb
mov
imul
out
cmp
shr
popf
xor
out
fsubl
ss
push
sbb
aam
orl
mov
adc
add
in
je
mov
int
fldt
cmp
sbb
in
xchg
cmpsb
popa
out
imul
or
adc
addr16
dec
es
stc
mov
lds
rcrl
pop
cmp
jge
cmp
outsb
cmc
repnz
mov
mov
push
mull
shl
orb
sbb
lock
fbstp
int
lea
jb
pop
inc
fisttps
jmp
mov
loope
shll
fcmovb
mov
mov
mov
or
push
mov
lcall
mov
add
xorb
mov
mov
push
push
cmc
jmp
adc
push
aad
or
xor
out
push
popa
jb
je
xchg
jmp
mov
bound
sbb
mov
push
loopne
or
inc
mov
test
mov
jnp
addr16
out
mov
add
daa
add
in
shlb
test
leave
imul
mov
cwtl
lds
into
scas
inc
sti
js
mov
inc
je
and
in
cmp
les
lock
inc
or
cmpsl
idivl
jp
cltd
icebp
and
sub
and
sbb
test
push
jb
and
cmpsb
leave
push
mov
jp
std
push
int
mov
ljmp
hlt
or
mov
sub
push
xchg
sbb
xchg
dec
pop
or
shlb
daa
push
int3
mov
ror
not
xchg
cmp
add
in
push
rorb
sbb
push
shlb
repnz
bound
repz
and
pop
push
out
push
mov
call
movsl
mov
push
pop
sbb
mov
dec
xchg
lods
mov
inc
mov
dec
mov
rorb
loope
pop
out
sub
in
mov
xchg
inc
dec
sbb
pop
imul
jl
loope
fidivs
testl
inc
jns
pop
cmp
lods
dec
shl
pop
and
aad
add
jbe
sub
mov
jo
sahf
mov
dec
andl
add
inc
xchg
int
mov
cmp
sbb
stos
cs
dec
add
mov
push
jb
or
pop
xor
sub
scas
xchg
or
xchg
mov
cmp
in
lods
sub
pop
aad
out
and
mov
imull
mov
push
and
shrb
nop
scas
xchg
jbe
push
insb
add
dec
loop
adc
push
in
dec
inc
inc
xchg
pop
lret
repz
push
sahf
push
imul
bound
test
adc
and
mov
jecxz
bound
push
aaa
cmp
sub
loopne
pop
and
insb
enter
add
rolb
sub
ret
cmpb
outsb
std
rcrl
loop
mov
cmp
aad
or
shl
ljmp
cmp
cmp
push
lds
lret
popf
sub
adc
sbb
or
sahf
jl
and
shll
pop
mov
cmpsb
gs
jp
mov
out
push
push
stos
jae
inc
test
je
divl
test
imul
mov
lea
mov
daa
pop
jge
cmp
mov
inc
jge
aaa
out
sub
clc
shrl
pusha
lahf
jns
adc
mov
rorb
dec
xchg
sbb
cld
xlat
pop
je
clc
mov
lods
or
stos
mov
cmc
sub
pop
jo
cmp
movsb
lcall
loopne
outsb
aam
out
jbe
popf
js
jg
rcrb
popa
dec
mov
xchg
xor
sbbl
mov
pop
lods
popf
fwait
adc
mov
ret
jmp
loopne
gs
ss
popf
mov
cmp
adc
xor
add
adc
lret
iret
mov
jo
or
repz
and
aam
inc
mov
jl
ss
ja
sarl
mov
stc
pop
or
popa
mov
jmp
and
gs
leave
jne
neg
lahf
stos
dec
jae
or
cwtl
adc
xchg
lahf
inc
insb
aam
jne
mov
xchg
int
jae
pop
mov
push
int
and
mov
ret
mov
mov
xor
cs
xor
xchg
mov
dec
gs
adcl
js
adcl
dec
insl
fst
enter
jne
scas
cmp
pop
clc
dec
clc
idiv
and
jns
xchg
mov
call
insl
jp
jnp
arpl
enter
enter
mov
lret
shr
sub
pop
sahf
mov
xor
scas
sbb
das
sub
pop
sbb
fcoml
xchg
loopne
pop
sub
mov
mov
and
data16
and
jge
test
ret
aam
dec
mov
in
and
out
fwait
les
call
loope
lods
push
in
imulb
ret
dec
test
es
jmp
in
fistpl
inc
test
outsl
inc
pop
rorb
mov
gs
xchg
jge
jo
and
ss
and
les
xor
in
xchg
mov
movsb
xchg
mov
inc
push
dec
out
dec
test
jecxz
mov
xchg
rolb
cmova
or
jecxz
xchg
imul
repz
inc
mov
sbb
pop
mov
lds
dec
or
enter
pop
sti
aas
outsb
pop
push
sub
jmp
lcall
pop
dec
jb
clc
mov
mov
lds
out
mov
push
test
add
xlat
or
rcl
icebp
xlat
imul
jge
cld
xorb
mov
sub
mov
adc
imul
lds
mov
sbb
clc
sub
mov
xlat
ljmp
es
repz
mov
pop
inc
jl
sbb
dec
pusha
cs
aad
aaa
and
xor
orl
cli
fistps
addl
test
rclb
into
roll
xor
xor
leave
jo
xchg
cmp
mov
fists
in
sbb
jbe
loop,pn
sub
mov
stos
movl
adc
and
cmc
mov
jbe
pop
rclb
jmp
xor
lods
in
cs
frstor
shr
mov
mov
rorl
arpl
mov
jnp
sub
repz
lds
jge
mov
mov
or
sahf
pop
aad
mov
sbb
inc
push
mov
in
movsl
out
and
xchg
in
and
movsl
cmc
out
repz
pop
movsb
fwait
sbb
and
push
mov
mov
sub
mov
lahf
arpl
cmpsb
and
int
notl
dec
push
out
rolb
mov
mov
jge
mov
cmp
jp
addb
dec
add
fcoml
insb
add
mov
test
xchg
cli
inc
movl
or
dec
mov
scas
or
xchg
mov
dec
mov
pop
sbb
rcl
lock
mov
jb
dec
cli
out
lods
mov
add
dec
dec
je
mov
sarl
aam
test
cmpl
pusha
aam
inc
push
adc
cs
sub
xchg
ljmp
faddl
orb
cmp
cmc
xlat
mov
mov
loopne
inc
lret
jnp
dec
mov
les
cmpsl
bound
xchg
xorb
jge
xor
addr16
pop
xor
sub
in
in
xor
shlb
adc
sub
fdivs
push
in
push
xor
arpl
mov
mov
cmpsb
lsl
scas
mov
daa
dec
mov
xor
mov
push
call
fcompl
pop
push
aas
shlb
xor
negb
add
sbb
xchg
push
aam
add
xor
ficoms
iret
data16
andl
pop
push
add
mov
sub
push
movsb
xor
ret
mov
imul
mov
fwait
enter
mov
jo
pop
pop
popa
je
clc
popa
pushf
mov
mov
cltd
xchg
or
icebp
mov
aas
jmp
int3
sub
add
add
movsl
ficompl
fdivr
es
fsubr
adc
pop
out
cmp
or
xchg
jne
and
xor
roll
pop
mov
icebp
rorl
push
jp
fwait
ret
add
in
scas
cmp
icebp
movsb
or
mov
enter
push
mov
pop
or
idivl
xor
xchg
sbb
jae
dec
lcall
test
push
jnp
inc
into
mov
xor
jmp
adc
and
in
pop
mov
push
push
jne
subl
dec
mov
and
fiaddl
test
aas
xchg
sbb
mov
rcl
xor
cmp
loop
jg
clc
cmp
jge
push
das
cmp
xchg
sbb
inc
pusha
fwait
jns
or
adc
xor
es
les
push
fnstsw
xchg
and
ljmp
xchg
in
iret
es
cltd
xlat
sahf
add
hlt
inc
outsb
xor
out
push
mov
push
jge
aam
lret
sub
sub
std
lods
shl
fwait
mov
icebp
in
or
cmc
dec
push
fiaddl
sub
test
dec
addr16
mov
inc
mov
xor
sub
mov
mov
mov
or
xchg
cmp
cmp
sbb
clc
pop
arpl
push
sbb
sbb
dec
out
adc
fs
int
mov
add
subb
hlt
lods
push
jmp
into
mov
add
dec
pop
and
jp
lds
outsb
jmp
imul
xlat
jb
jae
call
push
jbe
cmp
out
les
xchg
scas
xor
mov
shl
add
popa
lret
andl
push
pop
sub
add
mov
bound
in
mov
and
dec
jno
mov
lock
shlb
shll
push
mov
test
pop
cmpb
and
xchg
pop
add
push
sbb
cmp
loope
fdivrs
shlb
loope
insl
cwtl
xchg
inc
lods
lock
pop
jo
pushf
jecxz
shrb
lahf
fidivl
imul
mov
jecxz
add
mov
les
push
cmp
mov
mov
or
and
inc
or
rcll
dec
xchg
sub
lret
dec
cmp
push
jl
pop
jmp
or
in
or
dec
lret
testl
sbb
xchg
sbb
pop
nop
enter
call
leave
lods
shll
cs
xchg
int
scas
popf
out
jge
mov
dec
pop
and
adc
xor
inc
push
and
push
mov
mov
xor
xor
xchg
inc
and
lea
push
add
les
inc
pop
mov
cmpsb
lcall
lcall
adc
pop
iret
xor
mov
dec
cli
popa
popf
jae
push
dec
sbb
imul
cmpsb
adc
xchg
pop
out
inc
xchg
stos
jb
and
int
jp
aam
fdivrs
addb
pop
jne
push
or
add
mov
mul
notb
roll
shll
and
scas
xchg
jae
mov
jmp
jae
gs
add
or
daa
ja
lcall
push
push
and
aam
cld
lahf
fimull
mov
out
repz
dec
jbe
data16
jbe
fisttps
sub
jle
add
movsb
or
andl
xor
push
pop
push
test
cmc
or
pop
loop
sbb
fyl2xp1
adc
loop
or
adc
jo
cltd
pop
cmpsl
stos
jo
jg
fimull
in
or
lcall
mov
lods
and
push
jmp
mov
or
stos
dec
scas
js
push
add
jmp
add
adc
mov
adc
shrl
test
lods
ss
adc
inc
mov
fidivs
insb
cli
dec
stos
cltd
cs
push
outsb
ljmp
sbb
stc
dec
out
mov
sbb
daa
inc
lret
lea
xchg
lock
inc
mov
jb
in
outsb
fcmovnb
xchg
lcall
repz
and
adcl
push
mov
inc
fmul
lret
or
pop
push
add
sub
fdivr
jae
je
test
add
mov
jle
js
dec
sub
inc
mov
pop
stc
jno
insl
mov
pushf
sbb
test
mov
inc
xor
gs
sti
push
jno
jns
je
sahf
add
xlat
movsb
fyl2xp1
sti
movsl
sbbb
scas
call
lret
mov
mov
stos
arpl
push
cmp
pop
inc
test
test
lea
cmp
fsub
mov
imul
push
pushf
mov
aad
call
das
pop
push
out
pop
mov
movsl
push
in
mov
ret
add
adc
out
int3
fdiv
dec
add
movsl
and
jmp
push
andl
mov
das
popf
xor
pop
stos
pop
xor
or
pop
push
inc
or
push
orl
sbb
repnz
sbb
jg
push
cmpb
pop
stos
adc
or
push
fsubr
adc
and
xor
xchg
pop
rolb
mov
adc
cmp
insb
or
jbe
jmp
jge
pop
imul
xor
sub
movsl
mov
ss
push
adc
pushf
mov
out
testb
xchg
in
sub
cmpsl
pop
ret
enter
mov
pop
inc
scas
aam
pop
in
iret
pop
sbb
inc
push
es
sbb
outsb
test
rcll
into
sub
adc
xchg
jmp
in
orb
push
cmp
cltd
pop
push
scas
adc
movsb
loopew
rcl
add
out
je
hlt
cmp
pop
arpl
or
cld
or
push
lahf
aaa
and
pop
test
popa
jp
nop
pop
movsl
ja
cmpb
sar
push
and
xor
inc
fldt
adc
sub
inc
xchg
inc
sbb
aad
stos
xchg
pop
pop
mov
mov
icebp
gs
pop
stos
and
pop
pop
sub
pop
in
test
jecxz
ret
mov
insb
sub
inc
sub
inc
or
push
and
pusha
jl
cmc
jl
sbb
inc
jl
shl
incl
mov
sub
pop
shl
dec
and
push
adc
repz
ljmp
int3
jne
mov
mov
adc
and
sub
jl
mov
mov
cmp
scas
xor
push
je
icebp
lcall
jmp
cmpsb
add
and
mov
icebp
ss
mov
mul
mov
cmpsb
jne
sub
fidivs
or
imul
dec
adc
sub
inc
dec
mov
or
popa
icebp
jle
mov
imul
pop
fadds
int
jns
mov
rolb
xchg
test
jae
adc
dec
add
add
xor
scas
xlat
push
mov
pop
jp
lods
mov
test
push
or
push
xor
cmpsb
jg
mov
and
cli
dec
iret
dec
mov
fistpl
popf
add
pop
adc
pop
clc
push
lret
lds
bound
das
fadds
add
lret
adc
jge
inc
jmp
xorl
flds
inc
rcr
cmp
mov
inc
xlat
add
addr16
jle
pop
inc
lret
fisubs
cmp
rolb
push
ds
jl
daa
adc
lahf
loopne
pop
scas
lret
cmp
mov
aas
aas
cs
jns
aad
push
nop
push
repz
movsb
mov
add
cwtl
jbe
dec
lock
daa
jno
sti
fwait
subb
xlat
sahf
mov
jge
leave
mov
push
inc
or
je
les
ja
aam
mov
loopne
xor
xchg
jbe
mov
sbb
xor
or
xchg
adc
out
jle
fidivrs
cltd
in
xor
iret
push
adc
sbb
sub
jne
mov
mov
lahf
outsl
in
movsb
aad
in
stos
mov
xchg
or
push
popa
sub
sbb
mov
outsl
mov
or
mov
lds
push
fstpl
sbb
test
jo
setg
cmpsl
sbb
inc
adc
add
in
repnz
xor
arpl
jns
mov
lods
imul
ljmp
push
pop
mov
loopne
pop
xor
pop
loope
out
leave
divb
outsl
decl
push
dec
and
xchg
ljmp
nop
inc
xor
sbb
push
xchg
push
push
cs
stc
outsb
push
dec
bound
xchg
mov
xchg
inc
and
popa
inc
push
jnp
stos
in
mov
push
xor
loop
xor
and
test
enter
sbb
rcll
push
push
fstps
mov
shll
xor
mov
fcmovnb
cmp
push
push
inc
mov
sub
test
rcll
repnz
in
dec
mov
xchg
and
movsb
push
arpl
mov
int3
add
jno
imull
push
mov
dec
std
or
mov
imul
shl
adc
cld
decl
pop
stos
mov
scas
push
push
insb
hlt
scas
insl
fwait
add
stos
mov
inc
mov
bswap
xlat
inc
jg
call
inc
push
into
fstps
mov
push
and
mov
sbb
inc
push
aas
pop
fadds
push
and
sbb
push
or
movb
inc
mov
mov
jl
sahf
loopne
sub
push
pop
sub
xchg
push
fwait
into
repz
mov
mov
mov
mov
pop
into
es
loop
pop
das
cmp
lock
sub
ficoms
dec
in
push
pop
fs
xchg
insl
cmp
inc
and
and
cmpsb
ja
ret
pop
sub
push
mov
fcomps
sub
sahf
mov
sub
mov
xchg
fwait
jae
pop
and
fnstsw
out
add
push
sub
outsb
scas
mov
imul
sub
movsb
fisttps
push
daa
test
aam
or
xchg
lahf
push
pusha
das
cmp
lods
stos
data16
adc
adc
and
pop
jmp
inc
lea
fs
pop
jge
ret
jmp
xchg
mov
or
ret
jno
push
push
and
jmp
in
test
mull
inc
loop
push
add
push
cmpsb
mov
dec
dec
mov
fucom
mov
adc
inc
xlat
sbb
push
lods
idiv
test
roll
xchg
push
inc
lret
mov
xchg
test
cmp
loop
xchg
xchg
dec
jae
add
adc
pop
jecxz
push
inc
inc
cmpsl
adcb
adc
cmpsb
jg
addr16
xorb
call
sbb
mov
test
jmp
and
adc
pop
pusha
jnp
js
and
jnp
sti
dec
push
sti
fistpl
mov
sbb
xor
jb
fbstp
mov
shlb
iret
imul
out
pop
push
adc
int
xchg
std
mov
fcmovnbe
pusha
mov
inc
ret
aaa
pop
lahf
xchg
dec
pop
cmp
sub
lock
mov
jl
imul
mov
cmp
xchg
mov
into
cmc
lock
cmp
cmp
popa
into
aad
push
jnp,pt
mov
cwtl
pop
lahf
nop
xchg
jmp
sbb
pop
push
cmp
add
mov
add
loop
fcomps
push
push
lret
mov
mov
add
shlb
pop
inc
dec
and
divb
xchg
cmc
mov
pusha
je
clc
fwait
push
dec
push
pop
stos
stos
pop
shrl
dec
jecxz
mov
ja
scas
cmp
loop
pop
jbe
testb
add
mov
cld
or
inc
mov
cwtl
xchg
xor
mov
ret
xchg
inc
imul
dec
jl
add
mov
and
imul
push
pop
rclb
fsubl
mov
push
pop
dec
addr16
jns
icebp
dec
scas
scas
mov
inc
call
inc
jmp
add
repz
jecxz
push
dec
lock
cli
outsb
fdivrl
mov
scas
das
das
mov
arpl
mov
cs
mov
cmc
adc
js
adc
jae
imul
pushf
int3
push
push
shlb
imul
and
or
and
stc
lods
mov
loopne
cmp
xchg
dec
arpl
pop
fsubs
daa
data16
cmpsl
ss
in
xor
sub
jnp
jl
adc
pop
adc
or
in
inc
or
push
and
xor
sbbb
sub
push
mov
scas
adc
and
addb
mov
xchg
stos
jl
jo
out
cli
addr16
xchg
dec
xchg
rcll
add
cltd
bound
adcb
ljmp
mov
outsl
jmp
and
mov
push
icebp
faddp
pusha
push
imul
sbb
add
adc
xchg
sub
rorb
ret
xor
mov
sub
sbb
mov
repz
pop
jno
pop
push
loope
jle
xlat
add
sbb
fnstcw
mov
das
fldenv
fstpl
ret
aam
in
and
or
dec
xor
push
daa
xorb
cld
cmp
dec
add
cmp
imul
sti
gs
sub
push
aad
in
mov
push
xorb
outsb
aas
outsl
arpl
push
das
mov
movsl
mov
jo
cltd
dec
mov
sbb
sub
aaa
std
pop
dec
mov
fistpll
mov
das
xor
and
in
mov
push
insb
mov
iret
mov
inc
movsl
mov
xchg
cmpsl
negl
xchg
cmpsb
loop
rcl
jmp
xchg
enter
lret
pushf
mov
scas
fdiv
mov
jo
out
xor
mov
jle
ret
inc
dec
aas
dec
in
mov
call
das
gs
mov
enter
add
adc
push
sub
mov
mov
sbb
js
cs
fwait
ss
jp
roll
adc
stos
out
inc
mov
mov
push
jge
adc
dec
bound
pushf
insl
adc
out
add
dec
pop
repz
push
enter
xlat
imul
aaa
pop
jns
mov
mov
cmp
stos
in
lret
mov
cltd
and
insb
idivb
xor
xchg
jno
xchg
je
test
insl
jg
mov
filds
aam
pushfw
test
pop
cmp
cmp
mov
lcall
sbb
sub
insb
ja
loop
pusha
sbb
aaa
data16
scas
rolb
mov
rolb
push
pop
xchg
lds
inc
cli
js
mov
inc
insb
sub
pusha
ret
adc
test
ljmp
aad
mov
cmp
imul
dec
adc
cmp
and
sbb
fdecstp
les
mov
pusha
je
inc
pop
jg
popf
lret
scas
jp
aas
and
jl
sahf
inc
out
xchg
inc
jmp
or
mov
xchg
out
push
rcrl
ds
pop
jbe
mov
rorb
fsubl
jecxz
or
fisttpll
push
jo
push
cmpsb
push
enter
pop
fmuls
inc
pushl
xchg
xlat
std
and
scas
aam
mov
or
sbb
sub
jmp
jo
mov
pop
push
adc
ds
mov
adc
mov
or
mov
ds
repnz
xor
adc
pop
push
fiadds
aaa
shll
xlat
test
mov
pop
popf
test
add
fildll
in
daa
iret
mov
mov
push
mov
jae
dec
cmp
mov
call
inc
faddl
fstps
dec
into
and
ss
xor
pop
jmp
mov
xchg
mov
mov
sub
sti
das
in
push
das
mov
sahf
cwtl
or
mov
es
shll
roll
mov
push
data16
mov
setle
sub
jp
lcall
lret
test
xchg
hlt
xor
ret
xor
mov
aaa
mov
lret
and
sub
sbb
sub
into
and
mov
in
test
inc
ret
adc
push
out
aam
pusha
loope
shl
cmp
icebp
dec
sahf
andb
addr16
add
jg
mov
add
daa
mov
mov
sbb
test
in
imul
fbld
adc
test
jns
or
xchg
sbb
enter
pop
push
ficoms
stos
sub
mov
pop
mov
test
sub
es
jne
int3
ds
pop
pop
stc
clc
adc
repz
subl
cmp
es
sbb
or
inc
pop
push
adc
mov
pop
jns
scas
lcall
mov
or
fcoms
aam
or
push
dec
loopne
mov
loopne
lcall
popf
lea
push
stc
loopew
dec
cli
push
movsl
xor
popa
adc
bound
popa
adc
pop
and
xor
movsb
fiaddl
inc
inc
aaa
sub
mov
sbb
fbld
push
mov
xor
cmp
inc
push
xchg
icebp
push
xchg
cmp
dec
inc
cmp
xchg
mov
call
stos
add
pop
lret
nop
jo
dec
out
mov
push
stos
popa
or
shrl
sbb
pop
sbb
test
arpl
add
sbb
lods
pop
hlt
fadds
clc
add
js
jle
hlt
pop
add
xor
cmpsb
dec
mov
mov
push
mov
mov
inc
mov
cmp
aam
fisttpll
jo
adc
out
popf
adc
les
arpl
push
mov
in
inc
aam
mov
mov
xchg
jmp
pop
int3
pop
inc
test
adc
add
ds
sbb
ja
fs
mov
inc
scas
ja
dec
add
je
je
mov
sub
repz
mov
rolb
movb
lret
out
fs
subb
and
dec
mov
ljmp
call
adc
push
idiv
pop
mov
xchg
cmp
rcl
outsb
cmpsl
mov
jp
add
jmp
jns
xchg
sbb
push
aad
inc
jno
or
je
lahf
pop
pop
cmp
jge
inc
mov
leave
stos
add
insl
push
enter
push
stc
mov
in
fsubl
in
out
adc
icebp
ja
sbb
mov
mov
jnp
iret
idivb
sbb
push
and
fiadds
adc
lods
in
push
and
sbb
dec
sahf
pop
xor
daa
xchg
mov
lds
jns
fbld
cmpsl
mov
in
pop
or
imul
or
push
jns
jle
sti
inc
aaa
mov
xor
push
jno
scas
shlb
and
test
popl
push
in
and
fcoms
rcr
cmc
adc
je
cmp
push
dec
adc
sub
fstpl
dec
int3
test
xchg
addr16
sbb
aaa
mov
pop
dec
pushf
dec
mov
sbb
inc
add
fdivrs
dec
cmp
sbb
insl
cmpsl
jp
out
call
jge
or
dec
test
shlb
cmpsl
test
movsb
clc
xchg
xchg
aaa
pop
and
mov
jg
sub
pop
ja
repnz
xor
mov
in
negl
gs
dec
and
push
call
in
arpl
stos
dec
scas
pop
int
and
and
in
je
pop
sahf
aas
sahf
push
mov
xor
sbb
inc
sub
scas
cwtl
repnz
mov
das
xchg
pop
xchg
inc
fdivrs
pop
push
jae
add
sub
jns
add
cmpl
repz
je
jne
inc
lret
stos
sbb
hlt
ret
jnp
dec
adc
sbb
call
xchg
add
pushf
jnp
pop
lea
andl
jge
mov
push
mov
pop
out
inc
jnp
out
cltd
loop
iret
stos
add
mov
push
js
fisttpl
aaa
xchg
fdivrs
mov
and
insl
xlat
pushf
adc
popf
sub
imul
loopne
add
cmp
inc
into
fldl
push
aas
clc
push
xchg
or
xor
lods
int
rorb
push
fs
stos
int3
push
rcrb
or
testl
in
push
sub
loopne
sti
push
mov
movsl
xchg
xor
lret
inc
popa
push
inc
cmp
ret
rorl
xor
xor
stc
push
cmp
sti
dec
rcrb
js
mov
and
mov
mov
push
inc
xchg
and
dec
jg
mov
hlt
pop
stos
mov
dec
or
test
push
jp
gs
loope
repnz
and
ficoml
fildll
in
jbe
les
pop
jecxz
push
sbb
pinsrw
repz
aad
call
stos
loopne
aaa
sbb
fistl
mov
cld
cmc
push
enter
sub
js
adc
push
mov
xchg
loop
cmc
mov
movsb
and
ret
add
scas
jns
paddsb
xchg
inc
mov
pop
xor
dec
or
in
in
sbb
shr
insl
jne
pop
loop
popa
rcll
xchg
push
js
pop
repz
shll
ljmp
mov
cmpb
nop
cmp
or
cli
xchg
mov
xor
xchg
pop
subb
into
push
sub
jno
mov
pop
inc
xchg
ljmp
addr16
leave
add
or
adc
pop
pop
lahf
xor
mov
pop
subl
and
dec
shrl
aad
push
cmp
movsb
loopne
fdivs
lret
inc
cmp
xor
mov
mov
mov
pop
and
mov
adc
fldl2t
vpcmpgtb
jns
push
ss
cmpsl
pop
xchg
rorb
inc
push
add
iret
xchg
cmp
cltd
jmp
repz
insl
outsl
incb
jl
xchg
jmp
movsl
lea
pop
xchg
sbb
fxch
jg
hlt
fisttpll
fisubl
pushf
xor
loope
sbbl
cmp
repnz
lds
push
testl
xor
mov
adc
push
mov
loop
mov
push
mov
lods
cmp
sub
call
or
mov
test
pop
sub
and
sarl
sbb
fcmovnbe
and
aaa
test
adc
ret
in
and
xchg
or
mov
mov
inc
inc
data16
push
and
call
push
jge
in
sbb
mov
mov
fbld
cltd
and
int
add
sub
jl
mov
test
adcl
ret
ret
cmc
sub
rolb
inc
fwait
int
aaa
jns
xchg
cmp
pop
mov
jl
sub
dec
dec
push
fadds
adc
sub
mov
dec
or
in
mov
mov
stc
ficoms
xchg
data16
ret
mov
addr16
mov
insl
inc
out
xchg
fimull
lds
pushf
mov
pop
add
loop
adc
aad
adc
scas
jb
les
jo
ds
mov
call
mov
sahf
arpl
sbb
fxch
sub
cmpl
push
pop
xor
sbb
fs
jae
dec
dec
arpl
imul
in
enter
jbe
xlat
sbb
aad
mov
sbb
fxam
fsts
pop
push
xchg
pop
pushf
mov
repnz
and
jbe
aad
incb
push
and
inc
shl
test
sub
jecxz
inc
ljmp
shrb
lret
add
clc
jp
inc
jnp
lds
fsts
xchg
cmc
jmp
mov
aam
lahf
mov
lods
mov
js
inc
mov
add
shr
cmp
lret
and
xchg
je
cwtl
sbb
add
push
aas
inc
mov
into
cltd
mov
push
push
inc
cmp
pop
lea
call
sbb
out
add
xchg
imul
mov
loope
fmuls
outsb
jmp
clc
aas
addr16
mov
rcll
sarl
sbbl
jne
jb
add
fcoml
popa
inc
fnstcw
ds
cmp
fisubs
adc
sub
cli
mov
jl
dec
mov
lea
shll
stos
push
adc
push
loopne
test
lret
ret
xchg
test
mov
jns
insb
into
sub
das
inc
adc
mov
inc
andl
fwait
stos
mov
mov
lcall
test
sub
jmp
pop
mov
and
filds
lds
and
cli
daa
pushf
mov
sbb
or
push
mov
pop
dec
out
ja,pt
or
nop
sbb
jae
push
aam
and
cmpsl
push
push
inc
ret
insl
jecxz
bound
scas
xlat
fstps
pop
jne
ret
dec
stos
in
stos
or
add
mov
mov
adc
cmc
idiv
orl
mov
movsb
xchg
insb
sbb
push
jge
in
cmp
cmp
fldcw
shll
scas
mov
push
aad
lea
add
mov
jbe
or
mov
cmp
fwait
vunpcklps
dec
and
outsl
lcall
out
pop
mov
pop
or
out
sub
fdivrs
xchg
pop
divl
xchg
loope
xor
test
jmp
int3
outsl
negb
pop
cmp
push
mov
cmp
xchg
sbb
adc
ss
jb
lcall
sbbb
jbe
fisttpll
jl
mov
rorb
xor
stc
push
stos
xchg
xor
int
mov
gs
push
out
or
add
mov
pusha
pop
xlat
mov
adcb
dec
mov
loop
cli
jnp
fadds
mov
ret
mov
add
xchg
sbb
cmp
dec
lods
pop
and
insl
jecxz
xchg
repnz
sbb
divb
mov
sbb
dec
ja
pop
mov
pop
je
test
xchg
sub
pop
bound
jne
cs
orb
add
push
stc
and
sti
mov
cwtl
lret
mov
clc
imul
jl
je
cmp
leave
jns
dec
mov
lea
xchg
les
dec
cltd
xchg
pop
xor
loope
mov
xchg
inc
icebp
and
mov
mov
scas
pop
cmp
popf
cmovbe
and
push
sbbl
icebp
lret
packsswb
imul
push
pop
movsl
outsb
adc
inc
sbb
hlt
jmp
adc
repz
push
inc
jno
pop
cmp
into
mov
mov
cmpl
aad
in
sub
mov
popa
push
xchg
dec
or
xchg
cmp
shlb
jbe
and
je
out
cmpsl
add
jp
xchg
mov
fwait
cmpsl
pusha
sub
popf
and
stc
movsl
pushf
adc
insb
out
sub
adc
xor
mov
add
dec
add
pop
sbb
int3
iret
or
cmpsl
jl,pn
ss
inc
cld
repz
iret
lea
push
bound
or
dec
sub
bound
mov
fld
stos
sub
mov
xor
jae
and
push
and
mov
test
adc
pop
mov
sahf
add
iret
mov
mov
or
pop
gs
addr16
test
sbb
jg
inc
xor
xor
cmp
lock
pop
js
add
fcoms
fwait
sbb
pushf
xchg
aam
or
popf
in
in
int
aaa
push
btl
scas
push
pop
sbb
pushf
sub
cmp
hlt
adc
es
sarl
xor
mov
insb
jecxz
push
jecxz
jge
jg
out
pop
cmp
into
or
and
xchg
les
nop
repnz
xchg
cmp
jge
dec
cltd
pop
sub
insl
sysret
arpl
int3
arpl
jne
mov
push
xchg
dec
xchg
cld
movsl
mov
and
test
and
sbb
and
xor
and
inc
addr16
insl
add
hlt
out
scas
in
fwait
outsb
es
or
hlt
and
xchg
fsub
ret
dec
insb
out
cltd
inc
sub
push
outsl
mov
bound
in
cmp
push
sub
adc
addr16
icebp
push
pop
push
pop
and
repz
sub
dec
xchg
adc
sbb
push
outsl
xchg
dec
jno
rcrl
xor
aad
cmp
stc
lahf
xchg
out
call
mov
sbb
xchg
lea
jle
push
sub
cmp
int
xchg
insl
fisttpl
sbb
mov
aad
repz
roll
pop
pop
xchg
cs
and
jp
insb
and
jp
notb
repz
lods
xor
sarl
es
filds
mov
aaa
jae
push
mov
imul
adc
mov
adc
and
out
adc
inc
iret
hlt
enter
lock
cmp
test
imul
cs
repnz
mov
dec
mov
iret
testb
mov
pop
movsl
stos
les
xchg
push
xchg
repz
inc
or
sbb
or
mov
and
cmc
dec
mov
testb
imul
lock
jg
int3
push
push
popa
mov
pop
jns
movsb
pinsrw
movsb
insl
inc
jns
jle
imul
popf
jbe
shlb
out
out
jle
popf
mov
mov
out
xchg
lds
adc
dec
xor
xchg
bound
mov
adc
xlat
lret
lods
int3
pushf
sbb
fists
fistps
shr
pusha
xchg
bound
sbb
push
mov
or
mov
cmpsb
jle
mov
xor
into
mov
loopne
out
pop
jmp
sub
and
dec
lock
aaa
ret
sbb
testl
shll
sbb
fmul
cmp
pop
rorb
inc
add
mov
dec
test
jne
aaa
lods
lock
rcll
sub
jns,pt
cmp
repz
add
mov
fidivs
test
mov
loopne
neg
shl
outsl
and
pop
pop
sub
and
sub
seto
scas
lret
sub
mov
sub
sbb
dec
xor
sub
jbe
push
sti
push
xor
xor
hlt
aas
mov
mov
dec
pop
xchg
outsl
inc
icebp
popa
inc
cmc
jb
inc
sub
popf
adc
push
sub
pop
test
test
jno
dec
popa
xor
push
aad
and
add
out
mov
lahf
pop
jne
test
mov
xlat
xor
int3
pop
cld
int3
ret
outsl
and
imul
push
adc
cmc
dec
imul
loopne
mov
repz
stc
hlt
es
inc
adc
and
xchg
arpl
mov
cmp
mov
mov
or
add
out
push
lea
nop
int
insl
jb
mov
dec
push
icebp
pop
pop
mov
sub
lods
mov
out
or
js
neg
or
pop
bound
in
movsb
cmp
sbb
sbb
and
cmpsb
jns
inc
ret
pop
jmp
lods
xor
inc
bound
mov
lea
pop
movsl
mov
cld
sbb
pop
sti
bound
xchg
cmp
aas
adc
inc
jnp
mov
xchg
pushf
pop
cmp
adc
rorb
out
dec
mov
pop
movsl
jge
add
test
or
out
cli
sub
movsl
movsl
push
xchg
xchg
pop
sub
in
adc
adc
push
nop
mov
addr16
adc
adc
test
push
loope
test
or
mov
sbb
nop
xchg
mov
adc
jmp
xchg
mov
jp
mov
adc
mov
fwait
movsl
int
popa
outsb
loope
movsb
or
int
push
sub
rcpps
sub
or
and
push
aaa
mov
sub
ret
or
std
mov
dec
inc
es
jnp
loopne
ss
into
pop
adc
adc
xor
inc
sub
bnd
andl
pop
push
outsl
pop
xchg
mov
nop
js
or
scas
xchg
leave
dec
pop
add
cltd
jmp
mov
lret
and
in
mov
sahf
mov
icebp
add
bound
stos
shrb
icebp
mov
add
add
lahf
pop
cld
ljmp
or
and
lods
rcrl
push
adc
lds
xlat
pop
jnp
pop
lret
cmp
inc
xor
cld
mov
lock
out
or
aam
je
xor
jbe
cltd
xchg
ds
xchg
sbb
or
inc
je
dec
loop
push
jno
jp
loope
inc
shll
jle
repnz
lret
xchg
dec
or
lods
pop
dec
jmp
shl
cmp
ljmp
pop
pop
cld
cmc
and
dec
and
mov
cwtl
pushf
lret
mov
cmp
outsl
pop
cltd
and
sbb
das
adc
jle
fucomi
jno
add
jp
pop
pop
push
pop
push
dec
ds
sub
bnd
and
sahf
or
sbb
xor
adc
mov
movsl
mov
mov
mov
jl
jno
aad
ror
xchg
or
btr
lds
and
cltd
daa
jmp
jecxz
push
xchg
xchg
mov
and
call
pop
inc
outsb
dec
mov
push
and
or
or
pop
or
and
adc
push
push
mov
mov
rclb
shrl
fnstcw
mov
mov
fwait
outsb
arpl
andb
pop
xchg
fs
andl
lahf
pusha
fimull
movsl
add
push
inc
push
xlat
pop
ret
ja
cli
les
lods
and
or
fs
push
ja
mov
shlb
sub
divb
cmpsb
sub
loopne
cld
mov
sub
iret
pop
bound
or
push
pop
cmc
jne
xchg
dec
mulb
adc
mov
out
repnz
movsb
stos
or
and
ficoml
gs
sbb
push
pusha
lds
sub
mov
ja
push
sbb
loop
add
jle
in
ffreep
and
aad
sub
sbb
fs
lret
call
sub
cmp
jno
cld
mov
aad
fsubp
or
into
dec
call
sub
xchg
insb
dec
push
sub
dec
add
mov
xchg
dec
or
xchg
mov
lret
mov
cld
cvttps2pi
adc
dec
push
and
xor
loopne
xlat
lret
push
sub
scas
rclb
adc
cltd
cmc
testb
mov
jnp
mov
jb
or
ror
je
dec
gs
push
jo
loope
shr
push
cwtl
aad
jle
rorl
jg
mov
aas
loope
cmpl
sub
dec
iret
xchg
popa
add
jo
daa
ljmp
sti
xchg
add
mov
loopne
ret
js
and
in
push
adc
gs
pop
sbb
insl
cmpsb
fistpll
xchg
cmp
mov
jl,pt
push
pop
push
ja
cmc
jae
pop
jle
push
sub
cmpsb
mov
fildll
jmp
mov
movsl
imul
jae
cmp
out
into
add
sbb
imul
test
push
enter
cmp
sub
add
mov
test
js
sahf
xchg
add
pop
push
outsb
push
sbbl
and
push
inc
cmp
sbb
xchg
stos
rcrb
sub
mov
and
ret
push
ficomps
push
push
addr16
dec
aaa
out
lods
ja
push
loope
int
imul
enter
test
int
je
repnz
fsubl
ss
cmp
icebp
add
fdivrs
data16
mov
or
push
loop
add
mov
jae
inc
pop
or
or
push
push
sbb
ljmp
sarb
dec
inc
mov
push
pop
xor
loop
xor
sub
pop
adc
xchg
dec
mov
push
mov
nop
sbb
mov
sub
fisubrs
and
fcmovbe
xchg
gs
imul
cmp
xor
inc
je
jnp
test
lods
aam
lods
adcb
xor
movsb
sbb
dec
mov
out
repnz
xor
pushf
cltd
out
xchg
xlat
push
out
or
fstpt
out
les
fsincos
push
test
fiaddl
add
fs
movsl
jo
mov
cmpsl
jmp
lea
xchg
jg
lods
mov
mov
mov
mov
iret
daa
lret
movd
sub
sub
adc
push
ss
ljmp
push
jae
pop
xchg
add
xchg
dec
cld
sub
sub
js
aam
cltd
in
sbb
pop
ficompl
add
aaa
jns
cltd
int
dec
pop
xchg
fisttpl
popf
dec
test
add
lods
xchg
mov
jecxz
xchg
lea
pop
cmp
mov
or
in
jae
add
lret
popa
movsb
and
fldl
sbb
cmp
aaa
mov
fnstsw
pop
xchg
pop
mov
adc
push
jecxz
pop
das
push
push
inc
jl
mov
adc
es
test
aaa
mov
std
xor
insl
in
xchg
lods
lock
push
mov
dec
sbb
add
int
fistpll
mov
aas
mov
sub
mov
fwait
mov
add
scas
les
mov
pop
sarl
fwait
adcb
subl
fimuls
xor
xor
sub
sub
js
in
shrb
jmp
cld
mov
pop
jge
sti
cmp
xor
mov
jnp
in
lods
std
add
outsb
or
imul
cmp
xor
adc
push
mov
fwait
jmp
out
inc
jb
loope
cmp
mov
outsl
push
mov
cltd
jge
mov
push
mov
push
rorb
int
sbb
movsb
cli
push
movsb
scas
cs
dec
mov
cmc
mov
push
cmc
fbstp
mov
cmp
push
inc
fstl
filds
jo
cli
mov
adc
dec
dec
enter
pop
sbb
jp
sti
ja
test
cmp
ret
rcrl
cmp
xlat
jmp
sar
les
test
cli
inc
test
loope
adc
xor
or
mov
stos
scas
mov
mov
push
xor
popf
ret
mov
lahf
pusha
je
push
rcrb
and
addr16
mov
and
mov
xchg
stos
aas
pop
push
gs
pop
test
and
and
stos
xchg
mov
dec
jmp
adc
scas
gs
aaa
and
xor
call
push
mov
fmuls
push
incb
dec
lahf
lret
arpl
mov
jns
test
and
inc
push
rcll
ja
ljmp
xor
cmpsl
aam
mov
dec
mov
jne
adc
sahf
aam
xchg
cs
ret
xor
scas
stos
negl
mov
sub
cmc
push
adc
test
int3
push
and
mov
outsb
lret
cmp
cs
arpl
adc
cld
arpl
lret
push
mov
loope
lods
imul
jmp
push
sarb
xchg
xchg
push
stc
std
push
sub
mov
cmpsb
jge
inc
negb
pop
out
gs
xor
jae
adc
sub
sbb
imul
pop
scas
mov
add
pop
cltd
mov
mov
jns
mov
jmp
outsb
cmp
mov
mov
sbb
stos
or
inc
lea
add
lret
cmp
dec
in
ret
inc
lds
out
into
cli
inc
addr16
push
scas
pop
mov
pop
lahf
sub
clc
add
lcall
imul
lcall
out
aad
sbb
dec
leave
cmp
mov
frstor
or
mov
xchg
bound
xchg
into
mov
cs
mov
jae
mov
adc
or
xchg
mov
cli
data16
fdivrs
sbb
jge
test
in
mov
inc
pushf
sbb
dec
xchg
imul
mov
cmc
push
or
or
or
loop
scas
lret
mov
pop
lret
inc
dec
lcall
xchg
inc
in
pop
or
jmp
sti
fcmovnu
xlat
mov
sbb
mov
xchg
mov
jb
lea
push
and
dec
cli
scas
sub
out
push
sarl
xchg
mov
movsb
xor
test
cltd
test
int3
xchg
jnp
xlat
cmpsl
dec
jo
fildll
outsl
sarl
leave
push
pop
xchg
iret
push
sub
xchg
stos
xchg
push
std
sbb
out
arpl
push
mov
adc
jle
bound
fstpl
dec
and
clc
xchg
in
pop
cmc
fwait
mov
das
sub
daa
jbe
mov
pop
mov
or
cmp
mov
pop
cmpsl
fists
je
aad
ret
add
sbb
or
push
pop
or
int
add
dec
loop
xchg
mov
dec
jle
or
push
arpl
jnp
loope
outsl
loop
and
ljmp
nop
test
mov
adc
and
or
jl
into
push
pop
inc
leave
push
sarb
xchg
sbb
lods
xchg
push
pop
xchg
mov
pop
pop
xchg
daa
adc
pop
dec
xor
adc
cmp
xchg
push
push
inc
into
adc
xlat
adc
adc
adc
lods
inc
xchg
push
xor
fcoml
mov
in
push
out
int
out
dec
out
js
repz
sar
xchg
jo
out
icebp
test
mov
cld
clc
jo
pusha
aaa
inc
add
sti
mov
pop
jmp
add
pop
push
fwait
xchg
sbb
lret
mov
inc
lods
aad
sub
test
ret
dec
cltd
enter
repz
cmp
popf
ljmp
ljmp
imul
mov
mov
test
cltd
push
rcll
pop
dec
aas
cmp
adc
das
mov
or
adc
push
adc
adc
cltd
mov
repnz
mov
aam
into
adc
movsb
cmp
mov
and
sub
mov
pop
xchg
jb
in
aad
imul
push
ds
pushf
and
enter
inc
jno
sti
mov
outsb
push
push
lret
xlat
xchg
icebp
jns
data16
lea
gs
xchg
adc
in
sub
cmpb
mov
jp
mov
stc
cwtl
and
out
push
into
btr
mov
imul
push
pop
enter
fiaddl
stos
jg,pt
repnz
in
pop
lret
pop
xlat
cmp
clc
cmp
cmp
popa
jns
cmc
sub
es
pop
inc
jae
adc
sub
push
call
mov
mov
cmpsb
int3
mov
pop
cmp
lods
nopl
nop
lock
leave
dec
add
aad
fisttpl
mov
call
pop
cmpsl
sub
int3
aaa
fldln2
jge
enter
xor
ret
cld
ss
mov
sub
inc
aaa
mov
push
ljmp
pop
fdivs
xchg
mov
in
adc
cmpsl
push
xor
mov
push
mov
jnp
xor
pop
pusha
loopne
xchg
and
xor
push
and
inc
jnp
enter
and
imul
aaa
add
jge
or
rol
stc
ret
push
je
xchg
insl
mov
adc
mov
or
movsb
sbb
lods
int3
mov
mov
mov
xor
push
pop
fdiv
out
push
mov
xchg
push
sub
or
jmp
enter
mov
pop
cmpsb
es
sbbb
in
aam
mov
and
dec
jg
push
xchg
call
rcrl
xchg
mov
push
mov
cmp
pop
aad
and
fwait
dec
xchg
loope
scas
adc
push
imul
push
cmpsl
cld
cmp
movsb
mov
or
subl
jns
and
fisttps
add
xor
jmp
pop
push
mov
loopne
lock
jno
jo
sbb
and
sub
push
outsb
xor
sti
jp
sub
arpl
jnp
imul
jge
leave
cmp
jp
insb
push
add
pushf
addl
push
sbb
inc
leave
out
cwtl
mov
push
sub
cmp
call
inc
jne
adc
test
divl
add
sbb
mov
mov
iret
iret
xchg
pop
loope
mov
sbb
leave
cmp
jae
scas
xchg
mov
sbb
bound
pop
sbb
lret
das
in
daa
adc
sub
sbb
lret
pop
cmp
mov
shrl
mov
add
and
enter
mov
jbe
stc
xchg
mov
arpl
lods
sbb
mov
data16
mov
xor
mov
or
pop
inc
mov
pusha
js
leave
and
data16
jns
jmp
rorl
mov
imull
push
ret
ret
pusha
add
xchg
jmp
and
es
dec
je
jns
cmp
fldenv
into
or
les
andb
cmpsl
dec
popa
roll
fsubs
sahf
or
xchg
jmp
push
mov
mov
stos
pusha
js
xchg
rcrb
mov
rcr
mov
out
repnz
leave
pop
fistpl
mov
fmuls
push
push
push
aad
add
xor
and
cmc
les
and
jp
js
es
out
clc
pop
insl
jbe
movsb
imul
in
movsl
xchg
cwtl
jl
or
bound
dec
mov
xor
jo
push
imul
clc
and
and
addb
in
sub
xor
inc
lea
mov
out
dec
out
ljmp
mov
xlat
movsl
andl
pop
ret
push
dec
add
cmp
fs
ja
shrb
test
pop
sbb
or
mov
jg
cli
jecxz
roll
jbe
add
pop
loop
pop
push
mov
dec
jl
jge
scas
es
cmp
jnp
mov
testl
xor
cltd
or
je
out
cmp
out
xor
inc
insl
cmc
scas
hlt
mov
clc
dec
or
adc
dec
in
xchg
push
xlat
push
or
mov
leave
js
enter
cltd
sbb
enter
adc
repnz
cltd
mov
ret
push
sub
jae
pop
test
dec
fwait
in
jl
push
or
cmp
lret
jns
test
jne
lcall
push
int
jg
and
inc
push
lret
push
aas
cmp
sub
fwait
add
cs
aam
sbb
jns
popa
mov
rcrl
push
mov
push
xchg
out
xchg
aad
gs
int
mov
xor
lret
inc
popa
jnp
add
sub
adc
pop
mov
sbb
ret
jmp
add
jmp
jnp
sub
jae
add
sub
mov
stos
dec
bound
xchg
fxch
dec
aaa
rorl
push
xlat
xchg
repnz
add
outsb
xchg
popf
popa
repz
adc
mov
pop
insl
fstpt
mov
enter
mov
pop
xor
das
and
pushf
out
dec
lret
sahf
pop
mov
test
inc
sbb
sbb
push
loope
sbb
das
leave
pop
sbb
in
lret
lds
std
xchg
cld
gs
pop
sbb
jle
mov
add
jle
dec
shl
arpl
adc
lret
shrb
movsl
loope
lret
leave
mov
sti
fwait
outsb
mov
dec
jno
adc
sbb
xor
out
xor
fnstenv
loop
inc
shrl
cmpsb
dec
out
ja
sti
cmp
inc
imul
test
mov
cmp
rcrb
mov
jb
dec
lcall
mov
imul
add
jne
mov
add
and
loopne
icebp
pop
movsl
popf
mov
xchg
fldenv
daa
fcmovnu
js
aas
xor
and
shrl
push
fstps
out
lds
mov
add
jbe
sbb
imul
push
cmpsl
stc
popa
iretw
lods
adc
subb
in
int3
fcos
es
cmp
gs
cmpsb
push
jnp
aaa
xor
jo
inc
jg
sbb
inc
mov
add
jp
xchg
jle
mov
cmp
enter
xchg
mov
dec
fwait
ret
test
insb
inc
add
call
lret
popf
lretw
xor
out
mov
adc
push
in
and
adc
fwait
and
adc
and
jg
dec
cmpsl
xchg
popa
repz
loope
cmp
lds
mov
cmp
fcmovnbe
mov
aad
fnstsw
push
fidivrl
fcoml
cmp
push
add
mov
jb
or
outsb
adc
xor
push
jl
dec
xor
sub
mov
pop
adc
xchg
bound
mov
mov
iret
add
int
fsubrl
push
jp
lahf
cmp
adc
pop
pop
fs
jmp
icebp
call
outsb
cld
mov
cmp
out
test
jmp
inc
mov
cmp
pushf
cmp
pop
mov
inc
xchg
and
jge
jns
xchg
aam
cwtl
orl
gs
sub
nop
jl
dec
stc
rclb
shlb
sub
pushf
fwait
push
enter
pusha
out
lahf
adc
mov
mov
test
xchg
cmp
mov
pop
push
mov
add
jne
imul
inc
mov
and
mov
sub
ret
add
mov
and
sbb
fsubrs
lds
cli
sbb
cmpsb
xchg
xchg
fstps
and
mov
lret
add
push
mov
and
paddusw
lcall
data16
inc
push
and
clc
push
cmpl
mov
fistl
jmp
and
sbb
sbb
pop
jl
jo
push
inc
pop
sahf
ss
fisubs
fstpt
lahf
mov
pop
scas
imull
push
pop
lea
inc
xor
lods
sbb
mov
push
lcall
push
stc
jnp
rcrb
jge
push
add
int3
dec
das
add
outsb
sbb
cmp
negl
sbbb
and
cmp
adc
mov
icebp
rcrb
sbb
jnp
jae
les
scas
sub
or
mov
iret
mov
push
fldt
cs
jb
insb
mov
adc
pop
jecxz
xchg
adc
cltd
mov
daa
adc
imul
fistpll
xchg
pop
sahf
rolb
push
movsl
jo
fsubs
push
out
imul
mov
dec
repnz
mov
outsl
lds
xchg
ret
push
adc
push
andb
aas
dec
push
inc
loop
int3
scas
or
sbb
push
pop
mov
jp
cld
ror
popf
pop
cmp
dec
and
stos
mov
mov
push
ds
sub
fwait
rcll
idivl
cmpb
dec
inc
inc
xchg
sub
loope
out
arpl
fldl
hlt
mov
jle
loope
cld
push
xchg
inc
fwait
gs
test
mov
push
sbb
pusha
shr
call
or
cmpsb
call
and
inc
jbe
stos
mov
mov
push
inc
push
add
inc
pushf
xchg
jmp
adc
test
imul
dec
je
sub
insl
mov
mov
and
iret
cmp
outsl
popa
adc
sbb
stc
cmp
rcl
lods
inc
push
shrl
xchg
xor
jle
or
adc
xor
or
jg
push
push
test
and
mov
xchg
loope
into
ds
shrb
mov
and
cmp
out
stc
imul
xor
and
mov
out
pavgw
pop
orb
sub
cli
popa
push
cwtl
stc
xchg
andb
and
inc
jge
insl
lds
xchg
sub
je
es
xchg
jle
mov
int
mov
dec
pop
jecxz
and
int3
sahf
push
ja
inc
jns
cld
test
popa
stc
insl
lfs
and
shr
mov
cmp
dec
dec
jae
lahf
test
dec
pop
outsl
add
insl
sub
xchg
movsb
push
xor
ret
js
add
mov
ret
leave
xlat
ja
pop
int
mov
jle
cmp
rcll
cmpsb
jns
loopne
fcmovnbe
aad
stos
dec
xor
cmp
int3
dec
push
shll
rorb
and
jecxz
jne
pushf
and
dec
adc
and
decl
sub
fwait
adc
pop
fdivrs
push
inc
add
inc
mov
dec
xchg
movsb
dec
dec
or
jge
mov
clc
or
lods
pop
jbe
dec
cmp
repnz
pop
xor
stos
out
ficoml
ret
push
pop
mov
inc
jb
cli
or
fwait
test
mov
mov
fwait
xor
sbb
and
pop
pop
mov
add
sub
dec
inc
lods
xchg
push
push
popa
mov
aam
loopne
cwtl
cmpl
in
cmp
mov
addr16
rcrl
add
push
mov
pop
add
mov
pop
push
shlb
xchg
add
mov
pop
in
cld
in
add
push
push
cmc
es
cmpsl
div
mov
pop
std
add
cli
out
push
push
mov
pop
inc
mov
mov
jl
sub
fisubrl
sarl
outsl
xchg
mov
aaa
push
push
loop
xchg
inc
bound
les
andl
daa
cs
and
out
fisttpl
cltd
leave
int3
test
sbb
xchg
xchg
ja
movsl
dec
in
out
addr16
frstor
pop
movsb
ficoml
ljmp
push
or
lret
sub
fisttps
cmp
lcall
push
dec
test
test
xor
sbb
mov
pop
imul
xor
jg
ret
inc
cmp
outsl
mov
clc
test
pop
push
xor
in
iret
arpl
mov
pop
dec
push
push
ret
fdivl
seto
adc
outsl
aas
jbe
dec
gs
jb
dec
pop
test
and
mov
mov
jg
shll
or
lea
push
push
fs
mov
jo
out
inc
dec
frstor
dec
imul
aad
jg
and
pop
dec
addr16
add
lcall
mov
loope
lods
sbb
js
aas
push
ja
inc
xchg
ljmp
cmp
js
xchg
into
outsb
pop
push
or
xor
fwait
jb
mull
nop
sbb
pop
out
jmp
xor
mov
push
inc
pop
aas
mov
sahf
insl
push
stc
pushf
je
mov
mov
adc
or
cli
mov
pop
jl
daa
add
sbb
pop
nop
mov
dec
sbbl
pop
push
cmp
out
fidivl
and
shll
or
mov
mov
push
adc
cltd
mov
mov
add
xor
pop
inc
loopne
mov
lret
pop
xchg
movsl
notb
pop
addr16
xchg
jno
lea
cmp
addr16
adc
xor
nop
pushf
cwtl
sarb
cli
int
sub
rcll
inc
lock
push
push
mov
jae
add
dec
and
push
test
mov
xlat
or
test
adc
ret
or
dec
jmp
out
aad
bound
out
not
lret
or
xor
imull
popa
mov
test
lret
adc
nop
lea
in
add
adc
cltd
adc
pop
je
imul
jb
inc
aas
cld
ljmp
jle
mov
push
lret
jp
rorb
cmpsl
dec
add
adc
sbb
in
pop
hlt
in
jp
mov
adc
scas
mov
xor
into
xchg
dec
loope
inc
popa
loope
out
pop
add
mov
std
add
pop
xor
testb
push
bound
pop
repnz
shrl
daa
imul
xor
sub
xchg
inc
icebp
sarb
and
cwtl
andb
ret
repnz
fld
jbe
int3
dec
test
mov
outsb
ret
cmp
or
add
pop
or
xor
in
xlat
ret
lods
jle
pop
repz
int
jbe
out
or
xor
popa
jmp
or
mov
popa
rcrb
lds
out
push
outsl
mov
sub
insl
dec
outsb
mov
std
cwtl
scas
add
push
fists
lcall
mov
imul
cwtl
xorl
and
pop
push
mov
inc
jecxz
or
lret
shrl
lcall
push
or
mov
xchg
popa
sub
mov
xlat
imul
cwtl
aas
add
scas
subb
push
sbb
mov
adc
cmp
inc
ds
add
ficomps
insl
bound
xchg
icebp
lods
jp
mov
xchg
mov
lock
push
xchg
loop
dec
jp
rol
jo
int3
insb
rep
and
out
mov
jg
adc
sbb
decb
adc
cmp
test
sbb
repnz
sub
push
jnp
out
pop
mov
jle
or
push
sub
fnstenv
xor
or
mov
ret
cmc
sbb
faddp
ss
sbb
insl
dec
daa
inc
imul
filds
adc
pop
xor
or
or
mov
xchg
addr16
mov
xchg
scas
lock
push
dec
fistl
ss
and
psrad
xchg
add
lret
mov
andl
ficoms
hlt
push
mov
stos
popa
pop
pop
shrl
inc
mov
inc
inc
pop
mov
xchg
bound
mov
pop
test
int3
xlat
sarl
or
cmp
jmp
push
repz
fwait
or
jecxz
push
inc
mov
xor
jecxz
push
mov
adcb
sub
inc
cwtl
repz
jp
and
std
std
test
int3
cltd
dec
ret
adc
scas
sbb
test
inc
mov
pop
pop
pop
mov
adc
cmpsb
jno
cmp
pop
jo
cmpsb
xor
in
or
sub
arpl
push
xor
jnp
jne
push
dec
mov
or
jo
cwtl
or
stos
ss
in
js,pn
decl
dec
idiv
xor
mov
adc
xchg
adc
and
xor
in
jb
xor
lcall
lods
or
int3
add
in
fildll
mov
push
inc
hlt
add
sub
xchg
push
loop
mov
test
push
push
sbb
sbb
jl
adc
dec
shrl
les
or
aaa
xlat
xor
ficompl
icebp
loop
fs
cwtl
mov
jbe
into
loopne
mov
mov
cmp
sbb
lahf
cmc
pushf
mov
stc
pop
and
faddl
adc
out
xor
sarb
js
fstpl
mov
lret
sbb
pop
andl
push
or
stos
addl
add
cmp
pop
bound
push
in
into
cld
cltd
idivl
adc
cmc
jle
mov
push
inc
pop
xchg
dec
xor
shlb
xchg
sub
push
pop
test
cmpb
sahf
iret
pop
mov
inc
mov
sub
sbb
iret
les
insl
sub
addr16
and
jg
out
push
cmp
lcall
adc
xchg
mov
rclb
adc
cmc
js
push
call
mov
cld
sub
add
inc
push
sub
jns
sub
mov
adc
outsb
repnz
mov
xor
imul
sahf
inc
bnd
push
xchg
pop
mov
sub
xchg
andl
or
dec
push
push
add
pop
inc
xor
cmp
outsb
daa
scas
clc
pop
stos
fdivrs
mov
mov
ds
and
lahf
mov
and
cli
andb
mov
loop
push
fisubl
lea
or
je
mov
sbb
inc
mov
push
popa
jp
iret
out
mov
psubw
mov
cmpsl
cwtl
insb
mov
mov
sbb
loop
xchg
or
les
ja
arpl
inc
inc
ss
clc
or
sub
push
mov
mov
push
mov
outsl
inc
test
dec
clc
inc
dec
fldt
pop
pop
mov
dec
xchg
mov
mov
scas
cmp
jl
mov
pop
adc
xor
fcomps
int
test
mov
test
adcl
in
das
cmpsb
add
ficomps
loopne
cmp
addl
ficompl
out
sbb
dec
push
mov
pushf
cmpsb
ljmp
pop
xchg
pop
xchg
addr16
out
pop
clc
pop
out
xlat
pushf
cltd
pop
repz
xor
lahf
sub
dec
aad
scas
mov
mov
lods
mov
aam
jns
jno
aaa
xor
cwtl
in
push
and
lds
cli
sub
and
ds
add
pop
hlt
insl
jne
add
adc
and
xor
add
cmp
sub
fmuls
and
jbe
insl
xchg
ljmp
dec
nop
in
pop
xor
mov
outsl
gs
cmp
ja
shll
test
mov
ds
add
xchg
lret
into
iret
mov
dec
jne
clc
mov
dec
out
jmp
jmp
das
in
les
daa
xchg
repnz
push
mov
out
call
xchg
inc
xor
jge
gs
jns
adc
ljmp
mov
push
push
scas
sub
sbb
pop
sbbb
inc
xor
sub
jle
mov
push
in
cld
add
fldcw
push
inc
enter
leave
mov
mov
popf
enter
mov
mov
cmpsb
mov
jg
rorb
ss
into
jmp
negl
or
cmp
cmp
nop
bound
push
int
pop
cltd
cmp
out
dec
loop
sub
imul
mov
jo
inc
xchg
xchg
sbb
mov
ja
pop
lcall
xor
sub
pusha
leave
iret
push
aad
xchg
test
mov
adc
ret
roll
jg
loope
mov
je
repz
and
and
icebp
fwait
jne
xchg
inc
add
insb
or
test
das
and
jo
pop
data16
dec
bswap
testb
cld
divb
icebp
jl
inc
jp
sbb
into
xchg
stos
inc
ja
out
rorl
push
mov
mov
es
mov
fimull
sbb
pop
clc
xor
movsb
sub
pop
fwait
xor
divl
jns
pop
test
cs
clc
dec
test
sbb
and
out
xlat
dec
dec
inc
sub
or
mov
sub
xor
xchg
mov
mov
or
imul
and
sub
scas
fsubrp
stos
mov
lahf
test
shufps
dec
bound
sahf
mov
dec
push
lods
testb
ds
dec
cwtl
push
jle
pop
pushf
lods
out
and
jae
loope
sbb
xlat
xchg
mov
in
in
inc
mov
or
cwtl
or
xchg
movsl
push
arpl
ss
and
push
add
or
repnz
arpl
popa
cmpsl
sbb
icebp
xchg
add
je
cmp
jmp
cltd
jle
cmp
sub
das
imull
mov
mov
daa
daa
push
jno
pop
mov
out
addr16
inc
push
cmp
dec
lcall
lock
cmc
sti
mov
stos
mov
pop
test
pusha
std
in
movsb
jle
mov
mov
adc
dec
outsl
sub
rorb
pop
test
in
xorl
in
push
pusha
add
jno
dec
xlat
adc
xlat
inc
movsl
outsl
xchg
or
inc
ja
fildll
xor
jmp
ds
dec
ret
pop
mov
mov
dec
jne
ljmp
faddp
xchg
arpl
jecxz
pusha
sub
in
repnz
ja
cmp
dec
cmpsb
push
inc
out
jne
lret
sub
ds
jmp
into
sbb
jne
pusha
repnz
test
pusha
dec
pop
dec
es
int3
or
mov
repnz
and
cmpb
add
sbb
shrb
test
fcoms
addb
test
mov
mov
pop
mov
sub
inc
movsb
mov
add
or
imul
test
pop
clc
les
cmp
cmc
shlb
sub
arpl
jl
xor
push
jae
loope
pop
arpl
fsubl
outsl
pop
and
shlb
pop
sub
enter
stos
dec
cmp
jae
add
int
sbb
rcl
fadds
dec
adc
mov
mov
mov
int
xor
and
cmpsl
mov
adc
leave
rorb
leave
lcall
pop
adc
enter
loopne
scas
loope
sub
inc
aad
fldt
fcmovu
sti
cli
cmp
fstpt
mov
sub
sbb
mul
jg,pn
pop
add
xchg
jecxz
pop
mov
pop
pop
jge
fnstenv
jl
or
and
and
inc
pop
fsubl
fcoms
cmp
jb
out
sahf
and
xchg
fidivrs
sar
adc
cltd
shl
sbb
pop
leave
incl
pop
push
push
rorb
cmp
jno
ret
add
sub
mov
iret
and
mov
xor
fidivrl
jae
add
sbb
test
push
lods
sbb
ret
test
mov
adc
jle
fisttpll
aas
movsb
inc
pop
popf
cwtl
add
lret
popl
mov
in
inc
jmp
stos
sti
pop
bswap
mov
jnp
push
lret
fidivl
sbb
call
scas
xor
pop
mov
inc
mov
imul
cmpsl
cmp
scas
lcall
mov
rcl
pop
aad
popf
ret
insb
mov
xchg
pop
pop
orl
cmp
dec
mov
cmpsb
xor
fidivs
fldl
mov
inc
in
jmp
push
push
insl
jne
mov
xchg
call
and
stos
fwait
nop
cmp
das
fistpll
add
mov
scas
lcall
xchg
lock
jno
ret
xchg
xchg
scas
shrb
pop
fcmovnbe
sub
stc
mov
dec
addb
xor
pop
in
mov
ds
repz
pop
cmpsl
rcll
mov
out
je
add
iret
enter
mov
push
and
ss
xchg
loop
pop
jbe
aaa
cmpl
xchg
incl
inc
dec
mov
mov
leave
mov
jo
push
sub
sbb
mov
inc
xchg
scas
mov
adc
pop
sub
loopne
add
jbe
scas
pop
mov
jbe
mov
add
repz
addb
jg
cld
xchg
addb
pop
inc
fwait
sub
xor
into
push
dec
scas
mov
pushf
ja
insb
pop
xlat
adc
xor
cmp
mov
sbb
outsb
jb
addr16
mov
push
popf
pop
shll
sub
popl
inc
repz
fisttpl
aas
lea
inc
xchg
stos
mov
aam
pop
movsl
push
icebp
xor
repnz
pop
pop
pop
sbb
push
dec
inc
mov
cli
or
repz
in
mov
mov
mov
lods
aas
stos
xchg
lods
pop
xchg
aas
mov
jmp
sub
add
ds
push
sub
mov
ds
and
push
xor
pop
mov
pop
push
pop
addr16
cld
aam
fyl2xp1
push
sbb
scas
jnp,pn
enter
sub
mov
lods
lahf
call
jmp
jo
push
mov
call
add
inc
jle
loope
das
repz
std
in
xchg
inc
cs
enter
arpl
jmp
cwtl
push
leave
loope
lock
das
jecxz
dec
jg
enter
clc
arpl
dec
lea
out
sahf
jb
sbb
repnz
test
sahf
movsb
outsl
outsl
pop
pop
mov
jle
push
jb
popa
add
es
cmp
cmp
int
push
pop
ja
sub
jmp
jmp
push
jb
repz
loope
test
outsb
pop
pusha
mov
xchg
pop
fsts
or
leave
into
cmc
inc
xor
addr16
push
mov
shll
ret
push
icebp
jl
xchg
cmp
or
fs
mov
mov
dec
cltd
pop
push
jl
sbb
imul
imul
test
test
sbb
jge
ret
and
into
hlt
sbbb
or
std
push
jmp
xor
fsubs
ss
xchg
int3
pop
xchg
fs
mov
pop
sti
fistl
mov
xor
hlt
add
imul
adc
xchg
popf
xchg
lret
dec
aaa
sarl
push
xor
xchg
or
or
mov
in
icebp
mov
sbb
cmp
arpl
push
push
shrb
xchg
adc
xchg
xor
test
xor
or
jg
cli
xchg
add
les
das
pop
scas
xor
jg
xchg
mov
scas
inc
mov
divl
inc
mov
mov
push
jb
cmpsb
js
aas
dec
loop
jecxz
rclb
in
sub
cmpb
aas
or
mov
mov
in
jae
cmp
popf
gs
adc
shl
mov
adc
cmp
inc
outsb
jp
jne
mov
push
sub
dec
mov
cmp
out
iret
mov
add
out
in
sub
pop
cmpsl
popf
rcrb
shl
inc
int
xchg
clc
or
scas
dec
or
pop
test
push
xchg
stos
out
imul
cwtl
test
stos
and
out
xchg
and
fnsave
xchg
fistpl
push
mov
out
and
mov
jge
sar
das
cmpsb
jns
sbb
and
push
jnp
pusha
xor
add
pop
and
lcall
pop
test
mov
fists
push
incl
mov
gs
mov
jno
mov
test
jne
pop
xchg
clc
push
loop
push
fs
repnz
push
iretw
xor
je
adc
stc
data16
xor
shlb
mov
loop
push
out
test
rcrl
sti
or
xchg
cmp
les
or
aam
out
xchg
pop
mov
add
mov
enter
jg
cmc
and
xchg
push
mov
sub
scas
movsb
push
mov
add
inc
lcall
lods
jge
pop
fcom
mov
repnz
bound
mov
mov
icebp
mov
outsl
outsl
fsubrl
push
mov
fsubp
mov
mov
enter
hlt
mov
icebp
roll
and
add
lret
xor
push
push
daa
shll
loopne
stc
xor
push
int3
mov
test
orb
add
ds
lcall
out
xchg
adcl
shr
jl
mov
adc
mov
mov
xlat
ljmp
cli
sbb
ret
stos
insl
roll
or
and
fstl
ret
enter
inc
jecxz
es
fldl
and
push
sti
pop
pop
sbb
xchg
inc
push
cmpb
pop
orb
adc
dec
pop
and
mov
jmp
in
pop
cmp
sbb
bound
lret
mov
aas
stc
insl
xor
or
inc
jp
test
gs
movsb
js
into
icebp
imul
and
das
ret
loop
les
and
daa
sbb
fwait
test
mov
cmp
sub
jp
mov
fwait
xor
and
push
xchg
daa
push
aam
sbbl
movsb
xor
scas
dec
add
lahf
sbb
pop
lea
cmc
out
lods
and
jmp
fwait
pop
jge
adc
xchg
push
xchg
aad
out
or
jle
vpsubq
cmp
mov
jle
add
mov
insl
and
insl
mov
xor
nop
js
inc
bound
pop
xchg
inc
push
test
pcmpgtw
in
fmuls
jmp
outsb
sti
sbb
iret
fcomip
xchg
addr16
in
clc
addr16
jmp
and
adcb
int3
shrb
pop
out
sub
cmpsl
jnp
aad
mov
dec
cmpsl
xchg
lcall
lret
sar
ljmp
adc
dec
scas
fdivrs
xor
inc
mov
imul
cs
jnp
jb
cmp
xchg
das
arpl
movsl
or
je
insl
icebp
loopne
sbb
jae
adc
adc
lret
push
mov
scas
mov
mov
lods
xchg
cld
cli
outsb
adc
jo
mov
pop
sbb
imul
stos
push
or
repz
jb,pt
and
aad
in
inc
lcall
test
sar
or
and
xor
pop
inc
lds
adc
clc
lods
adc
sub
repnz
mov
inc
add
ja
cmpsb
inc
es
push
fwait
in
or
pop
jg
lds
jb
adc
lahf
pop
shrl
cmp
ficoml
sub
sbb
ret
fbstp
xchg
jns
mov
push
or
add
push
lods
xor
or
mov
push
xchg
inc
push
test
jecxz
stos
jb
jne
add
or
mov
dec
push
fdivrl
pop
js
subl
pop
sarl
es
negl
inc
inc
fmuls
and
ljmp
lahf
divb
stos
cmp
mov
je
mov
fstpl
add
sub
adc
lods
or
into
dec
mov
mov
fbstp
push
loopne
enter
scas
xchg
push
mov
cld
cli
lret
scas
or
pushf
testb
scas
push
aad
pop
sbb
scas
pop
lock
aad
xchg
xor
inc
test
sahf
test
pop
lcall
out
fsubl
xor
dec
les
cmp
mov
xchg
dec
lock
pop
push
jb
sbb
xor
push
inc
pusha
add
sub
or
push
bswap
ja
or
dec
cmpsl
movl
pop
xor
cmp
in
cmp
xchg
add
in
push
mov
mov
std
adc
pop
adc
vpmullw
cli
and
out
loop
clc
add
mov
push
mov
stos
push
scas
outsb
pop
mov
stos
mov
movsl
push
sbb
cwtl
pop
out
push
outsb
scas
mov
lds
xlat
jo
xor
push
sub
pop
incb
jle
es
adc
pop
adc
das
negb
jne
xor
push
adc
ret
sub
inc
lods
adcl
xchg
push
adc
fbld
ret
fcomip
add
int3
add
xor
jns
andb
cmpsl
jecxz
and
cs
imul
cmpsl
call
jnp
cmp
mov
push
cmp
into
pop
adc
or
ret
arpl
and
push
outsl
and
scas
add
out
test
gs
arpl
inc
sub
notb
gs
jnp
cmp
pop
sub
or
jbe
cltd
fists
frstor
fidivrl
pop
iret
cmpsb
leave
and
gs
jmp
int
lea
pop
and
xor
stos
fisttpl
pop
push
jge
mov
stos
std
lret
mov
xor
inc
fs
out
cmpsb
stc
mov
add
fucomp
or
cmp
and
imul
sti
gs
imul
add
or
repnz
shlb
inc
bound
sbb
int
inc
xlat
cld
pop
into
lods
fwait
dec
mov
idivb
popf
movsl
insb
or
mov
shrl
ds
add
mov
mov
sub
jp
call
sub
dec
pop
rcrl
test
or
jg
gs
mov
xchg
mov
popa
push
xchg
ret
mov
loope
or
adc
sbb
add
add
pop
push
mov
inc
mov
stos
out
or
pushf
incl
adc
sbb
xchg
cmpsb
add
out
ret
out
cs
fnop
inc
loop
mov
xor
lock
adc
mov
xchg
and
rdtsc
push
pushf
scas
icebp
sahf
or
stos
dec
mov
lea
inc
call
lahf
dec
data16
or
std
mov
je
mov
mov
jmp
inc
sub
fdivl
mov
std
and
ja
lret
dec
pop
shrl
jnp
notl
mov
jns
lret
dec
xor
inc
in
test
daa
and
call
leave
popf
dec
inc
add
test
cmp
or
ss
clc
ds
imul
adc
or
mov
popf
test
xchg
fchs
push
xor
shr
cmp
fdivrl
jb
xor
jg
mov
xor
adc
jnp
or
mov
outsl
fisttpl
repz
inc
dec
add
mov
lods
xor
cmp
nop
pop
push
repnz
inc
lock
daa
lea
jge
pop
sub
xor
xchg
mov
xchg
mov
jge
mov
test
in
push
movsb
rcr
xlat
lcall
jns
adc
mov
adc
or
call
movsl
iret
mov
mov
mov
sub
dec
sub
xor
cmp
mov
jns
push
sarl
inc
add
jb
in
sub
push
aad
lods
xor
insl
push
dec
and
cmp
push
cwtl
stos
in
ds
cltd
mov
mov
lret
repnz
push
adc
fs
cmp
fstpl
push
or
aaa
aas
jp
test
std
nop
movsb
add
sbb
jno
mov
lret
lcall
test
iret
sbb
jne
inc
stc
in
ljmp
push
in
sbb
loope
stos
sub
jb
rcll
jne
lret
stc
xchg
jl
pop
outsb
xchg
mov
add
in
push
lods
push
daa
insl
test
mov
sbb
push
xor
lea
outsl
sbb
sar
outsb
mov
mov
loopne
inc
aaa
inc
ror
push
ljmp
out
les
push
dec
mov
mov
mov
xchg
mov
mov
call
mov
jp
push
mov
fwait
push
adc
call
ret
mov
push
or
sbb
addr16
mov
cmp
cmp
std
in
fwait
lock
cld
push
std
cld
xchg
test
arpl
mov
mov
test
or
bswap
mov
cwtl
call
sub
in
push
aas
in
movl
mov
sub
testb
jns
dec
pop
xchg
adc
out
iret
dec
cld
sar
dec
fnsave
sub
imulb
pop
test
cld
sub
fldcw
mov
cmp
sub
dec
lods
mov
pop
roll
icebp
pop
das
inc
mull
imul
aam
sub
sub
sbb
aam
bound
push
push
jbe
out
lds
jg
xchg
add
xchg
insl
inc
sbb
xchg
dec
sub
mov
jae
mov
xor
stc
insb
xlat
cli
push
sbb
jb
mov
fs
out
inc
cmp
incb
or
scas
lds
repz
nop
push
cltd
sub
mov
mov
incl
add
lods
mov
movsb
push
cmpsl
jl
sub
gs
add
push
dec
fisttpll
ret
xor
iret
inc
repz
cld
add
xor
or
stos
lret
out
bound
sbb
adc
imul
mov
cmp
sbb
cltd
icebp
dec
pop
dec
xor
ret
inc
into
and
mov
iret
xchg
sbb
lret
mov
pop
or
mov
fstpl
ja
pop
mov
push
imul
push
sbb
fadd
jecxz
mov
mov
pop
test
ds
outsb
movb
push
and
xchg
xchg
ficompl
and
sub
ret
jmp
mov
jno
or
dec
xor
cmpsb
jb
pusha
out
push
push
sub
sbb
test
int
in
das
test
popf
mov
movsl
test
add
push
push
outsl
loope
and
cmpsb
leave
subb
xor
inc
enter
std
and
in
aaa
and
dec
loopne
mov
out
xchg
cwtl
mov
fwait
rcl
dec
xchg
add
mov
and
divb
imul
les
pop
sbb
cmc
mov
in
lods
push
mov
rorb
rcl
mov
jl
lds
mov
push
cmp
std
outsb
pop
int
loopne
xchg
jl
lods
orb
pop
or
cmp
inc
enter
stos
ljmp
out
sub
cld
xchg
adc
mov
jns
xchg
mov
bnd
mov
pop
lcall
xchg
loope
ljmp
push
push
add
shrb
cmp
movsl
ss
or
and
orl
add
cwtl
mov
jl
sub
push
movsb
xchg
insl
jb
sub
pop
dec
mov
mov
jo
loopne
inc
lret
bnd
jb
loopne
inc
mov
sub
xlat
jl
in
adc
push
jo
mov
inc
hlt
daa
cmpb
imul
mov
andb
rorb
or
aam
ss
xor
daa
std
outsl
lock
jbe
enter
pop
sub
or
bound
test
jno
mov
inc
pop
dec
dec
mov
mov
and
mov
out
repz
mov
pusha
mov
mov
ja
push
sub
or
hlt
iret
xor
fs
jae
dec
cld
push
pop
jno
push
out
jae
inc
dec
iret
bound
xchg
xchg
insl
lcall
xchg
dec
cmpsl
mov
adc
cmp
lods
mov
addl
cli
and
add
sbb
aaa
inc
pop
aas
pop
jo
into
stos
out
in
repz
push
cmp
sbbb
add
sub
and
push
inc
scas
sub
aad
lock
cmp
insb
ja
test
lahf
cmpl
ljmp
aam
cmpsl
loope
mov
inc
jae
cmp
mov
mov
and
pop
push
lret
jp
imulb
adc
mov
jns
loope
xchg
sti
pop
or
pop
or
pop
jns
data16
sub
mov
aad
loopne
icebp
dec
popf
push
xchg
rol
ret
cmp
adc
pop
mov
pushf
or
sti
dec
shll
jmp
or
jbe
add
addl
in
push
jmp
mov
daa
xchg
js
enter
push
repz
pusha
pop
dec
ret
mov
hlt
test
das
mov
int
in
sub
dec
ss
mov
add
hlt
jmp
jnp
stos
inc
xchg
push
adc
xchg
push
pop
dec
sub
jecxz
nop
hlt
mov
push
or
add
cli
aam
scas
xor
and
inc
dec
xor
mov
shr
sahf
jnp
adc
popf
cmp
outsb
or
test
pop
in
pop
xor
pop
out
mov
adc
pop
out
int3
outsb
push
daa
lea
sub
xor
mov
mov
sub
mov
add
outsl
sub
les
and
jnp
cld
test
fcom
sub
dec
scas
lcall
mov
mov
xor
ret
loopne
mov
cmp
pushf
test
das
rcrl
out
lret
shll
cmp
nop
inc
pop
pop
push
push
roll
lock
clc
mov
xchg
movsb
mov
cltd
fcomp
cwtl
push
repnz
mov
xlat
cmp
addb
aam
push
call
pushf
subl
loopne
movsb
or
adc
out
out
mov
xchg
or
add
cwtl
clc
scas
jae
jg
and
gs
jae
mov
movsb
push
sub
xchg
lret
test
lahf
ss
shll
ret
movsb
scas
jp
push
rcll
cld
or
push
outsl
cmp
pop
outsb
mov
push
testl
lods
sbb
lds
sub
xlat
mov
adc
xchg
aam
xor
sti
sbb
test
xchg
sub
mov
jp
dec
cli
push
pop
test
mov
outsl
or
xor
mov
movsl
jp
sub
call
popf
mov
in
mov
and
nop
outsb
add
leave
push
sbb
fdivr
fstps
pcmpgtb
fmull
out
inc
push
add
jnp
leave
add
sub
or
sub
lock
mov
cmpsl
aam
mov
mov
pop
xchg
add
push
outsb
cmpsb
or
and
movsl
pop
mov
in
xor
out
pop
ds
sahf
insb
mov
or
aas
jge
dec
mov
cmpsl
pop
mov
cmp
xor
inc
sbb
stos
jmp
jecxz
daa
mov
inc
lods
cli
pop
insl
sbb
icebp
adc
sar
scas
adc
fisttpl
sarl
fwait
pop
cmp
cli
add
mov
addr16
mov
cmp
xchg
insb
jno
mov
mov
gs
sti
mov
pop
data16
cmp
fwait
lret
cwtl
in
call
scas
pop
pop
movb
jno
push
lock
cwtl
cmp
fldt
sub
not
std
cmp
pop
sub
pusha
mov
imul
in
jle
pop
xchg
rcrl
add
es
arpl
inc
into
pop
adc
pop
rcr
xor
mov
out
stc
add
xor
sub
xor
sbb
sbb
inc
scas
daa
ret
lret
loope
push
jp
dec
aad
xchg
cmpsl
loop
dec
das
ds
pop
xchg
push
in
add
cmp
adc
push
mov
test
iret
ljmp
iret
nop
in
ror
ljmp
sbb
cmpsb
insl
dec
cmp
pop
aam
pop
cmp
xchg
popf
in
popa
mov
shr
xor
xchg
pop
pop
bound
andl
call
aam
or
cmpsb
das
mov
mov
pop
lds
add
xor
mov
sbb
xor
call
outsl
addr16
arpl
pop
lods
inc
push
stos
out
rolb
test
mov
pop
loopne
loopne
dec
pop
inc
mov
mov
test
movsb
lcall
data16
fwait
sub
in
mov
adc
cli
cmc
mov
mov
jbe
and
sti
mov
shll
cltd
jns
pop
sub
inc
add
sar
inc
fisubl
mov
call
cmpsb
sbb
aaa
addr16
movsb
arpl
or
sbb
sub
pop
pop
cmp
push
pop
out
cmp
je
jge
inc
mov
xchg
or
or
rcll
stos
cli
fisttpll
fisttps
test
cmp
insl
movsb
shl
jne
fcomp
push
add
hlt
aad
sbb
jle
cmp
and
xchg
sub
dec
xchg
mov
push
sbb
jp
sbb
mov
cmp
push
xchg
out
sbb
testb
jnp
filds
adc
mov
andl
leave
xchg
pop
pop
mov
adc
dec
mov
popa
test
repnz
aam
xchg
aaa
into
in
cmp
xchg
mov
add
add
adc
int3
sub
bound
push
or
je
pminsw
outsb
mov
mov
jns
jle
xchg
xor
cmpsb
sub
stc
pop
aam
add
sub
mov
dec
mov
inc
mov
inc
xchg
or
into
or
js
stc
adc
add
gs
lahf
fildll
imul
lock
ljmp
js
jb
pop
and
fwait
cmp
mov
ja
lock
sub
mov
imul
sti
cli
jne
mov
push
pusha
test
js
insb
push
xlat
sub
push
jl
test
sti
lods
bound
dec
jns
sahf
xor
cmpsb
enter
movsb
add
scas
pop
inc
test
call
inc
dec
push
mov
nop
push
mov
inc
push
and
jo
mov
xchg
ret
mov
and
shr
mov
adc
pusha
scas
cmp
push
add
adc
mov
lret
mov
sbb
add
es
add
dec
jbe
pop
arpl
add
cmovno
and
aaa
dec
mov
call
ds
inc
or
arpl
dec
lods
push
adc
dec
hlt
or
std
adc
ja
xchg
push
pushf
lds
and
lds
scas
data16
xor
push
push
fxch
pusha
jmp
fsts
test
addr16
sbbb
and
dec
mov
inc
lds
lods
mov
jge
je
loope
lahf
out
push
xor
fs
ret
mov
test
jmp
push
icebp
jmp
divl
dec
test
jae
lods
mov
repnz
dec
and
pop
jmp
cwtl
jb
fstpt
or
push
cmp
inc
pusha
fcmovu
iret
negl
jnp
push
dec
clc
lock
in
inc
cs
add
insl
or
clc
pop
nop
movsl
mov
push
cs
movsb
scas
push
cmp
pop
das
mov
or
pop
lret
mov
cmp
push
sub
shl
jmp
xor
jo
and
mov
out
jle
pop
sbb
and
push
cmp
or
xchg
imul
clc
push
jle
add
jb
sbb
cmp
jl
cld
push
lods
sub
or
jge
sbbl
adc
jle
jne
clc
imulb
aad
mov
aas
pop
jl
inc
frstor
and
sub
ss
or
repnz
mov
inc
mov
inc
sbb
sub
orb
stos
or
xchg
adc
push
inc
xor
in
sbb
rcrb
inc
in
or
fs
pop
neg
mov
incl
bound
ret
jns
mov
ret
dec
test
xchg
push
icebp
hlt
loope
push
pop
mov
aas
xor
xor
jmp
xchg
pop
adc
xchg
stos
dec
sti
cwtl
dec
leave
sub
out
rcrb
mov
jg
and
push
shlb
lret
sbb
sbb
iret
dec
xchg
adc
push
jb
sbb
call
cmpsl
jge
push
add
les
mov
add
xchg
adc
das
mov
adc
add
xchg
pusha
pop
and
mov
cmpb
adc
or
xchg
sub
sbb
or
push
mov
adc
push
jae
inc
movsb
add
mov
mov
mov
push
je
in
mov
sub
pop
add
rorb
leave
cltd
aas
iret
sbb
cmp
jp
mov
inc
aas
lret
in
arpl
dec
cmp
or
xchg
sbb
gs
sbb
sarb
inc
jnp
clc
out
scas
pop
lret
mov
inc
ret
xor
add
or
push
shrb
das
xorl
rolb
clc
jecxz
in
fwait
sahf
js
sub
and
mov
outsl
mov
jecxz
push
push
call
sub
mov
xorl
pop
shl
sahf
outsl
bound
addr16
sbb
sub
jp
mov
cmp
ffree
mov
mov
xor
stos
stos
mov
cmp
repz
push
je
pusha
mov
mov
and
ss
and
mov
cmpsl
xor
ljmp
and
fmull
aaa
in
stc
lock
outsl
scas
jne,pn
scas
inc
mov
sbb
cwtl
push
cwtl
pop
add
xchg
pop
or
lret
outsl
rep
adc
iret
adc
xlat
add
mov
icebp
clc
mov
jns
push
add
sub
xor
inc
inc
das
or
sub
ja
pop
hlt
mov
xchg
push
inc
loopne
fucomip
cmpsl
mov
in
sbb
out
xor
ds
sbb
popf
sub
shlb
int3
sbb
pop
mov
movsb
pop
mov
push
mov
jl
sbb
inc
daa
cld
mov
sbb
and
xor
inc
cld
negb
xchg
jmp
shlb
ret
adc
fstpt
mov
xor
orb
xchg
push
sbb
jns
mov
or
test
repnz
dec
nop
mov
xor
cld
int
pop
aaa
enter
xor
dec
lcall
das
out
stc
mov
pushf
jle
xor
push
insb
lock
call
mov
mov
insb
mov
sti
mov
cmp
xchg
push
inc
rclb
push
sahf
dec
sbb
fwait
add
inc
jb
data16
lods
lods
push
icebp
push
adc
add
sub
pop
stos
mov
ret
lcall
mov
push
mov
inc
mov
fcomip
fstpl
mov
cmp
pop
popa
int
lods
inc
cmp
or
out
sbb
std
leave
mov
push
xor
gs
mov
lds
sti
xor
popa
inc
cmp
lods
dec
das
and
movsb
sbb
cmc
xor
add
fcomps
mov
xor
mov
arpl
dec
rclb
fdivrl
lods
out
addr16
out
mov
pusha
outsl
sbb
xchg
mov
das
mov
test
push
and
add
rcl
les
dec
movsl
cmp
in
sub
ret
add
rcr
lcall
sub
cmp
adc
gs
scas
mov
xchg
push
lcall
jp
cld
cli
sub
sbb
jmp
movups
pop
add
jnp
js
inc
mov
inc
xchg
pop
xor
add
or
or
inc
subb
push
loopne
inc
sti
sbb
add
daa
or
xchg
xchg
mov
cwtl
test
movsl
iret
xchg
push
pop
cmc
pop
lret
int3
mov
ljmp
imul
out
rcrl
rcll
test
lock
fwait
pinsrw
aas
inc
add
adc
jo
dec
ja
pop
dec
loope
or
aas
push
int
push
inc
ficoms
bound
movsb
ljmp
dec
pushf
les
imul
mov
jae
mov
jne
out
jne
jg
cmp
fs
pushf
mov
mov
sti
xchg
sarl
scas
aam
jle
jae
jg
add
mov
inc
xchg
sbb
pushf
xlat
movsb
loopne
sbb
mov
int
lahf
dec
jle,pt
shl
dec
outsl
lds
das
cmpsb
frstor
push
adc
mov
jb
repnz
and
inc
sbb
scas
xor
lds
sub
pop
sub
inc
sub
movsl
sub
sbb
dec
ljmp
and
cmpsl
mov
adc
cltd
js
inc
into
pop
or
lret
dec
jg
mov
mov
xor
dec
and
fcomps
gs
es
sub
mov
lods
or
mov
cld
dec
out
sbb
fidivrs
js
jns
adc
adc
jg
pushf
mov
or
loopne
xchg
add
jmp
test
imul
and
fwait
cmpsl
jge
push
push
jo
mov
rorb
lds
push
lahf
scas
adcb
lds
fldl
xchg
js
jmp
jl
imul
insl
mov
mov
dec
adc
out
push
sbb
mov
js
xchg
loope
add
rcrl
ja
jnp
push
aaa
or
sarl
sti
fcmovu
sbb
adc
loope
dec
movb
xchg
xchg
sti
or
lcall
sub
lret
sbb
mov
mov
pop
xlat
mov
lret
cs
add
addr16
shll
mov
jno
push
fisttpll
pop
cmp
mov
std
push
or
movsl
sbb
xchg
xor
jo
insb
lahf
cmc
dec
jnp
clc
mov
ljmp
jbe
repz
lahf
pop
mov
dec
out
cmp
repnz
jmp
push
cltd
adc
xchg
test
mov
sub
fwait
dec
pushf
cltd
sbb
jg
out
sbb
scas
dec
loopne
or
jo
stos
nop
and
adc
mov
pop
leave
jo
fsubl
inc
roll
jbe
ret
mov
rolb
dec
xor
imul
lret
icebp
mov
xor
xor
sbb
std
ror
test
mov
std
dec
cmp
jle
sub
sarb
aam
popf
fld
negl
push
sahf
add
inc
int3
xchg
push
cs
addr16
inc
movsl
sbb
cltd
out
nop
dec
mov
push
lock
add
dec
adc
and
cli
and
cltd
jno
out
and
dec
mov
dec
sub
in
jle
movb
in
fstps
ret
jmp
lods
iret
arpl
jne
jo
and
repz
imul
adc
rcll
scas
xchg
mov
or
dec
movsl
mov
lret
xchg
fistl
pop
je
je
leave
and
popf
ficomps
jp
push
cs
xchg
scas
inc
ds
cmp
cmp
pop
sub
adc
push
arpl
lock
lds
jne
les
jno
dec
aad
stos
mov
lahf
mov
fs
mov
aam
ja
mov
dec
mov
les
fcom
pushl
adc
fcmove
pop
in
xor
movaps
pushl
dec
push
fsubrs
inc
cld
jp
jb
and
outsl
fwait
enter
cmpsb
pusha
call
fs
ljmp
sub
cld
lret
call
xor
insb
cmpsl
dec
lret
mov
lahf
sti
pop
gs
adc
push
shll
sbb
jecxz
dec
xlat
mov
std
js
sahf
or
in
pop
push
cmc
dec
push
loope
mov
rclb
scas
push
dec
mov
mov
ds
cmp
rclb
push
xchg
rorb
stos
and
adc
daa
les
movsb
pop
mov
iret
sbb
sarl
shll
les
push
push
aam
inc
enter
subb
mov
ja
dec
xchg
rclb
shrl
movsl
and
mov
pop
pop
push
repz
fistps
pusha
jns
mov
xor
mov
pop
fldl
xor
shll
mov
cltd
addb
in
xor
icebp
pop
sub
in
add
pop
xchg
fisttpll
orb
movsb
adc
outsb
sbb
out
mul
inc
jns
stc
sarb
movsb
xor
rclb
pop
push
adc
adcb
xchg
xor
sbb
stos
mov
sbb
push
mov
mov
pop
push
mov
jmp
dec
pop
push
pop
cmpl
aam
mov
jge
mov
repz
stos
cmp
push
popf
popa
jecxz
push
lock
sub
dec
bound
loopne
fistpll
xor
dec
mov
adc
decb
xor
aad
ss
cld
aaa
mov
mov
lret
sub
sbb
add
adc
and
loopne
push
and
inc
mov
out
and
test
mul
adcl
test
lds
xor
std
rcrl
jns
mov
movsl
dec
std
cwtl
inc
adc
push
daa
mov
test
cmp
inc
mov
fstl
js
pop
jae
pop
xchg
push
jmp
stos
int3
ror
out
sti
mov
pop
and
push
les
jg
repnz
into
jmp
lcall
insb
xlat
sahf
mov
in
lock
jb
xor
dec
push
repnz
test
andl
xor
repz
push
inc
test
shlb
or
push
cmp
inc
subl
jle
cmp
mov
shll
mov
jecxz
outsl
inc
inc
ficompl
cmc
lods
jns
inc
mov
inc
inc
cmpsb
sub
icebp
lahf
mov
outsb
out
xlat
dec
cmc
mov
fidivs
xchg
jne
rorb
dec
mov
push
push
mov
mov
sti
cmp
xchg
jecxz
or
outsl
add
push
ror
adc
popa
imul
ret
fwait
inc
pushl
jne
xchg
ror
mov
insb
repz
imul
xchg
lds
leave
dec
out
nop
jns
stos
mov
es
jge
popa
sbb
insb
or
jne
jp
dec
cmp
sbb
out
jmp
and
sti
dec
sbb
xlat
inc
gs
mov
jmp
push
jb
dec
leave
out
push
pop
push
and
scas
mov
or
aas
outsb
mov
ljmp
in
lock
out
testl
or
pop
jae
insl
dec
into
or
mov
inc
imul
mov
loopne
cld
dec
sbb
shll
dec
pop
in
and
or
out
daa
push
imulb
pop
fsub
mov
in
push
pop
sub
hlt
jmp
mov
cwtl
fcompl
pushf
mull
inc
bound
repnz
jle
movsl
or
ljmp
or
fwait
scas
fiaddl
mov
inc
lret
xchg
hlt
sub
scas
inc
repnz
loope
movsb
xchg
ret
ror
iret
adc
lds
xor
cmpsl
fbstp
xor
andb
push
lods
lcall
movl
dec
and
push
cmp
andb
fisttps
cld
fwait
sbb
out
sbb
popf
ljmp
push
push
adc
std
fistpl
ds
hlt
push
test
add
xchg
sub
in
rclb
sub
stc
and
adc
and
ljmp
pop
enter
rorl
roll
jne
and
and
pop
fbstp
cmp
dec
cmp
test
ljmp
stos
add
out
jp
lret
mov
and
add
adc
and
lods
inc
and
sub
cmp
mov
mov
cmc
jp
cs
push
pop
push
inc
dec
jne
dec
fucomp
xchg
adc
xchg
mov
subb
fs
adc
imul
push
mov
ja
adc
mov
test
enter
sbb
out
jge
mov
repnz
ljmp
xchg
pop
in
pop
lock
sub
xchg
inc
mov
decl
pushf
cld
fldl
jmp
pop
jmp
repz
sbb
jno
sahf
mov
and
jle
push
push
add
fwait
jne
inc
jge
mov
jl
push
and
adc
sbb
loope
loope
hlt
ffreep
ss
and
insb
push
aas
sbb
ret
out
das
mov
add
std
jbe
push
les
inc
xor
pop
test
xor
call
mov
fadds
push
icebp
or
cmp
not
push
rcrb
leave
movsl
xchg
xchg
add
push
ret
jg
xchg
rorl
mov
jo
movsl
sbb
xor
push
fisttpl
lret
int3
or
fdivrs
insb
ret
enter
mov
jmp
pushf
mov
test
mov
in
or
inc
mov
popa
mov
lods
ljmp
push
mov
jae
cmp
dec
pop
in
adc
pushf
or
mov
cmpsb
cmp
loop
jmp
rcpps
iret
ret
dec
mov
adc
add
pop
and
fstpl
orb
xchg
std
adc
dec
inc
mov
loopne
xchg
js
mov
ljmp
inc
mov
fistpll
add
jae
out
pop
arpl
jnp
je
jns
es
test
mov
pop
stc
loop
in
int3
cmp
iret
sti
push
jae
push
fs
aaa
cltd
mov
jae
adc
cmc
mov
push
xor
mov
push
ja
jge
ljmp
jg
ret
ljmp
push
pop
pop
mov
loop
adc
sub
out
jp
inc
mov
pop
mov
inc
pushf
inc
aaa
movsl
sbb
push
ret
push
mov
inc
arpl
pop
loopne
and
mov
popf
jno
mov
add
cmpsb
cltd
jb
jnp
test
push
ret
test
dec
ss
jg
test
aam
sub
jne
or
inc
les
pop
ret
cmp
sti
test
cwtl
fucomi
sub
repz
or
xchg
mov
ret
adc
jecxz
negl
jae
xchg
adc
push
stos
rcrb
pop
adc
cmp
cld
in
and
rorl
ds
repnz
sub
mov
out
mov
adc
cld
inc
cmp
pusha
lret
push
leave
mov
test
ret
cs
xlat
fstl
lods
scas
je
les
xor
mov
scas
aaa
fiadds
arpl
jge
xchg
fxch
popf
fbld
dec
js
jbe
loopne,pn
xchg
and
xor
insb
pusha
aam
inc
jnp
xor
or
int3
loopne
mov
movsb
rclb
stc
inc
fsubl
dec
mov
out
dec
mov
sbb
jnp
int
lods
pop
lods
push
sbbl
push
and
mov
dec
lret
push
mov
ret
xchg
xor
arpl
pop
jae
mov
gs
push
into
popa
xor
pop
lret
jp
stos
scas
insb
mov
popf
xchg
in
pop
ret
mov
repz
mov
xchg
das
or
lock
cld
loope
xor
rcrl
sub
lahf
cmc
cmp
or
sbb
loope
das
pop
sti
push
mulps
adc
lods
fldcw
shl
and
xchg
jp
mov
je
dec
jne
mov
jb
adc
push
push
xor
dec
cmp
rclb
ss
jmp
pop
sbb
mov
leave
sub
add
ficomps
stos
aad
dec
movsl
es
or
dec
xor
repnz
orb
out
fildl
fimuls
mov
pop
mov
fdivrs
xchg
sub
jle
xchg
jo
push
cli
adc
nop
and
insb
scas
fbld
jl
into
xor
jo
add
leave
mov
sub
adc
cmp
sbb
pop
push
adc
rcll
fwait
mov
lock
xchg
and
pop
stos
sbb
mov
push
adc
aas
pop
xor
fisubl
jne
rcrl
push
rorb
hlt
mov
sbb
inc
xchg
mov
mov
pop
sub
scas
in
xor
lret
inc
xlat
jmp
mov
int3
add
xchg
int3
addr16
call
push
or
push
cld
mov
jne
xor
mov
dec
push
adc
inc
scas
in
cmp
cltd
jl
insb
mov
xchg
popa
insb
and
push
je
jbe
inc
mov
and
mov
cmp
jnp
test
sub
not
inc
ficoml
push
xchg
inc
lods
sub
cmp
lock
ds
aad
adc
mov
movsl
mov
mov
xchg
pop
add
rol
cs
shll
adc
inc
fstpt
adcl
xchg
decb
aam
add
pop
fwait
xchg
sbb
and
fists
xchg
and
or
mov
xchg
stc
fcmovne
push
cmp
xor
cmp
loop
pop
sub
inc
arpl
jecxz
pusha
dec
jnp
cs
iret
lds
fdivrl
dec
add
dec
inc
mov
mov
out
pop
gs
ja
test
mov
mov
dec
les
insb
iret
insb
out
jmp
sbb
iret
adc
jl
out
or
shrb
shrb
ret
lods
mov
inc
xchg
jb
sub
and
fnstcw
or
xor
pop
mov
mov
shl
lahf
ljmp
xchg
cmp
outsl
xor
push
neg
inc
push
sbb
andb
cmpsl
mov
jg
mov
xchg
lock
add
in
pop
rol
push
inc
lock
je
ret
aas
jnp
pusha
out
inc
xor
xor
out
scas
stos
xchg
pop
ja
mov
mov
ficompl
lret
and
mov
adc
mov
into
aad
pop
cmpsl
arpl
pop
dec
adc
es
es
std
cmp
push
push
out
push
push
mov
cmp
lea
xor
scas
inc
pop
add
inc
add
inc
xchg
shrb
popa
cmc
dec
jne
loopne
xchg
jmp
pop
mov
pushf
inc
add
add
add
push
stc
pop
popa
adc
cmp
push
leave
mov
pop
lahf
push
xchg
aaa
loop
in
lahf
jne
xchg
add
pushf
jecxz
imul
mov
push
inc
repz
ficomps
shlb
adc
js
push
inc
pop
and
ss
sbb
or
repnz
cmp
sub
daa
sti
idivb
out
sbb
jmp
sahf
scas
daa
insb
mov
add
lods
mov
and
repz
leave
inc
adc
push
lea
sahf
lcall
fdiv
jp
xchg
xor
rcrb
outsl
pop
xchg
cmc
or
xchg
push
cmpsb
pop
out
loopne
push
ja
mov
jbe
xchg
adc
cmpb
je
setno
popa
pop
cmp
jnp
outsb
add
pop
sbb
push
adc
scas
dec
ret
not
leave
hlt
push
add
sub
out
sub
inc
jg
sarl
pop
das
jp
test
lcall
fcompl
cmp
jg
cmp
gs
push
xor
repz
or
filds
testl
jl
fdivs
aaa
push
das
das
push
xchg
gs
fsubrs
jb
sub
xchg
inc
cmp
outsl
int
lahf
mov
mov
adc
fcomps
pop
mov
cli
mov
inc
loop
mov
hlt
xor
aas
ljmp
xchg
lods
and
jge
and
push
sbbb
mov
imul
mov
jmp
in
adc
pop
shrl
stos
push
iret
hlt
sti
rcrl
xchg
jns
xchg
adc
scas
out
jge
fdivl
mov
xchg
adc
iret
add
fdivp
jle
pusha
movsb
fdivrs
push
and
adc
outsl
adc
adc
int3
push
test
out
or
movsb
push
push
cmp
stos
fbstp
cmp
fs
cmp
xchg
or
jmp
div
pop
shrb
jmp
adc
test
push
mov
out
fcompl
xor
adc
add
pop
or
xchg
add
arpl
aad
add
or
stos
sbb
sub
jno
cltd
xchg
outsb
mov
pushf
shr
and
ljmp
ficomps
pop
sub
scas
lea
mov
dec
cli
cmpsb
xchg
testb
jge
mov
jecxz
test
dec
imul
mov
mov
pop
jp
fs
mov
cmp
push
xorb
scas
mov
aad
out
inc
and
shl
or
or
jecxz
mov
inc
shl
out
or
adc
or
mov
adc
out
sbb
out
dec
sub
pop
fidivl
das
test
adc
int
inc
stc
in
cmc
add
and
imul
sti
cmp
pop
jno
pop
push
in
jl
imul
das
in
adc
fstps
push
sub
in
or
lret
decl
fcomi
aas
cmpsb
jns
into
push
nop
mov
adc
out
xorl
inc
lret
nop
out
jle
jne
loope
lcall
out
pop
pop
or
cmp
lds
mov
push
mov
pusha
jne
cwtl
aaa
std
adc
push
in
dec
rorb
or
push
add
mov
jmp
idivb
dec
and
add
lahf
adc
sti
je
sbbl
mov
cmp
add
cli
pop
xchg
jmp
insl
push
mov
inc
sub
mov
jmp
pushf
sbb
dec
xchg
or
jbe
inc
jno
pusha
dec
add
negb
inc
loop
push
insb
xor
sti
jmp
jbe
scas
sbb
mov
fwait
and
cmc
cwtl
cmc
mov
sub
xchg
loopne
popa
and
fisubs
pop
out
cmp
mov
mov
jl
mov
ret
mov
rcrl
fnsave
cmc
sub
das
and
mov
stc
rcll
stos
mov
insb
iret
mov
pushf
or
out
arpl
out
xchg
cmp
cwtl
add
pop
fidivs
push
int
cld
sbb
mov
jae
mov
mov
aad
pop
pop
movsb
xor
ljmp
xchg
pop
dec
sub
in
flds
scas
sub
bound
fcmove
loop
scas
xor
mov
xor
xchg
imul
iret
mov
or
aam
jne
je
mov
call
pop
enter
mov
mov
sbb
cs
les
pop
movsb
pop
repz
popa
repz
xchg
lcall
sub
dec
add
mov
sbb
lea
stc
pop
aaa
nop
dec
mov
lahf
rcll
xor
mov
loope
sbb
push
and
out
testb
push
scas
test
add
out
xchg
inc
mov
aaa
xchg
xchg
cmp
mov
lahf
insb
pop
rorb
stos
dec
xchg
cmp
insb
ficompl
or
inc
or
push
jno
and
aam
and
pop
push
test
add
scas
int
xor
stos
popf
sti
mov
inc
cs
mov
into
movsb
in
add
dec
sahf
cltd
testl
in
leave
xchg
jecxz
loop
add
out
pop
jg
mov
orl
addr16
inc
push
mov
imul
pushf
movsb
push
pusha
push
adc
aam
xor
lods
jb
loop
cmp
sbb
jp
mov
cli
xor
ljmp
xchg
stos
shlb
or
mov
sub
lcall
cmpsb
icebp
jb
stc
pushf
inc
and
out
mov
sahf
stos
mov
out
cmc
inc
push
leave
je
les
mov
mov
dec
cmp
dec
stc
cmpsb
or
test
scas
cmp
scas
scas
test
mov
mov
ret
jp
xchg
fcmovnb
cwtl
xor
sub
mov
lcall
sbb
ja
sub
aaa
push
dec
mov
cld
hlt
add
sbb
push
jl
lcall
sub
movsl
push
aas
fcoml
cmp
loopne
push
add
sti
movsb
cmpsb
fbld
sbb
inc
push
divl
jg
add
adc
imul
nop
sub
sub
cmp
in
mov
sbb
sbb
sub
jmp
inc
leave
iret
add
xchg
pop
int
sahf
and
push
cmp
cmp
jne
and
cmp
adc
adc
addb
sbb
out
sub
jb
or
push
in
fs
mov
jecxz
jo
arpl
lock
mov
je
cmp
xor
repnz
adc
loop
int3
lret
add
mov
add
xchg
lds
sbb
in
inc
popa
int3
or
inc
int3
jno
repz
repnz
jp
jbe
adc
mov
rol
adc
stos
mov
jb
icebp
sbb
push
inc
lcall
cmp
daa
lds
mov
push
test
in
pop
pop
test
xorl
dec
movsl
lahf
dec
addr16
jmp
lock
fs
movhps
lahf
insl
jg
push
dec
dec
loop
hlt
push
dec
iret
dec
mov
mull
mov
mov
dec
and
mov
cmp
mov
mov
shr
mov
and
cld
lahf
int3
pop
cmp
fwait
inc
sbb
cmp
mov
test
jg
test
xchg
inc
int
mov
sbb
and
sub
repnz
inc
fwait
mov
pop
push
inc
int3
js
mov
jne
stos
mov
gs
fidivrs
mov
inc
mov
mov
jle
cmc
das
in
inc
mov
das
mov
inc
dec
dec
test
and
or
sahf
push
lret
xor
lds
or
mov
xlat
sub
in
movsl
push
cmp
jl
sbb
out
ret
scas
ds
nop
out
xor
or
mulb
sbb
mov
dec
loopne
mov
stos
shl
push
scas
clc
inc
sarl
std
subl
push
test
mov
mov
int
jno
ds
add
cwtl
sub
add
inc
xchg
out
jg
aam
xor
push
mov
push
inc
lcall
cs
sbb
inc
xor
mov
mov
sbb
cmp
inc
xor
push
ret
lret
mov
ret
pop
jp
stos
fcoms
dec
inc
jo
shll
stc
pop
sti
mov
pop
push
push
jne
ds
popa
jge
mov
inc
sarb
pop
sub
sbb
loopne,pn
fmuls
jno
mov
mov
ja
inc
roll
scas
add
mov
cmp
pop
pushf
mov
mov
das
test
cwtl
popa
adc
inc
cmp
pushf
lock
push
ja
jmp
idivl
rorb
push
mov
xor
int
test
add
push
push
push
jecxz
inc
jge
sub
jge
dec
jp
pop
pusha
cmp
mov
mov
cmp
mov
pop
inc
jo
test
inc
lock
lds
and
inc
xchg
mov
push
test
cmpl
push
aad
cltd
popa
sbb
loopne
scas
sub
int3
or
mov
mov
mov
or
dec
sub
mov
aaa
das
sub
jbe
repz
or
fimull
jmp
fcom
dec
mov
cmp
cli
mov
add
adc
arpl
into
or
loopne
sbb
jg
mov
xchg
xchg
in
xchg
fidivs
adc
xchg
pop
jg
mov
mov
fwait
pushf
mov
clc
enter
sub
in
xor
mov
daa
and
and
sbb
lahf
je
ret
xor
leave
push
push
adc
cwtl
jge
and
mov
xchg
sarl
and
scas
push
lds
out
arpl
roll
outsb
sbb
out
sub
mov
outsb
lret
popf
orl
aaa
shlb
scas
push
mov
inc
mov
shll
cmp
sarb
shll
mov
stos
test
adc
insb
mov
cmp
jmp
out
sbb
movsl
add
xorb
jmp
adc
or
mov
dec
mov
sti
test
xor
mov
inc
inc
ret
or
xor
fstpt
outsl
add
imul
fwait
sub
mov
or
or
dec
call
repz
and
cmpsb
add
jb
jg
pop
movsl
or
je
jg
sub
bnd
cs
jle
test
cmc
lea
jns
push
stos
aam
popa
hlt
inc
dec
mov
inc
popf
inc
lods
and
nop
mov
pop
sbb
imul
cs
test
pushf
bound
dec
dec
fxch
sbb
ja
fstl
pusha
adc
inc
out
xor
add
sbb
in
sub
xor
lahf
aad
jnp
mov
movl
iret
pop
iret
jecxz
inc
push
and
xchg
ss
ljmp
pop
inc
hlt
or
inc
xchg
inc
mov
jg
add
push
push
or
lock
js
push
inc
mov
sbb
fldt
pusha
push
leave
fdivrs
jecxz
lret
cmp
dec
adc
test
adc
cwtl
int
add
push
scas
mov
js
push
xor
ret
add
push
inc
popf
pop
stc
out
mov
clts
sbb
add
push
fiaddl
mov
push
inc
insl
pushf
ja
frstpm(287
loop
loopne
and
xlat
sbb
mov
cmc
scas
lcall
ss
dec
mov
mov
and
scas
fsubrl
adcb
xchg
shlb
add
jmp
lds
daa
faddl
rclb
js
mov
aas
pop
xchg
into
loopne
jnp
xchg
add
adcb
add
xorb
addl
repnz
fwait
stos
das
jo
push
jg
imull
std
leave
sub
imul
xchg
clc
jecxz
sarb
pop
repz
and
lcall
out
lret
and
add
or
incb
inc
das
xchg
mov
mull
mov
pop
lea
push
mov
aaa
int
mov
inc
fwait
add
sub
mov
xor
leave
data16
and
int
imul
sbb
fsubs
adc
jmp
adc
ljmp
rorl
push
in
mov
cmp
mov
xor
test
fwait
push
ret
mov
cmp
popa
add
jb
or
mov
adc
cmc
lcall
sbb
add
xlat
decb
int3
cmpsl
and
shrb
mov
pop
jmp
push
enter
jg
cli
arpl
ret
or
mov
push
and
pop
or
mov
insl
push
cmp
pop
dec
ret
mov
mov
mov
adc
popf
and
mov
out
and
sub
faddl
dec
mov
and
fnstsw
pop
jno
add
stos
lcall
pop
cmp
dec
mov
xchg
mov
in
jb
mov
int3
fsubl
fisubrl
cmpsb
lods
add
mov
lahf
test
sti
movsl
mov
jmp
scas
xlat
std
sbbl
enter
sub
adc
lds
int3
movsl
mov
sti
xor
les
mov
pushf
adc
and
mov
sub
add
loope
push
cmp
jno
jnp
insb
xor
xor
loopne
pop
and
jl
clc
out
add
fcomps
aad
in
pop
xchg
jecxz
in
jo
adc
push
test
in
push
or
xlat
sub
mov
leave
mov
dec
pop
xchg
mov
xchg
mov
out
sbb
loope
pop
mov
sbb
xchg
dec
pop
sub
rcrb
inc
test
mov
inc
hlt
cmpsl
or
dec
xchg
jnp
mov
hlt
pop
fadd
popa
mov
mov
mov
ja
pusha
pushf
jle
and
dec
xor
cmp
test
pop
fidivs
fistpl
aam
lcall
lds
mov
pusha
xor
xor
push
adc
push
addl
inc
mov
mov
mov
lea
xchg
push
mov
movsl
lds
dec
xchg
ret
adc
dec
sti
fidivrl
xchg
push
test
hlt
int
cmp
xchg
outsl
movsb
dec
js
in
cmp
and
cmp
or
int3
add
mov
dec
loope
fidivl
aaa
popf
inc
jbe
mov
test
add
fstpt
fucomip
dec
jnp
fstpt
mov
notl
mov
mov
inc
bound
scas
dec
xchg
jno
push
push
lret
sahf
dec
and
mov
ret
mov
cmpb
lea
xor
xor
in
cmp
scas
add
cld
dec
sbbb
andl
popa
sub
mov
sti
cmp
pop
xor
xchg
cmp
or
mov
pop
sbb
out
jne
call
int3
imul
aam
cs
lds
jbe
data16
push
xor
out
or
scas
mov
movsb
or
or
lret
and
inc
cmpsl
jb
sub
pop
test
cli
outsl
call
es
lret
popf
loop
push
pop
xchg
popa
push
icebp
in
lock
movsl
mov
sub
nop
mov
and
js
mov
mov
dec
mov
xchg
sarb
push
ret
sbb
or
ljmp
push
sbbl
or
sbb
arpl
push
ret
sbb
or
pop
or
stos
xor
aaa
mov
cmp
ja
bound
mov
iret
les
imul
and
cmp
jno
pushf
lods
adc
aas
rol
lret
mov
filds
je
in
mov
incl
inc
pop
pop
jae
mov
xor
in
test
hlt
pusha
mov
mov
adc
in
push
mov
dec
mov
pop
xchg
gs
dec
fucomp
mov
ret
adc
jmp
add
lods
fldenv
jmp
mov
in
sbb
loop
sbb
push
inc
push
lds
fisubrl
test
lret
mov
test
addr16
cmp
popf
test
mov
or
sbb
sub
sub
ficompl
adc
xchg
shrb
cld
outsb
jbe
aam
push
outsl
mov
cmp
xlat
xor
jecxz
ss
imul
repnz
lret
push
mov
dec
orb
jle
out
xchg
jecxz
xorl
mov
push
int
call
test
mov
adc
xchg
cmp
dec
mov
enter
nop
mov
and
call
cmpsl
aas
sbb
lret
pop
xor
adc
scas
push
movsb
sub
lret
clc
xorl
add
sbb
jmp
push
cmp
gs
shlb
hlt
pushf
into
pop
fistpll
jl
stc
lods
jbe
or
push
hlt
cmp
enter
test
sbb
movsl
and
mov
xor
enter
mov
daa
mov
lods
js
jp
insl
or
xchg
loopne
xchg
jle
push
push
pop
xor
jge
out
int3
mov
xchg
inc
mov
jno
out
imul
fiaddl
mov
or
cmp
mov
ror
jno
sbb
fstpl
js
out
mov
pop
dec
test
mov
mov
test
and
inc
gs
pop
cld
and
push
in
push
rorl
divb
cmp
jns
xor
cmp
test
scas
aad
nop
mov
lock
cmc
push
jp
mov
lahf
add
popf
jnp
pushf
push
mov
das
cmp
popa
xchg
lret
mov
push
cli
out
jecxz
dec
in
lods
sub
pop
mov
ja
aam
fmul
pop
mov
xor
movsb
lahf
int
fstl
scas
cmpsb
push
cmp
fidivl
arpl
push
cmp
jl
mov
cmpsb
and
cmpsb
lcall
insl
mov
xor
andb
outsb
out
popa
stos
hlt
rclb
mov
push
test
pop
test
or
outsb
lock
sbb
insb
lret
push
mov
lods
jae
push
cmp
and
cmpsb
xor
ljmp
faddl
mov
lea
mov
cltd
cs
out
add
xor
mov
mov
aad
push
add
ret
xor
mov
sbb
pop
test
out
lret
mov
inc
fcoms
loopne
or
idivl
invd
add
push
push
cmp
mov
fists
pop
add
mov
test
les
push
loopne
fnstsw
or
or
push
and
nop
pop
push
adc
test
jno
popf
flds
jnp
sbb
mov
cmp
inc
imul
sti
jle
fsubp
jae
mov
sbb
es
xlat
aas
repz
fdivs
mov
sub
adc
mov
mov
repz
mov
mov
int3
adc
pop
addr16
adc
add
enter
pop
mov
loop
mov
pop
int
or
leave
arpl
mull
outsb
pop
leave
or
icebp
and
dec
cltd
jnp
mov
add
ljmp
test
push
cltd
loope
xchg
test
ljmp
adc
push
cmp
adc
insl
fs
mulb
testl
sub
fwait
mov
xchg
das
and
in
lret
push
mov
rcl
rcrl
loopne
jl
mov
sub
jns
stc
sub
mov
imul
sub
dec
jo
jb
and
fdivrs
scas
jmp
xor
mov
shr
test
jmp
test
jmp
jg
stos
aam
fs
or
in
test
lods
imul
andb
aam
jb
mov
sub
lods
ljmp
lahf
inc
and
pop
leave
push
inc
cmp
sub
mov
xor
mov
inc
fcoml
icebp
push
or
xorb
mov
sbb
lcall
inc
jb
push
punpckhwd
out
lret
das
mov
clc
dec
ret
fs
mov
fsubl
xchg
push
fcos
nop
aam
sbb
inc
cld
ret
jbe
lock
arpl
pop
inc
jne
stc
ficomps
jne
jno
es
pop
dec
cmc
dec
dec
cwtl
outsl
clc
repnz
or
adc
outsl
add
jg
cmp
ret
push
aas
pop
pop
dec
andb
jne
mov
pop
mov
das
adc
dec
mov
or
cwtl
addr16
fwait
inc
rorb
or
jae
movsl
pop
xchg
hlt
imul
pushf
in
sbb
mov
add
dec
lcall
mov
ret
rcrb
jp
add
xor
sub
sti
loopne
shlb
andl
xor
mov
outsb
jne
mov
cmpsb
or
mov
mov
sbb
daa
lods
test
movsb
or
lret
stc
ret
lcall
mov
out
mov
mov
sbb
cmp
mov
cmp
roll
mov
xor
in
call
stos
sub
jg
fildll
stc
les
xchg
shrb
and
add
in
lods
or
cmp
cmc
insb
pop
push
xchg
lcall
mov
mov
mov
movsl
cmp
call
iret
adc
add
mov
inc
pop
push
mov
mov
out
xor
dec
xor
insl
mov
ret
push
mov
imul
ret
movl
xor
add
push
mov
or
daa
cmp
inc
sti
movsb
pop
hlt
add
addr16
or
stos
sti
iret
fs
jl
push
xchg
push
adc
push
xor
xchg
mov
adc
in
push
fbld
push
inc
js
jns
push
jl
shl
pop
inc
lret
lret
daa
std
lods
mov
out
into
xchg
inc
ret
add
jno
mov
addl
imul
insl
and
mov
mov
mov
inc
lds
repz
in
stc
sbb
mov
aad
xchg
cltd
add
mov
scas
xchg
mov
test
mull
mov
aaa
daa
pop
ja
mov
jl
das
and
stc
xchg
cld
das
pushf
mov
ss
jmp
into
mov
fisubrs
push
iret
aas
cwtl
inc
xor
jae
add
lahf
pop
fadd
jae
cmp
decb
cmp
adc
xor
arpl
cmpsb
cmpsl
gs
jo
push
mov
loope
and
inc
jnp
aam
lret
test
mov
loop
push
clc
pusha
sbb
jns
outsb
or
pop
mov
cmp
ds
call
out
sbb
gs
jnp
sbb
cmp
and
mov
out
xchg
add
ss
test
nop
jnp
icebp
push
ret
cs
fidivrl
sbb
icebp
fwait
sub
xor
push
and
mov
call
mov
xchg
lret
lds
xor
movsb
jne
push
aam
and
ljmp
add
xor
lods
cs
inc
xor
fnstenv
push
sbb
dec
mov
sub
incb
cmpsl
call
enter
test
addl
dec
jmp
fildl
sbb
aas
jbe
xchg
dec
popa
in
cltd
rcl
inc
dec
mov
mov
sub
cmp
cli
adc
loopne
out
leave
ljmp
pop
les
divl
aaa
subl
xor
test
mov
mov
js
adc
ja
test
mov
cld
fisubrl
cmp
inc
lods
aas
xchg
jl
jle
nop
mov
mov
out
mov
inc
mov
sub
pop
ret
mov
cmp
outsl
mov
pop
data16
adc
rol
mov
cmpb
gs
sub
fwait
call
xchg
push
pop
push
pop
call
out
xchg
into
movsb
test
pushf
lods
pop
jbe
adc
inc
clc
push
add
inc
push
divb
fists
and
notb
neg
xchg
push
dec
orb
jb
inc
add
xorb
mov
in
cmp
addr16
sbb
xchg
cmp
mov
push
jns
int3
xlat
aas
and
scas
inc
pop
pop
fstps
pop
pop
pop
inc
push
pushf
dec
in
fsubr
out
test
dec
inc
mov
hlt
mov
es
mov
cmpsl
adc
je
nop
fndisi(8087
std
adc
mov
pop
adc
xor
aaa
out
cmp
lock
arpl
hlt
or
cmp
fbstp
inc
out
push
pop
dec
jmp
fs
int
scas
adc
loopne
sub
xchg
dec
fcoml
jae
push
and
inc
mov
dec
mov
mov
mov
mov
pop
in
js
pop
rcll
pushf
mov
or
out
push
jle
cltd
testl
in
rorl
adc
sar
cmpl
add
lods
fdivp
cmp
repnz
adc
pop
cmpsl
lods
ret
jl
sti
xor
pop
lcall
sbb
push
xorl
jae
inc
ucomiss
sbb
les
add
mov
in
nop
xchg
xchg
cmc
xor
inc
cli
or
push
push
sbb
jecxz
fs
push
add
xor
mov
sub
cmp
sbb
cmp
mov
mov
and
loope,pn
das
aaa
pextrw
lds
pop
sub
aaa
sbb
pop
adc
cltd
mov
push
sbb
idivl
stos
push
std
cmc
dec
jnp
push
jne
push
addb
cmp
sub
push
xchg
pop
xchg
outsl
pop
jo
and
test
mov
mov
out
scas
sbb
test
repz
push
cltd
add
sbb
negl
jl
scas
sub
push
mov
mov
sbb
pop
fwait
cmp
adc
fs
or
call
pusha
xchg
add
cmp
int
data16
dec
rcll
shll
lods
test
subl
ljmp
mov
push
loop
push
sub
sbb
mov
aas
and
sbb
mov
or
push
lcall
mov
inc
sbb
sbb
sbb
arpl
out
jne
movsb
lods
ds
mov
scas
repnz
cmp
add
and
popa
add
mov
sti
adc
rorb
incb
sbb
add
in
mov
cmp
test
in
push
jae
movsb
shlb
or
pop
dec
in
push
or
lds
xor
adc
sbbb
mov
or
and
adc
stos
adc
dec
push
icebp
shlb
jmp
enter
andb
or
aaa
in
out
or
int3
hlt
mov
fsubrl
icebp
in
loopne
je
xchg
dec
pop
mov
jmp
pop
mov
rcrb
inc
and
les
xchg
daa
ret
lds
mov
fs
cmpsb
rcr
or
repz
fbstp
xchg
lret
jg
push
stos
push
cmc
aad
rorl
adc
sti
cltd
cmpl
push
rolb
bound
lock
mov
cltd
lcall
adc
in
push
jp
jmp
inc
mov
imul
jae
outsl
mov
and
mov
negb
or
ficoml
mov
sbb
popf
out
lret
cmp
lods
sub
mov
arpl
in
add
dec
inc
je
scas
or
insl
nop
push
call
jmp
lods
lock
mov
inc
push
inc
sbb
sbb
test
into
mov
imul
mov
out
sbbb
into
stos
jb
mov
pop
or
inc
mov
movsl
enter
ret
rcrb
add
pop
int
loopne
int
or
jns
ficomps
mov
imul
jbe,pn
mov
add
mov
xlat
mov
mov
push
xorl
shrl
pop
movsl
fs
push
xchg
sub
andb
jmp
sbb
aam
sarb
call
jo
idiv
shr
fsubrl
mov
rcrb
mov
xor
jge
or
insb
repnz
fisttpl
jl
dec
dec
jnp
jb
lret
dec
jl
and
fisttps
and
fildl
sbb
movsl
mov
xchg
pop
adcb
sub
and
pop
mov
xor
or
mov
jmp
mov
es
sub
or
push
cs
lods
movsl
mov
push
int3
and
sbb
adc
fildl
in
repz
xchg
psrlq
lret
mov
scas
adc
andl
bswap
pop
or
xchg
negl
jns
xchg
jmp
loope
and
insl
sarl
xor
add
xchg
lock
push
sbb
aam
adcl
jg
mov
pop
jno
pop
xchg
xchg
aad
in
sbb
sub
push
arpl
lea
arpl
rclb
push
xchg
in
mov
fwait
not
jno
push
xor
mov
out
xchg
mov
xor
lds
mov
aaa
leave
movsb
adc
lcall
pushf
pop
xor
imul
pop
xchg
cmp
jge
pop
gs
inc
mov
sub
dec
aaa
mov
mov
jge
les
enter
mov
call
decl
cmp
leave
or
pushf
insb
faddp
or
adc
int3
xchg
or
adc
xor
dec
xchg
dec
in
loope
sbb
xor
fidivrl
push
add
imul
insb
dec
mov
pop
test
xorl
icebp
pop
xchg
jb
iret
fcompp
sbb
mov
jg
sbb
xchg
subb
js
pushf
add
les
sub
out
aaa
pop
xor
xchg
arpl
cmc
rcr
mov
pop
scas
cmp
or
inc
xlat
pop
jae
cmp
pop
es
stc
fs
mov
addr16
or
rcll
in
pusha
jle
push
call
jbe
std
in
push
rorl
pusha
cltd
push
xor
lahf
bound
push
xchg
data16
outsl
lcall
mov
fnstsw
mov
xor
outsl
bound
pushf
clc
or
xor
gs
mov
push
mov
jo
in
stos
movb
divl
ljmp
fldl
or
mov
outsb
xor
arpl
gs
das
popaw
je
and
rorb
sbb
xlat
pusha
test
pop
ret
inc
jo
adcb
aam
jns
sub
stc
adc
lcall
cmp
mov
sub
lods
in
xlat
pushf
cmp
ds
insl
cmpsl
test
sbb
mov
dec
pop
push
xor
imull
mov
pop
clc
aaa
insb
cld
daa
lock
mov
iret
push
push
push
jns
or
xor
dec
adc
or
int3
sahf
subb
or
daa
sbb
test
sub
fdivl
or
rcrl
lods
dec
inc
mov
xor
lcall
test
pop
mov
pusha
cmp
add
sub
xchg
sub
mov
lret
scas
cli
insb
add
call
mov
or
test
cmp
jb
loop
sahf
cmp
inc
mov
gs
or
and
and
stos
arpl
mov
xor
dec
cmp
in
scas
lahf
test
rorl
mov
test
dec
fs
cli
inc
lcall
push
or
sbb
inc
sub
mov
inc
lea
lock
mov
inc
mov
xchg
out
sub
and
push
jns
iret
int
jne
add
sub
adc
mov
lahf
ds
jl
mov
mov
cli
push
sub
shll
cli
movsb
in
cli
arpl
das
inc
jno
sub
jb
daa
add
out
mov
and
mov
push
rcrl
or
popf
xor
mov
ss
pusha
jg
les
jmp
nop
mov
fwait
xchg
ret
aam
and
hlt
cmpl
push
les
ret
pop
mov
shrl
cmp
xor
mov
add
or
mov
mov
pusha
js
ret
mov
xchg
outsl
push
fisttpl
xlat
push
clc
nop
fucomip
out
xchg
test
into
pop
xchg
cmp
mov
cmp
inc
mov
adc
cmp
mov
icebp
xchg
repnz
sbb
and
adc
push
mov
adc
jbe
out
test
sahf
movsl
mov
mov
jne
adc
pop
pop
jp
xchg
mov
xchg
xchg
lea
call
push
ret
jne
cmp
inc
jg
mov
sub
jle
add
cmp
fstps
mov
dec
jecxz
xchg
cld
ja
jl
sub
and
fistps
xchg
mov
xchg
or
nop
mov
rclb
push
fs
dec
adc
mov
mov
xchg
pop
aad
in
jae
push
pop
or
inc
jae
out
xchg
and
ja
push
add
cli
jnp
mov
pop
inc
cmpsb
iret
lods
push
ss
push
jle
lods
xchg
test
mov
and
enter
stos
pop
repz
fdivp
sub
jb
and
cmpsb
loope
test
jmp
push
addr16
lods
dec
mov
mov
loope
jmp
push
mov
mov
into
or
adc
pop
daa
lahf
aam
pop
movsl
icebp
xlat
jno
sub
sub
out
popf
in
adc
dec
or
cltd
insb
or
sub
xor
lods
adc
popf
hlt
std
cld
pop
sbb
sti
scas
aam
out
xchg
pop
mov
xchg
decb
pop
rcrb
and
xlat
jecxz
testl
push
mov
jnp
or
ljmp
and
mov
cmp
mov
icebp
inc
rorb
int
dec
pop
inc
mov
std
mov
xchg
or
cmp
cmp
cmp
das
stc
std
int
push
aad
lret
inc
cmpsb
in
cld
pop
cmp
cmp
ja
ret
je
ret
hlt
push
and
aaa
ljmp
xor
push
int
push
ja
jmp
push
inc
les
jo
push
movsl
add
mov
loop
sub
call
nop
in
leave
loope
mov
or
std
mov
sahf
fs
jnp
movsl
jp
fists
adc
or
mov
pop
push
popf
adc
push
xchg
popa
inc
cmpsb
cwtl
nop
mov
cmp
push
dec
fdivl
mov
xor
cmpsl
adc
addl
and
lods
lahf
mov
pop
adc
test
sub
xor
loop
sub
sbb
sbb
daa
push
out
ds
movsl
fcmove
mov
inc
leave
jnp
daa
scas
inc
jnp
dec
push
pop
mov
jle
lea
sbb
fbstp
mov
fstl
and
popf
sti
mov
push
add
and
or
xchg
pop
sub
and
loop
sub
fdivs
movsl
int
ret
mov
pop
test
xor
push
and
fdivl
add
fldt
sub
mov
sub
rolb
aad
pop
add
push
es
mov
repnz
push
xor
xchg
pop
scas
adc
xor
call
dec
inc
jp
lods
jl
sub
je
add
out
icebp
jbe
shlb
add
mov
fldt
subl
dec
test
leave
in
icebp
xor
dec
sub
mov
add
ffreep
mov
std
lods
sbb
insb
fisttpll
sub
mov
inc
dec
std
dec
pop
lds
mov
js
or
mov
push
loope
test
cmp
and
xchg
ljmp
add
stc
je
inc
add
xchg
in
test
int3
inc
insl
add
rclb
push
sub
or
mov
scas
inc
jae
cmp
movsb
std
lahf
fimull
jae
pop
jns
out
das
lea
cmp
and
add
lods
xchg
inc
lcall
stc
cmpsl
fadds
pop
imul
je
outsb
xchg
fisubrs
cwtl
scas
adc
in
dec
lcall
adc
dec
rol
or
cmp
push
call
cmp
mov
fidivrs
fwait
xchg
test
fiadds
test
faddp
addb
mov
sub
pop
or
jne
adc
mov
mov
push
adc
add
push
sub
dec
shll
cwtl
xchg
je
dec
jne
pop
mov
sbb
or
cltd
add
push
mov
ljmp
mov
adc
xchg
mov
sub
ljmp
add
mov
or
xchg
addr16
dec
sbb
inc
push
ljmp
push
pop
rorl
in
lcall
dec
rcrb
int
fsubs
mov
inc
shll
pop
outsl
dec
clc
xchg
jbe
mov
mov
movsl
aam
fs
ja
call
xchg
mov
jge
mov
jp
enter
xchg
fnstcw
push
lret
jbe
cvttps2pi
and
push
pop
jns
mov
addr16
movb
lea
pop
xchg
pop
xor
sarl
movsl
dec
xchg
sub
pop
testb
outsl
daa
mov
lods
push
dec
cmp
push
lret
lahf
bound
or
xlat
jle
pop
pop
lea
ss
push
mov
lods
add
cld
lods
aad
push
stc
jne
dec
adc
mov
mull
dec
xor
jae
push
mov
cmp
mov
es
sub
cmpsb
mov
adc
cmp
pop
fidivl
int3
pop
xor
jno
sub
push
dec
std
lcall
stos
xor
adc
repz
add
out
jle
xchg
fbstp
fwait
rol
imul
xor
inc
cmp
das
and
sub
stos
iret
je
cmp
sub
testl
cmp
js
fisttpl
mov
xor
dec
push
lods
sti
pop
xlat
addr16
insl
pop
fwait
decb
ja
push
and
sub
cmp
fdiv
hlt
add
fistpll
and
sub
mov
mov
adc
pop
call
cmp
popf
movsb
and
mov
inc
push
fbld
jno
jg
clc
pop
xchg
xchg
xchg
jns
ja
sti
xchg
stc
lods
shlb
mov
pop
xchg
mov
cmp
xchg
mov
js
pop
mov
js
xor
or
stc
loop
jmp
clc
mov
in
xor
inc
xor
and
xor
sub
incl
mov
ror
negb
lock
aaa
insb
outsl
ret
push
pop
mov
ds
fcmovb
or
ss
jo
lock
or
dec
imul
ds
or
or
and
scas
dec
jmp
das
adc
sub
gs
lahf
jne
push
orb
test
sub
sbb
pop
xchg
cmp
popa
push
es
popa
std
or
jmp
test
pop
rorl
cmc
mov
cs
cltd
pop
fwait
jge
mov
outsb
mov
mov
ljmp
test
xchg
negl
call
data16
mov
add
inc
ret
lret
mov
insl
orb
fcmovnbe
cltd
aas
insl
cld
ret
test
aam
je
sarb
and
pop
fdivrp
inc
insl
dec
mov
push
sub
dec
test
push
and
mov
mov
lcall
xchg
mov
pop
mov
xchg
or
and
inc
push
mov
ret
cli
pop
xchg
addr16
dec
push
cmp
fsubrs
iret
jl
lret
push
mov
cmp
test
xor
iret
pop
rorb
push
pop
fwait
pop
adc
inc
scas
and
sarb
fcmovbe
decb
subl
mov
lds
add
lcall
scas
push
add
cmpb
xor
leave
repnz
movsl
mov
push
out
jmp
movsb
fidivs
aaa
loope
xchg
cmp
movsl
shrb
mov
test
xor
fiadds
and
mov
arpl
sbb
sub
imul
mov
dec
movsl
cwtl
push
add
and
xchg
leave
in
fs
push
xor
pop
shll
pop
enter
lcall
push
sub
outsb
and
cmpsl
out
push
out
xor
add
das
loop
or
scas
popf
xchg
sub
xchg
loop
repnz
jecxz
int3
mov
sub
jo
mov
mov
sbb
push
mov
into
cmp
push
test
add
cwtl
aad
dec
loopne
enter
sub
or
inc
fwait
add
mov
adc
push
mov
adc
adc
imul
mov
and
sub
jae
jno
xor
jp
jne
mov
pop
mov
shll
cmp
push
xor
mov
fiaddl
and
jae
ljmp
mov
movsb
pushf
push
lods
add
add
inc
aas
lds
pop
xor
pop
pop
lea
fdivrs
dec
dec
stos
icebp
adc
mov
sbb
mov
test
pop
cmpsb
cwtl
push
test
dec
pop
mov
imul
push
jle
and
outsb
insl
xchg
mov
mov
jmp
es
jle
scas
add
dec
push
sbb
stos
adc
cmc
push
xor
rcrb
mov
xchg
mov
inc
adc
div
add
test
cli
fdivrp
jmp
in
negb
or
xchg
or
in
cwtl
insb
cmpsb
pop
push
jge
sub
test
sbb
lret
jae
push
in
stc
pusha
shrb
jge
pop
or
fsubl
xchg
pusha
pop
daa
mov
xor
js
pop
out
das
jecxz
frstor
inc
ds
fnstcw
mov
ret
cmp
dec
push
cmp
mov
xor
xchg
scas
fcompl
or
xor
es
loope
push
add
test
sbb
pop
mov
sub
int3
stc
pop
mov
and
loopne
lret
dec
mov
dec
mov
mov
xchg
cwtl
push
inc
test
inc
scas
lock
cld
ficoms
xchg
xor
inc
sub
sahf
mov
jmp
dec
loope
jae
push
push
movsb
add
imulb
fnsave
loop
pop
push
add
xchg
pop
fstp
sbb
outsb
dec
cltd
cwtl
pop
loopne
je
fst
mov
mov
mull
pop
inc
or
cmpsb
arpl
lock
cmp
into
js
std
incl
cmp
out
stc
aas
jl
sub
test
movsl
cmpsl
pop
dec
les
xchg
aam
mov
jg
out
pusha
fildl
xor
and
mov
popf
rorl
mov
jg
jl
cmp
stos
xchg
test
fisttps
jg
or
sub
mov
mov
ffreep
jmp
out
clc
outsb
call
cwtl
je
or
in
jae
push
aaa
out
xor
inc
dec
ret
ret
addr16
popf
out
or
mov
lods
fcmovu
outsl
push
outsl
cs
imul
push
dec
mov
or
test
dec
mov
pop
or
mov
cmpsl
ds
sbb
push
loopne
jnp
mov
loope
pop
inc
mov
mov
stc
enter
js
jecxz
push
ljmp
mov
pop
cltd
sbb
mov
and
das
dec
xchg
std
fld
dec
fisubrl
js
mov
jno
mov
or
ret
xlat
and
cmp
push
mov
lock
ja
sahf
and
mov
gs
push
xchg
mov
xor
inc
xor
ret
or
lret
jmp
cmp
adc
movl
ficoml
mov
add
repnz
mov
xchg
xor
pop
sbb
xor
xchg
push
xchg
ljmp
fdivrl
mov
and
inc
lods
jge
cld
jp
push
dec
mov
jge
jecxz
xor
and
adc
jnp
dec
mov
pop
icebp
pop
lea
mov
sub
mov
inc
fwait
xlat
test
jecxz
sahf
dec
stos
es
fstpl
lret
arpl
outsb
rorl
pop
inc
cltd
ja
inc
cmpl
test
push
and
sub
and
aam
push
shlb
push
leave
dec
cmpsl
or
mov
inc
cmc
outsb
xchg
xchg
xor
mov
movsb
lock
dec
stos
push
iret
faddl
xor
repnz
lcall
push
push
popf
mov
in
es
push
icebp
loopne
aas
call
xor
add
pushf
clc
scas
mov
hlt
adc
stos
inc
mov
jle
pusha
sbb
push
push
jns
cmp
jp
int
jb
lahf
adc
outsb
inc
xchg
push
jle
jp
cwtl
push
inc
cmp
mov
inc
ret
ljmp
cmp
stos
push
fsubl
ud1
and
orb
lods
xchg
mov
add
loop
loop
imul
and
addr16
sarl
add
enter
dec
pop
or
and
ret
incb
xchg
aaa
adcb
jp
cmpsb
xchg
sub
fwait
push
test
test
icebp
lds
mov
bound
dec
jb
rcrb
xchg
add
lea
cmc
pushf
leave
jp
daa
stos
das
outsl
popf
sbb
test
dec
push
cmp
mov
xlat
adc
addr16
xchg
push
pop
daa
popf
imul
aas
aam
jge
bound
mov
cld
mov
fsubrp
inc
repnz
pop
mov
ljmp
lock
nop
mov
mov
jno
fbld
lahf
fucom
cmpsb
jbe
dec
adc
jmp
jo
adc
test
and
clc
xor
cmpsl
call
sub
mov
xchg
push
mov
iret
xor
mov
int3
jmp
out
adc
addl
popa
and
cmc
cwtl
mov
inc
cltd
sbb
dec
pop
sti
call
inc
movsb
addr16
enter
shrl
les
mov
clc
out
inc
call
ljmp
lea
xor
mov
mov
adc
decl
sub
cmp
jg
cmpsl
ret
mov
xor
sub
and
test
test
and
mov
shlb
dec
into
pushf
sub
loope
xor
adc
scas
mov
or
mov
pop
or
push
clc
out
gs
das
sahf
pop
push
in
jb
in
and
fcoms
pop
cmp
xchg
dec
hlt
xor
das
data16
iret
in
pop
mov
xor
inc
pop
mov
sbb
push
hlt
or
divl
mov
push
lret
mov
xchg
cmp
inc
xchg
adc
jnp
lret
test
sbb
jle
jmp
std
orl
mov
mov
jbe
jge
jmp
cwtl
outsb
mov
scas
cmc
dec
nop
std
push
add
ljmp
sub
mov
cmp
aad
out
inc
movsl
mov
dec
inc
cmp
pop
leave
test
imull
or
in
out
mov
negb
sbb
jmp
sub
xorb
cmp
mov
sti
cs
jp
in
xor
xlat
addr16
mov
pop
cmp
int3
repz
inc
cmp
fidivrl
inc
pop
mov
jns
mov
daa
inc
push
xor
jp
xchg
add
jp
mov
xchg
ja
sub
add
dec
fs
mov
loopne
out
add
iret
out
movsl
shl
dec
jle
cmc
mov
test
cwtl
sti
inc
or
sbb
ret
cltd
pusha
adc
scas
push
xchg
rclb
sub
lret
shrl
xchg
pop
xor
sub
and
stos
daa
jecxz
jne
sbb
cwtl
mov
cmp
scas
add
stc
xchg
test
nop
mov
push
std
sub
xchg
inc
mov
xchg
das
xchg
xchg
add
mov
repz
xor
mov
test
stos
call
mov
shll
lret
adc
dec
scas
jno
xor
xchg
lods
or
repz
push
push
sub
lahf
adc
shl
inc
or
xlat
adcb
icebp
xor
dec
adc
sbb
dec
sub
or
enter
ja
clc
dec
jle
das
mov
add
lret
push
lahf
sub
adc
inc
cmpsl
fldl
fldl
mov
cmpsl
decl
daa
xchg
int
xor
sub
leave
rcrb
add
xlat
dec
iret
dec
or
je
idivb
movsb
es
dec
cli
aam
jle
mov
sahf
stos
call
mov
cmc
pushf
repnz
xchg
or
ficompl
sbb
ss
adc
fidivrl
shl
xor
or
lods
shlb
mov
lea
decl
xchg
inc
sarl
push
in
shlb
and
out
jns
push
andl
imul
push
mov
nop
mov
jp
sub
aam
addr16
les
lret
pop
mov
push
mov
dec
ja
fistpll
xor
adc
imul
std
jb
loope
push
pop
scas
imul
jo
in
jg
orl
pop
movsl
inc
test
sbb
xchg
or
push
js
ret
cmp
sahf
mov
cwtl
mov
adc
jo
or
jl
push
xor
movsb
fsubp
filds
inc
and
cmp
imul
inc
je
cltd
push
std
js
cmc
pop
mov
xchg
and
repz
or
not
and
inc
popf
jmp
xlat
or
pop
cld
stc
mov
test
fstpl
cmp
push
inc
and
mov
jecxz
mov
stos
sbb
xchg
mov
sar
jae
lods
push
incb
inc
add
into
pop
out
lahf
scas
lcall
mov
ljmp
or
das
pop
fistl
loope
mov
push
or
push
addr16
cmpsb
dec
insl
mov
cmp
and
mov
xor
mov
or
movsl
out
mov
je
sbb
xchg
mov
adc
addr16
sbb
add
or
imul
shrl
push
mov
adc
mov
adc
in
mov
pop
or
es
call
aam
lahf
add
mov
fsubs
jge
push
mov
pop
mov
cmpsl
add
arpl
test
lds
inc
ljmp
lretw
loopne
fildl
cltd
call
push
data16
daa
hlt
xchg
jo
and
add
cmpsl
ret
out
adc
push
xorb
jmp
iret
stos
aas
sbb
test
push
push
jb
sbb
ficoml
movsl
in
scas
xor
fsubrl
mov
inc
or
insl
push
fisubs
xor
add
jle
mov
mov
dec
jge
cmc
test
sti
in
push
jnp
jge
add
adc
repnz
repnz
dec
and
xchg
popf
sti
ja
dec
jmp
cwtl
stos
jb
mov
inc
xor
mov
mov
or
lock
cmp
mov
push
add
les
dec
or
mov
mov
pop
xchg
pop
ret
outsb
insl
sbb
xchg
mov
xor
cmpsb
inc
inc
mov
popf
mov
inc
popf
jnp
xchg
and
and
cwtl
in
adc
int
cmp
pushf
dec
jl
ficompl
push
les
lahf
and
xor
repz
xlat
jp
and
adc
adc
jge
js
cmpsb
je
test
and
pop
and
sahf
mov
and
dec
push
shl
out
sub
inc
mov
jg
mov
lock
mov
push
sbb
jbe
mov
jo
popa
mov
stos
mov
inc
jae
test
orb
sti
orb
mov
scas
inc
and
mov
loopne
mov
mov
push
cmp
insb
cltd
roll
in
sub
pop
addr16
repnz
xchg
cmp
inc
jmp
je
lcall
mov
jge
idivb
es
pop
mov
repnz
adc
cwtl
xor
mov
dec
sub
cmp
mov
mov
dec
push
mov
push
adc
pop
icebp
das
mov
pusha
xor
push
outsb
mov
out
add
fsts
cmp
pusha
or
sub
mov
sub
sbb
mov
outsb
dec
cmc
push
orb
in
add
in
and
xlat
push
xlat
sarl
sahf
fisttpll
mov
add
insb
sbb
fadds
pop
push
jae
pop
daa
jg
jns
mov
orl
cs
xchg
adc
in
mov
pop
and
wrmsr
sbb
leave
add
jecxz
mov
pop
aaa
mov
sub
mov
mov
sbb
rcrb
adc
mov
movsb
adc
sarb
push
or
lds
fcompl
das
inc
add
out
divl
lds
mov
outsb
out
inc
xchg
inc
cmp
xchg
push
psllw
sub
fwait
pop
sbb
popl
lahf
and
repz
and
inc
fimull
filds
cmp
or
or
rcrl
push
repz
xchg
or
nop
repnz
outsl
sahf
hlt
loopne
int3
push
in
pusha
mov
fwait
js
imul
add
les
int3
and
sahf
stos
andl
leave
jbe
jmp
or
dec
stos
int
fst
push
sub
jl
add
sarb
mov
aam
pop
in
sbb
insl
jns
jle
rcrl
cs
sbb
dec
fnstcw
adc
push
adc
mov
mov
xchg
mov
jnp
pop
std
jne
mov
xchg
ljmp
pop
data16
mov
std
fldcw
pushf
dec
cmp
int
lea
das
repnz
pop
into
bnd
mov
repz
clc
mov
cwtl
rolb
and
hlt
cs
xchg
lods
je
mov
in
ja
ret
cwtl
aas
es
in
cltd
mov
insb
stos
je
cwtl
cmpsl
loopne
xor
or
xchg
mov
pop
je
outsb
out
xchg
xchg
lcall
das
xor
in
stos
call
dec
push
fsubrs
lcall
stos
scas
sub
push
imul
stc
leave
pop
push
out
xor
in
or
subb
sbb
mov
std
push
push
cmc
jecxz
shl
mov
mov
dec
jnp
lods
test
cmp
add
ffree
adcb
sbb
mov
and
sub
jge
aad
inc
daa
andb
mov
ds
push
icebp
hlt
outsl
push
dec
sti
imul
in
mov
jmp
lods
push
sbb
das
popa
pop
lods
cltd
cmpsl
and
push
arpl
add
sarl
iret
mov
stos
movhps
mov
ds
jbe
inc
roll
mov
pop
adc
dec
pop
cmp
aas
mov
rclb
dec
jge
rol
cmp
iret
mov
frstor
jge
js
lods
sub
fimuls
insb
gs
dec
in
cld
pop
cmp
stos
cmp
jne
cld
movsb
mov
push
dec
jne
lcall
mov
pop
shlb
jge
rol
les
mov
mov
cld
add
lcall
xlat
ja
insb
xchg
into
dec
jo
int
mov
out
lret
or
std
lock
sub
mov
pop
cmp
mov
sbb
imul
sti
xchg
sub
xor
adc
popa
lea
mov
lret
inc
test
pushf
sbb
or
and
jecxz
sub
adc
xor
loope
popf
int3
lahf
mov
incb
xlat
mov
insl
cmp
jge
xor
popf
ljmp
mov
and
leave
in
cli
sub
ds
cmc
lds
lcall
push
pop
inc
adc
push
hlt
dec
push
mov
mov
pushf
xchg
cwtl
les
shl
or
mov
daa
scas
dec
int3
xor
pop
inc
lods
inc
in
cmc
fisubrl
cli
test
mov
cwtl
or
and
shll
adc
or
dec
lea
fistpll
add
mov
dec
test
lahf
outsb
push
loope
mov
cmp
push
in
push
sbb
leave
testb
xor
jge
mov
cmp
ror
les
lods
ret
movsl
adc
cmpsb
lcall
loopne
call
add
and
inc
pop
lods
andnps
fdivrl
cmp
arpl
dec
scas
idiv
test
out
xor
pop
inc
das
rorb
lods
inc
leave
add
add
xor
jne,pt
mov
mov
push
dec
fldt
jp
xchg
push
gs
pop
pop
push
stos
outsb
inc
loop
pop
test
jl
mov
fdiv
in
add
jmp
stos
popf
jbe
inc
jne
sti
dec
inc
mov
out
or
sub
or
xchg
iret
or
sbb
sarb
mov
int3
andb
adc
rcl
test
lods
rcrb
insl
insb
xchg
lahf
fs
test
dec
inc
mov
jg
loop
xor
xor
stos
jmp
ljmp
nop
push
cld
jmp
adc
xor
shl
push
add
mov
cmp
loop
jle
repnz
sarb
shlb
aaa
push
scas
mov
jnp
mov
or
int3
xchg
jns
pop
jp
pop
xchg
mov
push
jle
cmp
test
sbb
push
adc
data16
dec
xchg
and
into
stc
pop
in
aam
push
cwtl
push
inc
test
enter
inc
mov
lret
and
sub
xchg
mov
sub
mov
int3
in
sbb
sbb
mov
xchg
inc
mov
add
addr16
sbb
adc
loopne
int3
push
mov
jge
outsl
in
sarl
cmp
ss
fucomi
or
pop
sbb
or
jns
outsl
mov
loop
test
xor
insl
xchg
stos
fs
fldt
mov
cmp
cmc
dec
pop
mov
pop
leave
ss
and
stc
jge
adc
cmc
add
insl
lea
add
add
sti
imull
fstpl
mov
adc
mov
lods
dec
clc
xchg
inc
int
repz
or
mov
jnp
out
mov
arpl
mov
mov
and
and
outsb
shlb
ror
pop
pop
sbb
pop
ret
mov
or
cmp
insl
push
sbb
jno
dec
fadd
popf
push
sarl
iret
or
ret
incl
test
shl
sub
shll
popa
adc
lea
outsl
imul
push
xor
xchg
sbb
xchg
cmpsb
enter
jae
cwtl
sub
sub
mov
stc
mov
cmpsb
repz
sub
push
imul
repnz
cmp
pop
inc
ss
sub
pop
push
fcomps
lock
rcrl
roll
cmp
mov
and
mov
push
insl
dec
lods
mov
sub
icebp
js
std
cmp
lahf
incl
test
sub
push
xchg
xchg
repz
imul
sub
pop
and
fistpl
outsl
cld
movsb
fiadds
push
test
les
add
call
pushf
inc
rclb
inc
fwait
or
fiadds
jbe
and
sbb
dec
imul
inc
sti
mov
xchg
cmp
push
icebp
data16
mov
bound
xchg
data16
dec
sbbl
fcmovu
data16
movsl
orl
outsb
cmpb
add
in
pop
test
nop
shl
sti
repnz
mov
stos
fwait
sub
lea
bound
xor
insb
sub
lahf
and
aam
adc
sbb
in
stc
add
or
scas
mov
loope
push
mov
mov
mov
in
cmp
ret
jns
lret
fnstsw
sbb
adc
cmc
inc
loop
pop
popf
dec
jns
xchg
aam
lds
xor
repz
movl
cmpsl
das
xor
imul
shll
hlt
jno
mov
ret
push
jnp
je
lock
int3
mov
enter
loope
fsubrl
dec
push
sub
cltd
jnp
sub
ja
mov
lcall
cmc
rorl
mov
sbb
stos
imul
clc
push
ret
jle
sahf
hlt
jle
dec
jns
push
inc
jmp
xor
xchg
popa
mov
inc
rcll
lret
jg
dec
sub
orb
leave
mov
imul
cmc
int3
out
shl
aas
push
dec
testb
adc
push
xchg
mov
out
gs
in
and
iret
mov
cmp
cmp
mov
shll
jle
repz
push
mov
or
xchg
leave
aam
loope
lcall
shlb
adc
mov
push
in
mov
in
sti
ret
imul
sbb
in
push
hlt
je
cld
in
jmp
xor
mov
jge
add
mov
ret
aas
sub
lret
push
mov
in
push
dec
mov
bt
insl
mov
sub
lods
fcoml
mov
or
sbb
cmp
fsubrl
addr16
repnz
iret
dec
sbbb
iret
js
icebp
pop
loopne
pushf
dec
out
lea
scas
mov
mov
pop
fs
repnz
std
clc
outsl
add
sbb
scas
push
imul
pop
and
push
or
repnz
mov
push
jg
adc
sbb
je
loop
xor
or
lret
push
stc
fldcw
rep
outsl
and
gs
imulb
in
hlt
xchg
dec
mov
stc
mov
push
mov
jp
imul
fstps
lret
scas
and
icebp
sbb
mov
mov
pop
push
vmread
cmp
jle
sub
push
loopne
push
aam
sarb
mov
hlt
cmp
add
bound
sbb
rcl
sbb
nop
sbb
push
scas
add
jns
aaa
mov
and
sbb
ret
stc
pop
addb
lods
inc
mov
and
aam
lea
int3
inc
cmpb
xchg
imul
add
stos
xor
fwait
or
bound
pushf
mov
das
mov
jmp
xchg
aam
jns
hlt
sub
pop
aam
scas
xchg
lods
jle
das
icebp
inc
mov
pusha
pop
mov
xchg
jbe
sbb
dec
shl
push
stos
dec
cwtl
mov
cli
add
mov
push
pusha
push
daa
xchg
rcrb
push
xlat
lcall
into
pushf
mov
xor
das
out
std
inc
outsb
mov
sbb
ja
or
xchg
mov
sbb
or
movsb
xchg
out
cld
sub
arpl
lea
sub
stos
rcl
mov
mov
mov
xchg
mov
lcall
mov
mov
jp
frstor
gs
mov
jnp
test
dec
lret
lahf
pushf
cmpsl
shr
push
inc
xchg
xchg
adc
sahf
leave
rcll
test
xlat
jg
daa
push
push
mov
dec
shr
movsb
jo
dec
xor
jo
cli
sahf
or
inc
jg
sbb
outsb
aas
dec
cmp
fistps
pop
xchg
mov
push
jno
clc
shr
mov
jge
jge
call
push
push
dec
or
lret
lock
ds
mov
mov
jb
pop
sti
outsl
aaa
push
pop
aam
xchg
mov
xchg
push
repnz
sub
scas
scas
xchg
jo
jmp
sub
rorl
incl
jbe
dec
xor
je
and
adc
stos
scas
pushf
mov
push
adc
test
out
cltd
inc
pop
pop
push
mov
push
mov
rorl
aad
jecxz
pop
aam
imul
and
jg
fdivrs
pop
loope
imul
sub
sti
add
xchg
mov
dec
and
adc
call
test
xor
mov
fbstp
int3
mov
cmovno
sub
aam
and
bnd
clc
mov
int3
adc
inc
cmp
adc
ja
or
insl
xchg
fisubrl
add
shl
std
cmp
pop
pop
mov
fcmovnu
dec
aad
or
sub
lret
and
inc
dec
cmp
cld
or
or
imul
push
iret
test
nop
mov
jb
clc
xchg
out
je
stos
mov
jo
adc
fdivrs
sarl
rorl
out
aas
push
push
mov
inc
nop
inc
out
and
jne
dec
push
leave
lods
jmp
and
aad
in
jbe
push
loopne
sbb
mov
add
outsb
aad
sbb
in
mov
mov
insb
dec
inc
adc
lods
pop
cmc
add
sbb
dec
mov
jg
mov
les
ret
scas
xchg
loopne
es
cwtl
mov
aas
out
dec
loopne
adc
arpl
sub
and
sbb
lahf
xchg
std
sub
cmp
cmp
mov
fwait
hlt
xor
lcall
inc
sbbl
mov
push
xchg
xchg
adc
loopne
xchg
test
adc
add
out
divl
xor
mov
sbb
adc
pop
sbbl
pusha
aaa
pop
stos
scas
test
fisubrl
jnp
dec
cmp
and
sbb
out
xor
aam
fs
adc
scas
mov
mov
stos
lock
inc
pop
jp
xchg
cmp
repnz
push
stos
fcom
aam
xchg
push
jae
scas
pusha
push
push
out
xchg
dec
mov
mov
xor
cmpsb
popf
xchg
ret
popa
cwtl
sub
push
mov
adc
popf
subb
push
ljmp
rep
push
or
cld
push
leave
cli
mov
pop
sbb
jno
lahf
xor
outsl
shr
shlb
test
fimull
sar
push
mov
lock
pop
dec
or
lock
shrl
xchg
js
xchg
loop
xchg
inc
adc
push
push
mov
daa
xchg
jbe
popf
out
jecxz
faddl
testb
lods
push
jp
cmp
add
sbb
sti
cmp
jae
and
lock
push
push
in
mov
arpl
mov
jmp
sub
add
push
pop
ret
repz
sahf
mov
aad
test
test
jge
lea
aaa
and
in
push
test
push
sub
push
jnp
ljmp
jl
addr16
push
movsb
orb
push
mov
jae
or
cmp
adcl
imul
push
push
aad
rorb
adc
inc
cmpsl
imul
shll
jp
jl
sbb
sub
fidivrs
mov
jge
cmpb
es
jno
mov
pop
push
inc
out
dec
pop
imul
scas
scas
pop
not
push
cmpsl
das
ljmp
das
xor
jo
and
mov
cltd
add
pop
and
fwait
mov
imul
mov
fidivs
leave
and
mov
fdivrs
or
jecxz
scas
insb
imul
and
xchg
ss
pushf
mov
lret
xor
fs
loopne
dec
mov
daa
pop
adcl
fisttps
test
jb
push
mov
cmp
pop
push
fistpl
xor
cmp
jb
push
inc
and
add
fsubl
and
rcrl
shll
mov
jbe
pusha
add
inc
popa
push
iret
aaa
push
mov
loopne
mov
push
imul
shlb
push
sub
mov
jnp
and
or
dec
test
or
sub
cmpsb
call
add
mov
test
adcl
add
mov
out
mov
and
test
int
inc
repz
and
sbb
and
ret
pop
pop
mov
cltd
push
sbb
jl
in
dec
add
pushl
push
xchg
pop
mov
addb
aas
mov
cmp
in
or
xchg
cltd
or
arpl
mov
dec
or
xchg
into
movsl
jnp
xchg
add
test
dec
mov
popa
sbbb
push
pop
push
sahf
push
shl
sahf
stos
in
popa
dec
jb
mov
jae
xor
inc
pop
mov
lea
and
push
je
ret
stc
jg
cld
jo
iret
ds
push
enter
movsb
fsts
in
dec
jmp
mov
ret
add
push
jl
jl
jne
loopne
repnz
cs
in
es
mov
add
adcl
int3
cmpsb
jg
ljmp
sbb
mov
dec
lods
mov
inc
loop
mov
sub
loop
and
fldcw
loop
fbld
stos
jmp
sub
test
outsl
inc
dec
filds
add
jo
scas
mov
gs
test
in
in
shll
mov
push
lods
stc
loope
push
lock
mov
dec
sbb
pusha
pop
icebp
dec
sbb
lret
xchg
ret
jle
sbb
dec
enter
mov
cmc
cmp
rol
mov
push
sbb
fnstsw
mov
les
lahf
pop
int
test
repz
pop
rolb
xor
xchg
pop
outsl
enter
lods
mov
clc
outsb
dec
test
sub
fimuls
mov
lret
inc
mov
std
cmpb
add
or
decl
jmp
inc
mov
mov
push
pop
leave
inc
fxtract
mov
xor
mov
fcompl
loope
popa
adc
rcrb
hlt
insl
sbb
jmp
and
fcomps
ret
cmpsl
hlt
push
ss
mov
test
sub
xchg
movsb
sahf
repnz
loop
call
or
stos
mov
push
es
ror
xor
dec
sbb
pop
enter
jle
cltd
pop
xchg
into
nop
outsb
cmc
sarb
filds
clc
orl
in
fcmovnbe
pop
sbb
mov
pop
xchg
push
jns
xchg
inc
jp
mov
scas
xchg
faddl
out
repz
rorb
call
sbb
mov
pushf
add
xlat
add
add
pop
mov
or
mov
lahf
gs
fistpll
adc
pop
imul
in
test
aaa
xor
xchg
xchg
inc
hlt
rcll
out
js
pushf
js
adc
cmp
sbb
push
or
lahf
leave
sbb
sahf
movsl
inc
jb
inc
cmp
jae
push
dec
or
pop
sub
ljmp
adc
lods
mov
pop
sub
dec
ret
aam
xchg
jae
push
and
jp
add
xor
adc
jmp
in
dec
fucomp
iret
stos
popa
and
lods
sbb
push
and
outsb
pop
mov
into
lcall
sbb
fldt
push
lods
lcall
adc
pop
aas
outsb
and
push
cmc
or
scas
push
into
inc
bound
cmpsl
cmp
out
pop
cmpsl
cltd
pop
pop
xchg
pop
inc
fwait
loopne
dec
lea
jl
adc
jno
popa
sbb
enter
add
xlat
cmpsl
js
cs
mov
mov
push
or
loop
sbb
les
dec
sbb
cld
add
lret
or
loop
addl
incb
pop
pop
inc
out
push
xchg
pop
mov
mov
xor
out
inc
lock
sub
in
data16
adc
cmp
outsl
testl
jbe
push
lock
sahf
test
daa
das
cmpl
pop
push
and
adc
aam
cwtl
push
or
add
and
in
and
cmp
call
rcr
testb
pop
aaa
push
std
into
mov
adc
cli
fwait
push
cmp
inc
pop
test
dec
pop
dec
ds
adcl
dec
loop
and
push
adc
add
ss
dec
bound
es
inc
adc
pushf
push
std
mov
push
shll
mov
insb
mov
inc
xchg
pop
pop
sbbl
mov
imul
sbb
sbb
lods
pop
les
sbb
outsl
leave
or
nop
xor
icebp
in
pop
imul
jle
pop
repnz
in
repz
or
sbb
dec
test
cmp
push
add
movsl
test
leave
adc
test
mov
cmp
sub
mov
psraw
dec
lds
mov
add
pop
xor
pop
sahf
add
stos
outsl
push
out
push
dec
mov
jge
pop
sub
leave
scas
push
adc
push
sbb
stos
cmp
ljmp
mov
inc
xchg
mov
add
cmc
pop
mov
mov
negb
adc
push
sub
adc
fstp
out
js
stos
push
and
popf
cmp
jmp
xor
cmp
lret
adc
insb
mov
sub
call
das
add
mov
shl
seto
jae
sbb
pushf
dec
lock
repz
dec
mov
lods
xchg
jns
daa
je
lock
iret
xor
sarl
dec
int3
jae
jg
subl
mov
jecxz
mov
mov
adc
mov
pop
or
dec
rcll
and
insb
cmp
stc
loop
shll
call
push
or
inc
arpl
and
movsb
insb
push
orl
les
stos
out
or
jmp
cmpsb
mov
jle
mov
imul
das
xchg
mov
jp
mov
ds
lods
push
fldln2
aad
call
sbb
adc
mov
fdiv
mov
js
aad
test
sub
ljmp
pavgb
mov
cmpsl
rolb
push
bound
je
loope
cmp
cmp
cmpsl
aad
xor
outsl
out
lds
outsb
ljmp
mov
movsl
dec
aam
pushf
sbb
mov
stos
dec
imul
in
jb
mov
fwait
shll
push
ss
out
leave
and
ss
mov
loopne
mov
ja
mov
add
or
imul
das
mov
mov
xor
lods
int
mul
mov
test
aam
mov
jp
mov
mov
xor
or
jns
jae
out
pusha
xor
mov
xchg
popa
mov
push
add
cltd
jno
pop
cmp
call
sbbl
mov
cmp
and
pop
shrb
add
pop
bound
pop
insl
pop
aam
pop
loope
insl
popf
add
mov
mov
add
jo
xchg
push
jge
jo
mov
popl
fmull
lea
inc
es
push
imul
sbb
popf
jne
idivb
ja
aaa
xchg
pop
movsb
stc
xor
xor
xchg
mov
psubq
jecxz
and
jg
inc
fsubrl
movsl
inc
popa
jmp
fimull
je
lahf
scas
dec
push
lcall
jmp
mov
cmp
and
movsl
mov
pop
nop
loopne
mov
pop
int3
xor
mov
aaa
mov
cmc
jl
lods
adc
andl
jp
in
xor
mov
cmp
adc
pop
jbe
mov
scas
push
popf
inc
icebp
xchg
fadds
sbb
ss
std
lea
ret
inc
test
loope
mov
mov
mov
add
inc
fnstcw
flds
cli
and
add
bnd
sbb
inc
mov
test
pop
jle
fwait
inc
repz
mov
lret
out
les
pop
out
push
icebp
popa
inc
sbb
sub
add
imul
adc
cmp
mov
mov
lds
sub
cmc
pop
mov
repz
test
dec
mov
adc
out
lods
sbb
lahf
or
cmp
inc
scas
sub
mov
jb
cmp
cmp
mov
xchg
nop
sub
ljmp
mov
jmp
adc
xchg
sbb
scas
and
xchg
cmc
inc
and
push
dec
inc
lods
and
lea
push
iret
add
dec
push
in
jbe
mov
and
xlat
or
addr16
mov
push
sbb
jne
xchg
xchg
jle
mov
mov
mov
jp
cltd
sub
push
push
xchg
jo
gs
cs
outsb
jmp
xchg
push
lods
dec
add
pushf
xchg
insb
ljmp
xchg
mov
jo
mov
sub
push
jmp
into
loop
hlt
push
push
xlat
xor
xchg
lock
pop
push
cmp
pop
in
xchg
incb
mov
les
jge
aas
mov
or
jp
adc
mov
and
jle
sub
sbb
int3
and
sarb
jnp
fs
cs
cmp
test
sarl
cs
sub
iret
xor
scas
adc
mov
sti
xor
das
je
jae
xor
adc
inc
cmp
mov
jbe
sbb
aas
jecxz
mov
add
jno
inc
scas
loopne
imul
mov
inc
cmp
aam
orb
add
fdivl
dec
pop
lods
in
mov
jge
leave
int
cmp
data16
dec
pop
scas
addb
addl
cmp
sub
push
jnp
jno
insl
aas
enter
mov
pop
or
pop
pop
or
dec
clc
pop
out
in
jo
test
jns
or
push
and
xor
mov
inc
fwait
stos
cmp
sbb
and
shlb
icebp
cmpsb
movsl
adc
sub
into
cli
adc
imul
imul
scas
mov
aam
or
mov
rcrb
test
xor
cmpb
ret
jo
mov
cmp
jle
adc
adc
or
testb
imul
imul
lea
cmp
insl
xlat
pop
es
js
leave
incb
loop
movsl
scas
jno
inc
push
fcoml
add
rorl
in
ret
inc
aam
inc
push
insb
add
loopne
call
cmp
push
inc
or
fcmove
or
mov
fdivs
imul
clc
mov
mov
or
xchg
jbe
lcall
mov
popa
lret
clc
imulb
push
idiv
mov
or
mov
jecxz
arpl
int3
pop
fistl
fstps
mov
scas
jmp
dec
scas
mov
cmpsl
pushf
mov
mov
fdivrl
ss
cmp
xchg
insl
int3
dec
push
and
adc
pop
dec
push
or
aas
jns
flds
fisubrs
xor
btr
mov
loop
inc
mov
imul
xorb
test
mov
cmpsl
lds
jnp
scas
push
daa
ret
mulb
addb
shr
pop
jo
add
dec
loop
shlb
adcl
iret
scas
rolb
mov
sub
sbb
xchg
adc
mov
sbb
iret
inc
std
inc
jge
dec
out
or
out
inc
lcall
jne
cmp
dec
sbb
dec
jmp
adc
push
add
fs
std
cmpsl
in
lret
push
cmpsb
push
nop
mov
pop
cmpsl
xor
stos
and
jp
aad
rorb
xchg
or
mov
sbb
adc
roll
loope
pop
push
mov
scas
ret
scas
cld
je
jmp
rclb
and
imul
mov
pop
or
xchg
insl
dec
test
sub
sub
xor
xchg
mov
inc
xchg
outsb
sub
sbb
xchg
into
cwtl
jl
pop
gs
add
xor
in
lcall
shrb
in
rcl
stos
xchg
lock
pop
test
mov
jns
sub
loopne
mov
cmc
inc
or
xchg
cwtl
mov
adc
or
fstpl
cwtl
nop
cltd
andb
pop
aam
fdivrp
cmpsl
cs
xor
push
jbe
dec
dec
adc
shlb
add
dec
add
pop
nop
push
adcl
or
loope
hlt
fisubrl
sahf
stos
add
xor
adcl
imul
push
add
add
sarl
cmpsl
inc
sub
add
push
sbb
loopne
cmpsb
jmp
push
push
sbb
cltd
repz
nop
add
into
xchg
and
cwtl
stos
hlt
lcall
or
inc
push
jge
pop
mov
jg
jecxz
lds
pop
aaa
addr16
pop
mov
dec
outsb
xchg
fldenv
push
lock
mov
sub
in
inc
and
idiv
push
les
xor
test
dec
jae
fdivs
jbe
pop
mov
or
insb
or
jnp
xchg
pop
sahf
dec
stos
sahf
aaa
div
repz
fs
xchg
xlat
jmp
mov
aam
sbb
inc
aaa
pop
imul
push
xor
inc
cmpsl
out
sbb
dec
dec
cmc
bound
hlt
mov
mov
sbb
imul
inc
pop
aas
insl
inc
test
inc
cmp
sti
push
mov
addb
ret
sub
pop
mov
mov
adc
out
sub
mov
add
popf
xor
xor
repnz
lods
int3
mov
mov
loope
push
es
fsubp
icebp
jp
ja
out
jae
mov
adc
mov
jg
mov
pop
jb
mov
idivb
imul
shr
fnstenv
push
mov
mov
ficomps
scas
stos
push
stc
sahf
inc
stos
jg,pt
ljmp
adcb
pusha
lock
fwait
loopne
mov
mov
push
out
icebp
scas
sub
ljmp
cmp
outsl
mov
popf
xchg
dec
and
shlb
push
jne
cmp
mov
les
mov
rcrb
sub
lock
inc
pop
or
fwait
int
push
push
jecxz
in
fstpt
ds
jmp
notl
mov
add
push
pop
sbb
daa
push
test
in
inc
adc
inc
fadds
test
xor
pushf
sarb
mov
inc
or
mov
jge
add
ss
cwtl
xchg
lods
push
and
out
jp
mov
sbb
sub
mov
js
shlb
inc
fsubrs
push
sbb
mov
aam
or
ds
hlt
and
sub
lds
cmp
add
jns
xchg
iret
js
jae
inc
jno
adc
aam
push
mov
xchg
xchg
mov
cmp
pop
inc
push
repz
push
pusha
lods
out
inc
mov
jecxz
clc
xor
sub
jp
scas
sbb
enter
mov
out
fadds
sub
psllw
jmp
cld
pop
and
outsl
js
mov
aas
sahf
imulb
js
and
fcmovnu
adc
lods
ljmp
xchg
push
repz
mov
or
ja
rcr
jmp
iret
jae
pop
sbb
loopne
lret
jbe
outsl
lcall
in
inc
mov
addr16
inc
xlat
mov
jp
or
negb
cmp
mov
dec
in
xor
or
push
neg
cmpsl
xor
push
int
add
repnz
mov
int3
pusha
push
in
sub
int
mov
sub
xchg
sub
xor
pop
je
jne
cs
push
mov
or
ror
mov
push
ds
fs
ljmp
les
mov
shll
je
call
sbb
pop
repnz
inc
outsb
aaa
idiv
mov
cmp
sbb
pop
push
cmc
mov
repz
cmp
mov
sbb
lock
or
das
and
xchg
insb
leave
mov
jp
scas
pusha
cmp
dec
push
test
in
add
lret
sbb
sbb
inc
movsl
aad
inc
mov
aas
dec
nop
pop
inc
fdivl
loopne
fsubrs
sahf
and
sbb
test
rcrl
in
aaa
push
xchg
scas
addr16
dec
mov
ret
jmp
rclb
ss
xchg
aam
jp
cli
pusha
mov
fbld
orb
in
in
lcall
iret
mov
ss
jecxz
dec
cmpsb
cmp
sbb
imul
dec
jbe
inc
aas
jae
repz
call
loop
cmp
lock
jns
lret
sahf
cmpsb
push
sbb
ss
xor
jg
push
jnp
loopne
and
cmp
outsl
jae
les
sub
into
and
add
cmp
pop
pop
jns
mulb
test
mov
xchg
or
jnp
mov
arpl
and
fiaddl
test
test
push
push
sbb
mov
cli
mov
mov
or
out
test
and
in
aas
ljmp
ja
mov
sbb
add
ds
pop
nop
in
inc
or
popa
xchg
outsl
cmc
cmpsb
enter
pop
scas
cmp
cmp
mov
xor
std
dec
mov
ror
inc
scas
in
push
aas
lock
sbbl
xlat
test
aas
and
loope
hlt
bound
bound
in
inc
lds
cmp
mov
xor
mov
jmp
mov
mov
mov
dec
fs
call
in
add
fdivl
lds
inc
lret
add
push
cmpsl
mov
pop
ret
push
ja
pop
and
loope
mov
xchg
dec
aas
jmp
add
sbb
add
adc
out
or
pop
ja
stos
cmp
jno
pop
xchg
stos
inc
outsb
mov
outsb
scas
lcall
xor
xchg
sahf
xor
nop
push
mov
into
repz
in
outsl
or
es
pop
push
es
fidivrl
xor
ret
fsubs
pop
mov
das
in
hlt
icebp
ss
add
adc
push
stos
push
cmp
daa
jne
cmc
ja
js
aas
dec
icebp
inc
mov
loope
in
and
and
mov
cwtl
jecxz
pop
test
fmulp
addl
sub
mov
add
out
outsl
leave
repz
das
inc
push
fldcw
cwtl
cmpb
inc
neg
sbbl
sbb
leave
and
dec
das
add
inc
mov
push
je
mov
jge
and
fcomp
out
mov
hlt
pop
mov
xchg
or
sub
lcall
outsl
lods
shr
ret
data16
pop
adc
xor
inc
pusha
push
rcrb
repz
sub
push
imul
jae
jp
adc
or
mov
dec
cmp
cmc
jge
sub
pop
lahf
or
mov
cmp
pop
pop
stc
sub
adc
jae
scas
and
in
sahf
sarb
mov
sbb
adc
sbb
dec
add
dec
lods
push
sbb
add
jge
pop
cwtl
fmull
test
sub
jnp
loopne
adc
les
fistpl
adc
mov
cmp
xor
or
mov
lods
cmpsb
rorl
mov
sub
rclb
mov
sti
mov
cmpsb
cmpb
enter
fistps
call
in
stos
adc
test
and
sbb
ds
fwait
xchg
arpl
and
pop
cmp
lds
mov
jmp
pop
jne
fwait
pop
jae
shll
rorb
adc
out
jne
mov
jp
sti
mov
ja
dec
inc
jae
mov
sub
je
push
mov
imul
mov
jecxz
inc
pop
test
push
scas
dec
add
add
cmp
mov
imul
mov
pop
int3
mov
sbb
jp
and
add
js
dec
pusha
pop
adcl
cs
add
mov
jo
cmp
pushf
mov
shr
xor
push
scas
add
popf
mov
fildll
fiaddl
outsb
jbe
divl
cmpsb
jns
lea
cmpsl
in
dec
dec
mov
sti
lcall
roll
sbb
mov
push
leave
stos
das
loope
rcrb
orb
push
pop
cmp
imul
addl
pop
adc
mov
lods
imul
pop
jge
jle
lahf
xor
repz
inc
lea
xor
out
pop
cld
jp
xor
or
das
pop
adc
test
out
mov
xchg
add
mov
fdivl
cmc
gs
or
loope
out
add
jge
mov
rcrb
and
or
xchg
icebp
push
ss
mov
mov
mov
push
mov
ret
mov
mov
and
pop
xor
lods
shrb
pushf
xchg
out
shlb
bound
imul
jge
pusha
subl
inc
repnz
and
cld
pop
call
popa
xchg
adc
xor
aad
add
add
jge
xchg
das
sbb
push
mov
add
jb
push
aam
dec
outsl
cli
pop
xor
cmp
push
lret
idivb
jbe
cmpsb
lret
fstps
jg
loope
insb
cwtl
xchg
pop
push
das
mov
inc
mov
std
iret
test
stc
adc
andb
icebp
jmp
pop
mov
lds
out
jb
or
mov
pushf
jp
and
sub
outsl
fwait
adc
das
arpl
adc
jb
sbb
roll
out
test
outsl
push
cmp
stos
pop
sbb
mov
fwait
xchg
xor
or
cmp
sbb
mov
xchg
cmp
add
rolb
sbb
ds
jbe
lahf
pusha
test
add
push
aas
ss
add
jle
cmp
das
cmc
push
adc
inc
sub
sti
and
clc
pop
or
mov
ja
sub
movsb
loopne
pop
jnp
nop
xchg
pop
jbe
sub
hlt
xor
inc
push
cmpsb
fidivrs
outsl
aaa
push
popf
cmp
ss
sub
xchg
and
imul
sbb
cmp
js
movb
mov
push
outsb
xchg
pop
cmpb
xchg
or
xchg
jbe
fwait
adc
les
lret
cwtl
adc
lods
sbbb
inc
mov
in
popf
stc
inc
mov
add
in
mov
fs
aas
cmpsb
cmpsb
inc
movsl
shl
iret
js
imul
mov
push
das
or
adc
xchg
por
stos
int
and
aaa
mov
push
mov
sub
and
pop
stos
repz
sub
or
xor
pop
xchg
mov
push
lods
pop
jne
and
xor
pop
int
arpl
lock
and
out
add
add
clc
and
jle
or
int
push
xchg
jbe
sub
lcall
int
dec
push
sub
movsb
nop
sbb
cli
adcb
fwait
cltd
sub
adcb
jnp
test
xchg
mov
sbbl
jbe
or
daa
push
xor
jnp
and
xchg
sbb
ja
dec
in
add
imul
jmp
rolb
pop
je
outsb
dec
push
mov
cltd
test
pop
mov
add
pop
xchg
jbe
ret
int
mov
fwait
pushl
cld
cmp
xchg
cmpsb
aad
lcall
dec
stos
pop
dec
movd
xor
sbb
fistl
in
adc
shrb
xor
arpl
and
into
mov
repz
movsb
xchg
shll
test
sub
or
adc
xor
jge
subl
or
int
push
pop
xchg
cmpsb
cmpsb
vpminsw
out
or
into
icebp
pop
mov
pop
imul
push
inc
mov
dec
scas
mov
push
cmc
aaa
pusha
push
fiadds
pop
pop
mov
and
sub
adc
shll
dec
add
mov
xchg
mov
cltd
outsl
adc
push
and
lret
jae
scas
jmp
add
adc
jg
lds
scas
stos
lcall
and
in
cmp
add
cld
and
out
xchg
loop
jae
cld
push
xlat
pop
loopne
rorb
pop
inc
bnd
cmc
test
inc
scas
gs
hlt
imul
in
mov
aad
jbe
cmp
test
les
adc
lret
clc
mov
add
mov
cli
ret
or
inc
outsb
bound
in
cmp
shll
movsl
fsubp
stc
into
lahf
fxch
movsl
jmp
pop
adc
incl
outsb
sarl
sbbb
cmp
adc
fcmovnb
iret
icebp
mov
scas
jmp
dec
ret
ds
cmp
and
pop
loop
fcmovb
xlat
mov
push
jecxz
jae
and
cmpsl
adc
mov
mulb
or
std
cmpsb
movsb
mov
jmp
leave
movsb
mov
fs
js
mov
adc
pop
divl
xchg
lea
mov
loopne
xor
lods
cmpsl
xor
mov
mov
sbb
mov
xchg
dec
test
cmpsb
xor
mov
in
leave
add
xor
adc
xlat
cwtl
push
mov
push
jecxz
std
stc
or
jb
adc
push
mov
addb
mov
xor
in
sub
add
xchg
pop
inc
mov
mov
dec
ljmp
pop
or
mov
insl
inc
mov
mov
mov
mov
sbb
jne
sub
xchg
mov
fsubrs
inc
mov
inc
int
pop
pop
add
lds
jge
ja
stos
mov
or
and
out
mov
mov
lods
lcall
cmp
sar
fistl
outsl
pop
mov
cmp
xor
mov
xchg
shl
cmp
sahf
push
icebp
push
mov
pop
pop
mov
pop
dec
mov
test
xchg
repnz
subl
jns
rolb
pushf
mov
cltd
test
jecxz
loope
cmp
cwtl
outsl
jnp
hlt
sub
mov
sub
sub
dec
cli
insl
pop
mov
sete
pop
stos
push
or
push
outsl
les
addr16
mov
ret
out
sbb
add
mov
pop
shll
fs
dec
xor
dec
push
fidivs
bsf
aas
pop
jmp
dec
sysenter
pop
push
test
nop
dec
leave
mov
jns
lds
mov
inc
xchg
pushf
movsb
lea
pop
ret
iret
aad
pop
in
movb
mov
decl
stc
sub
add
inc
pusha
jg
push
insl
lods
lahf
popa
mov
inc
sbb
cli
dec
mov
clc
into
add
push
movsl
call
popf
pop
dec
xor
nop
test
sbb
push
mov
sub
jne
out
clc
cmp
mov
and
pop
cs
call
and
xchg
dec
sbb
inc
js
inc
dec
sti
pop
or
inc
out
pop
adc
adc
mov
adc
ja
xor
pusha
mov
dec
push
dec
ljmp
movsl
xor
jo
pop
dec
or
jb
sbb
mov
inc
cmp
push
lods
fisubrs
adc
mov
aam
mov
out
dec
xchg
pop
sbb
pop
jmp
pop
sarl
mov
test
test
aas
fistpll
pop
or
xchg
mov
shll
jns
mov
and
pushf
lods
imul
cmp
pop
mov
pop
or
push
ficomps
jmp
dec
sub
push
xlat
scas
nop
andb
adc
lcall
dec
fsubrl
cmp
incl
rcrb
leave
mov
mov
inc
and
insb
ret
push
mov
jno
mov
scas
push
movsl
lret
ja,pt
in
mov
ret
rclb
mov
scas
cmpsl
jg
cmp
mov
jecxz
and
test
in
adc
jmp
jmp
jg
add
or
outsl
fiaddl
mov
mov
and
lea
addr16
movsl
sub
jle
test
mov
test
push
or
stos
and
add
or
jno
cwtl
sbb
jle
sbb
test
or
and
push
out
jae
fs
or
repz
pop
icebp
outsl
pop
das
add
mov
sbb
sbb
xor
clc
repz
test
or
cmp
fwait
test
jbe
ffreep
sahf
jg
mov
inc
dec
push
push
and
jo
sbb
mov
addb
je
stc
push
add
or
mov
std
xchg
mov
inc
inc
into
into
in
ljmp
ljmp
out
mov
cmc
xchg
push
lods
pop
ret
dec
jnp
nop
test
sub
fstps
pop
movsl
leave
int
js
in
adc
jle
xchg
sbb
jae
pop
add
sti
enter
mov
lods
adc
pop
xlat
out
xchg
mov
xlat
jle
popf
pop
clc
mov
mov
enter
fsubrl
dec
idivb
rol
and
sarl
bnd
jp
bound
jne
xchg
lods
jno
cmp
inc
out
movsl
push
cs
data16
das
push
add
cmp
mov
add
ret
sbb
cmp
ds
fildl
add
in
push
pop
icebp
loopne
stos
and
jae
imul
push
dec
sbb
sub
hlt
pop
pop
pop
xchg
dec
mov
mov
adc
cwtl
hlt
das
rcr
cld
stos
cmp
jecxz
movsb
add
cltd
or
hlt
dec
xchg
call
enter
outsl
cmp
xor
push
rcll
pusha
pop
insl
add
jmp
iret
pop
mov
call
and
icebp
adc
fisttps
jns
xor
repz
and
stos
mov
push
cltd
pushl
movsb
sahf
xchg
insb
push
outsl
int
mov
dec
aas
dec
push
lods
jmp
sub
push
imul
sahf
and
inc
lret
xor
mov
pusha
lods
ja
test
add
push
add
data16
mov
outsl
mov
insl
xor
xor
out
cld
and
std
ret
bound
popf
aam
and
mov
pop
mov
dec
rorl
fwait
sub
mov
cmpl
xchg
and
or
lret
mov
lcall
rclb
out
aam
test
xor
push
mull
add
inc
mov
out
xchg
pop
cmp
mov
mov
jge
out
les
fnstcw
daa
dec
stos
xchg
cld
popa
fstpt
test
movsb
cltd
insb
push
stos
stc
mov
in
aad
or
popf
movsb
mov
rclb
mov
add
sbb
test
cmp
jg
cltd
clc
add
adc
sarl
push
jp
pop
jbe
repnz
inc
ret
pop
sbbl
and
push
movsb
lret
fsubrp
fistpl
lret
int3
in
jmp
lea
fcoml
add
out
xchg
in
fs
bound
scas
je
out
dec
mov
call
push
cmpsb
test
jbe
stos
mov
or
inc
ljmp
sbb
mov
lahf
test
fnstsw
sbb
gs
fidivs
mov
mov
dec
adc
clc
mov
addr16
lea
imul
shr
push
insl
ja
dec
mov
jae
pop
jno
xchg
push
int
xor
bnd
das
xor
lahf
sar
jp
push
adc
mov
cli
cmovbe
test
mov
outsb
fisubl
mov
mov
fsubl
jnp
popf
and
stc
dec
fstcw
in
mov
and
push
getsec
popf
and
and
fistl
sahf
shll
pop
pusha
and
loopne
fnsave
cmp
cs
jns
loope
xchg
sbb
test
lock
stos
pop
les
xlat
sarl
jb
cmp
dec
addl
jb
outsl
mov
add
dec
lods
inc
mov
adc
jge
xor
mov
mov
into
add
pop
push
pushl
inc
dec
sbb
test
xor
pop
sbbb
jle
xchg
das
mov
sbb
stos
call
test
test
fnstenv
outsb
fidivl
shll
mov
push
stos
popa
pop
mov
add
dec
mov
test
test
sub
int3
xchg
out
loopne
pop
mov
sbbl
cmpsw
aam
sub
repnz
push
shl
pop
dec
loop
xchg
mov
and
dec
in
jp
xor
and
fcmovbe
fists
inc
mov
mov
jle
dec
jle
mov
cltd
cmpsl
jno
and
sahf
dec
xorl
bound
jne
popf
cmp
cmpsb
push
pop
cld
cmpsb
outsb
pop
dec
push
dec
es
lret
inc
push
add
bound
popa
fimuls
jns
jo
pop
cmp
jg
icebp
sbb
inc
bound
or
jl
pop
repz
dec
xlat
fldcw
adc
rcll
dec
fsts
cmpsl
xlat
scas
repnz
cmp
js
cltd
fbstp
mov
stos
jne
idivl
adcb
and
dec
clc
sbb
mov
jmp
rorb
lods
pop
cli
int
pop
inc
inc
loope
add
fists
inc
test
out
mov
push
fiaddl
imul
push
lret
aam
fbld
idivb
cld
out
mov
and
into
push
cmp
rcrl
cmpsl
push
jo
out
scas
mov
popl
and
push
imul
or
push
xor
dec
es
lret
adc
mov
lahf
pop
adc
lea
add
adc
sub
jmp
add
out
dec
xor
es
push
mov
cmpsb
inc
je
aam
call
lahf
push
mov
ror
pop
int3
pop
mov
sbb
xchg
mov
push
cmp
mov
arpl
cmp
push
push
ds
pop
sbb
popa
xor
test
inc
ficoms
lds
cmp
sub
fdivs
xorb
cltd
ret
mov
out
dec
add
outsb
mov
and
jae
rol
dec
sbb
pusha
ja
sub
jo
mov
je
in
repz
sub
mov
mov
push
cmp
and
std
das
push
mov
lock
das
leave
imul
rclb
shrl
fimuls
push
pop
xor
aas
mov
sbb
ljmp
ret
mov
jmp
in
je
and
fcoms
push
movl
or
sbb
or
loop
mov
mov
pusha
subl
jecxz
mov
nop
stc
push
psrad
rcrl
stos
cmp
das
or
pop
clc
mov
adc
adc
cmp
call
jns
in
repnz
push
fwait
cld
push
mov
fstpl
or
mov
repz
adc
lret
add
jb
leave
sub
sub
push
adc
or
data16
lods
dec
icebp
cmp
insb
fsubrp
push
pop
jno
ds
hlt
add
xor
imul
aam
xor
pop
mov
push
jb
cmpsl
insb
pop
enter
mov
mull
inc
inc
loop
jge
scas
mov
dec
hlt
push
scas
sbb
scas
ret
dec
divb
lahf
xor
inc
out
stc
adc
jmp
andb
mov
clc
repz
jle
pop
cmp
cmpsl
fiaddl
pop
push
xchg
jp
sarb
mov
loop
sarl
fnstsw
lahf
cmc
imul
cltd
into
xor
insb
adc
std
sub
clc
mov
and
idivl
pop
push
cmp
iret
xchg
mov
lods
ljmp
insb
adc
repnz
lds
lods
ret
inc
je
or
mov
ficomps
mov
push
sub
xchg
repz
mov
mov
rol
arpl
cmp
loop
scas
xor
hlt
in
rclb
lcall
adc
mov
adc
push
loopne
push
and
loope
ret
int3
xchg
jmp
mov
call
in
inc
sarl
shrb
mov
scas
push
aad
sbb
mov
jmp
sbb
inc
cmp
out
adc
or
leave
and
lret
pusha
sbb
fsubl
popa
ret
cli
popa
dec
push
scas
jb
icebp
inc
xor
test
imul
mov
cltd
mov
test
xchg
mov
adc
les
mov
xchg
fcmovbe
sbb
mov
out
pop
pop
stc
stc
scas
push
fldl
testl
and
xor
sbb
ja
cmp
jbe
pop
xorl
sbb
call
adc
adc
in
mov
lods
in
adc
les
pop
cmp
in
daa
sub
loop
sbb
mov
cli
shll
addr16
mov
push
xor
paddusb
outsl
jmp
lock
inc
cs
mov
pop
sbb
xor
nop
loopne
mov
jmp
pop
sbb
mov
outsb
add
shll
shlb
scas
rcll
adc
out
add
jmp
ss
fcomip
adc
cmpsl
cmp
mov
cwtl
xor
push
das
xchg
js
lock
sbb
sbb
push
pop
enter
outsb
rorl
inc
stos
shrl
push
jns
xchg
mov
fnstenv
inc
xor
gs
sbb
pop
loope
add
mov
mov
adcb
inc
jecxz
pop
jl
clc
sbbl
test
pop
mov
push
cmpsl
mov
jns
cwtl
xchg
push
mov
xor
sbb
je
repz
cwtl
mov
divl
adc
jl
fisubrs
xchg
push
xlat
test
insl
rcll
in
gs
and
lcall
sub
jne
cltd
insb
test
repz
cmpsb
js
out
into
gs
xor
and
popf
jge
fisubrl
test
test
push
les
mov
add
ds
xchg
mov
adc
pop
jbe
jnp
mov
push
stos
adc
push
or
sub
mov
addr16
xchg
mov
push
cmp
inc
bnd
test
or
mov
js
in
cld
mov
popa
aas
rclb
or
popf
stos
loope
lds
mov
es
xchg
dec
enter
in
ret
pop
outsl
jbe
inc
mov
cwtl
and
jae
mov
popa
cmpsl
and
test
mov
pop
and
pop
ffreep
or
hlt
fs
mov
mov
fiadds
dec
mov
and
fisubrs
gs
enter
and
cmp
movsb
test
test
popl
dec
adc
pop
push
mov
insl
and
mov
mov
jmp
sbb
xchg
xchg
lods
sahf
xor
sbb
or
ret
add
in
subl
adc
or
sbb
inc
ret
cmp
jnp
nop
fsubrl
cmp
sahf
mov
in
xlat
xor
mov
nop
sbb
in
sahf
jle
xchg
loopne
push
fsts
add
xchg
inc
out
shll
or
or
add
push
call
pop
xor
or
lret
cmpsl
aam
ss
push
imul
jne
fldl
mov
xlat
mov
add
addr16
aaa
std
mov
fildl
mov
cmpsb
je
mov
sub
jmp
jno
test
fcmovnbe
and
les
sbbb
push
xchg
gs
aas
mov
xchg
xchg
gs
aam
fwait
ret
rol
mov
cmp
jns
or
adcl
imul
into
cwtl
mov
lock
shrl
divb
fdivl
mov
fsts
xchg
orl
fnstsw
iret
faddl
pop
cmp
sub
jbe
lcall
push
movsb
lahf
ljmp
pusha
mov
cmp
xor
ds
xchg
pop
loope
pop
pop
sbb
daa
das
xor
pop
icebp
idivb
sbb
lods
push
sub
push
xchg
inc
cmpsl
test
or
sbb
push
mov
out
fmuls
sbb
dec
sub
sti
add
stos
cmpsb
pop
out
fwait
jbe
je
test
xor
sbb
mov
fsub
out
cwtl
cltd
hlt
bound
add
cmp
test
mov
jecxz
shl
pop
and
cli
lret
sbb
sbb
stos
xor
rcll
jle
cs
inc
enter
negb
mov
adc
pop
sbbb
mov
stos
not
lret
xor
cli
icebp
cmp
xor
fcoml
cmp
mov
mov
arpl
mov
arpl
jb
addr16
mov
mov
push
in
fwait
mov
inc
lret
scas
pop
mov
mov
lret
fnstsw
sub
in
xor
mov
push
inc
lods
daa
lret
dec
aaa
push
mov
subl
call
sti
loope
call
adc
mov
aad
shll
jp
push
dec
lret
adc
popf
stc
push
mov
jg
jmp
lret
nop
sub
rcrl
sub
cli
sub
aaa
int
mov
cs
in
lock
test
fisttps
mov
adc
and
inc
dec
lret
stos
push
pushf
pusha
out
and
lret
cld
mov
testl
push
sarl
shr
sbb
movl
or
mov
out
xchg
mov
sub
push
loope
add
imul
mov
xchg
mov
sbb
popa
xchg
sar
dec
xor
insb
lret
sbb
xor
aad
scas
xor
std
je
test
sbb
push
dec
inc
cmp
and
sar
cmp
js
sarb
sbb
and
je
jae
mov
mov
sbb
push
add
xchg
sbb
repnz
stos
cltd
xchg
aas
sub
dec
xlat
mov
stos
jne
das
push
xlat
shrl
add
inc
jae
cli
or
dec
ret
mov
sarl
mov
cmp
rorb
mov
por
orb
stos
jo
lret
aas
dec
mov
aam
mov
pop
test
lods
loope
and
push
cmp
sbb
and
aas
xchg
add
cmp
imul
insl
pop
daa
or
sbb
scas
mov
test
ret
xchg
ds
mov
push
or
pop
push
js
repnz
xchg
adc
cwtl
mov
jg
notb
push
and
mov
inc
mov
add
clc
adc
in
sbb
arpl
std
sub
xchg
cmp
push
pop
insl
cmc
daa
mov
mov
imul
sbbb
sbb
lret
loope
lods
pusha
dec
adc
mov
faddp
lods
imul
divb
lret
add
jle
add
shl
xor
andb
inc
jne
test
lds
call
jns
enter
sub
lahf
int
ss
or
or
adc
adc
int3
lock
ja
lcall
mov
shlb
cmp
dec
pop
stos
test
cmp
rclb
inc
cmc
sbb
enter
aad
lods
insl
pop
lods
fldenv
andl
rcll
adc
mov
das
sbb
dec
jno
xchg
push
mov
xor
mov
cmp
jmp
lret
pop
or
std
repz
rcll
sti
xor
mov
subb
dec
cmp
imul
popa
mov
pusha
sbb
out
test
and
inc
adc
lock
and
pop
lahf
push
xchg
inc
orl
sbb
pop
fidivs
shr
pop
lahf
inc
jle
les
dec
inc
adc
sbb
dec
rcrb
jmp
add
fdivrs
dec
xchg
cmp
les
mov
cmp
xor
outsb
cmp
pop
jmp
mov
xchg
aam
push
psrld
and
push
pop
aam
mov
loop
mov
jp
push
or
decb
dec
mov
cmp
sub
push
adc
fs
pop
pop
sub
adc
or
mov
push
and
jg
cwtl
xchg
mov
inc
in
stc
cmp
ret
inc
mov
imul
aaa
imul
gs
add
jecxz
shlb
test
icebp
inc
sbb
or
test
dec
bound
push
mov
repnz
sbb
add
testb
and
pop
ds
adcl
add
ret
mov
cwtl
mov
nop
ss
dec
sub
inc
ja
xchg
adc
jo
push
xchg
add
xchg
lret
mov
jle
shlb
sbb
movsl
in
bswap
dec
and
fdivrl
imul
sub
jp
lock
xor
mov
mov
push
inc
mov
call
aas
xchg
push
jo
inc
push
insb
cmp
cwtl
cmp
rorl
pop
test
add
sub
rorl
add
nop
subl
punpcklwd
lods
and
jmp
jae
mov
mov
xor
push
cwtl
pop
or
jmp
push
bound
or
adc
sbb
cmp
aad
mov
push
sub
scas
stos
fdivl
shll
test
andl
cld
cmp
pop
js
adc
cltd
add
mov
and
rcrl
clc
mov
inc
xchg
xorb
sub
dec
mov
mov
add
dec
cmp
mov
xor
in
inc
xchg
shlb
fiaddl
lret
pop
stc
inc
sub
xor
addr16
jmp
sub
adcb
cltd
cmp
stos
sub
jl
adc
jns
jl
ja
bound
mov
xchg
bound
in
and
push
ror
add
out
test
mov
lahf
das
push
test
lods
cltd
sbb
cmp
jb
loopne
aam
xor
add
add
adc
out
enter
push
mov
fistpll
imul
fildll
rorb
add
push
sub
cmp
rol
push
out
nop
dec
inc
xchg
lcall
jl
scas
lcall
jnp
pop
inc
xchg
inc
adc
dec
sahf
out
push
mov
js
sahf
push
je
mov
ret
mov
out
cli
test
test
call
xchg
cmp
leave
lds
or
xchg
into
jo
gs
int
or
lea
mov
pop
negb
jg
repnz
add
out
hlt
mov
out
jns
loop
adcl
mov
sbb
aaa
jmp
jno
dec
out
mov
out
add
push
inc
pusha
mov
popa
xor
lcall
rcl
or
insb
andb
test
cli
imull
sbb
pop
adc
dec
imul
mov
pop
pop
pop
cwtl
aad
adc
inc
int
pop
pushf
aaa
push
sub
aas
jle
jns
repz
add
mov
dec
daa
push
icebp
pop
test
or
movsl
pop
adc
lock
pop
and
sbbl
cmp
cltd
dec
mov
lret
mov
xor
mov
adc
pop
jge
mov
out
inc
add
sub
fcompl
ret
jg
inc
outsb
movl
jmp
mov
dec
jae
ret
mov
mov
xchg
out
mov
test
iret
mov
mov
cmp
shlb
ss
inc
pop
dec
push
or
xor
lret
dec
icebp
xor
inc
lea
faddl
faddl
daa
cmp
xchg
sub
ja
pop
xor
rol
adc
cmp
fisubs
inc
xchg
addr16
sbb
cmpsb
sti
nop
stos
push
or
xchg
test
mov
mov
repnz
push
gs
adc
pop
or
mov
or
jl
loop
or
iret
in
icebp
hlt
sbb
pop
shll
inc
lds
inc
pop
mov
hlt
loope
inc
bound
cwtl
or
daa
xor
dec
fwait
cmp
sti
and
ljmp
jecxz
fwait
pop
push
or
cwtl
jns
add
es
ret
addl
mov
push
fildl
mov
mov
out
popa
pop
call
int3
fsubs
mov
pop
lret
lods
aad
push
test
push
fisubl
jecxz
std
loop
or
mov
push
fidivl
lods
cmc
xor
push
adc
xor
lock
mov
mov
roll
fs
les
pusha
lods
mov
jo
scas
mov
js
jo
inc
and
test
and
mov
notb
lock
cmp
call
int3
pop
test
icebp
push
adc
sbb
inc
mov
mull
fs
xchg
sbb
and
jbe
imul
fstpl
cmp
sti
dec
inc
mov
loopne
int3
push
aas
cltd
mov
lret
push
nop
sub
fnstsw
mov
ja
xchg
push
push
mov
fidivrs
sar
push
sbb
sub
out
pop
sbb
inc
adc
ss
push
iret
mov
aam
and
aaa
dec
sub
out
jp
pop
push
pop
jle
imul
pop
das
mov
out
aas
push
sbb
push
insl
cwtl
lock
xchg
shlb
fbstp
push
jl
aam
addb
or
push
lcall
mov
xchg
mov
mov
sub
pop
fidivl
mov
out
js
movsb
pop
jecxz
cmp
int
xor
movsl
jp
mov
adc
test
mov
push
shrl
sbb
daa
cmp
jbe
inc
mov
mov
inc
daa
push
sbb
loop
decl
mov
dec
popa
jg
push
fwait
mov
mov
out
push
test
int3
dec
cld
or
dec
cmp
mov
push
iret
shlb
js
xor
jg
xor
loope
pushf
cmpsl
popa
and
dec
sub
xlat
nop
movsb
cmp
addr16
pop
jmp
leave
pop
inc
cmp
shlb
or
sti
rcll
lods
movsl
mov
push
and
dec
fnstenv
idivl
stos
inc
sbbl
lcall
div
dec
sub
aad
xchg
adc
jae
pmulhuw
lret
icebp
xor
popf
into
insl
out
pop
sbb
iret
push
push
push
stc
imul
push
mov
aad
inc
cmp
sti
pop
fwait
cmp
mov
mov
pop
mov
mov
add
call
sub
mov
insb
hlt
sub
mov
sub
dec
push
or
shl
movsl
add
push
dec
movsb
cltd
movsb
sbb
loop
xchg
movsb
in
add
inc
inc
movsb
into
in
adc
aaa
or
jno
jg
inc
repnz
stc
xchg
xchg
gs
cmp
data16
hlt
push
popf
push
adc
cmc
aam
inc
pop
jp
ja
mov
jae
shl
jnp
inc
hlt
xchg
loopne
pop
ret
cli
jne
inc
sub
sub
jecxz
mov
push
sar
dec
mov
mov
xor
fcompl
mov
xor
lea
sahf
sub
xchg
outsl
and
adc
lahf
add
xor
mov
pop
inc
or
jne
loope
fnstcw
rclb
lahf
imul
mov
jg
aaa
aas
push
sub
in
and
xchg
sbb
inc
pop
lds
dec
push
sbb
sbb
repz
repz
addr16
outsl
das
pop
jge
inc
out
aad
mov
out
jne
adc
pusha
rorl
dec
into
repz
lea
sahf
xchg
xchg
sti
xchg
in
pop
mov
enter
or
and
push
adc
cmpsl
and
inc
mov
aas
mov
cmp
xchg
cmp
lock
xchg
dec
adcl
add
dec
mov
add
mov
imul
fdivs
mov
adc
or
call
inc
jg
mov
xchg
leave
mov
sahf
fsubrs
xor
mov
jle
jge
dec
test
push
adc
orb
jmp
mov
dec
je
rclb
loopne
repz
adc
mov
les
cwtl
sahf
ja
ja
std
aad
jbe
add
mov
mov
pop
aam
call
imul
sbb
sarl
lock
inc
push
fsubr
aas
sbb
dec
lock
leave
add
mov
popa
mov
and
daa
jns
nop
sahf
adc
pop
jbe
or
inc
idiv
mov
pop
sub
pop
or
dec
push
shrb
inc
pop
xchg
loope
jmp
lds
data16
push
sbb
jp
notb
or
ss
jg
cltd
std
sahf
lret
cli
jno
sub
int3
call
into
xor
or
mov
adc
je
add
mov
sbb
xchg
inc
fidivrl
in
sti
repnz
xor
icebp
xor
out
sbb
jae
xor
pop
bound
ret
movsb
sub
rorb
xor
pop
std
lods
arpl
imul
xor
jno
mov
lods
mov
or
je
or
sub
cmpb
roll
push
arpl
dec
movsl
sbb
push
mov
cmpsb
out
icebp
into
cmp
aam
add
andb
jl
movsl
cmp
adc
xchg
lock
fstpl
std
push
inc
mov
aas
fwait
xchg
cmc
pop
sub
aas
insb
mov
inc
insb
mov
add
adc
push
iret
out
movsl
out
sub
inc
jbe
in
pop
loop
adc
mov
aaa
xorl
mov
dec
push
mov
inc
stos
fsub
fadd
inc
imulb
inc
cmc
popf
push
pop
loope
and
pop
or
mov
mov
mov
and
dec
push
mov
shr
mov
push
mov
sarb
sti
adc
shrl
xchg
fisttps
mov
out
int3
leave
pushf
add
dec
sub
or
data16
and
jg
mov
out
xchg
and
lahf
sub
shlb
jp
add
out
ficomps
mov
loopne
scas
ret
jb
mov
fadds
pop
test
or
lds
incl
out
xlat
shlb
jge
or
cmpb
outsb
adc
lds
sbb
test
dec
jno
pop
and
mov
ret
mov
lret
int3
adc
aam
fwait
pop
gs
cltd
jno
fstpt
mov
insb
popw
xorl
jmp
iret
adc
outsl
rclb
gs
jge
mov
dec
push
out
xchg
popa
jmp
pushf
push
popa
adc
rolb
adc
sub
mov
pushf
loope
loop
daa
push
lahf
pusha
rcll
nop
cmp
in
mov
fstl
addr16
scas
rclb
push
push
test
mov
and
and
inc
xchg
pusha
out
enter
and
push
or
insb
leave
insb
insb
or
es
or
ror
sbb
gs
or
sub
cmc
push
or
mov
cwtl
adc
aad
jo
mov
ljmp
jns
mov
fisttpll
jecxz
inc
mov
sbb
push
clc
sbb
stos
mov
or
sti
or
lea
mov
lods
xchg
inc
pop
adc
jne
xchg
push
sbbl
loopne
out
ret
add
mov
lret
ljmp
outsb
leave
out
addr16
cmpb
jbe
lahf
je
sub
fstpl
gs
xor
test
xor
cmpb
rolb
fdivr
jecxz
push
or
mov
shrb
and
push
popa
lea
lcall
das
xchg
cmp
mov
sub
adc
inc
mov
dec
je
es
xchg
das
pusha
pushf
shl
fadd
stos
out
xor
in
pop
jno
sbb
inc
in
mov
movsl
insb
xchg
sarb
inc
pusha
fcmovbe
and
jmp
std
sbb
jns
lret
lods
out
fldcw
das
pop
jnp
jnp
jo
add
pop
daa
js
sub
mov
sbb
push
xor
inc
dec
mov
stc
aam
shll
mov
aam
inc
mov
stos
jae
jp
inc
dec
cli
out
mov
pop
aad
daa
pop
push
adc
fldenv
fstl
push
mov
ljmp
or
pop
inc
dec
cmp
jns
sbb
shlb
sbb
sbbl
xlat
cmp
sub
dec
push
pushf
push
pop
out
sbb
addr16
mov
adc
leave
shl
pushf
mov
in
lods
data16
in
ret
iret
dec
fs
push
mov
push
sti
icebp
adcl
fs
or
dec
cmpb
add
aad
rcll
xchg
ret
in
jbe
outsl
hlt
iret
mov
repnz
mov
test
aaa
adc
jle
test
mov
push
and
roll
xchg
adc
test
jnp
xchg
xchg
out
adc
outsl
fildl
mov
popa
mov
or
scas
aad
xor
call
ja
jb
inc
movsb
sub
lret
jge
jno
ret
int
aas
jb
xchg
xor
cltd
outsb
lret
rcl
mov
jbe
pusha
dec
push
sub
gs
mov
and
jne
dec
push
adc
cmpsl
fnstenv
cwtl
lock
sbb
stc
mov
or
jle
cwtl
daa
sub
push
sbb
jns
add
lods
faddl
push
mov
cmpsb
pop
push
xorb
push
sbb
jmp
daa
lods
xor
ss
inc
add
test
xor
fsubs
xchg
dec
mov
js
push
sbb
bound
and
mov
shrl
add
lret
ret
cmp
imull
into
enter
aad
pop
inc
pop
inc
ja
stos
jecxz
and
enter
adc
mov
and
imul
arpl
insb
jns
adc
xorl
push
push
adc
pop
scas
cmp
or
in
push
inc
jg
cmp
add
sub
xlat
daa
push
mov
je
icebp
popf
mov
enter
adc
ficompl
int
dec
xchg
in
jle
notl
iret
mov
mov
mov
test
popf
testb
js
jnp
add
push
jae
test
filds
mov
cmp
or
cmp
xchg
pop
lret
pop
jbe
push
pushf
add
mov
cltd
insb
std
std
pop
push
addb
jae
sub
mov
insb
ja
int
lods
test
rorb
addb
mov
orb
pop
hlt
loope
ljmp
stos
inc
xchg
out
incl
sbb
out
mov
sbb
sbb
push
xor
pop
and
mov
inc
stos
add
stc
cmpsl
nop
clc
sbb
cmp
pop
cltd
sti
and
mov
pop
out
or
leave
lds
divb
mov
xor
adc
hlt
pop
cmp
or
insb
out
mov
lret
push
cwtl
dec
cmp
or
pusha
jle
rorl
jecxz
mov
push
jno
xor
popf
xchg
mov
jp
cld
dec
sbb
adc
or
mov
sbb
cmp
pop
imul
or
in
cwtl
adc
fcoms
and
dec
cmp
in
rorb
rcll
inc
dec
inc
push
ljmp
mov
jl
mov
popa
aam
jno
ss
scas
cli
mov
cmpsb
repnz
or
mov
cmp
test
repz
adc
int3
in
jp
ja
xor
push
xor
add
icebp
xor
pushf
addr16
add
mov
inc
lock
sbb
repz
pop
repz
mov
ljmp
stc
adc
mov
mov
pop
arpl
inc
ret
adcb
and
gs
sbb
les
daa
push
scas
or
cmp
xor
push
and
jae
nop
jb
into
icebp
jmp
movb
lret
stos
mov
push
mov
inc
and
shl
mov
jecxz
mov
xor
xchg
pushl
repnz
sub
adc
adc
sbbb
aas
or
jae
or
testb
pop
jb
fwait
xchg
xchg
and
lods
adc
push
adc
repz
mov
add
dec
test
pop
test
add
loop
xor
outsl
loopne
out
insb
aam
and
sbb
xchg
enter
insl
jge
sub
outsb
sbb
inc
dec
lds
in
adc
test
pushf
icebp
in
adcl
jg
je
mov
das
and
jg
inc
inc
and
cmp
push
sti
mov
pop
movsl
sub
sbb
cmp
mov
stos
in
sbb
iret
xchg
push
adc
subb
lahf
dec
stos
mov
jno
mov
xchg
test
call
insl
xlat
inc
insb
or
mov
xor
cmpsb
push
lea
call
inc
ja
mov
or
adc
aaa
sub
xor
jmp
stc
jl
out
cmpl
enter
pop
sar
mov
sbb
push
jne
sbb
push
jecxz
dec
adc
xchg
popa
jecxz
iret
lods
xchg
cmpsl
int
push
popf
push
sahf
js
push
add
push
fdivrl
cli
push
mov
ror
ljmp
jo
pop
pop
mov
and
jge
push
cs
xchg
xchg
int
mov
daa
jmp
fistpl
xchg
jae
les
sub
mov
jo
or
pop
pushf
pop
push
imul
push
cmpsl
enter
notl
les
aad
sub
icebp
out
dec
cltd
mov
cmpsb
into
inc
jbe
pusha
jmp
and
jp
push
adc
lret
add
jge
xor
pop
pop
arpl
adc
sub
stos
fsubs
or
push
dec
lods
outsl
or
clc
add
lcall
dec
outsb
xchg
and
ret
sub
sbb
js
xchg
xchg
shlb
aas
sbb
and
xor
test
fs
ret
ficompl
movsb
dec
cmp
nop
jge
aad
sbb
jb
pop
sub
jbe
add
cmpsl
es
mull
jo
or
roll
negb
fwait
movb
popf
mov
shrl
rorb
leave
jmp
rsm
fistl
rolb
std
dec
adc
mov
leave
test
das
lret
cmp
add
inc
movsb
popa
int
icebp
mov
mov
mov
call
call
inc
inc
inc
jnp
lcall
scas
push
inc
outsb
mov
lret
sub
sub
push
std
push
sbb
mov
sub
xchg
lahf
iret
pusha
in
sub
mov
xor
jbe
jl
mov
out
xchg
sti
add
sub
jb
lods
rolb
pop
imulb
cmc
in
dec
cmp
sbb
test
adc
shr
sub
mov
dec
ja
scas
xlat
adc
fisubrs
jne
sub
popa
fwait
xchg
rcr
mov
fdivl
push
icebp
into
push
dec
inc
cmp
cmp
inc
imul
pop
push
sti
pop
fucomip
xor
outsb
pop
sub
mov
add
out
lock
add
cmpsb
daa
mov
les
and
bound
xchg
movsl
insb
xor
or
loope
pop
vmwrite
aad
enter
mov
xor
and
dec
lret
sti
jo
xchg
dec
xor
cmp
loope
enter
mov
jg
cmp
cmpb
in
cmp
jne
xchg
ret
mov
lret
je
jg
cltd
ds
mov
push
fwait
out
ja
adc
jmp
cwtl
pop
test
mov
mov
out
int3
mov
dec
fnstsw
xchg
out
mov
xchg
mov
test
and
jmp
jg
mov
jecxz
ja
jmp
sub
xchg
mov
shl
mov
push
jmp
and
xchg
lcall
dec
mov
mov
jecxz
or
xor
dec
pop
xchg
xchg
mov
fdivrl
pop
and
xchg
fisubs
mov
fcoml
jl
insl
mov
mov
outsl
mov
cmp
sti
dec
leave
jns
pop
jp
pop
cmpsb
lret
mov
stos
jnp
xor
stos
xchg
mov
int
cmc
mov
in
add
push
sbb
dec
mov
or
and
and
shl
push
out
fimuls
jle
and
adc
and
fsubrs
add
ret
cltd
test
or
addr16
add
out
push
hlt
inc
sbb
movsb
xchg
rolb
mov
loope
insl
ss
fmuls
jmp
arpl
sub
repnz
xor
mov
or
sbb
jo
outsl
dec
test
pop
sbb
in
insb
imul
xchg
xchg
addl
dec
stos
xor
idivb
call
dec
iret
inc
xor
dec
pop
outsl
dec
in
clc
loop
ss
jmp
lcall
outsb
mov
icebp
inc
out
fistl
cmc
aad
ljmp
mov
sbb
and
ja
in
or
push
push
push
repnz
pop
fs
das
lret
inc
push
adc
push
xchg
xchg
xchg
jbe
dec
shlb
out
or
mov
int3
jbe
xchg
jg
pop
add
jno
push
cmpsb
loop
push
xchg
pop
add
movsb
bound
fdivl
add
rorb
xchg
xor
sbb
movsl
shll
mov
loopne
pop
call
cli
add
xchg
xchg
mov
mov
addr16
or
jne
cmp
xor
sbb
dec
mov
pop
lret
mov
fildll
movsb
dec
inc
jmp
call
dec
das
shr
inc
push
cs
inc
xor
fs
jnp
lret
jnp
adc
jno
fisttps
clc
xchg
pusha
push
pop
add
sub
mov
imul
inc
push
cmp
ret
sbb
add
stos
xor
add
mov
or
pop
loope
lock
loop
stos
xchg
mov
pushf
lock
in
dec
sarb
push
loope
mov
cmp
mov
pop
or
mov
int
das
xchg
clc
movsl
mov
mov
daa
push
adc
jecxz
dec
std
mov
rolb
pusha
jmp
ret
sahf
pop
sbb
hlt
mov
test
xchg
ret
ret
stos
jns
and
add
les
sbb
jnp
mov
and
adc
add
mov
and
xchg
mov
addb
aad
ret
std
mov
mov
nop
es
into
xchg
mov
add
adc
les
xor
scas
push
pusha
push
addr16
lea
dec
cmp
cmp
out
shlb
fidivrl
or
hlt
out
movsb
icebp
popa
lods
fldt
mov
stos
adc
push
jo
out
and
and
adc
and
sub
lea
lret
inc
xchg
orl
rorl
loope
les
mov
test
sub
xor
call
xor
sub
mov
jl
mov
pop
cmpsb
pushf
inc
lds
pop
sub
rorb
add
mov
js
or
andl
add
xor
out
push
js
bound
nop
es
mov
mov
pop
fistpl
and
dec
push
into
enter
jmp
ficoml
jb
cmp
mov
fnstsw
test
lods
mov
imul
ja
push
cmp
push
out
mov
adc
xor
sar
cld
pop
aas
cmpsl
or
in
adcl
nop
inc
std
stc
jecxz
movsb
movd
pushf
push
mov
hlt
lds
cmp
stos
mov
or
in
add
mov
jo
xchg
fistl
mov
dec
dec
lods
mov
enter
lea
ffreep
ret
push
lret
push
push
into
fwait
or
loop
fwait
mov
test
lcall
inc
bound
mov
mov
lahf
test
mov
xor
push
punpckhwd
not
js
mov
jb
mov
cltd
lcallw
rol
icebp
out
push
divl
mov
stc
mov
insl
lahf
and
outsb
fidivrs
jno
xor
push
or
mov
pusha
add
sahf
out
icebp
mov
add
jb
mov
xor
inc
dec
loop
or
ret
mov
mov
dec
je
push
stc
pop
sbb
pop
lret
and
sbb
popf
mov
inc
and
mov
ss
push
pop
mov
cld
nop
push
mov
int
add
cmp
sbb
push
mov
ficoml
ja
jecxz
cltd
adc
loope
dec
mov
mov
fbstp
sbb
in
mov
aam
xchg
sbb
jo
mov
lds
addr16
enter
mov
dec
daa
xchg
setno
inc
aam
cmp
mov
adc
ret
and
xor
fnstenv
notb
push
sub
sbb
sbb
mov
insl
jmp
jo
sbb
adc
lock
lcall
in
add
stos
mov
mov
xchg
std
mov
push
fwait
popa
xor
loopne
adc
mov
jbe
push
ret
ds
jnp
fmuls
cmp
jmp
mov
roll
mov
adc
insb
xchg
pop
popf
xchg
ror
testb
leave
mov
adc
jae
jmp
iret
push
or
movsl
inc
xchg
stos
jnp
loopne
add
or
addb
pop
sahf
cmp
pop
pop
int3
int3
or
insl
ret
jge
and
scas
das
cltd
dec
out
xchg
gs
test
dec
pop
stos
xlat
iret
sub
ror
sub
pop
pop
fldenv
out
inc
cmc
push
adc
mov
ss
into
mov
and
fwait
mov
xor
cmp
xor
test
add
clc
dec
pop
sub
clc
pop
dec
out
int
insl
adc
push
or
mov
mov
xchg
push
into
push
sahf
test
mov
adc
add
pop
iret
xor
cmp
mov
dec
lds
cli
dec
test
std
jno
aam
nop
sbb
push
push
jge
dec
in
sub
fisubrl
nop
lock
push
or
xchg
addr16
rol
mov
and
repnz
jl
subb
bound
lea
in
out
imul
cwtl
xchg
jns
push
js
into
aam
sbb
stos
jo
xor
pop
add
push
lcall
into
leave
jg
jmp
mov
scas
dec
jo
jno
mov
and
scas
jo
hlt
add
xchg
inc
scas
aam
icebp
loop
std
dec
iret
mov
and
push
dec
orb
dec
sahf
lret
dec
insb
xchg
test
or
adc
mov
sbb
lcall
sbb
and
jnp
into
pop
fs
mov
pop
push
pop
pop
popf
xchg
lea
in
fs
repz
cmpl
mov
shlb
dec
pop
push
in
sbb
call
in
xor
sub
pop
jbe
sub
mov
push
fmull
ljmp
sub
repnz
add
sahf
inc
mov
xchg
test
loope
mov
and
cli
mov
insl
push
add
pop
mov
jle
push
cmp
mov
jle
pushf
xor
aam
sub
pop
pop
sbb
jne
xchg
iret
das
and
and
jne
daa
mov
testl
pop
in
outsb
out
cwtl
or
mov
jmp
cld
flds
mov
cli
xlat
sub
mov
arpl
enter
popa
or
cmp
mov
cmp
test
cltd
clc
movb
push
fcoml
xchg
cmc
sbb
into
mov
stos
sarl
push
test
sbb
in
mov
push
fcomps
div
dec
movl
loopne
cmp
inc
inc
out
inc
inc
mov
lods
mov
cmp
or
ja
inc
repz
xchg
push
mov
lods
mov
xchg
mov
and
jb
mov
dec
ret
xchg
fstpt
push
cmp
fiadds
out
das
cltd
jno
out
or
mov
sarb
jmp
ret
rorb
pop
lods
stc
aam
push
sub
xor
lret
lahf
insl
push
mov
pop
mov
mov
xor
cs
push
lods
cmp
xor
mov
insb
and
sbb
mov
adc
dec
je
mov
movsl
in
mov
sbb
ljmp
jle
sbb
mov
sahf
movsl
arpl
dec
mov
cld
das
cmp
adc
mov
pusha
inc
out
clc
dec
adc
jo
sbb
scas
fisubs
xchg
pushf
lea
sbb
pushf
in
cltd
push
std
push
push
adc
push
push
cltd
jge
js
jle
pushf
sbb
lahf
stc
pop
dec
mov
inc
scas
in
add
rcrl
cmp
mov
shlb
jns
xchg
jbe
mov
aad
stos
dec
or
fdivs
mov
setg
cmp
dec
or
cmc
repz
ss
loopne,pt
mov
pop
bound
xor
repnz
stos
xor
stos
js
bound
pop
into
xor
in
cmpsl
xchg
fs
fdivl
lret
mov
daa
xor
nop
mov
and
aad
push
ffreep
imul
adc
shrb
icebp
xchg
sarb
shlb
sub
fwait
push
loope
mov
insl
dec
dec
lahf
test
dec
fcompl
aas
daa
and
jge
mov
adc
in
xor
xchg
or
mov
stos
sti
sbb
aaa
push
fsubl
xrelease
in
negb
add
mov
fiaddl
test
pop
ds
pop
in
mov
pop
sub
arpl
and
jmp
jne
fcmovnbe
pop
popf
inc
stos
sbb
out
adc
gs
cmp
inc
pop
lock
imul
pop
dec
arpl
inc
sub
dec
add
sbb
adc
dec
dec
stos
sbb
mov
xor
neg
adc
js
xor
fstps
mov
fidivrl
mov
jg
pusha
push
je
lret
pop
movsb
add
push
jle
and
and
stc
xchg
mov
sbb
insl
out
stos
lcall
jno
jbe
xor
fbld
repnz
xor
shll
lahf
das
mov
sub
hlt
xchg
out
jno
int3
mov
and
je
das
mov
adc
xor
leave
or
test
xchg
mov
xchg
nop
xchg
inc
lahf
and
inc
and
mov
icebp
or
jno
sub
movsb
lods
mov
shlb
and
ja
push
adc
je
fistpl
aam
and
leave
ss
mov
out
xor
fdivrs
cmp
in
fst
je
or
mov
xchg
nop
fmuls
jo
mov
das
das
into
adc
mov
push
sub
out
sbbb
ret
pop
mov
add
movsl
push
lea
jno
xlat
pop
push
add
leave
mov
mov
cltd
ret
pop
pop
lock
push
or
fldpi
xchg
int
jb
xor
lods
pop
scas
mov
clc
icebp
in
rolb
mov
add
jg
push
jmp
ret
std
lock
dec
ret
mov
stc
icebp
add
pushw
lcall
push
inc
dec
insl
adc
or
repz
sub
lret
dec
xor
pop
sbb
lret
jp
ja
sub
add
pusha
inc
pop
out
xlat
jb
std
adc
roll
dec
xor
orb
dec
sbb
fstpt
sti
push
std
pop
mov
scas
cmp
mov
mov
and
in
lret
std
add
sbb
and
cmp
xchg
out
movsl
in
stc
in
mov
lret
leave
arpl
popa
ja
mov
add
mov
or
xchg
xlat
mov
aas
xor
mov
mov
inc
xor
js
xchg
pusha
push
push
cli
and
repz
fcomp
js
mov
and
out
pushf
sub
rorl
in
or
sarb
adc
xor
jecxz
mov
in
adc
cmp
fcompl
mov
fsubrl
jge
and
les
icebp
dec
fmul
push
rcrb
rcrb
or
sbb
in
jge
fists
loope
xchg
in
xchg
cmp
pop
nop
lods
xor
sbb
jge
xchg
cmp
fstl
lea
xchg
or
sub
ret
imul
xchg
mov
outsb
adc
stc
aas
sub
stc
mov
shll
and
mov
inc
mov
ljmp
jmp
xlat
insl
pop
adc
mov
mov
out
mov
fdivl
mov
inc
das
xorl
in
xlat
lea
out
xor
in
or
xlat
test
push
hlt
pop
mov
test
mov
cmp
and
cwtl
jecxz
sti
dec
fwait
into
jb
lock
rcrb
das
adcl
mov
ds
movsb
rcrb
imul
sbb
insl
movsl
mov
fists
rolb
and
test
outsb
filds
ljmp
pushf
dec
stos
stos
and
cmp
fidivs
cld
push
std
cmp
sub
fmuls
jg
push
jae
shll
xchg
test
dec
in
pop
js
jae
xchg
and
lret
inc
xor
push
lock
sub
lcall
cmp
aaa
mov
fs
sahf
xor
movsb
dec
sub
int3
xchg
mov
or
or
mov
pop
or
mov
movsl
jg
dec
mov
mov
mov
fsubrl
and
pop
or
pop
xchg
fsubs
jbe
xor
or
mov
out
fistpll
fiadds
or
aam
sarb
cmpsl
pop
mov
ds
and
adc
pop
jg
jmp
in
rcll
ret
ror
dec
data16
insl
add
mov
add
cld
push
cwtl
add
xor
xor
xor
push
cmc
inc
aam
jo
or
and
xor
inc
sub
lds
or
pop
rorl
ret
mov
ljmp
repnz
xor
lock
fisubs
int3
dec
xchg
mov
push
dec
add
xchg
les
push
lods
out
mov
sti
fcmovnb
jb
imul
push
xor
and
movsb
xchg
mov
push
cmp
cs
xchg
cltd
sahf
dec
add
lcall
push
aad
xor
dec
jle
mov
psubusw
loopne
jne
jno
int
add
inc
fiadds
xchg
fistps
dec
pop
mov
es
dec
insb
inc
cmpsb
jmp
scas
mov
jo
push
jle
mov
insb
imul
jl
adc
pop
cld
sub
and
sub
jmpw
xchg
mov
outsb
pop
adc
js
mov
andb
and
pop
xor
test
xchg
cld
jecxz
lret
cltd
push
fldl
test
loope
sbb
addr16
push
and
jne
shl
imul
push
or
sbb
sarb
leave
fistps
inc
xchg
fucomp
dec
xchg
out
push
sbb
movsl
test
outsb
add
and
and
jmp
jns
in
mov
movsl
mov
mov
int3
mov
pop
push
mov
push
arpl
add
loop
jb
and
shlb
out
or
inc
iret
test
or
daa
rcrb
or
mov
xor
movsb
dec
hlt
das
dec
xchg
mov
pop
dec
mov
mov
jno
jp
mov
testl
mov
mov
sbb
imul
andb
xorl
lahf
ret
jmp
jge
bound
push
arpl
pop
xchg
xchg
out
adc
mov
mov
or
mov
or
sahf
mov
mov
or
jl
push
jg
dec
inc
hlt
aam
fcmovnbe
pop
imul
or
pop
pop
cmp
pop
push
stos
outsb
mov
sub
adc
jmp
mov
sahf
mov
jp
mov
mov
cmp
in
jns
jmp
pop
cmc
pop
stos
mov
not
in
in
loopne
adc
orb
leave
into
cltd
sbb
daa
prefetchw
pop
mov
das
dec
movb
pop
sbb
dec
and
jp
popa
mov
or
stos
lock
in
cltd
lock
sbbl
xor
jge
cmp
jne
xor
mov
scas
lods
andb
cli
adc
and
and
pop
stc
es
mov
lahf
test
sub
fbld
pushf
push
pushf
and
or
aaa
push
das
movsl
xchg
ret
pop
scas
inc
sahf
xor
sbb
xchg
or
cmp
inc
lcall
fnsave
fistpll
push
lods
fildll
push
and
xor
jg
cwtl
decl
push
imul
pop
mov
fstp
enter
daa
pop
std
dec
ljmp
fldt
and
cmpsb
fdivs
out
mov
dec
mov
sbb
mov
jecxz
hlt
inc
pop
in
test
das
lods
subl
fs
push
jge
into
outsl
fcomip
repz
pop
or
ret
pusha
stos
js
div
jle
pop
mov
adc
adc
push
or
mov
stos
stos
jae
mov
ss
push
dec
dec
lea
hlt
loop
sub
jb
cwtl
push
in
dec
fdivrs
pop
lret
or
gs
repnz
test
movsl
mov
push
out
jno
jb
test
inc
push
xor
stos
addr16
nop
inc
dec
push
leave
push
ret
xor
push
and
cmpsl
cmp
pop
or
into
adc
push
push
adc
xchg
mov
je
or
add
popa
dec
push
fimull
imul
sbb
cmp
adc
mov
dec
add
pop
scas
dec
adc
cld
aas
in
int
stos
mov
or
jg
pop
sub
movsb
inc
lods
mov
movsl
sbb
fildl
pop
jmp
xor
sahf
lahf
movsl
or
movsl
dec
xor
rolb
push
jmp
movsl
movsl
xlat
mov
dec
aad
cs
dec
jge
inc
pop
push
ss
nop
mov
popa
pop
movsl
mov
push
push
scas
lods
cmpsb
ret
stos
and
stos
int
mov
and
nop
inc
pop
jmp
pop
pop
fisubrl
xor
das
adc
add
filds
push
test
in
in
sbb
ret
push
leave
es
dec
aas
cmc
rorl
mov
stos
mov
sbb
push
loopne
les
pop
pop
dec
nop
lret
frstor
fiadds
ret
push
adc
in
xchg
mov
lret
jp
cmp
lret
cmp
movsb
cmpsl
insl
cwtl
andb
outsb
inc
adc
push
loopne
jae
mov
push
adc
adc
pop
movsl
mov
out
xor
adc
daa
mov
mov
xchg
xchg
mov
hlt
xchg
inc
push
cmc
js
out
hlt
movsl
arpl
mov
xchg
js
and
adc
mov
inc
into
or
in
sbb
cmpsl
cmpsl
sahf
loope
mov
sbb
sarb
pop
popf
rcl
test
and
mov
jl
pop
ret
iret
fcoms
in
dec
push
pop
out
es
sub
push
aas
repz
into
mov
adc
out
mov
pop
jge
insb
xor
nopl
or
shrb
xor
idivb
shll
sahf
fbstp
cli
jae
mov
cmp
lods
repz
adc
adc
scas
push
inc
xor
lret
xorb
gs
cs
filds
fsubrl
xor
shrb
lock
sbb
and
xlat
iret
xchg
jp
add
int3
cwtl
dec
pop
pop
push
cmp
push
in
sub
and
xor
sbbb
lods
loop
rcrb
aaa
add
cmp
jecxz
xchg
shrl
push
das
adc
mov
enter
add
push
or
adc
jmp
les
bnd
nop
xchg
xchg
adc
push
cmp
addl
loope
jmp
xlat
in
jmp
fimull
faddl
mov
mov
xchg
stc
pop
stc
and
enter
incb
or
lods
sub
addr16
fwait
stos
cmc
and
lds
mov
adc
xchg
mov
pusha
push
aaa
sub
lea
ret
dec
xor
mov
dec
rcr
in
mov
push
jbe
stos
xchg
cld
idivl
clc
hlt
test
pop
out
es
and
dec
jb
sub
mov
pop
call
pop
pop
and
and
push
xor
lret
sti
lcall
aad
xchg
push
sbb
xor
xchg
mov
or
cs
popa
and
fnsave
insl
hlt
insl
push
mov
out
and
int
das
dec
test
xchg
shlb
add
in
mov
icebp
insl
and
pushf
xchg
jnp
cltd
stos
leave
lahf
sbb
push
in
jae
mov
icebp
push
pop
dec
push
and
test
jp
cmp
mov
pusha
add
sti
jae
sub
out
or
mov
pop
dec
in
jp
enter
outsb
push
popa
pop
call
sub
inc
pop
push
out
and
sub
mov
sti
cmp
lods
mov
insb
or
xorb
test
test
mov
jns
sub
std
lret
or
jge
xchg
mov
imul
adc
jg
xchg
dec
mov
xor
or
xchg
mov
adc
fimull
inc
das
shlb
insb
sbb
rcrb
enter
xchg
divl
shl
xor
xor
test
lret
xorl
fcomps
sub
pop
aas
sar
xor
repnz
jge
stos
test
sbb
enter
cmp
sti
xor
pop
stos
push
jno
scas
scas
lock
hlt
mov
das
in
inc
stos
rorl
scas
test
gs
ret
testl
add
mov
adc
inc
adc
ret
adcb
xchg
popf
stos
stos
inc
sub
dec
scas
cld
je
aas
dec
cmp
xor
add
adc
pop
loopne
push
pop
or
ja
sldt
mov
jmp
rcl
test
mov
mov
jnp
cli
push
enter
and
mov
fst
lcall
inc
xchg
sub
test
dec
jnp
xchg
push
pop
inc
lock
and
sahf
adc
fucomip
inc
fsqrt
add
or
fwait
out
jns
push
scas
sub
xor
fadds
jns
arpl
mov
shll
gs
jmp
adc
sbb
das
fistpll
pop
aad
leave
xchg
rorb
iret
addr16
out
pop
cmp
ss
dec
aam
mov
orb
lahf
fcoml
dec
pop
insl
mov
lods
adcb
lock
sbb
inc
in
sub
js
sarb
insb
out
in
cli
rclb
popf
test
sub
rcrl
pop
stos
jo
add
loopne
dec
xor
add
xchg
call
xchg
loope
sahf
pusha
push
cwtl
jo
mov
xchg
mov
sub
outsb
arpl
fucom
in
push
icebp
pop
xchg
orl
xor
add
out
xchg
cmpb
call
mov
enter
pop
or
adcb
es
into
xor
repz
or
xlat
cmpsl
xor
push
and
scas
push
cmp
inc
cmp
push
and
xchg
mov
and
sbb
mov
pop
out
mov
lahf
int
add
fwait
xchg
xor
outsb
cs
repz
in
add
insl
movsl
and
movsb
jb
mov
arpl
jnp
mov
mov
fnstsw
popf
adc
mov
xor
aad
mov
sbb
dec
jecxz
xchg
jg
ret
orb
mov
bound
jge
jbe
lret
shll
jl
subl
dec
mov
fnsave
xchg
xchg
inc
jecxz
sbb
insb
iret
dec
jns
movsb
push
pop
fdiv
cwtl
cmp
xor
or
dec
sbb
stc
out
dec
adc
test
stc
lea
pop
sbb
push
adc
lods
push
testb
scas
mov
pop
out
push
and
inc
lret
sbb
lds
mov
out
aam
push
add
mov
fucomp
adc
es
mov
enter
test
and
jecxz
aaa
mov
dec
mov
and
xchg
cmp
cmp
adc
xchg
fnstenv
mov
sub
sub
lahf
push
fildll
shl
mov
jbe
int3
dec
pop
shrl
push
mov
icebp
push
cwtl
push
mull
cmp
mov
jge
cs
std
mov
aad
scas
sbb
popl
fbstp
repz
leave
and
mov
out
sbb
iret
adc
sarl
mov
push
rcll
and
xor
lahf
fs
sub
jecxz
mov
mov
lods
loopne
push
lret
sbb
push
lret
xor
mov
out
pop
fildll
out
xchg
push
sbbl
pop
add
adc
mov
ficompl
dec
push
and
enter
lea
repz
cmpsb
lret
mov
arpl
mul
sbb
stos
rcll
jnp
add
ja
add
sub
ret
lcall
cmp
sbb
out
pop
iret
mov
lret
cld
xor
shrb
push
rorb
std
mov
xor
mov
xor
push
xchg
es
add
xor
pop
lock
or
xlat
and
mov
mov
fsub
cwtl
adc
adc
rcrb
ret
loope
xchg
jp
nop
js
xchg
pop
and
xchg
mov
pop
jge
jno
push
rcll
rcll
push
dec
add
cli
sbb
and
adcb
stc
pop
popl
mov
adc
ja
jb
lret
insb
push
loop
iret
sbb
lcall
mov
mov
xchg
sahf
inc
mov
xor
hlt
gs
lahf
daa
repnz
aaa
fldt
cmc
fistps
int3
mov
sbb
mov
fs
out
push
fwait
fstpt
pop
mov
lods
cli
push
or
xchg
cmpsb
xor
and
jl
xchg
repz
pop
xchg
sbb
stos
out
lods
jno
arpl
mov
pop
or
clc
shll
adc
push
cmpsl
fwait
inc
and
jle
pop
push
lret
pop
fstpl
leave
dec
xchg
mov
mov
xchg
aas
lds
cmp
shrb
js
pop
push
jbe
punpckhdq
push
dec
icebp
push
out
sti
sti
ljmp
sbb
inc
fdivs
dec
mov
iret
jae
or
lret
not
and
stos
sbb
fsubrp
movsb
mov
mov
in
cmp
idivb
xchg
inc
cs
ja
or
insl
jge
sbb
outsb
scas
or
fcoml
dec
mov
stos
jecxz
jb
insl
mov
mov
insb
dec
ds
test
jns
lret
nop
cmp
sbb
mov
pop
cmp
sbb
lret
cmp
pop
js
mov
fstps
pop
mov
or
insl
and
rclb
out
repnz
cmp
into
fdivs
out
or
mov
fsubrs
mov
push
xchg
ja
aad
pop
jns
push
sub
mov
pop
andb
inc
ror
jle
arpl
inc
sbb
adc
xchg
add
nop
jnp
xchg
aaa
fcoml
and
test
pop
scas
sub
movsl
filds
cmp
pusha
inc
aas
jnp
call
cmc
or
mov
cmp
loop
dec
adc
fsubrs
pop
roll
cmc
adc
xchg
clc
cltd
xchg
mov
ja
or
sub
mov
mov
push
shll
mov
and
mov
add
pop
dec
push
pop
and
mov
movsl
cmp
lret
mov
add
inc
pop
cmp
dec
ret
stos
stc
in
add
sbb
scas
fdiv
xchg
push
fyl2x
into
cmpsb
add
jb
stos
lahf
loope
movsl
add
cmp
scas
push
cmp
push
mov
mov
sub
lods
push
mov
adc
jg
mov
cmc
shlb
mov
call
sub
fcom
push
pop
je
sbb
sub
aas
fistl
add
pop
pop
out
scas
into
and
pop
rclb
add
mov
adc
xchg
push
out
pop
loope
ret
mov
add
adc
ljmp
jns
sti
scas
dec
sbb
lea
add
stc
xchg
mov
add
cmp
negl
out
loope
fwait
loope
cmp
and
in
int
insb
call
xchg
cltd
dec
xchg
cmp
aad
shrb
dec
add
sub
add
clc
pop
adcb
and
push
mov
daa
and
fldl2e
lock
movsl
cmp
repnz
fildll
call
inc
into
pushl
xchg
loopne
call
or
or
mov
pusha
loop
mov
leave
rorl
iret
in
aaa
daa
pshufw
mov
lret
out
cwtl
jne
push
mov
xchg
pop
stos
rolb
scas
mov
shl
push
test
ficomps
cmp
and
xor
add
lods
test
test
xor
lods
dec
xchg
addl
adc
ljmp
mov
addl
int
test
mov
xchg
mov
int
stos
pop
sub
lea
cmpsb
repnz
fstpl
mov
fs
enter
mov
scas
iret
scas
leave
pcmpeqw
pop
orl
xor
mov
jne
lods
and
sub
mov
fs
add
jg
xchg
pop
mov
adc
push
sqrtps
inc
ja
mov
fcomps
cld
lds
imulb
out
jp
mov
test
movl
push
jmp
jae
fsubl
push
frstor
add
sahf
sbb
add
idivl
cmp
ss
dec
xor
sbb
mov
les
div
inc
mov
sbb
dec
pop
sub
clc
clc
push
int3
mov
repnz
je
or
add
sar
cmp
mov
and
pushf
mov
xchg
aam
into
dec
and
popf
inc
cld
pop
stc
jl
lock
dec
in
cmpsl
or
bswap
gs
pop
arpl
xlat
xor
mov
fdivr
mov
add
loope
out
jecxz
mov
push
sahf
xchg
in
or
cmp
mov
and
push
sub
fistl
stc
clc
push
jne
icebp
shlb
mov
pop
adc
int
in
pop
das
mov
xchg
adc
mov
adc
mov
or
add
roll
rcr
roll
loop
xor
stc
pop
scas
rcr
and
xchg
fwait
ret
popf
js
leave
xchg
ret
dec
adc
into
mov
or
rclb
mov
add
outsl
mov
scas
jne
cltd
call
mov
inc
jge
xchg
jg,pn
das
cmpsl
adcl
push
std
or
jl
fiaddl
int3
nop
repz
pushf
dec
inc
push
sbb
das
sub
sub
roll
daa
lcall
sub
or
insl
pop
add
xchg
sbb
sub
test
sti
in
dec
call
scas
daa
or
nop
and
out
or
int3
aaa
push
push
jb
lds
add
mov
push
orl
push
out
adc
rcll
push
lock
mov
out
sub
jg
dec
popa
imul
mov
push
leave
jns
fs
jle
sub
xor
and
insb
jmp
mov
mov
adc
mov
int3
ja
pop
pop
xchg
add
push
aas
stos
cli
jle
ret
xlat
inc
fcompl
push
mov
sbb
leave
mov
cmc
fdivp
xchg
aaa
and
lock
out
sub
fsts
jp
sub
add
jne
jnp
ljmp
mov
inc
or
movsb
and
mov
or
stos
mov
push
or
insb
sub
int3
daa
scas
les
scas
xor
sub
sbb
jb
dec
dec
inc
mov
icebp
or
mov
fisubl
pop
pop
rcl
push
cmpb
mov
mov
nop
test
cmp
and
addr16
cmp
popa
push
movsl
imul
push
insl
mov
push
ficoms
jl
add
sbb
xchg
jl
push
jp
addr16
ds
mov
gs
jmp
into
jns
enter
push
sbb
jne
mov
scas
cmp
push
jp
cmp
dec
cld
stos
cltd
jp
push
sub
mov
je
icebp
in
scas
push
and
cmp
xor
mov
mov
sub
inc
loopne
in
xchg
and
mov
pop
mul
enter
xorb
xor
xor
lret
fdivrl
test
fldcw
add
stos
js
test
xor
push
inc
xchg
push
nop
loopne
sti
cld
stos
and
int
xchg
int
roll
push
iret
testl
and
pop
in
add
mov
or
and
jns
xchg
push
rclb
push
lcall
sbbb
mov
sub
int3
lret
dec
jb
or
or
mov
or
mov
jbe
xchg
ret
or
pop
push
imul
xchg
lcall
pop
mov
jno
mov
sub
pusha
je
pop
jmp
imul
test
or
mov
fnsave
jmp
push
mov
mov
or
jo
adc
fisubrs
xchg
mov
adcb
arpl
test
popa
pop
adcb
adc
mov
xor
sbb
push
push
or
xor
nop
sub
jle
xor
and
cmpsb
sbb
das
jp
stc
loopne
adcl
fidivl
sarl
icebp
mov
ret
mov
aas
insb
shrb
xchg
repz
iret
mov
xchg
lahf
imul
pushf
fwait
dec
mov
inc
out
repz
out
and
sbb
xchg
lret
lock
xchg
enter
push
negl
int
inc
and
outsb
in
aas
leave
lcall
xchg
stc
cmp
cld
add
ret
repnz
inc
add
out
adc
into
pop
dec
push
int3
inc
sub
stos
mov
xchg
xchg
scas
inc
pmulhuw
icebp
std
xchg
stos
je
das
or
dec
mov
mov
movsb
das
mov
das
and
mov
or
pusha
push
and
pop
imul
movsb
cmp
int3
adc
xor
mov
cld
adc
xchg
sbb
mov
out
dec
mov
mov
cli
sub
adc
sub
jns
mov
repz
je
icebp
bound
xlat
lret
cld
xor
lods
cmc
push
loop
or
jg
jmp
js
add
lea
popa
stos
test
sub
jmp
in
sub
popl
jb
jl
gs
xchg
adc
cmp
dec
jo
stos
ljmp
ret
cmp
ja
or
sbb
aaa
jmp
dec
mov
cmpsb
scas
jo
sub
aam
dec
sti
add
movsl
sub
es
pop
jae
imul
dec
push
test
mov
jbe
and
mov
bound
sub
cmp
jp
sbb
inc
pop
cmp
pop
loop
addb
mov
mov
mull
and
and
xchg
add
inc
pop
dec
call
jae
push
mov
outsl
mov
int3
mov
cld
gs
ret
jbe
into
sbb
push
fbld
ljmp
pop
mov
cmc
in
cmp
xor
aas
stos
push
popf
add
rorl
and
jb,pn
pop
out
test
or
jmp
stos
test
dec
out
loop
push
inc
cli
or
sub
add
cmpsl
ss
and
aaa
adc
lcall
and
add
pop
in
stos
out
sub
ret
or
in
addl
cmp
idivb
and
data16
pop
ret
xor
mov
sbb
dec
dec
add
inc
icebp
out
jl
mov
or
adc
jecxz
movsl
aaa
push
sar
rcrb
mov
mov
mov
enter
add
or
jge
add
mov
fs
jo
gs
js
cmpsb
xchg
push
out
sub
clc
int
mov
lret
enter
mov
daa
jecxz
test
test
push
xor
pcmpeqb
xlat
fsts
movsl
ret
in
orb
add
mov
push
mov
jecxz
and
push
push
mov
cmp
shl
in
mov
stc
mov
addr16
ja
loopne
leave
stos
ret
jae
jbe
scas
cmp
rclb
push
andl
inc
cwtl
cmpsl
sbbl
xchg
and
xchg
mov
int3
iret
ljmp
js
repz
mov
lods
lret
fldl
mov
adc
jb
lock
rep
dec
fildll
into
adc
gs
cmp
xchg
xchg
push
int
cmp
mov
movsb
inc
into
rcll
daa
cmp
data16
sti
enter
rcll
jl
les
cmpsl
push
xor
xchg
popf
jge
jge
adc
lcall
das
inc
add
xorb
arpl
sbbb
mov
fadd
jne
popa
bound
jno
daa
sbb
cmc
insl
daa
rcll
adc
xchg
cmpsl
mov
aas
lods
or
dec
loopne
pushf
dec
xchg
push
jmp
fstps
cmp
add
lods
loopne
jno
mov
popa
aad
jmp
pop
lock
arpl
inc
mov
clc
xchg
pop
xchg
inc
mov
push
cmp
movsl
mov
movsb
shll
loopne
incb
sub
rcr
pop
jle
lods
repnz
jg
in
push
push
bound
mov
xor
mov
icebp
mov
mov
adc
pop
pop
fists
or
gs
mov
cwtl
fisubs
inc
ljmp
scas
cmpsl
fstpt
and
mov
out
mov
xor
jmp
test
push
aam
out
mov
pop
or
cmp
sub
pop
sbb
lods
arpl
cmp
popa
repz
fmuls
insb
pop
jae
movsb
xor
std
adcb
xor
ret
cmp
daa
cmp
pop
mov
lret
adcb
sbb
rolb
aaa
movsl
mov
jns
xchg
stos
leave
add
mov
pop
cwtl
xor
fcompl
dec
lret
lahf
addr16
out
rcrl
and
xor
and
push
mov
jnp
mov
mov
and
pop
clc
xchg
or
mov
pusha
cmp
jno
mov
int
addr16
push
ja
xor
fnstenv
fadds
gs
loope
cwtl
add
int
adcl
fcoml
ficomps
addr16
shl
pop
negl
rolb
inc
add
mov
push
int
fmulp
rclb
hlt
cld
int
dec
pop
imulb
mov
in
mov
enter
push
clc
sarl
xlat
mov
inc
adcl
iret
rolb
and
or
or
es
xor
popf
push
ret
add
cmp
xchg
adc
sbb
gs
pop
aad
xor
push
das
lods
sbb
or
es
sbb
jge
movsb
add
sbb
cmpsl
int3
insb
idivb
adc
xchg
lret
cwtl
xchg
inc
mov
sub
fistps
aaa
and
fs
in
mov
push
ficomps
mov
cmp
pop
jmp
push
jl
or
faddl
xor
fimuls
mov
xchg
dec
mov
stc
pop
insl
loope
shll
les
jns
in
xchg
cmpsb
inc
bound
insl
pop
mov
adc
sub
mov
mov
or
sub
testb
sbb
stos
daa
xchg
sub
out
aad
pop
fnstcw
ret
jo
cwtl
insb
lea
adc
movsl
xor
cli
lds
rclb
movsb
aaa
adc
sbb
pop
movsb
and
pop
push
daa
daa
outsb
adc
push
jo
inc
xor
mov
jae
or
mov
push
inc
aad
movsl
outsb
scas
mov
or
mov
dec
lret
fnstenv
and
pop
adc
xor
movsl
xchg
loop
test
dec
jns
test
addr16
mov
leave
ljmp
addr16
jge
push
clc
mov
xchg
lea
and
sub
shll
sti
add
xor
sbb
sub
mov
jne
std
imull
inc
sbb
push
add
inc
adc
scas
adc
movsb
jne
rcrb
pop
cmp
lods
aaa
fiadds
cwtl
adcb
std
push
stc
pusha
dec
add
cli
dec
jnp
push
add
mov
into
pop
push
jge
jo
loope
dec
lock
stos
adc
push
pop
mov
sti
jnp
jg
in
and
fmull
jo
das
mov
stos
mov
or
xlat
push
test
add
int
fsubrl
add
es
into
popa
inc
mov
loop
and
push
dec
mov
or
push
mov
imul
xor
pop
inc
mov
out
jge,pn
loope
mov
pusha
jp
pop
and
orb
xchg
xor
int3
xchg
nop
int3
and
inc
pop
into
mov
or
mov
jns
xchg
xorl
inc
or
loope
inc
js
inc
out
push
scas
into
test
scas
lods
and
sarb
fnstsw
mov
or
sub
or
sub
pop
rcrl
test
mov
aam
inc
inc
gs
and
ja
cmp
xchg
outsb
push
fildll
adc
mov
ror
das
xchg
scas
add
pop
dec
adc
xor
and
imul
cmp
popf
cmp
xchg
lahf
stos
adc
in
test
pop
mov
out
mov
call
adc
cmpl
popa
pop
adc
imul
psubd
cltd
sbb
sti
outsl
lret
and
jp
imul
cld
pop
stc
sti
adc
push
das
sub
or
sbb
pop
inc
dec
pop
and
repz
or
jnp
xchg
loope
jge
push
cwtl
out
in
mov
or
in
sbb
adc
and
adc
movsl
stos
fistps
fstpl
sub
dec
jmp
nop
enter
adc
jbe
dec
pop
in
ret
rcrb
xchg
mov
inc
mov
cwtl
aad
in
insl
pop
cmp
cld
rol
xor
xchg
clc
repz
push
out
outsl
fwait
mov
cmp
and
neg
inc
mov
ja
push
cltd
popf
daa
cmc
lea
sti
out
or
lcall
jbe
pushf
insb
hlt
lds
loopne
sti
xchg
mov
and
js
gs
cltd
test
out
pop
pop
adc
ja
xor
adc
inc
mov
xchg
pop
stc
sub
test
lea
jb
cld
push
in
and
fwait
pusha
pop
imul
push
xlat
sub
out
lret
push
outsb
insb
loop
xchg
popf
pop
add
push
mov
pop
push
xor
mov
fcmovu
jl
xchg
xor
call
lret
push
mov
mov
push
loope
test
jmp
cmp
add
lods
pusha
dec
xchg
call
jecxz
jg
leave
xchg
es
xorl
pop
xchg
push
and
hlt
sbb
add
or
das
xor
adc
outsl
test
xchg
lea
push
aas
pop
outsl
pusha
mov
xor
mov
enter
enter
fwait
mov
mov
insl
pop
hlt
dec
xor
jns
xchg
and
stc
mov
jecxz
loopne
fnstsw
and
sbb
fistpll
mov
lods
icebp
add
cmp
push
push
xchg
inc
cmp
mov
pop
push
outsb
dec
mov
repz
sub
pop
test
in
test
clc
stc
sti
pop
in
addr16
fs
sub
stos
fcomps
aaa
push
cwtl
mov
clc
cmp
xchg
xchg
call
mov
add
sub
repz
push
mov
ficoms
fs
in
in
dec
mov
mov
xchg
and
fcmovnu
and
add
fldcw
arpl
sub
popl
cwtl
sub
arpl
jne
add
dec
mov
jae
cmp
hlt
and
ss
or
mov
xchg
ret
mov
divb
ds
jmp
add
and
je
xchg
sub
sarb
mov
ss
sbb
negb
out
mov
out
ret
int3
push
xor
add
mov
mov
aam
clc
imull
aad
or
jnp
test
addr16
and
cmp
xchg
andl
jo
push
outsl
cmc
adc
adc
mov
dec
xor
shll
stc
loop
int
sub
sbb
mov
fbstp
or
cld
imul
fmull
pop
pop
ljmp
aas
fildl
ja
adc
testl
jp
jnp
loopne
add
mov
js
push
mov
cli
ret
gs
aad
adc
repz
push
arpl
mov
sbb
pop
pop
push
push
sub
sbb
push
test
cld
lea
mov
jo
pop
dec
and
pop
subl
inc
cmpsl
insb
pushf
xor
jmp
js
aas
das
and
cs
sub
mov
les
or
movsl
lock
ret
inc
and
hlt
sbb
pop
ret
es
mov
outsb
ret
jp
push
xchg
mov
pop
inc
push
adc
stc
lahf
fcmovne
pop
mov
out
adc
xlat
push
adc
cmp
call
or
test
stc
pushf
cwtl
jmp
adc
jne
lods
fwait
mov
pushf
divl
pop
inc
test
jmp
inc
test
push
sbb
xchg
sbb
jo
cmp
dec
and
bound
cld
ljmp
clc
push
or
loop
imul
cmp
je
scas
and
inc
jb
aaa
cli
pop
jp
mov
cmp
jne
push
out
loop
lea
inc
test
xlat
pop
or
out
jno
xor
call
js
add
or
jae
and
cmp
and
pop
or
adc
adc
mov
pop
fs
lahf
xchg
and
mov
and
sbb
mov
push
in
scas
in
inc
cmp
sbb
adc
pop
or
inc
fcoms
cmc
outsb
dec
fwait
pop
pop
and
cmpsb
shll
ffreep
jb
mov
std
cmp
jb
jmp
dec
stos
lea
bsr
mov
add
dec
inc
or
lcall
add
std
sbb
popf
dec
fisubl
call
inc
mov
cmc
addr16
xor
gs
inc
arpl
push
sti
popa
icebp
mov
ficomps
sub
pushf
stos
loop
adc
sbb
out
inc
sbb
xor
jo
std
icebp
xchg
loopne
inc
sbb
stos
push
mov
mov
mov
pop
xlat
or
stc
or
jno
mov
insb
cmp
inc
push
into
or
sub
in
addb
shlb
jnp
stc
mov
sbb
inc
int3
int
int3
aaa
dec
loopne
xor
dec
sbb
pop
insl
jmp
xor
mov
arpl
call
push
push
jg
or
add
inc
imul
xchg
mov
xchg
call
inc
jmp
cmp
jbe
dec
cmp
pop
shrl
mov
dec
push
dec
pop
ss
push
mov
cmp
cmpsb
xchg
mov
je
mov
xchg
shrb
xchg
pop
fldl
out
lea
mov
xchg
or
adc
pushf
push
scas
pop
sbb
add
xchg
mov
loopne
pop
and
add
cmp
or
xchg
in
repz
movsb
addb
pop
out
loope
mov
sbb
push
out
mov
mov
xchg
inc
pushf
mov
es
pop
push
mov
pop
fmull
sub
add
lret
adc
dec
shrl
adc
add
loope
das
cmp
mov
cmp
andb
push
cmc
je
lcall
inc
xlat
and
int
fldenv
xchg
shrl
ja
outsb
dec
out
mov
jl
aad
orb
inc
cmp
adc
rolb
fistpl
adc
mov
je
icebp
mov
dec
cltd
div
inc
jne
or
jbe
aam
dec
leave
test
push
lea
repnz
and
and
xor
outsl
xor
cmp
test
mov
jnp
push
dec
xchg
push
scas
cli
lods
stc
mov
jo
inc
sbb
dec
mov
jmp
xor
mov
fmull
insl
xor
sbbl
lods
inc
cli
xchg
xor
stos
adc
jle
sti
sarb
int3
inc
sub
mov
in
rcll
jge
data16
movsl
out
adc
fwait
xor
or
sub
arpl
dec
notl
inc
or
pop
cwtl
and
sbbb
dec
dec
inc
movsl
adc
or
js,pt
inc
inc
std
loopne
xlat
xchg
and
pushf
movsl
pop
mov
dec
pusha
in
popf
pop
es
bound
insb
fcmovbe
mov
push
add
inc
andb
push
lods
add
jmp
or
xor
xchg
in
out
cld
hlt
aaa
shll
insl
lods
pushf
mov
iret
dec
sbb
jl
out
pop
push
inc
adc
lock
test
cli
lods
cmpsl
pop
inc
sbb
ljmp
inc
jge
nop
push
inc
inc
lret
inc
roll
pop
fisubs
imul
cli
pop
mov
xchg
xchg
cs
or
xchg
in
stos
xor
jge
test
sbb
and
pop
popf
into
fucomi
ret
test
rcll
fadd
enter
js
mov
fstl
int
cmp
adc
mov
mov
sbb
orb
fcmovnbe
ret
dec
pop
mov
icebp
into
push
push
sbb
pop
dec
xchg
cld
ds
or
xchg
scas
jg
dec
shlb
mov
push
push
cmp
shll
adc
dec
call
data16
ljmp
mov
sti
pop
sub
ffreep
repz
xchg
or
xor
xchg
int
push
loopne
dec
inc
and
pop
or
pushf
fldl2t
push
pop
movsb
out
daa
fs
insl
fs
pop
fdiv
xor
inc
int3
fistpl
test
mov
sahf
add
ficoms
sbb
push
test
xor
mov
jns
adc
jb
add
jge
sub
mov
popf
pusha
imul
lret
in
mov
and
js
aas
jp
xchg
adc
cmpsb
add
lods
mov
mov
xchg
dec
xor
mov
push
out
and
xchg
sbb
popfw
add
call
das
out
push
das
push
sbb
test
add
divl
mov
xlat
fwait
xor
mov
cmpsb
out
or
call
rclb
add
mov
in
cli
cmc
fimull
imul
ja
je
add
jle
inc
jns
push
add
addr16
pop
ljmp
adc
inc
loop
inc
sti
fwait
mov
pusha
push
jle
loope
aad
loop
xchg
loope
mov
jp
xor
scas
scas
out
mov
pop
xor
mov
cmp
les
pop
cmpsb
cs
inc
sub
mov
xorl
jp
and
mov
mov
jns
loop
jo
inc
stos
mov
push
xchg
inc
into
pusha
cwtl
and
xor
sub
aas
pop
cmp
push
sub
xor
sbb
jp
inc
push
out
js
aam
xlat
xor
inc
out
push
mov
mov
popa
mov
mov
inc
pop
scas
clc
sbb
push
and
shrb
aam
dec
jp
ret
movsb
push
mov
xchg
pop
ss
inc
sbb
pop
addr16
cld
mov
aam
test
push
pop
fpatan
jmp
cmpsl
aas
enter
xorl
insl
cmovo
adc
ficomps
or
push
sub
sbb
jle
pop
stc
xor
inc
inc
out
enter
xor
rclb
fdivl
ret
cli
mov
into
ljmp
js
loope
add
sbb
fs
sbb
mov
dec
mov
pop
lahf
movsl
mull
into
int3
leave
pop
mov
mov
fmuls
push
xor
jns
lock
sub
test
inc
xchg
fiaddl
mov
jne
roll
loope
push
imul
out
mov
add
js
adc
pop
test
mov
out
mov
xchg
sbb
and
xchg
cmp
clc
adc
jle
bnd
xchg
mov
sub
gs
xor
sub
in
sti
mov
data16
push
jbe
popf
es
test
mov
pop
sbb
es
inc
dec
in
dec
xchg
mov
dec
sbb
cmp
mov
test
push
xor
mov
jnp
cmpsl
mov
mov
es
icebp
jmp
loopne
mov
cwtl
or
mov
ret
insb
and
mov
pop
xor
rcrb
sub
mov
pop
pop
adc
jg
pop
lea
xchg
jns
mov
inc
mov
inc
push
test
out
dec
jp
lahf
sbb
mov
cmp
es
in
cltd
pusha
xor
ret
sub
in
xor
cmp
cld
xor
aas
sahf
insb
mov
mov
sti
sbb
testl
lds
hlt
fisubl
out
lock
shl
ret
push
aas
jle
push
jl
clc
xor
enter
inc
popa
push
inc
mov
lcall
mov
jecxz
jnp
add
push
inc
in
sbb
ret
clc
sbb
jmp
xchg
in
test
xor
adc
sbb
call
icebp
dec
mov
shlb
and
pushf
loop
mov
add
stos
cs
insl
fstpl
xor
movsl
lcall
aas
or
fs
or
inc
jnp
and
pusha
mov
rol
mov
cmpsl
xchg
fildll
js
add
or
nop
sbb
es
jb
push
push
sub
ds
int
test
pop
push
pop
push
mov
nop
les
pop
jle
inc
xchg
sbbl
sub
subl
clc
or
pop
rcrb
outsb
lods
sub
lock
xchg
popf
push
mov
hlt
insl
mov
pop
sbb
push
loopne
out
dec
cmp
adc
inc
mov
mov
jecxz
cmp
pop
pop
daa
push
iret
jge
cmpsb
mov
lds
add
pop
stc
loope
push
push
and
sub
mov
push
jp
pop
sbb
pushf
mov
xchg
jmp
cld
dec
scas
cmp
pop
adc
addr16
xor
popa
push
dec
mov
int
in
jle
fcmovne
fisubl
pop
adc
mov
push
push
xor
cmpb
pop
mov
mov
jle
sub
or
repnz
fwait
or
mov
cmp
iret
nop
jbe
idiv
xchg
push
jle
pop
es
jne
movsl
push
rclb
js
stc
clc
push
sahf
xchg
dec
add
jmp
and
cmp
adc
adc
lret
dec
fsubp
push
dec
mov
lcall
mov
popf
pop
shlb
int3
ss
div
fnstsw
and
loopne
jmp
and
adc
mov
adc
fwait
mov
mov
mov
push
adcl
push
mov
leave
adc
fldl
or
enter
cmp
and
mov
add
loope
outsb
imulb
push
into
lock
push
jae
das
fnsave
test
fidivs
cwtl
adc
movsb
jns
es
push
pop
cmp
fdivrs
adc
sbb
jecxz
popf
outsb
inc
je
ds
and
jae
in
push
inc
es
cmp
mov
add
pop
cmp
push
pop
out
sbb
mov
sahf
xor
adc
aad
or
test
fsts
fidivs
cmpsb
mov
xor
xchg
cmp
cmpsb
mov
push
xchg
dec
and
cmp
scas
ret
repnz
mov
add
xor
inc
xchg
repz
call
or
sub
stc
or
stc
ficomps
and
stos
xor
sbb
mov
aad
inc
inc
mov
inc
jbe
mov
mov
or
test
stc
sub
addb
data16
rclb
out
push
xchg
out
push
arpl
gs
mov
xor
sbb
xchg
lret
out
aas
sub
sbb
lcall
mov
cmp
cmp
ds
lahf
test
or
fsubs
xlat
sbb
xchg
nop
bound
xlat
inc
xchg
mov
lret
sbb
jno
cmpsb
movsb
add
fstpl
mov
xor
mov
jg
push
mov
mov
loop
dec
lret
int3
xchg
imul
sub
ret
loope
loop
cwtl
into
xor
xchg
jge
ja
mov
mov
sub
cld
scas
xor
cmp
data16
test
mov
jnp
repnz
mov
repz
jne
cmp
xchg
inc
mov
andb
xor
cmpb
jmp
in
test
jne
or
sub
je
orb
pop
aaa
xchg
pushf
loope
popa
xchg
lock
jmp
jae
push
adc
call
add
jl
cmp
inc
ds
xor
xchg
mov
ror
pop
mov
je
stc
popa
std
jo
test
xorl
mov
ret
fisubl
es
repz
sti
or
xchg
and
cld
decl
mov
pusha
cmpsb
mov
inc
cmc
xor
sub
inc
push
cltd
fbstp
sub
xchg
ja
mov
lock
fdivs
sbb
lret
mov
inc
pop
repz
inc
andl
cld
fldl
insl
in
sub
sub
fsubs
mov
out
xchg
push
push
jne
fmull
in
jg
addr16
inc
int
imul
inc
jmp
mov
mov
add
insb
push
stos
dec
shll
out
inc
xchg
add
out
mov
mov
push
test
cs
cld
icebp
lock
jmp
or
inc
dec
imul
idivl
sub
pop
mov
in
ret
push
outsl
mov
or
subl
lahf
cmp
cmpsl
mov
iret
mov
ret
sbb
sti
clc
adc
add
clc
jge
xor
cmp
sub
inc
cli
in
dec
mov
mov
xchg
paddw
movsb
scas
inc
pop
push
sahf
add
jb
xlat
mov
ljmp
aad
adc
out
lock
jo
cmp
movsl
inc
add
call
jle
fcom
cmpsl
cmpsl
add
mov
jp
in
sub
orl
add
jbe
xor
add
popf
xor
adc
dec
imul
outsb
sbb
mov
enter
and
jp
out
out
inc
jmp
mov
xchg
jb
dec
call
mov
out
add
sbb
pop
pushf
lcall
imul
cmpsb
lods
lods
lock
in
xorl
call
fimuls
adc
sti
ret
lahf
jmp
mov
sbb
add
insb
test
mov
stos
loope
ja
and
mov
sbb
xchg
movsl
jecxz
js
lock
push
xchg
cmp
in
xchg
xor
and
aas
pop
in
mov
repz
dec
mov
cmpsb
dec
nop
sbb
cmpsl
pop
mov
mov
add
cmp
or
xor
cmp
mov
sub
mov
outsb
fsub
icebp
pop
movsb
loop
sti
xor
sbb
pushf
lcall
inc
int
jg
adc
insl
sub
subb
ret
xorl
decl
mov
push
cmp
lret
ljmp
out
mov
hlt
or
scas
mov
xor
pop
push
xchg
or
fldcw
js
adc
push
das
scas
dec
mov
cmpsb
sub
mov
xchg
fiaddl
mov
dec
add
lods
outsb
rcl
cmp
mov
xor
das
pop
mov
addb
xchg
movsb
push
loopne
loope
jg
std
insl
sarb
out
push
mov
mov
push
add
cmpsb
and
mov
xor
int
lds
pushf
pusha
push
add
aad
pushf
push
divl
mov
mov
ljmp
push
out
sti
mov
and
ss
xchg
xchg
mov
cmc
fidivrl
out
sub
ret
cmp
or
cli
fcomps
xor
enter
ss
pop
insb
rcr
cmp
and
inc
xor
ss
popa
ret
sub
jecxz
lcall
out
icebp
repz
shl
fcomps
mov
out
jecxz
int
and
push
into
mov
xchg
mov
int
pop
loopne
mov
mov
lock
cmp
ja
std
inc
or
dec
jecxz
or
jo
fsubrs
out
sub
mov
test
lods
jno
cld
dec
stos
fcoml
lcall
cwtl
jo
nop
inc
ss
push
cmp
subl
sub
xchg
xchg
aas
ljmp
add
popa
adc
jnp
daa
jl
cmp
shlb
and
jp
lock
mov
inc
fisttpll
push
cmp
roll
push
dec
sub
or
add
jle
lret
out
push
divl
or
xorb
int3
xor
movsb
rorb
lahf
push
pop
nop
addb
shll
dec
js
xchg
mov
mov
cli
push
lock
loopne
lods
pop
inc
add
imul
mov
cmp
adc
dec
sub
adc
dec
pushf
mov
mov
push
xlat
stc
mov
shlb
or
pop
in
loop
xor
sbb
repz
repnz
adc
imul
rcl
in
daa
push
mov
test
xor
loope
mov
and
stos
xchg
adc
fcoml
xchg
sub
jbe
ja
mov
mov
sub
mov
mov
addr16
sbb
cmc
movsb
mov
mov
push
insl
cltd
les
stos
mov
rorl
ja
dec
test
les
loopne
dec
outsl
pop
cmc
int
pop
scas
cmpsb
inc
js
int
fxch
jge
out
cmp
movsl
pop
jae
sub
lret
fdivrl
push
outsl
mov
pop
pop
mov
adc
filds
loopne
jl
mov
pop
mov
repnz
fsub
push
out
lea
loope
jno
xchg
test
dec
pop
pop
adc
adc
stos
mov
xchg
pop
ficoms
add
mov
test
ret
dec
lcall
xchg
fists
movl
or
cmc
inc
fcmove
lds
inc
cmp
outsl
movsb
jg
loope
mov
pop
push
push
xchg
mov
sbb
test
test
mov
cmpsl
pop
sbb
scas
arpl
adc
pop
inc
shlb
jmp
cmp
fwait
mov
push
into
pop
lahf
movsb
adc
or
cmp
into
jmp
xchg
sbb
insb
push
inc
or
mov
mov
scas
cli
test
mov
and
jecxz
das
in
xor
xchg
movsl
adc
iret
lods
out
lret
inc
push
pusha
adc
mov
imul
xor
scas
das
fmul
mov
sbb
pop
mov
shl
sbb
pmuludq
popa
loopne
pop
popf
cltd
cs
aaa
rcrb
in
repnz
mov
sbb
dec
push
pop
lds
push
fsubs
pop
mov
push
enter
xchg
push
sti
je
add
std
xor
arpl
xchg
and
repnz
lcall
sbb
mov
in
fsub
cmp
fisttpl
dec
or
mov
mov
sarb
add
test
loope
dec
ss
mov
pushf
cmp
cli
push
int
ss
iret
lahf
or
push
inc
or
sub
rcrb
outsl
lock
or
rol
jns
sbb
iret
mov
mov
mov
add
mov
out
sub
rcll
jnp
ret
fs
nop
sbbl
dec
xor
insl
lret
and
gs
sub
cmp
in
dec
fisubrs
jecxz
push
pop
aam
fisubl
mov
aaa
ret
popa
ss
aas
call
test
js
rclb
fbld
cmpsl
sub
xchg
pop
pop
cmp
xchg
lret
clc
rclb
cmpsb
ror
pop
add
sub
xchg
pop
jbe
sahf
cmp
adc
je
mov
pop
adc
repnz
hlt
fwait
es
data16
pop
sbb
mov
xor
xor
xchg
lods
inc
mov
clc
scas
in
in
ret
nop
ret
in
icebp
dec
push
mov
cwtl
ret
inc
mov
mov
cmpsb
addl
fdivrs
mov
inc
fidivrs
data16
testb
push
clc
jnp
mov
jnp
pushf
xchg
iret
in
rclb
arpl
daa
loop
or
jmp
push
sub
cld
push
push
aad
fstl
out
xchg
xchg
rorl
cmc
add
or
sbb
lahf
and
adc
xchg
push
xchg
fidivrl
icebp
jae
arpl
movsb
int
adc
jecxz
mov
cmp
add
add
mov
addr16
fs
add
cs
fsubrl
lods
enter
xor
push
mov
rcrb
in
and
dec
imul
xchg
jle
rcrb
int3
aam
xor
push
xor
iret
inc
cmp
xchg
adc
mov
test
sbb
mov
std
or
sahf
in
ljmp
jne
addr16
cmp
ds
or
movsl
jge
rcl
mov
inc
mov
push
jecxz
add
scas
lahf
xlat
add
int3
add
cmc
pushf
rclb
nop
cwtl
adc
xchg
ffree
fcmovb
jecxz
push
movsb
fildll
fs
fsub
dec
arpl
push
xor
cs
jle
test
loop
xor
pop
out
das
popa
popa
push
mov
call
ljmp
mov
dec
xchg
push
or
mov
dec
adc
inc
jmp
rolb
test
loope
aam
cmp
js
outsl
loop
aad
adc
popf
cltd
dec
dec
jno
adcl
and
inc
pop
ret
xchg
pop
cmpsb
sbb
sbb
data16
pop
mov
aam
jns
stos
push
xorb
mov
insl
adc
fildl
jecxz
jge
or
push
or
addb
lock
gs
push
xorb
roll
ror
jno
pop
fadd
enter
fisttps
out
mov
and
out
lea
clc
inc
inc
orl
sti
nop
mov
push
xchg
arpl
fwait
or
dec
xchg
xchg
cs
les
add
jae
xchg
mov
in
or
jl
dec
push
ficomps
mov
lds
imul
push
pop
jmp
dec
or
xchg
jg
push
add
xor
push
push
mov
fsubrs
cmpsb
mov
loope
jne
ds
and
test
jl
jle
xor
lcall
arpl
sub
stos
fstps
pusha
dec
jb
xchg
sahf
fadds
data16
jnp
insl
out
or
clc
cmp
cmp
mov
mov
call
aad
insl
lock
idivb
mull
stos
mov
movswl
pop
push
out
pop
call
cmp
shl
mov
insl
adc
mov
cmc
aam
push
pushf
and
mov
and
aaa
cmp
or
jne
out
addr16
pop
mov
mov
in
jns
and
mov
or
sub
arpl
jle
pop
pop
push
movsl
mov
mov
jg
pop
push
andb
mov
push
xor
sbb
fnsave
lahf
dec
out
sub
mov
popa
mov
mov
mov
mov
dec
aas
jmp
movsl
loop
imul
inc
adc
mov
xchg
mov
test
ja
push
mov
push
lret
pop
sbb
clc
sub
mov
pop
test
cmp
inc
ljmp
cmp
sub
or
test
dec
inc
notl
jno
pop
sub
mov
test
sub
repnz
fldenv
stos
addb
fs
cltd
pushf
arpl
add
int3
outsl
or
mov
xchg
jg
repnz
mov
addb
and
subl
mov
vpunpckhdq
sub
xor
push
push
into
mov
fistpl
test
gs
gs
mov
mov
xchg
iret
add
sbb
jae
push
jmp
mov
cltd
and
jo
push
in
pop
mov
stos
rorb
rorl
adc
stos
subb
jmp
lods
sbb
in
push
xchg
fbstp
fldl
xchg
adc
icebp
cltd
shll
pop
fimuls
inc
div
jl
repnz
cs
std
out
in
fildll
test
call
sub
ljmp
mov
and
cmpsl
sbb
jne
jge
dec
mov
insb
out
sub
and
movsb
inc
mov
xchg
push
sub
pop
sarl
jp
out
bound
dec
xchg
out
xorb
js
enter
adc
sub
xchg
in
es
iret
repnz
ja
xor
call
repz
sar
cmp
push
mov
fcmovbe
ret
and
dec
add
sar
xchg
imul
fdivrl
push
cmp
xchg
and
pusha
or
inc
adc
xorl
mov
movl
daa
inc
jae
jg
popa
pop
movsl
and
cwtl
push
rolb
ret
or
or
es
pop
into
subl
lret
jecxz
shl
ret
add
push
stos
adc
je
fisubrl
or
inc
xchg
add
lods
xor
dec
add
mov
push
pop
inc
pop
loope
pop
scas
aad
cmpsb
cltd
pop
out
aaa
lret
or
repz
mov
pop
mov
dec
ficoms
movsb
shl
mov
adcl
in
xor
roll
pop
je
lods
xchg
lock
jbe
mov
add
arpl
push
pop
movsb
adc
push
add
arpl
lods
pop
insl
add
fstl
jo
mov
shll
mov
aam
and
mul
aaa
xchg
pop
dec
outsl
repz
mov
fs
aaa
fcmovnu
and
test
pop
les
inc
inc
xorl
and
sub
sub
cmp
add
push
or
out
js
bswap
cmpsl
jmp
mov
jno
cwtl
push
out
jmp
pop
ret
dec
dec
sub
pop
mov
xorb
or
popa
in
rcll
xchg
add
pop
leave
rcll
fldenv
loope
cmc
pop
rcrb
mov
cmp
out
repnz
jno
lock
pushl
stos
popl
test
stc
in
daa
inc
movsb
push
sbb
adc
adc
xchg
jg
xlat
mov
repnz
das
sbbl
mov
or
xchg
shr
add
xchg
dec
sbb
xor
xchg
inc
inc
mov
ficompl
popa
mov
cwtl
fildll
es
insb
xchg
cmp
push
gs
and
insb
cmp
cs
repnz
shrb
out
leave
or
aad
mov
lcall
fbld
mov
cmp
add
pavgw
push
fiadds
pop
das
dec
leave
jno
js
dec
testl
xchg
sub
mov
fsub
jg
jb
lcall
xor
sub
adc
rolb
mov
lahf
cmp
mov
xor
add
jp
insb
push
pop
push
leave
pmulhuw
push
cmp
rclb
mov
cmc
inc
clc
stos
mov
mov
in
push
mov
cmp
packssdw
and
pop
or
ret
incl
jmp
aas
mov
sarb
les
jmp
xchg
addl
lahf
xchg
insb
pop
fisttpl
lcall
dec
cmp
fildll
sbb
cmpsb
add
aam
in
jmp
sbb
test
out
push
jp
jno
push
dec
add
daa
xchg
rolb
orl
fwait
ds
aaa
xor
mov
push
xchg
sbb
ja
sbbb
cwtl
mov
inc
in
jle
and
xchg
push
clc
mov
and
sarb
pusha
outsb
in
mov
pop
cmpsl
movsl
out
aam
mov
adc
jge
cmp
or
or
lock
and
ret
dec
out
lock
sti
shl
shlb
andl
sbb
cwtl
sub
dec
popa
cmp
aad
dec
mov
mov
cmp
cli
dec
dec
xor
mov
xchg
mov
test
mov
movmskps
xor
push
test
loop
in
xchg
mov
decb
ja
dec
adc
inc
subb
lret
xchg
xor
mov
jnp
repnz
push
imul
dec
jmp
ljmp
pushf
jle
out
loop
add
pop
sub
addr16
pop
fwait
cmp
pop
mov
inc
sub
fdivr
mov
clc
dec
xchg
adc
iret
adc
push
addr16
ja,pn
xor
addr16
cmp
jmp
movsl
push
ja
pusha
cld
addl
lea
inc
rol
jmp
mov
dec
xchg
dec
dec
sbb
gs
xlat
stos
jo
mov
mov
cmp
data16
adc
in
arpl
insb
push
divb
arpl
loopne
sub
jo
jecxz
sub
mov
test
rcr
sbbl
push
test
cmc
pop
pop
call
pusha
or
daa
aad
mov
and
mov
push
push
push
clc
pusha
negb
jle
mov
or
push
mov
mov
fdivrs
and
les
pop
cmp
mov
out
test
pop
icebp
inc
lret
test
dec
into
scas
add
xchg
movsl
and
jae
mov
in
data16
cmpsl
lods
jle
jne
lea
bound
push
cmp
mov
push
shl
jl
pop
in
js
imul
mov
aas
xchg
xchg
or
rolb
iret
sbb
clc
shlb
fisttpl
xchg
and
dec
sbbl
enter
lret
cltd
xchg
aaa
jne
andl
cmp
pop
mov
outsb
mov
shll
xchg
es
pop
pop
push
paddb
or
xor
fcomps
xchg
gs
ret
cmpsb
dec
out
sbb
adc
adc
imul
mov
jg
mov
inc
test
xchg
pusha
dec
pushl
pop
fs
in
jge
sahf
cli
icebp
js
and
stos
leave
es
loop
dec
sti
test
jno
sbb
lret
movsb
mov
add
in
xchg
dec
inc
pop
pop
repz
inc
pop
or
fmull
jle
loopne
xchg
aad
je
loop
mov
fwait
push
or
jb
sbb
in
inc
xor
xor
xchg
dec
repz
es
daa
addl
xor
push
push
add
rcll
aaa
xchg
push
jle
popa
jecxz
jge
and
lock
inc
and
sbb
jne
cmp
mov
sbb
or
fidivrl
in
loopne
and
xlat
adcb
rcl
mov
cmp
daa
stc
scas
sub
mov
pop
test
add
scas
push
inc
daa
mov
inc
int3
mov
ja
xchg
xor
js
push
in
dec
lods
andl
xchg
mov
and
clc
pop
enter
sub
mulb
push
pop
outsb
or
mov
jmp
repz
jne
or
in
or
add
out
pop
mov
enter
or
inc
int3
mov
jno
jo
inc
xchg
cs
je
lock
dec
adc
dec
lods
sub
mov
rcll
mov
test
add
xchg
lock
in
nop
cmpb
insl
popa
lahf
lahf
stos
pusha
jbe
inc
xchg
pop
in
ret
stos
loope
add
xchg
xlat
inc
xor
std
and
mov
adc
aam
popa
sbb
lcall
lods
or
dec
mov
lods
add
inc
mov
hlt
inc
cwtl
fwait
lahf
shlb
xor
inc
pop
imul
jle
xorl
sub
in
aaa
cltd
mov
jbe
mov
push
push
mov
call
and
outsb
or
nop
add
testb
fwait
dec
sahf
cmpsb
cmp
dec
pop
dec
add
and
in
adc
je
sbb
bound
aas
adc
jno
or
mov
ljmp
mov
test
xlat
push
dec
push
sti
out
or
cmp
std
pop
in
sub
ret
das
pop
lods
lds
loop
pop
scas
add
fsubrl
xchg
xor
jo
xchg
push
cwtl
push
xchg
add
pop
mov
or
or
sub
movsb
push
fidivl
jo
pop
mov
mov
test
stos
xchg
add
fadds
arpl
mov
cltd
lret
imul
loopne
inc
sub
inc
fwait
out
mov
sti
xlat
cltd
lods
daa
subl
inc
xor
dec
adc
and
lods
addl
sbb
rcrl
out
cmp
push
pop
in
fsub
leave
jno
test
dec
inc
push
pop
mov
and
hlt
mov
ror
pop
xchg
push
push
push
xor
mov
fldl
call
pop
lods
jg
ja
pop
sarl
or
mov
mov
cld
add
ja
stos
lcall
dec
test
rolb
inc
js
pop
enter
out
mov
roll
add
jne
popf
and
lock
pop
pop
cmpsb
add
cmp
test
mov
jnp
bound
pusha
jp
inc
fsincos
mov
mov
mov
xor
inc
jno
jne
mov
sarb
int3
jg
in
lret
push
stos
testb
stc
lret
loopne
shll
mov
fs
aam
and
aas
orl
or
fadd
icebp
iret
mov
push
adc
adc
mov
jb,pn
add
call
cmp
dec
mov
mov
push
xor
jno
ret
push
push
mov
add
adc
jg
or
and
imul
mov
out
dec
sbb
lcall
pop
add
aam
popf
adc
and
and
repnz
es
lret
scas
dec
cmp
xor
inc
dec
cmp
pop
jno
xor
in
add
sar
mov
cmp
in
mov
jne
mov
mulb
add
outsl
xchg
sbb
mov
sarl
lahf
ret
ret
xchg
aad
add
xor
push
xor
cli
fwait
call
inc
shl
xchg
mov
std
js
push
stos
insb
hlt
fistpll
ss
mov
sahf
or
lcall
jle
rolb
sub
pop
pusha
sub
jne
push
push
xchg
rcl
or
mov
ljmp
repz
lret
leave
fs
das
cmp
cli
mov
rol
clc
jae
push
out
dec
test
adc
in
clc
std
je
orl
adc
mov
push
lock
jle
xchg
fwait
arpl
jge
inc
dec
cmp
lods
jmp
mov
das
jne
shlb
std
push
mov
xchg
xchg
mov
sarb
jecxz
push
insl
pop
push
mov
xchg
lcall
bound
jo
xor
push
daa
arpl
out
cwtl
xor
mov
push
aad
push
pop
idivl
sub
mov
cmpsl
stos
jo
sbb
adc
inc
pop
ds
push
stos
sbb
xchg
adc
ja
dec
push
std
fs
imul
jnp
lea
in
mov
test
sub
outsl
imul
add
push
decb
push
test
adc
xchg
add
lea
dec
and
lds
mull
mov
sbb
es
or
stos
ficomps
sahf
lea
loop
movsb
jnp
std
sub
sbb
xchg
lret
gs
sub
xchg
lock
ds
mov
xorl
leave
push
sub
cmc
mov
dec
inc
js
pop
adc
in
and
fsubrl
mov
or
std
mov
xchg
xor
fcomi
stos
xchg
ljmp
lea
mov
scas
sbb
or
sub
lock
jle
outsb
mov
pop
rcl
popa
mov
mov
dec
cmpsb
jmp
pop
jnp
add
ret
adc
inc
cmp
hlt
inc
lods
mov
mov
rol
xor
inc
or
sbb
jae
lcall
ds
sti
pop
mov
dec
or
mov
adcl
xchg
addr16
cmp
imul
shrl
xchg
popf
divl
mov
dec
mov
lret
sub
outsb
pop
fistl
std
push
aas
push
lea
fsubl
aaa
jmp
xor
ja
pop
mov
ss
cmc
divl
dec
mov
ss
out
les
addr16
sbb
lahf
in
clc
and
ljmp
cmp
into
stc
pop
popa
test
out
pop
push
cld
or
lds
icebp
mov
mov
xacquire
cld
cwtl
cltd
xor
cwtl
sbb
inc
scas
std
pop
xchg
mov
sub
call
ret
dec
adc
or
insl
aas
cmp
cmpsl
std
mov
into
rcr
mov
punpcklbw
jns
mov
adc
mov
jnp
movsl
jge
dec
pop
jb
cmpsl
repnz
int3
int3
cmpsb
add
mov
sub
ja
nop
iret
lock
mov
mov
test
lret
sbb
add
mull
es
mov
nop
and
rcll
xchg
int3
lock
or
push
push
xor
xchg
add
addl
lods
add
or
pop
pusha
subl
add
mov
lods
xor
hlt
or
mov
aam
sahf
lods
bound
cmp
and
jp
out
movsl
xor
or
jge
cmp
in
xor
cs
test
nop
jnp
and
test
jne
pop
shlb
ret
imul
fucompp
inc
sbb
dec
add
push
lea
or
sub
xchg
mov
pop
dec
in
into
adc
jl
rclb
dec
scas
cmpsl
mov
divb
cld
int
ja
cmpsb
xchg
pop
mov
ja
insb
pop
or
xchg
inc
or
inc
inc
ss
jns
insb
clc
adc
cltd
xchg
outsl
jl
jae
out
jbe
sub
add
xchg
mov
ljmp
push
cmp
dec
and
jp
aad
and
and
sub
vpinsrd
into
xor
and
in
sbb
dec
aam
addl
out
rclb
test
lcall
es
insl
mov
mov
inc
sub
mov
mov
xor
and
lods
jae
mov
pop
inc
das
pop
xchg
add
sub
xor
out
or
mov
dec
sbb
sbb
and
aaa
pop
mov
stos
jb,pt
mov
les
and
cmpsb
dec
dec
mov
out
pop
jnp
nop
arpl
mov
mov
es
stos
and
repnz
lcall
mov
or
int3
js
incb
push
rorb
sbb
cwtl
jb
stc
dec
push
mov
sbb
cmpsb
fincstp
or
enter
js
rcrb
dec
into
inc
pop
lock
int3
xor
outsl
test
sbbb
xchg
mov
mov
popa
mov
addl
dec
xchg
push
fdiv
pop
aas
movsb
mov
ja
ja
lcall
jle
int3
push
stos
fsubrl
mov
push
into
lea
popl
push
mov
and
pop
add
addl
iret
dec
or
mov
lods
add
movsl
pop
or
fwait
pop
lods
push
push
fisubrl
dec
jo
sub
pop
lahf
or
mov
and
out
jo
xchg
mov
je
popf
jno
xchg
sbb
aaa
pop
sub
adc
lods
mov
mov
or
dec
nop
dec
jne
mov
jo
mov
dec
fistpl
xchg
sbb
adc
push
out
push
add
enter
cmc
jmp
cltd
filds
lret
add
ret
xor
mov
test
mov
lcall
xchg
stos
mov
pop
aad
cmp
dec
xchg
push
lds
mov
sbb
inc
mov
and
cmpsb
test
mov
pop
cmp
lock
push
xor
lds
add
mov
lds
insl
xchg
sahf
cltd
add
mov
xor
jnp
mov
push
mov
sbb
hlt
sub
jae
rclb
shlb
mov
mov
arpl
mov
inc
subl
popa
push
decl
adcb
mov
sbb
lret
mov
int
stc
push
fwait
pop
cli
pop
jo
or
pop
cmp
xchg
xor
inc
xchg
loopne,pn
inc
mov
add
jp
fisubs
xchg
push
data16
repnz
sbbb
pop
pop
cmc
push
mov
xor
mov
ret
rcr
xchg
dec
dec
push
ret
or
cmpsb
mov
mov
add
pop
xchg
mov
adc
pop
jmp
aaa
mov
adcl
pop
xchg
xchg
xor
mov
divb
idivw
data16
sub
sbb
pop
sub
insb
sbb
inc
mov
jle
ret
leave
jo
adc
jb
mov
adc
inc
add
cltd
jb
test
or
or
dec
push
xchg
mov
rcl
mov
sbb
adc
das
pop
pop
mov
sti
test
jne
add
pop
xor
mov
dec
int
xchg
jno
sbb
add
push
js
adcb
mov
jnp
cmp
stc
push
xchg
das
stc
dec
lock
adc
jo
repz
inc
sub
loop
sbb
outsb
sbb
pop
in
mov
push
mov
sbb
sbb
in
jb
out
in
mov
or
pop
hlt
fcoms
fnstcw
andl
in
pop
sti
and
cmp
movsl
xor
insb
lret
mov
sbbl
int3
jg
shll
pop
xor
push
jge
iret
cmp
sub
or
lods
outsl
cmpsl
jae
jl
ret
lahf
jnp
pop
cmp
rcrl
fistps
dec
push
ficoml
jbe
dec
hlt
imul
shl
ja
mov
xchg
jae
add
dec
or
cmc
jge
xchg
loopne
pop
pop
scas
mov
and
in
andl
push
fldl
mov
or
add
ficoms
mov
loop
arpl
enter
cmp
push
arpl
stos
xchg
data16
sub
mov
adc
fldlg2
push
sti
push
mov
sbb
pop
jmp
sbb
mov
insl
inc
lcall
iret
pop
lods
out
pop
shll
add
out
push
mov
inc
jno,pt
jno
pop
cmp
and
scas
and
dec
in
pop
ds
leave
mov
pop
or
cmp
xor
in
scas
imul
push
push
subb
xchg
and
sub
xchg
xor
insb
sbb
stos
mov
xor
mov
mov
mov
daa
insb
int3
lods
xchg
imul
fnstsw
add
mov
cltd
aaa
lret
push
jecxz
insb
adc
movsb
mov
stc
adc
lea
or
in
loopne
jns
or
imul
pop
lods
pop
mov
sbb
or
jae
mov
inc
dec
fwait
psubusb
test
dec
and
jno
xor
jne
daa
lret
testb
dec
jbe
mov
jl
cmp
jns
pusha
cmp
lds
icebp
push
dec
push
lret
loop
jmp
mov
rcrb
or
arpl
xor
es
lock
dec
fwait
pshufw
push
shlb
jecxz
jbe
xchg
mov
les
and
cmpsb
cmp
mov
sbb
jmp
pop
dec
xor
and
fbstp
lock
push
adc
call
cli
out
das
sbbb
pop
popf
mov
ljmp
pop
add
ss
imul
pop
dec
sahf
xchg
sbb
mov
mov
leave
sbb
test
cmp
insl
into
inc
mov
nop
outsb
add
imull
mov
pop
dec
mov
push
push
cmpsl
xor
aaa
loopne
insb
pop
cmp
bound
xor
jns
scas
jno
iret
lahf
sbb
jae
inc
data16
push
mov
push
je
iret
pop
pop
dec
xor
xchg
or
outsw
bound
jg
aad
rorb
lcall
fmul
push
shrl
jle
addr16
dec
insl
and
mov
int3
xor
add
cmp
pop
in
xor
sbb
xchg
sub
int
sub
mov
lret
add
push
dec
sbb
aam
mov
dec
sahf
add
adc
cmp
mov
mov
xor
cmc
rolb
mov
mov
das
jns
fsubr
pop
jnp
mov
iret
inc
or
add
or
enter
test
sub
add
mov
cmp
sbb
pushf
mov
out
das
sbb
or
ja
imul
sbb
ds
mov
mov
cmp
insl
mov
cmp
jmp
daa
pop
loop
dec
push
fmuls
outsb
shlb
sahf
std
clc
add
sahf
rcrb
sbb
mov
pop
jno
js
sub
bound
lods
sbb
iret
dec
or
leave
jecxz
nop
inc
int
aaa
fsubl
or
sub
inc
das
mov
xor
xchg
lea
inc
inc
outsl
lds
xor
or
lds
aad
addr16
mov
add
cmpb
or
je
imul
leave
lds
jmp
ljmp
push
xchg
lret
jno
test
xchg
push
push
dec
popa
imul
nop
int3
mov
mov
sbb
fistps
pop
cmp
int
sub
jo
and
and
push
fldenv
aas
stos
push
mov
jge
std
aaa
xchg
mov
std
out
jb
arpl
pop
daa
test
test
and
jbe
push
rol
rcrb
gs
cmp
jb
arpl
loopne
sbb
test
aas
cmp
arpl
jge
shrb
call
cmp
jge
dec
fidivrl
aam
pop
jle
or
lret
iret
daa
std
cld
push
add
mov
or
adc
orb
inc
stos
loope
ljmp
mov
cmp
xor
sbb
rclb
into
dec
add
sbb
addr16
inc
iret
mov
add
push
adc
sti
xchg
and
mov
movsl
adc
inc
jnp
xor
sub
sbb
clc
stc
bound
mov
fs
pusha
cli
outsb
std
mov
out
adc
pop
test
lock
stc
std
stos
int
pop
inc
push
int3
pop
fists
push
and
cmp
imul
sbb
test
cltd
ss
nop
push
sbb
and
mov
sti
rcr
or
repz
loop
inc
fistpl
dec
mov
jg
mov
sbb
cmp
pop
enter
es
inc
mov
fbld
push
aad
pop
xchg
sub
mov
push
sbb
fcoml
fstl
and
es
sbb
push
fsubl
mov
hlt
mov
xchg
mov
stos
bound
sub
sarb
pusha
dec
ds
and
and
loop
dec
ja
and
push
push
mov
dec
pop
outsl
mov
out
add
xchg
adc
push
jle
and
mov
fisubs
fidivl
lods
popf
pop
inc
aad
lahf
dec
cmpl
in
int
xor
mov
fbld
adc
sahf
jg
or
enter
data16
sahf
pop
cmpsb
dec
and
movsl
jns
or
jle
cmp
fistpl
out
jb
xor
sti
or
push
mov
cmpsl
sahf
mov
mov
cmp
mov
mov
push
fcmovnbe
addr16
lret
adc
ss
imul
test
dec
addr16
cli
int3
aam
push
mov
test
push
xchg
add
or
cmp
mov
es
add
or
bound
insl
div
rcrb
cwtl
jge
push
pause
inc
stos
call
movsb
lahf
pop
pushf
ror
scas
loopne
pusha
sbb
data16
in
aad
adc
jl
adc
addr16
add
mov
psraw
mov
cmc
sbb
mov
push
adc
ret
pop
jp
pop
fcoms
mov
pop
cmpsb
xchg
inc
push
test
xchg
test
and
addr16
arpl
aam
mov
jbe
lcall
sbb
add
vprotb
xchg
out
sbb
test
cmp
fstl
jp
adc
adc
rclb
fmul
scas
or
sbb
mov
sbb
stc
in
or
jno
loope
lret
loopne
jo
jne
mov
xor
xchg
bswap
in
rorb
xor
or
add
repz
push
xchg
lahf
mov
pop
inc
sub
sbb
lcall
loop,pn
mov
jnp
jns
or
ljmp
lock
das
sbb
pop
inc
mov
std
inc
sahf
pusha
and
out
popf
cmp
dec
push
andl
cmp
out
int3
pop
out
out
or
mov
rorl
cmc
pop
push
pop
push
jl
cmp
jecxz
shl
and
sbb
jg
mov
loop
inc
dec
jecxz
xor
out
adc
fwait
ds
xorl
fdivrs
out
mov
pop
adc
xor
mov
dec
inc
ljmp
push
pop
sub
outsb
jp
popa
daa
jne
cli
test
jg
scas
inc
add
mov
nop
sti
inc
sbb
pusha
iret
pop
xor
jbe
int
or
pop
jbe
pop
mov
sbb
cmp
jle
cld
mov
and
bound
out
pop
shrl
outsb
sbb
popf
lods
inc
inc
xor
xor
lds
out
xchg
or
adc
pop
jmp
mov
mov
adc
clc
adc
lock
andl
loop
sub
dec
ds
push
test
imul
fisubs
pop
adc
scas
out
and
jp
sub
imul
aaa
xor
roll
pushf
jo,pn
fxch
mov
imul
bnd
and
repz
mov
loope
push
jecxz
out
icebp
mov
pop
sub
jmp
in
ljmp
faddl
mov
mov
stos
addr16
jbe
imul
and
cmp
rcrl
shrl
xchg
cld
data16
push
outsb
lret
add
out
es
xchg
sbb
cmp
pushf
xchg
fcoms
sub
icebp
pop
or
addw
pop
pop
fnstsw
ljmp
jp
or
lods
fidivl
insb
jne
inc
pop
pcmpeqw
mov
mov
xor
gs
pop
cs
xchg
lcall
aas
fists
movsl
stos
mov
xor
loopne
xchg
inc
imul
ljmp
pop
in
cld
pushf
add
xchg
mov
push
add
aas
mov
sub
mov
or
xor
jne
ror
lahf
lds
xchg
add
adc
jg
fstl
in
int3
arpl
out
popf
pop
cmpsb
mov
sahf
add
sbb
add
fwait
push
pop
iret
cld
push
inc
in
setb
ret
cmp
add
mov
hlt
cmpsb
leave
out
mov
bound
cmpsl
les
or
fdivrl
jb
dec
aam
cmp
sbb
cmp
lock
out
inc
dec
cmp
dec
cltd
mov
stos
inc
xchg
das
sbb
dec
jl
das
rorb
sbb
mov
xchg
rclb
int3
leave
outsb
faddl
sbb
add
sbb
mov
sbb
shlb
and
push
add
call
push
rolb
xchg
hlt
add
cmc
les
inc
dec
call
cmp
push
insl
adc
test
cmpsl
lahf
in
out
xlat
jg
mov
roll
sahf
inc
shlb
xchg
dec
push
mov
inc
sub
iret
or
push
sbb
call
cmpsb
int3
xchg
shrl
mov
popf
sbb
mov
shrb
mov
test
cltd
dec
je
ljmp
xchg
mov
sbb
mov
dec
adc
push
gs
bound
jne
and
hlt
inc
xorb
inc
and
mov
xchg
mov
inc
mov
fsts
jl
test
mov
or
pop
mov
sbb
out
pop
xchg
push
pop
push
push
testl
ret
push
pop
pop
adc
es
cmpsb
out
pop
jp
pop
rcl
inc
dec
addl
or
sbb
mov
mov
mov
ret
and
divl
mov
into
mov
mov
dec
lds
fidivs
and
insl
xor
sub
popa
and
insb
addr16
cld
ds
pop
push
push
inc
pop
add
in
pop
sub
pop
sub
lret
cltd
sub
mov
es
ss
fprem
sub
jo
ja
inc
inc
xor
mov
rclb
jbe
das
xor
lods
in
xor
lahf
adc
int3
loope
jge
sub
rorb
loope
push
inc
sbb
xchg
sahf
xlat
or
enter
pop
jge
lret
pop
xchg
add
sahf
ss
sarl
sub
xchg
sub
shll
mov
call
jb
jb
and
push
fisubrs
repz
mov
movsb
jb
sbb
sbb
jb
lock
mov
sahf
mov
cmpsb
fidivl
fsubs
adc
stos
xchg
push
xor
sti
jmp
out
pop
mov
lret
inc
xchg
push
and
mov
aad
mov
in
lock
cmpsl
in
cld
shlb
shlb
mov
cld
add
cli
sub
jle
out
push
sbb
sbb
adc
clc
gs
push
lret
movsl
push
imulb
enter
jmp
jmp
arpl
mov
mov
aam
pop
jl
enter
add
push
sbb
mov
jg
out
add
shll
add
inc
out
or
mov
sub
mov
push
adc
in
xchg
shlb
inc
add
call
sbb
test
dec
fwait
scas
sbb
ss
push
pop
dec
jecxz
and
shlb
and
mov
push
test
call
mov
mov
imull
sub
cld
in
les
enter
adc
mov
xor
cmc
repnz
sub
int
cmp
shl
sub
test
into
inc
fisubrs
popa
loop
sahf
ds
incl
add
repz
les
daa
cmp
loop
movsl
lret
stc
mov
mov
pop
dec
inc
sub
pop
and
mov
mov
into
jns
sub
lock
fisttpll
mov
sbb
mov
jg
ds
insl
cli
jnp,pt
loopne
iret
pop
sbb
jne
sub
ret
jns
int
into
arpl
ret
repnz
cmp
sub
fdivs
and
and
shrb
lcall
fnsave
jno
lods
or
rorl
and
popa
pop
pop
test
and
cmc
adc
gs
mov
sub
mov
sahf
jnp
lret
add
or
loopne
add
orl
push
xlat
pop
xor
mov
mov
ret
mov
cmc
pop
push
sbb
mov
loopne
cmpsl
xchg
not
cld
sub
push
pop
mov
sarb
xchg
test
call
icebp
and
scas
lcall
dec
enter
dec
adc
imul
fimuls
push
data16
or
sbb
stos
pop
jg
inc
loop
fsqrt
push
rorb
out
add
mov
push
iret
dec
ljmp
cmc
jecxz
jne
cwtl
movsl
pop
test
outsb
pop
mov
arpl
pop
mov
cmp
push
ja
lahf
xor
cmp
ljmp
mov
stos
adc
add
aaa
pop
jecxz
push
icebp
xchg
scas
sub
data16
cmp
push
add
in
mov
fmul
cmp
roll
jbe
mov
into
stos
inc
fwait
jl
pop
dec
xchg
nop
gs
add
imul
inc
sub
lret
lret
mov
adc
adc
leave
inc
sbb
or
add
scas
stc
aaa
mov
roll
dec
inc
gs
int
fwait
mov
push
dec
cltd
adc
push
mov
mov
testl
push
mov
clc
mov
dec
xchg
fistpll
test
ljmp
test
pop
shl
inc
and
sub
fildl
cmpb
or
in
sahf
jb
ss
mov
adc
and
lods
cmp
imul
push
push
std
xchg
push
mov
lea
push
iret
dec
test
jne
add
mov
dec
outsb
stos
jecxz
imul
sbb
cmpb
mov
mov
imull
pop
cmc
dec
or
scas
rcrl
mov
push
push
ds
add
add
push
mov
stos
js
sbb
jo
jmp
cmpsl
dec
xchg
adc
and
in
lahf
fnstsw
add
hlt
lods
adc
mov
ret
push
sbb
push
js
sub
mov
sbb
mov
xor
add
je
test
imul
jl
pop
repz
nop
push
shlb
shll
dec
stc
inc
repz
push
adc
adc
popf
xchg
test
rcrl
jae
and
pop
loopne
mov
loope
adc
inc
xchg
popa
or
sub
inc
sbb
scas
push
sbb
adc
in
xchg
das
xor
and
outsl
pop
pop
cmc
xor
xchg
andb
fistl
mov
jmp
shr
mov
mov
loope
rcrl
out
xor
popa
mov
movsb
dec
mov
add
bound
sbb
loopne
movsl
xchg
loopne
lahf
js
jno
popf
push
lret
and
lods
fnstsw
xchg
out
popa
add
sbb
test
insl
std
dec
inc
add
insl
movb
loop
ret
or
shll
push
out
cwtl
pop
xor
cmp
stos
fistpll
je
xlat
xchg
push
add
cmp
mov
cli
cmc
xchg
xor
int
pop
or
lahf
jo
lods
xchg
rcr
fisubrs
std
add
aam
adc
cmp
mov
cmp
loope
arpl
out
mov
and
push
lods
popa
int3
xchg
cmpl
cmp
gs
rcrl
jae
ds
xchg
mov
test
add
push
push
xor
stos
imul
lock
lock
push
sbb
imul
fstpl
rol
imul
data16
es
mov
xchg
jnp
jmp
xor
movl
and
and
jge
mov
lcall
lret
xchg
daa
add
cli
test
stos
cmpsl
movsb
insb
enter
mov
out
or
push
mov
mov
mov
push
adc
pop
cs
mov
jo
adc
adc
pop
loop
pop
idiv
out
and
movsb
push
jae
pop
test
addl
push
add
in
insb
pop
loope
mov
out
sahf
push
mov
out
insl
outsl
push
push
lret
cmp
and
ds
mov
cld
push
cmpsl
test
mov
loopne
mov
and
mov
jmp
mov
xchg
adc
mov
jmp
int3
mov
mov
aas
pop
jns
mov
mov
lret
push
frstor
add
cli
pop
bound
faddl
cmp
mov
sysenter
lcall
add
lock
mov
mov
repz
sahf
pop
push
outsl
cmp
and
out
lods
in
push
cmp
cmp
pushf
fucom
pop
jg
pop
add
xchg
lcall
inc
xchg
mov
jae
int3
daa
sti
sub
xchg
andl
in
lret
sbb
loop
push
aad
adc
js
popa
rorb
jbe
out
sbb
ljmp
push
out
adc
stc
scas
in
dec
jg
add
aas
cmpsb
push
sahf
scas
mov
mov
xchg
sbb
xchg
push
lods
dec
and
and
into
sbb
fmul
ficoms
and
jp
jno
adc
mov
aam
adc
cltd
rep
or
out
shrb
lcall
add
iret
cmp
leave
mov
test
pop
mov
or
jl
sub
in
pop
in
jl
leave
stos
cmpsl
xchg
cmp
dec
adc
and
popa
mov
ljmp
pop
scas
cmp
dec
outsb
movsb
xchg
pop
dec
mov
iret
lahf
inc
int
leave
jmp
mov
adc
dec
adc
aam
cmp
aas
jb
add
or
out
sbb
ljmp
xchg
mov
ss
pop
stos
and
in
pop
lret
pushf
xchg
push
insl
nop
xchg
sub
lahf
dec
sub
out
mov
inc
inc
xchg
xlat
xchg
mov
sub
es
movsl
lods
push
xchg
arpl
test
test
aam
lods
fwait
cmc
repnz
xchg
inc
jl
push
or
sbb
xchg
jno
push
push
add
dec
iret
xor
dec
shlb
shll
and
push
push
fwait
cmp
mov
sub
add
leave
cld
mov
cmc
sbb
clc
mov
jl
push
adc
cmp
xor
sbb
add
int
xchg
sub
sbb
pop
sub
repnz
and
imul
push
mov
dec
outsb
push
or
jbe
cmp
sbb
sar
jnp
mov
add
add
cmpsb
inc
fmull
inc
pop
xor
xor
leave
cld
mov
mov
inc
cs
pop
and
jne
and
es
sahf
andb
aad
sbb
push
mov
psubsw
xor
stos
in
les
pop
mov
sarl
inc
mov
xchg
xchg
pusha
gs
jo
sub
or
iret
dec
dec
xor
push
je
stos
mov
mov
cmp
testb
xchg
xor
lods
sbb
mov
popa
lods
and
pop
sub
das
arpl
pushf
sub
scas
adc
rcl
add
jo
push
or
pop
jmp
xlat
xchg
pop
test
scas
mov
js
sbb
cli
mov
mov
mov
repnz
mov
lods
pop
outsb
adc
dec
std
je
dec
nop
dec
sub
arpl
dec
outsl
adc
out
push
pop
sbb
adc
add
lcall
sbb
push
arpl
xchg
and
xor
stc
add
adc
std
ss
dec
jo
lods
adc
mov
jg
adc
dec
movsl
je
loopne
jno
adc
xchg
or
cmpsl
lea
jl
in
lods
xchg
cmp
inc
cmpsl
inc
sub
pop
fsqrt
add
inc
mov
fiaddl
xchg
mov
cmp
movsb
addr16
push
outsb
insl
adc
lahf
fldt
popa
push
push
lods
fnsave
pop
scas
daa
imul
clc
flds
xchg
stos
outsl
hlt
mov
add
mov
sub
mov
ds
mov
cmp
je
les
pop
pop
scas
rcrl
xchg
in
inc
adc
scas
aam
xor
lcall
aam
nop
pop
mov
subb
iret
pop
inc
in
sti
sbb
dec
and
out
data16
xchg
pusha
ret
movsl
je
push
inc
out
je
push
pop
dec
fisttpll
in
pushf
and
dec
cmpsb
push
movsb
xlat
cmp
and
mov
cmpsl
js
inc
xchg
or
ds
fiaddl
ss
fwait
jae
dec
mov
inc
fnsave
cwtl
jb
push
sub
xchg
xchg
jno
mov
subl
cli
push
add
jg
dec
subb
mov
xchg
cli
pushf
cmc
enter
sub
mov
mov
std
cli
cmp
push
mov
and
cltd
adc
bound
outsb
jl
xor
pop
in
into
ret
pop
adcb
lock
out
ja
lock
fisubrs
movsl
adcb
sti
xchg
repz
fistps
fmuls
cmp
idivl
lahf
les
loope
xlat
and
leave
add
iret
dec
mov
icebp
adc
ror
pushf
inc
testl
scas
movsb
mov
pop
jl
push
and
pusha
sbbb
dec
insb
mov
pop
adc
popa
cmpsb
das
mov
dec
mov
scas
dec
lods
out
pop
aam
inc
orb
mov
pop
sub
add
jmp
test
push
nop
pusha
mov
dec
sbbb
mov
rclb
leave
xor
xchg
lds
push
and
sub
adc
mov
pop
xorb
in
cli
and
add
leave
jg
outsl
pop
pusha
dec
inc
lea
xor
sbb
in
push
lahf
pop
ljmp
ss
arpl
sub
fsubl
mov
sti
in
movsb
cld
mov
cmp
lods
adc
fstpt
mov
mov
pop
lea
and
test
push
orb
paddw
sbb
jns
jl
ss
out
jmp
mov
stos
out
lahf
jmp
and
sbb
or
out
add
leave
out
fisubrs
mov
std
loop
loop
daa
sti
cmp
push
lods
inc
daa
sub
sbb
ret
push
push
inc
jge
inc
les
aad
sarb
sti
lods
call
jnp
hlt
xorl
mul
adc
xor
cld
mov
xor
negb
scas
push
loope
das
xor
imul
add
into
mov
fldenv
push
dec
mov
jl
filds
cwtl
and
sub
adc
lret
pop
stos
mov
pop
int3
movsl
fnstenv
popf
mov
fstps
cmp
push
mov
mov
xchg
add
imul
jno
bound
movb
int
mov
daa
mov
insl
je
jp
push
pop
mov
pop
jb
test
mov
xchg
insl
push
lock
int3
test
xor
js
incb
add
mov
push
push
cld
aas
inc
fcmovbe
fnstcw
or
loope
cmp
push
mul
xchg
jle
mov
mov
outsl
and
jne
rclb
push
shll
aam
leave
xor
imul
cmp
mov
mov
cltd
ficoms
andb
pop
fs
jmp
pop
movsl
aaa
xchg
inc
rorl
aaa
jae
add
and
cmp
into
mov
xchg
push
jge
sbb
fwait
xchg
jae
dec
xchg
add
fidivl
inc
adc
dec
aam
push
cmp
mov
int
adc
ret
int3
xor
loope
decl
sbb
xor
add
in
sbb
xor
loop
sub
inc
mov
adc
roll
shlb
cmp
inc
daa
gs
in
pop
mov
pop
xlat
aaa
adc
pop
test
xchg
xor
jne
mov
and
enter
js
mov
push
stos
pop
mov
stos
jle
xor
add
in
addr16
jmp
mov
inc
icebp
mov
scas
dec
mov
and
xchg
sub
dec
and
call
out
ds
cli
call
sub
adc
mov
dec
pop
test
stc
xor
hlt
in
mov
cltd
xor
sbb
fisttpll
sahf
lods
pop
sbb
xchg
mov
in
in
mov
sub
pop
int3
add
or
jbe
out
jne
adc
std
xchg
inc
and
add
sub
xchg
sbb
push
call
mov
icebp
jmp
xor
mov
sahf
pop
or
lret
pushf
pop
scas
push
mov
iret
push
lret
pop
mov
and
in
daa
xchg
inc
mov
add
int3
mov
mov
iret
es
jge
xor
add
sar
das
or
cmpl
xor
lret
mov
push
out
add
rep
outsl
test
out
or
push
lahf
mov
dec
adc
lret
sbb
ja
mull
outsb
cmp
enter
or
ss
mov
pop
mov
lea
lods
fstpl
call
movsb
mov
pop
jmp
mov
loop
fwait
movsb
cmp
fldt
jbe
movsb
ljmp
and
push
cltd
aam
dec
into
fs
sbb
out
xor
and
jae
fs
cmp
pop
cmp
push
cmp
in
xor
lahf
push
mov
adc
mov
divl
js
loopne
sti
xor
test
fld
xchg
scas
or
mov
addb
xchg
cltd
icebp
test
xchg
mov
loopne
enter
hlt
or
mov
fmull
icebp
xchg
add
pop
cmp
ja
fstl
ret
xchg
out
mov
cmp
xlat
lds
cmpsb
insb
cmp
outsl
cmpsb
and
add
nop
push
pop
mov
out
popa
sti
sti
mov
or
sub
cmp
adc
pop
cmp
push
mov
mov
cmp
scas
push
cmc
lret
bound
sbb
cmp
lret
xchg
adc
lret
cmp
arpl
jbe
insb
push
out
sub
out
fcomps
lock
mov
pop
ljmp
lods
cmp
outsb
or
or
hlt
push
adc
fcoms
mov
add
stos
popf
addl
jmp
add
xlat
pop
enter
stos
ja
lahf
pop
outsb
aad
cmp
or
mov
stc
adc
stos
std
sbb
lahf
out
mov
xchg
out
ljmp
addl
mov
cmp
movsb
cli
jns
inc
push
shl
cltd
testl
hlt
enter
xor
pop
loop
push
jmp
out
and
orl
mov
lret
xchg
adcb
les
ja
pushf
imull
arpl
xorb
mov
xor
fbstp
pop
scas
ret
out
cmc
lds
and
bound
mov
loop
imulb
pusha
mov
shlb
fisubrl
scas
fdivrl
mov
hlt
sarb
addl
push
sub
or
cmpb
addr16
jae
or
dec
movsl
ss
cwtl
test
mov
repz
rclb
dec
mov
out
mov
cmpsl
insb
lahf
stos
adc
push
dec
xor
cwtl
pop
loopne
dec
xchg
call
jle
push
mov
ficoml
jns
mov
test
add
push
test
and
pop
ffree
adc
push
int
xor
add
mov
rolb
or
repz
pop
cmpl
rcll
jmp
pop
sarb
mov
je
aaa
push
addb
test
mov
cmp
or
or
adc
lret
in
xor
in
outsl
aaa
pop
repz
das
int
and
jecxz
shrl
and
sbb
pop
lock
cmp
lret
push
fidivrl
add
bound
adcl
jb
mov
loop
push
les
fbstp
mov
cwtl
cmp
add
lea
sbb
cmp
pop
mov
xor
in
test
das
fisubs
and
ljmp
push
mov
mov
pusha
testl
jno
arpl
jns
adc
push
dec
mov
outsb
enter
cmp
jno
lds
ds
pop
mov
fistpll
stos
pop
lods
ja
dec
xchg
jne
loop
bound
pop
leave
pop
mov
lds
outsl
out
mov
cmc
cmp
rcr
insl
les
jno
test
mov
cli
pushf
xchg
rcrb
in
push
dec
mov
outsb
fs
push
xchg
mov
adc
xchg
mov
inc
icebp
lods
lret
xor
test
dec
add
dec
lds
divb
lret
jg
xor
pop
test
stc
xchg
mull
aaa
inc
push
pop
xor
stos
pop
mov
sbb
ret
mov
sahf
loope
and
cmp
mov
shr
insb
rcll
cmp
sub
cmp
xor
bound
ja
mov
leave
push
test
xor
cld
inc
fidivl
or
scas
jns
aam
push
mov
insl
add
sysret
out
mov
add
xchg
test
xor
jae
cmpsl
out
mov
xor
subb
sarb
xor
shrd
popa
jp
push
test
stos
mov
sbb
dec
dec
sbb
push
mov
sbb
xchg
iret
loopne
lahf
mov
ljmp
jge
std
popf
mov
cmp
jg
bound
adc
fs
clc
mov
fdivrp
mov
std
cmp
pop
adc
mov
mov
loop
pop
data16
rcrl
inc
sbb
fidivs
cld
enter
push
mov
mov
and
je
imul
push
addb
aaa
adc
bound
xchg
mov
xor
lcallw
lods
or
inc
stos
xlat
and
mov
je
dec
cmpl
repnz
in
cmp
scas
jg
sbb
add
ss
movsb
pop
dec
fsubs
pushf
scas
or
mov
das
imul
mov
add
xchg
cmp
popa
pop
fiadds
jp
daa
scas
cmpsl
insb
leave
into
fisttpl
push
sbb
push
mov
loopne
iret
cmpl
mov
or
xor
ljmp
fs
mov
adc
fsubr
push
adc
add
ror
xchg
add
xchg
imul
je
dec
shlb
fcoml
cmp
test
out
rclb
lret
out
inc
pushl
push
outsb
sub
addr16
sbb
mov
sar
push
xchg
iret
and
shrb
dec
lods
repz
pop
stos
aaa
pop
mov
mov
pusha
ret
inc
sub
iret
mov
jle
fwait
mov
cs
sub
test
dec
xchg
int
cmp
ljmpw
xorb
stos
rorl
mov
sub
test
out
xor
pop
dec
lret
push
xor
mov
stos
es
sahf
mov
mov
shll
ficomps
push
xor
pusha
push
dec
sbb
mov
mov
add
mov
outsb
inc
movsb
push
xchg
push
in
pop
xchg
repnz
pop
lret
sbb
and
jg
and
mov
flds
or
call
dec
or
mov
aad
or
fmuls
sbb
nop
in
ret
sbb
jno
push
sar
fcos
lret
and
inc
std
and
adc
pop
pop
jl
sub
xchg
push
jo
loopne
mov
mull
xchg
imul
lcall
imul
insl
inc
pop
arpl
lea
adc
jmp
sub
hlt
xchg
imul
jecxz
sbb
adcb
out
push
hlt
jo
jns
pop
lahf
imul
fs
xchg
xor
fcompl
sub
push
adc
and
incl
dec
pop
aad
push
in
adc
pusha
stc
fsubs
cld
clc
int3
xchg
or
mov
rcrl
sahf
jle
inc
jle
test
and
aas
xor
xchg
lret
adc
xchg
jl
jmp
adc
pop
lret
xchg
call
add
insl
imul
loop
loop
add
dec
cmpsl
and
repnz
out
iret
or
xor
xor
outsb
xchg
add
push
sub
xchg
cltd
jmp
in
aam
push
loopne
adc
pop
push
aaa
mov
and
sub
insb
orb
lcall
sbb
pop
jl
aaa
aas
enter
fxch
pop
int3
pop
xchg
fsubrl
jae
decl
outsl
dec
push
adc
out
cmc
test
cmpsb
jl
dec
jg
test
imul
xor
loopne
jecxz
or
or
push
fs
cmpsb
or
fnstsw
les
mov
adc
or
dec
movsl
cmp
gs
gs
adc
test
aad
cmp
pop
and
lods
in
push
aad
movnti
cmp
fcompl
jns
pop
jecxz
mov
icebp
insl
dec
lret
adc
das
pop
add
and
pop
icebp
mov
push
incb
dec
jmp
lret
frstor
mov
push
mov
enter
loop
insl
mov
adc
sbb
mov
fiadds
xor
sub
in
sahf
push
jno
sbb
adc
mov
push
jnp
pop
ret
push
xor
ss
pop
and
outsl
sahf
pop
int
push
xchg
mov
addr16
cwtl
dec
sub
mov
leave
movsb
lock
popa
jl
adc
push
inc
les
inc
loop
movsl
in
mov
dec
pop
daa
andl
fsubrs
les
or
push
jp
jmp
repnz
jp
sbb
or
test
hlt
pop
and
ds
jb
xchg
mov
inc
repz
xchg
mov
insl
ficoms
call
fs
mov
mov
lds
xchg
pusha
mov
adc
xchg
push
outsl
mov
xor
sbb
js
jno
xchg
imul
daa
inc
std
adc
roll
pop
adc
xor
jmp
in
push
mov
push
scas
es
push
sar
gs
mov
loop
inc
bswap
jae
jecxz
lods
and
pop
pop
cwtl
les
std
cmp
addr16
pop
push
xchg
sub
cmp
xchg
adc
or
or
mov
es
ja
nop
rcr
shr
test
dec
inc
and
jns
call
jnp
iret
push
cs
mov
pop
inc
fwait
sbb
enter
pop
in
fistpll
or
mov
jl
shr
cmp
sbb
and
xor
rcr
push
int
add
sahf
fdivp
movsl
popa
pop
or
shll
addr16
mov
outsb
cli
push
in
repnz
xchg
test
dec
inc
pusha
outsl
or
or
sub
lds
cmp
test
faddl
lods
sarb
push
xor
adcb
leave
mov
dec
cmc
mov
int3
divl
insb
jmp
stos
daa
xchg
ss
icebp
xchg
and
pop
jl
fisubl
push
gs
ret
movsl
dec
adc
xchg
sub
add
fsubrs
std
adc
pop
leave
dec
lods
in
ja
adc
in
lock
push
mov
mov
push
push
pop
push
jae
out
out
mov
pushf
rorl
aad
cmp
jp
pop
or
clc
iret
pop
iret
repnz
rorl
addb
testb
add
sarb
je
orl
insl
sarb
sub
jmp
sti
aam
push
dec
jp
lahf
jns
pop
inc
pop
in
mov
or
divl
scas
loop
and
jns
testb
xchg
sbb
sub
fildll
insl
das
fadds
pop
std
push
add
push
les
add
out
sbb
jp
dec
and
lods
dec
popf
push
into
popa
and
dec
push
mov
mov
add
add
popf
int3
push
shll
mov
xchg
adc
int3
or
cld
fsubrs
xor
adc
push
std
dec
in
mov
fcoms
fisubrl
test
jl
mov
dec
fsubl
jg
mov
popf
cmpsl
mov
push
adc
push
pop
mov
cld
cmp
dec
mov
jo
cmpsl
out
std
adc
icebp
fdivr
inc
lret
push
test
cltd
lods
mov
jae
leave
arpl
fdivs
mov
jns
add
xor
js
cltd
int
add
jp
xor
xchg
scas
xchg
sub
in
fists
insb
pop
push
mov
js
or
repnz
mov
ror
pop
inc
repnz
test
fstps
xchg
lret
or
fstpl
push
dec
fisubrl
outsl
in
or
test
js
cmpsl
dec
adc
in
fdiv
push
mov
outsb
dec
add
lret
sahf
ss
cmp
or
test
mov
inc
stos
arpl
or
aas
cld
xchg
movsl
cltd
jle
xchg
orl
fsubp
push
test
lret
lods
pushf
sub
sub
cmc
loop
jmp
mov
mov
push
dec
outsl
lahf
add
xchg
aam
mov
sbb
xor
or
jo
out
push
fldenv
int
sub
repz
gs
pop
in
mov
push
icebp
dec
lret
pop
out
lods
or
aad
lahf
aad
adc
repnz
in
and
cld
lods
push
sti
mov
inc
dec
inc
inc
hlt
sbb
pushf
fisttpl
call
fists
inc
and
loope
or
sub
ret
pop
divb
or
stos
push
adc
jecxz
cmp
sbb
dec
lret
and
jns
and
outsl
popf
cs
or
mull
insl
imul
mov
xor
adc
in
cwtl
insb
push
cmpsb
mov
std
outsb
repz
mov
jbe
add
sub
les
mov
or
call
add
icebp
arpl
rol
adc
sbb
mov
je
push
cltd
or
mov
mov
js
fldenv
sbb
ret
data16
mov
std
in
ds
xchg
mov
sbb
ds
jg
insb
push
les
popf
sarb
cltd
pop
jbe
sub
imul
cmp
add
push
stos
or
jno
pop
cli
push
push
or
stc
and
cmp
jnp
out
mov
or
insl
adc
es
negl
mov
test
cmpsb
pop
mov
movsl
jle
inc
into
sbb
in
or
push
push
cmp
jne
fnstsw
pop
fimull
xor
popl
pop
dec
add
mov
ljmp
xor
mov
adc
ret
ss
or
outsl
inc
mov
and
movsb
inc
pop
push
insl
int
lahf
mov
nop
xor
arpl
fcmove
push
and
sahf
cli
bound
xor
pop
cs
cld
push
add
int3
xor
pop
mov
das
jns
dec
int
bound
sbb
adc
aad
scas
test
fsubl
and
cs
add
movsl
stos
ja
or
cmpb
xchg
cmc
sbb
add
xlat
out
fwait
mov
mov
xchg
sbb
addr16
sbb
out
test
ljmp
das
loop
int3
dec
fists
cwtl
imul
imul
outsl
fnstenv
add
shrb
xchg
jno
in
push
adc
sbb
push
insl
std
mov
or
xor
jp
repz
and
cmp
push
mov
xorl
pop
hlt
push
push
inc
fcoml
mov
mov
call
cs
xchg
mov
mov
dec
or
sarb
out
lods
stos
mov
in
enter
aas
mov
xchg
mov
ss
mov
sbb
xor
cs
nop
pop
push
iret
mov
mov
dec
sub
ret
int
movsb
add
inc
lret
sbb
shrb
pop
int3
dec
xchg
pop
push
fcomps
sub
loop
insb
pop
call
cli
cmc
imul
mov
xchg
cmp
sbb
jp
push
cmp
mov
pop
stc
outsl
lret
rolb
pushf
xchg
rolb
fadds
mov
subb
mov
test
lahf
call
sahf
xchg
mov
lods
push
xor
in
add
xchg
xlat
lret
push
fisttpl
xor
out
pop
scas
in
xor
cmp
fwait
incl
pop
cltd
imul
fldt
push
and
divl
pop
pop
jb
pop
inc
in
lock
xchg
add
or
or
jns
pop
std
mov
les
cmp
icebp
into
mov
mov
cmp
inc
shld
mov
fdivr
shlb
aam
xor
and
mov
mov
arpl
inc
mov
aas
xchg
push
aaa
shl
mov
mov
and
cmp
add
lods
and
lret
repz
jo
adc
mov
imul
mov
push
mov
xor
and
and
xor
addr16
pop
call
inc
movsb
cld
push
sub
aaa
jmp
sub
push
mov
push
add
jl
testl
xchg
mov
sbb
sbb
fdivr
stc
fsubrl
cmpl
adc
adc
mov
push
pop
in
es
mov
inc
and
movsl
pxor
testl
cltd
adc
pop
jg
push
xchg
mov
clc
pop
pop
add
xorb
sub
shrl
cmc
sarl
push
push
call
dec
add
sbb
cld
jo
xchg
mov
andl
push
out
and
scas
push
mov
pop
jle
xchg
or
ds
in
dec
std
out
mov
pop
add
add
lret
jge
push
mov
add
lock
lods
sahf
in
sahf
outsb
aaa
insb
fists
jnp
daa
or
pop
or
mov
cmp
lcall
ljmp
xchg
fadds
sar
pop
jmp
jl
call
inc
mov
xor
mov
xlat
and
pop
in
sub
insb
and
mov
pop
loopne
cmp
xlat
jb
ljmp
xlat
movsl
mov
jmp
dec
mov
repz
popa
pushf
inc
mov
mov
dec
mov
fincstp
lcall
jmp
cli
fisubrl
push
xchg
loop
pop
or
cmc
popl
pop
xor
scas
adc
sbb
and
outsl
adcl
xor
cmp
rcrl
mov
add
pop
in
into
mov
push
xchg
xchg
sub
xor
stc
pop
inc
mov
lock
jbe
cmp
sbb
popf
insb
hlt
arpl
lret
xor
lret
rolb
and
mov
xchg
in
xchg
cmpsb
mov
adc
rep
aaa
xchg
ss
ds
mov
fildl
gs
mov
ljmp
inc
pop
adc
repz
pop
and
lods
push
das
repnz
repnz
jp
push
xchg
sub
adc
insl
orb
cmp
jge
gs
jecxz
mov
dec
mov
loop
add
mov
roll
das
into
js
sbb
test
jl
or
in
lret
jbe
cli
stc
fstp
enter
jmp
jno
sub
mov
gs
and
sub
call
lea
mov
mov
push
out
out
jne
add
xlat
push
cmp
sbb
rclb
push
xchg
enter
sub
divl
in
mov
mov
adc
ds
addl
xchg
ds
jo
fadds
mov
call
mov
mov
lods
popf
push
stc
xchg
adc
rclb
adc
mov
cmpsb
mov
xchg
mov
lock
lret
lods
ret
lahf
sub
and
mov
movsb
repz
inc
bswap
inc
sub
pop
leave
lea
and
mov
es
adc
addr16
icebp
add
dec
insb
sub
inc
daa
in
or
pop
das
push
push
push
or
jns
data16
pop
adc
dec
lds
mov
xchg
jno
sub
add
js
pop
ds
and
mov
movsl
push
fidivl
push
ja
mov
jmp
inc
jle
cmp
sahf
xchg
cmpsb
pop
rclb
add
mov
mov
mov
push
push
jo
cmc
test
dec
enter
cmpsl
rcrl
xor
je
and
repz
les
cmp
sub
xor
repnz
pop
mov
and
pop
pop
cs
mov
mov
jnp
test
js
enter
jns
mov
pop
insl
rcrl
mov
push
adc
imul
mov
pop
mov
inc
and
pop
push
add
pop
std
incb
mov
pop
cmp
pop
lahf
mov
lret
cwtl
data16
clc
xchg
test
pop
sbb
test
cmp
pop
mov
dec
cmp
jnp
mov
data16
pop
cmp
insb
xor
arpl
xor
aad
add
je
gs
jb
mov
jl
mov
in
sahf
cwtl
leave
push
rclb
stos
hlt
pop
mov
ret
test
scas
outsl
mov
and
sbbb
adc
and
dec
notb
push
dec
jns
mov
xor
xor
dec
cmp
adc
pop
inc
mov
pop
inc
std
andb
leave
scas
dec
dec
movsb
sub
std
sbb
pop
lods
insb
fisttps
pop
push
jne
cmp
jae
lahf
and
or
jmp
dec
in
dec
mov
cmc
std
sbb
pop
popf
in
movsl
sbb
ret
lods
mov
test
adc
gs
push
ficompl
jae
jmp
loop
push
jno
lahf
mov
loop
sbb
dec
xor
mov
pop
lods
xor
jecxz
jo
in
in
mov
sbb
lock
mov
jne
popa
inc
fs
sbb
dec
lods
fstl
jmp
pop
out
xor
add
push
jo
jnp
pop
jne
mov
pop
or
and
and
pushf
std
std
dec
incb
mov
and
inc
stc
jmp
xchg
repnz
push
loop
jp
push
xlat
sbb
enter
nop
jbe
pop
aad
sub
gs
dec
dec
mov
and
xor
mov
sbb
inc
xchg
xchg
stc
ret
cwtl
add
pusha
jae
or
mov
mov
enter
mov
adc
idivl
in
dec
out
mov
cmp
lcall
cmc
int
movl
and
or
dec
icebp
outsb
scas
mov
lods
mov
orb
negb
lods
and
enter
cltd
xchg
xchg
add
pop
inc
pop
daa
and
or
inc
clc
jo
cmp
fistl
dec
jne
out
cmc
ljmp
or
xchg
sub
inc
in
sbb
mov
int
mov
jns
push
push
push
lods
mov
andb
rcrl
imul
inc
mov
jge
push
loopne
iret
add
inc
push
mov
inc
fcmovne
je
repz
fmuls
fs
mov
or
pop
imul
sub
pop
adc
mov
pop
xor
xor
lret
popl
fistpll
lcall
xor
scas
sarl
addr16
and
inc
cmpsb
xchg
dec
imul
mov
leave
std
leave
jmp
lret
cmc
push
mov
into
and
pop
daa
aad
rcll
or
ljmp
loop
pusha
inc
data16
dec
add
add
mov
js
and
aad
stos
sahf
pop
andl
out
loop
or
push
xchg
stc
jbe
fistpll
pextrw
mov
imul
jmp
addl
arpl
pushf
and
xchg
jp
jmp
into
push
jecxz
pop
pop
mov
adc
sbb
pop
nop
sbb
lea
scas
aas
enter
jp
fsubl
popa
pop
js
mov
add
xor
leave
lahf
aad
push
xor
js
cmp
pushl
shlb
push
xor
or
imul
sbb
add
ret
or
push
ret
and
xor
jge
js
mov
jbe
xchg
pop
mov
sti
lahf
adc
push
fnclex
mov
inc
ret
push
jae
out
jmp
out
mov
gs
fidivrl
inc
cld
fdivrs
pop
add
pop
push
inc
imul
xchg
inc
fbstp
sub
jle
or
push
pop
add
adc
cmpl
es
mov
dec
out
or
push
ljmp
mov
cli
inc
or
xor
sbb
push
xchg
leave
es
inc
mov
dec
xchg
int3
imul
pop
inc
lret
cmp
ret
ret
sbb
mov
ret
adc
ret
stc
lcall
push
jb
xor
imul
sub
popl
inc
and
scas
xor
mov
jns
lods
jbe
push
mov
cmc
xchg
and
mov
into
das
mov
sub
sub
jl,pn
rcl
leave
call
cmp
stc
jb
mov
or
out
sub
push
stos
and
scas
inc
test
outsb
pop
mov
dec
sub
xor
push
arpl
inc
xchg
filds
mov
dec
imul
sub
sub
cmp
inc
enter
in
pop
xor
add
sub
xchg
shr
mov
dec
jae
inc
in
addl
or
and
cltd
sbb
xchg
mov
jp
add
lds
aad
inc
jae
sub
scas
push
out
jne
aad
imul
pop
inc
call
sti
sti
push
daa
jbe
movsb
gs
loopne
fnstcw
cmp
jle
mov
lods
mov
fxch
out
cltd
repz
je
clc
sub
dec
test
sub
loopne
mov
xor
loope
lret
icebp
mov
into
loopne
inc
movsb
and
mov
lods
rclb
cli
mov
or
push
jb
loopne
std
sahf
out
subl
xlat
and
jbe
sub
orl
test
out
and
jle
into
or
sub
push
icebp
stos
repz
push
or
ret
mov
or
das
clc
or
outsl
pop
outsb
imul
jb
push
jecxz
push
fmuls
rcrb
and
shrl
push
scas
push
mov
out
pop
cs
cwtl
insl
mov
int3
leave
push
inc
sbb
xchg
mov
push
xchg
mov
sub
mov
jle
jne
cmovae
push
popf
jp
jbe
aas
mov
ja
in
shll
add
pop
movsb
das
xchg
xchg
cmpsb
inc
dec
je
pop
sbb
stos
cmpsb
jnp
adc
fdivp
popf
lea
pop
sbb
xlat
xchg
push
movsb
sbb
lcall
adc
arpl
dec
sbb
in
mov
xchg
cs
sbb
inc
pop
test
dec
xchg
inc
movsl
clc
pop
inc
aas
and
ficoml
add
push
pop
sub
pop
lea
adc
mov
sbb
adc
ds
rcrl
pusha
sub
jg
mulb
jae
add
add
xchg
dec
ret
imul
xchg
loope
rorl
pop
cmp
cmpsl
jns
jl
push
dec
mov
or
jo
xor
xchg
jg
call
cwtl
mov
addr16
jns
fsubrs
jo
lahf
mov
pop
jns
pop
stos
mov
arpl
and
and
test
lahf
adc
jns
jns
clc
cltd
fcmovnb
pushf
insl
fadd
sub
aam
shr
jae
ret
or
push
test
movsl
movsl
push
mov
roll
mov
sbb
add
dec
xchg
pop
mov
and
mov
cmp
xor
push
daa
pop
shrl
pop
cmc
lcall
loop
aaa
rcll
pop
pop
xchg
and
enter
or
lcall
mov
mov
orl
aas
push
call
aam
lds
iret
leave
xchg
out
out
pop
test
xchg
ret
pop
push
sbb
ljmp
nop
scas
mov
xchg
lret
push
inc
pusha
xlat
daa
in
movsb
adc
lock
icebp
aam
inc
icebp
fcmovnbe
sub
sub
adc
orb
fwait
xchg
add
movsl
xor
mov
test
add
sub
adc
cmp
pop
xorb
mov
mov
inc
push
test
pop
ja
mov
in
cmp
adc
out
lret
mov
adc
lret
pusha
clc
lods
cmp
mov
fistpll
shl
pop
and
in
pcmpgtw
jle
jp
sub
popf
dec
sub
and
adc
cmp
dec
xchg
lret
das
ds
mov
dec
jecxz
inc
jne
mov
iret
aaa
fildl
pop
sbb
push
xchg
dec
pushf
pop
clc
cmp
xchg
xor
add
inc
cmp
daa
mov
lods
rclb
lcall
and
jecxz
in
insl
cmp
dec
test
outsb
ds
fs
add
clc
js
jmp
imul
iret
ss
loopne
lret
and
pop
jae
xchg
rcl
and
push
jl
in
sbb
push
push
bts
mov
add
in
inc
stc
int3
mov
mov
jb
lds
pop
mov
es
cld
jecxz
jle
jns
jmp
xchg
mov
or
mov
aas
sub
call
adc
loopne
psrld
push
inc
mov
push
adc
nop
sub
mov
jb
fstl
mov
xchg
in
or
inc
pop
pop
mov
xor
test
out
add
xchg
aaa
inc
lahf
pop
enter
imul
add
pop
bound
aad
scas
rorl
xchg
or
mov
xchg
pop
dec
nop
adc
mov
out
shl
mov
pusha
loopne
mov
rclb
stc
pop
inc
cs
xchg
sbb
dec
or
lahf
ds
inc
mov
sbb
sub
loope
std
push
lods
mov
xor
jmp
outsl
mov
fsubr
push
shll
outsb
dec
loope
push
jle
aad
fnstsw
lret
ret
dec
or
cmp
mov
xor
lcall
jmp
xchg
fiadds
testl
movsb
cmp
in
xchg
push
scas
sarb
push
call
out
loope
mov
add
pop
lock
ficoml
loop
xchg
rorl
fnstsw
leave
repz
cwtl
shll
mov
inc
cmc
test
sti
xor
lods
imul
push
xor
push
sub
popf
xchg
ror
mov
xor
out
push
xchg
cmc
cmp
jne
xor
fwait
lret
and
add
in
push
fldl
add
mov
test
fsubrs
fndisi(8087
shll
test
loopne
cmp
rol
jno
jp
sbb
push
sbb
ds
mov
sbb
stc
inc
shll
xchg
jmp
rol
inc
mov
negl
inc
mov
push
sub
pop
xor
or
cs
dec
test
cmpsb
loopne
ss
mov
rcr
add
adc
jecxz
arpl
leave
mov
cmc
adc
test
bound
iret
or
dec
mov
adc
sub
push
mov
lahf
pop
inc
cmc
xchg
ret
cli
ret
out
lods
mov
pop
sbb
ficoms
pop
fwait
xchg
int
mov
mov
lahf
pop
mov
push
es
pop
jl
sbb
movsl
ljmp
mov
mov
outsl
test
insl
popa
out
and
push
mov
push
xchg
xor
jg
ret
mov
dec
jmp
call
fildl
call
mov
push
xchg
rolb
mov
pop
push
cmpsl
cmp
andl
cmp
and
mov
dec
shll
dec
inc
mov
push
cmp
imul
test
sbb
add
setle
shl
fwait
das
imul
cli
test
lods
cld
repz
xchg
mov
push
xchg
pop
xor
mov
js
addr16
mov
lahf
and
jg
adcl
insl
in
dec
push
sbb
out
mov
push
test
pushf
icebp
dec
test
inc
jecxz
movsl
inc
mov
xlat
pop
pop
gs
into
xor
inc
scas
das
call
in
cmc
lret
js
sub
mov
adc
mov
in
jne
test
inc
test
out
cmpsb
mov
sub
jno
cli
jnp
rol
out
lods
test
and
aaa
pop
dec
je
js
sub
xchg
jge
jne
hlt
sub
imul
or
jecxz
or
adc
scas
imul
out
cmp
push
out
add
mov
sbb
and
jbe
pushf
and
or
std
movsb
xchg
mov
outsl
push
sti
adc
es
or
lcall
pop
push
inc
cmp
and
lret
gs
push
xor
sub
bound
sti
adc
push
jp
xor
aaa
xlat
or
jecxz
dec
mov
inc
mov
sub
fldl
in
fwait
push
xlat
mov
mov
cmpsl
jl
aas
jl
fmuls
rcrb
push
bnd
out
xchg
sbb
cmp
mov
out
and
xchg
push
lcall
jne
js
push
clc
cwtl
dec
aas
fwait
push
jmp
adc
repz
sbb
and
and
lcall
mov
fcoms
fnstsw
les
mov
push
cmp
pop
xchg
mov
dec
les
xor
sbb
mov
pop
fwait
scas
cmp
push
push
mov
pop
fwait
mov
pop
or
xor
pop
lcall
aaa
ret
lcall
add
jp
scas
repz
out
test
arpl
sbb
frstor
push
xorb
pop
notb
fistl
clc
inc
in
lahf
insb
adc
inc
inc
cmc
jge
mov
imul
pop
scas
lcall
xor
das
fsubrs
fidivrl
jp
nop
daa
pop
fcoms
and
adc
fdiv
mov
sahf
and
hlt
sbbb
leave
sub
std
icebp
fimull
movsb
inc
fcmove
addr16
jle
mov
adc
stos
add
jnp
aad
jg
aas
xor
lcall
aas
jle
fdivrp
sbb
jl
push
sub
sti
pop
cltd
mov
pop
nop
sub
cltd
test
xchg
cmp
inc
scas
mov
decl
mov
or
fwait
jbe
xor
sbb
fcmovne
xor
jae
gs
adc
es
cmp
mov
mov
ret
adc
add
add
or
dec
jmp
jne
sbb
sub
mov
xor
negb
mov
pop
cwtl
cmp
packssdw
cmp
outsl
insb
mov
push
cmpsb
sbb
in
jo
mov
push
je
dec
or
pop
add
cmpsb
sub
dec
cmc
lods
ds
shrb
jb
dec
cmp
sti
push
icebp
pusha
rcrb
das
mov
mov
rcrl
out
and
loop
mov
xchg
insb
cmpsb
xchg
cltd
xor
inc
ds
and
or
and
inc
xlat
test
fildl
pop
xchg
adc
push
jge
inc
jmp
add
mov
decl
inc
fsubrl
faddl
jo
dec
jle
popf
sbb
adcl
scas
nop
ret
xor
adc
jb
pop
lret
mov
pop
jbe
movlps
mov
movsl
sti
jg
mov
cmpsl
xor
mov
mov
aas
int
push
cltd
in
push
aaa
fstpt
sbbb
ss
dec
or
xchg
les
jge
stos
cmp
std
cmpb
gs
notl
sbb
int
outsb
ret
push
lret
or
inc
add
movsb
dec
imul
stc
dec
daa
test
mov
pop
pop
lds
test
jns
cmp
mov
fistpl
cmp
clc
aam
lea
out
sub
faddl
test
lds
inc
jnp
std
es
rcrb
push
mov
es
inc
mov
xlat
sub
xchg
mov
jge
fiaddl
mov
sti
or
mov
pop
cmp
inc
xchg
stos
out
inc
add
xchg
scas
daa
push
iret
jecxz
stos
rolb
lret
or
xchg
int
mov
test
ss
insb
mov
xchg
lods
xchg
adc
cs
aad
push
and
in
xchg
jne
pusha
jp
jge
add
dec
pop
test
sub
insl
mov
jo
sti
daa
aad
addb
imul
adcb
scas
icebp
sti
popa
lock
sahf
jge
lea
push
pop
and
mov
push
movsl
fidivrl
iret
sub
mov
jae
pop
in
fadds
enter
inc
data16
push
sub
and
out
pushf
jne
add
xlat
xlat
sbb
in
dec
xor
sbb
push
popa
inc
xor
sub
or
enter
inc
ret
sbb
sarb
outsb
dec
ret
imul
cmc
pop
xor
shlb
or
out
popf
mov
shlb
iret
inc
decb
push
test
int
into
xor
cli
roll
js
ljmp
lods
mov
mov
outsl
aad
js
sub
mov
sub
insb
es
ret
imul
test
das
stos
xor
push
add
sbb
subw
xor
xor
cmc
fnstsw
int3
cmpsb
sarl
popa
ret
test
popa
rcrl
pop
and
and
sti
cltd
or
xor
fwait
mov
add
jnp
jmp
dec
xlat
cs
es
std
test
jne
ret
and
push
lods
test
adc
push
adc
in
pushf
inc
push
pushf
inc
leave
pusha
stos
jae
push
and
lock
mov
mov
in
icebp
loop
fsub
push
nop
ljmp
mov
cmp
stc
and
lods
pusha
sbb
out
cli
sbb
stc
je
scas
sahf
rorl
sub
sbb
jne
mov
les
push
scas
and
jecxz
push
dec
fisubl
in
inc
cmc
inc
cmp
and
sub
add
jmp
cmp
sub
ret
cmc
pop
sbb
push
jne
sub
jg
push
in
mov
cwtl
outsl
flds
cmpsb
or
sbb
pop
pop
hlt
mov
sub
out
sti
popf
stos
bound
and
fists
and
sbb
into
movsl
rcrl
fists
psrlq
clc
rorb
jno
lds
subb
xor
bnd
in
popf
test
inc
addb
pandn
jne
lret
dec
xor
lods
int3
fdivrs
outsb
mov
lret
dec
cmpsl
es
orl
repnz
sahf
pop
cmp
push
pop
dec
mov
mov
js,pn
cs
xchg
jl
push
adcb
sbb
xchg
mov
cmpsl
jge,pt
mov
shrl
ljmp
imul
push
sahf
mov
idivl
jb
enter
xor
or
lea
ret
push
sub
insl
in
stos
pop
sub
es
xor
mov
sbb
cmpb
popa
das
hlt
xchg
push
jecxz
lock
daa
or
enter
and
imul
xchg
sbb
mov
or
ss
lcall
add
add
add
pop
sub
insb
lock
jne
cwtl
int3
jb
ffree
jmp
loopne
data16
mov
push
mov
and
in
ljmp
das
adc
jns
imul
inc
popf
jb
dec
jmp
filds
mov
xchg
jg
pop
sub
fdiv
das
in
aas
xor
sbb
lcall
push
dec
cli
insl
rcrb
push
inc
lds
cmp
cli
and
jae
or
inc
icebp
adc
je
adc
les
daa
inc
in
dec
cwtl
mov
inc
mov
lret
pop
or
mov
movsl
and
fistpll
fnsave
pop
pop
push
dec
adc
sub
mov
fs
jb
add
movsl
or
cld
pop
sbb
je
aad
movsl
leave
idivb
mov
sub
cmp
push
repz
cmp
xlat
movsl
lds
jg
or
mov
mov
xor
and
sub
jge
aad
mov
xchg
shll
xor
sbbl
lret
cmpsl
lock
mov
mov
pusha
cmp
xchg
dec
jp
hlt
lret
mov
push
sub
adc
cmp
lods
dec
cwtl
rcl
push
jge
aas
pop
pop
xlat
or
inc
jbe
jnp
dec
ss
mov
add
inc
pop
cmp
jl
mov
add
iret
orl
xchg
scas
push
push
sub
or
je
mov
in
arpl
xchg
stc
imul
and
imul
lds
sbb
or
shll
dec
sbb
sbb
stos
dec
push
add
insb
jnp
movsb
rol
fiaddl
push
loopne
lea
jo
rcll
test
aaa
push
xchg
hlt
xchg
adc
inc
mov
mov
mov
popf
sti
test
incb
pop
jmp
mov
pop
mov
nop
cli
clc
mov
sbb
outsl
pop
pop
lret
ret
pop
cmp
js
lods
fs
fwait
inc
and
test
stc
add
out
mov
movsl
inc
and
mov
adc
push
std
inc
test
aam
push
and
dec
mov
adc
cmc
leave
cli
insb
std
loop
loop
add
iret
stos
shlb
jne
adc
xor
pop
sti
ret
shlb
test
cltd
fcoms
movsb
out
gs
ficoml
mov
add
and
out
repnz
aam
repz
or
int3
jmp
outsl
lcall
sti
dec
sbbb
imul
stos
bnd
iret
dec
call
jmp
jb
jnp
pop
cmp
dec
adc
xor
pusha
dec
push
sub
mov
push
les
scas
stos
xchg
jmp
jl
lds
ja
ror
sbb
add
rcl
mov
add
stos
sub
lods
les
xor
jns
add
sbb
rcrl
aaa
cmp
mov
jne
mov
test
xchg
pop
lret
repz
adc
cmp
ja
xchg
std
jecxz
dec
jecxz
mov
das
push
jge
adc
push
iret
pop
fs
fisubs
jno
cmp
lds
ret
mov
jb
add
lret
xchg
pop
push
fsubr
ret
sbb
and
mov
mov
rorb
push
testb
xor
mov
mov
and
mov
lods
clc
sbb
in
xlat
stos
mov
pop
test
lods
push
inc
js
fdivrs
out
ret
xchg
shlb
xor
xchg
push
pop
inc
jns
fcmovnb
push
xor
adc
cmp
mov
and
xor
call
sub
fs
fmuls
sbb
ret
sbb
add
adc
push
movsb
sbb
out
sub
add
iret
mov
clc
in
inc
mov
mov
adc
jl
hlt
fnstsw
push
lods
arpl
jne
scas
and
mov
cmp
mov
push
leave
mov
imul
or
aad
ss
icebp
or
mov
pop
cmp
call
fbstp
mov
out
mov
add
mov
aad
dec
mov
push
cmp
inc
adc
or
loop
pop
fisttpll
cwtl
cmp
scas
push
sub
cmp
mov
mov
scas
add
out
loopne
pop
mov
sub
repz
add
test
mov
xor
inc
mov
inc
mov
cld
mov
sbb
aam
push
popf
mov
xor
ljmp
out
dec
roll
xchg
pop
das
mov
and
and
aad
pusha
inc
push
jp
pop
cmp
sti
inc
pop
mov
inc
testb
push
sbb
imul
mov
or
xchg
out
es
in
in
subl
test
jle
test
iret
mov
gs
lods
fwait
mov
lcall
leave
mov
lahf
imulb
pop
cmc
roll
fdivs
xor
mov
ss
cmp
cs
nop
loope
lahf
mov
subb
bound
fidivrl
sub
inc
stc
adc
sub
loopne
dec
push
cwtl
dec
xchg
sbb
call
les
and
leave
ficompl
adc
cmpsb
sahf
sub
lcall
es
mov
mov
divb
add
xor
dec
dec
xchg
inc
stos
jp
push
mov
pop
pop
lret
lods
daa
into
and
add
jne
or
or
inc
jmp
sub
or
fstpt
lahf
cli
stc
popf
test
in
lods
cmp
pop
pushf
sbb
adcb
xchg
clc
pop
mov
icebp
push
inc
inc
jnp
scas
add
cmc
sub
xor
push
mov
rol
dec
mov
xchg
addb
cltd
or
push
sub
out
dec
mov
rorb
cs
mov
arpl
mov
leave
das
jmp
in
sub
mov
ret
loop
add
aas
pop
sbb
push
jne
adcb
cld
jle
mov
fcomip
xorb
mov
sar
aaa
jl
out
out
and
inc
xor
test
jle
popa
sub
jbe
dec
daa
ret
push
mov
mov
pop
dec
cmp
es
jne
loope
mov
cmp
dec
xchg
jo
adcl
xchg
cmp
cmp
pop
lcall
fnstenv
and
mov
clc
cmp
fdivs
jp
testl
add
xorl
cmp
sub
inc
add
faddp
add
add
jbe
xor
rol
xlat
rorb
mov
call
mov
mov
out
hlt
negb
jmp
add
pop
into
aam
or
std
fisttps
sti
and
hlt
shr
mov
cmp
and
pop
push
gs
inc
add
dec
sub
push
repz
insl
bound
movsl
cmp
sub
lods
add
xchg
mull
imul
loop
lcall
jmp
test
mov
cmp
cmpl
or
mov
mov
push
ss
nop
adc
inc
jns
xchg
leave
push
fs
xor
arpl
push
sti
dec
inc
mov
repz
push
push
sahf
out
cmp
pop
sti
incb
adc
add
adc
mov
ds
mov
nop
cwtl
test
cmpsl
sub
into
push
xor
mov
aas
mov
and
mov
out
repnz
push
adc
decb
in
mov
sbb
fsts
xchg
shl
scas
ljmp
sbb
mov
push
xchg
dec
pushf
into
fidivl
addr16
inc
and
enter
and
push
stos
push
pop
xor
bound
ljmp
sub
jo
lcall
out
loope
sbb
xchg
out
jnp
inc
push
push
js
pop
add
jne
test
int3
inc
xchg
sbb
mov
jnp
lret
mov
xor
pop
jecxz
jno
dec
incb
add
lock
nop
fdivrl
fiadds
cmpsb
loope
ss
repnz
divb
std
fstpt
sbb
sbb
ja
icebp
ja
jle
pop
xor
loop
mov
mov
sbb
jp
mov
mov
or
adcl
mov
mov
insb
xor
xchg
ret
pop
xchg
jp
sbb
popa
sar
stos
imul
in
xor
ret
sbb
test
test
or
jl
out
mov
or
jbe
push
fwait
lret
jns
loop
or
adc
jb
ret
stos
ja
rcr
jecxz
mov
dec
and
cwtl
roll
xchg
pop
mov
jmp
inc
dec
imul
push
enter
popf
cmp
dec
out
jno
inc
cmpsl
scas
sbb
adc
xlat
xchg
std
mov
inc
out
pop
xchg
clc
jle
sarb
mov
sar
mov
mov
addr16
movsl
jp
test
in
hlt
and
aam
mov
push
push
xor
out
mov
and
ret
and
imul
mov
mov
pop
adc
lret
mov
stos
filds
xchg
adc
or
int
ja
flds
push
mov
les
lcall
data16
orl
pushl
inc
xor
out
insb
es
pop
sub
fcmovnb
add
xchg
xor
daa
lahf
add
pop
mov
adc
cmp
jecxz
pop
mov
hlt
mov
add
pop
adc
in
popf
xor
and
dec
sub
xor
nop
mov
mov
xor
lahf
sub
leave
mov
pop
add
test
cmp
dec
xchg
jecxz
adc
and
les
add
push
xchg
mov
mov
push
mov
iret
dec
stos
aam
iret
mov
xor
mov
movsb
pop
adc
daa
mov
cmp
out
rorl
inc
adc
push
arpl
sub
int3
popa
pushf
pop
dec
sub
jecxz
je
dec
dec
jns
aaa
and
xchg
ficoms
inc
cli
enter
pop
cmp
xor
das
aaa
leave
mov
std
add
inc
aad
xor
pop
adc
push
mov
add
scas
jb
pop
or
xor
xchg
sbb
inc
xor
sahf
shl
pop
std
mov
subl
mov
xor
call
faddl
jle
and
cmp
jmp
repnz
jecxz
adc
sbb
adc
dec
mov
imul
das
push
dec
inc
push
cld
push
lret
push
out
je,pn
mov
aas
imul
mov
push
popf
pop
out
loop
idiv
push
jge
testl
scas
rcrb
pop
or
mov
sbb
inc
repnz
sub
sub
fisttps
popa
nop
icebp
dec
test
xor
lods
ror
jnp
imul
adc
mov
scas
adc
dec
roll
pop
push
in
fnsetpm(287
ds
xchg
es
pop
outsb
dec
mov
mov
into
cs
xchg
dec
sti
push
negb
adc
mov
test
movsl
cmp
xchg
test
dec
sbb
lods
mov
mov
fcoms
xchg
ljmp
out
test
movsl
mov
inc
dec
xchg
inc
movl
push
clc
lods
call
sub
xor
jae
jbe
fwait
fbld
imul
loop
push
loopne
pop
fwait
and
js
xchg
icebp
dec
enter
xor
add
add
mov
dec
dec
jbe
popf
movsb
sub
ds
mov
rclb
pop
xchg
popa
mov
mov
mov
je
clc
push
out
mov
mov
mov
lret
jnp
cmpsb
jae
add
adcl
inc
orl
push
sbb
push
mov
enterw
dec
sub
fwait
sub
add
pushw
aas
jne
xchg
mov
jmp
fstps
pop
flds
hlt
push
add
pusha
out
shl
adc
cli
inc
or
insl
xorb
mov
dec
out
andl
ljmp
lea
xchg
jns
add
in
sahf
jmp
fnsave
cmc
sbb
outsb
sbb
cmp
pop
lcall
cltd
push
jmp
inc
orb
mov
inc
fadd
scas
clc
xchg
addr16
mov
xchg
cmc
ja
jb
and
je
rolb
xor
xchg
clc
call
jg
test
pop
mov
test
mov
cmpsl
jge
movsb
add
aad
push
and
in
cli
rorl
and
sti
fsubs
popa
add
out
fidivs
mov
add
ss
fs
stos
xadd
imul
push
mov
cmp
and
cmpsl
das
xchg
cmp
sub
mov
outsb
mov
xchg
cmpsb
pop
lret
test
jecxz
xchg
xor
mov
pop
push
pop
add
mov
jnp
loop
inc
sbbl
fs
jle
jl
icebp
push
stos
insl
rcll
int
sub
nop
aad
pop
sub
xor
mov
test
pop
adc
push
imul
les
xor
inc
add
or
test
mov
jp
daa
xor
mov
stos
cmp
jmp
dec
cwtl
cmp
ljmp
lahf
rolb
add
outsl
clc
add
jmp
fcompl
icebp
lea
les
les
fadds
lds
pop
div
nop
sbb
enter
adc
imul
jg
out
roll
xchg
cmpsb
test
mov
enter
fsubl
mov
loop
add
dec
lahf
shl
fcmovne
mov
cmp
add
xchg
xor
cmp
negb
cmp
sbb
cmp
and
mov
and
fmuls
sub
out
imul
test
add
test
xor
cmp
dec
rorb
lock
jge
xor
pop
aad
inc
fwait
and
dec
les
es
sti
loop
xor
and
add
pop
sbb
pop
loop
mov
test
jno
or
xchg
inc
dec
loop
shlb
pop
sti
mov
add
xchg
daa
dec
out
xlat
push
cmp
cmc
adc
nop
xchg
punpckldq
jmp
repz
hlt
and
sarl
sub
mov
push
add
fidivrl
xor
cmp
xor
cmp
push
jo
ja
sahf
loopne
and
test
cmpl
pop
xchg
fsubs
mov
fisttpll
pop
test
addb
cmp
roll
sub
mov
dec
push
in
jmp
push
push
dec
jae
mov
cmp
fimuls
mov
loope
das
shlb
mov
popf
sbb
pop
mov
movsb
inc
fidivrs
pusha
cmp
data16
xlat
pop
test
in
mov
inc
fldenv
js
bound
jbe
lods
mov
push
cmp
das
cmp
test
add
fsubrl
sbb
lods
push
push
roll
movl
mov
addr16
shrb
int
mov
xor
pop
inc
jg
adc
cld
inc
mov
push
int
xor
cltd
add
dec
jl
popa
or
pop
repz
fdivs
fisubl
hlt
shll
cmp
data16
mov
push
test
loope
inc
inc
mov
push
cmp
iret
out
outsl
jo
push
cmp
rcll
mov
sub
pop
xchg
daa
pop
insb
stos
push
mov
daa
ret
std
sub
mov
push
mov
fidivrs
imul
mov
and
sub
lret
std
adc
inc
jno
xchg
pop
stos
ret
lds
cwtl
pop
pop
test
pop
shll
clc
mov
or
cmp
xchg
iret
ss
scas
dec
cli
je
ss
jns
mov
out
jne
mov
or
mov
gs
mov
and
mov
jge
loope
in
jecxz
test
addb
aaa
sahf
push
mov
jg
mov
push
adc
and
push
rclb
mov
mov
test
mov
jmp
shl
iret
out
jae
mov
sbb
fnstsw
xor
push
inc
mov
sub
testl
mov
xor
pop
cmpl
mov
sub
pushf
mov
notb
insl
mov
mov
movsl
imul
inc
inc
jb
adc
jecxz
mov
adc
pop
out
insb
aad
dec
icebp
push
fimuls
push
fnstenv
gs
repz
divl
dec
sbb
stos
sub
sti
fsts
mov
dec
fnstcw
jecxz
stos
arpl
int3
loop
je
pop
out
mov
mov
pop
fwait
xchg
cltd
dec
jb
or
ds
sti
pop
pop
jo
push
pop
sti
sarl
inc
push
into
cld
inc
mov
add
xchg
mov
mov
outsb
mov
dec
push
jge
out
les
jl
xchg
push
in
aad
xor
mov
inc
out
adc
je
pushf
push
cmc
test
xor
jne
mov
xchg
daa
push
es
pop
adc
add
push
jp
and
shlb
es
idivb
ljmp
or
adc
adc
les
adc
jecxz
pushf
jp
arpl
sbb
iret
mov
push
sub
mov
pop
pop
lods
pop
mov
cmc
xor
cs
popa
mov
fdivl
pop
pop
jno
outsb
sub
daa
pop
mov
jne
cmpsl
sbb
push
sbb
push
jbe
sbb
loopne
push
pop
ret
mov
cmp
lcall
dec
je
mov
movsb
sbb
pushf
mov
orb
fldenv
pop
adc
aam
outsb
cmp
mov
sub
cld
cmp
lret
in
in
push
mov
sbb
testb
push
inc
sub
push
ja
hlt
xor
jno
in
lds
mov
scas
xor
gs
in
xchg
dec
pop
sub
or
je
gs
ret
mov
or
push
pop
pop
loop
pop
fcomi
xchg
divl
sub
mov
stos
mov
push
in
sbb
rcrl
xchg
sub
push
mov
pop
sar
and
dec
popf
shrb
cld
out
mov
test
cmp
ljmp
lahf
clc
xor
sbb
add
dec
push
jg
mov
mov
mov
aad
push
push
in
sbb
sbb
mov
xchg
xor
push
leave
mov
push
ss
xlat
mov
push
clc
out
cmpsb
mov
insl
movsl
pop
push
dec
or
popf
cmc
stos
mov
and
fldcw
mov
mov
xor
mov
inc
jecxz
out
ja
push
push
cmc
mov
mov
mov
leave
mov
into
and
lds
push
dec
scas
push
icebp
adc
cwtl
mov
loop
inc
dec
lods
in
inc
out
rcll
lret
and
sbb
xor
jecxz
mov
sub
dec
cltd
xor
or
cmp
xor
jl
jbe
fisttpl
pop
movsl
push
fnclex
sub
pop
push
sub
mov
cmp
cmp
jmp
into
sti
das
jg
icebp
cli
popa
cwtl
sahf
xchg
cmc
test
jne
lahf
push
and
lea
sub
cmpsl
xorl
sar
aad
and
imul
out
lret
out
sbb
jne
pop
fnsave
icebp
test
in
mov
jp
test
ljmp
incl
mov
mov
push
push
push
mov
lret
in
dec
pop
push
ss
adc
insl
xor
jae
icebp
ja
xor
addr16
adcl
inc
fcomps
inc
imul
out
bound
pushf
lret
jo
cmp
or
addl
cwtl
xorb
cmp
mov
sbb
mov
rcpps
mov
addb
ret
push
sub
in
jbe
je
cmp
mov
sarb
inc
push
mov
and
add
mov
imul
lret
ror
rclb
mov
add
xor
push
in
jg
in
mov
repz
lods
cmp
aas
out
sub
jae
mov
xlat
inc
cmpsl
sub
xorb
test
jnp
sub
xor
subb
pop
jne
fldt
push
or
ds
pop
popa
cmpsl
lds
inc
push
test
movsb
out
addr16
mov
je
and
cmp
mov
mov
cmc
jnp
dec
rolb
push
fwait
out
idivb
daa
pop
jb
jle
ljmp
out
sbb
vzeroall
xchg
jge
into
cld
imul
add
inc
into
pop
cmp
dec
adc
push
test
aas
mov
ja
xchg
push
and
add
movsl
in
adc
adc
jmp
mov
aaa
adc
movsl
popl
call
xor
and
jg
lahf
jnp
jb
jmp
cmpsl
jle
xor
xchg
cld
je
jae
fildl
mov
aaa
pop
loopne
out
dec
nop
inc
xchg
popa
xor
mov
test
bound
adc
inc
out
lds
add
dec
mov
lcall
ljmp
jo
test
shrl
adc
jo
jecxz
fmul
inc
jo
movsl
xchg
cs
into
push
mov
pop
or
cmpsl
movsb
xor
mov
in
jmp
jp
push
ret
mov
jp
cli
cmp
sub
mov
out
pop
jo
mov
jb
fmul
clc
out
ljmp
repz
pop
push
sbb
push
mov
addr16
enter
xchg
roll
jecxz
pop
popa
mov
and
out
inc
imul
xor
and
dec
fadd
sbb
mov
xor
jnp
fdivs
jnp
or
adc
jle
clc
jecxz
out
mov
ficoms
pop
rcrl
mov
fbld
shl
jmp
mov
cs
adc
jns
push
and
add
arpl
xchg
xchg
jb
in
mov
rcl
loop
mov
mov
in
das
jne
fstl
sbbb
and
insl
mov
mov
jecxz
mov
clc
fiaddl
push
test
popl
rcr
xchg
filds
mov
mov
data16
pop
jnp
xor
and
or
sahf
add
push
push
cmc
repz
cwtl
cwtl
xor
movsb
xchg
mov
addl
fisttps
loopne
nop
push
and
xchg
mov
arpl
push
pop
sbb
inc
jb
nop
loop
push
xchg
fsubrl
jecxz
cmpb
rcr
les
clc
ss
mov
xchg
mov
xchg
fwait
cld
lods
or
ret
mov
mov
data16
or
test
test
insl
inc
xchg
lods
loope
das
stos
sbbb
xor
shlb
pop
negl
cs
shll
xor
clc
fldt
adc
stos
jle
dec
stc
mov
decb
pop
in
mov
arpl
les
add
vpminub
xchg
lcall
loop
sbb
and
rol
add
insb
nop
clc
mov
pop
mov
ret
pop
add
add
stos
sti
sbb
mov
push
inc
xor
jbe
xchg
addr16
in
mov
mov
inc
and
dec
iret
add
adc
sub
mov
arpl
xlat
arpl
add
sub
icebp
add
sub
pop
rcrl
push
jl
mov
incb
fldt
incb
lcall
push
shlb
test
mov
or
testl
test
sub
cltd
addb
fwait
adc
movsl
popa
cmp
cmp
xchg
dec
lret
shld
rorb
insl
out
cmp
testl
stc
addl
mov
sub
and
ss
incb
sarl
jbe
inc
push
clc
xchg
stos
dec
dec
dec
mov
xor
dec
push
push
clc
in
inc
fucom
push
sbb
ljmp
jno
jns
adcl
in
xor
mov
jno
mov
jo
adc
add
ds
je
ljmp
mov
sub
lret
mov
ljmp
mov
mov
mov
add
subb
test
jb
xor
xor
and
cmp
cld
mov
in
dec
stos
mov
mov
jns
loopne
sbbl
decb
or
and
rcrl
xchg
sub
cmp
aas
mov
xor
dec
inc
adc
lret
out
rorb
sub
jp
dec
shll
push
insl
push
ffree
or
ss
lcall
aaa
rcl
jecxz
push
jnp
ret
bound
or
cmpsb
adc
xchg
aam
dec
shr
rclb
pop
mov
add
int3
cmc
cmpsb
orb
mov
rcr
sbb
jle
ds
mov
popf
packsswb
jb
dec
mov
int
int3
jb
add
ljmp
mov
lea
sbb
push
pop
rcrl
movl
imul
je
in
pop
sar
mov
leave
jp
sbb
lcall
mov
or
mov
mov
adc
jne
jecxz
xor
inc
js
xchg
sbb
cmp
jmp
or
xor
and
mov
mov
adc
test
fistpl
dec
mov
repz
inc
xchg
insb
and
pop
insl
adc
mov
icebp
cld
xchg
leave
pop
insb
jnp
cmpsl
jb
cli
mov
daa
xor
and
xor
popf
or
jl
int3
adc
push
popf
push
ljmp
js
or
pop
or
mov
ret
fdivr
jecxz
xchg
or
sub
or
mov
sub
or
cmp
ss
loopne
cmp
sti
mov
adcl
lods
outsl
cltd
cwtl
sub
stos
mov
and
cmp
cmp
rol
push
iret
incl
notb
rcrl
clc
add
js
pop
testb
scas
mov
loopne
xchg
je
jmp
int3
cmp
lcall
jg
ljmp
cmp
jns
adc
mov
pop
mov
xor
mov
sbb
cltd
lret
les
dec
push
add
fs
mov
pop
jno
std
fistl
fs
addr16
gs
push
mov
cmp
mov
dec
nop
ret
sub
sarl
push
les
cmpsb
popf
push
sub
fstp
enter
pop
dec
shlb
je
inc
cmpsb
pop
and
ja
cmpsl
addr16
dec
xor
or
xor
outsl
jge
pop
inc
sbb
and
insb
shr
sub
xchg
stos
xor
or
cmpb
push
in
bound
or
stc
gs
xor
stc
jle
notl
cmp
jbe
in
and
jo
inc
mov
push
pop
xchg
leave
sub
xchg
pop
inc
mov
aam
stos
mov
or
mov
add
xchg
addr16
and
lret
pminsw
popl
sbb
imul
popf
movl
inc
sbbl
or
push
and
pop
addr16
lds
repnz
dec
push
imul
cmp
out
xchg
mov
call
pop
mov
jno
sbb
mov
stos
cs
lea
push
push
mov
push
cmp
ss
xor
add
aaa
sbb
das
pop
sub
inc
popf
aam
dec
and
adc
ds
pop
jmp
sbb
mov
mov
mov
adc
xchg
mov
ret
sub
dec
add
xchg
push
dec
cmc
and
dec
adcb
cmp
mov
ds
sti
and
sub
cmp
mov
flds
rcr
rcrb
pop
outsl
mov
mul
out
sbb
adc
sub
mov
test
jmp
in
addr16
repnz
pop
push
aam
pop
add
mov
arpl
mov
fisubl
push
mov
jmp
lea
scas
or
jmp
dec
pop
outsl
popa
adc
and
iret
dec
mov
push
std
push
ret
out
or
lret
sub
jle
mov
push
in
popf
imul
cmp
sub
ljmp
loopne
pop
fcomps
push
push
rcrl
in
leave
mov
add
jbe
mov
je
fsts
arpl
lds
aas
shr
xchg
sahf
leave
out
hlt
stos
adc
mov
es
call
loope
xchg
inc
cs
jecxz
dec
pop
daa
in
sbb
fcoml
jle
in
and
push
arpl
add
into
shr
jnp
movsb
push
aas
pop
mov
insb
pop
sub
or
pop
dec
pop
les
dec
jo
adc
inc
push
out
clc
aam
cwtl
shll
pushf
lock
icebp
mov
xchg
scas
fst
test
in
pop
shll
sub
inc
mov
aaa
nop
aaa
pop
sbb
int
in
adc
fistpll
xchg
aas
scas
mov
les
sbb
jg
sarl
add
faddl
pop
xchg
xor
mov
mov
xor
out
jge
pop
mov
pop
xchg
xor
jb
fcomps
sub
pop
js
jns
shlb
pop
ja
pop
sub
fnstsw
mov
shld
outsb
lahf
inc
sub
or
sahf
sti
sbb
pushf
xor
xchg
div
cmc
fwait
daa
mov
jns
mov
jge
repz
push
ret
outsb
nop
lahf
inc
es
js
in
bound
inc
or
fldt
cld
adc
sub
lock
addr16
xor
xor
imul
mov
add
ret
outsb
mov
mov
les
fildll
popf
fs
xlat
jb
mov
sub
or
lret
ss
pop
sbb
fwait
cmp
cmp
sarl
cmp
sbb
fsub
popa
fs
das
shrl
inc
xchg
test
fs
gs
push
and
aad
jle
or
add
popa
jb
push
pop
inc
pop
insl
cmpsb
sbb
xor
std
test
dec
mov
fisubl
push
scas
filds
negb
mov
and
out
lret
mov
inc
mov
mov
mov
xor
xor
mov
arpl
aas
movsl
mov
inc
xor
mov
mulb
and
mov
and
mov
xchg
inc
mov
jmp
sbb
divb
int3
dec
icebp
mov
ret
pop
fstps
repz
fwait
mov
leave
lcall
add
dec
and
push
lret
sti
jecxz
movlps
leave
cli
mov
inc
adc
lret
data16
sub
scas
pop
enter
xchg
out
push
mov
insb
loopne
sub
or
incl
pusha
cmp
cmp
mov
mov
sbb
and
je
xchg
pop
push
xchg
or
add
mov
rolb
xchg
cmp
xchg
icebp
adc
xor
pop
push
jle
fsub
sbb
or
push
stos
ljmp
push
push
cli
mov
mov
clc
ficomps
and
cwtl
push
out
in
out
rcrl
out
lods
inc
mov
sarl
adc
pop
sbb
and
push
inc
mov
call
pusha
push
xchg
in
pop
sub
clc
fcompl
mov
out
fdivp
movsl
mov
adc
iret
mov
cmp
jae
sbb
push
mov
push
jmp
jge
mov
test
cmp
xor
popf
les
xor
in
mov
mov
jb
call
out
mov
xchg
cmp
hlt
mov
mov
sub
addr16
imul
movq
int
jno
inc
inc
dec
mov
pop
xor
lock
or
sbb
test
movsb
hlt
loopne
push
or
inc
faddl
push
pop
mov
lret
repnz
xchg
pop
ljmp
cld
leave
push
push
decl
cmpsl
out
loop
fisubl
mov
enter
mov
inc
loope
xor
pop
or
mov
jle
call
mov
loopne
out
mov
cwtl
cmp
jp
push
inc
mov
movsb
test
dec
push
jns
add
repnz
cmp
sbb
mov
call
jae
inc
incb
jnp
sbb
inc
cs
fs
lret
dec
mov
rcl
pop
loopne
shrl
loope
sbb
mov
cmp
mov
push
xchg
mov
add
pop
mov
std
jae
and
icebp
outsl
push
mov
and
das
dec
dec
imul
int3
fnstsw
pop
test
mov
xchg
xlat
fwait
add
decb
jo
jge
subb
outsl
fcompl
xor
cwtl
shrl
mov
dec
lret
fistps
ja
pop
aam
loope
cltd
jp
xchg
or
mov
sub
push
mov
mov
rolb
pop
rcll
cwtl
fnstsw
lods
mov
les
int
push
into
fisttps
cmpsl
pop
out
orb
cli
out
dec
push
hlt
mov
mov
sbb
insl
xchg
mov
jg
add
je
jno
jnp
push
call
dec
jle
mov
xchg
adc
push
icebp
in
add
mov
xchg
push
mov
and
add
shlb
outsb
aam
pmaxub
loop
adc
sub
cmc
push
pushf
jg
pop
or
push
out
add
mov
lods
scas
enter
lds
insl
inc
adc
pop
jno
lcall
xor
les
insl
jo
xor
sbb
insl
sahf
call
dec
mov
jp
repz
lods
pop
filds
sbb
movsb
jno
jp
inc
into
test
jo
pop
jnp
out
xchg
dec
repz
stc
push
and
test
cld
xchg
add
mov
cmc
add
push
les
push
mov
jmp
out
push
inc
out
mov
pop
cmp
stos
mov
lods
aas
or
fwait
jecxz
dec
outsb
ror
scas
inc
js
or
in
ret
fcmove
sti
push
mov
jg
loope
scas
sbb
sar
aam
pop
iret
mov
inc
popa
gs
mov
pop
push
testb
dec
and
jno
mov
jecxz
mov
mov
rorb
movsb
cmpsb
xchg
mov
int
mov
jae
nop
push
jnp
aas
pop
and
in
aaa
dec
lock
sbb
loope
xchg
mov
aaa
push
repnz
dec
pop
in
adc
ss
std
dec
xlat
xor
jb
dec
in
add
nop
nop
ds
mov
insb
call
in
push
scas
fistl
and
test
lds
std
xlat
push
mov
push
push
push
mov
or
jbe
cs
ret
inc
test
iret
xchg
and
cwtl
out
dec
add
sbb
push
f2xm1
xchg
mov
les
mov
fs
std
aas
int
xorb
adc
jnp
jne
mov
loopne
push
mov
ret
push
xchg
push
or
pop
das
les
dec
aas
loopne
inc
add
lea
push
into
sbb
clc
mov
mov
inc
dec
fmull
idiv
inc
mov
or
rcrl
or
dec
xchg
adc
jle
sub
push
and
xchg
in
mov
cmp
loopne
jb
imulb
sub
inc
insl
insl
pusha
andl
or
inc
in
mov
xchg
loop
push
xor
mov
jg
mov
cmpl
jecxz
gs
pop
mov
gs
filds
stos
cmp
cmp
jecxz
loop
pusha
loope
iret
fsubl
idivb
mov
adc
mov
jge
jp
inc
push
sahf
sbb
fwait
stos
and
gs
int3
pop
les
mov
clc
mov
rcl
push
ret
aam
gs
sbb
repnz
pop
je
testl
jne
lock
pop
dec
xchg
bound
and
icebp
nop
aaa
movb
data16
push
mov
mov
icebp
pop
mov
push
hlt
or
jmp
mov
push
lods
sbb
aas
enter
popa
sbbl
aaa
int
rcrb
jl
push
mov
push
xchg
mov
xchg
mov
xorl
xor
xchg
stos
neg
add
jo
enter
xlat
mov
xchg
inc
stos
pop
sub
jp
sub
lcall
add
cltd
fimuls
push
xchg
inc
sbb
cmp
enter
stos
rorl
jl
adc
ror
cmc
and
mov
out
movsb
xor
cli
scas
movq
stc
mov
in
dec
dec
iret
add
pop
mov
push
push
inc
jne
test
xchg
jmp
faddl
pop
lret
dec
mov
jae
cmp
and
inc
and
mov
inc
inc
lcall
mov
mov
pop
adc
dec
mov
xor
scas
imul
popa
lret
inc
mov
or
lods
addr16
mov
sahf
and
enter
lea
push
jg
cmp
es
mov
inc
mov
aam
jmp
and
mov
divl
sbb
stc
shl
inc
fdivr
add
push
mov
cmp
sahf
cli
in
mov
sahf
fwait
mov
cmc
mov
sbb
orb
inc
cmpsb
inc
adc
and
out
mov
lcall
lcall
push
adc
mov
jge
sbb
ss
js
dec
shrl
adc
push
mov
pop
and
loopne
mov
rorl
ja
adcb
es
cmp
insl
daa
inc
pop
mov
loope
mov
adc
fisttpll
jp
pop
inc
pop
push
mov
sbb
stc
fldt
dec
ljmp
loope
xchg
stc
clc
push
fdivl
inc
mov
jg
pop
pop
cld
stc
push
imul
or
inc
add
sub
mov
imul
or
inc
jbe
leave
fisttpll
xchg
cmp
stos
sbb
mov
sti
adc
mov
push
mov
nop
add
out
lods
les
mov
mov
fucom
hlt
fsubrs
inc
sbb
pushf
adc
int
fidivrl
or
pop
cld
rcll
and
in
pop
test
in
jp
popa
adc
bound
sub
stos
stc
xor
rorb
adc
mov
fists
js
je
jns
stos
dec
ss
mov
cltd
sbb
out
mov
aad
push
das
jns
loope
mov
test
into
xor
add
les
out
repnz
cli
sub
or
je
xorb
mov
mov
ja
loop
in
push
loope
jb
jbe
cld
or
sarb
xchg
add
lret
xor
and
fcomps
inc
cmp
push
cmp
loop
jbe
sti
pop
popf
js
lret
or
sbb
scas
scas
ja
insl
fidivs
in
dec
add
in
leave
rcr
in
lods
scas
mov
je
std
addl
gs
inc
xorl
mov
fadds
stc
mov
popf
nop
addr16
mov
jl
xchg
stc
outsl
inc
jnp
pop
adc
fs
mov
pop
add
sub
cmpsl
adc
testb
mov
pop
pop
int3
out
mov
cmp
inc
inc
scas
xor
push
mov
push
mov
in
dec
cmpb
notl
adc
mov
sbb
fs
jle
mov
or
mov
in
push
mov
cmp
in
arpl
aad
cld
mov
leave
push
int
cwtl
sahf
or
and
or
xor
inc
fdiv
inc
loope
mov
sahf
jecxz
pop
sbb
icebp
int3
jnp
orb
lock
or
mov
divl
faddp
xorb
enter
inc
mov
lods
push
sbb
pop
mov
inc
test
ljmp
jecxz
mov
or
cmp
test
xor
and
or
loopne
dec
xor
pop
in
clc
mov
call
pushl
cmp
fsubrl
nop
sbb
out
stos
shl
cwtl
lret
arpl
fidivrs
sbb
xlat
and
or
pop
addl
mov
mov
loope
dec
xchg
popl
ss
xor
cmpsb
jbe
iret
mov
je
inc
pushf
daa
adc
lahf
out
jae
pop
in
imul
push
fbstp
in
outsl
jae
out
xchg
pop
dec
xchg
aad
sbb
pushl
or
mov
jb
jge
fmul
scas
pop
dec
aad
repz
cmpsb
cmp
mov
shlb
outsl
test
xchg
lods
movsl
sti
jo
jmp
dec
xchg
mov
leave
mov
xchg
or
test
jge
adc
sbb
imul
rorl
aas
dec
jg
xor
push
fiaddl
ljmp
addl
mov
sahf
xchg
ds
insb
mov
aaa
pop
setg
dec
sbb
gs
push
pop
push
idivl
scas
inc
mov
dec
and
sbb
call
adc
cmpsl
sbb
sbb
xchg
inc
xchg
fmull
fmul
mov
repz
js
pop
into
mov
loopne
xchg
inc
lret
sbb
jne
fstl
das
add
jp
imulb
mov
cmpsl
lahf
xchg
sahf
fs
arpl
xor
scas
sarb
lcall
pusha
mov
lods
xor
adc
add
fcoms
xchg
fwait
cli
faddl
hlt
aaa
inc
insb
mov
xor
mov
insl
mov
jmp
jecxz
mov
xchg
mov
mov
ret
pop
mov
mov
ret
and
cltd
popf
sub
pop
sub
push
cmc
mov
mov
out
inc
cmp
cmc
xchg
cmp
jle
idivb
insb
out
int3
popl
out
lods
push
pop
test
mov
pop
cmc
jp
daa
adc
jns
dec
or
add
or
std
pop
sbb
xor
and
mov
dec
fstpt
js
inc
scas
dec
cld
jp
nop
jl
pop
xchg
jmp
pop
jmp
in
pusha
cmp
jne
negl
es
lods
sbb
jne
pop
out
jbe
jae
xchg
mov
xchg
push
scas
mov
sbb
ja
ret
xor
cmp
mov
push
push
f2xm1
insb
cmp
addl
and
movmskps
sahf
mov
add
push
imul
inc
sarl
les
fnstsw
lea
leave
mov
cmp
test
das
cltd
loop
push
dec
xchg
adcl
lods
xor
jns
pushf
hlt
cli
mov
ret
inc
aas
in
cmovno
add
xchg
jns
inc
add
fmull
aas
xchg
cli
fcmovnbe
fcompl
mov
data16
test
sahf
lods
pop
xor
dec
mov
int
das
or
shlb
mov
jns
movsl
xor
inc
pop
jne
pop
mov
cmpxchg
loop
scas
jl
push
call
inc
adc
push
out
fistps
fcmove
mov
cmpb
fwait
mov
insb
add
dec
adc
loope
adc
fmulp
xor
cwtl
jno
insl
jmp
push
movl
call
pop
pop
int3
fstl
nop
cmp
sub
mov
and
push
int3
or
xor
or
lret
add
in
push
scas
faddl
jae
jge
jne
jne
pop
adc
popf
add
push
push
jns
add
mov
xor
lock
add
xor
aaa
lret
outsl
insb
xlat
cltd
fldcw
push
push
dec
lods
push
aam
mov
adc
push
mov
movswl
ljmp
jae
pop
movsl
sub
movntps
dec
lods
cmc
out
xor
cmp
mov
xchg
mov
ja
mov
xchg
cmp
jg
jae
cli
xor
jae
das
fucom
and
int
cmp
ss
nop
cmpb
xor
cmp
jbe
andl
lock
dec
sbb
mov
insl
pop
cmp
insl
outsl
inc
and
xchg
push
shll
jl
mov
mov
jecxz
xchg
loopew
leave
popf
pop
movsl
outsl
ljmp
aas
pop
cmp
adc
add
jb
xchg
add
xor
insb
xchg
fwait
jbe
jle
cmp
mov
divl
sbb
or
cmp
test
sahf
sub
mov
das
sbb
stos
stc
movsb
lds
in
into
push
inc
inc
cltd
adc
enter
add
js
ljmp
in
es
sbb
push
pop
add
stc
lcall
les
mov
or
sub
jmp
adc
pop
push
ljmp
mov
pop
xchg
mov
xchg
stos
mov
jo
adc
int3
adc
ss
jnp
xchg
test
out
push
dec
outsl
sub
inc
lods
sub
sub
jmp
or
icebp
mov
dec
adc
cmp
and
clc
int3
xchg
mov
std
pop
roll
test
loop
xor
pop
mov
add
mov
mov
adc
std
xchg
and
mov
pop
push
in
mov
testl
dec
push
pop
loope
addr16
adc
je
dec
inc
adc
mov
sub
add
sub
sbb
lods
inc
add
decl
or
imul
cld
popa
cltd
loope
das
add
xchg
dec
lret
fildl
movsb
pop
in
fisttps
pop
shrl
push
jb
cmp
cld
adc
arpl
push
dec
mov
in
dec
sub
lret
mov
adc
mov
outsl
xor
mov
aaa
psrlq
out
ljmp
imul
push
push
shlb
adc
sub
mov
ljmp
sti
jmp
mov
pop
jo
push
mov
arpl
push
add
xchg
pop
fwait
stos
inc
aas
inc
paddusw
and
sub
js
ret
lahf
and
sub
stos
jnp
loope
out
mov
aaa
lods
jnp
xor
push
cmp
imul
fisttpl
int
jge
dec
xchg
jbe
cwtl
xor
jne
ret
push
adc
fistpl
aaa
mov
xor
xchg
dec
les
fs
fadds
lcall
in
add
or
or
fists
pop
daa
xor
sbb
lcall
fwait
subb
lds
subl
xchg
das
jne
sbb
mov
sbb
pop
fistpl
push
pusha
ja
in
je
test
jns
rol
jae
add
jmp
repnz
jle
movsb
stos
mov
test
jb
sub
pop
xor
or
and
mov
mov
test
dec
scas
mov
or
mov
insb
or
or
jns
idivb
push
out
cmp
pop
bound
into
jnp
mov
jp
stc
inc
scas
es
sti
xor
inc
mov
mov
pop
adc
negb
in
loopne
rorl
add
xor
clc
cmp
sbb
loopne
inc
or
mov
jge
fisttpl
jo
adc
fidivrl
in
cwtl
jp
inc
add
xchg
pop
adc
test
mov
mov
sbb
adc
mov
xchg
mov
push
jns
or
orl
dec
ret
adc
popa
mov
lret
lock
pop
adc
in
rorl
fwait
jnp
mov
jno
bound
cs
mov
xor
lret
xchg
and
sti
pop
dec
adc
jns
dec
dec
sbb
pop
shll
dec
dec
sti
ud2
or
mov
add
xchg
dec
adc
pop
add
in
xchg
or
enter
cli
rclb
std
and
addr16
lret
jb
aaa
insl
inc
pop
imul
jle
sub
mov
or
out
aas
stc
fdivrs
sbb
bound
mov
fdivrs
lahf
jns
mov
shll
xchg
xchg
sub
es
popf
push
adc
mov
mov
cmp
jae
std
scas
in
lds
push
je
std
add
js
sub
cmp
xor
inc
dec
fcoms
mov
and
pop
sbb
movsb
loopne
xchg
sbb
pop
out
adc
test
ljmp
mov
mov
movsl
sub
mov
pusha
mov
pop
lods
push
or
movsb
in
ficomps
sub
es
stos
nop
mov
sbb
jl
pop
and
xor
mov
adc
push
cmpsb
jecxz
sbb
fstpl
aam
test
mov
or
pop
insl
cld
xchg
add
test
shr
mov
jno
inc
mov
cmc
add
nop
lret
lds
hlt
sub
mov
dec
mov
and
iret
push
jnp
jns
iret
ja
andnps
sbb
es
mov
dec
mov
pop
scas
push
scas
sub
cwtl
je
xor
add
xor
add
inc
movsl
cmp
shrl
insl
ds
push
add
cmp
in
xchg
mov
mov
push
push
jo
sub
or
cli
jae
in
pop
pop
pop
les
pop
push
lods
push
out
enter
jl
or
les
gs
ljmp
sarb
jmp
mov
imul
test
xchg
xor
test
or
gs
mov
mov
jmp
mov
inc
mov
inc
adc
pop
xchg
and
xor
push
decb
js
add
adc
js
rcrl
push
test
pop
loopne
jnp
cmp
adc
and
mov
sub
and
gs
daa
pop
insb
stos
mov
inc
push
inc
mov
cltd
stos
add
or
xorb
mov
bound
cwtl
xorb
repnz
loop
icebp
mov
xchg
fldcw
gs
mov
xchg
sub
lahf
and
dec
mulps
sbb
xor
inc
xchg
mov
lods
flds
int
jae
decb
dec
pop
stos
lahf
xchg
jl
movsb
fdivs
mov
jmp
or
xlat
loop
cwtl
loope
aad
je
push
shrl
adc
and
rclb
dec
test
pop
iret
xchg
sub
scas
add
cli
movsl
inc
mov
jl
lret
fnstcw
jg
mov
fldl
cmp
call
or
adc
pop
adc
sahf
pushf
inc
das
sbb
mov
scas
mov
jno
cld
mov
test
inc
or
js
mov
imul
scas
mov
stos
test
pusha
adc
add
aas
insl
cmp
leave
je
jge
cmp
andl
adcl
sub
mov
in
pop
ljmp
test
sbb
jle
cmp
xor
sahf
xlat
mov
loop
pop
cwtl
jns
push
je
movsl
mov
repz
out
xor
mov
pop
xor
scas
std
addr16
add
and
adc
mov
sbb
push
shlb
dec
shl
fwait
xor
adc
movsb
repnz
ret
lock
xor
pushf
mov
push
ror
shl
ret
mov
ret
cmp
mov
es
or
pushf
mov
cwtl
inc
ja
stos
dec
sti
adc
mov
dec
mov
lods
pop
bound
dec
gs
cld
inc
jb
push
jae
mov
mov
insl
mov
push
push
stos
stos
sub
mov
mov
mov
pop
sub
lahf
jne
cmp
jns
dec
cmpsl
hlt
dec
lea
das
fstps
add
cli
or
jo
bound
mov
sti
cmp
ds
jle
jp
add
mov
pusha
dec
repnz
xchg
push
push
stos
mov
fwait
cs
ds
sub
add
addb
arpl
jle
pop
insb
sbb
ljmp
dec
lods
fnsave
xchg
or
popa
mov
mov
outsl
stc
pop
push
ja
pop
outsl
mov
mov
and
sbb
and
sbb
shll
test
andb
push
pushf
push
shl
cltd
xor
adc
mov
add
ja
lea
std
outsb
pushf
test
insl
push
aaa
subl
mov
jge
push
test
push
lret
xor
sbb
pop
out
push
or
mov
ret
sbb
pop
mov
adc
mov
add
inc
pop
pushf
push
pop
and
adc
mov
in
outsl
or
xchg
lods
pushf
scas
testl
faddl
cmp
call
shlb
test
adc
inc
movl
mov
dec
mov
cmpsb
ja
ljmp
jl
jg
outsb
dec
testl
xor
jbe
scas
out
std
add
or
mov
adc
pop
adc
adc
loopne
xor
and
lret
pop
mov
xchg
mov
adc
sbb
bnd
push
jmp
enter
inc
aas
cltd
xor
mull
gs
cmp
in
addr16
mov
xor
jno
adc
sbb
mov
imul
les
mov
ret
adc
aad
arpl
or
dec
push
out
js
addr16
gs
lock
sub
xor
mov
inc
jne
mov
and
mov
jnp
pop
mov
fisttpl
in
repz
xor
lret
mov
jbe
xchg
mov
lea
or
test
mov
jle
jb
jecxz
cmp
ds
sahf
fiadds
xchg
cltd
lods
insb
sub
cmp
imul
andl
xor
jne
outsb
movsw
mov
int3
mov
inc
lea
pop
lds
inc
insl
fdiv
cmp
je
loop
imul
loope
dec
cmp
mov
jg
movsb
in
pop
arpl
push
push
mov
inc
jecxz
sbb
xlat
fidivl
dec
push
pop
lods
scas
ficoms
add
inc
xchg
mov
mov
cmp
out
mov
jo
data16
cmp
int
in
stos
lds
sub
jne
cmp
mov
stos
lea
push
fdiv
int3
push
decb
xchg
jae
mov
subb
scas
popa
sub
xor
mov
mov
out
out
inc
sub
xchg
cmpsb
clc
sub
dec
cmc
cltd
mov
mov
jo
testl
ljmp
frstor
pop
fwait
or
pop
outsl
icebp
cmp
clc
or
faddp
push
lret
adc
mov
fisubrs
sub
call
out
out
xor
xchg
or
ds
call
mov
adc
dec
sti
iret
mov
hlt
inc
pop
jmp
andl
jle
scas
lcall
adc
outsl
inc
loopne
pop
push
ret
in
jno
jae
jle
jle
ds
scas
test
adc
aaa
notb
test
in
test
xchg
jle
mov
sbb
icebp
leave
or
cmp
sahf
and
xchg
inc
imul
xor
rorb
hlt
or
mov
iret
ja
mov
jmp
push
ds
not
and
or
dec
pop
push
mov
pop
into
js
aad
lods
outsb
jl
cmc
lcall
jb
push
movsb
pop
ficoms
xchg
out
push
fidivrl
lret
mov
push
sbb
mov
fs
in
xchg
pop
dec
mov
leave
inc
stos
cmp
stc
inc
add
daa
mov
push
jb
jg
or
jnp
gs
sbb
sti
and
push
push
je
lret
sub
pop
lds
inc
dec
fcmovnu
iret
jns
pop
ljmp
dec
or
cltd
cwtl
pop
test
ss
mov
into
adc
in
jg
xorl
repz
out
sbb
xchg
pop
pxor
and
outsl
mov
jl
push
xorb
mov
outsb
test
in
test
scas
inc
out
int3
scas
jne
dec
stos
lret
das
cmpsl
push
addl
cwtl
mov
pop
xlat
ret
cmpsl
dec
push
int
in
adc
mov
adc
and
xor
mov
adc
dec
xchg
lock
push
inc
sub
addl
sub
shrl
andps
pop
pop
cmp
test
cmpsl
or
andb
inc
add
fsubrs
add
lcall
inc
xor
shrb
scas
sub
stos
mov
ljmp
ret
mov
fidivs
jg
fidivs
repz
rorb
push
idivw
mov
shrl
lods
js
mov
out
cmc
mov
std
xor
jmp
jns
dec
add
stc
lcall
fldcw
mov
mov
sbb
call
pop
xor
rol
test
mov
inc
xor
insl
test
lods
and
mov
push
push
ret
xchg
hlt
push
loopne
aad
pushf
cltd
sbb
mov
add
pusha
ds
mov
enter
pop
popa
pop
xorb
push
decl
mov
xor
arpl
dec
mov
inc
pop
das
xor
mov
or
popa
movups
mov
jbe
adc
pop
or
sarb
cmovle
push
jns
fnstenv
idivb
cmp
xor
push
in
xor
cs
pop
iret
push
pop
roll
movsb
cli
fdivr
in
jecxz
sbb
push
into
dec
mov
jge
je
sub
test
sub
shlb
push
dec
pop
jp
stc
mov
pop
sarb
push
xor
ror
arpl
push
adc
mov
dec
arpl
gs
adc
test
test
push
js
sub
mov
mov
inc
rol
mov
addr16
xchg
je
xchg
lods
into
fists
sbbl
repz
nop
lds
mov
int
jno
test
pop
dec
and
sbb
and
fsts
scas
inc
or
repz
lcall
clc
or
lret
dec
push
push
rorl
lods
out
mov
jnp
and
inc
adc
testl
rcrl
roll
inc
fwait
inc
pop
dec
mov
pop
sub
cs
add
jle
bound
cmp
adc
fmuls
stos
mov
nop
pop
push
test
bound
xchg
inc
mov
loopne
loop
mov
lods
push
mov
insl
hlt
pop
xchg
cli
mov
fldl
popf
les
xor
mov
test
jbe
enter
fisubl
cmp
in
imul
add
mov
nop
mov
xchg
mov
mov
out
cmp
xor
pop
mov
pop
addr16
inc
cmpsb
imul
lcall
or
mov
adc
mov
mov
leave
xchg
data16
inc
jo
fistl
sbb
mov
jbe
cmpsl
in
hlt
cmc
mov
jbe
loope
mov
mov
leave
inc
jbe
outsl
mov
cmp
aaa
push
pop
insb
xchg
mov
and
sbb
out
lret
xchg
mov
mov
push
or
add
cmp
lret
and
add
loopne
nop
jne
hlt
loop
xchg
jae
jbe
xchg
pop
in
loop
sbb
lahf
ljmp
sub
adc
dec
push
data16
jmp
outsb
addb
and
mov
les
popa
ret
and
sti
testl
jg
or
rcl
push
outsl
xchg
push
shlb
mov
iret
sub
test
mov
mov
push
rolb
fadds
bnd
arpl
dec
lahf
addr16
mov
loop
jmp
test
dec
push
xor
pop
push
mov
std
shlb
cmpb
cmc
adc
inc
mov
or
xlat
adc
dec
outsl
jno
sbb
jns
lock
je
test
fcmovnb
pop
and
inc
movsb
sbb
adc
icebp
adc
cli
addb
jbe
add
jmp
arpl
push
fmul
daa
sub
xchg
out
mov
test
sub
test
cmp
fbstp
imul
adc
idivb
fsub
nop
loope
mov
lahf
cltd
or
mov
jmp
adc
fistpl
and
loope
push
xor
and
leave
inc
subl
int3
rcrb
sub
lret
stc
cmp
adc
and
iret
imul
mov
cld
inc
aas
rol
std
out
fnstcw
push
push
cltd
test
pop
or
lea
mov
mov
and
out
sub
or
mov
push
push
sub
jb
and
dec
mulb
jne
adc
add
jp
idivb
lock
shlb
out
cli
lods
pop
fnsave
push
xchg
hlt
xor
into
add
fwait
subb
jne
pop
or
push
mov
das
xchg
mov
aad
insb
jl
cwtl
mov
fsubp
or
int
pop
mov
scas
sub
add
inc
addr16
push
mov
rol
or
adc
cmp
test
pusha
das
or
test
sub
decl
stos
es
rol
movsb
add
popa
and
inc
aaa
mov
stos
out
lods
dec
push
cmc
lret
enter
dec
dec
pop
xchg
jp
mov
mov
gs
call
movsl
sub
add
or
and
dec
xchg
loope
mov
ljmp
mov
loop
push
pop
fcoms
sbb
sub
inc
andb
adc
xorb
pop
sbb
ret
into
mov
push
pop
mov
or
xchg
loopne
adc
std
dec
or
in
and
fdivrl
lods
mov
cmp
xchg
scas
sub
push
ret
enter
xor
mov
cmp
call
xchg
js
cmpsl
sub
push
imul
mov
je
mov
inc
mov
pop
sbb
adc
lods
push
mov
sbb
xchg
stos
ss
mov
stc
mov
jnp
and
jno
repz
ficoml
or
dec
push
push
jmp
push
pop
mov
mov
fst
popf
xor
popf
sarb
pop
add
jp
pop
stos
mov
fstpt
leave
popa
mov
into
cltd
or
out
nop
stos
aad
jns
out
sbb
add
adc
jg
sbb
sub
insb
pop
lds
out
or
mov
push
mov
lret
inc
sbb
xchg
xchg
xor
xor
and
leave
ret
xchg
adc
push
repnz
stos
push
rcl
cmp
scas
loopne
subb
stos
xchg
adc
or
inc
mov
cs
xchg
fldenv
jle
add
sti
mov
lods
cli
sbbb
scas
xchg
outsl
inc
loopne
jmp
xchg
adc
push
jmp
lock
out
push
fsubrl
sti
std
sbb
or
sbb
rcrl
xor
icebp
stos
push
enter
hlt
sahf
gs
push
push
dec
cmp
in
xor
mov
add
cmp
sbb
subl
es
je
sarl
test
lret
clc
imul
and
sbb
popa
mov
paddb
mov
dec
fnstenv
mov
test
and
icebp
mov
mov
xor
adc
or
mov
push
in
pop
adc
cmpsl
pushf
fstp
jge
lock
push
mov
push
in
dec
je
leave
cmc
popa
and
mov
mov
ret
fistpl
jg
lea
xor
es
mov
lds
jp
and
push
cli
sbb
jbe
test
mov
rcrb
mov
push
stos
lret
scas
cmpsl
cmp
aas
dec
jns
adc
out
add
fidivs
jmp
jnp
adc
xchg
test
or
call
cmp
mov
add
push
fs
xchg
clc
lds
and
ret
mov
es
and
dec
sub
daa
mov
cmp
lods
push
bound
nop
adc
fidivrs
jmp
inc
or
or
fsubrl
push
jbe
arpl
jb
rcrb
jl
loopne
divl
cwtl
iret
add
xor
into
sub
xchg
pop
icebp
inc
jae,pt
adc
mov
bnd
mov
push
int3
dec
into
stc
mov
cmp
jno
or
jo
loop
jns
cli
pop
cli
mov
xchg
clc
lahf
js
jmp
in
lea
push
pop
mov
dec
ud0
cmp
and
dec
mov
js
adcl
sbb
fstps
movsl
rorl
das
xchg
repz
mov
aaa
sub
inc
lods
xor
sbb
in
cmova
leave
push
cmp
aas
sarb
sbb
hlt
loope
cmpl
add
mov
xchg
into
inc
mov
mov
push
push
in
mov
push
das
fcoml
sbb
cmpsl
xchg
dec
lods
mov
clc
sub
lahf
mov
pextrw
pop
dec
test
pushf
adc
jb
repz
sar
pop
sub
lods
orl
mov
mov
mov
lock
test
das
xchg
lods
mov
mov
sbb
cwtl
xchg
popa
arpl
dec
jae
test
sub
sub
push
loop
lea
inc
das
fs
out
inc
hlt
and
mov
shll
and
pop
or
dec
out
scas
adc
mov
lcall
repz
pusha
and
out
sub
adc
loop
cmpsb
mov
and
sbb
icebp
repz
test
scas
pop
inc
cmp
jecxz
push
fxch
jo
or
xchg
push
adc
push
mov
lahf
fs
cli
stos
icebp
sub
xchg
fwait
dec
lds
aad
xchg
fisubrs
push
lret
inc
test
cld
add
addr16
repz
sti
lods
imul
push
or
mov
sub
jne
fisttpl
lret
inc
mov
rorb
int3
mov
lock
in
inc
je
popa
mov
mov
ljmp
out
ja
mov
adc
pop
or
mov
jecxz
dec
or
andb
lock
stc
jle
mov
iret
push
lahf
sarb
push
mov
out
push
aad
jle
mov
pop
mov
cmp
xchg
inc
fwait
imul
and
std
sbb
js
pop
ljmp
xchg
test
nop
push
mov
push
inc
iret
push
dec
cwtl
loope
sbb
add
sbb
js
aaa
shll
in
insb
cli
xchg
or
inc
cmpsl
outsl
jns
push
ljmp
pusha
ja
ret
test
ds
orb
pop
jge
adc
arpl
loop
hlt
xor
stos
ret
mov
iret
vrcpps
dec
aam
ss
pop
pop
xchg
mov
sub
xlat
push
add
pop
andl
pop
push
fincstp
push
sti
test
dec
loope
idivb
test
adc
adc
or
or
pop
insb
popa
mov
push
sbb
cmp
xchg
pop
push
push
out
add
jno
adc
addb
movsl
imul
fisubl
loopne
jno
mov
fmuls
xor
or
out
std
xorl
call
gs
in
enter
jo
sbb
lock
bound
ds
loope
clc
cmc
leave
push
inc
jmp
push
icebp
sbb
loopne
add
mov
inc
notb
fcompl
les
fisubrl
cmp
js
jns
lods
lahf
jp
aaa
rcr
sahf
jp
xor
push
mov
pop
dec
in
insb
or
scas
lret
leave
mov
sbb
mov
mov
jmp
iret
pop
dec
mov
jo
pop
xchg
inc
jne
jg
icebp
fidivrl
jg
cmp
push
hlt
fwait
or
inc
and
mov
ret
xchg
into
and
xor
xchg
adc
imul
loope
mov
rorb
fdivl
mov
sub
ficompl
lods
add
lret
cs
orb
sbb
movsl
xor
and
pop
and
and
jae
pop
pop
xor
push
out
xlat
jns
es
or
fbld
cmp
dec
xchg
pusha
std
repz
pusha
pop
inc
dec
jns
icebp
shlb
in
negl
adc
mov
xchg
hlt
outsl
fldenv
sahf
sub
pop
adcb
mov
dec
jg
aaa
enter
lds
or
push
cmpb
rorl
shl
cld
jg
push
jb
add
dec
add
push
mov
addr16
ror
or
mov
mov
add
fisttpll
rorl
ljmp
loopne
add
pop
mov
pop
flds
rolb
daa
hlt
stc
std
mov
dec
adc
mov
ja
or
lahf
into
dec
adcb
adc
push
mov
ficompl
add
loope
jmp
mov
dec
nop
movsl
xlat
pop
popf
add
movsl
cmpsb
xlat
mov
push
mov
loop
push
push
inc
adc
ss
inc
out
add
inc
cmpsb
aaa
scas
mov
data16
mov
cmpb
adc
mov
dec
or
mov
adc
sub
jmp
xchg
in
push
rclb
mov
mov
imul
push
add
add
addr16
jo
xorl
shll
sbb
out
jae
cmpsl
cmp
sbb
sti
stos
hlt
or
mov
das
xor
push
ret
inc
mov
push
sbb
or
pop
adc
lea
in
push
jnp
xchg
mov
sbb
jmp
or
mov
lods
inc
test
dec
adc
lret
xor
stos
adc
iret
inc
mov
xor
mov
jmp
lds
repnz
jb
inc
inc
in
roll
movsb
jno
add
sbb
xor
test
pop
nop
sarb
push
mov
sub
mov
pop
out
scas
sub
jmp
jo
outsl
enter
inc
in
dec
int
std
mov
sbb
sub
in
push
outsl
jp
ret
shlb
out
mov
outsb
sbb
or
and
push
xchg
pop
adc
inc
stos
push
mov
jmp
out
call
xchg
mov
pop
pop
addr16
out
nop
in
ror
ja
call
mov
jb
or
ss
sti
adc
clc
jp
out
out
xchg
or
jle
stc
inc
cmovne
jle
jmp
xlat
xchg
popa
jns
mov
enter
leave
addl
lret
repz
movb
mov
xchg
arpl
jns
mov
loope
mov
aaa
std
sarl
xor
sub
mov
pop
jnp
test
dec
cmp
fwait
call
test
movsl
cmp
cwtl
mov
sub
rclb
mov
and
mov
cmp
call
xchg
jg
push
and
sahf
mov
popa
jbe
fsubr
popf
rcr
repnz
fabs
mov
into
cmc
push
push
rcr
movsl
repnz
aad
xor
stos
int3
push
test
test
or
mov
pushf
mov
jb
pop
mov
xchg
jmp
or
add
test
aad
inc
fadds
jno
out
mov
lds
jb
inc
sbb
cli
sub
mov
jge
ljmp
popf
jae
push
jle
xor
cli
jl
add
xchg
gs
loop
rclb
mov
pop
cmp
push
lods
ljmp
popa
sti
and
lcall
jge
shll
ja
cld
nop
inc
inc
neg
fsubl
jl
ss
aad
inc
fcomps
gs
pop
add
push
mov
and
insl
or
jp
imul
cmpsl
fildll
pop
dec
xchg
movsl
fwait
lea
sub
adc
mov
and
mov
call
jno
mov
cmp
and
out
repz
lods
sbb
mov
jg
clc
imul
xchg
mov
push
dec
jne
cmp
add
loopne
mov
jmp
out
shrl
int3
lret
or
lds
repz
minps
pop
mov
and
clc
popa
pop
test
in
inc
pop
xor
popf
mov
sub
cmpsl
cmpsl
mov
add
jl
pop
clc
sub
mov
sub
pushw
jbe
daa
dec
loopne
mov
adc
adc
imul
adc
dec
ss
ja
rcrl
movsl
lods
add
or
xchg
dec
dec
mov
movsb
push
loop
inc
xor
xchg
into
adc
add
adc
push
mov
xchg
mov
xchg
popa
jg
pop
jae
imul
stos
xor
cmpsl
ret
popa
fsubs
lock
jg
adc
adc
mov
sbb
jmp
add
cli
rcll
and
jecxz
andnps
arpl
loop
loope
aas
or
pop
dec
xor
xor
popa
shlb
inc
fsubrl
sbb
adc
popa
add
call
arpl
xor
jle
std
sar
adc
cwtl
hlt
daa
mov
test
testl
popl
jg
sub
out
loopne
shll
mov
jb
scas
or
jne
rol
xchg
or
mov
push
and
jmp
imul
push
mov
test
in
xor
push
rcl
iret
fstl
fldenv
jmp
mov
mov
insl
js
ret
loopne
jecxz
dec
jmp
inc
shll
jbe
xchg
push
inc
pushf
fldenv
fs
mov
mov
insl
pop
negb
push
pop
mov
xchg
dec
int3
adc
and
ret
cmp
movsl
xor
imul
fnstsw
sbb
sub
jns
or
xor
ja
mov
mov
jne
aad
mov
xchg
icebp
insl
adc
inc
mov
fs
loope
jge
test
jno
decb
pusha
adc
scas
jb
scas
or
arpl
pop
push
jg
dec
pop
rcrb
les
test
lods
popf
movntps
xor
pop
adc
xchg
push
out
imul
jo
fistl
inc
add
movsb
dec
jno
mov
int
shrl
icebp
sub
xor
xchg
ret
outsl
add
cmp
fstpl
pop
sti
mov
and
mov
xchg
sbb
fs
jg
insb
imul
das
mov
xchg
push
inc
jg
jmp
push
jo
add
jl
pop
inc
xchg
cmp
icebp
loope
xchg
mov
push
outsb
lea
rol
ds
test
fcmovnb
repz
fucomp
loope
mov
dec
outsl
or
repnz
sbb
mov
out
mov
sub
jo
jae
and
dec
adc
divb
xlat
movsl
xlat
pop
adc
testl
popf
cltd
movsb
orb
adc
sub
add
ljmp
mov
inc
xchg
divl
fbstp
sbb
jno
jg
fcoms
enter
push
or
aas
repz
jmp
test
push
bound
imul
push
adc
cmp
lea
sub
enter
sti
xchg
imull
mov
inc
push
mov
cwtl
push
test
fcoml
push
or
cmp
aam
adc
xor
sti
pop
sahf
clc
gs
xor
or
xor
jp
imul
push
dec
jp
jno
int3
cmp
pop
rcll
outsb
mov
mov
mov
jnp
jecxz
fsubrs
addr16
xchg
and
sub
sbb
dec
fisttpll
decl
pop
add
cmp
cmpsl
sbbl
xchg
add
inc
in
mov
sbb
xor
pop
insl
test
sahf
imul
outsb
adc
xor
fidivl
cmpsl
shrl
cwtl
scas
loop
mov
int3
std
mov
and
xor
enter
in
inc
int3
jg
scas
sbb
push
outsl
dec
lret
fisubrs
mov
arpl
fistps
cmp
mov
adc
call
nop
mov
pop
popa
inc
jno
bound
out
scas
mov
pop
sub
out
fdivl
lea
stos
std
lds
mov
rorl
dec
loopne
inc
je
push
inc
adc
mov
mov
lahf
cmpsb
or
iret
and
fdivr
pop
mov
jo
mov
push
in
pop
pop
idiv
ljmp
inc
cmp
cwtl
outsl
mov
pop
push
push
ljmp
push
aas
pop
scas
jle
bound
repz
test
mov
fcmovne
enter
in
xor
cwtl
mov
das
push
icebp
jnp
xchg
pop
sbb
imul
jge
jne
sbb
push
test
aas
jnp
xchg
xchg
lock
dec
inc
shrb
sbb
xchg
adc
std
push
mov
outsl
or
sub
daa
jge
mov
mov
lahf
lcall
mov
out
lret
inc
mov
push
ljmp
add
ret
ljmp
jae
scas
fdivrl
loope
insl
jb
dec
fsub
testb
pop
xor
fs
add
push
dec
jmp
cltd
inc
pusha
pop
xchg
adc
xlat
rcr
and
push
frstor
ret
lock
rorb
xchg
insb
mov
mov
or
adc
inc
lret
dec
je
or
inc
cltd
iret
inc
push
jl
movsb
dec
sub
nop
add
push
mov
lock
fwait
cmp
rorb
call
xchg
cmp
add
cmp
out
dec
aam
rcr
inc
jnp
aam
dec
fcmove
lahf
mov
lret
jp
jns
xchg
dec
mov
dec
in
leave
jns
sahf
mov
outsb
out
and
aas
in
cmpsb
loop
fiaddl
clc
mov
pop
push
sub
fidivl
insb
test
xchg
mov
jp
fstps
cmp
ret
in
sahf
pop
adc
pop
nop
mov
and
test
inc
mov
jle
sahf
call
and
cli
sbb
and
push
sbb
jns
lcall
mov
and
stos
out
cltd
jnp
inc
xchg
push
inc
sbb
cmc
scas
leave
pop
nop
and
outsb
subb
or
dec
daa
testb
mov
mov
sbb
cmc
rcll
push
cmc
adc
and
xlat
xor
fsubr
inc
outsb
or
cmp
push
dec
mov
mov
jg
dec
sub
dec
mov
mov
sbb
jb
push
add
pop
scas
cld
xor
pop
push
test
pop
mov
inc
push
scas
mov
mov
mov
test
adc
and
adc
mov
push
stc
rcr
mov
inc
sub
mov
push
or
shlb
add
rol
mov
push
push
push
stos
cmpsl
mov
mov
arpl
push
arpl
dec
adc
mov
out
adc
sbb
or
ret
mov
cli
call
mov
rcll
mov
cmpsl
sbb
add
nop
fcmovbe
scas
ds
sarb
jecxz
jl
cwtl
xor
pop
hlt
cmpsl
das
aas
sahf
arpl
lods
xchg
push
test
push
cmp
shl
js
loope
shr
mov
push
icebp
adc
pop
in
sub
mov
xlat
mov
inc
daa
xchg
sub
jge
fsubrs
pusha
mov
outsl
jns
lds
aaa
into
pusha
and
lock
dec
jge
outsb
inc
mov
mov
jge
scas
jne
ja
sub
iret
cmpsb
sbb
out
inc
test
fidivrs
push
push
jp
leave
push
and
mov
shrb
scas
leave
leave
or
dec
jle
xchg
inc
stos
sub
pop
leave
call
xlat
jns
sub
sbb
sti
lods
inc
aad
jbe
mov
lods
pop
loope
lahf
add
shlb
fdiv
dec
inc
adc
es
arpl
and
mov
pop
mov
lock
mov
sbb
or
adc
mov
mov
cmpb
js
loope
push
push
js
movsb
push
jne
aam
xchg
inc
fadd
aam
xchg
repnz
sbb
mov
icebp
cwtl
subl
bndldx
ret
mov
rep
shll
push
jg
mov
mov
cmp
cltd
fisttpll
push
jne
aaa
out
ret
and
loop
and
lods
xor
pushf
repnz
sbb
jle
push
jecxz
pop
sbb
leave
fistpll
or
ror
ficoml
jbe
dec
lcall
mov
push
adcb
jmp
push
and
inc
mov
daa
rorl
mov
sub
sarb
fbld
loope
add
jno
mov
out
cmpl
mov
xor
outsl
mov
shlb
ljmp
and
and
or
jo
add
jnp
shl
sub
out
pop
dec
andnps
sub
cmp
shll
std
push
imul
sub
and
dec
and
sahf
xchg
lds
sbb
gs
movsl
imul
loop
call
leave
add
inc
adc
shll
xor
insl
mov
cmpl
pop
xchg
and
mov
rcr
inc
clc
cmp
pop
es
pop
in
pop
fldl
fdivrl
pop
lods
ja
or
pop
dec
add
push
outsl
mov
jg
stos
and
mov
jecxz
xchg
pop
shlb
in
sub
jb
mov
mov
filds
iret
push
rcll
stos
dec
pop
xor
loop
add
in
cld
call
sbb
ret
push
xchg
fidivs
cmp
push
imul
cltd
js
shlb
cmp
pop
xchg
rcl
xor
push
jns
mulb
mov
cmpl
jle
pop
addl
xchg
addr16
pop
ljmp
inc
cmpsl
add
adc
je
sub
mov
pop
sub
fdivl
xor
insb
roll
dec
ret
iret
ja,pn
fnstsw
push
mov
pop
stc
xchg
sub
and
jmp
fnstenv
imul
aad
push
or
add
test
fldl2t
mul
push
adc
inc
adc
sbb
xchg
enter
sub
or
jg
ja
icebp
cmpsl
xlat
pop
add
test
ret
jb
sbbb
andb
fnstenv
test
add
pop
shrb
sbb
and
popa
push
jp
or
pusha
les
push
cmpsl
inc
or
popa
les
and
out
icebp
mov
movsb
pop
or
cmpsb
push
cmp
sbb
out
push
outsl
xor
stos
out
dec
inc
fwait
stc
xchg
stos
push
movsb
ss
jae
in
fnsave
lret
sbb
sbb
cs
push
sub
loop
sub
movsb
inc
inc
and
or
and
xchg
sub
cmpsl
xlat
mov
and
inc
enter
jnp
js
std
sarl
sbbb
push
stc
gs
cltd
cmpsl
or
icebp
fidivrl
push
jnp
push
lcall
adc
js
push
popa
sbb
mov
repnz
lds
pushf
push
pop
jne
lahf
dec
mov
in
jg
inc
xchg
mov
cmp
test
push
mov
in
jno
movl
dec
push
inc
or
and
test
xchg
push
cmp
fistpl
test
xor
pop
or
jbe
call
jl
jp
adc
mov
jnp
mov
push
push
pop
cmp
inc
je
mov
daa
fs
lretw
mov
jle
rcrl
push
in
enter
ficomps
mov
inc
out
or
jo
mov
jne
test
xor
aad
and
jp
in
jge
pop
rorl
or
rcl
jnp
fnsave
fmull
jo
inc
imul
cmp
mov
stc
test
sub
repz
popa
fisubrs
mov
cmpb
and
sbb
imul
fwait
inc
dec
shlb
in
adc
dec
loop
jg
cmp
push
and
out
loope
jge
in
stos
fdivr
and
xchg
sub
andb
xor
jno
daa
out
adc
lahf
add
repnz
xchg
cmp
push
aas
dec
sarb
and
daa
pop
aad
cltd
or
sbb
cmp
inc
jg
sub
sarb
enter
cli
mov
add
lret
out
clc
dec
mov
jge
push
dec
add
push
int3
fwait
pop
xchg
and
add
sub
adc
stos
pop
xor
cmp
xor
xchg
mov
addb
orl
test
das
leave
movsb
adc
xchg
push
jae
int
mov
int3
cmp
xor
loop
sub
push
dec
stos
pop
mov
fnstcw
sub
cmp
sub
sub
aaa
movsb
push
jmp
sahf
jno
sub
sub
inc
and
cld
push
stos
shr
lret
aad
xchg
addr16
enter
push
and
nop
gs
inc
mov
jp
andb
xor
stc
lahf
clc
mov
add
sbbb
movaps
lret
ficompl
sub
add
lahf
xchg
mov
ds
jle
lgs
dec
cmpsl
fcompl
mov
clc
pop
xchg
cmp
stc
pop
fisubrl
inc
pop
or
call
jno
push
adc
shrb
xchg
bound
cmp
push
dec
mov
xor
mov
dec
leave
pop
jbe
mov
and
loopne
xchg
fcompl
push
mov
lea
in
test
dec
jnp
or
mov
out
inc
or
lret
js
insl
ljmp
jmp
pop
lcall
adc
mov
inc
mov
cmp
fisttpll
mov
push
cwtl
cmovb
jp
icebp
push
and
sbb
aaa
notl
sub
nop
scas
fistps
xchg
push
mov
loopne
icebp
call
sbb
les
scas
xlat
pop
lds
xchg
out
and
arpl
mov
inc
dec
pop
sub
jns
dec
ja
inc
dec
hlt
mov
iret
sbb
mov
sti
shlb
mov
dec
insb
fiaddl
outsb
insb
pop
mov
inc
jb
lret
pop
jmp
rclb
test
addb
push
sbb
ja
sub
dec
jmp
and
fildl
and
repz
test
push
mov
int
in
loopne
fldenv
jb
ret
fstl
xor
push
and
lret
lods
push
pop
in
enter
or
mov
pop
insb
mov
loop
or
dec
mov
or
clc
fnstsw
stc
mov
out
or
lcall
jns
push
mov
mov
loopne
jge
lcall
mov
inc
daa
divl
in
push
mov
jb
je
pop
inc
xchg
cmpsb
jbe
sti
jo
lcall
imul
std
adc
adc
cld
or
movsl
xor
jge
jo
sbb
rcrl
xchg
sbb
rolb
push
cwtl
imul
out
adc
or
pop
lea
enter
fsubrl
ficompl
scas
cmp
into
or
insl
repz
rclb
jo
mov
imul
lds
pop
inc
jl
loopne,pt
ja
cmp
sbb
ja
out
les
cmpsb
inc
lcall
test
inc
sbb
fdivrl
rcl
adc
push
les
sbb
pusha
mov
inc
or
xor
sub
mov
in
movsbl
pavgw
in
xchg
adc
cs
cwtl
test
xchg
adc
push
ret
pop
mov
mov
clc
xchg
xor
jae
loopne
gs
pop
leave
icebp
and
es
rorl
lods
fsubrp
fs
mov
test
ret
mov
xorb
js
pop
dec
mov
mov
mov
das
push
lahf
mov
rolb
adc
sub
pop
ret
test
sub
or
out
daa
or
xor
add
jmp
stos
dec
loop
mov
ret
sub
push
inc
jl
and
and
mov
sub
bound
push
aas
inc
push
imul
in
popa
mov
dec
inc
ficoml
push
dec
or
into
mov
and
xchg
insl
xor
push
sub
and
fimull
cmp
or
add
mov
or
mov
push
push
xchg
pusha
stos
ljmp
loop
insb
push
mov
lods
hlt
das
shrb
inc
push
and
cmp
in
push
fnstsw
pop
into
aad
mov
ret
adc
dec
aas
xor
fimuls
out
imul
jmp
xor
int
ret
cmp
imul
xchg
and
mov
add
enter
mov
sub
scas
lcall
ret
dec
adc
loop
pop
sbb
ret
mov
imul
test
and
imul
fisttpll
loop
inc
test
aas
cli
stos
aad
xor
aad
xchg
in
cmp
xorb
rcrb
outsl
sahf
imul
dec
loopne
dec
scas
aam
xor
movsb
mov
shrl
cmp
jp
inc
mov
mov
lock
ljmp
xor
cltd
lret
imul
fs
sahf
aaa
lcall
mov
int
hlt
and
inc
inc
icebp
add
lock
cmc
sbbl
jne
scas
mov
test
dec
mov
movsl
xchg
test
scas
add
mov
popf
xchg
cltd
inc
sub
add
adc
lock
sub
scas
pop
xchg
daa
fildll
loop
and
dec
pop
push
pushf
sbb
dec
aam
mov
arpl
pop
bnd
mov
mov
shl
mov
dec
add
xorb
aad
sahf
xchg
and
push
jo
sbb
insb
shr
fwait
mov
xchg
aad
ret
dec
or
test
jo
mov
xchg
test
cmp
pusha
add
mov
rcrb
ja
sub
and
imul
pusha
rolb
popl
dec
fcmovbe
sub
test
adc
adc
sarl
push
pop
in
sbb
pop
sub
flds
pop
add
mov
xchg
sbb
pop
cpuid
daa
test
adc
mov
loopne
scas
fcompl
push
pop
sub
je
inc
dec
clc
xlat
sbb
addl
mov
mov
add
adc
sbb
out
pusha
or
cld
cmp
fs
sbb
ficoml
popa
jo
fidivl
cmpsl
push
fprem
cmpsl
addr16
push
into
and
sbb
into
test
shl
mov
lock
daa
repz
lods
and
dec
vpaddsw
lds
popa
mov
jp
adc
cmp
pop
mov
aas
lret
test
aad
ret
or
dec
stos
cmp
shr
in
cmp
xor
insb
xchg
ja
leave
fisubrl
addl
pop
mov
fistpll
scas
jp
sarb
push
mov
push
mov
xor
lcall
std
out
jmp
inc
mov
cmpsb
mov
stos
jo
add
add
hlt
push
cmpsl
and
movsb
push
clc
push
sbb
ret
adc
icebp
in
push
fidivs
mov
imul
cmp
repnz
sarl
inc
mov
dec
fidivrs
addr16
scas
mov
xor
and
pop
lock
ds
fistps
xchg
ftst
clc
mov
popa
rorw
add
int3
dec
and
stos
testb
mov
xchg
in
insl
mov
dec
scas
or
xchg
shlb
mov
movsl
dec
loop
fimull
sub
or
push
mov
xor
iret
pushf
inc
xchg
bound
test
nop
out
mov
dec
cmp
loopne
mov
mov
aaa
cmp
aam
stos
or
lea
xor
adc
test
inc
dec
dec
jae
or
mov
out
mov
xchg
jp
sub
js
or
jbe
aas
pusha
fisubrs
daa
xor
push
mov
xchg
mov
clc
seta
cmp
adc
push
dec
scas
out
mov
xor
mov
push
dec
bound
fcoml
push
jge
mov
aas
out
fnsave
lret
sub
cmp
adc
sbb
adc
inc
pusha
clc
mov
sbb
bound
and
xchg
inc
inc
xor
test
fisubrs
dec
inc
and
mov
aaa
loope
subb
jmp
ss
push
cmp
cmp
movsl
popl
mov
and
mov
xchg
pop
rol
cltd
adc
adc
sbb
mov
icebp
sbb
jg
pop
ljmp
push
test
mov
sbb
xchg
stos
jge
lret
imul
cs
jbe
arpl
nop
mov
or
shlb
outsb
test
jle
js
arpl
adc
sub
inc
and
lds
aaa
sahf
mov
jae
mov
pop
push
cmp
fcmovu
std
insb
jle
sbb
addb
push
pop
xor
or
jbe
sbb
das
and
pop
or
cmp
popf
jb
push
cmp
push
mov
mov
dec
cmp
add
dec
fimull
popa
aam
mov
add
call
xor
stos
ret
jo
jmp
adc
dec
add
push
sub
dec
cli
pop
pop
add
cmp
jecxz
sub
push
mov
negl
add
fwait
adc
mov
cmovl
adc
xor
mov
sub
movsl
xor
arpl
ret
out
stos
xchg
mov
mov
shll
pusha
movsb
xchg
adc
iret
or
stos
pushf
and
cmc
ret
sahf
mov
mov
rcrb
rorl
stos
xor
xchg
mov
sbb
push
pop
mov
cltd
fistpll
dec
frstor
or
jae
inc
in
xchg
loop
ret
cmp
mov
jbe
adc
mov
xchg
cltd
negb
adc
push
mov
push
fmul
stos
mov
lret
nop
test
movsb
sti
mov
and
call
mov
mov
cmc
mov
inc
ret
fisubrs
test
mov
rcll
dec
and
int
jp
add
add
push
scas
rcr
inc
outsl
dec
jb
and
pop
inc
inc
jns
jmp
fldcw
mov
iret
dec
insl
imul
sbb
out
jae
mov
mov
aam
outsb
out
and
adc
add
test
mov
lahf
cmpsb
cmp
jb
fimuls
insl
sub
cld
inc
and
xor
pop
inc
xchg
lahf
jmp
pop
push
lods
shlb
jle
cltd
jge
insb
xchg
aaa
mov
aad
aas
ret
out
out
clc
mov
and
movsl
fwait
pusha
loopne
and
mov
cmp
les
add
popf
and
mov
dec
fistps
adc
sub
fidivrs
into
data16
aad
rcrl
sbb
pop
inc
pop
popa
repnz
fstpt
cmc
or
mov
rcrb
idivb
jg
loopne
data16
push
test
xchg
fisubl
fdivr
aad
add
mov
sbb
in
xchg
jge
sbb
mov
roll
movl
scas
scas
add
push
xlat
push
insl
xchg
lret
pop
iret
repnz
push
and
mov
dec
or
shrb
inc
pop
in
dec
push
mov
insb
pop
sti
mov
ret
popa
insb
or
iret
or
xor
inc
ret
jle
jl
inc
mov
dec
lret
push
xor
mov
push
sub
jg
pop
push
repnz
mov
sarl
dec
pop
hlt
and
movsl
popa
xchg
icebp
fs
into
les
sub
jns
add
lea
push
loopne
je
xchg
mov
lret
int3
repz
xchg
mov
cmp
push
aas
xchg
dec
cmp
rorl
movsb
int
inc
mov
mov
sbb
ffreep
pop
adc
out
shlb
cmc
xchg
popa
mov
xor
cld
pop
iret
push
dec
rcr
xchg
sub
jns
push
idivb
pop
and
fildll
mov
and
xor
mov
cmp
cwtl
outsl
jmp
test
movsb
mov
hlt
repnz
fsubs
sub
lods
pop
mov
ss
adc
inc
test
lock
sbb
cmp
dec
daa
push
lret
push
sarl
cmc
fdivrl
fucom
fmull
cli
push
and
dec
jb
repnz
lods
imul
enter
dec
lea
mov
xor
push
pop
cmp
push
cmc
push
pop
out
aas
in
jmp
fdecstp
iret
or
mov
push
movsl
push
fwait
fs
insl
mov
aas
mov
stc
cltd
xchg
jmp
adc
popa
pop
xor
scas
lds
stc
shlb
cmp
loope
popa
mov
cmpl
in
sar
sar
dec
fldt
int
cmc
mov
sbb
inc
dec
push
popf
test
add
movsb
subl
stos
jne
movsl
cwtl
pop
jg
ret
mov
inc
add
add
xor
jmp
iret
pop
dec
cwtl
stc
mulb
dec
push
mov
add
sahf
jl
push
cli
mov
jmp
sbb
lret
or
out
mov
mov
repz
xchg
pop
jle
or
in
inc
rol
and
ja
cli
in
xchg
mov
mov
bound
xor
xchg
das
inc
mov
out
imul
push
mov
mov
sub
les
pop
xor
xor
add
xchg
fadds
adc
mov
cs
jo
std
jp
jmp
push
bound
push
popf
sbb
clc
cli
jbe
fdiv
sbb
pop
fcompl
push
sbb
rcll
jbe
fstpl
sbb
xchg
adc
mov
je
lea
sub
idiv
mov
dec
imul
decb
testb
in
mov
scas
or
or
icebp
in
das
cmp
cltd
mov
addr16
in
test
xchg
jns
push
sbb
aaa
adcl
in
adc
mov
pop
repz
mov
sub
push
out
bound
loope
cmp
test
lret
out
out
nop
shlb
and
or
subb
addr16
loopne
mov
jnp
frstor
jmp
stos
mov
mov
scas
xor
or
js
dec
and
jecxz
test
xchg
stos
jne
es
pusha
dec
js
jo
in
xchg
sub
testb
mov
push
sub
sbb
or
movsl
stos
pop
and
ljmp
pop
pushf
push
and
xchg
pushf
fildl
fisttpll
jge
int3
adc
xchg
adc
and
sbb
dec
cmc
jmp
jle
pop
ss
notb
push
push
add
rclb
xor
pusha
in
cmp
popf
cld
cmpsl
and
mov
inc
push
mov
cmp
or
push
mov
adc
cmp
stos
xchg
pop
movsl
xchg
je
in
cmpsl
int
stos
hlt
push
cwtl
pop
imul
xor
repnz
pop
lds
in
bound
hlt
sub
dec
mov
jae
push
cmp
outsl
xchg
aam
in
xchg
imul
xsha256
cmpsb
adc
in
ds
add
inc
push
aas
out
and
mov
out
sbb
dec
push
mov
daa
lds
cmpsb
loopne
pop
outsb
mov
pop
leave
shrb
mov
xchg
xlat
mov
add
pop
cli
pushf
call
mov
mov
fisubl
push
call
call
inc
int
fcmovu
aas
push
xchg
add
leave
das
inc
push
bound
or
icebp
rolb
cmovp
pop
xor
inc
mov
stos
sbb
pop
sub
in
xchg
rorb
sub
push
mov
dec
sbb
and
outsb
dec
adc
sub
mov
push
and
mov
pushf
jge
hlt
and
jmp
inc
mov
adc
jmp
jp
arpl
rcrl
ss
jl
cmc
jmp
rcrb
adc
loope
in
mov
adc
cmpsb
cwtl
mov
dec
insb
dec
in
lea
jnp
rol
xchg
jbe
ja
data16
sub
into
inc
aam
iret
mov
push
mov
pop
xchg
pop
xorb
push
fbstp
push
mov
mov
mulb
faddl
pop
lahf
mov
into
and
out
dec
jae
dec
loop
push
or
pop
xchg
and
jo
pop
jbe
dec
cmpsb
fmull
movsl
and
lret
dec
and
or
enter
mov
mov
test
arpl
xor
ja
dec
pop
es
les
add
movsb
jl
mov
jne
jge
jmp
fldcw
sbb
mov
aas
fnstcw
out
sbb
lahf
insl
lea
outsb
jbe
sub
cltd
mov
mov
or
inc
inc
pop
js
int3
in
lahf
jge
hlt
xor
mov
mov
and
test
and
cli
shll
aaa
test
test
in
mov
rcrb
out
lret
dec
inc
sub
cmpsl
je
repz
lcall
xchg
jp
sub
and
sub
or
dec
mov
pop
mov
sbb
js
pop
out
adc
mov
enter
xchg
xor
sbb
inc
pop
push
mov
hlt
ja
js
fisttpl
pop
or
mov
dec
arpl
ret
test
mov
or
shll
and
cmpsl
adc
ret
adc
int
imul
sub
inc
xchg
out
jbe
push
dec
sbb
sbb
in
inc
mov
cli
or
mov
je
push
fstl
push
nop
push
and
inc
jecxz
das
pop
jb
data16
iret
icebp
xchg
addr16
add
clc
pop
and
push
or
xchg
sub
in
outsb
push
jno
into
in
fwait
pop
mov
pop
xchg
adc
pushl
mov
jb
xor
adc
or
dec
ja
in
mov
dec
stos
je
fimuls
icebp
lods
bound
adc
push
sbb
loopne
aam
fwait
sbbb
xchg
xor
mov
pop
mov
jmp
mov
mov
jg
xorl
clc
pusha
mov
mov
push
jb
pusha
imul
aas
or
int
int
inc
push
shll
fldl
sahf
scas
ljmp
les
incb
cltd
jle
sahf
shrb
ja
push
or
inc
ret
outsb
jmp
stos
xor
inc
jg
xchg
mull
mov
shll
gs
xchg
sbb
outsb
lret
fsubrl
arpl
pusha
leave
inc
sti
mov
pause
lock
mov
in
xlat
mov
les
mov
push
xor
cmp
mov
lahf
pop
dec
fwait
pop
xchg
cmp
cld
das
adc
mov
dec
xor
aaa
push
xor
bound
dec
dec
ffreep
pusha
pop
inc
dec
sbb
adc
call
dec
loopne
sbb
inc
insb
adc
sub
les
repnz
push
pop
nop
jmp
int3
shrl
dec
and
repz
movsl
cmp
push
repz
cs
fs
pop
push
sbb
cwtl
roll
mov
xlat
les
fdivl
imul
add
mov
jmp
sbb
data16
loope
sbb
push
jae
xor
movsl
cmp
mov
jmp
and
pcmpgtd
addr16
xor
stos
xchg
aad
inc
hlt
les
push
inc
enter
hlt
stc
xor
cs
rolb
xor
aam
or
loopne
outsl
sub
testl
mov
xlat
and
mov
jo
sbb
cltd
pop
imul
pop
shlb
stos
insl
icebp
sahf
ss
popa
inc
dec
ss
push
add
sbbb
or
cli
adc
jp
mov
mov
aam
cwtl
das
mov
xor
testl
fdivr
or
and
inc
push
mov
mov
and
mov
inc
add
xchg
ljmp
xchg
mov
xchg
in
jge
sbb
aad
sti
sub
sbb
fsub
push
fs
outsb
or
stc
and
cld
inc
add
sbb
ret
inc
add
push
add
lret
stc
jb
ljmp
xchg
jp
inc
jle
inc
shrl
ficomps
pop
mov
test
into
xor
fdiv
adc
xchg
sbb
dec
xchg
ss
aam
xlat
fildl
mov
adc
add
loopne
adc
push
and
sbb
loop
ss
fmuls
loop
into
lahf
shrb
mov
mov
stos
lret
inc
dec
test
cmp
test
movsb
and
out
push
xchg
out
leave
sahf
cmp
int3
pop
cmc
jb
and
sahf
add
inc
jb
add
xor
test
and
stc
xchg
mov
pushf
mov
scas
mov
test
inc
jl
repnz
dec
roll
or
je
jno
repz
and
push
cmp
ds
leave
into
push
les
es
data16
lahf
cld
insb
lret
inc
std
sbb
fisttpll
ret
in
sbb
enter
jo
sub
rep
jecxz
cmp
pop
mov
clc
add
loope
popa
cmp
or
rorl
xor
test
push
pushf
cwtl
cltd
dec
cltd
mov
fiaddl
jb
push
xor
sbb
pop
mov
aam
cmpsl
adc
fidivs
decb
pusha
test
popa
mov
sub
sub
movsb
push
out
mov
pop
sbb
repz
xchg
dec
pop
jae
rclb
pop
stc
inc
fsubr
stos
mov
add
fcomip
lcall
adc
jle
sub
out
je
inc
nop
jle
out
fisttpl
cmp
shlb
xlat
push
outsl
jne
lahf
mov
and
and
pop
lds
xchg
dec
aad
int3
sub
loopne
repnz
push
pushf
push
mov
std
mov
fisubs
dec
dec
jns
add
jmp
mov
cmp
shlb
xor
loope
mov
pop
loop
popf
push
cmp
or
fisttps
sub
dec
or
shr
notb
jno
in
rol
sbb
lods
inc
push
dec
mov
fwait
add
rol
jmp
outsl
lahf
loop
cli
cmp
movsl
dec
sub
in
je
aas
das
dec
and
repnz
jle
aas
jg
inc
or
xlat
and
xchg
movsb
mov
xchg
cmpsl
inc
test
dec
and
sbb
insb
xchg
icebp
inc
lock
pop
in
sub
dec
insb
xchg
ja
jb
push
mov
push
xor
js
adc
mov
into
jne
xchg
lret
arpl
inc
dec
dec
xchg
or
pop
aam
addb
cmc
addr16
popa
dec
sti
sub
sub
lret
mov
adc
aaa
xor
popa
fldl
inc
shrb
in
pop
test
scas
pop
into
ljmp
and
push
leave
xchg
test
pop
xchg
shr
fisubs
stc
aad
adc
jbe
clc
outsb
scas
sti
pop
push
push
lahf
and
push
cwtl
cs
mov
cmp
loope
inc
sbbb
cs
jno
adc
mov
cmpsb
mov
push
xor
divps
scas
inc
in
ret
mov
das
mov
push
xchg
mov
push
ds
mov
adc
pop
int
push
push
rorb
shll
loop
sub
xchg
cmp
xchg
popa
hlt
push
jecxz
or
dec
aaa
in
aaa
in
das
xchg
rcl
outsb
dec
sarl
adc
push
lret
imul
test
jge
push
adc
pusha
sbb
and
outsb
cmp
lods
fiadds
das
hlt
fwait
test
movsl
cmp
stos
dec
dec
es
xlat
add
xorb
jecxz
and
xor
jl
or
cmpsb
fstps
aaa
inc
sub
mov
xchg
fadds
sub
pop
out
xchg
and
inc
iret
stos
data16
stc
adc
jl
sub
xor
push
jne
push
insb
loop
cmp
adc
lods
dec
lcall
jle
lret
jne
insl
push
imul
pop
bound
daa
cmpsb
jb
lods
popa
pop
mov
bound
push
call
and
mov
mov
in
mov
xchg
xor
loopne
lret
mov
call
push
scas
in
sbb
ja
ss
pop
adc
mov
pop
pop
mov
adc
fdivl
fnstsw
ret
lods
mov
or
divps
ljmp
dec
sbb
aad
repnz
shr
push
push
arpl
pop
orl
or
insl
mov
add
inc
call
test
daa
je
outsb
imul
xchg
ret
sub
jo
popf
jmp
or
xlat
mov
sbb
pop
xchg
jl
movsb
mov
add
call
xor
and
add
pop
cmp
mov
jmp
xlat
mov
arpl
xchg
insl
enter
imul
cmp
mov
and
dec
ja
pop
mov
xchg
ss
inc
adc
enter
scas
les
adc
xchg
fwait
out
movsl
testl
scas
dec
inc
in
ficomps
sbb
lods
cmp
push
sbb
adc
mov
and
mov
sub
in
imul
iret
xchg
pop
je
inc
gs
adc
out
bound
and
and
fwait
int
inc
ja
pop
icebp
xchg
push
fstpt
add
cmp
inc
das
mov
fstpl
bound
popf
jecxz
call
add
adc
mov
jno
sbb
and
adc
xchg
push
fsts
or
push
repz
jne
and
lea
sub
cld
loopne
dec
sub
cmp
inc
sub
jge
fmuls
fsubl
push
cli
cmpl
inc
mov
sub
in
push
pop
add
xchg
adc
stos
test
mov
xor
adc
adc
shr
in
add
push
clc
sub
call
or
int3
sub
or
sub
adc
push
mov
test
ret
jo
xchg
push
adc
adc
or
add
sub
cmpb
enter
xchg
xor
xorb
aas
cmp
in
nop
adc
hlt
jp
aas
mov
sub
sbb
push
adc
add
mov
add
loope
stc
inc
pop
xor
jl
sahf
mov
xchg
lret
fistps
add
add
sbb
xor
pop
sub
dec
popf
inc
jmp
cs
fwait
clc
imul
jno
dec
stc
sub
cmp
inc
cli
jge
fidivrl
inc
jo
or
sub
loopne
leave
ret
in
pop
xor
loop
jmp
mov
cld
orb
cwtl
mov
inc
xchg
mov
pop
mov
ss
mov
adc
ret
mov
mov
mov
test
mov
notl
movsl
mov
jl
in
mov
jnp
test
jae
pop
and
mov
movsl
mov
mov
jbe
int
cmp
xchg
mov
xchg
pop
fwait
imul
out
jmp
mov
sbb
push
cmp
cltd
xor
loopne
insl
testb
xor
popa
cmpsl
mov
rorl
mov
daa
cmp
out
sbb
push
push
or
outsl
push
sbb
call
sbb
add
ret
xchg
xchg
rcl
repnz
rcll
mov
js
mov
mov
dec
leave
fcoms
lods
jp
stos
and
dec
or
js
xor
les
push
sbb
or
and
andb
adc
les
repnz
mov
cmp
xor
mov
lods
push
fisttpl
lret
fldlg2
adc
iret
aas
dec
movsb
xlat
push
push
mov
fwait
mov
repnz
hlt
jb
sbb
sbb
or
jle
je
js
sub
jge
push
addr16
call
pop
mov
icebp
mov
sbb
cmp
mov
or
outsl
xor
jle
outsl
pop
aas
mov
je
ljmp
jb
mov
ljmp
popa
call
fldenv
sub
xorb
fildl
add
xor
mov
testb
jo
icebp
int3
mov
pop
cmpb
test
in
xchg
sub
inc
nop
mov
dec
xchg
xlat
or
pop
mov
push
sti
add
popf
mov
mov
and
sub
test
sbb
mov
mov
int
pop
adc
les
jno
pop
hlt
dec
or
inc
add
add
movsl
and
inc
xor
out
mov
mov
dec
pushf
mov
push
xchg
mov
sbb
shlb
movsb
dec
xor
loopne
cmp
shlb
push
adcb
xchg
add
std
inc
cmpsl
push
mov
sbb
xor
stos
fsubl
cmp
nop
dec
push
out
xchg
sahf
mov
jae
jge
outsl
int3
frstor
mov
mov
xchg
jno
out
jbe
in
push
enter
aam
int
cltd
movsb
int
xchg
inc
stos
jge
xchg
push
push
push
lock
and
adc
into
lcall
idivl
xchg
or
jge
cltd
ds
jbe
stc
ljmp
sahf
daa
bound
hlt
cmp
sbb
ret
sub
sbb
fsubs
sti
pop
sub
push
xor
jbe
pop
leave
out
xlat
mov
addl
adc
xchg
cmp
call
fwait
ret
adc
xchg
and
shrb
icebp
lock
in
dec
mov
fistl
dec
aam
push
daa
dec
pop
clc
imul
push
jns
jmp
push
out
inc
orb
call
loopne
and
inc
sbb
sbb
je
rol
call
push
mov
addr16
iret
dec
repz
loop
mov
fidivrl
inc
sbb
mov
lret
cli
iret
or
and
xlat
jecxz
es
fimull
fidivrs
pop
dec
ljmp
in
mov
es
lock
xchg
jbe
ja
inc
adc
jb
push
hlt
xchg
scas
and
rcrb
aas
mov
dec
in
lods
jnp
ret
ret
dec
mov
sahf
int
xor
lods
push
sti
icebp
arpl
or
mov
fcoms
sarl
mov
mov
adc
ret
inc
pop
mov
jne
loope
jg
outsl
fs
sub
mov
xlat
je
xchg
rcrb
push
and
test
sti
dec
pop
scas
sub
cmp
data16
add
repnz
pop
mov
mov
dec
mov
jle
incl
sti
jmp
filds
xor
stos
fsubrl
adc
out
aam
inc
cmp
sbb
sbb
ret
push
push
or
imul
lods
repz
dec
xor
aam
lret
sub
nop
mov
pusha
punpcklbw
imul
js
xchg
addr16
fcom
popa
fwait
cmpsl
dec
scas
ficoml
loope
sub
mov
fdivrl
mov
repnz
ja
cmpsl
arpl
xchg
inc
movl
ljmp
mov
jmp
mov
fdivrl
negb
shl
mov
imul
test
fistpll
jae
psubq
inc
add
popa
jl
test
out
imul
mov
roll
xor
loope
cmp
mov
xchg
xorb
testl
repz
cs
push
mov
clc
sbb
testl
loop
lahf
lods
std
jne
test
arpl
daa
mov
xor
sahf
cmc
push
cmpsb
leave
mov
mov
add
mov
mov
add
add
xor
lods
mov
jle
in
mov
fldl
dec
orb
push
lcall
mov
cmpsl
stos
out
inc
out
lcall
mov
jne
sub
es
shlb
ret
cmpsl
cli
dec
cli
push
outsl
dec
arpl
mov
ret
out
subb
test
cmp
insl
pusha
sbb
pop
sub
push
mov
jmp
or
jbe
mov
jnp
pop
xchg
test
cmp
mov
mov
mov
jmp
rorl
into
notb
xor
out
insl
xchg
push
sbb
jp
jl
push
lods
stos
bound
shl
mov
lds
or
jnp
mov
mov
lret
ret
icebp
test
scas
imul
inc
fucomi
leave
or
mull
pop
popa
hlt
cmp
cmpb
mov
mov
sahf
mov
lock
fs
fwait
xchg
fcmove
fstps
adc
mov
cltd
stc
push
sahf
jne
daa
jp
sbb
pop
xlat
mov
mov
inc
js
pop
push
lahf
and
stos
mov
insb
ss
movsb
mov
cmpl
lahf
sub
idivb
xchg
clc
sub
or
dec
test
jbe
repz
mov
mov
call
xchg
mov
inc
imul
ret
lret
add
jg
cld
fadd
xchg
dec
repnz
movsb
pusha
cltd
mov
out
sbb
repnz
dec
pop
fwait
sub
mov
das
pop
enter
notl
jno
xchg
arpl
dec
cs
mov
xchg
jb
push
fcomps
mov
dec
int3
xchg
je
aad
sbb
divb
xchg
mov
loop
mov
roll
mov
arpl
jb
mov
mov
sahf
jle
mov
fidivrl
or
jmp
lods
insl
adc
mov
test
push
dec
inc
mov
in
shrl
out
inc
lcall
into
shll
mov
pushf
divb
outsb
int
mov
cmpl
idiv
xchg
shl
idiv
scas
inc
shll
sub
mov
sbb
pushf
sbbb
adc
mov
lds
mov
hlt
xchg
push
cmp
add
nop
cli
inc
sti
cs
mov
lds
push
mov
les
sbb
lock
xorl
dec
adcb
mov
out
lcall
in
mov
or
dec
dec
and
nop
and
mov
lock
cld
jecxz
jecxz
dec
hlt
lret
sub
sbb
push
repz
mov
mov
xor
cmp
jl
or
or
cmp
test
jmp
pop
shl
cmp
or
sahf
cld
mov
test
repz
and
out
mov
ss
int
and
les
xchg
pop
aam
sub
lock
sub
pop
mov
mov
xor
inc
sbb
xchg
orl
pop
add
in
movsb
rorb
cvtps2pd
lock
mov
in
sbbb
xor
movsl
adc
jb
mov
push
adc
shlb
sbb
mov
and
mov
pop
mov
push
and
sub
mov
cs
int3
xchg
insl
popf
or
inc
dec
push
adc
sub
push
fucomi
and
push
movsb
mul
stos
daa
add
jno
and
and
sub
or
lahf
scas
sub
push
pusha
push
out
je
hlt
adcl
sbb
rorb
dec
add
popa
jmp
sbb
add
arpl
daa
ss
xor
or
mov
popf
test
cmpsb
popf
or
pop
cmpb
fwait
je
cmpsb
or
call
or
mov
scas
xor
int
outsl
cmp
push
fstpt
mov
ficoml
jl
push
add
bound
xchg
xlat
nop
pop
jle
mov
shlb
ss
movsl
mov
mov
adc
cltd
xor
xchg
jb
add
xor
cmpb
les
jmp
add
sbb
lds
xchg
sarl
loop
in
ja
in
xor
ss
jae
pop
stos
pop
ljmp
aam
jns
pop
into
ljmp
jecxz
or
stos
xchg
sbb
mov
pop
xchg
dec
insb
inc
fisubl
push
pushf
loop
jecxz
gs
aas
mov
jecxz
mov
fmuls
add
or
sub
push
mov
or
mov
jp
and
std
jl
sub
pusha
push
and
mov
sbb
mov
push
int3
icebp
dec
out
inc
mov
pop
sbb
stos
mov
mov
fisubs
mov
and
xchg
push
int
add
lret
adc
into
pop
mov
mov
mov
push
dec
inc
dec
mov
insl
inc
xor
in
sti
mov
fdivs
mov
jle
lods
loop
mov
fldcw
cmpsb
je
dec
lods
inc
xor
lods
outsl
clc
ds
cmp
jne
les
gs
test
outsl
mov
nop
push
jae
mov
or
xor
jge
insl
and
fnstcw
cmp
popa
push
shrl
cld
data16
mov
add
fwait
add
out
jae
cmp
mov
xchg
push
stos
js
jae
pop
in
fistpll
shlb
outsl
adc
testl
fs
iret
jecxz
push
adcb
push
xchg
popf
in
cmp
fldt
cltd
pusha
std
push
pop
pusha
mov
bound
xchg
int
stc
pop
roll
jo
sbb
orl
inc
push
stos
ss
insb
push
lock
imul
adc
cmp
add
ret
clc
repnz
or
pop
and
in
cmp
js
push
mov
shrl
pop
mov
repz
ret
loopne
and
insb
push
push
bound
pop
mov
cwtl
push
xchg
sub
push
out
xchg
sbb
stc
sub
outsb
mov
jp
sub
adc
xor
stos
ja
test
xchg
dec
arpl
xor
insb
dec
fldcw
sbb
xchg
push
push
cmp
pop
insl
and
cmpsb
and
outsb
jl
shll
jbe
das
sbb
pop
lahf
mov
jl
arpl
rorl
test
movsl
mov
xchg
out
xchg
shlb
ret
lods
sub
jb
mov
addr16
inc
or
xor
les
loope
sub
lcall
or
mov
inc
xchg
inc
loopne
rcll
xchg
mov
pop
lcall
jo
xchg
fldz
xor
in
movsb
inc
sahf
dec
enter
jno
xchg
jp
frstor
andb
stos
adc
mov
loop
ret
mov
push
add
mov
pop
lahf
lea
js,pt
mov
out
mov
add
push
out
fwait
mov
sbb
xor
add
loope
or
lods
mov
and
lcall
inc
aad
cwtl
xchg
js
xor
add
cmp
sbb
xor
ja
lds
mov
out
push
and
gs
mov
lcall
ror
xchg
push
sub
xchg
ja
dec
rorb
repz
lahf
mov
pop
push
mov
jbe
pop
xor
std
mov
pop
mov
add
xchg
xor
inc
int3
mov
js
inc
push
fsubs
and
fcom
leave
sub
xor
lock
lds
adc
and
mov
mov
xchg
inc
jecxz
roll
fdivrl
adc
xchg
xchg
neg
cmpsl
mov
addr16
sar
fidivs
push
mov
nop
sbbl
aas
loopne
aaa
sub
xchg
push
inc
or
and
jecxz
cmp
push
sbb
in
sbb
pop
lods
push
je
add
popa
push
or
shlb
lret
enter
xchg
cmpsl
popa
shrl
fsubrs
fnstenv
inc
pop
imul
cmpsb
adc
add
xchg
roll
in
pushf
jne
push
scas
shrb
add
mov
sbb
enter
mov
mov
and
ja
sbb
pop
sub
adc
mov
into
in
out
mov
in
push
and
mov
dec
rolb
xor
dec
scas
shlb
repnz
adc
mov
sbbl
enter
test
cmpsb
inc
gs
cmp
insl
imul
pop
add
stos
jae
stos
push
out
lcall
cmp
dec
mov
jno
pop
push
push
jnp
daa
not
jle
popf
pop
jno
roll
popa
mov
add
jae
pop
das
push
mov
call
ret
aas
push
push
mov
add
pop
and
inc
mov
sarl
or
nop
jecxz
jl
xor
scas
roll
xchg
pop
sti
jle
cmc
sbbb
pop
cmpsb
ds
pmuludq
push
and
aam
jl
cltd
test
inc
fnsave
jnp
sub
fwait
stc
push
mov
cmp
arpl
fldcw
clc
add
fsubrl
mov
into
pop
xor
mov
jns
sub
out
or
fistl
dec
sub
std
xchg
cmp
dec
aad
rcr
lods
adc
add
and
xchg
push
mov
in
rorb
xchg
push
xlat
ja
sbb
stos
mov
jmp
stos
inc
in
cmp
sbb
cs
vpminub
mov
in
pop
inc
push
negb
daa
add
loopne
orl
out
cmp
sub
fwait
test
sbb
adc
fildl
fldt
out
fcmovnu
out
sub
mov
les
cwtl
jns
int
push
jl
mov
cmpb
xor
imul
ljmp
mov
mov
in
adc
hlt
mov
imul
jge
push
add
jp
je
fs
inc
adc
fmull
dec
inc
fwait
rcll
add
add
xchg
je
push
das
sar
sbb
adc
fcomp
dec
fisttpl
out
pop
cmp
je
xchg
xor
hlt
in
sti
daa
push
sub
sbb
rcl
sbb
mov
fwait
push
mov
int
sbb
pop
push
add
jge
in
xlat
or
xor
fbstp
stos
insb
or
shrl
shll
pop
jmp
insb
in
stos
inc
out
inc
sub
pop
push
jmp
aas
xchg
mov
inc
mov
in
enter
jp
push
add
sub
loopne
jnp
dec
incb
clc
fs
movsb
lock
add
xor
test
xchg
and
cs
cmpsb
aas
sub
repz
sub
mov
lds
loope
xor
push
rolb
arpl
xorl
lods
mov
loopne
fidivrs
sbb
xor
sarb
sub
jns
sbb
push
cmp
lock
dec
inc
ja
dec
or
daa
cld
loop
addb
int
adc
or
cld
aad
push
divb
mov
decb
pop
add
pop
sbb
rorb
fwait
or
push
jo
aaa
mov
sub
sbb
sub
mov
xchg
mov
jnp
inc
call
faddl
mov
pop
into
loope
mov
sbb
adc
xchg
sti
repnz
data16
insl
mov
je
mov
scas
sub
or
push
inc
xchg
pop
shll
aaa
js
push
out
dec
cmp
adc
sti
pop
push
xlat
arpl
xchg
pop
and
cmp
sbb
push
sbbl
cmp
mov
cwtl
ret
fsubrs
aad
and
mov
out
insl
ds
pop
addr16
stos
cmc
push
fcmovne
cmp
outsb
dec
xchg
and
push
mov
xlat
stos
sub
mov
cmc
addb
mov
sbb
fldenv
movsl
mov
cmp
xchg
mov
lret
xchg
push
dec
pop
shrb
dec
jne
pop
pop
andl
imul
cmpsb
lods
mov
mov
push
divl
sahf
push
ja
in
xchg
addr16
mov
mov
jge
jbe
or
mov
cmp
sub
push
inc
xchg
xor
mov
subb
mov
add
push
or
out
subl
cltd
sahf
jge
or
stos
dec
orb
bnd
xor
adc
call
sbb
imul
xor
sub
pushf
sbb
loope
jne
lea
and
popl
sub
cwtl
daa
bound
aam
mov
or
sub
jns
shrb
or
pop
and
xorl
pop
jp
movsl
ret
cmc
xorb
pop
or
cmp
xchg
pop
and
sarb
xchg
ret
push
xchg
inc
push
mov
jae
dec
mov
jg
cli
and
xor
out
mov
jb
pop
lret
shl
lea
push
push
jbe
xor
gs
jmp
fcmovne
sahf
or
test
jl
adc
js
outsb
dec
xchg
jp
ret
push
pop
lret
nop
xchg
mov
jmp
ljmp
mov
mov
insl
mov
pop
push
lds
pop
mov
inc
or
lcall
js
shl
mov
cli
mov
out
enter
jle
ret
cmc
ja
inc
idivl
mov
sub
sub
cmpb
gs
js
mov
and
fistps
bound
mov
push
inc
in
out
imull
sub
fs
or
fwait
jae
lret
lahf
mov
add
xchg
or
jb
popf
aad
lret
add
ljmp
test
mov
filds
decl
cmp
fstpt
fistpl
mov
adc
ss
push
ja
fistpll
xlat
pop
aas
fs
dec
std
push
lods
and
fdivrl
or
les
out
cmpsb
jecxz
imul
fistps
push
repz
push
das
cmp
bound
nop
mov
add
sbb
mov
sub
inc
pop
stos
adc
jge
push
imul
sbb
imul
inc
jl
and
sub
iret
pusha
pop
fisttpl
fnstsw
dec
or
push
mov
fstpt
cmpsl
xor
es
dec
in
dec
cmp
add
add
sahf
mov
adc
add
add
outsl
in
je
test
mov
insb
push
add
jno
aaa
xor
sub
mov
jae
mov
mov
pusha
add
leave
icebp
inc
repnz
shr
shll
push
movsl
pop
aam
je
mov
jns,pn
int
xchg
test
ja
adc
and
ljmp
xchg
icebp
xchg
fistps
pop
sub
fcomps
pop
pop
repnz
jb
push
dec
push
loopne
cmp
xchg
or
pushf
mov
jb
pop
sbb
sbb
push
sub
loopne
sahf
cmp
push
popa
rol
sub
or
repz
pop
fdivs
jnp
dec
testb
shll
mov
movsl
mov
lods
xchg
lcall
icebp
test
mov
cmp
mov
xchg
sti
lcall
sbb
pop
mov
sub
fbld
mov
cld
mov
sahf
jle
mov
jle
jnp
imul
xor
fcmovne
rcl
notb
lcall
dec
or
push
xchg
push
call
dec
lahf
or
jge
add
sbb
je
and
push
lcall
jb
sbb
mov
mov
std
lock
insl
mov
cwtl
jae
test
xor
bound
dec
je
imull
and
dec
test
dec
iret
ds
xchg
dec
adc
mov
les
sti
and
mov
inc
mov
test
aam
xorl
imul
repz
pop
add
clc
call
lret
add
mov
lods
js
divl
pop
pop
lcall
and
jl
push
xchg
cs
dec
fwait
sahf
in
std
jbe
aad
xlat
ljmp
push
cmc
iret
in
xchg
dec
fsub
test
push
or
iret
push
xor
xor
sbb
out
jge
cmp
xchg
mov
in
inc
fildl
pop
cmc
in
xor
pop
lret
test
js
mov
xor
int
adc
movb
test
and
iret
mov
add
js
mov
leave
dec
dec
and
dec
dec
push
sub
mov
pop
mov
fwait
sbb
mov
sbb
xor
fiaddl
call
ss
das
dec
cmp
loop
popa
pop
test
xchg
das
push
lock
mov
movl
dec
sub
mov
call
out
mov
inc
data16
pop
iret
push
js
jmp
add
out
jl
or
mov
or
lcall
sbb
mov
sub
sbb
loope
mov
stos
and
enter
pop
add
cs
mov
xor
mov
outsl
pop
cltd
int
fcomi
lods
push
mov
fnstenv
xor
push
jnp
dec
mov
ret
push
mov
mov
out
in
sub
orl
jo
test
data16
fiadds
and
push
cmpsl
sbb
repnz
cmc
pop
and
add
std
xlat
push
movsb
mov
loop
push
inc
jmp
or
adcl
and
mov
testl
inc
dec
push
sub
adc
cmp
pop
add
jns
out
loop
sbb
loope
es
outsl
je
in
mov
fs
loop
mov
xchg
es
je
and
xor
or
push
outsb
sbb
add
push
je
xchg
clc
in
dec
repz
sbb
mov
sub
mov
shll
xor
xor
inc
int3
insl
out
jp
mov
in
dec
add
call
sbb
repnz
mov
scas
hlt
jae
push
pop
dec
xchg
push
cs
inc
pop
jmp
xchg
xor
xchg
ds
jl
stos
inc
outsl
cmpb
pop
es
sub
pop
and
adc
cmc
rcrb
ja
popa
mov
cmc
call
cmp
outsl
sub
sbb
push
cmpb
dec
sbb
and
xchg
int3
xor
inc
xchg
sub
in
clc
dec
jbe
imul
adc
rol
push
loopne
call
lea
mov
pop
cwtl
xor
mov
push
pop
pop
out
out
adc
xchg
dec
and
dec
adc
mov
inc
adc
stos
data16
mov
bound
dec
fmuls
outsb
mov
aam
xchg
bound
rcrl
sbb
cmp
lret
pop
hlt
in
mov
mov
xchg
fistps
ja
or
cmp
in
cmc
insb
je
sub
sbb
es
mov
mov
inc
pop
mov
mov
fcoms
je
lret
sub
ror
or
xchg
cmpl
call
lea
ret
cmp
repz
arpl
push
imull
out
fwait
adc
inc
imul
push
and
jmp
scas
add
mov
push
movl
pushf
mov
sub
jp
xlat
popf
xchg
mov
jno
adc
add
enter
insb
fdiv
push
testl
push
xchg
push
mov
xor
mov
shrb
aas
add
mov
push
arpl
cmpsb
mov
mov
mov
ja
add
mov
sti
sub
test
ss
fwait
pop
fisttps
dec
clc
ss
add
pop
cmp
xchg
push
mov
mov
repnz
notb
sti
mov
sub
scas
bound
push
pop
repnz
test
xor
ja
dec
hlt
mov
xorl
push
lds
into
push
xor
cmp
test
aam
xchg
lret
xor
test
imul
jl
imulb
insb
push
push
inc
or
inc
adc
outsl
mov
xor
ds
pop
mov
testl
sub
cmp
mov
arpl
mov
adc
outsb
pop
inc
test
aad
cmpsl
and
dec
push
inc
lcall
xchg
sbb
sbb
shll
in
add
dec
and
or
sub
pop
xchg
test
pushf
scas
shlb
or
cmpsl
popf
daa
loopne
cmp
lods
dec
xchg
jns
lods
dec
icebp
add
cmp
jle
mov
sbb
ja
sub
xchg
cwtl
out
sbb
jnp
in
test
jbe
push
cmp
jge
inc
jmp
cltd
and
cmp
popa
fsubrs
sarl
sbb
orb
movsl
cmp
aas
loop
or
out
sbb
jmp
lods
mov
mov
pop
mulb
rsm
push
out
inc
in
xchg
inc
fwait
mov
mov
add
loopne
dec
jecxz
pop
adc
or
push
fwait
pop
pushl
iret
test
ror
in
es
mov
les
push
xchg
lret
xor
fwait
adc
mov
cmc
lock
mov
outsb
sub
adc
jo
sub
mov
push
popa
inc
jnp
mov
and
cltd
stc
sub
gs
sahf
mov
push
push
dec
dec
push
add
into
les
dec
lods
in
pop
mov
pusha
mov
jne
cmp
out
dec
icebp
aaa
inc
frstor
or
iret
pusha
movsb
test
mov
pop
icebp
shll
movsb
push
cmc
cmp
xor
inc
mov
push
dec
adcb
push
sbb
mov
inc
outsl
sahf
sub
push
pop
lock
jg
mov
enter
and
add
sbb
adc
pusha
in
push
fdiv
pop
inc
cmp
test
ret
js
shll
xor
sahf
cmp
call
dec
es
xchg
xor
pop
inc
mov
or
fdivs
cmp
hlt
enter
iret
add
fstl
aas
clc
xor
jmp
sub
and
mov
mov
lods
inc
icebp
xchg
hlt
add
iret
push
cmpsl
lods
adc
scas
adc
sub
and
sub
mov
mov
rcr
push
rorb
cmp
sarl
lds
dec
shl
rorw
xor
idiv
cmc
inc
cmp
jno
add
hlt
add
mov
or
mov
lcall
adc
inc
cmp
pop
or
outsl
into
shll
dec
stos
add
into
xchg
mov
lret
and
das
ja
jp
fistpl
dec
sbb
insb
daa
shll
and
add
add
loope
aaa
out
mov
mov
cmpsb
out
outsb
mov
pop
cs
jl
sub
or
hlt
scas
pop
pop
pop
popa
lret
dec
sbb
outsl
insb
je
ror
popa
pop
xchg
jns
clc
xlat
mov
shlb
fnsave
pusha
popf
imul
cmp
pop
cmp
cmp
jne
scas
test
ja
mov
xchg
and
and
fcomps
clc
dec
ds
jecxz
push
pop
movsl
mov
ja
push
repz
pop
and
mov
fimull
lahf
mov
mov
sbbb
mov
mov
push
leave
push
pop
jl
icebp
pop
out
jmp
sbb
jo
push
ror
push
pop
or
mov
jecxz
push
lcall
aad
movsb
jb
rcll
xor
iret
test
popa
push
rcll
lock
xchg
aam
loop
bnd
stos
inc
cmp
frstor
jecxz
jne
or
xor
cmp
ss
cmpsb
aam
cwtl
cld
outsl
repz
pop
xor
adc
movl
popf
mov
xchg
aas
mov
outsb
pop
inc
or
sbb
jo
xchg
jmp
cmp
mov
pop
and
arpl
pslld
and
mov
jge
push
push
lea
sub
push
jb
push
push
mov
adcb
mov
repz
std
adc
adc
mov
mov
sbb
jecxz
pop
and
lret
je
fwait
xlat
mov
popf
and
adc
jmp
xchg
outsb
and
push
sub
leave
movsb
adc
mov
stos
adc
loope
xor
inc
mov
fcoml
sub
mov
mov
gs
or
sbb
sti
sahf
loope
pop
or
loope
jb
je
fsubp
ret
popa
xor
mov
push
popa
mov
outsb
fs
xor
mov
sti
cmp
and
cmpsb
mov
std
ret
clc
push
js
and
pop
jge
adc
dec
cwtl
mov
or
adc
sub
das
dec
notl
and
out
inc
lods
lods
push
insb
stc
push
loope
cwtl
push
fs
lcall
cmp
xor
fldl
fistps
lret
in
mov
out
adc
mov
mov
int
test
insl
andb
pop
cmp
fdivrs
add
and
popf
das
outsb
gs
pop
rorb
es
pop
cltd
adc
rolb
sbb
jno
inc
cmc
and
jno
rcll
mov
xlat
scas
pusha
adc
pop
pop
sub
aaa
int
out
jp
push
icebp
pop
pusha
movsl
dec
wrmsr
mov
pushl
cmpsl
cmp
lret
sub
aaa
and
xor
jl
sub
shlb
push
jno
aad
xchg
dec
movsb
lcall
xchg
pop
icebp
into
stc
sub
mov
adcb
or
dec
fcoms
mov
gs
sbb
pushf
dec
xchg
jne
roll
movsb
in
rcll
cwtl
sbb
xchg
and
push
sti
xchg
pop
loope
sub
lret
or
jg
and
jno
xlat
dec
sbb
mov
add
stos
cmp
fbstp
xchg
pop
sub
jnp
inc
xchg
lock
es
popf
addl
pop
orl
jl
outsl
or
dec
sahf
jmp
adc
and
mov
in
and
cmp
xchg
mov
lock
leave
sbb
cld
mov
xor
popf
push
mov
jle
push
ds
outsl
push
pop
cmp
sub
out
popf
sub
mov
sub
inc
pop
int
outsl
roll
push
sub
sub
stc
inc
bound
js
sub
push
inc
popf
mov
jo
addr16
xor
mov
add
mov
popa
lret
sbb
jae
movsl
or
pop
pusha
sbbb
lcall
pop
inc
sbb
jmp
ljmp
rcrl
bound
insb
xor
call
sub
sub
cwtl
mov
xor
sahf
repnz
add
fisubrl
dec
mov
fisubs
in
and
movsl
mov
mov
sub
test
sbb
and
mov
std
sbb
or
xchg
lods
mov
lea
add
pop
leave
mov
cmpsb
cmpsb
mov
sub
or
adc
xor
mov
stc
jne
jbe
adc
jne
cmc
mov
loop
dec
dec
mov
test
mov
fnstcw
mov
pop
rorl
sbb
ljmp
fdivs
aaa
int
dec
sub
add
push
mov
lahf
mov
fs
mov
mull
add
cwtl
push
pop
push
mov
out
pop
nop
paddsb
pushf
lret
jle
mov
push
addl
cmp
lret
xor
cmp
jg
or
dec
ret
loopne
loope
mov
outsb
mov
push
xchg
push
fisttps
aas
pop
imul
int
jmp
std
mov
in
hlt
and
faddp
cmpl
push
pop
pop
xchg
loope
cmp
imul
iret
mov
test
int
imul
mov
pop
xor
pop
inc
fisttps
xchg
cmp
in
mov
and
inc
mov
dec
adc
out
insb
loope
scas
enter
and
push
insl
push
sbb
fnstcw
lret
pushf
ret
rclb
add
mov
sbb
cld
lds
xchg
fwait
jecxz
daa
push
lcall
rol
insb
in
and
cmpsl
mov
insl
mov
outsl
iret
dec
popf
pusha
shrd
in
jbe
dec
insl
into
push
or
mov
lea
xchg
dec
pop
jmp
mov
aad
push
fimull
inc
mov
sbbl
sbb
je
mov
add
mov
cld
imul
lcall
adc
sub
mov
cmp
fldt
dec
mov
insl
fs
inc
push
je
rcll
jb
cmp
pop
lret
mov
loopne
mov
jno
call
pop
push
xchg
aad
andl
mov
mov
or
movsb
adc
movsl
mov
repz
vpmulhuw
repnz
push
nop
mov
out
cli
jae
stos
mov
adc
add
mov
pop
pushf
lret
xchg
lds
jecxz
insl
or
cmp
cli
sbb
cmp
push
mov
subl
pusha
loope
or
or
xor
repz
add
inc
aad
cmp
js
xor
orl
mov
cmp
loope
xchg
push
xor
dec
inc
and
xor
lcall
fisttpl
arpl
std
mov
daa
adc
outsb
fstpl
inc
push
dec
push
mov
sub
mov
sub
loopne
lret
adc
stos
popa
mov
xchg
mov
dec
lods
adc
in
cmpsl
cmc
pop
int
sub
mov
sbb
push
jge
push
repz
pop
mov
test
xchg
mov
push
jecxz
lds
loope
pop
int3
lret
mov
xchg
xchg
pop
or
stc
mov
clc
lcall
cmc
aaa
loope
add
pop
adc
jne
lds
sbb
or
cmp
add
pusha
notl
xchg
adc
in
std
ss
mov
mov
dec
inc
popa
sahf
sbb
popf
inc
inc
mov
mov
add
sbb
mov
stc
jns
in
test
test
iret
mov
das
cmp
xchg
pop
jecxz
sub
into
in
xor
adc
pop
push
data16
stc
dec
sbb
inc
add
jb
mov
movsl
scas
sub
xchg
es
inc
int3
popa
pop
movsb
lea
sbb
clc
rorl
sub
cmp
lock
push
mov
ljmp
gs
dec
cld
cmc
adc
cwtl
and
fcomip
mov
lds
fdivs
sbbb
iret
cmp
maskmovq
dec
push
jae
jns
adc
adc
mov
push
push
mov
jb
int
sbb
test
faddl
adc
lahf
cli
xchg
inc
fdivl
dec
dec
add
das
xchg
cmpl
int
outsb
inc
shlb
cmc
stos
xor
in
push
and
shlb
sub
dec
stc
dec
push
in
lock
jl
or
mov
daa
adcb
lods
xchg
jmp
push
test
inc
sub
mov
das
mov
fwait
xchg
inc
mov
or
das
push
aam
mov
pop
xchg
bound
jne
pop
std
push
jnp
fisubrl
push
dec
mov
mov
loop
rclb
push
dec
dec
fwait
es
rcrl
icebp
ss
test
sbb
inc
pop
daa
mov
sbb
pop
sarl
nop
push
sub
fimuls
aas
lcall
xor
testb
in
add
or
jmp
in
push
mov
int
and
cmp
sbb
mov
mov
sub
lods
fisttpl
mov
xlat
test
fisttps
cmp
scas
in
call
pop
sbb
mov
sub
out
leave
push
fldt
mov
push
cwtl
aas
adc
movsb
fnstenv
push
movsb
and
pop
xor
imul
push
and
je
sti
add
jl
rol
sbb
lret
adc
xor
cmp
clc
add
enter
ljmp
push
push
dec
mov
jne
insb
scas
lods
je
inc
orb
xchg
pop
sub
aas
fldt
and
jp
into
mov
aam
pop
push
push
outsb
fisttps
xchg
adc
jae
ret
push
adc
or
outsl
mulb
nop
push
fs
movsb
movsb
js
scas
frstor
les
jno
pop
lret
push
cmp
scas
pop
sub
inc
add
mov
adc
jns
xchg
jge
pop
loop
inc
mov
fs
xchg
cmpsl
xor
sbb
or
dec
push
outsl
lret
jae
push
pop
data16
xchg
ljmp
xchg
sub
xchg
sbb
inc
push
dec
inc
ds
cli
mov
iret
dec
dec
ljmp
addr16
push
mov
jno
daa
adc
sub
jg
ljmp
leave
fwait
sbb
dec
jb
or
dec
fldt
jbe
out
lret
jle
mov
mov
aam
sarl
popa
dec
div
fnsave
test
mov
mull
inc
data16
imul
fnstcw
lea
mov
push
push
pushf
xchg
loope
cmpsl
mov
cmp
test
das
mov
pop
push
imul
call
push
mov
push
adcl
pop
test
aam
lret
pusha
add
dec
lods
mov
mov
pushf
icebp
push
in
cltd
adc
cs
mov
push
jecxz
dec
jbe
call
nop
adc
scas
push
int3
xor
fstpl
xchg
jae
int3
testl
push
jae
mov
xchg
jb
testb
xchg
cmp
cltd
push
insl
lods
mov
cmp
xor
xchg
js
adcl
lcall
movsb
jg
adc
or
dec
dec
cmp
sahf
insb
ja
mov
mov
xor
mov
mov
dec
and
outsb
test
mov
cmp
out
mov
cmp
push
mov
mov
xor
cmp
jge
scas
mov
add
clc
xchg
cmp
xor
add
int3
push
cmp
push
or
mov
mov
mov
ffree
dec
cmp
dec
push
push
pop
pop
pop
jle
insl
stc
jle
inc
cmc
shlb
daa
jecxz
or
pop
std
xchg
pop
ds
adc
push
pop
mov
je
xchg
sbb
dec
test
inc
xchg
push
mov
jp
dec
imul
xor
enter
subb
mov
sbb
inc
jb
divb
xchg
jle
sbb
in
fnsave
mov
jmp
cmp
ljmp
adc
jge
lcall
mov
jmp
clc
test
or
push
cmp
xchg
cld
aam
aaa
icebp
outsb
pop
push
adc
fcomp
pop
test
arpl
push
xor
mov
shl
mov
ja
test
sub
xor
mov
adc
sub
xchg
xchg
out
das
es
inc
jns
outsb
outsb
fdivs
pusha
mov
xchg
bound
dec
cmc
data16
sbb
cmpsb
jnp
loope
push
jle
stos
ljmp
sub
lock
or
pusha
mov
sbb
repnz
xor
xor
fidivrs
ja
jo
movsl
cmp
inc
push
cmp
mov
pop
jg
es
xor
ret
scas
pop
mov
xor
sbb
je
mov
sub
cmp
mov
dec
ss
adc
xchg
icebp
mov
push
xor
cmp
xor
in
mov
mov
das
out
les
les
aaa
pop
or
popa
dec
mov
or
cmp
jb
fnstsw
xor
dec
stc
xchg
clc
lods
rcrb
sahf
mov
out
mov
xchg
and
loope
or
adc
inc
std
dec
rclb
jmp
cld
inc
outsb
in
sahf
sub
sbb
cli
or
xor
bound
cmp
pop
adc
jecxz
push
or
mov
cmp
int3
or
inc
jecxz
or
pop
aas
jo
gs
ljmp
icebp
test
push
fisubl
iret
push
outsl
test
lock
fstp
push
inc
xor
xor
cmp
jb
fdiv
hlt
jb
roll
or
mov
or
pop
in
test
lret
out
lea
hlt
in
lds
ja
mov
inc
pop
push
cmp
mov
ret
pop
iret
in
push
sub
clc
rclb
push
out
stos
aad
les
add
addb
outsl
sbb
jp
or
xor
loopne
xor
mov
pop
and
cmc
xchg
fistl
mov
adc
lds
or
mov
cmp
xchg
leave
push
fnsave
mov
mov
ret
pop
or
inc
jbe
loope
subb
jg
inc
inc
clc
mov
jns
outsl
rcll
leave
call
and
repz
lahf
push
test
mov
mov
mov
pop
mov
dec
add
popa
sub
data16
pop
mov
add
pop
icebp
mov
rcr
mov
outsl
sbb
mov
fwait
inc
mull
stos
outsl
fstp
notb
push
or
mov
push
mov
popf
adc
jb
pop
js
in
roll
push
out
pop
ljmp
std
jns
and
leave
test
cmc
sbb
xor
sub
sahf
and
xor
jo
std
sbb
jno
xchg
cmp
outsl
push
mov
das
or
lea
jns
notb
jle
aad
mov
repz
loop
sub
jae
popa
ljmp
aam
sub
hlt
repnz
les
rdpmc
pop
lods
sub
movsb
mov
jb
sub
jno
pop
bound
cmp
push
arpl
pop
push
adc
cmpsl
les
jmp
loopne
dec
lods
popa
into
pop
vblendvps
outsl
adc
ret
add
jno
outsl
push
mov
cmpsl
push
sub
xor
push
fld
pop
xor
push
pop
out
js
adc
xor
sarl
dec
shrl
add
mov
sbb
arpl
mov
aaa
jle
test
in
dec
loopne
mov
mov
aas
into
xor
into
pusha
cmpsb
lds
movb
ficoms
lods
jb
ss
mov
out
and
shrb
mov
or
jecxz
adc
ret
add
pop
push
push
inc
fdivs
push
es
loope
out
fs
lret
stc
xlat
cmp
inc
ja
mov
test
pushf
xor
adc
lcall
mov
jg
pop
pop
dec
daa
scas
gs
imul
xchg
sub
popa
sub
mov
jae
sti
ja
jnp
inc
mov
adc
in
rcrb
mov
dec
pop
aaa
sbbb
lahf
out
arpl
cmp
push
dec
mov
mov
dec
adc
xor
mov
mov
mov
mov
enter
mov
dec
xor
ret
ds
enter
aas
shll
add
pop
test
fbstp
push
stc
push
stos
push
push
out
jl
mov
sub
sahf
outsb
orb
push
lods
xor
mov
in
aas
fnstsw
dec
shlb
push
adc
dec
xchg
inc
lahf
repnz
xlat
push
jbe
mov
gs
and
adc
jmp
xor
in
jae
mov
inc
aad
rep
out
mov
sarl
fsubs
popf
ret
inc
pop
dec
or
aas
jl
pushf
xor
in
stc
je
mov
xlat
arpl
pop
inc
cltd
lahf
xchg
popf
jno
imul
in
cmp
in
push
jbe
out
sbb
aam
paddusw
mov
inc
mov
sub
outsl
push
in
or
jns
das
xor
shll
inc
addl
push
mov
push
insb
ljmp
add
mov
jl
fsubs
pusha
inc
inc
sbb
mov
jns
push
mov
cs
mov
pop
sbb
inc
dec
lock
cmp
and
adc
sbb
pop
ret
push
cwtl
popa
xchg
sub
add
jbe
enter
orl
sbb
test
es
sub
insl
std
mov
mov
inc
pop
incb
pushl
daa
inc
in
cld
mov
int
lea
sbb
mov
movsl
mov
shll
dec
pop
inc
aas
and
mov
mov
jmp
pop
sbb
fwait
sub
inc
mov
pop
clc
sub
out
push
push
int
xlat
clc
xchg
popf
gs
iret
mov
outsl
ljmp
mov
je
mov
mov
lock
nop
xor
int3
std
xor
cltd
andb
cmp
out
cmp
jno
orl
dec
fmull
mov
mov
imull
sbb
movsl
andb
clc
subl
and
pop
or
aad
arpl
xor
nop
sbb
mov
mov
mov
push
movsb
jmp
repnz
fsubp
popl
pushf
inc
mov
or
pop
xlat
or
mov
mov
mov
je
lods
inc
mov
out
stos
sub
ficoml
icebp
xchg
xchg
dec
popf
rolb
jno
test
dec
or
jb
dec
push
adc
sti
push
and
jae
push
jmp
lret
sub
stos
jmp
movsb
rorb
inc
imul
sub
adc
cmp
cmp
xchg
mov
movsl
push
pusha
in
or
sbb
loopne
mov
sbb
mov
dec
iret
push
hlt
inc
movsl
cmp
shrb
imul
jb
js
xchg
test
push
je
xchg
outsb
insl
mov
cwtl
mov
and
and
leave
in
push
pop
cmp
cmpsl
shll
xchg
rorl
mov
mov
mov
add
fisubs
pop
cmp
popf
mov
mov
aaa
xchg
jb
and
insb
decl
leave
mov
subl
cli
xchg
jns
sbb
aad
and
mov
push
loop
iret
sub
ret
sbb
dec
push
xchg
jecxz
hlt
outsb
cmc
inc
aas
ljmp
sti
mov
pushf
stc
fmuls
mov
adc
jl
xor
imulb
fnstenv
mov
repz
inc
mov
inc
daa
and
pop
ret
outsb
ret
xchg
mov
pop
aas
cli
mov
sbb
jne
jg
push
dec
cmp
and
ret
sbb
mov
xchg
cmp
push
fisttps
or
bound
xchg
mov
push
nop
cmc
fbstp
lret
push
fisttps
sub
scas
jne
or
pop
out
pusha
cmp
movsb
dec
pusha
hlt
out
dec
adcb
gs
test
add
in
fidivrs
dec
ret
mov
cmc
pop
gs
dec
dec
and
dec
lcall
sub
add
call
pop
pop
mov
or
mov
inc
test
stc
sahf
enter
fcoms
and
push
leave
int
mov
stos
sub
push
stos
sub
push
mov
xchg
jb
or
gs
sbb
outsl
int
adc
aam
dec
bound
or
and
int
pop
adc
movsb
xor
sub
xchg
jge
pop
loope
lds
ret
inc
arpl
mov
mov
cmp
movsb
mov
cmp
jns
pop
dec
fmuls
sbb
mov
nop
and
cmpsl
dec
inc
pop
test
in
push
adc
xor
lods
jl
enter
mov
ds
test
dec
enter
mov
jne
fildl
fisttpl
push
push
out
dec
sbb
notb
mov
push
or
fimuls
mov
sub
xor
jb
adc
fninit
leave
shlb
xor
inc
dec
add
iret
into
testl
fcmovu
lret
add
and
mov
leave
sbb
mov
cwtl
sub
inc
push
or
daa
aas
dec
cli
sti
sbb
add
mov
xchg
jbe
jl
test
cmpb
xor
adc
add
addb
insl
mov
xchg
into
sub
xor
inc
mov
ret
jp
sar
aam
std
dec
push
xchg
lea
push
jle
mov
mov
and
mov
insb
xor
or
and
push
sub
jno
pop
pop
inc
pop
jnp
lret
push
and
cs
mov
cmp
pop
ljmp
mov
mov
mov
or
subl
xchg
pop
les
cmp
pusha
add
lds
cmpsl
dec
lcall
sti
cwtl
aaa
fsubrl
cli
xor
divl
xor
mov
inc
push
inc
aaa
pop
gs
sbb
stos
push
xchg
cli
jmp
jb
cmc
jle
lods
inc
xchg
in
and
sub
sbb
inc
pop
ret
call
add
out
rorb
mov
sahf
pop
cmp
mov
dec
shr
call
in
scas
mov
mov
out
enter
add
ret
mov
mov
jge
ja
inc
add
sub
push
stc
sbb
push
insb
sub
data16
pop
mov
xor
loope
jp
fstps
mov
xchg
aam
imul
mov
and
insb
fists
cmp
lock
sub
stos
fstpt
xlat
sub
xor
inc
jbe
dec
xchg
fdivrl
xchg
in
andl
pop
jns
dec
bound
cs
jl
leave
push
mov
lods
xor
test
inc
sbbb
out
sti
sbb
dec
fisubl
icebp
push
frstor
int
inc
rcr
jecxz
addr16
push
ds
mov
lcall
xlat
cmp
mov
xchg
and
ljmp
addb
pushf
outsl
repnz
pop
mov
or
out
in
cmp
inc
lret
imul
aam
jbe
sbb
mov
inc
mov
xchg
lret
cmp
sub
pop
rorl
mov
jle
xchg
notl
add
loope
inc
out
in
ret
outsb
imul
fists
ret
imul
jl
addr16
movsl
leavew
fcoms
xchg
sub
ficoml
jo
pop
push
adc
pop
mov
xchg
pop
xor
int
out
gs
push
scas
je
popa
xor
adc
inc
mov
fs
imul
mov
xchg
lcall
jbe
in
ljmp
and
cltd
out
test
fists
add
lahf
shr
mov
and
sub
std
adc
push
stos
out
mov
rcl
dec
mov
test
push
dec
loop
and
adc
rolb
sti
push
popf
mov
ret
daa
inc
xchg
aad
and
jmp
push
mov
into
adc
cmp
js
push
xor
mov
ja
les
cwtl
adc
dec
inc
in
mov
test
imul
mov
sbb
add
and
popf
lret
leave
adc
fiadds
xor
ja
push
sub
ret
lea
jg
lret
aas
jmp
dec
std
repz
push
adc
fdivrs
in
pop
pop
xchg
mov
lea
jecxz
pop
inc
sbb
addr16
mov
shrl
sub
sbb
mov
int3
fiadds
push
sbb
inc
lahf
inc
jp
add
jge
cs
add
or
mov
xor
pop
aaa
cld
into
dec
insl
movb
ds
cmp
cltd
movsl
ljmp
mov
cmp
jg
cli
or
pop
jnp
jl
sub
orl
cmpsl
xlat
sub
sbbb
cld
test
mulb
mov
in
cmp
aas
pop
imul
mov
adc
push
cltd
mov
jmp
les
add
and
jp
lcall
addl
bound
cmp
inc
ffreep
sarb
sbb
mov
and
pop
pop
xchg
and
add
xchg
cmp
mov
jecxz
cwtl
mov
adc
shll
das
stos
pop
xor
jne
push
xor
mov
sti
inc
test
jmp
cs
dec
add
adc
cmc
xor
mov
out
cld
mov
les
cmp
cli
mov
std
loope
sbb
cmpsl
hlt
lds
dec
add
or
out
mov
dec
mov
add
dec
cld
lock
sbb
adc
jge
sbbb
lock
sub
and
into
mov
test
xchg
mov
and
cmp
dec
out
adc
or
enter
mov
dec
rcl
adc
sbb
sbb
in
mov
fsubs
lea
stc
pop
lods
push
stos
adc
xchg
cmp
push
xchg
test
mov
mov
loopne
sarl
xor
fsubl
lods
mov
mov
xchg
pushf
lahf
aas
jg
and
jb
shlb
gs
repz
test
in
in
mov
sub
test
mov
cmpsb
ljmp
loopne
inc
int
fidivrl
cs
lock
les
mov
mov
fisubrl
sbbl
ss
test
inc
movb
mov
dec
dec
les
sahf
jl
aam
xor
push
test
sbb
xor
adc
sbb
sbb
mov
flds
mov
push
adc
xchg
sub
lods
ja
fwait
mov
int3
pop
mov
movsb
mov
hlt
mov
test
stc
movsl
mov
sbb
mov
clc
mov
ja
sub
cmpsb
lods
bnd
cmc
cmpsl
pop
jno
rclb
and
lods
jo
adc
cwtl
insb
scas
xchg
xchg
xorb
outsl
jmp
sub
and
and
mov
push
pusha
cltd
dec
lahf
or
aas
adc
movsb
imul
xor
stc
shl
sub
pop
mov
clc
je
arpl
add
inc
cmp
xchg
dec
cmp
add
and
arpl
imul
insl
mov
popa
ret
fcmovnb
mov
aad
xor
pop
imul
cs
xchg
pop
mov
lods
sbb
xchg
dec
loop
xlat
sbb
pop
push
adc
adc
outsb
loopne
jecxz
notl
in
fwait
jge
pop
sbb
es
add
int
sub
xchg
fnsave
sub
xor
call
add
data16
gs
xchg
popf
add
mov
lret
mov
or
sub
jge
push
cmpsl
xor
test
push
pop
in
sbb
mov
fwait
cld
pop
pop
lret
or
jo
cmc
dec
xorb
cmp
cmpsl
in
xchg
leave
or
push
lcall
mov
dec
mov
lcall
call
mov
mov
rcr
aas
mov
popf
sbb
adc
lods
cli
add
or
jae
es
or
pop
loop
ficompl
push
xchg
adc
scas
aaa
mov
outsl
stc
enter
sub
dec
push
push
aaa
pusha
enter
aad
jns
clc
mov
or
adc
cld
cld
scas
lock
inc
out
mov
sbb
xchg
movsl
out
push
push
mov
inc
inc
hlt
mov
push
test
sbb
outsl
add
mull
psubsb
sbb
aam
mov
in
testl
inc
xor
aad
push
xlat
lods
aam
cmp
pop
dec
push
pop
scas
inc
push
seto
xorb
push
push
xor
or
mov
push
lcall
adc
icebp
insb
adc
pushf
aas
push
xchg
xor
xchg
push
push
test
cmpsb
jecxz
xor
js
xor
fbstp
cmc
mov
inc
cmp
sub
dec
stos
repz
mov
movsl
push
mulb
mov
jb
cmp
insb
bound
bound
lret
adc
fisttps
mov
test
inc
cmp
pop
and
and
fs
test
mov
lret
inc
movsb
out
test
cmpsl
mov
sbb
jge
sub
shll
cmp
inc
and
pop
dec
fcmovnb
xlat
addr16
mov
dec
push
jns
outsb
xlat
push
jnp
mov
mov
xor
mov
or
push
out
iret
ds
call
dec
jns
xchg
lea
jge
mov
int3
mov
bts
stc
jo
mov
push
aad
jp
mov
sbb
inc
pop
inc
or
xchg
mov
cmp
pushf
js
mov
dec
or
or
push
mov
push
pushf
gs
and
in
or
xor
sub
mov
mov
lods
inc
adc
cmp
jle
inc
mov
adc
or
lret
imul
lods
push
ret
mov
cmp
loope
push
or
inc
mov
loop
fisttpl
sti
fiaddl
ja
je
adc
add
cmp
cmpsb
mov
dec
ret
inc
lret
loope
mov
mov
pop
jbe
js
jp
push
int3
int
cmp
out
jbe
xlat
mov
lods
or
dec
dec
fwait
loope
fldenv
push
sub
int
pop
dec
daa
ss
push
mov
fsubrl
repz
adc
test
push
inc
pop
and
dec
jno
sub
in
cli
pusha
pushf
cwtl
mov
je
aas
pop
mov
mov
mov
imul
lret
push
into
sub
cmp
insl
cmp
ja
sbb
jle
pop
jns
cmp
mov
cli
mov
movsl
pavgb
lret
les
imul
push
mov
stc
ror
xchg
shlb
ljmp
insb
mov
ffree
fildll
push
mov
push
push
adc
gs
insb
jae
ss
jbe
jno
scas
ja
fs
scas
sub
jne
in
inc
mov
cmp
test
inc
insl
out
jno
sbb
sahf
jnp
sarb
clc
push
inc
pusha
pop
dec
mov
sub
pushf
cmpsb
daa
push
je
in
lret
iret
xchg
scas
push
int
stos
aam
mov
or
decb
jecxz
cmpl
dec
or
push
adc
cmp
enter
repnz
add
pop
mov
jbe
sub
mov
pop
mov
rol
jl
out
push
push
cmpsl
aad
mov
adc
xchg
popa
dec
sub
dec
mov
inc
and
dec
inc
push
mov
xchg
loop
pop
loope
lock
sbb
push
jne
mov
mov
std
push
mov
rclb
jae
test
fsub
jge
shll
push
cmp
cmpsb
sub
or
xor
xchg
rolb
mov
fcmovnb
in
mov
sub
lods
mov
adc
push
push
shlb
cli
aad
jno
xchg
rcll
andl
add
mov
int
sbb
cmpsl
sarb
loop
enter
jmp
inc
xor
mov
mov
popf
int3
pop
sbb
test
push
std
cmp
xor
sub
js
sub
add
cmc
mov
out
sbb
pop
fdivrs
out
ret
mov
jp
add
je
sbb
cmp
xor
xchg
mov
rorb
cmp
push
cld
les
enter
insl
je
add
fcoml
adc
push
and
enter
pop
lcall
pop
nop
cs
addl
cltd
fadd
dec
or
mov
out
bound
pop
ss
jae
into
pop
rorl
leave
sub
es
xor
fcoml
xchg
add
insl
add
loope
mov
lret
jg
cwtl
cmpsl
outsb
jmp
popa
push
cmp
mov
into
push
dec
sub
hlt
aaa
sarl
aam
jno
std
sub
mov
mov
out
lds
aaa
dec
fwait
lret
cmp
push
pop
js
xchg
mov
pop
mov
push
dec
xorb
cmp
pop
xchg
jne
jne
adc
sti
stc
icebp
lcall
sbb
xchg
xlat
push
icebp
stos
push
push
incl
insl
adc
inc
lea
repz
sub
inc
inc
loop
sbb
imul
test
push
fsubl
inc
rcrb
xorl
add
add
xchg
and
scas
xchg
mov
cmc
cmp
cmp
mov
jbe
lods
mov
pop
outsb
test
idiv
in
clc
xchg
cld
test
scas
sbb
test
pop
sub
jl
push
adc
mov
push
pop
int
nop
dec
xlat
sub
daa
ja
andl
push
fstl
in
fldl
sub
adc
inc
add
scas
push
shlb
scas
dec
in
lds
jo
iret
adc
adc
ret
and
pop
inc
popf
test
xor
mov
jg
push
out
ror
cltd
cmp
mov
xchg
push
dec
fisubl
repnz
lods
cmpsl
sarl
lods
ret
push
sub
mov
add
fsts
enter
jp
and
cwtl
adc
inc
mov
and
inc
or
mov
aam
dec
addl
xlat
jo
mov
sbb
add
iret
push
movsl
xor
arpl
jp
cmpl
insb
adc
lret
mov
mov
or
sbb
mov
mov
jnp,pt
es
test
mov
in
push
fwait
repnz
imul
inc
xchg
mov
adc
jg
outsl
mov
jne
pmulhuw
rclb
aam
cli
adc
sub
sbb
sub
add
jmp
xor
sub
push
fimuls
movsl
inc
stos
push
stos
fcmovnb
mov
mov
insb
lods
xchg
ds
adc
mov
pop
xchg
mulb
mov
dec
push
pusha
push
cld
testl
bound
pop
or
fnsetpm(287
adc
jns
mov
mov
fcmove
cli
add
sub
ret
leave
adc
cmp
fistl
dec
xchg
push
scas
jo
pop
dec
pop
out
mov
inc
mov
mov
cmpsl
bound
fs
xor
js
icebp
xchg
ja
popf
mov
shll
xor
repnz
sub
add
pop
cmp
lcall
cltd
aad
push
xchg
jbe
dec
cli
mov
test
mov
and
inc
lahf
cmp
jecxz
in
xlat
jnp
call
data16
sub
pop
das
push
pop
in
paddusb
iret
jb
enter
sbb
dec
xchg
xor
lahf
mov
mulb
dec
cmp
push
xchg
push
imul
xchg
sbb
adcb
aas
xor
test
out
inc
add
adc
or
dec
or
mov
mov
testb
inc
pop
pop
mov
inc
or
in
fstpt
in
adc
and
push
cmp
add
adcl
arpl
outsl
int3
pushf
sub
int3
xchg
sub
ds
aad
cmp
test
xlat
and
or
and
cmp
arpl
data16
repnz
pushf
push
movsb
jmp
mov
test
jle
mov
mov
sbb
fdivs
and
stc
leave
mov
sbb
outsl
cld
mov
xchg
jae
orl
out
xor
inc
push
cli
or
or
addr16
es
aam
inc
jg
loope
cmpsl
sbb
or
sub
push
sbb
jecxz
inc
and
pop
lcall
jmp
gs
inc
cmp
sub
mov
inc
xor
pop
jp
stc
ficomps
cmp
sbb
negl
nop
stc
pop
movsb
cmpsb
pop
movb
adc
add
mov
fcmovnbe
lcall
scas
xor
adc
filds
inc
mov
mov
cmpsl
pushf
repz
scas
flds
and
lahf
movsl
dec
scas
imul
fucom
cmp
std
lcall
dec
mov
and
fdivrl
aas
jne
push
jae
test
cmp
inc
ret
sbb
lea
mov
in
mov
in
xlat
xor
pop
inc
out
inc
insl
mov
pop
punpcklbw
je
push
scas
and
or
daa
add
adc
leave
inc
cwtl
xor
icebp
addr16
inc
test
gs
mov
mov
push
jge
aad
scas
call
out
fdiv
std
aam
test
rorl
jmp
and
dec
insb
adc
repnz
mov
insb
push
and
outsb
icebp
xchg
dec
push
lods
mov
or
add
pop
mov
pop
pop
jp
cmpsl
dec
cmp
cmpsb
cmovne
daa
shl
xchg
mov
cmp
pop
fs
mov
jle
sub
jmp
xor
arpl
mov
mov
ljmp
adc
adc
adc
imul
out
shll
dec
jno
mov
pop
inc
adc
loope
ret
imul
gs
ss
stos
imul
js
pop
dec
add
sbb
or
mov
outsb
or
sbb
push
insb
out
int3
lret
cmp
out
outsl
mov
outsb
sbb
adc
and
ja
jmp
sub
sub
add
mov
inc
stc
mov
xchg
js
cmpsl
clc
sti
scas
push
push
out
les
inc
push
sub
xchg
fucomi
pop
xor
fsts
lods
in
fcomps
mov
dec
outsl
pop
int
hlt
inc
jmp
push
sbb
jns
imul
xchg
mov
fincstp
aaa
test
cmp
cmp
mov
xor
xor
in
adc
adc
cmp
pshufw
int3
lahf
int3
lea
jno
cmpsl
test
cmp
insl
add
jmp
add
jb
adc
jne
jge
xchg
int
das
xchg
add
es
lock
mov
fsts
cmp
shr
sub
adc
test
jbe
mov
in
mov
jg
inc
add
sbb
rorb
in
jl
filds
push
pop
jbe
pop
orb
fildll
pop
aas
lds
mov
pop
push
call
scas
out
pop
frstor
push
lahf
test
mov
dec
ljmp
mov
iret
adc
repz
add
filds
xchg
jae
mov
adc
lock
and
and
mov
test
aas
pop
das
call
ret
jg
xchg
js
push
imul
pop
iret
xchg
out
mov
push
xchg
xchg
jecxz
call
or
jmp
mov
push
xor
mov
test
sbb
jp
stos
add
lcall
out
cmp
dec
pop
std
or
dec
adc
sub
push
jp
flds
cmp
nop
stc
mov
xor
adc
adc
clc
mov
mov
into
inc
stos
test
dec
ret
rcrl
enter
cmc
int3
sub
jbe
pushf
pop
add
iret
xchg
test
mov
jo
cmp
add
popf
cmp
stos
leave
inc
jle
adc
lds
pop
and
push
sarb
iret
bound
or
xor
daa
adc
test
sbb
sbb
inc
je
lcall
sub
cmp
in
xchg
jg
sbb
push
icebp
pop
xchg
ret
lds
loop
mov
pop
pop
adc
sub
mov
pop
cmpsb
mov
ds
decb
adc
mov
out
or
outsl
cwtl
adc
add
rolb
sbb
sub
adc
imul
inc
inc
and
pop
flds
cmp
ret
leave
inc
jb
pop
paddusw
pop
xchg
aaa
sarl
aas
cltd
or
addr16
xor
sbb
imul
xor
cmp
sub
dec
xchg
int3
fstp
aaa
leave
inc
fists
sbbl
aas
sti
movsb
aaa
sahf
push
push
adc
jnp
dec
pop
add
push
cltd
aaa
das
cmp
ds
pop
rcrb
aad
cltd
xlat
testl
and
std
sub
push
add
sbb
dec
adc
outsl
pop
and
pop
shrb
xchg
pop
xlat
pop
and
jmp
push
dec
aaa
psllw
mov
jge
or
mov
push
mov
mov
dec
outsb
cld
les
sbb
test
leave
test
lea
enter
mov
aaa
add
call
popf
sbb
dec
pop
ja
add
jmp
jecxz
adc
mov
jne
loopne
and
and
mov
pushf
adc
leave
shlb
pop
test
popa
push
add
cmp
rcll
mov
insb
push
xor
int3
mov
inc
xchg
push
dec
adc
loop
lods
mov
repz
and
fwait
jmp
inc
rclb
clc
sub
mov
pushf
ds
cmp
stos
mov
daa
pop
neg
add
leave
cltd
xchg
cmp
xor
mov
sbb
sbb
jecxz
mov
scas
xchg
push
or
loopne
inc
jns
and
fs
je
jmp
jg
out
pop
ret
fwait
into
mov
xchg
pop
ja
das
ret
adc
lea
fs
jb
iret
bswap
lahf
sbb
xor
mov
mov
das
js
xor
shl
loopne
sbb
cmp
lds
inc
jecxz
test
add
repz
pop
shll
aad
cli
inc
jne
pop
sub
dec
adc
in
call
lods
lret
ds
movsb
fdivrl
test
mov
int3
out
stc
xchg
mov
orb
out
mov
sbb
adc
add
xchg
sahf
and
cmp
cmp
lods
je
fsubrs
into
push
movsb
or
push
adc
jb
ror
sbb
lret
push
ljmp
ret
cmp
mov
aas
cwtl
dec
scas
sub
int3
xchg
xchg
cld
sbb
pop
mov
push
int
mov
add
sub
and
jmp
ljmp
ficompl
and
add
push
daa
dec
stc
adc
xor
insl
push
mov
call
xor
lcall
loopne
popf
or
push
fcoms
and
or
jno
dec
pop
mov
loopne
mov
mov
mov
xor
imul
insb
add
fs
iret
mov
inc
movsl
pop
xchg
aad
or
jle
jg
loop
mov
adc
push
popf
add
andl
scas
xor
jle
or
push
inc
lods
sbb
dec
popa
dec
cltd
mov
dec
inc
imul
jbe
cwtl
cmp
mov
xchg
lods
dec
xor
mov
mov
mov
adc
outsl
cmp
mov
cmpsb
addl
xchg
enter
cltd
jp
inc
push
shlb
ss
test
jbe
je
imul
cs
dec
out
xchg
mov
cltd
sbb
lea
popw
pop
sub
adc
add
mov
mov
or
or
pop
das
mov
sahf
push
xor
mov
loopne
mov
add
mov
xchg
lcall
andb
cmp
fldl
fistpl
popf
mov
dec
lret
sbb
mov
jmp
adc
cmpsl
pushf
adc
lds
popf
or
cmpsl
loope
xlat
add
adcb
imul
lcall
outsl
sbb
add
inc
jecxz
shrb
cmc
inc
xchg
inc
mov
mov
adcb
ljmp
adc
push
jg
popa
aad
rorl
scas
jmp
cmp
imul
jbe
inc
adc
fcmovne
xchg
xchg
pop
or
sarl
sbb
addb
repnz
or
nop
or
cltd
nop
andl
mov
pusha
ljmp
xor
push
mov
in
push
mov
mov
fstp
inc
sbb
pop
ret
in
movsb
push
in
ret
cli
gs
or
sbb
jle
mov
pop
push
pushl
outsb
pop
aas
lods
inc
orb
clc
xchg
push
loopne
sub
pop
inc
adc
xchg
sbb
loope
out
adc
hlt
jle
jmp
fwait
mov
es
jb
dec
pop
std
ljmp
insl
push
stos
pusha
decl
push
movsb
mull
mov
sub
pop
lock
outsl
dec
std
jne
xchg
cmpsb
pmuludq
mov
stos
cmpsb
cmpsb
dec
and
inc
mov
xchg
xchg
jb
insl
mov
cli
xlat
jl
cmp
pusha
lcall
sbb
jb
sbb
test
sbb
shr
lea
push
xor
popf
loope
mov
or
in
dec
xchg
call
sbb
jg
cmpb
xchg
fists
dec
cmp
sahf
push
in
push
and
sahf
mov
push
fisttpll
lret
mov
jmp
xlat
bound
xlat
decl
inc
dec
pop
adc
inc
fwait
rcll
sbb
cmpsl
sbb
outsb
mulb
test
repz
mov
and
adc
popf
xchg
cmp
sub
mov
add
sub
add
int3
mov
stos
adc
jno
xchg
jecxz
jl
push
lcall
dec
sbbb
mulb
mov
je
cld
jl
aam
sarb
sbb
imul
cmpl
int
cli
mov
sub
jle
push
ss
and
or
jge
add
mov
outsb
mov
insb
pop
jmp
or
bound
mov
clc
rcr
ss
jns
sbbl
les
xchg
xchg
jg
xor
pop
out
add
and
sub
ficoms
enter
movsb
pop
add
push
mov
scas
sahf
mov
ret
push
xor
fcmovnbe
out
mov
lods
outsl
and
and
push
sub
dec
outsb
pop
mov
arpl
arpl
hlt
mov
xor
call
jb
inc
or
jbe
adc
sbb
push
lret
and
pushf
lods
arpl
outsb
mov
fisubl
lret
dec
loope
out
sbb
test
pop
jbe
lahf
call
js
sbb
sbb
or
fldl
loope
leave
jns
stos
cs
fdivs
aaa
sbbb
or
lock
data16
imul
out
call
and
cmpsl
shlb
std
sti
cld
aad
dec
jb
xchg
int3
call
neg
rorb
cwtl
cltd
shlb
mov
xchg
lock
mov
sti
push
mov
gs
loopne
insb
test
mov
xor
push
mov
mov
pop
stc
sub
dec
adcb
inc
testl
xchg
sbb
mov
das
enter
add
cmc
out
lods
aaa
ret
inc
push
fimull
pop
pop
and
scas
lcall
movsb
adc
int
das
dec
mov
dec
push
mov
stos
gs
repnz
mov
xor
fnstcw
ds
int3
stos
sbb
mov
mov
sub
mov
mov
les
aas
flds
leave
or
shrl
das
cli
sahf
divb
aam
mov
sbb
scas
je
sbb
inc
faddl
sbb
imul
sub
iret
insb
cmp
int
adc
push
cmp
inc
les
mov
nop
pop
jne
jmp
xchg
add
cwtl
fildl
pop
xchg
sub
hlt
mov
std
jns
ja
mov
cmp
mov
int
sbb
les
mov
in
adc
or
fimull
jo
leave
sub
mov
add
jmp
in
adc
push
inc
rolb
pop
add
addr16
sbb
imul
dec
dec
cmc
inc
pop
cmc
dec
lock
or
mov
outsb
movsl
in
push
nop
pop
pop
loope
mov
jmp
and
sub
pop
xchg
fwait
pop
aam
imul
in
inc
xorb
jnp
pop
adc
rorl
xor
jnp
pop
xlat
pop
int3
and
mov
ljmp
pop
decb
cmp
mov
cmp
mov
lds
in
movsb
pop
mov
cmp
xchg
imul
cmp
arpl
mov
or
jmp
repz
lret
and
insl
mov
cmpsb
rsqrtps
inc
cmp
dec
lcall
and
or
push
mov
xor
push
lods
andl
xor
xor
sbb
arpl
clc
jecxz
mov
ds
and
cli
fstps
in
cs
js
adc
aaa
push
data16
jmp
testb
cli
jb
leave
mov
mov
xchg
sbb
push
je
pop
mov
jecxz
push
jl
pop
sti
push
xchg
jnp
mov
push
ss
dec
lahf
call
jo
cmp
insl
aaa
add
les
mov
sbb
xor
lods
or
call
fdivl
xchg
mov
movsb
in
cli
imul
sub
out
adc
cmp
mov
mov
cmpsl
jmp
addr16
negb
add
dec
fisttpl
xchg
shl
xor
cli
and
test
dec
in
aas
das
je
test
mov
rolb
stos
sub
and
sub
in
bound
push
xchg
inc
inc
addr16
ss
sub
or
repz
stos
mov
es
leave
out
ja
mov
daa
sbb
pushf
mov
mov
pop
pop
out
ja
in
addr16
js
sbb
xor
mul
bnd
xor
ja
xchg
sub
or
mov
fstps
inc
dec
ret
jo
jo
jae
loope
pop
xchg
ret
cmp
jl
pop
mov
pop
idivl
loop
jg
dec
pop
jb
test
jge
stos
mov
push
pop
push
add
popa
in
addr16
jns
ljmp
in
mov
imul
sbb
sub
push
jnp
mov
add
in
or
out
jbe
jns
fs
xor
push
dec
movsl
mov
or
jne
or
xor
sbb
sbb
out
jne
mov
test
jbe
push
sbb
rcll
dec
cmp
xchg
lcall
adc
aad
in
jno
lods
and
and
xchg
sbb
adc
cmp
cmp
sub
fisubs
insb
adc
cli
push
mov
pushf
xor
or
int
pop
dec
test
leave
or
add
jle
dec
xchg
popf
pop
sbb
xor
add
and
cmp
sarl
clc
pop
dec
fs
jnp
mov
clc
pop
out
dec
fs
sbb
xor
jno
or
dec
mov
inc
sub
call
loopne
xchg
push
mov
imul
cwtl
push
push
test
test
test
adc
push
popa
mov
jmp
add
inc
test
inc
subl
fiaddl
cmp
mov
jmp
or
into
and
fnstsw
jl
cmp
cli
dec
scas
test
push
jecxz
xchg
sti
sbb
in
cltd
nop
rclb
call
sub
jnp
movsl
add
sqrtps
dec
push
arpl
adc
xor
xor
aas
or
mov
sub
insb
jbe
popf
lods
pop
xlat
xchg
push
dec
in
cli
imul
cwtl
mov
repnz
lcall
or
aam
and
lock
jg
test
mov
aam
lret
andl
and
sbb
lock
sbb
ss
out
outsb
mov
mov
xor
pop
sub
stc
repnz
jo
lock
repz
lret
cwtl
push
jg
or
mov
pop
xorb
xchg
addr16
dec
or
and
insb
mov
xor
xor
xor
aaa
cmp
int3
xchg
mov
dec
ss
inc
or
in
lahf
jae
and
mov
xchg
stc
pop
lds
cmpsl
pop
adc
sbb
loopne
ret
sub
jno
mov
ret
push
xlat
xlat
or
movsb
jno
sbbl
jle
adc
xchg
and
in
dec
and
mov
popf
in
ss
inc
cli
sub
dec
inc
fs
pop
lret
cmp
dec
dec
mov
jb
fisttps
rorb
xor
in
jbe
mov
jne
push
punpckhbw
popf
or
inc
sbb
sbb
mov
test
add
clc
push
lea
pop
push
push
and
ja
iret
xchg
and
pusha
cmpsb
dec
aaa
inc
mov
sub
or
movsb
add
loop
mov
jns
fsubs
adc
lret
xor
mov
scas
sarl
ds
testl
pop
dec
sub
addr16
and
out
pop
jecxz
imul
dec
push
nop
enter
mov
jl
push
add
leave
mov
adc
mov
aam
lret
adc
je
in
fistps
adc
arpl
mov
in
adc
or
seto
rolb
mov
sbb
mov
jno
pop
gs
add
mov
jno
push
shrb
cltd
push
mov
or
jae
and
fisubs
mov
jle
aad
js
add
cmc
in
fwait
mov
call
fstl
fwait
xor
movsb
mov
lds
insb
dec
xchg
sbb
rclb
dec
pop
pushf
stos
dec
stos
xor
insb
iret
ja
cwtl
movsl
mov
idivb
rcll
push
test
pop
adc
add
stos
enter
mov
leave
divl
ja
es
subl
outsl
pushw
sub
jnp
push
lods
jno
xchg
aas
push
jbe
inc
add
mov
out
and
sbb
dec
pop
mov
orb
cwtl
aam
out
pop
mov
xchg
mov
sbb
fiaddl
fbld
pop
mov
adc
push
mov
bound
xor
and
push
inc
fwait
pusha
and
das
imul
insl
dec
movsb
sarl
push
cmpb
xor
es
mov
cmp
pop
push
inc
call
ja
pop
call
int
movsb
adc
stos
test
jge
arpl
pushl
stc
push
sbb
fidivs
mov
xor
dec
imul
adc
test
movq
fwait
loopne
add
stos
fists
and
and
jbe
xlat
in
cmpsl
adc
outsb
mull
out
movsl
fwait
jg
pop
mov
dec
and
lahf
jne
push
movsl
mov
test
lods
mov
insb
sti
push
inc
push
mov
cmpsl
or
sbb
jne
popa
mov
mov
mov
incb
jg
xor
fsubl
inc
xchg
cmp
cs
push
repz
repnz
pushf
push
pop
pop
cmpsl
pop
mov
sbb
pusha
mov
mov
je
cwtl
lds
mov
cltd
cmc
or
roll
xor
cli
mov
xor
aas
push
mov
test
jbe
cmpb
loope
push
shl
sti
js
push
adc
aam
cmpsl
mov
outsb
xchg
sbb
xor
popa
loop
xchg
mov
and
scas
outsb
cmpsb
or
pusha
jecxz
sbb
fidivs
mov
or
sbb
jl
fistps
outsb
lock
jno
fstp
lret
gs
jno
add
mov
fnstcw
dec
push
or
jp
xchg
adcb
and
test
outsb
mov
fwait
rclb
jo
mov
faddp
inc
mov
jno
je
push
sbb
je
pop
mov
nop
jecxz
rorb
cli
nop
stos
hlt
xor
dec
leave
call
dec
in
mov
pop
pop
ja
mov
push
push
or
aas
in
mov
ljmp
or
mov
fnstsw
dec
fwait
or
rcl
sahf
loope
str
pop
xor
mov
cmp
cmp
xchg
mov
inc
pop
xor
test
xor
bound
movsb
sub
xchg
sub
and
cmp
jle
rorb
add
adc
enter
mov
cli
xor
stos
fists
or
or
bnd
pop
adc
js
lcall
icebp
mov
das
popa
pushf
enter
test
xor
pop
pop
adc
mov
cmc
or
fists
sbb
sbb
or
test
inc
sbb
lds
repnz
test
dec
add
xor
fiadds
mov
lret
nop
dec
js
shlb
adc
xlat
dec
or
lods
xor
jns
decb
lahf
inc
cmp
fcoms
int
pusha
int
mov
in
adc
shlb
stc
cmpsb
push
mov
setg
pop
and
fwait
in
adc
out
mov
sahf
hlt
aad
sbb
and
ljmp
mov
in
adc
and
cmp
push
jle
xorl
sahf
fmull
sbb
repz
adc
cmp
dec
jbe
xor
dec
add
and
dec
ss
in
movsl
inc
push
ss
and
jmp
xchg
jno
xor
adc
jle
mov
cmpsb
leave
fdivs
add
mov
fstpl
sbb
sbb
and
mov
cwtl
popa
ja
lea
sub
mov
xchg
cltd
xor
loope
add
lret
or
enter
jecxz
fcmovu
shrb
xchg
leave
add
in
cmp
add
fildll
insb
test
es
in
xor
cmp
mov
xor
push
rcl
das
mov
mov
pop
cmp
jo
add
mov
pop
add
cmp
bound
pop
popa
pop
mov
loope
jb
outsl
test
outsl
jbe
jnp
cs
repnz
dec
push
je
adc
ficompl
push
ret
push
and
xor
fcoml
pop
fbld
pusha
fdivr
gs
jg
adc
and
mov
addr16
adc
adc
ds
jnp
movsl
lods
mov
lea
movsb
sub
in
adc
std
xor
mov
mov
mov
xchg
pop
int
pop
fimuls
jns
mov
in
adc
loope
pop
mov
insb
push
repz
in
inc
mov
cmp
lret
and
inc
jmp
mov
and
xchg
add
and
jo
lcall
mov
xor
mov
jmp
arpl
sub
loop
fnsave
std
jp
or
popf
sub
add
stos
std
std
sar
std
cmpsb
push
cli
dec
cmp
dec
cmp
push
mov
adc
xor
jns
add
out
adc
xchg
fmul
mov
mov
in
pusha
and
cmp
dec
addr16
push
cmp
mov
test
psrld
jae
aad
inc
or
push
pop
pop
pop
inc
dec
addr16
xor
fnstsw
jl
dec
cmp
adc
pop
lock
mov
lods
ss
popf
add
jmp
or
fcoms
in
out
es
push
sbb
arpl
push
push
movsl
jae
aam
rclb
mov
inc
out
iret
outsb
imul
out
add
lock
jmp
lret
sub
or
test
adc
loop
xchg
fwait
inc
jle
jns
outsb
mov
mov
lret
shrl
jl
mov
xor
jb
fbld
inc
xor
imul
or
sub
aam
test
in
push
test
dec
sti
and
js
mov
xor
pop
lahf
mov
xchg
out
int
inc
or
js
pop
mov
test
mov
jb
push
fcmovne
test
pop
inc
fst
push
stos
push
lahf
stc
int
xor
inc
mov
stos
call
mov
popa
dec
mov
dec
fs
jo
xchg
int
sub
xchg
inc
dec
pop
sbb
or
add
and
xchg
mov
sub
sub
cmp
arpl
sahf
jae
mov
mov
jae
fistl
push
hlt
js
jecxz
stos
popf
mov
xchg
sub
pop
aas
adc
in
xor
cmp
mov
in
sbb
icebp
popf
dec
push
js
nop
xchg
lds
rol
mov
add
aam
adc
int3
cs
push
loope
pop
aas
push
data16
ljmp
add
sub
mov
je
adc
dec
jge
pop
repnz
fnstcw
sub
mov
sbb
jmp
loope
xchg
adc
jp
xor
push
jmp
xor
shlb
adc
nop
and
fcoml
push
ja
ds
movsl
inc
push
iret
subl
mulb
lock
dec
cld
mov
enter
stos
pop
insb
addl
inc
mov
mov
sbb
sub
jmp
lahf
push
mov
pop
addr16
popf
sub
xchg
in
mov
fmul
mov
lea
pushf
and
fimuls
nop
push
nop
cwtl
gs
lcall
test
or
xchg
lret
mov
outsb
jg
pop
imul
mov
movsl
and
push
push
adc
dec
or
fst
and
outsb
cmp
mov
add
dec
mov
stos
dec
sti
aaa
ja
jne
cli
xor
push
imul
arpl
bound
cltd
out
test
adc
mov
xor
jmp
std
or
or
shrb
adc
or
std
mov
and
push
push
xchg
dec
jge
out
sbb
or
pop
cmp
add
add
and
popa
mov
push
mov
aas
test
xorl
inc
push
mov
outsl
mov
xor
in
adc
cs
neg
nop
xor
mov
xchg
mul
call
fs
out
mov
insb
fdivrl
sub
sub
ret
jl
lret
mov
mov
cmc
sbb
icebp
inc
repz
imul
or
inc
test
jo
loopne
xor
lcall
pop
push
and
in
or
not
xchg
mov
mov
dec
mov
iret
mov
cmpsl
out
jae
xor
push
sub
mov
mov
loop
dec
ret
into
idivb
js
fcomps
sbb
out
call
lcall
sbb
into
stos
ret
pop
mov
cli
push
pop
inc
mov
fs
fists
fsubl
cs
jne
cmp
inc
jmp
adc
fwait
pushf
mov
icebp
pop
pop
push
mov
add
fildl
sub
add
push
xchg
cmp
ret
mov
aad
or
ljmp
xor
mov
push
repnz
stc
push
push
ficoms
popa
cmp
out
mov
inc
insl
jae
adc
push
in
dec
dec
mov
movsl
int3
dec
xor
add
fcmovb
cld
imul
push
and
xlat
lahf
lock
push
cmp
flds
add
cli
mov
pop
push
add
aas
mov
test
jnp
shll
bound
outsl
sbb
cmc
cltd
ja
jo
sarl
or
mov
cmp
sbb
std
mov
imul
sbb
jbe
call
or
mov
xor
pop
lret
push
cmp
rorl
jg
in
es
cmpps
dec
mov
xchg
mov
pop
adc
push
shlb
sarl
cmp
mov
scas
mov
xchg
mov
adcl
stc
clc
mov
sbb
cmp
lds
mov
add
pop
jbe
add
or
inc
pop
or
stos
ja
int
pop
aaa
inc
inc
push
xor
xchg
jnp
add
dec
sub
scas
cwtl
sbb
mov
popa
pop
imul
xchg
jg
insb
cmpsb
jo
inc
int
mov
xchg
xchg
pop
pop
xor
pop
xor
or
push
fnstcw
iret
daa
fcomps
mov
jae
mov
fistpll
xor
adc
mov
jnp
dec
xchg
adc
mov
sahf
lcall
lret
pop
fimuls
xorb
push
sbb
frstor
out
scas
mov
loopne
iret
xchg
shl
shll
aas
popf
rep
xchg
push
addr16
inc
and
fistpll
mov
or
insb
xlat
repz
inc
aas
inc
mov
add
movsb
xorb
cwtl
jno
mov
inc
mov
movsl
mov
push
cmp
jno
mov
xor
xchg
push
cli
push
loopne
add
inc
dec
jle
inc
push
mov
xor
push
cli
ss
xchg
inc
sub
dec
fidivl
mov
sbb
loope
test
mov
mov
and
lret
push
out
pop
shrl
sbb
xchg
fimull
insl
fsts
orb
or
cmpsb
into
lock
lock
jecxz
bound
mov
xchg
mov
cwtl
arpl
sarb
or
out
movsb
shrb
insl
cmp
xchg
mov
fiaddl
dec
mov
aad
cmc
inc
inc
fs
iret
popf
sub
and
hlt
cmp
loopne
add
loop
push
lahf
jae
dec
xor
in
add
xor
in
jecxz
xor
int3
test
sti
popa
testb
and
insl
xor
push
arpl
fnsave
adc
and
jle
rorl
adc
push
adc
lret
ret
loopne
pop
cmp
adc
inc
pop
mov
jmp
fadd
fwait
mov
dec
mov
ds
add
ret
cwtl
fstpt
mov
mov
push
dec
jmp
stc
lret
sub
add
js
js
stos
jnp
in
push
mov
fnstsw
stos
dec
dec
loope,pt
leave
jle,pt
mulb
insb
fisubs
divl
aas
jg
push
adc
rep
dec
pop
sub
xor
or
in
jae
ret
dec
out
jecxz
test
cmpsl
movsl
dec
out
and
in
loopne
es
fwait
movsb
in
pop
inc
sub
xchg
pop
jno
out
fs
pop
jo
xchg
icebp
pop
sti
inc
cwtl
fs
popf
push
or
test
and
mov
pop
push
loope
out
lock
icebp
imulb
sahf
pop
sbb
sbb
push
cmp
and
sti
push
in
xlat
cmp
xchg
test
jae
hlt
xchg
cltd
push
pop
lea
mov
in
jp
movsl
pop
aad
push
lahf
cmp
push
leave
in
pop
cmp
pop
mov
adcl
push
addr16
cwtl
sbb
out
pop
lea
stos
mov
out
movsl
inc
iret
or
or
mov
inc
wrmsr
add
jl
pop
cld
and
adc
push
add
repz
ret
and
sbb
dec
lret
jno
lret
je
add
xchg
js
movsl
cwtl
add
in
stos
dec
mov
sbb
mov
stc
sahf
into
jns
loopne
lods
jmp
das
daa
adc
jmp
popf
ret
sub
out
daa
movsl
aam
les
ffree
sbb
lds
dec
sub
mov
push
add
lods
adcb
imul
xchg
jnp
dec
lahf
jb
add
sub
pop
cmp
mov
or
call
lock
and
ret
cmp
add
xor
pushf
addl
addr16
lret
data16
pmullw
jae
lock
mov
adc
aas
and
push
jle
mov
xchg
je
sbb
mov
cltd
cs
pop
in
xchg
xor
stc
dec
sbb
jmp
filds
icebp
adc
xchg
rolb
or
mov
movsl
arpl
inc
loop
fcompl
out
push
into
adc
inc
std
cmp
out
and
cmc
into
leave
stos
or
mov
mov
mov
into
fs
mov
ss
daa
jmp
fcmovne
lods
scas
mul
loop
sub
bound
mov
gs
cld
adc
dec
mov
mov
mov
push
jp
push
arpl
out
and
adc
xor
push
jno
mov
dec
loop
stos
call
inc
ja
stos
inc
jmp
add
mov
mov
aas
cmp
and
ror
mov
adc
mov
in
cltd
fbstp
pop
pop
pusha
cmp
int3
push
iret
daa
cmp
mov
or
push
sub
inc
loopne
inc
out
inc
xchg
push
xchg
dec
mov
repnz
xchg
inc
imul
fnsave
addr16
imul
out
scas
xchg
mov
mov
jg
push
ljmp
xchg
sub
pop
jl
mov
push
je
lahf
mov
jecxz
sub
push
inc
push
dec
lahf
mov
mulb
sub
mov
popa
std
setno
jb
cwtl
stos
cmpsl
ljmp
stc
push
lret
push
cltd
xchg
xchg
mov
pushf
incb
aas
ss
out
test
jb
sub
out
cmp
call
icebp
mov
sub
inc
ret
pop
sbb
into
test
mov
or
lock
push
shlb
xchg
scas
xchg
adc
and
xchg
push
les
push
mov
mov
sbb
xor
mov
inc
or
cmp
movb
pop
je
and
ja
fnstenv
xchg
test
les
lcall
xchg
push
rolb
and
mov
out
into
sbb
xchg
xchg
add
lods
incb
sbb
je
and
decl
dec
jnp
inc
faddl
dec
jbe
sub
test
xchg
and
stc
or
dec
dec
fs
outsl
jmp
imul
mov
dec
addr16
pop
or
pop
int3
push
xlat
sbbl
lods
xchg
daa
and
sti
icebp
into
add
loopne
int
sbb
sub
movsb
fcomps
dec
mov
imul
push
fsubrl
adc
jmp
les
sbb
push
cmp
and
mov
sahf
popa
mov
sbb
andl
shll
add
out
inc
aam
cld
mov
cltd
pusha
fistl
dec
test
mov
inc
stc
ss
push
jae
loope
add
push
fwait
jg
xchg
dec
lock
dec
add
mov
add
sub
lcall
xchg
pop
rolb
stos
mov
mov
ficoml
das
shlb
push
push
pop
lret
inc
mov
xor
sbb
inc
sbb
sub
and
mov
cmp
cmp
mov
jecxz
aaa
lock
dec
lods
adc
stos
inc
push
adc
add
imul
mov
or
or
aam
add
or
xor
xchg
pop
mov
jecxz
test
or
mull
sti
hlt
ret
push
jge
out
stos
sub
pushf
inc
in
aas
sub
mov
les
jae
dec
iret
ja
ret
fiaddl
imul
jle
inc
jnp
xor
fidivl
fimuls
mov
cmp
mov
xor
int
shlb
jp
rclb
sti
xchg
in
pushf
mov
lods
cmp
pop
test
mov
imul
mov
dec
cmpsl
adcl
xchg
shll
mov
cs
sub
imul
jnp
pop
pop
pop
mov
push
push
bound
lods
sub
mov
popf
gs
cmp
jg
daa
jge
es
jb
sub
or
push
mov
sti
jmp
scas
and
call
fs
or
xchg
or
sbb
pop
xor
xchg
jns
push
pop
dec
push
scas
mov
or
push
and
mov
out
out
das
lahf
inc
cmp
mov
push
pushf
jmp
test
mov
xchg
stos
dec
jg
xorl
ficompl
gs
push
lret
mov
stos
clc
aaa
push
aaa
add
int
push
ss
addr16
lcall
sti
mov
xchg
fldt
push
mov
hlt
or
inc
cmpsb
mov
test
cmp
adc
stc
mov
xor
xchg
xor
loope
inc
mov
andl
icebp
fldenv
ja,pn
add
std
lea
ljmp
das
mov
scas
cmpsb
icebp
lock
inc
cmp
hlt
add
dec
xchg
shr
and
sbb
xchg
fdivl
inc
jne
sbb
or
sbb
lods
scas
mov
inc
xor
shr
push
sub
xchg
sbb
inc
fs
das
jno
cmp
xor
or
push
xor
repz
inc
sub
add
fiadds
inc
jno
in
pushfw
int3
test
mov
out
daa
inc
push
inc
sbb
frstor
stc
xchg
xchg
jns
test
sbb
sahf
cmc
shr
scas
out
int
stc
adc
aad
mov
insb
dec
add
jo
dec
mov
pop
das
fldcw
rcr
in
cmp
loope
lods
ret
sar
lea
popf
cmpsb
inc
push
icebp
gs
lret
sahf
pop
inc
mulb
mov
dec
lret
mov
xor
xorl
ret
dec
popf
or
lcall
scas
jecxz
mov
lret
pop
pusha
jle
sub
mov
xchg
mov
sub
xchg
pop
and
pop
movsb
sub
mov
clc
iret
or
aad
outsb
xchg
sbb
jg
out
jecxz
mov
paddq
stc
dec
adc
add
jae
add
mov
mov
cmp
xlat
je
or
out
cltd
ljmp
and
jmp
rcrl
stos
add
pop
outsb
push
movsl
push
jns
or
addr16
mov
enter
jbe
sub
imul
and
loop
fcompl
rorl
sbb
gs
xor
out
or
cld
jo
push
repnz
inc
dec
jae
daa
jno
pop
dec
mov
sti
and
ds
inc
xor
mov
cmp
jecxz
clc
xor
sub
xor
jmp
mov
inc
inc
lds
xchg
negl
clc
rcll
jecxz
orb
jg
mov
dec
gs
cmc
clc
fsubrs
lret
cmpsb
adc
pop
xor
mov
rcrb
jl
icebp
sbb
fldt
add
cmc
cmpl
stos
cs
jb
jae
fwait
hlt
insl
lock
aas
int
div
push
jns
push
adc
cmc
sti
aam
das
xchg
mov
push
lahf
add
xor
pop
push
fiadds
push
popf
jecxz
test
and
cmp
jb
pop
repz
jle
jp
xor
fs
rcll
xchg
pop
mov
sub
adc
flds
dec
rcl
push
shrb
jo
push
daa
mov
sub
lea
push
ss
fstpl
test
arpl
mov
movsl
stc
mov
das
cltd
sub
pop
pushf
dec
mov
mov
xchg
xchg
scas
stos
insl
cmp
xor
mov
sub
int3
sub
jecxz
sub
jbe
cmc
and
test
jo
fildll
neg
iret
xchg
in
mov
push
lock
xlat
ret
mov
adc
xor
loopne
jo
js
outsb
ficomps
adc
push
loop
popf
fildl
pop
or
or
movsl
sbb
sti
shr
jae
shl
mov
ja
lds
mov
xlat
cs
push
sub
maskmovq
imull
inc
xchg
ss
mov
xor
xchg
pop
mov
jbe
sbb
dec
cmp
test
mov
lds
or
rcl
push
jne
xor
pop
daa
sbb
add
int
hlt
insb
add
sbb
dec
jg
mov
xchg
pop
xor
jmp
cltd
in
add
mov
mov
cmpsb
adcl
fisubs
icebp
ds
pop
mov
mov
fsubrs
pop
filds
push
insb
sbb
int
aas
shl
data16
out
pop
sub
lahf
or
mov
sub
sub
mov
shrb
jecxz
sub
push
pop
cmp
cmp
int
leave
push
out
jne
ja
xchg
in
insl
jp
dec
mov
outsb
ljmp
lods
sbb
xor
sub
sub
mov
inc
cmp
notb
add
mov
bound
sbbl
call
out
xchg
js
fs
scas
cwtl
adc
mov
cmp
mov
das
outsl
dec
mov
inc
sbb
negb
jge
cmp
inc
mov
stos
mov
movsb
out
or
or
jecxz
sbb
pop
cs
adc
add
inc
ficompl
fisubrl
mov
testl
push
push
aaa
cmp
bound
scas
arpl
cmp
jge
sub
js
out
icebp
push
sub
ja
aas
add
jl
aam
inc
mov
push
out
sbbb
shll
insb
fildl
enter
decl
or
popl
hlt
xor
pop
mov
or
pop
leave
lds
dec
hlt
cwtl
inc
mov
scas
lcall
mov
pop
aad
xchg
aad
ret
test
add
clc
sbb
outsb
roll
mov
arpl
or
add
nop
cmp
adcl
cmc
inc
stc
pop
adc
adc
push
jno
or
cmc
fwait
inc
movsb
es
mov
cmp
inc
cltd
dec
pop
out
add
cmp
mov
push
pushf
inc
cmc
sub
and
xor
or
rcr
pushf
rcrl
jl
mov
xchg
adc
enter
sahf
push
dec
xor
dec
pop
lcall
sbb
js
mov
in
rclb
inc
imul
and
push
repz
mov
ficompl
arpl
cli
mov
jmp
sarl
mov
pop
cwtl
mov
pushf
scas
dec
cmp
subb
dec
jp
xor
loope
mov
test
pop
inc
inc
movsl
or
pop
rolb
ret
aaa
jle
or
push
rcll
dec
xlat
fs
pop
mov
lret
lahf
mov
push
jne
dec
imul
mov
lods
cmc
sbb
std
mov
in
inc
pushf
push
mov
or
cs
and
jmp
xchg
cmp
sub
inc
mov
add
and
jb
xor
nop
loop
call
jb
xchg
aam
jb
outsl
jle
sbb
adc
adc
fwait
mov
adc
mov
pop
in
push
je
out
scas
lods
mov
ss
insb
fsub
test
mov
mov
inc
mull
aas
and
leave
push
sub
pop
push
movsl
lds
in
xchg
lea
sbb
adc
cwtl
mov
ja
imul
and
pop
jmp
xchg
adc
dec
pop
inc
aas
testl
test
add
jl
je
jae
fwait
xchg
cli
cmp
inc
inc
iret
add
insl
add
test
in
aas
lret
push
jne
and
rcl
xchg
and
sarb
jmp
enter
push
inc
jle
pop
in
mov
adc
sbb
arpl
sti
popa
clc
jg
inc
inc
hlt
insl
lahf
and
pop
shrb
bound
fmull
cmpsb
dec
lret
fstpl
or
mov
ficoms
incb
ret
inc
add
xor
dec
fisttps
cmp
jae
mov
test
push
dec
mov
fdivrl
stos
adc
inc
shrl
adc
xchg
shr
ret
clc
cmp
out
adc
loop
or
lahf
int
mov
xlat
mov
hlt
aas
call
test
mov
jne
loopne
inc
aam
std
cmc
mov
test
call
inc
cltd
lret
mov
adc
jmp
cmp
cmp
jg
sbb
add
jns
leave
mov
int3
outsb
pop
sti
pop
jne
repz
inc
lret
test
leave
mov
sub
jnp
dec
enter
push
ja
jns
jno
mov
lret
subl
jge
xchg
pusha
pop
outsl
adc
out
xor
pop
lea
xchg
cltd
pop
cmp
push
hlt
cmp
inc
fucomi
sbb
test
jno
mov
into
add
into
push
cld
stc
pop
dec
push
jno
mov
pushf
out
mov
nop
push
out
int3
jecxz
hlt
inc
insb
imul
sub
mov
test
daa
pop
add
cmp
adc
pop
and
bound
mov
orl
cli
push
or
push
insb
xlat
sbb
cmp
in
sbb
xor
or
and
push
jne
fisubrl
fs
scas
loop
js
mov
and
sub
aam
das
mov
lods
xchg
pop
jl
xor
sbb
jae
jl
mov
adc
pushf
mov
xchg
sbb
xchg
xor
iret
pop
adc
es
ret
mov
and
inc
lcall
rorl
dec
std
push
outsb
xchg
dec
mov
mov
into
outsb
dec
mov
or
mov
test
pop
sbb
xchg
popf
mov
das
xor
shlb
or
jmp
ret
push
jnp
popf
pop
adc
mov
add
lahf
jo
mov
out
cmc
in
push
mov
test
cltd
jmp
xor
aam
shll
jle
lret
mov
in
pop
cld
mov
leave
out
stos
dec
jl
test
inc
ret
cli
icebp
jle
inc
push
add
adc
aaa
leave
xor
adc
pop
test
shrb
push
insl
xchg
mov
push
insb
in
mov
add
sbb
cmpsb
cmp
mov
clc
sbb
mov
mov
cli
xchg
testl
icebp
mov
jns
mov
mov
push
dec
xor
test
fstps
cmp
jne
rol
call
pusha
out
es
mov
leave
jmp
into
ja
or
mov
xchg
fucomp
repnz
jl
mov
enter
dec
cs
in
mov
sbb
jne
jae
lds
leave
dec
pop
or
test
imul
test
imul
xor
mov
lret
iret
push
mov
int
loopne
outsb
ficompl
cld
and
cs
notl
sub
add
sub
ret
aas
ss
int
ja
cld
xor
in
bswap
fs
push
fwait
fwait
sbb
gs
lahf
mul
lcall
imul
adc
out
sub
jg
sub
fbld
mov
or
push
cmp
scas
rcll
inc
mov
enter
xchg
ret
mov
dec
mov
mov
mov
pop
pop
adcl
or
xor
mov
lret
mov
daa
mov
cs
loopne
xchg
inc
xchg
fisttpll
mov
cmpsl
out
aad
jecxz
jmp
add
movsl
lcall
test
xchg
inc
mov
popf
mov
in
jecxz
xor
rcl
inc
push
shll
sbb
pusha
adc
dec
xor
cmp
push
frstor
aas
std
xor
mov
push
pop
mov
sub
jb
pop
mov
js
inc
mov
icebp
fistpl
movsl
movsl
push
in
mov
adc
mov
jo
sub
mov
inc
pop
in
mov
popf
add
fists
cmp
xor
hlt
std
stc
xchg
insb
dec
and
imul
lea
in
inc
ret
fsts
push
mov
sbb
lds
xchg
std
stos
imul
cs
xor
mov
das
dec
in
pop
mov
jecxz
inc
popf
sbb
and
mov
cmpsb
outsl
movsl
pop
inc
xchg
add
xchg
and
enter
lods
test
xchg
lcall
push
out
sbb
xchg
movsb
popf
shrb
adc
inc
sahf
push
stc
mov
movsl
fs
frstor
mov
aas
mov
arpl
and
test
aas
popa
pushf
xor
fs
dec
leave
sbb
mov
aad
sbb
push
imul
jge
mov
into
jnp
mov
hlt
push
in
add
insb
scas
pop
mov
lea
and
sbb
dec
arpl
movsb
loopne
sub
out
and
and
sbb
popf
pop
or
mov
addr16
dec
scas
or
lea
test
dec
jns
ret
fisttpl
push
gs
push
lret
test
sbb
pop
mov
mov
shll
xchg
cmp
out
sbbb
pop
xchg
inc
dec
movsl
mov
xchg
into
les
mov
test
out
in
clc
xlat
push
paddd
sarl
pop
test
js
mov
ss
mov
fsubr
daa
stos
or
mov
sahf
roll
and
or
jo
pop
push
mov
repnz
push
xor
dec
js
scas
jecxz
push
mov
psadbw
cmp
andl
xchg
cwtl
jae
roll
pop
sub
and
pop
and
or
addr16
shlw
and
sahf
inc
push
test
in
cmp
mov
and
fnstsw
shlb
aad
rorl
push
xchg
outsb
and
loope
hlt
cwtl
imul
pop
loop
mov
scas
sub
cld
inc
in
fdivl
das
cwtl
or
lret
and
and
mov
add
mov
lods
jbe
stos
sahf
push
dec
mov
add
fcompl
movsl
push
adc
adc
pop
scas
adc
mov
pushf
sbb
xor
add
in
adc
and
cmp
pop
jne
out
lea
fisttpl
fs
and
mov
stc
pop
orl
inc
into
push
shrb
rorl
and
and
and
mov
or
mov
stc
sbb
adc
pop
xor
insl
mov
loopne
jno
fstpt
notb
mov
inc
cmpsl
lret
out
sub
jl
push
xor
sub
fs
lahf
outsb
mov
jge
loope
cmp
push
repnz
and
test
cmp
cld
cltd
sbb
xchg
or
les
xor
xchg
sarb
push
ss
dec
push
jne
add
mov
jg
fs
fldenv
dec
inc
mov
push
jb
lock
sub
cmpsb
mov
aas
mov
fldt
popa
imul
out
push
sbb
pop
addb
push
sub
stos
fisubl
mov
insl
pop
popa
mov
dec
test
iret
jge
mov
mov
push
mov
clc
pusha
bound
inc
mov
sub
divb
xchg
popa
add
mov
mov
incl
and
push
push
cmpsb
mov
push
jnp
test
imul
std
bound
jp
nop
ret
jle
orl
out
lcall
aaa
mov
sbb
sbb
add
mov
dec
aam
or
out
and
jb
sub
enter
jge
and
in
push
add
out
xchg
xor
scas
mov
push
add
mov
dec
push
sub
repz
std
jge
jb
ds
stos
push
jle
mov
sub
jge
into
or
out
incl
sbb
xchg
pop
mov
iret
jb
js
fistpll
addr16
mov
cmp
xchg
outsl
sub
mov
cmpsl
dec
adc
mov
adc
ds
pop
sti
dec
and
ds
mov
fnstcw
xorb
test
insb
lea
aaa
loope
pop
inc
xchg
add
addb
lcall
cltd
orb
ljmp
sbb
jb
inc
xorb
jg
inc
dec
xchg
out
mov
cmp
test
sbb
mov
fsubrs
cltd
test
pop
dec
out
popa
movb
jl
pop
sti
cmpsl
cmp
xchg
jae
into
or
mov
push
xor
xor
lcall
add
cwtl
mov
fwait
or
jae
inc
pop
lock
pop
iret
ss
or
and
xchg
push
jle
lahf
test
pop
cmpsl
in
test
sbb
sbb
push
xchg
add
inc
xor
ja
fimull
inc
dec
xor
sub
data16
out
inc
xchg
cmc
cmp
and
daa
pop
scas
xorl
add
dec
cs
enter
add
test
rcrl
cmc
mov
lret
lret
jle
aam
insl
dec
mov
insl
jmp
lret
or
hlt
xor
cmpsb
int3
mov
jl
mov
pop
pop
sub
jno
add
cmp
xorb
xchg
xchg
cmc
push
test
xlat
js
nop
cwtl
stos
aad
add
addr16
mov
dec
mov
js
sub
mov
jecxz
cmp
int3
xor
mov
jg
push
test
add
cltd
rcrb
cmp
shll
add
push
sar
call
sbb
ss
dec
cmp
mov
ret
pop
push
je
mov
jecxz
add
les
jg
int
std
jmp
adc
in
sub
push
fistpl
push
cmp
ss
inc
xchg
cmpsb
adc
sub
xchg
jg
movsl
mov
sbb
test
sbb
mov
push
call
bound
mov
jecxz
xor
movsb
xor
push
lcall
shrl
ss
adcb
add
insb
cmp
push
out
in
mov
xor
sub
and
jno
je
call
nop
imul
and
jne
mov
lret
es
xor
int3
jno
inc
push
pop
daa
mov
adc
mov
or
mov
enter
sbb
fwait
xchg
rorl
cs
imul
neg
js
inc
xchg
sub
aad
loope
mov
iret
fiaddl
arpl
mov
mov
imul
js
mov
add
push
test
adc
xchg
mov
movsl
mov
fcomip
je
jno
cld
xchg
fwait
ret
arpl
mov
scas
addr16
test
stos
sbb
mov
inc
mov
and
out
add
sbb
into
dec
mov
rcll
xchg
push
push
push
mov
cmc
jne
test
add
mov
in
jno
lods
mov
fmull
cmp
add
ret
jo
es
adc
test
push
imul
sbb
sbb
xor
xchg
call
mov
sahf
inc
cwtl
adc
mov
cmpsl
cmp
repz
and
xchg
std
ret
call
dec
push
addr16
ret
add
xchg
lock
aad
sbb
stos
and
lcall
sti
sub
jle
jns
rsqrtps
jnp
jp
lcall
jmp
test
sbb
inc
push
xchg
adc
data16
push
add
int3
ljmp
or
cmp
rcrb
sub
shrl
insl
call
nop
and
xor
outsb
mov
jge
or
shl
mov
add
cmp
mov
gs
push
rcrl
and
rcrb
inc
stc
and
les
mov
add
push
jg
cli
or
jnp
imul
cwtl
in
pop
clc
or
sbb
lods
es
jl
insb
repnz
push
adc
jmp
push
push
sub
sbb
jmp
shrb
xor
arpl
dec
aaa
jmp
mov
std
or
jl
fbld
pushf
sub
jmp
daa
mov
sbb
ss
adc
jle
ffreep
and
xchg
ds
mov
dec
sarb
mov
mov
xor
adc
xchg
sub
imul
mov
cmp
push
lea
mov
mov
and
xor
xchg
fimuls
nop
inc
cmp
fiaddl
cwtl
and
xchg
fisubrl
push
in
into
daa
mov
lahf
fmulp
mov
xor
je
or
xchg
data16
fisttpl
clc
rcll
loop
add
add
sub
cmovp
mov
rcll
fnstcw
jbe
push
inc
ret
inc
dec
dec
push
xchg
cltd
int
adcl
adc
cli
mov
int3
cmpsb
iret
or
adc
adc
mov
add
andl
inc
mov
dec
push
adc
mov
add
mov
pusha
jg
rcll
enter
inc
and
das
add
movsb
daa
jb
lret
mov
dec
sub
mov
or
sub
cmp
clc
xor
adc
push
popa
aas
xor
out
xchg
lea
daa
outsl
inc
fadd
clc
lret
int
xchg
insb
sbb
inc
movsl
sysexit
jg
clc
hlt
xor
enter
push
fisubrl
cmp
lcall
xchg
shlb
cmp
sarl
icebp
inc
inc
adc
pop
sub
popa
pop
adc
sub
cli
xor
fdivrp
outsl
and
mov
push
xchg
inc
fistl
xorl
inc
add
lcall
mov
aam
fs
pop
negl
mov
mov
push
jb,pt
das
xor
dec
shll
loopne
in
jmp
push
daa
ja
out
outsb
push
inc
mov
sahf
stos
jne
or
inc
ret
fsts
jmp
push
adc
mov
xchg
out
jecxz
loop
test
pop
jno
call
or
jno
ret
push
sub
inc
adc
fbld
imul
xchg
mov
xor
xorl
adc
fisttpl
jo
mov
xchg
mov
cmp
scas
pop
fs
mov
push
cmp
pop
sub
inc
and
repz
aas
pop
mov
xchg
xchg
and
jb
sbb
shll
loop
push
rcrl
std
lods
sub
lret
das
aam
sti
loop
pusha
inc
sub
bound
cmp
xlat
movsb
out
mov
insb
push
insb
test
shll
ficoml
ljmp
sub
enter
push
and
inc
movsb
add
and
adc
out
orb
adc
and
mov
sub
cmp
ficomps
mov
dec
adc
pusha
xchg
dec
sbb
inc
cmpsb
mov
mov
xchg
add
xchg
into
mov
out
mov
pop
ja
pushf
aad
push
mov
xchg
aas
mov
addr16
shl
push
add
test
into
fdiv
insl
adc
outsb
imul
movl
pop
dec
lods
sbb
and
sbb
xchg
mov
inc
jnp
stos
stos
psubusb
jmp
add
cld
rcll
and
mov
adc
ja
xchg
iret
movsb
adc
jmp
lahf
fistpl
mov
leave
adc
fildll
mov
or
push
adcb
push
inc
jecxz
pop
cmc
or
xor
mov
mov
jg
test
xor
aam
inc
mov
add
stos
nop
inc
jne
into
pop
sub
sbb
sub
adc
out
push
sub
repz
jmp
and
imul
out
shrl
pop
or
cld
jl
lods
cld
sbb
and
call
nop
gs
repnz
push
sbb
mov
ljmp
sbb
dec
add
bound
insb
inc
out
xor
insl
and
inc
imul
sbbl
in
xor
outsb
repz
xchg
fs
push
push
call
mov
ret
inc
insl
pushf
sbb
movsb
xchg
and
andl
push
and
xor
les
clc
addr16
daa
enter
mull
inc
mov
xchg
or
pop
inc
mov
js
aaa
cs
imul
in
push
bound
pop
xchg
xor
lret
les
jnp
sbb
jge
das
push
sti
and
add
mov
sbb
stc
leave
dec
out
jns
jno
xor
negl
stos
push
xchg
iret
das
arpl
adc
mov
cmp
leave
mov
and
ret
mov
sbb
push
popl
movsl
add
xchg
loope
jo
into
or
jecxz
mov
jb
hlt
dec
repnz
movsl
mov
mov
rclb
cmp
or
fdivrs
lret
clc
shll
mov
lret
nop
or
stos
aas
test
mov
ret
sbb
xchg
call
mov
xchg
add
insb
or
sbb
jns
lock
jnp
mov
loop
xchg
push
or
pop
mov
cmpsb
push
testb
pusha
arpl
dec
idiv
dec
cmpsl
jbe
adc
into
lods
dec
aam
and
incl
cmp
sarl
xchg
pushf
lods
in
mov
pop
fstpt
cmp
test
cmp
xchg
iret
xor
jecxz
scas
mov
out
pop
shll
add
je
pop
cli
repz
push
les
pop
das
jae
add
rorl
xchg
shll
in
mov
pop
mov
xchg
shr
push
inc
cmp
arpl
outsl
lcall
jle
xchg
loopne
sbb
aaa
int
mov
sbb
cmc
insl
out
loopne
cs
cmc
and
pop
aad
fdivs
daa
pop
xchg
mov
add
loopne
mov
cmpb
pop
adc
out
aad
enter
add
inc
mov
mov
push
mov
mov
out
cmpsl
cmp
scas
fiadds
psubusw
dec
inc
push
jae
mov
xor
jno
and
push
stos
and
add
les
cmp
jl
push
cmpsb
pop
lea
xchg
mov
xor
pushf
repz
xchg
cwtl
mov
inc
ljmp
or
enter
mov
mov
imull
mov
or
jbe
and
scas
sahf
adc
cmp
rcrb
mov
das
mov
sub
sub
data16
sbb
push
cmp
dec
adc
jge
push
sub
xor
push
insb
aam
mov
adcl
xchg
sbb
dec
outsb
stos
jno
or
inc
ljmp
out
nop
sub
xchg
mov
xchg
stos
scas
bnd
mov
jb
push
dec
mov
dec
jbe
sbbb
je
or
sbb
mov
cmpsl
cmpsl
sti
xchg
or
cltd
push
sar
loop
and
dec
push
notb
mov
ror
stos
add
out
adc
in
jle
sbb
insb
cmp
jg
push
inc
andb
enter
or
sbb
sti
stos
cmpsl
pop
mov
sub
mov
dec
lret
outsl
add
jns
inc
sbb
pusha
add
lods
mov
adc
lcall
cmp
mov
sarb
push
xlat
jle
push
mov
das
cmp
sub
sbb
sbb
cmp
mov
pop
mov
cmp
cmpsl
mov
fwait
shlb
repnz
xor
int3
mov
vhaddpd
addr16
fldt
mov
insb
jle
mov
insl
xor
cmp
dec
cmpl
pop
fwait
push
rcl
in
ja
fnstsw
out
dec
stos
sub
mov
push
in
adc
ja
push
add
and
sub
adc
push
cs
lcall
cmp
cmpsb
jg
in
cmpsl
add
dec
pop
test
xor
push
or
rcll
lods
bound
outsb
enter
cmpsl
push
xchg
orb
xor
cwtl
scas
sarb
mov
in
mov
lds
stc
icebp
mov
push
dec
sbb
sbb
dec
xchg
js
xlat
fcoms
sbb
mov
pop
mov
roll
scas
movsl
dec
into
pop
push
repnz
test
add
mov
sarb
cmp
in
pop
mov
push
mov
nop
arpl
jb
xorb
pop
push
xor
mov
mov
adc
ret
xor
pushf
sbb
mov
aad
mov
dec
mov
outsb
xchg
retw
mov
jo
and
loopne
sbb
pushf
cmp
outsl
mov
or
xor
pushf
or
std
push
add
inc
les
out
dec
xchg
push
and
aas
push
hlt
push
push
xchg
xor
mov
lods
jle
xor
fwait
sbb
adc
push
adc
pop
js
mov
adc
int
cmp
cmpsb
push
jmp
popa
cltd
mov
cmp
outsb
xor
stos
sbb
dec
dec
cli
leave
sub
roll
push
insb
jp
adc
in
push
repnz
ja
or
pop
loopne
jbe
test
jnp
mov
lret
fidivrl
sbb
fidivs
daa
ret
add
lret
pop
mov
xchg
dec
mov
mov
nop
push
inc
adcb
push
lahf
mov
subl
insl
cmpsl
arpl
dec
dec
or
aas
imul
ret
mov
adc
test
bound
nop
into
js
xchg
and
fdivs
push
add
test
pop
lock
lcall
mov
orl
popa
sahf
fsubl
cltd
gs
call
call
xchg
dec
divb
addr16
in
dec
mov
adc
neg
out
mov
sbb
mov
ret
leave
pop
rcr
mull
arpl
jns
nop
lret
pop
sti
into
mov
stos
jbe
fldenv
mov
fwait
arpl
dec
mov
pop
and
xor
flds
pop
or
cmp
adc
ret
pop
dec
mov
mov
ret
mov
adc
jnp
dec
mov
mov
aaa
xlat
loopne
jnp
scas
ds
pushf
aaa
mov
test
mov
in
les
jbe
cmpsw
out
adc
sub
adc
mov
mov
fmul
adc
rcrl
xchg
push
shll
mov
lahf
sub
mov
cmp
sub
in
inc
cmp
jl
stc
pop
shr
push
pop
and
jo
cmpsl
mov
clc
or
dec
mov
aaa
inc
dec
xchg
jne
mov
inc
xor
or
push
lcall
in
cmp
rcrb
xor
pushf
insl
jle
sbb
fidivrl
dec
std
adc
ret
outsl
sarb
xor
daa
add
je
xchg
jae
mov
pop
test
dec
into
xchg
inc
jg
jg
cli
mov
mov
mov
fcompl
mov
dec
movsb
std
mov
nop
pop
pusha
cmp
lcall
lret
fs
sbb
outsb
lods
mov
xchg
mov
xor
sbb
in
add
sub
and
bound
inc
dec
int3
cwtl
mov
add
dec
xchg
mov
outsb
jb
jne
jmp
pop
xor
jo
mov
cmp
dec
sub
xor
outsl
mov
push
rclb
dec
xchg
fcmovbe
imul
xchg
es
in
test
popf
and
cmp
sub
cmp
adc
out
and
repz
jae
sti
outsl
mov
hlt
jno
xor
mov
xchg
sbb
adc
jne
pop
dec
imul
xor
push
cmc
int
pop
push
frstor
jmp
es
scas
or
jo
stos
daa
cmp
and
inc
lahf
adc
pusha
dec
mov
jnp
inc
clc
loop
aas
pop
sbb
imul
mov
fildl
fldz
ret
sub
mov
mov
daa
or
add
jl
mov
test
mov
into
out
jo
test
fidivrs
repz
scas
popf
inc
pop
popf
out
ret
enter
cmp
and
adc
sub
add
leave
mov
in
dec
dec
icebp
and
or
jge
xchg
roll
loope
popl
imul
push
jmp
lret
mov
jae
lds
mov
andl
and
movb
test
and
mov
outsb
movsb
push
or
je
jns
lcall
call
insb
sbbb
stos
xchg
pop
lahf
sbb
cld
mov
test
cmp
xchg
divl
mov
inc
cwtl
mov
imul
cmp
movsl
add
push
lea
adc
movsb
mov
fidivrs
into
cmp
cltd
inc
push
mov
in
dec
mov
adc
jg
int
shlb
pop
mov
pop
cwtl
mov
inc
lods
nop
andb
in
into
cmp
ret
inc
insl
adc
outsl
push
sub
dec
mov
fucom
or
insb
insl
mov
cmpsb
sbb
arpl
pop
out
and
leave
push
sbb
adc
jbe
sub
adc
in
cmpsl
call
out
add
inc
xlat
sarl
jns
hlt
cwtl
sub
sub
popa
in
cli
loope
push
add
push
shll
jg
xor
cli
das
or
pop
sbb
push
cmp
cwtl
adc
loope
fs
inc
dec
jbe
jle
ja
xor
mov
int3
push
rorb
xchg
movsl
inc
cld
jno
lds
pop
in
loopne
xchg
jb
adc
imul
and
add
ficoms
sbb
pop
in
pop
ja
dec
mov
and
ret
les
lock
pop
in
push
add
stos
adc
repnz
out
aaa
inc
pop
mov
fcompl
imul
mov
nop
pop
js
jb
xchg
inc
jne
test
bound
sbb
outsl
pop
mov
jae
iret
dec
xchg
push
xchg
repz
je
icebp
dec
fimull
pop
inc
adc
xchg
popa
mov
xor
xor
adc
out
push
mov
ja
and
repz
je
jle
cmp
or
push
test
outsl
data16
xchg
jl
sti
sub
inc
sbb
and
sahf
sub
sbb
out
sahf
adc
mov
jmp
dec
cmpsb
add
addr16
leave
fwait
dec
into
or
test
js
and
fcoml
sarl
loopne
xchg
fadd
inc
imul
movsb
or
push
add
xchg
enter
popf
es
sub
pop
jp
ss
pop
dec
inc
scas
idivb
push
rorl
and
shlb
cmp
in
lock
leave
movsl
mov
popa
decb
xchg
aaa
subb
xchg
mov
cli
mov
sbb
push
test
inc
dec
and
aas
dec
mov
repz
cld
sub
gs
lret
sbb
mov
in
cmp
mov
adc
mov
enter
cwtl
mov
jle
push
ret
xchg
fst
fsubp
fmull
lret
jp
sbb
jae
add
pop
cmpsl
jge
test
or
xor
add
inc
ljmp
insb
jbe
cs
mov
adc
jb
sub
ficoml
cltd
dec
mov
inc
data16
enter
pop
jne
pop
repnz
sub
arpl
dec
outsl
fs
out
mov
int
pop
sub
xchg
and
pushf
sbb
push
pop
push
out
jl
je
or
mov
divl
push
mov
dec
pop
pop
lods
rolb
lcall
push
jns
push
sbb
gs
fmull
not
insl
data16
cmc
stos
push
rorl
pop
jg
bound
push
fisubl
insb
pop
jmp
add
fwait
sub
jb
xchg
push
mov
jl
aam
adc
or
lods
mov
mov
mov
cmp
rorb
arpl
fdivr
imul
test
cmpsl
adc
rcrb
jbe
mov
xchg
mov
push
scas
jae
xchg
pop
cli
jae
xchg
js
and
xchg
mov
loope
jle
push
outsl
sti
pusha
cmpsl
hlt
out
loop
sub
out
testl
or
ret
xorl
mov
xchg
dec
xchg
mov
daa
iret
clc
jp
sbb
gs
adc
jae
clc
dec
enter
add
pusha
lret
stos
pavgw
dec
mov
mov
mov
dec
mov
popl
enter
sub
cmp
jnp
scas
pushf
push
cs
mov
stos
xchg
popa
repz
sub
sub
gs
pop
ud1
push
loope
sub
jbe
pushf
cs
js
loop
movsl
jo
mov
shrb
mov
jo
loope
fisttpl
sbb
aaa
clc
mov
mov
insl
iret
fdivrs
push
inc
inc
xchg
and
aas
dec
mov
sbb
pop
sarb
loope
add
inc
and
mov
sub
clc
xorl
fistpll
nop
stos
xor
inc
inc
pop
inc
and
mov
clc
push
in
mov
jo
lds
pop
js
sbb
xchg
cs
pop
repnz
push
xchg
sbb
loop
xchg
inc
or
sub
dec
sub
nop
and
dec
test
dec
aaa
xchg
xchg
sbb
popl
repnz
shrb
cmp
js
stos
mov
cli
mov
xor
out
jecxz
call
mov
jno
pop
les
mov
int3
push
gs
mov
mov
push
cmpsb
inc
jge
adc
mov
mov
ret
xchg
add
std
imul
mov
testl
mov
lret
mov
jle
iret
mov
gs
lret
xor
push
daa
lcall
mov
xor
test
mov
cmp
mov
rcrl
sub
add
push
dec
mov
xchg
repnz
sbb
out
test
pop
mov
aas
test
push
daa
cld
pmulhw
jnp
mov
and
add
mov
push
pop
iret
mov
dec
inc
mov
aam
shrl
ret
sbb
nop
push
sub
mov
dec
dec
inc
cltd
fisubrl
sahf
stc
dec
pop
stos
and
mov
out
stc
mov
fisttpl
inc
mov
mov
lds
push
in
cli
and
pop
push
xor
adc
ja
outsl
push
inc
das
mov
push
jne
or
sub
movsl
pop
cmpb
sbb
imul
pop
mull
je
jecxz
jno
in
je
test
insb
push
subl
xor
or
push
or
je
insb
mov
cmp
xor
and
popf
sub
icebp
jne
aad
adc
call
sbb
xorl
in
sub
inc
pmulhuw
ja
fcoms
sbb
push
outsl
push
jmp
mov
sbb
push
cmc
push
inc
mov
fadd
or
jmp
repnz
jb
mov
out
sub
push
jp
nop
adc
shlb
cmpsl
int
pop
pusha
push
movsb
xchg
jge
ret
or
jmp
sub
outsl
xchg
hlt
or
sbb
push
iret
jmp
xchg
mov
stc
stos
fisttpl
rcl
pop
mov
push
jae
xor
xchg
negl
pushf
test
rcrb
inc
xor
cmpsl
in
sbb
repz
rorb
xor
sbb
jbe
and
or
pop
jge
and
add
faddp
test
fwait
jg
inc
cli
lods
xor
repnz
pop
lea
mov
in
mov
and
sbbb
sbb
cmc
aas
pusha
cmp
scas
and
mov
jge
cmp
or
out
push
mov
sbb
sub
cmpsb
out
aam
pop
popf
or
cmp
jb
pusha
out
mov
sub
mov
es
inc
cs
dec
mov
aad
dec
fstps
adc
fs
jno
pop
or
cmpsl
xchg
mov
orb
stos
mov
mov
sbb
je
adc
ljmp
rolb
int3
fwait
jp
push
sti
in
pop
add
push
es
int3
enter
mov
cli
daa
lock
xor
push
clc
mov
inc
rcll
in
jnp
lret
repnz
inc
shrb
in
mov
fisttpl
jg
push
cmp
fsubrl
add
pop
fbld
or
in
xchg
test
xor
add
sub
xchg
in
adc
neg
mov
ret
jmp
insl
jae
addr16
movsl
mov
and
cmp
push
ret
xchg
fs
je
xchg
out
stc
pop
xor
add
adc
imull
fwait
jg
add
jno
testb
cmpb
sub
jp
or
movsl
in
pop
mov
mov
or
jge
push
fidivl
stos
outsb
adc
popf
pop
jecxz
xlat
fimuls
or
movsl
or
xchg
mov
iret
mov
aaa
rsm
imul
clc
or
js
jns
and
and
adc
xchg
sub
js
fldenv
mov
sbb
xchg
push
loope
loope
ffreep
mov
pop
ret
and
pusha
repz
lret
xchg
movsb
jmp
ret
sbbb
push
mov
daa
sbb
dec
cmp
mov
sbb
fwait
out
negl
mov
push
mov
cli
test
rcl
add
ret
push
lea
cmpsl
movsl
inc
pop
mov
fldcw
inc
lcall
mov
pop
stos
and
sbb
adc
and
adc
fucomi
stos
arpl
mov
push
sbb
jbe
je
mov
lods
fs
jnp
pop
and
push
je
pop
mov
add
mulb
jo
or
jl
sub
bound
mov
sub
int3
jns
mov
jecxz
mov
mov
cld
pushf
stos
repnz
pushf
inc
inc
shlb
das
rol
pop
mov
mov
and
ret
or
mov
add
orb
push
stos
dec
jns
lods
cli
and
cmp
mov
push
inc
or
inc
xchg
lock
mov
sbb
test
aad
sbb
add
pop
fprem
pusha
jno
inc
lret
pushf
xchg
pop
or
in
sub
push
popa
push
adc
imul
xchg
ljmp
add
test
fisubrl
sbbl
mov
aad
movsl
roll
cmc
inc
inc
insl
leave
push
dec
add
sub
mov
push
iret
shlb
outsl
add
cli
in
sub
call
insb
pop
add
jo
popa
or
and
lock
cmp
popf
movsb
fwait
imul
jbe
popf
jno
leave
mov
ss
int
xor
fwait
sbb
and
mov
insb
mov
test
ljmp
ficomps
pushf
pop
dec
movsl
addb
mov
pop
shll
cmpsl
movsb
inc
test
cli
or
pop
sti
sub
pop
push
jl
jle
fstp
mov
icebp
int
sub
ret
add
xchg
sahf
mov
mov
push
sbb
test
outsl
test
and
inc
lock
adc
adc
add
cmp
insl
lcall
push
dec
call
push
mov
cmc
lods
xor
adc
or
sahf
arpl
jmp
sub
inc
push
fwait
jmp
enter
lahf
cltd
lea
xor
lods
pop
push
xchg
and
xchg
in
add
loope
out
mov
enter
mov
dec
int3
dec
add
enter
lcall
dec
cmp
xchg
scas
or
repnz
dec
shl
cmp
mov
into
cmp
fcomp
adc
aas
popf
inc
sub
ljmp
and
push
mov
test
or
inc
push
icebp
neg
pusha
int
sbb
ret
xchg
or
and
add
sub
ret
or
mov
mov
inc
push
jb
adc
dec
dec
rcll
jmp
data16
cmpsb
call
sahf
push
aam
je
int
mov
push
push
aaa
and
lahf
fwait
scas
aaa
pop
out
push
popl
test
dec
xlat
or
xchg
cwtl
push
ret
mov
out
xor
sub
sub
test
mov
jno
shrl
shlb
mov
pop
mov
mov
movsb
add
shll
lret
movsl
jae
lret
cmp
mov
dec
push
xor
dec
adc
cmpl
cli
jecxz
add
mov
arpl
popf
pusha
stc
jmp
popf
cmp
incb
push
jnp
xor
xchg
jl
data16
pop
adc
and
jno
push
add
inc
std
cs
jo,pn
push
cmpsb
lret
mov
add
addr16
mov
jg
sti
ret
mov
jne
or
lahf
stos
push
jns
cmpl
xchg
mov
rcll
add
xchg
jp
jno
cld
movsb
rcrb
dec
movsb
push
add
loop
js
xor
xchg
sub
xor
lods
cmp
jp
mov
jns
jnp
into
addr16
sub
std
cli
jae
mov
cld
or
loop
adc
stc
in
in
leave
or
add
insl
and
lds
jecxz
dec
xor
mov
adc
mov
adc
test
shlb
lea
ljmp
insl
xchg
pushf
aas
mov
out
and
jg
fsubs
mov
incl
ds
mov
push
dec
adc
sahf
rclb
scas
push
dec
or
jp
dec
sbb
test
or
mov
sub
test
jbe
xchg
inc
inc
test
scas
cmp
fwait
or
xor
sub
ds
push
into
ljmp
hlt
lds
fxch
and
add
adcb
mov
sub
fwait
pop
jmp
jmp
jae
ffreep
movsl
dec
mov
sub
jae
inc
test
leave
ficoms
cmp
loopne
pop
cli
ret
bound
xchg
lea
xchg
das
lods
jbe
mov
mov
loop
xor
popa
pop
ja
jnp
xchg
ret
mov
cld
hlt
repnz
mov
xchg
ret
jecxz
inc
enter
int
add
pusha
inc
mov
cmp
or
in
lds
add
mov
jb
ds
das
cmp
add
lods
xchg
sbb
pop
mov
fidivs
and
mov
popf
jle
push
jno
insb
dec
enter
bnd
pusha
mov
adc
sbb
jge
mov
add
testl
mov
mov
mov
into
adc
daa
ja
mulb
mov
mov
pop
push
ss
nop
cld
pushf
xchg
sub
mov
pop
xor
aaa
lcall
push
sbb
add
test
cmc
jo
das
sbb
fsubrl
cmp
and
jl
dec
pop
fidivrs
imull
jle
cltd
inc
pop
adc
adc
lods
flds
rcrb
adc
push
mov
add
jb
out
fisubrs
mov
add
mov
adc
inc
insl
cmpsb
push
stc
in
or
aad
insl
test
inc
dec
call
adc
ret
rorb
pop
pop
imull
out
jnp
mov
pop
jne
nop
lcall
js
lock
push
adc
push
and
cmp
inc
stc
mov
mov
jge
clc
and
xchg
gs
dec
inc
dec
pop
xorl
jae,pn
movsb
int3
insl
fstpl
mov
xchg
scas
jecxz
lea
fisttpl
cmpsb
jae
mov
aad
addb
sub
pop
mov
or
faddl
sahf
mov
fwait
pop
insl
es
jnp
mov
or
xchg
xchg
pop
xchg
mov
repz
jns
add
cmp
dec
mov
imul
icebp
push
jae
pop
cld
mov
and
iret
iret
dec
ror
mov
scas
xchg
sbb
fdivr
push
les
je
or
pop
sub
pop
in
sub
sub
mov
ja
mov
sbb
xor
xchg
add
mov
mov
pusha
rep
test
mul
xchg
mov
xorl
push
in
pop
cmpsb
fadds
adc
cli
jg
mov
ret
pop
cs
xchg
xchg
dec
dec
pushf
fnstenv
cld
and
mov
rcr
jne
dec
pop
xor
int3
stc
mov
les
push
scas
cmpsb
pop
ds
daa
jno
xchg
or
aaa
inc
int
les
and
mov
loop
into
lahf
leave
cmpb
and
repnz
in
rorl
lahf
push
cmpsb
add
outsl
or
cld
mov
lock
test
fldenv
push
jecxz
repz
daa
repnz
hlt
pop
push
dec
in
jnp
test
jp
ret
and
xchg
in
scas
sub
jbe
mov
xor
fdivrl
pop
stos
mov
mov
outsl
stos
adc
or
push
push
dec
mov
sub
push
iret
shrb
jo
and
subb
mov
push
sti
pop
adc
xor
outsl
stos
jo
pop
xor
xchg
loopne
pop
mov
scas
xor
xor
inc
lret
mulb
mov
lea
xchg
pop
mov
push
sbb
repz
lret
rcrl
push
xor
pop
ss
mov
stos
inc
movsb
mov
sub
ljmp
dec
mov
lea
mov
cmpsl
dec
add
and
pop
adc
enter
cmp
clc
mov
jns
sbb
mov
stc
daa
jge
jecxz
hlt
rcll
push
add
adc
jae
push
iret
daa
in
inc
pushf
fs
fadds
in
mov
cmp
cltd
out
pushf
ror
ret
stc
gs
jcxz
mov
pop
mull
shll
rclb
and
xor
iret
sbb
aam
lock
in
cmp
incl
subb
into
jl
imulb
and
iret
add
mov
pop
popf
cmp
scas
in
mov
dec
inc
or
pop
mov
push
in
lods
gs
insb
pusha
xchg
imul
xchg
fistl
jns
or
jae
imul
mov
push
cmpsb
std
je
cmp
scas
mov
xchg
mov
sub
ljmp
and
enter
mov
gs
jns
sbb
cmpsb
xchg
cmc
adc
sti
sahf
test
fs
xchg
cltd
lcall
test
inc
insb
outsl
mov
int
ret
jne
movb
ss
dec
lret
add
jne
sbb
test
mov
aas
cli
cs
std
jg
add
push
mov
push
and
or
loopne
sbb
jno
adc
xor
xchg
bnd
push
arpl
mov
xchg
movsb
mov
sub
mov
add
testb
jnp
nop
xor
orl
fwait
mov
push
cmp
dec
dec
push
pop
sbb
cmpsb
shl
ljmp
mov
mov
imul
mov
jecxz
std
mov
push
sub
or
mov
or
and
lahf
pusha
xchg
xchg
pop
jb
xchg
dec
loopne
insb
lret
fstpt
dec
ret
mov
add
in
je
mov
jbe
imul
mov
pop
jg
sti
xchg
pop
scas
push
fwait
das
test
and
ja
test
inc
aam
cmpsl
lock
lock
adc
popf
data16
jns
cmpl
xchg
test
mov
cmp
xchg
adc
loopnew
in
lret
sub
fcomps
jo
jne
out
push
or
jp
inc
andl
push
stc
and
das
lock
and
popf
xchg
in
out
out
dec
andb
add
cmp
dec
push
jae
xchg
jae
dec
inc
dec
testl
lods
mov
cmpl
insb
xchg
xchg
insb
lret
cltd
loop
cmpl
mov
sbb
push
cmc
enter
mov
stos
lods
dec
inc
lret
cwtl
lds
fdivl
dec
lea
jmp
push
idivl
mov
xchg
sub
xchg
and
cmpsb
into
pop
into
jae
xlat
mov
pop
call
xor
cmpsb
sub
cmpsb
into
push
clc
mov
in
shlb
ljmp
aaa
xlat
mov
sbb
sub
and
xchg
dec
pop
jg
loop
pop
adc
fs
xchg
jno
jge
xchg
inc
mov
dec
or
daa
stos
int3
sub
sbb
xor
mov
movsl
scas
std
daa
sti
or
mov
mov
popf
inc
inc
das
adc
push
push
cmp
sbb
fwait
inc
loope
fstl
mov
dec
imul
jmp
data16
shll
cmp
dec
test
sbb
outsb
jmp
ds
ret
push
jb
mov
pusha
dec
enter
aam
orb
pop
mov
mov
cs
ret
jge
mov
pop
lret
jg
fucom
insl
mov
test
push
adc
dec
sub
and
in
adc
push
mov
mov
lods
and
jl
lret
in
in
push
dec
dec
jmp
mov
in
call
test
mov
or
imul
xor
fcomps
xchg
ror
add
insb
xlat
pop
dec
fsubl
xchg
xchg
add
ret
out
sti
pop
aad
in
int3
push
xor
fimull
mov
inc
jns
push
lds
add
fwait
or
out
mov
pop
cmp
iret
and
cmpsl
stc
pop
rorb
adc
sti
or
mov
aaa
and
ficoml
xor
leave
nop
mov
nop
sbb
lret
cmc
push
add
mov
add
adc
mov
lods
jnp
jmp
popa
outsl
mov
mov
mov
hlt
gs
or
push
daa
push
popa
jl
add
lret
movsl
fcoms
rcll
inc
push
aas
dec
inc
cmpsl
repnz
cli
ficoml
test
pop
rorb
inc
mov
mov
adc
dec
cwtl
mov
sub
test
mov
std
stc
push
jno
push
shrl
and
pop
add
aad
fldl
or
mov
adc
loop
repnz
dec
xor
jno
jne
dec
dec
es
int
fists
sub
fwait
rorb
loopne
mov
movsl
mov
cmp
test
pop
push
xor
inc
mov
roll
mov
mov
sbb
enter
mov
andb
inc
sbb
int
push
pop
adc
insb
adcb
inc
ret
loope
outsl
push
into
inc
test
push
repnz
xchg
loopne
or
inc
xor
test
pop
mov
sub
cmpsb
mov
popa
popf
inc
mov
aad
pop
clc
out
jns
cmp
inc
dec
or
into
mov
scas
jl
mov
or
int3
xchg
jo
jnp
and
int3
inc
les
daa
mov
sbb
mov
inc
hlt
in
mov
pop
pop
sbb
pop
or
imul
inc
sub
cltd
adc
mov
xor
jns
add
scas
xchg
pop
mov
pop
in
add
es
das
sbb
mov
in
call
cmp
fwait
push
or
push
push
push
es
and
int
out
and
pop
xchg
mov
popl
ret
gs
divl
sbb
pop
pop
sub
cmpb
push
pop
test
pop
inc
cmp
cli
inc
mov
loopne
push
adc
sbb
hlt
leave
cwtl
xor
sbb
mov
dec
adc
and
int
xchg
shrl
jbe
dec
mov
inc
dec
cli
sbb
cltd
inc
cmpsl
fimull
dec
loop
sahf
rolb
pop
push
push
cwtl
mov
aas
pop
enter
test
out
push
stos
hlt
gs
xadd
or
outsb
repz
lods
addr16
xchg
inc
shl
int3
dec
jnp
rclb
pop
cwtl
push
adc
test
dec
ds
mov
jmp
sub
dec
js
lds
rorb
out
shrl
stos
and
mov
mov
xchg
jl
xchg
mov
sbbl
dec
stos
xchg
mov
jns
lcall
pop
xor
adc
cmp
or
push
sbb
loopne
arpl
test
adc
push
adc
pop
xchg
cmp
sbb
jle
jmp
loop
sahf
cwtl
and
in
inc
or
sbb
add
xchg
mov
sbb
xchg
xorb
cmp
gs
rorl
insb
test
rol
sbb
ss
rol
mov
ret
jge
xchg
int
insl
sub
sub
insb
dec
xor
ss
js
js
int3
sahf
aaa
xchg
pop
jne
dec
jg
mov
mov
dec
stc
xchg
sti
int
repnz
xor
mov
add
add
mov
cmp
into
mov
jbe
xchg
pop
icebp
push
mov
push
and
dec
cmp
add
push
lds
stc
or
and
es
imul
lcall
imul
loope
shlb
cmp
xchg
lds
xchg
and
andl
popa
rorb
stos
xchg
jp
or
xor
sbb
in
pop
fstps
sahf
decl
mov
gs
adc
fcompl
das
xchg
push
insl
add
jno
sbb
cmc
xor
or
ds
inc
jae
mov
mov
ret
pop
mov
xchg
xchg
jmp
jbe
outsl
into
mov
insb
sarb
lock
or
dec
pop
ret
cld
aaa
xchg
fcomps
cwtl
or
cmp
pop
mov
cmp
pop
cs
ss
and
jbe
mov
psrad
mov
in
push
lods
nop
popa
lret
and
daa
mov
xchg
cli
dec
mov
jae
in
stos
sbb
xchg
mov
xchg
test
popl
push
pop
imul
lret
rorl
xchg
xor
mov
jle
loope
in
cmpsb
add
jp
aad
pop
aaa
popa
dec
push
push
mov
and
sbb
test
outsl
ficompl
mov
mov
scas
xchg
mov
inc
xchg
dec
mov
cwtl
psubsw
push
pop
hlt
fwait
xor
mov
sbb
xchg
loopne
jmp
inc
popa
lods
and
mov
sarb
lods
aaa
mov
xor
fs
mov
loopne
adc
inc
xor
cmp
push
mov
imul
daa
fistpll
mov
xchg
aaa
leave
call
sbb
cmp
lods
cmp
loopne
sbb
push
jmp
jbe
out
adc
adc
cmp
xchg
mov
insl
dec
xor
inc
je
fsub
jp
add
sbb
ds
jecxz
fldt
fs
nop
adc
ret
scas
or
loopne
mov
pop
and
push
mov
jnp
out
out
cmp
sub
lret
or
fimuls
jge
cmp
shl
daa
ljmp
push
sti
mov
pop
fnstcw
lock
dec
dec
rorl
js
or
inc
xor
jb
jbe
jle
into
movsb
shrl
in
mov
push
loopne
orb
mov
repz
sbb
adc
repz
sbb
push
jmp
and
repnz
adc
add
xchg
pop
nop
paddsb
mov
sub
mov
xlat
cmp
and
cmp
mov
lock
stos
es
div
push
or
dec
rcrl
mov
aam
movsl
jae
repnz
mov
loope
jmp
add
ret
jecxz
cmc
insb
addr16
les
jnp
outsb
xchg
outsl
mov
cltd
push
pusha
pop
inc
out
xchg
out
xor
mov
mov
rcrl
ret
imul
or
scas
fisttpl
fnstcw
or
ret
add
test
xchg
and
mov
sub
fldl
xchg
fdivs
sub
xor
pusha
insb
fwait
clc
inc
mov
pop
mov
adc
add
imul
pop
das
js
pop
adcl
iret
mov
loopne
shrl
cmpsl
fxch
push
std
cmp
jecxz
rol
faddp
stos
outsb
xor
andb
and
movsb
leave
inc
mov
adc
test
out
sbb
insl
push
push
ljmp
mov
xor
mov
inc
jp
cs
dec
imul
dec
xchg
push
movsl
jmp
jbe
fistps
test
mov
pop
adc
lahf
sbb
out
mov
insl
enter
int3
pusha
push
pop
add
xchg
pop
bound
or
dec
rol
shrl
add
jne
add
je
dec
scas
sbb
mov
popa
clc
push
test
xor
jg
stos
mov
les
insb
out
pop
jnp
ds
mov
mov
mov
xchg
movl
jo
mov
mov
pop
cmpsb
out
test
enter
adc
jo
adc
jo
add
pop
and
mov
js
iret
sub
and
ja
mov
rolb
jg
jnp
push
ljmp
xor
rolb
and
lahf
ret
insb
clc
xchg
mov
lds
enter
ljmp
jle
repz
jb
dec
push
jnp
or
jmp
cmpb
xlat
or
mov
pop
or
test
dec
sub
aas
loop
in
dec
int3
sbb
out
push
call
mov
orb
sbb
ss
aam
clc
jb
loope
pop
dec
imul
addr16
stos
push
sbb
cltd
inc
call
ret
sub
mov
inc
sahf
jp
push
mov
fcompl
std
mov
fisubrl
mov
adc
sti
mov
dec
xchg
cmp
pop
aad
mov
inc
or
xor
xorb
rolb
sbb
shrl
or
adc
jae
pop
paddsw
jl
in
push
push
shrb
fildl
repz
roll
shrb
add
and
mov
dec
cli
push
mov
jmp
daa
sbb
in
repnz
in
loopne
dec
cmc
imul
fadds
jns
sub
test
outsl
xchg
psubd
ds
fwait
and
mov
sbb
aaa
fs
cmp
jno
rcl
mov
repnz
shll
cltd
stos
mov
loopne
cwtl
cld
test
dec
movsl
xor
add
xchg
stos
sbb
mov
xchg
mov
sub
cmp
jle
pop
cmp
inc
fsincos
dec
xchg
inc
push
mov
insb
adc
in
adc
inc
ja
enter
jae
lock
mov
shld
jp
dec
popa
mull
mov
punpcklwd
adcl
adc
xchg
pop
sbb
xchg
or
sbb
inc
decl
cmp
and
sub
insb
cwtl
sub
pushf
sub
in
aas
inc
adc
sub
or
pop
movsl
mov
jmp
xchg
pop
insl
inc
nop
cltd
and
lods
or
jbe
lret
push
mov
lea
test
int3
pushf
mov
adc
repnz
pop
out
push
ja
sti
subb
das
cmpsb
adc
mov
xor
andl
aad
out
lods
and
out
push
mov
sbb
ss
mov
sub
fisttpl
or
sub
xor
fmuls
xchg
xor
out
mov
pop
andps
loop
popf
push
pop
in
fsubs
cmpsb
and
test
dec
dec
jb
rorl
add
mov
mov
loope
xchg
jcxz
ret
clc
subb
xchg
xor
jecxz
jle
shll
les
dec
addr16
out
mov
lock
push
add
or
inc
mov
in
mov
inc
adc
test
jmp
mov
imull
out
dec
adc
mov
lcall
aad
rol
xor
stc
test
and
mov
dec
rcrb
rcll
sub
aam
insb
movsb
lcall
sub
test
xchg
jp
in
sub
sahf
mov
jecxz
mov
lods
pop
sbbb
out
rol
movsl
loope
mov
pop
loop
inc
inc
cmc
sbb
push
ljmp
jno
push
popl
mov
clc
push
sti
lcall
push
cmp
in
and
je
icebp
cltd
sarb
push
ret
lea
jns
jns
rcr
outsb
mov
mov
call
lahf
dec
pop
mov
out
rcrb
xchg
imul
push
dec
sbb
scas
lods
push
pushl
stos
xchg
xchg
je
dec
mov
ret
adc
sbb
call
pop
add
xchg
sahf
sub
out
shlb
cmp
push
fcmove
add
inc
ret
fwait
mov
loopne
in
rol
sbb
jnp
sbb
pop
jle
icebp
and
mov
or
jecxz
cmp
jp
jnp
arpl
into
or
fcomps
adc
jo
mov
fwait
inc
pop
movsl
dec
xor
ds
rorl
testl
xor
pop
adc
and
mov
push
jge
popa
mov
imul
test
test
cs
es
xchg
xor
or
lods
cld
jl
in
movsb
nop
pop
imul
pop
dec
dec
push
push
and
lcall
xor
aas
lahf
hlt
shlb
xchg
in
xor
push
scas
loopne
in
imul
ficomps
pop
stos
mov
cmp
xor
dec
mov
push
mov
dec
mov
rolb
adcl
or
movsb
push
push
dec
test
adc
jg
xchg
dec
daa
stos
mov
fdivrp
push
ds
mov
or
inc
dec
notb
leave
cld
lock
dec
leave
xor
sub
push
pop
cmc
jmp
push
adc
mov
aad
movsl
addr16
shl
scas
sbb
mov
aas
popf
and
stos
and
out
mov
fmull
aad
cli
nop
mov
mov
out
and
or
cmp
lret
dec
pop
inc
pop
xchg
mov
add
xchg
call
and
ficomps
push
or
jecxz
repnz
cli
ljmp
enter
xor
push
add
and
mov
pop
adc
sub
sub
testl
add
ja
pop
push
psubsb
dec
push
adc
lds
sub
adc
dec
inc
pop
jbe
fs
sarb
sbbb
jae
push
inc
stc
jns
pop
aaa
or
and
mov
or
outsb
jae
jl
idiv
add
into
aas
mov
push
cmp
clc
scas
call
add
jnp
jbe
leave
xlat
leave
rcrb
sub
scas
aas
das
jge
mov
popf
clc
mov
adc
pop
inc
outsb
and
mov
in
rclb
push
add
push
in
das
or
into
data16
mov
jp
xlat
dec
rcrb
int
push
mov
loopne
scas
xchg
ljmp
sbb
and
cltd
arpl
pop
out
mov
inc
icebp
test
jbe
sarb
jbe
lret
and
push
icebp
push
clc
test
test
data16
and
push
loop
mov
xchg
jns
inc
repz
add
cmp
inc
mov
mov
in
xchg
add
or
stos
xchg
adc
sbb
sti
dec
jle
lcall
scas
jmp
and
or
add
pop
adcl
shlb
xor
or
xchg
cli
cmp
lret
xchg
addr16
push
gs
mov
addr16
lods
xor
adc
shlb
cmp
in
fcoml
adc
repz
sub
jae
testl
imul
mov
fadds
popf
loopne
syscall
push
icebp
rclb
test
insl
arpl
std
mov
imul
sti
push
lahf
mov
pop
daa
mov
jbe
mov
jg
imul
loopne
fsts
es
push
es
dec
dec
sub
imul
dec
rcrb
cs
lods
insb
or
cmc
mov
lods
fs
movsb
imull
push
test
lret
sbb
push
ss
roll
ljmp
outsl
mov
out
ret
lods
scas
fsts
sub
adc
sub
outsl
bound
ror
push
cwtl
testl
les
sub
push
pushf
out
hlt
stos
aaa
add
dec
daa
push
lock
enter
test
popa
ss
cs
bound
jge
fisubs
fildll
js
subl
dec
pop
mov
xchg
icebp
jle
popf
push
jae
xor
cmp
xchg
xchg
fstps
enter
imul
jecxz
mov
pop
xlat
add
push
xlat
mov
pop
pop
ret
fmull
push
cltd
and
cmp
jp
or
sarb
insb
inc
jnp
adc
mov
sbb
out
cld
sbb
cwtl
repnz
sub
pop
or
out
or
lret
inc
dec
xchg
lret
hlt
cmp
subl
das
pop
aaa
nop
vsqrtps
pusha
out
dec
shll
stc
aad
adc
cld
ret
test
ret
jb
add
out
adcb
stos
jb
les
inc
pop
sahf
sahf
test
push
mov
addr16
push
gs
sbb
mov
fbstp
sbb
cs
xor
cmp
cmp
lods
and
dec
push
and
stos
add
xlat
jp
inc
imul
mov
xchg
cmp
jb
adc
mov
or
lcall
xchg
in
mov
mov
mov
les
or
in
dec
fucomi
mov
adc
leave
mov
lahf
fldz
call
aam
cmp
test
lds
sub
cld
xchg
sahf
pop
xchg
fildl
sbb
in
adc
mov
orb
dec
dec
je
aad
jg
stc
mov
test
jns
cld
jo
pusha
and
out
cmpsl
sarl
divl
jge
and
cmpsb
or
dec
enter
lahf
loopne
xchg
mov
mov
mov
mov
jno
ljmp
shlb
dec
or
sub
inc
aad
mov
jbe
pushf
mov
popf
add
es
inc
arpl
pop
cltd
xorb
popa
sahf
mov
push
cli
sbb
outsl
inc
scas
sub
insb
jle
or
or
aam
and
xchg
out
dec
addl
mov
dec
sbb
dec
cli
popl
fiadds
lods
xchg
xor
jnp
xor
jmp
adc
leave
mov
mov
test
movsb
push
xchg
insl
std
pop
in
in
divb
je
pop
mov
in
add
pop
dec
lret
dec
mov
scas
into
out
orl
ds
jl
add
adc
inc
arpl
xchg
mov
adc
int3
rolb
adc
and
push
add
pusha
js
push
xchg
mov
sub
xor
sbb
cmp
out
xor
or
xor
out
mov
out
push
mov
movsb
push
into
loope
outsl
add
fcmovne
push
pop
into
loope
dec
jmp
inc
cmp
fistl
xor
in
adc
adc
add
aas
pop
adc
insl
sbb
mov
cmp
sbb
stos
sbb
dec
out
cwtl
outsl
or
inc
aaa
pusha
insb
test
mov
iret
fs
mov
stos
out
pop
sbb
push
adc
adc
adc
loope
jns
and
xchg
cltd
push
cld
cmp
dec
and
outsl
xor
push
jnp
cwtl
or
cmp
insl
pop
and
sub
sub
xor
push
das
clc
pop
cmp
nop
sbb
adc
ret
movsb
es
pop
cld
stos
jmp
scas
cld
test
int3
int
ret
xor
xchg
mov
inc
dec
js
fistpll
leave
insb
mov
inc
xor
cmpsl
sub
adc
lods
ficoms
out
inc
jecxz
imul
lcall
cmp
in
fcomps
cmpsl
and
xchg
movsb
out
sbb
mov
std
add
cmp
hlt
dec
lds
ficoml
clc
push
shlb
xor
leave
and
jmp
jle
pushf
pop
js
in
movsl
cmp
or
dec
arpl
popa
cmp
stos
sub
lret
inc
inc
js
out
cmp
mov
xlat
stc
pushf
pop
in
jge
mov
push
scas
fiadds
fwait
sbb
hlt
and
mov
inc
mov
mov
dec
sbb
hlt
pop
idivl
mov
inc
or
mov
adc
sar
insb
adc
jecxz
std
mov
outsl
mov
mov
sbb
mov
aam
outsl
mov
aam
mov
inc
push
mov
push
and
xchg
jp
popa
inc
sarw
sahf
sbb
sub
xchg
test
pop
sbb
xchg
sbb
dec
lods
jb
adc
call
xor
mov
and
das
outsb
iret
or
icebp
mov
enter
push
mov
js
ja
push
mov
mov
iret
inc
mov
test
std
push
inc
imul
push
repz
out
mov
push
adc
inc
inc
jno
sub
mov
gs
mov
push
stos
les
stc
inc
jne
inc
jns
jmp
xor
push
sahf
mov
or
aad
add
fidivl
fisubs
cmp
loop
iret
add
inc
inc
cmp
mov
pop
xlat
dec
push
mov
movsl
mov
scas
pop
pop
ret
cmpsb
orb
loope
out
mov
ss
dec
imul
add
scas
inc
sub
and
dec
sbb
mov
aaa
jg
mov
inc
or
addr16
dec
jg
mov
std
insb
in
imulb
mov
shlb
mov
loop
pop
sar
xchg
ds
aam
xchg
inc
stos
in
xor
dec
xor
in
mov
sub
dec
divl
lret
pushf
sbb
cmp
into
sub
loope
inc
dec
jl
test
adc
in
adc
addl
les
jl
pop
jl
in
jle
pop
push
jp
das
bound
push
push
ljmp
frndint
jg
js
lahf
in
pop
dec
mov
fsubr
inc
dec
inc
aam
pop
outsl
out
and
iret
fcompl
adc
loopne
inc
aam
add
mov
xchg
xchg
mov
out
cmp
data16
in
outsb
pop
jnp
push
dec
xlat
bound
dec
repz
loope
mov
das
insb
or
lock
aaa
dec
imul
pause
mov
pop
and
inc
ficoms
lret
dec
pop
out
xchg
mov
arpl
xor
sub
sub
mov
adcb
fsub
cwtl
dec
mov
fildl
addr16
loope
pop
out
pushf
stos
mov
rorb
lock
daa
mov
test
ret
xor
mov
push
in
jb
jg
fyl2xp1
xor
push
insb
xchg
shrb
clc
popa
sub
jne
les
mov
jb
movsl
xchg
fisubrs
push
jae
add
push
sbb
and
mov
xchg
setge
dec
add
mov
mul
stc
ret
iret
pop
imul
rol
imul
mov
ret
faddl
aas
je
mov
in
bound
lret
les
out
int
cmc
push
insb
shl
out
sti
fildll
xor
out
sub
push
push
dec
push
insl
fidivrs
rclb
int3
cmp
popf
sub
sti
nop
bound
stos
inc
int3
test
mov
cmp
mov
push
insl
mov
xchg
orb
cmp
sar
scas
mov
pushf
mov
dec
dec
sub
xchg
and
imulb
lods
pop
ja
jge
dec
arpl
sti
repz
jns
and
out
lds
out
repz
cld
cmpsb
stos
fucomip
fnsave
dec
xlat
imul
push
mov
into
pop
repz
mov
mov
dec
movsl
shll
mov
out
ret
pop
xlat
adc
cmp
push
inc
jecxz
loope
aaa
jge
out
adc
data16
jb
xor
div
push
std
xor
imul
aam
push
sub
jae
aam
je
imul
jbe
fiadds
dec
addl
jl
lods
nop
test
out
and
inc
ret
nop
lods
leave
xor
stos
mov
jl
out
fldcw
sti
jg
pop
pop
push
inc
inc
mov
aad
inc
mov
sub
lock
push
push
sub
xor
inc
push
xor
lret
xchg
icebp
fs
enter
data16
mov
arpl
rolb
test
mov
and
dec
lret
inc
adc
inc
mov
or
int3
int3
inc
dec
xor
lea
jbe
pop
xchg
adc
pop
dec
ror
push
mov
jnp
mov
mov
stos
adc
mov
xor
inc
div
lock
mov
mov
ja
xor
xor
sti
cs
fidivl
pop
ja
mov
xchg
adc
cmp
test
jmp
sub
or
inc
fcmovbe
add
fcoms
adc
sub
pop
xchg
push
cmpsb
dec
mov
int3
dec
in
pop
xchg
push
aaa
lods
pop
cs
lret
and
loop
fs
fidivl
addb
aam
ljmp
lds
sbb
test
mov
sbb
movsb
push
cli
dec
fs
out
loopne
jo
xor
xchg
lahf
add
cmp
push
int3
lods
or
shlb
jp
hlt
fsts
shlb
inc
popf
and
jle
test
lds
cli
out
xchg
insl
ret
inc
mov
sbb
pushf
sti
lea
test
fnsave
xor
mov
sbb
lret
clc
cmp
mov
mov
mov
insb
pop
adc
jg
pushf
movhps
call
cmp
sbb
orl
mov
and
or
test
cwtl
insl
pop
int3
jl
into
mov
call
mov
enter
ja
ss
mov
aas
frstor
aam
jmp
test
sbb
xor
and
fucomi
test
mov
xor
mov
jb
js
adc
out
ss
cmp
test
rcll
stc
sbb
xchg
out
sarb
and
mov
lods
push
mov
cmp
sahf
lods
jge
bound
dec
adc
lock
mov
pop
jge
sbb
pop
jne
loope
mov
xchg
fwait
cmpl
scas
mov
out
sub
add
incb
dec
rorl
iret
cmp
sbb
add
adc
jns
shr
xchg
ja
jno
loope
dec
jnp
mov
jb
inc
rcrl
icebp
movsl
sbb
sar
push
mov
inc
adc
fwait
push
and
mov
dec
repnz
xchg
xchg
sbb
popf
test
mulb
gs
pop
fimuls
movsl
push
and
and
sti
and
fs
data16
mov
mov
cmp
in
or
gs
inc
outsl
cwtl
lret
xor
mov
inc
mov
fcoms
sti
sub
push
xadd
inc
fs
stos
mov
addr16
repz
cld
cmp
and
and
or
mov
out
jno
mov
dec
outsb
insl
clc
jp
adc
push
xchg
fisttpll
loopne
sbb
push
imull
push
cs
imull
dec
imul
mov
ret
repz
inc
push
xchg
inc
iret
sbb
rcl
dec
les
xchg
xor
mov
pusha
jp
pop
int3
pusha
js
popf
mov
mov
aam
pop
sub
shrl
and
outsb
xchg
fisttpl
mov
push
int
add
cmp
popa
jae
mov
xchg
pop
and
jns
mov
enter
sbb
das
add
cmc
cld
xchg
xchg
xor
or
jns
in
addr16
aaa
and
dec
js
sub
jne
cli
mov
pop
mov
or
mov
addr16
rcrl
and
add
in
mov
shll
sub
or
dec
ror
popa
hlt
pop
push
loopne
mov
in
add
imul
cwtl
add
sub
idivb
ret
getsec
dec
cwtl
je
xchg
adcl
hlt
dec
add
adc
and
loopne
jp
das
mov
stos
jns
pop
sub
mov
test
mov
mov
repz
bnd
stos
inc
sub
push
sbb
xchg
shlb
roll
xor
lcall
lcall
mov
mov
test
dec
outsb
fsubr
mov
mov
xchg
jmp
cmpb
mov
int3
mov
xchg
add
dec
jne
inc
divps
and
int3
pop
sbb
mov
popf
push
repz
inc
xchg
adc
loopne
mov
or
inc
push
push
sbb
fsub
daa
pop
mov
leave
cmpsl
or
inc
dec
scas
sub
jns
das
mov
stc
mov
insl
mov
es
popa
sbb
fldenv
xchg
xor
cmp
into
std
jl
push
stos
std
mov
inc
ljmp
repnz
or
jb
mov
rolb
pop
fucom
loop
leave
das
push
in
lods
pop
lock
mov
mov
add
xchg
ror
stos
xor
or
xchg
sbb
sub
cmpsb
imul
and
stos
shl
mov
xchg
incl
cli
xchg
cltd
or
cmpsl
cmp
loop
fdivs
mov
jb
pop
repz
push
aas
fdivrs
xchg
adc
lcall
fcoms
fwait
ds
outsl
fs
sub
mov
jb
icebp
dec
mov
dec
das
pop
xor
push
mov
mov
adc
push
xchg
movsb
pop
lock
and
loope
or
cmc
mov
mov
xchg
add
in
xor
xor
addr16
mov
mov
out
push
sbb
aas
scas
int
jnp
cwtl
mov
dec
cmp
loopne
adc
add
xor
pop
es
jbe
stos
ljmp
enter
cmp
cmp
and
fistl
in
les
xor
sarb
inc
cld
lret
dec
loop
lock
aad
dec
les
dec
push
lods
dec
xchg
xchg
out
add
mov
sahf
jne
test
dec
and
pop
jp
xchg
inc
push
xchg
pop
add
repz
lock
in
xchg
cmc
enter
das
int
repnz
loopne
pop
ret
push
jecxz
imul
push
into
repnz
enter
aad
das
sbb
cltd
add
add
fsubl
fdivrs
dec
sbbl
call
mov
enter
pop
movsb
adc
cmp
das
das
xor
arpl
data16
loop
sar
daa
or
movsl
cmpsb
or
insl
rorb
sub
pusha
rorl
shl
inc
pop
pop
imul
aam
mov
lcall
xchg
and
sbbb
lea
ret
test
pop
pop
jp
xchg
cmpsl
pop
xchg
icebp
imul
or
aam
mov
dec
outsl
pop
fwait
aad
cmpsl
lret
jmp
and
aad
sti
pusha
mov
pop
and
ds
add
cmp
hlt
sti
jne
add
add
or
out
cld
add
lods
xchg
in
arpl
xchg
scas
out
scas
rorl
mov
loope
fcoml
scas
inc
lock
push
cmp
sbb
enter
cmpsb
jnp
push
or
aam
popa
xlat
mov
add
cs
sbb
outsl
mov
loop
pop
mov
loopne
jnp
xor
in
addr16
xchg
xor
mov
gs
pop
test
int3
aas
push
cmp
cmpsl
mov
shlb
push
sbb
sbb
stos
es
and
push
jae
lahf
sbb
mov
outsl
push
or
movsb
jae
lcall
ja
mov
pop
sub
jne
insb
imul
add
test
cld
sti
mov
xor
pop
mov
push
mov
or
sub
and
stos
cmp
pop
mov
dec
iret
mov
push
xlat
push
sub
aaa
cmp
cmc
jg
xchg
leave
int3
lds
iret
mov
stos
icebp
stos
nop
add
mov
jo
loop
mov
jecxz
jnp
sub
aam
fs
iret
mov
sbbb
fidivrs
cmp
xor
jno
pop
shrl
aad
fs
test
cwtl
test
push
mov
pop
or
sbb
scas
scas
aam
lea
cmc
sbb
lods
fdivrl
push
mov
rorb
jmp
imul
jp
nop
pushf
xchg
mov
cmpsl
cs
arpl
mov
adc
mov
aas
xchg
ja
mov
scas
sub
arpl
popa
pop
movsl
lods
xchg
inc
ljmp
push
cmp
cmc
movsb
out
sub
xor
pop
jnp
cwtl
push
dec
and
sti
push
xor
inc
push
loope
xchg
sarb
stos
dec
and
aas
add
inc
mov
jmp
shrl
addr16
adc
xor
ja
adc
adc
mov
mov
mov
aaa
out
add
sub
or
int
stos
ret
jmp
lret
pop
mov
mov
push
clc
mov
imul
fisttpl
insb
addl
pop
mov
mov
sub
or
lcall
addl
inc
xlat
sysenter
xor
sahf
mov
dec
sub
jne
push
push
call
sbb
mov
test
scas
mov
aam
stos
xor
push
cmpsl
adc
jae
xorb
cs
pop
cmpb
jno
xchg
xor
dec
mov
push
mov
push
aaa
dec
jb
fstp
int3
fsubrl
dec
rcrl
xchg
jp
popf
and
fsub
iret
loope
call
dec
add
inc
stos
fs
cld
xlat
xchg
ja
ret
in
mov
xchg
imul
push
arpl
dec
orb
push
xor
dec
xchg
jne
aad
in
mov
sar
sbb
ljmp
cmc
xor
push
xchg
jne
movsl
jb
lahf
sbb
cmp
ja
stos
mov
sti
scas
lret
or
lea
adc
xlat
mov
addb
push
in
lods
and
aas
push
out
cs
rorl
mov
fldt
dec
dec
fldl
xacquire
int
xor
pop
mov
lret
out
inc
push
xchg
sbb
out
out
lock
jmp
adc
push
xchg
xor
cmpsb
ljmp
adc
fst
shl
cmp
out
sbb
xor
adc
insb
popa
xor
mov
mov
fidivrl
mov
stos
pop
aaa
cmc
and
cmp
dec
jl
int
call
enter
sbb
outsb
and
mov
scas
subl
cwtl
notl
clc
shlb
sub
lret
out
popa
sub
mov
xor
push
mov
lret
inc
jg
dec
loopne
cltd
and
cwtl
cmpsb
jge
dec
push
and
movsb
sub
stos
or
cmp
loope
xchg
push
pop
dec
mov
fimull
ror
shll
sbb
ds
jo
les
fs
lcall
ficoml
and
inc
loopne
ret
decl
movsl
sahf
or
sub
push
int
cmp
dec
stos
js
or
pop
push
xchg
and
cmp
jecxz
jns
sbb
or
mov
dec
pop
das
les
adc
sahf
xchg
imul
push
test
push
and
dec
lock
or
int
fiadds
inc
xchg
inc
out
pop
sti
imul
sub
and
movsb
dec
aad
ret
cmpsl
jbe
mov
call
pop
aas
movb
shlb
mov
add
and
xchg
sub
add
pop
inc
stc
dec
push
push
mov
and
out
or
pushf
lds
shlb
test
outsb
repnz
aaa
scas
aam
sub
sub
push
jnp
orl
out
es
mov
cld
pop
aaa
arpl
cmpsb
fsubl
insb
xchg
test
jle
mov
outsb
pop
fucomip
jo
aaa
push
sub
add
cmp
cmp
daa
mov
pop
hlt
xchg
push
ret
rcrl
lret
mov
lahf
sbb
add
xor
out
xor
xchg
sub
jp
in
pop
fidivrs
dec
xchg
inc
std
test
cli
das
inc
je
add
cld
mov
pop
mov
add
fisubrs
fmulp
mov
adc
sub
je
push
jb
lahf
in
aas
pusha
push
inc
sub
iret
bound
loope
stc
lret
mov
sbb
in
xor
mov
cmp
xor
gs
loopne
mov
push
cli
and
sub
cvttps2pi
xchg
popl
push
pop
add
sbb
sub
dec
adc
call
out
pop
add
push
addr16
add
pusha
or
pop
inc
push
and
lret
mov
cld
cld
mov
jmp
cmp
testl
das
arpl
jae
jl
aas
dec
jns
mov
xor
andl
fistpl
ss
cmpsl
sbb
psrlw
mov
test
pop
loope
jp
mov
insl
push
jb
push
jp
add
push
xchg
int
xchg
cmp
push
jle
mov
or
stc
and
bound
jns
in
in
dec
pusha
repnz
xor
sbb
cli
pop
pusha
pop
mov
or
into
inc
inc
nop
cld
push
insl
cltd
leave
xor
out
call
gs
adc
adc
sbb
bound
call
cmc
hlt
push
sub
call
push
stos
imul
fmuls
mov
scas
out
data16
pop
outsl
push
inc
xchg
shl
shrl
aad
pop
pop
and
sbb
or
bound
mov
dec
js
sbb
xchg
mov
out
jl
add
inc
fs
int3
daa
xchg
inc
incl
imul
pusha
addr16
push
sti
add
fs
jbe
stc
jae
mov
pop
cltd
fadd
mov
insl
adc
fs
test
lods
icebp
jbe
into
sub
pop
sub
add
xchg
jp
sub
push
mov
sbb
in
push
fnstcw
push
pop
pop
inc
inc
outsl
mov
sahf
or
icebp
and
and
pop
call
push
and
sahf
inc
rcrl
fiadds
inc
pushf
into
or
es
push
fdivl
cmpsb
mov
jo
mov
inc
xor
push
ret
inc
enter
dec
enter
inc
fs
jmp
divb
and
dec
mov
inc
add
pop
cmp
inc
scas
lods
push
imul
cwtl
xchg
test
push
test
mov
sti
adc
xchg
aas
add
mov
loop
rol
cmpsb
add
jge
shrl
jns
jmp
mov
and
inc
xor
into
mov
out
pop
and
and
xchg
push
es
ja
push
sub
sub
mov
and
in
xor
jns
rclb
dec
shlb
sti
or
icebp
jle
adc
cmpsb
std
jne
mov
mov
or
and
add
jmp
call
aad
fldl
insb
clc
lock
mov
cld
cs
xor
sbb
iret
push
fisubs
mov
xor
idivl
clc
sub
dec
mov
idivb
outsl
and
dec
daa
xchg
add
ja
or
mov
fnstenv
repz
adcl
cmp
int3
test
cmp
sbbl
sbb
cwtl
xor
cmp
cli
pop
loop
push
shrb
and
sarb
inc
and
inc
jle
cmp
push
mov
scas
sub
cmc
mov
and
ret
pop
jb
mov
repz
addr16
mov
mov
dec
mov
stos
xor
mov
jnp
mov
popf
jnp
ljmp
cld
jg
imul
add
das
psubsb
jp
rclb
mov
and
xchg
mov
out
ret
pop
mov
or
addr16
add
movsb
imul
cs
jo
les
pop
mov
or
xor
xor
sti
fsubrs
mov
outsl
les
lods
push
ret
pop
xchg
mov
jge
cmp
lret
or
xchg
in
leave
jbe
stos
clc
cltd
sbb
ljmp
dec
stc
cmp
sub
add
add
xchg
into
insl
out
sbb
pop
stc
nop
sbb
push
clc
pop
std
mov
imul
xor
int
jae
movsb
repnz
mov
in
testl
jl
and
mov
mov
pop
insl
sub
loope
push
push
mov
out
iret
mov
add
out
adc
bound
mov
mov
adc
inc
rolb
int3
imulb
inc
dec
pusha
adc
test
cmp
and
xor
cmp
rorl
push
pop
mov
call
jle
push
out
dec
pop
repnz
pop
xchg
pop
fcoml
mov
stos
popf
mov
mov
mov
fcomip
xchg
cltd
scas
sbb
cmpsb
cmp
outsl
xchg
push
pop
pop
test
push
pusha
lods
je
cmp
and
xchg
sbb
jno
or
xor
test
stos
shrl
push
dec
das
and
out
push
out
or
fstps
cs
and
ljmp
stos
pop
adc
push
sub
jo
sbb
data16
aas
push
inc
xchg
fmull
pop
and
push
js
sbb
ja
add
dec
sbb
xchg
cmp
jnp
push
cs
in
xor
xchg
lds
adc
popf
inc
imul
call
dec
or
sub
mov
xchg
ficomps
into
out
cld
xchg
clc
test
cld
jecxz
fs
add
jmp
aaa
cmp
gs
add
adc
fmuls
pop
fadds
push
daa
cmp
scas
loop
mov
and
lcall
test
lods
adc
outsl
icebp
cmp
dec
xor
movsb
mov
clc
sub
pusha
or
lds
gs
dec
adc
jno
push
out
fildll
add
mov
and
sahf
hlt
cli
jle
pushf
aas
in
fs
popa
add
jno
je
xchg
mov
lock
repz
add
neg
adc
cmpsl
leave
pop
aas
scas
push
sti
daa
mov
jb
push
lds
or
cli
mov
icebp
call
and
cmp
jb
icebp
mov
lret
test
dec
bound
in
adc
mov
fsubl
add
add
inc
insl
push
pop
mov
jp
adc
sti
int
ljmp
mov
xor
jmp
test
xor
shr
out
aam
std
je
mov
sbb
mov
mov
mulb
xchg
lods
mov
fistpll
sub
insb
or
push
stos
fldenv
leave
stc
inc
or
adc
cmp
pop
cmp
sbb
or
push
pushf
shll
adc
xchg
gs
push
pushf
pop
pusha
ds
pop
lods
mov
dec
pop
enter
push
lods
repz
dec
sbb
cmp
xlat
push
fdivrs
mov
inc
mov
out
cmp
rorb
test
imul
inc
inc
sets
inc
bnd
loopne
jno
mov
mov
in
xchg
movsb
sub
mov
insb
mov
mov
or
ja
shr
pop
int
int3
add
adc
jno
cmp
call
aad
leave
jb
push
mov
movb
lret
sub
inc
call
inc
repz
push
jmp
scas
push
xchg
sub
push
mov
cmp
pop
hlt
xor
stc
imul
mov
pop
xchg
lea
imul
loope
mov
adc
mov
or
int3
shll
out
lods
ficomps
sub
mov
into
sub
jg
into
adc
push
mul
dec
inc
or
dec
scas
aad
cmpsl
push
pop
in
inc
lret
leave
dec
mov
mov
inc
or
test
xchg
das
lods
aam
cmp
or
lcall
punpcklwd
pop
pop
out
mov
in
mov
jecxz
nop
pusha
xor
pop
fcmovnbe
push
clc
dec
cwtl
das
adc
pop
sub
jmp
leave
jne
in
xor
or
imul
adc
mov
jecxz
xor
icebp
daa
dec
adc
sub
jb
sets
loopne
btc
jae
add
shrb
adc
fistpl
xchg
and
lcall
aam
into
push
icebp
xchg
jnp
jnp,pt
mov
ret
loopne
js
ss
mov
sub
rcll
rolb
repz
jbe
call
test
and
aaa
stc
pusha
dec
in
mov
dec
add
push
dec
pop
jle
sub
mov
ret
and
mov
pop
mov
jns
pop
cwtl
sub
rcrb
scas
pop
and
imul
adc
cmp
rorb
mov
int
insb
or
sub
xchg
pop
test
jge
enter
ret
pop
mov
push
xchg
fcomps
mov
mov
jbe
fs
daa
in
dec
mov
loop
mov
cmc
add
mov
fdivp
jl
iret
aad
js
adc
jl
sbb
add
mov
mov
dec
scas
xchg
sub
mov
lods
add
pusha
cs
in
jb
push
mov
rol
add
cmpsl
out
stos
push
rolb
lahf
lret
inc
aaa
adc
xor
icebp
popa
push
subl
mov
js
push
pop
test
loopne
sub
mov
cmpl
mov
add
leave
lahf
xor
es
pop
sub
jl
adc
xchg
cmpsb
xchg
sbb
xchg
or
adc
cmp
jnp
jp
punpckldq
fs
je
aaa
cli
push
add
push
mov
out
or
xor
xor
mov
sub
popa
cmp
or
pop
jge
pushf
adcb
lret
popf
repz
je
add
mov
jg
dec
sub
clc
jb
add
aaa
test
imul
push
xchg
stos
hlt
mov
sub
imul
rcll
or
pushf
dec
sbb
xchg
adc
js
je
sub
std
mov
pop
scas
dec
cwtl
xor
je
jbe
in
mov
cmp
sbb
pop
into
sti
sub
stos
push
ljmp
or
nop
enter
cli
adc
inc
sub
insl
pop
movsl
add
mov
add
xchg
int
pop
fmulp
or
xchg
icebp
inc
dec
jb
and
ret
jl
das
push
mov
js
call
int3
xor
jns
dec
xchg
popa
add
out
std
test
add
pop
mov
push
ss
pop
addr16
push
pop
xor
pop
daa
adc
cmp
sub
mov
adc
inc
sub
pop
dec
push
testl
lea
inc
jmp
loop
jbe
sub
insb
cmpsb
inc
xor
leave
into
add
adc
jne
inc
repz
cs
loopne
test
rol
sarl
mov
pop
adc
jb
negl
sub
inc
int
int
mov
and
notb
mov
or
push
cmp
jb
insl
and
xchg
popf
mov
dec
loopne
push
sub
sbb
pop
fst
xchg
push
imull
cmp
sub
gs
mull
mov
addl
push
xchg
jb
mov
add
mov
dec
int3
mov
pop
out
test
clc
add
dec
jno
ja
enter
icebp
cmp
pop
mov
push
jo
movsl
das
lods
rorl
dec
pop
jnp
mov
inc
dec
sub
mov
xor
jns
popa
mov
inc
nop
push
cwtl
ret
xchg
and
xchg
outsb
cmpsb
mov
xor
je
shlb
pop
push
pop
pop
and
pop
xor
jo
jmp
cmp
mov
cmp
iret
add
mov
inc
adc
adc
mov
gs
xorl
mov
loop
arpl
call
std
fstpl
rcrl
add
pushf
insb
out
pop
mov
shrb
mov
clc
xchg
add
loopne
nop
sbb
int3
xchg
adc
sbb
xchg
pusha
xor
mov
add
jb
dec
es
inc
jno
inc
jnp
lret
mov
shlb
in
cwtl
push
xlat
inc
and
add
outsb
xchg
stos
push
mov
sbb
mov
xchg
lcall
daa
or
sahf
test
mov
ret
mov
push
mov
ret
setb
sub
popa
cmp
and
jno
add
fstpl
xor
mov
mov
outsb
cmc
fsubp
pop
int
je
dec
xchg
sahf
mov
out
cmp
xor
sahf
mov
ja
dec
pop
stos
js
mov
inc
nop
cwtl
push
outsl
test
dec
loop
mov
dec
sub
loope
push
xchg
adc
pop
dec
xlat
sbb
push
add
mov
nop
jae
fmull
add
out
arpl
repnz
adc
data16
mov
xchg
mov
std
xlat
out
pop
out
movsl
sub
xor
stc
fidivl
jmp
lret
in
add
pop
inc
inc
or
pusha
push
add
shll
sti
and
push
jnp
rcr
shl
jmp
xchg
insl
pop
lods
mov
jbe
scas
fs
insb
test
dec
jg
std
mov
or
outsl
cs
jns
fisttpl
add
cmp
sbb
xorb
fisubs
or
shll
bound
jno
nop
push
cwtl
in
mov
mov
mov
lret
dec
xor
repnz
nop
idivl
sbb
or
jmp
pushf
pop
rorb
sub
inc
pushl
aaa
test
into
xlat
jnp
rol
ljmp
xor
pusha
mov
ss
lods
adc
ss
mov
daa
icebp
and
icebp
sub
filds
add
shll
or
stos
mov
insb
dec
movsl
cmc
repnz
inc
stos
dec
inc
push
imull
inc
push
jnp
aad
negb
out
cmp
aaa
pop
xchg
pop
push
out
add
cmp
test
cmpsb
std
mov
out
sub
pop
stc
out
sbb
popl
gs
lea
mov
lods
push
stos
pushf
lods
jp
push
lods
dec
das
test
mov
stos
scas
add
or
les
lret
ds
lret
ret
repz
jne
fisubrs
sub
je
iret
adc
ss
cmp
int
adc
add
int3
int
fstp
adc
cld
jne,pt
cmp
push
push
jbe
dec
push
mov
mov
icebp
into
mov
pop
push
jmp
dec
push
jbe
push
push
into
cmpsb
test
pop
xchg
sbb
or
jnp
outsl
xchg
cltd
insl
and
scas
fdivp
daa
popa
popa
mov
adc
add
ja
push
sbb
mov
repnz
cmpl
lcall
sbb
mov
pop
mov
add
loope
aad
cmpsl
cwtl
jno
sub
fcompl
pushf
ss
add
or
fstl
push
cmp
push
fsubs
sub
push
mov
mov
outsl
push
pop
push
sahf
adc
hlt
pusha
push
arpl
es
cmpsl
inc
fsubrl
inc
pop
rorl
andl
inc
lock
sbb
jmp
add
cmpsl
or
sub
xchg
push
or
movsl
out
jle
ds
pop
and
xor
cmp
mov
test
incb
mov
push
std
mov
adc
aad
outsb
xor
imul
je
mov
fidivrl
push
clc
out
xor
aas
mov
jns
dec
sbbl
push
push
sub
fsubs
sbbb
pop
lods
inc
and
pop
call
nopl
xchg
push
out
or
enter
sbb
mov
and
inc
js
lds
dec
test
in
sub
adc
push
outsb
fs
push
cli
dec
jge
mov
xchg
xor
xor
cmpsb
lods
icebp
sbb
stc
lcall
rolb
adc
and
or
cvtps2pd
inc
jb
mov
jle
xchg
mov
ljmp
or
xor
push
push
loope
nop
ret
sbb
sbb
adc
sub
mov
daa
jae
or
test
aam
push
jmp
inc
out
jmp
scas
and
stos
test
pop
push
adc
imul
push
out
mov
bound
mov
mov
ja
mov
jns
insb
push
je
fs
cmpl
popa
sbb
lret
sub
mov
movsl
vmwrite
dec
push
sbb
pop
repnz
xchg
push
outsl
adc
out
and
lods
xor
pop
loop
jecxz
jne
mov
shll
fildll
xchg
movsb
jg
repz
arpl
sbb
cli
bound
mov
push
dec
aad
mov
add
jbe
test
xor
mov
push
into
movaps
int
ret
rolb
fucom
aaa
popl
or
rorb
or
mov
movsb
jecxz
mov
loope
sti
jnp
rcrl
jl
cltd
out
sbb
mov
cmp
imul
add
aam
sahf
fimuls
cmpsb
jmp
cwtl
sub
into
sti
mov
xor
mov
test
sahf
sahf
jp
xor
jecxz
fucomi
cs
cltd
lods
or
push
mov
rcr
arpl
lds
hlt
std
leave
xchg
fidivrs
fsubl
arpl
push
in
inc
int
fsubrs
jbe
mov
negl
jno
push
call
test
push
ds
push
pop
xchg
cli
movsl
push
cs
pop
sub
mov
in
nop
negb
out
inc
test
or
test
xchg
and
divb
out
sbb
pop
jae
dec
int3
jle
jge
pop
lock
pop
dec
mov
xchg
in
add
pop
sbb
inc
xor
or
popa
push
push
fs
push
cmp
lds
lret
dec
jb
inc
lcall
fs
mov
jmp
xchg
jecxz
cmpsb
popf
mov
fmul
repz
or
dec
add
fildll
xchg
int
mov
mov
or
mov
ffreep
in
mov
dec
sub
les
add
aas
mov
fcompl
cmp
cmp
ja
iret
addr16
push
leave
and
mov
sahf
pop
mov
roll
jl
test
mov
or
pop
test
mov
fistpll
mov
fsubrs
or
cs
mov
leave
mov
faddl
mov
xlat
sbb
sub
fstpt
mov
cld
inc
push
and
adc
adc
xchg
jb
lds
nop
dec
adc
arpl
fstpl
clc
fstpl
ds
cmc
pop
fistpl
inc
jge
push
xor
int3
push
and
sbb
insb
xor
xorl
bound
imull
iret
jmp
js
aam
aad
mov
and
adc
mov
insl
xor
test
pusha
bound
xchg
cmp
or
jns
lds
nop
lret
xchg
loopne
sbb
sbb
xchg
leave
jo
test
ficompl
mov
xor
imul
pop
mov
addr16
jp
jae
dec
les
ds
mov
cmp
lret
xchg
mov
push
repz
jo
shrb
or
xor
sub
ret
dec
lods
enter
mov
cmp
inc
jg
push
cmpsb
mov
sub
jge
mov
fbstp
pop
jo
idiv
jle
adc
push
test
sarb
mov
test
inc
mov
idivb
cmpsb
mov
clc
dec
jp
add
cmp
cmpsb
cmc
xor
shrb
fiadds
mov
leave
inc
subb
jecxz
dec
push
pop
cmp
rcll
mov
or
cmp
repz
xchg
loope
cmp
adc
or
and
icebp
dec
cmc
arpl
or
cld
mov
out
jp
or
aaa
repnz
add
in
xor
fs
jbe
jmp
mov
push
adc
xchg
and
popf
sarb
nop
jecxz
cmpsb
mov
cwtl
xor
adc
lock
out
adc
ja
jmp
push
push
dec
jge
lods
push
pop
sbb
test
mov
jbe
arpl
xchg
imul
pop
clc
sbbl
fmull
sub
aam
aaa
ja
fmuls
mov
cmp
cmp
sti
inc
dec
popf
mov
loope
adc
ret
popa
sbb
jnp
rolb
lret
cmp
daa
subl
iret
lods
ss
leave
fbld
sbb
dec
filds
out
add
sub
rorb
xor
or
frstor
and
mov
sbb
loopne
dec
sub
push
xchg
dec
stos
cmp
fiadds
inc
test
outsb
cmc
adc
xchg
stos
int3
fldcw
mov
aam
arpl
loopne
dec
out
sbb
mov
inc
test
outsl
ljmp
adc
pop
aam
das
popf
push
mov
xchg
dec
shl
dec
push
cmp
dec
pop
shl
or
pushf
pusha
mov
cmc
inc
pop
sbb
mov
cltd
iret
into
clc
test
popf
in
sub
jnp
pop
pop
hlt
incb
adc
dec
mov
popf
mov
mov
test
adcl
dec
jno
sbb
xchg
fs
dec
dec
sub
sarl
popf
test
mov
outsb
fisubl
icebp
shlb
xor
mov
xchg
std
aaa
xor
pushf
adc
out
push
inc
repz
int
jb
xchg
adc
xchg
mov
xor
rclb
fstps
pop
incl
jp
scas
repnz
cmc
addl
pop
cmp
test
pop
mov
ss
pop
adc
push
ret
mov
ja
pop
cmp
lds
jge
ljmpw
or
outsb
mov
data16
out
jne
jb
dec
sbb
scas
push
out
out
sub
les
stos
out
jg
sub
call
mov
sub
lods
xor
or
mov
int3
sbb
xor
lea
mov
addr16
and
data16
es
mov
fisttps
pop
or
push
lahf
and
icebp
mov
cmp
aaa
xchg
inc
add
cmp
add
shlb
mov
mov
pop
push
jne
mov
leave
cmc
xlat
fisubrl
sbb
xor
out
hlt
push
hlt
popa
repnz
jnp
in
dec
or
sbb
push
packuswb
add
enter
mov
pushf
adcl
rcll
enter
xor
orl
mov
mov
cmc
ficompl
lods
ud0
outsb
ret
stos
mov
mov
movsl
and
add
adc
in
cmp
dec
mov
pop
sbb
xchg
add
ljmp
gs
mov
fdivrp
mov
inc
and
icebp
or
bound
cs
test
bound
cmp
xchg
dec
icebp
xchg
ss
ret
xchg
mov
inc
mov
test
cld
cli
jle
aaa
scas
or
jae
cmp
cmp
dec
mov
ja
mov
imul
xor
hlt
mov
push
mov
sti
adc
testl
call
and
bound
aaa
push
loop
xchg
mov
lret
stos
rorl
roll
ret
push
sbb
xor
and
das
jne
sub
xchg
insl
or
mov
dec
lods
xchg
dec
stos
cltd
and
cltd
das
jl
pop
xor
mov
mov
and
mov
popa
rcrl
or
mov
les
sbb
out
movsb
popl
iret
or
fcompl
leave
add
cmp
adc
jecxz
notb
repz
xor
dec
fcomi
fstps
leave
dec
pop
mov
dec
iret
mov
xchg
cwtl
or
or
jecxz
mov
mov
sbb
out
scas
jne
pushf
imul
sbb
pop
ret
into
idivb
addr16
das
loop
imul
sti
inc
repz
mov
mov
mov
cmp
std
ret
dec
inc
inc
mov
fwait
inc
sub
push
mov
pop
jecxz
mov
lcall
and
mov
push
fucomip
mov
cli
push
jge
push
outsb
test
mov
xor
pusha
fistps
cmc
jno
xchg
and
rclb
xchg
in
add
jp
pop
jnp
loop
inc
dec
mov
lock
cmp
pop
adc
cmp
ret
addb
pop
pop
out
sbb
outsb
adc
xchg
outsl
push
jge
sbb
into
mov
dec
lret
daa
jmp
mov
jg
mov
inc
shl
test
aas
rcrb
xor
jg
fs
imul
mov
aaa
or
pop
pminub
pop
into
dec
add
mov
mov
lea
test
xlat
mull
jbe
inc
loope
adc
rolb
rcr
inc
push
adc
adc
cwtl
sbbb
sub
hlt
scas
ss
and
ss
push
xchg
ljmp
push
mov
inc
stc
data16
aad
push
pop
cld
xchg
adcl
les
push
lds
push
movsb
test
jnp
jp
stc
sub
cli
ret
pop
jmp
imul
dec
pop
hlt
pop
icebp
xchg
sbb
clc
xchg
in
fildl
pop
inc
sbb
inc
add
imul
inc
insb
push
cmp
fxsave
dec
push
loope
mov
sbb
ret
sbb
adc
mov
dec
aaa
int3
stos
into
and
sahf
xchg
adc
xchg
repz
add
addb
insl
icebp
mov
xchg
xchg
add
dec
jg
in
push
sbb
jbe
push
test
fisubrs
aaa
popf
popa
add
test
adc
push
pop
push
xchg
xor
frstor
mulb
icebp
xor
push
adc
cmp
inc
dec
mull
and
jle
sub
xchg
push
dec
inc
outsb
cmp
ds
lcall
int
push
mov
push
clc
xor
mov
push
or
fidivrl
in
inc
push
mov
pusha
push
test
adcb
sbb
ss
fsts
mov
ret
xchg
xor
sbb
test
imul
cltd
shll
xor
enter
cs
add
pop
outsl
test
mov
jne,pn
jecxz
pop
and
sub
rcrb
filds
mov
and
inc
enter
nop
sub
add
mov
fistps
es
cmpl
dec
call
mov
pop
add
dec
push
popf
push
movsb
pop
pop
lods
out
aam
rcll
and
sbb
jl
cli
scas
ret
dec
bound
sub
sar
cmp
mov
call
xorb
pop
bound
ljmp
shlb
and
shlb
push
mov
xor
outsb
adc
ss
push
shll
ret
inc
shrb
jecxz
ljmp
pusha
insb
add
xchg
cli
std
out
and
cli
pop
adc
popa
in
aam
mov
push
adc
xor
jge
int3
shr
sub
lahf
imul
scas
jae
xor
rorb
out
les
dec
xor
mov
sbb
imul
jb
js
mov
inc
es
cmp
popa
test
push
jecxz
pop
hlt
dec
lods
sbb
out
sbb
mov
push
mov
mov
xchg
ret
xchg
mov
mov
orl
data16
adc
push
ljmp
cmp
mov
in
gs
or
inc
push
xchg
ljmp
call
nop
data16
mov
lahf
test
cmp
dec
mov
add
shrb
adc
repnz
rcrb
nop
insb
sub
jle
xlat
popf
lods
mov
jmp
shrl
xor
test
cmp
mov
in
mov
call
push
rorl
cmp
out
push
lods
jnp
mov
lret
sub
xchg
dec
hlt
ret
fs
movsb
repnz
dec
js
andl
lock
mov
push
pop
sbb
pop
or
jns
cs
mov
add
test
movsl
adc
xchg
pop
mov
xor
shrl
ja
repnz
imul
inc
adc
pop
mov
jg
jo
xchg
sbb
mov
lret
sahf
xchg
aaa
nop
mov
adc
adc
and
xor
in
push
mov
cltd
mov
inc
test
push
mov
add
cwtl
out
mov
or
dec
push
lds
inc
nop
xchg
lock
aas
lock
or
and
pop
sub
icebp
add
mov
call
loop
jl
mov
lods
pop
xchg
add
push
arpl
pop
sbb
in
addb
cmpsb
es
xor
sbb
imul
xor
xor
dec
sahf
inc
cmpl
test
inc
push
xchg
je
mov
loop
popa
ds
push
push
ret
add
cmp
sbb
jno
scas
xchg
js
xor
icebp
sbb
cmp
jg
and
lret
lods
inc
dec
mov
movsl
in
pop
cmpsb
sbb
dec
jecxz
out
xchg
push
ret
out
mov
sbb
lock
loop
hlt
int3
sub
sub
clc
call
popf
sahf
idivl
add
jg
sub
testl
adc
movsb
jo
lcall
lods
or
and
outsb
jae
sub
lock
jne
xchg
mov
or
insl
sub
icebp
xchg
inc
jge
ja
lcall
fcmovnbe
divl
inc
xchg
mov
jle
mov
inc
xchg
iret
push
xor
pusha
add
das
inc
sbb
out
and
jne
dec
dec
les
rcrb
aad
jb
dec
push
les
andl
stc
fildll
sub
xchg
xor
test
sub
jo
adc
sahf
add
sub
in
sbb
push
out
jge
add
jno,pt
sti
push
jb
xchg
aad
into
outsb
add
jmp
in
mov
pop
sbb
popf
sahf
adc
pop
inc
ss
jl
lods
cwtl
inc
cmc
sahf
sub
mov
das
xchg
jb
cli
cmp
inc
sti
or
dec
and
xchg
int
jne
xor
call
jnp
in
imull
andl
push
lds
pop
xchg
mov
xlat
gs
mov
xor
pop
mov
lahf
cmc
jle
mov
aam
add
mov
rcll
mov
imul
mov
add
ljmp
mov
movsb
lods
lahf
aaa
dec
mov
ja
jae
xchg
and
and
xchg
js
test
adc
pop
mov
imul
lret
pop
jg
daa
push
cmp
lcall
out
jns
pop
xchg
lea
sti
rcl
aas
test
sub
icebp
addr16
cmp
inc
std
cltd
xchg
sbb
lock
xchg
xchg
cld
das
mov
cmp
nop
pushf
mov
iret
cwtl
add
fcmovne
push
jo
call
jne
insb
mov
in
dec
sbb
inc
pop
mov
xchg
jg
or
stos
xor
mov
fs
add
push
push
sbb
pop
shrb
pushf
nop
or
dec
aas
lock
shll
cmp
test
cmp
cli
dec
clc
test
int3
push
push
or
push
jg
dec
sbb
test
mov
xchg
mov
push
test
lret
jge
dec
dec
imull
popf
push
jns
mov
adc
clc
add
icebp
sbb
shl
cmpb
rol
mov
push
dec
dec
mov
aam
pop
lea
outsl
adc
test
dec
jo
xchg
int
sub
jmp
jne
repnz
stos
imul
rorl
jge
repz
push
outsb
outsb
add
mov
ret
stc
sbb
ret
adc
scas
pop
notb
and
mov
adc
movsb
lahf
xlat
stos
inc
pop
insl
insl
mov
loopne
sahf
sahf
aad
and
mov
mov
fnclex
and
imul
push
cld
lahf
icebp
sti
js
cmp
mov
lock
jbe
pop
out
xor
out
ret
rorl
add
sub
xlat
call
inc
ret
andb
hlt
xchg
or
fstps
add
push
test
test
hlt
push
shll
mov
rcr
add
dec
xchg
jle
xor
xchg
outsb
dec
repz
push
sti
xor
or
adc
cmp
xchg
sub
xor
push
hlt
jl
mov
dec
cmpsl
push
lods
inc
dec
sbb
lea
cmpsl
cld
and
mov
lea
xor
xchg
xor
jge
fiaddl
jl
mov
sbb
repnz
xor
in
dec
mov
addb
pop
sbb
stos
cld
imul
add
scas
sbb
negl
push
mov
imul
cmpb
mov
push
and
sub
mov
repz
push
data16
nop
out
pop
dec
sub
sbb
arpl
in
adc
aas
mov
lahf
icebp
lret
xchg
fsubrp
mov
mov
cli
addr16
push
xchg
in
sbb
sub
or
rclb
or
cmpsb
pop
lods
outsb
enter
sub
gs
lret
ja
fs
inc
mov
adc
adc
mov
pusha
shrl
add
lock
out
arpl
shlb
jmp
inc
xchg
push
daa
inc
push
push
or
pop
test
lods
leave
mov
dec
sbb
jbe
aad
ljmp
dec
imul
fucomip
sub
push
insb
js
jno
cmp
std
mov
out
cmpsl
xor
mov
loopne
mov
jbe
push
dec
testb
pop
in
lods
outsb
subb
mov
faddl
popl
cmc
mov
sarb
test
push
test
in
les
dec
sub
push
icebp
lret
and
mulb
xchg
sub
sub
leave
and
pop
fstpt
jno
lcall
shll
psllw
in
inc
loop
dec
scas
xchg
jl
sbb
js
popa
xchg
mov
xchg
pushf
cmpsl
push
push
fwait
push
inc
cld
cltd
jne
cld
jb
push
mov
or
insb
xor
push
movsb
sbb
jge
inc
js
mov
stos
or
cmp
repnz
es
lahf
movl
inc
xor
daa
jnp,pt
ljmp
push
inc
mov
lods
cltd
add
or
mov
xor
mov
mov
shl
sbb
lahf
mov
mov
push
xchg
jns
or
cs
mov
xchg
cmc
mov
fistpl
insl
push
ja
sbb
test
jb
or
movb
inc
data16
cwtl
iret
mov
mov
xchg
cmp
dec
xchg
aam
jmp
inc
pusha
mov
xor
gs
jnp
jmp
popf
lods
aas
cld
xchg
fildll
ljmp
sarb
or
lock
fisubrl
mov
sahf
das
sbb
cs
xor
or
cmp
lods
add
push
push
scas
mov
and
les
push
dec
ss
in
insl
ret
or
repz
lods
shr
push
jecxz
sub
and
mov
gs
mov
sbbb
mov
lds
fwait
sbb
mov
jns
xchg
push
sbb
das
mov
or
lcall
aas
pop
subl
mov
inc
sbb
add
cmp
test
in
adc
inc
inc
cwtl
stc
movsl
cli
fcoml
shll
dec
mov
mov
mov
cwtl
and
outsb
jae
jo
stc
call
pop
mov
mov
cwtl
aas
fidivrl
jnp
mov
jnp
clc
xchg
pusha
inc
xchg
xchg
lock
mov
pop
mov
lock
xchg
xor
or
or
inc
inc
mov
add
lods
xchg
iret
jb
pop
mov
out
and
fcmovu
jnp
in
push
ret
divl
pop
stos
push
daa
xchg
push
loope
jnp
jge
add
and
leave
mov
sub
push
xor
rolb
xchg
or
mov
les
rol
push
xchg
push
and
mov
sti
push
testb
or
iret
lcall
sbb
dec
clc
pop
cmc
add
stos
pop
push
push
out
std
mov
stc
test
add
jo
mov
addr16
or
inc
lea
xor
or
mov
inc
cmpsl
push
notl
or
adc
jmp
sub
aaa
jo
pop
xchg
xorl
xchg
aaa
out
and
xor
test
aad
call
xchg
mov
rorl
xchg
mov
mov
cwtl
mov
ja
or
inc
aaa
loop
mov
dec
mov
fwait
add
sbb
insl
jmp
sub
xor
add
cs
rorb
stc
xor
sbb
adc
shll
jmp
mov
fsubr
popa
mov
fsubl
push
iret
loope
dec
sbb
inc
inc
push
jecxz
outsl
adc
jb
jmp
popf
aas
test
adc
and
mov
or
xchg
sbb
mov
int
lds
fsubrp
mov
iret
adc
push
repz
mov
aas
xchg
ss
jne
sbb
mov
leave
inc
loop
in
fcoml
lea
push
add
push
out
movsl
aas
stc
sbbl
xchg
out
lods
mov
fldenv
sbb
into
jecxz
js
add
shll
ds
xchg
popa
mulb
out
add
mov
sub
popa
inc
adc
pop
inc
mov
jg
fimuls
pop
mov
fdivr
add
stos
xlat
cmp
xchg
rol
test
out
lcall
mov
cmp
mov
hlt
mov
ss
inc
mov
addr16
mov
icebp
dec
loopne
fiadds
jle
dec
jo
dec
and
adc
jmp
std
push
push
movsl
adc
pushl
adc
jns
sub
lahf
mov
mov
xor
into
enter
iret
aas
add
lods
push
sbb
lds
lock
rorl
ja
in
xlat
std
mov
jnp
repz
imul
rcll
sub
loopne
xor
cli
cmp
inc
mov
sub
mov
outsl
dec
movsb
jo
jle
in
lret
mov
cmp
movsl
jg
and
in
popf
push
enter
lret
xor
mov
xchg
movsb
mov
push
push
cmpsl
push
pop
outsl
xor
aam
jecxz
pop
cmpsb
test
iret
inc
jg
rcrb
ret
xor
jo
inc
scas
and
pop
aas
jae
adc
and
adc
scas
je
outsl
nop
pop
std
inc
arpl
into
fbstp
mov
pushw
imul
lock
movsb
fwait
sub
je
in
cmc
adc
mov
mov
push
push
add
loopne
pop
adc
pop
mov
adc
lcall
xchg
lret
fimuls
xchg
addb
xchg
xchg
movb
loop
jns
cmp
inc
aas
and
cltd
jge
jp
mov
fisttps
pop
sbb
jg
jmp
ljmp
call
cmp
outsb
xor
aad
sbb
dec
mov
int3
adc
lret
imul
cmpsl
mov
data16
add
add
dec
js
push
cmp
iret
mov
sbb
ss
and
dec
jbe
add
mov
and
pop
inc
jmp
sub
popa
xor
xchg
aad
fwait
push
push
dec
div
inc
cs
stos
pusha
clc
and
push
repnz
jle
push
pop
jae
push
pop
aam
mov
and
insl
inc
bound
xor
inc
jno
pop
inc
insb
imul
pop
mov
adc
jl
aam
or
jmp
lea
push
xchg
push
movaps
pop
jle
frstpm(287
les
sarb
adc
push
xchg
imul
xchg
sub
cmc
data16
shld
dec
std
cmp
test
out
scas
add
push
sbb
mov
nop
sub
push
sub
mov
xor
jmp
leave
aad
push
mov
bnd
dec
add
or
inc
ljmp
sub
mov
iret
loope
push
popf
loope
fimuls
add
jno
fs
ret
cmpsl
dec
int
or
nop
test
inc
outsb
adc
cmpsb
lret
adc
add
jne
outsl
je
pop
push
xchg
cld
jle
sbb
in
add
ficoms
push
adc
push
lret
bound
and
popf
sbb
int
clc
ja
xchg
pop
sub
imul
xchg
leave
adc
sbb
jle
pop
mov
mov
mov
jae
push
add
bound
in
sub
cli
jo
pushf
test
xor
mov
frstor
push
popf
inc
shll
mov
inc
movl
stc
scas
mov
add
xchg
xchg
rorb
les
test
sub
mov
mov
test
cmpsb
cmp
mov
cmp
xchg
rcrb
outsl
push
mov
adc
sbb
mov
test
je
mov
js
ret
fadds
andb
xor
adc
stc
into
outsl
pushf
in
daa
inc
sub
in
cld
mov
sbb
popf
inc
push
fiadds
cld
nop
in
mov
aad
movsl
fwait
xlat
popa
and
int3
aad
xchg
mov
fwait
imul
push
push
jg
dec
and
adc
jmp
aaa
je
loope
popa
repnz
sub
inc
sahf
adc
popf
mov
dec
stos
aad
les
inc
push
ret
mov
xor
loopne
xor
add
icebp
pop
and
out
inc
or
pusha
idivl
xchg
ret
or
adc
pop
shll
sbb
test
lret
ljmp
shlb
sbb
xor
mov
pop
mov
mov
push
mov
add
pop
das
fwait
adc
aad
or
cld
ja
mov
jbe
add
adc
dec
sub
rcrl
jnp
push
popa
adc
jle
das
fcoms
ret
sub
jmp
jbe
jb
sti
jae
in
movsb
test
ret
push
push
leave
cmpsl
add
pop
int
pusha
add
mov
mov
cld
mov
andb
pushf
xor
fs
push
icebp
in
jp
test
pushf
lods
jmp
inc
scas
mov
addb
push
and
or
das
fs
jb
dec
push
shll
pop
jae
sub
pushf
mov
test
cmp
add
lods
push
mov
jbe
or
xor
adc
cmc
cmp
and
test
shr
je
mov
aas
ret
andl
into
inc
inc
clc
test
enter
cmp
and
jmp
es
ret
sbb
daa
lahf
cmpsl
ljmp
add
lret
or
pop
adc
lret
daa
movb
jmp
cli
mov
cmpsb
in
out
dec
xlat
sti
insl
movsl
les
pop
cmp
ret
aam
gs
repz
mov
cmc
cmp
sbb
cwtl
mov
fucompp
mov
rcr
xchg
ficoms
es
stos
mov
mov
or
bound
lret
xchg
cmp
movsb
aaa
rorl
cmp
adc
adc
or
inc
lret
leave
gs
sub
mov
aaa
ret
loope
and
enter
out
mov
fwait
xchg
cmpsb
and
mov
movsl
mov
jl
adc
xor
sahf
shrl
cmpsl
sub
jns
jmp
pop
mov
repnz
push
xchg
or
add
out
sub
in
stos
xor
repnz
pop
shlb
xor
mov
cmp
data16
pop
or
and
test
mov
cmp
popa
imul
mov
inc
repnz
push
pop
xchg
mov
xchg
scas
repz
sub
adc
sti
jbe
sbb
ljmp
sahf
frstor
or
xchg
test
js
pop
fstpt
ds
mov
mov
jecxz
ja
loopne
xor
dec
or
es
xchg
xor
cli
xchg
mov
jmp
mov
sub
test
mov
pop
inc
sub
xor
adc
imul
mov
test
icebp
les
inc
dec
mov
aaa
clc
xchg
cli
push
jecxz
hlt
fnstcw
mov
outsl
mov
stos
lods
in
je
cltd
lahf
cmp
imul
rorl
ds
add
add
dec
sub
adc
xchg
call
add
daa
das
rcrb
sub
in
enter
or
jg
jne
sbb
int3
mov
sub
loopne
dec
das
fstpl
dec
mov
in
fsubp
ljmp
lods
sbb
pushw
lcall
in
repz
enter
loop
insb
xacquire
test
sbbb
loop
adc
mov
jb
add
out
xchg
faddl
popa
mov
inc
add
mov
cltd
sbb
adc
out
sub
pop
or
cld
cltd
xor
push
sbb
mov
dec
into
pop
xor
mov
scas
sbb
pop
or
movsb
dec
add
cs
imull
push
iret
pop
push
mov
js
cmpb
call
mul
sub
jno
cmpsl
clc
repz
mov
mov
xchg
fcomi
sahf
mov
iret
scas
cmp
jae
or
fnstenv
sbb
push
movzbl
imul
inc
cmp
sahf
fisubrs
adc
push
fwait
cmpsl
mov
xor
cwtl
dec
js
mov
xlat
mov
mov
mov
leave
mov
icebp
sarb
mov
lock
jae
call
push
clc
pop
test
adc
cmp
xchg
sbb
sbb
lods
xor
ja
aaa
and
jmp
mov
cmp
out
or
pop
fisttpll
pop
fwait
into
fimuls
add
shlb
gs
pop
push
std
xlat
mov
ljmp
lea
sub
push
add
shlb
call
adc
cmp
in
push
mov
xor
xorb
jp
ret
aad
sub
adc
cmc
lea
in
shlb
mov
ds
cmp
push
les
sti
sub
or
mov
jno
mov
mov
cmp
lods
mov
call
in
cld
jl
push
push
ss
test
fs
les
push
adc
push
sti
dec
xchg
xchg
nop
push
pavgw
and
and
pop
mov
movsb
cmp
add
inc
shl
xchg
sbb
ljmp
add
mov
pop
add
xor
mov
js
daa
test
movsb
xor
xchg
rcrb
cmpsb
test
sub
in
imul
xorl
test
adc
fistps
in
lret
out
adc
movsl
test
and
mov
push
jb
es
pop
pop
rol
sahf
add
sahf
popa
data16
adc
test
pop
test
loopne
adc
es
repz
push
ds
adc
popa
dec
movsb
in
jl
xchg
dec
inc
mov
rcrb
cmpsl
jnp
pop
mov
mov
mov
xchg
cmp
test
push
push
jp
mov
cmp
cmp
hlt
push
int3
les
xor
inc
pusha
sub
push
push
out
data16
shlb
in
xchg
cltd
jmp
cmpsl
jmp
mov
jge
pop
lods
fistpll
arpl
push
push
dec
jle
faddp
and
call
jae
mov
cmp
int3
popa
icebp
push
int3
pop
in
call
inc
cli
sbb
es
les
inc
jns
flds
jns
ja
ficomps
mov
mov
test
in
imul
pop
movsl
fisttps
popf
lret
inc
dec
pop
test
jno
sahf
xor
je
daa
mov
nop
insl
ret
push
sub
nop
aam
lea
cmp
aaa
jb
mov
mov
mov
xor
std
aad
pop
and
movsb
or
pop
fldt
sbb
inc
sub
mov
iret
dec
call
adc
push
cwtl
jecxz
xchg
aam
pop
int
cmp
or
ret
dec
stos
call
or
inc
lods
test
lea
xchg
push
scas
rep
cs
push
dec
sbb
ffree
or
adc
jmp
cmp
push
outsb
or
test
cli
push
into
mov
movsl
lea
aas
jmp
jo
push
or
pop
icebp
std
inc
stos
rorb
push
pop
jg
mov
sbb
andl
dec
lds
jle
cltd
sti
xchg
addb
and
cld
and
jo
xor
int
test
mov
lret
leave
lea
test
xchg
jge
frstor
mov
pushl
repnz
dec
lcall
pop
adc
mov
jle
lods
leave
lock
sahf
sbb
dec
jmp
sub
in
lret
jae
es
fistpll
rolb
in
movsl
dec
les
nop
push
pop
dec
adc
ret
pop
mov
sub
push
std
sbbl
and
jb
and
cmpsl
lret
cmpl
mov
scas
push
mov
xchg
jae
ret
imul
push
pushf
pop
bnd
jbe
aas
jno
scas
xor
mov
lcall
pop
lea
cmp
dec
push
arpl
and
xor
int
push
adc
in
pop
push
frstor
pushf
cmpsl
aad
mov
repz
push
mov
shrb
iret
dec
outsl
mov
cwtl
movsl
frstor
pop
lahf
sbbb
mov
lds
and
insl
in
sahf
imul
pop
js
das
xor
popa
inc
lods
dec
jp
jmp
andb
stc
cltd
fs
mov
nop
add
mov
aaa
andb
or
sub
lock
les
clc
mov
dec
insl
mov
les
push
dec
xor
push
rcrb
inc
pop
push
fwait
xchg
mov
scas
fidivrl
push
sub
fdivr
sbb
gs
or
mov
or
es
addr16
cmp
mov
not
mov
jecxz
ja
xor
mov
fsubrp
ret
js
les
mov
dec
dec
fildll
adc
pop
inc
and
loop
test
or
aam
pop
loopne
mov
mov
mov
cmpsb
rcrl
jbe
jmp
cmc
push
mov
and
lea
je
call
sbb
mov
mov
adc
push
sahf
lcall
mov
jp
pop
ljmp
neg
scas
dec
xor
mov
xor
mov
cmp
pop
dec
pop
and
xor
outsl
ljmp
jae
xchg
xor
lods
xlat
sub
mov
adc
adc
cs
hlt
or
inc
ds
nop
jle
sbbb
or
out
out
cmp
push
pop
stc
ret
cmpsl
idivb
or
or
int3
fldenv
push
inc
repnz
insb
and
call
arpl
jge
repnz
stos
js
and
int
lods
pop
dec
jno
arpl
xchg
incl
loope
or
push
pushf
fdivp
in
sbb
fwait
gs
mov
into
mov
mov
lea
sti
push
pop
jp
outsl
out
rcpps
mov
pusha
sub
loope
mov
pop
popa
mov
xor
test
lcall
fdivrp
dec
sub
imul
sahf
loop
sbb
test
stc
aas
arpl
dec
jmp
leave
xor
mov
add
or
sub
jmp
xor
xor
jp
xchg
cmp
bnd
test
push
jg
mov
scas
mov
or
cmp
in
jae
rorb
test
xor
inc
jecxz
push
pop
out
adc
lods
jo
mov
inc
mov
pop
stos
gs
not
lret
and
orl
dec
sti
dec
fsubr
mov
mov
lods
ljmp
jg
fisttpl
imul
dec
sahf
push
cmp
xchg
or
mov
sub
adc
cmp
jg
ljmp
mov
jge
mov
pop
jg
idiv
or
sbb
punpckhdq
mov
adc
test
xor
push
out
adc
pop
imulb
push
out
push
xor
enter
les
add
bound
bnd
hlt
popa
push
xchg
ja
rclb
dec
xchg
fistps
pop
std
out
jle
push
std
dec
mov
ss
popa
mov
mov
pop
loop
pop
and
arpl
mov
push
pop
daa
xor
cmpsl
movsl
sbb
mov
shll
lods
out
test
and
mov
outsl
std
cmp
jae
aam
adc
push
repnz
mov
sbb
xchg
pusha
cltd
leave
or
call
lcall
inc
push
mov
lock
or
mov
xlat
jge
push
clc
add
pushf
xchg
in
sbb
push
xor
cli
aaa
xchg
test
dec
add
cmpsb
sbb
movsb
test
fidivrl
mov
mov
xchg
sahf
jg
jle
push
popf
jl
cmp
xlat
arpl
lods
dec
and
movsl
imul
or
loopne
jbe
sbb
inc
or
stos
jl
lcall
inc
jg
pop
sub
inc
push
loopne
sub
test
ja
push
and
ficomps
std
and
add
mov
outsl
cmp
or
test
inc
push
aad
or
imulb
xor
jns
mov
outsb
not
aaa
mov
dec
jbe
rcll
cmc
jge
je
nop
movsl
insb
aas
ss
dec
std
pop
xor
or
mov
and
cwtl
push
pop
mov
pop
daa
mov
ss
ss
dec
lods
mov
and
je
mov
jge
xor
enter
xor
lods
fmuls
lahf
les
and
mov
in
stos
mov
mov
mov
andl
aaa
cmp
sbb
sub
lock
call
stos
pop
push
jle
mov
mov
daa
cli
in
cmc
shlb
cs
add
jne
shr
ret
aam
hlt
and
into
scas
aaa
mov
xor
and
sbb
nop
sub
mov
cwtl
dec
mov
jl
push
or
add
inc
outsb
je
lds
loop
mov
xor
stc
shll
cld
cli
ret
add
movsb
int
in
fists
push
repnz
lcall
lret
shlb
int3
pusha
add
imul
sbb
rclb
mov
imul
xor
outsb
xchg
sbb
icebp
xchg
xor
mov
pop
iret
or
bound
sahf
sub
inc
cmp
push
idiv
jns
jp
int3
in
dec
aas
out
lods
dec
push
mov
push
push
cli
xlat
stos
and
mov
imul
cmp
loop
push
clc
lahf
cmc
sub
xchg
jns
icebp
push
imul
inc
fistpl
jmp
push
xchg
ret
mov
push
xchg
stos
imul
jb
add
ja
inc
fisubl
add
jae
xchg
dec
loop
outsl
mov
xor
iret
lea
pop
movsb
inc
mov
iret
int3
fiadds
push
in
fidivrl
adc
mov
jo
rcll
inc
test
mov
mov
arpl
sbb
aaa
lods
cmp
or
addb
mov
dec
cltd
xchg
jp
dec
pop
mov
mov
jo
out
in
clc
pop
test
pop
and
jmp
mov
ds
pop
test
je
aad
loope
jae
fdiv
pop
lock
and
jne
mov
mov
inc
xor
dec
mov
lea
add
or
mov
call
xlat
mov
cmp
imul
das
mov
mov
movb
jno
ds
mov
add
imul
loop
cmc
es
push
mov
imul
enter
mov
das
jnp
xchg
leave
in
sub
sbbl
adc
cmpsb
fstps
xchg
mov
fsubr
shlb
std
jae
mov
clc
jmp
jge
dec
pop
inc
mov
ds
test
fs
dec
cld
shlb
or
mov
js
arpl
sarb
or
pusha
int3
sub
jle
das
inc
add
and
iret
mov
insb
mov
jle
add
out
fcos
ret
andl
push
movsb
out
fcmovnbe
pop
in
mov
lods
imul
cmp
push
fsub
imul
bound
inc
pop
sub
push
xchg
imul
pop
mov
sub
lock
loopne
in
mov
mov
add
push
out
and
data16
rol
xchg
sbb
push
push
push
fdivl
pop
jle
add
xlat
xchg
mov
push
imul
or
xchg
push
leave
xchg
or
xor
xchg
inc
mov
push
or
xchg
push
adc
dec
pop
mov
mov
mov
jp
inc
push
xor
push
lds
mov
pop
cmpsb
lret
pop
leave
es
mov
pushf
in
pop
pop
cmp
jecxz
xlat
mov
out
imul
or
add
xchg
jle
imul
push
mov
push
xor
pop
dec
sbb
je
ret
sar
js
and
pmaddwd
loopne
movsl
inc
shlb
xchg
adc
stos
test
push
int3
xchg
add
mov
xchg
pusha
mov
js
lds
jecxz
xchg
in
adc
notl
loope
pop
mov
aam
sahf
stos
out
insl
repz
mov
jb
clc
mov
cmp
sub
notb
sub
and
or
pop
push
bnd
cmpsb
or
and
and
pop
sahf
ret
rol
cmc
fsts
xchg
movsb
add
or
test
repnz
sbbb
imul
cld
out
popf
add
popa
add
scas
fldenv
and
push
out
cmp
push
add
pop
mov
out
lcall
ds
jg
add
sti
cld
scas
mov
mov
aam
push
aas
jmp
aad
and
pop
xor
mov
dec
mov
mov
jae
cmpsb
loopne
xlat
pushf
sbb
or
cmp
outsl
cmpsl
ss
mov
and
pop
fdivs
lds
push
int
add
mov
rcrl
mov
insl
cwtl
cmp
or
and
insb
mov
repnz
add
arpl
pop
pop
lods
scas
jle
xchg
jb
and
fstps
push
adc
stc
and
dec
push
lahf
out
add
scas
cmp
in
xor
cmc
or
fimull
test
push
add
sub
mov
in
mov
test
shlb
add
popf
shl
sti
xchg
lahf
loope
mov
xchg
loop
ret
dec
aad
mov
insl
fistps
fidivrs
stos
leave
pusha
scas
xchg
dec
adc
mov
add
mov
bound
roll
xchg
scas
fdivs
xchg
cmpsb
loop
xchg
xchg
and
ss
test
push
out
iret
xor
xor
and
mov
push
sub
mov
psubusw
popf
mov
dec
mov
stos
mov
scas
xchg
outsl
cmp
scas
and
outsl
fistpll
shlb
sbb
lret
xchg
incb
cmp
sarl
sub
inc
jo
divb
mov
mov
and
xchg
je
fldt
outsl
inc
minps
sbb
idiv
xor
icebp
rclb
add
sbb
mov
pop
cli
mov
mov
pop
xchg
mov
mov
xchg
shlb
sbb
jae
ret
inc
imul
lea
mov
mov
dec
es
xchg
mov
ljmp
test
fimuls
mov
pop
cmpsb
hlt
popa
cmp
push
insb
sub
and
leave
shll
aas
jae
adc
add
xchg
mov
ja
sub
add
xor
adc
push
jo
push
pop
jmp
jmp
xchg
and
testl
mov
inc
cs
push
std
inc
inc
cpuid
cwtl
mov
js
ficoms
jge
push
addb
pop
or
push
pop
sahf
jp
loop
mov
aas
leave
xor
js
leave
dec
dec
cmp
enter
jl
in
enter
imul
rclb
fdivp
or
rorb
or
icebp
push
inc
lods
jg
jne
ljmp
pop
es
add
lcall
jg
pop
sbb
sub
sub
xchg
enter
stos
push
inc
add
out
sbb
push
mov
popa
sub
fisubs
mov
and
inc
in
shrb
rcr
or
inc
cwtl
scas
adcl
shlb
cwtl
push
jmp
inc
leave
adc
xchg
dec
jecxz
popl
addr16
mov
fucomip
popa
xor
fwait
mov
inc
loopne
xchg
lret
push
pushl
jbe
in
mov
shll
jl
pop
push
pushf
sti
or
push
mov
xchg
jle
mov
popf
mov
dec
loope
fmul
add
mov
push
mov
cmp
rep
loop
inc
and
cmpsb
aam
dec
fnstenv
cmc
pusha
out
mov
fnstsw
out
mov
mov
and
cwtl
mov
pop
das
add
adc
cmp
adc
xchg
xor
ja
add
outsl
add
inc
sub
mov
test
jecxz
aam
jge
jmp
jle
adc
int
stos
xor
push
xchg
loopne
insl
push
push
dec
dec
int
psubb
and
add
sbb
insb
pop
pushf
pop
fs
dec
and
fmul
adc
mov
cmp
adc
jae
pushf
push
inc
jo
xor
fisubl
jge
aam
pop
out
ficompl
add
and
je
xchg
mov
sbb
addr16
mov
adc
pop
add
adc
insb
jp
lcall
jo
and
scas
xchg
arpl
jb
rolb
push
in
ret
cs
and
mov
outsl
gs
testb
add
fdivl
mov
xchg
push
and
cmc
jecxz
test
or
fsubl
insl
pop
std
mov
xchg
ret
mov
insb
and
mov
aas
mov
popa
notb
mov
inc
cmp
jne
xchg
and
es
sahf
fiadds
subl
pop
clc
in
jne
jmp
xchg
adc
push
and
sbb
popf
cmc
xchg
push
dec
rcr
ss
rorb
addl
jp
pop
adc
out
aaa
enter
shl
sarl
int
cmp
pop
or
dec
jecxz
shl
and
mov
imulb
ret
mov
das
jp
mov
mov
push
add
jmp
hlt
cmp
mov
out
cmp
cli
pop
daa
dec
push
inc
cmp
ljmp
xchg
sahf
enter
cmp
add
mov
sbb
bound
pop
lret
pop
mov
in
jl
and
inc
sbb
fwait
imul
stc
adc
rcl
daa
mov
adc
mov
psrld
mov
xchg
add
cmp
push
lret
in
movsb
cwtl
push
xchg
jno
cmpsl
jne
outsb
add
hlt
adc
mov
dec
or
ljmp
das
or
iret
loope
sub
bound
inc
sub
cmp
xchg
enter
push
mov
gs
mov
mov
leave
stos
aad
xor
sti
mov
adc
and
clc
enter
shrb
lods
mov
adc
inc
mov
adc
out
ljmp
shrl
cmpsb
ss
popa
xchg
jne
pop
sbbl
in
adc
jg
je
pop
jae
inc
popa
pusha
dec
lock
in
and
jle
rclb
inc
call
ljmp
addr16
test
mov
scas
adc
push
repnz
test
add
cmp
stos
ret
mov
adc
ss
push
xchg
dec
loopne
nop
iret
push
dec
or
int3
sbb
in
or
sbb
pop
fs
imul
xchg
mov
mov
mov
loopne
xchg
push
xchg
adc
lods
push
jns
ds
jo
sub
mov
out
stos
jbe
shlb
out
pop
sub
stos
jnp
pop
add
inc
jmp
lods
adc
xor
jecxz
mov
xor
inc
sahf
xchg
pop
lds
scas
pop
dec
adc
cmp
adc
or
rcrb
out
or
ljmp
sbb
out
addr16
xchg
cmp
pop
xchg
mov
add
hlt
sbb
inc
outsl
mov
pop
push
pop
ljmp
lods
test
negb
aam
dec
test
les
xor
inc
cmc
idiv
xchg
popa
imul
popa
rcl
xchg
sti
lds
xor
repnz
in
orl
ja
sbb
jp
setle
outsb
jns
scas
es
pop
insl
mov
lods
ret
mov
jne
xor
mov
sub
dec
sti
ds
lds
pop
inc
mov
adc
aas
sbb
lahf
mov
hlt
jno
mov
jne
mov
sub
aad
cmp
ljmp
test
insb
lsl
mov
aad
lods
mov
or
mov
stos
mov
imul
leave
outsb
addr16
mov
add
pop
int
xor
nop
test
xor
jbe
dec
clc
shll
cmp
in
mov
imul
mov
out
jmp
lret
scas
sbb
loope
mov
dec
inc
jnp
push
sbb
cmp
jg
xchg
fcmovnu
sbb
or
scas
arpl
dec
push
fcoms
dec
mov
inc
movhlps
xchg
mov
loopne
jecxz
pop
xlat
jmp
jo
cli
aad
pop
cmpb
sbb
push
xor
int3
repz
add
and
into
aam
dec
xchg
call
push
and
lods
mov
mov
in
fiadds
mov
arpl
lods
add
dec
jmp
test
sbb
rcr
xchg
repnz
iret
dec
repz
call
xor
push
lds
mov
cmc
fists
jmp
ret
jmp
scas
ret
inc
pop
jb
out
mov
movsl
aaa
push
pop
in
stc
xchg
out
outsb
loop
cwtl
inc
nop
jb
imul
mov
clc
xchg
inc
out
and
sahf
out
in
ja
jecxz
daa
arpl
sbb
rcl
out
fwait
js,pt
adc
cltd
addl
ffree
arpl
xchg
aam
mov
negb
jo
sub
fwait
daa
lea
aas
dec
push
das
cmp
stos
out
dec
sbb
mov
les
push
fsts
pop
and
not
out
mov
inc
push
add
in
dec
xor
mov
scas
add
and
int3
adc
pushf
addb
cld
push
dec
push
pop
mov
sbb
fwait
mov
xorb
das
mov
flds
xor
bt
jl
sbb
data16
mov
push
xchg
pop
sub
jo
hlt
dec
sub
sbb
ja
fildll
mov
push
jne
mov
jnp
mov
pop
rcll
cmp
mov
out
cs
pop
adc
fisubrs
aas
int3
loop
lods
andb
cmp
add
sbb
movsl
cmc
es
pop
int3
pop
out
fistpl
inc
xlat
scas
inc
sbb
jmp
outsl
notl
aaa
not
or
xchg
loopne
push
testb
and
or
mov
repz
test
das
push
sbb
mov
sbb
in
jl
dec
cmp
aaa
add
jbe
decb
insb
cld
push
fistpl
inc
js
mov
aad
imul
push
jae
cmc
icebp
imul
add
test
test
inc
xlat
push
push
inc
xchg
pop
mov
ret
push
lock
sarb
add
enter
sbbl
pop
mov
bnd
jle
push
into
fisttps
xor
fadds
or
cmp
dec
adc
inc
fcoms
sub
lea
jbe
xchg
mov
leave
or
or
pusha
ret
mov
pop
lret
and
icebp
and
movsb
out
push
lds
and
fidivrl
repz
popf
pusha
or
imul
mov
lret
add
jle
jo
ljmp
in
sbb
or
shrb
sbb
mov
faddl
mov
mov
xchg
push
adc
mov
lahf
cmp
jecxz
test
lds
imul
ja
cli
mov
xor
adc
cs
mov
push
popa
fwait
daa
or
sahf
pop
inc
into
jecxz
dec
mov
or
popf
adc
pusha
loope
xlat
not
jge
mov
sti
es
data16
jbe
testl
loopne
sub
cmp
adc
jge
fildl
pop
ljmp
shlb
push
mov
adc
inc
test
out
in
aaa
dec
jp
int3
pop
inc
dec
imul
call
adc
cwtl
outsb
mov
das
push
shl
mov
pushf
iret
arpl
in
mov
mov
outsl
pop
cmpl
mov
outsl
jle
jbe
pushf
jle
imul
push
pushf
push
imul
repz
jecxz
dec
and
push
icebp
fisubrl
dec
inc
xchg
lea
xlat
sbb
add
jmp
out
sub
aaa
fstpt
das
cmpsb
test
in
mov
sbb
mov
adc
xor
je
inc
xchg
cmpsb
inc
mov
mov
in
xchg
jnp
xor
mov
mov
add
stc
int3
dec
xchg
mov
jmp
xchg
fisttpl
mov
pop
or
out
js
daa
orl
out
shlb
pop
sub
mov
dec
xchg
inc
lds
not
fistpll
lea
lret
aas
lods
lock
mov
or
imul
mov
mov
jno
xor
push
roll
inc
or
mov
out
add
pop
addr16
rcr
fstp
popa
sbb
and
mov
outsb
xlat
cli
mov
pop
rorl
into
js
inc
push
cld
jecxz
subb
push
sbb
lahf
adc
mov
sbb
sahf
dec
xchg
les
push
lret
fisubl
push
test
pmaxsw
sbbb
sub
or
psraw
jo
insb
rcrl
xchg
scas
mov
int
sahf
sti
mov
cmp
loop
dec
out
notb
mov
hlt
arpl
pusha
jmp
test
jl
in
adc
pop
dec
sub
ret
call
mov
inc
xchg
or
ja
cs
movsb
sbb
loope
movsb
into
in
or
inc
push
jbe
sub
and
inc
pop
push
mov
jg
mov
sub
icebp
push
add
ds
cmp
call
mov
or
lock
fwait
nop
leave
int
andb
adcb
clc
sbb
cmpsb
xchg
xchg
xchg
inc
dec
mov
cmp
sbb
hlt
jge
jne
and
xchg
cltd
or
mov
imul
sub
icebp
outsb
mov
leave
rol
movsb
outsl
mov
cmp
mov
jl
aas
add
cmp
mov
jge
xchg
fwait
and
add
xor
mov
pop
and
sbbb
cmp
push
sbbb
loope
out
inc
sarl
jnp
std
xlat
pop
mov
mov
adc
jle
inc
leave
mov
push
add
aaa
mov
ljmp
and
sarb
shr
outsl
loope
mov
addr16
pop
aad
in
lret
dec
cs
mov
mov
flds
adc
call
mov
mov
lret
sub
jnp
clc
pop
imul
jns
sub
sbb
and
jl
ljmp
xlat
push
push
gs
fldenv
int
fstl
cli
addr16
push
add
outsl
cmp
pop
aaa
inc
sbb
push
inc
sub
pushf
insb
adcb
fcmovb
jge
fs
push
stos
dec
rol
sahf
pop
add
fwait
inc
lds
leave
into
andl
cwtl
in
movsb
call
aam
test
or
sbb
sbb
cs
lods
out
loopne
fldt
imul
jo
push
je
movb
cmpl
adc
insb
dec
and
mov
iret
mov
xor
push
cmp
dec
cmpsl
movsb
popa
adc
je
mov
jae
or
mov
mov
addr16
loop
inc
sahf
mov
adc
and
mov
dec
aad
out
mov
jg
cmp
imul
fwait
and
scas
popf
push
cld
out
push
xor
lcall
out
lahf
rolb
xor
cmp
pop
insl
outsl
sub
ret
pusha
sub
call
add
leave
cltd
mov
or
pop
inc
inc
leave
push
pop
cmpsb
mov
inc
out
cs
faddl
std
hlt
movsb
mov
bound
je
push
lret
inc
imul
rcrb
mov
lea
icebp
mov
and
gs
and
shrb
pop
addr16
mov
adc
xor
stos
dec
fcmovnbe
inc
cli
xchg
sbb
icebp
aam
lahf
jp
mov
add
jge
mov
lret
xchg
adcl
or
push
int
inc
adc
test
stos
adcl
ljmp
test
xchg
lds
rcll
int
mov
mov
insl
adc
ja
jno
or
lahf
or
imul
out
fldt
or
incl
adc
push
jno
inc
es
fcoml
sti
mov
xor
scas
dec
adc
dec
xor
sub
xorl
lret
dec
mov
das
rcll
gs
mov
in
lret
or
out
daa
pop
inc
pop
xchg
mov
jp
adc
bound
xchg
cmp
mov
test
das
mov
rorl
repnz
in
mov
popa
rcr
xor
mov
cmpsl
icebp
lds
mov
in
in
or
clc
int
pop
cmp
out
dec
and
mov
and
sub
mov
mov
mov
into
mov
sub
mov
je
iret
push
and
int
dec
stos
mov
ljmp
cmpsb
push
jo
mov
dec
sub
push
movsl
pop
push
xlat
loope
push
mov
add
jb
xlat
shrb
sbb
cs
jae
or
mov
mov
xor
or
add
sbb
les
je
sbb
rorl
jmp
jecxz
dec
lods
xor
and
cmc
mov
gs
repnz
pop
insl
cmc
jbe
pop
popa
xchg
pop
imul
adc
lock
out
fwait
imul
pop
jne
das
adcl
xor
fimuls
pushf
arpl
js
outsb
lea
mov
push
jecxz,pn
pop
mov
jg
aad
jae
inc
std
pushf
pop
mov
pushl
mov
fdivl
xor
fnstsw
sub
sub
mov
push
xchg
add
dec
mov
inc
out
pusha
aad
mov
xadd
fcmovnu
inc
add
adc
mov
pop
aas
sub
xchg
adc
bound
clc
jae
movsb
pop
xchg
lds
xlat
icebp
fdivrs
in
enter
pop
arpl
mov
test
into
cmp
jecxz
cmp
incl
jno
sbb
cmpsb
mov
sbb
scas
inc
xchg
nop
cmpb
int3
ret
and
xor
mov
mov
xchg
sub
mov
cmp
mov
je
sbb
lret
inc
mov
je
mov
pusha
inc
inc
lret
mov
iret
cli
xor
push
inc
cltd
or
xchg
xor
in
and
xchg
int
dec
cmp
stc
imul
mov
js
add
and
or
xchg
test
jle
incl
cli
insl
dec
mov
cmp
adc
xor
test
sahf
fiaddl
iret
cwtl
popl
ja
add
xchg
fimuls
arpl
enter
xchg
fwait
sbb
add
xor
testl
mov
dec
adc
or
aam
xchg
sbb
sbb
ror
and
mov
scas
lcall
out
insb
imul
push
cmp
test
orb
imul
cmp
push
mov
lock
sub
xor
aad
cmp
xchg
inc
in
jno
sbb
pop
gs
pop
das
leave
add
inc
add
incb
jecxz
aam
fdivr
inc
stc
test
shlb
jecxz
insl
stos
sahf
jns
das
das
test
ret
pushf
mov
ss
dec
pusha
xchg
loope
iret
mov
mov
mov
jl
push
enter
sbb
imul
stc
mov
cmp
cmp
jb
pop
jae
jb
loope
mov
aad
add
aaa
jbe
jl
mov
push
test
cwtl
cmp
pusha
pop
ljmp
mov
lods
push
iret
imul
inc
ss
add
and
in
xchg
icebp
pop
imul
fimuls
sbb
rolb
mov
lea
mov
fiadds
or
xchg
mov
out
lods
out
loope
jmp
outsb
cmpsb
gs
or
xor
lods
cmp
mov
loop
daa
sub
inc
rep
cbtw
pop
repnz
jns
pusha
fs
repz
cli
mov
pop
push
sahf
lcall
pop
and
fisttpl
daa
aad
enter
or
out
sub
sahf
aas
inc
sub
test
jp
out
cs
jno
sbb
pop
push
jge
iret
adc
dec
jnp
push
sub
lock
or
push
icebp
xchg
xorb
rcll
cmp
and
push
push
push
sub
fisttpl
inc
push
mov
repz
leave
in
out
push
adc
xor
sbb
mov
dec
inc
push
hlt
shl
iret
test
lods
pop
adc
xor
or
or
cmpsb
jle
into
mov
daa
cmp
nop
mov
mov
jnp
mov
fmuls
lret
ret
lods
cmpsl
aad
xchg
lds
inc
mov
jecxz
mov
cmp
std
pop
xchg
mov
cli
out
mov
in
mov
mov
jns
fldcw
sub
pop
mov
cmp
mov
dec
out
cmp
scas
popf
les
xchg
jae
pusha
rcl
xor
test
push
xchg
dec
into
cmp
lea
xchg
inc
cmp
fsts
jmp
xchg
pusha
fbstp
mov
data16
cmc
rorb
fnstcw
mov
mov
adc
cmp
ret
and
inc
cltd
cmovb
inc
add
out
mov
xchg
inc
ret
es
jecxz
adc
adc
scas
cli
sub
or
fisttpl
xor
and
pop
stos
sub
ret
jp
pop
adc
out
fs
mov
leave
out
and
aam
insb
inc
out
daa
pop
shrl
pop
jge
and
pushf
and
dec
mov
sub
pop
add
inc
lahf
adc
pop
inc
subb
lods
jg
inc
rorl
in
xlat
cld
push
adc
imul
shrl
js
pop
cli
adc
or
cs
call
mov
out
inc
das
into
shll
loop
pop
sbb
fildll
jb
xchg
inc
sub
cwtl
xor
pop
pop
pop
js
push
int3
and
cmp
int3
imul
inc
into
sbb
xor
or
fwait
dec
repz
jae
mov
xor
adc
cmpb
push
dec
lods
sbb
xor
in
jg
mov
rcrl
jne
movsb
aad
sarl
ljmp
or
cmp
loope
push
add
jno
xchg
fnstsw
fdivl
lods
cld
in
mov
pop
jno
and
stos
movsl
shll
and
pop
xorps
mov
add
pop
xchg
lock
mov
sub
andl
mov
pop
jbe
push
movsb
and
jmp
adc
mov
orl
enter
or
mov
ljmp
add
pop
cld
dec
inc
ja
jmp
stos
dec
leave
xlat
stc
or
pushl
pop
popa
hlt
adc
push
out
xchg
popf
scas
inc
or
lods
adc
inc
xor
les
in
adc
les
jmp
dec
das
les
test
and
push
addr16
inc
sahf
pop
int
push
pop
std
cmp
rcrl
push
cwtl
xchg
push
sti
push
pushf
cmc
mov
xchg
bound
push
call
or
push
mov
cld
xor
stos
cmp
xorb
repnz
lods
mov
xor
add
test
fstpt
inc
in
stc
andl
das
mov
rorl
andl
push
outsl
mov
xchg
aaa
ljmp
dec
mov
xor
cmp
into
add
stos
shll
sub
rorb
subl
sahf
bound
into
cmp
je
js
dec
test
pop
and
jo
pop
mov
dec
cltd
aas
lcall
out
imul
add
loope
mov
andb
pop
inc
mov
jne
cmp
scas
loopne
loopne
mov
mov
and
rolb
cmp
mov
out
ss
call
jg
sbb
jg
fistpll
and
inc
rclb
hlt
jb
adc
adc
dec
push
shrl
aaa
jb
fadd
ljmp
lahf
cmp
adc
inc
gs
stos
jns,pt
ffree
sub
jg
fwait
xor
addb
lcall
sahf
pop
add
pop
or
push
and
pop
movsb
sbb
and
call
lahf
cltd
dec
xchg
adc
neg
adc
insl
in
mov
jae
cld
mov
mull
and
adcb
jl
add
push
jecxz
stc
cltd
xor
adc
rcrl
add
loop
pusha
jmp
scas
push
scas
sbb
push
and
and
pop
or
mov
movsl
xchg
mov
dec
sarb
xor
mov
enter
hlt
push
lods
inc
and
rolb
push
in
imul
aad
idivb
adc
mov
push
in
sbb
xchg
add
cmpsb
cmp
mov
imul
jecxz
sub
mov
inc
xchg
sub
inc
int3
and
insb
cmp
xchg
sbbb
pop
aad
inc
inc
test
or
in
mov
and
xor
fimull
dec
push
bound
nop
mov
push
fsubs
pusha
cmpl
repnz
jno
fsubs
iret
sbb
inc
jo
test
cmp
push
leave
and
roll
and
push
add
shrb
pop
pop
iret
add
cmp
dec
ret
cmp
mov
fcompl
repnz
pop
gs
mov
adc
jecxz
xor
xchg
test
mov
hlt
inc
sub
mov
dec
mov
call
negl
jb
pop
dec
push
xor
aam
lods
xlat
cmpsl
popf
loopne
sub
cmp
mov
cmp
pusha
mov
jo
push
lock
ret
adc
mov
scas
sbb
xchg
fstpl
lds
std
sbb
sbb
push
add
out
or
xor
push
ds
jns
scas
repz
push
xor
mov
pop
or
roll
xor
jle
inc
jg
sub
fwait
sub
fildll
cmp
cli
stos
mov
mov
dec
in
push
dec
icebp
es
pop
mov
pop
ljmp
sub
stos
pop
lods
jg
lock
sub
shll
daa
or
sub
jo
fdivs
push
mov
adc
aas
in
je
sbb
orl
mov
xchg
cmp
push
mov
mov
xlat
inc
cmp
enter
xchg
or
popa
loope
daa
lods
sub
lahf
call
and
mov
adc
js
out
insb
mov
pop
mov
popf
sti
sbb
out
sub
imul
adc
shl
and
out
push
out
gs
sub
cmpsl
lret
rep
jl
aad
mov
addr16
fnsave
adc
mov
push
out
pop
mov
mov
push
and
cmpsb
sub
push
mov
ja
inc
pop
push
loop
movsl
pop
lret
fldl
push
daa
adc
dec
sbb
mov
lret
mov
mov
mov
bound
cmp
dec
mov
repz
mov
sbb
inc
shlb
insl
lea
mov
rcll
jne
sarb
je
cmpsb
aaa
aad
stc
aas
pop
fbstp
mov
push
pusha
dec
xchg
adc
mov
pop
xor
cmp
sti
mov
mov
cmp
mov
or
inc
xchg
shl
and
inc
cmp
jb
ja
out
scas
xchg
dec
jnp
jne
lds
mov
arpl
outsl
cmpl
mov
jae
fstpt
sbb
mov
cmpsb
jmp
cmp
pop
jmp
addr16
fdivs
pop
xchg
pop
out
push
loope
ret
jmp
mov
fldt
or
repnz
stos
sar
or
pop
push
xorb
pop
jns
jbe
aam
loope
mov
jnp
sbb
sahf
dec
add
repz
fldenv
mov
xor
cmp
sbb
or
sbb
push
and
mov
adc
push
push
inc
movb
mov
jmp
in
add
sbb
rcll
add
cmp
mov
shl
cmpsl
pop
pusha
mov
xlat
stos
xor
mov
cmc
pop
push
mov
push
sbb
push
jno
sbb
xor
mov
cmp
pusha
jecxz
sub
in
pop
imul
loope
out
ja
or
xchg
cmc
mov
repnz
mov
fwait
call
lock
or
or
insl
mov
mov
pushl
into
pop
xor
dec
jno
cmp
mov
mov
mov
lock
pop
inc
xchg
shl
rcl
xchg
push
outsl
mov
cmpsb
cltd
scas
xchg
cltd
nop
movsb
inc
mov
inc
jmp
and
push
js
push
pop
daa
inc
xchg
fsubrl
cli
jmp
mov
mov
xchg
sub
mov
inc
test
aad
outsl
xchg
or
out
jmp
fdivs
jmp
jp
push
cwtl
repz
inc
fidivs
inc
xor
jne
push
lcall
fisttps
and
pop
popf
inc
push
cmpsb
rol
fnstsw
das
adc
cmp
arpl
cmp
icebp
cmp
jo
add
cmp
fcmovnb
xor
xor
pop
mov
jge
mov
mov
mov
jns
xor
jno
push
pop
push
clc
xchg
mov
cmc
iret
add
lods
mov
pop
lret
sbb
fsubrs
inc
sbb
daa
out
test
or
cmp
push
imul
sub
ljmp
pop
jmp
fcmovnbe
jb
mov
jl
xor
mov
or
rcrb
lret
data16
push
shll
push
ja
adc
cli
lea
sbb
jbe
sbb
in
call
fbld
popf
sub
cs
imul
pop
arpl
or
in
xchg
cmpsl
push
sarb
sub
pop
loopne
add
xchg
pop
sub
mov
sub
fwait
mov
dec
and
mov
sbb
push
leave
pop
lahf
rcl
mov
ds
jp
test
dec
xchg
inc
clc
insl
jb
adc
sub
lret
and
add
dec
inc
xlat
jnp
inc
push
mov
icebp
rcl
jns
out
mov
jb
roll
mov
int
stos
imul
pop
sti
adc
jp
push
inc
cmpsl
mov
mov
and
outsl
js
pop
loopne
push
stos
in
cmpsb
dec
dec
and
jb
xchg
das
fs
dec
xor
cs
adc
inc
xchg
xchg
sbb
cli
adc
sbb
in
pop
das
test
in
cmc
jne
adc
xchg
xchg
cwtl
cmpsb
dec
movsl
mov
lock
pop
inc
add
daa
js
addb
imulb
insb
ja
movsb
popa
lock
insb
cmp
rolb
inc
bound
outsb
vmovd
sbb
add
cmpsl
xchg
jb
xor
jo
fstpt
add
jnp
jecxz
mov
dec
repnz
stos
idiv
dec
lcall
scas
es
repnz
mov
and
imul
aad
insl
sub
pop
push
loop
mov
jne
clc
adc
xor
or
dec
jecxz
and
mov
ljmp
js
dec
iret
leave
pop
int3
cmpb
and
in
xlat
adc
clc
pop
es
mov
frstor
push
cmp
push
sbbl
jge
outsl
cmp
xlat
sbb
xchg
xchg
jno
cmp
data16
subl
xchg
cld
add
mov
pusha
mov
cmp
xchg
and
add
sub
xchg
mov
in
fcmovb
xchg
mov
lcall
mov
inc
lea
mov
js
add
icebp
aas
push
or
push
test
jge
mov
sub
sarl
push
inc
pop
gs
imul
inc
gs
sbb
std
and
pop
mov
andl
xchg
test
inc
fwait
loopne
mov
xor
lret
lock
lock
repz
nop
cmp
jg
jecxz
dec
ja
jge
insl
repnz
or
sbb
jecxz
push
mov
loop
sub
pushf
cmp
sbb
lret
fs
pop
lea
shrb
mov
xor
int3
pop
add
cs
xchg
das
xchg
add
fisubrl
jmp
cmpsb
ret
cmpsl
shrb
movsb
jle
repnz
mov
xor
fnstsw
shl
mov
scas
lcall
stos
xchg
iret
rcl
adc
mov
lahf
jmp
mov
fstpl
jge
fistps
dec
into
les
cmp
out
cs
pop
pop
fdivrs
jns
adc
and
inc
mov
insl
jno
mov
movsb
outsb
cmp
scas
test
cmpsb
pop
shll
call
inc
repnz
and
or
repz
aam
and
negl
daa
dec
fistps
fcmovu
dec
ret
dec
mov
out
pop
pop
xor
inc
pushf
pop
je
fildll
lock
lret
mov
pushf
mov
push
sbb
lods
rorb
dec
dec
jg
ss
inc
sub
push
sbb
aad
sub
aad
repz
mov
aam
test
test
aaa
aad
pushf
loop
sub
push
adc
sub
shlb
dec
imul
aam
xor
roll
inc
in
in
jo
movsb
sub
xchg
mov
adc
and
ret
addr16
mov
pop
jmp
lea
sbb
and
pop
jnp
cmp
aas
cmp
lds
hlt
xor
mov
adc
pushl
push
int3
dec
or
addr16
sahf
xchg
js
ret
subl
cmpsb
ja
dec
mov
dec
mov
int
adc
inc
push
cmc
push
push
inc
movsb
outsb
inc
nop
enter
pop
jl
rcr
sub
mov
hlt
xorb
mov
jmp
cmpsb
pusha
add
sub
ljmp
add
ficomps
cld
sar
mov
or
push
and
popa
std
xor
push
xchg
iret
or
jne
filds
jnp
loop
gs
mov
hlt
jecxz
xchg
sbb
adc
xor
pushf
pop
into
jle
add
imul
mov
adc
loopne
pop
adc
xor
mov
idivl
or
or
loope
sub
adc
pop
loop
shlb
dec
je
adc
mov
and
iret
test
jle
and
xor
ss
stc
repnz
xor
je
ljmp
sahf
dec
jb
sbb
fdivrs
mul
test
pop
outsl
pop
mov
dec
mov
add
sbb
ds
mov
je
add
int3
ss
and
xchg
push
lds
insl
inc
sbb
aam
out
shlb
mov
and
loop
lea
loop
gs
xlat
sti
xchg
and
mov
pop
outsb
adc
pop
inc
mov
mov
mov
fisubrl
cmp
or
lods
sub
ret
xor
and
subb
adc
ss
add
cld
mov
sbb
jnp
mov
mov
xor
lods
cmp
pop
arpl
pop
push
clc
pop
and
push
or
shr
jge
jne
pop
mov
addl
jae
ret
test
fsubl
xor
adc
sub
std
imul
cld
rorb
repnz
pop
dec
daa
fsubrp
xor
andl
cld
mov
stos
push
jbe
outsl
aam
sub
add
enter
push
popa
insb
adc
lcall
sbb
pop
sbb
or
pop
fldt
pop
jl
inc
or
or
jne
and
jp
mov
rcl
mov
and
push
insl
pop
sbb
out
adc
inc
ror
lahf
adc
gs
movsb
mov
push
in
clc
add
andb
adc
lock
loop
in
movsb
pop
xor
mov
jecxz
lret
jne
cli
in
adc
mov
mov
cmp
outsb
clc
test
rcll
lret
test
or
sbb
rorb
out
popf
or
adc
mov
cmpsl
out
ja
rorl
mov
dec
jp
xor
adc
mov
xchg
fistl
enter
xchg
adc
out
stos
or
mov
lods
mov
sbb
mov
push
push
mov
inc
jmp
xchg
and
nop
data16
xchg
xchg
mov
jnp
es
mov
push
cmp
push
mov
xchg
push
lcall
push
xchg
fucom
mov
shrb
shl
jmp
fs
xor
decl
in
hlt
div
jns
ljmp
in
sbb
pop
adcl
sub
stos
in
dec
inc
mov
pushf
sbb
xor
mov
lret
xchg
shrl
movl
dec
mul
adc
rdpmc
adc
push
lods
add
push
clc
out
gs
pusha
xor
out
jmp
movsb
fs
je
xchg
xchg
nop
aaa
mov
out
dec
lea
add
xchg
pop
cwtl
inc
xchg
push
int3
push
xor
dec
les
dec
adc
push
xchg
adcl
xor
mov
adc
mov
sbb
imul
push
dec
mov
aaa
fcoml
inc
lds
fists
push
out
aaa
jbe
sub
push
cmp
or
mov
sbb
lds
mov
mov
sbbb
lea
xor
shlb
pop
cmpl
outsl
fwait
xor
lahf
xlat
pop
and
andb
push
pop
mov
adc
cwtl
add
sti
int
es
push
or
xor
add
fidivs
test
shll
sbb
bswap
push
decb
mov
test
dec
xor
jb
cmp
repnz
inc
pop
pop
jae
inc
mov
mov
add
lock
into
push
pop
pop
insl
push
mov
xchg
nop
mov
jmp
test
adc
or
mov
lahf
xchg
push
mov
mov
cmpsb
jle
imul
sahf
mov
lds
inc
mov
leave
lret
mov
add
push
sub
inc
xchg
sub
testb
mov
into
pop
jae
ret
outsl
dec
mov
sbb
test
nop
and
daa
mov
scas
scas
sbb
popl
sub
mov
and
imul
lods
jle
sbb
popa
aas
mov
int
outsb
fmulp
dec
shll
cmp
pusha
data16
cmp
cmpl
xchg
fmulp
sub
fldenv
das
xchg
sbb
sub
cmpsb
cmpsb
dec
mov
mov
sbb
push
movsl
adc
xchg
mov
js
or
mov
xchg
pusha
push
loop
hlt
inc
adcb
push
rol
repnz
mov
lcall
nop
nop
fisubl
js
ss
or
sub
pop
fistl
icebp
mov
mov
sbb
inc
popf
pusha
and
xorl
aaa
lods
addr16
lret
mov
jp
mov
jg
pop
dec
jmp
cmp
push
test
mov
jl
ja
pop
push
in
xchg
inc
dec
fnstenv
fsubl
pop
push
push
rol
rcll
imul
lea
jns
sbb
pop
dec
xchg
cld
jecxz
aam
nop
xchg
add
and
xchg
pop
fldt
mov
ss
or
mov
jo
dec
call
bound
and
jl
or
cltd
mov
and
dec
cmpsl
jle
jle
jo
sub
or
cs
std
out
daa
outsl
sahf
dec
data16
in
inc
pop
pop
push
int3
and
adc
aas
push
push
hlt
test
xor
xorl
dec
jmp
dec
cmc
mov
mov
scas
jne
cltd
mov
push
adc
test
and
ljmp
jle
push
mov
cmpsb
jmp
adc
stos
cld
stc
clc
and
xlat
negb
call
sbb
imul
lods
out
xchg
loop
cmp
cmp
fidivl
or
test
xchg
mov
into
aad
or
popf
cltd
insl
jge
cmp
in
enter
mov
idivl
das
fsubrl
mov
xchg
loope
int
push
mov
not
mov
add
mov
push
popa
pop
pusha
sti
inc
outsb
dec
out
mov
jns
pop
int
mov
xchg
stc
rcll
lret
shlb
clc
cmp
and
popf
popa
and
xchg
jno
popf
ror
add
ja
mov
ds
cmc
mov
push
movsl
sti
xor
push
sbb
bound
inc
and
outsl
fcoms
jmp
sub
push
mov
jo
jno
dec
push
shlb
push
jge
and
jle
pop
les
popa
cld
test
push
pop
mov
push
xor
cmp
roll
gs
dec
or
dec
xchg
add
out
push
call
sub
mov
mov
mov
dec
mov
cmpsb
or
jne
fildl
ja
xchg
mov
adc
add
adc
jl
pushf
jo
or
and
push
je
xor
ljmp
xlat
mov
cmpsl
xchg
addb
outsb
gs
pop
pop
sbb
cmp
fcomi
iret
loop
dec
pop
movsl
lds
mov
cmp
cmp
dec
adc
cmp
sbb
pop
fcoml
stos
in
or
jne
insl
mov
movsl
add
insb
ja
aam
fcoml
in
fidivs
jmp
sbbb
xchg
add
adc
test
pop
cmc
gs
dec
not
dec
les
lods
test
rorl
hlt
js
cmp
mov
sbb
out
js
fucom
fiaddl
jp
sbb
ja
sub
data16
sub
xchg
vmovd
inc
mov
mov
les
pushf
popl
daa
mov
test
enter
or
xor
cmp
imul
xchg
outsb
iret
divl
xchg
outsb
or
mov
mov
pushf
inc
orb
xchg
mov
or
lods
pop
fiaddl
mov
ret
fisubs
cld
popl
xchg
push
lret
ljmp
iret
repnz
jns
in
pop
push
jne
popa
lea
ja
xchg
mov
inc
sbb
push
cltd
lock
xchg
sarb
jbe
xor
xlat
mov
test
sahf
ret
insb
xor
mov
mov
out
xchg
int
cwtl
lds
icebp
stc
es
scas
lock
or
mov
push
cmp
mov
das
insb
or
cmp
cmp
fists
sub
push
push
push
loopne
cli
icebp
aas
push
call
push
loopne
movsl
dec
push
decb
push
push
inc
out
stos
ljmp
xlat
and
xchg
inc
sbb
sbb
xor
scas
or
hlt
push
xor
sbb
addr16
fbld
cmp
xchg
shlb
jmp
adc
das
sbb
cmp
mov
jle
aas
aas
sub
mov
outsb
jae
sbb
aas
insl
add
jb
imul
filds
push
push
mov
push
mov
push
fstpt
adc
and
lahf
dec
adc
call
sbb
negb
rcrb
add
out
push
push
popf
test
pop
inc
sbb
lods
sbb
and
push
cs
fisubl
popf
push
aad
sbb
nop
sbb
and
lret
mov
pop
stos
repnz
test
push
fldcw
popa
xchg
adc
jno
inc
sub
cmc
xor
fldenv
xor
fidivs
mov
push
inc
cld
dec
xchg
push
movsl
test
mov
cmp
push
into
push
pushf
test
stos
cmp
mov
inc
aam
xchg
add
fisubs
shlb
std
inc
or
jl
add
out
jae
int3
sub
shll
xchg
pop
pushf
test
xchg
out
repnz
imul
inc
jg
xchg
fnstenv
fadds
mov
sub
push
lcall
bound
fstpl
push
mov
jns
xchg
adc
adc
gs
fldenv
sub
arpl
or
adc
xor
sub
pop
push
rorb
shll
mov
mov
pop
xor
into
and
xchg
xchg
push
xchg
sub
fisubrl
je
icebp
pop
shlb
jle
push
dec
loopne
and
mov
mov
inc
adc
add
test
or
xor
inc
faddp
cs
mov
dec
sti
out
xor
jbe
dec
fwait
dec
mov
loop
test
nop
popf
mov
mov
mov
fld
in
loope,pn
lcall
jge
dec
rol
or
mov
subl
scas
jecxz
ret
stc
dec
bound
ljmp
sub
fsts
mov
push
ljmp
outsb
dec
push
rolb
imulb
or
int3
mov
negl
push
jmp
je
jae
cwtl
call
jne
mov
mov
in
test
subl
mov
sub
add
fldenv
adc
pop
mov
ljmp
jb
insb
dec
cmp
mov
or
nop
cmpsl
add
sub
out
arpl
clc
gs
xlat
mov
lods
outsl
sbb
daa
inc
pop
fnstcw
xchg
out
jecxz
xor
into
movsb
and
adc
pop
push
sbb
sbb
mov
insb
es
popf
sub
jae
daa
xor
mov
movsb
xor
jg
cmp
aad
test
in
push
sbb
sub
mov
push
setge
adc
stos
cld
fwait
sbb
mov
inc
jecxz
call
imul
cwtl
mov
xlat
pop
jl
and
outsl
je
mov
int
lcall
leave
xor
jns
clc
mov
mov
add
xchg
fisubs
jns
cmp
out
es
jns
nop
xchg
adcb
aas
int
push
pusha
std
push
add
cmp
xchg
insb
imul
adc
xor
icebp
aas
ja
ss
dec
and
test
mov
icebp
pop
lret
mov
fs
jecxz
in
lea
jg
jmp
jbe
int3
ftst
je
test
mov
fcompl
xor
dec
repz
in
xchg
fdivr
rorb
cmp
pop
xchg
ror
pop
inc
add
add
pop
imul
addb
icebp
xor
dec
sbb
adc
sub
int3
mov
mov
lods
cmp
subl
pop
shll
cmpsl
add
sti
lods
ljmp
dec
lret
mov
xor
outsl
hlt
or
loope
imul
out
xchg
movsb
lret
aad
pop
dec
add
sbb
dec
iret
inc
mov
aad
outsb
and
xchg
ljmp
mov
add
fs
fwait
cmc
stos
fdivs
pop
sub
sbb
loopne
loopne
xor
popf
movsl
and
out
cld
dec
cmp
mov
inc
mov
jnp
cmp
cmp
scas
pushf
or
pop
shl
test
iret
push
std
nop
mov
and
addr16
or
xchg
daa
cmp
aas
jecxz
pop
insb
test
sub
push
enter
mov
enter
outsl
pushf
lahf
cmc
lahf
daa
lret
sub
mov
icebp
call
aaa
xchg
mov
mov
std
pop
out
les
add
mov
mov
outsb
mov
inc
ja
jb
in
inc
lret
test
adc
cltd
int3
mov
aas
cmp
mov
sub
jmp
mulps
pop
cmp
packuswb
loop
fldcw
test
mov
cmp
cmp
jnp
pop
and
into
xchg
les
cmp
bound
lea
mov
fistpl
push
rcl
repnz
sbb
out
jno
arpl
out
sub
mov
lret
pop
xchg
dec
call
adc
sbb
add
out
dec
dec
fldenv
cmc
lret
dec
pop
mov
jns
push
or
xor
inc
cmp
ss
shrb
lcall
mov
aam
cmp
xchg
push
jle
jne
or
xchg
push
fidivrs
mov
ss
push
imul
and
cmp
mov
shll
jb
fucomp
stos
rorb
icebp
fldenv
outsb
inc
dec
pushw
push
sbb
mov
int3
sti
sbb
pop
dec
ljmp
mov
lods
mov
push
or
stos
scas
mov
dec
hlt
pushf
movsl
mov
xor
xor
lods
fiaddl
clc
sub
addl
add
ret
fisubrs
and
pop
insb
fbstp
cmp
xchg
xchg
xchg
sbb
ljmp
adc
cld
out
adc
in
inc
push
mov
pop
out
mov
mov
xor
jmp
push
jl
ret
pop
adc
cs
inc
pop
test
pop
xchg
and
test
push
add
cmc
mov
and
popa
xor
inc
fists
faddl
fildll
out
aaa
adc
testb
sub
or
bound
mov
add
fldpi
and
inc
push
stmxcsr
ss
push
es
mov
push
adc
out
jecxz
cmp
cli
pop
in
rep
pop
lods
add
lea
dec
movsl
xchg
dec
and
mov
inc
or
hlt
jns
inc
sarb
test
adc
je
in
sahf
mov
mov
mov
es
fsubp
popa
pop
lds
xor
scas
rorb
inc
sbb
cmpsl
out
or
sub
iret
daa
outsl
cwtl
jge
pop
fiadds
pop
sub
bnd
xchg
ss
sub
xor
pusha
popf
dec
or
icebp
imul
push
outsb
imul
movsb
rcrb
xchg
stos
xchg
xor
pop
aaa
jmp
jle
in
outsb
mov
std
rorl
cs
or
adc
popa
mov
in
ret
std
adc
out
pop
ss
and
and
push
jle
jbe
stos
in
pop
loopne
sub
mov
movsl
or
fidivs
cld
cli
xor
sbb
mov
call
in
mov
jbe
xchg
jns
xchg
inc
popl
push
add
xchg
mov
jnp
xor
pop
push
cmpsl
rol
stos
ljmp
inc
repz
xor
or
and
sub
mov
mov
pop
das
add
jb
loop
inc
adc
inc
outsl
int
in
es
out
lock
lods
test
scas
setne
fldcw
shlb
jmp
pop
punpcklbw
lds
add
stos
xor
sti
mov
das
out
pushf
mov
jmp
and
lret
dec
jns
xor
aad
cs
sub
hlt
out
arpl
mov
lret
adc
push
jnp
jecxz
outsb
push
or
and
mov
mov
sbb
push
cmc
jne
popf
bound
fisubrs
mov
dec
mov
stos
dec
stc
xor
mov
subl
iret
inc
jle
lock
adc
inc
xor
pop
adc
push
jnp
jne
enter
fcoms
pop
sbb
mov
mov
out
xchg
dec
push
xchg
nop
mov
lret
addr16
pop
xor
or
push
xchg
js
inc
push
arpl
dec
jge
add
leave
cmp
mov
cwtl
and
push
and
dec
dec
lret
jl
jae
pminsw
lcall
mov
mov
imul
js
ja
or
scas
fistpll
mov
imul
fxch
in
inc
jb
pushf
cmp
adc
adc
stos
jae
test
rorb
adc
mov
fisttpl
add
je
rolb
and
adc
out
inc
divl
scas
jae
fstps
push
jmp
jp
pushf
or
jl
test
adc
test
inc
pop
popa
cs
and
fsubrs
sub
push
fildl
popa
nop
std
sbb
out
xor
inc
sub
dec
xchg
int3
mov
or
inc
bndstx
lods
call
mov
in
mov
mov
out
dec
mov
lea
sti
dec
pop
push
mov
xor
cwtl
pop
mov
pop
push
cmp
cmc
or
push
xor
sti
or
arpl
xor
jg
iret
popa
scas
stos
dec
dec
pop
jno
inc
cmp
nop
mov
sahf
leave
xor
adc
cmpb
out
push
adc
pusha
pop
inc
pop
xor
and
ja
cwtl
repz
lea
out
dec
sbb
into
orb
int
sbb
in
and
test
xchg
imul
and
shl
and
popf
and
decl
mov
ret
jb
gs
enter
into
jb
into
out
aam
and
and
push
orl
dec
lret
or
sbb
and
jmp
push
mov
cwtl
das
pop
push
xchg
adc
push
test
jbe
ret
test
cmp
cli
fstpt
xor
and
mov
or
cmpsb
push
mov
fnstsw
dec
push
stos
int3
inc
cltd
xorl
cmp
inc
jno
dec
sbb
adc
adc
lret
cmpsl
mov
jno
jns
xor
push
ss
pop
lcall
dec
int
add
sub
mov
ficompl
mov
repnz
mov
fprem1
cmc
inc
sbb
jae
flds
cmc
sub
das
in
mov
pop
jnp
rolb
pop
jg
push
mov
jno
sub
mov
test
xchg
and
daa
mov
cs
test
push
dec
push
inc
push
or
sahf
mov
cltd
pop
pop
dec
std
sarl
mov
call
loope
cld
fcmovnu
xchg
mov
push
ss
mov
or
jge
add
xchg
and
mov
sub
les
mov
loope
ja
push
mov
andl
pop
push
xchg
out
add
xor
jecxz
call
outsb
js
adc
mov
filds
jl
jge
xchg
xchg
adc
cli
movsl
inc
jne
jg
stos
xor
mov
adc
rorb
pop
addb
pop
add
incb
push
jae
push
call
stos
rorl
fwait
cli
jg
inc
ja
dec
lret
push
out
mov
clc
addb
cmp
jbe
jecxz
pushf
mov
rorb
movsb
icebp
sub
pushf
andb
or
roll
lods
adc
int3
clc
fcompl
in
iret
lret
mov
shll
stc
xchg
adc
pop
testl
fcompl
popa
cmpsl
dec
push
add
ss
leave
clc
ljmp
ret
push
in
xor
or
test
imul
sub
out
mov
enter
enter
in
outsb
addr16
jp
or
xlat
or
dec
imul
push
leave
mov
cld
fisttps
xor
sahf
pop
ret
jg
add
jnp
inc
scas
push
xchg
sub
add
xchg
mov
iret
xlat
mov
jl
out
jne
pop
jmp
mov
add
leave
mov
xor
std
mov
mov
and
inc
sbb
push
cmp
inc
hlt
int3
stos
clc
test
lret
mov
add
jecxz
push
cs
mov
xor
push
in
cmp
std
mov
shll
out
int
dec
xor
push
imul
mov
pop
out
call
push
pop
xchg
pop
ficompl
stos
movsl
icebp
inc
mov
pop
popa
lds
add
mov
adc
repnz
lret
cmc
fisubl
and
mov
repz
pop
mov
int3
movl
jnp
scas
mov
mov
pop
ja
test
rcl
xor
push
jo
add
dec
push
jge
cmp
lret
pop
outsl
lea
cmp
in
mov
sbb
jecxz
mov
in
mov
mov
popf
mov
mov
lds
roll
jp
sbb
vpand
outsb
notl
in
cmp
les
sbb
loopne
pop
arpl
rcrl
pusha
ret
cli
mov
loop
fwait
push
xchg
or
ljmp
xchg
pop
push
jbe
pop
or
fdecstp
mov
cmp
loop
jae
mov
pop
and
mov
mov
mov
out
out
push
lea
aam
stc
mov
mov
xchg
aad
test
push
test
push
sub
mov
jle
sahf
sbb
imul
inc
cmp
scas
sub
lods
or
or
mov
es
ja
sbb
stos
push
je
cli
fidivrl
repz
push
addr16
dec
add
int3
sbb
jbe
gs
xorb
cwtl
sbb
shld
aam
or
inc
fistpll
ret
xor
fsubs
xchg
inc
inc
in
scas
imull
lcall
sbb
stos
cmc
rolb
pop
aam
testb
adc
leave
adc
aas
jle
sbb
addr16
js
jg
jnp
xchg
mov
in
or
xor
add
sbb
mov
sbb
mov
lret
push
pop
dec
ret
jg
clc
dec
stos
xchg
adc
and
mov
nop
loopne
or
inc
into
movaps
addr16
cmp
clc
leave
dec
mov
jnp
pop
push
popf
xchg
pop
mov
imul
sbb
fistl
int3
xchg
push
cmp
xlat
aam
enter
and
sub
adc
mov
lds
ret
pop
dec
ja
xchg
shll
push
sbb
out
adc
push
push
inc
mov
hlt
pop
xchg
fiaddl
mov
mov
sub
mov
fmul
pop
adc
es
lods
jns
add
mov
repnz
outsb
xor
sbb
clc
push
sbb
fwait
paddd
jmp
loopne
adc
push
popf
repnz
push
xchg
fcompl
jne
pop
inc
jge
pop
dec
mov
in
shll
loopne
or
pop
dec
xchg
push
pop
loopne
cmp
test
clc
xor
out
out
add
xor
inc
movsb
insb
call
add
pop
jge
dec
in
mov
pop
fdivrs
fstps
ds
iret
in
mov
loope
xchg
mov
cmc
stc
mov
mov
sbb
insl
incb
sahf
push
cltd
in
scas
fldt
sbb
jmp
mov
xor
mov
push
xor
pop
xor
inc
sub
in
jge
lock
jmp
jp
in
filds
das
xor
adc
cli
fdivp
enter
sbb
add
jmp
and
daa
ret
cmp
jns
cli
push
add
cs
out
out
mov
ja
push
mov
push
fistps
cli
or
and
sub
or
pop
push
mov
hlt
cmp
cwtl
cmp
int3
ret
dec
adc
ljmp
push
jb
lods
dec
pop
ja
fsts
inc
inc
mov
inc
testl
iret
rclb
lahf
add
pop
lds
mov
inc
inc
cmc
mov
pinsrw
testl
sbb
push
pusha
ffreep
xchg
cmp
loop
mov
daa
push
lcall
jnp
out
shlb
and
jbe
inc
cltd
scas
cmpsl
hlt
push
test
cmpsl
sbb
dec
ss
sbb
enter
cmp
shl
pop
nop
data16
pop
out
xor
adc
jmp
add
das
mov
in
fs
aas
loope
sbb
pop
repz
hlt
gs
aas
cmp
in
jge
mov
bound
dec
mov
out
popa
cmp
ljmp
sbb
pop
leave
test
data16
or
inc
ror
cli
add
sbb
loop
fadds
push
mov
dec
scas
xchg
js
imul
dec
js
gs
repz
mov
es
dec
in
mov
sbb
das
dec
dec
aas
push
lods
call
lods
adcb
xchg
mov
pop
and
inc
mov
inc
jne
mov
js
fimuls
and
sub
iret
out
rcll
xchg
rcrb
stos
ljmp
dec
or
add
push
mov
lods
mov
sbb
jo
mov
pop
jae
pop
jg
or
mov
mov
jb
jne
mov
aam
in
pop
cwtd
bound
add
jp
mov
xor
add
cmp
pop
adc
or
fcomi
ljmp
pushf
sub
pop
add
xlat
lods
jge
push
pop
mov
fld
fwait
push
ds
push
mov
pop
and
js
add
data16
loope
sub
cmp
bound
mov
repnz
push
cmp
aaa
shr
xlat
pushf
out
jno
shlb
test
mov
xorl
add
jne
xchg
pop
adc
inc
pop
loopne
negl
push
mov
test
cmp
imul
adc
mov
inc
pop
cmpsb
xor
adc
out
insb
rorl
repnz
mov
mov
icebp
lock
mov
and
sub
mov
xchg
insl
mov
or
data16
pusha
lods
cmc
fadds
mov
xchg
mov
clc
scas
xor
sub
sub
adc
data16
and
xor
lret
or
rcrl
mov
lods
push
mov
mov
sarl
movsb
fidivl
test
divb
dec
mov
stos
xor
fcompl
cmp
test
subl
cli
pop
aad
cld
fidivs
inc
jbe
out
push
sbb
enter
test
pop
test
cmp
xor
pop
adc
xor
dec
ja
dec
add
mov
or
mov
mov
inc
insl
cwtl
push
sbb
stos
fcoms
clc
les
lods
pop
lea
or
call
ret
mov
addl
sub
das
jg
dec
out
mov
popf
dec
int3
repnz
mov
cmpsl
add
cmpsl
loope
xor
or
push
pop
push
add
aas
ljmp
test
mov
std
cmp
icebp
je
jae
push
insb
fimull
jl
push
add
and
movsb
jg
xor
movsl
pop
jb
fs
jge
sbb
out
fisttps
mov
aad
sahf
push
test
into
xor
xor
mov
cmp
bound
fadd
cmp
inc
je
adc
xor
push
fcomi
xchg
cld
andb
popa
cmpsl
and
enter
cld
xchg
fcoml
sbb
shlb
push
popa
sub
dec
insb
rclb
jp
mov
jecxz
xor
xchg
mov
pop
shll
push
sub
mov
jge
mov
and
inc
or
xor
pusha
stos
pop
mov
stc
xchg
lds
sub
sbb
fmull
shl
mov
into
mov
test
push
xor
ss
ja
cmpsl
stc
mov
in
nop
fcmovb
popa
ffreep
test
jmp
adc
test
movsb
adc
xchg
fisubs
popl
xchg
cltd
enter
jbe
imul
or
push
js
negb
popf
pusha
fpatan
sbb
cmp
scas
cwtl
in
cmpl
popa
and
sahf
out
adc
push
add
sbb
outsl
sbb
mov
push
sbb
test
pushf
ds
repnz
outsl
shll
sahf
rorb
xchg
sub
or
arpl
out
cli
mov
xor
mov
sbbl
rclb
xorl
arpl
sahf
and
aas
sub
mov
out
cmp
adc
and
test
pop
es
ror
ds
bound
cli
imul
push
in
ds
int
cmp
or
rorl
testb
test
mov
pop
stos
push
xor
repz
xchg
mov
jne
insl
fsubs
mov
pop
dec
outsb
popa
adc
or
push
jg
sbb
adc
das
insl
int3
js
fs
lock
mov
add
jbe
inc
in
mov
pop
cmpsb
addr16
loop
into
xor
cmp
or
stos
rorl
lea
jo
mov
orb
aam
cwtl
dec
shll
ja
aam
out
cmp
jl
xchg
ds
sub
add
sbb
mov
mov
int3
adc
outsb
test
cmp
outsl
inc
cmp
ja
insl
inc
popf
test
cmp
xlat
mov
int
in
movsb
mov
into
inc
xchg
sub
pop
or
call
ss
xorb
jo
lret
jb
leave
rcr
rol
ja
mov
in
jno
aaa
xor
mov
jge
sbb
sub
and
ss
or
sar
shll
mov
iret
int3
pop
lock
sbb
jmp
mov
movnti
sub
and
cmc
or
test
sub
and
xchg
scas
hlt
dec
xchg
out
aaa
fidivl
fidivrs
mov
aad
popf
push
scas
lcall
imul
lcall
jb
cltd
mov
push
lahf
out
adc
push
sub
prefetchw
or
orb
test
repz
jp
js
mov
cmp
xor
aas
push
pop
cmp
jge
jl
cltd
xchg
daa
addr16
jns
in
cmpl
pop
pushf
rclb
mov
jle
sub
aad
rcrl
mov
push
les
popf
dec
sti
roll
das
ja
fwait
popf
mov
leave
push
jmp
xor
push
push
pop
xchg
mov
stos
outsl
dec
or
lods
and
addr16
arpl
imul
daa
decb
je
xor
cmp
out
mov
mov
das
rclb
adc
dec
arpl
push
imul
jmp
jmp
cmp
mov
xchg
in
stc
sub
or
std
rolb
andl
into
push
cmp
cmp
jne
ljmp
mov
inc
push
int
xchg
ds
mov
lret
rclb
lcall
sbb
pop
jne
sbb
dec
mov
bound
dec
add
jecxz
clc
fcoml
js
push
repz
mov
cmc
ret
loopne
insl
hlt
cmpsl
jnp
rcr
insl
ffree
pop
in
test
frstor
icebp
or
jecxz
cmpsb
adc
scas
pop
inc
lcall
jp
imulb
test
pop
out
push
mov
mov
adc
fstps
fisubrl
pushf
inc
negb
movsb
jno
or
test
stos
testb
push
xchg
in
mov
pop
xchg
cli
add
push
pushf
icebp
and
insl
sub
cld
clc
pop
push
mov
test
cltd
es
aas
mov
push
adc
or
push
call
mov
dec
loopne
lahf
mov
adc
inc
lcall
lock
jnp
int3
dec
into
int3
adc
xrelease
lea
imul
and
xchg
adc
add
cmp
cmpsl
cwtl
add
enter
rcl
or
or
pop
int3
subl
add
clc
and
inc
inc
push
scas
mov
jo
imul
leave
cltd
lcall
cld
pop
sti
in
into
mov
mov
xchg
xchg
and
sbb
jecxz
fwait
lock
sbb
cli
xorl
ret
in
mov
imul
sub
cld
popf
lret
rcrl
sub
push
icebp
push
out
fstpl
ret
dec
cmp
cltd
jo
call
sub
pop
mov
jge
loopne
push
and
bound
xchg
dec
or
push
adc
pop
push
roll
mov
lods
int3
data16
mov
jno
outsb
loope
mov
jno
push
lcall
ljmp
sbbb
imul
jae
push
ja
ja
test
std
or
xchg
xchg
test
idiv
lcall
push
mov
in
xchg
in
dec
mov
test
sbb
test
pop
mov
shrl
adcl
mov
pop
in
out
mov
bound
sub
adc
mov
in
and
ret
xchg
in
push
jge
scas
scas
das
lds
xor
mov
cmp
imul
arpl
hlt
in
dec
mull
fdivrs
push
inc
mov
icebp
int3
sbb
push
mov
sbb
and
jg
es
rorl
pop
and
mov
inc
mov
ljmp
mov
lds
adc
les
mov
push
adc
mov
adc
or
adc
xor
pusha
popf
iret
and
int3
and
stc
jbe
scas
faddl
adc
fcomps
and
scas
cs
adc
jg
cmp
imul
and
sub
rorb
lods
in
ret
sbb
sbbl
mov
mov
fmull
daa
fmul
xorb
sti
out
lahf
aad
dec
jmp
test
shlb
xchg
into
pop
adc
lods
and
push
lock
leave
lahf
lock
cmpsb
ljmp
push
aas
push
leave
xor
push
jae
popa
mov
inc
int3
mov
add
in
cltd
xchg
cmp
push
je
add
adc
pop
jle
pop
loop
sbb
out
jecxz
clc
lret
cltd
add
je
sbb
xor
aaa
fstps
lods
shrl
call
fmull
outsb
pop
out
xor
hlt
cmc
adc
pop
cmp
test
shrl
mov
cmp
push
or
jmp
push
mov
jae
es
mov
dec
insl
inc
outsl
dec
shrl
fcompl
and
cmp
pop
xchg
xor
mov
das
repz
pushf
js
imul
jno
ljmp
pop
ss
nop
dec
std
adc
xor
mov
push
sahf
jns
adc
mov
sbb
jnp
add
mov
cmp
sbb
jb
add
pop
sub
sarl
adc
xchg
in
add
xchg
xor
or
stos
fcoml
int3
mov
sub
movl
andl
dec
mov
xchg
sub
lods
pop
xchg
ficoml
mov
mov
xchg
dec
gs
jge
push
mov
adc
dec
fisubrs
xchg
push
xchg
sbb
bound
pop
xchg
in
push
mov
jne
fmuls
popa
stos
jne
and
pop
sahf
push
mov
push
sub
add
sbb
sarb
pop
ss
push
mov
jae
cmp
lock
stos
dec
mov
loope
jmp
lcall
lret
xchg
arpl
jge
push
dec
aad
mov
cltd
lock
test
sbb
and
lret
pop
ret
sbb
sbb
insl
imul
sbb
jnp
movsl
jb
data16
sbb
xchg
mov
xchg
andb
xor
add
test
adc
mov
xchg
sbb
test
mov
stos
inc
incb
arpl
mov
jge
xor
movsl
sub
stos
xor
adc
mov
mov
or
faddl
add
fmulp
sub
cmp
test
movsl
and
push
adc
push
mov
add
stos
or
in
aas
mov
roll
jb
pusha
cmpsb
popa
shlb
mov
and
xchg
lahf
rcrl
cmc
pop
xchg
push
popf
fmull
dec
cmc
scas
shrl
mov
cs
data16
std
dec
mov
and
aad
push
add
cmp
push
pop
das
inc
jecxz
outsb
cmp
mulb
fiadds
xor
addb
ds
lods
inc
bound
mov
inc
inc
stc
les
pushw
inc
push
repz
imul
sbb
dec
inc
adc
fwait
ljmp
into
sbb
cmpsl
jle
xor
mov
inc
jmp
xchg
loope
dec
mov
push
cmp
lret
dec
mov
sub
sub
cmpsl
into
inc
push
push
les
xchg
push
sub
dec
insl
push
push
pop
hlt
cmp
popf
mov
mov
repz
in
loop
adc
mov
daa
or
jmp
sub
jo
pop
xor
lret
inc
cmp
xor
outsl
into
jg
pop
push
cmpsl
push
icebp
fsts
jae
daa
daa
cmpsb
cmp
jl
sarb
jl
push
addr16
add
cli
pop
mov
jp
aam
lea
jmp
mov
sbb
pop
bswap
imul
lcall
jnp
pushf
int3
jge
push
scas
fimull
sub
add
pop
xor
mov
cmp
ja
xchg
arpl
loop
das
sti
push
push
inc
ljmp
ret
sub
out
sbb
push
adc
stos
sub
mov
sub
jno
or
insl
cltd
hlt
sti
mov
mov
jbe
mov
mov
sbb
or
or
pop
fdivrl
pandn
add
rclb
test
insb
cmp
test
mov
data16
ss
mov
pop
dec
add
fisubrl
aas
js
ljmp
and
xchg
sahf
xchg
lods
add
xchg
inc
inc
ss
dec
cmp
cmp
es
scas
pop
js
subl
and
lret
push
cmp
cltd
outsb
sub
jae
push
mov
arpl
aam
repz
in
clc
pop
pop
pop
sub
fsubr
xchg
dec
lods
outsb
and
cmp
aad
sub
cmp
sarl
or
sahf
dec
aad
cltd
nop
movl
jbe
test
daa
sub
lret
push
cmp
pop
mov
ret
stc
xchg
xchg
mov
sbb
pop
xchg
andl
adc
pop
addr16
imul
insl
fbstp
insb
rorl
test
test
jno
push
mov
ljmp
cmpsl
mov
sub
ljmp
movsb
gs
jg
pop
xchg
mov
inc
push
data16
inc
sbb
or
sub
sar
and
dec
andl
dec
or
inc
push
sub
push
movsb
or
mov
inc
stos
vmovsd
mov
pop
cmp
daa
cmc
and
xor
jecxz
mov
aaa
hlt
outsl
repnz
stos
adc
cmc
gs
cli
ret
lods
es
fs
jg
adc
enter
mov
sarl
in
or
insb
test
lcall
das
and
push
loopne
xor
ja
fmull
xchg
push
and
inc
mov
cmpsl
cmp
fiaddl
mov
adc
js
adc
icebp
push
rorl
addr16
xor
add
sub
shlb
ficompl
dec
mov
dec
lret
mov
sti
push
cmp
xor
mov
jbe
addr16
or
xchg
insl
iret
cli
mov
pop
sub
shll
std
mov
push
test
cmp
sbb
or
scas
sahf
pop
jne
loope
mov
movl
xor
test
jmp
test
push
lretw
cmpsb
xchg
mov
pop
insb
jmp
xor
lcall
dec
xchg
or
inc
mov
mov
dec
or
in
fsubrl
mov
ror
jbe
bswap
daa
shlb
mov
push
test
emms
dec
imul
lods
add
and
mov
in
mov
bound
dec
push
and
sbbl
and
lock
sub
cmpsb
lea
addr16
imul
int
dec
xor
dec
and
dec
out
out
xor
mov
xchg
sti
xchg
xchg
sub
dec
dec
xorl
xchg
xor
sub
pop
xor
jle
lea
mov
jb
in
pushl
push
notb
aaa
fistl
sbb
push
fdivrl
in
sub
ja
ds
enter
mov
outsb
sbb
inc
jbe
and
ljmp
hlt
xor
iret
pop
rcll
mov
jbe
hlt
aaa
sbb
mov
lods
arpl
dec
push
aaa
sbb
jns
repz
cmpsb
sbb
stc
lods
add
adc
push
push
fisttpl
xor
cwtl
or
nop
data16
mov
push
add
pop
movsl
and
adc
outsb
lods
dec
divb
sub
std
outsb
pop
insb
pop
lds
xlat
das
jle
std
inc
sub
insb
ds
sub
shlb
sub
jp
pop
out
idivb
test
cmp
xor
sbb
sti
sub
xchg
stos
ljmp
fs
repz
popa
xor
aaa
jecxz
inc
mov
fidivrl
je
sbb
imul
jbe,pt
jbe
repnz
xchg
imul
adc
out
cmc
in
inc
jbe
push
scas
inc
mov
dec
xchg
cmp
pop
gs
mov
cmp
and
test
mov
add
inc
fwait
jb
adc
sbb
pop
fmull
mov
jg
mov
inc
push
stos
scas
push
mov
lret
jge
arpl
adc
incb
sarl
inc
mull
imul
pop
mov
cmp
xor
mov
push
dec
xor
in
in
dec
pop
aam
sub
mov
jge
iret
pusha
stos
decb
call
test
outsb
inc
insl
jge
or
dec
fsubrl
mov
ljmp
push
dec
js
cmpl
subb
fildl
icebp
test
adc
subb
loop
and
in
dec
jmp
mov
sbb
sub
cmp
push
shlb
fndisi(8087
andb
push
mov
incl
loopne
jb
mov
jmp
insb
jmp
xchg
scas
dec
mov
gs
add
and
inc
fdiv
lods
pop
mov
insb
xchg
test
push
sbbl
xor
mov
sahf
repnz
add
and
xchg
lret
ret
je
jecxz
test
mov
pop
or
lahf
cld
sarl
inc
adc
sbb
cmpsb
push
out
mov
popa
sbb
mov
scas
inc
neg
add
dec
in
scas
sti
pop
mov
or
push
push
es
push
aaa
push
xchg
test
adc
sbb
lds
xchg
xchg
mov
pop
in
adc
xchg
in
xchg
mov
addl
outsl
cmp
divb
mov
call
xchg
push
rorb
out
das
dec
fidivrl
test
fwait
xchg
and
sub
shll
aaa
jo
cltd
inc
mov
rcl
lods
test
mov
test
popf
lahf
mov
imul
fsubrs
xchg
int3
xlat
mov
in
inc
fldenv
pop
pop
cmp
cltd
daa
in
dec
scas
subb
push
cltd
movsb
call
push
insb
mov
dec
jp
mov
scas
push
xor
aad
mov
idivl
xor
adc
jmp
jo
sbb
outsl
mov
int3
jnp
adc
push
mov
xchg
mov
mov
loop
sub
add
sbbl
xor
popf
sbb
cltd
pop
xchg
mov
mov
or
lcall
jmp
shll
stos
inc
aas
sub
nop
mov
popf
cs
scas
dec
insl
icebp
aam
cmpsl
stc
insb
loope
push
pop
cmp
cmp
movups
adc
and
sub
clc
fs
std
xchg
je
push
xadd
enter
mul
divl
mov
or
stc
mov
jge
pop
push
xor
sbb
push
lds
repnz
mov
dec
hlt
mov
jnp
cmp
sub
xor
out
popf
fcoms
mov
hlt
push
fisubrl
mov
push
in
jp
jp
loope
js
jns
imul
or
lcall
cmp
push
sub
popf
sbb
aaa
inc
xor
sub
cmp
inc
or
enter
stos
inc
pusha
mov
rolb
fsubrl
and
pop
push
xchg
into
mov
roll
cmp
sti
xchg
jno
dec
les
inc
insl
push
xchg
lret
mov
dec
jnp
addr16
out
and
nop
mov
shll
fwait
sbb
mov
push
lods
cli
outsl
enter
in
add
arpl
pop
in
xchg
stos
arpl
add
mov
rolb
stc
addb
xor
adc
insl
je
mov
add
movsb
daa
push
sub
mov
icebp
shlb
cmpsl
mov
or
mulb
jne
sbb
and
add
pop
fistl
lcall
int3
add
imul
outsb
pop
cmp
addl
fs
inc
add
xchg
stos
jl
sbb
dec
xchg
adc
push
xorb
ss
inc
ja
pop
pop
push
push
ficomps
jmp
adc
das
imul
mov
sub
fistpll
inc
repz
mov
outsl
lahf
and
stc
cmp
push
or
pop
daa
out
and
pop
push
adc
xchg
cmpsl
mov
add
fdivrl
mov
xor
push
rclb
outsb
cmp
cld
jl
mov
and
adcb
arpl
mov
adc
out
addr16
sub
inc
lahf
sbbl
jecxz
cli
push
rcrb
cmpsl
adc
xlat
or
std
and
arpl
in
mov
rol
or
cld
mov
or
dec
loopne
rclb
inc
push
js
fwait
adc
push
ljmp
loope
fildl
push
pop
aam
nop
mov
ljmp
insb
push
pop
inc
xor
punpckhbw
insl
add
push
scas
fadd
add
xor
jno
inc
jp
test
inc
popa
andb
sub
push
mov
mov
mov
hlt
pop
dec
fnstcw
data16
addr16
dec
xor
push
sbb
inc
and
xchg
cwtl
cmp
fld
xchg
mov
imul
mov
ficomps
dec
cmp
xchg
sub
testb
sub
adc
push
push
cmp
lods
lock
fbld
add
add
jo
sub
adc
leave
pop
int3
fstl
push
iret
mov
pop
jge
popf
xor
aaa
lret
lods
imul
pop
sbb
inc
rorb
data16
sarl
inc
xchg
les
mov
adc
mov
ljmp
pop
icebp
int3
xor
call
mov
push
test
adc
repz
pop
push
aam
adc
jg
adcl
mov
pushf
outsb
mov
cmc
hlt
leave
ret
call
jo
pop
dec
jb
fiadds
xchg
out
shl
cli
push
xor
pop
mov
or
movsl
cmp
int3
test
mov
shrb
shrb
adc
out
lods
inc
sbb
cwtl
jg
dec
pop
mov
xor
xchg
push
dec
je
mov
das
pop
cmpsb
mov
push
mov
push
ds
lcall
cmp
sbb
in
push
sub
inc
dec
adc
rcrb
ror
in
dec
vpandn
mov
stc
ret
loopne
sarl
dec
xor
ljmp
adc
ret
jl
sub
cmp
mov
movsl
pop
mov
push
lods
aaa
call
dec
mov
lcall
int3
lock
xor
inc
cltd
sub
in
mov
rcll
aam
mov
pop
nop
aad
xor
clc
clc
pop
inc
jbe
shrl
mov
aam
or
pop
dec
popf
ds
mov
mov
jno
in
shrl
push
int
out
cli
and
insb
insb
in
push
mov
and
fnstsw
mov
test
pop
rol
dec
mov
lcall
or
and
adc
test
cmp
cli
pusha
daa
fmuls
out
mov
lea
jnp
jnp
mov
sub
jg
ljmp
mov
add
test
mov
insb
sub
jp
push
push
fucomp
cltd
push
jae
and
out
repz
or
cmp
aaa
xchg
jg
testl
and
pop
mov
cmp
hlt
xchg
out
push
push
aaa
aad
cmpsl
mov
addl
dec
stc
and
shr
add
les
in
cltd
xor
incl
ja
ficoml
jns
cltd
sbb
insl
mov
sahf
pop
sub
inc
dec
insb
dec
inc
mov
pop
inc
inc
jge
mov
in
adc
sbb
shrb
ret
and
and
pushf
scas
jg
lahf
cmpsb
inc
hlt
xor
pop
push
lahf
add
cwtl
push
repnz
cmp
cwtl
pop
rcrb
jge
xor
xchg
cltd
dec
push
les
in
out
loop
std
mov
test
insl
xchg
jl
outsb
xchg
loop
in
sahf
movl
adc
add
mov
loope
cltd
sub
movsl
in
mov
fnstcw
mov
jl
push
aad
mov
jecxz
sub
pop
out
ret
pushf
lods
fs
inc
repz
add
lods
mov
jns
les
loopne
pop
insb
jp
in
ljmp
stos
xchg
filds
popa
and
rorb
dec
sbb
nop
shufps
enter
popa
test
dec
das
add
mov
push
push
pop
mov
arpl
pop
insb
xor
or
or
fmulp
lret
jnp
jo
jl
pop
xor
in
inc
stc
cltd
loope
mov
or
pop
mov
pusha
fdivrs
lahf
mov
lret
cmpsb
addr16
jne
cmpsl
stos
and
mov
popa
cltd
jo
aad
xchg
push
sub
stc
lock
lret
loopne
shll
xchg
mov
inc
popa
add
test
imul
xacquire
mov
movsl
iret
fmuls
xlat
jnp
pop
js
pop
stc
sub
fs
adc
jecxz
aam
shr
dec
dec
lds
aaa
pushf
icebp
push
outsb
pusha
dec
mov
add
inc
push
imull
fldenv
fwait
jg
iret
jge
and
sti
fwait
cmp
sbb
or
mov
push
imul
sbb
inc
aad
sub
pop
mov
and
cwtl
iret
inc
inc
pop
add
mov
jae
loop
jne
inc
xchg
out
gs
xor
in
xadd
nop
lret
xchg
xor
int
mov
jnp
push
lret
xchg
std
inc
mov
xchg
test
add
cs
mov
aam
enter
xor
js
loope
mov
add
push
fdivrl
das
int3
stos
mov
in
jne
outsb
or
repz
jp
push
inc
adc
repnz
das
cmpsb
xchg
repnz
sbb
int
call
dec
mov
dec
sti
lahf
jl
sbb
test
pop
inc
push
out
loop
xor
fwait
cmp
add
ja
call
hlt
dec
mov
sbb
aas
std
aas
mov
push
sub
cmpb
shl
xlat
inc
cmc
pop
mov
sub
ds
stc
and
push
pop
sbb
loop
mov
push
mov
and
add
push
cmp
jnp
and
push
movsl
mov
test
popf
and
mov
jg
shl
pop
stos
sub
mov
pop
dec
xor
gs
jbe
mov
bound
je
or
fiadds
and
or
add
dec
push
sbb
pop
in
dec
add
jl
mov
mov
adc
not
add
gs
shlb
mov
push
push
jl
lods
xchg
xor
xor
orl
or
pop
jle
jo
push
xchg
sbb
cmp
test
mov
xchg
sbb
cmp
outsb
jg
fildl
aas
fs
adc
push
lret
cmpsl
lret
out
imul
adc
je
fxch
nop
xor
daa
push
xchg
pop
mov
adc
xlat
jo
and
fwait
imul
mov
inc
and
jle
scas
das
ret
std
movsl
mov
and
jo
mov
xor
sub
out
movsb
icebp
mov
jo
pop
testb
fldcw
and
and
inc
cmpb
or
add
xchg
push
xor
inc
in
mov
pushf
loopne
negl
mov
ja
and
jle
sarb
mov
cmp
notl
aas
mov
dec
cmpsl
scas
inc
je
bound
icebp
pop
adc
xchg
leave
bndldx
cmp
lret
push
push
inc
sbb
mov
inc
sub
idivl
push
leave
aas
push
push
pop
mov
sbb
shrb
sub
ret
xchg
inc
cmp
pusha
popf
insb
fdivp
stos
aaa
sub
mov
sub
cmp
lds
das
repz
push
call
cli
mov
jl
lret
ljmp
cmp
loopew
add
jno
jmp
push
dec
rolb
jl
sahf
repnz
sbb
sbb
cmp
jb
xor
jmp
repnz
cmpb
data16
inc
push
call
pop
sub
cmpsb
mov
addr16
ret
xor
mov
out
pusha
cmpsl
sbb
mov
in
jbe
daa
loop
hlt
outsl
xchg
je
cmp
xor
or
and
adc
rorb
rclb
xor
addr16
mov
outsb
jno
aaa
adc
mov
test
push
sub
jbe
and
cmp
mov
out
movsl
xor
fldenv
xchg
mov
shl
mov
sbb
mov
es
data16
rolb
test
jae
dec
sahf
mov
orb
dec
jmp
rcrb
fdivs
cmp
mov
gs
popa
test
adc
pxor
lods
mov
pop
into
xor
loope
lret
out
sbb
cmp
adc
xchg
pop
xor
cmp
push
enter
scas
inc
mov
mov
jbe
inc
lock
add
push
jmp
pop
dec
out
adc
mov
sbb
xor
push
inc
mov
xchg
aam
sbb
pushf
imul
pop
lods
sub
fildl
add
iret
js
ljmp
jae
bound
pop
repnz
and
inc
cs
fidivrl
jne
and
xor
cltd
cwtl
jecxz
fwait
or
fisubl
cmp
mov
xchg
mov
fstpt
dec
and
pop
jnp
or
mov
xchg
push
aam
mov
and
mov
pop
sbb
push
xor
mov
lret
addl
dec
sbb
xor
and
cld
dec
pusha
add
gs
xchg
mov
push
dec
adc
clc
notb
cmp
cmp
stos
adc
xchg
mov
lds
jg
push
fstps
push
jae
mov
pushf
xor
sahf
adc
pop
test
xchg
mov
mov
mov
or
push
jmp
stos
ja
cmp
clc
or
sub
push
test
js
cmp
sbb
ja
and
inc
add
div
mov
adc
jp
mov
aas
mov
mov
xor
xorl
cltd
notb
or
adc
ja
or
push
dec
fimuls
insl
mov
add
cld
sar
and
jae
jns
dec
icebp
xchg
stos
mov
cmp
inc
enter
sbb
dec
loop
dec
les
xlat
and
pop
jo
jl
mov
insb
xchg
aas
cmc
pop
cmp
mov
add
dec
fisttpll
les
aam
sarl
or
jmp
and
xor
cmp
push
jl
pop
push
xchg
sub
sahf
xchg
jnp
cmp
fwait
mov
loope
test
mov
and
stos
daa
les
dec
push
lods
xorl
cmp
out
ss
mov
mov
mov
rol
push
in
add
jbe
dec
pushf
mov
mov
call
outsb
fnstcw
mov
mov
test
dec
jl
cmp
or
sahf
aad
mov
iret
aam
mov
sub
push
jg
imul
repnz
sbb
cld
jg
sti
push
cmc
mov
in
jno
int
cmovp
cli
inc
inc
hlt
outsl
shll
aas
gs
push
in
mov
cs
pushf
loope
mov
fistpl
jg
fcoms
add
fdivrs
jbe
data16
add
popf
repz
push
popf
pop
enter
decl
mov
cmp
sub
int3
jb
pop
sub
pop
adc
jae
sub
outsb
and
cmpl
cwtl
dec
inc
pop
outsb
xor
xchg
adcb
lods
mov
outsb
out
xor
sub
montmul
cmpsb
inc
addr16
jb
dec
push
mov
call
sub
movsl
das
int3
jo
jmp
rolb
std
mov
mov
arpl
loop
cli
dec
int3
test
mov
dec
mov
test
xchg
push
insl
push
outsl
mov
mov
lcall
jae
jge
jne
dec
test
add
push
sbb
inc
mov
pushl
adc
mov
mov
mov
or
mov
ret
pop
cli
hlt
push
mov
pusha
fisttpl
cmp
add
adc
sub
mov
pop
movsl
loop
jmp
or
lods
fstps
mov
mov
ret
sub
mov
js
clc
mov
jle
mov
mov
xor
repz
inc
outsb
xor
fnstenv
lock
mov
imul
pushf
popa
push
loope
pop
jmp
lock
xlat
pop
dec
xor
push
std
movsb
pop
mov
insl
add
mov
test
cmpsl
lret
and
dec
dec
fistpll
inc
inc
repz
lds
inc
pushf
sahf
add
insl
mov
dec
ret
adc
testb
pop
sbb
imul
xchg
dec
sti
pop
push
rolb
sbb
sbb
and
inc
or
push
shrl
xor
sub
outsb
jecxz
loopne
test
hlt
mov
xor
and
cmp
ljmp
dec
ret
push
cmpsl
xchg
mov
push
mov
dec
and
jae
jae
cmp
pop
ja
sub
je
loope
gs
xor
fs
mov
out
add
mov
jbe
imul
push
mov
wrmsr
scas
jbe
in
or
out
nop
pop
andl
cmp
mov
mov
shlb
repz
cmp
push
push
das
std
aaa
xchg
pushf
fs
mov
add
repz
loopne
pop
pop
es
and
mov
mov
sub
push
or
cmc
jecxz
fwait
mov
loopne
das
or
cli
jns
arpl
push
push
xchg
dec
mov
fisubl
add
je
fcomps
xchg
hlt
cmc
sbb
icebp
pop
xchg
aad
in
movsl
rol
dec
jg
mov
shlb
dec
mov
mov
shlb
aaa
mov
daa
ss
push
and
inc
int3
mov
pop
and
cwtl
stos
push
jg
ret
mov
pop
mov
out
inc
xchg
rorl
jg
xor
jge
or
push
xchg
pop
add
lock
mov
imul
pop
pop
cmpsl
daa
or
ret
fmull
mov
sbb
cs
jle
adcb
loopne
mov
jecxz
xor
les
loope
add
loope
adc
xor
bound
pop
dec
or
inc
sbb
inc
inc
dec
dec
sbb
xlat
push
pop
in
lea
sub
js
jge
lea
mov
fwait
jne
insb
jmp
push
dec
xor
cltd
mov
pop
and
sbb
test
inc
jno
and
mov
int3
ljmp
push
shrb
test
sub
xchg
jns
cmc
mov
and
fists
ljmp
out
xchg
fidivrs
pop
fcomi
por
test
cld
js
push
push
cmp
inc
push
fwait
mov
push
jo
nop
jle
fs
pop
xlat
cltd
decl
mov
ficomps
xchg
xchg
xchg
mov
dec
cmp
fimuls
sub
pop
rorl
insl
xor
push
sbb
xchg
cmpsb
dec
mov
push
fisttpll
adc
jp
lret
mov
mov
xor
inc
cs
jmp
aam
les
les
xchg
insl
cmpsl
test
adc
pusha
mov
jmp
cmp
dec
xchg
testl
out
pushw
cmp
cmp
test
add
mov
insb
lahf
add
in
mov
lahf
ja
pop
jno
fstpt
incb
cmp
lods
pop
out
push
xchg
dec
push
pop
xchg
call
or
add
pushf
or
jb
mov
lahf
mov
divb
je
cmp
adcl
cmc
lock
mov
sbb
pop
scas
es
lcall
or
or
nop
cmp
pop
outsl
mov
add
sbbl
test
xlat
mov
mov
sahf
and
scas
xchg
sbb
stos
aas
int
jle
add
mov
clc
repz
stos
push
mov
inc
ret
mov
je
adc
and
mov
ds
inc
dec
sbb
lock
cmp
int
cmovs
xor
mov
and
or
mov
cmp
jmp
insl
in
and
sub
pminsw
add
fdivr
push
cli
cltd
sub
xlat
insb
lock
mov
sub
xchg
inc
cltd
jecxz
and
pop
mov
mov
jb
push
loop
sub
inc
inc
cmc
or
push
sahf
add
test
shlb
add
cmpsb
sub
icebp
adc
inc
sti
push
bound
add
push
fwait
mov
pop
sub
fcmovnbe
por
sbb
mov
or
dec
sbb
loop
adc
mov
and
std
adcb
jbe
loop
es
aas
cmp
sar
jae
ud2
lods
add
idiv
dec
fstpl
and
jle
jecxz
xchg
mov
cmpsl
pop
outsl
call
xchg
xor
fcomip
imul
scas
ret
scas
subb
movsb
cwtl
mov
push
mov
mov
repnz
cmc
lock
rcll
mov
loop
pushf
out
movsl
pop
fwait
mov
mov
sub
jp
dec
fwait
xchg
and
pop
js
inc
xchg
scas
push
mov
mov
ret
insl
int
pop
aaa
fldenv
xor
push
or
mov
or
mov
xor
enter
mov
pop
dec
and
ss
fdivrl
bound
sub
mov
mov
iret
hlt
push
idiv
pop
adc
mov
adc
stos
std
mov
sbb
es
pop
lods
sub
push
lds
iret
push
test
pop
add
out
loope
imul
out
faddl
pop
sub
iret
hlt
movsl
or
ret
jnp
xchg
ljmp
push
pop
pop
mov
mov
imul
cmp
fiaddl
add
mov
lock
mov
and
dec
sbb
cmp
loop
enter
or
out
inc
mov
pop
sbb
mov
add
fisubrs
imul
sub
out
mov
cmc
out
and
xorl
jp
scas
inc
jns
test
es
mov
fisubrl
ljmp
notb
cmpsb
out
nop
push
jecxz
and
sub
ja
cwtl
mov
pop
aam
xor
sahf
pop
sarl
mov
ret
xchg
dec
mov
ror
in
out
sub
imul
xchg
outsl
loopne
inc
icebp
jle
pushf
mov
jmp
mov
movsb
xor
sub
movsl
sbb
sbb
add
subb
and
or
cmp
mov
inc
js
pop
cli
dec
inc
lods
pop
leave
dec
and
mov
fcomps
push
daa
mov
sbb
jno
fbstp
gs
sbb
mov
xchg
cli
popa
and
mov
fsubs
xor
lock
mov
loopne
sbb
scas
kmovb
sub
mov
jns
jmp
pop
cmp
xlat
sub
push
int3
jb
mov
fldl
fisubl
loopne
adc
push
stos
inc
fldenv
into
movsl
bnd
cmpsl
sub
adc
jo
popf
add
ds
stc
fwait
mov
jg
inc
pop
xchg
aam
adc
adc
pop
jmp
or
mov
inc
mov
sbb
daa
mov
mov
lret
mov
or
add
sbb
inc
jno
mov
sbb
addb
data16
test
pop
sbb
sbb
cld
pop
test
sbb
add
in
fstpt
xchg
js
call
outsb
and
enter
jns
leave
jno
and
test
pusha
xchg
mov
and
inc
mov
mov
cmp
cmp
sbb
bound
lods
inc
inc
std
pop
mov
mov
dec
pusha
jge
cmpsl
movsb
fbld
push
push
adc
sarl
cmpl
dec
mov
aas
and
xor
cld
pop
dec
and
fimull
popa
sbb
popa
xlat
push
lea
mov
out
out
jle
mov
inc
jns
into
sub
mov
sub
roll
mov
insb
fwait
mov
sahf
or
notl
adc
xor
ja
adc
outsl
sub
pop
cmc
jne
mov
and
inc
int3
cltd
jl
cmp
or
lods
sub
aaa
jg
into
imul
push
jno
cmpb
cmp
fsubrl
pop
rcll
mov
pushf
test
iret
xlat
push
in
mov
pop
xorb
mov
jnp
push
lret
xchg
sub
or
push
jecxz
jp
mov
pusha
inc
nop
add
pop
cmp
cli
cld
xor
cmp
je
imulb
gs
push
das
mov
or
andb
mov
mov
mov
rolb
xchg
cmpsl
dec
mov
nop
add
out
das
dec
sub
das
xchg
xchg
mov
push
adcl
mov
pop
sbb
int
mov
movsb
inc
mov
popa
mov
mov
andb
cwtl
adc
xlat
movsl
ss
cmp
pushf
xor
sbb
sub
out
inc
repz
push
aas
mov
jae
adc
mov
xchg
and
xchg
cmp
pop
push
stos
jb
out
sub
or
idivb
popa
or
dec
gs
mov
add
sbb
test
repz
lock
daa
mov
ljmp
shll
aad
sarb
notb
imul
mov
xchg
rcll
xchg
and
stc
cmp
or
sub
test
mov
xor
sub
pop
movsb
stc
mov
mov
and
push
mov
inc
mov
sbb
repnz
jmp
adc
cmp
mov
dec
js
jae
xchg
add
lcall
out
mov
lods
cld
test
jle
test
ljmp
popa
jp
clc
lods
aaa
outsl
jmp
and
lock
push
out
mov
xchg
rcrl
add
lahf
inc
aam
mov
rol
decb
pop
xchg
and
adc
jb
mov
mov
decb
cmp
add
sbb
es
xchg
mov
out
xor
mov
jo
rcl
pushf
je
fnstcw
or
testl
stos
cmp
mov
xchg
and
push
jnp
cwtl
adc
int
cwtl
addr16
cmpsb
and
dec
adc
xchg
call
and
adc
and
xor
loop
add
add
dec
pop
orb
aam
add
dec
outsl
into
xlat
inc
cmp
std
jle
aad
jo
push
outsb
dec
mov
and
inc
xorl
xchg
or
lcall
add
fmuls
popf
jne
sub
mov
iret
jle
cmc
ds
xchg
push
push
cmpsl
cltd
cltd
and
imul
cli
stos
pop
lss
mov
popf
push
ss
movsb
hlt
test
push
movsl
cwtl
lea
pop
cmp
mov
xchg
push
jmp
xor
imulb
gs
mov
dec
mov
loop
je
out
in
popf
dec
pushf
loope
das
mov
xchg
mov
dec
mov
jl
mov
xchg
daa
popf
cmp
mov
cmpb
inc
ret
mov
loope
sub
cmpsb
add
pop
push
sbb
sub
movsb
lret
fwait
popf
shl
push
mov
xchg
sub
adc
divb
shrb
xchg
mov
inc
add
mov
pop
mov
mov
imul
jecxz
outsb
aaa
cmp
adc
jecxz
int
ss
dec
popa
jno
mov
das
bound
lods
daa
mov
movsb
add
in
fistl
xchg
xor
popf
sbb
inc
adc
fstpl
mov
or
or
shrb
daa
testl
decb
cmp
and
push
mov
sti
xor
jno
cmpsl
insl
push
rclb
sub
dec
jle
mov
sbb
push
addr16
dec
adc
addr16
rcll
pop
mov
test
out
enter
aaa
adc
in
fcomps
int3
or
jle
aad
scas
jge
repz
mov
sahf
out
cmc
and
cmpsb
dec
or
sub
nop
ret
mov
lahf
push
push
adc
add
pop
xor
outsl
clc
pop
test
xchg
xlat
daa
mov
pop
inc
jge
adc
pusha
dec
mov
jp
movsb
testb
sbb
pop
pop
rcll
mov
dec
sarl
mov
test
fwait
cmp
xchg
je
fidivs
lret
or
sbb
and
dec
movsl
jp
pushf
pop
pop
movsl
pop
mov
sbb
inc
mov
mov
jle
sbb
mov
pop
nop
sbb
mov
lds
adc
lods
pop
ret
mov
cmp
rdpmc
mov
add
xchg
movsb
mov
cli
loopne
sbb
mov
xor
outsl
rol
jb
dec
sbb
sub
mov
iret
sti
push
rolb
pusha
jp
out
movsl
mov
jge
cld
adc
push
sub
inc
mov
sbb
outsl
and
repz
xchg
popf
adc
jecxz
jae
push
sub
push
jg
push
xchg
popa
and
cmpsl
add
pop
dec
mov
dec
inc
pop
sub
outsb
push
stos
aad
rol
cmc
xor
fstpl
hlt
adc
push
bound
or
or
push
fstpt
jg
fsubr
pop
dec
sahf
rcr
and
pop
out
jbe
test
dec
pop
outsl
test
fidivrs
pop
icebp
xor
jecxz
pop
cmpsb
inc
fdivr
cltd
xchg
or
dec
cmp
pop
cmc
xchg
sub
shrl
mov
adc
push
mov
inc
jg
jecxz
sar
lret
ljmp
mov
inc
xchg
lcall
cli
mov
sbb
jno
inc
inc
jbe
sbb
or
dec
popf
aas
fistpll
orl
das
mov
mov
push
or
jecxz
and
sbb
jl
sbb
loop
lds
inc
addr16
lahf
ss
xchg
sahf
inc
and
mov
push
mov
push
mov
lret
xor
shrb
aaa
xlat
sbb
outsb
icebp
lea
cmpsb
push
andl
fs
sub
loopne
shlb
xchg
out
xor
mov
xchg
cltd
pop
mov
ret
push
and
repz
add
mov
jne
cmc
adc
bound
repz
cli
dec
inc
in
push
lock
mov
sub
inc
add
jl
sub
jbe
mov
jnp
adc
cmp
xor
jb
add
std
cmc
mov
repz
pop
out
mov
mov
mov
mov
sarl
fstl
pop
fidivs
xor
push
mov
outsb
out
stos
cltd
call
push
shrb
pop
jecxz
inc
ret
mov
out
fmulp
cmpsl
mov
mov
cmp
inc
movsl
jecxz
inc
insl
sbb
ljmp
mov
std
sub
push
mov
sti
sbb
xchg
leave
dec
loope
es
inc
or
and
add
or
pop
cmpsb
fists
jp
inc
movsb
lcall
jns
int
xor
mov
cwtl
inc
pop
or
adc
lret
inc
rcrb
or
jp
and
inc
adc
dec
xor
in
sbb
popa
or
stos
cmp
ret
clc
inc
push
cmpsl
int3
mov
mov
ja
xchg
fwait
gs
stc
add
in
call
xchg
cld
push
aaa
test
vunpcklps
mov
mov
je
enter
sbb
mov
mov
movsb
fwait
cmp
ficoml
negl
or
mov
jge
pop
jae
mov
cwtl
in
inc
cmpsl
pop
or
mov
and
dec
cs
jno
outsb
jmp
pop
call
movsl
int
lods
push
sbb
jmp
jnp
push
sbb
jle
lds
sbb
sbb
mov
lcall
ficomps
jmp
and
mov
jge
mov
jg
jb
les
repnz
sub
xchg
adc
and
outsl
or
xchg
insl
sbb
cltd
pop
sbbl
pop
test
and
or
ss
ss
fldl
aaa
jne
frstor
push
pushf
not
add
fldcw
mov
sbb
out
mov
shll
jecxz
dec
inc
lds
cmpsl
pop
stos
outsb
orl
mov
cmc
mov
mov
ss
inc
jl
repnz
bound
jecxz
gs
push
lock
mov
sahf
inc
mov
sub
xchg
ja
leave
inc
push
jnp
andb
and
jb
test
popa
xor
xchg
dec
stc
jb
xor
add
xor
mov
call
add
outsl
adc
enter
push
aas
jecxz
leave
xor
push
lods
stos
pop
test
mov
dec
mov
add
mov
dec
clc
je
ficomps
pop
ret
jecxz
idivl
adc
outsb
pusha
push
pop
and
mov
jp
dec
outsl
pop
stos
mov
je
test
inc
imul
sbb
dec
xorl
fsubs
sub
jl
ja
xchg
jne
mov
bound
add
aam
cli
push
shll
repnz
cmpsl
mov
push
mov
loopne
jge
clc
sub
sbb
push
push
mov
xchg
enter
push
or
das
push
or
mov
xor
add
repnz
inc
xchg
dec
out
jo
notb
or
shl
insl
testl
mov
dec
xchg
arpl
dec
adc
pop
es
xor
mov
push
lahf
int3
mov
pop
push
lock
repz
or
xor
ds
lods
movsb
hlt
mov
and
sub
jle
adc
hlt
mov
pushf
jne
push
jp
cmp
push
push
insl
xor
mov
push
jge
xchg
imul
push
mov
das
rcl
mov
push
jno
divb
imul
dec
fdivl
sahf
adc
adc
inc
push
inc
scas
inc
adc
adc
dec
shrl
pop
negb
mov
mov
dec
xorl
into
inc
mov
cmp
add
xchg
std
out
sti
xchg
cmp
in
fs
inc
cwtl
movsl
push
jnp
xchg
cs
repnz
mov
cmp
jecxz
xchg
pop
xchg
es
pop
sti
jp
or
arpl
push
fstpt
jl
xchg
imul
xor
idivb
push
pop
int
mov
in
cli
lods
into
fnstsw
mov
cs
cmp
int3
imul
cwtl
xchg
fwait
outsb
lret
es
aam
movl
or
lret
mov
stos
xchg
dec
jns
or
loopne
jo
loop
fidivrl
jg
mov
sti
sar
out
pop
sbb
pop
inc
fistl
les
movsb
fdivr
lret
aaa
lahf
scas
loop
xchg
aaa
loop
mov
push
mov
std
idivb
lds
pusha
jo
rolb
mov
xchg
mov
or
push
inc
cmp
lea
xor
jo
pop
jp
in
or
rcll
sbb
xchg
sub
movsb
mov
mov
int3
pop
inc
jmp
int3
jl
es
jns
push
mov
add
hlt
xchg
jmp
dec
js
and
das
xchg
sarl
stos
stos
in
insl
cmp
xchg
cmp
xor
test
or
adc
cmp
mov
mov
pop
fdivl
loope
js
loop
int3
dec
pop
mov
bound
and
repnz
divl
sub
mov
shlb
nop
mov
inc
mov
mov
sarb
loopne
clc
pop
sbb
cmp
push
test
cmpsl
jns
jmp
fwait
imul
jae
rcll
sarb
fwait
lds
push
insb
pop
xor
xor
xlat
fs
movsl
mov
ds
jmp
adc
fdivp
dec
arpl
call
scas
in
xor
sub
jmp
push
cmc
sbb
dec
cli
sahf
and
xor
adc
cmp
decl
inc
movsl
int3
mov
aaa
ljmp
mov
movsl
aaa
jb
mov
call
and
testl
push
std
neg
dec
in
test
out
mov
jae
lds
jle
std
jg
xchg
dec
xlat
shlb
ja
mov
std
pop
rcrb
outsl
pop
mov
pop
cmp
cltd
cltd
divl
inc
in
nop
cwtl
pushf
leave
jb
stos
sub
andl
cmpsl
push
add
rclb
push
adc
add
call
sub
inc
lods
cmpsb
mov
mov
xchg
xor
dec
shlb
lcall
ljmp
add
shlb
sbb
inc
subl
incb
mov
roll
mov
stos
cmp
loopne
scas
pop
out
xchg
out
insl
lret
xchg
mov
mov
es
sbb
cmpsl
xor
lock
adc
cmp
out
pusha
fmul
dec
test
mov
or
lods
hlt
xor
es
inc
dec
out
filds
ror
sti
ret
nop
xchg
push
push
dec
add
dec
inc
push
mov
cmpl
repz
and
jecxz
je
pop
scas
clc
or
add
or
lds
sub
mov
cmp
in
stos
mov
mov
fwait
dec
outsb
adc
sbb
jne
and
push
lods
cmpsl
enter
rol
jg
insl
leave
jp
popf
sbb
dec
sub
sub
push
in
mov
cli
hlt
add
bound
lcall
sub
lret
cmp
nop
adc
xor
or
in
jmp
insb
mov
and
dec
and
js
or
fs
sti
adc
mov
fcmovnu
jp
jmp
insb
bnd
xchg
sub
mov
inc
xorl
out
xor
fimuls
pop
addl
pop
repz
mov
or
sarb
adc
xchg
mov
mov
dec
jo
cmc
aas
mov
mov
sbb
xor
push
mov
scas
pop
jmp
cmp
fmuls
mov
push
xchg
mov
mov
or
jl
mov
xchg
movsb
out
mov
mov
fucomi
aad
ret
in
imul
sbb
push
inc
pusha
cwtl
movsl
inc
incl
mov
ret
inc
es
dec
ljmp
arpl
in
es
xor
or
pop
rcrb
pop
mov
mov
insl
xor
xchg
pop
xchg
sub
mov
ret
push
adc
aam
loope
cwtl
xor
testb
adc
arpl
cmp
out
add
ret
mov
push
sar
insl
decb
mov
cld
dec
jbe
cmp
cs
mov
sub
adc
mov
lea
mov
shll
fidivs
inc
dec
mov
dec
adc
outsb
adc
comiss
cmpsb
dec
lds
or
cmp
add
bound
icebp
mov
orb
rcrl
fs
push
or
pushf
push
jo
ljmp
sub
sbb
outsl
sbb
jne
or
xchg
mov
insb
inc
mov
in
cmp
cmc
ljmp
push
adc
loopne
in
sbb
dec
mov
lds
lods
hlt
clc
repz
addr16
roll
ss
gs
mov
cmc
xor
in
iret
mov
outsl
sub
imul
lcall
pushf
pushl
add
sti
iret
lahf
int3
mov
cmpsb
adc
and
xor
rorl
ljmp
insb
pop
cmp
pop
push
mov
int3
lock
rcll
mov
xchg
mov
int
jge
cmpsb
fstl
add
js
divb
push
aad
iret
orl
lcall
in
sub
mov
mov
push
test
mov
pusha
lcall
mov
in
ficoms
or
inc
imul
pop
push
bnd
aam
xor
xor
mov
and
repz
mov
xchg
fists
xlat
add
mov
dec
mov
mov
mov
sub
idivl
insb
movsb
inc
pop
test
mov
cli
sub
aas
adc
mov
insl
ret
pop
lea
jne
jns
bound
repnz
lret
pop
out
rclb
aad
pop
cli
push
out
ljmp
fwait
dec
push
fs
jg
scas
divl
mov
cmp
pop
pop
push
test
loope
es
cmpb
insl
mov
vrcpps
mov
push
and
aad
push
fisubs
or
test
std
jne
adc
or
push
popf
mov
into
mov
xor
mov
loopne
mov
lea
stos
nop
add
lret
xchg
inc
jge
lcall
imul
cmc
pop
gs
je
cmp
in
cmovbe
sbb
pop
pop
arpl
mov
fidivs
xchg
jg
shrb
jae
mov
out
stc
test
mov
stos
jbe
movsl
rolb
xor
add
adc
xor
ficomps
sub
push
push
jnp
xchg
inc
ret
add
mov
xchg
jno
rcrb
pop
mov
dec
pop
xor
rcr
pop
sub
push
into
push
push
jg
mov
cmp
mov
sub
mov
les
les
scas
adc
scas
hlt
pop
rclb
in
dec
cmc
rorb
xor
mov
rorb
out
cmpsl
clc
sbb
mov
jmp
mov
push
cmp
jne
add
repnz
enter
push
mov
sbb
mov
mov
xor
or
mov
mov
or
and
addr16
push
pop
push
out
adc
pop
cmpl
push
dec
nop
jl
cmpsl
cmc
add
mov
mov
adc
mov
cmp
lock
mov
frstor
xchg
dec
inc
hlt
int3
adc
in
xorb
xlat
fstpl
cwtl
xor
mov
sbb
add
push
scas
inc
xchg
je
cs
mov
aad
cmp
mov
push
jg
mov
adc
in
pushf
cs
insb
out
push
add
out
inc
sbb
or
iret
lods
rcrb
xor
sbb
fidivrs
mov
jecxz
pop
push
or
leave
leave
push
out
lds
int
leave
mov
jmp
pop
inc
adc
imul
xor
cmp
mov
loopne
repz
dec
pop
ja
les
xchg
xchg
stos
pop
inc
ficomps
xlat
fmull
cs
jl
icebp
adc
movlps
sti
das
ljmp
mov
adc
mov
ret
sbbl
xchg
cwtl
pop
push
sub
cwtl
movsb
push
and
push
push
adc
aad
lods
aaa
pop
and
stos
and
negb
aam
shrl
mov
int
decb
stos
sti
lods
or
enter
pop
cmp
mov
call
sub
jecxz
push
or
inc
pop
push
divl
pop
fildl
in
xor
add
mov
mov
rcrl
xor
dec
ds
divb
mov
loope
pop
mov
adc
mov
in
bound
add
gs
arpl
pop
lds
and
push
add
data16
fisubrl
out
or
mov
adc
jmp
mov
sbb
mov
in
mov
mov
mov
scas
sub
ds
addr16
mov
mov
mov
cltd
movsb
stos
enter
inc
je
or
outsb
fwait
dec
xchg
xchg
or
stos
sub
and
adc
push
cld
pushf
or
insl
ja
xlat
dec
push
sti
fnsave
mov
lods
shll
ljmp
mov
cmp
or
push
mov
lcall
rorb
icebp
mov
loopne
xor
cmp
xchg
mov
jne
sarb
push
cmc
inc
fcom
orb
fldcw
roll
enter
aam
js
xor
lock
dec
and
test
jmp
and
sub
lcall
jo
or
cmpsb
fisttpl
sub
cmp
lret
xor
int3
test
imul
pop
fs
jp
jl
popf
sub
and
out
out
mov
cmp
out
sahf
sub
std
xchg
pop
dec
jmp
inc
ss
mov
fsubrs
jo
sbb
leave
dec
or
test
mov
and
ja
mov
pop
xor
lods
out
dec
jmp
inc
add
mov
pop
notb
xchg
mov
out
or
mov
jae
dec
mov
daa
and
ds
sahf
aaa
push
push
sbb
outsb
sti
push
lret
add
jae
sbb
loope
inc
mov
xlat
ret
sub
popf
jo
cltd
adc
sbb
mov
adc
loope
xchg
mov
enter
mov
push
dec
movsl
arpl
jns
xchg
push
sbb
jge
stos
mov
cmp
xchg
mov
es
cmp
xor
stc
fwait
add
jecxz
xor
arpl
or
inc
or
push
push
fisttpll
mov
into
movl
imul
mov
pop
push
lods
cmpl
lahf
xchg
into
movsl
add
sbb
inc
adcb
adc
mov
les
shr
inc
addr16
push
adc
cld
or
xor
lock
dec
and
push
lret
into
mov
pop
inc
stos
jmp
mov
add
pop
sub
daa
pop
jo
ljmp
sti
mov
bound
xchg
jno
mov
in
out
fwait
mov
les
loop
push
xchg
fcoms
or
mov
xrelease
push
pop
add
inc
or
das
mov
push
data16
xor
push
xor
cli
add
je
in
mov
cwtl
dec
es
movd
dec
scas
out
jbe
add
sub
push
adc
clc
xchg
dec
sbb
adc
and
std
test
sub
sub
loop
stc
lock
adc
test
or
ds
ficoml
xchg
xchg
mov
fdivp
dec
add
mov
push
xor
xchg
xchg
push
mov
loopne
cvtps2pd
add
aaa
mov
mov
leave
push
mov
loopne
popf
andb
push
sub
clc
loop
and
sbb
movsl
mov
xchg
push
test
adc
xlat
inc
out
js
mov
popf
pop
push
mov
leave
inc
adc
fdivrs
push
in
add
mov
cs
mov
mov
jg
push
bound
xchg
inc
inc
sbb
jns
sub
icebp
jp
xchg
xor
add
xor
int3
iret
push
cmp
insl
test
fimull
rorl
pop
insb
daa
jecxz
pop
or
aas
sub
outsb
dec
mov
lds
fs
loopne
cmp
fcmovne
jmp
xchg
mov
mov
out
std
sub
ret
mov
out
test
pop
cmp
jns
jno
aam
adc
inc
jnp
ret
es
mov
xor
lds
and
pusha
enter
add
or
test
js
outsl
sub
push
push
xlat
ja
dec
call
lods
ja
hlt
and
mov
shrl
clc
pop
into
dec
pop
jo
inc
pusha
mov
int3
mov
pop
inc
and
jle
lret
mov
test
testb
inc
push
jle
adc
shrb
and
mov
shlb
ljmp
rcll
inc
lds
ljmp
enter
mov
dec
mov
push
ret
jb
imul
jae
xchg
xor
mov
repnz
lahf
mov
bound
jmp
mov
scas
icebp
iret
popa
xor
pop
cmovp
xchg
xlat
pop
loopne
adc
js
cmp
mov
inc
nop
in
push
xchg
sbb
xchg
jns,pt
rcll
push
xchg
or
shrb
in
xor
repnz
pop
fwait
dec
mov
jle
lahf
mov
pop
pop
xor
mov
sub
inc
imul
pop
iret
push
inc
stos
jno
loope
cmp
push
jne
mov
addr16
jae
mov
fwait
add
jo
xchg
dec
les
xor
nop
fsubr
mov
pushf
ss
sbb
add
adc
mov
jo
subl
mov
and
adc
or
xor
scas
mov
sub
in
push
es
rclb
or
mov
out
xchg
sub
sbb
fnstenv
lea
aaa
push
push
fsubrl
lods
or
cmpsl
jl
jno
push
xor
arpl
sbb
adc
sti
jmp
mov
push
push
scas
jne
adc
push
inc
push
xchg
rcr
mov
xor
inc
test
or
aaa
xorl
mov
pusha
fsubrl
jle
in
mov
gs
xor
jae
push
popf
xor
mov
lods
call
pop
sbb
loop
mov
sbb
mov
dec
dec
or
nop
push
stos
mov
stos
mov
test
mov
push
push
js
cmc
cmpsb
mov
add
stos
loope
or
pop
xor
clc
fldenv
imul
dec
xor
dec
cltd
jecxz
sarl
pop
ret
xor
jnp
loopne
adc
aam
pushf
jmp
cmp
mov
push
inc
cmpsl
push
push
imul
lret
jns
dec
xchg
inc
test
int3
jae
push
stc
pop
call
push
xchg
adc
push
jl
mov
pusha
movsb
leave
dec
xor
mov
lcall
add
movsl
leave
andl
in
rorl
pop
push
test
and
dec
rolb
xor
daa
or
stos
push
push
into
pop
shlb
movsl
mov
gs
fsts
cmp
cmp
mov
in
cmpsl
shlb
pushf
std
ja
mov
in
jns
lock
jecxz
cmc
subl
dec
xor
and
push
shrl
shlb
cltd
lds
cmp
lods
sahf
mov
adc
sub
mov
ds
pop
dec
push
stos
rol
sub
add
sub
imul
in
clc
mov
sub
pop
jnp
stos
mov
dec
ss
pop
push
xchg
popf
out
add
mov
xorb
pop
lret
push
pop
sbb
ljmp
mov
and
or
jle
add
test
repz
mov
dec
aam
add
adc
sbb
iret
fcmove
xor
iret
xchg
sbb
xchg
cmp
cltd
xor
outsb
outsl
jae
movsl
dec
pusha
pop
lcall
adcb
enter
sbb
adc
xchg
jbe
outsb
cmp
jg
sbb
or
mov
js
cld
jmp
and
fcomi
outsl
out
jnp
xchg
ss
sub
clc
jne
loope
ror
cmp
xor
mov
adc
xchg
aaa
in
dec
cmpsl
push
rclb
pop
pop
push
pop
sub
sbb
out
lahf
push
scas
lcall
push
xor
xchg
sbb
pop
adc
pop
loop,pn
mov
insb
shll
clc
xor
adc
sub
add
mov
pop
dec
jecxz
fcmovbe
inc
inc
pushl
jmp
cmp
je
fwait
stos
addr16
lahf
stos
cmc
xchg
addr16
inc
mov
cmpb
inc
xor
outsl
cmpsl
inc
pop
xor
cmp
jl
test
outsl
sub
into
mov
push
rorb
in
xchg
cli
dec
pop
subb
jbe
xchg
inc
fmull
jo
sbb
sbb
subl
stc
movsb
incb
movsb
sbb
ljmp
outsb
xchg
dec
aad
je
push
imul
enter
out
pop
rorl
lea
rcl
jno
shlb
mov
mov
jnp
aaa
sbb
jmp
ja
sbb
cmp
pop
ret
cmp
stos
test
push
out
cmp
lcall
xchg
sub
ret
xlat
add
jbe
scas
and
jle
les
sbb
dec
cmc
push
outsb
call
adc
mov
cli
shll
mulb
es
push
lds
out
adc
mov
push
xchg
jns
pop
jp
mov
in
inc
sbb
xchg
loop
xor
sbb
test
repnz
mov
sahf
push
sbb
pushf
mov
repnz
jecxz
mov
and
xor
scas
cmp
push
dec
jl
aam
jl
cltd
mov
daa
pop
xchg
mov
popf
xchg
sub
sbb
push
and
push
sub
inc
adc
xor
faddl
pop
aad
mov
cmpsl
add
push
sub
in
into
in
xor
addl
cmpsl
icebp
pushf
aad
clc
mov
jge
out
lea
jnp
cmpsl
adcb
xchg
fwait
adc
lret
push
push
cmpsb
cli
pop
jnp
int
in
scas
push
jns
ret
imul
mov
jge
mov
push
pop
and
movb
gs
pop
js
and
xchg
push
lcall
dec
stc
inc
mov
or
in
push
push
test
lods
jno
mov
hlt
sbb
pop
dec
iret
cmpsl
push
jb
xor
pop
push
sti
sbb
and
int3
into
cmpsb
arpl
into
xor
inc
jno
clc
clc
push
add
fsubrs
in
cmp
mov
push
jecxz
push
js
pop
jge
in
sbb
ret
test
push
sub
imul
enter
sbb
sbb
das
jl
pop
add
adc
mov
sbbl
mov
and
icebp
pop
sub
cmp
sar
pusha
lret
pop
mov
cmp
mov
das
dec
pop
sbb
adc
adc
jbe
jbe
test
adc
popa
dec
dec
fcoms
adc
xchg
xor
lds
pop
push
loope
imul
fidivrl
addr16
add
jmp
push
jae
xchg
jg
in
dec
and
mov
mov
stos
stc
test
xchg
sub
cmp
sbb
inc
sarb
fidivrs
aas
push
insl
xchg
lods
cmp
mov
add
add
ja
push
sbb
cmp
cmp
cmp
lods
or
jl
adc
jmp
js
xchg
add
xorb
ss
fs
sbb
dec
pop
test
aas
flds
cld
lods
mov
cs
push
pop
shrb
xchg
xchg
add
out
bound
repnz
mov
sbb
mov
test
push
push
jne
loop
loop
enter
push
jno
adc
ja
mov
and
sbb
movd
xchg
sbb
lahf
push
ret
dec
pop
sar
add
mov
inc
mov
pop
and
fs
fsubrp
mov
pop
cmp
mov
in
jnp
cmp
iret
and
fisubs
lds
test
andl
inc
inc
and
in
das
xchg
and
sbb
jbe
dec
popa
lea
mov
mov
inc
cmova
jl
mov
xchg
fidivs
out
and
leave
imul
or
pop
gs
data16
mov
sbbb
adc
and
xor
sub
and
ljmp
pop
ret
stos
loope
repnz
mov
jp
cmp
mov
jno
add
inc
push
popf
fstpl
xchg
adc
sti
mov
movsl
sub
lcall
sar
insb
xor
mov
outsb
push
add
adc
pop
cmc
cli
std
mov
push
stc
mov
dec
jnp
insl
into
test
icebp
lret
pop
insb
stos
movsl
mov
jbe
stc
aad
orb
pop
xchg
xchg
sbb
xchg
fisubs
push
call
adc
or
pop
lret
sub
add
xorb
mov
cmc
pop
sti
arpl
sbb
std
loopne
push
xchg
ret
mov
mov
jnp
push
jge
xchg
in
int
fstps
insb
lahf
notb
aad
fcmovbe
inc
enter
popa
stc
or
xchg
int
rorl
int3
mov
mov
jp
je
jo
or
add
gs
xchg
adc
loop
jecxz
cmp
in
dec
jne
jecxz
dec
mov
pop
xchg
xor
ret
xchg
ret
aad
sub
dec
divl
sbb
adcl
inc
sub
aad
sti
outsl
lods
mov
out
test
mov
ja
adc
cwtl
jo
hlt
repz
sbb
sub
mov
repnz
test
push
pop
cwtl
in
push
dec
push
inc
outsb
pusha
and
inc
nop
in
sti
xor
movsb
and
lods
sti
scas
cwtl
insb
in
jecxz
scas
hlt
icebp
jmp
add
jp
sub
xor
xor
pop
jge
sub
cld
mov
data16
es
xlat
sbb
mov
idivl
in
fs
mov
pushf
lea
rclb
push
adc
xor
insl
xor
sarl
pop
sti
insb
mov
cmp
clc
mov
rolb
sbb
hlt
dec
push
fs
mov
jo
push
aad
mov
and
shrb
pop
das
xchg
mov
shlb
loopne
ss
sub
mov
call
pusha
mov
push
sbb
inc
jge
xchg
adc
es
loop
and
in
or
push
idivl
add
add
xchg
mov
addl
fisubl
xchg
or
mov
popf
adc
xlat
sbb
xor
std
lret
mov
mov
mov
push
aad
mov
nop
and
insl
lret
xchg
dec
xchg
rcr
imul
lea
ret
mov
shll
mov
pop
popa
pop
push
push
inc
ja
sbbl
mov
xor
or
fwait
stos
into
arpl
aad
cmpsl
or
push
pusha
scas
push
cmp
neg
je
push
pop
je
lahf
clc
sub
sbb
cmp
insl
push
cmpsb
xacquire
test
push
push
and
add
imul
mov
cmp
popf
popf
lods
outsl
or
push
mov
cmp
roll
push
lea
imul
mov
cltd
iret
insb
ss
jae
dec
jl
push
gs
mov
mov
jp
sbb
out
push
mov
mov
push
and
stos
loope
aam
loopne
mov
insb
adc
rcrb
add
mov
addr16
cmc
shlb
xor
rol
cltd
lock
imul
push
imul
imul
inc
or
mov
xchg
dec
mov
aaa
mov
shrb
dec
mulb
sbb
mov
loop
or
mov
std
adc
nop/reserved
xorl
cmp
int
xor
xchg
pop
std
jno
xor
nop
in
icebp
movsl
inc
sbb
sbb
adc
xor
cmpsl
mov
adc
loop
ss
leave
or
jo
bound
fists
pop
ja
xchg
inc
lds
adcb
ret
sub
cmp
xchg
daa
inc
and
pop
mov
sbb
sub
sbbl
inc
xchg
into
pushf
sbb
jo
movsl
popa
jnp
or
and
add
mov
fwait
mov
mov
xor
cmp
pusha
fistps
dec
xchg
and
out
mov
adc
cld
dec
cld
gs
jmp
xchg
mov
adc
in
xchg
jae
mov
jecxz
adcl
cld
dec
pop
pop
or
sbb
fdivrl
sbb
movsl
inc
out
and
sub
daa
mov
in
cmpsb
pusha
inc
pop
dec
cmc
jle
jnp
test
pop
push
clc
and
add
add
or
pop
or
out
pushf
xchg
xor
mov
cld
fwait
jmp
out
scas
pop
push
xchg
mov
dec
cld
shlb
xchg
push
imul
push
or
mov
jno
jne
cli
push
fs
popa
cltd
and
test
dec
jne
xor
adc
jbe
jp
in
xchg
icebp
jno
jne
pop
popa
inc
inc
sbb
jmp
imul
xor
ja
jcxz
pop
xchg
jb
lea
loop
add
imul
in
lahf
cs
jp
jae
sar
stos
arpl
mov
ret
shlb
sub
aaa
xor
outsb
jns
xchg
xchg
jno
mov
xor
mov
pop
xchg
fwait
popl
or
in
test
mov
dec
and
cmp
out
xchg
add
jae
in
movsb
lahf
in
add
jns
push
add
sub
sar
mov
push
pop
test
int3
push
push
xchg
jecxz
add
dec
xchg
inc
xor
inc
repnz
cmp
js
enter
test
pop
xor
dec
ds
sbb
inc
sbb
out
test
inc
pop
inc
lock
sub
movsb
inc
in
xchg
xchg
inc
ds
xchg
sti
mov
push
mov
dec
mov
or
lret
or
ret
test
sbb
xchg
lds
outsb
dec
dec
lds
mov
mov
pop
dec
data16
push
insl
and
repnz
pop
lock
or
outsb
push
ror
cmp
add
cmp
dec
mov
push
xchg
movl
cmp
dec
adc
xor
push
movsb
ret
inc
out
sbb
ret
lret
mov
jmp
mov
add
jp
mov
adc
adc
sbb
aaa
pop
subb
scas
add
dec
jg
xor
cmp
dec
pop
sbb
jno
jp
sbb
lds
in
mov
int
shrl
push
ljmp
cmp
jmp
hlt
sarb
sbb
cmc
mov
push
xchg
fwait
les
push
lods
in
cs
sbb
xlat
jge
jne
jg
jae
xor
inc
outsl
repnz
or
mov
mov
aas
xor
nop
dec
jne
xchg
pop
adc
and
inc
fwait
push
inc
in
inc
or
fidivrl
inc
sbb
cltd
addr16
mov
jecxz
outsb
scas
hlt
xor
negb
add
stc
imul
addr16
repnz
mov
mov
in
in
sbb
lods
hlt
jae
shll
out
incl
or
jno
mov
lcall
ret
testb
aas
fcomi
sbb
jle
inc
lcall
cmp
loope
xchg
loopne
in
sbb
pop
sarl
loope
dec
call
dec
shlb
jle
mov
sar
cmpsb
lcall
mov
mov
pop
sbb
cltd
lahf
sbb
or
xchg
push
les
fsubr
mov
mov
ds
insb
pop
mov
mov
dec
sub
sbb
insl
shlb
xchg
pop
daa
adc
into
mov
mov
dec
cmp
xchg
rcrl
adc
daa
xor
test
jle
stos
and
fimuls
jg
sbb
sbbl
stc
mov
out
aad
gs
push
add
mov
or
adc
sbb
bound
std
jno
push
pop
mov
pushf
sub
sub
stos
push
mov
aaa
mov
enter
sub
mov
inc
aaa
pop
dec
fcmovu
inc
inc
sbb
sub
mov
inc
ret
cmc
cli
jnp
inc
or
mov
or
out
in
mov
in
push
shrl
pop
sbb
adc
push
mov
out
push
das
in
movsl
stc
cmpsl
clc
jno
xchg
xchg
sbb
mov
outsl
fsubl
imul
fnsetpm(287
faddl
mov
loopne
or
sub
out
lret
or
dec
mov
out
mov
dec
fsub
lea
pop
popa
or
xlat
mov
jl
add
push
aad
sti
insl
mov
or
loopne
dec
mov
add
aam
out
jbe
cmp
adc
loop
pop
mov
push
cmp
cmp
cmc
add
sub
sub
loopne
ds
mov
jns
aas
rol
mov
add
cmpsl
push
jns
ret
fistpl
add
shlb
fsubs
mov
jnp
sbb
insl
fwait
or
push
cmpsb
fs
dec
push
sub
jne
mov
xor
jo
pop
mov
out
int
shll
scas
loopne
loop
fs
push
mov
push
ret
xor
repz
test
jecxz
lods
outsl
sub
iret
xchg
sub
mov
sub
xchg
or
fisubl
repz
jl
mov
popa
pop
mov
xchg
hlt
rcrl
fisttps
insl
imul
repnz
and
mov
call
outsl
cmc
sbb
test
dec
and
push
pop
inc
sbb
push
xor
cld
lea
jns
add
mov
mov
xchg
and
sub
xchg
xchg
push
inc
aas
outsb
pop
mov
xchg
xchg
mov
xor
pop
mov
cltd
inc
dec
and
sbb
lea
test
in
nop
sbb
stos
into
jb
xchg
ja
dec
sti
imul
shlb
stc
sub
jno
jecxz
pushf
dec
sti
pushf
movsb
loope
mov
andl
lcall
xchg
or
inc
cmp
push
test
loopne
sbb
and
pop
les
mov
mov
ljmp
jp
xchg
cli
mov
pop
inc
ds
loopne
stos
and
icebp
call
je
dec
jae
push
int3
pop
je
or
imul
repnz
mov
das
stc
mov
xchg
hlt
stc
in
jp
stos
pop
fbld
andl
jno
icebp
loopne
addr16
cld
ret
mov
aas
sbb
adc
push
inc
xchg
pop
push
lds
mov
xor
cmpsb
daa
push
add
and
adc
ffree
xor
loopne
jl
pop
and
in
inc
push
fnstcw
lea
lret
push
test
out
std
sar
outsb
sbb
fnstenv
and
pushl
mov
and
std
in
and
jecxz
lock
test
mov
mov
pop
pop
ret
jb
sub
shr
out
insl
mov
fnstcw
xchg
pop
jl
je
rolb
mov
test
rcr
icebp
scas
cs
jnp
xchg
or
cmpb
adc
adc
mov
mov
push
cmp
seta
mov
ljmp
cwtl
adc
sbb
pop
xor
or
xchg
adcb
push
mov
inc
aad
mov
xchg
pop
jl
aas
xor
fmuls
add
imul
jnp
mov
mov
inc
xchg
jmp
insl
test
enter
leave
mov
sub
popf
fadd
daa
or
repnz
adc
sbb
inc
cmp
push
jmp
mov
hlt
push
xor
sbb
xchg
mov
inc
add
loop
sbb
imul
lds
and
pop
dec
clc
pop
mov
loope
pop
in
mov
jge
jnp
sbb
setno
push
stos
ja
sub
inc
adc
push
mov
xchg
fidivrs
lret
jmp
mov
mov
rclb
into
rsm
das
shl
xor
outsl
mov
fimuls
inc
outsl
fnstsw
and
das
mov
stc
xchg
enter
push
push
mov
pusha
out
call
loope
stos
movsl
fldl
ljmp
dec
fwait
movsl
mov
mov
push
popa
jo
and
push
mov
pop
ds
sbb
add
push
xchg
fstl
xor
cmpsl
fdivrl
push
subb
loopne
lock
std
jnp
xchg
aam
in
jo
cmp
dec
adc
dec
push
xor
popa
sahf
dec
pop
pop
xchg
sbb
jb
pushf
xchg
les
sub
adc
movsb
ljmp
imulb
call
xchg
sub
or
sbb
fidivl
dec
push
jecxz
inc
xlat
push
dec
inc
jo
cmc
pop
and
xor
lods
aas
inc
pop
stos
mov
stos
lods
mov
push
movsb
movsb
into
push
lea
mov
xlat
cmpl
addb
push
stos
hlt
pop
mov
fwait
jbe
nop
scas
or
dec
push
dec
jo
inc
jg
int3
mov
mov
xor
xor
fmul
ja
out
into
in
xor
cmp
addr16
inc
test
pop
ret
xchg
mov
sub
test
arpl
sub
sub
pop
and
addr16
push
shlb
jg
jbe
mov
icebp
and
cltd
int3
pop
jp
sub
xchg
aad
js
and
mov
jl
add
inc
jg
insb
adc
std
shll
call
fisubrs
sbb
inc
push
mov
imul
cmc
xor
and
cmp
pop
movsb
bound
push
gs
pop
repnz
daa
xchg
test
lods
mov
sbb
add
out
push
cvttps2pi
pop
fsubrl
or
mov
pusha
and
loopne
fiaddl
mov
shll
mov
fcmovnb
stos
stos
in
mov
adc
pop
push
or
popf
ljmp
shlb
cs
push
push
mov
push
or
or
add
out
push
xchg
movsl
pusha
negl
lret
jnp
dec
pop
test
xor
aad
xor
and
adc
repz
inc
inc
sahf
mov
mov
inc
push
fistl
or
arpl
jp
jmp
aas
out
std
pushf
add
fnstenv
add
lea
in
pop
jmp
addr16
out
je
and
loope
test
pop
cs
dec
mov
push
sbb
cmc
and
xchg
imul
adc
xor
or
xchg
mov
adc
mov
dec
mov
jge
test
lock
mov
sar
cli
aaa
push
repz
loopne
push
lret
call
add
pop
adc
pop
sub
sbb
fwait
out
cmp
bound
sbb
shl
loope
inc
push
dec
mov
sbb
jno
or
jp
stc
mov
rorb
outsl
ja
mov
fmul
mov
add
je
sbb
ljmp
pop
sub
in
mov
int
push
adc
cld
sub
adc
mov
sbb
pusha
push
jp
sub
pushf
or
pop
gs
testb
stos
clc
cmc
mov
jne
mov
daa
pop
fimuls
mov
xchg
std
and
std
sub
daa
jl
add
daa
mov
lds
lock
jmp
lea
mov
loop
adc
pushf
push
push
std
test
inc
outsb
adc
scas
inc
xor
jo
and
xor
shr
aam
add
lods
add
cmp
sbb
xor
xor
shl
fisubrs
adc
add
movsb
cmp
stos
xchg
adc
pop
and
popl
lahf
jbe
lock
push
in
cmp
scas
sbb
jnp
aaa
xchg
sub
cld
aaa
aad
pop
cmp
js
int3
test
fwait
or
fnsave
bound
lret
pop
ljmp
arpl
into
pusha
sbb
insb
mov
jecxz
mov
and
sbb
daa
and
push
lods
mov
xlat
dec
add
sub
rclb
push
adc
repz
bound
int
mov
out
mov
push
inc
mov
mov
xchg
and
mov
fists
or
std
xor
rcr
sub
in
jecxz
sarb
inc
adcl
add
adcb
das
lods
out
dec
mov
pushf
ss
popf
cmp
adc
push
xor
pushf
test
and
pusha
or
jne
jg
inc
adc
jle
repnz
inc
jno
mov
fsub
push
rcrl
imul
rorl
mov
xchg
pop
mov
or
sub
fwait
lcall
mov
cmp
add
push
jo
adc
lods
xor
xor
xchg
pop
xchg
mov
jp
jo
xor
loope
push
xor
das
pop
addb
xchg
xchg
test
cmp
stos
xlat
push
xor
xor
lret
shlb
vmovq
mov
jo
aam
mov
jnp
add
and
sti
push
jbe
mov
enter
jb
ss
dec
mov
lods
push
mov
push
hlt
arpl
and
xchg
sbb
bsf
aad
or
hlt
mov
aam
lret
mov
nop
or
test
insb
outsb
mov
xor
js
jg
fstps
mov
je
shll
pop
jb
in
pop
and
es
enter
fdivs
jge
sub
xor
sub
test
mov
xchg
je
gs
out
fcmovb
lret
roll
fstpl
shrl
jae
mov
fstpt
push
sbb
dec
fs
push
ja
pop
push
xor
jb
rep
fldl
or
insb
inc
push
cltd
ficoml
inc
xor
sbb
cltd
mov
add
call
rcrb
lahf
dec
test
and
dec
mov
imul
mov
lods
push
push
sti
shlb
jg
movsl
insl
cmp
jp
test
and
push
sub
xchg
lods
push
inc
dec
push
mov
pushf
mov
cmp
mov
subb
push
lea
rcrl
push
and
add
jl
add
rcrl
dec
lds
and
cmpsl
fsubr
rcrb
push
stos
or
ret
sbb
aaa
pop
push
aad
pop
sbb
cmp
push
adc
push
test
mov
iret
fdivr
mov
inc
adc
mov
mov
or
jne
fisttpll
cmp
sub
push
jmp
mov
dec
cmp
in
xchg
xchg
add
aas
cs
movsb
xchg
movsb
sub
jns
and
mov
test
jb
mov
xchg
orl
movsb
dec
cmp
fisttpll
aad
test
inc
jmp
pusha
faddl
ret
jne
loope
xchg
test
les
jbe
push
jo
pop
xchg
loope
cmp
xchg
lods
cmpsl
jg
jne
adc
scas
test
inc
hlt
push
xchg
or
or
fdivp
insb
xchg
dec
cmc
mov
dec
mov
mov
outsl
call
sarl
cmpsl
add
sbb
aas
jo
push
mov
arpl
fs
pushf
outsl
aaa
test
xchg
fcmove
pushf
outsb
push
js
inc
pushf
fs
mov
xchg
lahf
pop
in
ficomps
xchg
mov
adc
or
mov
cld
dec
and
sahf
sarb
loopne
jp
adcb
jb
out
loopne
pop
inc
pop
mov
fwait
xor
cmp
and
xchg
adc
adc
jo
or
inc
or
cmp
xchg
out
dec
pop
push
or
adc
mov
sbb
decb
mov
imul
arpl
add
cmp
test
nop
ds
stos
icebp
add
jo
sub
and
comiss
lret
lods
pop
test
pop
fxch
mov
add
or
xlat
insl
push
xor
adcl
pop
pop
jmp
int3
fs
jp
xchg
inc
fistpl
adc
sub
mov
inc
push
dec
and
mov
mov
mov
test
orl
hlt
mov
adc
inc
push
out
out
mov
push
mov
sub
lahf
ss
jg
cltd
adc
push
mov
mov
repz
push
in
xchg
nopl
lods
lahf
int
push
daa
mov
lahf
sarb
hlt
loop
adc
fdivrs
ds
mov
push
sti
push
lahf
jns
adc
mov
or
push
mov
mov
out
cmp
insb
andl
mov
inc
ja
ja
mov
in
mov
loopne
push
push
pop
adc
mov
push
mov
cs
int3
mov
cmp
xor
jbe
add
xchg
insb
shll
fiaddl
out
inc
jnp
cmp
test
ret
in
mov
jae
jmp
dec
sbb
or
add
or
mov
push
push
lret
shlb
fdivl
je
sbb
jbe
jge,pn
adc
lock
inc
mov
cli
inc
scas
int3
sub
pop
cmpsl
test
sbb
cmpsb
sub
push
sar
jb
dec
cmp
addr16
adc
mov
cmp
cmp
adc
push
cmpsl
std
int3
dec
mov
ljmp
sahf
rcr
das
or
jbe
and
mov
ljmp
stos
add
sbb
jbe
jl
vmread
dec
pushf
push
sbb
mov
js
shll
in
mov
lret
insb
jmp
lods
or
insl
mov
sbb
xlat
push
pop
sub
sub
sbb
pop
cltd
ljmp
sub
sub
xchg
sbb
push
lahf
es
ret
ret
shrl
xchg
nop
sahf
stos
scas
xor
mov
mov
outsl
mulb
add
push
sub
and
push
arpl
fistpl
or
add
pushf
leave
ret
and
dec
loop
out
fisubs
sub
jb
xchg
xchg
add
mov
adc
lds
rcll
cli
xor
fstp
mov
and
inc
cmp
inc
inc
push
cmp
xchg
inc
and
cmp
cwtl
push
mov
and
lods
or
mov
mov
pop
insb
insl
xlat
push
mov
xchg
in
sarl
sbb
out
xchg
jmp
mov
loop
add
les
add
cltd
mov
or
mov
nop
push
das
add
leave
daa
lcall
scas
lret
fwait
sub
ret
negb
add
pop
popf
cwtl
lret
cmp
leave
xchg
pop
sbb
rolb
and
les
insb
xchg
push
mov
not
pop
shll
subl
mov
pop
sbb
dec
jnp
cmpsl
inc
test
adc
addb
push
cmpsb
jge
mov
cli
sbb
adc
sub
add
mov
xchg
fs
es
ljmp
repnz
mov
hlt
out
xchg
dec
je
mov
dec
xor
xor
inc
push
sbbb
leave
insb
inc
and
xchg
or
jge
iret
inc
sub
sub
mov
cli
cmpl
repnz
xchg
sti
adcl
mov
js
dec
nop
push
in
sub
push
mov
out
in
mov
adc
dec
fstpl
insb
xor
data16
mov
les
jl
xor
xchg
cmp
pop
jo
lahf
sub
lret
or
add
lods
xchg
push
cmp
cmp
orl
xor
inc
bound
or
arpl
ja
jae
cltd
fadd
mov
ss
ljmp
pop
inc
adc
icebp
and
scas
lret
fwait
pop
sti
xchg
loope
fwait
push
outsl
lods
xchg
pop
jbe
fcomps
fmulp
mov
jne
push
mov
add
mov
and
and
push
xor
inc
loopne
aaa
push
xlat
push
push
or
mov
ja
xor
sub
and
cmp
jnp
stc
xor
mov
add
clc
adc
shrb
lret
inc
fiadds
aam
xor
loop
jb
mov
out
inc
or
icebp
dec
lea
xor
sub
or
incl
xor
daa
ret
inc
imul
fwait
jp
sub
arpl
stos
jae
adc
cmp
add
scas
mov
sbb
cmp
mov
mov
pop
popf
test
int
add
adc
push
lret
jno
cmp
fisubrl
jl
push
jb
pop
decl
test
or
mov
lds
loope
pop
stos
push
loopne
sub
fwait
arpl
addb
mov
outsb
out
mov
lea
push
mov
push
lahf
and
fdivs
sbb
das
sbb
cmp
scas
adc
fwait
or
clc
popa
popa
cwtl
sub
and
call
out
xor
xchg
mov
jecxz
je
and
inc
fildll
or
sub
sub
jmp
pop
push
adc
les
xorl
mov
pop
pop
cmp
jno
aam
inc
leave
xor
stos
inc
jecxz
stc
mov
mov
sti
gs
push
cmc
pop
lahf
icebp
repnz
lock
dec
jg
pushf
mov
adc
add
ja
test
push
hlt
push
inc
push
cmp
push
xor
in
jo
inc
pop
out
repz
dec
stos
inc
lret
aaa
inc
cli
pop
std
ret
push
ds
insl
test
and
jp
mov
push
cmp
fmull
sub
ss
jl,pt
jp
aas
repz
jns
and
mov
jecxz
fwait
jno
or
lods
popaw
xchg
loope
lods
and
pop
push
cmp
bound
fisubs
mov
js
movsl
imul
mov
hlt
sub
rol
adcb
aad
mov
rcrl
imul
sub
push
add
sbb
inc
mov
ljmp
scas
sub
cs
movsl
or
nop
add
stos
push
repnz
ret
movsl
xchg
pop
sti
jo
call
shll
test
dec
std
cmpl
std
shlb
push
lods
cmp
add
xchg
es
push
pushaw
cmpsb
xchg
push
dec
stc
hlt
push
or
sub
dec
int3
jbe
inc
sti
loop
popf
nop
lods
insl
sbb
mov
lea
gs
cs
std
push
cmpl
or
stos
add
sub
push
js
and
pop
cmp
cmp
jp,pt
mov
ret
cmp
imul
shlb
jb
mov
popa
aam
and
stos
test
push
xchg
lahf
push
inc
fs
inc
xchg
out
test
mov
xor
jge
out
lcall
inc
dec
and
cmp
cwtl
ret
das
dec
and
pop
and
sti
inc
in
into
mov
sbb
bound
inc
mov
sub
xor
cltd
inc
loop
push
mov
aaa
xor
outsb
les
mov
mov
jns
and
add
shrl
add
cmpsl
das
mov
jae
fists
pusha
mov
popa
cmpb
fcomps
clts
xor
ljmp
mov
sbb
cwtl
jle
mov
mov
mov
aaa
sub
and
in
xor
and
out
scas
lds
stos
sti
lods
ret
dec
ret
mov
fldl
loopne
and
pop
xchg
bound
sub
lret
jo
andb
test
inc
pop
pushf
push
xorps
push
addr16
sbb
mov
fdiv
lret
out
sub
mov
aad
pop
add
iret
and
xchg
in
add
mov
cmpsl
fcmovu
adcl
mov
jge
rep
clc
daa
cmc
jno
aas
cld
cmp
jmp
mov
mov
insl
add
sbb
mov
lods
cmp
or
adc
negl
lcall
add
lret
jl
stc
pusha
stos
test
dec
add
sbb
div
cld
lret
sbb
ljmp
pop
xchg
pop
cmpsl
bnd
fwait
arpl
mov
lea
dec
xor
shlb
and
or
jmp
adc
stos
pop
iret
scas
dec
xor
jge
sbb
hlt
xchg
sti
ret
pushf
mov
pop
mov
hlt
xchg
inc
pop
lahf
adc
dec
fidivrl
loop
xor
xchg
lods
aaa
cmpsb
or
sub
mov
imul
mov
sahf
pusha
sub
loop
imul
std
push
cmp
lods
pop
or
dec
movsl
mull
pusha
add
sbb
call
mov
pop
nop
loope
push
iret
xor
dec
dec
sub
movsl
fmuls
loop
fwait
jae
test
jl
and
int3
mov
jne
test
lcall
test
jns
jle
fidivrs
fcmovnb
jp
fidivs
lods
outsl
adc
cmp
imul
call
imul
jno
dec
std
leave
mov
out
test
pop
push
insl
cmp
mov
pop
shrb
mov
xchg
pop
inc
dec
clc
stc
mov
or
into
push
in
pop
pushf
mov
mov
add
ficomps
movsl
scas
fwait
jb
cmpsl
jo
in
loop
add
inc
mov
push
push
iret
jp
lcall
jo
enter
scas
lock
out
test
shlb
jns
and
push
pop
cli
push
outsl
or
ljmp
cmp
popl
push
out
les
scas
pop
sbb
adc
xor
jecxz
cmp
fwait
pop
push
fisubrs
insl
push
movsb
pop
ficoml
lret
rcr
sub
out
xor
aaa
mov
in
pop
fadds
imul
add
push
fwait
pop
xchg
and
lock
into
icebp
iret
cmp
cwtl
sahf
cmpsl
jmp
push
add
add
stos
and
scas
pushf
mov
repz
stos
lahf
daa
jae
fcmovnbe
sarb
inc
mov
cmp
inc
mov
scas
dec
ljmp
pop
inc
jmp
mov
and
das
pop
enter
add
js
inc
addr16
je
lock
push
out
insb
inc
fldcw
into
mov
outsl
clc
and
mov
adc
sti
loope
int
pop
dec
add
and
and
sbb
xorl
xlat
imulb
xor
xor
cltd
sti
mov
and
mov
xlat
decl
xchg
lahf
jp
icebp
mov
xchg
adc
out
dec
sbb
sub
jecxz
sbb
sbb
pop
add
push
lahf
or
sub
aas
adc
mov
mov
lock
jg
out
or
scas
subl
clc
add
jnp
das
fcmovb
dec
aad
stc
scas
ret
adcl
or
jo
shrl
das
ja
shl
xlat
add
mov
lea
adc
push
sub
inc
cmp
fs
push
inc
ffreep
into
adc
rcll
incl
sub
aad
sbb
mov
subb
lret
jnp
es
and
lods
cmp
cltd
inc
xor
repz
sbb
out
loop
sbb
mov
adc
pushf
insl
int3
push
clc
or
lret
and
loop
jo
push
mov
lret
mov
and
jo
adc
push
insb
push
insl
into
icebp
mov
scas
aam
fisubl
divb
jbe
sbb
adc
sbb
jl
pop
cmc
ljmp
sbb
inc
movsl
out
and
call
pop
icebp
sub
repnz
aas
pop
pop
adc
testb
xchg
movsb
cmpsl
cmp
leave
outsb
addl
mov
mov
dec
push
outsl
and
in
jmp
enter
mov
mov
leave
sahf
shr
mov
insl
into
faddp
fisubrs
mov
int
pop
add
test
test
repnz
cmp
es
int
push
push
cmpsb
in
shrl
outsl
inc
jp
jmp
pop
jb
cmpb
fistpl
push
popa
jns
mov
xchg
popa
mov
push
out
ret
lcall
rcll
xchg
cmp
fldt
mov
cmp
ret
jnp
and
into
call
inc
mov
cmp
cli
sbb
lahf
cmp
push
push
xchg
js
mov
adc
or
pop
fdivl
cmp
jmp
pop
pop
xor
loopne
jge
stos
jg
in
mov
add
lds
hlt
pop
movsl
pop
jns
add
outsl
cld
out
fwait
test
aad
test
out
mov
fsubrp
pop
js
int3
mov
icebp
nop
frstor
push
add
mov
xchg
xchg
jno
pushf
mov
xor
or
add
nop
fisubs
cwtl
pop
lea
push
push
sbb
stc
lea
cmpsl
cmovs
pusha
xor
jl
out
add
outsb
movsb
mov
aad
lcall
outsb
dec
rorl
mov
icebp
testb
mov
xor
pop
mov
push
test
aam
or
lret
dec
roll
or
jne
shll
out
das
inc
jnp
push
mul
shl
push
lea
mov
and
lahf
lret
add
sbb
cmp
cmp
daa
in
or
pop
cltd
jp
and
sub
fs
pop
bsf
sbb
cmp
mov
roll
jmp
iret
xchg
idivb
jae
sub
xor
scas
xchg
sbb
adc
shll
push
sub
jne
jecxz
popf
fs
xchg
dec
mov
bound
jge
xor
mov
fwait
xor
xchg
sbb
or
lods
cmp
rol
bound
sub
test
xchg
in
popf
jnp
js
sub
out
out
add
cwtl
lcall
arpl
xchg
out
inc
sbb
addl
push
inc
and
clc
cwtl
in
sbbb
cmpb
inc
dec
jg
mov
cltd
dec
mov
out
sbb
mov
call
fbld
stc
les
pop
lock
ljmp
and
ficoml
call
mov
lahf
sti
stc
scas
xor
adc
fistps
ljmp
pop
pusha
push
inc
leave
adc
lods
xchg
pop
and
add
add
add
mov
lea
mov
test
adc
add
in
ret
sbb
decl
mov
xchg
xchg
mov
push
cmp
cs
sahf
shll
clc
leave
sub
and
dec
js
insb
push
mov
cmp
in
incb
int3
aaa
fdivl
fistl
js
xchg
bound
or
bound
ret
int3
pop
ja
cmp
es
sysret
add
mov
shl
je
in
loop
dec
repz
fbld
adc
sub
push
cmp
lock
add
pop
cmpsl
nop
mov
pop
shrl
inc
pop
cmp
mov
push
mov
and
movsl
imul
cmp
lock
or
out
lea
xchg
jg
dec
pop
fdivr
jle
movsb
jp
fldcw
int
mov
add
das
adc
fcomps
inc
pop
sub
adc
mov
orb
and
aam
mov
sbb
pusha
nop
mov
mov
adc
in
cwtl
pop
pop
jp
adc
dec
orl
repz
pop
mov
js
std
roll
cmpsb
mov
xchg
pop
pop
nop
test
das
add
scas
sub
jle
add
or
pop
fists
adc
jne
repz
xor
cmpsb
sti
clc
popa
mov
pop
add
popa
stc
in
inc
inc
cmp
inc
lret
jl
jmp
std
pop
mov
daa
cltd
jo
fldcw
push
sarl
sbb
xchg
sub
mov
lods
popf
lods
mov
xchg
xorl
pop
pop
cmp
jbe,pt
movsl
test
pop
ret
or
aad
fcomps
mov
movsb
mov
insb
mov
scas
lret
bound
xchg
pop
flds
out
andl
movsl
add
and
xor
sbb
das
cltd
mov
push
test
inc
xor
mov
imul
out
mov
inc
or
mov
xor
or
and
sahf
push
and
into
push
into
pop
faddl
enter
subl
fstpl
xor
jbe
mov
mov
jl
jl
mov
int
icebp
lods
movsb
gs
das
dec
adc
mov
insl
mov
jp
mov
add
jge
dec
addl
mov
ret
cmc
stc
sahf
nop
mov
xor
jge
cld
int3
in
or
jmp
mov
push
lret
mov
cmc
fs
cld
sbb
test
adc
arpl
mov
scas
pushf
push
mov
mov
jo
adcb
stos
jae
push
test
fs
inc
cli
pop
mov
mov
inc
out
xchg
xor
push
arpl
xlat
hlt
jp
pop
jns
pusha
adc
push
or
jle
mov
roll
cs
arpl
cmp
faddl
pop
popf
mov
test
jno
scas
xor
push
bound
push
shrl
xor
out
add
jae
jmp
push
or
mov
jnp
jns
mov
sub
or
sbb
mov
cmp
repz
stos
lret
jbe
and
jae
jns
dec
lcall
out
push
pop
jne
adc
mov
cmp
repz
mov
std
repnz
pusha
test
lret
cmp
mov
mov
movsb
or
mov
dec
pop
cmp
enter
or
aaa
mov
push
dec
mov
lcall
call
and
imul
sub
dec
stos
out
xchg
mov
xlat
jmp
push
jns
cmp
sti
and
insl
ds
or
rdtsc
in
arpl
iret
inc
jo
aam
sahf
ficoml
mov
gs
ja
add
xchg
push
fstp
sub
xchg
cs
test
rolb
mov
fsts
xor
mov
imul
loop
or
adc
push
jle
outsl
sub
cmp
cli
scas
inc
mov
daa
jo
lea
mov
popf
aam
or
mov
and
and
pop
jle
into
jge
int
loopne
jecxz
jge
js
or
xor
ss
adc
cmc
fnstcw
aam
sbb
sahf
cmp
pop
sbb
aaa
enter
add
pandn
and
inc
and
popl
jmp
lock
into
push
bound
adc
and
aaa
jbe
roll
pop
push
sbb
jnp
pop
xor
inc
mov
sub
insl
mov
jl
mov
es
or
and
movsl
cmp
or
shll
inc
ret
cmp
jo
xor
aaa
hlt
out
xchg
sub
pop
pop
fs
lcall
scas
jg
sbb
std
xchg
cmp
dec
pop
sti
loope
lret
mov
aam
pop
push
fnstcw
cmp
or
nop
sbbb
pop
pop
xor
ret
push
cld
movsl
lret
test
je
adc
mov
push
and
ljmp
jp
pop
lcall
insl
mov
or
icebp
aas
mov
dec
jge
pop
xor
std
rol
xor
xchg
mov
xor
xchg
aaa
jns
ja
orb
cmp
lcall
pusha
mov
lret
andl
dec
jge
mov
mov
fistpl
enter
and
cwtl
das
sti
test
jnp
mov
negb
popf
sub
or
les
cmpsl
mov
pop
mov
dec
xchg
in
mov
mov
dec
dec
dec
test
sahf
sbb
sbb
and
inc
sub
and
xor
add
mov
stos
jg
in
notb
dec
add
push
lea
adc
mov
cmp
push
mov
sbb
or
movsl
rolb
sub
insl
dec
sbb
xchg
rorb
pushf
or
and
popf
lds
or
stc
xor
add
jns
frstor
cmp
push
push
std
addr16
scas
lea
mov
mov
mov
adc
loope
inc
mov
dec
ds
mov
dec
movsl
andb
xorb
test
sbb
xor
hlt
inc
pop
xchg
lds
lds
jg
mov
lret
pop
enter
fldt
mov
das
test
sbb
jmp
push
loopne
les
jb
xor
mov
adc
cli
loop
ffreep
in
lahf
sbb
lods
mov
js
aad
std
mov
loopne
addr16
ss
clc
notb
cwtl
lret
push
int3
bound
cmc
in
cmpsl
jle
push
aaa
sub
mov
arpl
imul
ds
mov
inc
adc
iret
sbb
fincstp
xchg
movsl
jmp
xor
ljmp
popf
mov
jmp
dec
into
mov
adc
arpl
negl
mov
movsb
sbb
dec
lret
leave
push
jge
pop
arpl
sahf
mov
pop
lahf
jle
jne
dec
mov
pop
jmp
in
arpl
lods
ljmp
call
xchg
add
mov
dec
sbb
int
xor
lret
addl
mov
imul
pop
jbe
leave
push
pop
addl
cwtl
or
and
out
sub
push
fcmovb
lea
jge
nop
aaa
and
mov
add
mov
or
xchg
scas
sbb
sbb
lret
and
bound
in
rcr
add
pop
dec
xchg
pop
pop
fsubrl
push
push
add
and
nop
nop
push
mov
cmp
fcoml
jmp
jns
mov
pop
jbe
hlt
mov
xchg
sub
inc
jmp
dec
pop
out
decb
js
loop
lods
sbbb
popa
mov
jmp
mov
add
mov
loope
ret
fwait
jnp
lods
adc
mov
and
cmpsl
push
sbb
xor
dec
cmpsl
bound
data16
clc
inc
push
lea
lds
mov
xchg
and
pusha
inc
mov
repz
data16
mov
mov
cmp
sub
cld
gs
sub
icebp
lret
jne
cmc
adc
and
orl
repnz
movsl
dec
mov
add
inc
or
adc
lock
cmp
add
cmc
mov
mov
jg
jg
cltd
jmp
fsubrs
fcoml
fwait
mov
jl
mov
xchg
adc
pop
jno
push
leave
sahf
push
shrb
push
ror
cmp
push
out
xchg
sbb
test
pop
pop
mov
push
fmull
xchg
cmpsb
push
imull
mov
mov
test
outsl
adc
cmc
push
mov
xchg
int
jle
sbb
in
in
jge
aam
popa
loopne
jg
bound
int3
jo
dec
sub
jb
jae
inc
xchg
icebp
loopne
cmp
mov
add
out
lret
jo
sub
out
mov
std
xchg
pop
pusha
push
mov
std
sbb
aad
xchg
dec
les
mov
addr16
xor
lock
mov
fs
inc
adc
cmpsb
rorl
clc
jns
sbb
add
test
idiv
outsb
jp
mov
xchg
bound
pop
xchg
out
test
pop
xor
in
loopne
js
sbb
out
xlat
push
pop
insl
fcomps
pop
jnp
jmp
push
push
ds
pushf
into
lret
sbb
ret
add
fdivl
dec
mov
out
add
imul
push
les
call
cmp
add
mov
xchg
jp
jns
xor
cmp
jmp
xor
lods
mov
pop
adc
jb
xor
fsubl
out
sbb
inc
xchg
orl
mov
nop
jb
mov
pop
xchg
jns
push
shlb
inc
in
pop
movsb
and
adc
dec
rcr
and
popf
mov
xchg
and
mov
pop
mov
mov
sbb
dec
leave
pushf
jecxz
sub
push
sub
popf
imul
mov
mov
sub
and
xor
imul
les
arpl
push
mov
and
repnz
push
jecxz
pop
push
pop
jl
jecxz
sti
mov
add
cltd
or
add
mov
xchg
sarb
stc
dec
sti
jbe
ljmp
pushf
fists
in
jecxz
mov
loop
pushf
pusha
out
adc
push
in
jp
jecxz
out
push
or
and
int3
xchg
add
clc
add
push
inc
andb
add
jno
enter
sar
add
jns
insb
imul
sub
sub
push
es
je
mov
mov
jmp
or
push
mov
push
orl
xor
pop
andb
push
push
sbb
cmp
xchg
xchg
jmp
mov
test
repz
es
in
xorl
xor
add
hlt
push
cld
pop
cmovge
dec
fdivs
mov
add
stos
or
push
std
cli
fs
pop
push
lahf
dec
adc
cli
std
mov
sti
lret
loopne
dec
push
out
fwait
je
mov
inc
insl
xchg
aas
push
xlat
pop
stos
sub
add
xchg
xor
dec
mov
mov
add
push
mov
push
aam
sub
xchg
pop
inc
cld
movsl
push
adc
mov
je
out
lret
int3
xchg
dec
mov
out
cmc
cmp
in
xchg
dec
inc
adc
lock
les
imul
push
push
cwtl
popa
scas
fs
lret
pop
xor
iret
lret
mov
fidivrl
xor
and
lret
lret
adc
or
xor
jns
or
jecxz
mov
stc
pop
lods
mov
cmp
loope
repnz
pop
cmp
xor
xchg
push
mov
inc
sub
mov
sbb
push
and
in
dec
xor
es
jbe
cmp
xlat
es
xlat
mov
popf
mov
jnp
fsubl
fwait
test
hlt
shr
daa
xor
setae
jmp
and
in
pop
mov
push
pop
and
js
es
sbb
cmp
inc
jbe
jne
cld
sub
out
adc
scas
push
mov
hlt
out
mov
icebp
stos
jbe
ds
xchg
rcrb
popa
xor
sbb
fs
push
cwtl
inc
test
adc
jnp
sbb
and
and
mov
rorl
or
mov
add
sbb
sahf
mov
xchg
into
xlat
sub
movsb
pop
lock
sbb
imul
sahf
add
stos
sti
lcall
aas
mov
out
int
jmp
insb
dec
ret
jp
scas
mov
or
test
or
push
push
mov
call
inc
lods
push
pop
jne
mov
cmp
mov
inc
inc
outsb
arpl
int3
jns
mov
mov
rorb
ret
adc
inc
outsl
mov
jecxz
fwait
imul
push
cmp
inc
cmpsl
repnz
daa
shlb
out
sbb
bound
and
movsb
xor
jle
das
add
cmp
sub
scas
pushf
mov
xor
jmp
sahf
pushf
mov
or
ret
in
mov
scas
mov
pop
mov
sti
in
in
mov
popf
repnz
loop
rorl
add
add
push
aas
push
pop
jl
sub
movsl
out
xchg
fs
leave
int3
loopne
pushf
clc
sbb
ja
outsl
push
lcall
hlt
das
movb
and
pushf
pop
mov
adc
shrb
scas
sbb
lret
and
or
or
insb
adc
mov
out
je
pop
mov
dec
add
fiaddl
cmp
mov
cmp
cmp
jbe
inc
lret
xor
lret
adc
pushf
imul
hlt
xchg
test
xchg
lds
test
adc
mov
cmp
xchg
mov
ficompl
mov
sub
dec
mov
adc
imul
fiaddl
pusha
sahf
cmp
adc
jmp
and
mov
cltd
cltd
cmpsb
or
pop
mov
push
mov
in
outsb
pop
mov
mov
sbb
sub
jmp
jecxz
jg
mov
aaa
xchg
lds
inc
adc
mov
mov
inc
or
push
pop
lret
jmp
pusha
cmp
xchg
aam
hlt
sbb
pop
xor
push
sbb
out
ror
jmp
sti
je
test
lret
jl
popf
mov
dec
or
ljmp
lret
daa
and
push
arpl
push
inc
fidivl
jmp
xchg
or
mov
icebp
arpl
push
psllq
dec
in
shrb
cmp
outsb
pop
loop
in
mov
sbb
imul
sub
loop
frstor
or
mov
shlb
hlt
aas
or
push
jmp
loopne
mov
test
jae
lret
add
movsb
add
fwait
push
loop
sub
add
xchg
jne
mov
sbb
mov
pushf
sahf
cld
and
stos
inc
lods
fstp
push
push
scas
add
push
lds
mov
sti
adc
mov
insb
repz
ret
pop
push
movsl
fwait
adc
cmc
xchg
add
sbb
xlat
sub
push
push
sub
imul
and
sbb
jbe
mov
out
cmp
sub
subl
into
shll
lahf
mov
mov
mov
dec
popa
repz
sbb
pop
xchg
repz
enter
or
dec
jp
out
mov
xchg
inc
xchg
mov
push
out
mov
inc
aaa
nop
pop
lods
fstl
adc
sbb
sub
xchg
mov
data16
movsb
push
jb
sbb
shlb
jno
mov
and
sbb
dec
dec
lods
xchg
je
pop
pop
push
hlt
shrl
divl
mov
xchg
int3
dec
and
xchg
ret
lods
in
xchg
push
xchg
ret
lods
jl,pn
in
pusha
mov
data16
subb
sub
sub
mov
cmp
xlat
aad
arpl
mov
push
call
and
pushf
sub
push
lcall
lods
fsubr
add
andb
out
push
mov
sti
mov
add
adc
sbb
cwtl
mov
out
sbbb
xchg
push
lcall
leave
xchg
and
inc
test
fmuls
mull
cltd
outsl
mov
in
inc
icebp
lods
add
pop
jnp
sbb
mov
test
lea
sarb
mov
lea
mov
xchg
push
ds
pop
sub
jae
sub
push
sbb
push
mov
sub
jle
packssdw
sbb
fidivl
insb
jo
jmp
loopne
sbb
test
test
outsb
cmp
sbb
and
lret
dec
or
lcall
std
sbb
cld
mov
inc
inc
mov
aad
jmp
sahf
test
out
mov
jb
inc
and
mov
adc
fwait
test
dec
dec
je
xchg
fistl
repz
fcompl
xlat
adc
mov
jmp
pushf
mov
test
adc
mov
xorl
adc
jb
mov
dec
ljmp
int
dec
pusha
jp
cmpsl
aas
dec
mov
cmp
outsl
cmpb
stos
sub
nop
xor
mov
cmp
adc
sbb
jae
dec
fnstsw
scas
ss
sbb
jbe
in
mov
int
sub
push
inc
insl
cmp
push
or
shll
pushf
outsb
add
or
push
in
lds
rcrl
jg
adc
cmp
add
mov
sub
sarl
call
cmp
shrl
sarl
and
in
notb
push
iret
dec
mov
mov
aas
push
mov
push
clc
mov
or
xchg
aam
sub
mov
pop
add
clc
mov
stos
mov
ss
cmp
std
in
into
lods
mov
lock
adc
mull
pshufw
dec
xor
xchg
push
inc
or
push
push
jl
pop
into
adc
sub
inc
popf
repz
outsl
xor
or
test
mov
lods
mov
repz
sbb
or
jbe
fdivp
sbb
lock
jo
and
cmp
mov
jmp
arpl
cs
cld
fisubrl
insl
or
dec
cmp
dec
cmp
cs
into
or
mov
loop
push
inc
scas
mov
jbe
imul
xchg
xor
jbe
in
xchg
loope
mov
sub
pop
sbb
jns
das
mov
data16
pop
std
test
mov
mov
fstpt
push
imul
lods
push
inc
mov
push
jecxz
xor
shl
pusha
in
popa
mov
cmc
mov
mov
stc
mov
sarb
push
outsb
ret
sub
inc
sbb
in
jmp
hlt
push
insb
int
pop
xchg
mov
inc
mov
and
mov
imul
xchg
lea
mov
mov
pop
es
incl
xchg
sbb
pop
cmpsl
fisubs
add
xchg
pop
insb
xchg
clc
mov
xchg
fsubrl
test
jbe
jg
push
pop
pop
inc
lret
cltd
dec
push
das
cmp
xor
bound
cmpsl
fstpt
shr
adc
insl
push
fsts
repnz
popa
jp
xchg
dec
mov
dec
dec
imul
in
lcall
and
insl
xor
cmp
rcl
cmp
pop
shrb
pop
fdivr
mov
push
aad
inc
mov
dec
daa
and
add
data16
jne
out
pavgb
add
data16
fisubs
out
xchg
sub
fucomp
dec
mov
mov
jmp
adc
add
xchg
mov
leave
sbb
jg
sub
outsb
add
addr16
rorb
dec
loope
jg
cmp
orb
test
xor
in
ja
data16
neg
lock
sub
xor
shlb
jmp
sub
hlt
and
divl
dec
mov
mov
lahf
in
aas
xlat
mov
cmp
fwait
inc
sbb
bound
or
repnz
aad
and
test
pushf
and
push
aaa
pop
sahf
ljmp
xchg
xchg
push
fs
je
sarb
adc
test
mov
dec
inc
lds
inc
call
mov
scas
jne
mov
ds
pop
imul
or
mov
cmp
xchg
mov
fistpl
sarb
out
call
mov
pop
stos
std
xor
inc
and
leave
mov
mov
mov
push
jo
inc
pop
loope
sahf
cltd
xchg
mov
dec
iret
push
adc
xor
cmpsb
mov
sti
out
jnp
andl
sbb
pop
shl
jno
adc
pop
mov
ss
cld
pop
dec
ret
cmp
inc
scas
mov
sbb
ja
and
inc
sbb
cmp
inc
mov
mov
fadd
cmpl
out
cmp
shrl
push
mov
stos
lret
mov
cmp
shrl
stc
pop
in
mov
test
dec
push
lds
in
in
cmp
fsubr
cli
mov
pushf
adc
mov
movsl
andb
pop
mov
adc
and
inc
das
and
pop
xchg
pop
sbb
mov
sbb
fst
ds
adc
fwait
sub
iret
int3
and
stc
icebp
mov
xchg
outsb
push
movsl
or
and
mov
add
xor
jns
shr
aaa
fiaddl
clc
sbb
mov
lcall
and
add
js
rcrb
ficoml
or
sub
mov
or
sahf
sbb
aam
pushf
xchg
mov
pop
iret
das
sti
les
push
les
xchg
cmpsl
xor
test
sbb
out
insl
push
adc
repnz
cmpsb
mov
aad
adc
or
pusha
call
sub
repz
xchg
cwtl
adc
dec
pop
sub
push
jle
ja
sub
adc
jns
or
pop
ss
sahf
in
mov
mov
out
fnsave
rclb
mov
clc
pop
add
add
movsl
test
in
inc
mov
outsl
jg
mov
mov
pop
in
lahf
xchg
fiaddl
lcall
mov
cltd
mov
mov
mov
fldt
or
xchg
adc
sbb
mulb
cli
cmpsl
divb
movsb
shrl
or
cwtl
into
es
pop
mov
adc
and
dec
pushf
lret
lret
fistpll
lds
fnstsw
push
int
mov
in
cli
nop
pop
xor
test
shrl
les
in
imul
add
and
xor
arpl
fadd
mov
mov
sbb
insl
xchg
sub
ja
lahf
and
mov
repnz
inc
xchg
xor
mov
loopne
inc
pop
or
pusha
add
cmp
xorb
push
addl
pop
add
cltd
cmp
mov
adc
sub
mov
mov
mov
das
shr
jbe
jp
cltd
outsb
iret
push
aad
jae
mov
adc
gs
push
jnp
xchg
daa
js
xchg
icebp
leave
lahf
mov
insl
inc
test
and
xchg
jo
test
mov
jbe
andb
jmp
popf
mov
inc
push
push
add
sbb
and
inc
and
cltd
clc
pop
jne
les
cmpl
aam
mov
jle
cld
xor
mov
sbb
pop
and
xchg
xchg
nop
imulb
mov
xor
jle
xchg
stos
scas
xor
das
cmp
mov
dec
adc
movsl
sbb
daa
std
dec
es
pop
mov
and
push
cmp
testl
mov
fdivl
pop
xor
mov
test
rol
dec
or
or
das
roll
jle
adc
jg
adc
stc
jo
add
das
jl
cmp
or
jmp
jmp
lcall
or
loope
jmp
and
xchg
adc
jo
mov
out
sti
cld
int
xlat
pop
jns
push
stos
sub
loopne
or
incb
test
test
pop
jl
push
insl
adc
mov
popa
inc
outsb
push
lea
sbb
push
inc
loopne
push
cwtl
subb
push
xchg
add
push
lret
and
aaa
dec
addr16
pusha
pop
out
add
push
sar
hlt
dec
rclb
xchg
jmp
xchg
scas
lcall
in
mov
leave
sub
inc
pop
mov
mov
cmp
imul
pushf
adc
mov
xor
adc
sbb
es
imul
fwait
add
inc
sbb
xor
lcall
cltd
int
fwait
cmp
dec
lods
int3
repnz
jl
movsl
test
dec
subl
out
xor
jmp
lock
pop
sbb
and
add
push
inc
les
bound
rcl
testb
dec
push
jno
popf
adcb
mov
ficoms
fwait
ss
add
adc
enter
dec
jl
push
xor
mov
xor
loop
stos
mov
mov
das
push
add
sbb
add
das
pop
inc
int3
stos
js
cmp
jg
js
and
push
xor
add
xchg
jl
push
neg
sbb
lock
pop
push
cld
or
mov
lods
pop
pushf
mov
pop
dec
sarb
and
enter
add
je
jmp
inc
stos
divl
xchg
or
aaa
push
movsb
xor
int
inc
sub
sub
aaa
push
push
arpl
dec
push
rorl
iret
or
push
stc
scas
fmuls
mov
adc
jo
enter
stos
push
sub
movsb
sub
dec
lret
movsb
mov
add
insb
mov
bswap
out
mov
or
xlat
dec
scas
push
push
ljmp
les
jb
xchg
mov
fimuls
xlat
negb
stos
push
jns
xor
jge
inc
push
loope
cli
cmpsl
or
cmp
out
and
sub
xor
pop
rorl
jg
fidivl
ret
arpl
mov
pop
negb
mov
fcoml
adc
cmpsb
inc
push
imul
mov
pop
orl
repnz
in
lods
imul
loope
scas
mov
adc
movsb
clc
xchg
lret
or
cmp
sarb
push
mov
mov
fucomp
int3
call
sarl
insl
or
jg
stos
mov
les
lods
addb
fidivrs
dec
xor
shl
and
mov
in
push
iret
mov
push
leave
aas
aad
aas
inc
xchg
mov
imul
push
int3
lds
into
enter
push
inc
xchg
sub
ror
inc
ret
and
fdivs
into
popf
dec
jmp
push
mov
loop
ja
divb
pop
pop
aam
jg
aas
push
mov
sbb
adc
in
stos
push
test
int
jno
sti
add
mov
push
fmull
fbld
fisttps
dec
int
popa
inc
in
mov
dec
popa
xchg
ss
jae
subb
bound
repz
mov
insl
push
test
push
pop
mov
mov
pop
inc
fisttps
mov
dec
inc
popf
int3
fs
jns
inc
pop
fmull
push
inc
xchg
in
pop
out
test
popa
mov
outsb
sti
movsl
adc
ficoml
test
cmp
inc
gs
arpl
add
nop
add
xchg
movntps
out
movsl
cwtl
and
add
or
in
mov
insb
push
fcompl
jo
mov
xchg
fsubrs
in
popf
mov
mov
sub
add
adcb
imul
imul
xlat
fcmovnb
push
adc
mov
stos
mov
sti
pop
jmp
jecxz
or
mov
repnz
mov
out
sahf
shll
sahf
adc
int3
vunpckhpd
or
mov
fisubl
adc
addr16
xor
mov
fmull
lds
push
xchg
loope
out
sti
or
in
pop
mov
push
pop
in
add
xchg
xchg
subb
jecxz
jg
testb
mov
pop
or
arpl
call
jno
cmp
stos
out
movsb
jecxz
lret
xlat
xchg
jg
push
sub
ja
xchg
xchg
inc
cmp
sbb
add
mov
mov
test
push
sbb
out
popa
stc
sbb
mov
push
movsl
pop
gs
cmp
mov
jmp
add
iretw
les
lods
fstpl
int
pop
xchg
scas
and
xchg
xor
push
xchg
mov
dec
insb
cli
stos
pop
push
int3
add
repz
jge
arpl
or
add
outsb
or
xor
mov
mov
push
add
loop
inc
iret
pop
cmc
mov
or
js
pop
mov
jg
int
nop
sbb
sbb
daa
call
mov
or
sub
aaa
vpminuw
fyl2x
iret
mov
cmp
out
testl
fildl
mov
pop
add
cmpsl
js
mov
pop
mov
mov
or
sbb
sbb
lahf
push
movsb
xchg
mov
jns
dec
pop
lea
pop
xor
mov
cltd
add
ficoms
daa
fisttpl
fcmovb
mov
xchg
jmp
cmp
aam
sbbl
adc
push
xchg
xor
mov
mov
cmp
dec
aaa
jmp
jnp
jnp
adc
sbb
xchg
cmpl
lret
add
insl
popa
inc
pusha
mov
ljmp
ja
xchg
adc
add
mov
lods
push
shr
scas
xchg
mov
sub
mov
lcall
loop
add
in
push
neg
mov
cmp
dec
jbe
daa
push
push
xor
cli
jnp
xchg
je
sub
sbb
add
fidivl
cmc
ret
pop
xchg
jp
xor
test
pusha
jo
mov
bnd
lea
repnz
jecxz
push
popa
sub
jge
lea
xchg
push
ret
fdivr
cmp
lock
adc
dec
popf
leave
mov
aam
jl
dec
dec
in
and
loopne
adc
mov
out
shlb
mov
sub
cmp
lahf
sbb
add
leave
ja
aas
cmp
fwait
jne
pop
cmp
push
sbb
cld
andl
jo
dec
cmp
lods
lods
push
xchg
gs
mov
push
jecxz
pop
push
adc
addl
sub
movsl
popf
enter
pusha
xchg
sarl
inc
pop
call
pop
test
js
adc
ss
in
loope
stos
enter
cmpsb
insl
lret
scas
in
mov
stos
loop
cmp
call
ds
xor
aam
loop
ljmp
pop
mov
jp
dec
aam
cmp
sbb
jecxz
adc
cld
repnz
test
dec
cmc
jle
out
and
jo
dec
mov
cwtl
scas
icebp
mov
cmp
in
test
dec
fistps
xchg
data16
mov
outsb
es
push
out
and
in
or
xchg
adc
addr16
outsb
call
in
lods
pop
mov
jb
lret
movsl
mov
int3
in
jmp
sbb
inc
inc
dec
jge
sti
fnstsw
sbb
push
xchg
ret
pop
cmpl
mov
popf
adc
mov
enter
iret
cld
hlt
aam
cmp
rclb
nop
in
adc
or
and
mov
mov
test
cmp
outsb
mov
sbb
sub
or
mov
xchg
test
push
adc
inc
aam
rcrb
pop
fs
test
pop
fsubrl
icebp
mov
mov
inc
cmp
faddp
imul
lods
or
xchg
lods
mov
cwtl
cwtl
mov
mov
mov
pop
sbb
pop
adc
xor
jecxz
sarl
mov
stos
outsb
dec
lods
clc
pusha
dec
popf
imul
cmpsb
or
xchg
push
cwtl
sbb
rol
imul
test
je
mov
inc
fadd
add
jb
sahf
jp
pop
pop
js
mov
push
push
or
cmpsl
pusha
dec
xor
aad
scas
sbb
sub
push
outsb
mov
outsb
outsl
xor
out
sub
stos
ret
dec
cmp
jne
js
fists
fdivl
dec
push
dec
pop
sbb
mov
add
ljmp
movsb
sub
cld
sub
cwtl
xlat
insl
add
cmp
aad
ja
std
shlb
and
cs
ja
fistpl
mov
and
cmpsl
dec
xchg
sbb
inc
into
pushf
je
jb
in
mov
pop
mov
push
aam
and
ret
mov
mov
out
fildl
rdtsc
hlt
xor
pop
jp
fucomip
lret
mov
jo
outsl
adc
mov
orb
dec
hlt
aam
jbe,pt
mov
mov
mov
sbb
int
ss
dec
sbb
inc
jmp
sti
dec
dec
mov
ficompl
sub
xor
clc
lret
sub
mov
arpl
fnstcw
pop
nop
xchg
sbb
or
in
outsl
mov
test
jnp
sub
cld
loop
ss
push
add
jp
mov
ss
sti
pop
or
adc
nop
insb
dec
enter
cmpsb
xor
push
in
push
mov
push
pop
push
jp
pop
mov
out
lods
out
add
pop
ret
jl
ja
repz
sbb
scas
cmp
lret
jmp
dec
and
outsb
in
push
mov
sub
scas
movsb
fwait
sub
out
es
sbb
aam
dec
mov
xchg
or
loop
fdiv
sub
xor
cmp
sub
mov
xchg
fs
in
test
cmp
jecxz
pop
addr16
push
sub
jle
adc
mov
out
loop
add
loop
aas
jbe
pop
dec
mov
into
imul
lds
hlt
sub
jne
in
mov
out
cmp
fisttpl
and
or
push
lock
xchg
popa
xor
shr
lret
lods
pop
js
aam
push
mov
sti
enter
movl
xor
and
rcrb
fsubrp
lret
lods
cmp
fs
test
push
arpl
cmp
sub
push
push
adc
pop
xor
sub
pop
dec
or
negl
push
xorb
icebp
sbb
cltd
adc
mov
outsb
xor
les
jle
push
inc
dec
inc
add
push
pop
pop
mov
cli
cmpsl
aad
mov
sarb
pop
dec
call
divl
push
inc
lods
icebp
mov
hlt
sbb
fmull
and
or
pop
sub
pop
aad
clc
mov
jne
push
or
mov
mov
push
flds
sub
in
mov
lret
loop
test
adc
mov
dec
mov
gs
imul
addr16
adc
sbb
nop
mov
add
lcall
es
mov
pop
adc
idiv
jmp
into
scas
aad
and
jo
add
pop
jnp
inc
mov
jge
flds
neg
sub
push
mov
loop
sub
jae
pop
popf
push
xor
jnp
xchg
ret
add
test
inc
lcall
xor
sbb
popf
les
ljmp
lods
xor
scas
das
aam
sub
test
jle
pop
fdivrs
xor
push
xor
test
jbe
adc
sbb
pushf
sahf
lea
cmpsl
aam
icebp
fisttpll
push
mov
sub
ss
lret
xchg
mov
jl
mov
mov
mov
cmp
sbb
inc
inc
mov
xchg
jecxz
xlat
cmpsl
scas
inc
insl
add
inc
mov
and
sub
in
sub
lcall
out
and
sub
aas
into
sub
insb
fdivrs
xchg
sub
mov
rclb
test
mov
pusha
mov
jo
scas
xchg
inc
or
out
adc
cmpsb
insl
mov
ss
dec
fwait
jl
addb
and
mov
arpl
mov
inc
jmp
pop
xor
dec
or
fwait
jmp
outsl
scas
sbb
dec
cld
arpl
mull
pop
repnz
out
mov
imull
dec
xchg
adc
out
pop
mov
xor
push
movb
adc
xor
aad
add
or
add
in
pop
adc
inc
rcl
out
out
mov
std
add
sbb
stos
mov
mov
mov
fimull
dec
and
push
and
sub
mov
sbb
jnp
nop
jns
mov
adc
testb
fmuls
xor
or
es
idivl
cmp
pop
mov
bnd
or
mov
cld
inc
dec
js
inc
out
jo
xchg
cmp
sbb
in
mov
test
mov
movl
ljmp
cmpsb
lds
dec
js
fcoml
cmpsl
divb
push
jg
mov
lret
sub
jmp
repz
jmp
inc
xchg
or
ds
jae
pop
push
inc
outsl
ret
rolb
xor
mov
or
push
sub
and
xchg
scas
dec
nop
arpl
pop
jo
dec
mov
addr16
mov
les
roll
xorl
in
and
cmp
dec
repz
add
pop
jbe
sbb
jcxz
shrl
mov
into
fisubs
aaa
rorl
push
push
pop
ror
dec
mov
xor
dec
mov
cmpsl
inc
shll
jno
testl
ficoml
hlt
jge
lret
inc
adc
xchg
and
sub
sbb
pop
adcb
and
adc
xor
inc
aad
push
inc
jno
out
add
lret
imul
cltd
xchg
xabort
stos
lods
jns
sbb
lret
fistpll
inc
push
stos
xchg
add
cmpl
cwtl
lods
fnstenv
sub
inc
pop
ret
mov
cmpb
xor
xchg
pop
add
and
and
fcom
xchg
push
aam
sbb
fsubrl
scas
iret
out
lock
add
mov
mov
jnp
enter
fistpl
jo
imul
mov
mov
mov
mov
daa
and
pop
pushf
jge
insl
js
xchg
fst
xchg
js
mov
pop
push
push
mov
mov
mov
addl
scas
outsb
pop
xchg
pop
lcall
fs
pop
xor
sbb
inc
mov
dec
in
aam
cmp
test
push
es
xor
aad
and
mov
cmpsl
push
sbb
cld
fmuls
test
addr16
movsb
je
dec
nop
fnsave
fwait
outsl
lods
lock
sub
test
std
xchg
in
sbb
mov
jno
and
jecxz
addr16
fmull
cmova
add
je
cmc
jg
dec
cmp
out
repz
or
lret
aam
mov
mov
jle
loope
cwtl
jp
adc
js
sbb
loopne
mov
cmp
jae
scas
inc
stc
xchg
push
jg
jae
dec
mov
pusha
cmpps
add
lds
cmc
inc
data16
out
adc
dec
pop
std
test
jb
mov
icebp
cmp
test
cld
and
int3
cli
push
lret
mov
mov
jge
jg
add
loopne
lahf
cmc
imul
into
test
push
sbb
mov
mov
cmp
mov
in
mov
sbb
out
and
inc
out
mov
mov
xchg
dec
fldenv
shrb
sbb
scas
xchg
xor
pop
add
les
push
cmpsl
roll
push
push
mov
cli
or
mov
mov
mov
and
mov
sbb
lods
outsb
repz
inc
and
repz
jg
cmc
xorps
xor
pop
add
pop
inc
call
xor
dec
xchg
jecxz
mov
xchg
mov
sub
and
sub
push
sbb
addb
mov
push
jns
mov
mov
cmpsb
xchg
mov
cmp
jae
xchg
pop
cmpl
and
lcall
inc
repz
std
xchg
add
lds
pop
ljmp
movsl
add
call
mov
sbb
pop
xlat
icebp
jecxz
and
jge
xchg
fdivrl
mov
stc
add
daa
lds
inc
inc
out
icebp
sbb
in
mov
div
mov
mov
mov
jmp
pop
popl
dec
out
sahf
jns
rcrl
pop
lahf
pop
sub
xchg
cli
in
cmp
mov
cld
test
int3
adc
xchg
es
jno
or
inc
push
adc
xchg
inc
sahf
sbb
cmp
out
lods
sub
jnp
insb
repz
pushf
adc
xchg
ss
loope
repz
es
inc
roll
or
stos
sbb
iret
int
and
lahf
inc
pop
pusha
mov
jo
je
je
hlt
jne
sti
repnz
insl
mov
adc
push
add
xor
xorb
lds
jge
mov
push
pop
mov
push
stc
icebp
dec
das
jmp
inc
mov
dec
fwait
xor
mov
dec
jo
ret
pushl
fnstenv
push
xchg
xchg
or
sbb
dec
std
fcoms
or
jns
pop
insb
out
insb
fmuls
dec
fisttpl
test
push
inc
inc
imul
out
dec
lods
je
xchg
iret
lock
pop
mov
leave
sub
mov
xchg
iret
loopne
inc
pop
cmpsb
movsb
cmp
int
dec
test
add
fcoms
cli
push
or
das
sti
mov
rcrb
je
cli
xchg
jbe
cmc
sub
add
mov
adc
jb
mov
add
pop
shl
sbb
adc
nop
stc
push
lock
notb
and
fdivs
jmp
jge
test
movsl
repnz
pop
jmp
push
fabs
dec
std
movsl
mov
inc
neg
inc
pop
fcmovnu
orl
push
adc
jne
sbb
jo
js
mov
xor
rclb
jns
flds
cmp
add
mov
and
lds
mov
pushf
out
cwtl
inc
das
mov
inc
andb
flds
jae
pminsw
fnstsw
push
fisttps
dec
data16
cmc
pop
and
mov
fwait
xchg
inc
dec
inc
into
mov
xchg
push
jo
int3
jbe
arpl
mov
sahf
out
sbb
insl
dec
andl
bound
out
stc
push
xchg
cmp
adc
lcall
add
adc
sub
das
and
movsb
mov
lahf
dec
cld
dec
push
adc
add
fsubrs
or
shll
push
shrl
mov
sbb
repz
or
out
les
into
xchg
push
push
adc
jb
jnp
xor
adc
faddl
sbb
sub
dec
inc
jns
xchg
cmc
mov
cld
or
fcomps
inc
pop
stc
cld
push
lods
add
cmc
xchg
lret
pop
or
aas
sbb
ret
jae
xor
mov
mov
icebp
negl
xchg
jmp
or
aad
fwait
in
or
movsl
mov
and
pop
sub
negl
insl
push
jae
mov
daa
scas
pop
pop
idivb
mov
ja
pop
in
mov
popf
aas
movsl
std
sbb
jle
sub
mov
cmp
leave
sub
mov
test
xchg
adc
ficoml
pop
stos
testl
push
mov
add
mov
inc
dec
jbe
adc
xor
jbe
mov
lds
movl
incl
adc
fsubp
jb
fs
stos
ror
xchg
xor
adc
mov
sbb
jns
out
mov
fbstp
aad
push
cmp
sbb
sahf
xchg
pop
lret
pop
sub
jne
sahf
repz
imul
stos
sbb
ss
in
out
enter
pop
mov
scas
xchg
and
add
mov
inc
vpunpckldq
dec
or
adc
adc
loope
or
into
shr
jle
xlat
scas
mov
jmp
jnp
pop
xor
xor
pop
mov
xchg
insl
fwait
cmp
das
inc
in
pop
cmp
mov
fwait
and
jecxz
lret
or
mov
fsubrl
insl
push
dec
sti
test
add
and
bound
popa
jmp
push
push
or
daa
dec
xchg
jmp
mov
pop
and
cmpsl
aas
loope
je
enter
add
lock
pop
cmc
mov
mov
dec
xchg
cmp
xchg
shr
sarl
add
jecxz
rcll
test
leave
pop
and
pop
cmpsl
mov
pop
pop
or
sbb
icebp
sti
xlat
pop
push
aas
fucomp
pop
adc
jl
popf
xchg
cmc
notl
sbb
sub
loop
adc
jae
push
sar
das
pop
jle
cwtl
push
cltd
xchg
push
sarb
imul
fmull
push
out
nop
mov
icebp
pushf
pusha
je
pop
jmp
or
xor
inc
int
add
mov
xchg
adc
xchg
sub
rorb
scas
icebp
xor
sarb
inc
or
or
push
shlb
imul
stos
frstpm(287
jl
sahf
ror
es
push
mov
std
flds
orb
pushf
inc
and
leave
xchg
lahf
sub
jnp
dec
fisttpl
add
in
loope
int
or
bound
push
lds
shll
int
roll
insl
aam
mov
inc
xor
adc
mov
pop
adc
jb
es
jnp
and
arpl
ret
dec
aaa
add
and
mov
and
dec
mov
and
leave
cmp
int
loope
xor
dec
lea
jno
adc
jae
icebp
add
test
lods
pushf
jge
xchg
iret
int
aaa
ds
mov
mov
push
in
cltd
pop
shl
dec
xchg
lds
aas
pop
stos
iret
addr16
add
mov
sbb
aam
mov
pop
push
cmp
out
xor
xor
mov
xchg
add
hlt
cltd
icebp
add
out
mov
loope
jmp
lahf
inc
sbb
jl
loopne
das
mov
lds
daa
or
int3
and
sbb
jge
enter
mov
into
lret
cmp
cmp
and
pop
test
mov
pushw
pop
xor
sub
cs
inc
sub
jb
dec
pushf
aad
fwait
lret
mov
jl
outsb
sub
jns
mov
xor
sbb
pop
jecxz
mov
mov
or
in
cmc
adc
xor
pop
xchg
mov
scas
std
pop
adc
sub
cmp
mov
jmp
rorl
xor
arpl
sub
lea
jmp
sbb
and
scas
add
mov
sub
lods
mov
int
adc
mov
mov
sbb
inc
push
insl
sbb
daa
cmp
push
mov
les
jae
mov
adc
push
mov
std
icebp
mov
sub
icebp
adc
test
mov
daa
dec
pop
xor
cld
or
inc
das
jp
or
aam
jo
push
dec
filds
pop
lea
nop
test
adc
in
xchg
cld
adc
sbb
mov
push
sahf
sti
xlat
mov
pusha
add
movb
cmpsb
inc
inc
and
je
mov
inc
mov
scas
je
mov
subl
sbb
out
ret
ljmp
inc
sub
unpckhps
mov
ficoms
push
rol
mov
jle
adc
sub
adc
ret
gs
dec
xchg
and
cs
and
fcompl
cmp
imul
jp
das
js
adc
mov
leave
sub
mov
mov
pop
loop
adc
mov
or
test
inc
idivb
data16
lea
mov
xchg
sbbl
out
mov
unpcklps
adc
pusha
xchg
sahf
imul
push
je
arpl
cltd
cmp
inc
xchg
aad
in
aaa
rorb
xchg
sbb
sbb
loop
mov
dec
sbb
adc
dec
dec
outsb
xchg
push
and
mov
sbb
fs
lds
repz
imulb
inc
cmpsb
dec
scas
push
cltd
inc
push
pusha
cltd
sub
jns
mov
adc
sub
and
inc
into
int3
shl
jo
ret
arpl
push
fwait
adc
mov
sbbb
ss
cmp
repz
add
lock
pop
lcall
imul
mov
sbb
and
xchg
popf
lahf
fldcw
mov
stos
sub
sub
stos
int
in
xchg
adcb
stc
xor
cs
sub
out
cmp
stc
fildll
cmp
adc
roll
mov
push
mov
adc
fadds
add
and
cs
or
sub
loop
sub
pop
jbe
or
cmp
add
fbstp
in
cltd
or
xchg
or
sub
pop
or
dec
popa
sbb
popf
bound
sarb
xor
push
sub
ds
js
popa
hlt
imul
xor
fadds
aaa
test
inc
inc
aaa
jb
and
xor
cmovno
fnsave
cmp
inc
lds
insb
mov
or
adc
add
sub
mov
out
ja
jmp
push
adc
pop
popf
mov
mov
sahf
nop
shrd
pop
jne
mov
jno
out
xlat
mov
negb
outsl
and
pushf
jo
mov
push
mov
adc
xchg
ds
jl
shlb
sub
and
ja
jae
sbb
lods
and
cmp
adcb
in
mov
mov
and
pop
ret
ds
mov
and
clc
int3
xchg
fs
xlat
into
ds
push
mov
sti
pop
and
sub
sub
in
iret
xchg
mov
xchg
sub
add
jbe
pop
inc
test
rorl
cld
sbb
shrb
sub
lods
and
xor
sub
leave
adc
inc
inc
dec
ljmp
dec
scas
in
push
sti
pop
sub
adc
sbb
int
adc
jb
aas
call
and
mov
adc
cmp
jo
mov
push
sbb
ljmp
popf
lods
imul
call
push
inc
mov
mov
xor
stos
stos
inc
push
scas
addb
mov
movsl
and
out
dec
mov
dec
enter
mov
mov
js
jb
and
xchg
add
loope
rcr
and
dec
cwtl
adcb
movsb
and
or
inc
aad
dec
in
xor
test
orb
xchg
jp
push
fstpl
movsb
lods
jg
jl
cmpsb
inc
sbb
xor
out
jne
push
lret
call
mov
add
fbld
mov
mov
mov
push
fsubrl
fmul
push
xor
loopne
cli
mov
loopne
xor
xor
sti
and
or
xchg
das
sbbl
pop
cld
int3
pop
mov
mov
dec
jmp
cmp
int
pushf
mov
mov
fnsave
mov
jg
inc
xor
mov
and
dec
hlt
cmovnp
stos
icebp
inc
lea
xchg
lret
adc
mov
dec
shl
xor
or
jg
aaa
stos
cmp
fsts
daa
mov
jnp
mov
add
aas
mov
in
mov
lret
inc
ret
and
xchg
fstl
daa
push
add
mov
int
mov
arpl
ljmp
xor
jae
mov
sub
pop
dec
call
cmc
xorl
xchg
mov
cmpsb
in
psubw
xor
jne
cli
aad
mov
sti
fwait
jp
push
sahf
mov
icebp
cs
cmp
add
mov
sbb
xchg
mov
xchg
and
fcmove
fnstcw
inc
sub
in
xchg
inc
fcompl
imul
add
pop
pop
inc
dec
push
adc
xchg
repnz
out
sub
fisttpl
and
sti
cwtl
sub
repnz
mov
mov
fstpt
inc
addr16
and
roll
mov
jp
fnstcw
sbb
loopne
test
outsl
or
mov
add
push
inc
cld
jg
jnp
loope
ret
lret
and
dec
or
fistl
inc
push
and
leave
mov
push
push
divb
mov
ret
andl
or
mov
jno
mov
add
sbb
cmp
sub
popf
jns
lods
dec
push
and
or
lds
lret
adc
flds
stc
out
pop
mov
mov
adc
clc
repnz
push
pop
mov
pop
les
mov
repz
push
inc
gs
int
lods
pop
lret
mov
jno
ficompl
mov
add
inc
mov
aas
aad
fbstp
test
mov
clc
jg
scas
jne
adc
cmp
jmp
sbb
lahf
aaa
pop
xchg
cmp
rcrb
jp
mov
fs
and
mov
repnz
pushf
lcall
icebp
gs
cmp
test
xor
outsb
mov
fisttpl
pop
cs
dec
imul
push
dec
jecxz
dec
adcl
pop
cmp
lds
into
addr16
push
or
fnsave
fwait
jo,pn
fdivr
jb
lcall
inc
cltd
ret
push
popa
stos
dec
ret
cs
jno,pn
sub
pop
pop
inc
push
push
jne
push
lds
stos
push
ja
mov
dec
rcr
addb
cmp
mov
repz
sub
movsb
rcr
push
add
out
adc
pop
or
mov
adc
js
stos
xchg
inc
xchg
and
xchg
fdivrl
jmp
xorl
idivb
pushf
sub
sub
call
or
push
leave
mov
mov
dec
ss
dec
imul
and
jno
das
fistps
mov
rcl
mov
push
sbb
pop
xor
hlt
pusha
adc
cs
add
shll
or
es
cmp
push
mov
pop
jl
xchg
roll
cld
fidivrl
mov
mov
or
xor
movsb
lea
sub
or
movsl
jbe
xchg
cmpsl
cmp
lock
cltd
std
cmp
mov
hlt
sub
sbb
inc
inc
or
shr
or
sti
and
repnz
je
lods
sbb
xchg
in
gs
push
dec
mov
xor
fidivrl
stos
outsb
gs
pop
pop
jmp
aaa
xchg
dec
int3
aad
or
in
les
mov
rorb
lds
ja
int3
cs
cmp
fs
repnz
mov
loope
std
xchg
mov
aad
sub
push
or
nop
mov
xchg
nop
movsb
push
mov
dec
xor
cmpl
adcl
sub
inc
mov
imul
out
aas
fsubrs
lea
and
mov
adc
popa
and
mov
fcmove
sbb
ds
into
cltd
cmp
lea
ret
movsl
sti
mov
push
push
les
in
popa
repnz
bndstx
pop
or
sbb
das
adc
or
ja
adc
sbb
mov
movsl
ljmp
adc
mov
lods
lock
ds
push
arpl
cwtd
repnz
vmovntpd
xchg
jmp
ficomps
ds
xchg
mov
cwtl
inc
inc
dec
divl
lret
stos
and
cmpl
inc
and
mov
push
lahf
in
add
dec
clc
cmp
pop
add
jbe
fdivs
sub
push
or
imul
lock
cwtl
xchg
fsubr
adc
call
sarl
inc
std
cmp
cmc
xor
mov
in
push
inc
movsb
inc
test
dec
rclb
xchg
push
xor
xor
sub
call
stos
push
jl
and
mov
andb
jge
shrb
nop
insb
ficompl
insl
push
pusha
loop
pop
ret
call
and
xor
nop
xor
push
sub
xchg
adc
adc
fsubrl
pop
out
sub
push
xor
sub
inc
mov
jne
dec
gs
xor
mov
push
push
inc
pop
pop
xchg
in
gs
push
sarb
add
mov
sbb
cmpsb
add
cs
fldenv
pop
mov
ds
sbb
add
icebp
mov
dec
xchg
mov
outsl
fmull
rcrl
dec
push
or
call
lahf
lods
in
xchg
and
pop
clc
aas
jmp
lods
ljmp
outsb
xchg
fwait
out
sarb
ficoml
std
push
xor
inc
fsubr
cmpsl
dec
pop
das
mov
inc
adc
aad
lahf
arpl
mov
cmp
mov
pusha
pop
dec
sbb
faddl
push
ret
cmpsl
std
int3
add
sub
ret
push
lods
in
pop
jge
ret
mov
dec
repnz
push
mov
push
add
stos
addl
lret
jo
call
mov
movsb
push
lock
dec
out
mov
sbb
push
cltd
push
insl
mov
ficompl
ss
inc
mov
pushf
jo
cmp
dec
into
decl
repnz
dec
add
insl
lea
out
test
xchg
pop
xor
je
insb
or
push
inc
cmp
daa
stos
cld
lock
sub
stc
pop
jmp
inc
ljmp
jno
ret
sbb
test
lock
jle
ljmp
inc
lret
insb
jno
test
push
std
sti
xchg
cwtl
cmpl
stos
xor
mov
pop
jmp
insl
cmp
inc
ljmp
in
in
adc
scas
loope,pt
mov
cltd
rcrb
pop
cmpsl
or
mov
enter
cwtl
pop
leave
mov
ret
rcrb
push
jp
imul
xchg
inc
sahf
clc
mov
mov
adc
cmp
jge
es
xorb
fnstcw
inc
pop
dec
pop
scas
pushl
out
insl
and
jecxz
push
aaa
lds
jns
cmc
fsincos
add
dec
jo
jge
jp
sbb
and
mov
push
lcall
faddl
gs
jge
imul
push
push
or
mov
mov
icebp
repnz
sbb
inc
lret
inc
mov
xchg
xor
loope
out
mov
jge
cmp
mov
lods
sbb
cmp
adc
dec
stos
and
cmp
and
push
pop
fldt
enter
jnp
inc
xchg
jp
and
out
std
out
mov
loopne
mov
fidivs
ficompl
or
pop
push
mov
hlt
movsb
jmp
ficoml
add
push
adc
pop
pop
adc
sub
pop
fucom
push
lods
mov
aaa
pop
push
imul
dec
jns
dec
cmc
loop
neg
mov
cld
push
mov
jnp
ljmp
test
mov
cmp
sub
iret
or
xchg
and
push
inc
fsts
repnz
jmp
xlat
pop
mov
sbb
rorb
ret
out
out
sub
fs
xor
repz
mov
jle
ss
inc
xor
sub
lods
adc
popf
mov
dec
fwait
sbb
bound
fs
push
mov
call
outsl
lret
les
sub
jne
xlat
icebp
adc
popa
xor
adc
sub
xlat
or
mul
std
jmp
hlt
pop
sti
es
fcomi
push
pop
imul
jo
in
sub
js
and
fisubl
loopne
mov
jo
stos
shlb
in
push
in
mov
sarb
or
sbb
push
xchg
repz
push
lret
nop
icebp
cmp
jmp
push
pop
lods
in
cld
cmpsb
fsubr
and
mov
push
mov
push
cmpsl
iret
pop
ret
xor
cmp
cmpl
mov
out
data16
shll
out
sbb
out
cmp
inc
mov
add
push
clc
mov
xor
lcall
loope
mov
sub
aad
ja
lcall
js
cwtl
daa
add
cmp
aas
or
enter
and
or
int3
mov
ja
sub
dec
and
xchg
mov
lcall
lcall
dec
and
insl
imul
adc
jbe
and
add
adc
lods
insl
pop
adc
loopne
fstl
jbe
bound
xchg
ljmp
sbb
addr16
inc
fstpl
pop
test
sahf
cmp
xlat
arpl
arpl
inc
imul
xchg
mov
sub
pop
cltd
outsl
mov
repnz
mov
bound
cmpsb
mov
pop
pop
push
or
mov
cs
xchg
frstor
leave
int3
outsb
out
je
xchg
pop
ljmp
fidivl
dec
sub
lods
dec
add
mov
mov
lret
insl
or
jl
pop
xchg
inc
ds
pushf
test
mov
lds
jecxz
pop
mov
jge
xor
sub
jnp
push
lea
dec
in
loop
repnz
jae
pop
dec
iret
push
popa
lea
dec
imul
pop
sub
js
mov
inc
outsb
mov
push
push
cmpsb
adc
in
dec
push
or
mov
sub
rorb
hlt
dec
xorl
mov
pop
pop
inc
das
sbb
insl
cmpb
aam
lea
jno
fistpll
sahf
pusha
test
xchg
xor
xchg
or
out
outsb
call
imul
iret
push
cmp
pop
inc
xchg
lret
gs
sub
and
jne
sbb
nop
pop
hlt
insl
and
inc
std
js
rol
or
mov
sbb
in
mov
xor
fucom
push
gs
mov
sub
add
cmp
lret
add
in
sbb
shrl
lea
or
mov
dec
lcall
adc
and
adc
daa
loop
mov
dec
mov
test
lret
xchg
ja
mov
movsb
bnd
shrl
inc
pop
jp
inc
in
dec
jae
xchg
and
lret
push
ja
sub
push
stos
adc
test
pop
clc
push
jmp
les
pop
loopne
push
and
paddb
ja
shl
lods
lock
sub
cmpsl
push
pop
nop
idivl
sbb
mov
push
leave
and
jns
cltd
mov
jle
jnp
loopne
inc
and
pop
cmp
lock
sbb
hlt
insb
rcrb
push
and
pushl
repz
add
xchg
sahf
stc
dec
mov
sbb
sub
jge
jl
mov
cmp
mov
or
push
stc
or
pop
dec
push
sbb
pop
push
jle
push
pop
ficomps
lock
xor
or
je
sbb
cmpb
jns
fcmove
lcall
leave
cld
jae
stos
test
lds
lret
adc
outsl
popf
ret
ret
rcrl
xchg
mov
shrl
jne
fbld
push
xchg
sub
lret
in
out
xchg
nop
rcll
cmpsb
push
cmpsl
pop
add
outsl
stos
fs
out
mov
mov
mov
mov
testl
add
pop
xor
aaa
xchg
add
push
and
orl
and
jno
or
push
jmp
sbb
sbb
fldenv
and
adc
aad
movsl
loopne
ret
out
xor
mov
adc
repz
push
rorb
outsl
mov
xchg
push
inc
push
and
mov
dec
rol
les
pop
out
test
mov
jb
fs
mov
hlt
cmpb
rcrl
icebp
pop
mov
push
into
jmp
jne
mov
cmpsl
sahf
jno
pop
lret
adc
mov
adc
test
popf
hlt
push
xor
or
lcall
sub
and
inc
aad
lcall
in
cmpb
jne
push
lock
es
sub
xor
sub
inc
clc
addr16
jecxz
xchg
test
inc
sub
push
inc
dec
lods
inc
hlt
add
mov
pop
dec
adc
and
mov
ja
pop
push
jne
push
and
popf
sbb
xor
mov
not
mov
push
sub
pop
and
adc
add
ret
mov
ljmp
jbe
repz
pop
lret
cmp
sbb
inc
and
or
fistl
stc
pop
jo
fidivrl
subl
lock
insl
adc
and
jmp
add
xor
call
xor
mov
je
shl
mov
fistps
andl
mov
ficompl
enter
loop
cmp
and
jns
hlt
outsb
push
xor
add
adc
mov
shrl
cmp
jnp
fcmovbe
jns
cmp
insb
and
jmp
adc
push
jb
js
dec
add
and
out
mov
andb
cmp
lret
dec
or
mov
sub
fdivrl
cli
mov
xor
ficomps
ljmp
dec
lds
lds
jmp
push
fbld
push
inc
jecxz
int3
movsb
xor
test
sbb
stos
aam
mov
out
add
adc
sub
xchg
sub
xchg
and
adc
ret
pop
clc
or
bound
adc
arpl
ss
repz
popf
icebp
sbb
je
lock
add
mov
fnsave
cmp
loop
jns
sbb
sbb
and
dec
push
jo
ljmp
fcmovu
sbb
dec
cmp
and
xchg
or
or
cmp
scas
jno
mov
adc
push
pop
ljmp
lods
test
mov
movsl
lret
mov
pop
adc
aas
jns
aam
adc
fdivl
fadd
adc
mov
xchg
enter
outsb
mov
cmpsb
in
push
addr16
mov
pop
jno
mov
pop
or
mov
stc
je
dec
mov
jae
ljmp
cmpsl
jmp
inc
push
add
sarl
shlb
mov
or
sbb
mov
mov
mov
je
ljmp
std
cltd
ficompl
dec
push
fists
in
mov
mov
das
outsb
pusha
cld
lds
pop
mov
lret
jg
cmpsb
xor
rcrb
rcr
in
jg
xchg
cmp
jns
int3
loopne
mov
popf
popa
mov
aas
into
xor
pop
cmp
xor
outsb
movsb
pop
shrl
lods
test
adc
adc
push
inc
xchg
dec
fisubs
xor
inc
movsb
bound
adc
mov
pop
sub
sbb
sbb
inc
es
cmpsl
bswap
xchg
ss
std
loopne
sbb
daa
sub
repz
mov
loope
mov
loope
pop
cmp
sub
pop
cmp
hlt
mov
add
jbe
mov
cmp
mov
jbe
xchg
sahf
adc
filds
je
pop
cmpsl
pop
pop
push
imul
adc
sbb
ds
sar
xchg
mov
imul
stos
push
xchg
incl
mov
mov
mov
adc
loope
add
cltd
clc
out
popa
stos
cld
adc
mov
fmuls
jmp
xor
sbb
cmp
js
imul
fisttps
pop
push
push
inc
xchg
gs
fistpl
out
lds
outsb
dec
stos
int
xchg
popa
jb
loopne
imul
inc
int3
xchg
insb
insb
icebp
je
aaa
cmp
sbb
mov
pop
xor
sbb
test
pop
jbe
int3
adc
adc
dec
insl
aaa
mov
mov
xor
arpl
movsl
or
in
cwtl
push
push
orb
push
cmpsb
test
sub
ror
int3
mov
pop
rcll
roll
mov
xchg
out
divb
insb
icebp
xlat
push
push
jg
jecxz
inc
dec
jge
dec
pop
lret
inc
call
adc
sub
test
mov
or
out
add
jmp
ds
aad
mov
cmp
sti
pop
mov
pop
test
loope
xchg
insl
cwtl
adc
and
out
das
adc
adc
js
stos
mov
fdiv
outsl
xlat
xchg
sub
xchg
push
pop
push
sbb
mov
pushf
icebp
push
pop
mov
jb
stos
dec
mov
movsb
scas
sbb
pop
test
jl
push
mov
insl
adc
add
mov
loope
xchg
leave
lds
pusha
cmpsl
popa
addr16
mov
push
fdivrs
xor
jb
mov
cmp
cmp
jne
imul
jecxz
popf
cmp
mov
pop
jp
shlb
aas
fcmove
pop
pop
adc
mov
cmpsb
cmp
push
int
js
mov
lods
push
cwtl
push
push
scas
in
lock
lock
or
loop
mull
in
push
frstor
dec
xlat
dec
test
mov
inc
cmpsb
scas
dec
shlb
xchg
fisttpl
mov
fwait
out
popf
cmpb
adc
push
sub
adc
outsb
push
sbb
dec
ficoms
dec
data16
cmp
mov
pushf
rorl
roll
data16
test
xchg
jo
lds
int
andb
pop
and
addr16
xchg
mov
mov
aad
sub
pop
mov
sbb
repz
push
fistps
stc
mov
shlb
aas
cmp
push
ds
sub
add
pushf
mov
arpl
stos
sub
ljmp
lods
cmp
mov
pop
xchg
repz
push
and
mov
das
sbb
inc
aad
iret
fisubrl
popl
and
and
dec
xchg
aas
mov
sbb
pop
or
mov
frstor
jb
mov
mov
ret
jp
subl
pop
insl
mov
jb
mov
or
mov
mov
fstpl
adc
inc
jae
arpl
xchg
cmp
dec
cmp
scas
mov
rol
sbb
stos
adc
cmpsl
push
inc
adc
jg
pop
jmp
ss
mov
push
pop
fmul
incl
push
dec
fs
leave
and
inc
add
mov
pushf
ja
and
shll
inc
or
lock
add
or
push
xchg
cmp
mov
dec
and
lahf
fucomip
xchg
xor
inc
adc
int
shll
sbb
xchg
jnp
xchg
or
add
and
in
loopne
jmp
cltd
sub
cmp
pop
pop
inc
iret
mov
insl
out
push
rorb
das
sub
adc
adc
icebp
cmp
lahf
out
aaa
sbb
jmp
arpl
or
xorl
cmpsb
push
add
mov
push
out
test
and
pop
sbb
or
sbb
cmc
xlat
movsl
pop
mov
and
loopne
jns
ret
xchg
jbe
stos
cmp
fdivs
fadd
ja
pop
mov
sbb
test
fnstcw
pop
dec
jg
and
jnp
push
jbe
dec
push
push
mov
jp
cli
repz
push
mov
and
push
or
movsb
jmp
mov
push
lock
adc
jbe
mov
mov
mov
movsb
adc
push
iret
jno
imul
mov
cmp
jmp
sbb
mov
xor
add
jl
mov
mov
pop
lcall
push
outsb
xchg
mov
mov
or
mov
mov
fdiv
add
and
push
aam
xchg
fdiv
mov
adc
add
jle
inc
negb
icebp
sub
stos
pop
orl
daa
mov
movsl
pop
xchg
lret
testl
sub
fsubl
mov
stos
inc
iret
and
push
mov
mov
sbb
adc
mov
int3
adc
int
push
or
adc
cld
jns
ss
test
add
xor
inc
xor
fwait
push
test
divl
fnstcw
out
gs
sub
iret
add
sbb
les
sub
mov
sub
scas
dec
adc
jmp
mulb
push
pop
shlb
cmpsl
pop
adc
xor
arpl
js
and
inc
fadd
push
sub
shlb
testb
iret
psubw
es
hlt
adc
ret
mov
out
repnz
fildll
js
inc
enter
fdivrs
and
mov
fldcw
scas
push
inc
das
pop
je
out
pop
add
mov
daa
out
lret
cmp
mov
sub
ljmp
push
push
cli
jb
sbbl
jmp
push
pop
add
adc
pop
mov
lods
in
and
call
xchg
ret
or
pop
xchg
aad
fnclex
jg
sbbb
daa
cmpsb
mov
cwtl
xor
popf
lds
repz
pop
and
daa
sub
jl
loope
dec
aas
or
outsl
fwait
sbb
mov
out
aas
xor
pop
leave
adc
and
and
cmpsl
dec
jge
repnz
fsubr
stos
icebp
and
sbb
fidivl
inc
lret
mov
dec
cmp
sti
adc
sub
sbb
cmpl
out
fildl
shlb
adc
mov
mov
sub
loope
jmp
repz
push
test
lret
in
xor
mov
push
pop
mov
jne
mov
ss
into
and
call
popf
mov
jo
mov
mov
pop
lea
rcl
push
sarb
lods
or
shll
pop
movsb
cmp
jo
sbb
mov
sbb
sub
xchg
xor
lods
xchg
or
jns
mov
pop
shrl
aad
ret
push
xchg
cmc
push
ja
outsb
jnp
push
add
push
or
mov
nop
inc
jae
pop
js
mov
dec
jl
pop
push
rorb
jg
pop
movsl
and
cmpsl
test
push
fwait
mov
dec
ret
and
xchg
xor
rclb
adc
mov
xchg
mov
mov
adc
and
or
std
add
mov
rcr
movsl
pop
fidivrl
ljmp
cwtl
aaa
fcmovnu
movsb
push
mov
ja
add
out
movsb
pop
jne
mov
hlt
xchg
rorl
push
insl
jno
sub
and
in
popa
and
mov
mov
cmp
bound
push
inc
push
adc
out
inc
dec
cmp
mov
mov
adc
adc
neg
mov
test
fwait
mov
test
mov
pop
xchg
mov
jnp
mov
lock
and
add
sbb
jp
shrl
bound
jp
push
sub
out
push
cmp
or
cld
aas
js
inc
jne
xor
xchg
stos
addr16
dec
mov
lods
push
rcrb
mov
cmp
sub
add
into
das
cld
rclb
popa
and
cmp
push
js
mov
adc
fs
cmc
movsl
outsb
jno
or
idiv
sti
mov
fwait
int
mov
xor
test
pusha
sub
push
shrl
fcmovne
fs
and
out
mov
in
inc
add
add
in
push
int3
inc
or
inc
xchg
loope
xchg
adc
cmp
out
ljmp
imul
data16
push
gs
push
and
xor
pusha
adc
and
mov
in
nop
fimull
mov
lock
sbb
xchg
movsb
lock
shl
in
mov
sbb
xor
gs
popf
cmp
dec
jne
xor
loop
arpl
dec
ds
movsb
mov
inc
mov
mov
adc
mov
stc
push
test
jae
shll
out
icebp
mov
mov
pop
jmp
cmp
lahf
in
inc
inc
jge
xchg
sbb
out
hlt
or
and
bound
jmp
and
adc
cmp
jmp
icebp
lret
neg
int3
pop
mov
hlt
and
repnz
mov
daa
lcall
adc
rol
ret
mov
ret
cmp
adc
inc
lret
call
or
dec
sub
or
sbb
pop
dec
sbb
ss
ss
insb
stos
movsb
sahf
xor
jo
nop
or
pop
jg
xchg
ja
stc
rclb
pop
pop
lret
mov
stos
sbb
mov
sub
or
rorb
sti
cmp
mov
xchg
out
cmpsb
pop
jo
sbb
in
jge
movsb
and
adc
cmp
in
ljmp
pop
test
das
stc
fisubl
in
pop
out
pop
call
in
loop
arpl
and
inc
clc
loop
data16
push
and
outsl
push
xor
fsubrs
mov
sbb
and
xor
icebp
fwait
rcr
xor
push
push
mov
lock
cmp
xchg
sub
dec
sbb
push
mov
inc
pop
insb
pusha
out
push
add
icebp
ja
xchg
xchg
mov
shll
or
push
loop
and
sahf
idivb
ds
insb
repnz
sti
cltd
mov
cltd
mov
imul
adc
in
pop
xchg
push
cmp
cmp
xchg
dec
ret
bound
fs
xchg
pop
arpl
xchg
add
pusha
or
int3
arpl
test
xchg
imul
lcall
frstor
add
int
sbb
aaa
pop
rcrb
xlat
and
mov
popa
sti
mov
cmp
roll
pop
pop
mov
mov
pop
dec
xor
dec
mov
out
mov
cmp
push
mov
xor
mov
mov
sub
hlt
sub
jg
mov
pop
pop
sub
loop
dec
cmp
pop
dec
and
and
repnz
ret
sahf
sub
lret
mov
or
roll
mov
fisttpll
pop
mov
mov
insb
jmp
fmul
insb
mov
sub
shll
jg
shrb
addr16
fdivrl
ljmp
lret
jbe
fcmovnb
addr16
xor
mulb
cltd
mov
mov
adcl
sub
stos
in
or
stc
sbb
iret
pop
fstps
fs
xchg
cli
add
ret
push
or
mov
daa
pop
mov
enter
lfs
sbb
stc
lahf
dec
in
in
fdivs
lock
iret
xchg
sbb
xor
aad
ljmp
xchg
in
arpl
dec
sarl
add
mov
dec
mov
fwait
mov
out
mov
insl
ss
pop
jb
out
test
repnz
lcall
stc
bound
xchg
sti
and
inc
bound
dec
jns
add
out
flds
test
push
aad
jo
int3
sub
xor
ficoml
test
mov
pop
popf
jbe
dec
dec
mov
fwait
xchg
lret
addb
call
ret
xlat
jg
ja
and
out
mov
rcrb
xor
jle
or
pop
popf
adc
loop
inc
test
jne
dec
mov
rcr
popf
add
adc
xorl
or
dec
mov
inc
cmpsl
or
jno
scas
and
pusha
loope
push
jecxz
out
sub
popf
in
shll
sbb
js
dec
inc
aas
imul
in
adc
push
pop
xchg
mov
mov
push
pushf
iret
xchg
mov
pop
out
inc
lahf
mov
pushf
push
dec
xchg
out
les
imul
lahf
test
push
imull
xchg
dec
sub
cmp
mov
and
pop
in
and
jne
stc
arpl
cmp
icebp
pop
xor
mov
jo
dec
add
fwait
packuswb
fxch
ffreep
dec
inc
sub
xchg
outsl
mov
in
leave
pop
sbb
lods
pop
loop
insl
mul
pop
sub
mov
rorl
or
adcb
sbb
in
int
fnstenv
mov
sbb
repz
sbb
push
jae
xor
mulb
andl
mov
sbb
lods
mov
inc
push
mov
inc
in
inc
or
loop
mov
mov
js
sbb
hlt
ds
dec
iret
ljmp
int
mov
push
mov
pop
sbb
dec
insb
addb
lahf
out
dec
and
cltd
outsl
dec
xchg
mov
negb
hlt
fs
pushl
call
and
lods
cmp
or
xlat
in
pushf
jg
lea
aam
lret
xor
mov
js
xor
sti
movsl
pop
dec
fwait
mov
repz
mov
cli
push
jl
mov
mov
dec
pusha
sbb
push
xchg
ret
mov
popa
inc
and
or
out
enter
mov
mov
pop
jmp
in
pushf
dec
inc
popa
lods
mov
cwtl
add
jle
mov
out
jl
sub
loopne
xchg
lret
mov
inc
sub
push
es
xor
outsb
cmp
xchg
enter
sub
and
pop
sub
adc
xchg
add
jb
mov
fmul
jp
jecxz
add
and
outsl
subb
insb
enter
adc
jo
loope
mov
push
mov
sbb
xchg
hlt
popa
into
cld
cmp
inc
xor
xchg
shrl
out
mov
or
add
stc
hlt
push
and
leave
mov
jmp
xchg
ja
ret
pop
dec
pop
mov
loop
cs
inc
mov
lret
inc
les
into
imull
inc
dec
fdivr
xor
js
orb
adc
push
jns
arpl
cmpsl
xchg
std
mov
pop
stos
push
cli
sbb
imul
call
push
push
test
shll
movsl
pop
scas
dec
jb
lods
cmpsb
mov
cmc
repnz
jge
pushf
sbb
das
jl,pt
add
sbb
or
adc
mov
push
stos
xchg
inc
lods
push
jns
pop
fstpl
xor
pop
inc
inc
mov
adcb
fiaddl
adc
notb
inc
cmpsl
scas
mov
in
leave
xor
les
out
add
imul
mov
mov
pop
repnz
out
ja
rorl
out
jns
inc
cmp
mov
push
call
pop
cwtl
mov
rcll
jl
scas
sbb
pop
cs
sub
and
jne
ja
cmp
jmp
dec
daa
inc
jl
dec
jle
or
mov
test
jae
xlat
push
mov
cmp
jl
ljmp
mov
pop
push
leave
std
or
mov
stos
rol
pop
push
push
fcom
dec
mov
bound
cmp
int3
add
jne
inc
jle
xor
ja
xchg
adc
js
sbb
cmpb
scas
dec
insb
hlt
dec
fnsave
adc
loopne
movsb
mov
pop
cs
lahf
push
and
and
sbb
test
push
in
push
jle
in
inc
xor
push
loopne
mov
xor
jae
sbb
test
mov
orl
loope
out
ds
mov
imul
aas
inc
sti
jmp
loopne
out
xchg
nop
sub
jmp
xor
or
lods
jb
adc
mov
mov
sahf
sub
fcoms
inc
in
adc
jecxz
outsb
out
or
out
out
sbb
xlat
std
scas
mov
push
mov
fcoml
stos
adc
mov
mov
jae
std
jns
shlb
icebp
bt
xchg
movsl
mov
mulb
std
aam
push
aam
negl
adcl
cmp
fcomps
mov
and
xchg
mov
inc
aaa
mov
and
mov
cli
adcl
outsl
add
addr16
mov
jecxz
mov
repz
rcll
cmpsb
sub
jecxz
sub
scas
js
mov
and
or
or
and
cld
xchg
test
addl
and
jae
sbb
adc
ret
jmp
dec
jle
call
popa
daa
sub
repz
mov
mov
shrb
mov
add
adc
cli
sub
test
lcall
lock
mov
stc
inc
xchg
xchg
je
lret
push
outsl
test
sub
xor
lahf
mov
cmpsl
mov
xor
xchg
sub
loop
xchg
js
fcmovb
loop
int3
jg
rcll
fdivs
or
fs
mov
and
push
fmuls
pop
sbb
insl
inc
fidivrs
pop
mov
subl
inc
and
test
xchg
sbb
sbb
cmp
lea
add
ds
cmpsl
cld
sbb
cmpsl
gs
gs
or
sub
rorb
add
add
filds
in
mov
leave
into
popa
xlat
add
fisttps
jg
and
enter
xchg
loopne
mov
mov
dec
xor
lock
push
adc
push
rcr
enter
outsb
or
rcll
ret
push
xor
xor
loope
es
xor
jb
mov
inc
sti
int
dec
out
mov
outsl
imull
jnp
icebp
mov
fwait
xor
dec
cmc
sub
mov
adc
aas
ljmp
mov
rep
popf
popf
add
sub
je
xchg
and
or
push
mov
fmulp
add
push
scas
and
xor
cmp
into
push
and
rcr
insl
fdiv
outsl
test
sti
dec
xor
scas
xchg
inc
adc
fadds
loopne
dec
movsb
inc
xor
lcall
es
insb
pop
xchg
bswap
sbb
dec
xchg
cs
sbb
add
out
pushf
jmp
fwait
stc
xlat
or
imul
jge
jo
pop
and
push
mov
adc
lea
lcall
enter
aaa
movsb
xorb
mov
cs
mov
dec
push
xor
mov
es
fldl
jbe
not
xor
cmpsl
push
adc
pop
nop
dec
xor
test
pop
sbbl
stos
pop
cmp
jno
xor
dec
ret
cmp
mov
shrl
pop
js
js
into
jne
das
cmc
mov
dec
outsl
sbb
cmp
adc
arpl
xor
stos
mov
cltd
and
stos
stos
add
and
test
xchg
jle
or
xchg
xor
shlb
arpl
insl
fbld
and
jbe
movsl
repz
pop
lods
jae
cli
lea
lea
andb
test
sti
inc
adc
movsb
shld
imul
mov
mov
shll
hlt
das
lods
mov
test
ret
cli
fs
jnp
pop
sbb
pop
jb
ljmp
pop
mov
mov
jns
popa
sti
sub
andb
out
movsb
cmpb
icebp
fadd
scas
lds
hlt
fs
pop
push
sub
lds
lods
jnp
cld
adc
clc
jmp
orb
punpckhbw
int3
mov
adc
xchg
mov
jle
adc
and
pop
adc
cmp
in
pop
insb
add
sarl
out
das
add
loop
jl
jge
and
ja
ret
add
or
cmpsl
mov
mov
and
inc
dec
dec
fadd
nop
leave
xor
mov
test
mov
cli
cmpsb
inc
mov
xlat
push
jp
sub
cmp
scas
leave
mov
mov
inc
or
ds
sub
in
xchg
mov
mov
mov
mov
aaa
sub
loop
inc
pop
mov
shll
pop
rclb
jns
adc
mov
int3
rclb
popa
int
sbb
lock
jp
or
mov
fimuls
jle
push
daa
call
jmp
icebp
mov
or
cli
dec
dec
call
lret
and
xchg
sbb
into
iret
add
fbld
pop
mov
cmpsb
mov
inc
adc
or
xor
pop
push
into
inc
mov
imul
pusha
jae
add
lahf
aaa
cmp
addr16
mov
mov
jl
sub
pop
cli
xor
rolb
nop
lret
std
push
or
push
bound
inc
popf
lret
pop
sbb
pop
lods
out
mov
jecxz
ret
and
popa
cmp
pop
jo
pop
fcmovne
inc
jb,pt
mov
mov
xor
movl
ds
pop
jnp
inc
jge
jg
lahf
cld
movb
iret
inc
cmc
fnstsw
dec
pop
popl
xchg
and
in
fdivrl
inc
mov
mov
cmc
movsb
lahf
fsubr
ds
inc
addr16
mov
inc
shl
mov
test
xor
and
subb
sub
mov
push
cmp
imul
insl
pop
cmpsb
cli
das
pop
lcall
repnz
fcompl
adc
mov
mov
call
xchg
adc
xchg
inc
jo
lret
inc
and
sub
xchg
cli
popa
xor
testl
in
jecxz
out
xchg
nop
nop
jecxz
jns
je
sarl
xor
in
es
sub
and
nop
pushf
das
adc
mov
jnp
mov
dec
je
jae
sbb
or
or
adc
and
sbb
adc
and
rorl
movb
aam
aas
jl
add
icebp
psubq
xor
inc
push
mov
push
jmp
sbb
out
inc
idiv
ja
mov
or
pop
leave
cld
mov
hlt
dec
jmp
sbb
push
mov
inc
das
lcall
movsl
push
sarl
or
xchg
mov
cli
aam
out
repz
ret
lret
je
cmp
int3
inc
repz
sbb
je
out
jl
cmp
jb
enter
mov
loope
push
mov
into
push
int
out
sbb
mov
out
sub
mov
jns
popf
xchg
pop
fbld
out
wrmsr
mov
add
adc
fsubr
push
jg
fiadds
sub
xlat
and
mov
cmp
aad
push
push
add
add
es
xchg
xchg
cwtl
pop
cmp
je
xor
push
cmp
dec
xchg
xor
stos
push
or
fwait
or
iret
push
je
sbb
push
icebp
push
xchg
jb
mov
in
mov
mov
testl
rolb
dec
dec
lret
insb
add
iret
jns
add
xchg
push
and
or
adc
hlt
pop
add
les
push
pop
rorl
xor
mov
jle
test
shlb
repnz
lea
sbb
xchg
sub
stos
es
and
std
gs
shrb
sub
cmp
in
inc
dec
sbb
and
lods
out
adcl
in
rcll
lds
cmp
or
arpl
movsl
das
adc
out
ret
in
mov
daa
leave
repnz
inc
cld
mov
mov
mov
loop
mov
jle
nop
testl
loop
push
mov
aam
jecxz,pn
cmpsl
test
cmp
jge
rol
push
sbb
adc
xlat
xorl
lahf
in
and
jae
push
stos
push
push
rolb
inc
push
or
leave
jecxz
mov
or
xor
mov
xor
bound
aas
mov
adc
out
divb
ja
xchg
leave
pushf
stc
movsb
pop
cs
lods
fs
jmp
aas
sub
push
mov
mov
xchg
loopne
xchg
xlat
inc
xor
repz
xor
cmp
jmp
or
repz
jno
outsb
adc
mov
cwtl
pop
xchg
scas
lahf
hlt
jmp
ss
add
arpl
adc
test
mov
inc
data16
andb
xchg
push
cmc
jmp
lods
sbb
inc
xchg
jns
ss
fidivrs
xchg
lcall
and
popf
sbbb
cwtl
mov
mov
and
ud0
jp
mov
movsl
and
divb
xchg
push
ljmp
mov
adc
mov
mov
fstl
cwtl
fisttpl
xor
aas
cmp
inc
jl
push
jnp
jle
lods
push
push
xchg
sbbl
imul
inc
push
inc
xchg
lods
outsl
dec
xchg
sbb
leave
mov
add
outsl
lea
clc
aad
stc
dec
and
test
ficoml
dec
lods
cmpsb
loop
insl
std
adc
es
iret
mov
inc
int
leave
xor
inc
xor
bound
jb
scas
nop
add
dec
jmp
aam
scas
adc
push
mov
loope
jb
repnz
inc
or
repz
jne
mov
inc
mov
mov
aaa
dec
xor
fs
pushf
xlat
mov
loope
and
int
and
cs
icebp
or
ds
mov
xchg
sbbl
nop
add
cmpl
imul
hlt
or
jge
inc
in
mov
pop
arpl
cmp
push
in
and
push
inc
lods
sbb
cmp
cmc
aaa
inc
xchg
mov
xor
mov
cmpl
or
and
cmp
mov
aad
sub
fcmovne
sub
push
pop
cmp
cmpsb
dec
fpatan
adc
sbb
sarl
mov
xor
sahf
cmpl
test
aaa
cmp
inc
jne
cmpsb
ds
adc
lret
les
out
jle
ljmp
scas
push
push
sub
push
mov
mov
inc
push
push
jg
jo,pt
cltd
nop
jo
pop
jo
adcb
movsl
enter
push
jnp
mov
and
mov
dec
or
fcoms
xor
mov
mov
std
pusha
push
orl
popa
test
imul
mov
push
and
sub
dec
mov
sub
mov
fsubrp
test
mov
lcall
push
mov
jnp
arpl
jl
in
movsl
aam
push
cmp
repz
mov
pop
pop
pop
mov
xchg
pop
adc
dec
xlat
push
test
dec
jle
hlt
jge
cmovp
cmp
xorb
testb
pop
arpl
mov
add
fildl
andb
sahf
lods
pop
cmc
enter
aad
shr
loopne
jp
loopne
bound
pushf
xor
scas
cmpsl
or
inc
movsl
addr16
add
xchg
enter
xor
movsb
adc
mov
fiaddl
inc
hlt
into
mov
mov
sbb
icebp
push
stc
and
mov
jmp
inc
fs
mov
push
mov
and
and
jecxz
ss
xor
sbb
push
jmp
adc
enter
pop
push
sbb
pop
shrb
pusha
cmp
in
cmp
stc
rcll
loopne
inc
popa
cmp
adc
int3
shlb
adc
das
out
rol
pop
mov
sbb
les
push
ret
cld
test
fcoml
or
add
test
int
fwait
fs
sub
adc
cmpsb
xlat
xlat
shll
lods
cmp
mov
jg
adc
lods
inc
push
jno
and
loopne
lock
movl
ficomps
dec
orb
cmp
popa
ds
cmp
aas
in
or
faddl
orl
test
push
mov
fildll
xor
push
dec
mov
int
subl
pop
out
imul
fmulp
dec
push
push
arpl
je
enter
inc
repnz
mov
push
dec
and
or
ljmp
mov
adc
sub
pop
cmpb
sahf
out
or
aaa
cmp
or
mov
enter
cmpsb
int
xchg
add
mov
cmpsb
scas
es
fs
pop
jno
je
jge
les
pop
cwtl
and
ret
mov
dec
sbb
jecxz
stos
sub
gs
jo
fldl
out
add
push
inc
jno
ret
mov
mov
iret
mov
sahf
cmp
xlat
ja
mov
mov
or
xchg
adc
fnstenv
and
movsl
in
int
xor
push
xchg
xchg
add
outsb
out
and
or
fxch
dec
jmp
pop
test
mov
mov
scas
lret
es
push
push
dec
movsl
call
sbb
lret
cltd
pushl
stos
in
push
jbe
arpl
movsl
or
adc
jo
je
xchg
xor
in
ret
mov
pushf
cwtl
outsl
iret
xbegin
adcl
mov
ds
dec
js
fbstp
sub
in
lahf
data16
adcl
mov
adc
loope
xchg
mov
jno
in
push
xchg
or
call
adcl
xchg
or
in
leave
sub
lcall
sub
movsl
mov
sub
sbb
sahf
psubq
outsb
cli
mov
pop
cmp
jp
dec
mov
jae
loope
insb
xchg
test
pop
pop
fstpt
enter
xor
dec
add
lahf
xchg
ds
int
sub
les
ljmp
mov
mov
test
push
in
add
adc
xlat
cmc
insl
pop
gs
sbb
es
scas
pop
inc
cmp
sbb
movsl
outsl
iret
adc
mov
das
fdivl
mov
push
xor
or
std
loopne
inc
xchg
movsb
ja
das
dec
adc
ss
negl
cmp
scas
sub
ljmp
je
jo
dec
xchg
mov
icebp
roll
cmp
mov
or
jmp
sti
loop
push
xchg
adc
jg
or
mov
cs
pushf
int
xchg
mov
adc
jnp
cmpl
sub
sub
xor
sqrtps
sti
pop
sbb
cs
xor
mov
fnclex
cmp
mov
push
mov
jecxz
out
sbb
pop
ret
in
mov
sbb
push
inc
mov
adc
outsl
add
int3
std
jg
stos
inc
loop
xor
jecxz
aaa
jge
sti
cs
jb
add
test
clc
outsb
add
pop
sub
add
loop
mov
call
sbb
test
adc
mov
lods
push
sbb
mov
inc
insb
mov
out
push
mov
or
outsl
jecxz
inc
ss
push
dec
aaa
or
or
call
insb
jnp
push
fsubs
sub
mov
insb
mov
fnstenv
mov
mov
test
into
sub
push
lods
int
cld
je
aad
and
dec
sbb
sarl
pop
lahf
lcall
jle
or
and
pop
xchg
stos
push
and
insb
aam
mov
out
out
je
adc
xchg
push
inc
mov
cs
shll
das
push
jle
out
popa
pop
xor
mov
dec
outsl
lods
cmp
dec
sbb
sbb
adc
xor
out
ss
pop
test
popa
jge
int3
aaa
out
stos
cmp
pusha
lods
xchg
push
testb
and
aas
cmp
aad
outsb
out
or
jg
ret
jg
popf
jbe
iret
xchg
push
add
sbb
rorl
adc
sbb
test
mov
push
adcb
inc
das
cmpsb
aaa
pop
dec
xchg
clc
dec
pop
jbe
and
stos
and
cmp
sub
aam
jns
lods
mov
int3
hlt
out
jns
push
popf
mov
stos
xchg
jl
ret
add
pop
shl
push
in
aaa
lock
mov
xchg
adc
ret
cvttps2pi
push
inc
fnstsw
add
jp
xor
jl
pop
mov
insb
repz
cwtl
sbb
pop
addr16
inc
cmp
fistl
mov
push
jmp
cmc
and
mov
inc
popa
mov
mov
and
xchg
push
gs
ljmp
add
cmp
fwait
hlt
mov
mov
out
xchg
sti
dec
sbb
mov
faddl
or
inc
jmp
loop
cmp
cmc
test
cltd
lock
xor
xchg
ss
mov
mov
mov
jp
and
test
inc
lods
adc
dec
fistl
adc
push
sbb
sbb
jecxz
mov
mov
stc
lock
push
cmpsb
push
mov
jb
cmpsb
or
dec
lret
pop
xor
out
mov
inc
and
jge
sub
shlb
dec
dec
test
ss
das
insb
xchg
xchg
push
mov
stc
pop
lods
pop
ja
mov
inc
stos
lea
mov
lcall
mov
mov
outsl
loop
hlt
insl
xchg
mov
movsl
cmp
stos
sbb
jns
fdivrl
add
or
sub
xor
mov
jo
out
cltd
dec
dec
test
pop
inc
pop
lret
push
mov
push
pusha
mov
mov
xchg
and
xor
push
decl
dec
mov
icebp
dec
call
mov
insb
jmp
fisubrl
dec
in
cmpsb
mov
cs
cltd
cmp
pop
dec
jle
dec
sbb
addr16
mov
repz
pop
movsb
mov
push
loopne
push
push
cmp
pop
out
push
icebp
sub
les
imul
xlat
add
mov
dec
addb
je
idivl
pop
shlb
fstps
pop
xor
sub
inc
cmpsl
lods
add
push
dec
adc
ds
data16
cmp
enter
jbe
test
pop
inc
sbb
mov
jmp
xchg
sti
nop
sbb
call
add
test
adc
add
adc
bnd
addr16
cmp
call
sub
xor
cs
sbb
call
aas
add
insb
xlat
jecxz
ja
dec
lock
repz
adc
inc
les
cli
es
in
sbb
mov
xor
inc
fisttpl
sbb
add
inc
pop
aam
leave
out
daa
scas
and
mov
test
sbbl
mov
movsb
jno
cli
xchg
inc
fnstenv
repnz
pop
xchg
cmp
jns
je
jmp
jmp
dec
mov
insb
pop
pop
mov
push
cmp
jbe
sub
inc
cmpsl
push
mov
iret
mov
loopne
xor
mov
call
in
mov
pushf
xchg
inc
mov
in
repnz
add
jnp
push
mov
loop
fidivs
cli
into
sbb
pop
incb
fldt
imul
cmp
push
sbb
bound
inc
lar
cwtl
loop
in
mov
movsl
adc
adc
sbb
enter
das
mov
inc
sbb
jns
mov
xor
adc
int
enter
jecxz
sbb
xor
ficoml
in
orl
not
xchg
push
fnstsw
std
add
and
mov
dec
fwait
push
sub
pop
xorb
mov
add
mov
xor
loope
je
dec
push
push
leave
jne
fimull
mov
fdivl
add
adc
xchg
xorl
jmp
mov
xorb
cmp
outsl
push
xchg
xor
sbb
pusha
rcrb
jne
sbb
pushf
mov
adc
dec
aas
jl
outsb
mov
cmc
pushf
adc
mov
imul
inc
mov
mov
test
movsb
xchg
pop
cwtl
and
lods
xor
ret
mull
pop
adc
sbb
test
xlat
in
xchg
rcll
or
shlb
sbb
jns
lds
int3
fwait
add
lret
and
dec
lea
xor
lds
out
cmp
test
bound
out
jbe
xor
das
call
cwtl
mov
sub
or
pop
dec
xor
mov
mov
mov
movsb
out
icebp
ljmp
out
lds
les
mov
leave
ss
jae
sbb
inc
pop
or
sub
push
test
frstor
push
iret
adc
es
push
fisubs
dec
jg
popf
xor
mov
in
pop
mov
pushf
xchg
pusha
mov
and
test
xor
mov
ljmp
jbe
sub
jl
push
out
fucomp
test
dec
or
add
cmpsb
ss
dec
es
je
js
int
bound
je
and
das
cmp
int3
lods
mov
js
pop
scas
stc
rolb
push
mov
mov
shl
cmp
mov
cltd
mov
or
ljmp
jecxz
test
outsb
loop
mov
and
xchg
cld
lahf
dec
xor
push
test
add
cwtl
inc
pop
stc
mov
lods
mov
jle
push
stc
ss
sub
xchg
les
clc
in
cmp
jmp
mov
repz
popa
test
daa
aas
inc
mov
sub
push
test
jns
sarb
pop
jg
lods
inc
pop
aam
xchg
xor
push
dec
jno
out
test
mov
in
lcall
or
lret
sbb
sbb
xchg
adc
mov
out
lock
adc
stos
or
ja
mov
mov
inc
xor
loope
fistpll
loope
jge
in
jb
test
lea
arpl
and
cli
pop
dec
or
mov
xchg
int
or
cli
je
xlat
cmp
test
mov
jae
int
cmp
or
icebp
leave
sub
cltd
lahf
push
out
or
push
incb
xchg
jb
dec
dec
mov
insb
jecxz
fimuls
sbb
adc
jp
jg
cmp
int
add
mov
dec
pop
lea
mov
adc
cltd
subb
call
rcrb
aad
add
sub
pushf
hlt
sub
pop
shll
outsb
sub
cmpsl
jae
inc
push
push
xchg
xchg
stos
popa
fiaddl
out
mov
inc
insb
cmp
lods
lods
or
aam
dec
shl
lahf
xor
xlat
call
mov
sub
jp
shl
xchg
imul
cs
stos
fidivl
adc
jl
stc
jmp
call
cmp
int3
ss
clc
lcall
mov
jl
out
xchg
cwtl
cwtl
outsb
insb
cmp
jae
lods
sub
mov
jns
into
or
cwtl
jmp
jne
fisttpl
adc
insl
daa
mov
call
fisttps
loopne
fs
push
cmp
imulb
out
adc
jmp
inc
dec
push
jbe
jle
mov
push
inc
sub
mov
jmp
fcmove
cmp
stos
repz
loopne
rolb
add
add
in
push
leave
sub
jl
arpl
fdivrl
fdiv
and
push
push
fdivrl
adc
add
mov
aaa
adc
jnp
or
or
pop
in
leave
fcmovbe
popa
jnp
dec
test
jp
pushf
and
je
gs
sub
dec
test
jnp
addr16
lahf
cli
imul
rcl
test
xchg
lret
jbe
add
mulb
imul
and
dec
pop
insb
pop
mov
jns
xchg
popa
cmpsb
mov
enter
sbb
cmp
lahf
mov
or
in
hlt
cmc
fidivrl
clc
stos
sub
into
or
add
sbbb
movsl
outsl
xchg
push
xchg
out
push
mov
adc
push
pop
outsl
cmc
inc
jns
xor
popf
mov
push
pop
fcompl
add
sub
pop
xchg
pop
dec
sbb
pop
dec
xor
cmp
fwait
pop
test
mov
insl
dec
mov
rcl
cmc
mov
shl
ljmp
sub
cs
fdivs
or
int3
inc
sbb
rcrb
scas
cmp
inc
add
push
mov
mov
mov
add
sub
push
pop
push
clc
sahf
mov
sbb
dec
push
and
push
hlt
inc
mov
mov
push
adc
ret
addl
pop
jbe
hlt
mov
lock
in
sbbl
or
fsubr
pop
dec
xchg
fstps
add
cltd
jmp
push
pop
or
mov
mov
addb
push
mov
mov
enter
insl
pop
sar
mov
ja
pop
inc
xor
scas
sbb
loopne
and
leave
or
sub
lds
ljmp
cmpsl
bound
imul
inc
lock
dec
std
jp
clc
shrb
or
fnstsw
lea
push
subl
pop
pop
in
jl
data16
les
and
je
rorb
in
inc
std
outsb
ffree
inc
xchg
push
sub
jg
ficoml
add
sub
inc
leave
add
aaa
jbe
repnz
popf
xor
jns
mov
jp
xor
repnz
inc
jbe
adc
xor
xchg
inc
dec
aaa
fwait
inc
addr16
test
pop
and
dec
jns
stos
push
sti
repz
das
pop
fs
repz
jb
test
mov
out
xor
mov
mov
mov
test
mov
jnp
inc
mov
mov
jbe
pop
inc
pop
mov
or
adc
mov
push
lods
dec
mov
xchg
imulb
cltd
out
fwait
dec
xor
or
mov
mov
jmp
bound
pop
and
out
adc
sub
int
sahf
or
mov
imul
shll
jmp
lahf
sub
std
and
lods
add
push
cld
push
mov
fcmovbe
pop
sub
pop
loope
roll
pop
cmp
xchg
add
mov
sub
and
lcall
inc
push
in
jle
or
or
insl
cmp
add
dec
sbb
aaa
mov
inc
xchg
add
fisubl
ja
fwait
xlat
cmp
sbb
mov
loop
notb
mov
mov
xor
int
shlb
jge
sub
repz
push
int
mov
std
aam
sub
xchg
pop
cwtl
int
fiadds
out
inc
fidivrs
lods
xor
in
pop
pop
dec
in
and
in
in
sub
scas
cld
sarl
mov
inc
and
mov
call
lds
mov
pop
sti
dec
pop
and
pop
andl
pop
les
je
push
leave
popa
aam
loopne
aam
lcall
je
addr16
mov
fldl
mov
xchg
aad
out
ficoml
xor
push
mov
mov
mov
pop
sub
sub
jp
bound
or
cmpsb
adc
out
add
ljmp
ret
clc
inc
scas
cltd
daa
pop
and
mov
sarb
adc
or
sub
xlat
mov
inc
mov
movsl
out
lea
clc
mov
xchg
cld
push
mov
pop
ret
aad
or
subl
mov
dec
lcall
pop
lret
dec
sahf
inc
inc
leave
push
push
adc
stc
jg
aad
mov
dec
dec
loopne
repz
es
mov
and
lahf
push
adc
mov
dec
cli
lock
call
in
sub
cltd
fidivrl
fdivs
add
int
pop
jae
xchg
clc
cmp
jmp
sbb
mov
incb
lcall
or
or
xchg
or
xor
push
dec
sbb
sbb
dec
mov
test
lods
test
cwtl
adc
jg
cmpsb
xlat
loopne
push
out
sbb
in
fmull
xor
push
mov
dec
pop
xor
adc
cltd
int
mov
add
test
andb
loopne
iret
mov
jb
xor
inc
addr16
fsubs
aam
test
das
lock
mov
in
pop
add
out
xchg
cmp
push
jns
xor
inc
jnp
in
sub
mov
cld
adc
push
xchg
pushl
stos
add
mov
enter
adc
cltd
inc
out
andb
push
adcl
mov
cmp
xchg
push
mov
jno
repnz
dec
xor
and
outsb
pushf
push
xchg
mov
rclb
jns
lods
mov
jl
shl
cli
inc
imul
mov
push
mov
or
xor
adc
out
insb
mov
ljmp
ror
inc
sbb
push
push
icebp
hlt
aaa
mov
loop
and
in
add
loope
or
mov
push
ror
sub
cmp
adc
mov
pop
popf
jp
lock
lods
mov
xor
sbb
xchg
push
leave
inc
xor
jg
xor
out
sbb
daa
xor
in
sub
jle
test
mov
dec
xor
xor
jno
or
js
mov
sub
rolb
mov
and
mov
mov
stos
fcmovb
adcb
fwait
jmp
push
cmp
divl
dec
int
sbb
fdivs
xor
mov
lock
int
push
dec
mov
stos
mov
lods
jno
ds
or
bound
rcrb
jle
testl
cltd
pushf
inc
cmpsb
add
ja
mov
jne
lret
icebp
mov
push
cmc
mov
mov
add
mov
imul
rclb
rcrb
aas
fs
push
loope
stos
push
mov
xor
mov
or
adc
ljmp
insl
sbb
add
das
cwtl
xor
mov
push
mov
fisttpll
xchg
mov
adc
xor
arpl
mov
clc
xor
mov
or
sub
adc
loope
and
stos
adc
arpl
test
or
inc
mov
imul
mov
fmuls
negb
and
in
aaa
sbb
fldlg2
out
or
shlb
nop
xlat
jb
lock
jae
daa
push
es
leave
cmp
loope
scas
loope
sub
push
adc
leave
enter
jmp
lret
mov
jg
sbbb
mov
clc
mov
sahf
pop
adc
rcl
mov
sbbb
adc
dec
jp
sbb
lret
lods
insb
push
cs
jne
jns
and
inc
nop
xchg
or
push
xor
testl
pop
mov
sbbb
ljmp
out
call
dec
xorb
test
add
lret
pop
int
out
dec
adcb
adc
dec
mov
sbb
mov
sbb
sbb
push
mov
imul
add
sbb
sbb
or
repz
dec
push
push
jnp
pop
ja
stos
ret
add
inc
leave
cmc
add
fs
xor
mov
mov
aam
cmp
pop
pop
xor
pusha
stos
outsl
sahf
js
ss
mov
jae
ret
xchg
mov
push
push
adc
mov
in
stos
xor
push
loop
imul
icebp
sub
cmp
pop
leave
pop
daa
mov
aas
jg
imul
arpl
jmp
cltd
sbb
xchg
ret
test
shrb
mov
push
add
repnz
xchg
hlt
xor
mov
rorl
and
push
dec
repz
test
pminub
les
push
incl
push
adc
sbb
imul
in
prefetcht1
lock
mov
fstpl
xor
pop
and
mov
pop
xor
xchg
xlat
jle,pt
push
add
push
outsl
jbe
imul
sbb
push
adc
dec
shll
mov
cltd
movsb
jo
cmp
outsb
testl
mov
and
push
and
or
cmp
shrl
daa
mov
adc
mov
mov
lcall
repnz
lret
hlt
test
mov
xlat
out
mov
or
add
sbbl
add
ds
sti
cwtl
andl
pusha
cmp
mov
xor
movsb
repnz
adc
and
aas
jge
or
iret
test
sub
mov
ss
stos
mov
jne
jb
lds
mov
sub
outsl
arpl
or
cmp
lea
fmulp
mov
push
mov
or
xlat
jp
inc
cmp
jno
adc
pushf
and
mov
pop
add
cld
icebp
inc
data16
sbb
mov
sub
and
or
lahf
inc
pop
cmp
decl
and
mov
push
xorb
pusha
mov
jne
jno
popf
dec
xlat
js
push
xchg
or
and
ljmp
jp
movsl
test
pop
sub
lahf
xor
aas
xor
mov
pop
scas
xor
jnp
add
cmpsl
pop
es
cmpsb
insb
mov
mov
imul
fnstenv
dec
shrl
add
cwtl
cmpsl
lahf
in
rol
jns
daa
cmp
sbb
cmpsb
push
cmpsl
and
ds
insb
pop
mov
pop
cmp
insl
push
loope
adc
push
xor
dec
pop
sub
sahf
test
inc
test
xchg
pop
mov
aas
push
pop
ds
pop
and
test
and
lds
test
push
mov
clc
popa
lahf
enter
mov
ret
movsl
mov
push
test
fwait
mov
imul
sub
andb
xchg
gs
adc
push
mov
adc
movl
mov
dec
in
inc
mov
push
insb
adc
xchg
sub
pop
push
cmp
dec
hlt
aaa
jp
mov
repz
in
add
dec
add
dec
leave
push
repz
xchg
incb
das
out
fwait
ja
fcomps
pop
enter
ret
jl
stc
scas
call
inc
jecxz
push
cwtl
das
sbb
int
popa
pop
sti
fldenv
pop
jae
push
mov
cmp
iret
pop
mov
or
movsb
or
mov
or
sub
pop
lret
push
shl
lcall
int3
ljmp
xor
stos
outsb
push
ds
add
xor
sub
jb
aam
pushf
mov
mov
lret
jg
sbb
pop
xchg
mov
cmpsb
pop
sub
mov
push
cltd
and
mov
push
xor
push
and
hlt
or
mov
lds
fbld
outsb
int3
clc
stc
xor
push
jecxz
push
int3
loopne
inc
cmpsb
jno
sbb
das
sub
jbe
nop
xchg
loopne
in
roll
mov
jp
inc
outsb
pop
out
subl
bnd
lods
scas
gs
insb
aaa
cltd
inc
lcall
mov
popa
pop
sti
and
sti
popf
bound
mov
push
ret
push
dec
dec
inc
inc
movsb
repz
mov
movsb
jae
adc
or
inc
ss
out
mov
stos
clc
push
pop
sub
mov
xchg
and
push
popa
cld
lock
sub
cs
test
ja
push
mov
xchg
mov
inc
push
fnstenv
mov
xchg
das
mov
jecxz
or
sub
dec
idiv
xchg
add
ret
adc
mov
ret
fs
add
js
scas
into
add
lock
in
enter
dec
int
loop
and
push
bound
cmp
lods
in
jl
mov
repnz
xchg
add
je
xor
jnp
dec
xlat
mov
mov
push
cmp
jnp
xor
aas
fisubl
mov
or
push
lock
inc
mov
dec
adc
ja
mov
lea
push
outsb
pop
imul
adc
cmp
pop
pop
testb
pop
xor
roll
pop
mov
movsl
pusha
and
out
popa
sub
cmp
and
xchg
and
xor
xchg
cmp
dec
cmp
push
jecxz
adc
and
mov
xor
fstl
cld
aaa
and
sbb
mov
add
test
mov
pusha
test
or
mov
jmp
sbb
jle
out
pushf
ret
push
push
ficoml
icebp
adc
rorl
lcall
jecxz
xor
mov
mov
call
mov
xchg
mov
jecxz
cmp
ljmp
scas
xor
jo
daa
pop
cmp
rolb
push
xchg
in
sub
bound
and
adc
das
jl
sub
inc
pop
cwtl
call
sti
push
mov
out
shll
pop
test
jns
sbb
ja
mov
lret
sti
push
fstpl
stos
xor
adcl
mov
int
ss
xchg
mov
nop
add
pop
xchg
bound
mov
mov
cmc
mov
mov
test
test
jno
pop
out
push
dec
cld
hlt
jmp
adc
mov
cmc
popf
clc
outsb
jo
mov
inc
cmpsl
mov
clc
cwtl
dec
fimuls
clc
xor
data16
mov
lahf
inc
data16
scas
mov
mov
lea
jg
fs
ljmp
mov
imul
jae
xchg
jno
or
pop
cmp
xchg
adc
dec
mov
mov
in
pusha
mov
ret
stos
aam
add
movsl
ds
pop
outsl
adc
dec
stc
dec
adc
sub
push
daa
adc
add
mov
frstor
sti
mov
dec
jge
ljmp
fwait
test
cwtl
insb
push
add
test
aam
and
inc
jecxz
fs
push
pop
mov
pop
negl
mov
mov
jae
test
loope
test
push
or
gs
leave
adc
sub
jl
data16
ret
test
decb
xchg
mulb
or
ds
jb
test
mov
cmc
and
pop
push
mov
mov
fcomip
sbb
mov
popf
add
lret
pop
jns
cmp
push
mov
and
sbb
in
mov
iret
push
aad
in
xor
iret
jns
arpl
xchg
ret
jo
test
cmp
lret
rdpmc
lods
mov
daa
dec
cld
lret
inc
mov
sub
movsb
insb
sub
lds
cmpsb
jb
xlat
imul
mov
mov
loop
out
pop
push
inc
rorb
cwtl
leave
and
ljmp
mov
test
daa
sbb
lcall
mov
outsl
cld
pushf
pop
iret
sub
daa
mov
stos
loopne
pusha
loop
lcall
addl
jb
xchg
icebp
out
stos
adc
sub
push
sub
adc
adc
xor
lret
xchg
cmpsb
jne
addr16
jecxz
mov
push
test
stc
xor
fisubrl
mov
les
lret
ret
fisubrl
lfence
sahf
pop
popf
jo
dec
inc
lods
lahf
popf
mov
int3
stc
sbb
pop
addb
roll
mov
push
cmc
test
in
add
gs
sahf
scas
push
sub
out
add
jle
jge
sbb
aad
test
pop
dec
test
loope
jmp
gs
ret
fildl
popf
pop
call
bound
int3
xchg
inc
fcmovu
lcall
mov
xchg
psrad
cmp
jle
xor
ds
pop
dec
dec
mov
cmovns
jo
pop
sbb
lret
and
cmpsl
mov
xchg
xchg
out
shrl
and
cmp
dec
out
cmp
repnz
cld
fisttpll
imul
es
pop
xor
jmp
pop
mov
cld
shrb
push
imul
add
loope
daa
mov
push
jo
in
jbe
pop
and
notb
dec
das
stos
scas
inc
sub
push
xor
pop
mov
and
add
orl
or
jbe
mov
mov
in
pop
inc
xchg
jp
lahf
xchg
adc
int
xchg
mov
sahf
cmpsl
adc
mov
pop
out
inc
in
sbb
hlt
xor
cltd
xor
loopne
cmp
nop
add
adc
push
cmc
notb
mov
pop
mov
scas
xchg
les
jo
mov
adc
inc
mov
and
mov
repz
mov
ljmp
xchg
out
fs
lods
lods
js
aas
jg
stos
pusha
lea
in
stc
iret
cmpsb
inc
lods
mov
mov
aas
adc
or
pop
lods
xchg
mov
aam
and
and
sbb
loopne
rcrb
popf
or
mov
insl
xchg
mov
and
mov
rcrl
and
pop
dec
push
xor
jle
mov
cmp
ret
pop
mov
filds
and
pop
lcall
popf
jge
adc
das
jecxz
mov
pop
push
fsubr
out
mov
lock
mov
movl
add
dec
pop
jp
stc
in
out
popf
add
insl
dec
dec
cmp
fisttpll
dec
shrl
aad
pop
add
jl
mov
out
xchg
or
rclb
leave
mov
cmp
jp
add
jle
repz
in
mov
xor
ret
jb
mov
mov
and
imul
mov
xchg
in
push
in
xor
jno
ret
sbb
jnp
and
cmpsl
sarl
fsqrt
push
vmwrite
roll
loope
push
xchg
inc
and
and
and
add
xchg
adc
push
fbstp
test
sbb
testb
fdiv
adc
adc
and
into
lds
in
loopne
aaa
mov
dec
jmp
xor
aam
mov
lret
or
lock
mov
jle
cltd
mov
jg
and
test
mov
leave
aad
mov
dec
push
testl
hlt
loope
mov
inc
jae,pt
mov
jp
test
cld
mov
insl
jecxz
lods
pushl
out
rorb
cli
pusha
add
rol
adc
sub
pop
push
out
mov
adcb
jp
or
stc
inc
push
sub
bound
or
fwait
in
std
test
pop
push
mov
or
dec
mov
int3
inc
aas
jp
pop
into
pop
jl
andl
jno
es
lret
shrb
test
ror
je
cmpb
loop
test
pop
dec
fcomps
out
in
dec
scas
and
push
nop
in
mov
rcrl
outsb
int
xchg
or
ss
leave
add
stos
sti
inc
jne
js
lds
adc
imul
push
int3
pop
outsb
mov
pop
rol
dec
adc
push
enter
pop
cmp
push
jecxz
push
pop
je
xchg
lcall
lea
xchg
pop
pusha
xchg
ds
imul
test
mov
pop
repnz
loop
in
fimuls
mov
dec
shl
push
sbb
bound
sbb
aam
sti
test
maxps
xor
leave
xchg
cmpl
sub
outsl
ret
sbb
jne
sbb
or
popf
je
jmp
shll
push
inc
sub
sub
ds
das
idivb
clc
in
ficoms
mov
xorl
test
aaa
push
adcl
xor
cs
les
xor
pop
xchg
loopne
aas
cmpsl
mov
cld
fdivl
push
addr16
sub
movsb
xchg
and
leave
sub
xor
rcl
adc
mov
or
push
cmpsl
lahf
sub
stos
and
push
adc
push
mov
and
ret
pop
fildl
rorl
sbb
and
mov
outsl
fiaddl
lock
mov
iret
push
dec
je
cli
out
ja
mov
enter
dec
sbb
pop
lock
ret
lods
incl
pusha
sbb
xchg
pop
mov
rcr
sbb
sbb
xchg
loope
hlt
test
shrb
aas
maskmovq
add
outsl
inc
data16
pop
enter
fildl
pop
das
and
or
push
out
insl
mov
dec
cmp
and
jo
sarb
out
mov
data16
xchg
and
sbb
rorb
stos
ss
movsl
int
dec
imul
in
imul
clc
sbb
cli
fsubl
sub
into
push
outsl
push
lret
stos
adc
loope
xchg
sub
jecxz
push
bound
inc
cli
adc
fisubrs
test
and
jbe
jge
mov
cmp
insb
jmp
int3
rcl
pop
imul
les
lcall
out
test
mov
xor
aad
push
iret
fs
test
daa
sbb
bndstx
fisttpl
in
insb
stos
dec
popa
test
fsub
rcr
fistpl
test
xor
cmc
fsubs
xor
cltd
sbb
jae
and
pop
mov
cmp
fsubrs
lcall
xchg
lret
fsubl
nop
push
mov
pop
xor
or
xchg
pop
ret
outsl
pop
sahf
flds
scas
fucom
xchg
xchg
test
rolb
sbb
pop
hlt
aaa
xchg
pop
cltd
repz
out
jecxz
xor
jecxz
cmp
mov
xchg
or
pop
ljmp
or
lcall
push
dec
repnz
pop
push
jecxz
lock
shll
addl
mov
xchg
icebp
jae
std
and
and
pop
sub
xchg
pop
enter
rcrl
cmp
jp
daa
fsubs
cmpsl
int
cmp
mov
push
jecxz
inc
ror
sahf
xchg
iret
add
lcall
cmp
xchg
mov
divb
lock
imul
add
xchg
hlt
icebp
ja
jne
dec
lcall
les
mov
xor
push
icebp
xchg
movsl
xor
movsb
cmpsl
inc
mov
xchg
sbb
scas
sbb
sub
dec
popf
loope
or
or
popa
sbb
xchg
add
jmp
push
andb
push
or
inc
dec
sbb
pop
pop
shlb
push
cmc
test
push
add
clc
mov
xor
push
insl
cmp
loope,pn
ss
jmp
push
sbb
jl
push
aas
test
cmp
dec
fwait
dec
sahf
outsb
movsl
sub
pushf
nop
mov
mov
mov
dec
xchg
insl
mov
mov
jbe
les
xchg
adc
outsb
clc
inc
or
mov
sbb
rclb
lods
sbb
adc
mov
push
cmp
jle
and
dec
outsb
push
xor
test
xchg
or
scas
shrb
cmpsl
stos
lods
rcrl
arpl
ds
pusha
xor
enter
fnstsw
nop
lcall
iret
stc
sub
mov
outsl
inc
push
das
shl
cmpb
inc
dec
lahf
fcomps
jp
sbb
jae
xor
adc
pushf
lahf
aas
pop
lods
xchg
add
mov
mov
sub
stc
scas
xchg
es
mov
mov
out
push
jne
jl
sub
das
fwait
nop
outsl
fsubrl
sbb
xchg
clc
dec
lods
mov
mov
jg
mov
lea
jbe
and
push
push
mov
jmp
xlat
and
adc
enter
mov
fistl
mov
mov
popf
pop
pop
pop
imul
mov
or
jmp
addr16
jle
push
fisubrs
insl
movsb
sbb
mov
icebp
pop
je
or
mov
mov
inc
lods
xor
push
sbb
push
jle
adc
cwtl
test
cmp
leave
int3
lret
icebp
sub
mov
and
fwait
sahf
jmp
mov
gs
adc
sarb
fidivs
int3
cmp
jecxz
nop
scas
inc
in
push
and
mov
bound
mov
inc
pop
lds
loopne
mov
push
push
mov
jg
lret
or
mov
jg
mov
xor
fisubs
xor
jno
hlt
pop
xor
xor
jecxz
cmp
or
enter
out
add
mov
les
loop
jb
or
dec
mov
mov
xor
pop
int3
scas
idivl
stc
or
inc
sub
xor
sub
jg
cmc
pop
pop
lret
sub
fcoml
pop
lcall
shrb
je
sbb
fidivs
adc
mov
mov
push
int
push
mov
fcmovnu
adc
loopne
mov
push
out
adc
mov
cli
pusha
pop
or
push
jns
stos
mov
aam
dec
mov
add
cmp
push
sub
sub
cmp
loop
cld
sub
mov
pop
push
or
xchg
dec
mov
mov
or
movsl
clc
scas
nop
and
outsl
cmp
popf
stc
int
add
js
test
out
je
cs
popa
adc
jle
adc
push
sbb
sbb
pop
loope
pop
rorl
stos
out
sbb
pusha
hlt
in
daa
jno
movsl
dec
pop
xor
pop
repnz
jmp
adc
out
fmuls
fmul
push
or
sbb
mov
mov
shl
es
out
in
into
cmp
cli
cmp
popa
aad
push
mov
data16
mov
mov
ljmp
icebp
aas
mov
pop
jb
scas
mov
xchg
inc
jg
and
jns
inc
lods
dec
pop
rcrl
sbb
div
testl
cmp
xor
or
push
add
arpl
das
adc
aas
filds
sub
mov
loop
inc
pop
or
daa
or
push
daa
xor
ds
cs
lcall
bound
mov
adc
push
jns
inc
rcr
pop
adc
push
pop
loope
dec
bound
jle
fistps
cwtl
ret
pop
test
test
sbb
cmp
push
jmp
push
dec
xor
mov
int3
xchg
pop
aas
cmp
cmc
add
cld
shr
aaa
into
mov
arpl
aad
popl
jae
and
xchg
xor
mov
lea
xlat
rclb
ficoms
xor
sub
mov
mov
jae
jno
cmp
push
movsb
push
movsl
popl
add
movsl
addr16
cli
inc
mov
fstps
mov
mov
imul
imul
mov
xor
shl
hlt
xor
inc
inc
frstpm(287
aas
push
pop
mov
push
push
mov
and
popf
ja
lds
movsb
cli
push
mov
jb
out
subl
insl
fidivrs
push
incl
pop
push
shl
mov
loope
addr16
clc
jmp
pop
cmpsl
adc
pop
adc
sub
addr16
popf
sbb
sbb
jle
test
fwait
inc
mov
sbb
mov
outsl
mov
cld
je
pop
xor
dec
add
push
fidivrl
inc
or
rcrb
jg
in
or
push
dec
jmp
xchg
pop
xchg
pusha
ljmp
add
sti
sar
cmp
xchg
ret
imul
mov
push
cli
sbb
dec
inc
lahf
es
pop
adc
push
mov
movsb
fwait
jbe
xor
iret
or
mul
mov
inc
rol
jl
rcrl
std
dec
sub
sbb
mov
out
dec
sub
sub
movsl
in
push
jl
push
lds
lea
add
insl
adc
aad
mov
in
mov
pop
sbb
mov
inc
mov
les
jae
xor
sbb
adc
lods
fcoms
mov
xchg
mov
outsl
out
fisttpl
mov
andl
in
sub
mov
dec
ja
inc
pop
shlb
cli
or
cmp
iret
pusha
in
ss
jecxz
dec
outsb
insl
jmp
repnz
push
sbb
xor
pop
mov
cmp
xor
cmp
inc
fldcw
pop
test
in
loopne
cmp
dec
mov
imul
out
sub
sahf
ljmp
mov
sbb
mov
lret
mov
xchg
filds
add
sti
sub
popa
mov
xchg
xor
mov
mov
pushf
push
mov
fwait
mov
lods
js
loopne
in
cwtd
in
inc
xchg
mov
movsl
pusha
dec
push
stos
psraw
add
lret
sti
repz
mov
push
cmp
mov
je
xlat
lods
mov
pushf
das
into
decl
dec
mov
cmp
fs
or
xchg
dec
and
or
adc
xor
loop
and
loope
icebp
xor
test
inc
je
push
or
gs
dec
jne
xchg
jnp
les
push
inc
add
adc
adc
xlat
scas
pushf
xchg
aas
xlat
rol
cmp
adc
jle
and
jmp
adcl
in
lcall
cmpsb
es
jp
and
xor
into
fs
out
out
aad
jl
out
test
ja
lods
out
ljmp
mov
sbb
add
adc
push
sbb
cld
mull
popa
in
outsl
push
test
lret
in
jno
dec
push
or
cmp
pop
mov
cmp
std
jecxz
jo
loop
lret
adc
mov
dec
movsb
xchg
mov
scas
outsb
clc
mov
mov
stos
es
pop
aam
dec
or
insl
xchg
xor
movsl
xorps
cmp
dec
les
mov
movsl
add
sbb
les
push
or
ja
sbb
je
subl
add
sbb
sub
shll
ret
testb
sbb
fisubrl
and
iret
push
push
push
inc
aam
add
or
aaa
int3
mov
lret
sbb
popa
push
int
and
mov
and
push
xchg
cmp
aaa
mov
push
sub
scas
clc
pop
es
repnz
sub
dec
add
sbb
shll
mov
mov
or
fnsave
insl
sbb
rorl
jle
pop
mov
push
mov
stos
in
pop
imul
in
xchg
dec
xor
js
sbb
mov
lds
and
push
mov
or
sub
andl
leave
lods
pop
mov
insb
out
mov
scas
xor
pop
jmp
ljmp
mov
mov
mov
loop
pop
adc
loop
sbb
push
push
jb
test
je
sbb
pushf
fwait
das
or
int
mov
push
xchg
jmp
sar
adc
dec
into
adc
sahf
mov
mov
and
xor
pop
int
cmp
loopne,pn
daa
cs
push
mov
ss
imul
adc
push
pop
andl
xchg
data16
mov
or
push
fcomps
out
mov
out
xor
lods
sub
jl
mov
inc
xor
adc
shrl
xor
shl
push
sbb
pop
test
ficoms
xchg
inc
dec
fisubs
sub
iret
mov
inc
negl
stos
test
mov
add
stos
lret
pop
push
sbb
sub
dec
test
sti
pop
add
shll
xchg
out
popa
push
decb
mov
arpl
pusha
imul
imul
mov
fisubl
jnp
mov
es
fcomps
out
mov
lret
data16
or
clc
mov
inc
fildll
test
test
sbbl
dec
movsl
arpl
adc
push
sbb
imul
pop
jecxz
test
fsubr
cltd
sub
andb
mov
addr16
leave
lret
pop
repnz
sub
fisubl
ds
cmp
rcrl
push
in
xchg
or
inc
sbb
imul
fadd
aam
xchg
out
daa
mov
or
jne
xchg
push
ffreep
xchg
xchg
sub
push
stos
jb
scas
mov
sti
stos
fisttpll
mov
test
add
jnp
push
je
lea
jo
outsb
jecxz
in
scas
adc
xchg
js
dec
hlt
lea
mov
ficoml
mov
jno
adc
leave
mov
jo
jecxz
push
sub
lea
cmpsb
jnp
xchg
pop
call
cltd
aad
push
loop
pop
nop
dec
jl
mov
xchg
leave
lahf
push
jb
xchg
xchg
dec
or
out
fs
paddusb
mov
mov
stos
repnz
push
mov
cmp
push
adc
mov
pop
sbb
mov
adc
popf
insb
and
jo
pop
gs
shlb
push
mov
push
mov
xchg
add
or
out
pusha
push
test
in
ja
sbb
sub
push
xchg
les
mov
aam
inc
out
pop
mov
mov
lods
movsl
outsl
lahf
cltd
fneni(8087
xchg
xor
jbe
jmp
cmpsb
ja
enter
aaa
lret
int3
scas
rcr
mov
dec
cmpsl
jmp
hlt
mov
sbb
fcoms
lds
add
sbb
lods
inc
pop
sbb
addr16
aad
test
sbb
dec
ljmp
mov
in
sub
sbb
push
xorb
cmc
int3
mov
ret
jb,pt
sub
sbb
stc
movsl
out
ss
imul
or
dec
sbb
jo
arpl
ret
stc
sbb
mov
add
cwtl
add
xchg
shr
xor
out
mov
das
xchg
sub
outsb
or
inc
cmp
lcall
imul
out
push
mov
or
cmpsb
test
rclb
outsb
jae
enter
cmp
jge
in
enter
leave
mov
sub
repz
andl
scas
hlt
loope
fwait
movsl
xor
lock
dec
popf
jne
insb
push
popa
in
out
xor
mov
mov
dec
clc
cmp
xchg
mov
add
test
addl
push
stc
lahf
stc
mov
stc
adc
flds
rorb
mov
mov
clc
add
push
jg
sbb
es
or
push
bound
jbe
arpl
inc
cmpsl
ret
rorl
or
jb
in
into
nop
push
ret
cmpsl
jo
mov
ljmp
xor
filds
and
xor
aad
xor
bound
and
in
aaa
mov
pop
xor
rcrb
or
mov
mov
sbb
arpl
dec
push
movsb
dec
lea
bound
cmp
sbb
push
notb
cmpsl
ds
popf
fisttpll
out
add
pop
movsb
add
test
mov
out
ret
mov
fwait
mov
je
bswap
pop
fwait
out
cmp
mov
xor
insb
mov
das
pop
sarl
call
or
frstor
lret
insl
andb
lods
sbb
addl
nop
jge
lea
gs
div
or
or
jae
aad
cmp
sbb
je
ds
loop
es
aad
jmp
and
sbb
lods
jle
mov
loope
xchg
dec
jne
into
incb
and
ja
ja
add
mov
mov
pushf
sub
ja
mov
sbb
adc
or
jnp
into
jo
mov
cs
cld
lods
add
inc
inc
sti
dec
jecxz
shll
sbb
outsl
mov
mov
nop
ret
out
aas
sarb
notb
xchg
pop
push
repz
loope
mov
adc
cli
dec
mov
xchg
pusha
jne
mov
jmp
dec
fdivrs
sbb
mov
pusha
push
pop
dec
jne
mov
rol
push
xchg
xor
imul
loopne
iretw
je
decb
push
cmpsb
jno
rol
xchg
cli
sub
push
push
sub
scas
mov
mov
mov
sarb
pop
mov
sub
sub
cld
mov
lods
out
cmpsl
mov
push
fwait
xchg
testb
addl
call
cmp
jge
xchg
sbb
push
and
fistpl
gs
cs
mov
bound
mov
test
dec
jge
inc
mov
mov
push
scas
pushf
inc
aaa
sbb
inc
test
adc
and
inc
adc
xor
jnp
int3
xchg
sar
adc
push
jb
out
adc
xchg
cmc
mov
xchg
pop
sbb
mov
icebp
sbb
cmpl
lahf
daa
mov
sub
popa
movsb
jbe
xchg
cmp
jne
fstpt
pop
inc
lcall
xchg
push
and
pop
mov
shll
rcll
jb
xor
scas
mov
clc
cmp
shll
call
cs
es
repnz
punpckldq
mov
pop
jecxz
inc
lods
jnp
push
hlt
jne
jl
push
jg
inc
adcl
daa
mov
outsw
mov
mov
push
cmpsl
in
cltd
cmc
shl
jb
mov
mov
shlb
into
shrl
in
sub
imulb
dec
shrb
add
ret
lock
add
or
xchg
pusha
fisttps
scas
aas
add
cltd
repnz
cmp
mov
cmpsb
jl
xchg
dec
sbb
inc
andl
movsl
ljmp
xor
sarb
sbb
shr
or
call
sub
inc
mov
sub
lcall
xor
xchg
mov
cmc
imul
xor
fldt
mov
psrlw
and
out
inc
jmp
imul
movsl
inc
aad
xchg
aam
and
add
push
clc
mov
dec
outsl
pusha
xor
pop
jecxz
add
loop
pushl
mov
cmp
repz
ret
or
pop
xchg
push
push
add
jp
jb
stos
fbld
push
add
pop
sub
xor
push
dec
mov
into
inc
xchg
mov
dec
stos
push
jne
sahf
jbe
dec
xorb
pop
mov
idivb
adc
std
dec
mov
cwtl
lods
fwait
lods
and
pop
fstpt
mov
ror
jp
mov
mov
insl
pop
loope
adcb
push
aad
adc
push
push
aad
ljmp
lds
call
pop
mov
daa
jbe
jge
shl
jl
and
addr16
or
cli
mov
mov
in
faddl
movsl
pop
mov
xchg
jno
cmp
movsl
mov
dec
mov
mov
sbb
xchg
jge
pop
data16
mov
repnz
push
dec
lret
scas
lcall
mov
dec
jg
dec
in
mov
lcall
and
rolb
push
lods
loop
jecxz
jle
inc
jge
sbb
arpl
cmp
ja
xlat
xchg
cmpsl
call
pop
fstpl
mov
repz
data16
test
mov
cmp
mov
or
aaa
mov
cmpl
sbb
in
movsb
popf
ljmp
and
jecxz
cmpb
mov
inc
scas
jno
pop
mov
pop
arpl
sahf
push
push
mov
jns
shl
pop
imul
and
pushf
or
testb
sub
lret
lret
in
push
sbb
mov
mov
cmp
mov
test
fldl
or
xor
mov
dec
stc
shll
jl
push
aas
rcr
and
add
mov
pop
div
lcall
nop
xchg
or
sub
dec
roll
aas
pop
xchg
int3
jo
outsl
movsb
lock
mov
jns
fcomi
loopne
adc
lods
jae
pop
add
loope
or
mov
sub
add
inc
roll
xchg
jl
adc
cmp
jl
js
hlt
dec
mov
ret
decl
insl
insl
into
aaa
pop
xchg
jmp
push
stos
dec
test
adc
gs
aam
or
pop
xor
pop
jp
push
outsb
out
push
leave
jb
push
xorb
cwtl
sub
pop
adc
mov
mov
dec
sub
add
call
popa
bound
lods
add
adc
cmp
jl
inc
pop
ret
icebp
out
sbb
loopne
shl
fidivrs
hlt
notl
push
test
adcb
out
mov
jne
add
mov
sbb
sub
dec
xor
mov
pop
aad
addr16
popf
xchg
rclb
std
jmp
fldcw
add
pop
jnp
mov
and
lods
pop
adc
pushf
div
inc
js
dec
out
cmp
pushf
push
loope
enter
and
stos
jp
mov
sub
push
mov
dec
inc
jae
jo
mov
adc
in
cmp
iret
pop
outsl
shrb
bound
mov
ss
mov
icebp
and
dec
add
subl
inc
dec
into
in
cmp
adc
sub
lods
out
or
aas
sub
sbb
push
jbe
fists
sarb
jns
xor
outsb
sub
in
das
xchg
fdivr
jmp
mov
sub
mov
and
jbe
or
call
mov
test
push
ret
sbb
mov
add
bound
fs
adc
lahf
dec
sbb
cmpsb
mov
jne
pop
adc
mov
aaa
out
mov
adc
sub
sub
rcrl
pop
mov
cmp
add
or
fwait
mov
pop
sti
imull
movsb
or
in
insl
movsl
mov
pop
mov
adc
mov
dec
jmp
test
js
fs
push
stos
and
out
push
call
mull
sbb
test
loop
stos
test
mov
jp
mov
adc
push
adc
jo
mov
orl
push
out
loopne
out
cli
daa
out
loop
stc
in
outsb
loopne
data16
sub
repnz
jnp
filds
dec
mov
loopne
mov
cmp
popf
out
stos
ret
pop
jne
cmp
js
adc
mov
inc
pop
inc
add
sbb
imul
sub
pop
jnp
jbe
xchg
lahf
lods
dec
stos
dec
lret
iret
push
inc
adc
cmp
cld
sbb
popa
fcmovb
fisubrl
into
pushf
xchg
mov
or
add
orb
add
aam
filds
lret
icebp
inc
gs
jo
dec
jbe
das
sbb
in
pop
iret
inc
daa
cmp
popf
ljmp
jne
push
pop
pop
mov
in
or
add
jo
push
lds
imul
push
shl
test
test
and
dec
mov
jo
aam
mov
jmp
xor
aad
push
adc
insb
jg
or
mov
sub
data16
and
jmp
add
rorl
add
inc
push
push
imul
dec
adc
icebp
jbe
and
inc
jb
scas
js
xchg
push
xor
call
shl
shlb
stos
test
mov
xor
fidivrs
cmpsb
pop
sar
or
xlat
xchg
dec
adc
mov
dec
lahf
pusha
pop
lea
adc
mov
fadd
xor
adc
rcr
hlt
cmp
cmp
imul
aad
les
popf
xchg
and
or
adc
cmpsl
push
jnp
mov
loop
jge
lcall
mov
add
inc
mov
in
push
sbb
adc
pop
fwait
popa
lret
jno
cmpsl
or
mov
push
jl
push
or
cmp
test
std
mov
jno
sub
inc
mov
add
scas
lret
inc
or
mov
das
insl
xchg
testl
scas
adc
push
mov
inc
and
lret
jp
xor
push
hlt
stos
lds
adc
stos
xchg
outsl
jbe
xchg
cmc
fdivrp
xor
shlb
sahf
jg
nop
mov
add
popa
int
adc
mov
add
test
or
xchg
fdivl
call
xchg
jo
data16
into
mov
xchg
les
or
bound
or
and
loopne
enter
add
aaa
xor
in
or
and
pop
xor
mov
in
sti
fs
push
orl
mov
and
sub
call
add
stos
and
sti
inc
aas
jae
rcrb
mov
sub
stos
stos
or
das
lcall
lods
sub
push
pop
bound
icebp
cmc
sub
imulb
pusha
cltd
mov
xor
repnz
xchg
push
jl
test
cmpsb
push
mov
sarb
loopne
sbb
mov
in
cs
adc
dec
inc
aad
and
hlt
push
ja
jbe
xchg
dec
scas
es
sar
dec
xor
cmp
push
push
mov
fcmovnb
testb
mov
rclb
jbe
stos
ja
test
cmp
push
imulb
cli
fnstcw
cs
shll
cmpsl
nop
adc
pop
pop
repz
cmpsl
adc
sbb
daa
dec
push
pop
pop
test
sbb
ss
addl
or
mov
adc
push
cwtl
jne
cmp
stos
cwtl
sti
and
test
adc
pop
loop
cmp
inc
sub
int3
rclb
mov
aas
mov
or
loopne
addl
outsl
shll
sub
outsl
push
mov
imul
mov
cltd
fsubrs
rol
sub
ja
and
lods
sub
fidivs
mov
lea
lock
fidivl
push
xor
sti
fldt
enter
loope
xchg
cld
int3
psubb
ds
inc
aas
or
jne
mov
inc
icebp
ja
xchg
xchg
add
scas
leave
adc
sbb
or
mov
fisubrl
mov
test
mov
add
lods
hlt
sub
addb
rclb
loopne
jmp
pop
faddl
loope
cmovg
ret
aad
outsb
mov
ja
jg
rcl
push
loop
icebp
sbb
leave
add
out
mov
dec
movsb
ja
pop
xchg
bound
lods
clc
in
ja
xor
or
aam
push
and
push
jae
popa
mov
cmp
ss
adc
mov
movl
xor
pop
addr16
ja
add
stos
fidivrs
jae
outsl
and
negl
bound
adc
pop
cmp
jge
inc
stos
addr16
repz
sub
or
xchg
lret
sbb
pop
inc
mov
cs
cmp
dec
into
sub
adc
xchg
add
pop
add
push
jp
sbb
movsl
mov
test
xor
mov
xor
ret
add
test
cmpsl
les
mov
xchg
popf
stc
jbe
mov
adc
hlt
aaa
and
push
nop
and
and
dec
cmp
sub
lock
sarl
popa
mov
push
js
pop
dec
adc
mov
scas
mov
jg
jg
dec
mov
notb
ret
pop
inc
leave
fdivs
cmp
popl
negb
rcr
cmp
fdivs
sub
xchg
insl
testl
test
lds
mov
mov
dec
push
add
iret
fwait
add
cs
mov
or
xchg
sub
popf
scas
pop
out
xchg
fnstcw
push
lea
jle
icebp
out
popa
jp
xor
loop
xor
mov
mov
cmp
insl
movsl
pusha
pop
push
shlb
or
aam
mov
cs
pmulhw
add
mov
sbb
pop
mov
sub
pushl
mov
adc
dec
sub
mov
jl
mov
dec
mov
push
jl
pop
jnp
push
jne
out
adc
pop
push
jg
xor
fstpl
xchg
mov
dec
sbb
push
pop
cmp
sub
lcall
dec
mov
xchg
add
or
out
push
ss
inc
mov
adc
xlat
out
pop
adc
shrb
jnp
notb
xchg
dec
sub
jp
stos
xor
aas
and
test
je
rorl
iret
bound
or
sub
mov
cmpsl
push
or
ja
scas
mov
hlt
lock
xchg
mov
cmp
inc
mov
inc
sbb
cmp
push
push
adcb
lock
xor
adc
inc
mov
pop
jno
adc
push
fucomi
or
and
xchg
scas
out
add
mov
or
xor
push
in
pop
xchg
lods
inc
xchg
ret
test
popf
movb
push
rcrb
dec
xchg
scas
mov
adc
jmp
cmp
lfs
int3
bound
dec
and
fdivrs
rcr
lret
fistpl
xor
xor
sub
or
scas
push
movsb
addr16
leave
or
push
push
mov
dec
movsl
dec
pop
jne
stc
xchg
inc
enter
push
jo
lcall
ret
pushf
incb
gs
cmp
je
jbe
orb
pop
rclb
xor
jp
mov
fildl
push
stc
js
aam
mov
adc
and
cmpsb
jb
jg
loope
pop
lret
dec
xchg
or
fists
ret
es
cmpb
out
and
stos
repz
iret
popa
xchg
add
adc
rorl
int3
sahf
in
xchg
in
popf
push
add
jae
das
loope
jnp
inc
push
push
fmull
inc
decb
add
cmp
sarb
add
insb
outsb
decl
loopne
hlt
jecxz
ret
push
pop
push
jmp
mov
adc
and
adc
mov
out
decl
js
jl
jo
sub
mov
sub
popa
sub
mov
lret
pop
into
and
and
push
icebp
lods
hlt
and
call
dec
adc
pop
dec
sbb
cmp
in
jle
mov
lahf
cmp
jae
push
insb
les
add
mov
or
xor
jmp
sub
xchg
jne
pop
and
or
fsubrs
xorb
and
popf
loop
je
xor
sbb
dec
push
and
cmp
loop
xchg
data16
out
sbb
push
rolb
fimuls
inc
enter
dec
mov
flds
pop
pop
negb
stos
test
arpl
hlt
js
sub
aad
pop
mov
adc
add
jne
test
enter
push
push
stc
int
scas
popa
xchg
sub
xchg
lea
add
add
cmpsl
xchg
mov
or
inc
push
hlt
int3
and
xchg
mov
adc
pop
sbb
lock
stos
lcall
sbb
aad
sbb
push
push
xchg
loope
das
out
les
lea
adc
out
lock
mov
mov
jae
jno
popf
push
in
inc
or
shll
pop
test
decb
imul
push
outsb
sti
stos
std
pushf
pop
data16
notb
mov
int3
mov
cmpsl
mov
mov
sub
int
sub
shlb
cmp
and
mov
jg
sbb
bound
repz
mov
and
push
repz
nop
push
mov
pop
inc
push
test
and
xchg
and
shrl
jmp
or
mov
lock
push
xlat
xor
loopne
sti
xchg
hlt
sbb
lods
imul
aaa
adc
fisubl
or
addr16
sbb
or
pushfw
sbb
mov
inc
repnz
bnd
sub
insb
pushf
hlt
push
cld
and
jge
mov
mov
gs
xchg
sub
push
clc
mov
pushf
xchg
stos
rdpmc
sub
jmp
sub
lds
cmpsl
add
fimuls
outsl
add
mov
add
or
pop
xchg
sub
sub
clc
sti
jmp
inc
aam
cmpsb
and
pop
dec
sbb
ss
pop
sarb
insb
shlb
sub
push
mov
mov
movsl
inc
push
test
push
andl
xchg
push
dec
xchg
cli
aas
out
fldenv
dec
sbb
pop
dec
push
stos
jae
mov
leave
adc
sbb
movsb
push
push
cld
pushf
pusha
dec
xchg
sub
aam
jns
mov
out
cmp
xchg
mov
jle
mov
int3
movsl
mov
pop
pushf
xlat
ds
vcvtps2pd
jno
inc
cmpsb
outsb
movl
nop
aas
inc
sub
lods
js
movsl
cs
sbb
in
pop
pop
mov
and
cs
ret
fidivrl
lcall
fmull
popa
lock
lods
push
aas
test
mov
dec
ficompl
adc
out
xchg
sub
push
ret
pop
jne
sbb
and
sub
jge
repnz
dec
xchg
call
nop
fldlg2
push
iret
sbb
fcmove
imul
nop
cli
clc
loopne
xor
nop
and
das
repnz
sub
or
sbb
jno
jecxz
dec
mov
stos
jecxz
aas
pushf
cwtl
fwait
mov
xor
sub
pop
stc
push
insl
fsub
in
aad
adc
mov
movsb
inc
xchg
popf
jns,pn
push
test
xor
clc
dec
push
loop
push
scas
rolb
cld
dec
in
jne
add
add
out
cmp
pop
mov
in
jbe
mov
xlat
mov
loopne
in
mov
mov
sub
dec
xchg
push
nop
sub
out
mov
cmc
fisubrl
loop
mov
pusha
fs
mov
or
loop
cmp
out
lret
pop
shrb
data16
jns
sub
cwtl
sub
in
adc
fisttpll
je
mov
xchg
jae
test
xor
mov
xor
sub
cld
inc
insl
ret
inc
roll
inc
jl
lcall
cmp
bound
jae
add
clc
push
pushf
xchg
lock
xor
push
test
push
push
inc
mov
jle
mov
add
mov
ja
mov
mov
mov
cmp
mov
sahf
dec
aaa
call
ja
inc
mov
cmc
xor
inc
and
pushf
push
fsub
xchg
mov
ljmp
das
add
fadd
pushf
xor
pop
dec
push
jnp
repz
inc
cmpsb
call
pop
or
dec
in
push
or
add
xchg
mov
xor
xor
ret
rclb
scas
jp
fdivrl
dec
leave
and
pop
imul
cmpsb
lods
xchg
cltd
xor
pop
push
dec
and
repz
scas
mov
inc
push
sbb
cmp
lock
stos
in
adc
hlt
jae
jl
mov
cmp
mov
into
adc
adc
cmp
jle
movsb
mov
sbb
mov
mov
shrb
and
mov
mov
dec
xor
add
incb
add
bound
lcall
or
jecxz
mov
cmpsb
out
mov
stos
mov
jmp
or
popf
xchg
out
roll
inc
mov
push
leave
ret
inc
or
lret
push
push
xlat
popa
shrb
outsb
xchg
cmp
cld
jecxz
cmpsb
iret
mov
dec
insl
mov
rclb
fs
lahf
std
xchg
add
subl
mov
lea
xor
pop
xchg
cltd
jne
leave
lds
repz
or
cwtl
cmpsl
push
xor
mov
ret
push
xorb
popf
cld
mov
daa
or
or
inc
call
fnsave
cli
test
jmp
les
rcr
add
je
push
ret
push
pop
mov
scas
jae
test
jne
lret
in
push
adc
std
jns
push
and
xor
fstl
add
outsb
fimull
adc
enter
decl
fmuls
pop
pop
pusha
inc
sub
ret
ret
sbb
pop
push
and
cs
fnsave
testl
addr16
sahf
push
test
std
rcrb
or
mov
lods
jecxz
adc
cmpsl
xchg
mov
inc
xor
lret
push
mov
add
and
mov
fdivr
inc
xor
mov
rcll
movsb
lret
loope
out
nop
mov
add
stc
insl
pop
sbbl
ja
xchg
daa
push
xchg
or
push
pushf
cmpsb
call
sbb
shl
mov
push
iret
push
pop
adc
movd
xlat
fs
scas
pop
cmc
mov
cwtl
mov
or
mov
ficomps
pop
cmpsb
or
mov
das
es
test
push
popf
fdivs
lret
cld
pop
add
inc
out
push
cltd
sbb
loop
hlt
cmp
bound
test
cmp
xchg
sbb
pop
dec
inc
push
dec
arpl
std
xor
popf
cmc
inc
call
mov
push
iret
sbb
dec
jbe
fwait
pop
jne
cmp
sti
imul
ss
jae
push
lods
push
pop
jmp
lods
pop
dec
pusha
dec
lahf
fucomi
sub
repz
mov
lcall
cs
rolb
pop
arpl
mov
jle
ret
dec
adc
loop
aaa
jbe
insl
pop
lret
movsb
jno
shld
fstpt
mov
arpl
clc
test
mov
in
imul
add
inc
fsubrl
pop
out
jmp
adc
lahf
dec
es
movsl
movsl
fcmovb
out
lds
xchg
push
mov
mov
and
rolb
lret
idivl
fwait
loopne
lods
movsb
lds
xor
push
sbb
loop
add
ljmp
outsl
pop
aaa
dec
fadds
test
shrl
mov
repnz
leave
repnz
or
inc
dec
mov
dec
daa
jo
adc
cmpsl
shl
or
or
bound
mov
jne
sub
xchg
stos
fimuls
cli
cmp
and
mov
jno
sti
dec
mov
jge
and
in
testb
xchg
in
mov
pop
repz
jbe
out
int
gs
aad
data16
mov
subl
xor
jb
xor
lods
or
pop
jae
cmp
xor
repz
xor
dec
jb
sbbb
cmp
jecxz
repnz
inc
arpl
lea
mov
add
push
jl
jno
repz
loopne
sbb
bound
cs
scas
or
dec
sbb
ficomps
imul
push
xchg
not
mov
xchg
popa
mov
jle
xor
fdivrs
fbstp
add
xor
cmp
stc
sbbl
add
xor
rcll
lods
jmp
mov
ds
sub
sub
push
dec
jg
idiv
add
pop
shll
mov
xchg
push
mov
mov
rorl
les
sti
mov
xchg
sub
orl
outsl
clc
and
fdivrs
xor
fsubrs
dec
mov
mov
sub
pop
nop
or
sub
cmp
sarl
push
je
lds
pusha
mov
jnp
or
in
xor
mov
in
xchg
ror
pop
leave
mov
aaa
sarb
seto
jne
repnz
mov
ljmp
std
enter
adc
dec
xchg
stos
xor
cmp
pop
push
into
lods
mulb
repnz
mov
ret
mov
andl
mov
insb
incl
cmc
mov
into
or
mov
rol
xchg
rcll
out
inc
test
inc
push
push
scas
sub
sub
jl
clc
ljmp
push
ror
lds
mov
in
inc
dec
inc
pop
xchg
xchg
push
push
addb
outsl
xchg
sub
in
jecxz
sub
jo
ror
cmpsl
push
or
jecxz
lea
cmp
lret
and
repz
outsl
inc
mov
jmp
cmp
push
cmp
mov
aaa
sarl
test
sti
jae
sbbb
loopne
and
pop
xchg
dec
cli
mov
inc
fldt
ret
cltd
xchg
cltd
pusha
in
pop
jb
int3
das
cmpsb
int3
fsubs
fsubp
push
sbb
jge
and
jns
or
add
pop
jnp
addr16
mov
movsb
rolb
outsb
mov
cmpsb
ret
jge
sbb
rcll
add
sub
xchg
arpl
pop
adc
lret
mov
lds
pop
loopne
mov
dec
pop
inc
mov
mov
mov
ss
loop
rcrl
add
pop
and
push
xchg
addb
pop
cltd
fists
lcall
jbe
test
pusha
insl
add
fldcw
sar
or
in
push
test
sub
out
out
and
popa
cmp
lods
xchg
sub
arpl
mov
push
xchg
jbe
jl
imul
mov
sbb
inc
es
mov
cmovle
xor
push
mov
jnp
mov
mov
mov
outsl
or
mov
add
xor
sub
aas
rcl
sub
mov
xchg
scas
outsl
arpl
or
seto
popa
mov
cmp
xchg
insb
sbb
call
sub
push
mov
adc
push
inc
mov
jne
lret
xrelease
jae
inc
int
shll
subl
and
xchg
mov
out
jmp
outsl
andl
cmpsl
and
pop
pop
popa
cmp
add
push
pop
sbb
lds
cmp
cld
add
jg
les
test
cltd
push
mov
jecxz
mov
aas
lcall
nop
jo
cli
dec
mov
fwait
test
sub
outsl
inc
sub
sub
adc
dec
popf
mulb
pop
dec
xlat
push
push
lock
sbb
aaa
test
into
push
fcomi
mov
shlb
sub
popf
loopne
jb
xor
push
and
sub
lds
fistpll
dec
pop
je
push
test
stos
fmull
dec
or
test
jmp
lcall
push
or
ljmp
mov
fsubrp
add
pop
popa
out
add
outsb
push
push
scas
and
adc
xor
mov
dec
dec
xchg
or
insb
push
fidivrs
dec
push
test
pop
mov
xchg
iret
xor
xorb
movsb
cmc
mov
dec
or
pop
or
cli
sti
jb
inc
cli
ret
inc
sbb
lds
incl
push
iret
lds
ljmp
ds
in
test
mov
mov
pop
in
fldenv
cld
pop
aad
shlb
jle
add
xor
xchg
jmp
arpl
jnp
mov
xchg
dec
out
and
xchg
mov
and
clc
xor
add
mov
push
jecxz
bound
jg
jnp
lock
jnp
stos
rolb
push
or
loope
sub
mov
cld
fstpl
or
xchg
sub
in
mov
sub
aas
in
loopne
mov
stc
or
xor
pop
inc
xor
xor
mov
jmp
mov
jno
pop
add
push
inc
inc
adc
push
clc
aam
inc
icebp
insl
ficoms
outsl
sub
scas
js
jno
out
add
pop
lods
fidivrl
lcall
stos
addr16
aam
frstor
cs
xor
push
cs
add
sti
add
stc
jmp
addr16
sti
and
jns
pop
icebp
or
sub
cli
inc
mov
inc
ja
inc
lret
fcmovb
lds
push
fadds
mov
ret
jb
enter
fidivrs
mov
add
movb
aas
fnstenv
push
dec
sbb
pop
or
add
cmp
sub
movsb
idivl
mov
lods
jnp
pop
inc
cmp
and
adcl
jmp
mov
ds
int3
and
jns
ds
push
inc
dec
lcall
cmp
filds
and
add
push
mov
push
movl
imulb
xor
jo
add
adc
ja
push
clc
loop
loope
punpckhdq
cmp
int
addl
into
daa
xchg
dec
jecxz
in
stos
xor
and
jns
in
mov
jbe
push
outsb
jo
mov
dec
std
push
dec
lods
jbe
mov
subb
out
or
jo
or
jo
mov
and
inc
mov
sbb
cmpsl
js
and
test
add
and
cmp
into
push
fnsave
dec
dec
out
iret
subl
insl
rorb
mov
add
pop
jns
mov
pop
mov
mov
mov
mov
or
inc
sbb
or
lahf
sbb
in
sbb
insb
int3
xchg
daa
lcall
or
clc
out
out
enter
jecxz
les
out
pop
inc
pusha
sti
int3
scas
out
inc
jecxz
ret
sbb
jbe
lahf
xor
mov
push
pop
jne
orl
sbb
decl
in
xor
mov
xorb
lret
adc
xor
push
stos
repnz
add
cmp
jne
sub
sti
xlat
sbb
jnp
push
adc
dec
leave
loopne
dec
cmp
mov
mov
pushf
sbb
mov
mov
jg
js
xchg
out
in
xchg
push
xchg
fsubrl
incl
fildl
xchg
icebp
inc
pop
repnz
lret
lods
mov
lret
ljmp
enter
cmp
fs
fstl
daa
jp
ficompl
out
jno
imul
daa
jp
incl
xor
cs
mov
pop
cli
inc
out
loopne
out
pop
sbb
jb
fldcw
mov
fldz
mov
push
sahf
lret
push
mov
mov
pop
ja
stc
out
cwtd
sub
push
mov
pop
popa
cmp
ds
xor
push
add
lods
cmp
mov
int
stos
and
and
cmp
push
xchg
inc
scas
or
xchg
ss
and
je
jno
dec
lock
pop
add
push
arpl
repz
bound
adcl
cmp
dec
mul
loop
and
movsl
es
mov
es
mov
or
outsl
mov
sbb
inc
and
adc
xchg
andl
push
lds
cmp
sbb
xor
sahf
mov
stc
ficoml
fmull
mov
dec
pop
mov
fnsave
pop
sub
nop
xchg
pop
ds
imul
pop
hlt
repz
mov
jbe
jnp
clc
in
ljmp
add
rorl
idiv
lods
adc
xchg
dec
flds
cli
mov
rcrb
lods
cld
aaa
in
pop
pushl
mov
mov
mov
cld
ret
sbb
mov
pop
adc
xchg
in
jmp
sbb
pop
sub
mov
inc
mov
hlt
dec
adc
fsubl
sub
shrl
clc
xor
xchg
xor
repz
jns
leave
fisttpll
imul
inc
adc
xor
cmp
popa
in
jnp
lret
mov
sub
fisubs
pop
pop
loopne
outsb
dec
mov
jmp
popa
loopne
daa
pop
sbb
test
inc
lea
push
jne
adc
test
jmp
cmp
and
inc
ror
das
adc
dec
aas
sbb
mov
fstpl
shrb
lret
subl
aad
xchg
adc
fdivl
es
aam
xchg
jp
test
shrl
in
aaa
gs
sbb
cltd
sub
push
dec
xor
sbb
mov
push
jb
and
mov
xor
in
out
mov
iret
and
int
sbb
jns
gs
bound
icebp
jmp
pop
dec
cwtl
mov
push
pop
lods
cmpsl
ss
mov
push
adc
xor
outsl
and
pop
mov
adc
xor
add
cwtl
outsl
xor
push
dec
push
inc
divb
shrb
sbb
cmp
pop
mov
rcll
fwait
and
fstl
cltd
jl
add
sub
iret
loopne
cmc
insl
cmc
jns
scas
data16
test
pop
ficoms
jp
cmpsl
dec
inc
mov
loopne
scas
mov
push
mov
jecxz
mov
fistpl
xor
adcl
mov
ret
dec
pushf
mov
movzbl
push
ror
dec
in
outsb
xchg
pop
add
add
sub
imul
push
cmp
pop
jno
sbb
pusha
hlt
int3
sub
xchg
mov
jmp
rcrb
cmp
pop
jp
add
leave
sbb
std
ss
lret
les
push
jecxz
enter
or
inc
xorl
dec
scas
aam
cwtl
mov
mov
fmuls
jle
scas
stc
fxch
dec
decl
bound
jmp
xor
movsl
repz
in
cltd
in
mov
dec
fidivs
xlat
data16
fwait
dec
mov
xor
testl
lahf
ret
aaa
mov
jns
rorb
jno
add
mov
mov
insb
inc
lahf
mov
ror
fdivrl
dec
test
xchg
xchg
bound
movsl
mov
jg
add
ljmp
cmp
sbb
pop
inc
mov
cli
mov
lahf
xchg
arpl
mov
cmp
stos
mov
fnsave
ljmp
mov
insl
mov
pop
cmp
jne
mov
loope
push
sbb
out
nop
stc
mov
cmpsb
pop
imul
sub
int
xchg
sub
cmp
or
in
rcl
fdivr
add
mov
or
pop
hlt
gs
jae
filds
inc
test
add
jle
push
adc
jno
jmp
add
xor
add
bndstx
push
xor
data16
inc
lret
in
or
repz
pushf
outsl
jns
xor
mov
outsb
inc
test
push
lret
outsb
hlt
scas
cltd
xchg
rolb
mov
mov
and
inc
jle
mov
mov
jno
popf
into
pop
loop
je
pop
adc
mov
arpl
stc
mov
sarb
jnp
faddp
out
dec
adc
push
ja
lods
scas
push
movsl
andb
negl
push
add
frstor
ljmp
fs
ljmp
dec
enter
bound
bound
sbb
jmp
repnz
cmp
xor
mov
lods
mov
xor
icebp
jmp
pop
stc
cli
iret
insb
shrb
sub
and
repnz
pop
daa
hlt
popa
lret
mov
in
movsb
mov
jns
ljmp
fwait
inc
in
add
pop
out
repz
jo
cmpsl
mov
in
or
pushf
or
in
fbstp
out
jle
push
mov
rorl
xchg
fwait
xor
cmpsl
push
add
nop
sarb
mov
cmpsl
into
call
and
xchg
in
mov
sub
push
and
out
cmpsb
imul
sub
loop
xlat
mov
out
jg
dec
mov
dec
ds
shlb
in
push
inc
addr16
push
sar
clc
stos
sbb
add
cmp
fists
add
outsb
data16
cmpsb
xchg
jno
mov
fs
pop
ror
imul
xor
ja
mov
mov
dec
sarb
fs
hlt
sbb
mov
jmp
and
mov
jp
sub
mov
mov
sbb
pop
fldenv
mov
adc
and
xchg
sbb
aaa
push
jns
jecxz
push
or
adc
pop
jle
dec
rcrb
stos
jl
dec
addl
lods
sub
inc
iret
in
imul
push
mov
fdivs
sbb
xchg
testb
int3
mov
roll
aas
pop
cli
mov
scas
rcr
push
popf
inc
lret
aam
mov
pop
mov
xor
xchg
enter
hlt
adc
and
pop
repnz
int3
outsl
xor
push
sub
imul
adc
sbb
mov
push
push
add
adc
fldcw
mov
mov
icebp
rcr
imul
fcmovnb
add
mov
cmp
pop
divb
push
sbb
nop
fldln2
sub
mov
stc
jecxz
loope
sub
sub
loop
mov
jbe
std
and
push
inc
mov
cld
outsb
cmp
mov
jbe
and
push
xchg
jecxz
add
adc
jle
sbb
mov
pop
push
cltd
mov
sarb
in
hlt
cs
loope
xchg
inc
stos
ljmp
les
sub
push
push
data16
out
xchg
mov
mov
cmp
ret
movsb
jnp
xchg
adc
enter
xor
jb
enter
push
out
cmp
stc
mov
int3
add
icebp
inc
jo
xor
jo
mov
lock
mov
xchg
pusha
adc
xor
push
outsb
mov
loopne
cld
push
sub
xorb
sbb
aad
and
stc
std
fs
inc
add
xor
inc
ja
sub
jle
fildll
jge
and
mov
mov
mov
add
in
mov
mov
jp
mov
rclb
sbb
xchg
shll
int3
imul
mov
addr16
inc
jecxz
jecxz
popf
xchg
cmp
mov
aaa
xchg
xchg
dec
mov
inc
jnp
mov
jle
aad
ret
mov
fcoml
cmp
xchg
dec
ret
cltd
jge
ds
data16
faddl
jmp
cmpsb
je
data16
sbb
jb
mov
xor
or
lock
push
or
inc
inc
test
daa
int
and
pop
rorb
mov
and
cmp
lahf
ljmp
push
push
adc
aam
in
xchg
lcall
sub
std
cmp
push
sub
ds
cmp
ja
cs
xchg
dec
mov
dec
mov
pop
xchg
sbb
xor
movsb
lea
pop
cs
push
mov
sbb
lods
popa
outsl
js
pusha
loope
jge
mov
imul
xchg
sahf
int
data16
jae
fbstp
mov
cmp
adcl
fnstcw
mov
rcrb
sahf
arpl
test
stc
push
sbb
jp
jb
cld
int3
in
std
mov
insl
jbe
mov
adc
addb
push
xchg
push
ss
enter
mov
mov
sahf
lcall
lods
mov
ror
mov
iret
inc
into
jge
jp
aas
jle
les
enter
sub
mov
jnp
xchg
sub
jns
lods
je
cmpsl
rorl
pop
lahf
aad
sti
lahf
mov
jp
mov
mov
popf
je
shrl
mov
mov
pop
nop
add
insb
lds
mov
aaa
movsl
ret
sbb
nop
leave
dec
imul
mov
loopne
cmp
out
cmp
mov
xor
loop
mov
insb
jge,pn
mov
int
mov
cmpsl
bound
movsb
add
sub
or
jne
mov
mov
iret
aas
mov
mov
xor
pop
inc
lahf
stc
jecxz
stos
jo
outsb
sub
and
scas
gs
inc
or
inc
aad
push
jg
pop
movsl
cltd
dec
dec
inc
sub
js
int3
mov
and
pushf
adc
lretw
imul
cmp
mov
stos
ja
and
or
adc
pop
jne
or
imul
sub
jge
mov
mov
int
mull
std
icebp
mov
stos
iret
or
addb
outsl
xor
loop
push
addl
mov
dec
rol
fwait
ret
fldl
repnz
in
jle
add
jmp
sti
cld
ljmp
pop
mov
mov
adc
pop
clc
mov
gs
inc
xor
out
fiadds
lds
push
inc
mov
movsl
add
pop
ljmp
shl
mov
loopne
push
decl
jp
inc
mov
or
sub
jmp
and
mov
adc
lods
fcomip
push
cmp
jns
leave
sub
insl
xor
cs
popf
push
sbb
cmp
and
test
inc
in
stos
aad
jb
xor
iret
lcall
out
xor
lods
cltd
and
jmp
fbstp
dec
and
lea
mov
mov
cmp
jnp
fcmovu
jae
pop
cmpsl
mov
jg
int3
pop
fistpl
out
jecxz
sbb
dec
into
lea
dec
dec
jmp
xor
mov
lahf
gs
and
daa
setnp
out
cli
mov
sbb
mov
imul
jnp
or
mov
xchg
mov
decl
mov
dec
inc
loopne
jae
mov
dec
push
mov
out
and
into
inc
push
jle
pop
sarl
xchg
test
adc
sub
mov
xor
insl
fwait
sti
jns
xor
in
repnz
lock
cmpsb
jnp
int3
daa
lods
lods
lahf
push
xchg
dec
push
adc
xchg
movsl
pop
xor
jno
cmpsb
daa
call
out
cmp
mov
dec
std
lea
sub
push
movl
pop
pop
push
cmc
xchg
push
jecxz
daa
push
push
outsb
jo
addr16
adc
fbstp
lret
mov
jae
cmpsb
mov
ja
test
mov
push
test
dec
gs
sbb
push
adc
jae
pop
jmp
movsl
in
mov
push
inc
ja
sti
divl
xchg
sub
sti
out
lods
leave
dec
pop
xchg
jb
loop
loopne
cmp
nop
adc
ja
jae
cltd
pop
repz
and
sbb
jmp
inc
es
cmp
mov
xor
xlat
in
mov
ja
in
in
adc
dec
push
mov
repnz
scas
pop
jbe
and
out
mov
mov
popf
xchg
push
lods
cltd
and
lcall
outsb
fwait
daa
mov
inc
in
loopne
pop
rolb
paddb
inc
lods
cmp
xchg
in
bound
scas
jae
cmpsb
and
in
dec
xorb
addr16
imul
outsb
push
sbb
add
jo
jle
outsb
stos
std
add
js
imul
movsl
popa
push
fistpl
mov
mov
add
xchg
add
loope
shll
pop
xchg
mov
stos
sub
jge
cmpsb
loopne
in
das
xchg
sahf
out
sub
sahf
out
push
movsl
movsl
inc
or
add
pop
or
xchg
sub
add
pop
mov
xor
push
add
push
dec
aaa
clc
out
lahf
and
xlat
into
jmp
cmp
shlb
mov
xchg
xchg
popf
out
sub
aam
mov
or
sbb
xchg
pop
sti
inc
mov
scas
ds
pushf
mov
pop
mov
stc
in
aam
push
out
lcall
mov
inc
out
cmp
ds
jns
jle
xchg
mov
pushf
mov
and
ljmp
aam
lcall
push
adc
lcall
fdiv
mov
loop
ffree
test
add
popa
loope
add
add
jle
push
sub
adcb
pop
fs
push
and
dec
cmp
outsb
ljmp
cli
scas
mov
cmp
movsb
dec
or
fidivs
lret
xor
cs
push
mov
xor
sbb
lcall
cmc
xchg
les
pop
pop
fisubs
in
roll
je
decb
mul
jae
movsb
sub
mov
sbb
mov
xor
int
js
outsl
addl
push
mov
sub
and
mov
mov
sub
adc
mov
mov
jmp
test
push
push
add
inc
push
iret
insb
and
sub
stos
mov
push
pop
scas
nop
fsubrs
and
cmp
lahf
pop
add
movl
inc
xchg
add
icebp
scas
lock
cmp
pop
push
cltd
add
mov
mov
and
aad
push
fimull
repnz
shl
dec
add
sub
stc
std
cltd
je
sbb
inc
lcall
das
mov
mov
repnz
imul
rcr
fidivrs
xchg
pop
mov
nop
addb
jp
sub
xchg
pop
aaa
vmwrite
ja
popa
pushf
jbe
mov
movsl
and
mov
test
push
adc
adc
or
stc
mov
data16
dec
and
or
add
xchg
test
adc
xor
jbe
outsb
adc
jmp
and
xchg
jb
pop
lods
mov
xchg
sti
mov
movsl
hlt
js
pushf
push
adcb
sbb
idivl
push
test
xchg
cmpsb
scas
nop
cs
adc
andb
dec
arpl
dec
movsb
pop
pop
mov
ret
cmp
jbe
or
xchg
jnp
xor
outsl
sub
mov
shlb
mov
mov
mov
inc
dec
jmp
or
and
les
add
pusha
sbb
incl
mov
mov
jle
mov
push
mov
lock
sub
outsl
call
fstps
and
pop
pushf
mov
mov
push
sub
je
mov
jg,pt
into
std
inc
hlt
mov
adc
repz
sti
pop
addr16
mov
rcll
adc
out
rcrl
fnstcw
and
push
ret
test
enter
adc
in
imul
test
dec
call
sbb
clc
iret
push
or
sarl
movhps
push
mov
sbb
rorb
test
pop
inc
lcall
or
sub
stos
jp
int
mov
push
xchg
xlat
cmp
push
mov
addr16
out
cmp
cltd
nop
sub
aad
add
and
xor
movsl
jae
sub
test
stos
mov
sub
lds
clc
insl
jnp
dec
cmp
and
lret
fists
dec
int
jl
fs
xchg
push
and
sbb
inc
jp
inc
out
test
pop
movb
xchg
pop
psubd
adc
pop
mov
cmpsb
adc
imul
lcall
clc
mov
add
inc
outsb
pop
sar
jns
pusha
lods
pop
push
bound
pop
loop
scas
push
cs
jge
pop
mov
cmp
loope
neg
sti
call
popf
dec
dec
push
in
mov
xlat
sbb
imul
jmp
jmp
into
jns
ljmp
arpl
lret
aad
mov
lods
test
aas
aam
loop
cli
lods
pop
xor
into
jo
jmp
add
out
jns
add
inc
repnz
lcall
test
mov
mov
lret
mov
std
cmp
sub
or
xchg
inc
scas
fs
fcoml
or
outsb
dec
repnz
test
repnz
fadd
add
pop
mov
fcmove
mov
xchg
pop
out
and
into
push
mov
mov
push
out
pop
mov
push
push
pop
fwait
jmp
jbe
scas
jne
jns
push
adc
imul
mov
xchg
out
pop
inc
not
out
fwait
roll
or
lods
jg
xchg
fsts
out
push
int3
push
or
adc
xlat
and
lcall
inc
out
xchg
dec
lret
je
xlat
imul
add
lret
pop
out
mov
sbb
mov
sub
cmp
jne
test
dec
arpl
in
inc
cmp
xlat
in
mov
faddl
ljmp
add
or
mov
movsl
in
jae
mov
aam
fistpl
lahf
in
sub
mov
cmp
mov
fistpll
data16
push
aad
mov
lea
cltd
cmp
inc
xchg
cmc
sbb
dec
aad
aam
mov
scas
or
call
test
dec
jno
mov
push
xchg
mov
xor
imul
xchg
sub
push
shr
cmp
pushf
pop
cmp
cmc
push
jnp
xchg
fisubrl
arpl
xchg
je
mov
jmp
adc
cmp
xlat
outsb
sbb
stc
lds
popf
nop
imul
jae
jae
mov
in
and
xchg
jg
mov
lods
fisubrs
jl
imul
ret
test
sub
inc
mov
cmpsb
or
sbb
mov
dec
mov
dec
adc
cmp
imul
jb
and
scas
and
mov
or
cmp
int3
mov
ss
loope
mov
dec
mov
mov
xchg
pop
cmp
adc
or
adc
lret
mov
mov
or
xchg
stos
adc
in
cmp
pop
cmp
loopne
fucomip
loop
dec
out
sbb
mov
aad
jne
and
pop
scas
mov
repz
xchg
shll
sub
inc
sbb
mov
and
roll
xor
int
cmc
repz
stos
mov
pop
lret
jae
jecxz
sub
movsb
push
xchg
cmpsb
jo
out
incl
test
xorb
mov
in
push
test
es
mov
sahf
cld
cmc
add
inc
adc
add
bound
dec
mov
ss
les
imul
mov
sarb
popa
in
test
loope
stos
aad
jns
mov
jecxz
pop
pop
into
aam
fwait
shlb
insl
add
inc
arpl
sub
faddp
movsl
xor
pushf
into
enter
cld
pop
sbb
ret
push
and
pop
leave
jp
clc
push
cld
outsb
ret
dec
movsb
loop
sbb
inc
xchg
jge
rclb
xchg
movsl
pop
mov
les
cmp
es
neg
xor
mov
scas
sub
inc
mov
and
stos
addb
daa
dec
xor
mov
mov
pushl
out
adc
jl,pt
mov
inc
jg
mov
clc
ja
push
aad
test
adc
mov
mov
pushf
jge
and
arpl
sub
xchg
push
pop
jns,pn
mov
xchg
jp
push
or
push
jns
cmc
cmp
xchg
in
mov
pushf
cld
inc
fwait
push
jg
add
inc
or
in
ret
insb
jnp
lret
test
lret
clc
sti
mov
imulb
cmp
jp
out
push
ss
sbb
shlb
ljmp
inc
xor
call
xchg
jp
imull
inc
test
inc
lods
scas
pop
insl
fcompl
lea
stos
xlat
mov
push
imul
je
ja
pop
in
sub
pop
fwait
aad
into
cmpsl
jae
sbb
gs
leave
pop
xor
cmp
sub
imul
dec
cmp
inc
add
les
or
push
and
ljmp
inc
mov
pop
ret
xchg
cs
mov
mov
cwtl
cltd
xchg
dec
nop
dec
movsb
pop
jo
dec
cltd
xchg
enter
add
iret
adc
mov
sahf
xor
add
in
xchg
scas
xchg
lock
xchg
cmp
sub
and
iret
adc
mov
fistl
imul
xchg
ret
mov
int
pop
iret
sub
negl
cltd
scas
add
jbe
and
dec
je
sub
mov
dec
les
mov
andb
outsb
ja
add
cmpb
rorb
int3
aas
mov
dec
shl
aaa
and
pop
mov
sub
mov
inc
adc
sub
mov
add
xchg
pop
mov
xor
add
lods
push
imul
xor
rcrb
dec
orl
mov
sbb
mov
movsb
mov
lods
int
loopne
out
cwtl
mov
cmp
bnd
pop
imul
loopne
int3
xor
dec
mov
sub
fs
adc
mov
xor
daa
push
add
std
test
into
iret
mov
ljmp
push
mov
dec
repz
flds
shrl
and
in
xor
es
loopne
nop
out
orb
push
mov
and
xchg
sti
cmpsl
ljmp
jne
flds
lret
mov
test
incb
ss
adc
sbb
jg
xchg
fld
pop
sub
mov
mov
push
dec
push
pushl
pop
cltd
pushf
arpl
push
lods
idiv
imul
fsubr
xor
std
cmc
rolb
add
les
and
inc
gs
nop
dec
test
push
dec
inc
push
ds
cmp
insb
ror
add
shlb
pop
sbb
ljmp
cmc
cwtl
inc
enter
push
mov
pop
cmp
add
pusha
jl
ret
xor
cmp
rcll
cli
pusha
in
out
jl
xchg
cmpsb
cmp
ret
lods
jp
fadd
loop
inc
sub
inc
in
ja
mov
fildll
mov
jo
sub
leave
or
movb
jo
mov
push
sub
or
popf
xchg
iret
dec
movsl
sarb
fisubl
xchg
sbb
ljmp
stos
ret
mov
insb
and
push
jg
in
shrl
les
xor
sbb
push
daa
add
dec
shl
mov
and
pop
mov
mov
push
aaa
lods
lds
cmpsb
adc
mov
rol
mov
std
andb
cmp
clc
clc
jno
imul
fbld
mov
out
outsb
jl
cli
lahf
fldenv
sarl
xchg
mov
fdivr
push
jge
lahf
add
and
scas
roll
inc
fbstp
repz
adc
dec
xchg
jnp
mov
xor
dec
sbb
cmpsb
aaa
jmp
pop
decb
adcl
cmpsl
test
lahf
les
sub
shr
adc
sbb
lcall
jne
dec
sbb
ds
idivl
or
rcrb
repz
das
or
push
sbb
pusha
xchg
out
std
mov
dec
aam
sarl
enter
sbb
ret
xor
out
cld
adc
lahf
sbb
and
inc
mov
aam
out
mov
mov
popa
ja
xor
pop
xchg
pop
xor
mov
and
popa
loop
mov
out
insl
sbb
outsl
and
dec
sub
pop
mov
cmc
aam
ja
aam
sbb
xchg
mov
inc
adc
inc
sub
mov
add
jecxz
or
push
push
pop
jl
out
mov
cwtl
pop
sub
cmpsl
sub
or
js
jl
mov
in
shlb
sti
pop
ss
cmp
pop
push
ja
mov
push
add
or
jns
enter
out
jp
inc
mov
xor
loope
imul
scas
mov
into
out
mov
push
iret
lret
cli
in
sbb
lret
or
enter
cmpsl
scas
inc
loop
int3
ret
movsl
mov
mov
or
xor
and
fstps
enter
or
int
sbb
xor
aas
push
sub
push
out
dec
adc
es
pop
push
jmp
push
push
mov
test
stos
mov
xor
das
lret
es
call
cmpsl
fs
int3
in
imul
testb
push
xchg
cltd
mov
test
sbb
ror
or
mov
push
push
mov
iret
ja
subl
bound
xchg
out
popf
fsubs
fsubrl
into
sbb
xchg
mov
jg
cmp
mov
pop
dec
lock
inc
arpl
jge
daa
sub
dec
loop
idivl
adc
mov
stos
pusha
mov
scas
and
inc
mov
xor
inc
add
mov
mov
cmpsb
inc
ljmp
ja
sub
jae
fmull
xor
clc
mov
pop
cs
adc
pop
in
mov
or
xor
jmp
xchg
push
and
in
mov
les
adc
mov
cltd
sbb
cmp
or
std
ds
mov
daa
insb
cmpsl
in
aaa
xchg
xor
inc
out
sub
data16
repz
mov
lret
mov
subl
jae
into
rclb
mov
pop
int3
subl
dec
xlat
jbe
enter
daa
sbb
loopne
adc
nop
mov
fimuls
pop
fldcw
mov
xlat
fwait
or
push
hlt
arpl
out
out
outsb
hlt
movsl
call
sub
pop
jl
xor
inc
out
ja
dec
push
gs
sub
jne
and
cmp
sahf
notl
adc
rolb
xchg
sti
adc
mov
das
jne
push
call
nop
iret
insl
das
loop
jg
jo
stos
pop
adc
fstpt
add
sub
cmc
mov
lds
or
int3
jle
xchg
lcall
clc
jp
inc
test
jae
inc
or
fmull
push
ficomps
push
and
pushf
jno
jb
pop
mov
cmc
push
mov
pop
mov
mov
sub
int
out
lret
mov
or
jmp
xchg
inc
dec
add
add
test
mov
std
aam
push
adc
jno
dec
fisubs
cmp
je
test
inc
cli
add
movsb
or
icebp
rcll
shll
jb
dec
arpl
push
cltd
xchg
int
pop
mov
inc
jecxz
adc
cmp
sti
movsl
push
cmp
ds
adc
scas
icebp
in
movsb
sbb
jnp
aaa
data16
in
jns
in
xor
mov
xor
test
out
ror
out
adc
cld
or
scas
cmp
clc
mov
les
jecxz
inc
es
outsb
test
ds
pop
addb
mov
xlat
pop
jecxz
in
pop
cmp
inc
dec
xor
push
cld
inc
hlt
rep
test
dec
push
mov
push
sarb
sarb
out
jge
push
stc
inc
cmpl
aas
cmp
sbb
mov
push
fisubrs
jl
jl
jg
and
and
cli
aaa
cmp
mov
inc
test
push
rcrl
aam
shl
andl
mull
jecxz
push
mov
push
insl
mov
adc
xor
adc
stc
ret
cmpsl
sarl
cmp
xor
jbe
push
cmpb
fnsave
ja
mov
jmp
push
xor
insb
sbb
pop
andl
jbe
pusha
outsl
sti
mov
inc
dec
test
dec
ja
xchg
int3
jmp
pop
bound
insb
and
adc
jecxz
pop
movsb
cld
in
push
jnp
inc
sub
test
int
xor
pop
in
sti
cmc
pop
dec
or
sub
popa
and
push
cli
imul
hlt
adc
mov
sub
push
mov
nop
mov
xor
stos
ret
imul
mov
into
jnp
insb
push
dec
lcall
in
add
xchg
or
and
xchg
xor
push
lods
pop
insb
xor
scas
inc
and
cs
mov
dec
int3
xchg
lret
cmc
fadds
fmuls
mov
jmp
imul
lret
add
push
in
cmovs
arpl
xor
mov
cmpsl
xchg
mov
inc
jo
stos
popf
es
push
push
mov
fs
sub
inc
xor
dec
cmp
inc
inc
pop
ret
lea
cmp
imul
rorl
pop
cmp
sub
stos
pop
sbb
scas
cmp
je
cli
cld
or
push
push
sub
mov
jge
adcb
hlt
push
lret
into
in
mulb
push
ds
sahf
std
push
mov
ljmp
ret
mov
lcall
fsubrp
inc
adc
lea
clc
fimuls
std
lods
scas
xchg
and
adcl
dec
sub
ja
lret
jmp
repz
or
push
out
lock
pop
add
inc
add
dec
push
add
xchg
pop
mov
mov
in
repz
xor
sbb
jecxz
clc
lret
push
pushf
jb
cmpb
dec
xor
xchg
dec
test
shl
push
divps
std
fstpt
pop
pusha
insb
or
jl
jnp
or
shl
inc
sub
int3
addr16
pop
lea
in
xor
push
sub
xchg
mov
lods
or
mov
add
xchg
outsl
int3
rclb
das
push
scas
enter
pushf
mov
loope
cmp
dec
add
inc
inc
jg
and
xchg
and
sbb
roll
cmpl
jmp
out
in
enter
rcr
xor
jne
inc
mov
daa
mov
dec
aad
adc
jecxz
cwtl
add
lahf
aad
mov
cld
ret
mov
push
shrl
mov
scas
mov
shrb
xchg
sub
xor
adc
pause
mov
notb
sti
ret
pusha
mov
insb
or
stc
cwtl
mov
in
push
xchg
aad
daa
rcll
xchg
pop
push
push
int3
loopne
femms
addb
sbb
add
cmp
mov
stc
and
fimull
aas
outsl
loop
mov
test
push
or
imul
pop
and
in
ljmp
scas
ja
pop
test
jns
fstpt
loopne
loope
xor
mov
enter
subb
fcomps
lcall
cmp
jno
cmc
lret
test
cld
pop
or
cmp
imul
gs
lcall
add
push
jle
jle
xchg
or
sti
mov
cmp
jle
mov
xchg
dec
dec
stos
lods
adc
jge
stos
imul
xchg
fistpll
adc
pop
cmc
lock
pop
and
ret
sbb
inc
stc
add
dec
pop
push
dec
add
rorb
out
ret
jns
cltd
sub
dec
mov
mov
pop
aaa
push
or
fiadds
cmc
push
dec
in
fcmovnu
xchg
jne
jae
subb
test
sti
mov
lods
loop
pushf
stos
inc
nop
cmp
jg
xchg
sbb
fcmovbe
mov
cmp
mov
mov
pop
inc
dec
fstpt
and
jne
cmp
jne
fwait
or
fwait
ds
scas
orb
sub
mov
jecxz
jb
out
and
cmp
pop
and
inc
repz
adc
cmp
scas
icebp
fisttpll
add
adc
adcl
in
arpl
jle
mov
add
out
test
fidivl
arpl
mov
out
ds
iret
jge
jmp
jge
dec
or
ss
repz
jge
out
repz
add
or
addl
inc
pop
repz
xor
cs
or
lods
cmp
sti
and
xchg
stc
fisubl
mov
adc
sti
ficomps
inc
and
into
stos
iret
xor
loope
jno
scas
mov
fcomps
mov
mov
add
jp
imul
iret
cmp
in
mov
lret
mov
xor
aaa
pop
push
dec
or
das
or
sub
jae
xor
push
repz
sarl
or
stc
pop
inc
out
xor
add
out
dec
add
dec
iret
sbb
int3
sbb
pop
out
loop
lahf
les
pop
jne
clc
push
dec
push
sbb
movsb
jmp
cmp
lds
mov
mov
jecxz
pop
scas
gs
adc
shlb
push
inc
les
pop
jae
or
out
xor
or
pop
xchg
cmp
adc
or
add
push
add
popa
cmpb
test
hlt
je
jle
push
lods
sbb
xchg
ret
insb
mov
or
mov
loopne
push
fidivrs
jmp
cmp
push
inc
pop
icebp
ja
andb
jmp
push
mov
adc
inc
test
push
sahf
into
sub
lods
jge
int
imul
stc
sbb
sub
adc
popa
idivl
imul
adc
cltd
inc
pop
addr16
jnp
push
sub
and
aas
mov
cmpsl
sub
xor
pusha
mov
cmp
jge
lods
sahf
jle
mov
movl
test
sbb
pop
and
aad
aam
dec
cmp
leave
sbb
scas
adc
inc
xchg
mov
dec
jge
xorl
in
cmp
sbb
push
insb
xor
dec
and
xchg
or
mov
repnz
mov
sarl
mov
or
rcll
or
les
add
into
jp
mov
enter
lret
dec
xchg
inc
fwait
mov
jmp
sbb
xor
ja
jne
dec
push
ja
loopne
push
dec
or
icebp
mov
loop
mov
insl
rorb
sub
int3
dec
mov
adc
push
cmpsl
rclb
mov
jmp
inc
jmp
outsb
cmp
push
add
mov
lea
xchg
repnz
add
and
inc
sahf
pop
or
push
mov
out
notl
in
cmc
pop
sarb
es
std
jp
ljmp
sbb
jo
lret
negb
dec
xchg
nop
sbb
iret
lock
sub
bound
not
outsl
mov
add
or
test
mov
imul
daa
ds
add
xor
inc
push
ds
mov
insb
mov
pop
cwtl
add
lock
push
fucomi
xor
mov
mov
lods
jb
out
hlt
cmpsl
jo
mov
fmuls
or
movsl
push
or
out
mov
loop
hlt
dec
data16
andb
xchg
popa
xchg
repz
out
out
or
push
dec
fmuls
dec
sub
sub
out
or
push
ds
add
xor
xor
mov
pop
or
ds
cli
in
cltd
add
ja
test
test
pushf
xor
and
adc
xchg
clc
add
lcall
jp
ja
enter
mov
in
xchg
bound
jnp
xchg
pop
movsb
shll
or
and
nop
push
pop
adc
sub
mov
inc
xchg
jmp
in
xlat
dec
loope
shlb
push
es
pusha
imul
mov
dec
int3
test
mov
sbb
ljmp
xchg
or
cmp
jecxz
mov
leave
mov
cwtl
je
pop
mov
scas
aam
push
cmp
push
jbe
sub
dec
mov
dec
dec
aam
mov
and
cmp
outsb
cmp
lods
push
subl
xor
test
rcrl
push
sahf
lret
out
pop
push
xor
cltd
jge
mov
jae
mov
hlt
pop
push
fst
icebp
sub
into
jne
rol
rolb
jg
repz
xchg
int3
xadd
jno
and
popa
in
lcall
cmp
scas
and
adc
add
inc
in
cs
fdivl
inc
in
pop
mov
add
popa
dec
push
cwtl
lret
imul
jbe
movl
enter
rolb
lods
push
out
adc
les
jle
mov
cli
mov
in
inc
add
push
jge
cmpsb
popa
xor
inc
idivl
cmpsl
shrl
add
cmc
pop
cwtl
scas
inc
push
fisttpl
sahf
dec
inc
enter
sub
aas
in
mov
mov
pop
out
xchg
jle
imul
push
into
inc
jae
std
arpl
or
f2xm1
mov
pop
xchg
xchg
in
enter
lock
pop
mov
or
sub
xchg
and
sahf
adc
gs
pop
jle
outsb
mov
les
lods
sbb
push
cmp
orb
push
stc
mov
xor
pop
dec
dec
dec
sub
mov
fcoms
repnz
jmp
or
sti
push
xor
push
cli
push
xchg
add
pop
or
xchg
cwtl
iret
sub
es
scas
out
mov
inc
jne
pop
push
cmpsb
popa
add
push
push
xchg
adc
pop
imul
mov
int3
jbe
dec
pop
mov
jle
and
pop
lea
add
fs
adc
fisttpll
cmp
daa
mov
fs
in
mov
dec
cmp
ss
arpl
inc
testl
and
pushf
leave
subl
mov
arpl
sti
jb
jne
jp
jnp
mov
outsb
addl
mov
lfs
addr16
cmp
into
movsb
mov
add
sbb
ret
movsl
jle
loop
aas
in
sub
enter
jmp
loop
out
xchg
out
cmp
sbb
es
add
and
pop
fistpl
xor
push
scas
outsb
stos
and
push
in
repz
aas
xlat
lcall
push
cmpsb
inc
aam
mov
jle
jge
repnz
aad
sbb
loop
ss
push
mov
xchg
das
push
xadd
ljmp
xor
sbb
ds
out
fwait
stos
dec
cwtl
sub
sub
jle
sub
jge
pop
adc
push
jp
cmc
fsubs
mov
mov
clc
cmp
or
int
std
jmp
jecxz
pop
push
mov
xchg
shlb
inc
fcomp
int3
mov
mov
mov
xchg
push
dec
sahf
std
mov
repnz
loop
sub
loop
je
jno
test
lret
adc
jl
pop
repnz
or
sbb
xor
xor
ret
shll
sahf
mov
pop
cmp
jo
mov
sub
xchg
jae
insb
loop
inc
outsl
sub
movb
cmp
jmp
lret
les
xor
pop
dec
mov
and
inc
dec
push
bound
icebp
stos
inc
mov
mov
lods
cmp
mov
xor
xlat
call
cmp
aad
rorl
pop
lret
cmp
mov
pop
into
mov
add
es
or
inc
clc
cmp
jmp
sub
call
sti
push
ret
mov
push
rcll
pop
in
ljmp
cld
and
std
mov
out
mov
jbe
add
rorl
pusha
cld
lods
and
lods
iret
or
sub
lods
mov
adc
leave
andb
fstpt
and
inc
icebp
xchg
lock
enter
mov
xor
jo
pop
jae
es
lock
mov
int3
sbb
addr16
orb
add
rcll
in
mov
inc
and
jae
ret
jae
inc
fiaddl
insl
push
fiaddl
push
dec
pop
mov
arpl
iret
push
movsl
xchg
inc
lock
jl
xor
mov
lret
ret
das
mov
push
cmp
lods
sub
movsb
pop
lock
mov
jb
leave
mov
iret
sub
sbb
or
mov
cmp
out
sahf
dec
mov
inc
mov
or
adc
mov
in
test
cs
test
jbe
or
je
mov
out
popf
and
pushf
add
dec
insb
mov
inc
ror
cwtl
dec
pop
sbb
repz
push
outsb
cmpsl
stc
sbb
xlat
push
lcall
out
lcall
aas
loope
inc
pushf
aam
cmpsl
xchg
pop
fisubrl
loope
sbb
ret
mov
dec
dec
jb
sub
dec
cltd
subl
jb
dec
pop
loope
xchg
stc
sahf
rolb
out
call
and
sub
lds
in
lcall
dec
and
inc
mov
outsl
stc
xchg
xor
ret
daa
ljmp
in
pop
cmp
cmp
pop
mov
push
adc
test
out
incl
shll
fcompl
mov
iret
pop
addr16
scas
cld
lods
jle
pushf
mov
inc
inc
add
ficompl
mov
shll
notl
dec
shll
sbb
mov
addr16
cs
test
cmp
add
adc
and
push
and
aaa
xor
and
out
mov
sub
xor
mov
loopne
mov
ficoms
loopne
es
xor
in
mov
enter
outsb
xlat
mov
add
pop
roll
movsl
sarb
add
in
cmp
subb
out
das
sahf
mov
cwtl
js
cmp
hlt
add
cmpsb
jg
stos
push
mov
xor
push
aad
mov
inc
xchg
repz
insb
movsl
pop
stos
div
sbb
xlat
shrb
xor
out
cmp
lds
xlat
popf
dec
and
sbb
je
push
js
fidivl
and
test
pushf
dec
xchg
fimull
xor
testb
rol
jl
mov
ss
mov
ja
xor
sub
dec
dec
dec
pop
inc
pop
mov
int
cli
std
push
icebp
cmp
jbe
or
cwtl
sub
mov
test
xor
ficomps
es
pop
rcrl
or
aaa
or
push
fs
cld
orb
sub
aas
xor
lea
xor
jecxz
cwtl
flds
movl
cmc
iret
fcoms
and
pushl
inc
out
in
es
das
jecxz
or
mov
or
jl
sarl
clc
xor
xchg
sub
dec
ss
mov
mov
test
mov
fildll
sbb
sarb
out
xor
rcrb
cmc
and
aam
xchg
ja
cmp
pushf
sbb
cmp
jge
sub
jge
push
mov
outsl
aam
push
jbe
push
cmp
add
jns
push
cmc
jo
je
repnz
popa
xchg
loop
xor
pop
adc
addr16
mov
cld
xor
andl
push
in
out
adc
int
mov
test
gs
jmp
sub
push
add
mov
xchg
mov
rcrb
out
inc
adc
scas
fbstp
cmp
mov
sbb
fwait
pop
in
shl
mov
lods
hlt
cld
mov
mov
push
adc
add
fcmovbe
mov
xor
shrb
push
fcompl
pop
dec
sbb
inc
cli
mov
cld
inc
ret
cli
andps
pushf
repz
add
or
mov
enter
jle
out
adc
push
mov
add
sub
faddl
push
adc
ficomps
fwait
push
xchg
xchg
add
mov
outsb
aad
aad
adc
pop
int
mov
adcb
popf
or
xlat
push
insl
pop
mov
rep
xor
sbb
lock
fsubr
push
adc
pop
fs
add
sub
int
imul
pop
scas
adc
loop
mov
pop
lahf
idivb
fisttpl
and
cltd
lahf
xor
outsl
cmpsl
fadds
pop
out
ret
pop
or
jne
pop
lea
xchg
sub
mov
int
cmp
adcl
pop
iret
fadds
xchg
adc
and
arpl
jecxz
add
les
and
pop
jae
dec
sti
popa
push
xor
lods
int
inc
push
adc
fs
cmp
jmp
mov
fmull
icebp
mov
loop
bound
pop
daa
mov
aas
out
out
outsl
ds
push
aas
xchg
pop
lods
out
jl
and
leave
fstp
fsubr
cmc
shll
xchg
and
mov
rol
insl
or
inc
insl
jb
mov
mov
sub
mov
lea
mov
movsb
nop
cltd
jl
stc
and
insl
pop
in
jmp
rcrb
xor
rcll
je
lock
lret
inc
lods
das
or
cs
cwtl
sub
shl
imul
push
addl
mov
js
mov
rclb
pop
add
inc
cmp
cltd
adc
jnp
imul
roll
movsb
iret
popf
pop
out
push
pop
jecxz
push
repnz
xchg
mov
data16
push
in
frstor
sbb
xlat
aaa
pusha
sub
inc
push
dec
push
shll
in
fsubs
inc
mov
push
xchg
jnp
aas
pusha
scas
stc
or
mov
loope
cmp
mov
in
dec
jl
push
popa
push
shl
stos
mov
mov
iretw
mov
push
add
mov
inc
and
rcr
pop
jge
fisttpl
shll
cltd
mov
push
cli
enter
mov
arpl
movsl
and
adc
mov
icebp
movl
push
popa
sub
icebp
adc
push
xchg
hlt
cltd
or
xor
jge
mov
mov
xor
fcoms
sbbl
repnz
mov
pop
xchg
add
and
inc
xor
sub
call
cmpsb
nop
insl
xlat
jbe
testb
push
stc
push
mov
add
repnz
inc
mov
out
rolb
or
add
inc
push
cld
add
pop
shlb
cmp
stos
and
sbb
sbb
push
das
cmp
and
stc
gs
pop
xchg
cs
out
js
pop
out
mov
pop
mov
sbb
and
bound
imul
mov
cmp
push
into
adc
or
cld
ret
lahf
add
and
fs
adc
sbb
aas
add
mov
sbb
xchg
iret
leave
insl
mov
leave
jb
divb
imul
popa
scas
mov
xchg
sbb
lret
adc
adc
xor
imulb
jge
in
cmp
outsb
iret
mov
jge
nop
sahf
mov
add
das
ror
dec
fwait
cs
stos
mov
mov
fsubr
jnp
cmp
ret
fildl
les
into
std
dec
xlat
repz
into
arpl
mov
pop
or
push
out
dec
das
dec
stos
mov
push
ss
xchg
stos
inc
pop
adc
scas
xor
ljmp
fsts
adc
shlb
lcall
out
popa
cmp
mov
inc
fdivs
push
cs
jo
out
popa
fisubrs
mov
push
mov
cmp
lahf
out
dec
loop
sub
xor
cmp
and
cwtl
insl
je
addr16
xor
sarl
clc
aaa
push
mov
stc
jbe
dec
jg
js
sub
call
shlb
pop
aad
adc
mov
jb
jnp
mov
loope
or
jle
jp
call
jmp
add
push
les
inc
and
hlt
cmp
lcall
test
jnp
cmpsb
lds
jb
push
mov
inc
ror
testl
call
sub
in
lahf
leave
add
push
sbb
xlat
es
aas
pop
mov
jbe
pop
iret
in
fwait
decl
icebp
push
ret
mov
loopne
mul
cli
add
mov
xchg
ja
jecxz
loope
and
xor
push
lock
lcall
fstpl
sbb
leave
cmp
leave
call
or
xchg
or
cs
jo
mov
or
or
mov
insl
adc
rcrb
fcmovb
mov
lock
repz
aam
jge
dec
daa
or
ljmp
xchg
cwtl
mov
in
insb
pop
lret
cwtl
stos
dec
in
and
into
out
movsl
notb
add
fwait
push
aam
xor
push
popa
mov
add
mov
jl
inc
dec
popf
cwtl
in
add
mov
inc
push
or
ljmp
fwait
data16
mov
loop
lea
xchg
sbb
jecxz
push
shll
mov
insb
test
cmc
lret
aas
fists
std
into
dec
rclb
jmp
insb
mov
xchg
jae
xor
adc
mov
xchg
or
test
fcoml
leave
cmp
jae
sbb
mov
pop
in
and
imul
xchg
cmp
inc
cmpsl
xchg
adc
push
cwtl
xor
sbb
mov
inc
cltd
jg
bnd
imul
or
mov
pushf
jecxz
pop
xor
inc
subl
dec
add
dec
mov
scas
xchg
inc
and
or
shlb
adc
popa
leave
pop
pushf
xchg
xchg
xchg
das
pop
hlt
repz
jb
adc
push
int
sub
das
adc
fimull
dec
mov
ficoml
bndldx
shl
dec
mov
lahf
subl
fisubs
add
inc
addr16
dec
arpl
xor
mull
push
adc
lds
aam
stc
push
out
insb
or
dec
fwait
int
inc
mov
rorb
cmc
addr16
jmp
xchg
popf
add
out
dec
scas
dec
push
xor
in
jp
lea
bound
dec
enter
or
into
aam
imul
xchg
xchg
lahf
push
mov
add
xchg
gs
sti
out
hlt
xchg
fs
pop
mov
mov
std
ret
cmp
bound
divb
pop
xchg
mov
stos
hlt
hlt
mov
pop
das
jg
aaa
mov
test
das
outsl
jle
cwtl
test
clc
jne
sbbb
imul
and
outsl
push
and
pushf
test
aam
mov
mov
mov
mov
dec
or
test
add
gs
sbb
pop
adc
icebp
clc
sbb
rorl
pop
sti
fwait
in
aaa
jbe
lods
loope
mov
scas
mov
adc
out
fstpt
enter
add
mov
sbb
jg
es
ficoml
bound
jp
rorb
and
test
imul
mov
loope
mov
push
out
mov
int
xor
push
dec
add
add
popf
sub
lds
insl
scas
push
pop
adc
xchg
les
mov
mov
cmp
mov
test
add
lds
stos
sbb
in
outsl
push
int
dec
mov
outsl
test
decb
aad
rolb
dec
fmull
cmc
aam
mov
out
ret
sahf
popf
cmc
adc
dec
loopne
add
push
pop
mov
inc
jnp
mov
jmp
ds
loop
mov
lods
add
cmp
enter
mov
xchg
xor
int3
dec
push
cmp
lcall
mov
xchg
adc
data16
push
xchg
insb
mov
in
das
sub
adc
fiadds
cmp
lahf
mov
fdivrl
push
hlt
mov
mov
jg
test
stos
dec
mov
int
pop
cmp
repnz
pop
cs
loop
rcr
rorl
push
out
push
daa
ficompl
into
and
sahf
imul
sub
dec
and
cmp
mov
mov
lods
daa
xor
adc
je
jnp
jg
jmp
push
nop
cmp
add
lods
xor
lret
jae
bound
enter
or
lret
inc
pop
or
add
cmp
js
pusha
add
cmpsl
jecxz
mov
xlat
fisttps
stos
jmp
fs
cli
insb
dec
and
push
mov
mov
add
push
scas
inc
mov
ljmp
inc
outsl
and
jmp
mov
mov
jle
push
cmp
xchg
sti
inc
push
mov
xlat
les
into
roll
mov
cmc
sub
int
jg
daa
ljmp
add
mov
je
ja
ret
popa
mov
iret
mov
sub
stc
in
fstl
jle
pop
add
imul
cwtl
ret
jo
aam
or
pushf
les
inc
xor
mov
xchg
sbb
and
push
aas
xchg
or
mov
gs
test
pop
mov
add
mov
fwait
and
sbb
adc
and
scas
add
std
pusha
arpl
or
cmpsb
xor
aaa
adc
lret
push
shrb
fisubrl
roll
fs
movsb
cmp
iret
mov
in
scas
inc
idivb
leave
in
stc
ret
add
movsl
call
sbb
lea
incl
or
push
hlt
fcmovbe
jo
pop
add
mov
or
and
ret
xchg
mov
xchg
and
push
lret
ljmp
inc
xor
mov
sbb
xchg
push
pop
repnz
fwait
lods
clc
rorl
fnstsw
fidivl
cld
cwtl
or
popa
inc
adc
and
cmp
jl
push
testb
mov
pop
test
outsl
std
mull
xchg
jecxz
rcl
sbb
insb
lcall
mov
jb
out
xchg
inc
cmp
sar
jge
jae
xchg
pusha
cmpsl
mov
insb
push
sub
cmpsl
fldcw
andb
mov
loop
adc
mov
mov
and
mov
xchg
cmp
xchg
stos
lcall
aad
cmc
or
jl
popf
inc
push
jp
xor
test
loope
sbb
bound
mov
loopne
mov
mov
insb
clc
std
addb
mov
or
mov
cmp
leave
adc
sbb
sub
mov
adc
fwait
repnz
mov
add
or
cmp
adc
mov
xor
pop
adc
sbb
sbb
cs
repz
mov
fcmove
or
xchg
or
lods
int3
ja
test
cwtl
sub
test
outsl
sub
xor
shl
and
nop
adc
adc
cmpsb
mov
incl
mov
adc
pushf
mov
in
gs
pop
sub
hlt
mov
add
mov
jnp
lahf
sahf
xchg
lcall
inc
pop
cmp
inc
add
pop
xor
mov
in
inc
push
popf
or
jmp
xlat
add
cmp
jecxz
mov
inc
push
adc
push
mov
rorb
fdivrs
in
mov
sbbb
cs
sbb
es
xor
pop
mul
dec
push
sub
xor
pushf
or
ret
pop
cwtl
test
mov
out
and
inc
mov
push
push
lcall
dec
sti
repz
lock
ja
add
and
push
bound
mov
xor
lods
pop
bound
cmp
mov
and
and
jg
lods
inc
insb
push
fisubs
out
cltd
mov
sub
xor
das
roll
hlt
ss
ja
push
out
fs
dec
push
xor
pop
push
mov
jo
cmp
movsb
hlt
dec
and
pop
stos
leave
push
dec
pop
dec
cmp
popf
xor
faddl
sbb
aad
sbb
xchg
outsb
test
inc
xor
in
pusha
dec
adc
mov
xor
idivb
mov
popf
and
mov
inc
jecxz
flds
sbb
mov
xor
imul
sbb
jmp
mov
inc
aas
jge
mov
stc
push
mov
scas
push
inc
int3
mov
nop
jo
mov
shll
incl
mulb
loope
call
mov
daa
and
aad
push
clc
mov
arpl
pop
pop
pop
idivb
cltd
sbbb
push
push
xchg
sbb
mov
jge
sbb
sub
inc
mov
arpl
sub
sub
pop
mov
scas
mov
and
xor
mov
push
cmc
iret
jnp
dec
pop
sub
out
xlat
pop
sbb
adc
pop
lods
xchg
test
push
hlt
pop
xchg
into
xor
push
scas
mov
rcrb
les
mov
add
mov
add
mov
jp
leave
mov
fadds
cs
mov
add
mov
cmpl
lret
sbb
pop
mov
mov
push
movsl
js
xchg
xchg
aaa
outsl
mov
jp
sbb
mov
pushl
daa
insb
dec
out
lea
cwtl
fisttps
push
mov
in
or
mov
pop
push
or
push
aad
cltd
sarb
lea
in
hlt
adc
fisubs
cmpb
xor
xchg
push
imul
pushl
ljmp
std
fcmovbe
mov
add
test
dec
gs
idivl
mov
dec
aam
insl
cmp
sub
in
test
repz
pop
mov
or
dec
clc
and
test
add
lds
fwait
inc
dec
jle
fimuls
hlt
push
addr16
outsl
dec
push
aas
dec
ljmp
mov
cmc
mov
mov
aam
popa
xchg
pop
pop
mov
mov
gs
mov
fdivl
js
pop
shll
cmp
cs
movsl
xor
aam
gs
jae
in
call
addl
adc
mov
pushf
popf
sbb
lret
ss
xor
popa
test
outsl
mov
cmc
sub
outsl
add
jecxz
xchg
movsl
sub
mov
inc
pop
leave
mov
dec
aam
stos
pushf
subb
fldl
fs
lods
push
jne
mov
sbb
scas
adc
pusha
pushf
les
aas
pop
adc
jo
call
mov
aam
cmp
imul
cwtl
xor
dec
imul
mov
push
dec
add
mov
cwtl
xor
and
mov
xchg
cwtl
dec
mov
insl
fnstenv
pop
push
xlat
push
imul
dec
gs
imul
sub
fcoml
mov
out
and
sahf
mov
negb
sbb
push
mov
mov
mov
jo
dec
addl
cmc
pusha
mov
pop
xor
adc
mov
jne
or
xchg
nop
mov
lods
or
movsb
inc
in
adc
add
rcrl
popa
jmp
sti
xor
cs
mov
dec
mov
adc
inc
shlb
jne
jae
gs
rcr
xchg
inc
aam
ret
xlat
add
jp
imul
stc
jg
iret
test
mov
lcall
fdivrl
jae
xchg
add
aaa
jae
xchg
stos
cmpsl
jl
jge
loop
in
xor
into
jmp
jmp
dec
cmpsb
mull
pop
nop
lods
testb
test
jns
xor
pop
mov
pop
pop
mov
sbb
dec
push
fs
push
sar
out
daa
into
addl
mov
xchg
jae
leave
xor
les
mov
add
xlat
sbb
adc
mov
mov
dec
das
test
je
fcomip
push
add
and
fdiv
mov
lods
mov
clc
fistpl
gs
fxch
mov
pop
jbe
aam
lea
dec
clc
mov
xchg
lods
and
dec
pop
sahf
fidivl
sub
or
icebp
leave
xlat
inc
jmp
loop
lods
pop
enter
loopne
cmc
dec
rolb
or
std
and
mov
jle
dec
mov
xor
cmp
stos
jmp
lcall
sbb
push
dec
faddl
lods
mov
mov
stos
pop
and
xorl
imul
int3
jo
inc
mov
push
aad
pusha
psubd
xchg
fiaddl
icebp
and
mov
push
orl
cmpsl
and
loopne
cmpb
or
iret
xchg
xchg
jg
das
add
push
jle
mov
mov
inc
or
or
adc
ds
out
stos
jae
cld
aad
lock
fldenv
outsb
or
das
test
stc
repnz
ss
add
mov
mov
sar
out
insl
cmp
sbb
mov
aad
fldl2t
xchg
inc
mov
nop
mov
mov
adc
sub
mov
outsb
xchg
cld
popa
pop
ret
pushf
mov
add
stos
rolb
outsl
pop
mov
mov
jo
fs
sbb
mov
fcoms
and
adc
cltd
call
aad
push
or
sarl
adc
fimull
mov
fiadds
rcr
cld
jno
std
pop
shrb
es
ret
hlt
test
add
int3
in
adc
les
roll
mov
sti
cmp
pop
xlat
ja
arpl
pop
or
sub
jmp
les
int3
out
lcall
ret
mov
cltd
sub
adc
push
in
pop
mov
or
es
mov
cmpsb
sub
das
and
xchg
push
cltd
mov
mov
lods
mov
aam
nop
cmpsl
stos
fidivrl
pusha
push
add
ret
fucomp
loop
movzbl
xor
je
test
daa
out
cmp
into
and
xor
mov
rcll
hlt
rol
cwtl
sbb
inc
outsb
jb
loope
jle
pop
cmp
aas
nop
mov
xchg
in
mov
call
cld
inc
sbb
mov
daa
call
bnd
mov
fcomp
imul
push
cmp
mov
out
xchg
mov
inc
jbe
cli
jae
rcrl
sub
inc
lock
imul
mov
movsb
popf
cmpsb
aaa
sbb
pushf
stc
movsl
jnp
jne
iret
jl
inc
jnp
jg
adc
push
pop
rolb
jno
scas
sbbl
add
xor
loop
sub
negb
es
rcll
add
shrb
mov
sub
and
lods
outsb
cmp
lret
dec
inc
jnp
sub
pop
adc
push
mov
int
mov
add
mov
push
and
mov
jo
mov
adc
lcall
xor
call
jle
mov
cmp
mov
out
or
test
sub
xchg
pop
cld
in
jcxz
sub
cwtl
aas
sar
sub
in
or
mov
int3
cs
add
imulb
sbb
xor
test
int
pop
mov
out
mov
cwtl
mov
movb
xchg
push
pop
add
addr16
push
inc
icebp
jmp
aam
and
dec
test
mov
lret
shr
pushf
lret
cmc
int
mov
pusha
rorl
push
xor
cmp
adc
mov
fstpl
imul
stos
push
out
push
das
out
and
les
jp
repz
popa
mov
adc
lods
sbb
jbe
pop
pop
jmp
add
ss
sahf
addr16
cmp
imul
lahf
pop
cmc
adc
movb
mov
jns
enter
and
test
mov
les
inc
add
xor
push
xchg
nop
push
imull
pop
sbb
xor
in
push
xor
rclb
fcoms
iret
push
imul
outsl
scas
mov
aam
mov
jl
jbe
cmp
stos
jp
push
mov
aam
aam
or
icebp
mov
or
xor
sbb
pop
fstpl
fadd
push
xorl
xchg
dec
sbb
lret
xchg
push
dec
fimull
mov
ljmp
cmp
jge
aaa
mov
push
in
jp
jbe
fwait
sub
ljmp
stos
and
jmp
push
ret
fstpl
add
imul
xchg
pop
iret
scas
or
cmc
add
pop
jbe
push
addr16
or
mov
out
lods
xor
mov
adc
mov
mov
inc
in
lock
pop
test
mov
sub
mov
and
icebp
ja
outsl
cmp
sub
jne
nop
rorl
sbb
aad
iret
and
and
cmp
add
sbb
or
fisubs
jl
mov
mov
loop
fildl
add
clc
mov
stos
aam
pop
and
push
movsl
jae
jnp
sub
cmp
push
aaa
lds
xor
fwait
jmp
cld
jbe
cltd
dec
cmp
adc
test
sbb
add
dec
test
mov
jnp
lods
test
xchg
rcll
cli
popa
scas
dec
stc
mov
mov
push
data16
hlt
bound
loop
nop
xorb
shlb
sbb
fnsave
add
add
adc
jno
cld
mov
popa
shll
adc
jbe
xor
inc
fistpl
xchg
push
pop
cmpsb
xchg
pushl
lods
sbb
xor
or
sti
psrad
cmc
outsl
xorl
sub
adc
cs
cmp
add
inc
sub
sbb
mov
test
add
or
mov
push
and
jp
jb
pusha
ret
xchg
mov
mov
jbe
or
test
sub
in
fdivr
xor
dec
cli
test
lods
jle
dec
push
subb
push
mov
or
xor
xchg
jb
out
roll
imul
adc
pop
and
add
scas
fisttpll
pushf
mov
gs
pop
fs
adc
fsubp
pop
imul
mov
shrb
sub
push
pushf
fmull
pop
add
pop
sarl
jge
mov
imul
clc
rcll
pushf
or
bound
cmc
ja
and
mov
cmc
out
jnp,pt
jne
sbb
iret
andb
pushl
cmp
pop
out
sbb
xchg
lods
mov
or
adc
pop
or
pop
dec
lods
mov
scas
out
jno
push
push
xor
out
fwait
daa
jo
or
push
jae
cmpsb
dec
dec
xor
xor
movsb
lret
popf
sarb
xor
ds
movsb
movsl
push
dec
push
mov
pop
rcrb
adc
js
cmp
scas
int3
push
adc
movsb
push
scas
push
cmp
andb
icebp
mov
je
fwait
push
and
fucomi
push
sbb
std
and
and
push
lret
mov
cmc
or
imul
pop
std
mov
cli
and
mov
addl
add
or
xor
add
cltd
add
cmp
lcall
loop
add
and
lret
mov
push
pop
es
popa
incb
jne
push
js
add
mov
mov
std
push
pop
xor
sub
push
cli
and
push
adc
clc
mov
shlb
test
idivb
out
ja
daa
popa
dec
jle
mov
pop
out
xlat
jo
inc
stc
add
fisttps
outsl
mov
push
sbb
or
xchg
cs
inc
stc
push
dec
add
push
std
ds
out
adc
pusha
push
imul
cmpsl
jl
fisubrs
scas
mov
mull
push
stc
sbb
xlat
push
lea
les
pop
add
mov
cmp
jne
in
mov
and
fwait
mov
les
dec
adc
mov
mov
jge
push
xchg
stos
add
sbb
int3
testl
insb
call
push
dec
push
leave
js
stos
jae
and
jle
add
fcomps
fwait
mov
mov
int3
orl
push
sti
xor
dec
mov
cmp
mov
xor
and
dec
mov
sti
push
ss
jp
addr16
adc
push
mov
mov
das
sub
stos
mov
pop
pop
cmp
stos
dec
lret
add
js
daa
push
inc
sbb
ror
sbb
mov
mov
cmp
daa
add
loop
jns
pop
push
pop
pop
outsl
ljmp
dec
or
scas
lret
out
mov
pop
arpl
and
popa
loop
mov
and
mov
mov
jge
ss
xorl
divl
in
mov
cs
and
push
out
or
jns
je
and
cltd
adc
test
mov
or
addr16
dec
push
adc
mov
and
or
pop
mov
fbstp
fs
jns
test
mov
hlt
sahf
es
gs
mov
inc
arpl
dec
lods
mov
pop
cmp
lcall
jp
xor
and
inc
iret
push
and
mov
cld
pop
popa
fcompl
pop
jl
ret
xchg
and
add
ljmp
mov
fldt
jns
in
out
sub
pop
inc
push
int
inc
push
mov
and
orl
rclb
daa
add
aas
arpl
fisttps
cwtl
loop
or
scas
add
aam
mov
mov
inc
adc
cli
in
add
xchg
ljmp
movsl
hlt
lods
loope
inc
sti
lret
cwtl
addl
pop
cld
dec
push
int
in
lds
push
mov
inc
int3
cwtl
out
jne
add
lods
add
ret
xor
fucomi
dec
pushf
jecxz
sbb
inc
inc
push
mov
mov
ret
aad
mov
jne
jge
sbb
push
or
push
bound
adc
or
cmp
push
repz
gs
mov
push
adc
pusha
rcrl
pop
lea
movl
xchg
mov
xchg
insb
push
data16
or
pop
mov
nop
mov
wrmsr
and
jl
loope
xor
ret
addr16
jl
aas
ret
xor
jns
idivl
adc
cmc
and
lcall
pop
repnz
xchg
mov
arpl
stc
sub
scas
fldt
aaa
mov
stc
test
sbb
or
lea
cli
loop
sbb
adc
xchg
cs
lahf
pushf
std
sti
sbb
inc
cmp
loopne
icebp
lret
je
ds
mov
mov
sub
cmp
std
adc
ljmp
dec
mov
mov
leave
jg
jg
adc
js
icebp
dec
xor
lock
dec
sarl
mov
xchg
mov
cmp
fsubl
xor
stc
mov
add
xchg
and
movsl
mov
and
pushf
cli
ljmp
lds
jg,pt
pushf
mov
xor
sub
jnp
add
lret
popa
int3
dec
pushf
and
jg
mov
rcr
addl
mov
xor
mov
movsb
push
mov
repz
xor
mov
mov
imul
imul
or
in
add
sbb
inc
inc
or
mov
pop
push
es
cwtl
daa
xchg
jg
inc
lds
lock
xchg
push
xor
jnp
arpl
fisubs
aam
mov
cs
push
xor
bound
inc
mov
pop
arpl
ja
in
addr16
test
sub
imulb
mov
js
sbb
enter
insb
jnp
push
mov
mov
enter
pushf
xor
fucomip
pop
cld
daa
add
mov
jmp
insb
lea
xor
fs
popa
xchg
sub
xchg
push
aas
dec
inc
out
push
add
scas
pop
aad
adc
sbb
ret
enter
bound
dec
mov
punpcklbw
adc
adc
sub
jbe
adc
ret
jb
mov
movsl
xchg
mov
push
je
push
jnp
sbb
xor
add
repz
insl
andb
inc
repz
xchg
popf
cmpb
sub
xor
xor
rcrl
repnz
push
sbb
cmpsl
cmp
ret
call
cmp
cli
ljmp
push
scas
das
sti
je
cmp
rclb
pop
pop
or
pop
jl
push
sub
push
mov
sub
sub
daa
cwtl
dec
push
xchg
mov
inc
shlb
movsb
sti
jecxz
cmpsl
sub
pop
xchg
jae
push
das
push
call
fbld
jbe
sbb
sahf
xor
mov
pop
dec
pop
xchg
push
mov
fxch
out
mov
jo
cmc
lahf
xor
dec
loope
test
add
lcall
data16
xlat
call
pusha
fldt
testb
lcall
hlt
xchg
dec
fwait
mov
xchg
shrb
pushf
sti
push
sub
popf
mov
mov
stc
in
sti
push
cmp
xor
aam
push
int
add
cli
push
pop
sbb
xor
arpl
lret
lods
lock
nop
mov
pop
ret
push
sahf
scas
push
nop
add
aad
push
dec
push
dec
aas
xchg
push
in
jo
shlb
scas
jmp
arpl
pop
push
add
lods
pusha
shrb
inc
push
xlat
aad
ljmp
mov
out
mov
test
adc
fs
sti
rclb
push
xchg
scas
popf
sbbl
clc
push
stos
jmp
out
std
and
leave
fidivrl
mov
aad
or
sub
xor
int3
test
fiadds
subl
xchg
push
insl
lret
shll
lds
push
push
mov
sahf
movsb
and
mov
int3
outsl
dec
push
or
negb
aas
out
scas
test
push
jmp
pop
and
mov
dec
arpl
sti
mov
aam
xchg
pop
das
xlat
pop
loop
clc
inc
mov
pusha
push
jno
xchg
pusha
cmp
dec
fimull
imul
mov
jge
stos
mov
rorl
mov
lcall
stos
mov
mov
add
push
pop
js
sub
out
sahf
lods
out
inc
fcmovnb
scas
xchg
mov
pusha
call
test
pop
push
fildll
pusha
inc
test
adc
outsb
xchg
fmull
aaa
xlat
in
stc
mov
adc
scas
sarb
adc
push
shrb
in
js
test
jp
daa
mov
int
inc
fsts
mov
sub
enter
fcoms
sub
push
pop
adc
lock
loope
test
pop
xlat
jmp
inc
pop
sub
inc
pop
or
xor
aas
fists
in
mov
sbb
fists
es
adc
les
jno
je
jp
rcrb
sub
fs
cvttss2si
or
aas
js
sbb
push
dec
sub
rorb
lods
mov
sub
fwait
sub
xchg
and
outsl
sub
push
movsb
cmp
cs
aaa
xor
jmp
loope
enter
in
test
cmp
bound
xabort
or
lods
jecxz
mov
xor
lea
inc
movsb
lds
fdivs
cltd
add
jl
mov
add
pop
pop
leave
stc
repz
sub
mov
jnp
stos
enter
push
adc
or
push
sbb
mov
xchg
xchg
lcall
jmp
inc
bound
and
iret
test
sub
out
scas
mov
and
xchg
into
push
sub
xchg
xor
push
js
outsb
jl
in
outsb
xchg
cli
int
pop
scas
pop
fnstsw
int
push
call
pop
dec
outsb
add
inc
fadds
mov
lods
pusha
shrl
mov
cmp
cmp
cli
icebp
adc
add
fmul
in
push
in
mov
jo
cwtl
mov
jnp
pop
pop
stos
je
xor
inc
in
xchg
aad
push
mov
clc
push
int3
pop
ds
sbb
lods
sub
push
inc
or
sub
cltd
mov
mov
out
mov
inc
add
fstpl
lock
or
push
fidivs
jno
mov
add
add
cmp
or
pandn
push
pop
cmc
cmp
rcrb
rol
xchg
clc
imul
dec
lret
pop
mov
lahf
mov
or
andb
jmp
jle
pop
inc
mov
pop
lahf
addr16
int3
jb
test
pop
out
les
movsb
xor
mov
lds
push
out
xchg
sbb
mov
pop
jmp
mov
lds
daa
shrb
lea
nop
adc
xchg
pop
jne
push
add
sahf
aas
jecxz
fisttps
mov
rcll
jns
in
rcl
loope
fstpt
jg
icebp
ret
sbb
jns
sub
dec
stc
scas
pop
push
mov
cmpsl
add
adc
mov
sti
push
andl
lods
pop
int
jbe
push
ret
push
pushf
pop
jl
movsb
pushl
fimuls
stos
out
outsl
gs
cmp
cmp
push
push
jmp
mul
xchg
adc
fdivr
xorb
inc
xor
and
dec
sub
adc
into
and
sbb
cmp
xchg
sub
iret
dec
mov
push
push
std
mov
pusha
jmp
ret
xor
push
xchg
outsb
xchg
lock
pop
cmp
push
lret
shlb
adc
cwtl
jne
jno
icebp
jbe
sbb
dec
aam
dec
std
jg
fcoml
inc
rolb
cmp
mov
outsl
sbb
and
rcrl
push
push
sbb
dec
jnp
enter
mov
inc
fldl
mov
inc
fldt
fcmovnu
xor
int3
cli
inc
fdivl
movsl
cmc
aaa
or
fldl
test
jo
lock
xchg
js
subb
leave
pusha
add
pop
and
aas
and
xchg
xchg
sti
xchg
sub
xchg
lods
pop
push
cld
imul
lea
dec
pop
cltd
cmp
mov
test
aaa
jmp
leave
stos
push
dec
adc
mov
jno
or
dec
ret
cs
push
popf
push
mov
je
dec
test
adc
xor
inc
add
sub
adc
and
shl
mov
mov
dec
xacquire
jae
sbb
pop
jle
push
cmp
adc
lret
mov
jg
lock
divl
jp
sbb
es
push
cmpxchg
mov
xlat
lahf
and
inc
int
imul
push
mov
mov
sbb
pop
std
fdivs
dec
jb
fwait
repz
cmp
andb
xchg
push
push
cmp
xchg
ds
xchg
add
ds
cmp
mov
sub
sbb
sub
adc
out
mov
loope
sbb
mov
popa
mov
push
push
jle
mov
push
pop
scas
rcl
jbe
jmp
sbb
lods
mov
outsl
push
adc
jbe
lret
pop
mov
enter
aas
fsubp
sub
notb
in
nop
loop
mov
pop
int3
mov
sbb
mov
sbb
loop
int3
adc
scas
fwait
lods
mul
sub
aad
cmp
inc
jecxz
inc
lahf
lcall
popf
sub
mov
add
pop
sbb
jle
push
jmp
inc
popf
shlb
dec
xor
cli
push
sub
cmp
cmp
sahf
ret
ljmp
dec
mov
lock
jae
and
push
shr
sbbl
mov
pop
add
add
fisubs
inc
cmp
js
and
and
insb
testb
fmul
hlt
addr16
or
scas
inc
inc
mov
js
jge
stos
inc
xchg
fidivrs
sbb
jb
pop
stos
jecxz
sub
gs
mov
xchg
mov
addr16
subl
jbe
pop
and
mov
fs
stc
jae
push
mov
push
or
enter
pusha
ret
lret
popa
sbb
sub
adc
rolb
jno
add
lods
dec
mov
add
push
jae
or
popa
push
and
adc
cli
stos
dec
xor
ljmp
mov
addb
jno
pushf
jb
das
fidivrs
outsl
insl
mov
imul
out
push
mov
out
fnsave
xor
cwtl
sti
dec
cli
push
pop
aad
mov
xor
sti
jae
ljmp
sbb
sbb
or
insl
dec
lahf
adc
movsb
movsb
mov
push
int
pop
loopne
xor
pop
jb
sbb
and
push
inc
and
push
pop
mov
sub
in
push
mov
push
ds
ret
sbb
cmp
mov
jp
jns
mov
std
xor
xchg
lock
je
in
sbb
stos
xchg
cmpsl
popf
or
into
int3
xchg
xchg
and
mov
popa
pop
cltd
paddusb
out
sbb
mov
jns
pop
push
bound
mov
adc
pop
cmp
sbb
mov
cmp
pop
sub
scas
mov
sahf
jbe
fsubrl
pop
and
push
push
lods
cmp
sti
mov
cmpb
xlat
lahf
mov
notrack
jae
lea
cltd
adc
cld
in
jmp
call
movsb
outsl
repnz
cld
in
or
das
ficompl
paddd
jnp
decl
xor
movsl
xchg
popa
xor
or
into
outsb
mov
adc
cmc
sub
pop
mov
cld
jns
mov
mov
adcb
adcl
xor
das
inc
cmp
xchg
dec
xchg
mov
out
mov
sarl
aas
and
xchg
int
sub
into
int3
jns
inc
cmpsb
xor
imul
outsl
pop
lahf
pop
lret
daa
mov
fstpt
scas
mov
icebp
out
dec
arpl
jno
aaa
lahf
aam
mov
pushf
push
lea
xadd
loopne
jge
or
jecxz
cmp
adc
fucomp
and
pop
push
test
mov
push
push
push
not
xor
or
sahf
ja
inc
jns
aad
imul
dec
mov
aas
imul
mov
add
ss
xor
mov
fs
jae
dec
pop
sub
push
xchg
out
adc
not
stc
push
idivb
in
imul
mov
je
pop
mov
movsl
shlb
ret
adc
pushf
cmp
shll
mov
repz
shl
out
jl
pop
scas
por
xchg
sub
sub
xor
sarb
sti
inc
push
xchg
jle
mov
lret
xor
xchg
xchg
dec
daa
mov
add
sbb
mov
cmc
imul
sub
sub
xchg
dec
inc
leave
adc
mov
push
and
inc
cmp
xchg
in
push
cmp
leave
inc
xchg
xlat
add
mov
lods
and
std
inc
sahf
xchg
ds
mov
in
std
std
jne
fstp
cmp
cltd
mov
addr16
in
and
xchg
jbe
in
jo
loopne
push
inc
out
test
xor
fdivrs
add
push
outsl
addb
addb
pop
jg
cmp
lock
add
aad
test
insb
fadd
scas
add
ret
push
dec
jl
add
mov
push
andb
cmp
add
inc
daa
ret
mov
dec
xchg
mov
mov
insl
std
xchg
inc
sahf
xchg
xchg
mov
push
push
test
mov
cmp
pop
out
dec
cmpsl
rorl
sub
mov
js
jp
ficoms
xchg
cmp
lret
xchg
stc
push
xchg
andl
lods
sbbb
push
fcompl
jg
inc
loope
fbld
cmpl
sub
push
push
dec
or
out
out
stc
scas
sbb
pop
out
cmpsb
sti
movsb
cltd
leave
hlt
push
shlb
push
inc
pushf
cmc
testl
xchg
jb
cmp
imul
mov
or
pusha
lods
mov
mov
jle
dec
dec
mov
adc
idiv
test
push
notb
or
test
add
pop
or
cwtl
movsb
lret
dec
mov
mov
sarb
jae
sti
add
pushf
xchg
or
xchg
jns
shlb
inc
ja
lahf
sbbl
mov
jl
shlb
sbb
dec
scas
sub
aad
cmp
pop
jge,pn
loopne
mov
or
add
fwait
push
sti
outsl
into
mov
push
dec
pop
je
cmp
cltd
and
movsl
arpl
lret
xor
cmp
outsb
mov
cmp
xchg
dec
ja
add
enter
and
inc
dec
jle
addr16
cmp
mov
adc
jns
je
pop
fbstp
mov
xor
pushl
pop
mov
cmp
sarb
insl
jae
movsl
mov
xlat
pusha
push
popa
or
cmp
ljmp
pop
insl
imul
dec
sub
xchg
sub
sahf
mov
loopne
mov
push
xchg
push
pop
ret
idivb
shll
mov
mov
pop
or
iret
sbb
stos
cld
sub
les
or
pusha
dec
push
fnstcw
push
jg
jge
dec
or
ljmp
xor
sbb
xchg
pop
imul
les
push
cmpsl
cli
lahf
lret
into
dec
jnp
jge
jp
out
push
js
cmp
lret
or
inc
call
bound
decb
call
out
loopne
inc
jbe
arpl
adc
xlat
test
shlb
sahf
mov
es
fisttpll
sub
jb
or
mov
jmp
jns
clc
call
and
add
shll
xorl
sahf
gs
js
fstps
mov
jae
cmp
lret
adc
xor
xlat
ret
lcall
es
mov
xchg
scas
inc
jle
xor
notb
sbb
adc
cmp
dec
pop
xchg
inc
scas
inc
adc
rcll
aas
repnz
stos
mov
push
add
dec
adc
sub
aas
pop
outsb
jmp
and
jns
cmp
push
inc
daa
cmp
push
sub
jbe
push
cmp
or
mov
out
xchg
in
fstpt
aaa
insl
fmul
dec
pop
cmp
cmp
ja
push
popa
stos
pop
mov
rorb
mov
push
sbbl
repnz
pop
imul
xor
mov
sbb
and
or
mov
push
enter
popf
in
or
and
cmc
sbb
jae
ja
ja
addb
pop
fldl
hlt
xchg
cmpsb
dec
lret
ljmp
lcall
mov
sub
or
push
lret
rcll
dec
test
bound
cmp
or
stos
mov
sub
ja
lods
sar
xchg
mov
mov
cmp
hlt
jmp
sbb
fldt
into
sahf
ja
in
fadds
xchg
cmc
add
rcr
xchg
lcall
sbb
ljmp
push
cmp
mov
cmpsb
mov
cli
lret
push
js
inc
mov
mov
jne
xor
in
and
adc
pop
sti
xchg
rcl
ja
out
aaa
pop
add
into
fsts
push
lea
in
mulb
in
into
or
mov
mov
pop
pusha
ret
mov
add
mov
mov
sub
sbb
mov
mov
psrlq
push
push
movsb
idivb
ja
sub
jmp
popa
cmpsl
adc
cltd
aam
loopne
cmp
aad
in
mov
adc
mov
mov
and
cmpsl
mov
lret
orl
inc
jecxz
lea
mov
popf
add
arpl
mov
xchg
add
in
popf
and
bound
pop
mov
add
enter
out
push
xchg
outsl
push
mov
lods
cmpsl
pop
push
dec
cmp
cmpsl
pusha
xchg
in
flds
je
push
mov
cli
je
sub
mov
sub
or
mov
xor
push
push
test
jmp
push
test
mov
mov
xor
vpaddsw
aas
ljmp
out
cmp
cmp
and
rcrl
or
out
xrelease
xchg
cwtl
inc
add
movsl
inc
shlb
pop
loope
jns
loop
or
outsb
dec
pop
mov
adc
pop
pop
dec
fucomp
mov
adc
xchg
xor
sub
leave
pop
add
and
cmpsb
aam
add
mov
mov
push
add
mov
xor
push
mov
fpatan
sahf
xchg
lock
lock
aam
push
mov
add
mov
mov
movsl
jb
pusha
repnz
pop
mov
jp
dec
imul
push
or
pop
add
stos
cmp
jle
and
popf
imul
rolb
jb
sub
dec
out
into
mov
jb
test
loope
pop
paddusb
out
jnp
dec
mov
cmp
mov
out
test
push
or
clc
or
dec
jae
mov
cmp
inc
filds
cmpsb
lahf
ret
push
xor
leave
mov
mov
jns
xlat
mov
adc
dec
shlb
mov
push
test
adc
inc
rcr
es
pop
es
mov
inc
lock
lcall
mov
push
inc
cwtl
push
push
insb
mov
leave
pushf
iret
pushf
std
je
in
loop
inc
mov
imul
js
add
outsl
adcl
inc
jo
std
movsb
orl
sub
and
inc
mov
test
mov
test
push
out
or
lds
sub
mov
jg
sbb
decl
pop
rclb
ret
bound
lea
dec
mov
fadd
cmp
mov
jmp
es
outsb
jno
ret
adc
add
mov
scas
lods
cmpsb
push
call
lea
inc
xchg
pop
jp,pt
lods
loope
mov
imul
loop
jb
loope
mov
add
jl
jne
ret
cmp
inc
sub
icebp
mov
dec
lcall
nop
xor
mov
jno
jae
mov
and
out
adc
insl
xchg
inc
fucomp
int
pop
lret
sbb
testl
adc
pusha
stos
mov
sbb
mov
mov
mov
mov
enter
xchg
xchg
sbb
mov
sbb
mov
je
sub
inc
fwait
sbb
lods
insb
leave
xor
out
out
mov
jmp
pop
and
scas
das
xchg
pop
loop
jl
lea
push
fistpll
pop
out
mov
cmp
imul
xor
add
insl
dec
sub
pop
dec
and
in
pop
lods
jo
xchg
dec
pop
int
out
xor
leave
jnp
jae
cltd
mov
iret
into
stos
cmp
xchg
lods
push
cs
xchg
push
addr16
out
fisttpll
movsl
xchg
cmp
sbb
cld
mov
ljmp
sarb
ror
fiadds
cmpsl
ss
loopne
pop
int3
xchg
push
aas
jae
inc
lahf
add
cmp
dec
xchg
add
or
sbb
jbe
and
jne
sbb
cmp
sub
das
negl
cli
pop
jo
insl
xchg
nop
push
push
dec
lods
fisttps
pop
xchg
addl
das
ret
push
mov
imul
push
ss
inc
mov
imul
xchg
jnp
mull
icebp
jmp
testb
mov
dec
sub
nop
cmp
test
sub
cli
cld
inc
ss
data16
pop
mov
add
cmp
dec
aad
mov
xor
int3
adc
popf
ret
pop
subb
mov
jae
sub
shl
dec
out
xor
data16
hlt
and
lret
cs
or
pushf
xchg
scas
dec
inc
cmc
sub
lret
or
adc
cmpsl
jl
pop
and
jo
mov
cwtl
outsl
icebp
inc
jo
outsb
movsb
jg
scas
aam
xorb
mov
pop
aaa
rcr
xchg
sbb
xor
fcomps
fisubrs
pop
xor
hlt
mov
test
mov
ret
pop
pop
inc
add
leave
pop
mov
inc
mov
push
jno
in
mov
cltd
push
pop
or
test
jbe
enter
jo
adc
imul
inc
jge
or
add
or
addl
mov
popl
pushl
shrb
pop
sub
ror
outsl
lock
dec
imul
bound
ret
stos
pop
inc
ljmp
popf
push
add
negl
movsb
mov
sbb
cwtl
bound
addr16
lahf
popf
pop
jno
push
sub
aas
out
add
fidivs
cmp
jecxz
in
pop
shrb
shr
mov
xchg
lret
cmp
mov
jo
sub
rorl
test
sub
cmp
adc
push
xchg
xor
and
cmp
fs
cmpsl
xchg
add
lods
push
jbe
xlat
test
sahf
cli
addr16
cld
push
mov
in
loop
xchg
sahf
imul
lret
cmp
dec
xor
push
addr16
jp
lret
and
cmp
cld
dec
sbb
lret
es
sub
add
rcr
xchg
xor
jmp
jg
mov
into
movsl
pop
xchg
outsl
or
lock
xchg
das
mov
mov
rclb
int
push
lret
inc
dec
push
mov
jp
out
inc
push
xchg
test
fnsave
shlb
out
mov
xor
push
std
add
mov
cmp
mov
insb
mov
jp
xchg
fcoms
lods
mov
cmp
push
inc
das
cmpl
repnz
jae
pop
mov
pusha
rcr
push
addb
in
jp
inc
sub
xchg
movsl
in
cmpsb
stos
ret
mov
pop
mov
das
cmp
cld
sub
iret
sbb
add
push
loope
cli
jge
jbe
push
pop
cltd
adc
push
daa
or
xchg
dec
stos
repnz
std
sub
inc
sbb
cwtl
imul
subb
icebp
popa
subb
aas
adc
aaa
in
xchg
loope
push
cld
fsubp
icebp
mov
insb
shll
lds
and
dec
dec
sub
lcall
gs
adc
daa
inc
mov
test
loopne
pop
adc
and
mov
lods
push
sub
fdivrs
lock
jne
jmp
je
adc
hlt
lods
das
repnz
mov
out
jmp
andl
push
clc
rcl
cmpsl
ret
leave
mul
int3
out
pop
lret
dec
sub
inc
jmp
pop
mov
shlb
inc
push
ljmp
cmp
sar
sbb
fimull
pushf
cmc
aaa
jp
cmp
test
in
sbb
mov
inc
add
je
and
pop
sub
mov
cwtl
movsb
fnstcw
mov
sbb
mov
jg
hlt
in
or
sbb
or
sbb
lods
push
scas
clc
jnp
dec
mov
fisubs
and
xchg
addb
cltd
mov
mov
ret
add
ss
and
or
and
mov
out
pop
ja
clc
mov
pusha
or
jo
ss
mov
movsl
je
cli
lods
mov
stc
outsb
mov
adc
add
xchg
xchg
cmp
orb
rep
dec
push
lea
or
xchg
pop
jb
lods
dec
inc
les
jg
fidivrs
in
fs
push
xchg
jle
loop
adc
sub
mov
mov
and
enter
xchg
sub
sbb
push
adc
gs
fstpt
lds
push
and
in
outsl
loope
mov
jo
cmc
push
iret
daa
lods
sbb
xchg
mov
pop
dec
mov
add
jo
movsl
in
xor
jnp
pusha
sti
ficoml
cltd
xchg
jae
popf
add
out
repnz
je
adc
push
das
add
mov
lcall
mov
test
push
mov
adc
cmp
or
testb
bound
daa
movsb
push
jmp
jae
sahf
or
inc
adc
mov
pop
sub
or
sub
adc
mov
jns
add
mov
jl
xor
mov
mov
mov
and
sarb
iret
inc
mov
test
loop
into
inc
stos
movsl
push
pop
mov
or
lret
iret
mov
mov
lea
jmp
jns
mov
mov
dec
mov
jecxz
imul
int3
fdivr
pop
add
cmpsl
pop
inc
in
stos
pop
pusha
xlat
lcall
ret
inc
sub
ljmp
cmpsb
outsb
fsubl
inc
mov
pop
aas
sahf
xor
rcrb
pop
push
add
outsl
lret
test
adc
lock
inc
lret
pop
push
cmp
adc
mov
leave
and
inc
call
pop
fldcw
addl
outsl
push
add
clc
push
test
fistps
jmp
fsubl
jno
jno
enter
imul
shrb
inc
inc
and
clc
or
sti
insb
mov
cli
movsb
cwtl
push
mov
out
sbb
xor
dec
popa
scas
enter
sti
dec
adc
scas
jae
or
clc
test
jmp
mov
mov
repz
shl
leave
insl
mov
addr16
sub
call
dec
rclb
push
std
sub
push
addb
shrl
scas
sub
sbb
push
fcmovne
xchg
sahf
sub
pop
ljmp
pop
lea
imul
popf
das
xlat
and
cltd
jb
xchg
adc
pop
jmp
orb
jg
push
lret
fdivrl
cmp
fistl
mov
jecxz
jle
out
cmpsl
gs
pop
push
mov
fwait
inc
jae
cli
mov
rol
sub
sub
jb
ret
rcrl
pop
and
andb
rcr
add
outsb
cmpsb
outsb
mov
sub
sub
push
dec
mov
leave
adc
push
fistl
and
dec
jno
test
je
fwait
lret
push
push
je
pop
or
cmpsb
adc
enter
in
add
dec
shrb
push
int
pop
loop
scas
xlat
outsl
mov
data16
push
ja
fnstcw
fmulp
cmp
pop
or
add
inc
insb
test
fstpl
leave
push
stos
stos
out
sbb
sbb
push
xor
xlat
jae
mov
cmp
inc
loopne
jecxz
bound
add
inc
incb
pop
xchg
out
sbb
sub
push
jb
cmpb
fwait
insl
rcr
inc
loop
lahf
dec
mov
add
pop
jmp
dec
jo
dec
in
dec
adc
lods
cmp
xor
jae
ret
addl
cmc
into
add
stos
cmc
insl
xchg
xor
cwtl
shl
or
add
jno
pop
and
mov
mov
mull
in
sti
xor
imul
mov
fsubs
pop
hlt
aaa
enter
mov
add
insb
nop
and
mov
mov
cmp
popf
push
andb
cmp
cld
add
inc
fadds
insl
or
push
rorb
adc
mov
cmpsl
mov
cld
pop
dec
mov
mov
aas
xchg
in
mov
out
mov
out
cmp
sbb
jbe
or
nop
mov
rorb
jnp
adc
sbb
adc
gs
in
mov
and
mov
pop
scas
pusha
or
and
push
add
testb
pusha
dec
cmpsb
test
mov
adc
fsts
movsb
jns
xchg
leave
xchg
cmp
sub
rorb
jne
movsb
cmpsb
xchg
aaa
in
and
lock
or
int
xchg
mov
lods
arpl
dec
pushf
clc
mov
sub
dec
sub
repnz
shlb
mov
mov
add
insb
movsb
sbb
cld
mov
fbstp
mov
jbe
inc
push
cmp
cld
sub
clc
cmp
jp
call
in
add
sub
cmpsb
push
xorb
testb
lods
fdivl
add
pop
shrb
mov
mov
int3
daa
push
and
lret
add
insb
jns
and
lea
push
adc
into
jle
inc
mov
lcall
imul
xchg
ds
or
cli
imul
push
pop
push
push
repz
sbb
sub
cmp
jmp
sbb
sbb
sbb
ljmp
cmpb
daa
push
repnz
cli
cmp
push
nop
aad
ror
scas
call
leave
or
xor
adc
push
in
push
sub
das
in
daa
movsl
push
inc
jb
sahf
adc
stos
fdivrl
mov
mov
xchg
cmp
inc
cli
dec
into
lds
inc
leave
pop
adc
adc
into
flds
std
add
jmp
xor
inc
adc
and
out
insl
jo
cmp
adc
jae
xorb
insl
aaa
mov
inc
loop
pusha
into
mov
cld
scas
lods
sub
xor
daa
frstor
push
jg
enter
and
ja
dec
xchg
push
jb
mov
gs
dec
sbb
jne
or
popa
popa
mov
add
addr16
into
sub
ljmp
cmc
fldenv
or
add
push
pop
dec
outsl
int3
repnz
jns
aaa
std
dec
dec
test
jae
jns
out
icebp
mov
jg
into
xchg
data16
jns
das
sahf
pop
call
lods
aad
xchg
dec
or
loopne
imul
popa
aas
aaa
cmp
orl
push
jg
fistps
sub
test
imul
daa
lds
loopne
daa
jnp
es
in
int3
add
sbb
mov
icebp
ficomps
or
nop
dec
xchg
jle
push
jmp
in
test
outsb
in
xor
lahf
jno
and
dec
mov
jmp
or
lret
in
std
mov
xchg
cld
je
cmc
cmc
fisubrs
in
pop
push
adc
xor
setne
dec
aad
les
popf
call
xor
int3
push
push
leave
shr
imul
std
jmp
stos
les
popf
xchg
xchg
scas
mov
dec
sub
or
fistpl
fucomip
arpl
pop
shll
in
pop
mov
lret
bound
das
cmp
popa
lret
std
jae
push
pop
mov
mov
sbb
push
push
jmp
cmc
lock
mull
mov
lods
mov
dec
and
add
les
out
pop
push
jp
add
sbb
fcmovnb
cmp
mov
adc
or
xor
push
xor
movsl
pop
in
and
jnp
sub
mov
out
jno
stos
mov
sub
push
ret
jnp
xor
nop
rcll
fnstenv
dec
push
jo
fwait
leave
sub
test
lds
sbb
lds
mov
add
mov
pop
adc
cwtl
inc
rorb
jnp
xor
in
ret
xchg
addr16
mov
inc
test
pushf
out
jmp
lret
inc
and
dec
adc
xor
adc
cs
pusha
and
or
jl
or
les
fwait
cmp
xor
pop
idiv
scas
ljmp
repz
repz
ret
addl
ret
decb
push
gs
into
repz
test
and
loopne,pt
out
loop
inc
out
idiv
inc
lea
cli
push
in
fdivrl
mov
mov
push
jns
dec
sub
inc
sbb
jbe
and
pop
add
lods
pop
movsl
mov
xchg
stos
in
mov
jmp
xchg
mov
cld
and
nop
das
aaa
out
cli
movsl
pop
or
es
movb
ror
push
popa
push
pop
push
mov
add
dec
xor
aam
aam
nop
popa
arpl
xor
mov
cmpsl
push
mov
ret
dec
test
fidivl
pop
mov
lods
es
ljmp
aas
mov
ficompl
int
jb
inc
or
cwtl
cmpb
flds
xchg
test
fdivp
stos
je
clc
or
bswap
push
cltd
jle
mov
inc
repz
pop
cmp
leave
arpl
push
pop
rcl
nop
mov
jb
pop
cmp
data16
in
lods
aaa
clc
jne
fistpll
mov
jnp
fidivs
mov
subl
stos
mov
sbb
sbb
push
mov
adc
clc
and
inc
pop
cwtl
sbb
lock
popa
dec
jbe
cltd
add
inc
test
inc
pop
sbb
add
jecxz
cmpsl
shrb
adc
adc
or
cmpsb
movsl
pop
aas
add
xchg
dec
jle
cs
inc
push
add
xor
movsb
lock
mov
jge
icebp
sbb
pushl
or
lock
ljmp
insl
ret
pop
sti
xchg
and
push
clc
and
or
sub
push
mov
mov
cwtl
mov
xchg
sub
gs
sub
iret
ret
jg
mov
clc
fisubl
mov
and
adc
nop
call
push
cmp
rcrb
inc
das
sub
mov
dec
lods
push
iret
rcl
pop
jae
stos
aam
lea
cmp
pop
inc
jns
sbb
fstpt
sub
inc
jnp
int
inc
cld
push
ret
dec
ss
fidivrl
jo
pop
loop
enter
cli
jae
push
jl
sbb
inc
pop
icebp
mov
not
inc
adc
int3
push
sub
sti
mov
or
mov
call
add
mov
leave
aam
inc
add
jmp
leave
push
lahf
sti
cmpsl
push
iret
cmp
call
pop
fisubs
xlat
inc
push
add
mov
jge
and
sub
leave
xchg
repnz
mov
lods
and
stos
mov
pushf
popa
popl
mov
repnz
test
lret
out
mov
add
jp
inc
add
or
ljmp
repz
mov
adc
nop
sub
cmpsl
adc
pop
outsl
jbe
inc
into
and
mov
cmp
insb
sarl
int3
sbb
xor
hlt
and
js
js
rcll
rclb
mov
lock
jns
inc
push
push
test
mov
xor
jns
push
pushf
pop
pop
out
inc
hlt
lret
rorb
roll
cmpsl
xchg
push
or
imul
js
sbb
push
and
cmc
cmp
push
mov
mov
mov
xor
jl
repnz
adc
ret
mov
fsub
dec
or
les
sbb
xchg
and
neg
cmc
mov
aad
jno
shr
push
out
adc
mov
push
xchg
daa
and
shrl
add
adc
cs
pop
mov
adc
negl
pop
xchg
dec
adc
rorl
dec
adc
jge
jnp
cwtl
xor
pop
xor
mov
xchg
adc
jo
gs
in
imull
cs
sub
inc
sub
test
sub
lret
stc
mov
cmp
in
adcl
ljmp
les
cld
repnz
scas
test
push
and
inc
xor
lcall
int3
dec
sub
aad
lds
dec
shrl
or
fidivrl
jmp
negl
jp
in
mov
das
lds
lcall
adc
mov
jb
test
ret
pop
in
outsb
iret
pop
jmp
push
sub
or
inc
xlat
sbb
push
adc
dec
jne
aam
loope
jl
iret
lea
xor
cmp
nop
xchg
adc
or
pop
stc
movsl
inc
js
imul
mov
pushf
popa
lret
mov
scas
mov
pop
test
icebp
push
push
mov
push
dec
inc
dec
daa
daa
rorb
dec
and
jmp
out
cltd
ret
outsl
inc
shl
lcall
cmp
pushf
pop
loop
and
cmp
xchg
push
add
sub
gs
repnz
aam
mov
push
inc
and
divps
repz
out
sbb
int
push
pop
fs
outsl
sub
orl
dec
ret
cwtl
daa
push
stos
cmp
icebp
sahf
shrb
into
jp
bound
jnp
jnp
repz
in
stos
addr16
clc
imul
imul
inc
flds
in
sub
aad
xor
jge
mov
lods
out
or
lods
jne
xchg
jle
daa
push
or
push
hlt
mov
rcll
dec
mov
mov
push
xchg
stc
test
int3
hlt
aam
add
fidivrl
in
cli
pop
push
mov
sbbl
xor
dec
jg
mov
in
pop
pop
dec
fcmovnbe
pop
fidivrl
jno
mov
test
imul
xor
lret
test
lret
sbb
xor
fwait
std
xchg
ret
and
mov
aad
jmp
loopne
jg
mov
cmp
add
je
test
scas
pop
outsb
lods
insb
insb
fcmovnu
lahf
xor
mov
dec
mulb
push
mov
inc
aas
jo
test
xchg
test
fdivrl
pop
fs
mov
mov
xor
mov
jno
fstps
push
dec
fdivrl
push
and
mov
inc
mov
inc
mov
pop
fmulp
push
xchg
lret
mov
lahf
inc
jb
int3
lds
pop
sbb
sbb
xor
or
test
ret
enter
or
addr16
out
pop
xchg
pop
sub
shll
adc
sub
and
sub
pop
ret
push
sbb
leave
ljmp
push
dec
loop
movsb
lret
adc
mov
mov
ds
sbbl
je
mov
inc
pop
arpl
dec
loopne
pop
sbb
call
or
adc
pop
sar
fsts
mov
nop
js
xor
insl
cltd
roll
cmpsb
push
push
test
sbb
or
into
add
push
lret
leave
shl
xchg
ficoms
inc
shr
xor
mov
stos
das
lret
add
or
lret
aad
test
adc
imul
repz
add
jmp
pop
mov
jl
mov
jno
xor
fisttps
shr
push
pusha
je
aaa
mov
dec
inc
rcll
ljmp
pop
test
jmp
test
mov
out
cmp
pop
mov
test
xchg
fcomps
pop
push
popf
lea
dec
aad
je
sub
xlat
add
or
mov
lret
xchg
cmp
ds
ss
in
pop
orl
and
xor
mov
or
mov
and
sbb
xchg
lret
and
sub
sub
imul
fldl
addr16
imul
movsl
sbb
mov
jecxz
jne
jge
aam
pushf
out
enter
mov
ds
adc
xchg
xor
push
adc
dec
push
jae
loopne
xor
shll
fsubrl
xor
jp
mov
enter
ljmp
cmpsl
popf
iret
scas
mov
sbb
inc
in
repnz
insl
scas
jge
adc
mov
repnz
push
pop
mov
or
or
or
pop
negl
jecxz
in
xchg
test
sub
dec
hlt
add
dec
insl
nop
pop
inc
enter
int
push
repz
lret
jp
inc
push
xor
fbld
pushf
ret
xor
faddl
adc
cs
mov
stc
inc
js
jge
pop
mov
sahf
or
dec
into
inc
fwait
mov
fadds
jo
mov
shrl
inc
dec
ljmp
lods
mul
es
movsl
ljmp
mov
inc
jg
push
jb
mull
jnp
ror
in
cld
cs
inc
adc
pop
cmpsl
push
mov
sub
es
cmp
out
inc
jne
into
std
push
jecxz
mov
into
push
rcrl
lret
push
into
je
jl
mov
jne
or
stos
addr16
cs
jg
and
lea
js
test
or
scas
jmp
imul
lret
jno
pop
push
cmc
cmp
ljmp
pop
add
cmpsl
dec
jns
push
xchg
push
push
gs
and
mov
and
jb
and
clc
and
iret
insl
subl
loopne
cmpsl
out
aas
out
lea
lods
ret
ror
xchg
xchg
aaa
shr
inc
les
mov
adc
sub
sahf
scas
mov
push
xchg
gs
xchg
sbb
mov
imul
out
iret
sti
data16
loope
fsts
xchg
and
mov
cld
call
inc
add
insb
or
mov
sub
daa
jmp
daa
fistpl
divb
xor
iret
out
sahf
rorb
mov
repz
inc
mov
push
inc
push
jne
pusha
daa
sub
bt
jmp
mov
jno
pop
sbb
lods
in
lcall
mov
sbb
repz
xorl
mov
aad
jl
mov
xor
and
andl
addr16
xchg
jne
jbe
in
jge
negb
push
repnz
mov
fs
popf
jmp
inc
int3
or
ret
pushf
xchg
test
adc
gs
mov
mov
jecxz
ds
bound
daa
scas
fs
cld
out
inc
cs
adc
call
rorb
in
adc
outsb
push
sub
pop
or
fmul
punpckhwd
push
test
out
jno
dec
fcmovnbe
mov
rcrl
loopne
pop
jecxz
cmp
imul
fdivrs
movsb
out
je
shlb
pusha
push
pop
push
cmpsb
jmp
hlt
or
xchg
pop
dec
mov
lds
inc
imul
ret
jmp
sti
push
adc
scas
and
inc
dec
fwait
push
test
in
xchg
or
cmp
xchg
add
xchg
sti
pop
stc
sbb
jbe
or
mov
daa
cmpsb
lret
mov
rorl
xlat
xor
pop
or
lds
stc
lock
das
push
fildl
mov
or
stc
jb
aad
rolb
cmp
test
test
int3
shlb
sti
repz
and
in
pushl
push
and
roll
mov
daa
test
test
xor
ljmp
test
aas
sbb
push
adc
aas
pop
daa
and
mov
insl
incl
lret
jg
cs
sbb
pop
jbe
pop
das
loop
pushf
pop
inc
stos
lea
in
mov
mov
into
imul
sbb
pusha
out
fidivs
not
pop
mov
std
cld
mov
and
fists
pop
cld
ret
in
fcmovu
fisubrl
es
adc
mov
dec
and
mov
jmp
lahf
icebp
aas
imul
inc
xchg
fisubs
or
aas
mov
out
ret
pop
cmp
sarl
and
adc
adc
cs
ja
test
xchg
inc
aas
popf
push
dec
pop
adc
sub
insb
jge
imul
inc
xchg
xchg
sub
out
sbb
mov
jo
push
pop
jo
xchg
mov
ja
add
ss
push
and
cltd
push
pop
sahf
sbb
mov
scas
iret
inc
lea
gs
dec
and
inc
movsb
or
lock
xor
cmc
jbe
notl
lahf
cld
mov
loopne
lock
xchg
fistps
push
test
in
clc
pop
sub
add
add
or
cmp
out
arpl
fidivl
pop
out
icebp
mov
sub
fidivl
push
loop
xchg
inc
jne
adc
lods
insb
ss
mov
push
and
mov
jg
decb
addl
xchg
add
sti
xchg
lea
lret
dec
or
jmp
inc
mov
sti
pop
mov
mov
cmp
add
mov
scas
insb
push
call
mov
int3
pop
push
sub
loopne
push
popa
sahf
inc
mov
into
nop
sub
xchg
notl
pop
jbe
cmpsl
popa
dec
mov
sti
sub
xchg
imul
pop
or
imull
jnp
cmp
loope
rcll
sbb
std
dec
inc
sbb
inc
fidivl
shrb
test
jecxz
pop
mov
ret
fwait
pushf
lret
lds
inc
ret
js
stc
fnstsw
cmp
pop
dec
js
jae
push
jb
and
push
sbb
sbb
push
xor
pop
dec
dec
jne
ret
push
adc
out
push
lret
lods
or
int
outsl
in
cli
mov
dec
fadds
mov
addr16
mov
inc
jmp
cltd
adc
cli
pop
or
adcl
leave
jb
add
sbb
dec
mov
jnp
jnp
add
or
add
call
lcall
jle
xchg
cmp
push
push
cli
mov
mov
adc
testl
leave
lcall
int
hlt
cmp
push
mov
and
jb
fcomps
hlt
sub
lahf
jns
add
cmp
repnz
mov
push
mov
push
ds
lds
outsl
leave
add
pop
sbb
lea
and
into
insl
dec
cld
fimull
dec
xchg
addr16
push
cltd
push
mov
in
inc
push
das
and
pop
sbb
fdivs
sbb
dec
out
inc
mov
andl
test
fldl
sbb
adc
push
push
sbb
testb
mov
outsl
or
inc
sub
sarl
adc
lea
in
lods
fistpll
xchg
add
jg
cmp
out
lds
sbb
jb
xor
movsb
mov
pop
sub
push
insl
mov
add
cld
xchg
mov
inc
pop
ljmp
pop
dec
adc
sbb
cmpsl
jb
imul
shll
fstl
cwtl
fistpll
mov
mov
push
pop
lret
aam
xchg
int
push
sub
pop
xchg
mov
fstl
int
out
push
out
jge
lock
or
push
mov
adc
lret
push
mov
lret
xor
aaa
fs
scas
jmp
imul
cmp
incl
or
dec
mov
orl
gs
push
xchg
out
mov
arpl
add
popa
push
mov
aad
xchg
repnz
xor
lock
sub
sti
or
jmp
rcrl
xchg
push
mov
inc
outsb
lcall
lods
sbb
aam
lock
lods
sbb
xor
mov
xchg
outsl
sub
sbb
mov
mov
xor
popf
xchg
sbb
inc
out
sar
into
pop
inc
or
inc
test
push
ljmp
cmp
cmp
stos
es
into
cmc
add
int
jmp
icebp
icebp
in
das
in
xchg
dec
mov
dec
fcmovbe
xchg
mov
scas
into
mov
mov
push
jle
cmp
jae
lcall
jmp
mov
ja
enter
pusha
sbbb
sbb
mov
daa
mov
lds
jecxz
loopne
cmp
mov
sbb
xchg
push
movsb
out
xor
movsl
jl
or
pop
dec
push
orb
push
xchg
cmp
gs
out
ret
mov
xchg
mov
xor
ret
rclb
or
mov
pop
sub
insl
mov
imul
lods
lds
sub
outsb
lods
xchg
mov
xchg
push
loope
in
repnz
ret
aaa
sti
in
sub
mov
loop
inc
addr16
mov
fmul
mov
jge
pop
push
sub
inc
loop
xchg
inc
fildll
aaa
push
pop
sahf
sbb
outsb
xor
xor
lret
add
sub
add
cs
lds
out
sbb
mov
xor
ss
lock
pop
push
mov
lea
jp
lret
pop
pop
fwait
inc
inc
mov
shrl
jbe
call
std
push
dec
jns
addr16
cmpsb
xchg
shrl
sti
adc
cltd
call
mov
ret
inc
mov
add
fld1
fwait
sub
aad
add
jg
in
cmp
dec
mov
push
and
add
xchg
out
jp
ja
pop
push
dec
pop
adc
das
iret
mov
subl
js
pop
pop
out
out
stos
jmp
pop
and
xchg
mov
or
insb
push
jo
jb
scas
bnd
pop
std
add
sub
inc
ljmp
addb
scas
push
adc
push
test
aam
dec
push
jmp
je
scas
push
push
xchg
dec
inc
add
lock
scas
pop
and
fisubrl
sahf
push
sbb
out
out
xchg
xor
loopne
and
pop
push
testb
ror
fimull
data16
not
pop
out
dec
scas
icebp
fstps
inc
movsb
scas
cmp
fildll
pop
mov
aam
jno
xchg
mov
lret
int3
jp
sub
cmp
fwait
scas
mov
dec
jle
sbb
inc
push
data16
mov
jge
sbb
xorb
fwait
mov
jecxz
and
inc
pop
push
sbb
sub
fisubrl
sub
pop
jbe,pt
jge
lcall
mov
push
cmpb
push
jo
sub
xor
sub
jmp
and
add
adc
xchg
cmpsb
scas
xor
stc
jmp
insl
mov
push
adc
fldz
fnstenv
mov
xchg
int3
aad
push
sbb
test
je
adc
push
xor
mov
sbb
push
out
insb
and
adc
imulb
js
xchg
icebp
hlt
outsl
mov
in
cmp
test
push
mov
test
ret
lods
fs
rolb
adc
popa
inc
loop
cli
nop
lds
inc
arpl
xchg
ret
inc
popa
jmp
mov
jp
or
cmpsb
pop
mov
in
arpl
pop
mov
stos
cmpsl
xchg
or
xor
cmc
fistpll
addr16
mov
mov
xchg
mov
cmp
ljmp
mov
pushl
sub
cmp
push
xchg
mov
push
repnz
test
mov
icebp
add
mov
ljmp
dec
cmp
das
push
daa
fistpl
push
lret
fiaddl
mov
xchg
shrl
daa
inc
sbb
insl
sub
dec
mov
out
push
or
dec
pop
xor
sbb
inc
sbb
xor
cmpsb
and
xchg
adc
adc
inc
dec
sti
sbb
aaa
sti
mov
clc
jmp
add
sub
and
dec
inc
in
call
je
cmpsl
aad
xor
dec
cmc
dec
xchg
insl
and
lret
pop
into
jae
cmc
cmpsb
adc
xrelease
scas
jp
or
loope
dec
adc
es
add
cmpsb
or
fildll
sub
inc
int3
sub
lods
mov
fstps
jg
stos
idivl
pusha
scas
scas
and
aaa
mov
into
stos
jmp
les
dec
lret
mov
xchg
fcompl
push
or
dec
pop
daa
fs
adc
loopne
xlat
inc
add
add
pop
jmp
inc
std
insl
and
divb
aad
mov
and
aaa
aaa
inc
in
inc
mov
mov
dec
xchg
loope,pt
add
mov
xchg
aaa
jecxz
jbe
out
mov
es
adc
xor
pop
out
jb
push
mov
popa
pop
or
jmp
dec
es
cs
scas
loope
mov
aad
jp
stc
int
jp
fdivrl
lea
push
mov
xchg
lock
xchg
inc
dec
cmp
mov
xchg
mov
and
xorb
dec
mov
or
rcl
mov
fnstcw
cmpsl
int
mov
test
mov
or
mov
movsb
lods
jmp
in
mov
leave
das
ss
xor
aaa
cs
cs
xor
mov
dec
ljmp
jne
rdmsr
int3
adc
ja
pop
repz
sarl
mov
sbb
lods
pop
scas
xor
sub
ds
not
ljmp
push
in
xlat
pop
jp
aaa
xor
pop
or
mov
or
xchg
aas
cmp
mov
mov
arpl
dec
dec
inc
out
sahf
insb
push
rolb
mov
subb
data16
lea
sub
dec
add
xor
or
sub
sub
lock
stc
fwait
push
lcall
repz
push
mov
xlat
pop
movsl
cld
dec
ss
outsl
push
sbb
ss
xchg
mov
enter
jb
insl
movsb
out
gs
scas
in
mov
loop
notb
push
cmp
dec
orb
stos
lods
cmp
addr16
jne
ficompl
push
xor
repnz
idiv
jne
mov
es
xorb
pop
fdivrs
or
mov
pop
lcall
xchg
or
ja
in
and
pop
adc
pop
lods
xorl
fstpl
hlt
mov
inc
stos
jo,pn
js
dec
mov
sub
outsl
daa
scas
sbb
setl
fs
adc
mov
mov
push
xchg
nop
test
xchg
sub
or
sub
dec
fadds
mov
lahf
mov
mov
stc
sbb
lret
ds
mov
ds
lock
and
inc
movsl
les
int3
scas
jmp
pushf
dec
das
sub
faddl
aas
imul
mov
add
lea
pop
pop
nop
adc
adc
int
and
test
test
leave
icebp
lds
aaa
test
or
xchg
loope
call
pop
out
and
xchg
pop
adc
outsl
mov
enter
stc
stc
mov
rcrl
ret
mov
adc
push
neg
mov
jg
out
mov
data16
rolb
push
jno
les
lret
cmp
push
ss
or
xor
std
pop
imul
mov
dec
aaa
push
xchg
ds
les
addr16
mov
adc
adc
mov
pop
xor
je
mov
daa
pushf
cmp
sub
push
test
xchg
aad
lods
jecxz
cmc
xor
jle
int3
or
movsl
xchg
sbb
mov
hlt
xchg
add
ficompl
pop
loopne
cmp
and
sti
popf
hlt
shr
mov
insl
adc
movsl
les
pop
push
xor
pop
adc
pop
imul
push
enter
fidivrs
movl
inc
xchg
mov
xchg
mov
shl
mov
icebp
push
fwait
insb
test
jae
jmp
test
jb
jno
cwtl
mov
adc
jl
mov
data16
pop
push
inc
dec
test
xor
jl
sbb
jmp
push
aad
mov
sbb
push
notl
add
push
pop
in
cmp
mov
fistpl
jmp
mov
std
mov
mov
add
cld
js
mov
xor
adc
std
lods
bound
in
sub
xchg
sub
pusha
push
dec
mov
ds
mov
mov
cltd
xor
sbb
das
test
sti
dec
adc
mov
push
jge
mov
mov
add
in
push
inc
inc
cmp
mov
pop
jb
pop
inc
mov
movsl
shlb
cmp
adc
cmp
in
xor
jecxz
pushf
fimull
shll
mull
push
push
loop
xchg
xchg
jmp
cmp
jecxz
mov
in
jecxz
int
xchg
pushf
sub
adc
std
pusha
dec
js,pn
out
mov
mov
int
imul
sub
cmp
leave
adc
mov
xlat
out
in
jmp
inc
xchg
and
fsubs
xor
xor
mov
das
push
xor
out
lock
push
into
addr16
out
inc
hlt
aam
ss
shlb
fcomp
xlat
jae
ja
decl
jo
je
sub
mov
imull
and
add
add
add
mov
dec
cwtl
mov
add
rcll
push
flds
pop
push
add
or
inc
xchg
cltd
mov
js
jmp
mov
pop
inc
push
xor
popf
add
dec
mov
sti
leave
jle
fisttpll
ljmp
xor
xchg
lds
add
in
stos
jne
loopne
lcall
mov
push
push
cmp
icebp
bound
cwtl
call
sub
xor
shrb
and
jecxz
pop
dec
mov
mov
imul
adc
sbbb
pop
es
leave
stc
addr16
or
std
ljmp
rorb
nop
shlb
jmp
xchg
movb
lret
lcall
jb
shll
stos
xor
xchg
xchg
dec
push
and
out
iret
icebp
punpckhdq
mov
imul
mov
scas
adc
fwait
xor
and
es
je
jecxz
icebp
mov
popf
in
pop
jo
cmc
dec
inc
mov
push
icebp
faddp
xor
xor
loop
rorb
fwait
sub
xchg
and
enter
pop
addb
mov
shlb
hlt
adc
mov
and
jmp
das
and
or
sbb
ret
lcall
roll
je
js
les
jle
pop
cmp
dec
inc
fiaddl
sub
jnp
ljmp
ds
add
loop
jno
add
xor
ret
add
lret
loopne
jmp
scas
adc
fidivl
mov
stc
out
sahf
lock
lret
jle
pop
popa
pop
mov
add
aad
je
sbb
out
aas
iret
clc
adc
movsb
add
sub
lahf
and
mov
outsb
mov
jmp
sub
jmp
cmp
test
mov
jl
bound
and
jo
pop
cltd
pop
jno
mov
mov
jo
lahf
sub
push
popf
pusha
lods
jle
mov
inc
out
sub
xor
adc
jp
cmpsb
and
mov
lcallw
dec
fwait
lret
clc
jge
imul
into
jae
pop
ret
jmp
dec
in
shll
mov
outsl
movsb
icebp
mov
lods
cli
xchg
mov
jp
xor
jbe
iret
lods
mov
cmpsb
or
push
adc
enter
sbb
mov
in
fwait
cmp
push
xor
jbe
pusha
lcall
test
inc
lods
fsubrl
outsl
push
scas
testl
in
in
cmp
decb
ljmp
xchg
sub
ss
cwtl
dec
pusha
lods
mov
mov
add
cs
sbb
or
imul
idivl
ja
jae
imul
xor
mov
loopne
lock
cmc
jecxz
adc
mov
ljmp
inc
add
lock
mov
in
push
aas
sub
cmp
sbb
out
out
bound
xor
fdivrl
cs
int3
inc
pop
pop
mov
ljmp
lret
xchg
stos
das
mov
fcmovu
jg
leave
jl
jae
or
arpl
sarl
add
and
sub
mov
jg
test
push
je
jp
psllw
mov
pop
or
push
movsl
jecxz
iret
xchg
divl
sbb
pop
out
test
mov
aas
dec
test
mov
or
into
aad
mov
repz
nop
lds
les
inc
cmp
xchg
sarl
mov
mov
iret
fidivl
mov
lds
xlat
popa
xchg
fldt
push
cltd
into
inc
data16
sbb
cmp
loopne
fs
lods
int
add
xor
ljmp
dec
xor
pop
nop
test
sub
mov
sbb
jmp
or
lret
xchg
push
sbb
pop
ss
mov
scas
clc
test
jecxz
and
test
popf
into
xlat
bound
or
loop
adc
xchg
aas
mov
push
nop
mov
loope
cmp
xchg
jle
or
sti
mov
jae
scas
movsb
inc
cmp
repz
fcoml
in
mov
mov
fldcw
inc
popf
or
das
std
add
int3
jns
decl
shrl
pop
adc
inc
sbb
loopne
mov
pop
jmp
imul
push
dec
es
leave
dec
inc
aas
pop
loopne
push
rclb
push
and
mov
daa
gs
sub
data16
lret
mov
push
mov
inc
jae
sbb
into
dec
repnz
ljmp
mov
rol
mov
sub
sbb
leave
je
stos
ss
add
aam
xchg
les
pop
dec
adc
sub
sbb
scas
jnp
push
cltd
xchg
lcall
out
xorb
jle
sbb
and
push
call
push
test
add
and
cs
and
sub
int
inc
js
out
xor
jo
push
cmp
aaa
mull
loop
cmpsb
loop
repnz
sbb
xchg
jne
add
lret
sub
int3
xchg
pop
pop
outsb
jno
jecxz
jmp
or
or
lea
lods
std
pop
sbb
cmp
mov
fstpl
outsl
mov
add
xor
insb
xlat
adc
leave
int
xor
lcall
idivl
ret
sub
adc
and
sub
mov
mov
decb
sub
fs
flds
and
fidivrs
xor
mov
jp,pt
lcall
and
cli
xchg
mull
out
pop
add
sti
sbb
xchg
aam
fisubs
jmp
scas
hlt
pop
aaa
pop
dec
cli
xchg
rorl
mov
out
jbe
movsl
aam
xlat
mov
xor
push
and
pusha
fildll
add
es
mov
cmpsb
mov
ja
pop
cld
sbb
imul
ror
and
xor
adc
in
call
mov
mov
out
or
sbb
clc
fs
aas
inc
xor
mov
sub
or
aam
cmp
bound
mull
in
sbb
pop
ss
mov
call
sbb
popf
out
out
dec
ret
push
lcall
mov
cli
lret
hlt
lock
xor
xor
scas
movsb
repnz
in
cmpl
inc
inc
lea
roll
lods
jge
push
adc
xchg
je
mov
dec
inc
pop
jne
dec
adc
cmp
loope
fsubs
jne
cmp
mov
jp
cs
scas
jo
and
jae
mov
ja
pop
daa
gs
test
pop
push
cld
push
sti
cwtl
and
jp
inc
sarl
or
aam
loope
in
mov
jne
fwait
sahf
test
xchg
pusha
add
repz
das
test
mov
inc
mov
sbb
repz
mov
insl
sub
lds
movsb
add
out
ss
cmp
xchg
ss
jbe
sub
lcall
or
aaa
pop
cmp
cmp
or
inc
inc
cld
fmuls
xchg
mov
in
cmp
cmp
mov
pop
fs
adcb
cld
jl
cmp
or
push
mov
and
pop
loope
dec
je
sbb
fists
out
ret
jnp
imulb
push
xorl
icebp
ret
sbb
aaa
and
movsl
les
cltd
imulb
xchg
jne
dec
stc
pusha
hlt
and
cwtl
sub
prefetch
add
movsb
sti
adc
loope
dec
into
js
aaa
add
push
sti
fimull
outsb
mov
inc
push
iret
cmpsb
enter
and
add
incb
jmp
cmp
inc
inc
pop
cmpsl
subl
shrb
fdiv
in
iret
int
push
cltd
or
or
dec
ret
stc
lcall
mov
aas
mov
sbbl
xchg
cmc
mov
int
pop
adc
repnz
jnp
adc
xchg
cmp
out
push
pop
lret
rorb
sbb
xchg
pop
cli
jae
rcll
sub
cmp
xchg
or
inc
nop
es
lock
cwtl
mov
aas
int
iret
divb
adc
jecxz
loopne
push
cmpsl
nop
dec
in
loop
cmc
push
jecxz
out
mov
pop
lret
jl
pop
xchg
bound
adc
inc
mov
xor
int
push
pop
stos
add
enter
sub
ljmp
dec
inc
mov
inc
cmp
pop
into
in
aam
mov
imul
inc
pop
pop
mov
cmp
jp
in
rcll
mov
xor
out
push
mov
call
sbb
cmp
pusha
mov
dec
test
mov
xor
mov
repnz
jnp
mov
fisubl
scas
push
cmp
lea
jmp
xor
fdivr
mov
mov
aaa
jne
xchg
cmp
cld
lret
testb
lock
push
test
arpl
lods
shl
mov
js
and
and
push
cli
cmpsb
push
push
add
mov
add
dec
mov
aas
dec
dec
pop
lock
sahf
mov
sahf
push
sbb
lds
pop
inc
pop
dec
xor
inc
xor
int
loopne
ja
in
js
sbb
inc
in
pop
mov
xchg
xchg
jno
push
xor
pop
imul
roll
sub
xchg
cmp
push
adc
mov
mov
mov
add
adc
test
cmp
movsl
xor
and
es
test
out
or
shlb
in
flds
scas
andb
movsb
and
fnstenv
out
push
nop
fwait
and
ja
cli
addr16
negl
mov
cmp
bnd
add
inc
test
lret
add
inc
jb
mov
sbb
adc
mov
ror
daa
loopne
test
rclb
push
repz
ret
jnp
in
ficompl
pop
dec
mov
mov
aad
lahf
faddl
inc
or
adcl
insl
cmp
cmc
adc
rcll
shrl
mov
sub
lea
mov
leave
mov
xor
xchg
out
cs
and
bswap
or
cmp
xchg
stos
ljmp
movsl
inc
std
dec
fs
jg
cmp
mov
xlat
push
or
rclb
mov
and
inc
push
lds
dec
clc
mov
out
fidivl
xor
mov
fst
data16
mov
fnstsw
inc
jge
repz
xor
out
sub
sub
jb
sti
das
dec
jecxz
push
cmp
push
daa
or
jns
xchg
lret
fstps
fucomip
sbb
pop
test
mov
xchg
xor
inc
rcll
pop
mov
mov
sti
call
inc
imul
notl
pop
movd
jge
push
or
adc
mov
adc
or
pusha
mov
lcall
xor
mov
mov
fwait
mov
repz
fwait
inc
dec
dec
repz
mov
mov
data16
push
inc
cmp
adc
mov
lahf
add
clc
cmpsl
xchg
mov
repz
add
and
pushf
fisttps
test
sub
inc
hlt
cmp
das
pop
loop
cltd
inc
mov
imul
and
pop
xchg
jmp
in
push
jae
fimull
add
rorl
add
pop
aas
xchg
dec
les
inc
push
mov
mov
es
xchg
sahf
aam
xchg
pushf
fnstenv
xor
enter
leave
je
scas
fdivrs
jbe
xchg
mov
xorb
sbb
mov
daa
leave
inc
pop
xchg
nop
shl
sub
inc
sahf
out
and
sbb
add
cmp
aam
fsubl
dec
sbb
test
out
cwtl
sbb
repz
pcmpeqw
mov
xchg
in
push
mov
enter
loope
loopne
xchg
aas
dec
xor
popa
mov
adc
lds
imul
and
les
xor
shrb
jl
xor
fisttps
mov
pushf
xlat
cmpsl
in
add
rorl
cli
rcrb
js
shlb
popf
mov
sbb
inc
outsl
xchg
pop
jl
or
adc
push
pop
cmpsl
ljmp
mov
mov
or
arpl
inc
test
add
pop
and
fcmovnbe
divl
fdivr
push
cmp
or
xchg
in
out
add
shlb
loop
fst
lcall
out
aaa
sbb
sahf
rcrb
push
pop
mov
bound
les
aaa
popa
dec
rcr
out
sti
es
popf
push
aas
mov
sub
outsl
call
pop
push
stc
shll
mov
sub
icebp
or
sarb
fimull
clc
and
js
call
cli
add
sbb
jne
andl
lahf
fsubr
rcrl
js
xchg
cmc
push
and
rcrb
outsb
xchg
in
cli
jno
xchg
mov
repz
add
imul
ss
daa
mov
imul
dec
lods
xor
imul
xchg
sbb
roll
fnstenv
idiv
outsb
sub
out
mov
adc
and
sbbb
adc
sti
js
mov
in
jge
push
std
pop
dec
pusha
or
out
mov
loopne
add
in
mov
mov
adc
cli
adc
adc
sbb
gs
xchg
or
fldt
xchg
nop
push
clc
and
jbe
push
xor
outsl
fninit
fdivl
pop
lds
lods
in
mov
rclb
push
adc
add
fs
inc
enter
jbe
cmp
mov
xor
mov
cmpsl
stos
dec
fisttps
rol
fwait
sbb
push
sbb
in
cmpsl
xor
mov
mov
rcl
and
insl
std
xchg
lds
mov
pop
ss
jae
jns
sbbb
cmp
and
gs
test
add
mov
das
xchg
xchg
mov
ficoml
or
add
stos
cwtl
lds
lcall
outsb
jbe
mov
pop
icebp
lret
sti
mov
xchg
nop
xchg
jle
imul
sbb
sbb
fcmovbe
iret
imul
dec
jno
cltd
mov
movsb
outsb
adc
jae
or
out
lods
pop
or
mov
rcll
pusha
pushf
adc
and
xor
hlt
sub
scas
pop
inc
dec
dec
cmpsb
add
pop
or
push
inc
cmc
popa
aam
lcall
or
jmp
inc
mov
popa
scas
aad
mov
jbe
mov
lods
jae
js
rcrb
sub
sbb
das
repnz
enter
insb
std
pop
rcrl
cld
icebp
inc
movsl
jb
and
mov
ds
lock
mov
mull
lds
es
ds
jns
lret
xlat
loop
or
repnz
fwait
inc
dec
push
ja
movsb
push
mov
mov
sbb
sub
jecxz
mov
es
and
mov
or
das
jbe
and
adc
sbb
or
mov
push
or
push
cmpsl
in
xchg
std
mov
and
mov
push
push
pop
cmp
stos
fxch
add
cltd
outsl
jae
mov
adc
or
pop
sti
mov
mov
imul
sub
sbb
pop
sbb
loop
or
jge
adc
push
sbb
xchg
repnz
outsb
push
xor
inc
nop
push
popl
mov
push
pusha
or
lock
outsb
lcall
cmp
xor
dec
imul
lds
mov
push
push
jge
xor
iret
push
loopne
jo
inc
fwait
mov
cmpsl
jle
clc
xchg
or
mov
dec
rcrb
inc
rorl
add
mov
sbbb
into
adc
or
push
pop
jp
jne
das
movsb
addb
mov
sbbl
push
dec
outsl
mov
inc
out
sub
out
fidivs
je
mov
data16
outsl
in
mov
arpl
xlat
jno
lret
mov
shl
or
nop
or
pop
add
cmp
or
cltd
mov
xchg
jno
lfs
jecxz
scas
adc
push
mov
cmpsl
addr16
mov
jmp
adc
sarb
mov
stos
gs
jns,pt
in
pop
dec
loope
mov
cmp
xor
sbb
xchg
or
gs
into
enter
fisttpl
pop
xchg
lret
sbb
orb
inc
ficompl
gs
and
cmpsl
mov
and
sbb
and
pop
call
aad
and
jle
dec
push
fdivs
popa
push
stos
inc
cmc
jecxz
mov
jnp
loop
bound
sub
mov
test
les
hlt
loop
adc
jl
dec
or
bound
push
add
cmp
or
adc
shr
and
inc
adc
test
push
push
imul
scas
mov
add
mov
mov
cltd
stos
sub
jg
xor
movsb
xchg
bnd
repnz
xchg
cmp
jo
fcom
adc
pop
dec
notb
sti
or
jge
shrb
jmp
lret
in
pop
pop
pop
sub
bound
addl
std
push
and
xor
xor
fcomip
in
or
flds
cltd
mull
decl
sub
mov
jne
sub
mov
lret
jb
in
loope
add
pop
jne
or
pusha
or
pop
cmp
pop
repnz
imul
mov
mov
mov
pop
lcall
shr
mov
sub
outsl
or
push
dec
xor
in
arpl
jl
jb
fstpl
inc
and
cs
dec
push
mov
xlat
int
or
push
push
and
jge
out
xchg
fwait
xchg
rolb
aam
dec
and
dec
das
sub
insl
mov
xadd
cwtl
cld
jp
les
ljmp
lahf
cmp
xchg
jecxz
stos
loop
push
dec
dec
ret
or
xchg
pop
lock
pushf
popa
sub
out
jle
or
lahf
data16
int
ljmp
in
cld
outsb
mov
stos
aas
subl
push
pop
movsl
mov
and
out
sbb
pop
mov
push
frstor
xor
jecxz
jno
fwait
pop
xchg
inc
ja
bnd
push
xchg
lds
pop
stos
cmp
mov
loopne
dec
mov
or
test
stc
cmpsl
mov
dec
mov
sarb
push
cltd
or
mov
jne
xchg
into
aas
cmp
cmp
ret
pop
sbb
push
mov
mov
mov
jp
fcomps
sub
xor
add
stc
jb
je
mov
cmp
lret
dec
mov
mov
in
dec
cmp
add
xchg
xchg
mov
sub
out
fistps
fwait
pop
iret
int3
outsl
xor
xchg
lret
iret
jno
mov
aaa
pop
sbb
clc
and
aas
mov
pop
sub
scas
inc
or
cltd
imul
mov
lret
sub
ds
jnp
sti
jmp
and
mov
cmp
xchg
cs
mov
out
jle
into
cmpsb
push
and
push
iret
inc
dec
vmovaps
pushf
or
mov
jo
sbb
arpl
loop
push
fs
xchg
or
jg
pop
sbb
mov
clts
jmp
jmp
decl
mov
fwait
stc
add
sahf
out
hlt
mov
sbb
subb
cmp
xor
xchg
push
insl
mov
jecxz
xchg
xor
iret
sub
sti
das
inc
iret
insl
test
aad
icebp
dec
sbb
xorb
rorb
sub
scas
sti
or
sti
jne
enter
divl
xchg
insb
dec
leave
jne
adc
out
inc
adc
lock
adc
xor
sub
test
out
cmpsl
es
nop
fiaddl
jge
ljmp
inc
lock
mov
mov
lods
test
pop
push
jle
mov
jp
inc
xor
fdivrs
cltd
jno
mov
test
add
loopne
adc
ret
sub
xorl
jle
adc
mov
dec
jno
xor
lret
adc
and
shrb
xor
sbb
and
mov
ret
add
and
lret
mov
push
mov
jo
fsubr
dec
xchg
and
insb
ret
jp
xor
fnstcw
xor
push
sbb
mov
xchg
shr
jp
jecxz
rcl
fistpll
or
and
and
sub
jb
or
testb
scas
mov
arpl
rcrl
dec
movsl
adc
lahf
inc
sbb
fdivs
adc
into
jge
ss
ficoml
stos
jbe
and
outsl
sbb
loope
leave
arpl
gs
mov
pop
mov
jmp
lds
mov
xor
cmp
sub
jp
mov
and
int
and
pop
pusha
int
mov
push
dec
test
and
pushf
mov
popa
fcmovnbe
fistpl
pop
icebp
jmp
xchg
and
mov
sbb
dec
mov
sub
xchg
in
sub
fisubrs
xchg
dec
in
aad
jno
data16
addr16
mov
leave
sub
sub
xchg
aaa
ficomps
out
iret
inc
mov
xchg
xchg
in
fidivl
rep
leave
aas
lahf
cltd
mov
push
cmpsb
mov
repz
cmp
mov
jmp
addb
ja
sub
pop
ret
std
ss
outsb
lret
mov
inc
pop
jb
push
hlt
lahf
cs
lds
cmp
jns
lcall
lcall
inc
adc
xorb
out
dec
push
cmpsl
dec
xchg
mov
xchg
popa
jg
aad
or
sub
inc
jbe
icebp
push
mov
xlat
scas
repnz
loop
les
sub
or
cmp
enter
jmp
outsl
inc
push
fistl
lea
out
jae
cmc
ficoml
or
pop
imul
sbb
push
mov
dec
xor
fwait
push
out
inc
pop
mov
nop
lret
ret
cmp
dec
mov
mov
jle
pop
lock
insb
pushf
mov
dec
into
aas
dec
or
arpl
xchg
sub
mov
out
xchg
xlat
sub
hlt
pop
push
bound
xchg
xchg
repnz
mov
jnp
outsb
or
sub
ljmp
mov
xor
inc
push
inc
mov
imul
adc
and
cmpb
sbbl
add
sbbl
lahf
les
arpl
sbbl
inc
jp
pop
dec
xor
sub
fiadds
mov
dec
test
fisubs
adc
cmp
pop
jbe
xor
test
adc
jl
sbb
xchg
cmp
cltd
mov
pushf
xchg
outsb
outsl
arpl
dec
pop
pop
xor
jb
ljmp
sti
mov
out
pop
testb
shrb
loop
inc
cmpsb
pop
pushf
sbb
shlb
mov
hlt
fsubs
xor
cmp
es
pop
repz
jle
sub
iret
arpl
data16
pop
sti
fs
push
xor
pop
mov
adc
and
inc
js
jo
pop
test
inc
in
inc
arpl
js
in
leave
adcb
inc
mov
dec
sub
pop
mov
lret
repnz
jno
mov
ret
cltd
das
and
cmp
sti
push
sbbb
aad
nop
lcall
and
dec
xor
movsb
ret
jg
cmpb
push
mov
cmp
clc
inc
push
aaa
cmp
adc
push
fstpt
int3
sub
sbb
mov
movsb
mov
enter
test
outsl
ficompl
loop
sbb
dec
adc
jnp
cwtl
scas
fldt
arpl
add
or
dec
and
repnz
sahf
inc
xor
xor
xchg
ds
das
sar
in
aaa
xor
cld
cld
ret
mov
and
or
roll
push
fs
sub
es
lods
cmp
xchg
xchg
xchg
lock
pop
xlat
mov
dec
xchg
or
fdivs
add
jnp
mov
mov
test
lahf
push
iret
hlt
test
adc
xchg
xchg
movsl
rcl
push
cmp
xor
dec
scas
in
jecxz
mov
push
addr16
inc
lds
mov
push
add
mov
cmpl
test
sarl
divl
repnz
xor
push
mov
inc
push
sbb
cmp
js
sub
mov
in
repz
and
push
xchg
iret
loop
dec
pop
insb
sbb
aam
repnz
cld
add
push
xchg
or
xor
xchg
std
push
loope
and
nop
push
loop
aaa
mov
loopne
pop
push
sbb
and
int
and
sub
shr
add
stc
xchg
lods
or
pop
xchg
push
xchg
mov
test
stos
test
cli
cltd
sbb
cmpsl
jns
scas
pop
les
and
cmp
or
je
pop
jb
ds
dec
pop
sti
test
loope
mov
daa
and
xchg
outsl
inc
dec
mov
mov
fucomip
int3
shl
push
mov
out
jne
dec
sbb
movsb
pusha
nop
cwtl
add
mov
pop
int
arpl
cmp
fidivrl
testl
rcr
cmpsl
mov
jmp
xchg
push
push
xor
cmp
dec
push
dec
decl
and
add
rclb
nop
dec
test
adc
add
jecxz
dec
imul
movsb
cmpsl
std
cmp
add
out
enter
cmp
imul
arpl
outsb
ds
shlb
callw
adc
add
jp
xchg
fdivrs
and
push
and
and
and
adc
push
push
mov
inc
int3
daa
xchg
mov
jae
sub
dec
xchg
jecxz
outsl
cmpsb
loopne
fsubrp
sbb
pop
mov
notl
and
shl
lods
and
add
out
and
mov
mov
add
in
mov
pmaxub
sub
inc
fsubr
inc
xlat
aad
pop
hlt
or
imul
lea
xchg
add
jge
mov
rcll
iret
ja
addb
mov
shlb
inc
test
les
adc
call
add
mov
cs
les
and
cld
xor
inc
sahf
out
out
movsb
lods
insl
and
lahf
adcl
cmp
mov
nop
insl
aaa
jmp
fwait
xlat
mov
aaa
fnstsw
insb
and
inc
ret
push
std
ljmp
fiaddl
mov
jp
nop
jb
divl
xor
inc
inc
fisttps
pop
mov
mov
aaa
mov
inc
mov
add
insb
jo
pop
sbb
mov
fs
scas
pusha
imul
shll
les
stc
pushf
cwtl
push
fidivrs
push
lods
jmp
and
fidivs
bound
and
push
mov
and
jp
out
lock
int
and
test
jnp
popa
or
inc
dec
mov
popf
jge
and
insl
inc
mov
bound
push
xchg
in
add
mov
xchg
jb
out
cltd
outsb
test
bound
out
mov
push
andl
mov
cld
dec
test
push
mov
fdivp
ficoml
fwait
push
jle
cltd
icebp
pop
sbb
popl
inc
lahf
popl
sbb
or
popa
push
lds
testl
jns
adc
fdivrl
inc
je
rorl
int3
and
sbbb
adc
cmp
mov
clc
call
add
notb
mov
es
stos
and
mov
mov
adc
ss
add
pop
rorl
jno
cmp
sti
dec
aad
pop
fistpl
push
frstor
shlb
leave
es
sbb
stos
mov
rcll
test
es
lea
imul
cmp
insb
sub
pusha
sub
and
in
xchg
imulb
jle
dec
pusha
add
inc
sarb
js
pusha
fistps
outsl
mov
jbe
insl
mov
cs
data16
push
insb
cwtl
cmp
ret
out
inc
imul
and
pop
in
fldt
sub
jae
nop
add
mov
jl
icebp
fstpl
or
ljmp
inc
orl
movsb
loopne
add
test
and
sarl
pop
ja
pop
pop
pusha
mov
in
jmp
add
adc
add
mov
out
sub
popf
in
js
sarl
adc
pop
addr16
inc
push
stc
les
repnz
cmp
inc
mov
bound
arpl
inc
lea
and
popf
aam
push
xor
loop,pn
ret
mov
cmovge
pushf
and
jmp
and
add
or
jbe
loopne
xchg
sti
int
mov
add
cli
leave
jg
jo
fwait
idivb
mov
adc
and
xlat
xor
dec
mov
fistpl
adc
add
test
lahf
lret
inc
pop
jp
jne
ret
cmp
xor
add
sti
pop
add
pop
adc
roll
and
psubusw
loop
xchg
or
pop
test
jecxz
int
jge
test
adc
xchg
push
mov
mov
jbe
ret
cwtl
scas
aad
mov
in
lcall
push
inc
imul
ljmp
push
inc
jne
mov
fistpl
push
xor
sub
mov
test
sbb
js
cmp
cs
mov
dec
xchg
and
cmp
inc
xchg
cli
sbb
mov
fidivl
movsl
clc
cmc
cwtl
fiadds
lret
cmp
lret
lods
jecxz
mov
repnz
test
outsl
imul
inc
or
les
sub
popa
dec
or
lds
dec
push
sub
fcmovnu
push
shll
adc
adc
into
sarl
dec
sbb
jns
mov
jmp
xor
and
and
dec
icebp
mov
rorb
mov
mov
inc
pop
mov
sub
or
rcl
xor
pop
or
dec
addb
xchg
das
mov
ficomps
andb
xor
sub
cmpsl
adc
mov
iret
mov
loope
in
mov
movsb
int
js
lret
lds
fwait
dec
lock
dec
mov
cmpsl
test
aaa
jle
xchg
insb
dec
adc
xchg
mov
jp
icebp
test
into
mov
fwait
add
cmp
scas
int
ja
pop
dec
pop
dec
push
xor
adc
pop
sub
push
mov
ss
push
pop
jbe
and
sti
push
idivl
mov
mov
and
cmp
or
mov
jo
fldl
outsb
jo
adc
popa
bound
mov
or
cmc
stos
mov
jne
lcall
mov
add
std
out
filds
sub
inc
push
je
add
and
popf
loope
push
outsb
push
cltd
fisttps
and
sbb
shlb
sbb
jb
fwait
mov
xlat
fisttps
sub
ret
lods
push
mov
ror
pop
jno
add
movsb
push
xchg
sbb
xor
add
inc
add
in
into
xlat
push
mov
cmpsb
lret
ds
push
xor
addr16
or
xchg
or
enter
cltd
or
enter
inc
cmp
ret
mov
push
cmc
pop
mov
dec
std
sbb
sahf
lret
enter
mov
sub
sahf
mov
in
mov
daa
inc
mov
jns
adc
or
jg
add
in
sbb
pop
xor
sti
es
pop
sti
cwtl
dec
aad
push
dec
subl
and
in
scas
push
xor
xchg
lret
mov
test
mov
out
add
negb
dec
insl
pop
stos
xor
mov
push
movsl
sub
outsl
cmp
cmc
xor
or
dec
movsb
sarb
fs
cs
jp
inc
cmpsl
jle
or
mov
fldcw
bound
inc
cmpxchg
sbb
pop
into
lret
in
cmp
cmp
aas
fstpt
lret
jae
arpl
shrl
or
push
jmp
jae
pop
add
sub
insb
rorb
js
js
push
xchg
push
mov
or
fwait
cli
jae
cmpsl
mov
or
push
shl
shufps
sbbl
cmpsl
pop
arpl
add
fsubl
mov
fstl
sbb
gs
into
ja
xor
fstl
push
pop
cltd
mov
push
scas
adc
int3
je
cwtl
adc
cmp
jne
jg
cltd
ljmp
push
inc
cmp
xchg
jmp
andb
out
jb
popf
add
add
cmp
scas
push
stos
ficompl
mov
fcoms
mov
push
gs
inc
mov
dec
insl
sub
jmp
push
mov
daa
imul
dec
loop
lods
push
shll
mov
aam
xlat
repnz
jmp
aam
pushf
jecxz
int3
ret
aad
sub
loop
aas
or
or
int3
mov
pop
ror
gs
test
and
adc
cltd
mov
xor
push
ret
cwtl
stos
sbb
mov
sbb
shll
cmpsl
or
cmpsl
iret
add
fistpl
loope
imul
lods
push
mov
shll
cld
outsb
sti
cmc
je
lret
test
cld
mov
movsb
cmp
and
push
and
mov
xchg
mov
dec
loop
je
or
push
imul
pop
scas
scas
mov
cmp
jnp
push
sub
imul
mov
scas
sub
inc
or
out
pop
aad
insl
ljmp
push
scas
fnsave
mov
fcmovnbe
mov
stc
push
and
dec
jne
ret
stos
sub
in
stos
arpl
mull
inc
pop
ss
sbb
sub
or
fsts
loope
or
mov
mov
pusha
repz
sarb
sahf
xchg
xchg
sbb
leave
adc
push
pop
inc
push
sub
or
pusha
lea
fdivrl
jns
idivl
repnz
push
jbe
or
lods
sub
mov
push
mov
mov
inc
xchg
fisttps
xor
dec
stos
cltd
rdmsr
daa
push
inc
aaa
jb
or
repnz
rcrb
dec
jle
sub
movsl
sbb
lea
std
sbb
sub
outsl
in
mov
sub
in
mov
das
lret
inc
repz
aas
jns
cld
fimuls
cmp
loopne
jl
mov
arpl
jne
dec
pop
inc
pop
adc
mov
stc
dec
dec
shlb
jb
cmpsb
mov
jbe
cmp
in
sub
add
jle
inc
push
push
clc
cli
push
adc
idivl
repnz
inc
icebp
xchg
ljmp
andl
les
into
shrl
dec
sahf
fsubs
xor
cmpsb
test
das
mov
cmc
xchg
xchg
adc
push
cmp
push
pusha
or
xchg
jp
mov
jmp
cmpsl
insb
je
jge
push
inc
add
popf
jmp
test
xchg
sub
add
push
repnz
and
jns
cwtl
into
rcrl
ret
nop
mov
imul
sarl
push
cs
fisubs
cmpsb
jp
push
sub
insl
mov
and
in
cmp
mov
out
mov
inc
mov
pop
jnp
inc
push
in
fldcw
decl
adc
ljmp
mov
cmpsb
mov
mov
pop
xor
mov
mov
mov
shll
movsl
jg
mov
lcall
es
loope
dec
jae
lock
pop
mov
nop
lret
mov
std
cmpb
push
or
xchg
sahf
dec
xchg
push
dec
cs
lahf
xchg
in
mov
leave
sub
daa
fs
xchg
mov
stos
sbb
push
push
push
movsb
cmc
cmp
hlt
shll
movsl
xchg
or
adc
jns
cmp
mov
icebp
sbb
shrb
mov
inc
ja
adc
pop
push
mov
add
lea
mov
dec
clc
neg
or
pop
test
sub
mov
inc
lahf
or
mov
loopne
and
fistps
into
fcmovnb
fildll
inc
xchg
mov
adc
or
pushf
cmp
aaa
push
dec
lds
push
insb
push
cmp
movsb
mov
repz
inc
and
and
out
adc
loope
stos
sub
pop
lret
jge
xchg
cmpsb
loop
cmc
and
test
push
enter
std
add
popf
mov
jle
add
xorl
popf
sbb
dec
pop
aaa
popf
pop
pop
push
repnz
xor
in
xchg
xor
mov
leave
adc
lret
je
outsb
pop
mov
pusha
sbb
xchg
sbbb
xchg
jge
add
mov
lcall
lahf
jae
fiadds
ljmp
addr16
adc
sub
mov
xchg
pop
lahf
nop
pop
adc
jnp
mov
sub
lods
cld
jnp
fs
test
cltd
rclb
dec
inc
and
xchg
test
sbb
xlat
adc
repz
mov
arpl
popa
pop
rclb
and
imul
aas
or
ljmp
test
inc
gs
xor
cmp
fwait
sbb
jmp
pushf
daa
and
dec
push
rcll
ljmp
popf
or
or
int3
sbb
loope
clc
int
cmc
jl
mov
inc
xchg
mov
xor
or
in
jge
lcall
fiadds
add
frstor
test
ret
jo
sbb
sbb
inc
jecxz
pop
fldln2
fstps
inc
mov
into
xor
paddusb
sub
sarb
rcrb
mov
and
cmpsl
lock
je
imul
int3
xor
sbb
or
jno
mov
mov
ss
sbb
push
mov
mov
and
jns
test
add
movsl
mov
clc
imul
push
orl
movsl
mov
roll
and
fimull
adc
hlt
cmc
xor
push
pop
sarb
cmp
pop
nop
mov
cld
lret
mov
cltd
ret
and
jns
or
inc
inc
cmp
mov
mov
cmp
sub
jns
ja
psadbw
pushf
faddl
fmuls
mov
and
jo
cmpl
or
mov
push
scas
nop
nop
push
push
and
call
inc
out
gs
subb
dec
nop
fmull
enter
adc
lock
xorl
lock
mov
pushf
push
aaa
sti
push
add
push
insl
incb
call
shrb
subl
jbe
cmpsl
lahf
imul
sahf
jns
bnd
es
sub
addr16
mov
sbb
and
xchg
popa
mov
lea
roll
scas
inc
and
pusha
mov
jl
xor
push
subl
pusha
jns
aam
cmp
push
pop
js
rolb
dec
mov
decb
ss
out
xchg
pushf
in
daa
jmp
in
test
sti
add
popf
enter
icebp
mov
sbb
pop
push
jmp
mov
in
jp
scas
sahf
out
sub
adc
pop
test
jnp
push
insb
inc
jno
adcb
or
test
mov
fcmovu
or
das
inc
std
ret
in
enter
or
cmp
faddp
adc
mov
test
aas
aaa
ret
push
pop
and
cli
pop
add
lret
mull
fmull
ds
les
adc
inc
mov
rorb
mov
dec
arpl
in
lret
icebp
aad
imul
ljmp
lcall
imul
scas
cmp
repnz
sbb
out
sbb
add
pop
lods
pop
addl
enter
fcmovne
sub
or
daa
jbe
and
xor
ffree
and
fs
adc
fmull
orl
sub
lock
jge
xor
pushf
cld
hlt
pusha
mov
sub
arpl
jo
cmp
fisubl
sub
dec
mov
sub
mov
sub
adcb
aaa
xchg
stos
int3
scas
incb
pop
adc
aas
mov
and
in
mov
xchg
leave
cmpsb
xor
add
xchg
lea
xor
lock
loopne
lret
or
xchg
and
rcl
pushf
mov
push
push
dec
lea
pop
fs
loop
cmp
mov
cmp
ficomps
jmp
scas
out
shl
xchg
jno
sub
or
jp
cmp
loop
pop
bnd
xor
jae
pop
scas
mov
xchg
or
mov
inc
cli
lret
pusha
xor
in
push
out
movsl
mov
jge
mov
mov
pop
lret
pop
mov
mov
ljmp
add
fisubrs
xchg
fisttps
in
inc
popl
scas
sbb
in
or
cwtl
js
jo
or
inc
add
push
sub
mov
mov
in
ret
pop
add
push
push
enter
cmpb
in
popa
in
inc
das
dec
out
mov
jo
adc
addl
lods
mov
mov
rcr
cwtl
idivb
xor
mov
loopne
insl
mov
jae
sbb
jp
cmpsl
gs
push
mov
andl
mov
int
popf
xchg
outsl
or
or
das
add
sub
into
sub
das
and
adc
lods
adc
loope
and
add
inc
jns
popl
lock
push
adc
and
lods
mov
jg
faddp
pop
cmc
es
push
shrb
and
mov
xchg
inc
in
rorl
inc
xchg
fcmove
mov
jge
mov
sarb
mov
lods
xchg
icebp
push
lods
xchg
mov
push
pop
push
fisubl
test
push
ret
test
inc
xchg
dec
mov
and
pop
iret
outsb
and
hlt
pushf
ds
xchg
and
mov
xor
pop
push
pop
xchg
xchg
movl
lds
sbb
into
xchg
push
mov
je
push
cmp
sub
ret
out
xor
push
pop
add
fldcw
mov
dec
orl
add
std
jl
cld
xor
add
add
inc
cld
shrb
jmp
mov
dec
lahf
xchg
or
enter
mov
xchg
les
adc
in
pop
cmp
push
or
add
mov
jecxz
arpl
lret
in
adc
int3
and
or
jb
pop
loopne
iret
sbb
jl
out
lcall
adc
xchg
out
std
movsb
adc
imul
flds
push
roll
movd
call
jge
jno
lods
lahf
dec
rorb
mov
hlt
call
lcall
ficoms
out
mov
hlt
pop
xchg
aad
jmp
sbb
repnz
sub
jne
outsl
cmp
fmull
mov
cmp
out
ds
test
mov
test
mov
xorb
dec
loop
dec
aam
test
sub
adc
inc
hlt
push
repz
cwtl
inc
pop
jg
out
cmp
leave
test
sbb
or
or
into
out
lahf
inc
pop
adc
jg
pop
jae
push
fwait
mov
rorl
addb
push
ret
jbe
sub
mov
iret
xchg
lock
arpl
xor
xchg
mov
inc
xchg
mov
mov
mov
add
insl
xchg
push
les
mov
inc
sub
je
and
push
cmp
jmp
lcall
outsb
ret
ret
pop
add
jg
adc
sbb
outsl
push
adc
out
js
push
js
sub
or
xchg
push
pop
lock
call
or
sub
in
div
dec
ljmp
stos
adc
xchg
xor
cmc
lret
loopne
stc
leave
ret
mov
sub
sbb
adc
scas
call
or
sub
jnp
pusha
es
adc
shr
cltd
sbb
lcall
ret
subb
js
pop
lahf
test
cmp
pop
ljmp
jg
dec
jns
push
push
pop
fmuls
fbstp
addr16
ljmp
into
movsl
lods
aam
movsb
loop
ljmp
ja
inc
and
in
lcall
ja
push
sub
fisttps
mov
or
or
mov
sub
loop
cs
pop
inc
mov
inc
das
lret
jo
xchg
aad
dec
popa
ss
clc
setb
adc
test
mov
mov
rcrb
or
push
and
clc
loop
inc
push
outsb
outsl
jne
movsb
std
mov
fwait
xchg
decl
jo
pop
aam
and
xchg
xchg
sub
ficomps
sti
and
rclb
dec
je
dec
adc
xchg
inc
sub
call
test
jl
and
out
int
clc
rorb
push
push
dec
out
mov
hlt
and
and
bound
xor
mov
jecxz
ret
mov
sbb
mov
xor
push
sub
sub
orl
xchg
repz
inc
inc
lret
ds
fbld
clc
cmpsl
pop
lret
push
mov
jge
insb
jmp
cltd
filds
mov
ret
daa
or
das
xor
in
testb
rcrb
adc
inc
xchg
fcmovnu
xor
sbb
imul
stos
es
out
mov
xorw
push
fiaddl
cs
or
popf
xchg
add
lock
cli
fsubs
sbb
repnz
push
test
and
lock
mov
xchg
test
clc
repz
pusha
mov
mov
jle
fs
mov
push
mov
movsb
std
fstps
ret
mov
in
in
sbb
sarb
pop
sarb
mov
xchg
imul
dec
add
shlb
jp
mov
sbb
push
out
inc
test
push
adc
aaa
ja
hlt
outsl
incl
or
jle
enter
xchg
clc
cmc
adc
out
mov
lods
and
push
fwait
push
pop
mov
test
add
in
pop
mov
fstpl
aad
adc
sar
adc
test
cmp
adc
ljmp
scas
jg
das
outsb
or
fnstenv
mov
xor
ficoml
inc
jp
xor
xchg
sub
out
xchg
inc
xchg
dec
pop
push
icebp
fwait
cmp
in
dec
pop
adc
dec
das
daa
push
mov
mulps
mov
insb
pop
xor
add
in
jecxz
pushf
popa
adc
lret
pop
lcall
push
push
test
adc
sbb
shl
cmp
in
fdivl
lret
mov
or
hlt
rcr
dec
jns
pop
movsl
js
jmp
stos
sbb
push
inc
pusha
adc
dec
enter
cmp
fadd
sbb
pop
sbb
mov
jl
imul
cmc
stc
adc
xchg
pop
add
movsl
rcl
in
pop
and
jo
add
lcall
fwait
jno
or
inc
les
loopne
mov
xchg
adc
sub
jg
push
dec
mov
movsl
inc
jmp
shll
outsb
cmp
pusha
negb
xor
xor
icebp
push
lcall
dec
lods
adc
inc
rcl
add
cmp
ja
and
orl
push
insb
add
jge
mov
nop
add
mov
movsl
adc
jge
ret
shll
dec
fs
sub
pusha
xlat
pop
rorb
dec
xor
pop
xchg
dec
stos
xchg
pop
add
pop
in
adc
add
jnp
sarb
stc
orl
xchg
jbe
inc
and
xchg
xchg
xor
divb
fimull
stos
inc
fstpt
addr16
pop
sbb
out
mov
out
call
inc
stos
fstl
mov
js
out
sbbb
imul
push
xchg
lods
push
lcall
pop
popa
sbb
push
ljmp
push
divl
sub
stos
mov
adcb
ret
std
dec
iret
adc
test
cmp
gs
in
jl
fidivrl
lcall
xchg
mov
pop
sbb
sarl
fsubrs
sub
pop
and
lds
mov
dec
imul
ds
mov
dec
add
and
aaa
push
push
loop
jbe
mov
das
jne
loopne
pop
fimull
js
sbb
pop
fisubs
jns
cmpsl
pop
cmp
mov
mov
rolb
mov
aas
js
cwtl
push
jb
push
sets
popf
in
jmp
and
mov
test
dec
ss
jmp
mov
dec
mov
inc
outsl
lds
gs
das
xchg
xor
sbb
and
mov
inc
outsb
testb
lret
hlt
xor
cmp
movsl
push
jb
cwtl
neg
cld
std
fnstsw
lret
sub
lods
fstp
mov
popf
jae
xor
dec
pushf
mov
dec
lock
jno
inc
shll
fldt
imul
rol
imul
inc
mov
fdivrp
inc
dec
xchg
loope
pop
mov
push
add
fstps
cltd
mulb
and
stc
test
arpl
mov
pop
xchg
test
and
xchg
dec
hlt
mov
lods
push
adc
mov
push
inc
aam
sbb
out
rcll
imul
xlat
dec
into
xor
adc
jno
sbb
outsb
out
repnz
sbb
xorl
and
xor
sbb
mov
imul
jmp
fwait
sbb
fstcw
js
jo
and
vmovaps
inc
add
and
mov
mov
fisubrl
lock
sahf
std
mov
add
mov
in
shll
mov
jo
jl
pop
mov
jmp
imul
cld
mov
sbb
pop
test
mov
and
pop
xchg
dec
push
stos
jl
mov
mov
mov
repz
sbb
in
sub
je
ja
into
movsl
inc
lock
mov
into
xor
push
or
mov
mov
stos
lods
subb
lahf
sub
int
fcmovne
mov
hlt
jbe
outsl
leave
cmpsb
jmp
jle
mov
pop
adc
cmp
adc
nop
mov
mov
sarl
cmc
mov
mov
fidivl
xlat
sahf
lret
popa
jb
scas
in
mov
jg
inc
lret
fists
push
loope
sbb
pop
sub
out
out
fwait
mov
cmp
daa
xor
push
inc
xchg
sbb
mov
inc
leave
dec
mov
add
out
mov
out
push
std
mov
push
jo
sti
xor
adc
push
sub
jno
lret
push
or
add
push
xchg
enter
jbe
mov
sub
push
orb
xchg
or
pop
cwtl
popa
inc
mov
sub
outsb
jae
jae
sub
movmskps
dec
mov
pusha
push
js
shrl
sar
or
ljmp
cmc
xchg
add
pop
dec
and
jnp
pop
lret
movl
fnclex
stos
xlat
lds
cmpsb
mov
mov
mov
je
int3
iret
or
push
int3
cmp
adc
jecxz
movsl
push
shrb
out
out
enter
mov
out
add
outsb
int
push
cs
jns
push
mov
push
daa
and
cmp
adc
repnz
in
cmp
adc
repnz
dec
inc
aaa
adc
aas
mov
jne
sbb
add
mov
push
outsl
adc
test
cltd
je
mov
stos
sub
cmp
mov
lret
lea
int3
es
mov
aaa
pop
popa
dec
test
test
mull
jno
mov
ljmp
xor
mov
popa
mov
sub
arpl
pop
cmp
sbb
mov
mov
sub
add
cmpsb
dec
cmpsb
lods
jmp
aaa
loop
and
push
into
xor
icebp
in
je
push
sbb
js
lods
in
insb
ss
dec
xchg
mov
dec
cmc
outsl
push
std
mulb
test
sub
stos
push
lock
or
jmp
mov
ds
mov
cltd
and
pop
mov
cltd
fwait
sub
jle
loope
pop
xchg
dec
movsb
sub
jmp
rclb
pop
xor
or
inc
cmp
jnp
inc
pop
cs
test
sub
out
test
mov
sub
test
add
xchg
mov
fcmovnb
test
jg
xchg
sti
cltd
xchg
sahf
add
jnp
inc
fcom
cmp
sbb
test
repz
adc
inc
xlat
adc
fmull
out
mov
mov
pop
add
test
sar
outsb
call
cs
and
cmc
jecxz
adc
subb
inc
adc
outsl
dec
arpl
cmpsl
cmp
jecxz
ja
in
insb
mov
mov
imul
sub
rcll
hlt
lods
cltd
mov
dec
loop
xchg
xchg
push
js
movsb
movb
dec
dec
push
es
test
jmp
xchg
scas
scas
jp
fmuls
add
imul
hlt
mov
add
push
rorb
sub
push
xchg
inc
lock
mov
mov
add
cwtl
ret
or
dec
bound
xchg
addb
pop
aad
inc
and
or
jae
arpl
and
sti
adc
in
pop
cmp
stc
inc
shlb
testl
rorl
push
sub
mov
pop
push
fld
fbstp
jmp
xor
test
add
xor
test
inc
push
add
xchg
lods
and
aaa
dec
jg
popa
outsl
push
notb
jmp
dec
movsb
mov
sti
out
add
xchg
jne
mov
inc
xor
mov
test
movsb
push
jmp
adc
sub
es
inc
push
lds
sbb
pop
sub
stc
mov
push
mov
dec
push
hlt
cmp
sbb
mov
imul
fcoml
sub
jl
pop
shlb
imul
xor
stos
sar
pop
sbb
ret
frstor
mov
mov
mov
dec
push
repz
gs
in
gs
vandnps
sub
repnz
shlb
test
mov
lods
jmp
xor
adc
aam
in
xor
dec
adc
int3
in
inc
or
or
xchg
cmp
test
mov
sbb
mov
popa
jmp
mov
popf
mov
inc
test
sahf
fxch
lahf
adc
ss
shlb
jge
mov
lret
add
loop
dec
inc
fdivs
mov
sbb
fisubrs
lea
ss
cli
mov
enter
ja
dec
jmp
push
jg
ljmp
aas
outsb
inc
xor
popa
or
xor
fcomps
push
push
jae
sub
jp
clc
inc
decb
out
das
loope
fstps
add
inc
inc
add
mov
cmp
add
push
roll
insl
out
push
je
stos
sub
icebp
sub
push
sbb
icebp
mov
fstpl
xchg
jg
cmp
jns
bound
mov
fsub
gs
flds
xor
fldenv
stc
mov
xlat
dec
mov
push
mov
dec
repnz
mov
xchg
jmp
fnsave
jecxz
push
push
aaa
pop
imul
lcall
adc
aas
push
push
rcll
mov
imul
xchg
aas
or
jns
test
loop
add
pushf
lock
pop
cmpb
mul
sub
ja
jnp
or
fs
dec
mov
mov
sub
and
xchg
adc
out
push
or
call
out
pop
insb
adc
mov
aas
adc
xorb
push
subb
pop
push
push
push
xlat
inc
test
fisttps
fdivl
int
push
dec
cmc
sub
mov
lds
jge
loop
imul
mov
inc
and
testl
aaa
xchg
shl
sub
stc
adc
push
sub
pop
push
or
jno
sbb
negb
adc
sbb
decb
orb
mov
cmp
in
rcrl
fmull
into
jo
test
out
pop
call
scas
jnp
jnp
sbb
loopne
nop
push
data16
rorl
popa
xchg
dec
xchg
mov
cmpsl
sahf
adc
test
mov
aaa
sub
stos
xchg
in
cmp
or
adc
mov
mov
aaa
xchg
jle
aad
cmpb
cs
jne
bound
das
jbe
js
ja
sub
inc
jno
or
into
sbb
insb
and
dec
cmc
mov
dec
inc
dec
jg
mov
xor
jno
out
sub
xor
dec
sbb
dec
cwtl
aaa
icebp
mov
repnz
or
sahf
lods
jno
insb
mov
cmp
sarl
add
lea
pop
mov
andl
mov
gs
call
cmp
mov
sbb
fnstcw
fisubs
test
jno
xor
shl
aaa
adc
mov
and
dec
add
outsl
and
dec
enter
push
lock
sub
sub
nop
outsl
push
xor
cmovge
cmc
out
cmp
mov
mov
lcall
daa
lds
cmp
pop
divl
mov
push
ret
and
and
rcrl
mov
clc
inc
out
xor
add
popf
mov
push
jns
stos
das
scas
cmc
push
pop
cmc
rol
xchg
push
ret
push
fsubrs
and
imul
daa
sub
push
movsl
dec
inc
jg
mov
add
or
and
enter
dec
mov
cmp
adc
sti
andb
sbb
movsl
scas
adc
dec
or
mov
dec
shl
movb
push
popf
dec
jne
loopne
jg
and
fildl
xchg
xchg
shll
les
dec
insl
fsubrp
jb
push
int3
inc
dec
outsl
loope
or
ja
in
notl
pop
or
add
stc
inc
mov
call
mov
pop
js
aam
insb
cmc
adc
cld
dec
cld
js
gs
stos
jb
mov
adc
mov
test
rcr
xchg
icebp
add
loopne
adc
jp
outsl
out
pop
mov
outsb
jb
sub
dec
sub
xchg
test
cmpsl
sbb
int3
fimuls
xchg
cmp
lods
fbstp
mov
shlb
jnp
mov
ljmp
divl
fidivs
dec
add
je
pop
ret
loope
adcl
xchg
setl
cmpsl
or
add
cmc
sbb
mov
mov
mov
xchg
imul
fisubrs
in
stos
lret
inc
mov
fsubrp
or
xchg
lea
shlb
jo
lahf
iret
loope
push
jle
aam
xchg
lock
stos
mov
movsb
add
movsb
pop
push
mov
xchg
dec
sbb
sbb
adc
xlat
mov
and
mov
mov
xchg
icebp
or
ror
outsb
pop
mov
inc
rolb
inc
sbb
dec
xor
ds
jle
sbb
jecxz
push
mov
xchg
jge
repnz
pop
fcmovnbe
test
fildl
in
mov
cmp
add
or
cmp
inc
fs
mov
mov
ja
adc
sub
mov
dec
movsl
test
xlat
push
out
pop
mov
dec
xor
test
js
std
sbb
jne
xor
inc
mov
stc
cmp
jp
insl
mov
jne
pop
and
das
mov
add
xchg
add
jle
mov
xchg
pop
enter
mov
mov
mov
arpl
cmp
xor
mov
sub
imul
jge
push
jnp
test
jb
add
mov
add
sbbb
mov
inc
pop
adc
stos
movsl
popl
push
aas
xchg
data16
int3
faddl
enter
mov
and
ljmp
sub
fldenv
jbe
mov
dec
add
call
inc
pop
lahf
xor
xchg
dec
sub
das
inc
adc
cmp
xchg
xchg
ljmp
fidivs
cmpsl
imul
bound
bound
ljmp
cmp
sbbb
sub
sbb
rcr
xchg
mov
sbb
movsl
imul
aad
pop
enter
test
inc
and
xchg
lret
arpl
add
dec
or
popf
cmp
dec
cli
jb
cld
push
loope
in
out
ret
fwait
es
xor
and
xrelease
pop
xor
jae
adc
mov
in
pop
aad
mov
out
add
dec
fcompp
rclb
sub
cs
and
mov
xchg
lods
orb
out
mov
lods
dec
mov
movsl
dec
lods
jmp
arpl
je
pop
sbb
cld
repz
xchg
out
mov
std
stos
add
cmpsb
push
xchg
push
scas
jmp
jl
ljmp
inc
dec
mov
test
mov
xchg
lea
push
pop
mov
push
add
cmp
test
movsl
fisubrl
or
jl
sbb
cmpsb
pushl
dec
mov
scas
stos
push
adc
mov
lret
push
scas
shlb
dec
jge
mov
std
adc
out
push
rorl
rorb
pop
clc
mov
mov
push
fwait
ljmp
pop
stos
mov
loopne
xor
scas
sbb
shrb
fucomip
mov
and
or
test
lods
es
roll
out
sbb
inc
pop
mov
add
dec
xlat
or
fldt
js
gs
sbb
das
fs
mov
nop
dec
int3
jne
movsl
sbb
inc
insl
dec
pop
andl
xchg
repz
cmp
ljmp
bound
add
xor
push
jmp
xor
sub
fcom
or
in
add
and
lods
pop
jae
popl
lock
pop
mov
loopne
push
cli
dec
dec
int
mov
test
divb
xor
loopne
insl
mov
sbb
and
insl
test
push
rorl
mov
and
jns
or
push
outsb
shrl
mov
xor
divl
shrb
cmc
dec
fmull
xchg
stos
dec
add
jnp
scas
xchg
lock
int3
pop
cmp
sub
scas
dec
jns
cmp
in
mov
dec
shrl
push
push
pop
mov
jo
test
jp
inc
fs
and
mov
lea
and
sub
call
inc
or
and
out
mull
imul
shlb
ror
leave
add
arpl
icebp
mov
dec
in
popa
jnp
std
jnp
cmp
sti
cmp
xchg
xchg
push
push
and
adc
cmp
nop
lahf
std
jecxz
cmp
iret
or
mov
ret
sub
mov
push
add
jp
iret
jne
movsb
movsl
mov
mov
shrl
push
mov
jns
cltd
nop
mov
insl
xchg
add
or
push
push
imul
sti
lea
xor
jp
das
out
mov
in
lods
stos
and
and
push
fldenv
sub
int
mov
int
lods
leave
dec
test
dec
jnp
test
pop
xlat
sub
js
mov
mov
sub
out
gs
clc
ljmp
push
jno
sub
hlt
jmp
mov
loopne
lds
fsubl
dec
push
cmp
mov
data16
bound
xchg
push
xor
out
fidivl
rcll
int3
sti
mov
sbb
or
xlat
add
aam
orl
and
fdivl
sub
vmovq
inc
cmc
out
mov
mov
sbb
jnp
jb
and
xchg
mov
inc
bound
xchg
cmp
inc
push
pop
bound
bound
jo
push
mov
lcall
cmp
jl
cmp
icebp
pop
adc
and
xchg
jb
mov
mov
ljmp
jbe
push
es
xor
fcomps
mov
mov
in
fldcw
ss
popf
stos
xor
cli
push
dec
jecxz
jne
push
jae
cli
mov
imul
jne
bswap
push
jge
test
push
pop
pop
into
sub
repnz
test
xor
xlat
mov
test
movsb
dec
sub
fwait
jmp
cmp
pop
mov
jecxz
xor
mov
sub
xchg
in
jae
xchg
ss
adc
insl
imul
push
xor
lea
xor
or
inc
clc
jne
jb
add
lcall
xchg
addr16
cmp
rol
lock
rcrb
or
push
repnz
add
mov
mov
mov
push
rcrl
aaa
hlt
stos
das
shll
popf
adc
in
inc
push
cmc
xor
aam
mov
add
cmp
pop
loop
mov
into
mov
arpl
cmc
call
cmp
mov
scas
cltd
in
aam
push
xor
pop
test
mov
repnz
movb
pop
out
cmp
sbb
decl
or
inc
lods
nop
cli
sbb
insl
sub
int
cmp
fistpll
mov
pop
dec
mov
push
popl
loope
mov
in
push
push
testb
xchg
jle
test
xor
leave
ror
sub
in
push
mov
fcmovu
stos
in
lods
add
push
inc
sahf
cmp
dec
repnz
mov
cmp
or
sub
sbb
mov
gs
xor
sahf
insb
imul
inc
mov
jg
sbb
lds
ret
cmp
xchg
inc
cmpb
call
ret
mov
enter
loopne
jecxz
shlb
aas
ja
jbe
add
lock
mov
push
mov
rolb
pop
mov
adc
cmp
roll
loopne
int
inc
pop
xchg
mov
jo
jg
stc
pop
rcr
negl
int3
mov
xchg
lea
adc
out
pop
cmp
insb
outsl
icebp
ds
jno
and
and
mov
lods
and
adc
je
push
inc
sti
fcmovne
mov
push
ds
sti
jecxz
xor
pop
mov
into
mov
cmp
enter
sbb
popf
negb
cltd
pop
lods
xchg
out
mov
fldt
jbe
jb
sti
mov
movsb
inc
cmp
or
pop
cmpsb
hlt
dec
jg
cmpsl
or
repnz
sub
movsb
aas
enter
pop
ret
loopne
adc
push
push
std
nop
inc
xchg
mov
push
inc
mov
lea
fdivl
jno
or
dec
gs
inc
sub
xchg
lret
or
push
xchg
mov
mov
cmp
lret
loop
jp
lret
mov
cmp
les
shlb
ja
mov
adc
mov
leave
cmp
push
xchg
dec
mov
adc
cmp
xchg
es
mov
out
jg
cmpsb
sti
or
adc
push
outsb
dec
dec
popl
js
hlt
lea
lahf
pop
cwtl
xorb
adc
fisttpl
jb
dec
lock
adc
ljmp
stos
and
mov
and
cmp
add
gs
lods
dec
div
cmovo
leave
xchg
shll
xor
in
push
xchg
repnz
inc
fisubs
test
scas
stc
pop
rorb
dec
cld
test
pop
push
pushf
cltd
ucomiss
fisttps
jae
xchg
int
or
jb
mov
xchg
imul
push
int3
ror
inc
ret
jo
mov
test
mov
movsb
lods
mov
mov
jl
hlt
add
jne
sub
xchg
in
fs
lret
cmp
sbbl
addr16
ss
or
adc
mov
aas
xor
xor
pusha
xchg
dec
dec
das
jmp
or
sub
adc
jecxz
out
lods
das
xchg
dec
dec
xor
mov
sub
out
test
or
mov
cmp
dec
mov
paddsw
jp
call
mov
dec
rcl
out
jbe
fs
fstps
xchg
inc
ss
cmc
mov
cmp
jb
add
mov
test
test
fdivrp
rorb
lcall
pusha
adc
clc
rcrb
scas
ja
xchg
sub
bound
loope
mov
out
scas
cmp
cmp
mov
nop
or
arpl
or
pop
les
mov
push
rep
sahf
dec
pop
push
or
adc
and
bound
jle
shrb
loop
mov
fdiv
inc
mov
addr16
or
push
cmpsl
or
movsb
sub
and
mov
mov
mov
cs
mov
cwtl
push
pushf
call
cwtl
das
or
pop
movsl
js
jae
mov
jg
repz
fs
addr16
cmpsl
xor
sbb
push
or
cmp
clc
nop
add
sub
push
sub
sbb
mov
and
dec
mov
pop
sbb
iret
or
inc
popf
mov
mov
lods
cmp
jp
int3
inc
insl
jae
adc
mov
js
push
mov
sarl
push
push
adc
repnz
cmp
mov
aad
pop
mov
cmpsl
outsl
iret
jmp
push
push
repnz
nop
imul
lods
jno
sub
dec
push
stc
and
push
push
mov
scas
shrl
loop
insl
adc
enter
push
pop
icebp
scas
pop
fcmovbe
inc
adc
daa
sub
sub
mov
sbb
xor
push
aaa
mov
clc
xor
nop
lock
enter
mov
dec
loopne
cmp
addr16
fidivl
pop
or
out
cmp
pop
jmp
andl
sbb
popf
jb
pop
loope
int
dec
cmc
mov
mov
lahf
sbb
mov
adc
dec
jno
imul
vmptrst
adc
xchg
add
fisubl
repnz
fadds
add
and
sti
adc
or
cltd
push
xlat
jb
fisttpl
iret
popa
sbb
lret
imul
mov
mov
orl
adc
pop
adc
dec
gs
sub
push
mov
dec
xlat
and
cwtl
or
and
aas
push
insl
cmpsl
ja
cmp
push
or
lea
cmp
adc
mov
in
adc
jg
mov
inc
jbe
in
cmp
testb
fcomp
and
dec
jecxz
push
mov
lcall
sbb
aam
pop
lret
push
inc
dec
and
xorl
push
inc
push
jle
jne
xlat
imul
popf
adc
pop
add
or
dec
mov
inc
test
test
mov
adc
movsl
in
pop
dec
sub
daa
loop
xchg
cld
xchg
addl
sbb
mov
jg
jp
aam
lahf
imul
jo
fmull
push
or
jmp
shrl
ljmp
xor
fs
enter
leave
out
outsb
out
aas
pop
add
xchg
sub
je
orl
addr16
ljmp
je
fs
not
sbb
aam
popf
pop
xchg
fistps
pusha
imul
insb
repnz
popa
mov
push
push
adc
xor
gs
inc
movsb
cmp
and
sbb
push
out
or
cmpsb
pop
mov
rorb
adc
enter
pop
movsb
out
iret
test
ds
test
mov
xchg
push
push
xor
scas
lret
or
test
xchg
pop
and
popa
sarl
lret
inc
sub
push
jno
xchg
stos
mov
xor
js
out
xchg
bound
loopne
or
push
fisubrl
popf
jp
sub
in
sti
mov
not
xchg
and
jle
testb
push
pop
cli
adc
hlt
push
loope
jmp
jne
xchg
cmc
add
sbb
ror
sahf
rorb
ds
shrl
aam
pop
jbe
mov
and
mov
pop
testb
inc
jle
ds
push
orb
ret
sahf
aam
ret
loopne
lods
pop
aad
int3
scas
xchg
and
sbb
and
inc
adc
icebp
jns
imul
scas
pop
sti
pop
mov
adc
pusha
sti
adcb
adc
sahf
or
bound
out
lods
cmp
daa
mov
inc
in
mov
mov
xchg
and
fs
jb
mov
dec
cmp
xchg
inc
push
loope
xlat
lcall
repnz
cmpb
sbb
loope
xor
call
push
jge
push
test
jecxz
movsl
in
mov
les
inc
lcall
gs
lea
jl
js
fisubs
lock
jo
fsubrl
mov
mov
data16
in
push
rorl
sbb
sbbb
push
pop
sub
cltd
orb
stos
inc
scas
pop
or
jne
insl
dec
pop
aaa
add
repz
cmp
and
dec
in
push
jle
or
pop
add
loopne
addb
cmpl
int3
inc
les
data16
mov
stos
clc
test
pop
adcl
lods
adc
xchg
je
sbb
sbb
and
cmpsl
test
out
sbb
push
mov
cmp
icebp
cmpsl
add
or
xchg
out
mov
mov
lds
js
cmp
jl
adc
xor
jb
lret
pop
sbb
sbb
mov
lea
cmp
jmp
adc
jge
xor
fldl
cld
nop
jo
iret
loopne
outsl
rcr
ret
inc
pop
cmc
inc
add
std
aas
out
imul
lcall
add
xchg
sbb
xor
xor
std
ds
xor
xor
movsl
test
popa
aas
push
adc
pop
mov
xchg
lret
rorl
lock
fists
loope
jbe
push
jb
cmp
pop
shlb
daa
and
mov
addl
stc
sbb
cld
stc
mov
mov
in
shl
or
cmp
mov
lock
orl
fst
mov
clc
and
leave
adc
xor
lret
mov
cmp
clc
inc
addr16
pop
inc
jno
xor
pop
movsb
push
aad
xor
jle
sbb
xor
mov
je
mul
pop
or
ja
daa
stc
test
inc
sub
nop
mov
xchg
cwtl
jae
xor
mov
and
mov
stos
xchg
mov
push
aaa
lcall
sti
pop
les
mov
cmp
add
int3
cmovo
mov
cmp
pop
ss
mov
cli
arpl
jl
ret
xor
inc
cli
ss
xlat
adc
dec
mov
jno
fiadds
jne
leave
cmpb
fdivrs
stos
jns
xor
xor
push
adc
or
in
lahf
jge
mov
mov
sub
aam
lahf
or
sahf
jo
pop
jg
add
push
aad
ljmp
lahf
std
nop
test
popf
or
add
push
cmpsl
fistpll
movsb
dec
xlat
neg
fwait
rol
out
add
lcall
mov
aam
scas
fdivl
push
inc
jae
je
or
xor
je
gs
outsb
push
rcrb
or
fnstsw
daa
cli
jae
pop
xor
mov
ljmp
jns
dec
aam
fadd
arpl
add
lahf
push
or
std
fbstp
aas
jmp
jns
push
pop
shl
jnp
sbbl
dec
inc
test
lahf
lods
dec
add
pop
add
movsl
in
lods
imul
bound
dec
mov
and
dec
mov
sub
push
and
xchg
push
or
cmp
cmpsb
cmp
mov
pop
mov
xorl
mov
xchg
xor
mov
mov
imul
or
xchg
lock
add
adc
out
sti
mov
xlat
pop
cmp
xchg
cmp
jb
sarl
fcoms
out
jp
pop
xchg
aaa
shlb
and
xchg
mov
jp
adc
xchg
cmc
insl
outsl
mov
in
or
xor
inc
sbb
loop
daa
push
cld
scas
dec
iret
outsb
cmp
mov
in
xchg
addr16
push
je
dec
rcll
je
shl
push
sahf
sbb
lock
imul
out
lods
jo
inc
jbe
mov
lds
enter
pop
adc
std
mov
imul
push
inc
and
fisubs
addr16
cmp
dec
dec
mov
xorb
pop
jle
fst
imul
pop
or
movsl
pop
loope
aam
pop
xchg
mov
mov
fmull
xor
dec
movsb
aas
and
push
stos
xchg
hlt
pop
mov
movsl
push
mov
stc
in
fstpt
in
sarl
dec
jp
and
and
push
in
imul
xlat
or
jne
xor
pop
fwait
jmp
data16
in
popf
mov
mov
aam
sub
add
ds
mov
nop
cmc
cmovo
lea
xchg
mov
add
insl
mov
lock
rorb
xchg
push
lods
sbbb
push
mov
mov
mov
in
xorb
jb
adc
pusha
cmp
pop
lds
fwait
ljmp
jae
mov
data16
aam
movsl
sbb
fstl
icebp
aaa
cmpsw
adc
xchg
xor
adc
dec
xor
js
insb
addr16
push
aad
fs
cltd
sub
lahf
inc
fdivl
jne
out
pop
iret
dec
cmpl
pop
jae
jae
sbb
hlt
repz
ljmp
mov
or
adc
cmp
jmp
movsl
stos
inc
int
push
jge
lods
push
jo
push
daa
lods
pop
lahf
pop
enter
rcr
aad
mov
jmp
inc
std
fiaddl
sbb
pop
popf
jns
in
out
insb
mov
arpl
movsl
inc
lea
add
adc
jno
sub
ret
pop
jecxz
sub
add
inc
fimuls
adc
inc
in
and
lret
dec
and
xchg
cmp
jae
cmp
sti
lcall
mov
loopne
out
rep
sbb
push
jns
ds
out
hlt
xchg
mov
hlt
push
xorl
hlt
addr16
pop
pop
mov
push
mov
mov
lock
popa
lahf
fwait
mov
dec
into
ja
gs
popf
out
fcompl
ja
inc
mov
mov
mov
adc
sub
js
out
ret
lret
inc
lds
mov
cmp
clc
pop
mov
out
jge
sbb
enter
aas
inc
in
dec
cmc
and
mov
sti
push
and
fcomps
or
push
pop
test
lea
mov
bound
test
add
adc
push
out
shlb
out
jmp
enter
push
mov
aam
das
xor
outsl
add
cmp
insb
mov
or
stos
push
xchg
inc
add
jp
aaa
ret
xchg
inc
je
pop
xor
adc
int3
mov
mov
cltd
cs
xlat
insb
into
xor
inc
pushf
pop
xchg
jl
cmp
xchg
adc
cmpsb
sti
xor
mov
aam
adc
cmc
inc
aad
add
xlat
jno
fmuls
pushf
cmc
jg
jmp
daa
movsl
and
pusha
andb
rol
jl
or
add
push
loope
notb
imul
jb
xchg
iret
leave
jnp
mov
andb
or
je
add
das
mov
mov
jle
ret
jbe
mov
nop
xor
into
cli
fldcw
push
mov
pop
lea
dec
je
push
aam
xchg
xchg
xchg
add
and
xor
movsl
mov
sar
les
sbb
dec
lea
insl
pop
scas
xchg
adc
mov
sbb
in
popl
es
add
insb
jnp
inc
push
sub
push
add
imul
adc
mov
fsts
push
scas
mov
imul
mov
pop
mov
pop
stos
enter
test
fistps
inc
mov
dec
aad
outsl
shlb
adc
fisubl
adc
lock
push
mov
int3
in
fstpl
pusha
and
lret
cltd
in
jo
jp
mov
cmp
jge
mov
adc
mov
aad
enter
add
jns
in
clc
imul
jne
nop
sub
cmpsl
lcall
cmp
call
pop
pushf
inc
adc
mov
pop
aad
xchg
inc
pop
sub
cmp
mov
push
sub
int3
adc
inc
rcrl
pop
xchg
int
jne
fnstsw
mov
or
in
lock
mov
pop
movsb
cmpl
sbb
mov
nop
daa
dec
sbb
lret
addps
popw
jno
aas
add
pop
fwait
cltd
push
loopne
std
dec
rcl
mov
cmc
jge
cltd
int
mov
pop
xor
fnstsw
adc
ficoms
inc
lock
rclb
pop
mov
sbb
mov
gs
lret
cmp
aaa
mov
insb
lret
mov
adc
in
pop
enter
in
jae
mov
aam
aaa
push
rep
leave
jl
xor
call
cli
mov
hlt
test
dec
xlat
and
outsb
or
shll
icebp
xor
fcoms
lret
mov
cli
data16
push
test
push
loop
add
aad
cmpsb
daa
in
bound
pop
push
cli
push
adc
fisubrs
adc
dec
push
ds
lahf
daa
jecxz
repz
jg
add
dec
leave
std
scas
jno
adc
hlt
in
jno
leave
adc
jecxz
fistl
xchg
iret
mov
mov
hlt
jb
push
cld
or
cmp
call
aaa
cwtl
lret
jno
xor
movsl
test
push
jmp
lds
filds
xor
ja
enter
inc
sti
push
sbb
adc
loope
pop
sub
pop
jns
push
sbb
dec
push
scas
lods
scas
nop
pop
stos
xor
adc
cwtl
loopne
pop
cmp
xor
sahf
ss
test
adc
pop
orl
dec
lahf
mov
aam
xchg
cmc
test
jp
ds
hlt
aam
out
iret
scas
push
int3
sbb
push
test
hlt
shlb
into
mov
adc
jb
pop
jg
pop
inc
aas
dec
jne
add
and
scas
filds
dec
lods
xor
loopne
jae
aaa
loope
rolb
push
fwait
add
test
je
cmp
add
sbb
sbb
xor
data16
sub
int
add
shlb
rorl
mov
xchg
fisubrl
push
mov
inc
xor
sbb
mov
xchg
divb
js
xor
mov
outsl
pop
cmp
cmp
inc
add
out
mov
cmp
jecxz,pn
pop
jmp
mov
repz
sahf
mov
pop
arpl
mov
cmpsl
pop
jge
inc
sbb
rcll
sbb
lock
aad
pushf
movl
xchg
fwait
das
cmp
aaa
sub
mov
or
aam
ret
loopne
gs
ret
pusha
push
mull
ljmp
shlb
popa
pop
lods
mov
inc
dec
into
arpl
clc
mov
jnp
lcall
icebp
je
mov
mov
add
fnstenv
inc
rcl
cmpsl
loopne
addb
mov
fisubrs
mov
pop
jno
popl
aad
mov
lcall
sbb
inc
or
mov
scas
addr16
dec
mov
test
ss
ret
cmc
out
js
insb
aam
inc
neg
pop
subb
cwtl
mov
sub
add
out
pop
cmp
mov
add
xor
inc
icebp
pop
pop
xchg
testl
mov
jmp
inc
push
xchg
faddl
xor
lret
sarl
pop
insl
sub
lods
add
loope
aas
and
dec
inc
mov
insb
gs
xchg
inc
mov
ljmp
outsl
inc
jmp
lods
rcl
fidivrl
push
loop
cld
arpl
test
pop
neg
or
and
cmc
cltd
xchg
out
push
jecxz
iret
lods
stos
outsb
jl
mov
or
enter
inc
jae
fdivr
stc
hlt
ljmp
test
js
adc
outsl
sbb
xchg
aas
shr
jecxz
adc
cmpb
ja
push
adc
jb
mov
jl
cmc
das
in
and
sub
and
add
cmp
out
fdivrs
mov
push
xchg
leave
dec
mov
imul
arpl
in
stc
mov
daa
out
std
ret
int3
dec
mov
push
pop
imul
bound
jp
enter
xchg
push
lcall
mov
mov
mov
sbb
repz
mov
xor
add
add
ret
imul
dec
pop
hlt
or
add
mov
adc
repz
jns
insl
movsb
fwait
push
outsb
pop
mov
cmp
out
mov
ds
mov
ret
pop
mov
mov
shl
bound
xchg
xor
mov
inc
push
int3
repnz
pop
jne
xchg
mov
xor
push
xchg
mov
add
insl
stos
push
jmp
sar
mov
lret
or
sbb
sub
cli
adc
ret
xchg
or
ret
fcmovnb
dec
pop
ficompl
mov
pop
jmp
ret
jp
and
mov
aaa
jns
inc
push
inc
imul
push
or
pop
sbb
mov
sbb
lods
or
push
and
xor
js
fcoml
jl
pushw
or
adc
push
cmpl
and
or
notl
xchg
shl
outsl
pop
insb
sub
push
pop
negl
imulb
jmp
out
mov
cmc
inc
push
out
xchg
stc
sub
mov
lret
sbb
mov
jle
lock
push
jmp
popf
pop
das
sub
in
mov
cmp
or
test
push
sub
int3
jmp
dec
pop
xlat
sub
mov
lea
jge
je
mov
xor
je
test
and
sti
subb
imul
roll
clc
popa
push
sarb
imul
into
mov
inc
pop
dec
into
pusha
jno
lea
dec
ss
xor
dec
out
or
push
daa
clc
sbb
and
pop
pop
sub
lahf
pop
test
shrl
mov
xchg
inc
int
loope
int
in
pop
mov
cmpsb
and
loopne
push
adc
add
fs
mov
popl
xor
push
idivl
imul
cmp
mov
fs
ret
rcrb
jo
iret
cmp
xchg
sbb
in
mov
mov
sbb
mov
outsl
xor
mov
mov
nop
loope,pn
mov
inc
pop
push
sub
leave
aaa
mov
movl
and
sbb
in
das
enter
aaa
xchg
dec
jg
xor
adc
jo
add
mov
in
mov
andb
inc
fwait
shl
xor
das
mov
mov
jge
popa
aas
xchg
stc
cmp
and
test
pop
lret
push
cmp
scas
push
jg
sbb
movsl
andl
or
inc
sbb
in
jo
sbb
xlat
mov
dec
mov
fisubs
inc
or
xor
in
into
dec
jns
aaa
or
jl
subl
jb
and
cmp
mov
pop
xor
pop
mov
push
out
loop
xor
adc
adc
and
adc
dec
repnz
and
fdivl
sbb
push
add
popa
sub
mov
cmpsl
push
gs
inc
sub
mov
out
inc
ret
mov
pop
fcompl
jae
out
mov
sbb
jbe
in
or
mov
add
sub
test
popf
pop
sbb
sbb
sbb
cmpsb
and
faddl
lock
inc
cld
sub
add
in
adc
pop
in
xchg
aam
ja
xor
cmpsl
add
xchg
mov
jnp
xor
mov
call
jae
in
out
mov
out
inc
dec
ret
inc
add
dec
bnd
push
test
dec
mov
repnz
inc
push
stos
mov
punpcklbw
jmp
dec
lods
test
rcrb
lods
pop
mov
push
inc
pop
and
mov
aaa
arpl
inc
xchg
in
imul
sub
aaa
jge
adc
xchg
ljmp
mov
adc
das
pop
mov
test
imul
test
cmp
ja
add
in
pop
jg
sbb
stos
iret
add
mov
mov
sub
jle
jp
push
dec
pop
adc
push
pop
jo
or
inc
cmp
jnp
sbb
dec
sbb
mov
xchg
addb
push
clc
or
out
or
inc
sbb
call
rcll
mov
inc
fstpl
jno,pn
movsb
repz
test
dec
add
xchg
test
adc
fcompl
lret
and
enter
data16
sub
nop
call
adc
clc
push
data16
arpl
xor
push
aas
mov
mov
xchg
or
fdivs
pushf
gs
mov
mov
sahf
mov
xchg
push
in
jle
sbb
jg
mov
mov
cli
lods
jle
ret
adc
or
push
stc
cmp
cmp
mov
mov
xor
jg
or
pop
int
jbe
shll
inc
shrl
fldt
add
mov
xchg
out
xlat
cmp
push
lds
jb
loop
lcall
mov
inc
cli
scas
xor
or
mov
adc
addl
mov
sbb
mov
add
sub
and
mov
lods
ja
in
dec
or
sub
sahf
mov
fdivs
insb
lock
sub
push
dec
jg
adc
cmpsb
or
lret
mov
cmc
mov
nop
in
and
and
loopne
cmpb
leave
pop
mov
sub
xchg
push
sahf
dec
mov
cmp
loopne
or
push
mov
js
push
fcoms
pusha
sub
sbb
movsb
pop
pop
mov
repz
scas
cmc
push
fbstp
imul
adc
outsl
sub
cltd
push
push
mov
sub
fnsave
sbb
push
iret
jo
or
call
cmp
jle
push
loop
dec
push
dec
lret
clc
mov
jl
int
and
cmp
sub
sarl
xlat
out
xchg
xchg
jp
es
clc
call
iret
lcall
mov
sbb
nop
mov
fs
push
cmpsb
loopne
xorb
in
or
shrb
rcrb
inc
popa
mov
sbb
pop
mov
mov
mov
pop
shl
incl
movsl
addr16
add
pop
fimull
ret
and
pop
enter
cmpl
shll
into
ficomps
stc
scas
into
push
adc
push
adc
dec
add
and
or
jmp
dec
sub
pop
or
mov
imul
and
cmc
ds
jmp
es
in
xor
lods
insl
push
jne
xor
sub
mov
pop
aad
hlt
ret
push
fs
mov
dec
cmpsb
inc
push
add
rclb
mov
inc
mov
and
cmp
repnz
dec
inc
sbb
cmp
mov
cli
scas
dec
xor
cld
sbb
add
adc
pop
clc
into
xor
aad
cmp
in
or
sbbb
addr16
adc
icebp
cltd
std
es
jnp
loope
aam
sbb
ja
fisttpl
addl
cmp
mov
cmpsl
xor
inc
pop
xchg
adc
sub
push
push
scas
add
test
stc
add
pop
jae
aas
sbb
out
scas
xchg
jl
sub
push
leave
enter
dec
mov
adc
in
lds
xchg
or
inc
xchg
bound
mov
clc
mov
outsb
sar
div
add
repz
testl
jne
jo
jl
lods
add
jns
jl
int3
push
lret
pop
in
adc
lahf
mov
pop
cmpsl
pop
loopne
dec
mov
cli
ja
push
cli
lods
push
jo
sub
mov
sub
into
cmpsl
jo
sub
sbb
dec
lahf
mov
cmpsl
mov
lods
xor
cltd
les
repnz
popf
or
int
mov
push
and
xchg
shll
out
outsb
lahf
mov
xchg
and
aaa
and
int3
cmp
ja
clc
or
sub
arpl
jns
ret
push
dec
scas
dec
fcoml
jno
mov
pop
mov
push
xor
mov
out
test
xchg
lods
sbb
sub
fmull
sets
fisubrl
jg
pop
mov
iret
sub
pop
sub
roll
push
lcall
push
je
bound
movsl
cmp
sbb
mov
fcmovu
push
cmp
dec
rorl
adc
or
out
ds
mov
shrl
loop
fs
orl
add
dec
adc
or
lock
ljmp
or
sub
inc
icebp
mov
stc
and
repnz
dec
adc
push
sbb
pop
leavew
test
inc
and
addr16
sbb
cmp
mov
jle
or
in
out
mov
sbb
mov
lods
scas
data16
mov
test
jle
jno
push
mov
mov
xlat
gs
aam
pop
add
xchg
adc
push
jno
adc
lcall
jmp
test
push
xor
mov
cmpsl
xchg
xor
loopne
leave
pop
cmp
es
inc
adc
xorb
push
xorb
push
jb
jecxz
push
rcr
js
hlt
push
les
pop
lcall
fidivl
mov
cmp
mov
fists
insb
dec
stos
jne
push
js
mov
jb
xchg
fisttps
cmp
and
mov
pusha
fxtract
mov
sub
adc
dec
mov
fsubr
push
call
popf
ja
sbb
sub
xor
mov
jp
stos
sarb
fildll
aas
pusha
scas
arpl
mov
xchg
add
dec
push
mov
mov
popf
shll
inc
inc
or
shr
cmovs
inc
divb
mov
daa
test
popa
arpl
mov
xlat
sub
aam
lahf
in
push
sbb
mov
xor
pop
pop
cwtl
loopne
mov
adc
sbb
insb
out
inc
sbb
mov
xor
lds
mov
in
ss
lods
pop
pop
cmp
or
sbb
in
jmp
or
je
cltd
xchg
mov
add
mov
aaa
jg
pop
scas
imul
or
iret
pop
push
daa
sub
jno
pop
fstl
jo
pop
ss
shll
rcrb
dec
into
notl
pop
aaa
insb
inc
int3
aam
push
cli
jle
or
popa
lods
sahf
mov
es
sbb
pop
fistps
mov
fistpl
subl
push
insb
push
xchg
mov
idivb
das
cwtl
sar
push
pop
shr
mov
jg
push
bound
mov
push
jo
xchg
sbb
fisubrs
xor
dec
or
test
lahf
arpl
sub
movsl
xor
call
jecxz
mov
in
dec
pusha
lahf
testb
mov
push
jo
cltd
mov
push
cmp
sub
call
inc
jb
daa
aas
dec
adc
arpl
mov
push
pop
xor
fisubrs
push
pop
push
shrb
cs
enter
adc
cmp
inc
or
jnp
mov
xor
rcr
stc
cli
adc
cltd
arpl
fstpt
ljmp
sub
adc
cmpps
lods
push
mov
das
and
sub
nop
sarl
lahf
or
sub
xchg
rcrb
mov
rcll
iret
xstore-rng
cmpsl
les
or
add
out
faddl
aas
fldcw
xchg
in
jg
lods
outsb
enter
mov
jge
jl
mov
pop
loop
xchg
mov
push
int
lds
aaa
sbb
data16
add
mov
add
mov
inc
dec
inc
andb
mov
mov
cltd
rolb
sbb
jns
into
outsl
stos
sbb
mov
adc
imul
jg
sub
mov
arpl
sub
dec
shlb
je
mov
pop
dec
andb
mov
sub
and
jae
xor
fnsave
mov
cmc
das
and
xchg
ficomps
xor
push
aam
dec
aaa
out
fst
test
mov
sbb
xor
cld
and
in
loop
push
les
lods
and
test
imul
enter
gs
lock
fists
shlb
dec
or
sti
pop
stos
and
pop
jbe
xchg
xorl
xor
sub
je
sub
mov
mov
push
stc
dec
mov
das
mov
sbb
fs
jbe
xchg
mov
jle
es
add
test
push
lods
lret
mov
add
jbe
xchg
das
add
mov
jnp
dec
cmpsb
push
dec
mov
sbb
adc
gs
mov
scas
fwait
clc
not
mov
push
add
mov
imul
fiadds
mov
pop
test
mov
lds
fdivrp
sti
dec
mov
fnstcw
shl
int3
pop
adc
push
cltd
addr16
cmp
push
jo
int3
push
jl
stc
outsl
aam
dec
jp
cmp
lods
dec
js
fdivl
and
pop
sbb
pop
jbe
ds
ror
mov
fimull
xor
xchg
out
outsl
push
das
mov
adc
add
test
mov
dec
aas
and
mov
add
in
adc
push
mov
mov
sarl
fists
jle
addr16
aam
inc
fidivl
iret
mov
cmp
pop
cld
aaa
in
xchg
jno
xorps
pushf
out
jmp
sbb
sub
push
out
or
mov
fcmovu
mov
sbbl
add
and
push
rcrb
pusha
jecxz
add
inc
mov
xchg
push
push
in
and
jecxz
mov
ret
in
push
stc
adc
fcmovne
xor
es
fs
mov
or
dec
cmpsb
lcall
and
mov
loop
sbb
dec
lea
mov
push
cmp
int3
clc
push
dec
sub
shll
cmp
shl
lret
dec
int3
cmpsl
jg
inc
sbb
sub
cwtl
fwait
push
push
push
arpl
pop
or
mov
adc
push
fsub
clc
jle
ljmp
scas
lret
sbb
or
std
mov
xchg
sub
xchg
jp
mov
pop
insl
jno
pusha
loop
inc
popa
mov
mov
mov
jmp
inc
icebp
addb
test
sahf
cmp
cmp
sub
insb
mov
dec
jae
mov
xchg
add
add
jb
inc
push
scas
shlb
or
lret
ja
sub
je
jge
fiadds
iret
sbb
testl
sbb
adc
cmp
cmp
test
sbb
into
fwait
pop
loopne
lods
fisubrl
push
cs
bnd
aaa
mov
adc
test
shll
sbb
stc
push
sub
enter
clc
packssdw
fldt
jae
add
fcmovnb
cld
lret
push
mov
call
xchg
addr16
cmpsl
xchg
pop
push
ja
stc
nop
outsl
rolb
mov
add
pop
add
jecxz
pop
or
mov
divl
test
jne
rsm
test
add
cmpsl
mov
add
sbb
push
repz
xchg
cmc
cmp
orl
fadds
es
mov
hlt
inc
pop
fstp
scas
mov
inc
repnz
and
mov
sbb
mov
or
scas
jns
mov
ja
pop
cs
stos
rcrl
pop
gs
mov
and
cmp
decl
std
push
add
ja
cltd
mov
mov
or
fldl
xor
int3
sub
jmp
dec
mov
cs
pop
mov
pushf
dec
rcr
adc
xor
mov
scas
jl
imul
pop
xchg
and
inc
out
nop
std
dec
adc
cs
mov
or
sahf
mov
loopne
lahf
loop
adc
std
cmp
outsb
int3
push
cmp
jb
mov
cli
dec
xchg
cld
in
imul
jge
outsl
sub
xor
mov
xchg
jp
and
rcll
xor
xchg
test
cld
xchg
mov
dec
int3
fsubp
sub
pop
push
dec
dec
fstpt
cltd
xor
cmpl
pop
fdivrl
subl
or
jmp
and
jp
ud2
pop
cmp
pop
push
sarb
or
sti
jnp
data16
into
xor
inc
mov
xor
subl
into
sbb
add
ljmp
cld
mov
popf
in
cmp
mov
orb
mov
ds
out
jnp
mov
stc
and
loope
arpl
in
and
and
mov
loop
mov
sbb
pop
int
mov
enter
fisubrl
imul
push
phsubw
insl
cmp
adc
scas
cmp
dec
stc
lret
cmp
pop
cmp
aaa
daa
inc
arpl
fmuls
pop
ds
es
add
in
or
repz
dec
insb
mov
mov
mov
mov
ficoms
mov
andb
mov
cli
xchg
jo
lds
outsl
pop
cmpsl
inc
repz
cltd
lret
inc
sbb
out
and
sbbb
movsb
stos
int3
nop
faddp
cmp
adc
mov
es
cmp
popa
sbb
xchg
add
loop
adc
leave
out
ret
and
or
js
pushf
cmp
pop
xor
sbb
pop
dec
mov
jb
out
pop
sub
iret
shlb
mov
xor
lahf
fwait
sbb
xchg
outsb
ja
sub
test
jae
cmp
cs
mov
xchg
and
lods
pop
dec
and
and
jne
fs
mov
test
fsubl
loop
sbb
sbbb
cmc
loopne
popa
repnz
dec
in
sbbl
or
mov
pop
rcrb
cmp
pop
jb
push
je
inc
mov
rcll
js
mov
enter
out
jae
mov
pop
adc
xor
or
adc
andw
inc
mov
add
add
loop
xor
cmc
sbb
jne
or
sbb
mov
push
mov
sti
in
xor
dec
xchg
jg
or
adc
enter
lea
jmp
push
mov
push
mov
mov
or
iret
add
ds
mov
adc
push
mov
pop
stmxcsr
mov
mov
sbb
jge
pop
mov
out
js
lods
pop
fsubl
and
or
mov
dec
aam
sbb
jbe
jge
xor
lods
roll
xor
sbb
les
dec
fidivl
cmp
jbe
int
push
fdivl
lret
andl
cs
xor
cmpsb
aad
es
movsb
sbb
pop
sbb
in
adc
aam
pushf
fidivs
push
cwtl
int
cmp
sbbb
aad
not
pop
pop
dec
mov
mov
push
scas
cmp
pop
es
or
movsl
out
mov
outsl
push
rcrl
pop
in
or
icebp
or
jmp
inc
lods
adc
ja
mov
pop
xor
movb
test
cmc
mov
xor
mov
fildl
add
popa
pop
insl
insl
insl
pusha
scas
xor
xchg
jae
pop
inc
mov
jge,pt
imul
mov
pop
andb
pop
jo
popf
movb
sbb
and
addb
loope
adc
sahf
xchg
xchg
adc
stos
push
insb
repz
sbb
stos
adc
mov
dec
fsubrs
int3
dec
xchg
adc
insl
add
sbb
push
xchg
imul
paddsw
jl
xor
inc
addr16
sub
add
cwtl
xchg
jp
and
push
outsb
and
push
mov
adc
arpl
lods
sub
sbb
sub
test
adc
mov
idiv
jae
xchg
push
push
lods
cmp
pop
hlt
lret
cmpsb
popa
imull
mov
test
xchg
xlat
cmp
mov
push
call
je
ds
mov
adc
jg
jnp
pop
fiadds
in
leave
test
loope
and
mov
lcall
insl
leave
enter
mov
mov
aad
inc
out
icebp
out
fstps
pop
movsl
outsl
jbe
pop
testb
ss
std
xchg
cmc
shrb
roll
sub
cli
sahf
adc
mov
pop
clc
mov
push
inc
sbb
call
es
xor
sub
mov
lds
pop
and
jnp
shlb
push
stos
idiv
orl
ja
call
orl
add
cmpsl
imul
xchg
jmp
fcmove
pushf
inc
lea
dec
das
fs
in
dec
adc
mov
ficomps
and
rcl
clc
inc
adc
hlt
mov
cmp
and
adc
mov
jp
aas
repz
jle
xchg
loopw
sub
pushf
mov
or
add
mov
pop
testl
mov
ficoms
stos
insb
jmp
dec
popa
arpl
push
adc
add
lea
cmpsl
and
in
test
gs
pop
push
adc
dec
jnp
inc
cltd
fisttpl
sbb
mov
xor
lret
or
cmp
lock
and
xor
mov
shlb
mov
xchg
dec
in
adc
pop
sub
push
add
mov
movsl
out
popa
cmp
ret
push
jae
pop
mulb
insl
push
cmpsl
inc
mov
mov
rorl
movb
aam
mov
addr16
je
shrl
dec
pop
pop
adc
pushl
cmpsb
fldcw
pushf
mov
mov
loopne
mov
int
mov
pmullw
stos
sub
mov
lahf
sbb
ja
or
mov
adc
mov
push
sub
xchg
xchg
pop
hlt
dec
mov
xor
lods
mov
cltd
test
testl
test
cmc
test
aam
inc
jo
jno
imul
mov
in
cld
push
enter
xor
push
add
mov
add
je
inc
xchg
pop
or
sbb
stc
int3
je
lea
andl
ljmp
cwtl
or
mov
mov
pop
cmpsl
cmp
inc
jle
jmp
add
jl
test
int
jmp
mov
jp
pushf
scas
mov
sar
cmp
xchg
loope
out
es
das
jp
lret
add
testl
jmp
int
aas
int
pop
jb
lods
cmpsl
fucomip
inc
dec
jo
pushf
xor
lahf
sbb
in
or
sbb
cli
dec
adc
into
mov
idivl
mov
mov
xchg
mov
out
xchg
adc
repnz
lret
or
pop
test
pop
mov
testb
daa
cmp
movsb
mov
loopne
lahf
loopne
jmp
loop,pt
xor
js
in
xor
pop
cltd
in
pop
pop
push
cmp
mov
movsb
std
cmp
mov
clc
cli
add
ret
stos
xor
cmp
jno
addr16
sbb
lret
scas
leave
es
sub
push
lods
mov
andl
leave
adc
sbb
lret
mov
mov
scas
outsb
fiadds
lret
in
adc
push
push
push
jl
lds
mov
add
mov
mov
loopne
cmp
or
stc
sbb
popf
mov
and
test
stc
aas
add
int
dec
mov
pop
sub
cmpsl
sub
into
popw
gs
je
out
mov
jl
call
lcall
or
jmp
mov
inc
push
add
cmpsl
imul
sbb
ljmp
or
xchg
sbb
mov
arpl
mov
mov
int
cmovb
add
into
out
or
jl
sub
pop
ficompl
rep
sbb
adcb
fisttpl
sub
stc
mov
sub
mov
outsl
inc
dec
mov
xor
lock
mov
sahf
shrb
pop
imul
xor
xchg
push
popl
loopne
jecxz
add
out
jo
in
nop
mov
aad
or
jne
repnz
or
repz
rcrb
sub
pushf
out
or
dec
dec
test
in
insb
jb
inc
scas
inc
ja
divl
clc
aad
mov
mov
imul
int3
jnp
pop
stc
add
or
adc
fdiv
inc
subb
ja
jb
push
push
aaa
out
inc
mov
or
ret
mov
cmp
jmp
add
shrb
jae
xor
push
or
fs
adc
mov
inc
mov
jno
js
or
filds
fildll
imul
mov
mov
ficoms
clc
sub
or
sbb
inc
lahf
jp
outsl
dec
cs
cmpsl
jae
dec
or
inc
mov
bound
add
int3
imul
rcrl
push
sbb
pushl
dec
imul
scas
lcall
mov
add
jb
push
jno,pt
and
adc
cmp
and
ljmp
outsb
test
adc
data16
dec
into
xchg
ret
cmp
adc
in
imul
test
mov
or
leave
mov
scas
inc
popa
ss
icebp
jb
adc
cwtl
cmp
jo
mov
lods
lock
pop
mov
mov
push
aad
movsb
fldz
sbb
mov
and
xchg
add
repz
movsl
mov
push
cmp
or
pop
lret
cltd
sbb
mov
push
lcall
shlb
insl
insb
loope
test
imul
mov
inc
and
nop
sahf
rorl
int3
test
push
adc
lods
fs
xchg
insl
add
ss
pop
fwait
test
cltd
inc
mov
fidivs
je
fidivrs
movsb
pop
or
dec
mov
loopne
std
dec
push
lea
imul
subl
pop
lods
aam
sbb
ja
and
inc
mov
ret
mov
sub
leave
add
push
sbb
and
push
mov
outsb
push
fsubs
mov
lahf
pop
ret
cmp
popf
aaa
add
arpl
mov
jecxz
cli
test
cmp
call
xchg
aas
sub
in
imul
lcall
loop
mov
clc
clc
cmpsl
imul
cwtl
push
inc
aaa
push
loope
sub
lock
dec
and
in
adc
lock
jle
dec
mov
in
jmp
out
add
xchg
add
xor
adc
clc
pop
xchg
cmpsl
xchg
adc
mov
imul
lret
subl
insb
mov
xchg
push
pop
pusha
sbb
cmp
into
or
pop
push
in
push
dec
test
dec
ljmp
enter
lods
shl
mov
loop
lods
add
cmp
mov
cld
add
xor
repnz
sub
push
xchg
das
repnz
aam
sub
dec
and
push
testl
push
push
call
sarl
push
mov
repz
call
cmp
loop
imul
adc
test
pop
fs
gs
push
movsb
jp
loopne
test
ljmp
ret
nop
jns
push
jne
test
rcrl
pop
aas
add
push
sbb
movsl
or
insl
xor
data16
push
icebp
pop
cltd
dec
pushf
jno
push
pop
push
call
inc
mov
xchg
add
clc
mov
push
fbstp
jnp
sub
mov
subl
or
jno
adc
lods
xchg
sbb
iret
das
hlt
aaa
test
mov
adc
scas
repnz
loopne
gs
and
mov
rcr
mov
test
stos
rorb
call
jo
sahf
inc
jg
lea
add
test
sub
lea
ja
push
in
jbe
clc
loope
sbb
xor
loop
subb
lods
push
lret
xor
cmp
xor
push
lock
cmpsl
int
sbb
outsl
cmpsl
push
movsb
mov
xor
xchg
cmp
mov
or
or
xchg
push
icebp
pop
jge
int3
cmp
mov
cmp
jne
pop
inc
pop
adc
sub
xchg
jmp
pop
adc
fwait
je
cmpl
sub
imul
xchg
sbb
mov
shl
loope
mul
mov
inc
xor
inc
lret
pop
or
ss
xlat
cmpsb
mov
in
push
add
or
dec
fistpl
xor
jno
lock
repz
mov
push
xchg
adcb
add
scas
add
xor
mov
insl
cwtl
dec
jmp
pop
pop
jae
ja
jmp
pushf
adc
jnp
xchg
stos
push
jg
jae
fnsave
jne
enter
mov
test
pop
xor
negb
inc
lods
int
lods
sbb
inc
or
into
sub
cltd
pop
daa
fsts
cs
bound
popf
dec
stos
xchg
pop
or
rcll
lret
aas
adc
mov
pop
movsl
dec
jge
sbb
or
lahf
aam
cmpsb
sub
stc
sub
fstpl
leave
iret
gs
test
aam
sub
xor
and
outsl
sbb
mov
lea
sahf
scas
gs
daa
out
adc
mov
or
lods
adc
test
pusha
lods
push
scas
jp
loopne
jp
arpl
sarb
mov
dec
pop
xchg
push
dec
xor
ret
and
hlt
lods
cli
out
je
mov
jmp
loopne
add
mov
mov
icebp
cmp
or
sti
cs
int
mov
pop
mov
scas
mov
das
jb
lds
es
aam
sub
fwait
jbe
loope
mov
xor
pop
xchg
rolb
sub
push
fdiv
jo
lret
test
cli
out
in
and
popa
sbb
inc
pusha
addr16
mov
gs
adc
js
mov
xor
push
push
test
popa
mov
jnp
push
add
push
adc
insl
mov
xor
aad
push
lds
in
bound
ret
loop
dec
lods
repnz
cmpsl
or
jno
setle
adc
mov
adc
jge
xchg
ljmp
je
inc
xor
shr
push
jno
fstps
push
cli
scas
pmovmskb
inc
sub
cmp
iret
xor
fidivrl
push
in
pop
and
imul
aam
jl
out
addr16
jge
fstps
in
or
jle
sti
xchg
fimuls
push
fwait
dec
sbb
fwait
call
jb
shlb
sbb
jge
outsb
and
orl
mov
aaa
enter
loopne
mov
jp
mov
outsl
js
sbb
pushfw
sbb
cwtl
pop
insb
inc
mov
addr16
fwait
test
iret
xchg
xor
pop
fisttpll
mov
and
push
popf
cmp
pusha
push
das
push
test
cmpsb
jmp
jbe
pusha
mov
pop
sar
and
sub
xorl
xchg
inc
in
out
dec
pop
inc
sbb
and
mov
loop
dec
das
out
decl
adc
jl
negl
cltd
test
into
mov
adc
in
cmc
insb
iret
inc
inc
stos
scas
inc
push
lcall
push
lahf
lods
dec
test
adc
enter
mov
sub
sub
inc
or
fcomps
jnp
stos
mov
repnz
xchg
fcomps
xchg
sbb
das
adc
shrb
insl
outsl
dec
mov
scas
mov
or
jae
popa
loope
test
pop
lahf
aas
mov
sub
cmp
cmp
fdivrl
movsl
setbe
cmc
fistpll
gs
mov
lods
lret
or
pop
int
mov
loop
stos
cmp
pop
mov
xchg
dec
sbb
cmp
fsubs
subb
push
push
pusha
loop
dec
out
scas
add
xchg
sbb
and
sti
add
mov
jae
or
push
jge
pop
push
mov
xchg
sbb
cltd
lods
sbbb
cld
jbe
icebp
xchg
jne
cmp
rorl
out
cli
dec
or
xor
or
mov
jl,pn
dec
lds
test
push
nop
dec
xor
push
popa
mov
movsb
inc
mov
icebp
sbb
fldcw
repz
inc
in
add
xchg
test
stos
push
movsl
arpl
push
shrl
adc
jle
mov
jecxz
std
push
ja
inc
andb
push
mov
out
jne
dec
push
fwait
clc
jmp
popf
addr16
mov
adc
fmul
cwtl
push
push
xor
sahf
shll
loope
inc
fcompl
push
add
fidivs
mov
push
dec
jae
les
mov
sbb
nop
imul
push
add
aad
jno
mov
push
jmp
push
sbb
shrb
insl
pop
jl
push
or
daa
and
cmp
push
push
jle
or
add
inc
mov
xlat
jmp
xchg
or
addr16
iret
dec
fucomp
sbb
pushf
cmp
xlat
hlt
jne
inc
adc
pop
hlt
jnp
push
test
int
lea
test
push
mov
sub
gs
aam
mov
pop
mov
mov
shrd
or
repz
popf
stos
push
cs
shr
test
hlt
mov
and
dec
into
into
sub
inc
dec
aaa
cmp
sub
aaa
mov
and
ja
daa
xchg
insl
scas
jg
test
xchg
sahf
cli
or
mov
outsl
ss
adc
lcall
dec
shll
idivl
fisubl
test
jg
sti
jno
mov
repz
jne
jl
or
movl
push
xor
loopne
mov
ss
dec
jecxz
out
add
out
lods
mov
cltd
pop
out
scas
push
in
aam
dec
mov
les
mov
adc
sbb
mov
push
jnp
xlat
mov
lock
xor
and
ret
push
addr16
push
les
push
mov
push
out
or
insl
nop
sbb
mov
fistl
in
iret
xchg
sub
lds
fs
popf
xchg
enter
jae
stos
mov
stos
icebp
inc
cld
jg
jb
mov
mov
sbb
repnz
lcall
inc
cmp
lcall
inc
jne
sbb
iretw
outsb
xor
xchg
sti
and
gs
dec
or
pop
jbe
jo
popf
xchg
dec
pop
mov
xchg
xchg
jge
sahf
lret
add
test
cmp
push
lods
jae
pop
testb
and
lahf
repz
add
cmpsl
in
pop
cmp
push
lock
in
fmuls
xor
inc
mov
test
add
jge
or
jmp
cmpsl
xchg
fs
or
xchg
or
inc
jnp
mov
cmp
mov
mov
mov
jg
pop
sar
xchg
sub
xchg
cmpsl
sub
dec
push
sbb
jno
jne
imull
in
hlt
imul
mov
lret
add
cs
push
sbb
lea
mov
xchg
fmuls
cmp
xchg
push
in
add
outsl
mov
add
pop
mov
ret
push
pop
push
dec
pop
cmp
sbb
xchg
icebp
es
test
push
push
out
test
mov
mov
fsubr
jge
call
push
hlt
or
int3
fdivr
rcrb
imul
fdiv
mov
mov
jl
lods
ds
sahf
cwtl
xchg
mov
adc
nop
pop
adc
nop
and
call
inc
lods
add
xor
or
lds
cmp
dec
enter
gs
test
or
lods
mov
jle
cmc
pop
imulb
lret
int3
sbbl
fstps
and
fnstenv
out
test
bound
stos
ljmp
pop
add
sbb
fs
aam
andb
sub
push
shrb
dec
dec
sbb
jg
lcall
jne
push
scas
lret
adcb
iret
rcrb
or
add
push
mov
push
insl
das
pop
lahf
sub
mov
inc
push
cld
add
xchg
insl
andl
cs
push
fwait
push
push
dec
pminsw
lods
push
lods
call
cltd
loope
test
clc
pop
scas
cmp
lret
mov
push
cmp
pop
ljmp
cmp
imul
clc
filds
es
les
push
fldln2
mov
xchg
xchg
pop
xchg
leave
or
mov
sub
or
mov
popl
push
in
lret
inc
stos
cmp
add
pushf
sbb
data16
push
repnz
push
sub
dec
ror
cmp
gs
push
lea
inc
push
pop
ds
sbb
out
pushf
pushl
jp
hlt
ljmp
adc
repnz
dec
std
scas
cmp
mov
inc
push
jmp
shll
pop
jns
pop
inc
xchg
arpl
fs
cmpb
in
add
out
xchg
mov
test
out
xor
test
test
jno
ja
aam
lods
adc
outsl
and
xchg
pop
xchg
and
sub
mov
xor
adc
push
stos
leave
pop
jnp
pop
push
sub
inc
in
ret
sub
push
test
mov
popf
pop
repnz
dec
lcall
mov
out
add
sbb
sbb
or
mov
or
pop
test
add
aaa
incl
fidivrl
adc
ror
jns
imul
add
ds
mov
pop
dec
lcall
cmp
out
cmp
cmc
push
ljmp
call
add
push
aad
cltd
cmpsb
insb
and
lcall
insb
or
int3
jbe
jne
fs
xchg
mov
stos
mov
sahf
aaa
out
mov
imul
test
mov
push
or
or
hlt
push
iret
cmp
je,pt
movsb
fistps
rorb
xor
inc
fisubrl
inc
mov
mulb
sub
insl
nop
dec
mov
mov
sub
mov
pop
test
enter
inc
xchg
cmc
test
pop
sbbl
sbb
in
lret
push
ss
pop
cs
jecxz
add
lods
xor
pop
xchg
outsl
pop
imulb
xor
test
jecxz
jge
adcb
stc
push
sbb
add
aas
cmpsb
int
xchg
mov
add
push
iret
mov
mov
mov
incl
xchg
imul
sbb
stos
int
jno
test
mov
pop
rcrl
push
leave
push
test
xchg
push
ud2
pop
and
divl
fimull
arpl
jno
mov
adc
push
xor
push
cwtl
arpl
outsb
pop
or
xlat
repz
add
fistps
mov
aas
mov
or
xor
in
fisubl
out
cmp
jno
fisubl
jl
mov
dec
inc
sbb
mov
push
hlt
or
cs
aad
sub
adc
sbb
outsb
push
les
jb
mov
call
fs
adc
sti
push
xchg
out
pushf
test
or
je
into
xchg
push
mov
rcrb
ret
adc
neg
or
inc
or
aas
shll
and
jo
shr
xchg
loopne
loopne
pop
push
add
int
pop
pop
mull
or
into
repz
fistpl
ds
test
and
push
out
data16
std
cmp
leave
and
mov
adc
iret
or
cmp
jns
cltd
cmpsl
nop
in
dec
cli
pusha
pop
mov
sub
int3
lds
movsb
enter
pop
popa
lods
mov
mov
mov
aaa
mov
cmc
sahf
das
fwait
sahf
mov
lret
sbb
mov
jge
push
xchg
and
movsb
scas
push
jns
lret
shlb
inc
int
inc
dec
mov
dec
mov
push
inc
into
mov
cmp
adc
and
cmp
je
add
lret
fldt
in
mov
add
rcrb
or
lahf
scas
mov
fisttpll
pop
gs
push
jmp
test
sub
in
or
jo
loope
dec
aad
push
lds
cmp
dec
pop
pop
jmp
cmp
ds
jecxz
push
rcrb
rolb
mov
dec
fcoml
test
pop
mull
or
mov
xchg
iret
cmp
insb
jecxz
or
aam
xor
cmpsb
das
adc
dec
sub
out
mov
lock
loopne
fs
dec
xlat
jae
add
mov
cmp
into
shr
adc
add
sbb
xlat
mov
hlt
iret
sub
sbb
xchg
inc
shrb
push
inc
cmp
mov
adc
cmp
jo
test
pop
jl
nop
add
in
add
cmc
aas
lods
xchg
insl
jns
mov
mov
mov
push
enter
iret
push
fwait
push
push
call
mov
xchg
andb
push
push
andb
xor
jmp
cmp
mov
adc
andb
shrl
xchg
push
xor
sbb
jmp
push
ret
lcall
ljmp
sbb
out
mov
cmp
xor
sub
mov
adc
jle
mov
out
jne
div
push
xchg
mov
mov
dec
adc
mov
mov
repnz
in
decl
test
data16
or
shlb
out
jl
jae
pop
dec
in
in
push
inc
sub
sbb
sbb
mov
jno
leave
mov
mov
cli
mov
shlb
mov
popl
mov
cs
std
shrb
jmp
aam
test
inc
test
testb
imul
sbb
jns
mov
out
sbb
cmp
pop
and
fldt
addr16
bound
ss
sub
stos
orps
push
pusha
push
or
pop
add
mov
and
enter
inc
repz
fimuls
xchg
orl
out
mov
cmp
dec
dec
xorl
aas
and
repz
dec
sbb
mov
fisttpll
pop
sarb
outsb
into
iret
push
mov
hlt
incb
jp
mov
cmpl
iret
loop
stc
push
incb
test
lock
pop
xchg
insb
push
jo
call
xor
adc
pop
in
jp
and
and
add
pusha
xchg
push
dec
mov
sub
pop
stc
push
popf
sub
js
push
xor
xchg
out
or
push
add
imul
cmp
test
pusha
or
gs
sbb
fdivl
and
call
mov
dec
in
xchg
jl
push
stc
dec
inc
sbb
call
je
jge
cltd
cwtl
adc
xlat
loop
sbb
jge
mov
xlat
cmpsb
mov
dec
fcoms
in
insb
adc
jnp
cmp
fldl
rcrb
pusha
cld
or
loop
jmp
cmpsl
and
enter
mov
inc
adc
insb
xor
dec
inc
jmp
fidivs
sbb
in
aas
xor
jmp
jmp
fidivrl
add
xchg
int3
int
or
or
mov
test
xor
shrl
lds
mov
sub
sbb
push
mov
or
mov
out
call
jl
adc
ficoms
push
testb
dec
xchg
sbb
cmpsb
mov
andl
add
fs
jmp
jne
inc
in
xlat
movsb
dec
mov
jnp
and
stc
frstor
mov
inc
mov
rolb
xor
dec
push
dec
sarl
push
push
push
jg
mov
cmp
jo
mov
imul
and
and
cli
mov
lahf
lcall
lock
mov
jmp
push
sub
inc
enter
dec
cmp
test
addl
pop
inc
push
inc
push
jl
bound
test
lcall
int
ljmp
mov
dec
mov
jl
punpckhbw
inc
into
cmpsl
repz
sbb
mov
pop
lret
imul
js
inc
xor
scas
imull
pop
test
inc
lods
scas
insl
xchg
jmp
lcall
hlt
out
mov
pop
mov
loopne
sub
idivl
mov
cltd
mov
insb
xor
push
mov
loope
xchg
sarl
rclb
ficoms
sub
mov
inc
into
jle
cld
jbe
dec
fbld
stos
jno,pt
or
sub
jnp
scas
popa
push
sti
or
pop
inc
imul
pop
add
dec
mov
cmp
push
scas
jbe
and
imul
ds
push
fs
add
pusha
movl
iret
ja
js
add
mov
pop
adc
test
push
and
pushf
inc
add
dec
testb
lods
js
jnp
test
push
lahf
mov
fcom
ljmp
sub
shrl
xor
jl
mov
pop
add
push
mov
ds
cmp
mov
rcrb
repnz
test
sub
rcrb
sub
out
inc
or
mov
cmp
mov
cmp
cmp
scas
jmp
sub
fistps
lods
push
mov
hlt
repz
inc
inc
dec
cmp
cmp
fdivrp
gs
cmc
lahf
dec
or
mov
dec
xchg
adc
int
xchg
xchg
fiadds
ficompl
jp
push
test
ret
dec
dec
mov
push
das
pop
stc
ror
lods
sbb
movsb
fiaddl
pop
mov
in
pop
xcrypt-cbc
cmpsl
adc
xor
test
test
aaa
fimuls
cld
imul
cmpsl
adc
adc
aam
sbb
sarb
loope
repnz
pop
push
rcll
repz
cmp
pop
stos
xorl
loop
sahf
pop
sub
test
fabs
pop
mov
cli
sub
mov
lret
dec
mov
aaa
insb
sarl
push
pusha
int3
rorb
cmpsl
scas
sub
mov
xchg
push
ror
lahf
pop
pop
cmp
push
rolb
xorl
sbb
inc
dec
jo
movsb
mov
sbb
bound
and
lea
sub
scas
push
jmp
mov
fwait
test
aam
mov
rorl
rcrb
mul
bound
mov
shlb
movsb
enter
lret
jge
das
add
mov
ja
int
cmp
fs
and
negl
pop
add
in
mov
xchg
into
cmp
imul
cmpsb
bound
mov
jb
cltd
imul
or
imul
mov
outsl
inc
shlb
ds
push
leave
jl
xchg
je
mov
imul
in
enter
mov
xchg
xor
ret
arpl
or
movsl
test
repz
jge
pcmpgtb
mov
dec
enter
iret
adc
iret
into
dec
pop
pop
xchg
nop
fcompl
jo
pop
arpl
dec
pusha
cwtl
adc
mov
dec
leave
jnp
in
int
out
int3
jae
jg
sub
lahf
sbb
aas
add
je
inc
mov
xor
or
jge
cli
pop
cmpsb
pushl
in
mov
jbe
push
fisubs
shll
lret
cmp
mov
sar
cmp
out
lcall
mov
jo
out
call
rclb
adc
pop
mov
sar
xor
adc
mov
sub
and
cmc
xor
jg
ficoml
mov
or
add
push
adc
push
data16
push
cld
cmp
or
jno
cs
jle
cmp
mov
or
mov
dec
xlat
sbb
fsubrl
adcl
rcrw
or
adc
or
icebp
xchg
or
push
lcall
in
dec
cmp
mov
in
xchg
mov
and
sbb
cmp
outsb
aam
aas
add
mov
je
jns
jecxz
sub
idiv
mov
adc
pop
fidivs
setle
jmp
jecxz
mov
pop
and
insb
lods
dec
dec
xor
cmp
lods
mov
push
imul
aam
or
data16
call
imul
out
push
test
fsts
or
push
iret
pop
iret
inc
shlb
jl
push
sub
jo
in
sbb
sub
push
sub
cmp
imul
add
lods
adc
mov
loop
and
sti
in
push
lock
nop
shlb
push
mov
ret
out
cli
outsl
inc
lods
pusha
mov
mov
inc
sahf
jmp
push
push
test
lods
movsl
lret
mov
push
arpl
insl
jg
pop
push
mov
push
test
sbb
sbb
es
cmpsl
bound
sub
sub
push
push
inc
int
pop
iret
out
cltd
xor
mov
pop
fnstsw
popf
lcall
inc
mov
popw
call
aam
mov
nop
insl
lret
ss
clc
dec
movsb
mov
es
pop
or
mov
jecxz
repnz
movsb
imul
dec
xor
mov
lcall
xchg
cmp
sti
das
sbb
and
sub
and
pop
inc
rol
fwait
xchg
xor
insl
mov
je
or
sti
pop
and
js
cli
outsl
stos
sbb
lods
pop
int
cmp
push
into
xchg
jae
in
jp
cmp
das
cmpsb
stos
add
jle
mov
out
lahf
sti
push
jns
aas
cli
jg
xchg
push
lret
outsl
stos
and
pop
lods
mov
out
jbe
orl
imul
lret
push
add
pop
leave
pop
lock
movsb
popf
movsb
daa
dec
adcb
ror
popa
pusha
movsl
cmpsl
cmp
cmp
xchg
imul
es
push
xor
push
iret
lea
adc
ljmp
push
dec
xchg
test
call
test
movl
sti
mov
jo
xor
adc
insb
jo
jp
leave
imul
and
mov
push
popf
sbb
in
fst
aaa
jbe
bound
adc
sarl
inc
fdivl
mov
daa
idivb
int
push
into
pushf
jnp
int
mov
cmp
push
jo
add
adc
lret
imul
call
push
repnz
int
xor
jle
xchg
outsb
outsl
aas
dec
xor
push
clc
sbb
lds
cwtl
sbb
mov
cmp
into
xor
or
mov
iret
dec
sbb
or
rolb
roll
loopne
addr16
ljmp
xor
out
add
mov
mov
fistps
jg
push
pop
data16
das
and
aad
cli
mov
xchg
and
out
jmp
cmp
lea
je
orb
jo
jle
roll
out
cmp
add
leave
push
mov
bound
and
scas
sbb
jbe
or
les
ljmp
call
inc
adc
cmp
cmc
pop
or
es
inc
jo
scas
inc
sbb
cmpsb
mov
popf
lock
jae
inc
bnd
cmc
in
cwtl
mov
rorb
sub
addr16
cmpsb
adc
repz
bound
mov
and
out
inc
incb
aam
inc
jle
inc
sbb
pushf
xor
pop
pop
jno
bound
cltd
movsb
sbb
out
sbb
add
movsl
call
or
out
loope
call
rcrl
inc
orb
dec
jmp
js
mov
lahf
mov
mov
out
inc
into
or
fcmovb
mov
push
jns
add
rclb
and
mov
push
jae
adc
inc
jle
push
push
outsb
test
shl
shld
sti
mov
repz
xlat
enter
sub
dec
out
push
inc
sti
fs
push
popl
loope
test
pop
pop
sub
mov
iret
rsm
xor
and
add
pop
std
sbb
pop
lock
or
lret
imul
test
cli
aad
xchg
dec
stos
xor
jno
cmp
pop
add
adc
mov
xlat
xchg
popl
pushf
das
mov
xlat
mov
mov
jno
mov
cld
ljmp
ss
mov
add
cmp
pushf
loope
dec
pop
out
cwtl
push
jmp
mov
iret
sub
mov
out
mov
dec
adc
xlat
jmp
and
xchg
and
or
stc
stos
hlt
pop
sbb
call
pop
loopne
add
lcall
fidivl
cmp
imul
dec
lods
lds
loop
pop
loop
pop
mov
and
idivb
mov
loopne
out
fstl
fsubl
and
mov
js
cli
fcomps
nop
dec
repz
xorl
lds
dec
shll
mov
xor
xchg
jb
jg
lcall
aad
xchg
mov
xor
cli
mov
cmp
or
pop
les
cmp
test
and
push
out
jne
fxch
outsl
and
jb
mov
push
ret
jecxz
push
jp
sub
mov
test
inc
inc
fisttpll
arpl
mov
lahf
out
pop
push
popf
fisubrl
adc
nop
inc
aam
add
lcall
imul
lahf
add
add
push
xchg
xchg
es
or
cld
es
lea
lea
dec
rorl
xchg
loope
push
fprem1
pusha
pop
mov
jbe
pop
cmp
loope
push
aas
lea
movsl
push
mov
jmp
sbb
push
imul
mov
sbb
inc
repz
mov
fdiv
sbb
cli
in
popa
adc
push
std
inc
push
clc
je
sbb
mov
ljmp
data16
cmp
add
cmp
push
addr16
xor
adc
sub
int
fcmovb
mov
jmp
fs
cmp
mov
notl
pop
jge
sub
xchg
loop
or
sub
xchg
cmpsb
lret
add
adc
cmp
xchg
inc
mov
push
jge
xchg
mov
out
or
and
cmc
lds
push
in
dec
mov
in
call
sbb
mov
icebp
adc
pop
cld
push
aas
call
push
cli
or
aas
cwtl
pop
mov
aam
push
in
sarl
dec
add
push
leave
or
popa
dec
jg
sahf
jo
xor
mov
popf
mov
sahf
dec
adc
imul
fistl
jo
gs
and
aaa
push
repz
data16
pop
flds
lea
sti
lods
rclb
stc
sbb
mov
or
add
sub
dec
mov
and
xchg
cmpsl
movsl
dec
push
cmpsb
xorb
mov
sub
sub
mov
es
cmp
inc
popf
fstpl
dec
mov
stos
sbb
xchg
cmpsb
ja
arpl
add
pusha
xorl
and
je
rep
notb
aaa
cmp
negb
cmpsb
imul
dec
mov
xchg
add
clc
ret
loop
xor
iret
bound
mov
and
jae
mov
test
xchg
ret
orb
jecxz
and
in
or
cld
mov
sbb
mov
fcomi
scas
xchg
lret
lret
ja
out
add
sbb
test
int3
push
subb
loope
lahf
pop
pop
cmp
dec
lds
jmp
xchg
xorl
hlt
push
aad
pop
repnz
pop
leave
mov
mov
or
hlt
ja
cli
testl
cwtl
data16
daa
scas
jmp
adc
loopne
xchg
push
stos
inc
inc
push
jge
jae
cmp
pop
fiaddl
fs
out
outsl
loope
inc
lods
sbbl
pop
jns
adc
adc
xor
loopne
adc
call
xor
loop
mov
imul
sarl
xor
outsl
imul
cwtl
dec
in
mov
rorl
ret
mov
les
jae
icebp
popf
xchg
jp
mov
adc
cmc
cmp
scas
pop
push
ret
add
in
sub
jecxz
test
push
mov
dec
cmp
lods
add
mov
cmpsb
or
mov
xorl
sbb
iret
jge
scas
lcall
out
mov
jl
sarl
in
insl
and
and
pop
jle
mov
pop
pop
xor
std
xor
fmul
fwait
mov
pop
cmp
pushf
inc
sub
std
dec
lret
mov
outsl
jle
scas
and
mov
mov
xchg
mov
sbb
outsb
imul
les
insb
pop
iret
inc
scas
adc
iret
inc
and
icebp
mov
cmp
xor
sub
imul
insl
test
ja
bound
ljmp
pop
jns
jns
add
lret
test
mov
dec
ss
ret
mov
xchg
cmp
jno
push
cwtl
out
cmp
aam
cmpsb
out
sbb
insl
in
stos
xchg
fisubrl
xor
mov
test
mov
xchg
dec
pop
add
je
fistps
inc
addb
rcr
adc
icebp
dec
sbb
mov
mov
jp
repnz
test
xor
insb
ret
into
ror
sahf
icebp
xchg
or
shll
jg
sub
pop
push
rorb
out
movsb
stos
and
mov
jl
inc
pushf
add
sar
lcall
sub
mov
sbb
je
call
fisttpll
shl
pusha
push
sub
inc
cltd
stos
ljmp
jecxz
mov
push
aas
out
iret
inc
or
outsb
sbb
cltd
sub
imul
ret
jae
and
xchg
dec
push
out
mov
cs
dec
xor
push
jns
dec
cmp
lods
pop
push
iret
mov
cmp
hlt
adc
jle
pop
xchg
lods
insl
cli
jecxz
lods
mov
and
and
bound
loop
sub
push
push
cs
mov
add
xor
cltd
loopne
shr
push
mov
rclb
loope
mov
fildll
data16
jbe
iret
xor
das
daa
insl
rorb
js
or
and
xor
cmp
fucom
jecxz
cmc
and
pop
add
lds
fisttpll
sahf
loope
fstl
data16
lcall
sbb
mov
cmp
ret
jp
in
idivl
or
dec
dec
adc
xor
es
aaa
dec
sbb
clc
dec
mov
mov
pusha
add
imul
jle
pop
hlt
mov
sub
dec
mov
fcmovne
sub
js
xchg
sbb
inc
out
dec
dec
mov
mov
mov
push
dec
shr
scas
sub
mov
jb
xor
fdivl
adc
lea
notb
mov
xchg
xchg
mov
adc
dec
aas
jnp
fs
dec
jnp
lds
hlt
cmc
cmc
icebp
cld
sbb
inc
and
fst
movsb
test
mov
lea
and
lea
pop
test
push
and
sbb
mov
adc
xchg
clc
imul
or
insl
jns
fwait
xor
mov
cmp
xchg
and
test
pop
ror
mov
sbb
sub
inc
stos
mov
sub
xchg
xor
push
jp
test
or
jl
fcoml
fcoml
in
push
movsl
mov
repz
fwait
js
push
xchg
fs
popa
pusha
insb
mov
xchg
xchg
push
es
popf
popa
sub
loop
int
std
stos
addr16
push
and
test
iret
mov
sbb
pop
aaa
mov
cltd
sub
jb
sbbl
arpl
dec
xlat
push
sub
cmp
clc
cld
cmp
outsb
cmp
cmp
xchg
mov
daa
push
sbb
mov
mov
shr
fisttpl
mov
sbb
repz
adc
and
add
negl
call
cltd
cs
test
pop
fs
fwait
push
push
xchg
xor
mov
jmp
mov
popw
xorb
fnstcw
or
and
lret
jnp
lds
movsb
jbe
xor
fwait
mov
test
or
xlat
pop
scas
imul
outsl
pop
int3
sub
cmp
mov
mov
lcall
or
aaa
and
pop
andl
sub
pusha
insb
ja
xor
inc
fs
fsubl
sti
xchg
test
iret
les
xchg
add
xlat
std
pop
mulb
jg
inc
dec
hlt
out
pop
push
dec
jp
stos
mov
movb
xchg
jnp
inc
xlat
mov
sahf
dec
inc
add
das
pop
inc
call
test
jne
incl
push
cmp
push
fildll
hlt
mov
shrl
inc
loop
push
rcrl
movsb
add
xor
jo
int
mov
stos
xchg
or
sbb
movsl
lock
sahf
mov
cmp
out
ds
lea
test
lahf
aad
sub
and
ja
in
test
fstpt
loope
lods
fnstcw
sub
or
xchg
pop
ret
jne
popa
push
pop
in
mov
sbb
cmp
sub
mov
fs
pusha
stc
int3
and
mov
mov
mov
repz
xorl
nop
push
adc
stos
lods
outsl
mov
scas
mov
dec
repz
jl
cmpsl
push
sarb
xchg
repnz
mov
fildl
imulb
pop
xchg
ss
adc
or
stos
or
scas
inc
mov
dec
int3
sub
fmul
cmp
dec
and
mov
mov
dec
jle
mov
loope
loop
or
insb
ficoml
stos
dec
add
aad
or
loopne
popa
inc
inc
negl
sub
mov
cwtl
mov
jp
das
jbe
xchg
push
rcll
outsl
jge
sub
les
je
dec
shl
data16
or
decb
mov
sbb
adc
xchg
lret
maxps
sbb
out
lds
cmp
lods
dec
push
popf
cmp
adcl
mov
add
mul
jno
ds
push
fsubl
push
or
in
nop
lret
cmp
iret
adc
pop
ffree
hlt
push
orb
ret
je
sub
push
and
js
out
cltd
enter
sbb
into
icebp
scas
xor
adc
jae
xor
rol
sbbl
sub
xchg
mov
xchg
scas
test
xchg
stc
xchg
jge
cwtl
push
movsb
repnz
and
into
jo
loopne
cmp
pusha
mov
fildl
mov
mov
out
mov
mov
sbb
mov
adc
mov
jae
xchg
jne
enter
xlat
cmp
inc
jnp
loopne
repnz
outsl
xor
std
push
clc
cmp
xor
pop
mov
ljmp
rcrl
cmp
cmpsl
xchg
add
rcll
inc
out
mov
xchg
adc
out
aam
jp
fwait
aas
inc
cmp
adc
shrb
mov
xor
test
add
xor
and
or
and
or
mov
movsl
mov
or
mov
adc
mov
xchg
mov
and
mov
das
mov
into
ds
pop
add
aad
rorl
adc
xor
test
jp
pushf
xchg
pop
sbb
fisubrs
jbe
gs
inc
das
xor
fstpt
add
xabort
xor
andb
shrb
lock
shl
out
leave
sub
stc
outsb
es
les
in
adc
movsb
xlat
jmp
std
mov
outsb
ret
lods
mov
daa
mov
aaa
xchg
xchg
xchg
adc
shr
sbb
and
hlt
xchg
pusha
cmpsl
and
jo
dec
enter
out
mov
sbb
loope
ja
add
aas
in
subl
mov
ss
jg
iret
xchg
jecxz
xchg
dec
es
xchg
cmp
ret
out
dec
dec
xlat
fucom
aam
cltd
dec
leave
int
sbb
sbb
fsubs
int3
gs
rolb
adc
test
sarl
outsb
scas
and
cmp
jno
and
push
mov
and
and
mov
and
ret
div
xor
loop
cmp
inc
or
xchg
imul
jle
in
insl
mov
sbb
ficompl
clc
pushf
and
mov
xchg
in
out
dec
push
test
and
stc
data16
sbb
mov
mov
lret
fwait
and
mov
adc
mov
icebp
cmp
xor
xchg
popf
aad
in
mov
cmc
out
cmc
dec
sub
xchg
repnz
lds
mov
xor
add
sbb
rcll
or
dec
xor
std
test
out
pop
xor
dec
push
lcall
mov
mov
sbb
hlt
leave
sub
shlb
dec
xor
scas
mov
and
add
fs
sarb
dec
sbb
out
fisubrl
adc
sbb
xchg
mov
jp
in
pop
leave
sarb
adc
fs
jl
jbe
mov
mov
fldenv
cmp
sbb
rcl
mov
shll
dec
out
sub
pushf
push
imulb
jnp
xlat
dec
pop
mov
lods
sbb
sub
pop
mov
ja
pop
int3
or
push
xchg
push
push
aad
or
gs
fdivrl
cmpb
aam
push
add
mov
pop
mov
jecxz
cmp
mov
sbb
xchg
fcom
pop
jno
sub
mov
xchg
in
sti
gs
or
xor
pop
xor
aas
adc
lods
xlat
mov
mov
scas
sti
add
jg
inc
subl
sub
add
mov
push
xchg
dec
or
sbb
sti
cmpb
pop
bound
inc
out
or
jae
imul
sub
jge
cmp
aam
popa
push
push
add
cli
jb
shll
mov
mov
stos
mov
iret
cmpl
pop
and
lret
addb
mov
pop
movsl
pop
cmp
test
jg
cmp
jno
mov
lea
icebp
call
sbb
popf
add
mov
aaa
addl
or
lds
push
xor
mov
jo
in
and
cmp
xchg
mov
mov
sbb
sbb
xchg
push
mov
xor
dec
and
pop
cmp
and
aam
dec
jmp
pop
lea
mov
pop
je
pop
push
les
push
arpl
cmc
jbe
or
mov
repz
push
shll
xchg
add
mov
mov
mov
mov
mov
icebp
inc
push
ds
mov
mov
js
int3
fs
fabs
rorl
inc
ljmp
mov
push
mov
cmc
mov
nop
lahf
inc
rcll
or
sub
dec
mov
negl
insl
xor
and
scas
inc
cld
test
sahf
test
hlt
in
sub
sbb
cltd
lea
sbb
inc
test
cltd
xchg
ljmp
in
mov
and
aad
daa
imul
mov
pop
les
gs
fiadds
rolb
xchg
dec
mov
xorb
arpl
adc
into
jmp
fcmovu
out
cmp
lcall
inc
enter
mov
xchg
div
cmp
xchg
outsl
outsb
in
adc
test
cmp
int3
cmp
dec
lcall
sub
jl
rolb
dec
mov
into
push
add
rclb
sub
or
push
lret
ljmp
xchg
mov
or
stos
cmp
cld
testl
mov
loope
or
call
cwtl
adc
ficoms
cmp
icebp
mov
xchg
push
icebp
mov
sahf
in
rolb
dec
repz
test
xlat
dec
lock
fcomi
dec
and
jnp
sub
pop
jge
in
in
scas
jge
movsb
orl
or
aas
jbe
ljmp
dec
lahf
repz
neg
adc
cli
adc
xchg
cld
xchg
xor
test
test
out
adc
xchg
pop
mov
dec
ds
sbb
in
xchg
jp
sub
dec
jmp
add
cwtl
xchg
or
cmpsl
in
sub
ss
xchg
jbe
mov
jnp
mov
inc
test
or
mov
inc
pop
jmp
push
mov
data16
xchg
loopne
lret
adc
add
fs
js
jmp
in
pop
insl
scas
aam
pop
adc
cmp
dec
dec
inc
fldenv
add
out
cwtl
stos
data16
inc
lahf
inc
sbb
pop
xchg
xchg
cmp
lods
mov
or
xor
loope
push
mov
xchg
adc
loop
cwtl
push
lret
lods
add
iret
je
cmp
out
mov
dec
xchg
add
xchg
mov
roll
and
sbb
imul
outsb
cmp
fs
jne
icebp
jl
pop
dec
xchg
jbe
in
pop
ja
inc
mov
lcall
mov
aaa
ret
pop
cmp
lahf
std
xchg
pop
xchg
push
insb
lods
in
dec
das
mov
mov
inc
mov
rcrl
adcb
inc
cmp
sbb
js
inc
cmp
fldenv
movsl
xor
roll
les
jne
inc
mov
mov
insb
insb
ja
nop
ret
inc
pop
cmpsl
sub
pop
leave
cmp
xchg
pop
jno
clc
xchg
mov
cwtl
bound
jmp
inc
add
mov
sbb
mov
ds
jae
jae
fucomip
nop
fwait
insl
fdiv
mov
push
cli
and
pop
mov
ret
pushf
mov
mov
rolb
shrl
maxps
adc
into
rol
jecxz
bound
xor
movsl
or
mov
mov
fdivs
xor
mov
jmp
and
sbb
push
shll
add
cmp
jo
dec
pop
test
rol
and
cs
outsb
or
inc
xor
push
fmuls
sub
xor
cwtl
pop
mov
sbb
insb
mov
mov
pusha
and
pop
sbb
int3
imul
mov
int
idivl
xchg
mov
or
pop
cmpsl
mov
mov
and
daa
and
call
js
movsb
mov
icebp
ss
mov
les
push
aaa
or
add
subl
hlt
xchg
stos
pop
js
insl
pop
scas
cmpsb
lret
xor
xor
mov
rolb
out
test
shll
inc
mov
jle
fldt
mov
xor
cmp
insb
je
sub
out
pop
iret
addr16
or
bnd
or
push
cmp
es
mov
cmpsl
inc
cwtl
xchg
shrb
sub
loope
insb
popa
sahf
pop
push
jp
out
xchg
popf
add
pop
xor
xchg
shll
cmp
pop
adc
popa
popa
mov
adc
int
fiaddl
in
fdivrl
dec
lea
pusha
outsl
sahf
xor
sbb
pop
les
imul
into
jbe
cmp
cld
push
xor
push
arpl
fdivrs
je
push
loope
pop
nop
jne
mul
rolb
aas
mov
fstl
mov
pushf
and
jmp
ss
pop
pop
mov
or
rol
sbb
and
stos
test
inc
pop
adc
push
sub
daa
sbb
fistps
sarl
jmp
lret
cs
insl
mov
pushf
mov
cmp
jl
sub
sub
repz
adc
pusha
mov
arpl
fs
in
enter
mov
addb
pop
cwtl
cltd
inc
ret
push
lahf
test
jle
enter
and
outsl
pop
inc
jnp
cmp
mov
popf
sbb
lods
inc
and
repz
mov
mov
mov
jge
clc
rclb
je
adc
cld
sbb
jge
stos
je
imulb
cmp
fmul
out
xchg
sub
pop
xchg
mov
out
outsl
jbe
cmp
movsb
mov
mov
cmp
pop
dec
xchg
cltd
ffreep
inc
add
push
loopne
inc
xchg
in
stc
xchg
popf
push
clc
aaa
xchg
add
push
repz
cmp
popa
daa
adcb
addl
cmpsb
loope
arpl
jmp
aam
leave
stc
cmpsb
pop
bound
and
mov
test
inc
sub
iret
outsb
aaa
mov
outsl
jg
jae
sbb
dec
jmp
and
sbb
fxch
out
popa
hlt
mov
cmp
xor
pop
mov
ds
push
and
push
sub
pop
dec
in
testb
lods
lds
decl
ret
pop
fsub
cwtl
inc
into
pop
inc
mov
adc
sub
mov
cmpsl
mov
push
or
lcall
mov
rorb
sub
pop
lret
pop
fmuls
jae
ficoms
add
jmp
out
add
and
ja
mov
fistpl
imul
ffreep
fdivrs
inc
xchg
push
or
les
rcll
push
inc
add
test
sub
push
push
mov
adc
loope
popf
cmp
cmc
jbe
mov
stc
xor
dec
add
rorb
mov
xlat
stos
lahf
push
or
mov
in
mov
ficompl
cmp
repnz
repnz
sarl
fldl
das
push
dec
shll
mov
movsb
rcl
mov
les
cli
or
inc
movsb
ljmp
cmp
inc
mov
lahf
pop
shll
adc
jno
and
cmp
ja
push
jmp
sbb
hlt
ret
dec
pop
movsl
add
and
jmp
or
mov
fwait
cld
ss
and
shr
pop
sbb
imul
sahf
int3
pop
shl
leave
inc
jae
pop
xor
or
lea
test
out
stos
scas
cmpsl
pop
aad
ret
std
test
fildll
cmp
popf
bound
cs
xor
or
leave
xchg
or
cmp
daa
sbb
loope
sbb
popa
movsl
fstps
jg
lret
sbb
add
sbb
sbb
in
lods
outsl
and
div
mov
cmpsb
push
cmp
out
push
das
jecxz
push
mov
dec
skinit
mov
xor
adc
push
imul
test
shl
mov
nop
xchg
cs
xchg
scas
out
xchg
adc
xchg
sbb
xchg
mov
push
ret
outsb
sbb
iret
loope
push
sub
in
push
pop
lea
js
in
push
jle
dec
jmp
movsl
sub
push
movsl
rorb
rorb
cltd
xor
cmp
inc
fidivs
or
out
stos
push
loop
sub
fisubl
or
cltd
ss
sub
lock
scas
sbb
sbb
xchg
mov
jl
lret
js
lods
test
mov
bnd
mov
push
pop
gs
test
mov
xchg
ja
lret
push
dec
movsb
shrb
punpckhwd
mov
sub
inc
dec
jmp
sub
push
clc
dec
cwtl
sbb
cmpsl
iret
ret
mov
and
cmpsb
xchg
xchg
and
mov
test
add
sub
in
shl
sbb
outsb
sub
outsb
lods
mov
mov
fs
or
inc
jmp
mov
pop
mov
push
lds
shlb
imul
cmp
cltd
or
sbb
mov
mov
scas
iret
jno
sahf
stc
sub
cmpl
dec
cli
bound
hlt
and
shrl
orb
add
push
mov
sub
shrl
push
jo
pop
shlb
dec
adc
xchg
outsl
sti
or
adc
jg
or
inc
shll
in
ss
movsb
xlat
adc
jecxz
jns
ds
jp
lea
or
out
add
mov
repz
data16
imul
jb
sbb
cmpb
push
mov
push
push
sub
icebp
fstps
lret
mov
repnz
into
call
push
cmpsb
imul
mov
daa
mov
jb
jl
stos
outsl
mov
sbb
lret
pop
cwtl
adc
or
mov
mov
lea
sbbb
adc
cs
xor
xchg
loopne
or
mov
hlt
js
sub
aam
sahf
cld
mov
inc
cmp
daa
leave
and
sub
fnsave
sub
mov
pop
inc
push
push
lock
mov
jmp
pause
leave
xor
lods
out
or
mov
lods
xchg
sub
sbb
andb
cld
in
jge
dec
fcomi
push
aam
cmp
repnz
pushf
enter
or
fbld
push
mov
cs
fistl
ret
xor
mov
in
lret
or
mov
dec
clc
mov
pop
hlt
mov
add
xor
in
jge
push
or
pop
dec
cmpsb
jl
aaa
outsb
shll
push
pusha
jbe
in
std
add
xchg
js
sub
imul
xor
pop
inc
jl
adc
mov
sub
add
and
shr
out
jae
add
pop
daa
inc
add
repz
push
mov
leave
scas
xchg
popf
in
mov
fstps
adc
stos
lcall
rcll
pop
insl
and
lods
ror
inc
test
inc
add
into
lds
cld
popf
popa
into
repnz
mov
test
xchg
cmp
std
push
arpl
repnz
test
leave
and
cmp
or
mov
fists
adc
xor
dec
movsl
das
pushf
lret
test
pop
sub
ljmp
push
call
in
cld
imul
dec
inc
lods
shll
mov
adc
cmp
push
pop
test
js
ss
mov
add
dec
adc
shl
in
xor
adc
out
cmp
icebp
lods
jmp
add
cmpsb
jecxz
in
cmpsl
push
cwtl
jle
aad
xchg
xor
mov
sub
int3
pop
pop
iret
popf
leave
jmp
sub
imul
and
add
jp
sbb
insl
jg
mov
mov
mov
xor
pop
jmp
ret
push
mov
dec
into
addr16
dec
sub
xchg
fldcw
push
jecxz
imul
stos
dec
cmp
jmp
mov
sbb
js
sub
mov
ret
dec
nop
mov
add
add
lds
jge
jno
pop
movsb
inc
cmp
ret
insb
test
pop
xor
testb
and
popf
cmp
jb
dec
jge
and
jbe
jne
inc
mov
mov
popf
rcl
add
imul
ja
push
imul
movsb
fmuls
mov
popa
xchg
sbb
nop
mov
adcl
add
xor
sub
push
hlt
loopne
sahf
pop
lahf
mov
andb
ljmp
sahf
mov
add
addr16
sub
jae
xchg
xchg
adc
shrl
push
addr16
in
jne
cltd
sub
fmuls
inc
jbe
adcl
out
jae
repz
jp
pop
push
fimull
cmp
sti
sarb
adcl
jae
int3
dec
push
cmp
out
daa
arpl
or
cmp
jnp
aam
jge
je
adc
jnp
mov
pop
and
cs
popa
movsl
push
cmp
je
xor
push
push
xor
scas
push
shlb
mov
addr16
pop
addl
cmp
mov
or
sub
adc
mov
test
jmp
push
inc
ja
pop
xchg
cmp
or
maxps
je
mov
xchg
jecxz
lcall
mulb
jp
es
and
rorl
xor
cmp
jp
mov
jnp
imul
out
pop
movsl
jno
mov
pop
mov
xor
or
xlat
imul
arpl
pushf
pop
clc
out
mov
jl
jbe
adc
dec
pushl
and
jmp
imul
xchg
lods
pop
test
aad
lods
lds
in
cld
jl
dec
add
sbb
dec
fistpl
cmp
repz
mov
adc
nop
jne
push
repz
cs
sti
inc
cmpsb
je
test
xor
jle
push
cmp
loop
add
dec
mov
jno
fs
in
push
movsl
sbb
add
dec
lcall
pop
clc
pop
dec
mov
ja
ds
or
outsb
insb
mov
out
pop
aas
jae
lcall
or
jle
pop
gs
shll
adc
stc
filds
stc
iret
xchg
mov
jbe
inc
fwait
fwait
dec
ror
cmc
nop
sub
mov
in
aam
jmp
test
inc
mov
mov
dec
lds
dec
xor
add
pop
pop
pushf
inc
inc
or
into
lods
xchg
mov
mov
sbb
aaa
es
fildl
movsb
or
imul
jmp
or
push
or
mov
mov
mov
gs
mov
push
insb
aas
ret
dec
lret
sbbb
mov
ror
adc
sarl
loopne
mov
iret
in
stos
enter
out
adc
dec
popf
sbb
and
bswap
add
pop
ret
inc
adc
cwtl
inc
aaa
in
jbe
or
in
inc
pop
sbb
pop
out
addl
fsubl
inc
jns
mov
jbe
inc
aas
pop
sub
call
sub
inc
out
cltd
fldl
int
mov
and
inc
cmpsl
inc
mov
cld
leave
movsb
test
ficoml
push
and
movsl
lea
cs
mov
sub
mov
jge
pop
push
pop
sarb
pop
xchg
jecxz
mov
out
mov
jno
xchg
jp
aaa
into
in
mov
in
nop
in
pop
mov
mov
jns
mov
mov
in
enter
mov
mov
pushf
and
jnp
adc
mov
mov
mov
mov
fsubl
mov
cmp
lret
fs
dec
daa
stos
pop
pop
scas
xchg
sub
outsb
pop
loop
jp
sbb
jg
mov
jmp
out
idivl
les
shrb
sti
popf
popf
xor
xor
cmp
movb
push
push
xchg
aam
in
cmp
add
negl
enter
mov
out
sti
jb
imul
and
push
shll
std
ljmp
outsl
jo
je
arpl
inc
xor
mov
nop
stos
mov
outsl
mov
std
jne
push
or
inc
cli
sub
xchg
adc
js
mul
mov
enter
and
mov
mov
je
mov
sbb
leave
jb
dec
or
push
daa
pop
jmp
sbb
lret
ds
dec
mov
arpl
ret
push
mov
and
mov
rcr
pop
imulb
idiv
mov
mov
xlat
add
pushf
mov
mov
and
or
fistps
ljmp
test
out
pusha
das
cmp
roll
int
xlat
inc
or
in
rol
inc
hlt
xchg
stos
dec
dec
je
xchg
or
jle
popf
push
pop
jbe
cmpsb
insb
hlt
fdivs
mov
mov
cmpsl
jmp
mov
mov
cmp
jno
outsb
adc
in
fldcw
xor
xchg
push
orps
sti
mov
mov
cwtl
dec
repz
sbb
mov
leave
andl
push
cmp
mov
int3
sbb
mov
push
ret
sbb
pop
inc
inc
inc
pop
inc
mov
pop
loop
pop
je
jl
sub
adc
xchg
cmp
in
arpl
cmpb
in
movsb
cwtl
sbb
cmpsl
leave
movq
dec
jo
sub
ljmp
and
icebp
dec
shrb
push
lods
icebp
hlt
test
imul
push
mov
lret
dec
mov
add
adc
dec
sbb
xchg
jns
lret
jb
data16
inc
and
out
dec
push
in
xchg
in
and
out
mov
cmpsb
int
adc
ficompl
out
and
cmp
mov
xchg
mov
nop
test
aas
jmp
cmc
pop
jmp
cld
mov
test
cltd
popf
aas
mov
pop
adc
dec
xchg
inc
fwait
pop
push
call
test
jecxz
push
ljmp
mov
sbb
stc
test
mov
aad
xchg
test
in
fstps
icebp
test
inc
test
pop
nop
or
stc
addl
cmp
jbe
aam
shlb
xor
icebp
into
jb
sahf
aad
jbe
mov
pushf
pusha
dec
mov
jge
or
mov
jno
in
jo
push
sub
mov
addb
mov
dec
dec
mov
or
ds
test
sub
mov
pop
adc
imul
jo
sti
cwtl
jne
subb
or
scas
imulb
mov
mov
bound
cmp
enter
sahf
mov
cmp
push
add
and
imul
sub
mov
out
pushf
and
lahf
into
clc
push
push
xchg
pop
mov
mov
dec
inc
fimuls
push
jns
in
sbb
scas
int
test
lods
cs
popl
add
lds
cmc
into
pushf
ret
lret
test
mov
inc
mov
xchg
pop
xchg
mov
sub
js
cmc
hlt
pop
add
push
mov
cmpsl
in
add
mov
data16
dec
fldcw
or
lods
sahf
push
scas
shrb
jecxz
hlt
inc
cmp
rorl
popa
mov
inc
ss
repz
inc
pop
ret
fstpl
inc
sbb
sbb
cmp
adc
mov
es
jne
insl
rorb
pop
icebp
jl
sti
fildl
imul
and
add
cmpsl
cmp
inc
imul
inc
dec
je
mov
mov
xchg
jmp
pop
add
fildll
mov
inc
lret
adc
pop
dec
inc
mov
aad
sbb
push
mov
cmpsl
ljmp
mov
mov
gs
add
and
stc
in
adc
shrb
mov
pop
mov
popf
pusha
or
adc
out
repnz
sub
pop
lahf
jg
xchg
dec
cmp
cwtl
xor
adc
mov
out
lock
or
mov
fisubrs
or
fldt
mov
xor
or
inc
xor
cld
and
pop
loope
mov
lret
dec
inc
lea
pop
cmp
andb
fs
dec
cmp
push
xchg
hlt
push
xchg
adc
repz
sbb
pop
push
outsb
pop
call
out
pop
mov
or
mov
add
cmpsl
push
jle
xchg
movsb
push
push
ret
jae
loope
loope
xchg
push
repz
mov
mov
xor
movsb
pop
xchg
stos
jg
pop
dec
push
inc
xor
pop
mov
mov
inc
pushf
cmp
jg
xor
push
push
and
popl
cmp
in
loopne
sti
cmc
icebp
and
or
cs
dec
aam
loopne
cmp
cltd
in
sti
sub
mov
push
std
mov
stos
mov
repz
imul
fimuls
arpl
xorb
mov
inc
pushf
andl
or
call
mov
mov
mulb
sti
and
sub
jbe
mov
cmp
fs
stos
rcll
xor
cmp
loop
ja
mov
loopne
iret
hlt
or
or
xchg
inc
push
adc
dec
ret
inc
mov
xor
pop
push
sti
push
sub
lcall
ljmp
inc
mov
filds
inc
mov
ja
jo
mov
and
jge
lahf
xchg
out
sbb
jmp
shlb
dec
imul
xorl
cld
inc
adc
jno
in
orl
cmp
das
add
jecxz
mov
add
sbb
push
or
int
rcl
fists
aad
ror
mov
pop
mov
push
jmp
mov
repnz
mov
cwtl
data16
mov
push
call
pusha
jge
jg
pop
push
add
imul
mov
inc
xor
cmc
int
xchg
mov
pop
xchg
push
dec
fwait
popl
add
or
mov
filds
sub
hlt
dec
xchg
scas
sbb
loop
cs
inc
mov
mov
xchg
pop
dec
and
pop
adc
jae
rorb
lret
xor
push
sub
sbb
pushf
sub
es
jg
sub
and
mov
and
jl
test
aam
ret
add
int
sbb
stos
mov
inc
stc
or
adc
mov
jns
popa
mov
jecxz
ljmp
xchg
sbb
pushf
pop
cwtl
mov
gs
call
sbb
bnd
loopne
ret
lods
inc
jnp
hlt
int3
mov
daa
repz
push
lds
adc
jp
mov
lret
inc
jns
cltd
lods
jns
sub
xchg
imul
pop
lcall
lea
loope
inc
jp
dec
push
js
test
movsl
jl
out
inc
dec
fwait
fwait
mov
clc
push
iret
test
push
lret
mov
sub
into
cli
std
fisubrl
decb
inc
xor
lea
sub
mov
jecxz
adc
xchg
or
sub
dec
push
dec
sub
push
into
xchg
data16
loop
push
cld
mov
fcompl
sub
movsl
push
into
jbe
outsb
aad
fiadds
mov
sub
repz
fs
mov
aad
ja
outsb
ljmp
sub
ror
ficomps
sbb
xlat
test
push
lods
movsl
inc
jmp
mov
imul
push
loopne
movsl
adc
lahf
pop
je
outsb
out
icebp
mov
inc
popf
rcrb
dec
xchg
adc
xor
shr
dec
fwait
pop
sub
cmp
adc
call
lcall
add
xchg
mov
xor
pop
leave
in
mov
insl
sbb
sarw
das
add
and
adc
into
jge
push
adc
pop
fsub
or
cmp
or
bound
xchg
rcrb
push
sti
sarb
sub
xor
test
mov
xcrypt-cbc
cmpsl
xchg
sub
mov
int
xor
push
mov
mov
repnz
rcl
or
sahf
dec
pop
stos
inc
mov
sub
mov
lods
xchg
orb
aaa
sbb
clc
inc
lods
inc
cli
lahf
pop
call
nop
fdivrl
adc
cltd
mull
clc
dec
xchg
fidivl
xlat
cltd
mov
jl
int
sarl
popa
xchg
insl
fisubrs
jbe
cmp
jge
gs
inc
fprem
gs
fsubrl
push
pusha
add
or
xchg
or
and
into
aas
and
rcr
xchg
in
imul
popa
cmp
sbb
adc
lcall
pop
subb
xchg
xchg
add
add
xor
adc
dec
int3
inc
dec
ja
jl
mov
pushf
call
push
lret
fcmovnbe
sub
sub
daa
sbbl
xor
daa
inc
test
imul
and
ret
add
push
xor
sbb
pop
push
in
jo
mov
pop
inc
add
daa
cs
adc
sub
mov
repz
and
aas
mov
shl
in
xchg
cwtl
mov
es
dec
hlt
pop
das
test
xchg
loopne
jge
xchg
ja
xchg
push
outsl
popf
add
subb
into
lcall
jge
fildll
sbb
and
loope
or
mov
push
sbb
push
insl
ss
bound
cmp
lds
add
repnz
jne
sbb
leave
or
stc
repnz
gs
jecxz
shrb
outsb
notrack
sub
lock
jp
xchg
imul
and
scas
xchg
add
sub
adc
adc
pop
outsb
mov
xor
mov
jge
or
and
and
ja
test
sub
sbbb
adc
and
arpl
mov
sub
fiaddl
sbb
lret
mov
or
or
out
or
lds
pop
inc
sub
aad
adc
ret
xor
and
outsl
or
adc
sbb
idivl
in
je
shll
sbb
cmp
jo
sub
lds
xchg
sbb
stos
bound
loopne
mov
xorl
sti
repz
negb
mov
fs
push
jnp
insl
xor
sahf
xor
jne
arpl
leave
shrl
adc
or
jge
sub
push
xor
cmp
mov
push
cs
fmull
iret
sbb
sbb
and
xor
jbe
cmp
adc
xchg
bnd
mov
fwait
inc
add
stos
ficompl
mov
std
mov
push
add
mov
jo
push
jg
push
mov
xchg
dec
push
imul
mov
pop
add
imul
push
ljmp
fdivl
in
shrd
xchg
imul
aas
adc
jno
inc
pop
mov
fs
add
sub
jno
push
sub
jle
jnp
xchg
inc
fisubl
push
in
add
daa
sub
ficomps
test
jmp
lods
adc
mov
adc
test
cmp
dec
mov
sub
out
sub
adc
cwtl
xor
in
xchg
or
aaa
repz
mov
mov
pop
push
xchg
jnp
pop
mov
iret
test
and
rcl
dec
xchg
push
mov
imulb
test
mov
or
es
inc
mov
xchg
mov
outsl
sub
mov
ror
ljmp
int
inc
cli
jp
out
mov
lock
mov
arpl
mov
sbb
imul
imul
bound
sub
imul
adc
inc
shlb
nopl
and
sbb
mov
je
mov
sub
inc
inc
rclb
icebp
and
sbb
cmp
insb
push
lret
fs
std
xchg
lea
sbb
mov
add
imul
add
xor
pop
fs
mov
inc
das
sub
pop
dec
insb
mov
into
sti
fwait
mov
dec
cli
pop
cltd
dec
test
push
lcall
in
mul
stc
mov
sbb
mov
mov
inc
mov
cmp
jmp
mov
dec
push
ds
hlt
in
push
pop
out
loope
pop
loope
sarb
push
jns
or
sbb
jg
into
pusha
dec
gs
sbb
lret
sarl
push
sbb
xlat
pop
inc
sub
pushf
std
and
mov
pop
adc
mov
test
xor
dec
mov
mov
mov
mov
fistps
cmp
daa
loope
jo
mov
cld
sbb
xchg
jns
mov
push
and
cmp
ljmp
jae
pop
and
subb
ljmp
dec
mov
cwtl
pop
adc
mov
rol
rclb
rorb
jns
insl
rorl
negl
mov
loop
xor
pop
inc
pop
lds
mov
lock
sbbb
dec
call
push
pop
pusha
jne
and
jae
or
or
adc
lcall
jg,pt
pop
lea
and
arpl
clc
xchg
arpl
or
ret
pushl
sahf
sbbl
jg
rclb
xchg
pop
notl
push
xchg
into
imul
dec
xchg
xchg
fs
mov
aaa
jns
test
xchg
nop
pop
sub
sub
jmp
or
push
dec
mov
sub
cmc
pop
fsubs
sti
xchg
xor
lds
scas
mov
sbb
lahf
insb
fldt
or
sbb
mov
adc
and
es
dec
mov
aas
inc
lock
movsb
andl
movsl
sbbb
stc
push
shr
push
sbb
inc
mov
dec
test
mov
sub
cmp
lods
dec
mov
xor
push
xchg
pop
imul
xor
inc
jl
daa
inc
imul
iret
imul
or
mov
jnp
and
jnp
sti
xchg
xor
xchg
add
outsb
loope
pop
scas
jo
mov
aam
mov
mov
mov
ds
push
imul
xor
jmp
lds
dec
pop
fidivrl
int
jl
test
stos
jo
shll
aas
ja
jno
mov
and
cmp
mov
mov
cmpsl
jno
mov
imul
pop
adc
loope
not
sbb
les
adc
mov
leave
add
pop
cmp
in
outsb
mov
lret
sub
inc
jno
fimull
dec
pusha
jle
negl
cwtl
and
sbb
sub
push
add
scas
das
mov
adc
jae
adc
stc
outsl
push
ds
imul
sub
pop
and
mov
jns
lea
or
sti
mov
cmpl
pop
push
push
cmc
mov
fldcw
insb
sbb
ja
or
aam
enter
pop
rorb
push
int3
iret
xorl
in
pop
cld
adc
add
mov
loopne
in
or
and
fstp
or
hlt
ljmp
test
adc
div
or
push
sub
bound
clc
call
xor
mov
cld
cmp
inc
xchg
imul
mov
roll
mov
dec
jne
lcall
outsl
mul
add
and
mov
mov
push
xchg
mov
cmp
rcrb
pop
loope
push
loop
test
adc
fwait
dec
xor
cmpsb
cmp
mov
ss
pop
add
lds
bound
popa
imul
in
pop
and
mov
adc
jecxz
stos
pop
aaa
push
push
xor
mov
adc
adc
mov
cmp
push
pop
cmpsb
mul
pusha
icebp
scas
aam
ja
mov
mov
mov
out
xor
fnstcw
xchg
lret
lods
mov
sbb
ficomps
push
pop
cli
jl
xchg
lret
sarl
inc
fbstp
or
cmp
lret
xor
test
push
xchg
mov
xchg
lds
out
addb
pop
inc
orb
out
cltd
roll
ds
sti
jge
das
leave
insb
popf
into
nop
dec
mov
cmpsl
dec
int3
push
inc
int
lds
cmp
or
in
push
sti
lea
jge
call
lods
test
imul
or
cmpsb
inc
mov
lea
enter
icebp
add
loopne
daa
mov
out
subl
mov
or
inc
shlb
rcrl
punpckldq
dec
aas
inc
xlat
sbb
fsubl
negb
test
sub
lret
jmp
in
sbb
jg
leave
xchg
push
test
fcomp
inc
and
inc
fstpl
repz
rol
shrd
xor
int
add
jo
jns
insb
pop
popa
dec
mov
out
or
add
and
ja
mov
fwait
lcall
pusha
mov
jae
jbe
pop
mov
xchg
pop
or
dec
or
and
lds
push
lods
sbb
outsl
push
dec
xchg
rclb
iret
addl
es
cmpl
stos
rcrb
push
add
and
or
jge
movsl
loope
adcb
xlat
xchg
mov
scas
dec
cmp
mov
xor
pop
andb
adc
fisubrl
pop
movsb
lcall
mov
sarb
mov
mov
push
in
out
ss
cmpsl
mov
aad
dec
dec
jp
orl
inc
iret
mov
test
fcomi
scas
cmc
pop
mov
push
sbb
pop
int3
out
faddl
in
pusha
mov
pop
rorl
pop
adc
mov
fwait
push
or
sbb
and
mov
dec
jle
xchg
std
dec
andl
fisubs
mov
jnp,pn
add
into
in
into
mov
and
or
mov
push
pop
cmp
fsubs
sbb
mov
lea
roll
mov
sbb
andb
popa
in
cltd
shl
hlt
daa
outsb
addr16
data16
sbb
ljmp
add
mov
das
ficomps
les
movsb
or
loopne
sub
sahf
fnsave
ljmp
pop
cmp
dec
scas
mov
pop
pop
inc
sti
loop
arpl
jle
push
in
pop
ljmp
scas
lahf
push
inc
sbb
ret
and
mov
push
cmpsb
xor
and
das
and
out
mov
sbb
js
gs
insl
mov
stos
pop
jns
mov
jnp
daa
out
xchg
mov
popf
adcl
sbb
out
stc
leave
fucomip
test
call
push
add
xchg
sbb
test
pop
and
push
mov
pop
adc
xchg
fwait
pusha
cltd
movsl
sbb
psllq
xchg
imul
loope
aam
jnp
cmpsl
dec
lods
xchg
mov
inc
xor
cmp
sbb
adc
cmp
test
dec
jecxz
lods
xor
xchg
mov
sbb
test
mov
inc
mov
cmp
lahf
jae
jne
jl
add
or
pop
mov
add
leave
mov
sub
mov
std
andb
push
push
test
idivb
scas
mov
inc
outsb
adc
dec
push
fs
lcall
adc
fidivrs
mov
adc
or
test
jmp
add
insb
loopne
cld
int
fisttpl
inc
and
jnp
dec
leave
jl
mov
adc
jle
jnp
jecxz
movsb
arpl
mov
push
cmp
test
pop
aaa
aad
and
dec
out
push
jle
dec
dec
jle
and
xchg
add
pop
insb
jno
adc
inc
add
pop
ljmp
mov
ret
adc
leave
xchg
in
cmpsl
das
popa
lods
push
or
push
jecxz
cld
iret
xor
imul
fsub
lcall
scas
outsb
xlat
fstpl
jl
xor
mov
int
cs
loopne
gs
xorl
push
jne
mov
ret
mov
adc
adc
iret
int
sub
mov
push
add
rcl
leave
sub
lods
push
outsl
mov
stos
xchg
mov
out
gs
outsb
cwtl
mov
or
cltd
in
leave
sub
inc
jae
cmp
std
fcomp
sahf
cmp
pop
adc
stos
loopne
jmp
addr16
in
lea
inc
mov
or
jno
sahf
cmpsb
cmp
popa
inc
sbb
mov
xor
push
push
rclb
lret
mov
lahf
int
jl
negl
add
lock
or
and
scas
pop
sub
js
dec
jb
pop
jne
imul
ds
xorl
stos
mov
jb
sbb
xor
cs
xchg
jb
dec
dec
push
push
rcrl
inc
or
movsb
pop
xor
and
cld
mov
outsl
rcll
lahf
jne
nop
ja
scas
sub
cmp
jp
cmp
mov
test
in
cld
jmp
fcoml
mov
pop
rclb
xchg
add
xor
lea
jl
jae
dec
movsl
xchg
and
shlb
xlat
out
adc
in
push
jne
xchg
pop
push
je
fst
fldt
sahf
lods
adc
mov
movsb
loope
out
push
insl
test
addr16
in
aad
lret
outsl
xor
xchg
dec
pop
xlat
les
jecxz
pop
bound
mov
pop
je
inc
pop
push
nop
push
scas
mov
jns
dec
arpl
daa
or
mov
xor
insl
je
mov
add
mov
jb
lcall
sbb
nop
push
aad
fnstsw
sub
repz
push
or
or
mov
testb
mov
pop
push
out
push
ss
stos
pop
jbe
fwait
cmc
test
push
inc
mov
jb
cltd
jle
lea
in
jmp
add
mov
jb
test
out
cmp
xchg
js
out
insb
clc
mov
lcall
mov
lea
test
xlat
fld
sub
aaa
icebp
movsb
cmp
cwtl
push
sub
push
ficoms
push
aad
bound
testb
nopl
aam
stos
out
orb
sub
divb
rep
push
add
inc
push
addr16
pop
imul
aad
cmpb
scas
jno
mov
js
test
lret
stc
mov
mov
sub
sbb
push
out
js
xchg
xchg
sub
dec
inc
add
dec
popf
cmp
push
enter
hlt
push
int3
sbb
fsub
in
xor
adc
or
ficoml
lock
mov
add
jno
dec
adc
ljmp
lret
pushf
movsb
inc
out
jl
test
outsl
out
adc
inc
xor
cltd
ja
test
xchg
push
cmc
xchg
dec
outsb
outsl
call
pop
das
dec
imul
int3
stos
fisubs
mov
or
or
sub
jns
rorb
dec
jno
mov
dec
and
test
test
add
mov
adc
fdivs
and
in
xor
xchg
inc
mov
rorl
lds
lret
add
add
xchg
scas
mov
mov
adc
inc
ljmp
add
aaa
push
push
int
and
jb
mov
add
ret
shll
int3
pop
inc
xor
fstpl
pop
out
dec
adc
std
pop
push
ret
mov
push
adc
xchg
adc
pop
ljmp
lock
ret
out
nop
pop
ficoml
iret
cwtl
js
push
in
add
mov
mov
jg
rcll
mov
in
popf
mov
and
mov
and
cmp
pop
cmp
data16
out
or
data16
inc
shrb
jno
mov
jp
add
or
sarl
call
call
mov
popa
adc
pop
mov
shlb
xchg
mov
adc
imul
adc
xor
mov
mov
addr16
pop
in
push
cmpb
push
lods
push
lds
dec
ret
sbb
sbb
hlt
leave
mov
xlat
das
jae
nop
mov
ss
das
sbb
test
pusha
mov
imul
cmp
incl
adc
imull
js
sbbb
jbe
mov
ss
dec
in
mov
repz
cmpb
sbb
cmp
mov
js
pushf
lea
adc
jp
xor
in
out
or
int
mov
add
mov
mov
xchg
mov
add
sbb
cmp
fmulp
das
pop
orl
mov
dec
sti
sub
lock
dec
outsb
mov
mov
pop
mov
cmp
adc
sub
push
rcll
shll
sahf
dec
jno
out
mov
out
mov
ljmp
or
adc
push
inc
jp,pn
lea
ds
fsubr
mov
adc
test
cli
cmp
push
mov
out
pushf
sbb
out
ljmp
xor
inc
leave
inc
inc
jnp
add
ret
cmpsb
mov
mov
mov
hlt
pop
mov
sahf
out
jge
mov
and
jne
pop
out
jne
int3
rcll
pop
ds
in
add
cmp
clc
mov
xlat
or
sbb
loop
mov
jp
aaa
sub
addr16
loopne
mov
addr16
in
and
mov
xchg
cmp
sbb
push
mov
xor
xchg
jae
sub
jg
orb
pop
xchg
push
pop
xchg
inc
pop
leave
fst
ret
lret
jg
xchg
sub
jae
hlt
je
mov
xchg
pop
jmp
repz
sub
mov
sbbl
rorb
adc
pop
jl
push
or
xchg
fistl
das
cwtl
cltd
pop
aad
shr
pusha
add
imul
lods
aas
sbb
hlt
and
sbb
int
shll
maxps
mov
outsb
sub
ficoml
or
inc
rcrl
pushl
jmp
xor
mov
pop
cld
js
adc
scas
lds
xchg
add
push
and
or
jb
sahf
pop
inc
pop
jnp
inc
push
subb
dec
cmc
fsubp
xorl
insl
in
pop
jmp
loopnew
dec
mov
popa
arpl
mov
pop
sbbb
or
shlb
scas
xlat
mov
xchg
and
sub
pop
fwait
dec
and
and
iret
add
inc
sahf
dec
insb
sbb
sbbl
ret
mov
pop
stos
cs
aas
hlt
lods
js
push
addr16
sub
cld
xchg
sbb
fldt
sarl
repnz
inc
adc
xlat
stos
lods
dec
sbb
jmp
jp
sub
jmp
sarb
jns
gs
ret
fdiv
pop
push
sbb
fwait
push
fstpl
lahf
mov
xchg
in
adc
or
stos
gs
cmp
or
cmpsb
dec
add
ucomiss
mov
mov
sbb
or
sbb
arpl
xor
stos
push
xchg
jo
xchg
pop
pop
add
jge
push
jbe
lods
mov
rcl
mov
xor
cwtl
test
cwtl
xor
or
lds
mov
outsb
scas
lret
mov
test
insl
xor
mov
pop
xchg
jg
pop
inc
add
icebp
cmp
out
and
stc
mov
add
mov
jl
outsl
dec
mov
xchg
adc
dec
inc
iret
pop
out
icebp
xchg
mov
sbb
bound
or
mov
clc
dec
mov
adc
cmpsb
fcmovnu
nop
mov
icebp
popa
jmp
mov
cwtl
mov
dec
push
popa
mov
add
cwtl
xor
aad
xchg
jb
nop
lock
mov
sahf
sbb
adc
cwtl
inc
data16
dec
jmp
mov
xchg
fwait
mov
data16
mov
pop
repnz
push
ret
pop
dec
popa
addr16
test
rcrb
aad
xchg
rorb
mov
jbe
sbb
js
xor
jg
xchg
mov
add
test
ljmp
out
call
push
out
je
jnp
push
sbbb
bound
repz
daa
cmpsl
into
inc
fnstsw
pop
aaa
in
or
and
xor
add
jecxz
jle
and
ret
loope
das
lret
cmp
pop
stos
insl
loope
pop
loopne
daa
pusha
idiv
jge
clc
iret
mov
aam
test
clc
lds
xor
shll
fsubrp
xchg
xchg
pop
scas
mov
lock
xor
adc
repnz
stc
leave
cs
xchg
cs
push
dec
cld
pop
in
jecxz
les
test
cmp
ss
je
mov
xor
repz
imul
adcb
xor
push
mov
rclb
in
loop
cmpsl
outsb
mov
inc
dec
scas
mov
push
mov
stc
test
leave
dec
sub
xor
in
and
sub
sti
pop
in
mov
mov
bound
xlat
sbbl
push
std
inc
jno
sbb
inc
mov
divl
push
jnp,pt
xor
mov
xchg
cltd
ja
jmp
cmp
jns
mov
in
sbb
gs
jl
or
xchg
inc
lds
aaa
mov
pop
push
js
jnp
and
sti
pop
push
cmpsb
cli
pop
push
mov
sbbb
jb
sti
loopne
sub
ja
mov
push
and
inc
and
mov
fwait
jmp
sbb
icebp
xchg
mov
sarb
lret
cmc
sub
push
pop
push
adc
shlb
push
sub
pop
cwtl
call
and
cltd
pop
mov
push
fs
jecxz
mov
jg
subl
inc
sub
push
push
pop
mov
ret
call
mov
mov
jl
cmp
std
push
inc
test
push
jne
sub
subps
jle
sbb
mov
add
enter
call
mov
cmpsl
mov
orb
cmpl
movb
je
pop
sbb
pop
aad
sub
dec
cmc
out
and
push
xchg
arpl
cmp
dec
sbb
jae
sbb
das
push
push
cmp
loope
icebp
inc
push
call
iret
mov
adc
push
cmp
mov
adc
inc
dec
push
and
jo
aad
pop
mov
mov
mov
in
dec
outsb
add
jnp
sbb
imul
sbb
js
fsubrs
in
or
les
leave
xchg
ja
dec
mov
jne
cwtl
outsb
adc
add
cmp
fisubrs
gs
sbb
gs
sahf
lds
or
sub
mov
push
adc
shrl
mov
pop
or
imul
aad
mov
push
adc
add
outsb
in
mov
xchg
mov
fldcw
and
sbb
ficoml
mov
dec
imul
jle
jge
adc
xchg
mov
inc
lea
cltd
push
rcll
iret
xchg
mov
lcall
xchg
in
pop
andl
test
jnp
mov
aas
movsl
lahf
fadd
inc
test
mov
movsb
sbb
push
out
jmp
jne
cld
in
xor
and
sti
or
dec
inc
and
mov
popf
pop
cmpsl
sub
mov
dec
outsb
in
sbb
lock
cmpsb
mov
mov
push
push
int3
or
xor
lock
xor
les
orl
or
mov
loope
inc
lea
jo
insl
dec
rorb
sbb
lods
mov
adc
es
loope
pop
je
pop
inc
andb
and
pop
or
sbb
je
rolb
cmp
hlt
mov
sub
scas
add
test
flds
sbbb
sub
push
xor
gs
js
movsl
dec
lods
push
and
loopne
in
cmp
rorl
adc
cmpsl
cwtl
jnp
mov
movsb
add
dec
jns
test
loope
pop
inc
shlb
sbb
inc
pop
enter
sbb
popa
aaa
sub
adc
xchg
jnp
mov
adc
adc
or
jp
cmpsb
fwait
sti
sub
aaa
stc
mov
pop
sbb
lret
pop
scas
pop
std
sbb
in
lahf
mov
adc
mov
jp
js
gs
jecxz
lcall
sub
mov
aam
jno
das
int
andl
jne
adc
mov
inc
mov
push
xor
mov
dec
dec
test
mov
lea
sar
test
inc
push
xchg
es
adc
xorl
test
push
push
xchg
in
jne
inc
lds
xlat
test
xchg
inc
iret
sbb
sub
shlb
fadds
inc
sbb
mov
mov
or
push
cwtl
iret
enter
hlt
jp
test
imul
add
out
mov
lret
sti
stos
paddusb
fnstenv
ss
lea
cli
mov
shrl
sub
and
insl
ss
sub
sub
andb
and
les
jmp
lahf
xlat
mov
and
mov
sahf
sbb
mov
or
xchg
pop
push
mov
mov
and
loop
sub
mov
pop
sar
aam
mov
pop
shll
add
mov
pfnacc
sbb
adc
jae
fst
dec
ret
push
pusha
cli
mov
stc
ret
arpl
dec
scas
je
jg
scas
stos
jbe
jb
mov
add
adc
cmpsb
rcr
sbb
insb
mov
sub
push
inc
cs
adc
xor
xor
add
dec
dec
ret
mov
adc
ja
sub
push
sub
pop
sub
mov
inc
pop
aad
xchg
sub
mov
pop
mov
mov
je
outsl
xchg
lock
addr16
sar
cli
repz
test
mov
fxch
or
jns
add
inc
push
insb
mov
out
jp
pop
pop
repnz
cs
xchg
dec
ficompl
sahf
adc
lret
sbb
cmp
lret
lods
add
mul
mov
fimuls
mov
push
popf
or
dec
mov
jecxz
sub
cmp
popa
ja
sub
xchg
icebp
mov
rcl
lods
dec
stos
jb
push
sbb
loop
xlat
pop
push
movsl
xchg
ljmp
lret
jo,pt
push
lahf
cmp
clc
cmpsb
out
mov
sbb
popf
outsl
fcomps
jne
mov
shlb
jnp
xchg
add
in
push
xchg
push
mov
cmp
inc
mov
push
stos
inc
jns
jmp
sahf
inc
repz
jno
mov
jl
pop
bnd
sbb
enter
cwtl
mov
mov
xor
scas
xor
ret
and
push
mov
sbb
lods
lea
mov
push
sub
shrb
lds
jp
divl
xor
js
jb
xorb
cwtl
lods
mov
sub
push
mov
sub
iret
movsl
fdivs
mov
loopne
jnp
mov
fstpt
pop
xlat
in
adc
imul
adc
push
cmp
dec
add
or
mov
mov
mov
es
mov
jo
andl
adc
cmp
leave
in
xchg
cmp
lret
pop
stos
adc
insb
stos
mov
sbb
push
push
aad
and
sahf
jl
dec
iret
dec
cmpsl
je
leave
sub
loop
sarl
cmc
pminsw
push
sbb
pop
stc
scas
outsl
sahf
ret
popa
xorb
lea
icebp
ret
sub
sub
orl
add
xor
pop
jne
jle
mov
pop
lret
inc
mov
jmp
mov
inc
lods
aaa
cmp
push
addb
popf
pop
into
add
sbb
lods
negb
or
and
inc
xor
in
loopne
pusha
icebp
xor
jae
out
jb
push
divb
js
dec
push
leave
and
xchg
mov
mov
icebp
jo
cltd
jae
inc
cmp
lds
or
sub
pop
mov
mov
dec
or
test
mov
call
push
pop
push
shrb
aas
fwait
dec
push
jne
lds
rolb
mov
jle
test
mov
nop
push
lods
cld
data16
mov
lahf
in
adc
sub
push
jecxz
test
sub
mov
test
sbb
dec
arpl
in
mov
lea
jle
pop
fisubl
fstpl
xchg
push
nop
decl
loop
addb
fcmovne
into
pop
cmp
adc
out
loop
xor
mov
out
pop
jg
pop
pop
je
adc
xor
js
mov
jle
mov
jmp
jmp
dec
nop
lock
fs
test
aam
cmp
cwtl
cmpsl
lods
lock
jb
jle
mov
test
test
div
xchg
xchg
jb
fidivrl
xor
les
into
lret
cli
dec
mov
sub
sub
test
div
into
rcrb
ret
adc
add
pop
test
xchg
rcll
test
add
dec
gs
shl
jecxz
pop
sbb
test
int3
sbb
push
mov
icebp
xor
addr16
sub
hlt
pop
push
lods
xchg
fistl
mov
adc
sbb
stos
push
ficompl
mov
pop
jge
jnp
sub
xor
push
pushf
adc
inc
out
je
repz
imul
ficoms
add
sbb
inc
js
add
hlt
mov
sti
sarb
cmp
andl
sti
mov
sahf
repnz
dec
fwait
in
lret
dec
add
movsb
pop
and
dec
dec
fs
mov
pop
push
call
outsb
push
out
outsl
and
push
adcl
push
fs
sub
xchg
mov
sub
out
bound
sti
ja,pn
loop
mov
dec
sbb
or
sahf
xchg
movsb
xchg
gs
push
pop
push
push
pop
dec
push
pop
insl
clc
arpl
adc
mov
pop
pop
xchg
imul
pop
pushf
aad
cld
jmp
aam
push
push
nop
push
fidivs
lret
icebp
loopw
and
adc
cmp
jmp
into
loop
cwtl
mov
xor
and
js
adc
fwait
sbb
jo
lods
mov
ror
xchg
xchg
or
pop
mov
cmc
add
cmp
mov
pop
mov
sti
cmp
insb
pop
cmp
not
xorb
mov
sbb
sub
xor
lcall
lahf
dec
adc
rorb
hlt
add
pushf
call
dec
flds
or
into
mov
lds
xchg
incl
jmp
sub
add
inc
xchg
push
push
popf
inc
sub
pop
fwait
ret
or
xlat
xor
out
repz
inc
and
adc
js
mov
mov
adcb
add
xchg
jbe
es
in
je
aas
imul
iret
pop
push
jne
sbb
push
mov
push
imul
outsl
int
cmp
push
jno
stos
pop
pop
push
aas
daa
lods
or
xor
mov
test
in
jns
in
mov
xchg
test
push
jno
push
xlat
mov
add
outsb
adc
aas
cmp
test
push
lock
sub
push
pop
dec
lea
stc
inc
and
sub
roll
cld
inc
cld
mov
and
out
push
pop
ret
adc
or
and
mov
or
stos
push
pop
scas
or
xchg
mov
mov
sbb
or
test
push
aas
rcr
push
push
rdtsc
ret
sub
in
ljmp
addr16
dec
jne
add
ja
jl
mov
popf
mov
fistpl
ret
popa
rorl
lds
pop
rcll
les
push
xchg
dec
push
adcl
sub
sbb
mov
stos
mov
cmpsl
push
sbb
push
das
inc
or
mov
inc
push
lods
clc
mov
jno
movsb
mov
je
mov
pop
mov
nop
cs
orb
dec
mov
push
sub
fsubs
movsb
xchg
in
hlt
cwtl
and
sti
jle
add
sub
fiaddl
mov
fsubrl
cli
jo
hlt
inc
pop
add
pop
ja
mov
rcl
sbb
into
mov
xlat
repnz
les
aad
iret
aam
loopne
mov
xor
int3
into
xchg
ja
jle
or
movsl
in
lea
adc
inc
dec
mov
mov
inc
mov
push
cmpl
push
sbb
mov
jae
push
and
jle
fldt
sti
sbb
inc
sarl
push
mov
gs
mov
out
aas
and
jle
jmp
insw
xor
xchg
repnz
leave
add
outsl
aam
or
adc
and
test
imull
fiaddl
push
fs
enter
push
movb
call
daa
test
pcmpgtb
sbb
mov
inc
ja
xor
mov
in
js
push
fidivrl
ljmp
insb
pop
test
jno
pop
inc
je
push
out
scas
sub
mov
hlt
in
push
test
pop
test
adc
pop
xchg
jle
fiadds
rolb
jp
cmp
lahf
and
cmp
xor
in
cwtl
outsb
push
jge
lods
fidivl
add
in
jno
aas
dec
sub
mov
xchg
or
popf
jbe
jnp
pop
fstpl
dec
jecxz,pt
mov
mov
testb
inc
pushf
decl
and
push
inc
test
fnstsw
jp
iret
stos
shl
inc
repnz
jecxz
leave
sbb
sbb
inc
icebp
mov
outsl
stos
jae
mov
int3
outsl
mov
cmp
lock
xchg
repnz
adc
ds
cmp
push
mov
mov
testl
mov
insl
xchg
rclb
mov
inc
mov
push
movsl
aad
dec
gs
into
xchg
lock
or
pushf
inc
sti
ljmp
aas
adcl
pop
lret
fstl
fidivrl
je
gs
shlb
loop
hlt
sbb
imul
and
xchg
and
repz
inc
dec
mov
stc
imul
push
sbb
ret
shll
sub
in
xchg
int
es
mov
mov
cli
sbb
mov
push
lods
add
push
xchg
lret
mov
inc
sbb
dec
clc
fdivrp
jb
xchg
xchg
gs
push
iret
lods
aad
stos
inc
mov
ret
mov
test
insb
aad
cmp
xor
leave
and
sub
xchg
enter
push
std
pop
push
xchg
jg
movsb
mov
xor
mov
jl
jo
adc
test
icebp
xchg
mov
clc
popa
call
ret
loope
imul
mov
rolb
mov
sub
cmp
jecxz
push
and
enter
dec
mov
push
mov
imul
pop
mov
push
cmc
sti
in
cmp
movsl
loopne
push
mov
sbb
sbb
jo
lock
stos
push
adc
test
or
test
jle
xchg
popl
cltd
shlb
cmp
mov
mov
add
mov
testl
pop
inc
xchg
adc
or
ror
nop
into
pop
cli
jo
sarl
cmp
aad
outsl
jae
fwait
dec
xor
shll
jmp
ficoml
shl
mov
dec
xchg
mov
adc
add
lret
push
cs
rorb
dec
sub
jnp
nop
cmc
sub
dec
ret
in
popf
inc
dec
and
lcall
in
lea
in
add
in
je
add
jecxz
inc
in
pop
adc
inc
jl,pt
das
and
fcmovnu
or
pop
jbe
lds
jns
push
mov
push
ja
jl
or
xchg
das
dec
push
fldenv
inc
or
subb
int
cmp
mov
aaa
repnz
stos
ljmp
sub
mov
iret
mov
daa
mov
mov
xchg
xchg
inc
stos
gs
inc
ret
fdiv
push
push
rcrb
repz
mov
add
insb
jno
xor
add
mov
repz
adc
and
push
and
stos
or
cmpsl
mov
loope
push
rorb
mov
pop
scas
jmp
or
cmpsb
pop
call
cli
icebp
lds
add
inc
dec
into
mov
fldenv
ja
loope
jno
dec
fcoms
shr
mov
xchg
dec
int3
cmp
out
movsl
or
test
out
inc
stos
inc
inc
jmp
into
pop
xor
negb
push
ret
adc
inc
adc
call
fisttpll
fiadds
sbb
or
mov
mov
popa
orb
mov
jecxz
out
popl
dec
into
sbb
cmp
mov
call
fimull
nop
mov
xchg
imul
sbb
adc
insb
test
or
jle
dec
xchg
fistl
test
jp
sbb
xchg
and
popf
and
aam
mov
cld
in
mov
push
mov
adc
push
push
lods
dec
jecxz
hlt
ret
push
aad
int
dec
shl
ror
mov
dec
rorb
mov
sbbl
jne
mov
insb
pop
in
jo
ja
pop
testl
pop
repz
xchg
push
lock
pop
clc
ljmp
pushf
jle
jne
ljmp
lea
add
xchg
push
movsl
or
and
repz
jnp
fs
mov
into
sub
adc
pop
jno
jp
sbbl
dec
in
or
mov
sub
mov
shll
xchg
mov
jecxz
rorb
jle
jmp
into
aas
fs
bound
rolb
xor
scas
sub
jp
xor
mov
xchg
jmp
mov
fcomps
mov
dec
push
pop
push
push
dec
jno
je
test
mov
cmp
icebp
cmp
dec
sbb
push
call
sbb
adc
repnz
dec
xchg
adc
jae
repnz
pushf
adc
dec
or
push
scas
addb
push
lock
dec
ss
into
xchg
ljmp
sti
inc
lock
pop
lods
loopne
or
mov
pop
mov
add
out
stos
or
jb
add
push
xor
xor
es
push
insl
adc
arpl
out
add
fildl
or
scas
push
iret
adc
addr16
out
jns
cltd
cmp
mov
mov
sbb
mov
xor
call
imul
loope
jl
frstor
test
sub
and
into
jb
cmpsb
mov
clc
sbb
sub
jb
and
jp
push
movsl
or
or
mov
xchg
xor
jns
jb
inc
lahf
shlb
inc
fldenv
ds
bound
fsubrs
divb
jge
push
call
popa
xchg
mov
outsl
fst
pop
jo
pop
sbb
sbb
popf
jecxz
push
inc
iret
xchg
and
movsl
jo
leave
mov
jae
push
push
shlb
test
popa
in
sub
push
pop
dec
sub
xchg
lret
rcrb
pop
sub
hlt
arpl
xchg
jl
mov
dec
das
push
jo
lret
push
mov
fdivrs
stos
cmp
mov
jecxz
out
stos
popf
inc
pop
xchg
ret
xchg
mov
cmpsb
cmpsl
lret
cmp
je
xchg
test
jne
test
mov
cmp
cld
mov
mov
adc
pop
jecxz
xor
popa
cmp
out
cld
inc
fisttpll
bound
or
xchg
ret
cmpsb
test
subl
xchg
cltd
mov
mul
rcrl
movsl
jg
pushf
mov
stc
lcall
icebp
push
pop
sub
or
jae
dec
int3
ja
outsb
cltd
loop
nop
js
scas
out
push
and
repnz
xor
inc
xchg
popl
gs
jl
fsubs
add
push
mov
cld
cmp
retw
sti
pop
jbe
pop
adc
out
dec
push
dec
mov
out
add
addr16
push
je
sbb
cmpsb
adc
sbb
or
insb
jne
cmp
ret
add
movsb
xchg
jno
fstpl
jmp
aas
adc
in
cld
shll
icebp
sbb
shlb
fs
jmp
jnp
sub
cli
lahf
sub
test
loopne
mov
cli
paddd
dec
push
pop
cli
inc
mov
dec
push
inc
lods
xchg
fcoms
pop
scas
test
cmp
adc
push
pop
or
aaa
andb
enter
xchg
in
ljmp
std
divb
or
hlt
movsb
add
fadd
ljmp
push
mov
nop
mov
daa
enter
jbe
adcb
mov
or
and
cli
das
sbb
mov
or
and
aas
test
lea
jle
adc
call
push
jecxz
sub
jecxz
fistpl
adc
xor
jb
mov
push
mov
xchg
push
mov
jns
ret
rorb
xor
data16
imul
incb
adc
jae
adc
add
jl
xchg
sub
lock
or
in
imul
mov
fnstcw
mov
scas
mov
cmc
addr16
fcoms
ja
push
call
xchg
sub
pushf
cmp
fcmovne
or
and
add
daa
cli
sbb
push
test
testl
or
dec
int
sbb
popa
fcoml
mov
dec
cmp
fisttps
mov
clc
xchg
mov
mov
shll
push
mov
idivl
pop
xchg
jae
xchg
jo
fisubrs
and
sbb
js
rolb
jmp
xchg
lahf
inc
pop
daa
cltd
imul
ss
int
cmp
xchg
jae
xor
ret
imul
xchg
in
mov
andb
inc
or
data16
flds
pop
or
mov
mov
push
bound
mov
sbb
jae
data16
pop
out
xorb
and
sbb
popf
pop
mov
mov
adc
cmpsl
mov
mov
aad
lods
push
repnz
dec
sbb
sbb
aad
push
mov
adc
frstor
lcall
js
push
shll
jl
ret
push
or
int3
cmpsb
mov
or
leave
and
out
inc
call
xchg
xchg
cmp
fmull
mov
inc
ret
or
enter
cwtl
mov
jne
mov
mov
les
les
jecxz
lock
adcb
test
ljmp
or
ja
stos
mov
loopne
pop
aas
push
cmc
mov
js
pop
push
sbb
shrl
push
daa
dec
lock
mov
idiv
in
or
pushf
mov
xor
mov
mov
mov
icebp
fs
call
mov
aam
insb
ret
adcl
les
jns
xchg
cltd
mov
dec
es
mov
push
sbb
mov
inc
add
movl
lcall
sub
or
mov
xor
sbb
aam
lock
insb
movsb
arpl
cmc
jbe
and
mov
inc
lods
imul
es
jnp
adc
or
or
loop
gs
pop
xor
sbb
add
call
dec
daa
popa
push
stc
cli
mov
cltd
add
lods
insb
cmp
mov
xor
scas
push
fnstcw
cmpb
cli
inc
pusha
add
mov
sbb
mov
mov
mov
cmp
sbb
enter
aad
jno
incl
in
into
jb
jmp
ss
sub
xchg
mov
lahf
push
mov
mov
adc
add
fchs
add
add
and
incb
int3
into
or
and
insb
adc
cmp
mov
enter
sub
jle
lods
pop
dec
test
lods
mov
addr16
mov
mov
test
cmpsl
jecxz
loop
push
popf
stos
mov
push
or
and
and
adc
xchg
inc
and
push
sbb
in
test
mov
test
cli
mov
mov
mov
mov
dec
ds
pop
lret
or
lea
jp
xor
mov
pop
cmp
rclb
sbb
icebp
sbb
pop
je
jne
xchg
adcl
bound
sbb
aaa
fmull
mov
push
sub
push
push
dec
mov
push
mov
aaa
or
in
pop
push
cwtl
xchg
jae
scas
xor
pop
add
das
inc
inc
rorl
into
and
imul
cwtl
mov
cmpsb
in
push
push
sbb
sbb
loop
mov
xchg
in
or
jne
mov
aas
imull
xor
dec
std
out
mov
mov
jmp
adc
push
cmp
fcompl
jo
in
xchg
jge
dec
xchg
stos
push
mov
jae
sbb
xor
jmp
icebp
xchg
xchg
mov
mov
in
aam
pop
mov
jno
imul
into
insb
je
jne
pop
lds
push
popf
mov
xor
mov
loope
std
add
out
sbb
push
and
ret
push
ja
shlb
mov
cmpsl
repz
jge
fs
insl
repnz
jecxz
sahf
test
sub
call
sarb
or
push
xchg
mov
pop
lahf
xor
mov
loopne
jmp
push
fldcw
aaa
lea
cld
ljmp
shll
sahf
sub
sti
les
std
icebp
mov
sub
xchg
ficoms
aaa
fdivrs
insb
cmp
add
or
mov
or
mov
xchg
add
in
sub
pop
lret
mov
fdivr
sub
mov
das
ss
or
or
scas
xchg
push
mov
mov
clc
clc
mov
movsl
push
fwait
add
gs
sbb
inc
stos
aad
jb
adcl
inc
ficoml
mov
bt
shll
aam
mov
test
lret
or
xchg
cmp
xor
or
repnz
mov
jle
push
inc
pop
js
gs
cmp
repnz
cli
call
outsl
and
nop
mov
pop
xor
lahf
std
sbbl
lds
dec
mov
movb
dec
dec
shl
incl
repnz
enter
shrl
stos
ljmp
and
lds
mov
xchg
fstpl
inc
pusha
xorl
sbb
mov
xor
sbb
neg
lds
int3
inc
arpl
pop
lock
stos
mov
sbb
lds
scas
in
mov
sub
sbb
insb
and
xor
xor
cmp
aad
xchg
imul
fiaddl
out
inc
out
mov
adc
sub
cli
xchg
mov
xchg
add
lret
divl
dec
add
int
aam
popa
jl
int3
mov
push
insb
sbb
cmp
adc
iret
call
divb
pop
cmp
adc
push
shr
data16
call
pop
aad
dec
sahf
loop
fs
shll
je
pop
pop
movsb
push
dec
lcall
jno
add
or
pop
adc
movsl
pop
fnstsw
jge
inc
mov
enter
lods
dec
in
into
jbe
dec
in
out
push
fdivl
xchg
shll
add
xor
jbe
push
sub
or
and
mulb
sub
fidivs
xchg
adc
xor
sbb
mov
jo
pop
xor
xor
jns
stc
cmp
and
out
lods
test
fwait
cmp
add
sub
mov
sbb
push
popa
xor
jmp
movl
cmp
stc
sbb
test
and
xchg
imul
out
in
adc
mov
icebp
dec
xchg
bound
les
cmp
jbe
jbe
inc
test
jp
sti
lods
test
pop
dec
pop
and
les
jp
dec
mov
stos
fdivrs
sub
cmpl
or
shll
xor
push
fiadds
mov
or
or
push
pop
repnz
in
out
jge
sahf
shrl
jb
adc
push
aaa
and
sbb
mov
les
scas
inc
or
mov
cltd
xor
xchg
shlb
ss
xor
pop
cs
mov
xchg
push
adc
bnd
fidivs
faddl
clc
xor
push
cmp
xlat
test
mov
and
sub
jbe
andl
in
sub
cmc
dec
jo
int
or
jb
or
add
repz
nop
push
dec
cmp
mov
in
nop
inc
out
rol
fisttps
mov
aas
or
or
insb
pop
aad
add
jmp
add
xor
xchg
pop
cmp
data16
lcall
outsb
inc
lret
sbb
sbb
and
jns
fistl
fwait
mov
lea
ljmp
dec
addb
sbb
and
pop
push
xchg
sbb
jp
lods
out
dec
mov
xor
enter
push
cmp
cmp
mov
popa
ds
dec
xor
mov
jmp
bound
mov
inc
mov
pop
int
pop
lods
sahf
lods
add
push
mov
mov
push
or
pusha
imul
sbb
roll
jecxz
in
ljmp
jnp
jmp
out
jnp
imul
push
add
push
add
dec
mov
cmp
sarl
cmp
jp
and
or
adc
push
mov
jns
xchg
int
sbb
ds
test
scas
mov
jo
inc
pop
cmp
inc
jp
sbb
sub
push
dec
bound
mov
jle
test
sbbl
sbb
cltd
mov
loop
xchg
mov
test
insl
jecxz
psrad
xor
fldt
daa
cltd
icebp
mov
xor
ds
aam
cmpsl
adc
mov
jl
repz
insb
pushf
cmpsl
mov
push
or
aam
push
mov
push
fistpll
mov
or
addl
mov
insl
rorb
push
and
scas
add
jp
xor
pop
xchg
insb
int3
mov
xlat
fisttpl
cltd
cmp
xchg
xchg
push
daa
sbb
cmpsl
fs
std
add
rcll
fidivl
pop
inc
cmp
les
pusha
cmp
sub
jecxz
pop
mov
lea
bound
xchg
lods
sarb
iret
sub
mov
mov
xor
xchg
lret
stos
push
jge
pop
sti
cmp
xor
mov
xchg
adc
stos
or
dec
addr16
push
push
mov
fimull
es
or
jnp
pop
and
push
mov
cmp
nop
and
adc
jnp
or
push
or
sbb
jnp
fcmovnb
mov
xchg
mov
push
adc
in
mov
mov
outsl
cmp
mov
mov
mov
ret
in
mov
sbb
je
scas
jle
repnz
adc
orl
mov
movsb
push
arpl
xchg
cli
jns
in
addl
outsl
cltd
pop
imul
in
push
fisubl
test
mov
mov
push
sahf
dec
xor
dec
mov
ret
or
frstor
jns
sbb
mov
ret
xor
fxch
xor
icebp
adc
into
test
ljmp
xchg
and
shufps
ficompl
call
fcompl
popf
xor
fcomps
dec
in
int
insl
int
and
and
adc
push
inc
sbb
push
fwait
add
fistpl
filds
add
adc
jmp
or
mov
sbb
pop
mov
sbb
lea
ret
mov
adc
test
jl
lock
je
int
sbb
cwtl
sub
dec
repz
hlt
jo
std
testl
nop
sbbl
sub
and
je
stc
in
adc
push
cmp
stos
push
int
ret
pop
dec
dec
xlat
jb
jp
jecxz
inc
call
cmpsb
pop
xchg
imul
orl
into
outsl
aas
mov
aaa
sti
out
mov
adc
stc
cwtl
mov
loope
mov
sahf
xchg
xor
lods
int
or
xor
rclb
inc
xor
icebp
and
inc
xchg
gs
and
rorl
std
mov
in
push
jl
cmpsb
xor
movsl
fidivl
mov
inc
in
arpl
mov
xor
sub
lods
lods
xor
movsl
scas
xor
ficompl
sbb
mov
or
cmp
stos
cwtl
push
mov
or
mov
fs
popf
mov
xchg
sub
and
sub
mov
push
leave
jmp
adc
pop
andb
jno
inc
lea
cs
rcl
mov
loop,pt
push
sub
sub
cs
jb
jo
dec
dec
mov
mov
fistpl
mov
cwtl
sub
ret
out
loope
aad
popf
hlt
js
pop
mov
xchg
pop
mov
mov
or
adc
stos
pop
call
pusha
in
or
adc
shll
daa
repz
pop
fildll
push
subl
push
imul
and
fstpl
jo
dec
cmp
fsub
das
lods
dec
inc
sbb
loop
push
loop
push
aas
in
dec
insb
outsb
fcomip
add
inc
mov
mov
rorb
fld1
addr16
sahf
mov
movsb
cli
test
shl
adc
add
jno
inc
push
jae
call
stc
cmc
out
push
jno
cmp
cwtl
lret
xchg
mov
xchg
test
adc
xchg
negb
push
inc
cmp
nop
outsb
fstpt
popa
sub
shl
jge
adc
loop
insb
imul
mov
or
pusha
mov
adc
movsb
ss
into
lahf
test
sbb
loope
add
push
jb
insb
push
mov
cwtl
fs
shll
jmp
es
movsl
clc
pop
or
sbb
in
fs
pushf
hlt
mov
jne
data16
dec
mov
xchg
or
pushf
fsubr
ficompl
pop
int
jecxz
inc
sbb
je
mov
push
js
ljmp
adc
fimuls
sarl
pop
ss
mov
mov
inc
lcall
cmpsb
test
jnp
negl
sbb
in
sbb
aaa
pop
int3
dec
adc
inc
stos
inc
xchg
mov
aaa
pop
jnp
ret
mov
scas
lock
int3
lret
pop
sahf
lds
sbb
cmpb
lock
jp
aam
mov
push
popa
lret
mov
push
int
ret
movsl
add
imull
xlat
ret
xchg
repz
out
out
jge
outsb
xchg
push
inc
iret
mov
pop
or
in
lcall
popa
dec
jne
dec
and
xor
push
push
frstor
pop
xchg
ret
stc
ss
jbe
inc
dec
or
xchg
cmc
testb
test
rol
jns
adc
cmp
or
lea
push
xchg
cmc
add
adc
push
popa
pop
adc
sub
stos
mov
cmc
mov
mov
mov
leave
decl
and
cs
in
xor
or
and
mov
mov
ret
stos
sbb
fstl
sbb
roll
and
cmpsb
movsl
push
popf
mov
dec
imul
dec
scas
aad
inc
mov
popf
jge
sub
cs
in
out
cmpsl
js
test
inc
aad
jl
lods
and
shlb
add
or
nop
shrd
test
dec
cmp
mov
push
pop
and
lcall
xor
cltd
or
cmpsb
addr16
int
push
fcmovu
scas
sbb
roll
and
sbb
out
scas
testb
jns
mov
sbb
mov
push
loopne
push
pop
sbb
std
sarl
inc
pop
int
mov
jne
mov
sub
push
inc
mov
adc
sti
fidivl
and
jae
rolb
inc
lds
ss
push
hlt
fiadds
ss
out
out
nop
and
add
sub
es
sti
mov
mov
xor
push
call
fwait
aad
fcmovb
nop
insl
orl
mov
xor
fucomip
out
adcl
test
loopne
xor
xchg
inc
icebp
inc
fs
adc
mov
sub
jnp
pop
fistl
push
aad
andnps
fnstsw
mov
jns
sub
push
arpl
aam
mov
sbb
shlb
cmp
inc
dec
sbb
scas
pop
and
mov
mov
inc
dec
scas
dec
xchg
sub
ret
dec
add
or
jp
sub
xorl
dec
push
mov
sti
mov
scas
daa
hlt
inc
aaa
leave
aaa
lcall
hlt
sbb
sub
int
jl
sbb
mov
out
out
fsubrs
scas
push
and
adc
imul
mov
lock
insl
mov
mov
out
xchg
xchg
repnz
les
mov
sub
sbb
lahf
icebp
fdiv
lea
int3
jp
cli
xlat
nop
or
push
shrb
cmp
iret
iret
daa
popl
and
cmpsl
aad
mov
mov
pmaxub
sti
inc
or
frstor
and
xchg
pop
fistpll
adc
jne
inc
sbb
and
test
sub
pusha
fwait
add
addl
and
stos
les
xchg
stos
inc
push
les
inc
stc
jbe
mov
xor
mov
lds
adc
clc
addb
add
test
in
aas
out
mulb
sbb
xchg
rolb
push
in
insl
mov
add
push
imul
mov
sub
out
mov
xchg
out
cltd
jg
lds
or
adc
daa
in
js
shr
mov
add
loope
adc
mov
popf
mov
fcompl
lret
test
dec
orl
or
cmpsb
call
pop
mov
jbe
push
call
sub
and
aaa
shl
call
push
inc
xchg
fimuls
lahf
or
rcrl
sbb
dec
and
jb
push
xchg
jno
ss
mov
xor
push
es
cmp
adc
stos
cltd
xorb
push
aam
in
icebp
sub
dec
pop
nopl
in
cwtl
push
rolb
xchg
insl
fisubs
inc
jle
iret
sti
cmp
jl
cmp
pop
mov
fwait
pop
movsl
and
inc
adc
lods
push
popf
mov
jp
add
jb
jae
lret
pop
push
clc
lret
inc
loopne
stc
sbb
subl
lahf
cld
test
lods
rcrb
push
mov
sub
add
nop
jne
inc
shll
lock
jge
jnp
jg
inc
sub
in
sub
cmp
daa
shrb
mov
mov
insl
std
inc
loopne
arpl
je
int
mov
mov
lret
pop
imul
jnp
mov
mov
mov
xchg
dec
rorl
or
gs
mov
xor
pop
pop
pop
sub
decl
cmc
push
xchg
xor
or
cltd
or
in
fistpll
jae
jo
daa
add
popf
sbb
rol
pop
xchg
addr16
or
jo,pt
inc
dec
mov
imul
rol
mov
sub
mov
push
cltd
push
sbb
xchg
sbb
sub
mov
xchg
lds
or
sub
sub
test
cwtl
inc
cmpsl
cmovp
mov
jg
push
rclb
rclb
imul
sbb
push
cmp
push
fsub
jmp
pop
push
addb
cmp
pop
shrb
daa
stc
xchg
push
cltd
ja
cmpsl
push
loop
std
orl
sbb
fwait
ret
xlat
rclb
pop
or
lcall
loop
lret
mov
cmpsl
xor
pop
stc
push
popa
out
mov
aam
scas
adc
push
jmp
in
cmpsb
push
add
xor
in
xor
les
addr16
and
fs
jbe
icebp
mov
xor
jb
cmpsb
push
and
pop
insl
cmp
add
or
jnp
mov
and
and
shrl
jo
ljmp
movsl
leave
jl
imul
dec
mov
inc
sahf
dec
popa
push
and
sbbb
jb
jg
pop
jb
cmp
mov
jns
cmpl
mov
and
and
xor
pop
push
ljmp
xchg
cmp
inc
mov
outsl
mov
mov
xorb
in
xor
or
cmp
jl
inc
scas
aaa
push
and
pusha
scas
subb
xor
hlt
pop
fnstenv
jp
adc
fsubl
fwait
xchg
mov
jmp
pusha
lahf
mov
mov
stos
sbb
adc
sti
imul
jl
in
call
je
jae
mov
fsub
out
lock
aad
pop
xchg
scas
aas
mov
rolb
lcallw
mov
mov
aam
into
pop
lock
repz
cmpb
mov
fyl2xp1
or
cltd
mov
fdivl
popa
lock
push
insl
jnp
ret
mov
or
stos
adc
dec
imul
sub
imul
ret
dec
mov
mov
xor
sub
inc
test
stc
lahf
clc
cmp
lock
push
jge
mov
and
jbe
adc
scas
inc
mov
push
or
adc
mov
sub
out
mov
addr16
enter
inc
mov
cmp
mov
or
xor
popa
push
repz
inc
sub
xchg
mov
orl
mov
hlt
dec
or
iret
sub
mov
inc
stos
or
loope
mov
mov
push
fcmovnbe
arpl
les
push
in
loope
movsb
xchg
cwtl
mov
xchg
lods
and
mov
js
in
incl
push
sub
movsb
test
or
cld
push
pop
mov
sbb
addr16
xchg
iret
mov
add
or
dec
jle
iret
mov
adc
fwait
add
push
out
daa
xchg
cltd
ficoms
scas
add
jge
imul
mov
xchg
add
dec
mov
mov
scas
call
ret
and
aaa
sub
out
inc
jno
test
push
clc
je
test
fdivl
or
xchg
cwtl
lcall
and
push
in
add
mov
jle
xchg
xchg
push
imul
test
sub
aad
mov
jns
mov
push
or
out
in
push
inc
icebp
sahf
std
repz
cmp
or
subl
loopne
lds
mov
test
in
pop
lcall
movsl
push
popa
enter
dec
dec
mov
or
mov
and
push
mov
jg
subb
imul
test
dec
mov
aam
fcmovu
xchg
push
test
or
mov
in
mov
sahf
mov
test
mov
xor
mov
or
inc
mov
jnp
pop
jne
xchg
ds
dec
aaa
test
das
icebp
iret
xchg
pop
jp
daa
adcb
pop
fldcw
out
mov
pop
or
pop
inc
outsl
lods
lods
stos
jae
movsb
dec
sahf
xor
or
cmpb
dec
ja
outsb
ret
sub
add
test
ljmp
in
mov
ret
jle,pn
cld
push
xor
push
or
les
mov
roll
push
jb
outsl
cld
or
mov
push
fidivrl
add
or
leave
inc
cmpsb
ss
cmp
movsl
xor
sub
cmp
xor
loop
or
mov
push
cmp
imul
gs
mov
push
dec
pop
sub
mov
fisttps
js
cld
push
call
cmp
cld
push
xchg
push
frstor
and
push
subb
mov
ljmp
add
outsl
mov
pop
sahf
aas
mov
push
ficompl
mov
inc
and
cmc
add
addl
xor
add
xchg
or
test
pop
mov
cltd
rorl
jnp
mov
aam
call
sti
lea
lods
sub
or
push
xor
push
dec
aad
mov
fcmovb
push
xor
inc
or
xor
sbb
dec
pop
xor
mov
mov
push
insl
repnz
flds
stos
mov
mov
add
pop
xor
pop
js
popa
push
mov
mov
push
mov
or
sarb
sub
xchg
push
push
mov
scas
mov
dec
jg
jae
inc
enter
xchg
mov
in
or
fcmovnb
mov
insb
push
enter
add
iret
dec
mov
mov
push
mov
in
repnz
mov
popf
fistps
cs
lds
cwtl
test
sbb
xlat
sub
es
dec
out
loope
fcomip
addr16
das
adc
pop
lea
in
movsl
pop
cmpsl
dec
mov
mov
mov
pop
es
out
or
mov
cltd
pop
lods
ret
mov
into
pop
push
sub
dec
dec
jmp
lods
mov
inc
mov
xchg
outsl
and
stc
xchg
loopne
sub
adc
mov
add
xor
or
add
mov
sub
orb
bound
int3
outsl
test
idiv
repz
mov
and
aaa
and
insl
mov
dec
lods
imul
bound
jmp
mov
jge
mov
sbb
mov
ljmp
imul
jo
arpl
adc
loop
in
mov
jo
mov
pop
xchg
mov
push
jb
aam
pop
in
stos
xchg
inc
cmpsl
testl
in
sbb
lcall
mov
data16
repz
push
fidivs
das
and
and
outsb
hlt
pop
ret
popf
sub
clc
fldt
flds
enter
cld
int3
add
hlt
push
pop
das
mov
test
mov
insb
mov
ljmp
xor
ljmp
dec
push
mov
cmp
fstl
xchg
aam
fiaddl
idivb
pop
pop
das
sub
in
jle
sub
lcall
imul
jbe
stos
push
adc
xchg
sub
dec
pop
adc
outsl
adc
daa
pushf
sub
stos
gs
push
repz
dec
pop
cmpsb
insl
sub
jmp
sub
aam
andb
rclb
fistps
loopne
add
ljmp
sti
add
dec
mov
les
dec
in
mov
push
xchg
adc
stos
aam
cmp
out
lea
mov
rcrb
imul
sub
lcall
daa
push
mov
adc
fisubs
cmc
lods
and
out
insb
inc
pop
lock
mov
push
adc
cmpsl
jp
ret
aam
mov
jl
adc
and
mov
xor
sub
jns
push
stc
push
push
mov
cld
lods
mov
adc
imul
jg
inc
push
dec
dec
or
sbb
aaa
add
lods
out
jle,pt
rorb
insl
ljmp
add
loopne
inc
mov
loopne
ja
aas
ljmp
in
push
scas
dec
dec
rclb
cmp
xchg
sti
jnp
xlat
jp
loop
pop
adc
pop
int
push
sub
cmpsl
dec
dec
sbb
aas
or
or
popf
out
cld
lret
loopne
mov
jge
jecxz
pop
nop
scas
mov
mov
or
mov
push
cs
mov
addl
push
fsubp
loope
inc
shl
cltd
jmp
lock
jb
insl
mov
adc
test
cmpsl
xlat
add
inc
sahf
sbb
add
and
test
cld
mov
mov
movsb
insl
subl
iret
aad
xchg
repz
addr16
shll
inc
mov
mov
jl
dec
push
repnz
test
fwait
movsb
jns
outsb
icebp
mov
pop
push
aaa
push
mov
xor
dec
stc
loop
pop
xchg
cmpsb
ss
stos
xor
xchg
jmp
fiadds
jg
aad
jae
popf
sub
push
stos
xchg
shrb
mov
or
mov
cmovg
aad
and
sub
jno
fisttpl
imul
je
cmp
stos
cmpsl
sbb
ja
inc
test
xchg
je
addl
pop
fs
add
stos
rcll
sbb
pop
out
mov
das
aam
outsl
movsb
lret
jle
and
ds
xlat
sub
xchg
push
jo
xchg
pop
pop
cld
xchg
dec
loop
stos
mov
sub
mov
filds
jge
xchg
flds
sub
fisubs
jg
inc
into
jb
adc
ds
sahf
cmp
call
inc
mov
cmc
lcall
lret
and
fdivrs
popa
inc
fucomp
iret
into
mov
xor
fistpl
fisubrl
popa
cli
mov
mov
jne
test
mov
daa
xchg
sbb
sbb
add
mov
das
xor
add
enter
jl
xchg
cli
sub
out
sub
fnsave
mov
pop
mov
loop
push
add
or
shl
and
mov
pop
shlb
imul
inc
out
jbe
mov
aad
ds
mov
outsl
sub
mov
gs
jno
subb
jge
int3
push
xchg
jmp
cld
lret
push
xchg
push
lcall
add
jmp
clc
push
or
clc
lahf
mov
lock
nop
mov
clc
shrl
mov
pop
rclb
jb
sar
icebp
lods
test
push
je
push
jb
in
push
jne
push
stos
int
jb
aaa
mov
fldz
xchg
rcrb
leave
xchg
imul
ss
inc
add
and
test
lret
add
lret
sbb
loopne
insb
in
dec
addl
shll
mov
sbb
outsl
dec
mov
popa
xlat
xor
shll
push
add
lock
adc
fwait
sub
sbb
jge
adc
cmp
inc
jl
push
jne
test
sub
fistl
movq
insb
frstor
arpl
xor
lret
hlt
or
jg
dec
push
sub
into
jae
and
shrl
in
jge
insl
scas
icebp
xorl
inc
rorl
add
lahf
jbe
push
and
xchg
jne
test
sbb
lea
mov
pop
arpl
not
adc
cmp
sub
insb
mov
daa
jno
pop
push
mov
loopne
mov
repz
stc
xchg
out
addr16
dec
cmp
sahf
iret
mov
add
inc
mov
cli
invlpg
sbb
loope
add
lock
lcall
fistpl
push
pushf
sub
cltd
jo
push
pop
sti
jg
clc
mov
push
cmp
mov
out
in
cmpsl
jb
mov
scas
aad
int
mov
scas
rolb
cltd
pop
push
out
lock
inc
pop
ss
ficoms
sbb
sbb
and
repz
ljmp
jmp
mov
dec
and
call
push
out
jp
xchg
sub
test
leave
fidivs
mov
sahf
mov
mov
cli
sub
inc
add
inc
mov
notb
xor
jge
mov
adc
mov
push
sub
lock
lahf
rcrb
insb
mov
hlt
mov
jo
nop
add
xor
cmpsl
lcall
cltd
fyl2xp1
mov
out
clc
fsubl
push
and
stos
dec
cmpb
mov
negb
jmp
out
add
popf
into
roll
pop
and
and
ffreep
lods
push
imul
stos
cli
mov
push
mov
cmp
cmp
mov
sbb
mov
push
mov
sbb
and
cltd
or
inc
cs
testl
inc
push
push
out
cli
inc
sahf
sub
nop
negb
subb
insl
sbb
mov
loope
cltd
xchg
xchg
adc
stos
gs
cmp
mov
sub
xor
jb
cld
inc
js
push
mov
add
push
dec
enter
fsubrl
jge
iret
sbb
movsl
cli
jle
das
in
cmpsl
mov
sub
fwait
mov
in
ja
loopne
popa
cmp
out
or
mov
sbb
mull
sub
std
push
pop
call
ud2
popa
jmp
and
inc
enter
mov
mov
inc
lret
mov
mov
cmc
cmp
rdmsr
jb
aas
cli
into
fisttps
popf
lcall
ret
add
movsb
inc
outsb
es
xchg
jl
das
adc
out
mov
jecxz
fidivrs
inc
dec
das
push
mov
aas
jne
push
je
pop
stc
movsb
sti
mov
outsl
xor
std
bound
hlt
fldt
enter
push
cmp
push
aad
outsl
mov
insl
iret
pop
lods
push
sbb
testb
mov
sub
cmpsb
sub
clc
and
sub
xchg
cwtl
cmpsb
test
mov
mov
pop
add
mov
dec
adc
popf
add
jmp
loopne
imul
test
imul
push
cmpsl
pop
pop
fistps
arpl
scas
ds
inc
and
data16
popf
es
sbb
adc
pop
cmp
daa
fsubrs
andnps
repz
add
push
push
mov
push
jmp
and
addr16
hlt
mov
xchg
push
jge
mov
or
fs
jge
xchg
fstpt
xor
orl
fsts
sub
cmp
pop
mov
add
adc
cmp
pop
dec
mov
lods
imul
mov
ret
movsl
and
mov
mov
sub
ret
sbb
jl
dec
mov
imul
cmp
lods
mov
jecxz
fstl
pop
out
or
lods
ret
mov
and
daa
sbb
mov
xor
mov
ljmp
inc
jl
into
xchg
insl
mov
dec
cmp
ret
dec
pusha
xor
lahf
sbbl
pop
pop
cmp
sub
push
xlat
cmpsl
clc
push
mov
fstl
mov
cmp
leave
fstpt
mov
xor
sub
imul
inc
stc
add
mov
add
outsb
js
sahf
inc
insl
aad
adc
push
mov
inc
adc
pop
xlat
push
mov
or
lret
and
cwtl
add
cs
aam
mov
insl
cmp
mov
fstpt
leave
sub
cmpsb
sub
mov
arpl
mov
sbb
sarb
jb
mov
pop
das
add
mov
mov
mov
cwtl
or
xchg
sbb
or
out
pop
or
cs
xchg
cs
xor
sub
outsb
jle
push
inc
stos
xchg
ja
inc
mov
loope
dec
outsb
repz
addr16
enter
mov
psadbw
fsts
sbb
sub
js
int
xor
test
lahf
and
jbe
mov
div
xchg
mov
int
aad
cli
mov
ret
push
mov
xchg
lea
aas
jns
aad
fimull
clc
loopne
pop
push
shr
xchg
lods
xor
int
inc
mov
repnz
pop
rorb
xor
insl
inc
movsb
dec
push
dec
dec
cmp
inc
push
es
lret
lds
outsl
lret
cld
mov
addr16
xchg
xchg
xor
xor
jl
cs
ret
and
push
push
push
dec
imul
pop
out
jae
mov
scas
xchg
adc
rorb
jge
cs
jl
jno
test
mov
add
orl
fchs
cwtl
lea
cmpsl
jp
in
xchg
jl
repnz
dec
test
dec
pop
in
addr16
xchg
fcomi
push
mov
pushf
push
mov
call
mov
movb
inc
push
movsb
out
pop
or
xor
push
ficompl
divb
imul
add
call
add
faddl
push
movsb
or
fsubrp
mov
dec
nop
aad
sbb
insb
inc
cmc
jnp
push
cmpsb
mov
aam
push
rclb
rorb
mov
sti
mov
sbbl
jae
pop
icebp
je
dec
movsl
rcll
les
mov
aam
ret
xorl
ror
fwait
inc
mov
popa
aad
icebp
test
jnp
les
sub
jo
mov
fsubs
fldenv
xor
call
outsl
jmp
dec
cmc
insl
and
jge
cwtl
or
push
sbb
push
icebp
inc
movsb
dec
movsl
jge
into
cwtl
popa
sbb
mov
idivl
jle
pushf
xor
and
pop
sbb
push
pop
movb
jle
xor
pusha
lret
repnz
enter
sub
jb
lock
leave
ljmp
std
iret
movsl
insl
cmc
mov
ret
popa
hlt
mov
and
push
push
jb
inc
popa
sbb
mov
adc
jl
mov
ljmp
cltd
mov
or
fwait
daa
pop
test
dec
arpl
pop
rcrb
inc
push
cmpsb
jp
imul
and
mov
js
cmpsb
or
pop
movsl
imull
jmp
sub
adc
jno
add
jno
gs
fwait
movsb
lret
mov
xor
mov
mov
repz
push
rcr
enter
push
test
xchg
dec
mov
jne
pop
cmp
je
jl
add
add
cmp
push
lret
mov
fists
loope
int
jmp
add
dec
cmpsb
lahf
arpl
sub
jbe
arpl
and
scas
adc
or
shll
mov
mov
lods
xchg
add
jbe
pop
jbe
fcoml
insb
repnz
lret
mov
mov
stos
mov
inc
lret
mov
iret
lret
or
repz
or
sbb
xor
out
mov
or
std
in
sbb
daa
push
xchg
fst
lock
jge
xchg
dec
xchg
jns
stos
pop
mov
lret
mov
lock
jne
and
lret
sbb
push
cmpsb
mov
cmpsl
in
push
jae
xchg
sbb
mov
decl
adc
push
fnsave
aad
xchg
sub
pop
cs
jge,pn
jno
sub
loope
mov
push
test
je
jb
into
sub
jae
sahf
inc
pop
jnp
ficompl
fisubs
ret
push
inc
fisttps
push
icebp
cld
dec
push
cmp
dec
sub
movd
sahf
pop
test
pand
insb
push
repnz
adc
fldenv
outsb
iret
push
push
subb
push
pop
addr16
repnz
push
arpl
loop
out
jge
test
dec
mulb
lret
mov
sbb
pop
sub
les
ja
jae
cmp
pushf
mov
sarl
enter
sbb
adc
scas
aaa
rolb
and
jb
sti
ret
loope
mov
in
sbb
pushl
lahf
testl
fwait
mov
lret
cmp
xchg
xor
loop
popl
nop
xor
jge
cmp
xchg
and
dec
xchg
dec
jg
ljmp
repz
lds
xor
jbe
mov
dec
lods
nop
lahf
mov
lea
jge
fnsave
push
dec
stos
and
xchg
das
fdivrl
mov
inc
in
jp
mov
cmp
and
in
mov
jge
inc
sub
rorb
inc
push
sub
rorb
cmp
repz
mov
jno
loope
gs
mov
inc
mov
and
dec
mov
push
test
leave
cwtl
popf
pusha
scas
and
xor
xor
push
xlat
xor
jecxz
iret
repnz
js
orb
mov
inc
scas
outsb
sbb
mov
dec
repz
and
sbb
out
sub
mov
rcrl
mov
pop
outsb
mov
and
and
out
cmp
stc
inc
mov
mov
cmp
mov
or
inc
das
test
inc
shl
out
xchg
jle
dec
lods
lcall
out
mov
mov
push
sbb
dec
push
cmp
xor
cltd
pop
cmc
leave
fists
jno
movsb
mov
jae
pop
mull
pop
popa
jno
pop
mov
fabs
addr16
xchg
and
lcall
dec
mov
and
aas
mov
mov
mov
mov
mov
xor
or
lahf
and
jg
inc
scas
mov
ds
punpckhbw
ljmp
popf
or
into
add
sarl
andl
nop
mov
cltd
mov
mov
pop
fstpt
add
dec
jnp
loope
std
mov
or
scas
mov
lret
lcall
je
test
dec
pop
lods
push
imul
and
repnz
add
push
xchg
cmp
jae
xor
enter
test
xchg
mov
ja
mov
fwait
arpl
loope
stos
or
xor
cld
fucomi
test
das
lret
sub
scas
mov
mov
cmpsl
in
inc
push
xchg
xchg
dec
or
adc
mov
pop
fdivs
xchg
jg
test
pop
xchg
js
sbb
mov
jp
outsb
movsb
into
dec
pushf
rol
jmp
lock
jb
ror
sahf
and
sbb
sbb
insl
stos
in
les
pop
and
and
xor
dec
xor
xor
inc
jnp
mov
mov
or
in
jge
and
xchg
mov
mov
aam
add
imul
ret
shll
test
lcall
cld
std
insl
insb
and
cwtl
jle
ret
or
inc
test
ja
fs
in
xchg
inc
mov
das
push
sbb
insl
add
xchg
jne
xor
xchg
in
stos
add
inc
orb
repnz
mov
mov
sbb
xor
mov
and
xchg
sbb
mov
enter
cld
out
add
and
loop
adc
fisubs
mov
cmpsb
rcll
ret
aaa
jp,pn
in
idiv
jo
mov
pop
scas
stos
jb
lock
add
pop
aaa
inc
xchg
imul
jecxz
imul
mov
add
xor
push
adc
repz
icebp
xorb
into
or
lds
jne
ficomps
loopne
dec
jno
test
or
lds
mov
nop
into
std
lods
outsl
mov
pop
sub
lret
loopne
lods
out
cli
sub
inc
push
in
and
mov
jbe
mov
iret
movsl
cmp
pushf
int
sbb
dec
mov
aam
mov
push
jg
and
scas
pop
stos
test
cs
xor
test
jmp
pop
dec
pushf
int
sub
add
sbbl
add
jge
fprem1
jl
arpl
sbb
mov
adcb
insl
cmp
subb
jmp
push
inc
sbb
inc
cli
dec
outsl
inc
xor
push
pop
adc
leave
out
or
pop
push
adcb
rcr
sub
dec
push
inc
push
ret
inc
adc
call
add
dec
mov
repz
dec
fdivl
sbb
shll
aad
xchg
and
xor
cmp
add
mov
test
push
xor
xor
push
sbb
lock
nop
jp
adc
dec
mov
pop
ret
mov
stc
mov
push
es
jbe
mov
stos
adcl
jmp
cmp
sbb
sbb
arpl
cld
push
adc
ljmp
adc
into
cmp
dec
cmc
add
imul
stc
lret
shr
idivb
add
mov
fiadds
mov
xor
lods
aam
xor
lcall
clc
push
rcl
mov
xchg
dec
test
and
aas
btr
jnp
lret
sbbb
pop
and
idivl
sbb
imul
mov
mov
push
fiaddl
inc
xchg
xor
mov
cmpsl
ror
je
stos
in
mov
dec
daa
movlps
mov
push
test
in
daa
movsl
shr
jnp,pt
dec
negb
xor
shrb
and
hlt
or
mov
ja
sub
pop
push
fs
fcompl
mov
jmp
cld
mov
arpl
xchg
std
pop
inc
mov
cmpsb
sub
iret
cwtl
mov
rcr
lods
movsl
mov
outsl
clc
dec
adc
push
cmp
loopne
sbb
push
and
daa
rolb
data16
add
lods
cmpsb
ss
pop
test
dec
mov
sbb
inc
mov
sahf
cmpl
imul
mov
push
xchg
sbb
daa
ss
mov
push
pop
push
inc
jns
mov
lock
adc
and
test
je
movsb
xchg
int
hlt
cmp
cmp
adc
into
les
mov
jb
jmp
jmp
jecxz
imul
or
lods
sub
es
cmp
adc
ret
push
out
push
cmp
test
sahf
add
test
mov
push
mov
popf
call
add
aaa
shll
ljmp
loop
sbb
push
mov
enter
in
mov
aam
jne
mov
insb
dec
and
pop
les
push
stos
cmpsl
jb
push
les
lea
arpl
mov
cli
test
ficomps
jmp
or
mov
dec
xor
cmp
sub
cltd
lock
mov
test
nop
rorl
pusha
pop
push
or
loop
fdivs
daa
add
fwait
add
movl
arpl
and
outsl
iret
frstor
enter
mov
and
cmc
xchg
xchg
jg
popa
xor
push
ljmp
incb
lds
neg
movsl
xchg
or
add
dec
outsb
out
test
sahf
jge
repz
and
lea
inc
mov
pushf
sub
test
jmp
lahf
gs
xchg
mov
sub
sub
xrelease
sub
outsb
inc
xor
and
lea
out
mov
es
jnp
lds
mov
jmp
andl
jb
mov
dec
fnclex
xchg
lods
mov
test
adc
and
jnp
fs
pop
mov
je
cmpsb
add
out
es
dec
jnp
mov
dec
out
jge
in
push
mov
cmp
ror
jecxz
or
xchg
cltd
push
cwtl
push
lret
mov
push
lret
loopne
jns
mov
xchg
scas
mov
stc
xor
push
jno
jo
mov
adc
fwait
movsb
jb
into
repnz
inc
dec
loope
test
jns
das
and
push
sahf
adc
lcall
popf
dec
or
sbb
mov
xchg
cmp
or
pop
xor
andb
dec
mov
and
mov
das
mov
cmpsl
sbb
dec
and
mov
adc
in
sbb
xchg
fcoms
shlb
icebp
push
rol
xor
or
adc
pop
add
push
sahf
iret
dec
mov
repz
bound
ret
in
out
enter
stos
jb
and
adc
push
ss
mov
inc
mov
and
sbb
es
popl
push
divb
movl
xor
jmp
mov
movsl
mull
icebp
push
mov
cmp
cmpsb
in
xchg
xor
jp
in
subb
jg
xchg
dec
jno
int
dec
push
xor
out
jno
ret
cmpsl
aad
testl
sub
pop
cmp
arpl
cmp
xlat
rep
stos
or
mov
dec
jae
aas
dec
adc
stos
xor
enter
pop
add
test
mov
cmp
pop
js
push
pop
or
adc
adc
stc
xlat
mov
fcomps
cmpsb
shl
and
xor
lahf
and
push
xchg
sarb
mov
shll
sbb
sbb
int
xor
jle
fldenv
mov
call
or
jae
mov
push
adc
mov
jle
lret
in
jle
xchg
andl
shl
pop
rcrb
sbb
insl
jo
adc
mov
loope
outsl
xchg
addr16
push
lods
mov
push
sub
adc
fwait
cmp
mov
sub
rol
mov
xchg
movsl
push
pop
xchg
xor
mov
stc
push
fadd
pushf
jge
mov
jmp
popa
clc
data16
lods
std
jb
cmc
inc
adc
xchg
jmp
jno
in
mov
outsl
int3
mov
ror
dec
xchg
leave
leave
or
cmp
xchg
ss
sub
xlat
pop
inc
adc
mov
nop
sti
mov
xchg
and
inc
adc
ss
xor
add
fcoml
push
pushf
test
jle
orl
sub
aam
pushl
sbb
in
dec
mov
pop
xchg
and
movsl
jbe
testl
insb
fsubl
scas
inc
inc
pop
test
pop
mov
jae
mov
xchg
sub
ret
in
sbb
cmpsb
stc
xchg
repnz
into
ret
xchg
push
call
imul
pop
jne
in
lret
scas
push
cmp
test
xchg
out
mov
dec
xchg
jae
jp
test
enter
cs
or
shr
shlb
mov
jmp
add
or
jl
jns
adc
sub
pop
push
xlat
add
lahf
fwait
xor
mov
ss
call
pop
stc
sub
sahf
jp
mov
cmc
jecxz
pop
push
inc
inc
jg
les
xor
push
les
es
jne
movsb
xchg
pushl
outsl
mov
mov
mov
negl
cmp
push
hlt
leave
mov
add
movsl
lods
fcompl
ja
data16
in
jge
insl
sbbb
dec
push
sbb
cwtl
sub
mov
daa
xor
cli
in
adc
mov
repz
fcompl
dec
add
enter
stos
loopne
ret
xor
push
lock
xor
jle,pn
adc
imul
test
adc
enter
mov
adc
lock
fsubr
sbb
pop
jl
mov
add
mov
mov
loope
orb
popf
outsl
data16
cld
adc
daa
add
icebp
fists
mov
jb
outsb
dec
data16
shrl
in
cs
cmp
mov
fisttpl
pop
mov
shrl
and
adc
and
mov
jb
int3
popf
ret
mov
adc
insb
adc
pop
addb
jns
mov
icebp
icebp
out
mov
pusha
cs
xor
int
lcall
movsb
adc
adc
push
xchg
push
mov
pop
inc
dec
push
imul
mov
popf
pop
pop
mov
mov
aam
lahf
sub
jnp
dec
cmpsb
xchg
fists
fwait
jns
jg
dec
mov
fdivrl
outsb
leave
movsb
cmc
shrb
xlat
mov
fisubrs
stos
nop
sbb
dec
pop
add
sbb
jae
push
psrlq
xor
jne
insb
fs
jns
fcmovbe
cmp
inc
movsl
addr16
fstps
dec
adc
inc
fmull
pop
scas
lods
mov
pop
adc
jns
stc
xlat
nop
nop
mov
dec
fstl
shrl
fildl
and
outsl
aad
orl
xor
adc
les
test
cmpsl
xchg
and
pushf
or
mov
push
mov
aaa
xchg
repnz
cmp
jl
or
adc
adc
mov
les
cwtl
xchg
psrld
movb
add
fidivl
mov
popa
fs
and
pushf
adc
jno
sahf
jmp
imul
mov
cmp
das
xor
mov
fcomp
push
in
dec
mov
sti
mov
push
push
movsb
inc
jae
mov
andb
ret
dec
dec
fs
jbe
jns
mov
inc
ret
xchg
inc
jne
pop
pop
or
dec
cltd
pushf
jne
cld
push
mov
add
xchg
test
adc
sahf
lds
data16
dec
call
out
outsl
sbb
xor
adc
pop
push
lahf
aaa
fsts
jecxz
loope
pop
add
ljmp
jne
fcoml
sahf
outsl
loop
cmp
rcr
pop
int3
pop
xor
cs
cmpsl
pop
mov
xchg
cmp
and
jae
addr16
fwait
mov
popf
inc
push
dec
test
shll
jno
pusha
dec
movsl
ret
mov
inc
sbb
inc
nop
inc
mov
out
call
mov
jnp
out
ss
pop
fsts
fdiv
xlat
lods
movsb
dec
dec
inc
mov
pop
mov
jns
addb
lahf
lret
pop
cli
js
pop
mov
and
sahf
dec
dec
data16
scas
jp
int
jns
jmp
jno
test
mov
mov
push
iret
cmp
push
fisubs
pop
scas
push
push
adc
notb
iret
inc
je
and
sub
mov
sub
push
fisubrs
stos
addr16
fdivp
movsb
adc
fdivrp
jl
xchg
dec
mov
push
mov
aas
add
aam
pop
outsl
movsb
push
mov
cltd
lcall
pop
std
sub
and
mov
mov
loopne
lret
rorb
pop
mov
mov
push
lods
mov
fmuls
inc
aas
xchg
lock
add
je
stos
lret
loop
jbe
and
or
outsb
fwait
jle
mov
lds
pop
scas
lock
ds
push
cmc
test
loopne
mov
shrl
ret
es
movsl
movsl
jecxz
push
xor
ds
ret
dec
fxch
gs
cli
loopne
adc
imul
cmp
xor
insb
pop
icebp
add
arpl
divl
push
push
out
loope
pop
jl
lahf
lret
xchg
pop
jae
mov
inc
xchg
add
sbb
mov
fldenv
xlat
jb
add
loope
mov
and
push
rcrl
lcall
dec
rcr
sbb
pusha
mov
int
adc
cmpsl
int
mov
cmp
push
sahf
nop
out
jmp
jno
mov
adc
mov
enter
mov
cmpl
ret
loop
rclb
stc
mov
lret
ds
imulb
dec
mov
in
cmp
jnp
dec
cmp
mov
push
repz
mov
jl
cmp
jmp
pushf
das
jge
xchg
das
add
or
loope
movsl
xchg
adc
rol
bound
or
dec
sub
or
jno
xchg
adc
pop
mov
and
subb
jp
push
jbe
lods
or
push
mov
adc
sbb
xchg
sub
pop
jmp
in
test
mov
iret
fdivrl
inc
repnz
lret
push
xchg
cmp
sbb
mov
in
xchg
xchg
iret
test
pusha
ret
insl
adc
dec
shll
push
cli
cmp
cmp
dec
lea
sub
inc
or
inc
xchg
jb
aaa
add
mov
mov
and
cmp
orb
push
lret
out
add
dec
out
pop
rcr
dec
dec
orb
pop
popf
ds
sub
mov
hlt
push
cli
outsb
mov
push
xchg
dec
pop
sbb
sbb
gs
test
mov
xor
inc
adc
adc
inc
fimull
push
inc
rorb
jmp
ja
mov
push
jge
xor
xchg
mov
mov
and
ret
push
mov
mov
xchg
fcompp
or
int3
lcall
aaa
int
add
fcmovnu
cmp
mov
cmc
xchg
arpl
lods
and
out
test
push
in
dec
ds
or
out
dec
jb
or
and
sarl
inc
add
add
hlt
es
and
xlat
hlt
inc
dec
stc
shl
insl
cld
mov
addl
jbe
jle
adc
clc
sub
pop
arpl
mov
lea
fmull
pop
ds
aas
inc
dec
pop
fwait
mov
pop
rcrl
andl
mov
pop
pop
mov
shl
sarb
sub
lods
cmpl
fisubrl
fnstsw
enter
jg
repz
repnz
out
adc
jle
lods
push
ficoms
ret
ds
sbb
sbb
adc
out
pop
add
cltd
xchg
adc
sahf
stc
mov
insl
dec
dec
cli
cli
cmpsb
mov
sbb
jmp
cmp
inc
leave
mov
sahf
and
xor
adc
incl
cmp
addr16
daa
cmp
jmp
xchg
rcrb
cmp
js
daa
dec
cmc
inc
mov
push
fnstcw
pop
gs
fs
inc
cmpsl
fwait
xor
movsb
ds
es
or
xchg
insb
xchg
out
loop
dec
pop
lock
push
arpl
cs
or
push
adc
pushf
leave
push
sub
std
test
lock
sti
jno
iret
rcrl
and
imul
mov
fs
shrl
repz
sarl
daa
test
call
pop
stc
mov
sbb
imul
sar
sub
or
jb
fwait
scas
mov
mov
lods
push
xchg
cmpsl
adc
ds
cwtl
shll
shll
jb
ret
push
std
out
dec
out
mov
inc
pop
nop
and
and
jecxz
shl
push
jnp
xor
sbb
je
fs
push
cmp
push
mov
shrl
popa
cs
rcrb
jb
add
aam
mov
das
imul
mov
and
insb
inc
pop
insl
es
out
mov
sub
push
mov
mov
bound
mov
jmp
cmp
pop
imul
fs
aaa
xor
pop
push
in
push
loop
add
fildl
sub
leave
test
cmc
xchg
inc
lds
mov
clc
fistps
jns
inc
cli
pop
dec
scas
jns
arpl
jae
mov
pop
dec
xor
add
jne
bound
lods
testb
cli
das
shll
add
add
stc
fildl
div
sbb
push
and
cmp
shll
push
sub
mov
outsl
or
outsb
test
xor
and
gs
js
xchg
pusha
xlat
cmc
popa
aaa
fdivrl
jbe
lds
into
icebp
inc
clc
add
mov
in
fisttpl
insl
loope
lcall
dec
in
das
jno
sbb
shl
xchg
mov
xchg
xchg
rorl
repnz
dec
or
lds
mov
lods
loope
rcl
xchg
jne,pt
enter
xlat
mov
mov
pop
push
pushf
loopne
cli
jns
outsl
mov
or
mov
stos
stc
lret
lret
fs
add
cmpsl
and
hlt
xchg
and
cmc
add
sub
add
std
jl
xchg
xorb
test
pop
hlt
sub
cmp
lock
mov
pop
mov
es
inc
adc
dec
pop
out
aaa
xor
test
mov
inc
xor
sub
xchg
add
divb
in
cld
sbbb
icebp
pop
adc
mov
xor
cmc
arpl
into
mov
rcrb
sbbb
or
test
push
push
mov
loopne
aaa
lds
xor
ficoms
lea
es
test
pop
jnp
enter
pusha
jmp
out
test
lret
mov
das
mov
sarl
jne
cwtl
je
dec
icebp
addl
mov
push
sbb
and
mov
sbb
mov
rorb
push
cmp
ret
jnp
pop
sub
mov
inc
or
insl
jb
out
pop
ficompl
sahf
cmp
gs
inc
jo
sub
push
cmp
rorb
add
int
pop
add
push
and
movsl
test
xchg
adc
imul
cmp
adcb
fisttpl
mov
xchg
pop
inc
xor
and
cmpsb
into
sub
stos
sub
repnz
fcmovu
fdivrs
adc
in
pushf
in
out
ljmp
jg
test
dec
ficomps
or
js
stos
lcall
decb
xchg
or
ja
jne
inc
test
int3
push
out
xchg
movsb
ret
jo
sbbb
popa
add
mov
mov
shlb
scas
cli
pop
adc
xlat
les
loope
and
jbe
xchg
sub
fisttps
ds
cmp
ds
outsl
cs
enter
scas
arpl
movsb
insl
cmp
jbe
into
cmpb
movsb
in
xchg
sahf
jbe
jae
push
push
int3
jle
dec
lea
mov
in
jno
and
cwtl
mov
or
adc
out
cmpsb
rcr
int3
cwtl
pop
add
sub
test
jl
push
insl
xor
fwait
cmpsl
mov
jg
in
xor
shl
sarb
call
xchg
ficoml
movzbl
mov
arpl
mov
divl
pop
sbb
popa
lret
dec
pushf
pop
xor
ljmp
push
and
lcall
notb
or
push
jnp
aam
mov
fdivr
lea
and
mov
lcall
dec
pop
fidivs
out
dec
adc
das
pop
jne
nop
cs
punpckhbw
push
jns
int3
sbb
or
imul
pop
fs
xor
scas
insl
movsl
popa
adc
out
movsl
adc
jl
cmp
mov
dec
rcr
in
jbe
xchg
dec
rolb
sbb
pop
sti
adc
dec
push
jns
pop
je
lods
cmp
test
jg
jne
ss
jle
mov
push
sub
pop
push
pop
jg
lea
jae
adc
dec
jno
dec
and
cmp
and
loop
lret
cmp
aas
mov
xchg
test
cmp
mov
lret
cmp
insl
insl
xor
lret
and
sbb
ret
nop
dec
add
lcall
pop
test
and
mov
mov
cmc
push
orb
xor
mov
add
lods
and
insl
add
loop
into
outsl
imul
and
cli
adc
in
inc
cmp
mov
mov
sub
and
dec
sbb
push
jl
jo
jne
push
rolb
stc
in
and
adc
inc
mov
mov
aas
or
jp
mov
rcrl
cld
mov
clc
inc
push
pop
mov
icebp
les
pop
xlat
jns
lret
lods
insl
and
sub
mov
xor
js
mov
and
jge
jg
imul
cmp
add
leave
loope
daa
jae
outsb
pushf
leave
sbb
cmp
fmul
mov
mov
xor
pop
push
push
mov
lret
add
adc
lahf
stos
or
pop
in
out
jge
xchg
cmpsl
inc
in
sub
dec
mov
cmp
cmc
lock
loopne
mov
xchg
jp
scas
pop
mov
lcall
adc
div
xlat
pop
shlb
xorl
aas
xchg
scas
inc
in
push
inc
int
int
and
call
in
xchg
push
je
cltd
cmp
xor
ret
mov
icebp
mov
popa
jbe
into
mov
out
sbb
inc
ret
push
mov
pop
xchg
jg
loop
shlb
insb
test
int3
loop
pop
lds
scas
clc
and
clc
clc
sahf
pop
inc
sub
pop
loop
mov
dec
inc
inc
mov
cwtl
test
adc
cmp
mov
mov
mov
pusha
push
ret
les
std
mov
fsubrl
cmp
add
aad
mov
aas
fbld
pop
pop
lret
insl
or
push
jnp
test
cmp
mov
fnsave
pop
push
add
xlat
test
and
loop
push
sbb
pop
inc
jb
pop
inc
mov
sbb
scas
loopne
pop
adc
test
icebp
or
imul
enter
mov
rorb
test
rcr
sbb
push
fstpt
xor
cmp
and
mov
les
jle
inc
xor
jb
idivl
xor
mov
jmp
and
loopne
dec
negl
sbb
inc
call
mull
das
xchg
stos
test
sbb
mov
xor
jmp
sub
enter
mov
push
mov
mov
cmc
inc
mov
test
jnp
arpl
fcomi
sbb
mov
lea
rclb
xchg
or
push
daa
or
jo
pop
xor
pop
fninit
lods
fcoms
cmpsb
dec
push
push
iret
es
pushf
push
add
cli
mov
jg
insb
mov
pop
mov
mov
push
lods
orb
fnsave
mov
dec
push
fnstsw
adc
notb
icebp
lcall
mov
pop
popf
mov
icebp
and
mov
in
pop
and
dec
out
mov
xchg
addr16
and
adc
aad
pop
sub
xchg
popf
pop
ss
and
fsubrl
sbb
lret
lahf
mov
cmp
cwtl
push
sbb
fstps
hlt
and
mov
dec
loopne
xchg
arpl
cmpsl
jecxz
pop
icebp
clc
or
mov
cwtl
push
scas
xchg
jae
or
push
lds
test
jne
push
inc
xor
rcr
mov
lahf
insl
rcr
xor
fmuls
and
xor
jno
clc
imul
push
or
push
mov
fisttpll
mov
jmp
jo
push
shll
test
sub
ljmp
and
shrb
and
push
es
push
xchg
enter
mov
clc
pop
ds
sub
loopne
loopne
cmp
mov
jecxz
dec
or
insb
fwait
and
popf
inc
dec
inc
sti
push
into
xchg
xchg
in
push
popf
xchg
pop
cmc
sarl
nop
jge
jb
inc
jmp
adcl
test
xor
or
dec
sbb
ja,pn
and
xchg
push
cltd
nop
cmp
add
mov
ficoms
adc
insb
push
jns
sub
mov
out
dec
movsb
sub
int
sub
push
jbe
cwtl
mov
sub
jp
adc
int
or
and
cmp
pusha
imul
arpl
adc
sahf
inc
insb
cmp
pop
push
lret
out
mov
lret
scas
cmp
stc
cld
jno
daa
cwtl
stc
lods
into
fidivl
sub
mov
cmp
mov
mov
in
mov
shll
int
movb
arpl
cld
cli
sbb
adc
inc
and
sbb
std
stc
out
mov
sub
es
repnz
and
sbb
in
or
shr
into
cmp
sarb
stos
mov
clc
mov
sub
lods
pop
adc
xor
jecxz
test
push
fsubrs
cld
fcompl
ficomps
cmp
xchg
push
bndstx
pop
icebp
adc
add
in
fildll
outsb
fistpll
xchg
push
test
and
shrl
adc
scas
pop
adc
imul
fildl
xor
mov
push
mov
cmp
test
bound
and
std
jmp
mov
pop
ljmp
fdivl
rcr
arpl
mov
adc
xor
dec
jbe
pop
sbb
insl
aaa
out
cwtl
sub
lods
movsb
stos
fidivs
adc
fsub
and
push
popf
jne
xchg
add
xlat
je
mov
push
call
clc
sbb
cmc
jecxz
fistl
and
add
repz
adc
mov
sub
es
dec
mov
sbb
cmpsb
mov
add
xchg
mov
dec
and
scas
in
cmpsl
inc
test
aad
andl
test
sahf
add
jae
jne
pop
shlb
inc
repnz
cwtl
imul
test
xlat
cmpsl
jl
pop
add
imul
ja
test
mov
xor
in
inc
add
gs
aam
sahf
dec
sti
and
cmpsb
mov
push
loopne
in
sbbl
mov
into
pop
movsl
or
pop
cs
sub
cld
sub
mov
xor
loop
xchg
lret
sbb
pop
mov
arpl
jmp
fldl
and
sbb
stc
mov
cmp
mov
adc
adc
dec
popf
dec
stc
cli
ja
fistpll
int3
dec
testl
pop
sub
mov
jo
loopne
push
sub
je
shll
into
push
pop
mov
incb
in
cmc
or
into
or
mov
popa
xchg
adc
mov
jge
dec
stc
mov
jp
shrb
dec
fwait
aam
and
popa
aad
into
jg
jmp
mov
push
and
pop
jbe
test
push
out
or
iret
or
bnd
es
sub
and
cmp
sub
xor
mov
mov
and
ljmp
sbb
leave
cwtl
in
je
sbb
xlat
sub
daa
sub
movaps
push
insl
pushf
add
repz
loopne
inc
inc
rcrb
and
call
ret
jo
xchg
mov
filds
push
mov
int
out
pop
push
addr16
movsl
and
xor
push
mov
popl
sahf
addr16
daa
pop
pop
xchg
mov
add
repz
test
jae
pop
cmc
sahf
push
mov
dec
mov
mov
ja
lock
out
nop
pop
ss
shll
out
jne
outsb
adc
outsb
sub
add
mov
imul
push
movsb
push
repnz
xchg
lret
or
mov
out
je
popa
adc
fistps
rcll
fcoml
xchg
dec
ds
add
jle
cwtl
sbb
inc
mov
mov
pusha
insb
testb
sub
test
out
aaa
cmc
and
iretw
jo
push
and
push
adc
frstor
xchg
insb
push
call
cltd
mov
leave
bound
filds
xor
cld
js
jo
jg
popf
shll
bound
test
dec
test
mov
sub
pop
push
mov
add
xor
mov
neg
out
cmp
jno
pop
xchg
fimuls
xchg
lods
and
stc
loop
andb
test
sbb
push
pop
xchg
adc
stc
mov
pop
xchg
mov
lods
pop
mov
flds
popa
movsl
sub
mov
add
xchg
roll
mov
test
jge
xchg
lcall
sti
lds
sahf
int3
nop
add
pop
shl
out
lret
xchg
shll
and
cmpsb
in
jp
andl
cld
cmp
js
or
outsb
or
orb
dec
push
into
inc
mov
fs
jge
scas
mov
and
je
dec
loop
mov
add
addr16
ret
add
aam
mov
jns
adc
pop
aad
sub
aaa
mov
sub
orl
and
pop
clc
or
mov
mov
out
jmp
sub
cmp
mov
sbb
inc
sub
out
call
in
and
sub
in
jp
stos
mov
lods
in
cwtl
and
hlt
add
jle
pop
ret
leave
mov
pusha
jmp
pop
icebp
call
ret
push
sub
mov
in
sarb
out
add
stos
icebp
dec
push
sbb
adc
iret
inc
push
cmp
movsl
jle
mov
inc
cltd
lcall
fiadds
rcrl
aas
jge
cmc
scas
add
aaa
xchg
lods
adc
push
inc
cmp
dec
add
in
fcom
sub
sbbb
jmp
jmp
fwait
pop
mov
aas
cmp
mov
inc
push
mov
fcomps
cmp
pop
sbb
xor
cmc
andb
mov
lock
fbstp
jmp
loope
add
bound
sub
sbb
repz
jl
int
xor
ss
jb
mov
xchg
push
jl
pop
or
das
in
inc
hlt
inc
fldcw
mov
xor
mov
mov
fwait
inc
xor
inc
push
jo
and
daa
mov
mov
pop
cmpsl
ret
stc
ret
daa
fcmovb
xchg
pop
and
gs
push
loope
cmpsb
jg
aam
aas
ljmp
lret
dec
push
xchg
inc
fwait
fs
sbb
repnz
daa
push
in
mov
and
mov
mov
pop
nop
hlt
in
loope
push
or
inc
call
ret
ja
aas
fistpl
cs
mov
mov
jmp
and
cwtl
pop
and
in
and
xorb
stos
imul
dec
loopne
lock
sbb
or
or
pop
xor
pushf
add
fwait
loope
jbe
arpl
xor
lods
mov
xlat
mov
fiadds
xlat
pop
inc
loopne
in
lret
push
add
in
addr16
aas
add
cwtl
mov
imul
mov
insb
addb
sarl
movsb
subl
push
xchg
fstps
out
call
mov
call
jp
pushf
popf
adc
fnsave
lcall
fwait
lds
xor
rorb
out
pop
js
lret
jnp
mov
jo
pop
test
mov
ret
jecxz
sub
out
repz
push
dec
jae
mov
mov
jl
mov
mov
dec
mov
xchg
repz
or
add
jmp
and
iret
or
dec
jns
leave
xor
or
or
ds
test
xor
orl
pmullw
lahf
inc
adc
sub
lods
sbb
cmp
cmove
add
setns
fisttps
jns
pop
xchg
ja
test
add
out
mov
in
cld
pop
enter
call
pop
dec
push
dec
orps
pop
int3
or
dec
xlat
dec
iret
ficompl
mov
mov
das
and
sub
inc
mov
lds
ret
std
cltd
inc
mov
stos
mov
into
sbb
xor
stos
ljmp
pop
cmp
push
add
cwtl
or
pop
add
pop
and
jne
cmp
dec
add
xchg
fidivrs
add
lahf
movsl
xor
mov
ljmp
xchg
sub
jb
shrb
test
es
adc
cs
cmpsb
arpl
cmp
xor
pusha
popa
lret
shlb
inc
dec
and
scas
or
push
mov
push
fisubrs
xor
push
or
and
mov
nop
loope
les
in
push
dec
xor
cmp
pop
in
aad
rcll
cmc
mov
mov
loope
adc
jne
pop
imull
mov
rcrb
test
hlt
fiaddl
lret
sub
add
dec
test
popa
icebp
mov
xor
push
jno
xor
dec
dec
xor
fdivrl
cmpsl
les
cmp
insb
push
push
stos
sub
addr16
push
js
or
cmp
dec
and
leave
imul
mov
mov
or
clc
jge
sbb
movsl
cmp
out
outsb
test
xlat
push
fwait
imul
and
jae
xchg
dec
sahf
sub
leave
or
mov
push
mov
into
das
xor
push
add
movsb
in
xlat
xchg
fists
adc
fdiv
xchg
clc
inc
aad
scas
jecxz
push
sbb
jle
mov
in
int3
mov
dec
mov
call
mov
in
mov
mov
sbb
lds
mov
cmp
jb
push
pushf
adc
loope
std
pop
out
and
mov
inc
jmp
xorb
repz
push
dec
fstp
and
faddl
pop
push
mov
and
and
hlt
and
dec
xor
in
mov
or
lcall
fs
arpl
pop
mov
sbb
jbe
sub
push
pop
fcoms
mov
insb
dec
shr
pop
stos
xchg
cmpsb
dec
leave
add
cmp
sbb
xchg
das
jae
push
aaa
sub
jl
and
jnp
sahf
jmp
dec
fmulp
leave
cs
stos
call
adc
out
sti
pop
jge
sub
call
push
fiadds
xchg
and
add
lret
push
jne
mull
ret
movsl
lahf
je
cltd
inc
sub
mov
xchg
xchg
nop
loope
xchg
push
push
rcrb
add
mov
sbb
cmpsb
xor
in
pop
lods
pusha
and
arpl
outsl
insb
enter
cmc
sahf
mov
repnz
xchg
mov
add
lret
std
test
cmp
push
adc
inc
lcall
xchg
cmp
lcall
xor
jb
and
je
and
xchg
hlt
mov
add
mov
add
cmp
cs
cmc
shrd
inc
fs
inc
adcb
sbb
jbe
mov
lcall
addr16
inc
mov
jnp
and
add
repz
cmpsl
lahf
stos
cmp
fildll
xor
lea
push
mov
push
sbb
inc
movsb
xchg
pop
dec
loop
adc
cmp
stos
cld
jo
imul
lock
scas
test
xchg
cmp
cmp
jae
out
out
mov
in
xor
mov
pop
xlat
jge
std
imul
jmp
stos
test
push
mov
sub
add
ss
scas
and
inc
push
xchg
dec
xchg
fwait
rcll
andl
in
stos
push
addr16
add
sarb
std
rcrb
pop
mov
inc
sub
or
repnz
das
sbb
or
pop
fisttps
mov
fxch
xchg
inc
xor
pusha
adc
inc
lods
gs
jno
pop
pushl
inc
xchg
jne
jbe
iret
aas
dec
int
mov
lods
outsl
movsb
fistpl
js
es
sub
push
pop
xor
adc
adc
push
cltd
call
cld
xchg
dec
adc
in
in
or
dec
mov
jp
or
rolb
sub
loopne
pop
test
pop
inc
andl
jb
iret
and
jo
inc
and
out
loop
les
sbb
cmp
inc
test
dec
sti
lods
mov
sbb
lahf
ret
pop
inc
cmp
stos
mov
lret
into
insb
in
loopne
shrb
inc
sub
or
imul
sbb
imull
std
push
push
cmp
push
insl
xlat
push
test
je
decl
in
loop
cmpsb
sub
push
mov
pop
js
insl
jno
bnd
adc
pop
push
movsb
repz
pop
fidivs
je
scas
movsl
sar
and
rclb
lret
dec
xchg
and
inc
addr16
mov
js
xor
das
mov
push
xorl
enter
adc
cmp
les
push
fnstsw
inc
stos
dec
enter
fidivrs
jb
xchg
cmp
push
in
mov
jecxz
pop
mov
mov
stos
xor
leave
mov
xor
mov
push
sub
or
inc
push
rcrb
mov
nop
or
hlt
cli
mov
xchg
inc
repz
out
xchg
ds
movsb
mov
mov
shrb
inc
fmulp
les
pusha
add
aam
insb
dec
ret
leave
sbb
sti
rcrl
jg
dec
cmp
fwait
mov
cwtl
jle
fimuls
add
je
leave
or
fwait
cli
mov
jns
xchg
mov
sub
cmpsl
cmp
dec
jg
je
push
std
insb
dec
je
mov
pop
daa
cmp
mov
inc
js
out
dec
inc
test
fdivrp
pop
xor
pushf
cmp
xor
sub
xchg
pop
dec
pop
push
inc
std
loopne
dec
or
mov
and
xchg
sub
sbb
and
ret
std
sub
mov
adc
inc
dec
and
repz
cmpsl
aam
mov
out
adc
fcoml
in
push
mov
cmpsl
pop
push
test
add
out
dec
scas
in
sub
xchg
pop
dec
xor
pop
test
jecxz
and
aas
sti
roll
rcll
xchg
mov
xchg
jl
xchg
inc
sbb
arpl
repnz
jle
mov
fsubrs
divl
pop
sub
push
push
ja
ljmp
sbb
int
fimull
mov
push
mov
pop
xor
jbe
dec
or
lock
andl
xlat
pop
enter
cmp
cmp
or
mov
data16
inc
roll
xchg
shrl
lret
push
cmc
lcall
notb
jns
cmp
mov
inc
dec
ds
xchg
mov
int3
xor
jl
mov
dec
dec
xor
mov
xchg
shrl
lret
and
mov
mov
fiadds
ljmp
or
stos
cld
xchg
in
fwait
insl
mov
rolb
push
or
adc
and
and
repnz
scas
iret
pop
dec
push
and
pop
jns
push
ss
popf
je
dec
decb
daa
inc
pop
jo
insb
out
pop
push
lds
mov
testl
test
enter
jmp
push
jns
pusha
mov
push
mov
test
jp
leave
push
dec
and
add
sub
icebp
xor
jb
rclb
mov
cltd
rorb
cmp
movups
push
sub
inc
cmc
jae
fildl
mov
clc
adc
add
fldl
jns
jecxz
insb
mov
insl
in
jne
mov
aaa
adc
jecxz
mov
cltd
push
pop
dec
xor
inc
lods
jmp
sahf
mov
pop
fwait
push
xchg
adc
inc
rolb
cmp
cmp
xchg
out
jb
xor
lret
leave
aaa
aad
adc
xor
adc
stos
int
push
inc
leave
jl
xor
out
sub
daa
je
test
adcl
or
mov
or
push
sbb
xor
popa
cmp
loopnew
ss
outsb
scas
jmp
adcl
sahf
push
add
xchg
cmpsb
dec
pop
roll
xor
fbld
jp
adc
mov
int3
sub
push
andb
pop
push
pop
rolb
dec
in
cltd
sub
inc
lret
push
mov
dec
incb
mov
adc
add
xchg
sbb
jmp
cmpsl
mov
adc
ret
push
pop
mov
shlb
xchg
test
push
sarb
mov
or
mov
jns
cli
mov
test
andl
jnp
shll
movsb
pop
add
sub
and
add
test
cs
pop
ss
test
lea
pop
pop
mov
test
movntq
out
add
negb
mulb
je
js
cmp
das
push
test
popf
lahf
cmp
mov
lock
inc
pop
mov
inc
xor
in
cli
pop
inc
cmpsb
rcrb
adc
rcrb
and
test
add
push
and
jle
or
mov
fst
mov
jmp
push
mov
sub
ds
stos
push
sbb
outsl
std
pop
aas
das
or
adc
cmpsb
fcmovnbe
ss
fbld
xchg
mov
add
sub
rcll
xchg
xchg
aaa
and
jle
and
xchg
call
sbb
das
sti
push
popa
les
mov
dec
mov
cmp
jnp
inc
ds
stos
push
sub
inc
pop
lods
rorb
inc
sub
aad
pop
jbe
test
pop
and
jmp
repnz
popa
js
sbb
jbe
inc
nop
xor
push
repnz
add
sysexit
lods
jge
push
or
xchg
test
aad
add
out
add
xchg
sahf
jne
ret
pop
fwait
add
lds
fadds
outsl
inc
add
pop
add
pop
ljmp
scas
movsb
das
fwait
mov
xchg
sub
and
jp
ja
xor
pop
xchg
cmc
je
add
push
fcompl
aad
test
and
jo
adc
rorb
add
cmpsl
loopne
minps
ret
jge
pop
aad
dec
nop
pop
cld
xor
push
fcomps
and
push
push
sub
les
in
mov
inc
ficoms
lret
rcrb
or
pop
push
movsl
and
jae
mov
mov
mov
shl
add
lea
outsl
lcall
mov
lds
push
mov
test
and
stos
inc
dec
jno
adc
jg
notl
pop
or
aas
imul
adc
mov
test
xlat
mov
jge
vmaxpd
mov
adc
mov
mov
jecxz
dec
mov
xchg
mov
or
or
xor
addps
xchg
enter
int
adc
add
sub
inc
jp
adc
xor
mov
jmp
cmp
lock
sbb
inc
xchg
sbb
lea
rcrl
xchg
iret
sbb
ret
dec
jmp
in
or
add
popf
sbb
xor
scas
push
mov
arpl
adc
outsl
outsb
mov
and
movsb
fwait
scas
push
dec
mov
int
jle
xorl
jecxz
fldt
nop
adc
dec
pushf
dec
dec
imul
icebp
out
or
cld
push
jne
stos
xchg
dec
mov
stc
insl
mov
mov
xchg
mov
stos
sti
int
pop
sub
xlat
std
scas
xorl
dec
inc
jl
testl
cmc
jmp
add
and
sahf
add
mov
dec
cmpsb
xor
push
mov
stc
rorb
push
daa
enter
lock
mov
in
out
push
das
mov
mov
cmp
and
popf
adc
out
int
mov
and
add
adc
insl
sbb
sbbl
mov
test
sub
lods
rcl
aad
sub
lods
mov
jbe
lods
jmp
xchg
xchg
sti
popf
fucomip
in
pop
jmp
pop
push
test
es
inc
sbb
ret
pop
sub
dec
cld
inc
popf
push
icebp
jae
and
adc
and
sbb
pop
mov
repz
xlat
or
add
mov
enter
data16
inc
mov
movsl
jge
mov
ret
xlat
push
in
xor
xor
cmp
jb
cld
int
mov
sub
cmp
js
mov
sub
cmp
cmpsb
fucomip
xor
mov
mov
movsb
shlb
add
stos
mov
or
push
dec
fnstenv
pop
sbb
mov
xor
xchg
add
xchg
fdivp
repnz
jg
jns
int
or
fsubrs
adc
cmp
pop
push
or
test
xchg
popf
dec
aaa
std
movb
insl
idivl
jge
nop
inc
xlat
cmp
pop
sbb
stc
push
mov
or
lods
mov
xor
and
dec
rdtsc
cmp
pop
push
rcrb
mov
mov
and
add
and
dec
jle
pop
xchg
fmull
push
pop
loopne
push
sbb
sub
cmpsl
xor
ror
rolb
and
and
leave
xor
ljmp
push
mov
std
int
push
cs
mov
dec
jg
aas
and
dec
inc
test
push
mov
xor
je
aad
mov
pop
ja
es
cmp
sub
inc
movsb
cs
inc
rcr
inc
les
dec
adc
cmpsl
jnp
pushf
cmp
xor
ss
aaa
mov
out
jns
xchg
pushf
aad
aad
popa
das
push
shlb
mov
inc
or
jo
mov
adc
push
xor
aas
imul
ja
inc
jnp
jmp
add
jg
not
mov
jl
adc
fidivl
popa
jle
pop
popf
or
xchg
lods
sub
sub
ljmp
and
loop
loopne
hlt
cld
sub
jp
sbbl
xor
push
jle
jle
inc
test
into
cmp
xchg
cmpsb
lock
es
aaa
add
jecxz
pop
pop
dec
cld
inc
jge
imulb
cmp
pushf
cmpsb
mov
lcall
gs
popa
jne
adc
push
or
icebp
xchg
fisttpl
aas
je
ds
and
cltd
jo
pop
stos
pushf
hlt
stos
jp
fwait
add
insb
inc
and
inc
or
and
jb
jno
mov
les
dec
iret
fcoms
cltd
sub
lret
mov
mov
in
push
out
xchg
mov
ja
mov
movsl
jns
sub
scas
and
andb
adc
push
jns
fisttpll
daa
push
xor
mov
mov
in
jl
pop
push
sub
insb
shrl
sbb
push
repnz
mov
mov
stos
push
cmpsl
cmp
pop
stc
inc
push
inc
adc
into
sub
loop
jecxz
and
mov
insl
pop
jmp
jns
clc
fidivl
scas
movsb
add
push
xor
dec
sbb
or
jne
push
call
mov
cmp
push
rclb
dec
or
pop
lea
sahf
sub
push
pop
or
sbb
pop
aas
xlat
lods
fdivrl
sbb
fdecstp
mov
aam
jmp
test
das
int3
idivl
mov
cmp
arpl
aad
test
les
cmp
out
jnp
lea
mov
insl
mov
and
shrb
sub
imulb
in
add
in
pop
pushl
out
or
aaa
or
sbb
aas
je
jns
jle
mov
dec
repnz
icebp
or
mov
mov
cmp
xorl
mov
mov
dec
mov
adc
mov
jo
push
xchg
mov
xor
xchg
mov
pop
cltd
add
repnz
xchg
int
mov
stc
or
fcomps
inc
fwait
or
mov
gs
cmc
int3
shrl
jecxz,pn
into
repz
sub
sub
sub
loopne
adc
inc
xchg
jecxz
inc
enter
xor
in
inc
in
jl
and
outsl
pop
pushf
sub
movl
jae
sub
arpl
xor
int3
popf
mov
bound
pop
scas
add
icebp
mov
andb
cli
stc
dec
lret
sub
rcll
neg
mov
hlt
imul
inc
shll
js
pushl
stc
ljmp
ja
push
scas
outsb
mov
pop
divl
jmp
jo
test
or
ds
repz
into
imul
pop
inc
iret
mov
outsb
sub
jg
stos
pop
insb
lea
dec
test
jbe
dec
jge
jp
icebp
push
inc
lds
dec
adc
jno
cmp
sub
adc
xchg
pop
fmulp
mov
loop
and
jne
outsl
xchg
xor
pop
std
lea
call
outsl
mov
cmp
mov
fwait
clc
leave
ficompl
cmp
insb
mov
ja
jb
mov
push
popf
or
fs
cmp
sub
cmc
dec
jle
test
frstor
cmp
je
jecxz
cld
sbb
addr16
in
push
push
push
mov
cld
ja
cli
or
xchg
sbb
push
pop
cmp
sbb
xor
cmp
scas
jecxz
filds
or
or
push
mov
xor
lods
sarl
push
mov
clc
stos
ret
ljmp
xchg
fs
lahf
mov
cmp
pop
fcomi
adc
jno
xor
push
invd
jbe
adc
imul
and
sbb
cmp
test
sar
les
aad
inc
outsb
test
je
cli
cmpsl
inc
dec
popf
cmp
enter
lea
sar
pop
cs
lret
lcall
cld
and
push
lret
adc
mov
xor
movsb
and
pop
sbb
mov
cmpsl
mov
movsb
mov
mov
adc
inc
popf
push
sahf
mov
xor
test
cmpsl
push
xlat
mov
fidivl
movsb
insb
xchg
lahf
inc
stc
movsw
sub
movsb
jecxz
jmp
push
pop
jae
pop
adc
pop
lds
pop
rclb
cmp
dec
xor
mov
sub
ds
imul
pop
mov
xor
addr16
std
arpl
push
enter
and
pop
lea
sbb
imul
das
lock
mov
mov
js
out
iret
cmp
mov
mov
xor
pop
outsl
cmp
push
pop
jl
dec
mov
mov
out
dec
scas
test
aas
outsb
int
stos
ljmp
add
daa
adc
outsb
add
cli
lahf
mov
fucomip
repz
mov
jge
sub
sbb
and
jns
mov
call
dec
dec
in
mov
dec
mov
iret
mov
pop
js
testb
jge
dec
jnp
push
mov
push
das
ds
inc
ljmp
adc
and
xchg
sub
repnz
das
xchg
jle
cld
xor
push
nop
pop
shlb
js
cmc
mov
add
xchg
dec
sub
push
lea
pop
sbb
sub
and
push
in
ja
mov
cltd
add
xchg
or
lea
pop
xchg
add
pop
mov
sub
out
in
xlat
mov
ret
out
cmp
mov
push
outsl
mov
cmc
lods
or
popa
xlat
pop
imul
dec
ret
bound
popl
aad
pusha
rcr
jp
call
pop
icebp
out
les
xor
push
adc
sub
dec
xchg
pushf
mov
sbb
adc
sbb
imul
mov
mov
cmc
mov
push
cli
sbb
xchg
shrb
push
pop
inc
pop
ja
jbe
pop
aas
push
and
sub
addb
mov
pop
cmc
mov
dec
ficompl
adc
mov
jne
in
loopne
xchg
inc
pusha
sbb
neg
idivb
pop
out
adc
cltd
sub
jecxz
add
lods
rorb
outsb
ja
rcrl
rclb
cwtl
adc
stos
repnz
cli
cli
lea
jae
push
push
int
and
jb
mov
fldenv
cmpsl
adc
jg
rcrl
daa
ret
cmp
jbe
leave
ret
nop
cld
sub
in
jns
jle
imul
mov
sbb
call
hlt
xor
in
or
popa
xchg
dec
pop
jle
outsl
mov
mul
push
test
fs
pop
imul
in
jae
and
xor
aas
les
mov
pop
hlt
and
lds
xchg
xchg
cwtl
jle
inc
lcall
or
xor
cs
lods
ret
int3
adc
das
sbb
and
pop
shlb
lret
jbe
and
push
pop
cwtl
inc
nop
stos
out
xor
nop
mov
push
ds
aas
std
into
adc
int3
mov
pop
jno
mov
jmp
es
sahf
call
jecxz
jp
add
push
lods
cmpsl
jne
cmp
nop
cli
and
and
xchg
pop
leave
pop
xor
xor
mov
mov
mov
xchg
push
test
out
hlt
pop
cmpsl
outsb
popa
insl
mov
leave
mov
mov
ja
mov
stos
xor
mov
mov
fldln2
sbb
mov
shlb
mov
into
mov
fmull
cmp
fcmovnu
xchg
imul
sub
xchg
mov
pop
push
jo
aas
repz
xchg
ficoml
aaa
cld
icebp
xor
lea
fistps
sbb
rorl
mov
in
sbb
and
insl
aaa
insb
sub
xchg
inc
fisttpll
mov
push
iret
stos
lock
fistl
divb
fwait
and
out
imul
loop
test
pop
cmp
lea
mov
or
xchg
cmp
push
pop
pop
xchg
mov
testl
xchg
sahf
jbe
mov
fildl
xor
mov
test
jbe
pop
fcom
jno
cmc
mov
xchg
into
or
movsb
popf
daa
xor
jecxz
lret
ret
sti
sub
adcb
sub
fildll
cli
push
popf
std
fnstenv
das
je
mov
mov
stos
push
mov
and
stos
pop
int3
lahf
fincstp
or
sub
push
cli
cmc
pop
pop
push
repz
nop
sub
and
fcomi
loope
fwait
pusha
test
test
add
pop
cli
xchg
fdivs
je
clc
mov
sbb
cmp
lret
mov
lods
pop
xor
stc
in
dec
add
fsubp
add
inc
jp
jae
inc
pop
dec
ljmp
mov
mov
shrb
pop
out
int3
xchg
mov
adc
mov
lcall
scas
notb
jnp
jbe
jg
push
dec
and
add
pop
cmp
cmpsl
psrld
dec
dec
mov
mov
imul
mov
inc
sub
xor
loopne
jb
pop
xor
popf
jg
and
cltd
and
add
ret
pop
lcall
movsb
out
push
cmp
subb
hlt
pop
mov
add
lea
inc
xchg
loopne
call
orl
leave
xor
xor
xchg
adc
sbb
mov
mov
or
outsl
cmp
fidivrs
hlt
negb
push
mov
jle
pop
mov
subb
mov
repz
repz
push
jnp
mov
arpl
ja,pt
loope
or
mov
loope
pusha
jae
js
fstl
jno
and
addr16
repnz
ljmp
mov
mov
push
icebp
sbb
das
enter
imul
push
dec
cmp
push
adc
cmp
in
jmp
mov
cmp
rolb
popf
xchg
mov
mov
sub
stos
jbe
or
pop
out
dec
inc
xchg
mov
or
ja
nop
mov
and
mov
jns
mov
xchg
test
hlt
inc
pop
jp
lock
and
push
pop
sub
dec
mov
in
or
lret
out
int3
leave
repnz
sub
xor
ds
add
jbe
mov
xor
loope,pn
fwait
push
pop
and
mov
jnp
jbe
cwtl
sbbb
xor
test
sub
test
sti
mov
jae
rcrb
ja
cmp
xor
icebp
sbb
fbstp
aad
scas
add
sbb
ja
and
cmp
add
cwtl
push
iret
push
test
pop
fists
mov
xchg
push
mov
sahf
pop
sbb
jmp
adc
add
std
hlt
sahf
jbe
sahf
cltd
pop
in
loopne
mov
roll
mov
fimuls
xchg
or
dec
push
loop
in
sbbl
jae
movsl
popf
lahf
mov
fsubr
popf
mov
push
jp
rorl
sub
sbb
mov
data16
repz
outsb
xchg
lcall
ds
dec
roll
aad
push
mov
and
inc
cltd
mov
adc
or
ficoms
shll
sub
xor
fsubrs
lock
xchg
sub
je
ljmp
lds
or
push
lods
jne
stc
mov
or
out
mov
in
es
sti
jno
rcll
ja
ja
rcll
adc
inc
add
sub
int3
push
idiv
lds
ficomps
inc
les
ret
xchg
sbb
pop
mov
jle
sbb
into
out
ret
push
xlat
mov
loop
mov
cmp
sbb
out
fldcw
rorb
jno
dec
clc
lcall
leave
in
sub
add
push
jg
xchg
in
xor
cmpb
mov
cmp
adc
and
aad
xor
aas
int
adc
jg
ret
adc
xchg
ds
lds
rcrb
sarb
xlat
hlt
shlb
jmp
aad
movsl
cltd
sarb
jecxz
add
sub
xor
sbb
lods
dec
push
mov
pop
add
and
lds
movb
test
fists
mov
and
and
cs
xor
push
xchg
pop
outsl
das
fs
loopne
push
das
loopne
adc
jp
mov
icebp
fdivs
cmp
and
xchg
ja
neg
mov
or
aaa
xchg
into
jo
and
and
mulb
imul
mov
cmp
mov
mov
jo
lds
sahf
scas
xor
into
pop
inc
int
push
mov
arpl
dec
jecxz
xor
loop
leave
push
fs
pop
xchg
ljmp
lods
clc
or
imul
or
pop
call
adc
jne
js
test
stos
jl
int
sub
arpl
jbe
loope
xor
ss
xlat
movsb
outsl
cmpsb
mov
mov
jmp
jp
pop
push
out
daa
lods
mov
mov
insl
mov
cmpsl
int
lahf
scas
out
or
stos
cmp
sbb
or
push
mov
negb
in
stc
mov
lahf
pop
adc
jmp
or
pop
xor
test
and
dec
jbe
xor
pop
fsts
call
je
pop
enter
cmp
cmpsl
js
into
mov
xor
push
mov
lock
adc
mov
push
jmp
push
mov
in
sbb
jno
adc
sub
jecxz
cmpl
inc
cmpxchg8b
add
sub
cmp
push
fldenv
nop
hlt
add
mulb
loopne
movsl
out
mov
lret
mov
call
aam
lods
fsts
add
xor
or
push
or
push
push
xchg
mov
xchg
int3
cmpb
cmpsl
and
pop
daa
in
sbb
pop
outsl
sbb
xor
ret
cmp
cld
add
loopne
pop
xchg
je
lock
sub
cli
testl
je
lock
push
loop
cmp
jnp
cli
adc
push
xor
nop
rclb
push
sub
popa
push
fistps
pop
mov
pop
std
lret
or
jl
rclb
gs
jge
ja
mov
test
dec
adc
aas
shll
jl
pop
mov
jp
mov
arpl
mov
add
inc
out
loope
imul
std
xor
pop
adc
insl
push
xor
out
add
jp
and
fisttpll
aas
daa
inc
mov
ljmp
pushf
add
aam
jb
pop
inc
adc
popf
mov
pop
push
pop
inc
scas
cmp
xchg
jmp
or
mov
movsb
mov
jmp
cmp
xor
dec
fs
inc
gs
iret
test
jns
xchg
repnz
push
outsb
mov
push
xchg
mov
scas
cmpl
stos
pop
movsl
jmp
movsb
sbb
mov
sub
mov
mov
add
xor
bound
mov
loope
repnz
repz
mov
mov
es
pop
and
in
adc
jnp
das
loopne
cmc
mov
notl
fildll
aas
xchg
adc
outsb
mov
xrelease
ljmp
xor
dec
sub
push
push
or
adc
nop
inc
test
ljmp
pop
sub
cmpsb
xlat
xchg
mov
sub
insb
push
negb
jg
int
cmp
push
lahf
push
sbb
push
into
mov
push
loope
inc
xor
pop
enter
xchg
hlt
add
sbb
inc
push
jae
cmp
lahf
push
repz
enter
stos
cmpsb
cmp
and
repz
mov
push
adc
mov
shlb
add
divb
mov
arpl
loopne
test
dec
mov
push
subl
adcl
test
ficompl
or
repz
mov
inc
das
sarl
jl
jne
test
mulb
stc
mov
and
mov
dec
test
pop
lret
fstp
pop
outsl
and
sbb
mov
outsb
xor
pop
xchg
mov
sbb
mov
in
scas
jb
add
jmp
sub
dec
cltd
inc
movsl
xchg
out
movsb
pop
lret
sub
lea
nop
mov
cmp
test
pop
sbb
enter
xor
push
sbbb
cmp
xor
adc
mov
stos
xor
lret
loope
scas
shrb
test
test
push
xor
mov
fld
mov
loop
iret
cmp
das
lret
add
inc
mov
int3
or
pop
mov
or
jg
push
ret
mov
jl
mov
and
pop
mov
xor
pop
loop
jb
sarl
and
or
insb
jge
dec
sub
imul
sub
test
dec
cwtl
adc
in
fdivrs
cmp
or
int
outsb
push
sahf
test
push
xchg
sub
fmuls
push
ja
ds
pop
shld
inc
ljmp
cli
testb
cs
add
jmp
xchg
push
and
push
ret
in
movsl
add
jle
mov
cs
mov
and
test
hlt
or
inc
add
and
stc
sbb
adc
ficompl
mov
daa
mov
lcall
repz
and
and
shlb
inc
mov
in
mov
mov
jns
fwait
mov
jns
shlb
pop
jge
cmc
popf
arpl
xor
add
dec
jo
jae
hlt
push
jne
mov
repz
cmp
jl
and
jo
pop
lds
cmp
addr16
jo
adc
aaa
lcall
inc
je
adc
jle
mov
xor
call
pop
inc
scas
scas
call
mov
cli
lcall
mov
out
mov
or
fidivl
jnp
test
fmulp
jne
sub
call
test
push
mov
je
in
jns
push
jp
mov
sbb
dec
sub
out
fwait
pop
inc
jbe
xchg
inc
dec
mov
lret
rcrb
jns
inc
push
fdivr
mov
popa
mov
and
sub
pop
mov
clc
pop
dec
or
pop
lcall
add
les
lret
dec
adc
adc
push
or
fwait
cs
int3
es
add
lret
push
cmpsl
imul
addr16
xor
inc
rolb
adcl
stos
cwtl
mov
negl
loope
rorb
push
mov
pmuludq
push
lret
xor
or
mov
insb
push
sub
add
movl
sub
xchg
pop
inc
and
or
push
cmp
push
adc
cli
inc
lock
push
push
sub
push
sahf
mov
pushf
adc
shl
mov
imul
pop
stos
lahf
scas
xchg
xor
push
sbb
push
push
inc
add
mov
test
adc
dec
mov
mov
xchg
mov
fcmovnb
outsb
ffree
adc
rorl
ljmp
xor
je
jb
cld
arpl
push
int3
fnstcw
xor
push
mov
mov
into
movsb
mov
or
mov
and
aam
and
aam
adc
arpl
inc
mov
rclb
pop
lahf
dec
push
add
call
lcall
fwait
push
ja
xor
mov
inc
movsl
mov
popf
adc
xlat
jle
in
dec
leave
xchg
jbe
and
cmp
lea
fdivl
jb
pusha
push
or
adc
je
push
bnd
cmp
sbb
add
sub
mov
cmp
dec
mov
pusha
ja
lods
sub
push
or
dec
lods
addr16
scas
mov
movl
repz
les
sub
test
sbb
add
add
in
ret
scas
and
xchg
xlat
or
dec
cmp
push
ljmp
mov
pop
stos
mov
aas
push
clc
iret
mov
fdivp
and
xchg
imul
mov
or
add
je
or
nop
lods
daa
dec
pop
inc
scas
adc
and
imul
idivl
pushl
mov
add
hlt
std
out
push
cmp
insl
cwtl
nop
jne
in
and
mov
das
stos
adc
fdivl
addb
test
or
add
or
test
pop
cltd
or
or
sub
and
pusha
loop
pop
arpl
or
jbe
addr16
addr16
pop
out
push
shll
loope
shlb
mov
movsl
xchg
add
cld
jge
call
cmp
add
faddl
xlat
and
push
xrelease
mov
in
popa
idiv
mov
into
lahf
mov
hlt
jl
shlb
mov
lret
mov
inc
outsl
inc
cmp
into
sar
loop
ret
mov
sbb
cmc
push
mov
xchg
or
pop
jb
enter
stos
and
lods
mov
and
inc
out
leave
or
cmc
js
xchg
and
xchg
xchg
xchg
add
ds
dec
arpl
and
adc
sub
divl
mov
dec
lods
pop
daa
and
inc
data16
shrl
mov
sbb
lea
dec
sqrtps
lds
sub
cmpsl
leave
xchg
add
pop
pop
ret
insl
out
or
add
stos
jae
mov
loop
push
and
aas
shl
pop
fstp
pop
xchg
out
enter
cltd
stos
mov
and
and
adc
xor
xor
inc
xor
and
xchg
jg
enter
jb
jge
jnp
aam
add
mov
int
ja
jg
stc
sub
in
jmp
inc
js
lock
movb
adc
adc
inc
pop
inc
fdivrl
lods
out
in
mov
mov
push
adc
cmc
insl
or
fbld
cld
sub
nop
loope
into
mov
mov
sbb
addr16
test
jl
push
loope
dec
and
push
bnd
pop
jns
lret
jmp
sbb
mov
and
fisttpl
and
pushf
sub
lea
rol
push
ja
gs
xchg
pop
test
cmp
pop
jmp
test
push
ljmp
fisttps
mov
push
push
aas
push
loop
sub
push
cmpsb
sbb
lods
inc
inc
dec
aad
cs
ss
inc
mov
sbb
fdivrl
mov
push
and
mov
or
dec
mov
hlt
lock
movsb
shll
dec
sahf
cmp
pusha
inc
xchg
leave
cmpsb
inc
push
enter
mov
cmp
pop
mov
and
pcmpgtb
xchg
sti
mov
inc
stos
mov
in
or
insl
sbb
sahf
inc
pusha
js
mov
and
xchg
or
pop
sbb
stc
sahf
pop
stos
scas
fld
ljmp
es
loop
js
inc
dec
arpl
dec
das
sub
or
ja
call
popa
cli
icebp
movsb
jg
and
sbb
and
leave
and
pop
int3
lahf
loope
dec
dec
imul
mov
addr16
or
or
jbe
popa
sbbb
pop
test
dec
iret
arpl
dec
sub
test
or
std
cld
pop
pop
adc
pop
stos
mov
and
popa
insl
and
cmc
mov
mov
gs
push
addl
add
lods
movsl
pop
cmp
rcl
sbb
gs
icebp
out
cmp
sub
jecxz
jne
or
mov
sub
rcrb
cmp
ret
daa
movsb
insl
cmpsb
jecxz
push
call
ljmp
mov
aas
jo
test
mov
sub
mov
ss
das
lods
xchg
or
xchg
iret
imul
jno
inc
mov
nop
xchg
xchg
add
xor
mov
push
scas
or
int
and
xchg
and
rcll
jbe
sub
jb
adc
clc
jecxz
or
xchg
or
shrb
inc
filds
xchg
mov
cmp
pop
sbb
pop
repnz
movsb
lea
sbb
dec
dec
out
xorb
cmp
mov
cmp
sbb
and
std
inc
cld
mov
sub
fimuls
test
and
cmp
mov
sbb
xchg
jne
push
or
or
js
xchg
adc
jae
jae
mov
adcb
bound
push
stos
aaa
js
out
dec
lret
pop
leave
xlat
sbb
fstpt
inc
mov
jno
jl
lods
das
movsl
fistps
xchg
jbe
ret
jl
add
inc
jae
add
mov
dec
mov
adc
mov
mov
out
and
call
divl
push
mov
pusha
push
lahf
cmp
mov
dec
stos
sti
loope
and
add
outsb
leave
into
shr
and
mov
mov
lock
jl
xor
ffree
mov
pusha
jle
daa
enter
addr16
dec
pop
pusha
dec
xor
test
xor
mov
mov
xor
ds
sti
inc
pop
pop
cwtl
pushf
inc
mov
push
test
jge
sbb
mov
mov
dec
cmp
jg
stc
sub
jbe
mov
popf
jbe
pop
xor
add
mov
std
adc
fldln2
add
lret
or
lea
loope
lret
repnz
lock
jo
sub
lds
mov
dec
xchg
pop
not
adc
add
int3
fildll
out
aad
push
mov
push
stc
pop
and
cli
dec
pop
stos
mov
xor
push
adc
jnp
sbb
dec
roll
inc
iret
fisubs
out
pop
mov
fsubp
insl
mov
lahf
push
xchg
outsb
pop
mov
pop
dec
push
ret
or
push
flds
out
movsl
and
shrl
in
ret
push
xor
sbb
jge
xlat
mov
lock
mov
decb
outsl
dec
ret
ficoml
mov
outsb
sbb
out
loope
in
ss
jecxz
mov
xchg
fnstsw
inc
adc
xor
das
clc
nop
dec
cmp
stc
xor
adcl
add
enter
xor
stos
mov
fistps
and
arpl
sbb
jnp
sahf
adc
nop
movsb
test
pop
rclb
and
out
iret
mov
inc
xor
data16
leave
or
ss
jnp
mov
jecxz
push
inc
xor
mov
mov
in
pop
sub
xchg
mov
mov
adc
das
cwtl
rorb
shl
aaa
xor
loop
and
pushf
fcomp
mov
das
xlat
cmp
out
inc
jnp
xchg
xor
rorl
ficomps
sti
jle
mov
enter
adc
jecxz
movsb
mov
pop
daa
pop
jns
jp
hlt
pop
jle
xor
jno
es
adcb
out
std
arpl
sarb
inc
adc
lock
insl
lods
mov
or
test
sub
xor
icebp
xor
out
push
call
mov
cmp
loopne
xor
sti
xor
pop
leave
jge
jl
adc
mov
xor
pop
pop
pusha
mov
fwait
int
inc
cmpsb
data16
addr16
insl
and
dec
mov
xor
sbb
jb
dec
test
mov
cs
jp
gs
imul
imul
sbb
pop
add
adc
mov
xchg
push
nop
fwait
aam
sub
lods
mov
scas
jno
iret
imul
clc
sub
or
ja
das
push
push
and
mov
les
mov
movsb
mov
mov
imul
cmp
das
mov
and
adc
push
sbb
mov
add
mov
call
push
mov
inc
cmp
pop
inc
mov
jbe
jbe
or
out
negb
ss
aam
inc
sbb
or
test
aas
xchg
jae
divb
push
push
in
leave
lcall
stos
inc
jns
shr
ss
out
mov
ljmp
mov
andb
pop
fldcw
mov
int3
pop
xor
push
data16
jbe
jmp
mov
std
lods
push
rorl
enter
pop
mov
add
jl
pop
adc
aaa
pop
jo
push
dec
in
fbstp
xchg
enter
cmpsb
fld
mov
loope
dec
inc
stos
mov
scas
bound
or
mov
aad
pop
lcall
xchg
push
imul
jns
rorl
dec
les
shll
jno
inc
pop
jmp
jge
mov
outsb
negl
pushf
mov
aaa
push
cli
sub
std
enter
jb
out
sbb
mov
cmpsb
mov
ds
mov
dec
popf
cmp
out
cli
push
inc
fs
cmp
out
cmp
mov
jb
fldcw
fcmove
jge
mov
xchg
not
inc
dec
inc
xchg
les
call
je
jle
out
mov
insb
dec
jae
ret
imul
pusha
mov
jge
adc
pop
jmp
inc
dec
loop
push
loope
test
sub
cli
inc
test
jle
adc
dec
mov
daa
jbe
xor
movntps
enter
fildll
movsl
adcl
leave
loopne
ret
ret
testb
stos
mov
cmpsb
in
lods
mov
dec
ret
les
sti
daa
mov
outsl
xchg
sbb
notl
lds
aad
add
addb
jbe
in
mulb
or
test
aam
jae
sbb
imull
arpl
inc
jb,pt
push
jae
mov
repz
push
add
outsb
les
mov
pop
test
push
loop
add
pop
pop
add
lea
dec
sbb
pushf
js
or
stos
mov
xor
inc
sbb
pop
adc
dec
in
jnp
gs
push
cli
sub
mov
pop
xchg
mov
call
in
mov
xchg
in
sbb
js
xor
mov
pop
pop
adc
pop
xor
cmc
cwtl
enter
insl
dec
int
mov
add
or
pop
lock
mov
inc
mov
sbb
mov
mov
es
sahf
push
fucom
ret
cmc
cmp
fists
scas
lea
mov
icebp
in
xchg
mov
and
ret
adc
xor
inc
pop
pushf
popl
mov
subb
in
jecxz
add
adc
and
aaa
lcall
test
jae
xorb
fdivl
arpl
in
loope
decb
or
cmp
int
stc
in
in
mov
jg
mov
lret
push
xorb
mov
pop
lock
jb
jbe
out
lea
in
imul
or
mov
mov
imull
stos
cmp
ret
aaa
or
add
into
jmp
push
fildll
loope
sub
and
sub
cwtl
inc
sub
jno
or
mov
divl
xor
mov
sarb
outsb
test
mov
ja
inc
into
jl
sub
mov
repnz
inc
mov
call
out
mov
enter
sub
imul
ds
dec
and
pop
jo
or
jecxz
push
sbb
push
test
nop
dec
mov
inc
outsb
int
xchg
cmp
jecxz
sbb
sbb
in
dec
scas
dec
daa
int3
sbb
push
xchg
outsb
movsl
outsb
cmc
scas
xchg
call
xor
jb
aaa
daa
jle
and
aaa
repnz
sti
popa
jns
pop
repz
or
sti
insl
arpl
ficomps
inc
testl
fsubl
xor
scas
les
lahf
cmp
sar
mov
lods
cld
inc
push
pop
jmp
dec
xor
push
mov
jecxz
jae
inc
dec
dec
icebp
movsl
mov
pop
mov
fs
mov
repz
sbb
cmpsl
movsl
inc
and
mov
xchg
test
repnz
movsb
out
call
idivl
fistpl
mov
mov
cmc
lock
mov
inc
in
push
push
push
imul
push
test
cli
in
pop
xchg
or
stos
sbb
pushf
or
cmc
mov
in
roll
cli
imull
lcall
push
xchg
inc
out
and
cmpsb
mov
push
push
aam
outsb
stos
jae
shll
lock
arpl
andl
icebp
clc
addr16
push
push
roll
mov
mov
out
adc
add
mov
test
jns
xor
push
and
in
jnp
addr16
bound
je
cmp
imul
and
call
loope
cmp
xchg
add
scas
or
cmp
xchg
dec
fisubl
outsb
xchg
subl
xchg
pop
mov
and
pop
sbb
or
sub
fdivrl
cs
push
movsb
adc
mov
ds
dec
rcr
mov
add
decb
mov
jns
jecxz
mov
or
mov
in
repnz
imul
scas
push
ljmp
mov
xor
xchg
sub
cld
lea
pusha
roll
ds
in
xor
add
jge
pop
test
mov
mov
dec
xchg
or
and
es
xchg
push
adc
cmp
dec
pop
mov
push
push
daa
mov
je
sahf
not
icebp
pushf
dec
fisttpl
out
mov
arpl
fisubl
loopne
aas
fisubl
aad
sub
cli
sub
into
pop
inc
push
adc
in
sub
stc
sub
dec
jns
push
out
cwtl
pushf
pop
xchg
mov
xor
ret
xor
stos
jo
adc
mov
sub
xchg
out
flds
ret
and
jp
rcll
mov
cld
sub
bound
in
mov
arpl
jle
mov
mov
sub
and
pop
mov
rolb
cmpb
js
dec
sbb
xchg
pop
mov
mov
sub
cmp
popa
ficompl
sbb
add
sub
mov
scas
mov
negb
stos
or
aas
xchg
ss
into
mov
dec
push
add
popf
das
fscale
adcb
inc
insl
push
lcall
mov
and
enter
cmpsl
mov
cmc
xchg
pop
or
pushl
icebp
aas
pop
mov
cmp
jl
mov
enter
sti
and
movl
leave
jae
jns
ss
push
scas
push
jnp
sarb
ficompl
mov
mov
jb
jnp
into
jmp
mov
cld
jb
cmp
pop
int3
imul
insb
rorb
dec
adc
add
lock
inc
filds
sbb
sahf
fs
xchg
clc
mov
lods
addr16
cmp
fbstp
insb
stos
jmp
scas
add
mov
in
xor
cltd
xchg
je
stc
dec
fwait
cmc
sub
pushf
pushf
xchg
lahf
xchg
push
jno
hlt
or
push
mov
sbb
jmp
ds
das
sarb
mov
adc
scas
push
adc
movsb
dec
dec
stos
jp
cmp
int
lcall
fistps
movsb
sbb
sub
push
xchg
pop
xchg
cmp
jno
mov
jb
gs
cld
jle
repnz
mov
jnp
adc
add
daa
das
jge
cmp
pop
test
lret
push
fs
aaa
icebp
rorl
jb
mov
repz
fdivp
add
int3
jns
fcoml
xchg
cmp
xchg
xor
pusha
dec
sbb
or
push
mov
in
mov
aad
outsl
mov
sbb
xor
ret
cmpsb
cmc
or
push
decb
sbb
nop
or
shlb
add
outsl
add
stos
adc
daa
jno
imul
push
cmc
and
pop
adc
inc
les
cld
out
pop
or
jnp
dec
iret
sbb
mov
mov
xor
sub
mov
loopne
mov
movsl
ja
jecxz
push
add
dec
lock
push
and
popa
xchg
or
fs
jne
les
addr16
jbe
insl
sub
mov
mov
push
sahf
cmp
or
or
sub
mov
mov
dec
pop
fidivrs
lcall
cli
cmc
and
and
xor
nop
add
jp
loopne
negl
ret
repz
pusha
push
sub
add
popa
jle
push
popa
test
daa
dec
orb
jno
pop
ret
xorb
daa
adc
jne
cmp
xor
or
int
fists
add
inc
leave
roll
mov
xchg
xchg
and
add
cs
add
add
fs
sbb
int3
sbb
jmp
stc
xchg
mov
in
sub
jge
out
sbbl
pop
xchg
lods
imul
iret
das
xor
mov
xchg
mov
ja
pushf
sub
xchg
incb
test
fadd
in
insb
fcoms
jl
test
xchg
ret
ret
or
dec
rorb
dec
jecxz
stos
jb
xor
movsl
into
sbb
inc
cmp
pop
cmp
les
repz
jb
loop
mov
dec
push
lods
in
in
adc
add
cltd
sub
xor
test
cltd
push
cmpb
nop
filds
aas
stc
jmp
and
and
add
mov
lock
add
decb
jp
mov
sbb
shl
in
push
sub
xchg
jns
xor
sbb
in
adc
jo
lahf
data16
adc
pop
mov
hlt
mov
push
pop
subl
out
cli
das
mov
lods
scas
xchg
inc
mov
ljmp
mov
xchg
jb
movl
popf
inc
jp
or
sub
call
cmp
xor
scas
push
stos
add
cmp
mov
inc
fmull
ret
xor
sub
mov
ret
push
hlt
call
out
sub
push
call
lock
sub
mov
mov
mov
inc
int
mov
and
xor
icebp
jmp
and
pop
mov
lahf
push
popf
mov
les
push
and
es
notb
inc
imul
pushl
inc
push
adc
in
aas
insl
aad
rorl
xorb
adc
xchg
mov
cld
call
dec
cmp
das
into
rcrb
xchg
sub
lahf
mov
xchg
cmpl
cmc
popa
loope
pop
jg
mov
ss
ljmp
cwtl
jl
xchg
addl
rcrb
popa
int
push
cmp
cs
fs
iret
fs
add
dec
andl
xchg
cmc
cwtl
in
rcrb
dec
jbe
out
jg
leave
daa
dec
add
xor
nop
mov
pop
movsb
push
pop
pop
inc
inc
lock
push
outsl
ss
pop
pop
push
lods
das
inc
fstl
sbb
inc
jge
inc
adc
in
sbb
dec
lahf
adc
pop
pop
enter
or
cwtl
sub
les
or
fwait
adc
hlt
adc
mov
nop
repz
jno
mov
in
dec
stc
jne
adc
cmp
aad
xor
and
int3
fwait
insl
mov
fists
xchg
jbe
int3
and
jg
mov
cmp
push
jbe
popa
cmp
push
cmpsb
and
loopne
leave
and
sbb
ret
adc
sbb
jge
loope
pop
ror
inc
adc
pop
sbb
mov
dec
push
imul
push
mov
mov
shrb
add
push
xor
or
repz
lcall
jecxz
pusha
add
fs
bound
pop
push
xchg
ret
sub
adc
in
push
out
mov
cmp
leave
test
in
add
jmp
out
inc
add
inc
jecxz
fisttps
mov
int3
dec
add
inc
cmp
js
add
xchg
or
mov
jae
sub
stc
sbb
cmovno
clc
stc
roll
scas
test
mov
shlb
sub
add
call
xchg
and
fisttps
rcll
push
jg
sbb
es
ss
popa
inc
mov
inc
loop
jne
dec
mov
int3
mov
xor
in
cld
pop
and
out
aam
sub
aas
mov
pop
mov
mov
mov
or
pusha
in
in
dec
jb
adc
es
or
dec
jb
pop
stos
mov
popa
gs
stos
movsl
outsl
lea
lret
xor
add
cmpsl
lahf
cs
pop
stos
push
dec
mov
mov
fsubl
test
add
cmpb
ds
fnsave
xor
std
les
add
cmc
jecxz
ljmp
sub
mov
cltd
push
dec
aaa
nop
pop
cmpsb
inc
out
in
popa
xchg
mov
pop
inc
cmp
insb
adc
pop
mov
incb
nop
xchg
or
or
lds
test
int3
adc
ljmp
fstpt
loop
out
jge
mov
dec
pop
sbb
add
jmp
test
push
inc
adc
std
dec
pop
js
mov
pop
jo
push
aam
mov
mov
rcrl
outsb
cld
adc
stc
inc
fisubrl
dec
pop
cmp
add
imul
cmp
pop
das
adc
in
enter
testb
and
xchg
xchg
pop
insl
push
mov
sahf
push
jle
pop
cs
cld
inc
push
jo
xor
cli
mov
pop
loop
movl
clc
mov
mov
xchg
adc
out
mov
push
subl
out
ret
notb
inc
push
xchg
jae
dec
stos
stos
gs
bound
mov
incl
pop
and
or
loop,pn
aas
aam
dec
mov
jno
add
imul
push
jno
mov
mov
xor
out
mov
adc
lret
aas
ljmp
or
hlt
and
dec
push
adc
aad
xchg
sbb
fbstp
ds
and
jl
add
cltd
insb
icebp
aaa
scas
xchg
mov
vdivsd
mov
adc
daa
aas
cld
sub
fstpt
mov
pop
mov
jp
sbb
jb
arpl
aas
xchg
adc
popf
push
pop
je
call
cs
leave
or
and
xor
fs
inc
call
fabs
pushf
jmp
add
js
mov
mov
xor
xchg
mov
int
fstpt
insb
mov
ret
imul
vucomisd
aas
shrl
sub
jg
push
mov
js
push
lret
lds
mov
dec
es
add
push
dec
enter
xor
addr16
nop
xlat
fdivrs
fcoml
cmp
repz
adc
clc
lods
cmpsl
andb
cmp
movsb
sub
and
stos
shl
outsl
xor
jo
and
ss
fcomip
test
mov
mov
sti
push
pop
je
test
xchg
sarb
mov
fcoms
jle
scas
push
lret
adc
xor
mov
xchg
mov
gs
cld
jle
fs
xor
pop
fistpl
push
fwait
cld
in
pusha
cmp
rcrl
xchg
loope
pop
adc
cmp
pop
icebp
rorl
ret
pusha
iret
lock
lret
negl
pop
mov
mov
dec
cmp
cmp
fstps
jge
or
imul
mov
je
jge
pop
in
je
out
lods
loope
mov
mov
adc
inc
fists
loopne
push
sub
push
gs
mov
xchg
xchg
insb
push
cmpsb
xchg
dec
inc
dec
subl
inc
push
lods
rolb
jmp
sub
stos
pop
dec
mov
loop
lret
pusha
mov
cld
sub
push
pushf
xor
xlat
mov
call
mov
push
popa
leave
pop
mov
mov
shrb
in
pop
pop
mov
lods
xor
mov
aaa
int3
adc
les
iret
pop
aad
mov
imul
es
rcll
out
dec
xlat
in
out
pop
fwait
mov
icebp
add
icebp
pop
and
sahf
adc
or
add
jp
jnp
in
out
in
fs
add
jbe
pop
xor
fsubrs
rorb
test
mov
aaa
pop
in
cs
or
leave
imul
inc
dec
aas
pop
scas
lods
xor
adc
stos
or
inc
nop
jne
dec
sti
mov
outsl
mov
pop
imul
clc
fstp
leave
ret
pop
popa
insl
mov
pop
mov
mov
mov
xchg
sbb
out
mov
test
in
call
sbb
mov
push
sbbb
ror
pushf
and
push
pop
mov
and
sbb
int
and
test
jb
or
jb
push
xchg
ja
sub
mov
jb
dec
add
add
int3
pop
pop
dec
in
adc
hlt
in
adc
xlat
out
cmp
adc
mov
ljmp
mov
mov
inc
repz
xchg
xchg
mov
loop
mov
or
cmp
and
push
mov
mov
mov
pop
je
jo
roll
scas
mov
loopne
sbb
sarb
sbb
test
add
pop
add
mov
js
xchg
cmp
fcmovnu
jmp
and
testb
push
cmp
lods
push
in
sub
pop
and
fimuls
jge
xor
lret
andb
push
repnz
fcomps
or
imul
add
xor
andl
or
scas
sub
push
mov
adc
sahf
in
push
ret
aad
sub
dec
popa
int3
xor
push
jno
sbb
test
movsl
addl
adc
adcl
fs
std
pop
stc
jns
mov
push
push
cld
ret
ss
into
addb
dec
stos
insl
jae
test
in
repnz
shll
fisubs
cmc
xchg
push
jae
jecxz
jp
or
jbe
mov
jl
pop
cli
dec
inc
cli
fisubrl
inc
cmp
dec
es
push
and
sti
pop
outsb
or
jbe
dec
scas
sub
stos
mov
cmp
push
mov
mov
lahf
ja
mov
adc
mov
test
test
fstps
xchg
repz
ret
arpl
push
popf
bound
and
arpl
mov
push
pop
fstl
push
sub
mov
sbb
mov
push
pushf
jne
cmp
mov
cli
push
dec
sub
in
pop
test
push
pop
or
ss
mov
lcall
fldcw
test
pop
outsl
fadd
icebp
jae
nop
sbb
jecxz
mov
xchg
adc
jo
int3
xchg
pop
add
cmp
dec
add
cmc
out
loope
mov
test
pop
jge
scas
mov
sbb
mov
sti
addb
inc
stos
ja
jmp
cmc
daa
ret
sti
adc
or
fdivp
add
xor
fstpt
in
js
dec
cmp
jne
xor
pop
mov
inc
pop
sub
js
pop
cmp
jle
mov
lret
sbb
lcall
out
test
popa
aad
lret
pop
dec
xor
mov
pop
lock
aam
sbb
stos
fwait
test
jecxz
add
pop
mov
das
stos
or
das
cmp
cld
imul
pop
add
mov
dec
in
dec
hlt
pushl
mov
je
xlat
xor
push
add
sub
js
add
imul
fwait
or
popl
rcl
push
stos
sahf
pop
icebp
or
into
inc
icebp
xchg
mov
or
sbb
pop
sbb
dec
cs
or
inc
mov
shrl
or
insl
or
fwait
mov
mov
and
jnp
mov
push
je
push
lret
inc
popf
ljmp
test
ljmp
lahf
cltd
aam
ret
lret
mov
and
hlt
lea
ret
sbb
or
xchg
push
push
xor
mov
les
mov
arpl
dec
or
xor
cmpsl
xor
ss
bound
lock
mov
pop
mov
andl
sbb
or
dec
out
add
stos
push
sub
fisubs
xchg
lret
sub
jge
int
daa
mov
jl
cmpsb
mov
jno
push
or
scas
sti
fwait
sub
nop
scas
es
mov
sub
sub
push
ret
push
xchg
or
xor
in
push
inc
push
push
cmp
jns
fdivrl
xchg
fiadds
cmc
inc
imul
pop
mov
out
test
jmp
mov
xchg
xor
in
loope
arpl
inc
adc
arpl
into
mov
hlt
jb
jmp
push
daa
movsl
es
movsl
shlb
rorb
xlat
in
mov
pop
loop
push
ret
xchg
add
addr16
shrl
bound
mov
pop
les
jno
movsb
fs
ret
inc
cli
add
xchg
fwait
shr
xchg
push
or
add
mov
inc
je
mov
xor
sar
lods
cmpsb
lock
fdivr
clc
lds
jns
adc
cmc
je
xchg
sub
push
mov
rcl
ja
mov
inc
clc
data16
mov
repnz
xchg
sbb
mov
insl
push
and
scas
add
xor
push
fwait
movsl
pop
lds
push
xor
add
sbb
adc
lods
jne
outsb
dec
mov
rcl
add
dec
sahf
inc
add
fisubrl
stos
arpl
push
ret
jnp
mov
sbbl
imul
int
daa
lea
jno
test
fisttpl
mov
dec
sbb
add
sub
cmp
dec
call
jge
cmp
inc
push
hlt
ret
xchg
pushf
and
imull
gs
pop
push
mov
lods
mov
sbb
cli
mov
inc
ret
mov
mov
call
push
jb
or
push
xchg
fwait
rorl
lock
pop
inc
xchg
cmpl
movsl
jo
adc
mov
xchg
cmp
inc
mov
loop
mov
fistpll
out
adc
jo
mov
loope
xlat
add
mov
mov
cmp
fistl
js
enter
push
mov
mov
dec
and
mov
mov
push
mov
cwtl
outsl
mov
sbb
jne,pt
sub
pop
lock
pop
add
push
scas
sbb
mov
cld
ja
ret
mov
mov
jp
stc
xor
addr16
daa
lret
loopne
repnz
clc
arpl
sbb
or
mov
push
sub
add
fdivrs
xchg
incb
test
push
in
scas
add
aas
in
dec
in
jae
dec
or
scas
repz
sahf
push
xlat
mov
or
xorb
inc
int3
jns
push
test
ja
scas
sbb
addl
sbb
sarb
jns
jmp
mov
bound
dec
out
xchg
adc
jge
jp
subl
aam
fmuls
cmp
inc
mov
adc
inc
push
fcomps
cmc
mov
fstpl
fists
push
jb
push
cmp
mov
dec
xchg
out
inc
sub
lds
loop
jp
cmp
dec
inc
mov
push
scas
outsl
mov
int
cmp
jnp
inc
fstpl
jle
mov
loopne
push
xchg
mov
mov
lock
aam
and
outsb
enter
fidivs
rcll
and
push
in
add
mov
out
nop
pop
popa
jbe
shrl
mov
sbb
jo
mov
icebp
mov
ss
lret
outsl
stos
or
popf
call
lret
test
fildll
repnz
fs
pop
and
fldcw
test
call
pop
and
mov
cli
cmp
lods
jbe
and
or
loope
mov
rorl
shlb
xlat
stc
clc
mov
mov
pop
das
and
xor
cld
bound
fldenv
fimull
jnp
int
xchg
mov
cmp
out
aaa
sbb
sti
push
sti
jle
test
loope
insb
js
add
pop
fwait
jl
or
into
xchg
daa
dec
pop
adc
push
js
mov
popa
popa
fiadds
sub
jne
lds
add
mov
subb
int3
dec
pusha
iret
sbb
pop
jo,pt
mov
add
addr16
data16
push
inc
out
pop
add
cmc
dec
stos
xchg
xchg
mov
adc
mov
adc
mov
lock
fdivs
lods
lds
lea
mov
rolb
xchg
push
or
push
test
fcmovnu
je
test
pop
scas
loop
mov
ror
mov
jl
sub
das
jae
mov
jl
adc
out
inc
loop
out
pop
pop
push
orb
mov
cmc
pushf
pop
testb
xchg
cmp
push
xor
out
cmp
in
lods
inc
sarb
leave
mov
hlt
ret
movsb
xchg
pop
ret
pop
mov
sbb
jns
mov
js
andb
cmp
scas
adc
ja
clc
ss
lods
cmp
dec
adc
out
xchg
std
and
xchg
pcmpgtb
push
rcr
arpl
and
lea
stos
ljmp
jbe
and
and
pop
xor
xchg
adc
out
and
push
push
popf
dec
xor
daa
cmp
and
bound
xor
movsb
pop
hlt
sub
adc
popa
xchg
popf
ljmp
data16
les
mov
rclb
xor
cmp
xchg
cmpsb
adc
mov
clc
sub
js
push
repz
outsb
lcall
nop
mov
mov
push
cmc
shlb
subb
add
sbb
mov
sti
xor
jne
test
in
push
bound
inc
js
mov
leave
insl
lea
mov
inc
or
daa
arpl
lret
inc
mov
out
pop
push
pop
or
sahf
aas
mov
inc
clc
shlb
xchg
inc
push
jnp
cmpsl
notb
inc
mov
js
das
sub
dec
mov
cmp
sbb
cmp
popf
sahf
lock
outsl
xchg
adc
adc
dec
adc
pop
adc
sbb
and
adc
fwait
cwtl
xchg
insl
cmp
scas
rcl
ljmp
xor
minps
loopne
aas
je
pop
loope
dec
xor
and
ja
outsb
mov
int3
insb
rorl
adc
lcall
add
jecxz
test
or
add
ds
popf
adc
es
and
imul
or
xor
fsts
iret
lods
repnz
fistpl
stos
add
in
push
dec
je
mov
call
and
xor
das
sub
add
mov
adc
xchg
or
jnp
add
adc
sbb
in
fbstp
and
add
dec
leave
insl
in
fistps
outsl
out
dec
or
mov
int
pop
sahf
es
jmp
int
movsb
dec
push
push
xchg
ret
frstor
and
inc
es
sbb
outsl
adc
push
xchg
ljmp
adc
pop
scas
jo
repnz
adc
cmp
cli
lret
pop
rorl
push
ljmp
cmc
jg
jecxz
cmp
pop
inc
xor
loope
mov
aam
dec
jp
shrb
add
xor
jns
sbb
in
shlb
test
inc
xor
adc
xor
inc
sub
mov
pop
mov
shlb
mov
sbb
cmp
mov
shlb
int
dec
push
mov
jbe
aas
push
test
outsb
adc
add
daa
dec
imul
test
mov
daa
roll
out
or
pop
jmp
std
and
cmp
mov
in
dec
ljmp
pop
pop
add
loope
rolb
xchg
sbb
mov
outsb
push
adc
hlt
sarl
fdivp
and
movsl
fstenv
xor
lods
fistpll
aas
arpl
add
add
mov
outsl
sti
push
xchg
mov
or
je
push
out
push
pop
call
mov
and
sbb
pop
fsubrl
test
hlt
cmpsl
mov
xor
leave
fdivrs
mov
icebp
lret
int
je
and
jb
xchg
cmc
mov
scas
sbbb
xor
xlat
in
pop
jmp
fwait
adc
ret
daa
inc
cmp
dec
inc
loop
sbb
and
xchg
loop
cmp
xchg
mov
xor
pop
clc
sub
mov
jno
push
pop
filds
cmp
sbb
ret
xchg
into
enter
loope
xor
push
mov
sub
mov
cwtl
fwait
cmp
xchg
and
pop
lret
sbb
inc
stc
fldln2
mov
icebp
leave
pop
add
lahf
lock
mov
sub
mov
mov
pop
jo
scas
dec
push
xchg
mov
sub
loopne
loope
jno
add
mov
nop
iret
mov
cld
outsl
push
movsl
pop
sub
mov
into
inc
xchg
mov
pushf
rcrl
and
jp
add
lock
dec
or
or
sbb
outsl
cmpsb
jle
outsl
mov
sub
ret
nop
ss
call
movsl
and
lcall
ret
jnp
push
ret
add
fdivrs
aad
xor
mov
pop
cmp
add
int3
fwait
and
cmp
pusha
loope
inc
popf
inc
pop
fsubrs
xor
sub
jmp
loope
adc
xchg
mov
cmpsl
lcall
gs
mov
or
imul
dec
loope
mov
cltd
push
mov
aas
xchg
mov
sahf
jae
push
xchg
mov
push
dec
pop
fbld
into
jne
lock
xchg
mov
pushl
xchg
inc
and
js
cmp
lods
arpl
sbb
aas
cmp
ret
push
hlt
cmp
pop
dec
ret
insb
mov
pop
inc
xchg
test
push
stc
jle
inc
jne
out
loop
cmc
mov
jno
loope
pop
roll
push
js
addb
out
add
cmp
xchg
popf
inc
xchg
outsl
add
cli
data16
ljmp
aam
ficompl
push
imul
fnsave
fsubrs
cmp
push
xor
test
ja,pn
mov
les
xchg
mov
pop
test
mov
pusha
xchg
dec
cli
ss
lods
repnz
in
lds
stc
adc
gs
push
and
je
cltd
mov
gs
in
adc
dec
addr16
push
addb
std
ret
adc
and
inc
movsl
cld
jge
xlat
cmp
dec
push
pop
or
push
call
sub
pop
fnstsw
lret
xlat
mov
roll
mov
loopne
or
jecxz
xchg
adc
or
in
hlt
mov
jmp
dec
jle
xchg
xor
in
rorb
cmpsb
cmp
cmp
inc
jmp
push
add
imul
xchg
cltd
ret
fwait
xchg
adc
mov
out
subl
or
jae
sti
mov
enter
or
add
jb
cltd
xor
test
jae
mov
cmp
sub
add
pop
mov
movsl
repnz
lods
cmp
jb
sbb
mov
cwtl
sub
pop
cwtl
les
mov
mov
enter
aas
adc
and
sti
add
std
mov
setnp
fsincos
and
sub
out
sbb
add
xorl
dec
dec
mov
aad
fbld
push
stos
cltd
and
jmp
add
xchg
push
mov
sbb
cmp
fmull
cld
sti
dec
push
enter
dec
pop
pop
xor
push
push
sbb
adc
xor
fldt
push
xlat
xlat
dec
ror
pop
jns
mov
mov
cmp
cmc
add
jno
ljmp
push
xchg
lods
ds
mov
test
fs
lret
mov
orb
adc
adc
mov
xor
xchg
or
call
push
testb
xor
ret
dec
sub
mov
mov
cli
add
sub
inc
mov
inc
aam
cmpsb
mov
shl
data16
cmp
mov
mov
xor
loopne
jge
test
xor
fs
mov
bound
data16
loop
popa
arpl
jge
jl
xor
xor
movsb
lds
or
pop
mov
jb
imull
dec
dec
jg
mov
jnp
cs
filds
shll
ljmp
xchg
sti
mov
data16
in
dec
sti
pop
add
jno
adc
dec
decb
stos
test
cmp
loopne
add
mov
xchg
mov
enter
sar
insb
adc
adc
pop
sub
push
cmpsb
int3
pop
ljmp
inc
cmp
and
mov
fsubr
lock
push
mov
imul
jo
outsl
jecxz
fwait
testl
jmp
pop
arpl
pop
and
pop
add
cmp
imull
mov
sbb
xchg
push
push
std
jecxz
jo
pop
dec
adc
jmp
xor
jmp
xor
cli
lahf
mov
les
cmp
pop
dec
into
adc
jns
push
in
xchg
push
cs
mov
push
sbb
add
shrb
imul
jno
pop
mov
movsl
or
push
mov
xchg
das
dec
pop
adc
repz
repnz
and
out
lea
dec
stos
repnz
adc
fdiv
into
push
popa
and
jns
aaa
pop
jno
test
cli
xchg
push
orb
cmp
pushf
mov
or
sub
imul
or
sub
inc
in
or
xchg
dec
and
adc
out
sub
push
lret
adc
push
les
lods
cmpl
push
popf
add
lret
jno
rcll
mov
sbb
push
out
in
call
testl
sbb
pop
jno
push
cmp
inc
cmc
mov
into
shr
adc
jo
lcall
es
dec
movsb
adc
xor
cmp
das
and
add
add
lret
mov
jecxz
or
imul
or
ret
addl
adc
adc
mov
push
fldl
orl
stc
clc
outsl
daa
das
sub
in
mov
test
aas
sub
mov
jne
rol
pop
add
pop
ret
jmp
test
inc
or
clc
sub
in
mov
call
sarb
xor
adc
pop
out
or
scas
mov
and
psrld
jbe
fucomip
sbb
mov
xor
test
inc
pop
nop
inc
jmp
xchg
ja
add
outsb
cmp
or
punpcklbw
push
test
loope
xor
cmp
adc
das
mov
xor
sbb
mov
mov
dec
data16
icebp
jp
cmpsl
xchg
jbe
lcall
arpl
cmp
out
adc
fisttpl
sbb
fimull
ds
les
ror
je,pt
jnp
add
aad
cltd
je
int
outsl
inc
in
pop
push
sub
sbb
sub
mov
pusha
inc
test
dec
xor
cmp
lock
cwtl
fwait
cmp
scas
inc
push
adc
xor
scas
out
clc
inc
and
iret
sbb
pop
xchg
pusha
xchg
cmp
bound
xlat
sub
flds
mov
int3
aam
mov
inc
jle
int3
push
mov
lock
cli
xchg
lahf
push
notl
sub
mov
dec
arpl
icebp
or
pushl
ds
bound
ret
push
mov
xlat
cmp
mov
xchg
cmpsb
or
mov
sbb
lcall
mov
xor
insl
roll
leave
hlt
outsl
movsl
push
aam
or
dec
cld
je
jle
mov
xor
push
lock
loopne
mov
push
repnz
jl
ja
rolb
xchg
or
lock
test
or
push
jno
and
fldenv
imul
scas
push
sbb
xor
iret
aad
icebp
leave
das
jl
fst
int3
xchg
mov
xor
sub
cmp
jne
adc
test
jmp
in
int
cmp
out
pushf
out
xchg
repz
xchg
cmovg
outsl
adc
mov
pop
test
mov
push
xor
cmp
in
iret
movsl
jb
sbb
push
stos
xchg
mov
divb
les
insb
inc
sbb
mov
stc
cmp
mov
mov
xchg
divb
push
adcb
in
leave
mov
or
sub
push
in
test
mov
bound
xor
inc
insl
test
adc
mov
cmp
jg
sub
lea
mov
mov
aam
out
mov
jne
dec
jae
popl
dec
mov
jno
pop
cltd
adcb
rolb
or
pop
cs
add
pop
mov
gs
xor
mov
xor
add
xchg
imul
jo
sbb
fsubs
insb
or
push
loope
icebp
les
push
arpl
and
push
in
lock
xchg
jno
add
ds
adc
test
mov
arpl
add
cltd
repnz
or
lods
cmp
adc
enter
xchg
cmp
pop
cmpsl
mov
sbb
pusha
ss
pop
lahf
sbb
push
mov
lret
stos
cmc
jecxz
bound
pop
push
stos
int
adc
push
jmp
mov
adc
push
out
jae
mov
and
mov
es
movsl
jge
inc
pusha
aas
cmpb
test
xchg
xchg
jo
lods
cmp
mov
cmp
ficoml
movsl
sbb
dec
sbb
sbb
push
stos
add
xchg
sar
add
ljmp
loopne
pop
adc
ljmp
xchg
rclb
jns
dec
pop
fisubs
cmp
add
fstpt
popf
add
jbe
xchg
test
ror
jmp
cmp
cmp
std
rclb
lods
jecxz
nop
shl
in
inc
not
pop
mov
hlt
shl
ljmp
sbb
sbb
movsl
sub
es
or
clc
or
jae
fcompl
stos
insb
mov
ret
hlt
jl
lea
loopne
cld
movl
outsb
cltd
sub
fdivrp
lret
mov
jle
pushf
repz
pop
mov
in
sysenter
or
sbb
popf
adc
add
fwait
out
fldenv
out
mov
cmpsb
dec
and
xchg
jae
stos
in
arpl
rolb
fcoms
ja
inc
adc
cmp
cmpsb
sub
dec
out
jle
pop
scas
shll
cmp
jnp
pop
cmp
pop
or
jae
inc
add
dec
and
jle
push
into
mov
and
std
outsl
nop
sar
mov
ja
subb
mov
sub
xchg
movsb
in
loope
pop
jl
jecxz
cmc
nop
dec
clc
lret
and
xchg
sbb
pop
mov
jns
negl
or
fwait
sbb
lods
cmpsl
jne
jecxz
test
push
imul
lret
sbb
lcall
sbb
psubw
mov
movsb
adcl
mov
mulb
cmpl
pop
mov
and
int
out
ss
jnp
mov
dec
es
sub
dec
out
arpl
shrb
mov
rcrl
sub
in
push
mov
lahf
std
cs
cli
sub
mull
aas
bound
and
dec
imul
out
je
test
cmp
xor
gs
in
int
sub
shlb
lods
xchg
push
push
sbb
cs
mov
scas
clc
mov
and
cwtl
movsb
cwtl
and
sub
cmp
xor
jmp
outsb
mov
pusha
stc
xchg
cmp
popf
cltd
lcall
fstl
push
mov
das
cmp
sahf
daa
inc
int
imul
stc
adc
fistl
dec
mov
pop
fimull
lods
push
xor
push
int3
mov
adc
mov
cmpsl
cmp
sti
shrb
into
push
push
pop
movsb
pop
jecxz
sbb
repz
out
mov
xchg
and
dec
dec
movsl
xor
adc
inc
mov
insb
inc
gs
es
jmp
fists
fisubl
push
jge
popf
dec
jb
aas
pop
shrl
or
jg
sbb
push
fldcw
in
adc
inc
push
cmp
popa
icebp
xor
fwait
cltd
int3
call
cld
mov
push
and
inc
inc
push
hlt
mov
xor
daa
sbb
hlt
imul
movsl
fwait
and
xor
jg
mov
sbb
jp
mov
call
cmc
shlb
loope
mov
sub
enter
lock
rcll
test
adc
xor
fcmovne
out
push
ja
aad
jg
mov
jmp
xchg
je
out
and
in
lock
xor
loope
sbb
mov
nop
mov
icebp
push
mov
pop
xchg
cmc
cmp
mov
sahf
jb
test
mov
int3
cwtl
adc
gs
mov
movsl
outsb
jo
movsl
imul
inc
push
dec
in
push
or
mov
and
push
lret
jge
cli
loop
dec
shll
adc
mov
test
rcrl
mov
push
test
pop
inc
jno
push
mov
cmp
sub
incl
out
cmpsb
por
lret
mov
subl
xchg
mov
mov
xor
push
mov
mov
or
push
mov
mov
push
xor
xor
and
sbb
dec
dec
adc
pop
loope
mov
xchg
je
mov
pop
push
xchg
lahf
push
int3
mov
hlt
sbb
lds
sub
out
push
adc
cwtl
sahf
push
add
negl
cwtl
and
inc
roll
lock
sahf
or
inc
xchg
js
or
dec
dec
insl
push
mov
jns
mov
xor
sbb
dec
cwtl
lock
cmpsl
mov
inc
adc
push
imul
add
insl
and
mov
xor
rcl
rol
cmpb
test
mov
or
lock
inc
cmpsl
lcall
inc
jecxz
push
xor
jo
xor
or
mov
cwtl
cmp
xor
jl
dec
adc
ljmp
sbb
pop
sarl
xchg
dec
push
shll
daa
in
insl
add
adc
ret
adc
lods
fistpl
xor
xchg
push
nop
js
xchg
scas
orb
imull
hlt
xchg
and
jge
aam
mov
inc
adc
jae
ret
sahf
xor
push
pop
dec
sbb
mov
aas
stos
mov
adc
pop
dec
int
sbb
xchg
pop
sahf
mov
cmp
xlat
out
xor
addr16
pop
into
jp
or
or
sbbl
sub
mov
les
pop
mov
cmp
xor
or
loope
push
mov
jno
je
sahf
sub
fcmovb
mov
sub
inc
xor
fisttpl
cmp
mov
push
pcmpeqd
fildl
pop
sub
cmp
repz
push
mov
loopne
adc
pop
out
addr16
mov
mov
inc
pop
aam
mulb
into
xchg
adc
xor
cmp
xchg
out
testb
fcompl
pop
cld
test
cld
into
xchg
jp
sbb
inc
inc
daa
xchg
mov
or
insb
icebp
leave
jl
xchg
mov
movsl
mov
push
or
mov
test
add
enter
aad
mov
sbb
xchg
das
dec
loopne
cwtl
inc
mov
xchg
sub
push
jbe
dec
pop
jmp
sahf
bound
test
loop
inc
cmp
pusha
icebp
aam
xorl
inc
mov
fimull
inc
mov
sub
and
pop
or
push
fstpt
xor
dec
and
or
insl
aas
lea
pop
jo
in
and
dec
xchg
je
mov
imul
xchg
mov
pop
pop
addl
sbb
mov
cltd
into
dec
pop
inc
call
sbb
xchg
cmp
jge
mov
xchg
pop
sbb
adc
loop
and
jmp
push
ror
xchg
fnstsw
push
mov
outsl
dec
adc
or
cs
adc
mov
loopne
scas
pop
jb
stos
add
or
lods
mov
cmp
lock
or
inc
xchg
iret
sbb
mov
inc
push
mov
jecxz
int3
repz
push
daa
cli
in
add
cltd
hlt
adc
or
fsubl
mov
int
mov
imul
imul
repz
cmp
cmp
jecxz
je
mov
pop
ss
jmp
mov
push
icebp
sub
popf
cld
ja
jmp
arpl
ss
rclb
clc
scas
andl
jg
out
pushf
mov
insb
roll
cmp
inc
je
sbb
mov
into
orb
lods
lods
jecxz
jbe
jb
push
scas
aas
push
inc
int3
inc
pushf
push
sbbb
adc
mov
cmp
call
lock
bound
stc
pop
inc
test
mov
add
imul
outsl
popf
dec
or
xchg
sub
xchg
enter
cmp
mov
cld
jp
push
or
mov
xchg
pop
into
in
sbb
dec
jo
mov
pop
mov
jae
jge
jg
aaa
inc
std
cmp
in
lds
cmpsl
mov
cmpsl
xchg
sbb
dec
mov
and
sbb
ja
lock
cmc
pop
push
shlb
adc
sbb
jl
jnp
pop
in
push
dec
cmp
push
aas
and
scas
ds
push
fcomps
or
cmp
or
sarl
cltd
scas
fadds
adc
or
push
es
add
aad
fistl
xchg
mov
jle
mov
or
pop
in
cmp
adc
hlt
adc
aam
cs
ja
repz
inc
and
in
cmp
negl
jno
rcrb
xor
pop
aam
jns
mov
push
cmp
mov
stos
adc
shr
fwait
jae
jne
or
or
xor
stc
cs
popa
insl
ja
xchg
insl
mov
mov
test
pop
ljmp
xchg
mov
mov
jo
mov
adc
scas
aam
push
test
test
add
cmp
pop
sub
xor
xor
mov
pop
cld
jge
popa
mov
inc
xor
inc
cmpsb
pop
mov
adc
rorl
sbb
mov
push
mov
stos
xchg
push
xlat
sbb
lret
aaa
in
jecxz
outsb
pop
arpl
push
push
inc
dec
cmp
popa
cmovae
shl
mov
in
xchg
int3
lahf
mov
adc
in
inc
icebp
adc
mov
jae
fbld
cmc
push
cmc
in
ljmp
cmpsl
sbb
xor
push
fdivp
jmp
in
sub
add
clc
fcmovne
cwtl
jae
xor
adc
imul
popf
ret
mov
ds
ret
cs
fs
dec
inc
lcall
xchg
loopne
arpl
xchg
mov
mov
cmpsb
jmp
clc
out
inc
jb
and
sbb
jmp
cli
xchg
pop
add
inc
mov
cmpsl
cmp
pop
xchg
or
out
notb
inc
fnstenv
addr16
fbld
arpl
data16
xor
pusha
jae
ja
shl
mov
rcl
enter
pop
fiaddl
push
pop
push
mov
inc
les
xor
icebp
sub
fisttpl
imul
test
push
inc
andb
mov
cmp
or
cld
leave
js
xchg
adc
test
jle
sbb
leave
xchg
test
adc
imul
rorb
icebp
mov
daa
cs
sub
jne
cmp
push
ja
pop
push
insb
stos
cmp
cli
pop
repz
and
fmull
jge
fnstcw
pop
je
push
push
fidivrs
jb
mov
cmp
cmp
push
add
fisubs
xor
mov
pop
test
mov
lods
lds
mov
mov
or
lret
adc
rclb
xchg
pop
xrelease
fldl
inc
sub
push
push
or
xchg
movsl
sbb
sub
sbb
lea
imul
jle
cs
dec
push
lcall
mov
sub
repz
loop
aas
mov
fistpll
jp
scas
outsl
adc
into
out
ss
sbb
fwait
mov
push
mov
cmp
imul
jns
cmp
in
and
mov
sbb
insb
mov
xchg
jns
jnp
mov
jbe
mov
enter
lods
pusha
test
mov
bound
mov
nop
adc
and
push
daa
sahf
dec
pop
lods
add
daa
imul
xchg
push
xor
mov
icebp
nop
inc
pop
sbb
les
dec
mov
bound
jno
icebp
jnp
aam
sbb
sbb
inc
jp
ret
or
test
push
enter
fwait
movsl
dec
push
xchg
sub
jecxz
psubb
call
in
int
inc
mov
repz
insl
in
pop
enter
mov
jo
mov
test
xor
popa
repz
int
int
jecxz
jb
hlt
ss
movsb
cs
mov
mov
imul
lcall
and
sbb
mov
jecxz
scas
lahf
sub
adc
mov
jmp
adc
xchg
mov
mov
mov
aam
or
xchg
sahf
idivl
inc
stos
repnz
and
sti
xor
adc
xor
lret
push
cli
sub
fisubs
pop
setp
imul
test
loope
ljmp
rclb
ret
das
mov
inc
out
mov
push
scas
aad
jo
push
and
gs
aad
movsb
cli
test
test
test
fstp
sbb
mov
enter
add
ret
sub
das
push
dec
mov
sbb
movsb
mov
push
jl
xor
jbe
push
in
dec
lock
cmp
add
repnz
outsl
jb
push
or
mov
or
loop
std
sti
dec
xchg
xor
je
in
leave
movsl
je
in
ficoml
push
stos
xchg
rcll
lcall
fldenv
aas
shlb
xor
lds
inc
mov
add
lret
mov
jbe
daa
jb
or
sbb
mov
std
pop
sahf
lock
fbstp
movsl
clc
pusha
fists
dec
pop
push
and
push
mov
sub
shlb
paddq
add
imul
insl
jle
imul
mov
inc
mov
cmc
jl
pop
outsb
int3
notl
iret
int
add
add
mov
outsl
mov
xchg
iret
fdivp
push
sub
int3
call
arpl
jl
ud2
pop
imul
outsb
pop
loop
or
adc
ret
pusha
xlat
jmp
xor
xchg
dec
lock
popa
jmp
xor
cmp
lret
mov
lods
in
sbb
out
push
dec
fwait
dec
add
fbld
xchg
xchg
test
dec
inc
int
add
jae
dec
inc
out
sub
or
jp
subl
jp
xor
mov
inc
lahf
jmp
jp
jae
jbe
lods
jmp
clc
hlt
stos
push
cmp
pop
lret
jmp
dec
pop
lahf
das
stos
sbb
nop
xchg
lahf
loop
cwtl
leave
mov
cli
pop
mov
testl
sub
inc
cmp
out
xor
push
fwait
xor
and
idivb
push
scas
fadds
jmp
mov
pusha
cmp
cmpsb
or
imul
mov
adcl
int3
sbb
xor
pop
lds
push
pop
dec
int3
push
jns
daa
aas
iret
add
cltd
fwait
pop
xchg
iret
ja
xor
inc
jbe
xchg
jge
xor
mov
sbb
mov
add
pop
jns
popf
loopne
add
cmc
jecxz
jp
subl
lea
cmc
cmp
scas
bound
and
xchg
outsl
or
sbb
mov
dec
jmp
cmp
pop
shlb
pop
jbe
pop
push
inc
xchg
nop
sbb
ret
jl
lds
fcoml
adc
or
jbe
jp
jge
push
sub
dec
sbb
inc
lret
stc
lahf
addr16
lcall
pushf
sbb
or
push
jne
sub
pushf
add
loopne
daa
xor
movsb
add
std
jne
cmp
inc
push
cwtl
ljmp
adc
jl
outsl
adc
add
sub
or
pop
lcall
idivl
lods
enter
mov
xchg
clc
jp
scas
in
sub
fs
inc
xchg
and
mov
jmp
test
and
add
sahf
mov
push
xchg
daa
stos
adc
adc
repz
or
push
repz
add
dec
push
int
sti
movsl
ja
mov
mov
xchg
cltd
fs
fcomps
imul
mov
gs
adc
adcb
std
leave
xor
cli
dec
jo
subl
push
cwtl
cmpsl
xor
jbe
or
out
pop
ss
dec
pop
test
adc
pop
repnz
adc
das
iret
je
inc
push
pop
xchg
incb
push
mull
pop
pop
mov
jle
ret
in
arpl
inc
lret
xchg
xchg
inc
push
arpl
pop
cs
cmp
das
adc
popl
les
jbe
cwtl
test
mov
cltd
into
cld
movsb
mov
jp
pop
pop
add
sub
xchg
adc
gs
mov
in
gs
sub
dec
adc
test
inc
dec
pop
out
add
jmp
push
js
and
pop
fwait
dec
dec
in
arpl
mov
xchg
dec
mov
dec
and
into
insb
fidivrs
jle
sbb
jns
pop
sub
push
pop
negb
add
push
mov
in
mov
ja
add
lret
inc
cli
lds
cli
fwait
jp
scas
and
popf
lcall
ret
mov
lods
andb
shll
lods
ret
cmc
jns
cmp
pop
pop
mov
xchg
sub
enter
mov
mov
and
in
lahf
ret
mov
push
int
int3
enter
pop
cli
fdivrl
sbb
push
in
dec
pop
cwtl
stc
out
js
xor
sub
js
sub
stos
dec
jmp
inc
fistpl
fwait
popf
and
enter
aas
pop
mov
inc
dec
scas
lahf
push
cli
mov
je
mov
lahf
clc
cli
or
inc
add
pushf
mov
push
out
arpl
shlb
fcoms
lret
jmp
sbbl
pop
jo
inc
jmp
sub
fistps
xlat
sbb
mov
stos
rcl
es
cmp
xchg
sub
in
ljmp
cwtl
repz
and
push
xor
lret
sub
mov
stos
xor
jns
pop
aad
outsl
jle
nop
xchg
mov
xchg
push
nop
mov
lcall
in
and
shl
pop
ret
clc
lods
int
lods
sbb
mov
mov
push
sti
xchg
adc
rol
roll
add
jg
and
add
adc
cld
push
add
lods
mov
xchg
inc
sbb
sti
push
or
adc
lock
outsl
das
lods
xchg
inc
and
inc
lcall
adc
lret
inc
sub
xchg
xchg
push
jne
cmp
lock
sbb
push
inc
add
into
sub
jb
les
push
adc
fsubs
mov
sbb
inc
jnp
lods
fisubs
lcall
gs
mov
cwtl
xor
cmp
jle
xlat
imul
push
adc
add
std
xchg
aad
cmp
scas
dec
aad
jbe
in
adc
dec
jno
popf
add
stc
mov
dec
pop
test
inc
ret
mov
inc
lea
ret
push
sbb
sbb
sub
mov
pop
insl
mov
out
cmp
test
dec
add
addr16
in
jns
arpl
sbb
mov
hlt
mov
adc
lret
icebp
lods
dec
fstpl
fldcw
push
enter
cmpsl
fisttps
add
je
mov
lods
in
or
dec
data16
push
sub
lock
mov
jle
adc
mov
jnp
mov
add
push
sub
or
mov
xchg
push
enter
shll
les
jo
jg
loope
or
cld
cs
out
imul
or
mov
xchg
out
xor
add
cmc
jnp
push
adc
push
mov
xor
cwtl
mov
mov
addr16
test
lahf
cmpsb
push
daa
cmp
cmc
mov
inc
xorb
stos
lahf
int3
lods
aaa
xchg
inc
dec
mov
aaa
sbb
pop
sti
sub
sahf
xchg
adc
sbb
pop
or
sbb
lods
mov
pop
subb
mov
mov
cmpsl
or
push
stos
mov
stos
xchg
gs
ficoml
sbb
dec
cwtl
or
call
fwait
and
dec
dec
inc
ficoml
je
shl
pop
insl
mov
vpshab
adc
in
jae
mov
sub
cmp
mov
fistps
or
inc
call
leave
lds
popa
adc
push
dec
pop
pop
aam
pop
lods
addr16
mov
lret
mov
fcompl
subb
jmp
push
sub
dec
jae
ljmp
outsl
jmp
jge
push
js
push
stos
nop
fsub
mov
dec
cmp
and
dec
mov
lods
sub
mov
jmp
mov
sti
cmpb
sub
sbb
jp
push
in
repz
repz
pushf
inc
or
dec
adc
and
repz
adc
aad
mov
adc
xor
dec
scas
cmp
sub
pop
add
cmpsl
mov
icebp
sub
inc
mov
sbb
jg
dec
movsb
inc
jae
cld
mov
setle
repz
sbb
fwait
ret
jbe
enter
popa
cs
rorb
cmp
test
push
push
dec
test
jbe
adc
adc
adc
mov
push
and
sbb
push
stos
add
stc
mov
pop
cmp
outsl
dec
pushf
scas
sub
ja
scas
lcall
stc
inc
xor
pop
orl
sti
sub
push
xchg
adc
mov
aad
mov
sbbb
jg
adc
outsb
adc
dec
mov
ljmp
out
inc
daa
repnz
fs
inc
jmp
dec
adc
push
movsb
push
outsl
mov
inc
sbb
jb
mov
shl
shlb
addl
mov
ret
lock
or
xchg
insb
and
in
cmpl
or
jl
cwtl
hlt
das
movsl
imul
mov
push
and
sbb
hlt
cwtl
daa
pop
test
outsb
jb
mov
inc
sbb
pop
movsb
mov
out
pop
mov
std
fs
lahf
cmp
sbb
sub
loop
int3
dec
xchg
sbb
aaa
insb
jp
cmp
nop
aam
and
jns
lock
mov
jnp
xor
mov
and
je
orl
rorb
xor
pop
cli
sarl
push
jmp
push
sbb
mov
mov
push
aaa
jle
sub
adc
ret
jle
sbb
pop
daa
cmp
xchg
arpl
xchg
flds
rorb
mov
sahf
scas
xor
lret
lods
jnp
sbb
push
cmp
cs
inc
stos
jo
nop
adc
inc
xchg
cli
test
insl
scas
push
xchg
mov
setp
lret
out
les
sbb
jnp
popf
scas
es
and
lea
sbb
popl
inc
dec
mov
aaa
test
mov
jle
xchg
dec
or
test
test
stc
push
lods
xchg
add
nop
push
add
xor
iret
mov
and
inc
icebp
pop
je
inc
mov
in
pusha
add
insb
sbb
decl
call
movsb
jg
stos
push
push
stc
lock
popa
xor
inc
push
dec
cmpsl
push
dec
cmp
jmp
call
aaa
cli
mov
adc
mov
sahf
pop
lods
aas
pop
gs
ljmpw
dec
bound
hlt
dec
fildl
inc
xlat
xor
dec
mov
ret
xchg
sahf
inc
pop
sub
out
inc
ret
fisubrs
dec
xchg
push
adc
pop
jnp
in
js
push
xor
cli
cmp
xor
call
lods
adc
enter
xchg
mov
in
and
xor
push
pop
dec
leave
pop
mull
adc
xlat
xchg
fwait
shlb
push
ret
into
mov
test
cmp
xchg
test
in
cmp
sub
lods
pop
mov
push
jne
out
inc
frstpm(287
push
lea
mov
sub
cs
xchg
push
push
je
testl
inc
es
sti
push
xor
mov
nop
mov
xchg
cmp
and
dec
push
cmovnp
sahf
jne
adc
popf
sbb
adc
stc
shlb
pop
or
add
inc
push
shl
pop
mov
sahf
imul
sbb
pushf
jb
xor
sub
jno
cwtl
xor
stos
or
lret
cmovl
mov
xchg
push
push
push
adc
fcmovbe
pop
addr16
jge
xchg
shl
mov
fmull
pop
jg
mov
pop
fcompl
enter
dec
cld
mov
data16
loopne
and
xor
sub
or
lea
sub
addr16
pop
push
testl
lret
das
in
test
and
push
mov
or
cmp
fstpl
addr16
mov
add
and
adc
lcall
ret
out
sbb
cmpl
lret
int
pop
pop
movsl
shll
pop
fidivrs
xchg
clc
mov
pop
jne
and
test
lods
shlb
xor
fsts
inc
lods
jmp
mov
fdiv
cmpb
pusha
add
mov
xchg
out
adc
xlat
mov
push
push
stc
jl
lcall
pop
cli
jns
mov
cmc
fsts
pop
lret
jno
icebp
jne
outsl
mov
pop
adc
xchg
xchg
movsl
fisttpll
pop
ss
out
xor
rcrb
mov
jg
inc
inc
add
int3
or
andb
inc
pusha
dec
mov
push
adc
das
add
unpckhps
or
arpl
push
jae
aam
divb
or
dec
nop
lock
in
mov
xchg
out
ds
enter
mov
sti
jnp
sub
aas
xchg
mov
cli
jmp
loop
sbb
sbbb
popa
jl
dec
imul
ja
mov
pop
popa
inc
xchg
rcrb
addr16
adc
and
add
jmp
mov
inc
jge
mov
cmp
cmp
pop
jb
push
scas
imull
mov
jl
out
or
push
cmp
ljmp
flds
data16
add
fiaddl
mov
and
int3
ss
cmc
push
push
ja
arpl
jg
cmp
dec
cltd
mov
test
pusha
stos
inc
int
push
test
cmp
xchg
sar
scas
idivb
pop
xchg
test
ds
stos
pop
pop
pop
pusha
sarb
idivl
add
or
mov
push
jmp
testl
cwtl
cmp
ss
flds
xchg
push
push
pop
mov
cmp
out
mov
lock
sub
lds
cmp
shrd
test
pop
inc
jmp
lods
pop
insl
mov
imul
xchg
fisubl
xchg
movsb
and
jmp
jl
aaa
rcll
sahf
dec
cmp
inc
fimull
xor
arpl
insb
lods
or
mov
pop
push
xor
mov
stc
les
test
push
xchg
roll
and
cmp
push
out
push
aaa
clc
mov
xchg
in
int
sarl
sbbl
adc
add
scas
dec
pushf
filds
div
adcl
out
ds
loopne
out
scas
jecxz
in
fdivrs
dec
sbb
cmc
fcoms
mov
or
cmp
adc
xor
mov
daa
cmp
cmpsb
nop
fdivl
test
cltd
js
ret
orb
test
stos
fdivl
sahf
mov
lock
inc
inc
and
lcall
stos
jnp
aam
adc
push
in
outsl
shll
ret
mov
jmp
or
dec
fsubl
cmp
call
sbbb
inc
es
push
and
mov
push
sahf
cmp
notb
insb
int
push
outsb
push
cmp
inc
test
cmc
sbb
icebp
out
push
mov
negl
xchg
cli
dec
scas
arpl
popf
imul
push
mov
mov
int3
and
and
leave
cmp
xchg
jp
mulb
fwait
inc
shll
leave
into
cltd
xor
lods
xor
or
rcrl
push
fisttps
pop
pminsw
sbb
or
pop
push
push
push
fisttpl
push
sbb
jno
lahf
push
shll
lret
mov
adc
adc
adc
aam
add
loopne
add
cmp
push
mov
rorb
inc
lret
xor
fptan
inc
or
mov
mov
dec
hlt
cmpxchg
sarb
out
jg
enter
mov
popl
lods
outsb
xchg
dec
xor
pop
sahf
inc
fs
lock
sub
jnp
inc
or
std
pop
aaa
mov
loope
pop
lcall
inc
add
cmpsl
push
pop
loope
pusha
push
dec
aam
sahf
sbb
inc
fcmovne
sbb
imul
dec
imul
mov
cmp
lcall
pop
fmulp
mov
popa
cli
out
and
lods
jg
inc
jge
bnd
jmp
cmp
sbb
cmpsb
jmp
aas
addr16
cmp
sbb
mov
jne
outsb
mov
ss
int3
dec
subl
stos
cmp
repz
cmp
mov
movsl
sub
in
andb
inc
jge
push
xchg
mov
ret
xchg
pop
loopne
mov
pushf
jo
js
mov
outsl
mov
inc
arpl
push
cmpb
xchg
adc
sbb
movsb
xlat
jo
aaa
adc
filds
sbb
push
pop
sub
mov
xchg
xchg
ret
push
lds
push
jecxz
dec
push
mov
and
clc
daa
pop
pop
push
or
flds
push
cmp
push
sbb
clc
pop
cwtl
je
lds
push
inc
xor
outsl
lret
adc
mov
enter
sahf
mov
int3
pop
rcll
repnz
pushf
mov
aas
xchg
sub
jmp
inc
cwtl
iret
jmp
rorl
shrb
gs
into
add
pop
test
lcall
mov
pop
shr
add
dec
popa
xchg
sahf
xlat
mov
loopne
out
dec
pop
xchg
jno
or
xchg
and
push
fdivp
popa
ljmp
cmp
push
or
ficoms
fldt
xchg
fdivrl
iret
push
lea
add
add
pop
jno,pn
imul
leave
inc
cwtl
xchg
mov
and
lock
lahf
rcr
loope
stos
call
mov
cmp
sbb
or
adc
add
mov
inc
lret
fcmovnu
rcrl
inc
dec
daa
stos
pop
jo
mov
xchg
xchg
inc
fucompp
jnp
lahf
mov
jo
dec
popf
fisubrs
loope
mov
stos
adc
in
jno
data16
xchg
subl
gs
outsb
shlb
push
dec
imul
sbbb
mov
aaa
pusha
aam
dec
popf
fwait
jae
out
dec
jge
sub
cmp
push
fstpt
pop
jb
mov
test
inc
and
inc
cld
test
notl
lret
push
or
mov
pop
outsb
pop
xchg
or
pop
xchg
out
sbb
dec
out
lcall
cmp
sbb
roll
cmpsb
sub
dec
cmp
in
or
jns
push
test
test
cltd
es
shl
dec
into
dec
add
icebp
imulb
stc
sbb
jge
inc
sbb
jle
and
fwait
es
stos
sbb
xchg
pop
fadd
gs
in
pop
aam
sub
rcrb
aam
stc
pop
xor
and
and
lods
fiaddl
adc
pop
pop
xchg
mov
adc
sbb
xchg
mov
gs
lret
ds
push
lock
and
out
adcl
pusha
mov
or
add
inc
sti
or
dec
loop
add
ret
mov
div
push
mov
mov
xor
ja
push
push
jg
sarl
ret
ss
sbb
fcmove
xor
jo
data16
xor
dec
dec
inc
cmp
cmc
pop
sbb
push
iret
xor
cltd
fnstenv
retw
unpcklps
in
mov
sbb
mov
sbb
in
dec
je
lret
sub
dec
fxch
inc
out
xor
icebp
rclb
insl
mov
out
clc
inc
cs
adc
xchg
mov
enter
mov
mov
mov
xlat
push
add
push
cltd
or
movsb
enter
shl
fisttpl
pop
jbe
clc
fs
repnz
push
cmp
or
lcall
add
pop
jecxz
mov
cs
sbb
mov
adc
out
mov
scas
jle
and
inc
loope
pop
push
enter
in
rclb
fdivrs
jo,pt
mov
jmp
xchg
jb
adc
jno
mov
jmp
xchg
xchg
fs
jl
imul
jmp
mov
xorb
out
loop
adc
outsl
jo
push
popa
popa
pusha
stos
addr16
add
pop
ljmp
mov
out
inc
inc
es
xor
add
rol
push
jmp
jo
push
xchg
stos
add
ret
sub
xor
fdivl
ljmp
jg
mov
insl
imul
push
mov
cltd
sbb
jae
fs
mov
movsb
lret
jnp
fwait
shll
dec
imul
pop
cli
push
xor
movsl
inc
push
xchg
int
mov
loopne
cmp
jmp
and
inc
inc
ja
xchg
jnp
pushf
int3
cmpsl
mov
idiv
fiadds
push
je
aaa
jnp
xlat
mov
int3
arpl
xchg
sbb
cs
mov
jnp
lahf
pusha
arpl
jge
stos
loop
xchg
cmc
xor
jecxz
lahf
repnz
in
xchg
cmpsb
xchg
loop
js
test
jne
setae
xlat
add
sub
xor
cwtl
fs
pushf
mov
jle
and
lock
cmp
mov
push
cmpsb
gs
or
mov
and
dec
cmpb
lret
adc
jl
push
repnz
out
adc
imul
or
jge
gs
sahf
xchg
xchg
add
mov
rol
shll
popf
in
std
outsl
inc
pop
cmc
sbb
mov
ja
dec
sub
cmc
mov
mov
rcll
popf
cld
adc
inc
inc
shrl
xlat
mov
xchg
movsl
jg
mov
pop
and
pop
jns
rolb
push
xchg
repz
sbb
mov
ss
mov
nop
sbb
jbe
pop
mov
into
cltd
aad
lahf
in
roll
dec
push
mov
add
jl
shl
mov
icebp
jecxz
aad
xor
mov
mov
push
mov
mov
les
mov
adcb
jle
xchg
mov
stos
loop
ret
cltd
rol
sti
leave
loope
jl
jl
insb
test
movsl
dec
jns
xchg
ds
stos
add
xchg
add
adc
xor
imul
or
popw
fadd
pop
pop
cmpsb
push
scas
inc
and
inc
sub
aaa
loop
cmc
inc
cs
out
adc
stos
loopne
cltd
hlt
sub
cmpsl
inc
push
cmp
ficompl
push
testl
push
loope
mov
inc
add
inc
push
xorb
bound
sbb
scas
std
daa
mov
cmpsb
fwait
out
push
sarl
sbb
pop
lock
stc
imul
jecxz
test
jns
xchg
cld
imul
mov
cld
imul
and
pop
fs
insl
push
paddb
aaa
jge
jmp
iret
push
cs
xor
int3
les
test
or
sti
out
roll
dec
xchg
call
insb
lds
in
adc
int3
lea
cwtl
cmp
ret
into
cmp
fstl
lahf
fsubl
mov
jmp
mov
aas
push
and
sbb
mov
push
pop
xor
fisubs
jle
and
shll
in
sbb
lods
dec
mov
jno
nop
popa
sub
rorl
mov
mov
aam
iret
and
mov
sbb
sbb
mov
dec
in
cmp
push
test
xor
cltd
mov
mov
pop
imul
and
enter
push
stc
sbb
lock
repnz
push
mov
pop
mov
ficompl
dec
ret
lret
xor
jp
dec
dec
sub
jg
xor
jmp
nop
inc
mov
mov
cwtl
sub
shlb
clc
cmp
and
adc
or
out
repz
add
lods
mov
adcb
mov
inc
pop
fs
push
movsb
xor
movsb
nop
pop
sbb
repz
xor
inc
das
cld
xor
mov
push
lcall
repz
mov
es
fdivl
mov
lods
je
mov
das
dec
in
js
ss
aam
inc
sub
adc
or
add
iret
fwait
inc
cmp
pop
or
repnz
cld
lahf
jno
xlat
jbe
aaa
cltd
inc
dec
cmp
mov
add
aad
inc
sub
dec
push
pusha
sbb
pop
jp
loop
jl
or
inc
test
insb
add
ret
jmp
add
push
cmp
mov
rclb
add
mov
imul
gs
mov
cwtl
ljmp
gs
cld
int3
gs
call
in
jns,pt
ds
mov
lret
aas
gs
repnz
jnp
fwait
jl
lret
sbb
mov
loopne
add
shlb
jne
enter
adc
stc
adc
inc
lods
jno
scas
mov
insb
cmp
xor
push
or
cmpsb
sub
mov
cli
pop
adc
cmpsl
hlt
outsl
fs
test
enter
xor
in
lods
lret
mov
jbe
dec
sub
dec
jo
repz
shl
mov
ret
dec
jmp
adc
mov
adc
movsl
xor
leave
push
mov
push
testb
mov
xchg
call
lea
inc
pushf
inc
adc
and
mov
sahf
fiaddl
divb
loop
jg
fisttps
xor
pop
pop
scas
push
dec
loop
mov
lds
sbb
and
aas
push
inc
jmp
sbb
cs
repz
or
mov
std
mov
mov
lods
popa
add
jl
decb
icebp
rcr
sbb
adc
cwtl
test
test
xchg
rcr
mov
mov
push
jl
mov
dec
fldcw
das
cs
and
dec
mov
or
sbb
sbb
add
or
or
mov
jmp
pop
inc
sarl
mov
popa
cld
inc
adc
pop
lahf
js
mov
xchg
rcrl
add
ja
pusha
add
aas
leave
adc
hlt
jge
popf
lea
xlat
push
lds
dec
aas
cltd
or
js
xchg
into
cmp
dec
not
pop
movsl
mov
cmc
pop
mov
inc
andl
and
cmp
fldt
push
adc
sub
adc
ja
push
xor
insl
sahf
mov
inc
sqrtps
mov
pop
fwait
push
pop
shlb
pop
push
inc
jle
add
dec
and
bound
xchg
and
mov
push
imul
mov
and
pusha
xchg
jb
adc
dec
iret
incl
fmulp
stos
jl
jle
xor
fwait
xor
out
lret
jo
imul
outsb
sahf
aad
fisubrl
jmp
xor
mov
push
lret
fisttps
push
add
shl
add
fsubl
ds
cwtl
iret
push
mov
dec
mov
mov
add
clc
push
push
in
jl
dec
je
sahf
cmp
cmp
inc
cltd
or
lcall
mov
pop
cmp
dec
push
filds
or
mov
xor
iret
adc
das
cmc
shlb
ret
sub
clc
or
int
cmpsb
fcomps
add
icebp
shrb
mov
add
aad
xlat
cli
les
cmp
fs
cmc
mov
out
mov
xlat
lds
pop
or
xor
jp
inc
push
sbb
ds
aam
lcall
pop
xor
xor
insl
movsl
data16
xor
packuswb
mov
jmp
in
lret
dec
aaa
add
xchg
test
push
mov
fcmovnu
adc
pop
mov
sub
adc
jmp
adc
daa
stos
fsubl
sahf
decb
push
fistpll
pop
lcall
jl
xchg
out
jmp
inc
idiv
gs
xor
pushf
ss
jns
loope
mov
push
cmp
stos
subb
or
leave
popf
mov
jp
jo
sbb
outsl
outsl
cmp
mov
mov
hlt
out
mov
cmc
push
sub
pop
das
cmpsl
fstps
fildll
pushf
jge
rcl
adcb
push
pop
pop
push
out
cs
cmp
xor
into
imul
dec
mov
push
out
lret
sbb
push
xor
cmp
or
push
rorl
jecxz
xor
insb
enter
je
pop
shrb
fistpll
push
fidivs
pop
mov
jb
into
out
aas
int3
scas
jbe
cld
adc
sub
push
cltd
subl
lcall
fdivp
mov
mov
dec
ja
imul
mov
xor
jmp
dec
lcall
ja
dec
sub
movsb
loopne
ljmp
cltd
mov
fsubl
dec
dec
jmp
ret
addr16
loope
sbb
out
mov
push
jbe
xchg
cmpsl
mov
add
adc
xchg
pop
in
pop
cld
jbe
dec
pop
mov
cwtl
cmp
xor
mov
mov
jecxz
or
dec
jge
mov
jle
and
xchg
push
xchg
adc
inc
out
rol
cmp
pop
add
scas
in
sub
inc
jns
xchg
or
notb
shll
and
sub
xchg
inc
push
xor
lea
cmpsl
ss
jo
in
in
jmp
lds
dec
shll
push
pop
mov
sub
sbb
leave
or
mul
inc
cltd
fisubrl
dec
ret
cltd
mov
jmp
xor
pushf
fsubrs
aaa
fmull
jecxz
popf
cmp
inc
pop
mov
aam
and
rorb
out
nop
pop
movl
mov
out
lahf
push
xchg
stos
jb
cwtl
loope
jo
insb
mov
fcom
pop
xor
aad
hlt
addr16
cld
loope
in
adc
fisubrl
mov
sahf
xor
jp
shlb
sbb
mov
loopne
jge
and
int3
inc
ret
lods
jp
xor
sub
jmp
jnp
xlat
push
stos
mov
cmp
inc
add
pop
lret
dec
mov
dec
push
in
jmp
cmpsb
xchg
sbb
outsb
mov
sub
jo
enter
sahf
bound
mov
push
cmp
in
push
cmp
or
jo
cltd
lret
imul
dec
cmp
adc
das
scas
shrl
mov
dec
into
inc
fdivl
or
into
cmp
and
xor
jmp
pop
daa
xor
adc
inc
or
lea
ficoml
xchg
xchg
xlat
pop
mov
mov
fdivl
in
xchg
push
in
mov
jmp
fnstcw
pop
pop
in
mov
push
sub
jle
or
das
scas
mov
pop
les
lods
stos
les
popa
push
mov
test
mov
in
pop
xor
jbe
ret
iret
test
mov
mulb
cmp
mov
lock
movsb
cmp
fsubrs
jge
ds
inc
or
lock
sbb
lret
push
jno
imul
test
stos
test
cwtl
les
rcr
lock
repz
xchg
mov
xchg
dec
aas
sti
repnz
hlt
subl
xchg
jp
push
xchg
pop
scas
add
pop
push
mov
shll
into
and
mov
push
xlat
gs
dec
movsl
or
mov
xchg
test
pop
xor
leave
jp
insb
loop
cmp
gs
add
scas
and
jp
and
ljmp
mov
bound
inc
add
sti
jle
mov
lret
push
xor
and
inc
inc
or
mov
mov
sbb
scas
mov
inc
repz
negb
imul
rcl
or
int
scas
adc
pop
fdivl
pop
pop
pop
push
mov
jecxz
sbb
push
push
loopne
or
pushf
movsb
dec
sbb
call
dec
pop
xchg
movsb
imul
hlt
scas
stc
fsubrs
inc
or
sbb
insb
mov
add
leave
adc
cs
or
daa
push
pop
shlb
sub
popl
sbb
mov
cmpsl
push
stos
mov
adc
adc
leave
cmp
pop
or
orl
sub
jb
out
fwait
pushl
xor
cmp
and
and
xor
mov
push
add
jo
cmp
cmp
ficoms
loop
cmp
vhaddps
inc
pusha
pop
imul
stos
push
addr16
adc
push
into
inc
lahf
mov
mov
popf
pop
push
jne
xchg
test
insl
cmp
adc
pop
xchg
into
pop
jmp
jbe
mov
movsl
shlb
mov
inc
adc
push
cltd
cmp
ja
and
inc
in
leave
bound
ja
adc
mov
sub
outsl
repz
out
sbb
leave
mov
mov
push
mov
lret
movsb
push
mull
es
lock
dec
sbb
dec
dec
mov
scas
add
push
in
and
pop
inc
mov
ljmp
mov
ja
mov
iret
call
stc
add
push
pop
scas
push
ss
sbb
sub
inc
mov
sbb
cmpl
cld
mov
ret
jns
fadds
or
mov
lahf
lea
pop
pop
add
aaa
push
cmp
mov
and
push
or
aad
mov
pop
bnd
mov
leave
and
je
in
or
mov
add
movups
les
es
mov
dec
sbb
cmpsb
push
notb
pop
jge
inc
stc
mov
xchg
dec
inc
push
icebp
rolb
ss
movsb
bswap
stos
lock
sub
call
pop
movsb
and
xchg
leave
pusha
pop
cltd
int
jne
dec
adc
pop
mov
mov
dec
jle
clc
pop
dec
push
ds
mov
xor
pop
mov
cmp
cmp
inc
sub
jp
into
mulb
sbb
repz
cli
mov
inc
aad
push
xchg
sbb
inc
stos
mov
xchg
mov
jg
ljmp
sbb
lods
xchg
or
movl
jnp
xchg
sbb
push
aam
lods
les
das
cmp
cltd
dec
jle
pop
push
push
dec
jle
dec
mov
xor
out
popf
testl
lods
sub
cmc
inc
push
lea
out
or
enter
jnp
insl
test
jns
pop
xor
and
loopne
loop
out
adc
mov
mov
jbe
xchg
sub
out
cmp
jno
repz
cmpsb
jge
xor
test
ret
or
xchg
shrl
shlb
add
stos
rcrl
mov
subw
loop
jmp
sub
sbb
mov
xchg
push
pusha
xchg
fildl
pop
nop
push
call
pop
rorb
sbb
mov
mov
fdivrl
jle
lods
or
push
mov
sub
dec
mov
or
xchg
mov
inc
inc
lcall
mov
xlat
inc
jbe
mov
test
push
shl
add
nop
sbb
fbstp
dec
jae
ret
mov
push
cmp
pushf
pop
sbb
jge
repz
push
nop
cli
inc
xorb
mov
inc
lods
sub
push
fidivrs
enter
fcmovnb
outsl
xor
push
loope
leave
out
sub
rolb
and
mov
inc
sti
std
pop
pop
fldl
out
xchg
jne
fwait
lea
hlt
bound
pop
pop
nop
clc
scas
and
pop
adc
dec
jno
mov
sbb
pop
and
and
mov
lock
and
jecxz
pop
stc
test
inc
daa
sbb
aas
xchg
ret
sub
mov
inc
and
fisttpll
fdiv
xor
sbb
add
push
les
mov
fucomp
cmp
push
dec
repz
inc
es
out
mov
ret
test
out
cmpsb
movsb
data16
mov
cmp
scas
or
addl
jle
cmpsb
imul
shlb
add
or
stos
aas
sarl
jmp
popa
push
mov
in
rcr
loop
pop
adc
pop
and
add
or
xorb
push
xchg
dec
mov
jmp
sbb
dec
pusha
mov
jns
mov
add
jle
mov
xchg
sbb
inc
sub
add
in
sbb
jp
daa
push
add
pop
lea
mov
mov
addl
fcoms
insb
inc
jp
and
pop
or
cmp
outsl
fs
cli
rcll
jp
setb
jbe
mov
or
lock
out
or
pushl
or
aad
adc
mov
jo
iret
inc
mov
dec
mov
scas
jp
adcl
pop
jmp
cmc
cld
jae
ret
ds
push
inc
lret
jae
out
jmp
repz
pop
aas
je
or
sbb
cltd
cwtl
sti
rclb
inc
pop
out
mov
dec
cmp
in
push
add
lea
mov
sbb
pop
jno
xor
add
jl
pusha
mov
mov
imul
mov
add
int
outsb
jns
loop
inc
jg
mov
push
popf
mov
int3
cli
shl
fwait
pop
and
ja
mov
stos
in
mov
out
xlat
aas
adc
jp
xchg
rcll
jmp
mov
jb
gs
inc
dec
movsb
cmp
lret
mov
popa
les
push
sub
and
jnp
stos
mov
test
scas
loop
sarb
int
cmp
cmp
repz
push
and
movsb
mov
stc
cmp
mov
xor
or
adc
mov
cmc
or
sub
faddp
sbb
repz
or
pop
imul
stc
pop
jbe
push
sbb
bound
lods
xchg
dec
push
mov
or
inc
cmp
fldl
cmp
enter
iret
rol
pop
icebp
test
fs
enter
or
in
bound
sbb
xchg
mov
fisubrl
push
js
sbb
les
push
ret
es
xor
cmp
imul
sbb
dec
loop
out
xchg
dec
or
dec
jl
in
arpl
sub
jo
or
inc
out
pop
lret
mov
mov
inc
imul
aam
addr16
fstpt
mov
add
nop
pop
sub
movsb
loop
loope
dec
outsl
icebp
std
sbb
inc
xor
xlat
push
cmp
nop
sub
or
jg
dec
loopne
push
ret
orl
call
mov
dec
adc
outsl
lods
sub
mov
xor
dec
xor
cmp
dec
pop
push
jno
sub
lock
sti
out
ret
out
cltd
cmp
data16
xlat
lock
xchg
and
movsb
insb
icebp
int
sbb
lret
pop
call
stc
sti
out
xchg
push
xorl
inc
nop
fmul
inc
push
xor
std
roll
push
aas
arpl
cmc
mov
pop
in
mov
xor
xchg
and
lds
je
push
daa
cmp
mov
mov
adc
rcrb
push
adc
imul
jns
in
loope
mov
enter
push
add
xchg
cmp
sub
rcrb
out
movsb
jecxz
mov
xchg
cli
test
les
dec
lock
jg
inc
cs
ljmp
aaa
push
sbb
adc
pusha
stc
mov
sub
jmp
pop
mov
test
and
jne
cmp
pop
insl
into
cmp
sbb
popa
push
xor
xlat
mov
mov
orl
outsb
add
sbb
jbe
or
ret
pop
sub
sbb
lods
pop
pop
pushf
rcr
mov
sub
fstps
popf
jp
cli
mov
cmp
xchg
cltd
xor
aas
pop
pop
test
into
pushl
mov
sbb
in
cltd
inc
jge
cltd
jmp
sub
fldcw
adc
dec
jmp
push
shr
mov
lret
mov
lcall
xor
jnp
stos
dec
loopne
mov
test
xor
xchg
push
mov
sahf
lcall
ror
mov
mov
cmp
sub
and
scas
push
int
mov
notl
imul
lret
mov
jno
mov
in
pop
push
pusha
repnz
xchg
aad
dec
stc
mov
sub
shlb
jle
inc
out
leave
push
add
sbb
push
adc
xchg
cmp
adc
mov
repz
outsl
fs
push
inc
inc
push
pop
jl
jne
bound
std
sarb
imul
aam
cmp
add
pop
inc
mov
movsb
and
js
mov
cmp
int3
mov
test
scas
mov
out
adc
push
xchg
pop
test
dec
dec
xchg
mov
inc
dec
push
leave
dec
mov
sbb
mov
xchg
cmp
cmp
cmpsl
cmp
mov
cwtl
inc
push
pushf
dec
xorb
out
jb
sahf
inc
and
jb
mov
sub
addr16
popf
adc
sub
loopne
loopne
icebp
xor
jno
addb
scas
cmp
fidivrl
mov
pop
js
rorl
mov
cmp
xchg
dec
int3
sub
add
test
cmp
and
ret
pop
sbb
dec
and
inc
ret
dec
adc
jnp
ret
add
push
adc
cmp
cli
subl
shr
loope
fimull
ret
and
imul
stos
outsb
ret
pop
jmp
mov
and
cltd
clc
pushf
test
sbb
test
cmp
adc
cmpsb
push
and
mov
pop
mov
adc
sbb
dec
cli
dec
sub
xor
pop
es
push
pop
inc
stc
aad
enter
jb
ds
gs
pop
cmp
jle
inc
shrl
mov
xchg
rcll
scas
add
inc
clc
cmp
sbb
je
jecxz
push
mov
bound
mov
or
sub
mov
je
inc
xchg
xchg
add
or
dec
push
mov
ud1
fnstcw
lock
adc
sti
inc
or
jnp
jne
xchg
popf
or
jmp
out
fsts
sbb
and
mov
cmp
pop
cltd
xor
cmpsb
xor
xchg
cmp
pusha
bound
sub
pop
add
mov
inc
aad
pop
es
push
gs
in
xor
push
lret
insl
in
cmpsl
es
xor
push
dec
andb
add
mull
cmpsl
test
push
xchg
cmp
adc
xor
aaa
or
push
addr16
cmc
rorl
add
je
in
pop
and
xchg
or
lahf
jg
pop
repz
dec
and
int
xor
xchg
dec
sub
mov
mov
pop
shlb
inc
pop
inc
xchg
add
lret
loope
add
sbb
test
push
mov
push
inc
mov
loope
hlt
fwait
inc
pop
mov
shlb
inc
mov
sbb
jle
pop
popf
lods
aam
mov
or
cmp
cmp
sub
xor
sub
inc
cmpsl
stc
inc
xor
xchg
fisubrl
loop
jne
ret
leave
insl
incl
es
je
or
mov
lods
pop
pushf
aaa
lock
sbb
mov
test
hlt
push
push
cwtl
push
pop
clc
adc
cmpsl
dec
mov
pop
imul
rcrb
push
ja
push
pop
cld
cld
push
in
scas
divl
cmp
test
inc
dec
rcr
mov
jg
xchg
movsb
cmpsb
pop
and
push
int3
mov
cmc
push
cmc
sub
fcomps
dec
movsb
test
call
cli
xchg
mov
xchg
outsl
test
out
cmp
ljmp
dec
dec
data16
mov
or
xchg
pusha
nop
fnstcw
xchg
cs
dec
adc
cmp
lcall
frstor
push
shrb
mov
or
add
adc
jo
mov
sub
and
add
add
jb
pop
das
cmp
dec
loope
mov
or
mov
mov
and
mov
xor
mov
xchg
es
and
push
mov
jb
pop
shrd
stos
mov
mov
cmp
and
ljmp
arpl
and
aad
xor
js
arpl
cltd
xor
lret
pop
call
mov
test
mov
jle
into
pop
push
mov
insb
daa
push
or
into
dec
and
cmp
xchg
out
dec
and
inc
xchg
mov
and
jecxz
push
out
out
daa
dec
aam
push
jnp
add
jecxz
movsl
adc
xchg
mov
mov
mov
add
aas
mov
or
sub
fldcw
aam
or
mov
jns
add
mov
sbb
or
test
stc
jg
sub
out
mov
stos
add
mov
dec
int3
xchg
xorl
loopne,pn
push
stc
push
dec
aad
xchg
sti
or
sbb
sub
mov
add
adc
inc
jno
scas
cli
pop
inc
adc
or
mov
mov
dec
pop
add
hlt
mov
rorl
mov
dec
les
push
push
insl
std
pop
mov
sti
or
sbb
or
lahf
daa
mov
lods
inc
enter
neg
es
fst
int
pop
dec
sar
hlt
int
movsb
sub
add
push
test
ficompl
bound
bound
xchg
out
sub
push
lods
jbe
dec
nop
xor
mov
adc
cmc
jg
jns
jo
cs
insb
movl
sbb
fisubl
and
out
fnop
mov
mov
pop
push
adc
jb
push
mov
jmp
push
inc
sbb
sub
push
add
hlt
inc
mov
xor
enter
and
mov
stc
out
cld
lods
cltd
dec
imul
outsl
push
es
and
pop
xor
fadds
fucomi
addr16
mov
sub
adc
jno
fldenv
inc
jbe
or
or
pop
push
sub
mov
sbb
xor
leave
dec
leave
lret
aas
pushw
cmp
mov
sbb
jle
cs
jecxz
aas
fistpll
loop
aam
imul
inc
inc
movsb
imul
faddl
sar
dec
xchg
mov
mov
mov
add
repnz
push
ds
xchg
nop
jno
dec
cmpl
cmp
out
fistpl
gs
push
xchg
movsb
cli
cmp
xchg
into
mov
loope
xor
mov
jg
push
loopne
ret
scas
rcl
jb
inc
cmp
mov
add
mov
jae
mov
adc
neg
jne
push
cmp
push
sbbb
inc
cmpsl
lret
imul
xchg
push
test
ljmp
sub
cmp
add
jg
push
cmp
inc
ja,pn
xor
cmp
clc
jo
int
mov
push
fadd
imul
xchg
scas
push
pop
mul
cltd
or
cmpsl
xor
sbb
jge
cmp
sub
lcall
xorb
pop
stc
xchg
ret
lret
sbb
push
or
int3
xor
ret
negl
jne
xor
mov
jp
lds
sub
mov
mov
mov
arpl
and
jae
pop
and
pop
xor
movsb
je
xchg
pop
pop
mov
negl
add
test
in
rcll
fistps
shlb
lock
jg
mov
out
inc
ss
andb
xchg
fwait
lcall
jbe
dec
jne
mov
gs
mov
xor
add
sub
jns
cmpsl
add
idivl
dec
mov
push
orb
cmp
add
cltd
mull
xor
adc
iret
sbb
es
outsb
js
xchg
in
inc
pop
xor
ret
xor
inc
push
adc
inc
mov
push
mov
cmc
and
sbb
fisttpl
adc
ja
dec
push
jle
mov
je
loope
insl
cltd
push
mov
fisubs
cmp
fwait
mov
mov
xor
pop
daa
sub
jl
xchg
lret
jbe
and
or
lock
andl
movsl
push
mov
add
fsubrl
ja
cmp
xor
testl
mov
pop
mov
dec
shrb
in
push
mov
jo
dec
icebp
leave
mov
js
decb
mov
in
mov
popf
mov
jecxz
lret
jg
xchg
cmp
add
dec
mov
add
mov
pusha
dec
imul
mov
jae
pop
dec
jg
xchg
shlb
xor
out
mov
ljmp
xchg
sbb
inc
movb
mov
idiv
imul
std
loopne
xlat
iret
mov
cmp
popf
mov
mov
and
and
add
sub
add
sub
pop
mov
dec
fnstcw
add
mov
xor
test
movsl
mov
jne
mov
scas
sub
lock
enter
cmp
and
stos
pusha
pop
repnz
bnd
repz
test
inc
mov
or
cmp
mov
jp
outsl
and
jne
lds
sbb
out
xor
int
xchg
push
cmpsl
es
push
in
sub
mov
mov
loopne
inc
ds
pop
lds
fnstcw
mov
lea
in
xchg
pop
push
cs
inc
repz
mov
loopne
test
insb
sub
nop
pop
in
dec
es
xchg
cmpsl
loopne
mov
and
iret
ret
adc
lahf
ficoml
in
pop
push
clc
imul
test
inc
lahf
outsb
popf
mov
lret
xchg
ja
adc
shrb
xchg
mov
jge
pop
adc
pop
dec
into
fcmovnbe
andl
inc
sbb
adc
sbb
shlb
cmpl
sbb
sub
loopne
aaa
mov
dec
mov
mov
add
or
pop
dec
popf
movl
vpaddsw
xchg
dec
stos
xchg
dec
sub
bound
mov
cli
xor
fnsave
ds
mov
aas
aam
mov
test
stos
push
repnz
int3
inc
xlat
scas
sbb
xor
idivl
aaa
scas
cmp
mov
nop
xchg
test
jae
cmp
cs
mov
cmp
jnp
xchg
pop
frstor
es
sbb
mov
ds
sti
xchg
cmp
enter
imul
and
mov
push
fldt
shl
inc
sti
iret
neg
add
insb
je
inc
dec
movl
fnsave
sub
adc
xchg
push
cltd
icebp
add
gs
psllw
aas
cmp
xchg
flds
in
mov
movb
jp
xchg
mov
cmpsl
sub
notb
fidivrl
out
pop
cmp
or
sbb
mov
sub
adc
aam
pop
adc
cmp
cmpsb
fidivrl
call
mov
int
jg
xor
in
pusha
sbb
adc
pushf
out
xchg
in
add
lret
jne
push
jge
clc
jmp
adcb
outsl
and
stos
das
lcall
out
add
dec
icebp
into
cmc
jne
sbb
pop
xchg
xchg
xchg
cmpsl
pop
sbb
sbb
int3
leave
pop
lahf
xchg
add
lahf
mov
pusha
push
popa
call
sub
loop
loop
adc
aaa
mov
divb
mov
hlt
in
nop
clc
cmpsb
xor
fnsave
lods
push
arpl
jnp
pmuludq
adc
adcl
sub
jge
xchg
sbb
inc
dec
mov
and
pop
insb
and
mov
cmc
stos
jmp
add
mov
jo
push
in
mov
xor
inc
aad
fadd
cmp
mov
sub
cmp
and
adc
popa
sti
cmp
dec
xchg
jge
mov
and
add
and
sbbl
and
ljmp
es
mov
js
mov
jg
test
jae
sbb
dec
shl
js
mov
cs
incl
sbb
stos
in
inc
ret
xor
idivb
or
sub
push
icebp
lods
std
jbe
mov
and
add
mov
mov
imul
divb
push
jb
push
in
mov
push
std
roll
jb
or
fnclex
jl
jne
lea
insl
cmc
out
cltd
xlat
scas
mov
xor
and
adc
popa
xor
ljmp
mov
fdiv
jno
jmp
popf
sbb
addr16
dec
jo
fisttpll
imul
mov
mov
jns
sbb
cli
mov
sbb
test
loop
cmp
arpl
xchg
outsb
push
fidivrs
mov
pushf
sahf
dec
notrack
push
mov
pusha
add
cmp
popa
push
fs
adcb
xlat
cli
push
cmp
xor
inc
or
in
pushw
or
xchg
push
adc
ja
adc
inc
add
sahf
fsubl
mov
lea
xor
cmc
jecxz
fbstp
ret
xchg
mov
inc
xchg
aaa
mull
add
sub
shll
aam
insb
or
cli
inc
pop
jmp
and
xor
fisttpl
inc
xchg
call
mov
ret
jne
repz
adc
imul
lods
js
cmp
pop
mov
xor
sub
insl
mov
xchg
imulb
int3
cmpsb
mov
imul
out
push
out
movsb
orl
insl
xor
jecxz
lock
mov
xchg
retw
fcmovnu
mov
push
inc
stc
inc
cs
adcl
mov
fdivrl
cmp
jns
gs
rcll
push
mov
lods
lock
mov
mov
jae
aas
bound
cmpsl
xor
sub
shl
dec
mov
fcomip
les
dec
mov
jg
dec
cmp
ljmp
mov
inc
xchg
bound
xor
jns
push
fisttpll
shll
xor
hlt
mov
push
ds
ja
xor
popf
mov
jle
pop
push
jne
jg
dec
lcall
adc
xchg
imul
aam
pop
push
lret
or
ret
cmp
and
mov
pusha
push
clc
mov
test
inc
hlt
fistpl
push
push
aas
cwtl
or
cmp
ljmp
stc
mov
cmp
dec
cmpsl
sbb
popa
cmp
enter
ja
hlt
mov
adc
js
icebp
cmp
push
int3
fmuls
mov
sub
xor
jge
leave
and
mov
shlb
and
add
jne
xchg
hlt
clc
mov
cmc
xchg
shl
fadd
xchg
cmp
test
sub
xor
in
sbbb
xchg
in
out
mov
xor
dec
outsl
test
stos
popa
shll
mov
popa
push
and
shlb
out
idiv
ror
imul
cmp
or
pop
std
xchg
sbb
movsl
inc
in
daa
lds
mov
jnp,pt
jg
and
mov
jbe
add
pop
xchg
add
in
in
lahf
xor
in
dec
cmp
call
fcompl
out
fildll
push
sti
jns
repnz
out
jo
cmpsb
insb
xchg
mov
stc
ljmp
fsubs
test
push
sbb
outsl
jae
mov
pop
push
cmp
adcl
mov
pusha
xchg
mov
xor
or
imul
out
je
dec
adc
ror
fimuls
pop
xchg
lahf
fisttpl
add
into
xor
push
hlt
sbb
adc
sub
addr16
sbb
pop
aaa
fstpt
jns
int3
pop
mov
insb
dec
add
loope
clc
mov
sub
push
mov
sarl
lret
flds
mov
xchg
add
int
cmp
cmp
ret
sbb
pop
stos
cld
hlt
dec
dec
insb
jns
nop
cmp
mov
insl
xlat
xor
repnz
jne
xchg
fninit
push
dec
xor
mov
mov
push
mov
or
cmp
outsb
pop
adc
in
mov
shr
jmp
fstl
mov
xchg
ret
push
jb
insl
scas
add
stos
inc
test
pop
jb
jno
fldcw
out
mov
jae
xchg
sbb
ret
in
enter
sti
jle
xor
insl
and
jne
push
or
jns
jle
or
or
cs
xor
andb
test
insl
fmuls
add
imul
mov
vminsd
hlt
in
mov
sub
enter
scas
pusha
in
loop
lods
into
dec
jb
push
mulb
aad
enter
cmp
adc
push
and
dec
jne
push
push
xchg
pop
xchg
shlb
sbb
mov
push
lahf
sbb
cmp
add
test
push
mov
sub
xor
shrb
js
ja
mov
rcll
dec
pop
cmpxchg
or
jmp
push
mov
pop
sub
fistpll
mov
add
jo
mov
mulb
mov
lock
fld
dec
mov
mov
dec
pop
sbbb
or
psraw
cmp
xchg
mov
sub
iret
mov
jno
imul
fiaddl
add
lcall
imul
jne
and
data16
mov
dec
xchg
repnz
add
loope
pusha
adc
into
ljmp
cmp
xchg
sti
sbb
xor
imul
sahf
test
sti
psrad
outsb
fs
adc
pop
out
insb
cmp
cs
mov
sub
pop
sub
xchg
push
mov
cmpsb
or
repnz
xchg
inc
adc
cmp
cmp
push
loop
or
loopne
stos
push
out
pusha
and
add
xchg
push
lret
mov
push
xor
xchg
sbb
test
sahf
roll
mov
cli
adc
pop
dec
divl
inc
sbb
aas
sbb
lahf
xchg
lds
int3
movsb
mov
lods
pop
jge
in
inc
scas
sbb
rcl
cwtl
xchg
test
lods
ja
push
mov
add
pop
clc
mov
mov
cmp
cltd
sbb
and
bound
call
je
outsl
popa
mov
pop
pop
fcmovnb
jno
ljmp
push
lret
push
push
jnp
lds
adc
subb
pop
dec
out
roll
mov
pop
popa
dec
sub
mov
mov
mov
out
aad
scas
mov
insb
jbe
mov
adcl
imul
icebp
cmp
xor
jp
cmp
lock
es
negl
sbb
adc
call
cmp
cld
inc
pop
or
dec
sbb
insl
push
mov
xor
adc
sub
dec
adc
pop
inc
xchg
jl
loop
jns
lcall
mov
add
mov
in
lock
or
dec
out
inc
insl
xor
sub
testb
int
push
insl
add
mov
lret
jns
xchg
out
pop
mov
or
jae
outsl
xor
rcrb
div
into
mov
into
cmp
push
inc
dec
adc
mov
jg
fcomps
lret
jnp
cwtl
sub
aad
adc
sub
push
negb
bound
addl
or
lret
js
inc
flds
ljmp
sub
cmpsb
jmp
fimuls
andb
rcl
jl
das
cmp
shrb
dec
call
pop
mov
out
lock
add
sub
aaa
dec
mov
mov
lahf
inc
cltd
mov
pop
sbb
movsl
sti
pop
mov
cmp
jmp
cltd
pop
jbe
stos
jnp
pop
aad
pop
jb
jecxz
fnstenv
xchg
in
or
xchg
stos
stc
push
stc
into
rorl
mov
adc
or
repnz
sub
fstps
add
sub
adc
sub
data16
jge
adc
cmp
or
or
xchg
mov
xor
jle
fucomp
gs
mov
in
xchg
pop
cmp
pop
adc
popa
arpl
cmp
sub
pop
lds
dec
out
sbb
outsl
dec
idivb
clc
popf
jecxz
cwtl
loop
jmp
imul
das
adc
nop
xchg
mov
aaa
loopne
int
out
cmp
mov
cmp
loope
xor
mov
xchg
frstor
push
lret
aam
push
shr
stos
fisttps
mov
imul
xor
inc
js
insl
jle
pushf
sub
cld
push
rcrl
inc
xor
pop
xor
inc
cltd
cmpsl
xchg
add
xor
gs
push
cmp
loop
mov
bound
ds
xchg
jno
push
addl
inc
or
fcomip
bound
cli
fnsave
sbb
repz
dec
mov
add
push
test
dec
and
rcrb
test
jo
popf
lcall
adc
pop
daa
bndstx
in
sarb
push
and
mov
js
mov
ds
clc
arpl
dec
fldcw
lock
add
dec
loop
inc
dec
addr16
outsl
xlat
out
xchg
mulb
cmp
jb
fidivrl
aaa
enter
mov
pop
test
fldt
jnp
or
jp
scas
push
js
sbb
adc
cmp
subl
push
pop
adc
mov
pop
sbb
fxch
cwtl
je
stos
ja
pop
sub
jmp
mov
and
fcoms
mov
into
adc
pop
push
dec
les
sbb
mov
push
push
test
int
push
mov
inc
imul
hlt
in
adc
mov
xorl
dec
imul
sbbb
fsubp
push
sub
popa
adc
jne
add
nop
shrb
jl
fdivl
fwait
out
std
push
pop
inc
mov
out
clc
aas
pop
shll
incb
hlt
je
dec
fmull
aad
pop
push
push
shll
scas
adcb
or
xchg
aad
jns
cmpl
cmp
outsl
push
mov
sbb
add
sahf
scas
cs
push
dec
lret
or
jae
rcrl
dec
int3
les
adc
mov
rcr
arpl
jne
push
mov
pushf
pop
sbb
fs
les
subb
xorl
bound
mov
mov
add
popf
push
adc
cmpsl
fsubs
mov
repz
std
je
xor
mov
icebp
and
jmp
xlat
out
pop
dec
fs
jnp
iret
inc
int3
rorb
and
daa
popf
inc
shld
outsb
inc
xchg
adc
lods
adc
push
add
mov
mov
cmp
cmp
mov
adc
out
adc
les
add
pop
lret
dec
pusha
data16
cmpsl
scas
mov
xlat
repnz
or
jae
mov
dec
test
sahf
jmp
clc
inc
leave
int
test
or
ret
imul
pop
lea
xlat
xchg
inc
cmp
sbb
adc
dec
xor
sbb
mov
pop
mov
xchg
shll
ret
testb
push
test
mov
test
fmull
stos
inc
sub
dec
jne
lea
insl
mov
and
sbb
pop
enter
xchg
pop
cld
cmc
cmp
mov
mov
add
cmp
out
or
sub
std
pushf
movsl
test
mov
xor
into
add
mov
sbb
cltd
aad
movsl
mov
xchg
push
outsl
jnp
repnz
in
sbb
int3
hlt
addr16
cmp
scas
fisttps
jo
popa
xchg
add
fsubs
js
jns
inc
aad
xchg
jae
std
out
out
idiv
inc
call
into
femms
into
cs
cmp
mov
rol
leave
xchg
xchg
loopne
mov
mov
imul
sahf
pop
in
jns
movsb
dec
push
scas
fisubs
mov
nop
insb
jg
inc
shrb
mov
insb
xor
incb
mov
andl
movsb
icebp
mov
cs
xchg
adcb
repnz
aad
jae
shll
leave
lods
aas
jbe
cs
mov
pop
push
push
fdivrl
push
pop
jle
pop
sub
or
in
adc
clc
adc
mov
into
lahf
push
and
or
jl
int
adc
insl
bound
int3
and
push
out
sbbb
sbb
daa
out
js
outsl
movsb
lea
enter
leave
and
ds
testb
and
adc
add
loop
fs
add
rorl
mov
inc
test
jne
sub
test
jnp
ja
adc
nop
das
negl
insl
push
lret
adc
testb
push
push
in
mov
pushf
dec
filds
mov
inc
dec
es
fcmovu
cltd
scas
sub
loope
pusha
popa
dec
subb
sub
pop
dec
mov
lret
push
push
push
pop
push
cmpsl
in
cmp
sub
jb
shll
push
adc
pop
push
push
in
lret
scas
std
xchg
call
faddp
clc
inc
pop
pop
inc
cmp
aam
and
pop
nop
xor
leave
shl
mov
mov
inc
repnz
mov
mov
pop
das
mov
mov
movsb
inc
sub
dec
mov
nop
add
dec
push
and
out
loope
xor
adc
cmp
sbbb
imul
inc
out
dec
jnp
mov
ret
push
cwtl
shlb
dec
enter
std
jge
outsl
jmp
pop
and
pop
cld
inc
fstpt
xchg
pop
fstps
and
or
icebp
rclb
insl
push
push
aaa
enter
mov
add
inc
add
outsb
ss
jnp
jecxz
adc
lods
insl
add
js
lods
add
popa
mov
int3
pop
mov
pushf
inc
ss
sbb
lahf
mov
fldenv
out
or
hlt
inc
sahf
into
push
popf
and
sub
jmp
xor
lcall
sub
cli
notl
jae
cli
xchg
lret
cwtl
xchg
call
mov
fsubl
cld
sbb
and
lock
and
inc
xlat
dec
int3
insb
aam
and
xchg
shlb
clc
xor
cmp
sbb
in
insb
sahf
pop
aaa
and
aam
cmc
das
dec
xchg
rcl
mov
in
pop
sub
aaa
xchg
push
int3
mov
jmp
int
fistl
pop
test
loope
mov
push
mov
lods
int3
iret
xor
sahf
lods
xchg
mov
push
and
mov
das
mov
dec
jae
loopne
push
and
or
test
rcr
fucomip
shll
jmp
mov
and
out
add
ds
subl
mov
test
ja
lret
pop
xchg
lock
test
ss
and
xor
mov
dec
xor
ds
fnstsw
fildl
or
stos
fbstp
or
jg
xor
into
mov
push
addr16
pop
mov
sbb
or
stos
mov
dec
add
mov
xchg
test
mov
lds
fwait
test
pop
cmp
in
pop
and
outsb
lods
mov
stc
in
rcr
movsl
lret
mov
imul
mov
cmp
mov
nop
cmpsl
mov
sub
and
dec
jae
ror
mov
jge
cmp
inc
std
adc
mov
idivb
pop
or
add
add
in
jb
and
adc
add
aas
bnd
out
sub
sub
notl
jecxz
into
sub
mov
popf
mov
sbb
lcall
cmc
add
jl
and
cmp
pop
pop
cltd
mov
popf
xor
in
lds
xor
dec
push
inc
jecxz
inc
test
addr16
js
sbb
aaa
push
and
mov
xchg
loop
nop
ljmp
adc
out
mov
scas
sbb
hlt
out
xor
mov
outsl
adc
cmpb
aam
arpl
xor
mov
arpl
lods
sbbb
repnz
inc
push
movsb
push
push
fcoms
iret
sbb
repz
leave
scas
lods
cwtl
adc
mov
pop
fildl
das
mov
xor
cwtl
jns
sbb
js
outsl
or
sbb
aad
aad
and
sub
inc
leave
jg
dec
jne
movsl
sub
lcall
pusha
cld
or
xor
inc
jnp
rcrl
into
fs
dec
call
test
mov
pop
adc
cwtl
xchg
fiadds
test
movsl
popf
fisttpll
xchg
pop
mov
jmp
nop
stos
cli
jne
push
inc
mov
test
cmp
stos
mov
lods
sub
xlat
mov
xor
cmp
jecxz
ss
pop
mov
mov
gs
push
fimuls
mov
mov
add
loopne
or
cmp
push
sub
data16
or
bound
cs
repz
incb
fiaddl
pop
fdivl
stos
hlt
loop
test
inc
out
pop
dec
jae
jl
xchg
cmpsb
int3
movsl
mov
xor
xchg
jae
and
shrl
std
cwtl
call
xchg
xor
arpl
stos
shr
shrb
notb
adc
cmp
pop
mov
add
into
xor
jle
mov
cmpsl
lret
fisubrs
and
mov
pop
icebp
mov
xchg
and
ljmp
xchg
mov
dec
xchg
lcall
pusha
jno
xor
mov
hlt
fs
int
jg
lahf
inc
cmp
fidivrs
fucom
pushf
sub
push
pop
pop
push
jp
popa
mov
in
pop
repz
push
lahf
lods
pop
std
outsb
fldcw
or
sbb
dec
cwtl
test
inc
push
cmpsb
add
mov
mov
lock
aaa
loope
sti
cld
mov
hlt
popa
enter
mov
or
xor
test
insb
out
sbb
and
pop
les
sub
out
aam
inc
outsw
xchg
stos
mov
add
xor
ret
jnp
jns
in
push
dec
xchg
lock
cmp
sbb
outsl
aaa
sbb
icebp
jno
mov
test
aad
fildll
sbb
fisubrl
shlb
mov
pop
cmp
or
mov
mov
outsb
pusha
xor
idivb
or
push
cmpsl
popa
inc
sbb
xchg
push
fstl
pusha
xchg
lret
nop
mov
insl
pop
insl
and
fcomi
into
push
mov
xor
dec
and
popa
enter
adc
or
jg
arpl
pop
shlb
cld
enter
add
das
subb
pop
jbe
pop
xchg
fidivs
mov
sbb
push
and
dec
jle
mov
xchg
rcrl
push
sub
cmpsl
mov
fistpll
jl
aaa
loopne
shrl
cmp
cmc
cmp
mov
sub
in
mov
je
and
cmp
inc
xchg
sub
mov
dec
mov
cmc
lcall
add
xchg
les
sbb
or
jb
jae
mov
dec
pusha
mov
std
xchg
adcb
adc
push
inc
push
mov
out
or
xor
jno
int3
add
dec
mov
or
out
add
mov
adc
es
pop
addr16
push
scas
mov
testl
jecxz
aas
adc
add
sbb
adc
sbb
jmp
lods
int
sbb
fistpll
cld
rorb
jg
cwtl
aas
mov
mov
js
jge
in
inc
inc
nop
mov
loopne
shrl
or
movsb
mov
adcb
gs
insb
ja
dec
enter
test
bound
sub
pop
mov
test
mov
sub
mov
push
add
add
jp
push
sbb
imul
or
mov
mov
inc
push
ljmp
inc
stc
push
fs
fcoml
cmp
sub
inc
adc
in
dec
cmc
lds
movl
dec
or
lods
sub
imul
lret
mov
xor
push
ljmp
je
cmp
sahf
pop
lahf
jl
std
xorl
sbb
gs
stos
gs
jb
in
scas
adc
jp
cld
xchg
es
cmpsb
dec
mov
add
repnz
rol
ss
inc
outsb
push
push
call
in
push
fdivr
lret
mov
test
xchg
mov
testb
into
cld
xlat
xor
add
insb
xchg
jle
mov
mov
add
push
add
jnp
lahf
imul
xchg
test
out
icebp
mov
or
pop
call
mov
out
loope
xchg
loope
test
pop
xor
jo
pusha
stos
in
inc
dec
dec
pop
aad
jnp
jmp
pop
mov
movsl
sti
fs
loop
negb
aam
mov
imul
in
loope
insl
pop
sub
jae
js
enter
jb
fwait
mov
jmp
loop
jbe
jbe
push
xchg
frndint
dec
jns
sti
scas
ja
add
mov
mov
movsb
clc
ficompl
or
stos
call
push
pop
sti
imul
or
push
andnps
pop
mov
push
in
addr16
push
push
mov
adc
shll
lods
adc
bound
push
dec
pop
pusha
dec
filds
mov
inc
dec
xchg
lret
popf
addl
das
fcoml
dec
lods
jecxz
hlt
jo
sbb
je
and
push
es
add
xor
sub
or
inc
dec
xchg
gs
mov
bnd
xchg
push
cs
mov
push
outsb
lods
imul
out
test
pop
xchg
cmpsl
movsb
mov
stos
ret
aam
adc
into
cmp
cmpl
popf
ljmp
leave
pusha
cwtl
hlt
adc
cmpsb
xor
mov
ret
sarb
repnz
inc
scas
jo
pop
nop
loop
and
sub
pop
in
adc
outsb
mov
loop
dec
and
xor
mov
and
jecxz
jo
dec
jle
dec
or
mov
adc
push
xlat
pop
inc
lea
add
icebp
jo
xchg
nop
dec
dec
imul
xchg
inc
mov
dec
in
xor
pop
lret
cmp
inc
fcomps
push
sbb
in
pop
jg
enter
fiadds
xor
or
pop
in
and
daa
les
repnz
xor
js
repz
xchg
int
aam
lods
call
jae
fdivrs
leave
and
fwait
je
js
movsb
stc
arpl
pop
xor
stos
pop
nop
push
and
or
mov
sub
sbb
jg
or
mov
push
mov
or
aaa
inc
imul
ja
ss
mov
sub
aaa
sbb
and
mov
fstp
pop
mov
push
adcb
sub
je
lcall
ds
fisubs
call
insl
sub
push
mov
jecxz
xor
fnstsw
adc
mov
dec
jno
dec
mov
and
rol
mov
in
push
jge
lea
sbb
outsl
sahf
xor
les
shrl
lcall
aaa
jns
mov
cmc
and
fisubrs
cmp
jmp
lahf
mov
gs
stos
fldenv
icebp
test
div
js
adc
mov
pop
mov
inc
push
test
cmpsb
jge
mov
movsb
aam
mov
dec
test
test
sub
scas
xor
subl
mov
daa
gs
push
push
pop
imul
mov
xchg
pop
sub
mov
jmp
fidivs
jg
shlb
pop
sbb
shl
ret
data16
push
pushl
pop
mov
cmp
sbb
jnp
test
jns
jl
jns
mov
jns
andl
xor
or
enter
and
in
push
pop
loop
frstor
pop
test
stos
cwtl
jae
and
ret
cmp
std
repz
mov
inc
cmp
mov
push
insl
dec
mov
ljmp
pusha
ja
rorl
pop
cs
cmp
xchg
test
mov
add
inc
icebp
push
push
repnz
inc
fnstcw
add
mov
insb
xor
lds
shr
aam
je
mov
mov
inc
mov
dec
jnp
xchg
insl
mov
in
and
push
jmp
add
cmp
test
add
mov
sub
addl
lods
enter
mov
pop
mov
dec
shl
lock
clc
jmp
sahf
push
test
pop
lods
and
adc
jge,pt
xchg
out
rorb
add
cwtl
mov
scas
dec
cmp
dec
jns
jg
jae
clc
push
sbb
fmuls
pop
xlat
cmc
mov
adc
pop
jbe
in
cmp
outsb
xor
les
push
cli
aaa
xchg
sbb
cmp
ljmp
xor
popf
push
pusha
in
xor
xchg
in
sbb
in
rcr
scas
and
aam
mov
cmpsl
push
push
pop
cmp
and
mov
push
and
hlt
bound
xchg
xchg
clc
push
xor
cmp
lahf
out
in
insb
movsl
hlt
pop
jne
outsb
dec
xor
mov
std
in
loopne
ret
mov
loop
dec
xchg
in
adc
jge
cmpl
std
test
daa
mov
incl
pusha
out
push
movsb
push
jne
jnp
hlt
out
inc
add
inc
mov
mov
arpl
cmp
in
inc
mov
mov
es
pop
mov
mov
push
stc
ds
or
jno
sbb
sbb
lret
jle
addb
mov
loop
pop
push
pop
dec
fwait
stos
imul
mov
jb
popa
das
stos
sti
adc
outsl
pop
in
outsl
sub
fldt
add
xor
pop
pop
nop
dec
mov
lahf
loopne
insl
out
repnz
cltd
mov
lahf
out
hlt
mov
cmpsb
shrb
aad
shrb
movsb
mov
or
and
jl
and
cmpsl
into
stc
pop
push
icebp
imulb
negl
daa
mov
sbbb
idivb
stc
scas
inc
cmp
push
add
call
cmpsl
dec
lods
inc
sbb
in
push
js
scas
sub
clc
jecxz
xorl
inc
pop
dec
jp
movsb
in
inc
mov
mov
jl
jge
adc
enter
xor
sar
and
adc
sbbb
sub
pop
aam
push
rclb
enter
lcall
push
leave
sti
push
sbb
je
popf
cmpsb
aam
mov
fdivrs
inc
dec
shlb
adc
push
cmc
mov
je
lret
jno
loopne
in
hlt
mov
lcall
insb
push
inc
cld
pop
addb
adc
jge
xor
inc
xchg
arpl
and
test
pop
ret
jl
ret
adc
repz
sbb
adc
adc
sar
outsl
sbb
hlt
sbb
inc
jae
jns
lret
lods
fcmovnb
mov
cmp
jb
test
rorl
mov
push
ds
ss
clc
sub
add
dec
out
leave
push
or
lret
cmp
pop
push
jo
dec
rorl
mov
fnsave
scas
cs
push
dec
jno
inc
fistps
push
xor
lea
jmp
into
test
sbb
repnz
xchg
xor
mov
addr16
sub
inc
cmp
xchg
flds
xchg
loope
cmc
insb
inc
mov
mov
out
or
fldl
jge
ror
or
ljmp
fnstcw
ja
mov
aaa
addb
dec
out
insl
or
xchg
cmp
dec
sti
lcall
xor
insb
out
dec
popf
icebp
pop
pop
aaa
cltd
inc
mov
iret
fwait
xor
or
push
sbb
movb
js
in
cltd
push
cmp
xchg
mov
sarb
cs
in
push
and
aam
xor
outsl
out
mov
mov
and
xchg
dec
mov
in
jo
imul
repz
jae,pt
cld
sub
int
sub
dec
pop
push
and
adc
nop
aaa
jb
test
or
ss
cmpsl
je
or
jle
mov
lret
pop
push
cmp
cmp
mov
insb
std
mov
mov
in
repz
jne
dec
push
dec
fs
and
sbb
xchg
dec
or
loope
pop
or
cmpsb
je
mov
xlat
repz
cmp
ss
dec
into
push
and
das
jns
jecxz
int
std
and
push
adc
mov
imul
push
cmp
xchg
push
cltd
xor
mov
movsl
xor
and
jae
push
mov
cs
stos
or
out
or
out
jmp
bound
fsub
sub
and
xchg
mov
pop
dec
lcall
js
std
mov
sub
sub
lea
out
lods
mov
push
inc
pushf
insl
mov
xchg
fsubrl
jb
andb
and
inc
mov
xor
rolb
and
in
or
mov
dec
cmpsl
cli
into
lock
pop
fisubrs
push
aas
or
mov
and
loope
cld
cmp
ja
jmp
lcall
add
cwtd
in
bnd
aaa
pop
add
dec
push
push
push
lcall
and
test
rclb
ja
dec
xor
push
lods
jmp
xor
lods
lahf
sub
add
stc
add
movsb
sbb
push
mov
imul
stos
adc
xor
arpl
jb
lret
xchg
mov
cmp
in
adc
sbb
mov
ss
mov
pop
subl
test
xchg
and
ja
jge
leave
adc
andb
test
cltd
lock
imul
loope
cmp
repnz
cmpsb
xlat
mov
inc
imul
sti
jns
sub
test
das
lret
mov
outsl
lock
add
lcall
test
push
clc
cld
lret
test
mov
add
movsl
sbb
out
xchg
mov
push
cs
outsl
inc
ret
shll
rorb
sbb
test
sbb
addr16
or
in
jecxz
fisttpll
mov
push
movsb
cmp
sbb
aad
mov
sbb
add
stos
add
pop
mov
xchg
xchg
sti
arpl
inc
fistps
mov
dec
sahf
sbb
stos
mov
mov
sbb
outsb
xor
and
adc
adc
push
xlat
dec
out
xor
pushf
or
jmp
and
jae
mov
sbb
aad
mov
dec
roll
call
jl
leave
sub
daa
pop
test
loopne
cmpsl
loopne
mov
lods
imul
fcomps
mov
sbb
shl
add
push
push
cmp
push
xor
sbb
stos
jno
mov
lret
cmpsb
popf
adc
movsl
aaa
fisubrl
jmp
xlat
jne
insb
movb
xor
out
push
pusha
xchg
nop
repz
lods
lret
pop
or
stc
and
scas
bound
and
push
pop
mov
pop
repz
jge
sarl
rcr
jae
in
mov
iret
pop
mov
rolb
mov
jmp
out
sbb
or
xchg
or
dec
je
test
popa
push
inc
rclb
repz
jl
and
sar
mov
jbe
fidivl
ficomps
stos
dec
jl
clc
add
lahf
adc
push
dec
inc
enter
jnp
shlb
jns
sub
out
mov
out
sbb
jl
fs
adc
mov
mov
jo
fmuls
push
stc
pusha
movsl
sbb
into
lods
mov
dec
jae
add
add
movl
out
mov
daa
rcll
pusha
xor
sub
jae
pop
fstpl
shrl
jl
xorl
je
cld
out
inc
icebp
adc
jns
jl
divb
mov
fildll
pushf
sti
pushf
and
in
cmp
ror
mov
push
fsubrp
mov
imul
das
ret
shrb
ffree
xlat
adc
and
lea
dec
cwtl
mov
iret
cmp
call
pop
pushf
adc
cs
jno
cmp
sub
sahf
sbb
add
xchg
adc
inc
pop
push
jo
fmul
shl
orl
cmp
jae
gs
and
xchg
repz
jo
xchg
scas
xchg
leave
dec
imul
movsl
push
or
adc
fisubrs
inc
stc
push
es
cltd
mov
stc
pusha
cmpsl
iret
add
xchg
xor
scas
sub
lret
addb
dec
out
cld
mov
push
xor
sub
xlat
icebp
jb
jo
sbb
jmp
test
push
inc
lret
add
aaa
jmp
mov
mov
cmp
scas
outsl
jle
pop
retw
xlat
cmpsb
aas
repnz
loop
divb
mov
pop
lret
ret
lea
jmp
out
fistl
xchg
hlt
mov
add
lock
imul
xchg
cltd
aam
imul
inc
inc
lods
adc
sub
adc
icebp
cli
dec
scas
jmp
pop
dec
cwtl
inc
dec
inc
shlb
comiss
loopne
daa
sbb
ljmp
jbe
call
xchg
dec
out
sbb
bound
xchg
mov
mov
hlt
xor
mov
mov
push
sbb
out
and
jae
pop
ljmp
xor
adc
dec
loope
dec
push
adc
pop
push
lcall
enter
push
inc
jecxz
lock
add
fnsave
jmp
mov
sub
psubb
out
rcrl
push
stc
cmpsb
lock
imull
es
pop
mov
cmpsb
xchg
popf
cmp
stos
in
push
outsl
std
sti
out
mov
inc
imul
dec
adc
xchg
insb
fstpt
ret
movsb
lods
push
ss
decl
inc
ds
pop
xchg
xchg
push
insl
mov
mov
sbb
pop
insl
out
in
add
add
sub
xchg
adc
mov
adc
jp
pop
adc
pushf
cmpsb
sarb
pushf
in
imul
mov
mov
iret
sbb
or
xchg
jp
dec
inc
lods
cwtl
sbb
arpl
js
mov
xchg
aaa
sbb
jno
or
mov
and
int
stos
jmp
cltd
movsb
js
bound
push
mul
rolb
pop
jle
cld
adc
ja
mov
jns
fists
dec
jmp
xorb
add
test
daa
test
jp
lcall
pusha
jo
popa
psraw
aaa
add
pop
enter
pop
test
mov
sub
adc
ret
mov
add
add
push
sub
jecxz
mov
imul
inc
inc
push
rcll
mov
mov
cmp
or
add
scas
rcll
rcll
cmp
push
mov
mov
repz
adc
jae
or
in
popf
out
cmp
fbld
mulb
aaa
inc
sarb
add
insb
mov
es
into
jno
mov
mov
or
idivb
inc
int
jb
adc
lock
mov
inc
sarb
and
lret
insb
les
xor
loop
add
fcmove
xor
imul
xchg
gs
jmp
sub
ds
gs
dec
ret
push
mov
data16
orb
cltd
dec
leave
pop
pusha
sub
or
shlb
and
sti
aam
lea
xor
pop
popa
lods
inc
mov
call
scas
movsb
lret
xor
fildll
lock
cmp
cmp
hlt
sbb
lods
rcll
daa
or
mov
mov
mov
or
loope
mov
aaa
and
stc
dec
and
std
in
pop
lret
nop
xor
filds
pop
sbb
movl
add
adc
sub
ret
pop
roll
in
leave
das
pop
add
mov
lods
dec
ficomps
jge
fidivrl
out
mov
cmp
xchg
xchg
ret
adc
cmp
sti
sub
lds
std
xor
adc
or
repnz
adc
cmp
mov
les
jg
imul
xchg
mov
movsl
pop
adc
jns
mov
inc
call
es
loope
lret
xchg
out
fadds
rep
inc
and
mov
pop
jle
xchg
xchg
jno
sahf
std
test
xlat
daa
hlt
imul
mov
dec
imul
sub
inc
outsb
adc
jg
and
and
sahf
xchg
jmp
mov
xor
push
push
icebp
sbb
inc
fistl
cmc
imul
mov
or
ret
mov
cmp
inc
iret
lock
data16
cmpsb
dec
repnz
xchg
orl
icebp
fcomip
fisttpl
mov
movsb
or
mov
clc
or
in
xor
es
mov
cmpsl
mov
cmp
jnp
sbb
cmp
shll
loopne
cwtl
sti
inc
mov
lret
pusha
xchg
out
ja
cmp
xchg
gs
xorl
mov
xor
mov
add
inc
ss
jmp
xor
clc
xor
ja
fsubs
add
test
push
pusha
in
sbb
into
jns
sbb
pop
fsubs
ds
cmp
inc
sbb
and
gs
sub
outsb
arpl
into
cmpsb
popf
mov
je
test
xchg
dec
pop
adc
cmp
jns
outsb
mov
daa
dec
adc
sbb
roll
jp
cmp
push
xor
mov
jp
inc
jb
lods
aaa
mov
xchg
in
xchg
and
jle
pop
adc
inc
pop
adc
xchg
popa
cmp
inc
setae
rcl
ret
push
pop
mov
fs
lea
mov
leave
aas
insb
fstpl
jge
dec
push
mov
and
mov
mov
dec
movsl
outsl
pop
fdivr
movsb
sbb
push
fbld
sti
pop
out
push
aas
in
sarb
data16
movsb
add
jmp
jae
js
je
push
inc
pop
lahf
xor
mov
jbe
js
fwait
xchg
xor
add
and
movsl
insl
add
ja
pushf
js
dec
push
mov
push
or
gs
daa
je
movsl
mov
add
insl
js
inc
std
dec
add
jmp
add
add
adc
je
clc
jmp
cmpsl
xor
clc
push
push
stc
cmp
xchg
pop
repz
scas
call
and
xchg
or
jecxz
aad
insl
jmp
cwtl
inc
int3
mov
subb
mov
cmp
xor
push
cmpsb
pop
stc
jp
mov
push
cmp
test
jmp
js
sub
and
push
adcl
shlb
mov
seta
dec
cli
loope
inc
stc
jle
pop
or
add
xor
leave
push
inc
inc
fwait
cmp
dec
jns
jg
jl
sub
xor
sbb
adc
ds
dec
out
test
push
push
popf
lahf
pop
mov
ds
bound
mov
mov
sbb
addr16
xchg
pushf
insb
das
sbb
lcall
jnp
nop
in
ljmp
inc
mov
pop
lea
in
repnz
mov
inc
xlat
pop
jmp
mov
push
pop
das
fs
sbb
ljmp
and
aas
push
sub
and
fwait
mov
xchg
dec
std
sbb
pop
lret
push
inc
fdivrl
dec
sub
repz
add
icebp
hlt
jecxz
in
sbb
jmp
sbb
ret
sub
cmc
daa
mov
jl
mov
jp
stc
xchg
add
mov
clc
jae
push
adc
outsb
test
push
xor
mov
ljmp
scas
mov
mov
xchg
xchg
pop
hlt
lret
add
dec
ror
and
jbe
std
int3
in
xor
pushf
imul
daa
fimuls
push
or
sub
pop
test
jae
adc
mov
jns
imul
addr16
aaa
aas
int3
xor
movsb
push
lods
js
addr16
cli
mov
hlt
inc
aaa
stos
stc
fisubrs
mov
mulb
xchg
sarl
adc
loop
dec
and
xchg
cli
cmp
test
popf
jg
shlb
and
lds
dec
dec
sti
and
jle
cmp
pusha
xchg
push
sub
jne
fimuls
add
dec
push
fmull
movsb
cmp
popf
or
pop
fs
jb
lret
push
pop
pop
and
fdivl
fs
popf
mov
cwtl
pop
filds
fistpll
pop
mov
jo
inc
mov
ss
jb
rorl
mov
push
sbb
inc
subb
inc
xchg
push
xor
sub
fistpll
arpl
xlat
lcall
sti
filds
loope
xor
ret
scas
imul
pop
dec
jno
inc
jae
subl
cmc
rcl
mov
cmpsl
aas
clc
jns
adc
xchg
xchg
or
inc
addr16
mov
das
std
jle
and
in
iret
enter
mov
arpl
cmpsb
dec
sbb
jae
mov
xchg
cmpl
add
ret
mov
push
sub
adc
sbb
mov
outsl
dec
mov
add
sub
or
lock
mov
aas
add
andl
pushf
je
dec
add
lret
jp
inc
mov
xor
aas
jl
shl
lock
stos
mov
push
enter
test
pop
bound
mov
loop
lods
fiaddl
cmpsl
mov
repz
mov
das
out
popa
xchg
mov
dec
mov
shll
jecxz
adc
xor
lret
scas
adc
push
rorl
adc
outsl
sbb
dec
mov
jae
jge
pop
add
lret
in
andb
lods
jmp
testb
dec
or
sub
push
out
fnstenv
dec
iret
movsb
mov
daa
ja
fcomip
js
xchg
cmp
mov
push
xchg
aad
shll
dec
jns
jo
aam
dec
xor
adc
int3
popa
popa
int
outsl
loopne
loop
fistpl
mov
add
cld
dec
lds
arpl
add
xor
inc
mov
mov
mov
fs
xor
lret
andb
push
xor
push
xor
jmp
into
out
and
push
xlat
sub
mov
mov
cmp
push
mov
popa
ret
insl
xor
and
clc
mov
xor
aam
inc
xor
dec
test
push
and
adc
ss
pop
cmp
jecxz
enter
in
xchg
push
shll
mov
add
pop
lret
popa
ret
cmp
mov
mov
in
mov
pop
xlat
movsl
mov
dec
mull
xchg
shll
adc
add
mov
dec
jp
jmp
sbb
xchg
add
mov
push
and
pop
mov
inc
lods
movsl
cltd
xor
lock
js
inc
call
cmc
lcall
jmp
jge
test
inc
xlat
mov
sbb
inc
mov
mov
imul
dec
dec
lret
push
dec
insl
jo
jecxz
fcoms
cmpsb
xor
xor
push
out
or
call
xchg
pop
xor
pop
rol
in
je
sarl
dec
out
mov
jno
test
fimuls
mov
scas
inc
push
stc
sbb
fld1
aaa
add
jns
insl
nop
fucom
and
pop
xor
cmp
movntq
ficompl
adc
ret
jno
inc
cmpsl
cmp
dec
mov
sbb
dec
popa
fistpl
repz
mov
in
jge
push
jb
out
aad
cwtl
sub
sub
out
insb
dec
xchg
cmp
mov
pushf
inc
sub
and
jmp
push
xor
mov
inc
movsb
xor
adc
rclb
or
xchg
stos
loopne
cmove
pop
ss
mov
call
cmp
in
sub
mov
or
or
pop
loopne
outsb
sbb
mov
mov
pusha
lods
sbb
cld
fistpl
incl
sbb
push
lcall
and
stos
push
pusha
jae
xlat
push
and
sbb
cwtl
mov
rcll
enter
xor
cmp
sbb
addl
cmpb
sbb
lods
mov
lds
sub
sbb
das
dec
push
std
sbb
push
fimull
loope
ds
and
mov
xchg
iret
xchg
aam
xlat
pop
pop
bound
cmp
ss
ss
cltd
lahf
push
push
mov
imul
jne
xchg
pop
jb
add
pop
scas
arpl
movsl
cmp
popa
push
ljmp
jge
popa
jns
ficoms
xor
push
adc
mov
cmp
mov
shlb
add
mov
dec
mov
aaa
lcall
pop
and
pushf
js
lods
in
xor
or
jle
sti
sub
aaa
loope
adc
push
dec
pusha
cmp
bound
mov
pop
scas
ret
inc
les
ljmp
test
fldcw
fnstenv
jp
andb
mov
aas
pause
and
cltd
rcrl
test
dec
push
rorb
or
ja
cmp
dec
insb
mov
std
sti
push
mov
orl
mov
mov
jl
inc
and
iret
mov
xor
rcr
sub
add
outsb
shrl
rolb
std
ja
pop
leave
xor
inc
call
push
ret
bound
jmp
xchg
jnp
jmp
pop
jno
xor
mov
cld
jecxz
pop
pop
mov
push
mov
aaa
mov
inc
sub
mov
sbb
or
lret
cmp
repnz
ja
xor
imul
sbb
mov
scas
sbb
sahf
or
in
mov
movsb
sub
fidivrs
pop
xchg
es
aad
fiadds
mov
pcmpeqb
cmpsl
mov
insl
push
xchg
loopne
aaa
inc
popa
in
hlt
movsb
cltd
cs
pop
add
push
xor
decb
sbbl
iret
jnp
out
xchg
mov
jle
xchg
sbb
arpl
sub
pop
mov
insb
xchg
sub
test
imulb
mov
inc
cmp
frstor
and
mov
imul
or
jae
dec
xchg
in
gs
mov
jns
cmp
lods
mov
cmpsl
pop
dec
sub
pop
mov
lock
fadds
lcall
sbb
xchg
fisttps
sbb
push
mov
pop
pop
sub
jmp
movsb
cmp
cmpsl
out
nop
rcrb
rol
outsb
mov
inc
jmp
jge
ds
aas
and
flds
push
push
fcmovnbe
loop
and
aaa
fsubp
push
stos
push
cmp
xchg
mov
mov
jmp
xchg
xchg
outsl
scas
sbb
cs
mov
into
and
daa
jg
xor
insb
push
dec
das
jp
repz
add
call
out
add
fstps
gs
fildl
popa
inc
inc
cli
enter
out
loop
cwtl
sub
fcoml
es
sahf
aam
mov
adc
cli
jo
push
lds
and
int
mov
xor
mov
mov
and
stc
out
push
and
pop
pop
lcall
imul
mov
incl
fstps
mov
xchg
push
mov
in
cmp
mov
ds
insb
jae
mov
xrstor
jne
loopne
jp
aaa
jecxz
f2xm1
dec
lock
outsb
push
mov
out
sbb
lahf
sub
push
or
mov
and
or
in
popl
sahf
rcrb
scas
ficoml
adc
adc
xor
test
push
data16
shrb
or
push
popa
daa
jl
lods
mov
test
dec
adc
punpcklwd
bound
insb
iret
shll
or
add
pusha
cmpsb
scas
inc
and
out
clc
ror
adc
fnstcw
xor
dec
jno
mov
lret
sbb
cmp
sbb
iret
sbb
pop
ss
mov
fisubl
xor
fldenv
pop
rorl
fldl
sti
or
fistpll
mov
pushf
push
lea
xchg
push
dec
dec
fadds
add
test
lods
mov
cmp
dec
pop
insl
sub
mov
sbb
fistl
pop
xchg
ret
xlat
inc
xchg
fsubrs
jl
push
sarl
dec
in
stc
xchg
lods
jecxz
mov
inc
outsb
sbb
popa
sbb
cli
pop
mov
mov
mov
or
test
rol
rcr
out
int
iret
rorl
jno
repnz
mov
test
std
dec
dec
int
adc
rol
cld
and
sahf
adc
rolb
cmp
and
mov
inc
test
nop
popa
sti
fnop
js
stc
inc
push
mov
hlt
testb
ret
mov
adc
out
xor
push
icebp
stc
sub
flds
xchg
les
shlb
arpl
lret
outsl
push
insb
out
xor
enterw
push
insb
negl
xchg
jmp
ret
rcrl
dec
jp
or
sahf
cmpsb
mov
jns
sbb
mov
jae
outsb
push
and
icebp
push
loop
pushf
mov
xor
dec
jb
mov
sahf
sbb
pushf
mov
cltd
cmp
pop
fidivrs
xlat
or
outsb
push
pop
xchg
js
nop
addr16
mov
out
addr16
pop
adc
scas
sub
aad
mov
sub
test
insl
cs
ret
push
adc
jmp
sbb
lret
or
js
inc
mov
fistpl
lock
insb
lods
mov
repnz
xchg
sub
cwtl
enter
lret
mov
and
adc
pop
push
or
sti
xor
cwtl
jae
cltd
mov
dec
jnp
stos
mov
xor
mov
mov
loopne
ficompl
pop
and
pop
push
mov
mov
aad
xchg
mov
xchg
xchg
stc
mov
ffree
pop
in
fsubs
pop
shrb
and
xlat
mov
jecxz
sbbb
xchg
mov
or
insl
outsb
sbb
xchg
fs
xor
out
inc
fwait
mov
mov
sbb
lea
loopne
addr16
jbe
imul
and
and
cmp
frstor
sub
mov
idiv
push
xchg
call
movsb
add
repz
in
xchg
out
aaa
adc
xchg
pop
fldenv
pop
adc
add
pop
xor
add
test
adc
xchg
mov
je
rorb
clc
fs
popf
add
out
or
sti
adc
adc
stos
leave
inc
cmpsb
mov
enter
stos
nop
cmp
xchg
push
jp
fwait
mov
pop
xchg
enter
lcall
stc
in
dec
push
jge
push
test
sub
cmp
xchg
adcl
aam
mov
xlat
xchg
test
rcrl
movsb
dec
cwtl
or
cmpsb
lret
inc
shr
push
lret
push
cmpsb
push
inc
popf
add
inc
sub
shll
add
pop
and
mov
ds
stos
pop
cmp
push
mov
adc
ss
pop
movsb
sbb
and
mov
daa
or
pop
sti
pop
out
decl
jle
sub
lods
rcrb
fisttps
add
rclb
xchg
or
stc
sbb
add
popf
or
dec
xchg
ficompl
dec
push
pop
ljmp
and
or
pop
or
pop
popl
cld
js
pop
lahf
add
mov
cld
cs
lcall
pop
lods
and
push
jo
imul
sbb
ss
cmp
dec
xchg
in
sub
pop
push
xor
inc
mov
adc
stos
push
negb
push
or
fwait
or
cmp
cli
jg
fistpl
sbb
cmp
inc
pop
sub
add
jge
mov
dec
neg
call
mov
jmp
fst
or
sbb
fcmove
or
bound
fs
xchg
jmp
and
pop
push
icebp
dec
cmp
dec
cld
aad
into
dec
inc
cs
push
mov
jns
addps
mov
push
loope
push
imul
ljmp
push
in
xchg
scas
bound
dec
jle
add
or
cmp
bound
mov
out
push
fsubp
lock
jo
pop
int
add
insl
adc
lea
das
out
cmc
pop
cmc
ret
mov
push
jae
push
ja
mov
pop
jb
arpl
fists
jbe
and
push
push
ret
xchg
mov
dec
das
ret
nop
add
out
lock
orl
imul
push
pop
aas
test
std
int
ret
sbb
pop
cmpsl
jne
mov
imul
cmp
jno
aaa
insb
nop
push
push
addr16
xchg
data16
rcl
cmp
fcmovnbe
cmc
out
hlt
pop
imul
out
push
std
mov
add
loopne
lods
cmp
jns
imul
dec
push
xchg
scas
xor
outsl
and
test
inc
stos
xchg
scas
sbb
addb
and
dec
aas
adc
xchg
ror
ret
mov
inc
dec
loopne
sub
stos
mov
pushf
je
push
mov
jge
inc
sbb
adc
push
adc
hlt
insb
bound
sbb
cli
jnp
or
cmp
daa
test
out
or
cmp
lcall
and
cmp
fisttpll
test
adc
lret
pop
sbb
aaa
pop
fistpll
cmpsl
mov
mull
cmpsb
sub
in
jae
jne
aam
and
jl
fwait
sub
xor
lods
pushf
test
test
int3
into
jecxz
xchg
pushf
int
pop
sub
mov
fmull
xchg
push
and
dec
outsl
lods
arpl
int3
ja
sbb
push
into
add
or
mov
mov
push
push
dec
out
dec
sti
sbb
fistps
pop
or
orb
pop
push
fistpl
add
insl
pop
adcb
sbb
jge
les
push
adcb
pushf
xor
inc
outsl
das
xor
push
ja
mov
das
int3
push
inc
mov
adc
push
push
inc
sbb
cmp
jnp
icebp
xchg
pop
rcll
sub
dec
sub
mov
mov
push
loopne
lcall
je
dec
inc
imull
call
les
lds
xchg
decb
add
cmp
shl
gs
jne
sub
and
push
mov
jb
bnd
repnz
or
jo
jo
dec
clc
dec
cmp
adc
push
ss
pusha
iret
inc
push
sbb
rorl
or
xchg
aaa
pop
push
xchg
fnsave
insl
icebp
fistps
fs
call
loope
push
mov
cmp
pop
test
xchg
nop
inc
scas
adc
dec
shl
xor
mov
dec
sub
adc
sbbl
pop
insl
popf
loopne
pop
cltd
inc
adc
aas
sbb
pop
jo
inc
stc
mov
fs
lea
adc
icebp
sub
xchg
rcrl
inc
das
jne
mov
mov
out
push
lret
das
rcrl
pusha
inc
out
shll
lods
add
xchg
stos
mov
lea
stos
mov
inc
or
outsb
mov
ja
fmul
add
mov
fnsave
mov
movsl
mov
cmpsb
call
mov
sbb
xor
mov
mov
out
dec
push
mov
jle
call
inc
aaa
dec
inc
lret
sub
cmp
push
lods
into
cwtl
cmpsb
cmpsb
sbb
xchg
dec
in
add
das
leave
push
mov
ret
mov
dec
push
in
jno
fldl
pop
aas
xchg
je
pop
lods
xchg
push
scas
xchg
pop
sbb
mov
arpl
cli
or
lret
inc
or
sbb
xchg
out
xor
cmpsb
jns
sub
or
lea
fld
sub
fs
fiadds
xchg
ret
in
mov
lods
and
jns
mov
ss
cltd
jge
ret
lods
or
fildll
mov
test
movsb
shll
jg
pop
loope
or
or
or
push
into
push
js
cmp
imul
ds
add
mov
lcall
xchg
pop
and
fbstp
xchg
sub
stos
sub
pop
imul
sbb
adc
test
xchg
adc
in
xchg
push
xchg
xchg
xor
jg
outsb
fistps
xchg
movl
ja
cmpb
cmpsl
cli
cmp
mov
test
mov
mov
lcall
xor
xchg
dec
pop
dec
xchg
push
add
pop
ret
dec
les
add
mov
fisubrs
cmp
orb
movsb
cmp
mov
jge
pop
stc
cmp
imul
repz
lea
inc
inc
int
mov
sbb
and
pop
verw
fistpll
xor
addb
test
lcall
mov
push
jbe
orl
das
jb
notb
bound
pop
aad
js
movsl
xchg
andl
jnp
and
sub
imul
iret
pop
inc
adc
add
fs
loop
dec
icebp
cli
rcr
push
aam
cmp
cmp
enter
sub
outsb
mov
movsb
shrb
imul
dec
dec
xorl
shrl
and
jae
fistps
repz
and
jnp
jle
cmp
and
cs
int3
fwait
cmp
xchg
jmp
rcrl
int3
mov
mov
push
repz
xor
xlat
pop
push
aad
lea
rcrl
xor
push
ss
cmp
mov
stc
int3
xor
fld1
mov
mov
pop
add
stos
inc
jno
cwtl
add
test
lea
faddl
rcr
inc
rdpmc
cmpsb
adc
fildl
in
es
add
outsb
clc
lret
fwait
inc
pop
in
pop
xor
xchg
cld
jnp
xor
cld
arpl
pop
test
cwtl
in
insl
fisttps
fildl
pop
mov
fs
divl
cmp
scas
lods
rolb
add
adc
sub
xchg
xchg
out
sub
movzbl
js
pushf
mov
mov
daa
jecxz
add
leave
rcrb
ret
and
push
ds
ret
aam
lahf
sahf
push
sub
stc
and
push
out
mov
xchg
push
add
cmp
es
or
mov
jge
aam
paddusw
out
ja
jmp
cmp
mov
pusha
scas
xor
push
jbe
shl
and
loopne
gs
scas
sub
icebp
mov
ljmp
stc
inc
clc
xor
daa
loop
out
in
and
test
das
mov
int3
adc
sub
pusha
jns
push
incb
fadd
sub
adc
sarl
cmp
movl
push
jg
stc
add
lock
clc
js
push
dec
cmp
cmpsl
js
ds
cs
pop
leave
or
xchg
pop
cmc
inc
mov
cwtl
mov
xchg
mov
negb
cmp
inc
jle
popa
shr
out
xchg
sahf
cli
inc
xchg
hlt
out
das
mov
aam
push
sbb
dec
cmp
sub
pop
lahf
pop
inc
pop
scas
adc
dec
push
and
and
cli
nop
jmp
mov
insl
mov
xchg
or
js
push
dec
mov
push
je
mov
push
mov
aad
ret
jge
xor
cs
or
stc
pop
sbb
mov
adc
push
mov
not
jle
xchg
aam
add
inc
dec
push
outsl
stos
sbb
imul
push
add
and
adc
push
mov
mov
clc
mull
xchg
pop
clc
call
repz
jns
bound
pop
sub
xor
sub
or
stc
jle
fwait
fwait
jbe
xchg
mov
xchg
pop
xor
dec
mov
js
jge
cmpsb
fsubrs
test
jmp
mov
iret
popa
pop
outsb
lahf
cmpsb
jae
mov
popf
hlt
sbbl
adc
or
inc
cmpsb
loop
lea
jno
fwait
mov
clc
push
es
sub
int
xchg
lods
pop
jbe
fsubrs
lods
mov
add
ss
out
lcall
lcall
inc
xor
mov
in
and
add
lds
sbb
pop
je
mov
fcmovu
in
insb
aaa
xor
add
cmp
or
pop
jle
aam
inc
lock
sub
adc
jbe
outsb
push
push
mov
cmp
xor
jbe
leave
or
ss
mov
mov
pop
fnstsw
sub
xchg
outsb
mov
mov
repnz
popa
jb
xor
jmp
aas
adc
negl
faddl
rcrl
lock
mov
add
sub
in
jae
mov
xor
jmp
jecxz
test
setnp
fucomip
repnz
loopne
insl
shr
add
fbld
out
lods
sbb
scas
mov
into
aam
mov
pop
cwtl
imul
and
cmpl
pop
adc
dec
lret
xchg
mov
mov
xor
jo
shrb
mov
inc
into
cltd
dec
push
inc
inc
shl
mov
pusha
lea
shll
dec
pop
lret
das
call
mov
inc
in
or
dec
sub
xor
mov
cmp
iret
xchg
into
inc
pushf
jp
mov
push
mov
push
shrl
loop
int
or
fs
push
push
leave
insb
insl
cld
ret
scas
push
push
jle
stc
pop
clc
pop
mov
das
mov
mov
mov
push
xor
cmp
sbb
testb
jbe
repnz
or
xlat
adc
pushf
sub
cmp
push
or
adc
pop
jno
repz
sub
add
pop
jbe
push
xacquire
pop
sahf
mov
mov
sbb
xchg
shll
sahf
lret
imul
addr16
sbb
push
or
or
in
xor
hlt
push
pop
lods
mov
scas
lds
ljmp
mov
jg
jo
add
ficoml
lods
into
inc
lea
mov
pop
imul
pusha
ja
lret
fcomi
aas
jns
mov
mov
mov
xchg
loope
add
fwait
add
pusha
push
xor
mov
or
incb
negb
stos
sarb
ljmp
dec
movsb
mov
jmpw
lds
rcrb
inc
xchg
xor
or
scas
adc
cltd
xor
cmp
cwtl
jle
andb
je,pt
inc
jl
leave
int
scas
andb
popf
cmp
and
jmp
inc
sub
in
and
mov
sahf
lds
movsl
iret
jmp
adc
xchg
std
push
test
lds
adc
outsl
nopl
into
pop
insl
jo
jae
sti
je
mov
out
cmp
add
jo
xchg
notb
shl
movl
aas
fisubl
shrb
inc
lret
lock
sbb
and
fsubrs
mov
push
mov
sub
aam
cmp
sub
scas
sbb
mov
inc
repz
and
jns
bnd
addl
addr16
pop
cld
xor
mov
push
xchg
push
ret
sub
or
fwait
repz
cmp
inc
arpl
lret
out
mov
mov
sbb
xlat
aam
adc
mov
xor
or
dec
mov
cwtl
add
xchg
pop
out
cmpsl
jmp
fdivs
push
cmp
xlat
pop
sbb
scas
sbb
addr16
xor
fbld
int
xor
pop
mov
mov
mov
xchg
cwtl
xchg
mov
ret
mov
sbbl
jno
and
scas
inc
test
into
leave
jo
cli
inc
jae
jne
mov
add
mov
loopne
int
test
sbb
popf
mov
adc
sub
std
push
ljmp
push
or
lahf
mov
fs
jp
jle
lds
arpl
adc
insl
jle
test
test
iret
inc
movsb
fcompl
fdivrs
xchg
xchg
add
sub
sub
or
xorl
push
pop
xlat
fldt
test
loop
stos
pop
adc
inc
inc
call
lahf
cltd
pop
test
rcl
pushf
push
add
cmp
adc
push
fsubrs
mov
sbb
cmp
cmpsb
hlt
arpl
lods
sbb
mov
pop
adc
sbb
pop
lock
adc
ss
xor
cli
nop
aam
sub
clc
subl
out
daa
ficoms
xchg
pop
dec
sub
gs
pop
mov
ljmp
adc
push
in
sahf
mov
fsts
mov
adc
fwait
stos
jmp
push
rep
popf
mov
sub
addl
mov
pop
outsl
mov
bound
daa
cld
jle
sub
repnz
mov
xchg
adc
or
std
dec
lds
or
push
pop
pop
xor
xor
stc
mulb
dec
cmp
pop
push
xlat
cld
mov
leave
in
adc
dec
push
loope
and
mov
repnz
test
inc
pushf
pusha
pop
and
lods
es
ss
or
sub
mov
push
rclb
sbb
jb
ret
mov
cmp
pop
ja
adc
pop
add
xlat
lds
and
sbb
cld
push
push
gs
fldcw
xor
inc
mov
cmc
aam
repz
popf
adc
jne
jo
and
aad
jg
fsubl
cli
inc
cmp
xor
pushf
clc
pop
and
inc
int
loop
jge
in
test
sarb
inc
test
mov
mov
in
sub
mov
xor
and
pop
rcrb
adc
inc
xor
shll
push
and
ret
jecxz
mov
je
mov
rol
hlt
aad
adc
sarb
push
lea
mov
shll
stos
cltd
push
sarl
jl
dec
bound
mov
adc
or
mov
lea
mov
push
aaa
data16
movsl
mov
mov
dec
je
mov
push
cmpsl
lret
and
and
jmp
cmp
cmpsl
mov
mov
jae
cwtl
notl
add
mov
mov
sub
mov
jbe
imul
push
fistps
sti
fnstenv
fistpl
ds
add
bound
mov
daa
sbb
add
or
jne
inc
fldl2e
scas
out
nop
rorl
mov
jle
mov
sbb
push
dec
mov
xor
xchg
jl
inc
push
adc
inc
movsb
dec
mov
sbb
xlat
mov
ret
sahf
jecxz
mov
push
leave
mov
out
movsb
pop
out
xchg
sub
sub
inc
or
fs
ret
mov
add
jg
sbb
out
ret
add
mov
ficoml
push
mov
or
and
ficomps
fs
jmp
popa
cmc
pushf
nop
dec
mov
push
xor
push
xor
inc
adc
rolb
out
xchg
icebp
mov
cmp
xchg
enter
inc
aad
insl
push
mov
jb
jno
pop
das
jge
fcompl
scas
inc
pop
sbb
pcmpeqb
cmp
iret
iret
jp
repz
mull
repnz
jle
lods
pusha
std
xchg
jno
shlb
cmp
idivl
cmp
or
jg
jnp
xor
mov
cwtl
pop
cmp
lret
push
xor
icebp
icebp
test
movsl
and
mov
lahf
aam
movsb
fisubl
insb
test
xchg
scas
adc
ds
inc
or
jge
jecxz
mov
push
sub
xor
sahf
xor
out
les
mov
dec
inc
mov
mov
push
add
cmc
outsl
adc
add
push
xchg
inc
fists
ret
sub
push
cmp
icebp
push
or
push
push
je
mov
stos
inc
lret
imul
xchg
inc
and
dec
imul
mov
iret
pop
testl
sbb
cmc
xchg
js
fbld
sub
stos
pop
or
sub
cli
in
inc
clc
call
shlb
js
adc
ljmp
mov
ljmp
dec
rol
sub
or
repz
ds
mov
mov
jecxz
out
push
sbb
pop
jg
and
add
nop
adc
mov
inc
sub
pop
mov
mov
mov
and
and
xchg
ss
push
inc
push
daa
ljmp
aad
out
cmp
xchg
jo
mov
jnp
mov
jo
fnsave
sub
push
hlt
lods
and
pop
iret
imul
out
adc
pop
or
iret
stos
pop
lds
aam
inc
cmp
clc
sub
sti
or
iret
call
lcall
sbb
insb
xchg
add
pop
sarb
push
mov
cmp
inc
clc
cmp
adc
lods
jae
push
mov
ja
int
add
jns
xchg
inc
jge
cmpsb
xor
ret
fdivp
mov
mov
rol
mov
mov
int
cmc
scas
int3
adc
aad
imul
and
ret
adc
cmp
push
outsl
mov
pop
inc
mov
cmp
jno
mov
insl
mov
push
lahf
adc
lret
adc
out
adc
stc
nop
xor
cmc
clc
pop
dec
xchg
mov
sub
xchg
icebp
dec
jo
push
in
fistl
jmp
outsl
sbb
lret
xor
leave
jl
xchg
out
ret
ds
pop
cltd
and
fucomi
push
popa
outsl
inc
pop
outsb
mov
xor
popf
mov
jns
xorl
jp
sbb
stos
or
sbbl
shl
dec
fadds
arpl
pop
mov
hlt
push
jle
xor
jbe
lds
mov
repz
in
std
cli
sbb
addr16
cld
stos
xchg
pop
cmpsl
cmpsb
inc
and
aas
into
stos
cltd
in
cmp
cld
jecxz
pxor
sub
out
add
add
or
or
scas
test
mov
int
xchg
mov
xchg
mov
popa
ss
jae
dec
push
dec
rcl
fdivrl
push
movsl
jl
xor
xchg
in
mov
and
push
outsl
aad
std
stos
and
sub
cmp
imul
clc
pop
xchg
jbe
outsb
push
sti
xlat
cmpsb
inc
daa
jle
mov
es
jp
pop
popf
pushl
mov
repz
xchg
sbb
stc
loope
lahf
jbe
sbb
outsl
in
lahf
jmp
xchg
lea
mov
or
sub
push
push
imul
cmpb
into
sahf
push
out
or
xchg
ja
dec
ret
ret
cmpsl
push
imull
fidivrl
jb
hlt
mov
loop
out
mov
orb
fstps
adcb
push
and
das
mov
and
shll
hlt
jns
fidivs
mov
popa
mov
inc
push
loope
unpckhps
leave
xor
cmpl
adcb
nop
inc
sub
xchg
jmp
add
add
shlb
pop
fsubp
outsl
xchg
lcall
jecxz
adc
mov
push
dec
out
inc
daa
inc
inc
cmp
scas
negb
rorl
loopne
pop
dec
jae
xchg
aaa
lea
std
clc
mov
cli
push
pop
jle
lcall
sub
ss
inc
jae
lahf
loope
popf
sbb
cmp
negl
fistps
sub
fs
insb
xchg
jo
jmp
and
test
mov
ss
cld
popa
imul
push
sbb
mov
sarl
xchg
pop
in
enter
pop
add
jbe
mov
add
rorl
and
jns
das
cmp
bnd
sbb
cmp
outsl
fs
and
movsb
fwait
lods
es
stc
and
push
movd
or
push
shrl
cmp
xor
cmpsb
and
fwait
sub
inc
pop
clc
das
sbb
outsl
aam
inc
and
push
mov
fnstsw
xchg
sti
rolb
mov
cltd
rcr
in
insb
add
je
jle
rclb
dec
je
lcall
mov
out
leave
jb
int
stos
xor
sbbl
pop
pop
clc
ds
gs
sub
cmp
cmpsb
test
sbb
cs
imul
shll
push
inc
pop
pop
dec
mov
xor
xchg
aaa
jo
data16
xchg
cmp
jo
leave
dec
lods
sub
stos
pop
jne
hlt
outsl
push
xor
in
xor
xor
call
cs
xchg
mov
sbb
enter
mov
in
lds
inc
cmp
push
pop
popf
repz
lret
inc
adc
in
push
mov
jecxz
insb
iret
dec
rorb
ret
xor
jnp
xchg
add
ror
lahf
jb
adc
and
push
into
sbb
pop
or
pop
les
sub
in
ljmp
leave
inc
cmp
movsb
imul
scas
sbb
sub
and
mov
leave
mov
std
call
popa
mov
mov
pop
rol
and
subl
call
addr16
aam
pushf
scas
add
mov
imul
mov
out
hlt
cmp
fisubrl
push
test
dec
scas
adc
inc
jno
mulb
xchg
sub
mov
or
lock
mov
dec
ds
mov
mov
inc
icebp
mov
repnz
neg
pop
sarl
out
ret
and
test
mov
hlt
sub
movsb
xchg
insl
lea
fidivrs
mov
xor
testb
jbe
pop
fnstenv
inc
bound
data16
cli
insl
sbb
mov
fcmovnu
pop
and
cld
adc
repz
ret
pop
js
xor
inc
icebp
xor
jo
leave
cmc
pop
jb
icebp
incl
ss
mov
imul
lods
xchg
pusha
jl
dec
or
cld
pop
jg
jo
and
clc
adc
add
nop
mov
add
pushf
lret
dec
in
mov
divl
cmpsl
pop
adc
fcmovnu
push
xchg
leave
pop
inc
dec
sahf
jle
sbb
lods
adc
jmp
pop
push
out
pushf
adc
popa
bt
dec
adc
lea
orb
xor
jmp
test
sub
pop
cmp
mov
lahf
insl
shr
outsl
push
dec
jno
rcrb
test
out
test
xor
cmp
or
outsl
iret
mov
lea
cmp
dec
cmp
adc
push
xor
or
cmp
mov
mov
lods
pop
sbb
cmc
push
mov
cmp
mov
data16
xchg
cltd
call
je
dec
cmc
mov
sub
xor
nop
pop
push
lods
pop
inc
cmp
sahf
add
test
call
dec
jecxz
or
rcr
sub
and
cmp
scas
xchg
loopne
sbb
mov
lods
sbb
add
jp
lahf
xor
adc
cmc
aam
sbb
inc
sub
mov
jle
iret
ret
cs
iret
dec
sbb
push
xor
xchg
loop
inc
sbb
in
rol
in
jb
addb
je
loopne
stos
jbe
xchg
xchg
mov
or
and
add
push
insl
sbb
call
jle
adc
sub
loope
push
pop
pop
je
pushf
addr16
xor
cmp
inc
loope
rol
adc
movsl
icebp
sahf
ja
mov
iret
push
fcmovnbe
mov
insl
push
pop
ss
xor
sbb
xchg
cld
popa
fisttpll
imulb
push
or
scas
stos
mov
mov
sti
xchg
aad
or
sbb
mov
xorb
dec
fcoml
push
and
mov
cmp
addr16
add
lret
cwtl
sbb
incl
mov
mov
fsts
dec
sbb
adc
cs
or
fists
and
mov
test
xchg
shlb
dec
adc
inc
test
fs
mov
fcmove
std
ds
aas
sub
fistpll
into
ja
cmpsl
arpl
imul
data16
jg
stc
dec
mov
lahf
ljmp
and
loopne
lods
adc
fwait
jno
push
outsl
inc
pushf
jg
repnz
xchg
jns
dec
xchg
stos
cltd
jns
sbb
int3
add
and
mov
ds
sub
inc
scas
mov
sbb
mov
pop
cs
fiaddl
test
pop
jns
outsl
dec
mov
lahf
mov
mov
pop
mov
orl
xor
cmpsb
push
and
stos
inc
in
adc
mov
ret
xchg
and
lea
mov
icebp
push
pop
in
rolb
mov
popa
cmp
pop
jb
xchg
push
xchg
push
xor
xor
out
shll
cmpsb
stos
movsb
jecxz
inc
mov
iret
clc
mov
fiadds
pop
insb
cmp
or
or
dec
pop
mov
jecxz
pop
out
sbb
shll
sub
ds
icebp
addl
sub
mov
cmc
stos
into
and
mov
pop
ljmp
aad
or
dec
add
and
adc
dec
xor
pop
rorb
mov
or
lahf
cmp
out
repz
xor
lahf
ds
loopne
sub
fists
lcall
inc
je
push
dec
and
in
jle
adc
or
adc
dec
push
mov
sbb
cwtl
lahf
out
push
inc
push
ss
aad
add
jnp
sbb
jae
mov
js
add
xchg
jne
lss
dec
loop
xchg
cmp
sti
sbb
xchg
mov
jge
pop
lds
insb
or
es
and
jecxz
repnz
movd
cmp
shr
xchg
cs
inc
jbe
stos
mov
jmp
push
and
inc
push
cltd
lods
pop
cld
bound
dec
js
mov
pop
adc
fimull
jnp
pop
insb
test
ret
mov
rcll
mov
push
adc
push
test
pop
push
pop
cmpsl
ja
mov
fimuls
ret
sahf
das
sub
sahf
sbb
mov
jns
pop
adc
filds
adc
in
icebp
add
pop
lahf
xchg
add
push
out
xchg
xorb
pop
bound
mov
movsl
rcrl
call
inc
jg
jae
jo
dec
mov
sbb
popa
jle
and
out
addl
roll
lods
pop
xor
out
xor
lret
cmp
int3
loopne
jne
and
rcr
fs
stos
xchg
push
jmp
ljmp
add
addl
fnsave
mov
lret
stc
jl
in
stos
dec
rolb
cmc
lds
jo
addb
movsb
outsl
jne
or
test
jno
cmp
jg
mov
in
in
call
or
pop
cmp
xchg
out
dec
arpl
daa
icebp
loop
repnz
inc
sti
jno
mov
dec
bound
aad
in
outsb
sarb
mov
je
int
push
mov
loope
pop
jb
mov
inc
aas
scas
inc
daa
roll
aas
mov
add
jo
bound
add
push
out
add
es
sub
sub
dec
loop
xchg
dec
loopne
dec
aam
out
and
xchg
fisubrs
shll
leave
cmp
pop
xor
dec
cmc
mov
pusha
add
jbe
fwait
repnz
sti
adc
lret
xor
int3
jne
lock
fisubs
test
ffree
std
and
cmp
mov
adc
adc
aad
std
imul
fisubrs
imul
repnz
sahf
cmp
ds
jne
shl
ljmp
andps
mov
or
pushf
ja
cmpsb
xchg
xchg
into
pop
push
push
sub
cmp
sbb
rdtsc
pop
sub
dec
xchg
in
add
adc
shrb
imul
mov
sbb
push
lock
cwtl
add
cmpsb
add
jecxz
xor
aaa
push
out
pop
bound
xchg
lret
adc
push
xor
loopne
and
sahf
clc
or
mov
scas
jbe
popa
es
push
fbld
adc
aas
lds
push
xchg
daa
in
stc
inc
xorl
jecxz
xor
push
popa
icebp
xor
stos
bound
test
orb
cld
mov
imul
idivb
pop
jno
sti
in
dec
add
mov
aaa
dec
and
mov
xlat
add
hlt
xor
and
out
adc
out
mov
out
dec
cmp
mov
or
and
test
xchg
dec
mov
xchg
repnz
pop
jmp
add
jp
fisubs
stos
shlb
add
inc
je
pop
aam
mov
pop
adc
pop
sbb
pop
pop
sub
adc
dec
mov
add
cli
lods
mov
mov
mov
lret
pop
lods
icebp
mov
test
das
cmp
mov
js
xlat
xor
cli
sti
jle
jnp
add
add
inc
shl
jge
fadds
call
sahf
push
nop
adc
cld
add
daa
dec
fnstenv
mov
sub
and
stc
outsl
mov
jp
pop
pop
jb
dec
dec
mov
out
outsb
push
sbb
imul
pusha
dec
scas
and
insl
pop
outsb
aam
mov
scas
push
jno
xlat
negb
lods
inc
inc
mov
int3
add
pop
mov
dec
add
xchg
fbld
jae
xchg
lea
mov
pushl
fidivrs
inc
mov
addr16
sub
xor
push
mov
lods
pop
lods
jg
je
call
test
gs
mov
add
cmpb
sbb
sub
adc
loopne
add
push
or
xlat
mov
adc
sbb
fdivs
push
xchg
call
pusha
push
fstpl
push
fs
cld
mov
aad
push
stos
stc
mov
je
arpl
push
fcomi
cmp
dec
inc
sbb
scas
aaa
sti
adc
loopne
test
pushf
mov
cmp
inc
les
xchg
dec
pop
enter
fcompl
pushf
jmp
fsubrl
shl
push
out
dec
mov
cmc
out
inc
push
sarl
mov
push
cltd
fs
into
pop
jb,pt
xchg
xor
push
push
int3
out
mov
cld
ja
xchg
pop
shrl
inc
push
inc
push
sub
in
inc
or
ds
jmp
neg
push
cmp
pop
jecxz
and
xchg
sub
std
jmp
push
sti
adc
iret
and
push
add
jae
adc
pop
insb
ret
test
xchg
adcl
mov
xor
mov
in
aam
sbb
jg
hlt
addb
daa
pop
ljmp
add
fmull
adcl
jl
mov
lds
adc
fwait
sub
lret
cltd
xor
dec
or
jge
scas
shrl
in
or
jne
inc
mov
cmpb
xlat
mov
scas
and
jmp
lods
add
sub
test
cmc
jge
add
mov
in
inc
mov
psadbw
sarb
out
pop
or
pop
pusha
pop
scas
sbb
mov
cmpsb
outsl
rorb
xor
or
push
and
mov
push
ja
sti
adc
repnz
or
xchg
in
add
jmp
mov
jl
pop
cwtl
out
sahf
adc
lcall
insl
sub
fisttps
mov
xchg
into
adc
out
lahf
in
js
hlt
cwtl
mov
jnp
xor
imul
push
xchg
das
cmpsl
adc
or
aaa
mov
push
mov
xchg
jnp
fdivp
cmpsl
test
jno
arpl
jge
and
xchg
jmp
inc
ss
pusha
lret
mov
inc
movsl
bound
or
dec
inc
pushf
hlt
in
in
call
mov
and
bound
xor
add
cli
dec
sbb
repz
add
or
adc
or
ss
pop
jne
movsl
sub
and
inc
and
enter
mov
test
nop
rcrl
inc
mov
insb
sub
movsl
adc
inc
insb
test
or
mov
and
adc
xchg
popa
xor
xchg
cmp
and
enter
add
stc
out
mov
xchg
sub
inc
jmp
andb
cltd
add
aaa
jecxz
sbb
dec
clc
mov
or
push
out
lcall
int3
arpl
xor
sbb
andb
test
cmc
xchg
jp
and
aam
pop
addl
aam
or
lret
addr16
aaa
jnp
mov
je
fists
test
cmpsb
lds
xor
xor
sub
or
mov
mov
adc
pusha
cmpb
jne
push
jle
mov
xor
aad
push
leave
inc
inc
adc
pop
fisubrs
ret
jo
push
cs
movsl
mov
jo
xor
out
xor
sti
mov
repnz
push
rorl
and
movsb
adc
loopne
and
mov
mov
insl
xlat
pop
cmpsb
pushl
jecxz
es
mov
or
aaa
jo
jns
pop
fcoms
enter
add
jge
je
xchg
inc
jne
push
popa
and
mov
scas
push
mov
in
ss
push
add
mov
cmp
push
xor
cli
ljmp
mull
add
jnp
xor
add
mov
ljmp
xor
dec
repnz
jge
pop
ret
iret
adc
or
xor
dec
xchg
inc
pop
cmp
pop
cmp
mov
call
and
xor
ljmp
lods
lret
sbb
cmp
pop
jnp
roll
sub
test
inc
xor
in
xchg
adc
cli
mov
cs
rcll
push
jns
mov
mov
popa
push
in
and
jmp
mov
ficoms
jnp
and
fadds
cmc
add
insb
mov
and
bnd
and
jmp
pop
stos
sahf
int
cmp
sbb
add
imul
jb
xor
mov
sub
pushf
and
cmp
or
or
int3
ds
mov
imul
aas
fdivl
push
xor
pusha
xchg
dec
pop
or
ss
dec
sub
les
dec
mov
lahf
inc
pop
fstpl
xor
stos
and
pop
and
negb
mov
jns
rcll
ret
add
sbb
outsb
jnp
push
xlat
in
mov
xor
xchg
sub
jns
je
in
and
lahf
adc
fldt
sbb
cld
aam
push
sbb
push
or
ret
out
add
cmp
dec
mov
sub
ds
xchg
ljmp
inc
mov
xlat
inc
mov
popa
lret
bound
inc
push
mov
jnp
inc
mov
movsl
mov
sbb
sbb
mov
scas
jmp
add
mov
dec
pusha
cli
aad
lea
xlat
js
mul
imul
fldenv
push
cmpsl
fdivr
call
dec
jae
fs
out
pop
xor
fcoml
fwait
xlat
div
mov
lcall
and
dec
aas
xchg
ds
pop
in
cs
or
dec
cltd
insl
jnp
leave
in
push
sbb
mov
ret
adc
cmp
nop
cmp
pop
and
and
test
sbb
fcmovnu
ret
ljmp
sbb
sarb
and
sub
jmp
pop
repz
les
sub
mov
jne
scas
cmp
inc
int
js
hlt
inc
loopne
pop
test
xchg
stc
cmp
rolb
mov
mov
out
fucomp
int
movsb
jl
xchg
ret
cmpsl
das
faddp
cmpsb
or
or
stos
xchg
rolb
or
mov
faddl
xor
int3
in
dec
lcall
cmpb
cmp
sahf
or
mov
mov
pop
imull
add
jnp
cwtl
pop
loope
jge
cli
loop
loop
lea
xchg
lea
nop
cmpsl
sub
bound
shlb
and
push
mov
in
lods
ret
std
fsubs
pop
ffreep
shll
jmp
jle
push
mov
movsb
mov
cmpsb
jbe
inc
addr16
iret
iret
loope
push
mov
mov
or
inc
mov
movsl
dec
jecxz
cmp
stos
jmp
mov
cmpsb
or
jmp
adc
adc
adc
add
aam
fistl
aad
ficoms
or
call
call
or
adc
jp
mov
clc
rcll
push
loop
cmp
clc
inc
imul
cmc
sti
mov
pop
stos
xor
cmp
sbb
fsts
lret
jmp
mov
lret
stc
insl
lahf
ss
les
fidivs
cltd
js
out
push
xchg
adc
and
int3
movsl
cmp
mov
in
lcall
sub
and
fisttpll
enter
xchg
dec
cmpsl
jnp
ja
jnp
je
pop
jp
setne
daa
iret
decb
mov
rol
and
repz
clc
mov
xor
inc
or
das
mov
adc
jbe
mov
xlat
into
adc
cltd
mov
mov
pop
xor
frstor
cmp
jl
sub
insl
push
dec
out
test
les
loop
xorl
xchg
xchg
inc
mov
inc
int
fisubl
inc
and
jae
cmpsl
adc
pop
int3
pop
mov
mov
sbb
arpl
and
pop
aam
aam
mov
jmp
and
cvtpi2ps
mov
or
repz
insl
push
xor
sub
popa
aas
mov
lods
and
push
pusha
jle
and
sub
push
sbb
fstps
add
les
inc
jbe
stc
sub
sub
mov
insb
or
mov
mov
push
and
dec
dec
decl
andl
addps
testb
cmp
jge
and
lds
mov
mov
daa
mov
mov
insb
bswap
cmpl
dec
scas
ljmp
inc
out
push
jne
mulb
mov
inc
mov
orb
dec
and
cli
sarl
leave
sahf
dec
sub
and
aaa
scas
nop
push
inc
cld
je
adc
and
and
pop
mov
insl
pop
pop
stos
sub
xlat
sub
imul
dec
jno
pop
out
and
call
jae
xchg
mov
jle
cmp
pop
push
movsl
xchg
xchg
gs
and
inc
and
gs
mov
mov
add
push
subb
mov
inc
adc
mov
dec
es
movsb
push
jnp
dec
sbb
mov
outsb
xchg
pop
int
and
mov
pop
xchg
pop
jo
mov
add
sbb
push
jo
fwait
lcall
testb
add
loopne
mov
fdiv
popf
es
addl
gs
mov
push
test
dec
inc
jb
inc
into
ret
icebp
incl
xor
jg
lcall
jecxz
subb
and
fwait
add
dec
pop
inc
je
sub
shlb
test
mov
cmp
lahf
adc
das
inc
and
mov
pushf
lds
je
int
or
fisubl
popa
push
sarb
mov
jb
jnp
add
outsl
sti
cmp
popf
ror
nop
js
clc
dec
ss
rorl
mov
jmp
add
lcall
leave
and
fldenv
mov
xchg
mov
ficomps
sub
adc
jg
dec
out
sbb
loopne
leave
cs
scas
sub
stc
std
pop
fs
mov
push
test
popf
pop
cli
mov
mov
mov
jb
sub
push
movb
xor
sahf
stc
inc
lods
mov
xchg
aaa
sbb
push
xchg
inc
sub
pop
dec
mov
mov
aad
pop
aad
aam
mov
cmp
and
jno
cmp
lahf
dec
data16
in
cmc
mov
mov
mov
call
xor
xorl
dec
pop
outsl
push
sbb
lods
or
xor
lods
pop
mov
pop
jb
ds
adc
mov
jo
outsl
push
cwtl
mov
dec
popa
daa
pop
push
data16
cltd
ds
push
or
adc
into
lret
and
mov
push
leave
and
cltd
add
inc
dec
stos
xor
inc
faddl
cmpsl
and
div
cltd
shrb
test
xchg
xlat
movsl
cmp
jnp
jl
pop
arpl
fidivrl
sub
or
mov
pop
jl
cmpsl
push
jg
es
bound
pusha
aaa
nop
jg
inc
clc
shrb
stos
jmp
outsl
mov
cmpsb
xor
inc
cli
xor
loope
scas
shll
xor
rcrb
rolb
mov
sbb
iret
ljmp
mov
mov
rcr
pop
and
stc
or
mov
loop
hlt
inc
add
ret
hlt
pop
xchg
push
jge
adc
mov
jns
pop
adc
sbb
pop
and
pop
lea
js
and
int
mov
fcompl
pop
mov
daa
std
sub
repnz
shl
btr
and
xchg
lods
push
pop
jno
sub
inc
add
cli
adc
cmc
in
push
pop
ret
lock
mov
shll
inc
and
push
in
popf
xor
cmovl
fcoml
cmpsb
test
mull
das
das
xor
xor
cmp
std
push
fs
mov
nop
mov
inc
and
pusha
adc
fsin
shlb
mov
or
lods
das
cltd
fisttps
jno
xchg
scas
dec
daa
jb
gs
sar
negl
push
insb
cmp
andl
or
and
fwait
imul
inc
pop
lods
inc
inc
add
push
addb
mov
fxtract
pop
xor
mov
sub
push
enter
mov
sbb
or
out
inc
int3
xor
mov
dec
and
outsb
jbe
cld
mov
inc
mov
pop
mov
cwtl
fs
mov
sbb
bound
mov
lret
daa
hlt
fs
mov
ljmp
jo
sti
dec
cltd
les
and
fistpll
cmpsl
xor
aam
sub
mov
mov
adc
pop
call
sbbl
lds
in
aad
mov
call
add
test
std
addb
jg
imul
bound
jne
and
jg
aad
cmp
xor
sbb
pop
sub
xchg
inc
stc
repz
and
leave
cmp
jo
inc
inc
cli
leave
movl
pop
cltd
rcrb
jp
pop
hlt
int3
lods
mov
lret
lahf
mov
cmp
bound
pop
push
lahf
push
sbb
movsl
cs
dec
loop
js
lcall
fsubs
mov
jle
cli
rcr
mov
sbb
or
pop
push
push
sub
ret
xor
loope
sub
imul
jmp
pop
mov
cmpsl
lahf
mov
push
jns
cmp
stc
adc
adc
stos
subb
arpl
sub
inc
getsec
add
aaa
leave
or
mov
test
fidivs
stc
add
daa
mov
cmp
roll
pop
xor
mov
fcmove
adc
jns
jl
std
jmp
mov
imul
mov
lahf
rol
call
testl
mov
sbb
cltd
inc
popa
sub
xor
adc
xchg
lret
test
push
adc
xchg
add
rcll
sti
jmp
or
sub
pop
dec
adcb
inc
or
dec
mov
jp
aaa
ret
cmp
repnz
fst
aad
gs
mov
ljmp
insb
dec
aad
push
push
adc
sahf
aas
pushf
mov
loope
jae
xor
int3
inc
xlat
and
cmp
push
dec
mov
leave
inc
lods
fwait
int3
loop
shl
insl
jbe
fmuls
mov
push
ret
dec
pop
rcrb
inc
or
imul
cmp
jecxz
lcall
mov
fmulp
mov
push
cmpsl
jle
add
les
in
repnz
stos
inc
and
lcall
cmpsb
ja
mov
push
jae
jmp
mov
mov
xchg
push
test
call
ljmp
int3
ret
out
pusha
adc
jb
jp
bound
cmc
hlt
xchg
pop
or
insb
adc
sti
push
imul
lds
icebp
add
xchg
lds
dec
jne
test
les
inc
clc
dec
aas
daa
leave
cld
add
shl
cmpsl
int3
fmull
push
or
pop
cmc
hlt
jg
and
out
sub
mov
jne
xorb
fwait
cmp
and
pop
icebp
rol
lret
mov
pop
and
shll
fbld
mov
jg
sbb
js
out
mov
jge
rcll
xchg
into
cmp
insb
sbb
mov
mov
add
mov
cmp
pop
outsb
scas
je
imul
inc
loop
or
neg
adc
xchg
mov
sub
pop
inc
outsl
subb
cmp
scas
and
lret
les
f2xm1
xchg
or
mov
pop
jge,pt
mov
pop
movsb
aad
pop
push
loopne
insb
mov
sub
fwait
pop
dec
dec
loope
dec
cmc
pop
adc
pushf
and
xchg
popf
fwait
add
or
mov
outsb
mov
call
das
icebp
lret
xchg
test
pop
jge
aaa
jo
sbb
into
cmp
mov
jae
in
out
inc
or
stc
push
jp,pn
lcall
adc
pop
pop
fsubrs
loope
lock
and
cmp
cmc
or
bound
and
sbb
pushf
imul
cmp
sub
les
dec
xchg
add
mov
inc
or
imul
xchg
mov
push
jp
dec
idivl
ret
das
push
ror
xchg
jne
inc
push
xlat
cwtl
shrl
fimull
adc
add
mov
push
add
test
xchg
pop
push
mov
push
or
xor
mov
out
jbe
push
mov
jle
bound
jp
lcall
pushf
mov
dec
sub
and
out
cli
xchg
push
fsubrs
lds
lea
cmp
push
repz
dec
lret
add
xchg
push
cltd
push
pop
imul
call
pop
mov
clc
in
lods
mov
or
inc
cmp
and
shll
xchg
xchg
out
aam
shlb
jge
inc
and
mov
push
pop
lds
movsl
push
mov
pushf
push
mov
inc
xchg
imul
dec
or
sbb
cmpsb
ret
cwtl
iret
jecxz
nop
loop
and
adc
popa
xchg
cltd
xor
movl
mov
mov
sub
inc
sbb
test
jl
sbb
icebp
daa
jne
out
dec
xlat
mov
lahf
hlt
aaa
nop
mov
add
pop
adc
jo
dec
mov
inc
cld
mov
jnp
xor
and
jnp
mov
lcall
mov
sub
cltd
push
inc
pushf
xor
jbe
js
push
filds
imul
push
js
sarb
mov
add
jp
notl
into
sub
inc
mov
jmp
xchg
push
xchg
sahf
jg
fldenv
movl
mov
incl
add
stos
jnp
mov
sbb
sbb
mov
push
jbe
mov
and
lahf
mov
pinsrw
dec
les
xchg
js
and
pushf
mov
repnz
outsl
jnp
movsl
and
push
or
and
fildll
pop
in
std
imul
dec
inc
mov
mov
sub
dec
pop
scas
ja
leave
iret
popa
adc
pop
rclb
iret
aaa
fstpt
pop
mov
inc
cmpsl
push
frstor
in
jo
and
loope
ja
ss
or
mov
xor
xor
pop
jae
push
jno
push
scas
dec
push
mov
subb
stos
xchg
mov
add
icebp
stos
pop
inc
mov
test
cmp
or
gs
add
mov
cld
mov
sub
in
stos
cli
xchg
xchg
je
icebp
jge
sbb
inc
je
ljmp
out
and
ds
mov
stos
testl
out
pushf
pop
xlat
addl
arpl
mov
aaa
pusha
adc
xor
pop
pop
lahf
mov
jmp
add
stc
adc
pop
push
or
and
pop
mov
jmp
adc
sbb
movl
leave
popa
cmp
and
and
fmulp
cmpsb
icebp
xchg
jno
adc
cmp
pop
jne
jmp
rolb
cld
stos
pop
icebp
repz
push
xchg
jp
xor
xor
adc
cld
xchg
mov
mov
dec
jecxz
push
inc
or
pop
pushf
rolb
pop
dec
test
jmp
mov
jp
mulb
mov
jno
push
out
push
scas
push
clc
lahf
loope
out
test
dec
dec
mov
rorl
aaa
jle
add
and
sti
dec
or
dec
cmp
jno
imul
fsubrp
or
cs
xchg
pushf
pop
fcoms
mov
out
xchg
aam
and
jp
xchg
pusha
xor
jno
mov
pop
mov
into
pop
pushf
inc
cmp
les
push
in
out
and
imul
dec
jle
mov
loop
and
and
mov
out
adc
pop
push
push
arpl
sub
dec
inc
lret
dec
push
lret
gs
mov
stos
aas
shll
cmpsb
fsubrl
incl
pusha
push
pop
adc
adc
sub
mov
push
sbb
and
xchg
jle
sahf
inc
movsb
xor
xchg
sbb
dec
sub
notl
or
in
mov
jmp
scas
inc
xor
sbb
and
dec
xlat
dec
jg
das
xchg
cmp
and
xchg
mov
test
sbb
push
hlt
movsb
mov
xor
loop
pop
cmp
popa
jae
pop
pop
push
jg
sahf
in
cmp
mov
loope
pop
dec
adc
rcrl
repnz
inc
lahf
xchg
leave
push
movsl
adc
sub
movsl
stos
sbb
sahf
pop
sti
pop
movsl
push
sbb
xchg
or
repnz
pop
mov
or
jle
lahf
jne
lret
mov
loop
pop
jl
sbb
les
enter
scas
shrl
call
in
jl
arpl
insb
jnp
fdivs
test
lods
mov
out
stos
das
jge
add
lea
inc
mov
call
inc
push
es
scas
dec
push
jne
iret
and
lahf
ret
push
negl
pusha
fdivrs
pop
popf
ret
push
ja
sbb
test
sbb
xor
movsb
insb
je
test
xor
fwait
ret
xor
mov
jae
outsl
xchg
loope
mov
sti
sti
jle,pt
push
mov
xor
and
sub
repnz
fiadds
pop
sbb
fs
or
adcb
ja
lock
out
mov
adc
sbb
cwtl
data16
dec
push
icebp
sub
stc
xor
fisubl
test
insl
popa
jbe
testl
mov
xchg
mov
nop
fimuls
sbb
iret
cltd
pop
stos
icebp
int
jbe
inc
call
or
popa
mov
mov
inc
fistpll
dec
clc
jno
inc
xor
sbb
jae
ret
pop
test
jg
jmp
cs
mov
mov
jmp
xor
mov
pop
js
dec
jbe
push
cmp
fcmovbe
test
loope
inc
aad
adcb
jge
cmc
mov
jb
int
mov
popf
xchg
or
in
jne
lods
push
inc
loopne
rorb
inc
bound
jae
sub
movsl
outsl
pushf
xchg
mov
jb
xorl
mov
ficoml
int3
xor
push
and
cli
std
int
lahf
ja
sbb
mov
sbb
push
loope
adc
daa
shlb
insb
lods
les
loope
mov
fstps
cmp
imul
or
cli
mov
loopne
sub
pop
sarb
outsb
icebp
xor
jae
push
fisttps
int
mov
call
pop
in
int3
lret
aas
popa
dec
cmpsl
imul
cltd
mov
pop
stos
dec
pop
movb
arpl
cltd
or
jle
xchg
sub
fwait
mov
mov
dec
adc
outsb
inc
gs
mov
push
andb
lds
ret
lret
popa
xchg
out
movb
sub
scas
add
push
push
pop
sub
mov
add
mov
xor
loopne
inc
mov
push
in
jp
insl
xor
or
add
ja
ss
or
ret
sti
cmp
loop
cmovne
push
jge
lea
scas
repz
sbb
in
sub
pop
and
jle
xchg
xor
sub
mov
scas
xchg
pop
sbb
imul
jne
enterw
lock
shl
adc
or
lods
cli
push
add
xchg
je
fcoms
shll
push
mov
in
sbb
ss
cmp
testb
or
repnz
mov
cmp
in
inc
mov
mov
mov
sbb
aas
mov
xchg
jbe
or
imul
mov
fiadds
xlat
scas
cltd
mov
lcall
sub
lea
pusha
add
dec
xchg
xchg
aas
adc
loop
not
ret
out
inc
jg
jnp
inc
pusha
fistpl
ja
int
xchg
fs
mov
mov
ss
jecxz
jo
sub
adc
shll
cwtl
and
pop
adc
enter
push
push
lahf
sbb
aam
leave
dec
sub
xchg
sbb
jle
sub
pusha
add
mov
sub
mov
lds
mov
outsl
adc
mov
push
mov
cs
adc
or
sbb
stc
xchg
in
sub
cmp
pmaddwd
pop
ret
inc
fadd
int
inc
das
pop
cmpsl
cli
lock
ds
lods
inc
jmp
repnz
out
jne
bound
mov
jo
sbb
shr
insb
rorb
sbb
mov
sbb
addl
or
call
cli
add
out
xor
and
into
ja
jle
push
fnstenv
fmul
outsl
or
xchg
pop
dec
enter
leave
cmp
mov
jno
sub
clc
sbb
in
test
test
sbb
pop
ja
mov
aad
mov
loopne
dec
sbb
mov
sbb
sub
imul
adc
xor
ss
sbb
push
and
std
mov
ror
stc
loop
mov
or
push
xor
mov
add
int
nop
cmp
sahf
pop
push
mov
pusha
lea
out
movsb
outsb
int
xor
or
imul
fsubrl
xchg
in
insl
lds
and
test
push
mov
jmp
out
leave
mov
xchg
and
les
mov
shlb
mov
arpl
mull
inc
jecxz
cmp
jecxz
mov
pushf
shrd
movb
push
in
or
add
adc
loopne
cltd
aaa
push
out
stc
mov
imul
lret
imul
jmp
shr
pushf
imul
cmp
clc
inc
pop
cmpsl
add
data16
loopne
iret
fmull
fcmovu
and
sbb
in
fdivs
pop
pop
push
push
inc
ret
leave
lcall
sub
mov
call
scas
pop
ret
out
pop
mov
jns
sbb
push
adc
aam
xchg
jle
repz
jnp
inc
cli
pushf
es
push
addr16
dec
nop
popl
into
jnp
and
ja
lahf
rolb
mov
jle
sbb
shlb
in
mov
fcomip
push
push
mov
je
and
fs
ja
push
mov
hlt
pop
loope
cwtl
ficoml
sbb
out
pop
mov
int
xlat
pop
movswl
pop
movsl
mov
lods
std
mov
movsl
fiadds
inc
rclb
jmpw
out
push
out
xchg
cmp
sbb
in
sub
je
repnz
mov
sti
out
jns
mov
cmpsb
ret
push
aaa
mov
xor
das
arpl
and
or
scas
push
adc
movsb
arpl
or
sub
call
mov
cmp
jne
rorl
adc
mov
cld
rcrb
pop
and
inc
adc
inc
and
inc
stos
out
add
mov
push
pop
fcompl
fs
repnz
mov
repnz
fmull
outsb
xchg
aas
inc
jno
pop
mov
sub
adc
push
cmpsb
cmp
cwtl
sbb
stc
in
adc
dec
dec
push
lods
xchg
cs
mov
jge
ds
lods
nop
or
out
orl
cltd
out
decb
mov
lret
or
stc
cmpsl
add
inc
cmc
cmpsl
jnp
xor
ds
daa
aaa
push
divb
test
sub
inc
push
mov
lret
jle
adc
sbb
jae
xchg
mov
test
stc
pop
inc
adc
cmp
insl
mov
pop
mov
leave
push
movsl
mov
sbb
mov
xchg
incl
movsl
pop
ror
ds
push
rcrb
das
loop
mov
inc
imul
jge
push
sbb
mov
jns
in
jb
scas
xor
sbbb
push
cmp
nopl
arpl
loope
push
mov
addb
cld
sbb
je
bound
fnstcw
xchg
pop
or
testb
test
mov
fcoms
push
aam
orb
mov
test
setl
mov
xchg
pushl
rclb
xchg
int
icebp
adc
inc
ds
dec
sbbb
and
inc
ja
add
movsl
dec
fwait
mov
pop
daa
sahf
mov
add
push
jl
mov
mov
or
shrl
jmp
sub
int3
fidivl
or
mov
testb
pop
xor
jo
jno
das
daa
jle
jge
test
out
loope
test
scas
pop
mov
or
gs
jp
inc
in
mov
lahf
iret
cli
sub
test
and
movsb
xor
fdivr
loopne
pop
inc
mov
lea
jle
sub
xchg
cmp
pop
bswap
dec
jmp
sub
movsb
xlat
mov
mov
xor
inc
xchg
test
or
lods
inc
jg
sbbb
mov
sub
pusha
xchg
jmp
sbb
incl
cs
and
inc
aas
aam
push
mov
lret
outsb
es
es
jle
test
cmp
arpl
xchg
mov
add
pop
repnz
dec
mov
dec
ret
mov
call
dec
mov
inc
aas
sub
cmp
jns
test
adc
mov
push
nop
flds
repz
inc
pop
mov
dec
test
push
xlat
sbbb
fsubrs
stc
sbb
stos
addr16
imul
loope
mov
lock
jne
sub
lret
push
pop
dec
dec
adc
mov
xor
mov
in
dec
loope
lock
mov
cmpsb
mov
mov
xchg
mov
xor
xchg
jmp
pop
clc
mov
mov
pop
mov
call
out
out
jge
add
mov
mov
clc
and
sub
sbb
icebp
negb
inc
or
out
and
inc
stos
in
dec
and
inc
lcall
adc
outsl
fwait
dec
sbb
cmp
sub
adcl
cmp
sub
ss
cmpsl
or
adc
into
xchg
pusha
pushf
andl
adc
sub
inc
loopne
adc
ljmp
xor
lret
je
push
scas
scas
jecxz
ds
roll
sbb
jne
push
jne
ret
dec
sti
test
lahf
outsb
repz
decb
push
and
inc
bound
test
sub
inc
cmpb
sarb
push
mov
jmp
repz
scas
or
rorb
in
hlt
or
dec
les
ds
xor
push
lcall
rorl
ljmp
dec
jno
iret
mov
div
mov
aas
cmpsl
xorl
cwtl
iret
mov
int
mov
js
ja
scas
test
cld
sbb
rorl
in
inc
int3
roll
adc
sbb
pop
xchg
aaa
shlb
xor
add
out
jo
cmp
and
daa
jl
jno
pop
xchg
sti
clc
lods
pop
leave
scas
add
and
pop
jo
mov
stos
adc
and
push
sti
negb
in
sti
pop
loope
add
aad
pushf
fs
push
loopne,pn
jb
push
lods
dec
lea
pushfw
or
mov
push
push
lret
jl
xor
xchg
mov
aad
cmc
sbbb
pop
inc
sarb
jb
mov
out
vmrun
cmpsl
ret
out
lret
rorb
test
dec
xchg
gs
jle
cmp
testb
ja
adc
fcompl
and
mov
cli
xor
aad
lods
stos
push
popf
cwtl
addb
cltd
cmp
cmp
in
scas
shll
in
push
stos
and
mov
sbb
popa
mov
lods
add
push
negl
mov
xor
in
xchg
aaa
lret
pop
test
push
iret
push
sahf
adc
jno
push
pop
cli
inc
aad
sub
mov
cld
out
fnstsw
addb
jnp
pushf
sbb
sbbl
lahf
inc
in
pop
xchg
in
mov
jns
sbb
aad
cs
mov
and
lahf
fnstenv
dec
jecxz
or
add
jo
push
mov
pop
push
leave
pop
je
mov
movsl
repnz
or
jo
in
push
aad
insb
lods
inc
fldl
and
xor
pop
cmpsl
repnz
int
daa
fidivl
rcr
lock
shrb
in
xchg
xchg
ja
fwait
out
xchg
shlb
fsubp
pop
sti
repz
inc
std
js
add
cmp
mov
add
ss
mov
adc
iret
and
insl
sub
shrb
mov
xor
xor
daa
xor
add
repz
xchg
pop
dec
stos
daa
out
rcr
je
jo
cmpsb
lcall
jg
ret
mov
stos
scas
sub
jl
fs
aaa
push
shrb
ljmp
inc
aaa
push
lock
xorb
sub
cmp
cmp
aaa
jmp
inc
xchg
aad
in
loope
add
aad
xor
lock
cmc
or
jae
or
dec
mov
mov
push
fimull
fwait
ss
popa
scas
dec
outsl
adcb
sub
push
jl
pop
jl
xor
push
xchg
cltd
mov
fcomps
fsub
insb
dec
sbb
and
jb
dec
mov
mov
cmc
ret
pushf
inc
int
in
jbe
mov
call
or
and
fimull
nop
xchg
fwait
or
sbb
lret
hlt
pushf
repz
gs
orb
insl
nop
jne
lock
and
out
push
dec
pop
mov
or
inc
cwtl
dec
mov
mov
dec
xor
enter
leave
jg
ret
xor
mov
xorb
js
aad
xchg
sub
and
cmpsb
outsl
ficoms
into
push
movsb
ror
cwtl
pop
cmp
inc
push
ret
es
xor
and
enterw
pushf
or
fabs
mov
loopne
cmpb
sub
push
push
pop
push
into
cmp
movsl
js
orb
mov
enter
push
or
xor
and
bound
pop
jle
ret
fistl
imul
insb
negb
inc
mov
arpl
lock
cli
mov
mov
rcl
push
pop
mov
push
ss
mov
ds
xchg
pop
push
mov
xchg
pop
pop
push
xor
xchg
jns
sbb
jmp
add
test
lods
dec
aam
popf
dec
les
pop
or
dec
ds
push
and
call
sbb
add
imul
pop
loopne
sub
jne
sbb
xchg
rol
pusha
add
push
or
aam
cli
js
shlb
divl
je
pop
popa
into
sub
data16
pop
lods
add
shl
xor
xchg
xchg
cmp
adcl
arpl
fcoms
xchg
test
and
push
test
clc
dec
xor
adcb
div
xchg
mov
popa
inc
add
out
or
ret
into
jp
lock
or
mov
rcll
rorb
adc
icebp
jb
add
lret
mov
sti
icebp
mov
gs
cli
cs
mov
pushf
pop
mov
fsts
and
popa
add
mov
lods
and
sub
cmp
inc
xlat
out
and
xchg
loop
push
fcmovu
xchg
mov
lods
fs
clc
out
push
enter
mov
adc
subl
add
add
mov
std
rcrb
stc
jg
jl
fwait
mov
xchg
xchg
pop
adc
pop
loop
mov
popl
dec
std
push
or
xchg
and
test
enter
cmp
and
dec
sub
mov
pop
inc
cmp
sahf
xchg
pop
mov
xchg
in
fisttpll
mov
jne
fwait
dec
test
xor
nop
aaa
push
jle
push
popa
mov
sub
or
cmp
cltd
in
lds
cmp
inc
cli
inc
inc
cmp
mov
sub
fistpll
xchg
cmp
imul
add
sbb
mov
mov
mov
lcall
imul
iret
int3
jg
mov
jmp
xor
push
adcl
cmp
dec
pusha
fcomps
dec
mov
dec
mov
fcoms
loopne
js
ja
add
aas
std
adc
lea
dec
xchg
inc
clc
jp
mov
jo
jge
pop
push
bswap
jecxz
inc
adc
xchg
mov
sbb
and
cs
hlt
es
das
xor
lret
sbb
rcll
mov
bound
test
movsb
pusha
cld
insl
mov
cmpsl
insb
dec
push
aad
dec
aam
sbb
lods
adc
and
out
sti
push
cmp
cld
push
shrb
and
dec
add
cmpsl
call
mov
push
cmp
pop
lods
mov
cmpsl
stos
dec
xor
mov
rorl
mov
push
jb
arpl
and
test
test
jno
addr16
loope
xor
or
lcall
sarb
ret
dec
push
dec
mov
mov
cs
cld
and
cmpsb
pusha
add
sbb
xor
in
mov
cmc
ret
xchg
pop
cmp
subb
cmc
call
popf
xor
enter
sarb
out
push
hlt
ret
inc
fisttpl
adc
leave
mov
and
outsl
shl
movsb
dec
js
mov
andl
arpl
addr16
fwait
aaa
jge
mov
lods
push
mov
ds
stc
pop
dec
iret
test
mov
add
inc
mov
pop
jg
bound
xor
insb
iret
inc
roll
ljmp
inc
int3
cli
ds
mov
shrb
pop
inc
mov
add
mov
rorl
add
mov
mov
fwait
sbb
push
aas
pop
add
cmpsl
jne
or
fdivl
mov
jg
push
jnp
xchg
xor
fstpt
mov
test
fisttps
mov
pop
out
mov
cs
cwtl
adc
jmp
mov
add
test
mov
sbb
enter
lock
and
jb
pop
cmp
lods
les
jg
pop
fisttpll
jl
dec
int3
rclb
rcrl
jne
lock
jno
lahf
mov
mov
clc
in
outsl
mov
dec
ljmp
test
lcall
mov
imul
in
sti
daa
push
pop
ret
cltd
xor
nop
dec
cltd
cmp
add
jmp
ja
xchg
mov
out
outsb
add
dec
movsb
and
mov
out
out
pop
push
insl
jnp
je
and
lds
pminub
dec
popa
addr16
xor
mov
jno
pop
inc
xchg
addl
push
xor
inc
xchg
xchg
jns
lods
mov
aam
and
adc
addr16
mov
add
mov
in
lods
add
push
jno
movsb
ficoms
jg
xchg
or
push
add
push
inc
movsb
fs
jl
mov
lcall
mov
enter
dec
inc
movsb
pop
vsubsd
aas
aad
lods
out
dec
test
or
shl
inc
add
arpl
dec
inc
jno
xor
jg
cwtl
sub
jmp
call
es
iret
and
inc
ds
std
jo
lods
lea
insl
test
and
daa
fists
iret
inc
push
addr16
push
add
int
stos
cld
out
ret
xchg
cmp
loope
cld
dec
lret
sbb
inc
and
pop
mul
shll
in
xchg
pop
outsl
repnz
dec
stc
cmp
stos
mov
lock
add
lret
adc
adc
test
adcb
inc
dec
test
cmp
add
push
pop
call
adc
aas
sbb
jnp
push
jae
jb
ret
or
push
or
mov
mov
jo
sub
stc
ljmp
sub
arpl
adc
dec
cwtl
sbb
orb
popa
jle
push
out
mov
jbe
xchg
scas
sbb
subb
xchg
in
push
je
push
lds
sahf
ljmp
xor
jp
mov
enter
popa
cmp
sub
inc
mov
pop
cmp
or
adc
leave
lea
mov
clc
scas
scas
sub
mov
movsl
ficoml
cltd
adc
or
push
mov
xlat
push
imul
adc
lds
aas
cli
or
loopne
loop
mov
jecxz
xchg
xchg
in
xchg
cmpsl
jne
sbb
and
sub
pop
rcrb
add
aas
sbb
cmp
push
aaa
adc
lea
movb
push
aad
xlat
in
add
lods
and
out
mov
sahf
ja
jnp
fisttpll
das
mov
or
sbb
pop
sbb
cmc
out
out
and
mov
mov
sbb
add
popf
out
loope
mov
orl
inc
mov
mov
ss
push
pushf
cmc
hlt
aam
jns
push
pop
popa
movsb
push
and
sar
pop
or
jne
arpl
xchg
loopne
popf
dec
out
int3
mov
int
scas
sub
add
lods
jmp
pop
shrl
add
int
test
out
shr
aaa
or
jns
cmp
xor
add
mov
stos
and
scas
pop
dec
mov
mov
mov
jbe
xor
movsb
cmp
ret
out
pop
cmp
pop
jmp
cmpsl
cmpsl
mov
ss
fnstcw
jns
int
mov
adc
cmove
in
inc
sbb
orb
lret
lea
cli
adc
mov
outsl
gs
push
cmp
pop
dec
adc
mov
xchg
pop
cmp
xor
sbb
xorl
mov
stos
movsl
and
inc
mov
mov
inc
sbb
loop
adc
cltd
mov
sbb
je
sbb
and
mov
xchg
jg
xor
xor
add
sarb
shlb
nop
stos
push
out
icebp
lret
sbb
out
inc
test
decb
and
scas
lcall
mov
je
xchg
sbb
mov
int3
cld
fildl
pop
sbb
hlt
sbbl
lret
stc
loop
mov
dec
outsb
xchg
aaa
movsb
add
mov
jge
pop
sub
push
stc
and
mov
mov
lods
lods
fcmovne
push
cmp
je
add
pop
jl
sub
xor
imul
cmpb
cmp
cli
jbe
adc
jmp
inc
cmpsl
xchg
es
mov
jg
ret
out
mov
test
lahf
mov
dec
aas
je
cmp
aas
lret
ficoml
cmp
adc
fs
mov
jae
popf
jle
mov
ds
sub
pop
cmc
push
repnz
inc
pop
mov
popf
push
jae
sahf
mov
mov
clc
arpl
dec
mov
mov
aaa
xor
arpl
clc
arpl
addr16
outsl
sub
imul
xchg
add
call
aam
jb
add
mov
insb
mov
lahf
pop
add
adc
int3
push
mov
pop
lea
sbb
fldcw
or
pop
lods
mov
js
lods
lods
sbb
iret
mov
hlt
lahf
sti
sbb
scas
dec
xchg
insb
jb
rcrb
mov
pop
pop
lods
sti
dec
push
std
sub
sbb
and
push
loopne
push
int3
lret
mov
andb
dec
jno
aam
loope
xchg
and
xchg
outsl
inc
xchg
stos
inc
popa
mov
imul
adc
xchg
out
jo
pop
sti
je
pop
sub
clc
push
fs
jb
aad
ret
dec
mov
or
mov
addr16
pusha
mov
jne
mov
outsl
ljmp
imul
mov
insb
xorl
pusha
push
cmp
call
pop
mov
sub
lcall
out
pop
mov
pop
pop
daa
cmp
loop
cmc
jae
mov
arpl
movsl
inc
data16
loop
sub
dec
pushf
fidivrl
mov
lret
sbb
cmc
push
mov
in
mov
fdivs
rcrl
test
lahf
sbb
mov
xorw
lret
inc
roll
icebp
sbb
xchg
push
sbb
repz
dec
insl
jns
pushf
xor
pop
rolb
adc
pushf
daa
cmpsl
sbb
add
loop
sub
inc
ja
add
inc
mov
inc
cmp
daa
popa
pop
lret
adc
ds
int3
bound
fstl
inc
cmpsb
sub
inc
lock
pop
rcl
sti
adc
lea
pop
call
mov
mov
mov
pusha
cmp
inc
mov
cs
jb
cltd
pop
testl
push
cmp
dec
add
add
test
pop
inc
adc
or
cmpb
call
lods
out
std
and
out
mov
pop
aas
mov
out
and
loopne
lahf
int
ss
lods
pop
mov
pusha
iret
xchg
ret
fiaddl
mov
xchg
mov
inc
xlat
xlat
cli
das
mov
cmpsl
or
sarl
mov
lods
icebp
ljmp
add
inc
xchg
bound
xchg
dec
ret
in
dec
rcl
cli
xchg
jno
inc
out
lock
or
xchg
lret
sub
jp
jns
in
adc
dec
sahf
mov
test
pop
sbb
shll
xchg
mov
sub
pop
stc
inc
cmp
inc
jnp
pop
add
imull
std
ja
and
leave
loop
rclb
inc
stos
and
in
lds
inc
jp
jno
cmpsl
cmpsb
iret
inc
push
add
hlt
push
push
or
or
and
xor
xor
jge
xchg
pop
push
aad
xlat
xchg
mov
pop
or
enter
scas
insb
inc
test
mov
pusha
mov
mov
xor
jg
cmp
int
mov
adc
and
xorl
aad
push
stos
lea
pop
xor
ja
dec
insb
and
loopne
test
iret
bound
aas
pop
pop
mov
mov
inc
mov
sti
fbld
jecxz
sbb
lret
xchg
xchg
test
adc
xor
cmpsb
xor
sahf
or
adc
stos
lds
sub
lock
mov
je
in
push
pop
xor
add
adc
add
inc
test
idivl
dec
cmpsb
test
mov
add
mov
push
mov
ljmp
stos
jbe
insb
push
add
lahf
xor
push
xor
push
loope
negl
in
adc
add
clc
pop
aas
sbb
pusha
mov
push
mov
loope
test
add
rolb
adc
test
into
lea
cmp
inc
clc
out
inc
mov
in
mov
xor
ret
or
orb
jnp
xchg
adc
in
fldcw
insl
jno
pop
push
scas
jg
sub
mov
sbbl
push
mov
pop
pop
icebp
pop
add
les
dec
xor
push
xor
cmp
sbb
dec
outsb
inc
fistps
std
cli
jl
in
mov
sbb
and
fisubl
jge
xchg
jae
rcrb
mov
pop
mov
push
push
lcall
inc
fstl
mov
push
dec
sbb
mov
rorb
xor
ss
and
jmp
wrmsr
mov
mov
jnp
push
js
aad
or
mov
test
add
xor
imul
sub
out
adc
inc
or
push
mov
and
jp
xor
pop
add
add
push
sub
call
in
out
push
sub
ljmp
mov
mov
xor
push
iret
xor
cwtl
jl
sahf
inc
inc
imul
cltd
sub
push
inc
outsb
mov
add
gs
mov
in
or
sahf
inc
cli
mov
push
int
push
daa
inc
test
xor
xchg
clc
push
jl
cmpsb
data16
mov
add
mov
sbb
cmp
pop
fstps
enter
inc
mov
js
int
inc
add
push
mov
xchg
inc
adc
mov
fmuls
pop
jl
adc
stos
ja
sub
fiadds
xchg
jb
sbb
push
les
add
sbb
ret
push
mov
call
adc
lea
mov
cmp
sbb
xchg
and
adc
cmpl
cwtl
ds
imul
lcall
jle
imul
sbb
sahf
push
pop
dec
push
jg
fs
gs
fcmovnu
sahf
and
and
gs
push
or
add
jl
sbb
movsb
cltd
push
inc
icebp
dec
sbb
xor
lahf
mov
xor
and
adc
adc
fcmovbe
fnstsw
mov
scas
loopne
mov
xor
or
xchg
dec
add
sarl
dec
adc
mull
mov
das
pop
xchg
sbb
mov
mov
add
je
enter
and
cmp
int3
imul
add
cmp
je
scas
popa
push
int3
cli
imul
incl
add
jae
mov
jmp
sub
sub
and
shll
dec
cmpsb
add
dec
pop
sbb
fwait
ja
mov
jg
test
mov
cmp
into
mov
xchg
lods
or
cmp
jnp
stos
out
mov
scas
aas
jle
popa
imul
mov
jae
mov
jno
repz
pop
out
sub
stc
fcomps
or
fdivr
cmpsl
mov
dec
repz
icebp
mov
fpatan
adc
jmp
xchg
adc
mov
mov
mov
lahf
movsb
jl
lret
jno
test
pusha
jecxz
mov
add
cmp
das
cmp
xorb
xchg
adcb
stos
out
sub
xor
pop
fisubrs
in
clc
adc
int
pop
test
xor
fwait
rcrl
lahf
inc
nop
das
out
loope
out
fmull
push
sbb
jmp
rcrb
adc
push
jecxz
mov
inc
adc
in
mov
dec
fstps
test
push
fnstenv
cmpsb
jne
mov
fnstenv
jp
pop
mov
les
scas
jp
jbe
xchg
push
fwait
push
mov
add
jg
fidivrs
add
cmp
xchg
icebp
roll
adc
mov
add
adc
fisubrs
xchg
adc
ret
fstl
adc
mov
xor
xor
xchg
mov
sub
push
das
or
pop
mov
add
push
mov
push
call
hlt
mov
jb
js
cmpsb
outsb
shll
shrb
add
push
rcl
daa
sarb
adc
add
adcl
sub
daa
ret
add
or
sbb
sub
mov
dec
int3
cmc
and
xor
fstps
subl
hlt
dec
cmp
mov
lea
ljmp
or
dec
test
lea
push
xor
testl
fmull
adc
mull
mov
pusha
call
push
loope
pop
jns
push
jne
clc
rclb
cmc
sub
ds
in
push
dec
pop
jge
pop
add
cltd
movsl
push
gs
inc
ret
adc
fsts
jmp
inc
cmpsl
repz
aas
pop
and
loopne
sarb
imulb
cmovge
addr16
call
test
test
or
out
fadds
mov
aam
imul
adc
scas
js
inc
out
pop
sbb
and
mov
cmpb
iret
xchg
pop
jmp
mov
stos
pop
sbb
cmp
xor
out
test
mov
dec
cmpl
aaa
xor
in
pop
jl
adc
inc
mov
rcl
add
sub
jnp
in
cmp
jnp
in
add
out
push
divl
xor
add
fmull
mov
push
mov
int3
xchg
loope
loop
pushf
mov
mov
outsb
popa
dec
push
dec
jno
sbb
aam
xchg
stos
push
lea
jns
fucomi
hlt
push
test
pop
mov
imul
aad
xchg
adc
mov
movsl
jns
inc
inc
cmp
fcomi
inc
cmp
adc
push
rcl
jge
popf
cmp
repnz
sub
mov
jns
rcll
loop
aam
fcoms
scas
hlt
pusha
sbb
push
lret
dec
mov
and
mov
pop
scas
jo
out
ret
xchg
push
mov
cmpsl
nop
mov
jbe
out
xchg
cmp
shrb
out
xor
imul
xchg
out
xor
pop
xchg
xchg
sub
or
rcrb
mov
adc
mov
or
bound
popf
fwait
pop
in
clc
sti
push
push
sahf
fcoml
fsub
mov
xor
push
mov
push
inc
enter
xor
mov
out
movsb
cli
sub
in
scas
push
aas
fcmove
inc
aas
inc
in
fisttpll
dec
sbb
push
xor
negb
cmpsl
mov
shrl
sbb
pop
orl
push
loop
imul
pushf
inc
out
les
stos
fsubs
das
xchg
inc
adc
sti
in
mov
loope
mov
in
mov
outsl
iret
sub
xchg
rcrb
cltd
outsl
adc
add
jg
xor
ret
cmovbe
in
mov
cmc
nop
xlat
jb
inc
add
out
imul
push
in
js
sbb
jmp
mov
aam
sub
pushf
push
xor
dec
lock
shl
arpl
sbb
data16
outsb
stos
xor
push
lods
cwtl
lahf
shll
sub
call
arpl
lahf
scas
push
nop
xor
adc
jbe
adc
test
push
sub
call
add
push
mov
push
addr16
in
or
mov
fcomip
int3
add
push
xchg
dec
arpl
pop
aaa
cmp
cli
out
into
sub
mov
adc
mov
push
cmp
mov
pop
mov
pop
ljmp
push
push
and
outsb
sub
in
aas
sarl
add
sti
popf
xchg
push
data16
pop
inc
sarb
mov
mov
cmp
xor
fs
aaa
mov
mov
jl
outsl
cs
stc
pop
pop
xor
aaa
xchg
into
sbb
cli
stos
jbe
movsl
inc
mov
rcrl
push
fdiv
cld
enter
sub
cli
lds
xchg
js
mov
fisubl
cmp
add
lods
and
mov
mov
or
and
add
jnp
scas
cmc
mov
inc
jecxz
xor
into
adcl
sarb
add
or
mov
sahf
aam
or
cmpsl
or
jbe
repnz
sarb
adc
sbb
ret
sbb
dec
mov
jbe
cmp
scas
out
roll
jb
inc
icebp
sbbb
clc
shll
jns
cwtl
arpl
jbe
fmull
cmp
mov
xor
cmp
pop
stc
mov
roll
fstps
sbb
in
bound
push
fwait
xchg
ret
fneni(8087
and
cmp
xor
jbe
imul
dec
jbe
pop
inc
stos
test
rcrl
lea
xchg
mov
jmp
mov
fstl
or
dec
jne
jbe
xchg
xor
fdivr
lea
and
rclb
jno
addr16
stos
and
adc
jae
cli
in
pop
xor
jmp
mov
or
and
lods
divl
in
sbb
int3
xor
lea
inc
jno
mov
pop
mov
xchg
stos
xor
sub
fadds
inc
adcl
loop
out
addb
fstpt
or
xor
icebp
fnstsw
int
shl
loop
lret
cmp
mov
data16
lds
das
mov
jne
inc
jbe
aam
xor
push
aam
mov
inc
push
les
in
fcomps
push
cmpsl
loopne
inc
shrl
mov
mov
je
inc
fiaddl
jmp
lea
inc
push
fcoml
bound
sub
mov
popl
and
jge
or
lahf
xchg
imul
sarl
push
shrl
push
jbe
ja
cmp
jg
mov
testb
push
sbb
cwtl
aam
cmp
into
jl
enter
sbb
imul
popa
and
dec
test
mov
cmp
sub
sub
sbb
sbbb
xlat
call
mov
add
mov
jp
pop
shlb
cs
xchg
cmp
mov
cmpsl
aas
sbb
cmp
mov
xchg
mov
dec
ljmp
pop
sub
mov
dec
sbb
movsl
test
dec
jmp
leave
movsl
and
loopne
xor
ljmp
mov
shll
lock
pusha
lret
mov
cld
mov
fimull
and
in
out
inc
pop
pushl
ret
int3
mov
dec
test
stos
jp
sahf
add
sub
push
rcrl
push
aas
loope
xor
push
jmp
mov
js
or
xor
out
andb
inc
jbe
add
fxch
idivl
pop
push
lret
and
popa
aas
aad
mov
lods
mov
xchg
lds
push
adc
in
hlt
test
jmp
cmp
dec
and
xchg
mov
fcompl
dec
add
and
pop
add
sub
mov
fists
fnsave
pop
mov
xor
mov
repnz
push
jg
add
lods
cmp
inc
ss
and
sbb
fs
popf
shrl
jg
push
aaa
pop
int3
and
mov
mov
jle
add
js
mov
add
dec
mov
idiv
mov
les
mov
rcrb
xchg
adc
push
pop
pop
push
shll
xchg
nop
add
pushf
outsl
jns
and
add
test
xchg
stc
les
and
pop
cmpsb
iret
jno
sub
stos
cmp
movhps
pop
pop
push
pop
pushf
stos
stos
push
mov
testl
int3
stos
shll
add
dec
sar
jp
pushf
daa
clc
fadds
jns
xchg
cltd
call
clc
dec
lea
xor
or
add
jge
gs
pop
xchg
mov
dec
enter
fcmove
lahf
add
jb
cmp
cmpsl
or
add
mov
in
inc
icebp
mov
mov
arpl
movsb
addl
mov
cmp
xor
mov
xor
loop
xor
movsb
popf
push
sbbl
addl
inc
jnp
dec
daa
in
int3
sbb
sbb
aas
lods
shlb
sub
xchg
push
call
xchg
inc
mov
iret
and
pop
insl
stos
or
sub
out
inc
lods
loop
xchg
or
mov
jmp
jbe
adc
pop
fs
xor
out
adc
sub
ljmp
inc
mov
adc
mov
add
bound
or
jmp
push
cmpsl
lret
dec
clc
nop
cmp
mov
jbe
pop
fidivrs
in
int3
jo
and
in
shrb
test
es
xor
push
das
ds
cmp
push
dec
adc
stc
iret
int
outsb
jns
dec
ret
aam
dec
push
add
fucom
arpl
mov
dec
mov
test
rcr
popa
sub
testl
jmp
sub
into
icebp
shll
jae
ljmp
sub
mov
sub
push
mov
lds
lret
mov
cwtl
xor
or
mov
addb
sti
test
jge
mov
lret
lret
cmp
je
pop
fwait
pop
cmovo
ss
add
sti
pop
pop
push
lcall
adc
lds
or
jp
inc
aas
dec
mov
mov
fisttps
pop
popf
or
in
out
xchg
lock
ja
pop
clc
mov
xchg
xchg
inc
call
inc
testb
and
data16
lahf
imul
imul
inc
cmp
test
daa
xchg
sub
push
cmpsb
xchg
lret
xor
dec
ds
fwait
mov
push
movsb
movl
enter
lcall
clc
mov
notb
cmp
addr16
mov
add
pop
lea
enter
xchg
lea
mov
fbstp
lret
fsubrs
loopne
test
xchg
xchg
jmp
icebp
push
lea
sbb
daa
inc
add
sub
gs
adc
push
insl
inc
xchg
xchg
stc
pop
inc
shlb
shrl
push
dec
cmpsl
sbb
xor
arpl
or
mov
dec
sub
dec
out
out
sarl
add
push
adc
pop
adc
fidivrl
cmp
inc
rcll
ds
test
xor
fucomip
or
adc
inc
push
mov
mov
and
add
mov
jmp
mov
test
lods
xchg
dec
sub
jns
or
jb
test
pop
jp
xchg
pop
mov
divb
push
dec
cmp
decb
imul
stos
mov
or
cwtl
cld
fisubrl
xor
inc
adc
lret
lea
out
jb
inc
pop
and
lret
jo
nop
sahf
sub
test
cltd
lods
outsl
lcall
ficoml
inc
push
mov
cmpsl
mov
icebp
sub
sub
loope
sbb
push
sahf
jg
push
xchg
fnstcw
push
xor
pop
mov
xor
xchg
call
mull
ret
and
jmp
mov
pause
js
sbb
pop
sub
gs
and
lea
das
adc
sub
jge
dec
test
in
lcall
mov
insb
jnp
out
repnz
in
rcl
js
pusha
notl
cmpsl
jmp
lahf
cmp
xor
iret
lret
push
int3
jns
icebp
adc
mov
je
push
add
scas
leave
pop
pop
loop
and
xchg
idivb
or
andl
leave
xchg
push
call
in
out
mov
cld
cmp
ficoml
mov
imul
lcall
cmp
jnp
mov
leave
std
jnp
cmp
fisttpl
or
inc
jle
movsb
pop
pop
dec
mov
stc
push
or
stc
imul
pop
ret
pop
lret
xchg
xchg
negb
fcoml
push
sbb
sbb
xchg
adc
add
push
movsl
call
aad
mov
shrb
lret
out
std
add
loop
mov
add
mov
shl
mov
cmc
stos
rcl
or
add
lret
push
js
jns
ljmp
push
or
and
movsl
push
cld
push
and
popf
lods
pop
dec
pop
mov
aas
loopne
cmp
pop
and
pushf
push
ja
add
outsb
lahf
cltd
jo,pt
lds
call
push
daa
fiaddl
lods
mov
pusha
mov
icebp
cltd
repnz
sub
and
inc
jg
push
cmp
decb
lahf
aas
push
and
cmpsb
mov
cmp
inc
adc
insb
ja
fistpll
cld
cld
xor
push
sub
xor
mov
pop
stc
andl
cmpsl
jae
sbb
ljmp
aam
push
push
loopne
sub
mov
outsl
fisttps
cwtl
outsl
call
scas
add
inc
mov
mov
test
jg
arpl
cmp
jns
scas
cmp
les
mov
loopne
sarb
dec
maskmovq
notl
mov
and
sbb
and
jle
int
xchg
or
and
and
icebp
adc
xchg
adc
pop
cs
pop
shlb
scas
jge
sbb
mov
jne
xor
jmp
fwait
in
mov
test
bound
leave
inc
mov
cltd
mov
ficompl
mov
dec
push
dec
mov
aam
mov
inc
das
xchg
adc
pop
sub
cmpsb
in
call
cmpsl
ds
sarb
adc
jae
inc
sahf
cmp
shll
addr16
push
cwtl
push
cmp
push
mov
out
push
and
add
mov
nopl
mov
movsb
mov
andl
or
lcall
sahf
sub
mov
ja
xor
out
imul
jo
mov
and
cmp
xchg
jb
mov
push
loopne
add
mov
dec
add
scas
ljmp
mov
push
sti
xchg
repnz
neg
in
test
decl
dec
dec
jle
pop
not
dec
jo
xor
addr16
xlat
push
call
mov
adc
mov
das
push
jp
cmp
mov
lock
pop
in
pop
xor
cwtl
and
xor
int3
pop
mov
jo
push
xchg
es
add
test
xchg
jo
stc
add
std
sbb
rorb
rolb
mov
mov
into
push
xorb
xchg
mov
ret
mov
dec
fs
xchg
push
ds
adc
dec
push
sub
push
xorb
movsb
cltd
jp
xchg
dec
push
jl
sub
out
jl
das
shrl
rcrl
mov
sub
subb
lcall
or
xlat
shll
bound
cmp
xor
cltd
sti
mov
loopne
negl
cmpsb
jl
es
jge
fs
lock
add
and
sbb
push
aas
ret
mov
add
test
das
pop
pop
aam
mov
mov
jbe
lret
or
push
addr16
in
ret
push
and
cmpsl
leave
outsl
pop
or
fwait
les
lds
and
adc
xlat
outsl
xor
xchg
or
ss
gs
dec
mov
and
sub
test
and
xchg
xchg
xchg
ret
sub
pushf
lret
shl
in
mov
pop
pop
dec
inc
mov
and
mov
popa
pop
add
sbb
sbb
pop
or
xor
das
insl
jne
stos
jge
fcomi
outsb
scas
xor
mov
mov
sub
dec
fs
sti
push
adc
sarb
sbb
pop
push
outsb
inc
jg
mov
jmp
frstor
push
stos
adc
cmp
mov
sbb
jge
xchg
inc
mov
cld
mov
je
jmp
in
pop
and
lret
jge
idiv
add
out
movsb
fbstp
pop
pop
pusha
cld
shrl
scas
jo
stos
mov
jo
push
shrb
iret
sbb
xor
sbb
loope
insl
sub
mov
outsl
cmc
adc
sbb
adc
mov
pop
push
test
jg
mov
jecxz
or
add
sbb
les
xchg
jg
inc
adc
std
sub
shrb
cmp
fcomps
push
out
xor
gs
push
push
clc
scas
lock
fstpt
fxch
test
adc
mov
cli
push
sahf
fstps
je
rolb
fidivl
js
ja
dec
sbb
insb
arpl
push
add
mov
mov
push
pop
cmp
push
push
mov
jo
or
adc
aam
push
sbb
jg
shl
fwait
movsb
cmpsb
dec
or
scas
hlt
mov
popf
enter
shlb
pusha
je
in
mov
jae
sbb
jnp
call
xchg
xchg
and
insb
pop
test
cmp
pusha
lahf
xor
ljmp
in
cltd
popf
jno
int
addb
mov
out
and
aas
push
flds
dec
cltd
pop
pop
bswap
inc
out
add
adc
jmp
push
adc
jae
fdivl
mov
je
or
shll
loop
jae
jne
pusha
mov
icebp
jl
test
ja
mov
jne
push
sub
jno
mov
xor
push
lods
sahf
lahf
popa
inc
jge
mov
stos
das
or
in
jle
xor
push
xor
loop
dec
out
data16
and
and
inc
cwtl
fiadds
or
xor
inc
sub
cs
dec
fistl
pushf
js
jp
mov
sbb
mov
lret
les
xchg
jno
xchg
lret
or
cmp
sub
cmpb
out
cwtl
mov
test
test
aam
test
test
movsb
std
out
in
mov
cli
aaa
pop
mov
sub
sbb
and
sub
in
stos
mov
inc
dec
movsb
std
dec
inc
inc
inc
inc
lret
repz
pop
ja
dec
xchg
call
cld
cmp
adc
out
push
pop
add
inc
int
adc
inc
int
sbb
es
add
andb
push
outsl
std
jne
mov
pop
jo,pt
pop
fstl
inc
adc
int3
nop
gs
jg
sub
jl
out
lret
jbe
in
js
pop
add
mov
dec
inc
fdiv
inc
fisubrl
sub
ja
xchg
or
push
out
fldcw
sub
xorb
dec
push
dec
jp
addr16
pop
pop
jb
and
outsl
or
mov
jge
shll
jno
cmp
mov
sub
jne
cmp
dec
stos
icebp
cmp
and
jg
sbb
lea
pop
bound
xor
data16
cld
hlt
out
dec
gs
loop
jbe
ljmp
arpl
pop
xlat
inc
push
adc
adcb
mov
shrl
ret
mov
push
jns
jo
test
jg
cmova
cmp
push
sbb
psubd
out
jl
or
dec
add
inc
dec
mov
cmpsb
mov
pop
xor
movsl
in
and
and
mov
add
push
jg
push
jecxz
or
je
scas
cmp
pop
nop
out
sti
rorb
jae
mov
cmc
aas
jo
femms
nop
repnz
cmp
pop
or
mov
cmp
pop
dec
push
iret
and
mov
jnp
aam
pop
testl
or
mov
dec
loop
mov
js
push
mov
into
pop
sarl
cwtl
loop
test
add
xchg
cmpsl
stc
mov
xor
sbb
sbb
rcll
lods
fnstcw
ja
jg
sub
add
fldcw
and
add
popa
xor
stc
dec
push
push
and
adc
xor
sti
es
push
sbb
push
inc
sub
imul
pop
ror
addb
jl
inc
sbb
mov
cltd
sarl
mov
test
pop
xchg
dec
mov
dec
mov
or
and
adc
stos
or
loopw
cmp
fmul
add
mov
push
jg
das
out
jge
mov
out
das
mov
mov
ss
stos
mov
loope
push
adc
mov
mov
cld
ds
and
sarl
int3
imul
xor
dec
sbb
add
daa
lea
add
xchg
add
xchg
ja
push
lahf
aas
pop
sub
dec
repz
jmp
es
imull
pushf
sbb
jmp
arpl
and
cmc
fbstp
push
mov
push
fwait
outsl
das
mov
cvtps2pi
jb
fs
lret
pop
push
or
je
jno
cs
out
ret
dec
dec
ja
jns
dec
in
inc
lret
clc
or
sub
adc
xor
push
or
mov
mov
xor
cmpsb
xchg
dec
jnp
nopl
in
nop
int
and
mov
dec
mov
pop
jecxz
hlt
push
in
imul
mov
fldl2e
js
sub
mov
dec
clc
in
cld
mov
mov
and
push
es
dec
jb
jmp
and
into
loope
pusha
pop
add
outsl
ds
sub
mov
arpl
pop
mov
test
mov
arpl
outsb
mov
mov
aam
ss
and
mov
sbb
add
xor
movsl
sbb
bsf
in
jno
js
in
jge
and
push
mov
add
lcall
mov
jb
jle
test
add
popa
clc
push
add
jb
add
pusha
in
or
fcoml
or
sbb
push
mov
dec
bound
mov
rclb
es
call
outsb
clc
aam
sti
pusha
adc
sub
stc
js
pop
les
repnz
xor
push
mov
mov
cmp
cld
and
pop
cmc
pop
popa
sbb
push
sbb
or
inc
pusha
lahf
xor
sub
pop
add
or
push
adc
adcl
push
cmp
mov
in
dec
std
shrb
decl
les
mov
ss
fstpt
pop
sahf
sbb
lock
ljmp
popf
mov
jne
mov
mov
and
lock
repz
pusha
xchg
jmp
pop
lret
xchg
or
js
addr16
enter
cmpb
mov
inc
sbb
outsb
add
mov
jmp
test
jo
pushf
xchg
xchg
in
stos
xchg
dec
and
add
bound
xor
mov
sarl
pop
in
or
roll
popa
test
xchg
push
out
adc
jp
mov
adc
push
sub
lock
pop
xor
xchg
pop
push
adc
cmpsl
pop
or
push
ja
add
fmulp
and
test
lods
lods
ja
adc
jp
jl
jge
jle
cmp
sti
movsl
lods
cltd
jno
gs
stos
push
ds
sbb
icebp
push
dec
mov
jle
push
stos
aas
cmp
cmc
fbld
lahf
fists
cli
pop
xchg
leave
daa
sub
xor
mov
add
dec
stc
cwtl
out
cld
ds
gs
fildll
mov
sub
inc
fwait
push
mov
jg
cmc
stos
stos
ljmp
aad
cmp
insb
out
outsl
mov
sbb
mov
pop
mov
add
mov
jmp
sub
xorl
push
addb
movsb
std
cmpsl
lock
mov
pop
add
rol
cmp
pop
ljmp
idivl
call
in
jns
jo
mov
dec
sbb
sub
jns
jno
jnp
sub
mov
insb
outsl
pop
lds
or
mov
ljmp
lods
sub
in
repnz
cmp
mov
popf
lret
mov
cmp
xchg
lock
and
xor
mov
cmpsb
enter
xor
sbbb
pop
cld
or
aaa
xchg
dec
cld
push
orl
and
insl
cmpsl
pop
cmp
mov
rcrl
iret
pop
inc
mov
jbe
adc
iret
mov
dec
and
cmc
test
fisubrs
es
mov
pop
sbb
nop
test
dec
adc
scas
mov
repz
jp
jnp
xlat
daa
cwtl
mov
inc
mov
xlat
xor
aam
data16
cmc
xor
imul
jno
pusha
push
scas
daa
mov
cmp
dec
and
ret
jae
mov
jo
inc
test
adc
mov
adc
imul
cmp
ss
loop
mov
lret
mov
mov
inc
in
cmp
orl
jae
add
adc
cmp
imul
push
call
pop
cmc
lds
dec
add
push
pop
test
bound
test
mov
mov
jmp
fistpl
scas
add
xlat
jno
push
and
jns
push
nop
fmull
jmp
sti
jne
fs
adc
lea
arpl
icebp
scas
sahf
pop
xchg
orl
cli
sub
inc
push
icebp
push
andl
lock
push
push
js
xorb
mov
adc
xor
pop
jnp
pop
icebp
aam
mov
outsb
stos
mov
push
mov
jge
rcl
bound
sub
mov
push
cmp
mov
xchg
cmc
xor
sbb
xor
xchg
cmp
mov
jnp
sbb
cmp
push
sbb
pop
dec
data16
lods
inc
adc
stos
sbb
xor
mov
push
shrl
repnz
fwait
popa
les
mov
mov
pop
sahf
mov
sahf
mov
jno
mov
bound
and
jo
fwait
in
push
ss
ljmp
imul
gs
ret
jle
pop
xchg
in
into
jnp
enter
add
and
jmp
push
mov
leave
cmpsl
ja
add
mov
inc
ds
scas
fdivs
mov
dec
xchg
dec
push
sub
jo
aad
or
mov
push
push
pop
cmpsb
push
fldenv
ss
cmp
outsl
rorb
inc
lret
mov
pop
mov
ds
pop
fcomp
xchg
mov
scas
enter
sbb
cli
ljmp
inc
gs
pop
and
jle
cmpsl
daa
mov
mov
imul
adc
xor
enter
mov
xchg
jg
jp
jg
leave
subb
bound
or
lods
jecxz
aas
test
ss
leave
stos
or
testl
mov
into
mov
or
sarb
mov
insl
push
cmp
cmc
sbb
push
mov
pusha
out
mov
and
cmc
dec
inc
adc
das
out
fcompl
cmp
repnz
adc
inc
dec
cwtl
mov
mov
add
sti
in
xchg
pop
cli
lcall
dec
mov
nop
es
faddl
inc
add
cltd
mov
imul
adc
outsl
jns
xor
push
ljmp
cmpsl
fwait
xor
pop
jo
es
mov
pop
jnp
pusha
clc
and
cld
or
inc
das
pop
icebp
push
loope
mov
push
outsb
inc
addr16
mov
pop
jo
inc
jge
mov
or
cli
mov
popf
jae
xchg
pop
into
jecxz
out
or
cmpsl
pusha
mov
sub
fsubrp
dec
mov
sbb
pop
push
int
insl
push
cmpsb
push
xchg
mov
push
xchg
mov
or
int3
hlt
fldl
mov
cwtl
sbb
ss
sbb
dec
icebp
jecxz
das
lcall
insl
cs
das
rclb
push
pop
xor
push
mov
cltd
cli
lcall
jmp
seta
insb
mov
add
loope
jns
stc
xchg
cli
add
lret
adc
cmp
push
xchg
jns
je
xchg
inc
mov
lret
vmovntpd
adc
dec
mov
jmp
pop
push
cmpsb
icebp
xor
xchg
sti
sti
ret
inc
les
mov
repnz
mov
leave
pop
mov
or
std
loop
inc
mov
mov
std
jno
mov
push
cli
cmp
in
pushf
push
mov
aaa
popf
jl
int
lret
mov
popf
mull
xchg
mov
xlat
jb
int
and
dec
cmpsb
xor
cld
loopne
pusha
sbb
bound
sbb
cmp
shll
pop
sub
cltd
dec
popa
mov
fwait
cmc
lret
inc
outsl
aaa
mov
ss
mov
daa
das
test
lods
or
mov
lcall
pop
push
bound
popf
test
lahf
cmp
cmp
and
jg
or
sbb
mov
jg
ret
insb
test
cmpsb
cmp
push
rorl
push
lods
aad
jns
sbbl
jle
push
mov
dec
pop
inc
orb
cwtl
cmc
lahf
sbb
mov
cmpsl
hlt
daa
scas
inc
sub
arpl
add
or
arpl
dec
mov
jp
sbb
sub
lret
mov
sbb
pop
mov
pop
xchg
subb
mov
mov
ss
bound
cmc
test
ret
cli
xchg
pop
inc
mov
xor
sub
ja
outsb
shll
add
mov
adcl
mov
adc
popa
add
cmp
aam
lea
sbb
dec
ja
pusha
daa
in
xchg
xchg
les
dec
sarl
loope
clc
movsl
adc
jmp
cmp
jnp
out
jnp
dec
in
pop
rol
loop
inc
adc
mov
jp
lods
shrb
repnz
mov
mov
pop
imul
xchg
adc
insl
lock
pusha
fs
pop
call
loop
dec
add
push
inc
adc
popf
jb
push
and
je
xchg
insb
xlat
fadds
cs
push
xchg
push
les
add
xor
sahf
xor
ficompl
movsb
fdivrs
xchg
pop
mov
and
mov
aas
xchg
repnz
sub
into
gs
into
in
repz
jge
adc
xor
testb
mov
lcall
rolb
inc
push
mov
xor
sub
inc
cs
sbb
sti
add
arpl
lds
inc
cltd
ljmp
mov
lods
mov
nop
repnz
insl
mov
jmp
jns
dec
jno
aad
or
es
xor
or
inc
sub
test
clc
outsl
xor
jp
cmp
stos
jno
cli
adc
gs
fldt
xchg
pusha
push
into
daa
and
push
adcl
movsl
add
or
fadd
int
hlt
mov
mov
mov
jne
int3
test
arpl
scas
nop
xchg
fcmovnbe
data16
dec
aaa
xlat
sub
ret
xchg
lock
sarl
cmpsb
fcoml
and
scas
mov
jecxz
mov
mov
stos
pop
jmp
pop
inc
mov
inc
aad
xchg
bound
sbb
lods
adc
imul
or
or
mov
xchg
jg
sub
inc
out
cmp
rolb
sub
popf
fcomip
out
pop
lret
pop
shl
mov
jle
jle
fiadds
mov
xor
orl
pop
jo
sub
jno
gs
test
mov
clc
wbinvd
pop
dec
movsl
adc
or
ss
mov
lds
pop
cltd
mull
fldcw
fildl
andb
movlps
xor
jl
jp
scas
cmc
jg
push
ret
xchg
xchg
fistpll
cmp
roll
xor
mov
out
and
hlt
stos
push
xchg
mov
push
out
jp
push
lret
adc
xchg
lock
aas
push
out
loopne
mov
loop
cmpsl
and
popf
sub
add
xchg
inc
push
in
int
mov
and
sbb
sbb
shlb
mov
out
adc
inc
lods
xchg
mov
cli
mov
push
xchg
test
inc
mov
dec
rorb
mov
and
cmp
jecxz
dec
inc
jae
test
pop
les
iret
fcmovu
aaa
push
cmpl
sbb
push
adc
stos
xchg
jne
scas
addr16
and
mov
pop
xchg
popf
out
sub
sarl
repnz
ret
add
ja
fwait
bound
repz
xlat
int
cmpsl
fmull
sbb
sub
fs
and
cmp
nop
mov
mov
scas
inc
test
adc
dec
sbb
out
cmp
sahf
in
cwtl
movsb
aam
call
in
hlt
movsb
jnp
mov
ret
jbe
add
mov
adc
dec
mov
add
cmp
push
ss
sahf
xchg
xlat
pop
or
pushf
dec
xchg
popa
adc
add
movsb
cmc
lds
dec
lock
adc
leave
imul
pop
mov
shlb
jnp
pop
push
add
inc
adc
popa
out
or
sub
cmp
xor
sub
xchg
loop
pop
push
in
gs
insb
push
insl
aam
ja
in
mov
jl
movsl
mov
sub
push
andb
int3
jbe
out
fdivs
dec
nop
lcall
jne
sbb
dec
mov
movsl
insl
pop
adc
lea
mov
pop
punpckldq
sbb
adc
mov
sub
aas
aam
lahf
lret
pop
inc
jp
xor
jg
rcrl
inc
and
out
aad
sbb
adc
movsl
dec
push
sahf
icebp
jbe
loop
sbb
nop
rolb
sub
jle
inc
mov
xchg
or
ret
std
lcall
in
xchg
and
mov
loope
test
sarb
lods
into
sbb
ljmp
or
subb
mov
rcr
inc
xor
filds
inc
jno
sub
sub
jp
push
or
mov
jg
jns
sbbb
add
mov
in
mov
sti
mov
repz
fmull
lds
insl
bound
mov
sbb
hlt
cmpsl
lcall
call
incl
ljmp
xchg
lock
sbb
push
lret
pushf
loope
cmp
push
rorb
mov
sub
cmpsb
das
adc
adc
adc
pop
out
outsb
mov
adc
enter
rcll
fcmovnu
scas
xchg
xchg
aad
pop
sub
inc
xor
loopne
test
jp
and
sub
dec
repz
pop
dec
dec
pop
adc
fistl
mov
loop
pop
xchg
xor
push
sub
int3
sbbl
das
lods
pop
ror
insl
jns
call
jns
pop
fisttpll
push
rclb
lea
ds
fwait
and
or
cmp
arpl
jo
enter
test
loope
xchg
xor
test
or
pop
mov
jmp
fcmovnb
sbb
push
loope
fildl
inc
dec
js
stos
mov
sbb
fcmove
jb
push
jp
repz
cmpsl
mov
rcr
push
inc
data16
push
mov
mulb
xor
add
mov
xor
dec
insb
and
pop
cmp
mov
xchg
pop
lds
mov
int3
hlt
ljmp
sbb
mov
js
add
mov
inc
add
fdivrs
pop
dec
lea
lock
add
icebp
push
jo
out
movsb
add
jb
jb
sub
divl
fdivr
push
push
dec
fs
jg
adc
clc
je
cmp
pop
mov
dec
jle
test
and
mov
sub
pop
in
jb
les
movsb
push
mov
push
out
scas
jg
xchg
pop
jnp
ja
jle
aas
adc
hlt
lea
ret
insb
loopne
dec
push
mov
and
lods
stos
xorl
cmp
outsb
test
mov
jp
add
scas
ds
ficomps
lods
adc
mov
cmp
pop
xchg
inc
or
inc
dec
or
dec
stos
lods
movsl
and
mov
stc
cmp
pop
cmp
xchg
jmp
cmc
je
add
loope
cmp
mov
mov
xor
shlb
out
movsl
or
fnstsw
outsb
cmpsb
ffreep
xor
out
jno
mov
stc
addr16
add
sub
mov
xor
add
and
imul
scas
mov
in
lds
movsl
cs
movsl
sbb
mov
cmpsb
pop
mov
into
lahf
out
hlt
sbb
cmp
fst
mov
daa
faddl
sbb
imul
enter
repnz
sahf
xchg
pop
jne
jmp
jl
das
mov
xchg
fwait
repz
xor
xchg
sbb
ret
jne
hlt
cmc
inc
dec
aad
cmp
or
push
loopne
dec
popf
sarb
xlat
xchg
call
xchg
imul
cmp
fld
aam
repnz
cwtl
lods
cmp
lahf
xchg
jecxz
xor
adc
cmp
or
sbbl
pop
into
xchg
std
and
mov
pushf
cmpsb
push
ja
dec
adc
add
movsb
pop
in
push
mov
jo
mov
dec
ret
mov
mov
and
rol
orb
xchg
mov
in
xor
pop
or
adc
dec
push
dec
jmp
imul
add
inc
pushf
xor
pop
and
and
mov
mov
adc
jg
pop
adc
js
into
jg
lret
aas
dec
bound
insl
outsl
mull
mov
jo
lcall
std
mov
cmc
mov
mov
pop
jb
test
lret
mov
xor
mov
rcl
push
push
divl
data16
push
mov
pop
xchg
mov
outsl
add
sbb
aad
shlb
pop
imul
push
lcall
lds
cwtl
loope
test
push
inc
das
mov
fsubs
shlb
test
test
add
sbb
pop
out
icebp
push
jmp
jmp
scas
inc
icebp
in
xchg
mov
pop
xchg
divl
mov
add
jl
xor
leave
insl
sbb
push
popf
lret
push
push
add
shrb
xchg
cmp
in
stos
pop
inc
jecxz
pop
fimull
push
fcomps
jg
test
insl
mov
sub
test
orb
cmpsl
cltd
mov
and
add
testl
stos
mov
adc
xlat
shll
adc
cs
rcll
test
xchg
fistpll
cmpsb
dec
dec
push
mov
sub
or
dec
mov
mov
inc
mov
fstps
rcrl
into
imul
das
cmpsb
leave
lock
int3
cmp
je
jne
mov
cmp
cmp
or
sub
xchg
movsb
call
sub
mov
mov
inc
lock
push
sbb
add
and
cmp
mov
test
dec
lret
sub
push
sti
push
inc
stos
sub
movsl
arpl
cmpsb
pusha
int3
cmp
inc
imul
pop
addr16
pushfw
adc
jg
cltd
fwait
pop
jge
pop
mov
shrl
in
addl
xor
mov
into
ss
jne
jge
mov
movsb
call
jo
and
xchg
mov
xchg
xchg
arpl
xchg
shl
jmp
inc
sub
or
jl
and
out
dec
fbstp
mov
aad
add
sbb
cmovno
fs
sbb
loopne
xchg
mov
in
add
bound
cmp
in
call
inc
orl
in
pop
mov
mov
jg
mov
mov
loope
into
or
fwait
je
add
cmp
push
lret
mov
lret
enter
fildl
insb
mov
in
popl
in
vunpckhps
push
notl
fbld
xor
subl
or
addr16
mov
int3
hlt
ret
mov
adc
pusha
sbb
imul
mov
lods
inc
cmpsb
icebp
and
iret
sbb
xchg
les
fs
orb
push
add
fisttpll
jne
rep
sahf
xor
jg
fadd
mov
outsl
dec
int3
pop
pop
xor
popa
es
stos
xchg
adc
xchg
pusha
sub
cmc
jmp
in
adc
push
std
iret
es
ret
mov
cmpsl
mov
out
scas
xchg
daa
js
pop
xchg
cwtl
lret
movsb
stos
mov
das
repz
adc
mov
sub
mov
add
inc
cld
jae
lock
sti
dec
sbbb
out
addb
das
jae
popa
lcall
lods
fistps
jle
cmp
mov
jge
test
or
mov
jbe
mov
pushf
outsl
jp
jmp
jecxz
leave
jbe
pop
lret
cmpsb
jb
pop
mov
mov
loop
cmp
inc
jl
out
mov
xchg
jp
shlb
pop
ds
inc
insb
push
cltd
xchg
cmpsl
in
pop
sbb
gs
mov
pop
stos
fld1
daa
mov
pop
lock
clc
idivb
iret
es
sbb
movsb
aas
loop
mov
out
dec
and
fists
fwait
jae
int3
mov
mov
add
pop
mov
xchg
mov
adc
addr16
adc
bound
mov
push
mov
mov
push
loopne
add
mov
pop
jns
addl
mov
stos
cmp
lock
xlat
push
add
jno
jne
xchg
mov
ljmp
outsb
push
sub
mov
fldl
fsub
cmp
fsubr
std
rclb
loopne
pop
pusha
mov
sti
mov
push
sbb
cmpb
insb
mov
aas
adc
mov
xchg
mov
mov
lock
scas
fldt
test
push
jne
popf
fidivs
push
xor
and
jle
leave
loop
mov
or
sbb
cld
repz
adc
cmpsb
dec
adc
das
dec
mov
test
push
push
insl
mov
lahf
stc
cmc
or
and
pop
test
push
inc
ret
jle
es
xchg
push
popa
adc
inc
idivb
mov
mov
cltd
push
inc
or
xchg
pushf
mov
or
and
add
bound
aad
dec
add
mov
cs
cwtl
aad
mov
int
mov
xor
jmp
xor
enter
int
sub
shl
dec
aaa
push
scas
and
jmp
xchg
sti
inc
add
out
sub
cmp
sub
cmpsl
test
push
mov
inc
ljmp
dec
test
aad
xor
call
in
adc
enter
andl
divl
sbb
mov
andb
dec
pop
dec
ljmp
push
test
or
shll
fisttpll
sub
pop
inc
inc
sbb
push
jp
std
mov
lahf
into
dec
xchg
push
mov
xchg
in
cmp
movsl
pop
push
or
test
not
aas
pop
and
movsb
stc
into
inc
subb
mov
xchg
xchg
test
sub
mov
xchg
leave
push
jnp
pop
adc
clc
pop
stos
xor
pop
xlat
xchg
mov
pop
lcall
fidivl
insl
iret
pop
aaa
mov
rcrb
push
or
int3
inc
call
pop
mov
test
test
popf
jp
pop
push
repz
iret
sub
lods
lods
loopne
mov
test
inc
mov
cli
dec
loopne
in
xor
push
clc
mov
test
push
xor
xchg
pop
cmp
ja
pusha
jmp
clc
inc
adc
cmc
int
ss
mov
inc
rcrb
xorl
xchg
popf
xchg
lret
mov
push
stos
jbe
pop
dec
pop
ffree
mov
sbb
mov
mov
add
sbb
inc
push
cmpsb
je
repz
jmp
into
popf
stos
mov
mov
lods
xchg
mov
xor
jecxz
test
popa
xchg
or
dec
jle
or
jne
push
push
xor
sub
xor
mov
daa
inc
sub
pop
or
iret
sbb
pop
dec
fistpll
iret
jo
jmp
mov
cmp
inc
xchg
fs
jmp
push
pop
add
mov
add
stc
andl
pop
inc
dec
out
pop
fwait
ja
jnp
in
outsb
pop
dec
xor
in
loop
lahf
dec
in
add
pop
sbb
fisubs
push
scas
mov
bound
xchg
inc
xchg
fnsave
shrb
fwait
icebp
mov
pushf
pop
and
test
subb
mov
mov
fwait
sub
std
cmp
mov
mov
loope
xorl
push
sbb
scas
and
sbb
mov
data16
ret
pop
into
push
call
push
je
pop
mov
loopne
mov
mov
pop
orb
xchg
inc
xchg
push
jo
cli
lret
push
mov
push
dec
jae
cmp
xor
pusha
in
xor
aaa
jno
out
cmpsl
enter
mov
in
mov
pushf
adc
flds
cmpb
sahf
ret
fidivrs
call
mov
mov
pop
cwtl
add
cs
xlat
mov
das
jecxz
cltd
stc
sbb
fs
icebp
lods
xchg
mov
or
or
fistl
dec
sub
jecxz
rorl
sub
push
sbb
sub
pushf
sbb
std
xor
pop
sub
popa
sbb
les
pop
in
inc
mov
cmp
test
mov
fnsave
mov
cwtl
inc
dec
shll
adc
pop
add
imul
aas
jb
addr16
fwait
pop
adc
jae
xor
filds
adc
das
bound
jae
push
sbb
or
mov
stos
jmp
mov
xchg
and
xor
cmp
clc
and
icebp
daa
shrl
jge
sub
leave
dec
andl
inc
jbe
ret
push
cld
std
xor
xchg
cmp
movsb
mov
inc
mov
pusha
and
dec
stos
and
cld
bound
sarb
cld
shl
pop
sbb
cmp
jns
and
mov
mov
push
adc
jl
adcl
mov
cmpsl
scas
xchg
ficoms
cwtl
insl
out
je
cmp
loope
insb
xchg
shrl
cmp
scas
mov
pop
fwait
dec
cmp
sub
in
push
jae
roll
jns
ljmp
test
mov
and
inc
ja
loop
mov
lods
or
sahf
cmc
popf
loopne
sub
add
out
scas
cli
dec
lock
jl
inc
push
int
add
jo
dec
out
or
sbb
inc
jnp
xor
stos
jp
stc
adc
ss
or
int3
add
stos
xchg
cmp
repz
popa
addr16
dec
mov
in
sahf
push
pop
pop
lret
and
jecxz
pop
popa
out
sarb
cmp
enter
sbb
pushf
into
daa
and
or
adc
push
dec
pop
in
or
xchg
inc
pushf
or
inc
xchg
lods
out
push
dec
ret
js
or
jmp
lcall
std
loop
xchg
mov
test
adc
test
adc
dec
adc
adc
in
jnp
data16
mov
xchg
imul
les
sub
popa
mov
popf
dec
repz
pop
shl
xor
pop
mov
shrb
stos
fs
cmpsb
lahf
adc
pop
mov
test
sbb
jmp
add
mov
in
popf
rcrb
xchg
add
jecxz
sbb
movsb
test
mov
mov
push
imul
andb
test
add
sbb
stc
cli
pop
jns
mov
fsubrl
scas
mov
jns
mov
push
lea
incl
xchg
mov
jl
push
sbb
inc
div
pop
es
mov
jbe
push
das
adc
es
dec
shrb
xchg
jg
jge
sbb
addr16
je
mov
cmpb
inc
add
sbb
mov
mov
xchg
pop
in
repnz
cwtl
jnp
add
push
xor
jo
add
xor
push
aas
push
push
movsl
add
test
inc
and
adc
aaa
lock
xor
pop
pop
fcompl
cwtl
nop
sbb
les
imul
js
cmp
ficompl
mov
sub
dec
scas
adcb
mov
mov
xlat
in
mov
xor
mov
jno
push
inc
sbb
cmp
push
adc
sbb
xlat
ds
lret
sahf
mov
cmp
dec
cmp
pop
push
ss
repnz
dec
mov
fldl
adc
jns
jmp
inc
pop
sbb
cmp
aaa
push
cmp
bound
mov
daa
mov
inc
dec
xchg
sbb
inc
aas
sub
push
push
cli
adc
fsubrl
mov
adc
jmp
mov
dec
daa
mov
mov
ret
out
cmc
fmull
mov
sbb
bound
mov
scas
adc
andl
inc
jmp
adc
push
cltd
cmpsb
mov
jae
jl
int
out
lret
cmc
inc
or
in
mov
out
jno
aad
es
loope
insl
maskmovq
negl
jns
mov
adc
push
pop
push
mov
dec
mov
pop
imul
movsl
bound
jbe
xor
xchg
and
jp
sub
sarl
lea
ret
mov
scas
xor
aam
sahf
shr
in
pop
adc
push
mov
shlb
push
sbb
dec
jle
sbb
pop
sbb
notb
jp
fwait
fs
test
daa
mov
aas
xor
or
cmp
or
sub
hlt
sti
mov
pop
mov
vprotq
insl
notb
or
jno
xor
sub
push
inc
shl
mov
inc
ror
cli
pop
add
cmpsb
ds
int3
pop
loopne
inc
sarl
mov
ret
add
imul
aam
shll
mov
mov
cmp
xlat
ss
aad
mov
sbb
push
test
lret
push
xor
call
out
jae
outsl
imul
lods
or
std
stos
lods
jae
cmpsl
in
cltd
add
jno
mov
cmc
imul
sbb
addr16
loop
fst
jne
into
jecxz
stos
xchg
dec
cs
jne
lahf
pop
add
cmpl
dec
xor
divl
loopne
fisubrl
pop
sti
lahf
ret
test
mov
xchg
xchg
popa
icebp
and
cwtl
in
inc
mov
icebp
repnz
lods
or
xlat
push
call
jae
xchg
jbe
mov
mov
add
repnz
cmpsl
adc
fimuls
addl
inc
or
mov
adc
aam
lret
push
cmpsl
popf
push
in
scas
loop
nop
adc
push
or
or
inc
insl
push
movsb
push
sub
leave
mov
xor
adc
xlat
add
pop
negb
fcom
push
inc
das
outsb
push
add
gs
out
bound
mov
lods
sub
mov
divl
and
popa
sti
pop
mov
mov
mov
call
jns
addb
fwait
js
mov
xlat
mov
insl
mov
jg
enter
ret
fadds
in
imul
mov
inc
pop
pop
into
or
fwait
adc
data16
dec
or
adc
add
and
ds
cli
cwtl
pop
and
test
inc
jle
rcrl
dec
ljmp
xchg
jbe
aam
stos
mov
push
dec
jb
arpl
imul
out
in
and
adc
clc
mov
mov
movsb
rorb
xchg
pushf
ss
inc
movsl
and
or
push
add
xor
adc
jl
adc
jg
jns
mov
inc
sbb
repz
test
jns
mov
mov
gs
push
subl
mov
push
cli
cmp
repz
popf
mov
int
push
je
sti
jl
repz
jno
push
orb
mov
xor
outsb
sarl
in
pop
ds
repnz
aaa
dec
add
xor
xor
leave
pop
pusha
xchg
jo
cmpsb
movsb
add
pop
push
arpl
mov
cmpsl
dec
shl
icebp
popf
hlt
jp
and
jnp
les
or
pop
popf
adc
push
insl
xchg
sub
jno
push
fildl
cmp
xor
pop
pop
or
stc
aaa
test
adc
mov
fnsave
jne
jns
add
ja
pushf
clc
lret
dec
jb
int
push
insl
pusha
cmp
sbbl
mov
sub
stos
dec
sbb
inc
cmp
push
push
sub
mov
or
inc
mov
mov
jbe
arpl
or
inc
dec
insb
mov
push
sub
cmc
inc
jnp
jge
outsb
imulb
hlt
pop
cmp
add
aad
decl
and
call
ret
push
cmp
cmp
or
jae
repz
jp
jmp
cmp
push
cmp
mov
pushf
out
call
sbb
loope
fsub
mov
int
mov
rcrl
adc
mov
add
test
addl
repnz
repz
push
testl
push
and
sti
jp
mov
adc
lret
mov
pop
jle
in
or
stos
leave
arpl
arpl
out
mov
enter
push
or
div
flds
xor
jno
mov
add
ror
dec
push
or
stc
lods
cmp
aas
mov
push
adc
xchg
and
shll
inc
push
cmp
push
sbb
fdivrl
stc
add
mov
dec
dec
pop
shl
xchg
lahf
cmp
and
outsb
jne
pop
stc
cwtl
sub
sti
push
stc
mov
or
das
mov
or
movsb
mov
cs
sub
movsl
sub
jmp
add
jle
mov
das
mov
cmp
xor
pop
shl
push
or
add
and
sub
cltd
in
push
das
test
push
push
in
mov
test
cld
imul
mov
push
movsl
sbb
and
push
pop
mov
out
mov
lret
pop
nop
aaa
cwtl
and
xchg
addr16
mov
pop
dec
jp
fucom
cmp
lods
push
sti
inc
sub
fldl
out
pop
adc
xlat
out
fldenv
xchg
jl
test
xchg
inc
stc
int
pop
jmp
enter
mov
mov
mov
mov
rolb
loope
pop
lods
aas
enter
fstl
lock
mov
sub
xor
cmovb
jae
xor
lcall
add
push
jb
pop
mov
pusha
mov
daa
jl
aad
in
add
hlt
fadds
gs
cmc
mov
mov
push
les
xsha256
cmpsb
adc
or
mov
push
push
notl
pop
ds
dec
or
inc
clc
pop
inc
and
fsubl
data16
mov
rorb
pop
sub
aad
ds
adc
aam
mov
loope
push
pop
pop
xchg
dec
xor
je
mov
cmp
movsl
jns
add
das
aaa
jle
clc
jb
pushf
inc
arpl
or
dec
or
cmp
dec
sarl
push
es
scas
adc
inc
daa
and
pop
inc
cli
dec
in
les
stos
dec
addb
add
pop
fwait
scas
int
sbb
cmp
mov
pop
xor
cld
ljmp
inc
and
cmp
pop
lret
sbb
mov
fwait
or
dec
test
lret
jns
mov
pop
sub
inc
mov
mov
inc
mov
pushf
test
lds
imul
loop
pop
call
shlb
xchg
leave
mov
xor
push
ret
mov
loopne
inc
mov
or
push
dec
addb
jo
pop
or
inc
test
dec
cmc
lret
std
push
dec
decb
into
or
mov
jbe
in
scas
sub
loope
xchg
icebp
adc
iret
push
mov
out
pop
mov
mov
les
repnz
jae
inc
sub
sbb
jle
sahf
and
adc
imul
mov
pop
jle
enter
ljmp
orl
cld
jnp,pn
mov
pop
pusha
mov
repnz
scas
addr16
test
iret
xchg
out
sti
add
insl
push
mov
jb
ret
out
mov
push
sbb
aad
popf
jmp
int
xchg
pop
fisubs
jl
fstps
test
dec
repz
js
adc
push
mov
out
loop
inc
dec
mov
inc
pop
fnstsw
mov
testl
cli
aam
iret
cmp
in
js
dec
push
out
xchg
mov
xor
outsl
in
mov
jno
inc
cmpsl
mov
push
cmp
cmp
adc
test
pop
stos
jg
in
icebp
sub
scas
test
sahf
cmpsb
dec
xor
mov
stc
mov
jmp
scas
pop
sub
mov
adc
sbb
stc
ret
std
test
jmp
lods
adcb
push
aas
mov
dec
fdivs
and
jge
enter
sti
cs
jns
mov
mov
inc
rcrl
pop
test
lods
js
xor
fnsave
cli
cmp
adc
cmp
out
dec
cmp
hlt
test
cmp
sbb
lret
dec
xchg
jl
add
xchg
add
outsb
stos
pop
pusha
pusha
jnp
cmp
dec
jmp
sub
xor
jp
and
popf
or
adcb
push
jg
xchg
addr16
xchg
leave
arpl
arpl
test
negb
cmp
aaa
dec
push
adc
out
xor
mov
adc
fstpl
inc
pusha
lret
pop
popa
es
sbbl
repz
loop
das
mov
fsubrl
mov
rcll
insl
int
aad
daa
xor
push
xchg
cmp
cltd
push
int3
pop
das
jae
iret
mov
mov
jbe
mov
fiadds
push
out
or
pop
pop
pop
mov
outsl
cmp
inc
sbb
test
lahf
dec
test
dec
mov
sbb
sbb
mov
inc
cmp
fdivl
xchg
mov
sbb
sarb
xchg
jmp
stc
lock
mov
stos
iret
sbb
inc
ja
pop
adc
aas
pmullw
mov
mov
imull
rolb
fstpl
movsb
pop
cmp
xor
mov
nop
scas
insb
inc
leave
add
flds
mov
dec
lret
fs
lds
dec
pop
cltd
cmp
stos
or
fldcw
pop
inc
xlat
push
inc
or
push
inc
push
or
dec
mov
xor
push
inc
jg
mov
clc
push
pop
mov
mov
mov
adcb
and
out
mov
cmp
rcr
fnstcw
stos
mov
mov
pop
pop
sbb
test
sub
bound
filds
lahf
push
adc
cmpsl
add
into
test
popa
ret
push
pop
jb
fwait
sahf
mov
mov
in
xor
mov
mov
jbe
pushf
or
mov
fadds
xor
pop
inc
adc
addr16
or
data16
fsts
in
stos
in
ja
pop
jecxz
std
pop
sub
pop
rolb
xchg
push
or
fcoms
xchg
and
lods
dec
cmpsl
inc
fisubl
mov
ljmp
lret
xchg
push
jecxz
jne
lods
call
pusha
add
imul
mov
mov
in
loopne
mov
ja
cmc
mov
pop
mov
xchg
sub
in
sub
cmp
testl
dec
fcmovbe
data16
jge
sbb
inc
add
int
icebp
push
adc
and
fnsave
sub
cmp
xor
lret
sbb
outsl
sbb
cmp
test
push
ja
dec
int
jae
mov
addl
insb
push
movsb
call
les
cmp
inc
add
stos
mov
js
pop
daa
cmp
lcall
jbe
sub
test
scas
adc
cmp
ljmp
cmp
jae
add
movsl
pop
or
mov
popa
enter
sbbb
mov
dec
mov
mov
adc
adc
adc
cmp
xchg
or
cmp
stos
popl
shrb
mov
push
and
divps
jnp
in
cmp
sbb
add
adc
aad
test
or
lret
or
and
incl
rcll
or
xor
cmpsb
push
shlb
adc
cmp
inc
mov
out
icebp
xlat
xchg
pop
or
mov
sub
lock
jb
jnp
lea
mov
addr16
cld
mov
xlat
clc
fildll
dec
push
jmp
fwait
test
fadd
mov
out
aad
jmp
aad
push
loopne
aaa
push
shlb
mov
test
pop
inc
mov
jl
pop
loop
dec
je
jae
jo
lea
fadds
jno
add
cmpsl
rcll
jl
data16
or
mov
mov
inc
pop
pop
mov
xchg
cmc
dec
cmpl
sub
repz
push
mov
cmp
ret
and
cmpxchg
adc
jb
lret
sbb
outsl
sbb
add
xchg
xlat
sar
adc
push
lret
movsb
cmp
pop
pop
scas
mov
mov
mov
rcrb
xchg
mov
clc
jno
jo
and
rolb
and
mov
xchg
fcoms
mov
test
cld
mov
shl
dec
jno
inc
lret
xor
mov
inc
inc
adc
mov
in
mov
enter
pop
cld
jae
inc
and
jecxz
cmp
pop
inc
movsl
sub
outsl
cmp
rorl
roll
mov
test
xlat
jg
mov
call
adc
xchg
ficompl
in
mov
ret
pop
cwtl
cmp
sub
add
sub
cmp
aam
aam
dec
lea
mov
adc
roll
xor
pop
add
sub
jmp
lds
pusha
out
shll
ljmp
fmull
bound
sbb
aas
push
clc
mov
mov
test
dec
out
add
pop
add
pop
inc
or
in
fwait
sbb
out
push
adc
or
rorb
icebp
mov
push
incl
xchg
ljmp
adcl
fdivrl
mov
xchg
movq
ret
loop
movsb
scas
outsb
mov
rol
fcompl
push
divb
jne
mov
negb
sbb
imul
adc
cltd
and
ja
mov
pushf
repz
test
cmpsb
lds
add
push
mov
les
imul
mov
rcll
out
cmpsb
cmpsb
xor
loopne
xor
mov
orb
adc
cmp
mov
mov
jle
lahf
mov
outsl
sub
movsb
push
inc
or
mov
shll
cmpl
pop
inc
mov
leave
adc
sub
imull
mov
stos
sub
and
xchg
ficoms
repnz
into
cld
sub
fldl
mov
inc
fldenv
arpl
mov
adcl
mov
popa
mov
movsl
mov
inc
scas
dec
out
pop
shl
pop
mov
xchg
push
vmread
movsl
out
or
ja
xchg
xor
es
bnd
jno
imul
and
jle
cmpsb
inc
sub
pop
lea
pop
aad
iret
aas
mov
xor
data16
xchg
adc
pop
xor
mul
push
push
stos
in
lods
sub
fldcw
inc
pop
leave
push
fs
dec
mov
ljmp
in
xchg
imul
xor
arpl
sub
mov
inc
pop
sti
and
rcrl
shrb
push
insl
fisubrs
pop
shlw
dec
cltd
loope
hlt
and
sub
push
out
push
scas
mov
or
cli
sub
xor
dec
adc
daa
jbe
test
and
aam
rcrl
push
inc
incl
movsl
fists
sbb
frstpm(287
leave
push
sub
cmp
out
adc
pop
adc
rclb
in
jp
in
push
fbld
ss
adc
nop
or
sbb
dec
lahf
ljmp
hlt
sbb
cwtl
andl
lret
stc
mov
mov
jns
jmp
mov
pop
dec
xor
repz
sbb
scas
mov
push
inc
mov
in
int
imul
jmp
sbb
mov
shrb
push
jg
dec
jmp
enter
dec
xor
dec
dec
scas
cmp
lcall
and
mov
sar
sbb
sub
popa
clc
dec
jb
xor
stos
pop
pop
lock
mov
imul
push
sub
pop
scas
mov
xor
jb
add
sub
or
loop
sbb
lret
in
hlt
lahf
rep
xchg
leave
sbb
jno
faddl
sub
aad
pop
fwait
mov
mov
fistl
cli
into
mov
jnp
repnz
jb
enter
jbe
das
sbb
scas
adc
cld
data16
push
rcr
jl
pop
lahf
cltd
daa
cmpsb
nop
and
sub
sahf
fildll
leave
cmp
lahf
push
fmuls
or
sbb
xchg
jecxz
mov
rcl
loope
or
pop
xor
xchg
xlat
int3
or
xchg
pusha
mov
popa
shlb
cwtl
fbstp
xor
movsb
cmp
add
aad
pop
inc
mov
rclb
pusha
outsb
inc
pop
push
dec
mov
sbb
stc
adcb
or
call
add
or
sub
mov
stos
mov
adc
das
mov
cmp
jo
lret
mov
mov
cmp
mov
pcmpgtd
dec
loopne
std
cs
push
pop
fisttpl
add
mov
aaa
jg
stc
aam
addr16
lcall
mov
test
dec
aaa
std
sub
and
pusha
mov
lret
mov
mov
mov
movsb
pop
sbb
inc
sub
xchg
outsl
ds
xchg
daa
adc
push
shl
push
jo
xchg
sub
mov
lahf
pop
push
jns
das
lret
test
xor
out
or
into
jle
mov
rorb
xchg
mov
mov
and
push
inc
inc
ja
jle
pop
mov
xor
or
cli
icebp
pop
scas
xor
xlat
xor
stos
je
sub
ja
loopne
dec
lods
ficompl
mov
call
movsl
scas
insb
or
nop
fs
xchg
add
movsb
cmpsb
or
jp
ficoml
jmp
mov
int
daa
pop
jne
lahf
sub
push
outsb
lock
mov
pop
adc
cli
shl
fdiv
xor
out
in
lret
adc
movsl
adc
pop
out
dec
jb
mov
daa
je
lds
pop
push
test
cmpsb
push
cld
mov
jl
js
pop
mov
jmp
pop
and
xchg
lods
jl
jne
es
adc
fsub
mov
add
cmp
loop
sbb
dec
lods
push
in
sbb
enter
aam
rorl
mov
xchg
cmp
adc
jp
push
loop
gs
and
jp
dec
clc
sbb
sub
inc
xchg
push
les
and
inc
lods
mov
jp
lock
popf
sub
inc
mov
cmpsl
pop
rcll
jb
jp
je
and
mov
mov
scas
jge
js
int
mov
adc
or
dec
shrl
jge
cmpsb
xor
jecxz
mov
sbb
fnsave
out
jge
mov
les
sub
xor
lahf
ficoml
mov
jae
loope
fcmovnbe
cmp
arpl
bnd
jnp
push
in
dec
sbb
dec
icebp
in
adc
pop
cmp
mov
inc
ljmp
and
and
cmp
push
cs
inc
int
leave
scas
pop
rolb
popf
cwtl
jne
in
mov
into
or
sub
addr16
jmp
popa
popa
fisttpll
repz
cmp
or
adc
outsl
xor
xor
mov
inc
clc
dec
inc
mov
and
mov
jno
jno
dec
movsb
xchg
pushf
push
xchg
mov
arpl
lret
out
mov
push
inc
shrl
xor
or
out
arpl
cltd
push
push
cmp
in
add
nop
cltd
clc
pop
jo
int3
mov
xchg
or
lret
movsb
cmp
mov
mov
fldt
mov
mov
mov
and
test
xchg
mov
mov
in
insl
mov
or
mov
mov
cmp
xor
std
dec
int
loop
push
mov
xchg
mov
sbb
popa
pop
rcll
mov
cmp
push
xchg
jo
xor
xchg
inc
mov
or
dec
xchg
xrelease
sbb
add
and
sub
adc
lret
push
jb
adc
cmp
addb
add
insb
je
mov
sarb
jle
shrb
mov
sbb
or
out
xchg
mov
mov
cmpl
inc
gs
ret
adc
mov
sbb
mov
idivl
adc
mov
gs
sbbb
add
sub
mov
add
xor
inc
ja
shll
test
bound
pop
repz
cmp
vrsqrtss
mov
add
movsl
orb
pop
sahf
jmp
jbe
xlat
jmp
xor
dec
mov
cmpsl
push
dec
dec
xchg
add
pop
stc
lock
rorl
push
rcr
pop
std
into
std
jnp
dec
sbb
lock
inc
fstp
stc
mov
test
pop
mov
movsb
xchg
pop
add
mov
sahf
aaa
rol
ss
sbbb
ds
ljmp
loop
adc
lea
and
mov
xchg
shl
mov
fisubrs
adc
test
cmp
insl
and
inc
jmp
fisubs
add
fisttps
cmc
in
jo
pop
jns
popf
dec
mov
test
mov
rorb
xchg
mov
mov
neg
popa
pop
stos
fsubrs
add
outsl
adc
mov
test
pop
add
adc
bound
rcrb
add
loope
xchg
decb
scas
stos
loopne
ret
mov
jp
imul
jne
mov
data16
mov
repz
jg
fwait
dec
mov
jns
sub
clc
lahf
ljmp
cmp
dec
dec
sbb
adc
xchg
scas
mov
bound
aam
movsl
fisttpl
inc
mov
rol
clc
mov
stos
fidivl
mov
mov
lcall
loop
mov
lods
cmp
and
add
xchg
dec
aam
daa
mov
js
inc
loop
inc
test
xchg
pop
jmp
icebp
popl
pop
popf
mov
iret
es
pop
xchg
and
sbb
out
cld
ljmp
pop
stc
js
arpl
fistl
and
fadds
mov
aas
xorb
mov
mov
pop
cmp
ja
mov
cmp
sub
int3
out
lcall
int3
in
lods
and
stos
mov
ljmp
push
xchg
add
inc
scas
je
jmp
mov
pop
xor
notb
insl
jne,pt
stos
push
mov
pop
jmp
and
lds
lea
hlt
int3
jb
fisubrs
or
lcall
rcrl
mov
out
inc
mov
pusha
outsb
cmpsb
loop
std
cwtl
dec
jnp
sub
ror
stos
sbb
movsl
mov
pop
mov
std
pusha
mov
rcll
cld
mov
enter
es
insb
push
add
dec
call
lds
mov
ljmp
mov
outsl
cs
xchg
scas
call
data16
sbb
out
ret
iret
jbe
pop
pusha
lahf
shr
mov
push
test
lret
out
enter
jno
ja
rorl
push
mov
ds
lods
bound
mov
jnp
das
in
dec
fistl
sahf
mov
or
fwait
lret
pusha
jns
lea
inc
dec
jge
insl
inc
movsb
xor
scas
mov
movsl
icebp
aam
cld
push
inc
std
fnstenv
adc
sti
rcrl
lds
stc
mov
dec
movsb
js
xchg
jne
pop
mov
shll
in
mov
fcomps
das
and
mov
iret
sub
inc
stc
shr
outsl
add
std
loope
mov
or
push
cwtl
fistl
mov
fimull
add
test
aad
add
push
xchg
mov
xor
adc
mov
data16
lock
sub
and
inc
xchg
lret
cltd
push
jbe
cltd
xor
fwait
aam
inc
cld
jmp
dec
imul
rcrl
dec
movsl
sub
push
mov
ficoms
icebp
push
pushf
xor
inc
call
push
cmp
sbb
xchg
adc
aaa
push
insb
or
or
mov
add
add
loop
mov
lcall
clc
adc
outsb
popf
and
mov
xorb
hlt
addb
movsb
inc
int3
inc
andl
add
push
stos
push
popf
add
mov
cmp
repnz
xor
mov
dec
push
decb
pop
out
sub
adc
dec
mov
dec
daa
jne
pop
ucomiss
outsl
fldcw
xor
pop
push
addr16
sub
fs
out
cmp
sub
inc
subl
or
jge
stos
jp
xchg
mov
js
out
in
cmp
xor
xor
or
in
aad
js
cltd
lock
xor
imul
mov
push
fscale
push
ljmp
inc
add
jno
test
fidivl
adc
mov
sub
jg
arpl
or
push
leave
jb
ja
outsl
lret
jl
negl
push
fnsave
sbb
test
ret
xor
rcr
adc
jo
jnp
ret
shr
inc
jmp
cmp
push
cwtl
jno
adc
mov
adc
lock
dec
mov
cmp
adc
loope
int
test
inc
mov
mov
nop
cmp
push
mov
outsb
jns
xchg
shll
in
xchg
in
cmpsl
sub
add
test
cmp
mov
dec
test
enter
ret
bound
imul
fcomps
out
insl
into
mov
xlat
add
cmpsl
mov
or
outsb
inc
sbb
out
test
repz
pop
sub
mov
xchg
sub
dec
shr
daa
jp
cld
popa
pop
mov
ds
jae
xchg
push
je
push
cmp
jmp
pushf
sub
mov
out
aas
xchg
pop
repz
mov
sbb
lret
mov
cltd
ficoml
sahf
test
cmp
xchg
push
inc
add
bound
daa
xor
das
xor
adc
and
movsl
std
pop
adc
push
adc
fidivl
arpl
lahf
cmp
add
jmp
in
rcll
mov
std
ret
lret
testl
or
outsb
push
xchg
fstpl
stos
stos
stos
mov
fcmove
push
lock
xor
jns
push
adc
or
ret
sub
incb
hlt
roll
cmp
cs
jmp
flds
sbb
or
xor
or
cmpb
xor
pop
cmc
xchg
push
jnp
sbb
repnz
rorb
push
daa
pop
nop
mov
and
imul
mov
mov
outsb
sbb
xlat
scas
icebp
pop
flds
rcrl
add
loope
sysret
push
mov
fists
mov
ret
cmp
notl
imul
mov
popa
jmp
adc
loope
xor
cs
leave
cmp
xchg
push
leave
inc
mov
pop
ret
scas
pop
add
cmp
nop
cs
push
and
cli
sbb
daa
sub
js
imul
inc
js
xchg
mov
lock
leave
clts
jo
cmp
rcl
xchg
enter
or
mov
je
mov
jecxz
push
pushf
mov
ljmp
test
sub
xor
fwait
cmc
cmpsb
aam
sbb
adc
cld
loope
cmp
insl
imul
and
or
pop
sbb
cmpsb
or
stc
mov
mov
test
mov
push
fwait
xchg
pop
popa
cmpw
pop
lods
cmp
mov
add
and
rorl
daa
add
cmp
jae
jg
push
mulb
dec
in
aas
sub
sbb
andl
push
arpl
fnstcw
cmp
icebp
das
and
mov
test
adc
mov
stos
repz
jne
fidivs
int3
jns
cli
xchg
sub
jmp
gs
test
mov
xchg
inc
add
adc
jl
mov
or
xor
cld
cli
xchg
lods
add
inc
jbe
dec
pop
out
lods
cmpsl
ret
pop
dec
add
push
pop
pop
inc
pusha
mov
outsl
rorb
hlt
aas
leave
inc
sbb
repz
lea
das
mov
or
push
xlat
mov
push
cmp
negl
dec
adc
mov
setno
jmp
fcmovu
jmp
sbb
push
xchg
cmc
xor
push
es
popa
xchg
pop
shll
or
lods
das
out
dec
mov
call
sar
test
jmp
xchg
scas
cmpsb
sub
and
loop
mov
ret
and
jle
mov
xor
or
mov
lock
je
cld
pop
cltd
stos
in
fisttps
hlt
mov
cli
loope
jb
sbb
inc
repz
ss
mov
out
xchg
add
repz
xor
cmp
inc
jecxz
das
push
dec
mov
fcoml
add
sahf
mov
out
xchg
jecxz
insl
mov
scas
in
push
jge
push
cmpsb
and
in
hlt
test
sub
or
loop
cmc
sub
add
mov
mov
inc
dec
pop
popf
sbb
push
cmp
pop
testb
mov
outsb
fcmovu
pop
shlb
mov
cmc
std
adc
test
jbe
aas
pop
es
xchg
orl
test
xor
sub
out
sbb
add
arpl
add
fbstp
add
xchg
cmc
ljmp
xchg
pusha
mov
cmp
aad
pop
cld
shl
dec
mov
inc
push
out
inc
imul
shlb
mov
in
pop
test
lods
cmp
pop
mov
insl
lds
cltd
adc
int
arpl
fists
or
dec
pusha
sbb
xchg
dec
punpckhwd
loop
dec
nop
inc
pop
outsl
pop
adc
sbb
push
pop
sahf
movsl
and
jecxz
or
adc
test
lahf
pushf
shrb
cmp
leave
mov
std
lret
mov
fisubs
push
xor
movsl
or
pop
lahf
pop
jb
mov
popf
cmpsb
dec
jl
cld
cmp
fs
and
inc
test
inc
add
popa
fdivrl
jge
dec
lods
fidivrl
je
jl
pop
adcl
loope
outsb
inc
xor
imul
cmp
mov
push
in
repnz
mov
cs
add
mov
movsb
xchg
ds
cmp
mov
mov
jmp
nop
pushf
or
cld
pop
lcall
mov
mov
rcrb
test
in
sbb
adc
lcall
pushf
ret
pop
sub
dec
lcall
repz
jo
jmp
das
shl
pusha
std
inc
xchg
leave
mov
fistps
fisubl
sbbb
test
lods
jle
pop
push
lods
subb
cli
out
lret
iret
cmp
arpl
jmp
mov
mov
push
cmc
dec
loopne
shll
aas
popa
lahf
adc
jo
sbb
jge
lods
pop
and
adc
and
jo
and
clc
in
lahf
dec
xor
cmpsb
std
jns
inc
call
adc
pop
and
mov
stc
cmpsb
jbe
test
mov
push
pop
out
stos
lahf
icebp
sub
cld
out
push
mov
push
and
lret
ret
insl
es
pop
je
xchg
pop
lcall
mov
popa
mov
inc
out
add
mov
dec
je
push
dec
sahf
lcall
jns
cmp
addr16
pop
movsb
arpl
cmpl
mov
pop
ss
adc
popf
enter
sbb
repnz
dec
leave
mov
jmp
insl
js
or
jle
inc
fistl
xchg
arpl
test
idivl
sahf
sub
mov
fwait
push
mov
cmp
arpl
sbb
test
cmp
xlat
iret
and
inc
push
imul
hlt
loopne
push
cld
outsl
adc
pop
add
jl
push
out
xor
xor
xchg
push
rclb
xchg
sbb
jp
cmp
outsb
push
mov
int3
or
rol
adc
repnz
jecxz
mov
mov
stos
shll
pop
add
rorb
lahf
fwait
mov
mov
dec
das
mov
xor
mov
or
inc
mov
cwtl
arpl
ret
mov
ljmp
loopne
es
bswap
mov
or
fdivrl
sbb
stos
das
data16
test
lods
sub
mov
xchg
mov
frstor
add
aam
mov
movsb
cmp
data16
enter
xor
int
push
mov
sbb
loopne
dec
dec
fcmovbe
push
enter
mov
cld
adc
xor
pop
jecxz
stc
andb
xor
and
dec
fs
fistl
push
sub
push
xor
jb
push
pusha
inc
xor
sub
push
int3
imul
xor
ss
out
mov
xchg
or
xor
push
jmp
pop
int
sbb
sub
mov
ret
cmp
scas
das
sahf
je
push
mov
xchg
add
jl
fists
mov
push
mov
mov
jmp
lret
add
sbb
jl
push
mov
adc
es
xor
jnp
xchg
popf
adc
cmc
std
es
aaa
lods
cmp
cmpsl
stc
xor
decb
adc
mov
xchg
mov
and
add
adc
pop
hlt
dec
jb
pop
mov
int
fs
iret
jl
and
jmp
mov
dec
and
xchg
ljmp
and
rorl
push
cli
add
xchg
stos
mov
mov
dec
incl
testb
mov
movsl
out
lods
rcl
inc
mov
sti
cmc
or
xchg
add
je
popa
mov
dec
xor
or
loop
insl
cmp
push
inc
bound
adc
pushf
data16
les
rorb
mov
das
mov
subl
pop
add
push
pop
jl
push
adc
and
xchg
add
ss
icebp
rorl
and
adcb
xchg
in
jp,pt
repz
xchg
test
xchg
sbb
add
hlt
push
lods
mov
add
adc
dec
es
dec
fs
pusha
or
in
pop
jmp
pop
cli
out
cltd
inc
push
jp
cwtl
push
repz
mov
mov
insl
sub
cwtl
lods
xchg
bound
xor
inc
mov
xchg
cld
inc
add
fbstp
push
mov
sub
enter
in
mov
test
dec
jl
adc
cmp
movsl
add
mov
in
adc
jnp
addr16
xchg
sbb
mov
add
push
lea
pop
aas
pop
faddl
fcompl
insl
aam
movsb
rorb
jg
push
lret
mov
xchg
pop
mov
and
cmp
and
es
and
mov
pop
mov
jge
repnz
cld
push
daa
aad
mov
pop
ds
xor
sub
rolb
lahf
pushf
clc
jmp
ret
loop
jge
push
xor
lods
push
adc
incb
push
aam
fs
mov
mov
pop
adc
lock
mov
inc
cli
frstor
and
out
outsl
mov
and
add
bound
mov
xchg
cmp
mov
add
imul
cwtl
fs
and
xchg
out
sbb
sub
rorb
jnp
pop
ror
popf
push
ret
shll
aam
dec
lret
cmp
mov
mov
mov
mov
or
in
hlt
dec
sbb
lea
sbbl
mul
mov
lcall
lcall
jae
scas
inc
ljmp
mov
cld
xchg
xor
ficomps
mov
ss
fistps
sbb
out
sub
cwtl
les
cmp
hlt
das
mov
in
dec
jae
das
lds
shrl
insb
jmp
xlat
sahf
dec
fs
mov
or
dec
popa
nop
aaa
xchg
popf
dec
xor
icebp
push
push
loope
out
xor
or
jns
mov
add
fdivl
mov
mov
clc
call
int
gs
es
mov
cwtl
fwait
lods
mov
jmp
outsb
pop
pushf
mov
adc
cmp
repz
sub
inc
jno
or
test
sbb
mov
and
mov
inc
ficomps
mov
lahf
sbb
lcall
mov
in
insb
jo
cmp
dec
mov
push
test
pop
out
xchg
adc
and
negl
enter
in
into
xchg
in
pop
fisubl
ljmp
incl
mov
dec
mov
pop
adc
vpclmulqdq
cmp
dec
js
push
loope
sbb
push
mov
jmp
pop
xor
stos
adc
pop
loopew
movsl
nop
leave
sbb
fistpl
movsl
cmp
insl
popa
inc
jno
jg
sbb
jp
xchg
cmpsb
xchg
ret
mov
dec
xor
and
push
call
loope
push
add
lods
pop
das
int
add
fldcw
pop
dec
ds
int3
mov
data16
sub
or
or
or
and
stc
cmp
sbb
jb
jecxz
aaa
jnp
imul
inc
pop
outsl
ret
out
jae
push
arpl
mov
cmp
int3
inc
mov
rclb
add
repnz
mov
shr
fwait
clc
sbb
insl
movsb
dec
inc
das
xchg
push
dec
ret
insb
mov
xor
and
testl
insb
push
pushf
pop
and
push
cmp
mov
test
cmpsl
loopne
sti
test
inc
cld
shrb
mov
mov
add
jb
mov
lds
pop
and
aad
clc
in
push
jmp
mov
sbb
push
cmp
or
jne
rcrl
push
cmpl
mov
lcall
addb
xchg
sbb
arpl
jp
leave
push
xchg
loope
repz
in
dec
adc
mov
sub
shl
sbb
mov
pop
leave
mov
flds
repnz
sbb
les
mov
adc
bound
xlat
mov
out
lds
inc
test
lds
adc
add
test
cmp
daa
notl
iret
cmp
cmp
in
mov
cmp
in
scas
loope
xchg
xor
mov
inc
add
js
or
sarl
in
pop
inc
lahf
mov
or
shlb
mov
push
pusha
jae
lods
popa
fdiv
fwait
clc
andb
fmuls
nop
insw
fnstcw
mov
test
out
xor
pop
add
nop
jb
inc
fstl
out
push
inc
mov
movsb
push
lods
xchg
mov
nop
add
mov
adc
fstpl
jns
lcall
adc
aaa
dec
jmp
and
dec
sub
jle
jae
add
pusha
dec
sbb
and
jecxz
cs
jmp
xlat
dec
inc
lock
push
cltd
adc
lds
incb
int
scas
jno
mov
mov
lds
rcll
aad
fisubrl
xor
jecxz
mov
sub
xor
xchg
mov
imul
push
es
dec
adc
sbb
popf
fidivrl
push
xchg
xor
mov
test
shlb
out
out
cmc
je
ds
hlt
mov
fbld
out
jle
adc
insb
jnp
enter
xlat
fisttpl
pop
cmp
call
insb
fs
dec
inc
sub
fisubrs
ret
ss
in
or
insb
jl
and
cli
sub
sub
in
bound
jecxz
sub
push
sbb
mov
out
repnz
dec
cltd
push
repz
inc
out
push
rcrl
popa
push
jne
movsl
popa
sub
mov
pop
aam
and
ljmp
das
push
inc
bswap
add
fcomps
insb
adc
adc
test
sub
sbb
inc
adc
add
orl
std
mov
mov
call
jnp
or
inc
es
pop
jge
repnz
cmp
mov
mov
sub
mov
push
inc
xchg
mov
ret
test
test
mov
add
sti
adc
push
pop
xchg
arpl
stos
ret
or
ja
insb
in
pop
xchg
xor
pop
je
pop
fnsave
or
mov
mov
and
dec
mov
movsb
jne
rcl
insb
popa
sahf
cmc
adc
adc
dec
movsl
cld
ficoml
rclb
fwait
xchg
out
fdivr
and
mov
pop
dec
mov
xor
cmp
out
mov
mov
cmpsb
add
jne
xchg
fidivrl
xorl
leave
leave
xor
push
jmp
mov
add
daa
mov
sub
jg
jmp
sti
add
js
mov
ss
cli
insw
jns
scas
imul
mov
mov
imul
mov
mov
jne
rol
scas
sbb
dec
sub
jo
add
inc
mov
adc
subl
push
push
cli
aaa
shrl
popa
push
mov
scas
xor
xchg
aad
and
fwait
and
lea
out
in
jle
push
jp
dec
pop
aas
jo
scas
xor
mov
add
or
stos
jns
mov
dec
inc
mov
stos
popa
mov
cmp
sbb
jnp
lcall
scas
dec
mov
outsb
xchg
icebp
stos
enter
mov
sti
fxch
push
mov
dec
pop
push
dec
shl
mov
test
testb
pusha
jmp
and
iret
mov
out
push
push
xor
test
mov
cmp
dec
dec
push
jne
and
xor
pop
int3
adc
je
aam
cwtl
push
ret
ret
jge
inc
lds
jae
shll
adc
mov
orb
mov
test
push
sbb
mov
xor
add
push
adc
pop
fbstp
pop
or
gs
mov
loopne
aam
jae
sub
cmp
fistpll
mov
and
mov
xchg
cmp
inc
xchg
push
ss
loop
loope
rorl
cmc
jp
push
inc
lods
leave
xchg
inc
push
cmp
lea
pop
pushf
rolb
gs
dec
adc
leave
xchg
dec
xchg
mov
lods
jo
xor
xchg
cmc
divb
inc
int
push
cltd
popf
or
lahf
inc
pop
sub
lcall
into
ret
sub
push
cmp
insb
sub
mov
std
jecxz
daa
xchg
bound
ret
test
or
inc
add
je
ljmp
lock
cmpsl
sbbb
popa
sbb
mov
xchg
imul
shrl
stc
inc
or
jb
fcoml
mov
test
testl
outsl
mov
loope
es
aam
std
aam
cmp
mov
xchg
sbb
mov
and
movsl
jae
inc
cmp
adc
jge
cltd
inc
mov
pop
mov
rcrl
xchg
aaa
enter
int3
hlt
sbb
dec
rcrl
jo
enter
sub
inc
in
pop
test
loopne
les
mov
orl
xlat
js
dec
mov
outsb
mov
test
xor
or
fldcw
mov
adc
pop
lods
mov
or
pop
sahf
into
cmpsb
sahf
fsubrs
fidivs
cmpsb
add
cmp
repz
or
jp
add
outsl
test
and
out
out
and
test
nop
mov
sub
sbb
cmpsl
dec
push
or
arpl
insl
push
fsubrs
push
mov
je
mov
aam
cmp
cs
int
ret
popa
push
outsb
cmc
fnstcw
xchg
out
xor
and
scas
add
das
jno
stos
fwait
lcall
push
in
clc
lea
xor
lock
sub
adc
fnstsw
jbe
test
in
sahf
sbb
jmp
mov
and
mov
dec
xor
jno
push
fadds
dec
popa
addr16
mov
inc
mov
mov
push
push
fcmovb
jno
leave
push
mov
fwait
lds
mov
ror
imul
mov
in
mov
inc
mov
jp
xchg
mov
xor
lret
int
mov
xchg
sarw
mov
xchg
inc
and
xor
push
sbb
sbb
je
xchg
gs
sub
iret
loop
pusha
mov
in
pop
mov
mov
mov
mov
push
icebp
enter
scas
xchg
es
jg
scas
in
adc
jo
imul
lods
inc
lods
and
popf
xor
inc
add
aaa
roll
daa
fildll
ds
adc
xor
roll
in
insb
sbb
sub
popa
in
pop
mov
adc
sub
mov
jb
push
jo
out
in
fwait
and
cmc
jmp
xor
jno
pop
or
popa
mov
inc
sbb
cmovge
inc
adc
out
stos
adc
lea
sarl
hlt
jle
mov
fistl
mov
xlat
fisubl
lock
jecxz
sub
cmpsl
cltd
push
ret
xlat
jmp
movsb
sbb
es
out
xor
mov
pop
lret
js
rcrl
dec
xchg
jge
test
ret
subb
mov
xchg
or
cs
and
imul
jb
inc
add
jmp
ret
mov
outsl
addr16
mov
mov
scas
orb
es
mov
or
jns
enter
or
dec
in
stos
test
sahf
stc
cwtl
out
or
outsl
inc
adc
imul
aam
cmp
dec
inc
lods
push
cs
test
lock
pushf
test
rol
mov
cmc
sub
fnstenv
xchg
cmp
xor
inc
div
sub
js
es
cmpsb
pop
mov
sub
mov
outsb
dec
aaa
lea
adc
das
or
adc
dec
pop
pop
enter
jnp
enter
mov
xchg
test
das
mov
out
nop
imul
jbe
cwtl
xlat
mov
clc
inc
popa
mov
xor
shld
mov
add
adc
inc
lcall
xchg
repz
fwait
out
add
and
xchg
xchg
mov
popf
xor
mov
xor
dec
cwtl
xchg
aaa
jl
mov
cwtl
jecxz
repz
int3
push
clc
inc
pushf
movsl
push
pop
mov
sub
and
popa
jno
fbld
popf
int3
pop
lret
xor
dec
test
cmp
push
inc
mov
mov
stc
aad
or
enter
mov
xchg
std
imul
lahf
cmpb
adc
jp
pushl
std
cmpsb
inc
ss
mov
mov
mov
orb
fnstsw
ss
cmp
xchg
out
sbb
int
stos
popa
sbb
lea
movb
enter
loop
adc
sub
adc
gs
and
shr
push
sbb
rolb
jnp
xor
ljmp
fsubrs
rcrb
jno
addr16
mov
gs
pusha
ss
xchg
es
xorl
pop
mov
daa
pop
jb
test
dec
pop
sar
mov
outsb
fdivs
arpl
inc
stos
mov
test
scas
cmpsl
sbb
addb
xlat
inc
sub
and
pop
ret
hlt
xchg
sub
test
adc
and
cmp
enter
xor
incl
vandnps
jl
mov
ja
test
xchg
js
sub
push
insl
add
inc
and
jae
xchg
dec
cld
cs
mov
imul
sbb
xlat
xchg
sub
add
pop
call
add
daa
xchg
inc
stc
jbe
xor
shll
lock
push
push
jb
testl
jne
popa
mov
pop
xchg
pushf
sub
in
outsb
push
andb
or
nop
xchg
sub
xlat
dec
mov
jp
mov
into
fmulp
imul
ljmp
fimull
cmc
test
push
xchg
pop
int
sbb
inc
div
lock
cltd
or
and
mov
dec
rorl
mov
dec
hlt
les
lods
sar
loop
xlat
sbb
or
mov
sbb
inc
ds
mov
test
lret
ljmp
mov
leave
scas
xor
dec
rorb
pop
xor
std
sbb
cwtl
test
in
test
sbb
sti
xor
jb
gs
mov
mov
cmp
mov
mov
pop
sub
mov
cltd
fldl
out
call
jg
push
mov
test
push
ss
mov
xor
jno
inc
mov
aas
lret
add
mov
mov
aas
std
adc
xlat
adc
loope
pop
add
pop
and
test
or
dec
xchg
mov
fdiv
add
in
mov
shlb
mov
cmp
cmp
shl
jge
in
test
pop
xor
std
jno
test
leave
lods
or
mov
push
mov
cmc
sbb
dec
test
daa
cmp
dec
xchg
add
xor
dec
or
jnp
pop
mov
fiadds
mov
mov
inc
pop
mov
sbb
cs
ret
xor
and
xchg
sbb
loopne
rcrb
mov
pusha
int3
fists
sub
jmp
lds
call
or
out
int3
out
xchg
popa
gs
sbb
leave
jmp
pusha
xchg
ja
add
lahf
test
hlt
add
lret
adc
ret
dec
mov
xchg
mov
inc
ss
out
pop
mov
dec
lahf
inc
imulb
push
dec
cltd
pop
addr16
cltd
inc
add
aam
insb
out
adc
dec
movsb
jb
hlt
and
pop
xchg
pavgw
cmc
and
pop
mov
jge
imul
out
mov
aas
repnz
int3
mov
call
xor
xor
aaa
or
xlat
adc
add
cmp
lret
daa
and
mov
lock
push
data16
adc
stos
dec
movb
pop
popa
jmp
jb
jno
pop
add
mov
sbb
stos
jmp
in
sub
lock
stos
addb
add
pop
cmc
mov
fdivrl
push
scas
cmp
add
fmuls
jo
les
xchg
sahf
fs
push
adc
push
fisubs
adc
addr16
call
xchg
and
repnz
and
xchg
subb
mov
jge
out
jno
lahf
fmul
shll
incb
jne
in
repnz
push
jle
cld
dec
out
and
sahf
pop
pop
das
dec
or
pop
repnz
sbb
and
ret
enter
pop
out
or
stos
add
fimull
push
call
aad
lret
jmp
bound
js
cwtl
data16
jb
scas
sahf
mov
sbb
push
jnp
in
arpl
test
inc
movsb
jb
or
push
cmpxchg
mov
pop
mov
mov
cmp
ret
scas
lahf
arpl
mov
mov
cmp
lds
mov
movsb
insl
shr
adc
inc
fsubs
dec
inc
mov
outsl
jle
pop
sub
inc
jl
in
fdivrs
scas
or
pop
les
enter
lea
add
sbb
cmp
cmp
cmp
xchg
ja
sub
sbb
data16
xlat
cltd
fstl
insl
cmp
sbb
mov
call
mov
lret
fbstp
iret
inc
out
mov
jge
mov
call
xor
outsb
cmp
das
test
andl
dec
insb
sub
mov
lret
movsl
pop
in
sbb
mov
add
out
and
stos
std
inc
stos
pop
lds
imul
out
aam
mov
fdivrs
ja
ret
lret
les
aaa
movsb
push
push
fidivrs
adc
mov
xchg
xor
in
inc
out
jo
jmp
out
cld
jno
repnz
jl
jne
pop
dec
mov
cltd
test
or
shlb
or
and
je
and
fs
inc
scas
mov
dec
sub
ret
jp
or
and
ret
jge
mov
mov
push
cld
xor
push
pop
int
cmpsb
fistpl
sbb
jo
pop
jae
lock
pusha
inc
mov
mov
roll
dec
sub
mov
mov
sbb
xor
xchg
jo
outsb
int
jg
call
dec
sti
xchg
push
lods
inc
and
roll
sti
fdivr
xchg
mov
mov
scas
insb
push
stos
jg
push
inc
cmp
xlat
loop
push
jmp
push
jle
jbe
imul
mov
aas
jne
sub
jns
or
mov
mov
cltd
sbb
dec
inc
ds
push
in
fadd
in
in
js
mov
fcomps
cmpsb
sub
ljmp
addb
mov
xor
push
or
fcompl
mov
adc
mov
notb
push
loopne
mov
cmpsb
movsl
lea
mov
in
add
lahf
cmp
sub
clc
inc
out
in
add
dec
fs
scas
int3
or
out
iret
rcrb
das
call
jl
ja
loope
inc
and
xchg
sar
jp
outsl
xor
adc
and
outsl
sbb
sbb
pop
push
lret
push
js
stc
addr16
cmp
push
sbb
cwtl
adc
mov
push
int3
jnp
lea
xor
sbb
pop
shrl
sub
lock
fistps
pop
std
cli
fadd
and
outsl
xchg
mov
mov
dec
jb
and
inc
mov
pop
and
inc
fadds
shrb
mov
fiaddl
mov
add
sbb
stc
push
mov
xchg
cli
push
dec
aad
xchg
aas
dec
shlb
cmc
sbb
sbb
push
mov
cmp
stos
mov
insb
fldt
lcall
xchg
or
pushf
xor
xchg
push
mul
sub
cmc
dec
popa
popf
daa
pop
add
jbe
mov
stos
push
and
loopne
test
fwait
mov
jl
lods
jg
push
dec
ret
sbb
and
push
inc
scas
sbb
dec
call
sub
mov
jne
pop
mov
push
sub
mov
icebp
jg
or
sbb
in
test
cmp
sbb
in
mov
pop
push
lcall
mov
fistpl
je
outsl
adc
roll
sub
sbbb
xchg
mov
cmp
les
int
push
sub
std
xchg
push
pop
js
pop
in
sub
lods
enter
dec
dec
in
jl
pop
clc
xchg
jp
cwtl
adc
out
orl
pop
xchg
mov
cs
inc
outsl
out
jae
pop
sbb
aas
ret
sahf
mov
lcall
sub
jns
xor
leave
imul
xchg
pop
pop
mov
pop
pop
arpl
and
push
push
lret
lock
jno
adcb
mov
pop
aas
pop
inc
divb
pusha
out
adc
call
sbbl
sbbl
std
das
mov
aas
jge
fwait
cld
cli
pop
dec
outsl
subb
add
lcall
or
xlat
pop
or
sbb
loopne
test
mulps
push
rorb
hlt
leave
xlat
inc
jb
cmp
sarl
jge
add
pop
negb
inc
stos
nop
mov
push
sub
and
push
and
mov
push
es
popf
or
mull
clc
and
inc
std
fisubs
imul
test
mov
sub
xorb
inc
in
mov
or
xor
add
movsb
scas
in
and
or
aas
lcall
inc
ds
stos
mov
push
clc
faddl
ret
popa
fs
cs
and
mov
push
std
rorb
stos
int
cld
out
jg
clc
cwtl
lcall
ljmp
add
mov
push
hlt
pop
ficomps
jns
inc
cmp
push
dec
insl
xchg
sbb
xchg
jbe
mov
pop
push
enter
rcll
pop
xor
mov
loope
fisubl
stos
xlat
div
insb
jmp
sub
sbb
jl
pop
pop
mov
mov
fisubl
rcrl
mov
ja
movsl
int3
aas
sahf
cmp
aad
pmaddwd
clc
fbld
and
push
fimuls
and
sub
dec
in
cwtl
jle
and
test
dec
mov
into
or
nop
cwtl
fldt
es
pop
sti
js
pop
push
cmpsl
in
cli
jo
xchg
insb
ret
mov
pop
imul
in
daa
aam
sub
push
movsb
lret
xchg
jae
sbb
movsb
mov
lret
loope
daa
mov
nop
fmull
inc
fsubl
les
daa
inc
dec
pop
stos
pop
ficompl
mov
mov
leave
mov
loopne
pop
jl
mov
addr16
or
bound
fwait
in
mov
xor
aaa
into
scas
cmp
sub
bound
or
sub
mov
pop
or
push
fsubrs
push
scas
xor
jecxz
cmpsl
inc
dec
bound
pop
iret
xchg
xchg
mov
mov
sbb
inc
aaa
loopne
repnz
ja
cmp
or
jle
ret
cmp
pop
xor
dec
insl
jae
aas
ljmp
jg,pn
sub
dec
fucom
push
movsb
mov
sar
jge
xchg
pop
sub
pop
and
cwtl
dec
shld
es
bound
out
shrb
cmpsl
hlt
jo
js
rcr
ret
inc
out
das
mov
mov
and
mov
inc
pop
ds
sar
mov
jb
push
sub
daa
fdivrs
std
popa
jo
mov
push
sbb
movsb
mov
fs
adc
cld
push
testl
sbb
dec
scas
faddl
out
pusha
outsb
push
movsl
dec
dec
push
cmp
stos
mov
and
sub
add
std
les
push
and
mov
pop
xchg
push
or
and
or
lcall
cmc
stc
xchg
push
xor
call
lods
or
ljmp
mov
mov
arpl
xor
and
mov
push
xchg
std
hlt
mov
or
fdivl
int3
aaa
ja
fwait
cmp
test
jns
pop
into
movsl
pop
jmp
cmp
jne
sbb
cltd
add
in
add
les
aaa
push
add
adc
mov
andb
pop
dec
sbb
jge
loope
inc
inc
dec
mov
repnz
jg
jge,pt
sbbb
aam
adc
lret
add
std
cmp
sub
sbb
jnp
mov
sbb
mov
pop
adc
das
mov
add
orb
inc
xchg
jbe
push
pusha
inc
xor
sub
xchg
leave
mov
ror
and
pushf
aad
xor
ret
and
fcoms
adc
jp
test
xor
sub
test
lret
test
aaa
aas
subb
ficompl
ret
pusha
pop
in
ss
fptan
mov
push
rcl
mov
mov
imul
or
push
lods
add
mov
or
clc
loop
shll
lds
pop
lds
fsubl
popf
mov
lea
das
or
in
cmp
movsl
sahf
rcrl
stos
add
iret
sbb
lods
cmpsb
daa
pop
ret
xlat
daa
or
insl
test
cmpsl
cmp
mov
roll
dec
add
push
and
push
pusha
jg
push
rcrl
xchg
outsl
aaa
and
jb
dec
jmp
pop
test
icebp
stos
std
pushf
mov
push
sub
mov
shlb
iret
jle
xchg
dec
enter
cli
outsl
scas
mov
arpl
mov
icebp
shrb
cmp
or
insl
add
call
add
int3
pop
bound
cmp
addl
std
ficomps
fwait
bound
leave
sbb
push
loopne
cmp
cmp
mov
mov
xchg
bound
or
mov
mov
and
and
jg
mov
mov
je
xlat
mov
lret
adc
push
jle
adcb
je
cmpsl
add
add
inc
xchg
outsl
or
in
inc
imul
dec
pop
ficomps
mov
sti
xchg
pop
and
sub
xchg
push
orl
popa
inc
cld
jle
and
outsb
inc
or
call
mov
outsb
xchg
cmpsb
sarl
pop
mov
jne
mov
pop
sub
fsubr
lds
dec
lods
add
inc
nop
dec
aas
inc
icebp
inc
scas
js
in
mov
or
cmp
pop
mov
fs
xchg
inc
mov
dec
es
jl
xchg
pop
mov
rcl
iret
dec
mov
xor
les
xchg
pop
decl
pop
aas
jne
in
int
aaa
call
push
mov
sbb
fcom
sbbl
cmp
pop
or
jl
jb
cmp
in
pushf
xor
adc
stos
and
pop
or
lods
outsb
pop
out
sbb
mov
rcll
xchg
mov
mov
popa
push
cmp
push
jg
js
gs
jge
pop
jg
ljmp
in
ret
or
out
out
int
in
push
cmp
or
das
repz
push
pop
lahf
ret
fcom
push
loopne
mov
and
imul
test
or
fimuls
sub
jo
xor
mov
mov
dec
jae
faddl
push
stos
ljmp
adc
or
pop
insb
into
jae
clc
int3
dec
fisubrl
jecxz
shll
test
jno
mov
cmp
jmp
popf
cltd
insb
into
xchg
cmpsb
in
xchg
jmp
dec
rcll
dec
fucomi
add
shlb
arpl
nop
xchg
add
sahf
add
pop
iret
fsts
call
ds
ds
adc
inc
mov
add
pusha
cld
jmp
add
int3
les
ret
ret
push
mov
sti
xor
xor
rcrb
jg
fistpll
rcrl
push
xchg
mov
push
testl
fldt
aad
int
adc
data16
es
xor
lcall
pop
jecxz
mov
lret
les
cmp
cmp
dec
or
dec
fildl
call
insb
clc
add
sub
in
cltd
leave
and
testl
cli
sbb
mov
stos
push
movsb
les
pushf
movsb
ret
imul
fstpl
flds
test
pop
push
pop
test
stos
popf
test
cltd
addb
jl
xor
sarl
dec
out
xchg
cmp
iret
push
in
rorb
shll
arpl
xor
ss
aad
jle
repnz
mov
sub
sub
or
and
rcrb
xchg
in
outsb
mov
xchg
and
sahf
inc
cli
cmovg
dec
mov
mov
pop
ret
fadds
sbb
fwait
mov
or
or
adc
aas
inc
js
shll
pop
jle
xchg
jae
aam
sbb
nop
and
les
mov
movsb
adc
inc
push
xchg
fidivrl
xchg
out
out
pop
mov
imul
loop
fldl
pop
js
adc
repz
xor
cs
jle
ret
xlat
popa
push
jmp
jge
stos
pop
mov
xor
sbb
ret
loope
loope
push
xor
mov
loope
inc
dec
scas
mov
lds
push
lret
aam
mov
mov
xor
data16
inc
dec
sub
sbb
xor
repz
jl
lret
dec
outsl
loopne
sahf
push
dec
hlt
push
jbe
mov
rorb
sbb
push
shr
fidivrl
dec
stos
loopne
cmp
inc
shlb
cli
or
push
leave
dec
decl
pop
or
xchg
test
movsl
out
daa
sbb
mov
scas
mov
push
cmpsl
iret
push
cmp
lods
cmpsl
mov
ficoml
add
add
push
leave
in
mov
mov
aam
rorl
jg
flds
ror
cmp
inc
pop
mov
out
std
imul
push
popf
xor
cltd
sub
sub
or
mov
xor
movsl
fisubs
xchg
js
cmpsb
pop
das
lods
icebp
mov
mov
mov
jnp
mov
inc
popf
lea
aas
cmp
lcall
std
pop
orb
popf
push
jle
mov
fwait
leave
inc
lods
jmp
pop
inc
and
xchg
push
inc
stos
sub
cmp
sub
and
mov
mov
or
jge
cwtl
mov
mov
bound
pop
cmp
adc
sub
jmp
mov
cmpsb
scas
dec
push
push
cmpsb
push
sbb
loop
iret
loop
ljmp
ficoml
fsubr
fld
rclb
mov
fisttpll
pop
pop
sub
pop
popa
insb
dec
adc
ja
mov
jno
pop
sbb
mov
cmpsl
cmp
out
sub
sub
push
insb
rcl
aas
inc
jecxz
test
and
and
adc
mov
xchg
outsl
scas
in
in
jmp
out
mov
das
cmc
pushf
jno
jae
mov
nop
data16
mov
adc
outsb
inc
in
cmp
jbe
inc
pop
cmp
in
insl
xchg
clc
sbb
bnd
imul
lock
aam
popa
mov
ficoml
test
xchg
and
lret
popa
sahf
sti
xchg
or
loopne
adc
ficoml
mov
sub
inc
je
sub
movsb
push
inc
aas
loopne
popf
shrl
sub
jp
mov
cmp
xorl
fimuls
xchg
cmp
cltd
mov
test
sahf
insl
or
loope
scas
in
jmp
xor
mov
sub
out
xchg
ss
dec
mov
inc
ljmp
mov
mov
out
cltd
jl
jl
stos
mov
mov
into
in
call
lods
sahf
sub
lea
add
or
or
pop
jbe
inc
cli
movsl
xchg
mov
sti
lahf
or
test
push
sbb
test
call
mov
push
mov
add
in
pop
add
xor
inc
push
pop
jge
jle
add
push
jb
cwtl
push
inc
fnstsw
mov
out
push
xorb
sbbb
andb
add
pushf
test
mov
add
push
or
mov
jae
or
fwait
push
leave
adc
lods
aas
je
arpl
jge
addr16
cwtl
imul
mov
jno
cltd
lret
mov
mov
mov
cmp
cmp
fsub
in
mov
sbb
pop
pop
icebp
les
out
lods
imul
popa
mov
adc
dec
faddl
in
sbb
mov
loopne
sbb
es
pop
sbb
add
and
xchg
testb
mov
ds
push
add
popf
repnz
rcrl
mov
jae
mov
cmp
mov
lods
xchg
stc
inc
push
mov
fimuls
and
push
cmc
sarb
loope
fcomps
cld
ret
fisubs
add
dec
add
push
or
test
and
fistpll
adc
or
hlt
mov
mov
push
mov
insl
or
inc
cmpl
and
xchg
dec
jb
sub
mov
push
dec
mov
lret
ja
lret
push
mov
cwtl
mov
fmul
add
loope
mov
sbb
icebp
clc
xchg
jmp
xor
sbb
fldenv
push
xlat
jmp
mov
xchg
aad
ljmp
or
xchg
data16
dec
lods
js
add
mov
xlat
mov
xchg
add
xor
call
icebp
xchg
sbbb
rcll
mov
xchg
mov
daa
push
cli
dec
mov
pop
mov
cmp
popf
or
es
mov
pop
pop
outsb
bnd
cld
lcall
scas
sub
mov
lret
pop
imul
in
inc
add
or
ss
xchg
sbbl
enter
cld
jp
std
icebp
jnp
xor
cmpsb
mov
fs
mov
mov
test
add
jg
add
add
sbb
mov
inc
ret
mov
addr16
ja
dec
cmpsl
pop
sbb
pop
call
dec
cltd
cli
and
push
xchg
jnp
adc
test
xor
sahf
mov
push
fwait
or
imulb
mov
xchg
push
push
sub
dec
std
push
cmp
mulb
pusha
inc
sbb
xor
xchg
pop
push
lods
xchg
test
shrb
push
cmp
mov
or
and
orl
and
adc
xchg
loopne
pop
sahf
pusha
mov
push
sub
fildl
stc
jle
cmpb
push
ss
jb
out
cli
sahf
cmp
push
aam
adc
pop
enter
pop
xor
aad
push
pop
ljmp
pushf
cmp
mov
lahf
inc
aad
and
jecxz
xor
adc
mov
sub
test
lret
xchg
mull
hlt
pop
data16
and
add
pop
aas
mov
mov
push
adc
punpckhwd
negb
sbb
fidivrl
push
inc
repnz
push
in
out
mov
dec
or
and
in
movsb
xor
push
in
repz
ljmp
and
inc
ljmp
or
je
mov
and
in
xchg
adc
sbb
xchg
xor
repz
popa
mov
xchg
mov
cld
mov
mov
jo
jnp
pushf
mov
cmp
sbb
mov
bound
or
mov
repnz
cmpsb
sub
xchg
scas
jmp
das
ljmp
lock
test
out
mov
jg
push
sbb
push
and
cmpsl
sahf
push
nop
pop
fadds
and
add
jg
dec
mov
fildl
and
mov
adc
scas
lock
out
arpl
mov
and
outsb
aaa
mov
stos
pushf
mov
adc
xchg
dec
dec
inc
jecxz
je
jne
jno
inc
mov
mov
popa
ret
shrb
push
mov
dec
xor
arpl
aad
xor
in
mov
je,pt
mov
sti
xor
pop
or
inc
ja
fisubs
adc
inc
adc
je
sub
lods
stc
daa
in
loop
push
mov
sbb
lock
mov
and
push
inc
or
out
dec
push
dec
hlt
and
sbb
flds
lods
mov
or
roll
cmp
movd
pop
mov
pusha
and
xor
neg
push
andl
mov
mov
and
xchg
adc
xor
js
sub
mov
xor
or
test
sbb
movlps
add
push
fxch
fbld
sahf
jne
mov
push
cmp
xchg
test
lods
cmp
pop
inc
xchg
mov
fcoms
sbb
and
addr16
aas
or
dec
sbbb
shlb
fidivrl
inc
xchg
jecxz
std
outsb
test
add
jae
insb
xchg
dec
push
fsts
pop
sbb
sub
js
ss
pop
push
in
pop
jp
adc
fs
pop
jle
and
repz
fs
repnz
adcl
jl
test
pop
scas
shlb
mov
bnd
inc
faddl
mov
inc
das
jge
fs
sub
das
push
cld
xor
shll
pop
sbb
mov
jge
inc
ds
sub
push
xchg
pop
arpl
negb
dec
std
inc
test
test
mov
pop
sbb
call
imul
pop
fisubrs
insb
loopne
imul
adc
dec
pop
leave
fstpt
aaa
das
jns
and
cmp
std
sub
xchg
xor
icebp
or
scas
pop
je
leave
insb
stos
into
mov
add
xor
not
rorb
sbb
sbb
mov
movsl
jle
subb
add
flds
jecxz
mov
add
cmpsb
adc
fs
adc
cmp
dec
xlat
mov
movsl
cmp
jb
aaa
or
push
push
ss
cwtl
fsubrs
cmp
loope
push
and
sbb
mov
adc
lret
rcrb
push
jecxz
ja
loop
and
cwtl
lret
out
dec
sti
mov
bound
xor
inc
or
popf
loope
ljmp
sub
mov
sahf
dec
mov
inc
out
or
out
lret
outsl
aas
pop
gs
inc
aam
adc
daa
mov
out
cmpsl
inc
jno
pop
or
outsl
pop
ss
repnz
lock
arpl
jmp
xchg
call
fwait
xor
jae
add
and
add
nop
cmp
test
pop
cld
das
dec
mov
out
andps
jl
stos
or
mov
dec
insl
add
xor
push
pop
add
mov
mov
rolb
jmp
test
dec
mov
mov
pop
push
lahf
cmpsl
sbb
movsl
push
push
lods
inc
pop
jp
lret
inc
movsl
insl
jp
out
mov
cwtl
insb
add
std
jnp
push
and
sbb
dec
mov
leave
add
sarb
xchg
js
xchg
jno
sbb
scas
pushf
jmp
or
xchg
lods
sub
sarb
cmpsl
push
add
mov
clc
sbb
or
sub
popa
cmp
mov
mov
addr16
push
ret
scas
push
jb
ja
jns
in
inc
sub
mov
dec
inc
enter
cmc
mov
pop
sub
jle
mov
insl
xor
jle
cmp
dec
xchg
mov
mov
subl
inc
mov
fsts
xchg
push
sub
adc
mov
inc
mov
jecxz
xor
in
cmpsl
aam
inc
mov
ret
cmp
addb
loope
lahf
sub
pop
sub
aam
sbb
inc
call
pop
ret
mov
jp
mov
add
sub
dec
imul
or
mov
push
xor
shll
aam
adc
dec
or
test
aaa
cmpsb
sbb
fst
lret
push
inc
push
pop
xchg
into
or
sub
dec
mov
loope
fsqrt
mov
lods
fincstp
push
stos
sub
xor
inc
das
mov
movsl
push
adc
adc
mov
cli
mov
xor
fsubp
adc
out
push
sub
jmp
add
ja
arpl
inc
add
jno
je
nop
xlat
mov
or
daa
mov
xlat
mov
inc
and
insb
xor
outsl
mov
inc
inc
testb
jbe
and
and
adc
inc
or
aad
sarl
daa
mov
push
pop
and
out
lods
and
cwtl
std
lea
cld
pop
cmp
mov
fcoml
xchg
sti
sbb
mov
inc
lea
test
mov
ficomps
xchg
ret
scas
ret
dec
or
xlat
aaa
jmp
add
pop
jmp
xchg
fsubr
xor
rcl
jbe
pop
out
cs
and
aam
into
and
repnz
ljmp
pop
lock
out
test
lods
aad
adc
push
test
ja,pt
push
jb
xor
pop
xchg
jmp
and
jp
push
jae
jbe
dec
shrl
mov
push
test
push
ss
mov
inc
mov
and
fadds
mov
pop
shr
adc
out
addb
cmc
mov
test
xor
sbb
inc
xchg
out
repnz
pop
cmp
je
fldt
mov
inc
sbb
ds
lret
fucom
xlat
in
mov
lea
mov
and
add
pop
mov
fucomip
xchg
dec
cltd
pop
out
adcb
fwait
inc
jmp
outsl
pop
daa
pop
repnz
addr16
xor
mov
mov
sar
lcall
fs
mov
push
xorl
lcall
dec
hlt
js
orl
pop
sub
mov
out
stos
sbb
outsl
and
xor
test
js
push
push
dec
dec
cltd
les
add
mov
jb
arpl
leave
in
scas
imul
inc
in
imul
add
jl
lret
divb
jne
sbb
push
jnp
cmp
lret
xchg
cmpsl
out
fsubrp
push
inc
jns
gs
cmc
or
jecxz
and
loopne
pop
push
outsl
mov
jmp
scas
dec
ret
fwait
jae
int
lods
shlb
adc
mov
mov
pop
sbb
std
test
push
push
sbb
es
test
xor
inc
xorb
pop
lcall
jnp
lds
aas
movsb
add
mov
cmp
jo
in
or
add
push
sbb
or
adcb
adc
mov
repz
aaa
into
dec
sub
inc
stos
adc
mov
jbe
mov
pop
jb
xchg
cmp
pop
cs
push
cmc
mov
mov
jge
je
aam
dec
adc
stos
jecxz
out
mov
popf
pop
je
mov
aad
mov
leave
sub
loope
fsubrs
cmp
mov
cmpsl
inc
repnz
js
in
push
jmp
mov
xchg
pushf
pop
jne
sub
call
mov
pop
mov
popa
jle
push
mov
sbb
add
adc
add
lods
mov
pop
or
mov
adc
jmp
test
adc
xchg
enter
xchg
out
inc
ficomps
test
mov
add
jnp
loop
jp
sbb
mov
push
push
arpl
sbb
xchg
adc
fdivrl
lea
xlat
sar
mov
push
js
ja
xchg
inc
js
ja
hlt
out
out
adc
or
mov
movsl
je
or
xchg
fiaddl
test
sbb
sub
in
xlat
push
icebp
mov
or
and
xor
sbb
push
inc
mov
nop
mov
out
gs
sbb
and
imul
inc
test
rcrb
rclb
mov
lret
lahf
out
in
pop
stos
mov
ljmp
cld
push
mov
sbb
and
push
pop
dec
or
xchg
in
mov
ret
jg
fsubrs
into
pop
xor
and
xor
mov
out
cmpsl
ret
fcoml
cmp
jo
mov
xor
mov
scas
loopne
push
lahf
frstor
out
jns
dec
cmp
in
movsl
daa
adc
insb
les
popf
xor
das
loop
and
adc
and
cltd
mov
shll
dec
mov
movsl
fldl
inc
popa
sahf
aam
adc
scas
xor
mov
out
imull
lds
pop
adc
adc
pop
test
rorl
pop
or
enter
or
ret
mov
pushf
mov
push
jp
xor
adc
js
xor
fisubs
pop
aad
dec
pop
lcall
out
std
xor
jne
add
jbe
pop
cld
jle
mov
roll
adc
scas
xchg
decl
rcll
jle
les
fcoms
stc
scas
lock
cmp
aad
repz
test
add
fcomp
fsubrs
mov
add
test
inc
lcall
cmp
xlat
lcall
lods
outsb
imul
bswap
icebp
add
pop
in
adc
outsb
dec
inc
sub
xchg
jb
fistps
cmc
jnp
jp
das
mov
push
mov
xchg
dec
sub
jb
cmp
lds
inc
out
iret
or
dec
sbb
call
popf
mov
rcrb
imul
xchg
jbe
cli
test
repz
ljmp
loopne
jno
stos
mov
imul
add
test
mov
lret
push
push
cmp
mov
add
mov
mov
into
insl
or
cmp
aad
dec
dec
xor
mov
mov
xchg
cmpl
ss
cmp
jle
jl
es
adc
outsb
in
iret
ds
mov
sub
jg
dec
arpl
xchg
sbb
daa
inc
cmpsl
test
xchg
mov
leave
sti
sbb
adc
bnd
scas
mov
hlt
mov
lea
out
cmp
dec
mov
jg
imul
mov
jnp
inc
mov
fsub
in
mov
in
ja
push
or
cmp
push
xor
sub
or
mov
test
test
xor
xchg
inc
adc
call
xor
call
lret
aaa
adc
sbb
stc
jne
out
xlat
faddl
dec
mov
push
sub
in
xor
and
add
xchg
call
test
adc
push
ret
xchg
mov
jnp
jnp
punpckldq
lret
lods
daa
xchg
inc
adc
enter
lds
sub
and
jg
aad
sahf
adc
inc
aas
jp
imul
call
ret
sbbl
jb
mov
inc
mov
push
lret
icebp
cld
jmp
addr16
jecxz
push
pop
xor
push
imul
or
test
clc
xchg
push
flds
push
cwtl
ja
stos
sbb
movl
or
jo
mov
das
push
aad
lcall
sbb
imul
mov
pusha
xchg
sub
lock
lds
pop
xchg
popa
pusha
into
mov
aaa
pop
push
ds
lods
nop
cmp
xchg
jnp
add
and
pop
scas
mov
das
lods
rorb
repz
nop
and
adc
int3
movb
test
sub
cld
outsb
out
lret
ljmp
aaa
aam
into
xor
lods
cmp
movsl
push
in
popa
xchg
es
xchg
or
int3
out
xchg
repz
and
add
out
insb
dec
mov
mov
mov
adc
push
fadd
xchg
int3
xchg
pop
pop
lods
sub
push
push
ljmp
gs
mov
test
lahf
cmp
push
or
or
insb
sub
loopne
sbb
jp
testb
and
jle
dec
mov
orl
lods
or
popf
jns
jo
aaa
repnz
pop
or
inc
cmc
pop
loop
and
shr
xlat
pushf
mov
fwait
aad
fisubl
ljmp
jns
insb
movsl
jg
mov
dec
mov
cld
push
cmp
push
pushf
push
mov
jmp
adc
and
lcall
dec
loop
test
jg
inc
jecxz
je
mov
pop
push
fadd
inc
pop
sbb
or
aas
and
gs
pop
adc
gs
loope
test
push
pop
inc
inc
mov
pop
jne
and
clc
jnp
in
or
mov
dec
push
leave
aaa
mov
push
aas
push
or
mov
and
hlt
push
jg
jo
push
jg
jp
lret
mov
and
mov
push
add
xor
inc
clc
int
push
sarl
inc
mov
mov
and
xchg
xchg
pop
xchg
mov
pop
imul
jnp
outsb
ljmp
push
gs
int3
and
aas
cmp
pop
cmp
fadds
cmp
addr16
int3
in
mov
lahf
jbe
pushf
pop
int
or
add
in
mov
js
mov
jp
out
out
scas
push
lods
mov
xor
into
xchg
addr16
cmp
scas
fs
sub
rcrb
out
mov
jnp
mov
les
jg
adc
iret
sub
stc
shll
adc
xchg
out
hlt
xlat
fwait
sub
sbb
dec
or
pop
inc
cltd
cmp
pop
movsl
mov
jmp
dec
in
adc
stos
jb
adc
add
leave
les
dec
sbb
call
pop
jge
icebp
stos
mov
in
sub
fs
jmp
sti
jecxz
imul
scas
loop
js
add
inc
ret
scas
xchg
inc
inc
push
push
fiaddl
sahf
mov
push
popa
scas
mov
ja
scas
lds
shld
jmp
push
xchg
js
fcomip
stos
xchg
push
ret
dec
pop
fsubrl
and
xor
cltd
test
adc
out
dec
sbb
sub
rorb
ret
jge
mov
pop
rcl
in
xchg
out
cmpsb
inc
jp
scas
and
lcall
mov
pop
icebp
and
lahf
mov
pop
pop
sub
xchg
xchg
lods
mov
rorl
jge
jle
scas
and
cmp
pop
and
lea
jbe
mov
push
jae
arpl
xchg
cltd
cmp
or
out
or
sbb
ret
fidivrs
xchg
cmc
cmpsb
xor
inc
jb
bound
int3
lds
add
adc
out
mov
popa
pop
or
test
pop
jae
std
and
add
iret
rolb
or
pop
movsb
sub
mov
repnz
push
iret
cmp
dec
daa
pushf
jl
loop
jne
lods
ljmp
xchg
jecxz
mov
mov
mov
mov
lret
mov
lret
xor
loope
imul
packsswb
lods
lods
xchg
push
hlt
mov
jnp
lcall
mov
pop
into
sub
ret
popa
idivl
push
leave
mov
or
or
ss
pusha
xchg
pusha
movsl
dec
cmpsb
dec
mov
xchg
cld
fcmovnb
pusha
or
mov
mov
mov
mov
push
mov
mov
push
xor
push
into
fs
movsb
add
scas
arpl
sub
inc
js
into
scas
les
xor
movsl
jecxz
dec
adc
hlt
cli
mov
adc
adcb
fcmovbe
repz
and
adc
push
push
sub
pushf
sub
fmul
mov
jl
pop
ljmp
mov
idivl
add
jb
and
imul
jg
int
inc
ret
dec
hlt
loope
lea
outsb
jno
mov
adc
pop
xchg
jo
icebp
inc
test
stos
cs
shl
adc
or
and
sbbl
xor
and
pop
icebp
out
hlt
loop
sti
adc
stos
xor
ret
repz
xchg
dec
dec
int3
xchg
ficoms
xchg
cmpb
jns
lcall
cmpsl
sti
push
push
mov
xchg
add
xor
movsl
jo
das
pop
dec
sub
test
adc
sub
lahf
jl,pt
jge
ror
cwtl
nop
fiaddl
out
call
xor
test
repnz
je
pusha
test
arpl
pop
test
movsb
je
adc
outsl
pop
push
xchg
lcall
jo
bound
repnz
push
test
mov
cli
add
fstps
or
inc
dec
js
cmp
mov
adc
pop
repz
shlb
mov
add
jp
add
push
jle
xor
pop
jne
dec
dec
inc
aad
cmpsb
pop
loope
pop
inc
std
test
pop
mov
or
xchg
inc
lahf
test
faddl
sbb
sub
sub
shl
ljmp
jmp
jns
and
xchg
dec
int3
cmp
stc
or
divb
pop
scas
outsl
daa
clc
sub
stc
es
imul
popa
add
mov
xor
xchg
mov
inc
and
out
push
test
or
sub
pop
sbb
pushf
hlt
push
xchg
aam
sub
push
push
lcall
in
dec
jne
stos
faddl
rcrb
call
cmp
pop
hlt
sahf
insb
xor
leave
inc
gs
in
and
in
and
xor
lea
inc
mov
into
sti
jmp
cli
pop
shrd
adc
fidivs
test
divl
push
push
test
mov
aam
shr
sub
or
jecxz
jecxz
and
ja
inc
sub
in
adc
mov
loopne
cmpsb
push
movb
sbb
ret
loop
push
pop
scas
mov
mov
adc
mov
test
jo
xchg
gs
je
div
inc
xor
or
jns
inc
mov
push
std
arpl
jb
pop
pop
and
jg
std
jb
adc
fstpt
cli
push
and
inc
pop
call
lret
push
not
in
lods
mov
mov
push
jbe
dec
dec
lods
jecxz
out
rcll
sub
sub
adc
test
sbb
or
jl
out
insl
mov
cmpsl
adc
xor
jb
loopne,pt
jnp
repz
or
jne
xor
xlat
icebp
pop
lods
scas
jp
dec
xor
js
cli
sahf
add
test
inc
lea
sti
xchg
adc
add
mov
pop
les
aaa
aad
xchg
jl
pop
enter
push
xchg
mov
add
mov
rol
cmc
and
cltd
or
mov
mov
inc
inc
mov
rorl
pushf
jp
push
test
lds
aas
inc
call
adcl
inc
add
or
adc
int3
outsl
int
add
cmp
aam
rorl
xchg
test
xchg
movsb
push
lock
jno
fcomp
pop
bound
dec
inc
shlb
sbb
test
jne
nop
pop
aad
mov
int
outsb
shrb
fldcw
xor
pop
add
js
in
mov
lock
scas
loop
je
clc
cli
cmp
das
and
pop
mov
clc
popf
adc
push
pop
jge
cld
and
loope
iret
push
push
ficoms
movsl
xchg
adc
cmc
loop
sbb
ret
mov
in
and
adc
repz
ds
vpand
pop
repnz
mov
pop
mov
add
ret
xor
sbb
shl
ljmp
vcvtpd2psy
sti
icebp
inc
xor
lahf
push
loope
jno
and
dec
lea
push
nop
scas
mov
imul
pop
jo
loopne
or
sub
xor
jnp
rorl
bound
pop
dec
test
sahf
movsb
mov
movsb
sub
test
adc
pop
jbe
jg
call
mov
xor
loope
mov
xor
dec
mov
sti
sti
ja
int
mov
popf
sbb
lods
les
lcall
jbe
fcoms
bound
out
loop
jno
adc
ret
jmp
aas
mov
clc
pop
out
and
int3
test
push
insb
roll
cmp
sub
gs
xchg
and
mov
mov
negb
testl
pcmpgtw
nopl
inc
movsb
dec
xor
cmp
leave
cmp
enterw
mov
dec
sbb
fsubrl
or
push
dec
xor
mov
dec
cwtl
cltd
fcomp
leave
lods
arpl
popf
jbe
sbb
add
add
daa
pusha
xchg
adc
and
icebp
jns
or
loope
pop
add
cmpsb
push
and
cld
inc
mov
test
jg
in
decl
sbb
sarb
into
arpl
enter
or
out
jmp
pusha
loope
std
push
pop
inc
js
mov
xor
test
clc
sbb
push
mov
lcall
dec
int
stc
mov
mov
sbb
shll
test
cmpb
mov
push
push
loop
adcl
adc
mov
addl
push
sahf
dec
mov
cmp
cli
mov
or
adc
inc
out
and
dec
idivb
fstp
cld
xchg
push
jae
cs
push
cmp
jge
jb
loopne
int
andl
fbstp
pop
mov
stos
mov
lds
hlt
or
mov
je
cli
push
mov
mov
jmp
out
mov
cmpsb
js
icebp
scas
lock
popf
loopne
dec
mov
jb
loop
icebp
aas
sub
pop
fnop
mov
adc
test
dec
jle
pop
pop
jecxz
mov
ret
or
xchg
out
daa
lcall
daa
jnp
cld
sub
loopne
pop
sbb
dec
fstp
and
push
push
xor
adc
test
test
popf
mov
xchg
dec
out
pop
cltd
out
sahf
xchg
jecxz
jecxz
inc
or
cmp
or
jmp
adcl
das
out
andb
adc
sub
kmovw
jge
repz
subb
sub
adc
and
pop
inc
add
add
jnp
dec
out
test
jmp
or
lahf
stos
inc
sbb
jb
sub
xchg
pop
in
inc
nop
lods
push
ret
cmp
data16
push
adc
cmp
inc
insl
es
out
in
lods
adc
movsb
and
and
fsubr
jg
or
and
lods
mov
out
jne
in
mov
into
xchg
or
or
inc
mov
in
fidivl
bound
movsl
adc
pop
call
xchg
jp
xchg
frstor
add
outsb
push
inc
into
fcmovnu
popf
push
push
pop
cmovno
addb
dec
fwait
arpl
dec
or
mov
xchg
loopne
sub
iret
xor
es
cmp
sub
popf
call
xor
adc
repz
out
pop
dec
sub
dec
mov
shll
scas
pop
daa
sbbl
mov
and
cmp
cltd
es
mov
lods
jecxz
clc
in
sbb
sbb
ss
das
mov
scas
cld
xchg
orb
sbb
in
and
out
les
pushf
add
stos
jle
pop
mov
sbb
mov
xchg
xchg
pop
sbb
icebp
jle
adc
scas
adc
adc
mov
std
mov
sbb
xor
sub
mov
cmp
or
cmp
in
jl
and
cld
sbb
pop
jle
sbb
fcmovbe
or
push
lea
cld
in
clc
aad
ret
push
add
xchg
push
add
xor
lret
fisttps
mov
mov
mov
mov
dec
and
sbb
adc
movsl
adc
adcb
pop
bound
or
sbb
inc
cltd
ret
push
aam
jp
inc
inc
inc
leave
pushaw
xlat
fisubrl
outsb
pop
xor
lock
add
sub
cmp
jmp
cltd
cli
mov
xchg
popf
in
push
dec
jbe
lea
dec
fstps
fisubrl
xchg
mov
fiaddl
shlb
ds
xchg
ja
inc
filds
mov
mov
pop
mov
rep
arpl
sbb
dec
cmp
jno
xor
xor
js
push
jge
cmp
inc
stos
pop
test
idivl
out
dec
sub
shlb
ret
pop
and
add
dec
iret
sub
jo
push
cli
lret
mov
stos
add
push
scas
and
sub
jns
loop
inc
pop
das
fnstsw
inc
jle
xchg
push
in
adc
sub
add
pop
rcll
sbb
shlb
mov
dec
addr16
or
adc
jecxz
das
repz
push
xchg
paddusb
xor
lret
mov
xchg
add
out
push
pop
sbb
std
cltd
and
lds
cmc
out
cmp
sti
dec
out
pop
push
cmc
rep
ljmp
mov
dec
jns
push
data16
cmp
cmp
mov
add
into
push
imulb
clc
insb
jno
lret
loope
cli
lret
add
aad
out
lahf
aam
push
jl
idiv
sbb
stos
dec
int
pop
inc
xchg
mov
jp
xchg
cmp
fdivrp
xchg
loop
or
je
and
and
jecxz
iret
sub
in
pop
std
bound
inc
mov
sub
mov
jno
repz
das
inc
cmpsl
insb
mov
loopne
xchg
fistps
push
push
mov
aam
paddusw
lods
sbb
das
add
cli
jl
xchg
lds
fisubs
pop
fcoml
mov
movsb
cmp
pop
test
jmp
fsubp
mov
test
sarl
dec
mov
or
fdivrs
inc
xchg
repz
out
mov
jne
test
xchg
imul
xchg
jg
cwtl
movsb
jl
fstl
sbb
cmpsb
das
fidivl
inc
movsb
or
push
jb
fcomps
and
mov
hlt
enter
sbb
and
outsb
mov
sti
or
sub
dec
or
out
inc
mov
sub
mov
cli
outsb
aam
insb
and
out
stc
push
mov
nop
sbb
inc
test
rolb
ds
decb
lret
fldenv
xor
jbe
hlt
scas
leave
or
int3
fsubr
pop
xor
stos
pushf
mov
int
pop
or
negl
sub
mov
jg
stc
push
int
jg
in
outsl
mov
into
jbe
sbb
adc
pop
jmp
push
dec
lret
xor
xlat
mov
out
lcall
nop
mov
jmp
stos
mov
xchg
pop
data16
test
daa
loope
or
xor
outsl
sub
inc
pop
push
mov
test
pop
adc
or
daa
aaa
adc
adc
dec
orb
test
inc
or
push
mov
sbb
or
les
and
pushf
inc
inc
insl
jg
mov
mov
sbb
mov
mov
xchg
imul
mov
adc
cs
mov
pop
sbb
dec
in
xor
xchg
mov
xor
push
sbb
cli
frstor
iret
jne
out
sbb
add
sbb
stos
mov
lret
xchg
and
push
mov
cld
jge
je
mov
cld
xchg
pop
push
push
sub
mov
mov
jmp
mov
sti
fucom
pop
inc
sbb
subb
adc
outsl
andb
jae
mov
int3
cmp
mov
push
lea
in
out
stos
scas
icebp
stos
out
cwtl
mov
mov
dec
clc
inc
push
or
jnp,pn
mov
xchg
dec
add
std
fsub
push
sub
push
orb
xor
and
dec
mov
dec
mov
or
xor
jnp
in
add
shlb
or
cmc
aaa
dec
and
mov
icebp
mov
andl
insl
movsl
jne
jle
fidivrs
dec
cmp
imul
cli
adc
xor
dec
out
adc
fldenv
mov
push
in
pop
push
loopne
fsubs
xchg
mov
push
pop
insb
jge
sahf
std
test
or
push
sub
cmp
add
push
mov
bound
jb
sub
aad
push
les
pop
loop
adc
jno
outsl
mov
and
jae
int3
shll
loop
mov
xlat
hlt
loop
pop
add
adc
in
leave
imul
sbb
fcomps
jmp
fbld
dec
pop
and
pushf
mov
lods
adc
int
push
lock
out
xchg
aad
roll
sbb
scas
shlb
sub
push
ret
iret
out
mov
mov
adcl
rcl
sub
mov
hlt
mov
nop
mov
dec
lahf
pushl
pushf
ljmp
stos
das
mov
andb
jb
cmp
adc
mov
xchg
clc
fucompp
pop
xor
and
outsb
push
pop
dec
dec
pop
sub
scas
sub
or
in
jnp
cmpsb
jmp
xchg
ret
movsl
dec
test
pop
adc
mov
sub
xchg
cmc
xchg
jge
sbb
mov
jmp
mov
xchg
imul
cmp
in
popf
dec
repz
std
jo
cmp
lahf
lds
fwait
call
add
mov
lea
fdecstp
cmpsb
pop
mov
in
mov
mov
icebp
cwtl
dec
inc
sub
and
xchg
aam
jp
ret
jae
aaa
lahf
xchg
sub
outsl
adc
iret
insb
mov
pop
daa
xchg
gs
shlb
push
cmp
xor
mov
inc
or
aad
jmp
pop
inc
fnstcw
cmp
repz
mov
lods
or
sub
xor
jmp
sti
setle
inc
jns
adc
je
loop
inc
add
jb
inc
mov
dec
ds
push
push
mov
cmp
push
in
call
or
rcll
mov
aas
fsubrl
popa
adc
pusha
push
sbb
loope
imul
scas
push
mov
lcall
sub
push
sbb
mov
fmuls
or
rcrl
mov
sbb
test
sub
pop
add
imul
push
xor
lahf
das
inc
mov
jge
cli
sbb
out
mov
jns
inc
sub
insl
testb
arpl
jae
ja
adc
cld
push
pop
aam
shl
xchg
jmp
adc
mov
xor
pop
sub
xchg
sarl
pop
mov
push
inc
lea
test
nop
fldt
sub
mov
call
fwait
cmpsl
xchg
cwtl
push
shrl
sub
inc
sub
push
pop
lock
inc
aaa
adc
pop
sbb
push
outsb
push
cli
mov
cltd
call
addl
fs
mov
push
sub
jge
test
bound
xchg
xor
shlb
mov
jecxz
and
xor
and
sub
decb
xchg
gs
adc
adc
dec
mov
or
movsb
push
stc
sub
outsb
and
jb
das
rol
push
frstor
lea
push
mov
adc
stc
insl
std
rcrb
mov
xchg
push
incb
sub
adc
movsl
andb
rorb
in
or
fs
pusha
mov
sti
lock
jbe
add
pop
lea
enter
xor
sarl
jp
xchg
test
add
xchg
divl
or
clc
dec
subl
sbb
mov
sbb
add
fdivs
jns
sub
xor
dec
pop
arpl
push
les
dec
inc
sub
popa
iret
mov
jecxz
inc
call
fstps
xor
or
cmp
push
add
mov
das
push
add
dec
jbe
xchg
mov
xchg
push
in
and
mov
add
push
inc
add
movsl
shl
insl
fwait
xchg
orb
mov
out
push
jo
dec
jg
push
jp
out
fldl
pop
or
sub
int3
cwtl
pusha
jge
in
add
imul
cmpb
sbb
daa
mov
xor
call
insl
xchg
or
aam
out
repz
jnp
enter
or
fwait
sub
jb
nop
cmp
lock
xchg
out
jmp
xor
dec
inc
push
nop
shll
xor
stc
jp
rcll
jbe
js
popf
adc
lret
mov
xchg
ss
loopne
adc
xchg
lcall
xchg
mov
push
cwtl
repnz
out
iret
out
xchg
pop
inc
push
jp
cmp
movsb
xchg
push
push
stos
adc
push
shl
je
ror
leave
ja
mov
faddl
inc
cmovae
and
jl
repnz
cmpl
mov
xor
mov
sahf
mov
ja
cmp
xor
mov
xchg
adc
jecxz
cmp
mov
dec
adc
rolb
fcoml
stc
mov
stos
cmp
jmp
fwait
push
orl
inc
jge
mov
push
test
sub
cli
nop
rorl
jg
mov
lcall
pop
inc
jmp
push
mov
pminub
rolb
or
repz
gs
imul
outsl
push
es
adc
jl
inc
xchg
pop
std
mov
fiadds
out
pushf
in
inc
mov
adc
arpl
sbbb
in
not
push
andl
gs
jge
xor
gs
push
ret
push
fs
enter
dec
dec
jnp
rcll
loopne
aaa
fwait
ja
popa
loope
xchg
xchg
fdivrs
dec
rcl
fstpl
shl
cld
mov
movsl
fisubs
dec
adc
sbb
fsubrp
push
cs
or
push
aad
mov
jge
stos
add
pop
mov
or
push
and
mov
push
and
int3
xchg
xchg
add
sub
inc
add
ljmp
mov
dec
sub
sahf
mov
fistpl
inc
in
or
lock
sub
ror
cltd
inc
cmp
inc
je
mov
dec
cs
xor
std
dec
jmp
clc
mov
inc
lret
add
inc
enter
jnp
aas
mov
add
xlat
in
inc
lods
cmp
stc
pop
mov
xchg
repnz
xor
adc
lahf
jns
pop
aaa
adc
repz
fdiv
mov
jge
inc
sbbl
or
int3
dec
or
int
cltd
mov
arpl
jle
imul
movsl
mov
sarb
xor
pop
notb
or
in
push
mov
xchg
xor
das
dec
outsl
pop
xchg
stc
inc
fistpl
test
and
aas
sbbl
push
insl
cmc
mov
jg
cld
int
gs
mov
pop
xchg
fcomps
xor
outsb
test
loopne
subl
cli
out
ds
adc
jge
les
cli
xchg
cmpsb
ret
cmp
rcrb
movsl
push
fs
jbe
int
inc
mov
imul
out
gs
call
mov
push
call
pop
lods
outsl
jl
push
xor
pop
jns
push
mov
jl
dec
mov
les
pop
adc
loope
test
cmp
aas
push
js
xor
fists
or
mov
xchg
xorb
sub
stc
jns
cltd
int
pop
fldt
cmp
insl
dec
aam
mov
push
jns
pusha
jns
aas
int
subb
mov
std
cltd
dec
fadd
iret
popa
stos
xchg
xchg
jo
in
jmp
sbb
inc
mov
add
dec
imul
bound
pop
js
decl
jg
or
nop
xor
stc
lret
cmp
sbb
push
pop
sub
ss
dec
xchg
push
addb
xchg
jg
mov
pop
adc
pop
jns
push
xor
sbb
adc
dec
lock
aaa
dec
xor
mov
lods
jmp
jecxz
pop
fsubr
fs
xor
out
xor
pushf
shr
sub
scas
movsb
sub
iret
sbb
sub
xchg
push
dec
push
scas
and
inc
mov
js
sarl
jp
iret
dec
fildl
lods
jns
orb
mov
pusha
cli
pop
jp
push
sahf
sub
orb
or
fwait
std
sbb
sub
arpl
sub
add
mov
xlat
push
adc
fs
sti
and
ja
icebp
mov
in
test
cmp
cmp
mov
icebp
call
push
imul
test
arpl
ds
mov
cmp
adc
fucomip
ds
lcall
fwait
rclb
ret
loop
jge
jo
mov
inc
pop
ja
roll
insl
movsb
pop
sub
jo
push
xchg
inc
outsb
sub
or
sub
sub
cli
xchg
mov
sarb
mov
sub
jg
mov
lret
lods
cltd
cld
or
inc
sub
sar
cmp
leave
les
adc
icebp
test
add
out
andb
cld
outsl
or
mov
jge
sbb
fcmovnb
fistpll
dec
add
divb
andb
jae
divb
mov
push
mov
or
add
mov
fucomip
mov
cmp
imul
lds
fildll
icebp
pop
cmp
mov
flds
mov
push
fildl
mov
cmp
sbb
stos
or
jns
cli
lods
dec
imul
xchg
aaa
xchg
and
std
pop
std
cmp
mov
cmp
push
icebp
pop
or
or
js
mov
adc
dec
mov
inc
adc
jge
lds
js
xchg
outsb
inc
out
repz
jno,pn
in
dec
inc
xchg
inc
push
sub
xchg
jg
arpl
or
loop
adc
jmp
sub
fdivrs
clc
jb
xchg
ror
jge
enter
mov
push
cmp
shr
sub
rcl
sbb
data16
sub
xor
xchg
cmp
arpl
ljmp
divb
pop
cld
sbbl
and
mov
inc
add
aas
fsts
jb
bound
and
mov
adc
add
and
jae
test
cltd
and
xchg
pop
iret
sti
cmp
inc
mov
pop
pop
andl
push
mov
cmpsb
leave
sub
enter
mov
idivl
mov
push
fists
push
imul
fidivs
pop
and
int
pop
xor
je
pop
xlat
cmc
xor
and
aas
or
shl
loope
clc
scas
les
ljmp
shll
pop
sub
ljmp
mov
jmp
scas
arpl
jg
jno
xchg
xor
mov
sbb
lods
cmp
es
inc
addl
std
push
sbb
nop
out
add
jns
ret
jg
ret
sub
inc
sbb
popa
aaa
aam
clc
popf
pop
mov
jb
add
adc
ret
push
inc
inc
jnp
jge
fdivs
lcall
pushf
pop
add
insl
pushf
xchg
adc
inc
xchg
pop
mov
push
sub
add
ljmp
cmpsl
loope
mov
xchg
pusha
dec
mov
sti
mov
ffree
inc
out
sub
jno
scas
sub
mov
inc
sahf
dec
stos
and
push
int
mov
mov
popf
add
mov
test
pop
and
arpl
scas
cmp
and
jg
fistl
sub
cmp
pop
push
movsl
stos
stos
dec
cmp
sbb
push
inc
cmp
iret
ljmp
xchg
dec
ficompl
in
jle
xchg
fistps
pop
mov
dec
adc
mov
mov
mov
out
out
cmp
jge
push
lock
lds
or
push
gs
sbb
repnz
outsl
sahf
test
xchg
inc
aaa
test
mov
push
xchg
mov
movsb
jo
aaa
in
stc
jp
inc
mov
pop
sbb
push
jns
dec
jns
shrl
pop
cmp
sti
movzbl
jge
stc
pop
fwait
lret
cld
adcl
xchg
sub
sub
loop
icebp
jp
test
xlat
mov
dec
cmp
fs
orb
mov
adc
dec
sbb
xor
push
data16
xchg
inc
add
mov
loopne
push
jne
push
out
call
fs
push
aam
ret
lahf
popf
and
mov
pop
sbb
lret
sarb
pop
icebp
adc
sbb
std
xchg
cs
fcoms
mov
mov
fwait
mov
aas
xchg
cltd
pop
outsb
xor
add
sbb
xorl
add
scas
xor
das
loopne
push
xchg
ret
out
push
call
mov
mov
jecxz
fsubr
sub
push
jns
test
jb
leave
popf
test
rcr
outsl
jge
adc
fsubrp
mov
pop
and
jo
sub
cmp
push
popf
sub
jmp
mov
imul
push
scas
rclb
add
lea
mov
adc
pop
mov
dec
es
mov
shll
clc
xor
sub
adc
scas
jne
stos
add
loope
pop
or
inc
in
fdivs
cmp
fnstenv
inc
push
ror
fsubs
hlt
adc
mov
pop
in
mov
and
and
pop
inc
out
jmp
and
sub
push
out
inc
stc
jle
mov
test
mov
add
push
inc
ss
sub
outsl
lret
pusha
jge
push
sub
stos
mov
pusha
pop
add
dec
cli
notb
scas
loop
test
inc
test
jle
mov
push
cmp
insb
xlat
int3
je
pop
adc
jl
sahf
mov
mov
in
push
outsb
test
aas
and
push
add
mov
cmp
clc
mov
xlat
ret
xor
or
leave
jl
inc
push
fdivl
out
push
add
push
dec
test
inc
imul
lock
jno
and
cmpsb
aam
adc
mov
lcallw
adc
cwtl
xchg
mov
movb
add
mov
xchg
inc
ja
pop
daa
xchg
lds
dec
clc
dec
mov
jge
sub
into
xchg
adc
out
push
mov
cmp
repnz
out
adc
fsub
sub
addr16
rclb
daa
fwait
sbb
lret
jecxz
mov
jbe
add
or
stos
hlt
jmp
mov
setl
mov
push
fwait
mov
mov
sbbl
xor
dec
nop
std
neg
cmp
mov
insl
clc
cmp
icebp
jg
lea
cld
mov
push
lahf
out
add
and
or
movsb
jno
mov
lcall
in
xchg
loopne
mov
and
popa
adcl
push
loope
jg
bound
jnp
in
mov
in
push
inc
ret
aas
popf
in
or
mov
mov
and
jecxz
xchg
push
pop
or
in
sbb
scas
dec
js
lcall
outsl
push
sbb
mov
adc
inc
rcr
pusha
cmpsb
sub
inc
call
rcr
push
rol
enter
int3
or
frstor
out
lahf
xor
bound
jg
jg
test
mov
or
jb
cmp
pop
pop
notl
xor
xor
cmp
mov
mov
cmpsl
popf
mov
cld
shlb
negl
mov
filds
sbb
mov
push
mov
pop
mov
lcall
out
push
sarb
cmp
or
int
xlat
ljmp
add
movsb
out
rcrb
out
and
stc
mov
rclb
xlat
roll
cmpsw
dec
adc
cmp
mov
xchg
movsl
pusha
loope
cmpsl
in
outsb
rorl
push
jp
stos
in
ds
lods
inc
jmp
inc
aas
or
push
ljmp
and
push
sbb
addr16
lods
out
xchg
bnd
ret
cltd
jb
mov
and
and
cld
xor
sti
std
sub
mov
jne
sub
jbe
insl
xor
mov
push
jnp
jge
bound
loope
mov
pop
mov
cltd
jge
inc
or
mov
mov
cmp
andb
cld
test
add
push
jle
mov
outsl
jmp
jl
dec
adc
icebp
jno
lds
pop
pop
mov
sbb
sbbl
jle
cmpb
mov
in
mov
aam
dec
inc
lds
repz
xor
lock
shr
das
sti
xlat
or
jmp
lds
loope
jnp
gs
mov
mov
das
cmpl
xorl
adc
loope
mov
dec
inc
xchg
mov
pop
mov
dec
pushf
jle
or
xor
mov
pop
std
xor
rorl
sbbl
andl
cmp
xor
aam
add
add
hlt
sub
push
mov
call
mov
cmpsb
lea
cmp
into
xchg
rorb
sub
push
sub
sbb
scas
mov
fidivl
scas
les
popa
sahf
lock
movsb
ljmp
lds
or
addr16
mov
push
mov
dec
mov
push
cmpb
stc
clc
call
sub
stos
add
push
jne
orl
push
sbb
testb
cmp
sbb
and
mov
push
jne
jp
scas
mov
and
ss
clc
add
cmp
jp
or
jb
addl
movsb
cli
or
dec
push
lods
pushl
scas
sub
or
mov
pop
cmc
mov
lret
xchg
push
dec
bound
jnp
andl
cs
inc
xor
sar
cmp
ja
mov
push
out
xchg
dec
adc
ror
fbld
andb
and
push
inc
jno
jge
stos
mov
es
jae
out
in
mov
mov
addr16
loope
leave
into
in
mov
loope
pusha
and
stc
jecxz
popf
jp
repz
jbe
icebp
cltd
in
jmp
sahf
xchg
xchg
adc
jle
adc
cltd
imul
add
pop
orb
arpl
push
ljmp
cwtl
rol
push
hlt
lock
aam
mov
cmp
push
int
cmc
and
mov
insl
or
outsb
add
adc
in
mov
adc
int
mov
mov
mov
dec
sbb
push
pop
shl
pop
outsl
fistpl
je
sub
in
pop
push
daa
pop
mov
push
adc
test
es
ret
pop
jg
cmp
and
cmpsl
addr16
adc
aad
inc
adc
outsl
sub
nop
mov
fbstp
jbe
xor
jmp
gs
sub
pop
popf
cmp
out
leave
jb
pop
scas
cmp
and
cmp
aad
sub
cmp
pop
stc
addl
xor
mov
mov
jecxz
das
jns
sbb
ss
daa
inc
adc
mov
dec
dec
outsb
dec
mov
xchg
pop
popf
shlb
cmpsl
out
cmp
aaa
movsl
cmp
roll
popf
add
mov
push
xor
xor
and
push
movsb
mov
lock
mov
pop
rclb
in
dec
pop
scas
mov
jns
dec
lds
or
insb
cmc
sbbl
sub
sti
add
or
cmc
repnz
xchg
pop
cs
inc
jne
out
cmc
prefetch
dec
sub
push
jno
icebp
imul
rol
inc
push
rorl
or
and
jnp
fbld
jle
or
mov
ficoml
xchg
shrl
test
mov
adc
pop
xchg
scas
test
add
jnp
hlt
mov
test
sbb
sub
add
outsl
lods
test
push
push
test
adc
test
jns
mov
pushf
cwtl
adc
sbb
aas
mov
jl
adc
call
push
or
sub
sbb
mov
fadd
cmp
lock
xchg
outsb
or
rolb
or
mov
cmp
jnp
pop
pusha
lock
mov
aad
xchg
test
std
insl
xor
cmp
jns
mov
das
mov
mov
mov
dec
sbb
sub
shll
addr16
add
pushf
mov
cli
mov
dec
xor
test
push
mov
test
daa
in
xor
push
lods
mov
das
jmp
out
adc
and
xor
shrl
sub
scas
mov
sub
call
das
and
jae
mov
lock
leave
lea
mov
xor
int
cmc
xchg
push
xlat
mov
stc
cli
jl
ds
push
xor
ss
in
ljmp
jb
inc
inc
sub
insl
fistps
mov
jge
or
fistpll
popa
bound
jp
inc
xlat
or
leave
xor
movsb
push
add
repz
push
leave
rcr
lret
leave
mov
andb
dec
or
add
cli
adc
lret
hlt
mov
sub
adc
pop
in
mov
mov
mov
shlb
xor
movsb
js
arpl
inc
daa
push
and
test
fidivl
jno
aad
and
cmpsl
stos
dec
shrl
mov
imul
repz
fnstenv
dec
cltd
inc
addr16
xchg
sbb
stc
mov
enter
fldl
or
adc
insl
cltd
jne
ja
sahf
pusha
pop
xlat
arpl
addl
out
mov
mov
inc
in
or
cs
adc
les
sub
fsubrl
test
xor
mov
vmovss
loope
pop
adc
pop
outsb
add
pop
pop
es
pop
mov
cmp
lcall
add
xorl
out
call
mov
jmp
ret
lahf
mov
pusha
imul
adc
sub
addr16
clc
xor
imul
rolb
fnstsw
dec
dec
sbb
cmp
or
push
aas
xor
popf
add
add
or
shl
daa
sbb
adc
mov
jbe
xor
or
std
clc
pop
push
jmp
dec
xchg
pop
or
lret
xor
cmp
in
pop
xchg
push
les
sbb
jg
rcrw
pop
lea
cmpsb
lods
stos
or
xchg
jle
add
insl
inc
xchg
repnz
fbld
stos
sub
aas
repnz
inc
fs
out
xchg
sti
lock
pop
movsl
and
js,pn
into
sub
shr
mov
in
xlat
int3
sti
stos
in
cld
xor
ret
xchg
sbb
test
push
lods
pop
mov
data16
sub
lods
icebp
jb
and
fistl
mov
xchg
add
jg
pop
jne
pop
cmc
lock
insb
in
mov
inc
dec
push
mov
fdivs
or
bound
pop
or
test
push
out
int3
or
dec
inc
or
add
or
sub
dec
xchg
ja
pop
mov
lahf
push
and
iret
out
cmp
loope
mov
mov
xchg
dec
lds
dec
jnp
testb
mov
push
mov
and
push
ret
gs
and
and
dec
fldl
pop
sti
rcl
pusha
aam
inc
mov
jle
jae
scas
push
mov
repz
pop
mov
pop
fcomps
sbb
and
cmp
movl
jl
and
mov
repz
out
insl
mov
sub
add
les
adc
movsb
lahf
pop
imul
fwait
mov
out
sbb
in
jo
jp
lods
push
cmp
sbb
mov
stos
nop
into
enter
out
mov
xchg
cmp
sub
xchg
js
stc
jns
and
lcall
fucomi
sahf
inc
loope
adc
dec
sbb
repnz
rcll
push
jae
push
in
xchg
push
ret
test
mov
nop
dec
mov
mov
sbb
jmp
push
mov
std
adc
ficoml
xchg
scas
fcom
popa
jae
rorb
hlt
gs
mov
adc
test
fs
lret
dec
out
insl
push
test
lea
jb
out
sub
lcall
aam
inc
add
out
xchg
and
mov
sub
mov
or
mov
sbb
stc
loopne
dec
out
pushf
ret
cmp
xor
call
or
mov
push
add
add
xorb
push
dec
test
xor
jne
fstl
lcall
aas
inc
inc
or
fdivr
loopne
add
dec
xlat
dec
mov
or
mov
lock
lea
add
jae
pop
xor
lods
cs
mov
aas
push
cmpsb
and
pop
inc
fmul
ja
lret
enter
fwait
push
ret
hlt
outsl
mov
push
xor
mov
jmp
mov
cli
fsub
sbb
addb
adc
add
jecxz
dec
in
add
ret
cltd
pop
pop
pushf
jle
repnz
jno
or
xchg
jmp
loopne
xchg
test
push
sbb
jne
rcrl
xor
dec
in
jae
ljmp
addr16
lret
xor
cmp
inc
mov
je
mov
lods
fldl2e
xor
mov
cmpsb
repz
fadds
aam
pop
adc
and
sbb
cli
addb
and
sbb
push
pushf
pusha
and
cmp
out
and
cmp
cmp
xor
or
shl
dec
mov
add
repz
fwait
mov
mov
or
or
add
xchg
push
pop
mov
push
sarl
add
sbb
cmp
or
jge
lea
mov
cmp
lret
xor
inc
lods
pop
sahf
jae
movsl
imul
xor
addr16
push
push
push
jb
jne
sbb
push
or
mov
mov
js
popf
sbb
and
stos
pop
xchg
lds
mov
add
mov
inc
lods
icebp
andb
bound
sub
xor
adc
shll
mov
call
mov
cmpsl
movsl
jg
lods
testl
xchg
ret
mov
js
out
jae
xor
jnp
daa
mov
sbb
xor
ljmp
out
js
jl
xchg
push
test
shrl
push
enter
in
lock
divb
sub
dec
jae
aas
cmp
sbb
loop
add
add
add
fnstsw
ljmp
xor
push
aad
sahf
stc
or
imul
mov
clc
je
pop
xor
dec
cmp
inc
stos
rep
or
adc
jns
scas
add
push
popf
adc
daa
push
decb
les
mov
sbb
or
mov
mov
sbb
push
jo
lods
mov
out
mov
inc
nop
push
test
loope
xor
mov
add
mov
jge
push
sbb
jle
jge
mov
mov
adc
cmp
stos
repz
fdivrs
test
xlat
mov
cs
stos
mov
imul
inc
and
loope
sub
into
mov
inc
adc
mov
push
lea
cmp
cmp
stos
cwtl
sub
dec
pop
bound
xchg
adc
sbb
jmp
mov
sub
insl
out
dec
and
rclb
dec
jl
cmp
pop
fmuls
or
aas
xorl
jnp
mov
mov
jo
movsb
xchg
pop
fnstsw
xchg
imul
fcompl
sbb
push
cmpb
test
adcl
jecxz
out
push
push
cmpsl
icebp
add
insb
jmp
mov
xlat
dec
std
fwait
mov
out
fisubrl
inc
imull
jbe
iret
lahf
mov
jns
sub
movsb
push
and
jae
inc
mov
in
or
sbbb
mov
jnp
jmp
xlat
dec
inc
inc
mov
pop
push
jnp
testl
mov
int3
bound
mov
std
jno
add
add
jb
mov
mov
call
sbb
xor
adc
aad
cmp
ret
lods
cli
cmp
inc
mov
mov
dec
inc
xor
out
pop
in
and
hlt
xchg
loop
fisttpll
pop
test
pusha
repnz
cmpsl
mov
sub
test
cld
xchg
jmp
mov
jge
sbb
test
mov
and
hlt
sub
mov
loope
mov
adc
xchg
pop
das
xchg
xor
test
clc
jno
shll
inc
or
lcall
and
icebp
mov
xchg
push
lea
lods
fs
mov
adc
lds
mov
sbb
sbb
orl
filds
je
sbb
sub
jb
data16
push
popf
cmp
push
mov
mov
clc
sbb
xchg
clc
outsb
and
mov
sbb
jbe
in
clc
loop
mov
push
lcall
jg
dec
sbb
pop
lret
and
imul
and
std
push
lahf
in
es
mov
add
mov
adc
adc
scas
xchg
cmpsb
add
outsl
outsl
adc
ss
mov
and
aam
mov
cmp
outsb
test
loope
call
lret
inc
test
int3
add
sti
dec
mov
iret
sbb
stos
dec
mov
push
aaa
inc
jo
and
xor
or
loope
or
add
fwait
xor
jb
call
add
mov
pop
and
and
sub
outsl
enter
mov
add
inc
aam
jg
imul
pop
bound
addr16
push
mov
jo
mov
popf
in
arpl
adc
loop
sub
dec
xchg
xchg
jnp
in
daa
mov
pop
loopne
jp
xchg
out
xor
push
mov
add
test
sbb
sbb
popa
adc
mov
or
push
or
pop
fldenv
insb
xchg
les
fcoml
sarb
mov
mov
sub
rcl
add
xchg
rorl
aas
std
add
xor
jecxz
repnz
adc
das
std
outsl
int
adc
push
roll
or
mov
bound
aam
out
cmc
xchg
int
gs
push
test
jl
sbb
adc
jge
mov
and
pop
mov
dec
sub
dec
std
enter
flds
mov
fs
lret
into
pop
dec
test
aad
scas
sub
mov
mov
out
inc
imul
lds
lods
xchg
push
cltd
mov
cmp
in
int3
dec
xor
mov
je
into
fst
push
add
cmp
pop
jle
add
pop
or
adc
inc
mov
sbb
mov
inc
adc
popf
insl
inc
sbb
mov
or
fcmovne
xchg
stc
mov
sbb
lods
aam
sub
cwtl
ds
adc
xchg
ret
xor
filds
xchg
daa
out
into
xchg
pop
sub
cli
ret
loopne
fiaddl
dec
test
hlt
and
mov
or
jp
mov
clc
test
push
cmp
pushf
jae
repnz
js
stc
pop
testl
les
fnstcw
sub
sbb
cmp
jns
lock
mov
add
fucom
push
mov
outsb
dec
jae
pop
into
jl
frstor
out
mov
lods
mov
xor
jne
dec
cltd
xlat
pop
shll
and
jecxz
lcall
repz
jns
and
sub
movsl
iret
push
pop
pop
notl
lock
call
cltd
xor
adc
dec
fwait
sub
cwtl
xor
sub
movsl
rcr
lds
call
xchg
sbb
jg
jmp
js
loopne
jmp
mov
cltd
jle
jg
add
jge
push
pop
cwtl
mov
xchg
and
test
add
mov
clc
and
into
add
mov
mov
faddp
dec
xchg
or
push
into
andb
ret
or
sub
pop
mov
int
sub
movsl
jbe
fstl
dec
cmp
jb
push
cmpsb
shrb
lret
sbb
test
xchg
lock
outsb
mov
ret
jmp
add
cwtl
lret
int3
orb
cmpsl
and
fstpl
movsl
push
and
rcll
sahf
fsubrl
mov
int3
insl
orb
mov
int
dec
cmp
enter
hlt
fsts
in
xchg
lahf
or
cwtl
enter
movsb
test
std
cltd
cmp
add
jge
jno
add
sbb
loopne
push
jmp
sti
jge
and
data16
adc
and
jae
icebp
fdivs
cltd
std
in
ss
push
stc
inc
bound
push
sub
test
loop
push
lret
cmp
pop
in
pushf
bound
xor
push
push
xchg
pop
loope
sbb
jne
push
sbb
xchg
lahf
fstl
xor
addl
insb
shlb
or
lahf
sub
adc
addb
adc
sbb
cmpsb
dec
xor
push
push
rol
xor
mov
xor
mov
lock
xchg
dec
cmp
jmp
add
adc
lds
les
adc
push
pop
rolb
sbb
inc
add
mov
mov
cmovns
add
pushf
enter
jge
or
je
cmp
stos
testb
repnz
cmp
aaa
jge
sbb
in
pop
decb
sub
daa
popf
or
and
stos
mov
add
insb
cli
sbb
lea
arpl
sub
test
pop
dec
cli
dec
mov
mov
xchg
push
lds
mov
jl
push
mov
jl
jae
and
roll
and
mov
insl
mov
in
or
and
lret
push
cmp
xchg
add
mov
fdivs
int
fisttpl
jnp
in
test
cld
add
nop
dec
dec
lret
sub
dec
add
cld
add
lret
rcll
stos
imul
mov
sub
pusha
sbb
fdivrl
sahf
sbb
fmull
or
mov
push
sbb
cwtl
fwait
pop
in
mov
cli
ljmp
out
pop
xor
fsubr
cmpsl
js
mov
shlb
dec
ss
ss
jmp
lods
shr
roll
shl
push
push
jb
mov
pop
inc
sbb
lea
jbe
inc
adc
popf
les
pop
dec
add
testb
cmp
into
lods
leave
lret
cmpsl
inc
aaa
and
cmc
f2xm1
stos
dec
sub
ud1
inc
jnp
mov
cmp
dec
pop
sub
cwtl
cmp
out
cmpsl
ret
fidivl
mov
shrl
out
pop
inc
adc
sti
mov
ljmp
jmp
mov
mov
ja
or
notb
and
dec
and
jae
imul
pop
jg
mov
mov
cli
cmp
out
inc
lahf
sub
xor
and
arpl
out
inc
push
jno
shlb
jecxz
cwtl
add
out
nop
jne
int
cli
imul
insb
and
aam
dec
add
sti
lcall
xchg
rolb
mulb
sub
adc
shr
pop
leave
fsubs
mov
leave
addr16
test
mov
ret
fldcw
push
pop
and
xor
mov
xchg
cs
cmp
shll
dec
hlt
icebp
cltd
xchg
iret
js
or
push
mov
sub
mov
cmp
insb
sub
add
jno
mov
dec
dec
nop
shlb
popa
loope
pop
sub
inc
mov
and
and
mov
xchg
scas
mov
mov
add
jno
mov
dec
xchg
push
dec
pop
ud0
sub
movsb
loop
xor
jge
jno
data16
push
sahf
repz
sti
xchg
add
aam
mov
icebp
inc
pop
jle
dec
loop
pop
ljmp
gs
mov
cs
adc
mov
mov
pusha
jns
imul
mov
ficoms
lea
les
movsl
push
sbb
gs
daa
loop
xchg
push
aad
sub
pop
xor
adc
or
imul
xchg
fwait
inc
sub
aam
cmp
fisubs
xor
popa
jle
loope
push
out
fdivl
sbb
cmc
push
xor
neg
das
cmc
aam
or
add
inc
dec
sahf
fadds
lret
dec
push
outsl
fchs
pushl
pop
pop
inc
mov
xchg
arpl
int
inc
pop
sbbl
jae
test
fucomip
movsl
add
or
or
xor
sahf
or
cmpb
int
stos
cmc
movsl
mov
xchg
inc
std
add
inc
push
mov
jne
adc
test
es
adc
test
push
jns
cmp
pusha
out
cs
push
sub
cmp
lret
arpl
jb
mov
add
enter
lods
and
mov
xchg
mov
addr16
aad
xor
push
stos
sahf
mov
lcall
sbb
sti
aas
std
pop
cs
std
std
fstpt
nop
enter
stos
cmc
xchg
fwait
mov
lods
add
popf
jno
xor
jmp
jl
inc
lods
clc
addl
mov
xor
push
mov
imul
in
ds
push
not
je
cmp
dec
and
or
iret
negl
mov
in
int
adc
push
pop
pop
mov
pop
mov
cs
cltd
dec
sbb
sub
sub
int3
nop
xlat
imul
test
mov
push
xchg
mov
loopne
push
push
aaa
xchg
imul
or
xlat
loopne
sub
xor
aad
sbb
scas
add
aam
inc
stc
xor
fwait
stos
test
mov
test
add
jb
out
aad
xlat
sbb
lock
jge
jp
jne
jb
xor
nop
hlt
and
sbb
dec
and
fsubrl
pop
cltd
push
int3
popa
arpl
push
pushf
mov
pop
xor
xchg
or
adc
dec
pusha
sbb
jle
fnsave
adc
lds
sbb
repnz
test
cmp
jne
or
pop
sub
ds
repnz
call
jo
mov
and
pusha
sbb
test
inc
or
aad
cmp
mov
dec
in
fistpll
movsl
fsts
dec
inc
movsb
add
repz
rclb
xor
ljmp
fsts
push
push
sbb
scas
popa
add
push
mov
and
imul
movsl
loopne
mov
insl
loopne
sti
lcall
xchg
ljmp
pop
repz
pusha
mov
loopne
mov
lock
mov
insb
xchg
add
sub
lret
fmull
jnp
mov
mov
sub
jmp
dec
push
pop
push
test
fildl
mov
addr16
push
js,pt
enter
imul
movsl
test
rol
jg
cmpsl
jp
xor
dec
xchg
mov
pop
aas
jo
dec
icebp
jecxz
and
lret
shr
sub
movsb
popf
push
out
pop
in
jo
pop
adc
cmp
int
lods
mov
mov
jno
sbb
push
mov
push
and
xchg
shll
cmp
sbb
lahf
cltd
call
insl
mov
cmp
fisubrs
adc
mov
cwtl
jl
cwtl
dec
mov
sbb
mov
mov
nop
dec
lret
push
pop
enter
outsb
xchg
rcll
shl
rcrb
roll
int
sar
ja
test
push
pop
inc
push
enter
in
mov
pop
and
in
jle
lock
push
sahf
arpl
ljmp
arpl
and
in
lret
adc
mov
xchg
clc
mov
ret
jmp
inc
or
adc
pop
aas
dec
push
in
xchg
dec
or
fmulp
std
pop
mov
dec
lock
push
push
je
push
clc
adc
xchg
cmp
int
movsl
inc
xchg
fdivr
in
jne
xor
data16
jnp
adc
iret
leave
mov
cs
jecxz
add
pop
cs
fxch
inc
or
pop
neg
xchg
aas
jmp
dec
xor
cmpsb
and
push
bound
and
xor
mov
sbb
push
loope
loope
adc
sub
push
xor
mov
enter
push
add
xchg
lret
dec
xchg
cltd
test
lea
and
es
push
jmp
cmp
cmc
lahf
iret
add
adc
movl
cs
loop
push
cmpsb
popf
jecxz
sub
js
jp
insl
fwait
add
adcl
inc
cmpsl
repnz
icebp
mov
mov
out
cmp
push
rcll
cli
jbe
push
xor
jp
dec
loop
imul
cmpb
push
mov
dec
dec
xchg
ljmp
stos
sub
fimull
mov
mov
dec
sbb
call
inc
out
and
jbe
and
push
in
out
mov
pop
mov
jne
fsubrp
add
mov
scas
test
arpl
push
xchg
and
push
xchg
push
in
push
std
lret
fsts
leave
xchg
nop
outsl
and
ljmp
and
rcll
mov
jb
cli
mov
ss
aad
mov
mov
add
dec
cmpsl
fisubrl
mov
sub
arpl
jmp
das
call
and
inc
push
pop
dec
push
mov
sbb
aas
cwtl
insl
in
fstpt
push
fisttps
mov
xor
ret
test
sbb
das
adc
and
std
pop
into
aaa
test
stc
push
xor
out
iret
mov
addr16
sub
out
pop
add
movsb
dec
scas
imul
add
lahf
scas
aam
jl
push
pop
push
push
or
push
push
jno
fisubrs
stos
jo
and
add
insl
pop
push
jne
jno
ficomps
jns,pn
dec
out
stos
or
movsb
imul
lea
xchg
cmovg
sub
and
pop
orb
stc
xchg
and
push
rolb
or
insb
jg
sub
in
ja
sbb
mov
pop
mov
pop
pop
in
mov
fidivrl
imul
icebp
push
sarb
lahf
lds
and
add
adc
hlt
sub
jp
add
xchg
lret
xlat
jo
mov
subl
shr
pop
es
int3
mov
call
dec
out
cmpsl
data16
jbe
adc
lcall
cld
pop
movsb
push
es
ret
lea
inc
sub
stos
sbb
mov
out
mov
mov
pusha
enter
jnp
push
jge
inc
dec
or
int3
ja
aaa
test
pop
mov
push
pop
pop
out
sti
iret
repz
cmp
outsl
mov
mov
addb
rcrb
dec
lds
pusha
mov
cli
cmpsl
mov
pusha
push
mov
xchg
add
leave
pop
cwtl
sti
mov
jle
inc
pop
inc
pop
dec
pop
cld
adc
push
xchg
hlt
jnp
pop
xor
mov
popl
js
popf
fcmovnb
or
adc
cmp
cmp
ljmp
and
push
divb
adc
in
mov
and
inc
dec
mov
ja
push
xchg
inc
int
iret
adc
sbb
dec
popa
inc
mov
jge
insl
cwtl
jae
sahf
pop
push
aad
jb
ljmp
inc
adc
xor
fcoms
mov
mov
shlb
int3
pop
and
mov
lock
iret
or
mov
sarl
xchg
mov
mov
aas
popa
rcr
pop
jge
jbe
xor
es
mov
and
andb
shll
inc
cld
mov
adc
popf
mov
sarb
jg
sbb
jb
sbb
jbe
mov
lea
fcom
sub
sub
mov
cmpsb
jbe
sarb
cltd
pop
leave
mov
mov
mov
adc
loop
aam
mov
out
jge
out
out
sub
int3
sub
jp
sti
push
push
mov
push
mov
jg
je
es
mov
and
testb
lahf
mov
inc
xchg
call
xor
popf
lret
adc
lods
jmp
pop
adc
jo
cmp
pop
xchg
icebp
and
lds
adc
sub
mov
iret
push
jl
or
jb
scas
idiv
lcall
push
add
fwait
xor
inc
dec
imul
dec
call
movsl
sahf
mov
sahf
sub
fwait
sahf
jmp
lods
xlat
ret
adc
adc
xor
sbb
stos
jge
cmpsb
push
repz
mov
scas
cmpsl
arpl
lcall
inc
dec
aaa
adc
adc
je
es
jp
fisubrl
clc
mov
gs
daa
cltd
xchg
mov
lods
mov
inc
pop
rol
dec
and
mov
out
pop
in
aam
das
int3
pop
mov
clc
mov
lahf
leave
pop
cmpsl
jb
test
sti
xchg
insl
and
jl
mov
movsl
rcll
std
mov
cmc
daa
ret
cmp
cld
xchg
mov
fistpl
sbb
lcall
sub
pop
mov
push
js
rcrb
mov
shr
fdiv
or
push
add
cld
lock
aaa
mov
dec
jb
or
sub
subb
xchg
lret
hlt
adc
dec
push
or
repz
and
mov
jns
jle
xor
in
jle
cwtl
mov
jnp
es
add
adc
outsl
roll
mov
mov
mov
aaa
popa
and
shlb
pop
jg
jp
inc
cmp
popf
pop
ds
ljmp
das
mov
imul
xor
fs
xchg
stos
mov
fstp
fidivl
push
js
xchg
inc
add
jecxz
pop
fcmove
je
movsb
mov
movsl
popw
pop
inc
out
fisubl
xor
mov
ljmp
mov
push
add
iretw
sbb
fs
inc
lahf
sbb
xchg
fwait
push
jp
cmp
stos
lock
in
pop
mov
adc
pop
cmc
sbb
fcompl
std
neg
sarl
sub
sbb
sbb
fmul
and
dec
add
dec
pop
lods
jp
ja
jge
mov
loope
cmp
push
and
aam
out
xor
xor
add
popa
lret
cld
nop
xchg
call
out
mov
bnd
fidivl
insb
shll
out
leave
adc
in
pop
insl
js
xor
inc
mov
dec
or
and
fcompl
mov
cli
jb
fbstp
loope
sub
mov
mov
fildll
push
aad
add
aaa
imul
inc
mov
and
mov
xor
sub
popf
adc
push
cmp
pop
mov
fbstp
add
push
mov
pop
rcrl
jg
cmp
inc
out
dec
fadds
cltd
mov
adc
mov
xor
loop
lea
icebp
pushf
pop
out
das
xchg
cmp
mov
inc
cltd
sbbl
mov
xchg
jl
mov
enter
insb
inc
dec
outsb
mov
aam
pop
out
mov
xorl
push
xchg
push
sahf
sub
shlb
js
dec
pop
sti
aaa
leave
ret
cli
push
gs
jle
inc
and
pop
pop
fbstp
jae
mov
or
mov
lods
xchg
sub
sub
sub
lea
xchg
popf
adc
loop
add
into
push
sarb
outsl
or
mov
outsl
sbb
push
pop
lret
icebp
mov
inc
adc
adc
scas
cmp
bound
or
inc
ljmp
sub
mov
mov
outsl
lahf
test
rep
add
mov
dec
inc
push
mov
scas
jge
cmc
cmc
mov
lret
jns
scas
sbb
ja
std
inc
mov
notl
in
je
pusha
mov
xor
rorl
cmpsl
mov
test
and
pop
adc
pop
fldcw
inc
or
pushf
jnp
sbb
cmpsl
lcall
jne
andb
mov
repnz
dec
xor
les
dec
mov
add
add
mov
add
lret
mov
sbb
mov
jecxz
cmpsl
sub
inc
sahf
shr
push
sub
xchg
cmc
shlb
fdivrl
xchg
and
fs
mov
push
push
bound
in
lret
push
mov
inc
push
inc
clc
js
cmp
pusha
sub
add
in
xchg
mov
xchg
adc
repz
push
cltd
push
imul
fcoms
or
sub
mov
xor
sbb
mov
into
aaa
dec
push
xchg
push
pop
scas
cmp
cltd
jp
fmull
mov
mov
mov
dec
add
jo
jbe
inc
add
push
inc
fimuls
push
push
outsb
xchg
push
lahf
lret
jnp
icebp
inc
in
mov
pop
fld
jne
xlat
push
mov
push
push
jp
mov
mov
lea
aam
je
jno
inc
push
push
xchg
fldenv
xorb
in
lods
dec
add
mov
or
inc
sbb
ret
fidivrl
fwait
stos
sub
jno
sbb
std
cmpsl
and
adc
ret
hlt
dec
lds
pop
fs
add
add
movl
lret
and
and
mov
sub
test
mov
mov
outsl
xor
inc
fnstcw
inc
insl
add
out
nop
xlat
mov
mulb
inc
test
or
sti
jo
fmull
inc
adc
loopne,pt
adc
add
and
sub
sbb
hlt
lods
inc
pop
test
pop
push
fs
pop
mov
inc
mov
outsl
cmp
mov
or
in
adc
inc
pop
in
cmp
jae
bound
fs
mov
sar
hlt
je
in
cmp
mov
jae
jge
sub
nop
stos
orb
sub
mov
addr16
out
js
sbb
fldl2t
imul
sbb
jmp
jbe
xchg
dec
lock
adc
lock
fstpt
out
cltd
and
pop
adc
js
movsl
inc
and
jno
in
jb
cltd
cs
sub
pop
rolb
cli
mov
inc
push
dec
add
xchg
jge
stos
inc
lods
mov
inc
adc
jg
jle
xor
sub
sahf
fidivs
ficompl
inc
xchg
mov
hlt
jmp
pop
lods
sub
push
jmp
cwtl
mov
sub
popa
rcl
sbb
add
inc
sub
cwtl
mov
outsb
dec
mov
pop
cmpsb
daa
or
add
or
clc
xor
cs
aaa
or
cmpsb
stos
adc
cltd
scas
fldcw
mull
loopne
adc
pop
or
rorl
mov
aas
iret
hlt
jmp
loope
sbb
sbb
cwtl
iret
mov
enter
sub
bound
sbb
out
sarb
div
cli
out
ja
inc
pop
test
shrb
mov
and
xchg
pop
inc
sub
mov
loopne
jne
call
loopne
adc
addl
in
sub
push
hlt
popf
scas
jno
subb
mov
push
loopne
or
cmp
sub
in
stos
pop
xchg
xchg
add
pop
mov
mov
sbb
xor
add
dec
push
pop
inc
shrb
add
cmp
adc
mov
push
pusha
xor
or
mov
sbb
mov
mov
lret
filds
js
dec
fsubrs
mov
mov
cmc
leave
push
push
int
mov
dec
inc
mov
pop
xchg
sti
or
push
or
repz
sub
xchg
bound
repnz
sub
and
ljmp
mov
cwtl
adcl
loope
es
xchg
daa
pop
shlb
fucomip
jge
std
stos
outsl
xchg
jns
scas
loope
data16
pop
xchg
cmpsb
mov
neg
hlt
fcomps
aad
push
add
push
or
xchg
call
shll
and
cltd
andl
mov
mov
cs
or
push
adc
out
fmull
fistpl
xchg
shll
icebp
stos
inc
xchg
sti
jp
jbe
divb
mov
push
clc
ss
sbb
jge
mov
mov
push
push
mov
add
stos
movsl
pop
mov
xor
pop
lods
mov
inc
js
xchg
jbe
sub
sub
inc
add
mov
cli
sbb
dec
js
mov
or
daa
repz
and
mov
dec
sbb
sbb
sbb
cli
jb
add
enter
mov
popf
xchg
jae
mov
dec
ljmp
daa
fisubrl
dec
dec
rolb
shl
hlt
or
dec
cmpsl
aaa
mov
ja
out
push
pop
subl
xor
inc
or
jbe
stos
xchg
fistpl
stc
push
mov
mov
stos
mov
lods
xorl
daa
sbb
mov
call
mov
jp
mov
fldl2t
push
jns
xor
push
lds
out
push
inc
je
repnz
and
mov
push
ja
js
out
mov
xor
stos
in
cmp
enter
jne
kandb
aaa
mov
xchg
cmc
lret
ror
dec
push
addb
es
mov
in
jp
or
into
and
stos
xchg
jp
pop
jge
cwtl
sbb
mov
nop
pusha
sub
push
fisubrl
xchg
daa
xor
es
sub
jbe
sub
mov
js
es
testl
mov
inc
pop
addl
clc
lcall
or
jmp
push
imul
push
sub
imul
fistps
add
jb
mov
cmc
jns
xchg
sbb
jae
insb
push
push
push
sti
cltd
xorb
xlat
pop
and
mov
ljmp
pusha
xchg
int
jnp
add
inc
and
push
outsl
insb
sub
lods
rorl
addr16
popa
mov
xlat
sbb
fcmovbe
xor
cmpl
jge
jno
arpl
xor
lock
and
dec
test
push
add
mov
mov
xor
jg
xchg
aam
and
xor
dec
jp
pop
test
jl
insl
rcrl
inc
shl
inc
pop
or
inc
lcall
adc
fmull
mov
test
mov
mov
xchg
jns
sub
jmp
loope,pn
sbb
or
add
scas
xor
mov
out
lock
lret
sbb
inc
mov
jnp
pop
mov
rcl
sbb
cmp
decb
or
adc
mov
cli
and
lcall
enter
and
jp
adc
popa
mov
pushf
inc
sti
push
imul
cltd
cmp
rcrb
cmpsl
movsl
lods
xchg
sbb
xchg
sub
dec
or
dec
mov
push
push
lret
fiadds
scas
stos
push
rorl
sub
xchg
and
or
push
sti
push
in
arpl
scas
xor
cmp
mov
rclb
ja
out
dec
sbb
mov
cmp
lods
out
pop
lods
test
xor
jge
sbb
sub
insl
ret
in
loope
mov
sub
push
lock
push
fdivrs
subl
popf
mov
mov
mull
std
mov
jge
sbb
jge
out
push
mov
or
fmul
in
rcrb
sub
sub
add
outsb
jp
lods
push
jle
das
xor
and
fwait
dec
fistpl
cmp
andl
pop
ss
push
test
push
adc
mov
cmp
adc
fnsetpm(287
js
imul
adc
adc
div
push
jp
xor
aaa
mov
xchg
add
ljmp
ret
popf
insb
cld
or
ja
mov
adc
cltd
pop
cs
shll
lock
icebp
adc
and
pop
loope
or
pminsw
or
mov
xchg
icebp
lods
push
lret
popf
add
inc
fwait
sahf
mov
sbb
mov
pop
xor
shrb
ret
hlt
dec
pop
push
xor
in
ret
sbb
and
icebp
arpl
ds
pop
sti
mov
fiadds
lds
loop
mov
add
lea
call
mov
inc
mov
pop
adc
jl
cmp
sarb
aas
dec
jb
mov
dec
sub
out
add
pushf
stos
iret
and
ja,pn
loope
sti
popa
pop
orb
cmpsl
sub
pushf
jbe
push
out
cmpl
negb
sbb
cmp
push
fcom
xchg
xlat
xor
wrmsr
aas
push
jbe
jbe
test
mov
aaa
xchg
rorb
mov
scas
mov
test
gs
mov
dec
mov
popf
xchg
xor
std
mov
clc
std
mov
in
testl
jne
fcomi
mov
not
lcall
mov
adc
push
xchg
pushf
add
adc
iret
mull
cmp
cld
inc
mov
out
xchg
fwait
js
pop
sub
or
nop
jns
xor
lea
daa
rcll
pop
mov
jb
xor
and
insb
fcomip
pop
rdmsr
or
test
jbe
leave
xor
mulb
cs
xchg
out
stos
mov
lock
jle
in
sti
fldt
fstpt
test
push
xor
adc
cmp
cmc
hlt
jge
and
inc
mov
loopne
xchg
mov
mov
je
out
icebp
jle
das
scas
dec
fmull
shr
aam
sub
arpl
daa
pop
les
int
loop
jne
mov
adc
shrl
mov
mov
mov
ljmp
cmp
push
sbb
add
adc
adc
mov
pushf
mov
mov
dec
adc
or
dec
shll
dec
pop
pop
orb
jp
std
int3
outsb
pop
lret
mov
sbb
adc
xchg
mov
pop
dec
or
xor
lahf
lahf
inc
sbb
pusha
xor
lds
mov
mov
or
sar
inc
pop
hlt
cmp
fmull
or
jp
adc
pop
or
jl
lret
scas
sbb
loope
loopne
add
subl
bound
out
add
push
sub
and
fs
aam
pusha
adc
dec
mov
xchg
stc
js
stc
mov
je,pt
jo
sub
jnp
andl
mov
loopne
jle
stc
stos
mov
cmpb
adc
jmp
incl
or
xor
sub
xchg
inc
es
inc
in
lret
sbb
scas
cwtl
shrb
jge
mov
addl
fmull
push
and
ljmp
repnz
mov
es
pop
push
cs
fnstcw
fucom
aaa
pusha
int
sbbl
jae
movsl
out
stos
sbb
rcl
push
mov
into
jne
adc
xor
dec
sbb
pop
sub
movsl
mov
nop
xchg
ss
sbb
push
xor
divb
add
sbb
adc
mov
push
push
rorl
sbb
shlb
ret
fsubl
aam
into
lods
repz
roll
push
adc
pushf
inc
xor
call
jle
cmp
push
pushf
push
jecxz
cmp
fadds
in
mov
cmpsb
scas
sbb
int
mov
loopne
daa
pop
imul
jns,pn
mov
in
cli
push
adcl
shlb
xchg
adc
inc
cmc
inc
add
pop
pop
inc
aaa
inc
bound
les
adcb
dec
adc
fwait
mov
cmp
rcl
cmp
xor
out
testl
cmpsb
lods
fmuls
loopne
inc
and
or
ficoms
sub
mov
js
and
iret
mov
movsb
arpl
push
outsb
sbb
movb
mov
push
inc
jecxz
pop
mov
mov
sub
jb
lcall
rcll
or
adc
mov
pop
ja
xor
scas
ret
xchg
out
xorl
push
enter
pushf
test
cmpsb
mov
mov
xchg
push
test
bound
dec
and
data16
mov
test
xchg
mov
sub
lds
insl
add
pop
xor
jecxz
pop
dec
xor
ja
mov
in
loope
addr16
push
hlt
jno
push
cmc
jmp
iret
insb
imul
shll
decb
and
cmp
cld
loope
outsl
fldcw
sub
or
xor
insl
popf
mov
jb
xchg
pop
repz
jae
stos
xlat
fcomps
push
jnp
cmpsb
cmp
jno
inc
scas
je
sub
cmp
cmp
icebp
out
ja
push
mov
xor
loop
mov
pop
in
mov
adc
or
lods
icebp
dec
insl
mov
call
out
lds
sub
leave
cmpsl
pusha
or
pop
clc
out
in
pop
jo
pop
dec
mov
or
pushf
dec
add
add
push
mov
stos
sahf
leave
push
sub
into
mov
xchg
aad
das
and
popa
sbb
fstps
mov
add
add
jbe
dec
es
xor
inc
jno
mov
scas
push
dec
sbb
mov
jle
mov
ljmp
fwait
jle
fcmovb
outsl
addl
mov
imul
loope
inc
push
xor
insb
and
sahf
push
es
sarl
push
xchg
mov
movsb
mov
lock
or
push
or
popa
dec
leave
stc
jp
and
pop
movsb
iret
push
or
pop
mov
cmpsl
inc
jle
nop
fistpll
or
gs
insl
ds
jl
stc
mov
notb
outsl
push
xor
sbb
popa
mov
sbb
inc
clc
repnz
pop
std
push
and
lea
dec
jg
mov
in
icebp
enter
cmc
cmp
pop
mov
pop
inc
das
js
pop
cmp
xchg
mov
pop
inc
stos
or
inc
clc
push
xor
sub
adc
xor
adc
push
mov
fldcw
cs
add
popa
adc
add
out
cmc
es
out
fistpll
cwtl
sub
fidivs
add
mov
add
stos
cmpsl
dec
pop
jl
inc
lret
mov
in
mov
call
mov
push
test
jns
stos
adc
adc
loop
mov
stos
inc
inc
jb
loop
sub
mov
fnstcw
pop
popa
frstor
or
jmp
roll
test
leave
dec
pop
mov
filds
js
xor
repz
inc
mov
push
sti
mov
sub
push
push
jns
pop
xlat
add
mov
pop
cltd
dec
imul
push
xchg
ret
je
inc
mov
lea
push
arpl
xor
xchg
icebp
aaa
mov
pop
jmp
loope
bound
lret
jo
sbb
imul
dec
imul
lret
xchg
loope
or
inc
adcl
and
aad
pop
jg
dec
insb
cmpsl
ret
outsl
cmpsb
dec
pop
or
bound
test
loop
dec
pop
scas
addb
push
push
or
pop
je
fsubrl
adc
inc
push
and
pop
pop
pop
loop
lods
jge
sbb
cmp
push
sti
cmp
mov
jbe
pop
adc
les
sbb
mov
mov
scas
fwait
loope
orb
lea
dec
ds
mov
sahf
jmp
jmp
lret
or
nop
loop
cmp
arpl
fistps
lea
adc
push
mov
sbb
jne
addr16
insl
aaa
into
xor
je
push
ds
mov
lahf
lock
sbb
gs
add
mov
sbb
test
cmpsl
iret
cmpsb
in
fistl
aaa
cmc
imul
loopne
cli
fs
or
les
aad
push
push
inc
adc
mov
xchg
hlt
mov
xchg
dec
iret
je
in
pop
lret
call
sub
lcall
cmp
inc
mov
test
add
push
xchg
sub
les
fadd
mov
mov
xor
mov
iret
mov
imul
adc
int3
dec
push
mov
arpl
jle
or
xor
add
inc
mov
inc
fwait
lret
mov
cld
into
lods
or
movsb
lcall
sbb
cmp
insl
dec
dec
shlb
dec
cmp
xchg
out
lcall
aaa
or
jp
out
les
pushf
fwait
lahf
aad
xlat
aad
ja
xlat
js
dec
sbb
xchg
mov
xor
addr16
xor
roll
lods
jecxz
or
jae
clc
cmp
xor
loopne
shll
lcall
sbb
cmp
mov
lods
sbb
sbb
inc
sbb
inc
mov
adc
xchg
fstpt
sbb
mov
int
testb
xchg
popf
pop
scas
lahf
cli
pop
pop
sahf
sub
rclb
push
sbb
jns
hlt
adc
in
push
sti
dec
pusha
inc
xorl
fs
pusha
or
add
popa
imul
jmp
dec
popa
pop
pop
testl
sar
nop
xchg
sbb
jae
or
push
mov
sahf
dec
sbb
adc
or
sbb
jb
inc
ret
mov
cmpsl
ljmp
cmp
loope
ja
in
js
test
cli
cld
cmp
outsl
mov
popf
dec
dec
fdivrl
jle
movsl
sub
imul
cmpsb
repnz
popl
iret
subl
mov
inc
mov
sbb
mov
xchg
inc
imul
iret
push
dec
dec
test
je
mov
and
and
jp
icebp
sbb
dec
popf
adc
es
popf
mov
mov
xor
sub
sub
xchg
xchg
aaa
popa
sti
stos
nop
adc
icebp
test
mov
inc
or
sbbb
add
hlt
cmp
fucomip
lret
push
or
jnp
inc
xor
sub
lret
mov
pop
and
mov
mov
rorb
add
enter
fiadds
out
push
cmp
leave
testl
sbb
mov
pop
movsl
jno
outsb
and
pop
jns
in
int
call
popf
inc
sub
jmp
jb
das
daa
fs
mov
add
mov
xchg
jo
pop
popa
ja
out
mov
pop
mov
enter
ret
repnz
jbe
std
cmp
mov
xchg
jmp
popa
popa
idiv
cmpsb
movsl
pop
cmp
mov
orb
movsl
gs
aam
dec
pop
xchg
ret
adc
dec
fldcw
mov
leave
gs
shl
outsb
mov
adc
js
push
xor
jno
movsl
pop
lahf
lret
rcll
xchg
inc
bound
cwtl
mov
test
mov
pop
hlt
call
mov
outsb
roll
or
cld
cld
call
std
sti
movsb
ljmp
mov
in
adc
mov
mov
cltd
iret
mov
or
test
subb
sbb
cmp
cli
mov
int3
sub
xchg
pop
scas
sbb
inc
sub
test
mov
lcall
in
jo
cmp
mov
fs
imul
call
push
inc
mov
test
xchg
ds
cli
fwait
sub
in
pop
divb
cmc
jle
jbe
call
push
fsts
dec
xchg
fistps
nop
push
cmc
lock
es
fsub
push
fwait
call
push
and
sbb
sbb
jo
test
and
outsl
test
pop
js
mov
hlt
push
dec
fwait
adc
jo
stos
mov
popf
decl
lcall
orb
stos
out
pusha
rclb
pop
addb
stos
into
stc
xchg
jl
jl
ret
cmp
pop
outsb
cmp
mov
push
sub
loop
mov
mov
addl
icebp
inc
popa
aaa
xor
mov
mov
rorl
inc
rcll
aas
cld
es
jge
sbb
pop
daa
ds
cltd
rcr
pop
mov
test
and
mov
pop
ljmp
test
pop
xchg
clc
pop
add
push
push
sbb
rol
addl
or
sarl
sbb
xlat
hlt
pushf
pop
in
roll
fidivrl
cmp
sub
les
rcrl
mov
out
data16
pop
outsb
xor
in
sub
xchg
xchg
or
inc
add
mov
and
arpl
pop
xor
mov
mov
push
popf
add
xor
xor
insl
je
adc
out
mov
pop
out
cmp
xor
fsubrl
dec
fnsave
repz
mov
ret
jns
daa
xchg
cmp
sub
push
test
xchg
arpl
xchg
jo
mov
jp
xor
mov
cltd
mov
sub
es
rolb
test
push
insb
inc
arpl
daa
hlt
mov
cmp
lret
js
in
pop
xor
sub
push
leave
fwait
sub
dec
cli
sub
sub
or
jbe
cs
out
adc
mov
pop
aas
mov
push
mov
mov
pop
popa
jne
cmp
call
push
inc
rcr
mov
inc
xchg
inc
stos
dec
add
or
mov
iret
adc
adc
or
aaa
pop
arpl
cld
jns
sub
mov
lret
cmpsb
and
js
test
bound
das
pop
in
mov
shlb
enter
dec
loop
nop
mov
jge
mov
push
or
mov
out
add
in
pop
sti
inc
jnp
jns
cltd
cmp
rolb
dec
mov
mov
pusha
orb
dec
jbe
dec
adc
cmc
loop
jecxz
or
jl
push
mov
int
mov
inc
subl
push
lods
cmp
adc
leave
xchg
in
mov
stos
movsb
test
mov
lret
push
idiv
lea
dec
sub
out
jl
xor
repnz
data16
pop
lds
test
adc
loopne
sub
cmp
push
push
sub
sbb
jg
add
imul
sub
dec
daa
cmp
cmp
cmpsb
test
pop
in
ja
addb
out
sub
pop
sar
pop
ds
inc
xchg
dec
out
sbb
sbb
mov
mov
int3
popf
cmp
iret
jns
in
ds
out
notl
xchg
xor
outsb
stos
sbb
cmp
cwtl
mov
mov
sub
and
lods
arpl
xorl
ucomiss
add
leave
scas
lea
and
mov
fcomps
outsb
js
or
cmpsb
mov
mov
daa
xor
shrb
ljmp
and
or
fisttpl
pop
ret
fwait
lock
fbld
xlat
ss
adc
cli
cwtl
pop
das
jae
test
and
repnz
xchg
std
xchg
mov
sbb
mov
stos
sbb
mov
aaa
xchg
cmp
pop
cmpsl
sti
test
orl
and
xchg
inc
addr16
xchg
lods
les
mov
bound
cmp
xor
mov
push
adc
and
mov
xlat
sub
and
inc
add
pushf
adc
push
xchg
outsl
dec
out
sub
or
enter
lret
scas
mov
in
aam
shlb
out
aaa
leave
push
sbb
popf
xor
cwtl
je
loop
nop
arpl
movsl
loop
xor
xor
jl
cmpsl
loop
or
das
push
in
js
or
flds
bound
icebp
lods
rorl
fisubl
inc
bound
hlt
push
bound
pop
fnstcw
xor
data16
cmc
lcall
and
lods
mov
and
push
cmc
movsb
adc
or
ss
sbb
inc
or
call
xor
cmpb
les
push
sub
dec
cs
sub
mov
icebp
lcall
rorb
cs
xchg
loope
mov
sbb
mov
sbbb
dec
sbb
xorb
sub
push
add
push
dec
cld
stos
in
pop
cmp
mov
mov
int3
jno
push
sbb
and
inc
and
push
mov
push
lds
inc
add
or
adc
daa
inc
repnz
xlat
mov
lret
pop
sti
jo
add
out
push
inc
sahf
or
adc
sbb
lcall
in
fld
dec
xchg
inc
jae
fwait
push
xor
add
scas
repnz
push
adc
out
mov
push
mov
mov
xchg
xor
push
fcoml
movsl
dec
test
loope
add
adc
and
shr
insl
lret
sbb
pop
lods
and
mov
mov
push
sub
lret
and
jle
fst
pop
imul
rorl
mov
cmc
jmp
or
int
scas
xchg
sbb
jmp
lret
shr
pop
cmp
and
lods
adc
cmp
negl
ljmp
rcll
iret
add
mov
xor
push
iret
sub
push
shl
data16
mov
ret
imul
nop
int
decb
mov
lea
in
xor
outsb
lcall
shll
push
int
sub
dec
xchg
sti
inc
fildll
jb
test
adc
mov
jg
mov
loope
inc
ret
mov
mov
cmp
aaa
push
fcoml
cli
dec
je
push
push
jmp
aaa
xchg
imul
jns
js
lahf
mov
add
shr
jae
cmp
test
fs
loopne
push
sub
add
stos
inc
inc
stos
xchg
xor
add
imul
jmp
rol
xchg
bound
scas
test
sti
sqrtps
stc
dec
push
rorb
xchg
mov
push
dec
sti
daa
in
leave
in
push
adc
out
scas
in
rclb
xor
push
push
out
jge
into
orb
cltd
sbb
mov
jo
shlb
or
jns
jmp
xchg
dec
xchg
fs
inc
and
fidivs
enter
dec
fmull
bound
mov
push
xorb
je
sbb
mov
subl
fsubrl
bound
test
mov
jns
mov
pop
out
fdiv
fwait
jge
fistpll
cmp
les
mov
pop
mov
aam
xor
mov
shlb
cmpsl
mov
xchg
movsl
sti
fwait
shl
jmp
or
jmp
jo
pop
jp
fisubl
push
xchg
ret
shlb
mov
in
mov
inc
mov
bound
jae
faddp
jb
into
adc
fistl
enter
xchg
lock
lret
dec
pop
add
adc
jp
mov
pop
cmc
out
jb
shll
adc
repz
int
mov
cmc
test
add
ret
inc
mov
enter
adc
pop
roll
test
sub
xchg
pop
test
mov
lahf
mov
popf
scas
rclb
xchg
or
pop
inc
and
mov
cs
enter
lock
in
cmpsl
popa
pop
lods
daa
xchg
push
xor
pop
dec
bound
outsb
lea
push
jmp
imul
repnz
sbb
add
into
roll
aas
cs
ljmp
xchg
imul
repnz
add
stc
adcl
cmp
pop
or
adc
add
mov
add
test
jne
daa
sub
adc
lods
dec
xchg
dec
pop
push
shlb
stos
aaa
out
not
sub
mov
mov
jne
dec
pop
mov
xor
cmpsb
adc
pop
push
popf
daa
jae
push
in
mov
test
call
in
or
adc
push
bound
mov
push
jnp,pt
jp
sbb
and
or
cmp
pop
ljmp
mov
fsubrl
fbstp
sub
xchg
pop
and
jmp
mov
test
loop
lret
psubsw
xchg
sarl
push
xor
jae
push
testl
xchg
mov
into
loopne
adc
mov
popa
jns
xchg
sbb
add
test
add
xchg
stos
test
dec
rorl
adc
cltd
pop
shlb
ljmp
inc
gs
loop
adc
mov
fs
mov
mov
bound
sub
add
mov
push
pop
push
pop
xchg
mov
jle
lret
inc
pusha
ss
adc
pusha
insl
je
idiv
dec
add
fisttps
push
je
mov
ror
ljmp
and
enter
cmp
inc
cmp
int3
outsl
xor
call
push
lock
xchg
fistps
push
rol
add
xchg
mov
loope
cmp
or
jle
cmc
jb
mov
sub
cmp
lahf
sub
push
lcall
leave
out
lods
xchg
xchg
pop
shll
jle
push
outsl
dec
cltd
stos
addr16
jo
mov
mov
pop
push
mov
call
sbb
ficomps
in
pop
fwait
cmpsl
or
sub
sub
jmp
pushf
sbb
mov
cmp
jb
cmp
mov
mov
jns
cmpsb
xor
lock
test
mov
jge
fcomps
add
lods
sub
xchg
aaa
lahf
xchg
cmp
xor
jnp
movsl
nop
mov
ret
sahf
mov
mov
in
mov
loope
fwait
push
outsb
in
push
lret
in
stos
mov
jae
cmc
dec
aas
fcmovnu
hlt
push
push
inc
repnz
test
fdivrl
cmp
lods
es
push
adcl
sbb
ret
lret
sub
jl
jmp
or
movsb
adc
jnp
dec
in
cmp
data16
int
jae
mov
subb
out
je
movsl
addr16
into
mov
adc
scas
pop
dec
xchg
movsl
xor
mov
xor
adc
dec
aas
cli
mov
data16
push
mov
test
push
pop
loopne
out
out
popf
add
rolb
and
xchg
shrl
in
cmp
ja
in
rcrl
test
insb
adc
push
insb
mov
sub
mov
push
movsl
add
mov
shrb
inc
sub
repnz
add
pop
cld
sub
jo
adc
xchg
inc
faddl
xchg
and
arpl
xchg
rcr
xchg
xchg
inc
jae
lock
xor
jle
sub
fidivrl
mov
movsl
xchg
mov
stos
add
mov
lds
shlb
push
jb
xchg
xor
mov
call
lret
and
pop
and
dec
fisubs
sbbb
xchg
fcoml
xchg
enter
add
decb
in
pop
enter
lds
dec
and
push
dec
jl
out
and
add
mov
idivl
icebp
cmp
xor
adc
mov
jmp
das
mov
sarb
and
daa
stc
scas
call
push
fs
pop
or
jl
jmp
or
sbb
pop
popa
popa
mov
icebp
add
pop
pop
jbe
test
or
mov
xchg
sub
int
lea
and
xchg
outsl
sub
adc
sbb
sub
dec
bound
pop
mov
sbb
je
cmp
cmc
push
xchg
adc
shl
insl
cmovbe
loope
popf
int3
rcr
aas
push
or
cmp
jns
mov
mov
sbb
testb
testl
and
dec
pop
mov
or
xchg
out
loope
ret
adc
cmc
adc
aad
sub
cmp
sahf
cld
rclb
repz
cld
cld
add
and
cmpsl
icebp
cmp
cli
mov
push
mov
enter
fstp
push
sbb
or
insb
jmp
inc
je
jmp
pop
and
stc
mov
arpl
pop
xor
sti
push
jmp
int3
das
sbb
pop
or
loop
sbb
dec
enter
lcall
pop
in
sub
in
sbb
out
fistpl
je
or
or
out
cmc
xchg
out
adc
sub
dec
bound
xchg
jae
nop
mov
cltd
adc
in
and
fwait
mov
sub
sub
dec
ja
pop
push
xor
movsb
arpl
scas
mov
pusha
cmp
mov
ret
data16
les
ds
hlt
dec
ljmp
mov
movsb
sbb
mov
ret
mov
lret
shlb
push
hlt
xor
add
push
je
mov
add
subl
fcoms
mov
jmp
enter
jns
sub
sbb
cmp
pop
adc
and
mov
xor
rcr
mov
xlat
leave
or
push
cmpsl
sub
or
fdivrs
xor
bound
pop
rcrl
loop
push
inc
pop
push
ljmp
xor
ds
ds
push
pusha
mov
in
rcll
enter
mov
mov
dec
add
ja
dec
dec
jb
enter
loopne
adc
ret
ljmp
inc
jl
mov
mov
insb
adc
leave
loopne
mov
or
daa
enter
xchg
fnstcw
add
mov
sub
cmp
pop
jmp
mov
cmp
push
jecxz
jb,pn
outsb
in
mov
out
jo
jecxz
mov
fwait
xchg
out
addb
jo
push
call
mov
jne
rorl
addr16
repnz
and
adc
cmp
stos
int
btc
fcoms
or
out
xor
movsl
pushf
push
jg
sahf
jg
cmp
jno
mov
rol
mov
out
mov
imul
mov
sti
mov
enter
add
adc
mov
aam
and
mov
mov
inc
shlb
ja
inc
rolb
jnp
test
push
push
test
out
dec
and
adc
movsb
cmpsl
fisttpll
or
pop
mov
xor
pop
mov
adc
shlb
insl
mov
cmpsb
jp
in
push
push
and
out
mov
scas
lods
pop
mov
movsl
gs
nop
and
sbb
ja
das
push
in
sub
cmp
outsl
repnz
gs
push
sbb
push
pop
cld
xor
xchg
mov
sub
mov
repnz
aam
dec
mov
xchg
jle
cmpsb
stos
js
mov
fwait
push
aas
jno
insb
popa
fistl
push
dec
adc
push
jbe
dec
add
clc
out
dec
ljmp
fucomp
mov
xchg
test
lahf
mov
out
push
add
adc
cmp
scas
stc
inc
out
add
sbb
xor
add
mov
push
inc
pop
adc
mov
and
xor
je
dec
sbb
push
push
lds
cmp
test
test
cmp
lods
or
insb
push
mov
repz
adc
or
ds
cmpsb
xor
mov
insl
sbb
mov
fs
xor
call
jle
lea
sub
add
mov
cmp
and
dec
pop
push
and
push
nop
je
mov
fmuls
ret
cltd
lea
clc
mov
xchg
inc
mov
cmp
ret
jmp
mov
pop
mov
adc
imul
fs
lcall
push
mov
pushf
test
lret
or
loopne
xchg
inc
dec
or
fbstp
repz
test
adc
cmp
jbe
pop
add
lret
stc
enter
jp
ret
lret
mov
xchg
or
fadds
aas
jle
shr
fildll
xor
in
push
xchg
daa
imul
xchg
shrb
or
pop
pop
lret
es
or
outsl
negb
pop
clc
xchg
pop
push
xor
pop
roll
xchg
mov
xor
mov
sbb
imul
add
nop
js
sarb
mov
dec
cld
lahf
jns
lahf
jns
aaa
pushf
sub
daa
jo
nop
inc
andl
daa
mov
inc
jmp
aaa
push
arpl
or
stos
xchg
ret
adc
arpl
xor
cmp
jmp
add
and
cwtl
push
cmc
mov
jmp
mov
push
push
xor
outsl
mov
sub
pop
daa
call
into
jg,pn
mov
pop
fidivrs
pop
pop
push
fidivrs
mov
and
dec
movsl
scas
xchg
xchg
enter
cmp
jnp
jae
movsl
jae
mov
jns
loop
dec
xchg
xor
mov
adc
pop
jle
sti
loop
std
inc
loopne
fisubrl
adc
sub
push
mov
or
mov
insl
or
and
adc
push
cmp
mov
ja
scas
pop
and
lods
jmp
sbb
ljmp
or
push
and
ret
push
xor
xchg
insl
out
aad
loop
les
add
lock
lds
mov
mov
call
test
pop
je
jns
mov
push
movsl
add
imull
lret
mov
sar
js
mov
repz
fwait
sbb
xchg
lds
mov
in
lea
cmp
out
sbb
mov
jne
push
dec
addr16
or
mov
push
ret
inc
mov
movsl
mov
sub
imul
stos
je
sub
jecxz
push
add
xchg
and
fnstsw
sbb
inc
jg
add
cmp
mov
hlt
inc
dec
out
lcall
rolb
or
pusha
sbb
call
scas
xlat
rcr
pop
je
je
sub
je
cld
mov
aaa
mov
push
inc
fisubs
popa
cltd
cli
mov
inc
out
dec
call
pop
mov
push
subl
test
in
add
dec
push
ja
pop
js
cmc
mov
jo
xor
ss
je
test
inc
ja
fsubl
cli
mov
jo
pushf
sbb
push
mov
xor
jl
test
and
and
popf
rcl
or
sub
inc
push
adcb
es
fsubs
int
ja
sbb
xchg
push
xor
cmpsl
loop
dec
sbb
mov
sub
push
mov
xchg
pop
jbe
ljmp
push
xor
xchg
sub
lcall
inc
dec
out
iret
dec
inc
sub
nop
sub
jno
xor
jo
and
adc
fimull
mov
scas
fdivrs
sbbl
mov
push
xchg
insb
iret
push
movsl
mov
or
jnp
addr16
test
add
mov
jmp
push
push
cmp
je
scas
xchg
cli
dec
or
mov
lods
dec
sbb
pop
lods
xchg
adc
out
neg
inc
lods
inc
aaa
mov
xor
inc
pop
sarb
test
test
push
cmp
fiaddl
fs
sbb
and
flds
movsb
cmc
mov
lods
mov
bound
jg
ss
cmpb
fstpl
ja
cld
adc
dec
popa
fbstp
fbstp
pop
jbe
lcall
jb
or
jno
jns
pop
jecxz
xchg
sti
jmp
scas
lahf
vorpd
pop
or
sub
xor
jle
fdiv
mov
jno
enter
dec
cmp
push
xor
push
push
add
sbb
test
es
push
icebp
xor
stos
sti
sub
push
in
jnp
sbb
insb
add
mov
insl
xor
pop
xchg
push
sarl
dec
nop
mov
push
inc
push
inc
pop
inc
out
movsb
leave
ss
jns
fstps
cmpsb
jb
dec
mov
pop
rolb
mov
and
xchg
push
push
arpl
sbb
inc
push
aas
gs
mov
xor
push
mov
push
sub
int
xchg
xchg
adc
and
mov
mov
pop
mov
ds
jecxz
imul
enter
pop
push
mov
mov
sbb
sbb
popa
int
or
and
inc
mov
xchg
leave
cmpsb
push
icebp
lods
std
mov
inc
dec
xchg
mov
jnp
in
outsl
cmp
notl
popf
jp
or
push
les
push
push
pushf
and
or
inc
daa
sbb
pusha
fs
sbb
jmp
scas
push
dec
insl
mov
xor
insl
js
and
fimull
xchg
pop
jp
cmc
jo
jno
int3
rorb
jl
fwait
jb
in
sarb
mov
addr16
adc
or
addb
inc
rcr
and
jo
lcall
test
lds
out
cmpsl
xor
dec
cmc
mov
sbb
lods
sahf
std
push
loop
inc
pop
hlt
sbb
push
loope
lock
jo
mov
dec
lock
cltd
pop
sbb
sub
push
jmp
andl
add
dec
push
jbe
out
ret
sub
xchg
mov
leave
int3
mov
bound
jb
add
mov
adc
xor
and
adc
xor
mov
std
push
cltd
sub
mov
mov
inc
pop
data16
cmpsb
push
cld
jb
push
cmp
ja
cmc
ss
sahf
push
sbb
or
mov
ret
and
add
inc
push
pop
icebp
jnp
push
and
icebp
cmpsb
andb
cwtl
in
sub
and
and
sub
cld
je
cli
mov
sbb
enter
jmp
adc
inc
pop
aas
aas
in
adc
lea
aas
mov
loopne
lahf
push
scas
jno
pop
add
aam
js
jl
mov
cs
pop
add
shl
cmpsb
xor
sahf
mov
fwait
or
jecxz
hlt
jno
add
adc
sbb
mov
push
and
hlt
dec
jnp
mov
push
xor
mov
mov
push
mov
mov
pop
xchg
dec
call
popf
cmp
and
xor
rol
adc
cmp
sub
loope
nop
mov
mov
stc
imul
cmp
jne
sub
pop
inc
fs
orl
jp
cltd
cmp
push
mov
scas
fidivrl
ret
in
cmp
iret
loopne
sbb
jns
into
or
push
int
mov
pop
in
ret
das
jnp
jmp
inc
mov
pop
popf
je
pop
inc
test
and
pop
sbb
sub
pop
cmp
cmp
aam
sbb
or
fmuls
mov
sbb
push
sub
mov
mov
int
hlt
data16
filds
jle
out
test
xchg
ret
fiadds
jmp
push
int3
movb
push
push
test
or
mov
addl
outsl
ss
iret
iret
jae
xor
sub
dec
jge
mov
add
leave
sahf
les
stc
pop
movsl
jecxz
add
xor
mov
adc
loopne
and
int3
jl
sarb
pushl
add
or
lea
rorl
cmp
sbb
xor
xor
ss
sti
cmp
xor
push
rcr
and
out
sbb
jg
cltd
out
inc
aad
test
mov
adc
jmp
loope
outsl
mov
push
adc
hlt
mov
lock
test
xchg
cmp
jge
lds
push
mov
and
out
sbb
aad
repz
jne
cmp
stos
adc
pop
sub
and
lret
fxch
dec
fadds
dec
push
in
fsubrs
push
and
rolb
pop
cmc
cs
xlat
pop
add
es
aad
fidivl
fucomi
mov
pushf
cmp
inc
jl
inc
test
movsb
jbe
pop
testb
mov
dec
cmp
outsl
cltd
jmp
pop
popa
clc
push
popw
ret
std
or
jno
sbb
lret
nop
add
cmp
rcl
fadds
push
push
push
call
pusha
enter
xchg
cmp
xchg
sbb
outsl
sti
mov
xor
insb
push
push
jne
xchg
pop
stc
xchg
jmp
pop
dec
jb
pop
and
xor
fists
in
test
mov
insl
push
mov
and
ss
xchg
cltd
push
icebp
sar
ljmp
mov
pop
xor
pop
iret
clc
inc
out
inc
test
movsb
adc
dec
insb
pop
iret
subb
lahf
adc
pop
push
xchg
sbb
subb
dec
pop
push
inc
iret
push
add
call
push
dec
mov
mov
pop
pop
cmp
imul
add
pop
int
cmp
sub
push
and
dec
fs
mov
test
aam
jmp
inc
add
jmp
jmp
nop
int
cmc
addb
mov
mov
push
test
push
push
mov
cmp
dec
pop
fisttps
sbb
movsb
outsb
popa
testb
jle,pt
inc
in
push
jb
int
mov
stos
popa
int
in
fisttpll
dec
dec
dec
or
and
pushf
jae
in
xchg
push
mov
std
fstpl
add
out
xchg
and
hlt
push
out
mov
dec
loop
loop
adc
jb
and
fdivl
mov
int3
jp
mov
iret
dec
orb
mulb
add
cmc
add
cltd
clc
in
push
push
inc
inc
cmp
das
fdivp
lea
inc
push
xchg
leave
enter
arpl
mov
aam
lret
mov
nop
out
jmp
inc
xchg
ljmp
gs
cltd
dec
enter
in
mov
mov
outsl
jle
movsl
xorb
push
jne
fistl
lcall
jno
aam
loope
push
loopne
das
jne
jg
addr16
and
jp
sub
shlb
inc
push
push
scas
pop
sahf
xchg
xchg
fs
addr16
cmpsb
lea
enter
mov
rcrb
pop
test
fisttpll
outsl
adc
or
icebp
subb
test
xor
sub
or
cmc
je
mov
mov
xchg
shlb
push
cmp
jns
xchg
jg
add
lods
cmp
mov
mov
jle
add
ja
cwtl
cmc
sti
or
out
gs
icebp
add
loopne
adc
or
imul
lea
mov
into
xchg
jbe
loop
pop
test
or
cmpsb
mov
adc
clc
rcll
mov
fadd
add
lahf
out
add
ret
cmpsb
lock
jp
push
scas
shrl
xchg
mov
pop
jbe
mov
mov
push
mov
scas
cmp
cmp
test
call
inc
test
aad
rcll
ja
cltd
or
cld
sbb
daa
sub
hlt
pop
pop
stc
jo
pop
insb
xor
cmp
adc
daa
sar
out
stos
aam
push
xlat
push
ret
push
cs
cmp
push
sbb
add
push
xchg
and
mov
mov
int3
cwtl
dec
pop
mov
inc
es
mov
decb
mov
mov
repz
mov
xor
jb
fwait
xchg
inc
add
xor
sbb
imul
jle
repz
mov
xchg
ja
or
arpl
mov
mov
sbbb
stos
xor
xor
xchg
sub
mov
int
add
lret
push
add
mov
xlat
push
adc
les
and
pop
push
out
mov
add
push
or
dec
movsl
xor
cmp
int
scas
orb
nop
sbb
mov
jns
dec
pop
mov
xchg
dec
mov
and
bound
sub
nop
inc
or
jo
or
xlat
cmc
push
xchg
mov
jne
jns
add
out
into
push
jg
subl
fstpt
sub
sub
mov
movsb
pop
stos
js
dec
mov
add
iret
sbb
dec
dec
jno
popw
scas
enter
out
push
cmp
pop
push
push
fsubr
sti
push
inc
add
jp
pop
xchg
stos
orb
lea
jge
sbb
sbb
je
test
xor
jmp
cs
or
std
mov
xchg
daa
leave
and
inc
js
mov
call
insl
fs
jp
add
push
lahf
push
inc
mov
lods
sti
dec
ja
dec
dec
xor
lods
int3
xchg
add
add
cmp
mov
jmp
and
jmp
aam
mov
mov
lret
loopne
clc
xor
in
push
std
ret
add
insl
cmp
or
pop
sbb
dec
scas
or
ret
mov
adc
leave
mov
adc
in
mov
adc
arpl
xor
aas
lcall
test
rclb
imull
jb
xor
cmpsb
sbb
in
lea
cli
mov
sub
test
inc
cltd
push
dec
aad
inc
mov
dec
mov
test
cmp
loop
dec
les
xchg
xor
jnp
out
les
dec
cmpsb
out
sub
jp
xchg
scas
fcoms
mov
mov
pop
movhps
hlt
xchg
inc
mov
pop
xchg
cmp
int
xor
outsb
pop
push
arpl
inc
imul
test
adc
loopne
jl
xchg
dec
leave
add
sbb
cmc
fwait
jnp
push
cmpsb
sbbl
sub
orb
dec
pop
fistpll
sub
mov
sub
push
add
sbb
cli
iret
add
mov
insl
mov
xchg
mov
cld
jge
outsb
jb
shlb
and
sbb
xchg
inc
adc
mov
pop
lcall
mov
out
stos
rsqrtps
sub
push
mov
dec
iret
and
xlat
jne
xor
insb
and
clc
mov
adcb
push
pop
frstor
loopne
gs
repz
jge
aaa
shll
repz
cmpsb
es
fcomps
popa
leave
nop
shrb
and
in
cmpsb
rcll
jo
jg
fstps
sbb
push
fsub
into
or
mov
push
out
jne
movsl
or
lret
mov
push
loopne
mov
adc
icebp
cld
jmp
outsb
jno
add
push
aam
and
mov
sub
adc
test
in
mov
fisttps
shl
lahf
inc
or
sub
sub
hlt
fisttps
dec
pop
popa
cmp
xor
pop
mov
fs
insb
cmp
aaa
imul
pushf
xor
add
pop
mov
mov
push
xchg
xchg
mov
or
shrb
sub
lcall
loopne
out
push
adc
shll
pop
or
inc
lahf
jecxz
or
shll
mov
mov
jp
adc
pop
xor
stos
sub
pushf
mov
push
sub
repz
cmpsl
leave
rcl
dec
mov
or
ss
fs
jmp
ja
cmp
icebp
inc
fwait
insl
adc
xor
jg
and
sbb
divl
add
or
popf
jg
mov
insl
fs
and
fs
xchg
cmp
xor
addr16
sar
mov
mov
inc
dec
or
cmp
shrl
imul
aam
outsb
lds
mov
add
jnp
ret
cmp
sub
sbb
dec
jmp
inc
push
inc
inc
inc
jge
sbb
clc
les
mov
sbb
add
fadd
fstpt
mov
xchg
dec
push
fwait
sub
aas
fmuls
ljmp
test
imul
scas
push
pusha
int3
pop
iret
repnz
movsb
movsb
stos
out
imul
daa
pusha
bound
lret
das
aam
cmp
or
sub
fstl
or
je
out
lds
sub
insb
xchg
stos
imull
lcall
repz
das
in
std
das
and
cmp
fstps
imul
inc
iret
lea
or
and
scas
daa
add
adc
jo
mov
add
stc
pop
mov
lods
dec
cmpsb
adc
and
dec
adc
jb
movl
sbb
faddl
aaa
cmp
sahf
inc
mov
test
dec
add
insb
rorb
mov
jge
out
sbb
mov
cmpsl
jg
mov
sub
lcall
lret
dec
cmc
mov
iret
fists
xchg
xchg
sbb
mov
mov
jg
and
inc
call
scas
lds
dec
loop
sub
pusha
jle
ret
jne
out
test
inc
stos
jbe
jb
mov
mov
test
outsb
test
jge
cmp
adc
adc
shl
imul
sbb
or
je
jbe
sbb
ficompl
int
pushf
popa
sub
push
sbb
rolb
in
sar
inc
xchg
xchg
mov
and
test
mov
sahf
adc
out
cmpsl
iret
cwtl
repnz
shrb
aad
or
mov
or
lods
sbb
inc
jle
scas
add
ds
xchg
lock
cld
mov
pushf
sbb
cmp
out
cmp
pop
fs
dec
sub
cmp
stos
lret
lock
sbb
mov
nop
les
aam
mov
fneni(8087
shrl
mov
jns
outsl
in
aaa
jne
adc
jg
fdivs
pop
daa
and
sbb
add
jns
mov
jp
inc
mov
bound
sub
mov
into
pop
fisubs
outsb
fwait
inc
popa
adc
mov
mov
push
xchg
lods
xchg
sahf
push
fistl
jg
push
push
xchg
add
rep
dec
cmp
aas
adc
mov
xchg
mov
xchg
das
mov
ljmp
mov
push
into
insl
mov
lds
mov
push
fldl
cmp
into
movsl
sti
insb
push
jae
jge
push
xor
and
insb
mov
mov
ret
jmp
jnp
cld
mov
cmp
out
sahf
aaa
push
xor
xchg
orb
inc
sub
out
iret
in
xor
xor
and
fidivrl
cwtl
icebp
push
sti
cs
inc
jle
dec
into
add
mov
mov
pop
cmpsl
sbb
xchg
in
out
push
cmpsb
or
inc
outsb
mov
pushf
ljmp
jae
lahf
or
jo
loope
push
rorl
rorl
shlb
jp
lock
scas
lcall
dec
or
push
fldt
xor
jnp
cmp
push
cmp
cmp
push
mov
daa
orb
loope
scas
test
sub
pop
sub
loop
in
popl
lods
add
fs
adc
sbb
sub
fucomp
fidivl
mov
scas
mov
call
sti
mov
mov
mov
lcall
std
loope
and
cmc
and
sub
outsl
mov
test
jnp
mov
xor
xchg
clc
jg
add
xchg
mov
jno
fs
scas
dec
lahf
mov
cmp
dec
outsl
sti
cmp
cmp
lcall
into
frndint
mov
mov
cwtl
hlt
lea
fnstsw
arpl
cli
pop
ja
imul
mov
inc
psubw
mov
stos
cmp
pop
les
inc
rcll
pop
fidivrl
jp
lret
inc
jno
mov
adc
js
mov
mov
fistpl
inc
cltd
adc
pop
lods
and
jo
add
js
insb
mov
xor
aad
lcall
jno
cld
or
lods
divl
dec
push
xchg
jbe
test
xor
adc
mov
out
aad
ss
mov
sub
out
pop
dec
or
mov
dec
adc
sbb
dec
adc
add
jo
fadd
xor
insb
cli
gs
jp
cmpsl
push
push
ds
movsl
call
repz
fdivrl
cmpsl
je
cmp
icebp
push
shlb
adcb
mov
and
stos
fisubl
dec
minps
mov
mov
imul
mov
mov
cmpsb
and
xlat
popf
xchg
mov
pop
add
jb
mov
xor
fnsave
inc
pusha
bound
sub
mov
std
fildll
mov
outsb
std
outsb
mov
rcl
test
pushf
jb
inc
or
add
stc
aaa
sbb
fneni(8087
xchg
fistpl
gs
std
sbbl
pop
js
scas
cmp
mov
jecxz
inc
shr
icebp
cmp
pop
cmpsb
dec
aas
ja
xchg
inc
xor
push
mov
sbb
xchg
sbb
lds
push
mov
je
push
in
dec
jmp
cmpl
jp
mov
call
rorl
push
testl
jmp
adc
and
ja
ja
mov
adc
or
loopne
in
iret
sbb
sarl
das
or
cmpsl
fwait
push
in
ja
dec
mov
xor
inc
and
popa
and
std
pop
pop
xchg
ja
xchg
jg
push
loop
out
fdivs
ljmp
lods
hlt
lds
lret
loop
clc
ljmp
pushf
jbe
cmp
cmp
sub
push
js
test
jb
lea
int3
adc
add
popf
stc
mov
cmp
ret
xchg
cmpsl
jae
mov
cmp
fsubs
push
fbld
pop
mov
xchg
pushf
xor
ds
push
adc
idivb
add
jle
jns
add
lods
stc
aad
fnstenv
test
mov
das
or
popf
dec
fistpll
xor
xchg
sbb
sbb
sarl
and
mov
loop
and
inc
insb
loope
lock
push
xchg
lock
push
add
pop
sti
push
in
lods
add
dec
xchg
jecxz
push
or
fs
je
fs
loop
dec
pop
add
lret
and
pop
js
mov
pop
and
inc
lcall
push
scas
adc
lods
fnstenv
or
lcall
jbe
add
jno
dec
push
sbb
icebp
out
lea
pop
es
rolb
loope
addb
and
add
xor
fimuls
push
inc
cmp
mov
sbbl
ret
dec
adc
cmp
cs
sti
push
inc
add
sbb
cltd
fsubrl
arpl
push
mov
and
dec
pop
or
mov
in
es
mov
std
push
and
testl
sbb
scas
in
out
pop
fidivl
xchg
jg
das
ja
std
repz
inc
cmpsl
xor
loope
cmpl
sub
xchg
mov
arpl
mov
jo
sbb
xor
daa
movsl
popf
addr16
xchg
pop
mov
lea
pop
pop
xchg
jnp
jb
cmp
jge
dec
sub
add
cmpb
push
mov
into
jo
shlb
push
sbb
sbb
mov
jb
inc
adc
jbe
or
in
and
mov
add
cwtl
out
push
and
mov
jb
lcall
fistl
rcrb
aas
mov
mov
into
in
xchg
or
outsb
dec
in
sub
iret
int3
cmpsl
add
and
sub
mov
lds
aaa
je
les
push
push
add
das
dec
and
dec
popa
test
repnz
mov
adc
icebp
in
mov
mov
bound
ret
test
rorl
push
fdivrs
jg
push
xchg
call
js
pushf
fcmovu
push
rclb
or
hlt
add
icebp
adc
lea
mov
and
pop
xor
pop
mov
lret
xor
mov
out
add
dec
into
cwtl
xor
and
lods
ret
cmc
pop
jp
mov
out
cli
decl
daa
jne
mov
pushf
jecxz
dec
stos
add
jmp
stos
sbb
arpl
cmpsl
loop
or
call
sub
ljmp
pop
mov
ja
cmpsl
hlt
xor
push
cli
push
je
sub
push
push
jae
inc
push
push
cmp
mov
sub
dec
int3
add
call
insl
out
sbb
jmp
mov
dec
cmp
lret
mov
les
or
lcall
dec
movsl
and
pop
aad
pop
in
aaa
adc
lods
jl
test
movsl
or
mov
sub
inc
push
adc
ljmp
inc
jnp
imul
sarb
repnz
fildl
repnz
cmp
mov
mov
push
inc
xchg
push
pop
mov
fnsave
lret
pop
test
outsl
add
popf
lahf
or
and
mov
mov
xchg
mov
ja
nop
push
fistpll
push
insl
loope
inc
addr16
pushf
mov
cltd
lcall
inc
stos
and
outsl
push
daa
jle
and
push
jno
xlat
dec
outsl
pop
out
out
das
sub
pop
lret
scas
call
aam
rorb
xor
add
jo
and
mov
into
mov
cmp
loop
popl
cmp
imul
adc
xchg
pop
ret
test
dec
sub
or
pusha
mov
pop
sbb
or
dec
sub
icebp
test
pop
sbb
xor
das
lret
jns
inc
or
movsl
cs
mov
adc
shrl
push
popa
jae
jo
lret
out
pop
mov
in
stos
sahf
mov
subl
ffreep
xchg
fmul
shr
jo
jge
and
ds
xor
adc
je
out
inc
pushf
inc
in
sbb
pushf
aam
inc
mov
jle
dec
lock
sahf
xorl
or
inc
sub
pop
inc
filds
xor
jmp
scas
xlat
sbb
cltd
aam
and
call
adc
mov
loopne
mov
adc
addr16
cld
push
sub
js
imul
and
lahf
dec
mov
outsb
sub
mov
nop
pop
push
subl
jl
sub
jb
push
insb
enter
cmp
sub
test
out
push
rorl
lea
outsb
mov
insl
fst
mov
sbb
or
loopne
fmul
lcall
mov
sti
mov
pop
and
push
xor
sbb
dec
mov
pop
fsubl
xor
je
jo
stc
test
and
adc
outsl
fnstenv
push
jecxz
insb
cmp
loop
sbb
shrl
jg
pop
adc
and
xchg
stc
mov
out
es
loope
hlt
testb
jb
rcll
out
xor
pop
push
sbb
shlb
subb
mov
mov
inc
and
add
loope
aaa
fcmovnu
push
xchg
push
jle
xchg
ret
jbe
ret
int
stos
mov
add
adc
jo
xor
sti
rorb
daa
pop
adc
ds
push
dec
icebp
xchg
and
mov
xchg
xor
cmp
push
add
mov
shrl
movsl
dec
push
lea
sbb
dec
pop
dec
inc
push
cmp
add
lds
and
mov
es
sbb
inc
imul
inc
sub
icebp
rorb
lret
pop
mov
dec
mov
enter
jnp
cltd
pop
loop
popa
push
lock
pop
mov
outsl
lods
sbb
mov
sbb
adc
jmp
in
or
mov
pop
jge
leave
int3
lcall
xor
xchg
add
jb
ds
jnp
mov
clc
add
fisubrl
mov
jg
pop
shrl
mov
aas
int
fcompl
inc
lahf
push
out
push
xor
pop
dec
out
je
jmp
and
js
insl
iret
pop
xchg
inc
icebp
dec
push
xorb
push
adc
push
xchg
int3
jo
loopne
mov
sub
jge
sahf
add
fs
cmp
fcmovu
std
ljmp
xchg
sbb
mov
lret
jnp
bound
pop
cmpb
rcr
and
nop
jno
ds
push
lret
ret
cmc
pushf
or
nop
push
mov
mov
fldenv
jg
xchg
inc
or
or
push
dec
push
pop
push
movsb
aad
cli
scas
lods
clc
out
mov
iret
and
lods
mov
cwtl
orb
in
xor
jne
int3
lods
outsl
pop
int3
or
sub
cmp
ds
in
das
mov
jns
add
xor
cs
sahf
rclb
jecxz
jp
imul
jg
pop
push
pop
popa
test
jp
rcr
inc
mov
fstpl
push
xor
dec
xchg
jmp
mov
mov
loop
xchg
shlb
outsb
imul
cmc
push
addr16
mov
ret
jne
mov
mov
or
mov
fisubrl
lret
clc
mov
movsl
jecxz
call
cmpl
test
clc
pop
push
jae
pusha
pop
sbb
jg
cmpsl
mov
ljmp
bound
frstor
mov
scas
cmp
insb
mov
xor
repz
fdiv
jmp
and
push
inc
push
scas
and
jmp
repz
cwtl
test
push
les
mov
push
out
jnp
inc
test
xchg
or
repz
xchg
or
dec
cmp
ror
fistpll
inc
lret
out
iret
iret
es
mov
lods
sub
aas
in
sbb
xchg
cwtl
xchg
test
xor
ss
and
scas
in
stc
out
pop
sti
inc
mov
jae
faddl
xchg
mov
sbb
jne
and
adc
mov
mov
lods
jge
add
cmp
inc
inc
pop
aaa
mov
pop
cli
or
push
xor
notl
jns
mov
mov
pop
ljmp
dec
xor
int
pop
daa
pop
out
jl
stc
das
add
jo
dec
fs
movsl
lcall
mov
or
cld
rcl
pop
stc
mov
cltd
lret
ret
and
xor
lods
or
dec
mov
jns
dec
rorl
loope
loope
cwtl
pop
out
xchg
push
add
and
shll
and
or
sbb
fisubs
jbe
mov
mov
pop
pop
loope
daa
or
add
adc
test
pop
adc
mov
and
mov
cmp
mov
js
jp
fcomps
inc
adc
aam
push
in
adc
pop
shrb
mov
pop
xchg
cltd
sbb
je
rcll
jb
xor
ljmp
mov
jecxz
test
sbb
jns
mov
cmc
aaa
stos
into
xor
xchg
dec
loop
sub
push
ljmp
ds
and
sahf
add
popf
push
or
and
in
sbb
les
adcl
arpl
mov
fstsw
push
add
jns
lcall
stc
icebp
sbb
rorl
insl
cli
adc
pop
dec
and
mov
outsb
sbb
mov
inc
push
bnd
pop
push
mov
mov
jge
loopne
push
outsl
lahf
jl
vcmpsd
inc
jp
rcr
sarb
xchg
and
sbb
sub
jl
dec
push
popf
or
stc
push
mov
fcompl
in
pop
rorl
xchg
ljmp
xchg
pop
jecxz
adc
arpl
add
sbb
mov
jecxz
out
dec
fdivrs
cmp
sub
cmpsl
jno
arpl
inc
dec
insl
add
loop
les
lods
ljmp
dec
push
mov
sub
icebp
pop
imul
mov
outsl
imul
loopne
les
add
push
mov
notl
repnz
jecxz
pop
lret
call
inc
add
mov
pusha
or
pop
cmpsb
popa
jge
fisubs
loope
jecxz
int3
pop
pop
idiv
mov
test
mov
push
subl
mov
fisttpl
xlat
pop
add
insl
aaa
sahf
pop
inc
or
pop
ret
xor
inc
push
mov
push
sub
mov
sub
jle
mov
loopne
in
test
mov
dec
mov
sbb
adc
mov
jge
push
out
mov
roll
lock
jnp
cmpsl
cld
mov
fldpi
bound
and
push
adc
out
pmulhw
or
add
inc
loopne
xlat
or
test
test
cli
add
lds
lahf
pop
in
rcrl
pop
inc
pushf
xchg
addl
popw
out
adc
or
cmp
test
mov
push
mov
push
ljmp
mov
or
pop
arpl
jbe
jg
ja
orl
insb
xor
add
xchg
dec
push
movsl
jg
outsb
mov
enter
xchg
cltd
je
mov
and
movsb
pusha
adc
and
jmp
push
cli
cmpsl
mov
lds
jge
cmp
stos
mov
outsb
lea
nop
xchg
add
jmp
jl
icebp
adcb
popa
movsb
and
lods
or
add
push
mov
fadds
into
out
and
jecxz
pop
and
arpl
xchg
lods
mov
jno
cmpsb
loopne
sub
lock
or
fmul
sbb
mov
daa
sub
andl
lds
les
in
ds
dec
xor
xchg
les
decl
mov
dec
arpl
xchg
rcrb
cmp
adc
inc
xchg
loopne
xlat
mov
jae
dec
sub
je
out
divb
and
push
inc
xor
movsl
and
adc
arpl
push
ss
popf
push
lds
data16
imul
rorb
push
sti
mov
push
out
test
push
sub
adc
popa
jb
xlat
lahf
lcall
insb
test
call
cli
xchg
lods
sub
sub
fucom
push
outsl
push
push
ja
das
adc
mov
stos
lds
das
stos
data16
jp
aad
pop
pop
and
mov
shl
jno
int3
cmp
xchg
movsb
clc
jno
xchg
push
mov
std
inc
push
mov
xlat
mov
sahf
xchg
jns
mov
pop
aad
xor
test
test
js
dec
mov
mov
mov
jmp
filds
lods
mov
push
gs
inc
lods
push
mov
outsl
cmp
mov
cmpsb
cli
std
push
lret
rorl
loop
notl
inc
aam
lcall
inc
out
out
lds
mov
iret
jb
mov
mov
lret
data16
cmp
push
mov
adc
mov
aad
fnstsw
mov
jnp
adc
or
xchg
ljmp
xor
mov
movsb
mov
dec
dec
or
or
cmp
and
sbb
dec
movsb
jg
ret
pop
adc
movl
stc
into
pop
jns
mov
sbb
mov
loopne
aam
sbb
cmp
scas
push
pusha
mov
rorl
sub
inc
or
icebp
test
cwtl
sbb
pop
xchg
mov
cmc
xchg
divl
cmp
aaa
inc
and
inc
in
neg
adc
imulb
fildl
push
dec
cltd
jno
inc
push
leave
lea
imul
fisubs
or
aad
adc
cmp
xchg
cwtl
pop
lods
xchg
insb
dec
aas
sub
fcmovu
bound
movsb
mov
fwait
aad
rcll
test
sbb
jl
push
aad
mov
jmp
lret
dec
adc
out
mov
mov
das
jmp
scas
scas
pop
mov
cmp
jae
adc
lea
sub
enter
pop
aad
sub
cmp
fwait
xor
into
dec
adc
cmp
mov
notl
cld
xor
push
or
jle
and
fiaddl
jno
int
pop
dec
lea
jns
stos
arpl
sti
adc
stos
cmc
jb
xchg
loop
xor
jmp
xor
nop
shrb
jle
pusha
popf
pusha
pop
add
or
ror
sahf
sub
sbb
xchg
inc
test
push
fninit
movsb
pushl
divb
sub
xbegin
mov
sbb
xor
fisubrl
jb
loope
push
scas
clc
or
pop
ds
lahf
clc
pop
stos
inc
dec
mull
movsl
fistpl
fdivl
rcll
push
adc
mov
cmc
adc
mov
sti
scas
cs
test
or
popa
mov
loope
xchg
fimuls
mov
xchg
and
xorl
inc
mov
out
in
add
stos
outsb
xor
or
or
cmp
testb
mov
or
fcmovbe
cmp
jge
and
shll
and
rol
xorb
addb
push
rcrb
imul
sub
xlat
pop
das
cmp
jb
adc
sbb
jmp
js
sbb
cmp
test
xchg
dec
in
movsb
out
imul
rol
imul
out
sbb
mov
cld
jge
push
mov
lcall
mov
les
xor
mov
and
sub
mov
sbb
hlt
daa
insb
sbb
aas
data16
and
add
mov
mov
sti
sub
mov
std
push
stos
push
mov
mov
fucomp
push
mov
ds
dec
push
jg
insb
lods
xchg
cmp
inc
jmp
push
inc
fisubl
lcall
rorb
sub
call
xchg
add
pop
adc
sbb
or
mov
dec
mov
je
adc
shl
stc
scas
cmp
loope
or
inc
lods
push
lds
adc
xchg
mov
pop
or
pop
adc
xchg
push
dec
mov
dec
stos
popa
jo
mov
xor
in
and
leave
jo
jbe
sub
pusha
lock
mov
ss
fnsave
and
push
test
mov
int
or
sbb
iret
mov
js
iret
ja
cmp
loopne
test
iret
xchg
mov
out
xchg
lcall
in
mov
loop
ret
inc
rcr
pop
inc
mov
inc
test
sbb
loop
in
xchg
push
xchg
iret
cmp
mov
cld
mov
arpl
ja
push
xchg
fdivp
inc
sub
lods
and
in
inc
sahf
xchg
outsl
cmp
je
lahf
push
mov
sbb
mov
mov
jecxz
sarb
pusha
iret
aaa
aad
add
jl
andl
subl
mov
mov
or
std
in
mov
outsb
adc
jno
push
add
lods
sub
inc
insb
mov
test
push
lret
movsl
loop
outsl
ljmp
leave
sub
out
pop
mov
mov
cmp
push
xchg
dec
enter
lret
pop
adc
jbe
sbb
inc
and
lcall
mov
and
sub
sub
lods
or
lods
fadd
xor
xor
loop
mov
fmulp
testl
and
sar
jmp
lcall
add
lods
adc
cld
test
jns
sbbl
and
popa
test
lcall
dec
pushf
sbb
cmpsb
lods
cltd
outsl
xor
jmp
sbb
ljmp
push
call
dec
cmpsb
in
outsl
adc
pop
push
stos
bound
cld
xchg
mov
inc
imull
dec
sbb
sbb
loope
in
xchg
mov
notb
push
call
pop
or
add
jne
add
sub
fmuls
xchg
addb
cmpsb
lret
add
inc
rolb
movsb
data16
es
pop
dec
jg
and
inc
idivb
or
je
pushl
and
sub
test
das
arpl
jl
js
fildl
pop
aad
out
cmp
js
xor
in
pop
push
fdivrl
lds
enter
and
pop
fildl
and
cmp
ljmp
out
mov
enter
int3
out
sahf
mov
cmpsb
add
das
jb
cli
test
adc
fcmovu
mov
hlt
sbb
and
popl
mov
ss
push
iret
nop
ret
outsl
sub
xor
mov
outsb
mov
les
xchg
repz
inc
adc
push
cmp
cli
push
or
pop
xchg
sub
dec
je
out
out
push
xor
in
pop
and
adc
sahf
cmc
sbb
sub
mov
mov
std
or
jbe
sbb
or
adc
and
sbb
and
outsb
mov
or
fwait
aas
mov
jge
mov
outsl
call
test
lahf
push
out
cs
xor
cmp
push
add
popf
insl
xchg
mov
nop
mov
mov
insb
cli
mov
shl
push
in
mov
popa
mov
push
pop
das
sub
cmp
in
mov
or
jmp
loop
imul
out
dec
mov
dec
cld
out
pusha
xchg
xchg
and
adc
mov
mov
test
inc
imul
adc
lcall
rclb
mov
fsubl
repz
xor
adc
int
icebp
call
cmp
push
cld
xchg
pop
sahf
pop
sbb
cmpsl
sti
outsb
fldl
pop
iret
inc
mov
xchg
sub
cmp
xchg
sub
aad
pop
in
push
imul
mov
js
cmp
jg
addl
les
sbb
pop
add
push
insl
push
subl
imul
jmp
inc
push
stc
mov
cltd
cld
roll
push
pop
popa
insl
ret
push
push
ljmp
addr16
jns
adc
mov
jmp
pop
sbb
fsts
xchg
and
mov
jge
daa
mov
xor
jg
push
fcoml
mov
fstpt
mov
jne
fwait
enter
bound
sub
insb
daa
or
jl
out
test
mov
push
movsl
in
and
cmpsb
in
cmp
loopne
inc
cmpsl
sti
les
addl
inc
adc
cltd
popa
xor
inc
push
popl
add
sub
es
sarl
jns
inc
mov
inc
pushf
dec
enter
or
or
mov
fisubs
out
pop
pop
mov
mov
testl
ss
pop
adc
idivb
sbb
enter
test
popl
pop
popf
insb
shlb
mov
shll
enter
and
push
lahf
negb
cmp
loop
and
mov
movsb
lret
jno
inc
pop
incb
mov
fadd
push
out
mov
enter
cmp
fwait
sub
nop
in
call
icebp
inc
push
notl
inc
inc
inc
inc
lds
ljmp
lret
iret
movsb
push
rclb
mov
dec
push
jp
xchg
mov
lods
jecxz
mov
cmp
mov
enter
orb
pcmpgtw
ret
xchg
push
cmovb
mov
dec
leave
xchg
jg
push
arpl
aad
andb
xor
sbb
aaa
mov
aad
jo
push
jle
pop
ds
fcoms
mov
jae
dec
fsubrl
scas
repnz
movsb
in
or
dec
ficoms
xchg
dec
fwait
pop
in
je
fsts
pop
sub
loopne
rcrb
out
cmp
pop
iret
data16
cmc
sbb
cmpsl
fidivs
sub
cmc
mov
or
lods
in
mov
cld
sbb
jae
out
stos
repnz
xorl
divl
xor
dec
mov
pop
xlat
xor
enter
jg
clc
cs
lea
insb
dec
inc
call
xor
cmpsl
jo
sbb
push
in
outsb
adc
jl
jmp
sub
sbb
notl
and
cmp
addb
les
cli
insl
push
xchg
loopne
adc
sbb
dec
mov
jp
es
xor
cltd
pushf
rcrl
outsl
imul
test
dec
mov
aad
sbb
jnp
loop
inc
xlat
movsb
les
sti
xchg
pop
loop
inc
xchg
imul
inc
stc
dec
sti
icebp
test
push
sbb
mov
cli
enter
mov
in
test
aam
add
stos
and
mov
stc
aam
cli
push
jno
notl
and
orl
aam
mov
leave
mov
out
ss
shl
xor
aam
mov
push
addr16
or
jge
xor
jbe
pop
xor
dec
sbb
or
gs
in
dec
mov
and
mov
into
sub
std
pop
out
xor
cmp
call
mov
lods
std
movsb
push
push
add
shll
popa
pop
pop
cltd
stc
mov
and
out
mov
pop
jecxz
inc
popf
xchg
gs
das
dec
mov
popa
cmp
pop
sysenter
jb
push
call
es
pop
movsb
xor
mov
push
mov
dec
rolb
movsb
ss
inc
push
jp
xchg
xor
test
insl
xchg
stos
int
add
ss
mul
pop
push
adc
inc
shrb
pop
cs
ja
loopne
sbb
jge
fldlg2
je
jl
push
test
aad
adc
sbb
push
inc
mov
mov
cmp
cmp
or
adc
fstpl
iret
jne
jae
fldl
rcrb
sti
mov
xchg
loopne
xor
inc
rol
pushl
jae
and
mov
aad
dec
imul
pop
pushf
push
mov
bound
aas
sub
insb
icebp
mov
cmp
sbb
cmp
xor
in
jne
sub
out
sub
stos
sbb
leave
xchg
arpl
mov
add
sub
aam
pop
dec
test
dec
shr
fbstp
inc
icebp
lea
nop
rcrb
inc
ja
pop
sub
inc
xchg
in
inc
cmpsl
addr16
pop
fsubs
jecxz
nop
jo
cmp
xchg
mov
prefetchw
mov
movsl
aas
nop
cmp
leave
or
adc
push
dec
std
movsl
cltd
shl
test
dec
outsl
cltd
mov
adcl
push
mov
dec
xor
outsb
xchg
mov
mov
xor
sub
pop
jp
xchg
adcb
xor
push
mov
xlat
push
lock
mov
add
movsb
sub
loop
jns
daa
jno
aam
popa
or
hlt
loope
and
stos
xchg
inc
inc
sub
in
les
cwtl
roll
insb
inc
mov
into
or
push
push
xor
aad
sub
jge
out
push
data16
pop
jl
imul
fmull
adc
lret
jne
push
jae
mov
or
jl
xchg
rcl
adc
lock
dec
mov
nop
push
repnz
scas
rcrl
in
mov
cmpsl
sbb
in
outsb
xchg
mov
lds
arpl
into
fdivrl
xor
adc
bound
nop
je
sbb
sahf
mov
popa
mov
cmp
adc
xchg
sbbl
sbb
xor
enter
mov
mov
pop
push
adc
fistpll
clc
cmp
inc
in
rcr
aaa
pusha
dec
out
sahf
jnp
cld
jmp
in
lcall
arpl
mov
pop
je
dec
loop
pop
inc
add
push
pop
test
push
sahf
sub
test
jge
pop
mov
xchg
pusha
push
xchg
jg
cmc
sub
mov
pop
ss
sub
mov
xchg
cmp
mov
test
xor
inc
sbb
inc
adc
lods
cpuid
sbb
dec
scas
out
push
sub
mov
mov
dec
cmc
push
arpl
push
in
repz
mov
mov
sub
cwtl
gs
jae
mov
aad
nop
mov
mov
cmp
sub
cmc
out
jb
mov
inc
pop
and
mulb
mov
jb,pt
fsubrs
sbb
xor
pop
jno
out
xchg
std
inc
insb
mov
fildl
cld
mov
in
ficompl
roll
sbb
xor
sbb
aam
dec
add
insl
push
pop
jns
jg
pop
adc
lds
loope
pop
inc
cmp
ret
iret
stos
int3
out
popf
gs
es
jmp
lret
add
mov
insb
jg
sbb
mov
mov
xchg
aaa
push
ljmp
cli
aas
sub
mov
daa
jecxz
cmc
cmp
xor
push
dec
fisttpll
popa
out
pop
addb
insl
cwtl
out
cmp
xchg
addr16
cmp
mov
shlb
insb
push
xchg
dec
cwtl
cmc
les
xor
leave
mov
push
jmp
pop
orb
aas
xchg
movsb
es
sarl
or
int3
xor
mov
jecxz
ret
movsl
popf
and
loope
insb
insb
mov
jnp
bound
iret
cmp
sbb
insl
subl
into
or
or
movsl
cmp
fdivl
mov
lret
sbb
repz
or
adc
mov
mov
sub
sub
loope
lds
mov
xchg
dec
mov
es
sti
adc
shll
ljmp
fmul
xchg
sub
fisubs
cli
xchg
dec
ss
pop
fwait
ds
in
mov
cmp
xor
mov
loop
and
jne
negb
push
jnp
jne
insl
mov
and
popf
call
leave
pop
add
sahf
mov
psraw
aad
in
sub
push
es
add
mov
xlat
mov
or
or
into
push
outsb
out
fsincos
call
mov
mov
push
mov
cmp
pop
in
xlat
jb
shll
loope
lar
addr16
js
fimull
andl
lahf
jmp
pop
push
inc
push
xlat
xor
int
pushf
bound
popa
enter
inc
lea
adc
cmpb
push
push
imul
push
jb
cmpsb
cmp
push
sbb
add
pop
push
pop
sub
cmp
push
imul
jo
adc
add
rcll
in
mov
jmp
cmp
decl
outsb
outsl
add
lss
clc
xor
mov
imul
sub
and
rcr
lahf
add
je
xchg
roll
and
mov
mov
in
int3
mov
scas
cmp
adc
jle
lcall
fisubl
aas
in
jge
or
outsl
jle
enter
loope
xchg
insl
xor
pop
jno
inc
ret
das
pop
add
out
cmp
push
add
mov
fistps
test
shr
das
jo
jne
cmc
inc
in
inc
mov
lock
aaa
lret
mov
dec
iret
fstp
mov
mov
sub
and
ds
bound
sub
in
sbb
scas
cmp
cmc
daa
andl
inc
mov
pop
mov
pop
pop
in
arpl
negb
xchg
sti
xchg
inc
inc
push
test
test
sub
cmp
mov
mov
test
pusha
jge
lods
stos
or
insl
and
decb
lea
adc
and
dec
test
lods
pop
cli
or
cltd
movsb
push
repz
mov
or
or
adc
test
pop
incb
sarl
lcall
pop
ret
pop
inc
and
dec
outsl
jno
sbb
add
sub
jle
enter
pop
fcmovnb
cmp
mov
push
push
cmpsl
sbbl
adc
and
pushf
ss
mov
lahf
in
punpcklbw
jp
inc
arpl
call
js
into
add
shlb
pop
pop
in
sbbl
das
mov
cli
mov
sarb
cmpsl
xor
in
jg
add
iret
adc
mov
cmpsl
xor
hlt
loope
negl
fcmove
arpl
sbb
roll
pushf
mov
fwait
test
cwtl
sbb
xor
jno,pt
cltd
lea
mov
int
pop
or
mov
mov
dec
dec
in
adc
fisubl
clc
icebp
stos
shl
and
jne
cmc
test
jo
lret
push
addr16
repnz
and
or
xchg
and
push
dec
add
lea
jecxz
xchg
xchg
pop
mov
ds
ds
shlb
std
push
push
sub
testl
xchg
sbb
testl
lods
push
mov
add
dec
jge
pop
push
ficoms
push
mov
mov
aad
and
pusha
xchg
icebp
movsb
mov
imul
jo
negl
cmpsb
mov
es
jg
pop
and
xchg
test
sbb
lcall
jae
js
rcrl
sub
aam
and
jnp
xchg
cmp
shlb
xlat
roll
mov
mov
loope
jp
andps
adc
movsb
leave
loop
push
sbb
and
or
fstpt
inc
xchg
mov
out
adc
popl
mov
mov
fnstsw
cs
cmc
xor
mov
icebp
lret
fwait
inc
loope
or
push
or
int3
mov
and
loop
testl
mov
cmc
call
mov
adc
mov
mov
jp
test
mov
add
aaa
popf
mulb
add
sti
test
sub
fld
popa
and
sub
mov
mov
lcall
dec
sbb
loopne
jo
lds
push
push
testb
pop
ljmp
faddl
dec
pop
pop
sbbl
fwait
stc
mov
loop
push
cmpsl
push
fadd
xchg
mov
daa
xor
sar
xor
and
cmp
add
mov
sbb
jp
aaa
ljmp
inc
xchg
push
fidivrl
test
inc
mov
jge
lret
int3
xlat
xor
xor
jae
movsl
xchg
popf
ret
rcr
jb
dec
sbb
mov
movsl
mov
or
jp
add
jecxz
pop
pop
rcrl
push
pushf
mov
test
mov
fstpl
mov
pop
lods
xchg
sub
or
mov
mov
push
cld
sbb
aam
sahf
out
mov
aas
pop
xor
mov
dec
sub
aad
sbb
xor
cld
sbb
pop
sbb
mov
cmc
lea
sbb
icebp
imul
les
mov
pusha
inc
cld
loope
xorb
das
mov
cmp
lods
add
push
call
ljmp
fcmovne
cmp
nop
jecxz
push
cld
sbb
jle
jmp
mov
mov
stc
cmpsl
outsb
cmp
lret
mov
mov
mov
push
int
stos
pop
ficomps
cmp
jle
mov
sbb
dec
cltd
push
mov
jecxz
in
cmpsl
sahf
pop
hlt
dec
dec
cmp
test
xchg
out
dec
popl
mov
fcoml
cmp
or
xor
ret
andb
ja
minps
jbe
xor
int3
xor
clc
dec
cltd
insb
jns
aad
sbb
jg
mov
xor
xchg
push
jp
xor
mov
or
ret
js
sub
cltd
test
out
push
push
mov
rcrb
fsts
imul
in
dec
jle
bt
mov
xchg
and
cld
iret
pop
pop
mov
test
mov
rcrl
add
adc
add
xchg
and
and
test
roll
and
add
popa
xchg
push
adc
mov
or
jmp
fdiv
stc
sahf
in
jbe
push
cmpsb
ss
and
sub
push
lcall
mov
divl
fsubrl
add
sarl
call
jle
cltd
movsl
xchg
pop
xchg
dec
clc
into
push
push
sbbl
and
inc
ret
cltd
outsl
pop
mov
mov
in
xchg
movsb
cmc
adc
pushf
cmp
mov
lea
cli
pop
sbb
add
adc
dec
add
or
push
push
jbe
into
dec
fidivrl
cmp
scas
xchg
mov
push
sbb
mov
insl
sti
pop
out
xchg
les
pusha
repnz
push
decb
int
lds
pop
cmp
cmp
lods
mov
iret
push
pop
movsb
pop
cmp
scas
jbe
into
mov
xor
xchg
dec
add
mov
adcl
cmp
shll
pop
insl
popa
inc
xchg
stos
mov
imull
in
idivb
mov
jmp
cli
add
fistps
mov
pop
adc
mov
inc
cmpsb
movsb
mov
sarl
into
ret
mov
aaa
fs
fs
sahf
fs
in
or
dec
jge
xchg
and
push
lds
lds
les
push
js
out
inc
jns
mov
jb
loope
fnstsw
adc
adc
push
outsl
inc
jge
shlb
or
xchg
je
fwait
inc
ret
push
or
mov
jb
movl
mull
shrl
xchg
addb
mov
cmp
icebp
xchg
cmp
mov
std
inc
push
jle
ss
dec
cmpsb
daa
test
movsl
jno
cmpsl
fwait
mov
xchg
ds
int
into
aam
iret
loopne
pusha
pop
jo
out
ror
jne
add
in
shlb
add
lods
sahf
inc
add
insl
and
daa
dec
dec
clc
push
test
xchg
dec
xlat
dec
xchg
lret
jns
mov
adc
sti
inc
xor
xor
and
cmp
push
pop
push
lret
cmp
fstpt
mov
ret
icebp
aad
dec
movl
lret
fsubl
and
mov
sbb
lret
in
call
sti
je
cmp
cmovb
sub
jmp
xor
jns
daa
inc
mov
xchg
xor
mov
cli
fwait
mov
bound
adc
inc
sub
jbe
leave
in
jne
push
pop
xlat
cmp
adc
imul
gs
push
pop
movsl
adc
in
xor
jmp
jmp
mov
xor
ljmp
jmp
pop
jbe
mov
call
outsb
andb
loop
inc
fiaddl
and
mov
ret
clc
loope
loopne
push
out
cmpsl
mov
jp
test
loop
cmpb
fs
sub
jns
sbb
xchg
mov
movsb
cmp
fildll
jp
leave
pop
push
and
shlb
mov
iret
mov
repz
mov
test
ret
sub
fs
cld
mov
inc
push
inc
into
adc
xchg
mulb
inc
sbb
sub
inc
fstl
cld
std
or
lea
sarl
rol
pusha
sbb
movsb
mov
jge
dec
mov
jg
cmp
bound
aam
xor
xchg
jb
stc
adc
and
xchg
imulb
scas
cmpsb
jmp
pop
pop
lock
aad
lds
mov
xchg
stos
and
divb
sub
pop
push
fwait
rcl
repnz
xor
dec
test
cmp
sub
jecxz
dec
bound
mov
lds
or
pop
cmp
imul
and
sbb
pop
loopne
mov
mov
pop
mov
dec
sbb
pop
clc
ljmp
je
das
mov
jmp
lcall
stos
or
xor
jp
pop
out
loopne
imul
loopne
cmp
jae
mov
aas
xchg
and
pop
mov
insb
cli
movsl
jge
adc
incl
push
jle
stc
jae
test
or
mov
dec
inc
jns
test
sbb
loopne
or
jnp
ret
fisttpll
or
mov
mov
rcl
inc
cmp
sbb
pop
mov
je
adc
mov
cmpsl
stos
xor
add
lea
pop
sbb
adc
push
int
add
lds
jb
xchg
pop
sbbl
mov
mov
xchg
push
sbb
iret
jmp
jb
pop
pop
add
and
mov
lods
aad
lahf
mov
scas
in
lahf
mov
add
imul
add
stos
mov
pop
and
cmpsl
add
popf
cmp
adc
insl
mov
lock
neg
mov
pop
es
insb
mov
in
xlat
fiaddl
cmpsb
sub
pushf
sbb
sbb
fstpl
shl
pusha
inc
sbbb
lret
or
add
jecxz
mov
sbb
mov
mov
pop
pop
mov
sti
jo
adc
xor
imull
mov
dec
xchg
add
sub
adc
stos
pop
popf
xchg
fdivs
push
arpl
mov
pusha
mov
sub
cmp
daa
or
cltd
jae
out
pushf
xchg
jecxz
sub
dec
inc
scas
ds
fwait
jb
mov
addr16
cwtl
push
jmp
sub
pop
ds
das
xchg
aaa
shll
sti
mov
xchg
mov
add
nop
clc
in
push
repnz
cmpsb
dec
mov
xor
push
jl
lea
mov
loope
aad
pop
shlb
fcompl
out
mov
andl
add
mov
loopne
out
pop
mov
loopne
ss
add
push
rcr
push
test
xor
inc
mov
or
jns
dec
cltd
push
bound
loop
pop
cmpsb
loope
push
movsl
orl
andl
mov
adc
sub
rorl
push
test
or
xor
xor
sub
or
jns
clc
lret
mov
xchg
imul
push
pushf
mov
push
fldcw
mov
mov
sbb
adc
ljmp
jl
mov
lcall
data16
jg
inc
or
sub
jp
xor
pop
fdivl
shrl
xchg
sub
bswap
push
int3
hlt
jle
mov
in
bound
xor
mov
loop
repz
scas
scas
push
pop
and
cli
lcall
or
pop
mov
jae
xchg
xchg
push
les
mov
cltd
add
mov
sarb
incl
into
mov
mov
mov
cmp
sbb
cmc
push
jo
cmp
movsb
xor
lcall
xchg
adc
bound
daa
aas
jo
arpl
mov
test
mov
push
mov
cmp
sbb
cwtl
stc
mov
xorl
mov
xor
cwtl
jae
repnz
mov
mov
fbstp
dec
jl
pop
mov
jo
add
cmpsl
pusha
sbb
lods
cs
or
call
fsubrl
add
or
and
addb
xchg
cmp
orb
daa
sub
mov
inc
mov
js
popf
fsubs
lea
dec
cmp
mov
rolb
fwait
dec
je
jmp
and
idivb
lcall
hlt
dec
mov
ret
fs
add
ficompl
mov
or
adc
xchg
push
test
cli
pop
xor
pop
mov
das
or
cmpsl
in
mov
push
test
adc
shll
repz
aas
jb
test
andb
add
mov
lret
pushf
divl
mov
push
lret
jge
stos
adc
sub
pop
sub
mov
in
dec
insl
testl
je
insb
cwtl
pop
jl
push
das
stos
es
out
movl
mov
add
lcall
fcmovu
pop
push
mov
jl
lea
test
ja
dec
ss
and
mov
mov
pop
lret
sub
add
jmp
jecxz
scas
jp
fbstp
mov
mov
xchg
mov
rorl
xchg
mov
xor
xchg
jp
jge
dec
and
mov
sub
pop
lea
mov
pop
inc
or
sub
imul
xor
int
jecxz
popf
bound
loope
or
enter
cmp
imul
insb
insl
imull
or
fsubl
sbb
push
js
push
icebp
push
sbb
push
push
xchg
cltd
mov
and
jne
fisttpll
sub
orl
pop
inc
push
inc
adc
xor
pop
js
lret
adc
push
jl
stos
cltd
dec
adc
lock
pop
and
push
data16
fildll
push
sbb
rolb
pushf
sub
scas
cld
sbb
add
jo
insb
clc
cmpsl
sahf
dec
je
pop
pop
push
mov
in
fs
lock
stc
aaa
repnz
mov
jle
int
popf
cmp
cs
stos
sbb
push
xchg
adc
out
into
test
mov
jae
xchg
test
dec
shrl
ss
outsb
out
cmpsl
movsl
cwtl
mov
add
test
adc
fwait
adc
js
xlat
icebp
cmp
pushf
add
and
js
pop
mov
sub
mov
fstps
cmp
sub
js
arpl
pop
test
and
push
stc
cld
jg
cmp
ret
pop
push
cltd
xor
in
xchg
and
stos
sub
adcl
jno
sarl
test
insb
mov
fisubl
ljmp
data16
lods
iret
cmpsl
fisttpll
mov
lret
stos
rorb
sub
mov
hlt
dec
pop
or
dec
mov
jns
inc
add
cmc
aad
shll
mov
mov
insb
push
mov
inc
dec
pushf
rorb
ljmp
xor
cmp
rol
xchg
out
xor
ss
inc
sbbb
or
or
push
and
adc
sbb
adc
leave
les
add
cmc
mov
stos
nop
inc
int3
push
fimull
pop
sub
sti
pop
leave
jl
out
inc
lahf
push
jg
cmpl
stos
pop
addl
mov
dec
and
mov
dec
pop
and
mov
adc
std
testb
aas
rorl
push
jl
xor
mov
stc
cmc
repnz
mov
adc
jge
bound
rcll
add
in
les
inc
les
xor
mov
int
test
and
add
test
fs
out
xor
mov
cld
test
jp
std
fistpll
jbe
sub
ret
fstl
and
jmp
sbb
mov
and
xchg
add
sti
mov
cmp
jl
jne
jno
pop
flds
aaa
gs
mov
and
bound
loopne
in
xchg
std
ja
les
sbb
insl
xorb
dec
insl
sbb
or
imul
test
pop
sbb
jns
fcompl
enter
ja
shlb
xchg
mov
movsb
out
lds
pop
insb
add
into
lods
insl
xchg
enter
mov
call
pop
mov
out
inc
mov
xor
jae
icebp
arpl
pop
pop
pop
nop
imul
test
icebp
mov
test
cmp
adcl
scas
int3
and
ljmp
add
xor
or
pushf
mov
xchg
sbb
ret
out
mov
lahf
jg
pop
fwait
scas
jno
mov
inc
in
xchg
inc
fisubrl
movsb
hlt
xor
or
cmp
xor
lds
ljmp
lret
sbb
cld
loopne
data16
jb
cmp
add
cli
jns
test
sbb
jge
and
shr
adc
jge
mov
cmovl
cmpsb
stc
jb
mov
sbb
cmpsb
mov
xchg
jnp
dec
sbb
leave
in
xchg
push
xchg
pop
cli
adc
or
mov
xchg
xor
dec
rcl
fwait
jecxz
fistpll
popf
ret
inc
jmp
jmp
jp
cld
and
into
cmp
lcall
mov
mov
inc
mov
sub
adc
in
outsb
pop
data16
cmc
fisttps
xchg
dec
and
into
addr16
mov
xchg
cltd
inc
es
adc
shrl
inc
iret
mov
cld
pop
shll
or
push
xchg
lods
jo
jbe
xchg
and
sahf
lret
mov
rcll
je
les
jbe
fs
imul
push
popa
call
sub
lret
insl
xchg
scas
addr16
cld
cmp
mov
or
je
ret
fdivrl
test
idivb
imul
pop
rorl
push
mov
mov
jnp
movsb
imul
fdivrl
xor
cmp
test
std
push
push
or
ffreep
lret
outsb
mov
mov
push
stc
pop
stos
fmull
fwait
gs
mov
fwait
ss
arpl
shrl
sub
adc
mov
movsb
push
xor
fisttps
cli
insl
js
jb
mov
cs
inc
shll
jne
mov
jp
push
and
push
lea
cmp
lods
outsl
clc
mov
and
adc
jmp
mov
jmp
push
cmc
popa
xchg
xchg
sub
ret
push
jmp
aam
xor
add
dec
or
gs
out
lret
push
pop
int3
scas
insl
in
stc
pop
adc
jnp
in
enter
jbe
icebp
test
xchg
add
test
int3
jge
sub
mov
insl
mov
ret
fwait
int
push
add
xor
jbe
cltd
fistps
adc
dec
add
movsl
adc
mov
insb
mov
dec
adc
jl
test
pop
cmc
mov
push
jae
jns
mov
mov
daa
pop
xlat
mov
push
sti
lock
lods
movsl
mov
xlat
stos
sbb
lret
into
xor
aam
or
or
xchg
rclw
add
fisttpl
icebp
xlat
add
pop
out
sarl
je
xchg
mov
xchg
jmp
mov
dec
inc
js
mov
sub
xchg
popa
cmp
inc
push
and
in
rcrb
mov
mov
xchg
dec
rcrl
out
mov
jo
rcrb
bound
mov
push
xor
mov
call
xor
mov
jns
shrl
jbe
dec
inc
ret
sbb
insl
adc
adc
ja
mov
push
in
insl
ret
lahf
xor
push
or
xchg
es
sbb
pop
test
les
arpl
pushw
std
cli
mov
sub
mov
sub
js
jge
adc
incl
das
mov
addr16
pop
adc
mov
mov
adc
and
dec
or
mov
test
xchg
aam
cmpsl
fsubrs
imul
into
shl
popf
ficoml
movsl
loopne
pop
jae
lahf
and
add
aam
pop
jle
jno
sbb
or
fcoml
sti
jecxz
in
jb
enter
lea
into
and
jmp
orl
mov
bound
push
pushf
sbb
mov
mov
test
mov
daa
inc
pop
icebp
pop
fisttpl
ud2
out
imul
mov
out
test
cmp
xchg
fnstsw
xchg
xchg
aaa
testb
addr16
lret
sub
das
aad
jg
js
and
testb
mov
mov
pop
lahf
jns
ficomps
mov
inc
cld
fdivrs
mov
jmp
pop
fs
daa
mov
dec
inc
negb
lahf
imul
jge
aaa
jecxz
int3
mov
stos
jle
add
mov
fdivrl
xor
mov
and
or
xor
adc
aad
xchg
das
ss
sahf
mov
adc
pop
iret
inc
cbtw
adc
cmp
and
jne
mov
jp
fisubrl
add
sbb
mov
mov
or
push
sub
stos
xor
push
sbb
mov
xchg
mov
mov
imul
in
jp
lret
lret
loope
daa
aad
pushf
mov
mov
hlt
push
fisttpl
in
andb
jb,pt
cld
push
pop
or
xor
sub
repnz
call
mov
xchg
lods
mov
push
and
lock
loope
scas
out
mov
sbb
mov
xchg
cltd
push
negl
push
dec
pop
and
push
gs
push
ja
lock
mov
dec
pop
psubsb
loopne
xor
pop
push
ja
or
hlt
mov
jb
pop
movb
call
mov
in
ror
scas
pop
xchg
outsl
pop
rolb
lock
aaa
sub
jge
scas
mov
push
fstl
stos
sarl
testl
aaa
ret
sarl
cmp
mov
aas
movsl
js
imul
in
imul
jmp
jle
and
in
sahf
fs
push
pop
sti
dec
jge
xlat
lods
test
adc
lods
or
pushl
push
inc
dec
pop
fdivrl
int3
xchg
xchg
inc
jmp
mov
sub
imul
xchg
testb
test
dec
mov
xchg
lods
dec
push
adc
pop
mov
sub
aad
xor
insb
loopne
push
jo
mov
ljmp
pop
cltd
adc
and
jb
imul
mov
mov
jo
std
inc
adc
mov
ret
test
cmpsb
mov
jns
xchg
dec
or
pop
cmpsl
xor
aaa
push
clc
mov
mov
insl
inc
xchg
push
dec
fists
out
sbb
xchg
sarl
mov
jnp
daa
xchg
enter
xor
xchg
dec
inc
sbb
dec
cli
push
scas
out
dec
cmp
loopne
divb
pushf
inc
mov
add
and
cmpsb
inc
nop
pop
imul
cmpsl
inc
xchg
jnp
pop
inc
or
pop
mov
imul
dec
xacquire
sub
lock
ficoms
mov
call
and
jecxz
fidivrs
imul
je
mov
fcmovu
orl
xchg
shll
fsubrp
ljmp
aaa
mov
pushf
push
shlb
mov
add
cmpsl
xor
inc
insb
testb
pop
mov
cwtl
pop
into
cltd
adc
mov
in
and
mov
lret
mov
or
pop
sbb
sub
jbe
pop
push
cmp
mov
inc
cmp
mov
pushf
fdivl
fsubl
pop
cmpsl
adc
xchg
test
je
aam
add
rolb
mov
inc
inc
fisttpl
add
inc
bound
or
dec
add
sbb
cmp
and
shll
int3
sbb
dec
lods
xchg
bound
mov
pusha
and
cmpsl
stc
fnsave
incb
rcll
lahf
sub
or
xchg
push
cmp
fistpl
cwtl
cwtl
xor
xor
jae
pop
dec
xlat
gs
mov
xchg
fdiv
sub
daa
gs
jo
pop
sub
adc
sarb
xor
sahf
adc
inc
pop
push
fdivr
test
push
aam
push
lret
mov
out
adc
insb
outsb
mov
push
add
xchg
sub
pop
test
cwtl
test
jecxz
and
jmp
sahf
repnz
or
fistl
out
fwait
test
jge
xchg
cld
xlat
test
fwait
movsl
jg
cmp
pop
stos
cmpsl
sbb
pusha
pop
mov
dec
shlb
test
hlt
pop
addl
push
push
outsl
inc
adc
fs
fstps
repz
mov
push
jl
or
in
out
nop
jb
jae
push
pop
daa
mov
jns
dec
frstor
fiadds
lcall
mov
ret
scas
shl
pushf
add
inc
add
adcb
or
ss
int3
mov
cmpsl
test
addl
inc
lods
mov
mov
push
arpl
dec
mov
pop
imul
rcl
popa
lret
ret
lds
inc
or
adc
mov
fadds
jl
pop
mov
ja
sub
movsl
jnp
push
lods
aaa
in
xchg
pop
dec
or
inc
sbb
mov
popf
mov
xchg
out
mov
inc
call
in
cmp
cmp
mov
sbb
mov
dec
cmc
lret
xchg
jo
stos
cmc
leave
add
xchg
mov
or
pop
lcall
int
cmpsb
sahf
mov
adc
jb
data16
pop
sub
js
cmp
mov
int
and
std
imul
pop
xor
mov
test
test
and
push
dec
scas
stc
inc
pop
xchg
jns
enter
cmpsb
addr16
aam
xchg
mov
jg
xchg
push
sub
ds
fisubrl
ficomps
xchg
or
mov
xchg
push
shl
insb
es
add
leave
xchg
push
es
roll
ss
pop
out
outsb
fstps
sbb
jno
push
add
leave
enter
cld
lock
mov
jo
out
out
pop
push
and
mov
jp
jns
push
sub
mov
xchg
enter
jle
js
xor
rep
jbe
cmp
inc
stos
ljmp
outsb
push
mov
or
clc
xor
pusha
pop
sub
dec
cmpsb
in
scas
dec
gs
test
inc
sub
lcall
outsl
fsubrs
cmpsb
inc
mov
sub
jp
push
push
mov
mov
pop
and
add
push
fcomps
or
imul
mov
imul
mov
arpl
push
test
mov
add
leave
sbb
xchg
mov
jmp
dec
lret
and
int3
in
pop
sbb
mov
bound
lea
arpl
xor
shrb
xchg
dec
cmp
push
pop
push
cmpsb
pop
mov
push
and
lods
in
aad
rorb
stos
xchg
dec
and
inc
mov
subb
jnp
and
jmp
xor
and
imul
xchg
pop
sbb
push
jnp
dec
popf
mov
lret
fwait
imul
jg
loope
outsb
scas
push
push
or
int3
sahf
lret
mov
nop
in
inc
call
and
cltd
inc
inc
sub
pushf
je
and
ds
mov
mov
xchg
jge
add
icebp
cmp
cmpsl
cmpsb
fucomp
dec
push
repz
inc
pushl
jp
and
cmp
out
shl
mov
xor
inc
cwtl
mov
out
out
imul
mov
gs
ret
or
daa
pushf
xchg
sbb
lahf
add
pop
aaa
xlat
je
jl
das
andb
rcll
mov
repz
jle
adc
fdivl
mov
xchg
nop
leave
xlat
cmp
inc
sub
cmpsb
xchg
pop
addl
call
nop
cmpsl
aad
fisubrl
sub
call
adc
lret
pop
inc
movsb
add
cmpsl
icebp
mov
aas
data16
ret
push
cmp
dec
dec
cmc
mov
int3
jb
jo
mov
cmpsb
dec
mov
inc
sbb
lcall
repnz
ljmp
xor
jnp
rorb
xchg
pop
mov
mov
in
fwait
xor
fwait
iret
mov
cwtl
insb
loopne
mov
je
or
rolb
shl
sub
out
sub
push
cmp
sbb
and
dec
iret
dec
and
test
insl
push
pop
and
or
arpl
in
enter
xchg
shl
scas
dec
jb
jmp
dec
sbb
jns
or
aam
testl
xchg
fmuls
jmp
xor
hlt
adc
outsl
add
cld
lods
rorl
and
sub
sub
in
cmpsl
cmpsl
shrl
mov
sub
add
cmp
dec
sub
dec
clc
pop
cmp
loopne
adc
mov
nop
stc
nop
mov
in
adc
dec
pushf
xor
insb
xchg
int3
add
bound
addr16
or
and
or
test
jp
orl
add
repnz
mov
scas
notl
pop
cmp
pop
insl
and
push
in
jb
xchg
push
lock
cmp
out
in
outsb
mov
sbb
cmpl
je
push
mov
je
mulb
inc
test
jmp
and
aaa
xchg
xor
mov
popf
add
push
int
jne
popf
adc
xchg
das
rol
dec
stos
push
lahf
pushf
adc
dec
mov
shrb
adc
mov
test
mov
lods
rorl
cwtl
rcrb
pushl
push
mov
in
jbe
nop
stc
cmp
out
pop
imul
mov
jmp
and
or
fsubrs
nop
ss
pop
fdivl
mov
dec
sbb
jmp
in
add
fildl
test
out
add
inc
call
ds
jle
popa
out
ds
outsl
cmpsl
adc
movb
cmpsb
imul
mov
lret
loopne
nop
xchg
pop
leave
int3
ret
inc
jae
xor
ss
aaa
sub
fwait
xchg
cltd
aas
es
out
in
adc
movsb
push
adc
hlt
rorl
sbb
lods
and
std
adc
test
pop
sub
add
fstpt
loop
fwait
cmp
adc
pop
xor
sub
int3
and
lds
mov
js
mov
inc
push
les
jle
push
pop
push
adc
dec
and
push
sahf
cli
or
dec
jmp
mov
cs
push
cltd
and
fsubrs
fnstsw
mov
mov
mov
dec
popa
lret
test
hlt
out
and
cmp
shll
stos
in
mov
mov
push
mov
fldcw
sub
es
add
test
adcl
sbb
add
mov
ljmp
shrb
repnz
sub
pop
xchg
xchg
das
pop
cmpsl
jmp
insb
fisubl
rcll
fldpi
cmp
xchg
mov
sbb
pop
out
cmpsl
into
mov
sbb
inc
idivb
repz
fwait
std
mov
lods
les
int3
out
inc
sub
mov
cmp
inc
insb
xor
xor
or
shrb
dec
and
dec
xchg
xchg
xor
inc
fists
adc
and
cltd
jb
out
dec
mov
fmull
mov
int3
xor
and
lahf
xlat
fdivs
mov
push
mov
cld
pop
mov
inc
stos
in
popf
int3
add
jbe
fmull
stos
rclb
push
test
push
mov
in
xor
inc
dec
mov
sar
sbb
testb
mov
mov
leave
fstl
dec
mov
pop
js
xor
hlt
xchg
arpl
pop
adc
mov
cmp
loopne
push
insb
loopne
daa
pop
imul
add
mov
mov
mov
lret
ljmp
mov
cmc
shll
ret
pop
pop
push
imul
mov
nop
repz
sub
addr16
mov
mov
xor
pop
and
cmp
push
movsb
cltd
xchg
mov
rorb
sti
test
sub
fisttps
push
jmp
jg
fwait
adc
mov
xchg
or
xchg
adc
test
scas
lods
push
cltd
xor
dec
mov
mov
mov
vpminub
test
mov
pop
xchg
mov
jmp
cmpsl
jg
fadds
or
xchg
sub
not
popf
cmp
mov
fidivrl
icebp
mov
negb
out
xchg
adc
js
sbb
cmp
iret
sti
stos
inc
mov
inc
out
push
sub
cmp
add
js
cmp
repnz
xchg
sti
fsubr
test
scas
sbb
sbb
mov
cmc
rcrb
or
push
inc
lret
mov
aas
xor
mov
xor
sbb
push
xor
jnp
jl
fildl
pop
pop
xlat
adc
and
mov
out
xchg
into
and
int
rcrb
test
add
fs
sub
in
popa
andb
or
movsb
jbe
pop
ret
lock
testl
stos
push
sbb
arpl
mov
cs
aaa
in
and
sbb
pop
iret
sub
jne
jl
addr16
jmp
pusha
pop
or
add
sbb
lea
mov
lea
inc
xor
inc
je
iret
and
sbbl
pop
inc
sbb
mov
cmpsl
pop
sub
addb
jbe
iret
sbb
lret
lcall
pop
push
add
push
pop
jmp
scas
jnp
xchg
xor
insb
scas
jb
inc
pop
aas
outsb
ss
inc
sub
idivb
pop
or
aaa
xorb
ja
jae
adc
cmp
pop
push
pop
cmp
mov
ret
stos
mov
dec
jo
ret
push
or
pop
jg
sub
cmovb
dec
lods
adc
inc
xchg
adc
nop
data16
ficomps
add
orl
lds
add
pop
xchg
roll
jae
fcomps
in
outsb
ja
push
cmp
mulb
mov
pop
sub
mov
add
cltd
cmp
fcomp
cmp
cmp
and
cwtl
addb
mov
pop
fdiv
icebp
out
aaa
je
mov
arpl
negb
jle
mov
inc
dec
inc
adc
mov
outsl
or
lock
adc
sub
ss
add
dec
cmpsl
sub
xchg
leave
sbb
pop
shlb
je
incl
imul
fs
addr16
sub
push
push
and
jecxz
mov
test
jmp
lahf
mov
in
outsb
nop
adc
and
xchg
cld
dec
sarb
stos
sbb
arpl
xor
mov
cmp
sub
repz
popf
scas
or
pop
xlat
xor
and
dec
xlat
out
jle,pn
insb
clc
subb
push
pop
test
sub
js
inc
loope
inc
call
arpl
sbb
pop
gs
xor
fildl
stc
pop
insl
inc
mov
in
adc
insl
add
sbb
shl
inc
sub
test
sbb
cmp
je
divl
inc
hlt
fmuls
push
ret
dec
push
ljmp
rcrb
mov
bound
icebp
xchg
add
jno
jnp
jb
imul
fcmove
jb
dec
test
icebp
mov
out
jp
and
cmpsl
mull
or
xchg
mov
and
cmpsl
cmp
lds
jg
scas
aad
popf
xchg
sbb
pop
sub
mov
sub
insl
adc
je
jp
mov
mov
cmp
arpl
dec
ja
ja
cmp
into
pop
les
jp
mov
cmc
sbb
jne
push
ret
inc
jmp
repnz
fs
push
clc
or
out
mov
mov
dec
push
cmp
adc
mov
insb
cmc
jle
xchg
scas
cltd
pushf
add
int
and
sahf
rorl
ds
sub
mov
push
rcrb
stos
imul
subl
cltd
movsl
xor
pop
lods
movsl
arpl
sub
lcall
inc
stos
fwait
mov
pop
stc
mov
or
imul
pushf
rclb
fisubrl
mov
inc
das
dec
jo
mov
mov
dec
push
in
inc
dec
addr16
pop
cmp
sbb
in
inc
add
lea
in
mov
and
jnp
adc
lods
mov
dec
in
movsl
gs
lods
mov
fidivrs
adc
push
xor
add
stos
out
adc
in
cs
aaa
dec
jle
decl
pusha
mov
jge
int
aam
inc
inc
push
and
ljmp
fwait
cmp
mov
adc
xor
clc
cmp
repz
sbb
sub
jmp
pop
hlt
cmp
test
jne
out
cmp
cmp
jbe
aaa
jmp
and
fs
popf
hlt
add
mov
and
cmp
jns
sbb
call
jbe
sub
jnp
clc
xor
cmp
mov
aaa
sub
into
sub
popa
adc
and
jle
lret
pop
inc
int3
addl
or
pop
inc
sti
addr16
jge
test
mov
test
push
insl
push
daa
mov
push
xchg
jo
ret
sti
push
sbb
imul
mov
cmp
cmpsb
lds
adc
mov
pop
xchg
imul
inc
nop
popa
out
and
fisubrs
daa
pusha
xor
lret
ja
sub
sub
inc
rolb
in
jecxz
fistpl
xor
outsb
clc
pushf
iret
cmpsb
sbb
addr16
js
stc
jnp
xchg
in
fcoms
jno
push
aaa
adc
sbb
adc
push
mov
aas
mov
sbb
loopne
xchg
or
divl
addr16
mov
cmp
cmc
add
mov
test
pusha
divb
xor
pusha
xor
out
dec
sbb
movsb
dec
mov
mov
scas
mov
leave
popf
sarb
mov
in
stos
inc
add
stos
lret
lret
jmp
out
pop
outsl
mov
mov
xchg
fsubrl
addb
push
and
cmc
push
jle
shlb
loop
xchg
insb
jno
or
or
outsl
stc
mov
jno
stos
in
xor
jb
jbe
mov
ret
xchg
or
add
test
jbe
gs
mov
fcomps
vmwrite
cmpsb
fdivrs
aam
push
xor
das
cmp
pop
cltd
or
loopne
xchg
adc
mov
xchg
outsb
movsb
push
jecxz
dec
mov
sub
lahf
adc
lock
sub
or
and
add
fstl
mov
cmp
sub
cmpsl
mov
add
or
inc
xor
add
rorb
cmc
pop
lods
sub
add
test
mov
rorl
out
mov
dec
and
cmpl
pop
add
imul
in
mov
jl
pop
mov
test
dec
out
and
mov
sub
xchg
leave
mov
pop
fidivrs
adc
xchg
inc
cmpsl
movsb
pop
rcll
cmp
and
mov
jl
cwtl
lret
stos
inc
xchg
or
loop
mov
sti
dec
push
lret
mov
shr
pop
xor
dec
xor
sbb
add
out
or
clc
ja
dec
imul
hlt
popa
cmpsl
clc
hlt
lret
das
test
pop
inc
gs
or
andb
sub
adc
jecxz
cmp
pop
inc
mov
cli
pop
dec
daa
adc
outsb
jg
xchg
dec
dec
hlt
shrl
or
lea
or
mov
int
xor
push
iret
ds
xor
test
dec
or
adc
mov
mov
mov
add
movsl
inc
je
adc
and
sbb
mov
mov
or
jmp
les
add
mov
pushf
dec
mov
insb
push
fstps
ja
nop
ret
jmp
push
and
inc
loopne
inc
add
aaa
in
jmp
in
mov
nop
xor
lock
mov
ret
test
fwait
lods
shl
xchg
xchg
add
or
jle
xchg
mov
loope
imul
mov
mov
daa
aas
vunpckhps
push
and
sbb
sbb
int
push
add
inc
add
fdivs
hlt
mov
data16
inc
cld
or
fisubrl
mov
dec
dec
mov
test
mov
ljmp
pop
es
xor
and
loope
arpl
inc
lcall
inc
mov
jg
shrl
ljmp
dec
mov
pop
and
imulb
in
jl
dec
out
nop
mov
iret
cmp
xor
cmc
std
js
clc
sub
lds
jns
push
imul
push
in
jge
jmp
mov
flds
je
jmp
sub
sub
test
or
pop
out
repnz
inc
push
das
mov
ret
pusha
imul
sbb
mov
mov
sub
fcmovb
cmp
mov
and
jecxz
xchg
mov
scas
dec
nop
push
mov
pop
cli
jns
sub
mov
js
cwtl
push
inc
je
ret
pusha
ja
xchg
cmp
inc
sub
xchg
add
aaa
fadds
xchg
lods
lds
xor
mov
adc
stos
push
ljmp
or
stos
mov
inc
iret
xor
addb
mov
imul
pusha
enter
fs
outsb
inc
pause
jae
mov
sahf
push
test
aad
addb
test
inc
xor
leave
pop
push
jo
adc
inc
push
cli
pop
fldenv
rcll
mov
call
test
jmp
jo
pop
mov
fdiv
jecxz
out
outsb
xor
dec
in
inc
cltd
sub
addb
mov
pop
mov
rcll
lods
xor
mov
xor
adc
xchg
imul
test
add
jae
sub
push
mov
lock
jge
xchg
adc
xlat
call
dec
nop
int
mov
fdivrp
rorb
xor
jbe
cwtl
mov
loope
inc
mov
leave
or
xchg
pop
mov
inc
in
jmp
mov
repz
lahf
lods
popa
movsb
lret
notb
cli
sub
out
test
loop
int3
out
je
cmp
jnp
add
int3
mov
mov
and
sbb
sub
dec
gs
mov
mov
pop
enter
fucomp
js
es
out
movsl
dec
push
jl
xchg
push
or
push
fbstp
sbb
js
adc
add
test
out
pop
in
sub
xchg
xchg
cli
mov
xchg
bound
sti
xor
ss
xchg
sarb
rorb
dec
scas
mov
pop
xlat
adc
adc
ds
leave
dec
sub
jle
mov
adc
mov
bound
pusha
cmpsl
and
pop
adc
jmp
andb
test
xchg
cmc
ror
jecxz
dec
mov
adc
mov
popa
call
jmp
fwait
loope
stos
mov
dec
inc
add
add
jnp
xor
xchg
sbb
inc
xchg
inc
push
ss
imul
mov
xor
jb
cld
fwait
cmp
lods
out
repz
lret
pop
fwait
jnp
scas
data16
jo
or
xchg
mov
dec
sahf
dec
roll
mov
lret
stc
push
in
mov
cmp
cmc
sarl
in
adc
int3
adc
bound
xchg
fwait
mov
mov
inc
iret
mov
sub
fidivl
repz
push
and
int3
into
call
push
add
jle
cltd
shl
xlat
daa
mov
jmp
iret
jne
push
lods
fbstp
or
jb
popw
cmp
loopne
leave
bound
xchg
cmp
jmp
xchg
mov
stc
std
inc
sub
mov
das
adc
insl
push
cli
or
mov
adc
and
out
mov
sub
cmp
mov
out
push
ror
xchg
lods
and
and
lret
inc
xchg
rclb
in
mov
aaa
pop
movsl
mov
call
jg
pop
rcrb
aam
sbb
mov
push
sub
imul
fdivr
sub
lods
mov
push
mov
add
push
rclb
adc
cvtpi2ps
mov
push
mov
mov
test
lods
mov
mov
pop
pusha
outsb
jo
imul
mov
lea
cltd
sarl
push
inc
imul
inc
addr16
aam
aas
es
jb
xchg
or
dec
int
inc
daa
mov
pop
popa
imul
sub
jae
das
mov
fcoml
nop
push
adc
dec
or
inc
rep
cmp
popa
dec
jbe
cmp
inc
dec
jbe
shll
push
push
cs
dec
pop
mov
dec
dec
push
push
dec
test
push
mov
mov
outsl
outsb
sahf
cmpsl
mov
cld
cmp
in
push
imul
ficoml
ljmp
mov
xchg
jb,pn
enter
adc
lods
rcrl
sbb
jl
divb
daa
inc
mov
xchg
add
test
xchg
jg
mov
xchg
fsts
insb
jge
or
inc
xchg
jae
test
xchg
cmp
pop
inc
mov
clc
mov
dec
pushf
fildl
add
popl
fwait
pop
daa
xchg
push
aam
adc
sbb
pop
push
push
shrb
mov
jbe
mov
shlb
dec
inc
fs
xchg
scas
shrl
hlt
sub
adc
dec
stos
push
xor
outsb
or
inc
rorl
ficoml
cmp
call
xchg
cmp
mov
add
add
popa
and
cmp
test
cmpsl
mov
push
xchg
daa
loopne
jo
loopne
lahf
popa
loop
aas
mov
or
pslld
mov
add
addr16
cmpsl
mov
mov
in
insb
str
in
pop
jg
push
into
or
mov
dec
in
adc
adc
in
lock
add
lcall
adc
aad
loope
xor
test
divl
das
pop
cmp
cwtl
aas
in
mov
sub
in
inc
popa
call
mov
fwait
clc
andl
lock
ss
ljmp
test
and
clc
in
dec
cmc
push
adc
inc
or
jae
and
add
lds
xor
into
cmp
imul
cmpsl
sub
xchg
cli
sbb
push
pop
cmp
into
dec
sbb
stos
dec
loop
cmpsl
jo
push
pop
addr16
test
fld
cmp
in
push
jnp
xor
rclb
inc
sahf
cmp
dec
or
pop
lret
sbb
jmp
test
or
outsb
mov
xchg
iret
add
pop
sbb
sub
xchg
imul
xchg
inc
enter
sahf
pop
and
outsl
pop
jg
mov
aaa
mov
jae
dec
iret
xchg
lcall
mov
mov
cli
add
or
dec
pop
in
mov
fdivrp
push
jbe
outsl
push
fldcw
fidivrs
cmp
pop
mov
adc
lret
pop
sbb
mov
out
mov
mov
jecxz
jmp
inc
xor
cltd
xchg
sub
jmp
repnz
mov
mov
xchg
stos
sub
lock
test
inc
mov
and
fdivrl
loopne
nop
mov
std
inc
mov
jbe
repnz
fcoml
mov
mov
in
loop
mov
popa
dec
iret
adc
aad
ja
mov
mov
std
ficoms
in
push
cmp
push
outsb
lods
adcl
push
addr16
and
cmp
stos
leave
xchg
enter
call
adc
or
les
dec
inc
and
decl
inc
and
out
push
jle
jae
inc
rclb
mov
stos
mov
adc
add
js
jge
sbb
jl
push
adcb
xor
cmp
xchg
dec
sub
dec
data16
and
add
dec
dec
mov
push
add
sbb
push
scas
sub
mov
es
mov
leave
sub
loopne
mov
inc
mov
adcb
xlat
xchg
sbb
cmp
push
aas
xor
mov
push
sub
stc
popf
pop
jecxz
mov
push
cmc
sub
scas
mov
jb
leave
sysret
repz
mov
cmp
lahf
loopne
ljmp
out
jno
pop
enter
or
outsb
inc
and
rcl
mov
or
imul
imull
cmp
fs
mov
xor
pop
jns
sahf
ljmp
mov
test
movsb
xchg
jle
mov
mov
ror
je
mov
les
vminpd
test
popf
xchg
mov
fcomp
mov
pop
sbb
sbb
movlps
sub
jnp
stc
lret
orb
jmp
jns
test
adc
jb
jbe
lods
lret
ret
adc
xchg
xor
add
ret
lods
or
mov
push
insb
add
xchg
or
xor
xor
sahf
in
jp
mov
jmp
insb
cmpsb
pop
ficoms
fcoms
int
or
mov
sub
cli
lahf
rcrb
and
shll
cmpsb
mov
aam
test
jnp
xchg
jle
inc
sub
and
ds
shl
jb
lods
insl
mov
lahf
mov
push
icebp
dec
jns
lods
adc
ret
add
das
xchg
push
xchg
jae
jecxz
test
push
mov
aaa
jno
inc
push
imul
xchg
in
pop
sub
in
sbb
mov
add
movsb
sbb
jl
icebp
js
cmp
test
sub
or
pusha
inc
mov
call
and
fisttps
jne,pt
and
jmp
cld
test
inc
fcompl
rclb
xchg
jbe
mov
xchg
pop
loope
dec
jo
fmul
or
jl
jne
es
popa
cmp
pop
loope
loope
pop
and
push
bnd
cmp
xchg
mov
ret
jmp
cld
pop
sbb
movl
cwtl
test
adc
clc
imul
xchg
dec
and
jns
pop
mov
xor
mov
fstpt
mov
cmp
mov
in
insl
in
xchg
xchg
inc
xchg
pop
adc
xchg
pop
sahf
xor
xchg
dec
cmpsl
mov
jbe
inc
xchg
sti
mov
test
xchg
push
mov
mov
mov
or
push
cmpb
lahf
or
sbb
mov
mov
push
lea
addl
fldcw
inc
scas
in
clc
xchg
das
in
ret
xchg
sub
inc
cli
fdiv
mov
pop
insl
jecxz
ss
cmp
xchg
into
mov
xchg
or
cmp
ljmp
daa
xchg
mul
nop
sahf
add
add
fistpl
loop
lea
inc
sub
cmpsb
cmp
call
stc
or
lds
xlat
push
xor
mov
push
cmpb
xor
std
xchg
bnd
test
push
fldenv
inc
dec
stos
or
pop
pop
test
adc
aas
sbb
sbb
jo
xchg
jecxz
cli
das
fistps
or
sbb
rclb
pop
out
dec
std
sbb
dec
aaa
push
ds
push
pop
pop
sub
repnz
out
test
xchg
add
cld
push
mov
adc
test
dec
leave
xchg
or
sub
lds
mul
pop
pop
jnp
scas
sbb
dec
mov
loopne
js
mov
inc
pop
stos
mov
and
add
sarl
rcrb
xchg
test
aad
inc
cmpsl
mov
bound
pop
daa
enter
movsl
push
pop
jno
push
push
daa
cmp
cmp
shlb
gs
xorb
mov
test
das
sub
xor
xor
adc
loop
dec
sarb
pushf
and
push
push
scas
loop
mov
inc
ret
pop
add
and
jne
add
lret
inc
jns
iret
insl
pop
adc
xchg
ret
aaa
add
outsl
daa
ja
sti
enter
lods
inc
in
push
or
fdivp
sbb
push
icebp
mov
lds
push
mov
test
aaa
jb
fmull
clc
push
std
insl
in
pop
loop
and
add
jae
ficompl
icebp
out
pop
enter
pop
outsb
xchg
repz
jno
pop
imull
movsl
dec
std
or
iret
cmp
jns
jns
arpl
push
cmp
data16
push
inc
dec
pop
out
mov
and
fwait
mov
dec
stc
xchg
das
rcr
sbb
lahf
pop
mov
mov
or
inc
aas
mov
clc
mov
fxch
xor
dec
out
repnz
or
cs
bound
cmpsb
push
out
mov
lret
insl
mov
sbb
mov
lods
or
icebp
inc
mov
arpl
pop
outsb
inc
loop
pop
les
adc
int
ja
ds
adc
fwait
mov
dec
jecxz
insl
pusha
fnsave
negb
je
lds
lock
or
ficoml
fwait
xchg
out
enter
jecxz
mov
cltd
sub
mov
ret
daa
xchg
cmc
es
popf
jbe
mov
push
cmc
mov
lea
push
xor
cmpsl
ret
cmp
outsl
lock
lret
ja
cwtl
pop
push
or
xchg
cmp
addr16
lds
sti
test
mov
aas
fucom
jge
cmp
fadds
fs
jmp
fucomip
dec
push
push
mov
mov
ret
mov
leave
lods
mov
inc
sub
out
insl
fsts
or
fldcw
loopne
mov
test
mov
inc
mov
nop
test
in
or
inc
fwait
idivb
xor
movsl
pop
or
insl
pop
push
mov
out
pop
push
push
mov
mov
xchg
bnd
adcl
push
dec
ds
addb
cltd
bound
test
mov
addr16
mov
pop
in
add
daa
inc
fidivs
cs
mov
adc
out
daa
gs
adc
mov
fbld
pop
ret
in
lea
push
lcall
add
test
movsl
jns
cmpb
cwtl
jmp
clc
int
pop
test
cmpsb
sub
fisttpl
xchg
xchg
jecxz
scas
mov
pusha
fcomp
test
sub
mov
aaa
add
dec
das
xor
jae
popa
mov
push
shr
add
push
sbb
xchg
xor
outsb
inc
add
cmpsl
ret
jle
xor
leave
fcoms
fisubs
dec
sub
cmp
pop
addr16
ja
xor
cmp
mov
jmp
xchg
xlat
mov
aam
jnp
stos
cwtl
xchg
push
push
sbb
clc
push
call
rclb
cmpsb
adc
pop
lahf
cli
cld
jle
fnstenv
sbb
mov
xor
adc
xchg
mov
cmp
andb
mov
sub
pop
rorl
jle
loope
add
dec
imul
mov
pop
cmpsb
xchg
pop
lret
xor
push
imul
popf
scas
push
fcoml
xchg
xorl
sbb
mov
jmp
xchg
sbb
xchg
test
outsl
inc
sbb
adc
mov
xchg
addr16
fcomps
sub
cmc
fcmovbe
arpl
add
inc
sub
movsl
and
sbb
adc
push
lahf
or
stos
jno
xor
cmp
mov
ds
add
sub
xchg
inc
jge
mov
fcoms
cmpsb
loopne
mov
xchg
outsl
push
pop
and
mov
daa
inc
sahf
or
fcomip
jl
push
mov
daa
mov
sub
pop
push
dec
jns
jge
fnstsw
std
dec
fwait
xor
lcall
sti
inc
xchg
mov
sub
js
jp
mov
push
jae
pop
or
and
daa
mov
fstl
inc
loop
fsubs
xor
rcl
mov
loop
add
cmpsb
and
orb
pop
mov
out
xchg
imul
jp
orl
xchg
push
cli
pop
sub
loope
jge
sbb
fstp
aad
lods
mov
mov
add
sub
dec
insb
jo
hlt
add
xchg
lods
lock
lods
push
cmpsb
and
mov
or
in
inc
stos
aad
mov
pmaxsw
out
pop
xor
fisubrs
or
nop
adc
xor
sub
in
xchg
jno
mov
push
inc
cmp
lock
clc
xchg
mov
cmp
int3
sarb
mov
xchg
mov
icebp
icebp
and
mov
pop
mov
pop
cmp
rolb
dec
add
pop
push
test
mov
push
mov
adc
int
lret
imul
fisubrl
or
mov
push
addr16
pop
loop
js
fcomps
cltd
cld
icebp
lret
and
push
hlt
fwait
jmp
repz
pop
add
es
ficoms
call
int
movsl
sbb
fldcw
xchg
mov
out
sbb
or
jg
lods
xor
rcrl
jge
loope
and
shr
push
mov
pop
lds
icebp
pop
movlhps
jmp
ret
dec
aad
cltd
enter
jmp
or
jns
mov
ds
aas
cwtl
mov
bound
das
jecxz
shl
addr16
sbb
iret
push
sbb
js
push
mov
shlb
push
mov
sbb
daa
sub
sbb
fldl
shlb
fisubrs
insl
pop
ds
outsb
cmpsb
pop
loopne
scas
xlat
cmp
pop
pop
add
push
mov
mov
rcll
adc
movsl
mov
sbb
iret
mov
dec
push
inc
orb
loop
imul
jnp
enter
add
adc
push
mov
pop
and
or
ljmp
jg
jae
xchg
imul
fnstcw
mov
push
test
insb
repz
js
fsubl
data16
mov
sub
jmp
mov
sub
dec
adc
or
dec
int
je
insb
cmp
sub
sbb
rolb
data16
out
gs
rorb
and
and
adc
fdivrs
pop
push
arpl
out
jo
jg
iret
loope
ja
xor
repnz
jb
xchg
pop
daa
in
cmp
divl
mov
xchg
into
jb
pop
lret
fwait
arpl
jne
add
in
pop
push
jo
std
comiss
push
inc
pop
lods
cmp
mov
lods
jns
aas
fnsave
orb
int3
sbb
dec
push
add
aam
mov
int
pop
popf
sbb
loope
mov
and
dec
sarl
jnp
mov
push
das
popf
js
push
cmp
iret
push
fbstp
xchg
out
jecxz
xor
or
cltd
aas
call
push
xor
clc
arpl
lcall
in
pop
icebp
shll
mov
std
pop
outsb
xchg
mov
cwtl
add
jns
push
pop
icebp
inc
inc
and
notl
aas
popf
ror
mov
mov
jle
pusha
xor
out
cmp
sbb
add
adc
mov
xlat
lret
jae
iret
daa
fists
mov
mov
push
sub
mov
dec
mov
negb
or
in
bound
mov
in
das
or
enter
inc
adc
jno
scas
mov
imul
cmpsb
sbb
xchg
adcl
inc
ret
pop
inc
mov
mov
mov
fiaddl
xor
push
fidivrs
scas
push
add
xor
aam
testb
pop
inc
push
in
adc
add
cmpsb
fists
insl
push
fcoms
fnstenv
sbb
push
mov
xor
cmp
cmpsl
adc
xchg
push
and
ja
mov
addr16
adc
aam
cli
jno
push
andl
push
xchg
shlb
neg
hlt
add
scas
cmp
fistl
mov
mov
andl
mov
sub
add
or
pop
mov
add
loopne
pop
stos
loopne
inc
repz
daa
push
xor
push
test
xchg
nop
push
mov
fwait
mov
loopne
sbb
add
negb
daa
imul
xorl
cmp
mov
sub
iret
icebp
dec
adc
fs
pop
in
adc
les
das
xor
inc
dec
dec
cmp
xor
aam
adc
inc
mov
cs
stos
inc
rorl
push
adc
rol
jae
xchg
cmp
movsb
out
mov
lds
mov
inc
cmp
nop
repz
nopl
push
push
stos
dec
add
rorl
bnd
push
mov
mov
pop
push
pop
data16
out
mul
xchg
nop
loopne
in
mov
cltd
push
scas
mov
ds
xchg
icebp
push
dec
lret
in
inc
test
int3
sbb
xchg
cltd
insl
cmp
push
dec
push
call
movsb
sbb
and
int3
adc
ret
mov
cld
das
and
loop
mov
cmp
or
lret
pop
insb
cmp
jge
xchg
adc
sbb
cmp
pop
bound
xchg
xor
scas
sahf
imul
cmpsl
test
jbe
lods
xor
mov
sbb
sbb
pop
das
or
into
push
insl
jae
scas
into
mov
popa
test
cld
xchg
test
jge
das
fwait
push
shll
jmp
sbb
gs
jns
leave
outsl
outsl
stos
xchg
lret
int
pushf
sbb
jecxz
test
sub
stos
leave
pop
aad
leave
insl
fcomps
clc
pop
sbb
mov
aam
enter
test
es
sbbb
into
pop
or
jae
mov
clc
popf
ljmp
aad
sbb
cltd
lcall
das
inc
scas
push
push
xor
add
inc
xchg
ja
pop
cs
sbb
add
and
ret
push
inc
enter
push
popf
addr16
es
orl
cli
icebp
scas
decl
dec
cmp
xchg
das
jmp
fistl
add
mov
mov
jo
jns
push
outsb
inc
fsub
add
jl
fcomip
push
repz
test
imul
in
jo
xchg
xor
out
jnp
lcall
inc
and
push
xor
lret
adc
arpl
adc
push
push
xchg
mov
je
sbb
mov
hlt
push
inc
cmp
jne
mov
jle
sbb
pushl
scas
and
jle
cmpl
sbb
xrelease
push
push
lret
dec
movsl
lds
xor
mov
mov
adc
jecxz
mov
fsub
dec
cwtl
xchg
in
inc
fadds
pusha
mov
repz
pop
mov
inc
jmp
cmpsb
mov
or
dec
mov
mov
out
cwtl
sub
dec
push
inc
fisubs
imul
cmp
fs
cld
mov
insl
pop
cmp
mov
sub
les
outsb
test
xchg
lods
enter
xorb
ja
mov
fs
fnstcw
test
testl
xor
dec
inc
pushf
sti
loope
mov
shr
test
cmp
mov
test
fstpt
mov
sahf
mov
mov
cmc
cld
pop
cs
push
mov
adc
loope
int
bound
pop
and
or
call
roll
jmp
iret
lds
and
popf
repnz
iret
divl
dec
sbb
mov
lds
popf
ss
addl
scas
fsts
jge
mov
sbb
sbb
out
out
jne
mov
test
sbb
dec
test
jbe
jnp
cltd
rcr
mov
or
shrl
fsts
jne
jecxz
rorl
and
lods
sbb
cmpsb
dec
mov
sbb
popa
inc
or
and
lret
inc
xchg
sbb
xchg
sub
in
sahf
cmp
dec
iret
xchg
cmp
test
ds
arpl
cwtl
mov
cmp
ds
dec
dec
mov
mov
push
imul
or
dec
mov
call
mov
mull
add
and
dec
xorl
mov
outsb
aad
rcrl
rcr
incl
inc
pusha
adc
loop
jmp
int3
pop
add
stos
inc
or
cmp
ss
sub
aad
pop
inc
cmp
fstpt
testb
jb
aas
push
mov
dec
push
add
xchg
mov
dec
sub
rorb
xchg
jne
in
mov
imul
adc
out
fcmovu
inc
rorl
cmovnp
scas
mov
movsl
push
push
fisttpl
lods
sbb
push
jge
or
push
lods
int
mov
sbb
test
xchg
and
jle
mov
aad
in
push
ds
subb
pushf
push
mov
push
pop
pusha
in
popl
imul
aaa
dec
cld
aad
popl
sub
jne
sbb
popl
inc
sbb
enter
jecxz
xchg
fscale
lods
or
push
cmp
dec
pushf
stc
ret
fstpl
and
pop
jle
sbb
mov
das
cmp
ret
cmp
stos
icebp
push
or
out
out
jl
pop
push
and
inc
les
stos
pop
and
sub
cmp
lds
mov
xchg
mov
inc
mov
lods
push
mov
roll
cmp
nop
test
data16
jbe
pusha
xchg
ret
push
ljmp
stos
mov
arpl
dec
cltd
mov
mov
add
xchg
jnp
cmp
in
adc
xlat
loope
sub
and
test
mov
and
mov
jecxz
popa
repz
jle
xchg
loope
test
cmc
mov
mov
mov
addr16
xchg
sar
pop
pop
repnz
orb
lahf
pop
and
lods
loop
pusha
push
scas
in
outsl
mov
pusha
push
daa
decb
movq
outsl
xchg
xor
sbbl
push
in
les
outsb
or
mov
fisttpl
pusha
das
loopne
sbb
push
test
rolb
mov
push
inc
subb
bound
ds
push
ss
jl
sub
add
out
cmp
mov
inc
aam
mov
jmp
cltd
jns
mov
out
and
pop
xchg
test
insb
pop
lea
mov
and
jp
xor
jle
ret
cld
movsl
fiadds
sbb
adc
inc
pushf
roll
fs
and
or
fmul
rcl
call
push
mov
pop
sti
pop
fsubs
scas
lret
mov
push
sub
and
daa
bound
mov
lcall
movsl
push
in
mov
mov
xchg
ds
xchg
aam
test
sub
mov
xchg
addr16
jno
mov
jmp
add
sahf
scas
int3
mov
mov
aam
out
sahf
adc
cmc
daa
mov
test
stos
das
leave
ja
in
mov
loope
mov
ficoms
xchg
xor
add
clc
and
dec
xchg
movsl
ficoms
sbbl
pop
xor
hlt
adc
scas
iret
fstps
in
xchg
fldl
inc
ds
push
roll
outsb
mov
stos
push
pop
add
pop
cmp
and
nop
add
rclb
inc
into
jg
and
mov
and
out
dec
mov
out
jmp
or
sub
adc
xchg
into
arpl
dec
enter
arpl
dec
test
or
adc
out
stos
lods
and
xor
sbb
or
jnp
clc
insb
dec
loop
mov
imul
aaa
es
ss
push
dec
icebp
decb
pop
push
das
push
inc
gs
dec
sbb
inc
mov
cli
call
mov
inc
cmpsb
leave
sahf
inc
jmp
fsubl
jne
ds
icebp
cwtl
jbe
sub
mov
or
mov
pop
mov
mov
xor
mov
cmovs
mov
icebp
bound
mov
in
sub
std
aas
dec
mov
movsl
lods
in
xchg
add
xor
xor
test
dec
mov
cmp
ret
mov
dec
ja
jnp
test
add
pop
xchg
addr16
int3
rcrl
sbb
mov
scas
cmp
rcrl
aas
stos
and
imul
jne
sarb
pop
push
shr
mov
lcall
in
in
dec
out
cmp
lcall
mov
lahf
add
in
ja
push
xor
in
inc
push
insl
fs
or
je
jo
sbb
pop
xor
repz
mov
mov
ficomps
jecxz
mov
and
outsb
in
ficompl
and
std
or
daa
lret
xor
daa
add
repnz
clc
repnz
push
xlat
notb
pushf
popf
jmp
jbe
and
sti
sbb
in
cltd
sahf
lock
push
xchg
test
adc
orb
arpl
or
call
jmp
sbb
xchg
jg
ficoml
push
lods
aaa
les
jmp
loopne
sbb
shr
data16
out
jns
fstpl
xlat
cmp
sub
fs
mov
pop
pop
pop
ss
add
stos
into
and
jno
gs
into
clc
add
sbb
imul
popa
in
js
xor
movsb
repz
ret
bound
mov
mov
sbb
mov
inc
jo
pop
jge
in
popf
arpl
inc
adc
adc
sti
inc
pop
lods
or
or
sbb
repnz
mov
cltd
push
mov
jp
and
lret
loope
jp
roll
and
jle
lcall
add
mov
mov
pop
cmp
xorb
movsl
inc
xchg
mov
add
cltd
in
dec
or
repz
xchg
inc
sub
adc
inc
pop
lock
dec
in
mov
test
jmp
je
mov
es
adc
ret
mov
mov
sar
call
mov
mov
jmp
xchg
sti
out
push
rclb
cmc
hlt
xchg
xor
cmpsb
push
jecxz
jne
dec
push
or
push
add
cmp
sub
cmp
add
add
jge
aad
enter
es
mov
and
mov
fidivrl
pop
mov
addr16
cmp
leave
cwtl
sti
test
push
sbb
jae
inc
inc
xchg
jo
cmp
pushf
xchg
movsl
mov
push
mov
mov
xchg
test
push
push
scas
xchg
cmpsb
enter
jecxz
and
das
and
fsubrl
sbb
pop
je
sbb
testl
fprem
subb
mov
scas
sarb
mov
xchg
test
das
jb
mov
inc
mov
or
sbb
gs
addr16
sbbb
jle
inc
jecxz
shrb
dec
mov
in
jo
call
push
adc
or
test
aad
stos
pop
push
add
inc
lods
xchg
ja
cmpsb
leave
es
xor
adcb
clc
inc
xchg
mov
push
mov
cmp
popf
aad
pop
mov
inc
sbb
sahf
out
popa
jns
or
push
xor
arpl
shrb
lods
inc
roll
mov
mov
xor
mov
adc
in
test
xchg
sbb
xchg
repz
fisttpl
dec
into
or
push
mov
or
fmuls
sti
cmc
out
lahf
cmp
das
pop
lea
sub
fstpt
pop
push
jno
sbb
popf
repz
dec
add
loop
addr16
push
mov
xchg
and
jmp
sbb
fs
je
mov
outsl
lret
bound
mov
add
jb
or
mov
inc
xchg
popa
fldenv
repz
mov
push
xor
inc
sub
mov
movsl
aam
stos
stos
xchg
xor
out
xchg
mov
jo
clc
scas
repz
js
pop
add
jg
ret
or
std
sbb
jp
aas
sbb
test
xchg
in
sti
lods
cs
inc
sti
inc
mov
sahf
mov
dec
cmp
lea
mov
call
dec
jle
xchg
xor
push
pop
pop
xchg
imul
mov
inc
mov
dec
jp
inc
sbb
shl
loop
lret
ss
stc
fdivl
xchg
cli
in
test
inc
test
sahf
push
cs
pop
mov
mov
lock
add
enter
in
inc
jno
sbbb
fisttpl
inc
push
lods
xor
jp
das
push
push
mov
sti
test
inc
shr
adc
loopne
sbb
leave
sub
adc
adc
mov
cli
les
jae
push
aad
das
jecxz
loop
push
sbb
or
mov
call
incb
pop
mov
add
jns
cmc
clc
sahf
mov
stos
add
mov
sub
out
icebp
or
int
xchg
orl
leave
ret
mov
xor
sub
mov
sbb
sub
pop
stos
in
or
mov
outsb
cmp
mov
mov
notl
ficomps
mov
mov
jno
out
adc
mov
je
xchg
sarb
adc
mov
lahf
mov
in
repz
mov
ja
popa
gs
pop
and
add
test
sub
add
repnz
jne
popa
mov
std
sbb
lea
les
cmp
lods
and
leave
dec
sub
jo
inc
push
mov
mov
iretw
inc
dec
adc
mov
loope
into
inc
and
lock
or
in
add
add
pop
leave
outsl
inc
pop
xchg
mov
sub
inc
pushf
loopne
mov
aam
cmp
add
fidivrs
mov
mov
push
pushf
or
mov
inc
xor
xchg
and
push
clc
scas
mov
je
js
inc
out
cmp
js
adc
mov
fstps
dec
sbb
iret
rcrb
ja
je
negb
mov
mov
jnp
cmp
lahf
mov
aam
fdivs
sbb
cmc
fiaddl
jbe
cmp
int
pop
pusha
adc
xor
push
mov
jge
out
mov
ret
jno
fbstp
mov
xor
sub
push
or
mov
fwait
insl
hlt
xchg
pop
imul
pop
mov
sbb
or
push
jg
cmpsb
arpl
fmull
mov
gs
jge
sti
out
jl
daa
cmpsb
sbb
imul
test
mov
mov
loop
sub
adc
or
repnz
rclb
mov
repz
xor
mov
clc
lds
pop
jg
inc
fcmove
fsubrl
jge
xorb
icebp
sub
cmpsb
jle
or
jbe
adc
call
push
leave
shrl
cmpsb
movsb
outsl
je
cmpl
mov
inc
xor
and
das
jge
xchg
cltd
dec
add
out
andb
jl
in
daa
pop
inc
push
shlb
movsb
cmpb
les
push
pop
scas
in
xor
pop
shr
in
cmp
sahf
jg
cli
jg
out
scas
cmp
ljmp
cmp
icebp
dec
push
or
inc
mov
mov
outsl
movsl
lcall
frstor
aas
jne
std
or
stos
xor
pop
dec
mov
dec
sbb
ss
jecxz
inc
dec
int
mov
into
test
sti
inc
mov
arpl
sub
push
jle
add
or
imul
stos
xchg
iret
test
imul
cli
or
add
lahf
sub
iret
icebp
mov
mov
pushf
pop
or
mov
add
repz
mov
xor
cltd
xor
mov
xor
stos
leave
insl
jmp
dec
adc
pushf
outsl
ja
jle
push
icebp
leave
mov
jp
divb
xlat
out
xchg
popa
and
outsb
inc
rclb
inc
imul
dec
push
in
sbb
lock
scas
xor
lods
stc
mov
dec
push
aam
push
dec
jge
outsl
push
pop
test
imul
xchg
sar
aad
pop
adc
cwtl
test
pop
sub
adc
in
ljmp
dec
out
adc
daa
fisubs
inc
push
lods
popf
scas
mov
ret
xchg
stos
add
addr16
cmp
push
inc
or
inc
int
cmp
in
xchg
jo
mov
call
arpl
or
icebp
mov
jb
mov
rcll
stc
sub
inc
jp
daa
inc
das
mov
hlt
add
jl
xor
loop
out
mov
fisttpll
push
push
jo
jp
iret
loope
mov
bound
ja
dec
cmpsl
jns
fs
orb
adc
enter
xor
or
lcall
xchg
fwait
dec
mov
out
sbb
loop
mov
pop
popf
popa
push
loopne
sbb
mov
imul
and
push
enter
arpl
or
xchg
into
je
sbb
xchg
push
clc
out
mov
arpl
or
pushf
es
in
lods
mov
mov
mov
lods
push
into
lcall
add
aas
test
aam
xchg
push
mov
dec
aam
and
jl
jmp
sti
mov
into
dec
iret
mov
or
pusha
lea
pop
inc
cld
mov
js
push
jns
aaa
outsb
xlat
xor
popf
sub
mov
je
mov
jb
sub
add
pushl
sub
fs
mov
sub
pop
fiaddl
mov
fildl
cli
sbb
leave
std
push
and
push
cmp
pop
nop
pop
dec
or
push
bound
sub
lret
mov
jl
je
fs
or
xlat
mov
sub
sarl
jb
insb
cs
je
jae
inc
jbe
pop
push
mov
jne
das
fwait
and
subl
pop
cltd
clc
or
push
push
push
mov
stos
xchg
adc
fdiv
push
mov
rorl
rclb
pop
push
popf
fwait
sbb
and
in
pop
in
in
jo
popf
inc
mov
sbb
cmp
jmp
fldenv
mov
mov
jae
sti
inc
hlt
jg
pop
fldenv
movsb
arpl
push
and
adc
sbb
add
rcl
fs
adc
sarl
push
adcb
addl
add
push
subb
enter
lds
inc
xor
aaa
es
cmp
jns
idivl
push
fdivrl
dec
jbe
xchg
inc
mov
inc
popa
sti
ss
mov
cmp
loop
mov
push
cwtl
cmpl
pop
cmc
das
sahf
mov
push
sbb
inc
leave
aaa
test
fwait
jecxz
inc
decb
test
mov
push
or
xor
push
mov
movsb
iret
cltd
enter
mov
push
sub
ja
int3
xor
mov
push
pop
ljmp
xchg
lods
mov
test
sub
inc
jg
sub
jo
jb
sub
subb
loopne
adc
add
out
leave
js
adc
sbbl
and
dec
fmuls
out
cmc
xlat
rorb
out
push
lret
xchg
andl
mov
inc
xor
pusha
aad
sbb
xchg
sub
rorb
sbb
inc
mov
mov
inc
pop
jb
jnp
cmpsl
mov
or
cmpsl
dec
xchg
mov
jae
cs
popa
inc
and
jecxz
loop
sahf
fiadds
jne
dec
mov
xchg
push
daa
push
xchg
stos
fmulp
lods
cltd
lcall
std
dec
roll
xor
pop
stc
test
paddw
lahf
adc
scas
fimuls
into
test
sub
es
sub
pop
dec
cs
imul
mov
sbb
iret
stos
push
mov
into
pop
les
sahf
fdivrp
xchg
push
and
movsb
fdivrl
fisttps
out
add
insl
inc
fisubrl
and
lret
mov
mov
stc
jno
mov
add
aas
pop
and
push
cwtl
dec
jbe
sbb
pop
ljmp
or
in
lds
fisttpl
popf
push
mov
fsubrl
in
pop
fwait
sahf
nop
stc
fldt
cmp
sbb
adc
mov
and
xchg
pop
cmp
test
mov
sbb
nop
push
dec
and
or
mov
test
loop
sub
dec
out
fld
int
cmpsl
xor
out
or
fcmovbe
push
jmp
outsl
lret
fmuls
sahf
test
lods
xor
adc
add
repz
push
jns,pn
out
lock
jge
arpl
hlt
cmp
fst
mov
nop
iret
stos
outsb
jg
push
into
jp
jns
lahf
imul
dec
inc
mov
movsb
adc
cs
aad
enter
addr16
jg
pop
push
iret
mov
popf
mov
clc
scas
imul
fmuls
mov
pop
aas
enter
pop
daa
std
test
aas
pop
jle
lea
dec
jl
out
mov
bound
cwtl
pusha
jle
gs
or
out
inc
inc
pop
add
out
adc
adc
fadd
adc
xor
mov
lock
jae
pusha
pop
nop
lret
xor
imul
int
loope
mov
xchg
or
sub
push
xchg
rclb
and
push
mov
ffreep
push
and
push
stos
fsts
and
clc
and
sti
mov
or
mov
pop
jle
repnz
jle
or
push
dec
add
loopne
or
out
and
incl
mov
sub
mov
pop
repnz
pop
cmp
ljmp
jbe
sub
ja
mov
lret
xor
sub
or
push
inc
pop
xlat
sbb
ljmp
xchg
mov
std
leave
stos
pop
popf
push
stc
jge
mov
cmp
sbb
xor
adc
and
sahf
lret
mov
fwait
and
sub
fldcw
dec
mov
cmpsb
cmp
repnz
aaa
int
leave
in
out
fcomi
mov
aam
int
lock
xor
ss
xor
test
lock
sub
adc
test
jb
cli
gs
mov
lret
movsb
arpl
push
rcrl
fstl
jecxz
rorl
adc
cmp
push
cli
arpl
pop
push
cmp
xorb
inc
pop
inc
or
pop
dec
in
lret
nop
out
scas
mov
sbb
loop
pop
in
sahf
cmp
or
jl
lret
nop
lret
cmpsl
jno
ret
cmp
jne
or
stc
mov
rcrl
sbb
jae
leave
fistpl
out
movb
insl
dec
mov
test
imul
popf
pop
cmpsl
iret
push
subb
push
or
mov
out
lretw
lea
mov
cmp
out
mov
mov
jbe
xchg
pop
cmp
arpl
in
sbb
shrl
int3
dec
sbb
scas
into
ret
xchg
hlt
movsl
add
loopne
ljmp
and
imul
in
dec
in
ja
lret
cmp
cmc
mov
clc
jnp
xor
push
sbb
test
push
scas
repnz
push
pop
out
call
inc
mov
enter
les
scas
hlt
ret
call
sbb
mov
pop
jp
dec
rcrb
mov
or
test
lods
mov
dec
fdivrs
test
mov
push
or
lret
and
mov
xor
and
add
sbb
stc
pop
movsb
xchg
lcall
fsts
push
bound
iret
addl
in
popf
jecxz
mov
sbb
dec
sbb
mov
and
cs
xchg
mov
pop
movsb
js
popf
imul
rcl
decl
je
bound
push
jmp
push
bnd
test
add
push
mov
xor
add
mov
mov
add
mov
cmp
add
call
out
cmpsb
int
push
int3
icebp
jb
jns
dec
jmp
dec
xchg
sub
jbe
fisubrs
shl
pop
daa
xchg
dec
mov
dec
mov
jno
mov
dec
and
add
out
add
lods
fldenv
jae
out
daa
rorl
aad
dec
jecxz
add
loop
mov
push
dec
jb
shrb
xchg
sub
xchg
adc
frstor
sti
jae
jp
js
rclb
stos
mov
in
in
cld
or
jnp
idivb
xor
push
inc
jno
mulb
push
jo
mov
xchg
imul
aas
loope
xor
push
jle
push
push
adc
jae
or
push
fs
pop
std
jno
repz
inc
xor
mov
jg
call
in
popf
out
xchg
mov
pop
neg
mov
andb
or
mov
mov
mov
and
jle
fisubrs
mov
pop
mov
jge
mov
outsl
ss
add
das
xor
std
jle
and
gs
or
dec
pusha
out
cmc
cmp
stc
arpl
jae
aaa
dec
es
fcomps
mov
pop
in
inc
add
aam
pop
push
vmwrite
sub
cmp
inc
pushf
into
enter
or
dec
cmpsb
dec
cmpb
pop
scas
mov
aad
sub
dec
jne
lods
lret
xlat
stos
pop
repnz
ja
xor
rorb
in
shl
sub
sbb
pop
push
mov
push
cmp
sbb
popa
lods
mov
ljmp
cwtl
jb
push
adc
shlb
shl
mov
mov
lods
sub
fcmovnbe
repz
xchg
mov
loopne
lods
sub
repnz
xor
mov
lret
popa
imul
mov
test
test
dec
cs
jl
int
xchg
clc
push
xchg
out
div
jnp
mov
sub
and
ljmp
mov
dec
or
repz
pop
rol
fwait
and
in
jp
leave
lods
dec
sub
ja
pushf
or
dec
mov
stos
stc
jp
int
repz
cmp
sbb
mov
mulb
fwait
adc
xchg
cmp
test
outsl
enter
dec
pop
sahf
dec
pop
adc
dec
cld
push
sbb
bound
int
insb
jmp
inc
mov
adc
push
leave
xor
or
arpl
fcomps
or
push
ficompl
mov
jecxz
and
mov
popa
adc
jbe
xchg
adcl
mov
int3
divl
add
add
fistpll
lret
sbb
rcrb
inc
in
sub
push
adc
ffree
sbb
pop
lods
inc
cmp
nop
bound
jp
ret
and
dec
insb
aaa
stos
scas
ds
cld
dec
pushf
mov
in
push
xchg
int
shrb
shll
push
ficoml
call
arpl
and
or
lods
sub
outsb
shrb
popl
repnz
insb
cmp
xchg
int3
shrl
sub
sbb
fildl
push
add
loope
mov
icebp
mulb
inc
xchg
xchg
pop
cwtl
ror
sahf
jmp
xchg
cwtl
test
popf
mov
out
sbb
sbb
iret
push
into
inc
and
mov
shll
loope
pop
mov
stos
incb
push
and
xchg
dec
fld
cmp
sub
mov
push
pop
sbb
call
xchg
adc
xor
inc
cmp
imul
push
and
mov
imul
rcrb
leave
fistpl
and
and
enter
jne
into
pusha
mov
dec
add
aas
repz
xchg
scas
mov
sti
adc
mov
cmpsb
ss
ret
add
dec
add
xor
push
ja
inc
jne
fucomi
jmp
xor
mov
clc
test
fdivr
xchg
jge
mov
mov
mov
push
ret
mov
mov
sbb
push
cmp
push
and
sub
sub
rolb
dec
xchg
xchg
fisttpll
testl
or
inc
int
sbb
xlat
in
sahf
sub
pop
pop
sti
jecxz
sbb
pop
outsb
push
inc
aas
shlb
lods
loop
test
mov
pop
mov
push
stc
push
sub
xchg
add
pop
dec
stc
fists
pop
shrl
fucomip
adcl
add
repnz
cs
dec
xor
hlt
sti
lret
test
daa
sbb
pop
or
inc
cmp
fldcw
xchg
shrl
aas
inc
rcrb
sbb
std
data16
repz
mov
incb
test
push
int3
lret
stos
sbb
je
jle
aaa
inc
jl
sub
mov
or
or
fdivrs
lcall
and
xor
cwtl
insb
clc
adc
mov
jb
in
insb
sahf
xchg
xchg
shl
out
cmp
sbb
xchg
in
mov
push
sub
call
in
sbb
mov
pop
sbb
push
or
loopne
das
movsb
in
dec
mov
inc
jbe
xor
inc
roll
je
sub
loope
mov
jns
and
scas
insb
orl
xlat
sub
movsb
mov
je
mov
rol
sub
ret
dec
bound
xchg
stc
dec
adc
mov
mov
test
sub
movsl
and
cmp
popf
pop
fists
jo
mov
hlt
out
vmread
push
pop
int3
xchg
xor
pusha
mov
jmp
dec
or
loop
inc
outsb
cmp
stos
lods
in
gs
mov
in
cmpsl
test
test
out
mov
je
push
in
int
fs
mov
sbb
dec
leave
mov
gs
adc
mov
mov
jne
sti
insl
push
add
movsl
cli
pop
mov
sub
dec
fdivl
xchg
or
xor
mov
mov
sahf
rol
mov
pop
pushf
inc
pop
icebp
adc
nop
test
add
sbbl
sbb
repnz
int
jae
sbb
imul
adc
and
sub
rcr
inc
push
adc
lods
hlt
fisubl
cmp
mov
push
imul
and
mov
sahf
jecxz
mov
popf
mov
inc
lea
sarl
push
push
aaa
out
xchg
in
scas
sahf
dec
in
add
insl
dec
pop
mov
shl
jl
arpl
xchg
mov
insb
xchg
outsb
mov
xchg
shrl
inc
ja
add
shlb
sub
arpl
fwait
jae
loope
sbb
xchg
test
push
test
xchg
ror
pop
push
pop
fdivrs
cs
mov
mov
sti
jl
addr16
fistpll
popa
push
dec
mov
or
data16
mov
das
scas
or
je
sbb
lea
and
jo
shll
test
mov
rcrl
arpl
adc
aad
push
arpl
jle
pop
push
mov
or
lret
lock
in
movsb
pop
repz
mov
ds
xchg
lds
test
jnp
loop
and
sub
push
adc
ds
cltd
sahf
push
shll
pmullw
pop
ret
fldenv
cmp
imul
ret
repz
popf
pop
xchg
push
pushf
xchg
mov
sub
pop
sbb
fsts
and
jecxz
jbe
fcoml
loope
mov
mov
cld
adc
or
out
out
mov
jne
testb
mov
dec
je
push
mov
clc
shrb
sub
dec
xchg
sbb
pop
insl
js
mov
cmp
sub
cli
jbe
imul
push
cmp
sub
mov
mov
xchg
lahf
adc
sarl
jns
insl
fwait
or
aas
aam
xchg
test
pop
sbb
std
nop
inc
scas
mov
mov
mov
xchg
punpckhbw
js
test
cmp
push
sub
popa
adc
pop
jmp
and
insb
dec
pop
cmp
jo
pop
add
das
movsl
int
lds
sub
int3
lea
xchg
mov
adc
mov
add
lahf
loope
mov
rcl
sub
out
xchg
push
xchg
fld
xchg
push
rcrl
lods
xchg
mov
push
or
subl
insl
xchg
shlb
ret
rolb
adc
pop
adc
aas
jb
out
push
add
xorl
mov
mov
into
cmp
loopne
gs
imul
pop
shl
cmp
cmp
ja
mov
out
cmpsb
pop
sbb
jbe
fistps
xor
adc
lods
fucomp
pop
mov
loopne
mov
sahf
loope
icebp
push
adc
pop
ror
push
xchg
stos
ljmp
idivb
popf
insl
sahf
xchg
xor
jg
rcll
fwait
fwait
loope
jno
loope
dec
clc
pop
dec
sti
dec
unpcklps
xor
ds
js
pusha
mov
ds
jbe
in
mov
aaa
mov
xor
pop
popa
imul
xor
add
xor
jecxz
cld
test
pop
pop
sub
push
ret
int3
incl
inc
pop
mov
adc
clc
push
aaa
jnp
lret
fcmovbe
lods
daa
andl
dec
inc
cmp
aaa
push
or
and
sub
cmp
xchg
inc
cmc
lret
stos
shl
mov
and
push
call
push
inc
test
movsl
lds
arpl
movsl
stc
inc
inc
xor
sub
sahf
push
sbb
ficomps
push
inc
add
mov
push
add
mov
dec
mov
in
lods
aas
imul
xchg
mov
insb
enter
mov
ret
into
rorb
dec
pop
faddl
mov
fcoml
adc
out
pop
lods
add
aam
xchg
insb
sbb
jg
movsb
call
add
jb
divl
icebp
mov
cmpsl
xor
dec
inc
inc
std
cmp
adc
xchg
lahf
cmp
movsl
ret
xorl
cs
inc
xchg
add
rcrl
sub
icebp
inc
cmpsb
call
adc
loope
add
icebp
adc
inc
xchg
loope
push
negl
divl
cli
jge
xchg
dec
mov
push
pushf
pop
sti
xchg
xchg
pop
negb
data16
xor
mov
mov
push
mov
or
and
clc
scas
push
inc
les
jnp
roll
or
icebp
mov
jp
or
int3
pushf
jecxz
rcr
in
mov
mov
fsubs
fs
dec
adc
mov
xor
mov
popf
sub
xchg
cmp
pop
adc
xchg
outsb
mov
mov
pop
insl
in
sbb
cmp
jne
movsl
add
das
xchg
stc
cli
xorb
mov
aad
mov
out
pop
test
mov
stos
add
int3
jmp
sbb
insl
fnstenv
cltd
mov
add
dec
and
xchg
xchg
ret
jmp
pushl
mov
call
je
jns
sahf
dec
dec
stc
adc
inc
mov
sbb
adc
push
mov
loopne
add
lds
mov
lcall
in
mulb
mov
pop
arpl
mov
push
jecxz
je
or
mov
jge
ljmp
xchg
mov
mov
test
or
in
fbstp
rolb
inc
js
mov
lcall
jg
xor
out
aas
push
rclb
movsl
js
les
repz
sbb
lea
std
movsl
adc
mov
add
jl
scas
sub
mul
mov
sti
cmpsl
and
popa
icebp
xchg
pushf
clc
inc
iret
in
dec
push
dec
ds
insb
aam
xchg
mov
xlat
xchg
fcmovb
cmp
mov
inc
cmpsl
pop
xchg
mov
or
aaa
outsb
sbb
dec
pop
cmp
mov
daa
pop
adc
xchg
push
or
movl
or
test
mov
jbe
inc
cwtl
pop
gs
dec
sahf
out
lret
sub
mov
mov
inc
rorb
jp
inc
xchg
push
rcrb
sarl
and
jg
dec
and
cmp
push
dec
dec
fsubrp
gs
je
xchg
dec
fisttps
push
inc
push
and
mov
jecxz
jae
add
push
das
dec
xor
jo
call
lahf
mov
and
stos
xorl
dec
jnp
dec
in
ljmp
bound
xchg
inc
jno
jmp
ja
pop
mov
mov
inc
push
pop
jge
mov
jnp
and
leave
mov
mov
popf
and
je
add
inc
mov
inc
xchg
out
lods
cmp
and
or
inc
push
in
add
mov
inc
int3
clc
cmp
es
xchg
push
adc
cmp
insl
mov
xor
faddl
fidivs
insl
fld
adc
or
scas
repnz
lods
out
push
outsl
inc
sbb
dec
adcl
sub
lods
jo
pop
lock
push
cmp
js
iret
cmpsl
xchg
addr16
inc
scas
dec
pop
and
mov
aaa
add
xchg
inc
xor
xchg
vfnmsub231ss
mov
add
mov
andl
add
sti
sahf
xchg
shll
mov
aas
pop
pop
mov
push
loope
repz
adc
dec
mov
lods
fcompl
inc
cmpsb
fisubl
push
mov
push
cs
lea
and
mov
xor
mov
or
sub
inc
mov
dec
icebp
cltd
mov
daa
sub
pushf
fimuls
mov
push
mov
mov
lods
daa
mov
sbb
aaa
lcall
mov
sbb
shll
xchg
mov
cmc
rol
jnp
cmpsb
adc
ljmp
mov
or
xor
ja
bound
adcl
lcall
loopne
pop
adc
aam
lahf
cld
dec
mov
orl
adc
mov
leave
lret
je
dec
std
jge
cmp
dec
mov
jbe
outsb
mov
jle
inc
icebp
pushf
pop
add
mov
dec
into
pop
and
imul
adc
lods
jns
iret
stos
cs
icebp
arpl
inc
jbe
jnp
in
fbstp
inc
mov
das
mov
out
fsubrl
dec
mov
mov
jbe
in
pop
lds
ret
inc
push
sbb
imul
out
lahf
rcrl
loop
rolb
xchg
xchg
popa
add
mov
push
fistpl
call
insb
stc
cld
sbb
add
dec
out
mov
dec
cmpsb
jbe
or
push
fisubl
aaa
ret
adc
xlat
hlt
sbb
dec
xor
lret
movsl
stos
cwtl
push
shrl
mov
rorb
insl
mov
dec
repnz
push
insl
data16
pop
es
js
cmpsb
dec
adc
icebp
insb
jnp
and
test
rorb
push
movsl
int3
xor
jo
psrlq
mov
pop
aam
loopne
add
scas
loope
fsubrs
mov
push
iret
scas
es
add
insl
cmp
mov
push
pop
call
and
sub
mov
lea
inc
fisubs
mov
lahf
iret
jns
sbb
lahf
jl
push
cmp
rolb
add
and
mov
sti
orl
shll
in
insl
push
inc
sbb
nop
or
inc
lahf
mov
jge
cmp
out
lret
cwtl
imul
lea
jne
pop
inc
outsl
out
fnstcw
cmpsl
out
stos
enter
adc
cmp
xor
in
sub
xor
mov
nop
or
ljmp
add
cmp
mov
push
mov
xorl
insl
push
mov
xor
fiaddl
std
xchg
ja
cmpsb
pop
in
push
and
mull
mov
out
je
and
stc
mov
pop
mov
cmp
mov
inc
aaa
es
mov
or
out
bound
xlat
xchg
push
or
adc
xchg
neg
rorl
mov
int
mov
inc
dec
loop
lods
lods
dec
jae
insl
mov
das
push
daa
fstpl
stc
insl
push
mov
cmpsl
test
and
jb
jmp
jo
mov
cmp
or
lret
fimuls
popf
call
sbb
ds
out
loope
pop
push
and
and
popf
imul
fbld
data16
pusha
fdivrl
test
fnstsw
mov
mov
gs
gs
mov
add
jo
push
inc
stos
test
ds
pop
ret
push
jb
push
pop
int3
xchg
and
das
mov
repnz
jle
out
loope
shl
push
call
sti
lds
or
xchg
push
sub
and
pop
jae
mov
pop
mov
mov
pop
sub
inc
add
dec
add
adcb
nop
cmp
sbb
je
mov
lcall
dec
jne
cmp
jne
test
sbb
mov
mov
ret
dec
loop
bound
int
jne
push
rolb
stc
in
sti
pop
xor
in
inc
xor
rsm
pop
ja
mov
add
pusha
arpl
mov
loopne
and
lock
aas
aaa
mov
mov
stos
sub
mov
outsb
lods
fldt
sub
loop
jno
popa
mov
cli
repnz
fsubr
xchg
xchg
add
add
stos
ljmp
jle
lods
stos
cmp
aas
cmpb
imul
sub
xor
outsb
mov
test
aaa
push
pop
ficoml
pop
out
les
lock
std
adcl
ja
repz
es
flds
xchg
xor
xchg
test
out
jae
outsb
mov
pop
pop
fdivrl
dec
nop
inc
and
mov
add
insl
push
mov
addb
outsl
or
adc
push
mov
out
dec
enter
push
adc
movsb
fisttpl
fidivrl
mov
cmp
jo
mov
inc
sar
ficompl
int
cmpsl
adc
dec
loopne
add
out
ds
mov
ja
jp
mull
sub
fmul
cmc
xor
pop
imul
mov
movsl
inc
aaa
mov
adc
nop
adc
jle
scas
pop
or
aaa
int
aam
xchg
xchg
mov
mov
inc
and
outsl
int
sbb
aad
lcall
dec
outsl
sbb
inc
pop
lret
or
aam
hlt
stos
outsl
cmp
push
or
mov
xor
outsb
mov
mov
mov
push
dec
mov
cmp
stos
xchg
adc
sarb
test
call
arpl
rolb
icebp
add
push
arpl
push
fsubs
and
xchg
ja
call
scas
loop
jno
push
mov
or
lret
mov
lea
je
fisttps
scas
xorb
add
cli
mov
mov
popf
out
out
cmp
fmull
cmp
jae
xchg
movsl
mov
push
sarb
clc
rol
test
add
sahf
outsb
mov
cmp
and
lret
inc
pop
arpl
in
add
cli
imul
movsl
ss
xchg
or
pushf
scas
rorw
pop
sbb
and
lods
mov
xor
sub
add
pop
xchg
mov
loopne
aas
xor
cmpsb
cmc
outsb
mov
cmpsb
sbb
test
je
mov
pushf
jmp
xchg
iret
outsl
test
cli
pop
fdivrl
dec
mov
cli
xchg
mov
xchg
pop
test
or
mov
xor
shll
jecxz
inc
mov
jo
cli
shll
inc
hlt
jecxz
add
cwtl
repz
push
pushf
cmp
mov
test
or
mov
dec
mov
rcr
dec
movsb
and
pop
pop
mov
sub
inc
rcll
dec
or
iret
mov
pop
scas
bound
sbb
movsb
dec
pop
pop
mov
push
sbb
mov
ret
mov
push
fimull
mov
arpl
jecxz
xor
dec
enter
sti
sub
push
mov
sarb
gs
inc
add
sub
sbb
sarl
adc
sub
popf
sbb
mov
sti
out
mov
adc
test
decl
ljmp
scas
adc
imul
shll
sbb
out
in
pop
add
ficompl
int3
or
push
in
imul
mov
bound
sub
pop
mov
addl
add
jmp
sub
sub
xor
imul
jo
push
test
xchg
nop
scas
lea
loope
je
xchg
xor
xor
cli
jno
loopne
pushf
je
jg
cmc
loop
push
sti
mov
sbb
mov
je
jnp
mov
mov
mov
mov
mov
or
in
les
mov
xor
jae
nop
popw
jno
fnstcw
cld
loope
dec
clc
jg
lret
loopne
fcmovnu
dec
pop
jbe
fisubl
or
mov
xchg
aad
ret
iret
mov
adc
push
ja
rolb
dec
xor
test
cmp
push
adc
cmp
xor
mov
scas
mov
insb
shlb
movsl
xchg
sbb
xor
cmovs
adc
je
dec
aas
lret
popa
pop
cmpsb
subb
call
andb
pop
xchg
dec
or
push
mov
cmp
test
cmp
inc
ret
arpl
pop
sbb
pop
xchg
lret
dec
stc
leave
mov
not
lret
out
mov
lcall
int
shrl
popa
lret
jmp
cmp
sbb
xchg
icebp
ljmp
dec
dec
jge
mov
scas
and
cli
jmp
ret
ficompl
adc
cltd
inc
cmp
lcall
jnp
pop
mov
push
stos
lock
movsb
outsb
adc
adc
int3
cmp
or
sbb
xchg
pusha
scas
out
inc
sbb
shlb
jge
movsl
addr16
xor
cmp
cmc
sahf
mov
inc
inc
adc
and
mov
test
das
mov
outsb
push
cltd
sti
inc
data16
mov
adc
push
cmc
hlt
adc
aas
fwait
sbb
inc
inc
push
dec
add
inc
xor
pop
scas
xchg
fxch
std
sti
mov
dec
out
fdivs
lods
es
mov
xor
inc
and
fbld
gs
push
xor
lcall
imul
pop
sub
scas
invd
cmpl
clc
ss
out
loop
js
add
jle
xchg
cmpb
iret
xor
pop
add
sub
xor
lods
pushf
adc
jns
in
sub
sti
testb
repz
movl
stos
pop
loop
sbb
xor
sbb
loope
mov
cmp
js
pop
movsl
test
aas
repnz
loop
or
jp
or
push
stos
push
lret
mov
mov
sbb
xchg
in
xor
out
fildl
mov
push
scas
sbb
fidivrs
sub
add
lods
add
loop
fcmovne
shrl
mov
mov
lcall
mov
adc
inc
xchg
rcl
out
out
jno
push
adc
sub
add
xchg
dec
test
fwait
out
cld
lahf
into
in
movsb
test
inc
gs
lods
in
inc
mov
sub
pop
int
pop
push
inc
xchg
popf
fstps
mov
bound
dec
mov
pop
shrl
das
cmp
jo
inc
or
lds
xor
je
movsb
cld
data16
adc
dec
shll
pop
outsl
les
out
fstps
out
lcall
inc
notb
pop
ret
inc
sbb
lods
mov
gs
jge
insb
jl
jbe
pushl
gs
sub
cld
cli
dec
negl
xchg
sbb
rcl
inc
mov
aam
minps
loop
int
in
loope
xor
lds
add
xor
pop
mov
and
sbb
out
jl
int3
shll
mov
mov
mov
dec
sub
cmp
mov
dec
js
arpl
call
xor
inc
or
xlat
mov
mov
jmp
outsb
jbe
add
stos
xor
mov
mov
adc
sti
push
mov
cmp
push
stos
and
xchg
fidivs
adc
jo
cld
lahf
push
leave
add
outsl
jno
pop
lods
cli
dec
lahf
xchg
xor
jae
es
jne
pop
dec
push
cmpsl
fidivs
out
xor
leave
cltd
adcb
lock
shl
xor
and
fldenv
pop
add
ret
scas
jg
in
lret
mov
add
adc
or
sub
sub
ss
leave
test
icebp
pusha
xorl
andl
jmp
out
loop
jns
sub
icebp
imul
pop
test
test
adc
or
jbe
nop
cmpsb
clc
jmp
insb
jle
jne
sub
test
inc
push
aad
sbb
mov
adc
es
cmp
push
cmc
ljmp
cltd
insb
daa
adc
outsl
gs
repnz
ja
inc
fstpl
jb
call
dec
mov
xchg
mov
iret
push
fwait
push
iret
lds
xchg
cmp
dec
mov
flds
inc
push
loopne
in
in
popf
dec
std
ja
xlat
push
xchg
cli
push
push
test
xchg
pop
mov
inc
mov
xlat
sub
insb
mov
jl
or
test
pusha
out
and
adc
dec
jo
stos
sub
shll
mov
push
pop
jl
sbb
jl
fidivl
sub
sbb
orb
hlt
cs
out
cld
inc
test
xchg
jo
sbb
sub
ss
rclb
push
xchg
hlt
repz
repz
sub
inc
xor
xchg
out
bound
cmpsb
inc
mov
mov
jge
lds
add
sub
jmp
ret
rol
inc
fs
push
pop
dec
xor
dec
xchg
jns
mov
cs
mov
mov
mov
mov
add
loop
leave
xor
mov
mov
in
xchg
push
sub
addr16
sbb
cs
mov
ja
lret
inc
outsb
pusha
sti
add
inc
push
imulb
es
dec
mov
hlt
cmp
adc
jo
xor
xor
push
adc
xchg
mov
pop
mov
inc
das
mov
mov
cmp
jbe
rol
in
jno
imul
cmp
sbb
sbb
sbb
xor
nop
clc
bound
mov
or
sbb
adc
imul
lock
std
popf
sahf
mov
fidivs
lods
cli
inc
enter
lods
inc
clc
push
pop
outsl
inc
mov
clc
fisttpll
es
mov
cmp
cld
xor
jnp
test
xchg
inc
mov
test
xchg
sbb
jnp
mov
outsb
mov
mov
pop
jg
xor
jle
xor
mov
push
aaa
cmp
push
dec
mov
xchg
pop
rcrb
popl
leave
cli
test
pop
repz
mov
push
std
addr16
xchg
nop
lds
jg
mov
ret
xchg
mov
pop
out
movsb
mov
cmc
or
fidivrs
dec
dec
mov
fidivrl
xchg
data16
out
mov
aam
loop
roll
push
mov
retw
pop
sbb
imul
cmp
lcall
inc
in
movsl
js
jmp
data16
jb
pop
ds
fnsave
icebp
and
xchg
rcll
daa
dec
stc
adc
dec
mov
ljmp
ja
push
cmpsl
das
lods
repz
enter
repz
mov
jmp
lods
pusha
and
inc
jp
pop
pop
ret
test
fwait
bound
push
sarl
push
inc
jge
mov
orb
inc
adc
nop
loope
hlt
andb
push
mov
fisubs
fwait
insb
mov
adc
mov
mov
fdivl
mov
xchg
loop
in
push
das
ss
into
xor
or
add
push
adc
push
lea
xchg
push
insl
jbe
ja
mov
pop
cmp
adcb
or
jae
or
scas
or
add
subl
sbb
push
cs
mov
in
sbb
aam
repz
mov
sub
jp
pop
add
shlb
incl
movsl
jle
cmp
dec
fists
mov
jge
and
or
aad
and
repnz
aaa
cmpsb
test
and
fisubl
push
jne
mov
or
insl
fcoms
in
or
add
inc
flds
jns
lret
jmp
jbe
pop
push
mov
push
or
js
sub
addr16
fimull
cmp
imul
scas
lods
cmc
xchg
aad
mov
push
into
inc
push
add
sub
inc
sbb
sbb
dec
hlt
dec
jns
jne
fildl
adc
movl
out
mov
sub
loop
cmp
dec
mov
adc
imul
mov
lds
loopne
dec
cltd
out
and
or
xor
pop
shlb
test
jg
mov
push
aaa
test
hlt
mov
push
stos
fdivl
dec
pushf
popa
pushf
xchg
xor
mov
pop
loop
jne
in
fs
cmpsl
cmp
sbb
jnp
sub
fists
imul
daa
dec
add
lcall
cmova
aad
xchg
and
adc
sub
lret
mov
push
push
and
test
mov
in
rcrb
rclb
push
sbb
daa
movb
pop
fcmove
xor
or
repz
lods
mov
and
xor
ljmp
sub
xrelease
data16
leave
cld
call
cs
mov
cwtl
pop
push
xchg
jb
iret
add
sbb
push
pusha
jae
and
aas
addr16
movb
shrl
xor
push
push
movsl
dec
sarb
cmpsb
call
push
jae
leave
push
cmp
subb
std
es
xchg
add
sarl
xchg
dec
mov
jmp
outsl
popf
jmp
in
sbb
xchg
les
mov
add
xchg
mov
dec
jp
mov
or
xor
fldcw
mov
xorl
cmpsl
inc
mov
push
int
in
sti
fldl
adc
fucomi
push
scas
sbb
xchg
or
pop
arpl
inc
dec
sub
and
cltd
imul
mov
xchg
or
and
outsl
inc
sub
xor
out
out
pop
lods
dec
notb
and
sti
in
jbe
shll
sbb
aad
orl
dec
cltd
repnz
xor
clc
leave
imul
rcrl
jae
dec
cmc
pop
fs
int
push
push
mov
sbb
jmp
jmp
mov
push
cmp
push
add
fiaddl
std
cmp
in
or
jecxz
andb
loope
push
fiadds
inc
lret
cmp
pop
rolb
mov
fdiv
mov
xor
sub
cmpsl
adc
jecxz
mov
inc
out
and
dec
mov
mov
sbb
stc
add
sbb
pop
fnsave
adc
pop
mov
add
push
jo
je
scas
jp
pop
xor
mov
fisubl
cmpsb
sub
push
cli
jg
rep
jp
hlt
dec
and
mov
pop
push
cmp
sbb
aaa
dec
lcall
scas
sar
lahf
adc
dec
jp
out
xchg
add
mov
arpl
cmp
outsb
dec
inc
imul
mov
shl
push
out
hlt
jmp
adc
sub
sub
repz
lods
ds
sbb
xchg
sbb
inc
dec
push
cmpsl
insb
hlt
cmp
pop
mov
push
out
push
mov
xchg
lock
dec
fisttps
jmp
xchg
je
jns
sub
in
inc
call
fiadds
pop
cmp
leave
fabs
lret
mov
cmpl
sti
jno
xor
fcmovnbe
sbb
dec
in
push
and
jae
loop
add
sahf
cmpsl
sbb
icebp
mov
adc
sbb
cmp
add
push
and
leave
cli
lock
jmp
rcll
out
mov
mov
mov
aaa
std
idivl
mov
push
dec
dec
mov
cld
xchg
enter
mov
add
mov
xchg
cmp
fildl
xor
jecxz
dec
fnstcw
dec
mov
fs
shlb
rol
sbb
int3
das
pop
in
inc
xor
sub
adc
fsubr
inc
push
rorl
movsb
sbb
sub
sbb
test
jmp
mov
dec
mov
and
clc
out
mov
out
popf
sbb
pop
es
adc
push
shrb
adc
ljmp
mov
inc
repz
ss
mov
dec
add
sub
or
stos
test
mov
xchg
adc
mov
or
sub
jnp
pop
inc
ja
sbb
cmp
flds
lret
jo
shll
fistl
xor
lea
ret
and
push
lods
xlat
push
push
adc
and
sbb
out
out
clc
int3
mov
xchg
in
insb
test
dec
jge,pn
jne
push
pop
pop
pop
mov
clc
repz
mov
lret
inc
clc
imul
pop
pop
negl
arpl
cltd
adc
pop
sbb
push
push
fldcw
jnp
push
movsb
push
pop
outsb
ficoms
xor
aas
add
mov
cs
pop
xchg
xor
push
or
cmc
sar
aad
sub
adc
inc
lock
push
mov
fucom
mov
movsl
mov
inc
out
adc
and
mov
sti
add
in
add
sub
lea
dec
dec
pop
iret
xor
ja
inc
bound
enter
dec
inc
push
aas
xchg
xchg
iret
inc
or
sbb
xchg
cmpb
pop
and
test
mov
xchg
sbb
punpckhwd
iret
gs
ss
mov
ja
sarl
or
fadds
cmp
ficomps
pop
push
jge
das
loopne
shrb
mov
and
add
push
add
lcall
cmpl
int
stos
sti
mov
jge
sbb
fbld
xor
fldl
ja
push
mov
lock
lock
sbb
lods
in
inc
imul
movsl
jl
xor
in
stos
sbb
adc
lret
insb
popf
push
stos
push
sub
movsb
mov
adc
jg
movsl
mov
out
jae
sub
or
ret
pop
add
movl
ljmp
mov
clc
inc
test
push
cmpsl
sarb
pop
out
je
arpl
xchg
gs
xchg
out
mov
dec
nop
adc
int3
or
add
mov
int3
nop
add
rolb
jnp
js
xchg
mov
adc
loope
xchg
jne
int3
or
mov
insl
mov
pusha
mov
rol
lret
mov
cmpsl
and
loopne
data16
inc
xchg
mov
xchg
ficomps
jp
loop
add
mov
dec
loop
push
jnp
clc
push
loopne
lret
insb
dec
popa
mov
cltd
mov
or
xlat
iret
or
lds
movsl
xchg
and
jle
sub
fildl
call
repz
bound
mov
mov
out
stos
repnz
imul
adc
mov
sbb
in
aad
outsb
cmpsl
xchg
push
mov
and
push
mov
test
pop
lahf
cmp
cmpsb
gs
xor
pop
shr
pop
mov
inc
arpl
or
push
cli
pop
rcrl
outsb
sbb
testb
jle
cld
xor
push
cltd
decl
lahf
testl
mov
pushf
leave
test
pop
and
test
xor
cmp
xorb
mov
jecxz
cmp
scas
in
iret
push
mov
sub
int
aas
outsb
and
or
add
test
mov
gs
pop
cld
loop
mov
and
add
ficompl
fisubrl
sub
stc
mov
fmuls
push
or
std
into
xchg
push
add
xchg
out
inc
aam
mov
loop
sub
ja
sti
pop
push
add
xor
imul
scas
out
dec
mov
xor
cwtl
inc
xchg
adc
int
mov
into
out
and
rcrl
jg
rclb
aaa
fs
aad
repnz
add
shlb
push
pop
sub
jecxz
mov
add
sub
cwtl
loope
mov
lea
lahf
gs
fwait
push
popa
popf
sbb
outsl
stos
and
inc
xchg
aas
loope
or
jl
cmpsl
movl
pop
dec
dec
stos
test
test
sub
out
and
stos
sub
addl
adc
rclb
sub
sub
testl
xor
adc
int3
or
dec
fs
stos
negb
mov
popa
in
cmp
cmp
and
mov
lret
add
mov
test
pop
adc
rcl
aaa
repnz
pop
dec
pop
sbb
rolb
dec
lcall
xlat
mov
insl
jne
pop
movsl
mov
cmpsl
sti
fnstsw
push
lret
int
lcall
fcmovnb
push
in
jae
mov
orl
ds
subl
leave
lods
and
aad
add
jge
scas
jl
jp
fstpl
sub
stc
xchg
repz
jecxz
lds
mov
gs
inc
and
iret
popa
rcl
outsl
lods
xchg
pop
movsl
sahf
fnstcw
lahf
mov
or
or
aas
and
jg
mov
inc
loop
bound
jnp
hlt
xchg
push
push
jp
into
cwtl
xchg
rorb
pusha
aad
xchg
mov
idiv
adc
adc
hlt
cmp
mov
lds
stos
adc
cmovge
mov
xor
inc
cwtl
and
jae,pn
push
xchg
aas
mov
mov
cli
jp
sti
data16
mov
xor
cmp
pop
xor
mov
mov
sub
lods
pop
sti
xchg
pop
jle
and
or
stc
xor
adc
mov
dec
cltd
xlat
jg
pop
pop
push
aaa
scas
pop
mov
cmp
inc
test
and
flds
mov
fiadds
cmp
out
leave
pop
cltd
sub
jp
idiv
inc
push
std
lret
and
jnp
adc
cmp
push
loope
pushf
scas
lret
pop
mov
mov
push
adc
xchg
fildll
jmp
sbb
pop
jle
sub
out
xchg
fs
xor
cli
pop
lret
mov
cli
add
mov
loopne
int3
lods
dec
dec
pop
mov
gs
ds
outsb
jecxz
jg
mov
scas
in
cmp
hlt
js
rolb
mov
pop
inc
in
xor
fdivl
maskmovq
negl
push
fwait
cmp
pop
mov
hlt
insl
xor
add
cwtl
pop
or
jmp
shlb
xchg
add
xor
insb
mov
bnd
sarl
and
xchg
xor
insl
adc
fdivrs
mov
adc
out
dec
dec
loopne
adc
cmp
xchg
pop
push
mov
ss
repz
stos
sbb
scas
lock
std
imul
aad
dec
inc
xchg
dec
jg
cs
inc
daa
push
and
xchg
sub
test
loope
pusha
pop
mov
jle
xchg
cmp
or
fs
inc
jg
sub
add
mov
xchg
xor
ds
out
sarb
popf
push
jl
lret
add
or
jge
test
xchg
and
push
dec
sbb
pop
addb
filds
push
es
adc
sub
mov
jb
ja
mov
push
repnz
out
add
inc
nop
mov
push
fists
mov
cwtl
adc
sub
cli
shrb
mov
imul
mov
test
cs
or
sti
pop
icebp
mov
iret
inc
idivb
jl
sbb
pop
lods
lcall
cmpsb
ret
popf
loopne
insl
pop
and
aaa
mov
aas
sub
or
pop
mov
push
fildll
push
adc
mov
sarb
dec
fdivrl
lahf
stc
and
or
out
sub
and
sti
jns
and
lods
into
movsl
popa
daa
clc
aas
mov
mov
std
fnsave
push
inc
xor
fistpl
mov
mov
mov
add
test
sahf
movsb
mov
xchg
push
pusha
sti
xchg
addb
dec
mov
jecxz
mov
push
fisttpll
xchg
outsl
dec
jnp
shlb
inc
push
cmpsb
mov
cld
jo
and
push
cmp
outsb
insb
cmp
shlb
add
inc
loope
mul
jae
fcoml
imul
ja
push
push
jno
scas
xchg
sbb
mov
movsb
push
cld
xchg
out
sahf
dec
mov
jp
jno
and
lea
xlat
cmp
cli
mov
sbbl
stc
pop
or
lock
mov
jnp
inc
outsl
cmpl
xor
mov
cmp
aaa
nop
xchg
fimuls
das
ret
imul
xlat
cwtl
jne
cli
jb
push
mov
lock
subb
add
mov
xor
ja
cmp
and
and
push
or
fs
test
pop
mov
xor
je
xchg
pop
push
div
inc
xor
loopne
mov
into
enter
lds
cmp
mov
or
dec
bound
loopne
insl
hlt
jle
push
aas
sbb
jne
mov
sub
scas
sti
test
test
inc
mov
loop
cmpsb
jne
cmpsb
je
inc
cmpsl
push
out
pop
fsubl
outsl
adc
stos
push
stc
in
mov
xor
test
ds
jp
fs
adc
push
push
hlt
js
movsb
push
xchg
ds
out
push
int3
adc
int3
repz
add
cmp
fbld
push
cltd
dec
leave
movsb
jo
push
adc
js
je
xor
xchg
decl
push
inc
push
and
in
aad
test
mov
rol
adc
push
mov
jg
mov
stos
idivb
and
fcomps
push
pushf
pusha
pop
inc
lret
int3
mov
aas
inc
mov
xlat
xchg
imul
sub
pop
pop
jmp
mov
jo
cs
push
pop
xor
inc
les
xor
lods
mov
inc
mov
sub
add
outsb
cmp
mov
js
mov
fdivl
push
sbb
push
xchg
jae
insb
push
pop
mov
jno
dec
jae
cmpl
push
xor
xchg
inc
lea
pushf
bound
lock
scas
or
push
mov
iret
ret
mov
popf
addl
sti
push
nop
test
fldenv
jae
mov
shlb
imul
dec
mov
nop
aad
fs
sbb
popa
jns
aam
outsb
outsb
inc
les
sbb
mov
mov
aam
sub
dec
sahf
or
cmc
test
mov
inc
notl
faddl
dec
cmp
cmp
push
enter
push
daa
pushf
cmp
sbb
sub
mov
jno
jns
sbbb
inc
xor
push
lahf
addl
sbb
cmp
jecxz
add
rcl
pop
cmpsb
adc
or
mov
dec
mov
push
cmp
or
in
into
and
jmp
sbb
mov
cli
imul
sub
shr
or
xchg
adc
or
sub
pop
sub
mov
lret
lret
lock
mov
imul
xchg
mov
test
mov
inc
imul
push
mov
into
in
xlat
outsb
jae
dec
xchg
movsb
fcmovnu
inc
std
push
mov
push
mov
outsl
test
mov
test
or
movsb
pop
xchg
xchg
dec
int
test
push
and
lds
in
out
testl
adc
das
insb
nop
mov
jns
mov
enter
stc
mov
sub
cmp
sub
cwtl
sarl
pop
jne
mov
xchg
xchg
cmp
into
decb
pushf
sbb
insb
out
pop
inc
je
les
int
movsl
sub
sub
shlb
add
addr16
push
iret
mov
sub
mov
enter
jno
ret
xsave
shl
cmp
adc
fidivl
xor
and
aam
andl
mov
dec
adc
in
imul
and
push
push
mov
push
ds
sub
pop
lods
sub
xor
mov
or
aad
dec
lret
mov
inc
out
bound
adc
outsb
adc
ds
inc
faddl
orb
test
mov
mov
sub
inc
xor
xor
mov
out
mov
cmp
xchg
imul
sahf
and
pop
mov
mov
pop
mov
rorl
and
mov
scas
lret
cld
int3
cmp
adc
aas
pushf
pop
mov
aaa
stc
loopne
out
pushw
jge
ds
mov
xlat
inc
jns
push
xor
std
insb
pop
jnp
sbb
ss
mov
xlat
pand
dec
pop
jb
data16
in
sbb
mov
addl
dec
mov
mov
je
mov
and
mov
jbe
pop
stc
clc
loopne
mov
inc
jae
lret
out
mov
jno
dec
call
call
and
movl
addb
pop
mov
inc
cmc
f2xm1
jp
sbb
dec
stos
cltd
stos
mov
add
add
cmp
popf
je
cmp
inc
push
jmp
jb
sti
mov
mov
mov
popl
int3
jge
stos
sarl
xor
sti
cwtl
push
mov
jno
adc
mov
aaa
rclb
cld
add
inc
add
adc
cmp
adc
adc
xchg
cltd
pop
vmovupd
and
andb
sbb
sbbl
neg
lret
mov
adc
inc
xchg
nop
and
jno
mov
jge
pop
loopne
adc
call
jnp
subb
cmp
xchg
pop
test
push
lret
fdivl
mov
inc
or
aad
and
in
push
push
aam
clc
pop
mov
pop
lds
dec
stc
fildl
mov
pop
orl
fsubrl
cmpl
leave
lcall
aaa
add
cmp
xchg
sbb
das
mov
adc
pop
pop
mov
shl
dec
fimull
inc
bound
mov
add
notl
dec
int
dec
cmp
aad
shlb
in
scas
addb
stc
scas
fmuls
xchg
mov
je
and
nop
xor
and
inc
mov
pop
cmpsl
pop
sahf
les
jo
inc
orb
fsubl
outsl
push
or
adc
push
repz
fwait
jae
sub
out
push
sub
sub
mov
pop
or
js
in
out
ret
inc
mov
xchg
jp
add
das
xor
dec
dec
push
sub
ror
cli
pop
or
xchg
aaa
and
mov
jbe
sub
sbb
aas
jno
mov
lds
lahf
fcomp
pop
ss
arpl
popa
adcb
inc
push
inc
test
mov
mov
push
mov
sarl
ret
int3
inc
sarl
cmpsb
dec
js
cli
mov
pop
out
pop
add
imull
push
js
ljmp
dec
scas
lea
cmp
pushf
cmp
mov
adc
inc
bound
lret
push
bound
sub
out
iret
out
mov
lea
arpl
lahf
dec
inc
mov
outsb
mov
arpl
jl
in
lods
mov
sbb
outsl
test
shlb
lods
mov
mov
jge
inc
jecxz
pushf
stos
popw
and
pop
lahf
out
fisubrs
negb
add
fcomp
pop
jno
mov
dec
sbb
push
add
je
mov
ret
popf
cmp
mov
cs
pop
pop
add
and
add
call
sahf
inc
idivb
and
test
cmp
jns
sub
jg
lods
int3
fistl
lea
ds
mov
mov
dec
in
stos
cmp
jno
xchg
cmp
cltd
leave
jno
sti
repnz
sub
data16
imul
cltd
cmpl
enter
mov
and
xor
shr
in
scas
mov
stc
pop
and
in
in
dec
cmp
je
inc
push
and
mov
std
scas
xchg
add
clc
mov
jl
and
jmp
adc
scas
xchg
push
cmp
je
insb
add
cmp
cli
fdivp
and
aas
mov
xor
data16
movsb
ds
adc
popl
mov
aas
pop
imul
xchg
iret
or
inc
stos
pop
and
mov
repz
ja
arpl
imul
bound
ljmp
add
dec
and
jae
and
pop
popf
pop
mov
mov
into
mov
test
xorb
sbb
jo
push
push
sbb
xor
adc
sbb
mov
loop
mov
jmp
popf
call
mov
ljmp
jp
fildll
iret
push
push
int3
daa
imul
nop
shrl
into
pop
ljmp
data16
lock
xchg
inc
push
sub
and
push
test
or
rorb
shlb
lret
out
xchg
cmc
scas
mov
aas
add
xchg
fwait
pop
inc
cmc
mov
daa
pop
mov
popf
ss
arpl
addl
inc
xchg
scas
pop
sub
in
add
inc
aas
stos
dec
imul
mov
mov
mov
pop
popf
ds
popf
into
sahf
xor
fimuls
mov
clc
sub
lret
testb
stc
and
dec
mov
jp
mov
sbb
in
movsl
loopne
shl
pop
popa
or
and
push
mov
mov
inc
bnd
or
aad
shl
fnstsw
and
les
mov
icebp
xor
call
push
sbb
mov
cwtl
aas
scas
clc
add
jge
and
rorl
cmpsl
mov
sbb
testb
in
xchg
pop
dec
xchg
add
push
idiv
sbb
frstor
jnp
inc
push
add
xchg
mov
cmpb
ficomps
bound
cwtl
push
sbb
push
sbb
xchg
jnp
add
cltd
pop
test
loopne
gs
lods
xor
repnz
in
stc
stos
push
cmp
sub
cmp
loopne
push
pop
add
cmp
add
cmp
test
fstps
sbbb
dec
jg
cmpb
dec
xchg
and
jl
and
mov
call
jmp
dec
sub
xor
cmpsl
scas
xor
aam
add
xchg
cmc
dec
fcmovnu
xlat
sarl
or
stc
cmp
fnop
xchg
push
aam
int3
call
gs
fidivrl
jecxz
or
xor
and
sbb
jmp
movl
push
push
or
iret
push
dec
daa
fidivrl
gs
in
add
sub
jl
cmp
inc
ror
into
mov
mov
mov
ret
xchg
adc
sbb
into
aad
jo
call
lods
out
mov
jno
sub
push
lds
sub
jb
les
fldln2
sahf
xchg
shr
jmp
test
push
mov
fstl
dec
mov
popf
jno
pop
bound
mov
mov
push
inc
push
jl
stos
mov
aad
and
pop
inc
push
mov
sti
iret
cwtl
leave
fidivrs
push
push
mov
mov
fstpl
jl
jl
shlb
xor
outsl
rolb
jecxz
aad
inc
in
xor
cs
dec
cwtl
cmp
jg
clc
jg
mov
call
out
xchg
mov
ret
in
pop
testl
sti
inc
dec
mov
fdiv
pop
into
mov
lea
imul
cmp
mov
sbb
dec
ss
adc
xor
dec
in
or
mov
gs
arpl
es
leave
xchg
sub
das
sbb
jb
pop
mov
mov
mov
scas
ret
push
xchg
mov
add
cltd
pusha
mov
aad
push
leave
sahf
mov
pop
jbe
fdivl
xchg
arpl
mov
mov
sub
sub
xchg
xor
xchg
mov
aaa
push
sub
dec
hlt
mov
pushf
add
lcall
in
inc
add
pop
or
sub
ljmp
rol
push
dec
xchg
cmp
mov
popa
jle
adc
mov
sbb
mov
inc
enter
dec
test
and
ret
xchg
es
shll
or
in
add
and
js
pop
push
push
mov
xchg
mov
mov
fcomip
shll
xlat
fs
sbb
aad
push
repz
scas
shrl
bound
add
out
mov
sub
les
or
mov
dec
cmpl
in
repnz
inc
mov
mov
xor
pop
pushf
mov
lds
lods
xchg
ja
test
inc
movsb
inc
push
aam
adc
pop
cmpb
out
jae
test
ret
jge
popf
data16
mov
inc
or
cmpsb
pop
add
mov
dec
push
pop
pop
aad
inc
cmpsl
cmp
or
dec
jo
pop
pop
fsubrl
mov
or
js
and
pop
sub
mov
movsb
addl
lods
fwait
lret
jl
testb
rolb
test
icebp
mov
inc
sub
mov
push
cltd
cld
lret
outsl
test
insb
dec
ret
subb
dec
shrb
sbb
cltd
adc
cmp
ret
mov
movl
sbb
pop
mov
test
stc
stos
cmp
mov
loope
pop
out
leave
jo
lock
fidivs
push
fisubrl
pushf
and
popa
lods
lahf
out
dec
cmp
repz
or
sbb
sub
in
ljmp
push
inc
scas
xor
mov
and
mov
inc
or
popf
jecxz
loope
cmc
mov
cmc
mov
jle
aam
cmp
icebp
mov
cmp
lock
sbbl
add
notb
adc
xor
jne
jns
cwtl
push
lcall
loope
push
pop
fldcw
and
lods
out
cmp
std
lods
mov
jnp
orl
pushf
adc
adc
mov
push
mov
sub
mov
pop
in
push
pop
inc
daa
sub
ret
mov
xchg
lret
cmc
rclb
jmp
aas
sub
es
imul
les
and
and
faddl
xchg
and
imul
or
push
arpl
insb
pop
insl
call
xor
nop
lret
popa
arpl
sub
test
push
or
cmc
adc
shrl
test
push
pop
mov
rcrb
jmp
call
xor
cmc
push
xorb
adc
jns
push
push
in
addr16
js,pt
aad
loopnew
lret
sub
xor
fisttpl
loope
mov
mov
push
out
mov
arpl
lods
jp
mov
les
lods
divb
inc
dec
inc
fdivl
outsb
cmp
inc
lea
and
aas
es
and
xchg
gs
lret
cmc
jne
and
cs
cmc
lret
outsb
inc
outsl
roll
lcall
popa
pop
scas
pop
jl
gs
jne
pop
xlat
push
jne
cmc
clc
add
mov
jecxz
cltd
xchg
imul
add
push
inc
mov
xor
sahf
lgs
lret
jl
out
mov
jl
xor
dec
outsb
mov
adc
repz
and
mov
enter
mov
xor
std
inc
and
testl
enter
mov
add
cmp
adc
xor
jb
test
sub
icebp
rorb
add
lock
inc
inc
cmp
cmp
inc
das
pop
or
loop
jbe
pop
ficoml
mov
call
adc
mov
jge
or
shll
jp
pop
jnp
out
popa
notl
push
movlps
mov
orb
in
mov
ja
fbld
fdivrs
or
cmp
lds
jmp
cmp
and
out
dec
jge
adc
jno
pop
orb
cwtl
popf
mov
enter
cltd
lea
or
and
into
jno
jmp
aaa
out
ss
mov
mov
stos
push
xchg
push
cmc
js
add
xor
cmp
jp
mov
cmpsl
icebp
xchg
xchg
je
test
mov
mov
idivb
and
cld
xchg
mov
repz
xor
je
sbbl
push
adc
jl
in
jecxz
inc
cs
sub
pusha
pusha
cmp
daa
gs
push
je
jo
pop
add
loop
clc
sub
xchg
loopne
sub
xchg
or
cli
fisubs
and
mov
pop
jns
xchg
sbb
pushf
adc
bound
shll
xor
pusha
mov
cmp
jne
push
and
jae
sub
popa
push
orb
jle
ja
mov
andb
xchg
leave
loop
fwait
jo
jmp
mov
jnp
push
mov
outsb
test
repnz
xor
shr
js
call
push
xchg
mov
jne
mov
and
xchg
std
jns
inc
ja
fbld
test
jb
sbb
inc
jecxz
lock
xchg
ja
cmp
sbb
rcrb
and
into
add
mov
das
addr16
xchg
pop
stc
aam
push
pop
orb
sbb
push
sahf
movb
cmp
dec
adc
push
repnz
in
insb
shrb
push
adc
mov
mov
inc
sahf
sahf
adc
mov
cmpsl
dec
lock
dec
push
xor
xor
inc
push
and
out
scas
pop
jne
xchg
inc
jl
push
cld
inc
fnstsw
divb
pop
adc
add
sub
mov
sub
aam
lea
xor
mov
rcll
fcoml
mov
out
enter
pop
xchg
jle
jo
jae
or
add
mov
popf
clc
stos
mov
mov
or
dec
jne
push
rcrb
in
fbstp
arpl
call
rcl
add
jl
cmp
jbe
nop
ljmp
mov
sub
dec
scas
and
mov
mov
dec
mov
jbe
rclb
pop
sub
xor
mov
jecxz
xor
sbb
das
sbb
scas
mov
jmp
rcrl
mov
push
repz
jge
adc
mov
push
or
fs
shl
popf
daa
lret
hlt
fs
int
jbe
xchg
cmp
or
int
outsb
jno
scas
xor
dec
mov
daa
or
adc
sub
mov
frstor
rcll
gs
and
adc
inc
dec
or
jle
shlb
das
pusha
pushf
push
dec
cmpsb
add
jne
inc
loope
addl
loopne
pop
outsl
rorl
pandn
rcrb
cmp
push
xchg
push
jbe
mov
sub
xor
sti
leave
xchg
test
scas
sub
icebp
adc
filds
dec
enter
and
mov
lock
xchg
popf
cmpsb
shl
inc
call
xor
push
stos
xor
test
mov
sbb
sub
daa
repnz
mov
imul
aad
jnp
or
dec
cmp
std
hlt
sbb
xchg
add
insl
aad
mov
test
and
loopne
les
and
js
xor
call
jecxz
cmpsl
jmp
push
test
icebp
xchg
mov
xchg
int
inc
and
xchg
xchg
and
inc
xchg
int3
hlt
and
sbb
pushf
sbb
mov
push
in
insl
dec
add
adc
scas
add
push
idiv
popa
lods
mov
stos
insl
mov
add
stos
jae
enter
stos
lods
inc
sbb
inc
testl
inc
and
lret
test
enter
mov
scas
jl
dec
pop
or
scas
or
sub
push
push
repz
ja
aam
mov
aad
or
lret
movsl
pop
or
pop
push
ljmp
push
push
add
movsl
iret
movsb
out
mov
fsubr
sub
dec
mov
jbe
out
outsb
cmpsl
xchg
mov
cltd
addl
and
bound
sub
jb
stos
cmp
jnp
xlat
dec
sbb
jp
mov
dec
xchg
add
scas
orb
push
cmp
idivb
pop
gs
daa
outsb
jp
push
mov
scas
sbb
stc
inc
ljmp
push
cmp
pop
in
and
outsb
shl
xor
lock
adc
push
es
inc
and
mov
mov
jp
cmc
jle
cwtl
jmp
mov
leave
insb
add
jg
push
cmp
mov
pop
pop
shlb
mov
adc
mov
pop
ja
and
pop
outsb
bound
lret
pushf
jge
xor
in
xor
aas
jo
mov
cmpsb
inc
dec
sub
loop
xor
fstp
sub
jo
dec
push
xor
sub
dec
or
ret
dec
jp
enter
sbb
inc
jmp
aaa
stos
push
xchg
out
ret
cli
mov
jmp
lret
adc
push
loope
sbb
fsubp
inc
push
bound
add
pop
leave
ja
aas
in
mov
inc
push
pop
inc
jo
xlat
std
sbb
and
js
cs
shlb
bound
cmpsb
mov
jno
scas
cmp
fwait
mov
loop
xor
movsl
inc
rorl
dec
xchg
movsl
push
pop
or
jge
ficoms
mov
lret
imul
addl
stc
ficompl
aam
test
ss
loope
or
mov
mov
xchg
das
add
pop
fidivl
fmull
leave
fstl
xchg
stc
mov
imul
jno
sarb
je
addr16
dec
cmp
xchg
xor
dec
dec
mov
inc
push
xor
out
sbb
das
xchg
cmc
es
xor
lret
cmpsb
shrb
aad
jns
fstpl
xchg
mov
jo
dec
arpl
ret
xor
jo
push
sti
int
xchg
mov
xor
push
adc
shlb
in
insl
aas
loop
pop
pop
add
adc
mov
loope
adc
sbb
adc
sbb
xchg
fidivrs
jb
psubq
inc
test
ds
mov
jns
add
mov
add
sbb
adcb
jae
sub
mov
and
mov
outsb
orb
lcall
loope
add
lock
push
out
inc
mov
add
dec
cmpl
and
fsubl
daa
or
xor
cld
divl
push
add
sbb
push
adcb
push
outsl
pop
xchg
loope
loopne
dec
add
imul
sbb
lcall
inc
sbb
rcr
push
enter
loop
aas
mov
add
incl
repz
adc
mov
fwait
into
push
lahf
mov
iret
mov
sahf
popa
movsb
jae
sub
out
mov
out
push
sub
movsb
sbb
pop
fs
cmp
cmp
xlat
adc
cmpsl
push
cltd
or
adc
push
pop
xchg
dec
cmp
mov
inc
sarb
loopne,pt
mov
frstor
or
xchg
pop
cwtl
das
push
bound
jmp
lret
mov
push
mov
sbb
pop
inc
lcall
fninit
out
jle
leave
push
adc
cmp
lret
pushf
fsts
and
push
fistl
dec
leave
ret
jmp
lea
icebp
cmp
jno
addr16
adc
pop
or
ret
clc
jbe
sbb
outsb
inc
jno
es
cli
xchg
dec
into
pop
adc
fbstp
jl
popa
shrb
out
xchg
mov
push
aaa
dec
xchg
mov
jo
adc
dec
mov
cmc
dec
ret
ljmp
push
add
pop
pop
iret
popw
fdivl
clc
leave
xor
dec
shll
sbb
rorl
lea
sbb
xchg
insb
dec
cmp
ss
sub
adc
xchg
out
cmp
or
jno
jo
jne
aaa
mov
into
sbb
fcom
sub
aaa
mov
jnp
jp
orl
xor
int
shll
adc
mov
in
sbb
shrl
inc
ss
push
aad
jns
xchg
xor
or
lea
cmp
cmp
lea
nop
add
add
aam
xchg
je
inc
rcrb
push
and
out
and
clc
lcall
sarb
cmp
ficoms
xor
dec
out
mov
or
pop
inc
addr16
ds
jbe
out
scas
imul
xchg
and
dec
pop
adc
add
stos
inc
or
icebp
test
add
mov
and
sbb
push
jae
out
aam
cwtl
pop
jae
xlat
cmp
inc
mov
xor
subb
jb
push
xchg
mov
outsb
dec
std
adc
je
mov
in
push
sub
fwait
add
inc
xor
mulb
adc
jle
sub
insb
sbb
jge
loop
fldt
fs
jo
push
jg
insb
mov
sub
mov
mov
ret
jp
fisubrs
fwait
imul
inc
lock
in
cwtl
dec
mov
add
stc
lahf
andb
cli
mov
stc
xlat
lods
xchg
mov
popf
add
pop
ja
xchg
add
js
pop
jne
xchg
repnz
xlat
int3
push
in
test
sbb
pop
lahf
dec
mov
xchg
mov
push
out
cmpsl
cwtl
adc
bound
mov
cmpb
mov
lret
mov
pop
push
js
mov
ss
addr16
push
dec
outsb
pop
push
mov
in
insb
mov
push
or
xor
fcoml
xlat
jb
je
shufps
jp
inc
inc
jmp
lods
cwtl
push
ja
cld
pop
test
stos
sub
mov
mov
jbe
in
mov
sahf
incb
cmc
jno
test
int3
pinsrw
leave
pop
push
push
lods
or
stos
scas
xchg
adc
pop
popf
or
cmp
mov
mov
and
push
dec
rclb
outsb
bound
sbb
mov
and
cmc
mov
pop
fistl
loope
push
shll
shlb
push
in
cmpsb
jg
mov
lea
in
inc
adcl
lret
ret
mov
mov
mov
sbb
mov
rcll
fsubrl
xchg
cmp
sub
or
filds
xor
in
sbb
rcrb
xor
adc
lret
aam
movsb
gs
adc
in
ja
cmc
movsb
fimull
and
out
enter
addr16
inc
xchg
or
fs
xchg
inc
push
mov
mov
test
mov
mov
fdivl
fstps
scas
scas
jae
sar
inc
mov
adc
xchg
ficomps
pop
push
in
das
repz
add
mov
jbe
and
es
lea
cltd
mov
int3
push
jmp
xchg
mov
mov
iret
fsubrl
rclb
repnz
or
push
cmpb
xchg
sbb
jge
mov
mov
jmp
xlat
add
cmp
aas
dec
cmp
neg
jns
push
test
pop
pop
decl
stos
or
pusha
jl
cmp
out
mov
repnz
icebp
lcall
or
inc
mov
pop
and
mov
nop
js
sarl
pusha
arpl
das
pop
fcoms
jb
scas
sbb
jmp
int
sub
test
ljmp
cs
pop
lods
sbb
pushf
dec
cltd
pop
loope
sbb
mov
movsb
xchg
adc
dec
std
cmp
cmp
xchg
inc
jns
mov
mov
push
xor
loop
out
xor
pusha
push
mov
adc
ja
mov
fildl
pop
add
adc
xorl
dec
dec
dec
ja
push
sbb
xchg
scas
dec
shlb
jmp
std
inc
or
adc
sbb
mov
add
sub
xlat
lds
dec
jmp
repnz
add
stc
push
in
mov
and
xor
and
ja
mov
orb
icebp
es
mov
jg
out
pushf
imul
stos
iret
lds
arpl
jg
adc
xchg
mov
push
mov
push
sti
xor
sub
cmp
xchg
aad
ljmp
xchg
pop
int
and
sbb
ja
loop
dec
jg
jmp
mov
andb
xchg
jge
inc
mov
mov
pop
mov
in
xchg
jg
mov
pop
ljmp
cltd
hlt
out
cmp
sbb
xchg
loopne
sbb
std
cltd
push
cmp
mov
ficoms
adc
push
add
and
adc
cltd
shll
in
xchg
mov
lds
in
mov
daa
lret
outsl
pop
ffreep
arpl
outsl
add
sbb
cmp
and
lahf
das
int3
lock
cmp
cli
stos
push
dec
not
mov
lret
adcl
cs
inc
bnd
data16
fists
xchg
fistpl
add
mov
push
adc
push
pop
lcall
adc
push
mov
xchg
aas
xchg
cld
mov
test
psraw
and
add
int
or
mov
xchg
sbb
inc
sar
xor
sbb
rcll
insl
stos
fwait
sub
push
sub
fs
int3
inc
vpmovmskb
and
push
jnp
fcmovb
adc
dec
dec
lcall
shr
loopne
sub
dec
push
dec
sbb
hlt
sti
lret
sub
inc
fldl
lds
xchg
mov
jl
mov
pop
into
cwtl
or
nop
rcrl
adc
inc
add
and
mov
out
xchg
cli
xchg
inc
ret
int
inc
rorb
sub
push
das
jge
sub
jp
js
daa
push
test
sbb
mov
lcall
mov
stc
fsubl
out
push
clc
cmp
inc
pushf
mov
mov
or
jno
in
add
cmp
es
dec
dec
sub
add
push
jmp
push
movsb
outsb
imul
scas
in
decb
mov
add
test
sub
adc
jg
mov
cmp
loopne
pop
test
cli
sub
fucomp
push
add
ja
js
ja
pop
addr16
sbb
cmc
mov
out
xchg
cmp
daa
aad
sbb
or
sub
inc
arpl
clc
repz
mov
sub
and
test
mov
fwait
ret
cmp
imul
push
cmpsb
bound
test
add
adcl
pop
ret
repz
inc
pop
mov
dec
sub
mov
add
shl
mov
ja
add
ss
movsl
and
in
mov
movsb
mov
pop
in
mov
pusha
imul
fdivp
das
sbb
xor
adc
lock
iret
xor
sbb
dec
jo
rcl
leave
test
bound
orl
cmpsb
icebp
xor
mov
jle
push
and
in
or
iret
leave
xchg
movsb
sarb
mov
mov
push
fldl
pmaxsw
jbe
mov
loopne
mov
hlt
xor
add
push
jo
imul
fisubrl
js
cmp
jp
test
inc
bound
jmp
push
imul
mov
in
bound
push
pop
sbb
ljmp
mov
xor
mov
add
inc
mov
rcl
std
inc
or
mov
push
mov
insl
jns
aam
out
pushf
push
leave
cmp
fidivl
xchg
std
cmpsl
inc
inc
dec
pop
inc
jg
push
lea
jle
cwtl
sbb
test
add
hlt
gs
test
cmp
pop
fidivs
sti
daa
aam
xor
hlt
daa
mov
cltd
fbstp
clc
lret
jnp
mov
xor
icebp
mov
aaa
inc
sahf
pop
inc
rolb
scas
enter
fld1
mov
mov
movsl
mov
fmul
test
lock
pushf
cmpsl
test
cmpsl
addl
xor
mov
xor
std
mov
pusha
std
and
pop
hlt
xchg
pushf
in
push
lock
aad
mov
or
loopne
lds
add
or
jae
pusha
inc
lret
out
cltd
cmpsl
cmp
inc
sub
test
fwait
icebp
sub
adc
imul
push
push
jmp
les
add
imul
dec
out
lahf
mov
imul
aam
and
adc
pop
test
lds
std
in
ljmp
insl
je
jb
repnz
mov
nop
mov
std
fisubl
cmpsl
out
outsl
add
mov
adc
andb
push
ret
js
lret
mov
lds
cmpsb
mov
inc
ja
xor
test
sbb
push
daa
out
fs
mov
jmp
and
xor
or
cmp
dec
cmp
pop
push
stc
in
aas
jl
popf
add
aaa
out
dec
xorb
in
xchg
pop
dec
mov
dec
push
sahf
lret
sbb
xchg
xchg
das
push
jp
inc
loope
stos
xchg
sub
xchg
mov
sarl
outsb
sub
aad
and
jbe
adc
aad
mov
fdivrl
xlat
js
lods
mov
xorl
dec
push
mov
mov
xor
pop
lods
push
test
mov
jmp
or
mov
cmp
or
mov
jnp
or
dec
mov
test
fidivs
jno
lods
addr16
mov
jge
inc
jle
push
aas
pop
out
push
faddl
ljmp
dec
aam
push
or
mov
mov
andb
clc
mov
test
dec
pop
mov
insl
addr16
loope
jmp
push
mov
arpl
mov
daa
mov
or
push
adc
mov
and
dec
pop
out
sub
rol
arpl
loopne
fwait
cmpsb
ljmp
pop
bound
xchg
aad
inc
test
sub
mov
fwait
iret
sti
mov
fwait
inc
adc
add
in
push
add
sbb
in
xchg
push
mov
jo
adc
clc
js
out
out
fimuls
and
addr16
cmpsb
repz
sub
or
repnz
in
sbb
aaa
add
shrl
mov
pusha
imul
imul
adc
insl
popf
push
jmp
mov
inc
hlt
jo
insb
mov
mov
loopne
push
pop
mov
pop
jmp
pop
rcl
add
push
orl
push
fiaddl
add
xchg
mov
repnz
inc
or
add
cmpsl
shll
iret
or
scas
jno
push
xor
addb
jmp
lcall
fimuls
pop
xchg
add
in
pop
pop
sbb
cwtl
loopne
xchg
fdivp
fisubs
and
cld
fwait
mov
and
pop
mov
loope
in
int3
jno
aaa
in
aam
aaa
in
stc
jb
add
mov
js
imul
xor
movsb
mov
dec
mov
inc
pop
mov
xchg
fbstp
xchg
mov
add
push
dec
mov
xchg
hlt
cs
in
daa
xchg
imul
cltd
xlat
fwait
shrl
inc
jae
push
mov
aam
in
daa
fistps
pop
xor
dec
push
inc
pop
and
xchg
or
pop
push
int
dec
mov
bound
mov
insl
add
pop
dec
addb
sbb
les
stos
adc
jge
fwait
jno
inc
mov
in
lea
pop
mov
mov
lret
int
fbstp
pop
dec
insl
jge
call
pusha
jne
out
mov
js
dec
and
fiaddl
ljmp
add
mov
pop
ficoms
inc
es
sbb
lods
ljmp
and
test
xlat
push
sbb
cmovnp
xor
les
emms
sub
daa
sub
test
daa
jne
in
leave
sti
lcall
leave
push
push
mov
jg
pop
sbb
mov
or
dec
mov
fadds
popa
ret
lcall
fisttps
and
mov
gs
sub
dec
push
mov
pop
jb
aaa
out
inc
call
pop
insl
pop
and
lahf
cli
add
ljmp
cmp
sahf
in
inc
jb
cmpsl
lods
add
mov
add
push
jne
pop
push
push
sbb
or
in
xchg
adc
lret
jb
call
inc
hlt
stos
lock
mov
jmp
mov
in
sub
js
mov
mov
inc
xchg
xchg
lcall
cmp
inc
jno
hlt
adc
in
fsubrp
jo
cwtl
out
call
je
xor
pop
stos
adc
and
test
sbb
dec
fdivrl
cmpsl
jl
jmp
xchg
subl
cmc
dec
mov
and
dec
mov
scas
or
pop
pop
sbb
and
fsubs
ljmp
cmp
xchg
sub
addb
stos
pop
pop
xchg
pop
xor
fimuls
mov
shrl
and
or
add
inc
inc
fldenv
and
dec
inc
icebp
jmp
xor
adc
sub
mov
cmp
xchg
into
cld
ljmp
test
xor
dec
rorl
jnp
lds
sub
lods
jns
mov
sar
popa
jbe
cmp
push
jmp
repz
ljmp
push
ror
xchg
xchg
and
sbb
inc
fisubl
sub
stos
and
xor
subl
push
cmpsl
fwait
xchg
insb
sub
sbb
xchg
inc
mov
dec
inc
or
mov
or
rcl
pusha
and
stc
and
fcompl
scas
cmp
test
push
pop
lret
or
and
pushf
clc
cwtl
aad
lods
add
cwtl
fstl
adc
gs
insl
std
das
sub
xor
rol
out
mov
push
repz
scas
mov
sbb
in
mov
fisttpll
sbb
add
in
adc
fnstenv
dec
in
mov
cmc
leave
push
adc
add
and
pop
das
inc
sbb
cmp
mov
sub
cmp
rorb
in
pop
addr16
loope
notl
das
push
mov
xor
xchg
cmp
and
adc
or
out
out
jae
cmp
clc
lret
jns
inc
push
stos
cmpsb
push
clc
cmp
dec
loope
lea
xor
jo
inc
leave
inc
lcall
sub
or
imul
jne
scas
rcrb
mov
je
lret
iret
mov
cld
repnz
xchg
stos
outsl
xor
cld
aam
dec
enter
mov
aaa
inc
stos
test
jle
sbb
dec
decb
cmp
cmc
pusha
fisttpll
mov
mov
testb
mov
je
adc
mov
outsl
and
cmp
subl
push
leave
inc
jbe
xchg
cmp
xchg
pop
mov
lret
jle
xchg
pushf
cmc
mov
inc
loopne
cmp
sbb
cmp
int3
inc
outsl
fsubrs
cmc
dec
mov
lcall
loope
lcall
cmp
pop
cmp
mov
dec
imul
sub
sub
mov
fidivrl
cmp
adc
ret
lahf
xorb
mov
je
popa
adc
push
subl
pop
sub
dec
fdivs
lahf
flds
andl
shl
xlat
jmp
xor
or
jb
xlat
push
pop
iret
lret
cli
mov
sub
xlat
mov
shlb
in
aaa
fdivrl
push
outsl
jbe
test
inc
jae
add
aaa
and
cwtl
mov
jl
fs
insl
mov
mov
push
cli
inc
iret
fdivrs
push
in
pop
dec
clc
dec
fwait
adc
int3
add
jne
popf
mov
mov
lods
incl
mov
mov
fisttpl
dec
inc
pop
clc
andl
ret
das
jno,pn
popl
push
es
cmc
mov
ret
mov
push
xchg
rcr
ret
cmp
inc
xchg
lods
mov
movsb
into
cld
lds
ja
adc
lcall
popf
mov
inc
jg
in
cld
mov
push
cmpl
inc
xchg
dec
adc
mov
xchg
or
add
mov
inc
shrl
mul
je
popf
cmp
push
repz
adc
and
cmp
das
push
jns
pop
adcl
pop
or
sub
in
mov
outsb
out
mov
call
lods
jp
aas
adc
je
inc
xor
arpl
mov
outsb
dec
test
mov
or
lock
insb
adc
xor
bound
fadds
cli
dec
das
jae
sub
pop
ljmp
cmp
and
enter
insl
ss
out
sbb
xor
sub
lret
add
add
pop
data16
push
aaa
inc
sbb
xchg
or
adc
test
loop
imul
or
sub
daa
jmp
vprotq
divl
sbb
mov
or
xchg
ljmp
add
lods
popf
adc
in
hlt
nop
xchg
or
cs
rorb
inc
push
inc
dec
mov
jle
stc
push
mov
sbb
push
in
int
in
les
outsl
shlb
push
flds
in
stc
aad
dec
scas
repnz
cld
push
in
inc
and
adc
mov
sarl
xchg
fcoml
ss
fsts
and
fs
cmp
je
and
dec
out
push
shlb
gs
in
xchg
roll
nop
inc
aad
leave
into
arpl
in
inc
add
xchg
and
jns
in
xchg
push
dec
inc
scas
pop
out
test
xor
sbb
adc
mov
fucomp
stc
sbb
dec
addl
popl
lret
adc
mov
cmp
cmp
sarb
outsl
std
dec
cmp
xchg
mov
data16
dec
jle
sbb
fimull
pop
std
mov
inc
icebp
or
mov
popa
pop
sub
push
xor
push
push
clc
cltd
cmp
pop
sbb
idivb
aaa
fistl
loope
inc
lods
bound
xor
lcall
out
jge
enter
add
cltd
daa
adc
and
mov
pop
dec
cli
rclb
clc
fcoms
loop
fnstcw
dec
xchg
lret
dec
int3
mov
fwait
jne
sub
sub
pusha
push
xor
lcall
mov
push
rcll
lds
scas
adc
mov
hlt
lods
mov
sub
daa
andb
xor
xor
push
es
add
je
inc
push
in
imul
sbb
dec
inc
mov
cmp
call
cmp
adc
jmp
call
in
loopne
sar
fstps
cmpb
pop
jmp
jne
adc
iretw
enter
daa
adc
and
cmp
or
fs
addr16
pop
test
mov
pop
stos
mov
fcoms
jae
mulb
shrb
sarl
dec
xor
add
in
loopne
sub
sbb
sub
sbb
mov
not
mov
adcb
sub
shr
jnp
sahf
clc
sub
loope
pavgb
xchg
xchg
xchg
fisttpl
mov
xlat
inc
ret
mov
mov
lock
fcmovnbe
xlat
lods
lock
lds
dec
push
out
mov
rcrb
sub
cmp
insl
pop
scas
cmp
stos
xchg
push
pusha
mov
addr16
fimuls
inc
negb
dec
mov
roll
je
sbb
les
lock
pop
subl
and
lret
mov
fs
cs
cmp
cmpsb
add
jecxz
add
add
push
ret
jne
pop
dec
lahf
sub
xchg
sbb
cmpsl
mov
fstpl
pop
movsl
push
pop
outsb
loop
lods
sub
push
ret
jle
mov
roll
lret
sub
cmp
or
test
test
es
ss
or
aam
xchg
mov
je
das
pop
adc
ds
pop
cwtl
int
sub
inc
fdiv
sub
jl
xor
cmp
stos
enter
sbb
nop
notl
dec
xchg
or
mov
int
in
sbb
pop
inc
shr
shll
mov
call
cmc
jge
push
mov
xchg
inc
adc
adc
and
push
cmpsb
dec
mov
cli
push
jne
cmc
hlt
dec
fdivl
push
xchg
xchg
or
test
jmp
mov
mov
xchg
jg
push
mov
xchg
loope
das
cs
mov
cmp
inc
pop
cs
cli
scas
and
pop
xchg
mov
adc
or
shll
jnp
int3
inc
je
pop
aam
mov
shl
sbb
mov
and
push
test
mov
dec
shll
dec
out
mov
xor
mov
add
pop
jmp
jl
pop
push
add
rorl
shlb
cmpsl
push
jmp
jb
hlt
stos
in
mov
jbe
mov
les
mov
jmp
aas
stos
out
in
push
jg
lcall
push
js
add
xchg
push
cmp
subb
and
test
push
adc
jp
cmp
jge
aas
mov
inc
mov
push
pop
inc
dec
int3
out
fisubrl
cwtl
cmp
lret
xor
int3
test
xchg
popa
adc
sub
into
jg
rcrl
add
sbb
cwtl
cmc
add
sahf
movsl
into
xor
xchg
jle
cmp
add
push
cld
iret
add
xlat
push
xchg
jnp
hlt
jo
les
cmpsb
loopne
mov
in
dec
mov
ret
lods
mov
hlt
fisttpl
sbb
frstor
lock
imulb
lahf
cld
and
push
enter
cmc
or
les
loope
enter
arpl
push
xor
addl
mov
aas
das
ja
testb
je
outsb
sub
add
test
mov
jmp
nop
jmpw
add
cmp
cs
and
in
mov
xchg
out
mov
stos
jno
add
pop
dec
xor
call
push
inc
adc
lahf
sbbl
in
les
sub
dec
repz
mov
lret
and
xor
jge
pop
jae
lcall
test
cmpsl
mov
insl
lret
sbb
ss
mov
push
fisubl
mov
jns
jnp
imul
pushf
jnp
push
push
pop
mov
dec
shll
jae
or
sub
pop
push
add
mov
pop
div
ffreep
iret
loope
arpl
imul
jl
rcrl
xchg
mov
adc
insb
cmc
test
loope
enter
push
push
adc
xchg
sbb
jmp
add
adc
aam
outsl
pushl
sbb
out
filds
xor
xchg
loop
mov
sbb
add
xchg
cmc
imul
subb
ret
mov
shl
adc
incl
and
xchg
popf
loope
sbb
xchg
xlat
jo
popf
mov
xor
pop
shrb
fstps
pop
inc
push
xor
cmc
jmp
mov
push
mov
xchg
aaa
fstl
push
loopne,pn
bound
jmp
outsl
pop
push
dec
mov
gs
sbb
mov
mov
scas
sti
add
push
aad
mov
outsb
in
xchg
mov
push
xchg
sti
test
or
stos
pop
rorl
mov
xor
pop
ja
inc
xchg
in
and
outsb
mov
or
cmc
mov
nop
cmp
mov
jmp
mov
cmp
jnp
push
cli
jbe
jl
add
xchg
shrl
movb
stos
mov
clc
fsubr
sbb
mov
bound
xchg
popa
or
lahf
inc
enter
lea
push
sbb
push
and
adc
xchg
aad
mov
xor
add
xchg
cli
shl
cmp
pop
jp
dec
or
fdivr
int
test
dec
popf
enter
dec
sbb
add
mov
es
fs
fcompl
mov
dec
stos
iret
dec
fcmovne
mov
cmpsl
mov
daa
adc
sub
js
jmp
adc
call
ret
mov
xor
mov
push
push
hlt
loope
sti
icebp
test
into
fistl
push
mov
or
fldt
frstor
or
ss
jmp
sub
rol
cs
and
sbb
mov
push
stos
and
jo
mov
fisubl
dec
insb
jbe
cmp
test
lcall
pop
cmp
pushw
jle
cmpsl
mov
imul
cld
dec
mov
cmp
xor
add
xor
clc
push
leave
repnz
mov
cmp
imul
mov
fld
sub
leave
jne
cmp
inc
mov
fildl
dec
inc
jns
jmp
push
xchg
hlt
in
mov
ja
out
lds
arpl
xor
xchg
sub
push
cmp
adc
xor
sbb
mov
aas
mov
test
and
div
jp
mov
jno
pop
and
xchg
rol
test
push
movsb
sbb
adc
jne
cwtl
dec
sbbb
xchg
lock
hlt
fincstp
push
jg
mov
cmp
adc
pop
test
outsl
jo
mov
and
dec
push
lock
add
cmp
push
add
mov
rcll
sub
in
sub
aad
mov
inc
sahf
xchg
jmp
fucom
cmp
add
in
arpl
xchg
push
jae
loopne
repz
cmp
mov
mov
pop
pop
jno
jb
lock
or
add
pop
pop
jno
mov
icebp
fwait
sub
adc
mov
roll
xlat
jns
or
mov
out
inc
cwtl
repz
orb
int
out
fidivrl
dec
int
mov
or
cltd
xor
repz
cmp
dec
jl
daa
rorl
xchg
movl
pop
or
xchg
pop
sub
in
das
or
iret
sbb
cmp
push
xor
outsb
addr16
nop
push
icebp
pop
inc
jle
test
cmp
repz
cmp
mov
pusha
mov
insb
js
inc
in
or
sub
sub
enter
dec
cltd
mov
leave
mov
xor
and
dec
adc
mov
mov
mov
dec
push
fsub
jge
xchg
pop
stos
xor
mov
xchg
add
adc
mov
push
push
insl
insb
lock
mov
cmpsl
xor
rorb
repz
inc
pop
daa
push
pop
es
xor
sbb
adc
je
xor
and
pop
out
scas
push
stc
cmp
mov
jecxz
lds
jbe
push
js
lret
ds
popa
sahf
cwtl
test
jmp
imul
pop
or
enter
cmc
adc
sbb
aas
jbe
sub
cmp
push
lods
and
and
testb
dec
sti
jge
sbb
add
lret
mov
ffreep
cmp
pusha
mov
pop
ret
or
sub
cli
sub
pushl
cltd
int
adc
std
add
jg
imul
nop
sahf
lret
negl
pop
imul
or
or
or
pop
cmpsb
jmp
imul
popf
inc
inc
out
mov
imul
cmp
je
mov
ret
outsl
clc
inc
int
arpl
pushf
scas
ret
test
loope
jno
int3
and
nop
cltd
or
shll
jbe
repnz
dec
outsb
jg
and
mov
aad
stos
jo
movsb
xor
je
mov
sbb
mov
lea
divl
add
mov
sahf
xchg
jp
adc
jp
inc
xlat
mov
cs
jp
push
test
or
loope
xor
cli
leave
dec
mov
gs
add
aaa
test
fwait
mov
or
and
lock
mov
mov
dec
pushf
clc
sub
paddsb
xchg
dec
lds
bswap
mov
stc
enter
lret
dec
sub
jle
jns
pop
pushl
jge
xchg
mov
imul
inc
sbb
hlt
movsb
inc
mov
sub
imul
loopne
mov
pop
incb
into
push
es
sbb
into
or
sub
insl
push
into
test
jno
xchg
movsl
mov
out
and
xchg
fldl
adc
cmp
loopne
shl
ds
dec
add
sbb
mov
mov
push
outsb
out
cwtl
pop
adcl
mov
xchg
fidivrs
inc
imul
test
imul
adc
jmp
add
lods
jno
adc
mov
repnz
bound
jo
imulb
pop
cmp
arpl
push
mov
push
push
adcl
sub
and
sarl
aad
js
mov
cltd
int3
fistpl
pop
cmc
jne
in
arpl
sbb
pop
pop
in
es
mov
scas
sbb
mov
add
sub
and
cwtl
push
sbb
jo
daa
out
jns
dec
add
stos
add
aad
incb
ffree
or
and
cmp
mov
sbb
or
int3
pop
ljmp
xchg
adc
mov
movsl
mov
fmulp
loopne
add
cmpsl
jg
dec
out
fisubs
ds
push
ljmp
inc
jnp
adc
and
adc
and
mov
cmp
mull
sub
mov
gs
push
clc
xchg
jge
xlat
pop
fincstp
pop
mov
mov
std
mov
mov
and
enter
sub
xor
mov
daa
jecxz
fildl
or
shl
sub
ljmp
jmp
incl
scas
repz
fildll
adc
lods
cmp
sbb
jge
into
test
cs
jmp
pop
imul
out
dec
mov
xchg
std
pop
sub
aam
xor
cmp
aam
lods
or
push
and
pusha
je
jns
jg
clc
mov
mov
mov
cmp
mov
push
jbe
outsb
loope
dec
lock
loop
jns
mov
test
roll
stos
jne
pop
jle
mov
sbb
sarl
into
xor
push
push
jb
lea
xchg
jb
inc
mov
test
lods
sub
adc
push
jmp
aaa
mov
and
adc
fwait
aam
cli
mov
mov
mov
xchg
test
xchg
pushf
mov
xor
popa
decb
leave
imul
lock
or
shll
scas
pop
imul
stos
cwtl
jb
jecxz
cld
cltd
rcrb
rcrl
mov
xor
imul
sub
jae
pop
faddl
mov
lahf
je
jae
lahf
jmp
add
scas
bound
ret
and
dec
xlat
mov
pop
aad
xchg
jae
or
popa
inc
enter
lret
bound
dec
dec
sar
xor
sahf
sub
leave
stos
int
bound
pop
outsb
cmpsb
lods
adc
lcall
xor
sub
or
jecxz
push
jae
and
push
mov
and
xor
sub
cltd
lds
add
push
pop
inc
add
mov
adc
xor
outsb
push
cmp
adc
imul
out
mov
call
incl
popa
add
add
xor
pusha
lret
sahf
mov
push
popa
ret
in
sub
sub
mov
cmpsb
daa
out
xchg
pop
mov
push
pop
mov
sub
popf
lret
xchg
ss
mov
hlt
clc
fldt
jmp
add
pop
aam
dec
inc
ljmp
adc
mov
xor
sub
mov
insb
loop
mov
jo
add
adc
xor
lock
ds
arpl
push
pop
std
jge
xchg
jmp
lret
faddl
test
adc
add
xor
popf
jns
mov
cwtl
lods
test
add
lret
jmp
lcall
test
add
sub
adc
mov
fucom
push
or
cmpsl
pop
flds
fs
mov
push
or
movhps
jne
mov
push
stos
cvtdq2ps
add
add
and
add
mov
mov
rcrb
jl
mov
leave
adc
jg
sub
adc
xchg
loop
jo
mov
push
fistpl
stos
movsb
int
jns
sbb
add
push
jg
cmp
mov
fldt
jb
jae
dec
sbb
loopne
dec
iret
sub
sbbl
dec
leave
sbb
leave
sbb
inc
mov
mov
rol
lret
mov
xchg
add
shr
xchg
sub
out
jmp
inc
dec
rcrb
mov
sub
pop
cmp
xor
sbb
out
dec
into
fistl
cmp
and
xlat
jnp
cmp
lods
fldt
add
testl
test
nop
add
popf
fs
mov
pop
scas
mov
mov
adc
xorl
xor
xchg
mov
repz
in
vmovdqa
or
push
jp
fildl
lods
out
jne
outsl
or
pop
fstps
and
cmpsb
pop
inc
testb
add
add
in
out
lods
idivl
leave
push
mov
push
inc
fcompl
pop
arpl
loope
test
popa
cs
push
inc
shr
sub
pop
out
dec
push
test
les
pop
jno
mov
imul
lods
inc
mov
and
outsb
adc
aaa
pop
into
fcompl
inc
mov
mov
shrl
xlat
sub
out
push
mov
loopne
call
mov
ja
aas
push
xchg
inc
test
ret
cmpsl
dec
add
inc
and
js
mov
jmp
repz
adcb
ds
les
outsb
scas
sbb
addr16
mov
xchg
lret
insl
jge
jmp
ljmp
add
xchg
int3
pop
repnz
add
dec
out
sbb
cmpl
jp
jbe
daa
xor
int
dec
pop
pop
movsb
lock
cmpsl
sahf
jl
inc
lcall
enter
jle
sub
sub
aas
hlt
cs
lods
jb
call
sub
xor
fwait
ret
sub
jae
push
sarl
stos
inc
mov
xchg
jp
and
in
inc
pusha
into
movl
or
daa
xchg
xor
or
mov
outsb
es
mov
mov
inc
add
push
inc
cs
and
aad
mov
push
rcr
in
subb
xchg
lret
push
xchg
inc
jne
xlat
testb
inc
xlat
fbld
loope
hlt
and
test
aam
jns
nop
invd
scas
rclb
mov
rcl
or
inc
add
aas
xor
xor
jg
ss
mov
cmp
loopne
insb
jecxz
inc
xchg
fnclex
dec
sarl
sub
inc
imul
mov
test
xchg
es
and
aad
sbb
push
xchg
aam
movsl
push
stos
int
mov
mov
cmp
push
xchg
stos
lret
sbb
nop
and
adc
xlat
rcrb
mov
lods
out
push
push
mov
xchg
shrb
lret
push
and
ja
fisttps
and
sbb
popa
mov
inc
inc
icebp
sarb
ja
out
je
repnz
mov
xchg
jno
das
cmp
dec
push
mov
cmc
int3
repnz
and
out
lods
scas
dec
mov
mov
xor
jo
lea
cmp
js
rolb
test
mov
scas
lret
inc
mov
lret
jns
jmp
xchg
mov
push
jbe
cli
jmp
cltd
sub
cwtl
imul
or
insl
dec
xlat
filds
jle
mov
mov
adc
idivb
push
pop
mov
mov
cwtl
pop
or
fisttps
push
push
sbb
xor
push
push
push
push
dec
faddp
test
and
cmp
cwtl
out
mov
arpl
sub
sbb
cwtl
div
fnstsw
push
icebp
push
jae
aad
mov
lcall
adc
xchg
movsl
fwait
inc
inc
leave
xor
inc
dec
movsl
xchg
gs
add
leave
sub
lret
and
mov
mov
outsb
xor
inc
dec
stos
pop
cwtl
sbb
xor
arpl
insb
pop
push
movsl
test
sub
lock
cmpsb
test
xor
add
das
xchg
cmp
push
mov
inc
xor
ficomps
jl
icebp
xchg
scas
cwtl
mov
icebp
sar
xor
insb
mov
addr16
or
jge
mov
sub
cld
xlat
sbb
cs
and
push
out
mov
jbe
sbb
leave
in
jns
call
sbb
cmp
in
push
jmp
sahf
das
lods
ret
fiadds
mov
sbb
add
jns
mov
mov
ds
insl
das
cmp
fldcw
dec
jp
cld
lods
mov
sahf
cld
pusha
fsubl
lea
sbb
inc
scas
inc
sbb
stos
or
pop
lods
int
ljmp
mov
idivl
xor
cmp
jge
xor
arpl
cwtl
jb
into
inc
adc
cs
and
aad
lret
push
mov
push
fisubl
jl
in
cmp
sbb
lock
dec
popf
sbb
cmpsl
cmp
and
sbb
inc
xchg
shll
xor
sub
outsl
add
adc
mov
out
js
cmp
mov
push
or
lcall
mov
add
or
pop
sbb
ljmp
sbbb
inc
mov
or
dec
cmp
test
leave
add
in
es
xor
je
jmp
inc
cld
jg
push
nop
shrl
lds
in
push
adc
mov
mov
fcomps
pusha
hlt
pop
test
arpl
cmc
ljmp
lds
addr16
jae
ja
das
outsb
subb
dec
mov
addr16
mov
cmc
out
sub
cmp
rcll
idivb
mov
lea
sar
or
jmp
cmpsl
inc
sahf
fwait
out
mov
js
shrb
mov
mov
cmp
subl
inc
inc
pop
mov
and
push
pop
pop
inc
out
loop
mov
inc
movsb
mov
cmp
mov
test
bound
mov
imull
xor
push
xor
mov
mov
jg
fsubr
push
pop
jo
sbb
cmp
movsl
and
bound
popa
pusha
idiv
fadds
mov
jp
jmp
sub
idivl
jl
cmc
hlt
repz
lret
inc
and
and
addr16
ret
or
mov
stos
xlat
cmp
mov
adc
or
xchg
shlb
mov
fdivrs
add
jge
add
mov
mov
or
or
aam
mov
rcl
fwait
and
enter
mov
xor
fnstsw
cmp
dec
adc
into
sti
adc
loope
cmc
gs
jne
mov
xor
fildll
nop
movsb
pop
or
or
cmp
jecxz
lds
push
mov
inc
or
ficoms
mov
sbb
fwait
jp
xor
into
popa
mov
push
cmp
sbb
dec
mov
cmpsb
dec
lods
push
ss
cmp
inc
jge
adc
sbb
insb
stos
es
mov
mov
aam
xor
arpl
daa
adc
mov
call
mov
and
push
jl
cmp
xchg
or
and
jecxz
xorps
or
orl
es
cmp
inc
arpl
adc
xchg
imul
les
xor
cmp
into
mov
fisttps
icebp
loope
pop
and
out
jb
push
dec
inc
sti
pop
sub
lret
cmc
inc
adc
negl
mov
fdivl
pop
les
divl
xchg
mov
arpl
out
jns
or
or
adc
in
lcall
out
push
imul
stc
sbb
push
ficomps
sbbb
ljmp
push
mov
popa
or
mov
sub
sub
cmp
rcrl
cmp
pop
scas
pop
orb
inc
add
movsl
fsubs
inc
jno
adc
jg
sbbl
ss
sbb
xor
nop
adc
and
dec
imul
faddl
ss
sbb
sub
adc
and
xchg
in
inc
pop
or
adc
jp
es
sub
addr16
pop
sbb
jmp
inc
pop
cltd
ret
inc
push
leave
jae
mov
divb
push
inc
cmp
inc
cmp
adc
lcall
xchg
mov
imul
sub
popa
sub
sub
pop
add
and
jne
cmp
xlat
xchg
adc
cmp
push
lret
lea
xchg
mov
fisubl
shl
jecxz
mov
xchg
sbb
sbb
mov
pushf
mov
jnp
sbb
rcr
push
sub
push
mov
cmpsl
jnp
imul
jge
negl
mov
fisubrs
popa
addl
bt
gs
push
xor
mov
call
sbb
xchg
push
inc
shr
rcrb
and
shlb
rcrl
popl
test
sub
dec
clc
out
pop
and
dec
or
jl
stos
pop
jle
lods
push
ficoml
ss
es
cmc
std
movb
mov
mov
mov
lahf
psraw
enter
adc
repz
testl
sbb
pop
mov
js
ljmp
rcll
cmc
lea
mov
sbb
or
shrl
adc
xchg
enter
cwtl
repnz
jbe
in
addb
or
sbbl
sbbl
das
push
xor
dec
es
repz
sbb
arpl
mov
cmc
aas
and
insl
imul
ret
test
sahf
or
push
pop
cmpsl
sti
scas
fbld
push
into
cmpsb
fldt
sbb
lods
inc
shll
imul
inc
add
jp
adc
hlt
sub
push
xchg
aam
int
stc
inc
jge
sub
cmc
mov
mov
jb
std
jmp
sbb
pop
fiadds
mov
popf
cmp
cmp
push
mov
pop
mov
test
test
fistpl
or
push
mov
sub
fnstcw
inc
mov
inc
test
pop
add
cwtl
mov
mov
outsl
add
xor
jp
test
or
pop
push
mov
mov
mov
out
or
loope
pop
enter
jg
and
pop
lret
out
adc
jmp
or
bound
add
push
sbb
jo
movsb
and
push
jbe
and
sub
ret
pushf
in
fwait
les
lahf
aad
and
sub
out
fdivrl
test
mov
fwait
gs
cli
xchg
xchg
and
testl
mov
mov
outsl
push
xchg
daa
lea
enter
cwtl
test
xchg
leave
inc
sub
jge
inc
jmp
dec
aam
mov
xchg
sub
and
mov
ss
mov
ds
push
pop
lahf
sub
mov
mov
je
cmpl
xchg
pop
mov
inc
insb
divl
sbb
sbb
shlb
cld
ficomps
push
scas
pop
or
repz
pop
fsubs
adc
push
xor
sub
loop
dec
pusha
out
push
inc
xor
outsb
int
push
hlt
sub
dec
cmp
sbb
notb
andl
adc
leave
cmp
dec
lahf
sub
std
push
bound
mov
jae
testl
cmp
iret
cmp
sub
cmp
rclb
rcr
xchg
mov
out
dec
lret
movsb
sahf
xchg
repnz
movsl
jo
and
cmp
pop
inc
xor
repz
add
mov
cmp
aam
sti
dec
lds
test
xchg
js
add
cld
jge
push
push
push
in
inc
imulb
pop
insl
pop
add
jp
mov
cmc
xchg
mov
stc
jne
xchg
xor
or
cs
pop
jecxz
pop
add
add
or
mov
fdivl
mov
adc
push
repz
and
lret
out
std
movsl
and
aam
pop
lock
xchg
sahf
xchg
cmp
insl
jbe
add
pop
clc
sub
mov
bnd
lcall
and
mov
jmp
das
sub
idivb
daa
sahf
fcomip
mov
dec
inc
and
dec
arpl
or
or
insl
fcmovnb
cld
idiv
enter
and
sbb
imul
aaa
inc
imul
add
jge
xchg
mov
arpl
clc
loop
xchg
les
roll
adc
cmp
pop
mov
mov
push
pop
arpl
mov
data16
jge
cmpsb
ss
scas
mov
fcoml
aad
cmp
mov
test
loopne
inc
insb
inc
jno
mov
leave
loop
rorb
lret
mov
rcll
mov
aaa
pop
aam
pushaw
subb
xlat
sbb
fsubl
inc
mov
adc
out
sbb
push
adc
pop
int
jl
cmc
aas
adc
adc
push
lock
xchg
add
xor
inc
sbb
xchg
mov
ficomps
pop
push
xchg
mov
pop
adc
lods
push
ret
repnz
into
shlb
inc
stos
daa
outsb
loop
mov
mov
aam
jg
pushf
data16
sbb
jne
add
ja
dec
jns
cmp
pusha
lock
sbb
mov
adc
ljmp
in
imul
adc
cmp
jg,pt
mov
flds
test
fbstp
pop
lods
paddusw
sahf
xchg
mov
cwtl
imul
mov
mov
sbb
jae
or
andb
fisttpll
cmc
sbb
in
and
cmpsb
ret
sub
and
fs
dec
ljmp
fcomip
mov
jge
add
jmp
flds
sahf
leave
xchg
lahf
loop
pusha
fmul
dec
xor
mov
sub
inc
inc
dec
shlb
rcrb
add
dec
mov
pop
subl
push
aaa
push
xor
std
xchg
push
in
lret
fucomip
aad
shl
es
inc
dec
xchg
js
push
daa
dec
stos
nop
bound
fildl
push
xor
shrl
or
push
xchg
xchg
pop
jne
xor
cltd
cltd
repz
shll
rolb
push
aad
and
mov
jg
xor
jb
ja
dec
stos
fs
pop
sbb
push
test
cmp
in
xchg
cmc
inc
scas
pop
daa
inc
pop
add
gs
jecxz
add
cmpsb
xchg
mov
add
cmc
dec
jle
addl
enter
das
std
in
xor
cwtl
sbb
xor
ret
cmp
sbb
push
xchg
lcall
dec
arpl
sahf
lcall
adc
loope
call
sub
jle
push
mov
jmp
mov
rcr
cltd
pushf
xchg
fldcw
jmp
adc
andb
sbb
bound
mov
jne
jle
stc
sarl
fstps
sbb
andl
push
notb
test
fists
mov
aas
imul
and
lret
add
pop
or
out
cmp
jnp
imul
aas
ficomps
data16
sbb
mov
sti
mov
subb
and
adc
cmp
sbb
cmpl
mov
lahf
push
pop
stos
xchg
cwtl
mov
in
daa
stos
jle
push
stos
xor
jae
jnp
dec
stos
pop
loopne
add
loope
fnsave
fsubr
pop
mov
ret
lret
push
fs
mov
and
popa
imul
fcomi
nop
sti
and
dec
jge
lods
push
cmp
xor
xor
hlt
hlt
das
mov
out
lods
mov
push
sbb
call
push
push
fwait
adc
jns
popa
xor
push
sbb
pop
inc
push
imul
les
lcall
sbb
cmp
cmp
jg
outsl
xor
cmp
cmp
jmp
pop
mov
dec
add
pusha
xchg
aam
inc
icebp
jg
mov
mov
sbb
cs
int3
orb
loop
xchg
push
push
sub
dec
sbb
outsl
lock
dec
data16
pop
movsb
xchg
mov
jl
dec
mov
sub
xlat
test
ret
inc
xor
xchg
cmc
push
fwait
jb
das
push
aaa
lds
lea
xorl
js
jns
jecxz
sub
pushf
out
cmpsb
cmp
pushf
mov
es
popl
jg
inc
inc
xchg
lcall
mov
inc
and
mov
mov
gs
inc
inc
lods
decb
icebp
push
movsb
xlat
pop
push
movsl
idiv
sarb
pop
outsl
xchg
pop
or
pop
das
cmp
adc
stc
movsl
cld
push
mov
or
add
dec
ficoml
testl
mov
sub
out
in
cmpsl
fsubrl
pop
sbb
aad
lds
or
sti
inc
xor
push
xchg
and
cltd
inc
mov
inc
jecxz
imul
cld
xor
xor
push
fcmovb
pop
cwtl
and
aas
ljmp
lds
pop
in
ja
push
enter
xlat
daa
jle
add
shrl
iret
push
and
cmp
into
icebp
fistps
cmp
sti
cmp
sti
xor
xor
ss
and
out
push
pop
enter
in
stc
or
push
adc
cmpsb
in
cmp
je
inc
iret
in
scas
cmpsl
out
into
or
and
cli
call
jne
mov
adc
pop
out
popf
sahf
pop
cli
shrb
mov
leave
ja
mov
loope
fcoml
shlb
jno
mov
jno
arpl
imul
fsubr
dec
inc
mov
push
xchg
cld
and
cmc
xchg
push
mov
std
test
iret
in
or
adc
repz
push
xchg
inc
out
adc
cli
rclb
inc
test
loope
test
mov
repnz
and
sbb
test
jbe
jae
je
jg
jb
lods
test
push
sub
ds
cmp
mov
add
pop
cmp
fistpl
idivb
inc
push
out
adcb
pop
and
pop
push
lcall
aaa
pop
push
pop
mov
out
shl
cli
jmp
aaa
and
daa
imul
jmp
ret
iret
enter
push
push
sbb
jns
sbb
dec
xor
mov
stc
pop
cmp
push
cltd
mov
repnz
push
adc
jbe
inc
push
divb
nop
adc
push
adc
repnz
pop
push
pop
add
fldenv
pop
jp
xlat
fnsave
xchg
adc
cmp
in
pop
mov
mov
cwtl
stos
add
fadds
jbe
and
jg
mov
testl
popa
in
mov
sub
loope
movsl
dec
pop
or
sbb
push
cwtl
rol
jg
sub
enter
xchg
mov
pop
add
and
sbb
xchg
lds
xor
push
pop
in
cmp
mov
ret
xchg
iret
je
dec
mov
or
ss
lcall
insl
lods
pusha
sbb
add
idivl
jcxz
in
push
stos
add
mov
xchg
scas
iret
add
jecxz
sub
ja
sahf
movl
pushf
int
mov
jle
dec
and
jbe
mov
ss
cmp
mov
inc
mov
adc
mov
jnp
xor
dec
cmp
sub
push
loop
in
and
in
outsl
cmp
dec
out
push
sub
adc
out
jmp
les
add
cld
pop
jle
sbb
popf
sub
lds
inc
push
stos
mov
dec
test
test
inc
ds
cmovne
and
ja
sti
dec
int3
cltd
imul
xor
ret
mov
fisttps
pop
cld
push
fs
stos
push
adc
sti
inc
pop
lret
into
pop
sub
mov
dec
jbe
repz
mov
fwait
push
xchg
bound
pop
mov
in
mov
pusha
cmpsb
mov
mov
aaa
leave
mov
aas
adc
pop
mov
mov
inc
mov
mov
pop
sub
ljmp
inc
and
mov
fimuls
push
cmp
mov
mov
insb
fidivl
insl
pop
inc
push
adc
mov
fbstp
cmpsl
push
stos
pop
mov
mov
push
or
mov
mov
push
aaa
and
push
fistl
jecxz
aas
int3
bound
ret
cmp
lcall
inc
icebp
ja
xor
push
and
xor
sbb
jecxz
ficoml
into
outsb
imul
mov
pop
push
sub
jp
mov
andb
mov
or
test
cltd
test
jg
loope
iret
imul
xor
imul
sbb
mov
or
dec
cmp
pop
lcall
or
inc
push
dec
adc
mov
sbb
arpl
and
lea
jmp
or
outsl
mov
mov
nop
aam
pop
mov
mov
mov
sub
push
dec
push
popa
frstor
jb
sub
cmpb
pop
jmp
in
xchg
xchg
add
push
mov
cltd
mov
mov
js
sub
in
cmp
out
stos
popf
out
outsb
pop
and
popf
incl
les
data16
sbb
jmp
adc
xor
enter
ja
je
shlb
push
loopne
stc
mov
dec
das
dec
loope
or
inc
mov
lcall
cltd
jp
xchg
add
lahf
lret
dec
adc
out
mov
cltd
sub
adc
xchg
test
in
lock
movsl
pop
addb
and
insb
or
stos
int
test
mov
jo
xor
adc
andb
or
push
xchg
shlb
xor
push
push
lcall
push
imull
mov
sub
lock
or
shlb
jmp
sbb
jl
gs
out
movsl
sti
dec
mov
out
dec
lret
jne
push
mov
mov
sbb
or
mov
or
dec
imul
xchg
cld
out
les
jae
stos
imul
push
adc
sarb
sub
jns
ret
repnz
xor
fbld
pusha
addr16
andl
or
arpl
leave
add
imul
dec
pop
inc
pushf
push
adc
dec
rcrl
cmp
mov
fstpt
pop
pop
mov
xchg
popa
xor
inc
fdiv
dec
pop
ljmp
push
in
inc
xlat
lret
pop
into
ds
mov
inc
divb
inc
add
mov
mov
shlb
out
sar
in
cmovbe
pop
or
loope
dec
pop
in
add
mov
mov
out
cli
shr
and
imul
mov
sarl
mov
mov
nop
mov
test
jnp
push
inc
add
push
stos
jns
cmp
add
mov
xlat
andnps
bound
loopne
pop
pushf
fldenv
out
mov
xchg
test
fstl
dec
dec
inc
scas
add
in
push
push
xor
dec
sub
jno
add
mov
loop
push
dec
and
shl
cli
xchg
xorl
cmp
pushf
cld
xor
inc
popa
adc
inc
pop
repnz
mov
cmp
pop
iret
mov
pop
fstpt
mov
rorl
inc
xchg
clc
or
inc
or
jp
rolb
insl
mov
sbb
fsub
lods
add
js
js
inc
insb
out
int3
mov
out
jmp
std
pop
std
cmp
pop
mov
clc
xor
pop
mov
push
or
sub
push
push
xchg
xchg
movsl
les
and
jg
scas
je
mov
or
imul
outsl
stos
sar
das
or
jg
push
mov
sub
cmp
incl
mov
pop
addr16
or
dec
sbb
cmc
mov
mov
mov
add
int3
icebp
pop
sub
mov
mov
fabs
dec
addr16
popaw
mov
push
inc
hlt
fmulp
cmp
xor
mov
rcrb
cs
lret
or
je
shl
xor
jg
sbb
pop
fdivrl
insb
mov
jne
jecxz
outsl
jns
pop
cwtl
sub
jecxz
mov
cmpsb
mov
add
iret
adc
push
or
clc
mov
cs
in
negb
sahf
pop
push
mov
sahf
mov
mov
mov
sbb
loopne
mov
mov
test
sub
lcall
hlt
mov
lret
js
popa
xor
cmc
cmpsb
mov
jle
inc
adcb
cmp
fs
movsb
cwtl
or
les
jmp
loope
negl
mov
aam
xchg
cmp
psllq
in
mov
cs
dec
ja
loope
push
scas
jno
sbb
xchg
repnz
sbb
addr16
cmp
xchg
pop
cmp
xorl
push
adc
sub
cs
cmp
add
iret
in
mov
xor
fsts
mov
push
iret
sub
lcall
cmp
repnz
shlb
pop
dec
pop
scas
scas
and
addb
ja
mov
mov
push
adc
cltd
movb
gs
adc
mov
sti
sbb
leave
push
rcrl
test
and
sti
lret
mov
adc
ljmp
mov
pop
and
repnz
popa
js
pop
cs
es
or
jp
loope
inc
repnz
in
pop
mov
rorb
aas
stos
ret
xor
or
and
neg
into
mov
or
sahf
jne
fnstenv
jge
out
mov
pusha
lock
push
scas
mov
add
mov
xchg
cs
std
scas
aaa
mov
jl
bound
inc
mov
or
mov
adc
xor
test
or
and
adc
test
insb
sub
pop
shll
pop
dec
ficomps
dec
aam
lods
pop
imul
jecxz
std
cmp
repnz
sbb
cmp
mov
xchg
mov
pop
pop
add
stos
loope
mov
loop
cmp
inc
cmp
pop
rcrl
sub
fmuls
fwait
aaa
imul
dec
add
daa
xchg
ja
sbb
pop
int3
lods
test
sbb
xor
mov
inc
leave
daa
add
shll
xchg
add
inc
cmp
dec
stc
adc
jl
mov
popf
dec
rcl
adc
push
sbb
cli
mov
and
lret
mov
mov
lret
outsl
jmp
push
test
aaa
sti
es
mov
sti
add
mov
aam
jb
xlat
ss
xor
test
and
push
and
fistl
addr16
cld
js
icebp
fcompl
xor
mov
stc
or
mov
cs
mov
add
mov
insl
xlat
scas
pop
cltd
inc
cld
flds
push
sahf
xchg
loopne
ja
push
pop
add
fldt
stos
mov
ret
lret
lock
dec
mov
enter
mov
jmp
and
mov
dec
mov
sub
dec
sti
mov
out
outsl
push
push
pop
sbb
sti
mov
pushf
xchg
inc
sbb
divl
outsb
add
cmpsb
cmpsl
aaa
xchg
js
fdivrs
adc
xor
cmp
jno
lcall
test
int3
les
insl
sti
xchg
nop
jp
popf
sbb
and
or
cmp
push
mov
inc
int3
push
aad
les
push
cltd
inc
mov
orb
jle
sbb
lods
rorl
jbe
fwait
xchg
ss
cli
roll
cltd
add
jl
pushf
mov
mov
jb
pop
ss
test
stos
sbb
inc
rcrb
fnsave
push
pop
call
jnp
push
xorl
cmp
jbe
incl
lret
out
mov
inc
in
movsb
insb
jae
movsb
pop
mov
fdivrs
sub
sub
fldt
or
inc
sbb
sbb
out
fld
in
mov
std
in
divl
and
je
pop
mov
ss
loop
add
or
cmp
xchg
sbb
mov
mov
lods
pxor
jns
cmpsb
add
pusha
aas
mov
fwait
and
leave
mov
ss
cmp
jb
push
jle
or
fisubl
mov
popa
fs
pop
jo
mov
fst
mov
cmp
jnp
jle
stos
popf
adc
add
dec
sbb
movsb
jg
jb
and
xchg
iret
mov
and
sbb
dec
lock
inc
sbb
cltd
mov
jmp
cmc
aam
andl
cmp
xor
mov
outsb
push
or
cmpsb
loop
inc
sbb
pop
push
jge
mov
test
pop
push
sbb
pop
lock
movsl
je
es
inc
outsl
out
mov
xchg
push
and
mov
adc
cmpsb
pushf
and
sub
insb
popa
std
psubusw
ret
das
mov
mov
cmp
jg,pt
aam
fists
sbb
out
push
mov
repz
xor
orb
xchg
mov
cltd
pop
lahf
inc
cmp
gs
xchg
cmp
inc
inc
xchg
sbb
cli
hlt
stos
jmp
jnp
fs
add
push
mov
jecxz
subl
rol
aad
xor
jnp
dec
push
push
repz
inc
nop
push
sarl
cmp
ficomps
pop
das
bound
icebp
fists
loop
pop
lret
push
dec
xor
jl
mov
and
and
or
out
or
jl
test
mov
mov
iret
lods
mov
inc
mov
sub
pop
aaa
in
lds
cmp
xchg
je
mov
lret
int3
out
mov
dec
lahf
jg
dec
dec
out
mov
popa
shrl
inc
iret
ja
aaa
test
push
pop
je
sub
fadd
cmc
fcomps
test
pop
adc
test
or
xlat
mov
subb
imul
add
bound
dec
addl
and
sub
or
outsl
and
xchg
subb
adc
dec
popf
sub
pop
ja
mov
xor
rcll
fsubp
int3
push
sub
push
mov
push
lahf
fbld
bound
add
adc
pop
stc
adc
iret
inc
popa
scas
in
fldenv
mov
orb
insb
add
dec
xchg
sbb
inc
dec
add
data16
out
cmp
sarb
push
push
aaa
mov
sar
ljmp
xor
fwait
les
loop
mov
jns
fs
sbbb
fsubp
sbb
iret
fwait
and
mov
mov
cltd
xchg
int
fiaddl
mov
loopne
xor
lret
cld
or
adc
je
pusha
sti
adc
loope
pop
ret
fcmove
punpckldq
push
and
sub
int3
jnp
add
mov
xchg
inc
data16
ss
leave
es
pop
sahf
push
inc
pop
xchg
xchg
jbe
movsl
movsb
cmp
mov
sbb
and
icebp
sbb
mov
test
mov
sahf
cmp
adc
scas
cmpsb
mov
xor
push
addb
or
leave
insl
pop
jno
sti
mov
insl
into
xchg
addr16
push
push
fsubrl
cmp
in
xor
mov
pop
adc
test
andl
xor
or
sub
lret
mov
hlt
fdiv
xchg
xor
pushl
inc
icebp
adc
or
push
addr16
nop
addr16
jne
xchg
cli
xchg
cmp
imul
icebp
mov
sub
or
xor
aaa
add
pop
jae
mov
mov
punpcklbw
xlat
xchg
xchg
sbb
mov
aaa
mov
shl
jo
repz
push
mov
in
mov
in
rorb
cmpsl
mov
jbe
outsl
add
repz
ret
push
dec
fisubs
or
leave
sbb
mov
cmpsb
lret
pop
lds
xchg
adc
in
pop
mov
arpl
sbb
push
mov
ficoms
jp
xchg
mov
inc
mov
lea
and
pop
xor
enter
psrld
push
fisttpll
add
inc
dec
call
lret
jo
outsb
cmc
sarb
fidivl
test
popa
xchg
xchg
adc
stc
adc
repnz
js
jg
jne
fdivrs
repnz
pop
cmpsb
dec
fstl
pushf
loop
and
adc
stc
cmp
xchg
test
ja
stos
cmpsl
fdivrl
adc
lock
in
jns
jo
outsl
jp
loop
scas
push
xchg
inc
jle
movsb
sar
popf
jg
push
mov
xchg
jo
xor
or
imul
add
xor
sub
xchg
idiv
dec
dec
pop
sub
cmp
add
sti
jnp
push
jnp
add
mov
rcll
jns
xchg
mov
xchg
xchg
jno
std
vunpckhps
lds
jnp
xorl
out
clc
pop
jno
lock
nop
pushf
cmp
inc
ret
hlt
sti
push
repnz
xchg
sub
and
ret
ds
xchg
cmpl
ret
push
sub
ds
lcall
mov
pop
test
sub
cmpsl
lahf
push
icebp
lock
pop
lock
int3
xchg
mov
xchg
dec
inc
sbb
jns
mov
notb
scas
lock
sub
outsb
mov
scas
je
sub
addb
cmp
mov
daa
stc
fs
std
mov
sub
arpl
push
mov
push
dec
mov
pop
fdivs
sbb
outsb
test
int3
rorl
xor
clc
push
fnstenv
cld
sbb
or
loop
bound
dec
popf
sbb
mov
mov
xlat
push
js
mov
push
insl
out
push
lret
sar
out
dec
dec
or
sbb
or
pop
jmp
dec
aaa
push
test
pop
jne
repnz
cli
aad
xchg
das
xchg
out
in
mov
and
ja
loopne
add
bound
je
push
jbe
or
adc
cmp
pushf
js
sbb
js
and
mov
pop
inc
xchg
nop
into
push
hlt
cmp
xchg
sbb
ss
pop
jecxz
and
adc
mov
je
jmp
sub
les
xchg
fsubl
test
outsl
mov
ret
mov
mov
push
xor
sti
loope
dec
sbb
and
sbb
mov
fwait
nop
inc
mov
mov
int3
mov
xor
dec
int
mov
sub
and
mulb
xchg
cwtl
dec
sbb
mov
mov
jle
shll
je
mov
sti
cmc
pop
jbe
fsubrs
movsb
rorb
lahf
dec
mov
ja
ret
push
and
jbe
cld
addr16
jno
dec
call
scas
out
into
inc
je
into
jnp
aaa
pop
cmova
in
add
lcall
fbld
xor
adc
pop
jns
clc
cmp
pop
push
les
mov
or
jle
add
jne
sahf
lahf
call
xor
dec
push
fmull
stc
and
pop
push
repz
mov
push
cmpsb
cmp
lcall
pop
add
popf
xor
sub
cwtl
mov
fmuls
and
subb
lds
xor
and
mov
pusha
and
into
sbb
mov
push
mov
mov
clc
jb
enter
sbb
ret
jl
iret
xor
push
ficoml
sub
mov
loop
adc
inc
mov
mov
stc
scas
shrl
mov
pop
movsl
loop
xor
inc
sub
stc
lret
push
out
adc
inc
sahf
mov
aas
xchg
xor
sub
adc
push
lds
call
jns
test
push
popa
inc
int
cmp
das
div
fmull
sbb
xchg
mov
add
dec
push
pop
adc
sub
fs
xlat
jae
idiv
adc
icebp
fcmovnu
ficoms
in
rcrb
scas
and
and
rcl
or
jg
sub
and
sbb
rol
xor
sub
movsl
jnp
adc
subb
lcall
data16
sub
adc
push
into
sub
add
mov
mov
das
or
pop
add
sbb
cmpsl
out
sbb
lds
cmpsb
int3
loop
lea
cmp
jmp
push
and
int
out
pop
iret
sahf
dec
fnstcw
insl
in
data16
sub
subl
cltd
shlb
xchg
push
cmpsl
cmp
loop
mov
lcall
push
jae
and
sub
add
xchg
les
jae
push
push
lock
add
xchg
inc
popa
mov
sbb
adc
adc
cmp
out
lahf
pop
xor
int3
xlat
fisubl
aaa
icebp
insb
inc
in
mov
and
sbb
jo
push
rcl
jb
aad
mov
aad
or
out
ss
push
pushl
xlat
xor
mov
std
jp
mov
loopne
mov
xor
pop
xor
mov
int3
sahf
cmp
call
jno
stos
cmpb
cmc
ret
add
js
pop
sbb
jbe
addr16
sub
out
add
add
pop
fldt
push
dec
inc
push
int3
cmp
stos
jmp
lods
lahf
mov
dec
gs
jne
mov
sub
pop
mov
inc
xor
add
jns
push
sarb
std
jge
inc
imul
cmp
pop
sbb
shrl
pusha
mov
lss
imul
aad
push
add
mov
push
cmp
mov
cmp
add
loope
jge
mov
movsl
cmp
cmpsl
jne
ret
cmc
out
mov
stos
in
fstpt
cmp
loope
mov
mov
fldcw
sbb
xchg
pop
insl
outsl
mov
sub
lret
orb
ss
inc
fwait
aam
pop
mov
and
xchg
mov
cmpsl
movsb
and
negb
in
cmp
shlb
or
mov
scas
push
lods
test
jp
jno
fisttpl
pop
lea
addr16
lcall
repz
xchg
mov
imul
inc
inc
cld
mov
mov
pusha
adc
aaa
mov
sbb
push
inc
aad
out
and
ljmp
mov
in
dec
lret
stos
pop
repz
cld
inc
ficomps
enter
sbb
pop
push
xor
mov
push
mov
xchg
mov
lahf
pop
imul
in
pusha
sbb
xchg
xlat
xchg
mov
in
xchg
dec
fadd
addr16
daa
clc
enter
cmpsb
ret
scas
fstpl
xor
inc
mov
dec
and
pop
test
pushf
loope
test
mov
fnsave
ret
dec
out
lea
push
mov
in
loop
mov
sbb
xor
out
and
push
sbb
xchg
gs
fimull
push
mov
xor
pop
xor
int3
ljmp
data16
popa
xchg
imul
cmp
pushf
stos
ret
mov
cmpsb
pop
or
addr16
and
xchg
xor
mov
inc
out
into
outsb
cltd
push
xlat
das
mov
cmp
outsb
ret
mov
mov
pushw
mov
outsl
fwait
jns
fs
sub
jle
mov
sbb
fbstp
add
fsubr
lahf
lods
mov
popa
cmpsb
xor
or
xor
popa
dec
adc
push
leave
lahf
ljmp
push
std
fwait
es
sbbl
das
sar
mov
movsb
aad
and
aad
jne
jb
mov
fistl
mov
or
movsb
in
cmpsb
cltd
jno
js
jecxz
aaa
lods
xor
mov
test
outsl
push
test
fbstp
inc
inc
lret
pop
fwait
cmp
fsubrs
push
xlat
mov
mov
hlt
sub
test
idivb
xor
or
adc
inc
insb
lea
mov
stc
rcr
clc
arpl
cmpsl
lret
pop
mov
pusha
xor
mov
mov
mov
or
pop
adc
dec
or
aas
mov
stos
xchg
cli
aas
pop
mov
stc
xor
cmp
mov
pop
stos
and
lcall
dec
cltd
and
into
lock
jp
or
xchg
and
jecxz
movsb
xchg
cld
pop
lock
xor
aas
mov
movsl
and
cmp
dec
imul
fistps
xchg
pop
xchg
out
xchg
jle
mov
sbb
pushf
pop
xor
popf
rcrl
mov
scas
inc
xchg
cwtl
scas
mov
packssdw
jno
leave
and
out
cmc
sub
out
loopne
divl
add
loop
movsb
jl
and
dec
mov
scas
push
mov
out
push
pop
test
rcll
loop
sub
mov
pop
pop
clc
scas
mov
mov
leave
addl
imul
repz
jbe
mov
mov
pop
in
nop
scas
sbb
push
mov
test
sahf
out
mov
out
mov
outsl
dec
lret
cld
jge
ficomps
and
or
sbb
jl
cld
mov
rclb
mov
nop
lretw
xchg
push
aas
jecxz
scas
arpl
pop
sub
gs
aaa
aad
ret
mov
stos
sbb
mov
lret
xchg
or
mov
jmp
scas
push
sub
dec
subb
dec
or
push
sbb
daa
cmpsl
ljmp
xor
pop
ret
inc
leave
aaa
xchg
add
adc
xchg
sbb
or
lock
aad
pop
pop
push
pop
or
mov
sub
dec
test
js
xor
xchg
xchg
jle
lods
repnz
and
cmp
imul
daa
sub
xor
lea
lods
rcrl
call
cmp
push
cwtl
cmp
lock
clc
notb
adc
xor
mov
scas
lret
inc
fld
fbstp
xchg
popf
mov
add
pop
les
aaa
fcmovnb
int
insb
mov
push
adc
xchg
mov
and
shrb
jp
out
icebp
in
fdivr
out
mov
ljmp
subb
aam
xor
pop
pop
add
cmp
pop
sbb
push
lret
xchg
test
aad
xlat
pop
adc
pop
shll
and
arpl
leave
or
cmpsb
mov
popa
ret
fisttpll
add
outsb
cmp
mov
ret
movswl
sbb
popl
push
push
push
out
mov
xchg
or
pop
mov
cmpsl
fmulp
repnz
fldl
inc
sbb
int3
enter
jp
pop
test
mov
xor
rclb
out
fsubl
jns
dec
mov
push
xchg
push
aas
xor
sbb
sub
dec
push
not
push
aam
mov
add
mov
lcall
sub
jns
xchg
pop
push
aam
lret
cwtl
cmp
dec
adc
pop
cmp
xchg
das
xchg
mov
push
or
and
rolb
sub
xchg
or
je
adcl
ds
movsb
flds
push
push
cmpsb
pop
jge
insb
or
mov
mov
jae
popa
add
mov
mov
sbb
std
dec
dec
inc
or
adc
movsb
jae
js
push
hlt
dec
outsb
movsb
jbe
xchg
xor
jb
clc
push
xor
js
scas
or
xchg
mov
jg
je
adc
jnp
pop
pop
subb
rol
mov
lds
lods
pop
sbb
lock
rcrl
jnp
mov
or
add
jl
in
xchg
out
outsb
orl
mov
insb
scas
pop
sti
xlat
mov
sub
pop
ljmp
imul
daa
insb
pop
iret
jge
mov
push
sub
adc
mov
inc
out
jmp
aaa
cmp
adc
stos
pusha
lahf
jp
push
push
adcl
dec
lods
insl
push
sahf
xchg
out
insb
aad
add
test
cmpsb
in
enter
and
jb
in
jg
adc
push
in
jecxz
inc
shlb
test
sbb
mov
sbb
mov
lcall
mov
dec
ret
addr16
out
jno
cmp
fsubrs
adc
int3
adc
data16
daa
jp
xchg
sbb
clc
jmp
popf
jge
movsl
jg
cmp
inc
stos
stos
sbbl
adc
jecxz
mov
rcll
psrlq
in
shr
and
daa
lock
das
ljmp
mov
dec
sub
ds
jae
mov
cltd
pop
push
test
sbbb
fs
sub
xchg
mov
gs
aad
daa
adc
xor
mov
sar
cld
xor
mov
pop
mov
pop
clc
adc
outsb
hlt
fwait
xchg
les
pop
insb
jae
std
ret
sti
and
sbb
rcrl
fldl
sahf
xchg
mov
lea
xchg
scas
lock
mov
pushf
pop
and
mov
insl
push
pusha
jl
fisubrl
ljmp
repnz
mov
jns
sahf
out
cmp
popa
add
dec
jne
jns
inc
pop
cwtl
test
mov
in
bound
rclb
xchg
mov
mov
cmp
lahf
je
lcall
out
sbb
orb
sbb
mov
jmp
mov
and
push
jle
lret
rcrl
push
pop
dec
xchg
es
scas
xchg
loope
std
jae
pushf
cmp
jbe
xor
loope
cmp
mov
and
incl
and
loop
enter
enter
xor
push
or
or
add
add
iret
imul
mov
repz
bound
mov
rorl
orl
aaa
or
xchg
jnp
xchg
xchg
and
fwait
jns
push
fbld
imul
jecxz
and
pop
dec
cmc
cltd
mov
jae
mov
imulb
repz
shrl
push
pop
ljmp
test
dec
popf
cmp
and
lock
mov
dec
adc
insb
mov
mov
or
loopne
mov
aam
xor
rorb
mov
aad
pop
add
subb
outsl
andl
sub
or
pop
mov
mov
mov
pop
jno
sbb
nop
sbb
sarl
add
dec
xchg
jns
inc
fsubl
in
sarl
adc
cmp
or
inc
lods
lea
add
xchg
imul
cltd
addr16
lods
shlb
out
inc
mov
repnz
inc
jnp
mov
jle
xchg
xor
adc
ljmp
lods
or
adc
add
js,pt
fcoms
cmp
mov
mov
icebp
loope
loope
mov
jo
lahf
outsl
push
ljmp
push
mov
fisubs
pop
rcrl
jbe
inc
sbb
xchg
aaa
mov
andl
cmpsl
loope
mov
ss
hlt
xchg
leave
or
cltd
sub
in
and
shll
clc
mov
pop
arpl
insl
jne
add
fcmovu
sbb
lcall
sub
xlat
and
xchg
pusha
add
js
sub
push
push
lcall
or
arpl
push
fnsave
lret
jbe
jbe
hlt
and
push
repnz
movsl
sti
push
ret
cmp
dec
or
fsubrs
loop
sahf
jb
cmpsl
dec
test
loope
push
jl
xchg
jno
and
cmpsb
xor
sbb
aaa
mov
stos
sub
cmp
push
test
jge
sub
cli
push
rcll
xchg
test
rcrb
pop
js
shl
pop
pop
xchg
and
adcb
lods
popf
decb
inc
adc
sbb
in
xchg
sbb
aaa
cmp
loope
inc
sub
ffree
fsin
aas
inc
mov
clc
inc
js
xchg
and
fcmovne
add
pop
and
mov
daa
and
lds
in
cmpsl
loope
inc
mov
aam
fsubs
orb
cmpsl
les
pop
xor
dec
fnstenv
test
mov
sarl
scas
push
int3
loopne
or
cmp
xorb
fisubs
pushf
adc
cmp
push
sbb
pop
xlat
cmp
push
adc
pop
les
mov
mov
scas
lock
cwtl
mov
add
sub
jne
aad
shl
mov
ret
rorl
xchg
mov
or
jae
xchg
cld
jmp
out
add
rolb
jns
cltd
lea
ss
push
fsts
cld
cmp
push
fcmovnb
xchg
repz
mov
fstl
jno
push
xchg
sarb
mov
clc
push
push
inc
aaa
into
mov
cmp
cld
inc
sub
cwtl
or
insb
sbb
or
lret
xchg
push
mov
jl
sahf
ret
flds
pop
data16
xchg
jo
jg
and
push
cld
loope
jbe
movl
shlb
arpl
clc
mov
xorl
out
jge
aad
mov
lock
jmp
jge
inc
inc
arpl
scas
std
jmp
rolb
cs
cs
adc
daa
dec
mov
cmp
aaa
and
sub
push
cmp
xchg
jnp
push
xor
add
and
inc
ds
and
cmp
mov
sbb
push
fmulp
sbb
inc
fcompl
pop
adc
mov
mov
sbb
cld
fadd
mov
lret
decl
sbb
notb
mov
xchg
inc
outsb
pusha
inc
je
dec
lods
loop
mov
or
popf
jecxz
add
lea
adc
or
jbe
mov
rorl
out
adc
or
xlat
repnz
clc
jb
jmp
or
int
fimuls
pop
mov
push
negl
shlb
jge
aaa
cld
and
inc
into
shl
cld
sbb
in
cmp
arpl
adc
ret
mov
jae
imull
xor
incl
push
mov
mov
sbb
inc
cltd
xchg
ljmp
dec
mov
mov
imul
fwait
repz
push
mov
cmp
jl
dec
daa
inc
sub
ficompl
aaa
bound
ss
cmp
insl
cs
in
cmp
fildll
sbb
push
addb
cmp
in
push
scas
sub
lods
and
icebp
push
iret
lret
data16
and
dec
in
ds
mov
adc
jae
insl
pop
punpckhbw
pop
repnz
mov
jnp
pop
cwtl
xor
push
xorl
add
cmp
cmpsb
mov
xor
and
pushf
inc
mov
je
xchg
xor
cmpsl
lods
ss
mov
and
ss
jmp
and
sbb
dec
movsl
cmpsl
push
push
mov
ja
cmpsl
mov
fidivrl
mov
ret
push
mov
loop
jmp
push
lret
or
in
fstpt
xor
push
and
bound
sbb
mov
pop
leave
orb
mov
sub
xor
inc
add
xor
pop
aam
dec
aas
inc
mov
push
or
xchg
inc
pop
mov
jecxz
mov
arpl
sbb
mov
xor
jo
lea
ja
sub
cs
mov
pop
xor
out
inc
inc
sub
mov
dec
mov
cmp
mov
pop
xor
andl
sub
popf
sub
cli
popa
stos
dec
adcb
shufps
adc
and
jnp,pn
mov
mov
jbe
mov
in
rcrb
pop
and
pushf
test
push
mov
loop
scas
push
sbb
cmp
sbb
mov
ficompl
mov
out
inc
pop
mov
mov
inc
int3
and
pop
lods
push
xchg
loop
inc
aam
popf
fdivs
inc
xchg
pop
addb
and
loop
fcoms
inc
sbb
paddb
movsl
jns
cmpsb
cmc
inc
sbb
iret
out
push
and
pop
mov
add
sbb
sub
push
xor
std
in
cs
pop
neg
xlat
fs
jle
mov
sti
ret
inc
xor
lds
outsl
fnsave
iret
mov
movl
jae
repnz
icebp
leave
movsb
and
xchg
lea
stos
in
cltd
mov
pop
mov
push
popa
dec
call
jl
ds
sarl
cmp
insb
repz
in
lods
jp
daa
ret
mov
into
fwait
and
dec
incb
std
add
pop
in
adc
stos
lods
sbb
push
xchg
dec
and
adc
adc
mov
inc
pusha
lods
test
lds
push
jns
mov
mov
call
call
push
inc
jge
mov
aad
ret
repz
push
movsb
xchg
mov
inc
pusha
mov
rorb
inc
inc
ja
repnz
popf
xchg
sub
push
mov
or
cmc
mov
out
inc
sbb
mov
xchg
xor
test
movl
dec
testl
cmpb
mov
inc
cmp
push
jp
mov
fldl
cmp
int3
push
sub
int3
jmp
dec
pop
or
sarl
sub
inc
scas
mov
xor
push
adc
mov
vpmovzxbd
lcall
test
adc
pop
push
ds
dec
fidivrl
pop
rclb
incl
pop
mov
push
jl
out
jns
xchg
push
cltd
adc
mov
pop
loop
enter
sbb
adc
stos
iret
sub
cmp
notb
push
sbbl
stos
cmc
sti
fcmovne
push
inc
call
shlb
push
pop
rcrb
xor
push
mov
mov
out
sarl
enter
add
lods
or
call
mov
mov
data16
cmp
shlb
je
shr
mov
push
xor
adc
cmpsl
fcom
cmp
xor
incl
int
in
into
ds
aad
nop
push
test
out
xchg
scas
sub
cmp
sub
mov
xchg
aam
mov
imul
les
iret
xchg
es
out
dec
inc
pop
and
push
pop
pop
mov
xchg
fimull
mov
aas
sub
scas
test
mov
add
mov
lods
and
xor
ret
inc
adc
mov
inc
scas
mov
test
xchg
loopne
jo
xchg
adc
out
fildl
or
and
lahf
filds
mov
in
or
dec
sub
and
sahf
pop
and
cwtl
xlat
and
adc
push
push
loope
sub
std
cmp
xchg
jnp
cmp
mov
add
and
in
test
mov
lock
cmpsb
leave
jecxz
lea
push
or
jnp
mov
imul
xchg
rolb
mov
jl
lcall
das
jp
cmpl
inc
in
pop
mov
add
inc
inc
cmp
jecxz
sti
or
mov
pop
xlat
repnz
mov
pusha
pop
stc
cs
imulb
mov
xor
cmp
push
call
test
out
jne
push
push
sub
cwtl
jecxz
xor
mov
cmp
loope
imul
adc
xor
subl
cltd
pop
add
mov
jle
sbb
push
pop
incl
or
and
jo
or
faddl
dec
cmp
xchg
sbb
xor
inc
roll
popf
bound
iret
loopne
outsb
adcl
popf
push
in
out
cld
aad
in
ret
push
fmul
mov
dec
push
test
xchg
mov
popf
rcr
jb
aas
sbbl
int
jae
mov
and
mov
outsl
cli
enter
lret
push
mov
cmp
mov
and
call
cmpsb
mov
mulb
cmp
out
fadds
xchg
paddsw
or
cmp
jmp
hlt
push
popf
and
inc
push
or
mov
or
repnz
divl
cmpsl
imul
ljmp
fadds
mov
icebp
mov
mov
push
test
shl
sub
fld
dec
ss
lods
pop
jnp
cmp
mov
sub
out
push
mov
out
es
lock
inc
jecxz
sbb
cmpsl
pop
bswap
pop
push
jl
push
pusha
push
cmp
jno
add
ds
jne
shl
fadds
sub
mov
fwait
fwait
and
jb
pop
jl
sub
or
sbb
popa
cltd
out
fistpll
loope
ret
fnstsw
and
xchg
dec
jbe
call
call
push
push
sahf
jo
push
sbb
lods
adc
aaa
mov
sub
push
mov
test
loopne
sub
clc
outsb
rcll
jo
in
adc
and
imul
fnsave
xchg
jl
sbb
fstpl
push
sbb
push
mov
mov
mov
push
fidivrs
push
scas
sbbb
pop
jmp
cli
in
pop
std
add
and
int3
arpl
push
loop
mov
xchg
shll
insl
fs
cmpsb
insb
dec
clc
test
icebp
dec
in
mov
shlb
insb
xchg
dec
push
pusha
jne
fadd
bound
fs
mov
repz
cmp
pop
popa
inc
jns
jns
pop
xor
inc
cmp
lret
cld
mov
cli
dec
inc
mov
jmp
fwait
outsl
aaa
cmp
out
and
pusha
aad
std
cmpsb
lods
jmp
das
mov
adc
scas
js
mov
adc
inc
aam
lret
push
lret
cmp
les
lcall
data16
fwait
je
cmpsb
mov
jae
jb
fisttpl
roll
repnz
and
std
repnz
jae
jmp
js
ret
imul
sbb
jbe
cmp
test
sarb
pop
jle
ret
in
ss
sub
xlat
xchg
push
mov
adc
xchg
adc
hlt
mov
or
mov
push
push
or
add
xchg
push
ficoml
xor
scas
sbb
sbb
jnp
lcall
jns
stc
inc
push
or
jmp
adc
xor
inc
adc
push
ret
lock
insl
fists
fs
cltd
push
in
mov
dec
add
das
mov
lcall
dec
sar
xor
dec
lock
gs
sti
jnp
in
jg
adc
movsb
test
mov
loopne
sub
dec
mov
adc
mov
sub
lock
cmpsb
push
xchg
fistpl
add
xlat
cmp
out
xor
rorb
testb
sub
jnp
dec
cwtl
dec
xor
mov
into
ret
int
scas
iret
jne
or
push
fmul
insl
add
out
lock
mov
xor
mov
stc
and
shll
pop
jne
xchg
mov
sti
data16
mov
xchg
push
push
sarl
xchg
pop
cs
jecxz
lea
cmovns
and
or
pop
and
pop
das
jp
stos
lds
loop
mov
shlb
jnp
cmp
loopne
and
mov
loopne
mov
mov
outsb
gs
mov
xor
popf
mov
stos
sti
mov
fstps
push
and
mov
pop
push
push
cltd
cmp
sahf
dec
cs
add
scas
aaa
mov
popa
adc
sbb
and
leave
out
outsl
ret
xchg
xchg
add
in
loop
outsl
cmpsb
sbb
add
enter
loopne
aas
mov
xor
movsb
jg
jnp
js
xchg
nop
dec
and
sub
int
mov
dec
sub
popa
mov
sub
cmp
nop
lret
xchg
cmc
cmpsl
loop
jnp
in
fsubr
or
jle
repnz
outsl
dec
lea
xchg
loopne
in
imul
mov
dec
xchg
fwait
loopne
adcl
ja
icebp
bsf
in
sub
mov
pop
mov
or
mov
addl
inc
mov
add
add
out
outsl
mov
jnp
fbstp
sub
imul
repz
add
call
dec
int3
pop
mov
in
cmpsb
int3
fldenv
jecxz
fs
test
push
jne
into
pop
jae
mov
fadds
xchg
adc
push
sar
movsl
scas
dec
dec
mov
mov
mov
jo
xchg
out
dec
stc
lea
les
addb
push
bound
fisubs
mov
jb
push
jecxz
out
push
in
fistpl
xchg
in
add
inc
inc
stc
or
frstor
pop
push
jne
pop
movsb
pop
rcrb
sbb
stc
arpl
sub
jmp
shr
and
insl
loop
jae
xchg
push
stos
xchg
out
sbb
pop
cmpsb
mov
stos
in
fcmove
xor
leave
lret
push
sub
add
nop
fiadds
sbb
pop
or
es
sbb
lock
ss
mov
xchg
cmp
cs
into
push
imul
inc
stc
in
addb
ds
movsb
lods
loopne
dec
lock
jmp
xor
and
mov
mulps
pushl
pop
dec
lea
inc
cmpsl
js
cltd
jp
pop
mov
loop
lcall
dec
cs
arpl
jmp
mov
call
pusha
pusha
out
aad
js
stc
jns
xor
out
or
lcall
cs
push
sahf
es
mov
adcb
out
cmp
and
enter
es
push
mov
sbb
jnp
push
roll
call
popf
mulb
jnp
push
insb
push
aad
out
ret
dec
cmc
xor
out
xchg
faddl
xlat
fists
mov
sbb
mov
mov
mov
cmpsl
sarl
xor
sbb
jle
dec
lea
loope
out
les
lret
xlat
adc
xor
inc
and
xorb
push
popa
test
imul
and
push
add
and
imulb
jnp
adc
sub
out
mov
mov
aam
xchg
cmpsl
and
mov
lods
sbb
sbbl
pop
stos
mov
push
xor
mov
stos
in
inc
cmc
mov
addr16
pop
or
pop
jl
add
fmull
pop
mov
sbb
or
or
pushf
pop
mov
xchg
imul
inc
push
fbstp
repz
dec
in
push
int3
lods
aas
out
imul
rorb
xchg
push
test
add
nop
lds
jne
adc
cmp
dec
add
aam
push
xchg
rorb
pop
pop
scas
xchg
sub
mov
and
cmp
jmp
stos
mov
or
cmp
push
dec
push
inc
pusha
dec
cld
sub
adc
stos
stos
movsb
add
dec
add
es
out
adc
ja
aaa
insb
ljmp
clc
movb
xchg
lahf
mov
mov
lods
adcl
jno
mov
inc
jbe
push
inc
das
mov
insl
jge
push
mov
sti
or
shl
outsl
cmpsl
jecxz
loopne
mov
dec
pop
and
mov
and
gs
aam
pop
or
xor
xor
fcoml
orl
inc
mov
xor
mov
push
shrb
adc
cli
sbb
mov
aaa
mov
sub
or
and
lods
out
adc
push
dec
js
and
ficompl
mov
mov
test
call
das
vfrczsd
ret
and
xchg
xor
sbb
jmp
sub
or
jmp
sbb
mov
pop
push
inc
nop
dec
fs
dec
mov
into
dec
inc
push
out
or
stos
cmpsl
clc
jno
lcall
pop
loope
pop
jmp
enter
ja
jp
stc
xchg
inc
hlt
out
mov
cmp
js
aad
out
cmpsb
jecxz
in
ljmp
fs
js
ret
and
stos
mov
cwtl
scas
mov
and
iret
and
pop
jne
ficoml
clc
xor
out
inc
inc
add
mov
jg
push
xchg
cltd
rorb
xchg
adcb
xor
es
sbb
out
pop
imul
jnp
push
xchg
mov
jae
cwtl
push
dec
scas
aas
call
or
mov
data16
inc
lret
gs
fsubrs
sub
adc
pop
push
fisttps
cmp
ficoms
jbe
shl
out
cli
addl
cld
or
std
push
fisubs
lods
fsub
loop
out
and
add
test
shrl
mov
xchg
xorl
dec
testl
shll
inc
cmpsb
push
ret
call
cmpsb
jo
cltd
iret
bound
pop
movsb
stos
jp
cld
dec
cmp
xchg
and
nop
mov
insl
jmp
inc
jo
dec
adc
mov
leave
leave
push
ja
into
inc
out
rolb
mov
adc
fisubs
lock
jecxz
add
shrb
adc
or
into
jb
jbe
push
jae
dec
pop
stos
insl
dec
xchg
mov
ret
push
jmp
mov
lahf
pushf
xor
inc
xchg
lock
push
or
cmc
adc
jg
inc
jp
mov
jae
jb
mov
ds
ret
inc
sbb
ljmp
xchg
or
inc
mov
lahf
dec
pop
das
ret
repnz
xor
xor
stc
sti
movsl
and
les
outsl
sub
push
mov
jns
jle
xchg
cmpsb
cmp
ret
add
xchg
mov
faddl
into
mov
add
sbb
das
test
inc
xchg
pop
dec
dec
xchg
repz
mov
adc
mov
int
and
push
ja
movsb
pop
scas
fstps
outsb
shrl
inc
dec
xor
push
jg
add
dec
mov
sub
pop
insb
and
sbb
repz
insb
and
sarl
add
loop
jmp
push
loop
mov
mov
lcall
sub
mov
pop
and
mov
dec
int3
mov
sub
push
mov
iret
pop
jo
xchg
jecxz
lahf
jge
mov
push
scas
ret
gs
movsb
fs
in
rcrl
rcrl
jp
inc
adcl
sbb
cwtl
sbb
mov
movsb
lret
cmpsb
jecxz
dec
stos
adc
test
int3
adc
stos
dec
gs
cmp
pop
dec
test
push
xor
or
push
fcoml
shl
inc
and
dec
sub
or
sbb
xchg
mov
adc
mov
push
xor
and
jns
es
int3
fwait
into
or
xchg
test
sub
fwait
push
pop
iret
mov
lcall
cmp
xor
js
jmp
mov
les
in
loop
and
jnp
int3
aas
mov
sbb
adc
fsubl
add
adc
mov
fnsave
jge
pop
push
fidivrl
mov
add
jmp
push
and
cltd
push
add
adc
xchg
jge
inc
in
mov
inc
loope
lods
roll
xchg
pushl
mov
scas
das
sbb
sbb
and
or
inc
jle
and
sub
loope
sbb
pop
scas
arpl
mov
mov
sbb
inc
les
mov
sbb
jo
pop
pusha
fbstp
shll
mov
or
ljmp
into
adc
mov
push
mov
pop
mov
pop
sub
jne
push
cmp
mov
rol
lret
jnp
nop
stc
in
mov
icebp
add
gs
ret
hlt
or
inc
rcr
mov
int
sub
cld
cmp
sub
lret
loop
in
insb
push
ficompl
mov
push
mov
scas
and
data16
out
ljmp
xchg
push
fdivs
push
pusha
and
and
push
xor
mov
enter
sbb
jb
cmp
icebp
dec
pop
fdivl
les
loopne
xchg
cmp
dec
insl
pop
cmp
pusha
add
jbe
pop
mov
cmp
test
mov
popf
xchg
insl
aaa
xchg
test
pop
test
mov
repnz
lods
movd
inc
pop
data16
jmp
xlat
test
mov
add
xchg
pmullw
leave
mov
push
adc
fs
lods
outsl
xor
scas
add
pusha
and
fndisi(8087
mov
imul
stos
push
sbb
bound
and
jnp
scas
pop
fimull
test
xor
cld
cmp
and
adc
ljmp
adc
sbb
ficoms
addr16
iret
dec
nop
bound
push
cmpsb
sbb
scas
lea
sarb
stc
inc
or
clc
jle
sbb
xor
lock
aam
mov
divl
dec
sarl
jmp
aad
ljmp
cli
jo
aas
cmp
sub
and
sbb
inc
bound
xchg
or
fsubp
mov
int
pop
mov
sbb
xor
xor
inc
inc
push
loope
sub
add
and
cmp
lret
pop
pop
push
mov
xor
loopne
mov
and
lods
addb
push
cmp
or
insl
fsubs
in
inc
pop
pusha
or
cmp
mov
arpl
cmp
sub
ss
dec
dec
scas
push
pop
push
repz
xor
jno,pt
lock
xchg
fldl2t
stos
or
cmp
cli
mov
inc
into
jbe
mov
test
sbb
adc
jns
mov
dec
rcl
test
xchg
mov
scas
jnp
push
imul
in
xchg
lea
sti
sbb
or
push
or
mov
dec
in
jo
cmp
movsl
mov
outsl
in
shll
call
mov
lcall
cmp
push
ud0
or
aaa
mov
or
cld
pop
sti
jmp
jg
cmp
repz
push
pop
cmp
dec
imul
mov
push
popf
jae
dec
jl
dec
loopne
mov
shl
mov
and
push
xchg
cmp
xchg
ja
outsl
xor
mov
lcall
hlt
loope
cmp
sub
xchg
les
add
lods
add
lahf
stos
mov
lods
jnp
push
push
xchg
lods
lret
fisttps
call
imul
and
lret
lret
jne
adc
inc
cmp
scas
jmp
div
insb
adc
pop
and
push
inc
xor
mov
pop
or
inc
ja
xchg
outsl
lock
push
mov
sbb
xchg
and
add
jbe
jp
lds
lods
sbb
pop
xchg
decl
je
push
push
out
out
hlt
pop
inc
and
cld
sahf
xor
sub
xchg
dec
push
into
adc
inc
cltd
push
pop
data16
pop
sub
test
out
inc
stos
sub
lret
fistps
push
mov
dec
dec
and
and
push
jae
popf
stc
push
and
push
mov
lock
pop
sbb
in
aam
xor
xchg
repz
mov
sbb
pop
inc
xor
xor
lds
lock
add
mov
cmc
xchg
mov
movl
loope
add
leave
jb
shll
cmp
xchg
insb
ret
mov
gs
outsb
dec
enterw
mov
lock
or
jo
adc
push
push
jmp
adc
gs
sbb
scas
sbb
add
js
xchg
jmp
xchg
fs
pop
dec
mov
enter
xchg
jmp
das
mov
lods
dec
or
inc
out
ljmp
in
mov
xchg
sbb
aad
pop
cli
aad
dec
push
imul
scas
dec
sub
cmc
xchg
jbe
xor
xor
push
mov
cld
sbbb
in
pop
xchg
cmpsl
rorb
pop
hlt
call
cmp
push
and
cmc
mov
in
repz
test
cmp
xor
pop
jl
inc
mov
dec
push
push
push
jg
adc
xor
jbe
fstpl
mov
mov
stos
push
ja
mov
push
mov
mov
rorb
inc
pop
xchg
sbb
or
rclb
push
orl
rcr
test
xor
pop
shll
mov
rcrl
xchg
mov
lret
push
lret
dec
xor
mov
aad
push
aam
hlt
in
out
xchg
cmpl
aaa
mov
or
cmpsl
jmp
pushf
cmpsb
push
ret
hlt
pop
sahf
rclb
xlat
leave
clc
mov
data16
and
xor
fldl
movsl
xchg
pop
mov
fnstenv
fwait
dec
mov
lahf
outsb
repz
shll
jnp
push
loop
out
scas
xchg
in
xchg
and
mov
jne
pusha
adc
test
int3
sbb
mov
inc
push
inc
xchg
mov
sbb
add
mov
cmp
jecxz
rcr
in
clc
gs
inc
in
mov
enter
cmc
out
jnp
hlt
arpl
pop
les
inc
push
fidivs
xchg
out
xchg
fsubr
xchg
or
push
arpl
frstor
add
addl
sub
jnp
jmp
inc
mov
lods
push
dec
xchg
xchg
sub
imul
adc
jnp
or
sahf
push
xor
movhps
jmp
sub
add
pop
mov
dec
xchg
push
push
shrl
dec
dec
sbb
mov
inc
les
adc
and
das
int
sub
push
jno
sbb
sbb
aaa
mov
jmp
cmp
adc
outsl
lahf
out
dec
mov
and
lahf
scas
negl
mov
jno
mov
daa
mov
xchg
divb
clc
call
jmp
sbb
sub
add
cli
movsl
push
push
jns
lahf
pop
aam
int3
xchg
sub
cli
xchg
sbb
mov
cmp
test
addr16
rcrb
jno
and
stos
dec
push
pop
repnz
or
nop
xchg
adc
stos
sub
push
mov
dec
xor
js
jl
loopne
pop
or
and
sbb
add
push
loope
pop
aas
pusha
int3
mov
cli
popa
dec
fcomi
add
int
pop
fsubrs
sub
mov
leave
jle
pop
mov
sbb
adc
comiss
inc
dec
enter
lods
popf
cld
push
sbb
loop
mov
cs
cmc
test
popa
in
xlat
ds
mov
adc
stos
movsl
mov
loope
int
je
lret
xorb
insl
mov
inc
fwait
jmp
daa
mov
mov
jle
sub
jp
push
or
andb
cmp
movsl
test
call
add
push
xor
lds
push
jecxz
out
mov
nop
inc
shrb
cmpsl
inc
popf
sbb
jne
loop
pusha
std
mov
aas
pop
ret
mov
xorl
pop
mov
inc
out
jne,pt
fbstp
cmp
and
imul
in
cmp
sti
jg
bound
je
enter
jp
sti
icebp
mov
std
stos
adc
fcomp
incb
push
jo
rcrl
dec
push
outsl
pop
lret
add
loopne
inc
jno
jb
xor
sub
popf
pop
punpckhbw
pop
popa
cltd
dec
lods
mov
push
or
sub
dec
adc
add
inc
jp
push
or
or
sub
pop
rorl
xchg
adc
cli
insb
xchg
pop
or
mov
sbb
inc
sub
mov
aaa
sub
lret
lret
ret
sti
and
movsl
call
outsl
cs
int
and
stc
shll
mov
mov
dec
les
push
outsb
and
ret
lods
dec
in
and
aaa
and
ret
call
cmpsb
adc
inc
push
jbe
sbb
push
outsb
xchg
inc
fs
inc
lea
je
or
push
inc
je
fcompl
lds
shr
nop
xor
adc
mov
and
dec
and
sub
mov
rcr
xchg
rcr
sub
pop
out
leave
dec
jnp
rcrb
mov
cltd
dec
inc
push
adc
test
mov
jbe
rol
pop
jle
mov
xor
mov
cmp
mov
aas
pop
cmpsb
dec
dec
lcall
popa
pop
imul
es
push
cli
popf
inc
pusha
inc
stos
sub
mov
mov
stos
jo
dec
mov
addr16
xchg
pop
sbb
cli
in
pop
push
cmp
fisubrs
cwtl
jns
add
pop
mov
dec
inc
sti
mov
out
sbb
lret
lcall
pop
stc
ss
imul
inc
jmp
lds
dec
ficompl
cmp
inc
inc
inc
dec
add
mov
fisttps
jle
js
in
jo
jge
and
jmp
lods
aaa
xor
inc
add
sbb
mov
cli
ret
pop
mov
aad
add
mov
repnz
roll
scas
add
movsl
test
loope
fdivl
ds
aaa
mov
dec
or
push
lcall
cmpsb
sbb
jbe
rep
mov
test
sti
xor
fsubrl
inc
xlat
sub
mov
ds
jp,pn
pop
or
sahf
in
mov
loope
inc
mov
lds
xchg
sub
jnp
inc
pop
fnstcw
pop
sbb
scas
pop
xchg
sub
sub
sbb
mov
test
xchg
mov
add
pop
fmul
mov
roll
pop
test
insl
je
cmpsb
and
scas
adc
data16
mov
das
fwait
mov
push
addr16
sbb
mov
movsb
and
sbb
int
ffreep
in
jno
cmp
pop
mov
and
push
sub
jno
cmpsb
push
aad
dec
cmp
mov
jle
cmp
es
out
lret
scas
mov
xor
scas
pop
je
outsb
sbb
pushf
mov
popf
push
testl
aad
icebp
mov
inc
addr16
lret
and
out
sbb
add
push
sahf
xor
jbe,pn
or
test
rol
stc
sbbb
leave
out
enter
pusha
std
xchg
and
xor
push
aaa
cmp
addr16
sub
mov
push
pusha
cmpsb
jae
lcall
leave
out
cmpsb
popf
mov
sar
inc
mov
jp
lret
push
cmc
mov
mov
jge
lret
fiaddl
xchg
daa
mov
fwait
movl
int
imul
dec
sbb
popa
aam
push
aaa
xchg
imull
imul
jne
jge
ja
dec
filds
out
rcrl
jecxz
mov
pop
and
out
pushf
xor
add
or
aaa
lds
outsb
jno
sbb
inc
mov
mov
add
scas
sbb
mov
fidivs
xchg
out
pop
nop
into
out
mov
pop
mov
repz
push
popa
mov
ffreep
inc
mov
sbb
pop
pop
cmc
repz
jmp
cmp
pop
push
jae
test
dec
pop
and
rclb
dec
cld
mov
movsl
mov
das
pop
mov
xor
xor
sbb
negl
and
cmpsl
add
jne
mov
nop
ror
stc
sahf
pop
popa
repz
lds
lret
lcall
inc
popf
push
icebp
mov
and
jmp
add
pop
pop
add
lods
or
push
mov
ss
jecxz
popl
mov
into
sub
in
mov
cmc
mov
sub
jmp
sbb
fdivr
mov
adc
loop
rclb
arpl
mov
jno
shrb
pop
lods
adc
add
mov
out
adc
aad
lds
dec
hlt
int3
in
lret
call
lcall
fs
or
in
add
cli
and
inc
js
movsb
jo
or
push
lahf
jecxz
in
aad
mov
lock
jecxz
cs
aam
fs
push
adc
pusha
popf
js
test
test
mov
add
pusha
and
mov
shll
sarb
push
pop
insl
jmp
popf
into
fildl
pop
in
int
pop
xor
out
cmp
pop
xchg
test
sub
push
jno
push
iret
pop
mov
xchg
test
out
sub
mov
pop
in
push
cmpsl
leave
fcoms
ss
push
cmp
xor
sbb
outsb
add
xor
and
mov
push
lods
imul
imul
iret
sub
push
ds
xchg
dec
or
shlb
nop
add
ss
packuswb
dec
mov
sahf
push
out
pushf
es
push
addr16
xchg
cltd
loope
sub
adc
ds
fs
cmc
addl
dec
fadds
mov
push
and
mov
push
sahf
mov
mov
aad
lea
xchg
ret
or
insl
sahf
cltd
frstor
fisubrl
inc
and
mov
or
psubusw
xor
scas
sub
popa
jge
gs
addb
and
xchg
nop
cmc
orl
push
mulb
push
adc
outsb
lods
dec
inc
cmp
sub
loop
in
std
in
mov
xchg
out
jp
xchg
vucomisd
les
inc
test
sub
mov
jns
insl
mov
cwtl
push
loopne
and
scas
negb
dec
lahf
mov
or
mov
sahf
push
jg
loope
mov
addr16
cmp
mov
pop
stos
ja
jmp
jb
out
les
lret
insb
enter
andb
divb
fs
fwait
out
scas
loop
fstpl
adc
adcb
shll
dec
xchg
pop
leave
jbe
in
lret
mov
sbb
sbb
add
push
cmp
pop
push
scas
out
call
or
mov
inc
aas
insb
int3
sbb
popf
mov
adc
dec
cli
adc
pop
pop
or
dec
cmp
inc
sbb
cwtl
sub
pop
xchg
lods
push
add
push
mov
jno
jb
push
fistps
jb
pop
insb
imul
or
dec
out
test
mov
rcll
xchg
inc
xchg
lahf
mov
pushf
jl
roll
mov
or
bound
push
xchg
cmpl
ret
in
or
pop
sub
xchg
outsl
xlat
fnstsw
pop
fildll
int
std
inc
roll
pop
test
xchg
outsl
push
dec
lret
inc
leave
gs
test
add
mov
nop
fdiv
sbb
pop
sbb
shlb
aad
orb
mov
jb
mov
mov
sub
stos
jmp
icebp
lds
mov
repz
popf
mov
outsb
loop
aam
jg
push
cmp
inc
cwtl
lock
mov
adc
daa
xchg
push
je
and
stc
ret
repnz
in
cmp
incb
movsb
push
xchg
insl
cmp
pushf
inc
in
lea
pop
out
adc
push
mov
pop
mov
pop
push
fisubl
out
and
push
sbb
add
dec
mov
popf
in
push
decb
in
movb
cmpsb
mov
pop
dec
mov
out
sbb
sbb
iret
loope
int
int3
cltd
ret
cmp
popf
clc
nop
int
int3
mov
outsl
inc
jo
mov
cmc
adc
mov
push
cld
add
lahf
and
xchg
dec
or
sub
scas
xchg
mull
xorb
or
xchg
rclb
sub
je
jmpw
push
aas
mov
cmp
aas
jp
cmp
stos
sbb
xor
jo
shll
cld
mov
test
mov
mov
adc
sub
xchg
push
adc
xchg
sub
icebp
sub
ljmp
test
push
cmp
rcl
arpl
sbb
data16
inc
int
lock
fs
lods
pop
push
out
inc
stc
mov
repnz
into
lock
push
mov
cmp
fadds
mov
adc
leave
push
push
loop
cmpsb
call
adc
cmp
icebp
jl,pt
and
lock
inc
lods
mov
jge
dec
int3
add
dec
pusha
call
push
into
or
test
pop
push
adc
das
stos
out
inc
sub
dec
sbb
add
xor
mov
mov
dec
aas
in
rorl
movsb
mov
mov
pop
mov
cmp
cmp
aad
add
jnp
popa
push
xchg
cmp
cmp
pop
push
mov
fisttpl
or
fimull
inc
sbb
xchg
pop
fstl
fcomp
or
cmpsb
add
test
fldt
lds
xchg
push
inc
mov
fisubl
pop
cmp
mov
adc
stc
lret
scas
pop
mov
mov
cmpb
mov
punpcklwd
mov
sub
push
jmp
call
or
push
orl
mov
xor
ficomps
adc
sub
and
or
push
outsl
lahf
test
cwtl
push
negl
mov
or
insb
ss
insb
dec
out
test
daa
adc
jmp
clc
pop
jno
jae
mov
mov
sub
ss
cmp
lds
cmp
xchg
cmp
jne
rol
push
pop
cld
pop
inc
mov
in
adc
xchg
push
ds
inc
cmpsb
out
cld
lret
mov
sar
mov
data16
lret
mov
sbb
sahf
mov
add
jns
fdivrl
jbe
push
cmc
gs
pop
mov
sahf
or
call
jb
mov
inc
inc
out
das
mov
enter
inc
xchg
clc
fldt
in
lock
lea
dec
cmp
shrl
lock
xor
inc
imul
inc
xchg
mov
mov
pusha
ss
aam
pop
jge
out
jnp
cmp
outsb
xchg
pop
sti
mov
or
mov
dec
mov
xorl
lods
mov
inc
sbb
xor
rcrl
insb
fnstcw
shll
fnsave
xor
sub
ret
adc
add
push
push
movsl
jp
mov
or
enter
add
mov
movsb
mov
pop
mov
sbb
cmp
testl
lock
shrl
mov
sub
loop
push
sub
mov
cltd
lcall
inc
mov
lds
pop
inc
jg
adc
mov
adc
out
mov
mov
mov
add
cld
stos
pop
lret
scas
rol
pushf
stos
jp
std
in
cmp
mov
in
ja
cmp
inc
sbb
jl
jno
or
cltd
test
aaa
repnz
pushl
cmp
addl
sti
cli
ret
orl
out
mov
sbbl
ret
fucomip
inc
mov
or
pop
pop
push
add
into
sahf
scas
lahf
and
adc
push
sahf
mov
repnz
lret
inc
and
ljmp
adc
scas
aad
inc
mov
dec
cmc
push
inc
inc
or
mov
xor
cmp
inc
mov
push
in
xchg
jge
jp
daa
clc
lahf
loope
cmp
xchg
scas
dec
add
outsl
lods
xchg
mov
or
lock
and
and
jle
cld
pop
icebp
in
inc
enter
insl
pop
mov
mov
jno
xchg
lds
cltd
pusha
inc
test
mov
pop
mov
nop
je
int
xchg
dec
out
mov
cld
test
lcall
cmp
out
cltd
int
filds
inc
push
in
in
ja
jp
dec
ds
popf
dec
cmp
sbb
repz
pop
adcl
mov
push
mov
out
scas
add
jp
rolb
ftst
inc
sub
or
and
ret
push
aam
cmp
stos
in
rorl
lds
dec
mov
pcmpeqd
test
insb
mov
jnp
mov
push
mov
pop
out
dec
ret
mov
aad
mov
out
test
push
int
les
cmp
lock
shl
cmpb
xor
or
lret
ds
inc
xlat
jmp
nop
popa
mov
ds
pushf
mov
xor
xor
add
push
push
mov
cltd
ss
sbbb
mov
push
mov
lahf
push
jnp
mov
jns
mov
hlt
add
fcmovne
notb
test
pop
lret
data16
stos
and
gs
sbb
jne
sbb
fwait
inc
xchg
sub
mov
dec
lock
sbb
sbb
mov
sti
fidivs
call
inc
std
lahf
xchg
aad
lahf
adc
stc
and
cld
test
iret
and
lea
jl
or
fmulp
and
xchg
cwtl
aaa
mov
jecxz
cmp
lret
movsb
jns
push
fcomps
push
mov
ja
jecxz
movsl
push
mov
cmc
pop
mov
sub
repz
or
pop
dec
mov
push
pushf
jle
xor
ret
inc
push
outsl
lret
pop
pop
jge
and
mov
cmp
xchg
fistl
mov
sbb
cmc
pop
xchg
cwtl
data16
lea
push
sbb
filds
add
mov
jmp
xchg
mov
lahf
xchg
mov
cld
in
mov
mov
cmc
dec
movsb
aam
out
inc
dec
shlb
shll
test
frstor
mov
inc
adc
sub
push
xor
mov
push
mov
cld
into
lahf
xchg
xchg
xchg
mov
out
mov
mov
fisttpl
or
mov
add
in
out
add
and
push
mov
ficompl
rcrl
add
push
aaa
add
jo
push
or
jle
or
scas
inc
loop
inc
mov
aam
test
lods
fidivrl
sub
jo
dec
clc
xchg
and
imul
cmpsl
add
push
test
test
das
push
xchg
mov
testb
rorb
repz
incl
mov
push
or
sub
push
pop
cmc
test
subb
mov
sbb
aad
int
pop
mov
aas
adc
in
add
mov
in
cs
xor
xchg
dec
stos
jecxz
pop
lea
fs
inc
fs
popl
shl
testl
inc
cmp
mul
and
das
or
jmp
push
sti
dec
adc
fwait
iret
mov
xor
aaa
jbe
mov
cwtl
sbb
loop
ret
jbe
cmp
ljmp
sbb
pop
jecxz
das
es
ds
push
lcall
and
mov
cmpsb
and
or
pop
mov
adc
or
test
xchg
fistps
cmp
std
repz
aad
sbb
mov
add
lret
outsb
and
push
xor
and
dec
mov
std
into
stos
dec
mov
scas
or
and
xchg
mov
movsb
sub
inc
push
or
mov
add
jb
adc
mov
and
pushf
cmp
push
xlat
and
xchg
jecxz
in
push
mov
mov
inc
xchg
adc
push
add
sti
mov
sub
push
inc
jb
push
mov
aas
repz
rcrb
ds
mov
sub
icebp
xchg
ficoml
dec
mov
jo
lock
xor
push
dec
insb
sub
sbb
push
lahf
mov
jbe
cmpsl
rolb
jmp
jmp
xlat
aam
cmpsl
cmp
add
inc
int
mov
xchg
cli
fstpt
push
sub
out
or
fdiv
addr16
fldenv
jno
aas
mov
mov
jle
pop
mov
or
lahf
jne
call
shr
xor
cld
sub
movsl
pop
ljmp
cmc
adc
xchg
fcos
mov
ja
pop
and
aam
rcrb
ret
pop
jg
jl
rclb
fmuls
dec
mov
mov
cmp
mov
xchg
jl
mov
jp
loop
outsb
adc
or
add
ret
cli
out
ret
shl
addl
repz
adc
dec
mov
pusha
roll
pop
mov
addr16
ds
inc
aad
inc
mov
sbb
mov
aas
loop
mov
sub
sbb
pop
push
inc
lds
mov
lahf
jns
mov
push
add
cs
inc
pop
roll
fists
mov
je
lcall
cmc
shlb
adc
xor
lahf
or
ds
aaa
cmpsl
mov
imul
pop
les
cmp
addb
sub
rolb
sub
test
jne
jo
push
pop
xlat
std
sbb
sbb
pop
push
adc
insl
cltd
and
jecxz
jnp
adc
popa
nop
aam
jno
std
inc
and
jl
mov
andl
add
int3
pop
das
fiaddl
jne
repz
sbb
fistpll
rolb
push
and
ljmp
pop
dec
mov
dec
pop
jl
dec
or
enter
fsubrp
push
dec
movsb
adc
pop
sbb
xor
adc
test
leave
outsl
push
cmp
xchg
mov
jns,pt
sub
xchg
scas
inc
out
inc
fwait
inc
jno
in
pop
aad
stc
or
pop
inc
stos
cs
mov
push
push
lahf
lret
int3
movsb
and
decb
sbb
stos
add
in
ret
pop
incl
fidivrs
cmp
cmpsl
add
out
xchg
adc
mov
xchg
sbb
int3
cltd
pusha
cltd
test
jnp
push
push
pop
lcall
sub
sub
scas
popf
shrl
addl
lahf
sbb
call
stc
sub
xchg
fisttpl
mov
cmp
mov
add
and
icebp
nop
pop
xor
movsl
jbe
fnstsw
cmpsb
test
mov
sbb
pop
push
loope
mov
jle
arpl
mov
dec
inc
dec
movsb
inc
mov
inc
inc
cwtl
sbbb
xchg
mov
fmuls
mov
mov
sbb
sbb
inc
mov
add
cwtl
imul
dec
xor
and
mov
dec
dec
ss
das
pop
clc
in
add
sub
sbb
scas
call
sbb
push
aam
int
mov
mov
or
mov
mov
or
sbb
addl
fidivs
xor
hlt
mov
imul
das
ja
rcrl
xchg
pop
push
fidivs
jbe
std
xchg
addr16
in
mov
mov
mov
xor
inc
cmp
into
mov
aam
cwtl
sub
mov
push
fdivs
mov
add
adc
adc
sub
sub
xor
mov
jle
cmp
clc
lahf
sbb
js
das
ljmp
dec
and
les
xor
mov
jge
mov
push
jae
cld
nop
pusha
dec
insb
lds
add
xor
sub
or
xchg
mov
pop
cmp
pop
sahf
out
int
sbb
sub
mov
outsb
xor
mov
imul
sub
loop
cmc
cmp
aad
jmp
add
push
or
sub
adc
xor
cmp
jmp
jecxz
das
in
nop
mov
mov
insl
lods
mov
inc
cltd
lcall
adc
mov
in
mov
imul
dec
jb
xchg
cwtl
fcoms
sub
cmp
cmp
je
fsubr
inc
push
push
mov
push
scas
sti
sbb
and
je
aas
ds
shl
cld
jb
mov
push
adc
aas
popf
dec
jecxz
sub
push
fistpl
movsl
dec
fcoms
negl
aaa
and
push
push
ret
pop
dec
and
mov
sub
je
ja
push
lahf
cwtl
inc
dec
imul
and
mov
adc
pop
push
insb
lods
enter
jns
fldenv
ja
xchg
stos
stc
repnz
popa
data16
sub
push
add
sbb
addl
call
mov
adc
test
jbe
cmp
ret
clc
popa
out
jg
cmp
mov
ja
mov
int3
xchg
mov
push
or
cmpsl
roll
pop
sub
xchg
xchg
mov
cmpsl
push
lods
movsl
adc
stc
mov
packuswb
sti
cmp
lds
pop
inc
fdiv
pop
dec
jp
js
cmp
xlat
loope
fs
int
xchg
xor
stos
cmp
lea
in
fidivrl
stc
push
ret
lods
lahf
mov
leave
xchg
jno
cmpsb
ja
lahf
mov
mov
adc
enter
out
xlat
add
hlt
rcrb
stos
add
push
decb
lods
inc
addl
jmp
loopne
dec
int3
add
jge
jg
push
into
push
movsl
popf
xchg
fsubr
ja
or
aad
shll
fstpt
repz
jo
dec
xor
xor
jno
in
out
mov
dec
daa
popa
movsb
pop
adc
sub
mov
sub
add
testl
dec
or
pop
cmpsl
in
inc
fs
inc
cmpsb
leave
lods
and
test
xor
in
ret
shll
jp
scas
jmp
sbb
sub
lcall
mov
lret
mov
xor
sarl
sarl
cld
push
jns
jae
hlt
jmp
and
jmp
sbb
or
add
testb
xchg
lods
mov
jle
fbstp
dec
inc
sbb
jecxz
roll
stos
add
jbe
cwtl
xchg
inc
rorl
adc
pushf
push
or
adc
push
fstpl
out
push
mov
fcomps
cmpl
in
xchg
push
lahf
xchg
mov
into
ror
pop
pop
rorb
adc
shll
cmp
mov
sbb
rolb
jle
xor
push
and
push
sbb
mov
fmull
add
popa
pop
lods
nop
jno
xchg
sub
mov
xchg
sbb
call
stc
lcall
and
mov
bound
or
pop
bound
in
repz
loop
adc
imul
xor
push
mov
mov
lds
ljmp
sbb
lret
and
je
cltd
adc
dec
add
add
jno
lds
jnp
ret
jge
pop
xchg
or
fisubs
mov
icebp
pop
xor
add
rep
pop
jp
mov
jns
jmp
into
push
push
cld
pop
jns
push
mov
sbb
pop
or
jbe
sub
mov
and
dec
or
xchg
adcl
mov
jecxz
adc
mov
pop
lock
loop
test
adc
and
insl
push
adcl
iret
cmp
push
imul
jl
rcrl
inc
jg
lfs
push
jno
fdivrl
xchg
pop
push
cld
add
fimuls
pop
ret
push
jmp
or
or
lahf
je
cs
pop
pop
or
mov
jmp
popf
dec
push
mov
pop
fidivrl
inc
in
ds
shrl
mov
pusha
fidivl
enter
mov
movsl
pop
adc
cwtl
rcr
cmp
shl
daa
sahf
rcll
add
lock
loop
ss
lea
sub
sbb
popa
cwtl
jno
push
dec
aas
daa
adc
out
stc
dec
dec
pop
push
ss
jae
into
mov
popa
push
or
int
push
sub
ret
frstor
inc
cmp
mov
movsl
or
add
test
xchg
jl
rolb
xchg
nop
arpl
pop
mov
inc
pop
mov
lahf
cmp
test
lods
in
sub
fucompp
repnz
jp
jl
adc
inc
add
rorb
rcll
mov
dec
das
jb
push
pop
push
sti
jbe
orb
test
mov
jg
sahf
add
jle
adc
xchg
push
fildl
pop
mov
add
clc
or
testl
test
jb
xor
dec
jge
dec
mov
and
test
cmp
outsl
dec
ds
int
lret
negb
dec
jle
pextrw
cmp
adc
ja
repnz
pop
test
pop
push
mull
fwait
xchg
push
inc
out
pop
pushf
jb
into
mov
mov
jnp
push
mull
lea
sub
inc
or
sbb
pop
dec
pop
test
inc
xor
dec
mov
inc
insb
jecxz
fadds
jg
stc
rorb
loopne
jo
push
hlt
nop
pusha
mov
fdivrp
push
mov
cmp
adc
or
leave
push
int
clc
call
mov
out
mov
sub
adc
cmp
jne
in
xor
xor
mov
daa
push
mov
pusha
xor
or
cwtl
ficoml
xor
sbb
in
jns
rorb
sldt
cltd
rorb
jns
add
sti
add
stc
mov
fadd
or
ja
fdivp
inc
ja
scas
scas
and
gs
ret
sbb
iret
enter
push
test
inc
cmpsl
add
or
xchg
pop
dec
cmp
popa
and
dec
pop
jbe
inc
pop
sub
mov
xor
mov
sti
test
xchg
mov
lods
mov
sti
icebp
shrb
ljmp
push
movsb
sbb
fwait
outsl
outsb
loop
lods
and
lcall
sub
call
push
fildll
xchg
sub
add
stos
lds
adc
subb
test
aam
adc
sbb
pop
mov
outsl
dec
mov
push
lret
xchg
enter
mov
cmp
push
inc
or
fs
fsubrs
test
xchg
lea
lcall
sbb
xor
push
rol
jl
aas
adc
and
rcr
pop
mov
bnd
stos
int
adc
idiv
pushf
in
push
cwtl
jo
cli
mov
push
in
mov
push
fisubrl
push
sub
xor
je
decb
cmp
mov
hlt
sub
sbb
add
lret
push
xor
add
ljmp
bound
in
mov
xor
dec
mov
jnp
daa
cmpsb
jecxz
dec
push
insl
and
jg
cs
scas
mov
out
or
outsl
xchg
mov
scas
pop
cmp
jle
sub
sti
cltd
cs
cmp
popf
mov
mov
mov
outsl
mov
add
add
mov
outsl
push
xchg
js
xor
insl
adcb
push
mov
in
pop
xor
gs
jle
sbb
aas
cwtl
lds
jmp
mov
sbbl
xor
imul
or
outsl
or
mov
xchg
mov
test
movsb
and
outsl
inc
je
sub
or
fmul
ret
cli
add
and
gs
mov
or
push
sub
mov
push
inc
jb
push
out
dec
repnz
fwait
dec
push
mov
mov
jg
dec
sub
xor
call
bound
in
mov
mov
pop
sahf
mov
pop
cld
push
movsl
xor
add
sub
jb
and
pop
inc
outsb
repnz
aad
and
fsts
inc
fildll
jnp
mov
fcomps
jnp
mov
mov
imul
inc
xchg
sub
push
out
pop
add
cmp
daa
sbb
mov
aam
cli
std
clc
cltd
inc
cld
add
pop
jge
push
fsubrs
dec
mov
pusha
push
sbb
or
fbld
ljmp
pushf
mov
ja
in
outsb
fisubs
and
and
scas
je
jmp
das
add
jge
adc
mov
pop
pop
xlat
inc
push
aas
scas
sbb
pop
cmpsl
js
test
cmp
adc
inc
xchg
xchg
lods
sbb
test
cmpsb
imul
pop
mov
jle
xlat
add
cmc
mov
push
subl
jne
dec
fildl
repnz
sbb
mov
loopne
jg
xchg
pop
lcall
sbb
stos
pop
xchg
xor
outsb
sahf
int
cmpb
sub
shlb
add
insb
rorb
xor
cmpsl
addr16
jno
and
lock
push
insl
mov
mov
jmp
or
je
xchg
dec
inc
fidivl
jmp
cmp
sub
adc
mov
inc
add
or
add
sbb
je
sbb
fimuls
ficoml
and
mov
icebp
fsubrl
iret
pop
imul
xchg
and
push
pop
sti
push
dec
inc
mov
sub
mov
fistps
push
mov
std
aam
push
mov
lcall
insl
sbb
loopne
mov
stos
sub
out
sub
xor
bound
sbb
mov
icebp
insb
xchg
icebp
push
insb
stos
sbb
inc
jmp
outsl
lret
sbbb
out
sub
dec
incl
cmp
imul
mov
sbb
push
dec
movsl
and
xorb
mov
inc
aad
push
popa
push
scas
cmc
push
jg
sahf
sub
out
fs
lea
xchg
stos
popa
add
repz
xchg
add
add
bound
loop
sbb
mov
adc
xor
insb
push
xchg
cwtl
fs
lods
aad
push
iret
mov
adc
rolb
xor
ja
arpl
js
jbe
into
push
jmp
pop
and
bnd
jno
jg
jnp
int
dec
in
sti
inc
xchg
lcall
out
repz
std
dec
iret
jmp
jno
or
dec
dec
sbb
jb
cli
sub
xchg
jns
sbb
mov
fisubs
sub
adc
mov
pop
mov
push
loopne
add
pop
adc
lret
cli
pop
pop
jmp
cltd
inc
jg
push
mov
sbb
fstl
add
adc
xchg
bound
dec
xchg
jecxz
sub
sbb
pop
cli
cmpl
movb
jmp
cs
xchg
scas
xchg
gs
fs
mov
shl
dec
and
jge
push
inc
lea
cmp
push
dec
push
xchg
mov
sar
cs
xchg
mov
les
xor
push
shrb
aas
push
mov
inc
pop
pop
dec
outsl
mov
idivl
scas
jb
test
jo
mov
jmp
push
sbb
scas
and
and
ficoml
shll
repnz
cltd
std
loop
fcoms
jns
fwait
inc
enter
xchg
add
insb
xor
nop
inc
hlt
dec
lods
dec
in
cmp
ljmp
daa
xlat
fwait
sub
mov
cltd
fisubrl
cmp
test
xchg
ret
pushf
stc
or
add
mov
jno
mov
stos
cmpsl
sbb
mov
xor
and
or
xlat
cmpsl
or
mov
cmp
mov
inc
orb
lcall
or
mov
mov
mov
xchg
out
lcall
cmp
jecxz
scas
bnd
sbb
shll
mov
add
cltd
or
stos
ret
hlt
fmull
push
xchg
pop
cmp
gs
or
mov
inc
out
xor
ljmp
dec
inc
gs
jbe
lods
mov
add
fiaddl
dec
sbb
and
sub
aad
xlat
add
xor
or
add
xor
adc
es
xchg
in
push
xor
jp
cmp
lret
test
testb
bound
leave
jbe
sub
mov
aad
bound
and
xchg
jmp
aaa
mov
and
aad
out
mov
jge
mov
jle
adc
sti
sar
lahf
fs
das
cmp
test
cmpl
ret
push
popf
cltd
and
lods
mov
inc
xor
lods
test
add
sarb
pop
sti
push
pop
push
xchg
xchg
push
jne
adc
mov
and
dec
jbe
mov
pop
int3
adc
push
adc
sbb
ss
lahf
sti
mov
scas
xor
mov
jl
push
call
lahf
add
push
sub
pop
xchg
push
pop
mov
mov
sub
fcomps
scas
push
sub
rorb
movsb
mov
pop
cmpsb
and
cmp
cmpsb
sub
add
xchg
sbbb
in
and
cmp
fs
cmp
ja
fildl
ret
test
hlt
push
add
and
shlb
aam
push
orl
flds
or
cmpsl
pop
call
bound
xchg
aas
dec
fldt
dec
mov
mov
jnp
mov
bound
in
or
jne
xchg
cmp
cmp
sbb
shrb
cmp
and
xor
inc
adc
test
stos
xchg
daa
js
jnp
xchg
pop
cmp
pop
mov
pop
sub
mov
mov
cmp
in
ds
adc
xchg
dec
rclb
lods
push
lret
andl
xlat
xor
roll
xchg
push
lds
mov
mov
arpl
pushl
ret
cmpsb
adc
pause
je
daa
push
inc
mov
cmp
loop
sarb
pop
mov
mov
jg
imul
subl
cwtl
pusha
or
mov
cmp
test
push
xor
jbe
scas
mov
outsb
test
imul
jbe
movsb
lds
push
dec
es
loopne
cmp
jl
mov
out
loopne
xchg
movsb
jp
sub
add
aas
in
xlat
sar
imul
sub
sbb
outsb
inc
xor
sbb
pop
push
movsl
pop
je
sbb
inc
or
ret
sti
inc
mov
cmp
push
dec
aad
jns
orl
in
inc
jecxz
imul
xchg
cmp
jmp
mov
fcmovb
pop
sub
lret
mov
cmp
inc
jp
push
in
outsl
fdivl
lock
leave
mov
mov
lods
pop
repz
inc
loopne
jg
or
jmp
xchg
add
std
bswap
xchg
cmp
arpl
enter
and
cmp
sahf
sub
jnp
and
xor
cld
pushf
aad
ds
pushf
or
add
gs
fdivrs
out
push
jmp
pop
dec
test
out
inc
shrl
stc
pushf
fwait
jne
xchg
cs
jge
arpl
xchg
or
ds
or
mov
fdivl
into
cli
pop
sbb
xchg
mov
decl
dec
sub
mov
pop
cmp
mov
sbb
call
clc
push
mov
pop
mov
xchg
or
mov
notb
xor
ret
jbe
lret
jge
cwtl
sub
aas
jnp
inc
imul
mov
pop
adc
mov
cmpb
loop
mov
loop
out
mov
test
push
in
imul
popa
out
mov
dec
xchg
mov
rorl
sarb
pusha
adc
dec
cmp
dec
dec
and
push
mov
cmp
jb
imul
inc
rclb
mov
jae
fcom
lods
ds
xor
mov
loopne
xor
pop
push
sbbb
into
into
pop
push
into
fs
testl
aaa
out
stc
dec
bound
cmp
xchg
inc
pusha
lahf
pop
inc
cltd
sub
leave
ret
inc
jmp
cli
adc
scas
xor
out
push
repz
loope
ds
test
pop
cmp
mov
or
adc
sub
icebp
pop
sahf
or
sbbl
in
mov
mov
jae
inc
out
xor
ds
jg
adc
pop
push
andl
dec
cli
or
dec
cmp
jae
rolb
adc
fdivrs
pushf
mov
xchg
lods
sbb
pop
in
xor
cli
sub
push
shlb
fucomi
js
xor
or
out
and
std
in
outsl
nop
daa
mov
adc
aaa
jae
popw
pop
or
clc
stc
push
jae
mov
lods
cmp
lcall
inc
push
rep
ja
dec
in
push
fnsave
push
lret
sarb
in
dec
popf
mov
mov
mov
ret
fistps
cmpsl
mov
adc
xchg
pop
orb
in
aaa
inc
loop
addr16
xchg
popa
iret
sbb
lcall
push
sbb
dec
pop
out
mov
mov
xchg
mov
jecxz
adc
out
lds
adc
pop
mov
pop
sub
imul
inc
push
int3
lret
xchg
fldl
cmp
test
xchg
lcall
mov
adc
xchg
sbb
data16
mov
repz
fcomps
sbb
pop
scas
leave
cmp
mov
or
mov
jnp
jae
sbb
stos
mov
rclb
xchg
jmp
mov
xchg
pop
xchg
add
lcall
shll
in
test
in
push
push
int3
or
cmp
fs
out
pop
ret
fisubl
xlat
aas
push
pop
adc
mov
push
xchg
test
fcoms
add
sbb
add
xor
xchg
mov
cmp
popf
dec
push
insl
rorl
jno
in
mov
and
adc
lea
or
sbb
dec
arpl
mov
shll
cmp
mov
movsb
daa
out
cmp
bound
jo
in
cwtl
mov
mov
in
push
jge
xor
test
adc
out
test
arpl
xchg
push
add
leave
fwait
shlb
adc
xchg
ret
fcomps
test
xor
adc
jl
adc
rclb
push
sub
repz
ds
mov
cs
imul
test
mov
fdivrl
sbb
les
fistpl
mov
add
js
and
jns
orl
push
xor
mov
xor
sahf
dec
ret
and
movl
lret
jae
ret
mov
imul
sub
ret
adc
andb
int3
and
ds
pop
or
cmp
or
xchg
loopne
push
cmp
mov
push
dec
or
jne
roll
nop
push
lahf
scas
jge
mov
jl
test
andb
jl
mov
mov
sub
pop
push
es
in
push
aaa
push
mov
outsb
and
jp
push
ja
cwtl
pop
pop
imul
repz
jnp
mov
xor
push
add
loope
into
add
out
dec
mov
cmp
inc
xchg
push
addr16
mov
push
push
nop
cmp
fdivr
aaa
adc
mov
or
pusha
cs
pusha
lods
xor
mov
pop
inc
and
dec
inc
add
shrb
test
or
inc
push
and
fcmovbe
scas
imul
push
cmp
aam
test
mov
jbe
mov
ret
dec
inc
rcll
ret
mov
emms
inc
scas
cmp
or
dec
lret
aaa
rolb
pop
jbe
inc
cli
ret
shr
add
or
fldenv
rol
add
inc
add
movl
mov
jmp
movsl
dec
sub
dec
add
clc
sbb
mov
or
sbb
jle
mov
aam
imul
push
imulb
adc
inc
xor
adc
aaa
jae
mov
in
int
in
push
inc
lcall
push
or
jle
dec
pop
dec
call
lods
jbe
inc
ret
push
add
dec
lahf
inc
jae
dec
add
or
and
mov
lcall
imul
iret
icebp
add
int
outsl
je
fadd
cmc
fiadds
ja
les
insb
mov
add
jecxz
xor
outsb
mov
and
cmpsl
shr
mov
cli
fsubl
inc
sti
loopne
xor
outsb
iret
dec
iret
cmp
push
jns
push
add
jne
lods
ja
je
das
and
es
pop
cmp
sub
jne
std
adc
cmp
shlb
scas
rolb
push
sbb
mov
xchg
fisubrl
loope
adc
cmp
pushf
ja
sub
rcrb
xchg
and
adc
xorb
test
insl
in
or
pop
xor
ds
aad
inc
push
push
pop
and
lahf
pop
mov
cmpl
andb
sbb
or
cmp
iret
jge
add
ja
inc
std
lret
mov
or
jo
jmp
xor
bound
mov
loopne
stos
cmc
nop
dec
stos
inc
in
pop
enter
cmp
fmul
inc
lds
add
or
xor
jb
cmp
sbb
faddl
fdivr
inc
xchg
loop
sub
test
ljmp
xchg
jae
mov
ja
adc
and
or
jns
jns
mov
jno
ss
cwtl
sub
push
mov
xchg
scas
das
clc
lret
pop
cmp
cwtl
jne
mov
adc
lahf
out
xor
test
dec
cmpsl
add
lock
cvtdq2ps
sbb
push
shl
xchg
sub
dec
notb
or
add
jp
lock
adc
lret
sub
stos
xchg
loop
lahf
iret
add
xor
sbb
mov
sbb
icebp
push
aad
es
cmp
iret
aaa
das
adc
mov
sarb
add
dec
loopne
xchg
nop
clc
jne
leave
xchg
cwtl
fucomip
mov
stos
mov
mov
or
cli
adc
int3
add
push
fisttpl
xor
int
pop
jns
mov
ficompl
sub
repz
cmp
iret
int3
mov
popa
add
test
sbb
jo
pop
inc
pusha
cmp
mov
in
cmp
sbb
and
xchg
xchg
clc
roll
sub
mov
mov
mov
nop
cmp
shl
mov
fwait
icebp
cli
mov
sbb
push
xchg
inc
ss
fisubs
and
sbb
outsl
mov
adc
insb
mov
push
jo
ljmp
cld
fs
popf
rol
and
int3
jno
int
in
xor
push
std
out
dec
pop
sbb
xchg
dec
add
and
andb
enter
add
aas
test
pop
outsl
and
mov
mov
outsb
adc
roll
jno
xchg
cwtl
pop
cld
in
dec
pop
cld
aas
cmp
pop
inc
lret
orl
mov
dec
fcoms
aad
lcall
xchg
clc
in
pop
mov
jo
lods
fstp
push
test
or
or
cmp
mov
sub
mov
mov
hlt
cli
div
popf
push
sub
loop
cs
xlat
iret
insl
jae
lods
rorl
ret
std
test
cmp
leave
scas
adc
inc
mov
lahf
or
jp
lds
inc
arpl
out
sbb
cmp
inc
pop
aas
push
sbb
imul
lods
les
mov
add
inc
pushf
pusha
in
xchg
or
mov
mov
pop
and
mov
jmp
nop
xor
outsl
xor
sbb
inc
outsl
mov
fwait
cmp
jp
cmpsl
sti
dec
mov
mov
cmc
pushf
fdiv
in
inc
js
add
dec
cmp
jmp
mov
or
test
add
mov
xor
dec
ljmp
sub
sub
out
sub
or
or
push
daa
rcl
sbb
lahf
pop
popa
push
inc
xchg
dec
adc
jge
ret
pop
xchg
or
mov
and
mov
mov
decb
lds
daa
push
fidivrl
pop
pop
pop
xor
in
xchg
or
imul
fucom
scas
repz
inc
imul
adc
cmpb
mov
jns
cwtl
inc
daa
pop
push
xchg
mov
sahf
ficoml
adc
push
and
dec
jp
out
pop
jp
pop
lods
ret
enter
push
and
fprem
les
sbb
xorb
rol
xor
stos
mov
mov
iret
and
mov
jle
mov
pushf
in
sbb
xchg
add
cmp
test
daa
cmpsl
mov
lret
inc
jo
cmp
push
cmp
add
std
jge
call
repz
ficompl
in
jp
repz
fwait
lret
lds
shll
and
mov
xchg
jecxz
cltd
push
leave
lods
inc
mov
pop
das
dec
rdtsc
mov
out
int3
xchg
inc
fisubrs
ja
xchg
sbb
mov
inc
fldl
js
mov
mov
scas
ret
lods
fdivr
lea
add
repz
mov
bound
addl
push
seta
jbe
mov
sub
movsb
fistl
pusha
adc
mov
pop
mov
je
mov
add
lock
cmp
lods
scas
mov
mov
test
mov
test
add
inc
cld
stos
je
jb
xor
mov
cmc
xor
xor
sub
dec
insl
outsl
sub
je
and
mov
or
insl
xor
mov
mov
dec
jle
sub
sahf
shl
jmp
cmp
push
stos
jecxz
mov
adc
stc
neg
imul
adc
in
push
add
outsl
mov
mov
shr
dec
sbb
movsl
out
lcall
sbb
cmpsl
and
mov
mov
jmp
pop
dec
dec
xor
enter
xor
pop
jno
out
inc
push
add
repnz
mov
cmc
adc
xchg
into
jne
mov
mov
ds
inc
mov
mov
aad
cmp
mov
les
in
loop
imul
xchg
ficoml
xchg
and
mov
aaa
inc
xchg
out
rorl
pop
fwait
and
ds
or
push
xor
xor
test
or
xchg
lret
mov
xor
mov
dec
add
dec
pop
std
fildll
push
or
xchg
mov
je
dec
push
mov
jmp
decl
jno
out
push
mov
fildl
out
imul
add
mov
into
mov
lock
pop
hlt
pop
add
jnp
dec
mov
daa
in
xor
mov
inc
sbb
cmp
or
xchg
inc
sti
mov
and
inc
addr16
pop
and
repz
xchg
mov
das
or
xor
in
popf
sbb
iret
dec
pop
sbb
xchg
mov
lret
loope
mov
cs
shr
pop
fwait
dec
ret
xchg
pusha
leave
shlb
cltd
dec
filds
dec
or
sub
pushf
cmp
inc
std
mov
hlt
in
sub
jo
sub
cltd
xlat
xor
push
aaa
or
jno
sahf
loopne
out
in
pop
stos
cmc
imul
inc
fnstcw
mov
xchg
ljmp
adc
loopne
inc
scas
pop
fidivs
cld
icebp
mov
enter
roll
movsl
fldcw
pop
inc
out
insl
dec
xchg
jecxz
push
or
sub
xor
mov
pop
push
mov
jmp
and
fiaddl
add
aaa
sub
ret
fsubrl
imul
pop
nop
mov
mov
dec
mov
dec
das
dec
pushf
push
xchg
jno
cmp
jg
xchg
jge
or
cltd
mov
mov
push
ret
sub
mov
jecxz
out
pop
lds
or
lods
mov
mov
pop
add
repz
nop
dec
adc
mov
sub
dec
xchg
test
out
push
sbb
sub
rorb
xchg
lret
pop
push
fdivs
mov
shlb
push
cmp
mov
movsb
jle
and
out
push
test
inc
sub
call
loope
ds
enter
lret
jae
mov
jge
pop
in
int3
adcb
aas
and
cld
jb
movsb
test
ds
pop
fcoms
push
adc
pop
or
pop
adc
xor
call
pop
pop
rcrb
jp
mov
xchg
xlat
pop
imul
lds
pop
hlt
mov
pop
add
jo
out
pop
adc
loop
sbb
jmp
es
xchg
push
stos
add
and
lods
and
dec
mov
testl
loopne
lods
push
or
rorl
out
adc
test
inc
gs
cmp
ljmp
push
out
idivl
gs
cmp
pop
sbb
mulb
mov
sub
sbb
jo
xor
insl
mov
dec
mov
test
mull
mov
sub
ret
pushf
jle
std
mov
mov
mov
xor
fisttps
subb
cli
loope
jbe
int3
push
ret
mov
jne
aam
aaa
mov
aad
inc
adc
inc
sbbl
faddl
clc
ss
movb
push
jmp
int3
mov
xchg
cli
pop
jne
jb
in
bound
jnp
outsb
push
xchg
mov
xchg
popf
adc
clc
rcrb
adc
sub
pop
scas
movsl
ja
push
pop
mov
adc
nop
lods
lret
les
add
or
and
movsl
and
in
out
sub
cmp
hlt
fucomp
xchg
sbb
outsb
insb
or
mov
push
daa
mov
add
aas
push
pop
push
push
out
dec
add
xor
xor
shlb
sbb
dec
add
xor
js
adc
mov
icebp
lret
in
inc
dec
movsl
shr
das
cmp
ljmp
arpl
sub
imul
icebp
mov
enter
repz
aam
mov
mov
cld
xchg
js
ja
std
pop
cmp
xchg
std
and
icebp
adc
ja
or
psubw
popf
fstps
sbb
inc
mov
incl
pop
roll
clc
mov
imul
pop
add
out
xor
je
pop
pusha
pop
jns
xlat
and
pop
outsb
ljmp
pop
stos
adc
jle
mov
out
out
nop
add
push
mov
test
or
lock
push
shr
lea
mov
cmp
dec
fimuls
pop
inc
insl
mov
es
inc
dec
and
out
popa
push
push
cmp
es
xor
mov
xchg
mov
sti
dec
mov
mov
aam
daa
mov
clc
push
and
icebp
push
loop
xchg
cli
mov
lods
pop
out
filds
mov
cwtl
ficomps
adc
outsl
scas
jns
xlat
sub
xor
outsb
es
and
xor
sbb
lcall
or
test
test
bound
inc
movsl
dec
or
cmp
pop
jnp
dec
js
orl
mov
add
inc
and
mov
das
std
stos
cmp
mov
test
lret
cltd
xchg
imul
pop
mov
adc
fcmovnbe
sahf
fstpl
test
push
nop
xor
xchg
out
decl
jle
imul
mov
ret
test
adc
les
sub
xor
nop
pop
lods
mov
xor
fdiv
aaa
push
adc
sbb
mov
inc
ja
sbb
xchg
sbb
into
fs
mov
and
js
sub
xor
ficomps
das
stos
cmc
push
sbb
in
xlat
mov
movsl
jnp
movsl
add
jbe
xor
push
popf
mov
notl
out
pop
ja
sahf
bound
cld
jnp
cmp
sbb
lahf
add
and
dec
mov
imul
out
notb
loop
addr16
add
dec
popa
sub
leave
mov
outsl
insl
mov
push
dec
mov
xor
and
jge
pop
lods
lahf
les
mov
or
pop
or
pop
and
fidivl
mov
lods
enter
popf
or
add
adc
cmpsb
xchg
jp
sub
nop
or
aas
xchg
stos
lcall
mov
pop
insb
cmp
jle
push
cwtl
push
pop
or
xor
cmp
popa
xor
outsb
gs
jl
dec
mov
fdivrl
sub
test
dec
enter
jo
inc
enter
inc
pop
aas
loope
aad
movsb
movsb
in
pop
sbb
xor
pop
sub
mov
fwait
insb
jne
in
ljmp
xchg
nop
xchg
lds
mov
add
fwait
push
pop
into
cmp
lods
call
out
sbb
out
mov
mov
pop
push
sbb
sarl
sub
idivl
pop
test
shlb
loopne
out
rcrl
fsubrl
repnz
icebp
icebp
cmp
add
cmp
les
mov
xchg
mov
insl
in
les
xchg
add
jp
lcall
mov
test
sub
jl
fstl
fwait
push
aad
aas
push
mov
inc
rcrb
fiaddl
leave
inc
jnp
andl
js
dec
adc
push
enter
and
aam
jg
lods
sbb
pop
add
mov
arpl
sbb
mov
pusha
mov
outsb
jge
sub
xrelease
sub
lret
mov
leave
push
xlat
stos
bound
mov
scas
imul
addr16
ret
push
and
scas
pop
fwait
xchg
push
xlat
roll
jg
fmuls
add
cmp
xor
inc
stos
jmp
xchg
mov
and
orb
lret
pop
mov
test
pop
notb
in
mov
dec
fisttpll
mov
fiaddl
jno
lret
imul
cmp
cmp
lock
mov
sbbl
push
mov
shll
in
inc
cs
shrl
lret
dec
mov
lret
adc
adc
in
ret
sub
mov
adc
rcll
jo
movsb
add
int
add
rclb
and
int
sbb
in
add
or
hlt
mov
lods
pop
jae
out
sub
cmp
cmp
add
imul
test
ss
inc
das
es
inc
cmp
lret
repnz
adc
adc
fidivs
out
dec
mull
lock
icebp
mov
shlb
in
adc
mov
push
jle
or
sbb
testl
stc
inc
leave
std
sub
pop
mov
push
fwait
hlt
xor
or
sub
ss
arpl
arpl
sbb
dec
out
je
movsb
sbb
jecxz
xchg
sbb
adc
dec
inc
mov
mov
movsb
aad
xchg
scas
aaa
adc
aam
jmp
mov
lcall
lret
or
out
outsl
sti
shlb
adc
pop
xlat
aad
cmp
in
jg
outsb
int3
cmpsb
frstor
push
out
push
jmp
sbb
mov
inc
mov
lcall
call
call
inc
mull
inc
add
ja
add
imul
xor
ja
movsl
push
pop
xchg
mov
add
in
pop
jmp
daa
and
inc
sbb
cld
or
inc
shrb
mov
pop
pop
xchg
movsb
loope
inc
ljmp
popf
dec
lock
loope
out
jnp
inc
clc
add
js
pop
dec
out
cli
gs
out
arpl
into
jg
adc
jge
inc
icebp
mov
adc
jae
xchg
mov
pop
ja
xor
jbe
inc
sbb
es
cmp
ljmp
sti
orb
lods
pop
mov
repz
jge
or
cmc
mov
pop
inc
into
push
popa
dec
xor
dec
filds
add
push
ja
data16
or
xor
leave
sbb
ds
iret
pushf
jae
xchg
mov
cmp
out
jmp
popa
pop
mov
or
lods
ljmp
inc
or
sub
mov
shll
mov
dec
jp
jmp
xchg
mov
shlb
shll
fwait
push
mov
adc
fstpl
add
insb
shrb
add
sar
fwait
movsb
sub
inc
sbb
sub
mov
call
add
jnp
adcb
es
movsb
mov
clc
in
mov
pop
add
int
xor
mov
aam
inc
fldenv
stos
push
mov
push
aam
or
adc
pop
mov
push
rorl
adc
idiv
into
movsb
mov
addr16
movl
push
xor
je
sar
pop
arpl
adc
jne
cld
arpl
cld
insb
je
movsl
mov
mov
or
std
dec
inc
jp
outsl
xor
sti
call
mov
lods
dec
test
jnp
loop
jo
rcll
sub
xchg
xchg
push
rol
push
scas
jae
xchg
pop
pop
mov
jecxz
jno
icebp
cmp
fdivp
jb
outsl
es
aaa
pop
repz
orl
inc
sub
mov
mov
inc
add
pusha
gs
out
jmp
jle
or
popf
sub
cli
jb
adc
and
stos
stos
cmpsb
mov
pop
mov
xchg
jbe
nop
fsts
iret
imul
jnp
lret
adc
pop
jp
pop
jnp
test
and
popa
scas
icebp
into
or
fwait
add
addr16
adcl
mov
scas
fwait
adc
mov
push
sti
rcrb
sbb
mov
outsb
push
inc
fildl
xchg
push
or
xor
std
mov
frstor
mov
in
inc
push
jp
not
push
adc
or
mulb
jns
xor
je
lret
jp
mov
mov
and
and
dec
sub
in
aam
clc
pop
jmp
sub
adcl
push
mov
out
popl
and
lds
lret
das
adc
xchg
dec
fmuls
mov
popf
adc
in
mov
cld
enter
push
inc
mov
inc
adc
ret
mov
rcrb
rcr
sti
mov
adc
adc
stos
fld
mov
fucomi
adc
mov
out
scas
cmp
sbb
idivb
data16
nop
mov
jnp
fadd
in
xor
xor
jne
outsb
lds
jecxz
xor
shll
outsl
sbb
cmp
mov
xchg
mov
sub
pop
xchg
xchg
cmp
js
sbbl
lcall
arpl
cmp
xor
and
gs
jns
mov
inc
sbb
mov
hlt
shl
xor
add
sub
outsb
xchg
mov
xchg
mov
sub
push
inc
nop
sahf
xchg
pop
mov
mov
js
jl
mov
sbb
mov
movsl
out
and
lcall
jl
inc
popa
xor
pop
lea
rolb
rolb
insl
add
mov
subl
arpl
cmp
jnp
pop
pop
and
mov
add
leave
ja
icebp
pusha
push
stc
lahf
push
jle
pop
outsb
and
dec
popa
out
xchg
mov
stos
mov
data16
aaa
mov
dec
pop
push
xchg
icebp
pop
adc
pop
cmpsl
or
sar
repz
and
lods
cmp
or
cmpsl
mov
lods
shll
adc
call
cmc
push
add
outsb
sub
test
daa
push
pop
rcr
mov
pop
mov
push
mov
gs
mov
inc
and
into
addr16
arpl
and
ja
inc
imul
xlat
mov
or
sbbl
xchg
mov
cmpsl
fs
jnp
sahf
cld
and
sbb
fisubs
sbb
and
sub
mov
test
popf
dec
inc
test
daa
enter
sti
rolb
aas
jge
dec
mov
ret
mov
loop
mov
nop
fmulp
xor
xchg
stc
daa
daa
push
ret
xor
stos
inc
dec
paddusb
mov
insb
or
roll
imul
leave
adc
push
insb
movsl
leave
decb
fwait
sarb
lods
pop
cld
ds
or
jecxz
dec
add
add
push
loopne
aaa
sbb
mov
repz
xor
in
je
push
adc
pop
sahf
hlt
sub
sub
lret
cltd
cmp
push
or
out
and
or
or
gs
pop
int3
jp
dec
insb
sbb
aaa
cmpsb
lods
das
xor
setns
xor
in
push
iret
fdivrl
push
stc
imul
sub
and
add
dec
pop
and
add
cld
push
in
fidivrl
lds
popf
es
dec
xor
cmp
or
push
iret
xchg
icebp
lahf
test
xor
out
cli
dec
sbb
pop
cmp
nop
in
xor
pop
inc
inc
jp
int
adc
out
adc
repnz
cmp
sub
mov
xchg
add
jp
imul
xor
push
sbb
iret
addl
jns
and
scas
outsl
adc
mov
sub
stos
nop
out
insl
push
fisubrl
and
adc
rcll
pop
dec
jb
notb
data16
das
rorb
jg
testb
mov
popf
sub
sub
xchg
mov
push
mov
sbb
cs
dec
ja
test
adc
jl
mov
pop
in
lock
stos
push
test
sub
mov
pop
dec
lock
and
cld
or
xchg
pusha
jmp
sbb
add
or
test
and
cmp
cmc
mov
insl
loop
push
jo
fisubl
jge
int
loop
loope
ds
and
or
cmpsl
lret
das
and
xchg
jno
sbb
rcr
or
push
add
ret
cwtl
push
xchg
pop
lods
imul
fdivs
nop
xchg
or
sub
scas
mov
adc
xorb
popf
mov
xor
inc
nop
imul
xlat
jne
jge
add
push
pop
sbbb
jmp
add
outsb
xor
xor
lock
push
scas
in
data16
adc
mov
or
dec
sahf
into
popa
daa
repz
cmp
loopne
pop
adc
lds
ret
icebp
xchg
mov
jno
adcb
daa
lahf
add
and
mov
jp
aaa
inc
xchg
mov
xchg
std
cmpsl
bound
lret
repnz
sbbl
icebp
inc
sbb
rcrb
mov
push
repz
xchg
fucomip
or
jnp
mov
dec
rolb
mov
js
mov
js
xor
lret
in
adc
outsl
popa
xor
loope
dec
lahf
imul
xchg
js
es
pop
jae
mov
ja
and
mov
inc
jns
movsl
fs
cmpsl
gs
es
mov
push
sbb
xchg
pushaw
xchg
adc
cmp
rorl
cld
dec
xchg
cmp
sub
and
push
daa
mov
mov
push
ds
xchg
cmpsl
or
inc
gs
dec
mov
rcll
cmp
or
sahf
adc
mov
mov
les
repnz
clc
jbe
adc
push
ret
pop
push
xchg
pop
fsubl
repz
inc
jne
andnps
jg
out
fnsave
into
cmp
push
idivl
imul
add
lcall
shlb
mov
ljmp
adc
aas
into
leave
rorb
push
icebp
add
lods
pop
push
cwtl
gs
lcall
repnz
inc
stos
sti
or
fsub
jns
pusha
add
mov
movsl
pushf
arpl
in
inc
sbb
hlt
pop
push
cmpsb
lahf
and
and
test
jmp
jne
into
test
arpl
inc
xchg
pop
sbb
add
sbb
ljmp
rorl
mov
or
jmp
outsl
sbb
inc
mov
or
paddd
add
push
int3
mov
in
cmp
mov
jg
mov
or
mov
jo
fndisi(8087
pop
int
shll
ja
test
xor
inc
adc
cmpsl
add
pop
and
loop
xchg
xlat
sub
lret
xchg
push
sub
aas
push
gs
stc
pop
imul
jle
jbe
mov
stc
mov
jle
mov
mov
ffreep
fldt
aad
sbb
test
into
cmc
das
sub
pop
or
push
mov
or
aas
cmc
cltd
and
mov
test
jb
jb
popf
repnz
add
pop
sbb
adc
push
mov
jmp
xchg
ret
dec
das
in
shrl
icebp
int3
add
insl
push
adc
ficomps
lahf
or
dec
jmp
nop
cs
xor
mov
jmp
or
xchg
mov
pop
js
dec
imul
jp
sahf
call
push
into
fnsave
fldl
jo
jg
pop
pushf
jae
pop
incl
out
pop
and
fidivs
jge
negl
test
cmp
or
lret
mov
cmp
sub
xchg
mov
cs
inc
insb
or
testl
out
push
cmp
rcrl
fisubrs
inc
je
jl
sub
push
outsl
imul
addr16
sub
mov
mov
xor
insb
or
sub
cwtl
les
inc
jp
sbb
mov
bound
jmp
cmp
icebp
pop
dec
cmp
adc
xchg
mov
inc
mov
or
fbstp
fists
adc
stos
repnz
and
sbb
mov
js
mov
out
add
jge
bound
or
cmpb
dec
lods
xchg
ret
outsl
je
and
pop
nop
cmpb
mov
dec
adc
pusha
out
or
fiadds
leave
push
in
xor
cld
sub
add
loope
xor
xor
adc
das
mov
pushl
sbb
sbb
repz
or
mov
out
mov
cmc
mov
mov
or
add
das
push
arpl
sbb
push
cmp
or
arpl
mov
pop
inc
ss
adcl
insb
or
shrl
mov
imul
push
push
push
dec
adcb
cmp
mov
es
test
lahf
out
frstor
mov
test
cmovae
mov
ret
add
jmp
inc
add
lods
adc
cmc
insb
fdivrp
orb
mov
jo
sub
fistpl
leave
rcrb
sub
xchg
jnp
faddl
inc
lcall
mull
push
shll
lods
push
data16
dec
jg
mov
cmpsb
mov
and
xchg
insl
in
and
lret
mov
xchg
jecxz
pushf
lret
mov
pop
into
imul
rcrl
xor
cld
xor
mov
stc
ror
into
loop
mov
jmp
adc
mov
pop
loop
repnz
cmp
test
stos
jecxz
pop
or
pop
out
xor
hlt
mov
fwait
push
es
or
stos
dec
dec
das
dec
xchg
pop
sub
or
cmp
push
dec
xchg
sbb
lret
clc
scas
jo
mov
popf
dec
out
insl
stos
repz
mov
nop
fimuls
imul
scas
int3
fbstp
dec
or
sbb
jnp
ret
fdivrs
mov
arpl
dec
outsb
or
mov
lahf
sub
mov
scas
push
imul
hlt
notb
enter
pushf
xor
mov
enter
mov
mov
or
adc
loop
lds
notl
adc
fcoms
shll
xor
dec
ja
inc
je
cld
lods
ret
mov
pop
mov
inc
xlat
cmp
call
loope
jl
xchg
out
push
inc
add
add
sbbl
shrb
lock
enter
mov
bnd
push
sti
xchg
pop
inc
jmp
or
lods
push
pushf
dec
cld
jne
jo
push
lcall
clc
cmp
xor
sbb
cmp
sbb
dec
sbb
pop
pop
pop
xor
and
cmp
add
mov
fistl
bound
push
ret
or
jns
lock
pop
inc
jle
data16
sub
aas
repz
in
in
into
leave
mov
lahf
loope
outsb
pop
and
es
in
shll
stc
pop
lcall
inc
or
fadds
mov
incl
lds
scas
subb
inc
inc
psllw
test
std
mov
cld
jno
and
jbe
jnp
shr
pop
push
jno
test
std
sti
mov
fwait
ds
movsl
addr16
push
leave
add
sub
add
test
scas
call
jae
andl
mov
adc
int
sahf
mov
lret
stos
aad
sub
jp
push
add
add
pop
push
add
outsl
add
mov
push
push
xor
or
incl
inc
mov
sti
sbb
sti
jnp
jae
je
mov
sbb
xorb
cmp
add
add
aad
nop
mov
add
mov
scas
test
enter
pop
inc
stos
lcall
stos
push
outsl
std
and
nop
sbb
sti
adc
mov
imul
jne
js
inc
loope
cmp
ja
out
shl
cmp
popf
mov
daa
or
fimull
cs
jne
xor
in
pop
cmc
or
rcrl
pop
and
out
add
movsb
clc
push
lret
pop
xor
test
xchg
loopne
or
mov
out
dec
iret
push
ret
cmpsl
in
std
ror
mov
ja
mov
hlt
mov
add
cmpsb
lcall
flds
adc
jae
inc
js
jecxz
cltd
add
xchg
mov
pop
xchg
ss
xor
pop
or
sub
dec
jnp
sub
in
add
enter
pop
push
cmpb
jmp
cmpsl
or
loopne
clc
jno
aad
and
loopne
mov
xor
mov
les
ljmp
fcmove
in
mov
cmc
outsb
sti
xchg
sbb
xor
dec
jb
stos
into
dec
mov
icebp
mov
add
push
dec
mov
inc
popf
jbe
sub
mov
lahf
enter
popa
repz
xchg
insb
cmp
or
lahf
add
or
mov
mov
and
icebp
addr16
addb
jle
inc
dec
inc
aas
std
lea
movsl
pop
xor
xor
push
cmp
aam
fwait
out
nop
mov
mov
movsl
mov
gs
and
fisubrs
pop
les
lret
push
leave
xor
pusha
dec
sarl
or
mov
adc
mov
repnz
cmp
mov
cld
jmp
aam
rcll
int
das
pop
push
jle
hlt
dec
xchg
scas
popa
sbb
xor
in
nop
jbe
jg
push
test
jmp
mov
ss
test
push
clc
add
loope
ljmp
pop
mov
dec
imul
call
sbb
scas
and
pop
adc
mov
das
aaa
dec
jp
lds
add
push
adc
adc
and
pop
adc
jbe
cmp
in
fstpl
aad
stc
cmc
bound
pop
add
sub
stos
jmp
inc
ds
andb
mov
push
dec
push
xchg
inc
cmp
fs
jle
adc
sbb
imul
mov
stos
lock
int
mov
ret
in
pop
popl
mov
mov
mov
push
pop
jnp
sti
nop
push
ss
sbb
fmull
mov
outsl
mov
or
pop
lret
or
mov
inc
fdiv
push
out
sub
pop
inc
cmp
push
fists
inc
test
sub
pop
rol
dec
mov
ss
xor
push
mov
mov
and
dec
inc
arpl
lahf
iret
insb
movsl
shl
popa
jae
shrl
mov
lcall
cli
mov
pop
dec
pushf
pop
mov
xor
sbb
dec
ljmp
insb
cli
pop
imulb
pusha
icebp
and
jno
lods
repnz
cwtl
test
cltd
dec
inc
sbb
dec
sub
stos
push
jne
sub
jle
out
push
in
gs
adc
pop
ja
imul
push
adc
daa
loope
cmp
fisubrs
fcmovnu
jnp
in
cs
lret
pop
aad
rorl
add
fsubl
scas
push
sub
clc
in
sub
xchg
xor
xchg
mov
mov
sarb
xchg
jle
in
inc
pop
mov
jle
je
jns
cmpsb
test
push
adc
inc
dec
leave
mov
pusha
inc
imul
out
setge
mov
push
out
xor
dec
inc
xor
lahf
pop
sahf
or
loopne
mov
mov
shll
lods
aam
arpl
mov
sub
jecxz
insl
jno
mov
or
lods
or
jo
add
in
xchg
stos
or
sarl
in
jle
mov
ljmp
leave
jl
adc
adc
xchg
mov
fldcw
lds
push
mov
neg
idiv
mov
loop
sbb
jo
out
out
mov
adc
mov
cwtl
mov
sbb
jae
adc
cmpsb
xchg
test
orl
mov
xor
push
fidivs
addl
xchg
leave
bswap
mov
das
jae
mov
or
push
mov
and
add
xchg
pusha
std
popa
pop
mov
mov
cs
xchg
lahf
cld
add
repz
mov
out
inc
adc
push
pop
fstpl
stos
aas
inc
addr16
cmpsl
add
sbb
or
ret
mov
outsb
lea
add
popa
adc
pop
insl
mov
fldt
fsubrp
cltd
lds
xchg
sti
pop
incb
cmp
out
out
xor
fcmovnb
xlat
cmc
lods
xchg
and
and
cld
inc
cmpl
xlat
add
out
add
movsb
daa
xor
jo
repz
jmp
xor
cltd
dec
frstor
adc
add
xchg
cmp
add
add
push
std
jle
in
jecxz
inc
cmpsl
mov
xchg
icebp
sti
adc
fs
lret
cmp
aas
rcrb
mov
dec
sub
xchg
out
push
pop
mov
lret
arpl
test
xchg
cmpsl
pop
add
sarb
mov
fdivs
fnstsw
sbb
loope
mov
inc
mov
pushf
push
cltd
inc
fwait
shlb
mov
inc
and
loope
add
add
push
jg
adc
scas
add
imul
scas
outsb
arpl
xchg
imul
mov
pop
pop
int3
push
pop
sbb
mov
or
out
xchg
mov
dec
xorb
out
pop
xor
sbb
jmp
sub
pop
dec
add
popa
cltd
movsb
lock
pop
mov
or
andl
mov
adc
sbbb
jmp
sbb
mov
push
test
sub
xchg
jmp
pop
cmpsb
pop
pop
or
sbb
xor
pop
repz
adc
adc
ret
jge
inc
leave
test
cmp
inc
mov
and
xchg
cmp
setbe
in
xchg
fucom
inc
fsubrs
and
jle
movsl
lea
xor
jb
or
loop
pushf
jo
mov
daa
xor
scas
aas
cmp
jne
or
loope
mov
insl
add
or
lods
nop
xchg
xchg
loope
or
imul
movsb
fnstcw
std
enter
push
adc
ja
inc
pop
or
mov
mov
cmp
inc
mov
sahf
sbb
sub
mov
dec
and
repnz
sub
mov
xchg
jg
mov
int3
out
jns
mov
out
stos
mov
add
mov
sub
stos
xchg
dec
aaa
adc
sub
and
aad
bound
testl
adcb
inc
mov
xorl
jb
shld
and
mov
je
xchg
push
lods
or
sti
inc
cwtl
stos
fldt
icebp
mov
shll
pop
sub
ffreep
jmp
adc
sbb
lret
xor
pop
movsb
push
cld
jl
out
sub
cmc
iret
fs
int3
imul
sti
mov
icebp
negl
xor
mov
pop
push
lret
shl
insl
in
or
das
mov
add
cwtl
adc
mov
fcmovb
xlat
call
inc
pop
or
into
js
cmp
sub
js
push
cmp
jl
enter
push
xchg
dec
cmp
mov
fcompl
fimuls
call
pop
sbbb
adc
mov
cli
subl
inc
cwtl
mov
test
call
mov
out
jg
ret
rcrb
bound
jae
fcompl
shll
sub
sub
xchg
dec
scas
retw
push
pop
ss
lods
xchg
sub
ret
or
add
fs
inc
outsl
loope
in
idiv
pushl
mov
push
mov
movsl
sets
sbb
adc
fwait
imul
jb
loope
int
push
or
in
or
mov
sbb
repnz
popf
sub
mov
pop
out
jle
sti
cmc
mov
adc
mov
cltd
push
ja
sub
hlt
cmp
inc
push
inc
ja
xchg
nop
and
or
movsb
lods
adc
xchg
mov
test
xchg
cltd
xor
out
push
push
repnz
sub
in
jge
in
inc
or
sbb
nop
aad
sbb
jp
or
idivl
scas
xchg
aad
in
fisubl
adc
pusha
xchg
fistpll
jae
jo
or
add
fildll
popf
hlt
cmp
push
out
popa
enter
push
and
sbb
inc
sub
adc
sub
mov
mov
rorl
push
or
les
and
cmp
fisttpll
or
pop
push
daa
ret
pop
scas
mov
or
or
loopne
in
push
int3
stos
or
fisubrl
or
loopne
fisubs
cli
pusha
stos
mov
ja
pop
test
movsl
or
sarb
imul
add
pop
sub
and
mov
adc
adc
dec
cwtl
aad
pop
or
imul
add
ret
xorb
mov
sub
xchg
mov
ss
xchg
rorl
xor
ret
rorl
fucomp
xchg
jmp
mov
pop
and
inc
jg
sbb
pop
and
aaa
aaa
shlb
jnp
test
sub
mov
xlat
in
mov
insl
pop
sbb
and
inc
xchg
push
jbe
dec
mov
or
shlb
lods
sub
push
mov
imul
adc
add
and
ficoms
icebp
rcrb
mov
or
ror
push
cmp
lret
mov
iret
mov
cmp
ja
or
fistpl
test
aaa
mov
mov
fs
xchg
ja
dec
cwtl
arpl
pop
add
mov
inc
decb
jbe
negl
mov
int3
mov
mov
loopne
mov
outsb
rcrb
ret
nop
xchg
cli
out
ss
vmulsd
movzwl
andb
and
cmp
mov
jns
push
or
add
mov
lahf
stos
imul
add
loop
mov
pop
or
lcall
add
sub
mov
xchg
sub
fnstenv
pusha
sbb
lods
clc
call
inc
rcr
ret
cmpsb
mov
inc
mov
mov
fsubrl
and
sti
mov
cmp
sahf
pushf
nop
test
out
mov
into
or
gs
cmp
popa
aas
jl
xor
bound
les
in
mov
push
jecxz
inc
arpl
loope
xor
es
push
imul
popf
xchg
aas
test
cmp
leave
pop
push
add
ljmp
mov
outsl
inc
insl
mov
dec
inc
cmp
loope
mov
dec
and
notb
xor
sbb
test
loope
or
call
mov
pop
and
out
loop
push
and
loope
adc
add
adc
cmp
jae
jge
testl
nop
adc
and
fistpl
push
push
mov
mov
pop
or
nop
ja
and
icebp
decb
adc
add
push
xor
or
negl
pop
mov
lea
cwtl
pop
shrl
adc
hlt
clc
sub
in
cltd
adc
leave
xchg
sub
push
inc
and
inc
mov
ss
jbe
inc
mov
clc
ljmp
jnp
and
clc
adc
pop
inc
aaa
jo
xlat
sub
inc
popa
jmp
test
pop
mulb
aad
or
fwait
lea
fadd
push
call
push
or
mov
mov
andb
fidivs
aad
jno
dec
or
decb
aaa
bound
inc
cld
xchg
je
cmp
jmp
rorb
in
cmp
jo
jmp
jg
addr16
lock
dec
cmp
aaa
inc
outsb
xor
adc
inc
cld
leave
fsubr
xor
jp
push
and
or
jo
push
or
insb
mov
and
bound
popf
rorb
add
push
pcmpgtd
lret
sbb
fwait
test
xorb
iret
mov
jne
rcr
pop
cmp
movsb
aaa
test
cs
xorb
adc
adc
sahf
pop
lods
hlt
and
insb
fcoml
mov
sahf
mov
dec
or
cmc
or
jl
push
fsqrt
sbb
sub
mov
sti
mov
clc
mov
popf
popa
lahf
sub
add
pop
pop
bound
cltd
push
pop
sub
lods
mov
dec
fadds
and
xor
lahf
mov
loope
cmp
insl
ficoms
add
cmp
dec
mov
cmp
mov
xor
lds
jmp
insl
or
jg
or
push
xor
cwtl
add
cmp
sbb
cli
add
cmpsb
fwait
push
out
das
enter
aad
or
cmp
inc
orl
popf
mov
mov
iret
loopne
adc
cmp
hlt
mov
loop
call
into
aas
cmc
inc
pop
subl
cmp
mov
jns
pop
and
gs
dec
int3
sbb
inc
push
sub
ja
jg
xor
jnp
popf
loope
mov
push
je
jne
lods
dec
push
sti
je
xchg
rcll
call
or
lea
jmp
jmp
dec
jmp
fisttpl
add
js
aas
mov
loop
dec
xor
mov
out
hlt
imul
js
lods
mov
jmp
xor
dec
pop
daa
out
mov
fmulp
adc
movsl
xchg
loop
dec
ret
lahf
mov
rcl
lcall
cs
scas
lahf
add
into
int
lock
or
out
cltd
into
mov
or
and
xchg
std
movsb
fstps
movsb
adc
loop
mov
pop
and
mov
jbe
test
add
xor
lahf
add
push
push
pop
pop
cmpb
inc
ficomps
test
xchg
data16
xorl
adc
and
mov
stos
sub
popf
in
mov
call
sbb
fsubr
int
mov
xor
call
lahf
fiadds
push
in
aaa
je
and
les
daa
insb
cmove
subl
push
push
int3
sbb
push
mov
or
sub
sub
or
adc
shrl
movsl
popa
inc
out
cmp
aas
add
jl
or
mov
mov
jno
les
add
arpl
cmp
xchg
out
ljmp
mov
and
mov
pop
pop
lret
pop
adc
jg
mov
icebp
mov
xchg
jne
std
jo
out
xchg
movsb
mov
push
sub
or
ljmp
pop
loop
std
xor
aad
xchg
sbb
inc
sbb
pop
mov
mov
xor
sbb
test
inc
jo
pop
add
inc
xor
mov
aaa
enter
jl
cmp
sbb
flds
ljmp
push
xor
xchg
scas
jae
sbb
nop
ss
push
xchg
mov
addl
xchg
mov
lcall
scas
lcall
sub
lock
mov
pop
sub
cltd
inc
cmp
sbb
pop
fs
pop
xchg
lock
lahf
inc
cmpsl
out
sbb
mov
scas
idiv
inc
mov
xor
mov
movsl
testb
pop
nop
shll
sub
imul
pop
inc
repz
ret
pop
xor
stos
std
xchg
lahf
mov
push
mov
jnp
lea
pop
loop
mov
rorb
in
int
ret
out
mov
stos
sub
movsb
push
inc
mov
sbb
cmp
fmull
pop
test
call
stc
call
es
and
adc
dec
and
mov
xchg
xchg
ss
mov
lret
xor
imul
jle
and
movsb
inc
std
push
push
loope
cmpsb
or
je
adc
aas
push
icebp
insb
rorl
mov
lea
shll
popf
jg
outsl
mov
mov
xor
test
adc
test
jl
cmp
ja
cmp
mov
mov
jno
stos
inc
pop
mov
push
push
lods
lea
inc
cmp
pop
mov
or
push
dec
movsl
sbb
mov
ret
aaa
or
sub
dec
xchg
call
stos
leave
sbb
cmp
pop
daa
fstpl
repz
test
out
stos
out
pop
pop
dec
sub
xchg
in
jp
repz
aam
cmp
ss
pop
push
dec
dec
movsl
push
test
lret
ja
out
jb
xchg
inc
addr16
inc
ljmp
clc
paddsb
pop
mov
das
leave
insl
mov
or
shrl
loop
outsb
or
push
or
and
jl
cs
mov
cmc
adc
into
lock
mov
gs
pop
push
dec
xchg
jecxz
out
inc
sub
int
or
pop
test
pop
adc
loope
leave
mov
dec
arpl
xchg
fs
pop
cs
lods
mov
fs
xor
lahf
popf
jne
insb
inc
xor
fstpt
nop
aad
int3
jmp
lods
fdivl
jb
xor
xchg
pusha
outsl
aad
xor
sbb
jecxz
int
les
push
xor
fnstenv
leave
cmp
inc
or
jmp
incb
pop
jmp
xchg
mov
or
mov
push
xchg
cmp
pop
sbb
pop
lods
xor
mov
jmp
sub
pop
loopne
dec
cmp
rcll
push
dec
sub
cmp
sahf
scas
subl
sub
or
mov
hlt
xlat
xchg
or
mov
mov
xor
push
jmp
pop
xor
jle
xchg
mov
jnp
push
ja
cld
mov
stos
iret
xchg
pop
leave
push
das
add
in
adc
sbb
subb
or
jb
pusha
cltd
push
adc
lock
xor
add
lock
sbb
sti
cli
in
lcall
cvtpi2ps
cmpsl
and
loop
repz
sub
cwtl
pop
cmp
test
mov
addr16
xor
add
or
into
cmp
cwtl
aad
imul
sub
aad
ds
cmp
stos
xor
das
stos
out
push
imul
fists
mov
and
int3
addr16
movl
inc
lcall
shr
mov
push
cli
add
mov
pop
jge
bnd
je
in
das
jmp
push
push
popf
pop
push
mov
push
hlt
stc
vdivpd
lock
scas
mov
add
cmp
cmp
sub
jg
mov
mov
jns
sub
data16
mov
in
push
push
jl
xorb
adc
test
mull
pop
sarl
enter
mov
mov
incl
fldcw
mov
and
call
fwait
les
mov
pop
add
sub
rcll
sbb
inc
stc
test
adc
cli
ljmp
pop
das
scas
cmp
daa
jb
adc
jg
inc
push
cmp
repnz
popa
ds
mulb
shlb
inc
adc
pop
cli
cmp
fimull
popa
stos
divl
dec
aas
ja
cmc
loopne
jns
in
cmc
ljmp
mov
add
pop
lea
lahf
xor
xor
cltd
mov
cmp
xchg
cwtl
aaa
sub
xor
jmp
lock
gs
xchg
mov
jmp
test
xchg
mov
loope
lret
xchg
add
int3
mov
insb
out
lods
or
daa
pop
aad
sahf
dec
mov
in
cmp
jb
adc
cli
dec
dec
fcomps
sbb
push
pop
mov
icebp
mov
jo
mov
js
fstl
jae
sahf
mov
lcall
dec
lret
cld
and
adc
xor
pusha
ror
jnp
pop
sahf
push
fcoml
sub
popf
repz
mov
mov
fisubs
mov
fldenv
jno
mov
std
push
insb
dec
xor
dec
adc
ja
test
aas
xor
cmc
and
int3
out
dec
test
or
shll
and
arpl
add
pop
rorl
mov
cmp
mov
sbb
sub
push
loopne
jle
loop
popa
hlt
out
je
in
sbb
sub
imul
or
sbb
jmp
into
scas
adc
shlb
add
xchg
or
and
dec
xor
mov
mov
and
mov
mov
pop
subb
sahf
add
repnz
les
iret
xchg
and
andb
clc
loop
int3
xor
pop
fs
cmp
jmp
test
in
cwtl
rcl
movsl
je
lahf
mov
mov
fiaddl
lret
sahf
js
mov
mov
inc
jb
and
cmpsb
xlat
icebp
cltd
push
pop
pop
push
ja
or
in
dec
lds
push
pop
or
dec
cmp
hlt
mov
mov
inc
add
rorl
jbe
outsb
add
mov
lret
scas
cmp
inc
test
jnp
outsl
in
jmp
test
push
je
mov
cmp
sbb
lods
mov
shr
imul
in
shlb
es
add
jmp
cmp
cmpsl
fsubrl
jle
cmp
decb
test
xchg
dec
mov
loopne
addr16
std
shlb
push
dec
inc
sbb
xor
mov
fdivp
mov
bound
or
ret
or
pop
xchg
loope
es
popa
sbb
push
xchg
idivb
dec
xchg
movl
hlt
pop
out
cs
popf
lods
test
xchg
inc
push
imul
inc
sub
int
lahf
or
mov
cmp
das
repz
push
jne
sbb
and
mov
adc
clc
sub
movsb
mov
fdivrl
cmp
sbb
loop
popf
mov
movsl
sti
out
subb
pop
repnz
mov
ja
push
pop
fldenv
out
imulb
and
mov
cmp
push
mov
or
or
fldcw
push
inc
scas
jl
outsl
push
rorb
jmp
out
bound
arpl
je
adc
add
std
test
clc
pop
test
inc
js
mov
xchg
mov
pop
cmp
adc
add
ficoms
ret
adc
pushf
xchg
orl
push
test
arpl
insl
cld
test
sbb
lret
fsubl
cli
xor
sbb
in
hlt
pusha
cmpsl
out
sub
adc
xor
adc
jo
sbb
jo
dec
mov
lret
leave
arpl
mov
adc
test
ffree
mov
cmp
pop
add
popa
and
pushf
movsl
imul
inc
xlat
adc
cmpsb
jae
and
fistps
dec
aam
dec
mov
push
mov
cmc
fdivp
mov
xchg
fisttps
test
je
pop
sbbb
mov
add
ror
mov
lahf
int
mov
cmc
push
adc
jge
push
sbb
fildll
or
in
imul
mov
std
call
adc
lcall
stos
mov
push
popa
and
jb
dec
test
adc
jne
xchg
cli
jne
subb
xchg
xchg
mov
lds
pop
lret
mov
stos
scas
pop
lock
ljmp
jl
xchg
mov
pushf
mov
mov
mov
mov
out
inc
frstor
xchg
in
lret
xor
and
out
test
xchg
stc
les
sub
xchg
jo
lock
mov
ret
cmovl
mov
les
call
aam
shlb
add
je
jl
lret
lahf
xor
sti
jmp
out
fldenv
insl
lea
xlat
scas
cmc
in
stos
mov
cmp
pop
in
cmp
mov
dec
lods
cltd
cmp
scas
mov
incl
sahf
movsb
push
sbb
hlt
out
mov
cmc
dec
ret
mov
pusha
ret
and
pop
and
rcr
test
jp
gs
push
pop
into
js
dec
iret
aas
add
sub
stos
xchg
mov
enter
pushw
insl
fcoms
je
add
inc
scas
xchg
gs
cmp
fs
test
cmp
lret
jae
sarl
push
popa
jno
mov
jg
fsubs
xor
push
xchg
cmp
in
imul
jno
jbe
in
mov
fs
pop
or
dec
lret
xchg
cld
jmp
sti
testl
xor
mov
or
sub
jge
mov
es
ljmp
and
ja
pop
mov
sarb
sbb
sti
mov
orl
push
lahf
data16
adc
cmpsl
adc
lock
lret
mov
rolb
inc
lods
inc
xor
add
call
pop
mov
cwtl
and
iret
dec
loopne
jns
mov
xchg
fdivr
es
jno
aaa
jecxz
push
call
fsts
popa
int3
in
movsl
mov
or
xchg
dec
mov
dec
add
leave
sahf
jle
push
mov
sbb
shlb
dec
xor
sti
jns
ljmp
lahf
aas
jle
sub
rclb
adcb
inc
int3
int
mov
ret
sbb
data16
bound
ffree
pushf
sub
mov
gs
push
push
arpl
add
clc
push
xchg
shl
in
dec
mov
mov
test
dec
cmp
lcall
hlt
lcall
and
cmpsl
mov
nop
cmp
pop
cmp
add
mov
adc
cld
inc
push
sbb
sbb
fsub
andb
push
or
mov
dec
mov
mov
clc
or
push
cltd
cmp
incl
xchg
pusha
loopne
mov
imul
mov
mov
jbe
lcall
ja
adc
std
repnz
pop
mov
dec
jno
test
fdivs
jecxz
xchg
arpl
add
fstp
sbb
in
mov
test
fnsave
cmp
sbb
aaa
mov
dec
dec
fbld
add
loop
jae
cmp
sub
insb
cmp
inc
dec
push
leave
dec
scas
pop
sub
cmpsl
aas
push
mov
mov
adc
pop
pop
or
out
dec
outsl
mov
xor
repz
mov
dec
pop
inc
in
lahf
inc
cs
xchg
adc
jle
jp
pop
add
cld
add
sti
jp
insb
in
rorl
in
xchg
call
pop
dec
scas
mov
pop
out
push
sbb
std
movhps
lahf
fidivrl
ret
cli
in
repnz
mov
sbb
jmp
or
test
push
pop
and
and
pop
xchg
movsl
repnz
or
pop
jl
leave
in
jne
imul
mov
ljmp
mov
jle
data16
aaa
adc
outsb
or
movsl
push
add
pop
enter
sbb
jecxz
mov
mov
xor
jp
sahf
mov
and
push
jns
fisubrs
jecxz
mov
dec
fs
mov
fisubrs
fmulp
mov
jp
rclb
mov
push
mov
rorb
je
xchg
fwait
stc
sub
mov
xlat
cli
dec
ss
or
jg
jne
popf
adc
bnd
mov
pop
sbbb
jmp
xchg
mov
je
and
fwait
and
pushf
xor
lret
dec
pop
mov
not
cmpsb
dec
pop
push
clc
and
adc
pop
mov
movsb
lods
lret
daa
jle
les
jle
inc
lods
sub
push
jns
pop
mov
aad
or
add
sbb
xor
add
lds
push
or
loope
fwait
int
lods
xchg
mov
sti
fimull
dec
xchg
inc
pop
fnsave
call
adc
dec
lds
arpl
sub
add
das
in
dec
xor
ret
push
xchg
fisubs
push
cmpb
dec
loopne
fstpt
mov
dec
rcll
dec
jg
and
das
testl
xchg
pop
clc
testl
inc
outsl
and
mov
cmp
or
fdivr
int
jmp
jne
xchg
mov
mov
mov
cmp
push
and
lcall
rorl
loop
jb
mov
int3
movsb
imul
cmpsb
cli
ret
shrl
insl
xor
push
jle
cmc
fdivrs
loope
sti
mov
roll
jle
push
std
dec
fdivl
hlt
das
adc
mov
lock
rolb
mov
dec
pushf
adc
xorb
data16
negb
stc
out
fwait
pushf
not
dec
pushf
add
or
cmc
or
sbb
mov
mov
mov
movsl
mov
in
mov
test
mov
inc
adc
push
mov
push
adc
hlt
das
stos
xchg
fstp
xor
push
sub
add
cmp
mov
test
ds
decl
push
add
pop
fidivl
aad
adc
push
jne
jmp
cmp
int3
fiadds
test
stos
repnz
enter
or
cltd
dec
pop
inc
dec
aas
pop
lcall
pop
cld
popf
subl
pushf
lock
fidivs
std
push
push
mov
xor
add
xchg
jmp
push
mov
sub
movsl
adc
and
xor
jb
cmp
lock
xor
or
xchg
push
imulb
pop
js
mov
rclb
bnd
cld
or
sbb
rorl
push
push
lret
jg
shll
inc
sub
loopne
mov
push
dec
imul
pop
pop
repz
cmpsl
decb
loop
xchg
inc
sahf
and
inc
sti
and
xchg
push
pop
out
push
sbb
pusha
xor
pushf
js
das
pop
cmc
mov
cmpb
dec
mov
fcom
into
loopne
mov
mov
xchg
adc
shl
stos
xor
jl
or
cmp
xchg
movsb
or
int
push
cltd
gs
das
mov
push
test
fs
jne
loop
mov
aaa
lock
sub
pop
mov
or
cmc
sbbl
dec
sarb
adc
ds
xorb
sub
test
and
jno
cs
inc
xchg
add
movsl
inc
addr16
and
arpl
sti
pop
les
lods
xor
or
inc
adc
addb
mov
xchg
inc
or
mov
xor
sub
fwait
sbb
cmp
push
int3
arpl
add
mov
fisttpl
mov
jno
inc
stos
push
xchg
stos
shlb
add
cmp
int3
mov
aas
das
mov
pop
sahf
outsl
mov
and
mov
mov
push
sbb
js
ja
jmp
inc
int3
sahf
int
mov
and
repz
inc
bound
jns
pop
aaa
dec
push
cmp
fidivl
cmp
mov
jo
xchg
gs
addr16
fldl
movsl
sub
xor
sub
out
xchg
dec
insl
mov
mov
enter
pop
sbb
dec
jns
lcall
pop
mov
fisttpl
jge
int3
jo
sbb
jecxz
bound
dec
in
or
jl
mov
pop
mov
lods
mov
dec
sub
es
mov
dec
sbb
xchg
adc
jnp
stos
ss
mov
cld
mov
jle
xchg
push
les
mov
cmc
push
and
pop
push
mov
or
xor
in
out
popa
mov
and
inc
mov
push
shrb
fidivl
fs
xchg
pop
sub
mov
bound
jae
movaps
push
ljmp
inc
daa
mov
sbb
stos
sbb
pop
ret
rorb
inc
mov
mov
dec
push
in
push
push
dec
mov
sbb
andb
in
jp
xchg
stos
aam
xor
int3
jo
out
popa
pushf
imul
dec
jge
dec
fwait
inc
inc
fbstp
pop
fisubs
or
sbb
sub
movsb
xchg
call
mov
xchg
xor
inc
js
jle
lahf
inc
pop
sarb
aaa
iret
cmp
push
dec
nop
lods
sbb
add
data16
cld
sti
cmp
arpl
out
out
jle
stos
pop
add
push
sti
pop
jbe
es
sbb
enter
adc
data16
cmc
sbbl
ss
dec
jle
lods
push
xor
out
jmp
inc
pop
movsb
cs
add
mov
xchg
popf
das
mov
add
add
divb
push
insb
mov
fildl
adc
mov
adcl
fs
aaa
cmp
dec
mov
xchg
dec
ret
adc
jb
xchg
mov
es
or
into
data16
outsb
call
out
pop
sbb
add
pop
mov
lods
xchg
sbb
push
jns
je
mov
not
scas
inc
xor
adc
out
add
call
sbb
cmp
in
mov
daa
or
xchg
jne
cmp
lods
xchg
mov
adc
jge
push
add
xchg
out
mov
pop
jns
jecxz
mov
aad
mov
xchg
dec
or
mov
ja
push
ss
jae
data16
enter
fstpl
pop
mov
leave
dec
insb
mov
repnz
jmp
cmpsl
sub
cwtl
push
or
aad
cmp
enter
inc
mov
push
pop
jecxz
fsubrs
out
jo
xor
push
mov
idivb
std
jmp
insb
xchg
jae
xor
mov
shlb
cmp
mov
adc
ss
or
scas
iret
sbb
out
das
out
sarb
sbb
sub
pop
sub
sub
and
mov
orb
movsl
sub
loope
pop
loop
adc
mov
sbb
xor
inc
lock
imul
jb
xchg
dec
inc
inc
stos
icebp
in
cmp
jmp
push
adc
pop
fdivl
xchg
mov
stos
movsl
movsb
pushf
adc
and
iret
call
out
ds
mov
or
jno
mov
out
pop
xor
sbb
jns
cmp
mov
fisubrs
or
icebp
push
rclb
sahf
inc
pushf
sti
int
addr16
out
imul
or
shr
loope
jmp
incb
pop
inc
shrl
or
hlt
fidivl
sahf
int3
test
cmp
jge
adc
xchg
aas
pop
int3
in
adc
xor
or
ret
mov
lods
adc
dec
insl
das
leave
add
dec
bound
xor
rcr
push
ret
and
loope
jge
or
call
sahf
and
ja
inc
and
pop
xchg
jnp
sti
push
mov
ret
ret
into
fists
ss
cmpsl
loope
or
pushf
mov
aam
push
cmp
movsl
das
adc
scas
jns
bound
mov
dec
int
push
testb
cmovno
enter
int
int
andl
or
cltd
lock
mov
pop
push
fcmovbe
sub
imul
adcl
cmpb
nop
imul
lahf
xchg
push
push
lcall
insb
add
sbb
faddp
sbb
inc
cltd
cwtl
es
cmp
lods
fsts
insb
xchg
pop
je
ss
lods
decl
xchg
lods
push
pop
iret
sbb
cwtd
fwait
out
push
pop
cmp
out
clc
push
push
adc
into
push
mov
sbb
push
push
cmp
nop
mov
scas
aad
ljmp
dec
adc
pop
repnz
xor
dec
das
mov
sbb
pop
test
xor
rol
xor
jne
adc
or
sub
jo
sbb
shll
jle
gs
stos
andb
shl
inc
int3
lock
xor
aam
loopew
ret
icebp
xchg
dec
jno
add
cwtl
cmp
dec
movsl
push
fdivrl
icebp
movsb
mov
inc
js
int3
xchg
test
dec
mov
gs
mov
outsl
int3
mov
cmp
jnp
ret
out
in
fldl
lock
pop
rcrl
ds
lods
pop
fstpt
and
scas
mov
punpckldq
ljmp
sbb
dec
adc
adc
and
mov
mull
es
outsb
and
mov
cmpsb
cmp
imul
jg
cmp
mov
bound
aas
lock
loope
in
std
push
cmp
cs
stos
movsb
inc
sub
jbe
jnp
jecxz
std
lahf
negb
in
or
in
inc
and
xchg
cli
sbb
outsb
scas
push
cmp
out
sbb
iret
ret
mov
and
aaa
insb
or
jb
imul
push
enter
fists
cmp
jo
scas
call
push
rcrl
jnp
test
or
cmpl
xchg
xchg
pop
es
adc
add
dec
scas
out
fldenv
in
jnp
lahf
jo
in
adc
jle
aam
imull
inc
ret
mov
hlt
inc
outsl
in
or
add
sti
jo
pop
dec
pop
jmp
ja
cmp
and
pop
sbb
outsl
out
lahf
ljmp
loope
add
arpl
outsl
mov
lock
jmp
jae
aam
sub
popf
push
ror
mov
add
lods
roll
xchg
ficoml
imul
sub
mov
xor
or
nop
adc
xor
xchg
rcrl
inc
fwait
mov
mov
fists
sbb
mov
test
icebp
scas
fimull
push
ret
xchg
test
mov
pop
jmp
adc
iret
xchg
js
pop
xor
mov
mov
cltd
icebp
adc
cmpsl
and
push
mov
add
loop
data16
insb
jp
or
mov
addb
pop
xchg
out
stc
sub
es
pop
jae
dec
adc
sub
pop
add
subb
imul
pushf
xchg
and
mov
addr16
mov
arpl
pop
mov
jge
inc
mov
imul
mov
mov
lds
dec
push
adc
mov
jecxz
inc
shll
push
adc
mov
mov
inc
clc
je
adc
pop
lods
mov
ss
or
int
xchg
push
cmp
jmp
in
je
and
stos
push
pop
jge
adc
ret
sti
rorl
arpl
addl
push
rol
dec
pop
push
push
scas
std
pop
mov
int3
dec
dec
test
mov
loope
lds
jp
mov
sbb
lret
daa
insl
cmp
std
in
notb
dec
sbb
pop
mov
jle
stos
sub
jns
aaa
outsb
mov
es
or
pop
lods
sub
xchg
adc
xchg
xor
lods
mov
ret
sbb
pop
push
or
lock
xor
push
or
aas
aaa
inc
jecxz
cmp
mov
xchg
cmp
movl
jno
loope
mov
test
pop
xor
sub
ljmp
xlat
cwtl
or
nop
push
test
inc
mov
sub
push
in
scas
xor
cmp
cld
orb
sarl
fstl
adc
xchg
loope
fdivs
mov
sub
push
idiv
add
dec
xchg
pusha
aaa
call
cmp
lea
es
out
xchg
adcb
jge
inc
nop
gs
jb
sbb
xor
nop
cmp
pop
xorb
sub
or
sbb
nop
add
loopne
sarl
rep
arpl
sarl
push
jne
out
sub
outsb
cmp
sbb
inc
inc
dec
mov
pop
insb
imul
push
imul
mov
lods
mov
mov
jns
test
lret
dec
ret
xor
out
mov
pop
in
mov
cmp
dec
lahf
dec
pop
inc
fsubl
cmpsb
jns
push
imulb
or
xchg
cmp
adc
inc
mov
imul
and
enter
xor
loop
adc
out
and
sbb
lahf
sbb
aad
sbb
mov
xor
out
imul
inc
shl
movsl
adc
pop
adc
sbb
int
inc
push
sub
aam
imul
sbb
mov
loopne
jo
in
movsb
cmovne
adc
mov
mov
jae
or
cld
or
mov
fnstsw
inc
pop
lods
stos
sbb
xor
sbb
adc
lock
fists
cmp
cmp
fs
dec
shlb
daa
xchg
decb
pop
ret
std
es
cmp
stc
mov
xor
pop
call
cmc
or
in
adc
sbb
push
scas
jns
sbb
out
cs
repnz
jl
sbb
lds
push
sbb
mov
repnz
xor
adc
ret
cwtl
scas
and
adc
xchg
stos
test
cmpsl
loop
loop
in
jmp
test
jbe
scas
mov
addl
cld
mov
test
mov
xchg
mov
jmp
andb
aam
decb
mov
mov
ret
frstor
or
xchg
sbb
add
pushf
cmp
cltd
or
sbb
push
stos
pop
and
cmpl
xchg
js
aam
sub
movsb
cmpsb
mov
in
inc
test
mov
sbb
xlat
add
clc
aas
out
pop
ss
mov
cs
mov
stos
adc
fdivrs
mov
out
jo
jle
sbb
jns
mov
shrb
imul
jne
inc
jmp
fcmovne
ljmp
jl
insl
inc
cmpsb
icebp
adc
cld
sub
leave
mov
enter
mov
cli
cltd
aas
push
mov
mov
hlt
cmp
clc
xor
ljmp
fcmovbe
ret
enter
xchg
and
stos
mov
imul
shl
cmp
orb
mov
out
mov
test
xor
cmp
cmp
mov
sbb
jbe
xchg
out
mov
adc
das
xchg
mov
push
push
dec
insb
fmul
inc
sub
xchg
int3
shrl
and
rclb
mov
add
and
xor
test
pop
push
pop
mov
frstor
mov
movsb
mov
test
mov
push
test
and
ja
lods
xchg
inc
jl
cld
jl
scas
add
pop
lcall
jle
jmp
sub
mov
pop
ss
sub
lcall
mov
xor
lret
cmp
push
cwtl
add
pop
lret
dec
pop
lods
clc
adc
nop
or
les
xchg
les
orb
pop
ret
lock
cmp
clc
mov
jae
adc
mov
and
sbb
dec
cmp
out
cld
sbb
cs
nop
mov
ss
xchg
add
adc
movsb
in
fstpt
fwait
push
aam
out
ficomps
push
push
adcb
lahf
int
pushf
cs
dec
fmull
mov
cltd
pop
and
push
inc
fcompl
inc
xchg
in
sti
jnp
movsl
ret
shlb
enter
adc
mov
push
jbe
mov
add
inc
or
pop
cmc
out
push
mov
cs
movsb
jge
xor
cmp
adc
cmp
repz
ret
movsb
ss
ljmp
aaa
sti
xchg
sbb
std
shlb
loope
rcr
push
push
mov
add
dec
outsl
popa
mov
cli
frstor
add
pusha
sub
pop
pop
add
repz
xor
mov
test
repnz
pop
jmp
or
push
inc
jbe
outsb
sbb
mov
lock
or
push
xchg
stos
mull
mov
fsubrp
jg
cmc
lock
cmc
jl
mov
sub
mov
jg
adc
inc
cli
jns
decl
mov
mov
imul
aam
mov
adc
jnp
mov
mov
insl
pop
addl
mov
outsl
aas
mov
pop
pop
hlt
mov
enter
bound
push
mov
jnp
mov
mov
hlt
pop
cmc
adc
in
int
in
inc
js
aas
mov
cmpb
nop
and
mov
fwait
cmp
pushf
push
xchg
mov
mov
insb
fwait
push
mov
lock
rcrb
popa
mov
mov
rolb
and
adc
out
push
or
pop
stc
jle
cmpsb
xchg
clc
mov
sbb
inc
xchg
ret
pusha
fs
fcompl
sarl
push
notb
add
les
or
sarl
idiv
ss
jle
loop
cmc
es
jns
dec
pop
ret
xor
cmp
fiaddl
inc
xchg
jo
cli
jle
dec
mov
stc
movsb
mov
arpl
mov
jns
rol
lea
xchg
sbb
push
xchg
push
ret
stos
sub
xchg
adc
inc
nop
inc
jmp
xchg
mulb
or
arpl
jno
mov
bound
pop
loope
and
or
scas
jb
mov
mov
stos
mov
cmp
sbb
pusha
sahf
ljmp
inc
mov
ss
test
xlat
mov
rolb
push
add
idivl
mov
mov
aaa
out
inc
xor
pop
adc
xor
xor
mov
stc
add
pop
push
sbb
rolb
pop
xchg
mov
mov
adc
pop
jmp
dec
xchg
test
push
repnz
mov
sub
push
mov
test
out
ljmp
sbbl
cmpsl
mov
lahf
aad
popf
loope
popf
popf
adc
aas
stos
push
jl
sub
call
xchg
cmp
ja
into
cmpsl
and
dec
int
sub
sbb
pop
lret
push
push
aam
jecxz
xchg
lret
pop
sbb
sub
sub
lods
pop
inc
or
aam
jmp
data16
jmp
or
jecxz
push
loop
sub
dec
pop
push
push
es
push
mov
and
out
jae
jg
popf
push
fdivl
test
cltd
popf
inc
dec
mov
fcoms
mov
mov
xor
in
cmp
mov
ret
dec
imul
cltd
sub
js
xchg
test
out
out
add
test
jmp
jg
xchg
les
inc
aam
fwait
cmp
hlt
movsb
cmp
out
jge
les
out
ror
cmc
enter
test
lret
jmp
xor
push
mov
xchg
xchg
fcmove
stos
xor
aad
cwtl
cmpsl
mov
or
mov
stos
ljmp
xchg
fildll
inc
jnp
pop
mov
lcall
das
popa
imul
js
lret
and
mov
pushf
or
test
cmp
stos
les
inc
daa
cmp
fldcw
mov
push
mov
add
out
jmp
rsm
adc
inc
outsl
or
and
sti
add
int
mov
pop
aad
hlt
sbb
xor
loopne
in
sub
out
jae
cmp
jge
xor
cmpsb
adc
popa
mov
sbb
sub
orb
xchg
bound
es
dec
sub
pop
imul
cmp
inc
lds
mov
scas
pop
push
std
mov
push
jo
inc
cs
xchg
adc
stos
pop
movsl
test
orb
ret
stc
dec
sbb
mov
shlb
jbe
not
mov
or
jae
add
inc
mov
lock
add
xchg
pop
xchg
add
sti
jne
jo
repz
xchg
aad
sub
cmp
mov
je
jle
mov
mov
lret
xchg
add
and
fldcw
ds
mov
cmp
scas
stos
jl
cmp
ds
dec
adc
pop
int3
pop
testl
test
popa
sub
sbbb
cmc
and
sahf
fs
js
dec
xor
mov
pop
sub
jbe
or
inc
inc
movsb
jg
ret
adc
push
adc
xchg
mov
ds
pushf
mov
cli
ds
sub
repz
and
dec
cmp
mov
lret
add
push
push
scas
enter
sub
outsl
out
in
ficompl
in
mov
pop
or
lods
sbb
fisubs
imulb
and
jg
and
out
xor
jns
and
fnstsw
aaa
push
inc
test
mov
pop
sarb
xchg
popf
dec
mov
out
lcall
pushf
test
inc
jmp
loope
mov
sbb
adc
call
repnz
jbe
jns
testl
jns
mov
xor
mov
lahf
xor
xor
mov
mov
scas
gs
insb
in
fildl
and
jg
aam
mov
cmp
cld
and
fsubr
inc
loopne
xchg
in
sbb
ror
insb
or
subl
jno
ret
aad
mov
jb
and
mov
push
fcmovnb
loop
inc
int
cwtl
or
mov
add
fwait
add
or
je
xchg
cmp
addr16
mov
cmp
sub
cmp
add
jle
lcall
getsec
ret
dec
addb
lock
mov
cli
xor
out
cmp
or
dec
jnp
pop
push
xor
aam
les
stos
push
jp
or
rcl
hlt
sahf
nop
inc
sbb
xor
pop
xor
ficomps
std
cmpsl
dec
popa
cmp
xchg
mov
scas
pop
rorl
aas
push
or
outsb
in
aaa
jg
xchg
jno
mov
les
cmpb
mov
pop
cmp
in
xchg
je
aaa
cmp
cmp
mov
xchg
popa
popa
push
popl
aaa
inc
leave
stos
ds
aaa
xchg
jle
xchg
scas
sti
test
mov
xor
rcrl
jmp
add
adc
mov
andb
in
mov
pop
jb
dec
or
sbb
push
mov
xor
push
orl
xor
mov
repnz
xor
dec
ret
fidivrl
push
and
inc
cmp
ret
pop
test
fcoml
jne
data16
inc
sub
fmuls
mov
stos
cld
pusha
aad
xlat
out
out
dec
negb
ljmp
jmp
sub
push
inc
test
push
add
xchg
pushf
test
push
mov
dec
dec
loopne
and
lret
movsl
test
jnp,pn
repz
repnz
imulb
xor
ror
cmp
mov
incb
js
mov
mov
daa
repnz
inc
jg
ret
xor
and
movsb
ret
fsubs
jge
or
scas
clc
pop
mov
xorb
fiaddl
repz
xchg
inc
sub
in
call
push
stc
sahf
dec
sbb
jmp
adc
test
pop
xor
out
dec
mov
jle
mov
imul
fisttps
xor
cmp
scas
and
adc
mov
ret
ss
or
cmp
xlat
sbb
sbb
fistpll
fmuls
mov
js
pop
mov
das
dec
xor
xchg
lea
cmc
repz
pop
adc
or
stc
pshufw
adcb
xchg
push
lds
pushf
outsb
std
mov
mov
or
stc
call
in
xor
and
test
sbb
rol
inc
shll
adc
in
push
dec
push
or
nop
xchg
xchg
jecxz
adcl
push
xor
xchg
cmp
sbb
scas
ja
adc
inc
adcl
xchg
ret
loope
movsl
pop
dec
mov
aas
or
mov
push
cld
idivb
jle
aam
int
sbb
ds
out
test
mov
add
fcomi
push
int
inc
pop
inc
movsb
xchg
sub
arpl
jmp
cmp
loopne
test
add
inc
or
jns
out
out
mov
lea
std
jnp
in
jmp
adc
aaa
dec
mov
and
pop
sub
dec
sbb
insl
fsubr
pop
js
aam
and
shrb
add
lret
test
and
mov
jbe
std
call
xchg
add
mov
push
jns
mov
push
ja
xor
ficoms
cltd
xor
lods
in
fstl
fistpl
fmul
test
in
pop
hlt
and
out
jg
xor
dec
adc
ret
add
jg
jo
cld
mov
lods
out
cltd
sbbl
mov
sub
outsb
stos
sub
inc
faddl
pop
call
push
loopne
fldl
inc
dec
sbb
push
sbb
pop
pop
int
fdiv
jae
push
pop
inc
cmp
dec
adc
jp
je
adc
sbb
scas
cwtl
cmp
sbb
mov
test
xchg
xor
je
fldt
nop
dec
mov
jnp
push
push
pop
pop
loopne
xchg
or
xor
mov
rol
inc
loop
cmp
ficoms
insl
and
push
jbe
mov
leave
rcrb
xor
scas
imul
aam
cli
and
addr16
call
sbb
xchg
cs
pop
push
bound
cmp
in
pop
cld
xor
xor
addr16
push
arpl
mov
cmp
icebp
int3
adc
jbe
mov
pop
pop
into
push
addr16
fnstsw
lret
outsb
cmp
pop
push
or
push
jecxz
cmpsl
and
outsl
out
lods
call
popa
icebp
xchg
sbb
outsl
ffree
cmpsl
inc
xorb
in
in
dec
push
pop
inc
sahf
xchg
sub
mov
imul
push
loopne
cld
cld
mov
je
or
xchg
aad
es
pop
and
or
movsb
xchg
insb
sub
jecxz
lock
stos
xchg
cmpsb
cmp
movsb
sbb
pop
dec
fidivrs
and
in
lret
or
jb
dec
shlb
stos
ret
lods
idivl
je
jl
pusha
enter
jnp
add
and
int
hlt
inc
icebp
push
scas
fildl
cmp
hlt
pop
push
cmp
ficomps
insl
dec
clc
dec
or
xor
push
dec
mov
out
sbb
cmp
in
fs
cmpsb
pop
xor
ret
test
dec
popf
out
popa
and
bound
in
inc
mov
jmp
and
mov
mov
dec
fadd
mov
push
pop
mov
mov
push
aam
dec
test
aam
mov
xchg
pop
testl
sub
pushf
rcl
inc
das
inc
pop
enter
xchg
enter
fsubr
jecxz
mov
arpl
add
orl
mov
or
pop
or
and
pop
mov
mov
outsb
pop
cmp
xor
frstor
xor
cld
aad
stc
or
inc
add
mov
mov
add
cmpsl
mov
rcrl
mov
ja
jl
cli
pop
and
in
shrl
fisttps
jnp
ds
rclb
jmp
sbbl
mov
subb
inc
lret
add
mov
fs
and
mov
or
shlb
inc
imul
in
push
xchg
cmp
add
inc
dec
movsl
mov
xchg
cmp
sub
sub
mov
nop
sbb
subb
mov
and
lcall
sbb
or
adc
ss
mov
loope
push
pop
scas
aas
or
dec
jnp
adcl
out
or
cli
xchg
scas
mov
dec
pop
rorl
nop
dec
jmp
out
in
sbb
mov
pop
adcl
pop
fsubl
add
mov
mov
fidivs
push
xchg
inc
dec
shll
cli
jg
fldcw
mov
lret
add
lds
push
xor
push
and
popf
sbb
add
jle
mov
adc
jge
int3
mov
pop
pop
cld
push
mov
sbb
fisubrs
ja
push
aaa
cmp
stc
movsb
ja
or
push
cmp
cmp
or
adc
adc
fidivl
adc
mov
xchg
mov
fldt
ret
pop
mov
fsubl
test
sbb
lds
mov
xor
inc
xchg
insl
xchg
mov
jle
ds
leave
loopne
mov
inc
sahf
js
imul
mov
and
ljmp
rcrl
faddl
mov
push
dec
cmp
xor
out
pop
bound
jnp
clc
in
jns
push
or
adc
mov
cld
push
frstor
mov
js
pop
scas
aam
sahf
repz
test
xor
jns
hlt
or
shll
or
xchg
add
dec
cmp
orb
ja
fstpl
jno
push
mov
dec
aaa
cmp
loop
sti
jecxz
push
pop
or
jmp
lods
push
xlat
jae
lcall
sbb
inc
sbb
daa
cltd
imulb
jb
out
jo
jno
and
xchg
aad
push
sti
lret
in
mov
sbb
es
enter
lcall
lret
cmp
cmp
js
adc
out
cmp
fdivrp
rclb
daa
mov
orb
sub
mov
dec
add
jne
push
pop
test
pop
lcall
fcomps
adc
stos
mov
add
add
es
add
pop
pop
shrl
lret
mov
lahf
sub
pushf
in
bound
ljmp
mov
in
cli
jmp
add
das
jnp
movsb
mov
ret
cmp
out
rcll
sbb
dec
sahf
mov
mov
movsb
add
or
sub
xchg
les
jno
dec
loope
out
push
rcll
movsb
mov
fbld
add
or
cld
cmp
or
insl
stos
enter
mov
loopne
outsb
sbb
mov
mov
je,pn
lods
or
outsb
push
adc
ret
xchg
inc
dec
arpl
idivl
sub
pop
and
or
clc
mov
arpl
loop
cmpsl
jne
sub
push
push
in
xor
int
or
dec
adc
cmp
enter
sub
test
ret
stos
jnp
adcl
sar
sarb
pushw
cli
rep
movsl
fcmovne
jno
cld
jnp
cld
ret
outsb
adc
repz
mov
and
pop
sbb
push
loope
mov
outsb
add
shr
fistpll
cmpb
fisttpll
xor
test
cmpl
push
pop
lret
aad
popa
popf
aas
mov
jmp
adc
repz
arpl
pop
and
iret
ss
add
push
mov
and
push
movsb
popf
xor
int
xchg
cmc
xor
mul
cmp
fcompl
lret
jns
arpl
lret
xlat
lahf
lahf
xchg
lret
idivl
push
in
mov
imul
mov
mov
pop
adc
xorb
sub
dec
aaa
cmpsb
xchg
sub
add
out
mov
jecxz
inc
cli
push
rolb
push
shrb
loope
xor
movl
add
xlat
addr16
pop
dec
jle
pop
int
ss
mov
adc
add
mov
cli
xchg
dec
cmp
clc
ret
add
dec
sub
test
sub
pop
in
dec
jae
and
test
sub
push
xor
decl
scas
xlat
xchg
dec
repz
cmc
sbbb
fisttpll
jno
pop
push
add
fcmovnu
call
lods
cltd
cwtl
out
cmpsb
outsb
aas
cmp
jmp
imul
or
jecxz
sbb
jae
pop
int3
push
and
jge
outsb
mov
pop
addl
and
adc
push
mov
das
pop
test
insb
sti
out
sub
adcl
imul
movsl
pop
data16
idivl
pop
loop
inc
aaa
lcall
xor
jmp
jb
into
sbb
hlt
in
mov
mov
sbb
mov
insb
mov
mov
pop
shlb
orl
mov
aam
mov
ljmp
hlt
lret
xchg
mov
mov
sbb
imul
insb
divb
cwtl
adc
in
leave
imul
push
fistps
jne
movsl
rcrl
push
int3
sbb
push
lret
imulb
jo
ret
sbb
xchg
or
gs
in
das
jns
dec
ss
jo
les
or
xchg
jo
cld
xchg
sub
fnsave
xchg
and
sbb
loop
mov
lea
enter
outsb
aad
and
jmp
std
in
or
or
insl
and
cmp
shl
data16
lods
mov
addb
xor
icebp
in
pop
cmpsl
out
iret
mov
ljmp
cmp
push
cmp
dec
dec
jle
out
pop
sbb
dec
inc
int3
xchg
push
sbb
mov
sub
xchg
cmpsb
sub
adc
pop
ljmp
into
test
mov
push
jnp
jns
popf
inc
cmp
ds
dec
stos
ss
mov
fnstcw
cmp
adc
jl
scas
push
cld
mov
adc
adc
lock
mov
mov
loopne
scas
dec
pcmpgtw
xchg
push
mov
aam
std
mov
push
inc
pusha
test
test
xchg
dec
dec
and
clc
aam
in
mov
adcb
movsl
out
fst
popa
mov
icebp
ja
push
std
aad
pop
shll
jo
popa
repz
or
adc
dec
mov
xchg
in
leave
out
xor
lds
enter
sti
sahf
mov
leave
push
std
adc
fstp
mov
call
push
andb
loop
cmp
lods
insb
pop
loopne
push
adc
loopne
mov
neg
jae
cmp
fstl
xchg
mov
rcl
mov
jnp
dec
or
mov
js
inc
call
cwtl
aad
add
in
cmc
cmp
das
mov
lea
push
shlb
xchg
repz
pop
mov
shl
dec
mov
ret
cmp
pop
jae
movb
jmp
jae
lock
sub
and
xor
subl
lods
and
rclb
ja
pop
fwait
jge
pop
data16
sub
mov
dec
sub
and
movsl
loope
fstps
sbb
cmc
jbe
push
data16
lahf
or
sbbb
aas
icebp
pop
pop
inc
or
or
int3
push
jge
sarl
test
repnz
sbb
sub
and
push
lcall
push
mov
mov
call
adc
mov
xchg
icebp
or
sub
shlb
dec
sahf
sub
xchg
mov
push
dec
sbb
jne
jns
gs
xchg
mov
jecxz
dec
aad
inc
clc
cmp
scas
adc
adcl
fiaddl
insl
jno
mov
sub
icebp
cltd
inc
lret
push
hlt
add
enter
rclb
das
or
stos
jne
rorl
and
imul
pop
imul
and
mov
cltd
mov
pop
mov
push
jo
ljmp
push
jp
jae
pop
and
fsubrl
bound
leave
cli
jae
or
inc
pop
out
push
addr16
sarl
ja
pop
loopne
enter
mov
lea
and
sub
pop
lcall
shll
flds
sahf
jmp
mov
into
cwtl
xchg
xchg
mov
iret
sub
insl
dec
cltd
in
idivl
mov
aam
gs
pop
loope
arpl
xlat
mov
outsb
xor
pop
pop
push
popa
dec
hlt
jp
pop
outsl
nop
xlat
popa
sahf
add
lret
push
std
xor
adc
pop
add
ret
test
xchg
jecxz
dec
mov
rclb
andl
jmp
stc
cmp
xchg
jg
jle
sti
lret
sbb
pop
xorb
leave
out
lahf
addl
mov
je
jecxz
dec
mov
push
stos
dec
sub
adc
sub
test
cld
ficoml
lods
mov
sbb
push
imul
jns
jbe
int
in
mov
popf
dec
xchg
das
cli
scas
jge
int
aam
sub
daa
arpl
pop
loope
mov
mov
fsubrs
xchg
pop
and
push
xor
pop
push
mov
xchg
imul
dec
mov
cmpsb
add
ret
add
cld
jp
and
xchg
loope
and
fstpt
lcall
cmp
xchg
and
add
movsl
mov
inc
push
pop
mov
imul
orb
call
lock
sbb
dec
or
push
int3
inc
insb
lods
out
mov
stc
sub
add
fisttpll
add
mov
imul
xchg
scas
das
xchg
cwtl
fisubl
sahf
repz
sti
sub
mov
inc
outsl
int3
int
cld
mov
or
sbb
dec
js
addr16
cli
enter
mov
loope
adc
dec
sub
ss
dec
les
enter
mov
les
repnz
int
lahf
cmp
mull
call
push
ret
aad
mov
cmpsb
and
data16
mov
and
xor
pushf
adc
push
or
xor
xorl
mov
push
jecxz
insl
fmuls
mov
xor
inc
pop
mov
cmc
pop
mov
nop
cmpsb
das
test
std
sahf
mov
cltd
pop
dec
lcall
xor
sub
sbb
lods
xchg
inc
adc
iret
mov
sub
inc
rolb
inc
xchg
mov
dec
adc
mov
mov
in
and
xchg
test
pop
mov
std
push
xor
inc
ja
popa
out
lret
popf
mov
pop
lahf
scas
sti
sub
mov
jg
pcmpgtd
jp
frstor
or
in
roll
fs
pushl
inc
les
cmp
xchg
xlat
lock
adc
in
pop
sub
test
or
pop
popf
rcl
gs
ja
xor
inc
inc
push
lods
loopne
jmp
sub
rcrb
sbb
in
xor
sti
mov
das
scas
and
cmpsb
ja
fnstcw
aas
pop
sub
popa
pop
pop
pusha
sbb
jnp
dec
out
out
xchg
push
out
mov
std
cmp
int3
add
ljmp
insb
test
dec
jg
mov
scas
mov
sarb
sbb
test
jg
xor
cmc
aam
cmp
insl
sbb
outsb
inc
sti
adc
rorb
cmp
sbb
adc
in
xor
fnstsw
aas
test
roll
outsl
xchg
mov
xor
out
xchg
divl
and
and
inc
adc
aaa
std
adc
fisubl
push
adc
xchg
inc
inc
cmp
add
in
scas
ret
nop
sti
lcall
cld
cli
fimuls
pop
stc
push
data16
dec
dec
xchg
scas
cwtl
repz
movsb
pop
mov
xlat
out
out
bound
sub
mov
and
es
movl
cmpsl
jge
jne
ja
pop
sarl
sti
and
out
jecxz
in
mov
hlt
add
jbe
enter
sahf
sub
jbe
and
pop
pop
scas
or
ja
out
hlt
loopne
cmpps
dec
addr16
mov
inc
orl
aam
inc
pop
push
fidivl
mov
adc
daa
mov
dec
jb
jno
in
test
fsts
xchg
and
arpl
popf
shlb
call
inc
mov
add
jo
lret
arpl
add
or
loopne
fs
mov
pop
jne
aad
xchg
xchg
sub
aaa
push
jmp
push
add
call
setg
gs
push
aam
adc
cmp
sbb
xor
sub
inc
and
fs
adc
cli
int
cmpsb
lret
sbb
push
or
xor
fildll
call
cmp
sub
mov
cmp
loope
das
push
in
add
imul
xor
push
pop
jns
or
cmp
in
dec
pop
mov
cmovl
dec
mov
inc
or
jmp
stos
adc
ss
push
sub
dec
dec
fsubrs
shr
or
orb
pop
movsl
mov
test
mov
lock
sbb
loope
fstpt
fsubs
lret
xor
aam
jg
shll
gs
cli
mov
rcll
xchg
cmpsl
outsb
xor
cltd
leave
xor
pop
cmpb
and
xorb
mov
inc
adcb
in
xchg
lcall
ficoms
cltd
pop
and
fstps
iret
mov
inc
sbb
lea
filds
out
out
sahf
dec
bound
imul
or
mov
pusha
test
ror
movsl
xor
jmp
cmp
sub
sub
sbb
jbe
les
adc
dec
insb
mov
mov
or
adc
js
icebp
and
loop
pusha
icebp
adc
add
mov
push
mov
out
inc
push
pusha
scas
in
imul
add
inc
sbb
shl
push
jns
push
aad
aaa
sub
sub
pop
cmp
cmp
cltd
sbbl
test
pop
in
gs
mov
push
cld
insl
lret
xchg
insb
and
jp
mov
push
add
xchg
ficompl
sub
in
fxch
lock
pop
or
mov
xchg
lahf
ror
outsl
sbb
lods
xor
sbb
cltd
jmp
movsb
add
inc
gs
mov
roll
cli
aam
xchg
cld
je
rclb
repnz
xchg
push
xchg
add
jnp
sbb
mov
rorl
cltd
sbb
leave
clc
xchg
or
add
cmp
les
movb
inc
mov
fs
mov
inc
mov
pop
sbb
sub
idivl
dec
es
sbb
and
ss
test
pop
lods
shlb
hlt
jecxz
add
xchg
sub
jno
lods
sti
mov
out
push
add
push
sub
xchg
cltd
out
xchg
imul
and
mov
xchg
add
mov
jle
in
arpl
cwtl
stos
jle
test
int
xor
enter
ds
xchg
ss
mov
and
push
xor
adc
adc
fwait
lcall
pop
movsb
and
sbb
repnz
movsb
dec
int3
pop
xchg
clc
sbb
jno
dec
clc
lods
dec
rclb
mov
xchg
lea
pop
dec
add
jecxz
cmp
push
inc
dec
cmp
fistl
sbb
pop
jo
pop
sub
inc
pop
popa
pop
inc
mov
inc
inc
mov
movsb
addr16
test
loopne
pop
sbb
ja
enter
xor
scas
pusha
mov
in
jle
xchg
xlat
ret
or
fstl
inc
int
ror
inc
es
or
dec
aas
pop
addr16
mov
add
adc
or
insl
sbb
mov
push
sub
inc
sbb
stos
shlb
and
push
xchg
lret
dec
xchg
inc
aas
mov
ja
pop
iret
fnstenv
cmc
insb
xlat
pop
push
lods
scas
xor
or
pop
fists
idivb
insb
je
pop
mul
pop
xchg
xlat
xchg
in
jnp
fldenv
outsb
mov
fimull
ja
mov
xor
xchg
imul
xlat
xor
jb
js
and
dec
es
cmpsl
sub
ljmp
fidivs
or
ds
mov
jmp
mov
scas
jle
mov
lret
pop
pop
pop
shll
insb
mov
and
dec
pop
loope
and
jbe
clc
ret
jmp
xor
add
mov
repnz
arpl
mov
rcrb
push
cmp
jbe
mov
add
xchg
jbe
nop
fwait
or
xor
push
sub
mov
and
les
xchg
dec
es
arpl
out
call
xchg
xchg
int
mov
mov
mov
daa
idivb
fcoms
mov
pop
inc
push
cmpsb
nop
adc
mov
bound
pushf
add
call
arpl
lock
xchg
cmc
clc
sarb
outsl
mov
fnsave
xchg
jnp
pop
sub
lcall
or
hlt
and
lcall
ja
cmp
mov
inc
loop
mov
sahf
test
cmp
cmovno
mov
stos
push
and
jne
cld
out
pop
pusha
loopne
insl
das
push
xchg
mov
mov
cmp
cmpps
pop
xor
stos
xchg
and
and
xor
mov
dec
and
decl
or
hlt
mov
call
cmp
adc
xlat
sti
pusha
mov
inc
and
ss
test
push
pop
and
leave
out
aam
out
icebp
adc
mov
jmp
dec
ret
out
aad
lret
pop
inc
jno
mov
xchg
shlb
roll
insb
or
push
mov
or
push
shrl
push
mov
in
cmp
in
shll
mov
push
push
out
mov
inc
push
sahf
icebp
xchg
mov
negl
shrl
call
dec
repz
mov
jbe
push
adc
pop
pop
and
lods
pop
pop
shrl
push
jae
pop
jnp
mov
addr16
enter
lahf
xchg
jmp
cmp
rcr
adc
sbb
subl
in
nop
fs
pop
xor
stc
mov
pusha
jp
out
aad
popf
out
mov
ds
popf
mov
mov
pop
loop
mov
rclb
loop
or
loopne
dec
sbb
in
cmp
aaa
xchg
mov
cld
jmp
mov
lcall
ds
stos
inc
mov
or
idivb
sub
or
adc
ljmp
mov
jmp
push
xchg
fs
mov
xor
cmp
popf
sub
femms
outsb
pusha
fwait
cmp
fsubrl
cld
outsl
cmc
mov
and
outsl
shr
out
sbb
repnz
xor
or
stc
outsl
xchg
test
jnp
aam
divb
mov
cwtl
xlat
out
mov
sub
es
in
or
xchg
adc
pop
or
mov
xor
movhlps
insb
lock
scas
addr16
out
sub
dec
rclb
addr16
pop
xor
shll
cwtl
push
in
cmpsl
and
out
cmc
ret
sbb
ja
rolb
and
and
jle
add
outsl
dec
adc
mov
js
sub
arpl
shrl
dec
cmp
repnz
sub
cmp
js
or
dec
into
cwtl
aam
xor
mov
or
mov
inc
push
xchg
adcb
sub
ret
cmp
aaa
cli
adc
mov
and
scas
pop
cmpl
out
mov
pop
imul
dec
aam
sbb
nop
mov
and
inc
ss
ret
invd
fwait
pop
sub
ret
in
pusha
pop
xor
shrb
icebp
xor
jmp
lret
loop
mov
push
add
loopne
push
ret
rclb
adc
push
aaa
daa
xor
rcl
dec
pop
or
cltd
cld
sarl
push
push
out
shll
stc
add
jg
je
les
mov
hlt
js
and
xor
xchg
xchg
movsb
pop
and
stc
and
icebp
into
xchg
out
cltd
jmp
movsl
leave
bound
dec
shr
insl
xchg
xor
scas
push
clc
inc
mov
mov
test
or
sub
test
loope
and
xchg
mov
sub
imul
pop
jle
lret
or
mov
inc
ret
daa
sbb
dec
in
movsl
shrl
or
sub
add
das
cmp
popf
xor
rcrb
or
cmp
je
add
sti
xor
data16
push
jne
and
and
pusha
aas
adc
inc
in
xchg
cmpsl
aas
cli
and
fsubrs
jecxz
sbb
loope
cs
shll
sub
in
addb
and
es
fistps
stos
dec
rcrl
imul
das
insb
enter
in
sub
xor
subl
jg
add
mov
xor
decb
xor
movsl
or
add
leave
aaa
jecxz
push
fwait
mov
add
lret
outsb
inc
rclb
and
add
repz
repnz
mov
notl
inc
mov
dec
movzbl
jmp
in
fildll
daa
xchg
pop
call
pop
mov
add
loop
stos
xchg
mov
fistpl
ljmp
into
popl
pop
jb
push
mov
jge
scas
insb
jmp
xor
cmp
hlt
xchg
jnp
pop
lret
dec
dec
mov
pop
mov
stc
repnz
test
push
lock
ds
pop
jb
or
imull
cld
dec
or
or
and
push
fidivrl
cld
lea
inc
shrl
and
cmp
sub
outsl
int
xchg
cmpsb
pop
jecxz
add
inc
xchg
test
push
push
xchg
in
or
in
mov
push
call
fnstenv
sbb
and
lods
cmp
mov
dec
out
call
or
push
aad
popa
cmp
sbb
mov
push
stc
or
push
sub
andb
shl
gs
sbb
js
add
bound
popa
aaa
sbb
scas
call
aad
ljmp
and
dec
or
lret
shlb
jge
in
insb
mov
into
clc
test
add
push
sbb
and
jp
aaa
inc
and
cmc
fnstenv
sbb
cmp
ljmp
call
dec
xlat
lods
inc
test
leave
mov
adcl
pcmpeqw
andb
sub
js
aas
clc
cli
push
and
mov
mov
sbb
imul
dec
xlat
mov
repnz
push
or
jb
push
adc
add
je
dec
adc
xor
push
xchg
cmp
xchg
outsb
jnp
mov
push
out
clc
mov
push
xchg
es
pusha
imul
sbb
pop
pop
dec
les
int3
int3
test
repz
mul
jae
scas
rcr
divl
adc
cmpsb
push
jp
mov
and
push
test
lret
pop
fcoms
loop
xor
bound
inc
mov
adc
and
outsl
sti
movb
dec
adc
stos
repnz
fstl
add
and
xor
xchg
and
in
push
aaa
pop
fdivrl
cmp
pop
hlt
jae
pop
sbb
ror
adc
or
hlt
jno
add
pushf
or
cld
push
rorb
das
cmc
mov
shlb
es
clc
lods
xor
push
ds
repz
mov
dec
fs
mov
vcvtdq2ps
or
stc
and
mov
mov
mov
popa
fwait
sbb
or
decl
push
and
and
das
shrl
mov
movsb
jae
and
and
popa
adc
repnz
std
hlt
mov
outsl
sub
or
das
sahf
mov
imul
mov
jns
mov
pop
test
push
aaa
sub
ret
jp
xchg
stc
lret
xor
pop
jne
in
ret
shll
addb
icebp
sar
lahf
ficoml
popf
xchg
push
popf
push
jl
xchg
lods
mov
xchg
push
sbb
push
mov
mov
pop
test
push
push
mov
cwtl
inc
iret
jae
out
cs
fisttpll
rcrb
daa
in
cmp
jecxz
es
mov
popa
lods
and
dec
mov
xor
jg
out
jo
mov
ror
mov
xor
faddp
lods
pop
adc
or
cli
lea
popa
fwait
gs
inc
shrb
dec
adc
leave
add
loop
out
mov
iret
roll
pop
inc
bound
mov
pop
dec
ss
dec
push
cmp
rclb
jns
test
lods
hlt
xchg
xor
mov
jge
inc
hlt
fstl
adc
mov
inc
mov
and
fdivs
data16
mov
mov
aas
int
mov
pop
jo
shl
jno
add
lret
adc
sub
lahf
mov
jo
cmp
in
out
aam
inc
jp
or
out
inc
mov
pop
xchg
or
enter
dec
push
jle
xchg
loop
movsb
lock
or
loopne
test
imull
test
dec
mov
cs
gs
loope
lea
pusha
lret
iret
xchg
ljmp
sbb
push
cmp
push
push
mov
mov
repnz
lock
lar
fnstsw
and
in
testb
cld
js
jbe
inc
insl
pop
or
sbb
fdivs
jl
sub
sub
push
stc
ds
ret
enter
sub
lods
mov
pop
or
jg
in
in
add
ret
addr16
faddp
inc
rolb
mov
xchg
aas
pop
jmp
imul
jo
andb
inc
rol
push
aaa
push
sub
imul
jno
adc
adc
xor
aas
and
mov
lret
add
inc
cmp
aaa
pusha
xor
and
pushf
mov
nop
pop
mov
jae
cld
push
bound
dec
pusha
adcb
jbe
jecxz
and
add
push
int3
lods
scas
test
push
adc
mov
call
inc
sahf
adc
cwtl
mov
or
sahf
adc
test
daa
leave
icebp
test
dec
scas
xchg
mov
shl
sub
int3
fidivrl
test
loope
cmp
inc
ljmp
dec
ret
sub
mov
aad
add
aad
cmp
sti
sub
dec
ret
and
xor
pushl
and
push
sub
jae
mov
dec
mov
sti
sub
mov
fldt
mov
shr
les
data16
cmp
jnp
outsb
loopne
inc
addr16
fisubrs
xor
leave
xlat
push
pop
jl
ds
mov
std
and
imul
pop
rol
jmp
mov
add
outsl
sub
mov
or
dec
jg
inc
mov
dec
or
cld
xor
jno
sub
xchg
jb
rcrl
fwait
inc
jns
test
jb
fwait
outsb
out
daa
or
push
loope
pop
adc
mov
add
ljmp
gs
in
stos
jns
mov
lret
dec
aad
ret
aam
jbe
pop
lods
mov
les
scas
or
adc
xor
orb
sbb
jne
push
add
xchg
adc
sub
xor
out
scas
sub
cli
mov
fsubl
sub
pop
add
and
notl
sbb
fsubp
loopne
push
jnp
scas
or
adc
mov
push
aaa
xchg
sbb
lods
movsl
sbb
movb
push
iret
sarb
push
into
mov
leave
nop
inc
jns
pop
scas
dec
jne
adc
pop
mov
push
fistps
jl
inc
inc
adc
cli
insl
mov
out
mov
ss
call
push
cmp
sbb
test
mov
insl
mov
sbb
test
cmp
xchg
mov
cwtl
inc
cmpsb
cltd
es
jnp
mov
sahf
nop
or
mov
out
in
insb
int3
out
aam
mov
popf
pop
add
lock
subl
mov
fistps
out
lock
enter
sub
push
inc
rcll
xor
xor
xchg
imul
and
je
fcoml
outsb
mov
fstpl
adc
and
rorl
stos
push
mov
daa
mov
jg
gs
orl
int3
loope
pop
stc
popa
ret
inc
lea
aas
jns
aaa
jge
push
mov
inc
push
fwait
or
mov
les
add
ror
mov
cmp
sarl
pop
cmp
inc
and
jbe
xor
imul
es
jg
jl
pop
in
push
and
jge
test
pop
hlt
mov
ficompl
sub
mov
push
xchg
push
mov
mov
mov
mov
je
sub
scas
cld
mov
mov
mov
sbb
jae
repz
push
jno
mov
push
mov
or
xor
push
jecxz
jge
daa
sbb
jo
ljmp
mov
xchg
nop
push
mov
cs
or
mov
jne
test
divl
add
shrl
and
loope
mov
popa
rcl
bound
xor
and
fwait
jb
cmc
xchg
ret
into
roll
dec
jae
in
cmp
pop
outsl
sbb
rorb
cmpl
inc
lret
out
mov
adc
sarb
inc
popf
mov
pop
pop
adc
in
jb
push
jnp
jne
lret
push
or
cmpsb
push
fistpll
jp
lods
and
ja
in
inc
stos
and
push
mov
icebp
lahf
and
into
mov
push
cmpsb
cs
inc
out
arpl
sub
jge
mov
test
addl
sbb
fadd
xor
nop
sub
pop
rclb
pusha
adc
inc
lods
mov
or
mov
mov
ds
jmp
fsts
xchg
cmpsl
jl
mov
adc
push
add
ret
lea
push
dec
and
les
fdivrp
xchg
enter
lret
inc
adc
lds
adc
sub
and
cmp
sub
stos
adc
add
push
dec
jle
mov
rcll
xlat
jl
or
les
inc
stc
mov
adc
movsb
cld
or
popf
stc
or
sub
dec
push
out
or
clc
aam
push
adc
fdivr
mov
jns
orl
test
push
lea
dec
fmul
dec
and
in
push
jp
add
negl
mov
aaa
sbb
ss
lahf
sbb
adc
fadd
or
clc
bound
sub
repz
lods
jae
mov
cmpsl
pop
cmp
dec
outsb
call
cs
daa
imul
xor
xor
inc
jb
pop
jne
pushf
sub
add
push
ja
cmpsl
cmpsl
loope
test
inc
stos
das
sub
pop
imul
ret
fnsave
aam
out
cmp
jmp
cltd
or
loopne
push
ljmp
testl
jno
outsb
into
jp
xchg
push
sbb
sbb
xchg
movsb
mov
into
and
pusha
dec
inc
mov
dec
pop
pop
xor
dec
insl
scas
adc
mov
int3
xchg
addr16
sbb
mov
pop
cmp
cmp
adc
and
xor
mov
divb
mov
add
ss
pop
fyl2x
cltd
mov
daa
aam
dec
pop
ret
jge
mov
lret
imul
adc
pusha
lret
pop
in
clc
and
idivl
mov
pushf
mov
push
mov
lret
mov
iret
or
into
mov
cwtl
fiaddl
mov
xor
enter
hlt
pop
repnz
movsb
cwtl
mov
aam
xchg
dec
push
lods
add
inc
fcmovnu
push
sub
or
mov
mov
push
movsl
mov
push
aad
or
add
adc
push
mov
ja
push
and
jge
lods
sbb
outsl
scas
imul
inc
out
push
add
ss
xlat
push
xor
insb
mov
divl
lods
sbb
push
fwait
cmp
mov
hlt
inc
add
jecxz
enter
scas
push
dec
clc
loope
fcmovnu
mov
jne
or
jae
cmp
dec
aas
inc
int3
out
add
aam
xor
loopne
push
ret
enter
xorb
inc
mov
mov
aas
push
inc
mov
or
pusha
sbb
fstpl
sub
pop
cmc
mov
or
lds
icebp
dec
aad
xchg
push
popf
jnp
cmc
jl
gs
xchg
ret
jae
xchg
push
cmp
xchg
cmp
jb
test
xchg
pusha
sub
mov
movsl
sub
mov
clc
jo
mov
cmp
xchg
inc
clc
divl
jno
cmpsl
ret
xor
inc
outsl
call
fiaddl
add
dec
fs
insb
jno
int
xor
mov
imul
daa
and
add
imul
arpl
pop
fimull
punpckhbw
idivb
or
jno
pop
ror
sbb
outsb
mov
mov
aas
jge
int
adc
lea
jg
push
xchg
push
shll
mov
cld
out
daa
fisttpll
jno
mov
cmp
inc
fs
push
scas
lods
stos
mov
inc
dec
dec
push
jae
ljmp
xor
scas
and
mov
sub
repnz
cmp
das
or
fisttps
rcrb
push
loop
mov
xchg
mov
in
sub
xorl
mov
mov
inc
std
ret
jecxz
out
push
out
mov
sar
sti
pushw
rolb
sub
lret
inc
mov
hlt
test
orb
popf
xor
jmp
sub
in
test
cmp
jae
int3
clc
in
xchg
xlat
in
cltd
and
fcomp
add
int
add
cmp
mov
scas
mov
inc
inc
fstps
movsl
into
popf
mov
inc
mov
push
xchg
jb
addr16
xchg
repz
add
mov
xor
leave
xchg
mov
inc
adc
mov
adc
and
cli
sahf
inc
lods
mov
fistpl
test
cltd
cmpsb
mov
mov
in
xchg
sbb
mov
and
jmp
inc
pushf
lahf
fistpl
jno
int3
xor
inc
xor
mov
jns
das
sub
xchg
sbb
jg
or
fnsave
adc
push
pop
in
scas
int
dec
in
les
cld
push
ret
and
das
fsubl
scas
dec
inc
mov
jmp
and
out
xchg
sbb
sbbl
test
dec
inc
mov
pop
std
pop
loope
cmp
or
mov
lret
mov
out
hlt
mov
test
mov
outsb
or
jg
loopne
lcall
xor
cmp
arpl
insl
mov
mov
neg
dec
mov
lods
cmp
mov
and
mov
imul
lock
jo
hlt
jl
adc
lret
jmp
xor
jl
mov
movsb
add
xchg
push
xor
dec
stc
out
and
rcrb
inc
out
mull
inc
test
daa
scas
jb
xlat
sub
xchg
jecxz
cmpsl
imul
pop
add
cmp
imul
jbe
nop
imul
xor
testb
aad
push
cmp
mov
adc
push
clc
xchg
xor
push
mov
cld
add
xchg
mov
mov
mov
and
je
in
mov
mov
push
xchg
out
cld
cmp
fstps
xchg
cmp
push
and
lea
cmp
cmp
pop
push
sbb
incl
sbb
inc
mov
test
mov
pop
sbb
fstps
cld
jge
mov
data16
push
jnp
push
int3
xor
movsl
je
add
shr
xchg
mov
out
jbe
popa
popf
mov
out
ret
xchg
jp
xchg
xor
dec
daa
pusha
mov
pusha
sarb
mov
in
lods
dec
mov
out
imul
and
or
or
mov
xchg
or
mov
mov
push
mov
inc
xchg
mov
push
inc
insb
push
arpl
mov
cmpsb
sbb
cmpsl
jbe
mov
fidivs
js
xor
jecxz
adc
repz
xchg
sbb
sbb
imul
and
hlt
scas
std
cld
sbb
mov
pop
cs
xlat
jnp
cltd
mov
enter
fdivs
cmp
adc
and
xor
push
out
add
mov
insb
imull
aam
divb
pop
or
arpl
cmpsl
dec
cli
js
out
jg
jns
push
push
divb
sahf
sbb
cmp
xchg
dec
out
or
pop
xchg
cltd
out
cltd
movsl
out
push
test
leave
mov
loopne
jmp
jmp
sbb
lods
aad
jecxz
xchg
jnp
mov
dec
dec
loop
sub
mov
clc
movsl
mov
fwait
lret
stos
mov
sahf
mov
mov
jge
add
push
in
cmp
mov
mov
jns
lods
xor
or
jne
aad
pop
dec
sub
jbe
mov
jno
mov
repnz
cmpsl
mov
test
pop
push
xchg
stos
hlt
sub
dec
in
repz
aas
into
shrb
pop
fistpl
rcll
sub
mov
sub
in
fwait
pop
sub
mov
test
sbb
pop
xchg
dec
frstor
pop
dec
push
pop
stos
test
fstl
loope
push
push
cs
popa
pusha
pop
lret
mov
faddp
jbe
and
mov
xor
jp
repz
add
mov
cs
xchg
cmp
ja
leave
sbb
hlt
add
rolb
add
pop
fimuls
mov
mov
cld
pop
push
lahf
or
xor
sahf
enter
cltd
inc
xchg
dec
push
and
movl
and
mov
divl
xor
jbe
out
jae
sub
ret
fs
leave
fldcw
decl
sub
scas
xlat
fs
mov
aaa
adc
xchg
iret
ja
mov
adc
mov
sub
xchg
xchg
loope
mov
cmp
push
xchg
adc
add
repz
cmp
xor
sbb
dec
je
mov
lea
inc
cltd
xor
fisubs
pop
std
icebp
mov
in
int
xchg
lcall
adc
shl
popf
popa
test
mov
lret
sub
sarl
push
pop
int
test
jo
pop
xchg
sub
sub
cmp
add
cmp
rolb
or
aad
mov
cwtl
inc
lcall
mov
and
add
or
push
inc
cmp
fists
jecxz
cs
stos
cs
cmp
and
stc
mov
mov
adc
dec
shll
lret
pop
push
adc
or
cmp
std
inc
inc
out
and
scas
add
push
sbb
sub
mov
fwait
xchg
xor
scas
pop
adc
jns
popf
hlt
jb
enter
add
cmp
mov
jb
lahf
pushf
jecxz
mov
jo
push
adc
shr
lcall
mov
sti
jno
ds
pushf
scas
pop
mov
ljmp
jnp
adc
jno
mov
out
es
push
movsl
cmpsb
call
or
mov
add
fst
call
sbb
mov
xchg
nop
sarb
xlat
iret
ljmp
or
negl
aad
add
and
jp
test
mov
mov
xchg
add
clc
ret
out
imull
jns
cmpsl
pushf
dec
xor
call
mov
mov
add
push
out
cli
xor
push
lahf
incb
mov
inc
and
mov
pop
push
mov
icebp
clc
sbb
add
mov
xchg
inc
idiv
sbb
aad
or
cld
cmp
lret
xchg
and
push
movsl
add
cld
cli
stc
or
in
loope
push
out
sti
pop
and
sti
in
and
leave
mov
arpl
cmp
data16
sti
lcall
test
neg
inc
sub
xor
movsb
sub
lret
sahf
pusha
mov
sub
leave
ret
mov
or
fists
scas
sub
std
in
pusha
negl
mov
frstpm(287
add
mov
sub
cmp
jae
movsb
pop
jmp
fisubs
mov
push
pusha
fs
mov
adc
dec
xor
xor
xlat
aam
inc
pushf
loope
mov
inc
sbb
mov
sahf
gs
shll
out
dec
out
shl
jb
and
xchg
jmp
push
xor
or
and
push
mov
idivb
push
push
dec
xchg
mov
loop
sub
or
lea
xchg
mov
push
xchg
sbb
and
test
adc
mov
adc
hlt
frstor
lahf
xor
lds
pop
lock
pop
scas
sahf
mov
imul
imul
jns
adc
inc
std
cld
xor
dec
add
pop
sti
test
push
cmp
xor
mov
dec
xor
jl
mov
je
out
lret
inc
lds
xor
int
imul
arpl
out
hlt
pop
xchg
popa
fiadds
scas
cmpsb
mov
xchg
pop
jnp
pusha
mov
mov
add
ror
jne
adc
in
push
adc
dec
xchg
jp
test
ret
les
std
js
roll
jae
fmuls
pop
cmp
int
gs
bnd
lea
daa
clc
roll
ja
lods
add
and
sub
clc
into
sub
rol
push
jecxz
xor
pop
inc
scas
jo
test
pusha
sub
jle
fstps
lret
ficoms
shll
aaa
mov
outsl
and
jmp
jl
inc
mov
jecxz
cmp
ds
pop
inc
loope
les
jns
push
cld
imul
pop
mov
dec
mov
and
adc
or
push
adc
mov
inc
lcall
aam
cmp
comiss
xor
addl
adc
fildll
dec
xchg
rcrb
mov
faddl
add
xor
sarl
movsl
out
cli
ret
mov
pop
mov
dec
add
fmull
and
dec
scas
scas
jle
jg
data16
dec
out
das
pop
std
test
inc
icebp
pop
icebp
aad
psadbw
cmp
stc
sub
mov
pop
daa
das
lret
icebp
xor
rclb
int3
stos
mov
mov
dec
jne
inc
mov
jnp
js
dec
out
inc
aaa
je
pop
arpl
cwtl
int3
fldt
in
jmp
sub
nop
ret
push
push
mov
test
pop
sbb
loopne
rorl
push
or
inc
pop
dec
movsb
add
es
xchg
scas
pop
cli
inc
imul
loope
and
stc
jae
addl
gs
pop
inc
fcoml
or
add
clc
cmp
outsb
sarl
adc
fcmove
dec
jle
inc
out
push
mov
jmp
cwtl
cmp
jle
adc
xchg
dec
jl
add
or
int
shl
cltd
mov
adc
inc
xor
and
insb
sbb
in
lods
gs
xchg
stos
int3
dec
packuswb
inc
lods
repz
and
cs
jbe
nop
outsl
jb
push
mov
sub
lret
movsb
nop
gs
mov
popf
pop
mov
or
inc
stos
mov
pop
cli
aas
pop
sub
repz
xchg
xchg
dec
xor
sub
mov
xor
cwtl
jae
jle
insb
cmpsb
adc
jecxz
pop
jo
mov
jns
loop
lods
pop
mov
pop
add
andl
pop
repnz
pushf
out
ret
mov
dec
push
dec
jne
xor
xchg
mov
dec
cmp
int
movswl
push
jle
rcr
insb
repz
out
jge
cmpl
mov
clc
pop
add
mov
fstpl
adc
adc
sbbl
int3
jle
xchg
repz
dec
add
mov
jg
outsb
hlt
xor
notb
xchg
call
or
fldenv
push
test
lods
jp
push
cltd
cmp
mov
mov
incb
sbb
ljmp
xchg
xchg
rcrl
into
sub
sbb
nop
or
sbb
push
mov
or
popa
or
cmpsb
aaa
jecxz
mov
xlat
xchg
data16
notl
por
xchg
mov
enter
jmp
aas
ss
mov
pushf
ret
pushf
adc
lcall
push
cltd
xor
das
mov
push
or
add
xor
sti
cltd
mov
scas
ljmp
pop
sub
jp
jns
jl
ljmp
dec
jecxz
or
or
lret
sbb
mov
sub
rorb
fimull
fdivrs
jnp
and
or
jmp
popa
mov
sbb
ret
xor
std
dec
mov
mov
cmc
insb
adc
pop
mov
sub
jo
jne
aad
adc
or
lock
sbb
sti
push
mov
outsl
enter
dec
adc
repnz
push
inc
push
out
cmpsb
lock
mov
sbb
cmp
movsl
or
xchg
and
add
je
jnp
xchg
pusha
not
or
stc
inc
pop
mov
push
cs
inc
rcll
mov
test
adc
repnz
mov
mov
rorb
test
enter
pop
data16
cld
mov
add
xchg
out
fildll
push
mov
sbb
lods
fsts
lock
ficoml
cmpsb
push
shrb
out
inc
std
fmull
lods
inc
pop
mov
sub
sub
adc
ja
or
mov
jl
and
sub
sbb
jp
pushf
fbld
imul
mov
bound
adc
mov
mov
syscall
mov
arpl
and
mov
mov
push
daa
dec
mov
cmpsb
and
rcr
leave
cmc
ret
push
ja
flds
movsb
das
add
sbb
and
punpckhwd
mov
popf
sbb
hlt
adc
cmovb
xchg
push
mov
scas
mov
cmpsl
test
imul
add
testl
fs
jne
ret
nop
fs
dec
pop
push
test
dec
mov
jecxz
sahf
lds
mov
repnz
daa
movsl
cmp
imul
push
femms
xchg
xchg
in
adc
insb
cmp
clc
jmp
scas
jns
mov
inc
mov
pop
lods
mov
inc
push
sub
xor
jb
xlat
in
fisubs
das
sub
jbe
pushf
inc
add
dec
mov
daa
xchg
inc
or
cmp
cwtl
sbb
xor
push
and
cmp
ljmp
adc
jle
rcl
ret
sbb
sbb
cltd
repnz
adc
pop
mov
sub
leave
or
out
push
sbb
mov
pop
sbb
mov
shrl
lret
sbb
push
repnz
xor
pop
sahf
and
and
test
imul
ss
xor
mov
add
mov
pop
icebp
cmp
pop
cmp
mov
or
or
lea
mov
mov
dec
movsl
insl
mulb
popl
pop
mov
lret
jmp
fdivr
jne
iret
pop
and
fs
inc
js
mov
shlb
push
lahf
popf
je
xchg
frstor
pop
mov
or
shr
js
cmp
mov
sbb
jge
sbb
stos
ljmp
lds
dec
ja
pusha
popf
lret
movsb
mov
and
jl
mov
xchg
add
cmpsb
inc
mov
xchg
xor
inc
sbb
insb
cmovle
sub
fsub
jbe
popf
fists
dec
push
xchg
cmc
xor
cli
and
cmc
or
stos
pop
ds
lahf
fsubrl
push
pushf
dec
sbb
cmp
add
mov
push
out
daa
cs
aas
cs
xchg
push
cmp
xchg
fcom
subb
jne
out
daa
mov
ret
mov
les
adc
movsb
cmp
repnz
repz
jae
in
aad
cmp
push
sub
popa
xchg
mov
mov
ret
lahf
mov
dec
dec
loope,pn
fcoml
add
inc
sbb
ret
pop
cmp
pop
jnp
and
jg
jne
add
dec
cmpsb
repnz
leave
cli
lods
inc
out
cmp
stos
jo
mov
lret
pop
pop
cmp
frstor
js
sub
jmp
push
inc
dec
out
test
imul
js
in
mov
call
mov
lcall
repnz
mov
jnp
shrl
je
insl
push
push
cli
in
aam
adcl
call
adc
lea
es
jl
mov
xchg
mov
dec
fbstp
pop
sarb
or
lods
outsb
popa
inc
insb
mov
add
adc
cs
test
cwtl
sbb
mov
or
xor
ja
lds
loopne
fnstsw
push
divb
cmpsl
out
cmp
push
mov
rolb
push
outsb
int3
cmc
jp
mov
imul
shrl
inc
pop
shll
and
sbb
jno
fistpl
dec
mov
adc
xor
lods
shll
dec
pop
adc
ja
inc
cltd
or
rcrb
sbb
enter
arpl
mov
push
sbb
push
addb
jge
xor
movsl
jb
int
lahf
push
xor
test
cmp
leave
loop
pop
pushf
ficoms
in
in
in
insb
adc
insl
cli
call
aad
sbbl
and
push
jp
xor
jmp
loop
mov
test
rolb
dec
in
sbb
cwtl
xor
imul
add
mov
jne
and
and
stc
or
out
push
cmpsb
lcall
xchg
adc
into
adc
bound
jne
mov
cmc
or
out
pop
mov
outsl
fcoml
fbstp
xchg
rcr
xor
imul
insb
out
mov
or
mov
jmp
cld
mov
adc
in
xor
mov
mov
inc
adc
or
and
iret
xchg
push
je
cwtl
inc
inc
addr16
inc
jl
sahf
inc
sbb
adc
cmp
jb
fiadds
rolb
inc
push
inc
cmpsl
xor
xchg
nop
xor
stos
gs
or
imul
push
jo
scas
pop
dec
or
test
popf
jbe
outsl
test
arpl
mov
insl
imul
in
filds
xor
lahf
inc
cld
call
push
loop
mull
sbb
inc
ret
cmc
test
ror
aaa
fsubrs
lcall
xchg
loop
sbb
sbb
add
jns
pushf
dec
lds
out
jmp
or
and
adc
cmp
hlt
sub
fwait
outsl
es
sti
xchg
subl
xor
pop
idivb
cltd
je
lods
jmp
jl
mov
mov
sub
cmpl
push
ret
jl
ss
jge
mov
imul
insl
xchg
xchg
and
aas
mov
xchg
xchg
xor
adc
je
fldcw
fwait
test
bound
pop
xor
lods
xchg
xchg
shlb
jg
push
and
sub
inc
xor
dec
lcall
push
jno
minps
or
mov
lcall
sbb
fistpl
test
loope
ds
data16
push
in
mov
add
inc
adc
in
jo
sub
lahf
xchg
push
cmp
add
repnz
lea
cltd
and
sub
mov
jns
rolb
cmpl
mov
das
cmpsb
inc
add
lods
jp
cli
lret
jnp
lock
push
and
incb
aas
imul
inc
cmp
lods
imul
enter
cmp
and
xchg
xchg
xor
and
and
mov
xor
push
jne
mov
mov
lock
inc
ret
out
mov
divb
addr16
or
movsl
cmc
mov
lcall
or
loope
cmp
fdivrp
into
std
hlt
push
ret
xchg
or
mov
xchg
fcmovnu
push
sub
adc
adc
cmp
mov
mov
mov
orl
jnp
xchg
dec
add
rolb
or
jecxz
dec
loop
hlt
aad
pop
sub
addl
testb
in
out
js
or
mov
inc
mov
xorb
movsl
dec
arpl
in
sub
loop
add
mov
insb
movq
cmp
push
ja
sbb
mov
adc
mov
scas
jnp
mov
jne
mov
xor
mov
cmp
in
sahf
push
jo
cmp
push
rcll
adc
decb
mov
mov
sub
sahf
int3
xorb
and
jne
adc
cs
fsubl
mov
call
jb
mov
mov
xchg
sarl
mov
inc
andl
pop
testl
mov
outsl
cli
sahf
pop
aad
nop
sahf
fmulp
mov
push
cmp
gs
push
loop
xchg
test
inc
sbb
mov
sbb
inc
inc
add
xor
inc
mov
popa
inc
rolb
sbb
cmc
in
xlat
mov
sbbb
xchg
sbb
test
pop
mov
imul
iret
clc
arpl
or
or
call
js
inc
cmp
cwtl
sahf
push
jbe
push
mov
sub
xchg
mov
jmp
ljmp
cmpsb
imulb
icebp
fnstsw
mov
outsb
mov
push
cli
arpl
fildl
movsl
repnz
mov
mov
pop
fsts
outsl
xchg
jne
rorb
xchg
xchg
sbb
rcl
mov
pop
jp
imull
xor
adcb
mov
pop
lret
call
or
test
pop
mov
iret
dec
xor
mov
mov
in
add
sub
jecxz
call
out
fnstsw
stc
inc
test
xchg
mov
add
cmp
adc
add
xchg
icebp
out
sub
into
idiv
aam
imull
into
sbb
int3
jle
into
push
xchg
xor
jb
cmp
test
repnz
std
imul
jg
dec
adc
xchg
add
add
adc
push
inc
xchg
out
filds
xchg
call
aas
ljmp
adcl
add
in
dec
mov
push
mov
aas
adc
cli
sbbl
jbe
lea
cmp
leave
xchg
mov
add
ja
movb
jo
repz
lds
out
mov
sub
inc
or
xchg
fstps
cwtl
pshufw
cli
adc
pop
nop
scas
cmpsl
cmpsl
int
mov
and
hlt
icebp
int
sbb
or
jnp
popf
or
or
les
lds
lods
sbb
gs
ja
fwait
and
cmp
int
iret
inc
adc
adc
repnz
mov
mov
clc
test
sbb
sub
mov
mov
out
jne
cs
mov
shlb
mov
fs
loopne
push
inc
test
int3
xchg
inc
cmp
push
pop
push
lods
jecxz
xchg
testl
cltd
pop
dec
movsl
mov
inc
xor
cmp
hlt
lret
jae
popf
inc
mov
sbb
lods
mov
xor
mov
cli
inc
imul
stc
lret
in
fidivl
into
pushf
sbb
inc
or
iret
mov
sub
insl
xor
pop
loope
pop
sbb
dec
dec
in
movsb
jbe
xchg
repz
les
dec
orb
jecxz
test
scas
pop
push
aad
stos
mov
and
stos
mov
push
mov
jne
iret
push
mov
adc
loope
jg
lahf
lea
push
int3
push
cmpsl
iret
mov
mov
repnz
pop
scas
movsb
and
or
aas
mov
test
or
scas
push
mov
js
inc
out
les
ret
mov
and
cltd
mov
shrl
adc
mov
inc
cwtl
and
notb
adc
popf
mov
in
cmp
push
imul
mov
or
mov
imul
sub
xchg
adc
add
mov
pushf
les
das
lcall
gs
jg
xor
into
lret
jae
cmpb
jnp
dec
mov
icebp
shlb
ds
push
sub
inc
cwtl
jp
movl
ja
into
xchg
add
push
leave
fwait
mov
loop
pushf
iret
sbb
lds
xchg
je
shlb
nop
cmc
pop
aad
add
dec
outsb
movsb
mov
test
inc
mov
cli
fwait
mov
into
jg
les
fsts
hlt
jecxz
fs
add
and
out
xchg
aad
lock
mov
mov
cld
pop
sbb
jo
inc
pop
jo
pushf
mov
in
cltd
rolb
call
mov
and
adc
pop
mov
popf
jb
mov
and
ss
clc
xor
enter
lds
push
mov
mov
pop
stc
roll
cmp
xchg
jge
data16
xchg
mov
or
bound
pop
jge
mov
mov
pusha
test
pop
add
insl
test
push
fisttpll
adc
mov
mov
pop
out
lea
fisttpl
aad
out
hlt
pop
mov
pusha
faddl
lds
sub
outsb
mov
ljmp
pop
dec
das
push
ret
xor
repz
popf
cmp
movsb
xor
cmc
pop
jns
repz
lods
mov
cmp
cmp
scas
lock
and
push
xorl
xor
pop
pop
mov
jge
popl
mov
or
jb
push
mov
repz
imul
inc
or
in
mov
push
in
dec
and
std
pop
iret
in
adc
inc
movsl
incl
lods
mov
jno
sarl
pushf
mov
sbb
lea
mov
int3
xchg
push
push
jno
decl
inc
mov
lods
mov
aaa
or
cs
sub
stos
cmp
jge
push
xor
idivb
sub
jmp
pop
cmc
cld
add
mov
test
jp
dec
fs
adc
pop
dec
xchg
les
xchg
subb
std
mov
sahf
test
stos
cmpl
sbb
jnp
lods
leave
or
lret
adc
pop
lods
rcll
inc
lods
add
inc
repz
pop
dec
cltd
inc
repnz
inc
inc
idivl
imul
dec
xor
fcoms
pop
jle
sahf
int
pcmpgtb
ret
mov
cmp
xchg
adc
xchg
stc
imull
cld
jns
jmp
pushl
adc
scas
mov
scas
xchg
repz
xorl
xchg
dec
inc
cmp
jle
and
xchg
inc
push
inc
inc
cmp
sub
push
or
nop
add
inc
xchg
dec
js
dec
mov
and
and
ret
or
mov
lea
out
test
outsb
xchg
dec
adc
setp
fs
xchg
iret
sub
aad
stos
jnp
aad
fiaddl
cli
cmp
arpl
fildl
lds
mov
aas
dec
add
jecxz
cmp
dec
fsubrl
jno
loopne
xor
inc
mov
sbb
and
in
pushf
lods
sbb
dec
ficomps
mov
test
mov
inc
jne
dec
bound
cmp
and
iret
mov
stos
cs
mov
js
push
mov
pop
xchg
call
scas
cs
daa
lods
mov
ja
es
loope
out
mov
nop
inc
push
je
adc
pop
mov
cli
popa
test
jg
addr16
ja
mov
mov
pop
test
fwait
and
dec
mov
ja
sti
pop
cmpsl
inc
icebp
mov
arpl
out
add
cmp
or
ja
mov
xchg
mov
pop
xchg
lahf
mov
dec
push
sub
inc
adc
aam
jecxz
rcrl
adc
jp
xchg
push
jbe
mov
sbb
loopne
xchg
pop
pop
aaa
xchg
or
enter
repz
jg
jl
cmp
cmp
stc
clc
clc
jmp
das
test
inc
and
sub
jno
dec
sahf
push
mov
inc
sbb
mov
cmp
aam
xlat
lcall
sub
shrl
adcb
fucomip
mov
sbb
sub
mov
inc
movsb
icebp
dec
mov
lds
xlat
adc
mov
cltd
sbb
cltd
jmp
sub
mov
into
rcrl
cmpsb
lahf
cld
fisubs
cmp
inc
lret
xor
aas
das
cli
in
das
jns
lods
loopne
cld
mov
mov
mov
pop
dec
cmc
ljmp
mov
daa
daa
xchg
push
push
mov
and
js
push
sub
js
sbb
dec
jecxz
aaa
push
ljmp
lahf
push
je
lret
pop
bound
test
das
int3
cmpsb
sbb
hlt
or
or
add
xchg
test
mov
loope
mov
cmp
fisttpll
outsl
repz
ret
jecxz
popf
or
outsb
ljmp
jge
arpl
inc
mov
push
push
sub
inc
ds
ljmp
cmpsb
push
xlat
dec
test
jae
test
and
stos
add
mov
sub
cli
xchg
rorl
out
hlt
fists
cmp
or
out
cmpsl
popa
xchg
addr16
xor
push
add
push
es
pop
mov
test
into
push
xchg
popf
mov
mul
lods
ja
in
lcall
in
lock
xchg
aaa
fldt
mov
inc
pop
mov
push
call
sti
out
pop
xchg
push
out
repnz
inc
xchg
mov
jnp
loope
jle
jp
or
ret
fcoml
sbb
leave
pop
inc
or
cmp
lret
cmp
xchg
test
pop
sbb
aad
push
rorl
pop
lret
mov
push
push
jmp
push
xchg
outsl
inc
fdivl
or
push
push
push
sbb
pop
xchg
test
cmp
enter
rcrl
xchg
jmp
in
cltd
inc
and
jecxz
aas
adc
aaa
shrb
mov
jg
mov
sahf
push
gs
cmp
cmp
sub
sarb
movsl
addl
mov
xchg
cmp
mov
mov
inc
rorl
or
cltd
jge
xor
lret
imulb
push
pop
dec
hlt
mov
xchg
nop
add
and
inc
xor
popa
notl
outsl
aas
mov
repz
mov
add
mov
jns
mov
mov
out
pop
test
sbb
xorl
cmp
sbbl
ja
cmpsl
pop
inc
jp
mov
icebp
lock
and
idivl
or
aad
test
pmaddwd
fwait
out
push
and
push
hlt
jle
mov
ljmp
xor
stos
jg
cmp
int
subl
ret
cmpsl
cmp
in
outsb
js
mov
pusha
into
cmp
dec
mov
mov
jmp
fcoml
mov
sub
pop
andb
mov
push
and
mull
inc
jno
jns
in
mov
test
aaa
cmp
add
aaa
pop
pop
fadds
jae
sub
in
xchg
push
aas
bnd
pop
xchg
imul
xchg
push
imul
mov
fdivrs
aad
es
int
scas
cltd
pop
pop
or
sbb
pop
lods
cmp
cmp
pxor
push
addr16
mov
repnz
arpl
insl
push
sbb
lret
pcmpeqd
dec
sbb
mov
lret
jmp
stc
xchg
imul
pop
test
nop
clc
inc
clc
xchg
sub
mov
and
or
nop
ss
adc
int3
xorl
xchg
stos
and
cmp
or
push
sub
aas
pop
cmp
jmp
int3
movsl
leave
or
cld
adc
dec
out
aaa
hlt
aam
or
xor
mov
sub
lret
lret
mov
iret
mov
xor
xchg
divb
mov
xchg
pushf
mov
or
pop
jno
int
mov
jecxz
inc
push
sbb
addr16
cmp
sbb
enter
cld
call
push
jl
pop
jns
mov
fistps
dec
fcompl
xchg
js
rorl
push
pop
out
sahf
stos
arpl
pop
in
mov
mov
lea
fdiv
popf
ret
fdivl
les
inc
push
or
leave
nop
mov
sub
xor
or
pop
andb
push
stos
mov
and
and
popa
cmp
push
test
cmp
sbb
lock
or
test
mov
add
inc
popf
daa
pop
add
inc
cmp
sbb
cli
ret
icebp
repnz
addr16
push
pop
pop
loopne
dec
je
jl
add
xchg
movsb
xchg
or
cmc
insl
sub
repz
mov
jb
cmc
pop
xor
mov
fs
loope
inc
in
repnz
mov
je
xchg
and
pop
js
sarl
cmpsl
iret
xchg
push
cmp
add
roll
push
stos
xchg
shlb
ljmp
inc
fisubrl
xchg
insl
adc
xchg
cmp
lds
dec
aad
sbbl
xchg
arpl
sbb
mov
sub
in
and
icebp
imul
stos
es
aad
scas
inc
pop
andl
ds
mov
mov
xlat
mov
mov
rorb
and
mov
cmc
pop
mov
hlt
sub
cs
mov
push
test
notl
xor
adc
push
or
or
adc
cltd
jae
inc
xchg
fcom
xchg
pop
shlb
outsl
ss
mov
or
in
scas
cmpb
push
inc
imul
negl
mov
jecxz
ljmp
hlt
clc
adc
jbe
pop
movsb
js
lds
cmp
sub
rcr
mov
mov
dec
dec
mov
push
xchg
xchg
pop
mov
mov
cmpsb
sti
lds
mov
mov
mov
lock
push
sbb
fistpl
rcrb
stos
push
addr16
test
mov
loope
ja
pop
loope
and
dec
imul
push
dec
test
pop
das
sbb
lcall
push
jb
dec
aam
lods
and
adc
ja
xchg
stos
dec
jns
jo
push
int3
inc
aaa
jnp
xlat
add
adc
push
in
insb
popf
mov
mov
out
jno
xor
gs
test
mov
jae
mov
lahf
mov
mov
pop
mov
gs
xor
bound
jmp
push
pop
xor
ret
push
cs
enter
sti
das
pop
mov
mov
jae
cmp
xchg
xor
push
loopne
lcall
jge
mov
rclb
mov
adc
mov
or
js
pushf
lods
xlat
lods
and
ret
rcll
or
mov
mov
cli
pop
adc
jg
pop
stos
pop
mov
fstps
mov
xchg
mov
mov
push
xchg
or
fldt
nop
jmp
push
shl
orb
test
push
lods
clc
xchg
ljmp
enter
xchg
int3
cmp
jmp
adc
movsb
and
lds
inc
mov
stos
xchg
std
cmpsl
into
jb
fnstsw
xchg
mov
mov
xchg
std
cmp
mov
sub
xor
mov
fs
into
push
aaa
sub
lds
and
test
fucomi
cli
ja
pop
pop
jle
dec
lods
mov
inc
xchg
mov
mov
jne
lds
jl
adc
push
sub
lods
clc
gs
mov
mov
lret
lods
push
mov
divb
pop
sub
pop
fwait
inc
stc
mov
mov
and
rcl
repnz
lret
scas
mov
pushl
sub
push
mov
das
cmp
and
jae
iret
xor
add
inc
adc
mov
repz
mov
pop
dec
rcrb
aad
sub
stos
arpl
sarb
mov
lret
inc
xlat
outsl
mov
in
lock
pop
mov
mov
icebp
call
jmp
mov
ja
jb
test
cltd
jle
mov
inc
ja
inc
mov
sub
cmp
pushf
insl
imull
cmp
and
and
push
xchg
ficoms
faddp
cmp
dec
or
fwait
push
movsb
mov
xchg
mov
je
ds
push
faddl
pop
insb
inc
sub
push
jecxz
orb
mov
xchg
es
ss
jae
ja
testb
sub
das
fcoms
nop
xlat
ljmp
addr16
icebp
or
fstl
out
xchg
cltd
cmp
out
subl
and
jecxz
repz
add
sti
and
adc
fldcw
add
xchg
xor
and
fldl
sub
sbb
addr16
sbb
call
push
adc
sub
pop
cwtl
or
loope
jle
dec
es
sub
in
shlb
jne
ljmpw
fs
jno
fsubp
divb
sbb
inc
push
lret
int3
loope
pop
lods
subl
std
sub
enter
mov
xchg
cwtl
cwtl
jmp
and
in
movsl
lret
idiv
fdivrl
inc
sarb
xchg
jg
jns
aas
jae
hlt
dec
sbb
push
cli
sbb
lds
pop
mov
sti
int3
std
lods
sub
xchg
test
fcmovnu
loop
sbb
mov
loopne
lcall
popf
out
adc
add
fbld
test
cmp
mov
nop
aaa
ss
jno
in
adc
pop
pop
push
jl
dec
lods
iret
xor
cs
popf
clc
mov
and
into
cmc
adc
fildll
das
dec
pop
popf
incb
outsl
ljmp
push
andl
andb
jo
outsl
in
fdivrl
out
dec
mov
and
xchg
adc
adc
cwtl
mov
mov
or
xlat
insl
jle
icebp
imul
dec
xor
jge
lcall
inc
adc
inc
push
adc
data16
sti
cmpsb
cmp
pop
xchg
sbb
or
pop
dec
outsl
sahf
les
mov
adc
cmp
add
mov
aas
enter
jno
sbb
bswap
iret
push
movsl
cmp
push
xchg
test
repz
push
mov
inc
pop
xchg
pop
mov
ds
or
jge
adc
mov
insl
cmp
out
stc
dec
decl
out
lea
mov
mov
cmp
movsb
sahf
shrl
ds
mov
push
pop
sbb
jb
pop
pop
out
enter
dec
gs
test
cmp
cmp
cmpsb
add
mov
addr16
scas
lcall
add
adc
inc
lahf
pop
scas
push
imul
push
test
jo
push
movsl
out
decl
dec
iret
adc
int
push
mov
adc
adc
mov
daa
pop
cli
inc
call
enter
pop
xor
push
xchg
cmpsl
xor
test
add
inc
and
cwtl
ret
in
xchg
sub
xor
mov
inc
fwait
sbb
and
adc
movsl
jnp
les
lock
push
push
shlb
lods
insb
mov
and
out
jne
and
sarb
movsl
out
clc
in
cmp
fisubrl
mov
das
inc
daa
mov
jno
pop
mov
inc
mov
mov
push
add
and
popa
mov
sbb
mov
inc
mov
cmp
fs
ficoml
in
mov
test
in
sarl
cmp
add
roll
push
mov
jmp
push
adc
rorl
nop
xchg
adc
cmc
sub
clc
xor
fistl
call
shrl
jmp
jae
or
xor
aas
pop
sub
frstor
jge
sub
push
xchg
adc
outsl
push
push
fs
test
mov
mov
push
mov
or
popa
and
push
add
cmp
in
movsb
dec
lahf
negb
lods
jle
and
aaa
push
push
fisttpl
push
mov
xor
fcomp
insb
mov
ljmp
mov
or
dec
mov
test
lret
dec
cmp
mov
enter
jno
xchg
pop
sbbl
dec
std
cmc
imul
sub
enter
ljmp
and
lods
je
cmp
jp
sbb
xor
inc
pop
xchg
fdivs
shr
insb
inc
cmpsl
mov
mov
ljmp
pusha
repz
arpl
xchg
jmp
xchg
push
popa
in
xchg
sbb
or
insw
pop
dec
test
sti
cmp
ret
xor
dec
jns
rcrb
or
repz
faddl
or
outsl
jl
repnz
test
movb
iret
push
ja
pop
jns
inc
jns
repnz
push
sub
cwtl
push
pop
movsl
jo
insb
loopne
mov
inc
mov
and
xchg
mov
xchg
sbb
hlt
cli
stos
arpl
dec
adc
inc
sbb
pusha
push
rclb
sub
mov
mov
and
dec
push
and
jl
mov
fnstcw
mov
jp
cltd
stc
add
lds
fsubl
mov
cs
push
out
mov
mov
cmpl
push
dec
push
sbb
insl
cmpsb
cli
pusha
aad
mov
push
out
in
sbb
xchg
push
jbe
repnz
dec
adc
leave
cwtl
inc
push
aam
jl
std
adc
sub
insb
add
xor
mov
cltd
mov
xor
jg
loopne
xchg
jae
xchg
aad
push
outsl
ficomps
dec
and
push
bound
push
shll
loope
pop
xchg
fldenv
mov
adc
cmpsb
adc
in
dec
cltd
mov
lret
ret
imul
cmp
and
mov
add
mov
divb
cmp
and
mov
jle
jle
stc
call
ret
inc
bound
stos
lods
xchg
out
cmp
mov
test
cmp
mov
or
pop
and
and
mov
inc
or
sbb
inc
jo
int
fsubr
aaa
js
stos
sarl
jb
insb
mov
daa
repnz
add
sti
or
cs
lcall
ret
cld
or
push
scas
jge
arpl
fldl
sub
sbb
dec
repnz
int3
adc
shll
nop
dec
sub
and
push
rorb
jo
mov
gs
mov
mov
imul
shrl
push
rol
test
imul
inc
loopne
cmp
enter
dec
and
inc
or
fstpt
stos
pop
and
cmp
cwtl
cmpl
nop
arpl
pop
and
insl
push
pop
xchg
inc
pop
jns
add
pop
mov
pop
out
cld
add
shlb
mov
xchg
scas
cmp
jecxz
and
ja
mov
xchg
adc
clc
xor
mov
xor
rcrl
adcl
xchg
xor
fdivs
mov
sbb
ja
sahf
loopne
dec
jmp
cltd
hlt
sti
inc
jmp
repz
push
push
push
xchg
xor
aam
and
iret
mov
fs
test
mov
inc
lret
test
lds
daa
lods
divb
add
sub
outsb
out
add
dec
mov
leave
fs
ret
addr16
enter
xlat
jle
xor
into
cmp
pop
fsubp
in
and
cltd
jmp
mov
mov
mov
int3
sahf
mov
aad
out
or
mov
imul
popa
inc
adcl
cmp
int
fcoml
adc
pop
imul
add
push
add
ficoml
adc
enter
mov
ror
inc
add
ss
push
or
mov
in
repnz
fbld
lds
inc
leave
lcall
jbe
lods
mov
add
and
and
mov
push
push
jl
cmp
nop
xor
sub
pop
cwtl
push
pop
fcoml
jbe
fsubs
jae
pop
stc
out
pop
loopne
push
mov
jmp
scas
xor
fldcw
or
add
lock
les
sbb
mov
mov
adc
es
dec
pop
jg
inc
pop
mov
jge
test
stos
mov
mov
fcomi
dec
inc
push
cmp
fprem1
pop
cmp
jge
mov
popa
mov
stos
sub
cmpsl
xor
or
dec
test
add
scas
push
inc
mov
pop
dec
sbb
push
mov
cmpsl
cmp
adc
mov
fstpt
dec
or
lcall
dec
cli
sahf
xchg
or
rclb
pushf
lret
xchg
les
mov
out
jns
fstl
lahf
out
pop
push
shlb
or
jnp
sti
push
mov
xchg
popf
jp
test
sbbl
mov
ficoms
sahf
jo
jb
test
dec
pop
xchg
in
push
sub
repz
fisubrl
loope
test
loop
js
fs
pop
jmp
add
xchg
out
in
dec
out
and
inc
xlat
sarl
mov
adc
js
jno
mov
mov
adc
inc
jmp
mov
inc
in
hlt
mov
pop
sub
xchg
add
add
mov
jge
aam
push
mov
pop
lcall
cmp
sahf
jecxz
sbbl
push
leave
lea
sti
pop
int
fisubrl
ret
lret
xchg
loop
mov
ss
ja,pt
mov
arpl
inc
or
fisubs
cltd
xor
mov
mov
fs
cmp
mov
cwtl
or
imul
mov
mov
mov
test
outsl
subb
jns
shr
pop
and
ret
cmp
imul
xchg
pop
test
leave
call
mov
xchg
add
pop
mulb
call
bound
sbb
nop
leave
and
add
mov
ljmp
rclb
xor
ret
sbbb
movswl
stc
push
mov
lods
test
test
movsl
push
testl
test
mov
cli
push
cli
push
gs
jp
sarb
xor
inc
cmc
mov
and
jne
leave
cmc
arpl
jbe
scas
cmc
outsl
insl
push
decl
inc
jb
mov
mov
insb
push
lcall
mov
lods
pop
jns
or
gs
popf
mov
jne
sbb
popl
mov
aam
inc
dec
fwait
dec
fs
and
cmp
inc
add
int3
sbb
xchg
push
into
push
mov
mov
dec
imull
xchg
sahf
fildll
mov
pop
iret
test
adc
ret
push
cwtl
push
fwait
loop
cmp
icebp
test
add
or
jae
sub
les
int
adc
push
and
mov
out
add
ljmp
into
loop
mov
mov
xor
iret
orl
adc
push
fs
push
std
int3
mov
outsl
or
ljmp
imul
sbb
jp
mov
push
ret
jae
lret
test
outsb
or
jmp
dec
movsl
and
repz
mov
test
je
in
insl
out
cli
jne
mov
add
or
ret
xor
fidivs
xchg
push
nop
sahf
jmp
or
dec
push
pop
sbb
xchg
ror
add
movsl
pop
jb
fdivs
cmovbe
sahf
mov
push
or
or
ret
inc
data16
orb
int3
gs
lcall
and
mov
sbb
jmp
cmp
mov
dec
je
gs
jnp
insb
lahf
imul
lds
xchg
sbb
ja
push
aad
aas
in
inc
sub
xchg
jb
inc
push
shll
stos
fcom
lahf
xchg
sub
loope
or
outsl
push
jl
jecxz
aas
sbb
repnz
adc
aam
jo
lret
xorl
cmc
into
add
std
out
int3
fwait
leave
repz
dec
lcall
mov
push
mov
das
mov
gs
rcrl
out
mov
subb
out
mov
arpl
mov
pop
ret
jp
lret
mov
jnp
push
loopne
loope
mov
mov
sbb
adc
xor
pop
fs
in
lock
test
test
in
loopne
pop
jg
xor
push
inc
mov
or
push
mov
jg,pt
lock
rcrb
scas
mov
mov
fwait
orb
daa
mov
mov
inc
xor
adc
sar
dec
xor
dec
jne
lret
clc
sti
popa
popf
jp
fld
jmp
sbb
mov
out
jno
mov
cmc
out
adc
daa
cmp
rclb
adcb
popf
xchg
movsl
test
lcall
or
sub
and
neg
sub
mov
dec
mov
nop
mov
movsl
xor
xchg
ljmp
mov
scas
scas
dec
mov
ret
mov
or
mov
std
fisttpl
or
fnsave
imul
adc
mov
pop
andl
jnp
testb
mov
xchg
mov
movb
fnstenv
aas
stc
inc
pop
gs
subb
dec
ds
sbb
adc
in
int3
arpl
in
rcrb
inc
sub
mov
mov
fimuls
push
mov
lahf
xchg
mov
popf
adc
sarb
stos
movsl
ret
or
and
repnz
jle,pn
mov
mov
ljmp
imul
movsl
inc
gs
jle
xor
sysenter
adc
pop
adc
mov
sub
xor
mov
mov
jmp
int3
addr16
lock
test
or
lea
hlt
aad
push
mov
cmp
cmp
mov
outsb
pop
fmull
push
mov
idivb
lods
cmpsl
fucomi
ss
cld
je
jmp
lret
adc
outsb
xor
mov
icebp
int3
push
js
mul
stos
xor
push
mov
dec
sbbb
xor
mov
sbb
outsb
adc
test
in
sbb
scas
into
sub
testl
xor
out
add
ja
insb
sub
push
lret
mov
lret
inc
pop
cwtl
jno
lcall
icebp
test
mov
subb
repnz
cmp
int3
xchg
dec
shll
xor
nop
lea
push
rcll
push
lret
pop
cmp
push
outsb
push
mov
addr16
jb
ret
std
pop
mov
and
cmpsl
ljmp
mov
int3
sarl
jg
mov
lods
or
dec
cltd
fsubrs
fmul
push
mull
and
mov
outsb
cmp
inc
xor
icebp
mov
mov
loop
cwtl
mov
test
int3
dec
nop
inc
mov
pushf
pusha
fdivrs
in
aam
mov
pop
mov
xchg
xor
pop
pushw
je,pn
int3
leave
sbb
push
and
jecxz
enter
loop
cmp
jl
and
inc
xlat
stos
mov
sub
data16
stc
jnp
ret
lret
arpl
mov
xchg
aad
add
jp
pop
mov
mov
cmp
add
out
pop
mov
dec
loope
xchg
or
rorb
lret
jmp
aas
mov
sbb
adc
out
fs
inc
and
out
pusha
sbb
hlt
xchg
mov
ss
dec
imul
out
mov
insb
out
pop
fisubrl
popa
pop
mov
inc
adc
cmpsl
push
pop
movsb
push
outsl
fmull
outsl
fsubrs
xlat
mov
cmpsb
mov
ret
inc
sbbl
jne
outsb
stos
popa
test
aas
repz
imul
push
xor
cmc
loopne
jle
inc
mov
movsb
test
cwtl
pop
and
aad
and
les
into
popa
int3
mov
out
in
ljmp
mov
mov
cmp
insb
jnp
mov
dec
lods
pop
mov
push
mov
jo
add
es
jmp
scas
or
inc
inc
pop
inc
mov
divb
jl
out
mov
fcomip
pop
sahf
xchg
cmpxchg
cwtl
fdivrs
jno
or
add
mov
mov
cmp
mov
sarb
inc
sarl
es
sbb
inc
cld
xor
add
sbb
inc
dec
scas
test
mov
addr16
imul
rorb
lret
insl
stos
jl
data16
adc
push
inc
imul
push
or
jno
push
ds
aas
int3
dec
mov
sub
ficompl
mov
inc
data16
pusha
jne
mov
xchg
cmp
icebp
jnp
lods
sub
mov
shr
mov
dec
cmc
orl
pop
sbb
sti
inc
stc
js
and
mov
outsb
push
xor
xor
xchg
mov
mov
es
and
jl
inc
mov
adc
jge
adc
cmp
cld
sbb
aad
clc
jnp
mov
xor
testb
aas
outsl
aam
xor
lahf
lret
lar
push
cmp
xchg
jge
sbb
or
xor
movsl
popa
jb
and
movsl
lea
lahf
in
lock
xchg
pop
lret
xchg
mov
popf
xor
adcb
cmp
pop
sub
cs
int3
jp
cmp
sbb
cmp
nop
sub
push
pop
insl
push
push
mov
test
ljmp
sub
aam
push
inc
enter
xlat
out
testl
popa
into
loop
sub
or
mov
sti
push
and
dec
cmp
mov
cli
mov
xor
push
and
clc
mov
xchg
push
addr16
mov
mov
enter
je
es
adcb
out
sti
mov
sahf
test
mov
je
unpckhps
cmp
cmpsb
test
ret
jmp
or
cmpb
pop
popa
sub
jno
cmp
movsl
mov
cmp
sbb
cmp
lock
int
lock
dec
data16
cmp
and
out
jl
push
adc
inc
push
test
cmp
mov
inc
mov
sbb
aas
pop
xor
mov
dec
enter
aas
das
ds
and
add
dec
lret
adc
repz
in
cwtl
xor
or
fistpl
inc
mov
cwtl
jnp
xchg
push
jg
fsincos
sahf
jg
jecxz
jp
fs
pop
add
std
adc
fidivrl
popa
shll
das
dec
nop
mov
push
xchg
test
and
pusha
repz
mov
or
sbb
fs
push
fstpl
push
hlt
out
and
pop
push
mov
cmp
push
and
jb
ds
jae
daa
outsl
movsl
pusha
cs
setno
lret
aaa
mov
addr16
pop
jl
cmc
sub
pop
xchg
pusha
sub
mov
shll
inc
lods
faddl
inc
out
call
imul
imulb
cmp
loope
test
enter
outsl
lods
and
shll
imul
mov
enter
aas
jmp
fbstp
lret
and
fsubr
xchg
into
xchg
jmp
jnp
cmc
cmc
in
push
test
inc
addb
cld
add
dec
fnstcw
dec
xor
pop
in
and
inc
cmovnp
or
jp
jnp
insl
mov
out
mov
pop
push
dec
xchg
mov
ficoms
repz
fisubl
jecxz
cmp
push
jnp
dec
enter
inc
mov
pop
mov
add
ficomps
xchg
and
sbb
xor
inc
mov
inc
mov
lret
cmp
jbe
loopne
xchg
cld
ror
movsl
xchg
lcall
push
mov
jne
fwait
pop
insb
add
in
ret
pop
dec
sub
aaa
pusha
fisubrl
fiadds
test
mov
mov
out
addr16
and
lock
mov
push
idivl
cmpsb
cmp
pop
mov
out
cmp
sahf
fmull
push
arpl
push
int3
imul
pop
push
or
push
adc
or
sbb
aad
mov
jmp
xchg
lret
cmp
lods
xchg
add
jae
leave
mov
inc
jg
adc
movsb
mov
js
xchg
xchg
adc
daa
xchg
clc
int
and
cs
lods
data16
adc
mov
arpl
stc
jnp
movsb
data16
xchg
ret
add
mov
jns
das
out
jp
sub
or
xchg
shll
mov
int3
and
and
icebp
mov
xchg
pop
or
pop
adc
or
pop
loopne
std
add
and
sub
mov
sti
sahf
or
fs
xor
sub
mov
cs
mov
add
jbe
fmull
scas
or
adc
jns
orl
mov
inc
pop
mov
or
aas
inc
mov
xchg
faddp
cmp
lock
xchg
xchg
adc
pop
xor
push
jl
rcll
arpl
dec
in
insl
mov
pushl
test
jne
dec
mov
adc
jbe
add
mov
pop
mov
popfw
imul
lcall
mov
imul
aaa
stos
jae
push
sarb
push
xchg
jb
sbb
jbe
add
addr16
imul
jmp
cltd
cs
int
mov
cwtl
sbbl
xlat
pusha
add
mov
mov
fbstp
mov
inc
push
sarb
xor
lret
lret
fstpt
inc
lods
cmp
inc
or
mov
jge
mov
push
out
fbstp
mov
xchg
pop
dec
popa
scas
repz
int
mov
in
add
jno
mov
sub
cmc
push
aam
sbb
adc
add
mov
add
jns
jp
addb
out
clc
dec
inc
fadds
cmp
outsb
sbb
movl
ds
pop
jp
imul
idiv
mov
sbb
cmp
rclb
ret
ja
aad
dec
mov
stos
xlat
xor
stos
sbb
push
jns
out
add
mov
mov
daa
call
xor
jmp
xchg
push
addr16
xor
jne
sub
inc
fsubrl
mov
push
arpl
sbb
jne
jo
push
mov
or
push
sbb
or
aad
mov
dec
and
mov
leave
jo
lock
aam
lods
dec
arpl
lret
movsl
aaa
fldenv
mov
inc
sbb
mov
mov
jl
daa
test
cmc
xchg
pop
movntq
out
pop
and
aad
scas
out
xor
into
cmpl
mov
cli
sarb
pop
fs
mov
pop
adc
outsb
call
loope
sahf
incb
cs
dec
es
scas
cltd
dec
insb
mov
and
stos
jecxz
mov
test
jp
mov
outsl
leave
mov
cmpsl
aaa
loope
pop
sub
pmulhuw
pop
loop
and
mov
sbb
clc
xor
jns
insb
pop
sbb
add
push
xor
xchg
ljmp
mov
jo
cmp
test
lods
sub
imul
xor
ja
push
xchg
push
pop
pop
pop
sbb
xor
dec
mov
js
call
movq
sbb
int
pop
dec
sub
mov
cld
in
outsb
xlat
jns
popf
jo
jne
repnz
stc
mov
push
lahf
sbb
sbb
cmp
adc
adc
lret
pop
test
inc
aas
lods
dec
adc
dec
jnp
or
loope
cli
xor
bound
pop
loope
shl
cwtl
cltd
sbb
mov
or
iret
shrb
sahf
loop
stc
sbb
frstor
xchg
mov
scas
and
or
cmp
daa
xchg
fnstsw
in
and
xor
int
pop
xchg
adc
fsubrp
mov
stos
lahf
in
addb
or
aam
xchg
add
jecxz
push
and
mov
inc
cs
and
xlat
push
dec
pop
imul
std
cmc
lret
xchg
subb
das
outsl
es
aas
movl
inc
or
fnstenv
add
fmull
push
inc
push
sbb
aad
pop
mov
cmpsl
inc
mov
jb
negl
sti
sub
out
mov
mov
movsl
int3
cltd
mov
adc
sub
aas
lahf
cld
outsl
adc
rsm
and
adc
sub
imull
sbb
ds
insl
adc
in
stc
cwtl
mov
jmp
adcl
cmpsb
int3
out
mov
xchg
pop
stc
add
std
cmp
in
xchg
rcrl
sbb
aaa
nop
vcvtsi2ssl
cltd
add
je
stos
gs
xor
mov
mov
sbb
les
jno
rorl
insb
sbb
xchg
add
mov
add
dec
pop
mov
daa
addr16
xchg
popa
cmp
rcrb
sub
mov
cmpsl
in
ret
iret
popf
or
mov
pop
insl
cmp
int3
xor
adc
lods
sub
fstpt
jnp
ja
mov
sub
mov
scas
jns
int3
sub
adc
or
adc
sbb
pop
sbb
ja
mov
enter
cmpsl
and
lods
call
inc
fidivrs
stos
mov
cld
iret
dec
xchg
movsb
in
out
pop
mov
in
sbb
jle
mov
enter
pushf
sub
flds
loope
push
dec
push
cmp
lods
fsubs
cmp
std
mov
sbb
sbb
adc
mov
adcb
ror
add
lret
add
imul
in
das
adc
sub
into
and
mov
pop
mov
mov
pop
das
rcrl
lods
fcmovu
popf
inc
mov
pop
shr
lods
mov
mov
adc
test
jle
mov
repnz
dec
mov
mov
sub
in
push
cmp
add
loop
push
sti
add
xchg
mov
inc
mov
pushf
scas
fldl2e
insl
in
add
call
cmp
ffreep
pop
push
jecxz
sar
in
xlat
int
xor
cli
mov
cli
movsl
sub
ds
lret
mov
loopne
ret
push
sahf
jns
test
int
addr16
push
xor
add
cmc
scas
fiaddl
add
sub
add
jno
add
add
and
jl
jb,pt
lods
int
jae
movsl
aas
and
xchg
mov
iret
adc
and
mov
clc
mov
xor
idivl
sbb
lods
inc
sbb
cmpl
pop
mov
xor
xor
sub
sub
fistps
clc
ret
shlb
daa
icebp
mov
adc
jg
mov
add
syscall
and
sub
test
mov
dec
inc
pop
pop
or
mov
jo
adcl
adc
push
pop
push
rclb
inc
adc
cltd
inc
mov
test
test
rcrl
xchg
push
je
out
add
subl
adc
mov
mov
adc
jns
int
cmp
stos
and
subb
push
je,pn
pop
mov
xabort
iret
mov
lcall
and
push
adc
push
pop
mov
xlat
pop
imul
loopne
jae
movsb
sbbl
icebp
cmp
sahf
repz
push
les
dec
ljmp
cmp
push
inc
aad
loope
or
push
push
xchg
sbb
or
mov
stos
lods
fldcw
or
adc
inc
adc
outsb
cmpsb
or
aad
lea
shlb
fs
cmpsl
js
pop
push
insb
sub
lahf
aad
test
mov
pop
pusha
jbe
cmc
enter
or
repnz
mov
pushl
sub
cmp
lahf
testl
int
xchg
sbb
mov
fdivl
push
or
test
iret
repnz
push
adc
mov
sub
and
fucomi
push
xor
push
xchg
test
fcompl
pop
dec
xor
enter
and
sbb
insl
jo
clc
pop
add
jns
push
lds
cmpsl
je
push
mov
inc
xor
scas
ffree
jp
mov
mov
or
push
leave
dec
popa
lcall
orb
and
pop
mov
push
cwtl
adc
movsb
dec
mov
in
lods
mov
push
add
fdivl
popf
cs
mov
aas
push
xchg
fdiv
in
das
es
pop
sub
iret
cmp
xor
sahf
inc
add
imulb
jbe
popf
popa
or
call
dec
xor
mov
sbb
ret
jle
addl
jo
popl
push
scas
movsb
cmpsb
stc
stos
xchg
fmull
in
test
loopne
jp
or
pop
divl
jp
adc
xchg
cmp
xchg
daa
orb
mov
push
test
mov
add
xor
xor
push
popf
insb
lahf
andl
mov
adc
adc
push
sbb
mov
ja
xchg
pop
mov
pop
repz
filds
jecxz
dec
test
mov
dec
ficomps
and
orb
pop
dec
rcrb
insb
cltd
ret
scas
stos
les
in
dec
pop
pop
push
mov
fisttpll
test
and
in
jbe
inc
shrl
out
adc
or
inc
push
pop
cmpsb
mov
jl
mov
mov
sahf
lock
paddb
fidivl
jle
mov
mov
aad
daa
inc
lock
dec
mov
push
jp
call
mov
pop
sub
xchg
js
xor
xor
repz
cwtl
in
je
pop
lods
sbb
or
jo
lds
mov
xchg
inc
push
mov
mov
push
adc
xor
mov
in
dec
punpckhwd
pushf
jae
mov
ret
stos
test
jmp
int
addr16
imul
stos
dec
out
adc
fstl
mov
pop
dec
test
out
xchg
or
xlat
sarl
shr
lret
ljmp
std
push
xlat
stc
pop
je
in
push
xor
pop
sub
sti
cmp
jmp
and
repnz
lods
stc
xchg
add
mov
fcompl
mov
aas
mov
jg
test
jne
iret
cwtl
cwtl
add
lret
push
inc
lock
test
ret
ss
sbb
rcll
sbb
cli
xor
jne
jae
xor
mov
mov
mov
pusha
xor
jge
fcomps
push
pop
xchg
test
jge
cli
pop
xchg
js
popf
inc
inc
and
add
cmp
inc
sbb
push
idiv
xchg
popa
je
pop
movsl
pushf
idivl
and
mov
insl
lods
and
xor
jecxz
int3
sub
xor
add
pop
mov
loop
dec
aad
and
je
and
sbb
lods
in
xchg
fidivl
repnz
pushf
pushf
inc
cmpsl
in
mov
cld
cmp
jb
pop
int
lcall
push
pop
testl
mov
insb
aas
rcrl
cmp
push
sbb
sub
ret
das
scas
sbb
and
fisubrs
int
push
into
xchg
shl
add
popf
ja
dec
xchg
popa
and
stos
push
inc
sub
dec
sbb
out
sub
fs
cmpsb
out
insl
into
pop
jno
imul
mov
dec
mov
lock
andl
cmp
aas
outsb
push
add
lods
ss
mov
clc
jnp
jnp
addb
in
dec
lods
dec
adc
ja
rcll
imul
jno
dec
enter
inc
lret
jns
testl
jns
and
test
mov
xor
and
pop
stos
stc
js
clc
or
mov
mov
fmulp
xchg
int3
testb
xchg
sub
cs
ret
inc
popf
cmp
lret
mov
cli
in
jge
or
push
xchg
add
xchg
push
outsb
cmp
fcomps
scas
mov
fldt
and
sarb
xchg
fnstcw
sbb
mov
cmp
sbb
xor
add
hlt
pop
push
dec
push
int3
sub
or
sub
pop
push
xchg
sahf
jg
lods
shlb
lods
les
jo
fstps
scas
enter
sti
or
push
je
negl
push
and
mov
stos
lock
cmpsl
mov
cmc
jb
jle
push
sbb
shr
mov
xchg
mov
adc
nop
mov
loop
push
subl
add
jg
dec
pop
into
sbb
adc
clc
mov
mov
sbb
stc
cmp
add
push
pop
sbb
loope
ds
dec
in
aam
or
mov
adc
test
shlb
add
cmp
xor
inc
daa
lock
mov
sub
mov
adc
xor
jnp
ret
ds
aas
jno
pop
cmpsb
mov
out
sbb
mov
push
js
insl
hlt
ret
inc
mov
fisubrs
jbe
pop
jge
pushf
leave
xor
mov
xchg
mov
ja
and
aad
adc
aad
or
mov
push
pop
aas
hlt
out
jp
xchg
xchg
rcll
arpl
jae
xchg
loope
and
mov
push
mov
rolb
xor
and
push
dec
push
mov
xor
push
aaa
mov
addr16
mov
mov
inc
aam
rolb
pop
mov
je
push
subb
shr
sti
test
add
stos
fdiv
sbb
inc
push
add
mov
mov
mov
insl
push
ljmp
rcrl
mov
xorl
inc
adc
cmp
xchg
xor
ja
push
jle
pop
pusha
mov
mov
and
xchg
dec
out
add
repnz
push
mov
les
push
xor
loop
cli
cmp
sarl
loop
jo
inc
xor
ss
xchg
xchg
push
and
clc
mov
xor
cmp
jno
mov
mov
jae
adc
adc
cmp
and
repnz
cmp
pusha
addb
pop
je
imul
addl
mov
mov
mov
and
push
arpl
dec
mov
mov
xchg
and
xor
jae
js
pop
test
repz
aam
idivb
xlat
es
popf
or
or
idivb
adc
xor
cwtl
jnp
imul
pop
aaa
sbb
sbb
jne
imul
xchg
leave
in
xor
hlt
xchg
jge
fstpt
sbb
nop
mov
nop
cld
cmpsl
cli
in
xchg
pop
das
stos
xchg
inc
jge
or
mov
cld
sub
mov
add
xchg
cmpsb
push
lret
mov
xchg
fs
adc
jne
push
sbb
xor
fs
mov
or
dec
push
adc
es
shrl
cltd
or
jmp
lahf
xchg
jle
inc
outsb
jmp
mov
stos
cmpxchg
cli
ffree
mov
call
pop
adc
int
or
or
cmp
in
sti
ret
test
xchg
sti
idiv
and
xor
int3
test
mov
mov
cmp
pushf
data16
pop
es
push
mov
outsl
pusha
pop
sahf
std
or
jbe
out
and
clc
mov
mov
mov
sbb
and
repz
loope
xor
pop
popf
sub
push
or
jno
dec
mov
and
inc
adc
mov
mov
loop
call
cmc
sub
sti
xor
cwtl
cwtl
jp
or
and
lcall
sub
out
mov
jl
mov
mov
jne
loop
xor
xor
mov
lock
add
das
mov
sti
and
cmpsb
inc
jno
xor
sbb
cmp
in
pop
in
popa
pop
pop
and
rep
pop
ds
sub
mov
nop
sbb
xor
adc
xchg
gs
jmp
out
jl
push
xchg
or
arpl
data16
pop
shr
in
aaa
addr16
into
jg
add
xchg
arpl
out
cmp
ds
adc
mov
lahf
arpl
stos
cmp
jmp
jp
pushf
inc
adc
bound
fisttps
push
add
push
pop
pop
inc
mov
fsts
dec
iret
mov
lea
stos
sahf
popf
nop
lcall
push
inc
sbb
nop
xchg
cmp
loopne
aas
out
adc
fmulp
dec
xor
or
sub
xchg
mov
xchg
mov
pop
pop
addr16
adc
xchg
scas
sbb
dec
in
fldl
mov
or
cmc
fidivrl
mov
cmp
adc
push
mov
xchg
jbe
sbb
cmp
out
mov
imulb
jp
pop
xor
push
inc
daa
mov
enter
cmpsl
daa
and
add
dec
ljmp
pop
out
jno
test
hlt
in
xor
sub
outsb
or
sahf
outsb
dec
lods
fcomip
sub
vpmovmskb
andl
fld
cld
and
aas
aas
inc
mov
cs
fsubrl
add
jg
loope
xor
stc
or
jge
add
jne
pop
mov
add
lret
sbb
inc
scas
sahf
xor
int3
test
inc
jle
push
jmp
cs
lret
out
jp
fadds
push
push
pop
add
add
cmpsl
rolb
movsb
sub
fwait
mov
mov
jp
mov
dec
jge
cmp
subb
ret
cmpsl
jge
das
test
mov
stos
imul
jno
xchg
xor
cmp
cmp
lcall
ljmp
out
xor
push
data16
sub
and
jle
repz
je
and
cmpsb
cli
xchg
adc
lret
xchg
mov
into
mov
mov
fildl
xorb
fcomps
pop
je
cli
pop
cld
pusha
jl
aad
jo
in
jne
pusha
in
out
xchg
stos
ret
out
lock
push
sub
lock
sbb
je
cmp
mov
push
cmp
pop
imulb
dec
cli
and
scas
and
push
loop
lock
sar
xchg
push
mov
test
test
push
jne
jmp
lods
fwait
xlat
mov
outsb
cmp
sbbb
jo
sbb
cmpsb
inc
cmp
pop
pop
inc
jo
push
pop
xor
mov
mov
jecxz
les
lock
or
mov
xchg
pop
mov
andb
jmp
lret
fildl
stos
dec
sub
dec
xchg
mov
rcl
and
dec
pop
jo
jne
inc
pushl
cli
scas
pop
jo
imul
mov
sbb
in
sarb
jge
adc
adcb
dec
loope
mov
fdivs
stc
aaa
mov
mov
pop
decb
jmp
imul
mov
scas
mov
jae
nop
test
daa
in
dec
cmp
cmp
push
xorl
jno
mov
lds
dec
and
daa
test
je
hlt
jbe
adc
or
sbbl
sahf
xchg
push
lahf
test
pop
ret
cmpsl
adc
jae
and
add
cs
out
in
call
and
lret
push
xor
iret
out
push
in
je
loop
mov
mov
xchg
inc
mov
push
xlat
fmull
jecxz
testl
int3
out
or
idivb
xchg
aaa
test
pop
fmuls
nop
ss
movsl
sub
and
jne
mov
lock
in
xchg
dec
xor
js
in
mov
lret
in
popf
dec
add
mov
dec
test
jnp
sub
mov
push
push
and
jecxz
add
jg
pop
pop
jge
ja
dec
and
lahf
and
leave
adc
pop
aaa
sarb
adc
cwtl
add
sub
shlb
sub
xchg
outsb
jb
inc
inc
aas
push
sbb
fnop
and
shlb
mov
add
test
js
jbe
ret
adc
xchg
pop
movsl
push
imul
mov
sbb
add
sbb
cwtl
iret
xchg
push
inc
cmpsl
inc
les
inc
add
fsubl
add
xchg
ljmp
cwtl
push
sti
xor
mov
cmpsb
movsb
jae
test
inc
test
mov
cmc
test
out
daa
sbb
mov
jl
or
jge
mov
cmp
pop
cwtl
sub
ss
mov
movsb
gs
xchg
test
icebp
out
and
push
ret
dec
shr
pushf
push
or
cli
inc
fstps
and
pop
sbb
mov
dec
test
pop
xchg
xchg
add
adc
or
mov
mov
lea
gs
lods
hlt
dec
repz
subl
pop
pop
jnp
sbb
js
mov
dec
popa
adc
mov
rcrb
pop
add
sbb
daa
jecxz
call
jae
sahf
repnz
inc
push
add
adc
mov
fwait
lret
pop
stos
pop
fistl
jo
sub
jg
mov
lea
movzwl
cld
add
aas
ljmp
xor
mov
das
push
aad
push
decl
pop
mov
in
cmpl
lret
test
scas
mov
adc
arpl
aaa
push
fsubl
outsl
cld
mov
divb
sbb
and
out
aaa
xlat
push
pop
mov
jbe
pop
test
inc
adc
int3
xlat
xchg
out
xor
insb
fbld
jge
sbb
push
and
mov
stc
arpl
repz
cmp
push
fstpl
ret
mov
add
pop
lods
out
aas
mov
push
push
mov
xchg
sub
out
mov
sbb
std
leave
out
fisubs
sub
mov
mov
inc
inc
xor
add
notrack
push
push
mov
in
out
gs
jnp
mov
and
mov
repz
call
inc
push
push
hlt
mov
inc
adc
clc
loopne
repz
cwtl
or
iret
gs
push
jae
xchg
xchg
arpl
fnop
xor
idivl
and
lds
mov
cmp
loope
dec
push
lods
jae
es
push
into
sub
or
lret
pop
aad
mov
inc
xlat
repz
cs
subl
push
xchg
insb
pop
mov
push
mov
mov
test
add
lcall
mov
loopne
rcl
add
ret
cld
enter
flds
stos
push
sti
pop
xor
mov
adc
and
psadbw
arpl
sbbb
icebp
push
mov
push
fiadds
jge
and
jmp
aam
mov
das
cmp
ds
or
cltd
dec
mov
aad
push
in
adc
push
jp
pop
jecxz
ret
fists
jne
ds
sub
jae
scas
aas
fimull
nop
xor
stc
call
and
pop
in
jp
mov
call
adc
add
cld
sbbl
scas
jp
jo
ret
jge
mov
xchg
xor
dec
sub
sbb
mov
or
imulb
ja
and
sub
mov
jecxz
mov
fildl
outsl
sbbb
adc
xor
shll
inc
sbb
movsb
sbb
jbe
jo
out
sbb
add
jge
add
and
mov
clc
outsb
add
loop
sub
add
bound
test
push
mov
pop
pop
push
fsubs
popf
fimull
pop
fldcw
sub
adc
pop
sti
cli
mov
mov
mov
xor
sub
add
mov
out
xor
lret
fildl
loopne
fwait
adc
lret
aaa
jae
xchg
adc
imul
int
ljmp
xchg
sbb
int3
mov
bound
mov
ljmp
hlt
inc
jae
xchg
pop
psubq
lods
pop
cmpsb
inc
push
fistl
in
cmp
dec
sbb
negb
lahf
sti
dec
out
gs
xor
and
adc
cmpsl
loopne
and
orb
add
mov
mov
sub
dec
pushf
xlat
or
pop
rorb
push
xchg
mov
lods
or
sbb
cmp
mov
iret
jle
in
sbb
es
lock
lret
gs
sar
lds
test
mov
add
add
mov
jge
cmp
add
aam
adcl
cmp
mov
sbb
vpsraw
fsubl
mov
pop
and
xor
das
cmp
mov
arpl
push
icebp
jecxz
and
sub
xor
dec
mov
cmp
pop
loopne
aam
and
loopne
sub
lret
mov
dec
sbb
adc
and
out
lods
push
dec
std
xlat
mov
dec
dec
mov
js
jmp
dec
push
mov
icebp
out
mov
xchg
xor
adc
inc
dec
xor
test
cmp
adc
test
or
jmp
xchg
mov
jg
sub
arpl
shlb
xchg
fbld
jp
mov
jecxz
movsl
sub
js
aaa
enter
sbb
mov
add
sarl
shlb
dec
fs
hlt
push
push
xchg
ljmp
inc
hlt
in
addl
or
ss
mov
icebp
cmp
movsl
stos
std
jnp
insl
inc
mov
in
iret
adc
out
aam
pop
or
mov
pop
jl
jae
cld
aad
sub
lods
mov
sub
sbb
outsb
xor
mov
push
and
or
idivb
nop
out
mov
jecxz
pop
adc
xchg
imul
mov
sahf
jne
cmp
imul
jno
add
or
add
sub
pop
cli
add
adc
jp
ficoml
xchg
lock
xchg
repnz
push
adc
scas
loopne
mov
jns
xchg
dec
mov
sub
icebp
jmp
xchg
jno
mov
fidivrs
lea
lods
xor
shl
dec
fdivs
push
outsb
push
jne
pop
and
cmp
popf
imul
mov
loop
lret
push
sbb
movsb
movsl
or
inc
lods
inc
lds
xchg
lret
push
jnp
sbb
sub
daa
sbb
sbb
imul
mov
push
pop
out
lock
lahf
std
pop
adc
or
jg
mov
mov
insl
fsub
add
xor
push
push
mov
pop
and
cmpsl
dec
ja
mov
ss
adc
dec
push
pop
shll
pop
cmpb
mov
dec
push
orl
mov
cwtl
push
sbb
mov
pop
mov
ljmp
add
cltd
xchg
mov
insb
xchg
push
pusha
xchg
xor
cltd
sbb
jmp
into
and
ret
mov
stos
inc
xchg
inc
xor
sbb
xchg
cmpsl
cmpsb
jns
sbb
lret
and
dec
sub
call
fldenv
ja
dec
cli
stc
fsub
jp
gs
mov
dec
aad
mov
adc
ret
repnz
mov
iret
in
ret
sub
dec
jecxz
stc
out
movl
and
pop
shufps
cmp
popf
sbb
in
xor
mov
dec
jne
shrb
loopne
mov
roll
lock
xor
push
pop
and
mov
fsubl
mov
popf
out
lock
movsl
xchg
test
je
loope
xchg
inc
push
xchg
xchg
dec
mov
fidivs
mov
arpl
ds
lods
cmp
dec
add
les
movsb
mov
shrl
mov
sub
out
je
movsb
addr16
call
testl
aaa
xor
dec
js
adc
imul
cwtl
pushf
jae
jmp
fidivl
fs
and
mov
or
push
lods
ds
jg
push
out
inc
mov
inc
or
in
es
xchg
sbbb
es
mov
inc
mov
sbb
lret
xor
arpl
inc
lret
mov
dec
sbb
push
and
int3
inc
cwtl
gs
cmpsb
mov
jg
out
ds
ss
mov
les
jecxz
xor
cmp
pop
sbb
jge
fimuls
bswap
jnp
inc
out
add
cmc
gs
jno
and
cmc
out
cmpsb
xor
dec
cmp
lea
mov
mov
sarl
cmc
mov
shl
inc
call
icebp
pop
leave
xchg
pop
enter
jg
imul
dec
inc
mov
mov
rclb
mov
imul
jmp
pop
jnp
sbb
xlat
xor
cld
dec
push
xlat
clc
mov
mov
data16
js
movl
sub
and
cmp
inc
adc
enter
cmp
test
xchg
adc
aam
xor
cld
jl
jbe
mov
out
movsb
mov
mov
jnp
jns
xchg
jo
lods
sub
lods
mov
jns
cmp
imul
adc
jp
mov
dec
jns
xor
or
jnp
out
mov
arpl
mov
cltd
pusha
pop
aas
fnstenv
mov
sbb
sbb
jnp
clc
push
stos
clc
clc
mov
scas
sub
enter
jnp
dec
add
add
aam
push
sub
cmp
pop
adc
push
cli
bound
add
sbb
sub
cltd
daa
pop
outsl
outsb
mov
ljmp
mov
iret
je
inc
cmp
and
add
int
inc
sarb
pop
mov
ljmp
jb
lret
push
clc
adc
xchg
and
pop
mov
inc
aas
jg
call
and
sbbb
out
movsl
push
subl
fs
pop
pop
and
daa
push
fs
aam
xchg
cmp
test
hlt
sub
aad
mov
mov
and
xchg
mov
and
sub
fstpl
push
inc
das
add
outsw
imul
lods
pop
neg
lds
jae
push
sub
and
lret
insb
mov
out
cmp
cld
lar
xchg
dec
test
in
push
pop
les
fsubp
pop
into
mov
mov
sub
xchg
addr16
push
xor
cmp
push
inc
ret
sub
fmuls
cmp
lods
or
and
pop
cmc
lcall
cltd
loopne
mov
negl
cmpsl
or
inc
sbb
fcoms
out
sahf
cmpsb
add
lcall
dec
ret
inc
push
and
rcrl
mov
jecxz
dec
push
inc
dec
sbb
fcompl
pop
pusha
mov
inc
subl
mov
ss
in
inc
xorl
push
xlat
inc
mov
add
cltd
cmpsl
test
pop
lds
push
not
mov
sub
inc
mov
mov
jp
mov
rcr
vmread
scas
mov
mov
rcrb
lock
mov
daa
push
fcompl
lret
jnp
push
jmp
push
adc
xchg
mov
out
or
call
ficoml
mov
add
shrl
push
das
or
loopne
xchg
sub
mov
fwait
adc
imul
out
out
in
aaa
rcrl
dec
xchg
mov
mov
les
outsl
fstps
xor
sub
xor
dec
inc
add
mov
rclb
xlat
cmpsb
push
pop
add
insl
or
insl
adc
fistl
call
mov
dec
sub
in
mov
adc
je
push
fists
adcb
jae
mov
mov
push
sbb
repnz
arpl
popf
and
lret
dec
mov
in
xchg
xchg
test
add
test
mov
ljmp
lret
push
mov
mov
sub
lcall
inc
fdivrs
or
inc
ret
inc
cmc
out
into
int3
int
pop
repz
fwait
jne
pop
jns
in
mov
adc
jmp
inc
or
sub
adc
lds
xor
movb
sbb
es
pop
jae
insl
call
adc
cmpsb
jl
xchg
iret
push
xchg
mov
popa
outsl
mov
movsb
clc
fidivrl
mov
iret
push
sarl
cmc
xor
and
jmp
dec
jbe
mov
fsts
outsl
inc
lahf
mov
add
mov
call
leave
ja
test
movsl
cmp
sub
jno
push
dec
push
jle
das
pushf
mov
push
or
pop
mov
push
mov
fs
inc
test
pop
cwtl
or
jno
fdivl
dec
and
inc
mov
jnp
sub
mov
push
jg
xchg
fucomip
out
or
push
leave
push
jmp
dec
mov
repz
ds
adc
cltd
xlat
aad
movsb
movsb
xor
imul
fmuls
mov
add
add
pop
jle
xchg
imul
and
pop
fcompl
or
mov
xchg
nop
insb
and
adc
xchg
mov
es
imul
repz
lahf
sub
mov
inc
dec
cli
mov
push
add
inc
pushf
shl
addb
aam
loop
inc
leave
popf
xchg
rorl
inc
dec
sbb
inc
iret
cwtl
inc
ret
and
adc
xor
aaa
mov
jl
dec
push
mov
mov
or
add
mov
add
jmp
push
xor
xchg
xor
in
fisttps
jle
mov
mov
and
jle
repnz
mov
xchg
adc
fldcw
push
leave
xchg
push
cmpl
adc
mov
fcmovu
scas
inc
mov
popf
in
adc
or
cwtl
mov
cmpsl
adc
shrl
repnz
ljmp
rcrb
xchg
xchg
std
xchg
int3
add
or
xor
or
scas
add
lock
xor
insl
hlt
sub
push
es
jmp
es
pushf
ds
cmp
push
and
sub
push
mov
cmp
sti
imul
pop
dec
and
lds
jmp
jo
mov
sub
ret
mov
inc
sahf
lods
enter
addr16
sahf
ret
mov
movsb
mov
adc
clflush
sub
jmp
daa
scas
sbb
pop
aaa
sarb
and
jo
or
imul
sbb
xor
pop
lods
fucom
jbe
dec
xor
jl
and
fcomps
cmp
in
add
decl
pusha
xchg
inc
shl
add
mov
fmull
stos
stos
jmp
jnp
sub
into
add
push
stos
xchg
ret
repnz
lahf
sub
sbb
sbb
dec
add
sub
push
and
scas
jno
ret
mov
pop
inc
lock
shlb
adc
mov
lds
mov
sub
jge
dec
adc
enter
les
pop
mov
fwait
inc
add
lea
or
pushf
in
adc
push
out
mov
adcb
repz
in
dec
in
test
in
daa
mov
xchg
test
push
addr16
xor
scas
mov
jns
cwtl
dec
ret
xchg
xchg
loop
cmc
add
repnz
push
and
jge
inc
mov
fsubrp
sub
push
test
mov
or
out
das
fucomip
movsb
shrl
aas
std
sbb
push
popa
rcl
bound
mov
cwtl
clc
shrb
sbb
mov
mov
inc
add
sahf
jmp
lahf
js
rclb
jno
push
xor
adc
rcr
movl
movsl
sub
sbb
cmp
test
mov
inc
dec
rcrb
nop
rcll
xchg
sbb
scas
jp
mov
popl
pusha
daa
popf
incb
pop
lea
fsubrs
or
loope
push
das
sbb
cwtl
pop
lock
aam
adc
mov
mov
mov
out
clc
fwait
aas
or
xchg
sbb
sbb
mov
nop
scas
lds
shrb
mov
ret
imul
js
fidivrs
push
mov
sub
fiaddl
adc
mov
or
ret
lret
repnz
jle
lcall
ret
das
subl
mov
and
cmp
or
or
aad
dec
xchg
xchg
mov
and
pop
sbb
lret
lds
mov
push
inc
int3
cmpsl
sub
or
sub
inc
dec
dec
push
out
sahf
loop
es
adc
addr16
lods
sub
lods
js
xor
push
add
lods
fst
and
mov
sub
and
loopne
inc
fadd
pop
arpl
xchg
mov
rcr
ss
push
test
jae
jmp
dec
or
pop
pop
jo
xchg
aaa
pusha
cmp
outsb
add
lds
enter
out
pop
adc
jae
push
and
push
sbb
pop
pop
rol
xchg
mov
js
popf
sbb
outsb
out
jns
aad
scas
scas
adc
call
sti
inc
dec
cmpsl
pop
lock
repz
mov
gs
push
or
xchg
mov
push
mov
ret
dec
cmp
sbb
sbb
in
lods
inc
mov
int3
inc
xor
cmp
mov
fisttpll
repz
and
jle
inc
fwait
push
std
rcrl
outsl
mov
addr16
adc
in
inc
mov
mov
jl
adc
aad
lahf
inc
push
dec
mov
pop
adc
fnstsw
aad
mov
lods
loope
nop
mov
test
mov
add
add
pop
outsl
push
or
aaa
jns
cli
mov
movntq
rolb
add
cmp
cld
jno
xchg
pop
je
rcll
fs
dec
xchg
std
jmp
mov
jne
dec
sub
push
and
lock
and
scas
faddl
into
inc
jecxz
stos
xlat
shl
mov
pusha
sahf
rclb
mov
cmp
out
das
cmpsl
in
lcall
aam
jmp
rolb
fs
jp
inc
fbstp
test
inc
dec
fists
int
jbe
push
mov
mov
orb
cmp
or
xor
xchg
dec
hlt
repz
mov
mov
cmp
and
adc
sub
or
out
jmp
ret
hlt
mov
xor
loope
mov
push
jnp
sbb
or
jge
insb
cs
loope
insb
cmpsb
dec
lret
push
or
repz
xlat
rcr
in
cld
jns
shll
mov
or
add
xchg
aam
scas
insb
pop
loop
imul
mov
add
sbb
inc
dec
iret
push
cmp
aas
aam
scas
sbb
xor
push
or
cmp
lret
mov
sub
int3
jle
insl
out
push
fdivr
incb
add
negl
outsb
sbb
lret
lea
sbbb
xchg
es
test
les
xchg
adc
movsb
lahf
sub
mov
mov
mov
mov
scas
add
jge
sbbl
outsb
test
cmp
fcoml
jmp
jecxz
repnz
mov
sti
adc
mov
cmp
inc
out
cmc
out
pop
fmulp
sbb
mov
jae
shll
jo
and
mov
inc
jns
push
inc
aad
mov
test
xorl
jmp
stos
xchg
fsub
lahf
jl
out
test
xor
add
lods
insl
popf
inc
ljmp
aad
pusha
or
jge
outsl
mov
ljmp
sbb
dec
adc
js
mov
cmp
mov
vrcp14ps
daa
or
stos
ss
cli
subb
fisubs
or
repnz
sbb
cli
fcoms
repnz
leave
outsl
pop
aas
sti
decb
xor
testl
loop
fildll
xchg
cmp
pushl
ret
pop
jnp
mov
jae
jne
clc
movsb
fists
inc
sub
jge
inc
lods
ret
or
cmp
or
rorb
xchg
ds
lret
mov
inc
fsubrs
inc
jbe
lret
push
mov
adc
fs
loop
cmp
rcll
loopne
mov
aas
mov
je
rolb
sarl
hlt
xor
rolb
jmp
push
cmp
test
inc
dec
pop
loop
loopew
iret
movsl
stc
jmp
push
mov
popf
into
insb
and
add
and
cmp
cs
in
pop
xchg
scas
mov
aaa
inc
mov
lea
pop
lret
aaa
insb
and
sbb
adc
pop
xor
and
test
fbld
sub
mov
bound
in
cld
mov
sub
mov
mov
mov
add
loop
jae
pusha
pop
and
sub
adc
into
ret
pushl
cmp
movsl
xor
jbe
push
mov
call
pop
dec
cmp
dec
xor
or
sahf
mov
mov
inc
mov
sbb
adc
push
jecxz
mov
jg
xchg
enter
jge
add
cli
inc
cltd
mov
scas
mov
pop
or
xchg
xchg
testb
out
je
shlb
xchg
in
jbe
or
leave
insl
mov
pop
pop
imul
test
and
enter
ja
gs
arpl
dec
fdivl
xor
jg
xor
add
sub
mov
mov
or
add
jae
xchg
outsl
icebp
push
mov
fwait
push
jbe
imul
jo
sbb
outsl
jge
pop
pop
sub
cmpsb
inc
imul
inc
mov
push
jne
movsb
test
addl
cmpsl
outsl
inc
ficoms
xchg
inc
fnstcw
dec
mov
cltd
sbb
out
xor
jl
lds
dec
pop
push
sub
and
push
mov
and
stc
lret
repnz
and
push
push
jg
add
imul
add
addb
and
mov
sub
xchg
mov
iret
adcl
movl
in
outsl
icebp
sbb
xor
cmp
sub
out
and
push
fwait
xchg
sbbb
inc
mov
loop
stos
iret
mov
fmulp
jnp
sub
xlat
ds
mov
adc
test
mov
leave
pop
mov
dec
mov
arpl
mov
and
inc
push
sbb
clc
jb
sub
sbb
fidivl
imulb
fs
jnp
or
subb
and
dec
jge
xchg
mov
vzeroall
xorl
out
mov
stos
pusha
push
sbb
js
sbb
shlb
push
popl
adc
xchg
orb
popf
jae
jae
jmp
xor
enter
sbb
ds
das
lea
inc
jmp
mov
add
shl
repnz
sub
mov
int
cmp
inc
mov
insl
std
dec
cmp
or
loopne
dec
or
aaa
cmp
mov
rcrl
out
pusha
in
test
mov
mov
push
pusha
sub
repnz
mov
cmp
xor
adc
jbe
add
mov
call
ss
repnz
jb
jp
loopne
ss
in
dec
scas
or
mov
jge
lods
dec
orb
mov
jbe
adc
dec
dec
mov
push
mov
pop
xor
outsl
movb
repz
sub
mov
mov
in
pop
push
pop
rclb
test
fprem
outsb
mov
jecxz
loope
xchg
push
and
dec
add
inc
ja
mov
imul
xor
add
loop
xchg
loopne
lahf
ja
jb
stos
aad
inc
imul
xchg
in
into
stos
xchg
cmp
add
fucomi
mov
fimuls
jl
inc
cwtl
movsl
push
ret
movsl
add
xchg
and
pusha
jg
sarl
inc
xchg
push
scas
sbb
je
popf
js
adc
orw
xor
mov
adc
ret
mov
outsl
subb
sub
cmp
sbb
push
jne
test
imul
sub
mov
stos
lahf
fs
add
mov
mov
push
cmc
or
or
and
dec
test
filds
mov
sbb
inc
shlb
sbb
movsb
dec
mov
sbb
push
inc
ret
push
loop
aad
aam
cmp
dec
mov
mov
mov
rol
jge
pop
xchg
out
ss
fidivrl
leave
pop
andb
scas
mov
jbe
jg
jns
pusha
pop
fcoml
sub
movsb
pop
jl
mov
out
mov
aam
mov
data16
ljmp
pop
mov
aad
shl
out
cs
in
repz
andl
cmp
dec
loop
sbb
mov
ret
sub
cs
out
pop
lret
mov
es
icebp
and
push
and
jecxz
cmpsb
rcrb
xchg
cltd
dec
scas
or
add
jge
sub
jecxz
les
in
or
mov
andb
cmp
inc
lds
jl
movsb
in
adc
xor
loopne
xchg
lods
push
lods
ret
push
scas
imul
iret
stos
xlat
xchg
cld
iret
call
push
orl
xchg
xlat
notl
jle
int
lds
xor
ja
cmp
fwait
adc
je
sbb
imul
cmp
lahf
les
xchg
mov
loope
addr16
mov
in
sbb
jecxz
std
xor
aad
cmp
add
into
cmpsl
rorb
jno
or
push
mov
pop
dec
push
in
xlat
pop
pusha
jae
sub
add
call
mov
in
loop
xchg
mov
gs
insb
aas
nop
or
stos
scas
mov
das
jg
dec
inc
aaa
mov
or
or
inc
mov
push
stc
fisubrs
pop
xor
add
mov
pop
jge
ret
pop
mov
jp
loope
xor
mov
es
cmp
sahf
push
cwtl
jg
cmp
pop
add
aam
leave
fisubrs
jne
flds
add
xchg
jecxz
loope
dec
repz
shlb
dec
shrl
pop
sub
mov
xchg
inc
dec
aas
xchg
add
inc
mov
mov
les
iret
mov
mov
pop
jnp
jmp
lods
dec
cmp
dec
inc
adc
lock
and
and
xlat
sub
test
sub
adc
adc
mov
push
bound
test
push
pop
sahf
or
mov
dec
pop
aam
jnp
mov
shlb
jae
ret
adc
arpl
push
mov
fwait
vpsubw
jne
xor
dec
stos
imul
push
adc
sti
jg
out
push
xchg
stc
insb
add
jbe
subb
and
pop
or
cmp
and
and
xor
ss
push
ss
sub
aaa
mov
xor
push
mov
and
mov
subl
bnd
rolb
repz
xchg
adc
push
xor
mov
test
pusha
adc
sbb
adcl
cld
sub
push
cmpl
dec
adc
stc
fmulp
add
ficoml
mov
test
mov
lcall
mov
cmp
mov
mov
sub
test
hlt
fsub
shlb
lahf
clc
push
fwait
js
cmpsl
jle
jecxz
testl
and
mov
xchg
inc
popa
hlt
dec
repz
leave
rcll
in
sbb
mov
jb
and
xor
mov
mov
mov
ljmp
jmp
xlat
stos
incb
mov
mov
addl
orl
cltd
pushf
inc
pop
js
pop
int
mov
pop
repnz
andb
ljmp
mov
fwait
jo
lret
dec
push
lret
hlt
cwtl
das
and
sbbl
ja
stc
call
icebp
adc
mulb
insb
test
pop
pop
pop
mov
les
sub
outsb
lret
xor
push
movsb
aaa
pusha
shlb
mov
jb
test
push
pop
lahf
mov
scas
xchg
ret
mov
rcll
push
jbe
es
jl
idiv
dec
mov
jb
sbb
push
test
lods
sbbl
pushf
mov
xchg
xchg
mov
mov
or
enter
cmp
inc
xor
dec
shlb
ja
or
xor
insb
xor
cvtps2pd
jl
add
scas
cmp
xchg
add
add
daa
mov
fcmovnb
scas
xor
or
insb
shll
int3
cmp
pop
mov
mov
jecxz
jmp
ds
shlb
and
xchg
js
clc
lods
mov
rorb
loopne
and
test
das
add
sbb
subb
push
inc
test
es
loop,pn
dec
mov
inc
repz
shl
sub
std
dec
loop
push
adc
cltd
sub
adc
xchg
add
jo
les
xor
fstpt
gs
insl
add
jp
test
rcrl
mov
xchg
sbb
in
les
enter
jp
xlat
xor
rcl
inc
adc
pushf
sub
loopne
cmpsb
jg
mul
stos
test
jl
jns
sbb
push
sub
cwtl
cwtl
pop
pop
xchg
neg
push
inc
or
dec
mov
mull
adc
dec
mov
xor
push
das
xchg
mov
or
pop
jns
out
mov
jp
fists
mov
movsb
cmp
or
orb
xor
cmp
cmpsl
xor
clc
jmp
divl
mov
je
mov
icebp
add
or
pop
push
test
pop
adc
inc
push
push
rcr
mov
cmpsb
aas
bound
mov
mov
test
pop
pop
mov
fmulp
xchg
jge
jo
imul
sub
mov
adc
and
ljmp
mov
push
xchg
lahf
cld
sti
xor
loope
push
into
in
rcrb
jle
cmpsl
xor
ds
mul
xchg
and
dec
scas
in
sbb
adc
ljmp
jns
ljmp
loop
pop
hlt
fwait
jp
push
insl
dec
stc
popf
jmp
cmc
out
mov
cmp
in
or
xor
adc
add
mov
lahf
clc
jne
ss
xor
imul
pushf
push
sub
ficoms
outsb
hlt
out
imul
sub
mov
cmp
sbb
dec
jecxz
imul
pop
push
sbb
icebp
pop
push
pop
cmpsb
shll
popf
xchg
cmp
pusha
jno
pop
repz
imulb
into
mov
fidivl
inc
inc
ja
push
xchg
push
and
xchg
dec
dec
andl
sahf
loop
inc
mov
inc
or
ja
cmpsl
mov
fadds
ss
clc
jns
inc
lret
cmc
hlt
sbbl
in
mov
lret
jns
adc
gs
mov
jl,pt
pop
faddp
decb
pop
cli
subb
sub
jl
lds
testb
adc
inc
xchg
jl
aad
dec
jbe
dec
cmpsl
in
mov
into
test
mov
pop
repz
fwait
pop
in
adc
nop
popa
xchg
shr
in
pop
and
fistps
fisubrl
mov
arpl
addr16
clc
jg
fstps
data16
nop
add
cmp
sti
rorb
mov
pushf
mov
jno
fwait
xchg
jp
cwtl
or
xchg
clc
jg
inc
popfw
lods
mov
fdivrl
xchg
dec
out
or
pop
mov
iret
jb
mov
cwtl
in
pop
add
mov
adc
pop
insb
xor
nop
imul
dec
idivb
in
pop
shlb
or
in
sub
push
lahf
xchg
xor
mov
das
sbb
sbb
lcall
sbb
enter
adc
imul
mov
data16
mov
mov
sub
push
mov
sub
xor
mov
jmp
push
cwtl
jb
sbb
enter
outsb
aaa
jl
push
fldenv
and
adc
call
ljmp
mov
sub
imul
or
stos
in
mov
pop
jg
jg
cmp
jno
and
jg
mov
daa
cmp
pushf
ret
push
sti
push
pop
sarl
inc
xchg
push
adc
das
push
stos
aaa
xor
mov
pop
divb
jmp
shll
in
out
mov
mov
xor
maskmovq
mull
ret
lds
sub
sub
test
cmpsl
iret
pop
out
dec
jb
xchg
rclb
shlb
enter
and
mov
and
cmp
xor
decb
mov
call
ja
xchg
out
mov
outsb
cmp
cmpsb
int3
aas
mov
popa
sbb
cmp
popf
mov
add
and
mov
add
stos
jmp
ds
lcall
push
repnz
addr16
stos
sbb
retw
negb
jns
cmp
loopne
or
lret
mov
push
sahf
jae
pop
push
mov
mov
jl
xchg
bound
dec
repnz
jl
mov
and
inc
cwtl
sub
ja
fsubrl
pop
or
dec
bound
out
mov
adc
jg
mov
dec
and
es
clc
add
call
push
or
imul
mov
inc
in
pop
and
add
cwtl
sub
add
xor
call
add
or
ficompl
jge
mov
inc
cmpl
jnp
lds
mov
mov
xor
mov
outsb
push
dec
int3
in
jl
lahf
arpl
or
sub
call
pop
xor
ret
out
cmp
ret
mov
and
xor
es
and
mov
int
push
inc
dec
shr
mov
cwtl
add
fwait
pushl
popf
push
dec
orl
xchg
xchg
push
sub
test
jnp
cmp
jbe
int
aas
and
repnz
cmpsb
bound
or
ja
ss
popa
js
dec
pop
inc
inc
push
pop
inc
aad
jp
out
lret
leave
dec
pusha
nop
xor
lods
push
jge
test
add
arpl
xorl
outsl
mov
into
pusha
mov
mov
shll
test
sub
lret
notb
or
sbb
sub
ret
jle
mov
jg
push
fs
cmp
mov
scas
sub
xor
xor
push
movsw
jns
fwait
insb
xor
sahf
add
nop
aam
mul
lea
out
pop
rcrl
lahf
stos
aam
adc
insb
out
test
mov
push
popf
jecxz
push
or
inc
loope
mov
sub
arpl
xchg
mov
inc
fisubrs
add
outsb
pop
mov
xor
ror
rcrb
cltd
mov
sbb
xchg
sti
les
cli
mov
lds
and
out
test
mov
xchg
xor
mov
sub
inc
addl
cs
repnz
adcb
sub
xor
or
es
add
test
aam
xchg
mov
lock
cmp
adc
lahf
xor
les
jle
lret
jnp
shrb
not
mov
out
xor
add
dec
push
adc
out
adc
les
es
pop
inc
int
daa
rclb
dec
cmpsb
mov
popf
repnz
mov
xor
xchg
cli
pusha
push
add
call
push
lods
data16
cmpsb
inc
repnz
mov
rcll
add
cmc
call
push
add
adc
test
out
lret
jb
xchg
adc
hlt
aad
inc
adc
arpl
sub
xchg
inc
sbb
daa
rorl
arpl
test
scas
or
int3
pusha
or
js
mov
xor
xchg
loope
stc
pop
and
movsl
fnsave
pop
popa
test
jbe
jno
repnz
int
inc
rcr
add
lcall
imul
nop
add
popf
test
inc
mov
out
divl
push
add
jns
lods
out
add
xchg
jo
nop
fs
outsl
ret
push
in
popa
dec
test
sub
andl
mov
dec
mov
fimull
aaa
or
pop
mov
out
add
xor
xchg
sarl
push
out
add
sbb
insl
push
pop
sub
and
sbb
xchg
sbb
add
add
jp
xorl
inc
scas
pusha
lods
sahf
xlat
ficoml
clc
stc
in
cmp
push
in
sbb
out
dec
pop
push
hlt
or
and
cwtl
push
shlb
xchg
xor
push
fcompl
pause
add
and
imul
jg
jae
std
dec
xlat
repz
mov
inc
dec
cmp
lock
jl
dec
aam
aaa
lea
jno
pop
lcall
sbb
push
int
jbe
test
xchg
sbb
push
cwtl
mov
or
test
or
sub
out
clc
jnp
jecxz
lahf
test
pop
rcl
lds
mov
mov
stos
jg
loope
cmpsb
xchg
jg
mov
pop
and
cmpsl
cmp
shlb
xchg
xor
and
push
fucompp
popa
push
or
xchg
pop
je
cli
push
add
cli
jmp
xorl
sub
sbbb
pop
jb
fnstenv
iret
or
cmc
movsb
and
xchg
xor
cmp
lods
mov
sete
xchg
dec
add
sti
lds
loopne
sub
xchg
xchg
cld
mov
xlat
fsubr
ror
cmp
mov
lret
jnp
cmpsb
xchg
cmp
mov
dec
lcall
cmp
and
mov
cmpl
inc
das
adc
adc
mov
fldl
pop
and
nop
scas
stos
sbb
int
jae
repnz
outsb
mov
fs
push
xor
lret
dec
sbb
ss
dec
jae
mov
inc
mov
mov
adc
test
insl
into
gs
test
mov
into
dec
xor
shll
sbb
scas
jae
xor
insl
imul
jl
lret
jae
out
fdivp
or
mov
xchg
xor
cmp
out
shrb
push
arpl
mov
ds
jno
cmpsl
jp
mov
xchg
or
sbb
mov
dec
call
fdiv
sub
add
xchg
mov
jo
mov
test
das
inc
cltd
push
movsl
imul
push
sbb
ljmp
insb
mov
lahf
cmp
cmp
jbe
call
and
xor
shl
push
mov
aad
popa
inc
xchg
mov
out
shll
mov
rcr
mov
xor
jl
mov
pop
rol
push
push
or
insl
in
mov
int3
stos
test
aam
imul
sub
ffreep
popa
push
fcomi
cmp
xor
aas
adc
or
mov
mov
mov
push
mov
fwait
testb
bound
aam
jecxz
insb
or
xor
xlat
adc
fimuls
lods
aaa
dec
push
aam
test
lods
push
andl
inc
xlat
into
lret
lods
inc
je
sbb
sbb
imul
aad
cmpsl
call
testb
popf
dec
xor
fadds
sub
test
and
out
pop
movsb
cmp
add
ss
movsl
pop
pop
inc
and
push
popa
dec
and
repnz
add
call
mov
aas
sti
lret
shll
or
cmpsb
rclb
sahf
mov
add
sub
addl
loopne
arpl
out
or
nop
lret
std
cmp
and
or
test
neg
dec
int3
mov
cmp
aaa
inc
popl
and
inc
addr16
shrl
push
aam
inc
lock
xlat
inc
inc
js
lock
insl
shr
inc
fdivrs
sub
and
sbb
sbb
divb
adc
adc
pusha
mov
add
or
push
or
scas
mov
xchg
in
cmp
lcall
aas
ret
push
lock
orb
test
xchg
sbb
mov
lds
sub
lahf
pushf
jp
dec
dec
daa
sub
orl
pop
je
mov
inc
push
and
mov
xchg
adc
mov
xor
in
dec
push
sub
jb
jbe
rcll
fsubp
push
cmp
add
icebp
push
les
xchg
pop
mov
mov
aad
ljmp
inc
mov
jns
pop
xchg
aaa
mov
mov
testl
cmp
jne
aaa
lahf
ret
or
sbb
mov
adc
js
and
mov
xor
test
insb
cmp
ja
xchg
sub
aad
pushf
jnp
gs
cmp
mov
outsl
notl
stc
cltd
mov
jp
ret
mov
pop
push
out
jae
sbb
mov
ljmp
in
inc
hlt
mov
add
fistps
jmp
mov
nop
clc
cmpsb
test
loope
aam
leave
cmc
pop
rcrl
cmp
adcl
add
jnp
pop
xor
bound
cmpsl
jp
sbb
xchg
inc
xor
mov
mov
arpl
add
pop
cmc
dec
mov
fisubrs
loope
adc
lods
xrelease
daa
inc
mov
add
and
push
das
add
clc
out
pop
rcrl
cwtl
cs
rolb
jno
xor
pop
adc
add
insb
call
lea
inc
sub
repnz
or
fidivrl
add
fcompl
stos
mov
or
jle
adc
jne
pop
sbb
dec
xchg
cmpsb
and
jmp
scas
insl
mov
mov
pusha
cli
xchg
pop
int3
aad
and
clc
pop
adc
add
xchg
outsl
jg
xchg
orl
stc
fistpll
add
lcall
ja
rcll
add
loopne
mov
aam
push
cmp
xchg
or
and
inc
mov
daa
mov
jae
push
mov
into
xor
lods
push
sub
fwait
test
or
aad
xchg
lock
inc
fimull
cld
xor
call
xchg
data16
into
int
fcoml
lea
jnp
mov
test
sbb
cwtl
sub
cwtl
mov
mov
mov
cli
sub
scas
xor
dec
jmp
popf
jmp
or
pushf
ss
ret
fildl
out
push
imul
inc
jbe
hlt
mov
loopne
push
ljmp
fdivp
mov
inc
push
jle
sub
add
sbb
ss
sbb
icebp
loope
inc
push
xchg
and
sarb
stc
test
pop
add
xchg
das
and
mov
adc
aam
mov
push
lret
mov
out
test
dec
sub
xchg
lret
out
dec
test
arpl
jmp
mov
push
jmp
and
cs
mov
xchg
dec
push
or
cmp
jg
xor
or
xorl
out
aam
out
pop
cmpsl
dec
cmp
mov
mov
sub
push
test
sahf
xor
fdivp
adc
divl
mov
push
jbe
add
adc
jns
bswap
and
mov
xchg
push
xlat
dec
pop
stos
int3
jl
mov
enter
cmp
xor
and
jge
cwtl
cld
push
mov
fcoml
dec
mov
xor
sbbb
test
pop
in
xor
push
dec
pop
mov
dec
aam
cmp
mov
push
dec
test
int
xchg
pop
xchg
mov
jbe
les
jnp
iret
pop
push
push
sbb
add
es
mov
xchg
fwait
mov
xchg
pop
imul
sub
inc
adc
outsl
popf
in
inc
sbb
lods
push
mov
xchg
arpl
inc
addr16
popa
mov
pop
mov
push
push
test
aam
popf
and
xchg
mov
mov
loopne
cmp
aas
dec
sarb
or
ret
push
jg
popa
dec
dec
dec
mov
fisubl
mov
iret
adc
and
adc
shrb
mov
fmuls
cmc
dec
sbb
int3
or
push
and
push
repz
dec
pop
loopne
add
adc
adc
mov
rcrl
and
in
mov
push
mov
adc
jnp
movsl
aaa
or
jns
repz
or
rolb
stos
in
int
sbb
dec
mov
xchg
icebp
xor
into
push
push
adc
repnz
fmulp
xor
jge
aas
sti
add
inc
xchg
bound
bound
arpl
dec
ja
add
mov
cmpsl
push
stos
ss
jno
fdivrs
popf
iret
and
cwtl
xor
fwait
movsb
inc
jo
sub
lret
inc
test
sbb
lret
scas
mov
sub
insl
cmpb
or
mov
push
setno
pop
mov
pusha
call
mov
jnp
xchg
inc
leave
rcrb
in
push
gs
mov
in
or
in
jmp
mov
nop
push
adc
mov
inc
insb
xchg
push
mov
addr16
push
gs
sub
dec
pop
pop
cmp
das
or
ja
and
out
fimuls
cmp
loopne
in
jl
movsl
in
sbb
dec
inc
push
into
fstp
xor
lods
inc
mov
xchg
scas
pushf
jle
inc
nop
xor
mov
xchg
cmp
xor
in
and
or
jl
insl
add
dec
pop
movsb
pop
jnp
xchg
ror
mov
cmp
daa
dec
jbe
inc
mov
push
insb
addl
scas
outsl
shlb
data16
adc
xchg
mov
jbe
test
jno
xchg
ljmp
andl
mov
mov
sub
adc
mov
jmp
andl
psubusw
sub
ja
inc
inc
aad
pop
add
test
pop
movsb
sub
fdivrs
data16
aam
loop
cmp
jle
and
outsl
icebp
in
stc
lods
or
fs
dec
lock
in
xor
sahf
sub
mov
sbb
inc
dec
loope
test
and
fwait
push
sbb
icebp
ds
dec
negb
jb
xchg
sbb
js
imul
loop
lret
sub
nop
sub
lds
iret
das
xor
sbb
mov
mov
push
mov
mov
add
sub
arpl
fstl
fbstp
xorl
mov
aam
cld
out
adc
call
jp
lret
mov
fisubrl
xchg
jne
jnp
xchg
stc
pop
in
push
jp
and
inc
outsl
sub
lock
data16
es
lods
xchg
lret
ret
std
and
cmp
sub
jnp
adc
pop
lods
pop
cli
inc
movsb
pop
into
dec
sub
mov
rol
daa
cmpsb
mov
dec
inc
jb
fsubl
std
or
or
bound
test
xchg
inc
outsb
mov
repnz
sub
sub
cli
sbbb
jo
popf
inc
mov
mov
sbb
sbb
sbb
inc
testb
in
test
dec
xchg
add
inc
subb
inc
push
pop
popf
sbb
jg
cs
sets
fsubrp
mov
add
adc
pop
icebp
cmpl
test
adc
cmc
cmp
dec
cmp
pop
and
out
in
or
cmp
std
cmp
xchg
add
or
rorl
imul
inc
nop
mov
mov
in
sub
mov
jmp
outsb
or
sbb
fs
xlat
jo
adc
sbbb
xchg
arpl
xor
push
dec
fs
cmpsl
call
cmc
jo
mov
jno
sbb
fwait
in
loopne
jne
aaa
dec
pusha
imul
iret
loop
data16
xor
push
pop
inc
lods
sbbb
ret
sub
push
and
inc
rcll
popa
js
jg
jge
cmp
inc
xchg
arpl
pushf
pop
aam
sub
lahf
test
xlat
cmp
inc
xorl
jbe
mov
sbb
pop
inc
int
rcr
ret
bound
cli
and
test
push
lcall
mov
pop
push
pop
shll
pavgw
std
adc
inc
xor
sbb
xor
mov
dec
xchg
dec
or
and
and
ret
lcall
fstp
cmpsb
fwait
mov
dec
push
popa
sti
fs
add
mov
cmp
mov
jge
lret
popw
repnz
cmc
inc
movsb
nop
and
push
scas
mov
or
popf
enter
add
jne
mov
mov
pop
sbb
pop
nop
pop
xor
ret
xor
and
repz
xor
pushf
jmp
pop
sbb
mov
mov
push
sub
mov
add
test
leave
pop
xchg
cld
data16
inc
dec
pop
or
mov
daa
jno
jns
xchg
iret
adc
dec
sarb
pop
push
lea
dec
xchg
adc
stc
stos
inc
cmp
in
jp
mov
sbb
jge
push
mov
cwtl
xor
shrl
insl
xchg
dec
mov
in
dec
or
inc
ljmp
out
ret
pop
ret
xchg
pusha
sub
mov
sub
mov
sbb
mov
dec
loope
xorl
xchg
frstor
cltd
std
mov
add
push
aad
iret
outsl
push
add
lods
xor
addb
dec
jmp
lea
sbb
int
jmp
stos
pop
add
mov
imul
shl
pushf
bnd
xchg
lret
xchg
loope
jns
call
repz
rcll
sbb
ret
loopne
lcall
dec
imul
jl
dec
iret
rcl
add
int
push
push
pop
test
cwtl
push
sbb
movsl
xchg
hlt
iret
shrl
mov
test
call
pushf
dec
arpl
out
dec
je
das
pop
les
fsubl
icebp
shl
mov
in
cmp
add
inc
mov
mov
adc
inc
sbb
mov
push
add
aam
shll
inc
add
popa
add
sbb
and
out
or
push
icebp
mov
mov
mov
ja
xchg
aam
dec
popa
cmp
aam
xchg
and
push
lods
or
and
cmp
xlat
or
clc
add
popa
jne
and
mov
jne
lret
lea
add
cmpsb
sarl
pop
or
rolb
shl
ljmp
jmp
or
movsl
les
jnp
jb
dec
mov
enter
test
adc
inc
and
pop
shrl
mov
repz
pop
adc
or
inc
mov
mov
mov
adc
cs
xor
xchg
daa
js
xor
dec
mov
push
jg
inc
jle
pop
repnz
lret
iret
ficoml
cmp
je
dec
lods
cmpsl
adc
ret
movsb
sub
shr
jne
cmp
or
fnstsw
ss
xchg
sbb
push
push
mov
xchg
sub
sahf
std
push
mov
int
sbb
sbb
int3
into
pop
or
ja
fiaddl
int
inc
mov
das
loopne
inc
pop
pop
xchg
fsubrp
cmp
jb
lahf
push
fldenv
inc
jns
sbb
popf
mov
adcb
fdivrl
popa
shll
jnp
cld
mov
sahf
inc
sahf
bnd
or
fldcw
sbb
pop
mov
jecxz
js
xor
in
and
imul
sbb
jl
add
in
ret
and
fs
cmp
mov
add
mov
mov
nop
ret
in
imul
xchg
inc
je
or
inc
shr
iret
test
popa
dec
sub
in
mov
cmp
pop
cmc
std
iret
mov
lret
inc
xor
jb
out
adc
jno
clc
or
arpl
insb
jb
add
fmull
xor
mov
jge
jecxz
pushf
jle
test
jmp
pop
sbb
cmp
add
pushf
sub
sti
pop
inc
lock
aam
dec
sbb
push
add
out
sbb
adc
loop
aam
xor
sbb
mov
and
mov
xchg
outsb
push
jns
inc
adc
xor
xchg
jle
pop
jg
xchg
xorl
fdivrl
data16
movsl
cmp
jno
mov
shlb
push
rcr
cmp
push
inc
jnp
int
dec
mov
hlt
sarl
inc
sub
jb
sbb
sbb
xor
loopne
lcall
or
mov
loop
aas
jae
dec
push
xchg
dec
inc
repnz
in
js
ret
data16
dec
loope
jl
test
in
mov
aad
mov
mov
popa
jnp
dec
mov
xor
psubd
or
setno
mov
pushf
add
test
repnz
andb
rorl
dec
arpl
inc
pop
xor
ror
xor
stc
pushf
das
insb
les
sbb
push
jns
fwait
mull
pop
push
pop
and
sbb
mov
cs
je
cmp
aam
adcb
xchg
mov
jo
add
sarl
movsl
pop
cmc
and
push
imul
scas
sub
mov
push
lea
dec
mov
jns
scas
inc
lret
mov
xchg
cli
pop
push
loop
out
and
cmpsl
xlat
add
lea
stos
out
jmp
cld
ret
ret
pop
pop
jnp
jg
xor
das
ja
hlt
imul
cmpsl
cmp
lcall
inc
mov
cmp
push
pusha
test
push
movsl
sub
mov
add
scas
imul
and
in
adc
mov
nop
scas
jno
dec
fildl
clc
sub
mov
call
les
int3
lea
imul
addr16
cld
adc
sub
pop
inc
loopne
mov
stos
jg
mov
push
stc
fwait
clc
xor
jge
repnz
cltd
pop
sbb
jns
xchg
or
pop
dec
mov
xchg
lods
sbb
mov
fld
aad
dec
or
lds
shlb
addr16
cmpsb
push
xor
lahf
xchg
jne
push
out
adc
pop
cmpsl
sti
adcl
fistpl
jmp
cmpsb
xor
dec
push
and
repnz
jae
bound
inc
xor
popa
adc
dec
adcl
out
pop
test
icebp
faddl
loope
fs
in
push
and
mov
sahf
imul
inc
cltd
iret
push
daa
dec
aas
lcall
aaa
mov
aam
sub
and
jbe
lahf
inc
mov
and
in
xor
cmovns
mov
pop
sbb
stos
dec
add
xor
cmpsb
mov
xorb
hlt
jo
ljmp
xchg
pop
adc
punpcklwd
insb
test
in
adc
adc
jns
xor
add
ucomiss
jb
push
xor
mov
std
mov
pop
das
dec
pop
cli
sbb
loopne
notl
cmp
popf
xchg
movsl
out
xchg
dec
sub
xor
iret
inc
or
jae
outsb
imul
in
int3
lret
aad
mov
movsb
sbb
in
shrb
sarb
dec
pop
jns
sub
cmp
sbb
ja
lcall
mov
stos
cli
xchg
push
in
push
jns
dec
xchg
mov
add
sub
push
icebp
ret
or
test
push
xchg
mov
es
inc
jns
xor
adc
mov
or
mov
sbb
loop
mov
sbb
je
iret
outsl
pusha
mov
cwtl
leave
push
cli
add
pop
mov
push
cmp
mov
mov
es
aas
or
add
mov
cmp
cli
pushf
push
lcall
int3
gs
iret
cmp
jmp
push
pop
pop
push
pop
std
or
cli
jge
xchg
clc
aas
mov
cmpsb
and
addl
pop
mov
jg
out
xchg
xor
cmpl
and
loopne
lods
outsl
sahf
xchg
mov
js
leave
xchg
jg
add
adc
push
sbb
prefetchwt1
and
cld
pop
push
cmp
xor
cmp
and
cmc
je
xchg
stos
mov
mov
pop
or
add
jg
xchg
dec
cmp
popa
cmp
sub
mov
adc
int
add
cmpsl
or
mov
repnz
xor
pop
and
enter
add
les
pop
sub
jle
fisttpl
cwtl
rclb
dec
mov
dec
mov
and
fldl
fwait
xlat
cmp
xor
aas
je
or
pop
leave
add
rclb
mov
adc
cmp
push
aas
add
es
mov
int3
xor
or
decb
ljmp
rorl
rol
sti
iret
and
fcmovnbe
push
and
andb
lock
sbb
pop
lret
negl
pop
mov
sahf
push
std
popf
push
xchg
test
mov
or
pop
jo
data16
xchg
mov
das
inc
cld
jge
push
pop
int
and
cmp
bnd
add
outsl
sbb
fwait
insl
mov
and
xchg
ja
sub
sub
adc
test
insl
stc
aas
sarl
idiv
out
les
shll
es
in
icebp
stos
popf
cmc
ljmp
mov
adc
mov
cmc
ljmp
loopne
mov
or
imul
inc
xchg
mov
mov
add
clc
sbb
pusha
ret
xor
mov
lret
scas
xor
fbld
test
push
lds
int
aam
inc
cmp
mov
dec
xchg
add
mov
movsl
inc
ja
fdivl
sub
jae
lock
mov
cltd
fwait
inc
mov
dec
mov
adc
jge
xchg
out
cmp
inc
movsl
movsl
mov
outsb
or
repz
inc
mov
data16
dec
mov
cmp
cld
add
sub
dec
push
sbbb
nop
mov
das
jmp
std
jbe
lds
subb
push
sub
ret
fmull
movsb
sbb
daa
mov
dec
clc
mov
mov
stos
xor
aad
popf
cli
test
arpl
cli
mov
dec
pusha
or
in
jbe
inc
xchg
aaa
jge
sbb
enter
hlt
mov
xor
xlat
dec
jnp
pushf
mov
fidivrl
enter
inc
cld
jae
fldpi
dec
shrb
pop
insl
pop
adc
imul
sub
popf
stos
dec
sub
cmp
xchg
aad
adc
jo
cmc
or
fstpt
test
adc
jmp
jge
mov
or
cmpsb
xor
daa
loope
jg
test
pop
je
inc
popa
addr16
clc
addr16
inc
jge
pop
imul
ss
inc
mov
loop
out
sbbl
and
jg
mov
jno
xor
hlt
jnp
aas
cmpl
loopne
push
std
movsb
ret
cmp
in
add
xor
leave
sbb
fimuls
inc
insl
cmp
fisubl
in
inc
fsts
pop
adc
repnz
roll
xchg
repz
mov
scas
pop
out
mov
into
xchg
adc
clc
or
push
jae
in
fs
sti
pop
jle
loop
xchg
xchg
and
jmp
xchg
imul
enter
adc
jbe
xchg
xor
ret
xchg
pushf
lret
imul
push
cmp
adc
aas
mov
xchg
mov
dec
jl
sub
pop
aas
shlb
fisubl
incb
and
push
fstl
gs
ljmp
scas
stos
or
push
int
mov
jg
dec
test
aam
dec
inc
push
add
lahf
in
ja
movsb
xchg
cld
inc
jmp
sbb
dec
push
or
leave
adc
or
mov
mov
pop
add
cli
test
sub
fisubrl
call
mov
xchg
sbb
lds
shr
mov
jecxz
push
push
and
insl
sbb
mov
repz
jbe
repnz
dec
xchg
mov
cli
movsl
sub
lret
lcall
sarb
hlt
incb
dec
push
adc
lcall
inc
add
jecxz
shlb
xor
dec
push
imul
mov
or
movb
jbe
adc
mov
inc
cmp
es
rcrl
pop
cmc
mov
mov
addb
loop
push
test
xchg
fcmovnu
cli
rcpps
movsb
sbb
out
fldl
pop
popa
mov
jns
jle
ljmp
insb
and
push
data16
xor
and
fbstp
pop
leave
xchg
add
adc
mov
jp
dec
jb
mov
std
sbb
pop
out
dec
loop
xchg
js
test
jp
imul
jmp
lcall
rorl
filds
icebp
lcall
and
mov
out
stos
fs
pop
adc
out
add
rcrb
pop
lds
mulb
andl
lock
jbe
jno
sti
clc
sub
lea
cwtl
popa
mov
dec
cmpsb
mov
les
pop
sbb
rcrl
or
jl
xchg
test
cmc
sub
xor
sub
dec
xor
roll
mov
inc
lcall
enter
push
push
adc
adc
dec
ja
lcall
jge
xor
test
xchg
pop
sahf
imul
mov
jecxz
enter
das
dec
popa
dec
mov
add
mov
aas
cmpsl
jnp
xor
add
mov
mov
sbb
andb
mov
scas
test
cs
aaa
addr16
mov
push
inc
cltd
pusha
aam
pop
cmpb
push
cmp
repz
inc
es
lods
sub
sub
iret
loop
jg
inc
setge
mov
int3
sub
and
mov
rclb
add
adc
dec
icebp
mov
imul
xchg
scas
xchg
mov
or
loopne
imul
pop
adc
mov
cmp
sbb
mov
and
and
pop
adc
iret
dec
sub
or
jns
out
rclb
pop
jne
push
push
mov
adcl
jo
loopne
mov
cli
and
incb
xchg
xor
or
popf
sub
mov
std
add
in
fld
xchg
loop
pop
mov
lcall
outsl
mov
xor
sbb
dec
jmp
or
rorl
pop
sub
mov
dec
pop
jo
in
or
ret
insb
push
sbb
xchg
out
jecxz
aam
fstpl
loopne
add
insl
pop
and
fistpll
leave
mov
imul
out
dec
shl
sahf
incl
sub
cmpb
inc
and
out
testl
sub
ljmp
pop
xor
xchg
sub
mov
sub
jecxz
into
jnp
pushf
mov
mov
and
jns
scas
test
push
dec
hlt
cmp
out
loop
and
push
xchg
cvtdq2ps
lock
push
imul
sub
xchg
mov
cli
out
sbb
adcb
enter
mov
cmp
lea
adc
push
outsl
xlat
add
mov
push
dec
bound
cld
shrl
inc
jnp
sbb
sub
arpl
mov
jl
nop
mov
or
xchg
shrl
mov
pop
outsl
pushf
sbbl
sbb
jbe
push
cmp
xor
mov
jp
mov
std
shrb
add
cwtl
adc
ret
sahf
cmpsb
pusha
popa
push
dec
pushf
test
mov
xor
or
jl
xchg
xchg
jmp
sbb
sub
mov
dec
iret
adc
adc
data16
icebp
mov
aad
sbb
jecxz
push
daa
mov
push
mov
or
jbe
xor
xchg
or
cmp
js
orl
mov
fiaddl
dec
outsb
lret
nop
or
divb
cmp
aas
mov
mov
lods
xor
jno
xlat
or
ret
sub
or
push
in
jnp
push
int3
clc
pop
pop
dec
jae
xor
adc
pushf
and
icebp
mov
rorl
insl
jo
lds
lret
add
mov
mov
xchg
pop
adcb
fwait
mov
fidivrs
aam
fldenv
shl
leave
gs
mov
movsl
push
adc
add
xor
cmp
movsl
pusha
sbb
jmp
cmp
pop
aas
push
loop
cli
sbb
js
inc
mov
push
add
mov
push
repnz
pop
xchg
cmp
xchg
pop
int
inc
adc
lea
repnz
sub
pusha
adc
lret
ds
fldl
out
pop
loop
push
xchg
insl
gs
movsb
cmpsb
pop
and
lea
xchg
pop
mov
cs
int
ficomps
adc
out
sub
out
shl
sub
nop
push
adcl
inc
fcmovb
jecxz
int3
mov
adc
inc
in
outsb
cmp
mov
push
jb
lahf
decb
push
fwait
push
adc
xor
jb
ss
jbe
push
movhps
add
add
js
dec
insb
mov
xchg
mov
loop
push
pop
adc
jmp
jmp
and
cwtl
dec
jge
sbb
mov
or
subl
mov
push
xchg
loopne
fistps
fisubrs
sti
out
xor
dec
mov
cmp
iret
ret
cmovb
std
sub
ljmp
sbb
dec
pop
add
pusha
fisttpll
inc
loop
jbe
jmp
gs
inc
xchg
xor
movsb
insb
test
inc
dec
idiv
mov
push
psrlw
jge
sahf
fsubrp
sub
mov
pop
add
jno
xor
xor
jae
or
pop
adc
mov
cmp
jns
cmp
mov
int3
mov
sub
xor
pop
clc
lret
push
lcall
push
mov
sbb
lds
xchg
out
lock
mov
mov
cwtl
inc
mov
inc
and
jnp
shlb
fdivl
jbe
push
rcl
mov
xchg
and
push
scas
cwtl
outsb
sbb
addr16
push
inc
mov
sub
or
popl
inc
mov
sbb
out
inc
faddl
in
movsb
into
in
mov
mov
xchg
repz
daa
add
sub
in
decl
mov
andb
pop
test
mov
mov
ret
stc
lea
daa
cli
sub
xchg
in
xor
cmpsb
inc
mov
push
pop
out
cmp
sbb
and
lods
iret
clc
push
nop
mov
popa
lds
jbe
mov
daa
adc
xor
dec
loop
jge
int
dec
divl
bnd
dec
mov
test
inc
pop
mov
rolb
push
scas
mov
add
int3
lret
lret
inc
stc
cmp
mov
icebp
pusha
into
aam
sbb
stc
jg
mov
arpl
sti
js
iret
dec
inc
loop
inc
xor
in
xchg
addr16
std
ja
stc
xor
std
movsl
in
mov
sub
mov
push
xor
in
test
loop
jo
pop
jnp
pop
je
sar
shlb
data16
pop
pop
push
shlb
cmpsl
mov
negl
mov
ret
cmc
hlt
push
mov
cltd
adc
push
push
dec
xor
cltd
lahf
inc
movsb
addl
adc
cmp
lock
or
lea
jl
fistps
mov
sti
xchg
adc
and
lret
mov
fwait
testl
imul
imul
in
popf
or
mov
mov
je
dec
jp
or
fcoms
pop
dec
sbb
insb
and
leave
mov
jle
lret
adc
add
and
notb
sarl
mov
xchg
jae
fdivrp
stos
js
adc
orl
and
outsb
jae
xchg
jg
xor
stc
or
aad
or
sbb
push
fidivrl
pop
mov
jne
dec
inc
enter
mov
idivb
imulb
aad
mov
ds
push
jle
sbb
inc
imul
mov
pop
scas
fwait
cmc
jle
pop
stos
xchg
sidtl
int3
xor
loope
leave
pop
jle
mov
mov
sbbl
cs
xchg
sub
mov
sub
into
lea
push
rolb
mov
and
jge
jnp
movsb
js
jl
pop
rorl
sub
fwait
or
and
jmp
stc
out
sub
repnz
push
cwtl
jle
in
push
popa
in
hlt
setl
lret
je
dec
sbbb
cmpsl
dec
nop
push
mov
fdiv
test
adc
pop
and
xchg
ljmp
clc
inc
das
cmp
hlt
rcll
in
shlb
mov
jns
cmp
test
mov
nop
hlt
aas
addb
mov
mov
mov
cmp
das
xchg
sbb
xchg
push
adc
cmp
add
jge
stos
xchg
test
and
test
das
lea
fwait
icebp
lcall
mov
addl
pop
xchg
inc
sarb
out
push
sub
icebp
in
in
and
mov
mov
ret
push
enter
fildll
dec
pop
push
xor
fsubl
movl
dec
jbe
in
mov
sbb
rclb
xlat
dec
adc
sub
jl
mov
rclb
int3
test
mov
movzwl
pushf
out
inc
roll
ss
das
and
adc
fs
adc
cltd
jp
jno
pop
cli
inc
or
lods
test
adc
dec
push
inc
sahf
sbb
mov
nop
mov
pop
dec
xchg
xor
inc
jge
cmpsb
add
movsb
push
into
imul
bound
mov
and
sti
push
ds
adc
mov
test
and
inc
mov
inc
aam
push
movb
mov
or
lahf
lds
pop
pop
push
xor
rolb
frstor
or
mov
outsb
jp
arpl
fdivr
imul
xor
sub
repz
ret
pop
out
fidivl
xchg
mov
clc
insb
sbb
push
dec
andb
xor
xchg
push
std
ljmp
test
insl
ret
frstor
cmp
and
pop
pop
cmpb
mov
lock
cld
cmp
xor
xchg
sbb
sub
mov
sub
rolb
push
xchg
sbbl
dec
out
repnz
pushl
lock
rorb
pop
int
jmp
decb
jo
push
in
dec
mov
mov
mov
out
cwtl
fistps
fwait
inc
sub
outsl
in
sbb
call
lcall
and
sbb
scas
or
sbb
repz
cwtl
mov
add
inc
xchg
sti
test
or
testl
pop
test
sub
sbb
pop
loop
lds
inc
mov
add
xor
dec
pop
push
into
lcall
jae
repz
stos
jno
mov
dec
cmp
mov
and
hlt
movb
je
mov
scas
in
ja
mov
idivb
push
push
lcall
aam
cmp
and
lcall
mov
cld
xchg
mov
es
outsl
xor
out
mov
shll
mov
and
cmp
dec
fwait
les
cmp
xchg
ja
pop
sub
add
xor
jp
addr16
mov
imul
lcall
rcrb
and
addl
push
xchg
adc
ds
addl
pop
push
pop
mov
xor
inc
lock
pop
push
sbb
pop
xlat
xchg
out
dec
cmc
cmpsb
pop
dec
std
cmp
aas
dec
xor
and
pop
xchg
loope
test
test
ljmp
jns
or
je
pushf
test
sub
int3
push
and
mov
inc
fdivr
int3
or
es
xor
lret
dec
xchg
pop
idivl
stos
pop
rcll
into
cwtl
push
xchg
out
pop
sbb
jl
sub
dec
test
lret
jmp
dec
ror
or
mov
dec
sbb
cmp
test
mov
das
hlt
lods
fldt
mov
insl
insb
shlb
add
fidivs
cmovae
or
or
cmp
loope
fcompl
in
divl
and
scas
lods
adc
and
das
pop
fldl
sbb
mov
int
sub
sbb
cld
add
sbb
cmp
out
cld
mov
sbb
xor
mov
inc
xorb
or
push
test
and
inc
ja
movsl
bound
decb
gs
scas
mov
dec
test
mov
add
cmp
test
pop
jge
add
bound
mov
test
out
fdivrs
stos
or
pop
dec
or
xchg
push
test
cmp
pop
into
cmp
sahf
scas
data16
adc
push
out
std
mov
add
sbb
sub
mov
das
test
inc
in
and
in
negl
out
sub
hlt
mov
roll
imul
adc
xchg
push
mov
repnz
inc
jmp
cli
into
cmp
dec
and
xchg
push
outsl
add
xchg
sbb
stos
xchg
rcrb
jb
or
sahf
call
lret
sahf
adc
fsubrs
add
mov
dec
mov
loop
lods
xor
int
mov
cmp
inc
mov
cmp
sbb
or
int
and
push
fnsave
int
call
mov
jecxz
je
iret
inc
or
jmp
xor
pop
leave
lret
mov
cmc
pusha
sub
cmp
xor
imul
add
aad
mov
int
pop
bound
add
sbb
mov
add
repnz
mov
lret
cmp
test
icebp
ljmp
fdivl
fwait
xchg
test
push
je
xorl
pop
xchg
sub
pop
mov
loop
jl
xor
and
cmp
fwait
cmpsl
xor
loop
lods
xor
and
imul
push
jp
lods
xchg
inc
jnp
test
loop
iret
adc
push
mov
mov
sbb
lret
leave
adcl
popf
imul
dec
sub
inc
or
and
enter
and
add
jno
cmp
popf
jb
in
push
das
inc
leave
repnz
dec
icebp
mov
mov
jo
push
or
bound
mov
shll
leave
call
addr16
aam
stos
popf
push
stos
cmp
repz
shrl
pushw
jmp
cmc
ja
inc
pushl
push
stos
jnp
and
sub
lods
cmp
push
mov
scas
or
and
jg
pop
pop
mov
sahf
mov
dec
hlt
xor
sarb
loopne
mov
xor
xor
cld
clc
adc
jne
mov
push
cwtl
xor
xor
pop
push
fcmovne
cmp
loopne
insl
xchg
dec
push
push
jae
enter
jns
dec
push
cmpsb
or
cmpsb
mov
test
sub
enter
fsubrs
test
outsb
jmp
mov
fidivrl
push
cld
add
xchg
dec
sub
imul
inc
repnz
pushf
stos
enter
sti
in
sbb
adc
inc
adc
fists
jmp
pop
xor
cmp
mov
adc
xchg
loopne
inc
sbb
jo
xchg
cs
push
jno
popf
cmp
cli
mov
aad
iret
fsubs
push
inc
mov
arpl
lret
xchg
scas
mov
xor
enter
arpl
dec
icebp
push
and
cmp
jle
ljmp
lea
aad
loop
dec
xor
insl
jb
ljmp
cmc
sbb
pop
mov
in
int3
and
dec
sbb
pop
out
push
lcall
mov
call
out
loopne
les
xchg
sbb
dec
mov
jecxz
sbb
xchg
or
imul
mov
mov
and
or
push
ja
enter
jo
lds
add
xchg
dec
jl
xchg
lahf
pusha
push
or
xorl
cs
je
insb
cwtl
sbb
pop
jns
repnz
add
jne
insb
adc
pushf
mov
mov
fidivrl
mov
add
fsubrl
cmc
jp
cmp
add
sub
mov
pop
in
ret
mull
push
inc
outsb
out
in
idivb
ds
scas
mov
xor
mov
pop
mov
pop
lock
enter
lds
push
fs
cmp
add
inc
sbb
ret
fistps
cmpsb
loopne
push
movsl
mov
push
jo
mov
sbb
lcall
insb
mov
notl
ds
sti
loop
cmovge
nop
fildl
push
push
jl
mov
mov
sahf
and
jbe
xlat
dec
sar
int3
div
into
mov
call
pop
adc
sub
inc
jp
dec
or
loopne
mov
mov
xorb
xor
imul
test
jl
push
jae
sub
fs
mov
iret
xchg
icebp
mov
and
sub
out
outsl
das
aaa
and
leave
arpl
jge
cmc
or
pop
jl
adc
mov
hlt
scas
sub
jge
push
mov
cmp
clc
inc
ss
lock
sub
sahf
xchg
pop
inc
add
insl
pop
mov
jno
mov
add
movsb
pushf
jnp
ret
ljmp
xchg
mov
loop
cmp
leave
test
inc
jp
stos
mov
inc
popa
std
add
xlat
add
sub
cmp
mov
lock
lahf
stc
mov
mov
add
lcall
fdivrl
fists
inc
cld
mov
dec
sbb
xchg
shrb
mov
lret
mov
mov
push
adc
leave
jo
pop
pop
call
ds
xor
clc
mov
sub
cld
pushf
aam
popl
dec
and
out
and
test
or
sub
push
mov
sub
out
push
jp
push
stc
and
data16
jp
or
je
xor
lcall
cmp
mov
sbb
out
stc
lahf
xchg
inc
sti
and
sbb
shlb
mov
out
iret
or
jno
cmp
cmp
add
mov
stos
add
sbb
mov
pop
enter
out
das
push
pop
pop
or
sub
in
or
cmp
sub
inc
ret
sub
mov
insl
xor
gs
rcll
mov
xor
jg
and
add
cmp
xor
jnp
cmp
aaa
mov
mov
jl
xor
mov
loopne
repz
add
mov
mov
or
imul
mov
imul
popa
mov
aas
or
call
xchg
inc
repnz
ret
or
dec
test
pushf
fildl
sub
std
fistl
sbb
vmaxpd
cmpsl
inc
hlt
inc
push
cmc
mov
pushf
mov
pop
adc
push
bound
xor
jo
jge
leave
popf
jl
stc
sub
insb
fwait
xchg
adc
insl
imul
sti
push
add
push
ja
push
xchg
mov
out
lret
pop
sub
push
call
push
mov
push
pop
repnz
add
mov
int3
or
pop
mov
das
mov
inc
out
lea
int3
and
and
out
sti
in
mulb
shrb
sbb
jp
and
mov
push
loopne
add
xor
cmp
add
add
out
mov
bnd
cmp
imul
icebp
or
and
rorb
aad
xor
lods
cwtl
movsl
icebp
in
lds
jne
mov
mov
mov
int3
mov
add
mov
mov
mov
pop
pop
jne
dec
push
ljmp
xor
punpckhdq
repz
mov
pop
test
inc
iret
mov
cmpl
lret
add
test
or
mov
mov
pop
or
fcompl
shll
jbe
push
adc
mov
cmp
mov
pop
repz
xor
cmpsb
aas
mov
lea
sbb
sub
or
js
sbb
clc
pop
aas
sub
push
call
repnz
scas
cmpsl
or
dec
pop
mov
push
xlat
arpl
mov
mov
xchg
cli
xchg
or
mov
addr16
loopne
inc
pop
fadd
dec
repz
sbb
cmovns
cmp
lods
cltd
movb
fbld
jns
mov
je
hlt
xchg
pavgb
call
and
ljmp
outsb
xchg
mov
pop
lods
pusha
daa
fnsave
mov
sbbl
je
stos
sbb
jg
jge
iret
pop
xor
out
bound
cltd
mov
xchg
lret
mov
push
stc
and
rolb
xchg
lcall
sarb
fcoml
add
aad
mov
add
ret
call
cmpsb
pusha
pop
jne
in
pop
nop
inc
popf
div
push
in
and
push
mov
jb
fisttps
mov
nop
dec
fsub
outsl
and
adc
icebp
cmp
cmp
sti
or
xor
push
ljmp
fsubl
add
inc
rorl
xchg
xor
sarb
dec
imul
arpl
gs
lahf
mov
movsl
inc
jge
and
xlat
lcall
pop
sbb
std
adc
insl
ficomps
faddl
mov
lock
push
icebp
or
mov
mov
jae
xor
cwtl
scas
out
and
jae
imull
and
xor
fs
xor
cmp
jp
mov
test
in
addr16
mov
shlb
adc
sub
mov
test
dec
ret
rcll
xchg
sub
jmp
andb
dec
push
cmpsb
into
cmp
mov
and
lods
pop
push
cmp
movsb
xorb
in
hlt
repz
inc
adc
add
cwtl
mov
lods
mov
test
mov
filds
shll
sub
das
mov
xchg
pop
xchg
lret
sub
push
dec
lret
loope
rcll
sub
pop
daa
jg
jecxz
jg
leave
xor
xchg
dec
ja
inc
lahf
loopne
cmp
imul
ds
adc
sub
sub
mov
hlt
or
rorb
pop
clc
mov
insl
pop
mov
aad
pop
and
pop
leave
mov
popf
jno
jns
fmul
pop
pop
test
shlb
or
add
mov
outsl
adc
mov
pop
roll
mov
cli
je
lds
lcall
insl
leave
stos
loopne
mov
add
lahf
rclb
jo
pop
jae
std
icebp
js
pop
out
sti
sub
pop
jmp
popa
repnz
push
xchg
jge
rcll
movsl
or
dec
mov
enter
xor
fldl2t
or
lret
shrb
mov
lret
mov
insl
in
or
in
ret
ret
lcall
inc
push
test
push
xchg
push
push
xor
int3
mov
stc
jo
lods
aad
testl
andb
inc
pop
out
fnstcw
outsb
cmp
enter
jle
adc
addb
fsubr
movsb
mov
imul
int3
icebp
imul
scas
xchg
adc
call
add
test
mov
add
js
dec
inc
es
xlat
lods
insl
iret
sub
sub
or
jno
xchg
or
cli
cld
das
xchg
mov
cs
shr
adc
stos
into
cmp
cmpsl
and
and
push
cltd
mov
mov
imul
aas
push
ljmp
jb
mov
push
pop
mov
outsb
mov
xchg
add
cmp
icebp
or
in
inc
inc
lret
loope
adc
das
pop
and
mov
loop
movsl
ret
lods
fmuls
push
loop
imul
je
test
pushf
movsl
xor
sbb
push
sbb
out
adc
cmp
stos
mov
cmp
sahf
mov
fs
push
lods
adc
lea
jp
test
sub
jmp
inc
lods
mov
enter
push
ficomps
inc
stos
jp
aas
push
xor
xchg
or
lret
scas
arpl
dec
stc
xor
shl
xchg
hlt
sbb
int
and
call
pop
inc
fidivrl
pop
pop
xor
daa
bndldx
in
dec
ret
insb
in
adc
outsl
add
mov
pop
push
jmp
arpl
and
mov
mov
jne
sub
dec
out
repz
inc
jno
bound
push
xchg
or
shl
adc
call
clc
mov
xrelease
adc
adc
nop
cmp
in
jle
dec
or
push
jno
xlat
stc
hlt
jl
sbb
leave
mov
nop
into
add
inc
out
lock
repnz
xchg
xor
mov
mov
xchg
cltd
mov
mov
adc
lahf
push
test
lods
rcl
aad
popf
int
mov
fistl
push
test
and
jecxz
lret
dec
cmp
push
xor
in
rcrb
and
push
mov
xchg
and
fisubrl
mov
xchg
sub
dec
fidivrs
adc
push
or
hlt
ljmp
les
jne
gs
add
cmp
shll
mov
int3
add
mov
jmp
pop
sahf
stos
out
push
insl
cmp
icebp
sbbb
adc
dec
push
pop
xchg
cltd
xor
mov
aas
ljmp
inc
int3
js
fidivrs
xchg
inc
fadd
cld
into
lods
decb
lcall
mov
add
mov
lret
jg
mov
inc
sub
mov
loope
or
sbb
sarb
sar
insl
or
fdivp
shl
mov
ret
leave
mov
addb
push
or
stc
add
ficompl
sahf
adc
ret
sub
inc
xor
icebp
xchg
sub
inc
jl
icebp
insb
out
fisubs
cmp
dec
ret
push
pop
xor
jmp
rcr
popl
mov
jge
out
mov
mov
mov
leave
sbb
push
or
mov
cmp
in
test
adc
fcmovnu
call
mov
sub
insl
and
sub
cmc
push
pop
lret
jno
cmp
xchg
std
cmp
test
jns
aas
pop
dec
sub
dec
outsl
sub
loop
jbe
and
push
out
fisubl
mov
jne
adc
test
or
jecxz
mov
xchg
shlb
push
jl
add
mov
add
or
loope
inc
add
mov
lock
lcall
or
stc
or
xor
sbb
mov
lods
add
out
arpl
mov
aad
push
push
ja
cmp
aad
xor
adc
inc
rorb
add
insb
push
orb
std
xor
jae
cmp
jo
cmpsb
mov
sbb
nop
sar
ror
fldenvs
cwtl
mov
lcall
pop
cmp
outsb
pushf
sbb
and
or
mov
xchg
fiadds
xchg
lret
scas
pop
sbb
or
inc
mov
mov
add
push
sbb
xor
addb
sub
stos
sti
es
ljmp
aad
stos
fstpl
sub
cld
and
outsl
push
fisubrl
inc
and
sbb
inc
rcr
lcall
imul
adc
pop
sahf
sar
cmp
mov
add
outsb
lods
ret
loopne
mov
mov
fs
cmpsb
xor
icebp
push
sbb
push
ficoms
dec
lock
sbb
lahf
gs
call
xor
adc
dec
mov
inc
sub
dec
push
pop
stc
movsl
jnp
fs
add
std
pop
frstor
aas
and
push
in
add
bnd
fcompl
lret
xchg
mov
stos
xor
sahf
scas
in
push
imul
ss
jbe
xor
jp
xchg
push
adc
fidivrl
xchg
dec
ja
sti
inc
repnz
aaa
hlt
int
dec
inc
fidivl
sub
jne
subl
jl
adc
fs
popa
mov
dec
sbb
movsl
or
adc
push
dec
bound
jg
fwait
es
js
lret
pop
fwait
ss
sbb
jno
pushf
dec
pminub
gs
adc
fdivl
fldcw
pushf
test
insb
and
mov
sub
es
into
lods
in
dec
cmp
push
repnz
in
and
nop
mov
mov
lret
outsl
mov
pop
inc
js
xchg
fisttpl
mov
mov
adc
jne
pop
outsb
xchg
stos
dec
pushl
mov
cs
leave
loope
and
stc
push
inc
xchg
dec
out
repnz
xor
outsb
push
push
hlt
push
mov
loopne
pop
addl
mov
in
xchg
ret
and
jecxz
or
sub
aad
aaa
popa
mov
inc
ljmp
inc
insl
jnp
imul
in
push
pop
nop
insb
pop
fstpl
mov
lds
int3
add
push
push
mov
test
dec
mov
gs
dec
cli
xor
aam
ja
icebp
mov
roll
test
add
pop
lds
or
sbb
or
jbe
aas
jns
insl
cmp
loop
in
and
pop
stc
jne
and
icebp
xor
shr
bound
sbb
cmpsl
lcall
nop
push
ja
jl
xor
and
jge
inc
pop
leave
int3
jno
jae
repz
inc
int
jmp
inc
xor
jl
push
dec
xchg
and
in
jne
aas
adc
mov
inc
and
inc
jns
sub
sub
push
daa
rcrl
adc
cltd
and
xor
movups
in
inc
push
push
movsl
cmpsb
ds
pcmpeqd
or
jl
popf
pop
scas
out
mov
imul
aam
imul
xchg
arpl
pop
mov
pop
dec
repz
stc
pop
test
insb
in
push
pop
sub
sub
ret
mov
sub
adc
dec
fstps
mov
ret
pop
mov
icebp
movsb
hlt
test
inc
inc
push
inc
mov
sahf
ja
adc
mov
int3
pop
cltd
add
and
cmp
push
add
rorb
iret
mov
sub
inc
clc
cmp
lds
jge
jnp
popf
mov
cwtl
scas
jnp
push
call
push
sub
xor
dec
mov
push
cmp
loop
ds
aas
nop
scas
stos
xor
mov
enter
jae
out
aaa
cmp
subb
movsl
enter
push
int
insb
jmp
cwtl
fst
ds
and
and
sub
inc
xor
cmpsb
rcr
and
sub
std
inc
out
dec
sahf
dec
test
sahf
push
hlt
fimuls
jmp
repz
movsb
loop
dec
mov
cmc
mov
xor
cmpsb
lea
sti
call
mov
xchg
push
inc
idivb
ds
sub
outsb
add
push
sub
mov
push
cmp
adc
add
std
popf
dec
and
aad
dec
addr16
dec
add
push
mov
pop
test
nop
pop
or
mov
jns
sbb
test
jp
pop
pop
lds
sub
adc
xchg
mov
inc
shll
xchg
or
call
dec
outsl
icebp
stos
pop
or
cmp
int
jmp
pushf
nop
mov
pushl
je
dec
push
xlat
icebp
pop
sub
test
loop
fldenv
mov
fnstenv
mov
in
loopne
mov
bound
mov
sub
push
or
sbb
xchg
in
dec
cmp
stc
or
or
jae
mov
ret
dec
bound
dec
call
hlt
lds
cmp
mov
gs
stc
fwait
sbb
sbb
xlat
xor
pop
dec
xchg
iret
sub
test
jmp
bound
testb
js
ret
lods
lock
push
cmp
jl
mov
out
push
ss
xchg
add
mov
addl
enter
stos
mov
push
push
and
sbb
jns
cld
push
inc
in
or
subb
insl
ss
or
testb
inc
inc
xlat
inc
jle
cli
pop
pop
fldt
cmp
and
cmp
xchg
repnz
ss
sbb
xchg
dec
dec
pop
xchg
jl
jmp
stc
inc
pop
pop
stos
pop
dec
push
movsb
test
jl
pop
and
fcmovnbe
mov
out
out
shl
add
jb
dec
sahf
pusha
xor
xchg
jmp
leave
mov
adcl
rcll
lea
push
or
js
push
popa
and
leave
adc
loope
or
push
pop
pop
jecxz
or
or
dec
cmp
inc
push
dec
out
push
pop
adc
jne
jno
pop
in
aam
js
xor
adc
fadds
iret
dec
mov
jne
and
popf
loopne
sti
dec
aad
int3
lods
in
dec
mov
xchg
jmp
mov
sti
arpl
cmp
mov
testb
fsubs
cmpsl
adc
jmp
and
pusha
fisubrl
inc
cmp
out
test
sbb
mov
flds
add
test
jl
and
jmp
outsb
adc
lahf
fimuls
add
jge
cmp
daa
mov
lods
loop
popf
fmull
dec
mov
js
ljmp
add
mov
jae
adc
and
pop
shlb
cmp
cwtl
scas
sub
jae
lea
cmc
mov
fsubs
sub
mov
dec
dec
xchg
enter
mov
test
pop
insl
mov
sub
rcrb
xchg
push
movsb
fisubrl
xchg
sbb
push
dec
push
cmp
mov
movl
stos
js
push
ja
inc
lahf
fisubs
mov
and
push
movsb
mov
or
pop
sbbl
mov
sarb
or
lods
sbb
insb
jmp
in
ljmp
and
gs
sti
fildll
jae
cmp
add
inc
mov
jecxz
pop
sub
jge
icebp
and
pop
sbb
jge
scas
mov
adc
cmpsb
inc
mov
enter
repz
mov
pusha
push
push
popa
xchg
fisubs
xchg
push
dec
lods
in
lods
jno
pop
adc
movsl
adc
fcomip
mov
jge
push
lret
xor
inc
andl
jb
adc
and
mov
jl
adc
cld
jns
adc
fiadds
dec
mov
imul
xlat
cmpsl
mov
mov
push
jb
in
adc
dec
dec
jge
inc
popf
pop
jle
fdivr
arpl
fsubrs
in
add
movsb
sbb
cmp
pop
pushf
imul
pop
jmp
in
clc
lcall
jle
or
pop
dec
mov
jl
stos
cmc
lock
dec
shrb
push
mov
int3
out
inc
js
in
cmc
xor
xchg
adcl
cltd
cld
cltd
mov
ja
mov
fwait
jecxz
imul
fcom
pop
or
lret
add
fwait
daa
mov
mov
jle
mov
push
push
sahf
jne
jecxz
mov
or
out
idiv
mov
into
push
inc
rcll
and
add
test
shr
cmp
pop
movsl
lret
or
lret
call
mov
mov
test
mov
aam
jmp
xchg
cmp
movsl
or
aam
push
in
xlat
xchg
push
test
inc
nop
push
pusha
cmp
std
cmpsl
fstpt
iret
gs
loop
movsl
fnstcw
test
cs
cmp
mov
lahf
leave
cmpsb
loop
jo
cmp
pop
jb
daa
sub
andl
jp
xor
sub
push
out
insl
fmulp
sub
add
push
and
mov
xchg
mov
ret
rolb
faddl
and
dec
mov
cmp
stos
lret
or
or
mov
push
scas
adc
xchg
shrb
push
ret
in
jg
add
mov
dec
mov
test
in
sti
fcmovb
in
ret
hlt
test
mov
in
add
fistpll
test
in
pop
lds
es
pop
ds
iret
cmp
adc
pop
fstl
sahf
test
adc
mov
addb
push
in
adc
imul
call
xor
dec
test
mov
outsb
mov
test
js
js
jne
pop
xchg
inc
inc
inc
push
mov
mov
and
stc
dec
mov
fcmovb
xlat
sbb
mov
cltd
gs
pop
xor
stc
cmpsl
mov
movsl
adc
inc
mov
sub
test
imul
or
dec
sbb
inc
push
push
adc
sub
call
push
pop
push
add
mov
jmp
shrb
xlat
jno
dec
in
pop
lret
and
in
or
lods
add
sbb
in
fsubrl
add
or
sub
mov
push
pop
and
cmp
test
fbld
in
fcom
out
fstpt
xchg
leave
xor
mov
push
es
sub
inc
push
repnz
sub
clc
test
add
pop
repz
pop
arpl
mov
nop
outsb
mov
shlb
mov
pop
loop
divl
cmc
cmpsb
xchg
cmp
in
dec
shl
cmp
hlt
jno
fsubl
test
mull
mull
cmpsl
iret
call
outsl
test
push
jecxz
sbb
mov
mov
aaa
test
call
adc
push
dec
cmc
mov
add
cmp
shlb
sbb
mov
sbb
icebp
dec
das
inc
sahf
adc
push
ret
cmp
push
inc
mov
mov
adc
cmpl
mov
add
xchg
js
pop
pop
xchg
std
nop
jbe
sub
lock
sbb
ucomiss
jns
mov
push
sub
dec
and
es
in
inc
push
or
lea
xor
andb
jbe
sub
scas
jae
jmp
repnz
cltd
or
push
xlat
ja
xor
jge
or
mov
shlb
mov
jb
jnp
xor
xor
and
pop
out
loopne
jne
lret
lds
mov
xlat
pushf
add
addps
cmp
stos
rolb
dec
out
enter
fiadds
push
jge
and
fucom
ljmp
xor
or
icebp
lock
dec
lods
test
add
adc
ljmp
lret
mov
popf
out
addr16
loope
jbe
insb
icebp
mov
push
fsincos
fs
lret
fcoms
or
xchg
in
xor
push
sahf
punpcklbw
pusha
shl
and
lahf
imul
jecxz
sbb
xor
adc
dec
mov
and
pop
dec
add
jo
xlat
int
dec
ds
fucomip
orl
cltd
lret
mov
cwtl
adc
xchg
in
mov
lret
adc
lret
inc
inc
sbb
into
jbe
into
dec
into
stos
fistpll
sub
ja
call
push
into
lods
arpl
jnp
adc
push
in
stc
xor
repz
sbbl
mov
fcompl
addr16
and
imul
in
xchg
jo
xor
pushf
cld
pop
push
xor
cltd
fdivl
out
push
push
enter
push
mov
mov
call
int
xor
mull
bound
fsubrs
popf
xchg
fisubl
testb
inc
cmc
mov
int
xor
pusha
clc
push
stos
in
push
lock
push
mov
push
fisubrs
adc
pop
mov
cmp
or
jge
add
aad
lret
loope
cmpsb
pushf
jle
and
popf
leave
jns
mov
sbb
fidivl
push
arpl
gs
imul
push
in
loopne
xchg
sbb
mov
sahf
mov
inc
and
mov
rorb
or
in
push
aas
push
imul
sarb
pop
sbb
xor
loope
push
push
ds
mov
outsb
inc
pop
or
lock
ret
fnsave
sub
popa
xchg
fcoml
cmp
jmp
in
jmp
xchg
inc
nop
inc
les
jmp
int
das
mov
dec
lret
xor
xor
add
ds
and
imul
sarl
and
or
dec
jns
int
mov
and
pop
daa
jecxz
shlb
lock
xor
loopne
jg
jp
jg
add
je
mov
clc
scas
iret
mov
lods
dec
enter
aaa
stc
test
xchg
cmp
add
dec
jecxz
inc
insb
testl
xchg
psubsw
ror
dec
aaa
xchg
int3
jne
mov
add
mov
cmp
lods
or
call
mov
gs
mov
fcompl
aas
insb
mov
je
call
push
in
push
jg
and
mov
imul
into
icebp
test
hlt
push
ret
xchg
pop
pop
cmp
sbb
jmp
into
sbb
xor
cmp
push
aam
mov
repnz
jnp
jecxz
xor
mov
jnp
or
lock
jecxz
push
insb
arpl
ret
mov
movsl
pop
mov
push
inc
aad
or
scas
mov
or
iret
outsl
push
inc
adc
and
jbe
sbb
dec
rep
pop
loopne
pushf
loop
daa
ficoms
addl
cs
fiadds
push
out
dec
enter
ds
mov
stc
xor
bnd
jmp
jecxz
cltd
lods
rorb
repz
adc
mov
fbstp
movhps
pop
jle
adc
push
push
xchg
push
sbb
pop
push
adcl
dec
xchg
push
or
loopne
push
sbb
int3
outsb
scas
inc
out
xchg
ja
mov
xor
aam
sub
pop
les
push
push
cmp
scas
lods
jb
cld
pop
scas
cs
cmp
pop
addr16
sbb
mov
inc
push
aas
inc
repz
jg
cld
mull
in
outsb
imul
mov
es
fs
mov
jae
jb
sub
imul
gs
mov
mov
popf
inc
fdivs
push
or
rolb
dec
das
xchg
mov
adc
hlt
fwait
pushl
cmpsb
int
testl
in
ja
mov
das
inc
mov
mov
jecxz
mov
mov
loope
adc
sbb
inc
dec
dec
loope
or
loopne
cmp
pop
inc
push
adc
dec
push
cmp
mov
movsl
fcomps
out
sahf
iret
or
mov
dec
sub
add
or
cmp
loope
out
cmp
sbb
cwtl
cmc
mov
jl
pop
testb
mov
outsl
adc
test
xor
pop
lds
push
pop
scas
push
and
std
mov
fsub
aas
xchg
xor
sub
mov
test
add
pop
push
fsts
pusha
cld
mov
mov
movsb
stos
and
decb
xchg
mov
jno
cmpsb
inc
es
adc
lods
ret
xlat
scas
mov
push
push
or
pop
and
inc
add
leave
add
cmpsb
int3
inc
enter
outsb
mov
jne
out
testb
xor
push
xchg
rcl
adc
jp
enter
mov
mov
cmpb
sti
pop
push
fdivrs
jp
int3
rorb
xchg
mov
pushf
outsl
outsb
mov
fldt
lds
out
lock
and
inc
jp
mov
add
and
test
stc
outsb
xor
cmp
pop
mov
xor
mov
movsb
imul
shlb
mov
les
sub
cmc
adc
mov
stos
mov
xor
out
jle
mov
ja
fisttpll
and
add
lcall
scas
inc
cmova
shll
sbb
int3
xor
rcrl
add
lret
mov
xchg
in
dec
mov
and
mulb
sub
pop
dec
lds
gs
fldenv
movl
test
mov
hlt
lahf
popa
inc
jnp
pop
loopne
icebp
sbb
sbb
mov
push
leave
fisubrs
mov
loope
insl
sub
add
test
lahf
inc
jl
inc
lods
mov
cmp
add
pop
add
stos
xor
leave
std
insl
hlt
sub
sub
xchg
ss
dec
js
push
cld
js
out
sti
cli
ss
pop
outsb
ja
test
jmp
pushf
push
fidivs
push
mov
fwait
mov
inc
jle
mov
iret
mov
repnz
sar
xor
in
paddb
mov
shll
imulw
push
enter
jle
push
and
adc
inc
cmc
mov
jge
mov
andl
inc
sbb
push
jmp
cmp
and
jne
call
mov
scas
lea
adc
add
push
mov
mov
mov
and
push
jl
mov
add
sub
rcrb
sbb
inc
mov
test
test
into
out
cld
hlt
imulb
icebp
mov
jle
jae
xchg
dec
cmp
fs
mov
sub
sub
cmpsb
dec
lcall
and
ds
iret
mov
test
mov
xor
cmpl
push
xor
pop
jge
hlt
push
loop
adc
ja
sbb
aas
stos
hlt
mov
cmp
addl
js
pop
cmp
cmp
aam
add
sub
out
aam
fwait
add
xchg
imul
fucom
pushf
mov
cmpsb
mov
pop
arpl
lock
adc
cltd
enter
jb
push
out
jmp
loop
out
sub
out
and
lcall
ja
mov
mov
stos
test
fnsave
dec
jne
imul
ds
enter
cmp
test
cmp
shrb
dec
mov
xor
sti
pop
add
rcl
xor
imul
xchg
mov
dec
xchg
dec
pop
push
sbb
add
push
push
push
pop
or
xor
sub
adc
cld
cli
or
inc
pop
jecxz
xchg
in
cmpsl
dec
adc
mov
out
je
adc
fldl2e
pop
jbe
jbe
ret
adc
jb
pop
push
sarl
dec
sbb
aad
in
js
pushf
or
aam
pop
xlat
test
int
mov
scas
pop
daa
sub
roll
popa
jmp
daa
sarl
ja
push
mov
popf
mov
mov
dec
xchg
orl
scas
das
jl
out
dec
das
enter
sarl
xchg
xchg
fst
mov
inc
test
pop
scas
dec
leave
lea
and
fisubl
adc
repz
mov
jnp
cmc
jns
adc
xorl
add
imul
lock
mull
nop
cmc
lods
dec
mov
sub
outsb
xchg
jbe
dec
xchg
and
mov
sbb
add
inc
and
lods
repz
mov
outsb
lret
icebp
aad
outsb
out
es
iret
repz
mov
mov
xchg
movsb
testb
rclb
push
mov
inc
cwtl
and
mov
and
push
les
cltd
adc
lcall
in
int
mov
pop
xchg
jne
dec
mov
add
pop
xchg
push
es
shll
icebp
inc
nop
stos
xchg
and
fdivs
cs
pop
sti
sahf
sar
inc
sub
inc
push
ja
les
aad
xor
mov
and
dec
pop
adc
and
push
jle
shl
adc
sbb
inc
cli
xor
jno
or
repz
mov
cmc
add
cmpsb
push
cmc
add
adcb
mov
outsb
or
xchg
lret
jno
fdivrp
add
fdivr
mov
mov
ljmp
add
lock
mov
jp
pop
mov
cmp
in
or
jbe
jecxz
sbbb
pop
fisttpl
pop
int3
dec
lds
jp
or
xor
ljmp
xchg
movsb
ret
adc
pop
iret
adc
cmp
mov
mov
mov
jns
or
push
adc
adc
sub
mov
sub
lods
mov
adc
aas
jmp
jns
test
aas
sbb
leave
sbb
scas
mov
mov
mov
pop
cmp
stos
testb
daa
ret
incb
mov
iret
ljmp
inc
shrb
inc
imul
mov
test
addl
ja
test
xchg
scas
mov
mov
sub
pop
bound
add
mov
rcrl
dec
cld
or
jno
cmc
ja
push
xor
jne
les
scas
mov
xor
lahf
jae
sub
popa
adc
jmp
aad
hlt
popa
lcall
dec
in
jne
enter
adc
mov
cmp
inc
sbb
rep
push
xchg
mov
xor
ss
add
dec
cltd
mov
adc
ficomps
xchg
loope
add
mov
jae
movb
nop
push
mov
adc
pop
movsb
pop
pop
inc
cmp
aad
cwtl
loope
xor
push
or
mov
fwait
pop
daa
loop
mov
jns
insb
pop
and
mov
fcomi
jae
mov
push
sbb
add
outsb
ss
filds
repz
xor
loope
jo
pop
push
dec
push
fisubl
xorb
xor
dec
in
popf
pop
push
fs
out
adc
mov
mov
sbb
xchg
sbb
jg
outsb
int3
push
ficompl
xor
popf
daa
cmpsb
or
faddl
sub
insb
cmpsb
stos
sbb
cwtl
xor
pop
jle
imul
fstps
scas
lahf
xchg
cmpsl
dec
and
aam
and
xchg
push
mov
popa
insb
jmp
stos
xchg
sti
shr
push
loop
scas
sub
loopne
and
iret
jnp
daa
mov
icebp
test
ss
pop
xchg
xchg
in
sbb
mov
inc
popa
rolb
mov
lahf
jg
test
js
test
pop
inc
hlt
push
das
dec
dec
jnp
clc
out
mov
adc
add
jle
xorl
es
cwtl
add
xor
cmp
movsb
inc
sbb
ja
pop
inc
loop
sbb
in
mov
inc
loope
jo
icebp
push
cld
popf
push
fnsave
add
push
dec
dec
mov
loop
push
ret
lret
xor
mov
add
popf
cmp
iret
pop
jbe
in
and
pusha
sub
jb
add
xchg
pop
movl
lret
sahf
add
mov
into
xchg
jb
mov
xchg
decb
dec
aad
dec
aam
popa
mov
mov
mull
mov
loope
js
sub
jg
stos
imul
loope
divb
mov
jecxz
roll
push
hlt
mov
jp
fisttpl
fs
loopne
repnz
pop
or
push
cwtl
jge
je
test
sbb
xchg
pop
jg
call
jp
mov
xor
sti
es
push
jbe
cmp
mov
es
jp
dec
mov
repnz
imul
sub
jl
mov
out
or
mov
std
dec
fwait
mov
ljmp
js
inc
dec
and
adc
mov
dec
rcll
fistpl
sub
add
ret
je
shl
dec
and
xchg
or
xor
or
pop
fwait
and
hlt
xchg
loope
mov
aad
js
inc
and
jmp
fists
pop
mov
cld
shlb
mov
leave
out
or
cmpsl
into
outsl
pushf
test
sub
fnsave
jne
sub
push
aam
lret
dec
stos
adc
sub
aaa
roll
jns
fwait
xor
sbb
inc
sti
in
add
pop
push
stos
std
ss
insb
push
cltd
clc
cmpsl
inc
add
sub
and
xchg
jmp
pushf
dec
dec
js
cmp
cltd
scas
movd
dec
pop
xchg
lret
adc
dec
mov
xlat
xor
mov
mov
xchg
imul
add
pop
xor
xchg
insb
pop
xchg
xchg
jmp
push
int
push
mov
or
andl
sahf
mov
jmp
mov
push
jmp
ljmp
push
bound
xchg
movsb
pop
mov
mov
int
mov
mov
or
cmp
add
mov
pop
negb
je
jp
cmp
imul
pop
push
and
pop
nop
lcall
jo
fisubrs
push
mov
add
sub
dec
loopne
imul
out
in
cmpsl
sarb
nop
mov
daa
loope
or
pop
jle
inc
lock
push
xor
mov
cmp
mov
jl
bound
mov
fs
cmp
mov
in
mov
jb
clc
and
loopne
xchg
jle
lock
cmp
or
pushl
dec
pop
fwait
xorb
mov
cmp
jb
mov
cmp
mov
iret
pusha
mov
or
or
inc
shlb
push
lcall
ss
cmp
mov
std
mov
adc
out
mov
sub
mov
or
fsubs
imul
pop
or
into
push
cmp
add
scas
stos
icebp
scas
inc
sub
fwait
movsb
cmc
and
cmp
mov
jo
adc
stc
xlat
jns
rol
pop
cmpl
repz
or
mov
jo
prefetch
xor
xlat
push
sbb
adc
or
sahf
push
mov
aas
sarl
sub
fnsave
adc
pop
rcr
jecxz
mov
sbb
sbb
add
daa
into
stos
pusha
test
mov
push
pushf
mov
test
inc
shl
sarl
loop
leave
stc
ror
add
pusha
mov
dec
or
pop
call
inc
adc
cli
imulb
negl
cmc
xchg
inc
adc
pop
idiv
insl
mov
pusha
lret
mov
sbb
int3
fidivrl
addr16
inc
push
sbb
fbld
cli
nop
insb
inc
das
rcrb
mov
pusha
pop
xchg
ss
rorl
daa
mov
popf
mov
divb
out
popa
dec
adc
movsb
rcrb
lret
repnz
testl
in
push
int3
testl
dec
xlat
or
adc
lds
cli
push
test
inc
pop
dec
dec
gs
cwtl
or
mov
dec
mov
bound
popf
stc
mov
or
xor
add
xchg
lock
lcall
push
jnp
jns
lret
push
push
push
lock
mov
je
mov
inc
loope
lea
add
push
mov
repnz
and
cs
jb
gs
adc
mov
add
pop
fxch
dec
xor
push
mov
cmp
and
fwait
into
xchg
lea
enter
jp
lret
shlb
sbb
jbe
add
lea
bound
fadd
sbb
adc
pcmpeqb
xchg
stos
out
add
pop
adc
in
jmp
in
sbb
xchg
loopne
xchg
fsubl
aam
movsl
jle
dec
mov
fidivl
scas
xorb
mov
faddp
pushf
test
mov
test
popf
jns
out
addr16
les
push
mov
mov
pop
push
xchg
das
pop
mov
or
mov
shlb
and
xor
cmpsl
mov
push
pop
inc
das
xchg
aaa
dec
push
movsb
and
jns
data16
and
pushf
fwait
rcl
xor
cmp
mov
and
dec
imul
dec
mov
sahf
add
out
test
sti
test
xchg
popa
add
or
mov
adcb
iret
lea
in
push
or
rcl
es
sahf
pop
pop
mov
mov
lea
dec
mov
jno
je
imul
ja
cwtl
xchg
add
loopne
cli
ss
cmp
xchg
repz
mov
rorb
cltd
or
push
push
xchg
lcall
out
gs
les
mov
gs
gs
push
imul
divb
inc
xchg
sbb
pop
inc
data16
dec
mov
or
xor
xor
push
add
cmpsb
clc
insb
aad
jmp
call
lret
add
adc
popa
and
iret
leave
and
cwtl
in
dec
adc
int3
jbe
iret
xchg
int
push
fsubrp
cmc
fstp
dec
pop
mov
pop
ds
jae
frstor
add
and
into
mov
mov
jecxz
mov
repz
stc
shrb
xor
fwait
movsl
orl
push
cld
rep
test
mov
push
jb
mov
faddl
inc
loop
or
leave
loopne
cmp
addb
loope
in
adc
jno
mov
movsb
shll
xchg
adc
mov
aad
cs
aaa
filds
pusha
daa
out
dec
orb
aas
jae
aaa
jae
dec
rol
push
xor
sar
jne
mov
repz
add
jo
rolb
xor
pop
aas
and
dec
dec
loop
sbb
cli
pushf
out
jns
lret
insl
push
test
sub
jne
jnp
lret
sbb
in
scas
cwtl
xchg
inc
pop
and
aaa
xchg
mov
es
daa
pop
js
mov
sbb
mov
jp
sbb
sbb
cmpsb
mov
push
loope
xlat
push
dec
in
in
cmpsl
sbb
jmp
inc
and
push
dec
movsb
stc
and
repnz
xchg
mov
and
push
mull
or
sysret
js
popa
mov
enter
ret
xchg
out
push
fcoms
testb
mov
iret
inc
mov
shlb
repnz
xchg
push
in
push
xorb
cltd
jp
cmp
pop
ss
lret
ja
mov
movsb
jl
dec
imul
sti
repz
jge
adc
js
mov
jne
enter
pop
in
rol
jo
cltd
cmp
roll
and
and
mov
cmp
repnz
push
data16
pop
test
cltd
fistl
dec
jmp
mov
jb
dec
and
fs
mov
test
jbe
insl
shl
dec
iret
rolb
dec
mov
mov
pop
loope
cld
das
je
jns
lahf
pop
xor
bound
lea
mov
test
jne
insb
push
or
jmp
dec
lret
sub
insl
cli
push
jg
push
notl
mov
loopne
ret
xchg
mov
test
loopne
rorb
mov
push
sub
loope
or
sbb
add
mov
shrl
adc
push
loope
es
pop
sar
mov
repnz
pop
shr
arpl
add
add
cltd
out
jecxz
jge
int
pop
push
loope
mov
add
mov
shlb
sar
or
xor
rep
add
std
sbb
je
cmp
clc
int3
mov
and
sub
inc
cltd
movsl
rcrl
fcoml
test
or
xchg
jno
stc
cli
imul
sahf
repz
push
mov
scas
in
popf
pop
outsb
repnz
ljmp
mov
outsb
adc
push
jl
cmc
pop
ficomps
negl
loope
cmp
and
xchg
lret
js
sbb
cmp
lds
pop
int3
jge
sti
mov
cmc
xchg
sbb
mov
rclb
cmp
mov
pop
gs
mov
fs
imul
fstpl
jp
mov
gs
enter
loopne
pop
cmc
loopne
movsl
mov
xor
and
addr16
sub
fistps
sbb
out
sub
ja
sbb
cs
popl
aaa
cwtl
sbbl
jno
fidivrl
xchg
lds
insb
add
mov
sbb
bound
adc
testl
mov
push
sub
pushf
dec
jg
imul
pushf
add
ret
insl
add
testl
inc
inc
setge
test
cmpsl
add
scas
sti
enter
dec
dec
outsl
dec
sahf
jle
aam
fstl
movsl
mov
sbb
js
mov
mov
or
xchg
xor
test
mov
xchg
xor
test
mov
push
push
fidivrs
and
int3
sub
pop
mov
pop
testl
xchg
out
loopne
or
daa
jnp
mov
cmpsl
aad
clc
in
push
or
insb
mov
push
loopne
push
pop
movsl
insl
shl
outsl
jl
clc
bound
or
in
mov
aad
lahf
xchg
add
pop
lcall
sti
out
add
mov
inc
leave
addb
push
aaa
loope
xor
inc
in
sub
mov
sub
adc
jmp
cmp
mov
ret
jecxz
ljmp
jo
jmp
or
je
mov
jae
inc
insb
xchg
hlt
cmp
ficompl
cld
ror
adc
aas
xchg
sub
movl
xlat
adc
jns
inc
les
mov
das
lcall
mov
mov
jecxz
xchg
stos
xchg
cmp
addr16
out
mov
cwtl
es
mov
jne
bnd
jno
sub
in
add
jb
push
mov
sbb
fimuls
aas
lea
ljmp
or
xchg
sbb
mov
jnp
ffree
notl
out
in
and
or
xor
and
addb
push
mov
stos
daa
mov
push
dec
aad
pop
imulb
stos
jb
arpl
daa
jbe
pop
add
hlt
mov
out
jp
sub
inc
pop
push
cmc
cmpsb
and
xor
in
mov
sbb
inc
mov
add
lret
jno
ds
push
adc
mov
aad
aam
mov
inc
imul
mov
xor
fwait
aam
repz
dec
iret
push
sahf
outsl
dec
dec
mov
xchg
mov
inc
fabs
xor
in
imul
pop
out
sub
jae
lret
test
cmpsb
pop
loope
cmp
pop
rep
stos
test
pop
jl
inc
daa
fwait
sbb
insl
cmp
dec
sub
int
lods
push
or
dec
inc
sub
cli
xchg
push
sub
bndstx
imul
mov
sbb
pop
sub
push
test
arpl
xor
enter
cmpsl
pusha
push
sbb
iret
ret
out
adc
jge
push
jne
push
push
add
in
imul
mov
orl
cmc
stc
sbb
or
push
pop
dec
cmp
std
subb
scas
stos
popa
inc
xchg
in
imul
mov
int3
cli
daa
nop
and
cmpsb
or
cmp
mov
ja
daa
lds
movsb
cmp
repz
mov
and
xchg
push
int
push
mov
jno
cmp
push
lea
les
insb
ljmp
mov
push
pop
cmp
das
cmp
add
pop
and
and
xor
cmp
incb
mov
jle
jmp
inc
std
fwait
enter
xor
xchg
dec
xor
xchg
mov
mov
fdivp
out
jge
and
mov
cmp
xchg
movsl
jmp
fidivrl
arpl
sub
movsl
and
pop
nop
and
sbb
movsl
stc
lahf
out
daa
rcrb
adc
lcall
add
mov
cmpsb
cltd
mov
decl
cmpsl
mov
jg
push
dec
dec
sub
inc
jbe
fnstsw
adc
mov
sub
out
popa
push
sub
aas
dec
jg
jo
in
and
pop
sub
mov
dec
je
test
xor
cwtl
inc
in
int
sub
pop
sbb
sbb
pop
or
pop
mov
test
jae
addr16
cld
test
push
mov
xor
je
inc
testb
adc
or
dec
mov
mov
test
push
inc
push
insb
inc
or
cmc
or
out
cmp
pop
rcrb
pop
mov
outsb
xor
test
fisubl
pop
xchg
iret
add
ja
cmp
in
imul
jmp
pop
lods
arpl
aam
movsl
xor
sbb
fstpl
mov
enter
icebp
loope
adc
stos
xor
std
pop
jb
xor
cmp
scas
and
xor
js
pop
push
icebp
jmp
adc
pop
popa
inc
rcrl
inc
adc
mov
cld
sbb
sub
push
pop
xor
mov
sub
xorb
out
ret
adc
out
in
or
jb
addr16
arpl
add
fdivs
sbb
sahf
cmp
push
jge
cmc
sub
dec
or
shrl
mov
lds
push
mov
shlb
dec
mov
jl
sti
push
xchg
push
mov
push
fstpl
insb
enter
in
sahf
fs
jno
or
jb
xchg
lock
rolb
stos
in
inc
dec
je
out
filds
dec
cmpb
aas
mov
push
cmp
loop
outsb
aas
ss
dec
scas
fcoms
call
clc
inc
adc
or
dec
in
test
bsf
out
adc
xchg
mov
repnz
das
fcmovnu
add
stc
push
cmc
stos
inc
xchg
dec
scas
and
repz
mov
mov
xchg
stos
mov
leave
or
push
ja
push
xor
cmpsl
dec
aas
or
fisttpll
gs
adc
call
insl
aas
jo
daa
int
pop
pop
sti
and
stc
ret
cs
cmc
sub
xchg
adc
dec
adc
or
fisttpll
fs
or
mov
jb
mov
xor
push
cmp
je
jb
cld
addr16
jnp
xchg
or
fists
in
test
or
mov
pop
mov
into
jne
sbbl
fs
add
ljmp
in
int3
jb
jo
pop
add
int
ret
cmp
test
and
test
xchg
add
cs
outsl
mov
xchg
xchg
jg
in
jae
xorl
push
and
addl
cltd
outsb
outsb
pop
iret
dec
lret
lock
jg
xor
xchg
inc
and
ja
xor
aaa
ds
mov
xchg
pop
movsl
dec
dec
dec
sub
scas
adc
lds
dec
cmpsl
mov
add
xor
pop
dec
out
and
inc
mov
pop
cmp
aam
dec
sbb
cmc
lods
das
push
push
movsl
mov
adc
stos
movsb
add
push
cmp
jb
xor
enter
add
js
sub
xchg
lods
lock
scas
ror
cmp
pushf
cltd
jmp
mov
mov
mov
dec
rcl
and
pop
scas
pushf
cmp
mov
test
sbb
lret
adc
dec
and
ret
sub
mov
rcrl
adcl
rcrl
xchg
lock
gs
outsb
insl
push
or
in
fdivrl
scas
loopne,pt
inc
loope
testb
dec
jne
xlat
lret
outsb
fstpl
in
aam
xchg
mov
shrb
inc
and
enter
inc
cmpsb
jae
mov
data16
std
sbb
pop
and
xchg
outsl
add
lret
ret
adc
in
pop
mov
jae
js
cmp
fwait
insl
sub
ja
xor
mov
mov
out
push
mov
dec
mov
mov
xchg
xor
std
and
shlb
xorb
iret
daa
sub
shrl
add
mov
inc
inc
cli
ret
add
pop
insl
int3
addr16
xchg
int3
pop
jecxz
mov
cltd
addr16
std
loop
mov
push
notb
sub
into
pop
or
fwait
leave
xor
push
repz
inc
fwait
movsb
mov
jle
lcall
push
iret
insl
xlat
jle
inc
ja
cmp
js
sbb
cli
inc
mov
lock
inc
fs
and
jle
stos
add
cmp
xor
lret
fildll
lea
lods
push
inc
cmpsl
pop
sub
rorl
dec
mov
fwait
mov
add
into
and
call
push
xchg
neg
addl
arpl
out
out
testb
add
outsl
test
mov
ljmp
cmpsl
jecxz
and
orb
jns
inc
jecxz
mov
inc
mov
mov
rclb
dec
lods
push
jp
xchg
outsb
jp
lods
xchg
dec
mov
xchg
in
lcall
mov
or
loopne
adc
call
xchg
jo
adc
sub
cmpsl
negb
imul
scas
push
sahf
cmovp
mov
xchg
xchg
leave
or
sbb
cmp
jmp
mov
sub
cmp
es
xchg
dec
loope
loop,pn
or
mov
sbb
insl
inc
push
ljmp
xor
aad
jae
inc
rorl
loop
repz
fisttpll
jg
add
push
lret
or
push
push
mov
scas
les
stc
push
stos
adc
cmp
jo
js
or
call
sysenter
mov
mov
cmc
jbe
jbe
sub
into
out
test
mov
in
addr16
shrl
jbe
mov
ficoms
add
sbb
inc
mov
push
mov
xchg
xor
cmp
int
pop
adc
sub
sbb
outsl
adc
push
outsl
xchg
mov
xchg
les
add
mov
cld
or
sub
nop
hlt
repnz
or
sub
xchg
mov
push
mov
mov
outsb
push
dec
and
adc
xor
outsl
shrb
loopne
and
xchg
ss
scas
test
test
add
adc
and
sti
pop
ficoms
idivl
jmp
mov
sub
cmc
mov
adc
inc
pop
out
scas
xor
loop
les
pop
movsb
mov
or
and
jnp
cmp
call
rolb
pop
push
add
shr
jle
jno
stc
cli
imul
pop
fbstp
xorb
sub
sub
leave
loope
ret
sub
cmp
mov
mov
or
rorb
cmp
jae
mov
cmp
dec
imul
ljmpw
jg
or
pop
lds
cmp
push
xor
mov
leave
add
mov
or
jnp
xorl
int3
jne
push
loopne
push
xchg
jecxz
lea
mov
mov
stos
and
mov
or
addr16
push
jecxz
mov
cltd
sti
testb
test
dec
daa
pop
pushl
andb
mov
in
push
mov
cmp
fmuls
movsb
es
mov
bound
into
adc
pop
das
xchg
mov
aam
mov
es
rcll
clc
scas
sub
push
mov
pop
push
add
pop
mov
loopne
inc
pop
stos
lret
bnd
pop
aas
aad
pop
in
add
jle
arpl
add
jecxz
mov
pop
push
int3
dec
ss
test
xor
jnp
outsl
lods
mov
adc
jnp
dec
adc
es
sarb
mov
cld
aas
lahf
popf
mov
scas
insb
sbb
mov
xchg
cli
gs
out
xchg
xor
aad
test
pushf
push
repnz
sub
rcl
and
or
test
in
in
repnz
or
test
in
daa
orl
cltd
jbe
dec
dec
and
add
das
mov
ljmp
out
jae
jge
stos
mov
test
sahf
pop
push
test
xorb
dec
ret
sti
fcmovne
push
xor
mov
jp
cli
cwtl
aas
in
pushf
mov
clc
cli
mov
or
jecxz
enter
lret
cmp
mov
inc
push
dec
daa
sbb
rclb
std
cmp
shrb
pushf
mov
fildll
xor
das
adc
or
jp
dec
stos
ret
or
jle
or
xchg
dec
pushf
cld
jp
jecxz
mov
stos
das
int
and
enter
mov
lds
aad
fsubrs
rorl
mov
imul
cmp
lret
in
stos
les
cltd
aaa
fdivrl
aas
xchg
xchg
fistpl
repnz
mov
shlb
sbb
ss
pop
repz
jnp
mov
mov
inc
sub
repnz
adc
cmp
rorb
shll
rclb
orl
movl
mov
lock
sbb
sub
add
cld
dec
bnd
mov
inc
inc
fwait
xchg
jecxz
jp
lods
sub
stc
and
push
js
sbb
arpl
xor
mov
dec
clc
mov
pushf
lcall
and
sub
lds
ss
xchg
in
xchg
aad
mov
xchg
out
jo
mov
fdivl
ljmp
das
add
add
imul
mov
jmp
out
mov
lcall
pop
mov
inc
clc
jnp
xor
mov
jb
and
mov
jo
add
ja
addr16
xchg
pop
or
gs
loop
ret
repz
ss
pushf
out
inc
out
aaa
fimull
cmp
mov
or
adc
push
inc
in
jle
mov
xor
cli
addb
add
test
pop
and
pop
jb
pop
cwtl
jo
test
in
dec
fnstsw
addr16
movsl
mov
data16
inc
and
mov
out
insb
mov
mov
xor
push
ds
inc
push
xor
adc
or
bound
pop
dec
call
mov
std
test
cltd
inc
cltd
fmull
cmp
into
xlat
mov
loop
insb
aas
mov
jo
jg
loope
jecxz
add
lea
fisttpl
stos
fimull
sub
jno
xorl
mov
mov
mov
lcall
rolb
jbe
jbe
dec
adc
shlb
mov
push
adc
incl
outsb
and
and
xor
fstps
fbstp
sbb
loopne
inc
cs
xor
lods
inc
cld
mov
ja
test
mov
add
and
cmc
and
incl
mov
addb
inc
sbb
adcl
mov
in
jnp
xchg
pop
xchg
fnstsw
std
test
push
test
int
add
addl
xor
xlat
add
mov
push
lcall
xchg
adc
ss
pop
in
insb
ljmp
test
cmp
sub
out
sbb
pop
lock
xchg
aas
sub
call
sbb
into
or
dec
xchg
lcall
dec
or
mov
shrl
popa
icebp
mov
adc
insl
fcoms
std
cmpsb
pop
xor
ja
xchg
cmc
repz
sub
jmp
cmp
int
sahf
jp
pop
mov
or
xchg
pop
sbb
fdivl
sub
and
xchg
jmp
and
nop
fdivp
mov
sub
mov
pusha
mov
daa
mov
xor
ljmp
jmp
inc
cwtl
fs
inc
stos
movsl
xor
arpl
add
out
xchg
adc
jnp
in
dec
add
stos
std
fidivs
adc
xorb
loopne
mov
jnp
sbb
xchg
inc
or
gs
mov
test
mov
jnp
nop
popf
cmp
int
aaa
sarb
int3
lret
xor
punpcklbw
jmp
pop
mov
cmp
xchg
jle
enter
ljmp
test
cmc
mov
cmp
iret
and
jns
lcall
sbb
fisubrs
cli
sbb
out
xchg
cwtl
aam
pop
xchg
mov
fnstenv
pusha
loope
xor
add
push
movsb
cmc
jl
pop
lahf
cmovp
movb
into
fcmovne
sbb
jae
ljmp
sbb
pop
cmp
push
ss
fbld
jnp
fcompl
jno
fwait
add
roll
jp
xchg
in
pop
and
cltd
outsl
fdiv
cmove
inc
dec
push
call
and
pop
imul
add
sub
arpl
cmp
sbb
test
pushf
sub
jg
xchg
pop
ret
pop
push
cmp
lcall
pop
dec
notb
testb
dec
xchg
lods
lea
orl
loop
pop
out
adc
and
jo
sub
lret
sbb
in
ret
inc
fisttpll
push
cwtl
add
mov
jge
stos
jns
mov
outsl
add
xchg
sbb
cmp
inc
sub
add
xor
xor
and
aas
sbbb
hlt
cmpsb
cld
jae
push
pop
add
fisubrs
dec
xchg
test
inc
sub
sub
jb
xor
pop
add
sub
mov
clc
dec
cmp
popa
inc
jmp
ret
and
xchg
push
fld
jmp
xor
add
scas
mov
sub
jno
addr16
push
mov
jle
repnz
fcoml
jge
jl
rorb
mov
or
lret
fwait
adc
addb
xchg
in
test
and
shlw
int
pop
jnp
nop
jp
ret
cmp
in
mov
in
lods
into
test
bound
test
es
clc
cli
mov
xor
xchg
jmp
loope
pop
push
loop
xlat
xor
cmpb
clc
mov
je
cwtl
testb
fbld
push
popf
xor
sub
sbb
dec
xchg
scas
inc
mov
fs
cmp
pop
pop
cwtl
repz
lahf
inc
in
dec
aaa
popa
or
shll
popf
loopne
test
sti
pop
jbe
xlat
inc
jmp
stos
adc
inc
mov
inc
jle
sbb
adcl
pop
cli
movsl
or
imul
and
pop
mov
icebp
mov
clc
ret
pop
push
icebp
andb
aam
mov
jg
clc
rolb
fsts
inc
arpl
adc
mov
stc
jp
je
aad
mov
in
xor
cmpsb
xchg
cwtl
mov
es
jno
test
xchg
push
and
xor
push
jle
mov
sarb
pop
clc
mov
add
add
jns
sub
pushf
sti
push
nop
xchg
push
inc
lea
add
mov
jge
mov
cmp
xor
pop
xlat
stos
mov
pop
jl
inc
out
out
movsb
aam
jns
jae
and
sbb
xchg
inc
dec
xchg
sub
aaa
mov
fsubs
enter
data16
xor
aas
xchg
dec
das
pop
cld
ja
fadd
adc
xor
or
jnp
or
int3
inc
inc
icebp
push
popf
xchg
jo
push
jmp
inc
ljmp
int
and
or
and
jmp
pop
push
scas
xor
mov
outsl
dec
xor
mov
das
cmp
xlat
inc
fwait
sbb
mov
inc
dec
dec
xchg
out
das
sbb
mov
adc
leave
lret
xor
cltd
xchg
or
cmpsb
fildl
fwait
push
std
cli
cmp
add
inc
cmp
iret
sub
jbe
inc
mov
cs
and
dec
js
mov
es
xchg
inc
cmp
add
mov
push
lock
test
push
fcoms
pop
test
arpl
daa
into
xchg
mov
adcb
cmpb
mov
xor
shrl
dec
repz
and
adc
leave
mov
fdivrs
outsb
xchg
es
sub
movsl
in
add
add
fs
rclb
loope
repnz
xor
jno
pop
pop
xchg
xor
iret
pop
cmc
pushf
out
or
push
ja
inc
cmpsb
mov
mov
lret
jnp
and
mov
mov
enter
sbb
cli
cmpl
lahf
jbe
aaa
inc
stos
or
jne
add
testb
mov
pop
insl
inc
inc
in
idivb
mov
test
in
jg
cld
push
lret
lods
lods
movsl
dec
aas
shlb
sbb
xchg
sub
jns
out
inc
outsb
xor
pop
lods
push
cltd
push
mov
movsl
pop
ds
clc
sahf
add
in
and
iret
and
mov
mov
xchg
pop
jmp
jne
adc
outsl
jno
cmp
inc
adc
mov
add
cli
jno
aas
cmp
push
xchg
sbb
in
std
xor
sub
jp,pn
scas
arpl
fnstcw
mov
mov
out
pop
fcomp
loopne
testb
sub
fbstp
xchg
push
sbb
mov
inc
xor
xchg
std
lea
inc
outsb
or
outsl
addr16
pop
push
pop
inc
mov
lds
lods
out
adc
aam
push
mov
ja
cmp
mov
fisttpll
dec
xchg
jmp
out
add
jae
mov
int3
mov
sub
ss
movb
pop
sti
mov
ja
mov
add
jbe
pusha
mov
das
cmp
add
jno
mov
adc
int3
in
daa
inc
pop
ret
ljmp
imull
dec
mov
mov
pop
ljmp
repnz
dec
mov
cld
je
lcall
push
addb
jge
pop
idivb
mov
inc
jo
sahf
sti
jne
fisubrs
mov
ret
popf
int3
in
cltd
mov
push
imul
cld
xor
pop
cmp
lahf
mov
jb
loopne
jl
aam
inc
mov
loopne
stos
movl
insb
fdivl
pop
xor
mov
insb
std
les
cmp
jb
rcrb
xor
out
movsl
test
and
cwtl
pusha
sbb
fcomps
inc
movsl
addr16
fs
je
mov
gs
into
cmp
pop
icebp
out
mov
stos
inc
popf
add
cmp
enter
out
push
push
je
xor
xchg
aaa
xor
cmc
and
and
dec
push
cmp
pop
lock
stos
repnz
ror
inc
xlat
or
cmp
jns
inc
jae
movb
cmp
mov
cmp
cmc
pop
outsb
ret
sbb
inc
fucomi
mov
mov
aad
in
mov
sub
cmc
adc
cmc
cwtl
popa
jmp
ja
sbb
lret
fcoml
bound
stos
and
mov
decl
shll
mov
jno
test
out
jb
fbstp
sbb
repnz
inc
or
bound
push
js
xor
sbb
es
push
mov
mov
xchg
pop
leave
xor
jecxz
cmpsl
mov
mov
jp
clc
sbb
in
inc
or
bound
jne
sbb
sbb
es
lock
push
jecxz
pop
jmp
cmp
push
add
inc
inc
ja
hlt
xor
pop
js
xchg
popl
cmc
shrl
adc
inc
xor
xchg
bound
pusha
mov
lret
sub
lods
cmp
test
mov
test
sub
sarb
or
pushl
jns
mov
xchg
and
push
mov
pusha
jmp
mov
jns
adc
mov
jl
push
dec
cwtl
xchg
xor
dec
loope
out
mov
cltd
mov
pusha
lds
jle
pop
and
sub
out
or
mov
into
clc
sub
roll
icebp
data16
dec
mov
pusha
pusha
mov
sub
mov
pop
vpsllq
adc
jmp
mov
add
xchg
mov
lahf
insb
xor
nop
fidivrs
rol
psubusb
pusha
lret
scas
lods
jns
stos
imul
xor
clc
xorb
lods
sbb
cmp
mov
or
cmp
fidivrl
jne
orl
fucom
jle
cs
or
nop
add
testb
dec
aas
fs
imul
pop
xchg
loop
rcrb
jmp
dec
xchg
xchg
inc
rolb
mov
jecxz
leave
and
jecxz
adc
xorb
add
xchg
push
hlt
push
flds
mov
popf
inc
mov
or
or
aam
mov
stc
cmp
jp
rclb
das
pop
aas
loop
push
test
inc
scas
test
mov
and
xchg
fwait
lret
cltd
ja
sub
dec
loopne
fnstenv
rcr
xor
leave
ret
jp
mov
dec
and
jge
inc
test
incl
sub
and
mov
scas
test
pusha
fsubp
xlat
cmp
pop
inc
fistl
xchg
dec
push
and
data16
mov
mov
cwtl
dec
loopne
jno
or
and
dec
and
pop
sbb
rcrl
jl
inc
mov
rorl
dec
pop
mov
push
aaa
mov
repnz
movl
adc
addb
orl
pusha
cmp
adc
add
and
outsb
push
push
aam
xchg
lock
cmp
stc
mov
lret
xchg
mov
or
ljmp
cld
mov
ret
mov
adc
jbe
movups
fldenv
xor
pop
aaa
ss
pop
xchg
add
and
mov
pop
cmp
fs
imul
add
insb
das
sbbl
dec
dec
dec
fisubrl
lcall
mov
test
ret
iret
push
xchg
into
mov
popa
mov
shrb
jo
jmp
adc
out
or
nop
cmpsl
mov
nop
int3
jmp
push
push
jne
cmpl
movsl
insl
add
dec
les
fs
sbb
les
jmp
scas
dec
pop
outsl
dec
cltd
mov
add
xor
add
shl
inc
cmp
add
lods
outsl
mov
hlt
shll
cmpsl
repz
lcall
rorb
lea
in
inc
int
add
subb
mov
push
add
cmpsl
call
std
or
cli
sub
lds
cmpb
push
insb
jge
pushf
xor
cmp
data16
enter
xlat
ss
in
xchg
dec
in
pop
or
sahf
out
cmpsb
insl
addb
push
mov
mov
cmp
int3
add
xchg
sub
shll
pop
scas
loop
dec
cmpsb
add
or
test
mov
xlat
ret
mov
jmp
stc
lcall
and
mov
mov
jae
xor
ss
movsl
xchg
ljmp
cmc
add
mov
icebp
fistps
fwait
cmpsb
imul
lods
xorb
xchg
in
add
ja
pop
jnp
lcall
sbb
mov
and
bound
addr16
mov
fisubrs
fcom
push
dec
xchg
pop
pushf
hlt
sbb
ret
pop
xor
xor
dec
fcomi
and
push
mov
jnp
imul
mov
pop
xchg
fisttpll
lods
aam
push
ret
ret
testl
sub
data16
mov
and
cli
xor
xorb
mov
les
aas
sbb
cwtl
std
insl
enter
dec
ja
or
leave
sarb
jbe
into
mov
mov
jnp
test
sub
cmp
stos
rcrb
mov
lahf
pop
inc
jne
clc
cltd
fisubl
mov
jl
jbe
adc
inc
fwait
lods
mov
mov
sub
imul
out
in
jp
fwait
mov
repnz
cli
mov
out
xchg
addr16
dec
inc
sbb
shrb
push
mov
int
addr16
dec
pushf
clc
sbb
push
lods
mov
lret
cmpsl
dec
mov
xor
pop
js
xchg
ljmp
mov
and
xlat
nop
test
push
push
pop
clc
mov
jp
mov
xchg
pop
pop
pop
test
in
rcll
push
mov
sub
cmpsl
out
sbb
out
sar
mov
jl
push
shll
out
jmp
fisttpll
xchg
sbb
fwait
or
mov
push
nop
xchg
int3
orb
or
inc
out
mov
data16
and
mov
or
lret
xchg
in
xor
inc
adc
adc
loopne
cmc
outsb
mov
ljmp
enter
cld
add
out
inc
push
mov
in
ljmp
cmpsl
mov
mov
out
push
dec
and
call
inc
fbstp
pop
pushf
jg
cmp
cmp
out
sub
das
pop
insl
jg
cmpsb
dec
jg
icebp
fxch
add
nop
mov
xor
dec
pop
push
add
iret
pop
mov
mov
xchg
pop
call
subb
movsl
cmp
mov
mov
or
xchg
add
dec
jnp
push
popa
xor
jg
mov
bound
sub
jle
fmuls
jbe
xor
sarb
cmp
jbe
loopne
cmpsb
mov
cmp
nop
insl
stc
inc
cli
nop
add
cmp
loope
push
cmp
movsb
in
cli
pop
std
gs
lcall
std
sub
jbe
mov
xor
pop
mov
ror
fimull
xchg
sub
lds
cs
scas
in
add
lods
sub
in
into
push
cltd
jns
cmp
mov
repnz
outsb
dec
sbb
inc
sbb
mov
clc
test
mov
vmovdqa
rcll
pextrw
adcb
lock
movsb
inc
repz
les
jl
add
sub
pop
xchg
mov
jp
out
iret
dec
jae
outsl
or
mov
mov
jno
and
push
push
push
add
stos
shlb
dec
addr16
enter
scas
pop
dec
pop
add
xchg
cmc
push
repz
call
jmp
cmp
int3
cltd
shl
jb
sub
jp
jecxz
push
fdivs
in
xchg
outsl
sbb
std
pop
addr16
adc
pop
mov
dec
sbb
adc
stos
adc
jo
push
sbb
add
outsl
int
push
jl
inc
imul
scas
sbb
cmp
pop
test
mov
movsw
push
sbb
jl
inc
sub
dec
in
test
sbb
in
mov
sub
std
movsl
lock
sti
sbb
sbb
xchg
xlat
mov
dec
pop
push
repnz
shll
mov
sub
or
push
mov
mov
mov
lods
inc
in
pushf
push
and
sbb
loopne
xor
cmp
xchg
jbe
pop
adc
lods
ja
enter
push
je
nop
jb
push
and
push
sbbb
mov
inc
neg
jmp
mov
jmp
enter
es
popa
cmp
push
push
mov
xor
or
push
and
mov
in
pop
cmp
outsb
repnz
mov
jl
dec
dec
imul
das
pop
cmp
in
sub
push
dec
inc
mov
or
mov
in
not
insb
pushf
mov
or
dec
scas
call
loope
sbb
inc
nop
xchg
pushf
test
inc
in
cs
push
das
mov
xchg
pop
push
cmp
hlt
mov
jo
pop
mov
add
enter
sub
insb
and
adc
fs
xchg
dec
mov
mov
ret
aad
jae
jnp
xor
add
enter
rolb
jp
sbb
test
mov
lahf
stos
pop
lea
mov
sahf
test
shr
add
fadds
pop
and
sbb
leave
fcmovnbe
fdivp
pop
fwait
jae
sbb
jne
xchg
push
rcr
inc
xor
gs
lret
cmpsw
xor
fneni(8087
pop
fistps
fidivrs
cmp
mov
jecxz
dec
int
cmp
mov
imul
mov
sub
fisubl
shlb
mov
das
idivb
sbb
fsubrs
clc
xor
rcr
es
gs
or
lea
pop
and
or
cmp
pop
cmp
sahf
inc
fcomi
inc
scas
ret
add
loopne
inc
orl
pop
or
iret
repz
addb
lds
scas
mov
xchg
lcall
adc
pusha
adc
cmp
inc
inc
fnstcw
sarl
lcall
or
daa
mov
cwtl
lahf
mov
test
inc
shrb
imul
mov
mov
ret
xor
mov
jne
cwtl
and
push
hlt
mov
ljmp
push
test
dec
and
add
icebp
push
add
jle
pop
outsl
xchg
or
sub
aas
sbbl
xchg
mov
dec
lds
or
push
pop
pop
dec
jbe
add
mov
xor
pop
pop
mov
rolb
add
push
mov
sub
mov
dec
adc
lea
popf
pop
idiv
in
js
test
xor
dec
and
add
shr
leave
dec
out
sub
test
inc
dec
add
addr16
in
push
sub
shll
and
xor
movb
fldenv
pop
pop
mov
xor
mov
in
add
sub
jae
arpl
inc
or
fs
stc
sar
out
xor
sub
adc
pcmpgtb
inc
adc
mov
push
rol
sub
mov
adc
push
and
pushf
pushf
xchg
mov
push
push
adc
cmp
xor
test
jne
ja
pushf
jb
insb
or
pop
lret
cli
lahf
fwait
jmp
sub
mov
stc
fldcw
xor
push
negb
sub
shll
clc
test
cmp
subb
cli
inc
scas
insl
mov
sub
jg
inc
leave
outsb
sub
jle
scas
mov
push
mov
sub
add
cmp
sbb
jnp
incl
cltd
jae
pop
push
and
cli
rorb
push
mov
push
pop
test
xor
insl
scas
and
push
and
aaa
xchg
test
jle
shl
push
xor
out
sub
adc
xor
xor
lcall
sub
popa
cmp
int3
imul
or
icebp
jne
and
mov
push
mov
jne
jl
pop
out
sbb
cmpsb
dec
mov
jae
xchg
cmpsb
adc
and
xchg
push
lods
add
iret
xor
mov
ficoml
loop
es
das
sbb
mov
push
int
adc
rcll
inc
stos
push
or
push
xor
stc
sub
sub
adc
adcl
mov
fdivp
jge
pop
popa
cmc
fdivs
push
lret
ljmp
mov
xchg
push
jecxz
fadds
and
rolb
mov
inc
aas
fcmovne
lret
cli
mov
pop
inc
cld
fstpt
push
or
stos
lret
cli
mov
dec
cs
inc
pop
lret
and
pop
xchg
lods
xor
fstps
loope
scas
sbbb
std
in
pop
arpl
xchg
ficomps
insb
hlt
push
mov
loop
test
test
js
stos
mov
imul
xor
jle
mov
cmp
add
cld
or
out
cltd
jno
and
and
loop
adc
lcall
addr16
decb
outsb
push
ss
mul
xchg
ret
clc
out
lahf
sbb
cli
out
shr
or
nop
ret
stc
pop
xor
push
test
clc
pop
xlat
sub
ss
out
data16
call
mov
in
bound
or
cwtl
orl
cli
insl
pop
mov
dec
mulsd
or
ret
test
cwtl
imul
imul
mov
cmpl
mov
xor
jnp
xor
xorb
cmpsb
pop
scas
mov
fsubrl
sub
shlb
imul
jbe
in
mov
add
lods
andb
mov
adcl
lahf
add
lea
inc
push
and
push
imul
or
pop
cmp
mov
sub
push
sub
add
jbe
imul
flds
insl
stc
stc
arpl
leave
movsb
adc
mov
or
jnp
hlt
jae
fisubrl
cld
ficompl
xchg
clc
rcrl
out
sub
cmp
adc
or
sahf
mov
push
lea
and
push
push
jne
fcomps
pop
das
jp
adc
shr
add
adc
or
pop
add
call
sahf
loope
jl
sub
mov
push
dec
movsb
xor
or
lods
jge
mov
test
je
jp
int3
or
bound
mov
pop
cmp
push
out
and
sub
or
mov
dec
call
mov
add
mov
jns
shll
out
jae
mov
stos
cwtl
mov
rcr
pop
xchg
jbe
icebp
push
jne
insb
jae
mov
push
mov
call
pop
repz
inc
out
cmp
shl
mulb
dec
dec
int
enter
mov
sbb
out
insb
pop
sub
lds
adc
jo
cmp
jg
pop
inc
out
jo
fldcw
movsl
js
push
and
xor
fcompl
mov
sub
pop
cld
in
and
pop
push
add
call
jbe
out
push
into
add
stos
push
out
add
pop
sub
imul
push
es
or
lahf
xor
fnstcw
xchg
inc
xor
or
or
js
test
cmp
pop
inc
cmpsb
shlb
out
or
outsl
mov
stc
aad
xor
hlt
stos
cmp
mov
sub
pop
pushf
cmpl
jo
sahf
dec
daa
leave
push
cmp
lock
pop
push
out
xor
jae
or
sub
icebp
mov
sub
inc
push
fdivl
popf
add
pop
arpl
pop
cs
mov
leave
dec
mov
jbe
dec
cmpsb
sub
jns
mov
iret
lret
fmull
fdivl
xchg
or
pusha
lods
cmp
push
adc
fiadds
ja
or
test
adc
in
dec
mov
push
stc
fsub
aam
add
xlat
and
push
sbb
test
sub
pop
cmpsl
add
cmp
aad
popa
xchg
stos
cltd
push
adc
sub
shll
dec
and
in
and
lea
push
push
popa
pop
cmp
cmpsb
je
aad
pushf
stos
pop
mull
jae
push
xchg
pop
push
sbb
out
ja
jae
aad
je
aaa
jne
mov
xchg
pushf
jne
push
insb
mov
push
add
inc
and
sti
dec
jle
lret
cmpsb
leave
mov
pushf
pop
xor
dec
shlb
xchg
pushf
iret
test
mov
je
mov
ret
mov
mov
out
mov
sbb
das
jno
mov
sub
and
push
jmp
xor
mov
xor
rclb
ret
jne
adc
arpl
shrl
mov
in
fsts
ret
ja
pop
popf
mov
shlb
jno
adc
xor
das
aas
popf
faddl
xchg
loop
lock
inc
sbb
jl
fidivrs
aaa
aaa
bnd
test
mov
movsl
push
sbb
fwait
mov
and
stos
jno
jge
push
aaa
pop
dec
cmpsl
cld
push
xor
cmp
mov
aam
xor
xchg
xlat
xchg
out
adc
je
push
cltd
cmpsb
pusha
lret
mov
andb
orb
push
mov
ds
mov
adc
cmpsb
pusha
inc
inc
iret
jg
jge
ja
adc
or
mov
mov
adc
xor
sub
xchg
pushf
xlat
jmp
les
push
sarl
addr16
push
pop
andb
dec
pop
lahf
test
sub
imul
add
push
mov
pop
jns
dec
test
push
lds
inc
push
aaa
or
out
dec
dec
and
jno
paddsw
popa
cmp
test
cmp
cmp
jle
lock
push
ljmp
lods
add
push
and
test
hlt
xchg
cmp
lret
jle
out
ret
int3
push
cli
pushf
cmp
push
or
pop
daa
xor
ja
cwtl
pop
incb
and
sbb
lock
mov
sti
or
std
in
sbb
add
jl
sub
dec
pushf
push
inc
cmpsl
jnp
or
repnz
insb
sti
pop
jae
jne
fwait
xchg
mov
cs
int3
in
push
shrb
jne
out
shlb
dec
cmp
or
xchg
js,pt
pop
pop
jp
push
icebp
int
sub
je
cmp
test
pop
popa
adc
sbb
push
fbstp
mov
sbb
lahf
repnz
adc
int
out
orl
fsubs
lcall
inc
repz
push
std
mov
pop
pop
lea
xchg
pop
lret
mov
mov
or
rcl
sbb
shrb
jp
pushf
push
pop
add
fwait
cli
mov
filds
in
test
pop
xchg
loop
push
sbb
in
pop
fchs
loopne
xor
or
outsl
inc
or
add
add
test
mov
xor
scas
pop
mov
lcall
dec
jnp
mov
cmp
mov
mov
jmp
push
sub
sub
out
mov
negb
imul
movsb
fdivrs
pop
dec
call
mov
insl
inc
into
cwtl
nop
mov
jne
mov
add
iret
aad
int
sub
ds
in
bound
daa
mov
imul
push
jbe
sub
lods
mov
xchg
jnp
lcall
sub
insb
fdivrs
incl
in
push
and
loopne
push
clc
or
clc
pop
lcall
pop
out
jecxz
insb
cmp
mov
mov
add
test
adc
mov
sub
fsubs
insl
and
pop
add
lds
adc
sub
test
and
icebp
scas
inc
and
inc
popf
xchg
mov
mov
xchg
stos
addl
cmp
mulb
gs
adc
cmp
mov
add
add
imul
fidivl
pop
jbe
sub
shlb
jecxz
scas
sub
lods
pushf
repz
subl
jb
lds
mov
sti
sub
pop
shr
sbb
roll
fwait
jns
or
mov
lahf
adc
xchg
nop
ds
cli
ffree
mov
push
stc
adc
inc
push
cmpsl
sbb
cmp
push
add
test
cmpsb
xchg
cmp
xchg
xchg
pop
pusha
add
ror
hlt
sbb
fnstenv
or
test
shrb
or
xchg
stos
dec
es
jmp
test
fcomip
das
shr
dec
sub
xchg
inc
mov
nop
imul
daa
xchg
loop
add
jmp
mov
add
mov
stc
insb
inc
cmp
pop
pop
mov
jecxz
jmp
test
adc
roll
in
pop
and
jmp
in
and
xor
leave
fwait
shlb
xchg
loope
mov
add
decb
jecxz
inc
xor
jg
insl
xchg
push
dec
fistpll
xor
cmpsb
stos
push
cmp
stc
jne
xsha1
cmpsb
dec
inc
sbb
out
leave
pop
and
leave
inc
push
xor
dec
or
jmp
in
inc
dec
mov
cli
mov
hlt
xorl
aas
adc
out
jl
enter
xchg
movsb
sbb
mov
pop
out
mov
inc
jge
inc
pushf
aad
and
test
lods
and
inc
icebp
jno
push
test
adc
xor
pushf
cwtl
jg
rcr
adc
xor
dec
repz
ret
mov
outsb
popf
adc
gs
out
nop
pop
push
sub
call
adc
out
xchg
and
pop
std
shr
lods
fcoml
cwtl
xchg
adc
lods
loope
inc
sti
and
in
push
gs
lret
or
lcall
cmp
adc
ljmp
jne
add
sbb
dec
jge
push
sbb
cmp
aas
das
cmp
mov
repz
out
xor
push
mov
mov
ret
pop
mov
stos
jbe
fists
insl
les
add
fstpl
sbb
ret
mov
mov
jge
cltd
outsl
push
sti
mov
sub
mov
lahf
push
cli
inc
es
inc
push
mov
loope
adc
inc
dec
aad
xchg
fs
jb
daa
xchg
call
add
mov
add
loope
mov
jg
and
ret
or
test
ds
dec
sbb
cmc
es
out
cmp
dec
mov
shlb
mov
xchg
and
dec
xor
in
ret
sarl
adc
jmp
mov
scas
jns
jecxz
in
push
inc
ret
xchg
pop
mov
mov
cmp
mov
sbb
sub
hlt
sti
push
jnp
cmp
out
mov
push
sub
xor
ficomps
jle
adc
push
cwtl
ljmp
mov
jmp
adcl
jl
js
shlb
cltd
shr
lret
daa
adcb
push
gs
ret
and
and
je
mov
xchg
dec
push
or
mov
gs
out
pushf
in
lds
jne,pt
flds
xor
loop
dec
imul
loopne
clc
iret
mov
sbb
icebp
movsb
cmp
sub
jp
nopl
add
mul
pop
pop
and
in
scas
push
cmp
dec
and
movsl
push
fildl
stos
outsb
scas
movsb
out
insb
dec
les
cmp
in
nop
add
ja
xchg
sub
sbb
push
outsl
jmp
inc
xchg
lock
cmp
popa
mov
test
iret
cld
lea
mov
or
jge
pop
test
pop
and
dec
stos
dec
push
clc
add
leave
sub
push
es
pushf
cmp
gs
xor
gs
xor
xor
xchg
je
rcrl
dec
sub
and
aam
add
js
loopne
repz
inc
mov
mov
pop
andb
in
jns
pop
dec
or
insl
repz
movsl
lods
fs
fcompl
cmp
mov
in
clc
push
stc
sarb
xchg
flds
cs
dec
lret
js
leave
inc
lds
addr16
into
ja
icebp
loope
mov
cmc
mov
adc
pop
ja
mov
sbb
push
loope
pushl
popf
out
popf
mov
inc
sub
sub
jb
mov
daa
push
out
scas
ljmp
and
pop
pop
mov
popa
sub
scas
out
mov
das
in
cmpb
aas
repz
add
enter
in
push
mov
repz
clc
adc
imul
and
retw
dec
mov
arpl
sub
cli
inc
jecxz
cmp
xor
sti
dec
mov
stc
stc
inc
push
shlb
cmpsl
or
js
xchg
mov
iret
jg
fstps
jecxz
mov
pop
mov
jb
call
scas
out
adc
push
test
lcall
add
mov
stc
lahf
lods
sbb
aad
jb
lds
mulb
ret
testb
xlat
in
fs
push
mov
loop
cmpsl
dec
add
imul
mov
sbb
cs
lods
mov
mov
jmp
jl
cmc
lcall
jecxz
pop
push
sbb
lret
jle
and
int
and
sub
inc
lret
cmc
adc
xor
or
hlt
or
or
out
enter
cmp
cs
lods
ja
cmp
test
inc
sbb
cmp
outsb
xchg
mov
int
loop
and
adc
icebp
push
int3
outsb
jecxz
push
ja
mov
cwtl
fisttpll
add
fwait
repz
inc
push
stc
mov
inc
adc
bound
adcl
gs
mov
or
call
xor
hlt
mov
push
jae
ljmp
mov
dec
inc
xchg
cmp
scas
or
sarl
sarl
testb
push
mov
pusha
fs
cmp
cmp
add
add
sbb
xchg
fdivp
imul
das
cmp
cmp
push
repz
popa
add
pop
arpl
scas
aas
out
cmp
push
test
push
arpl
xchg
setge
cmpsl
mov
mov
stc
sbb
xchg
dec
jo
or
mov
jbe
cmpl
clc
test
loope
insl
ret
xor
inc
stc
fidivs
dec
sbb
push
pop
push
shll
or
data16
mov
movsl
push
aas
xor
xor
cmp
lds
repnz
and
repnz
add
lds
imul
xor
push
mov
xor
cmpsl
inc
sbb
inc
mov
inc
cmpl
lret
lods
xor
fists
call
push
mov
fs
loop
cmovbe
aam
test
pushf
ss
jb
ret
push
pop
mov
sub
dec
popf
jb
ret
inc
imul
loopne
xor
repnz
into
pop
cmpsl
mov
mov
shlb
repz
pop
arpl
mov
mov
xchg
or
push
notl
lcall
jle
cmpsb
cmp
xchg
jmp
fdivs
fcoml
fldt
xchg
fdivrl
and
test
mov
mov
cmp
sbb
sub
faddl
out
scas
xchg
cs
cld
dec
call
loope
sbb
enter
and
add
xchg
test
jmp
and
stos
xor
sub
jge
repz
xchg
push
push
xor
imul
and
enter
ds
push
jno
loop
mov
arpl
movntq
pop
push
in
xchg
shrl
test
cwtl
sub
sub
fsubs
cs
dec
sub
push
jmp
mov
into
aad
jne
sbb
jb
mov
jno
adc
mov
or
js
fnstcw
insl
vrcpps
pop
add
popa
dec
aam
pop
and
inc
into
out
xor
outsb
jp
jne
imul
repz
leave
bound
add
cmp
sahf
shrb
mov
sbb
andl
repnz
insb
imul
mov
sbb
lods
mov
jo
and
mov
insb
mov
jnp
mov
int3
pop
adc
cld
inc
mov
inc
sbb
xchg
cli
mov
mov
int
sbb
jle
sub
jo
lret
add
movsb
loope
add
cwtl
loopne
jl
lock
pop
pusha
xchg
mov
dec
xor
xchg
push
js
push
rcrb
shrl
pop
xchg
xchg
je
jl
jno
xlat
repnz
leave
in
push
pop
es
stos
cmp
ss
ret
pop
sahf
mov
jg
sbb
xchg
jns
cltd
jae
mov
mov
popa
and
mov
movsb
rcr
dec
sub
mov
inc
pushf
push
mov
lcall
pop
add
fidivs
push
inc
inc
mov
loop
clc
addb
jbe
push
mov
and
push
and
shlb
dec
ss
insl
xor
cltd
addr16
inc
enter
adc
mov
lods
mov
imulb
aad
sbb
xor
sbb
in
lahf
cmp
and
ret
es
popl
jo
jbe
fmull
and
adc
mov
jne
daa
dec
ret
inc
lods
sub
mov
les
dec
pop
pop
stc
jae
notl
pop
push
and
arpl
and
lea
addr16
xchg
mov
stos
bnd
addl
les
xor
sub
data16
and
mov
lret
out
int
fcoml
add
dec
loopne
dec
negb
mov
imul
repz
push
mov
insl
cli
cwtl
mov
cld
push
mov
pusha
dec
xor
mov
push
pop
js
mov
dec
adc
inc
add
into
sub
dec
sbb
and
ror
jne
cmp
push
cmpsb
mov
push
lock
mov
xchg
pop
dec
pop
enter
xchg
lods
dec
lret
scas
cmp
mov
inc
sub
and
dec
fadd
cmpb
cmpsb
mov
stos
hlt
movsb
mov
ror
mov
cwtl
mov
and
jecxz
rcrl
xor
cli
add
cld
sbb
sub
inc
fimull
sub
popa
mov
addl
sub
pop
fmuls
mov
pop
fimuls
fcmovu
divl
xor
je
push
xchg
dec
arpl
pop
xor
or
fs
mov
mov
add
or
cmp
fs
incb
xchg
leave
push
add
push
out
insl
dec
std
xchg
mov
sub
cli
loop,pt
jb
sbb
daa
sbb
dec
xchg
imul
sets
std
leave
cmp
testl
sbb
lock
insl
mov
or
dec
into
cmp
enter
dec
out
aaa
cli
aad
fnstcw
enter
inc
loopne
mov
outsb
enter
jmp
xor
in
adc
in
or
mov
add
xlat
out
xchg
and
cltd
pop
sbb
adc
mov
sub
in
xor
roll
pop
jg
xor
dec
cltd
push
jne
xor
push
mov
jbe
jno
xor
int3
push
push
jmp
out
mov
shl
mov
jb
push
jnp
int3
rorb
gs
std
push
ret
add
cmp
lds
jle
push
lahf
xor
pop
test
sub
or
and
cltd
aam
loope
inc
mov
add
mov
pop
rcrl
push
adc
xchg
inc
adc
bound
sbb
fsubrs
ss
pop
pop
mov
push
popa
pop
jg
cmc
ljmp
mov
clc
out
or
mov
hlt
dec
jl
daa
bound
cmp
pop
jne
pop
enter
dec
insl
sub
push
mov
es
pop
clc
cmp
pop
push
and
cs
outsb
or
mov
addl
cmc
or
out
mov
and
mov
dec
push
es
push
cs
aam
das
pop
or
inc
jbe
pop
inc
jnp
and
dec
inc
nop
inc
dec
mov
and
sub
jle
mov
push
cmp
sub
sbb
push
test
imul
sahf
sti
daa
jns
sbb
stc
push
sub
mov
ljmp
sahf
imul
fsubl
pop
cmp
or
jo
inc
andl
outsb
in
add
mov
shlb
and
dec
notl
jmp
push
loop
std
fs
mov
or
cli
push
sti
cmp
in
push
and
leave
push
push
dec
mov
xor
push
idivl
cmpsb
imul
jmp
iret
iret
loop
pushf
adc
xchg
movsb
adc
je
add
cmp
ret
out
xor
mov
dec
mov
jnp
lock
fnstsw
mov
mov
lahf
out
fdivl
mov
mov
jnp
pop
aad
lret
push
pop
inc
add
in
push
lcall
stos
jmp
push
flds
jbe
or
mov
insl
ljmp
xor
fbstp
movb
mov
test
pop
or
lcall
add
mov
jmp
repnz
push
fadds
push
fldl
adc
xchg
xor
aas
or
jb
nop
jnp
xor
and
pusha
mov
inc
leave
cltd
xchg
pusha
adc
xchg
pop
sub
sbb
dec
cmpsb
sbb
shlb
jp
cmp
rcll
jg
add
pop
imul
test
movsl
push
test
xor
scas
and
rcll
popf
mov
sbb
jp
inc
xor
test
xchg
inc
and
dec
mov
jbe
xchg
into
mov
xor
xor
loope
ljmp
and
daa
add
loopne
jne
idivb
cmp
das
insl
out
fidivs
lds
rcll
and
popf
or
rcr
inc
mov
jb
jne
mov
pop
push
xor
cmp
js
cltd
sub
ss
push
in
jbe
pop
out
loope
shrl
imul
std
mov
cltd
dec
xchg
test
xor
imul
sub
imul
imul
push
movsb
fsubp
xchg
arpl
adc
js
test
xchg
lahf
mov
sbb
lret
out
lcallw
pop
mov
imul
ret
and
push
adc
adc
bound
ss
ja
dec
pop
adc
ds
push
inc
ljmp
push
cmp
push
dec
inc
xor
daa
jo
xor
subl
out
xchg
hlt
outsb
or
jnp
pushf
stc
mov
ret
lea
mov
add
mov
xor
shl
jbe
inc
shll
dec
jbe
movsb
loop
adc
fistpll
sub
jbe
arpl
je
loope
cs
sbb
inc
mov
sub
lods
sub
inc
fildl
xor
mov
mov
das
insb
jb
xor
jp
jle
xor
push
shlb
gs
jecxz
dec
mov
pop
sarb
mov
out
fwait
pop
mov
enter
cld
mov
insb
jns
repz
aaa
adc
pop
aaa
jb
cmpl
pop
or
pop
aad
ret
sub
loope
loopne,pn
in
js
xchg
mov
fmuls
out
insb
sub
setns
sbb
add
js
stc
adc
push
orb
mov
adc
shrb
dec
lret
jge
imul
mov
popa
pop
pop
mov
aam
xchg
mov
call
ret
push
push
sbb
mov
addr16
cmpsb
int3
mov
or
pop
into
loope
sahf
les
mov
out
xlat
orl
lret
fdivrl
push
add
mov
loop
inc
sbb
xchg
pop
or
shrb
xorb
je
jnp
xor
ljmp
sub
mov
das
cli
mov
push
jno
xchg
lret
ret
mov
ret
xor
lea
movsl
fisubs
pop
fisttps
repnz
mov
popa
scas
pop
and
popa
inc
push
pop
mov
popa
inc
out
adc
sub
lds
adc
in
sbb
insb
sbb
shlb
mov
add
ds
jp
sbb
lods
shll
lea
ret
outsb
mov
data16
fwait
subl
inc
mov
inc
cs
jb
icebp
sub
ss
push
lods
pop
jp
inc
sub
outsb
insl
mov
mov
popf
inc
dec
aaa
imul
lret
dec
and
fildll
cmpsl
xchg
cli
outsl
fdivp
or
cmp
and
dec
ds
push
cmp
test
sti
or
imul
jnp
popf
fcmovnu
hlt
sub
lret
cmp
mov
cmp
sub
das
ds
cmc
cmp
popf
mov
out
xchg
pop
adc
mov
pop
rcl
mov
push
xor
mov
mov
inc
lock
lods
cmp
pop
iret
mov
mov
push
cwtl
shrb
push
adc
jecxz
lock
dec
int
inc
push
sbb
sbb
push
mov
stos
inc
mov
push
mov
xchg
fsts
mov
imul
stos
sbb
mov
daa
insl
mov
jl
in
pushf
leave
mov
out
call
mov
rolb
idivl
push
iret
imul
leave
jge
insl
into
insb
cmp
loopne
mov
jne
popf
shlb
in
jns
fisttpll
sti
jmp
mov
xchg
xchg
iret
push
push
push
sbb
mov
cmp
outsb
adc
ficomps
inc
ja
jb
add
dec
ret
push
mov
test
aaa
mov
fs
mov
push
mov
ret
iret
jmp
pushf
out
pop
in
pop
push
pop
push
add
inc
iret
call
pop
cmp
insb
lcall
hlt
das
cmp
sbb
rol
xor
xchg
mov
xor
mov
pop
mov
push
sub
jbe
pop
lret
data16
mov
inc
out
lods
clc
mov
xchg
and
add
rorl
jg
mov
aaa
mov
insl
push
inc
loope
int
pop
pusha
inc
aas
insl
pop
adc
and
pop
xor
jo
lods
mov
xchg
mov
ja
mov
jbe
movsb
pop
int
mov
sub
loope
sbb
dec
jp
push
test
cmc
inc
jns
movsb
jecxz
fbld
outsl
lods
sahf
add
dec
insl
mov
and
jl
push
inc
jae
xchg
scas
rorl
push
std
xchg
mov
outsb
xacquire
in
adc
cmpsl
outsb
out
popf
jl
sbb
lods
dec
jns
mov
cmp
push
out
xchg
dec
clc
jl
mov
pop
dec
xlat
and
dec
inc
push
adc
ss
xchg
dec
les
enter
sbb
cmp
inc
xlat
adc
mov
lcall
stos
inc
mov
add
push
out
fs
mov
mov
fisubrs
dec
ja
sub
outsl
inc
fwait
loopne
fidivrl
adc
mov
into
xor
repnz
enter
in
fidivs
or
stos
xchg
mov
dec
push
and
std
dec
js
aad
fimull
xchg
jb
mov
pop
lret
add
and
pop
sahf
cmp
xchg
or
scas
incl
pop
cmpsb
pop
es
clc
sbb
shlb
jge
or
sub
test
jbe
cmp
inc
sahf
push
jnp
pop
jae
fisubs
lret
jl
mov
sub
mov
filds
mov
lods
lods
pop
fistpll
jne
xor
dec
pop
std
pop
sub
pop
cmc
mov
es
roll
mov
mov
mov
inc
loopne
lock
jp
adc
and
inc
movsl
xor
xlat
mov
stc
or
and
hlt
mov
mov
jbe
or
or
das
fcomp
or
enter
cwtl
push
inc
cmp
inc
add
stos
shl
imulb
dec
fstp
mov
fistps
cmpsl
add
lea
scas
xor
sar
in
imul
cmp
or
fs
out
in
es
jl
pusha
imul
dec
out
add
dec
ficompl
inc
xor
adc
cmp
pop
xor
inc
ja
stos
or
or
roll
orb
jo
out
stos
rolb
push
or
lret
loop
xor
sub
and
ret
outsb
push
lret
mov
es
int
ret
aaa
pop
outsb
shlb
in
inc
repnz
fcoml
movsl
lret
mov
or
dec
jg
inc
dec
out
xchg
arpl
loopne
cmp
cmp
dec
fsubrs
in
out
bound
cli
into
punpckldq
scas
inc
mov
lahf
iret
sti
addb
iret
sbb
sbb
fdivl
pop
dec
es
movsb
pop
out
sbb
outsl
add
out
mov
xor
sbb
outsb
lea
sbb
mov
fsubrs
jecxz
pop
cmc
comiss
dec
out
test
test
out
jno
pop
push
idivl
mov
mov
mov
jl
add
fwait
mov
fisubl
in
inc
mov
push
add
mov
addr16
adc
jns
xchg
pop
and
dec
mov
adc
jl
pop
push
mov
or
fmuls
adc
pop
mov
fs
ljmp
sub
cltd
mov
dec
pop
inc
mov
loope
adc
lea
and
aas
sahf
push
mov
add
xchg
enter
ljmp
stc
sub
add
mov
icebp
sub
es
xchg
gs
cmp
hlt
int
jp
push
arpl
jo
pop
push
fwait
add
jne
ror
scas
push
in
insl
stos
std
pop
stos
scas
mov
jge
loopne
lods
out
mov
add
sbb
aad
outsb
sti
cmp
js
je
xor
movaps
icebp
scas
outsb
in
and
in
jle
adc
sbb
jno
adc
aas
dec
cs
mov
mov
and
lods
mov
mov
fcompl
mov
xchg
push
mov
mov
negb
xchg
xor
std
mov
dec
fisubrl
pop
jle
mov
das
out
xchg
fisubrs
aad
mov
jo
movl
adc
mov
movb
jbe
and
inc
adc
xchg
sub
push
or
add
push
test
mov
ljmp
adc
outsl
add
or
clc
mov
ja
aaa
addl
enter
lods
clc
fcmovbe
ja
jp
jge
push
fadd
sub
add
inc
orb
push
xor
shrb
inc
fs
or
cmp
cmpsb
push
jp
lahf
js
test
shrl
fcoml
pop
out
pop
or
andb
xlat
shll
sub
push
mov
imul
xor
push
into
insb
or
daa
adc
add
aad
stc
gs
imul
pusha
jl
rcrb
lcall
or
jge
sub
pop
pop
xor
mull
fucom
movsl
and
xchg
jp
mov
push
sbb
xchg
in
pop
push
push
push
cmpsb
outsl
sbb
scas
shlb
into
pop
sbb
push
jle
shll
loop
mov
or
jno
xchg
out
inc
or
scas
lods
adc
and
mov
repnz
jne
inc
popf
sbbl
xchg
clc
push
aas
xor
int3
popa
mov
data16
xchg
fisubrs
in
inc
dec
adc
lret
ds
push
repz
movsb
xor
pop
arpl
popa
stos
push
ja
subb
xor
pop
or
clc
and
xchg
cmp
dec
lret
dec
rcrb
and
pop
mov
outsb
and
xchg
jp
sahf
cmp
divb
dec
mov
scas
mov
jo
sbb
jmp
lds
shr
mov
dec
add
jge
cmp
push
mov
or
mov
jle
sarl
cs
mov
pop
arpl
mov
push
aad
sub
xchg
pop
mov
int3
cmc
xchg
in
ja
pop
xchg
testb
or
sbbb
sbb
test
adc
dec
sbb
movsl
cmpsb
and
fcoml
outsb
jecxz
es
push
notl
retw
inc
lock
jg
xor
aad
inc
mov
xor
mov
jne
lret
fimull
fwait
lods
and
imul
imul
sti
mov
cmp
out
in
jae
sub
xor
imull
mov
adc
push
mov
xchg
cmp
push
pushf
add
js
imul
adc
in
jb
test
jae
mov
movsb
stos
xchg
loopne
loop
mov
orb
xor
cmpsb
mov
leave
dec
mov
cmpl
les
pop
mov
push
add
popa
sbb
adc
scas
xchg
cmc
popf
and
mov
mov
fstpt
movsl
insl
mov
jmp
xchg
rorl
test
sti
jg
aam
shll
sbb
mov
data16
fsubl
stos
das
imul
inc
mov
arpl
push
xor
scas
int3
mov
mov
adc
jecxz
pop
mov
push
xor
inc
loop
mov
out
or
leave
shll
cs
arpl
and
sarl
stc
outsl
out
imul
stc
rcll
movsl
lods
enter
test
adc
arpl
loopne
cmp
push
pop
adc
testb
cwtl
adc
popf
cmp
dec
pop
repz
pop
sbb
aaa
ret
pop
bound
xchg
jmp
cmp
in
loope
lock
sub
and
fisttpl
mov
xlat
negl
xchg
fdivrl
mov
mov
movsl
push
dec
mov
ficoms
pop
loopne
mov
popa
cmp
aad
or
xor
xlat
mov
cmp
cmp
adc
xchg
push
pop
test
aas
dec
imul
subl
mov
jmp
movl
dec
in
and
sarl
mov
out
test
adc
test
mov
jb
push
dec
jl
push
mov
call
leave
jnp
loopne
shrl
xchg
jp
mov
int3
into
and
repnz
push
in
xor
movsb
repnz
mov
xchg
xchg
int3
test
inc
sbb
rclb
dec
fdivrs
pop
pusha
mov
js
add
ja
lret
aad
nop
pop
cmp
xchg
pusha
nop
xlat
cld
loop
gs
mov
fpatan
lea
por
adc
inc
and
fs
aad
je
mov
ficomps
pop
fnstcw
pop
clc
push
xor
and
iret
or
ds
mov
adc
jle
ja
jmp
dec
test
cmp
aaa
xchg
xchg
movsb
fisttpl
xchg
add
and
fidivl
add
jl
sbb
push
jo
cmp
dec
jmp
sahf
push
push
int3
pop
sbb
sub
inc
sti
incl
jge
cmpsl
into
adc
add
leave
fbld
xchg
dec
adc
data16
aad
mov
and
cmp
sub
inc
and
fs
adc
inc
or
fiaddl
stos
icebp
mov
jns
imul
or
in
lret
mov
mov
mov
lret
sub
push
mov
test
jno
packssdw
mov
sub
or
cmp
sub
fidivrl
add
in
fcoms
cwtl
stc
mov
xchg
adc
inc
clc
mull
add
mov
call
sub
adc
mov
inc
rcr
cmp
push
pop
adc
mov
add
leave
and
dec
pop
mov
inc
addr16
jne
sbb
out
arpl
sub
jmp
jmp
inc
ss
cmp
lcall
adc
fnstsw
add
movsl
add
repnz
add
scas
insl
jecxz
mov
call
idivl
int3
dec
cltd
mov
arpl
popf
les
and
dec
sbb
sbb
mov
push
or
pop
cmp
orl
data16
dec
test
jns
scas
add
movb
cmpsl
push
push
mov
cli
icebp
mov
mov
sbbl
jmp
jecxz
fucomp
add
push
add
movsl
in
inc
test
outsb
iret
idivb
in
add
mov
lock
nop
mov
adc
and
cli
xchg
sub
sbb
jns
and
adc
dec
rorb
fucom
xchg
ja
sbbb
dec
cmp
push
das
or
cmp
repnz
mov
cltd
pop
mov
xchg
lcall
mov
and
rcll
add
mov
xchg
imulb
add
lahf
pop
test
test
push
ljmp
fnstcw
bnd
mov
push
sbb
add
pop
xchg
shlb
mov
mov
insl
push
sbb
int
jns
xchg
sub
mov
in
fsts
push
mov
ja
movsb
cmp
sub
das
xchg
rcll
jmp
and
ret
test
jnp
cmpsb
adc
bound
sbb
cltd
cli
ret
cmp
jmp
jmp
add
scas
cld
mov
xchg
jecxz
imul
jo
int3
and
xchg
push
lods
imul
scas
and
adc
outsb
aaa
jge
push
fisubl
lahf
sub
pop
shr
mov
dec
xchg
pop
and
fbld
pop
and
xor
or
push
loop
in
or
cmpsl
cs
adc
cmp
sarb
pop
inc
enter
outsl
fdivrl
add
pusha
push
cmp
xor
out
inc
sbb
shrl
ret
cmp
xor
mov
inc
nop
sbb
mov
es
push
rorl
ret
xor
xchg
cmp
push
and
ljmp
dec
or
add
cli
adc
inc
mov
or
cwtl
repz
add
mov
icebp
jne
out
inc
xor
test
icebp
mov
rolb
pushf
and
mov
andl
mov
mov
cmpsl
pop
adc
in
sub
dec
in
jnp
inc
mov
imul
sbb
mov
out
mov
sahf
push
xchg
xor
jle
rcrb
arpl
dec
mov
fistl
sti
ds
push
jl
or
repnz
jb
jmp
repnz
cwtl
add
arpl
loopne
nop
repnz
js
or
pop
add
xor
fisubs
ds
sahf
jp
lds
cmp
aaa
xchg
pop
cmp
bound
xchg
js
xchg
adc
sbbb
jno
in
push
rolb
leave
mov
shl
sbb
das
je
pusha
hlt
mov
repz
or
xor
xchg
js
imul
xchg
fwait
pop
outsl
aas
xchg
call
inc
jns
notl
pop
cltd
stos
loop
ret
aas
dec
mov
imul
inc
rcll
fistps
jge
inc
adc
insb
mov
lcall
lret
xor
xlat
push
pusha
xchg
push
xchg
in
lahf
mov
add
icebp
xor
cmpsb
sub
adc
or
mov
inc
stc
stc
fimull
push
pop
test
std
cmp
and
cwtl
pop
inc
int3
xchg
icebp
adc
addl
mov
hlt
shlb
sbb
mov
xor
mov
push
enter
or
add
pop
pop
push
ljmp
lcall
sbb
and
jp
outsb
xchg
rorl
mov
adc
movsb
aaa
nop
movsb
lock
insb
add
test
dec
inc
pushf
mov
dec
cmp
sub
mov
inc
repz
into
repz
ficoml
push
jbe,pn
and
fidivl
fs
push
sub
cltd
mov
in
xchg
pop
leave
je
or
push
insl
mov
jnp
cmp
sub
jno
pop
xchg
filds
int
xlat
cmpsl
test
mov
or
mov
mov
shrl
movsb
and
fstpl
mov
sbb
lds
mov
ret
lods
pusha
pusha
out
stc
push
sbb
push
inc
in
sub
cmp
lods
pop
jnp
cwtl
movsb
or
test
adc
aam
ss
movl
loop
cmp
mov
mov
sbb
xchg
rcr
nop
inc
xchg
sbb
imul
mov
push
and
cwtl
push
fs
jns
into
int
pop
mov
dec
add
in
inc
cmp
push
jb
movsl
cmpsl
lods
rcr
sub
adc
fists
roll
push
hlt
or
inc
add
adc
cmp
inc
sub
cs
sahf
cmc
loopne
push
jge
adc
or
xchg
jp
and
sub
push
jle
nop
sarl
dec
mov
fmul
call
inc
lods
or
in
lds
pop
xchg
iret
inc
or
or
mov
addr16
jnp
hlt
inc
and
mov
test
jnp
int
mov
dec
mov
sbb
mov
xor
jecxz
adc
jle
sub
cld
pop
fstps
inc
cmp
cmp
push
mov
das
push
loope
std
and
jl
sbb
xchg
into
and
mulb
fbld
js
aas
push
add
outsl
lea
sub
sti
inc
js
cld
fcoml
mov
f2xm1
and
scas
rclb
mov
loope
pop
jae
out
push
inc
sbb
fisttpll
jg
out
dec
add
icebp
cmp
jno
pop
jp
sti
daa
pop
mov
adc
sub
mov
in
frstor
push
popf
das
pop
xor
inc
addr16
pusha
mov
pop
addr16
pop
pop
xchg
cmp
push
jmp
inc
xor
mov
pop
and
mov
ljmp
or
daa
mov
inc
mov
push
dec
imul
mov
or
push
shl
ljmp
mov
adc
adc
cwtl
xlat
in
pop
mov
push
xlat
rclb
sub
xchg
xchg
in
mov
arpl
ja
inc
sbb
ds
sbb
test
sub
cmpsl
rorw
hlt
adc
jo
jl
leave
es
and
xchg
xchg
mov
push
imul
add
mov
sbb
fmull
sub
dec
lahf
arpl
sahf
mov
and
mov
push
cltd
adc
and
xchg
dec
cmp
sarl
int3
inc
icebp
mov
push
out
and
mov
int
popf
add
or
inc
sub
lods
mov
mov
stos
jnp
xor
fdivrs
xorl
mov
mov
or
push
inc
xor
sub
stos
shll
push
and
addr16
xor
lcall
mov
scas
jae
pop
xchg
in
sub
xchg
loopne
leave
arpl
rorl
jnp
ret
adc
mov
movsb
pop
adc
in
push
repz
inc
sbb
imul
imul
shrl
push
ja
jo
cld
lret
mov
ret
hlt
stos
adc
push
push
jns
sahf
test
ja
push
push
push
inc
jb
fwait
mov
xchg
add
dec
or
sbb
xlat
popa
mov
imul
add
fs
out
mov
adc
xor
lock
mov
dec
notl
cmpsl
xchg
mov
push
stos
sbb
adc
push
imul
pop
js
mov
test
pop
cmpl
imul
xchg
mov
jnp
outsb
imul
cs
cmp
and
inc
addb
cmpsb
xchg
sub
mov
mov
push
pop
and
mov
and
or
enter
mov
repnz
sbb
mov
subl
inc
and
mov
pop
fldenv
popf
cmp
bound
inc
ja
cmp
sbb
push
ljmp
xor
cmp
sub
or
xchg
roll
xlat
jo
or
movsl
push
dec
shll
clc
push
shlb
or
les
and
push
mov
add
in
sti
test
inc
dec
xor
aas
insl
lods
xchg
clc
mov
cli
sbb
shrb
inc
loop
enter
jo,pt
mov
push
pop
sub
mov
pop
xchg
pop
in
movsl
bound
aas
outsl
or
pop
dec
pop
sbb
sbb
imul
push
jle
outsb
aas
dec
scas
call
pop
dec
pop
sub
mov
mov
mov
cmpsb
rclb
or
sti
insb
sahf
dec
test
cmp
mov
add
mov
dec
mov
xchg
je
xor
xorb
push
pusha
mov
cmp
cmpb
push
jns
xchg
mov
xchg
clc
lods
ss
lods
test
ss
or
lock
bswap
addr16
xor
into
roll
scas
and
lret
sbb
in
add
int3
scas
int
sub
xchg
dec
add
je
adc
push
loop
es
push
insl
idivl
orl
mov
movsb
cmp
movsl
xchg
mov
cltd
fwait
aam
pop
inc
hlt
pop
jnp
notb
jne
mov
lret
sub
xchg
cmp
popf
andb
jnp
das
cmpsl
out
jno
outsl
sub
les
cwtl
mov
testb
sarl
xchg
add
jo
mov
xchg
ljmp
ficoml
aad
in
jmp
pusha
rolb
lcall
cwtl
sbb
sbb
hlt
fiaddl
add
push
movd
ret
or
test
test
push
pop
or
push
or
ds
add
xchg
pop
and
data16
or
inc
mov
mov
fcom
hlt
xor
int
xor
pop
fildl
aaa
jbe
sbb
ret
cmp
mov
adc
pop
mov
pop
inc
lcall
bnd
or
pushf
inc
enter
test
shrl
push
add
jmp
pusha
push
pop
lahf
and
icebp
fwait
add
push
and
xor
jl
push
les
add
dec
xchg
shrb
rol
loopne
lods
test
fisubrs
gs
dec
dec
inc
sbb
xor
sub
out
cmp
bound
faddl
pop
mov
inc
popf
xchg
sbb
out
sub
mov
pop
mov
push
adc
cwtl
sub
mov
sbb
icebp
add
cs
cwtl
cmc
mov
cmc
rclb
scas
adc
ss
cmp
fs
push
insb
push
mov
cmp
mov
xor
adc
mov
dec
pop
mov
call
gs
pusha
inc
mov
clc
repnz
push
mov
insb
lcall
cmpl
xor
add
inc
sbb
pusha
test
xchg
sahf
sub
cmp
dec
mov
hlt
fnstsw
adc
fnstcw
fldcw
push
jecxz
mov
add
jns
popf
sbb
das
ss
xchg
icebp
xor
mov
iret
xor
jl
pop
pop
movsb
jge
inc
cmp
or
adc
lds
mov
in
arpl
and
mov
out
test
xchg
daa
add
sbb
dec
xor
shrl
inc
sbb
lret
mov
mov
data16
mov
les
pop
lods
test
or
cmp
lea
mov
fdivs
ljmp
je
add
jmp
sti
je
int3
push
mov
and
push
arpl
jns
insb
daa
sbb
aad
popf
ja
imul
test
mov
mov
out
jl
xlat
iret
pop
and
add
daa
mov
jg
mov
movsb
push
inc
and
pop
xlat
sub
shr
adc
jo
and
stos
or
mov
xchg
call
dec
shlb
test
ret
cltd
cmp
sbb
xchg
cmpsl
sbb
lret
add
imul
or
cmp
popf
test
lods
std
add
mov
and
outsb
dec
sub
arpl
xchg
cs
mov
xchg
insb
sub
cmp
adc
mov
mov
cld
and
cld
in
addr16
adc
sub
push
adc
pop
adc
lods
sti
sbb
xchg
push
adc
inc
xchg
mov
mov
jno
xor
push
xor
and
add
into
inc
cli
dec
or
xor
movsw
addl
lods
jae
sub
mov
shll
andb
aas
loope
or
std
xchg
loope
cmp
dec
jp
stos
push
jg
loopne
iret
mov
dec
mov
mov
aad
xchg
add
shrl
pop
cmpsb
movsb
ljmp
in
sahf
outsl
or
popf
xchg
mov
loope
pusha
enter
call
pop
repnz
inc
pop
mov
arpl
rol
les
out
adc
sub
jg
xchg
cmpsb
imul
adcb
inc
add
fstl
les
mov
in
mov
in
dec
out
adc
insb
sbb
dec
stc
cmp
lret
lods
mov
and
outsl
xor
imul
mov
out
xlat
fwait
clc
lds
mov
cmp
push
xchg
inc
pushf
lods
mov
or
or
lock
mov
xchg
pop
icebp
xchg
stc
inc
jmp
daa
stc
push
and
add
pop
mov
sub
add
lahf
cld
mov
gs
inc
xchg
sub
xchg
cmp
jbe
call
cmp
and
pop
jmp
lea
xor
je
sahf
nop
and
mov
sbb
mov
pop
test
pushf
out
mov
push
negl
inc
clc
mov
in
rolb
add
cmc
testb
inc
push
aas
fsubl
or
lods
sub
pop
fistpll
jb
push
js
push
sub
mov
xchg
push
cltd
in
fstl
stos
cltd
fwait
sti
movsb
inc
jge
scas
xor
popa
xchg
add
inc
xor
sbbb
test
and
and
test
stos
mov
jle
mov
inc
pop
jae
dec
sbbb
push
test
mov
dec
std
hlt
cs
xor
mov
xor
out
push
subb
sbb
push
mov
jb
add
movsl
and
iret
inc
push
xchg
mov
mov
mov
dec
in
cmp
mov
pop
int3
add
and
jmp
clc
shrb
bound
inc
and
lods
sub
adc
ljmp
lcall
pop
adc
sbb
repnz
shrb
pop
outsl
and
add
je
shrl
mov
or
adc
xchg
sub
push
xchg
adc
dec
clc
ja
pop
dec
jb
jns
divb
jl
add
jmp
ret
pop
lock
lcall
cmpsb
add
sub
sbb
stos
outsl
pop
jmp
mov
lods
xchg
nop
mov
fisubl
movsb
scas
iret
mov
aam
mov
dec
push
mov
shlb
cmpsl
adc
dec
push
insb
adc
rorb
bound
xchg
add
and
mov
mov
push
jbe
fldl
sub
subps
cmpsb
mov
or
xchg
leave
cmp
sbb
push
call
scas
cld
xchg
sbb
inc
call
jns
into
dec
in
cmp
jl
sbb
xchg
mov
add
push
pop
jns
fincstp
aas
shll
jb
out
cmpsl
push
cmp
out
loop
pop
mov
insl
in
hlt
mov
sahf
jnp
popf
hlt
jo
aas
xor
add
pop
mov
stc
xchg
cs
loope
fwait
aad
adc
orb
pop
in
mov
and
push
jge
pushf
pop
mov
mov
loop
fmuls
insl
jmp
lcall
pusha
lret
inc
push
sbb
daa
scas
xchg
dec
mov
int3
push
pop
push
movsb
jmp
rcrb
adc
daa
aam
jmp
std
das
jmp
lds
mov
push
and
pop
xor
cld
fadd
xlat
outsl
loopne
jp
ja
push
mov
adc
lods
and
imulb
inc
cmp
stc
mov
int3
xor
gs
repnz
in
das
jae
rcrb
stos
mov
stc
cmp
push
add
movsl
dec
mov
jl
enter
fwait
rorb
in
call
mov
repnz
jmp
ficomps
jecxz
movsl
add
xorb
push
xchg
xor
pusha
ja
out
fwait
mov
inc
scas
push
scas
mov
mov
adc
fnstsw
addr16
lret
inc
cs
out
adc
lea
xchg
sti
icebp
add
cwtl
or
imul
mov
les
or
add
ds
arpl
pop
push
negb
test
stos
fs
xlat
jne
rcr
add
lock
ja
mov
xchg
mov
cli
mov
lds
jg
int3
add
sbb
push
push
ja
ret
call
cwtl
add
test
pop
fisubl
mov
pop
inc
aad
xlat
cmpsl
mov
add
cmp
insl
mov
xor
sub
les
scas
mov
ror
or
mov
or
sar
fwait
xor
and
or
adc
xlat
mov
push
ds
xchg
xor
test
outsb
imul
int
cmpsb
xor
pop
dec
jecxz
mov
leave
push
into
fwait
pop
sub
push
push
jle
xchg
clc
stc
cmpsl
lock
sub
in
mov
jge
je
pop
cmp
xor
pushf
loope
adc
andb
adc
in
push
pushf
lods
dec
imul
stos
das
ja
mov
mov
sbb
mov
cmp
fiadds
fwait
adc
sub
les
cmp
jb
push
test
sbb
and
ja
jbe
inc
and
and
pop
pop
jg
sahf
mov
popf
loopne
sub
mov
ret
in
outsb
std
movsb
ficomps
out
sti
sahf
push
inc
and
and
rol
adc
movsl
imul
gs
lea
enter
mov
rcr
pop
push
mov
xchg
ja
jecxz
incl
sbb
aas
or
xor
data16
ret
xor
inc
dec
xchg
iret
add
dec
ret
out
lret
mov
hlt
xchg
daa
add
inc
adc
push
mov
push
add
fs
cmpsl
imul
fmul
int3
insb
nop
jo
mov
movsb
in
xchg
in
daa
jmp
lcall
cwtl
xor
and
sti
test
inc
cld
dec
stc
jns
jl
sub
lret
in
dec
jno
clc
mov
jmp
data16
mov
movsb
and
xchg
cmp
pop
mov
pusha
jecxz
xchg
jne
cwtl
jno
int3
js
xor
scas
mov
in
loop
inc
cmp
sahf
popf
pop
lods
xchg
pop
mov
divl
cmc
rclb
frstor
mov
sub
pop
pop
xchg
sbb
cmc
stos
lahf
iret
into
leave
pop
jae
into
mov
mov
inc
inc
mov
dec
mov
testb
mov
ret
addl
popa
mov
push
fimuls
pop
insl
call
les
cmp
push
cmp
and
add
and
in
cmp
fcomps
stc
pop
xchg
int
and
cmp
mov
xor
xor
pusha
jae
add
aad
adc
ss
sarl
jns
lahf
xchg
sub
add
sub
sub
xchg
mov
ss
sahf
sub
sbb
inc
lcall
pop
add
es
es
arpl
jbe
jle
xchg
mov
cmc
sub
mov
cmpsl
cmp
out
mov
cmp
int3
inc
repz
pop
mov
out
scas
cmpsl
push
add
int
call
xor
and
cltd
push
pusha
test
enter
xchg
ja
push
inc
xchg
mov
ret
call
and
out
jno
mov
dec
outsl
outsl
movsb
mov
movsl
hlt
inc
lock
jnp
lcall
mov
stos
xchg
nop
leave
xchg
cltd
push
test
cmpsl
mov
popf
jne
mov
add
mov
dec
cmp
lea
icebp
cmp
movsl
mov
sbb
loopne
out
aad
sbb
mov
mov
push
mov
inc
cmp
sbb
movsl
cmp
sub
jle
imul
or
cmpb
push
cmpsl
jbe
inc
std
negb
outsl
fstps
or
mov
xorps
jle
sub
lods
pop
sub
mov
adc
and
or
add
add
mov
cmp
mov
jno
fwait
loopne
je
add
mov
mov
sbb
pop
mov
mov
inc
ud0
jns
or
mov
fistpll
mov
and
xor
adc
cs
hlt
mov
outsl
inc
mov
fnstenv
inc
sub
add
xlat
xor
jecxz
cli
cmp
stc
leave
or
clc
or
add
stc
sub
jecxz
loope
aaa
in
dec
dec
clc
mov
and
and
push
out
fwait
imul
andl
add
lds
xorb
sub
cmpsb
mov
out
adc
stos
xlat
test
mov
pop
aaa
mov
and
bound
cmc
adc
fsubrp
repnz
lds
lret
fsubp
call
fdiv
sahf
add
fisubrs
inc
sbb
xor
xor
in
mov
mov
dec
inc
or
push
pop
cwtl
sti
call
fmul
jno
mov
imul
je
icebp
stc
lods
iret
pop
dec
cmp
insb
cmp
sub
mov
gs
arpl
jg
in
adc
sbb
inc
enter
popf
or
faddl
aam
push
insl
sbb
cmp
pop
out
cmc
jmp
sbb
add
push
ficompl
mov
mov
cmp
sub
adc
sbb
mov
lcall
push
and
aad
cltd
pop
pop
pop
adc
cmovs
in
cmpb
out
jnp
loopne
push
inc
xchg
adc
arpl
mov
jle
sahf
xor
sub
out
adc
adc
loop
or
inc
data16
out
push
sbb
leave
je
add
movsb
cmp
in
cmp
pop
push
and
sbb
fdivrs
cwtl
cltd
addr16
ret
lods
movsb
dec
inc
mov
sub
push
push
sbb
cmp
bound
adc
fs
add
lods
cmp
sbb
push
dec
test
mov
addr16
mov
inc
sbb
int3
jp
pop
loope
mov
dec
push
xlat
outsl
or
faddp
cmp
inc
mov
mov
repnz
pop
adc
inc
adc
in
scas
fsubl
adc
cmc
jmp
cmp
jns
push
bnd
inc
pusha
mov
mov
push
mov
pop
ljmp
or
fidivl
jae
or
xor
mov
or
lea
push
or
ss
leave
out
pusha
sbb
sarb
jb
push
adc
inc
push
addr16
dec
jp
mov
ljmp
and
mov
sub
add
popf
pop
sar
cmp
adc
cmp
out
repnz
in
lret
in
add
xor
pop
sbb
dec
inc
fnstenv
inc
ret
push
xchg
adc
and
outsl
jb
sub
jmp
push
sub
dec
cmp
lea
stos
aad
adc
cmc
cmp
bound
fbstp
dec
sbb
push
xor
jg
sbb
movl
adc
pop
leave
lcall
mov
inc
push
and
sbb
pop
outsl
inc
jmp
jae
push
inc
push
iret
stos
dec
outsl
inc
shrb
rorb
and
fcmovu
xchg
inc
sbb
sub
mul
jg
loopne
fisttps
arpl
call
aas
adc
pop
insb
and
mov
dec
cmpsl
adc
jne
push
and
jb
xor
test
lods
cmp
faddl
sbb
enter
inc
dec
inc
inc
push
into
adc
aaa
xchg
push
push
pop
cmp
imul
adc
test
cli
int3
mov
movsb
dec
push
rol
outsl
ret
cmp
gs
out
out
cmc
jbe
push
std
add
xchg
mov
jmp
les
mov
arpl
xor
xchg
cmp
mov
and
fnstenv
xor
sbb
adc
icebp
push
jle
add
and
int
mov
fcoms
repz
cmpsl
dec
adc
ret
add
leave
neg
xchg
add
outsl
adc
add
push
sbb
icebp
mov
cmp
sahf
cmpsb
or
cltd
mov
and
cmp
jp
xchg
clc
cltd
xor
cld
test
out
mov
mov
dec
mov
scas
pushf
mov
nop
cli
les
fisubrl
loop
shll
or
cmpsl
pop
cmp
push
dec
fdivrl
jg
or
fs
sub
in
sbb
push
jbe
mov
pop
dec
out
mov
ficoms
sub
jno
sub
loope
stos
call
jae
in
sbb
in
mov
subl
rcrb
shll
dec
shrb
or
cmp
stos
imul
fnstcw
mov
flds
xchg
test
dec
push
cltd
ret
xchg
jns
sbb
es
xchg
add
xchg
add
adc
daa
pop
sbb
add
inc
lret
mov
or
dec
imul
pop
fwait
movsb
cltd
adc
and
ds
jae
std
into
xor
shll
xor
xchg
or
dec
into
xor
lahf
sub
jge
arpl
or
fwait
out
xchg
sbb
add
mov
pop
loop
mov
and
sbb
cmc
sub
jge
sub
add
es
or
jo
fwait
das
xor
js
and
insb
mov
mov
loopne
ljmp
clc
cmc
add
xor
mov
mov
jecxz,pt
out
loope
addr16
fsubrs
or
repnz
xchg
mov
dec
lretw
int3
addr16
cmpl
cmpb
push
and
cmp
mov
pop
pop
fidivl
in
into
xor
movsl
ret
scas
jns
mov
orl
pop
dec
aam
xor
sub
inc
inc
cmpsl
popl
pop
imul
data16
inc
out
xlat
pushf
movsl
mov
push
stos
test
mov
dec
lcall
fistps
les
in
aaa
add
movlps
fdivrl
nop
ret
sbb
rcrl
sub
mov
fwait
jo
imul
testl
cmp
sahf
gs
and
inc
call
xor
mov
mov
cmc
and
lcall
nop
dec
stc
inc
imul
xchg
xchg
add
fiaddl
lock
mov
jecxz
sbb
adc
adc
cli
pop
cmp
push
js
add
dec
fcoml
xchg
mov
imul
jno
lahf
push
test
or
push
jl
sarl
mov
andl
inc
add
push
stc
jge
add
adc
push
sbb
cld
push
sbb
fnstcw
sbb
and
jge
cmp
stos
jb
ljmp
movsl
adc
pop
jp
lods
je
dec
in
movsb
imull
lret
cld
insb
pcmpgtd
cld
cmpsl
push
xor
and
or
jecxz
adc
or
out
push
mov
mov
push
jb
pop
and
jae
lock
xor
xchg
hlt
dec
mov
jo
sbb
sbb
aam
fs
negb
adc
into
jbe
imulb
or
xorl
pop
into
and
das
jge
sbb
add
sub
repnz
mov
pop
aam
mov
jno
jmp
loop
xchg
push
or
dec
push
sbb
push
aaa
xchg
mov
pop
lods
mov
xor
test
add
lock
xchg
or
pop
iret
stos
int3
lea
jno
inc
cwtl
cwtl
mov
in
dec
sub
ja
adc
mov
sub
rep
jne
mov
cmp
stc
icebp
xchg
push
cmp
pushf
fwait
mov
nop
fidivs
lods
sub
mov
popf
inc
mov
int
inc
or
insb
data16
loop
sub
cld
and
xchg
outsb
push
or
movsl
xor
mov
push
popa
sbb
lcall
add
stos
push
cmpsb
nop
pop
cmp
cs
xchg
arpl
test
subb
dec
cmpsb
mov
loope
add
xchg
scas
sbb
sub
xor
xchg
iret
ret
inc
mov
aad
add
jno
lret
rcl
pop
pop
jnp
fwait
iret
cli
enter
fidivl
mov
mov
daa
popf
dec
sbb
sub
jo
pop
xchg
xchg
fsubr
dec
jns
and
in
cmpsl
pop
cmc
shl
sub
mov
jp
movsb
js
or
pusha
mov
sbb
sbb
sub
jns
js
or
sub
xor
dec
pusha
mov
aam
test
add
sub
faddp
sbb
fs
adc
dec
sub
lret
lock
add
pop
adc
shll
fs
in
push
ds
scas
cmpsl
mov
insl
pop
lret
adc
aam
test
int
fisttps
push
or
pop
add
sub
mov
fmul
inc
stc
pop
push
sub
pop
pop
mov
cmpsl
xlat
int3
inc
in
and
pop
mov
fldcw
mov
cmc
adcb
mov
enter
imul
xlat
out
ret
jecxz
loop
enter
out
xor
inc
sar
outsb
xor
cmc
movsb
sbb
inc
adc
pop
sub
mov
sbb
mov
aas
cmp
out
xor
pop
inc
test
test
pop
jo
and
insb
xchg
pop
lahf
fsubrl
xor
sub
jnp
imul
push
inc
out
fnstenv
push
sub
insb
jo
jge
les
movsb
sub
sub
sti
mov
add
lahf
leave
sbb
dec
ret
jp
aaa
or
lods
dec
hlt
out
data16
push
jo
push
cmp
sbb
or
pop
fldl2e
mov
cmp
and
inc
sub
add
or
cmc
inc
sub
mov
test
xchg
dec
mov
mov
xchg
mov
push
cmp
in
mov
inc
pop
jnp
test
out
es
pop
shrb
fsub
push
outsb
pop
imul
ret
decb
pop
imul
nop
int
inc
mov
popa
loop
mov
mov
fsubp
push
arpl
cltd
repnz
push
xchg
ja
leave
sbb
dec
cmp
mov
repnz
xchg
in
mov
subl
stos
aad
lea
pop
int
sub
mov
mov
cmp
mov
mov
sub
cmp
ss
call
xchg
imul
stos
push
mov
in
mov
mov
add
xor
jecxz
xlat
test
pop
inc
mov
repnz
mov
push
jl
adc
push
mov
xacquire
ret
mov
add
cwtl
lret
call
mov
and
pop
pop
jg
fidivrl
out
in
aas
stc
out
lret
add
loopne
insl
mov
movsl
xor
subb
out
and
test
call
sub
mov
inc
xchg
fs
push
jg
cmp
jne
mov
aaa
sti
repz
dec
jle
push
rorb
add
rcr
lods
mov
test
dec
sahf
push
jo
ret
movsl
jo
jne
or
lods
test
fcoml
mov
fmuls
icebp
mov
mov
sub
sbb
imul
lock
cmp
js
mov
sbb
sbbb
or
fnsave
bswap
adc
mov
mov
lret
mov
sarl
pop
jno
inc
dec
repz
fmuls
out
fwait
lret
int
stc
pop
out
pop
push
push
lcall
or
cmpsl
dec
sub
dec
arpl
dec
mov
enter
test
inc
aad
or
icebp
sub
lahf
in
add
dec
mov
js
movsl
mov
dec
imul
jge
cmpsb
mov
jne
mov
bound
mov
jp
jno
popf
xor
push
filds
sbb
lret
cmpsl
hlt
icebp
push
jecxz
mov
dec
into
and
rolb
dec
iret
sub
lock
pop
lds
clc
scas
pop
ja
adc
dec
mov
sbb
lcall
mov
add
push
int
pop
in
in
dec
nop
ja
lock
push
inc
jmp
rcr
or
sub
mov
jno
out
loope
stc
pop
aas
sub
loop
xchg
ljmp
push
fwait
hlt
je
stc
mov
outsl
xchg
repz
mov
repz
or
out
push
cwtl
mov
add
test
jmp
shrl
push
and
inc
mov
cmpsb
add
in
xor
scas
dec
add
add
push
lahf
sahf
lds
push
repnz
and
mov
aad
xchg
lret
cwtl
ja
mov
in
or
xchg
jl
daa
adc
sub
xor
shll
inc
jg
shlb
loop
sub
data16
dec
add
dec
fistpl
les
sub
push
xor
into
xor
je
adc
lea
pop
dec
sub
test
pushf
cmp
push
add
inc
lret
and
push
call
jle
jne
shlb
dec
fwait
stc
pop
jno
sbb
jl
bound
cld
popa
inc
divl
lds
shrb
int
loope
imul
aad
inc
xor
movsb
jecxz
xor
fisubs
stos
sub
popf
in
add
aad
hlt
push
dec
and
subl
mul
push
arpl
mov
js
mov
ja
lret
xor
or
xchg
pop
jl
jp
xor
leave
mov
int3
out
pop
mov
shlb
ds
popf
fcmovu
icebp
pop
xor
push
xor
sti
mov
jns
xchg
stos
outsl
pusha
adc
mov
into
mov
jecxz
clc
cwtl
movsl
xchg
adc
stos
inc
jb
or
mov
rorb
cmpsb
and
sub
lods
mov
jae
mov
cmpsb
and
pop
outsb
bswap
in
mov
push
popf
out
mov
std
adc
mov
or
push
std
ds
or
cs
popa
mov
mov
add
mov
sub
jmp
and
cmp
add
mov
popa
adc
dec
sub
mov
dec
jae
scas
sbb
mov
dec
fstpl
sahf
xchg
push
and
lret
sub
decl
mov
icebp
mov
stc
mov
dec
sti
xchg
cs
or
cmp
cld
rorb
aas
cmpsl
outsb
scas
jbe
scas
int3
mov
push
fs
jo
add
xlat
dec
pusha
aad
imul
dec
pop
into
lret
inc
in
in
mov
movsb
or
cltd
pop
sub
inc
movsb
sbb
mov
jmp
lret
pop
nop
xor
dec
stos
jae
cvtpi2ps
imul
fdivs
bound
aas
or
mov
mov
adc
mov
popa
jg
cmp
aas
sub
xchg
add
sub
js
jecxz
cmp
push
out
jne
pop
push
popa
lock
push
sarl
sarb
xchg
mov
imul
and
mov
and
fidivl
rcrl
int3
fidivrs
movsb
cmp
inc
lea
lret
mov
ss
stos
dec
out
and
insl
xchg
xchg
loop
int
aam
rcll
popa
mov
pop
fnstsw
cli
push
imul
mov
cmp
test
inc
scas
mov
gs
ret
fldl
jo
mov
mov
adc
pop
xchg
pop
test
cmp
into
pop
ret
cmpsl
mov
movsl
and
outsb
loope
bsf
fmul
push
cwtl
pusha
mov
outsb
loop
loopne
sbb
sub
gs
pop
cmp
shl
outsl
scas
inc
push
lds
mov
shlb
sub
fwait
sbb
into
push
mov
push
loope
xchg
jno
fiadds
mov
outsb
xchg
out
js
mov
jl
fdivl
inc
and
in
test
and
cmpb
stos
pushf
push
cmp
int3
add
jne
fs
cmpsb
jle
std
aas
xor
jno
xlat
out
scas
pop
dec
push
scas
addr16
fwait
das
ret
xchg
mov
nop
pop
leave
ljmp
mov
xchg
nop
mov
xchg
mov
mov
xchg
hlt
mov
nop
adc
sub
insb
repnz
push
xchg
sub
push
stos
pop
pusha
test
lret
test
mov
mov
or
mov
outsl
push
popf
into
sbb
shl
jb
lods
pop
inc
or
aaa
push
es
add
adc
cmp
nop
xor
jae
lahf
mov
add
out
push
lret
inc
mov
stc
sti
ja
loope
mov
mov
cmp
ficoml
jbe
xchg
stos
movsb
sub
shlb
dec
ja
sbb
or
out
stos
rcrb
sahf
out
fistps
mov
push
fisttpll
xor
imul
fs
dec
and
or
mov
and
les
mov
iret
dec
scas
inc
es
push
sub
addr16
xchg
sahf
and
sbb
orl
in
cmpsb
xor
adc
inc
test
mov
adc
jmp
add
add
mov
cmpb
mov
insb
xchg
ja
xchg
in
xchg
in
cmp
mov
movsl
push
and
fwait
inc
rolb
xor
push
int3
cli
mov
add
stos
aam
imul
mov
fidivrl
in
imul
or
add
add
mov
das
adc
push
cs
movsb
pop
xor
xchg
pop
daa
lret
jge
cwtl
mov
mov
sbb
xor
push
jle
ljmp
popl
push
mov
dec
cmp
fsubrl
sub
shrb
and
jns
pop
sbb
and
fcomps
adc
mov
inc
jecxz
aam
sti
sbb
or
push
jae
dec
sar
cmp
cmp
push
fists
inc
fwait
push
js
bound
mov
adc
mov
pop
jge
jecxz
xchg
aam
mov
inc
mov
sahf
fisttps
add
dec
mov
lds
sahf
dec
lret
popa
pop
shlb
sub
push
fdivl
jle
inc
push
xchg
adc
add
push
lea
aad
mov
loope
adcb
dec
cli
mov
sub
mov
sub
sub
adc
test
xchg
xchg
imul
data16
mov
or
push
data16
push
adc
lret
xchg
mov
or
shll
jne
cwtl
pop
cwtl
sbb
push
xor
lcall
pop
daa
in
sub
ja
lcall
and
inc
pusha
outsl
jne
int3
inc
jne
testb
fs
in
mov
xchg
fdivl
mov
lret
push
mov
add
lea
cld
jae
ss
int
lahf
mov
movsl
decb
jo
pop
cld
add
xchg
in
or
dec
cmp
jecxz
fs
and
js
sub
inc
into
or
xor
outsl
xchg
push
fwait
sbb
xor
push
bound
bound
inc
and
stc
sbb
les
outsb
add
mov
push
mov
idivb
cmp
inc
add
xor
sbb
rcl
andb
mov
mov
loop
xchg
popa
movsb
sbb
sub
in
pop
or
mov
test
fs
cmp
clc
test
addr16
out
dec
cmp
iret
dec
jge
js
sub
inc
vmovsldup
popf
pop
aas
mov
xlat
mov
xor
sbb
test
js
arpl
xor
push
push
mov
pusha
mov
mov
push
fldcw
jb
dec
cltd
je
sti
repnz
or
int
out
rolb
mov
sub
popa
ja
add
push
adc
mov
rcr
cmc
xchg
lods
mov
sub
xchg
pop
xchg
cmp
jnp
sbb
sub
bound
cli
sub
cmp
sub
into
adc
adc
push
popa
loop
lcall
pop
or
out
popa
int
es
aas
jb
dec
mov
cmp
push
inc
mov
pop
testb
mov
shr
add
stc
addb
cmc
int3
enter
ror
jl
popa
sti
out
pop
xor
arpl
add
xor
and
pop
loope
mov
push
icebp
mov
xchg
divl
and
lahf
adc
cmp
sbb
push
jne
cltd
shl
mov
jbe
movq
jb
push
push
xchg
mov
mov
adc
inc
fsts
in
push
or
add
add
leave
jmp
aas
in
mov
popl
adc
xor
sbbb
ljmp
jnp
adc
nop
mov
repnz
jbe
dec
jb
insb
shlb
xor
jge
notb
inc
and
and
lock
test
push
sbb
or
aaa
or
cli
mov
jp
mov
cmp
pop
xor
jbe
jnp
xor
adc
dec
loopnew
mov
cmc
dec
es
mov
and
lea
cmp
sbb
test
adc
test
inc
mov
fnstcw
inc
nop
inc
sub
sub
dec
sub
jmp
jo
xor
call
xchg
sub
int3
lods
sahf
pop
mov
add
cld
push
cmp
push
sbb
psubb
scas
xchg
jo
outsl
xchg
push
xchg
ficompl
xchg
je
stos
in
je
ficompl
cmc
shll
stos
mov
mov
xlat
add
push
subl
hlt
sahf
and
push
sbb
fmull
icebp
adc
inc
push
push
hlt
mov
mov
imul
jmp
xchg
cmp
test
rcrl
ds
repz
dec
cmpsb
inc
rcll
adc
jle
pop
xchg
cmp
fbstp
jbe
xorl
cmp
scas
adc
adc
aad
mov
ljmp
dec
cli
arpl
pop
repz
sub
pop
cmp
ficomps
dec
push
dec
lahf
js,pt
iret
dec
in
pushf
je
xor
stos
jle
sahf
loope
inc
or
cwtl
dec
arpl
stos
cmp
lea
push
nop
rcr
dec
std
sub
sbb
inc
dec
and
inc
imul
jb
jl
in
lods
mov
xchg
sub
push
fisttpl
lahf
cmp
lcall
call
cmp
fmull
pop
test
push
btc
inc
jo
mov
cs
into
rcrl
push
int
or
ss
xor
aas
rorl
or
push
jl
mov
fwait
push
imul
push
add
clc
sub
cli
xchg
shll
dec
push
mov
xchg
dec
lcall
cmp
rcrl
and
mov
mov
cmp
adc
pop
jl
dec
adcl
mov
or
push
push
sbb
mov
add
loop
cmp
loop
mov
mov
mov
and
mov
push
test
jmp
sbb
push
fldt
aas
dec
jb
cltd
mov
das
mov
mov
mov
inc
pop
js
xchg
mov
mov
pop
and
ret
mov
sub
mov
data16
adc
or
ss
lea
inc
ds
pop
xchg
push
pop
int3
and
dec
dec
rclb
xor
mov
mov
mov
movsb
mov
rcrb
jge
rorb
mov
movsb
pop
call
es
test
adc
lret
sub
mov
push
jecxz
jne
mov
cltd
jle
dec
pop
shrb
test
lcall
mov
xchg
jne
inc
out
mov
insb
scas
into
imul
fstl
test
nop
mov
cmp
test
sub
cmp
jbe
lods
paddq
or
mov
cmpsl
dec
fstp
mov
ds
jo
orl
arpl
pop
and
pusha
loop
lods
push
xchg
or
or
pop
push
pusha
lods
lahf
out
cmc
fcmovnu
stos
sahf
cmc
inc
jnp
pop
inc
aam
jge
aad
addr16
mov
sbb
ss
fs
adc
fmuls
jno
cmc
aad
enter
xchg
imul
add
and
xor
nop
jbe
ret
sub
pop
add
inc
xor
orb
push
xor
cs
xor
pop
jl
sbb
push
jno
adc
mov
mov
xchg
popa
sub
cmpsl
in
daa
mov
mov
cli
mov
jns
jns
push
inc
mov
rcll
mov
loope
add
sbbl
push
rcl
xchg
movsl
cwtl
fcoms
sbb
mov
add
lahf
lds
push
and
mov
sub
ret
sbb
push
dec
add
sbb
xchg
mov
pusha
out
nop
xchg
mov
enter
adc
aad
or
out
adc
dec
pinsrw
xchg
push
test
in
cwtl
mov
and
xlat
or
or
cmpsl
dec
popa
insb
rcrl
inc
add
jp
fsubrs
in
das
mov
pop
out
and
test
xchg
cmpsb
enter
mov
push
pop
inc
js
pushl
nop
adc
in
adc
rcrb
orl
sbb
mov
xor
jns
pop
in
lods
mov
dec
dec
fldln2
xchg
bound
inc
xchg
pushf
mov
cld
icebp
mov
pop
add
add
cld
and
inc
xchg
nop
mov
mov
loope
dec
jbe
xchg
mov
pop
out
in
mov
mov
scas
ja
aas
mov
mov
xchg
mov
xor
jbe
stos
cltd
inc
mov
cmp
mov
in
inc
stc
jne
aam
jno
push
out
add
add
imul
cmpsb
adc
pop
xchg
jb
pop
mov
add
mov
pop
xchg
bsf
fwait
jp
add
mov
push
aaa
cmpsl
inc
setnp
and
idivl
fdivl
xor
lret
out
mov
pushf
dec
sub
jno
pop
stos
popa
popa
stos
arpl
jg
mov
xchg
cmp
xchg
xchg
lods
test
lret
stos
cltd
call
mov
cmp
add
fistl
adc
roll
jnp
pop
push
notb
jbe
test
mov
mov
or
popf
das
lret
sbb
cltd
popa
iret
fistpl
mov
rcll
popf
sub
jae
roll
dec
cwtl
fists
call
int
rcrl
xchg
pop
add
ret
add
adc
das
xor
jne
or
ret
push
repnz
jle
es
mov
cmp
mov
iret
shrl
imul
fldenv
mov
cmp
cmpsb
mov
ds
cwtl
xchg
das
add
mov
adc
dec
test
adcl
or
push
imul
mov
insl
lcall
lods
scas
pop
sahf
sarl
add
sbb
xchg
dec
xlat
push
stos
xchg
xchg
jl
test
stos
push
jae
dec
es
push
inc
push
scas
jge
add
mov
mov
cmpsb
lods
adc
nop
xor
mov
xor
dec
push
sbb
fiadds
add
scas
test
xchg
xchg
jne
hlt
mov
int
addl
roll
test
loope
movsb
adc
es
daa
and
adc
aas
dec
mov
roll
stos
test
or
bound
shlb
sbb
and
mov
xor
jnp
cmp
add
shlb
std
hlt
imul
add
movsl
mov
sbb
data16
es
jmp
into
and
ret
test
mov
rcr
mulb
stos
jl
add
jno
sbb
out
mov
pop
fiaddl
fiadds
es
pop
out
pop
or
mov
push
aas
lcall
mov
lret
pop
sbb
aam
pop
sbb
fisubs
push
push
scas
cwtl
mov
push
sarl
call
addl
xor
sub
adc
lea
and
cmp
ds
push
dec
cltd
pop
sbb
orl
in
bound
mov
fstpt
in
fmulp
leave
sti
jl
add
mov
sub
fcoml
imul
xor
dec
repz
jnp
repz
xor
mov
rorb
adc
vpsubw
js
dec
repz
pop
cltd
or
sbb
sbb
dec
repnz
push
adc
fs
push
sbb
mov
stos
lcall
push
aas
orb
inc
out
jle
ds
mulb
push
dec
push
inc
es
popf
les
cwtl
jae
ljmp
dec
inc
nop
dec
add
mov
push
ja
in
loopne
jp
cmp
mov
xlat
cli
sar
inc
test
sub
mov
je
mov
sbb
pop
out
insb
negb
sub
nop
mov
pop
popf
pop
clc
mov
sub
jne
mov
pop
and
fiadds
adc
loopne
mov
icebp
rol
jg
inc
sbb
xor
add
insl
mov
add
incb
add
mov
imul
push
push
pop
mov
pop
sbb
jae
xchg
cmp
test
test
cmpsb
imul
or
xchg
lea
test
clc
imul
sbb
insb
xchg
lock
jl
jns
dec
arpl
and
aaa
cmpsb
jp
add
cmp
inc
fld
cs
lea
mov
sahf
popa
inc
lods
jbe
lock
pop
mov
adc
sub
cmc
int
mov
add
jb
fsubrs
shrl
dec
rep
cmp
sbb
mov
in
push
in
mov
leave
cmp
jle
hlt
fldcw
imul
in
mov
jmp
jns
push
addr16
das
cltd
push
inc
jp
adc
inc
addl
stos
test
and
jle
test
sub
or
rcrl
mov
and
stos
scas
pop
imul
incl
jge
xchg
test
xor
ds
icebp
pop
cmp
pop
mov
add
not
ret
icebp
push
cmp
je
or
jecxz
inc
inc
sahf
jne
mov
cmp
andl
out
push
adc
aas
cmp
mov
mov
dec
pop
mov
test
testb
out
inc
adc
jno
mov
test
xchg
jecxz
fcmove
adc
xor
movsl
fwait
addr16
loopne
mov
mov
sbb
sub
cltd
in
adc
lahf
pop
dec
dec
loopne
sbbl
mov
cmpsb
fsubl
ret
ret
xchg
xchg
dec
xor
scas
cmpsl
push
nop
pop
popf
ret
shll
popf
setle
fndisi(8087
sub
xchg
lea
aaa
xlat
xchg
mov
sbb
inc
mov
pop
or
fcoms
lea
pop
mov
dec
int3
rorb
add
pushf
sets
or
orl
or
push
xor
mov
sub
push
push
shl
or
cmp
dec
repnz
dec
xchg
xchg
ljmp
les
pop
out
shl
in
in
and
cli
andl
sbb
dec
inc
out
clc
xchg
adc
fnsetpm(287
popa
ret
jae
jo
push
or
movsl
add
inc
sub
push
outsb
mov
add
repnz
movsb
testb
cmp
test
cmpsl
adc
xor
lock
mov
mov
fistpll
xlat
scas
push
pop
pop
leave
fmull
jg
outsb
jle
pop
mov
pop
popa
cmpsb
add
pop
adc
add
jg
int
ja
inc
movzbl
or
add
pop
push
lds
mov
scas
jb
xor
mov
es
xor
idivb
shl
negl
rorl
or
adc
cmp
int
mov
imul
cmp
in
pop
cmpsl
push
fwait
sbb
or
rorl
shll
xchg
or
fmuls
xor
nop
out
sub
jg
ret
mov
gs
mov
jb
mov
fistl
inc
mov
cmpb
xchg
gs
stc
lret
xor
jnp
push
ss
mov
add
inc
pop
add
jecxz,pt
dec
fstl
in
mov
and
js
lret
dec
pop
rclb
cmp
jle
sbb
out
push
jg
shl
popf
jne
popa
and
mov
gs
mov
fdivrl
push
out
loopne
les
dec
mov
mov
jno
imul
cmp
or
int
clc
pop
and
cltd
outsb
dec
int
mov
sub
stos
ss
enter
push
xlat
lret
test
stos
push
mov
test
out
jno
adcl
movsl
fiadds
pusha
jae
cmc
add
xor
add
lods
bound
add
scas
mov
in
mov
lret
aam
mov
inc
hlt
das
mov
mov
or
sbb
in
ljmp
aam
cli
rcrb
ds
inc
pop
cmp
enter
adc
in
cmc
jecxz
aas
add
sti
xchg
int3
fwait
mov
push
fwait
pushf
out
popf
daa
push
and
and
sar
mov
out
or
xchg
popf
clc
ficompl
cmpsl
js
jp
addr16
dec
adc
fldcw
push
cwtl
lahf
xor
push
rcrl
xchg
fsubrl
lcall
jg
push
add
mov
mov
iret
jnp
inc
mov
imul
mov
and
icebp
mov
iret
or
lahf
adc
lock
pushf
gs
pop
or
jmp
push
sbb
fisubrs
sbb
inc
imul
dec
scas
sub
cmp
sbb
gs
cmp
mov
sub
xchg
inc
push
int3
add
adc
mov
fsubrl
shll
cmp
sbb
dec
bound
xchg
pop
pop
mov
fisubrs
cmpsb
xor
fstpt
loop
ds
frstpm(287
fidivl
pop
jge
inc
cmpl
cmpl
incb
scas
inc
cmp
mov
ja
loop
stc
xor
cmpsl
sti
xchg
mov
hlt
scas
aas
nop
adc
push
ja
push
lret
xchg
jge
pop
mov
rol
loop
fldenv
xor
lock
divl
xchg
push
xor
pop
dec
sahf
adc
dec
cmp
sub
ret
cld
pushf
mov
mov
mov
or
fxch
cli
inc
subb
adc
jo
lcall
push
adc
xchg
cmpsl
sbb
inc
sub
push
inc
in
jmp
loop
jae
xor
mov
cmp
cmp
aaa
or
outsl
sub
testb
jae
int
sbb
xchg
or
push
outsb
jb
cld
xchg
jo
jnp
shl
mov
pop
sbb
jne
adc
and
fldenv
shrd
adc
push
cmpsl
cmp
aam
sbb
lds
cwtl
xchg
inc
inc
xor
or
sarb
imul
movsl
jo
xchg
inc
in
sbb
inc
test
in
jle
ss
test
cld
std
lds
xchg
xchg
mov
mov
adc
push
sahf
hlt
pop
mov
and
xor
jno
push
insl
xor
and
popa
add
int3
fidivl
rolb
sbb
pop
xchg
xor
rcrl
mov
xor
add
xchg
xor
sbb
add
std
ret
and
mov
add
cmpsb
imul
push
lret
rorl
adc
addb
loope
or
xlat
insl
jo
inc
mov
xchg
aaa
add
insl
mov
sarl
lea
subl
leave
jle
push
mov
or
sarb
push
lret
xchg
daa
dec
xchg
shll
mov
cmp
lret
sub
pushf
js
sbb
xchg
ja
sbbl
in
dec
sahf
in
add
aas
mov
sbb
cwtl
adc
jnp
xchg
or
xchg
and
loop
call
aam
clc
lods
cmp
pushf
jmp
inc
lock
xchg
sbb
xchg
xor
add
pop
ret
and
stos
xlat
aad
test
mov
cld
jl
call
mov
dec
or
cwtl
arpl
push
sbb
arpl
lahf
cmc
nop
hlt
pusha
cmc
sbb
loope
pop
mov
in
addr16
shlb
ret
sub
jg
push
mov
xor
cwtl
inc
lea
mov
xchg
and
mov
mov
push
sub
jnp
int3
dec
mov
and
movsb
mov
push
mov
rcr
jae
jno
in
fs
shlb
jge
lock
sbb
xor
mov
mov
adcb
leave
insl
inc
cli
push
mov
add
xor
pop
outsb
aad
aas
pop
sahf
pop
pushl
jle
out
add
in
loopne
xlat
jnp
sub
mov
xchg
push
outsb
add
loopne
jae
test
xchg
mov
inc
jp
push
add
cltd
out
stos
bound
mov
jecxz
cltd
ljmp
and
cli
popa
pop
popa
call
imul
jl
es
orb
pop
lds
negl
adc
push
hlt
imul
fs
push
inc
aam
loope
int3
push
sub
sti
andl
jno
add
pop
cld
mov
sbb
cmpl
and
out
repnz
mov
fsts
stos
xor
xchg
add
sub
shll
add
pop
and
mov
es
not
xor
int
clc
add
push
arpl
mov
aas
jne
cmp
mov
dec
shl
pop
lahf
mov
inc
sbb
dec
push
mov
dec
loope
sub
adc
cmc
pop
or
fwait
in
lret
movl
inc
mov
rol
das
sub
aaa
jo
mov
xchg
pop
sbb
out
sahf
shrl
daa
and
loopne
xor
push
pop
cmc
mov
add
pop
hlt
lcall
lcall
pop
cmp
mov
std
mov
cmp
popa
mov
stos
cltd
inc
mov
cmp
imul
iret
insb
jg
cmp
int
in
sbb
es
sarb
ljmp
insb
cld
popa
sub
ljmp
add
jns
rep
or
xchg
add
pop
lret
pop
outsl
clc
and
popf
cs
insl
mov
sub
sbb
jmp
pop
pop
dec
and
xchg
adc
lea
dec
adc
enter
ret
mov
cmp
adc
outsb
mov
add
stos
push
push
and
pop
mov
xorl
xlat
mov
xchg
negl
lcall
mov
stos
jmp
mov
loopne
iret
nop
test
nop
xor
add
loop
and
addr16
cmpsb
aas
ret
jb
ss
loop
call
orl
pusha
aam
rclb
and
pop
cmc
test
dec
mov
mov
movsb
insl
lock
push
push
cmpsl
mov
mov
cld
arpl
ss
mov
and
ja
jmp
pop
les
sbb
or
shll
mov
pusha
push
push
popa
imul
icebp
dec
andb
cld
push
adc
insb
mov
mov
jl
loope
insb
bound
push
sub
or
xchg
mov
out
sbb
jo
movsb
leave
mov
mov
jmp
mov
jo
rcrl
sbb
lds
repz
mov
mov
jne
cmp
fwait
push
mov
push
lock
pop
insl
in
pop
jns
xchg
add
dec
repnz
stos
daa
test
lods
adc
adc
xor
mov
fs
cmpsb
lods
dec
cmp
inc
inc
sbb
shl
cmp
mov
imul
sbb
lods
cld
xlat
xchg
pop
or
add
mov
pop
mov
insb
push
xchg
dec
loopne
mov
outsl
inc
popf
rcrl
repnz
and
cmpsl
divl
xlat
jl
pop
scas
rcll
imulb
sbbb
xchg
call
leave
push
repnz
xchg
xchg
jmp
ret
stos
stos
lea
insl
jge
pop
and
push
xchg
jae
lods
jo
loope
mov
into
xor
xor
aas
push
rsqrtps
ret
fstps
aam
push
ficoms
sub
xchg
leave
mov
mov
in
sarl
das
cmp
stc
xor
pop
mov
addb
sbb
jl
adc
iret
imul
insl
and
sbb
jb
je
inc
pop
mov
cmp
dec
imul
xlat
pop
aad
xchg
mov
rcr
gs
jp
inc
stos
push
jp
cmc
pop
bts
mov
jecxz
inc
dec
clc
lds
cwtl
inc
mov
cmp
inc
xchg
js
xlat
cltd
cmp
mov
outsl
adc
aad
ja
ficompl
xchg
or
ja
jnp
mov
sahf
mov
xor
jl
lret
sbb
pop
movsl
fdivr
push
dec
mov
adc
add
je
adcb
fisubrs
das
out
xchg
inc
dec
add
dec
sbbb
jae
mov
sbb
in
mov
sub
jo
pop
bound
push
cmp
xchg
sbb
add
or
xor
aam
iret
xchg
push
fsubrs
ss
and
scas
xor
inc
cmp
pushf
and
push
mov
outsl
push
xor
into
push
addr16
adc
pop
push
jmp
mov
out
stos
scas
loop
stos
mov
leave
test
push
jecxz
mov
pop
cmovno
push
insl
es
xchg
push
lea
into
mulb
mov
or
fadd
xor
pop
int
inc
push
mov
mov
mov
mov
test
mov
jge
bound
sbb
or
sub
xchg
sbb
mov
aam
sub
jecxz
mov
outsb
loop
loopne
add
ret
jle
cltd
cmp
xlat
sbb
push
lret
gs
and
xchg
jecxz
xchg
push
in
fsubl
shl
push
out
pop
adc
or
inc
xor
xchg
enter
push
jl
push
cld
loope
stc
dec
inc
movsb
push
add
cmc
cmp
cs
mov
adc
pop
hlt
out
cmp
rolb
aam
popf
cmc
jmp
xchg
push
dec
and
cli
lods
loopne
push
fisubrl
nop
jnp
sub
test
lret
xchg
cwtl
fsubrs
pop
inc
cmp
mov
mov
es
fadds
mov
aam
mov
cmc
aas
and
lea
add
loop
out
pushf
jecxz
xchg
lock
sub
push
mov
ja
cmp
cld
nop
repz
xor
loopne
sbb
add
mov
xchg
and
adc
cwtl
push
mov
lock
pushf
jle
nop
mulb
movsl
sub
cmp
xchg
in
mov
pop
mov
jmp
mull
and
mov
push
cmc
lret
fsubrl
push
rorl
loopne
mov
xchg
inc
pop
jp
rolb
push
insl
dec
pop
xor
dec
les
sub
dec
test
lds
ja
in
movsl
xor
lahf
jne
ud2
and
inc
popa
mov
or
dec
inc
sub
sbb
xchg
mov
pop
and
mulb
std
pusha
inc
jno
jno
sub
sub
and
fiadds
lahf
scas
pushf
aaa
push
sbb
pop
lods
mov
popa
test
dec
push
fadd
jae
mov
lods
popf
xchg
xchg
shlb
jne
cltd
inc
inc
inc
fstl
fimull
sub
rol
dec
adc
iret
je
xchg
subb
movsl
orb
and
pop
mov
fistl
int3
cltd
cmc
dec
js
adc
shlb
push
and
test
xchg
sub
ficoms
xorl
roll
cmp
cmp
pusha
and
push
sti
mov
dec
inc
or
add
jmp
cli
sti
mov
push
cmpsb
adc
push
pop
ja
push
fisttps
insl
inc
js
outsl
mov
xchg
pusha
movsl
aam
xor
xor
outsb
inc
mov
jmp
adc
test
outsl
dec
xchg
sbb
lds
ss
sub
jbe
push
xchg
test
cltd
mov
movsb
xchg
popf
jno
xchg
shrl
notl
adc
and
das
lods
popf
fdivs
dec
mov
fnstenv
pop
imul
stos
xchg
testl
lds
stc
nop
and
ds
pushf
jbe
divl
inc
scas
fcmovnb
dec
in
in
inc
call
cltd
dec
movsl
cmp
lret
es
mov
jmp
fs
movsl
mov
push
mov
and
or
adc
int
out
imul
cmpsl
adc
das
xlat
movsl
mov
fxch
test
mov
adc
jmp
add
out
scas
add
lods
mov
adc
sbb
les
pop
and
mov
in
mov
outsl
xchg
rcll
out
inc
sub
insb
sysenter
in
gs
nop
or
loopne
shlb
push
push
jmp
cmpsl
mov
push
jb
and
fld
mov
xchg
or
push
es
das
lods
mov
scas
pop
aam
imul
mov
adc
or
repnz
lods
test
rcrb
stc
test
lock
lea
das
cltd
xchg
pop
stos
sbb
cmp
pop
ds
popa
mov
cmp
dec
pop
sbb
int3
pushf
mov
cwtl
out
adc
lock
fcmovu
mov
icebp
idiv
push
scas
mov
lret
mov
pop
mov
pop
imul
pop
outsb
cwtl
mov
mov
enter
fdivrs
ds
sbb
and
jecxz
mov
push
xchg
rorb
xor
ds
cmpsl
dec
test
lods
push
jge
cmp
mov
mov
and
mov
dec
jb
es
scas
aaa
cmp
add
lds
fistpl
dec
lds
sbb
and
mov
movsb
mov
adc
xorb
fistpll
dec
imul
and
adc
xor
loope
int
out
sbb
push
xchg
push
ret
ficoml
insb
stos
stc
pop
dec
imulb
mov
sbbl
push
sub
iret
aam
jo
mov
mov
outsl
test
shll
in
stc
fadds
test
inc
pushf
call
xor
ja
mov
mov
jge
cmp
mov
notl
popf
iret
pop
push
mov
fs
fbstp
jge
dec
push
jle
pop
jp
mov
test
hlt
aad
mov
mov
push
or
mov
push
sub
lods
cmp
ret
mov
in
push
insb
lret
enter
mov
mov
imul
in
inc
sub
loop
sub
add
jnp
and
fisubrl
repz
sub
and
shll
sbb
inc
paddusb
push
jo
xchg
test
ss
fiadds
ja
mov
out
in
mov
pop
inc
imul
pusha
fsub
pushl
dec
mov
hlt
adc
mov
outsl
mov
aaa
test
cmp
mov
xchg
adc
pop
inc
cmp
ss
mov
mov
out
in
je
and
arpl
xor
ljmp
lea
test
call
dec
xchg
lods
in
mov
data16
inc
imul
and
or
cli
lcall
adc
fldcw
sbb
mov
dec
aas
pop
push
cmp
jb
xchg
mov
cmp
bound
fbstp
add
jle
add
or
out
rcrb
sub
rclb
pop
jnp
stos
popa
mov
adc
aaa
bound
outsb
and
cmpsb
in
outsl
xchg
rorl
xchg
push
pop
push
pop
mov
inc
sub
enter
test
add
addl
xchg
mov
subb
jae
push
pop
sahf
add
stos
pop
push
xor
cwtl
fs
pop
mov
xchg
lcall
mov
jns
fidivl
push
dec
xchg
push
andl
nop
push
test
xchg
pop
movsl
push
push
mov
fsubp
xchg
jbe
push
paddq
aad
jo
sbb
sub
pop
inc
loopne
push
add
dec
nop
orb
dec
lahf
mov
adc
mov
ds
outsb
addb
mov
mul
pop
mov
lock
les
ret
xchg
out
push
xchg
dec
cli
leave
js
sahf
sbb
and
and
outsb
xchg
add
mov
test
jl
imul
lcall
aas
adc
jp
in
rcll
and
push
sbb
jl
push
clc
or
mov
xor
int3
js
inc
pushf
ja
fisttpll
mov
add
adc
scas
sbb
rorl
mov
xor
push
pushf
das
mov
mov
sub
xchg
dec
xor
xor
cmp
lret
call
sbb
dec
ficoms
mov
inc
xchg
jo
std
dec
xor
ja
cmc
xchg
push
inc
imul
sub
repnz
or
push
push
and
outsl
mov
ljmp
mov
bound
xchg
outsb
cwtl
inc
out
jmp
cmpsl
sbb
adc
pushf
cwtl
mov
sbb
xchg
das
mov
xchg
sbb
popa
cmp
cmc
xchg
inc
arpl
dec
repnz
jp
dec
and
pop
movsb
imul
push
sub
add
into
inc
loop
aaa
daa
pop
cmp
xor
cmp
mov
cmp
push
mov
xor
or
add
cmc
sbb
xchg
popa
inc
and
add
adc
and
in
pop
mov
scas
sub
fcmovne
dec
cwtl
test
in
jae
movsl
mov
mov
xchg
mov
call
sbb
mov
xor
add
mov
addb
mov
sbb
xchg
cli
pop
sub
jnp
jge
addr16
fs
lock
and
dec
sahf
push
push
aad
xor
mov
push
adc
sub
add
jne
pop
and
mov
dec
sbb
push
jmp
div
mov
pop
std
cltd
xor
mov
xchg
sub
push
dec
sub
cli
lods
pop
or
flds
leave
scas
jne
sub
into
in
sbb
dec
jge
mov
dec
xchg
pop
outsl
xchg
sub
pop
lret
cmp
xchg
out
mov
fs
dec
sbb
jb
jo
sub
mov
and
in
fucomi
add
inc
lods
mov
add
mov
xchg
push
call
fsubrs
dec
loop
je
sub
lret
mov
mov
or
mov
jecxz
notl
mov
sbb
pushf
int
add
pop
sarl
lcall
test
loope
pop
jmp
imulb
lcall
pop
test
js
pop
adc
aaa
xor
insb
outsb
fisubrl
mov
mov
pop
adc
in
pop
stos
or
dec
shll
mov
repnz
mov
ds
mov
das
fs
sub
mov
imul
filds
mov
outsl
fldt
push
lret
jg
dec
inc
mov
xor
inc
add
lret
add
loope
rcrl
lods
jnp
stos
adc
fnstsw
push
rcrb
hlt
aad
xor
sarl
into
daa
lret
mov
sbbb
sbb
out
lahf
xchg
inc
or
dec
mov
fs
push
dec
inc
movsl
rorb
add
cmp
xchg
cmp
rclb
stc
jae
mov
setne
adc
in
insl
xor
inc
mov
pop
pop
outsl
int
int3
enter
in
lock
xor
xchg
adc
incb
ret
imul
shrl
push
rcl
dec
ret
pop
adc
lcall
xchg
mov
lahf
mov
scas
xchg
xchg
cmp
dec
cmc
popa
popa
pop
cmp
and
sub
mov
fiaddl
jecxz
xchg
lea
mov
push
subb
sbb
in
mov
cmp
dec
movsl
dec
rorb
sub
scas
in
xor
push
adc
dec
jle
inc
std
push
push
add
dec
rorl
fnstcw
in
lea
jg
xchg
sub
popf
icebp
dec
pop
repz
popa
sub
cmp
add
mov
push
pop
aam
inc
nop
dec
rcr
pop
mov
inc
les
scas
mov
movsb
imul
lock
movsl
jle
mov
ret
mov
and
rcl
fisubrl
or
pushf
xchg
rcrb
cmp
cmpsl
mov
mov
rclb
push
pop
int3
fs
add
cmp
call
xchg
xor
jo
aaa
fildl
jmp
xchg
cmpb
adc
movsb
jns
cmp
add
cmp
lock
mov
stc
dec
push
inc
in
jns
pushf
ss
shll
mov
fs
or
stc
aas
shlb
jl
pop
pop
dec
dec
and
cmp
push
lret
inc
jecxz
fisubl
cld
jnp
gs
js
add
aad
jne
adc
fnsave
add
fidivrs
push
jmp
dec
dec
dec
ss
dec
gs
sub
add
cmp
add
loop
call
mov
add
pop
sbb
mov
xor
in
mov
add
mov
int
aaa
iret
sbb
fwait
or
mov
jns
or
test
pop
mov
pop
jnp
xor
or
in
rolb
cmc
add
and
cmp
jmp
add
dec
rorb
fmuls
enter
sub
andl
mov
mov
fstpt
ss
js
sbb
push
jg
icebp
cltd
push
or
loope
shrb
lock
repz
sbb
stos
mov
fwait
and
mov
leave
addl
leave
jecxz
jle
pop
int
jl
sti
pop
das
jb
add
xor
sub
mov
movsl
rol
add
jb
or
idivb
cli
inc
sbb
adc
fdivs
cmc
mov
rcll
jnp
sub
stc
adcb
mov
in
rclb
leave
nop
in
fadd
pop
inc
sbb
cwtl
subb
cmp
pop
das
dec
and
xchg
mov
in
pop
insb
ljmp
dec
add
ja
or
sub
or
stc
mov
addr16
popf
inc
add
aas
jl
stos
mov
ljmp
lds
movsb
mov
loope
jp
hlt
fmuls
pop
dec
xchg
cmc
mov
xchg
cmpsl
lods
icebp
dec
xor
pop
jmp
mov
jne
subl
push
lcall
cmc
insl
in
insb
int3
mov
aam
mov
mov
ret
fsubrp
outsl
push
or
push
loop
mov
push
pop
pop
dec
push
or
out
lahf
mov
mov
mov
loopne
cltd
imul
rorl
loop
repz
and
jmp
add
sub
cs
cmpsl
pop
mov
mov
adc
jp
jecxz
ficomps
mov
les
test
mov
xor
ret
and
jmp
xor
in
rorl
mov
sub
into
or
sbb
fimuls
adc
jge
je
xchg
cltd
push
pop
mov
push
scas
xchg
ss
mov
shll
pop
push
popf
into
inc
in
aam
push
je
xor
xchg
jbe
rclb
adc
pop
pop
mov
mov
dec
mov
sti
enter
popa
xchg
addl
xchg
cmc
jge
in
lds
out
jp
add
fidivrl
pop
arpl
pop
enter
adc
inc
lods
xor
fimull
mov
add
in
mov
pop
cmp
or
fcmovb
insb
xor
test
ja
xor
icebp
inc
insl
pop
in
arpl
xlat
leave
push
mov
rcrl
popa
mov
dec
in
cmpsl
push
repnz
or
out
mov
xchg
scas
sbb
push
jle
add
decb
pop
loop
mov
cmp
and
imul
mov
shr
add
push
inc
test
stc
adc
pop
mov
sub
lfs
xor
stos
cmc
mov
idivl
or
addr16
icebp
cltd
xlat
cltd
pop
dec
leave
cmp
mov
cmp
dec
data16
push
or
push
pop
or
cmpsl
cmp
rclb
loope
sti
jl
ffree
jnp
je
mov
mov
adc
pushf
int3
mov
fxch
push
adc
or
inc
sub
and
fucomip
loope
ljmp
outsl
mov
out
sbb
cwtl
fs
xor
sbb
das
pop
xorl
ljmp
pop
dec
cwtl
xchg
inc
sarl
sbb
push
daa
pop
lea
mov
fwait
scas
cmp
pusha
mov
xor
mov
push
pop
cmp
sbb
sbb
jge
inc
stc
test
out
dec
add
jge
or
int3
in
dec
dec
std
mov
mov
std
xor
pop
mov
push
xor
and
rclb
jp
mov
jbe
and
into
dec
in
adc
jo
sbb
dec
mov
cltd
mov
jmp
das
fcomip
les
stos
mov
iret
adc
mov
inc
ljmp
imul
dec
lret
and
fcomi
arpl
popf
xor
stc
int
lods
ret
or
adc
push
cltd
rcrb
cmp
out
jp
mov
pop
xchg
cli
cmp
mov
imul
add
pop
or
mov
cltd
imul
imulb
cs
outsb
scas
jmp
or
ret
dec
mov
mov
cmpsb
sbbl
lahf
adc
outsl
jmp
cmp
inc
jecxz
addl
insl
inc
les
clc
or
inc
mov
and
rorb
cli
addb
fstps
bound
xchg
adc
and
in
divl
add
in
push
add
pop
xchg
test
jge
jae
xchg
scas
punpckhbw
mov
jbe
or
out
adc
sub
push
add
ja
push
pop
imul
jo
dec
jne,pn
cmpsb
pop
mov
push
cld
dec
xchg
mov
pushf
add
das
and
cmp
push
pusha
xchg
leave
out
add
aas
leave
cmp
inc
fsubrs
inc
lds
mov
xchg
sbb
xchg
out
das
rolb
jno
test
add
jb
cbtw
or
pop
loope
fs
sub
test
mov
test
adc
sbb
adc
xor
shrb
ljmp
pusha
inc
cmp
pushf
mov
pop
xor
sarb
and
adc
adc
inc
add
cmp
ja
insl
pop
sbb
cmp
ss
add
xchg
xor
ret
sti
cmp
aad
aam
inc
imul
repz
fisttps
xor
or
or
push
dec
psubusw
jmp
mov
inc
push
fildll
loope
sub
das
inc
adc
pop
xchg
sub
adc
sub
pusha
xchg
lds
xor
dec
iret
add
lods
dec
adc
loope
data16
and
and
imul
mov
lds
pushf
xchg
push
and
int
and
test
in
dec
dec
dec
iret
outsl
in
fsubs
push
negl
sub
dec
aaa
xchg
aad
roll
sbbl
popa
add
repz
inc
jne
mov
mov
repnz
les
jb
addr16
xor
pop
jmp
mov
inc
leave
fsts
xchg
xchg
or
inc
pushf
aaa
mov
xor
sub
xchg
dec
lahf
outsb
jnp
in
repnz
fldcw
shlb
mull
iret
mov
mov
into
into
inc
inc
ljmp
jb
out
lods
cmp
sub
imul
pop
mov
jle
push
mov
sbb
sub
pop
stc
mov
add
stc
and
jge
mov
and
mov
cmc
pushf
fidivl
lock
sub
in
add
mov
mov
das
sub
mov
xor
add
lea
ds
insb
push
or
mov
add
shll
mov
or
rolb
adc
clc
jl
mov
in
xor
repnz
pushf
jb
or
pop
rcrb
adc
hlt
lret
lea
xor
mov
leave
push
xor
adc
nop
jns
jl
and
or
mov
out
jns
pushf
shrb
mov
mov
sub
in
es
into
enter
push
test
mov
cmp
mov
int3
jecxz
add
outsl
in
aad
mov
mov
sub
leave
mov
cld
shr
loop
movb
jnp
cmp
pop
adc
adc
mov
mov
mov
push
xchg
adc
jl
jb
sub
add
test
insl
lock
jp
ljmp
mov
lahf
jns
popa
rorl
loopne
sub
pop
and
pop
adc
add
aam
sub
sub
loope
into
jne
xor
lret
jae
xchg
lods
loopne
je
mov
xor
sub
dec
adc
add
push
pop
xchg
in
in
int
mov
mov
push
call
dec
sbb
int
sbbl
jo
loope
insb
jecxz
or
data16
xorl
das
xor
scas
mov
mov
mov
repz
and
inc
sbb
pushf
xor
mov
rcrl
insb
fs
das
idivl
pushf
pop
in
test
mov
xchg
repnz
mov
xchg
mov
inc
add
adc
cs
out
das
mov
mov
fimuls
sbb
mov
int3
ss
test
lock
sbb
out
jb
adc
je
jle
cmp
andl
stc
add
pop
inc
mov
lock
or
sbb
pop
aaa
jmp
mov
jno
ficoml
inc
mov
incb
call
in
testl
push
aam
aad
aas
js
inc
decl
inc
insl
vpaddb
sahf
push
int
adc
inc
lahf
movsl
xchg
iret
push
neg
xchg
pavgb
test
xchg
mov
lds
loopne
mov
pop
ljmp
jmp
xor
lods
stc
outsb
test
xor
mov
aas
xchg
lods
sub
gs
add
cmp
xchg
loop
pushf
push
sbb
sub
mov
mov
fs
dec
gs
mov
dec
sbb
sbb
lock
mov
dec
inc
sti
data16
push
or
mull
or
pushl
xchg
outsl
push
pop
filds
pop
inc
xchg
call
mov
fidivl
ja
xchg
lret
out
mov
in
cmpsb
or
es
pop
push
fsub
mov
mov
sbb
cwtl
std
xchg
xor
fnsave
inc
pop
inc
and
cmpsl
dec
fmuls
dec
out
xchg
sub
scas
mov
leave
mov
and
adc
pop
push
sub
addr16
xor
ja
das
clc
add
arpl
and
mov
ja
lock
nop
mov
lret
icebp
in
xor
dec
or
push
adc
xchg
test
addr16
add
fdiv
push
adc
mov
and
sarb
scas
mov
rol
rcll
stos
aas
sbb
cld
sbb
fisttps
cmp
enter
hlt
push
sbbb
mov
lret
addr16
insl
roll
ret
pop
aas
dec
roll
fbld
pop
xlat
imul
fists
jge
arpl
rcrl
ss
aas
add
shll
in
pop
pusha
leave
mov
sbb
jno
test
mov
stos
or
add
lahf
aam
leave
fsts
jmp
in
mov
add
ret
jl
das
cltd
cmc
mov
stos
push
mov
shrl
inc
fnstcw
lahf
dec
cld
out
xor
cmp
pushf
nop
imul
and
insb
sub
dec
repnz
adc
imul
mov
mov
jbe
jmp
sbb
jecxz
frstor
rcl
lret
dec
test
or
jmp
adc
loopne
inc
dec
cld
adc
mov
mov
mov
fbstp
sub
xchg
andl
pusha
ja
outsb
add
push
jno
xchg
stos
outsb
pop
mov
jnp
sub
aam
sbb
sbb
out
mov
mov
cs
or
out
movsl
xlat
adc
cmc
out
mov
push
ss
lods
dec
jl
enter
xor
neg
push
or
stc
inc
fsubl
stos
enter
add
insb
fldl2t
adc
lea
jg
jmp
stos
mov
push
xchg
scas
and
push
hlt
jg
outsl
fwait
push
orb
jnp
dec
lock
fnsave
hlt
mov
fsubs
inc
mov
jne
in
xor
fwait
sti
out
ret
dec
jbe
xor
pushf
cmc
popa
inc
xor
pop
cmp
jecxz
shrl
imul
movsl
call
pop
mov
imul
into
ficomps
test
or
ljmp
popl
sub
jcxz
das
dec
dec
xchg
mov
push
fldl
fidivs
mov
ret
dec
hlt
loope
out
notb
adc
mov
das
decb
dec
rorl
xor
enter
inc
dec
jge
cmp
popf
mov
xor
cmp
mov
or
push
loop
idivl
xor
mov
xchg
pop
cld
inc
cli
nop
sub
push
adc
cmp
adc
sti
add
jl
clc
or
mov
mov
xchg
test
in
clc
sub
mov
xor
test
cwtl
rcll
jne
rorl
rclb
sbb
dec
jne
mov
push
sbb
nop
jge
fimull
push
adc
ljmp
enter
pop
jle
xchg
insl
loop
mov
or
sub
jb
xor
loope
cld
int3
push
pusha
fwait
orb
test
cmp
cli
lock
and
iret
and
fdivr
xchg
push
ret
adc
dec
fcomp
js
push
mov
mov
sub
int
iret
cmp
rcrb
add
inc
aaa
aad
xchg
jne
sahf
out
mov
out
outsl
gs
insb
lret
nop
push
das
mov
movsb
sbb
xchg
mov
xchg
push
jl
pop
mov
rcll
fbld
leave
fldenv
in
mov
mov
add
or
lea
repz
mov
mov
mov
xchg
push
ljmp
out
sub
repz
mov
andl
jbe
and
cmpl
ret
dec
push
adc
stc
call
push
add
mov
xor
lret
sub
int3
pop
push
sub
jb
cmp
cwtl
and
in
pop
push
or
loop
mov
adc
dec
mov
and
adc
adc
xor
push
inc
sti
mov
inc
test
or
jecxz
mov
loopne
xchg
or
xor
scas
stc
outsb
mov
arpl
xor
in
call
jle
pop
pop
or
jno
mov
ret
jecxz
xor
stos
out
fisttpl
or
in
sahf
lahf
jge
sub
xor
enter
push
push
add
ljmp
inc
adc
push
ljmp
inc
push
sti
stc
add
and
lcall
pop
out
je
sbb
aam
xor
lret
mov
adc
pop
aam
dec
leave
hlt
stos
add
mov
lret
mov
xlat
loopne
sbb
into
movsl
push
jne
loope
push
push
or
push
adc
ljmp
adc
repnz
nop
cld
inc
rcrl
lea
jecxz
sbb
mov
mov
mov
mov
adc
and
jge
scas
out
lret
jmp
in
inc
add
loopne
push
adc
push
out
and
pusha
pop
and
pop
std
pop
dec
jle
push
dec
lret
mov
out
sub
or
push
icebp
test
idiv
push
repnz
inc
add
lret
or
enter
mov
in
ja
pop
std
cmp
mov
dec
sub
hlt
gs
inc
push
or
pop
cmc
xchg
push
in
in
pop
lret
popf
and
cli
dec
and
cmp
test
xor
mov
lcall
xchg
add
mov
jns
or
andb
out
cld
lcall
cmp
jb
mov
xor
lret
sarb
movsl
call
sub
or
jo
sbb
adc
shlb
pop
pop
inc
aam
lret
jno
and
movb
hlt
mov
int
mov
jl
in
test
or
imul
arpl
movsl
adc
sub
cwtl
inc
insl
pop
test
or
popf
out
es
mov
mov
cmp
int
mov
mov
xchg
push
add
sti
ret
xor
cld
pop
pop
stos
push
std
push
inc
jb
cmpsl
dec
std
jns
inc
sbb
lcall
pop
cmpsl
mov
jns
daa
push
ljmp
dec
inc
fwait
pop
dec
sarl
jnp
mov
mov
push
jg
xchg
loopne
popa
lds
ret
and
cli
mov
or
jne
sarl
aaa
jp
icebp
dec
push
into
cmc
out
and
inc
push
mov
mov
fldt
lea
enter
cwtl
repnz
repnz
xchg
cmpsb
xlat
nop
xchg
pop
xchg
pushf
mov
inc
cmp
mov
out
aas
loope
jp
mov
jb
stos
mov
int3
fstl
cmc
mov
sbb
repz
cmp
ljmp
out
mov
adc
mov
xor
cwtl
pop
sub
or
sbb
popf
mov
adc
sahf
mov
xchg
push
pushf
sub
packssdw
ja
dec
dec
pop
pop
push
xor
mov
lret
out
inc
test
jno
or
cltd
fwait
mov
jle
out
sub
add
inc
clc
adc
pushf
inc
out
add
adc
dec
lret
mov
inc
js
push
push
bound
sarl
push
dec
mov
sub
icebp
inc
push
repz
xchg
inc
arpl
ljmp
push
add
push
sbb
push
sbb
inc
call
pop
and
lahf
sbb
dec
outsb
mov
mov
pop
sbb
pop
imul
leave
push
lea
xorb
shlb
and
popa
scas
movsl
add
in
mov
pop
cmp
popw
imul
add
daa
sbb
cmp
iret
pop
outsl
insl
cmp
test
pop
xchg
and
dec
aas
cwtl
cmp
scas
cmp
sub
imul
stos
mov
jle
out
orl
push
movsb
inc
cmp
and
scas
jns
ja
add
addr16
xor
test
or
fsubs
lahf
inc
push
inc
jle
stos
daa
cmc
xlat
int3
lcall
fcoml
push
push
cld
and
sub
add
xchg
push
lcall
nop
in
fbstp
jmp
add
mov
sbb
outsb
cmp
cvtps2pi
outsb
add
xchg
lahf
ljmp
sbb
arpl
add
jae
lds
fisttpl
fadd
add
adc
shl
pop
sub
enter
add
out
mov
cmp
add
les
mov
xchg
cli
roll
dec
add
shlb
xchg
xorb
adc
adc
outsl
push
cltd
stos
cmp
xor
imul
push
test
sbbl
add
stos
addr16
mov
vmovupd
sbb
mov
sbb
mov
xor
pop
mov
xorb
clc
jnp
inc
inc
iret
into
mov
fsubrs
mov
adc
cmpsb
insl
sbb
imul
nop
xchg
or
test
cli
mov
mov
ss
or
cmp
aas
loop
or
idivl
push
or
push
ret
and
out
mov
jge
daa
add
std
inc
movsb
jge
aaa
loope
testb
in
sahf
hlt
and
lock
mov
push
scas
gs
inc
sti
rol
subl
mov
dec
dec
sub
xchg
mov
aam
xor
nop
dec
das
dec
cmp
outsl
lods
adc
push
rol
mov
and
mov
fxch
push
push
mov
es
mov
loop
stos
mov
mov
fdivs
pop
ror
xchg
mov
ret
cmp
fistl
jl
ret
outsb
add
mov
rcrl
and
inc
cmpsl
xchg
aaa
rclb
mov
mov
sub
and
jno
jno
test
sahf
cmp
addr16
dec
pushf
xchg
lcall
rcl
inc
add
cwtl
jo
out
xchg
cmpsb
jo
inc
fld1
jbe
or
xchg
cltd
outsl
data16
scas
and
inc
lret
cmp
push
push
test
xor
mov
fidivs
jp
in
loop
into
repz
mov
pushw
mov
cld
mov
sbb
pop
push
xor
das
xchg
jo
loopne
lds
jb
xor
xlat
pop
and
loopne
bound
scas
mov
pop
or
jns
test
out
xlat
cltd
movsb
xchg
sbb
adc
mov
int
aas
push
lods
and
pop
sbb
xor
mov
xor
push
cmp
sub
sub
push
xlat
addr16
lods
sbb
lahf
cs
mov
sti
call
enter
jo
aas
cmpsl
stos
mov
out
mov
jae
and
stos
jno
stos
into
movl
push
rolb
or
popf
mov
ja
adc
shl
xchg
push
test
call
push
mov
les
fistpl
jg
dec
or
and
loopne
pusha
inc
add
imul
arpl
mov
shlb
loopne
mov
shlb
je
adc
sbb
xchg
fnstcw
movb
or
adc
cmp
mov
ret
push
rcrl
jmp
add
repnz
adc
sbb
push
and
pop
ret
push
push
imul
mov
mov
arpl
enter
mov
mov
andb
adc
bound
pushf
pop
sub
xchg
jmp
add
or
adc
pop
cmp
push
push
pop
xor
rolb
ret
push
sub
xorb
sahf
orb
inc
dec
test
sub
sub
insb
sahf
in
or
fwait
pop
sub
mov
std
ljmp
xchg
pop
js
cmp
sti
cmc
stos
lahf
cmp
icebp
dec
xor
adc
cmp
xchg
in
in
rclb
mov
insb
pusha
ds
cmpb
xlat
inc
into
pop
jae
mov
jno
fdivrl
sub
push
cmp
jge
xlat
and
adc
or
pushf
xchg
mov
mov
sbbb
pusha
mov
mov
fcoml
jle
mov
call
push
and
clc
push
fcoml
mov
push
add
iret
cld
jl
hlt
lcall
andl
shlb
push
add
adc
enter
lahf
sub
test
insb
xchg
mov
dec
ret
sub
lea
dec
in
cmp
into
push
iret
fdivrs
cwtl
mov
ds
and
xchg
sbb
int
mov
inc
popf
inc
f2xm1
cmp
decb
cs
dec
ret
jecxz
xchg
mov
and
and
push
and
sbb
xchg
dec
fwait
mov
popf
les
int3
inc
xor
fcmovnb
iret
in
sbb
mov
movb
in
cli
mov
iret
ret
or
pop
test
and
mov
rorb
out
sub
int3
jne
fstps
out
push
lcall
inc
js
xor
pop
movb
mov
pop
cmp
xchg
sbb
adc
cmpsl
jns
ds
mov
cltd
outsb
icebp
pop
stos
xor
sahf
movsb
jge
idiv
push
jmp
in
outsl
imul
insl
rorl
out
sbb
imul
mov
aad
ds
jmp
loop
clc
cwtl
dec
sub
sti
nop
dec
mov
imul
ja
call
jmp
adc
fdivl
adc
cmpsl
ret
int3
xor
pop
sub
movl
stc
outsb
sahf
in
cmp
hlt
sahf
push
cli
fs
adc
dec
imul
mov
scas
xor
mov
ja
push
mov
subb
xlat
lods
arpl
sbb
adc
lds
xchg
xor
mov
mov
push
sbb
pop
and
push
std
outsl
pushf
jbe
inc
leave
dec
lcall
inc
cmp
popf
testb
push
mov
lret
push
push
mov
rcr
aam
jne
sti
xchg
aam
or
jns
cmp
or
lcall
jl
hlt
cmpsl
pop
imul
repnz
xchg
mov
scas
addl
pop
push
movsl
sub
sbb
or
cwtl
push
push
or
sbb
aaa
hlt
cmp
scas
push
add
add
or
pop
icebp
mov
mov
sub
call
mov
jnp
sub
mov
xchg
adc
xchg
and
fstpl
sub
lcall
add
inc
sahf
push
jno
or
and
sub
into
mov
rorb
mov
push
jno
aam
cmpsb
addl
data16
ja
xchg
mov
or
push
adc
popa
addl
dec
scas
repnz
rorb
mov
dec
in
icebp
mov
dec
adc
xchg
pop
pop
out
icebp
cltd
push
dec
inc
push
mov
adc
int3
dec
push
push
ljmp
inc
push
mov
cmp
cmp
nop
xorb
adc
out
mov
bnd
pop
in
or
xor
xor
mov
std
mov
mov
inc
sbb
pop
outsl
outsl
inc
insb
out
jecxz
aaa
inc
call
push
and
jns
ss
sarb
jmp
js
lcall
cmc
xor
ret
lods
mov
arpl
or
sbb
inc
sbb
jmp
jmp
xchg
cmpsb
jle
shll
mov
ljmp
pop
xchg
adc
xchg
jne
out
mov
jl
adc
cmp
push
push
leave
aas
xchg
cld
fistl
add
and
cmp
and
pusha
xchg
mov
xor
xchg
leave
xchg
mov
and
or
loop
jl
bnd
gs
adc
adc
scas
inc
popa
or
lea
lods
cs
data16
into
cmp
popa
in
push
inc
push
mov
cmp
mov
lea
jmp
in
sub
lods
std
jnp
popa
cltd
dec
loopne
jnp
in
aaa
mov
fwait
daa
mov
test
clc
mov
mov
mov
dec
pop
mov
aad
loop
test
es
and
cwtl
xchg
adcb
stc
lock
add
mov
jno
adc
pop
rorl
mov
repnz
inc
dec
mov
imul
push
hlt
stos
ljmp
xchg
test
mov
pop
add
xchg
shl
add
fidivrs
mov
inc
push
mov
pop
shll
nop
imul
add
inc
add
add
mov
int
pop
pop
sahf
sbb
es
pop
je
ss
push
imul
cs
mov
sub
hlt
rclb
iret
stos
out
mov
pop
lods
sarb
test
inc
insb
pusha
inc
aam
dec
sahf
adc
mov
pcmpgtb
outsl
ret
das
push
icebp
push
ret
in
ret
push
sbb
sar
mov
or
jge
mov
xchg
inc
cmp
fdivrp
hlt
mov
js
mov
shl
dec
sbb
mov
leave
jge
jne
jle
fs
rorb
jge
hlt
mov
jecxz
push
push
scas
adc
ds
test
into
movsb
nop
xchg
scas
arpl
les
cld
movsb
rclb
and
mov
test
push
les
dec
jns
and
dec
negl
adc
inc
mov
imul
jne
loope
adc
and
cmp
fcmovb
jno
inc
add
sub
dec
inc
cmp
pop
les
std
loop
xchg
in
ds
xchg
xor
clc
jmp
bound
xor
jecxz
sbb
pop
xchg
add
add
xchg
dec
add
popl
jl
and
icebp
pop
pop
cmpsl
push
xchg
mov
aas
loopne
jb
fists
jecxz
popl
mov
cmpsb
por
movsl
decl
lcall
shlb
adc
mov
adc
js
sub
test
pop
out
lcall
mov
mov
movsb
sar
or
fadd
jg
mov
subl
adc
push
ret
fcomps
and
or
sub
bswap
jne
jge
xor
ds
fldl
bound
jno
push
test
lcall
inc
sub
ret
fs
icebp
shrb
mov
add
movsb
pop
mov
xor
jmp
outsb
push
sub
push
fidivrs
mov
out
adc
xor
movsb
xchg
jp
hlt
add
or
lods
jo
clc
push
mov
push
add
scas
stos
jo
mulb
ja
in
outsb
sub
mov
or
mov
push
int
xor
shlb
lock
dec
xor
pop
mov
movsb
sbb
adc
sti
push
sbb
and
out
pop
push
nop
xor
lahf
mov
mov
nop
or
add
jnp
loope
jnp
cwtl
add
xchg
fucom
add
je
pop
dec
lods
mov
cmp
dec
mov
aas
andb
lds
mov
inc
ja
or
jle
inc
les
push
mov
mov
lcall
outsl
addr16
rcrb
pop
int3
sub
add
mov
pop
aaa
xchg
out
mov
arpl
sbb
or
loope
dec
pop
ret
or
mov
incb
ret
mov
cmp
lcall
dec
sbb
xchg
sarb
sub
xor
pop
push
in
push
mov
leave
xchg
mov
adc
fstpl
pop
stc
cmp
mov
mov
cmp
dec
sbb
mov
mov
shrl
push
gs
xor
xchg
movsl
mov
jnp
xchg
push
jecxz
movsb
test
push
push
fildl
stos
dec
cmp
adc
xor
mov
sub
or
push
in
cld
dec
inc
loopew
add
scas
dec
and
sbb
cs
lds
js
fadds
xchg
xchg
add
jne
aad
pop
aad
clc
arpl
in
inc
push
bound
jo
sbb
inc
or
lcall
pop
pop
rcll
sbb
cmc
push
ret
imul
inc
sbb
push
insb
adc
mov
push
push
mov
mov
xchg
pop
mov
inc
lds
in
xor
ds
js
or
aam
sbb
sbb
push
jnp
mov
pop
faddp
push
fs
inc
mov
jae
test
sub
push
jle
jmp
adcl
or
je
pop
mov
pop
fcoml
add
inc
pop
mov
loope
outsb
fiaddl
or
pop
ja
je
fildll
mov
incl
sub
lea
inc
jle
sub
push
mov
xor
or
stos
inc
and
push
aas
lea
or
mov
popa
jbe
sbb
sbb
xchg
push
jg
cld
leave
adc
push
inc
xor
adc
lcall
jle
pop
xor
mov
push
ss
or
fbld
rcpps
subb
andl
sti
mov
fwait
lret
xchg
in
fwait
jae
aad
mov
lea
imul
dec
stos
cld
lret
xchg
cmp
sbbb
ds
inc
dec
or
push
xor
insl
in
jnp
xor
push
dec
sbb
cmp
in
mov
xchg
movsl
dec
fildll
sub
cwtl
xor
inc
jecxz
mov
xchg
mov
add
adc
inc
int
jle
orl
leave
scas
into
stos
push
mov
add
inc
jno
push
in
lods
subl
mov
push
mov
mov
mov
and
in
sbb
les
clc
jo
adc
add
adc
shl
je
fisttpll
mov
mov
sbb
cmc
iret
push
les
fucomp
into
popf
mov
ljmp
adc
xchg
in
jb
mov
sub
jne
inc
fiaddl
daa
mov
leave
add
mov
dec
insb
out
xchg
pop
mov
stc
mul
xchg
xor
aas
fs
enter
repz
add
add
or
mov
ljmp
std
pop
dec
js
pop
mov
dec
jg
cwtl
insb
outsl
add
cmp
in
mov
add
ret
mov
scas
enter
mov
cmp
push
outsb
dec
pushf
mov
bswap
shll
sub
jnp
sub
jmp
mov
mov
sub
inc
pusha
fstp
add
dec
add
cmp
inc
pop
sbb
sub
or
jno
mov
les
mov
add
adc
sbb
xor
mov
inc
sbb
add
es
iret
gs
mov
and
in
mov
ljmp
stc
mov
push
inc
scas
or
add
iret
push
repnz
jge,pn
mov
aad
stc
or
call
cmp
repnz
loop
and
ja
and
mov
xor
xchg
test
cmpb
sub
outsb
in
pop
jl
sbb
add
lcall
cli
das
rcrl
mov
pusha
add
int
xor
fldl
adc
fadd
aas
cmpsl
push
dec
mov
pop
xchg
jmp
push
jb
xchg
lods
leave
addl
out
jmp
sbb
repnz
shrb
xchg
mov
and
test
cmp
lds
rcrb
lahf
roll
inc
loope
lret
or
mov
add
mov
push
aaa
xlat
mov
mov
and
popf
aam
ret
cltd
rclb
mov
ja
lcall
inc
and
iret
shrl
lret
or
shll
inc
fdivrs
popf
rcrl
imul
lods
std
cltd
in
ret
repnz
sti
sub
nop
stos
mov
xchg
pop
add
push
cmpsl
or
jmp
lods
repnz
sbb
icebp
mov
imull
lret
cld
mov
add
sub
dec
lcall
addr16
inc
test
aas
nop
in
pop
sbb
inc
fwait
mov
aad
stos
std
xchg
push
xchg
test
fbstp
add
ss
sahf
ror
pushf
loopne
loopne
add
cmp
push
jg
mov
in
loop
lods
adc
js
int
pop
mov
and
pslld
inc
fidivrl
sti
adc
mov
jg
fidivl
pop
mov
add
movsb
sbbl
js
jp
jmp
int3
mov
cmpb
sub
into
mov
pusha
add
imul
in
mov
es
fldpi
dec
inc
sub
jge
dec
hlt
sub
and
mov
lock
push
outsb
aam
jecxz
mov
and
mov
xchg
adc
mov
aaa
fsubr
and
ret
mov
mov
push
out
fidivs
adc
aad
mov
outsb
jbe
in
shr
and
enter
jo
or
in
xchg
stos
js
fcompl
in
inc
cmp
movsb
aad
jg
pop
sub
mov
lock
repnz
bound
pop
mov
shrb
add
sbb
les
mov
jecxz
test
ds
jns
aad
repnz
dec
sahf
push
xchg
and
mov
fdivrl
fists
daa
testl
insl
popa
lahf
notb
inc
popf
and
fcomps
and
lret
shll
in
punpckhdq
cmpb
push
in
dec
iret
push
jbe
sbb
lea
xor
movsb
pop
pop
enter
adc
cs
push
ret
arpl
lods
xor
add
cld
adc
inc
xor
mov
mov
adc
xchg
cmpl
jge
inc
lahf
lcall
mov
ret
enter
mov
xchg
pusha
mov
idiv
scas
push
loope
xchg
jecxz
cmp
in
jp
popf
inc
xchg
into
andl
mov
fcomp
hlt
jg
add
or
repnz
inc
lods
int
out
push
test
aam
pop
inc
int3
mov
into
arpl
mov
std
lods
mov
sbb
sbb
and
iret
movsl
mov
loope
int
xchg
iret
jno
add
mov
pop
add
fwait
andw
add
pop
jne
or
cmp
lahf
cmpsb
fdivr
cld
loop
cmpsb
cmp
enter
xchg
cmp
popa
cs
lea
aam
fadds
fnsave
cmp
sarl
outsb
lock
gs
scas
lret
pop
nop
shrb
iret
pop
sub
push
icebp
adc
sub
adc
loope
insl
in
add
je
loopw
loopne
push
aad
push
mov
push
sub
xor
sbbb
xor
sahf
jmp
mov
lret
dec
pushf
les
add
push
push
rolb
dec
push
xor
lods
mov
shufps
aam
movb
xchg
and
bound
mov
lds
mov
lret
add
pop
jno
dec
pop
aad
shl
inc
nop
adc
jnp
ds
stos
out
dec
xchg
clc
xor
mov
popa
cmc
sbb
loop
cwtl
enter
push
movsb
repz
rcrl
ficoms
cmpsb
inc
xor
fdivl
cld
mov
mov
loope
out
hlt
lret
sbb
vaddsubpd
scas
adc
inc
cld
dec
fsubl
push
bound
inc
dec
push
xor
jbe
movsb
pop
sub
mov
ss
mov
ret
aas
das
mov
xor
repz
push
push
sbb
jns
decb
adc
cmpsb
sub
movsb
sub
pop
sbb
mov
cmp
mov
insb
lods
mov
sbb
pop
add
pop
fwait
mov
sub
and
sbb
aam
mov
sbb
or
and
outsb
inc
mov
mov
lcall
jmp
jmp
push
dec
and
xor
lock
popf
jae
pusha
jbe
xorl
mov
mov
gs
jle
pop
dec
pop
ffree
mov
jno
shrl
inc
push
clc
cmp
cmp
sub
js
icebp
sub
add
in
fmuls
push
inc
sbb
xchg
ljmp
mov
lahf
addl
push
jmp
dec
xchg
pushf
in
sub
fsubl
sbb
mov
sbb
add
add
jbe
pop
aas
in
xchg
rorb
pop
scas
sub
fbstp
sahf
cmp
stc
and
inc
pushw
pop
xchg
add
add
mov
imul
mov
icebp
rcl
sub
jns
xor
pop
repz
dec
jmp
xchg
dec
sub
scas
mov
inc
mov
push
jmp
out
push
inc
pusha
jno
jge
loope
mov
loop
push
arpl
jp
pop
pop
jmp
test
shrb
xor
push
fcmovnbe
jnp
addl
fsubl
adc
mov
pop
dec
inc
inc
aam
rcl
pushf
int
fidivrs
dec
cmp
mov
lods
push
mov
push
push
xchg
js
int3
cltd
jecxz
inc
mov
ljmp
mov
insl
mov
cmp
icebp
sbb
mov
jo
mov
shrl
inc
mov
int3
push
xchg
scas
sub
enter
jmp
and
mov
jne
add
clc
adc
mov
push
xchg
mov
and
pop
cmp
inc
jae
das
jl
xchg
mov
jp
stos
mov
jle
sub
mov
popf
insl
jp
jmp
pop
ficoms
scas
stos
stc
dec
pop
decl
mov
lcall
insb
and
or
nop
mov
mov
and
mov
inc
adc
daa
mov
aad
push
push
mov
adc
dec
mov
fdivrs
mov
cli
call
adc
and
cwtl
loopne
jo
cs
jo
adc
outsb
outsl
movsb
rcrb
or
pop
icebp
push
in
pop
iret
shll
shll
add
popa
add
mov
push
jo
adc
fs
cmp
push
mov
int3
mov
insb
and
mov
ja
sub
addr16
addr16
stc
rcrl
or
mov
mov
jecxz
adc
ljmp
out
sbb
mov
add
fwait
roll
jbe
imul
cli
imul
subb
sbb
dec
movsb
sub
xchg
movsl
adc
rcrl
in
fisubs
xor
into
mov
pusha
clc
sahf
gs
xchg
and
incb
mov
inc
outsl
inc
lock
in
lock
idivb
lahf
in
out
adc
mov
stos
sbb
mov
jno
jmp
ja
dec
inc
dec
pusha
lahf
leave
cmp
out
sbb
mov
mov
jle
add
mov
pop
lcall
cmc
fcoms
pop
sub
or
cltd
cmpsl
push
jne
mov
lret
aam
push
xor
rcl
test
in
loope
cmp
xlat
xchg
or
in
test
hlt
dec
dec
loop
loope
mov
inc
aaa
pop
pop
pop
aam
xchg
dec
rolb
fabs
lret
in
push
outsb
dec
lea
cli
jns
test
lret
sub
xor
idivb
or
cwtl
cmp
and
xchg
test
lret
sbb
cmpsl
inc
sbb
jmp
js
call
jae
xchg
cmp
pop
bound
add
rclb
cltd
jmp
push
insb
insl
out
pop
orb
lock
loope
mov
jno
mov
dec
add
outsl
xchg
cwtl
imul
fwait
push
aas
lock
je
or
dec
imul
mov
jmp
iret
leave
fsub
js
loopne
cmp
inc
push
add
and
fbstp
scas
push
sahf
sub
cli
call
ret
pushf
imull
push
fwait
dec
sub
stos
xor
and
or
xor
pop
mov
pop
call
test
adc
lds
dec
ljmp
mov
xchg
sahf
and
movl
std
clc
pop
pop
mov
mov
arpl
push
cmp
test
pop
push
adc
insb
ret
shr
mov
pop
ret
cmp
mov
push
pop
pusha
insl
fldcw
xchg
fbld
mov
in
mov
or
mov
loope
adc
stos
pushf
xchg
push
outsl
adc
popf
jns
add
or
add
add
xchg
jne
ficomps
mov
mov
xchg
inc
dec
xchg
mov
cmpsl
mov
bound
xchg
test
imul
call
stos
fsubrs
addr16
mov
js
test
enter
ljmp
hlt
jnp
cmp
mov
subl
in
mov
sub
jns
into
mov
std
fiaddl
call
imul
add
fcmovb
sub
out
bswap
mov
aas
gs
push
hlt
mov
aas
pop
jb
sar
jbe
in
insb
mov
sub
into
pop
roll
test
adc
mov
add
repz
cmp
and
mov
leave
cmp
sub
sbb
sub
push
mov
xor
repz
adc
mov
dec
mov
jbe
jbe
pop
jae
sti
xchg
ljmp
aaa
adc
imul
adc
mov
scas
push
xchg
shl
jecxz
pop
clc
dec
fsub
out
sbb
push
and
inc
mov
adc
roll
ret
rorl
inc
loope
aaa
mov
cmpsl
pop
sbb
jno
push
or
push
xor
orb
bnd
xchg
add
dec
into
mov
stos
dec
je
gs
insb
outsl
jnp
dec
xchg
inc
xchg
cmp
js
ljmp
imul
push
sbb
sub
cs
push
inc
adc
js
clc
dec
inc
and
dec
pop
inc
lret
xchg
das
jo
and
addr16
push
jg
lods
clc
jo
jmp
lret
mov
sub
xchg
ds
cmc
pop
imull
jae
mov
sub
enter
and
cmp
out
xor
adc
cs
into
mov
and
jmp
mov
mov
cmp
and
pop
cmp
mov
leave
in
xchg
cmp
loope
cmp
leave
sub
mov
add
inc
and
rcrb
dec
sti
xchg
ficompl
push
outsl
out
fidivl
pop
mov
fsubrs
dec
out
out
push
aam
sahf
test
das
fstpt
mov
inc
imul
jae
push
leave
dec
imul
jp
add
sbb
cmpl
lods
mov
jge
xor
std
sbb
jne
jnp
testb
pop
mov
lods
xor
es
sbbl
xchg
inc
or
sahf
sub
mov
push
imul
push
rcl
fidivs
bnd
enter
cltd
pop
and
sub
out
jne
or
leave
mov
sub
aaa
dec
out
and
dec
dec
adc
xor
or
aam
clc
mov
pushf
push
ds
lcall
into
rolb
shrl
movsl
adc
adc
arpl
xchg
dec
test
jb
ds
adc
xchg
sbb
fcmovbe
push
pop
add
dec
add
adcb
dec
sub
or
or
shll
pop
mov
jbe
dec
insl
xor
fidivrl
jle
pop
rcrb
rcr
jg
shufps
imul
out
sub
lock
push
push
push
fsub
ds
hlt
cmpb
in
pop
dec
or
cmpsb
into
popa
push
mov
xchg
in
hlt
xchg
mov
out
sbb
and
push
aad
add
dec
imul
add
aad
insl
dec
enter
dec
js
sub
daa
sbb
aas
mov
insl
call
dec
sbb
add
fcoms
mov
xor
in
test
adc
mov
stos
in
pop
pushf
stos
and
pop
or
mov
adc
sbb
pop
mov
xor
dec
jl
add
jne
test
inc
fdivr
imul
xchg
xchg
hlt
lcall
mov
test
inc
scas
mov
cli
cmp
mov
testb
cmpsl
add
lods
xor
daa
clc
jo
cmp
mov
mov
shrl
jbe
cmp
fs
adc
mov
jp
pop
sub
jbe
sbb
outsl
add
aam
mov
push
cmpsl
stos
jno
pop
mov
jnp
jge
in
add
mov
test
add
xchg
mov
loope
cmp
mov
adc
xchg
iret
mov
dec
ljmp
rorb
lods
jno
mov
es
sbb
pop
xor
nop
enter
lock
inc
rolw
rol
dec
sub
repz
inc
mov
and
enter
aaa
or
pushf
pusha
xor
push
stos
mov
in
inc
pop
pusha
icebp
cld
je
sub
imul
scas
les
adc
cmpsl
faddl
mov
int
test
sbb
and
clc
in
mov
push
loop
fsub
cltd
in
leave
out
mov
in
sbb
lret
xchg
test
es
ffreep
insl
xchg
push
xchg
lcall
sbb
inc
stc
sbb
jmp
pop
lods
fxch
fwait
and
push
mov
add
adc
xlat
outsb
xchg
mov
and
and
pop
shll
int3
js
icebp
pop
icebp
push
sub
push
inc
dec
mov
hlt
int
cmp
xchg
jg
add
mov
js
subl
pop
ss
fisttpl
pusha
divl
jge
push
push
xor
xor
mov
sbb
out
jp
add
outsl
lcall
jno
jns
scas
sbb
push
xorl
loopne
in
aaa
sbb
lds
push
popl
adc
jb
addr16
nop
loopne
test
pop
push
jne
pushf
cmc
imul
jo
sbb
in
in
push
mov
lock
sbb
cmpsl
and
movsb
daa
sbb
cmp
test
mov
mov
call
pop
lods
lahf
pop
and
mov
loopne
xchg
leave
and
leave
lds
or
inc
adc
jo
les
dec
popa
stc
and
je
pop
push
imul
add
jp
lock
push
dec
sub
push
pushf
lcall
daa
sbb
mov
add
sti
leave
cwtl
or
jg
mov
adc
jle
in
inc
xchg
jne
or
pop
nop
aas
andb
lods
add
dec
dec
and
pop
mov
xor
jp
adc
sub
es
adc
mov
sbb
jge
scas
mov
mov
mov
pop
lea
mov
ljmp
repz
test
cwtl
arpl
mov
pop
mov
rcrb
or
push
pop
ret
fdivr
cmc
xchg
cmp
push
push
sbb
sbb
clc
imul
data16
push
and
insl
out
xchg
cmp
into
push
roll
fdivrs
cmp
out
xor
add
jp
xor
push
imul
sbb
adc
cmp
in
jl
into
fbstp
push
pop
cs
xchg
xor
mov
xor
cmp
mov
mov
cmp
lea
pop
je
call
push
pop
mov
or
imul
pop
sub
jb
pop
movsb
push
dec
cs
jnp
push
sti
sub
and
pop
orb
jne
fwait
dec
in
dec
sahf
sbb
clc
fildll
or
andl
sahf
inc
jmp
movsb
mov
cmp
fsub
mov
fildll
jecxz
lret
push
push
fwait
jecxz
cli
rorb
add
ja
cld
aas
je
notl
and
lret
stos
cmc
arpl
ljmp
into
fwait
mov
testb
mov
mov
push
push
imul
imul
mov
jne
aam
pop
pop
loope
cmpsb
mov
mov
cld
adc
mov
ja
into
cmp
cmpsb
hlt
push
mov
and
cmp
mov
inc
push
inc
ljmp
enter
std
mov
cmp
jge
nop
mov
aam
cs
dec
or
mov
sbb
mov
and
sub
xchg
ljmp
dec
pop
add
jp
mov
out
jmp
stos
pop
pop
insb
or
mov
xor
jns
gs
shrb
xchg
add
sub
imul
or
inc
imul
dec
out
out
sahf
dec
fisubrl
mov
xchg
lds
inc
mov
movsl
repnz
mov
xchg
sbb
push
add
in
inc
stos
mov
imul
jl
mov
dec
aam
sbb
lods
sub
imul
pop
add
and
xchg
mov
xchg
mov
dec
cltd
pop
dec
push
cmp
popa
push
xchg
clc
or
and
ror
xchg
push
test
push
repz
mov
pop
cli
pshufw
jae
xchg
lods
lock
mov
mov
mov
or
adc
jo
pop
xor
dec
sarl
aam
test
cltd
pop
cli
test
fs
aaa
and
xchg
cmp
xlat
dec
popf
out
clc
lcall
sub
pushf
adc
shrb
hlt
jl
pusha
mov
imul
xchg
mov
pop
enter
sub
sub
cmp
inc
xor
add
div
mov
jo
jbe
dec
lret
sarl
movsb
pop
pop
movsl
dec
cwtl
repz
lods
jp
jecxz
mov
add
fdivrl
jp
cmpsb
mov
lods
push
lret
mov
lods
mov
fcmove
sbb
cmpsb
dec
fdivl
mov
sbb
mov
mulb
shrl
scas
pop
cmpl
shlb
sbb
pop
sbb
sbb
out
inc
jb
aam
jmp
push
mov
ss
and
jecxz
adc
mov
pop
inc
sub
mov
dec
imul
fildll
add
cmp
mov
mov
sbb
call
or
cmc
inc
outsb
test
add
addr16
shll
add
sbb
or
hlt
out
cwtl
incl
sbb
pop
andl
jmp
outsl
push
aas
xchg
aaa
aas
scas
dec
sub
out
mov
dec
mov
shll
lds
lods
cmp
sbbb
out
xchg
inc
sub
sub
pop
xor
pop
sarb
out
leave
sbb
cwtl
mov
scas
sub
das
out
shlb
fwait
popa
out
xor
mov
add
popf
test
icebp
mov
adc
int
fnstcw
loopne
lahf
inc
xor
xchg
mov
or
inc
mov
xchg
cmpl
push
xchg
test
popf
imul
cmpsl
or
xor
jns
sbb
cmp
xchg
aam
bound
sahf
sbb
bound
ja
sub
jge
in
dec
inc
addr16
sub
neg
cmp
stc
outsb
push
rcl
imul
out
outsl
add
mov
dec
fs
outsl
mov
pcmpgtb
sahf
sub
xchg
pop
mov
dec
jmp
push
rcrb
lds
push
test
popf
jge
out
fnsave
repz
lods
in
xorb
in
addr16
shlb
iret
fbstp
in
dec
and
cmpsb
jp
xchg
mov
mov
push
jbe
and
movsb
lea
lea
cs
ret
nop
out
push
mov
aas
shlb
sbb
mov
aaa
outsb
and
ficompl
mov
mov
sbb
fdivr
ret
jl
push
aas
hlt
mov
cs
push
fstpt
lea
test
cmpsb
repz
sahf
mov
jmp
pop
lods
aam
lods
cmp
dec
mov
loop
mov
nop
cmp
lcall
sbb
push
rolb
mov
push
pop
xor
rcrl
scas
cmpb
mov
dec
or
push
and
ljmp
orl
cmp
jg
sbb
adc
aad
and
cwtl
in
push
xor
es
imul
sbb
xchg
dec
sti
insb
ds
jmp
je
cmpsb
flds
fsubl
aas
out
fdivr
push
mov
cwtl
push
lods
inc
popf
stos
sbb
xor
in
pmulhuw
mov
mov
test
into
pusha
push
sub
adc
xchg
cmp
jbe
or
out
and
inc
lea
cltd
or
push
mov
mov
test
jmp
ficompl
stos
popa
or
inc
jmp
outsl
ljmp
mov
in
ja
cmpsl
cmp
out
cmp
aaa
je
pop
cltd
ret
dec
in
push
loopne
xor
imull
ret
lret
push
lods
push
adc
xor
jle
sub
test
scas
orl
mov
push
adc
cltd
adc
inc
cltd
xchg
shll
pop
pop
scas
pop
lods
aad
mov
sbb
mov
pop
xchg
and
push
mov
enter
and
push
dec
bound
js
sub
les
notb
cmp
mov
jb
scas
inc
data16
adc
sub
loopne
in
stos
out
xor
lea
fcoml
cmc
pop
loop
imul
leave
aas
arpl
mov
subl
xchg
in
imul
leave
mov
sbb
cmp
inc
repnz
cmp
in
or
sbb
cmp
loop
fldl
imul
push
sub
es
iret
std
xor
fwait
xor
xor
into
dec
outsl
jp
push
pop
das
and
mov
cmpb
cmp
inc
inc
call
push
dec
jecxz
sbb
dec
jbe
jbe
or
add
and
jge
data16
mov
movsb
jno
clc
dec
and
mov
aas
std
xchg
cli
pop
shlb
jecxz
aas
adc
fdivl
adc
scas
cmp
push
std
imulb
fstpt
shlb
nop
or
fmulp
jmp
sbb
or
sub
fadd
inc
nop
xchg
loop
push
push
das
jne
xor
and
xchg
pop
dec
jne
call
push
push
shl
pop
imul
adc
fidivl
xchg
jmp
ficompl
and
int3
das
out
ljmp
pop
mulb
inc
or
arpl
movsl
xlat
push
mov
das
pop
sub
pop
lock
pop
aam
mov
cmp
xchg
dec
daa
cmc
clc
repz
aaa
jno
roll
aad
cmp
ds
mov
insl
fisttpll
filds
cli
imul
imul
pop
dec
mov
push
ss
and
dec
ret
lea
cmp
jnp
sbb
iret
test
dec
sbb
leave
xor
jmp
call
push
xlat
fdivl
insb
adc
imul
je
lods
inc
sti
loopne
out
dec
cmp
repnz
in
xlat
or
jp
imul
add
mov
or
sbb
and
mov
mov
lods
xor
cmc
ficompl
adc
in
iret
cmc
ret
adc
pop
jmp
cmpsb
movsl
or
push
or
mov
push
adc
outsb
lret
push
sahf
adc
cltd
or
test
sbb
insl
jno
push
inc
sub
lods
push
call
icebp
cmpb
push
das
nop
mov
rorl
cmp
fdivl
or
jns
push
out
stos
mov
add
into
int3
mov
lahf
shlb
jp
pop
inc
movsl
inc
popa
pop
mov
std
push
cmp
dec
xorl
rorl
aas
sub
dec
test
xor
aaa
xor
es
std
sub
std
adc
lret
test
jne
sbb
aam
xchg
das
dec
inc
fwait
std
sbb
add
enter
rcll
and
pop
std
xlat
cmp
dec
sbb
xor
sarb
popa
xchg
mov
jne
or
ret
adc
call
adc
adc
rcll
add
mov
xchg
dec
imul
mov
nop
stos
ret
enter
mov
inc
in
cs
repnz
lret
outsl
push
mov
stos
sub
dec
cmp
mov
sbb
nop
lods
mov
ret
cmp
mov
mov
in
jle
and
aaa
adc
pop
jb
int
dec
js
xor
in
cmp
push
lods
jbe
push
xchg
mov
in
dec
cmp
cmp
sub
or
xor
mov
popf
pop
loop
addl
push
inc
cmpsl
cmp
mov
arpl
pop
in
mov
outsb
repnz
jg
sbb
insl
loopne
adc
adcb
sbb
mov
out
ret
dec
fcomp
outsl
iret
out
loop
mov
inc
inc
push
cmp
cmp
jbe
push
pop
imul
ss
push
adc
lcall
xchg
mov
or
mov
or
mov
fstl
call
push
add
push
lret
push
aam
ja
mov
cs
out
fldt
fists
cmpsl
add
sbb
shrl
cmp
inc
mov
arpl
out
mov
add
sti
js
mov
push
pop
sarl
dec
in
mov
cmp
mov
ja
pop
stos
cli
test
mov
addb
mov
int
and
int
sbb
push
inc
jmp
ja
jo
cmp
hlt
adc
and
xchg
scas
ja
push
jl
lcall
les
data16
lahf
cmp
call
nop
inc
jp
jge
sbb
pop
dec
push
sti
mov
or
fucomi
push
and
popf
and
loopne
adc
xor
fs
push
sub
push
fildl
sahf
cli
bound
xor
mov
mul
and
fcmove
push
jo
iret
aas
arpl
pushf
enter
dec
fcomip
shl
int
add
enter
lock
testb
xor
mov
inc
push
mov
pushf
scas
jnp
push
sub
andps
push
pop
pushf
pop
xor
dec
gs
stos
pop
loope
pop
mov
aad
cmpsl
rorb
pop
push
xchg
stos
test
push
je
and
sub
loope
scas
lea
lds
push
xor
sbb
and
push
das
push
inc
rorl
jns
mov
add
ja
daa
mov
imul
mov
int
decb
push
imul
clc
lods
js
jg
adc
push
xor
lds
loope
subb
cld
dec
imul
push
sbb
loop
adc
mov
ffree
pop
and
ljmp
gs
mov
fwait
sti
outsb
and
sub
xorl
mov
inc
adc
and
test
loope
cs
mov
xchg
fidivs
jo
outsb
and
and
ss
xchg
insl
mov
in
in
shlb
lret
outsl
je
pop
imul
cmc
add
andl
pop
mov
pop
xchg
repnz
mov
stos
std
jmp
cltd
inc
dec
push
mov
or
pushf
mov
clc
stos
popf
ds
je
int3
clc
mov
inc
mov
mov
aas
sub
inc
mov
xchg
gs
outsl
popa
int
dec
jae
push
xchg
rol
pop
out
das
lcall
dec
int3
fmul
cmp
rcr
scas
push
jb
loop
insb
pop
lret
and
rol
cmpsl
scas
movsb
xorl
cmp
push
imul
rorb
push
mov
inc
clc
adc
push
fwait
push
inc
add
cwtl
mov
pusha
sbb
es
and
call
stos
inc
add
or
or
jns
js
sbb
push
jmp
mov
push
xchg
js
inc
loope
popa
ja
or
movsb
push
mov
sub
add
in
inc
sahf
mov
mov
lods
push
int
ss
in
jecxz
jbe
adc
js
or
sbb
std
mov
shlb
pop
jne,pn
hlt
mov
push
sub
aam
pop
jne
popa
rorb
data16
jnp
xchg
or
sahf
inc
int3
dec
jns
sbb
je
outsb
mov
mov
mov
push
aas
jae
std
je
inc
imul
shrb
inc
mov
jb
push
es
mov
lret
mov
ja
incl
mov
stc
xchg
xchg
enter
pop
mov
ss
faddl
cwtl
push
push
scas
push
mov
ja
fmuls
pop
sbb
lds
ret
into
mov
imul
pop
ret
jb
test
jl
pop
cmp
xor
lea
sub
rorb
mov
lahf
test
popf
and
push
pop
je
mov
in
cmpsb
sub
pop
andb
xchg
pop
sub
sub
sub
mov
inc
mov
cmpsl
mov
outsl
jbe
sub
and
sub
scas
xor
jmp
sahf
stos
xor
rorl
or
pop
xlat
fadds
outsl
sub
and
inc
jg
mov
out
cmp
mov
mov
shrl
movsb
aaa
stc
lret
je
cmp
stos
and
or
pop
dec
inc
sub
mov
jge
out
imul
sbb
cmp
ss
lcall
cmc
cmp
repz
xor
fwait
ds
xchg
imul
sbb
aad
std
xchg
lea
add
inc
mov
inc
push
sarl
imull
aaa
push
fadds
jo
push
fs
jnp
mov
lods
pop
push
sub
rorb
aas
mov
addl
aad
pop
ljmp
jg
call
popa
mov
pop
and
cs
and
add
dec
mov
xchg
inc
or
popa
bound
leave
add
shlb
dec
repnz
ss
scas
jge
out
mov
dec
mov
jb
aad
lods
int
dec
das
jnp
mov
lods
outsl
push
dec
cld
add
jl
cmpsb
dec
in
and
mov
in
shlb
mov
aam
pop
lahf
out
sub
mov
sub
xor
icebp
int3
mov
sbb
rcrb
loope
inc
cs
sbb
push
addb
cmpsb
adc
xchg
inc
mov
test
or
xor
and
mov
movsl
push
cmp
sub
ficoms
mov
shrb
pop
sbb
xchg
lret
popf
xchg
sub
ljmp
or
repz
mov
mov
cmp
dec
push
dec
incl
cmp
out
jo
aas
stos
push
and
add
mov
jmp
pop
into
xor
or
adc
fwait
or
or
xchg
rcrb
mov
and
inc
rcl
insb
xchg
dec
cmp
cmc
mov
sub
mov
jecxz
popa
out
or
jb
mov
out
mov
jmp
das
popf
popa
in
xchg
and
test
pop
icebp
xchg
shll
pusha
mov
inc
sub
jp
idivl
pop
push
cmpsl
into
push
dec
jbe
inc
loopne
adc
imul
push
sbb
ss
cmp
mov
sub
xor
and
jno
push
les
push
xchg
sti
jmp
xchg
stos
pusha
iret
pushf
in
andb
add
shrl
popf
test
cmp
xchg
ret
cmp
stos
xor
dec
lods
mov
int3
jle
adc
jecxz
movsl
sub
push
pusha
jb
cmpsl
cmp
stos
in
fildll
mov
sbb
shlb
inc
arpl
pushf
nop
sti
in
jle
cmp
fwait
push
fs
in
adcb
jge
mov
add
cmp
out
pop
add
imul
icebp
or
lock
scas
fsubr
call
outsb
rcrl
mov
pop
std
repz
add
inc
icebp
insb
aas
sbbb
pop
cmp
cmpb
popf
stc
sub
enter
or
ja
loope
lret
push
jo
cmpsl
xor
xor
pop
inc
neg
mov
cmc
mov
mov
inc
pushf
or
mov
in
mov
sbb
cli
psubsw
inc
sub
xchg
add
add
and
push
sahf
cmp
xchg
nop
xchg
mov
fisubl
jae
jmp
jae
rolb
fbld
adc
cltd
mov
mov
sub
adc
jno
lcall
jg
mov
lock
clc
test
fmulp
int3
lcall
bnd
imul
mov
mov
movl
aas
flds
cmc
call
adc
dec
inc
jmp
jbe
xchg
xor
hlt
and
fdivr
clc
jbe
cmp
mov
sbb
repnz
add
arpl
data16
xorl
imul
dec
mov
out
xchg
icebp
adc
pop
andl
adc
repnz
mov
adc
cwtl
mov
outsl
bound
stos
lock
stos
imul
das
add
push
dec
mov
sti
out
jns
lock
rol
and
mov
or
sahf
sarb
lahf
pop
and
inc
xchg
out
sbb
push
ret
mov
pop
xchg
lea
dec
cltd
cmp
adc
jg
jno
inc
mov
and
gs
rorl
aas
sub
fiadds
insl
add
and
sub
movsl
mov
shlb
add
mov
lret
xchg
mov
dec
adc
enter
or
jle
iret
mov
jecxz
mov
icebp
aas
add
mov
outsb
jle
sub
push
xchg
fiadds
cmp
and
sbbl
jecxz
jno
scas
add
and
inc
lods
lahf
xor
int3
inc
std
out
lret
enter
pusha
scas
sahf
stos
jp
sub
shll
inc
arpl
lcall
sahf
clc
cmp
test
mov
sti
jle
and
jno
cmc
cmp
and
xchg
pusha
inc
stos
scas
inc
js
stos
outsl
fwait
push
adc
lods
inc
mov
mov
test
pop
sub
nop
je
adc
jnp
push
imul
sbb
adc
cmp
lcall
add
hlt
mov
mov
push
movsl
ret
dec
sbb
cmp
out
adc
outsb
call
push
aas
jecxz
xchg
dec
sbb
push
dec
push
sub
js
jg
jecxz
mov
cs
push
fs
ret
cld
add
mov
inc
or
pop
adc
cmp
cmp
push
mov
xchg
fmuls
pop
pop
jnp
push
dec
mov
mov
in
adc
mov
and
lds
divb
sbb
rcrl
pop
outsl
jecxz
je
jnp
xorl
sarl
and
outsl
sbb
sti
aam
sub
ret
inc
dec
push
pop
mov
mov
cld
cmc
and
jmp
jmp
lahf
dec
mov
dec
in
loope
cltd
jl
sbb
adc
lds
bound
mov
aaa
pop
adc
mov
incl
jnp
pushf
ret
ja
andl
adc
je
rorb
sub
jp
ficoml
add
fiaddl
inc
mov
loope
mov
lret
popa
negb
and
loop
mov
jb
subl
cmpsb
jmp
arpl
cltd
scas
mov
inc
adc
pushf
aas
mov
test
add
push
cli
jns
imul
xchg
inc
xor
xor
imull
ja
mov
adc
push
mov
and
rcll
cld
or
aad
push
ds
pop
out
iret
xlat
inc
pushf
fstpt
imul
jmp
mov
jns
xor
pop
cmp
aad
sbb
and
and
dec
xchg
xchg
cmc
xchg
cmp
loop
test
jno
push
mov
outsb
mov
xor
cmp
aam
sbb
inc
inc
icebp
aam
jne
mov
add
adc
repz
lods
dec
sub
jb
xchg
aaa
call
sub
fisttps
pusha
std
data16
mov
sub
sahf
insl
dec
push
sub
ficoml
fstp
inc
jns
jnp
sub
sar
imul
jno
push
fisttpl
xor
push
cwtl
test
sbbl
jmp
xchg
fsubs
ret
test
push
stc
jnp
roll
mov
mov
cmc
jl
aaa
mov
pushf
jno
lods
mov
ffree
push
enter
ret
mov
insb
push
pop
icebp
cld
sub
int3
mov
cmpsb
xor
pop
notrack
and
rorl
sti
gs
adc
test
mov
xor
cmp
push
fiadds
insl
or
mov
dec
xor
pop
sti
cmp
outsl
dec
aas
aam
push
bound
stos
xchg
pop
add
movsb
popf
lret
in
pusha
jnp
xor
roll
sahf
fdivr
or
lret
or
es
nop
mov
sub
in
cmp
inc
int3
leave
cli
ffreep
iret
inc
mul
pop
imul
mov
movsb
xchg
xlat
adc
jnp
mov
push
out
in
dec
push
imul
subb
imulb
fldt
ret
dec
gs
sub
pop
push
cmpsl
insb
mov
push
dec
mov
lds
loopne
cmp
xchg
shl
lret
fwait
inc
rclb
jbe
cs
add
lret
jge
xchg
rcr
popf
mov
arpl
jecxz
inc
test
sar
enter
or
sbb
xor
and
dec
movsb
xlat
dec
mov
pop
aaa
into
pop
mov
xchg
inc
push
adc
stc
insl
pop
outsb
add
cmp
inc
sub
cmp
adc
shrl
outsb
push
fs
cmpsb
stos
jmp
lds
pop
sub
lahf
mov
and
adc
loopne
sub
out
adc
sbb
ds
jnp
adc
pop
pop
test
push
jle
das
xor
movsb
or
je
fcoml
push
ljmp
ret
addr16
sbb
in
pop
xchg
pusha
shlb
out
sub
push
sbb
leave
xchg
mov
sub
sahf
rcll
js
push
test
mov
out
xchg
and
push
push
push
pusha
iret
iret
inc
rclb
movsb
cmp
test
dec
and
push
test
flds
cmp
dec
rorl
fiaddl
in
jmp
dec
cli
test
inc
mov
pop
xor
mov
inc
jae
or
inc
add
insb
adcb
xor
or
cmp
inc
nop
rorb
pop
mov
dec
dec
lahf
cmpsb
out
in
sbb
adc
iret
xor
sbbb
mov
aas
or
aad
inc
shrl
mov
mov
add
into
test
imul
push
push
mov
and
add
dec
mov
in
pop
xchg
or
inc
jecxz
sbb
mov
sbb
popl
insl
pop
enter
pusha
lods
add
insb
popf
pop
xor
daa
jle
jnp
fisttpl
add
aas
pop
and
mov
cmp
dec
outsb
jns
clc
sub
xchg
outsl
pop
jp
cmc
pop
mov
pop
int3
fistps
sub
sub
nop
xchg
or
add
mov
std
pushf
lea
and
sub
push
popf
pop
insl
adc
mov
sti
lea
mov
and
das
xchg
pop
pop
add
push
or
jo
mov
push
pop
inc
adc
lods
and
fmuls
add
icebp
add
push
jp
leave
scas
cmp
fisttpl
imul
jae
pop
sti
cmp
loopne
lock
notb
sti
popa
xor
adc
loop
push
jecxz
sbb
les
lahf
and
clc
adc
mov
mov
fistpl
mull
or
shlb
xchg
jns
fwait
decb
push
jg
add
xchg
and
push
push
push
or
fwait
push
popf
roll
fwait
idiv
and
es
lods
fidivrs
dec
fisubrl
cmp
data16
inc
out
adc
mov
andb
daa
dec
in
bound
push
mov
addr16
jns
dec
test
pop
push
sub
ja
sub
sbb
testb
pminsw
xor
xor
and
scas
jnp
adc
fildl
inc
add
mov
sti
je
xchg
cli
inc
xor
icebp
mov
mov
push
cmpsl
daa
jecxz
adc
and
jg
testl
pop
and
andl
add
xor
loopne
dec
pop
add
outsb
add
jg
add
je
sbb
cmp
push
stos
aas
mov
sbb
xchg
sbb
rol
scas
dec
xchg
jle
jo
shll
out
sbb
leave
shlb
inc
or
aam
rcll
and
in
es
or
mov
arpl
jb
cmp
mov
jbe
push
xchg
push
popf
mov
loope
es
push
pop
cmpsl
mov
cld
cmpsb
hlt
out
sub
push
lods
mov
outsb
mov
jecxz
jbe
leave
cmpsb
dec
inc
jb
scas
mov
add
movsl
add
rorb
xor
hlt
push
addb
cmpb
outsl
cmp
inc
and
push
sbb
inc
jle
pop
inc
jmp
out
test
sub
push
and
cmpsb
mov
rorb
or
adc
xor
lods
sbb
xor
cmc
jnp
xchg
imul
xchg
inc
idivl
xor
aas
jl
cmpsb
mov
xchg
sahf
mov
insl
and
dec
jp
filds
lods
cmc
xlat
sbb
push
lea
fwait
mov
mov
mov
gs
jle
test
push
lret
in
das
xlat
rcrl
sub
pop
sub
es
push
insb
jmp
testb
pop
in
xchg
enter
insl
ss
sub
decb
dec
fwait
pop
lds
cs
fldt
push
jge
sahf
push
dec
lcall
mov
dec
inc
or
js
lods
push
int
mov
sub
inc
pop
mov
push
jo
pop
aad
call
loop
repnz
popf
sbb
adc
cmp
push
xchg
rol
jg
repnz
jb
roll
xchg
bnd
pop
push
add
lea
jg
pushf
or
mov
ss
mov
xor
fldenv
adc
js
cltd
lahf
ficoms
leave
in
sbb
bound
out
and
aad
test
dec
xlat
pop
jno
adc
popf
adc
adcb
push
addr16
pusha
test
adc
call
ret
add
push
lret
ret
mov
cmp
lods
adc
add
std
sbb
inc
xchg
push
jle
mov
adc
popf
das
cmp
mov
xchg
xchg
js
jg
cmp
or
xorl
xchg
dec
or
and
cmpsb
bound
shll
aam
pop
mov
mov
test
jne
xor
lahf
je
pop
or
add
out
aas
out
out
sub
adcb
xchg
mov
sbb
push
imul
test
xchg
pop
xor
aaa
mov
mov
mov
pop
sub
dec
xor
shlb
pop
xchg
and
mov
mov
imul
add
pop
mov
xchg
subb
mov
loop
pop
cmp
and
cmpl
push
adc
and
das
or
dec
cmp
mov
jo
inc
and
int3
pop
lcall
pop
add
adc
inc
sbb
aas
aad
cmp
push
jno
pop
adc
push
popa
mov
and
xor
in
xor
add
repnz
add
add
test
daa
add
fdivs
je
lahf
mov
daa
mov
fsts
dec
jmp
inc
andl
in
ss
insl
insl
cmp
loope
out
dec
ret
mov
leave
lods
cmp
add
add
scas
dec
adc
sbb
jg
mov
xor
inc
mov
lea
test
mov
sub
xchg
mov
cmc
xor
lods
mov
aad
cmc
cmp
ss
mov
in
cmp
xchg
or
cmp
inc
repz
cwtl
xorb
mov
or
movsb
ss
sbb
push
dec
imul
xor
nop
cmp
mov
jl
xor
mov
sbb
leave
sub
mov
arpl
fstpt
xchg
movsl
add
dec
ja
stc
inc
out
aam
cli
fstpt
bound
inc
les
xchg
shl
pop
and
cmp
fildl
dec
imul
fs
cwtl
cmp
push
mov
icebp
inc
lods
xchg
pop
xchg
ror
push
ss
mov
sub
enter
xor
shl
sub
jo
enter
pop
out
fcmovb
dec
pop
imul
sub
cmp
shll
mov
sub
int3
jb
int3
xor
or
dec
mov
cmp
popa
mov
xor
push
and
cli
cmp
jne
dec
and
out
mov
push
ret
mov
pop
les
and
dec
pushf
das
fisttps
jle
lds
ret
mov
xchg
adc
das
sbb
xchg
test
pop
add
pusha
inc
leave
sbb
lcall
sbb
push
mov
push
or
cld
rcl
and
movsl
clc
dec
jnp
notb
and
sarl
loope
lock
mov
or
mov
pop
and
pop
cmpsl
mov
idivb
pop
push
movsb
mov
pop
insl
jo
ficomps
mov
and
mov
push
xchg
imul
xorl
repnz
out
sarl
pop
fisubrs
ret
imull
std
testb
fwait
and
xchg
push
scas
xor
push
lea
out
arpl
add
adc
pop
pusha
mov
repnz
dec
es
inc
das
xorb
mov
xor
mov
jns
jmp
xchg
out
dec
ret
add
pop
mov
or
xor
or
or
or
repnz
push
add
add
mov
mov
jae
in
dec
pop
push
jae
in
xchg
lock
loop
xor
sub
test
rcrb
pop
les
inc
shrl
cltd
xchg
es
mov
mov
xchg
adc
push
icebp
mov
adc
iret
lcall
sub
mov
sbb
xchg
lea
jecxz
popa
std
add
movsb
xor
inc
jge
dec
mov
movsb
ret
rol
out
popa
das
jecxz
ret
jb
xchg
pop
cwtl
push
cmpsl
decb
insl
int
xor
sub
cld
adc
outsl
jp
jle
cmp
test
mov
sti
into
cmpsl
call
daa
cwtl
adc
cs
cmp
push
call
cmpsl
mull
imul
aas
call
ret
cmc
lods
pop
movsl
sub
pop
stos
cmp
push
adc
pop
ds
out
rcll
mov
jo
leave
and
lcall
pop
or
mov
dec
in
rcll
mov
mov
rcll
cmp
imul
push
sbb
imul
xor
test
pop
cs
push
sub
xchg
mov
lds
and
ljmp
xor
dec
mov
lods
int
js
fsubl
aaa
and
out
cwtl
xor
inc
test
stos
fmul
out
rclb
ds
cwtl
cmpsl
push
push
shlb
push
pop
in
jg
sub
cmpsb
cli
movsl
sub
xchg
leave
loopne
dec
jge
movsl
push
clc
mov
xchg
or
mov
popa
into
out
push
xchg
dec
xchg
lock
call
test
je
testb
mov
push
adcl
jmp
imul
daa
ss
cmc
jbe
sbb
enter
push
xchg
movsb
inc
pop
pop
xchg
add
repnz
es
dec
mov
test
add
rol
dec
gs
iret
mov
adc
mov
shlb
jp
sbbl
pop
cmc
test
mov
in
lret
cwtl
dec
xadd
es
mov
mov
ret
insl
push
lret
movl
outsb
sbb
inc
js
mov
or
dec
dec
sbb
lret
in
push
test
aad
pusha
sub
jne
xchg
dec
fisubrl
mov
cmp
mov
mov
or
and
lahf
andb
dec
bound
mov
js
loope
adc
sbb
sub
mov
push
lret
cld
pop
lods
push
xchg
pusha
adc
sbbb
or
lret
adc
inc
movsl
shlb
imulb
xor
leave
fbstp
fs
ss
xor
push
scas
jo
inc
enter
mov
push
sbb
cli
cmp
jle
test
add
xlat
sahf
push
addr16
ret
fistps
jno
leave
or
adc
mov
mov
pop
xor
scas
jl
jmp
pop
and
aas
shlb
push
sbbl
icebp
pop
pop
dec
mov
scas
mov
ja
lahf
jo
push
rolb
inc
mov
icebp
ja
pop
xor
lods
xor
enter
bound
add
jmp
jmp
cmp
pop
cmp
lods
div
mov
ficoml
pop
xchg
fstpl
adc
mov
jo
out
fs
arpl
jmp
lcall
aas
mov
fdivs
cmpb
mov
mov
scas
loope
xlat
lret
lods
popf
scas
push
test
icebp
mov
adc
pop
sbb
aad
scas
out
call
jno
cwtl
test
outsb
shrl
decl
sbb
adc
cwtl
sbb
mov
xchg
mov
jl
loop
xchg
movsl
loopne
sub
rcl
loop
jecxz
inc
fs
jbe
push
iret
inc
insl
or
dec
adc
call
jp
lock
jne
add
jb
cltd
lods
outsw
aaa
jbe
loopne
push
loopne
lcall
in
clc
movsl
repnz
adcl
xchg
out
sbb
xor
cli
and
sbb
orb
xabort
xchg
outsl
repz
dec
test
pop
movsb
loopne
pop
add
jno
cmp
sub
aas
fisttpl
push
add
cmp
push
sub
fwait
lcall
sub
dec
push
aad
test
addl
push
jl
mov
adc
test
sahf
xlat
outsl
xlat
icebp
inc
sbbb
aaa
xchg
pop
add
int
pop
cltd
shl
dec
sbb
insb
lcall
jge
mov
jno
in
icebp
in
mov
jecxz
pop
jb
pop
mov
and
into
decb
xor
stos
popa
jecxz
pop
test
movsl
mov
inc
or
xchg
and
dec
in
setge
ret
fadd
cmc
clc
scas
jbe
popl
pushf
lahf
xlat
mov
aas
sub
mov
mov
rorl
jg
outsl
cltd
ja
push
imul
clc
daa
scas
mov
jg
push
sar
outsl
mov
scas
divl
outsb
dec
add
push
int
dec
mov
movsl
aas
rolb
fsts
enter
or
aas
je
int3
test
popa
jnp
and
jg
hlt
push
xchg
lods
leave
std
or
loopne
xor
xor
repnz
mov
jne
test
insb
jl
xchg
orb
sbb
adc
jb
mov
jne
clc
and
rcl
outsb
push
data16
cmp
jno
lret
sti
sub
cld
int3
sub
cltd
scas
leave
call
or
enter
adc
in
xor
push
cmp
nop
inc
mov
dec
outsl
cmp
pop
xchg
push
mov
or
sti
aaa
aad
sti
insl
mov
add
jle
sub
andb
pop
sub
int3
mov
jb
lea
dec
outsl
pop
ja
pop
xor
push
add
xor
inc
dec
outsb
js
push
push
jl
cmpsb
cmpsl
jle
ljmp
test
mov
add
xor
and
xchg
ror
mov
mov
add
cli
adc
test
je
ret
push
popa
jns
mov
jns
pop
dec
xchg
int3
movb
dec
fsub
pop
sub
inc
and
mov
pusha
jns
movsb
mov
pop
mov
fisttps
add
cmp
jb
push
ror
mov
push
int3
js
fists
mov
mov
scas
inc
pop
cmpb
jb
xlat
inc
mov
popa
sahf
shlb
xor
outsl
mov
lock
cmp
adc
and
aad
shlb
popf
andb
jbe
mov
lahf
jno
push
push
sub
lahf
xor
jae
pop
les
daa
mov
add
pop
mov
add
mov
fnstenv
pushf
xchg
xlat
dec
cmp
or
cmc
arpl
mov
rcll
jne
mov
mov
cmp
pop
sbb
idivl
dec
jg,pt
and
sub
jecxz
cmp
sbb
xchg
jp
push
push
push
mov
inc
into
mov
and
or
and
aad
jecxz
mov
pop
pop
mov
jno
mov
and
push
mov
push
ss
xchg
dec
les
pushaw
mov
fsubr
scas
je
leave
pop
adc
es
outsl
add
sub
cs
out
pushf
mov
mov
inc
lcall
push
cli
mov
sub
xchg
adc
pop
pop
fwait
mov
rclb
ficomps
sar
inc
inc
xchg
inc
xor
pop
push
cmpsl
ret
insl
mov
insb
fmull
jge
data16
cmc
bound
out
out
rol
outsl
int
sahf
push
test
aaa
sahf
in
iret
lods
rclb
aad
stos
jns
inc
jnp
loope
dec
adc
insl
mulb
mov
push
add
in
negl
outsb
jb
lret
cmpb
lret
cli
cli
mov
xchg
inc
cmp
into
cs
inc
idivl
les
das
inc
dec
daa
mov
dec
lds
test
fbstp
sbb
das
mov
inc
and
push
enter
jno
aas
popa
fdivrl
sbb
pop
push
mov
scas
ss
ror
call
pushf
pop
mov
stc
pushf
ja
icebp
mov
insb
dec
daa
pushf
rorl
push
push
add
gs
adc
fildl
xchg
cmp
xchg
sub
adcb
push
mov
lods
jbe
test
add
cmpl
sahf
xor
mov
sbb
cmp
jae
sti
pusha
add
dec
mov
add
add
test
xor
mov
imul
cmp
xchg
add
jmp
imul
into
mov
cltd
inc
push
in
into
outsb
imul
sbb
pushf
and
stos
enter
mov
sbbl
push
push
insl
jbe
cmpsl
xchg
lock
outsl
pop
lea
test
dec
lret
xor
push
addr16
jl
mov
dec
sub
gs
xor
push
push
lahf
pop
popa
test
add
push
xchg
adc
and
adc
pop
jbe
mov
pop
ja
inc
push
pop
loop
inc
xlat
xchg
sub
cmp
jp
mov
in
inc
xchg
fildl
scas
les
mov
outsb
push
jmp
xchg
sbb
add
dec
jecxz
mov
in
fisttpl
pop
dec
dec
popf
data16
and
cmp
xlat
mov
dec
push
and
stc
repz
xor
pop
pop
push
jp
test
scas
outsb
fisubl
xor
and
dec
fildll
dec
std
out
sbb
std
xor
pusha
xchg
dec
test
in
jmp
or
jae
mov
outsl
cmp
push
andl
jp
push
mov
or
ss
shrb
adc
mov
add
subl
xor
jmp
rep
leave
mov
loop
pop
sbb
pop
in
and
xchg
add
inc
pop
dec
mov
ror
mov
cs
sub
in
addr16
push
stos
fwait
mov
inc
xchg
push
inc
pop
push
es
in
test
daa
cmc
inc
je
imul
cmp
je
icebp
xchg
push
arpl
out
popf
mull
adc
scas
inc
sti
jns
inc
call
xchg
adc
pop
filds
fmuls
dec
push
cmp
pop
xlat
daa
roll
add
and
pop
in
mov
stos
push
aaa
inc
add
mov
jae
sub
or
xchg
sbb
test
jmp
jne
fstpl
testl
hlt
fisttps
add
xor
gs
mov
mov
iret
cmp
insb
lret
lods
push
leave
dec
jb
into
cli
loopne
cld
push
mov
xor
lahf
fwait
aam
iret
add
jecxz
stos
jecxz
sub
pop
imul
mov
xchg
mov
sub
scas
push
sub
cltd
inc
aad
sbb
js
mov
xchg
fwait
inc
test
mov
sub
push
cmc
jb
mov
pop
push
mov
hlt
inc
fisttpll
aas
lock
dec
repnz
out
xor
cmp
mov
jo
stos
xor
mov
and
inc
fdivrs
pop
fadds
jmp
mov
testl
mov
test
jle
test
nop
dec
int
add
sub
fisttpl
dec
loopne
ljmp
fwait
push
sub
mov
fs
scas
test
sti
stos
add
pop
sti
icebp
and
xchg
int3
mov
nop
pop
das
int3
fidivrl
cmp
jb
mov
cwtl
pushf
rol
sbb
xchg
jbe
push
sub
pop
mov
cmp
push
ror
push
sbb
mov
sub
jecxz
gs
sbb
add
rcrb
add
in
outsl
jp
and
inc
inc
adc
fcomi
ljmp
cmc
jne
rcrb
xchg
scas
mov
scas
aad
jno
sbb
mov
mov
and
mov
inc
adc
nop
add
stos
xchg
stos
out
nop
gs
out
mov
mov
push
ror
in
mov
inc
xchg
sub
aas
cmpsl
data16
out
mov
test
xlat
push
fmuls
jo
ficoms
mov
pop
je
sbb
pop
call
cwtl
neg
js
push
mov
jecxz
test
mov
inc
sti
scas
cmp
and
in
mov
inc
mov
or
sbb
adc
stos
dec
lahf
inc
or
pushf
cmp
les
sbb
push
or
jmp
dec
shll
aad
jo
mov
aad
ja
sub
aas
loopne
loopne
sbb
xor
std
aam
repz
subl
inc
cmp
insl
pop
dec
xchg
and
das
mov
rcrl
sub
fisttps
lods
cwtl
or
add
dec
inc
lds
ds
inc
mov
xor
fs
out
adc
xor
cmpsb
mov
testb
rorb
lods
data16
stos
jb
call
in
mov
sbb
sub
ljmp
sahf
dec
cmpsb
les
mov
popf
mov
mov
mov
imul
sub
dec
inc
lock
cmpsb
jmp
dec
cmp
shrl
aaa
sbb
jb
ret
jl
push
outsb
roll
dec
insl
dec
mov
cmpsb
inc
push
lret
cmp
enter
cmp
rolb
sbb
or
add
or
sahf
outsl
sbb
sbb
pop
cmp
std
sti
roll
fisttps
call
jbe
jg
orl
pop
adc
or
xchg
mov
sbb
jns
xor
addr16
and
inc
inc
jge
mov
add
clc
hlt
xlat
adc
or
xor
dec
shll
sarl
gs
pop
aad
mov
stos
stos
and
add
in
add
jmp
sub
push
add
pop
aaa
fwait
out
std
int
or
jbe
cmc
jle
icebp
jp
pop
idiv
jb
mov
fwait
sti
sbb
mov
inc
mov
movsl
xor
sub
rcl
mov
movsl
loopne
xchg
gs
fs
outsb
xor
js
lds
std
icebp
mov
jge
sarb
xchg
mov
cmpsl
jnp
and
push
sbb
mov
xchg
std
fisttps
adc
inc
push
adc
cmp
xchg
shrl
push
mov
sub
sub
fwait
cs
mov
jmp
push
adc
movsb
mov
clc
mov
insb
mov
scas
cmc
push
gs
mov
cltd
insl
pop
and
push
sub
fcompl
mov
paddusw
jb
add
outsl
cmpsb
call
int
out
push
cltd
divb
rcl
jmp
call
lret
lods
push
pop
mov
fs
or
inc
xchg
loope
inc
mov
push
insb
into
out
mov
mov
lret
insb
shl
push
mov
xchg
dec
dec
pop
sbb
pop
cmp
mov
jnp
inc
mov
mov
inc
cmc
adc
dec
ja
or
mov
in
dec
test
add
lea
push
test
pop
xlat
dec
sbb
mov
js
sbb
mov
mov
dec
mov
and
mov
shlb
ret
cmp
cmpsb
adc
push
andb
or
cwtl
call
add
call
ret
jl
sbb
cli
pop
xchg
jae
xchg
pusha
hlt
push
mov
int
jmp
fisubrl
jno
stos
test
test
lret
enter
or
pop
add
addr16
cmpsb
mov
mov
push
mov
mov
mov
add
arpl
push
ret
out
push
jbe
imul
inc
xchg
push
mov
xor
jnp
cmpsl
xchg
adc
stos
inc
and
xorl
imul
lods
mov
insl
mov
sub
dec
lcall
dec
xorb
dec
out
int3
mov
mov
push
cli
pushf
inc
cmpsl
mov
loop
pushl
test
sub
cmp
push
xchg
pop
adc
stos
xor
enter
jge
out
jb
mov
add
pushf
and
or
pop
sbb
in
mov
inc
addl
inc
mov
out
mov
or
sub
mov
aaa
dec
dec
mov
outsl
or
jnp
scas
or
orb
cwtl
xchg
jp
mov
movl
push
nop
addb
shl
xchg
jp
xor
pop
addr16
ja
jle
inc
mov
pushf
in
lret
jecxz
inc
add
mov
mov
enter
popfw
add
fdivr
loopne
je
daa
adc
pop
pop
inc
out
mov
jl
xor
movsl
inc
pop
fsubr
out
lret
dec
out
shll
push
pop
sbb
imul
cwtl
dec
mov
lods
inc
cmpsl
mov
movb
sahf
cmpsl
add
add
aas
je
pop
xlat
lahf
inc
mov
mov
fwait
mov
fstps
xchg
mov
ret
mov
divl
pop
pop
call
adc
cmp
out
int
xor
bound
imul
aas
mov
pusha
xor
and
add
js
push
pop
repz
test
add
pop
cmp
les
in
jbe
es
xor
xlat
out
dec
les
lods
jmp
sahf
test
pop
les
ret
sub
cld
pop
sub
mov
dec
dec
or
aad
popa
xchg
or
stos
enter
dec
pop
sub
lahf
subl
fwait
outsb
mov
mov
sub
pop
mov
pop
adc
jno
jecxz
sbb
pop
scas
sti
and
imul
outsb
fsubrs
sbb
push
push
pop
mov
pop
mov
enter
mov
xor
xor
mov
sub
enter
in
les
testb
sbb
mov
sarb
cmp
sbb
mov
xchg
negl
mov
adc
mov
xor
incl
loop
jns
push
jae
mov
fadds
pop
mov
sub
mov
mov
jmp
pop
int
and
and
cmp
repz
lea
mov
je
rcrl
jbe
mov
xor
mov
mov
subl
shl
insb
mov
mov
jle
mov
mov
andb
mov
daa
fwait
lret
xchg
xchg
mov
adc
sar
jae
pop
xor
sbbl
and
jle
dec
fwait
out
mov
jo
int
xor
sbb
xlat
mov
push
pop
andl
fldlg2
or
push
test
ret
mov
and
jmp
imul
fisubl
sub
pushf
mov
sbb
insb
push
and
in
aad
outsb
mov
mov
cld
and
shrl
and
push
and
inc
psubsw
pop
push
mov
inc
or
cmp
push
lods
push
pop
xor
sub
movsl
adc
aad
or
pusha
jmp
repnz
xchg
jne
xor
fwait
sbb
pop
das
xchg
cmp
mov
adc
ret
mov
pop
mov
subb
or
inc
outsb
gs
jle
divl
mov
jbe
movsl
call
addl
dec
sbb
mov
es
dec
dec
adc
xchg
shll
in
arpl
in
negl
sub
sarl
lret
stos
lods
xor
sub
scas
adc
incl
aas
or
movl
lods
sbb
mov
jmp
movq
gs
movsl
or
mov
cmp
pusha
dec
popf
outsl
adc
xchg
add
aad
mov
dec
jg
insb
mov
aam
subl
dec
pusha
and
cli
adc
push
faddl
shl
lahf
add
and
fisubs
mov
div
push
adc
roll
push
xchg
adc
leave
mov
mov
pop
or
call
cld
xchg
lods
sbb
cmp
in
inc
push
sub
cmpsl
in
push
cli
sub
xchg
dec
push
gs
cmp
mov
aam
inc
loop
rcrl
xor
out
or
nop
mov
fiadds
and
push
mov
test
cld
ljmp
add
imul
repz
mov
xchg
dec
lds
loope
push
aam
sub
mov
pop
mov
push
sysexit
mov
inc
mov
adc
sbb
or
das
fdivr
mov
and
mov
mov
xchg
test
test
push
add
xchg
or
sub
inc
fidivrs
sub
ljmp
fwait
push
xchg
sbb
jb
jmp
dec
add
sbb
push
push
and
sub
movsl
ror
jl
mov
inc
jns
cmpsl
dec
in
push
or
sbb
push
cmp
jmp
sub
inc
in
mov
outsl
mov
jno
xor
mov
or
xchg
adc
mov
out
inc
lret
and
and
inc
push
fcomps
out
call
push
xchg
sarl
gs
mov
aam
push
xchg
mov
xchg
aaa
jbe
es
std
mov
mov
mov
adc
sbb
xchg
xor
cmp
adc
xor
test
adc
and
ds
notl
jns
mov
loopne
mov
cmpsb
int
inc
es
fisubrl
cs
and
lea
ljmp
xor
aam
test
xchg
sbb
and
and
pushf
popa
inc
aad
imulb
loopne
out
push
or
push
imul
arpl
jo
scas
dec
xor
xchg
cmp
push
pop
push
push
mov
mov
decl
aas
aad
push
ret
ljmp
cmpsl
fcoml
stos
push
cld
daa
xchg
int
adc
ret
movsl
cmpsl
add
push
push
sbb
decb
movsl
out
xchg
cmp
cmpb
inc
pop
mov
push
daa
xchg
loop
cli
ds
push
lea
fwait
sbb
sub
out
mov
push
cwtl
data16
mov
push
mov
inc
and
jae
stos
bound
mov
imul
xchg
loope
lds
push
jge
lock
sub
ret
std
add
jecxz
or
pop
mov
pop
pop
cmpsb
pop
jecxz
shrl
mov
aad
push
inc
es
and
jbe
sub
push
jl
aaa
mov
imul
out
dec
jo
or
call
imul
pusha
aaa
inc
in
es
ret
cmp
movsl
shr
sbb
mov
or
inc
shl
pop
mov
xor
cwtl
loop
push
in
aas
fnstsw
out
pusha
shrl
mov
popa
ds
jp
inc
nop
mov
clc
movsl
cmp
int
in
in
test
std
mov
mov
xor
sub
dec
es
adcl
or
xchg
dec
jle
jb
mov
push
sub
aad
xor
cmp
imul
sub
xchg
scas
jno
test
lret
dec
push
das
stos
lret
loopne
mov
mov
add
ret
notb
xchg
jb
mov
adc
gs
inc
test
outsl
mov
into
add
pop
test
mov
pop
lods
fidivl
push
pop
or
mov
aad
clc
les
lods
mov
adc
pop
jg
or
enter
jp
pop
mov
int
add
rcrl
xchg
sti
dec
jle
jecxz
cmpsl
lock
sarb
adc
jp
sbb
loope
mov
xchg
push
sbb
inc
addr16
mov
or
mov
xor
xor
and
ds
daa
icebp
lods
push
mov
cmpsl
out
push
xor
and
cmp
int3
shlb
bound
icebp
sbb
fldl2t
or
imul
and
or
negb
push
xchg
xchg
rcrb
pop
jo
das
xor
mov
repnz
cmpsb
adc
add
jg
jne
push
inc
or
cmp
push
fsts
mov
in
ret
mov
push
orb
out
pusha
mov
cmp
cmp
pop
xchg
xchg
rcl
jg
ljmp
rolb
leave
bound
loopne
pop
fwait
dec
sub
mov
std
sarl
adc
pop
push
clc
jp
lret
jo
pop
cmpl
and
cmp
mov
pushl
sbb
jnp
and
push
stos
push
fisubs
dec
fnstsw
lods
sub
shrb
cmpsl
and
daa
ds
xchg
loope
mov
scas
loopne
pop
push
rcrl
lret
lods
aad
pop
pop
xchg
push
mov
mov
outsl
xor
pop
mov
cmpb
cmpsl
jge
clc
aam
adc
push
lock
jecxz
sbb
pop
push
pop
into
dec
iret
rclb
repz
jg
iret
jb
jmp
xor
jp
adc
repz
jg
dec
clc
leave
test
cli
cmpsl
outsl
lahf
imul
push
les
ds
add
in
mov
js
call
repnz
insb
sbb
mov
test
fidivs
dec
fstpl
pusha
subl
xor
xchg
sti
int
mulb
mulb
sbb
or
arpl
loopne
pop
xchg
outsl
call
pop
jns
cmp
sbbb
mov
xchg
mov
lock
sub
or
mov
hlt
adc
lcall
repz
daa
enter
pop
mov
gs
adc
sbb
cld
pushf
loope
push
jmp
pop
xchg
push
jmp
fdivr
xchg
mov
inc
mov
jp
das
fnstsw
das
pop
push
push
inc
hlt
mov
loopne
sarb
enter
sub
test
fistps
push
shll
subb
cs
pop
rcrl
mov
scas
mov
add
in
ret
or
lods
mov
adc
and
adc
pop
decb
xor
clc
rcr
push
lds
neg
jbe
push
cmp
pop
loope
and
sub
scas
std
pop
in
or
sbb
push
add
into
in
data16
dec
addr16
fadd
add
mov
adc
sub
pop
cmp
lret
xchg
or
out
arpl
sub
shl
out
rorb
jb
outsl
data16
in
movsl
js
incb
push
test
mov
and
clc
popa
mov
or
sbb
push
cmpsb
out
xchg
loop
ret
dec
das
pop
test
and
cmp
xor
mov
cmp
pushf
cmc
ficompl
aam
xchg
cmpsb
jle
stc
shll
mov
push
stc
out
test
into
push
fnstenv
mov
lret
dec
or
push
jne
std
add
jbe
repnz
adc
repnz
popa
or
xchg
push
jae
pop
inc
sbb
or
popa
imul
movsl
xchg
mov
lret
or
jle
das
addb
leave
ret
adc
cmc
inc
or
or
cli
and
jecxz
cmp
sub
sbb
push
fcompl
inc
dec
push
inc
lock
mov
in
es
andl
dec
clc
dec
jns
push
sahf
out
inc
pop
inc
rcll
lock
fcomps
lock
notl
fisubs
xchg
addl
mov
mov
bound
inc
fwait
push
jg
sbb
ljmp
je
jnp
mov
mov
lock
hlt
and
xchg
sub
ret
push
ret
add
cmp
sbb
add
adc
shrl
pop
xlat
mov
and
stc
and
lods
enter
imul
scas
and
je
sti
arpl
push
fbstp
hlt
mov
sarb
pop
jnp
jecxz
xchg
bound
jecxz
sti
jnp
int3
int3
movsl
inc
test
stos
jo
push
mov
shll
imul
les
xor
out
enter
add
cvtps2pi
adc
aad
sub
fwait
pop
lods
shl
aas
push
cmp
xchg
lret
orl
loop
mov
femms
xlat
shlb
test
adc
dec
imul
inc
xchg
xor
jne
movsb
mov
lods
pop
lock
adc
push
mov
and
nop
ret
inc
cmp
mov
stc
movsl
or
cld
pop
cs
je
mov
fstps
das
das
xor
xchg
lock
jg
push
in
sbb
icebp
scas
add
popf
dec
scas
mov
mov
das
cmpsl
jge
andb
pop
out
fwait
bound
cmp
and
sbb
int3
or
ds
push
mov
fsubp
cld
ja
lock
add
inc
mov
stc
pop
shrb
out
and
or
jno
pop
mov
dec
cltd
cmc
aam
inc
jno
dec
movsb
push
fmul
dec
jb
lock
xchg
or
fwait
scas
sub
in
mov
stos
out
nop
xchg
jp
cmp
popa
mov
cltd
pop
add
nop
mov
shlb
adc
push
push
push
xor
pop
test
fwait
jo
xchg
and
insl
dec
sub
cmp
sub
leave
arpl
sbb
out
daa
sub
sub
loopne
jae
pop
outsb
adc
testw
orl
sbb
rcrl
push
inc
add
lret
xor
je
xchg
sbb
adc
add
mov
out
ljmp
int3
dec
push
bound
mov
or
test
out
jns
ss
jmp
cmp
lret
and
mov
push
inc
jo
or
inc
sti
repz
lret
jb
fs
and
aad
sarb
jmp
mov
imul
sahf
add
adc
je
dec
jge
cmp
imul
iret
push
clc
out
jns
mov
ss
nop
xchg
shl
scas
into
test
iret
mov
mov
inc
aam
mov
sbb
xchg
mov
push
adc
sbb
or
mov
leave
inc
in
pop
sbb
insb
mov
cltd
out
sbb
push
lret
fmuls
icebp
nop
adc
subb
lock
cmp
cmc
xchg
lcall
fldt
mov
pop
push
mov
sub
adc
dec
sub
movsl
test
pop
cs
mov
lds
add
add
inc
pop
lret
add
aaa
decb
sub
dec
fcom
push
push
scas
mov
mov
lea
sbb
add
and
scas
pop
lahf
pop
jecxz
fsubl
mov
dec
xchg
mov
mov
mov
out
mov
mov
sahf
xlat
arpl
repnz
pop
insb
mov
jle
push
ds
dec
jae
ret
xchg
cmp
pop
roll
or
or
sbb
mov
adc
push
dec
out
ret
addb
mov
sbb
push
xchg
add
or
ljmp
in
lahf
stc
mov
pop
pop
push
das
add
jecxz
push
stc
rcrb
and
or
into
xchg
inc
sbb
cmp
jne
lock
test
add
sub
dec
or
pusha
cmpl
call
xchg
fs
jl
dec
pop
inc
xchg
ficoms
std
push
sub
int3
push
movsl
xor
pop
and
xchg
sti
push
test
pop
xor
or
into
xor
adc
stos
out
out
test
mov
adc
in
xchg
addr16
cmp
xor
jp
es
sbb
jecxz
jecxz
loope
xor
pop
idiv
dec
inc
dec
scas
cmp
out
sbb
dec
push
into
push
mov
mov
sti
or
imul
sbb
adc
push
outsb
and
xor
lret
mov
rorl
ss
dec
jbe
mov
mov
xchg
inc
pop
sub
icebp
fstpt
xchg
jnp
inc
cmpsb
pop
fstp
pop
lret
push
ffreep
testb
sub
ret
fcmovu
cli
mov
mov
inc
lret
push
sahf
and
pop
adc
xor
in
pop
test
cwtl
dec
mov
cli
sbb
fdivrl
into
mov
pushf
jns
or
outsb
rcrb
sbb
into
rol
sarb
push
fimull
xorb
hlt
jnp
daa
lret
push
mov
pop
mov
cmp
dec
bound
add
fldt
iret
clc
jg
mov
inc
lods
sub
cld
cmp
mov
int3
cmpl
pop
xlat
pusha
adc
pop
aas
icebp
add
push
pusha
mov
lret
push
arpl
sbb
cmc
jge
push
xchg
mov
mov
mov
add
pop
cwtl
scas
jbe
decb
stos
mov
into
movsl
pop
cmc
sbb
stc
lods
sahf
lret
xchg
stos
addr16
xchg
jb
rclb
cmp
xor
xlat
or
jnp
add
mov
pushf
jl
adc
dec
jl
insl
sub
movsb
xor
jl
cmp
in
les
cs
lcall
sub
dec
ja
cld
out
add
xchg
lret
push
add
aas
mov
pop
mov
push
in
mov
stos
je
mov
or
xor
pop
repz
pop
cs
add
cmpsl
or
stos
jne
loopne
lods
outsl
test
inc
pop
insb
lcall
aam
mov
xorl
insl
push
pop
ds
cmp
jno
push
loope
push
adc
fiaddl
cld
dec
xlat
pop
pop
xlat
lret
ret
sbb
es
js
int
mov
ljmp
jne
and
mov
outsl
jns
mov
lock
add
and
dec
and
orb
movsl
flds
int
cmp
ja
lahf
ljmp
jns
sbb
sub
fidivl
repz
leave
pushf
cmc
es
shll
xchg
and
push
pusha
ret
insl
dec
ror
push
cmp
in
daa
cwtl
adc
jge
outsb
fcmovnb
push
push
test
dec
cli
lds
mov
addr16
iret
xlat
push
dec
lea
jg
jno
pop
inc
xchg
mov
lret
out
xchg
out
adc
imul
hlt
mov
xor
push
or
or
scas
negl
je
jge
dec
out
sbb
mov
add
jo
les
aas
imul
xchg
loop
ds
adc
cmp
js
xlat
stos
outsb
add
ljmp
jo
and
mov
mov
test
out
fnsave
repz
insl
das
shlb
cwtl
mov
movsb
inc
xchg
es
pushf
inc
pop
in
arpl
inc
mov
sbb
push
mov
loopne
inc
sub
ja
push
data16
ror
sahf
pop
and
ja
out
adc
mov
and
mov
popf
mov
add
rclb
xchg
dec
push
or
cmp
outsb
adc
add
add
fstpl
es
or
mov
pop
pop
push
fsubs
adc
int3
cmp
ss
mov
dec
iret
or
fdivrl
andw
mov
mov
dec
sub
fcomps
sub
push
addr16
push
or
xchg
or
or
lea
mov
sub
jnp
scas
sbb
xor
loope
in
test
mov
in
and
jb
push
es
fildl
push
jle
shl
mov
cmp
rcrb
lds
jp
mov
fstpt
pop
add
jecxz
cmpb
sbbl
dec
inc
ficomps
mov
arpl
inc
rcrl
mov
in
xchg
inc
dec
inc
fisubrl
or
mov
xor
push
aam
adc
dec
mov
push
cwtl
or
jp
sub
orl
cmp
insl
mov
lds
mov
adc
dec
push
stos
and
sub
daa
int3
dec
in
mov
add
add
cmc
inc
cltd
xchg
or
scas
cmpsl
psubsw
dec
push
inc
lahf
loope
shl
cmpb
psllq
enter
mov
imul
cmp
dec
lock
call
or
sbbb
xchg
scas
shrl
mov
outsl
and
pop
and
stos
cmp
pop
inc
sub
clc
xchg
mov
fdivrl
mov
adc
pop
aad
gs
add
xrelease
lret
jmp
gs
or
into
jne
jle
rclb
loopne
adc
mov
add
movsl
leave
sub
scas
jecxz
add
cmp
aas
mov
adc
lahf
test
das
ret
dec
sbb
out
aam
sahf
xor
adc
out
lret
cmp
gs
jno
icebp
daa
jae
out
pop
xor
and
jbe
adc
and
mov
out
cwtl
inc
xor
ret
pminub
dec
out
int
pusha
in
imul
mov
cmp
jmp
iret
call
push
xlat
xor
xor
jns
sahf
mov
cmp
jne
xor
das
std
aam
hlt
push
dec
ja
jno
sub
repz
adc
test
sub
sbb
xchg
cmc
dec
test
jle
ds
add
loopne
mov
xchg
shll
andl
cmp
mov
hlt
push
xorb
ljmp
scas
icebp
movsl
and
cmp
jp
jge
jmp
xchg
push
nop
lret
inc
inc
and
inc
popa
nop
movsb
mov
pop
jl
ljmp
inc
xorb
lds
in
hlt
mov
cmpsl
lahf
imul
daa
pop
push
cmc
ss
lds
pop
push
push
jp
push
mov
out
dec
adc
stos
clc
and
or
call
mov
in
dec
cwtl
testb
loope
cmp
and
cmc
lock
push
mov
inc
jecxz
enter
std
push
pop
push
mov
sarl
lcall
xchg
lret
dec
push
dec
fwait
sub
loop
jno
daa
mov
cmp
lret
and
xor
xchg
rorl
shll
sub
shll
fcoml
int3
sub
xor
test
ljmp
xor
dec
add
jl
out
sub
std
lret
xchg
pop
mov
iret
pop
or
mov
int3
test
add
mov
cltd
inc
mov
add
int
loope
mov
cmp
enter
jbe
dec
out
dec
or
pop
lret
repnz
test
cwtl
cli
icebp
leave
or
jae
cmpl
and
pop
mov
mov
je
out
pusha
pop
jge
icebp
pushw
fwait
inc
dec
stc
data16
mov
mov
ljmp
mov
inc
call
aaa
sub
pop
icebp
lahf
rcll
orb
add
cmp
push
lahf
jle
scas
movsb
imul
arpl
jmp
mov
mov
mov
dec
jmp
and
xchg
fwait
ss
lock
jecxz
lret
lahf
or
xchg
scas
js
dec
inc
jmp
push
and
xchg
mov
pop
ja
test
add
popa
fadds
mov
sub
test
mov
or
cmp
popf
fistps
jbe
mov
push
cltd
test
es
add
pop
cmp
or
jb
push
mov
scas
mov
mov
and
iret
mov
ret
fwait
sbb
leave
aad
insl
mov
sbb
data16
push
cmpsb
fnstenv
addb
inc
pop
das
nop
stos
sahf
inc
jae
les
scas
lods
cld
cs
add
loope
inc
popa
dec
xor
pop
adc
dec
sub
inc
test
pop
push
sbb
xor
inc
js
dec
mov
jbe
into
ljmp
add
ja
fbstp
jl
and
sbb
sub
fcom
push
ss
xlat
pop
dec
repz
jl
cli
adc
sbb
test
jne
mov
cmp
int3
xor
push
iret
xchg
add
mov
adc
loope
nop
bound
fnsave
in
stos
addl
data16
ror
push
pop
outsl
jle
cmp
in
fisttps
mull
out
mov
xchg
clc
pop
sbb
xor
arpl
movsl
insb
xchg
dec
add
mov
sbb
jl
jmp
or
xchg
outsb
dec
fdivl
les
push
push
in
scas
pop
cmp
in
std
ret
cmpsl
or
mov
and
out
lods
push
adc
mov
mov
dec
std
enter
popa
xor
and
mov
fiaddl
mov
shr
jo
int
test
inc
xchg
testb
inc
sbb
dec
mov
push
add
sbb
add
push
sbb
inc
ret
popa
sbb
or
cmpsb
and
lret
cmpsb
cmc
mov
repnz
adc
in
popf
inc
dec
mov
add
idivb
out
sahf
dec
in
out
pop
ljmp
movsb
sub
ficompl
ja
xchg
sarb
xchg
add
fists
ret
push
popl
jl
pop
mov
jl
sbb
pop
pop
int3
std
cmpsb
sbb
enter
push
lock
mov
rorl
pop
push
and
stc
in
inc
lds
bound
ds
sub
jecxz
lcall
jl
lahf
jge
sbb
addr16
fcomps
xchg
mov
sub
and
icebp
fincstp
jno
je
mov
ret
sub
mov
cmc
mov
pop
add
lods
repz
fcmovu
dec
out
cltd
imul
mov
push
pop
dec
pop
mov
out
repz
xchg
cmpsl
negl
pop
jmp
fcomps
ja
arpl
add
push
ja
retw
ret
into
sub
dec
pop
dec
dec
push
movsb
inc
jnp
ja
dec
add
push
jae
xchg
movb
data16
and
les
mov
fstpl
out
mov
int3
lahf
xchg
fnsave
fidivrs
xchg
inc
push
int
push
mov
adc
daa
mov
push
mov
sub
popa
pop
lods
pop
cmpsl
or
add
xchg
shr
stos
jecxz
adc
push
nop
mov
pop
fsts
scas
into
and
ja
push
lea
mov
andl
and
out
loope
jmp
out
jnp
add
icebp
leave
stc
lods
and
in
inc
fnstcw
xor
adc
out
mov
ret
mov
and
arpl
push
enter
mov
pop
lret
sbb
sbb
ss
sbb
cs
cmpsb
push
and
dec
mov
push
sub
sti
mov
in
mov
outsl
ljmp
test
incb
sbb
fcomps
call
data16
xor
dec
stc
lods
arpl
mov
add
pop
adc
cmp
subb
push
push
and
cmp
push
rcr
jp
mov
aad
ds
out
test
insl
mov
pop
jge
jmp
fimull
addr16
mov
adc
cmpsl
movsb
mov
movsb
mov
mull
cmp
daa
push
dec
and
add
xorl
and
cmc
dec
push
mov
shl
int
inc
das
faddp
popf
std
out
dec
cmp
ds
ds
xor
push
push
cmp
or
sarl
xchg
and
push
out
lods
in
scas
xor
sub
popf
sbb
push
leave
fstpt
ret
out
shlb
sti
cmpsb
cmp
jbe
xchg
cli
loop
cmp
push
mov
les
aad
shr
imul
mov
hlt
mov
lea
pop
inc
fldt
das
mov
repz
mov
cltd
cmp
mov
lcall
dec
jbe
xor
mov
sbb
push
adc
adc
inc
cmp
pop
repz
jbe
dec
pop
jg
adc
aam
push
call
in
iret
pop
xor
cmp
jg
or
pushf
aas
inc
sub
adc
push
and
pushf
shlb
pop
pushf
lret
xchg
jmp
jae
and
ljmp
js
xor
idivl
xchg
dec
cmp
cli
nop
sub
testb
xor
and
cmp
xor
pop
icebp
inc
repz
adc
lea
fidivs
add
jno
push
push
imul
mov
jae
xchg
leave
and
roll
cmpsl
ret
mov
add
sbb
movsl
xchg
cmovge
repz
popa
cld
movsl
aam
clc
stos
bound
mov
push
or
push
es
lcall
cmp
add
sbbb
sbb
in
cmc
repnz
lcall
cmp
cli
pop
sbb
outsb
and
sti
push
fistps
aas
mov
sahf
jns
call
setne
mov
orb
mov
fadd
rcpps
jl
icebp
scas
dec
xchg
movsl
fidivl
ds
data16
cmp
jg
bswap
xlat
cmp
dec
mov
outsb
outsb
push
mov
rcrl
fcmove
loop
pop
cld
int3
js
adc
jmp
add
decl
dec
jecxz
test
inc
inc
into
call
jnp
add
mov
in
mov
dec
xchg
mov
sub
dec
xor
mov
cwtl
mov
lea
jmp
xor
mov
push
xor
pop
push
rol
stos
lods
arpl
out
data16
lret
jmp
inc
adc
jb
out
sbb
xor
ret
mov
cmp
dec
mov
inc
adc
sub
push
sarl
dec
int
sbb
imul
cmp
faddp
pop
out
sub
xchg
lods
jmp
loop
call
pop
mov
inc
mov
adc
icebp
mov
cmp
roll
lea
pop
inc
xchg
mov
imul
pop
pop
add
adcb
dec
cmpsb
into
subb
dec
scas
fcmove
xchg
popl
add
xchg
fldenv
mov
xchg
mov
jle
addr16
outsb
outsl
xchg
mov
jl
das
cmp
mov
stc
cmpsl
inc
fadd
mov
in
adc
dec
outsl
jnp
loope
push
adc
imul
add
adc
insl
clc
mov
cmp
scas
jo
adc
or
cmpsb
cld
mov
mov
jge
push
fistpll
leave
orl
adc
jae
push
dec
cmp
aam
dec
mov
inc
add
pop
mov
mov
mov
std
or
inc
imul
loopne
mov
or
repnz
xchg
cmc
or
repz
pop
xor
test
int
stc
xchg
adc
inc
xor
fs
cli
pop
xor
andl
mov
mov
pop
cmc
push
sub
push
iret
push
push
cmpsl
push
push
jle
jno
and
das
pop
mov
call
ljmp
push
mov
xchg
sbb
inc
mov
push
inc
or
cmp
in
push
mov
gs
xorl
fincstp
lea
lret
js
inc
repnz
sbb
inc
sbb
setp
mov
cs
or
test
add
ret
mov
push
movsb
cmp
inc
fmuls
aam
das
sbb
mov
or
mov
mov
inc
test
jg
fnsave
mov
mov
add
out
push
call
inc
dec
pop
jmp
test
push
rorb
test
imul
rcll
pop
out
pop
fs
or
shlb
pop
cmpb
popa
insl
rcl
cmc
fs
dec
ljmp
pop
fcmovnb
je
repnz
pop
in
push
xor
imul
fwait
xchg
pop
cmp
cwtl
push
push
idivl
into
mov
test
mov
xchg
jmp
dec
popl
inc
pop
popf
cmc
shlb
imul
dec
push
xchg
jo
cwtl
cld
mov
lahf
aaa
mov
or
mov
sti
outsb
sbb
mov
rol
mov
test
repnz
imul
mov
pop
mov
mov
dec
mov
jb
jb
sbb
xlat
outsl
mov
rcr
xor
lret
orb
mov
dec
lea
mov
loopne
into
pcmpeqd
test
test
xor
mov
loop
or
mov
xchg
stc
mov
insb
add
jno
repnz
and
push
push
dec
imul
push
jbe
mov
nop
pop
testl
daa
dec
mov
adc
andl
xchg
xchg
xchg
mov
and
stos
lea
pop
aad
mov
movsb
mov
adc
pcmpgtw
sti
xchg
out
mov
mov
or
movsl
sub
dec
dec
loop
mov
mov
xor
xchg
movsl
add
cmp
push
or
dec
adc
jae
jnp
ljmp
push
daa
fidivrl
adc
das
push
popf
jg
or
adc
mov
sahf
mov
dec
jmp
mov
jge
sub
pop
xor
pop
adc
rolb
jl
xchg
mov
pop
les
lcall
and
mov
les
add
or
bound
lret
xchg
add
cmpb
pop
pop
testl
sbb
sub
adc
jl
inc
hlt
sbb
sub
or
in
pushf
push
test
xor
adc
test
ss
pop
cmpsb
xor
mov
out
push
push
repnz
test
or
daa
dec
hlt
add
frstor
sbb
test
lret
pop
cmp
xor
dec
mov
jecxz
cmpsb
and
jns
xchg
movsb
mov
cltd
jo
mov
test
or
cmp
es
push
outsb
ficomps
xor
out
cmpsb
pop
push
adc
and
mov
xchg
xchg
je
mov
mov
aas
and
and
jp
insl
test
pop
xchg
clts
sar
shlb
dec
scas
mov
mov
adc
xor
xor
mov
aas
or
adc
rcrl
outsl
in
xorl
xchg
pop
jecxz
xchg
inc
call
cmpsb
mov
sub
sub
sbb
mov
mov
addl
and
add
or
xlat
orw
aaa
mov
pop
mov
adcb
push
mov
cmp
out
pop
jmp
add
dec
mov
mov
nop
sub
int3
and
jo
adcl
jge
hlt
xchg
lcall
shll
das
mov
mov
jmp
add
imul
jae
ja
imul
dec
and
cmp
inc
pop
xchg
rsqrtps
fsubs
popa
loop
push
sub
mov
and
sbb
xchg
cmp
add
cmc
pop
dec
lret
outsb
or
fbstp
cmpsl
pop
or
mov
cmp
sub
pop
sahf
shlb
cmp
adc
xor
xchg
xchg
insb
jb
rcl
push
mov
or
mov
mov
xlat
data16
mov
jns
inc
in
mov
mov
mov
loop
push
xchg
jmp
inc
popa
movsb
xor
daa
mov
fs
cmp
or
push
push
push
add
sub
push
mov
xchg
int
push
gs
addr16
adc
sbb
or
mov
inc
fs
sti
mov
xchg
movsb
mov
arpl
cmp
rorb
jle
loopne
or
lods
dec
hlt
add
or
das
dec
jl
test
sbb
adc
aad
inc
lcall
jg
data16
lret
into
lret
fists
sub
sbb
out
or
or
lods
cld
jne
xchg
and
leave
insl
mov
mov
movsb
add
xchg
clc
xor
and
in
pop
adc
pop
cs
int
icebp
sbb
mov
aas
sti
push
pop
sub
imul
loop
insb
arpl
dec
pop
sub
or
cs
das
icebp
cmp
push
push
jbe
adc
dec
mov
jns
fisttpll
mov
in
notl
pop
xor
aam
imul
pop
test
push
sti
inc
mov
xor
stos
or
subb
pop
cltd
mov
ret
into
cmp
lret
jbe
add
movsb
and
mov
arpl
ss
sub
xor
lcall
or
jl
call
outsl
push
cmp
inc
push
aas
or
out
rcl
aad
jge
inc
movl
and
sbb
enter
xor
in
jmp
xchg
and
pop
daa
xchg
and
cmc
mov
pop
addr16
add
out
cmp
and
dec
fsubr
int
pop
pushf
adc
cld
cmp
jae
dec
fwait
mov
dec
mov
inc
xchg
repnz
ss
push
jnp
xchg
sub
roll
imul
inc
sbb
fsubrl
sbb
insl
cs
daa
inc
nop
adc
pop
cmpsb
sbb
cli
ljmp
and
cltd
pop
fistpl
and
push
sbb
jnp
push
inc
xor
xchg
mov
aam
in
lods
push
mov
mov
dec
inc
int
inc
sbb
aas
lcall
mov
loopne
hlt
add
popaw
sahf
adc
mov
xchg
adc
mov
std
shl
in
mov
add
test
dec
jmp
add
jecxz
call
loope
rcrb
mov
call
lret
rcrb
jl
xlat
sub
das
inc
loope
ljmp
dec
stc
push
test
daa
movsb
lods
shr
xor
out
push
jle
lahf
int
sbb
cmp
stos
ja
mov
shr
mov
sub
sbb
and
adc
nop
je
dec
add
mov
cmp
pop
nop
cmp
stc
scas
inc
movsl
aaa
rorl
fs
add
fld
pop
adc
scas
cmc
jge
adc
inc
push
into
movsb
js
mov
orb
lods
gs
testb
fnsave
lods
daa
stos
adc
cmp
inc
mov
lds
enter
mov
pop
stos
jnp
and
sub
repnz
push
or
lahf
xchg
mov
xor
rcl
inc
fcmovbe
pushf
mov
mov
andl
rorb
fcmovnb
dec
push
jle
fimuls
in
mov
pusha
adc
aas
notl
and
ret
scas
pop
sub
pop
cmp
lods
jp
fstpl
adc
ljmp
jmp
sahf
lret
pushf
inc
imul
stos
adc
sbb
pop
fists
es
lods
mov
dec
addr16
aam
jmp
mov
cmpb
push
stc
push
loopne
add
popa
jne
je
loop
add
jne
cmc
dec
inc
jmp
push
cltd
mov
jno
mov
movsb
and
mov
aam
push
test
dec
pand
jo
dec
inc
inc
arpl
or
daa
loopne
mov
roll
or
sub
pop
mov
hlt
xchg
jecxz
mov
cmp
mov
mov
cmp
cmp
add
std
sahf
dec
dec
jmp
outsl
adcl
nop
lret
js
repz
mov
dec
dec
xchg
les
mov
roll
pop
sub
pop
inc
sbb
fadd
inc
jne
sub
loopne
icebp
std
pop
dec
add
adc
adc
repz
mov
loope
inc
popf
bound
std
dec
in
gs
je
jmp
fcoms
mov
adc
enter
outsb
fldt
dec
mov
cmc
pop
je
iret
lcall
fwait
pop
cld
lock
sub
xchg
add
ss
icebp
clc
leave
cmpb
xor
push
mov
ret
push
xor
in
jno
xor
push
sub
push
jg
fwait
and
lods
push
dec
cmp
mov
enter
fiadds
jmp
mov
adc
pop
insl
push
inc
or
push
dec
out
jle
xchg
aaa
mov
repz
xchg
out
xor
enter
or
inc
imul
gs
loop
push
in
sbb
lods
mov
adc
push
jbe
mov
cli
das
lret
cmpsb
in
aaa
test
xlat
cltd
push
testb
jle
leave
dec
sbb
in
notb
mov
sbb
lahf
fcoms
xchg
mov
jo
push
jle
mov
inc
push
push
push
inc
icebp
add
test
shl
stc
jl
addl
cmpsb
into
and
ss
mov
jge
push
mov
dec
aaa
inc
test
dec
mov
mov
nop
xchg
scas
je
hlt
shll
ficompl
xorb
xchg
cwtl
push
lods
or
mov
xor
pop
add
mov
mov
cmpb
mov
out
data16
aaa
mov
aaa
mov
push
add
bound
faddl
mov
and
dec
xor
mov
dec
cmpsl
std
and
cmp
add
sbb
fcompl
and
ret
fidivrs
and
and
dec
or
cld
outsl
mov
pop
pop
adc
pop
xlat
scas
inc
pusha
les
dec
fistl
dec
in
ror
sub
mov
popf
xchg
adcl
jo
jp
pop
loope
cmp
add
imul
out
mov
aad
addr16
inc
push
add
insb
ljmp
jbe
out
sub
push
daa
push
inc
sahf
xchg
add
mov
loopne
mov
leave
lds
or
gs
cmpl
mov
in
inc
inc
mov
mov
pop
sub
stc
adc
out
js
shrb
push
add
repz
fimull
and
xchg
mov
cmp
in
sub
int
jl
mov
jb
dec
aaa
mov
sbbb
pop
cmp
xor
ja
cmpl
popl
mov
je
jl
jecxz
test
jl
outsb
cmp
xchg
push
cmp
cs
and
std
sahf
std
dec
or
out
xchg
fs
lret
jmp
lahf
in
lock
popa
cld
ficomps
dec
stos
or
jmp
outsl
mov
scas
mov
pop
sbb
and
cmp
add
rcrb
cmp
add
and
sti
add
pop
push
sahf
ljmp
push
or
push
mov
dec
pop
adc
icebp
inc
and
mov
lock
mov
fwait
andl
nop
popa
cmpb
pop
and
cmp
adc
popa
jae
ss
jmp
xchg
outsl
aad
decl
in
xchg
mov
loope
outsl
inc
inc
fwait
add
rolb
lods
ljmp
inc
aam
outsl
jge
inc
and
ljmp
adc
cmc
inc
cmp
fdivrs
cmc
xchg
cmp
insb
xchg
arpl
jecxz
mov
dec
mov
aad
adc
mov
es
rcrl
scas
enter
mov
mov
xor
cld
dec
sbb
lea
ja
add
gs
mov
std
movsl
xchg
ljmp
cmc
outsb
xor
push
dec
ja
out
mov
test
xor
jbe
sub
jns
push
lret
or
pop
pop
fs
popa
and
incb
xchg
nop
movsb
jecxz
xor
xor
push
mov
xchg
sub
adc
addb
cmp
ljmp
xchg
pop
mov
cwtl
mov
call
aaa
xlat
and
lret
push
xchg
jo
or
mov
adc
add
int
inc
insl
xor
jno
negl
dec
or
sbb
xchg
and
hlt
scas
push
xchg
cmp
addr16
loope
cmp
std
dec
xchg
sub
stos
dec
mov
in
xchg
pushf
fstpt
addr16
fldl
nop
add
dec
aam
outsl
and
jo
pop
push
repnz
or
test
subl
mov
cmovne
mov
ja
pop
sub
mov
xor
xchg
add
inc
test
push
lret
stos
sti
lods
lcall
push
dec
push
jb
xlat
lea
outsb
std
cltd
jns
lahf
ret
jmp
mov
imul
scas
xchg
or
pop
mov
mov
mov
cli
add
jne
sub
sub
rolb
mov
xor
aam
ja
inc
mov
cmpl
iret
jne
add
and
fsts
movsb
movsl
orb
sbb
mov
xchg
stc
mov
sbb
add
repz
xchg
adc
repz
add
jb
sbb
leave
cmp
outsl
sti
mov
sub
mov
dec
test
cwtl
sbb
mov
mov
mulb
or
push
jns
andl
repz
mov
outsb
jmp
ljmp
jecxz
enter
or
test
sub
push
cmp
dec
adcb
in
or
adc
mov
clc
and
call
enter
lds
xor
xchg
daa
jae
pop
test
dec
sbb
xlat
inc
lret
outsb
mul
jl
mov
mov
faddp
push
iret
dec
ljmp
jmp
jno
icebp
sbb
fdiv
push
xchg
test
and
mov
mov
stc
cmpsl
jle
je
lret
jno
stos
sub
push
mov
outsl
das
popa
sbb
pop
addb
rclb
sub
cltd
mov
imul
cmp
aaa
xchg
int
fmuls
adc
fnsave
dec
gs
loop
loope
std
ja
sti
mul
pop
sub
aam
aaa
mov
or
mov
mov
std
or
pop
je
inc
add
pop
sbb
test
and
fistpl
jp
push
pop
or
inc
mov
mov
jae
out
or
dec
adc
stc
shl
fdivs
mov
and
nop
lock
jo
and
jmp
xchg
js
mov
dec
loope
dec
mov
jg
xchg
nop
add
je
popf
dec
and
fstl
into
test
mov
out
call
add
lahf
es
mov
rcrl
adcl
jg
in
push
ret
sbb
idiv
loopne
std
call
loope
mov
sbb
jo
fistps
out
mov
repnz
push
loopne
stc
ret
into
xchg
ja
in
push
cli
pop
jmp
inc
insl
cmp
dec
test
sahf
xchg
arpl
add
stc
rcll
ret
inc
xor
mov
xor
mov
dec
pusha
mov
mov
insl
xor
mov
ret
test
iret
fwait
scas
push
adc
xor
pop
das
je
faddl
add
mov
pop
adc
jnp,pt
jno
dec
movsl
xchg
push
aad
fistpl
repz
lcall
fistps
jecxz
push
or
dec
mov
js
shrl
cmpl
sub
cmp
xor
stos
loop
xchg
mov
jp
loopnew
cmp
imul
sub
pushfw
les
mov
xor
subb
dec
popa
sub
insb
lret
cmp
or
repnz
jecxz
adc
fs
aad
sti
mov
out
jnp
out
rclb
pushf
decb
push
dec
daa
mov
mov
andl
mov
jns
cmp
clc
movsl
insl
clc
cli
test
lds
sbb
xchg
out
sbbl
xchg
pop
jmp
xor
movsl
in
scas
mov
ja
push
shl
stc
adc
fistpl
and
or
and
and
and
push
call
or
pop
rcrl
notb
repz
push
xor
fs
sub
in
lcall
mov
fisubl
adc
dec
int
hlt
mov
jg
add
add
cmpb
stc
mov
je
xchg
pop
stc
xorb
and
jno
or
das
mov
shll
pop
mov
sub
sub
mov
cmp
push
mov
js
cmc
push
stc
xchg
jns
xchg
arpl
sahf
loopne
scas
cld
loope
into
shlb
add
fidivrs
inc
pop
pushf
jne
lock
add
imul
jae
jecxz
jmpw
mov
inc
fldcw
lret
loopne
or
jo
mov
dec
sub
xchg
pop
jnp
xchg
dec
out
scas
mov
adc
pop
nop
test
and
test
inc
pop
xor
mov
pop
out
aad
add
arpl
inc
pop
push
dec
aad
mov
inc
jecxz
jl
in
loope
sub
pop
jae
adc
xor
mov
shlb
inc
scas
inc
popa
test
icebp
repnz
lds
sbb
jb
out
push
test
mov
sub
mov
xchg
jne
jp
dec
aaa
or
xor
rcrb
push
lds
mov
cmc
and
xchg
jl
test
pop
push
or
mov
lods
cmp
xor
outsb
inc
fisttps
xchg
sarb
push
jne
dec
adc
add
mov
xchg
mov
lods
icebp
jge
clc
pop
lods
popa
lods
adc
dec
fisubrl
pop
cmp
int
sub
in
incb
lea
and
or
jecxz
pop
icebp
hlt
shrb
mov
arpl
std
pusha
icebp
lcall
sub
mov
push
sub
xor
out
mov
arpl
nop
jmp
cmp
dec
mov
mov
jle
rolb
lret
mov
pop
mov
mov
mov
imul
mov
xor
das
insl
mov
aas
rcll
std
imul
cmp
es
xor
adc
mov
xor
popa
pop
xchg
push
lcall
jb
and
ret
stc
inc
sbb
push
jb
xchg
mov
vmovaps
mov
mov
push
dec
insb
xchg
es
mov
xchg
xlat
cmp
dec
pop
dec
fsubp
inc
jb
out
xchg
sub
xchg
dec
mov
sbb
cmp
jmp
cmpsb
std
leave
mov
mov
xchg
in
popa
push
das
sub
mov
aad
or
jecxz
pop
out
lods
aaa
ja
inc
arpl
cld
das
xchg
fs
jecxz
xlat
in
add
mov
les
mov
popa
mov
xlat
xchg
movsb
sbb
addr16
mov
jne
and
or
jp
xor
dec
sub
sbb
stc
imul
jmp
addr16
test
lods
push
and
aam
fs
lret
or
xchg
movsl
inc
fisubrl
dec
add
inc
or
jge
sbb
jbe
lret
test
dec
dec
inc
int3
lea
dec
push
sub
and
cmp
pop
int3
fldenv
scas
inc
inc
mov
jmp
scas
inc
adc
sub
ret
cmp
aas
and
ljmp
repz
adc
xor
lock
cltd
cmpsb
loopne
call
jp
and
idivb
inc
lds
cltd
xchg
in
pop
add
daa
sbb
xor
iret
daa
or
adc
cmpsb
mov
fnstsw
ret
sbb
mov
mov
stc
mov
lock
cmp
jno
int
mov
cmp
inc
push
iret
mov
dec
dec
sub
push
mov
sub
sbb
pavgw
jl
in
xchg
lcall
xchg
lock
iret
add
jb
mov
mov
lcall
in
hlt
jmp
push
loop
clc
loopne
and
rclb
ljmp
loope
add
test
cmpsl
xor
addr16
jp
xchg
dec
test
outsb
xor
adc
test
aas
xchg
pop
push
popa
jg
adc
out
cmpsb
xchg
cs
scas
repnz
push
addl
sbb
shll
push
and
inc
mov
fstpt
in
mov
leave
add
adc
jae
inc
or
mov
pop
lds
test
xchg
jle
fwait
in
cli
test
ror
imul
pop
fsts
vpcmpeqw
xchg
mov
push
xor
cltd
es
js
mov
sub
push
mov
fisttpll
xchg
fwait
js
push
push
jno
fidivl
or
int3
jl
xor
xlat
pop
jb
aam
jno
sbb
and
aad
xor
or
out
cmp
mov
jb
out
mov
call
daa
lods
in
mov
cmp
aad
cmp
sub
dec
cld
sbb
fstpl
adc
fsubl
je
out
sbb
popf
divb
cmovs
lods
xlat
jns
sbb
xchg
and
inc
or
xorl
fnstcw
add
xor
mov
lods
sub
or
call
loop
orb
mov
arpl
mov
pop
daa
aad
shrb
repz
pop
lcall
add
call
mov
adc
xor
jl
mov
mov
add
js
adc
adc
adcb
xchg
jns
and
dec
stos
sub
rcl
xchg
or
add
pop
sub
loope
pop
mov
cmpsb
jmp
mov
mov
xchg
push
or
jge
jp
mov
xor
ljmp
sub
cld
test
int3
sahf
cli
movsb
in
cmpsb
mov
mov
stos
aaa
in
adc
pusha
insb
lret
rolb
mov
jg
sbb
push
in
xlat
push
jle
cmp
and
ss
shl
aam
fxch
pop
es
and
xchg
psubsw
jle
imul
pmullw
dec
inc
and
or
fnsave
stos
aas
pusha
jbe
pop
dec
dec
sub
fsts
sub
mov
mov
mov
xchg
iret
jae
adc
add
lret
hlt
pop
add
lods
xor
push
xchg
xchg
leave
push
mov
cld
adc
adc
mov
rolb
jae
sub
stos
jecxz
inc
sub
sub
add
lds
sub
mov
mov
adc
stos
xchg
mov
dec
adc
std
call
add
cmpsb
test
push
pop
imul
add
xorb
shl
inc
sbb
test
nop
inc
cmp
sbb
fcom
mov
in
xor
sub
sbbb
stc
xorb
mov
dec
cs
mov
push
dec
dec
or
lret
push
jae
aad
cltd
sti
push
mov
add
dec
cmp
das
shrl
sub
xor
mov
jp
outsb
hlt
in
jae
dec
adcb
je
sbb
repnz
pushf
inc
cmp
stc
rcll
cmp
or
out
push
mov
dec
sub
in
mov
jg
push
iret
cli
mov
enter
jg
lcall
inc
dec
stc
add
xchg
mov
call
push
inc
div
orl
xor
test
pop
loope
ficoms
enter
mov
jg
mov
pushf
cmp
and
ficompl
xchg
lret
lret
xor
test
mov
loopne
insb
aad
aaa
fildll
je
mov
int3
test
arpl
enter
iret
mov
cmp
jno
push
mov
xor
in
shlb
sbb
jne
and
iret
pop
cmpl
dec
imull
sti
ret
into
je
pop
repnz
xchg
in
cmp
mov
jl
pop
pop
mov
hlt
stc
fstl
pop
imull
or
in
in
iret
stc
add
das
jmp
adc
sub
stos
push
roll
adc
xchg
test
or
dec
or
pop
push
xor
xor
stos
loop
push
scas
inc
shll
addl
imul
push
lcall
jns
sub
pop
dec
add
out
out
xor
arpl
dec
mov
fnstenv
or
mov
dec
xor
push
mov
scas
stos
mov
xchg
xor
jb
xchg
inc
adc
negb
mov
lods
aam
mov
popa
jbe
fwait
xchg
jmp
push
push
fcmovne
push
inc
sbb
fsts
cs
lahf
inc
lret
sbb
push
out
nop
adc
mov
daa
std
jge
in
dec
add
xor
pop
bound
xchg
mov
and
xchg
xchg
push
mov
movsl
bound
cmp
push
lock
into
arpl
or
sti
adc
mov
mov
sahf
cmp
mov
clc
adc
dec
mov
mov
push
leave
stos
sar
sarl
mov
rcl
pop
out
mov
icebp
imul
orb
negb
push
test
sahf
mov
cli
mov
jecxz
or
lea
mov
jae
push
shlb
push
push
jae
mov
cltd
xor
sub
and
sub
scas
test
repnz
jne
je
ficoms
cmp
and
gs
cmp
mov
push
jnp
inc
pop
fs
and
dec
test
fisubrl
lcall
cmpsl
lret
cmp
call
ret
add
int
dec
ja
sub
push
icebp
mov
mov
fidivl
movsb
add
jbe
mov
test
dec
add
sub
test
lds
push
adc
aam
repz
inc
lds
pop
subl
ffreep
call
int
ds
sqrtps
mov
jbe
mov
fwait
mov
loopne
pop
and
loopne
loopne
adc
imul
and
mov
xchg
dec
pop
clc
adcb
movsb
and
rcrl
mov
xchg
out
orb
xchg
and
pusha
and
lret
cltd
cmpsb
mov
xlat
or
shl
inc
add
cmpsl
call
mov
push
push
mov
loope
pop
sbb
cmpsl
daa
sub
dec
dec
es
ret
inc
inc
pop
dec
fs
lea
cmc
lods
inc
fwait
gs
sbb
mov
jle
les
loope
test
inc
lcall
inc
mov
repnz
sub
popa
xor
dec
xorl
mov
data16
mov
pop
stos
inc
or
cmc
fcmovnbe
inc
in
mov
mov
sti
and
mov
push
mov
addr16
add
jl
movsl
fbstp
cli
pop
movsb
push
jg
sti
mov
jge
int3
jo
pop
mov
xor
rclb
repz
nop
inc
dec
lock
pusha
outsl
pusha
testb
xor
push
mov
lcall
popf
rcl
iret
sub
lret
movsl
dec
fwait
or
sub
fiadds
add
sahf
pop
les
inc
pop
cmp
cs
mov
push
xor
inc
movsl
inc
lahf
call
incb
jno
cltd
ja
inc
xor
adc
add
int3
dec
mov
popa
out
pop
cs
and
sti
sub
inc
nop
mov
inc
and
dec
ret
xchg
mov
add
mull
sub
scas
nop
push
mov
lds
movsl
jo
pop
shrl
push
imul
xlat
xor
testb
xchg
lods
in
cmp
fistps
das
lret
inc
add
mov
pop
mov
jle
jmp
adc
cwtl
fbld
ss
cwtl
fsubl
xlat
mov
cmpsl
sbb
or
add
sahf
cmp
inc
push
dec
es
xchg
push
repnz
and
sub
dec
std
and
rcl
loopne
out
fistps
add
cli
je
icebp
das
xchg
add
rcrl
xchg
js
js
js
daa
movsb
aaa
mov
jle
loope
mov
mov
flds
cmpb
xor
lret
stos
aas
sub
or
push
movsl
aaa
xchg
dec
xor
cmp
cmpsb
mov
cltd
cmp
lcall
xchg
pop
insl
pushf
xor
cmpsl
push
out
mov
mov
push
jle
cmpsl
adcl
sub
xor
ret
adc
or
sahf
js
xchg
aam
mov
mov
and
jno
scas
lods
jb
pop
jns
test
clc
push
and
cmp
pop
imul
and
fbstp
fwait
leave
into
mov
cld
xchg
push
testb
cmpsl
or
mov
ret
cmpsb
sarb
loope
fmul
lock
cmpsb
ds
stos
jl
insb
out
dec
mov
leave
stos
or
repz
dec
mov
mov
and
enter
cmp
mov
stos
rep
stos
adc
pop
jns
pop
daa
mov
addr16
ret
mov
lret
shll
mov
xor
inc
jnp
clc
outsb
inc
push
clc
stc
clc
pop
pop
push
test
push
addr16
ljmp
dec
icebp
jno
xlat
pushf
call
xchg
int3
mov
aad
int
into
lcall
cmpsb
mov
sub
xchg
fildl
or
mov
pop
or
es
xchg
das
popa
lock
dec
cld
mov
inc
push
es
cmpsl
or
pop
xor
movsb
inc
loope
xor
mov
mov
adc
arpl
fildll
mov
int
leave
lods
rcrl
push
jb
outsl
add
adc
imul
scas
lock
push
jg
jnp
hlt
hlt
ret
rcl
jns
data16
sub
push
inc
dec
psrlq
aaa
xor
ja
adc
pop
lods
lret
mov
pushf
ja
inc
popf
jno
lret
scas
in
xchg
sbb
push
mov
mov
fisttps
lret
ljmp
dec
outsb
andb
dec
shrl
sbb
adc
popf
dec
inc
xor
in
idivl
loop
ret
shl
mov
push
adc
fwait
cld
dec
xor
or
push
cltd
mov
mov
pop
xor
pop
cmp
xor
lods
jbe
cmp
leave
push
or
adc
xchg
adc
jbe
lret
arpl
and
pop
mov
adc
test
hlt
add
and
jnp
popa
sub
or
sahf
sbb
cmp
mov
scas
jb
jg
jb
decl
imulb
cmp
fsub
fisubs
frstor
sub
mov
add
sub
pop
jb
lcall
stos
dec
cmpsb
mov
fdiv
xor
and
daa
rcrl
xchg
cmp
and
dec
shll
ret
sub
rorl
add
sbb
repz
xchg
rcl
mov
repnz
fisubl
mov
sub
inc
cwtl
cwtl
pop
pop
insl
insl
jne
xchg
cmp
mov
or
pop
sub
movsb
mov
popa
adc
sub
mov
inc
or
push
iret
dec
add
lods
jecxz
out
add
mov
sti
psrlw
dec
stos
sarb
or
jle
not
pop
fisttpl
pusha
or
push
dec
mov
mov
into
sbb
sbb
inc
lods
xor
sub
or
mov
jb
in
int3
pop
mov
stos
cmpsb
pop
mov
adc
orl
jl
inc
xchg
leave
decb
pop
incb
inc
cmc
mov
jae
dec
rorb
das
in
repz
push
jg
in
adcl
dec
sbb
jmp
adc
or
imul
jno
imul
lds
mov
xchg
and
loope
mov
orb
xor
add
aam
shrb
mov
icebp
dec
adc
ja
cmc
push
or
xchg
xor
xchg
outsl
nop
enter
scas
ret
cmp
mov
cmp
mov
add
cmp
adc
std
clc
adc
jbe
lea
mov
push
cltd
or
sbb
test
aad
cmp
adc
pop
jg
jae
lea
cld
int3
call
xchg
sub
inc
faddl
lea
aaa
clc
adc
dec
dec
mov
jb
cli
fwait
loope
mov
fidivl
sub
xor
sub
les
flds
and
jns
mov
subl
iret
cli
call
lret
cmp
sbb
or
jle
xor
pop
aam
and
sub
mov
fsubl
ss
add
testl
xchg
lcall
mov
sbbb
or
stc
push
jnp
mov
decb
sbb
ss
jmp
mov
rcll
dec
dec
idiv
fidivrl
jb,pt
pop
popa
sbb
insl
fsub
cs
mov
repnz
std
or
cmpsb
stos
jns
dec
xor
or
ss
int
mov
cmp
or
dec
std
jne
dec
sbb
adc
popf
ficompl
pop
dec
fdiv
es
xchg
std
jl
mov
out
adc
gs
hlt
sti
jae
push
jp
adc
inc
repz
cwtl
popa
ret
push
scas
jp
scas
xor
cmpsb
addr16
loope
lock
rcrl
jne
push
mov
jno
dec
sti
in
sahf
cli
imul
mov
stc
xchg
inc
add
popf
mov
xchg
mov
push
inc
xchg
filds
pop
add
xor
mov
adc
jecxz
mov
or
jne
test
popa
hlt
push
outsb
pop
imul
mov
hlt
in
imul
inc
out
jb
jmp
fwait
aad
movsl
test
daa
or
dec
jp
pop
ds
lock
mov
pop
negl
xchg
push
jmp
mov
pop
mov
mov
dec
dec
push
mov
inc
xor
push
test
pop
xor
mov
sbb
push
fcoml
jg
rorl
mov
ret
loopne
and
cmp
lret
jg
inc
xchg
imul
push
inc
jb
loope
fnstsw
fmuls
push
or
cld
cmp
xor
xchg
add
mov
mov
push
xor
mov
cmp
cli
testl
mov
jbe
nop
in
mov
out
scas
fistpl
add
fwait
xor
outsl
addr16
sbb
and
cwtl
pop
mov
add
push
test
mov
lds
imul
sub
std
mov
sub
dec
jmp
mov
dec
xchg
imul
adc
dec
push
movsb
mov
xlat
push
xchg
mov
enter
mov
out
scas
sbb
and
xchg
cs
in
sbb
cli
je
pusha
or
js
xchg
pop
sbb
aad
cli
sbbb
pop
testl
dec
mov
pushf
xor
addr16
bound
mov
setl
out
mov
mov
push
subl
or
fs
mov
lcall
imul
xor
mov
xor
enter
imul
test
imul
cmp
mulb
pushf
cld
mov
test
push
por
cs
ret
xor
and
push
call
ss
rclb
mov
or
jns
push
sbb
cltd
jo
call
gs
sahf
pop
xchg
and
ss
add
in
pop
push
sub
test
sahf
jae
outsb
adcl
inc
insb
mov
in
arpl
mov
in
int
push
cmp
sbb
push
pop
daa
inc
inc
xor
loop
and
adc
inc
or
enter
in
rclb
push
test
mov
jnp
xchg
test
lock
xor
psubd
mov
xor
jne
inc
mov
xchg
lods
sbb
sub
mov
xchg
lahf
movsl
fcomip
fbld
or
lcall
out
test
lcall
pop
mov
fwait
mov
add
aad
fs
jno
popf
in
cwtl
mov
ret
aas
jae
repnz
xor
adc
sub
std
outsl
out
popa
fsubrs
out
pusha
jb
cmp
lret
in
aad
inc
cmp
mov
jl
nop
xor
andb
lea
aam
in
das
out
mov
jmp
jno
dec
xor
jbe
jnp
in
fs
int3
pop
xchg
and
xor
insl
outsl
sbb
sbb
fistl
int3
fs
mov
out
jne
cmp
mov
mov
sbb
aaa
pop
into
fwait
shl
inc
add
outsb
inc
push
push
ja
sub
shlb
movsb
test
add
lods
mov
loope
or
imul
mov
and
xchg
mov
or
out
insb
mov
mull
aaa
fs
xchg
add
lods
fimull
pop
hlt
adc
cli
pop
mov
gs
daa
mov
push
adc
dec
sub
jb
outsl
test
push
incb
cmpsl
sahf
outsl
aad
jle
xchg
pop
push
inc
insl
jo
testb
jl
stos
test
lods
imul
xor
cli
jg
loope
jl
pushf
ficompl
test
sbb
xor
in
in
loop
cmp
xchg
inc
outsl
add
mov
lret
lret
out
xor
mov
xchg
gs
mov
mov
pop
push
test
js
out
mov
les
gs
jle
loop
sbb
pop
testl
in
pop
test
xor
push
cmp
mov
cmp
decb
push
outsl
lock
pop
repz
fists
ror
mov
stos
jnp
cwtl
pushf
cmp
es
mov
aad
xlat
mov
cmp
std
jmp
std
dec
push
xchg
mov
mov
xchg
pop
dec
push
and
jp
xchg
rcrl
add
xchg
push
inc
sbb
stos
and
rcr
stos
fidivrs
aas
push
test
cmp
push
subl
fcomps
cs
mov
lahf
push
push
aaa
rcl
sub
movsl
test
jo
insl
imul
cltd
xchg
inc
ret
dec
mov
jns
or
xchg
ds
test
fs
bound
es
dec
push
sub
test
adcl
arpl
rsm
inc
xchg
mov
addl
orl
mov
or
pop
int3
mov
or
jns
ret
jecxz
jecxz
negb
xor
sete
xor
pop
shll
mov
fcoml
xchg
les
adc
movsb
mov
mov
lds
push
xor
sub
in
in
out
sbb
or
les
or
das
dec
mov
pop
inc
hlt
std
jae
xor
popf
or
inc
mov
adc
mov
jb
std
mov
fs
dec
mov
mov
and
ljmp
lcall
in
xor
movb
movsb
addr16
lea
bound
jnp
call
jg
stos
mov
divb
iret
outsl
data16
push
mov
sbb
cmp
movsl
sub
or
mov
jae
jns
jmp
aad
adc
sti
push
jb
lods
xchg
lret
clc
add
push
loopne
jl
rcrl
pop
sbb
pushf
push
mov
mov
xchg
pusha
pop
cmpsb
stos
sbb
outsl
popf
cmp
aad
je
rclb
or
push
xor
add
inc
call
inc
xor
popa
or
in
or
gs
jmp
or
push
xor
std
mov
sbb
xor
mov
jmp
pop
xor
adc
fcomps
cwtl
jle
push
test
loope
jl
dec
xchg
insl
in
sbb
xchg
cs
push
xor
pusha
outsb
inc
inc
xchg
mov
das
sub
sub
pop
xchg
jg
mov
movsbl
outsl
das
mov
and
push
add
jecxz
aaa
shlb
push
shr
push
aas
cltd
mov
add
aad
loope
mov
ret
aaa
pop
fwait
clc
test
push
popa
leave
sahf
jns
addl
es
mov
popa
test
jmp
cli
pop
hlt
mov
dec
lock
jl
sbb
mov
shll
push
xlat
inc
divb
aaa
and
scas
inc
jno
and
popf
mov
ret
sti
xchg
pop
iret
push
mov
mov
push
mov
xchg
mov
enter
inc
das
divl
adc
adc
add
add
push
cmc
test
loopne
lahf
mov
pop
insl
imul
enter
lods
cmp
pusha
sub
pushf
imul
xor
sbb
js
add
aaa
jmp
aaa
cmp
and
pop
or
lret
mov
xor
test
mov
pop
fidivrl
add
popa
dec
in
dec
inc
lcall
das
faddp
mov
clc
jbe
push
es
jmp
mov
repz
sbbl
popf
dec
cli
fwait
or
sbb
xchg
out
xchg
xchg
pop
xchg
cmp
pop
xchg
mull
cs
mov
gs
icebp
push
test
xchg
ljmp
arpl
jo
lods
mov
mov
xor
and
mov
jnp
xlat
setle
xor
and
xor
scas
call
adc
xchg
sti
or
and
mov
das
mov
dec
sub
test
cwtl
inc
mov
mov
push
dec
das
ret
or
dec
mov
idivl
call
mov
jmp
adc
dec
jno
arpl
mov
cmp
rcl
cmp
in
enter
pop
pop
xor
call
jmp
ret
dec
sbb
jp
sbb
jno
mov
les
mov
add
add
push
jmp
aaa
push
adc
stos
and
push
aam
xchg
mov
xchg
pusha
enter
ljmp
cmpsl
ss
add
mov
jecxz
rcrb
or
in
mov
les
xor
orb
loop
fistpl
or
push
inc
rcrb
rorl
into
stos
andb
xchg
mov
ret
mov
jp
in
flds
and
mov
lds
cmp
xor
imul
movsb
cmpsl
notl
sbb
cmp
adc
xchg
xor
scas
out
dec
in
arpl
stc
pop
arpl
sub
fldt
popf
test
lcall
push
sbb
add
mov
nop
filds
mov
add
mov
lock
in
ret
inc
mov
out
out
fisttps
inc
sbb
cli
adc
dec
jb
cmp
jno
stos
xor
pop
sub
scas
and
in
lcall
cs
fistl
xchg
jns
rorb
movsb
adc
int3
cmp
int3
in
cld
mov
mov
jns
mov
mov
clc
sbb
mov
in
xor
push
mov
push
out
sbb
mov
jo
addr16
pushf
stos
lds
push
jae
hlt
push
xor
pusha
inc
cmp
negl
sub
nop
xchg
dec
adc
in
xor
inc
sub
push
sti
stos
jae
cld
pop
cwtl
or
icebp
addr16
cmp
insl
dec
lods
or
inc
push
test
or
pop
icebp
aaa
inc
push
push
push
gs
aam
xor
mov
out
or
fldenv
lds
adc
xchg
scas
hlt
dec
pop
add
pop
imulb
xor
jns
mov
adc
fistl
rorb
sbb
xchg
loop
mov
mov
adc
inc
test
lods
push
adc
subb
xor
sbb
ja
sbbl
fdivr
rclb
cwtl
cmp
or
mov
nop
sbb
les
int
pop
clc
jns
fwait
jae
xor
mov
or
hlt
sbbb
dec
addl
scas
fs
popa
pusha
mov
or
data16
inc
xorb
xchg
jb
fidivrl
int
and
int3
or
sbb
add
call
or
lcall
lcall
push
push
in
mov
mov
les
lret
inc
push
xchg
das
sbb
ret
adc
fdivrp
fadds
push
mov
add
pop
fs
shll
mov
cmp
shll
jne
and
pop
iret
pushf
rorb
cmp
jnp
sbb
pop
sub
and
adc
xchg
aas
inc
and
out
mov
iret
adc
mov
sbb
add
dec
pusha
fnsave
push
pop
dec
cmc
jl
dec
pop
inc
xor
je
push
xchg
sbb
inc
fucomi
ss
nop
popa
fimuls
lahf
sbb
add
cmp
insl
sbb
pop
ds
in
cld
ror
ljmp
lret
lds
pop
or
mov
push
lret
imul
adc
out
push
lea
push
cmpsl
xchg
sbb
sub
bound
es
and
mov
imul
loope
ds
add
and
aaa
push
into
inc
jg
mov
jae
js
mov
cmp
lock
shr
andl
fs
cmp
xor
cmp
push
in
dec
ror
jo
push
mulb
mov
or
sar
xchg
mov
lods
push
lea
mov
mov
sbb
lret
jg
js
sahf
mov
addr16
shr
mov
shlb
mov
in
pop
inc
mov
shlb
out
add
xchg
enter
fs
push
mov
es
out
cmp
pusha
lock
mov
mov
lds
and
xor
cmp
and
dec
fs
inc
stc
std
nop
pop
idivl
push
lods
cmp
leave
in
mov
pop
cmpl
neg
ja
loop
gs
ret
scas
mov
in
mov
pop
or
aaa
fidivs
in
mov
inc
in
fisttps
pop
jecxz
pop
lods
or
push
test
shll
xchg
fisttpll
mull
cwtl
aaa
outsl
loope
mov
push
in
rol
inc
test
push
pop
adc
adc
pop
cmp
sub
lods
pop
filds
or
fs
adc
jns
cmp
inc
int
push
ret
cmp
sub
xchg
adc
jle
xlat
mov
out
ljmp
rcl
fcmovb
jae
mov
mov
xor
push
imul
out
fimull
out
sub
repnz
mov
push
inc
cmp
loope
sbb
mov
scas
cmpsb
push
jb
aam
addr16
or
or
in
jbe
sbb
aam
cmp
adc
pushf
cld
and
cmpsb
sbb
sub
adc
push
stc
icebp
push
pushf
sub
bnd
pop
and
sahf
add
push
daa
mov
int
mov
imulb
pushf
loopne
rcll
xlat
inc
push
movsb
sbb
jnp
mov
mov
cli
leave
fidivs
cmp
arpl
adc
xchg
mov
ficoms
jne
pmullw
in
pop
cmpsl
scas
and
cmp
jo
ss
stc
push
loopne
idiv
pop
add
push
ds
push
aaa
jl
outsl
mov
push
mov
inc
sbb
lods
sbb
hlt
and
pushf
cmpsl
das
push
cli
iret
cmpsl
test
test
adc
mov
outsl
cmp
test
out
or
jle
ficomps
inc
xor
mov
mov
cvtps2pd
push
in
scas
std
mov
aam
jg
cmovns
dec
out
repz
repz
dec
mov
mov
mov
and
stos
shrl
push
xor
movb
cmpsl
inc
addr16
lret
out
test
adc
jbe
jo
shr
lret
movsl
dec
mov
sbb
fcoml
mov
mov
inc
cs
adc
orb
adcl
xchg
xlat
inc
in
jno
shlb
call
insb
sub
dec
sbb
ret
daa
and
ret
cwtl
rorb
insl
push
dec
inc
jbe
pushf
push
cmp
push
loopne
mov
jg
lcall
pop
fdiv
mov
fmull
dec
push
xor
imulb
repz
icebp
imul
jl
or
data16
mov
mov
dec
popa
sbb
xchg
cli
insb
hlt
push
stos
jbe
int
in
dec
cwtl
insl
sub
xlat
fcmovne
xchg
mov
hlt
mov
mov
mov
out
pop
mov
inc
mov
fdivrs
je
loop
adc
and
pop
es
inc
scas
shll
and
xchg
dec
ljmp
leave
popl
add
jae
mov
outsl
jecxz
lods
cmpsb
int
dec
inc
inc
daa
dec
jp
fsubs
xor
call
sbb
dec
adc
aam
scas
mov
sbb
push
in
add
orl
adc
cmova
inc
movsl
insb
sbb
lock
push
add
push
pusha
xor
push
lea
xor
lods
leave
mov
testl
loop
xchg
adc
fisttpll
and
jmp
cs
mov
test
jbe
ja
push
rorb
insl
sbb
xor
mov
scas
cmc
in
aad
and
pushf
pop
imul
mov
sub
and
lods
mov
mov
cmp
pop
push
ret
stos
roll
aaa
xchg
fbstp
enter
mov
cmp
mov
and
sub
sbb
pop
lock
adc
mov
sbb
mov
jge
fidivs
lret
lods
dec
adc
adcb
jecxz
test
cmc
push
shl
js
popf
shlb
pop
mov
sti
push
mov
aas
jle
xor
xchg
icebp
rcrl
imul
fiaddl
push
rclb
pop
call
and
sti
xchg
fwait
sarb
add
ret
subb
push
subb
mov
lret
inc
movsl
ret
stos
movsl
lret
out
pop
mov
pusha
pop
or
mov
mov
pusha
fldl
rcr
clc
xor
pushf
push
adc
icebp
cmpsl
ret
add
cli
adc
pop
fsub
and
mull
jge
cmp
fidivrs
cltd
dec
shrl
sub
sbb
mov
sbb
pushf
shlb
or
imul
mov
add
xchg
mov
or
jb
and
or
aam
fcoms
add
sub
inc
sbb
push
inc
adc
stos
fcomps
xchg
loop
mov
dec
fcmove
sbb
sub
cmpsb
mov
fists
inc
call
xchg
inc
mov
mov
xchg
mov
pop
popa
lods
cmp
into
mov
pavgb
gs
cmpsl
jno
filds
leave
inc
mov
push
pop
or
pushf
sahf
xchg
xor
loope
faddl
jb
or
mov
daa
in
sbb
mov
hlt
or
dec
dec
and
dec
cmp
in
dec
xchg
inc
mov
mov
mov
jae
add
xchg
push
sub
ret
lahf
jp
push
int
outsl
inc
push
in
push
das
pop
clc
mov
adc
inc
xchg
mov
sbb
mov
inc
cmp
data16
adc
cmc
or
scas
adc
dec
out
bound
fadds
push
adc
push
sti
mov
in
aaa
fwait
dec
or
les
pop
or
ret
pop
cmp
jne
fwait
orl
jg
cli
test
mov
sbb
push
add
scas
mov
jne
int
nop
mov
loope
adc
cwtl
jmp
mov
sub
mov
xchg
mov
test
popf
stc
cmovne
jb
add
jp
xchg
adc
pop
adc
out
jmp
xor
and
js
cli
xor
insl
push
cmp
adc
mov
dec
cmc
enter
popa
data16
xlat
dec
mov
loopne
loopne
sbb
sarb
cmp
mov
test
mov
fcmovne
xor
les
bound
and
jb
lods
inc
mov
test
in
and
cltd
xchg
cmpsl
fnstenv
flds
repz
push
rcrb
fcmovnbe
cmpsb
mov
std
sbb
dec
out
mov
and
daa
arpl
lods
jb
sbb
test
pusha
imul
fbstp
mov
lods
pop
jns
push
push
xor
les
xchg
roll
jmp
jecxz
int
in
cltd
js
mov
mov
xor
popf
adc
xlat
push
sub
inc
mov
enter
add
sub
rorl
hlt
or
mov
xorl
data16
jecxz
push
sub
sbb
inc
xchg
xor
dec
inc
dec
movsb
mov
mov
push
aas
mov
or
loop
mov
jp
mov
orb
mov
movl
xchg
cmp
xchg
fbstp
repnz
mov
pop
mov
push
mov
add
mov
cmp
fwait
or
pop
inc
dec
je
sub
fwait
test
pushf
xchg
bound
cmp
cmp
testb
or
movsb
dec
mov
loopne
mov
movsb
pop
std
fildll
sbb
dec
dec
fldenv
mov
cmpsl
inc
mov
mov
stos
adc
popa
lahf
div
mov
adcb
mov
insb
scas
jg
mov
imul
cld
out
jecxz
in
pop
aam
testl
push
test
jmp
popf
jne
ret
mov
mov
pop
fwait
ret
movsl
jb
mov
jne
inc
roll
push
test
fdivrs
inc
in
inc
cwtl
movsl
faddp
fstps
pop
int3
fimuls
pop
mov
dec
xor
pop
insl
push
cmpsb
push
mov
addr16
dec
dec
imul
xchg
lods
add
outsb
je
cvtpi2ps
mov
add
sub
scas
push
out
xor
inc
cwtl
insl
and
sbb
lret
mov
ljmp
push
andl
cmpsl
ds
push
dec
xor
pop
push
pop
lcall
std
jecxz
hlt
fdivp
mov
cmp
mov
mov
cld
andl
or
jns
jecxz
sub
fidivl
ret
loopne
pop
loope
scas
xchg
ret
movsl
fwait
mov
inc
pop
aas
mov
jb
leave
or
and
lcall
cmp
rclb
sbb
dec
jo
invd
filds
sarb
insl
fcoms
movsl
fdivrs
or
mov
mov
popf
xor
in
push
cmp
sbb
rol
mov
loop
adc
push
out
lahf
dec
lods
mov
pop
xchg
cmp
sbb
dec
test
lds
stc
enter
mov
jge
pop
and
sbb
jo
mov
pop
ss
xor
out
enter
sub
mov
mov
test
dec
cli
icebp
jno
aad
imul
push
or
inc
sub
jecxz
jecxz
jns
sub
push
popl
movsl
pop
jb
lret
mov
cli
adc
sbb
xor
fdivs
lock
es
fisttpl
xchg
stc
push
imulb
fdivrl
aas
sti
shll
int
test
jle
mov
push
lcall
pop
fwait
loop
ret
mov
jg
cmpb
jle
rcrb
test
ret
jg
add
in
lahf
jbe
dec
mov
add
out
pop
pop
add
xchg
push
xchg
inc
push
pusha
daa
ret
inc
cmp
mov
out
mov
ljmp
arpl
jmp
out
pop
xchg
outsb
pop
imul
sbb
mov
inc
push
cwtl
push
and
dec
xlat
loopne
dec
ljmp
adc
xor
and
jo
xchg
fsubl
addl
enter
lahf
mov
stc
and
mov
and
lret
sbb
movsl
inc
enter
shlb
movsl
sbb
mov
inc
and
push
cmp
cltd
cld
ss
mov
mov
add
in
lea
std
in
fidivrl
cmp
fsub
call
pop
popa
int
or
sbb
adc
leave
add
pop
mov
lock
cmp
or
cmp
stc
cmp
aaa
inc
xor
dec
inc
mov
jb
jle
cmp
sub
xor
jg
fs
fisubs
dec
ret
ds
cmp
lret
xor
out
fisubl
add
sub
hlt
test
in
movsl
aam
push
cmp
je
cmovp
sub
flds
into
inc
jmp
adc
insb
xchg
push
insb
lcall
lods
rcrb
lea
fstpl
ljmp
pop
xchg
mov
in
push
fwait
adc
imul
imull
rolb
mov
jnp
out
negb
sahf
lret
leave
les
sbbl
xor
stos
cmc
cmp
jo
add
push
xchg
cmp
inc
pop
mov
fsubp
cli
pop
mov
adc
mov
shrb
inc
flds
xchg
inc
in
das
movsl
out
enter
mov
adc
js
out
dec
or
ret
inc
add
pusha
scas
sub
xchg
aas
adc
insl
pop
subl
adc
hlt
xchg
xchg
xchg
dec
lret
sti
sti
pop
or
dec
cmp
fcoml
pop
loope
out
jge
shll
out
cmp
push
cltd
jo
int3
xor
xchg
cmp
xchg
mov
gs
mov
test
sarb
xchg
adc
decl
push
int
pusha
lods
ret
mov
inc
popf
repnz
xchg
clc
mov
dec
jp
ds
sbb
bound
jnp
call
cltd
lahf
aam
sub
repnz
jo
rcrb
loopne
dec
cmp
sub
mov
cmp
jb
stc
jb
es
mov
scas
lods
out
mov
mov
pop
fisubrl
dec
sub
lcall
icebp
test
iret
imul
add
dec
popa
add
xchg
loop
push
xchg
sub
loopne
int
adc
adc
ja
lock
cmc
sarb
stc
xor
inc
rorb
scas
mov
loop
movsb
out
pop
adc
inc
out
imull
mov
ficoms
xchg
xor
push
daa
sub
js
std
cmp
out
and
xor
dec
push
sbb
and
jp
and
jecxz
lods
testb
sub
adc
scas
push
dec
call
in
or
push
jns
or
jg
jp
mov
in
sbb
popf
cmp
sub
sbb
and
xchg
imul
lds
std
sar
jle
hlt
or
enter
pop
mov
js
fidivs
pop
test
add
or
and
add
cld
mov
mov
push
mov
subb
cltd
imull
sbb
jbe
mov
mov
test
pop
jns
sahf
jbe
cmp
es
inc
mov
jge
sti
jbe
mov
pop
js
sbb
test
pop
fisubrs
mull
cmp
cltd
adc
aas
push
xchg
ljmp
loop
lahf
subb
jb
fs
inc
ds
out
xchg
cs
ja
sbb
mov
loopne
test
dec
pandn
sbbb
ficoms
and
jecxz
pop
and
in
add
jg
hlt
push
stc
sbb
or
test
dec
add
stc
in
jge
std
fwait
je
xor
lods
rorl
imul
lret
repz
mov
or
int3
iret
js
pop
inc
insl
xchg
push
repnz
gs
mov
sbb
fistl
out
and
jae
adc
inc
dec
mov
enter
cld
mov
mov
cwtl
or
ljmp
and
repz
cmp
push
fistps
out
inc
xlat
mov
enter
gs
mov
mov
mov
xchg
dec
enter
aad
pop
adc
jle
rcrb
dec
lods
xlat
call
inc
xor
cli
loopne
stc
inc
repz
push
push
js
and
scas
rolb
loopne
sub
push
int3
pop
pusha
cltd
pop
scas
fadds
ljmp
adc
xchg
sub
xor
mov
sub
fwait
mov
pop
xor
adc
mov
pushf
xchg
dec
or
jmp
mov
jecxz
cmp
or
dec
xchg
int
movsl
test
mov
mov
mov
pop
sub
jp
leave
shll
dec
jno
jg
sbb
sbb
xor
xchg
mov
scas
mov
sub
subl
les
xchg
jl
push
adc
rcll
and
mov
imul
sub
jecxz
scas
add
in
andb
pop
lods
jle
inc
lods
pusha
push
push
mov
and
insl
sti
cwtl
mov
or
pushf
int3
pop
filds
nop
xchg
cs
iret
lcall
or
xchg
mov
cwtl
or
adc
test
mov
adc
or
test
fcompl
out
scas
shrb
repnz
cmpsb
push
adc
fsts
or
mov
in
jecxz
das
xchg
mov
adc
mov
mov
cmpsl
test
aad
das
scas
sbb
das
mov
movsl
pop
hlt
inc
jmp
loopne
addr16
xor
jne
adc
mov
stc
icebp
imul
mov
lock
and
cmpl
gs
pop
lods
xor
out
stos
stc
mov
jp
xchg
pop
mov
mov
in
xlat
jl
xchg
mov
ljmp
int
mov
pop
iret
add
pop
cmp
mov
js
cmp
cwtl
mov
xor
jle
sarb
mov
pop
xchg
sbb
add
jb
fistpl
add
mov
ja
pushf
jbe
cmp
lea
pop
cmp
fidivs
inc
leave
inc
test
mov
fwait
add
xor
xchg
xchg
cmpsb
notb
mov
xchg
sbb
lret
dec
subb
cmpsb
xchg
sbb
jns
pop
shlb
mov
lea
pop
xchg
cmp
mov
push
leave
inc
jb
xor
ss
mov
fdivs
jae
idivl
ffree
sub
lock
test
lcall
jne
mov
mov
sub
mov
and
loope
aaa
aaa
leave
out
or
add
hlt
jecxz
bound
push
cltd
inc
mull
inc
dec
push
popf
dec
imul
and
or
out
arpl
sub
jne
inc
sub
cmpsl
loopne
stos
push
xorb
hlt
inc
ljmp
test
push
push
mov
aad
incb
adc
repnz
xchg
shl
xor
shlb
lahf
jb
lahf
mov
mov
pop
inc
push
sub
mov
inc
inc
and
xor
lock
push
fisubl
leave
mov
mov
jbe
sbb
cli
dec
leave
jge
outsb
stc
mov
and
mov
repnz
adc
std
mov
jp
or
leave
scas
orl
int3
mov
jae
lret
loop
cmp
or
xor
in
or
jecxz
pop
xor
xor
js
stos
test
mov
loop
ret
xchg
iret
int3
push
imulb
lcall
inc
mov
pusha
add
mov
repz
or
out
aas
jg
lds
xchg
mov
cmpsb
and
into
fwait
mov
xor
ds
lods
xchg
cld
xchg
or
ftst
clc
pop
and
sbb
arpl
xlat
dec
ret
add
icebp
fcmovnu
mov
sbb
shl
cld
popf
clc
test
lds
adc
and
fidivl
call
inc
mov
jmp
je
hlt
cmp
fstps
stc
xor
xchg
pushf
shlb
in
movsl
jb
inc
jo
jbe
mov
dec
fs
inc
mov
push
iret
push
sbb
or
movsl
lods
sbb
aam
enter
sub
lahf
or
mov
xchg
int3
lret
jmp
adc
test
mov
mov
xchg
dec
mov
mov
flds
movsl
outsl
cmp
cmp
imul
pop
jmp
scas
add
inc
cmp
push
jmp
imul
out
sahf
or
inc
jmp
jbe
gs
jns
sbb
add
scas
in
mov
addb
fldz
jmp
decl
es
sbb
pop
mov
mov
ljmp
rcll
adc
push
inc
fldenv
add
adc
ds
jb
icebp
iret
std
and
mov
cltd
fwait
add
push
jp
rolb
add
popf
jecxz
add
sub
daa
xchg
pop
lea
leave
pop
push
xchg
lea
scas
lods
int3
dec
cmp
mov
mov
sub
test
adc
add
cld
jecxz
dec
loop
inc
or
ss
outsl
push
shll
xor
push
in
pop
stos
daa
test
sbb
mov
add
adc
fnstsw
insb
hlt
sub
fsts
repz
out
pushf
xor
pop
add
adc
mov
mulb
xor
mov
xor
jg
push
shlb
gs
mov
sub
push
rcrl
and
pop
test
fistpll
mov
xchg
push
pop
loopne
jae
ret
sub
jbe
bnd
mov
xchg
aas
mov
xchg
out
je
xor
ja
sub
mov
mov
dec
xor
std
xlat
imul
fwait
push
clc
cwtl
adc
call
inc
push
out
aas
fdivrl
fcoms
dec
mov
leave
jb
mov
ret
xor
xor
xlat
ss
xchg
aaa
push
test
stos
mov
and
ficoms
adc
mov
xchg
ja
iret
xchg
xchg
mov
fdiv
repz
xchg
or
jb
subb
sahf
mov
das
xchg
xor
cmp
fnstenv
ds
and
push
or
dec
lahf
cld
inc
lods
lret
mov
addl
packsswb
sub
cltd
cltd
add
inc
js
cli
dec
shll
dec
add
mov
dec
fwait
sub
push
jle
fmull
and
mov
mov
ss
adc
cli
clc
xor
and
or
outsl
fcmovnb
loop
cmpsl
in
dec
adc
fwait
and
mov
cmp
addr16
or
inc
pop
inc
xchg
rcrb
push
aas
push
sub
lret
fmuls
int3
stos
repz
jp
rclb
xchg
out
mov
fmull
jle
arpl
aas
into
fdivrl
jae
sbb
mov
xor
fistpll
jmp
push
rcrl
add
sub
cmp
leave
stos
hlt
les
out
icebp
imul
test
jbe
mov
out
repnz
fsubrl
xchg
mov
outsl
mov
and
popf
jp
aad
insl
xchg
inc
dec
push
lret
nop
add
fwait
test
or
add
pushf
cmp
fs
mov
ret
jmp
xorb
loope
pop
and
ljmp
test
xchg
mov
shrb
in
inc
cmp
insb
mov
ret
xor
xor
jns
xchg
push
insl
jo
and
push
popa
fdivp
out
mov
mov
mov
ret
cmp
aad
lea
inc
sbb
mov
mov
cmpsl
xor
mov
lods
xchg
cmp
call
movsl
and
mov
xchg
std
fisubrl
mov
mov
mov
inc
xor
fisubrl
scas
sub
mov
pushf
fsubrl
sub
sbb
in
mov
out
daa
cmp
adcb
cmpl
xchg
mov
jno
cmp
push
cli
mov
test
inc
dec
pushf
out
add
stos
clc
stos
pop
push
and
test
cld
addb
aad
add
jmp
jg
popf
add
inc
cmp
jno
into
out
mov
mov
loopne
int
sub
es
cwtl
xchg
jmp
imul
insl
iret
and
or
add
insl
and
mov
mov
int
push
mov
dec
or
enter
scas
rcl
aas
xorb
xlat
add
fildl
cmpsl
push
cmp
cltd
sub
aaa
cmovno
and
cmc
adc
xchg
orl
xchg
fs
mov
or
les
imul
stos
rclb
push
fcmove
mov
dec
add
push
ja
call
out
mov
mov
sub
repnz
jp
adc
pop
xchg
push
cmp
push
ret
cmp
movsb
mov
inc
xchg
andl
sbbb
or
add
ljmp
fdivr
in
in
in
imul
out
xor
test
loopne
lock
and
jmp
dec
xor
mov
mov
lret
testl
stos
movsb
movsl
xchg
mov
in
repz
inc
sti
lcall
or
test
inc
push
sbb
jg
enter
cld
dec
icebp
add
repz
dec
movsl
or
cmc
pop
mov
dec
mov
cmp
and
mov
daa
xor
cwtl
daa
xor
sbb
jg
call
jae
sbb
mov
jmp
and
mov
mov
fsub
inc
push
test
out
xor
loopne
cltd
clc
push
fcmovb
xlat
rcrb
call
and
mov
jae
testb
mov
mov
stc
test
mov
pusha
jns
jae
xchg
jecxz
jge
mov
shl
push
mov
fiaddl
mov
mov
data16
scas
xor
nop
cmp
sub
mov
ss
insb
cmp
jne
scas
cmp
pop
push
mov
cmpsb
dec
call
stos
push
dec
stos
jmp
jae
scas
fiadds
and
lret
sahf
pop
mov
lock
sbb
xchg
cmp
push
aaa
fidivrs
js
push
cmp
xorb
dec
dec
jecxz
test
cld
lret
fstps
daa
dec
lock
mov
jmp
jno
scas
ret
out
into
adc
insb
xorl
icebp
js
aam
jle
mov
in
inc
bound
add
shlb
add
and
cmp
testb
sbbb
xchg
cmp
rorb
mov
push
adc
clc
icebp
bound
iret
lods
out
sbb
mov
dec
or
mov
inc
xchg
out
add
push
jg
jle
push
pop
mov
inc
dec
mov
push
outsb
stos
mov
loop
test
pop
movsl
les
outsl
xchg
cltd
and
jb
jbe
pop
frstor
sbb
fists
mov
xchg
xlat
bound
sahf
inc
subl
negb
loope
fst
xor
dec
xlat
sahf
es
mov
dec
fs
popf
lds
xchg
lret
imul
icebp
mov
xchg
mov
or
movsb
add
test
ljmp
enter
sti
xorl
fxch
leave
lock
mov
adc
sub
stos
les
dec
lock
cmp
sub
test
loope
ja
daa
jle
push
jno
sub
lock
or
jge,pt
scas
clc
std
sbb
repz
insl
ret
pop
aam
push
inc
aam
cmpsl
lahf
shll
pop
dec
insl
sbb
out
lock
in
inc
mov
pop
fildl
ss
xlat
enter
jecxz
jge
sub
sbb
or
cmp
dec
mov
out
mov
cmp
or
leave
fisubrl
mov
cmp
call
adc
xchg
xchg
jae
add
xchg
adc
nop
sub
pop
jbe
lock
repnz
mov
cmp
lods
js
mov
pop
sub
stos
cli
and
mov
mov
shr
add
in
popa
shlb
inc
xchg
jnp
inc
mov
xchg
scas
pop
sbb
loop
xlat
in
out
cltd
daa
or
stos
dec
enter
cmp
and
jg
fwait
ds
nop
jb
mov
imul
xchg
add
pop
or
jb
xchg
xchg
jae
pop
fs
xlat
int
and
xchg
cltd
inc
jl
mov
jnp
jmp
mov
adc
dec
sti
mov
pop
mov
cmp
adc
rcr
pop
mov
mov
clc
push
addr16
rorl
inc
sub
shlb
xor
mov
push
and
test
imul
mov
jmp
mov
fxam
cld
cmp
ficompl
sub
jg
pop
gs
adcb
cmp
in
stos
sbb
fnstenv
data16
add
mov
ret
jmp
in
add
cmp
aaa
shlb
shrl
adc
push
stos
mov
inc
add
push
add
les
out
daa
cwtl
dec
cmpsl
lock
out
pop
adc
out
adc
add
sahf
and
rorl
sarl
mov
mov
xchg
xchg
aad
jle
ret
aam
pusha
pop
iret
mov
cld
adc
das
jo
pop
jg
bound
dec
cmp
mov
scas
test
or
stos
pusha
xchg
in
stos
xor
cmp
mov
pop
sbb
mov
xchg
cwtl
sbb
xchg
aas
iret
mov
xor
jge
and
mov
lcall
popa
dec
gs
jmp
sub
out
loopne
js
sub
jl
in
or
or
mov
fstl
pop
cltd
dec
jecxz
andl
loopne
in
xchg
out
mov
ds
shll
inc
imull
or
cs
vrsqrtss
out
cmp
inc
mov
test
in
push
imul
dec
cltd
nop
cmpsb
mov
mov
int
add
loopne
lret
stc
cwtl
jle
sub
rcrb
fwait
orb
cltd
mov
aad
rcrb
out
imul
cmp
jp
mov
pop
and
sbb
xor
and
xchg
push
roll
ret
insb
test
push
sub
cmpsl
inc
push
stc
sti
xlat
movsb
ficoml
fdivr
mov
mov
xlat
je
rclb
out
out
ret
jno
or
or
cwtl
mov
in
add
xchg
loope
push
pop
mov
int
out
jl
xor
pop
std
mov
xor
js
sub
cmpsb
jle
fs
fnstenv
xorb
cs
mov
fisttpll
dec
cld
push
xor
mov
and
das
lret
test
roll
mov
xchg
sti
inc
cli
mov
inc
clc
sub
rolb
dec
mov
fsubrs
jno
xchg
jb
push
xor
loopne
mov
inc
mov
js
in
call
push
mov
jl
cmp
push
mov
insb
bnd
inc
les
fdivl
mov
sub
and
movd
jmp
jns
jecxz
add
lahf
mov
insl
dec
into
aad
les
pushf
enter
in
or
mov
mov
push
cli
fs
fnstenv
fidivrl
jecxz
test
inc
push
mov
lods
mov
and
stos
xchg
andb
push
push
mov
jno
push
test
bound
ja
enter
add
imul
and
aaa
sub
and
pop
rol
lods
in
xor
cmp
jne
bound
sti
mov
cmc
fwait
xchg
subl
outsb
fnstenv
and
cmp
xchg
clc
jg
mov
cmp
clc
inc
mov
cmp
pop
inc
ret
mov
stos
mov
mov
and
gs
mov
lds
sbb
cltd
add
dec
imul
lcall
gs
jge
mov
into
dec
test
rcrb
sub
int
xchg
sbb
xor
add
nop
out
jp
pop
cmp
mov
sub
xlat
rolb
mov
sarb
sub
arpl
stos
push
btr
cltd
inc
mov
movsl
dec
or
mulb
shll
dec
scas
pusha
rcll
mov
mov
jo
pop
orb
loopne
nop
jnp
inc
je
pop
test
test
out
movsb
mov
or
mov
xor
stos
bound
std
and
inc
subl
jo
bound
movsb
lods
leave
aas
dec
pop
in
or
mov
mov
rol
pop
sbb
lcall
testl
and
xchg
insl
push
xchg
fmul
in
mov
xor
dec
mov
mov
cmp
sbb
stc
cs
jecxz
fbld
mov
int3
fsubrl
in
xor
fisubl
xlat
cmp
dec
pop
mov
add
xchg
jne
and
xor
or
pop
lcall
mov
loope
push
inc
add
in
xchg
jns
push
ret
xor
into
mov
push
and
in
insb
enter
pushf
mov
sbb
sub
lahf
popa
xor
cmpsl
cmc
outsl
dec
sbb
mov
dec
xor
mull
dec
push
sbb
movb
pop
test
inc
mov
adcb
cmp
mov
mov
mov
lods
or
int3
jge
rcrl
out
in
mov
cmp
inc
dec
stos
pop
test
int3
movsb
sbb
mov
jns
incl
mov
add
ficompl
roll
pop
dec
adc
mov
loop
aas
popa
iret
loope
ja
pop
aam
pop
mov
xchg
mov
push
jo
pop
mov
xor
cmpb
mov
das
adc
push
mov
pop
movsl
out
or
pop
inc
xor
xor
add
add
mov
lcall
or
imulb
sbb
mov
jno
xchg
cmpsl
add
and
outsb
insl
out
addr16
or
test
pop
jecxz
xor
mov
jnp
mov
test
mov
xchg
mov
sbb
cmp
jg
pop
cmp
into
and
push
icebp
pop
in
sub
imul
fbld
cmp
popf
or
shll
mov
outsl
sub
add
xchg
jge
sub
pop
mov
in
xor
ret
mov
pop
test
jecxz
pop
out
sbb
aas
push
jp
add
jle
jne
pop
cld
shl
add
mov
lods
adc
inc
test
or
data16
xor
mov
push
and
xor
test
push
insl
jle
xchg
fsubr
scas
sbb
push
mov
xor
jo
xchg
mov
fidivrs
sahf
dec
dec
xor
pop
adc
dec
jae
jmp
rorb
enter
jp
jne
sub
in
sub
stos
mov
test
sbb
push
jp
in
push
push
xchg
push
test
add
inc
fwait
or
scas
push
lea
pushf
push
pop
fldt
xor
lods
mov
sub
movsb
scas
into
fcoml
shlb
lahf
pop
xor
push
fcoms
outsl
mov
ror
jmp
adc
int
icebp
iret
mov
pop
add
sbb
fcoml
xor
imul
mov
mov
xor
sub
repnz
push
out
dec
aas
stc
ja
jae
sti
jg
test
rorl
dec
addr16
leave
push
outsb
fs
pop
iret
dec
inc
imul
push
add
daa
sti
cltd
add
addr16
pop
test
push
mov
pop
cli
arpl
sub
jno
lea
in
jbe
fwait
or
imul
and
in
sub
iret
push
mov
addr16
scas
std
cmc
push
enter
add
inc
xchg
xchg
sbb
inc
movb
sub
fs
xlat
push
cmp
pushl
stos
pop
sbb
pop
ret
sub
inc
mov
xorl
mov
sbb
lods
movsl
lret
cmp
aad
nop
and
and
gs
fcmovb
jle
dec
adc
jae
mov
xlat
lcall
jnp
cld
test
or
cmp
push
stos
and
xchg
jmp
mov
mov
mov
sbb
jnp
mov
mov
mov
gs
jmp
pop
lahf
lea
xchg
jmp
add
xchg
cmp
lahf
outsl
or
sbb
dec
and
aad
pop
push
jo
loopne
mov
push
out
bound
outsb
xchg
jno
in
imul
movsl
or
cmovp
hlt
sub
push
xchg
pop
mov
pop
mov
lods
shl
gs
sbbb
in
mov
repnz
sub
cltd
fmull
jge
addr16
stc
sub
ja
add
or
xor
sti
add
stc
add
adc
loope
js
and
and
xchg
test
leave
and
pusha
mov
mov
pop
inc
cmp
popf
scas
aad
jle
pop
ja
xchg
add
jecxz
dec
test
xlat
xchg
dec
lcall
enter
dec
iret
dec
loop
push
pop
xchg
mov
sub
nop
mov
jmp
add
jno
xor
or
mov
mov
int3
sub
movaps
xor
jg
cmp
call
dec
insl
lock
inc
mov
pop
dec
out
rclb
test
add
sub
sbb
andb
adc
sbb
push
add
lock
fwait
jb
aas
rolb
clc
test
stc
add
mov
inc
lds
gs
js
mov
je
mov
xchg
popa
push
sarl
mov
int3
dec
int3
dec
pop
rcrl
movb
icebp
lcall
and
cmp
mov
lret
ret
jp
xchg
cmp
mov
mov
adc
adc
pop
shrb
sub
add
out
mov
rol
inc
cld
jnp,pt
sti
adc
jge
jg
xchg
arpl
imul
lahf
adc
std
cmovo
cmpb
ds
dec
cmp
pusha
shl
imul
imul
bound
cmp
pop
xor
js
cmp
arpl
das
push
inc
mov
mov
mov
lods
shlb
pusha
jbe
cmp
daa
aam
and
jecxz
ror
add
xchg
jmp
jae
bound
mov
ds
dec
rclb
gs
xchg
xor
divl
inc
dec
xchg
xor
stos
dec
dec
pop
mov
xchg
out
jge
arpl
pop
xor
and
dec
and
xor
jmp
xchg
fldt
add
adc
dec
jb
in
xchg
or
movsb
decb
mov
and
cld
xchg
pop
divl
fistpl
shl
mov
in
jb
mov
fwait
cmp
jo
daa
jecxz
lcall
ret
add
mov
mov
and
cs
mov
movsl
xchg
jnp
ljmp
mov
int
daa
cmpsl
aaa
jb
mov
icebp
dec
mov
loopne
int
lretw
jo
or
in
add
cmc
add
hlt
mov
add
push
adc
addr16
jne
lea
sbb
mov
sbb
push
fstl
gs
add
lret
sbb
mov
in
adc
xchg
cmpsl
std
push
repnz
in
sbb
sbb
add
cs
popa
lcall
aam
jnp
sub
or
or
sub
je
mov
sub
aad
fstpl
scas
push
imul
outsb
jb
lret
jp
imul
stos
leave
fistpll
clc
sbb
sahf
add
dec
das
ret
adc
in
call
and
xorb
push
inc
jno
and
xchg
or
std
pop
stos
test
rcl
pushf
jns
cmp
xchg
sub
push
push
mov
aad
sub
insl
stos
dec
mov
fcoms
xchg
pop
inc
repz
iret
xchg
sub
sbb
mov
mov
fbld
fldcw
aas
pusha
mov
cld
sub
push
mov
stos
sub
mov
enter
sub
xor
pushl
add
sbbb
out
jns
nop
scas
loop
mov
mov
dec
stc
mov
mov
or
jnp
je
outsl
or
add
out
xor
fisttpll
adcb
dec
or
pop
ror
xchg
xor
ffree
aad
enter
jnp
jecxz
sbb
dec
adc
cmp
dec
in
adc
jo
dec
cmp
mov
scas
sub
pop
movsb
pop
push
arpl
ret
mov
jecxz
xchg
movsl
sub
mov
inc
or
loope
into
sbb
popa
jnp
mov
and
dec
sub
movb
imul
lods
xchg
lock
pop
movsl
inc
les
add
jl
cmp
mov
jecxz
sarl
pushl
jne
mov
gs
and
ss
xchg
sub
ss
pop
pushf
cmp
aad
xchg
inc
sub
adc
les
dec
sbb
pop
xchg
call
xlat
test
push
ljmp
iret
gs
addr16
cmp
cmp
in
scas
lock
dec
in
and
mov
daa
jb
loopne
mov
ja
sub
sbb
lret
adc
adc
js
pushf
jp
push
lds
jg
notl
das
rol
mov
mov
xor
or
add
jg
cmp
sarl
sbb
lret
xchg
push
sub
sarb
dec
pop
adc
les
dec
dec
push
and
in
jno
lret
popa
xor
movsb
push
cmpsb
xchg
ja
add
xor
and
cwtl
ds
and
lds
dec
bound
pop
enter
outsl
sbb
or
mov
mov
inc
mov
mov
pushf
mov
fwait
cld
xor
and
clc
jbe
cmc
pop
mov
test
push
sub
xchg
test
out
add
add
mov
in
xor
data16
in
pop
pop
cmp
clc
xor
mov
add
mov
mov
in
cltd
jae
cmp
aaa
jp
ds
cwtl
adc
je
lea
jno
cltd
jno
xchg
cmp
jns
dec
sub
pop
bound
sbb
ret
mov
mov
les
push
ljmp
push
ljmp
stc
aaa
sar
mov
ret
dec
sub
nop
dec
aas
int
push
rolb
push
loop
orl
and
push
ja
loopne
mov
mov
ss
insb
xchg
jmp
and
fwait
mov
insl
les
push
cmp
ret
fdivp
pop
jnp
adc
mov
cmp
testb
pop
jmp
mov
xchg
pop
es
fmulp
sbb
cs
shll
insl
mov
inc
out
clc
add
mov
sbb
cmp
pushf
xor
add
add
push
call
xor
insl
movsl
pop
lods
sbb
stos
push
xor
pop
dec
loope
adc
mov
in
or
inc
dec
xchg
xor
push
adc
lcall
cmp
adc
or
lcall
mov
mov
clc
sbb
testl
je
repnz
lahf
fistpl
sbb
sub
jl
add
dec
or
scas
xor
add
int
xor
ds
push
xor
mov
sbb
aam
scas
pop
mov
out
cmpsl
pop
adc
jno
mov
sub
sub
or
pop
inc
je
push
lock
jg
xchg
gs
dec
jo
out
fnstcw
ja
cmp
lahf
jle
hlt
or
push
adc
jo
lret
mov
stos
flds
je
ret
sub
popf
dec
mull
cmp
cmp
ss
popa
sbb
ljmp
leave
clc
ficoml
mov
arpl
cmp
movsb
sahf
popa
mov
or
cwtl
add
add
sarl
pop
ffreep
add
in
pop
das
lds
outsl
cmpl
pop
push
sbb
add
test
mov
adc
fwait
jo
dec
into
inc
jae
sub
sti
int
or
sbb
sbb
jae
pop
lcall
push
lock
jmp
mov
adc
int3
pop
and
inc
mov
fbld
sbb
mov
fsub
test
mov
movsl
imul
test
lods
dec
sub
pop
adc
mov
cmpsb
imul
jno
inc
add
push
loopne
addr16
and
inc
mov
out
test
sbb
loopne
cmp
push
bound
xor
cli
mov
pop
enter
stc
das
dec
imul
adc
push
mov
cmc
paddsw
push
loopne
mov
inc
adc
clc
pop
enter
and
mov
fsub
shlb
sbb
mov
lock
sarl
jmp
rcl
std
rolb
imul
jbe
insb
je
mov
negl
pop
mov
and
or
lret
iret
cmp
lea
cmp
paddq
in
in
inc
mov
mulb
into
or
add
dec
xchg
jbe
test
add
mov
fidivrs
and
lret
cmc
pop
aam
scas
jl
pop
push
lea
jmp
jo
pop
or
loopne
sbbb
sbb
mov
iret
sar
jb
cs
ljmp
lahf
pusha
inc
cltd
pop
popa
lods
or
mov
inc
sarb
xchg
inc
xchg
dec
xor
aas
inc
mov
insl
clc
pop
pushf
ret
jb
pushf
jns
add
push
and
sti
adc
inc
cmpsb
mov
in
lds
sbb
mov
arpl
inc
cmpsb
adc
cmpsb
dec
add
inc
ss
out
je
fnstenv
scas
mov
inc
lods
stos
pop
push
daa
stos
dec
daa
cmpsl
and
loope
sbb
xchg
pushf
loopne
into
mov
cmp
mov
repnz
int
add
imul
jae
mov
ror
fiaddl
pop
popf
cmp
iret
imul
mov
pop
fwait
pop
jae
push
xor
or
xchg
mov
jno
push
xor
pop
popf
mov
pop
insb
lods
xor
sub
pop
jno
mov
jp
or
mov
xor
mov
push
es
sbb
sbb
inc
pop
dec
ret
sub
push
sub
enter
adc
das
fdiv
push
mov
cmp
sub
daa
aaa
sahf
in
movsl
cli
ret
mov
and
test
and
mov
loopne
cmc
push
push
xchg
fucom
loope
inc
popf
sarb
cli
out
loop
insl
lods
outsb
ret
aad
cmp
push
mov
das
adc
xchg
adc
leave
ljmp
mov
pop
movsb
mov
mov
add
ret
mov
sbb
shlb
xor
sub
dec
sub
movsb
push
cmp
xor
notb
lcall
mov
lods
stc
ds
xchg
xlat
pop
call
andb
or
dec
sbb
cmp
test
stos
mov
mov
adc
insb
xchg
sub
cmpsl
pop
push
push
test
inc
scas
incb
inc
jmp
outsb
test
cmpsl
xchg
pop
lock
inc
iret
lods
jl
ret
leave
daa
lahf
js
aaa
scas
or
and
dec
or
xchg
lds
scas
xor
push
push
jb
les
data16
test
incb
jecxz
test
repnz
dec
pop
aad
and
xor
xchg
fcoml
mov
addr16
in
jmp
mov
and
xlat
lea
sbb
inc
iret
mov
fsubrl
add
mov
jge
je
cmp
leave
or
pop
out
add
jb
jbe
adc
aaa
or
mov
mov
or
and
pop
sbb
mov
int3
cwtl
pop
repnz
outsl
cld
shl
jne
push
incl
cli
mov
pusha
push
xchg
loope
mov
pop
stos
jg
or
push
mov
in
adc
lret
cmp
movsb
cmp
clc
sahf
inc
pop
jl
xor
movsb
std
mov
mov
xchg
daa
adc
jmp
jne
cs
and
push
dec
fbstp
mov
js
jae
mov
fcomip
inc
mov
loopne
push
jns
jbe
shlb
mov
test
pop
test
ds
xor
pop
in
sub
out
jmp
or
in
dec
int3
dec
dec
push
cmp
adc
shrl
dec
gs
idivb
ret
mov
out
jbe
xor
testl
push
out
arpl
int3
xchg
jmp
or
sarb
dec
lcall
xorb
mov
fistps
dec
xor
cmpsl
imul
cltd
fdivr
idivb
jp
mov
in
and
inc
or
xor
inc
xchg
andb
dec
or
jg
in
aaa
and
fsubs
sbb
mov
pop
aam
iret
clc
shl
cmp
mov
adc
mov
lret
and
das
jb
jne
rcll
add
dec
pop
and
mov
adc
lret
insl
dec
js
xor
aas
pushf
je
jns
xor
jne
nop
lea
push
sub
fwait
lds
loope
adc
loopne
mov
test
sbb
pop
inc
xlat
repnz
inc
les
shrl
lret
lods
nop
sahf
xor
adc
int3
nop
scas
push
xchg
push
loope
pop
push
mov
add
arpl
sub
cvtdq2ps
push
leave
daa
mov
adc
popf
mov
and
xor
out
imul
cltd
pop
add
or
mov
sub
fdivl
clc
push
or
mov
jecxz
imul
jo
xchg
sub
xchg
cwtl
push
test
cmp
dec
xchg
mov
jl
adc
push
or
or
xchg
outsl
movsb
push
or
pop
inc
add
insl
dec
dec
mov
mov
std
and
test
fmul
pop
mov
test
lock
sahf
sub
lods
mov
repz
mov
pop
jnp
xchg
int3
adc
popf
insl
xchg
cmc
mov
sub
mov
call
stos
rolb
cmp
shll
aas
icebp
or
inc
aad
mov
in
add
jne
shrl
xchg
xlat
mov
adc
push
pusha
ss
mov
sti
scas
push
lds
enter
xchg
fisttpl
divps
aam
cld
mov
rcrl
int3
ljmp
sbb
fldcw
loope
fcom
pop
repz
add
xchg
hlt
ds
js
mov
dec
out
js
add
aam
inc
cld
sub
sarb
test
cmc
iret
dec
push
push
cwtl
mov
cmp
stos
outsb
sbb
jno
cmp
and
pop
jno
mov
cwtl
fists
xor
incl
repz
mov
cmpsl
es
mov
xchg
rcr
push
cwtl
loopne
or
aaa
mov
js
xor
lahf
xor
push
push
mov
cmc
inc
out
mov
and
mov
cmpsb
das
jns
sub
dec
xchg
call
and
bound
inc
das
out
xor
jae
xor
lret
fidivl
stos
gs
or
xor
leave
mov
mov
sub
or
out
jle
xchg
xor
or
or
push
inc
add
add
fiadds
rorb
inc
xor
test
sbb
push
arpl
or
xor
cmpb
xchg
jae
jl
dec
bound
test
add
mov
pop
fidivl
cwtl
dec
jns
jl
pushl
repnz
push
mov
mov
sti
bound
sahf
inc
test
jmp
jnp
rol
xchg
pop
mov
cmp
and
mov
vpslld
pop
sub
jmp
and
dec
mov
stos
lds
mov
loopne
xor
sbb
out
push
fldcw
into
movsl
movsb
and
mov
mov
fistpl
loopne
cld
inc
rorl
xor
test
daa
call
and
test
mov
add
pusha
pop
and
or
or
enter
add
pop
inc
in
mov
push
xor
hlt
pop
fdiv
test
push
fnstenv
push
iret
jnp
out
adc
mov
stos
outsl
or
jg
iret
push
dec
sarb
jecxz
push
inc
mov
aam
xchg
in
mov
or
xchg
aam
pop
or
sbb
mov
sub
loope
sbb
add
push
lds
sti
pop
sbb
mov
mov
pop
notl
dec
or
mov
data16
pop
stc
sahf
lret
or
inc
dec
adc
and
pop
outsb
or
and
adc
int3
pop
ret
xor
mov
jge
testl
dec
roll
xchg
xchg
aam
test
es
pop
push
inc
and
mov
jmp
iret
aad
adc
sbb
ficomps
bound
daa
sti
movsl
test
add
xchg
pop
mov
test
aad
jnp
ret
test
xlat
mov
dec
add
stos
inc
lods
dec
arpl
imul
popa
dec
cmp
es
int3
pop
push
imul
mov
stc
dec
sti
xor
mov
sub
cmpsl
sub
inc
inc
and
jg,pn
lods
int3
nop
popl
and
or
rcrb
outsl
das
jo
icebp
sarb
mov
xchg
and
sbb
sbb
in
or
jnp
std
lds
scas
outsl
jp
out
cli
out
pop
cli
mov
int
cmpsb
loope
aaa
xchg
addl
push
mov
push
fsub
xlat
out
sbb
xchg
mov
loopne
in
sbb
out
mov
jg
stos
cmp
mov
or
pop
pop
sub
ret
lahf
call
testb
fcomps
push
sub
in
inc
inc
inc
mov
adc
xchg
inc
add
stc
js
mov
sub
test
es
push
mov
xor
test
pop
sbb
into
jno
test
mov
aas
push
cli
fdivrs
add
mov
sub
adc
push
repnz
dec
xchg
and
mov
mov
xlat
lds
dec
jp
xchg
jle
lret
test
cmp
sbb
test
lret
pop
loop
add
bound
in
mov
outsl
jne
int3
ja
ja
sahf
mov
xlat
frstor
jnp
adc
push
repnz
pusha
sub
clc
stc
sub
call
xchg
fmulp
dec
lea
imul
jnp
push
dec
push
movsl
imul
dec
addr16
jno
adc
push
mov
xlat
pop
pushf
popf
fcom
and
jge
jl
ret
pop
addl
in
and
jne
movsl
jge
or
or
and
ret
cmp
mov
inc
test
xor
aad
jl
int
lret
jns
test
sbbb
dec
mov
ret
imul
ret
jp
and
xchg
aas
dec
movsb
add
lea
popa
xlat
mov
jnp
xchg
jg
sub
push
int
mov
lods
mov
xchg
sbb
dec
addr16
out
gs
adc
addr16
out
or
cmpsb
mov
sbb
push
loop
cmp
orb
jnp
loopne
adc
dec
fs
leave
fwait
mov
sbb
repnz
push
loop
mov
inc
les
out
rcrl
loopne
push
sbb
imul
jb
std
aam
ds
mov
outsl
ror
and
aad
jnp
and
lcall
sbb
adc
js
mov
push
dec
mov
add
jecxz
popf
and
fwait
adc
or
add
mov
fs
fbld
sbb
stc
mov
sub
xchg
adc
js
sbb
inc
xor
pop
scas
sub
mov
arpl
enter
sarb
cmp
mov
gs
xchg
dec
jl
add
jnp
jmp
jge
mov
xor
and
jb
xchg
push
popl
leave
int
inc
in
xor
mov
mov
and
daa
xor
xchg
inc
push
and
add
lahf
outsl
scas
lahf
in
xor
fsub
inc
mov
xchg
popa
lret
and
in
jae
aad
lock
lret
ds
out
mov
loope
push
sbb
mov
and
mov
aaa
out
call
xchg
sti
mov
in
mov
mov
rcr
mov
cs
jo
fdivrl
mov
lahf
movsl
push
xchg
and
or
xchg
push
jle
sub
sbb
pop
daa
mov
adcb
fcoml
sti
out
inc
aam
mov
pop
sbb
cmp
flds
pop
and
jmp
repz
lock
dec
sbb
mov
xchg
out
jbe
lret
arpl
ss
jo
push
sbb
push
daa
mov
mov
xchg
jecxz
add
rorb
in
add
out
or
nop
sbb
cmpsb
mov
jg
push
jp
lock
movl
push
or
jmp
xchg
mov
inc
vmovaps
aas
pop
dec
mov
fdivrl
call
xor
rsqrtps
mov
mov
mov
sbb
pop
mov
lods
repz
enter
or
add
mov
aam
dec
popa
jbe
dec
notl
in
cltd
and
dec
adc
mov
gs
test
in
in
xchg
push
pop
aam
loope
or
mov
mov
cmpsb
jmp
pop
shlb
int3
or
mov
fs
mov
xor
out
pusha
nop
and
jge
xlat
dec
sub
sbb
xchg
xlat
xchg
daa
fnstsw
lcall
push
sbb
adc
insb
movsb
pop
xchg
inc
push
cmc
mov
pop
icebp
sub
aad
mov
push
in
adc
outsl
sbb
stc
incb
jp
dec
adc
cmp
cmpsl
nop
mov
stos
sahf
rolb
inc
js,pn
mov
aam
push
mov
sbb
push
inc
out
cmpsb
xchg
push
rol
xchg
pop
popa
ror
ret
mov
mov
or
clc
lea
pop
or
movsl
bound
sbb
add
test
sub
lds
xor
dec
push
push
sbb
pop
popa
cmpl
dec
xchg
test
into
inc
psubsw
jne
mov
outsb
out
adc
das
fldenv
inc
adc
scas
fadd
pop
js
nop
ljmp
insl
fimuls
mov
dec
jo
mov
jle
xor
mov
push
ret
or
call
sti
xchg
cmp
xor
popa
mov
push
and
mov
lods
xor
je
je
shrl
repz
push
mov
fsubp
inc
mov
sub
add
jle
mov
push
cmpl
cld
push
push
scas
mov
fisubl
push
mov
sbb
and
jmp
data16
pop
jbe
lods
mov
cmp
stos
mov
loope
jl
push
je
lods
push
and
fwait
adc
push
mov
jne
es
jle
inc
adc
mov
adc
rol
mov
add
dec
pop
shrb
push
rcll
lods
mov
cltd
addl
and
sbb
fists
in
push
std
lock
inc
sbb
pop
xchg
push
shl
jg
jae
cmpsb
sahf
aam
jno
push
jbe
inc
sub
sub
movsl
mov
xor
aam
jne
outsb
rol
hlt
das
push
sbb
pusha
sbb
int
mov
add
in
scas
push
aaa
or
sbb
data16
xchg
adc
adc
mov
inc
inc
xchg
mov
xlat
lods
mov
xor
test
lret
sub
and
pop
icebp
and
shrb
push
push
iret
or
mov
iret
lcall
daa
mov
jg
and
push
pop
pop
icebp
dec
iret
es
sub
mov
sbb
js
jmpw
inc
or
repnz
sub
dec
ret
in
sub
js
sbb
stc
cmp
mov
mov
bound
insb
mov
cmpsl
mov
mov
sbb
sub
fwait
scas
subl
cmp
fnstsw
push
push
inc
cmc
sub
mov
sbb
lcall
sbb
aas
or
fnsave
push
push
repz
mov
mov
inc
jge
std
rcrl
push
push
repz
jp
aam
or
arpl
lds
in
mov
sbb
dec
xor
mov
adcl
addr16
cmp
jg
fisttpl
fisubrs
loope
loopne
pop
sbb
gs
nop
ja
mov
pop
sub
xor
lds
decl
push
xchg
pusha
xchg
fisubl
out
adc
outsb
inc
arpl
mov
add
or
clc
sahf
test
sub
stos
dec
push
mov
clc
loope
daa
cmpsb
jge
ds
xor
loopne
and
and
inc
inc
or
cwtl
test
loop
adc
mov
xlat
ljmp
add
cmp
jle
push
mov
test
jne
pop
mov
jmp
add
es
adcb
loopne
xor
shrb
popl
aam
ss
mov
add
jl
inc
push
jge
mov
fisubl
leave
jl
mov
sub
push
into
and
andl
push
cmpsl
or
cld
sarb
inc
xchg
jp
push
leave
adc
mov
fldenv
add
mov
loopne
mov
inc
popf
repnz
sbbl
andl
mov
sub
adc
xchg
lcall
lret
dec
mov
xor
cmp
sbb
jge
mov
xchg
pop
adc
sbb
aam
mov
push
stos
or
cli
xchg
mov
mov
arpl
cmpsl
push
inc
je
and
pusha
cmp
pop
cmpsb
stos
fstl
dec
out
out
jo
sbb
mov
inc
out
mov
dec
jno
les
sub
repz
jno
ss
mov
enter
or
xor
sub
loopne
lods
mov
lret
cs
dec
sysexit
cmp
notb
mov
cli
fbstp
enter
dec
jno
int
mov
lods
adc
jnp
es
das
push
fiadds
sbb
xchg
decl
outsb
imulb
dec
mov
insl
cmp
mov
mov
jae
rorl
cmp
je
fstpl
lahf
and
rorl
aad
cmp
out
mov
shl
test
ror
in
mov
sub
adc
test
lcall
xor
xor
insb
repz
xchg
push
sub
pop
xchg
cmp
fisubrs
mov
mov
xchg
int
mov
xchg
cld
jmp
stos
cmp
in
xlat
mov
mov
les
mov
inc
outsl
leave
aam
lds
int
adc
sarl
sbb
mov
pop
add
rcr
popa
xchg
scas
sbb
push
dec
xchg
push
cld
add
xchg
inc
es
xorl
subl
add
xchg
cmp
push
ja
mov
stos
add
sbbb
inc
or
dec
jbe
mov
adc
insl
fistl
jp
cmpsl
bound
movsl
ja
xor
das
andb
jl
int
popa
inc
cmp
lahf
push
add
iret
jb
cld
add
fstps
in
popa
pop
mov
add
stos
push
pop
lods
cmpsl
add
sub
dec
and
push
inc
mov
mov
inc
mov
mov
sub
push
test
icebp
cs
dec
push
fnstsw
add
inc
or
dec
fidivrs
jns
add
cld
sub
inc
je
popa
push
pop
push
loope
pop
mov
mov
dec
jne
mov
cmp
pop
xchg
cs
mov
ret
mov
and
ret
or
push
sbb
je
iret
test
ja
pop
outsl
jne
bound
add
dec
mov
mov
xchg
in
inc
adc
shll
cld
mov
adc
sbb
loop
out
jmp
xchg
lea
xor
sub
fiadds
repz
add
movsb
dec
sub
fdivr
lods
xchg
ret
fs
sub
aas
test
cmpsl
aam
inc
pop
pop
jecxz
jp
shrb
and
aaa
push
mov
inc
jno
cmp
ret
cmpsl
bnd
cmc
jge
pop
mov
dec
xor
loope
dec
xor
jle
lds
cwtl
sub
cs
cltd
sub
shrl
xchg
cli
mov
push
cli
fstps
aas
mov
mov
fimuls
sahf
cs
pop
movsb
inc
or
mov
popa
enter
sbb
lods
cmc
repz
out
jecxz
xchg
xor
ret
aam
xor
mov
cltd
cmpb
movsb
mov
ficoml
pushf
aaa
mov
cmp
popa
adc
in
ljmp
mov
insl
daa
adc
sbb
adc
into
sbb
push
cmpl
cmpsb
dec
stos
jns
mov
jb
insb
pcmpeqb
cmc
mov
add
int
inc
pop
push
ds
insb
cmp
punpcklwd
fsubp
loope
adc
inc
test
shll
xor
jle
xchg
add
mov
xlat
sahf
mov
jecxz
dec
mov
cmp
xor
xchg
push
xor
fcmovne
pusha
add
shrl
adc
sub
cli
jb
xor
add
and
stc
adc
xchg
inc
aam
js
testl
push
test
lea
xchg
sub
mov
ficompl
inc
popf
push
daa
scas
mov
xchg
shr
xchg
sub
cmc
ss
cmp
xor
aam
aaa
adc
ret
test
mov
push
mov
adc
add
int
frstpm(287
std
mov
inc
jp
in
ret
rol
out
insb
jl
xor
inc
inc
xchg
inc
dec
popa
inc
jne
or
jne
or
std
aas
inc
jbe
sbb
imulb
or
repz
cld
lods
lock
mov
out
sub
mov
push
pop
out
enter
out
dec
cld
push
pusha
sub
mov
xor
mov
and
ret
push
dec
in
out
andl
je
lcall
mov
lods
inc
push
fisttpl
cmpsb
fxch
dec
imul
lcall
xor
dec
loopne
xchg
aas
mov
es
sarl
icebp
std
mov
lcall
pop
insb
bound
loop
bound
cmc
cmp
inc
inc
lods
test
sbb
xchg
fistpll
addr16
aad
test
ret
mov
arpl
add
adcl
cmpsb
cli
ret
sahf
and
adc
jae
fisttps
push
idivl
out
mov
and
xor
clc
or
adc
jno
pop
push
ret
outsb
int
ja
sahf
bound
lds
cmc
lea
sbb
rol
insb
add
fwait
and
loopne
pop
mov
pushf
dec
add
adc
in
jb
in
adc
in
inc
test
arpl
insl
cmp
push
fcoml
aam
sbb
ds
mov
js
push
adc
mov
push
leave
data16
dec
lods
mov
data16
inc
cwtl
int
mov
es
ret
popf
or
mov
jg
pop
xlat
popf
mov
xchg
cmp
ljmp
cmpb
enter
adc
mov
jmp
xor
xchg
cltd
fsubrs
pop
pop
aam
int
pushf
int3
jo
push
hlt
inc
mov
add
mov
mov
test
scas
xor
cmp
push
push
mov
adc
out
into
scas
cli
mov
lahf
loopne
or
xor
adc
ret
dec
mov
mov
sub
and
dec
pop
inc
je
cmpsw
sbb
ljmp
dec
aam
jecxz
ret
mov
std
and
mov
xor
ljmp
pop
aam
ret
inc
push
sbb
ljmp
shll
cmp
iret
or
sub
cwtl
cmp
test
mov
out
mov
mov
push
loopne
pop
sbb
test
push
sub
xor
jge
push
xchg
mov
sub
xor
leave
mov
cld
sub
mov
jle
pop
push
test
or
jns
lock
mov
sbb
mov
push
or
push
jb
adc
push
repz
mov
sahf
dec
cmp
mov
push
pop
cmc
sbb
aaa
or
faddl
jne,pt
out
jle
cmpsl
mov
inc
add
mov
add
sbb
clc
add
xchg
or
inc
sbb
inc
pop
dec
call
xor
cmpsl
test
icebp
iret
loope
cmp
into
xorl
getsec
icebp
arpl
stos
xchg
fucomp
call
push
fdivs
insb
insl
int
faddl
xor
stos
test
daa
mov
xchg
in
jnp
cmpsb
push
mov
jl
insb
das
push
jne
push
je
repnz
jne
out
push
fbstp
ficoms
fidivrs
push
push
inc
insl
jmp
loope
lret
xchg
in
mov
ret
add
adc
sahf
and
outsl
cmp
shll
xlat
mov
sbb
mov
jmp
cmp
in
sbb
jle
lret
push
push
pop
dec
xor
popa
mov
xchg
shll
push
jecxz
jl
mov
mov
inc
sub
fwait
or
notl
mov
mov
insb
ss
mov
fdivrs
or
stos
or
dec
sbb
and
mov
in
cmp
iret
mov
ljmp
rorl
jbe
outsb
je
cli
scas
test
imulb
add
xor
aaa
ret
and
shlb
adc
mov
in
aas
test
mov
inc
and
in
inc
sub
inc
cmpsb
mov
dec
inc
pop
jmp
mov
out
jns
or
lods
std
int
inc
cli
or
dec
icebp
xor
pop
xchg
pop
outsl
mov
flds
xchg
adc
out
or
sbb
inc
loopne
jno
push
rolb
xor
testb
popa
dec
fiaddl
pusha
cwtl
jg
loop
add
pop
sub
incb
mov
add
push
daa
loop
pop
mov
shlb
jbe
dec
or
sub
xchg
xor
pop
loop
xor
aaa
imul
adc
scas
je
cmp
fsubrs
bound
test
xchg
pusha
shr
test
xchg
mov
mov
adcb
add
push
repz
nop
in
xchg
mov
adc
sub
cld
mov
fstpl
mov
leave
je
sub
inc
dec
ljmp
and
in
js
out
shl
sbbl
out
stc
mov
cmp
jl
arpl
sub
mov
outsl
sub
es
sub
lret
pop
jle
lods
insl
mov
jae
sub
lret
mov
ror
mov
ficomps
jmp
sub
lea
and
mov
lcall
inc
das
cmpsb
inc
fcoms
mov
aaa
add
push
mov
jg
cmp
jno
add
lock
inc
adc
mov
adc
push
jg
in
jle
sbb
out
or
adc
sub
mov
shll
sub
and
loope
in
pop
cld
pop
jle
xchg
fidivl
jno
enter
aad
lret
repnz
cmp
pop
push
in
pop
add
cmpsl
pop
cld
aas
call
pop
aam
cld
adc
out
push
mov
cmpsl
cmp
cmp
loope
sub
fwait
in
cwtl
xchg
inc
jecxz
lea
push
adc
test
pop
ljmp
sub
sub
fisubs
lret
mov
and
mov
mov
dec
push
or
dec
push
cmp
out
in
insl
and
lret
pushf
inc
mov
fistpl
sub
xor
inc
inc
aam
std
cltd
test
sub
movntps
or
pusha
imul
push
xor
out
dec
xor
jnp
mov
pop
pop
cmp
fsubrp
lret
out
xor
rcll
sbb
mov
leave
or
inc
add
adc
mov
data16
aam
jmp
rorl
lods
aad
mov
add
in
lods
shll
mov
sub
fmulp
or
xor
imull
adc
pop
mov
cs
repz
rcrb
xchg
cmpsl
shrl
xor
lods
mov
adc
pop
or
cld
sub
jb
pop
aaa
push
adc
or
testb
and
push
mov
mov
in
js
loope
xlat
jno
popa
subl
xchg
aas
xchg
lods
popf
ljmp
jo
push
bound
mov
jbe
stos
mov
sbb
add
fyl2xp1
popa
mov
cmpsb
add
fiaddl
dec
cmpsl
adc
add
stos
or
shl
cmp
pushf
inc
xchg
or
ret
jp
or
lods
repnz
icebp
out
orb
push
mov
mov
jne
jmp
push
add
adc
jbe
fs
imul
jg
cmp
and
xor
and
popa
add
xlat
pop
in
sub
cmpsb
rcrb
aas
aaa
adc
dec
loopne
push
fists
cmpsl
dec
add
iret
dec
mov
xor
fwait
pop
cmp
cwtl
jb
hlt
jl
jno
push
push
xor
sahf
es
xchg
xor
out
push
js
sub
sub
xchg
xor
jle
mov
dec
fadds
lret
push
das
es
jne
mov
xor
xchg
sbb
repz
pop
xchg
fistpll
adc
pop
sbb
mov
call
jle
add
pop
add
fsubl
gs
je
in
out
mov
in
mov
inc
into
push
mov
mov
and
or
and
cs
out
xor
xor
jbe
mov
mov
xchg
mov
stc
inc
gs
sub
rorb
mov
pop
fistl
sub
sarl
ret
ss
mov
mov
jp
repz
inc
xor
mov
cmp
mov
dec
sbb
int3
or
stc
fstp
sub
jmp
mov
push
adc
les
in
out
fsubr
test
dec
insl
jp
faddl
stc
aam
cld
push
arpl
and
adc
and
scas
jbe
lock
daa
mov
push
cwtl
cli
mov
dec
dec
xorb
adc
iret
jp
xchg
mov
xchg
dec
into
es
notb
xor
adc
loope
test
mov
stos
mov
shl
adc
jecxz
jp
push
mov
mov
pop
negb
xchg
cmp
mov
mov
push
lods
jmp
dec
and
lret
mov
in
lea
pop
imul
lahf
sbb
mov
aas
adc
push
mov
pop
pop
xchg
or
aad
aaa
cld
dec
das
mov
jg
xchg
insl
ja
jmp
outsb
ja
mov
sub
mov
push
mov
scas
inc
repnz
jnp
and
mov
leave
icebp
cmp
stos
jp
movsl
enter
add
adc
jg
push
test
pop
sub
ss
mov
xchg
cmc
ljmp
sub
orl
dec
ljmp
push
and
negl
cmp
or
mov
inc
aas
cltd
push
repnz
cmp
adc
int3
gs
imul
cwtl
lcall
movsb
mov
ja
jle
fcoml
pushf
mov
inc
pop
mov
ds
fcompl
js
in
or
push
imul
jno
fmull
push
je
xchg
stos
mov
inc
out
stos
clc
movsl
xlat
mov
repz
add
fstps
pusha
mov
cmp
aaa
popf
xor
sbb
and
xor
sub
mov
lods
jge
ficoms
push
in
stos
cmp
xor
int3
push
iret
fwait
inc
icebp
mov
ds
ret
pusha
dec
mov
mov
cwtl
sbb
lods
jbe
icebp
mov
adc
daa
push
xchg
inc
push
cltd
sahf
inc
js
daa
movsb
jle
pop
mov
repnz
nop
xor
arpl
xchg
inc
xor
fwait
mov
push
jge
data16
cmp
iret
ret
test
stc
and
cmpsb
mov
mov
push
test
repnz
ja
mov
movsb
xchg
adc
mov
mov
cmpsb
jl
sub
subb
les
insb
add
movsb
insb
mov
xor
xor
xor
or
arpl
out
lret
fcmovnbe
out
clc
sbb
pop
xchg
movsb
add
aam
xchg
add
inc
xchg
fcoms
adc
xchg
push
jmp
jmp
cmp
mov
push
or
test
add
cli
loope
and
inc
pushf
xchg
xchg
and
in
push
or
xchg
xor
push
pop
jbe
cmp
push
shll
jge
sub
aaa
mov
pop
decb
insb
shrl
lods
popf
stos
mov
pusha
mov
add
cli
scas
dec
or
loop
cmp
xor
subl
int3
ds
stos
inc
xchg
pop
xor
pop
mov
cs
test
or
into
jnp
pop
enter
aaa
jecxz
into
xchg
jp
test
or
sbb
das
or
pop
mov
jns
jb
mov
mov
out
mov
adc
adc
fldt
xchg
fstpt
test
mov
cmp
sbb
mov
add
aas
jecxz
and
inc
cmp
mov
scas
add
into
jl
aam
pop
xchg
bound
nop
sarl
dec
test
push
jo
fsubrl
or
ja
stos
mov
push
gs
xor
gs
or
mov
insl
or
jmp
cmp
loopne
xor
insl
pop
mov
sbb
cltd
test
xchg
xchg
mov
mov
fwait
js
jmp
fwait
adc
mov
call
gs
adc
mov
xor
add
std
mov
jge
cli
negb
cmpsl
push
sub
dec
fcmovnb
jne
xor
in
cmc
add
fwait
orb
pop
dec
xor
bound
xchg
pop
pop
ffree
or
repnz
dec
sbb
addps
cltd
sub
pop
push
aad
mov
aad
mov
sbbb
imul
and
dec
lods
cmp
bound
mov
dec
cmp
mov
out
enter
daa
mov
into
mov
add
daa
jbe
pop
push
js
jle
add
cmpsb
pop
sub
xor
mov
jmp
dec
mov
or
lock
add
in
jnp
cmc
push
xchg
push
cli
lcall
je
xchg
inc
jo
in
jne
xorb
dec
mov
mov
push
jae
bound
sub
pop
adc
shrl
xchg
sub
lock
or
fildll
les
lods
pop
nop
mul
mov
inc
or
inc
ljmp
pop
sub
cmp
dec
adc
pop
xchg
fstpl
jmp
xlat
and
nop
push
imul
dec
js
push
fwait
xchg
sbbb
mov
test
xor
inc
jnp
cmp
lea
in
sbbl
sub
dec
sbb
cmp
fistps
inc
xor
sbb
xor
xlat
mov
mov
mov
std
mov
orl
pushl
rclb
ret
scas
mov
push
int3
aam
lahf
fwait
jp
ss
cs
jne
arpl
sbb
adc
xchg
jge
outsl
ja
xchg
rcr
rdpmc
sub
push
sbb
dec
cmpsl
jl
jmp
dec
loop
ljmp
fcoml
push
pop
mov
popf
mov
incb
push
fidivs
add
out
ret
mov
sarl
icebp
test
push
sub
adc
jge
add
movsb
xor
jnp
inc
lret
fwait
add
out
out
lods
pop
cld
mov
rolb
sti
call
mov
sbb
or
lods
test
sub
jo
mov
arpl
mov
push
jecxz
test
std
or
inc
cmp
outsb
int
fimuls
scas
pushf
ljmp
xor
sti
lds
adc
lods
fdivl
sbbb
inc
sub
sub
mov
xchg
out
fdivl
dec
pop
std
jg
push
fsub
or
and
fnstsw
or
popf
mov
dec
test
call
lock
out
out
fmuls
mov
dec
xchg
fsubrs
call
pop
sahf
xchg
rclb
dec
lock
cmp
pop
cmp
jbe
inc
and
lcall
mov
les
mov
push
cld
push
icebp
rcrb
lret
or
mov
cmp
aam
cwtl
jecxz
jp
test
aad
xchg
lea
sub
std
stc
push
adc
jl
repnz
xor
arpl
xor
aas
cwtl
pop
sbb
adc
push
xchg
ljmp
dec
in
arpl
rorl
inc
xchg
inc
cmp
aam
mov
or
add
popa
dec
fwait
scas
sahf
jge
aad
iret
push
aas
rcrb
stos
cli
ljmp
aam
es
loope
pop
xchg
stos
fisubrs
cld
mov
or
xor
js
cmpl
daa
or
xor
test
iret
mov
daa
cltd
scas
int3
insl
dec
mov
sub
push
jecxz
out
dec
fs
divl
imulb
inc
pop
hlt
insb
test
sbb
ja
ja
xchg
sbb
adcb
push
orl
push
repnz
xor
pop
hlt
mov
xchg
adc
mov
xlat
sbb
dec
loop
test
cmp
jle
test
pop
cli
or
int
or
fnsetpm(287
xor
mov
out
and
and
icebp
test
pop
cmp
outsb
ljmp
inc
xchg
sahf
add
fbstp
call
push
mov
stc
add
push
test
into
mov
scas
lea
rclb
pop
ss
ljmp
iret
xlat
jne
xchg
outsl
adc
test
dec
pop
push
clc
loop
sbb
mov
xor
test
out
push
push
jecxz
leave
popa
xor
xchg
loope
jmp
divl
stc
ret
jmp
sub
dec
mov
mov
shlb
addl
aad
flds
sbb
mov
xchg
sub
sub
in
pop
jge
dec
or
xchg
push
aaa
and
push
sbb
and
xorl
addr16
or
xchg
popa
inc
mov
sub
stc
xchg
arpl
vorps
test
fistpl
mov
add
insb
jp
in
cmc
mov
jmp
das
sub
clc
push
fwait
jp
and
sar
inc
xor
int3
daa
aam
push
aad
aam
cmpsb
rorb
mov
jnp
popf
fidivl
sbb
sub
mov
out
sbb
mov
pop
fwait
in
in
stos
aas
jge
orl
xchg
rcrl
loopne
lret
loop
repz
loope
fldt
fucomip
or
cmc
pop
repnz
fbld
jns
sbb
xchg
ds
nop
mov
dec
stc
push
adc
cld
cmpsb
or
inc
mov
sub
sub
cltd
inc
cmp
or
jecxz
sub
enter
scas
add
shll
dec
aad
fidivs
clc
cli
aas
push
fwait
inc
cld
inc
enter
pop
dec
dec
and
dec
aam
lock
and
orl
mov
inc
pop
stos
insl
insb
cmp
sub
pop
jg
je
sub
or
push
cmpsb
scas
add
inc
fisubrs
andb
xchg
push
cmp
pop
mov
jle
mov
push
sub
aad
mov
push
inc
mov
and
jnp
shll
xchg
std
jb
inc
rcrl
mov
hlt
add
sub
fstps
mov
mov
lret
jg
inc
add
xor
ss
xor
push
dec
repnz
icebp
icebp
lret
lcall
lods
sub
xchg
dec
xchg
mov
mov
add
add
cmpb
mov
mov
cmp
pop
and
movsl
sub
dec
addl
ror
call
sbb
jns
pop
sub
out
mov
cltd
mov
in
xchg
mov
mov
js
cld
stc
xor
and
bound
loop
loope
cli
and
mov
js
xor
cmp
into
add
push
mov
popf
mov
aam
mov
lcall
pop
stos
insb
call
mov
outsb
fldenv
adc
sub
scas
add
xor
insb
adc
pop
fwait
out
pop
stos
scas
push
or
int
push
cmp
jg
not
jae
jge
ljmp
ljmp
cmpsl
lcall
insl
das
mov
mov
fisubrs
sbb
xchg
add
inc
scas
xchg
xchg
and
jge
xchg
es
xor
jle
xchg
inc
dec
adc
jno
ds
icebp
lret
sahf
and
mov
add
or
test
jae
xor
fwait
mov
dec
pop
dec
add
leave
cwtl
and
test
cmp
ret
ds
inc
mov
lock
adc
xchg
scas
mov
out
pop
push
fnstenv
aam
lret
mov
scas
xor
xchg
gs
xchg
and
jp
pop
mov
pop
xlat
mov
sub
sub
mov
mov
addr16
mov
test
dec
xchg
push
cmp
pop
dec
sub
jmp
pop
sarl
iret
cmpb
pop
or
popa
out
sarl
xor
je
sarb
pop
add
mov
add
aam
in
out
jae
arpl
cs
outsb
mov
call
fwait
arpl
jae
xor
mov
ljmp
pusha
pushl
out
push
repz
aad
out
shr
pop
andl
daa
add
jnp
pop
jnp
in
cmc
out
jnp
mov
pop
lcall
or
or
dec
inc
aam
sbb
pushf
mov
inc
in
and
jb
gs
xchg
mov
push
call
jecxz
popa
jle
ror
rclb
repz
adc
fwait
loope
push
xchg
aas
lcall
incb
jg
movb
aas
cltd
fwait
mulb
out
mov
popa
or
jge
enter
add
leave
sbb
inc
stos
repnz
and
arpl
push
rcll
pushf
xor
je
aam
imul
jo
cwtl
xlat
repnz
nop
mov
xor
jns
or
jp
rcrb
fisubrl
sbb
lds
xchg
jp
mov
inc
test
pop
and
lahf
pop
inc
xor
dec
fst
andb
mov
pop
hlt
movsl
adc
fistl
ljmp
sbb
outsb
sbb
inc
leave
test
in
inc
sub
data16
enter
dec
test
int
mov
mov
inc
lods
xchg
lret
mov
and
paddd
test
loope
mov
aad
jp
xchg
xchg
das
imul
aam
push
push
ss
add
xor
popa
xchg
adc
xchg
pop
mov
sar
sub
orb
push
push
rcrb
jp
add
or
mov
divl
mov
dec
and
lahf
add
popf
cmp
xor
mov
pushf
sarl
xchg
xor
xchg
pop
stc
pop
pop
push
sub
outsl
mov
cmpsb
iret
stc
scas
mov
sbb
loope
loope
stos
xor
aam
in
dec
inc
das
iret
scas
pop
lods
ljmp
xchg
and
fildll
inc
repnz
and
frstor
adc
pop
cwtl
or
test
and
lahf
insb
sub
mov
sub
push
fdiv
and
fistps
push
inc
jo
test
adc
lret
or
cmc
fucom
cwtl
popa
rcll
loop
pop
xchg
jmp
fistpl
inc
xor
jbe
cmp
push
lds
mov
enter
jnp
inc
test
pop
data16
sbbb
lcall
repz
sbb
rcrl
mov
or
push
fmul
push
sub
sub
fnstsw
sarb
lcall
mov
xor
aam
or
mov
adc
add
movsb
lea
push
xchg
mov
rcr
push
addr16
fldcw
pushf
pop
icebp
jne
mov
xchg
mov
das
or
adc
lods
outsl
jns
mov
cmpsl
out
and
sbb
fwait
arpl
xchg
fnstsw
xorb
xor
and
aas
mov
jb
loope
mov
xor
and
inc
rclb
push
push
and
mov
addr16
cmovnp
hlt
dec
push
push
mov
fisubrs
cs
fbstp
inc
fsubrl
pop
pop
aam
ret
bound
repz
sahf
push
popa
lock
js
push
subb
aas
mov
xor
inc
lret
test
repnz
push
adc
fsubp
cmc
frstor
adc
mov
mov
mov
mov
mov
mov
cmpsb
out
ja
lret
ljmp
dec
inc
push
pop
mov
mov
add
xchg
loope
shlb
lret
cld
ljmp
mov
ljmp
lahf
in
jmp
xlat
mov
mov
mov
mov
dec
cwtl
xchg
hlt
and
pop
mov
sbb
push
bound
mov
adc
sub
cmp
mov
sbb
bound
push
scas
push
in
xor
hlt
push
out
in
repz
ret
xor
into
test
xor
stos
shl
loopne
push
dec
lret
xchg
lret
push
and
inc
cmc
mov
pop
ror
aas
pop
mov
xchg
test
sub
fnstenv
fwait
xor
aad
add
dec
std
push
mov
mov
pop
push
in
push
sub
adc
jae
xchg
or
shr
std
js
pop
dec
and
xchg
push
pop
lahf
ja
and
adc
add
push
mov
push
sahf
xor
cmpsb
ljmp
das
jbe
mov
imulb
jl
mov
sarl
jne
mov
mov
inc
push
inc
push
icebp
mov
imul
loop
xchg
int3
mov
js
sbb
inc
testl
cld
ds
or
sub
mov
insl
scas
fwait
je
fwait
mov
pop
repz
les
or
xor
adc
mov
fcoml
jno
in
jno
xchg
repz
sub
outsl
adc
mov
lret
mov
inc
sub
or
clc
or
pop
aas
aaa
mov
adc
test
jle
inc
mov
mov
mov
and
dec
testb
cmp
decb
sub
jmp
jmp
pop
sbb
xorb
je
mov
cmp
inc
js
cmp
xchg
test
int3
inc
sarl
outsl
mov
sbb
jmpw
xchg
pop
dec
pop
xchg
push
clc
shr
rorb
mov
arpl
mov
lock
pop
rcr
mov
test
ss
mov
jns
pop
jg
insl
loop
movsl
ds
jecxz
xchg
sbb
punpckldq
pusha
loopne
sub
adc
or
movsl
adc
and
lahf
add
into
outsb
xchg
jecxz
popf
mov
fwait
mov
push
int
pushf
cmp
xchg
dec
xor
mov
add
sbbb
push
jae
scas
int3
jns
sarb
imul
mov
scas
adc
sub
pop
xor
or
in
into
jp
in
mov
nop
pop
push
cmc
or
sti
stc
cli
ficomps
adc
ss
inc
adc
dec
pop
inc
lea
leave
sub
adc
cmp
push
dec
and
sbbl
sub
adc
adc
shll
pop
add
mov
pop
jb
mov
sbb
fwait
in
scas
sbb
xchg
or
aaa
sbb
sbb
mov
sub
rcrl
das
push
cmpb
shll
mov
sbb
push
cmp
push
jecxz
es
sbbl
and
add
cmp
pushf
scas
xchg
call
pop
aad
cmp
stos
pop
std
and
enter
pop
outsb
ja
jae
ja
mov
loope
xchg
and
fadds
popa
rcll
mov
sub
decl
les
and
jmp
rorl
mov
or
mov
mov
dec
imul
xchg
call
xchg
cld
jb
xor
push
jne
es
pop
adc
adc
fs
cwtl
mov
add
rorl
repz
fmull
jbe
into
push
fidivrs
daa
adc
jmp
sub
int3
insb
or
mov
clc
cmpl
fs
movsl
and
and
mov
subl
or
add
scas
or
pop
xor
and
sub
mov
in
test
jmp
jne
in
out
mov
in
js
pop
jp
dec
decb
repz
push
ret
and
xor
addr16
mov
and
push
fdivrl
lock
xor
aam
or
bound
pop
mov
mov
pop
jbe
cmc
push
nop
pop
jp
push
jnp
jae
sbb
in
push
cmpsb
inc
push
add
xor
into
bound
mov
or
sbb
pop
pop
nop
iret
sbb
mov
xchg
sbb
cmp
scas
sbb
or
fists
out
xchg
add
push
imul
sub
lods
ret
fdivl
aaa
cmpsb
fnstsw
jo
ror
sbb
decb
and
fists
test
xchg
jnp
movsb
mov
sub
jb
pop
stos
insb
ss
sti
mov
pop
jecxz
imul
lds
ret
mov
cld
sarl
loop
inc
addl
lcall
icebp
paddd
stc
and
imul
repnz
sub
fnstcw
out
das
movsb
cmp
mov
std
mov
push
and
loopne
out
xor
imul
inc
je
push
mov
ret
leave
adcb
inc
lods
xor
cli
outsb
mov
sbb
add
shl
mulb
lret
in
add
jge
mov
clc
push
push
mov
mov
test
mov
sub
dec
jl
mov
adc
adc
ljmp
out
test
lods
mov
mov
xchg
jle
adc
shll
mov
mov
aam
in
push
ds
jae
xor
call
push
xchg
testb
bound
ja
jo
add
insb
shrb
movsl
sbb
fmull
out
sbb
cwtl
cli
je
xor
enter
lds
jmp
cmpb
cmp
mov
mov
inc
stos
scas
mov
dec
pop
xlat
imul
or
movsb
mov
fwait
rorb
mov
mov
pop
clc
xor
pushf
imul
sub
mov
push
dec
jo
das
sbb
push
add
xchg
stos
mov
add
ds
leave
repz
pop
adc
rcrb
ror
and
cmp
fdivr
sub
cmp
lods
xchg
int
lea
imul
adc
outsb
out
jl
lret
icebp
aas
mov
xlat
adc
push
cltd
jbe
or
add
aad
or
sub
mov
pop
lahf
sbb
dec
inc
and
push
fs
or
int
sbb
add
cmp
test
xor
std
ljmp
test
cmp
or
aas
mov
test
and
pop
daa
aas
es
adc
mov
lcall
lea
adcl
aas
pop
repnz
jle
xchg
jp
and
mov
ret
jbe
sbb
and
or
inc
cmc
push
arpl
pop
and
out
sub
inc
push
rorl
ja
add
aam
ljmp
dec
mov
fs
lds
sub
frstor
pop
arpl
shrb
pop
gs
xchg
inc
inc
mov
push
mov
and
lahf
fisubs
leave
nop
xchg
push
in
xchg
int
xchg
cwtl
out
ljmp
xor
xlat
les
out
dec
shlb
ret
push
out
mov
sbb
stos
mov
sbb
icebp
mov
sbb
push
int
xor
xchg
xor
rcrb
fbld
or
insb
stc
sub
into
lds
xchg
rcrb
xlat
inc
sarl
dec
stos
test
or
dec
inc
jg
jle
leave
pushf
mov
inc
arpl
std
jnp
add
xchg
cmpsl
mov
insb
cli
mov
add
push
lods
lret
mov
xor
pop
jmp
fucomi
nop
xchg
leave
les
xchg
jne
pop
jns
pop
movl
in
adc
inc
mov
jo
pop
jno
adc
push
mov
and
inc
enter
add
pop
adc
push
stc
push
insb
jb
mov
jge
inc
cmc
push
cmp
arpl
rorb
push
push
and
icebp
es
cwtl
mov
sti
xchg
cwtl
inc
mov
mov
lods
or
push
pusha
or
mov
sbb
inc
pop
aas
and
scas
add
pop
popa
loop
jo
add
adcb
inc
adc
mov
les
aas
xor
push
rorb
shlb
insb
add
dec
daa
cmpsl
mov
inc
insl
cmp
jle
or
sbb
push
aas
cwtl
or
xor
ja
movsb
fadds
outsb
gs
adc
jl
in
aaa
sbb
mov
mov
mov
test
or
gs
or
pop
enter
ret
xchg
loop
outsl
xchg
scas
outsl
jle
push
xchg
sub
dec
inc
dec
stc
in
in
pop
and
jl
mov
xchg
mov
inc
shlb
scas
inc
jb
stc
push
test
arpl
mov
mov
or
movsb
xchg
cmp
aaa
add
in
cmpsb
repnz
jge
leave
or
and
pop
push
lret
scas
mov
neg
adc
or
scas
cmc
negb
or
insl
jl
and
adc
push
out
call
daa
pop
addr16
out
js
mov
call
mov
inc
loopne
std
stc
not
pushf
mov
fwait
mov
jle
ds
inc
divb
in
hlt
iret
mov
lods
into
lret
cmc
push
mov
int
aaa
jnp
sub
mov
test
mov
xlat
cwtl
xchg
jge
cmpb
push
cmpsb
or
cmpsl
ret
lahf
cmpsb
stc
cmp
pop
popf
inc
movsb
subb
movsb
adc
and
sub
stc
sub
dec
ja
cmpsl
das
inc
xchg
ror
mov
fisubl
inc
jl
sbb
adc
imul
mov
pop
imul
xor
cmp
lahf
ja
adc
sar
gs
iret
cmp
sarb
mov
loope
inc
fsts
mov
outsb
insb
pop
aam
sub
sub
jns
rorb
pop
insb
lret
xor
lcall
insb
mov
dec
cli
jmp
sbb
xchg
sub
xchg
gs
push
pushf
xorb
sub
inc
jmp
sub
aaa
dec
negb
mov
cmp
cmpsb
sbb
scas
pop
lods
cltd
inc
dec
roll
out
insb
mov
movsl
mov
sub
out
movsb
arpl
mov
add
jecxz
xor
aas
jmp
cld
dec
jle
jecxz
fwait
and
xor
orb
test
fmuls
push
mov
dec
insl
sbb
faddl
xchg
xchg
fistpll
pop
push
in
inc
mull
stos
jb
in
pop
sbbl
inc
scas
adc
fwait
loope
mov
or
mov
cltd
dec
orb
mov
jno
pop
mull
aad
into
mov
mov
addr16
mov
test
test
hlt
enter
inc
insb
xchg
es
outsb
adc
arpl
fmull
repz
hlt
xor
add
jp
clc
mov
jb
lret
jbe
push
and
push
or
inc
fimuls
fxch
popa
stc
ja
sbb
and
stc
movsl
fs
xchg
adc
adc
addr16
cmp
movsb
enter
aaa
lea
insl
cmp
inc
ss
mov
ret
iret
xchg
insl
mov
cs
xchg
imul
repnz
sbb
xor
loopne
or
jge
imul
data16
js
or
mov
cli
je
or
ljmp
insb
lods
lock
sahf
cmc
push
ret
pop
shll
dec
xor
pop
loope
or
xor
jmp
mov
stc
sub
js
mov
mov
and
daa
repnz
mov
cltd
out
jl
daa
push
dec
sub
cwtl
jnp
sbb
fcoms
mov
lahf
and
mov
jns
ret
push
mov
mov
bound
out
ret
dec
xchg
xor
fwait
adc
lret
dec
fidivs
mov
add
fsubl
push
in
ret
push
and
orl
mov
pop
sbb
imul
iret
sub
push
jo
popa
pop
stos
sub
jmp
mov
data16
xlat
dec
cli
push
aaa
or
adc
aam
mov
lret
adc
sbb
in
push
adcb
mov
pop
testl
mov
sbb
inc
mov
leave
push
cmpsb
pusha
jae
fldt
imul
in
push
or
aam
dec
add
push
into
gs
or
scas
mov
loop
push
repz
daa
sbb
xchg
sahf
inc
arpl
aad
fsubrs
jg
dec
mov
mov
dec
out
sbb
xchg
in
fisubs
cmpsb
outsl
test
outsb
jnp
mov
in
dec
push
jp
sti
mov
arpl
aad
ja
cwtl
sti
sub
icebp
notb
pop
std
adc
add
popf
or
fnsave
sub
pop
mov
sbb
push
xor
mov
adc
cwtl
ljmp
arpl
mov
lods
iret
mov
mov
loope
fnstsw
leave
dec
inc
or
xchg
pop
mov
gs
adc
out
movsl
out
movsb
add
in
sub
mov
mov
aad
jmp
mov
mov
sbb
or
test
in
leave
pop
xchg
paddusw
mov
fisttpl
push
adcb
mov
jmp
add
movsl
and
sahf
pop
cli
sbb
adc
scas
mov
sbb
xor
sub
and
outsb
aam
out
fs
mov
imul
push
pop
in
or
movsb
idivb
mov
sub
fnstcw
inc
adc
jle
int3
xlat
sub
gs
jbe
fsubrs
push
lds
int3
cmp
sub
pop
popa
movsb
cli
ss
push
sbb
lods
and
or
bts
testb
iret
sub
stos
cmp
flds
jnp
adc
cmpsl
pop
pop
jge
aaa
outsl
je
stos
xlat
idivl
fisttpll
mov
leave
pop
movb
mov
icebp
fcmovu
jae
xchg
aam
pop
sub
js
sbb
stc
mov
shrb
insb
add
push
ds
popa
fisttpll
insb
pop
clc
pop
jne
mov
in
fdivl
add
das
mov
roll
in
outsb
lret
std
jmp
movsb
push
push
popa
mov
shll
sub
add
xchg
gs
jne
iret
fmuls
popa
inc
loope
xor
push
or
mov
push
adc
stos
sahf
stc
in
int3
cmp
imul
mov
push
sub
mov
nop
sbb
mov
das
mov
imul
push
mov
xor
ss
and
mov
dec
rclb
push
and
pop
mov
jl
add
in
mov
sub
ljmp
rorb
arpl
dec
add
lods
orl
jbe
xchg
nop
mov
js
inc
cmc
push
sub
popf
push
mov
pop
push
adc
mov
dec
lahf
jns
dec
pop
cld
bound
pop
dec
mov
jg
scas
or
fwait
cld
es
imul
jmp
es
int
xor
inc
out
stos
test
mov
sbb
sub
sub
cmp
das
adc
movsb
push
or
addl
popf
pushf
add
inc
bound
mov
jne
repz
repz
add
sbb
bound
mov
sbb
mov
les
mov
out
jp
rolb
insb
mov
inc
pop
aaa
stos
out
popf
adc
rcrl
aam
mov
rcr
or
ret
or
sub
and
outsb
xor
and
fstp
jle
scas
push
mov
pop
popf
lock
dec
lret
inc
sbb
xchg
ret
pop
mov
jmp
sbb
adc
jg
dec
inc
das
lods
add
xor
fldl
xor
xchg
insb
inc
dec
mov
nop
and
bound
outsb
inc
dec
pop
cld
out
mov
push
mulb
lock
xor
aaa
inc
jge
ljmp
loope
in
lcall
sbb
or
pop
sbb
inc
imul
push
andb
pop
in
and
mov
jge
pushf
push
pop
addr16
fcmovu
pop
mov
fisubl
stos
adc
jmp
repz
cld
hlt
add
adcl
lahf
rcrl
mul
dec
lds
iret
stc
mov
sub
gs
fsubrl
ja
loope
fcomp
dec
in
scas
cmp
mov
pushf
pop
xchg
lret
rcl
repz
orl
push
mov
push
and
js
push
mov
leave
cmpsl
and
sbb
xor
dec
fdivl
push
test
cwtl
dec
call
loopne
fcompl
mov
lds
int
lock
call
push
loop
mov
hlt
std
and
inc
xchg
negl
and
jbe
mov
out
jmp
rcr
cmp
and
add
mov
xor
mov
cmp
cs
repnz
dec
inc
out
xchg
and
mov
aam
in
cmc
jmp
data16
inc
loopne
clc
push
sub
cmp
mov
cmpsb
pop
and
int
sbb
mov
push
lahf
cld
je
out
cmp
cmp
loopne
jle
xchg
mov
test
add
pop
int3
jmp
cmp
outsb
test
jg
mov
aam
push
hlt
push
outsb
inc
ret
imul
nop
inc
jl
jg
cltd
mov
add
scas
mov
les
mov
dec
loop
loope
mov
imul
lods
sbb
mov
dec
pop
imul
shrb
lock
sub
or
xchg
cmp
inc
popa
test
push
jg
dec
testb
sub
call
inc
mov
mov
cmp
lret
inc
outsb
push
mov
cmp
jae
pop
out
mov
lcall
cmc
cmp
push
insb
fnstcw
jno
inc
and
popa
inc
movhps
or
das
dec
js
adc
adc
push
ljmp
push
aam
in
sbb
push
mov
mov
loope
xor
fbstp
sbb
adc
in
push
jbe
testl
dec
dec
mov
push
movsl
mov
cltd
lret
push
mov
mov
or
xchg
loop
out
loope
mov
lods
cmp
enter
xchg
stos
negb
loop
cmp
push
ds
xor
dec
clc
mov
into
mov
mov
insl
das
scas
movsl
std
inc
cmp
es
or
fiadds
lods
or
rorl
lcall
cli
stos
movsb
aas
outsl
pop
test
js
dec
xor
cli
adc
test
shr
es
xchg
or
out
jno
and
sbb
sub
sbb
jl
sbb
fidivrs
fidivl
sub
test
ret
sub
mov
aas
das
outsl
sub
out
mov
push
or
jae
cltd
cmp
std
daa
mov
iret
mov
movsb
push
test
lea
dec
bound
fistl
jne
mov
add
ljmp
cltd
mov
loope
push
push
call
lret
aam
cli
stc
insl
inc
cmp
xchg
pop
inc
cmp
and
icebp
add
outsl
and
cmp
ret
push
adc
popa
jbe
scas
cmp
inc
mov
push
cmp
pushf
pop
jne
stos
xchg
mov
mov
loope
xchg
mov
add
mov
packssdw
shl
push
cmp
sar
and
cmp
sub
in
sahf
test
hlt
sti
mov
jb
adc
jae
rclb
mov
jb
lahf
in
push
push
hlt
push
lahf
out
loopne
xchg
sub
inc
rep
adcb
outsl
xor
out
adcl
dec
fidivl
rol
jg
sbb
push
aam
ljmp
aad
mov
sbb
addr16
dec
sbb
nop
loope
addr16
jmp
shll
sahf
cmp
xchg
pop
inc
lea
iret
inc
inc
xchg
cwtl
xor
xor
add
push
cmc
jno
mov
pop
es
and
iret
pop
out
adc
cld
lds
xchg
mov
sub
divl
add
add
mov
nop
sbb
idiv
int
in
iret
pop
out
leave
jb
adc
scas
adc
out
cmpsl
je
mov
sub
aaa
unpcklps
pushf
negl
or
loopne
lret
pop
insl
arpl
adc
scas
mov
adc
in
or
aad
adc
cmp
mov
sbb
push
repnz
mov
mov
stos
and
mov
insb
jl
aas
cmp
inc
cmp
pop
jno
out
test
in
mov
cmp
dec
and
enter
and
xchg
jge
dec
push
out
jb
pushf
int
jg
mov
and
arpl
repnz
icebp
push
jl
fadds
lds
ss
out
lahf
popf
je
pop
lea
das
mov
rcrl
lods
sahf
push
les
mov
pop
cmp
xchg
mov
mov
leave
mov
fildl
fcmovb
push
sub
xchg
popf
xor
cmp
test
ret
aas
int
jle
mov
in
sbb
jge
dec
imul
mov
sbb
inc
push
decl
stos
in
sub
xor
fstl
dec
cmp
dec
or
pop
stos
js
xor
daa
lahf
and
lea
in
lcall
clc
jae
dec
sub
in
clc
inc
mov
orps
and
je
bound
push
cmp
adc
add
sub
cld
xor
lret
jp
add
sbb
jg
loopne
mov
lahf
xor
in
or
sub
out
outsl
cwtl
mov
aad
mov
in
push
mov
lret
addb
xor
mov
ja
dec
mov
mov
cmpsb
sahf
lcall
cmp
stos
or
icebp
pop
lcall
outsb
sarb
adc
pop
mov
dec
jns
xchg
or
pop
pop
in
stc
jo
push
add
sbb
mov
out
testl
adcb
cmp
fcoml
mov
stc
cltd
in
ds
fisubrl
and
ret
cmp
dec
adc
push
xchg
adc
cs
je
lret
cmp
cli
movntq
das
push
xchg
mov
fldt
mov
insl
sub
mov
aaa
adc
adc
loop
nop
test
push
add
mov
outsl
push
inc
mov
xchg
push
push
orb
aam
push
les
les
lahf
dec
sub
pop
dec
test
xchg
mov
cmp
shrb
push
imul
dec
rclb
dec
add
arpl
cmp
daa
sub
mov
ljmp
adc
loope
xchg
sub
clc
pushf
les
mov
mov
xchg
pop
shlb
add
call
push
mov
cmpl
sbb
push
adc
and
sub
movsb
push
jbe
movsb
lcall
in
pop
movsb
sub
sbbb
sbb
nop
xchg
pop
sbb
jecxz
mov
cwtl
rcl
pop
mov
int
mov
xor
rclb
or
push
bnd
xchg
dec
in
mov
cmp
dec
pop
mov
push
dec
cmp
pop
popa
hlt
jae
pop
data16
xchg
jne
sbb
nop
cmp
sub
orl
shrl
push
aaa
jne
inc
popf
int
aas
fnsave
jnp
mov
sub
xchg
aam
adc
pop
xor
test
inc
jecxz
cmp
mov
subl
xchg
sbb
fistl
adc
call
mov
add
divb
cmpsl
fcmovnbe
cmp
in
inc
jp
ja
int3
aam
jp
or
mov
or
inc
or
adc
cmpsl
scas
imul
or
jle
jg
repnz
mov
mov
loopne
fs
cltd
adc
fwait
lea
gs
xchg
inc
shll
negb
mov
mov
icebp
mov
pop
mov
push
insl
xor
clc
sub
jbe
push
mov
mov
lock
inc
mov
sahf
stos
aas
pop
sbb
lods
pop
loop
mov
shlb
inc
cmpsb
outsl
es
ret
insb
out
cld
pop
adc
aam
pop
push
push
ret
inc
xor
mov
inc
jle
pop
push
mov
fisubs
pop
or
dec
dec
lock
in
xchg
mov
pop
or
mov
pop
jmp
or
adc
mov
push
outsl
mov
or
mov
in
pop
sbb
imul
pop
pushf
xor
pushf
push
sahf
mov
cli
jg
jmp
lods
xor
or
mov
push
out
sbb
jns
xor
xchg
lods
adc
insb
dec
sbb
dec
popa
adc
add
add
mov
in
and
sub
push
adc
jmp
pop
std
je
mov
xchg
jnp
adc
aaa
sbb
call
push
mov
jno
inc
adc
jns
pushf
cmp
push
add
cmp
aas
cs
icebp
inc
iret
pop
inc
push
leave
scas
xor
fldenv
cmp
adc
xor
add
pop
lods
mov
pop
imulb
dec
fisubrs
push
jecxz
jl
inc
cld
insl
sti
loope
out
negb
sahf
fs
jecxz
iret
mov
cli
lahf
xchg
in
sub
dec
jo
add
fildl
pop
addb
into
lea
xor
dec
inc
sahf
jmp
add
out
push
mov
pop
cmp
or
inc
dec
mov
nop
xor
aaa
rcrl
rolb
fsubrp
inc
loope
out
stos
adc
mov
int3
cwtl
mov
rclb
leave
inc
and
inc
ja
mov
dec
and
addl
mov
int3
cmovle
shrl
pop
xor
fs
scas
lcall
xor
es
mov
jb
decb
jg
pop
push
add
dec
ss
lcall
dec
mov
es
js
xor
mov
lcall
nop
add
loope
outsl
sub
in
add
and
lea
cmp
stc
or
lods
xor
cmp
add
push
fsubl
enter
mov
pop
js
push
roll
inc
jp
outsl
and
and
mov
jg
lcall
dec
add
mov
mov
pop
clc
arpl
lahf
pop
jecxz
xchg
xor
mov
jmp
mov
lahf
xlat
add
cltd
clc
int
fisubl
jge
xchg
fiadds
sbb
dec
cmp
push
sbb
shrb
cld
adc
add
out
aas
cs
jp
lret
xchg
sub
push
push
arpl
dec
pop
xlat
imul
xchg
xchg
and
ja
add
ret
aaa
dec
sahf
mov
jne
or
push
xorb
andb
fsubl
cmc
mov
icebp
push
and
lret
mov
xchg
mov
push
mov
into
int
xchg
xor
and
fwait
aaa
stos
ljmp
lret
jle
sbb
out
mov
sarl
pop
fnsave
sub
sub
and
xchg
out
in
mov
scas
add
fsubl
scas
in
call
fmulp
cmp
scas
aaa
in
push
mov
mov
clc
or
test
lret
push
pop
pop
fsts
push
outsl
ret
xchg
push
mov
xorb
addr16
push
out
addb
cwtl
and
out
cmpsl
nop
push
fbld
cs
mov
pop
gs
adc
push
mov
in
les
cld
dec
inc
inc
adc
sarl
orb
and
dec
pop
inc
mov
cwtl
jb
xor
test
outsb
push
scas
mov
mov
adc
push
mov
push
std
sub
add
push
mov
loopne
inc
add
pop
xchg
call
orl
sbb
adc
mov
jecxz
and
lcall
ljmp
pop
lret
lahf
test
mov
inc
rol
loope
subl
and
push
inc
and
lret
pop
out
test
popf
and
push
cmp
loope
repnz
ljmp
ja
std
jb
or
addr16
int3
pop
xchg
sub
hlt
push
insb
in
mov
insb
sti
in
mov
outsb
inc
sbb
pop
outsb
out
mov
mov
sub
mov
cmp
ret
push
push
push
loopne
in
mov
sbb
cmc
jae
sbb
sti
jge
inc
ja
test
sub
xchg
popf
pop
cmp
jmp
push
insl
ss
cmp
push
adc
sbb
fwait
xor
dec
cmpsb
pop
and
cwtl
popa
mov
xor
cmc
mov
lea
lea
int3
pop
add
cmpsl
xchg
push
out
test
lea
loope
enter
xor
aas
movsl
cmpsl
in
lahf
popa
mov
stos
ds
and
in
retw
das
jle
mov
out
cld
movsb
add
sub
lret
or
and
cli
ds
nop
lret
push
shl
rcrl
rcll
push
jbe
lea
and
inc
push
testb
and
inc
cmc
sub
pop
loopne
scas
cmp
mov
cwtl
push
inc
lea
in
sarb
mov
daa
repz
add
sahf
outsb
arpl
scas
mov
leave
jmp
and
iret
sbb
outsl
fisubs
scas
cld
push
outsb
sub
push
pop
inc
sbb
mov
or
shll
mov
push
jo
je
jnp
adc
pop
cmp
fs
mov
repz
jne
orb
cmp
inc
shrb
sub
shrb
mov
out
sbb
xchg
mov
fdivs
test
lock
js
mov
insl
jg
fsub
andl
mov
notl
lock
xor
stos
add
int
sbb
jg
sbb
sub
push
cli
in
test
movsb
aaa
inc
dec
xor
mov
mov
dec
xchg
sub
sbb
or
pop
enter
stos
roll
pop
mov
lret
and
loop
mov
sbb
or
ficompl
nop
out
std
xor
les
das
sub
cmp
xchg
sbb
dec
add
ja
adc
add
insb
aaa
aam
adc
roll
mov
sub
sub
insb
fdivr
jmp
jge
stos
sbb
cmp
push
inc
adc
call
rcrl
cmpsb
ret
test
push
je
push
push
or
inc
popf
loop
sti
xor
daa
sbb
push
in
cmp
pop
dec
bound
xor
pop
adc
push
outsb
repz
faddp
repnz
inc
sub
sbb
fwait
ljmp
sbb
inc
cmpsl
push
mov
inc
fmul
sahf
sub
sbb
into
loop
cmpsl
leave
stos
push
mov
stos
push
mov
icebp
popf
int3
xlat
sub
pop
sub
cmp
addr16
and
aaa
test
in
add
push
mov
xchg
daa
jae
sub
xchg
mov
or
and
or
adc
ret
xor
out
xorl
imul
pop
and
xor
pusha
rorb
sbb
cmp
clc
adc
lods
and
mov
rcrl
lods
dec
mov
mov
bound
andb
mov
push
and
mov
mov
ret
or
imul
mov
dec
arpl
mov
adc
pop
les
popa
dec
shlb
ret
in
sbbl
cmpsb
xor
push
mov
mov
dec
sbb
popf
push
mulb
loopne
out
mov
push
jnp
xchg
lretw
aad
ret
cmp
push
movsb
shll
xchg
ret
cmp
aad
rolb
mov
addr16
dec
push
testl
xor
lcall
sbb
push
aam
gs
push
insl
jge
add
push
add
mov
mov
pop
icebp
cmp
jmp
jno
sub
fisubrs
lods
jo
pop
in
cmp
xor
fldl
fisttpl
jns
sub
mov
mov
rclb
push
imul
or
pop
fwait
xchg
jno
cmpsb
inc
push
cs
in
mov
jae
push
add
sbb
es
imul
js
mov
push
mov
or
push
lods
jnp
mov
push
iret
xchg
scas
repnz
aam
mov
mov
dec
cld
scas
xchg
shll
jnp
cli
pop
push
pop
add
rcrl
loopne
arpl
or
movsl
popl
cmc
adc
subl
imul
mov
xchg
inc
in
sub
mov
or
xor
jb
mov
add
test
jns
jns
jne
inc
add
stos
adc
push
pop
sti
lcall
xchg
push
lock
and
mov
cmp
jo
imul
cmpsb
inc
and
pop
mov
push
out
popf
xor
insb
cmpsb
lahf
int3
xchg
mov
jno
mov
clc
ljmp
sbb
in
hlt
xchg
inc
lahf
loope
add
inc
mov
add
xchg
das
mov
ljmp
mov
jmp
fisttps
icebp
ja
mov
lods
dec
and
sbb
rorl
movsb
mov
negl
daa
xlat
push
les
push
out
leave
and
rcll
cmp
inc
mov
setg
rclb
add
mov
push
sbb
add
xchg
xchg
xchg
std
adc
and
push
lea
dec
xor
pop
lahf
mov
cmpl
ret
iret
pop
add
loopne
aas
fcoms
push
divb
sarl
fcompl
pop
rolb
jecxz
sti
testl
hlt
arpl
test
fdivl
jl,pt
test
out
mov
ret
stos
mov
cmp
popa
inc
mov
stc
mov
jbe
or
jae
fcoms
pop
or
lods
xchg
mov
add
repnz
je
mov
repnz
push
mov
push
loop
rcll
xor
rorl
pop
aad
mov
cli
sub
jl
cwtl
ret
aas
mov
cmp
stos
lcall
xchg
arpl
xchg
aad
fidivs
mov
mov
out
dec
pop
insl
and
inc
pop
jne
or
sbb
push
sbb
pop
push
jecxz
adcl
sub
adc
lret
std
fimull
lret
les
lahf
mov
ljmp
or
cmp
pop
adc
repnz
pop
xchg
sbb
push
adc
insl
stos
add
inc
sbb
fwait
movsl
sub
xchg
mov
in
in
sub
je
mov
push
xchg
mov
adc
call
stos
add
ljmp
test
cmp
outsb
lahf
mov
repz
outsb
imul
repz
adcb
aas
ljmp
addr16
fcmovu
in
xchg
aad
stos
notl
sarb
mov
hlt
ror
cs
mov
data16
loope
call
stc
add
jg
cmp
xchg
jno
mov
pop
lahf
imul
cmp
mov
push
push
lcall
mov
mov
sub
xchg
push
inc
mov
and
dec
dec
sbbb
lock
into
mov
lods
adc
jle
sahf
out
out
repnz
shr
dec
ljmp
xlat
popa
xchg
test
and
lcall
inc
mov
js
mov
and
push
std
call
rep
ljmp
and
push
sbb
add
sub
and
xchg
push
xchg
dec
mov
loope
jno
xchg
fiaddl
xchg
pusha
adc
adc
rorb
sti
xor
jb
dec
ja
cwtl
in
ss
cmp
idivl
or
icebp
add
mov
push
sahf
xchg
ljmp
inc
jg
xor
stos
and
xor
push
ss
test
sbb
mov
pop
int
add
add
xor
in
pop
sbb
inc
adc
fwait
popf
inc
push
xor
dec
es
xor
xchg
dec
adc
rcl
cs
mov
div
push
movsl
inc
push
repz
out
adc
xchg
test
push
xor
shll
or
add
or
loope
pusha
jmp
mov
add
enter
movsb
mov
int3
dec
dec
inc
sbb
jecxz
cmp
jecxz
stos
ss
xor
push
icebp
and
lods
xor
js
push
inc
imul
xor
orl
dec
fwait
test
cmpsb
mov
aas
jecxz
mov
sbb
mov
add
in
sub
xchg
mov
popf
stos
sti
jle
inc
lods
jnp
pop
bound
sub
mov
jp
cmp
mov
fisubrs
paddw
add
ja
int
cld
fimull
or
adc
lods
jge
movsl
xorb
addr16
inc
pop
jg
scas
pop
adc
popa
fldcw
pop
cmp
mov
mov
xchg
jo
or
dec
addb
mov
pop
xor
insl
shr
in
lea
call
sbb
gs
add
jbe
or
dec
xor
pop
mov
in
and
mov
sub
mov
lret
out
repnz
loopne
cmpsl
or
enter
adc
imul
jl
lea
addr16
push
sbb
fsubr
gs
pop
and
pop
test
popf
mov
lcall
cmpsl
pop
into
nop
and
subl
jb
dec
popa
inc
inc
fwait
push
pushf
hlt
push
mov
push
inc
test
stos
add
sbb
mov
test
repnz
lret
or
pop
add
push
mov
inc
mov
aaa
aad
cltd
rorb
inc
push
out
aad
inc
sbb
sbb
decl
mov
fisubrl
icebp
or
sbb
push
dec
bnd
xor
clc
push
add
icebp
cmp
not
out
jbe
mov
mov
pusha
sub
jns
adc
or
cwtl
mov
and
dec
cmp
int3
testb
and
or
pop
arpl
xor
shrb
daa
xchg
push
popa
jg
inc
ds
sbb
fnstsw
xchg
stc
aam
mov
shlb
les
push
loopne
inc
adc
stos
cld
jge
les
popf
push
xchg
pop
cmpsl
sahf
push
in
dec
insb
push
lea
adc
push
add
in
lret
mov
xor
and
jl
cltd
mov
mov
inc
push
dec
jb
pusha
xchg
xchg
or
test
cmp
addl
sahf
mov
sbb
fwait
in
sar
das
js
push
dec
aas
add
mov
mov
jns
std
fwait
adc
cmp
adc
mov
mov
movsb
mov
mov
scas
add
leave
and
push
fistl
jge
add
shr
cmovbe
add
cmp
jno
xor
inc
cld
cmp
mov
xchg
jl
xchg
mov
ja
mov
hlt
bound
loop
lahf
dec
push
dec
mov
mov
call
xchg
adc
cmp
mov
push
adc
sahf
stc
pop
jl
mov
or
or
sub
mov
iret
add
imul
movsl
in
pop
es
mov
dec
pusha
or
mov
push
orb
loop
shlb
xchg
sbb
adc
cmp
imul
jp
xchg
sti
fidivrl
add
cmp
jno
shl
xchg
out
mov
pusha
lret
insb
xchg
cli
xorb
jbe
pop
mov
add
sbb
insl
push
ret
frstor
push
es
lret
scas
aas
inc
pop
int3
xchg
mov
dec
dec
adc
les
jnp
test
into
mov
xchg
dec
and
jns
jo
mov
xchg
lds
outsb
push
xor
cmc
test
jg
mov
adc
mov
jmp
sub
mov
cmp
in
pop
insl
dec
mov
aad
lds
xor
push
loop
and
ror
sub
insl
mov
and
outsl
mov
dec
mov
gs
push
hlt
ret
xchg
lods
out
lds
add
inc
xchg
pop
scas
rorb
cmp
mov
sbb
imul
leave
or
inc
jb
ljmp
xchg
out
call
jmp
or
dec
cwtl
cmc
mov
shll
push
push
fstpl
lret
xor
rorb
ds
test
sbb
push
aas
push
dec
cltd
xchg
ret
aaa
dec
jb
stos
and
jle
fldt
lods
inc
add
cmpb
pop
push
sub
dec
cwtl
cmc
cli
jge
push
jecxz
pop
mov
lods
jl
pop
aaa
popf
push
dec
lock
or
xchg
mov
ljmp
lods
jae
pop
or
filds
or
mov
inc
sbbl
mov
and
fdivs
incb
mov
je
loopne
sahf
dec
out
std
or
mov
out
movsl
out
sbb
mov
sbb
sbb
in
jecxz
pushf
out
add
dec
in
push
mov
sub
adc
mov
inc
pop
dec
inc
adc
mov
mov
mov
stos
clc
clc
roll
lahf
inc
or
data16
cs
sub
ljmp
rolb
inc
js
outsl
jecxz
sbb
int
push
in
push
cwtl
popf
and
and
lcall
fwait
pop
dec
or
loop
pop
inc
cmp
sub
jb
es
xorl
fnstsw
inc
adc
mov
lret
lea
or
pusha
stos
cmpsb
sub
cmp
sbb
sbb
mov
mov
jmp
notb
dec
xor
or
or
sbb
push
mov
xchg
je
xchg
add
push
icebp
in
sub
subb
mov
or
addr16
gs
repnz
xchg
mov
adc
add
pop
push
lods
dec
and
jle
movsl
xchg
dec
into
ret
jae
xchg
push
pop
inc
testl
aas
add
bound
pop
push
cmpb
inc
inc
popf
push
sbb
in
xor
inc
aad
pop
cmp
cmp
cmp
inc
leave
mov
add
push
add
xorl
into
stc
lock
fstps
inc
sub
aaa
push
mov
mov
cmp
and
dec
stos
inc
mov
je
or
hlt
leave
pop
fisttpl
mov
lea
enter
fwait
clc
leave
popf
mov
sub
mov
and
cmp
add
test
dec
push
shrl
dec
add
pop
inc
pusha
inc
cmp
adcl
jo
ret
ret
pop
in
cmp
out
repnz
adc
sbb
jge
fsubrs
or
fbstp
xchg
pushf
mov
jne
stos
dec
hlt
enter
mov
lods
testl
pop
imul
in
push
sbb
mov
inc
setle
inc
sub
insl
test
in
cmp
dec
pop
jg
push
leave
outsl
push
cmpsb
mov
add
adc
loop
or
out
lahf
ja
mov
xchg
or
rorb
call
lret
add
xchg
rclb
pop
xchg
xlat
and
ret
pop
sub
jle
add
jp
xor
mov
mov
xor
mov
adc
call
loopne
lret
push
scas
and
sbb
js
cmp
mov
add
aam
dec
xor
mov
adc
pushf
cmp
arpl
dec
ja
lods
mov
loope
ret
xchg
push
push
test
cmp
sbb
loope
ret
jne
les
and
lds
fistpll
cmp
lahf
or
rcr
sub
out
cmp
dec
mov
jp
shll
repz
out
repz
mov
push
pop
inc
orb
mov
leave
repnz
cmpsl
mov
shll
into
xor
sub
pop
mov
gs
xchg
shll
xor
loope
js
cmp
add
insl
ss
xchg
sarb
rol
andl
aas
jg
pop
and
test
and
rolb
mov
pop
imul
fwait
push
jno
mov
out
aas
sub
imul
and
cmpsl
or
cmpsb
fldt
xor
sbb
adc
mov
aam
jecxz
inc
xchg
mov
out
je
push
mov
repz
addr16
push
fisubrl
adc
mov
inc
ljmp
in
ffree
cmp
das
or
cmpl
and
mov
jno
mov
add
daa
pusha
in
dec
push
fidivrl
ret
adc
mov
call
in
fldl
xchg
or
rcrb
aaa
xchg
lret
daa
inc
testl
mov
pushf
nop
mov
sar
inc
or
jge
adc
lret
pop
jle
lods
repz
pushf
nop
mov
dec
into
sahf
sahf
addr16
sbb
popf
mov
xlat
in
out
push
mov
ffree
xchg
loop
aam
sti
xchg
out
out
mov
not
movsb
mov
jmp
popa
insb
mov
fdiv
lcall
lcall
sbb
in
mov
add
repnz
xor
push
int3
dec
adc
scas
popa
cwtl
add
rcll
sbb
dec
bnd
pop
rcrl
mov
adc
enter
lcall
mov
cmp
jb
lahf
sub
pop
test
cmp
sbb
push
mov
xchg
pop
sbb
jmp
adc
xchg
ret
jo
cmc
fbstp
pusha
push
dec
imul
xchg
iret
push
cmc
lock
pop
stc
jg
sbb
call
jge
insl
xchg
xlat
cli
leave
cmp
xchg
in
inc
icebp
sub
ljmp
mov
icebp
les
pusha
mov
stc
inc
sub
and
inc
mov
inc
fsts
je
mov
movsb
cmovs
xchg
push
cli
mov
test
push
loope
pop
fisttpl
cmp
cmp
and
ret
jb
loopne
hlt
pop
pop
lock
sub
data16
xchg
mov
mov
std
inc
loopne
dec
je
mov
call
or
pop
lret
inc
mov
leave
pop
inc
roll
pusha
push
andl
dec
xor
inc
mov
stos
rorl
xchg
jno
and
es
push
xchg
loope
aas
sbb
nop
hlt
and
leave
imul
push
cs
xor
inc
es
lcall
or
pop
bound
mov
push
xor
lahf
loopne
xor
sbb
mov
in
add
pop
jle
ss
iret
clc
outsb
outsb
jecxz
push
cmp
adc
and
and
test
in
imul
aas
ljmp
and
call
mov
mov
adc
enter
xor
jae
xchg
ss
stc
cmp
sbb
call
bound
pop
cmpsl
adc
shrl
leave
push
fs
jmp
and
mov
pop
les
test
fiaddl
rcrb
jmp
and
sub
fs
aas
les
je
pop
hlt
rcl
cmpxchg
fsub
mov
stc
sub
inc
sbb
mov
dec
cmpsl
ret
inc
xor
sbb
jne
mov
mov
mov
mov
inc
inc
mov
pusha
das
aam
dec
movsl
push
dec
push
cmpsb
data16
jne
xchg
inc
ljmp
mov
addr16
clc
stos
sub
nop
test
call
cmpsl
sub
jmp
xchg
inc
fldenv
pop
mov
mul
xlat
in
pusha
cmc
fiadds
pop
adc
inc
jb
das
cmp
jmp
xchg
cld
cmp
mov
iret
into
insl
xchg
aas
inc
stos
mov
mov
sbb
in
pushf
int
scas
push
sub
add
dec
nop
into
push
cmpsl
mov
push
out
adc
in
and
ljmp
or
jno
adc
call
cmp
dec
adc
cmp
mov
repz
out
cmp
sarl
adc
pop
rorb
scas
fisubrl
inc
insb
mov
sub
std
sub
rcrb
pop
mov
or
rorl
loop
and
arpl
pop
push
add
xor
pushl
stc
outsl
insb
push
inc
sub
mov
dec
jne
and
push
mov
add
in
xor
cmp
adc
mov
dec
jp
inc
pop
xchg
gs
stos
movsb
mov
inc
loopne
rcll
jae
stos
lods
pop
sub
aam
and
lret
mov
mov
pusha
lret
xchg
mov
dec
push
mov
es
inc
repnz
rcr
add
xor
xchg
scas
push
push
mov
jmp
imulb
inc
inc
lahf
je
rcrl
mov
lds
mov
jmp
mov
faddl
shlb
movsb
cmp
mul
pop
aaa
repnz
adc
xchg
xchg
pop
push
jo
lock
mov
mov
imulb
push
pop
mov
sti
mov
imul
mov
clc
dec
jns
incb
cmpsb
mov
dec
pop
mov
movsl
dec
mov
xchg
push
cwtl
push
arpl
add
push
aam
lret
xchg
sub
imul
pop
inc
mov
test
mov
outsb
pop
dec
jg
ficoms
push
mov
dec
xchg
sbb
sbb
aam
xor
pop
add
xchg
sub
fs
in
add
insl
outsl
test
in
rolb
sbb
mov
xor
and
pushf
jg
xchg
pop
lahf
ds
add
rorl
cwtl
and
pop
pop
xchg
arpl
imul
loopne
xchg
out
test
jbe
add
test
std
jae
outsl
mov
jmp
mov
jo
dec
pop
jmp
sbb
lcall
jns
and
add
loopne
dec
das
aad
int3
sub
cmp
push
xchg
push
imul
aad
bound
cltd
xchg
nop
call
xor
sub
and
jae
or
addr16
inc
cmc
cli
imulb
out
loop
sub
das
inc
pop
mov
movsb
pop
push
lods
dec
cwtl
cmpsb
xor
out
xchg
dec
mov
adc
adc
and
or
push
jne
cltd
pop
push
mov
jle
xchg
btc
test
xor
outsb
lods
xchg
jno
outsl
xchg
mov
adc
sbb
ret
cmc
mov
stos
addr16
cmp
push
lods
flds
outsb
leave
sub
cmp
loopne
jecxz
leave
scas
sbb
wrmsr
xchg
cmc
xchg
scas
jp
leave
dec
xchg
pop
jb
fs
inc
out
out
lcall
idivl
mov
lea
popf
daa
scas
sbb
dec
in
sub
xchg
pushf
jo
imulb
or
pushf
pop
mov
out
dec
jo
das
fsubrl
dec
pop
cmp
scas
repz
testb
inc
cmp
loopne
pop
and
sub
push
mov
mov
out
add
nop
cld
fbld
mov
lock
push
sbb
in
cld
jb
mov
sbb
pop
mov
add
inc
lods
dec
loope
fsubs
out
addr16
ss
sti
nop
xor
push
pop
mov
xor
shll
cwtl
xor
bound
cmc
movq
pop
ljmp
je
ja
mov
dec
lahf
pop
aaa
mov
xchg
mov
push
pop
mov
push
sbb
push
adc
and
dec
bound
jle
mov
arpl
add
and
je
inc
mov
cld
pop
call
cmp
sub
jp
and
rcrl
xchg
xor
jne
fs
inc
aad
mov
fs
pop
adc
xchg
loop
lahf
lock
mov
aas
dec
jne
cmc
js
stc
cmp
jns
cmp
testl
push
popl
pusha
push
outsl
es
xchg
daa
inc
aam
bound
dec
insl
cld
inc
movsl
jge
jne
xchg
aas
add
in
or
push
lock
test
mov
and
leave
shrb
adc
pop
popa
repz
sahf
sbb
loope
rcl
repnz
mov
nop
and
sbb
data16
dec
shll
fwait
lcall
xor
mov
xchg
push
hlt
xchg
inc
shll
push
ffree
ror
ret
shll
or
into
in
faddl
icebp
inc
movsb
sti
int3
jecxz
xchg
or
dec
pop
mov
mov
bound
arpl
pop
pop
popf
jge
sti
adc
inc
or
add
cmpsb
cli
cwtl
dec
xor
es
icebp
je
pop
outsl
idivb
out
rolb
jl
inc
int
lcall
pop
xchg
shl
xchg
sbb
sub
pushf
cmpsl
hlt
sub
mov
dec
pushf
xchg
pop
aad
je
bound
hlt
jns
adc
aas
sahf
into
int3
xor
mov
or
fdivrp
mov
mov
shlb
nop
jns
jnp
arpl
into
and
fwait
dec
push
lret
sbb
daa
test
lcall
idivb
cmpsb
ljmp
jae
dec
rcll
inc
inc
inc
inc
filds
mov
xor
inc
cld
push
bound
dec
mov
mov
adc
imul
pop
mov
mov
jmp
ret
mov
popaw
outsl
lds
add
lds
out
icebp
xor
ret
fistps
ret
imul
sub
int
bound
dec
mov
lods
sub
or
outsl
mov
and
mov
popa
loope
add
xorl
jb
add
sbb
sub
flds
fs
fistpl
gs
sub
insb
ret
xchg
rolb
and
inc
sarb
lret
sub
inc
rclb
mov
mov
stc
divl
std
jmp
or
xchg
pop
jnp
xchg
cmpsl
push
xchg
mov
or
xchg
divl
mov
mov
sub
pushf
sub
fnstcw
fs
mov
ja
xchg
scas
sbb
ss
sub
lcall
out
lret
sub
sub
mov
xor
std
xchg
je
cmp
faddl
sub
repnz
jbe
or
adcb
mov
push
pop
mov
dec
lock
into
push
and
xor
shl
mov
ds
inc
daa
loopne
test
add
inc
push
scas
adcb
clc
or
ret
mov
fistpl
in
add
adc
lods
shl
frstor
shl
repz
testb
stos
jo
mov
daa
jl
jecxz
jmp
add
lret
or
sbb
inc
sub
imul
aad
inc
pop
sub
push
enter
xorb
lds
sub
stc
sbb
mov
inc
adc
cmpsb
cmpl
pop
mov
out
mov
mov
jmp
pop
add
lods
sbb
cmp
or
decb
push
xchg
push
sti
push
test
xchg
call
sub
hlt
leave
inc
xor
adcl
jne
out
sub
cmc
shlb
mov
sbb
pop
push
adcb
mov
jno
int
add
mov
sbb
test
adc
insl
and
lret
or
cmp
pop
mov
inc
clc
or
and
faddp
dec
mov
pop
cmc
push
pop
jae
cmc
xor
and
inc
loope
sbb
sti
xorl
leave
or
push
sahf
jnp
add
xchg
adc
bound
xchg
xchg
scas
sbb
xchg
xchg
sub
push
shl
cmpsb
or
pop
orl
daa
in
adc
xchg
cli
icebp
jge
icebp
fstpl
add
sarb
out
pop
fisttps
mov
nop
sbb
out
mov
pop
in
jbe
fs
gs
roll
mov
test
rorl
jle
cmp
bound
mov
xchg
mov
scas
loopne
pop
pop
pop
fcomi
stos
xor
mov
subb
pop
mov
pop
repnz
mov
jmp
fdivrs
or
sahf
push
out
xchg
repz
push
sbb
jbe
sub
jmp
and
dec
mov
jmp
jbe
movsl
jle
sub
or
rcrl
daa
inc
daa
fiadds
nop
push
xchg
xor
int3
lret
loop
aam
push
ja
mov
mov
outsb
mov
test
inc
mov
mov
pop
or
enter
addr16
pop
mov
mov
jl
sbb
cmp
adc
sub
cmpsl
pusha
xchg
add
mov
mov
xlat
ret
xor
ss
mov
sarb
fmull
push
lahf
lahf
leave
mov
xor
add
dec
imul
daa
jg
test
sbb
cmp
push
cmp
jns
push
push
scas
push
mov
mov
dec
xor
out
push
out
cs
sbb
aas
xchg
fxtract
adc
jno
cmp
fisubrl
std
adc
shlb
mov
cli
pushf
inc
imul
add
xchg
jg
cmp
jp
cli
lcall
adc
sbb
fwait
data16
add
jb
inc
mov
pusha
pop
rorb
dec
mov
xor
pop
mov
lcall
les
fisubl
out
popf
enter
loopne
jnp
iret
orb
fdivrs
pop
lea
lret
adc
in
lods
pop
mov
add
js
leave
das
dec
sbb
mull
mov
mov
lods
inc
mov
xchg
or
push
jmp
les
add
ret
adc
les
mov
or
pop
pop
sub
sub
sub
loope
std
dec
xchg
in
mov
cmp
aas
add
out
lret
xchg
fs
addr16
and
push
js
add
int
in
mul
inc
xchg
cltd
rcr
sub
jecxz
xor
aad
leave
sahf
inc
imul
out
movsl
mov
and
jae
adc
pop
fsubrs
ds
inc
dec
mov
loop
mov
xor
inc
test
imul
loopne
and
pop
add
in
mov
push
fwait
jns
test
movb
jecxz
cmp
push
push
call
shrb
cmpsb
xchg
adc
xchg
sbb
gs
jno
mov
push
fcoml
inc
lret
push
lock
cs
test
xor
xor
lods
inc
cmp
or
or
addr16
lret
dec
push
fs
std
lret
jp
xchg
lock
test
adc
mov
movb
shrb
loop
fdivl
mov
or
mov
aas
cmp
aam
push
mov
ret
cmp
ds
shll
orl
std
jle
outsb
jnp
push
scas
sti
and
inc
gs
xchg
lea
pop
es
push
lret
ss
int
pop
pushf
or
js
sti
push
push
pusha
push
xor
pushf
addr16
mov
xor
cmp
sbb
bound
mov
jns
push
cmp
cld
mov
or
cmpsb
push
jecxz
nop
mov
aad
test
mov
fildl
and
cmp
dec
push
mov
add
or
loopne
push
pop
cltd
sbb
push
adc
fmulp
icebp
mov
es
mov
pop
jmp
adc
clc
es
mov
std
dec
cld
cmp
push
add
mov
dec
pop
loopne
xor
xchg
gs
fcompl
sbbl
add
arpl
sbb
mov
sbb
aaa
dec
sbb
rcr
mov
cmp
js
or
or
clc
cwtl
outsb
shrl
or
sbb
push
dec
hlt
cmp
test
out
push
imul
cmp
cmc
cs
and
pop
dec
sub
rol
mov
lods
insl
push
stos
and
jne
xor
cmp
test
mov
pop
outsl
lea
mov
or
shlb
pop
xchg
int
sbb
in
mov
aam
xor
sbb
imul
mov
jne
pusha
xchg
aam
faddl
fisubrs
sub
pop
dec
in
xchg
test
out
orb
jmp
rclb
mov
xchg
cwtl
leave
js
mov
mov
stc
cmp
jne
sub
sbb
mov
movsl
out
rcr
in
imulb
subl
add
xchg
loopne
and
orb
lds
or
pop
push
xchg
push
mov
mov
xor
imul
mov
cmp
test
fimull
loopne
pop
out
mov
rcll
ljmp
sbb
repz
adc
notb
xor
lcall
push
dec
jmp
xchg
ror
dec
adc
pop
sbb
fbld
jp
pop
leave
scas
sbb
aas
jnp
scas
xchg
mov
pop
push
scas
test
cwtl
sub
popf
dec
mov
cs
cmc
fisubs
xchg
shrl
mov
adc
jecxz
insl
mov
pop
ljmp
add
push
mov
cmpl
xchg
adc
das
sub
mov
xchg
push
aas
xor
jmp
cmpsl
sbb
ss
lahf
leave
dec
push
loopne
cltd
jnp
rorl
mov
mov
data16
loope
xchg
ljmp
lahf
ljmp
push
jp
mov
jo
lret
push
lret
lods
lahf
cmp
xchg
or
dec
arpl
jo
ret
aam
xor
imul
jp
imul
out
cmp
imul
adc
inc
dec
and
jae
sbb
les
movsb
jb
inc
push
fisubrl
cmp
jo
xor
dec
and
popa
repnz
mov
sbb
mov
cli
mov
push
inc
inc
and
mov
lods
and
mov
mulb
ljmp
sub
enter
mov
into
aas
imul
xchg
xchg
testl
sbb
insl
pusha
push
mov
and
pusha
in
mov
loope
lahf
xchg
das
notl
ja
sub
jno
imul
dec
cwtl
sub
cwtl
adc
mov
jle
lret
jns
sub
testl
sbb
lret
mov
dec
and
cmp
sbb
jg
pusha
pop
pand
inc
adc
push
jg
mov
jmp
mov
arpl
dec
inc
jns
dec
pop
fisubrl
adcl
add
and
clc
fnstenv
inc
pop
orl
rorb
ds
jle
in
test
push
xchg
icebp
fcoms
fwait
cwtl
nop
repz
or
add
das
jmp
add
push
push
pop
in
hlt
jbe
jp
add
test
dec
push
xorb
fcomps
cmc
inc
test
nop
or
cltd
addl
movsl
into
push
add
sbb
pop
adc
into
inc
mov
pushf
and
test
loope
imul
push
dec
call
subl
jmp
call
inc
xchg
or
add
ljmp
and
push
push
in
jo,pt
fiadds
stos
es
push
cwtl
mov
push
inc
add
adc
lret
sub
pop
jbe
pop
in
inc
push
ja
dec
mov
add
adc
jmp
ret
test
cmp
out
cld
scas
iret
jl
testl
sahf
mov
sbb
add
sahf
mov
not
clc
pop
xchg
inc
cmp
mov
icebp
test
rclb
cmp
out
or
sbb
mov
icebp
cwtl
mov
or
and
jge
int
cmp
and
ljmp
sub
dec
mov
mov
add
sub
ljmp
jae
cmp
test
xor
dec
lea
mulb
and
add
push
jno
or
movsl
insb
mov
les
in
test
cmp
sahf
negl
push
jno
xchg
push
jne
dec
cmp
dec
pushf
pushf
xor
ja
dec
sub
pop
adc
insb
fldl
pop
mov
ret
push
pushf
out
jp
daa
gs
add
repz
push
inc
add
mov
pop
scas
insl
dec
sub
rorl
inc
nop
push
out
push
jp
dec
cmp
ljmp
mov
push
mov
flds
imul
cwtl
push
dec
mov
cmp
and
pop
movsl
out
and
push
xchg
xor
adc
rcll
dec
or
mov
ret
insl
test
subb
lods
push
rclb
mov
jbe
push
pop
hlt
adc
mov
popf
pop
sbb
lea
or
add
xor
icebp
out
or
ss
stos
lea
inc
sub
hlt
mov
mov
imul
mov
mov
mov
add
lahf
out
inc
push
mov
stos
sub
es
test
cmc
ficomps
movsl
xchg
inc
sub
mov
das
inc
push
xor
and
lock
enter
hlt
sub
fildll
sub
loopne
or
out
add
dec
test
out
pop
inc
test
pusha
add
imul
sbb
ljmp
or
push
jns
dec
hlt
sub
sbb
sub
sub
add
lds
mov
loope
mov
cld
push
pop
test
push
dec
mov
fstl
stos
inc
mov
arpl
adc
mov
nop
leave
data16
test
xor
inc
mov
outsl
movsl
sub
and
test
xor
xchg
xchg
lret
xlat
mov
dec
ret
out
jg
sbb
sbb
imul
out
sub
sbb
mov
mov
push
inc
lods
test
mov
xor
dec
cmp
and
mov
popf
insl
filds
loope
in
add
cmp
sub
mov
dec
loope
dec
sahf
in
js
shlb
and
fs
mov
lret
push
mov
insb
popf
or
jbe
add
lret
int3
pop
adc
cmpsb
pusha
and
sub
push
cltd
aas
int3
loope
sti
xchg
cmpsl
pop
test
adc
jg
xor
in
pop
pop
sbb
push
mov
mov
loop
scas
mov
cmc
loope
cmp
or
test
ucomiss
inc
push
popa
sbb
mov
movsb
ljmp
dec
pop
mov
stos
pop
std
xchg
cmp
mov
sbb
sbb
fwait
pop
je
or
push
push
enter
js
cmp
pushf
xchg
add
mov
sub
mov
add
cmp
neg
mov
mov
fdivl
test
push
add
out
imulb
addr16
jnp
add
push
or
xorb
xchg
idivb
adc
popa
bswap
add
fisubrs
mull
dec
sub
pop
mov
cmp
shll
jnp
dec
and
mov
xchg
into
aad
and
push
loope
les
scas
and
mov
int
int
sub
sti
inc
daa
push
addr16
dec
mov
lea
sbb
mov
inc
sti
mov
stos
adc
in
push
rolb
rcr
pop
xor
jo
rcl
mov
bound
pushf
cmp
cmp
adc
push
lea
ficomps
dec
sbb
shl
xchg
lret
push
jne
movsl
data16
cmc
mov
data16
sar
cmp
xor
fisubrl
insb
dec
fsubs
mov
lds
xor
jno
push
xchg
and
inc
testb
adc
mov
jl
push
lret
mov
filds
and
inc
test
push
add
fwait
sub
insl
inc
int3
test
push
sahf
mov
sub
lahf
pop
xor
pop
xchg
adc
out
daa
mov
cmpsb
push
mov
into
lret
into
fs
andl
push
or
or
and
sbb
out
or
aas
adc
push
daa
outsb
mov
add
and
sbb
dec
add
imul
sub
sub
sub
outsl
push
movsl
arpl
pop
subl
mov
js
hlt
mov
gs
jg
lds
gs
jo
icebp
mov
or
cwtl
sbb
inc
data16
out
add
sub
aad
and
or
add
mov
int3
xchg
arpl
dec
mov
rorl
mov
jbe
xchg
or
addr16
jb
xor
ret
inc
cmpsl
gs
jg
sbb
push
and
icebp
push
lcall
clc
sbb
sbb
push
sub
ret
popf
xchg
mov
mov
or
pushf
imul
clc
xor
mov
aam
xor
xor
mov
mov
dec
sarl
sti
inc
movsl
flds
int
adc
cmp
sbbb
inc
test
movsb
js
lret
test
arpl
mov
or
imul
xchg
push
jne
std
xchg
or
add
mov
pop
sub
or
int
mov
inc
loopne
test
and
jle
xor
popa
lods
scas
push
jmp
divl
pop
sahf
add
stos
cmp
add
cmc
cmp
add
mov
test
inc
mov
pop
incl
push
nop
jle
into
fsubl
mov
push
mov
rorl
outsl
fcompl
lahf
cs
xchg
cwtl
dec
inc
mov
test
cmpsb
adc
ret
jb
cmc
xor
je
dec
jle
sbb
dec
int3
mov
and
sbb
xchg
not
pop
mov
pop
jne
jecxz
push
enter
aas
jae
fstps
fcomps
mov
mov
js
xchg
jns
jnp
push
pop
pop
xchg
xchg
negl
mov
mov
sbb
stos
xchg
jecxz
inc
sub
push
lods
mov
mov
xchg
and
shll
adc
mov
mov
cltd
pop
cmpsb
add
flds
cwtl
sbb
push
or
sub
insb
call
shlb
divl
loop
jno
mov
lods
mov
add
dec
shlb
and
cmp
sbb
cmp
adc
push
aad
je
call
lds
lods
jle
pop
and
pusha
jge
lsl
mov
adc
xor
adc
sub
imull
shrl
stos
popa
pop
xlat
xchg
pop
jnp
mov
in
fldcw
sbb
sub
lods
sti
lcall
pop
call
cmpsl
popf
fs
jns
lcall
xchg
adc
pop
fbld
out
mov
je
leave
fdivl
and
push
pop
mov
inc
and
sahf
jecxz
scas
clc
loopne
and
daa
jmp
arpl
mov
xor
cmp
sbb
bound
dec
lds
mov
outsb
enter
inc
out
add
lahf
aaa
loop
out
fistpll
ljmp
inc
inc
adc
in
jp
mov
cld
mov
shlb
stos
xchg
cmp
inc
jg
sub
fxch
cmpsl
inc
jo
mov
cmp
xor
scas
add
loopne
fsubrs
call
xor
jg
inc
lahf
mov
rcrl
add
hlt
push
lods
and
lds
inc
xor
sbb
or
mov
dec
push
dec
fists
pop
push
mov
outsl
jne
adc
inc
into
jno
loop
in
add
mov
fildl
adc
jb
hlt
and
xor
nop
icebp
adc
or
ja
imull
out
ja
xor
xor
xor
scas
pop
mov
data16
mull
push
es
out
shll
xor
fucomp
lcall
ffree
into
push
dec
es
nop
ja
stos
bound
in
in
fwait
subb
inc
sub
fisubl
sbb
fisttps
clc
test
bound
mov
in
push
mov
cltd
jns
sbb
test
adc
mov
call
fsubrs
and
adc
pushf
jg
lds
and
inc
ret
mov
dec
mov
call
sbb
ss
fldl
sub
inc
rcll
test
cltd
lock
and
dec
lcall
daa
aaa
sbb
arpl
add
ds
adcb
popf
jle
imul
je
jge
push
mov
call
cmp
scas
fimuls
mov
insb
sub
aad
dec
daa
stos
bound
dec
pushf
inc
lret
mov
test
push
popa
jnp
dec
mov
pop
jecxz
data16
test
push
nop
jb
fstps
fsts
mov
cmp
cltd
pusha
cmp
fstpt
dec
dec
and
mov
cmp
pop
sbb
and
daa
rclb
dec
push
adc
xor
push
in
xchg
sub
cmpl
inc
mov
lcall
cltd
mov
xor
adc
pop
pop
inc
lcall
jnp,pt
sub
nop
dec
fs
inc
inc
add
jg
movsl
mov
sub
dec
aad
incb
add
mov
leave
pmaxub
mov
push
std
push
push
dec
dec
xchg
test
mov
mov
push
lret
pop
clc
inc
jg
pop
lods
pushl
xchg
sub
jns
out
or
adc
xchg
sbb
add
pop
js
or
jp
jo
mov
sub
iret
pop
xor
loope
test
sub
and
push
shrl
cmp
pop
loopne
sbb
push
push
xor
nop
aas
inc
inc
adc
pop
mov
xchg
mov
rol
cltd
mov
ds
outsl
inc
nop
or
cs
pushf
adc
pcmpgtd
adc
and
jb
mov
cmp
cwtl
sbb
xor
scas
test
mov
dec
mov
jo
das
adc
mov
scas
shrb
int
iret
push
lock
iret
mov
or
jo
out
xchg
repnz
xor
push
jmp
fmull
aad
cmc
rolb
enter
sub
testl
xchg
pushf
nop
dec
out
addr16
dec
nopl
or
cmc
sarl
orl
jae
in
jge
push
icebp
fstpl
sub
jo
lret
dec
test
jmp
out
in
xor
shlb
adc
dec
out
jnp
sbb
jo
in
adc
outsb
stos
mov
dec
mov
push
dec
repnz
dec
sbb
xchg
add
and
inc
iret
jge
jle
push
insb
fwait
dec
jo
popa
mov
outsb
test
xchg
cmpsl
push
add
into
shl
xor
lods
sbbb
pop
xchg
mov
pop
dec
jno
repnz
mov
nop
push
sbb
test
xor
xchg
bound
mov
aad
repz
xor
sub
outsl
out
out
call
push
push
pushf
cmc
jge
mov
stos
mov
sbbb
push
xchg
mull
je
cmp
xor
push
jp
verr
jno
push
push
fiaddl
and
push
fmul
xchg
stos
dec
xchg
gs
jmp
mov
daa
cmpsl
xchg
cmpsb
aaa
or
daa
and
mov
in
stos
lods
aas
scas
and
scas
xchg
sahf
popf
movsl
add
lods
popf
mov
out
fstps
push
xor
addb
push
in
ror
push
push
mov
mov
push
mov
adc
inc
sub
or
sbb
in
loop
mov
aaa
ljmp
rcl
std
sub
hlt
movsb
sub
ljmp
cs
xchg
jl
ds
mov
jge
or
jno
pop
jl
sbb
in
xor
add
in
jg
dec
inc
aam
ljmp
aaa
negl
dec
test
and
or
mov
cwtl
jb
xor
rcll
rorb
or
inc
inc
push
cmp
jne
loopne
lret
pop
roll
add
jnp
repz
jmp
cs
jl
cwtl
mov
or
add
aaa
inc
mov
aam
pop
mov
aas
insb
andl
xchg
test
dec
jne
out
mov
aas
scas
cmp
test
xchg
jmp
xchg
adc
in
cmp
out
xor
leave
test
mov
in
addr16
jae
xchg
aam
lods
aaa
scas
out
jge
inc
or
repnz
or
scas
mov
cmp
test
mov
xor
xchg
cmc
inc
jno
inc
fldenv
jle
repz
jle
out
lods
xor
sarb
out
dec
or
rcl
xchg
bound
cltd
push
or
dec
dec
out
decb
xchg
mov
add
jno
bound
js
mov
rcl
scas
mov
and
mov
add
pop
lock
inc
add
fcomps
and
cmp
adcl
mov
mov
out
xchg
cli
inc
sti
aam
aam
mov
nop
and
jae
rcrb
add
push
lea
dec
subb
mov
ds
inc
mov
popa
push
jle
aam
ss
inc
mov
inc
xchg
inc
outsl
das
push
sti
test
ret
cwtl
idiv
mov
xor
pop
add
jecxz
sarb
cmpsb
lds
int3
in
or
popf
repz
js
stc
cmp
xchg
test
orl
xlat
dec
ret
dec
cmp
sbb
inc
inc
mov
mov
xchg
lret
jne
push
mov
xor
sbb
xchg
lods
call
lock
mov
sub
mov
ret
test
mov
mov
and
sub
cmpsb
cmpl
inc
iret
mov
sahf
imul
dec
ret
sub
popa
xchg
daa
xor
sub
jl
mov
test
lds
push
fidivrl
dec
inc
dec
loopne
repz
aaa
lock
gs
lods
xchg
cli
xor
push
xor
ja
incb
test
inc
push
inc
pop
mov
cmp
cmc
jnp
sbb
sarl
nop
ret
std
xor
test
test
aas
out
xchg
scas
inc
les
and
repnz
and
aas
mov
xor
or
push
cld
cmp
xchg
dec
xor
inc
xor
stc
jb
mov
sbb
push
xchg
sbb
cli
sbb
pusha
sti
aaa
adc
lahf
pop
fsubl
divl
mov
xchg
ljmp
pop
imul
fildl
mov
mov
mov
sub
mov
sti
stc
mov
mov
bound
cmp
incb
and
test
or
call
pop
popa
xchg
bound
pushf
mov
and
mov
notl
push
sub
aad
insl
lods
push
xor
sahf
adc
nop
out
mov
mov
jge
fnstcw
jnp
or
test
mov
vpminsw
inc
or
imul
jo
jno
stc
in
dec
or
jns
jg
mov
es
in
loope
test
ljmp
push
jb
adc
fistps
bound
adc
scas
psraw
cmp
popf
in
popa
leave
pop
outsb
sbb
out
jle
mov
popf
lret
addb
jns
test
js
lret
lds
push
pusha
inc
and
jl
sahf
cmp
or
psubusb
fildll
push
int3
cmp
xchg
imul
lds
in
in
inc
pop
addl
addr16
mov
mov
cli
es
xor
pop
add
outsl
fisubrs
mov
and
aad
inc
arpl
movd
mov
inc
ret
idivl
movsl
jo
or
push
ret
and
ja
gs
xchg
ret
lods
xchg
cltd
pop
push
mov
add
rclb
pop
adc
sahf
or
out
in
icebp
xchg
imul
add
lea
andl
lahf
inc
ljmp
movsl
push
cltd
pusha
movsl
adc
push
xchg
mov
mov
ja
xchg
pop
inc
sbb
in
pushf
cwtl
int
aam
push
sub
push
ja
mov
and
sbb
cmp
testl
sbb
add
cmp
jecxz
cwtl
xor
in
imul
jae
xor
xor
and
xchg
or
xor
xchg
xor
and
out
adc
scas
sahf
imul
or
movsb
pop
pop
call
pop
mov
mov
sub
pop
push
and
xor
fld
mov
xchg
sub
cwtl
xchg
xor
jle
xchg
jno
pushf
push
xor
adcl
loope
sub
mov
mov
sub
cmp
mov
jns
out
jb
sub
push
or
xor
push
and
mov
rcrb
loope
cli
adc
push
pop
aaa
nop
sbb
js
rcrb
ja
add
jl
orl
cltd
push
lock
stos
aam
xchg
adc
and
mov
or
mov
pop
sub
movsb
in
adc
fisubl
inc
mov
pop
clc
add
lds
or
xor
pushf
xor
add
outsb
mov
xor
xlat
and
aam
cmp
jp
or
dec
imul
sub
les
adc
and
imul
cmc
pop
imul
leave
mov
out
sbb
sarl
mov
jle
loop
repnz
mov
dec
cmc
insb
pusha
pop
inc
dec
add
stos
fstl
out
scas
cmp
pop
xchg
xchg
cli
mov
add
testl
arpl
stos
push
push
setnp
lret
test
ret
outsb
push
fsts
imulb
push
pop
sub
je
cmpsb
mov
push
xchg
sbb
sbb
stc
cmc
jge
loope
inc
arpl
push
mov
movsl
shrb
mov
jnp
gs
push
mov
es
std
lds
mov
lods
cmp
cmc
dec
into
test
loope
inc
dec
mov
xchg
xchg
mov
push
mov
add
fsubrl
adc
int3
insb
shll
jbe
insb
pop
push
xchg
lea
aam
insl
inc
dec
adc
popf
inc
jb
fldl
dec
test
stos
rorl
shl
popa
xchg
fdivrl
mov
out
sbb
lcall
push
out
xchg
mov
push
outsb
xchg
fsubrp
xchg
test
outsb
decb
pop
shrl
and
in
fldl
jno
inc
inc
jg
cmp
sub
cmpsb
sub
xchg
or
cmp
testb
cmp
add
in
mov
test
mov
mov
sbb
inc
xlat
pop
in
pop
cmp
sub
mov
ficoml
cmp
mov
into
dec
xchg
daa
jle
and
insl
xchg
cld
stos
addr16
jo
sahf
and
fwait
lcall
inc
pushf
mov
pop
lret
adc
sub
std
mov
sbb
mov
shrl
das
xor
iret
sarl
ljmp
jno
stc
push
mov
pushf
std
cli
gs
clc
sub
rcrb
lahf
repnz
jb
and
mov
imul
int3
js
adc
or
add
enter
aaa
lahf
sbb
mov
les
dec
das
sub
dec
adc
or
in
sub
jae
mov
mov
jmp
cmp
ss
or
mov
filds
pop
push
inc
fwait
sbb
add
and
inc
imul
xchg
xchg
out
pop
sub
insb
es
mov
jae
mov
mov
fcoms
xor
mov
outsb
clc
bnd
jp
hlt
dec
fwait
xchg
jle
mov
xchg
ja
out
sub
and
mov
ret
add
jnp
rcrl
arpl
jnp
jl
mov
das
xor
and
xor
out
adc
shll
pop
cwtl
or
cmp
pop
xchg
outsl
and
repnz
cmpsb
jmp
sbb
adc
cmpsb
rorl
aas
push
and
in
fdivrs
movsl
stos
or
and
loopne
pop
adc
mov
adc
lcall
mov
sbb
or
jle
popf
pop
cmc
sub
es
fsubr
push
lret
pushf
cwtl
push
xor
scas
pop
scas
lods
fwait
in
clc
push
pop
lahf
lret
lret
je
sub
jp
jae
test
sub
and
subb
push
aaa
lea
dec
xor
int
in
leave
lcall
sbb
inc
xchg
pop
out
sub
sbb
jge
mov
aas
mov
mov
icebp
xchg
shl
rorl
pusha
frstor
mov
and
jno
dec
in
inc
cli
mov
xor
jo
ljmp
mov
sbb
outsw
add
push
jl
push
mov
cwtl
push
cmp
ljmp
mov
pop
in
add
inc
jns
or
sub
mov
pop
out
cli
imul
lret
roll
aam
mov
out
jbe
add
dec
js
sbb
mov
out
sbb
dec
and
cmpsl
into
xor
and
sub
hlt
mov
in
insl
ds
pop
mov
testl
imul
int
es
in
popf
cmpsl
mov
mov
pop
imulb
test
inc
pop
mov
xchg
insl
ss
scas
test
rcll
bound
mov
ret
cld
arpl
rol
mov
pop
inc
jmp
mov
xor
cmpsb
adc
and
les
xchg
mov
add
mov
or
mov
dec
dec
sub
jo
imulb
xlat
movsl
shlb
inc
test
push
pop
sbb
and
sub
cmp
sub
daa
push
jns
mov
pop
in
xchg
imul
outsb
push
ret
out
mov
stc
aaa
outsl
mov
psraw
fcoml
push
insb
mov
jno
jb
iret
adc
aas
das
lcall
mov
aam
jge
add
repnz
std
sti
mov
fsubl
into
cmc
jb
or
sbb
cwtl
dec
cmp
aas
cmp
fwait
mov
les
mov
push
push
fwait
ja
push
xlat
or
pop
test
int3
test
lretw
gs
cmp
leave
in
mov
in
bound
mov
jb
xlat
stos
gs
or
mov
add
call
mov
and
add
add
fisubrs
repz
cmp
xor
sahf
jno
lret
inc
subb
inc
loopne
push
push
mov
lahf
int3
add
xor
call
jmp
lock
add
mov
mov
jl
jecxz
inc
jbe
sarb
inc
cmpsl
sbb
and
inc
jl
clc
iret
adc
gs
and
lcall
repz
pop
jmp
cli
xchg
xchg
and
xchg
sbb
add
dec
dec
popa
mov
repz
and
aam
sub
xchg
mov
or
popf
in
int
adc
orb
or
pop
xchg
les
fidivs
push
dec
aad
or
fs
fldcw
dec
add
inc
and
cmp
add
mov
jle
ret
pop
jle
add
or
cs
mov
mov
ja
daa
iret
sbb
inc
stos
aaa
inc
push
test
mov
insl
jmp
xor
enter
sub
jns
enter
adc
daa
mov
push
out
repnz
lods
xchg
shrl
mov
xchg
mov
xor
jb,pn
cmpsb
mov
dec
into
fdivl
fstpl
or
xor
or
dec
fbstp
cmp
pusha
ss
mov
sbb
or
stos
ret
push
subb
sbb
push
mov
jb
subb
dec
pop
or
cmp
jne
mov
pop
int
shrl
scas
or
sbb
js
mov
adc
xor
add
xchg
cmp
ds
cmc
test
mov
mov
sarb
in
sbb
and
lcall
outsl
ret
push
stos
shll
fcmovnu
add
xchg
lcall
xor
mov
cmp
mov
mov
pop
inc
pusha
out
cmp
pop
mov
in
in
sarb
sbb
push
mov
or
sbb
lret
and
xchg
xor
xchg
in
pop
or
cmp
lea
arpl
daa
stos
jp
loopne
insb
jl
push
dec
adc
sbb
aaa
inc
mov
xor
push
stos
out
push
jbe
adc
shl
push
and
jo
xor
cltd
inc
lcall
mov
mov
pop
sub
fsts
sbb
andl
jno
and
pusha
xor
cltd
sbb
dec
jmp
repz
loop
xchg
push
or
jne
mov
add
lcall
push
jmp
xchg
pop
add
push
jae
addl
test
insb
jns
sub
jmp
scas
cmp
xchg
jecxz
inc
dec
sti
push
movsl
stc
out
xchg
mov
adc
cmp
lods
add
adc
fwait
cmp
dec
push
sbb
aas
mov
lret
fsubrs
mov
popa
cmp
sbb
dec
mov
sbb
jnp
xchg
cld
or
mov
lret
or
fmul
imul
jp
xor
mov
lret
mov
cmpl
sbb
iret
cmpsl
test
sbb
xchg
test
mov
or
dec
and
rclb
addl
in
sub
xor
unpcklps
push
pop
jl
sbbb
mov
mov
lahf
lods
pushf
pop
shll
stc
pop
call
xchg
push
incb
cld
push
mov
push
lcall
push
xor
pop
inc
adc
xor
ljmp
icebp
inc
and
sahf
sub
addl
or
sub
imul
arpl
cmp
scas
mov
inc
dec
adc
pop
inc
out
shrb
testb
loop
fdivr
cli
fldl
add
adc
cmpsb
out
mov
jl
loope
stos
mov
repz
xor
push
jp
mov
shrb
pop
jg
inc
dec
fwait
ss
ret
js
push
stc
pop
test
loopne
pop
mov
xchg
orl
xchg
and
dec
push
mov
lahf
insb
mull
mov
fimull
jg
pushf
les
subb
mov
cmp
lods
xchg
int
je
gs
adc
insb
cmp
std
movsb
test
fsts
dec
aaa
mov
cs
loopne
mov
dec
shr
jno
arpl
and
add
stos
xchg
sarb
push
xchg
pop
les
xchg
jp
fldenv
ja
sbb
mov
or
lods
xor
mov
cmpsl
xor
fmul
iret
out
lock
and
mov
push
outsl
push
ss
sbb
out
insl
cmp
dec
jg
sub
pop
daa
outsb
sub
dec
dec
mov
sbb
mov
cmp
push
sbb
addr16
lods
add
fwait
outsl
mov
adc
push
lds
mov
mov
mov
pop
aas
pop
push
jns
mov
and
push
mov
andb
pop
out
and
jecxz
loope
ret
push
divl
lods
sbb
or
mov
jle
push
adc
xchg
out
imul
xor
cmc
bt
dec
xor
sbb
sbb
incl
adc
pusha
lcall
xchg
xchg
mull
inc
inc
adc
mov
out
adc
fldl
fwait
dec
push
sbb
sub
add
imul
cmp
ret
mov
add
loopne
loopne
insl
adc
fwait
jne
push
pop
push
stos
xchg
xor
mov
loopne
inc
mov
xor
daa
adc
add
adc
dec
bound
jo
and
inc
in
pop
rcll
repz
cltd
mov
enter
je
ljmp
in
push
imul
popf
inc
inc
cmpsl
xor
out
xor
mov
lea
xchg
mov
jle
mov
div
mov
xor
sub
dec
inc
loope
add
daa
xchg
cltd
mov
xor
in
mov
mov
lock
mov
cmp
out
sbb
loope
xchg
fldenv
xor
inc
push
sbbb
pop
jno
jp
repz
sbb
lahf
lret
inc
aad
xchg
dec
add
stos
jge
data16
jg
fadds
jl
cmc
andb
xchg
daa
mov
fldl
mov
insb
mov
test
sti
push
shl
xor
lcall
shrb
xchg
push
mov
jmp
pop
nop
jle
jbe
lret
imul
mov
dec
or
inc
scas
inc
inc
xchg
push
push
data16
add
lock
and
push
stc
jbe
es
ret
add
decl
fstpt
nop
jp
inc
lret
jge
stc
lods
jmp
xchg
loop
into
mov
xor
mov
jno
das
add
sbb
in
xchg
cltd
std
jp
jle
pop
mov
stos
mov
repnz
daa
push
ds
lcall
hlt
outsw
rcl
insb
popf
popf
xor
fs
push
movsb
jae
das
icebp
jmp
pop
aad
test
push
orl
inc
and
stos
decl
ja
and
faddl
cmp
add
std
xchg
lahf
aad
xchg
lods
sbb
pop
push
roll
or
dec
les
xchg
test
dec
emms
push
push
pop
pop
fcos
mov
ror
lods
das
mov
fsubrl
cmpsb
int
das
loope
test
gs
loopne
mov
cld
jns
fwait
pop
xchg
jecxz
jb
push
jnp
push
call
repnz
pop
push
inc
adc
xchg
movsl
push
push
push
testl
mov
arpl
std
int3
xchg
arpl
cli
push
add
stos
lea
cmp
ret
xor
and
pop
xchg
fists
or
xchg
lcall
int
lods
jns
in
cli
hlt
int3
shlb
and
out
shlb
push
mov
jae
fwait
sub
and
in
sbb
jae
inc
xchg
jge
imul
fisttps
and
dec
mov
jecxz
bound
mov
dec
or
mov
xchg
les
jecxz
cwtl
lock
lea
lods
cli
xchg
aad
cmc
enter
mov
mov
xor
fcmovu
lds
pop
shrb
inc
xor
pop
outsb
cmp
xor
mov
int3
push
iret
xor
loop
pop
movl
ffreep
mov
shl
sbb
call
out
adc
lods
test
mov
push
daa
lahf
jo
insb
shll
sub
cmp
mov
mov
jmp
mov
xor
dec
jns
fwait
shrl
mov
mov
faddl
cmpsb
jmp
push
clc
push
adc
shrl
decb
aad
lock
pop
mov
and
pop
inc
js
in
repnz
into
out
aaa
mov
shrb
inc
cmpsl
pop
adc
std
sub
scas
popf
test
mov
lock
mov
cmp
fistpll
push
dec
fstl
push
jae
mov
aam
sahf
aas
je
inc
jns
add
push
adc
add
test
lret
bnd
loope
fistpl
scas
pop
mov
lea
dec
mov
je
mov
daa
and
jns
jnp
cld
mov
cs
ja
lds
jmp
sub
orl
out
xchg
cmpsb
out
mov
or
notb
mov
vhaddps
mov
enter
jnp
je
xchg
push
sbb
xor
xchg
je
movsb
cmp
shlb
xor
aam
sub
jns
test
jae
dec
sub
push
cmp
testl
mov
mov
notb
xor
push
outsl
imul
out
nop
lret
fwait
push
repnz
cmpsl
cmp
sub
call
pop
adcb
push
fdiv
mov
sub
movsl
jmp
and
add
or
adc
xor
popl
jl
ljmp
sbb
int
push
es
mov
mov
push
add
sbb
mov
cmp
mov
pop
or
ja
mov
add
in
mov
leave
xchg
or
in
sub
sbb
cli
clc
xor
je
rol
addr16
aad
xchg
mov
add
inc
cld
lods
mov
adc
repz
daa
ljmp
loope
mov
sbb
je
cmp
enter
mov
adc
jnp
mulb
and
xchg
jg
pop
inc
cmp
jo
xor
or
adc
sub
push
mov
cmp
out
inc
mov
test
jl
mov
sub
mov
sub
cmp
shl
sahf
out
or
pop
ja
mov
test
scas
stos
lods
imul
hlt
andl
sbb
idivl
mov
mov
mov
mov
scas
sub
jno
insl
hlt
pop
aam
jb
cmc
cmp
adc
push
imul
push
or
pushf
repnz
mov
mov
bnd
test
cmpsb
xchg
push
lods
adc
repnz
xor
xlat
sbb
jmp
mul
popa
je
js
jno
inc
imul
test
clc
mov
addr16
test
cwtl
movsb
scas
out
mov
nop
stc
out
fsts
call
cmp
sub
xor
cmp
scas
inc
inc
and
or
jae
mov
adc
insl
add
cmpsl
jecxz
add
and
ljmp
ss
xchg
test
movsl
bound
push
test
mov
adc
cmc
xor
out
mov
outsl
movsl
pushf
or
insl
iret
cmpsb
outsb
fildl
pop
and
or
dec
mov
xchg
add
stc
out
rclb
cld
fidivrs
bound
fstp
cltd
xchg
call
mov
ret
and
and
insl
jl
or
adc
jp
push
cmp
mov
xor
push
bound
shll
add
sbb
lock
fimull
insl
inc
mov
xchg
add
jl
inc
ror
ja
scas
lods
xor
roll
cmpsb
xchg
sahf
mov
push
test
mov
or
and
into
outsl
clc
push
or
leave
in
pushf
pop
pusha
mov
xor
xchg
repz
mov
mov
or
in
out
push
pop
inc
lea
jno
add
jno
mov
mov
dec
rolb
nop
test
les
xchg
stos
inc
daa
or
dec
stos
ret
pop
cmp
fcomps
mov
cmpsl
fsubrs
dec
daa
stos
push
scas
mov
icebp
test
and
negb
xlat
adc
jbe
push
mov
xlat
fcmovnu
mov
je
dec
aas
sbb
int3
mov
xor
jp,pn
loopne,pt
xchg
xchg
adc
cmp
cmp
xor
cmp
clc
mov
xor
jle
cmp
push
arpl
addr16
jo
mov
test
sub
pusha
or
xchg
push
pop
and
mov
jl
mov
pushf
ss
mov
lds
sub
cmpsl
call
out
push
in
xchg
pushf
xchg
jl
sti
fucom
fldl
add
jne
xor
ss
fwait
push
mov
cmpsb
mov
push
leave
test
xor
add
ss
cmp
fstps
ljmp
mov
mov
mov
push
sub
test
je
sbb
sub
mov
in
cmp
lods
in
push
jl
adc
adc
mov
ktestb
into
punpcklwd
ret
add
mov
inc
cli
push
mov
pop
push
xor
xor
inc
gs
sbb
sti
and
repnz
scas
and
andl
in
lds
rcrl
xor
ds
dec
hlt
jnp
sub
adc
xchg
jp
ja
cmp
mov
push
addr16
push
fwait
sub
insl
test
xor
mov
push
push
push
jae
cmpsl
mov
or
pop
int3
sub
mov
mov
fiaddl
icebp
pop
stos
stos
lret
sub
mov
mov
in
in
and
fwait
bound
or
mov
ljmp
add
aad
mov
jo
lods
sub
inc
in
mov
int
jns
cmp
adc
movsb
add
movsb
shrl
repz
xchg
nop
sub
adc
xor
mov
mov
pop
gs
add
loop
daa
xor
inc
int
cli
mov
dec
push
movsl
inc
push
ljmp
pop
mov
test
xor
subl
mov
xchg
mov
jae
mov
mov
aad
ret
outsb
cmpsb
sti
inc
adc
ss
inc
outsb
ret
sarb
pop
movsb
fnstenv
mov
push
gs
leave
cmp
and
cmp
sub
cmp
aas
pop
cmp
mov
stos
mov
xchg
leave
cmp
loop
gs
dec
xchg
inc
sub
in
inc
cmp
jle
jne
or
sti
mov
notl
shlb
clc
inc
mov
test
fidivs
mov
hlt
inc
xor
stc
testl
out
lods
aad
fdivrs
bound
enter
leave
aaa
dec
stos
mov
cwtl
add
xchg
mov
or
jb
pop
adc
sar
jge
punpcklbw
jle
shll
jbe
mov
loopne
sbb
fs
mov
sub
stc
jnp
inc
xchg
sub
dec
imull
mov
sbb
mov
enter
clc
mov
and
das
sub
cmp
std
pushf
jl
lret
inc
adc
push
hlt
lahf
test
enter
bound
mov
inc
sub
xchg
dec
push
pop
test
xchg
fld
cmp
andb
dec
mov
sti
das
lcall
inc
cmc
hlt
icebp
stos
out
pop
aas
fcmove
dec
xor
mov
fisubrs
mov
fidivl
sbb
sbb
sub
iret
pop
pop
test
jg
test
test
xor
mov
fdivr
test
mov
pop
jo
mov
ss
sub
je
pop
xchg
adc
push
mov
add
pop
movsl
sbb
push
inc
xchg
cltd
scas
or
daa
jl
rclb
xchg
scas
lret
nop
test
out
stos
shr
and
jbe
mov
int3
fldt
decb
sbb
inc
out
out
mov
and
sub
popa
aas
xchg
inc
fwait
and
mov
push
leave
lcall
mov
test
sub
dec
dec
pushf
xchg
call
in
adc
imul
add
movsb
mov
mov
adc
adc
fwait
xor
loop
xchg
xor
cli
lahf
nop
aaa
cmpsb
push
xlat
lret
jnp
or
push
mov
outsl
xchg
jne
xchg
mov
xchg
mov
lcall
mov
lcall
mov
mov
cmp
inc
pop
sub
pop
xor
mov
cmp
pinsrw
mov
int3
addb
adc
jns
daa
ds
movsb
sub
nop
pop
cmc
lahf
dec
xchg
or
mov
aam
mov
pushfw
push
add
int3
cmpsb
jl
outsb
std
sbb
popa
and
sub
jo
dec
data16
push
neg
sahf
in
clc
xlat
add
push
add
es
xor
sbb
mov
das
lret
dec
imul
jb
test
inc
mov
jl
dec
rcrb
inc
mov
mov
jo
scas
enter
inc
sbb
shrl
jle
daa
xchg
jb
cmpsb
icebp
cmp
pop
sbb
push
imul
or
cld
outsl
daa
test
cmp
aam
dec
int
fidivs
out
sub
pop
out
nop
out
push
xchg
dec
xor
jge
or
sbb
pop
sbbb
fdivrl
shlb
sti
insb
cli
push
adc
inc
sti
pop
ja
or
pop
and
jg
pop
mov
mov
nop
mov
cmp
lods
daa
addb
test
mov
add
pop
aas
pop
sbb
std
adc
push
and
fwait
sti
mov
cmp
popa
dec
lock
sub
outsl
xchg
mov
push
mov
ffreep
shl
insl
clc
rcrb
jbe
pop
xchg
mov
incb
lahf
mov
push
xchg
jl
repnz
cmpsl
js
lahf
ss
sub
xlat
fsubrl
in
cltd
mov
ret
mov
ret
outsb
inc
xor
in
mov
push
decb
stos
adc
jae
fdivs
push
push
stc
push
pop
push
ja
ljmp
insl
sub
or
push
outsb
mov
sub
movsb
mov
and
xor
mov
pop
add
mov
je
adc
and
mov
mov
sub
insl
std
cmpsl
push
arpl
or
xor
xor
out
jno
inc
jecxz
sub
pop
test
test
jmp
push
push
xchg
push
push
cltd
mov
lds
dec
pop
dec
or
sarb
dec
sbb
repnz
repz
enter
js
ljmp
inc
out
aaa
int3
shufps
lods
in
fstl
nop
insb
lods
push
shl
xchg
gs
pop
les
or
divb
call
out
or
decl
std
inc
out
pushf
add
rorl
and
imulb
ja
ret
push
lret
shll
mov
dec
sub
xorl
jmp
adc
pushf
inc
jns
and
xchg
es
int
sbb
mov
fld
and
mov
mov
add
lahf
cmp
sti
andb
mov
ret
js
jecxz
pop
mov
inc
mov
xorl
dec
xchg
xchg
or
xchg
popf
hlt
cmp
add
cmp
repnz
jbe
xchg
xor
popa
xorl
int3
jae
sbb
mov
push
into
bound
int3
jne
add
adc
fisttps
push
inc
in
dec
inc
jecxz
mov
lds
fistpl
mov
scas
movsl
mov
lds
in
inc
fmull
lods
xlat
enter
add
cmpsl
aas
cltd
pop
test
pop
and
loope
mov
movsb
je
push
mov
ret
xchg
inc
mov
dec
inc
lea
and
lods
mov
push
cmc
adc
push
cmp
lahf
and
sbb
ficomps
sub
xor
lahf
xlat
out
xor
call
sub
outsl
cmp
dec
lods
aam
sub
push
mov
cmp
addr16
dec
inc
jnp
adc
cmc
ret
pop
iret
or
inc
imul
lret
lods
rcll
mov
sbb
adc
fisubrs
loopne
cmp
cs
cmp
mov
rclb
dec
das
ret
mov
mov
and
popa
xchg
adcl
inc
push
imul
insl
js
adc
fbstp
mov
shll
jl
lods
test
inc
lcall
cmp
dec
and
pop
or
xor
dec
mov
cmpsl
push
cli
xchg
hlt
pop
xor
or
xchg
sahf
mov
mov
pop
test
or
insb
outsl
nop
mov
fnstsw
mov
sub
xchg
jae
add
nop
mov
cld
fcmovnb
inc
mov
or
xlat
aas
test
pop
daa
pushf
in
addb
mov
jo
mov
ret
inc
xchg
ret
out
xchg
pushl
loop
adc
hlt
and
pop
aaa
fbld
das
data16
sub
ret
jge
xor
iret
mov
in
sbb
ret
mov
cwtl
pop
or
mov
jns
jge
dec
fdivrp
out
inc
int3
out
sbb
idivb
mov
roll
daa
pop
les
fbstp
cmp
test
mov
push
cwtl
mov
jo
adcb
jge
repnz
dec
dec
sti
xchg
insl
mov
pop
sub
out
int3
xchg
es
xor
in
gs
jbe
test
inc
inc
mov
pop
or
ret
mov
xor
jmp
mov
out
jl
mov
mov
and
jnp
xor
xor
xchg
sbbb
ja
push
lock
pop
pop
minps
ficoml
dec
add
adc
jnp
test
ja
and
lret
or
sub
xlat
test
pop
pushf
push
inc
sbb
insl
or
sub
out
imul
pop
inc
xor
cmp
out
lcall
popw
mov
add
sub
xchg
mov
test
pop
or
shl
shll
add
imul
push
push
scas
mov
xorl
bound
mov
jo
jae
nop
lds
popa
movsl
pop
push
pop
shlb
jo
sub
sbb
loopne
jno
inc
aas
imul
fwait
std
push
inc
loop
dec
or
mov
add
rolb
aam
mov
push
ret
xchg
and
jne
inc
in
cmpl
daa
or
push
ret
sub
lods
int3
mov
pop
repnz
add
cmc
fstpt
es
ss
pop
adc
add
push
imul
and
cmp
mov
adc
imull
xchg
nop
fs
popa
jl
jo
add
sarb
xorl
enter
push
std
inc
sarb
mov
cs
aam
pop
mov
fwait
sub
or
xchg
xor
sub
mov
outsb
mov
xchg
xor
cwtl
cld
push
sub
sti
bound
sub
push
mov
dec
lahf
or
xor
push
pop
scas
pop
ffree
cmp
adc
or
les
xor
dec
fucomp
jmp
mov
clc
das
dec
lock
cmp
xorb
jns
lahf
aas
lcall
fistps
jl
hlt
movsl
fldln2
stos
mov
lods
cli
mov
pop
imul
and
xchg
std
iret
push
inc
dec
rolb
xor
xchg
inc
ds
jmp
ficoms
in
cmp
fidivrs
inc
mov
or
xchg
or
out
add
or
lock
out
int3
and
push
outsl
test
sbb
arpl
push
push
rol
inc
sbb
pop
adc
negb
int3
xchg
mov
gs
and
in
dec
shl
add
daa
std
jnp
lret
pushf
stc
inc
fwait
popf
mov
mov
incl
inc
fnstcw
dec
jge
inc
aad
scas
and
or
and
push
adc
jbe
lahf
stos
js
push
addr16
sub
pop
mov
push
aam
pop
iret
test
hlt
xchg
mov
xchg
sarl
jbe
push
fdivl
mov
popf
ret
bound
jl
imul
int
insl
bnd
lock
test
test
jg
jbe
sar
outsl
aas
cmp
in
gs
jecxz
divb
pop
pop
push
pop
int
scas
pop
pop
sbb
jns
xchg
ja
or
sbb
cmpsb
repnz
cs
inc
sub
jnp
pop
dec
lods
ja
jo
sbb
add
inc
dec
inc
sub
out
outsl
xchg
lahf
push
lds
bound
in
loopne
andb
mov
pop
jb
ljmp
into
push
mov
pop
or
es
jae
mov
push
rolb
test
xchg
ds
cmpsl
or
fldcw
pusha
push
xor
popa
movl
and
sti
push
in
aam
adc
or
mov
stc
dec
mov
fnsave
mov
jmp
xlat
into
push
mov
out
jns
rorl
inc
dec
scas
jb
jecxz
lahf
adc
js
stos
arpl
xchg
add
inc
lcall
and
lret
xchg
add
add
mov
sub
jns
jl
adc
bound
lea
cmp
dec
loope
xor
push
cmp
push
addr16
sub
mov
nop
fpatan
rol
mov
and
clc
add
sub
lock
pushf
fists
sbb
mov
ljmp
loopne
fwait
cmp
fimull
enter
push
out
sbb
xor
xor
add
mov
cltd
jno
icebp
fldt
pop
ffreep
stc
loopne
mov
ljmp
dec
lock
out
adc
lahf
sbb
scas
sahf
or
jae
push
mov
jg
inc
inc
cmpsb
dec
mov
adc
dec
out
cmp
popa
dec
sbb
push
fwait
or
jo
add
test
js
adc
inc
cmp
xchg
sub
cmpl
push
xchg
lret
adc
mov
push
adc
lods
sti
mov
xchg
ljmp
jbe
inc
mov
push
cwtl
in
or
mov
xchg
add
push
adc
lods
sbb
mov
or
sbbl
nop
nop
xchg
ret
push
jge
imul
dec
push
push
pop
cmp
aam
stos
jae
xchg
je
push
or
lods
add
pop
sub
sbb
mov
ljmp
dec
daa
bound
or
rcr
xlat
bound
in
js
fwait
xor
ja
cmp
xchg
out
mov
outsl
fcoml
outsb
jae
xchg
in
aad
mov
lea
inc
sbb
cmpb
mov
mov
lods
cld
call
enter
mov
enter
push
inc
je
push
in
pop
arpl
xchg
es
fwait
lock
lea
jmp
fistl
in
mov
pop
loopne
les
or
arpl
lods
leave
sarb
cmp
jae
jle
or
movsl
stos
push
push
popf
out
jno
gs
add
lock
icebp
insl
push
xchg
cld
cmp
repz
jae
xor
fstps
fs
xorl
leave
out
das
jmp
pop
adc
sub
in
dec
cwtl
mov
xchg
cmp
mov
call
sarl
xchg
rcrb
iret
repnz
inc
mov
mov
pop
jmp
popa
fisubs
xchg
fsts
xor
cs
aaa
repz
inc
test
cmp
inc
je
out
inc
out
sbb
push
lea
clc
mov
lods
std
mov
jecxz
inc
or
xchg
int3
jecxz
xor
mov
fnstenv
xor
mov
sti
nop
xor
add
dec
push
cmp
imul
rep
shlb
mov
scas
int
sbb
je
xchg
mov
addl
scas
movsl
adc
pop
mov
mov
push
notb
inc
sti
mov
pop
int3
out
add
test
nop
jl
push
ss
lcall
jb
pop
in
out
aam
divb
iret
mov
sarb
cmp
push
fildll
in
mov
mov
and
xor
popa
or
jae
pop
mov
push
pop
lcall
lds
insb
cmc
xchg
popa
jle
mov
inc
push
sahf
aaa
xchg
jns
iret
cmpb
repz
push
in
loop
das
cmpb
inc
scas
xchg
shrl
ret
jne
mov
adc
or
aam
pushf
mov
push
hlt
push
sti
out
sahf
sub
fsubr
mov
mov
push
pushf
int3
mov
out
fnsave
call
or
add
mov
push
mov
sbb
xchg
sub
jns
add
fdivrl
lods
movsl
loop
pop
iret
xlat
pop
cmp
ficoml
cmp
cmp
mov
push
lods
add
lret
inc
or
data16
ds
imul
pop
jb
loope
sub
imul
in
gs
test
or
jge
mov
stc
mov
std
popl
lds
pop
lds
mov
aas
dec
sahf
mov
ljmp
mov
and
dec
out
enter
mov
or
add
das
push
pop
lea
add
mov
mov
add
pushf
lds
shrl
fidivs
out
sti
xor
xchg
push
test
inc
inc
xor
ret
outsl
pop
mov
sbb
xchg
or
xchg
rcrl
sbb
shl
rcrl
push
xchg
mov
ret
repz
aam
dec
aaa
imul
imul
jle
mul
mov
sub
xchg
and
rep
shlb
push
or
xor
inc
test
mov
es
dec
inc
xchg
popa
pop
stc
sbb
cmp
sbb
jmp
sub
in
add
leave
pop
int3
rcl
in
dec
adc
int3
daa
mov
movsl
imul
into
mov
cmp
dec
nop
xlat
xchg
mov
mov
sub
or
into
pop
outsl
aaa
pop
sbb
je
dec
pop
push
rolb
decl
xor
std
cld
daa
aad
or
sti
stos
ljmp
pop
f2xm1
xchg
add
sub
jns
push
pusha
rcl
outsl
pop
xor
orl
push
in
fsub
jne
cmp
das
pop
push
clc
fiadds
js
mov
cmpsl
jae
scas
xor
cli
movsl
cli
or
dec
scas
cld
pushf
mov
sub
jle
sbb
jp
cmp
sbb
dec
out
arpl
lods
fwait
jecxz
xor
decl
xor
fdivs
out
mov
dec
daa
aas
or
adc
inc
jg
sbb
mov
cmpsb
imul
mov
xchg
pop
mov
not
mov
jle
lahf
dec
mov
mov
cmp
cmp
xor
dec
lahf
jp
dec
adc
cli
int3
mov
call
mov
dec
inc
dec
aaa
add
push
inc
cmp
jae
mov
stos
mov
pop
mov
add
mov
xor
xlat
scas
fildll
and
movhps
sbb
add
shrw
repz
loop
imul
aad
jmp
jno
jbe
xlat
mov
add
hlt
hlt
lea
loop
adc
jnp
cmp
push
push
add
add
xorl
loope
js
sbb
mov
movsl
sub
xchg
push
jmp
xchg
test
xor
pop
add
cmp
xorl
in
lcall
faddp
jo
sub
cmp
popl
imul
aaa
push
pop
push
fisubl
fiaddl
and
sbb
pop
popa
xor
inc
cmpsl
jmp
push
pushl
aam
nop
push
inc
fcmovu
add
add
pop
add
cmp
xor
inc
or
test
std
fldl
movsb
in
fs
jb
into
pop
je
inc
icebp
adc
inc
dec
mov
icebp
mov
xchg
fbld
insl
cmpl
jnp
fbld
divb
loope
push
clc
xchg
jmp
pop
dec
lock
push
mov
or
nop
insb
outsb
add
es
sub
fwait
pusha
cltd
pop
outsb
out
push
jno
lret
stos
scas
or
pop
nop
sar
xor
ds
test
popa
inc
jmp
shlb
mull
adc
adc
addb
and
adc
cmp
sti
cltd
mov
lret
sarb
iret
and
sbb
jge
out
data16
add
fcmovne
adc
inc
in
push
cmp
sbb
xchg
jae
in
data16
aam
and
call
pop
jo
sbb
cmp
cmp
fwait
loopne
inc
insb
push
xor
push
xchg
xchg
cmp
push
xor
inc
jmp
mov
enter
in
movsb
sbb
sbb
gs
mov
push
and
and
push
popa
and
dec
fistpll
xor
loop
push
test
hlt
imul
icebp
scas
sbb
jl
sbb
mov
xor
fbstp
fistpll
push
push
jnp
lcall
loopne
mov
mov
dec
sbb
lret
gs
out
push
out
dec
std
xlat
pop
adc
test
jbe
and
testl
sbb
inc
mov
scas
pop
pop
into
les
stos
lock
jmp
fwait
in
gs
or
and
push
jns
fidivrs
and
fidivl
xor
test
leave
push
out
cli
scas
out
jle
sub
int
subl
mov
shll
mov
pop
mov
and
subb
xchg
dec
out
sbb
imull
adc
pop
sbb
mov
ret
dec
pushf
xor
sbb
adc
rcl
adc
and
mov
mov
mov
fstpt
dec
pop
mov
mov
pushl
or
stos
test
inc
add
dec
daa
aas
cmp
int3
xchg
ljmp
mov
int
mov
loope
jns
out
scas
cltd
mov
outsb
pop
xchg
pop
inc
xchg
or
int3
push
cmp
pop
jle
pusha
jle
push
mov
icebp
xor
sub
dec
ret
ror
pop
and
add
jbe
and
xor
sahf
or
inc
out
mov
inc
dec
mov
push
jge
in
pop
xchg
xor
push
imul
inc
mulb
sub
mov
movsl
jmp
outsb
ja
lret
scas
xor
leave
and
mov
xor
mov
movsl
lods
adc
ret
jle
lock
or
aad
aad
push
xor
dec
sub
cmp
mov
and
mov
lret
stos
xor
cmp
mov
pop
arpl
fmull
pusha
mov
mov
xor
inc
test
fldenv
mov
dec
inc
jb
xchg
test
xor
fneni(8087
jecxz
push
add
dec
sahf
dec
fwait
clc
xor
jle
aad
rcr
aam
mov
sub
xor
inc
nop
xchg
inc
in
clc
jo
enter
out
push
movsl
test
push
or
shrb
and
les
and
je
das
loope
add
mov
mov
add
dec
cmpsl
shl
loope
or
test
lcall
andb
add
loopne
dec
sahf
and
test
movsb
scas
adc
mov
cmpsl
mov
push
sbbl
push
xlat
lea
jg
jmp
cvttps2pi
sub
mov
mov
xchg
hlt
cmpsb
push
pop
push
je
xchg
jl
aam
pop
repz
xchg
sub
dec
and
in
or
jne
lea
mov
xchg
pop
xchg
add
dec
cmp
adc
push
xchg
in
bound
or
xor
cmc
mulb
test
or
aas
je
aad
mov
js
sub
dec
push
sub
mov
mov
or
jae
rcrb
lock
cmpsl
shll
int3
fimull
mov
int
cmc
cmp
adc
mov
adc
cwtl
xchg
mov
pop
fucomip
xor
or
inc
mov
mov
mov
mov
pop
xchg
inc
sbb
or
cld
mov
in
addr16
xchg
in
and
push
pusha
popf
fsubrl
xor
loope
push
leave
popl
or
mov
or
cmp
scas
test
mov
jp
loope
pusha
or
inc
dec
cmp
mov
into
lods
pushf
stc
shrl
xchg
sub
aas
enter
shll
add
fcmovnb
and
call
es
push
scas
stc
in
repz
pushf
sbb
pop
ljmp
sub
scas
sbb
sub
xor
xchg
push
cmp
sbb
cmc
jo
fsubrp
insl
cmc
xchg
jae
scas
repz
fucomp
dec
ds
repnz
movsl
fldt
js
jbe
testb
jnp
dec
sti
in
aam
lahf
mov
mov
ss
mov
stc
cmpsb
jnp
inc
mov
stc
sti
mov
movsl
int
sub
inc
add
pop
iret
test
movsb
mov
mov
pop
mov
push
add
lock
mov
dec
inc
divl
add
lds
mov
imul
inc
fdivs
test
mov
clc
xchg
in
push
fucom
dec
pop
or
sub
mov
repz
jmp
xlat
mov
push
into
adc
cmp
sbbl
or
clc
movsl
push
and
bnd
or
mov
sbb
dec
daa
out
aaa
dec
jl
sbb
xchg
inc
cwtl
out
inc
xchg
jp
bound
call
loope
insb
sti
inc
aam
into
in
scas
ret
imul
stos
std
rclb
and
jg
jo
pop
jge
cmp
push
sahf
and
pop
push
or
outsb
adc
ja
jle
adc
sub
addr16
lods
push
call
mov
jp
inc
xor
jae
scas
mov
adc
ret
enter
rolb
lods
bound
add
test
sub
and
sahf
cmpsb
mov
sub
push
xor
dec
jno
pop
xchg
xor
mov
ja
icebp
push
pop
jo
push
cs
pusha
repz
pop
ljmp
bound
out
sarl
adc
iret
xlat
aaa
pop
cld
sbb
jg
jo
mov
iret
lahf
inc
lods
and
fcoml
xorl
outsb
test
pushf
jle
sub
adc
mov
push
fldcw
cwtl
popa
add
std
jns
loope
rolb
xchg
push
pusha
stos
push
fmulp
into
jecxz
decl
adc
mov
je
enter
cwtl
pop
rdtsc
fwait
ret
fisubl
insb
jge
leave
addb
push
mov
mov
cmp
insb
in
mov
lods
lock
sbbb
sub
ret
andb
mov
shll
cmp
mov
jg
clc
jns
fldenv
and
xchg
dec
rcrl
cmp
ret
ss
fnstcw
cmc
dec
inc
and
xchg
pop
cmp
pop
test
and
daa
decb
add
out
shlb
push
hlt
sub
test
and
fidivrs
cmp
mov
cmpsb
pop
pop
inc
pop
cmp
or
push
out
xchg
int
cmp
and
sub
shlb
in
imul
push
push
insl
pop
sahf
dec
add
aam
mov
cmp
ficoml
mov
dec
rorb
mov
popa
push
dec
cwtl
jnp
adc
adc
sub
push
sub
dec
es
mov
cli
loope,pt
int3
outsb
jp
sbb
push
int3
je
xchg
imul
in
cmovb
movsl
push
push
and
sbb
call
dec
inc
jnp
jmp
or
js
rcrb
repnz
cwtl
or
or
and
sbb
test
cmpsl
or
cmpsl
sub
mov
or
nop
or
dec
mov
push
xor
fwait
xchg
and
dec
push
add
pusha
jne
sub
iret
add
dec
clc
popa
stc
jecxz
lds
mov
jo
lods
mov
into
inc
mov
mov
push
fs
roll
sbb
xchg
xchg
pop
daa
inc
dec
fnstcw
push
repnz
cs
sbb
data16
cs
xchg
movsb
imul
mov
das
sub
fldenv
addb
pop
rorb
lea
fildl
sub
cmpsb
ficomps
mov
xchg
mov
in
adc
pop
adc
push
jecxz
fistpl
mov
gs
loop
adc
mov
jle
pop
mov
in
orb
mov
je
xchg
xchg
and
mov
ret
or
lcall
mov
loopne
in
add
xchg
cmp
jb
adcl
sub
out
cmpsl
test
sbbl
inc
fcompl
aad
inc
jnp
xor
xor
in
jno
leave
fldl
xor
inc
or
sbb
pusha
aaa
cmpsb
das
cmp
mov
ficomps
sbbl
aam
ljmp
xabort
loopne
int
fbld
inc
cmp
mov
xchg
mov
rcr
jg
sub
dec
push
int
leave
bound
and
aas
in
je
mov
xchg
mov
daa
test
jl
lods
add
xchg
xor
insb
shll
add
int3
in
std
adc
adc
push
sub
jp
addr16
cmp
cmpsl
xor
or
and
xor
loopne
out
cs
jne
vmread
mov
hlt
jg
pop
cmp
cmp
negb
aaa
xor
adc
push
repz
jnp
xor
pop
out
push
fwait
cs
xchg
jo
jge
mov
sbb
sub
enter
xchg
xor
mov
dec
xlat
xchg
sub
cmp
jno
dec
ljmp
aad
aad
lcall
mov
pop
mov
mov
out
lcall
jmp
mov
mov
xorb
leave
insl
cs
push
add
popa
xor
cltd
aas
fldenv
mov
in
daa
pop
jb
fldl
jae
push
mov
dec
fcmove
sub
test
xor
das
xor
in
pop
movsb
daa
pop
sti
es
dec
pop
icebp
jns
mov
subl
push
pop
mov
fsts
jg
sbb
add
inc
je
xchg
cli
sbb
popf
movsb
adc
cmp
mov
xor
pusha
sti
mov
push
sub
loopew
imul
std
push
testl
mov
fwait
inc
jmp
pop
add
push
nop
int
mov
repz
in
leave
inc
call
pop
les
xchg
loop
mov
dec
jp
add
push
das
int3
pop
cli
inc
push
adc
out
lea
clc
cmpsl
adc
mov
xor
enter
adc
clc
hlt
dec
cltd
aaa
push
negl
push
lahf
mov
insl
push
pop
stos
xchg
mov
pop
mov
mov
mov
pusha
sub
and
or
call
dec
lods
cli
jl
push
push
push
sbb
inc
sub
lock
loope
arpl
sbb
fsubs
add
xor
enter
mov
cmpsl
mov
jmp
hlt
ret
jl
xor
sbb
xor
int
lahf
mov
loope
dec
add
inc
and
fwait
xorl
test
add
scas
cltd
xor
lea
xor
lret
icebp
repz
cs
push
mov
cmp
mov
pusha
lcall
aam
cmp
ret
loop
push
add
fsubrl
adc
cmp
inc
pop
inc
push
dec
push
push
mov
clc
outsb
clc
push
int3
adc
fs
push
sub
jecxz
push
jo
icebp
jecxz
push
push
dec
imul
mov
push
xchg
mov
adcb
fwait
and
pusha
sahf
outsl
push
sub
or
lds
mov
sub
in
stos
sbbl
add
imul
xorb
adc
lods
sbb
or
xorl
cwtl
cs
std
adc
repz
jge
shlb
pop
stos
lcall
dec
popa
xchg
and
in
je
push
mov
es
mov
jns
push
dec
push
add
fidivrs
mov
pop
jecxz
movsb
shll
mov
fldt
loope
or
sbb
jns,pt
mov
push
mov
test
out
inc
jmp
mov
and
cmpsl
jo
incb
out
aad
mov
inc
mov
ja
fs
jne
cmp
xor
mov
xor
mov
inc
jmp
mov
test
sub
jp
dec
imul
pushf
pop
arpl
pop
sbb
scas
add
jo
fdivl
mov
cld
insb
dec
xchg
mov
lods
push
xor
int3
mov
enter
scas
push
scas
xchg
stos
xchg
mov
cwtl
sbb
lahf
sub
fs
jmp
pop
pop
or
sub
push
jno
inc
fidivl
dec
mov
sub
repnz
gs
xor
pop
outsb
xor
xor
add
or
inc
mul
lds
mov
fiaddl
stos
test
daa
add
cltd
push
jno
insb
and
mov
ja
jmp
shlb
mov
cmp
jmp
and
inc
add
ljmp
in
aas
daa
popf
jne
mov
inc
subl
sbb
lret
inc
ret
jmp
xchg
out
sub
movaps
pop
int
test
arpl
mov
cwtl
sub
mov
je
ret
cmp
clc
push
js
fbld
xor
cmp
icebp
ret
lret
xchg
insl
mov
push
adc
dec
add
xchg
ja
fs
es
enter
stos
pop
je
dec
adcb
cmp
push
mov
repnz
xor
lret
cmp
inc
aam
mov
outsb
shlb
popf
rol
stos
xchg
outsl
and
in
int
mov
add
loop
mov
loope
cmp
pop
lcall
pop
popa
add
cwtl
lea
scas
das
ficoml
mov
xlat
mov
and
arpl
les
cmpsl
inc
int
sbb
lea
add
mov
mov
ret
mov
insb
or
fistpll
push
subl
lds
mov
notl
dec
test
stc
jb
hlt
add
mov
les
test
sarb
mov
mov
xor
and
pusha
sub
stos
dec
out
rcr
aaa
in
imul
jne
jmp
subb
pop
cmp
sub
jo
out
lock
mov
stos
add
ljmp
shl
jecxz
hlt
cmp
sahf
insb
lds
dec
mov
int
outsb
test
ds
pop
dec
clc
dec
xchg
sbb
inc
pop
xor
xchg
dec
in
in
mov
lahf
push
idivl
sub
pop
insb
rcll
adc
xchg
inc
jno
or
mov
loop
call
jo
xor
movsl
stos
loopne
jp
imul
jg
pop
sti
jo
cld
pushf
movsl
ja
fdecstp
stos
dec
mov
adc
sub
jge
enter
dec
mov
jne
mov
lea
testl
jae
add
imul
mov
lret
inc
mov
mov
mov
adc
cmp
xor
lods
jb
pusha
xlat
shl
adc
mov
jns
fdivrl
bound
rorb
push
cli
pushf
movsb
das
push
add
ja
call
xchg
inc
add
enter
rcrl
sub
or
std
jnp
int3
nop
insl
cmpb
out
nop
shr
jge
mov
and
add
mov
iret
enter
pop
addl
sbbl
shr
sub
add
xchg
and
cmp
push
sub
adc
je
pop
mov
cmp
push
ficompl
jp
fidivl
test
loopne
mov
mov
fldenv
xchg
mov
sarl
repz
stos
test
popf
test
dec
out
lcall
into
push
jecxz
adc
lcall
int3
cli
add
repz
cwtl
xor
jb
sub
in
rcrl
movsl
leave
sub
loop
mov
jg
push
mov
and
dec
out
andb
inc
mov
out
pushf
dec
jle
jecxz
nop
jnp
dec
call
xor
add
mov
mov
mov
sub
stc
lcall
test
iret
hlt
outsb
inc
xchg
jg
popl
ret
jle
and
cmpsl
pushl
xchg
scas
decl
addr16
sbb
imul
fdivr
xchg
leave
pushf
mov
popa
dec
mov
push
pop
cmpsl
scas
repz
pop
jg
data16
call
mov
mov
cltd
xor
neg
mov
inc
aaa
xchg
mov
test
and
loop
mov
lock
pop
xchg
xchg
pushl
in
xor
xchg
push
pop
enter
fisttpll
mov
lods
jno
nop
add
test
ja
test
in
dec
adc
ds
scas
mov
sub
mov
cmpsl
dec
fdivrs
call
cmp
xor
push
mov
sub
lahf
mov
pop
adc
out
lods
sub
mov
mov
movsb
sbbb
or
pop
hlt
sbb
push
push
fldcw
test
xchg
jl
pop
sub
xchg
jmp
inc
dec
loope
movsb
lods
add
xchg
dec
movsb
sub
adc
cmp
mov
inc
mov
pop
jecxz
cmp
int
inc
sbb
pop
adc
jae
mov
fcomi
inc
sub
aas
mulb
std
or
and
or
xchg
in
cmpsb
jno
sub
push
or
in
xchg
mov
outsl
insb
xchg
cmc
xchg
inc
or
scas
mov
pop
lds
jp
cli
inc
jnp
pusha
adc
adc
dec
mov
addr16
orl
fs
sbb
push
jp
arpl
pop
out
push
jb
jl
cmpsl
ds
push
test
mov
push
icebp
iret
pop
inc
mov
bound
dec
fwait
test
push
cmp
std
mov
lock
or
outsl
mov
repnz
rorl
in
outsb
inc
cmpb
pop
fwait
pop
sti
sub
hlt
in
cmp
mov
lretw
mov
xchg
adc
mov
and
ss
aad
mov
xor
jl
sub
jae
clc
cmc
cli
pop
dec
dec
lea
ficoms
daa
pop
jmp
scas
inc
sar
lcall
xlat
addb
and
mov
cmc
fsts
bound
js
cli
addr16
sub
call
dec
or
adc
mov
or
std
nop
inc
pop
dec
mov
pop
pop
mov
fists
dec
mov
fs
jp
mov
cmpsl
xor
sub
jbe
push
call
mov
imul
ja
dec
xor
mov
jmp
shll
outsl
sarb
popf
call
out
xor
cmp
sbb
fnstenv
jns
sbb
hlt
ja,pt
rolb
sub
bound
cmpsl
jbe
in
jecxz
fwait
lret
fmuls
inc
xchg
pop
repnz
leave
scas
add
fildl
addl
add
dec
pop
adc
stos
add
xor
inc
rcr
idiv
rorb
fcomps
push
rcll
jmp
xor
and
mov
mov
or
mov
leave
hlt
lock
and
or
cmp
add
in
int
gs
or
sti
into
repz
les
mov
cltd
mov
loop
cmp
mov
test
ret
sbb
push
sbb
mov
mov
cltd
mov
ljmp
cmpsl
or
sub
jp
xor
movsb
jl
mov
addr16
call
daa
ret
ret
jbe
hlt
lret
xor
lret
jp
clc
test
mov
add
jl
or
push
dec
lcall
stos
ja
push
xor
test
sbb
pusha
mov
dec
repz
imul
clc
gs
add
fmull
mov
cmp
adc
mov
stos
and
dec
sti
mov
jne
in
or
bound
lahf
cld
lock
mov
adc
cli
cli
xor
push
sbb
add
cmc
aad
fnsave
cmpsb
fdivrp
and
and
cmp
mov
das
ret
lret
test
mov
shlb
lds
mov
popf
mov
xor
repz
dec
mov
popl
add
cmp
repz
lea
sub
xor
push
dec
fisttpl
adc
and
loop
pop
std
out
xchg
and
mov
mov
jns
out
fcomps
jle
inc
push
fsts
xchg
nop
stos
enter
mov
lea
jb
outsb
nop
inc
jmp
mov
and
adc
mov
inc
sbb
inc
mov
lock
out
fdivs
mov
mov
mov
movups
mov
ss
push
fs
fistl
pushf
mov
cmp
int
pop
pop
push
icebp
cs
mov
popa
les
xchg
inc
std
lret
mov
subb
xchg
pop
and
mov
mov
mov
movsl
outsl
mov
mov
sbb
cmp
pop
nop
dec
insb
xchg
shll
jle
call
fldenv
jmp
movsb
aad
adc
push
out
pop
xor
rcrl
xchg
enter
std
fwait
out
stc
and
addl
out
lds
pop
stos
xor
cmp
jg
dec
sbb
jbe
lret
andl
call
pop
mov
je
cmp
xchg
push
adc
ret
scas
sbb
jne
cmp
fs
mov
rolb
aas
jge
add
push
sbb
pop
add
into
pop
movsl
inc
cld
push
fldl
or
mov
mov
cltd
outsl
inc
mov
mov
je
mov
das
mov
fsubrp
sub
mov
fnstsw
jge
dec
push
xlat
lret
scas
pop
enter
filds
mov
ljmp
push
subb
lret
jmp
test
mov
rcrl
repnz
movsb
fisttpl
inc
xor
jg
sub
xlat
xlat
push
fidivrl
mov
pop
enterw
dec
inc
sbbl
sbb
arpl
cmc
mov
sbb
ds
sub
sbb
imul
mov
ss
xchg
xor
es
es
icebp
iret
lods
inc
lar
push
arpl
mov
pop
outsb
xchg
xor
push
push
rcl
or
jmp
and
pop
aam
or
pop
stos
hlt
rorl
insb
xor
add
push
outsb
mov
orb
xor
cwtl
add
cmpsl
sub
lret
push
pop
imul
lock
push
ds
mov
mov
mov
sbb
enter
dec
adc
jae
loopne
push
stos
sbb
xchg
enter
es
xchg
cld
out
dec
inc
test
or
pop
dec
cmp
mov
mov
mov
enter
cld
sbb
or
push
lcall
add
mov
lret
test
lods
and
popa
dec
mov
jne
pop
jno
xor
into
xchg
push
add
mov
dec
shrb
xor
mov
push
lock
sbb
fcomps
in
out
and
mov
loop
stos
jmp
out
aam
pop
xor
add
lods
mov
push
inc
inc
push
movd
push
cmp
shl
mov
out
test
sbb
repnz
jbe
lock
out
lock
sahf
adc
jo
push
dec
lret
mov
dec
push
loope
xchg
pop
adc
xor
repnz
ljmp
cmpsb
jg
add
ss
mov
xchg
jl
pop
sub
fmul
xabort
mov
cmp
subb
lret
cmp
movsl
push
je
mov
shlb
fimuls
cmp
jl
pop
jg
jp
out
and
repnz
xchg
js
and
lods
jbe
call
jb
or
push
pop
enter
addb
cmpsl
cmpsl
in
sbb
int3
sub
xchg
adc
and
sub
fistl
repz
js
or
pop
cmp
add
xchg
lahf
rcrl
lret
lock
mov
and
std
lds
pop
push
xchg
mov
xchg
lods
jbe
and
repz
repz
mov
mov
mov
je
subl
sti
pop
gs
je
inc
outsl
insl
add
xchg
pop
fsubr
sbb
cmp
inc
test
mov
pop
sub
and
shlw
xor
mov
test
psrlq
mov
sbb
insl
repz
lods
test
ds
fs
xchg
pop
xchg
mov
data16
ljmp
fcoml
jge
dec
mov
mov
lret
sbb
pop
std
enter
mov
ss
or
or
rorb
cwtl
jne
pop
scas
ja
xchg
jne
into
xor
xor
pusha
popf
add
sti
mov
push
jae
scas
pop
and
sbb
loope
cltd
mov
or
dec
scas
xchg
jge
xor
xor
xchg
sub
mov
mov
inc
pop
sbb
faddl
pop
in
movsb
xchg
jnp
cmp
lods
adc
inc
shll
arpl
popa
adc
mov
push
rorb
jo
mov
cmp
cmc
sti
jmp
test
scas
mov
push
adc
adc
mov
push
mov
adc
insl
es
and
sub
mov
idivb
sub
xchg
lods
ss
mov
or
outsl
and
dec
xchg
cmp
fdivrs
out
pop
add
rcrl
mov
push
jb
ds
jnp
fbstp
xchg
or
mov
pop
lods
rcrl
pop
pop
pop
pop
imul
les
out
push
aad
test
mov
ja
mov
sti
jecxz
inc
nop
push
jmp
movsb
imul
mov
xor
pop
andb
push
lock
cmp
cmpsl
push
sub
ficoms
push
pop
cmp
xchg
sbb
lahf
mov
and
adc
ljmp
mov
insl
inc
loopne
pop
or
jbe
sbb
xor
add
pop
pop
dec
mov
sbbl
adc
cld
fmull
dec
mov
mov
inc
add
data16
ret
out
mov
loop
shlb
out
gs
imul
jg
into
xor
inc
movsl
cwtl
push
or
icebp
daa
test
je
stos
nop
push
inc
dec
xor
pop
xor
inc
lods
adc
push
add
or
lds
ss
loop
fnstsw
pop
cmp
xchg
ljmp
icebp
jbe
or
mov
leave
loopne
fisubrl
inc
cmpsb
fimuls
cltd
scas
mov
dec
pop
aad
lret
loop
add
repz
stos
inc
ss
incl
cmp
mov
imul
sub
in
adc
ja
clc
clc
sahf
sti
not
xchg
scas
in
push
pop
mov
jbe
lock
repnz
imul
sti
insl
hlt
or
jl
sbb
cmp
adc
sub
pop
adc
pop
jae
jge
pop
xchg
sbb
mov
xchg
sahf
pop
push
sub
add
andl
adc
jb
rcrl
call
add
out
sti
xchg
xor
cmp
push
hlt
sbb
mov
jns
int3
xor
dec
mov
xor
dec
cmp
ret
cmpsb
push
dec
jbe
dec
shll
test
aam
out
jg
aas
push
adc
and
add
jle
mov
xchg
sbb
movsb
pushf
es
add
fcmovnu
sbb
in
jae
mov
loop
cmp
pusha
xor
xchg
dec
sbb
and
sbbb
aaa
mov
out
sub
repnz
push
inc
xor
pop
lds
arpl
fisttpl
and
sbb
fs
sbb
andl
xchg
or
rcrb
mov
jl
popa
add
movsb
add
jg
jns
addr16
jl
dec
jge
icebp
push
stc
ret
xor
mov
inc
dec
lahf
pop
cmp
stos
inc
mov
mov
mov
lahf
cli
lcall
lods
sti
xchg
xor
push
andb
loopne
sub
mov
sub
in
sbb
rcll
nop
roll
xorl
rcrb
sub
popf
repz
cmpsb
inc
ret
int3
dec
and
inc
movsb
mov
adc
sub
cmpsb
sub
mov
rol
pop
lret
cli
push
push
or
ljmp
adc
in
jae
xor
sbb
and
aam
dec
mov
aaa
stc
add
or
xchg
pop
xchg
push
mov
adcb
insb
int3
scas
sbb
adc
repnz
test
and
jecxz
sub
stos
aaa
test
cmp
idivl
mov
stos
push
fwait
jae
clc
call
mov
hlt
sbb
jge
pop
inc
lea
test
jle
jge
mov
repz
scas
add
test
int
fisubl
mov
mov
repz
xor
xor
test
and
adc
cmp
mov
loopne
or
jnp
insl
shll
insb
lahf
sti
mov
shll
adc
mov
jp
and
inc
add
pop
push
aam
xor
mov
cwtl
ss
xor
fwait
push
cld
enter
leave
in
or
cmpsb
mov
dec
mov
pop
into
stos
push
gs
js
push
call
cmp
roll
inc
dec
add
popa
mov
xor
lahf
xchg
imul
lds
in
jb
xchg
andl
push
bound
negb
scas
xchg
arpl
cmpsb
into
cli
push
and
adc
imul
fs
and
ret
cmpsl
dec
mov
pop
mov
mov
int3
mov
push
jb
jns
fstl
pop
das
jecxz
leave
xlat
lcall
push
hlt
xor
mov
arpl
imul
mov
add
fwait
call
int
xchg
push
cmp
add
mov
sub
jnp
push
sti
pop
insb
mov
clc
sub
add
push
push
sbb
ja
test
es
mov
jne
fnstenv
inc
dec
ss
sbb
in
or
inc
mov
int
push
and
data16
xchg
hlt
cli
jno
cmp
js
dec
adc
call
jl
inc
xor
adc
or
jecxz
xchg
jmp
clc
out
mov
dec
stc
xchg
xor
pop
mov
jb
ja
mov
movsl
cld
ret
hlt
jnp
mov
ret
jge
xor
mov
cmp
cmc
push
mov
jge
jge
sub
mov
mov
imul
adc
pop
test
rorb
gs
jg
leave
pop
fsubrs
mov
adc
pop
ficoms
inc
inc
aas
mov
xorb
push
das
dec
jae
sub
ja
into
fidivs
inc
push
jle
inc
sahf
fidivrs
fnstsw
ljmp
jns
or
aam
add
pop
mov
pusha
and
inc
mov
vcvttpd2dqy
xor
dec
andl
add
lea
in
inc
lds
push
std
push
sub
hlt
mov
push
mov
push
fcmovu
loop
es
outsl
outsl
lret
gs
push
push
jp
mov
lahf
lods
mov
mov
jne
sbb
bswap
jle
popa
std
and
adc
loopne
xor
or
sbb
push
sub
nop
xlat
mov
in
jno
mov
cmc
jmp
pop
into
es
movsl
and
sub
pop
imul
cmp
dec
jno
push
shlb
xor
sbb
inc
and
cli
popa
inc
pop
in
sti
mov
dec
test
xchg
sbb
sti
jno
adc
loopne
daa
ljmp
mov
xor
jle
test
mov
sub
adc
cmp
sub
inc
cmp
pushf
mov
sub
and
fwait
insb
nop
mov
add
imul
push
adc
pop
lds
cmp
insb
ljmp
cltd
push
mov
aad
scas
ret
push
xor
lahf
add
add
in
push
mov
pop
cmpb
add
aad
xchg
inc
insl
leave
sub
or
insb
xor
push
popa
pop
cmp
sub
adc
mov
test
out
jne
mov
sbb
or
into
lret
push
xchg
out
cmp
into
mov
inc
xor
mov
out
mov
xorl
aas
nop
mov
mov
cmpsl
imul
in
out
push
fstps
lods
or
mov
movsl
lcall
mov
imul
mov
dec
ficoml
repz
scas
inc
xchg
inc
icebp
fidivl
popa
loop
cmp
popa
nop
pop
adc
pusha
add
xor
sub
push
inc
rolb
pop
mov
add
jecxz
pop
cmp
push
leave
and
nop
pushf
cld
fsubs
mov
ss
xor
and
pusha
pop
pop
xor
jle
xor
mov
sbb
aam
fwait
sbb
cltd
xchg
movsb
mov
int
inc
mov
lahf
push
adc
mov
adc
dec
inc
cs
or
cmp
or
sub
inc
cltd
jae
das
loop
mov
adcb
push
add
push
mov
inc
mov
push
mov
inc
xchg
test
xor
jl
arpl
jg
sbb
sub
xchg
je
sub
jns
leave
jo
fsubrp
rcrb
cmpsl
mov
cmp
iret
or
push
xor
enter
arpl
sub
jns
cli
mov
outsb
dec
and
enter
ss
adc
loopne
out
add
outsb
and
xchg
fists
adc
xchg
cmpsb
jmp
mov
outsb
aam
les
jns
les
movsb
sub
jp
loopne
pop
jbe
adc
cmp
mov
xor
cmp
sbbb
cli
jle
and
push
in
push
cltd
add
xor
jae
jo
mov
ljmp
adc
xlat
es
xchg
out
cmc
mov
ds
mov
mov
call
inc
popf
sbb
daa
mov
jmp
jge
nop
scas
dec
mov
push
dec
jbe
inc
and
into
les
daa
sbb
adc
mov
out
fimuls
xor
sub
test
sbb
mov
shlb
shrb
cltd
lret
rep
icebp
lahf
fnsave
cmp
add
dec
jo
sbbl
mov
cmp
frstor
xchg
push
out
mov
cwtl
mov
push
sub
scas
pop
arpl
or
outsl
jnp
jp
lret
cmp
jecxz
out
mov
jmp
inc
adc
pop
jae
fnstcw
lea
adc
movsl
movsl
pop
out
xchg
or
loope
sbb
lock
mov
dec
and
or
call
sbb
mov
in
inc
jbe
xchg
hlt
xchg
shrb
test
test
fsubs
icebp
dec
les
push
mov
scas
push
loop
adc
jbe
and
lods
outsl
cmc
and
or
clc
aaa
push
lock
jo
pushf
inc
add
loopne
arpl
sub
mov
mov
jle
xchg
cmpsb
and
pop
jne
mov
cld
sbb
loop
and
ss
clc
sub
cmp
int3
hlt
loopne
jne
push
add
loope
dec
cmpsb
dec
dec
ror
test
lods
popl
movsl
xchg
pop
cmc
and
sahf
sub
mov
andb
mov
add
xchg
cld
mov
popa
xchg
out
push
mov
add
cmp
std
jecxz
or
imul
inc
inc
decb
adc
hlt
adcb
or
push
jp
cli
loop
loope
jb
dec
inc
push
lods
push
addl
mov
fdivp
xchg
fabs
enter
adc
inc
repnz
lds
inc
ja
push
mov
mov
mov
push
jl
cmpb
pop
popa
lahf
test
scas
iret
and
mov
test
ficomps
or
fstpl
cmp
int3
imul
sbb
mov
add
inc
icebp
sahf
or
xchg
lret
jns,pn
mov
xchg
add
lcall
lea
sbb
mov
adc
pop
shl
inc
call
dec
add
and
test
dec
movsl
cmc
inc
gs
mov
xor
jns
pop
fstl
mov
jle
xchg
add
sub
std
jle
xchg
jmp
loopne
and
jns
sub
inc
out
out
jl
mov
pop
adc
int
ljmp
lock
pop
mov
lret
rcrb
lret
out
fsubl
mov
repnz
int3
add
inc
call
mov
xchg
js
add
or
inc
xor
mov
mov
sbb
aad
pop
pop
sub
xor
cld
dec
inc
bound
add
lahf
push
pop
mov
in
mov
daa
in
or
fs
cli
adc
sub
sti
js
dec
adc
or
pop
pop
js
mov
ret
int
ret
and
mov
xor
inc
das
mov
mov
das
push
jmp
es
insb
in
or
sbb
or
stos
sbb
and
insl
sbb
stos
xor
mov
pop
cmc
sbb
aad
push
les
inc
dec
or
add
cltd
call
cwtl
push
stos
cmpl
stos
rcr
stos
push
cmp
inc
divb
rclb
xor
ss
sti
and
mov
lods
test
and
dec
xchg
inc
divb
pop
mov
add
out
jns
fdivr
movsb
mov
mov
hlt
dec
xchg
test
sti
fildll
xchg
movsl
pop
insl
adc
xchg
sbb
arpl
pop
add
jmp
leave
into
movsl
orl
lret
outsl
ficomps
and
insl
scas
xor
push
mov
lret
mov
mulb
movsb
push
stc
dec
cmp
inc
stos
sub
jmp
ror
xor
mov
test
pop
pushf
sub
loopne
imull
jmp
scas
scas
movsb
jns
addl
arpl
dec
stos
jne
fimull
pop
rcr
adc
sub
ss
jp
mov
repz
mov
rclb
jne
std
imul
adc
jae
xorb
out
dec
rcr
xchg
jge
mov
inc
push
adc
repnz
mov
push
jno
cmpsl
sbb
add
pop
cmp
lret
es
xchg
das
add
sbb
adc
cmpsb
pop
hlt
imul
inc
iret
inc
inc
cmp
mov
stos
das
jne
test
xor
clc
inc
sbb
push
mov
pop
mov
hlt
jo
inc
push
xchg
sub
mov
popf
mov
shlb
push
and
sarl
out
call
into
sub
rclb
imul
pop
aad
mov
mov
shll
cli
insl
cmc
out
mov
or
mov
push
sbb
dec
loopne
jecxz
outsb
pop
xor
inc
or
stos
clc
cmp
push
cmp
cmp
mov
mov
mov
cmp
lret
xchg
jae
sbb
mov
clc
mov
adc
jg
lret
jp
int
adc
sub
mov
mov
fistpll
and
loope
lea
push
hlt
pushf
test
pop
sub
mov
data16
aaa
xor
stc
lret
inc
xchg
scas
mov
adc
out
push
arpl
inc
dec
lcall
shlb
xor
pop
jp
mov
xor
cmc
push
in
sbb
push
sbb
sti
out
xchg
xchg
sbb
iret
and
subb
xchg
in
dec
sbb
push
or
dec
fiadds
test
ret
jb
insb
call
gs
xchg
adc
cwtl
sbb
push
cltd
arpl
or
mov
adc
lds
andb
pop
mov
movb
hlt
inc
mov
outsb
outsl
adc
cld
jb
inc
lods
fisttpll
cmp
mov
sbb
xlat
xlat
fs
and
out
cmc
cmp
and
into
jae
movsb
sarl
mov
or
fnstsw
mov
xchg
stos
or
and
mov
stos
icebp
popa
push
mov
add
ds
fsubl
lock
shlb
into
adc
jae
and
or
lods
hlt
dec
xor
mov
movsb
and
pop
xchg
jno
cmp
jecxz
lret
pop
inc
lea
test
jae
lret
iret
dec
sti
mov
xchg
cltd
inc
imul
inc
push
mov
push
loope
mov
jp
pop
xchg
pop
dec
inc
xor
pop
repz
cmc
lods
mov
sbb
arpl
fld
add
adc
notl
jb
rcrb
push
inc
xchg
out
cmp
leave
cmc
movsl
lret
insb
xchg
psubusw
adc
push
dec
or
add
loope
push
jecxz
into
fisubs
and
fistl
xor
cmp
xorl
pop
push
out
scas
jnp
cwtl
jnp
out
aaa
les
or
and
add
addr16
sub
lods
and
aaa
add
andl
fiadds
inc
bound
icebp
aad
call
sbb
push
pop
pop
sbb
inc
mov
or
sbb
mov
ficomps
or
fistpl
mov
xor
dec
ljmp
jo
js
out
lahf
mov
push
icebp
dec
lds
loop
xchg
movsb
add
lock
stos
mov
into
dec
add
mov
aaa
mov
pop
cmp
js
cmp
mov
pushf
and
push
and
aam
jmp
cmpsb
out
imul
sub
gs
xchg
inc
adc
jge
cwtl
mov
mov
out
mov
int3
in
nop
mov
xchg
gs
or
iret
movsb
inc
jae
jg
mov
lret
mov
jecxz
push
fcmovu
mov
fiadds
jae
mov
xsave
call
imul
xchg
inc
sbb
jnp
jnp
xor
pop
sbb
pop
ja
cmpsb
push
jg
out
call
mov
lods
cmp
push
and
pop
mov
ss
jg
cmpsb
xor
xchg
push
adc
pusha
or
pop
addr16
sbb
xor
lahf
or
add
dec
xchg
and
inc
andb
cmp
inc
cmpsl
push
push
int3
andb
mov
fcomps
and
xor
adc
cmp
mov
pushf
shll
lahf
mov
jno
mov
leave
fdivl
out
cltd
les
xor
orl
inc
dec
xchg
pushf
cmp
cmc
inc
xchg
test
mov
lds
dec
addr16
pop
dec
lret
imul
fsubp
sarb
idivb
leave
cwtl
lock
and
lods
lock
lret
enter
or
cli
push
xchg
jo
jle
leave
pop
ret
insb
outsb
jno
or
les
repnz
lret
xor
out
jp
andl
cmp
or
rorl
sub
sub
frstor
inc
into
and
iret
sbb
in
lds
sbb
push
not
xor
xor
pop
fcmovne
adc
js
cmpsl
leave
lcall
pop
xchg
dec
fdivl
adc
dec
or
out
inc
and
cli
into
hlt
push
push
cmpsb
mov
enter
jp
jae
adc
xlat
cmp
fcompl
mov
mov
jecxz
arpl
mov
or
pop
pusha
xchg
add
cmp
fcmove
jp
fwait
movsl
mov
push
push
mov
add
cmp
or
nop
pop
inc
leave
mov
mov
and
bnd
js
jl
and
jle
dec
in
dec
movsl
outsl
or
and
jns
in
xchg
mov
cwtl
xor
xor
xorl
mov
lods
mov
push
pop
repz
dec
jmp
aam
iret
scas
mov
int
sub
mov
sbb
adc
in
push
xorb
loop
pushf
cmp
test
cmp
jb
push
pop
adc
cmp
jmp
adc
mov
jns
mov
push
stos
cmp
test
add
push
inc
sub
add
mov
aas
mov
aad
inc
sub
cs
loopne
pop
sbb
xor
xchg
mov
mov
test
add
mov
cwtl
fchs
fldl
out
and
dec
sub
and
aaa
mov
inc
add
mov
jbe
xor
loope
pop
leave
sub
in
xor
push
inc
icebp
dec
fsubr
pop
cmp
mov
xchg
fcompp
push
add
or
pop
call
ret
dec
shrb
aaa
leave
repz
loop
es
inc
adc
rorl
iret
in
jmp
lock
push
js
cmp
lods
add
xor
sbb
lock
and
test
mov
dec
stc
mov
sbb
insl
in
stos
stos
push
push
add
dec
sahf
sbb
lock
push
nop
or
jle
lods
shl
mov
mov
movsl
fwait
inc
or
fidivrs
push
lahf
andl
mov
and
test
stc
str
jge
mov
cmc
negb
cmp
push
push
sub
cli
push
je
or
pop
xchg
mov
test
fstl
pushf
ljmp
and
dec
dec
sub
lock
sub
add
mov
repz
gs
sub
add
add
stc
xchg
sub
fs
add
insl
nop
add
lds
dec
in
push
cmp
pop
jno
sub
push
shlb
fxch
data16
jl
sbb
xchg
dec
mov
test
arpl
loope
out
fbstp
fdivrl
out
aaa
out
xor
dec
mov
mov
je
fistpl
lcall
sub
pmaxsw
mov
gs
orb
movsl
xchg
push
out
stos
jecxz
mov
mov
jno
mov
xor
stos
insb
test
hlt
int
insb
in
inc
jns
mov
ja
jae
cmpsb
jge
cli
mov
push
add
pop
push
mov
loope
clc
and
test
inc
and
lahf
jmp
es
xlat
xor
neg
dec
testl
push
gs
sbbl
iret
icebp
test
subb
mov
push
mov
rcl
xchg
sahf
popa
mov
cmp
popa
std
lods
dec
fnstsw
xchg
mov
adc
mov
sahf
cwtl
lcall
jbe
mov
pop
xchg
push
cmp
sub
leave
subb
xchg
jmp
shlb
and
clc
sbb
inc
or
mov
sub
jp
xor
adc
sbb
ja
add
hlt
mov
fcmove
push
sub
fsts
push
pop
frstor
lret
xlat
pop
push
in
push
xlat
aas
lahf
xlat
mov
stc
jnp
add
mov
jecxz
xchg
popa
cli
mov
fmull
cld
adc
in
fwait
scas
dec
leave
scas
sbb
dec
shl
mov
add
cmc
xchg
lods
ja
aam
and
movsb
lock
xor
cltd
pop
pusha
xor
popf
ret
pop
popa
and
out
outsb
bound
jmp
sub
fimull
scas
inc
shrb
aam
add
movsb
push
adc
test
cmp
repz
add
pop
bound
fisubrs
jecxz
push
loop
jg
imul
rorl
fsub
fxch
sbb
cld
or
ret
test
dec
sbb
xchg
cltd
test
mov
faddl
lret
aaa
mov
fnstsw
push
aas
and
inc
or
notb
js
loopne
jno
push
lahf
lods
fnstenv
lret
fdivrs
xchg
pop
cmp
add
bswap
mov
cmc
hlt
mov
in
lret
jmp
movsl
pop
or
xchg
lcall
ja
fs
push
push
fucomip
pusha
leave
inc
dec
jp
sbb
mov
stc
pop
pop
push
jmp
pop
repz
inc
jmp
inc
test
pop
add
in
ljmp
ja
sarb
pop
aas
nop
push
jg
test
mov
mov
jmp
fidivrs
dec
ret
shlb
mov
mov
cmpsl
cmp
out
mull
iret
loope
popa
adc
cmpsl
xchg
stc
inc
inc
jno
mov
xor
enter
fiaddl
test
out
daa
roll
push
repz
xchg
xchg
xor
add
cmpsb
jp
cmc
mov
push
xchg
sar
or
test
inc
fcmovne
jp
push
pop
or
cld
repnz
pop
xchg
ret
cwtl
cmpsl
lahf
loopne
inc
pop
dec
cmc
mov
xchg
xchg
jecxz
popf
jmp
jns
mov
out
fiaddl
cmpl
push
test
loope
stos
sarl
or
loopne
hlt
pop
jle
call
pop
sbb
loop
stos
aam
fnstsw
sub
inc
syscall
sbb
mov
push
and
repnz
jmp
ret
pop
cs
mov
cmc
sbb
adc
fsubs
nop
sar
push
cmp
mov
in
mov
push
or
lcall
xchg
sbb
jo
mov
ret
dec
scas
xor
fisttps
pop
js
dec
loopne
mov
fisubl
stc
mov
xlat
stos
or
mov
rcl
loope
adc
mov
or
jle
in
hlt
mov
xchg
pop
pop
mov
scas
push
popa
jge
out
push
hlt
cli
and
pop
dec
icebp
insl
sub
sub
xchg
stc
and
inc
mov
test
leave
pushf
mov
adc
add
fucom
sub
adc
dec
push
pop
sbb
dec
and
movsb
inc
push
lds
shll
out
ret
push
push
mov
dec
and
or
mov
xor
mov
push
shll
testl
dec
imul
push
jns
lret
and
in
jmp
ret
inc
jno
imul
lcall
in
jmp
pop
cmp
das
fimull
cld
inc
js
fwait
repz
jmp
inc
jecxz
mov
pop
fisttps
mov
aaa
fcompl
xchg
jl
push
lahf
ljmp
movsl
out
ja
mov
mov
inc
mov
xlat
popa
pop
aam
mov
adc
xor
jl
pop
pop
inc
js
dec
mov
arpl
and
pop
jnp
xor
pop
mov
sbbb
jne,pn
mov
loop
push
sub
or
jmp
xchg
ss
xchg
loop
fisttps
popa
repz
mov
aam
int3
sahf
and
mov
imul
mov
cmpsb
dec
out
test
dec
and
dec
and
mov
cmp
lock
mov
jnp
lret
push
sbb
out
aam
stos
andb
stos
jno
or
int3
movsl
pusha
in
pop
xchg
mov
jge
pop
adc
test
mov
jnp
adc
jnp
mov
mov
jecxz
dec
popf
mov
hlt
pop
mulb
aaa
aaa
jecxz
test
jle
jb
ja
sub
mov
jbe
sub
cmp
cmpl
lahf
jecxz
cmp
aaa
pop
jbe
and
leave
push
fsubr
sar
dec
pop
sbb
jne
mov
rcr
mov
rcr
icebp
cmp
xor
dec
jns
adc
hlt
and
dec
scas
loopne
xchg
jle
dec
cmpsb
mov
or
ret
ret
jmp
scas
xchg
iret
add
xor
pop
repnz
pushf
dec
or
je
cmp
cld
sbb
xchg
add
sbb
lods
into
faddl
aam
lea
mov
sbb
arpl
add
data16
mov
dec
or
pop
std
aas
jo
mov
lret
out
jbe
cli
cli
nop
scas
dec
jmp
jmp
loopne
loope
inc
fs
sub
xor
pop
aas
sub
in
pusha
test
mov
packuswb
ret
repz
jbe
shl
mov
fwait
int3
pop
shlb
mov
push
xchg
fadds
ljmp
mov
xchg
pushf
ljmp
inc
lret
sbb
inc
push
cmp
repnz
insb
frstor
xchg
clc
pop
xchg
push
ja
aam
mov
shrl
aad
xchg
ljmp
loop
out
inc
mov
push
je
add
sar
xor
mov
cmp
out
pop
nop
sbb
cs
ss
repnz
mov
sti
mov
in
and
jg,pn
jno
push
mov
jge
dec
ret
push
push
ret
flds
loopne
mov
inc
ror
call
outsl
lcall
testb
mov
mov
mov
jbe
dec
faddl
fsubs
jo
sahf
inc
mov
xchg
ror
dec
insb
dec
lods
mov
dec
or
loop
rorb
setnp
mov
int
xlat
dec
adc
test
aam
adc
cmp
add
ret
inc
repz
cmp
sbb
sti
cmp
dec
mov
in
js
lahf
push
sbbl
or
aas
ja
scas
sbb
xor
push
inc
jmp
jmp
cwtl
xchg
jg
lods
add
add
pop
fsqrt
dec
gs
imulb
das
hlt
out
lret
scas
push
mov
scas
mov
sub
cmp
lret
test
xor
pop
cmp
pop
push
sub
xchg
adc
push
or
ss
xchg
sbb
imul
xchg
sub
shl
mov
out
jnp
and
movsl
mov
dec
out
xchg
cmpl
inc
or
pop
and
cmp
xchg
pop
ja
add
jo
lret
stos
adc
cwtl
movsl
dec
imul
bound
js
inc
lret
mov
in
push
and
xor
divl
cmp
mov
lcall
xor
jg
jmp
loopne
lds
mov
adc
mov
push
pop
xor
push
mov
cmp
in
nop
lods
cld
sahf
sbb
das
enter
xlat
mov
push
popa
add
fstpt
loop
leave
mov
mov
mov
pop
in
je
in
gs
mov
shll
test
dec
add
repnz
sub
fistpl
lret
or
int
in
mov
cmp
mov
sub
push
dec
leave
std
mov
mov
push
in
pop
mov
shrl
jp
or
mov
imul
iret
sar
push
shl
and
mov
ss
bound
dec
outsb
and
and
js
xchg
jl
and
in
mov
mov
mov
cs
stos
push
or
mov
mov
and
push
aas
repz
mov
sub
jo
mov
sbb
or
je
sub
pop
xchg
mov
imul
cmp
xchg
add
rcrb
or
jno
daa
push
xchg
xor
das
repz
cmp
mov
insb
repnz
ret
mov
sarl
xchg
cmp
push
test
fisubl
xchg
stc
insl
cmp
lahf
out
insb
leave
lods
orl
cmpsl
adc
fidivs
push
movntq
out
push
pop
dec
fnstsw
cli
mov
sbb
push
enter
push
stos
shrl
repz
xchg
rorb
leave
fidivl
mov
cs
dec
xchg
test
push
sub
stos
push
ret
add
stos
ss
in
lret
arpl
pushf
sbb
add
mov
das
out
xor
jmp
ret
stc
cmp
or
push
cmc
lds
pop
dec
add
xor
add
jmp
cmc
mov
ds
push
add
inc
fsub
sub
clc
jecxz
mov
icebp
rcrl
clc
cmp
adc
repnz
out
outsb
out
sbb
sub
cmp
sbb
leave
push
inc
rcrl
shlb
add
pop
fs
dec
adc
mov
inc
into
pop
inc
lret
fldl
jle
out
jmp
mov
pop
fs
ljmp
or
cld
inc
test
rclb
cwtl
sub
jne
pusha
add
lret
xchg
mov
mov
add
pop
adc
rcr
jbe
and
test
shrl
dec
add
adc
jno
push
pop
int
add
pop
movsl
nop
xor
xchg
cld
imul
pop
cmpsb
xor
jne
inc
inc
repz
inc
out
push
test
dec
rol
psubsb
jae
dec
movsl
test
aas
jle,pn
rcrb
push
lret
in
cmpsb
rcll
pop
push
pushf
loopne
cmp
mov
sarl
dec
pusha
and
std
add
xor
jp
add
pop
scas
fldt
sbb
in
stc
inc
mov
xchg
sub
in
jg
adc
xor
mov
aad
repnz
push
pop
arpl
fsubrl
fists
popa
xchg
mov
nop
xor
cmp
mov
jmp
fidivs
add
pop
xor
orl
adc
rcll
cmp
xor
inc
es
es
inc
pop
std
sub
cmp
addl
jnp
dec
addr16
divb
in
dec
icebp
shrl
or
decb
std
lret
and
mov
shrb
outsb
ss
mov
xor
mov
dec
cmp
mov
addb
or
jle
push
fcoms
add
notl
out
ja
sub
xchg
imul
aas
xchg
cmp
push
inc
test
xchg
mov
and
loop
inc
push
sbb
pusha
push
mov
or
or
lahf
ret
das
cmp
bound
in
cmp
pop
adc
lahf
sbb
enter
pop
and
or
jmp
test
dec
jo
inc
add
cmpsl
sarl
mov
outsl
movb
add
sub
jp
int3
inc
nop
in
pusha
movsb
cmc
roll
ljmp
xor
push
xchg
fldenv
mov
sub
out
in
sahf
incb
lds
and
adc
mov
loope
pusha
add
jp
fs
mov
movl
pop
outsl
xor
mov
insl
enter
xor
inc
scas
cmp
and
aam
call
lods
mov
jns
leave
push
xchg
mov
sub
add
rcrb
push
mov
scas
push
xchg
addr16
pusha
loopne
test
jb
add
pop
ja
adc
negb
inc
jmp
pop
bound
in
cmp
adc
in
inc
lret
js
daa
sub
into
or
push
in
enter
aaa
adc
sub
and
sbb
aam
cltd
mov
xor
decl
pop
or
dec
dec
jg
xchg
stc
fsubl
nop
cmp
cwtl
popf
leave
inc
pop
adc
push
int3
fldenvs
inc
js
in
jecxz
es
int3
insb
jno
data16
neg
subb
push
ljmp
movsl
jne
sbb
loopne
push
in
addr16
cmp
negb
push
bound
xchg
inc
add
mov
test
xchg
cltd
daa
push
rcrb
aas
jle
repnz
aad
daa
push
jl
xor
hlt
xor
out
pop
push
jmp
add
sar
je
lods
push
and
mov
push
mov
jg
fsubl
or
icebp
lock
fiadds
sub
cwtl
addr16
insl
stos
and
sbb
and
jmp
pop
fistpl
sbb
scas
lahf
popf
decl
mov
mov
mov
insb
adc
xor
popa
mov
mov
daa
pop
xlat
out
mov
lods
or
das
and
pusha
xchg
lret
push
ja
hlt
inc
ss
inc
push
pop
mov
out
cmp
adc
movsb
sbb
mov
add
fldt
mov
or
repnz
inc
mov
mov
popf
std
jnp
daa
dec
cmp
inc
cmp
idiv
jne
jp
add
sub
out
jl
dec
int3
fisubrs
addr16
cmpsb
ret
cltd
or
jo
dec
cmp
or
sbb
add
scas
movsb
xchg
push
dec
iret
imul
xchg
lret
iret
fxch
in
inc
les
es
dec
aas
push
add
cmp
mov
ret
lcall
xor
cwtl
fcompl
mov
dec
lock
aas
jg
fimull
lock
mov
xor
lret
mov
pmulhuw
and
inc
inc
std
push
fisttpll
nop
mov
mov
les
xor
call
dec
fucomip
hlt
jo
mov
rcrb
repz
jecxz
movsl
pop
pop
xchg
mov
jae
jnp
fwait
jp
xor
int3
test
mov
mov
mov
jecxz
lret
arpl
push
or
orb
pushf
cmpsl
xchg
jge
sbb
mov
mov
adc
aas
inc
inc
pop
lret
sub
adc
loop
ds
cld
rcll
movsb
mov
inc
clc
push
cmp
pop
push
stos
pop
sub
outsl
push
sbb
sub
sbb
fisubl
lods
imul
fmull
das
xor
add
push
lea
adc
pop
mov
gs
jb
mov
add
mov
in
ljmp
ficoml
cmp
mov
dec
or
sbb
scas
inc
sub
jle
scas
jne
mov
pop
dec
fldenv
mov
aam
out
enter
imul
pushf
dec
arpl
fdivr
mov
loop
cmp
xor
stos
adc
push
fistpll
mov
fcmove
push
mov
fidivs
push
dec
xchg
cmp
adc
ljmp
push
call
xchg
adc
mov
add
js
push
push
inc
stos
push
frstor
cld
jmp
cmp
push
sub
add
fisttps
fwait
dec
cmp
je
jl
repnz
stc
sub
out
jae
xor
lock
mov
cwtl
enter
fwait
andl
lahf
xor
and
ror
dec
loope
cmp
lds
or
inc
lcall
scas
fxch
inc
inc
push
leave
pushf
cld
ljmp
aaa
insl
xorl
mov
enter
hlt
hlt
sbb
jge
in
pop
xchg
push
scas
clc
add
adc
sub
neg
stos
dec
and
movsb
movsl
and
mov
add
jge
dec
push
mov
int
xor
loopne
out
lds
and
clc
xchg
loopne
mov
cmpsb
dec
jnp
xchg
ljmp
sti
mov
add
out
sahf
pop
cmc
mov
bound
cli
ret
cmpsb
sti
cltd
stc
lods
ret
xchg
xchg
cs
popa
pop
sbb
xor
jnp
ret
insb
adc
xchg
loopne
iret
xchg
mov
in
not
cltd
push
mov
sub
shll
dec
jns
push
cltd
adc
mov
add
sar
dec
lcall
int
dec
jbe
and
nop
movsb
test
pop
and
mov
fcomps
lret
call
xor
ds
mov
cmp
fisttpll
test
addr16
jns
or
popa
lcall
and
icebp
icebp
mov
out
leave
lret
popa
xchg
in
into
in
pop
insb
faddl
pusha
cmp
lds
mov
btr
cmp
scas
loope
not
sub
outsl
movb
cmp
mov
mov
sbb
xor
pop
popa
out
rol
dec
cmp
fstps
hlt
pusha
mov
lods
sub
cmp
jno
fcomip
xchg
mov
dec
fistpl
xchg
and
std
ja
outsl
cli
jo
out
std
mov
jp
sbb
xchg
or
dec
loop
jmp
inc
xor
sarb
in
repz
sub
fwait
dec
leave
mov
out
test
sub
adcl
mov
ja
shlb
lea
adc
jae
mov
mov
dec
pusha
lods
push
inc
xorb
test
imul
cmpsb
jl
dec
daa
cmp
xchg
int
sub
pop
mov
or
data16
lds
es
int
add
jbe
push
pop
mov
mov
push
ljmp
and
in
jb
scas
cld
mov
adc
lds
stos
stc
mov
pop
stos
mov
pop
out
jb
jg
shrl
mov
pop
in
outsl
jg
push
push
cmp
mov
inc
mov
in
cli
xchg
sub
mov
cmpsl
in
jne
mov
aam
jp
aaa
mov
rclb
or
je
push
add
pop
inc
clc
mov
ror
push
xchg
ret
cli
loopne
dec
and
repnz
xchg
sbb
xchg
std
rcrb
icebp
mov
or
loopne
jecxz
cmc
pusha
dec
out
hlt
aam
and
ret
cmp
sub
icebp
loope
mov
popa
pop
call
in
or
jle
aas
adc
xchg
stos
cmp
ss
sti
cmp
aas
cmp
imul
and
lret
in
fwait
sbb
xor
shl
gs
cmp
std
sahf
xor
fwait
pop
xchg
cmp
stc
fsubrl
or
push
mov
adc
leave
ljmp
gs
outsb
jns
sbb
and
loop
xlat
adc
movl
sub
or
add
jns
xor
nop
fwait
and
rcrl
addr16
push
add
in
jno
dec
iret
xchg
mov
fsubl
adc
inc
lea
scas
jns
lahf
ret
pop
push
lcall
out
aad
push
mov
icebp
ret
sub
sub
outsl
mov
test
into
pop
sub
mov
mov
mov
jp
jle
roll
test
iret
lods
loopne
pop
mov
roll
scas
push
jp
push
cmp
jne
in
shl
scas
mov
mov
insl
inc
cmpsb
mov
aad
cmpsb
loopne
jge
enter
cmp
dec
scas
sarb
inc
or
lods
ret
cmpb
sub
sub
add
in
loopne
in
movsl
bnd
push
push
ss
repz
push
sub
pop
pop
outsl
aad
hlt
rorl
push
stos
and
cmp
dec
stos
xor
stos
into
shll
outsb
nop
pop
fdivr
jp
repnz
cmp
cli
xor
into
arpl
or
das
sbb
sbb
cmp
mov
xchg
jne
test
jb
in
cltd
les
out
jnp
push
mov
fnsave
xchg
stos
sub
cmp
pop
jb
loop
enter
icebp
test
add
mov
mov
hlt
inc
xchg
xchg
mov
rcr
jmp
decb
inc
int3
ret
push
lcall
fldenv
xchg
push
or
and
adc
movsl
xchg
sbb
push
pop
add
jno
psubb
orl
sub
push
cmpsl
outsb
out
data16
add
dec
cmpsl
lret
out
push
xor
xchg
call
pop
scas
inc
scas
shrb
pop
inc
pop
ljmpw
mov
out
fcmovnu
jb
arpl
mov
push
jno
rcll
mov
out
cwtl
outsb
push
scas
xor
pop
lods
nop
push
dec
adc
and
test
fistpll
adcb
cmc
adc
lods
mov
and
mov
jl
movb
cli
imul
mov
mov
int3
lahf
xchg
popf
rcrb
ret
insb
mov
mov
fsubl
outsb
out
adc
icebp
ss
mov
sub
movsb
mov
push
mov
aas
pop
cmpsb
adc
fucomp
cmp
jl
adc
iret
xchg
mov
stos
sar
mov
sti
xor
push
xor
add
test
divl
cmp
shlb
push
mov
sbb
add
dec
push
jle
push
mov
add
mov
mov
loopne
push
jno
inc
sbb
pop
cmp
cli
jmp
lds
pop
xor
xchg
mov
jns
es
lahf
xorb
out
sub
and
aas
test
dec
ja
inc
inc
xor
data16
inc
outsb
xchg
lret
mov
arpl
mov
xor
add
mov
jae
in
cmpsl
fisubs
xchg
movsb
icebp
pushw
fwait
jb
jns
xchg
sbb
outsl
push
and
test
adc
push
push
jecxz
inc
jmp
xor
inc
sbb
out
push
lcall
out
imul
xor
adc
mov
mov
movsb
pop
in
bound
fildl
mov
jae
cwtl
test
leave
sub
sbbb
dec
lahf
xchg
std
test
in
out
mov
sarb
cmpsb
jnp
shll
mov
les
scas
imul
mov
int
jmp
test
push
nop
cmpsb
ret
imul
sub
pop
xchg
inc
out
inc
fidivs
jno
sub
dec
mov
lahf
adc
outsl
adc
dec
xor
loope
imull
mov
jl
xorl
fcmovne
xor
cmp
pop
sahf
dec
ds
dec
loopne
cwtl
sbb
mov
mov
xchg
jmp
add
scas
in
push
in
inc
test
xlat
or
pop
mov
fcompl
xor
out
jp
mov
das
mov
fisttps
push
add
xor
sub
call
cmp
add
push
popf
inc
pop
lahf
xor
jns
inc
sti
jg
insb
dec
mov
mov
adc
addr16
das
adc
movsb
dec
sahf
sub
call
jae
sub
add
mov
cmp
xlat
icebp
or
mov
pusha
xor
sbb
int
test
and
push
aam
pop
adc
orb
push
daa
test
mov
mov
inc
mov
pusha
stos
stos
mov
jmp
xchg
mov
gs
xor
pop
lds
loopne
mov
iret
cli
cwtl
movsl
push
xor
push
dec
sbbb
notb
add
insb
jg
xlat
mov
inc
push
adc
data16
and
clc
sub
pop
int3
xchg
scas
dec
or
pusha
add
cwtl
jno
xor
mov
ret
and
call
cmp
jp
jle
mov
cmp
sub
cltd
ja
das
ljmp
daa
dec
imul
aad
movsb
inc
cmp
inc
imul
mov
into
inc
lcall
int3
pop
scas
stos
imul
aaa
adc
test
out
out
lods
fcomps
cmp
cmp
mov
cld
jno
je
xor
and
jl
sub
movsb
sarb
xchg
out
jmp
arpl
clc
xor
fsubrl
bound
push
sbbb
fdivs
popa
mov
repz
aad
jns
and
lcall
xchg
mov
mov
xor
cli
dec
mov
test
push
fists
and
dec
loop
lcall
movsb
sbb
loop
pop
cmp
addr16
fsts
pop
imul
mov
frstor
imul
jmp
out
xchg
inc
scas
push
stc
sub
adc
shrl
sub
mov
jne
xchg
das
inc
test
cmpsl
loope
sti
pop
sbb
cmp
jecxz
mov
jle
pop
jns
sub
call
neg
or
scas
cwtl
jae
repnz
cld
sarb
add
dec
fdivp
or
add
adc
iret
daa
pop
lock
out
sub
incl
or
jns
xor
xor
shll
nop
pop
test
mov
movsb
or
jmp
mov
dec
lods
imul
xor
add
add
in
cmp
cmc
dec
lods
insb
lods
push
fcmovnb
rcll
mov
jge
popf
sub
out
test
mov
sbb
lods
inc
in
idiv
cltd
gs
outsb
dec
adc
mov
mov
rcrl
adc
cmpsb
gs
and
jge
call
cwtl
push
mov
pushw
data16
sahf
fwait
push
xchg
dec
pop
inc
loopne
xor
cltd
rol
push
aam
xchg
sub
adc
lods
lock
mov
cmp
xchg
mov
and
hlt
dec
push
scas
cmp
mov
test
xor
bound
jg
mov
or
mov
xor
push
daa
dec
ja
lahf
cli
nop
ret
mov
xor
nop
inc
repnz
inc
stc
mov
sub
xor
inc
mov
xor
imul
inc
lcall
sub
mov
imul
std
jle
xchg
lods
in
adc
insb
jo
cmp
jmp
es
ja
ret
mov
divl
or
mov
push
ret
dec
sbb
fsubrp
mov
xchg
and
adcl
cmp
jb
push
cmp
sbb
xchg
in
imul
xchg
sbb
or
cmp
rcrl
test
inc
dec
test
call
sbb
ret
xor
popf
nop
mov
icebp
stc
jnp
stos
xchg
negb
arpl
bound
add
sbb
icebp
clc
stos
cmp
movsl
fsts
aas
outsb
jbe
sub
arpl
scas
loop
jo
adc
push
arpl
lahf
mov
cmpl
or
outsb
inc
rol
mov
cmpsl
push
mov
pusha
xchg
test
daa
adc
loopne
cmpsl
push
xor
sti
dec
lahf
daa
je
mov
movsb
jbe
or
mov
scas
gs
add
xorps
flds
inc
pop
jp
inc
mov
mov
cltd
pop
test
test
test
inc
inc
rolb
sub
movsb
inc
outsl
xor
xor
incl
adc
and
and
push
jmp
jne
push
lds
fmull
mov
leave
sar
adc
cmp
push
push
push
mov
shrl
xor
sbb
mov
test
sub
out
leave
rcrb
xor
lcall
enter
push
in
repz
lods
in
xor
scas
inc
sub
inc
push
cmpb
lret
mov
xchg
sub
mull
cmp
out
push
pop
aam
pop
addb
fnstcw
jg
hlt
aaa
cmp
pop
mov
out
hlt
loope
jo
es
stc
nop
jecxz
xchg
xor
clc
lret
mov
fidivl
and
inc
mov
and
cmp
scas
cmp
and
insl
pop
xor
sub
int
outsb
add
sub
ror
mov
cmp
mov
test
mov
inc
inc
je
sbb
lret
mov
pop
jecxz
jne
les
push
add
adc
outsb
shll
pop
leave
aad
push
mov
mov
pop
ja
js
inc
inc
push
jno
das
or
xchg
jae
jo
fstpt
jbe
mov
shrb
lret
cmpsb
mov
push
in
jmp
sbb
ret
adc
call
test
je
out
push
pop
and
lret
sbb
and
loope
mov
sbb
les
mov
or
adc
mov
pop
inc
xlat
lock
ret
dec
push
xor
orl
stos
aaa
xchg
push
xor
repnz
dec
movsl
test
mov
ja
arpl
mov
ljmp
out
mov
jl
jle
add
lock
adc
mov
in
mov
insb
outsl
popa
aaa
add
pop
lret
in
scas
adc
test
fstps
addr16
xor
popf
push
adc
jmp
cmc
shrl
lahf
mov
roll
mov
cs
loop
stos
mov
test
into
rsqrtps
out
test
adc
cmp
pop
lods
out
pop
js
xchg
and
sbb
mov
sub
movsb
xor
je
lods
inc
or
mov
add
addr16
push
and
inc
mov
in
loopne
cmpsb
or
mov
lods
mov
es
inc
inc
push
repz
cmp
fnstcw
push
arpl
es
lsl
push
int
pop
xor
int3
sub
adc
xor
cmp
test
mov
inc
or
mov
and
or
in
push
and
sub
mov
daa
mov
jl
push
mov
bound
jno
pop
test
xchg
add
jl
push
call
mov
aaa
push
sub
repz
push
cmpsl
ret
mov
add
int3
dec
push
leave
sub
bound
jmp
leave
jmp
or
or
jae
cltd
sbb
jmp
cmp
jle
sub
pop
mov
cwtl
enter
or
test
test
push
mov
sbb
lods
aad
and
inc
test
pop
push
int
and
xchg
shlb
inc
inc
out
pop
push
cmp
repz
loopne
sahf
mov
sub
dec
dec
adc
inc
sub
and
pop
xlat
int3
lret
addb
dec
jge
sahf
push
adc
data16
test
negl
and
adc
pop
outsb
sbb
sbbb
push
popf
dec
sbb
es
jg
dec
out
cmp
aam
push
mov
daa
pushf
cmp
xchg
adc
mov
orl
fnstcw
xorb
push
sub
test
cmpsb
dec
frstor
jbe
lds
pop
shll
ror
pusha
jno
or
sbb
in
xchg
pop
and
jns
mov
xchg
or
call
sbb
rcll
add
pop
mov
pop
bound
in
scas
jecxz
mov
stos
dec
out
push
test
or
pop
es
xchg
cmp
sub
in
xor
or
sahf
pop
es
iret
jge
out
aas
mov
enter
mov
adc
cltd
popf
aad
mov
push
jmp
les
sbb
ret
data16
rorb
jp
push
push
rolb
lock
mov
push
in
mulb
jno
dec
scas
pushf
scas
sbb
imul
loope
aas
loopne
push
add
sbb
sub
push
fsub
rcll
mov
sub
add
sti
mov
popa
dec
xchg
ja
xlat
fucomip
jne
out
adcb
add
sbb
and
nop
mov
and
ficomps
rolb
mov
mov
insb
jge
or
cmpsl
inc
pop
mov
xchg
mov
push
pop
mov
push
mov
cmc
adc
sub
fidivl
mov
imul
arpl
inc
int3
pop
rcll
inc
lahf
and
jbe
out
stos
jecxz
inc
jb
fwait
jp
fisttps
out
push
xor
inc
dec
adcb
insb
test
sub
sub
dec
sti
out
mov
dec
cmp
pop
nop
aam
rep
cltd
lcall
call
adc
jno
and
in
push
or
dec
call
mov
popf
sarb
push
jl
dec
lret
mov
lahf
or
aas
mov
jecxz
movsl
inc
lea
pop
xor
xchg
dec
mov
and
xchg
sarb
and
or
jnp
sub
test
inc
adc
lret
adc
cmpsb
xchg
add
lret
push
and
jl
mov
fstl
loopne
inc
sbb
aad
xor
pop
push
test
cmc
rorl
lods
pop
sti
mov
out
xchg
out
sti
out
mov
lret
mov
repz
divb
mov
cmpsb
clc
shll
repz
popf
push
in
sbb
insl
aam
or
pop
out
and
std
mov
hlt
movsl
mov
data16
icebp
cmp
cld
out
out
popa
test
test
mov
sub
cmp
loope
dec
dec
fistl
leave
jns
faddl
shrb
fistps
sti
push
test
xchg
lock
xchg
xchg
call
pop
outsl
mov
or
mov
in
mov
gs
xchg
mov
mov
pop
xchg
or
dec
lcall
sbb
or
adc
add
div
xchg
bound
lods
cmp
sbb
add
push
adc
mov
push
push
cs
inc
sub
push
jp
shrl
sub
aaa
lods
in
mov
sub
xchg
jl
movsb
adc
xchg
adc
enter
or
in
sbb
xorb
or
mov
mov
sbbl
xlat
cmpb
jbe
mov
aam
movsb
aas
jbe
call
mov
lods
test
aad
push
or
sahf
add
clc
pop
xchg
inc
add
pusha
dec
add
imul
mov
ficompl
out
dec
sbb
adc
dec
mov
mov
pop
dec
adc
cmc
das
loope
fcoml
or
xchg
pusha
clc
push
push
sbb
push
cld
mov
stc
push
cmp
lret
inc
push
scas
mov
inc
jecxz
ljmp
imul
xorb
mov
pop
dec
imull
adc
mov
inc
mov
mov
ret
out
push
icebp
mov
mov
mov
adc
add
idiv
lds
scas
pmaxub
sbb
push
mov
mov
fmull
pushf
fs
sub
div
fstps
mov
push
test
test
push
movaps
xor
xchg
cmp
add
daa
dec
pop
jo
insb
es
dec
std
xor
mov
jae
xchg
jle
in
cmpsb
cld
xor
test
adc
test
mov
in
jno
pop
jg
or
int3
popa
pop
out
daa
or
mov
cmp
out
fbld
lods
sbb
mov
push
movl
mov
jp
mov
jo
xor
ficomps
cmp
cltd
out
mov
rcrl
pop
cltd
mov
mov
sbb
popf
out
les
fnstsw
daa
repz
jl
jo
push
call
mov
dec
and
dec
mov
add
add
cpuid
adcb
pop
daa
in
push
cmpsl
int3
sbb
orb
push
add
mov
pop
in
rolb
push
sahf
dec
shlb
stos
push
inc
add
mov
aaa
pop
xchg
iret
call
jp
popa
aad
in
pmulhuw
imul
adc
mov
dec
into
insb
movsl
add
inc
mov
and
sub
xchg
push
stos
sti
icebp
fiaddl
adc
jnp
add
fiaddl
push
fidivs
mov
mov
and
mov
jo
inc
movsb
movsb
dec
push
insb
xor
aad
into
sahf
sub
mov
or
mov
loop
xorl
out
or
mov
and
cmc
enter
pop
jmp
xor
enter
insl
pusha
pop
popa
xlat
shr
xchg
stc
inc
js
inc
xor
pop
shl
dec
daa
in
xlat
xchg
pop
pop
inc
dec
iret
int3
xchg
dec
aad
sub
xor
std
add
mov
mov
adc
lock
mov
jno
stos
inc
out
subl
movsb
fistpll
or
in
loop
lea
sbbl
sbb
add
lret
sbb
jmp
push
dec
loop
bound
into
cmp
seta
orb
adc
ja
adc
in
lock
sbb
sub
mov
outsl
xchg
enter
shrl
popf
gs
mov
ja
cmp
test
jae
pop
xchg
xchg
leave
push
jmp
shl
cs
pop
mov
adc
push
mov
sbb
dec
notb
stos
mov
xchg
sbb
lahf
and
aad
and
fidivs
leave
mov
loop
faddl
inc
enter
or
cmp
fmuls
roll
out
cltd
js
sarb
xchg
jnp
pop
ss
cmp
js
out
xor
jp
ret
push
xor
mov
push
cmp
add
push
mov
xchg
dec
sbbb
pushl
std
cmpsl
fistpl
dec
rorb
cltd
sbb
cmp
insb
fidivs
aaa
jge
or
sub
cld
mov
icebp
lret
test
das
divl
test
sbb
inc
scas
jne
lret
or
cs
testb
lods
pop
lock
xchg
mov
repz
push
loop
and
xor
int
jmp
push
shrb
dec
cli
aam
xcrypt-ctr
cmpsl
lcall
mov
outsb
add
rolb
outsb
mov
xchg
ja
mov
negl
jle
rcl
mov
add
xor
xor
lods
xor
or
je
sbb
test
mov
int3
cmpsl
test
fstl
pop
incl
or
lods
stc
mov
dec
ljmp
aad
testb
jns
jnp
rcrl
and
pop
mov
push
pop
push
daa
clc
data16
lahf
int3
and
test
pop
mov
xchg
adc
mov
jmp
jg
call
push
adc
in
hlt
cs
inc
rcrb
xor
lds
test
mov
fistl
test
xchg
xchg
xor
addr16
push
inc
ds
xor
stos
nop
mov
out
inc
dec
inc
mov
jecxz
or
xchg
mov
mov
sahf
mov
fidivrs
cmp
inc
jmp
aaa
or
push
jmp
inc
pusha
mov
push
adc
mov
fcomps
or
cmp
movsb
or
fdivs
lret
xchg
popa
jnp
das
pop
mov
iret
inc
fmuls
jg
cmp
dec
mov
lods
cmpsb
sbb
jecxz
sub
orl
jg
xchg
xor
and
push
inc
addb
pop
and
in
pop
shl
push
sbb
inc
push
js
call
mov
jl
scas
or
out
gs
repz
cmpsl
jg
nop
filds
lock
mov
lcall
imul
mov
out
add
jno
std
cmp
addr16
dec
leave
xchg
pop
mov
scas
mov
movsb
cmpsb
jbe
sub
in
add
scas
xor
push
in
dec
lret
aas
out
out
cwtl
push
ret
stos
jle
outsl
or
pop
xchg
lods
jmp
aas
movsl
lahf
loope
cmp
psubsw
push
pinsrw
dec
lods
sub
cld
je
les
jp
dec
or
repz
lock
push
dec
adc
pop
add
mov
adc
and
xchg
or
dec
pop
jb
xchg
cmp
xchg
or
into
arpl
insl
test
lahf
fistl
addl
jg
and
inc
lods
adc
cld
test
mov
shrl
jns
scas
and
roll
fldt
xchg
in
inc
xor
or
clc
in
and
outsb
scas
test
test
fistpl
movsl
lods
jb
decb
mov
and
fildll
push
adc
repnz
enterw
sbbb
addr16
mov
ds
scas
lods
loope
cmp
adc
imul
out
push
inc
or
lds
lahf
pop
sub
pop
repnz
and
mov
push
lds
lahf
lds
call
cwtl
add
outsb
divl
addr16
pop
lea
outsb
dec
inc
fmull
movb
jmp
mov
clc
into
cli
mov
test
fxch
fs
das
jo
cmp
inc
das
dec
popf
fsub
sbb
or
notl
mov
push
cltd
and
mov
add
ss
rorl
bound
cld
jp
mov
loop
lods
push
mov
cli
mov
sahf
or
jg
je
rclb
jae
imulb
lret
mov
and
lock
mov
push
push
fstpt
sbb
addr16
and
iret
aaa
stos
lcall
mov
cmp
out
mov
iret
nop
and
pop
loopne
sub
out
das
push
sbb
sti
inc
xchg
sbb
and
mov
dec
inc
je
data16
jecxz
mov
cmpsb
xor
mov
call
add
mov
outsb
popa
fiadds
pop
push
pop
jmp
iret
aam
in
shll
xchg
add
pop
test
push
mov
das
inc
cli
mov
fldt
jg
je
pushf
fsub
mov
nop
cmove
sub
mov
sbb
or
clc
mov
shll
mov
xchg
ds
scas
shll
lret
push
sti
or
aam
add
cmp
ret
roll
test
xchg
pop
mov
mov
in
jmp
mov
xor
addb
mov
dec
dec
es
pop
call
lret
mov
lcall
sub
and
aam
mov
mov
and
ss
dec
aas
sub
sti
fwait
ret
fisttpl
sbb
sub
adc
int
add
sahf
lret
pop
std
jo
out
xchg
adc
add
sbb
pushf
pop
dec
adc
loop
out
cmpsl
dec
inc
prefetch
pop
aaa
cmp
arpl
mov
push
test
cmpsb
jge
sarl
cli
sub
into
je
movsb
dec
cli
lds
xor
cmp
and
mov
and
scas
mov
xchg
jmp
pop
jecxz
jne
mov
cmp
lahf
gs
push
aaa
mov
mov
in
sbb
pop
cli
sub
aaa
jmp
lods
dec
test
mov
adc
xor
dec
in
pop
jg
sti
add
std
in
out
test
xor
xchg
addb
sbb
dec
xor
sti
test
incl
stos
mov
pushf
sbb
and
jno
out
pop
or
pop
xchg
addr16
stos
aam
cmc
insb
sub
jmp
and
jo
jge
push
or
out
std
sbb
xor
into
lret
xchg
jge
dec
bound
lods
jo
divb
add
rcrl
clc
ss
call
shll
repz
dec
lods
jae
mov
test
mov
fistpll
in
or
mov
mov
sbb
cltd
inc
xchg
adc
repz
fst
mov
mov
std
dec
xchg
sti
add
jecxz
int
les
or
cmp
in
cmp
in
sahf
pop
xor
rcll
pop
xchg
out
daa
je
mov
enter
or
xchg
push
neg
adcb
clc
leave
xchg
pop
test
std
push
jmp
pop
loope
imul
imul
push
mov
or
addb
stos
mov
inc
inc
es
fwait
scas
or
dec
pop
mov
pop
gs
lret
enter
lods
aaa
dec
hlt
imul
jae
and
adc
call
and
dec
gs
xor
mov
push
fnstcw
shlb
insb
sbb
hlt
xchg
inc
cmp
cmc
lods
call
out
push
dec
lock
cmc
dec
fisttpl
bnd
ret
lcall
jb
jle
cwtl
adc
push
icebp
pop
jno
push
pusha
andb
into
or
sub
out
clc
pusha
push
in
test
mov
jmp
add
loope
out
aaa
sbb
push
sub
dec
movsb
cwtl
xchg
pop
mov
mov
jns
cmp
std
fldt
or
lret
pop
in
sub
cmp
fldt
lods
mov
dec
or
jae
mov
inc
mov
cmpsl
pop
cmp
xchg
xorb
cs
pop
push
jle
jecxz
sbb
cmp
aam
add
mov
movl
pop
jp
push
bnd
call
mov
int3
arpl
cmpsb
mov
into
jle
mov
mov
popf
hlt
test
push
sbb
push
ret
pop
dec
lods
aad
fimuls
push
push
mov
and
gs
pop
in
fisttps
inc
add
fistps
sub
imul
lret
jbe
xorb
das
mov
push
dec
inc
or
mov
mov
sub
adc
dec
sub
rorb
mov
or
ret
repz
pop
mov
sarb
aas
xor
mov
sarl
cmpsl
inc
xor
push
jl
aaa
or
pop
mov
jmp
shrb
bound
repz
xchg
mov
test
push
in
out
mov
imul
sarb
out
out
out
pusha
jae
aam
adc
das
jl
inc
dec
lcall
ret
ds
ljmp
gs
repz
xchg
mov
sub
sti
mov
out
mov
add
aaa
adc
or
rcl
sbb
push
mov
adcl
test
mov
push
dec
and
inc
jecxz
xchg
mov
pop
mov
mov
dec
sub
loope
repz
cltd
imul
jp
jo
dec
inc
cltd
cmp
mov
push
cmc
adc
inc
sarl
push
jb
fldcw
lea
cli
mov
pop
rcrl
mov
mov
push
mov
xor
sbb
test
incb
test
pop
sar
out
jg
xchg
xchg
cmpsb
sbb
inc
cmp
dec
push
loopne
mov
and
cmc
call
mov
jl
sub
adc
or
xchg
ljmp
test
fmulp
dec
aaa
test
notb
pop
lock
divl
jbe
mov
xor
lea
jl
daa
lods
insl
push
movsb
inc
adc
cli
mov
mov
xor
fnstenv
sbb
fdivrs
mov
mov
push
xlat
mov
dec
pop
dec
shr
push
pop
imul
cmp
sti
cmp
in
add
rcrb
daa
mov
xor
fnsave
in
pop
ss
xor
in
jno
and
aam
push
xor
mov
outsl
repz
pop
vmwrite
pop
cltd
repz
enter
test
outsb
fs
outsb
pop
fs
jno
and
ds
mov
dec
add
pusha
fistl
mov
jge
fs
divl
mov
mov
inc
jno
add
jl
mov
cmpsb
pop
mov
cli
lods
jl
lds
cmp
lods
mov
stc
xchg
js
jne
pop
dec
mov
inc
jg
and
lret
ja
xchg
adc
jg
pop
xchg
inc
jo
sub
shll
idivb
lcall
cli
cmp
and
cmp
push
lods
leave
adc
arpl
add
jnp
xchg
aad
in
sub
push
sub
dec
sub
out
in
fmulp
mov
ret
and
in
jle
push
adc
je
mov
adc
aas
aas
mov
out
dec
test
jae
xchg
mov
xchg
xor
sbb
pusha
push
daa
in
mov
mov
loop
mov
fisttps
mov
inc
or
mov
dec
movsl
addr16
imul
imul
dec
ljmp
adc
fimuls
fimull
adc
adc
sub
ror
cmpl
jl
scas
xlat
ds
bound
stos
adc
insl
je
pop
rcll
ds
push
movl
jns
imul
dec
fldenv
jg
jmp
mov
subl
ss
mov
stos
ljmp
loop
xlat
test
subb
push
aad
sub
outsb
xor
in
xchg
xchg
lret
jae
test
dec
xor
outsl
mov
inc
push
dec
std
jle
dec
pop
mov
ss
mov
cltd
xlat
imul
inc
das
push
push
push
mov
pop
mov
xchg
mov
in
mov
mov
sbb
mov
int3
xor
das
or
pop
or
add
dec
cmpsl
in
int3
adc
jo
negl
out
frstor
movsl
mov
insl
cltd
leave
adc
das
loope
jge
out
ds
das
ljmp
test
mov
es
aas
dec
fcmovb
ret
dec
inc
xchg
mov
push
adc
add
cltd
sub
add
pop
in
add
pop
jmp
mov
pop
mov
and
lahf
push
dec
mov
icebp
sub
stos
outsb
sbb
ja
rolb
mov
ret
mov
push
fwait
iret
inc
mov
test
lret
xchg
scas
sub
filds
cmpsb
pushf
jecxz
mov
mov
dec
psubusw
shrl
push
dec
fadds
or
inc
fld
cmp
shlb
sbb
mov
mov
je
push
ror
xor
xchg
mov
push
sti
xchg
mov
js
add
sarb
js
es
mov
fistps
adc
or
repz
push
mov
divb
pusha
stos
fidivrs
mov
scas
dec
adc
add
and
xchg
std
leave
and
inc
daa
jae
xchg
mov
jecxz
xchg
enter
add
mov
push
test
add
fs
xchg
add
lods
push
sub
test
cmpsl
mov
mov
jae
cltd
pusha
adcl
cmc
xchg
dec
mull
repz
mov
jge
in
push
or
add
jg
cmp
jno
jp
xor
in
fdiv
jbe
lea
push
dec
clc
dec
test
xchg
lcall
add
dec
push
ja
mov
imulb
orl
sbb
push
sbb
aaa
or
test
cmpsl
and
fiadds
in
sti
mov
mov
ret
repnz
push
pop
pop
dec
mov
xchg
mov
dec
lahf
mov
cmp
mov
jl
std
add
ficoms
mov
jo
leave
add
sbb
into
in
jecxz
jne
scas
scas
repnz
adc
jp
sbb
sti
jmp
orb
test
rorl
lods
jb
push
dec
lock
and
dec
fdivrl
jb
outsl
jnp
dec
dec
dec
popa
push
xlat
hlt
in
iret
jo
fsubr
or
movzwl
mov
mov
ret
jmp
or
lahf
rolb
fsubrs
pop
dec
mov
lds
int3
mov
idivb
dec
mov
es
fwait
sub
daa
int
daa
mov
xor
fwait
movsb
in
mov
sbb
mov
cs
sbb
into
test
ret
or
mov
je
loopne
jl
or
push
and
ss
fldt
jne
and
fwait
test
mov
lea
std
xor
je
xlat
out
jno
or
in
pop
aaa
movsl
ret
mul
jle
data16
repz
ja
jo
daa
pop
add
or
jecxz
mov
icebp
mov
outsb
sub
divb
sbb
dec
push
pop
xor
shl
push
std
push
mov
xor
je
data16
sahf
mov
inc
dec
and
jle
sbb
lahf
call
xchg
xor
fmuls
lea
jne
push
jg
xlat
aad
lahf
leave
sbb
pop
fstpt
in
in
sahf
aam
push
test
lods
jns
std
popf
movsb
fs
mov
int
test
inc
mov
int3
mov
cli
stc
push
mov
and
xor
pop
scas
mov
xchg
lret
and
bound
rcr
jp
pop
mov
jne
cs
cld
dec
mov
aas
add
sbbb
pushf
sub
adc
add
dec
cwtl
in
dec
add
jnp
pushl
or
mov
push
mov
inc
cmp
inc
cmpsl
mov
ds
ja
les
paddb
xor
pop
xchg
shlb
faddp
cld
inc
xor
mov
les
in
cmpsb
daa
rcr
cmp
stos
popa
sti
lock
bnd
push
xlat
jg
inc
push
ljmp
test
cld
orl
xchg
mov
or
inc
icebp
imull
mov
lret
or
out
pop
lods
sti
mov
dec
cmpps
sub
dec
sub
inc
and
lods
scas
aaa
ret
inc
sbb
repz
popa
test
inc
xor
mov
and
mov
pop
and
lods
pop
int
out
mov
leave
cmp
repnz
lret
jmp
xchg
cmpb
rcll
rclb
cmp
hlt
jne
push
mov
aad
add
bound
je
fisubrs
mov
fcomps
mov
out
add
fcmovnbe
mov
sub
cmovge
ret
adc
mov
dec
cmp
jmp
xchg
mov
mov
jne
mov
out
stos
mov
xor
cmp
adc
add
sbb
mov
cltd
lea
inc
jecxz
and
pop
fisubrl
stos
sub
mov
push
out
cmc
dec
loopne
cltd
and
mov
ret
xor
add
mov
nop
iret
orb
pop
cltd
xlat
sbb
add
test
test
xor
outsl
in
push
je
adc
cmc
mov
lret
movsb
loopne
jle
sbb
cmpsb
mov
mov
cmc
jbe
push
jae
rep
addr16
mov
jae
cmp
jp
lea
fnstcw
fs
call
call
addr16
aad
mov
popw
mov
sarl
fildl
fildl
popf
push
gs
loop
sub
mov
cld
push
pop
cmp
lahf
and
shr
mov
les
int
jbe
mov
sahf
add
fcomp
dec
cmc
inc
jns
jns
cmc
sarl
xor
movsb
sub
jne
push
testb
int
sub
pushf
mov
rol
les
xor
mov
jecxz
jecxz
repnz
or
add
sbb
jb
in
push
add
les
dec
xlat
lret
mov
cmp
jne
iret
repz
lock
jno
and
lcall
xchg
push
cli
imul
mov
pop
leave
lods
repnz
mov
sub
jle
lea
aad
cwtl
pop
sarb
lds
xor
inc
mov
call
or
ljmp
mov
lahf
ret
mov
push
fcomi
dec
xor
xchg
lods
loop
dec
jno
cmp
or
push
jle
cmc
shll
or
jbe
js
imul
aaa
cltd
lcall
je
push
jae
pop
add
into
insl
mov
cltd
lret
jge
js
add
xchg
loop
sahf
insl
les
and
cmp
aam
jae
or
decb
sub
xor
sbb
outsb
inc
adc
jo
xchg
insl
mov
xor
mov
bound
adc
popa
sbb
pop
into
rorl
adc
scas
or
inc
jcxz
out
jno
dec
int3
sbb
jecxz
xchg
inc
sarl
push
arpl
mov
ret
leave
call
fwait
and
loope
push
jo
inc
sahf
out
sarb
dec
lret
cmc
rorb
mov
int3
xchg
scas
pushf
cmp
cmp
not
push
sub
pop
test
push
movsl
int
fisubs
ret
push
push
scas
lods
cwtl
push
dec
in
sbb
xor
bound
mov
mov
shr
push
cmp
js
mov
fildl
test
or
out
mov
jp
std
cmpsb
cwtl
dec
adc
cltd
sti
add
outsl
mov
pushf
hlt
inc
insb
adc
pop
movsb
mov
push
bound
xchg
xor
jmp
mov
mov
movsb
jo
jo
adc
fistps
es
loopne
pusha
aad
dec
movsl
lds
lods
mov
int3
xchg
adc
jnp
sarb
popf
xchg
xchg
cld
dec
jge
xchg
or
jmp
mov
mov
add
push
incb
push
push
adc
mov
add
jo
add
bound
jmp
lods
adc
adc
or
and
pop
lods
fcomp
dec
push
insl
outsb
ja
mov
add
pop
mov
sbb
adc
stc
mov
sbb
sbb
mov
lret
repz
roll
xchg
push
jl
lahf
jl
addr16
les
and
idivb
adc
stos
sub
in
or
sub
sub
push
fisttpl
and
xchg
adc
push
adc
sarb
add
repz
or
mov
les
cmp
lods
fsubl
nop
mov
mov
and
push
cmpsb
adc
aaa
adcl
lock
in
aas
cs
nop
mov
xchg
repz
xorb
push
gs
jl
pop
add
lds
or
inc
pop
out
out
pop
inc
dec
adc
xor
daa
push
mov
cwtl
das
xor
dec
insl
scas
sub
fisttpl
out
jge
out
mov
sbb
in
into
out
clc
pop
movsb
test
incl
pop
push
lret
adc
jl
gs
daa
mov
xchg
pushw
dec
fcoml
jp
cld
jmp
mov
data16
pop
dec
subb
lahf
mov
push
addl
jge
push
pop
shrb
cltd
fnstsw
ljmp
sbb
pushf
and
push
pop
ds
cmp
test
fwait
arpl
mov
cmp
stc
ja
xchg
push
je
fwait
and
push
out
inc
add
mov
jge
arpl
insb
push
mov
mov
sar
fs
mov
je
scas
fldt
orl
and
ret
lods
mov
mov
push
rcl
ss
aaa
ljmp
jnp
mov
loopne
in
and
or
pop
lret
shlb
mov
cltd
repz
push
pop
mov
lcall
loopne
loop
and
sbb
out
dec
stc
sbb
clc
add
push
mov
mov
icebp
xchg
les
xchg
mov
pop
shl
fnsave
add
mov
shll
and
repnz
shrb
insl
mov
jo
scas
lock
cmp
adc
pop
sub
xor
cmp
scas
mov
aas
xchg
int
mov
frstor
insl
loope
jnp
imul
sbbl
jl
and
les
inc
sbb
cmp
cmp
pop
out
jge
mov
shl
or
cmp
arpl
cmovns
mov
decl
shll
cmp
push
fst
sub
jmp
iret
xchg
jae
repz
mov
jbe
test
icebp
mov
push
mov
add
int
dec
push
movsl
dec
sar
in
test
adc
or
rcr
mov
dec
leave
and
orl
sar
sbb
push
push
outsb
sbbb
cmp
xor
mov
push
insb
adc
mov
lret
add
mov
jge
je
ds
sahf
sbb
cmp
jle
jg
mov
clc
sub
mov
xor
xor
or
enter
mov
rclb
fldcw
sbb
mov
fmulp
mov
jmp
mov
into
cmp
sub
lahf
pop
mov
movsl
push
mov
int3
push
push
or
in
sbb
jbe
int
jg
pop
dec
mov
icebp
fimull
ja
xor
cli
fdivr
clc
xchg
je
in
pop
sbbl
dec
lods
subb
enter
mov
insb
cld
mov
jecxz
stos
jecxz
mov
sbb
xor
sub
or
lret
es
aas
push
out
lds
ret
and
xor
cmp
jp
sti
xchg
xor
pop
fmuls
aad
inc
fsin
jae
insb
outsb
mov
je
pop
dec
jecxz
push
mov
cwtl
aam
xor
sub
mov
push
fwait
pop
cltd
clc
adc
xor
movsb
jp
push
movsl
add
inc
daa
sub
inc
sti
outsl
fisubs
mov
and
iret
cs
js
inc
ljmp
aaa
shrl
push
sbb
inc
push
mov
inc
lock
or
pop
mov
dec
nop
test
fiaddl
lock
aas
inc
xchg
mov
cmp
xor
loopne
loop
insb
sub
cs
mov
jl
lahf
fistpl
fwait
sbb
shrl
push
add
jecxz
dec
sub
shrl
in
imul
jbe
dec
nop
mov
insb
cltd
mov
jp
add
push
or
cmp
stos
dec
pop
mov
std
popa
sbb
pop
ss
outsl
xor
sbb
outsb
xor
lcall
and
fcoms
pop
xor
test
mov
bound
les
js
ret
or
fdivrl
out
cmp
out
cmpb
stc
je
cmp
pop
imul
out
or
arpl
xchg
push
dec
xor
fisubl
mov
and
out
mov
add
fnstcw
pop
jb
lds
int
cmp
inc
xchg
ss
test
dec
inc
int3
adc
cmp
mov
inc
inc
iret
inc
push
loope
dec
add
ljmp
adc
scas
aad
cmp
je
sbb
push
mov
push
sub
testl
sarb
xchg
test
fs
push
daa
push
cmpsb
arpl
nop
lcall
push
jecxz
daa
xchg
jae
daa
fwait
test
loopne
aaa
fisubrl
sbb
push
ficomps
add
cld
jb
icebp
xchg
cltd
xchg
and
sub
sbb
push
popf
push
data16
cmp
jbe
mov
add
add
sbb
pop
mov
scas
arpl
int3
fisubs
ss
pop
dec
aad
out
inc
out
push
mov
pushf
cmp
das
out
push
hlt
xor
das
mov
mov
push
pushf
orb
dec
jmp
mov
cmp
test
inc
fdivl
xor
jl
aaa
or
jecxz
sbb
pop
mov
mov
adc
movsl
lahf
pop
decb
adc
out
addr16
scas
sti
stc
pop
xchg
sub
ss
mov
and
add
clc
stos
adc
xor
push
mov
push
stc
cli
dec
loopne
repnz
push
inc
jg
aas
mov
jbe
clc
inc
mov
and
aam
and
loope
xorb
cmp
lcall
push
rcr
out
push
push
call
fldt
das
adc
pop
jg
adc
cmp
ss
mov
pop
lea
fwait
xor
insb
cli
pop
push
int3
sahf
test
cmp
mov
popf
nop
and
inc
pop
aaa
out
in
fisttps
das
mov
mov
lods
xor
daa
jbe
out
or
lock
push
pop
stc
stos
out
dec
stc
cwtl
int
jmp
mov
pop
mov
mov
cli
mov
out
lods
xchg
pop
les
imul
jb
sahf
jne
adc
insl
sbbb
int3
hlt
mov
jmp
mov
push
or
mov
aad
jne
inc
xlat
test
cmp
push
adc
dec
into
xchg
mov
sub
ja
jno
addr16
xor
test
jl
popf
add
pop
inc
rcrb
pop
lds
mov
xchg
inc
push
test
fdivrl
loop
sub
ds
push
gs
int3
fsubrs
sub
add
out
cltd
mov
out
arpl
lret
lds
cmpsb
test
jmp
sbbb
aad
lods
mov
hlt
jns
out
sbb
int
daa
fsubr
lcall
imul
push
sbb
adc
cli
add
jae
roll
clc
mov
jl
jae
sbb
cli
scas
xlat
push
xor
cs
add
and
add
pop
push
jns
inc
in
jp
pusha
out
cmp
dec
dec
or
sbb
mov
cwtl
sbb
push
fimuls
push
mov
pop
dec
jns
push
xlat
jmp
clc
jl
cmpb
dec
adc
pushf
sbb
iret
mov
adc
cwtl
daa
popf
das
lret
xchg
push
mov
jl
fmulp
ja
int3
mov
xor
sbbl
test
mov
sbb
arpl
arpl
cli
xor
dec
shrl
mov
in
shll
mov
add
std
and
out
pop
and
loop
ljmp
andl
dec
daa
fisubrs
jae
jns
lcall
add
add
jns
cmp
xor
push
fcomps
add
jmp
leave
mov
xchg
jmp
jmp
cli
in
adc
loopne
jne
mov
jl
pushf
into
xchg
pop
fisubrl
pop
jb
jmp
aad
scas
push
std
clc
jno
imul
mov
mov
push
jns
es
shll
inc
mov
mov
push
cmp
in
inc
jecxz
cmp
fcoms
fisubrl
outsb
inc
jecxz
lds
sub
fldcw
sbb
inc
std
outsl
js
inc
es
outsb
vorpd
add
aaa
add
and
clc
jecxz
pop
xchg
cmp
dec
mov
mov
push
sbb
dec
jne
int
repz
pop
and
ljmp
mov
sbb
mov
stos
test
fidivs
jle
lock
stos
mov
xor
pop
sbb
mov
lret
sti
mov
cmp
jmp
cs
mov
jo
ret
sbb
push
mov
pop
fwait
and
jmp
mov
jmp
jno
cmp
orb
dec
push
leave
push
mov
sub
bound
cmp
pop
sbb
shrb
push
divb
cs
outsl
lcall
mov
sti
icebp
rorb
call
dec
notl
pop
adcb
pop
mov
bound
xchg
pop
lret
sub
xchg
in
push
push
cld
push
js
mov
or
cmp
gs
mov
push
jg
insl
dec
dec
lods
adc
stos
or
mov
and
mov
rcr
dec
jl
dec
das
cmp
sub
ret
mov
jl
or
in
adc
rcr
jbe
lahf
dec
mov
push
or
rcrb
xor
int3
call
ja
into
int3
mov
and
lahf
sbb
ljmp
and
out
mov
inc
orl
jl
fs
outsb
test
movsb
xor
test
ja
test
pop
flds
and
mov
mov
icebp
xchg
pop
dec
pop
mov
cmpsl
jmp
fcmovnbe
lcall
mov
add
adc
mov
xchg
icebp
mov
lods
ficompl
xlat
aad
jbe
adc
xlat
push
mov
sub
pop
inc
mov
and
scas
popf
pop
pop
fisttpll
mov
xor
das
dec
cmpsl
and
inc
int3
lcall
fimuls
inc
mov
add
out
pop
xorb
mov
and
subl
in
mov
dec
cmp
repnz
lock
popl
xor
repnz
test
pop
loopne
inc
cli
push
mov
mov
cmp
es
or
inc
fisttpl
cmpsb
ds
rcrb
mov
pop
fsubrp
shll
sar
mov
or
jl
pop
mov
sub
jb
test
mov
jg
jmp
push
lds
mov
mov
rorl
xor
movswl
jecxz
ss
insl
xor
mov
xor
mov
aam
test
jo
cmp
ds
xchg
jl
icebp
mov
js
mov
lahf
mov
or
sub
push
adc
arpl
lahf
lea
jb
sub
addr16
xchg
fsubrs
inc
xchg
jecxz
mov
faddl
ja
cmpl
pushf
loopne
ds
out
cmpsb
movsl
filds
pop
out
sbb
cltd
shlb
fcmovb
data16
mov
or
push
test
jnp
sub
jmp
push
jg
in
pop
pop
outsl
push
popa
outsl
push
jmp
mulps
jne
or
sbb
aad
lret
cmpsb
adc
lahf
test
xchg
adc
cmp
in
jne
fisubrs
jl
cmpsl
push
push
data16
pop
mov
add
jo
scas
add
inc
add
outsb
dec
xchg
push
lock
lcall
sti
dec
ljmp
movsb
in
xor
mov
xorl
xor
cmpl
lret
xlat
mull
jl
shr
out
aam
sahf
test
rolb
pushf
inc
and
ficoml
dec
inc
les
imulb
pop
xchg
xor
iret
imul
movsb
mov
add
xor
inc
data16
int
inc
cmp
push
cld
out
jae
cld
mov
les
loope
and
pop
xchg
mov
mov
cltd
aas
loop
lock
xchg
repnz
jnp
lea
dec
mov
jno
cmp
jl,pn
cmp
push
pop
sbb
lahf
xchg
push
ret
cld
or
pop
inc
xor
shll
loope
jae
fiaddl
mov
adc
in
pop
pop
pop
mov
sbbb
xchg
or
jnp
pop
out
rcr
jg
lods
mov
fimuls
xorb
aam
pop
push
fwait
std
add
pop
lret
cltd
cltd
and
push
inc
dec
push
dec
mov
xor
adc
mov
mov
push
popa
ret
loopne
sbbb
xchg
dec
loope
pop
pop
dec
and
ret
in
pop
sub
loope
mov
or
test
adc
sahf
les
fidivl
call
cltd
jp
xchg
xchg
jmp
into
dec
call
lret
loop
fstpl
pop
push
dec
xor
mov
icebp
pop
cs
nop
pusha
dec
or
hlt
fmuls
aaa
push
lret
adc
xor
ret
push
add
sahf
stos
cltd
or
cmp
xor
in
inc
mov
sub
mov
dec
loopne
push
js
js
mov
xchg
inc
in
sahf
out
mov
add
icebp
cmp
or
aaa
scas
outsb
test
mov
sbb
push
sbb
gs
xchg
xor
xor
and
and
adc
lods
or
in
push
push
or
repz
push
mov
xchg
jl
cmc
push
ja
lret
adc
sbb
imul
inc
add
sbb
add
xor
fildl
push
mov
mov
cmpsb
adcl
mov
mov
pushf
xchg
insb
hlt
lret
aas
xchg
adc
push
or
pushf
pushf
jle
sub
or
pop
cmp
dec
push
fcoml
hlt
shlb
repnz
mov
mov
sub
mov
or
cld
hlt
pusha
clc
insl
dec
imul
push
mov
pop
cmp
sarb
push
pop
lock
pop
adc
cmp
cwtl
ja
cmpsl
pop
hlt
cwtl
dec
in
daa
fdivrl
or
sub
add
notb
shlb
inc
rcrb
xchg
ss
test
mov
adc
pop
push
xor
or
pushf
pop
add
and
test
movsl
mov
roll
mov
test
or
inc
rorl
jnp
dec
xorl
add
mov
pop
out
adc
ljmp
decl
adc
mov
push
call
pop
xchg
sahf
or
nop
icebp
les
jg
and
inc
fldl
xchg
cmp
mov
or
cli
leave
rcll
jg
shll
dec
add
inc
sbb
sub
fs
jae
pop
mov
shll
fstpt
sbb
mov
into
mov
pop
rclb
lahf
push
outsb
cmp
stos
mull
lods
pop
test
cli
call
fnstsw
stos
cli
aas
inc
fcmovne
mov
sbb
sbb
je
xchg
xor
into
mov
jae
movsb
out
movsb
xchg
lcall
adc
adc
into
gs
or
aam
mov
dec
cmpsb
pop
pop
mov
sub
leave
sbb
adc
icebp
dec
inc
push
xor
push
sbb
pop
jp
cmpsl
jge
dec
xchg
or
dec
icebp
and
pop
das
lea
pop
outsl
lret
adc
rorl
loopne
pop
or
adc
sub
dec
jp
cmpsb
enter
call
sub
mov
push
or
shll
notb
mov
inc
cwtl
xchg
addb
in
sub
in
or
inc
sbb
rorb
scas
jns
push
es
pop
daa
push
xor
call
ficomps
fldcw
or
push
cmp
cmpsb
or
jbe
popl
xor
xor
mov
insl
inc
push
dec
loop
push
push
scas
aas
dec
sahf
pop
xor
je
mov
push
mov
and
frstor
mov
fmuls
cmp
and
mov
mov
mov
jmp
xor
xor
adc
push
jo
fsubs
xor
fwait
sbb
into
hlt
pop
pusha
dec
movsb
ja
js
push
pop
push
enter
test
nop
sub
and
sub
and
pop
sbb
jmp
orb
dec
daa
nop
inc
ret
out
lock
popa
mov
shlw
lahf
mov
imul
out
ljmp
sahf
mov
xchg
fisttpll
push
adc
pushl
push
sbbb
sarl
lret
dec
or
lret
xchg
and
mov
and
pop
loope
mov
popa
lret
loop
pop
mov
push
cmp
aad
mov
pop
mov
sub
push
stos
int3
sahf
jo
clc
add
or
inc
fisubrl
jns
movsl
or
push
push
negl
push
cs
adc
dec
nop
daa
mov
scas
xchg
mov
cmp
out
jle
pop
dec
dec
sub
shll
mov
daa
sti
movsb
test
inc
fcmovnu
out
bound
int
test
adc
add
adc
mov
inc
subl
and
pop
or
adc
outsb
sub
mov
pop
sbb
movsl
add
pop
dec
jle
mov
jl
shll
xchg
xorl
test
mov
cmp
shll
inc
outsb
into
cwtl
push
jl
mov
mov
sub
and
fcomps
daa
pop
insb
cltd
dec
add
sbb
mov
push
imul
lret
jne
popf
cmp
sub
test
lcall
stos
fucomp
scas
sbb
ja
das
pop
xor
cmp
inc
xor
pop
mov
movsl
lret
add
or
daa
mov
sub
pop
mov
std
pop
pushf
xor
jle
sti
or
pop
or
cmp
dec
pcmpeqd
inc
loopne
push
insl
ja
test
dec
jmp
dec
jns
int
jle
adc
jns
shrl
repnz
movsl
mov
inc
lcall
jecxz
stos
xchg
and
cmp
loope
add
pop
inc
ss
lods
cmc
xor
push
dec
enter
cmpsl
jmp
stos
clc
sub
jns
cmp
xchg
push
push
in
shll
prefetch
scas
sbb
stc
jnp
sub
test
pushf
pop
and
mov
aaa
xchg
mov
hlt
aas
push
imul
test
sbb
adc
push
dec
cs
pop
test
jbe
xchg
int
enter
fdivrl
or
es
mov
test
ret
mov
std
dec
or
loopne
mov
aaa
mov
mov
es
pop
in
jmp
test
jecxz
into
insb
adc
mov
js
imul
int3
jae
mov
push
add
scas
add
sbb
jecxz
mov
xchg
test
cmpsl
into
icebp
call
lcall
jp
sahf
inc
or
fcmovu
outsl
fistpl
sub
shrl
jg
fbld
movb
mov
sbb
sbb
addl
mov
sub
and
jmp
cs
insb
jp
fwait
and
pop
out
js
sbb
add
push
mov
leave
stos
sbb
inc
add
stos
hlt
sahf
in
pop
std
push
aas
inc
lock
and
test
dec
mov
mov
mov
adc
stc
push
iret
xor
jb
pop
cltd
fdivl
jbe
push
fdivs
fsubp
hlt
nop
sub
fwait
shr
xor
mov
sub
pop
int
jmp
in
test
ret
std
cmp
in
call
lret
subb
out
jno
aad
inc
fisubrs
push
sbb
shr
outsb
xor
sbb
loopne
int3
insl
rcrl
cmp
mov
jnp
push
lret
inc
jp
or
test
ret
int
inc
pop
orps
sub
out
pop
inc
fcompl
lret
sbb
xor
stc
out
rcrb
jl
sub
gs
daa
mov
pop
fld
xchg
inc
xchg
mov
sub
sub
or
push
test
mov
and
xchg
push
iret
dec
arpl
mov
rorl
xor
inc
xchg
inc
loop
push
mov
xor
inc
sbbl
ds
data16
or
out
and
add
mov
scas
lahf
scas
xchg
pop
rorb
fnstenv
push
adc
adc
push
sub
cmpsl
cli
push
mov
sbb
and
mov
into
out
ss
pop
sub
push
mov
rcl
cli
les
cltd
xorl
lret
lock
jg
pushf
lds
out
cli
add
sbb
out
pushf
inc
xor
cmp
mov
outsb
push
js
dec
cld
push
testb
mov
mov
mov
rcrl
imul
in
mov
mov
aam
pushf
xchg
imul
pop
frstor
sbb
xchg
leave
pop
js
popf
or
mov
out
ret
ss
cmp
test
loopne
adc
mov
fwait
pop
dec
repz
push
add
popl
dec
lea
loope
xor
jo
push
dec
cmp
lods
insl
int3
outsb
shll
xor
jnp
dec
lret
ficompl
adc
adc
into
push
xchg
ljmp
adc
jne
das
mov
inc
sbb
fistl
sti
jbe
shlb
push
push
aam
xchg
sub
mov
cmp
pop
and
cld
jo
sub
pop
push
jo
movsb
frstor
mov
sub
mov
jne
js
mov
pop
mov
in
enter
pop
fsubp
add
sahf
daa
test
out
decb
in
aad
test
leave
imul
jg
cmp
xchg
cwtl
push
dec
mov
fsubp
inc
rcrb
sub
mov
push
adc
dec
pop
jae
aam
mov
cmp
iret
lock
test
mov
xchg
jae
xlat
insb
or
in
cmp
in
ja
mov
test
mov
outsl
mov
ja
adc
or
gs
or
imul
ja
movsl
ret
rolb
push
xchg
push
and
lock
sub
jmp
fldt
popf
or
fadd
adc
adc
or
mov
jno
sti
lret
or
out
test
dec
mov
daa
inc
lds
xchg
mov
fs
jecxz
pushf
pop
xor
sbb
cmp
adc
ret
sbb
divl
xchg
pop
jo
jae
adc
aad
out
nop
xchg
ds
inc
dec
sbb
jg
ret
fdiv
fwait
das
push
sub
into
sub
in
bnd
jle
pop
jo
sbb
test
mov
orl
aas
xchg
popa
mov
or
dec
cmp
mov
test
xor
lret
mov
ja
mov
loope
stos
pop
dec
subl
test
inc
loope
push
push
movsb
mov
xchg
pop
bound
sbb
dec
inc
push
pop
add
dec
es
cltd
cltd
or
pop
fdivl
fs
sub
ljmp
push
xchg
pop
jb
pop
adcb
shll
out
add
inc
jmp
dec
pusha
add
testl
stc
in
cld
test
and
or
shlb
enter
fsubrl
xchg
je
pop
adc
or
push
xor
xchg
sub
int3
int3
xlat
sbb
sar
or
mov
cmpsb
repnz
push
adc
mov
lret
or
ficompl
or
arpl
sub
in
xchg
into
mov
cmc
and
pusha
sti
into
and
mov
inc
cwtl
inc
mov
add
adc
xchg
mov
sahf
xchg
loopne
adcb
jns
jl
or
dec
orl
mov
mov
lods
xor
and
mov
mov
imul
sub
repnz
or
sbb
stos
lret
xor
test
arpl
data16
pop
in
decb
popa
outsb
mov
sub
stos
mov
rcrb
repnz
insl
data16
mov
and
aas
es
add
movsl
lcall
mov
cmp
push
xor
inc
cmp
mov
into
lret
loopne
popa
mov
cmp
pop
call
pushf
jle
pmaddwd
out
dec
sahf
loopne
loope
ss
fsub
mov
fcomps
dec
jmp
fisubs
sub
cmc
cmpsb
subl
sub
scas
or
mov
daa
jne
xchg
cmp
or
std
sub
add
mov
pop
add
add
popa
xchg
adc
int3
ds
js
inc
addr16
or
cmp
xor
inc
aad
shrb
out
pusha
sbb
pop
mov
xor
xchg
shl
ret
out
shlb
mov
push
lea
push
jle
pop
xor
adc
fistps
or
jmp
popa
lock
stos
jae
mov
fcmovnb
and
pushf
push
mov
push
mov
push
jb
in
repz
dec
dec
shr
popa
nop
mov
cltd
sub
ds
leave
loopne
enter
xor
subb
jb
xor
out
inc
aaa
jnp
ret
mov
push
lret
pop
shl
adc
mov
xor
pushf
frstor
mov
jecxz
das
stos
test
mov
push
xor
sbb
ficompl
aad
outsb
mov
js
pop
cmp
out
xchg
adc
dec
sub
adc
idivl
add
mov
out
add
lahf
mov
lods
rolb
sub
mov
cmpsb
jge
push
fdivrl
add
cmp
sub
jae
imul
fidivrl
int3
mov
sar
packsswb
int3
jle
or
and
sbb
push
jno
push
loop
popa
mov
mov
cmp
jo
pop
ja
mov
bound
pop
xorb
int3
out
repz
adc
outsb
push
sub
xor
lock
mov
jp
sbb
incb
mov
mov
jbe
mov
jae
sbb
dec
andb
scas
imul
dec
in
ja
mov
mov
jno
push
sub
subl
inc
pop
xchg
subb
scas
sub
or
sub
hlt
add
sbb
cmp
lret
fmul
pop
fistpll
push
mov
pop
mov
fcoml
clc
jno
push
mov
pop
out
js
jae
ret
or
cmp
add
xchg
test
mov
mov
ds
setbe
fcom
mov
arpl
jb
inc
mov
and
pusha
mov
add
jae
mov
mov
and
insb
icebp
clc
and
mov
add
and
push
and
out
arpl
mov
in
add
fwait
xchg
jae
and
and
bound
popl
sbb
int3
int
or
movsl
and
push
leave
cmp
shlb
shll
in
call
jg
jnp
ret
push
mov
pop
inc
cmpsb
or
std
int
inc
mov
lret
and
pop
cld
cmpsb
sub
int
sbb
ja
lods
dec
xchg
in
xchg
sub
sbb
cmp
outsl
push
add
outsb
push
cmp
push
je
dec
adc
adcb
or
jns
lock
or
ret
in
aad
inc
push
push
lods
adc
mov
and
lods
es
int3
icebp
je
xchg
adc
mov
fadds
out
repz
pop
xor
xchg
adc
and
sahf
sahf
aam
dec
adc
orl
cmp
repz
mov
xor
adc
nop
push
dec
rcrl
adc
fsubrl
stc
lock
je
cmp
call
fidivl
aam
add
loopne
icebp
mov
and
inc
sub
sub
add
aaa
jno
mov
push
lea
fadd
movsl
in
push
mov
cmp
movsl
cmp
jecxz
pop
mov
pop
cwtl
pushf
sbb
mov
sbb
xchg
jmp
fcmovnbe
pop
xchg
jo
or
push
push
xor
cmp
fwait
addb
mull
outsl
mov
push
mov
sbb
or
push
cmp
pop
mov
loope
mov
push
dec
push
pushf
mov
mov
push
add
jge
and
cmp
or
sbb
stos
cltd
inc
sub
hlt
les
inc
sub
imul
scas
rdtsc
mov
aam
les
or
mov
push
rcrl
jge
and
sahf
pop
les
mov
xor
or
divl
in
jecxz
sbb
inc
addr16
dec
xchg
lods
add
gs
sub
push
jecxz
push
jne
add
mov
add
inc
imul
ja
jne
cmp
xor
sahf
in
fstpl
inc
sbbl
jne
sbb
leave
test
and
mov
sub
cmp
mov
push
pop
test
dec
inc
push
adc
hlt
fcomp
leave
xor
cli
gs
pop
aad
inc
jno
cmp
frstor
lahf
int
mov
jae
mov
sub
mov
inc
mov
aas
in
shl
jns
and
pop
or
lods
pop
sarl
push
ret
hlt
xor
sti
outsb
lods
out
pop
pop
jbe
mov
sbbl
int3
scas
popa
test
pop
aad
out
sbb
shl
fisubrs
out
fcomi
cmp
fadds
xor
loope
mov
add
add
les
out
das
int
subl
mov
mov
popf
lret
push
dec
pusha
fcom
or
bnd
aaa
cltd
sbb
xchg
pusha
add
mov
push
sub
roll
or
mov
rorl
sub
cmpsb
sbb
call
cmc
xorl
ja
jne
repz
dec
stc
xorl
aam
jns
popa
sbb
cmp
cmpsb
stc
aad
lds
imull
jae
push
fdivl
decb
dec
push
rolb
aas
es
or
mov
xchg
std
roll
and
xor
inc
adc
mov
cld
jae
push
insb
lret
jb
pop
test
jb
adc
pushf
and
psllq
cmp
es
xor
jg
cli
in
jmp
dec
xor
or
fildl
mov
cld
mov
inc
jne
mov
lods
popa
movsl
xchg
insb
mov
rorb
cmp
lock
aas
dec
and
in
jns
xor
enter
sahf
out
sub
sub
lods
push
or
lea
sar
dec
data16
das
out
sbb
dec
jne
fsubp
test
icebp
mov
imul
mov
data16
stos
aad
dec
mov
mov
and
sti
dec
ret
scas
cmpsb
icebp
ja
stos
xor
mov
sub
mov
jae
mov
aas
jl
inc
and
mov
aas
movsl
sahf
add
xchg
xor
sub
int
mov
push
js
mov
ja
mov
je
push
cld
adc
push
cmp
sbb
sahf
push
xchg
sbb
pop
push
aad
inc
movsb
mov
fucomip
cmc
sub
mov
enter
xor
pop
sbb
cmp
pop
xlat
insb
cmpsb
outsb
ds
pop
in
stos
add
sub
lahf
push
xor
mov
pop
and
sub
jb
pop
scas
xchg
xor
insl
inc
push
mov
clc
faddl
cmp
in
and
psllw
mov
seta
xor
jbe
stos
mov
int
and
scas
insl
mov
push
push
fildl
pop
push
jne
lret
aam
imull
adc
clc
pop
or
lret
lret
rorb
mov
sbb
fnstsw
and
jb
push
push
hlt
rcll
stc
je
lret
test
pop
sbb
mov
repz
imul
aam
sub
ljmp
jecxz
sub
xchg
aam
pop
test
sarb
adc
sub
pusha
rolb
pop
aam
sbb
test
test
scas
popa
jl
dec
jae
adc
out
loopne
les
mov
sbb
fnstcw
mov
loope
xlat
repnz
cmp
sbb
xor
or
dec
push
arpl
mov
test
cld
jb
rorb
sbb
popa
sub
inc
outsl
out
adc
mov
mov
adc
cmp
cmc
mov
sbb
push
mov
sbb
lock
inc
mov
sahf
out
repnz
cs
cmpsb
inc
pop
insl
dec
dec
sti
dec
inc
xor
and
mov
scas
xchg
cmc
pop
aam
push
cmp
mov
nop
jno
mov
lea
xor
jbe
gs
mov
neg
repz
xchg
pop
mov
sub
test
push
and
imul
xchg
xorb
jle
jmp
ret
gs
pop
es
inc
subb
icebp
int
cld
mov
pop
mov
pop
or
mov
or
or
rcll
xorb
sbbl
pop
xchg
popa
fwait
pop
push
lods
out
cltd
cmc
fs
mov
cmp
rclb
cwtl
jge
sti
dec
xchg
mov
jno
xchg
sub
testl
fimull
gs
in
stos
in
pop
dec
icebp
push
lock
into
mov
jge
pusha
std
popf
out
inc
push
xchg
mov
je
fcomps
jno
into
lock
les
ljmp
jge
fimuls
imul
push
push
mov
push
dec
mov
mov
test
inc
mulb
and
xor
cmp
ljmp
cmp
lahf
cld
pop
shl
pop
gs
pop
and
ja
repz
mov
into
daa
add
jno
inc
inc
push
rorb
clc
sahf
or
dec
add
fwait
dec
lock
mov
bswap
movsl
cmc
xlat
sub
outsb
stos
pop
or
fs
and
pop
in
lds
mov
scas
pop
push
pop
dec
setl
adc
inc
ret
jne
shll
inc
sbb
xchg
fimull
lret
out
push
arpl
hlt
lea
mov
popa
cmp
cmc
shl
out
mov
jmp
cmpsl
sub
pop
in
xchg
out
or
sub
mov
and
push
inc
leave
lcall
loope
xor
je
sbb
mov
clc
mov
out
movsl
iret
adc
rolb
enter
dec
adc
xchg
jbe
mov
dec
mov
jo
jg
mov
fldl
repz
add
or
fisubrs
lcall
dec
lds
fcom
rolb
insb
push
mov
es
xchg
ja
std
pop
into
repz
xchg
sbb
iret
mov
popa
shrl
fnsave
add
scas
popa
enter
movb
jg
shlb
test
stc
in
mov
in
cli
sub
in
flds
mov
daa
int3
popa
ds
add
lcall
stos
scas
inc
insl
lds
popa
mov
repnz
cmp
pusha
sub
roll
mov
sub
or
mov
out
mov
pop
xchg
add
jge
lret
mov
imul
push
insl
jmp
xor
pop
pop
fimuls
add
gs
pop
mov
jge
mov
addb
jle
inc
mov
cmp
mov
mov
repnz
sbb
cmp
mov
add
lea
lods
sbbb
xor
mov
sub
sbb
in
and
inc
sbb
outsb
enter
roll
jo
jg
cwtl
mov
cmc
int
mov
mov
stos
dec
push
insb
fisubrs
jmp
add
cwtl
fsubrp
lret
add
and
aad
leave
bnd
cmpsb
sbb
lock
inc
push
inc
shr
fstpt
sub
cld
aas
sbb
pop
cwtl
mov
test
inc
test
xchg
jle
dec
lret
dec
push
rorl
pop
add
mov
insl
push
add
test
mov
fisttpll
mov
jns
scas
je
aad
adc
push
rcll
xlat
pop
xor
out
sbb
arpl
stc
push
das
insl
adc
xchg
push
les
cwtl
addr16
out
inc
jp
sbb
add
lahf
aad
xor
pop
stos
in
insl
fimuls
sbb
mov
xor
xchg
push
xchg
out
shll
in
cmc
fidivrl
pop
add
out
insl
in
push
push
inc
adc
mov
jns
add
sub
rcrb
mov
add
inc
rcrl
lock
cmp
testb
movb
cwtl
lret
lods
mov
push
xorl
insb
mov
sub
test
rcrb
dec
sub
lods
sbbb
inc
lods
cmp
dec
adc
sub
or
test
adc
xchg
rcl
inc
and
mov
push
adc
filds
into
iret
or
lea
mov
mov
aas
andl
or
mov
push
adc
loop
ja
clc
loopne
jp
iret
mov
xor
xchg
mov
aaa
mov
rorl
out
push
fcom
push
rcrb
xor
fsubs
push
or
pop
popf
cmpl
mov
hlt
in
pop
mov
adc
adc
adc
rcrl
ror
push
lahf
add
ja
xchg
ljmp
push
in
ss
mov
mov
fisttps
pop
inc
sub
rcrb
imul
jns
sbb
pop
in
mov
sub
push
repz
ret
imul
gs
mov
mov
ret
shrb
loope
fidivrs
jg
mov
sahf
xchg
mov
sub
gs
in
test
lods
jge
mov
push
sbb
mov
daa
call
lret
popl
jmp
xchg
test
ret
loope
jae
mov
sub
adc
mov
dec
adc
mov
repnz
xchg
adc
fmull
sub
and
pusha
orl
jo
and
loopne
arpl
dec
or
jae
cli
andl
cli
arpl
aaa
out
pusha
movsl
in
or
repz
ja
insl
adc
loope
inc
addr16
pushf
mov
inc
dec
jae
cwtl
pop
push
gs
pop
xchg
mov
pop
adc
jecxz
pop
add
repz
mov
mov
fsubl
outsl
cmp
es
jb
mov
jne
and
addr16
daa
lods
leave
fiadds
cmp
fcmovbe
cmc
ljmp
popf
rolb
test
sub
push
lahf
clc
adc
push
ss
rcll
mov
xchg
push
sbb
mulb
jns
pop
bound
push
into
pushf
insl
inc
adc
push
add
cltd
mov
pop
into
fsubrl
into
inc
clc
cli
jmp
pop
xchg
lods
push
mov
cmp
out
insl
inc
rorl
mov
fs
jmp
test
adc
pop
mov
scas
lcall
lods
ljmp
or
ss
lods
pop
add
sub
aas
pushfw
push
inc
mov
gs
add
outsl
ds
mov
pop
mov
sbb
rclb
push
imull
pop
in
jmp
mov
jle
mov
aam
lock
andb
stos
lahf
inc
or
arpl
frstor
jno
dec
mov
sarl
pop
pop
jo
mov
mov
mov
adc
dec
cmpl
aas
mov
dec
lahf
ja
ret
push
pop
cltd
or
movsb
dec
popa
xor
enter
inc
arpl
jne
leave
in
mov
pusha
pop
xor
and
push
cmp
cmovb
aad
pusha
pop
in
sub
sbb
hlt
dec
cwtl
add
mov
pop
rorl
lds
arpl
std
fisubrs
outsb
iret
bound
cmpsl
and
add
gs
cmp
fcompl
in
fs
push
sti
rorl
sbb
add
or
mov
in
xor
cmp
jl
dec
mov
cmp
push
cmpsb
out
inc
ss
inc
sbb
gs
mov
mov
mov
and
mov
pop
jle
mov
mov
and
pop
xor
jmp
jmp
stos
xor
scas
nop
dec
pushf
pop
push
dec
loopne
inc
jno
sub
adc
adc
and
xchg
loop
dec
fwait
xor
adc
add
ret
sub
sub
dec
mov
adc
into
cmp
mov
dec
mov
mov
add
pop
adc
outsb
jle
repnz
add
addb
inc
add
dec
jmp
cmp
pop
cmpsl
mov
and
xchg
sahf
or
jnp
mov
mov
cmp
mov
mov
mov
add
fisubl
cmc
out
ja
fcom
negl
decl
sbbb
pop
pushaw
xlat
std
int
sti
and
push
ret
loop
dec
mov
xchg
rcll
and
and
clc
gs
outsl
sbb
dec
mov
cld
daa
pop
add
pusha
jno
push
sarl
sbb
pop
repnz
mov
jg
sarl
mov
jmp
ljmp
mov
arpl
adc
or
jae
pop
add
xor
jbe
lcall
cmp
in
push
daa
popl
jmp
daa
aam
jecxz
and
xlat
pop
orl
adc
ret
bound
inc
push
loopew
repnz
mov
xor
movsb
mov
das
jl
outsb
call
adc
and
cltd
push
push
and
pop
insl
fldcw
pop
insb
lods
orl
fisubrl
xlat
roll
mov
iret
adc
pop
and
fcomi
push
or
clc
js
inc
movl
clc
pushf
inc
xor
dec
shlb
pop
cmp
pop
xor
mov
cmpsl
testl
push
push
lock
imul
mov
or
and
daa
iret
xlat
push
xchg
loope
sarl
notb
pop
cmpsl
stc
cltd
dec
jge
mov
hlt
jno
lods
xor
dec
repz
cli
mov
mov
pop
xor
sub
pop
lret
jle
xchg
pop
lcall
jb
add
arpl
pop
aas
int
aad
xorb
sub
add
xchg
sub
xlat
push
nop
jecxz
mov
xchg
or
pop
or
lods
adc
gs
mov
pop
xor
daa
cmp
and
repnz
in
mov
testb
mov
cli
and
adc
jl
xor
sub
pop
test
cmpsb
jp
lds
and
sbb
cmpsl
push
pop
jl
fstps
mov
and
stc
mov
pop
aam
mov
add
xor
jno
ds
xchg
movsb
je
push
pop
jnp
jp
mov
sub
in
cmp
cmp
imul
fsubl
popa
rorl
mov
and
pop
push
jo
xchg
les
dec
cltd
insb
pop
add
test
scas
decb
xchg
arpl
mov
pop
push
xchg
clc
dec
mov
push
mov
sarb
fdivs
cld
lea
les
sub
push
das
pop
mov
fidivs
mov
nop
call
push
dec
adc
mov
int
inc
xor
rorb
jmp
adc
pop
les
xor
cltd
inc
stos
loopne
sbb
push
in
repnz
mov
sub
jmp
sbb
loope
adc
lods
push
xchg
pop
jae
cli
adc
inc
pop
xchg
jle
push
iret
test
dec
mov
sbb
adc
pusha
mov
cs
insl
imull
push
push
jne
bound
rcrb
mov
and
jmp
xchg
dec
xor
outsl
fcoms
outsb
mov
adc
dec
xchg
lret
insl
mov
es
aaa
mov
xchg
mov
bound
outsb
pop
stc
mov
clc
int3
mov
lret
mov
sub
pop
jl
dec
cmp
arpl
jle
mov
mov
ja
leave
movsl
dec
adcb
jl
ficoms
scas
dec
fucomip
fsub
or
fdiv
sbb
pop
push
out
int3
sbb
mov
pusha
pop
into
mov
mov
in
gs
adc
ljmp
pushf
mov
sbb
sbb
pop
packsswb
hlt
shr
mov
push
movsb
inc
lret
dec
loope
js
sarb
test
xchg
pop
repnz
stos
or
push
add
dec
adc
cmp
orb
test
push
xor
pop
inc
pop
mov
cmpsb
xchg
je
scas
sub
and
xor
insb
mov
stos
jl
loope
test
or
fldenv
in
notb
std
mov
inc
xchg
mov
lds
cld
pop
mov
stos
inc
lret
imul
push
lcall
in
rolb
enter
adc
into
mov
scas
fisttpl
lods
sbb
xor
das
popa
jns
mov
pop
in
dec
in
jae
or
mov
int
das
gs
adc
cmp
fiadds
xchg
add
les
int3
push
dec
and
lods
rorb
imul
mov
mov
sbb
sbb
jae
testl
push
fisttpll
sbb
in
lds
push
fisubrl
jg
daa
je
test
int3
dec
pop
mov
cmp
xchg
daa
adc
mov
lret
add
loopne
lds
add
sbb
push
mov
xchg
out
push
fsubrs
std
inc
sub
inc
outsb
scas
daa
xor
aaa
adc
or
adc
and
mov
scas
test
inc
inc
aad
ja
cmp
and
stos
xor
push
cs
and
mov
data16
add
popf
out
add
ljmp
push
bound
jge
shrl
xlat
push
lcall
fcmovnbe
ss
cmp
jg
and
aad
lods
stos
lock
xchg
mov
xor
pop
fcomi
cmc
pop
push
hlt
pop
jge
pop
xchg
out
pop
hlt
xor
or
xchg
jno
sbb
mov
jns
sub
clc
fmulp
sub
lcall
push
outsl
sti
push
push
sbb
xchg
jmp
insb
sub
or
std
push
adc
ljmp
sub
test
xchg
cli
test
pop
rclb
pushl
sbb
out
pop
cmp
add
sbb
lcall
call
popf
js
test
inc
pop
inc
mov
push
pop
sbb
ljmp
out
push
test
orb
lret
jae
jmp
pop
test
outsb
xchg
lods
jbe
add
aam
fnsetpm(287
push
cmp
sub
jo
mov
cmpsl
jnp
test
lcall
stos
and
movsb
mov
ljmp
loope
mov
dec
mov
sahf
mov
push
add
push
lods
lret
jmp
int3
ret
in
inc
or
mov
jg
xorl
pop
lds
dec
icebp
aaa
daa
jo
sbb
rclb
pop
in
mov
aad
mov
inc
jge
es
loope
jg
cmp
push
pop
xchg
hlt
mov
jbe
adc
sbb
cltd
sahf
pop
push
int3
dec
jns
jg
aad
ret
and
adc
pop
sbb
in
adc
xchg
rorb
rorb
pop
pop
adc
int
loope
dec
enter
cmp
pop
insb
in
jae
popf
add
es
testb
jp
jb
or
mov
bound
sbb
testb
xchg
lea
cmp
jae
fstps
mov
stos
outsl
mov
jl
and
stc
ret
mov
inc
xchg
cmp
xchg
mov
aad
stos
scas
ja
movsb
inc
pusha
push
dec
fcmovbe
lcall
pop
pop
or
pop
iret
and
xor
addl
stos
pop
idivb
pop
fwait
popa
pusha
sub
xor
mov
sbb
sbb
arpl
adc
repnz
shll
loopne
push
inc
fiaddl
aaa
mov
pop
push
ror
cld
ffreep
jae
das
xor
cmp
les
imul
hlt
sub
lcall
ja
cmpsl
inc
mov
xchg
jecxz
mov
imul
jle
imul
lcall
fdivr
jns
add
jns
mov
mov
in
cmpsb
jbe
mov
ds
push
fistps
xchg
xor
mov
xchg
push
push
mov
jne
repnz
inc
cmpsl
inc
sbb
loop
pop
sbb
add
das
cmp
jl
or
mov
jmp
xchg
testl
shlb
out
imul
ss
mov
aam
sbbb
dec
ret
lahf
mov
fnstcw
sbb
sub
js
les
sarb
fs
and
ret
lahf
jbe
push
xor
sti
leave
or
pop
cmp
mov
ss
mov
inc
push
jge
push
mov
adc
mov
dec
xor
outsl
cmpsl
xor
pop
xor
or
xor
clc
out
adc
fcoml
fimull
cltd
scas
add
addl
xor
sbb
mov
test
imulb
sub
ds
mov
add
fstp
cmpsl
add
xchg
push
in
aad
or
jmp
daa
cmpsl
adc
jns
dec
adc
sub
push
ljmp
dec
push
aaa
fnstcw
adc
idivl
mov
pusha
lcall
push
inc
xchg
loopne
xlat
add
xchg
jg
add
inc
dec
lock
int3
pop
icebp
shrl
and
cmp
xchg
lea
ss
fsubrl
jae
xorb
xor
inc
sar
insl
out
inc
lea
xlat
jge
dec
mov
jp
and
in
or
inc
add
inc
int
lahf
aas
jbe
out
jns
jmp
adc
push
pushf
jno
addr16
nop
jecxz
daa
xor
addb
mov
cltd
inc
xor
push
jge
jp
adc
fnsave
mov
lea
out
sbb
add
int3
mov
insb
or
push
inc
jnp
adc
sbbl
icebp
push
pop
fbstp
xchg
sbb
stos
mov
nop
ss
or
rorl
cld
rclb
incb
pop
mov
inc
js
push
inc
ds
mov
dec
lcall
fldcw
cli
sbb
adc
lods
in
mov
dec
fisubl
push
mov
dec
inc
xchg
loop
dec
pop
pop
adc
das
sbb
push
subb
xchg
dec
aam
idivl
incb
fstpt
dec
sbb
xor
data16
mov
xor
popf
pop
jne
ds
pusha
cmpsl
loope
iret
mov
xchg
testb
push
xchg
cmp
inc
inc
and
fwait
push
fldl
add
sbb
mov
sbb
jmp
lods
jns
push
stc
push
cmpsl
add
std
pop
dec
fwait
cmpsl
xor
sbb
adc
enter
call
mov
mov
lock
jbe
decl
inc
inc
jg
push
inc
xor
insb
mov
push
dec
lret
add
popa
mov
rep
rcr
jmp
dec
scas
in
cli
lds
shrb
fst
push
imul
sub
popf
cmpsb
aam
xor
pushf
xchg
pop
mov
mov
shll
pop
loope
out
inc
pushf
mov
xor
lahf
cs
xor
xchg
sarb
shlb
lret
sbb
mov
loopne
mov
sbb
ret
cmp
xchg
test
mov
jnp
jecxz
into
cmp
mov
xchg
jl
lea
sar
and
aad
lods
lods
icebp
loope
decl
fs
cmp
stos
pushf
inc
out
lods
out
lods
imul
push
into
inc
mov
data16
int
fsubrp
pop
and
and
cmp
lods
aas
inc
add
push
and
insl
outsb
fstps
cmpsl
test
pop
into
push
cltd
testb
adc
aas
pop
cmp
sub
out
sub
mov
divl
das
sub
test
outsl
jl
pop
mov
pusha
pop
jg
xor
and
fwait
rep
or
aam
push
jno
mov
into
test
push
xor
movsb
dec
mov
jmp
adc
jge
jns
shrl
sbb
xchg
mov
imul
sub
lock
in
push
fadd
out
ror
and
cmp
stos
jbe
inc
mov
stos
aad
adc
adc
cwtl
dec
repz
iret
mov
and
xchg
ss
ret
or
pop
icebp
mov
gs
xor
xchg
mov
and
or
in
stos
jp
test
loope
adc
repz
movsl
subb
sbb
mov
push
cmp
ret
mov
pop
sub
pop
scas
icebp
das
fldl
push
nop
int3
cs
sub
fnstenv
lcall
xor
cltd
addl
lods
rcpps
push
xchg
leave
andb
fdivp
loope
push
aad
enter
mov
xlat
aaa
inc
push
loope
inc
cmp
aas
ja
aas
pmaxub
sahf
push
out
dec
call
dec
clc
push
in
pop
insl
sahf
mov
jb
dec
mov
lods
and
cltd
sbb
inc
js
mov
xlat
adc
aaa
lahf
jns
sub
mov
inc
popa
mov
inc
jmp
aam
bound
push
nop
nop
and
and
adc
outsl
loop
imul
scas
push
and
xchg
dec
ja
or
shll
in
sub
aam
lret
add
movb
dec
jmp
jae
fnstcw
adcb
push
out
jp
push
test
inc
stos
arpl
xchg
add
add
call
mov
adc
js
or
lea
mov
sbb
shlb
pop
or
xchg
in
sbb
ficomps
repz
stos
pop
cmpsl
sbb
int
add
mov
call
and
push
sti
mov
cmp
fwait
mov
mov
xchg
sahf
or
shrb
mov
push
lret
scas
cltd
je
test
pop
mov
jnp
sti
push
aam
lods
pop
popf
push
add
das
push
dec
dec
decb
nop
addr16
jno
fnstcw
call
cmp
lods
inc
push
fcom
daa
into
add
out
xchg
fdivrl
mov
pop
dec
fnstenv
or
xlat
shl
push
mov
int
rcrb
mov
sbb
xchg
and
pushw
sub
jo
mov
cmpsl
sbbb
jmp
add
scas
mov
jo
xor
and
pop
inc
out
repnz
lahf
dec
in
fdivp
cs
ljmp
aad
into
imulb
jno
mov
lods
sub
ret
lcall
adc
or
lods
sub
sbb
push
dec
scas
push
inc
cmc
inc
push
or
add
lahf
adc
xor
mov
test
fs
push
lods
gs
cmp
push
es
and
dec
adc
lahf
arpl
icebp
pop
ret
xchg
xor
and
cltd
in
flds
je
xor
push
xor
andl
jl
mov
roll
or
mov
inc
int3
add
es
cmp
mov
pusha
jle
cmp
fs
pusha
adc
push
push
popf
push
fcom
dec
sbb
cmpsb
adc
inc
mov
and
xor
xchg
lret
ds
cmpl
shll
xchg
popa
dec
mov
jmp
jns
aad
jp
je
xlat
not
adc
inc
rcrl
push
push
leave
jg
sub
jge
inc
mov
xchg
push
pop
in
ret
jno
push
addr16
cs
push
xor
mov
push
add
push
outsb
stos
add
leave
out
mov
push
imull
icebp
lods
bts
mov
pop
adc
xlat
pop
je
rolb
or
adc
xchg
push
and
mov
or
sbb
jae
pop
call
ret
das
lahf
ret
adc
mov
mov
sub
test
ljmp
cli
cmc
push
jle
mov
dec
ds
mov
lcall
sub
push
repz
adc
adc
sti
mov
adc
in
mov
movb
loope
in
push
scas
bt
clc
pop
adc
ss
in
mov
stos
mov
cmp
mov
cmp
rclb
inc
push
push
push
je
dec
cltd
arpl
lock
out
sbb
sub
icebp
fwait
jg
jg
add
mov
mov
jl
lods
pop
loopne
sbb
dec
and
int3
fldenv
inc
fisubs
add
mov
push
push
pop
repnz
jg
comiss
xchg
cmpsb
jo
xchg
mov
xchg
jns
and
js
jo
imul
and
lods
jns
out
mov
nop
test
das
mov
and
test
dec
jne
mov
push
stos
dec
fidivrl
adc
dec
add
or
mov
orl
and
lods
jne
shrl
sbb
dec
imul
mov
je
pop
lret
xor
and
loope
aas
mov
jl
cmp
jle
je
mov
jnp
adc
lret
out
jle
movsb
testb
mov
dec
add
push
call
lcall
sub
popa
cmp
fstl
movsl
lds
and
sub
out
inc
push
pushf
and
sbb
mov
rcrb
aas
les
fldcw
dec
rorl
outsl
cld
add
mov
stc
fnstenv
in
pop
pop
mov
jb
xchg
pop
jp
pop
in
cltd
setge
popf
fs
mov
std
aas
or
mov
lock
xchg
push
aas
roll
mov
inc
mov
sbb
dec
clc
inc
dec
cmp
mov
leave
dec
fsubrl
mov
or
xchg
and
out
mov
jecxz
nop
dec
data16
sub
xchg
jmp
lea
in
fs
cmp
aam
test
mov
sbb
mov
lcall
inc
js
fidivrs
in
dec
shll
pop
in
jecxz
nop
inc
data16
mov
push
or
push
mov
mov
sbb
or
inc
mov
in
pusha
xchg
outsl
xor
mov
mov
mov
ret
pop
insb
loopne
add
xchg
mov
lock
stos
outsb
mov
jg
fdivl
cmpsl
fnstsw
mov
daa
xchg
repz
insl
fwait
jmp
dec
jle
test
mov
cmp
xor
jns
mov
push
and
push
mov
inc
mov
xchg
inc
add
and
hlt
add
mov
push
push
fs
cmp
sub
pushf
cmpsb
mov
out
mov
out
outsl
sbb
shll
andl
mov
lret
enter
js
mov
je
dec
fisubl
push
imul
dec
lcall
aam
es
mov
jne
cmp
test
push
aaa
add
jle
in
cmp
cmp
inc
adc
scas
lahf
mov
gs
test
fidivrs
pop
inc
and
jo
xor
cwtl
insb
mov
fs
add
movsb
xor
das
ds
or
cmp
push
vpaddw
jbe
mov
lea
test
fs
mov
out
cwtl
in
fs
cwtl
inc
repz
mov
push
stos
imul
push
xor
xor
and
in
jae
es
test
daa
in
mov
sbb
icebp
popa
sbb
loopne
dec
js
aam
fbstp
mov
xor
mov
ret
out
pushl
icebp
ja
or
push
das
jno
repz
fbstp
push
in
xchg
dec
imul
aam
outsb
mov
loopne
push
pop
shll
imul
sub
testl
pop
jmp
rcll
add
fdivrp
cmp
sub
push
out
inc
dec
fcom
inc
out
ret
sbb
mov
mov
ljmp
or
sbbl
je
lods
mov
add
cmpsb
sbb
push
xchg
sub
ficoms
loopne
sbbb
rolb
fidivrl
or
outsb
sub
jg
test
movsb
push
mov
mov
lret
movsb
leave
mov
or
mov
push
push
inc
pop
fcom
inc
dec
and
mov
or
outsb
adc
xor
mov
ret
jnp
mov
mov
stos
jecxz
push
xor
repz
jnp
ret
ljmp
addb
aaa
mov
out
and
fisubrs
xlat
cmp
cmp
jo
inc
aas
insl
shlb
test
imul
rcl
cmp
out
pop
and
mov
pop
ret
gs
xchg
aas
dec
pop
int3
imul
jmp
mov
int3
adc
and
push
xor
xlat
loope
add
lods
movsl
push
cmp
sarb
loopne
mov
and
mov
push
popa
xchg
mov
into
push
ret
int3
pop
mov
push
lods
cmp
mov
dec
mov
mov
stos
test
jb
add
inc
gs
and
popa
int3
jl
sub
xor
push
push
and
adc
dec
pop
cli
hlt
dec
fsubp
imul
mov
cmp
or
dec
pop
xor
js
jge
xchg
mov
mov
repnz
lods
test
mov
cmp
test
and
mov
inc
xchg
and
loope
int
sbb
mov
inc
jnp
clc
ja
adc
pop
push
and
jne
pop
cmp
orl
cmpsl
xor
dec
inc
mov
cmovs
jbe
mov
shrl
out
mov
clc
xchg
push
mov
cwtl
lahf
pop
or
push
in
neg
dec
sub
gs
mov
repz
cmpsl
bnd
loope
add
cli
addr16
sbb
sbb
mov
cli
sti
inc
andnps
or
inc
and
jb
rcrb
lret
xor
jo
inc
popf
aaa
jbe
neg
ret
sbb
push
nop
in
mov
pop
xchg
cmpsb
or
movsl
stos
lods
loop
sub
outsb
jge
push
fsubl
fstl
ror
cwtl
inc
mov
mov
jns
cmpb
cmp
addr16
xor
and
mov
push
cmp
pushf
into
jbe
add
cltd
mov
or
outsl
ss
xchg
mov
ja
xchg
jb
lret
cmp
adc
lods
pop
cmpsl
jmp
stc
mov
out
pop
mov
data16
lret
stos
cli
and
stos
mov
and
sub
and
adc
lcall
jmp
jns
bound
jno
dec
sbb
inc
stc
gs
out
mov
xlat
repnz
and
rorb
mov
and
pop
dec
mov
out
ficompl
ficompl
fildl
js
ret
pushl
mov
aad
jae
popa
out
popa
and
loope
aaa
sbb
notl
xor
enter
xchg
leave
std
cmc
adc
or
shlb
sub
cmp
lods
cmp
movsl
cwtl
or
in
xlat
pushf
divl
jl
out
xchg
shl
ss
fdiv
mov
fstps
imul
aaa
das
sti
cmp
and
mov
inc
lcall
xorb
adc
pop
out
jp
jle
jg
cmp
rcr
into
dec
testl
repz
dec
lret
nop
pop
shll
aam
xchg
mov
xor
scas
xor
ret
mov
jge
in
mov
test
sub
dec
mov
adcb
or
dec
fldcw
aam
dec
and
movsl
mov
insb
and
adc
push
inc
enter
cmp
in
adc
push
jge
popf
push
lods
leave
adc
mov
or
roll
leave
cmp
adc
scas
int3
inc
add
mov
push
outsb
jno
fwait
cmpsb
cmp
pop
xchg
xor
adc
adc
or
lret
repnz
imul
push
adc
xchg
cltd
repnz
loop
cld
lods
xlat
or
mov
push
jae
ds
pop
pop
and
or
adc
pop
push
xor
pop
and
and
mov
push
das
inc
jns
xlat
lock
fimuls
pop
es
lock
lods
lcall
addr16
or
hlt
jle
rcrb
mov
leave
or
sbb
fwait
adc
xor
aam
sbb
jl
mov
cld
and
repz
xchg
into
mov
mov
jae
std
bnd
nop
imul
add
iret
test
ljmp
xchg
lods
xchg
loopne
stos
or
sbb
shlb
sti
ficompl
sub
mov
inc
pop
fwait
dec
or
sub
mov
sarb
mov
lahf
lret
inc
aaa
cmp
jo
inc
jae
mov
subb
mov
mov
adc
push
cli
daa
sub
fwait
mov
xor
daa
cmp
cmp
call
lret
stos
and
push
jae
movsb
pop
cmp
or
xlat
pop
push
fsubs
fimuls
dec
push
es
rorl
or
fdivrl
cmp
cmp
and
sbb
xor
jb
das
mov
inc
aaa
in
rcr
adc
in
push
inc
mov
rol
jno
ja
es
dec
je
adc
test
xchg
cmpsb
xor
scas
dec
mov
dec
jl
push
pop
ja
das
mov
shrb
flds
rorb
cmc
jl
bound
mov
mov
roll
pusha
das
cmp
sbb
fs
xor
push
cmp
out
jp
lahf
add
pop
movsl
pop
mov
stos
inc
outsb
sbb
cld
mov
mov
add
add
cmp
xchg
movsb
jae
add
dec
ljmp
mov
fisubs
rcrl
jg
xlat
jge
pop
inc
pop
icebp
jl
dec
jmp
dec
cmpsb
xor
adc
seto
and
and
enter
das
cwtl
idivb
pop
sarl
test
push
xor
mov
loopne
mov
les
out
jo
add
aam
push
lret
pusha
mov
jne
nop
cmp
clc
mov
ret
mov
xchg
mov
cmc
pushf
popl
mov
mov
push
clc
sbb
fldt
sbb
leave
pop
adc
pop
rclb
adc
fucomip
iret
xchg
inc
aaa
adc
clc
pop
shll
mov
es
adc
push
cmp
lret
push
or
cmp
cmp
andl
or
mov
and
mov
mov
ljmp
fstps
inc
jo
mov
xchg
mov
jns
dec
mov
push
fwait
mov
in
mov
data16
jne
mov
dec
pop
andl
mov
jne
lods
mov
dec
pushf
cmpsl
and
inc
xchg
sbb
fld
dec
fisubs
sub
push
leave
xchg
and
xchg
adc
ret
xor
pop
jb
ds
jle
test
lcall
out
sbb
popf
mov
or
ljmp
xor
mov
fdivrp
repz
int3
and
add
js
xchg
outsb
xchg
ret
test
xchg
insl
call
psubsw
push
cmp
push
lcall
or
mov
lods
jle
xorl
cli
mov
in
jno
push
loope
xchg
in
inc
dec
fwait
pop
divb
enter
pusha
or
mov
mov
cmp
pop
mov
or
cmp
jno
fwait
jno
jmp
mov
push
test
int
mov
mov
repz
push
add
xchg
mov
cltd
mov
mov
popa
jmp
roll
iret
sub
mov
pop
mov
popf
out
add
fsts
push
out
xchg
push
shrl
mov
aaa
mov
cmp
add
fmulp
data16
or
mov
aaa
cli
xchg
push
cmpsb
lods
push
in
lret
je
and
mov
mov
and
subb
insl
popf
ljmp
inc
pop
out
push
vunpckhps
stos
jecxz
mov
jae
add
jne
inc
outsb
mov
push
mov
pop
push
scas
dec
inc
lods
sub
mov
jnp
in
sti
fidivs
loopne
jb
testl
xor
jecxz
jl
mov
daa
pop
jge
clc
cltd
lods
mov
fstpl
push
or
sub
mov
cli
mov
xor
mov
outsl
and
in
int3
push
or
bound
mov
rorl
dec
cmp
iret
jbe
mov
in
mov
and
xchg
xchg
dec
call
ret
in
int
cwtl
lea
sahf
xor
hlt
cmpsl
pop
adc
push
dec
jo
cmp
sub
jmp
or
pop
push
iret
testl
or
rcrl
insl
or
scas
push
jge
out
push
dec
mov
add
ja
cmpsl
push
sub
sti
or
stc
in
adc
sbb
cmp
xchg
xor
inc
xor
add
sahf
sti
rol
or
or
jne
pop
adc
addr16
xor
mov
dec
movsl
mov
push
sahf
fidivs
cltd
aaa
stc
mov
pop
mov
js
pushf
adc
dec
inc
and
lret
jnp
xor
mov
cmp
xor
mov
pop
aaa
push
push
shll
pop
or
pop
push
mov
mov
dec
lock
out
cmp
std
push
xor
lods
jnp
out
mov
mov
stos
frstor
call
sbb
shrl
mov
es
sarl
inc
xchg
out
push
cmpsb
lret
std
gs
add
mov
lcall
adcl
cmpsb
pop
adc
loop
inc
out
lods
outsb
repz
sahf
movsb
call
xlat
divl
sbb
sbb
push
imul
xlat
adc
hlt
aam
inc
fstps
sahf
mov
cltd
xchg
sub
adc
fcomi
dec
mov
dec
lahf
cmc
test
xchg
jb
and
xor
hlt
cs
mov
test
and
sub
cmpsl
in
xchg
arpl
rcr
pop
rcrb
out
dec
push
sbb
add
out
testb
in
das
push
adcb
repz
imul
in
lods
adcl
push
push
fistl
mov
cmc
or
daa
mov
and
mov
jo
mov
cli
ja
mov
js
data16
arpl
pop
sub
xor
sub
jb
adc
mov
sbb
mov
ret
jb
push
lcall
jo
add
shlb
push
sub
mov
jne
movl
rcll
dec
andl
addl
out
pop
fsubrs
stc
mov
mov
scas
scas
outsl
fs
pop
icebp
lcall
and
test
mov
xchg
mov
jnp
dec
xchg
or
rcll
adc
into
and
cwtl
fstp
fisubrl
addr16
std
scas
mov
ret
lock
lds
jle
xchg
jmp
add
push
stc
pop
leave
hlt
sub
outsb
roll
enter
shll
dec
adc
lahf
cmpsb
fisubs
xor
das
cmp
faddl
mov
repnz
jge
sub
push
pop
adc
jg
lret
cmp
hlt
fimull
push
or
cmpsb
lods
inc
paddsw
mov
inc
lds
inc
cmp
and
fstl
pop
or
jg
out
fnsave
inc
popa
adc
les
or
outsb
mov
adc
mov
test
leave
sub
gs
imull
data16
fadd
mov
mov
jmp
js
inc
rclb
jecxz
movsl
mov
dec
xchg
push
fdivrl
adc
fistpl
pop
test
shlb
mov
int
sbb
pop
pop
mov
test
mov
cmp
mov
mov
sbb
pop
popf
lods
lods
inc
push
adc
jmp
xchg
test
mov
es
jb
pop
cmp
mov
mov
cmpsl
jle
arpl
cltd
roll
ds
jle
int3
lcall
jg
xchg
movsl
push
sbb
repz
xchg
cmp
jne
and
repz
cld
test
rcrb
jmp
dec
lret
fisubrl
dec
sub
mov
movsb
in
add
mov
mov
test
lcall
in
stos
cmpsl
dec
push
movsb
cs
adc
sub
add
popa
repz
lock
je
int3
push
fstp
xor
aam
insb
push
pop
ret
mov
push
out
jmp
cmp
int3
sbb
jnp
and
sub
jp
push
xor
mov
loopne
popa
xor
mov
jp
add
xor
call
and
aaa
dec
mov
add
add
sub
sbb
sub
call
sub
rcrl
adc
cmpsl
cwtl
test
dec
sbbb
xor
push
xchg
jg
add
cltd
data16
sbb
inc
or
stos
loopne
aaa
call
jb
fildll
pushf
pop
mov
push
mov
ret
stos
imul
mov
sub
xor
sub
inc
call
arpl
push
jl
jmp
pop
ret
push
push
fs
dec
mov
mov
push
cwtl
ss
shl
xchg
outsl
cmpsl
outsl
push
fisubl
dec
sahf
sub
sub
add
ss
add
sub
decl
scas
pop
push
dec
dec
xor
addr16
push
insl
add
das
call
fistpl
ret
lret
mov
add
jno
fcoml
mov
in
cmpsl
dec
loopne
mov
mov
add
jmp
outsb
pusha
cmp
mov
in
mov
mov
adc
bound
dec
adc
out
sub
mov
push
sub
stos
mov
inc
sub
out
cmp
mov
pop
test
test
cs
lock
or
in
mov
insl
data16
xchg
rol
into
xchg
mov
icebp
stc
jg
or
push
mov
cmpb
das
adc
fdivrp
je
jecxz
pushf
cmpsl
sub
dec
rolb
xor
sahf
out
and
fistpl
scas
xchg
and
xchg
mov
inc
mov
xchg
mov
add
bnd
sbb
adc
add
xorl
pop
mov
mov
xchg
pushf
enter
fcomps
loopne
int
out
scas
push
lods
push
ret
lods
int3
aas
dec
imul
and
inc
adc
cmp
fistl
jl
add
stos
rcr
xchg
fdivrs
test
ret
std
or
into
sbb
addr16
jb
mov
sti
sbb
imul
inc
insl
xchg
and
and
movsl
out
jp
shrb
pop
stc
dec
loop
hlt
xchg
add
stos
lds
or
sub
sub
divl
loop
pop
dec
cmp
sbb
sub
pop
pop
sub
adc
push
out
lahf
sahf
mov
cmc
cmpsl
sahf
xorb
mov
icebp
jae
jl
mov
adc
fmuls
das
shl
pop
sbb
inc
sbb
mov
or
mov
nop
jmp
es
pop
out
fadds
xchg
jecxz
mov
sti
test
jg
xor
push
mov
jge
cs
ljmpw
push
call
xchg
mov
test
dec
sarl
jg
mov
lods
push
ja
pushf
lcall
out
xchg
movsb
aaa
ds
ret
or
mov
sbb
cmp
adcb
nop
sub
jle
loope
loope
xor
int3
repnz
stos
sub
ror
dec
cmpsb
jo
adc
and
jno
roll
jae
pop
mov
mov
xor
jne
repz
test
je
lret
mov
xlat
pusha
xchg
mov
lcall
leave
sbb
repnz
aam
sub
ds
xor
stos
incb
mov
aam
jbe
call
loop
sti
push
xor
push
jb
aad
cwtl
inc
cmpsl
adc
int
test
jnp
pop
inc
dec
inc
cmp
outsl
inc
js
dec
push
cmpsb
stos
or
push
pop
push
mov
pop
lcall
gs
imul
in
push
and
jnp
jne
sub
cmpsb
arpl
sbb
hlt
pop
inc
and
ds
xor
mov
inc
mov
rcl
jl
add
push
push
or
lret
orl
shr
iret
aas
jno
enter
sbb
inc
push
sbb
cmp
xchg
test
xchg
sub
leave
cmpsb
jg
sub
and
mov
mov
inc
mov
fsubrs
or
outsb
lea
jl
adc
insl
push
mov
aad
stos
jg
fistps
jp
mov
mov
inc
mov
test
dec
sub
out
add
in
cmpsl
sub
jo
loope
mov
sbb
dec
xchg
clc
gs
push
xor
mov
ret
divl
aas
inc
test
xor
stos
sbb
pusha
lret
mov
cmpsb
outsb
jg
mov
and
loope
outsl
push
and
or
mov
mov
jecxz
jle
cli
imul
sbb
mov
add
pop
push
sarl
cs
test
jecxz
xchg
mov
push
cli
out
js
aad
cwtl
dec
add
imul
add
sti
sahf
push
rcll
mov
cmpsb
ret
test
xchg
cld
fistpl
daa
shll
ds
ficoml
and
stos
cld
popl
lcall
shll
int3
sbbb
or
push
loop
outsb
mov
xchg
jl
add
and
loop,pn
and
cli
adcl
sbb
xor
wrmsr
outsl
xor
sub
cmp
movsb
in
push
int3
cmp
gs
aad
mov
mov
mov
cli
jb
or
push
cs
sub
lods
mov
pushf
xchg
inc
in
pop
imul
jns
jbe
push
mov
xlat
fisubrs
outsb
nop
sub
dec
sahf
xchg
test
sub
push
pandn
mov
pop
jge
mov
out
lods
arpl
test
cmpsl
mov
push
and
cwtl
pusha
test
lret
xchg
fs
sub
out
dec
fadds
icebp
inc
jb
test
test
and
mov
jno
fists
andb
add
push
xlat
shl
sub
in
pop
push
icebp
sti
mov
into
in
adc
in
dec
cmp
jns
clc
loope
adc
mov
cmp
inc
loope
mov
enter
arpl
xchg
pop
aam
repz
sbb
sbb
test
std
jbe
jnp
sub
fs
sbb
mov
mov
into
adc
mov
mov
out
dec
arpl
les
sbb
mov
or
ret
jmp
jle
sbb
jmp
sbb
int3
xchg
sbb
jle
arpl
pop
les
xchg
dec
clc
js
outsb
adc
xchg
push
mov
and
push
pop
jb
incl
push
out
mov
popa
bound
add
fs
mov
stos
sub
xor
aaa
xchg
xchg
addr16
push
cld
dec
cltd
push
mov
or
int
out
test
xchg
inc
mov
in
mov
cld
stos
outsb
push
call
cmp
out
loope
cmp
mov
pop
sub
mov
sbb
xor
pushf
push
pop
inc
dec
cwtl
in
mov
xor
adc
and
repz
cli
and
xlat
fdiv
adc
add
jno
jo
mov
sub
or
jns
jecxz
pop
or
mov
xorb
xor
cld
mov
xor
jg
fs
mov
cmpsb
lret
sub
adc
lods
repnz
mov
mov
dec
lret
arpl
dec
jbe
or
sbb
and
ror
popa
dec
add
inc
pop
fwait
stos
ret
mov
lock
mov
imul
push
cmpsl
mov
testl
push
lret
pusha
dec
lcall
push
out
lahf
add
ss
and
jno
int
rcrb
in
fldenv
or
daa
adc
xlat
js
add
xor
fwait
jl
xchg
ret
stos
sub
sub
push
mov
mov
xor
jge
hlt
mov
mov
popf
cmpsl
mov
mov
repz
mov
sbb
push
jo
mov
sub
pusha
inc
push
add
out
pop
inc
jb
jo
leave
cmp
test
push
ret
push
stc
jns
mov
ret
ss
mov
push
mov
mov
mov
lea
jbe
adc
lret
cmpsl
sti
test
xor
clc
jbe
pop
sahf
or
mov
or
sub
or
shlb
repz
jb
scas
xchg
and
je
and
adc
jnp
inc
xor
inc
bound
rcrl
pop
insl
test
xorb
jge
jae
inc
or
in
stos
fs
cmp
mov
scas
sahf
cltd
jmp
and
shrb
add
adc
sahf
lds
mov
mov
arpl
stos
sar
push
ljmp
mov
pop
cmpsl
addl
or
xchg
jno
and
fcmovne
mov
inc
xchg
fsubl
dec
enter
cmpsb
jge
xor
enter
or
adc
je
xor
daa
jp
xchg
fildl
xchg
adc
jbe
stc
and
pop
cltd
popa
sbb
arpl
and
dec
xchg
fiaddl
sub
xchg
jbe
add
jmp
pop
dec
jne
aad
cmp
nop
stc
mov
sub
pop
scas
lods
nop
mov
cmpsl
add
pop
imul
xchg
push
mov
mov
fldt
and
rclb
jae
aas
push
imul
imul
cld
out
jne
je
lcall
xor
ds
fists
notb
and
out
inc
push
addr16
sbbb
and
mov
mov
pop
orb
pop
lcall
pushw
and
test
pop
scas
mov
out
loop
inc
pop
loopne
mov
pushf
mov
ret
pusha
sarb
mov
jmp
adcl
data16
or
rcrb
idivb
xchg
loope
push
inc
jbe
ljmp
push
fs
or
adc
stos
push
hlt
leave
fld
or
ljmp
pop
sub
movsl
jae
adc
sub
mov
add
aad
xor
fidivs
push
inc
clc
jb
mov
shlb
popf
lock
sub
xchg
add
movsb
and
xchg
dec
movsl
mov
or
jae
push
iret
jns
xchg
cwtl
bound
jo
jns
popf
inc
addr16
bnd
mulb
jo
inc
push
xlat
xor
test
mov
pop
shrl
jl
in
cmp
mov
testl
jns
jmp
cltd
fs
mov
fists
jne
out
movsl
pop
jns
int3
sub
orb
loop
mov
cli
mov
lea
cmc
xchg
cmpsb
lahf
into
adc
repnz
pop
sub
jno
pop
sub
sar
sub
pop
imul
and
sbb
dec
out
in
fsub
das
mov
mov
fldl
test
scas
sub
xchg
movsb
in
mov
jb
loope
and
fxch
push
sbb
filds
outsl
mov
dec
pop
scas
cld
enter
sti
imul
pusha
or
test
in
xchg
jne
shl
mov
jnp
sub
jne
cld
add
pop
mov
clc
adc
dec
stc
xor
jmp
mov
jecxz
push
pop
pop
das
push
and
and
pop
xor
pop
clc
pop
push
minps
lods
pop
push
and
les
add
imul
testl
xor
pop
repz
adc
pop
jge
fistl
push
pop
cltd
cmp
scas
cmp
out
inc
mov
jo
inc
rcl
cmp
push
fwait
insb
in
in
add
cmp
mov
and
jg
push
pop
std
shrb
sti
cmp
and
cmp
xor
adc
into
test
out
imul
loopne
movsb
outsl
mov
outsl
push
pop
int
lcall
xchg
cmpsb
xchg
inc
xor
push
das
xorb
lea
xor
dec
std
dec
and
mov
rcrb
cwtl
mov
sub
sahf
add
insl
and
in
lods
in
fsubrl
mov
out
lds
pop
xchg
or
jg
push
jmp
movsb
into
adc
mov
pop
xchg
push
int3
into
stos
xchg
inc
mov
out
negl
das
jle
or
ret
push
insl
adc
jmp
inc
fmull
fildll
jle
cltd
das
int
fsub
add
mov
aam
hlt
setl
jp
or
stos
jae
sub
jecxz
dec
xchg
jns
cmc
xor
sti
cltd
add
xchg
ffree
and
mov
rclb
mov
test
mov
push
mov
adc
xor
push
mov
into
jne
or
fisubrl
icebp
push
arpl
or
cltd
jae
jg
and
frstor
add
push
mov
sub
xor
bound
cli
ss
or
ss
jl
filds
jp
lret
or
mov
mov
test
mov
push
and
xchg
lds
sbb
in
or
mov
push
inc
arpl
arpl
pop
mov
in
fdivl
orl
mov
jl
xor
pop
movsl
imul
lods
cvtpi2ps
test
jb
mov
sub
xchg
jle
pop
add
ret
outsl
aam
fs
pop
and
sub
xchg
pop
stos
mov
adc
mov
mov
jo
mov
dec
aas
push
std
or
aam
xor
negl
adc
mov
popa
test
or
inc
mov
sbb
or
or
push
mov
and
adc
cwtl
rcll
or
test
aad
shll
jae
push
cwtl
mov
daa
dec
js
cli
roll
add
in
stos
shll
out
dec
rcrb
inc
cwtl
mov
mov
xchg
push
in
or
lcall
rclb
mov
pop
sti
mov
subl
and
mov
out
scas
sbb
sbb
xchg
cmpsl
movsl
jae
sub
jne
cli
mov
and
mov
pop
pop
movsl
xchg
push
out
jecxz
dec
sbb
into
xchg
mov
into
jbe
fisubrl
push
push
adc
jg
dec
leave
mov
push
imul
in
into
cmpsb
mov
mov
sahf
mov
push
sub
sub
mov
cmpsb
sbb
enter
fucom
addb
sub
inc
aaa
cmp
cltd
xor
jl
or
or
pop
sub
mov
sbb
mov
jno
scas
mov
adc
int
in
pop
popf
lods
dec
jg
aad
sarl
pusha
sbb
rclb
repz
cmp
in
push
decb
lods
stc
add
sbb
cli
imul
or
cmpsb
pop
ljmp
lods
dec
adc
hlt
push
jnp
or
cmp
add
rorb
inc
jmp
xor
subl
cmpsl
inc
jae
repz
das
cmpl
movsl
mov
inc
dec
cmp
pusha
inc
scas
scas
fsubrs
inc
pop
or
adc
imul
les
cmp
cmp
or
adc
inc
xor
hlt
xchg
imul
pop
xchg
shll
pop
subl
ja
xor
fcoml
addr16
cmp
xchg
cmp
in
or
mov
mov
dec
xchg
pop
or
jp
mov
ss
sub
cltd
fildl
pop
repz
setnp
call
jno
in
out
mov
gs
mov
add
cmp
push
test
cmp
cwtl
out
fbld
xor
pop
ret
rcr
pop
xor
jo
push
mov
clc
push
xor
xchg
add
mov
xchg
ss
or
loope
xchg
fdivrp
enter
sub
inc
dec
pop
inc
xchg
nop
mov
aad
in
pop
test
loope
inc
jle
shll
jl
mov
mov
mov
sub
add
movsl
mov
clc
push
lds
stos
scas
int3
sbb
cwtl
mov
popf
or
cs
ljmp
mov
ret
call
jecxz
in
cmp
fisttpl
inc
push
fimull
xor
hlt
cmpsb
loopne
rclb
inc
pop
das
sbb
loop
and
loop
sbb
sbb
and
jmp
dec
les
cwtl
mov
cwtl
jb
stos
mov
xor
push
sub
mov
fisttpl
xchg
in
rorb
jo
mov
cmp
dec
mov
js
or
mov
inc
cmpl
and
cmp
imulb
sbb
ficomps
popa
jae
pop
push
xor
testb
sti
loopne
jl
std
cmp
sub
sbb
jae
and
push
bound
or
and
iret
mov
cld
sub
pop
in
pop
jae
sbb
sti
mov
iret
sub
lret
sarb
adc
pop
popa
insb
arpl
pop
jp
mov
xchg
lret
push
lods
ret
push
aam
icebp
sbb
push
movsb
fldt
fistps
sub
xchg
sub
sub
cmp
mov
jecxz
sar
nop
imul
fsubrs
imul
mov
mov
xor
xchg
js
mov
cmp
add
leave
and
add
clc
and
aaa
sbb
xor
pop
hlt
int3
bound
sahf
jmp
pop
xchg
push
jnp
lods
mov
jb
inc
stc
call
lret
sub
lahf
add
push
outsb
and
enter
and
sahf
mov
fldt
inc
push
push
bound
and
test
mov
inc
mov
cmpsl
xor
jle
test
pop
pop
adc
mov
cmp
jmp
in
add
fisttps
push
or
adc
xchg
divl
mov
popa
iret
mov
sbb
out
aas
push
cmc
push
sbb
das
aas
sub
push
pop
and
int
xor
call
xor
lahf
sbb
jecxz
or
jg
mov
jae
and
pop
insl
xlat
mov
mov
int
inc
stos
lods
outsb
in
or
or
xchg
out
add
scas
test
loop
data16
repz
push
xchg
jb
cmp
inc
xchg
sub
popa
fmuls
test
rcr
rcrl
mov
sub
adc
adcl
pop
xchg
and
dec
pushf
mov
pop
mov
pushf
aaa
and
pop
int
ret
jnp
ret
or
and
lea
xlat
clc
and
mov
inc
nop
fistpl
fisttpl
and
pusha
jns
sub
sub
jbe
dec
nop
dec
insl
cmpsb
int3
int3
mov
mov
xchg
psllq
adc
aaa
pop
or
lods
push
inc
xor
outsl
mov
xor
je
xorb
in
hlt
in
mov
sarb
adc
push
push
lahf
lods
xchg
lea
jno
jg
ds
lock
push
lock
outsb
pop
jle
in
inc
pusha
arpl
xor
xor
das
cwtl
icebp
out
roll
and
push
in
mov
clc
stos
and
int
sarb
fiadds
cmpsl
je
xchg
jne
sub
xchg
nop
mov
mov
mov
call
xchg
repz
in
jg
icebp
xchg
push
inc
xlat
pop
jno
xor
insb
push
imul
lahf
cmp
pushf
add
adc
mov
iret
daa
fs
out
xorb
clc
sub
or
je
mov
jp
inc
rolb
mov
nop
lods
in
repz
pop
jns
movsb
out
jae
imul
andb
jg
adc
int
divb
mov
xor
insb
sbb
popf
pop
mov
jp,pn
in
sub
pop
mov
push
es
out
lods
pop
jo
hlt
push
in
iret
push
push
jb
jnp
insl
pop
gs
decb
jne
inc
push
jmp
lods
mov
add
in
cmp
add
dec
mov
rorl
in
mov
hlt
and
and
push
push
enter
adc
push
mov
pop
movsl
dec
out
ficompl
pop
lahf
sub
jb
sub
mov
hlt
inc
shlb
outsb
addb
add
mov
sub
out
aas
mov
xor
orb
pop
sbb
pop
add
les
movsl
push
sub
sbb
das
aam
dec
mov
inc
push
sbb
pop
out
push
mov
inc
icebp
xlat
repz
push
push
jno
sbb
out
or
xlat
pop
in
xchg
in
cs
xchg
inc
popa
or
xor
and
arpl
inc
xor
inc
mov
jns
mov
sub
jns
clc
jne
dec
mov
out
lahf
jnp
mov
loop
fisubl
xor
fldt
fldl
or
sub
mov
mov
adc
cwtl
cmp
sub
ja
addr16
mov
mov
cmp
dec
pushl
sbb
sub
iret
sti
clc
add
lds
push
pop
out
push
lock
aas
in
push
loop
int
add
lret
cli
pop
scas
pop
fadd
mov
icebp
or
popf
push
mov
inc
xor
jg
lock
dec
call
mov
dec
into
ds
inc
out
mov
sbb
pushf
fidivl
rcrl
mov
push
insb
jmp
cmpsl
pushl
popa
adc
inc
push
int3
mov
in
or
cmp
test
fisubrl
std
mov
loop
movsb
mov
fsubrs
lods
rcll
jnp
daa
repnz
cmp
leave
jns
dec
push
data16
add
pushf
rolb
jno
xchg
inc
xor
sub
aas
sub
imulb
aam
dec
mov
sbb
xchg
jnp
jle
lret
fidivs
jo
xlat
pop
fistpl
stos
popf
lods
add
mov
mov
frstor
jo
stc
icebp
aaa
jl
dec
inc
mov
in
cmp
pop
lds
lret
mov
js
adc
pop
mov
leave
pop
push
mov
roll
push
jge
push
jmp
dec
fidivs
adcb
cmc
aad
in
pop
adc
cmp
cmp
xor
sub
pop
push
bsf
jge
insb
or
sub
je
jae
stos
or
xorl
mov
push
scas
pop
jo
inc
xor
jnp
enter
shr
aam
push
lea
jne
cmp
mov
inc
pop
stc
orl
ljmp
test
mov
lret
mov
leave
enter
xor
data16
popa
iret
mov
sarb
or
and
adc
pop
add
pop
or
jbe
adc
xchg
cmp
mov
add
pop
sbb
pop
insl
bound
pop
arpl
shrb
jnp
push
dec
push
mov
es
or
ret
mov
fidivs
outsb
lret
popf
test
scas
push
xor
cld
out
push
rcr
std
into
popa
cltd
pop
adc
dec
and
call
and
ss
xor
out
and
add
xchg
pop
dec
cmp
jbe
push
jae
ljmp
test
mov
fidivrs
add
sub
add
sub
mov
cmc
inc
sub
mov
add
stc
rcll
rcrb
dec
push
jno
aam
ljmp
cltd
scas
or
fsubs
push
incl
lret
mov
testl
js
sub
scas
out
sub
mov
push
imul
sub
and
mov
and
pushf
fneni(8087
test
repz
fwait
int3
pop
sub
outsb
xor
dec
mov
decl
adc
cwtl
push
mov
das
popa
clc
lea
jp
or
int3
sbb
xor
sbb
daa
daa
mov
or
mov
push
jecxz
mov
jmp
les
fcmovne
ja
sub
or
adc
inc
in
imul
or
fdivl
jo
or
loopne
pop
mov
stc
out
xchg
mov
fwait
xchg
call
push
sbb
jbe
hlt
mov
fcmovnu
mov
sbb
imul
push
dec
sbb
roll
mov
xchg
sbb
push
stc
mov
xchg
movsb
mov
je
xchg
pop
shll
xchg
mov
mov
dec
out
jg
enter
mov
ds
mov
ds
js
outsl
inc
dec
inc
test
iret
sti
xchg
mov
cmc
adc
inc
movsb
fldt
hlt
repnz
insl
pop
or
dec
push
add
jo
mov
stc
in
lods
adc
pop
icebp
repz
pop
addr16
xchg
or
mov
pop
imul
push
xchg
ds
mov
sub
dec
subl
outsb
dec
loope
ljmp
and
jno
mov
adc
icebp
scas
mov
lods
sub
sbb
xor
pop
loop
push
cwtl
sub
xor
daa
push
jge
stos
dec
cmp
inc
stc
scas
dec
dec
mov
sub
and
mov
push
out
in
pop
orb
enter
push
ja
cmpsl
adc
iret
scas
lock
add
rorb
adc
push
sbb
xchg
icebp
cmp
int
inc
xchg
loopne
xor
mov
jae
xor
sbb
sub
dec
or
outsb
aaa
mov
mov
rorl
sub
xchg
rolb
scas
sbb
mov
sbb
xorb
sub
mov
mov
pop
xor
ret
movsl
int
cmc
test
sbb
in
jge
and
jae
mov
mov
pop
jl
cs
cld
pop
fstps
and
mov
cltd
lock
mov
cmp
aas
call
xlat
fdivl
mov
pop
jmp
test
imul
mov
push
jecxz
into
cmp
dec
outsb
inc
data16
out
test
imul
sub
jmp
test
dec
out
mov
dec
or
push
push
dec
xchg
mov
or
movl
pop
xchg
ljmp
mov
out
fistps
inc
pushl
sub
call
popa
movl
dec
lods
aas
mov
cmp
psraw
mov
sbb
mov
push
fmull
sub
dec
adc
mov
jno
jbe
popl
cmp
jo
xchg
imul
add
or
pop
scas
insb
xor
pop
lea
push
rcll
lea
or
mov
add
imul
add
push
ret
ja
sub
push
sub
insl
mov
add
sbb
xlat
sub
icebp
into
add
mov
mov
push
inc
xor
sbb
pop
aad
js
sub
ds
dec
in
insl
mov
sub
movsl
out
and
pop
fwait
xchg
xor
add
add
out
jnp
pop
fdivrs
jne
test
outsb
adc
leave
repz
mov
sbb
adc
movsl
xchg
lods
aaa
xor
lds
bnd
fadds
and
jno
sar
enter
aaa
xor
je
fidivrs
push
push
jecxz
popf
xor
pusha
mov
pop
xchg
loop
inc
mov
sti
popa
xchg
push
gs
pop
test
push
mov
movsl
mov
dec
or
pop
movsb
cmp
je
aad
pop
sub
or
lods
sub
daa
mov
pop
pop
mov
pop
pushf
mov
sbb
arpl
mov
pop
mov
pop
mov
sbb
jmp
fsubs
inc
rcl
add
pop
aad
test
iret
lea
fstp
cmp
push
xlat
cmp
aas
mov
mov
popl
mov
rorb
mov
add
inc
icebp
pop
pop
arpl
sbb
jl
sbb
xor
or
testb
movsb
fwait
incl
pop
inc
test
mov
cmp
jecxz
enter
icebp
lods
push
sbb
jb
mov
xchg
sbb
pop
inc
aaa
stos
jne
loope
aas
cmpsb
dec
sub
xchg
sub
sarb
xlat
inc
push
sbb
cltd
add
push
inc
clc
cwtl
out
imul
push
push
repz
mov
adc
mov
imul
mov
insl
xor
test
jno
mov
push
mov
negl
lret
int
movsb
xor
cmp
push
sbb
cmpsb
cmpsl
jnp
mov
enter
sbb
dec
xchg
mov
js
fmul
mov
add
add
clc
inc
ds
dec
push
nop
push
push
mov
dec
or
ljmp
fcomps
outsb
jns
aad
arpl
xchg
int
loope
orb
push
loopne
cmp
popa
sub
out
xchg
addr16
mov
cmpl
or
add
xchg
div
xor
jle
push
int3
xor
popf
dec
movl
outsb
test
pop
or
pop
jne
jo
scas
and
lahf
test
jl
mov
dec
je
lock
cwtl
cmp
rorb
mov
and
mov
std
insb
aas
movsl
sbb
jbe
test
pop
lods
test
lock
inc
jl
push
idivl
loopne
push
fcoms
sub
or
fiadds
arpl
pushf
adc
lods
lret
sub
dec
push
mov
fucomi
fisubrl
mov
push
pop
or
sub
int3
cld
pop
dec
imul
fisubs
jmp
mov
jb
out
mov
dec
inc
cmp
mov
sub
mov
mov
jb
mov
xor
ja
movsb
push
adc
test
push
cmp
jo
stos
jg
mov
jp
add
andb
stos
adc
mov
lods
int
jle
lods
adc
rcr
dec
je
pushf
sub
lea
sub
pop
das
cmpsb
cmp
std
xor
mov
mov
mov
fiaddl
in
push
imull
addl
stos
loope
mov
fadds
or
jecxz
rcr
out
pop
sub
push
sbb
sti
fcmovnu
push
jnp
or
xchg
in
sbb
mov
xchg
mov
stos
push
cmp
xchg
xchg
mov
in
xor
jp
jmp
push
jae
popf
push
repnz
sahf
fwait
std
loop
lds
xchg
mov
lds
xchg
pop
sub
pop
xor
lods
enter
lahf
cmp
dec
shrb
jno
repnz
ja
sti
jo
ljmp
and
or
or
popf
enter
sbb
mov
adc
daa
enter
filds
loope
ss
pop
enter
inc
mov
repnz
mov
je
mov
sbb
or
cmp
ret
test
sub
sbb
sbb
mov
mov
add
push
dec
mov
sbb
inc
sti
mov
les
int3
out
test
xchg
stos
or
fistps
sub
adc
test
lock
int3
int
add
lret
add
in
pop
ret
cmp
cmpsb
jb
cmp
xchg
jbe
xor
or
pusha
push
cmpsl
push
add
push
das
pop
mov
rcll
mov
sti
cld
enter
adc
sbb
aaa
in
dec
rolb
dec
bound
loopne
std
arpl
jg
loopne
push
and
aaa
cs
pop
in
pop
jnp
cs
xor
lret
ds
push
movsb
jae
outsl
mov
or
mov
in
lcall
ds
or
inc
xor
xorb
mov
gs
loop
mov
inc
xor
add
cltd
test
dec
ret
fst
clc
out
jbe
imul
jae
scas
jns
lsl
push
xchg
imul
mov
pop
pop
sbb
mov
dec
inc
jl
adc
mov
fbstp
sti
mov
xor
in
cmc
int
mov
cwtl
les
filds
repnz
adc
push
and
lret
push
iret
bound
mov
adc
xor
sbb
xor
jns
stos
mov
push
in
xchg
xor
loop
inc
mov
push
outsb
push
mov
mov
mov
shll
or
clc
iret
pop
push
sbb
or
xchg
stos
mov
mov
sbb
inc
dec
xor
dec
movhps
jno
pop
pushf
sbb
inc
into
call
les
mov
mov
in
pop
test
push
add
subl
cwtl
jbe
aaa
and
data16
outsb
fstp
cmp
xchg
fidivrl
or
mov
or
outsb
push
pop
outsb
sbb
inc
sub
lods
std
sub
push
daa
inc
sub
mov
push
sub
imul
adc
imul
stos
xlat
stos
mov
test
cmc
mov
lods
sbb
outsl
mov
out
sbb
call
imul
out
arpl
scas
xor
pop
mov
or
push
jbe
mov
leave
mov
push
push
scas
inc
cmp
les
mov
sbb
push
mov
sub
jmp
sub
cmpsl
mov
loopne
xor
sbb
dec
push
loope
sub
push
out
scas
pop
in
es
xchg
sti
rcrb
xor
inc
pop
dec
mov
ret
add
inc
pop
iret
daa
jg
or
dec
pop
subps
icebp
cld
mov
aam
lock
lret
fcoms
cwtl
jne
cmp
pop
icebp
xchg
add
sahf
test
sbb
rep
cld
mov
adc
jns
push
mov
xor
push
inc
add
cmpsl
pop
je
loopne
cld
add
cmpl
insl
lahf
mov
daa
inc
lock
push
out
daa
pop
and
cmp
jo
mov
cli
sub
stos
dec
xchg
aas
push
or
repnz
divl
aaa
pop
fnstenv
sbb
in
loop
mov
xchg
xchg
xchg
fimuls
std
ljmp
jb
adc
adc
stc
icebp
loope
add
popf
movsb
mov
test
sbb
xlat
scas
inc
daa
dec
mov
mov
ds
pop
adc
fwait
push
sub
cmp
mov
scas
andb
clc
xchg
dec
int3
jecxz
scas
cmp
inc
mov
dec
lahf
orl
jge
mov
pop
negl
in
dec
imul
sub
add
les
push
nop
mov
xchg
imul
lret
inc
cmpsl
in
sub
nop
cmpsl
mov
dec
mov
lret
sahf
jns
mov
icebp
add
xchg
ror
xor
inc
loope
ds
mov
and
dec
pop
mov
aam
faddl
add
jl
lret
add
cmp
push
insl
negb
jns
jmp
test
fdivrs
jne
scas
leave
mov
imul
aas
stc
mov
xor
xor
mov
adc
push
addr16
push
mov
loope
sti
shrb
hlt
test
mov
inc
scas
add
sub
jns
and
add
in
js
repz
pop
lahf
inc
or
adc
flds
ljmp
imul
shlb
jb
inc
pop
and
out
lds
pop
lret
cltd
lret
aad
dec
stos
fists
or
ja
arpl
dec
and
push
xor
xorl
push
dec
add
cltd
cmp
cmp
add
movsl
pop
rcl
mov
xor
out
cmpsb
adc
jo
mov
popa
dec
sahf
mov
sbb
sbb
scas
fwait
ror
pop
in
lods
mov
pop
cmp
addr16
xchg
lock
and
int3
inc
push
in
inc
popf
sbb
inc
cmp
cmp
adc
jecxz
jo
ret
jno
shr
jbe
mov
in
loopne
cltd
mov
or
push
out
clc
xchg
movsb
arpl
outsb
ss
xor
mov
push
inc
sbb
popa
xor
push
jmp
jbe
mov
lds
sub
mov
cmpsl
cmp
jl
imul
and
adc
or
out
insl
ss
cmp
sbb
mov
mov
imul
jbe
je
vpunpckhbw
sub
jb
adc
jp
xor
jl
sahf
and
mov
stos
insl
push
push
ds
fnstsw
mov
mov
out
mov
es
test
pop
xor
inc
dec
repz
rcrl
int3
lods
xor
inc
push
repz
sbb
gs
sub
out
cmpsl
in
pop
adc
mov
loopne
stos
sub
nop
fbld
mov
in
fisttps
iret
aas
fimuls
add
mov
or
shll
je
hlt
jle
ret
lock
aaa
lds
xor
xor
lock
imul
mov
call
dec
test
add
xchg
adc
repnz
or
pushl
xchg
pop
xor
pop
data16
pop
test
fsubr
fmull
rorl
push
push
popf
loop
in
ljmp
dec
xchg
push
mov
jns
jecxz
cs
lds
das
sbb
cmpsb
lret
mov
enter
pop
xchg
adc
je
xor
ja
lock
mov
push
in
jl
inc
imul
stos
dec
and
cmpsl
test
xchg
xlat
sub
popf
dec
pushf
push
decl
out
mov
mov
jg
dec
mov
and
jp
jl
push
ljmp
aam
sub
arpl
jb
mov
cmc
sbb
sbb
es
and
push
addr16
pushf
dec
in
push
out
adc
dec
push
push
roll
xor
js
or
mov
mov
pop
fdiv
or
stos
fisttps
dec
out
outsl
and
jb
mov
xchg
fidivrs
fisttpll
dec
sbb
mov
mov
cs
dec
clc
sub
sbb
jns
push
xchg
xlat
lret
push
cltd
dec
lahf
mov
testl
inc
xor
je
xchg
inc
lods
pop
inc
addb
js
cmp
add
in
test
clc
dec
xor
lahf
movsl
cli
movsb
mov
fldcw
add
fnstcw
mov
dec
popf
sbb
rcr
ja
lahf
inc
loope
add
in
in
cmp
mov
push
out
and
repz
sbb
pop
adc
dec
fldenv
push
adc
nop
dec
sbb
test
movsb
ja
leave
rol
mov
movsl
fnstenv
out
imul
jmp
cwtl
or
std
push
push
test
jp
xchg
sti
push
std
pop
or
push
subb
cwtl
sub
lret
push
repz
jb
jp
fdivs
hlt
xchg
fistps
into
or
int
rclb
xor
mov
push
mov
jb
or
shll
pushl
std
or
and
sbb
xorb
rcll
sti
sbb
iret
rolb
xlat
in
decl
insl
mov
fisttpl
bound
and
cmc
sub
mov
mov
sub
xchg
enter
push
dec
movsb
add
cmpsb
sbb
loope
loop
scas
cli
mov
sti
cmp
nop
test
add
cmpsb
stos
jb
lea
jns
sub
mov
add
or
les
stos
xchg
sub
icebp
cmp
push
cli
fwait
aas
add
dec
pop
mov
pop
int
push
outsl
xrelease
dec
fnstcw
int
add
xor
cltd
dec
inc
outsb
mov
subb
xor
cld
lods
incl
cmp
daa
inc
inc
gs
enter
adc
out
mov
dec
ds
xchg
sbb
cmc
aas
jae
mov
jecxz
nopl
sub
or
mov
cmp
cli
push
call
cltd
jmp
fimull
iret
push
dec
xor
push
stc
sbb
xor
push
adc
xchg
sbb
xlat
fcompp
cmpsb
sar
push
add
lea
jo
aas
je
jmp
enter
jge
push
fwait
jb
mov
das
xor
in
data16
add
push
and
cltd
cwtl
leave
xor
adc
in
or
or
pop
stos
pop
ret
or
dec
test
jnp
sub
bound
ret
aad
testb
mov
shl
jbe
test
mov
in
mov
mov
push
ret
lds
sub
push
scas
add
xchg
cmp
ficoms
loopne
arpl
enter
es
and
lds
push
insl
mov
sub
push
xchg
mov
loop
or
lret
or
mov
sbb
movsl
pop
add
mov
pushf
lods
clc
pop
iret
dec
imul
push
xor
orb
cmpsb
mov
mov
jg
pop
shll
test
mov
psubd
lods
sub
cmpl
mov
jns
inc
sbb
lods
push
mov
mov
hlt
cmp
pop
imul
test
xor
inc
ret
adc
jmp
pop
call
dec
or
dec
inc
aaa
das
out
cmp
mov
add
cmp
cld
cmc
push
xor
mov
cli
int
jb
jle
lds
adc
mov
mov
dec
mov
dec
and
icebp
stos
arpl
aam
das
pop
test
or
std
movsb
xchg
inc
mov
fnstcw
jo
aam
and
shlb
jl
lahf
sub
cld
xchg
inc
xchg
insl
jp
xchg
das
scas
or
popa
pop
push
cltd
or
mov
jecxz
cld
in
cmc
xchg
pop
cmpsl
xor
data16
icebp
mov
pop
pop
push
inc
ret
cmp
and
cmp
cwtl
das
mov
flds
ljmp
adc
loopne
mov
popa
mov
cmpsb
push
or
pop
and
out
xchg
ds
pop
pushf
rol
jae
mov
pop
lds
jno
cmp
nop
jmp
xlat
and
xor
into
pushf
jo
lock
mov
add
dec
lret
xchg
sub
and
int3
or
xor
popf
push
in
aad
jb
test
aam
xchg
mov
add
push
sti
push
int
mov
xor
inc
jecxz
pop
sbb
loop
cld
popf
sub
mov
lock
pushf
mov
scas
fstpt
dec
mov
jae
out
xor
loop
adc
stc
fimull
js
inc
aam
ret
sarl
aad
inc
into
jb
call
nop
das
or
frndint
inc
sti
cltd
mov
push
mov
xchg
inc
cmc
or
jmp
inc
mov
shll
fsubr
xchg
shrb
jl
jge
leave
in
cmp
cmp
jp
addb
inc
push
sbb
adc
and
enter
and
bound
push
pop
in
pop
pop
jle
inc
mov
out
lahf
add
xor
pop
pop
mov
lcall
cmc
push
inc
rcr
nop
adcb
fwait
imul
repz
subl
adcl
pop
fwait
jae
and
and
pusha
lret
in
or
xchg
and
cmpsl
out
mov
push
aad
sub
mov
xor
cmc
push
arpl
xor
hlt
jbe
and
out
aaa
mov
scas
mov
push
sbbb
mov
jmp
arpl
daa
fnstenv
jle
add
xor
out
fsts
inc
movsl
sub
xlat
sbb
scas
xchg
pushf
jae
fisubrs
fcomp
rcll
js
movsb
loop
xchg
addr16
pop
cwtl
arpl
jl
movsl
out
mov
cmp
sub
lods
pop
jp
ret
cmp
fbld
std
movsb
sub
mov
xor
inc
inc
pushl
mov
and
dec
scas
sbb
dec
or
jg
add
push
or
daa
and
out
inc
imul
insb
imul
lret
push
out
push
movsb
add
push
xchg
dec
hlt
lret
lea
mov
inc
cmc
lock
subl
jbe
push
and
mov
stc
xchg
stc
in
pusha
aaa
mov
cmpl
fwait
out
sti
xchg
sbb
and
dec
xchg
jle
ds
jmp
nop
lahf
or
ficoms
mov
sbbl
rcl
cs
mov
mov
notl
lds
cld
clc
stc
xlat
push
xor
adc
adc
mov
adc
xchg
push
cli
jecxz
pop
shlb
outsl
dec
cld
and
adc
lcall
test
movsl
arpl
xor
rorb
sub
mov
lock
scas
add
in
add
and
push
and
jle
dec
mov
ss
inc
cmc
ret
mov
nop
loope
push
icebp
aad
cmp
dec
jo
lahf
iret
sbb
hlt
jmp
mov
jo
add
or
push
out
and
inc
adc
test
or
or
je
sti
ljmp
lods
xor
ja
dec
push
dec
xchg
into
out
sub
daa
dec
xor
adc
push
inc
popa
jo
jne
dec
jbe
movsl
mov
sar
inc
les
or
jp
adc
outsb
jle
test
clc
sbb
push
lcall
incl
mov
xchg
das
insl
int3
mov
push
movsl
dec
xor
push
jno
les
test
fisttpll
out
xchg
cmp
cmp
push
fldl
lea
inc
add
mov
aad
and
inc
xchg
push
sbb
mov
push
ja
repnz
mov
stos
push
jp
fsubr
inc
push
jnp
mov
mov
push
cmpsb
jmp
xchg
icebp
or
cmp
adcl
jo
sub
dec
mov
fs
sbb
adc
daa
inc
xchg
rclb
sahf
sti
das
jmp
imul
add
sbb
fadds
movsb
pusha
outsb
gs
add
adc
inc
xchg
mov
popf
pop
test
gs
ljmp
or
and
in
jno
or
inc
mov
out
enter
xor
sbb
das
aas
scas
xor
jns
xor
jecxz
insb
lock
inc
pop
subb
lock
push
xor
pop
or
pop
mov
fistl
pop
push
inc
cmp
mov
dec
call
imul
jp
push
xchg
je
and
mov
xor
mov
addb
pop
or
mov
pop
pop
pop
loop
mov
inc
sbb
mov
cli
and
insl
stos
mov
jmp
mov
lods
jb
popf
out
xchg
fldt
xchg
add
inc
daa
mov
sti
push
lods
arpl
adc
push
mov
cmp
daa
inc
ret
add
dec
mov
daa
stos
out
xor
dec
loopne
and
fwait
cmp
lods
mov
lahf
pushf
hlt
or
sar
cmp
clc
out
call
mov
fcmovbe
dec
shrl
cmpb
repz
push
mov
add
add
pop
pusha
or
fists
add
je
push
mov
adc
mov
push
addr16
bnd
into
das
cmp
lcall
out
xor
outsb
les
into
iret
out
and
inc
mov
fistpl
enter
lahf
jmp
in
inc
xchg
mov
faddl
ljmp
push
sbb
sub
sti
sub
mov
add
subl
out
push
mov
sbb
cmp
enter
fsub
mov
mov
push
sbb
imul
shrl
lret
sbb
cs
fdiv
mov
imul
sbb
dec
and
cvttps2pi
imul
xor
pop
pop
cmp
hlt
mull
shlb
or
xchg
sub
jmp
icebp
cwtl
dec
sub
xor
inc
repz
lea
xor
roll
cmc
jns
sbb
ja
idivb
and
mov
movsb
and
test
and
jns
dec
stos
add
jb
shl
mov
lahf
js
sbb
mov
xlat
push
mov
not
jno
mov
sub
jmp
jno
jnp
pop
insb
test
js
add
lea
inc
data16
and
mov
push
inc
fisubrs
mov
xorl
inc
lock
sti
mov
mul
pop
push
fistps
jbe
or
lcallw
push
lods
push
push
jns
mov
out
push
xchg
and
xchg
or
imul
jmp
out
jne
gs
shlb
xchg
add
cld
test
mov
movsb
sub
adc
pop
xchg
aaa
xchg
aam
ljmp
sub
jo
repz
cmp
push
cli
cmp
outsb
aam
xchg
push
mov
addr16
xchg
jb
and
sub
bound
push
rorl
push
fsts
nop
pop
xor
and
gs
dec
sub
addr16
xchg
push
sbb
cwtl
in
dec
insb
xor
xchg
lds
xchg
mov
mov
ret
xor
jns
call
daa
sbb
adc
jnp
push
dec
mov
xor
aaa
or
mov
movsl
jp
aam
repnz
xchg
xchg
dec
sahf
or
add
sahf
sbb
rol
cltd
xchg
pop
flds
pop
push
add
inc
cmpsb
popa
sub
and
mov
aad
mov
or
inc
push
add
cmp
and
insb
cmc
xchg
xchg
add
jmp
add
mov
xlat
inc
adc
inc
pop
cmp
jl
outsl
call
inc
js
pop
movsl
inc
aam
sti
mov
inc
pushf
imul
out
jbe
jmp
adc
int3
inc
fldl
stc
movsl
push
inc
addr16
clc
mov
test
xchg
scas
jo
shl
add
loope
xchg
sbb
decb
cmp
imul
mov
insb
loop
push
scas
dec
xchg
add
jg
mov
push
xlat
into
and
dec
scas
fsubrl
xchg
add
xchg
test
hlt
mov
sbb
decl
ja
cmpsb
sub
hlt
and
sti
mov
dec
jle
pop
or
repnz
sbb
jo
cwtl
xchg
mov
popf
mov
add
inc
out
mov
leave
sbb
jl
fwait
orb
fsubs
dec
dec
andb
push
lret
popa
inc
inc
lods
outsl
jns
js
std
pushl
je
sbb
clc
jg
add
pop
jae
and
push
push
push
int3
mov
or
xor
dec
inc
mov
js
adc
test
ficomps
in
mov
mov
pop
xor
movsb
cli
sub
or
insb
stc
lahf
je
add
rol
sbb
mov
mov
clc
jbe
insl
test
and
cmp
aam
mov
repnz
jmp
xor
ret
sbb
inc
cmc
daa
pushf
enter
mov
jp
xor
ret
fcmovbe
ret
mov
mov
adcl
add
lcall
inc
mov
repnz
lock
mov
fisubs
inc
inc
cwtl
insl
mov
add
adc
cmp
inc
sub
out
leave
inc
inc
fcmove
inc
cmp
lahf
xor
aas
lcall
and
in
repz
push
inc
imulb
add
call
mov
rcr
lods
mov
jns
popf
xchg
cmp
and
push
rorb
jne
imul
mov
xor
xchg
jb
cltd
pop
xorl
push
xor
pusha
adc
stc
fdivrl
cmp
xor
sub
add
sub
btr
inc
idivb
sarl
je
stc
fwait
sti
fs
cmp
bound
push
into
ljmp
mov
or
jp
xchg
ret
movsb
pop
mov
test
xchg
xchg
xor
aam
push
aas
mov
jns
int3
nop
push
movsb
xchg
fstl
add
in
add
inc
or
jl
adc
pop
inc
pop
push
pop
push
xchg
cs
push
insl
es
xlat
sarb
push
les
xchg
sub
inc
push
idivl
data16
addl
in
push
movb
stos
cmpb
sbb
sbb
lahf
adcl
sbb
mov
pop
dec
pop
test
dec
test
mov
aas
mov
push
fstpl
arpl
dec
mov
sbb
inc
jecxz
mulb
cmp
lods
fadds
outsl
xor
pop
cmp
mov
mov
cmp
stos
jmp
stos
pop
rcrl
hlt
dec
and
add
inc
rol
jp
scas
xchg
pusha
or
xchg
mov
sbb
lea
test
mov
xlat
insb
push
lods
add
lret
inc
fwait
xchg
jle
dec
adc
gs
int3
mov
fs
loop
push
inc
mov
jle
adc
addl
cltd
or
cmp
pushf
mov
xor
inc
cmp
dec
push
push
xchg
xchg
test
dec
mov
dec
imul
and
in
frstor
fwait
aaa
addb
data16
jne
ficoms
mov
or
cld
push
jbe
or
shll
repnz
lds
inc
cmp
into
ja
mov
cli
sub
and
iret
pop
and
xchg
or
rcrl
xchg
jbe
inc
xchg
and
dec
test
scas
mov
leave
int3
push
push
add
jl
and
lret
add
cli
insl
aaa
push
adc
shrb
pop
pop
mov
inc
xor
xchg
clc
mov
aad
push
loopne
out
mov
scas
pop
cmpsb
fidivs
sbb
lea
rclb
fwait
mov
dec
in
pop
loope
inc
xor
aas
sub
movsl
fistpll
rorl
rol
dec
out
andb
bnd
dec
cwtl
xor
pop
mov
adc
in
int
inc
pop
dec
pop
xchg
mov
xor
mov
call
pop
jmp
push
sti
rorl
lods
enter
and
mov
mov
inc
dec
cmp
in
sbbl
or
or
push
xor
ja
popa
push
jmp
and
adc
sub
or
xchg
stc
xor
and
add
lock
xchg
xchg
mov
stos
lods
xor
nop
cld
sbb
jle
in
stos
sub
popl
sysexit
adc
movsl
cmp
pop
push
pop
sahf
sub
jecxz
pop
rorb
mov
and
sbb
and
xchg
xor
lea
sbb
outsl
fmull
loope
test
xchg
popa
mov
rcrb
arpl
jmp
roll
popf
imul
sahf
rcrl
adc
ret
scas
call
into
mov
out
and
mov
jae
mov
rcrl
mov
xchg
mov
xlat
addr16
or
push
jle
test
ret
jnp
seto
repz
mov
pop
xor
mov
daa
or
pop
jl
addr16
imul
andb
jge
xchg
push
or
xchg
push
push
sbb
pop
stos
call
or
adc
inc
fdivrs
jmp
pop
xchg
aad
and
data16
daa
lcall
dec
dec
add
lahf
jge
sbb
adc
jle
mov
mov
negb
jmp
xchg
lds
and
loop
or
mov
mov
cmp
repnz
mov
les
fildl
jnp
dec
jmp
clc
cld
cltd
orl
pop
jno
mov
dec
loope
clc
pop
cltd
jmp
into
ret
in
cli
sub
movsb
or
push
mov
lcall
mov
cmp
pop
jecxz
inc
fcmovbe
in
flds
and
out
adc
lods
sbb
mov
dec
leave
xchg
test
or
dec
xchg
xchg
data16
jno
xchg
push
push
negl
push
icebp
mov
dec
addl
push
push
cmp
mov
ret
jle
insl
add
stc
repz
in
xor
jno
std
stos
sbb
xchg
mov
cmp
out
or
les
stos
mov
and
or
sub
int3
sahf
out
das
mov
mov
jne
xchg
ds
lods
fistpl
xchg
pop
insb
bound
xchg
mov
ret
setae
test
mov
fdivr
adc
xor
lds
add
cmp
dec
cmpsl
lods
push
ja
and
adc
sub
repz
lds
mov
mov
pop
cld
mull
rcr
lcall
test
repnz
fistps
push
dec
push
dec
and
add
xor
cwtl
aad
pusha
sahf
in
cld
xor
jb
adc
ja
inc
mov
lahf
cmp
cld
pushf
jge
imul
gs
sahf
and
repz
and
cmp
jle
lret
loopne
mov
mov
and
pop
sahf
ret
adc
fs
test
cmp
xor
icebp
sahf
fs
imul
mov
sarb
insl
push
ss
pop
sbb
push
shlb
push
pop
mov
pop
cmpsl
jb
mov
lret
mov
mov
enter
mov
ret
loopne
push
test
sbbb
scas
gs
lret
test
cmp
adc
add
cmp
es
mov
dec
and
aaa
inc
leave
in
xor
mov
pop
cli
jl
scas
lds
loop
cs
dec
mov
bound
ret
push
fsts
ljmp
test
xchg
cld
add
arpl
xchg
mov
cld
test
inc
fs
imul
jne
and
shl
aam
sarl
jns
test
das
cmp
enter
pop
xchg
lock
xchg
pop
xchg
sbb
pushf
mov
or
push
and
cmp
lcall
stos
test
mov
shll
cmpsb
sbbb
inc
shr
iret
clc
or
fadds
mov
test
repnz
jmp
stc
cmp
jle
xor
and
in
imul
xlat
iret
mov
cmp
cli
outsl
sahf
inc
movsb
hlt
shlb
cmp
xor
inc
sbb
sbbb
adc
mov
bound
jb
dec
push
mov
lahf
and
or
mov
mov
adc
rcll
outsl
movsl
and
int3
xchg
push
popf
jecxz
inc
sub
jae
adc
cmp
fiadds
sbb
out
jnp
test
cs
inc
push
and
mov
aaa
push
mov
sbbb
addr16
mov
fbld
imul
adc
add
incl
hlt
push
mov
xor
leave
pop
and
sub
and
xchg
aaa
sar
push
test
pop
mov
or
repz
inc
push
push
call
decl
mov
cltd
mov
mov
pop
enter
cld
jo
pop
cmp
xlat
lret
sbb
ret
iret
xchg
shll
jge
pushl
dec
pop
daa
pop
sub
add
xor
cmp
adc
adc
adc
mov
or
imul
ds
sub
scas
test
cmpsb
sbb
test
sbb
rcll
xchg
pushf
add
or
aam
adcl
mov
loope
daa
lret
jecxz
mov
xchg
loopne
scas
imul
dec
lea
fimuls
push
jno
lret
test
xor
stos
inc
jecxz
dec
xor
repnz
push
loopne
lea
insl
cmp
jmp
xor
rol
inc
inc
test
jbe
jno
or
in
xchg
fiaddl
xor
and
mov
pop
cli
mov
inc
cmp
mov
filds
mov
push
cmp
push
add
xorl
pop
and
jb
jne
cmpsb
movsl
ret
mov
pop
pushf
cmp
std
test
ds
rcrb
insb
lods
shlb
into
inc
test
pop
pusha
les
mov
push
push
or
add
mov
pop
xor
insl
repz
mov
ljmp
dec
clc
aas
add
ss
shll
cmp
or
sbb
sbb
into
mov
or
rcll
movsb
and
mov
jl
call
iret
xlat
dec
cmp
jmp
cmpsl
mov
sarl
fisttpl
lods
jg
sbb
mov
mov
jmp
aas
jbe
jecxz
push
imul
ljmp
mov
cmp
in
push
inc
lahf
scas
cmpsl
pop
xchg
int3
imul
cmp
stc
xchg
notl
mov
call
push
sub
sub
fsubrs
add
and
jne
xor
mov
ljmp
lods
outsb
jge
sbb
out
loop
push
int3
cmp
push
xor
fmul
addr16
jmp
mov
sbb
xchg
decb
gs
ret
or
inc
inc
sub
jne
adc
aam
add
mov
cmp
outsl
xchg
lock
push
mov
cld
enter
shll
filds
jl
hlt
push
inc
adcl
sarb
cli
fisubrs
jnp
cltd
inc
movsb
addb
xchg
sbb
fsts
push
sbb
ret
jl
sbb
jle
js
xor
mov
adc
shrb
dec
jne
out
cmp
hlt
fnsave
jge
std
xor
bound
fsubr
out
and
jnp
pop
lds
mov
mov
lods
call
and
mov
and
dec
mov
inc
into
sbb
add
repnz
mov
iret
or
push
pushf
and
scas
lds
jle
sahf
addr16
add
or
repz
dec
inc
jecxz
lds
mov
stos
cmp
adc
sbbl
bound
cmp
xchg
data16
outsb
in
cli
scas
dec
shrl
subl
scas
pushf
cmp
pushf
pop
dec
and
mov
scas
push
lods
jb
sbb
int3
negb
or
inc
es
push
jl
add
mov
cwtl
mov
jecxz
and
mov
mov
push
cmp
fdivrl
out
lret
das
mov
dec
stc
imul
adc
js
or
shl
push
mov
cwtl
mov
imul
fnstenv
mov
jl
mov
mov
test
fstpt
cmpsb
popa
inc
test
xchg
in
cmp
fisubs
ss
jne
lret
jg
sub
adcb
leave
dec
and
jbe
cltd
xor
xchg
roll
in
insl
mov
fmul
int
pop
lods
push
inc
mov
into
xchg
ja
dec
mov
add
imul
add
out
rolb
dec
mov
fs
jecxz
mov
icebp
add
das
les
and
sub
and
xorb
aas
mov
push
scas
filds
cmp
insb
fwait
inc
mov
lods
cltd
add
push
leave
pop
scas
mov
in
push
fdivrl
rclb
iret
popa
push
icebp
xor
movsb
mov
jae
xchg
push
enter
and
push
cmp
fsts
mov
and
dec
outsb
pushf
inc
int3
pop
inc
dec
nop
mov
and
fwait
sbbl
mov
or
stos
cwtl
jecxz
sub
jmp
fisubl
jmp
in
cld
scas
into
fisttps
xor
jl
jns
xchg
jbe
sub
div
xchg
xchg
inc
cmp
or
sbbl
jmp
and
sbb
sub
add
dec
add
xlat
xchg
pop
push
xchg
push
mov
cmp
adc
iret
out
je
jne
data16
lret
inc
movsb
aaa
lretw
in
not
imul
pop
jae
jo
rolb
test
lods
sar
xorb
inc
fisttps
iret
bound
lahf
push
mov
incl
jle
in
add
add
imul
sub
ss
shlb
add
mov
mov
jbe
scas
xchg
xor
cmp
stos
sub
loopne
pop
push
jge
aas
mov
inc
xor
arpl
and
push
add
jo
popf
lock
in
scas
lcall
gs
dec
xor
add
call
mov
sbb
fcompl
inc
pop
ficompl
insl
mov
fmuls
in
mov
sub
pop
std
aad
cmp
sbb
rorb
mov
cmp
test
adc
out
aad
sbb
mov
test
adc
inc
add
pusha
mov
out
adc
cmp
insb
mov
mov
cli
sahf
mov
in
aam
popa
sbb
and
pop
sbb
push
testb
popa
subb
fnsave
xor
int3
or
lahf
push
icebp
enter
sub
sahf
xchg
inc
aas
jnp
sbb
sbb
inc
cld
mov
cmp
stos
cmp
mov
sub
aad
xchg
sbb
std
sub
std
test
xchg
pop
gs
mov
insb
jmp
lock
jbe
outsl
inc
mov
jle
and
fidivl
insb
cmp
sub
dec
arpl
movb
pop
sub
xchg
data16
outsl
sbb
arpl
fwait
es
fldl
lcall
cmp
shlb
or
into
in
mov
and
pop
test
cltd
mov
lea
pop
xchg
mov
incl
fstl
repnz
in
fldl
mov
cld
scas
xchg
scas
dec
js
ljmp
lds
arpl
ret
pop
out
adc
xor
dec
xchg
mov
loop
pushf
xor
js
xor
ds
mov
xchg
mov
outsb
jecxz
loope
gs
mov
movsl
mov
sub
das
in
es
pop
mov
shrb
gs
mov
sbb
in
add
mov
cmp
test
cli
fistpl
add
dec
xchg
lock
adc
inc
ljmp
add
mov
cli
pop
negb
mov
inc
out
sbb
adc
pusha
mov
jl
sbb
pop
call
dec
std
sub
ror
mov
test
mov
sarl
add
setns
decl
dec
xchg
jecxz
addr16
push
inc
inc
shrb
add
ds
jno
jl
inc
pop
add
mov
stos
cld
mov
fnstsw
pop
inc
mov
lcall
or
sahf
or
push
fidivrl
out
jmp
out
fwait
pop
push
xchg
stc
ja
movl
rolb
loop
movsb
sub
out
cwtl
jb
cmp
push
popf
int3
mov
out
xor
pop
call
mov
fldenv
lahf
dec
shlb
sbbb
push
jl
aaa
jecxz
shrl
mov
dec
stos
or
sub
rorb
pop
jo
out
xor
add
mov
lea
inc
std
andl
mov
sahf
xor
add
mov
jge
daa
nop
cmpsb
push
mov
stc
jo
adc
dec
hlt
sarb
add
test
or
mov
and
pop
mov
loope
insb
ss
mov
cld
sbb
push
in
dec
dec
push
test
loope
out
loopne
inc
mov
imul
mov
pop
leave
mov
dec
fcmove
sbb
leave
push
stos
loope
adc
pop
pop
iret
stos
out
xor
inc
mov
push
xchg
sarl
mov
cmp
aad
outsb
mov
sub
xchg
arpl
add
add
mov
daa
sub
into
scas
in
aam
hlt
xor
xor
cmp
fstsw
push
dec
int3
fcom
js
jg
xor
das
sub
dec
pop
je
jno
out
push
lret
jmp
push
fisttpl
scas
popa
xchg
sarb
adc
add
sbb
pop
add
in
testl
adc
xchg
lds
rclb
push
mov
adc
fnsave
ret
pop
mov
sar
in
cli
or
scas
pushl
les
insb
inc
test
mov
imul
xchg
cmp
fnstsw
push
inc
cmc
fwait
rolb
mov
push
cmpb
and
mov
stos
sahf
mov
mov
inc
push
mov
mov
mov
mov
in
cmpsl
sub
mov
push
mov
ds
mov
cmp
outsl
add
jp
jl
xchg
test
mov
lret
pop
addr16
stos
in
dec
jno
adc
push
imul
gs
add
pop
mov
jb
stos
mov
int3
xor
sub
call
pop
xor
cwtl
dec
ret
mov
mov
orb
xchg
mov
jae
imul
ret
ljmp
push
loop
sbb
mov
adc
inc
faddp
cwtl
jge
fadd
push
repz
je
sub
jecxz
xchg
dec
loop
loopne
xchg
call
ja
pop
or
leave
cmp
data16
xor
data16
sbb
xorb
call
mov
das
inc
add
imul
ret
sub
inc
sbb
add
pushf
fldl
out
out
push
lds
mov
testb
mov
lahf
aam
rclb
xchg
movsl
xor
out
loopne
adc
out
mov
xchg
jne
dec
pop
mov
ffreep
out
fidivrs
mov
inc
mov
xchg
xchg
jno
mov
xchg
stc
jns
mov
add
adc
pop
jbe
rcrb
push
test
cld
mov
push
xor
js
mov
xchg
push
jge
fistpll
jl
out
add
xchg
mov
jbe
mov
and
scas
pushf
fmuls
xchg
add
sbb
xchg
xchg
mov
mov
rdtsc
cmp
ds
sahf
xchg
cmp
not
sbb
and
xlat
in
je
sbb
xor
mov
loopne
stc
cmp
mov
xchg
roll
mov
cmp
out
scas
jle
and
pop
sub
mov
hlt
ret
lret
mov
test
mov
cli
sbb
sbb
dec
pop
jmp
cwtl
inc
iret
outsb
add
mov
enter
lahf
adc
mov
aaa
js
std
leave
insl
cmp
testb
mov
jp
fstpt
loop
or
rcll
dec
fidivl
mov
and
jmp
inc
imul
cli
pop
xor
inc
inc
dec
push
cs
jg
icebp
push
xor
inc
push
push
or
enter
clc
cmp
int
movsb
aas
dec
mov
js
or
add
push
cs
dec
lods
in
andl
sub
cmpsb
push
and
fpatan
add
pop
lret
dec
out
out
mov
fcoml
cmp
pushf
sahf
adc
je
sub
stos
or
fstpt
and
loope
das
jmp
icebp
or
aas
cld
ljmpw
push
inc
push
mov
adc
rol
andb
jo
hlt
ja
sbb
jns
movsb
xor
pusha
xor
shlb
mov
insb
adc
sub
xchg
sub
sahf
xlat
mov
sbb
add
xchg
add
xor
dec
es
mov
es
pushf
into
aas
and
mov
cmp
insl
shl
mov
inc
push
push
dec
and
adc
rcll
jns
ss
ds
mov
mov
and
jmp
pop
pop
addr16
jg
jg
jnp
mov
fiadds
in
pop
jne
les
pop
test
js
mov
mov
cmp
cmp
les
aas
in
scas
inc
jb
dec
push
add
sbb
sub
dec
jge
fcompl
xchg
mov
xchg
push
mov
ror
add
sbb
sbb
scas
test
cmp
loopne
int3
fildl
jmp
inc
lcall
mov
inc
push
mov
and
dec
movsl
xor
pop
cld
mov
ljmp
fdivrp
cltd
andb
nopl
in
sub
or
insb
inc
rorl
add
sub
mov
jbe
and
into
call
pop
filds
inc
xchg
shll
mov
and
mov
loopne
subb
je
xchg
inc
and
daa
popa
jnp
fistpl
es
out
mov
rcrb
jmp
xor
mov
imul
pop
add
cmp
test
adc
in
test
mov
pop
xor
jge
adc
sub
stos
mov
add
mov
sti
jle
pushf
pop
sub
out
in
push
repnz
dec
sahf
sbb
addr16
push
fsub
xor
js
push
stos
call
out
dec
adc
push
out
out
rol
add
imul
sub
iret
push
sbb
jne
pop
mov
filds
cli
aad
out
dec
popa
outsl
sub
and
xchg
lea
bound
add
int3
mov
and
lods
sti
lds
pop
mov
cmp
jp
mov
fnsave
or
xchg
mov
xchg
jmp
sbb
aas
popf
imul
add
ret
push
test
jo
cmc
pop
adc
xchg
arpl
sahf
push
dec
data16
mov
push
xor
dec
pop
mov
cmp
setne
sbb
dec
dec
sub
fdiv
and
cwtl
test
in
popa
sbb
loope
add
cld
or
mov
cli
les
stos
jge
hlt
adc
stc
jle
mov
sub
sti
lods
or
gs
push
xchg
push
cltd
sbb
test
push
cli
movsb
fistps
and
push
cmp
leave
xchg
or
ss
int3
imul
jbe
inc
leave
mov
adc
cmp
cs
mov
mov
cmpl
inc
mov
sbb
jl
lods
stos
sub
movsb
jle
lock
loopne
pop
or
xor
mov
out
loope
aam
mov
and
xchg
xrelease
push
decl
das
cltd
sbb
repz
fsubrl
lret
dec
xchg
mov
pop
pop
pop
testl
imul
rorb
loopne
in
push
mov
or
rcl
xchg
test
or
in
adc
lods
lss
jecxz
push
pop
xor
mov
out
mov
aas
fsub
adc
out
xor
repz
add
cltd
outsb
test
jmp
sti
adc
out
pop
into
dec
dec
xor
mov
outsl
push
rorb
shrl
mov
ret
pop
and
in
in
fwait
scas
dec
jecxz
push
or
mov
and
sub
ja
fidivrs
sbb
out
jnp
push
dec
xor
add
xchg
mov
in
cmp
mov
shl
xchg
lcall
or
roll
push
mov
jg
fwait
cmp
dec
int
std
ljmp
mov
add
push
fs
lds
andb
sbb
push
jl
fnsave
or
aam
mov
mov
push
inc
dec
fdivr
jno
cltd
js
mov
pop
jae
outsl
mov
push
dec
xor
test
loope
push
mov
inc
and
mov
mov
stos
adc
lret
xchg
fsubrl
loopne
mov
fidivrl
pushf
jbe
push
cmpsb
jnp
or
xchg
imul
mov
mov
imul
push
fwait
and
sub
pop
cmp
cmpsl
orb
push
push
cmp
dec
fstpl
inc
outsb
push
adc
mov
add
ds
pop
pop
loope
mov
add
icebp
xchg
jmp
xchg
jb
dec
cld
mov
and
popa
icebp
sub
test
nop
hlt
sbb
jnp
popf
sub
pop
call
icebp
in
xor
jg
push
xchg
cmp
lock
popa
loope
in
push
std
jg
dec
mov
add
mov
divl
mov
pop
cmp
cld
in
push
das
sti
into
dec
outsl
xlat
adcl
fwait
cmpsl
inc
es
jns
adc
mov
into
pop
ja
pop
rcrl
cld
gs
int3
stc
and
in
pop
out
cmp
push
sbb
repnz
mov
mov
or
sbb
dec
fmuls
mov
cmp
bound
lret
mov
jae
out
js
hlt
pop
orl
push
adc
push
pop
add
mov
pop
aas
xchg
cwtl
inc
fnstsw
and
ljmp
mov
push
ja
xchg
aaa
sbb
add
clc
sub
jge
je
sub
fwait
ss
inc
pushf
daa
cmp
add
scas
js
insl
fnsave
push
cld
lock
or
out
xor
or
std
loopne
xor
push
cli
sub
loop
aad
testl
sti
movsl
mov
mov
inc
add
ret
cmp
lret
lahf
sub
or
jg
or
cmpsb
pop
and
mov
mov
adc
and
int3
fcomp
cmpsl
xlat
out
mov
and
adc
sahf
lock
jmp
or
sbb
sti
jge
iret
add
in
lret
loop
mov
or
iret
sarb
inc
mov
and
in
sub
mov
lret
mov
fs
cmp
sti
cmp
sahf
push
nop
not
push
test
adc
mov
loope
in
pop
push
fistps
dec
ljmp
jmp
mov
inc
repz
clc
jg
sbb
sbb
xor
adc
push
xor
icebp
push
out
leave
cmc
mov
pop
arpl
adc
popa
lahf
sahf
fmuls
enter
and
mov
jecxz
lahf
idiv
out
leave
bound
in
fwait
mov
mov
inc
movl
lret
scas
mov
jmp
jecxz
daa
ud0
add
fwait
pop
popf
push
jns
out
into
sbb
mov
mov
cmc
cmpb
dec
loop
and
and
jbe
clc
fildll
icebp
inc
fildll
pop
popf
in
sub
or
jne
ror
xchg
cmp
mov
mov
mov
push
pop
cmp
lea
push
test
jnp
xor
push
mov
cld
dec
ret
xchg
push
mov
mov
and
xor
pop
lahf
pop
mov
jge
push
xor
flds
jnp
arpl
out
lods
iret
push
lea
sbb
lods
adc
inc
cmp
insl
fiadds
data16
mov
stos
push
add
imul
ret
out
jge
add
sarl
lock
frstor
dec
fsubr
scas
fildll
cmp
adc
fnsave
outsb
enter
fwait
push
sub
in
push
xchg
lcall
sahf
stos
out
addr16
lret
push
xor
mov
jbe
pop
mov
dec
mov
movsl
loopne
push
divb
rcrb
and
in
cs
rolb
xchg
mov
cmp
jp
add
push
movsb
cmp
pop
rcrl
cld
jg
cwtl
aas
cmp
xchg
push
std
xchg
aaa
pop
push
and
rorl
jle
lea
je
cmp
dec
sbb
shr
sar
jl
or
rcll
test
les
xlat
test
imul
cltd
push
dec
xchg
out
pop
mov
push
sub
jo
push
cmp
adc
cmpb
fbld
adc
pop
push
jmp
dec
je
mov
mov
sbb
jg
js
rcrb
add
shr
push
mov
inc
paddd
mov
jo
popl
mov
push
aas
mov
mov
push
into
mov
lods
lock
add
shr
lock
push
xor
mov
pop
and
add
call
dec
in
vshufps
mov
fabs
xchg
mov
push
rcr
ja
add
fimull
pop
shll
sti
mov
dec
pop
adc
pop
cld
rcrb
xchg
call
ljmp
leave
jmp
dec
in
into
push
xchg
or
es
dec
jnp
jge
xor
adc
inc
std
adc
cmp
mov
xchg
mov
push
push
push
cs
mov
jl
dec
push
iret
subl
daa
push
adcl
adc
jle
out
pop
jecxz
and
push
lcall
stos
outsl
gs
pop
mov
sub
shrl
insl
add
mov
sbb
jl
test
jecxz
inc
in
repz
jno
das
sbb
lahf
pop
and
jnp
inc
push
jne
cmp
loop
ss
xor
mov
xor
ret
jg
ja
sbb
push
dec
sbb
in
or
popa
movsl
fimuls
push
je
mov
and
test
jae
push
stc
jecxz
lds
jo
loope
rorl
out
enter
or
mov
aaa
rolb
fstp
cmp
dec
fisubs
adc
and
xchg
icebp
das
sbb
or
movsb
pop
cmp
fs
sub
xchg
inc
xor
out
xlat
lahf
mulb
jmp
in
jecxz
mov
test
xor
in
sbb
popf
or
or
idivb
or
mov
xchg
pop
cs
dec
push
lret
lods
test
or
cltd
jle
xor
incb
xor
jge
lret
cmp
lahf
sub
cmp
ret
mov
pop
hlt
nop
mov
lahf
adc
xchg
insb
js
out
addl
cmp
and
pop
sub
inc
cmpb
call
pop
push
daa
sub
mov
leave
into
dec
push
lret
insb
mov
xchg
loopne
push
mov
bound
lcall
push
sub
mov
mov
aaa
pop
insl
loop
aad
push
jp
sub
cmpsb
movb
sahf
sbb
or
xchg
mov
inc
imull
cmp
pusha
push
mov
adc
das
mov
mov
jno
ffree
pop
rcll
mov
mov
ss
lret
lret
mov
mov
lcall
gs
iret
mov
xor
cmp
and
mov
sahf
xor
add
xchg
bound
mov
xor
test
fwait
sub
xor
pop
fldl
repnz
js
cli
outsl
adc
pop
imul
adc
ljmp
xor
popa
pop
sarl
lahf
fistps
popa
sbb
ret
jl
sti
lret
xlat
pushl
imul
scas
ss
xchg
aam
pop
mov
push
pop
les
mov
mov
movb
sub
imul
hlt
mov
inc
mov
jae
aam
dec
xchg
aaa
addl
cmp
test
cmp
adc
dec
adc
pusha
push
adc
mov
dec
in
mov
mov
or
mov
sub
lods
push
adc
ret
xor
jmp
mov
shr
int
cwtl
cmc
and
add
stc
mov
jb
mov
out
aas
test
cmc
ljmp
add
adc
dec
fs
adc
imul
or
fbstp
push
mov
cwtl
jns
lock
mov
shrb
ljmp
outsl
lcall
push
stc
pop
cli
adc
les
adc
std
push
mov
aaa
inc
lret
lods
inc
scas
loop
pop
and
dec
push
adc
repz
jp
cmp
push
std
mov
xchg
jae
pop
mov
mov
adc
mov
lods
push
mov
jle
add
out
or
pop
and
sbb
cld
cmpsl
mov
sub
sub
sub
and
iret
test
into
addr16
orb
xchg
call
in
xor
int3
sub
xchg
mov
aaa
jmp
mov
arpl
sahf
mov
lahf
jb
decl
or
jns
imul
xor
jmp
cltd
pop
jns
sub
je
or
sti
in
imulb
dec
xor
dec
push
mov
jae
popf
in
mov
ss
repnz
das
js
outsl
adc
cltd
jbe
das
mov
or
xor
and
pop
xchg
js
stc
and
pop
icebp
push
or
nop
sbb
push
push
pop
add
fiadds
mov
rol
sbb
jne
pop
adc
repz
mov
cmpsl
pop
cmp
adc
outsb
in
sub
fistpll
xchg
xor
xchg
jp
shl
mov
xor
mov
or
es
imul
idivl
dec
sbbb
inc
jp
xor
or
and
adc
iret
xchg
mov
sub
or
and
jno
mov
movsl
cmpsb
outsl
repnz
jl
lock
pop
dec
fistps
xor
sbb
arpl
add
shr
and
mov
cs
test
jno
mov
pop
mov
jo
out
mov
out
mov
fs
hlt
add
pop
add
xlat
xor
stos
insl
insb
icebp
lock
mov
sbb
pop
jnp
fmuls
int3
cmc
xchg
push
cld
ja
jecxz
movsb
pop
test
sahf
popf
out
or
dec
or
aam
ljmp
lea
scas
dec
cld
repnz
xor
jnp
and
in
scas
in
dec
push
mov
push
negb
push
xor
xchg
mov
ffree
lea
inc
lret
or
jae
in
aad
movsl
add
cltd
mov
push
lock
add
mov
popf
dec
dec
cmp
xor
insl
movb
cmp
adc
mov
lds
hlt
pop
xorb
xor
sahf
pop
repz
push
pop
dec
add
movsb
lock
mov
dec
imul
cmpsb
jmp
pop
aas
and
xor
test
negl
imul
test
sbb
fimuls
data16
cwtl
pop
and
cmpsb
mov
stc
sahf
jg
xor
out
sbb
into
movsb
iret
dec
add
mov
out
mov
loop
mov
dec
mov
sbb
aad
xlat
mov
loopne
jnp
mov
xor
adc
cwtl
int
enter
pop
or
in
or
scas
in
rolb
outsb
xor
jg
lock
mov
mov
ret
insl
dec
cmp
in
fcoms
callw
idivl
push
daa
gs
mov
sub
dec
jp
add
clc
and
inc
xchg
push
iret
lock
push
movsl
pop
push
pop
mov
stos
and
jge
aad
mov
pop
ret
popa
stos
out
dec
test
ficompl
js
andb
mov
into
fldenv
mov
jnp
adc
out
jmp
cmpsl
cs
mov
dec
pop
mov
ljmp
popa
xchg
jnp
mov
loopne
jg
sub
add
sbb
cmovs
dec
inc
xor
rcl
fsubp
lods
sub
pusha
dec
les
push
or
shl
sbb
xchg
add
mov
dec
hlt
push
dec
dec
push
stc
ret
sbb
xor
inc
daa
cmp
clc
mov
ss
push
call
add
sbb
xor
in
data16
dec
and
mov
pop
cld
mov
mov
decb
xchg
lds
icebp
repnz
icebp
sub
fmuls
stc
cmp
dec
inc
inc
mov
pop
test
loope
nop
or
mov
inc
cli
ficompl
repz
shlb
dec
pop
or
fisttpl
into
mov
inc
xor
mov
dec
sbb
xor
ja
mov
sbb
xchg
xor
push
loope
inc
xchg
jle
orb
dec
sub
imul
xchg
mov
into
loope
notl
aam
mov
hlt
xchg
mov
imul
xchg
cmp
and
stos
cmpsl
add
jb
jbe
fistps
push
adc
cltd
push
cltd
ss
xor
sbb
fdivrp
sub
push
add
mov
decl
scas
cmp
in
out
jle
fcomp
mov
xchg
jl
add
adc
mov
rol
jl
lret
fcmove
test
dec
sub
mov
movsb
and
js
push
jo
fadd
inc
aas
dec
push
push
xor
fbstp
mov
addb
insb
js
call
scas
adc
mov
call
imul
xchg
jno
mov
mov
lock
cmpsl
mov
ds
repz
sahf
adc
or
loop
mov
cmp
in
mov
cmpl
push
ss
sbb
ret
add
popf
push
cmpsl
lods
sahf
cli
fwait
cmp
cmp
clc
imul
sbb
scas
lea
mov
lds
sbb
std
add
push
stos
aam
xchg
repz
lret
add
fs
daa
dec
mov
sahf
sarl
mov
xchg
insl
pop
cmpsl
lods
adc
xor
aam
cmp
dec
mov
ret
js
inc
enter
and
out
pop
and
dec
lret
rol
stos
mov
push
push
adc
push
dec
jecxz
xchg
outsb
popf
push
repnz
mov
jecxz
repnz
les
call
stos
jl
mov
addr16
mov
nop
lock
jecxz
aaa
mov
inc
inc
fdivrl
lret
push
je
push
iret
xchg
jo
mov
inc
repz
push
adc
xor
and
rorl
xor
scas
sbb
dec
push
loopne
pop
into
mov
das
push
sti
cmp
push
dec
rcrb
fimull
push
test
add
push
jo
jne
insl
pop
jnp
and
xchg
xor
push
aam
std
outsl
mov
popa
mov
mov
addb
pop
push
ljmp
adc
movsb
mov
xchg
loop
inc
mov
cmp
sbb
sahf
ja
fs
pushf
callw
inc
or
inc
xchg
mov
ss
push
and
mov
mov
jecxz
sbb
xor
add
sub
or
xor
sbb
sahf
aam
mov
or
mov
daa
in
iret
push
loop
cmp
mov
push
mov
or
xor
orb
in
roll
add
adc
dec
cld
lret
adc
sbb
mov
shl
into
dec
das
lods
mov
mov
pop
inc
adc
push
adc
stos
add
aad
pop
jo
mov
gs
push
adc
cld
xor
out
ds
mov
shr
mov
paddsb
fnstcw
xor
adc
xor
insb
movsl
cmp
ret
inc
or
int3
dec
adc
iret
das
push
rorl
cli
popf
push
xor
mov
adc
jne
sub
das
andl
and
fisttpll
pop
int
cmp
xor
pop
int3
aad
shlb
icebp
cltd
mov
mov
aad
cmp
pop
in
les
dec
iret
lock
test
pop
lret
cmp
iret
rorb
add
lea
jb
mov
shll
pop
aaa
jno
adc
pop
push
xchg
ja
jo
aas
jg
std
ror
aad
push
pop
cwtl
push
mov
daa
cli
xchg
rcrb
aad
jp
je
dec
xor
dec
out
dec
pop
pop
adc
mov
je
pop
cmp
sbb
out
sbb
aaa
jnp
jle
in
dec
in
imul
movsb
cmpsl
inc
gs
lcall
dec
iret
aad
add
cmpsb
lock
fsubp
outsl
mov
imul
das
in
mov
sbbb
in
stc
ficompl
mov
fimull
mov
pop
les
psubq
mov
sub
xchg
jge
pop
loopne
mov
mov
daa
adc
pop
dec
sbb
sub
lret
popf
sbb
push
ljmp
inc
in
enter
pop
mov
rcll
imul
jns
ficoms
jge
pop
push
and
adc
icebp
inc
and
xorl
stos
jmp
div
or
dec
rorl
cld
sahf
je
jae
jle
cmc
cmpsl
mov
xchg
mov
pop
push
outsb
and
inc
icebp
xchg
pusha
stos
xchg
clc
insb
sub
lret
mov
lods
mov
xacquire
je
push
inc
add
jecxz
fwait
imul
fldcw
and
scas
jae
sbb
jae
jb
popf
roll
pop
mov
push
pop
pop
push
mov
mov
mov
jp
add
jmp
daa
mov
sub
jecxz
mov
xchg
scas
mov
push
cmpsl
and
inc
push
or
jns
mov
jle
aad
xchg
xchg
mov
clc
sbb
mov
fsubl
adc
xor
lret
lock
mov
int3
int3
mov
or
push
xor
fstps
sahf
and
scas
push
inc
mul
mov
daa
outsl
ja
in
cwtl
mov
mov
push
fs
repnz
fwait
mov
jb
and
xor
xchg
repz
cld
push
call
mov
in
sbbb
sbb
dec
imul
aas
mov
mov
push
add
ret
jle
mov
inc
cli
adcl
cmpsl
pop
and
loope
add
pop
adc
push
mov
loopne
stos
and
rcrb
pop
scas
sbb
push
cmp
pop
lods
testb
dec
xchg
inc
inc
das
test
sub
pushf
xchg
adc
ja
cmp
push
ds
fnstenv
cmpsl
std
imul
lret
cltd
xor
out
dec
cli
fwait
scas
test
pushf
lods
not
in
and
lret
ret
stos
lods
mull
repz
mov
jb
mov
sbb
iret
andb
sub
rcrb
push
jb
rcr
mov
ds
mov
les
adc
sub
cmp
inc
pop
test
xor
jo
mov
dec
xchg
cmp
jae
leave
mov
addl
les
pop
cwtl
add
pop
lds
add
dec
vmwrite
jmp
adc
fdivl
inc
imul
and
int3
imul
outsb
mov
cwtl
xchg
iret
xor
and
inc
lret
push
and
and
fisubs
gs
sbb
fsts
cmp
enter
jmp
mov
mov
push
cmp
ficompl
subb
popf
dec
push
jno
sub
mov
push
in
arpl
pop
imul
dec
dec
das
fs
movsl
inc
cmc
xchg
add
shlb
inc
dec
mov
repnz
in
int3
gs
insl
xor
mov
les
sti
xchg
cmpsl
cmp
pop
adc
dec
push
bndstx
add
push
push
in
dec
sub
and
xchg
mov
repnz
cmp
and
mov
add
ljmp
fucomp
or
cld
jle
popa
dec
fiadds
aad
call
out
outsl
cmp
push
bound
ficoml
lss
xlat
adc
in
pop
pop
mov
out
popa
inc
cmp
aad
cmp
mov
jg
aas
aaa
scas
mov
mov
and
sbb
daa
dec
pop
sub
jmp
jae
sahf
cmp
or
or
sub
aam
loope
pop
and
sub
insl
mov
flds
rcll
mov
jns
lcall
add
nop
stos
sarl
xor
or
xchg
xchg
xchg
test
mov
mov
inc
pop
ljmp
jo
loopne
inc
dec
xlat
call
mov
adc
icebp
mov
cmc
inc
lds
cmp
xchg
into
adc
in
and
sbb
fildll
int3
fcoml
xchg
popf
cmp
repnz
sbb
pop
jno
mov
and
mov
inc
movsl
cmp
inc
pop
stc
aam
adc
out
and
loopne
mov
call
into
ret
aad
test
sbb
cmp
jle
add
mov
push
in
les
mov
popa
mov
mov
movsb
xor
push
scas
jb
aas
int3
push
inc
or
in
loop
jae
pusha
es
push
enter
pop
sbb
jae
addl
fst
arpl
sub
pushf
cs
cmp
xlat
xchg
arpl
ret
aas
pop
out
cmp
ja
rep
xor
xchg
movsb
push
inc
into
ret
jge
push
pop
jo
xchg
sub
scas
aas
xor
stos
sarl
xlat
push
repnz
pop
jp
add
movsb
adc
sbb
mov
test
mov
xchg
out
sets
dec
mov
sahf
sub
xlat
in
jne
fs
movsl
adc
test
sahf
add
push
pop
jo
ret
aaa
ljmp
mov
aas
xorl
xor
jge
outsl
jp
and
ja
ss
jecxz
gs
pop
shl
data16
xorl
dec
mov
lretw
cmp
lea
shrb
test
data16
cli
cli
jle
inc
iret
adc
jle
inc
out
xchg
adcb
push
test
push
out
mov
xchg
inc
faddl
in
jg
cmp
stos
js
xor
and
dec
adc
dec
dec
inc
ja
mov
int
nop
mov
and
decl
popa
xchg
and
andb
xlat
imul
divl
adc
add
dec
jnp
fimuls
cmp
aas
insl
inc
out
stc
in
jne
push
jmp
pop
popf
imul
push
push
shll
sub
in
sarl
cli
pop
stos
dec
push
push
mov
in
push
int3
ret
das
cli
sar
or
sbb
dec
in
cmp
jmp
xchg
divb
ds
xlat
jnp
test
push
cltd
jbe
adc
or
inc
push
adc
cli
sbb
xchg
cmp
cltd
or
pop
push
xor
jno
mov
aad
stc
cmp
dec
inc
mov
dec
lret
mov
jecxz
xchg
rorb
push
add
out
sub
sub
sub
pop
xor
pop
add
cmp
cmp
push
xor
icebp
outsl
mov
rolb
mov
cld
xchg
jecxz
scas
in
sahf
bound
divb
call
out
lock
add
ds
lret
popa
jb
fs
mov
mov
dec
dec
adc
jnp
lods
clc
fiadds
lods
mov
cmp
sbb
pop
mov
leave
sahf
push
test
enter
inc
cmp
push
cmp
xor
mov
mov
mov
fildll
in
sti
pop
addb
out
sub
push
jl
add
fisttpll
inc
outsl
das
add
aas
or
jae
ljmp
cmpsl
dec
sbb
lcall
mov
insl
adc
loopne
inc
fmull
pop
push
sbb
ja,pt
movsl
loope
stos
pop
es
iret
inc
dec
insb
out
mov
je
arpl
add
pop
sbb
movsl
add
cs
xchg
xchg
ret
std
dec
inc
loop
test
jg
or
sub
ss
insl
call
into
adc
push
enter
das
and
adc
xor
sbb
jg
sub
gs
jno
xor
inc
jo
mov
pop
addb
mov
mov
xchg
sbb
jns
clc
adc
dec
pop
lods
push
lret
xorb
dec
int3
lea
icebp
mov
bnd
and
or
and
adc
inc
insl
pusha
bound
mov
arpl
adc
adc
jp
and
fisubrl
ret
pop
mov
mov
pop
push
xchg
jmp
mov
cltd
fwait
gs
xor
sub
xchg
dec
std
fisubrs
inc
in
in
repnz
push
and
adc
aaa
divb
rorl
jbe
mov
adc
scas
jl
pop
mov
insb
xor
xor
xorl
push
lret
dec
cltd
cmpsb
arpl
push
dec
paddw
addr16
leave
mov
clc
xlat
jns
out
xor
cmp
fdivs
sub
stos
jno
out
pushf
in
push
jge
pop
pop
jmp
pop
dec
xor
cmpsb
outsl
sub
jmp
idivb
dec
lret
nop
imul
xor
jae
je
insb
inc
or
jno
adc
lock
addl
mov
and
xor
arpl
imul
fcmovbe
dec
nop
push
and
pop
js
daa
fdivrl
mov
add
loop
dec
inc
fimuls
test
movsl
test
or
mov
cs
insl
cmpl
jns
mov
push
or
jmp
adc
daa
sub
daa
pop
fsub
xor
mov
int
dec
adc
sub
arpl
or
jg
ljmp
cmp
sub
mov
pop
mov
and
jno
jg
or
mov
mov
pop
les
or
gs
push
mov
gs
inc
out
ja
dec
dec
shrb
aam
movsl
sub
pop
repz
lods
imul
test
jg
pop
fidivrs
sbb
aaa
and
movsl
cmp
push
sub
sarl
push
sub
sbb
mov
lret
adc
hlt
movsl
push
xchg
adc
sub
mov
shlb
roll
scas
push
frstor
dec
pop
mov
iret
popa
insl
jg
cmc
push
add
insb
cmp
orl
sub
rolb
gs
cmpsl
xchg
movsl
in
call
xor
fs
dec
lret
mov
mov
cmpsb
std
mov
movsb
mov
inc
pop
mov
movsb
in
sarb
adcb
adc
pop
dec
shll
xchg
in
arpl
push
fiadds
jb
pop
xchg
push
mov
push
lahf
xor
popa
mov
jl
les
push
push
movsb
cmp
repz
xchg
xor
lock
sbbl
sti
lods
lahf
sbb
mov
pusha
push
aad
aas
cmp
fwait
mov
and
int3
pusha
xchg
dec
loop
sbb
pop
or
sbb
rcrl
push
sbb
aam
add
lahf
add
enter
mov
inc
xlat
dec
xchg
dec
pop
cmp
and
pop
repz
mov
aad
pop
add
insl
mov
insl
test
sub
insb
repnz
xchg
bswap
mov
orb
int
jecxz
xchg
mov
sbb
and
data16
out
jae
bswap
jle
movsl
xor
js
arpl
rcrl
adcl
xchg
add
ljmp
mov
xchg
or
adc
addr16
fwait
lret
fistpl
xor
or
or
mov
or
sub
adc
push
xchg
stos
or
int
fstpl
jo
fdivrs
repnz
movsl
arpl
dec
ljmp
push
mov
and
test
mov
outsl
inc
lahf
pop
imulb
jo
sbb
jne
fcompl
mov
push
add
inc
or
pop
enter
mov
xor
test
mov
fildl
cld
jne
sbb
add
mov
fchs
xchg
xchg
ss
gs
leave
cmovge
xchg
jecxz
mov
arpl
lods
shll
in
jae
loopne
jge
setae
add
nop
pop
inc
cltd
stos
movsl
and
lea
scas
add
imul
arpl
xchg
mov
enter
iret
imul
sub
xlat
dec
xlat
and
dec
and
add
sbb
xor
and
or
test
xchg
xacquire
loop
inc
mov
jmp
lret
cmpsl
shl
adc
hlt
xor
dec
push
fwait
test
mov
xor
cwtl
xchg
or
xor
aad
iret
sub
outsb
pcmpeqd
pop
push
push
fstps
int3
jb
add
int
adc
outsb
outsl
je
push
loopne
dec
dec
insl
loope
mov
test
stos
rcl
adc
mov
int3
fcoml
out
or
and
sub
scas
jnp
aad
mov
mov
push
notl
jns
sti
cmp
aad
ds
push
and
and
ds
cld
cmpsl
push
jne
jge
or
jmp
add
sub
sub
mov
mulb
pop
fmuls
addr16
pop
out
daa
dec
ret
cwtl
adc
pushf
aam
xorl
cmp
jno
inc
jge
or
sbb
dec
shr
addb
jno
outsl
bound
cmpb
pop
subb
add
scas
or
and
xor
pop
mov
push
jo
dec
xchg
cmp
or
sub
lds
add
iret
mov
outsl
dec
add
cltd
or
and
add
mov
add
pop
movsl
mov
lock
imul
or
jnp
int
pop
xor
incb
jno
sub
test
sahf
fcomp
jl
jl
cltd
sbb
inc
jb
sbb
aaa
loop
dec
rcr
out
imul
jg
icebp
mov
add
fadds
mov
out
lods
dec
popf
cwtl
call
arpl
mov
pop
inc
ss
testl
xor
fmuls
hlt
int
lret
pop
bnd
sbb
sbb
int
mov
inc
rorb
inc
mov
mov
ret
dec
orb
push
xchg
movsb
or
mov
dec
cmp
pop
insl
push
dec
inc
inc
iret
adc
xlat
or
ret
cld
mov
mov
rorl
push
or
scas
js
sbb
mov
fcmovu
jle
mov
mov
fisubrs
adc
test
jo
add
movsb
pushf
mov
loopne
or
inc
jmp
add
out
adc
test
inc
testw
gs
xchg
mov
dec
add
mov
mov
insl
rcll
and
ljmp
push
inc
ljmp
movb
jmp
shll
addr16
sti
fs
fsubs
into
pusha
push
aad
push
xchg
pop
iret
adc
leave
cmp
adc
push
xor
fs
ret
sbb
xchg
xor
pop
roll
xchg
push
add
popf
shl
iret
sub
lret
xor
xchg
fadds
lods
fsubp
aaa
inc
pop
add
push
add
movsb
das
es
or
pop
sub
xor
lds
int3
insb
fisubl
jb
aas
nop
xchg
je
lea
or
adc
mov
fcomi
nop
sbb
adc
pop
pop
push
sbb
lods
xchg
and
repz
lods
mov
xchg
or
xchg
mov
clc
std
pop
add
jbe
jns
aas
sbb
sbb
aaa
cltd
xchg
fwait
and
xor
icebp
or
cmp
jecxz
adc
inc
cmp
pop
cld
aam
addl
imulb
shll
pop
adc
cmpl
shrb
mov
adc
les
rclb
jp
xchg
addr16
jmp
jmp
fadds
adc
hlt
mov
or
bound
fwait
push
jbe
add
dec
rclb
lock
mov
int
and
adc
incb
pop
pop
jl
in
rolb
sub
les
jno
add
in
push
mov
mov
xchg
in
loope
ja
sub
stc
xchg
pop
rcr
or
lret
mov
stos
mov
in
addr16
divl
push
mov
int
in
imul
test
xlat
ja
xor
jb
xor
cs
in
pop
xlat
adc
test
inc
jecxz
lcall
lret
and
dec
jmp
dec
loope
mov
rclb
jb
pop
out
inc
cmpsl
mov
sahf
xor
and
inc
mov
out
and
dec
ljmp
mov
je
mov
adc
sbb
scas
mov
je
adc
popf
inc
dec
mov
subl
jbe
enter
cs
mov
dec
arpl
jecxz
enter
xchg
add
jmp
mov
mov
xor
pop
mov
inc
lods
cmp
dec
push
lea
cltd
jb
iret
push
mov
stos
ficoms
addr16
push
popf
adc
in
inc
xchg
fwait
dec
sbb
sti
es
repz
xor
inc
sbb
xchg
adcl
fisttpll
pop
dec
dec
jp
lods
stc
test
xor
jae
push
pop
and
cs
stos
in
cmp
iret
pusha
sub
mov
inc
mov
outsl
pop
pop
decb
pop
add
jo
orl
jns
aaa
pushf
push
in
bound
popf
mov
or
jb
shlb
adc
xchg
lods
cmp
nop
ljmp
js
bound
add
cwtl
ret
ja
sbb
das
inc
mov
test
nop
jo
lret
xchg
dec
fwait
cmp
sub
enter
data16
ja
outsl
divl
pop
fs
imul
cmp
mov
bound
cltd
imul
dec
pop
aas
cmp
adc
add
dec
pop
mov
dec
inc
sti
lods
cmp
ret
sub
push
shlb
mov
out
int3
pop
xlat
mov
addr16
add
loope
outsb
mov
outsl
xor
sbb
fsubp
inc
mov
je
mov
in
pushf
pusha
mov
xor
mov
push
out
adc
mov
clc
fisubrs
aad
pop
int3
mov
xchg
xor
jns
ss
xor
sbb
test
shll
movsb
sbb
in
adc
add
add
ret
cmpsb
mov
and
inc
ficomps
xor
cmpsb
lods
lret
aam
dec
repnz
dec
sbb
test
stos
jo
sub
adc
daa
pop
cwtl
mov
jecxz
or
aaa
sahf
inc
adc
mov
shll
xchg
loop
ljmp
inc
fs
jg
and
xchg
cs
scas
xchg
xchg
arpl
sub
pop
int
push
scas
movsl
cmpsb
lock
loop
mov
rcrb
push
xor
jne
mov
nopl
dec
shlb
and
aad
outsl
das
nop
inc
fldenv
sbb
lahf
sbb
sub
cli
xchg
jp
push
fisubl
dec
add
bound
and
jno
jbe
push
cmovns
sbb
jbe
les
or
aaa
sbb
inc
rcl
aad
shlb
repz
push
inc
aam
icebp
cli
jecxz
stc
jbe
sbb
mov
lret
lcall
dec
insb
inc
loope
pop
in
mov
jmp
cwtl
xor
pop
sub
sbb
in
ja
and
xlat
and
loop
out
push
les
sbb
add
push
inc
fstpt
and
aas
insb
out
or
leave
xchg
jne
addr16
pop
xchg
std
push
shlb
push
push
cmp
mov
jnp
push
fwait
jns
xchg
mov
clc
std
and
mov
cmp
mov
push
daa
aad
lcall
loopne
or
loope
aam
int3
mov
jae
adc
inc
mov
cmp
pop
push
sbb
scas
cmp
daa
sbb
xor
jne
shlb
dec
cmp
lcall
cmp
push
add
push
push
cmpsb
ja
mul
mov
cmp
mov
popf
popf
lea
mov
or
xchg
movsb
mov
cwtl
mov
dec
mov
into
adc
jl
cli
xor
lods
push
imul
add
inc
mov
cmp
scas
sahf
cmp
imul
push
pop
lea
or
sbb
shll
mov
lea
aam
mov
and
in
pusha
push
sbb
push
sub
or
mov
cmp
dec
jbe
test
sbb
ds
pusha
cs
shlb
data16
fsubrs
dec
call
out
aad
jle
or
clc
ja
jb
mov
dec
jne
jp
shlb
aam
outsb
mov
aam
icebp
push
movsb
xor
push
sub
roll
jecxz
lods
sti
pop
jae
insl
rcr
mov
call
mov
repz
stc
dec
icebp
and
and
fisubrs
es
sti
lea
lds
leave
mov
faddl
and
jns
mov
andl
pop
inc
mov
stos
ret
and
addl
jnp
dec
adc
mov
jmp
jo
push
cmc
cmp
pop
adc
cmp
sbb
mov
iret
sub
mov
into
iret
movsb
iret
xchg
leave
mov
cltd
xchg
je
or
sahf
mov
lret
lea
rcrb
jbe
ja
sbb
jae
fwait
imul
int3
sbb
aad
sub
mov
and
fcomip
push
sbb
test
insb
cmp
xchg
mov
mov
popf
js
dec
jp
bound
cmp
xchg
sbb
repnz
jnp
sbbl
or
sub
jge
scas
scas
xor
jae
shrd
mov
xlat
sub
xor
mov
and
imul
mov
mov
lods
or
in
lods
mov
loope
push
in
cmp
stos
mov
out
inc
ja
jb
xchg
and
lahf
enter
push
andl
dec
mov
dec
rorl
push
fnsave
dec
fxch
dec
imul
in
sbb
stos
popa
hlt
iret
into
jge
mov
and
cmp
sbb
adc
pop
aam
addr16
shll
mov
lock
cmc
sbb
shll
xchg
cmp
cld
sbb
jno
sbb
xlat
test
jno
ja
pop
fbstp
push
rorb
inc
ljmp
sarb
adc
jmp
les
ret
int3
loop
dec
inc
mulb
mov
hlt
add
pop
adc
adc
enter
mov
movhps
clc
mov
and
int
subb
inc
pusha
ffree
adc
lods
pop
xor
js
fldl
jb
dec
sub
ja
mov
out
or
icebp
and
and
xor
out
push
mov
add
pop
repz
or
push
mov
cmpsb
mov
xor
addl
addw
adc
pop
and
int3
push
xchg
cmp
mov
lret
sbb
sub
sub
insl
fsubl
shrb
insb
mov
or
lods
mov
fldl
push
dec
dec
xorb
cld
call
pop
cmp
inc
hlt
push
push
mov
imull
gs
lcall
mov
pop
xor
and
add
test
das
xor
ret
dec
ret
imul
call
mov
pop
mov
sahf
in
jp
mov
dec
cld
inc
out
lret
outsl
mov
mov
daa
ljmp
push
lret
inc
cwtl
addr16
mov
lods
jecxz
add
bound
clc
test
mov
pusha
or
clc
sbb
push
mov
in
js
push
loop
cltd
mov
idivl
insl
out
push
mov
icebp
and
sbb
aam
nop
dec
aam
mov
inc
push
xor
test
push
lret
and
cwtl
call
push
mov
sub
xor
int
dec
loop
add
jae
sbb
inc
shrb
mov
imul
mov
loop
lret
and
push
xorl
sbb
outsb
push
rcrb
xchg
imul
int
das
mov
inc
sti
std
into
mov
xchg
mov
dec
jecxz
notl
rep
push
lock
or
jge
and
dec
sbb
pop
mov
add
inc
sbb
sarb
mov
sbb
sub
movntps
sar
mov
sbb
adc
jecxz
and
pop
std
cmp
cli
and
sbb
arpl
aad
div
lea
call
ficompl
leave
rolb
fistpl
lret
arpl
push
sub
mov
push
or
push
inc
fistps
loope
jnp
sbb
lods
lret
in
xchg
testb
cmp
pop
jb
mov
stos
mov
fldcw
dec
xor
jg
sub
xchg
outsb
xor
pop
xchg
xchg
mov
jge
mov
cmp
jns
insb
fmul
add
iret
ss
xchg
sahf
inc
mov
ret
sbb
jb
rolb
sarb
push
popa
in
outsb
xchg
ficoms
in
mov
mov
and
scas
rcll
mov
xchg
lcall
nop
fldt
pop
je
xchg
lods
cmpsl
or
loopne
fcom
and
push
mov
lahf
mov
push
mov
xor
add
sbb
xor
xor
das
adc
lds
sub
xchg
loop
js
cli
sbb
fsubr
push
add
lods
push
shlb
inc
insb
iret
sub
and
mov
or
cmp
pusha
int
sti
pop
mov
popa
leave
or
rorl
mov
pop
repnz
mov
sub
repz
cmp
cmc
sub
and
or
push
addl
daa
cmp
imull
sti
lds
addr16
int3
das
filds
or
mov
in
pop
jnp
lahf
or
jbe
out
leave
es
sub
movsb
out
testl
push
mov
fbld
inc
or
neg
mov
jae
inc
sbb
pop
ss
push
xchg
iret
aaa
dec
out
or
out
scas
sti
popa
icebp
inc
iret
push
arpl
aad
xchg
jle
ja
rcl
out
push
adc
mov
cmp
push
adc
push
mov
sub
fsubrs
cmp
add
call
jmp
mov
dec
xor
ja
adc
mov
mov
cwtl
sbbb
add
dec
std
jg
cmpl
iret
fwait
mov
mov
xor
aad
test
pop
pop
push
push
sahf
in
push
jae
and
shll
mov
mov
cltd
mov
xchg
test
std
cmp
cmpb
rol
js
xor
ret
dec
loopne
xchg
cmp
xchg
mov
push
or
je
lock
jl
fsubrs
sbb
in
mov
sbb
jns
xchg
dec
cmp
pop
rorl
pusha
adc
andb
test
fwait
stc
fisubs
or
lock
and
mov
in
scas
mov
dec
push
movsl
test
push
scas
icebp
adc
aaa
in
into
mov
jg
insl
add
add
adc
sbb
push
inc
pop
imul
inc
cmp
jo
and
cmc
push
das
call
jae
in
sub
out
scas
inc
xchg
push
orl
cmpl
test
frstor
mov
pop
aam
fidivl
lock
and
or
lret
adcb
add
daa
aas
js
mov
mov
aam
out
movsb
jmp
shrl
inc
cli
fiaddl
lret
out
jno
mov
pop
adc
fs
sub
fwait
mov
pop
push
mov
lods
mov
fdivs
cmp
adc
or
sub
jns
pop
mov
mov
ja
mov
orl
pop
into
leave
jl
cmp
enter
mov
leave
or
mov
idivb
jmp
mov
push
inc
sub
mov
cmp
cwtl
insb
mov
xchg
mov
push
mov
aam
xchg
inc
cmp
sbb
in
repz
pop
fs
je
cmp
pop
lahf
outsb
pusha
outsb
ret
and
fmuls
lea
lods
pop
sub
lea
bound
push
xchg
roll
out
in
cbtw
out
cmp
gs
dec
data16
adc
and
xchg
sahf
cs
mov
test
push
push
hlt
xor
pop
xor
mov
cmovge
nop
push
adc
cmp
arpl
nop
mov
pop
lods
mov
es
or
adc
dec
lret
pushf
ret
mov
xchg
mov
outsl
mov
sarl
cli
stc
pushf
sub
int
dec
repnz
mov
mov
cmc
dec
mov
lret
adc
xchg
jle
jo
mov
mov
sbbl
ret
xor
cmp
push
lea
pushf
sub
jmp
push
sbb
inc
icebp
jb
xlat
out
xor
scas
cli
ret
gs
cwtl
cmp
jp
nop
inc
sahf
xor
sbb
dec
leave
mov
shrb
mov
push
pop
cmp
mov
pop
testl
lret
or
mov
push
inc
mov
fdivr
arpl
mov
fsubl
dec
dec
iret
mov
stc
jle
jns
clc
into
repnz
into
mov
stos
xor
lcall
dec
mov
stos
cmp
pop
mov
gs
sbbb
cmp
mov
sbbb
push
and
xchg
jnp
pop
insl
or
dec
or
dec
push
mov
lcall
add
jb
mov
mov
in
or
leave
pusha
loopne
jp
cmpsl
cwtl
iret
outsb
iret
mov
fmulp
mov
mov
push
cld
mov
push
inc
outsb
push
aad
xlat
sbb
or
xor
aaa
xchg
out
push
xchg
pop
out
inc
stos
in
jp
out
shl
sbb
sub
push
test
int
pop
sub
or
push
mov
out
mov
lret
rcll
roll
dec
push
ret
dec
mov
sbbb
xor
loopne
mov
popa
fsubr
lods
icebp
int3
xchg
push
int
cmp
pop
lea
mov
aam
push
mov
inc
cmp
push
mov
mov
inc
push
aad
mov
xor
ret
mov
push
call
xchg
pop
ss
fcoml
cmpsl
lea
pop
sub
xor
cmp
iret
mov
mov
xor
int
xor
cmp
jecxz
sub
iret
adc
inc
lods
dec
lock
lret
inc
mov
xchg
inc
daa
cmp
mov
mov
dec
xchg
push
outsl
imul
sahf
imul
cwtl
insl
pop
mov
jo
xor
mov
push
loopne
pop
lcall
call
jbe
movsl
add
outsb
cmp
sti
push
cmp
add
outsl
inc
pop
lcall
push
idivb
pop
and
add
or
sub
mov
sbb
cmpsb
mov
mov
inc
mov
mov
mov
jl
cmp
or
xor
mov
stc
push
xchg
jge
mov
xor
or
and
jmp
mov
or
xchg
pop
daa
pop
mov
repz
jns
pushf
cmc
xchg
mov
pop
mov
shrb
icebp
into
push
and
leave
fsubrp
fs
xor
push
or
out
and
cmpsl
insl
sub
pop
in
push
bound
add
clc
pop
push
imul
inc
push
sub
mov
test
add
in
xor
fstpl
sahf
jle
scas
xchg
ds
mov
pop
insb
mov
lret
js
mov
jmp
jb
mov
mov
daa
insl
dec
adc
andl
pop
andl
or
ljmp
xor
pusha
ds
roll
and
xchg
cmpsb
pusha
shlb
mov
and
jne
sahf
jns
jmp
test
jb
or
clc
or
push
push
jne
cmp
adc
push
jnp
popa
loop
mov
loope
or
dec
xchg
mov
xorb
mov
adc
mov
ret
aas
xor
repnz
arpl
xchg
sub
outsl
test
sub
fidivrs
inc
sbb
mov
jp
insl
jne
adc
mov
fwait
stos
ja
cmp
psrld
daa
or
shlb
mov
insb
bound
or
push
test
cmp
and
mov
scas
jmp
aas
shl
in
inc
add
pop
adc
pop
add
ss
jl
out
movsl
adc
jae
fmull
jns
adc
iret
mov
jbe
aad
gs
gs
push
add
clc
cli
xchg
add
inc
cmc
xor
sub
inc
addr16
lret
or
loop
shll
in
push
stc
cmpsl
ret
mov
jnp
mov
cmpsl
mov
mov
std
xchg
mov
mov
xchg
daa
sub
xchg
es
cmpsb
dec
mov
scas
lea
inc
insb
rcll
pusha
adc
stos
fsubrl
push
mov
test
data16
mov
and
pop
add
pop
fnstsw
sub
stos
pop
shll
sub
pop
dec
es
push
pop
jae
push
lret
inc
insb
inc
push
cltd
and
pop
mov
icebp
inc
jge
pop
shrl
mov
gs
cwtl
push
xor
inc
push
cmp
cmp
cmp
mov
sbb
xchg
rcrb
nop
jge
loopne
mov
push
and
sbb
xchg
movsb
and
or
sub
je
mov
mov
xor
jne
scas
sti
sub
sub
inc
or
and
lret
lret
stos
jge
filds
push
aad
das
aam
mov
loope
sub
fcom
or
mov
dec
sub
in
in
scas
push
or
jle
scas
pop
mov
sysenter
notb
inc
lods
dec
cmp
add
mov
pop
xchg
enter
and
xchg
cmp
mov
out
in
jmp
cmpsb
sub
adc
add
insl
lahf
jmp
aad
sbb
mov
inc
lock
movsl
adc
lret
xorl
outsb
push
and
sbb
push
dec
and
call
loope
popf
mov
addb
mov
mov
pop
jae
aaa
push
fildl
add
pop
sbb
js
lds
lea
je
cld
or
je
xor
lods
stos
mov
bnd
ret
bound
xor
lea
pop
xchg
jo
or
in
aaa
lds
fs
sub
push
sti
mov
lds
in
cvtpi2ps
int
jmp
adc
jg
sub
mov
ja
xlat
std
aas
out
pop
xchg
inc
insl
popa
xchg
movsb
jmp
loopne
xchg
or
xor
int3
movsb
mov
lods
fcomps
js
insl
popf
dec
cmp
cmp
dec
fsubrl
sub
sub
inc
movsb
and
mov
sbb
add
subl
and
loopne
add
add
add
mov
add
ss
jecxz
sub
jbe
mov
cmp
fisttpl
pop
or
push
push
in
xchg
jne
arpl
xchg
insl
xor
add
fimull
sbb
ret
and
test
outsl
mov
ja
ret
inc
add
mov
cmp
loop
push
movsl
push
sbb
xchg
lret
xchg
pop
lcall
rolb
out
vucomisd
dec
enterw
hlt
cmp
repz
cld
loop
inc
pop
iret
push
in
aaa
cmp
or
dec
adc
cli
add
imul
sarb
aaa
xchg
mov
sbb
aas
fdiv
cbtw
or
adcb
sbb
incb
shlb
out
and
xor
inc
cmpsb
xchg
fdivrs
pop
and
cmpsb
cmp
lcall
push
and
rcll
fsts
fs
adc
sub
std
ret
ja
fwait
loopne
cld
add
xor
or
lods
pop
mov
inc
call
push
sarl
sbb
inc
aad
mov
cwtl
jge
xchg
mov
in
pop
jnp
ja
jbe
leave
push
add
jl
jae
popa
mov
movsl
sub
xchg
loope
and
out
in
mov
sub
xchg
loopne
cmpsl
inc
daa
imul
or
icebp
negl
push
xor
int
xchg
jnp
stc
mov
fxch
sahf
fiaddl
jmp
mov
pop
xchg
outsl
xor
mov
lret
cmpsl
lahf
mov
aaa
adc
cltd
push
std
xchg
jle
xchg
adc
or
inc
dec
shl
test
push
mov
mov
lods
out
js
cmpsl
insb
fsubrl
cmp
les
dec
and
cmp
mov
imul
and
dec
sub
mov
pop
ljmp
mov
jo
insb
adc
sbb
jg
dec
pop
iret
or
adc
push
testb
pushf
xor
jmp
jmp
pop
pop
call
sub
mov
jmp
inc
mov
stos
push
aaa
and
in
arpl
movsb
cmc
ffreep
cli
imul
pop
or
pop
add
pop
int
imul
push
loopne
idiv
loopne
cmpsb
mov
inc
imul
pop
pop
cwtl
lds
mov
inc
repnz
mov
xor
push
rorl
add
loop
inc
int
rolb
outsl
sbb
daa
cmp
xor
mov
cmp
pop
out
cmp
pop
jns
jnp
add
cmpsl
sbb
fiadds
loope
insl
mov
mov
cs
dec
sahf
xchg
ljmp
pop
lea
and
imulb
add
push
mov
cmp
dec
pop
pop
jmp
mov
rol
bnd
mov
pop
push
int
mov
fbld
push
aam
addr16
mov
cmp
and
xor
inc
xchg
test
fs
mov
aam
dec
sub
loope
mov
sub
dec
ljmp
dec
out
xor
or
loop
push
jg
enter
pop
mov
lods
loope
inc
pop
test
add
test
xor
inc
pop
and
xlat
cwtl
lahf
shlb
pop
out
cmp
sbb
mov
push
push
aaa
mov
cmp
jbe
push
fs
loope
ret
mov
mov
cmpsb
rcrl
sub
hlt
cltd
int
and
inc
xchg
test
sub
lret
fstpl
in
ret
mov
loop
imul
mov
xchg
mov
outsl
xlat
cmp
in
mov
jno
je
mov
lds
cmpsl
push
mov
lea
sbb
xor
outsb
movsb
clc
addl
fsin
cmp
lcall
push
mov
push
cli
rorb
xor
push
out
aaa
incb
ret
outsl
std
sbb
test
gs
jno
push
jecxz
loope
andb
sbb
clc
call
xchg
jle
das
mov
ret
dec
push
jle
inc
push
mov
int
and
sub
dec
daa
and
pop
dec
imul
popa
arpl
mov
mov
enter
cmp
into
fldl
shll
pop
push
scas
mov
iret
movsb
add
test
pop
cwtl
jmp
cmp
cwtl
mov
xor
xchg
je
jns
push
mov
mov
mov
stos
jge
push
mov
mov
insl
add
or
xchg
xor
shrl
inc
jns
push
add
clc
int
filds
sbbb
inc
xor
xor
push
adc
sub
or
aad
or
pusha
pop
mov
aam
pusha
in
in
push
repz
sub
inc
out
inc
sub
lods
or
insl
sub
jnp
push
pop
mov
outsb
test
push
in
pop
lds
testb
pop
pop
pushf
inc
push
lcall
ljmp
shrl
push
inc
pushf
cs
mov
ss
mov
or
js
in
imul
xor
mov
sahf
sub
sub
add
lods
push
xor
mov
mov
icebp
xor
adc
cmpsl
cltd
adc
adcb
mov
movsb
andb
sbb
sbb
mov
fdivrl
cld
jl
call
fidivs
fcomip
jo
sbb
das
push
ss
js
in
mov
or
and
jae
sub
popf
mov
out
test
cmpsb
lcall
or
push
jbe
and
xchg
outsl
cli
dec
adc
insl
jecxz
das
jmp
jne
cs
cmpsl
mull
decb
adc
clc
and
sbb
push
push
gs
add
int3
lret
mov
int
int
mov
insl
dec
push
xchg
pop
cli
int3
cltd
repnz
adc
andl
add
mov
mov
out
icebp
decl
dec
sti
dec
mov
arpl
test
out
fcoms
out
xchg
mov
cmc
push
pusha
cld
jle
cs
repz
enter
jbe
hlt
jns
cwtl
fistps
inc
pop
mov
movsl
jp
pop
sub
jecxz
push
stos
sbbl
or
jmp
add
jp
cmpsl
mov
inc
mov
in
pop
cmp
fadds
mov
inc
call
in
sub
cmp
call
imul
mov
and
call
lods
adc
adc
data16
and
adc
mov
pop
idiv
dec
stos
jns
popa
movsl
xor
loop
outsl
jo
xchg
int3
jns
cmp
sbb
push
das
push
jns
out
fisubrl
xor
out
inc
aas
inc
jmp
push
fidivl
mov
stos
xchg
int3
fdivl
sar
addl
addr16
lret
adc
loopne
xor
and
dec
cmpsb
ror
jae
out
add
push
movsb
or
xor
fmulp
adc
push
sbb
pop
dec
dec
mul
popf
jns
xchg
loop
or
std
cltd
or
jb
jg
addb
jecxz
push
and
popa
repnz
lock
rcl
dec
outsl
or
mov
add
repnz
jns
fadds
scas
rcrb
push
adc
xchg
inc
add
popa
jmp
adc
xchg
pop
loope
ret
push
decb
mov
push
jb
sbb
add
cli
sbb
scas
push
sub
inc
js
popf
xor
push
divl
add
cmp
sub
mov
push
mov
fsubrl
lea
and
lods
add
es
jae
push
xchg
xor
fidivrl
cli
test
je
pop
inc
scas
xor
inc
pushf
movsb
and
inc
repz
lahf
push
cld
ljmp
push
mov
xchg
cltd
dec
mov
push
pop
insl
jg
test
test
pop
dec
xor
icebp
int
sub
sub
sbb
out
out
sahf
cmp
jo
imul
orl
dec
inc
add
inc
dec
mov
and
fwait
mov
pop
dec
push
lods
bound
add
rclb
add
mov
push
xchg
es
jae
into
push
xor
fistpl
pop
iret
cmp
addb
sub
out
add
jns
stos
enter
and
daa
fcompl
push
xor
dec
lret
popa
add
in
std
popa
xchg
mov
cld
and
xchg
xchg
scas
sti
or
mov
enter
inc
arpl
dec
push
cmp
cmp
xchg
mov
and
mov
mov
rcrb
das
stc
outsl
mov
scas
xchg
repz
pushf
cli
sub
xchg
sbb
test
scas
cmpsl
popf
push
add
int3
jp
jo
dec
cmpsb
and
pop
dec
mov
imul
in
push
xor
xor
mov
pop
sub
dec
in
jmp
xorl
in
pcmpeqd
mov
push
test
xchg
in
fs
cmpsl
sbb
leave
jl
or
and
xchg
fwait
push
scas
xchg
pop
stc
imul
pop
mov
mov
pusha
pop
sub
and
and
iret
pop
out
xchg
data16
mov
rolb
and
push
or
sub
sbb
pop
push
movhps
and
adc
mov
rclb
test
mov
loope
adcl
aam
imul
pop
xor
lahf
mov
mov
xlat
sti
shlb
dec
es
sub
pop
je
mov
aad
lds
mov
xor
rorl
xchg
mov
out
dec
neg
ds
adc
insl
push
push
lea
sbb
jno
push
mov
jmp
icebp
fwait
test
mov
enter
push
push
lret
jmp
adc
dec
push
rcll
sub
add
imul
jne
fdivs
cmp
daa
push
stc
pushf
mov
adc
sbbl
fs
in
out
adc
cmpb
push
ret
jge
mov
in
mov
sbb
inc
popf
outsb
dec
iret
push
dec
outsl
xchg
push
mov
xor
jo
pop
dec
mov
stos
pushf
push
int3
mov
imul
add
testl
add
es
jp
adc
lea
and
movsb
mov
mov
repnz
xchg
jo
aas
mov
insb
lcall
mov
ret
xchg
cltd
idiv
push
jb
int
inc
push
add
out
add
rorl
jle
rclb
cwtl
cwtl
sbb
sub
mov
dec
fwait
int3
push
aam
push
mov
mov
inc
addr16
dec
or
sahf
cs
test
mov
jbe
add
pop
fsubl
fistl
push
add
lods
nop
aam
inc
mov
sahf
test
negl
and
test
clc
std
ret
or
pop
cmpsl
leave
push
out
jg
sub
int
loopne
jno
push
pop
push
pop
fnstenv
cmp
jmp
push
jmp
add
scas
mov
mov
and
and
aad
lcall
das
rclb
jo
sgdtl
lret
cmp
cmpsb
sti
xor
lods
into
dec
outsl
push
stc
xchg
enter
jl
xor
mov
xchg
lahf
xor
out
ds
mov
repz
inc
lret
sbb
xchg
addr16
adc
pop
iret
in
xchg
mov
mov
inc
addb
cld
mov
movsl
loopne
imul
adc
ret
aad
cmp
repz
sbb
insl
xchg
adc
sub
outsl
nop
jns
push
data16
dec
cmp
lret
ret
pop
jge
jp
outsb
push
and
xchg
add
test
push
pop
mov
jne
xchg
sete
inc
xor
cmp
int3
lahf
sub
arpl
cli
inc
push
mov
jle
push
sar
mov
cmpl
mov
lahf
outsl
add
lcall
mov
jns
int3
adc
test
popf
pmuludq
ds
push
js
daa
lret
inc
notl
insl
cli
inc
and
es
icebp
xor
icebp
or
and
insb
daa
pop
js
test
lods
jmp
push
and
jle
jecxz
nop
mov
addl
je
sahf
push
pop
and
jb
inc
jmp
sbb
sbb
test
int3
add
movsl
jl
inc
shll
push
xlat
jns
pop
clc
xchg
push
jp
and
mov
stos
xor
adc
in
les
ja
dec
scas
gs
and
pop
mov
repnz
cmp
mov
test
icebp
inc
mov
or
xchg
xor
jnp
push
sub
test
inc
sahf
push
out
dec
int3
enter
ds
ja
lahf
cmpsb
xor
adc
popf
xor
inc
mov
std
ffree
adc
test
lret
jo
sub
je
sub
adc
test
cmp
ds
outsb
shl
popf
push
or
sub
jnp
pop
xchg
add
push
sub
pop
push
loope
mov
cli
inc
leave
js
pop
xor
iret
push
push
ja
push
push
mov
xor
scas
outsl
popa
repnz
into
enter
jno
or
lock
adc
cwtl
je
loop
aaa
mov
or
ja
stos
idiv
outsb
or
into
xchg
cmp
xchg
loopne
fadds
gs
cmp
cmpsl
insb
xchg
je
inc
mov
push
ljmp
dec
pop
nop
add
xchg
adc
mov
fsubrs
and
shl
loopne
sbb
mov
jo
jns
movsb
mov
scas
fcoml
push
movl
inc
and
jae
add
lcall
push
das
negb
sbb
and
lahf
pop
popa
sbb
inc
das
pop
sub
outsb
test
insb
test
scas
lcall
mov
ja
es
pop
cmc
dec
jno
mov
es
in
cmp
sbb
xchg
adc
jg
arpl
pop
int3
cmp
jae
dec
xor
and
mov
sahf
jno
or
dec
cmp
test
cmpsb
or
add
dec
mov
lods
cli
dec
mov
shll
mov
daa
push
or
xchg
imul
mov
cmp
ja
sahf
xchg
push
in
mov
xchg
imul
push
pop
inc
ror
movsb
pop
mov
add
dec
icebp
aad
js
adcl
add
ret
and
sub
inc
jno
clc
in
xor
fwait
ja
lock
dec
add
inc
jb
ss
notb
mov
and
stos
sub
or
add
sub
dec
and
sub
jbe
out
mov
cmp
lret
and
mov
dec
sbb
je
xor
aas
pop
cmp
or
pop
fcoms
pop
mov
push
aam
fstp
inc
out
cmpsb
xchg
movsl
insb
jnp
dec
xchg
push
xchg
mov
sub
outsb
push
sub
scas
sbb
jbe
cltd
and
fimull
mov
jle
xorl
mov
pop
movsl
push
fs
lock
movsb
add
pop
pop
sub
pop
xor
push
pop
jno
xchg
jno
fsubr
in
scas
addr16
mov
iret
in
jge
sub
adc
add
je
stc
sub
rorb
push
adc
jg
adc
push
hlt
and
sub
mov
and
not
mov
hlt
sbb
lcall
imul
outsb
push
jg
cwtl
shll
out
scas
ja
int
push
jl
insl
hlt
xchg
ss
sbb
nop
mov
in
add
sbb
test
push
pop
fistps
add
je
mov
or
cmp
add
sbb
int3
xor
popa
xchg
or
jmp
jb
sub
insb
in
test
pushf
stos
xor
and
push
adc
outsl
aam
in
lahf
stos
sbb
lock
jb
js
adc
sbb
xchg
out
jnp
add
not
sbb
stos
movsl
mov
fs
pop
xchg
cmp
lahf
orl
in
jmp
dec
stos
push
sub
lcall
or
test
mov
add
jp
xlat
push
int3
cs
pop
in
ret
inc
js
andb
fdivs
jmp
sarl
lods
sbb
mov
sbb
dec
ds
pop
leave
das
out
iret
jle
mov
jb
cmc
pop
xchg
cmp
pop
cmp
mov
inc
ret
adc
cmp
dec
popf
jb
loop
icebp
push
lea
mov
test
int3
push
inc
pusha
or
sbbl
sub
aad
sub
pop
out
jle
jae
mov
mov
adc
add
repz
push
cmpsl
in
mull
mov
xor
and
sbb
mov
cli
cs
data16
fwait
pop
mov
mov
inc
stc
out
test
jnp
mov
push
test
stc
pop
jge
jle
mov
insb
xchg
in
and
push
popf
orb
sub
push
xor
fldl
lcall
neg
dec
push
das
pop
push
mov
pushl
lret
icebp
repz
ret
mov
cwtl
ss
adc
push
pop
push
loopne
cmpl
cmp
jmp
call
imul
cltd
cmp
xchg
cli
xchg
shrl
pop
cli
xlat
mov
outsl
inc
loope
mov
imul
mov
rcrb
test
pop
test
or
mov
sub
xchg
aaa
pop
call
dec
push
cmp
lcall
and
lods
push
push
and
lret
ror
mov
ffreep
data16
sbb
dec
xchg
and
fdiv
imul
test
push
lods
cmc
sub
mov
sahf
xchg
shrb
pop
into
ret
jns
fistps
sti
xchg
adc
mov
pop
pop
movsb
addr16
jp
movsb
into
jmp
lods
mov
icebp
fsubl
test
fists
movsb
inc
test
dec
loopne
fcmovbe
mov
stc
mov
jbe
push
lock
incb
push
lea
mov
cld
andl
jl
in
adc
sbb
in
imulb
popa
adc
push
fsubrs
fisubl
repnz
and
addb
sbb
cmc
popaw
mov
notb
jns
aad
xor
xor
mov
jns
dec
jne
mov
lods
mov
cmp
dec
lea
xor
call
add
mov
push
rcr
xchg
jb
pushf
negl
xchg
cmp
daa
cltd
mov
jb
shll
cmpsl
adcl
test
iret
call
or
or
mov
les
or
jb
fwait
mov
dec
sbb
enter
mov
into
scas
sbb
out
dec
fstps
adc
shlb
sbb
adc
sub
mov
mov
and
inc
xchg
cmp
cmpsl
or
je
or
pop
pop
add
pop
dec
and
mov
cwtl
mov
fsubp
cmp
mov
push
mov
addr16
sbb
dec
or
push
call
push
lea
popf
sbb
aad
out
lods
and
aas
jg
fistpll
mov
xchg
aam
popf
push
scas
in
cli
adc
xor
loope
mov
xor
cltd
add
and
pop
add
add
mov
fcmovnbe
or
sub
inc
int
aaa
or
jmp
sbb
mov
cmpsl
mov
jae
lahf
adc
add
inc
pop
dec
shrb
add
insl
sub
mov
add
ret
enter
inc
or
test
jo
shlb
mov
jg
mov
in
adc
and
xor
adc
adc
mov
into
xor
and
jns
dec
negl
mov
arpl
sub
stc
xchg
push
xchg
enter
mull
sbb
jg
inc
jnp
and
sahf
test
jl
xchg
pushf
shlb
in
repz
or
subl
dec
test
jnp
fisttpl
cs
or
ja
xchg
shlb
loope
mov
dec
xor
repnz
addb
lds
fidivl
inc
adc
lods
xchg
jmp
ja
inc
add
test
mov
pop
mov
fisubrl
dec
sbb
mov
cmp
and
test
jno
or
data16
xor
sbb
mov
pmulhw
fisubl
fcomip
cmp
xchg
shlb
sti
jno
jp
mov
andb
xchg
jl
xchg
or
test
dec
bound
repnz
cmpsb
scas
mov
cmp
aas
push
cmp
sbb
and
mov
aad
mov
outsl
push
and
push
dec
popf
xor
fldt
arpl
lcall
xchg
ret
repz
movsb
ret
nop
aad
push
xchg
ds
dec
leave
inc
adc
stc
nop
imul
and
rclb
add
inc
sarb
cs
jno
shl
and
inc
jle
or
fwait
push
or
or
out
adc
ljmp
andb
fsubl
mov
aad
loopne
adc
std
and
cmp
test
mov
inc
pop
sbb
sar
mov
mov
out
jmp
jecxz
dec
test
dec
push
hlt
ljmp
or
jne
aas
or
mov
test
lcall
sub
mov
push
dec
test
adc
adc
dec
xor
dec
adc
ret
in
or
and
mov
in
push
cmpsl
cmp
insl
enter
out
les
mov
or
clc
jg
stos
lret
push
in
lods
repz
dec
in
fdivs
and
push
scas
fsubr
fildl
in
notb
xchg
and
mov
fs
and
adc
sub
push
xchg
mov
mov
lods
negb
adc
mov
jle
dec
scas
addr16
jge
cwtl
jno
fcmovnbe
inc
jmp
sbb
divl
xchg
insl
in
dec
adc
push
cwtl
cmp
in
and
mov
cmpsl
movsl
movsl
mov
pop
insb
sub
inc
adc
push
lret
shrl
jg
mov
lea
adc
in
and
mov
aad
xor
or
lahf
jl
push
mov
pushf
in
into
pop
and
in
jbe
push
mov
fs
clc
sbb
jae
push
or
pop
or
push
add
rcll
adcb
lea
movb
je
bound
cmc
aaa
cs
inc
les
lods
stos
mov
or
push
cmp
loop
and
ret
call
add
cmpsl
and
lret
daa
pop
scas
stos
fwait
push
mov
sbb
jno
jp
iret
mov
loopne
sahf
add
sub
test
pop
jecxz
pop
test
xlat
add
sarl
mov
rcrb
lcall
mov
adc
push
push
push
xor
imul
or
xchg
mov
fnsave
fadds
hlt
inc
add
addr16
testb
movsl
xor
inc
push
sbb
jg
loop
push
pushw
cmc
push
push
push
inc
in
pop
jp
in
mov
and
dec
stos
and
insl
lods
pop
fnsave
xchg
pushf
dec
outsb
pusha
in
repnz
cwtl
addr16
add
sar
subb
pop
lock
into
hlt
in
sbb
int
fldl
rcll
adc
ljmp
pop
pop
int3
scas
adcl
aam
insb
popa
dec
cmpsl
add
xor
pusha
aas
cltd
and
lret
stc
jae
dec
data16
fisttpll
xor
scas
xchg
jno
leave
or
jecxz
mov
xchg
out
fisttpll
shrb
dec
or
pop
sub
add
and
sbb
fwait
or
cs
fs
insb
loop
cmp
xor
adc
sbb
sahf
test
lds
sbb
jb
int3
iret
test
add
out
xor
mov
xor
stos
mov
jnp
cwtl
ret
jl
sbb
bound
cld
insl
xchg
out
inc
nop
out
out
in
lods
add
insb
shr
ljmp
shrl
push
lret
pop
xchg
xor
cmc
orb
sub
int
cmp
jnp
lahf
xchg
je
jb
gs
aad
fldcw
insl
lret
leave
cmpsb
xor
jns
out
and
outsb
shl
mov
push
insl
lds
bound
lcall
cmp
push
pop
adc
add
mov
xchg
inc
out
gs
aad
mov
and
xor
ja
push
popf
icebp
fnstenv
mov
shrb
cmp
push
shrb
pop
jmp
dec
pop
xchg
hlt
inc
scas
inc
sahf
push
inc
shrl
dec
pushf
push
cmpsl
fsubl
in
movl
js
push
dec
jle
lock
pop
jb
cltd
sub
lock
add
fcmovb
ret
mov
test
enter
sbb
andl
inc
inc
cmc
jp
dec
and
ret
sub
adc
add
insb
out
pop
pop
xorl
mov
pop
cwtl
push
lea
mov
fsts
out
xlat
subb
subb
mov
cmp
roll
lret
orb
imul
cli
popf
add
out
push
test
js
es
out
aaa
enter
or
gs
jecxz
lcall
xchg
mov
lea
xor
jae
xor
dec
push
mov
lcall
cli
xchg
ljmp
cmpsb
xor
jb
ds
cli
inc
sarb
dec
into
ficoml
fsubs
push
add
lcall
push
xor
and
sub
mov
jmp
pusha
jnp
outsl
mov
mov
fmull
mov
sub
and
cmpsl
cmp
xchg
pop
imul
leave
adc
sub
enter
sub
scas
jae
ja
adc
push
aam
out
jmp
sub
fadd
pop
mulb
inc
push
or
sarl
in
and
fisubs
mov
xlat
inc
or
add
ljmp
fldt
add
jle
bound
aaa
inc
mov
push
call
adc
mov
dec
or
mov
addr16
mov
jmp
mov
loop
jno
jle
mov
dec
sub
mov
sub
daa
add
or
mov
fdivr
mov
or
push
das
hlt
jbe
in
mov
jmp
push
shll
mov
mov
addr16
push
mov
scas
jb
iret
mov
and
push
addr16
pop
and
in
pop
inc
dec
cmp
mov
xor
out
mov
cmp
adcb
xchg
out
enter
pop
xor
aas
out
mov
jnp
rcr
lahf
pusha
cmp
fdivs
stos
mov
xchg
push
in
xchg
cs
imul
mov
adc
lret
cltd
sbb
jl
sbb
sub
shll
fildl
inc
adc
into
add
jg
add
sub
les
outsl
icebp
shlb
jns
dec
sub
cld
call
sbb
cmc
mov
dec
push
jnp
ret
je
es
and
pop
lods
add
idivb
and
pop
stos
ficoms
imul
inc
dec
pop
pop
scas
add
lret
sub
xor
mov
hlt
xor
push
sbb
inc
clc
js
iret
and
mov
jnp
pop
jb
inc
push
mov
lock
je
loop
nop
add
pop
inc
mov
jle
ss
sub
jecxz
mov
push
adc
sbb
shl
into
ja
cmp
dec
nop
dec
insb
jnp
xchg
add
pop
pop
popf
sarb
mov
test
outsb
jne
or
mov
lahf
jno
xor
pop
pop
aad
and
movb
sub
xchg
loope
push
sti
repz
mov
aaa
movsb
sbb
subl
or
es
mov
fisubrl
rclb
imul
sbb
repz
sbb
bound
leave
call
jg
or
outsb
lock
mov
daa
xchg
outsl
rol
sar
hlt
out
mov
shrl
addr16
loope
dec
mov
loope
push
das
xchg
pop
xchg
pop
nop
adcl
sar
adc
aad
or
xchg
outsb
push
popa
sbb
add
jno
outsl
sahf
add
adc
outsl
cmp
mov
jne
hlt
inc
inc
enter
mov
lods
push
jns
call
inc
mov
lahf
sti
xor
adc
cmp
mov
mov
sbb
push
sbb
ja
rclb
fcompl
out
mov
push
bnd
stc
adc
rcll
sbb
shr
adc
xor
movsl
mov
or
in
mov
xchg
lods
pushf
call
mov
mov
cmc
in
or
fisubrs
jp
jnp
mov
cmp
push
pop
jmp
mov
dec
inc
jo
mov
fistl
jno
js
mov
icebp
out
fsubrs
mov
push
or
mov
mov
inc
mov
shr
ret
movsl
add
inc
jle
mov
jbe
jno
fldl2e
shlb
das
out
mov
fidivl
repz
and
ficoms
das
pop
mov
sub
mov
aam
sub
test
xor
jmp
pop
push
fs
movsb
and
add
add
out
ficoms
dec
imul
cpuid
hlt
push
add
fsts
jne
das
test
ljmp
inc
gs
adc
sub
scas
dec
jecxz
push
pop
add
ja
test
jae
mov
sbb
in
hlt
fsubs
jmp
mov
das
fdiv
pop
insl
in
seto
pop
jne
popa
out
fstpt
andl
inc
das
insl
fstpt
pop
inc
ds
push
sub
push
sub
jnp
pop
xorl
insl
and
loopne
jb
mov
clc
push
lahf
adc
push
rcll
mov
pop
out
cmp
clc
nop
mov
dec
pushf
outsb
mov
push
negb
jne
cmpl
adc
add
add
adc
push
or
stc
xchg
push
sbb
jecxz
push
sbb
pop
divl
movb
rcrl
add
ret
pop
mov
dec
inc
in
mov
adc
add
shrl
pushf
sbb
cmp
or
into
cld
mov
out
mov
fwait
aaa
mov
or
enter
dec
mov
loopne
mov
out
nop
lcall
xor
xor
cwtl
in
jge
add
inc
loope
fxch
cmp
jle
mov
sub
xor
jb
xchg
ret
daa
lret
rolb
dec
sub
inc
arpl
mov
mov
mov
push
scas
mov
inc
ror
je
mov
jmp
rcr
cmp
lds
sbb
leave
aad
leave
das
shll
shr
xchg
inc
inc
fidivs
mov
mov
pop
inc
mov
mov
mov
push
xchg
sbb
xchg
ss
inc
loop
adc
in
mov
jmp
daa
dec
jno
aaa
xchg
cmp
out
dec
std
mov
pop
sub
push
daa
jno
dec
js
mov
test
outsl
mov
sbb
icebp
sbb
std
fdivrs
jmp
jmp
pop
add
jecxz
cltd
rorb
push
mov
add
mov
pushl
mov
xor
jecxz
pusha
lods
scas
and
stc
rorb
js
dec
imul
jl
std
and
adc
adc
cmp
sar
arpl
subb
xchg
fstl
adc
cmp
ds
gs
xor
cmp
test
pop
jne
pop
sub
out
mov
rorl
mov
rcll
dec
push
iret
add
leave
dec
stc
cs
adc
ficomps
xrelease
ss
or
movsb
lret
mov
imulb
lahf
lods
sub
mov
idivb
std
in
push
imul
cwtl
adc
or
clc
bound
mov
mov
add
push
std
push
loop
lock
jge
sbb
push
inc
mov
lock
xlat
sbb
aas
call
jno
aaa
xchg
xchg
jg
ja
cmp
das
call
sbb
mov
in
inc
fwait
jecxz
mov
jmp
psrld
in
xchg
hlt
sbb
push
outsl
cmc
test
mov
nop
shlb
cmpsl
in
cmp
mov
fldl
xchg
inc
inc
sti
xor
cwtl
mov
mov
ja
xchg
jns
dec
ficoml
fstps
shr
stc
out
inc
rcll
je
int3
cs
fsts
lock
imul
jmp
xchg
sbb
add
popf
adc
cmp
ds
cs
nop
mov
cmp
dec
jmp
xchg
cmp
push
xchg
mov
push
insb
lds
test
push
xor
bound
mov
out
sbb
mov
nop
int3
call
scas
cltd
insl
mov
inc
mov
mov
and
aas
mov
push
jge
add
test
fcoms
xor
setg
nop
bound
scas
mov
jnp
ret
lods
jmp
sub
shr
sub
es
aad
stos
addr16
ljmp
xor
xor
mov
adc
mov
mov
bswap
push
shrl
pushf
int
sahf
mov
xor
mov
lret
xor
movsl
push
xchg
ja
adc
sti
dec
dec
adc
in
pop
sub
into
add
mov
inc
insl
jo
arpl
inc
loope
and
jae
push
les
push
js
add
push
and
rep
xchg
mov
adc
cmp
lods
mov
pop
or
lods
addl
and
push
or
lcall
scas
rcrl
mov
inc
add
sub
push
in
add
enter
fisttps
xor
cmc
aad
dec
fwait
repnz
sbb
cmp
scas
sbb
pop
xor
sahf
mov
add
and
fsub
mov
iret
jl
jg
adc
fcoms
xchg
jge
push
dec
add
fdivs
imul
xchg
sub
fnstcw
and
push
adc
ja
mov
jle
and
jmp
jo
pop
push
sbb
xor
xor
test
pop
aaa
int3
mov
repz
jmp
jb
mov
and
mov
in
xlat
mov
sub
inc
stos
fldl
xor
cwtl
cwtl
sbb
rclb
loop
jne
inc
scas
pop
jl
cmp
push
mov
mov
sub
dec
adc
pushf
loope
lcall
xor
jns
cld
shlb
and
adc
sbb
inc
jbe
out
xchg
fcoml
xchg
mov
xlat
xchg
subl
inc
ss
je
mov
sar
add
imul
popf
rolb
dec
int3
jne
add
adc
dec
fcomp
js
mov
fldt
push
mov
mov
jecxz
repnz
in
out
loope
add
sbb
jbe
mov
lret
and
sbb
dec
iret
insl
loope
xor
lret
in
mov
dec
gs
jp
push
push
std
inc
sub
adc
inc
fisubrl
data16
imull
inc
jns
dec
mov
add
push
dec
gs
leave
jo
pop
or
mov
inc
lods
ror
sbb
cmpb
jno
testl
mov
cli
lods
mov
lcall
mov
in
mov
and
outsl
inc
aam
cmpsb
mov
pushf
sub
pop
push
ja
jns
pop
xchg
mov
in
filds
push
pop
in
sub
loopne
mov
sub
push
imul
ja
pop
sbb
shrl
ja
sub
pop
icebp
push
or
enter
sbb
xor
imull
push
cwtl
pop
jne
clc
push
add
popf
cmp
ss
lcall
les
fs
out
addr16
cs
or
adc
adc
es
dec
and
inc
jp
sub
es
pop
lds
dec
pop
adcl
imull
xchg
pop
adcl
inc
sub
scas
jo
stos
out
fxtract
mov
or
xor
out
in
inc
push
bswap
adc
outsb
stos
push
push
enter
arpl
popf
mov
push
jle
arpl
popf
daa
outsb
dec
cmpb
in
sbb
in
enter
jp,pt
sbb
clc
icebp
daa
js
push
pop
dec
je,pn
movsb
mov
jmp
push
xchg
bnd
add
push
testb
ficoms
jmp
cs
jbe
xchg
adc
int
mov
rorb
and
jle
jp
jl
inc
jo
lds
fbstp
dec
mov
loope
outsl
insb
add
inc
in
or
mov
imul
nop
pushf
add
test
repz
inc
fisubs
test
fildll
movsl
sbb
pop
sub
pop
sub
cwtl
dec
stc
push
push
test
jo
fistpl
pop
movsb
jno
popa
mov
outsl
jne
sub
int3
fmull
fcoms
xor
stos
jbe
insl
gs
adc
cs
push
xlat
cmpb
lods
adc
pop
nop
and
cmc
js
and
add
ljmp
add
gs
or
mov
inc
aas
mov
imul
fistl
adc
inc
mov
std
xchg
sbb
add
inc
lock
xor
mov
jo
pop
es
sbb
xchg
test
lret
inc
int3
or
lcall
mov
adc
sbb
mov
cmpsb
pop
dec
addr16
lds
or
xchg
rorl
aad
dec
stc
cmpsb
add
jo
or
outsl
test
in
lock
cld
push
aad
mov
mov
xor
aas
mov
mov
les
js
movsl
ret
out
jmp
lret
jns
and
sbb
sub
stos
and
xchg
add
lret
stos
outsl
push
ds
movsl
das
mov
ret
and
pop
jo
push
mov
fbld
in
lods
fnsave
adc
cmp
notb
mov
outsl
mov
rorb
sti
pushf
test
push
rclb
mov
call
es
aad
fucomi
sahf
pop
out
mov
cwtl
mov
sarb
mov
fistpll
mov
mov
cwtl
cmp
mov
es
js
lods
mov
push
arpl
insl
fcoms
in
and
pop
jno
jne
mov
std
fwait
ds
and
test
cmp
jno
cmp
leave
int3
das
cs
std
clc
mov
ljmp
mov
cmpsl
pop
insl
ret
stc
mov
leave
in
cmpsb
mov
sbb
jmp
pop
imul
inc
cs
insb
out
add
in
push
scas
sub
xchg
and
xchg
gs
add
or
cltd
adc
out
and
mov
or
pop
mov
jg
sbb
data16
mov
jle
lods
mov
out
loope
stos
pop
mull
ljmp
cltd
pop
call
aas
std
or
cs
ror
pusha
addl
add
fistps
push
and
fstp
push
jl
movsb
nop
test
orb
sarb
int3
clc
mov
xchg
clc
out
fwait
repnz
nop
sbb
jns
imul
es
enter
pushf
js
jg
mov
arpl
in
sub
pop
sbb
push
push
mov
lea
xor
sbb
pop
neg
lar
imul
das
sub
push
std
pop
aas
loope
add
outsl
mov
bound
add
ljmp
dec
mov
nop
push
mov
push
and
sub
loop
add
cld
xchg
xor
mov
adcb
lock
loope
mov
in
in
xor
xor
in
int
push
popl
xor
add
mov
sti
sub
push
fcomps
dec
pop
jae
test
inc
repnz
inc
jb
dec
sbb
bound
push
sub
sbb
movsl
imul
mov
sub
mov
mov
dec
imul
jno
xchg
or
nop
fsts
jmp
popa
and
lods
test
leave
add
movsb
push
jecxz
testb
or
dec
out
jle
sahf
movsl
leave
jle
popf
jne
or
in
add
in
enter
sbb
cli
adc
mov
adc
mov
jbe
fistpll
aam
lret
jge
loopne
daa
int
dec
mov
enter
je
call
gs
pop
in
jecxz
push
adc
rcl
sub
scas
mov
xor
idivl
loope
xlat
and
mov
das
out
cld
fbstp
inc
and
mov
sub
fists
repz
lcall
dec
out
pop
add
pop
lret
fcmovnbe
lret
subps
mov
insl
and
cs
lcall
mov
aaa
out
dec
inc
or
sub
stos
and
jno
das
or
insl
pop
stos
sti
and
mov
dec
movsl
je
mov
sbb
loopne
lahf
mov
ja
ss
lea
fadds
loopne
fnstenv
pop
adc
enter
lret
cltd
jge
out
sarl
cmpb
pop
add
pop
cmp
pop
add
xor
jge
enter
dec
and
fldenv
test
jmp
mov
out
lcall
movaps
cmpsw
cwtl
inc
pusha
jo
inc
sbb
push
adc
mov
cmpsb
movsb
pushf
int3
push
mov
jo
dec
test
adc
divb
or
insl
adc
dec
xchg
add
or
idiv
cld
and
push
aaa
adcb
mov
or
adc
cltd
xchg
xor
outsl
sub
jmp
mov
mov
pop
sahf
push
fisubrs
jnp
shrb
jnp
sbb
dec
cmp
push
or
rorl
int
cmp
sti
inc
jge
pop
das
sub
jne
cmc
push
aam
push
lock
es
cwtl
inc
pop
fmulp
jnp
and
add
add
repz
or
add
sub
lret
xor
mov
pusha
cwtl
out
js
mov
sbb
inc
in
push
aam
cmpsb
or
pop
mov
push
bswap
inc
shrl
orb
negl
mov
mov
pop
or
dec
add
push
pushf
insb
push
ret
mov
mov
pop
mov
jmp
pop
out
fnsave
mov
mov
rcrb
aad
jle
test
sbb
hlt
xchg
paddb
gs
jnp
cld
fiadds
or
dec
push
mov
rcrb
outsl
push
mov
in
clc
rcr
push
clc
fistps
mov
test
mov
lds
inc
adc
cmp
nop
xchg
cmp
lcall
add
fisttpl
push
pusha
call
sub
push
push
mov
je
rolb
pop
cmp
dec
test
gs
mov
pop
inc
stos
push
sbb
jecxz
cs
idiv
es
mov
fwait
lret
cmp
push
fisttps
lock
and
push
testl
mov
jno
mov
xor
xor
aaa
js
jne
jnp
or
pop
cltd
incl
pop
inc
pushf
jmp
push
fwait
sti
mov
ja
mull
movsl
out
popa
mov
mov
push
push
pop
mov
mov
xchg
repnz
lods
popa
daa
sub
mov
push
mov
pop
or
fidivrs
into
mov
divl
dec
js
cltd
pushf
and
pop
pop
movl
fadd
test
or
push
sub
xchg
xchg
cwtl
stos
mov
in
arpl
outsb
mov
test
sti
ja
xchg
mov
jae
pop
in
mov
in
gs
insb
push
lock
jg
popa
je
mov
inc
int3
add
scas
pop
in
dec
movsl
pop
jns
pop
fistpl
pop
lcall
and
cmp
popa
adc
push
or
add
andb
test
push
pop
add
scas
sub
ss
iret
popa
hlt
cmc
shrb
adc
cmc
shrb
ret
and
lcall
imul
aad
inc
loope
add
clc
sub
js
testl
int3
mov
pop
jbe
cmpsl
daa
jecxz
loope
pop
cs
scas
pop
dec
push
sbb
jo
nop
int3
leave
test
add
mov
mov
test
aas
mov
and
hlt
out
jp
or
andl
or
bnd
and
push
dec
in
mov
cwtl
and
fcomps
je
cmp
xchg
xlat
repnz
stos
pop
stc
popa
cs
mov
pop
xorl
mov
push
push
pop
push
mov
pop
push
lcall
test
insl
repz
dec
pop
jnp
push
fisttps
adc
mov
es
mov
in
in
sbb
popf
cmp
jle
cmpsb
jo
cmp
dec
xchg
jb
dec
add
outsl
clc
fcom
jne
or
and
adcb
jo
mov
shrb
stc
xor
imul
pop
insl
fsubs
sahf
insb
cmc
pop
mov
cmc
push
xor
out
notb
xchg
mov
pop
pop
repnz
cli
loope
adc
nop
js
test
imull
aam
decb
jb
pop
scas
movsb
jbe
or
push
insl
aam
jnp
push
xlat
int
cmc
scas
aas
sub
or
pop
lret
nop
jecxz
xchg
in
sbb
push
out
cli
sub
dec
xor
mulb
rcr
inc
pop
cmp
or
scas
mov
push
pop
jae
lea
add
push
mov
pop
pop
and
icebp
ss
sbb
scas
pusha
inc
pop
sbb
jae
mov
cmc
push
mov
sbb
loope
test
nop
icebp
aad
sub
or
sti
mov
je
mov
adc
div
out
rcrb
imul
xchg
lock
mov
push
out
mov
mov
push
cmpsb
xor
pop
xchg
dec
jo
pop
sbb
test
in
sbb
out
add
sub
xor
iret
adc
into
movsl
jae
mov
xor
scas
das
addr16
sub
movsb
add
jecxz
rcrl
shll
dec
gs
shll
mov
and
cmp
or
mov
jno
mov
push
in
mov
sti
roll
or
push
push
pop
xchg
jl
adc
push
xchg
insl
ja
fdiv
out
jmp
mov
hlt
repnz
xlat
test
arpl
xlat
jae
test
push
movsl
pop
les
mov
add
fwait
jge
push
xor
cmp
cld
fwait
xchg
ficoml
repnz
inc
inc
mov
and
sub
and
mov
xchg
imul
xchg
pop
cmp
jl
pop
dec
xchg
dec
clc
xchg
pop
dec
jno
jp
ss
fs
fmuls
or
aas
test
movsl
lods
int3
lods
mov
nop
push
adc
xor
push
stos
sbb
and
cli
push
xor
cwtl
aas
pop
push
xor
and
lods
fwait
and
jae
fcompp
jb
mov
je
push
sub
shll
pop
push
mov
xor
xchg
shlb
adc
jg
fimuls
cmp
push
sub
adc
lahf
mov
mov
lahf
add
mov
rorb
dec
mov
aas
jne
pop
orb
sar
lock
out
push
divl
popa
or
cmpsb
int3
lret
mov
sub
pop
dec
lods
fwait
divb
dec
sbb
fidivrl
nop
xlat
add
xchg
aaa
add
gs
add
aas
pop
scas
nop
adc
repnz
and
scas
jmp
neg
push
cmc
arpl
inc
movsl
test
pop
test
in
pop
cld
add
pop
clc
jbe
jb
sti
outsb
jg
add
and
jb
cmpsb
mov
jae
test
and
mov
push
decb
cmpsb
sub
pop
push
pop
and
xor
mov
cld
push
out
mov
inc
xchg
fcoms
cwtl
out
lods
adc
and
xchg
jmp
cld
mov
lds
movsl
cmp
cmpl
ret
adc
dec
xchg
enter
cmp
cmp
mov
fsubs
inc
mov
pop
inc
cmp
mov
add
inc
jns
cwtl
jbe
add
int
sbb
pop
bound
add
adc
lods
pusha
dec
mov
push
or
adc
add
lds
dec
insb
mov
loope
insl
ret
sahf
stos
popf
xor
xor
sbb
outsl
incl
into
insb
negb
push
pop
mov
adc
leave
xor
pop
inc
call
rolb
mov
lcall
and
sbb
pop
scas
mov
mov
inc
loope
push
push
pop
imul
adc
push
add
int3
inc
and
pop
mov
cmpsb
fwait
push
jmp
pop
cmpsb
cs
and
jo
das
xchg
inc
das
test
cltd
push
fprem
mulb
mov
fs
or
insb
jg
bound
or
cld
mov
inc
cmc
out
inc
sub
sbb
sbb
mov
dec
cmpsl
mov
movl
xchg
inc
sbb
push
adc
mov
mov
mov
inc
cld
out
jbe
inc
sub
sbb
adc
mov
imul
clc
push
faddp
cmp
pop
mov
lahf
sahf
fildll
aad
jl
addb
sti
xchg
movsl
cwtl
jb
sbb
jmp
dec
push
sub
filds
loop
mov
ljmp
repz
cmpsl
scas
xchg
push
movd
adc
dec
cmpsb
jecxz
imul
stos
fcoml
push
faddp
jp
fwait
dec
movsl
xchg
mov
leave
mov
and
add
push
aad
mov
aad
push
sbb
adcb
and
cmp
stos
scas
mov
imul
in
jmp
out
jnp
rorb
inc
jl
cld
inc
rorl
mov
stos
fcomps
aas
and
subl
stos
mov
or
stos
loopne
or
mov
fcomi
ja
popa
negb
jno
aad
add
jne
sub
add
dec
in
push
xchg
out
dec
mov
add
icebp
ret
ret
pop
mov
mov
dec
dec
in
ret
pop
insl
pop
sahf
outsl
inc
movsb
hlt
sbb
jne
mov
enter
mov
jg
dec
sbb
add
mov
xchg
call
jecxz
mov
push
outsb
mov
in
push
jmp
add
call
push
inc
popa
orb
inc
mov
and
dec
sub
repnz
xchg
ja
and
enter
in
out
mov
jl
mov
lods
add
out
sbb
push
cmp
ds
inc
and
fstps
mov
and
mov
je
pop
jp
jbe
cmp
in
push
push
shl
out
stos
lahf
sbb
sub
dec
stc
pop
and
jb
repnz
and
imul
inc
dec
arpl
sbb
and
stos
push
and
lods
and
jl
pushf
lret
ret
rclb
adc
mov
icebp
int3
pop
je
mov
jl
pop
pop
int
arpl
cmp
mov
sbbb
cmp
addr16
ljmp
insb
xchg
pushf
cmp
mov
sbb
std
add
cmp
out
cmp
test
leave
jne
fmull
pop
jp
je
scas
xchg
iret
sub
mov
mov
jmp
add
sbb
in
sub
test
fstpl
jg
push
cmp
dec
sub
jl
nop
enter
sbb
ret
jns
mov
stos
aad
shlb
ret
push
sbb
cmp
cmp
push
xchg
adc
call
aad
pop
mov
pop
das
outsl
rorl
or
int
lods
push
movb
je
or
and
ss
inc
rorl
and
stc
and
incb
lret
dec
scas
xchg
sarl
push
inc
out
push
dec
mov
dec
push
hlt
mov
lock
popf
fidivl
or
pop
xchg
or
dec
out
in
jne
xor
push
jno
xchg
sub
or
push
or
out
xchg
mov
mov
das
jmp
jae
sub
pop
inc
pop
mov
jnp
repz
add
inc
and
cmp
movsl
and
inc
or
cld
adc
fprem1
xchg
test
or
fldl
mov
test
ror
mov
out
test
jno
aaa
inc
mov
adc
and
xor
fadd
cmp
fs
lock
rcll
adc
loop
jp
add
stos
or
mov
sbb
rcrl
or
xlat
push
sbb
dec
std
popa
insl
adc
in
xchg
mov
pop
cli
dec
xor
and
mov
add
xchg
nop
pop
sbb
or
xor
add
or
in
push
pop
cwtl
sbb
push
sbb
push
int
in
jns
loopne
aam
mov
pop
int3
andb
popa
cli
jg
stos
jl
dec
outsl
popf
cmp
xchg
xchg
mov
lret
testl
mov
adc
cld
cli
hlt
rcll
xchg
enter
inc
ljmp
loopne
pop
or
lods
jp
jnp
sub
push
test
cmp
pop
sti
incb
adc
lds
pop
and
mov
in
mov
and
or
mov
into
or
das
divb
lret
je
fldl
xchg
cmp
rcrl
out
and
push
push
jae
push
and
dec
xchg
jl
cmpsl
negl
inc
imul
dec
fsqrt
mov
mov
sti
stc
xchg
test
pop
enter
xchg
jmp
sahf
xor
sbb
mov
adc
inc
lcall
testb
or
lods
xchg
test
mov
clc
or
insb
lahf
inc
nop
aas
xor
inc
inc
loope
xchg
push
fcmovne
icebp
insb
sub
loopne
add
jb
push
pop
mov
enter
jnp
mov
test
fildl
dec
mov
add
push
loop
xchg
xchg
or
pop
jnp
icebp
sbb
gs
shlb
xor
sub
add
sbb
cmp
shrl
mov
ficoms
jno
push
movsb
jne
out
mov
lods
add
imul
mov
out
pushf
push
pop
sbb
scas
ror
mov
sub
add
xor
shlb
clc
pop
cmpsl
aam
je
cmp
int3
lret
je
dec
mov
mov
lret
in
lret
enter
pop
push
lret
push
jo
clc
imulb
xor
xchg
mov
enter
test
lahf
out
pop
mov
stos
je
xorl
aam
lds
pushl
enter
cwtl
sarb
adc
fcmovb
addr16
xchg
xchg
scas
push
add
jp
sub
jmp
xchg
call
inc
push
or
mov
sbb
mov
mov
push
stos
push
fucomip
pop
scas
shlb
jne
sub
push
fucomp
xor
push
test
pop
inc
or
mov
xchg
es
out
jae
lock
push
shlb
sbb
xor
loop
cmpsl
push
shl
inc
pushf
dec
and
sbb
sarl
mov
push
outsl
mov
mov
lock
jl
adc
sub
mov
sti
jns
icebp
out
testb
or
pop
into
adc
mov
rol
inc
jae
cltd
lret
mov
jne
fnstsw
jbe
pop
int
imul
mov
repnz
mov
xor
cld
in
sbb
pop
mov
adc
mov
ljmp
jl
push
mov
cmpsb
idivb
out
fiaddl
sbb
jae
int3
push
add
pop
push
in
loopne
fadd
inc
arpl
lock
xor
aaa
inc
xor
test
fidivl
mov
xchg
inc
insl
mov
test
in
cmp
cmp
lret
push
jl
inc
insl
mov
mov
add
push
mov
push
fldcw
pop
mov
mov
fucomip
test
jp
shl
mov
insb
sbb
mov
test
push
scas
lods
mov
xchg
mov
imul
in
xchg
inc
dec
fwait
fs
mov
dec
mov
jg
dec
insl
jg
push
adc
mov
inc
fdiv
or
scas
mov
popf
scas
mov
mov
mov
fistpl
test
push
push
sub
sbb
jb
dec
aas
sbb
adc
popf
pop
and
arpl
enter
push
hlt
movupd
je
aas
pop
xchg
mov
andb
repnz
outsl
mov
je
push
test
insb
dec
fiadds
test
pop
push
dec
ljmp
sbb
push
jle
outsl
add
call
push
stos
or
lods
inc
in
cmpsb
mov
sbb
out
mov
test
movsb
dec
lds
cltd
int
repz
sti
wrmsr
inc
stos
leave
es
mov
push
xor
ljmp
mov
adcb
inc
fidivs
idivl
mov
jae
sbb
test
xchg
pop
dec
pop
mov
sub
or
sti
out
or
rcrb
mov
xchg
adc
repz
adc
test
sbbl
sbb
push
sbb
fs
sub
xor
imull
mov
subl
xchg
fiaddl
jle
push
push
lcall
std
jle
sbb
push
add
xor
jg
xchg
or
scas
mov
xchg
in
repnz
inc
sub
inc
ljmp
add
repz
xor
out
lahf
pop
xchg
cmp
push
and
popf
xchg
daa
movsb
dec
imul
xchg
pop
nop
mov
pop
sbb
mov
adc
dec
push
filds
bound
xor
pushf
sbb
dec
cmp
or
or
test
leave
movsl
ret
int
insb
leave
out
mov
jne
imul
cs
adc
cwtl
mov
lcall
out
push
mov
add
push
mov
jge
mov
rolb
jecxz
jg
xchg
sub
sub
lods
mov
add
adcb
fbld
dec
xchg
outsb
enter
or
xor
ljmp
or
xor
adc
push
mov
push
lods
std
dec
inc
filds
jne
jne
sbb
push
pop
jns
adc
cmpsl
push
outsb
mov
jp
fiadds
bound
pop
xor
movsl
jmp
ret
cmp
loop
xchg
jg
adc
out
add
xchg
rclb
inc
fnstcw
stc
rcl
loope
sbb
test
jae
lret
fmuls
test
aad
mov
add
xor
jo
in
pop
adc
in
mov
in
insl
or
ret
pop
ja
fidivs
or
jmp
popf
add
or
adc
pushf
cmp
outsb
pop
push
icebp
mov
pop
pushf
dec
gs
jb
ret
out
test
out
push
insl
push
jecxz
mov
int3
out
fistl
dec
xchg
cltd
repz
cltd
incl
and
pop
in
lcall
cmc
push
std
enter
add
xchg
cmc
loope
pop
mov
push
xor
pop
mov
cmp
xor
add
sbb
das
ror
lods
and
mov
scas
out
xlat
and
mov
mov
test
jp
xchg
add
roll
fisubl
pop
loope
mov
add
xor
sub
cld
fnsave
fidivl
inc
add
iret
in
sbb
pushf
cld
mov
jnp
aad
or
sahf
xor
push
fidivrl
pop
or
rorb
sbb
bound
push
ja
and
ds
sbb
jmp
mov
jg
aad
mov
in
iret
jge
xchg
mov
addl
fdivl
int
out
push
cmp
insb
push
shll
cs
jae
cmp
pop
insl
inc
mov
mov
push
rcrl
push
pushf
pop
xor
cmpsl
sbb
movsl
repnz
insl
arpl
cmp
inc
popf
ljmp
stc
mov
rcrl
pop
test
xchg
push
sbb
nop
les
test
pop
scas
push
mov
rol
mov
ret
imul
xchg
rol
addr16
lea
jnp
insl
stc
repz
in
jns
in
js
popa
ja
mov
test
cmp
dec
lods
fidivrs
lds
inc
jno
xchg
shll
insb
pop
push
jg
insb
or
mov
ja
mov
out
push
xchg
roll
sbb
mov
rcrl
out
add
mov
mov
mov
sub
ds
movsl
call
inc
push
mov
je
add
out
adc
adc
sub
push
pushf
jo
and
or
sahf
sbb
clc
fwait
fwait
mov
xchg
std
cmp
mov
jns
add
inc
fwait
int
packssdw
xchg
push
cmpsl
fstpl
outsb
adc
les
mov
mov
cmp
repnz
and
fmull
in
mov
mov
and
jae
int3
aaa
stc
cmpsb
and
jae
push
insb
and
std
and
mov
decl
push
xor
cmp
xchg
push
pusha
mov
jae
dec
cli
mov
sub
inc
fwait
cmp
mov
jecxz
imul
movsb
dec
int
std
addb
fisttpl
in
push
faddp
inc
testb
push
sub
mov
arpl
mov
jge
sub
imul
cwtl
pop
sbb
xchg
jmp
mov
out
pop
inc
or
fstps
loop
jno
xchg
dec
dec
mov
pop
mov
mov
adc
nop
lret
mov
jo
mov
push
adc
sbbb
sbb
pop
frstor
iret
pop
jbe
mull
shlb
icebp
jmp
shll
test
shl
mov
out
adc
adc
cmp
inc
xchg
inc
popa
inc
int
test
mov
fwait
cwtl
push
test
fidivs
mov
cmp
cld
loope
out
jge
sbb
ror
imul
test
shlb
mov
or
int
inc
nop
push
xor
outsb
push
call
orl
std
rol
jmp
ds
and
aaa
test
out
je
mov
push
daa
in
hlt
mov
cld
mov
fcompl
inc
icebp
jl
xor
insb
js
lock
rcrl
sbb
jns
pop
cmp
fsubs
dec
xchg
mov
xchg
addr16
daa
loopne
aam
mov
sub
adc
lea
add
sub
and
xor
mov
inc
mov
mov
iret
sub
jg
cmp
xchg
sti
in
in
mov
push
mov
jnp
xor
sub
mov
inc
sti
cmp
sub
clc
mov
jp
jg
dec
and
cmpsl
out
fmulp
les
sub
and
adc
push
sbb
movsl
xchg
mov
daa
shll
lea
or
push
inc
mov
jge
scas
pop
pop
inc
add
icebp
jnp
dec
shll
sarl
add
jo
add
xlat
in
push
mov
xchg
pop
fwait
in
stos
add
sub
xor
dec
xor
pop
mov
dec
insb
dec
mov
inc
shlb
sbb
add
sub
pop
ljmp
incb
ljmp
aaa
cmpsb
lahf
cmpl
mov
pop
push
outsb
mov
lds
cltd
adc
add
inc
sbb
add
clc
sbb
mov
cmpsb
sub
mov
dec
pusha
and
fbstp
popf
inc
insl
xchg
fisubs
mov
lea
out
scas
mov
mov
sub
dec
lret
sub
mov
into
fisttpll
cltd
pop
jp
mov
mov
mov
pop
cld
mov
daa
ja
gs
mov
xor
xor
or
xchg
cmc
lea
lret
jns
mov
mov
data16
and
inc
or
xchg
jl
cmpsb
sbbl
loopne
scas
mov
cltd
dec
fs
sarb
js
sub
and
xor
jo
push
sub
lret
xlat
xchg
in
adc
jnp
test
xor
mov
pop
xchg
inc
inc
dec
lret
rol
mov
lds
mov
inc
cltd
test
nop
ret
das
out
adc
pop
push
stos
fildll
pop
call
ret
sti
mov
mov
sbb
or
sti
popf
mov
jecxz
mov
adc
sahf
outsb
pop
mov
iret
aam
push
in
ds
push
and
add
jle
push
push
xchg
dec
test
mov
cmp
pop
sar
int
or
mov
jo
cltd
outsb
das
mov
cmpsl
xchg
xchg
jg
in
je
in
daa
sub
scas
sub
sub
cmp
pop
dec
xor
xchg
inc
push
fnstsw
jge
mov
cmc
and
or
pop
mov
push
xor
sbb
jmp
fadd
gs
add
dec
lock
jne
push
addb
rclb
push
jnp
insl
testb
roll
cli
xorb
xor
inc
jns
mov
mov
pop
and
and
jns
and
test
rcrl
push
xchg
xor
das
mov
and
fidivs
cmp
lds
cltd
into
sub
push
das
int3
mov
sbb
mov
addr16
lods
xchg
testl
sub
outsb
jae
pop
loope
ljmp
add
std
inc
inc
adc
and
add
sbb
inc
ficoml
jle
cmp
cmpsb
cmp
loope
pop
je
push
aam
clc
add
fsubl
adc
add
imul
xor
iret
fdivrs
stos
fidivs
stos
jno
inc
lods
pushf
and
adc
xor
mov
loop
ja
sbb
pop
xchg
and
push
movsb
push
dec
cmp
or
scas
leave
insl
mov
cmpl
push
movsl
lods
inc
adc
jno
inc
sub
fdivrl
or
dec
imul
int3
shlb
lahf
out
in
repz
cmpsl
pop
jmp
adc
dec
cmpsb
and
aas
cwtl
mov
and
mov
xor
push
fucomip
dec
jns
fsubl
sub
inc
ja
lea
cmp
dec
lcall
xchg
ss
push
ret
cmp
sbb
push
insl
ljmp
test
pop
movsl
icebp
xor
mov
inc
out
mov
lods
fisttps
popa
mov
lods
ret
les
rclb
dec
inc
scas
fistps
inc
fdecstp
sbb
int3
outsl
or
sahf
pushf
xchg
and
xor
xchg
sub
push
call
cmc
push
xor
cmp
ds
and
movl
aad
pop
stos
out
gs
out
or
xchg
test
jb
xchg
push
push
sbb
out
sarl
mov
addr16
or
mov
xor
add
push
ss
sbb
int3
in
mov
cld
js
jae
sub
mov
je
adc
or
jg
sub
notb
out
cwtl
xchg
inc
imul
out
outsb
and
andl
mov
xchg
cmp
int3
jb
cmpl
int3
cmp
cmc
sbb
cmp
lret
and
pop
in
push
push
xchg
adc
push
push
xor
stos
adc
test
testl
shrl
dec
aad
push
test
mov
add
push
cld
adc
test
mov
gs
jns
jle
mov
mov
mov
cli
stc
imul
in
fstps
ret
xor
mov
neg
lret
mov
xor
xchg
and
pop
ja
mov
push
mov
addl
cmp
in
outsl
jge
sub
push
fstpt
and
in
popa
mov
inc
add
push
pop
lahf
stos
in
mov
dec
fcmovbe
xor
mov
std
jne
dec
stos
loope
int
fs
fimuls
jp
xor
aas
fimuls
cmp
lahf
loopne
outsb
js
or
inc
fwait
jne
popl
mov
push
inc
fdivrl
int3
scas
add
fcomps
int3
adc
imul
and
shlb
xchg
mov
je
icebp
sbb
cltd
aam
adcb
jmp
cmp
inc
rolb
cwtl
xchg
std
jecxz
int
xor
sbb
les
sub
inc
adc
push
je
cld
popa
aas
nop
adc
xchg
iret
push
mov
loope
sahf
pop
cmp
cmc
pop
jns
rcrb
sbb
pop
pop
cmpsl
mov
ret
dec
push
inc
loopne
jbe
mov
cmp
push
xchg
pop
or
xchg
mov
push
addl
xchg
and
pop
adc
in
popa
cwtl
add
push
out
imul
in
sbb
lock
push
add
jne
das
loopne
push
bnd
lret
xchg
pop
sahf
push
dec
and
push
jno
jmp
stos
mov
daa
push
dec
sbb
jmp
cmp
shll
shl
push
mov
pop
sub
imul
sub
cmpsl
jg
xor
push
cli
fisubrl
inc
cld
or
adc
scas
hlt
cmpsl
pop
out
jecxz
bound
movsb
xchg
mov
mov
movsl
cmpsb
sbb
fldcw
xor
sub
leave
lret
inc
add
lahf
pop
in
push
push
push
sub
gs
dec
and
dec
into
mov
xor
je
and
out
loop
sbb
mov
lret
jne
aam
and
mov
lahf
mov
lcall
jo
adc
mov
inc
pusha
arpl
or
xor
adc
inc
push
sbb
push
sub
aas
pop
cmp
mov
mov
cmp
mov
jno
test
cmpb
push
cltd
add
mov
inc
or
cmpsb
in
adc
in
test
ljmp
lds
dec
cs
sbb
orl
loopne
fistpll
dec
incb
popf
stc
cmp
xor
mov
adc
jne
test
ljmp
push
dec
inc
pop
aam
orb
add
inc
xchg
jnp
xchg
scas
sbb
xchg
push
add
pop
testb
jle
sahf
cmpl
shrb
pusha
mov
inc
add
mov
shl
jb
outsb
mov
insb
xlat
inc
dec
fwait
es
fsubp
or
repz
mov
jecxz
xlat
xchg
push
lret
sbb
or
dec
push
dec
mov
mov
xor
popw
lahf
sarl
pop
xchg
or
and
pop
xor
cli
sbb
or
mov
xor
movsl
cmpsb
cmpsb
roll
stc
sub
cmp
incb
add
add
scas
mov
add
hlt
ljmp
or
les
xchg
popf
repz
sahf
inc
stos
ljmp
mov
dec
add
stos
dec
mov
xchg
outsl
inc
std
test
stc
imul
push
push
add
xchg
mov
ret
mov
dec
mov
jb
aam
mov
jmp
faddl
sbb
fwait
xchg
mov
push
cmp
popa
pop
xor
sarl
js
pop
jecxz
stos
jmp
jecxz
in
add
pop
sbb
in
ret
cli
out
sub
push
push
scas
jne
test
scas
jge
jg
lods
movl
sbb
les
lret
sub
xchg
lret
aas
cmpb
lahf
add
sar
lock
out
or
push
mov
rcll
or
sub
cmpsl
rcrl
out
mov
movsb
push
mov
mov
push
cmpsb
pop
push
call
jg
aad
sbb
stos
xor
movsl
push
fimull
push
mov
sbbl
inc
inc
xor
mov
or
insl
xor
fnsave
dec
mov
sbb
test
xor
jo
add
xchg
dec
dec
aad
cmpsb
cmp
xor
lahf
push
cmp
adc
xchg
movsl
sbb
fiadds
scas
and
das
cmpb
inc
dec
in
adc
or
add
and
in
int3
scas
mov
and
jb
mov
fxch
data16
cmc
add
adc
pop
jmp
dec
or
add
orl
fsts
testb
sub
and
dec
sub
sar
gs
xchg
adc
sarb
cld
add
test
repnz
jno
and
pop
mov
push
call
jge
insb
add
rcr
mov
add
testb
mov
lcall
cltd
hlt
xor
jle
and
int
inc
mov
imul
imul
sbb
inc
mov
stc
faddl
push
popf
ror
fnstenv
mov
lds
pop
mov
mov
das
push
pop
cwtl
mov
mov
jb
in
jno
sbb
mov
es
and
push
jno
popf
cmp
jns
sbb
test
adc
cmp
or
jns
repz
aad
cmp
mov
call
adc
inc
adc
and
sbb
sub
test
cwtl
aad
push
shr
inc
in
les
push
mov
fwait
adc
jg
in
pop
ret
enter
data16
xor
adc
push
or
test
mov
sub
in
xor
shrl
cmpsb
pop
xchg
pop
mov
or
lret
decl
test
aad
jl
xorl
and
in
hlt
in
icebp
cmp
adcb
dec
mov
jl
adc
fsubs
pop
imul
lock
insl
jl
addr16
loop
das
jge
pusha
sub
adc
repz
gs
adc
and
sub
push
xchg
xor
movsl
cmp
pop
mov
iret
mov
icebp
pop
sub
mov
cltd
dec
je
pop
pop
xchg
mov
cmpsb
xchg
sub
dec
repz
iret
cmpsb
adc
subb
and
xor
xchg
adc
inc
idivb
sub
pop
lods
add
cltd
mov
test
push
in
mov
sub
and
xor
fsubrl
push
push
lea
jno
lahf
pop
dec
in
or
addr16
stos
sbb
pop
xchg
mov
and
movsb
pushf
je
shrb
or
mov
movsb
lea
into
fadds
fcomi
dec
inc
test
clc
cwtl
mov
inc
mov
imull
fisubl
sahf
ror
inc
cmp
scas
lahf
fsub
or
cmc
cmpsb
enter
scas
push
cmpsb
loope
pop
daa
ds
dec
imul
iret
pushl
push
xor
into
cli
adc
enter
mov
sbb
js
jno
cmp
mov
test
sub
mov
mov
and
xchg
sbb
pop
lods
sbbb
xor
sbb
mov
jns
call
pop
clc
fists
xchg
xor
adc
jmp
push
std
inc
test
rcr
and
pop
cmp
push
leave
rcl
sarb
movsl
adc
repz
in
push
jno
in
out
mov
jl
push
sbbb
leave
nop
mov
push
mulps
jge
sub
ja
js
sub
jp
inc
adc
cmpsl
nop
je
in
orb
cmp
lods
ret
int3
mov
jge
mov
mov
ret
loopne
fcomip
sub
addr16
mov
in
mov
dec
loope
outsl
push
mov
xchg
xor
add
inc
mov
fdivrs
cmpsl
sbb
cmp
gs
inc
mov
sbb
adc
dec
lock
push
out
rorl
xlat
mov
mov
sbb
pop
cmp
mov
dec
rcl
int3
aad
jmp
push
or
into
mov
mov
sahf
dec
lock
mov
enter
mov
lret
mov
inc
and
nop
pop
add
movsl
jge
out
xchg
cmp
mov
fdivrp
imul
push
and
push
or
lea
cmp
xchg
jno
call
repz
jne
xchg
popf
adc
dec
xlat
dec
pop
testl
inc
repz
mov
shl
xor
clc
cmc
aas
pop
loop
ficomps
jne
mov
out
pop
pop
add
mov
pop
lret
pop
add
pop
add
mov
test
sarl
loopne
dec
push
jne
xchg
int
fmul
test
fcompl
inc
shll
push
lea
mov
lcall
push
les
int3
pop
popa
pusha
cmp
sbb
sbb
jmp
dec
pop
sub
inc
sbb
sar
dec
sub
out
gs
adc
mov
mov
mov
fldcw
inc
push
outsl
mov
stos
or
pop
xlat
add
into
sub
negb
scas
incb
and
xor
cld
push
insb
dec
add
out
dec
sahf
mov
pop
daa
inc
iret
negl
mov
subl
inc
mov
mov
xchg
fistpl
shrb
rcl
cmp
sahf
mov
aas
adc
movsl
movsb
rorl
loopne
adc
push
dec
xor
xchg
js
sub
push
add
push
push
or
cli
fimuls
sub
fisubrl
fs
or
jmp
loopne
jg
pop
xchg
xor
xor
pusha
fcmovu
lock
inc
mov
adc
rol
xlat
sbb
push
out
push
mov
sub
lahf
js
mov
push
iret
sub
pop
ret
jmp
js
loop
test
subl
scas
rcll
dec
dec
into
outsb
mov
pop
out
add
mov
push
mov
adc
movsl
and
push
pushf
pop
or
mov
push
or
mov
enter
dec
adc
sub
push
mov
int
loop
and
shr
pop
pusha
jl
mov
or
mov
mov
inc
daa
aam
and
insb
out
das
loop
push
jns
or
and
xor
jmp
xor
movsb
pop
ds
nop
or
pop
fwait
xor
stos
ljmp
pop
clc
sub
out
bound
inc
out
xchg
xchg
sub
movsb
add
xchg
sub
aad
push
push
movl
cmp
mov
dec
hlt
xor
adc
jle
sbb
push
rcrb
adc
cmp
and
sbb
scas
outsl
push
outsl
daa
add
xchg
imul
cmc
imulb
or
loope
mov
stc
ja
pop
pushf
cld
andl
or
push
mov
lock
or
or
mov
test
pop
inc
js,pn
scas
dec
lret
pop
scas
dec
or
test
insb
cmpsb
mov
pop
test
pop
ror
dec
lcall
mov
outsb
lock
pushf
into
jle
adc
loop
int3
xchg
lods
hlt
xchg
ficomps
sbb
in
fcomps
cmc
sub
push
mov
divb
dec
cmp
mov
or
pop
pop
or
and
add
outsb
cltd
mov
divb
stos
imul
pop
cmp
aad
stc
cmp
ljmp
and
pop
pop
loope
insb
sub
insl
jle
inc
out
jecxz
mov
xchg
xlat
mov
xor
sub
pop
in
fstpl
loop
cmpsb
enter
mov
mov
cmp
sbb
cwtl
enter
cmp
mov
sti
ret
or
in
pop
or
lea
cmc
test
outsl
xor
adc
movsl
in
cmp
adc
jg
mov
idivb
iret
push
unpckhps
xchg
adc
xchg
xchg
add
mov
leave
push
movsl
jl
call
pusha
mov
in
and
jo
push
sub
stc
sbb
nop
pop
or
aam
mov
jb
mov
repnz
sbb
aam
aad
xor
or
mov
sti
lret
pop
adc
pop
shl
sbb
xchg
mov
jno
call
push
mov
jmp
inc
xor
daa
insb
ljmp
movsl
xor
inc
sahf
stos
cmpsl
or
int
imul
cmp
push
jecxz
daa
lods
outsl
sbb
pushf
add
jecxz
daa
insl
inc
lds
mov
sti
popf
xchg
pop
jmp
ja
xor
cmp
sbbl
daa
in
fcmovb
scas
or
fwait
jbe
mov
adc
inc
enter
cmpb
jne
lcall
jg
stos
mov
and
shll
test
xchg
inc
rcl
jns
inc
fnstsw
dec
stos
cli
jle
jbe
in
push
cwtl
push
lea
roll
dec
xchg
out
push
adc
inc
mov
clc
push
and
popa
adc
jg
mov
rolb
ret
ss
jp
and
mov
cmpsb
mov
lahf
jb
add
ljmp
test
cmp
mov
loope
mov
adc
mov
lea
add
stos
adc
fisubrl
push
push
aam
outsl
test
xor
incl
lret
mov
mov
inc
cmp
loopne
jp
daa
fwait
decb
adc
push
pop
dec
push
lret
dec
dec
push
xchg
jl
pop
push
mov
jp
xor
push
ss
scas
fidivrl
pop
and
sub
cltd
scas
lods
adc
int3
dec
jl
pop
insb
push
pop
pop
xchg
lret
call
pop
daa
and
addr16
bt
fs
icebp
cmp
inc
bound
adc
stc
scas
xchg
mov
add
mov
push
inc
out
pmulhw
pushf
das
dec
pop
aaa
loopne
dec
stc
add
imul
cmp
out
xchg
outsb
js
xchg
lock
or
jns
or
jp
pop
imul
inc
jbe
jl
dec
mov
push
push
adcb
int3
pop
pop
jecxz
insb
dec
fldt
mov
mov
pop
or
lahf
sti
call
hlt
ss
jo
sub
pop
adc
sub
push
cmp
mov
rorb
pop
enter
xor
cmpsb
test
xchg
jnp
aad
aad
cmpl
add
in
scas
enter
sub
mov
inc
in
sbb
je
outsb
shrb
bsf
insl
adc
sti
sub
pop
dec
inc
ret
jg
ljmp
add
sbb
mov
enter
andl
orl
rcrl
subb
xchg
daa
xchg
xor
or
out
xchg
push
pop
mov
mov
adc
mov
je
addl
lea
pop
xor
cwtl
xlat
mov
sarl
sarb
lea
out
dec
add
xchg
mov
mov
ds
mov
lea
or
cwtl
fwait
loop
test
lret
jmp
lea
or
xchg
out
enter
or
inc
or
inc
push
xor
adc
lea
hlt
fstps
or
add
inc
ret
pop
or
out
xchg
aas
xchg
dec
gs
jne
popa
or
cmp
insl
inc
and
insb
int3
xor
in
or
scas
dec
mov
pop
scas
aas
mov
mov
or
fistpll
lret
sub
mov
movsl
pop
repz
arpl
xchg
push
xor
cmp
es
mov
sbb
out
gs
dec
out
call
mov
pop
and
enter
pop
pop
mov
pop
je
add
pop
jnp
in
jb
mov
push
pusha
sti
imul
dec
imul
add
out
call
cmp
sub
aaa
out
pop
and
ljmp
adc
lock
nop
jbe
repnz
or
rclb
insb
test
int3
mov
adc
sbb
orb
fwait
jnp
jg
aad
push
ja
leave
call
inc
sub
sbbb
dec
hlt
ss
pop
adc
and
in
imul
push
subl
pop
dec
mov
rclb
icebp
inc
or
push
out
or
cmpsb
or
loop
mov
jbe
imul
xor
and
mov
jne
ss
outsb
push
mov
in
inc
and
les
add
pop
call
outsb
in
popa
stos
inc
inc
out
xchg
sub
nop
dec
sub
and
mov
icebp
or
mov
inc
push
dec
cmp
popf
popa
sbb
or
test
fxch
xor
popf
test
das
mov
mov
and
jnp
jne
cmp
and
lea
xchg
dec
mov
loop
movsl
in
sbb
lock
enter
xchg
ja
adc
bound
shr
repnz
lock
adc
cmp
in
cltd
fmull
inc
pop
enter
sbb
pop
xor
out
leave
and
mov
push
nop
pop
mov
fxrstor
or
or
xchg
xchg
hlt
dec
push
repnz
and
mov
or
sub
pop
ljmp
jb
push
push
adc
jno
and
pop
mov
pop
jb
cld
fs
mov
fistpl
adc
mov
lds
pop
xor
insb
inc
jbe
pop
xchg
test
out
mov
loope
push
sbb
xor
sarb
inc
int
lret
or
in
mov
fisubl
pushf
or
jle
fwait
jle
add
xor
xlat
mov
dec
or
pusha
into
or
loope
mov
scas
jne
sbb
mov
push
push
adc
sbb
fisubrs
jl
shl
add
sbb
xchg
push
sbb
xor
xor
aad
es
aas
sub
in
jmp
dec
std
or
out
adc
loop
outsl
and
mov
mov
popa
push
mov
cmp
fnstenv
mov
cmp
jmp
cmp
in
push
out
lods
loop
sub
xchg
mov
outsl
iret
xorl
test
cs
mov
pop
leave
and
xlat
dec
fstl
daa
pop
jge
jg
repnz
cmp
jle
shll
aas
std
popa
jle
stos
push
pop
mov
mov
divb
xor
test
adc
jno
icebp
jle
push
mov
pusha
or
adc
popf
cmpsb
dec
in
inc
pop
in
dec
jp
or
enter
fisubrl
fcomps
dec
xchg
ljmp
or
mov
inc
and
push
decb
cmp
mov
mov
inc
nop
jge
mov
pop
movsl
push
adc
fldenv
test
jns
test
jo
mov
test
xor
pop
rcl
addl
adc
in
xor
pop
aad
adc
jg
shll
xchg
scas
cld
inc
arpl
adc
xchg
aas
fstpl
mov
push
repz
dec
cwtl
imul
imul
popa
daa
mov
cmpsl
jne
in
dec
imul
fists
pop
push
scas
mov
inc
jl
cli
mov
push
fwait
pusha
or
mov
dec
stc
mov
mov
jmp
mov
adc
fidivl
popf
popa
fwait
rcrl
adc
jb
aad
pop
inc
push
addl
adc
pop
xchg
das
shrb
loopne
dec
hlt
int
cmp
cmp
lret
push
rclb
adc
xchg
insl
adc
mov
push
fsubrs
push
jno
stos
mov
shll
popf
adc
jbe
or
addr16
rolb
push
jno
dec
inc
fidivs
nop
push
aam
aas
scas
cs
fistps
push
dec
inc
mov
popa
cmp
in
test
out
psadbw
aaa
sbb
add
das
mov
lods
mov
cmp
mov
cmovle
or
cld
rcll
int
xchg
cmp
mov
sbb
cltd
cmp
xchg
xchg
xor
dec
outsl
jae
sahf
mov
pop
xchg
int3
data16
ja
adc
sbb
pop
sar
xchg
movsl
jns
xlat
iret
int
sub
addr16
nop
xchg
inc
lcall
pop
lods
sub
sbb
inc
in
decl
mov
sbb
test
or
and
lcall
or
in
sub
jecxz
push
aam
fisubrs
pop
lods
jns
jecxz
mov
cwtl
push
cmp
andb
jae
imul
jge
pop
fs
in
mov
mov
adc
mov
in
sub
shrd
xchg
push
push
ret
in
out
dec
and
mov
and
fcomps
xor
dec
leave
dec
add
sbb
jbe
and
jecxz
imul
push
mov
add
mov
push
mov
imul
cmp
xor
pop
leave
lret
loopne
sbb
pop
cmp
fisubrs
aas
xchg
adc
enter
add
gs
cmp
enter
imull
pop
sbb
xlat
lods
pushf
pop
jo
fisttps
push
stos
roll
push
mov
repnz
sarb
xchg
outsl
orl
cwtl
icebp
push
and
iret
and
pop
cmpsb
cmc
and
push
test
or
xchg
mov
lea
cmc
mov
pop
sub
push
jp
jno
add
add
adc
in
xchg
aaa
dec
mov
mov
push
mov
xlat
inc
aad
movsl
das
cmpsl
xchg
data16
mov
sbb
ficomps
ja
fiadds
pmovmskb
fwait
out
mov
dec
into
xor
jmp
cmpsl
lahf
adc
jno
lahf
or
aaa
stos
mov
cmpsl
dec
xchg
cmp
je
cmpsb
icebp
shrl
pop
dec
nop
test
jo
push
dec
mov
mov
shrl
inc
cmp
adc
jg
xor
repnz
xor
imull
xlat
push
push
cmp
call
sub
icebp
daa
movsb
lds
sahf
dec
xchg
inc
xchg
mov
dec
loop
pop
xchg
mov
pop
or
jecxz
rcrl
enter
cmp
aad
jl
movsl
xor
add
sbb
lret
sub
into
jmp
sub
shl
jecxz
mov
scas
cmpsb
mov
mov
xor
sbb
leave
ja
adc
inc
orb
dec
mov
cmp
ds
fildl
ror
lods
pop
xor
loop
sbb
in
enter
jmp
ja
add
popf
pop
scas
fnstenv
sbb
addb
or
pop
arpl
ds
scas
jb
add
jbe
push
jne
outsl
or
push
idivl
mov
dec
mov
pop
jno
dec
cld
and
pop
mov
inc
mov
adc
mov
jne
mov
fistpll
mov
stos
mov
addr16
cmc
cmp
xchg
jnp
fisttpll
int3
inc
jl
repnz
xchg
xor
in
add
call
adc
add
adc
xor
cmpsb
jo
sub
mov
pop
sub
add
cmpsb
xchg
fcmovbe
adc
and
mov
mov
popa
imul
test
jecxz
hlt
jp
or
mov
repz
pop
cmp
jae
movsb
cmp
cvtps2pd
cwtl
fiaddl
jmp
inc
pop
fisttpl
iret
inc
adc
loope
inc
mov
ret
push
pop
out
pusha
in
dec
in
dec
sbbb
add
xchg
insl
xlat
push
cmc
or
sub
mov
rolb
xor
push
mov
dec
repz
repz
mov
lock
repnz
jo
subb
jns
and
jge
popf
mov
and
jno
ret
cmp
fdivl
inc
pop
out
jb
dec
clc
fwait
cltd
pop
call
mov
mov
dec
xor
imulb
fidivs
test
xchg
mov
es
lret
jg
push
cs
sbb
mov
jbe
es
ret
dec
dec
pusha
lock
or
pop
gs
and
aaa
sbb
xor
mov
leave
adc
sbb
or
add
pop
sti
pop
jl
jecxz
or
js
mov
xchg
dec
mov
mov
mov
insl
mov
cmc
add
test
jl
cmp
lock
inc
cmp
xchg
testb
dec
scas
stos
lret
nop
fisttpll
jle
and
or
fisubs
pop
movsl
loopne
dec
fidivl
cmp
mov
adc
outsb
mov
sarb
inc
test
imul
pop
inc
ret
daa
cmp
mov
les
mov
shlb
pop
push
dec
mov
pop
and
sarb
bound
outsb
push
push
push
push
pop
or
cmp
and
cli
mov
dec
jle
lret
outsl
in
loop
cmp
popf
inc
lahf
in
in
jbe
sub
push
xor
mov
mov
mov
jmp
cmpl
adc
test
jno
jbe
or
cld
rcrl
scas
push
fiaddl
push
xchg
sub
mov
and
lea
lds
fisttpll
mov
setns
xchg
popl
ds
xchg
inc
mov
nop
loop
mov
sti
or
std
mov
adc
add
xchg
push
push
mov
mov
push
arpl
inc
int3
inc
jae
scas
mov
nop
xchg
cmp
popa
out
push
cli
adc
bt
std
jge
call
mov
std
aaa
ret
mov
push
inc
idivl
adc
pushf
es
sub
jp
pop
das
rolb
ja
aaa
enter
enter
bound
jo
and
sub
sahf
gs
inc
and
aam
sub
cmpsb
imul
pusha
dec
andl
rol
aas
push
dec
xchg
out
cwtl
mov
add
pop
aas
mov
insb
pop
sbb
stc
xor
sub
out
pop
jp
or
fwait
dec
lret
es
fcom
jle
lea
out
gs
sub
daa
out
stc
insb
cmp
xchg
fcompl
stos
data16
push
push
add
pop
mov
daa
jl
add
mov
gs
inc
push
dec
add
mov
in
js
add
push
fstpl
mov
enter
adc
adc
cmpsl
aam
add
lods
sub
std
sub
cs
stc
test
call
shll
scas
std
decb
out
or
xchg
jl
fistpll
sub
push
fnstsw
and
push
icebp
fwait
lods
pop
sahf
dec
popf
mov
out
fstl
imul
or
fwait
repz
jnp
adc
adc
xor
fisttps
push
aas
xchg
push
push
xor
and
pop
jbe
or
jp
cmpl
dec
push
adc
sub
inc
sarl
push
mov
mov
lods
bound
aaa
push
xchg
arpl
xchg
inc
clc
lea
mov
lret
xor
or
aas
sub
imul
inc
mov
cld
pop
jb
jp
push
and
xchg
pop
xchg
xor
and
lods
fbstp
scas
mov
jmp
test
cmpsb
jp
xchg
lock
jge
fnstcw
js
dec
mov
xor
addr16
dec
cmp
test
mov
or
stos
ret
pop
add
insl
push
pushf
xchg
cmp
xchg
imull
lret
jae
fmull
lahf
movl
dec
stc
mov
pop
mov
sbb
sbb
sbb
cmp
xor
testl
mov
lods
push
xchg
xor
push
ret
out
popf
int
movsl
ja
nop
sbb
sbb
in
cmpsl
or
push
arpl
lods
pop
sahf
cltd
push
mov
pop
mov
sub
popf
cmp
cmp
imul
in
jecxz
mov
loop
insl
inc
out
xchg
test
sub
lret
cmp
add
flds
ja
dec
movsl
jb
call
or
fisttpl
clc
jecxz
shrb
scas
inc
sti
aas
xchg
adc
mov
sub
dec
movsb
pop
outsl
pusha
repz
out
xor
lahf
es
mov
lea
jl
jg
mul
int
stos
ficoms
cmpsb
jecxz
and
popa
cli
mov
movsl
icebp
movsb
mov
xchg
add
cmp
add
adc
shrl
inc
outsl
es
pop
repz
stos
lods
or
daa
sub
imul
daa
sbb
fcomip
mov
imul
call
mov
leave
scas
pop
fldl
lods
xor
int
shl
push
dec
cwtl
cmp
xchg
leave
cmp
push
repnz
mov
push
cmp
inc
cmp
mov
into
pop
jo
xchg
xor
adc
xchg
ss
movsl
adc
outsb
xor
fsts
push
mov
mov
sbb
mov
jecxz
addb
add
outsb
xchg
xchg
xchg
hlt
in
inc
arpl
pop
les
stos
jge
insb
jmp
pop
push
adc
push
pop
dec
push
out
into
mov
jnp
jnp
subb
inc
sub
adc
clc
pusha
lods
dec
sub
into
daa
mov
mov
fs
cmp
fstp
lahf
test
jb
jl
popa
lea
push
cmp
ss
sarb
dec
mov
jo
dec
mov
jns
cmp
fstl
int3
xor
lcall
fsub
or
xor
jne
pop
movsb
cmpsl
ljmp
mov
ja
push
ret
jae
fidivl
scas
cmp
xor
sar
mov
or
push
lea
icebp
sbb
push
loop
mov
push
xchg
mov
mov
sbb
mov
jns
nop
xchg
pusha
and
inc
mov
mov
fsts
push
std
pop
daa
clc
data16
adc
inc
add
push
push
test
xchg
or
fcmovu
or
outsl
lea
ja
jae
mov
jecxz
js
push
cmp
xor
leave
push
jb
push
movsb
push
mov
lret
das
aad
iret
movsl
and
outsl
scas
gs
int
out
sbb
push
fimuls
loope
jge
lret
mov
cmp
mov
mov
int3
fnstenv
pop
add
ja
fists
xor
fs
nop
push
test
andb
cmp
testb
test
xor
xchg
mov
adc
dec
add
push
push
sub
stc
pushf
cmpsl
push
add
pop
in
add
fstps
test
cmp
push
in
lret
mov
lcall
pusha
lret
sarl
mov
sub
lock
repz
xor
push
int3
fistpll
ljmp
mov
fildl
inc
ljmp
out
or
dec
fisubrs
in
ret
pop
xor
cmp
and
hlt
cmp
dec
fdivp
sub
std
gs
and
idivb
enter
mov
adc
pop
mov
testl
jmp
xchg
xchg
or
xor
mov
and
mov
and
stos
cmc
in
jb
aad
sub
pop
out
repnz
jge
adc
mov
jno
sub
divb
pop
mov
fbld
fdivrl
sbb
sbb
mov
jne
xor
inc
or
pushf
and
loope
cltd
inc
int3
push
mov
shl
je
adc
jne
aam
mov
mov
movsl
adc
rorb
jl
test
lods
sub
aaa
sti
sbb
and
out
add
add
push
adc
out
in
inc
or
fsub
or
mov
mov
mov
lea
ja
lods
cmp
js
aaa
pop
jb
cmp
lock
fnstsw
jns
mov
pop
adc
jne
pop
shll
popf
cld
jmp
bound
xchg
or
inc
bound
mov
xorl
lret
imull
push
loope
mov
mov
cmc
push
add
mov
shl
arpl
and
cli
xchg
inc
cmp
decl
adc
sub
xchg
add
adc
jmp
mov
in
es
test
movb
push
out
cmp
mov
test
aas
cmp
xchg
mov
jle
loopne
inc
push
adc
push
mov
push
sbb
mov
mov
dec
or
scas
or
fsubs
loop
xor
sub
cli
dec
lea
sbb
or
mov
or
cmp
rorl
sbb
inc
imul
lds
dec
cmpsl
xchg
or
push
mov
xchg
cltd
or
fidivs
fcmovnbe
xor
add
divb
stos
aad
jge
jae
sub
add
xchg
es
loopne
sti
sarb
mov
ss
inc
or
clc
xchg
push
sbb
mov
jl
into
jae
pop
stos
cmp
outsl
cmp
xor
ret
aaa
push
cmpsb
cmp
adcb
mov
sub
andb
mov
xor
xorl
add
inc
ljmp
cmpb
mulps
or
shrl
add
mov
xor
test
xchg
push
inc
cltd
arpl
filds
mov
cs
push
cmp
les
test
mov
shrl
adcb
jmp
or
jecxz
xor
ret
imul
mov
sub
pusha
in
mov
inc
xor
adc
lret
cmp
inc
pushf
popf
aam
stos
adc
dec
xor
add
aaa
jge
push
inc
adc
fsubrs
vmwrite
addr16
mov
stos
call
jns
pop
mov
jmp
pushf
loop
rcll
dec
cmpsl
lds
mov
shlb
xor
and
ficompl
inc
pop
fwait
jle
test
shr
dec
insb
sub
clc
xchg
xor
divl
push
inc
out
nop
add
fistpll
jbe
pop
sahf
jns
mov
xchg
jno
jecxz
jmp
push
and
jp
nop
lods
inc
leave
jg
scas
and
andb
sbb
in
xor
cmp
xor
mov
dec
mov
rorl
sub
inc
inc
inc
stc
mov
mov
cltd
enter
inc
out
insb
cmp
xchg
jbe
mov
and
aas
arpl
cmc
jmp
push
ret
pop
fadd
ds
js
and
bound
mov
xchg
xchg
cmp
in
sbb
in
pop
in
in
int3
lods
dec
mov
sub
and
nop
aaa
ret
call
push
ret
in
cmp
mov
dec
lods
xchg
xchg
lret
xchg
mov
lret
je
inc
xor
mov
xor
idivb
icebp
loopne
pop
fisubs
lea
cs
xor
dec
shrb
adcb
clc
lret
cmp
push
mov
push
xor
add
dec
imul
insl
ret
push
mov
imul
repz
outsb
jle
je
mov
pop
bound
mov
stos
mov
lret
stc
and
sub
sbb
cli
in
pushf
add
xor
clc
imul
dec
sbb
out
lcall
dec
push
shl
lret
inc
andl
test
dec
int
and
dec
cmc
dec
scas
dec
xor
test
dec
jmp
cwtl
mov
push
es
sbb
xchg
adc
outsb
movsb
push
mov
test
pop
mov
cmc
jmp
stc
leave
iret
adc
out
push
or
scas
cld
test
cmp
mov
sub
mov
fisttpll
jae
xchg
je
pop
and
pushf
mov
pop
xchg
and
in
mov
pop
mov
scas
shrb
out
shlb
xchg
aas
inc
cmpsb
fnstsw
adc
xchg
and
std
jae
test
jp
and
pop
adc
dec
jnp
negb
enter
mov
fstpt
and
sub
fsts
scas
and
subb
idivb
adc
scas
insl
xchg
lret
xchg
xchg
dec
jl
jecxz
mov
out
sub
lea
ret
in
and
sbb
lret
sub
repz
cli
pop
test
xor
dec
dec
pop
mov
imul
add
add
cmp
jo
fs
sub
test
push
fcmovne
aad
cmpsb
int3
mov
jne
iret
xchg
js
data16
jo
xor
mov
call
test
mov
pop
incb
mov
mov
xor
mov
ret
popf
mov
jle
cli
lods
cmp
sbb
push
inc
cmc
outsb
pop
lods
or
mov
mov
or
pop
push
cmp
lds
aam
ds
adc
in
fcoml
loope
aas
fldcw
cmpsb
adc
pushf
pusha
mov
out
mov
imul
rorb
sbb
sbb
mov
test
and
lret
test
or
cmpsl
and
jl
cmc
clc
sub
test
mov
add
mov
leave
inc
mov
lcall
testl
jb
mov
fidivrl
cmpsb
lret
imul
movsb
mov
insb
lds
push
mov
xchg
call
aam
into
push
mov
mov
test
push
add
cwtl
shrb
push
stos
nop
push
sarl
mov
addr16
shrb
inc
aad
sub
and
fbld
jg
test
mov
pop
jmp
dec
cmp
imulb
cs
es
xlat
sbb
jg
out
ljmp
push
ror
push
or
xchg
mov
jl
ficomps
mov
push
sbb
test
cld
cmp
in
inc
test
xchg
fnstenv
jb
in
sub
insb
int
ljmp
xchg
data16
cwtl
lret
add
movsl
push
je
roll
icebp
shll
dec
pop
mov
and
xorb
ror
jmp
pop
dec
mov
xchg
add
pop
xchg
test
popa
es
cmc
push
lahf
stos
mov
dec
lret
inc
cmpb
outsb
add
test
cld
jp
or
push
xchg
imul
enter
mov
xor
mov
mov
or
jmp
add
mov
int
sbb
mov
cmc
lret
arpl
mov
addr16
pop
js
ljmp
lods
pop
popa
jg
loopne
lea
jecxz
test
mov
xchg
stos
and
std
pusha
xchg
sub
shrb
and
pop
push
hlt
jo
xor
jg
arpl
sbbb
push
cs
jo
loopne
dec
cli
imull
mov
dec
pusha
xor
and
pop
mov
shr
insl
mov
cltd
mov
stc
jno
mov
mov
adc
es
neg
add
dec
fisttpl
xor
jmp
int
test
in
add
imul
aad
ja
rorl
or
rorl
stos
add
nop
xor
insb
inc
or
and
out
loope
mov
bound
cmp
iret
xor
mov
dec
mov
cmp
dec
and
mov
ss
xchg
je
xchg
xor
or
lock
ss
dec
sbb
call
cmp
inc
pop
or
enter
mov
lea
inc
fistps
repnz
shr
les
or
ret
mov
sbb
shlb
addr16
lret
not
sub
shrl
outsl
aad
or
addr16
jnp
or
mov
and
andl
mov
sub
enter
int
jecxz
addb
call
pusha
cmp
dec
sar
xchg
sarb
inc
xchg
xor
push
enter
adc
sbb
loop
or
pop
pop
jbe
rcr
dec
aam
scas
mov
jp
mov
shl
mov
fs
push
popf
mov
aam
testb
js
jns
fs
mov
add
insb
in
xchg
les
jecxz
fistl
movsl
movsl
xchg
dec
clc
push
rorl
int3
xchg
adc
repz
cli
in
pushf
lret
dec
hlt
dec
call
sbb
int
fistps
sahf
pop
jno
into
jno
and
pop
mov
or
cmp
mov
sbb
xor
shrl
out
mov
mov
jge
shll
mov
dec
decb
xor
push
dec
ret
mov
iret
jne
outsb
pop
rcl
xorb
xor
leave
lret
out
lret
cmp
mov
das
push
sub
push
pop
mov
adc
xor
out
sarb
sahf
lret
adc
out
xchg
xor
in
and
mov
dec
jb
inc
popa
in
push
dec
add
jg
out
jl
pop
fldl
xor
pop
lds
push
cmpsl
cmp
js
adc
je
xlat
xorl
xor
sti
sti
mov
mov
loopne
or
insb
dec
js
sbb
lods
mov
fcmovbe
leave
daa
or
ror
cmc
mov
inc
cli
jp
es
push
mov
or
cwtl
xor
mov
sub
mov
pop
insl
mov
cmpb
jne
int
pop
fstpl
pop
loope
inc
mov
mov
loopne
cmp
cmp
inc
jge
pop
dec
lea
xor
dec
lds
dec
mov
or
adc
add
aas
nop
dec
daa
xor
into
xchg
or
add
cmp
and
outsb
or
push
pop
mov
mov
mov
pop
ret
test
add
jle
mov
fs
clc
shl
dec
xchg
xchg
jae
inc
hlt
sub
cwtl
imulb
mov
cmc
xlat
jo
ja
push
scas
inc
cmpl
dec
pop
jle
sahf
cmp
ljmp
sbb
push
movsl
rorl
shll
je
xchg
xchg
mov
popf
push
and
iret
xchg
fistpll
or
and
icebp
mov
lret
xchg
jecxz
dec
push
dec
ret
mov
cmp
std
mov
mov
jp
jmp
sbb
scas
mov
xlat
cmpsb
push
xor
call
fldenv
insb
dec
xor
jge
xor
or
jne
push
shll
repnz
shr
arpl
sbb
cld
ss
out
nop
xlat
sbb
pop
sbbb
mov
fs
xchg
mov
or
jns
mov
aad
dec
push
push
sub
not
xchg
int
push
xchg
mov
fists
cltd
push
mov
fadds
pop
push
adc
and
daa
sub
or
rcl
pop
fs
mov
xchg
sub
xchg
and
jo
sub
insb
stos
cld
mov
popa
cmpsl
jb
pop
inc
pusha
icebp
add
es
add
push
rorl
or
xor
push
adc
cmc
mov
repnz
jno
mov
jo
insb
stc
add
ret
test
mov
out
or
inc
daa
or
cmpsl
mov
sti
sub
movsb
sbb
pop
inc
xchg
nop
mov
lahf
add
sbb
divb
imul
cli
pop
out
mov
scas
pop
fdivrp
add
mov
cmp
pop
or
std
push
jno
add
mov
sbb
repnz
pop
mov
cmp
jg
push
imul
add
cmp
jbe
movsb
lea
jbe
adc
shll
fdivs
pop
dec
mov
imul
inc
fidivs
or
iret
fsts
adc
push
leave
ret
fdivrs
imul
mov
mov
sahf
adc
cmpsb
imull
push
repz
repz
fmuls
sarb
inc
movsl
lods
push
cmc
jnp
in
xor
cmp
or
movsb
fwait
push
mov
ss
mov
popw
xchg
pop
out
and
sbb
rorb
cs
adcl
pop
gs
push
call
aam
pop
cmp
mov
out
icebp
in
jle
jecxz
sbb
xchg
sahf
js
and
sub
movsl
pop
insl
clc
mov
lods
int
or
inc
xor
inc
cli
bound
mov
pushf
lcall
mov
fnstsw
cwtl
cmp
or
dec
dec
out
js
pop
cmp
sub
js
xchg
jmp
sbb
adc
jno
and
inc
push
cmpsb
je
inc
lahf
scas
ljmp
repnz
pop
mov
adc
insb
mov
adc
aam
pop
jb
xchg
in
jo
subb
xchg
push
shr
pop
cmpsl
mov
repnz
fidivl
mov
loop
dec
popa
sbb
push
aas
imul
cwtl
popl
ror
ret
jno
mov
popf
mov
inc
outsw
fnsave
adc
outsb
pop
call
or
push
cmp
xor
aam
popa
add
xor
sub
ljmp
nop
mov
lahf
movsl
cmp
adc
jmp
rclb
repz
sub
jbe
loop
je
push
add
fwait
and
sub
cmc
mov
push
repnz
cs
outsl
mov
lods
or
sahf
shl
je
into
xchg
movsl
jmp
ret
les
es
sub
jae
dec
js
cmpsb
inc
jg
push
jmp
subb
cld
cmp
xlat
out
pusha
sub
leave
sti
add
push
outsb
or
addb
out
addr16
adc
fldl
aaa
ret
test
mov
test
sbb
in
insl
addb
mov
mov
jbe
subb
pop
and
repnz
inc
sti
fimull
xchg
je
fs
push
fcoms
lahf
test
stos
roll
das
push
repz
popf
inc
jmp
inc
mov
gs
ljmp
xchg
jns
mov
clc
scas
out
mov
xchg
rcll
bound
adc
push
pop
scas
cmp
fsubp
and
insl
outsb
pushf
loope
ljmp
sub
mov
fsubp
push
push
inc
lds
rorl
jmp
ds
mov
add
sbb
cmp
fidivs
sti
mul
xor
mov
inc
jmp
call
mov
cmpsb
push
daa
cmp
inc
dec
xor
aam
loope
fildl
mov
mov
call
stos
test
ja
push
call
into
test
lahf
xor
dec
loope
fisubl
push
mov
and
scas
pop
xor
pop
inc
xor
cwtl
cmp
out
sbb
or
sbbl
daa
inc
dec
repnz
xchg
int3
mov
mov
stc
js
stc
in
dec
pusha
das
jle
jb
cltd
adc
scas
adc
cmp
ret
push
aaa
fwait
add
dec
rcrb
and
inc
cmp
enter
shl
jno
push
adc
insb
orb
mov
jmp
xchg
pop
and
cwtl
add
and
inc
pop
movl
add
push
idiv
jmp
mov
lahf
sbbb
mov
jecxz
test
pusha
enter
dec
aaa
subl
js
push
or
mov
leave
pop
sub
pop
mov
sub
sbb
popf
outsl
sti
iret
call
or
stos
jl
les
pop
and
add
aas
dec
sub
xchg
sub
lds
loop
mov
test
xchg
fst
dec
aas
insl
arpl
pop
loop
ret
xchg
pop
lock
xlat
push
jb
add
andl
jecxz
mov
shrl
adc
xchg
mov
popa
sub
jl
mov
push
cs
fsubs
mov
mov
ds
aam
negl
adc
ret
cmp
pop
lods
push
in
pop
and
ja
in
adc
sub
push
xchg
cwtl
sbb
mov
and
inc
or
lahf
outsb
scas
xorb
inc
mov
fdivrs
xchg
loope
adc
jns
rorl
sbb
jae
ds
rorb
push
mov
inc
pop
fs
sbb
cld
add
inc
cmpsb
nop
inc
add
xchg
fidivl
dec
sub
movsb
fcoml
je
fmull
sub
xchg
fucompp
mov
enter
orl
stos
mov
sarb
divb
inc
inc
sbb
popf
incb
aad
fisubl
adc
fcomps
xchg
arpl
and
imul
jmp
sti
les
out
jl
test
es
xchg
mov
sub
stc
negl
gs
rcll
xchg
mov
mov
xor
push
jbe
or
test
or
jo
xchg
in
lahf
xchg
mov
lcall
and
mov
push
outsb
inc
ljmp
mov
pop
jnp
sbb
mov
icebp
mov
or
test
adc
mov
lret
jnp
int3
popa
inc
scas
sti
pusha
loope
sbb
mov
xor
xchg
xchg
push
mov
add
xor
loop
inc
loop
arpl
hlt
inc
movsl
inc
mov
xor
xchg
xor
sbb
dec
fsubl
bound
or
dec
jmp
pop
repz
sbb
adc
lods
pop
mov
lcall
mov
rclb
adcb
push
jno
push
pop
mov
sub
hlt
or
insl
lods
incb
push
mov
push
int
in
out
mov
push
movsl
andl
jnp
pop
aaa
movsb
adc
inc
test
mov
out
sub
sahf
andb
mov
pushf
dec
cld
inc
je
outsb
xlat
pop
shll
js
jb
push
lcall
push
ret
pop
or
xor
pop
loopne
in
xchg
cmp
rcl
popf
outsb
adc
aad
cld
cwtl
adc
fistps
jg
imul
outsl
shlb
and
push
add
call
lcall
movsb
notb
mov
int
mov
repnz
adc
lahf
inc
in
insl
jmp
jb
sti
loope
stos
and
ja
dec
jno
inc
cli
inc
pop
fchs
adc
xor
or
cmpsb
in
cmp
sbb
aad
call
fwait
bnd
adcl
push
mov
mov
daa
pop
lods
jl
adc
enter
mov
loop
adc
push
dec
out
and
iret
shll
dec
shll
pusha
test
test
cmp
lock
jle
dec
lock
or
andb
xchg
jae
mov
cli
push
mov
push
push
pop
mov
sbb
push
push
sub
xorb
pop
fdivl
fsub
sahf
dec
pop
lods
xchg
mov
pop
cmp
out
scas
mov
push
or
subl
lods
insb
adc
imul
sti
out
pop
add
cli
mov
enter
je
sahf
mov
ja
mov
and
fs
mov
add
jo
in
rclb
and
daa
mov
push
sahf
pop
push
cwtl
mov
lret
lods
pop
in
or
addr16
inc
inc
lret
inc
stos
test
ds
and
and
cs
adc
inc
pop
xchg
popa
std
hlt
xchg
mov
popf
push
arpl
es
arpl
fwait
ja
cmc
push
mov
imul
sti
loopne
jmp
xor
dec
pop
dec
adc
push
dec
scas
loop
sub
xchg
lock
nop
sub
mov
add
pop
dec
dec
pop
repnz
lret
mov
jns
cli
lock
loopne
mov
cwtl
adc
and
shrl
andb
pop
ja
sub
sub
test
jmp
pop
sub
nop
dec
xor
push
jo
mov
fcoml
fsubs
push
cltd
out
ret
or
cmp
fs
test
imul
iret
ret
adc
dec
xchg
incl
lcall
inc
fldcw
ret
add
sbb
pushf
mov
aam
pop
xchg
negl
movsl
outsl
cs
or
mov
data16
mov
xchg
shll
mov
testl
popf
scas
jg
js
push
xchg
mov
ret
xchg
addr16
dec
in
gs
jo
xchg
stos
enter
inc
pop
lret
cli
xchg
mov
or
hlt
insl
cmp
xchg
nop
push
imulb
pushf
in
pop
mov
inc
adc
jbe
fwait
sub
and
in
aaa
movsl
adc
pop
xchg
lahf
icebp
loop
sbb
mov
mov
or
fucomp
int
daa
add
inc
insb
xchg
fiadds
enter
pop
stos
xchg
insb
lret
push
aad
add
fisttpll
dec
out
lea
outsl
sbb
subb
clc
sub
sti
dec
and
les
test
pop
mov
sub
in
popa
leave
std
jecxz
aaa
pushf
mov
and
inc
inc
dec
lods
adc
xor
jo
xchg
es
xor
sbb
mov
cs
dec
sahf
xchg
scas
pop
or
mov
fwait
inc
add
int
xor
add
test
shl
dec
jge
fs
movsl
cmp
mov
mov
shlb
divl
dec
and
inc
leave
scas
and
pop
sbb
cmp
cmp
sub
aas
int
in
out
push
fdivl
cmpsb
jg
xchg
ffree
stc
and
insl
rcrl
mov
xchg
fnstsw
xchg
or
mov
mov
push
xchg
mov
xor
outsb
cmp
aam
mov
stos
sub
xor
les
das
je
movsl
out
adc
sbb
jns
xchg
xor
jmp
xor
jnp
leave
movsb
mov
icebp
jne
out
ds
or
test
sbb
inc
pop
loop
mov
cli
mov
ficoms
mov
inc
repz
arpl
aad
pop
fistl
mov
fwait
addr16
idiv
cmp
ret
test
mov
mov
push
aam
jae
pop
lret
jae
sbb
mov
adc
cmpsl
dec
rol
sub
mov
subb
jmp
jo
and
mov
cltd
and
arpl
roll
xchg
fdivrl
mov
mov
push
pusha
lds
xchg
stos
std
sbb
testl
lods
xlat
mov
adc
push
cmp
je
popa
test
lret
mov
fld
pushf
mov
xchg
sbb
dec
loope
stos
xor
cmpsl
aaa
mov
into
pop
jae
jo
sbb
shrb
sbb
add
in
into
int
stc
push
cli
nop
enter
iret
int3
pop
jge
pop
imul
popf
pop
lcall
int3
adc
adc
or
aaa
hlt
xor
and
es
movsl
sti
mov
popa
sbb
cmpsl
es
xchg
cmc
jns
loopne
das
cltd
mov
xchg
sub
or
xchg
mov
jl
jl
shrl
popl
shr
gs
cmc
and
movsb
ljmp
scas
jbe
clc
sub
loop
addr16
je
outsl
pop
ret
scas
loop
sub
or
adc
nop
outsl
das
xor
lods
and
arpl
lock
subb
mov
sub
call
lahf
loope
xchg
jb
movsl
insb
mov
inc
aam
repnz
push
fs
mov
lods
xchg
les
je
daa
addr16
inc
pop
xor
jae
into
push
mov
xchg
and
sbb
xchg
gs
xor
dec
inc
lret
pop
pop
mov
cwtl
jl
clc
mov
lret
adc
lahf
dec
daa
out
sti
imul
pushf
scas
in
out
inc
gs
sbb
xlat
cmp
pop
fidivl
mov
pop
dec
sbb
loope
cld
mov
mov
mov
mov
xor
pop
and
cmp
call
mov
and
inc
xchg
sub
jge
dec
adc
jno
and
sbb
je
sbbb
push
and
xlat
pop
das
mov
pop
xlat
pop
jg
dec
mov
insl
sub
or
loop
in
sub
rcpps
or
cltd
mov
call
jb
xor
add
jbe
sbb
aas
cwtl
add
rclb
push
sbb
lods
sub
testb
ret
push
adc
ret
or
int
pop
cmp
xchg
mov
mov
out
aas
pop
aas
fdiv
out
and
mov
fnstsw
pop
cmp
xor
cmp
push
cmp
pusha
stos
xor
push
cmp
cltd
int3
movsb
scas
movsl
inc
xlat
pusha
inc
xorl
inc
orl
dec
xchg
jle
scas
and
ja
jg
lods
push
inc
push
xchg
mov
or
xor
fisttps
shll
fsubrl
sub
loope
stc
push
mov
push
mov
test
xor
jmp
dec
mov
and
sub
fcmovnbe
std
sbb
inc
fsubrs
pop
aam
call
cmp
lock
frstor
push
add
sti
sahf
xchg
aad
ret
sbb
sbb
popa
into
mov
sbb
insb
shrl
xchg
inc
and
mov
pop
mov
scas
aam
jns
pop
jl
sub
cs
cltd
cli
scas
adc
cmpl
and
mov
inc
adc
insb
inc
js
sbbb
push
in
sub
sbb
cwtl
inc
xor
popf
sbb
jp
dec
push
ror
repz
xor
jg
leave
lret
push
pop
sub
dec
mov
ja
jnp
aas
jbe
mov
push
add
clc
push
push
jge
fimull
in
add
repz
pop
imul
fisubl
or
mov
adc
clc
fcomp
movb
push
ja
test
ret
subb
fcmovne
mov
jle
cmp
mov
jle
or
jno
mov
xorl
or
add
xor
lock
repz
dec
mov
mov
stc
inc
les
cli
fs
ljmp
lds
mov
aas
addr16
push
aaa
pop
cmpsl
mov
mov
pop
jb
cwtl
movsl
in
push
mov
fwait
add
jns
lahf
xchg
cmp
cmp
sub
xchg
fildll
xchg
das
mov
jg
movsl
lds
inc
and
dec
dec
int
mov
sahf
ret
pushf
ret
mov
xchg
lds
icebp
dec
or
dec
cltd
xchg
xchg
inc
fwait
out
inc
xchg
xor
js
or
scas
stos
mov
sub
jo
in
and
push
push
sbbl
jno
sbb
int3
imul
loope
int3
hlt
push
add
std
adc
and
mov
faddl
pop
out
shrl
cmpl
lahf
mov
outsl
int3
push
sub
inc
sbb
pop
adc
in
xor
popa
and
pushf
or
and
out
pop
cli
pop
enter
cmpsl
inc
dec
xchg
sbb
je
fnstcw
push
lock
push
sahf
jmp
insb
pop
dec
icebp
mov
sub
imul
sub
mov
and
dec
arpl
es
push
sub
jle
ds
xlat
xor
push
pop
fbstp
daa
scas
sbb
cwtl
jne
pop
mov
mov
and
cld
lret
mov
cmpsl
insl
mov
fmuls
outsb
mov
ss
jns
es
push
pushf
push
mov
mov
test
and
lret
lret
inc
push
movsb
jecxz
movsl
mov
sti
push
fdivrl
in
pop
add
dec
xor
das
into
mov
aam
or
xchg
pop
xor
push
cmpsb
jge
popa
movsb
inc
movsb
xchg
test
inc
pop
leave
fiadds
push
imulb
outsb
lret
shl
out
test
mov
fsubr
mov
andps
scas
shll
inc
out
insl
daa
push
adc
fdivl
or
andb
lock
add
cmpsb
fstpt
movsb
sbb
popf
fsub
push
incl
inc
inc
lods
leave
dec
mov
add
pop
in
loopne
sub
xchg
das
cmpsl
mov
mov
xchg
jl
repz
sub
jae
adc
jbe
xchg
sbb
out
bound
and
inc
lahf
shlb
lahf
mov
dec
test
sarl
adc
sub
pop
sbb
push
xchg
aaa
pop
mov
arpl
pushf
dec
in
gs
fwait
into
adc
and
push
mov
test
insl
jl
movsl
cmp
shlb
lods
mov
adc
xchg
adc
jl
lahf
mov
pop
inc
je
xchg
sti
add
dec
ret
jmp
sbb
push
dec
fdivl
push
sub
and
adc
mov
xchg
and
movsb
outsl
pop
xchg
or
test
pop
lahf
xchg
call
in
arpl
imul
mov
ret
iret
cltd
movsb
or
add
in
int
xor
or
cmpsb
inc
jne
dec
loopne
push
and
jp
jno
insl
loopne
loop
repz
jmp
or
bound
sbb
mov
js
xor
mov
cmc
fmuls
das
scas
xor
xor
adc
rcrb
jge
xchg
cmp
xor
push
lods
rcrb
nop
stos
xchg
cmp
cltd
push
fstps
pop
adcl
movsb
push
mov
cmp
xchg
hlt
cmc
lods
sub
sbb
fcomi
fsubl
push
lea
scas
imul
sbb
adc
mov
mov
test
xchg
and
std
scas
sbb
fmul
push
lret
or
pop
cmc
out
push
repnz
mov
push
jbe
sbb
push
or
clc
cmpsl
arpl
sbbb
pop
mov
xchg
pop
cld
int3
iret
cmovle
xchg
loope
cmp
or
fcompl
in
or
lock
jo
lret
mov
cmpsb
push
push
xchg
mov
loopne
add
cmp
dec
cmp
js
mov
sahf
subl
pushf
mov
arpl
dec
sub
in
mov
hlt
sbb
jbe
shrl
repnz
xor
pop
xchg
rcrb
subb
lds
adc
mov
push
add
outsb
inc
dec
fstps
mov
out
insb
sarb
aad
loop
ficomps
push
fldcw
mov
loopne
adc
lret
cmpsl
into
inc
jb
ret
add
and
call
mov
sbb
push
icebp
rcl
pusha
push
cmp
ss
mov
iret
xchg
inc
mov
stos
cmp
xchg
rclb
pop
mov
fmull
xor
pusha
cli
jge
push
aad
aas
xor
repnz
push
sahf
dec
icebp
cs
xchg
clc
aaa
and
cli
pusha
cli
insl
rcll
ds
in
es
nop
xchg
mov
leave
pop
push
std
or
je
adc
aam
push
popf
cmpsl
into
imul
add
lods
gs
mov
mov
adc
sti
fmuls
cmp
jno
les
ds
cs
scas
xchg
cld
dec
sub
and
cltd
cli
xchg
cltd
gs
mov
jnp
scas
jno
sbb
mov
inc
jl
adc
int3
xor
cmp
fwait
mov
popf
stc
outsl
sub
arpl
push
adc
std
int
outsl
ljmp
loop
or
jb
xchg
adc
sub
xlat
mov
shlb
lret
push
xchg
arpl
xlat
dec
jecxz
add
outsl
xchg
cld
adc
ljmp
xchg
imul
in
aas
xlat
xchg
test
int
daa
pop
cmp
js
loope
ljmp
insl
add
pop
inc
loop
out
jno
mov
cmp
or
inc
and
inc
sub
cmpsb
and
mov
sub
mov
mov
pop
sub
in
cmc
movsl
sub
lret
lahf
add
add
inc
movsb
push
adc
pusha
div
mov
std
fstl
sub
sbb
subl
add
jp
mov
sbb
mov
out
xchg
push
sub
jae
push
push
idiv
addl
or
pop
sbb
scas
mov
mov
lcall
icebp
cs
outsb
test
push
jae
cmp
lcall
push
pop
sarl
push
stos
ficomps
stc
inc
jmp
dec
mov
cmp
dec
aas
loope
adc
ds
mov
hlt
lock
sub
mov
or
pop
out
sub
in
sub
adc
out
sub
daa
sarl
pop
mov
cmp
cli
or
sbb
mov
int
imul
mov
cmp
fstp
jmp
out
movsb
pop
push
cmp
pop
dec
arpl
adc
sbb
inc
or
cmpsl
incl
sbb
xchg
mov
loope
in
in
jl
popa
jl
test
pop
lods
or
stos
or
cmp
dec
jno
add
jl
jge
push
cs
repz
or
jecxz
ret
xchg
jge
loopne
mov
jle
dec
les
fidivs
fsubr
cmp
push
int3
fnstsw
jae
lods
mov
pop
push
jne
out
xchg
nop
inc
push
scas
dec
mov
pop
jb
xor
xor
sbb
mov
outsl
fildl
test
jnp
gs
push
js
mov
push
aam
sbb
nop
xor
gs
xchg
push
out
imul
mov
mov
repnz
mov
mov
pop
or
jo
lods
lret
push
into
sbb
fstpt
sarb
sbb
or
in
and
mov
cmpsb
sub
std
mov
out
enter
mov
nop
mov
xchg
sbb
or
scas
or
inc
xorl
xchg
sub
shrl
push
inc
cmpsl
mov
imul
jle
sbbl
movsl
jmp
pop
out
cmp
popf
inc
sub
ja
ds
adc
sbb
es
jo
ret
jb
cmp
mov
adc
in
loop
push
or
xor
into
xchg
inc
xchg
mov
push
aad
scas
pop
in
mov
jo
scas
adc
int3
xchg
test
sbb
xor
adc
mov
in
inc
ret
mov
and
xor
shrl
cmpsb
jne
std
faddl
hlt
in
xlat
mov
or
out
or
sub
in
js
sub
ret
ss
xor
rcrb
out
cmp
movsl
or
mov
xchg
mov
jle
dec
ret
cmp
pop
push
or
cmp
ficompl
pushf
mov
mov
leave
cmc
and
jnp
test
xchg
jb
pop
stos
mov
push
xor
jg
pop
push
js
inc
add
and
adc
mov
enter
fiadds
add
addr16
cld
jg
sahf
popf
andl
push
jb
push
dec
test
or
loop
add
mov
push
jl
push
mov
adc
scas
mov
dec
add
aas
loope
idivb
or
pop
jecxz
ljmp
or
pop
inc
pop
and
loop
test
dec
cmp
or
cld
fnsave
dec
adc
cmp
push
fs
push
int
idivb
adc
and
mov
push
out
inc
subl
xchg
addb
xchg
dec
stos
sbb
ljmp
cli
les
ret
fwait
xchg
inc
into
cli
inc
iret
jns
jns
sbb
or
pop
stc
and
sbb
negl
adc
jb
mov
or
loop
cld
lret
cwtl
cmp
push
jp
jnp
push
insl
movsl
sbb
enter
pop
push
jle
add
jns
add
negl
inc
js
push
in
lcall
stc
inc
push
pop
aam
mov
push
in
mov
xor
pop
es
insl
push
cmp
out
and
jge
jbe
inc
in
jb
iret
jmp
sbb
iret
mov
sbb
dec
inc
or
fdivrs
sub
pop
fisubl
fwait
mov
and
and
mov
mov
scas
dec
sbb
sbb
mov
jnp
not
add
pop
test
aas
test
sti
ljmp
fwait
push
push
adc
mov
notb
imul
sub
das
fidivrl
xlat
cmp
mov
inc
and
mov
sub
ss
test
ret
push
sbb
push
ljmp
mov
adc
xor
pop
jne
scas
gs
lods
pop
add
fwait
dec
mov
lret
jl
or
inc
or
mov
jle
lcall
mov
xchg
jne
adc
fnsave
xchg
stc
mov
mov
loopne
les
loop
nop
push
xlat
push
adc
dec
mov
orl
js
rorb
in
aad
and
fistpll
xor
shll
lahf
add
lock
test
cmp
fdivrp
mov
and
popa
ljmp
loop
sbbl
pop
mulb
std
xchg
pop
add
xor
xchg
mov
shlb
iret
insl
mov
movsl
push
adc
sub
sbb
or
cltd
jle
inc
ljmp
lds
into
pop
stos
inc
fidivs
sbb
stc
loopne
jb
repnz
stos
mov
in
adc
pop
cli
lahf
pop
fidivl
push
jb
mov
add
lret
xor
aas
test
cmp
xchg
imul
pop
inc
xchg
sbb
jg
inc
fnstcw
sub
lahf
and
cmpl
sub
pop
cmc
lea
sbb
or
dec
scas
mov
mov
sbb
decl
and
jb
xchg
add
test
mulb
bound
jo
scas
insl
sti
mov
in
xchg
inc
std
cmpl
or
sub
sbb
pop
aas
test
mov
arpl
sub
cltd
sbb
push
cmc
cmp
out
loopw
pop
out
xor
cltd
ljmp
addb
adc
sbb
cmp
cwtl
scas
mov
cmp
or
sarb
lret
or
jnp
push
push
pop
xchg
ret
or
dec
pop
divl
xchg
sub
les
sbb
mov
bound
es
call
cld
movsb
clc
fidivs
aad
dec
cld
inc
das
jb
pop
pop
insl
hlt
addr16
hlt
pop
jnp
mov
mov
xchg
inc
nop
jo
stos
loopne
pop
std
mov
lods
ds
outsl
lret
inc
xchg
push
xlat
dec
stos
mov
and
mov
mov
sahf
mov
pop
fsubl
mov
pop
xor
movsl
and
mov
add
clc
push
scas
std
or
das
sti
xorl
mov
sub
in
out
mov
mov
inc
scas
ljmp
scas
mov
popa
aaa
imul
aaa
popa
stc
inc
stos
int3
pushl
mov
jl
mov
das
adc
xchg
lock
movsb
hlt
aad
test
movsb
mov
xchg
cmpl
pop
mov
jecxz
cmpsb
daa
negb
testb
fdivp
pop
fldl
add
cmp
push
inc
mov
add
fwait
mov
ds
pop
jo
adc
cmp
or
sub
pop
insl
and
or
mov
gs
adc
test
cld
mov
leave
andl
js
push
jbe
scas
jae
in
out
inc
sti
fldt
es
fldcw
mov
dec
and
add
iret
idivl
pop
push
lock
imul
xor
adc
test
sbb
and
pushw
or
xchg
std
std
add
out
dec
xor
cli
and
mov
add
leave
dec
imul
jp
je
cmpsl
add
scas
mov
scas
ja
jb
sbb
or
jb
fwait
sbb
sti
bnd
sti
or
int
mov
out
ret
adc
or
mov
and
xor
leave
mov
out
mov
jg
lcall
in
add
in
loopne
sub
inc
push
cmpl
or
mov
mov
mov
stc
in
lcall
or
std
dec
repnz
ret
push
push
ja
xlat
jecxz
das
mov
insl
hlt
mov
stos
lds
adc
inc
cmp
mov
xchg
ss
outsb
fimull
movsb
negb
fists
push
add
pushf
popf
cmc
fidivrs
push
int3
xor
or
mov
lahf
insl
int
xor
movlhps
cmpsb
and
dec
xor
jno
sub
cld
or
int3
xchg
ljmp
and
push
pop
mov
test
xor
jmp
mov
mov
fwait
sahf
mov
xchg
pusha
sti
dec
sbb
arpl
mov
fsubrs
ret
sahf
js
aad
inc
popa
push
outsl
adc
sub
fwait
outsl
pop
stc
ret
cld
lds
push
idivb
loopne
cld
shrb
bnd
or
mov
repnz
fdivp
xor
pop
test
ss
aaa
xor
fidivs
add
into
mov
icebp
xor
push
mov
push
cltd
divl
test
xor
sbb
hlt
pushf
movsb
mov
jns
cmpsb
and
fisttpll
add
imul
mov
push
stos
ja
cld
arpl
shrb
and
dec
sbb
xchg
insb
les
sub
ljmp
sbb
popa
add
leave
fildll
cmp
pop
cs
ljmp
add
xchg
inc
test
pushl
cwtl
std
enter
inc
push
mov
adc
test
movsb
repnz
pop
sbb
mov
mov
sub
fistps
ucomiss
mov
sub
pop
xor
lret
out
cld
pop
fs
adc
inc
cmp
sub
insb
lahf
arpl
pop
mov
sahf
das
ja
icebp
fnstsw
inc
mov
jne
pop
repz
lds
test
mov
test
dec
pushf
xchg
andb
stos
out
repz
test
mov
sub
cmpsb
sbb
fiaddl
xor
jne
out
cli
pop
movsb
outsl
rorb
jb
sbb
in
nop
or
mov
mov
std
call
and
adcb
inc
popf
xchg
jl
inc
mov
push
cmpsl
lods
out
insb
push
push
ret
inc
cld
in
jecxz
mov
shl
inc
int3
push
jae
test
xchg
outsl
bound
push
mov
insl
aad
ds
cmp
mov
rorb
or
loope
loop
das
call
jle
jle
mul
cli
loopne
in
test
add
push
leave
push
or
aam
ret
mov
inc
testb
orl
adc
lret
lcall
shl
ds
inc
sub
pop
push
ja
pusha
scas
aas
and
cmp
pusha
aaa
pop
mov
jns
loopne
pushf
jne
decl
dec
ljmp
mov
stc
jo
loopne
insb
jl
fisttpl
imul
mov
inc
mov
mov
fiadds
xchg
or
xor
inc
shll
jb
or
mov
les
stc
push
jg
add
jns
imul
arpl
mov
inc
mov
push
xor
jnp
inc
lea
lds
iret
cs
fsts
xor
sbbl
adc
mov
mov
inc
or
sahf
clc
cmc
out
push
in
into
jne
mov
ss
test
shlb
int3
clc
mov
sub
repz
or
pop
incb
pop
push
inc
insb
fstpt
repnz
jo
jecxz
das
mov
pushf
push
bound
cmp
aam
mov
sbb
mov
mov
popf
flds
xchg
pop
ja
pop
xchg
xor
pop
sahf
cmp
xor
xchg
cmpl
shrl
xor
push
mov
adc
adc
jle
adc
fisubl
xor
outsl
cwtl
adc
sub
lcall
fwait
xor
dec
fdiv
jecxz
adc
pop
adc
inc
xchg
push
popl
or
sbb
pop
jle
or
dec
jge
lods
fwait
sti
jl
mov
sbb
leave
iret
mov
leave
sub
cli
movsb
adc
mov
jmp
inc
mov
ljmp
push
test
insl
mov
in
mov
cmp
mov
les
out
mov
xor
das
jg
cltd
pop
push
test
xchg
sahf
icebp
int3
addb
and
aam
sub
cmp
or
frstor
sub
push
gs
adc
sbb
pop
pushf
imulb
cmp
test
mov
gs
push
mov
push
lcall
mov
mov
js
xchg
mov
mov
aad
sub
movsb
jb
mov
xchg
fwait
push
cltd
je
and
cs
insl
cmp
mov
mov
dec
adc
popa
stos
jmp
out
push
cwtl
jl
jnp
pusha
or
dec
enter
dec
std
sbb
pusha
dec
mov
xchg
cmp
dec
out
mov
out
jmp
add
lret
dec
stos
sahf
pop
int
adc
sahf
mov
add
mov
sbb
xor
jmp
add
sahf
inc
mov
mov
xchg
jns
or
cmp
inc
popf
mov
call
aad
je
enter
call
lods
leave
cmp
cmpsb
mov
cmc
or
xchg
iret
inc
jge
add
fistl
stos
repz
dec
fldenv
jge
sub
cli
lods
aas
jl
push
or
lods
or
call
es
js
and
inc
idivl
mov
pop
outsl
cmp
cli
or
pushf
pop
in
loope
dec
int
xor
mov
jb
pushf
outsb
in
imul
push
inc
lret
xchg
pusha
inc
fiadds
xchg
mov
mov
stos
pop
mov
cmp
stos
test
jb
sarb
or
add
and
lods
xchg
not
into
add
sub
add
lock
mov
shlb
sub
push
notl
add
cwtl
xchg
adc
sahf
leave
jmp
push
in
sub
jecxz
hlt
ds
enter
orb
and
or
rclb
sub
nop
cld
pop
or
cli
arpl
jge
xor
sbb
mov
xchg
movsl
shll
mov
imul
test
addl
out
mov
jbe
out
push
rorb
jnp
add
sbb
dec
loope
and
jle
repz
add
subl
aaa
je
icebp
lods
nop
jbe
iret
and
test
or
scas
jmp
imul
loopne
test
iret
ljmp
push
lds
push
sar
movsl
pop
dec
inc
dec
mov
sbb
xchg
push
jbe
inc
mov
mov
pop
stos
ret
add
in
pushf
imul
fidivrl
sahf
in
flds
enter
sti
push
insb
push
cltd
mov
and
aaa
xchg
ja
push
loop
in
cld
or
mov
movsl
or
mov
or
movsb
hlt
lods
pop
cli
out
int3
pop
das
sar
rcrb
push
in
bound
outsb
das
xchg
push
xor
push
mov
mov
sbb
cmp
lcall
sub
jl
or
jecxz
mov
pusha
xchg
xchg
pusha
xor
stos
in
scas
add
insb
aam
mov
xor
cmp
mov
push
xor
jmp
fbstp
aas
cld
rcr
scas
test
or
arpl
sub
and
inc
xchg
push
dec
lods
aas
sub
in
push
fiaddl
push
arpl
sbb
sub
scas
inc
xchg
pop
cmp
cmp
imul
movsl
scas
xor
clc
mov
dec
pop
mov
cli
xor
mov
int3
dec
sbb
pop
fisttps
inc
aad
xor
call
mov
add
das
lahf
jmp
decb
add
and
and
mov
push
fidivl
in
fisttpll
pusha
jbe
cmpsb
cmp
mov
add
sub
out
test
lcall
cltd
and
dec
mov
lcall
clc
add
rcll
mov
lret
test
test
addb
mov
inc
imul
pusha
cmp
iret
xor
test
push
push
inc
imul
cmp
sbb
pop
add
sbb
mov
adc
lds
nop
xlat
test
xor
outsb
pop
lcall
xor
out
std
mov
bound
adcb
sahf
insb
sub
lock
jge
xchg
mov
xchg
rol
xchg
adc
sarb
mov
fsubp
dec
scas
or
repnz
mov
loope
rol
cwtl
movsb
pop
lds
mov
lret
jmp
cli
xor
push
int
add
inc
imul
adc
imul
in
divl
jne
sub
js
lret
imul
fcmovnb
push
sbb
add
imul
es
fmull
pop
xor
mov
daa
aad
iret
imul
inc
dec
pop
or
mov
inc
testl
or
inc
rolb
push
es
ljmp
data16
cli
or
pop
mov
call
add
cmp
decb
imul
and
fistpl
cld
and
mov
fnstsw
mov
loopne
mov
push
jmp
push
sahf
decb
inc
aad
test
push
dec
sbb
and
aad
push
movsb
jbe
cmc
xchg
repnz
or
in
pop
outsb
xor
stos
mov
xchg
fidivrs
xor
xchg
mov
scas
xchg
test
dec
pusha
enter
lret
xorl
push
pop
shrb
inc
xchg
insb
mov
inc
lea
mov
cmp
push
out
shr
sub
pop
cmp
into
pop
mov
pop
data16
popa
aas
fwait
fdivl
push
push
mov
mov
mov
sbbb
loopne
fwait
scas
es
fdivr
imul
pop
sbbb
mov
pop
cmp
fists
aam
push
lahf
in
mov
popa
mov
xchg
sub
and
xor
adc
or
xor
data16
jp
jne
addr16
mov
and
addl
add
fimull
jmp
or
dec
push
or
jp
pop
push
lcall
fcomps
loop,pn
je
dec
repnz
in
rorb
pop
lret
fstl
xchg
xchg
cmpsb
out
shrb
iret
dec
dec
xor
inc
repnz
adc
mov
jg
mov
jnp
sbb
sbb
xchg
sbb
jns
testl
popa
mov
cmp
or
lods
mov
jle
cld
push
push
dec
loop
xchg
popl
loope
jb
sbb
fisubrl
fsubs
jle
test
push
psubusw
stos
dec
cs
out
mov
inc
inc
push
jecxz
inc
mov
cmp
mov
pop
cmpb
add
fxch
sahf
or
mov
mov
adc
clc
icebp
add
pop
sbb
sub
and
push
pop
pop
out
jns
gs
push
pavgb
xor
mov
data16
and
js
ja
inc
xlat
leave
pop
xchg
fists
sbb
xchg
sub
call
add
js
xor
push
mov
les
mov
push
pop
mov
push
pop
xorl
or
lahf
lods
dec
lock
mov
sti
sub
insl
cmp
xor
int3
cmp
icebp
leave
arpl
out
cmp
dec
in
and
in
pop
cmp
pusha
xchg
rorl
js
test
mov
out
fidivl
aas
test
dec
and
pop
imul
push
bound
xorb
mov
pop
jne
icebp
xor
and
jge
lea
inc
mov
scas
leave
cld
pop
pushf
ficomps
je
popf
and
xchg
movsb
add
add
jge
jl
xchg
dec
loop
enter
cmp
faddp
in
push
lcall
sbb
ja
mov
ss
rclb
lods
mov
stc
mul
push
outsb
adc
xchg
or
in
or
scas
es
loope
jge
mov
xchg
push
repnz
sarb
dec
and
inc
lret
inc
gs
outsb
dec
fstps
ja
mov
xor
inc
popa
jge
in
js
cltd
cmp
je
xlat
loop
imulb
sub
cmp
push
sub
fmuls
cli
mov
mov
imul
push
sub
scas
cmpsl
push
fstpt
jp
enter
repnz
mov
and
sbb
xor
cld
cmpsb
cmpsb
mov
xlat
imul
in
push
inc
es
loope
add
in
ljmp
mov
mov
sub
inc
outsl
insl
into
lahf
outsb
push
popl
outsl
fcoms
imul
mov
dec
pop
dec
lcall
jne
dec
fistps
enter
xchg
or
lahf
mov
sbb
cltd
in
mov
repz
mov
xor
push
in
les
aaa
mov
test
repz
mov
decl
enter
jmp
mov
xchg
xchg
push
mov
lods
sub
push
jns
push
mov
into
rcll
push
out
sbb
xor
popf
ja
fadds
loopne
jns
movsb
shlb
dec
ds
pop
xchg
mov
popl
aaa
cwtl
push
insb
lahf
cmc
inc
sbb
mov
addr16
aam
inc
add
xor
cmp
xchg
adc
add
pop
jno
xchg
mov
xchg
mov
xchg
dec
mov
shr
cmp
push
aaa
mov
mov
push
test
ss
sahf
push
sbb
inc
pop
push
leave
data16
mov
dec
or
dec
mov
xor
rorl
and
cltd
call
inc
add
jg
mov
mov
inc
addb
lcall
cwtl
aad
jmp
cmp
adc
repnz
ss
cmc
mov
jae
add
stos
mov
test
std
xor
jnp
dec
mov
and
test
cltd
mov
jle
incb
ficoms
xorb
sahf
sub
aam
jnp
fsubrs
adc
aad
ja
fwait
shll
mov
push
push
or
loope
out
dec
push
xchg
jb
mov
and
mov
lret
mov
aas
outsl
jbe
movsb
cmp
mov
inc
cli
inc
and
out
cmp
sub
clc
lods
test
divl
jbe
daa
mov
jb
adc
dec
xor
repz
mov
push
rcl
xchg
dec
repz
sbb
popf
stos
and
sub
sbb
cmp
ret
inc
rclb
xchg
adc
mov
pop
loope
popa
mov
mov
jno
push
jmp
bound
push
jge
mov
insl
xchg
xor
cld
data16
outsl
lret
sub
aam
rclb
cmp
incl
dec
mov
cld
mov
jb
sub
mov
gs
add
xchg
jge
or
les
sub
adc
fyl2x
mov
mov
jge
xor
adc
mov
cs
rolb
inc
or
lcall
movsb
jecxz
sti
mov
pop
xchg
sarb
pop
cs
mov
pop
mul
push
add
ror
push
in
iret
and
cwtl
loopne
lock
insl
fwait
push
push
adc
andb
inc
fdivs
pop
insl
lret
push
inc
iret
add
xlat
jne
mov
addb
jg
xchg
adc
or
inc
test
bound
mov
pop
xor
and
mov
inc
enter
push
rcrl
cmp
lds
inc
push
and
xor
mov
push
dec
push
inc
mov
iret
or
pop
cmp
adcl
or
add
insl
stos
pop
xor
aam
fwait
lea
lea
iret
loop
shlb
push
xchg
cltd
imul
and
xor
cmp
incl
dec
and
mov
inc
and
mov
in
ljmp
aam
scas
lret
stc
and
repz
ret
jge
or
test
icebp
in
mov
subb
je
lahf
and
jae
jne
push
sbb
daa
in
int
pushf
and
arpl
dec
shr
in
mov
outsb
dec
test
rorl
es
sub
jns
ret
test
mov
stc
in
dec
aam
inc
pop
mov
les
inc
and
pcmpeqd
mov
pop
les
into
pusha
in
test
cli
and
lds
mov
shrb
ret
xor
in
ljmp
test
inc
inc
cmp
cmp
add
or
in
xor
mov
ss
xchg
cmp
dec
sarb
jno
xchg
jg
xchg
push
in
jbe
loop
ret
call
add
loope
mov
mov
mov
cld
or
int3
push
pop
xor
les
lret
mov
inc
sahf
dec
mov
dec
movsl
jp
jbe
loopne
std
dec
sub
lods
in
and
xchg
bound
add
sbb
imul
call
pop
sbb
mov
ret
shlb
int3
add
jmp
bound
insb
jmp
mov
xor
out
sbb
inc
cmc
sbb
gs
psubusb
mov
nop
into
inc
fsincos
sub
ss
push
and
ffree
adc
ret
jge
mov
mov
jbe
mov
pop
nop
icebp
mov
nop
aam
adc
jg
dec
add
mov
movsb
pop
mov
sub
call
inc
stos
rorb
stc
add
data16
xchg
pushl
pop
mov
and
jnp
add
insl
adc
movsb
and
js
nop
cmpsb
mov
dec
leave
scas
adc
pop
inc
mov
repnz
mov
fiaddl
cmpsl
sahf
in
mov
mov
mov
shl
clc
rorb
fwait
dec
jo
lods
inc
mov
fs
jno
mov
pop
sbb
dec
jae
test
shlb
inc
roll
fwait
mov
loopne
rcr
mov
or
inc
cmp
aaa
xchg
jo
dec
loopne
fisubrl
or
push
pop
push
push
or
jg
pop
push
loop
fiaddl
scas
aam
jbe
push
pushf
ljmp
sub
push
xor
aaa
pop
icebp
lds
pushf
mov
xchg
adc
and
stos
xor
adc
inc
xor
adc
jmp
push
cwtl
sti
push
cmp
je
int
pop
cltd
lock
xor
mov
push
movsb
test
dec
rclb
cli
mov
sbb
int
mov
sbb
jns
add
bound
jp
jae
popa
nop
stos
dec
mov
sbb
into
lret
addr16
in
or
cmp
mov
pop
das
cmp
xchg
ljmp
shl
xor
xchg
pop
je
scas
mov
addr16
mov
mov
xor
mov
jne
jge
add
dec
scas
sub
fadds
pop
loop
mov
inc
fucomp
pop
daa
and
aad
push
adc
jg
leave
ficoml
fwait
mov
add
inc
xor
repz
cmp
fs
cmp
jp
cwtl
pop
xchg
arpl
scas
adc
dec
scas
popf
rcrb
dec
std
dec
jecxz
clc
push
sbb
add
aas
jnp
mov
in
aam
adc
adc
clc
mov
sub
xor
aam
mov
into
rcl
cwtl
das
aam
and
push
pop
scas
sbb
test
and
adc
cmp
pop
call
or
and
incl
cwtl
nop
in
repz
cmpsl
xchg
outsb
xchg
out
mov
popf
jne
jmp
sub
js
lea
pop
xchg
sbb
mov
xchg
jl
adc
push
sub
cwtl
mov
sbb
dec
adc
and
leave
scas
inc
test
push
mov
ret
push
sbb
add
cmpl
fwait
jno
lahf
xchg
xor
shll
cmpsl
lods
lahf
and
pop
inc
dec
outsl
iret
js
enter
ds
xchg
dec
pop
pushf
mov
mov
mov
pop
andl
leave
push
sbbb
pop
int
jle
mov
dec
jbe
or
aas
xchg
jl
fiadds
movsb
sbb
sbb
add
scas
dec
adc
clc
push
xchg
idivl
add
or
mov
push
mulps
lds
jle
lods
lock
push
push
leave
out
xchg
dec
scas
xor
in
fs
add
into
pop
leave
push
arpl
jbe
icebp
in
int
push
pop
ljmp
out
arpl
sbb
jmp
stos
mov
rcrl
mov
fwait
push
sbb
xchg
repz
inc
or
jle
shll
iret
dec
outsb
scas
adc
cmp
outsl
insb
adc
ret
mov
inc
ficoml
adc
mov
mov
mov
dec
shlb
sub
push
mov
lret
lock
mov
cmpsb
push
scas
add
jmp
int3
sbb
divl
sbbb
fstl
pop
mov
or
add
test
in
or
insb
pushf
nop
dec
sti
lock
mov
cli
enter
dec
fwait
mov
clc
pop
insb
mov
mov
add
mov
stc
out
ret
xchg
dec
lods
mov
push
aad
nop
cltd
push
fstpl
or
jecxz
in
add
mov
jg
sub
out
shll
dec
xchg
pop
mov
stos
loopne
pop
stos
iret
test
imul
imul
cmp
outsb
insb
or
or
xchg
xchg
cmp
xchg
mov
cmpb
aas
addr16
jmp
or
inc
mov
pop
cmpsb
aas
jne
xchg
or
xor
jg
jge
lods
pop
mov
and
jecxz
pop
mov
aas
jo
adcl
fsts
test
mov
stos
mov
iret
dec
in
cmp
fisttps
orl
lcall
push
jp
les
pop
pop
mov
pusha
fcmovbe
add
int3
scas
xchg
lock
xchg
cs
clc
outsl
jne
int3
mov
mov
xchg
mov
xchg
dec
fnstsw
pop
dec
adc
dec
popa
inc
push
cmp
jg
aaa
daa
lock
adc
mov
sbb
inc
loop
aaa
lock
adc
inc
dec
ret
ljmp
popa
xchg
mov
test
dec
shl
inc
icebp
ficoml
jns
shrl
push
lods
pusha
xchg
add
out
in
push
dec
add
sbb
int3
jno
sbb
es
repnz
inc
scas
repz
mov
and
leave
rcrb
inc
dec
xlat
jo
inc
fcompl
and
and
pop
push
ljmp
or
test
pop
fs
test
mov
jnp
in
adc
mov
add
scas
sub
cmp
xor
lcall
das
adc
rol
inc
lods
hlt
add
add
ds
mov
mov
mov
lods
cmp
mov
fimuls
bound
lea
hlt
lods
call
pop
dec
pop
cmpsb
shlb
lods
dec
addl
jnp
push
rep
push
es
adc
loope
push
dec
aam
jno
and
sahf
pop
mov
adc
inc
rolb
gs
pop
inc
cmpsl
fildl
jno
jmp
in
dec
pop
push
pushf
mov
bound
ljmp
testl
jge
inc
sarl
or
sahf
fs
push
daa
push
ret
ret
or
xchg
test
pop
jge
jae
stc
int3
rcrl
and
ds
ret
mov
pusha
inc
scas
xchg
pop
scas
push
xchg
inc
push
push
mov
das
pop
push
sbb
pop
sbb
ret
jne
lea
cltd
in
mov
adc
push
clc
es
shlb
sub
movsl
push
out
or
lods
cmp
test
cmp
cmp
rcrb
jb
lahf
add
jecxz
adc
into
fisttpl
sbb
sbb
out
js
inc
mov
mov
push
lcall
lret
fcmove
add
inc
rcrl
jg
mov
push
sub
fwait
cltd
xchg
dec
adc
pop
inc
jne
jecxz
pop
cmpsl
inc
inc
mov
scas
movl
jnp
lods
fdivrl
into
adc
mov
cmp
push
sub
jbe
lret
pop
fsts
mov
out
sahf
cmp
push
lret
cwtl
test
lea
sbb
jne
mov
push
add
push
push
in
mov
xchg
faddl
cmpsl
and
ret
testb
jnp
dec
popw
or
test
adc
sbb
pop
mov
sbb
cli
jecxz
mov
cs
cmp
push
aam
pop
arpl
sub
nop
inc
fnstenv
test
xchg
loope
lds
inc
fsubs
push
aam
jl
xchg
mov
movsl
imul
cmp
loopne
pop
jae
repnz
in
jns
outsl
jmp
pop
adc
mov
jp
je
loop
jnp
or
arpl
inc
or
movsl
ja
dec
mov
mov
adc
jno
and
outsb
or
pop
inc
cld
mov
popa
mov
pushf
call
sbb
incl
adc
incb
loopne
test
jmp
movsb
aaa
inc
popf
jb
add
xor
dec
testb
cmpsl
inc
mov
testb
in
test
and
repz
cli
jo
loope
dec
sub
inc
xor
nop
pop
mov
or
fimuls
jecxz
cli
mov
pop
cmp
sbb
jnp
jmp
fs
addr16
pop
mov
push
mov
stos
pop
stos
lahf
and
inc
sbb
and
pop
mov
data16
shlb
outsl
test
in
push
jo
inc
xchg
sub
pusha
inc
add
or
jbe
add
aam
xchg
or
pop
in
fstpt
cmp
not
jle
jmp
xchg
push
je
cmp
dec
notl
stos
sbb
and
pop
push
js
xchg
das
cli
shlb
lods
sub
jmp
fists
jge
xor
sbb
pop
or
inc
mov
lods
jmp
adc
repz
shl
ljmp
xchg
mov
or
movsl
mov
push
insb
cmpsb
pop
cltd
aaa
in
in
inc
jno
and
inc
cmpsb
sti
mov
cli
cmp
mov
fnstcw
sub
adc
insb
bound
pop
jb
push
rolb
xor
fbstp
adc
mov
add
lods
jmp
xchg
mov
adc
clc
dec
scas
sbb
or
pop
addb
xor
push
lods
push
lock
pop
push
es
ret
cmpsb
js
add
jecxz
xchg
mov
out
negl
cmpsl
std
stc
es
push
in
scas
adcb
imul
addb
mov
xor
scas
in
movsb
cmc
jmp
xor
push
or
insl
adc
movsb
sar
or
sbb
insl
mov
inc
fwait
cltd
xchg
js
clc
inc
jg,pn
inc
ret
aas
insb
aad
test
add
or
es
loop
test
call
push
lock
push
fld1
movsb
jmp
sarl
call
fwait
jle
loop
add
push
push
sbb
shll
mov
sbb
jecxz
add
mov
mov
dec
gs
pop
and
adc
andl
out
xchg
and
lods
inc
push
gs
sbb
add
adc
cmp
repnz
aam
xchg
addl
xlat
es
and
inc
aam
inc
sub
inc
jg
outsl
lret
lea
sub
cld
dec
in
popa
cltd
ss
imul
xor
or
in
cmpsl
inc
mov
xchg
sarb
aaa
ud0
mov
sbb
push
xchg
jp
xor
shll
xor
mov
flds
dec
fcmovnb
ds
add
add
ficoms
rolb
dec
lcall
cli
stos
mov
mov
adc
cmp
addl
mov
clc
cmc
aad
rolb
add
sub
aam
push
add
xorl
push
adc
adc
inc
adc
jns
add
je
lds
and
mov
inc
mov
icebp
cld
push
fisttpll
cmp
or
adc
pop
les
sbb
cld
push
xor
iret
mov
sahf
pop
in
push
stos
push
or
xchg
pop
lahf
fwait
test
jae
pop
popa
fiaddl
retw
push
adc
outsb
fdivs
loop
aas
add
push
xchg
scas
push
fbstp
out
je
dec
sbb
pop
or
aam
js
call
push
xchg
adc
ret
mov
sub
pusha
sub
cmovo
jl
hlt
in
xchg
stc
movsb
sub
xchg
lock
jmp
cmp
xlat
mov
mov
dec
pop
mov
adc
sub
mov
in
sub
pop
movsb
iret
lret
mov
push
js
jge
and
data16
je
cmp
loop
xor
adc
mov
bswap
call
std
adc
test
jge
int3
sub
fsubrs
inc
cld
repz
push
into
xchg
out
stc
cmc
cmpsl
imul
xchg
add
sbb
sbb
add
and
pop
cmc
xchg
lahf
dec
jp
fcomp
jno
adc
xor
mov
or
popa
jmp
repnz
les
mull
adc
cmp
mov
pop
push
cmovbe
and
out
inc
mov
sbb
stos
ret
shr
mov
adc
adc
ja
stos
in
jg
repnz
repnz
jge
xor
dec
add
dec
test
mov
xlat
cmpsb
jl
xacquire
mov
cwtl
in
add
push
lods
jno
imul
repz
dec
and
fisttpll
cli
and
iret
add
test
enter
movsl
ljmp
jns
pop
jg
pop
sti
das
mov
nop
mov
xor
xchg
out
adc
add
movsb
mov
loop
or
aaa
outsb
inc
cmp
xchg
and
dec
push
sarl
arpl
adc
mov
imul
cli
mov
fdivr
outsl
fs
aaa
scas
loop
xlat
dec
sbb
mov
jmp
rclb
arpl
es
dec
mov
aas
cld
mov
add
nop
dec
and
mov
repnz
push
sti
jb
dec
xchg
es
cmp
adc
test
inc
js,pt
or
add
into
add
inc
pop
xchg
lods
lods
jecxz
sbb
cmp
mov
test
test
lahf
sub
xchg
inc
ss
mov
fcom
xor
in
pop
sbb
push
je
cld
push
xor
jp
arpl
inc
out
xor
int3
in
cli
movsb
jne
fwait
dec
movsl
mov
pop
fisubrl
cmc
ds
cld
or
adcb
popl
jo
dec
jo
lds
xchg
aad
pop
inc
pop
xor
xchg
xchg
test
lcall
jne
aam
and
mov
xor
jp
aaa
in
rolb
pop
cmp
shll
pop
das
daa
sbb
cmpsl
push
test
test
in
ljmp
add
fwait
fs
pop
scas
xchg
xor
sbb
xlat
cmpsl
jo
popa
out
sbb
rcr
stos
mov
addr16
lock
mov
xor
pusha
hlt
dec
jl
adc
in
lret
sub
outsl
leave
inc
bsr
ret
push
mov
sub
fimull
scas
cmp
push
fiaddl
cltd
enter
or
aaa
dec
ds
jl
fdivl
out
lds
ja
addr16
push
pop
mov
dec
les
lods
int
daa
xlat
out
pop
adc
mov
fwait
xchg
mov
lret
fstl
out
mov
das
nop
cltd
insb
mov
mov
xor
mov
enter
enter
lds
xor
stos
scas
int
mov
lock
jge
or
cmp
mov
pop
mov
std
mov
popa
gs
inc
cltd
sbb
or
cmp
sub
push
aas
test
daa
clc
mov
int
dec
int
xor
dec
ret
cmpsb
inc
and
cmp
bound
stos
mov
or
push
add
mov
pop
mov
mov
and
ss
shrl
bound
push
mov
faddl
add
fdivrl
std
fdiv
inc
ret
lcall
adc
rolb
mov
jge
lods
push
adc
outsb
in
fwait
ret
shrb
fisubrl
jo
push
mov
push
xchg
out
das
pushf
das
and
and
sub
stos
es
and
movsb
mov
push
popf
and
push
popf
or
cmpb
mov
cwtl
xchg
es
stos
imulb
out
mov
sbb
pop
pop
push
push
adc
adc
mov
push
mov
adc
call
in
xlat
xchg
pop
mov
mov
xor
cltd
mov
lock
xchg
pop
adc
push
adc
or
mov
sbb
or
leave
or
lods
fwait
mov
and
lods
mov
inc
std
push
je
mov
stos
push
jne
imul
fidivrl
fs
cld
in
fwait
pop
loopne
push
or
add
mov
fnstsw
sub
or
jnp
lcall
mov
dec
and
jbe
pushf
mov
imul
dec
cmp
push
jle
cmpsb
dec
sbbl
pop
add
into
in
stos
jae
mov
sbbb
fidivrs
int3
scas
insb
adc
daa
lock
in
sbb
aam
or
jecxz
loop,pt
bound
xor
sbb
outsl
push
mov
xchg
jge
mov
dec
jnp
or
fs
dec
pop
dec
in
mov
jbe
sbb
inc
inc
inc
sbb
addl
int
loop
sub
std
adc
mov
mov
pop
inc
std
xchg
xor
jl
das
cwtl
idiv
pop
add
ds
repnz
pusha
sub
jnp
jle
cmp
or
in
in
sub
dec
or
in
icebp
or
inc
xchg
jmp
test
adc
adc
xor
out
scas
adcb
inc
hlt
push
sbb
mov
inc
ss
xchg
out
andb
adc
cmp
cmp
loope
push
cld
hlt
insb
jmp
inc
xchg
and
jae
mov
movsb
fistpll
js
pop
sarl
out
fnstsw
ss
mov
cmp
cmpb
fadds
sbb
out
and
jnp
lcall
jne
cmp
xchg
test
pop
pushf
or
sahf
lods
test
jg
push
aaa
xchg
dec
pop
and
in
movsl
push
fimull
mov
inc
cmp
fcomip
int
into
jl
dec
xchg
xor
sbb
rol
cmp
adc
in
ds
fwait
test
dec
ljmp
in
das
fwait
pop
sbb
aam
out
dec
outsb
sbb
inc
pop
negb
and
mov
out
lret
ret
xchg
outsb
aad
add
dec
sbb
arpl
pop
mov
jecxz
pop
add
cmp
pop
xchg
mov
dec
dec
or
cli
mov
adc
dec
cmp
or
fsubp
cmpsb
cmp
sbb
sbb
imul
mov
mov
pop
mov
rcrl
pop
adc
adc
fisubs
in
mov
icebp
inc
iret
sub
jmp
shrb
or
adc
scas
cmp
mov
mov
mov
inc
leave
addr16
push
dec
mov
xchg
es
inc
insb
push
roll
dec
sarl
xor
adc
pop
xlat
cltd
inc
pop
in
xchg
cmp
jmp
lods
testl
dec
out
xor
pushf
popa
lods
das
push
into
fadds
add
lea
lds
adc
xchg
xlat
mov
cmpsl
movsb
inc
cmp
push
add
test
cli
js
and
jbe
dec
shrb
push
dec
data16
lret
cmpsb
jb
insl
shlb
xlat
test
push
cs
cmpsb
push
lea
cmc
hlt
cmc
cmp
pop
and
icebp
filds
ljmp
loopne
out
ss
mov
lret
in
push
das
mov
lds
inc
dec
testb
test
xchg
mov
aaa
sbb
adc
setne
rcll
inc
mov
cmpsb
push
sbb
ret
filds
shll
bound
push
dec
push
pusha
test
adc
mov
or
mov
lds
and
inc
popa
xor
dec
xchg
fld
lcall
xchg
daa
sbb
or
add
pop
inc
les
lret
outsb
push
mov
jb
adc
clc
or
xchg
inc
and
enter
dec
mov
cwtl
cmp
jo,pn
cmpsl
dec
jle
pop
and
mov
ljmp
aas
mov
mov
lods
pop
mov
iret
shrb
jp
shlb
stc
cs
lds
enter
mov
pop
clc
pop
cltd
dec
mov
insb
dec
inc
shll
pop
add
je
mov
addr16
pop
and
loop
push
add
and
imul
jmp
mov
mov
xchg
fidivrs
lods
add
lds
mov
and
mov
sbb
inc
push
cli
fdivrs
cld
xor
jmp
into
add
xchg
ficoml
push
mov
sub
rcr
scas
nop
movsb
aad
mov
repnz
adc
adc
aam
adc
out
jbe
push
xchg
sbb
mov
call
inc
call
dec
test
xchg
pop
pusha
mov
ss
dec
fwait
jle
jmp
jno
cmp
sub
xchg
imulb
push
fdivrs
and
cmp
pop
rclb
or
fs
mov
sbb
test
in
mov
imul
fwait
pop
push
cmp
mov
push
negl
daa
outsb
mov
mov
sub
dec
adc
in
push
push
mov
push
imul
cwtl
sub
in
outsl
adcl
idivb
repz
in
push
in
xchg
cmpsl
fcmovb
cmp
and
lret
cmp
jg
sub
shl
fidivl
ljmp
mov
int
divb
cmp
movsb
gs
popa
jae
dec
aaa
rcll
jmp
adc
fwait
mulb
sti
xchg
shll
in
mul
movsb
inc
subl
dec
mov
add
ljmp
test
aaa
sbb
mov
pop
inc
shl
push
lret
insb
idiv
lods
or
popf
stos
jmp
jbe
out
xchg
stos
cmp
fidivs
xchg
mov
roll
dec
movsb
xor
jne
sub
or
xor
mov
insb
stos
mov
and
jo
pusha
pusha
pop
cmp
adc
adc
arpl
push
lahf
lds
pop
fidivl
mov
cmp
stc
pop
dec
dec
stc
mov
lcall
add
stos
mov
insb
sbb
fldcw
inc
xor
rcrb
ljmp
lods
in
enter
push
js
mov
push
mov
jo
and
mov
inc
sub
mov
pop
pop
repnz
xchg
sbb
data16
leave
sub
mov
sbbb
pusha
push
into
repz
and
stos
xchg
dec
mov
cld
mov
loope
fisubs
inc
fidivl
inc
sub
pop
das
sbb
mov
mull
dec
jp
inc
xor
xchg
sarb
rcll
orb
mov
testl
inc
into
js
mov
pop
xchg
mov
push
rclb
mov
jbe
mov
std
xchg
push
int
scas
test
jnp
int
xchg
incb
push
xchg
jbe
popa
add
notl
lcall
push
jle
nop
sbb
xor
and
outsb
adc
mov
push
mov
mov
pop
mov
jns
repnz
rol
inc
and
lret
adc
test
xlat
dec
ret
xor
push
pop
dec
das
and
orb
ret
adc
or
repnz
xor
pop
add
fldcw
xchg
mov
aaa
mov
pop
sub
cli
add
mov
clc
out
cmp
inc
push
pop
mov
xchg
pop
repz
fidivl
adc
fidivrs
fdivr
add
aas
movsl
in
ljmp
fisttps
jecxz
dec
out
rolb
mov
jge
lock
and
lahf
jecxz
mov
sub
push
push
add
or
mov
jg
rcrl
adc
aam
movsl
pop
or
xchg
or
xchg
pop
jg
pop
icebp
scas
xchg
mov
pop
sbb
loopne
dec
or
inc
mov
and
jo
pusha
sub
rol
lret
pop
call
ds
in
mov
outsl
adc
clc
sub
sbb
pop
and
lods
jg
push
and
push
into
pop
jecxz
push
testb
inc
push
xchg
adc
inc
sub
lahf
out
mov
pop
gs
jge
jp
xchg
cltd
shlb
mov
es
jle
jge
aas
ds
les
addr16
std
inc
push
mov
mov
xchg
jmp
stos
jmp
in
and
scas
adc
or
push
xor
sbb
xchg
cmp
mov
and
mov
fmulp
jne
push
mov
cmpl
fnstsw
mov
lea
std
adc
or
movsl
std
dec
faddl
or
xchg
scas
add
push
xchg
insb
insb
cmp
ret
ljmp
shrl
lea
rcll
mov
dec
clc
xchg
jns
xchg
mov
fucomp
jns
ss
adc
or
xchg
cs
in
leave
dec
jmp
not
sarb
mov
subb
mov
pop
fistps
push
push
sub
pop
fsubl
jbe
decb
push
cmpsl
pusha
push
lods
cmpl
lret
adc
js
pop
cwtl
jb
fstpl
ret
cmp
jb
scas
sub
jecxz
mov
mov
pop
cmp
rcll
dec
aas
fcomp
mov
test
fs
out
inc
push
repz
movb
rclb
xchg
inc
cwtl
ret
add
pop
popa
stc
ficoms
and
xor
rclb
or
cs
pop
jno
rep
mov
jo
sbb
popa
icebp
xorl
sbb
dec
test
in
ror
sbb
sbb
sbb
movsl
out
xchg
mov
out
mov
push
test
sub
push
inc
push
push
sub
adc
mov
shrb
lret
sbbb
lock
xchg
lret
add
loopne
sub
loop
mov
cmp
pop
add
fwait
and
mov
adc
sti
cmc
push
mov
sub
mov
inc
orb
sahf
add
arpl
adc
pop
repnz
inc
out
cmpsb
cld
jmp
stc
cmp
inc
mov
mov
icebp
les
lcall
int
push
mov
inc
xor
or
hlt
xchg
pop
or
xor
pushf
mov
clc
mov
aaa
cltd
pop
and
jo
adc
nop
or
sub
js
mov
fldt
cmp
xchg
sbb
mov
stos
xchg
sbb
scas
mov
cltd
add
int
imul
fmull
lcall
aaa
stos
fadds
fstpt
aad
inc
repnz
mov
xchg
pop
cmpsl
jp
popa
movb
cwtl
outsb
cmp
jae
lods
es
sbb
pop
adc
xchg
loop
imul
and
pop
push
mov
cmpsb
jo
ljmp
ret
add
pop
rcll
inc
jecxz
movsb
lea
push
inc
inc
out
lock
mov
out
dec
iret
test
or
or
or
fistl
add
les
add
or
cmc
gs
lds
dec
sti
outsb
push
mov
jns
or
mov
sbb
in
sbb
jbe
addl
js
jno
ja
sbb
ljmp
shlb
jns
and
mov
shr
dec
mov
cmp
dec
cmpsb
out
mov
ret
jecxz
push
or
clc
push
stc
arpl
mov
jecxz
mov
pop
cmp
mov
sub
sub
add
or
sbb
sub
jge
dec
inc
pop
or
adc
dec
add
scas
testl
adc
dec
std
xchg
rcrl
jge
jl
lahf
fisubs
stos
cltd
es
pop
and
lret
scas
jbe
jo
pop
or
sub
jno
fcoms
pop
xchg
in
fisubrs
out
mov
lds
in
adc
pop
loope
cld
jno
jle
rolb
stos
aaa
or
lods
fdivrl
test
cmp
xchg
das
push
push
xor
add
out
push
int3
pop
das
lds
test
push
in
sbb
iret
jmp
insl
cmpsl
insl
sbb
adc
mov
inc
sub
lods
mov
pop
or
and
js
xchg
cltd
cmovbe
jmp
out
and
popa
pop
inc
cmpsb
cmp
add
jecxz
mov
inc
insb
ljmp
mov
inc
jb
aas
les
inc
fsubrs
popf
into
ret
fsubr
cmp
mov
bound
out
sar
aas
or
sbb
out
mov
and
cltd
ret
scas
or
and
adc
pushf
sbb
daa
or
repnz
push
dec
out
lods
dec
jg
aas
inc
dec
test
lret
cld
fs
sub
mov
lock
in
lea
inc
xchg
adc
scas
add
cmp
pop
push
nop
push
aaa
mov
int
aaa
sti
js
iret
cmp
lcall
or
inc
divb
insb
cld
or
in
mov
out
dec
ret
bnd
xchg
sbb
cmp
in
mov
jge
jae
lds
jno
outsl
sub
mov
es
jl
adc
push
dec
push
lcall
dec
pop
adc
cmp
addr16
fcmovnb
mov
add
mov
scas
mov
arpl
leave
adc
popa
scas
test
xor
cmc
cmc
in
mov
stc
int
sarb
cmpsl
stos
dec
mov
sbb
out
sti
dec
rolb
or
cmp
sub
fidivrl
xchg
test
faddl
add
stc
adc
cmp
push
icebp
pop
xor
dec
in
js
int3
fistl
clc
aaa
pop
out
xor
mov
repnz
and
mov
sbb
sub
dec
mov
sbb
jo
scas
jl
das
divl
and
mov
sahf
mov
mov
xchg
scas
iret
push
and
mov
repnz
scas
ss
sub
pop
leave
dec
mov
cwtl
lods
mov
inc
or
addr16
mov
loope
and
push
dec
subb
inc
sahf
dec
gs
push
xor
mov
imul
ds
cs
or
jp
cmp
orl
push
in
pop
je
xor
push
ss
mov
xorl
add
jae
or
xorb
call
lret
cmc
cmp
rclb
adc
push
sbb
sahf
fwait
out
sbb
scas
outsb
shrb
push
test
pop
iret
pop
dec
fcmovne
je
lods
clc
pop
add
sbb
mov
loope
add
and
vmulss
push
dec
push
mov
and
sarb
shrl
roll
jge
or
icebp
pop
xchg
push
mov
sbbl
xor
es
xor
push
jecxz
push
ret
inc
dec
aad
cmpsb
stos
pop
in
pusha
mov
or
out
in
testb
jle
sbb
lahf
mov
add
std
loop
int3
bound
es
ja
pop
push
jns
out
data16
in
std
outsb
aam
cmc
mov
sub
add
imul
mov
jg
pop
out
cmc
movsb
pushf
pop
xchg
inc
stos
inc
sbb
add
sub
in
sub
inc
pop
lret
sub
popf
xchg
ret
or
push
adc
push
cli
pop
lret
or
mov
mov
sub
aam
imul
cmp
shll
das
andl
jb
in
in
lahf
mov
add
ss
and
and
mov
adc
stos
push
fildll
or
xor
xor
lret
and
lock
adc
mov
cmp
push
nop
addr16
roll
enter
movsl
mov
push
and
leave
push
and
pop
dec
lods
clc
aam
xchg
popf
mov
add
mov
lcall
push
popa
mov
pop
mov
dec
and
and
fildll
test
sub
mov
or
sub
push
push
pop
jae
xchg
jl
aad
add
mov
mov
movsb
pop
ds
pop
das
testl
pusha
adc
daa
lahf
mov
adc
mov
scas
data16
adc
emms
xchg
pop
fdivs
clc
std
xchg
or
mov
shrl
ss
push
jle
repnz
mov
prefetchw
cmp
adc
xor
push
mov
xchg
xchg
setnp
xchg
mov
xchg
mov
jmp
xchg
and
pop
ficoms
test
cwtl
loop
xor
int
dec
dec
icebp
lret
inc
mov
or
lock
fs
popa
adc
scas
jl
cmc
out
in
ljmp
mov
mov
sbb
inc
dec
pusha
sbb
stc
mov
jne
pop
sub
mov
adc
jmp
roll
sbb
dec
cmp
in
or
inc
add
je
and
inc
ret
pop
fmulp
jae
push
mov
lahf
sahf
out
loop
lock
push
sbb
imul
jae,pn
pop
fnsave
xor
call
sub
fidivl
xchg
mov
mov
xchg
cmp
sahf
mov
sub
jp
cmp
mov
sahf
push
and
sbb
bound
movsb
sbb
jae
daa
cmp
ror
cltd
mov
movsl
aas
incb
push
pop
ret
push
nop
sti
ret
aam
mov
mov
sub
mov
mov
cmpsb
int3
test
hlt
or
lea
dec
add
es
fsubs
cld
cmp
push
adc
adc
push
je
pop
adc
les
sub
lret
aam
jge
xchg
into
pop
fcompl
mov
fisttpll
jg
dec
or
mov
dec
aad
mov
cmc
rcrl
and
xor
ja
je
add
sub
lods
adc
sbb
imul
mov
sbb
dec
xchg
cmp
stos
jg
shrb
cwtl
or
pop
mov
pop
jnp
mov
adc
nop
aad
jmp
rorb
add
mov
je
scas
xchg
pop
dec
cmp
pop
mov
outsl
aaa
ds
inc
and
jp
leave
ds
out
fmuls
cmp
adc
mov
pushf
out
scas
mov
xchg
sub
sahf
hlt
js
cmp
adc
jnp
jnp
fsubr
cmpl
js
clc
shll
es
cmp
mov
adc
arpl
les
inc
push
repnz
and
cmp
sbb
jp
push
xchg
lahf
cmp
mov
notl
into
in
stos
je
push
cmc
jmp
aaa
pop
xor
jp
fisubl
xchg
les
divl
popf
bound
xchg
addr16
cltd
es
pop
sarb
sar
inc
add
sbb
filds
xchg
outsb
icebp
movsl
shl
fdiv
lahf
test
out
sbb
cmp
je
cld
cli
xor
xor
jbe
lahf
pushf
inc
fcmovnb
push
mov
lods
addl
xor
ret
mov
out
pop
mov
mov
inc
and
repnz
adc
add
and
popa
add
pop
mov
outsl
stos
or
insl
cmp
jnp
mov
push
xor
jp
data16
popa
bound
add
sti
xor
push
in
push
xchg
loop
pusha
xor
sub
sub
sbb
ret
addl
bound
imul
fsubrs
inc
lea
pop
dec
aaa
sbb
mov
fiaddl
mov
xor
cs
lret
adc
inc
sbb
dec
mov
popf
lods
fstpl
jo
and
aam
mov
negb
and
pusha
mov
imul
clc
cs
mov
xor
pop
add
mov
cltd
mov
push
lods
pop
mov
push
jmp
frstor
xchg
bound
jo
sub
pop
mov
into
push
fldenv
roll
mov
sahf
add
mov
mov
test
xchg
push
xor
xchg
sbb
mov
mov
jge
push
loope
scas
dec
lcall
pop
addl
js
call
and
push
push
dec
out
mov
dec
add
sub
addr16
cwtl
repnz
stos
inc
in
mov
bound
pusha
mov
adc
arpl
push
cmpb
mov
add
add
ljmp
jno
sub
mov
and
sbb
scas
repz
push
mov
adc
lret
jnp
sbb
ljmp
xor
lods
dec
cmpb
or
add
rclb
nop
or
adc
mov
dec
mov
push
xchg
lcall
sub
out
push
pop
xor
stc
xchg
add
xor
mov
dec
jge
mov
fwait
daa
jle
je
pop
test
pop
lock
cli
mov
std
lahf
subb
pop
pop
adc
inc
mov
das
pop
in
inc
adc
or
sub
aam
cmp
cmp
cwtl
loopne
adc
push
sbb
int
push
rclb
mov
and
or
data16
jne
out
ss
aad
daa
or
sub
loopne
fisttps
std
fwait
lods
out
sub
inc
add
adc
andps
nop
jmp
mov
inc
cmpsb
pop
ud0
dec
pop
fwait
dec
sbb
cmpsl
mov
push
jmp
lods
repnz
movsb
arpl
jmp
lahf
inc
dec
in
dec
mov
inc
addr16
and
imul
hlt
pop
stos
push
cli
testl
addb
dec
imul
lret
scas
push
loop
jo
cmp
icebp
push
hlt
stos
or
test
lds
and
mov
nop
aas
icebp
lock
ret
es
sti
lahf
and
sbb
mov
scas
push
aam
in
inc
dec
mov
or
test
shrb
test
mov
pop
mov
rorl
shlb
xor
aaa
enter
daa
rol
push
in
xor
xchg
out
mov
jg
lcall
loopne
and
ja
and
in
cmpsl
mov
inc
mov
xchg
fldenv
pop
shlb
inc
pop
lods
xor
push
mov
mov
dec
jge
je
xchg
xor
rolb
aad
daa
add
mov
adc
hlt
icebp
mov
xchg
push
outsl
add
mov
nop
pop
mov
fistps
xor
movsb
mov
in
std
xchg
jbe
pop
dec
sub
mov
mov
sub
push
sti
mov
xor
xchg
je
add
cmp
jl
pop
jns
cmpb
lcall
icebp
pop
scas
cmp
ret
fistpll
push
jbe
ljmp
arpl
dec
xor
push
pop
or
push
ja
cmpsl
mov
fimuls
mov
sub
xlat
out
add
movsl
cmp
lods
sbb
and
mov
cli
ret
add
dec
arpl
adc
and
dec
js
jmp
in
cmpsb
sbb
sahf
mov
sahf
cmp
fmuls
dec
loopne
dec
call
inc
adc
mov
aaa
imulb
adc
rorl
dec
dec
inc
push
outsl
pop
jb
lods
out
push
pop
imul
outsl
mov
jp
iret
push
jmp
rcrb
push
int3
add
jp
push
pop
mov
loope
out
mov
sbb
in
gs
inc
xor
jmp
mov
lahf
in
cmp
mov
orl
dec
mov
pop
mov
or
inc
repz
ss
and
cmp
data16
inc
repnz
cmpw
jns
lea
je
loopne
sbb
push
lods
jl
ficomps
jg
sub
or
cmp
fiadds
or
outsb
jne
pop
mov
xchg
sbb
int3
xor
lahf
mov
mov
xchg
ret
jno
popa
in
outsb
or
sahf
insl
mov
ret
lods
inc
orb
into
and
imul
aaa
mov
sub
sub
stos
cmp
xchg
and
inc
jg
inc
stc
xchg
sbb
pop
and
fs
insl
fisttpll
push
das
push
sbb
mov
sub
pop
mov
faddl
mov
push
fyl2xp1
data16
add
or
clc
or
loope
adc
xchg
mov
push
push
das
xor
mov
adcb
or
rcl
cli
inc
cwtl
lods
icebp
lret
leave
mov
gs
test
or
insl
test
xchg
pop
insl
inc
pop
loopne
xchg
sub
cmp
rcl
dec
hlt
lret
xor
mov
sysexit
popf
imul
bound
scas
cmp
mov
enter
jle
shrl
cltd
cwtl
sbb
fs
dec
inc
jmp
fisubrs
les
xchg
sub
jge
jb
xor
loopne
xor
pop
xchg
fwait
daa
popa
inc
add
mov
je
sahf
mov
add
mov
inc
leave
call
test
std
insb
adc
and
sbb
lahf
sbb
dec
mov
in
push
mov
outsb
cli
push
xchg
iret
xor
bound
sbb
push
nop
rcr
mov
imul
icebp
aad
daa
sub
ja
orl
pusha
xor
jle
shr
movsl
fs
out
jge
fdivrl
sarl
div
push
jp
jmp
mov
mov
jg
shrl
pop
or
imul
lret
mov
test
xor
and
fisubrs
ljmp
or
cmc
cltd
stos
gs
nop
xor
imul
push
pop
xor
push
pop
push
lods
mov
mov
mov
mov
jl
xchg
mov
sbb
ljmp
out
or
mov
adc
pop
dec
fninit
pop
inc
jmp
push
and
inc
cltd
lahf
dec
mov
aad
loope
or
out
dec
lea
push
in
mov
mov
dec
out
push
pop
std
das
sub
push
out
and
add
dec
xorl
push
pop
sti
rcll
mov
cmc
dec
das
sbb
push
mov
lcall
cmpsb
mov
in
lea
jbe
iret
repnz
mov
jle
icebp
xor
fsub
inc
es
shrl
sub
insl
pusha
idivb
cs
xorb
jbe
aaa
jecxz
xchg
ffree
dec
lock
mov
jg
loope
fucomp
sbb
in
aas
test
xlat
cli
ficoms
and
xchg
insb
mov
mov
cli
adcb
push
and
les
int
out
mov
sub
fmul
cmpsb
hlt
test
ret
sub
cmc
dec
es
out
je
jbe
fbld
sbb
xlat
aam
fildll
adc
popf
adc
aas
jmp
inc
loop
lods
test
mov
xchg
jle
or
add
cli
jne
aaa
cmp
lock
repz
cmp
dec
pop
adc
cmp
adc
pop
jg
scas
adc
rcrb
scas
je
add
cs
jns
push
cmpsl
cmp
sub
jmp
mov
sub
pop
adc
sub
push
dec
mov
mov
jae
cwtl
dec
and
mov
ss
movsb
sbb
cmp
cwtl
inc
imul
push
sbb
mov
jl
aaa
adc
jne
xchg
sbb
std
or
mov
xchg
les
xlat
push
icebp
sub
sbb
sub
push
out
jns
push
pop
btr
aad
ljmp
or
and
inc
or
pop
xchg
mov
pop
loop
cltd
arpl
pop
cmp
push
cli
sti
or
sbb
shrb
cmp
jecxz
pop
add
inc
ljmp
push
adcl
jnp
int
and
cmpb
jno
iret
inc
mov
sbb
pop
cmp
xor
sub
test
add
jle
lods
dec
loopne
cmp
ficompl
or
pop
fistpll
imul
ljmp
sahf
loope
mov
cmpsl
inc
sarb
shrl
hlt
push
fs
inc
pop
ljmp
lds
sub
pop
ljmp
sub
ret
stc
push
mov
jmp
mov
out
mov
ja
push
insl
jnp
fldt
inc
ret
xor
add
lahf
adc
pop
insl
mov
cmp
addr16
push
addr16
sbb
add
mov
dec
mov
call
mov
pop
or
push
xchg
mov
addr16
fsub
jns
cli
jle
xchg
xor
dec
or
daa
andl
pop
inc
sbb
cmp
mov
inc
pop
dec
test
popa
ss
js
divb
sbb
repz
lcall
roll
rolb
and
jl
out
fs
xlat
push
mov
fwait
and
lea
fistps
addr16
sbb
data16
lret
scas
stc
mov
cmpsb
xor
pushf
dec
push
sbb
int3
icebp
xor
nop
and
mov
arpl
mov
mov
mov
add
sub
loope
or
pop
movl
cmp
call
invd
test
pusha
cld
insl
call
fwait
adc
jmp
cwtl
dec
or
adc
xor
sub
shll
cltd
dec
ds
jno
fistpll
insl
and
or
push
sbb
loopne
aam
outsl
test
mov
stos
jns
adc
aad
xchg
test
cmp
jl
orb
popa
jl
mov
decb
enter
pusha
and
sub
cmp
and
mov
sbb
xchg
stos
dec
fxch
jle
pop
inc
inc
mov
lea
or
aad
movsb
pop
mov
fdivrl
sbb
xchg
pop
loop
fimull
popa
mov
stos
jnp
js
in
cmovb
out
testb
cmp
xchg
lcall
or
xchg
decl
cmp
pop
or
jb
cld
mov
mov
test
xor
shl
ret
lea
pop
mov
lret
les
cmp
mov
adc
adc
adc
xchg
dec
outsl
sahf
add
mov
pop
sarb
jbe
inc
jns
call
inc
sub
sbb
pop
fldl
add
xchg
sbb
cmp
into
mov
push
pop
ss
movsb
lock
scas
je
adc
arpl
arpl
sub
insl
lret
movsl
shr
repnz
pop
and
xchg
inc
cmpb
sbb
in
and
mov
mov
lcall
inc
fstl
and
popf
mov
jp
xor
outsb
cmp
out
jnp
int
or
insl
dec
stos
cld
pusha
lods
dec
stc
js
cmc
add
inc
dec
sub
push
outsb
pop
xchg
arpl
or
push
stc
loop
pop
and
adc
jl
adc
int
cmp
ljmp
popa
cmc
and
cmp
cmp
add
call
movd
out
daa
fs
les
imul
push
or
adc
pop
sub
mov
jnp
and
enter
inc
cmpsl
insl
and
mov
adc
int
test
jecxz
nop
fldt
cli
paddd
gs
test
sub
sbb
cld
add
xchg
testb
and
movsb
sbb
icebp
je
push
jb
mov
cmpsl
mov
cmpsb
in
mov
lods
nop
or
ja
out
mov
add
cmp
insl
insl
nop
xlat
push
inc
xor
faddl
jnp
and
das
sti
ss
lret
test
xor
cmp
jo
xorb
xor
ljmp
cld
fcmovb
std
mov
int
pop
add
filds
xor
mov
gs
pop
adc
inc
shrl
mov
test
push
pop
pusha
push
aaa
cmpsl
cwtl
imul
loop
push
push
clc
jg
movsb
mov
adc
scas
mov
fwait
popa
stos
inc
out
push
shl
loop
lcall
cmp
mov
jecxz
adc
sub
sub
and
cmpsb
add
sub
mov
adc
jecxz
testl
dec
push
scas
jle
xor
pushf
cmp
push
xchg
mov
outsl
fnstcw
pop
mov
in
xor
sarl
adc
push
mov
pop
pop
test
jge
cmp
test
and
sti
adc
xor
scas
insb
mov
imul
aas
dec
sbb
jo
subl
inc
pop
popa
add
cltd
sbb
ss
mov
nop
pop
lea
jmp
mov
out
inc
pop
jecxz
add
scas
mov
push
sub
or
add
cmc
aaa
cmp
xor
xchg
loope
push
neg
enter
add
and
fisttpl
incl
lock
xlat
mov
icebp
mov
cmp
xchg
scas
daa
xchg
cmpsb
mov
jne
lds
rorl
or
movl
call
loopne
aas
adc
fsubrl
outsl
loope
push
sbb
xor
mov
xchg
xor
iret
adc
xchg
insb
jne
je
enter
and
rorb
cld
insl
outsb
enter
jb
bound
xor
pop
cli
roll
out
mov
fwait
scas
jne
xchg
lahf
sbb
hlt
sub
outsl
mov
cmc
pop
cld
push
and
jnp
repz
popf
repz
push
jno
mov
xchg
jne
mov
rep
retw
stos
frstpm(287
pop
sbb
decb
aam
test
or
ja
jge
fwait
jo
rcrl
test
rcrl
push
std
ja
stc
daa
sbb
fistl
lods
pop
pop
aaa
jns
mov
arpl
addr16
mov
pop
jp
xlat
inc
pushf
flds
nop
jmp
out
bound
xchg
mov
push
lret
sti
xor
stos
call
imul
xchg
pop
sub
xchg
dec
jmp
push
aad
sti
mov
mov
sub
xchg
pusha
popf
pop
stos
fcmove
mov
and
pop
add
mov
es
or
and
push
addr16
add
in
ficoml
xlat
rcrb
jns
push
inc
xor
cmp
pushf
sbb
repnz
fs
popf
jge
sbb
push
std
pushf
out
push
icebp
jnp
mov
sbb
mov
out
push
mov
into
lea
rol
mov
cmp
idivl
daa
dec
mov
sub
mov
jne
arpl
stc
inc
jp
pop
ja
sub
fiaddl
out
and
jp
jge
xorl
push
mov
fbstp
lea
call
rcll
push
lret
fwait
push
les
xor
add
ret
jnp
or
rcrb
daa
push
sub
test
aad
xor
pop
pop
sti
mov
push
sti
cmpsl
cmp
jno
jl
sbb
pop
push
xor
mov
jae
hlt
dec
popf
cld
aaa
jmp
pop
mov
sub
shlb
shll
inc
and
inc
test
sub
fldl
sbb
scas
mov
jecxz
sbb
lret
stos
stos
sti
ljmp
lret
rcll
cmpsl
dec
lcall
pop
dec
inc
pushf
int
addr16
or
xor
dec
fiadds
sti
shll
sub
push
aaa
scas
add
sbb
imull
adc
pop
dec
icebp
pop
lods
outsl
push
cmpsb
add
dec
jmp
movsl
add
inc
jne
aam
jle
mov
xchg
out
add
jns
les
iret
or
push
jno
sub
push
or
mov
sub
addl
sub
cmp
test
sbb
movsb
sbb
push
cmpl
cmp
push
jno
jno
mov
aas
cmp
jecxz
stos
ficoml
mov
hlt
sbb
loop
jge
xchg
lods
add
js
ljmp
mov
mov
cmc
xorl
push
pop
mov
jno,pt
xlat
int3
push
pushf
fstpt
mov
mov
lea
loop
fcomps
sahf
repz
adc
fstl
add
dec
dec
sub
xor
enter
jae
pop
fs
fndisi(8087
jp
in
stc
jl
and
aas
mov
add
push
push
jne
idivl
pop
shl
push
rorl
inc
fisttpll
pminub
popf
mov
cmp
insl
xor
stos
dec
jo
add
mov
mov
and
test
dec
add
sbb
outsb
fistpll
lret
test
in
notl
fbld
push
mov
push
push
in
add
shr
push
nop
jl
repz
in
jecxz
add
iret
mov
mov
enter
es
jns
xchg
adc
xchg
repz
ds
rolb
jmp
and
xchg
repnz
dec
cwtl
test
aaa
xchg
sbb
je
fs
imul
inc
push
les
xchg
cltd
mov
add
ss
jne
arpl
test
dec
dec
pushf
push
mov
add
lret
ss
cmp
out
icebp
sahf
test
scas
mov
cmpsl
in
scas
push
imul
ror
leave
mov
cmp
jl
mov
sbb
mov
fnstcw
cmp
insl
inc
add
mov
mov
gs
push
ret
pushf
mov
or
jne
pushf
insl
insb
lds
std
push
int3
cld
lret
pusha
sub
or
pop
mov
aam
call
and
out
test
outsb
andb
fistps
mov
push
daa
sub
sahf
test
mov
adc
mov
fistpl
lcall
cmc
hlt
loope
fistps
sbb
xchg
inc
out
mov
mov
test
fistpll
xchg
xchg
gs
mov
adc
pop
jmp
adc
nop
gs
push
jle
mov
int
push
lret
dec
push
orb
inc
shrl
add
and
add
adc
test
repnz
arpl
addr16
out
pop
mov
je
adc
fnstenv
cli
push
jno
sbb
push
outsb
and
stos
adc
push
xchg
xchg
inc
mov
pop
add
ret
xchg
dec
inc
orl
cmpsb
mov
or
sub
roll
stc
test
cs
mov
cltd
lahf
mov
cld
fldcw
stc
mov
adc
and
pop
fmull
clc
xchg
inc
push
xchg
cltd
push
imull
rorl
rep
sbb
lods
sbb
mov
movsb
push
mov
mov
inc
inc
fisubl
lods
cmp
insl
add
push
andb
test
mov
int3
sbb
adc
cld
mov
daa
push
push
mov
sub
cmp
jge
cmpsb
lock
idivl
int3
pop
add
inc
popa
dec
cmp
mov
inc
add
pop
dec
push
cwtl
mov
addr16
jmp
sbb
add
mov
ficompl
and
mov
and
sub
xchg
dec
sahf
or
in
sbb
sbb
xor
insb
repz
aaa
mov
xchg
sahf
sbb
icebp
ret
sahf
push
cmp
lock
loop
rcrl
dec
cmpsl
jl
fcmovbe
repz
dec
mov
lahf
pusha
in
mov
xor
dec
int3
sub
adc
mov
mov
pop
cli
orl
movsb
outsl
mov
nop
inc
mov
xor
and
aaa
mov
loope
adc
xchg
xlat
cs
dec
add
mov
cld
mov
fimull
push
sbb
mov
andl
push
push
add
adc
loop
dec
shlb
cmpsb
mov
dec
sbb
xchg
jb
lret
movsb
sub
pop
pop
scas
filds
cld
mov
iret
pop
fwait
mov
mov
sbb
jg
sub
jl
aaa
loop
mov
pop
mov
mov
fadd
xor
jecxz
dec
orl
sbbb
pushf
fnsave
aam
jle
or
sarb
std
nop
dec
out
test
repnz
cmc
test
push
xor
push
outsb
or
dec
inc
scas
push
add
xor
cmp
dec
mov
sbb
or
pushf
or
sbb
sub
mov
adc
js
out
data16
mov
scas
cmp
mov
jae
sar
imul
dec
fistpll
xchg
and
cli
enter
adc
jno
sub
divb
sub
stos
das
push
out
pop
xchg
jmp
fnstcw
sub
faddl
arpl
pop
std
loopne
or
sub
out
je
mulb
js
jge
xchg
repnz
add
scas
jmp
out
add
fnstenv
cmp
inc
xorl
cmp
or
mov
mov
mov
inc
mov
outsl
mov
or
imul
popf
in
and
sbb
cs
fcomp
int
and
push
jge
push
jno
xchg
pop
mov
rorb
into
push
jge
push
jle
jno
mov
jb
or
xchg
iret
xchg
mov
mov
pop
jecxz
mov
fsubrs
xchg
mov
sbb
push
push
jl
fstpl
fwait
subl
rcrl
xchg
xor
mov
inc
push
in
outsb
sub
bound
jnp
mov
icebp
jns
push
sub
shlb
add
inc
js
pop
sub
inc
out
adc
inc
and
xchg
shll
pushf
inc
pop
aaa
mov
cmpsb
and
jp
rcl
cmp
push
aas
es
dec
mov
xor
or
pop
lock
cmp
sbbl
enter
arpl
leave
movb
aam
jae
inc
iret
hlt
icebp
rcl
lahf
rorl
mov
push
sub
push
enter
loopne
jo
sub
fwait
sti
adc
mov
xchg
or
ret
cmpl
daa
jns
mov
adc
ficoms
outsb
pop
test
push
push
bound
aad
sbb
or
loope
test
add
lds
popa
call
pop
dec
inc
mov
jg
jg
push
jmp
in
scas
or
outsl
jbe
jp
ret
call
adc
sub
mov
lods
mov
jns
in
jno
mov
pop
pushf
mov
fxtract
sub
sub
push
cmc
dec
xchg
repnz
push
cli
lahf
pop
xchg
iret
mov
mov
imul
sub
gs
icebp
fisubrl
sub
mov
int
pop
jno
mov
jno
xlat
adc
or
fwait
iret
jnp
andb
stos
xor
test
mov
test
push
call
stos
and
jnp
xor
sbbb
imul
fnsave
pop
mov
cmpsl
cmpsb
jno
fwait
sub
xor
rep
or
or
lock
nop
jae
fists
or
data16
lahf
lret
ss
std
insl
loop
aad
xchg
js
fwait
adcl
sub
jl
xchg
jbe
ret
mov
scas
js
shll
dec
repz
rcrb
loop
sti
ds
dec
adc
sbb
lock
inc
dec
sub
push
ret
cmp
arpl
das
inc
dec
pop
out
shll
dec
adc
sbb
pusha
pop
cmp
xchg
or
dec
or
aad
loop
fiaddl
sub
jle
jl
dec
loopne
pop
out
or
movl
les
xor
jo
xchg
sbb
and
mov
into
jo
push
add
and
jle
sub
aam
or
fdivrs
mov
mov
in
sub
cmp
inc
mov
sbb
popf
cmp
jge
js
adc
fwait
ret
cmp
mov
pop
push
sub
lock
dec
jnp
std
pop
mov
scas
leave
cmp
aaa
xchg
and
pop
cmp
ja
push
cwtl
dec
add
mov
jne
push
or
add
mov
mov
iret
lock
fcmovnu
or
sahf
cli
popf
inc
shrl
lahf
push
and
mov
call
pop
addb
outsb
shll
adc
leave
pop
fists
in
dec
scas
shlb
out
xchg
lahf
cwtl
cwtl
cmpb
mov
sbb
jnp
or
cmp
sbb
mov
fdivp
fs
aam
clc
shr
and
cmp
and
adc
adc
sbb
xor
xlat
pop
adc
outsb
xchg
test
lods
insb
daa
dec
cmp
inc
icebp
gs
scas
mov
subb
or
xor
jg
cmpsl
insb
roll
and
mov
jbe
neg
outsl
inc
add
push
jns
lock
pop
pushl
push
lahf
sbb
mov
leave
fwait
in
ret
mov
jg
and
cmc
hlt
mov
mov
test
fdivs
dec
and
hlt
enter
adc
pop
or
mov
mov
inc
lock
addr16
jae
sub
dec
cmp
repz
fbstp
mov
lock
mov
mov
add
adcb
adc
lret
mov
jnp
outsl
adcb
incb
cmc
jmp
jl
push
add
xchg
outsb
movsb
addr16
adcb
shll
fucom
popl
shl
xchg
push
setb
inc
or
mov
mov
adc
or
fwait
jp
and
sub
xor
fidivl
sub
stc
inc
nop
or
addr16
in
test
popa
fwait
xchg
jb
or
gs
mov
pop
das
fistps
lret
sub
and
sti
mov
pop
push
mov
xchg
lock
mov
gs
icebp
or
iret
rol
cmp
cmovno
mull
out
mov
in
andl
xchg
ret
ljmp
hlt
rcl
in
xchg
pop
fnstenv
sub
or
test
push
mov
imul
adc
popf
arpl
sub
xchg
mov
arpl
dec
adc
rol
mov
js
push
out
insb
mov
in
adc
adc
int
push
jg
in
cmp
or
testb
jmp
lock
mov
mov
aam
pop
cmc
xor
mov
xchg
shll
jbe
cmp
mov
loopne
push
lods
iret
lret
decb
add
push
iret
insl
mov
dec
add
mov
pop
rcr
dec
enter
dec
dec
loopne
fcoms
or
rorl
movsb
mov
xchg
in
adc
adc
push
inc
sbb
xor
cmp
dec
andl
shrl
jg
xchg
jl
cld
outsl
jl
das
jno
pop
add
push
mull
sub
jle
push
cmp
inc
xor
imul
mov
mov
rcrl
add
push
pop
jo
sub
dec
mov
jle
pop
jl
push
pop
inc
mov
sub
std
enter
add
mov
scas
call
mov
ficoml
repz
hlt
jnp
pusha
pop
scas
mov
out
fadds
test
push
mov
andb
bound
pop
ss
mov
es
out
arpl
test
mov
mov
and
aad
popf
sbb
lea
popf
lcall
xor
add
jae
cmpsb
mov
div
pop
add
mov
dec
jne
jmp
push
stc
sub
pop
das
xchg
xchg
xlat
pop
mov
jne
lods
sbb
pop
push
outsl
ss
add
xchg
sub
or
lea
and
cmp
sbb
mov
jb
mov
dec
stc
cmpb
pop
dec
push
xchg
sbb
movsb
jnp
out
test
sti
cmpsl
iret
hlt
ficoml
sbb
add
adcb
or
ljmp
iret
lret
repz
jg
cmp
hlt
cmpb
pop
xchg
jmp
add
jl
mov
mov
out
icebp
loop
daa
pop
push
imul
ret
or
adc
or
notb
sbb
cmpsl
jno
adc
pop
shll
jl
mov
mov
xchg
jo
cmp
out
jecxz
rclb
pop
outsb
or
mov
ds
adc
cmp
push
shr
fmulp
adc
push
mov
test
and
sbb
fs
lcall
pop
jbe
subl
pop
mov
jge
leave
sub
imul
and
jae
shrb
cmpsl
lahf
dec
pushf
rorb
repz
fmuls
xchg
sbb
popf
pusha
jns
popa
mov
mov
int
fldt
lds
pusha
mov
push
pop
call
lret
nop
dec
arpl
mov
add
jno
inc
sbb
ret
cmc
xchg
cwtl
jns
mov
adc
arpl
and
cmpsl
divb
scas
out
aas
out
andl
mov
enter
das
mov
movsb
lcall
mov
xchg
loope
push
imul
enter
outsb
imul
add
mov
cmp
push
mov
cmp
aaa
in
mov
pop
mov
sbb
push
jb
loopne
imulb
jne
jle
adc
cmp
into
je
xchg
arpl
in
cmp
pusha
mov
push
popa
sub
pop
fadds
stc
mov
adc
adc
xor
mov
cmp
mov
add
dec
jg
filds
stc
lods
xor
adc
push
test
and
adc
es
adc
test
mov
lret
pop
fisttpl
outsb
xor
fcompl
sub
subl
das
test
fmull
out
xor
outsl
dec
test
pop
mov
popa
add
imul
jns
and
adc
dec
sub
int
pushf
push
and
fidivl
sub
ficoml
dec
data16
stc
add
mov
sbb
xchg
push
je
mov
insb
shrb
movsb
jns
adc
jge
jge
loop
pop
mov
sbb
jne
fstl
clc
mov
sbb
cmp
fldenv
xchg
inc
sub
push
jb
fisttpl
adc
and
nop
lea
out
insl
push
andl
ret
mov
dec
pop
pop
adcl
int
not
out
icebp
xchg
pushf
jbe
jmp
cwtl
adc
push
imul
bsf
mov
loopne
xchg
xchg
fld
pop
ret
xor
add
call
xor
cmpsl
out
inc
xchg
or
mov
roll
add
aas
dec
dec
outsl
sbb
jb
jno
lods
fstpt
add
lret
repz
pop
std
pop
mov
jge,pn
add
jge
loope
stos
add
and
cmpb
inc
mov
or
cli
jne
enter
outsb
mov
mov
sbb
mov
cwtl
xchg
das
leave
xorb
in
xchg
aas
cmp
pop
jno
js
mov
mov
ror
das
imul
lcall
inc
push
inc
add
mov
dec
cmp
jae
pop
adc
xor
andb
addr16
xor
sbb
in
test
jmp
out
mov
xor
cmp
jp
dec
movsb
adc
fldl2e
and
std
xor
xor
mov
mov
es
sbb
mov
inc
push
arpl
mov
iret
jns
stos
test
dec
clc
arpl
std
cwtl
dec
repz
sbb
mov
clc
push
pushf
xorl
and
push
mov
andl
iret
cwtl
scas
hlt
cmpsl
outsl
jecxz
xchg
pop
popa
fldt
adc
jns
negl
popf
and
jmp
or
icebp
movsb
stos
bound
scas
jns
test
insb
fisubrl
mov
loopne
adc
adc
jg
pop
sub
and
dec
aaa
mov
ljmp
or
add
xor
scas
repz
pop
xchg
movd
cmp
jo
out
aam
out
js
int3
inc
pop
mov
fs
lds
aad
cmp
pop
test
mov
add
ja
shll
mov
fs
int3
popa
xchg
les
xchg
and
je
pop
add
push
ds
dec
adc
mov
mov
pop
ret
sub
push
in
leave
mov
sbb
cmpsl
mov
arpl
fcomps
xchg
in
push
pop
cmp
daa
pop
cwtl
mov
dec
orb
mov
sub
ss
test
pop
xchg
jg
clc
add
dec
jecxz
mov
leave
lds
in
loop
cmp
inc
adc
dec
stc
cmp
iret
add
ds
sarl
aas
dec
testl
xlat
add
or
lock
adc
mov
pushl
scas
dec
jno
test
shll
repz
insb
movq
in
cmpsb
jmp
dec
std
sbb
fisubs
xor
sar
out
push
std
imul
sbb
icebp
movsl
stc
xor
xchg
pop
leave
add
cwtl
decb
sbb
xor
sub
dec
clc
loop
fnstcw
pop
or
dec
and
xchg
inc
dec
ds
add
mov
mov
filds
and
sbb
xor
stos
cmpsl
test
mov
sub
jge
push
roll
lahf
sti
jns
push
testb
ljmp
shlb
ss
sbb
pop
add
dec
xchg
dec
bound
cld
lods
xlat
scas
mov
inc
lcall
xchg
dec
popf
add
scas
pushf
push
push
shlb
and
push
outsb
scas
stos
jnp
scas
outsl
jp
sbb
hlt
into
xor
dec
clc
mov
xor
out
adc
lea
mov
ja
fadds
jnp
popf
fs
fistpll
xchg
fisubrl
iret
lods
lods
cwtl
fldl
dec
std
scas
mov
std
shrb
mov
iret
dec
lea
jg
xchg
pop
jp
cmp
mov
mov
aaa
cmpsb
sahf
addr16
push
ljmp
clc
popa
sahf
push
or
addl
or
xchg
clc
out
mov
push
inc
jo
xchg
iret
std
xor
sbb
les
sub
dec
or
cmp
ja
lods
sarl
xchg
inc
rcrl
xchg
ss
cwtl
mov
mov
mov
out
roll
cmpsb
lock
js
popa
cmpsl
lret
repnz
xchg
in
dec
sti
cli
add
lock
adc
aad
aas
and
cltd
dec
jb
fcom
or
inc
sbb
lea
clc
mov
out
addr16
xchg
inc
mov
pop
jmp
jl
mov
jbe
and
xchg
sub
pop
pop
jecxz
fs
fadds
leave
xor
xor
andb
jnp
pop
cmc
and
fld
jmp
and
jae
pop
add
stc
pushf
xor
xchg
sbbl
notl
or
jecxz
fstpt
mov
pop
sbb
setl
add
jp
sbb
mov
pop
inc
lock
mov
and
sbb
mov
or
adc
cmp
xchg
xor
idiv
xor
add
pushf
sbb
sbb
and
rolb
lret
jmp
inc
rorb
fisttps
sub
dec
into
nop
ret
xchg
push
dec
cmp
mov
sbb
xchg
lcall
call
rol
test
cwtl
cmp
les
fidivrs
xor
mov
mov
pop
xor
cltd
roll
cmp
stc
lds
lret
rorl
in
adc
imul
sbb
sub
mov
pop
bound
jo
mov
jl
jmp
sbb
mov
or
ja
repnz
dec
mov
fisubs
cmpsb
shl
idivb
push
lods
push
jp
push
sbb
faddl
out
jae
lahf
dec
cli
xlat
inc
repnz
inc
arpl
mov
data16
outsb
insl
jne
stos
mov
dec
hlt
fimuls
jno
sbb
inc
pop
clc
mov
je
sahf
pop
shrb
xor
sahf
mov
and
fnstcw
xlat
pop
jno
mov
shlb
inc
jnp
cwtl
test
jno
xor
xor
sub
iret
mov
jno
out
mov
or
mov
lea
add
loop
push
aaa
mov
jl
addr16
ret
int3
les
movsl
in
scas
sbb
inc
arpl
fisubrl
out
popa
add
push
das
inc
sub
jmp
fiaddl
push
add
in
xchg
pop
mov
cs
jmp
sbb
mov
add
xchg
and
jbe
mov
dec
aad
mov
xrelease
aam
push
sahf
std
dec
or
fisubrl
push
cmp
pop
loope
adc
ljmp
aad
ljmp
rclb
inc
outsb
loope
loopne
lret
in
aad
loop
fsubp
mov
int
sbb
mov
cltd
popf
mov
cmp
mov
nop
js
jmp
mov
push
lds
xchg
jne
popa
fsts
clc
in
xchg
es
or
mov
cs
fisubrl
fucomp
fldl2e
sti
test
inc
fwait
notl
idivl
mov
xor
sar
lret
inc
aad
rol
mov
and
inc
scas
fiaddl
pop
mov
or
add
adc
out
cwtl
xor
sti
repz
jno
xor
movsb
sbb
in
or
adc
pop
xor
test
cmp
sub
push
pop
mov
jnp
pop
mov
jmp
scas
adc
sub
jecxz
int
es
push
popa
xor
sbbb
xchg
dec
ret
ret
in
loop
add
pop
xor
sbb
and
je
sub
call
rcll
in
lds
mov
dec
out
shll
daa
cwtl
pop
decb
notl
pop
xor
in
cs
cmp
xchg
push
inc
adc
xchg
imul
jno
adc
ja
loop
jno
das
fs
in
call
fwait
scas
pop
lcall
lods
xchg
push
test
adc
xor
mov
and
test
fwait
ss
sub
jmp
aas
push
fwait
std
call
iret
sub
mov
mov
insb
push
cmp
mov
push
mov
mov
rep
insb
insb
lds
ss
data16
inc
jno
popa
shl
outsl
cld
movsb
cltd
or
clc
xor
cmp
popf
test
js
mov
std
mov
mov
fidivl
xchg
call
aaa
push
rcl
or
in
aad
fldt
loopne
jne
cmp
mov
outsl
adc
ds
dec
in
adc
cmpsb
or
data16
out
ret
outsb
sbb
cld
sbb
repnz
push
cmp
pop
and
cmpsl
js
enter
repz
in
stc
test
jne
sar
rcr
shrb
sbb
lret
adc
mov
outsl
push
lahf
mov
loopne
dec
bound
fistps
xor
cmp
testl
xor
sub
push
mov
fldt
xor
push
icebp
leave
pop
push
push
gs
dec
lahf
int3
ds
sbb
mov
jg
sbb
je
jmp
jg
cmc
std
scas
adc
mov
sub
sbb
cmp
sub
push
mov
jae
xchg
xor
je
push
xchg
divb
and
mov
hlt
mov
shrl
les
js
in
pop
push
xchg
mov
in
rol
adc
or
mull
fisubs
loop
sub
mov
xlat
popa
pop
daa
outsl
sbb
pop
out
in
mov
sbb
sbb
outsb
pop
aas
dec
mov
daa
cwtl
mov
fiadds
fptan
xchg
scas
out
inc
std
xorl
pop
adc
call
lock
shlb
inc
mov
lcall
xchg
jecxz
repnz
adcl
repnz
les
in
jno
mov
pop
pop
and
aad
dec
divb
dec
jnp
mov
in
mov
scas
test
and
adc
test
pop
stc
cld
loope
fldcw
dec
xchg
mov
adc
add
lcall
xor
out
sbb
inc
sbb
ret
fwait
enter
int
enter
xlat
sub
in
push
xor
sub
xchg
aas
shrl
sahf
inc
xchg
incb
mov
sarb
ud1
dec
add
mov
pop
das
arpl
ret
sbb
pop
xchg
dec
mov
push
bound
in
outsl
sahf
mov
cmp
es
es
ds
inc
xor
je
or
js
mov
out
fidivs
in
adc
je,pt
push
insl
dec
data16
cld
lret
mov
lahf
cmp
inc
push
dec
ret
std
jecxz
xchg
pop
fbld
icebp
std
and
pop
outsb
mov
xchg
xchg
jle
out
loop
pop
stc
pop
mov
cmpsb
in
daa
insb
jne
jo
sahf
adc
push
push
das
pusha
xchg
ljmp
stos
cmp
xor
out
outsl
mov
mov
dec
mov
cmp
inc
or
xchg
movsb
add
scas
nop
fisttps
or
jp
xor
xor
jns
flds
insb
fsubr
dec
sbb
pop
inc
fldenv
and
cli
js
mov
enter
xor
ds
push
adc
test
enter
fld
cltd
shrb
sub
notl
sarb
jge
gs
es
loop
cmp
cs
lods
dec
sti
popa
dec
jbe
jl
stos
mov
jp
mov
mov
mov
inc
shlb
outsb
jecxz
and
mov
repnz
loope
cltd
es
les
repnz
jo
pop
or
pop
jl
jp
daa
xchg
xchg
mov
es
and
out
mov
data16
nop
push
inc
and
ds
and
cmp
and
xchg
ljmp
movsl
dec
mov
add
lds
mov
insb
xchg
pop
add
repz
rcll
inc
lret
mov
lea
ljmp
imul
insb
xor
insl
iret
idiv
out
xorl
dec
mov
int
xor
lods
xchg
movb
jae
pop
mov
js
sbb
jo
std
mov
jecxz
mov
lock
lods
xchg
mov
pop
in
dec
pop
mov
inc
sahf
aas
xlat
mov
jnp
mov
ds
fldz
add
in
add
mov
push
fstl
push
sbb
mov
adcl
pop
stos
mov
inc
xchg
notl
pop
jg
cmp
xchg
push
ss
xchg
aaa
loope
dec
sbb
aas
jge
dec
leave
fisttpll
daa
inc
push
and
mov
or
sbb
or
cwtl
push
dec
cmpb
daa
jbe
pop
repz
adc
mov
test
mov
cltd
je
sub
sbbl
mov
mov
repz
and
and
mov
jne
xchg
pusha
mov
js
inc
enter
fdivrs
add
ror
shll
sub
xlat
or
pop
mov
mov
xor
inc
adc
fucomi
jecxz
ljmp
pop
inc
stos
and
mov
adc
mov
xor
mov
roll
push
sub
je
in
ficoml
xchg
jnp
lahf
fwait
dec
push
push
dec
add
andl
scas
addr16
or
ret
pop
lds
pusha
mov
inc
cwtl
es
xlat
fldenv
jge
pop
in
xor
ja
movsl
mov
jne
mov
repnz
push
outsl
add
mov
mov
test
xor
mov
sti
pop
rclb
sbb
push
jne
fwait
aaa
push
insb
mov
mov
inc
sti
inc
pop
repz
fcoml
add
lods
adc
mov
mov
inc
mov
inc
fnstsw
xor
int3
ret
pop
mov
outsl
push
mov
adc
jb
pop
hlt
sub
mov
pop
dec
std
testb
xchg
pop
jae
inc
lds
sbb
out
pop
pop
adc
insb
std
xorb
outsl
xchg
jmp
dec
mov
mov
or
repnz
pop
push
std
push
rolb
stc
ret
fistps
in
out
loope
pop
push
fisubrs
ret
test
int
dec
lods
mov
hlt
pop
mov
das
xor
sub
repnz
jge
bound
in
aam
and
mov
ljmp
int
push
ss
out
sahf
sbb
incl
xchg
loope
push
or
pushl
mov
fistl
jno
js
jbe
cmovae
jb
lret
dec
into
inc
nop
popa
mov
push
mov
icebp
dec
jb
jmp
in
lods
test
push
sbb
jecxz
add
add
leave
sub
test
xchg
stc
push
outsl
xchg
addb
fdivr
fwait
dec
pop
pop
dec
shll
and
dec
jmp
jge
aad
jae
mov
add
jno
xchg
jno
call
ret
movsl
mov
fdivrs
pop
in
gs
movsl
imulb
cmp
or
cmp
pop
ret
lds
xchg
out
xlat
testl
mov
lods
mov
xchg
dec
fdivs
xchg
imul
push
loopne
jg
jmp
outsb
fstps
rcrl
lock
aam
cmp
mov
cmpsl
mov
test
jecxz
dec
push
pop
sub
push
js
mov
js
mov
pop
mov
lods
jnp
jl
movsb
std
inc
test
inc
inc
push
out
mov
into
bound
stc
mov
push
mov
bound
sbb
sbbb
add
lods
dec
ret
push
cmp
cld
das
xchg
adc
les
jne
dec
stc
in
xor
jbe
gs
xchg
clc
jae
jp
dec
inc
js
into
loope
push
sbb
lahf
clc
clc
adc
loop
cmpsl
add
jge
cmpsb
loop,pt
pop
dec
inc
xor
ljmp
in
lret
sub
cmp
pop
jecxz
imul
sbb
xchg
mov
fcmove
das
sbb
std
xlat
jnp
mull
jmp
mov
in
ret
adc
inc
or
push
pop
pop
cmpsl
orl
push
push
jecxz
sbb
xor
lahf
pop
mov
cmpsb
pop
and
and
cli
hlt
sbb
jge
test
leave
testl
cmc
aad
test
sbb
sbb
push
xlat
add
mov
sub
insl
pop
inc
mov
dec
adc
faddl
out
mov
sub
jne
imul
xor
nop
je
mov
in
add
nop
stos
ret
movsl
cmp
ret
push
int3
jb
adc
negb
and
xchg
insb
mov
mov
insb
test
dec
pop
incl
xor
aam
stos
negb
scas
leave
dec
popl
repnz
lcall
imul
arpl
adc
sbb
cmp
cs
push
clc
shlb
or
xchg
iret
sub
jne
pop
sbbb
int
mov
inc
repnz
std
gs
test
sti
lea
jp
xchg
mov
outsl
sub
and
fcmovu
out
jmp
pop
pop
add
xor
outsb
mov
adc
lcall
cltd
inc
test
outsb
outsb
pop
test
xchg
pop
call
dec
push
fiadds
sbb
fistpll
mov
inc
dec
and
mov
mul
sub
rolb
push
outsb
stc
cmp
jge
xchg
and
inc
dec
loope
cmp
cmpb
pop
js
mov
push
jno
fldenv
iret
add
jb
clc
daa
ljmp
sub
leave
jbe
lcall
test
cmpsb
sbb
add
std
lock
jne
sbb
adc
loop
ja
jns
jno
scas
push
mov
enter
push
pushf
inc
jg
aas
loop
add
sub
cmp
or
in
je
sti
lahf
aas
mov
push
mov
push
sub
or
scas
sbb
bound
mov
pop
ret
repz
inc
mov
xchg
loope
cmp
les
dec
push
lret
bound
mov
mov
sahf
sbb
cmp
sbb
loopne
jp
jl
xchg
xchg
xor
test
ret
push
cs
in
faddl
jne
mov
stc
push
ljmp
or
jg
sbb
jbe
mov
shll
or
sti
outsb
mov
jb
cmpxchg
pop
xchg
lahf
popa
js
in
adc
enter
pop
addb
inc
ss
stos
loope
clc
push
test
sbb
fcoml
adc
mov
mov
xor
nop
pop
dec
pop
daa
int
inc
pop
pop
insl
mov
shrl
xchg
sub
sbb
adc
ficoml
out
push
imul
xor
lock
dec
dec
int3
mov
insl
and
js
lods
shrb
sar
in
iret
popf
movsl
sahf
push
pop
ss
jp
cs
js
xchg
mov
sub
pop
push
mov
stos
and
or
mov
and
sub
mov
clc
testl
out
popf
inc
mov
sub
cltd
lods
fildll
add
aam
xor
aam
enter
ljmp
mov
or
pop
inc
dec
mov
cmp
add
mov
inc
scas
jg
mov
mov
jle
lods
in
mov
stos
ret
repz
je
push
push
int3
adc
sbb
mov
pop
lahf
mov
test
mov
rcrb
dec
cld
pop
jl
sbb
xchg
nop
sub
in
pushf
adc
test
out
dec
or
jecxz
mov
leave
jge
rcll
popl
add
xlat
lret
hlt
jecxz
fldt
shlb
mov
into
add
jl
test
jo
or
jne
call
sub
frstor
or
mov
or
mov
punpckldq
push
cltd
add
mov
xor
hlt
jl
xor
daa
int
out
cmc
fdivrp
mov
or
in
cmpsl
sahf
xchg
idiv
aam
fidivl
jmp
movsl
cmpsb
and
cmp
sarb
ret
test
mov
fidivrs
outsb
aas
lcall
fmulp
jmp
out
or
jge
clc
pop
in
sub
dec
xor
dec
pop
pop
mov
mov
test
les
xchg
fsubs
mov
scas
xchg
mov
loopne
push
stos
out
ss
lods
sub
je
and
push
mov
jae
mov
in
jo
sbb
pop
jb
mov
fiaddl
data16
sub
sub
mov
mov
test
dec
xchg
push
ret
adc
sbb
push
add
sbb
stos
sbb
cmpb
bound
popf
inc
aaa
call
jmp
out
icebp
or
subb
cmp
pop
lods
pop
mov
fstpt
add
push
pop
addr16
push
mov
xchg
add
insl
xor
jl
into
cmp
data16
call
or
mov
fwait
push
mov
adc
loope
fidivl
or
subb
sbb
sub
and
add
int3
in
ss
add
mov
sahf
outsb
rolb
jp
pop
or
adcl
leave
call
outsl
lods
in
add
sub
stc
mov
push
ss
adc
pop
je
add
mov
xchg
mov
sbbl
cmp
xor
stos
add
cmp
sub
or
arpl
shll
movsl
cmpsl
aad
aaa
mov
shrl
mov
adc
dec
jecxz
sbb
pop
jbe
push
cld
ljmp
jnp
aad
jecxz
jmp
in
pop
lret
jne
stos
mov
repz
mov
mov
repz
test
lods
hlt
xchg
push
pop
sar
inc
pop
imul
or
sahf
push
sbb
and
and
cmpb
xor
stos
movsl
pop
sub
icebp
add
mov
out
xor
ds
in
cmp
out
inc
incl
js
jmp
sbb
test
bound
inc
fwait
and
sbb
pop
and
cli
das
loop
les
aaa
in
aas
rcrb
jecxz
add
mov
js
push
lret
inc
lds
pop
and
cmp
testb
add
shrb
sbb
mov
mov
scas
jno
or
cli
imul
inc
in
filds
test
xlat
mov
xor
xor
adc
mov
ja
mov
mov
js
in
mov
or
and
divl
jl
movsl
aas
fdiv
shlb
cwtl
mov
push
test
cmp
push
sbb
jmp
movsb
pop
xor
les
mov
ja
push
pop
cld
scas
xor
lods
leave
repz
pop
out
scas
push
data16
mov
push
int
sbbb
xor
arpl
loope
adc
es
add
jecxz
adc
jae
movsl
push
jae
cltd
cwtl
add
dec
mov
aad
lods
mov
pushf
dec
enter
js
mov
xchg
scas
stos
xor
lds
cmp
decb
clc
cmc
ja
add
pop
fwait
jl
add
push
inc
mov
inc
cmc
test
xchg
sub
fstl
loopne
xchg
pop
mov
xor
lods
fsubp
xchg
pop
pop
cmpsl
rcll
dec
test
ret
mov
or
fdivr
jle
lods
bswap
push
dec
mov
sti
ds
repnz
insl
pop
mov
mov
dec
shlb
sarb
dec
gs
scas
pop
int
sbb
les
loopne
enter
xor
mov
jle
js
fbstp
mov
mov
add
ss
popa
out
std
inc
lea
dec
and
dec
fwait
movsl
push
mov
xchg
jne
ret
pusha
mov
mov
cmp
rolb
inc
mov
out
jg
inc
std
lock
sub
int
pop
loopne
jb
add
inc
daa
jo
imul
sub
add
popa
rolb
mov
pop
outsb
fldenv
aam
jns
mov
loopne
mov
das
pop
lea
mov
jae
inc
add
movsb
cmp
imul
add
nop
in
int3
and
push
loop
jge
bound
sub
hlt
xchg
mov
mov
push
inc
div
xchg
into
dec
sbb
jb
jo
repz
scas
add
xchg
hlt
inc
and
bound
cmp
pusha
mov
push
movb
shr
mov
ja
push
roll
add
mov
loopne
scas
xor
mov
sbb
out
aas
xchg
lods
push
lahf
test
sbb
dec
and
push
mov
sbb
mov
rolb
pop
bound
xchg
outsl
imul
pop
negb
add
xchg
data16
jg
addr16
lahf
je
cmpsb
cs
aaa
stos
call
jge
imul
sbb
ds
loopne
lea
lret
inc
jnp
xor
test
jmp
xorl
mov
pusha
jl
pop
xchg
sahf
das
addr16
mov
int
push
in
jnp
or
js
orb
dec
sub
xor
call
pop
std
or
cmpsl
adc
dec
enter
jbe
imul
lret
dec
fsubl
lods
pop
cmp
sbb
out
sub
ret
mov
in
repnz
xor
cmpl
shrb
addb
sbbb
scas
mov
into
xchg
add
fidivrs
sbb
adc
jo
cmp
int
cmp
insl
mov
sbb
lret
cwtl
push
imul
xor
rclb
inc
in
push
ficoml
aaa
xor
inc
lods
hlt
std
adcl
mov
add
shlb
stc
inc
in
rcll
or
xor
iret
dec
and
int3
mov
mov
dec
les
mov
mov
push
inc
dec
mov
movb
fsubrl
sub
sub
lret
mov
mov
xchg
jp
loope
cmp
lcall
jbe
or
fbstp
lcall
repz
cli
inc
push
push
dec
mov
mov
sbb
inc
in
stos
lret
test
enter
popf
test
in
daa
jg
and
dec
jp
push
adc
mov
sub
imul
into
dec
sti
ljmp
sub
movsb
mov
mov
mov
and
xchg
in
lods
xchg
dec
pop
sbbl
roll
sub
mov
in
repz
inc
ss
dec
adc
adcb
and
jp
pop
xchg
int3
xor
mov
cmc
aam
sub
push
mov
xchg
xlat
mov
rolb
sbb
jecxz
jne
jb
cltd
jmp
inc
sbb
mov
sti
out
es
rcll
xor
mov
add
out
or
loopne
outsb
inc
pop
xlat
les
mov
xchg
add
and
pop
rorl
pusha
dec
pop
sub
nop
aas
mov
sbb
or
dec
ret
mov
aam
adcl
sub
lret
pop
dec
cmp
fs
push
xchg
inc
enter
dec
jmp
jp
mov
adc
lock
mov
mov
xchg
jne
mov
pop
jo
dec
fistps
in
sbb
std
fs
pop
mov
stc
sti
fcompl
adc
imul
pop
loop
cmpsl
iret
cltd
int
rol
addl
leave
mov
push
std
mov
add
inc
test
loope
out
mov
sbb
add
dec
test
ret
inc
pushf
addr16
sbb
lock
add
stos
push
cmp
mov
mov
xor
lahf
test
in
imul
push
jne
insl
and
repnz
add
sarb
lret
mov
pop
mov
cmp
out
sub
jge
lcall
push
pop
sub
mov
loopne
in
loop
fsubl
scas
xchg
test
jge
mov
cmpl
and
out
mov
fldcw
jl
jge
ss
fmul
test
mov
lea
int3
cmp
aam
or
stc
adc
xchg
adc
push
pop
sarb
push
adc
jecxz
jp
xchg
lcall
jae
adc
push
mov
rcrl
sub
mov
in
or
add
fadds
or
je
sub
push
push
and
xlat
cmp
enter
out
mov
lods
nop
cmpsb
test
iret
inc
add
or
and
inc
mov
sbb
into
xchg
push
out
fs
gs
mov
clc
and
std
sbb
sbb
in
in
sti
addb
jne
inc
clc
adc
out
repnz
xchg
mov
and
ret
fidivs
fstps
rol
in
sbb
fsubs
xlat
mov
jae
ds
aad
mov
cmp
out
cld
inc
mov
or
movsl
sbb
mov
sbb
xor
add
insb
sbb
shl
dec
js
push
push
loop
or
js
test
adc
sahf
adc
dec
test
popf
addr16
pop
out
jmp
mov
pop
jecxz
xchg
cmp
xchg
leave
jl
movsb
ja
into
lds
xchg
mov
mov
rep
leave
out
mov
xchg
aas
mov
push
mov
cmpl
push
mov
jl
cli
shl
shlb
fisubs
pop
lods
pusha
cld
sub
cwtl
in
ds
mov
push
mov
pusha
inc
or
icebp
inc
or
dec
mov
pop
mov
stc
andb
imul
inc
jl
out
lea
cmpsl
cmp
mov
les
int3
dec
sarl
scas
push
inc
jg
out
scas
xchg
ret
adc
and
mov
xor
jo
jbe
mov
push
rol
xchg
call
add
push
jle
cld
and
add
dec
jecxz
mov
xlat
jmp
inc
aas
adc
lods
jno
add
mov
je
mov
jns
or
rorb
cmp
mov
xchg
enter
and
mov
in
pop
sub
mov
pusha
scas
movl
jle
inc
pop
or
int
and
add
push
lahf
stc
or
sbb
scas
aas
daa
pop
negl
ret
out
test
pop
push
popl
jnp
aas
scas
add
inc
lret
ja
mov
nop
add
fisttpll
daa
mov
cld
cmp
jmp
aad
sub
cmp
pop
jb
dec
cmp
stc
jecxz
mov
jmp
jmp
and
ds
push
in
pop
insb
jge
jb
in
lods
bound
xor
dec
sbb
xchg
cmp
aad
notb
xchg
pop
insl
mov
and
sbb
pop
xchg
mov
pop
pop
ds
jbe
inc
fimuls
dec
sub
out
lret
psraw
call
pop
sub
jecxz
adc
xorb
clc
inc
jmp
pop
or
lcall
idivl
insl
mov
push
mov
xchg
xchg
stos
cmp
pop
adc
push
ja
mov
xchg
js
outsb
mov
leave
fists
lods
addb
dec
loopne
pop
popa
data16
test
aas
out
add
xchg
ss
mov
jg
int3
hlt
nop
jmp
ret
ja
dec
push
mov
lcall
sbbl
push
hlt
dec
scas
sti
inc
pop
repnz
test
jb
mov
pop
data16
mov
inc
dec
and
jecxz
loop
and
fstp
ss
lea
jl
push
icebp
imul
jmp
movsb
sbb
jp
inc
cmp
xor
add
std
xchg
ljmp
lock
pop
cmc
adc
adc
ret
push
lret
outsb
cltd
out
sbb
dec
ret
or
int3
bound
cmpsl
pop
in
int
mov
or
jp
xchg
mov
xchg
cmp
lahf
jge
sbb
jne
xchg
stos
mov
mov
mov
jge
into
mov
and
icebp
inc
jne
push
add
lds
inc
ret
shrb
cmp
test
push
dec
out
mov
xor
addr16
sahf
xor
pop
scas
add
pop
dec
cmp
ja
lods
dec
sub
xchg
das
sarb
test
jp
xchg
inc
sub
inc
push
dec
cmpl
cmp
inc
cmp
jns
push
imul
xchg
ds
cmp
xlat
mov
sub
or
lahf
jg
mov
ftst
dec
fsubr
pop
or
dec
pop
mov
add
xor
xor
imul
xchg
add
xchg
add
stos
adc
jae
icebp
sti
daa
popa
jl
pop
lcall
stc
add
lahf
cmp
repz
cmp
jl
sub
xlat
cmpsl
cmp
cmp
in
mov
fistpll
push
sub
pop
mov
sahf
gs
fnsave
push
rolb
xor
lahf
cmp
and
mov
out
aad
int3
mov
push
insl
and
cs
pop
popa
aam
std
sub
test
out
imul
out
scas
jmp
push
fdivs
addb
imul
inc
leave
add
push
sbb
into
out
clc
cmp
popf
push
mov
fbstp
mov
arpl
clc
stc
outsb
inc
jmp
sub
aaa
repz
scas
ljmp
inc
lret
push
mov
ds
xor
push
aad
pop
cltd
xchg
sbb
movsb
je
jb
sub
mov
test
subb
push
cmc
fdivrl
ret
lock
les
imul
push
lods
shrb
push
push
imul
test
or
mov
mov
jg
cmpb
mov
shll
jl
jb
popa
lods
pop
arpl
add
fwait
adc
cs
pop
dec
push
add
xor
mov
loope
pop
ficoms
dec
pop
sbb
fsubs
dec
insb
pop
pusha
les
inc
icebp
xchg
pop
add
sbb
fistpl
fistl
inc
sub
push
and
inc
mov
out
mov
cmp
inc
in
xor
mov
sub
push
lock
xchg
xor
sub
xchg
add
insb
in
dec
out
gs
jmp
inc
clc
lret
xchg
inc
push
aas
or
int
ljmp
jl
xlat
call
mov
imul
out
stc
stos
dec
es
lahf
jnp
lret
adc
pop
in
cmp
mov
rorb
or
mov
lahf
push
and
xor
adc
sbb
mov
mov
adc
popf
sahf
mov
test
sub
and
or
sbb
aas
cmp
mov
adc
subl
adc
iret
or
ljmp
sbb
mov
mov
sub
sbb
jb
repz
cmp
lods
out
adc
sub
push
loopne
inc
jb
lcall
imulb
fidivs
push
faddl
fwait
push
inc
gs
loop
popa
ficompl
cs
inc
inc
cs
sbb
insl
out
lock
adc
push
shrb
divb
push
cld
mov
into
jp
bound
xchg
and
mov
adc
aas
mov
iret
jle
push
aam
or
gs
stc
lock
mov
and
or
xchg
fsubrl
jo
neg
lods
je
loop
jo
mov
ja
inc
sbb
je
mov
pop
fistps
les
push
aad
push
lret
xor
inc
mov
push
dec
arpl
hlt
pop
xadd
jecxz
cmp
add
sbb
adc
dec
addr16
jl
insl
pop
mov
sti
fs
push
fbstp
mov
xor
adc
sub
cmp
ret
xchg
inc
push
ret
mov
in
addr16
int3
sub
push
rcrl
retw
add
in
in
xor
test
cmp
daa
mov
sbb
pusha
icebp
jmp
dec
fimull
jle
push
in
jecxz
rcrl
cmp
sub
les
pop
in
mov
mov
lock
jecxz
and
jb
mov
cmpsb
cmp
mov
js
inc
aaa
add
mov
data16
inc
inc
sub
pop
aad
in
enter
scas
clc
fisubl
pop
xor
cwtl
fistps
push
sbb
add
mov
xchg
sub
sbb
bound
or
sbb
xor
sub
xor
stos
in
push
jmp
jecxz
xor
scas
or
or
fs
ljmp
dec
int
add
cmp
ja
xor
push
push
push
leave
dec
pushf
int
cmp
sbb
ja
aas
arpl
int3
xchg
jmp
daa
pushf
jbe
push
js
mov
push
cmp
test
push
and
repz
shrl
pop
mov
cli
sahf
out
push
cmc
outsl
test
stc
push
ficomps
insl
imul
lahf
stc
mov
xorl
bsr
sbb
aam
cmp
add
dec
mov
cmp
into
in
sti
mov
xchg
lret
sarl
or
popf
lahf
xchg
dec
lock
movsb
jae
mov
xor
mov
mov
loope
ds
js
fnstsw
cwtl
sarl
dec
clc
xlat
cmp
mov
mov
imull
js
dec
jp
out
sub
arpl
mov
sub
jecxz
and
sub
xchg
addr16
out
gs
push
lahf
icebp
cmpsb
in
cmp
and
mov
movsl
xlat
fsubs
shll
mov
aas
icebp
pop
shlb
sbbl
jno
push
jae
inc
popf
push
stos
cmp
and
loope
jecxz
outsb
add
mov
cmp
xor
jmp
in
mov
es
xlat
lds
imul
push
pop
cmp
cmpsl
movsb
stos
xchg
xchg
add
lods
gs
push
cmp
add
pop
inc
mov
rcr
hlt
xorb
mov
push
int3
mov
jae
push
mov
pusha
sbb
bnd
cld
pop
loop
cltd
out
mov
arpl
dec
cli
lcall
xchg
vpunpckhwd
mov
pmaddwd
testb
sti
xor
std
mov
call
cmp
xchg
add
jecxz
mov
sbb
insb
ret
xor
or
jp
jae
cltd
aaa
test
push
xlat
cltd
xor
add
or
or
test
and
lahf
sub
pop
jb
mov
mov
adc
xchg
loop
inc
repnz
das
lds
inc
pushf
into
or
push
jae
aam
dec
ja
js
aam
pop
bound
stos
lods
pop
sbb
mov
push
fstp
repz
push
ret
gs
stos
jbe
add
in
dec
fcomps
pusha
fwait
out
fdivrl
sbb
test
dec
test
sti
cmp
xchg
data16
stos
faddl
jle
fists
fwait
push
mov
shrl
enter
jae
ret
sahf
jecxz
js
xchg
xchg
shrd
lock
xor
jmp
int3
cmp
xchg
push
fstp
lds
pushw
stos
cmp
jae
hlt
fdivs
sbb
push
stos
jmp
xor
pop
shll
dec
pop
movl
shrl
or
xchg
push
in
popa
aad
lea
mov
lea
fldl
add
addb
jge
enter
mov
adc
orb
cmc
ret
lock
jnp
outsb
push
pop
fcomip
sbb
out
jnp
cmp
nop
mov
adc
xor
shr
cltd
inc
call
icebp
sbb
enter
jp
pusha
ret
mov
divl
lea
sub
divb
mov
sbb
daa
sbb
push
dec
pop
les
rol
mov
xchg
push
clc
cs
aad
push
cmp
inc
fcoml
aas
in
add
add
push
jnp
dec
ret
cltd
jno
inc
ficompl
sub
mov
push
jns
pusha
int
mov
cli
movsb
add
test
ret
jbe
mov
mov
inc
adc
and
pushf
and
or
popf
rorl
in
pop
lret
shll
es
xchg
pop
xor
fsubrl
jle
movsb
jle
sti
fs
push
fcom
fsubs
dec
int
fstl
ljmp
pop
sub
rcll
adc
adc
mov
test
dec
in
add
jo
hlt
pop
int3
inc
aas
popa
pop
push
sub
adc
sub
inc
pusha
sbb
sbb
scas
push
and
addr16
sub
imul
mov
ljmp
and
shrb
mov
adc
lret
loopne
iret
int3
add
mov
aaa
lahf
dec
imul
out
fisttpl
mov
fwait
dec
je
mov
mov
push
es
xchg
xchg
insb
in
jecxz
or
inc
mov
lea
xchg
and
fwait
mov
mov
mov
mov
out
xor
clc
fstp
leave
jae
call
add
add
pop
movhps
aas
into
div
lcall
push
inc
js
imul
mov
fs
out
mov
loope
sbb
mov
jmp
scas
cmpsl
repnz
push
mov
cmpsb
movsl
in
push
mov
pop
push
adc
sub
mov
jb
scas
sub
leave
or
dec
repnz
ds
mov
jge
mov
jp
aam
push
push
sbb
pop
fwait
in
in
adc
stc
jb
je
jbe
andl
nop
int
or
into
xor
add
ret
cs
sbb
std
jge
in
add
movl
sbb
pandn
bound
pushf
jo
dec
ljmp
shll
js
outsl
cmp
les
sbb
call
or
sub
int3
dec
mov
nop
rcrl
pusha
sub
imul
xor
inc
call
sahf
inc
int3
fsin
es
or
imul
jno
or
or
jl
mov
mov
or
or
loope
std
push
pop
hlt
adcb
ror
pop
ss
lahf
adc
imul
lret
xchg
pop
stos
mov
aam
loope
xchg
push
or
test
lock
iret
xchg
sbb
xor
out
stc
rcr
out
push
push
xor
mov
dec
out
mov
gs
insl
stos
add
sti
xchg
mov
pop
ret
add
push
cmp
cmp
mov
out
cmp
js
cmc
adc
mov
mov
hlt
or
jle
push
cmpsl
jnp
xchg
jns
add
mov
cli
sbb
rcl
fcmovb
lret
call
pop
pop
cwtl
sub
dec
ja
daa
inc
jo
aaa
addr16
in
or
jp
int
fidivl
mulb
sbb
jae
pop
pop
movsb
fcmove
cli
aad
or
or
pop
aaa
movsb
fiadds
xor
xchg
sti
aad
cmc
xchg
loop
arpl
out
xor
jl
sub
sti
scas
lahf
fs
pop
fisubs
or
jns
cwtl
pop
ret
adc
add
xchg
or
mov
insb
push
add
push
sbb
dec
in
clc
pop
jae
and
js
fmull
pop
clc
loopne
lea
or
inc
nop
ss
jg
and
in
fsubrl
outsl
adc
andl
clc
xchg
out
ljmp
sahf
jl
in
ja
cmp
xor
test
cmp
jmp
andb
or
adc
fdivrl
lret
icebp
fxch
xor
push
pop
lret
cmovp
or
fdivl
call
mov
push
rclb
sbbl
mov
sbb
lret
mov
push
or
mov
sahf
call
movb
or
fisubs
mov
dec
cmc
sub
dec
bound
dec
sti
in
shlb
jb
push
sbb
popf
pop
pop
jg
cltd
push
xchg
mov
je
subb
gs
xchg
and
jns
xchg
faddp
dec
cmp
add
or
jge
mov
nop
sub
int
cmpsl
push
std
xchg
and
enter
mov
je
xor
pop
xchg
mov
cmp
mull
sbb
xor
sbb
inc
jb
sbb
xchg
punpckldq
in
lahf
and
pop
mov
pop
dec
mov
xchg
push
insl
sub
lcall
sbb
mov
movsb
mov
test
push
shll
pop
push
mov
popf
xor
jle
sub
mov
jle
push
mov
inc
inc
jae
aaa
nop
addr16
inc
add
stc
ror
test
imul
fs
divb
sbb
mov
xchg
sbb
mov
push
mov
cltd
inc
dec
push
xor
popf
scas
push
neg
xchg
cltd
dec
arpl
jae
aad
insb
lock
rorb
jno
sbb
jmp
cmp
lods
jns
sarl
cwtl
cmp
sub
cmp
and
pop
push
lret
adc
pop
ja
test
into
fsubrl
jno
pop
scas
push
repnz
adc
mov
push
xorb
push
notl
int
adcb
fistpl
int3
in
addr16
xor
out
inc
jmp
ret
sub
inc
mov
inc
and
and
outsl
sbb
ret
out
sub
xchg
sbb
adc
push
aaa
cmp
hlt
fmulp
cmp
push
test
push
or
bswap
out
es
jo
or
lcall
pop
mov
xor
fwait
mov
decl
stc
mov
orb
inc
xlat
push
add
call
lret
rcr
add
icebp
pop
inc
data16
push
roll
xor
cmp
xor
stos
mov
jnp
scas
mov
scas
and
cltd
loope
test
idivb
inc
test
add
fmull
aas
mov
sbb
sbb
out
cmpsb
mov
mov
xor
or
xchg
leave
cmp
pop
cld
push
das
and
cmp
pop
out
adc
lret
mov
cmp
hlt
stos
data16
and
pop
mov
jg
pop
push
mov
movsb
mov
push
inc
mov
mov
inc
adc
outsb
sahf
mov
xchg
in
mov
inc
mov
lcall
mov
xchg
adc
ja
inc
cmp
dec
push
fldl
int
mov
dec
lds
mov
divl
xchg
pop
fimull
stc
movsb
adc
rcl
push
adc
fmulp
cmp
inc
adc
push
adc
scas
fucomip
mov
das
rcll
sbb
shlb
jns
mov
push
xorb
std
xor
cmp
sub
adc
fwait
and
imul
mov
ja
scas
and
pop
mov
popa
or
fndisi(8087
jge
xchg
mov
sarl
xchg
xor
jmp
pop
insb
fisttpl
inc
jb
mov
sub
stc
leave
movsl
ds
stc
adc
dec
inc
loop
in
dec
negl
jns
or
cmp
xchg
mov
or
fstpl
aad
mov
sti
pop
pop
stos
dec
movsb
iret
and
push
test
dec
lods
gs
adc
scas
cmc
dec
adc
sub
inc
stos
lock
push
push
ss
in
scas
pop
dec
cmp
or
out
mov
movsl
hlt
mov
and
test
das
ret
push
sub
cmp
invd
nop
add
adc
dec
jno
jo
arpl
ficoms
mov
xor
jnp
insl
popf
fwait
scas
cltd
ja
push
es
fcomps
test
and
or
and
push
lcall
test
dec
cmp
jle
dec
adc
mov
mov
and
fisttpll
in
mov
mov
pushf
outsl
test
pop
jecxz
lret
es
adc
or
cmp
pop
mov
addr16
cmp
stc
pop
loope
cmp
lods
or
jno
xor
inc
adc
xchg
int3
stc
sub
push
jne
repnz
ficomps
scas
sub
pop
sbb
mov
push
aas
xor
outsb
out
in
xor
push
dec
je
insl
cld
add
or
cmp
movsb
or
push
imul
jne
data16
dec
leave
movlps
lea
outsb
push
roll
mov
ret
adc
icebp
jnp
sarb
push
inc
test
hlt
mov
fistpl
out
push
in
mov
aaa
inc
mov
add
fidivs
ficomps
or
push
aaa
lahf
push
and
jne
adc
xchg
test
insl
cmp
xchg
imul
imul
pop
pavgb
in
leave
iret
mov
mov
xchg
xor
test
pop
out
dec
xor
cmpsl
xchg
sub
xor
cltd
cmp
rcrl
add
repz
xchg
adc
in
or
mov
pop
xor
sbb
outsb
les
ret
test
mov
data16
mov
and
push
jg
and
out
and
push
adc
and
inc
dec
rolb
mov
dec
aad
and
sub
dec
sbb
lock
lods
mov
fildl
cmpsb
cli
sub
push
insl
outsb
dec
mov
fnstsw
inc
int3
cmp
or
add
push
daa
in
insl
jb
jg
sbb
pop
jnp
pop
pop
les
fdivl
xlat
inc
cmp
icebp
or
cmp
dec
sets
dec
aaa
popl
cmpsb
mov
test
mov
and
out
push
push
jb
push
repnz
sbb
cmp
xchg
mov
xor
pop
xlat
bound
fstps
mov
adc
jmp
and
orl
jb
mov
mov
pop
leave
adc
stc
dec
scas
dec
ja
jb
mov
jne
jg
movsl
sub
in
push
push
mov
dec
sbb
jecxz
and
xor
adc
jp
lret
dec
pop
mov
mov
dec
mov
subl
cmp
shlb
loop
or
cmp
daa
gs
sar
scas
or
mov
inc
bsr
fnstcw
pop
jnp
fwait
sbb
dec
sub
dec
push
and
cmpsb
fs
outsl
dec
xchg
mov
push
mov
xor
popa
jbe
dec
add
dec
inc
lret
push
lret
xchg
dec
mov
adc
mov
mov
std
ret
sbb
xor
cmp
mov
daa
out
orl
cli
mov
in
dec
imulb
xor
frstor
loopne
jl
dec
or
mov
ja
ljmp
in
rorl
js
push
ja
adc
mov
fisubs
adc
add
pop
test
je
xchg
hlt
fistl
sbb
enter
jno
scas
cld
cmpsl
insl
mov
or
in
adc
push
mov
pop
mov
mov
mov
mov
push
jo
push
mov
test
sub
jecxz
xchg
mov
repz
test
popf
int
mov
jle
sbb
sbb
xor
xchg
jle
lock
shlb
int
movsb
loope
dec
lea
xor
push
lahf
adc
popf
dec
mov
add
mov
iret
out
inc
lcall
rorl
and
jg
mov
mov
test
add
jmp
dec
fwait
mov
cwtl
add
xor
jne
test
mov
jl
jne
pop
cmp
enter
inc
sub
jae
push
sbb
les
aaa
mov
iret
sub
icebp
cmp
and
jmp
popf
ljmp
or
jge
or
mov
xchg
daa
xchg
popf
mov
loopne
jp
pop
cmpsb
push
rcrb
push
lea
pop
hlt
insb
or
xor
loop
movsb
outsb
fisttps
push
xor
mov
loop
or
xchg
sbb
leave
add
lock
lret
dec
mov
or
inc
sti
cmpsb
jg
nop
mov
push
test
jae
in
xchg
cmp
jne
arpl
mov
outsl
mov
cmp
ss
neg
add
fldt
inc
fidivrl
dec
es
sbb
out
jbe
jge
jb
ficompl
rclb
ss
aad
outsb
pushf
sbb
arpl
mov
adc
orb
adcb
jno
nop
inc
lahf
adc
sarb
rorl
xchg
and
xchg
sub
inc
pop
pop
mov
and
loope
dec
mov
inc
test
inc
mov
das
icebp
jle
cmpsl
gs
out
or
popa
mov
sbb
out
mov
sbb
aas
shll
or
mov
sbb
insb
xor
xchg
fnstsw
arpl
and
enter
cmp
cvtdq2ps
addr16
fistps
scas
aad
insb
fwait
dec
push
and
inc
repz
cli
sub
negl
mov
sbb
add
add
in
cmp
fdivl
lock
enterw
xor
pop
xor
divb
aas
adc
jp
jno
daa
mov
xchg
sbb
inc
jp
add
sbb
je
imul
imul
scas
jno
ja
adc
cmp
cld
int
adc
std
sub
fisubl
cli
mov
clc
fsts
xor
repz
push
rcll
insb
in
gs
sbb
jnp
xchg
push
enter
imul
inc
or
mov
int3
xor
jl
mov
mov
sbb
push
cmp
mov
lcall
stos
dec
lret
fnstsw
xor
mov
xchg
mov
mov
mov
mov
inc
jo
lret
mov
mov
adc
fimuls
jmp
or
xchg
clc
in
fbld
sbb
mov
dec
push
lods
cmp
or
cwtl
ret
sub
inc
pop
leave
pop
xchg
mov
dec
or
addb
xchg
mov
in
pop
add
dec
jp
xchg
add
movsb
sbb
jbe
std
bswap
mov
bound
add
ljmp
adc
adc
inc
nop
mov
cmpl
or
cld
movsl
inc
gs
ds
and
mov
xchg
popf
mov
shrl
cmp
pop
mov
idivb
push
fldcw
std
mov
mov
fstpt
mov
jo
cmp
les
mov
enter
lcall
xchg
lret
inc
adcb
and
and
mov
ljmp
cmp
push
fs
popf
push
add
lock
mov
pop
movsl
dec
mov
int3
mov
cmpb
mov
lods
dec
out
sub
imul
sub
cmp
negl
mov
sub
fbld
loope
out
dec
lods
xorb
sti
int3
or
je
rolb
jo
xchg
inc
rcrb
xor
ds
js
adc
and
xor
popf
inc
sub
xchg
and
popa
push
jae
repz
jg
test
sbb
fsubp
hlt
cld
lods
fs
sub
mov
mov
adc
mov
es
imul
cli
or
pop
inc
cwtl
sahf
xchg
pop
jae
clc
ds
out
inc
sbb
mov
or
mov
daa
mov
add
dec
ret
stos
mov
adc
scas
loop
in
sbb
lods
imul
stos
adc
xchg
ljmp
xchg
adc
lock
shrl
jb
xor
pop
cwtl
push
sub
dec
pusha
mov
xor
cld
cs
dec
movsb
and
dec
int
stos
jne
xor
gs
sub
xchg
push
xor
pop
mov
push
loope
push
and
test
add
add
push
sarb
pushl
or
adc
pop
sbb
enter
push
lret
out
mov
repz
cmpl
cmp
pop
sub
mov
out
les
pop
jmp
xchg
mov
sub
insl
push
dec
xchg
mov
jns
je
js
repnz
mov
adc
repz
jbe
cli
xor
jmp
push
sbb
dec
and
out
jne
xchg
lret
repnz
mov
into
cmp
sub
inc
adc
enter
jge
testl
push
ds
mov
scas
pop
ret
xchg
add
or
mov
jno
cmpsl
mov
loop
jbe
jmp
lahf
es
lods
xchg
sahf
repz
iret
sub
sub
cmpsb
test
jmp
aad
jmp
adc
clc
fdivl
insl
inc
push
inc
das
sahf
mov
sahf
fadd
add
ss
sti
jo
inc
stos
stos
push
inc
xchg
fmull
les
in
pop
or
not
psubd
pop
jecxz
cltd
inc
pop
dec
leave
jne
mov
mov
insl
jp
mov
pop
lods
jl
sahf
jns
dec
push
xchg
jmp
outsb
xchg
into
out
adc
jo
test
jg
push
test
mov
test
mov
gs
xor
or
fnstsw
and
xchg
daa
xchg
test
jns
clc
sub
xor
jge
inc
notb
jno
push
add
sbb
push
cmpsb
cmp
sbb
ds
rorb
adc
jnp
xchg
hlt
adc
mull
push
and
jmp
or
jl
or
dec
std
jl
and
xchg
mov
sbb
ret
fs
xchg
jle
daa
mov
mov
mov
icebp
in
mov
xor
aaa
push
rclb
div
cmc
dec
loop
cmp
pop
jl
int3
pop
add
lds
jle
lret
pop
xchg
adc
ja
mov
add
cld
fwait
cmc
lds
and
repz
mov
push
fstps
pop
jle
pop
sbb
push
pop
or
orb
in
repz
xlat
inc
daa
push
icebp
sbb
lods
ljmp
cmp
test
clc
cmc
cli
xchg
inc
dec
mov
aad
scas
test
inc
push
std
mov
out
sub
pop
adc
das
orb
jbe
adc
push
mov
and
pop
fsubl
and
fisubs
jne
inc
jnp
or
mov
inc
dec
add
test
cmp
or
mov
mov
rcll
loop
push
inc
scas
xor
lret
push
loop
divb
jnp
pop
xchg
dec
rcrb
das
je
jg
aaa
mov
jnp
jle
jecxz
icebp
dec
mov
sbb
add
hlt
and
dec
mov
mov
sbb
and
cwtl
in
aas
cltd
loopne
push
or
ret
adc
in
push
jb
jno
test
jle
je
pushf
sub
add
xchg
jle
xchg
ret
adc
ja
gs
xchg
lods
pop
push
sub
mov
jne
cmp
cwtl
jl
ret
ret
lcall
dec
aad
stos
icebp
jg
cmp
add
cmpsb
movsb
leave
or
sbb
fisubs
mov
cli
inc
cs
mov
add
dec
mov
in
stos
pop
xchg
add
clc
into
cmp
jb
lret
jecxz
bound
push
in
mov
or
mov
loop
mov
mov
mov
addr16
jl
arpl
or
nop
rcrl
leave
ss
pop
ror
mov
push
push
pop
ret
stc
cmp
inc
pushf
pop
adc
lock
sbb
mov
jle
movsl
addl
add
mov
xchg
setl
imul
es
xor
sarl
mov
call
in
lods
scas
or
adc
dec
dec
dec
mov
out
fs
stos
inc
movsl
or
adc
in
fcmovnu
ficoml
xor
dec
xchg
mov
mov
stos
daa
sbbl
jnp
aad
push
cmp
fnstcw
gs
dec
insb
mov
mov
stos
push
sub
pop
xor
pop
aam
lcall
adc
mov
scas
and
adc
xor
mov
in
xlat
lcall
push
outsb
mov
inc
sub
int3
cmp
test
dec
and
add
pop
fwait
add
and
ret
call
xchg
inc
hlt
pop
xor
xchg
push
cmc
imul
daa
movsb
add
dec
cmpsb
or
mov
hlt
test
dec
push
addl
out
in
jmp
out
add
inc
xchg
pop
inc
cltd
loope
jnp
je
adc
mov
push
loop
xor
cmp
xchg
leave
push
sub
mov
and
mov
or
sub
pop
mov
push
test
cmp
add
lahf
leave
sti
cli
ljmp
add
cmpsb
push
ss
or
jb
insl
xchg
ds
sub
fcmovnu
inc
je
mov
push
scas
nop
ljmp
cmp
aam
adcb
cmpsl
int3
jnp
cwtl
push
push
and
sarb
lcall
dec
sub
addl
cltd
dec
mov
mov
push
and
push
sub
push
and
fld
aas
stos
push
push
inc
jno
iret
sbb
aam
and
cli
mov
jecxz
push
jns
xlat
mov
mov
jnp
cwtl
sub
cmp
push
nop
push
inc
data16
enter
xorl
cmp
or
dec
or
jg
inc
pop
pop
push
sub
in
repz
scas
push
cmp
imul
movsl
stos
scas
out
mov
frstpm(287
arpl
mov
cmp
frstor
jbe
adc
icebp
sub
rorb
and
into
jo
and
mov
aaa
fmuls
ja
push
stos
sbb
lods
in
sub
mov
iret
shrl
cmp
sbb
cmpsb
mov
ret
cmp
loope
jl
lds
xor
in
int3
cltd
dec
rep
icebp
fldt
xor
cmp
movsb
pop
fsubrl
pop
mov
pop
jns
inc
mov
fildll
push
roll
and
ja
movsl
pop
mov
dec
mov
pop
fidivs
loope
xchg
or
shll
subl
jecxz
mov
jbe
into
insl
mov
adc
hlt
adc
pop
cmp
or
loopne
enter
lock
fs
bound
jl
stos
push
jae
jmp
push
jmp
add
cltd
jge
mov
sbb
pop
mov
or
pop
pop
xor
mov
mov
add
cmp
into
and
add
inc
pop
jbe
mov
mov
push
xor
out
lret
lret
cli
jl
out
call
out
test
dec
mov
bound
repnz
in
addb
pushf
aad
rcl
lds
mov
push
lcall
mov
cmpsl
mov
xor
rorb
call
in
sbb
add
inc
add
mov
mov
sub
cmp
pop
scas
aam
std
rcr
fsubrs
push
xor
push
jg
xor
lock
inc
mov
mov
push
adc
xchg
add
dec
sbb
sbb
test
shlb
int3
subb
aam
lcall
fisttps
shrl
aaa
sbb
stos
jge
lcall
cli
xchg
mov
or
ja
int3
push
cltd
mov
pop
inc
mov
gs
add
je
adc
pop
pop
test
out
mov
std
int
pop
jne
mov
lods
jg
pop
mov
in
sbb
adc
push
add
push
addb
loop
jecxz
sbbl
sub
push
sahf
inc
and
and
hlt
aaa
adc
sbbl
test
inc
inc
fs
jge
mov
dec
cmp
cltd
or
rcrl
and
xchg
xchg
loopne
repz
mov
int
movsl
mov
pop
loopne
cwtl
mov
dec
sub
mov
pop
sti
mov
xchg
pusha
fnstsw
ret
xlat
adc
push
mov
inc
das
xchg
pop
jo
insl
inc
xor
arpl
lods
dec
sbb
add
xor
fldenv
std
jmp
aas
sub
sbbl
mov
jno
movsb
jne
sbb
add
fmul
faddl
push
xchg
jb
xor
pusha
pop
or
and
shrl
mov
test
inc
add
push
das
cmc
fdivrl
lods
cmp
insl
adc
push
jmp
adc
pop
ja
repnz
outsb
cwtl
or
insb
dec
adc
pop
push
dec
mov
das
imul
testb
into
icebp
jecxz
mov
lahf
fistl
call
xor
push
in
xor
mov
cmp
adc
cs
and
iret
sub
cmp
mov
mov
fdivrl
es
and
push
add
into
cmp
stos
in
jge
dec
xchg
and
inc
push
rcrl
lcall
ljmp
std
push
jo
xchg
pusha
push
and
pop
sub
cld
sub
sub
add
fldcw
cld
daa
xor
xor
cli
mov
ret
out
mov
or
sbb
pop
cmc
popa
ss
mov
cmp
not
or
lock
lcall
sti
adc
push
sub
pusha
sbb
out
inc
add
add
lods
mov
sahf
and
popa
mov
pop
lea
imul
adc
cmp
xor
push
inc
sub
lds
pop
pop
push
daa
popa
ret
or
negb
ss
xchg
outsb
mov
sub
dec
xorb
imul
xor
insl
mov
loopne
ja
jae
mov
mov
push
data16
lock
push
xchg
outsb
pop
out
ja
adcl
inc
iret
jo
cmc
aam
cs
fsubl
jge
dec
or
jmp
push
xlat
dec
xchg
cld
int
loope
push
ret
pop
repnz
ds
jae
aam
pop
push
push
daa
inc
add
xchg
push
lods
test
rclb
clc
push
mov
imul
add
sbb
pop
xchg
iret
cmp
or
push
or
rorb
das
pop
test
mov
jns
xchg
clc
pop
outsb
jecxz
jbe
out
out
mov
cmpsb
outsb
inc
sahf
and
pop
inc
mov
fistpl
lret
xchg
jbe
stc
mov
ljmp
lds
add
push
mov
sbb
mov
sub
sbb
dec
movsl
es
ret
jne
or
shlb
sub
jp
ljmp
cmc
sub
push
imul
jg
clc
ds
js
daa
pop
ficompl
mov
lea
movhps
cmp
lahf
lods
repnz
push
ja
fwait
aas
in
xor
aam
aad
outsb
inc
les
jecxz
insl
mov
add
scas
xor
mov
jae
mov
dec
movsl
mov
or
pop
pop
in
sahf
xor
mov
xchg
mov
or
es
xor
jo
jmp
xchg
inc
fbld
insb
loopne
out
xor
mov
pop
outsl
xchg
push
sti
lock
dec
jno
aam
adc
jp
inc
pushf
mov
push
lock
mov
enter
add
pop
cmp
stos
mov
or
sbb
sbb
add
xor
mov
push
mov
or
out
mov
and
nop
hlt
jns
xlat
xor
xchg
push
push
mov
pop
and
inc
fwait
in
mov
push
mov
mov
jmp
stc
cmp
popa
fwait
nop
or
adc
sub
add
add
bound
arpl
cmp
imul
push
push
movb
rcrl
inc
or
jns
dec
loopne
push
add
inc
lods
loopne
outsb
pop
xor
test
inc
mov
pop
and
mov
inc
gs
jge
addr16
lcall
add
jns
sub
aad
xor
push
je
pop
push
mov
mov
add
int3
loope
hlt
insl
sbb
fmulp
cmpsl
repz
jns
arpl
scas
sbb
out
out
inc
adcb
in
std
adc
xor
cli
ficoms
xor
sbb
decb
dec
dec
rcrb
cmpsl
popl
push
or
cmpb
sub
adc
pushf
loop
ds
scas
int
test
inc
dec
loope
aas
test
jge
push
shrl
add
adc
stos
pop
scas
pushf
call
pop
cmp
add
divb
xchg
movsl
push
aaa
pop
mov
enter
mov
push
jecxz
mov
sbb
sbb
mov
or
aaa
xchg
ja
stc
cmp
insb
pop
and
je
test
jae
shll
xchg
push
mov
or
and
push
in
add
in
jns
xchg
stos
xchg
stc
arpl
fcoml
push
lds
sub
aam
js
stos
sti
mov
inc
stc
inc
mov
out
or
adc
push
fisubs
inc
jo
leave
adc
popa
cmpsb
pusha
pop
pop
mov
out
cltd
push
repnz
xor
into
sub
movsl
iret
dec
push
mov
push
adc
adc
xchg
pushl
mov
stos
mov
sbb
lods
inc
insb
in
cld
test
xchg
jnp
sub
xchg
aam
pop
push
cs
mov
dec
ja
pop
orb
iret
push
xor
push
push
fistpll
push
aas
cmpsb
adc
in
lcall
jge
mov
xchg
or
xchg
negl
dec
stos
sti
mov
dec
shlb
and
sub
mov
fisubs
enter
stc
pop
add
adc
pusha
dec
pop
push
push
xchg
push
mov
ljmp
mov
idiv
dec
pop
scas
mov
or
push
mov
gs
int3
cld
nop
pop
leave
test
sub
mov
cmpsb
sbb
push
inc
jb
in
adc
mov
in
cmp
xchg
inc
jne
and
sub
mov
aam
out
lcall
clc
out
pop
imul
lcall
pop
movsb
loop
xchg
mov
mov
outsb
cmc
inc
cltd
jnp
es
xor
cmp
ret
xor
sahf
sub
movsl
mov
test
je
popf
cmpsl
lock
mov
jns
and
jne
mov
enter
mov
test
or
adc
filds
cmpsl
xchg
pop
xor
mov
mov
stos
shrb
pop
xchg
sbb
imulb
mov
mov
mov
jle
jne
gs
mov
or
cwtl
mov
loop
adc
mov
sub
orl
xchg
out
setne
dec
and
leave
fwait
mov
rolb
addr16
popa
nop
sbbl
loop
sbb
mov
or
imul
sbb
sub
push
enter
add
leave
sarl
clc
and
and
mov
pop
mov
mov
aaa
loopne
jns
sub
filds
sbb
push
adc
popf
stc
jbe
and
jo
pop
adc
fwait
cld
xchg
addr16
test
je
or
test
mov
sahf
jp
aas
push
push
sub
lds
xor
stc
add
and
pop
push
inc
pop
leave
push
ret
insl
scas
addb
loope
sub
jbe
aam
aad
out
lcall
adc
je
cmpsl
and
cmp
mov
adc
jecxz
fisttps
mov
dec
mov
imul
push
push
popa
jle
xlat
inc
push
push
rol
add
jnp
jbe
jno
shr
sti
mov
inc
pop
pop
fisubrl
or
jecxz
pop
mov
xchg
leave
sti
stc
mov
dec
sbb
maxps
mov
clc
pushf
dec
rcr
movsl
adcb
sbb
test
xor
adc
shr
sub
sub
lcall
pusha
daa
cmp
int3
jmp
sbb
pop
dec
out
fwait
xchg
loop
jno
mov
dec
pop
inc
sub
xor
ljmp
sbb
sbb
es
nop
push
lds
fldcw
test
add
mov
xchg
mov
inc
sahf
fmull
cmp
in
lds
jecxz
xchg
add
in
push
xchg
outsl
xor
sarb
scas
shlb
push
aam
xchg
faddl
ficoms
inc
lcall
cltd
lods
xchg
mov
test
hlt
adcb
inc
testb
and
mov
int
xor
xlat
loope
loop
jno
pop
pop
fsubl
add
lret
std
pop
xlat
sahf
push
scas
pop
mov
insb
fxrstor
pop
fsubp
adc
inc
xchg
fwait
je
sbb
cmp
test
or
fwait
lcall
add
jo
jno
mov
imul
ret
les
mov
stc
aaa
push
cmp
lods
nop
ror
fmuls
cmp
push
int
xchg
cmp
jb
imul
mov
inc
pop
stos
idivb
sub
pusha
lock
adc
and
mov
dec
aaa
orl
inc
sbb
jnp
push
add
int
repnz
cmp
jo
je
cltd
mov
pop
rcrb
fwait
mov
mov
clc
sub
fldl
dec
fs
sbb
mov
sub
daa
mov
xor
inc
das
imul
into
out
test
jns
dec
jo
adc
pop
add
xor
jno
fwait
lods
jge
sarb
loopne
rcrb
movsb
mov
rorb
cmp
pop
mov
sbb
flds
leave
sbb
inc
addr16
mov
fnstcw
in
dec
sti
jnp
mov
mov
jbe
adc
mov
pop
and
mov
push
jns
xchg
fimull
sub
pop
mov
adc
out
mov
cmp
dec
cmp
test
mov
inc
fmuls
or
dec
loop
sbb
push
mov
push
sbb
insl
in
cmpsb
mov
pushf
stc
arpl
mov
insb
push
int
dec
push
push
or
pop
jno
testl
cmpsb
pushf
dec
xchg
je
das
fs
inc
push
out
cmp
mov
dec
hlt
int
dec
repnz
stos
mov
inc
push
out
pushl
push
xlat
dec
mov
push
push
lods
pop
jbe
mov
lret
jae
testb
dec
mov
cmp
es
decl
xchg
loop
cmpsb
ret
faddl
mov
in
into
cmpl
addr16
aaa
daa
daa
enter
fstpl
xchg
iret
insl
cmpsl
sti
iret
insb
mov
mov
jae
arpl
inc
xor
mov
pop
iret
decl
lods
gs
mov
ss
pop
push
inc
test
mov
pop
sub
test
repnz
lods
mov
dec
push
ret
aad
call
dec
ret
int3
inc
insb
mov
push
xchg
xor
int3
out
xchg
fldenv
dec
push
jp
stos
insb
mov
and
daa
inc
andl
or
jno
loope
mov
or
ret
xchg
mov
inc
cmpsl
loope
fldcw
cmpb
pop
add
out
mov
daa
fsts
clc
mov
jae
fnsave
int
jbe
insl
push
in
lods
shll
mov
lret
or
icebp
lret
clc
inc
pop
ret
loopne
nop
or
ret
adcb
lock
std
je,pn
add
sub
fistpll
daa
xor
in
sub
movsl
aas
mov
sub
leave
shlb
push
push
mov
or
stc
jmp
adc
sub
adc
dec
push
xor
xchg
shl
in
add
in
lret
push
andl
xor
ss
push
xchg
fistpll
repnz
loopne
cmc
movsb
dec
fbstp
push
push
jnp
jne
adc
mov
and
cmp
in
and
dec
push
daa
xchg
imul
push
test
pop
outsb
dec
pop
jecxz
das
sub
xchg
test
out
mov
adc
test
test
xchg
stos
das
inc
sub
sub
or
leave
push
sub
cli
pushf
dec
push
push
add
iret
adc
xchg
fmuls
jae
or
out
test
mov
or
adc
roll
xor
add
xor
jl
cmpsb
and
and
push
out
cld
enter
fmul
cmp
dec
push
mov
add
and
mov
and
add
pop
add
xchg
out
fucom
pushl
cwtl
add
mov
ljmp
add
stos
or
bound
adc
push
sub
cmpsl
push
mov
outsb
push
xchg
hlt
sahf
cmpsb
dec
fwait
and
add
adc
cmp
add
aad
mov
or
cmpsb
addr16
mov
es
std
clc
popa
dec
dec
mov
xchg
inc
jg
mov
into
mov
outsb
and
dec
outsl
int3
adc
jp
lds
imul
dec
dec
std
jge
das
mov
pop
call
jmp
inc
push
mov
jno
add
and
jae
push
xor
lods
lahf
xchg
into
int
mov
mov
out
xor
cmc
pop
test
push
stos
pop
pushf
mov
push
mov
lds
lods
sbb
sbb
jl
sahf
int
loope
lahf
xor
inc
daa
arpl
and
cmp
inc
push
add
in
imul
in
cmp
jle
mov
fbstp
mov
xchg
adc
mov
fsubrp
mov
mov
mov
mov
cmp
ficoml
out
sbb
mov
call
xchg
cmp
push
lods
lret
scas
test
xor
dec
cli
sbb
jge
lds
jecxz
cmpl
xchg
lret
cmp
mov
and
add
pop
mov
sbb
arpl
mov
mov
cmp
adc
cmp
or
das
lahf
call
xchg
not
adc
in
sti
lret
xchg
jge
imul
sahf
lock
insl
subl
mov
sub
stos
call
adc
xchg
xchg
enter
imulb
cvtpi2ps
out
push
add
fcomps
lahf
adc
push
xor
fimuls
aaa
sbbl
xchg
xor
imul
mov
popa
adc
cmc
inc
mov
ret
mov
daa
add
dec
out
xor
sub
adc
aas
ret
std
mov
fldl2t
icebp
pop
sbb
add
pop
fidivl
arpl
clc
ja
mov
test
das
inc
bound
adc
lret
pushf
mov
or
sbb
fmull
subb
and
dec
push
add
mov
sbb
fmuls
gs
aaa
mov
sbbb
test
xchg
int
inc
push
imulb
xchg
add
fildl
and
jb
fmuls
pop
mov
pop
jmp
jmp
sub
shlb
aas
xor
std
jl
lcall
pop
sbb
andb
mov
orl
xchg
mov
stc
xor
xchg
test
pushf
inc
into
dec
xchg
outsl
add
repz
bound
dec
enter
or
push
push
cmp
cs
adcl
sbb
or
inc
pop
jns
pop
inc
push
push
jbe
dec
and
cmpsb
popa
test
dec
std
xor
add
ucomiss
mul
fisubrs
mov
and
xor
lcall
pop
push
jnp
sub
push
pop
mov
mov
or
dec
jbe
repz
enter
les
rolb
es
inc
insl
adc
push
mov
mov
inc
orb
fwait
adc
cmpsb
mov
mov
mov
mov
repnz
inc
fidivs
leave
sub
mov
mov
mov
clc
in
mov
pop
push
ljmp
lock
push
in
xor
out
ficoms
in
popf
inc
les
ds
xor
mov
enter
idiv
mov
adc
stos
sub
adc
xchg
or
leave
negb
xchg
xchg
les
mov
add
popa
fwait
fs
shll
xchg
dec
jmp
arpl
rclb
push
sbb
sar
xchg
mov
push
lock
fwait
imul
mov
xchg
fcmovnb
test
loopne
sbb
push
mov
test
cmp
xor
mov
dec
loope
cmp
pop
ja
imul
inc
pop
inc
jnp
adc
movsl
loop
mov
xchg
addr16
ret
mov
pop
imul
dec
sub
dec
popa
jnp
movlps
jge
dec
cmc
mov
loopne
mov
add
jns
or
jne
mov
out
popl
xor
les
mov
jb
mov
pop
inc
insb
adc
test
insb
push
lahf
cmc
jl
inc
pop
push
lods
sbb
rcr
cmp
jg
mov
pop
cmc
dec
pop
xchg
mov
or
jge
cltd
lods
mov
sub
sub
inc
push
daa
xchg
imul
sub
sbb
cmp
popa
cmp
dec
xchg
mov
xchg
mov
push
xor
push
inc
dec
pop
cli
cmp
xor
enter
fwait
aam
subb
jae
push
xchg
mov
outsb
jae
xor
jbe
dec
jne
and
mov
mov
es
pop
mov
mov
sbb
int3
movsl
daa
adc
mov
mov
test
cmc
mov
cs
jl
mov
lods
xor
cs
cmp
sub
lods
out
stc
arpl
int
fld1
nop
out
aam
andb
or
adc
sbb
inc
pop
or
lret
imul
jp
cmpsb
fnstsw
pop
jmp
icebp
xor
dec
mov
outsl
jns
adc
sbb
out
add
fistpl
mov
or
aas
andb
fnsave
mov
fistpl
or
jmp
and
adc
popw
repz
fsubl
sti
frstor
cmp
outsl
aaa
les
xchg
stc
and
sbb
mov
decl
lahf
add
push
sbb
bound
les
fisubl
mov
fwait
repnz
xchg
mov
jnp
aad
lea
dec
jl
call
mov
mov
cwtl
add
mov
jns
sub
into
jno
outsb
mov
xor
jp
imul
cmc
push
fwait
jge
adc
pop
mov
cmp
jo
push
shlb
or
stos
pop
push
pop
or
push
mov
pop
jbe
js
gs
insl
push
scas
in
cmp
mov
popf
adc
jb
sahf
shlb
or
jne
xchg
ret
dec
or
cmpsl
push
repz
mov
add
xor
pushf
dec
xchg
outsl
cmpsb
rcrl
mov
mov
adc
das
sub
mov
mov
adc
push
scas
inc
mov
push
sbb
inc
cmp
sbb
lods
inc
xor
inc
ja
imul
and
movsb
ficompl
mov
int
cld
or
sbb
cmp
jne
outsb
shll
pop
push
int3
mov
xor
xchg
xor
cld
cmp
lahf
and
out
test
jnp
loop
out
clc
xor
mov
int3
in
push
aam
cmp
incb
pop
xadd
xchg
aas
dec
clc
push
lcall
mov
mov
into
jmp
ljmp
int3
out
movsl
subl
adcl
mov
sub
adc
push
mov
test
nop
jge
jecxz
fsubl
je
mov
and
sbb
std
cmpsl
sbb
dec
mov
dec
arpl
xor
aas
int3
mov
inc
push
or
lock
xchg
addr16
pop
daa
repz
clc
adc
mov
ss
lcall
xchg
cmp
cmc
ret
push
mov
mov
dec
mov
xor
xor
adc
sub
inc
scas
pop
addr16
fbstp
jg
in
jae
adc
in
xchg
pop
sbb
test
jne
in
mov
adc
pop
stos
xor
push
test
cwtl
or
test
cmp
or
movsb
adc
call
inc
daa
sbb
sbb
scas
insb
jl
xorl
jne
lock
pop
push
fcmovnbe
add
loopne
adc
lea
enter
push
gs
out
inc
outsb
jecxz
jbe
in
stc
mov
jnp
xor
xchg
xor
jno
cs
jae
and
pop
pusha
adc
in
xchg
lods
or
out
sbb
jmp
cmc
shl
popa
arpl
imul
ljmp
dec
dec
cwtl
in
add
dec
mov
add
mov
pop
sar
inc
jb
sarl
je
xchg
sbb
movsl
not
daa
aad
cmp
jnp
test
lret
mov
test
xchg
pop
cmp
cmpsl
adc
clc
iret
js
fs
jae
test
jae
ljmp
mov
call
xchg
xlat
lret
rorb
leave
adc
inc
leave
lret
and
push
jecxz
dec
aaa
inc
adc
adcl
loope
bound
inc
out
in
mov
push
sub
lea
ljmp
popa
pcmpeqb
sbb
push
mov
pop
jne
aad
test
je
push
mov
cli
rcll
push
in
cmp
or
test
fucomi
sbb
clc
sbb
shlb
mov
outsb
ja
outsb
pop
mov
pop
adc
xchg
cmc
push
lea
jbe
adc
flds
loop
cmp
fnstcw
insl
addl
sub
loope
sarl
cmpsb
test
inc
stos
push
ljmp
out
sub
inc
and
cld
jnp
sub
or
test
push
rolb
out
aad
stc
push
mov
outsl
adc
sbb
xlat
xor
or
mov
jecxz
sahf
inc
inc
mov
and
dec
aam
andb
fdivrp
enter
push
inc
pushf
cmp
lods
repz
mov
pop
icebp
dec
je
paddusb
xchg
inc
cmp
mov
pop
loope
push
data16
enter
xor
hlt
xchg
and
shr
inc
sbb
or
or
and
adc
or
add
vcvtps2pd
lock
arpl
inc
mul
rolb
cli
add
mov
mov
and
rorb
mov
ljmp
rcr
push
ret
mov
jae,pn
nop
xchg
xor
mov
sub
lahf
adc
pop
push
arpl
leave
int3
repnz
icebp
add
mov
xorl
push
sbb
sbbb
jge
xchg
out
mov
push
cmp
jb
clc
adc
xlat
cmp
jne
out
jle
and
repz
sub
test
adc
or
cli
pop
jno
call
cmp
in
mov
and
ljmp
stos
xor
jno
mov
mov
inc
out
sub
and
adc
push
scas
fcom
sbb
inc
sbb
xor
xchg
push
std
lret
add
repz
shll
mov
sbb
test
push
dec
ljmp
enter
inc
inc
lods
jns
test
pushf
mov
in
jl
shrl
xor
pop
popa
shll
test
xor
mov
cmp
xlat
mov
subb
mov
cmp
fsubrl
iret
sti
adc
and
dec
adc
pop
and
cmc
sahf
add
push
xor
xor
push
int
out
mov
out
push
movsb
les
sbb
mov
and
out
push
lret
xor
sub
pop
lret
outsl
ret
pop
lcall
test
repz
popa
push
mov
cmpsb
jo
jb
fisttpll
pushf
divl
nop
fnstsw
loopne
and
push
je
dec
xchg
mov
jnp
nop
add
sbb
cmp
arpl
xchg
imul
sbb
pop
cwtl
lock
imul
fadds
imul
aam
mov
push
push
xchg
push
mov
adc
cmp
arpl
test
test
push
dec
std
inc
leave
push
clc
sbb
xor
in
jo
imul
arpl
mov
jno
xor
mov
push
scas
sub
xchg
mov
icebp
inc
and
pusha
aas
inc
sbb
push
test
fld
pop
add
jl
out
pop
pusha
fsubs
data16
rol
xor
pop
inc
push
sub
inc
ja
roll
out
loopne
lret
outsl
dec
movsl
sub
dec
xchg
cmp
fbld
aam
sbb
inc
inc
cmpsl
out
test
mov
das
shll
outsl
jae
mov
cmpsl
cmp
out
jnp
lret
test
dec
lahf
push
test
xchg
repz
and
add
jge
aas
fistps
sarl
adc
fsubrs
xchg
inc
pop
fadds
sbb
rorb
popa
mov
add
lock
jmp
add
lret
out
push
or
jns
xor
xor
std
movsb
and
insb
and
stos
cmp
adc
lret
inc
int
aaa
cmpl
je,pn
jae
sahf
data16
iret
sbb
mov
inc
cmp
adcb
call
xlat
dec
jl
xchg
pop
xchg
xor
data16
push
ds
jb
sbb
lock
dec
mov
mov
adc
jl
mov
or
aam
add
loopne
cmc
enter
sub
jmp
ret
mov
cmp
jbe
ljmp
mov
lret
js
int
insb
cmp
aad
jae
bound
testb
jae
cmp
call
mov
inc
mov
and
sub
mov
or
ret
pusha
test
pop
les
and
push
inc
in
pop
xchg
inc
add
push
ljmp
pusha
sub
int3
and
lds
mov
into
jae
jo
jbe
rcr
loopne
popf
push
imul
jne
xchg
push
pushf
inc
cli
shlb
mov
cltd
pop
ds
sub
sbb
call
cmp
test
mov
add
jg
sahf
scas
mov
psubsb
xor
pop
mov
shll
imul
sbb
insb
pop
repnz
int
movsl
or
push
mov
in
xchg
push
inc
fidivs
jp
dec
cmpsl
mov
push
popf
pop
mov
sbb
ret
aam
fs
std
fistpl
fcmovnbe
and
out
xchg
ja
xchg
push
or
fwait
les
arpl
sbb
ds
xor
aam
push
sbb
insl
movsb
sub
sbb
ja
faddl
pop
nop
cmpsl
xchg
enter
ret
aad
repz
sahf
cmc
mov
mov
mov
cmp
popa
xor
subl
adcl
mov
add
inc
xchg
mov
in
sub
pop
sahf
or
cwtl
adc
jne
add
sbbl
negl
push
scas
fdiv
repz
fs
stos
dec
sbb
insb
loop
sbb
mov
aaa
jne
sub
jmp
mov
and
test
jns
outsb
pop
pop
imul
xchg
and
jo
or
dec
nop
aad
cld
les
push
fwait
mov
iret
sbb
mov
push
shr
and
cwtl
cmp
in
nop
adc
rorl
icebp
adc
test
lods
or
push
jnp
nop
loop
into
cwtl
jmp
nop
pop
stos
in
xchg
mov
cmp
xchg
jns
lods
in
pop
cs
jae
mov
sbb
or
adc
ret
pop
pop
push
fistl
jnp
ret
fucompp
out
pop
jge
lods
mov
pop
aas
mov
jle
mov
sub
loop
mov
fs
push
insb
or
pop
cmp
mov
adc
pop
mov
fnsave
mov
push
das
inc
adc
sbb
xchg
xchg
in
xchg
adc
jae
adc
push
cmp
mov
imul
stos
in
sbb
sub
in
pop
push
push
add
adc
add
xchg
push
adc
pusha
jp
test
push
pop
sub
inc
adc
in
push
xchg
adc
stc
sbb
mov
ljmp
ss
add
cmp
fwait
add
mov
roll
mov
fiadds
jmp
sbb
std
mov
xor
les
gs
fsts
and
cwtl
outsb
jno
into
mov
jp
sbb
sub
ja
jno
cmc
lods
loopne
dec
rcrl
push
sar
sbb
mov
js
cmp
xor
popf
je
insl
fists
out
scas
rcl
pop
movsl
xchg
cli
push
inc
bnd
lds
js
int3
lea
out
dec
push
sar
xor
aad
ljmp
push
popa
or
dec
test
in
divb
clc
push
sub
loopne
lcall
adc
inc
jno
lods
in
sbb
jecxz
mov
mov
hlt
or
cmp
rcr
iret
pop
push
push
mov
push
sbb
and
mov
pop
xchg
int3
mov
lret
inc
lcall
popf
ficoms
subb
lods
shl
jle
jmp
sahf
pop
cli
int3
sbb
out
aaa
push
bound
or
mov
fidivrs
cmc
std
xchg
jl
lds
int3
mov
pop
dec
xor
scas
dec
mov
incl
mov
cmp
subl
movsl
bound
adc
cmp
sbb
je
sbb
mov
and
jnp
std
fs
loope
scas
repnz
inc
cmpsl
in
jp
mov
int
mov
mov
out
xor
testl
mov
mov
das
jns
jecxz
mov
mov
adc
arpl
xor
or
test
and
bound
imul
inc
jp
jg
arpl
add
aad
insl
in
outsl
or
dec
dec
cmpsb
out
imul
hlt
negl
mov
ret
adc
rcll
push
and
sub
in
int
fmul
lret
mov
pop
imul
fwait
cli
pop
adc
cli
dec
mov
fnstcw
dec
pop
icebp
rol
adc
mov
popf
cmp
sub
mov
fwait
pop
cmp
test
cmc
scas
jbe
and
cmp
and
mov
clc
dec
sahf
daa
xlat
inc
call
std
jmp
repz
clc
xchg
movsb
sub
xchg
mov
pop
mov
inc
jb
xor
in
mov
mov
pop
inc
hlt
dec
cmc
mov
and
ss
inc
sbb
iret
sub
or
add
pushf
push
add
outsl
dec
test
lahf
out
cmpb
dec
mov
push
push
adc
sbb
sub
imul
jge
pop
inc
arpl
iret
dec
loopne
fimuls
push
scas
sbb
add
repnz
add
lods
cmpl
cli
cs
sbb
lcall
mov
movsb
lahf
inc
cli
inc
insb
xor
and
outsl
pop
stos
jo
ret
les
inc
add
fidivs
bswap
lret
cmp
push
push
mov
jg
xorb
dec
out
in
xchg
mov
mov
fmuls
cmp
dec
das
mov
sahf
insb
pop
cmp
xchg
add
adc
jmp
scas
mov
pop
and
sub
divb
int
cmpsb
jg
adc
fidivs
mov
cli
sub
repz
xchg
adc
and
pop
push
xorl
shll
aas
push
mov
sub
xchg
adc
add
sub
mov
imul
adc
cmp
aas
or
inc
or
fdivrl
mov
imul
fnstsw
out
cmpsl
mov
jecxz
fsubrl
or
push
fs
mov
jbe
mov
adc
fadds
cli
es
les
inc
dec
lods
inc
add
jbe
pushf
pop
rcll
lret
out
popa
ss
stos
hlt
push
pop
scas
lock
lret
out
shll
pop
xchg
lea
daa
into
inc
xor
push
jp
jae
add
sbb
adc
add
mov
or
loop
in
push
sub
pop
add
adc
push
dec
cmpl
enter
push
ret
sub
cmc
je
pop
js
test
std
pop
jecxz
and
push
cmp
xor
rcrl
out
xor
outsl
adc
enter
dec
mov
subl
lret
loope
or
push
push
push
adc
or
es
xor
jge
fdivl
ret
or
pop
popa
mov
add
stos
mov
inc
testl
cli
pop
and
mov
mov
incl
mov
shll
dec
fistpll
cmp
mov
stos
jecxz
inc
sahf
pop
jecxz
jle
mov
iret
iret
push
popl
cld
sbb
ds
jns
and
mov
cmovl
stos
notb
inc
or
inc
data16
nop
push
rorl
mov
cwtl
into
xor
daa
jmp
xor
cld
leave
popf
into
je
mov
sub
mov
push
mov
xor
hlt
fdivs
aas
inc
mov
jbe
into
push
add
xor
xor
in
inc
xor
pop
push
mov
jns
pop
pop
jne
movsl
inc
jecxz
iret
call
das
add
add
add
add
mov
dec
test
inc
out
arpl
sbb
sti
inc
movsb
mov
pop
cli
stc
xchg
mov
push
out
loopne
jno
jp
mov
pop
cmp
sbb
mov
orl
pop
mov
mov
das
popf
cli
sti
mov
addr16
popf
mul
xor
movl
xchg
xorb
jb
ja
insl
mov
leave
xor
or
sbb
pop
sahf
pop
div
cmc
std
cld
xor
clc
lret
stos
fstps
insb
mov
lock
loope
ret
mov
insb
addb
repnz
mov
loop
pop
pop
pop
bound
and
shll
imul
sbb
xor
subb
test
les
mov
push
pop
and
adc
jo
jne
push
inc
out
les
cmp
fiaddl
and
dec
loope
dec
push
mov
out
mov
xchg
mov
jb
movsl
ljmp
jg
xchg
jno
shlb
repz
pop
cmpsl
pop
in
aas
mov
push
jg
sub
push
jmp
pusha
test
mov
cwtl
xchg
xor
mov
inc
call
bnd
or
or
daa
add
hlt
out
cmp
jnp
iret
fiadds
mov
sbb
sub
cmp
loope
jecxz
mov
push
andl
push
in
in
xlat
mov
in
pusha
pop
rorl
dec
insb
push
ljmpw
repnz
mov
popa
xchg
mov
jp
clc
xchg
push
pop
ljmp
bound
mov
or
in
jns
jp
jns
and
mov
ss
jno
repnz
rclb
into
sar
add
add
das
loopne
int
adc
xor
mov
fisubrs
test
pop
mov
jmp
arpl
sbb
outsb
fsubrs
inc
mov
cld
fsubs
leave
cld
aad
push
pop
jbe
sbb
mov
sbb
int3
mov
jbe
test
inc
xchg
jnp
fldt
adc
dec
add
pop
and
test
sbb
stos
nop
and
bound
sbb
arpl
mov
dec
pop
inc
fnstcw
push
jne
fistps
dec
mov
test
ljmp
dec
add
aaa
xchg
inc
fildl
jbe
das
fs
mov
hlt
push
cs
mov
mov
inc
int
dec
loopne
call
mov
das
dec
mov
arpl
mov
xchg
lods
mov
es
sbb
daa
push
add
mov
in
test
push
xchg
inc
mov
xchg
or
rolb
xchg
mov
inc
sbb
std
in
sti
and
jge
data16
mov
lock
sahf
insb
lcall
or
lods
add
lods
adc
test
xchg
mov
stos
adc
mov
push
nop
stc
xchg
add
xchg
adc
idivb
xchg
aaa
into
jb
movups
xor
jb
dec
and
xchg
jne
xchg
lret
pop
popa
push
mov
sbb
xchg
ret
mov
adc
pop
cmp
jl
dec
insl
out
push
ficoms
xchg
stos
lock
add
or
arpl
repnz
addl
imul
sub
cs
mov
xchg
fcoms
lcall
dec
lahf
and
repz
leave
ret
adc
mov
pop
movsb
dec
cmp
repz
mov
pop
pusha
loop
sbb
int3
jg
daa
aaa
sbb
mov
insb
mov
jge
movl
dec
icebp
push
lret
pop
ret
adc
rorl
xchg
inc
xchg
sub
pop
sahf
movsl
mov
fcompl
xchg
pop
sbb
adc
dec
pop
stos
jp
ret
lds
int3
xchg
dec
pop
int3
adc
mov
outsl
mov
cmc
dec
das
addr16
jmp
cmp
out
aas
shrl
push
inc
stos
dec
jmp
mov
insb
xchg
idivl
outsl
iret
or
ds
mov
shlb
iret
jg
and
imul
push
mov
fwait
mov
pushf
fstl
loope
pop
jp
fld
popf
sarl
pop
fwait
inc
sbb
mov
xchg
dec
push
jecxz
test
jo
jns
push
pop
loopne
xchg
lahf
imul
lea
scas
loopne
test
and
and
mov
sbb
mov
mov
fwait
sahf
stc
dec
in
test
or
aas
std
je
add
cmp
push
add
xchg
shlb
add
jmp
mov
int
rorb
fimuls
adc
scas
decl
int
mov
pop
jecxz
pusha
push
insb
sub
mov
push
clc
mov
xor
xor
scas
es
cld
mov
cltd
movsb
jl
mov
bound
int
add
in
les
push
cmp
mov
and
imul
mov
mov
sbb
push
ret
pop
xchg
jp
mov
sub
imul
in
daa
loop
dec
insb
xor
sbb
inc
mov
adc
sub
in
test
sbb
cmp
xchg
cld
fcmovb
es
or
adc
mov
xchg
leave
dec
mov
mov
push
fs
push
pushf
imul
or
mov
mov
push
stos
outsb
dec
mov
test
pop
scas
xchg
pop
clc
sub
mov
repz
mov
adc
dec
ja
mov
adc
add
xchg
fcmovnbe
pop
inc
fstl
ret
out
inc
outsb
or
daa
pop
lea
ljmp
jno
fucomip
mov
aas
jmp
cmpsb
inc
push
pop
inc
mov
addb
cmp
rolb
mov
dec
adc
mov
fs
fildll
mov
jb
aad
mov
mov
fldcw
lods
pop
arpl
pushf
push
mov
mov
sbb
mov
dec
cmp
stos
add
or
or
pop
ja
lret
xchg
and
dec
xchg
mov
add
pop
pop
cmp
aas
in
pop
scas
aad
push
dec
dec
cli
test
pop
inc
repnz
fs
cmpb
stos
xchg
dec
push
adc
in
jmp
mov
mov
adc
gs
add
movsl
and
mov
gs
aaa
add
bound
test
xor
xchg
test
cwtl
jp
in
arpl
inc
scas
mov
cs
mov
imul
mov
xor
xchg
fwait
call
or
mov
in
sub
mov
mov
lcall
repz
jecxz
sub
dec
adc
nop
sbb
and
dec
cmp
icebp
xchg
insb
gs
fmul
pop
fwait
rorl
mov
jle
scas
leave
nop
add
cmc
lahf
test
scas
mov
aas
fcoms
and
ret
mov
jnp
mov
pop
jle,pt
in
mov
xchg
je
fnstcw
pop
hlt
or
push
push
in
sub
addl
sub
push
adc
pushl
or
and
sbb
pop
inc
popf
shl
or
push
js
out
cmpl
out
fistl
in
dec
aas
enter
in
mov
mov
cmpsl
pop
and
ss
pop
mov
and
xchg
popa
aam
xchg
stc
jae
nop
test
fdivs
dec
cmpsl
ret
inc
mov
pop
push
cmp
or
addl
into
xor
pop
repnz
adc
inc
pop
popf
fwait
test
ljmp
sub
aaa
mov
out
rclb
mov
dec
jecxz
jae
sub
movsl
cmp
test
push
shlb
aad
mov
inc
aas
lret
or
lret
rolb
aas
sub
jne
xchg
fistps
fidivl
xor
and
cmp
lahf
clc
pop
add
pop
js
pop
jb
pop
xlat
stc
xor
outsb
add
out
roll
aam
sbb
clc
loope
cmp
sahf
mov
cmp
and
dec
pushf
inc
dec
clc
scas
jg
pop
cmp
stos
ljmp
xor
shll
test
cli
outsb
xor
fildl
in
mov
scas
gs
jb
test
and
ljmp
pop
jecxz
xor
je
dec
push
sub
pop
mov
test
mov
and
xor
pusha
xor
add
loop
mov
sub
addb
add
xor
xchg
lret
dec
sub
mov
mov
sbb
test
fistpl
xchg
cmpsl
cmpsb
inc
jl
in
icebp
test
mov
shll
shrl
lahf
jecxz
inc
or
popa
push
int
pop
arpl
pop
push
stc
ds
aas
aad
jmp
and
mov
mov
jg
cvttps2pi
ljmp
idiv
jmp
js
jmp
rorl
jg
jp
adc
xchg
sub
cwtl
dec
cwtl
add
jp
cmp
shll
repz
sti
and
xchg
add
cmpsb
rorl
dec
push
mov
sbb
mov
aam
pop
jg
daa
push
rorb
pop
es
pop
fcoms
jecxz
jmp
enter
inc
in
fldenv
outsl
cmp
ret
sbb
cli
add
leave
mov
mov
jb
imul
out
pop
cmp
into
and
mov
jb
jl
leave
push
jns
mov
xchg
cmpsl
leave
xchg
test
cmpsb
loop
lock
rcrl
pop
or
sub
js
in
or
fsubl
enter
das
fldenv
mov
add
imul
imul
push
mov
fistpll
add
je
mov
or
sbb
negb
addr16
inc
mov
mov
mov
jb
pop
or
and
xor
jecxz
roll
cwtl
adc
fwait
out
outsl
enter
push
stos
lods
pop
test
mov
sub
ja
aam
cld
pop
or
cmp
das
mov
push
mov
push
xchg
add
int3
xchg
add
add
cli
pop
mov
mov
inc
movsl
add
and
adc
jmp
pop
imull
jmp
sub
out
mov
in
in
shll
sub
mov
sub
in
sub
sti
ljmp
mov
in
fstl
pop
cmp
aad
in
lahf
adc
mov
clc
subl
scas
aad
lahf
mov
clc
rclb
push
fs
rorb
cli
mov
pop
xchg
lea
sub
jmp
rclb
push
sti
cld
rolb
imul
xor
jae
daa
insl
dec
dec
in
les
jmp
push
faddl
push
out
mov
je
xor
pop
cmp
dec
pop
and
and
call
mov
cld
and
mov
and
cmp
inc
adc
adc
jmp
push
cld
mov
or
js
insb
mov
scas
js
loope
mov
leave
fs
mov
and
fadds
dec
dec
pusha
xchg
int3
adc
insb
movsb
popf
xor
sub
add
xchg
js
push
push
cmp
push
or
stc
sbb
sub
cmp
mov
pop
insl
dec
movsl
push
mov
or
fwait
dec
push
adc
arpl
rclw
aaa
shlb
sti
sbb
push
xchg
sbb
jae
subb
mov
testb
mov
lcall
jge
mov
mov
loop
inc
jg
inc
push
cmp
pop
adc
movsb
adc
lea
pop
es
lcall
addr16
inc
mov
fidivl
mov
ja
push
addr16
movsl
test
adc
mov
mov
jae
das
or
jmp
enter
les
cs
push
fildll
sbb
cmp
mov
lret
lea
jl
testl
ret
xor
outsb
loope
bound
arpl
cltd
icebp
shl
call
nop
mov
pusha
xor
mov
mov
pop
pop
cld
movsb
repnz
adc
negl
sub
jno
repz
push
cltd
int
or
sbb
pushf
cwtl
mov
icebp
push
cmp
cltd
mov
pusha
xor
xchg
enter
xchg
pcmpeqd
mov
inc
xchg
mov
jne
scas
lock
maskmovq
divl
sahf
fstpt
loop
in
xchg
mov
scas
push
xchg
mov
mov
imul
dec
xor
dec
iret
xlat
adc
jle
shll
mov
int3
adc
push
dec
xchg
sbb
outsb
mov
fstpl
and
pop
nop
and
stos
mov
pop
sbb
repz
cmp
mov
cmp
cmp
clc
out
jb
xor
sbbl
jns
jmp
push
lock
ret
sbb
sbb
scas
lahf
cli
repz
mov
shlw
mov
stos
notl
push
lcall
sbb
test
aaa
jbe
enter
pop
or
outsl
sarl
mov
daa
les
sub
jno
aaa
jno
shl
push
das
sub
outsl
js
sti
pop
clc
inc
sbb
mov
fs
sbb
and
push
mov
cmp
mov
xchg
out
pushf
cmp
fdivl
jp
scas
lods
sub
cmp
stc
iret
mov
pop
into
jns
inc
push
dec
enter
inc
stos
inc
aad
mov
mov
push
int3
cmpsl
sbb
sahf
pop
inc
lret
pop
loopne
jp
or
fnstcw
mov
addr16
cmp
decb
jecxz
adc
notb
fwait
nop
sub
insb
push
imul
mov
jge
push
sub
and
and
or
inc
imull
mov
mov
jb
inc
jae
hlt
jns
xor
mov
in
lret
mov
insl
sti
mov
mov
adc
aam
fcmovnb
sbbl
dec
icebp
jmp
mov
sbb
cmp
lods
cmp
out
pop
rcll
rorl
cld
mov
hlt
push
mov
sbb
int
xchg
int
push
in
xorb
stos
cmpsb
loopne
sub
and
adc
xor
xor
shlb
add
push
les
dec
sub
cli
push
jmp
xchg
adc
xor
dec
push
outsb
mov
imul
les
mov
mov
es
je
pop
push
jg
or
inc
cmpsl
dec
mov
jp
stc
pop
rcrl
popf
ja
les
or
ret
cmc
dec
xchg
out
sub
inc
cmp
xor
stos
out
imul
xchg
xchg
rolb
daa
xlat
popf
adc
add
loop
inc
fldt
pop
dec
mov
sub
in
popl
add
mov
shlb
cltd
bound
rcll
sbb
fwait
rol
ficoml
mov
add
pop
push
adc
jb
xchg
in
repz
movsb
dec
xchg
rorl
mov
push
out
stc
divl
dec
mov
sub
aas
out
mov
fsts
push
imul
or
jnp
inc
das
and
test
pop
in
jge
fistpll
out
gs
sbb
popf
mov
push
mov
fcomps
movsb
icebp
and
cmp
mov
adc
cmp
xlat
mov
pop
aam
out
popl
cwtl
jecxz
stos
dec
jg
add
push
sbb
mov
adc
pushf
shl
jno
cli
outsb
or
mov
add
mov
xchg
jns
mov
dec
and
test
scas
cmc
ficoms
and
pushf
sub
aaa
in
ror
sbb
in
mov
xor
adc
js
test
je
sub
mov
push
stc
inc
xor
daa
call
into
push
stc
inc
daa
mov
inc
fcmovu
cmp
lret
cmp
pop
mov
or
mov
aaa
cmp
dec
mov
push
cmp
ud0
and
in
xchg
cmp
sub
jge
push
pop
or
fs
cmp
and
push
cmp
cmp
mov
xchg
dec
js
jmp
mov
popl
addl
push
fadds
ret
lods
or
std
fisubs
mov
rclb
movsb
mov
cmp
and
notb
push
in
mov
aad
inc
insb
push
nop
insl
lcall
lds
inc
mov
mov
cmpsl
je
dec
xchg
pop
xchg
dec
sbb
mov
adc
mov
enter
cmp
dec
test
mov
jnp
mov
ja
jae
lods
jp
out
ficomps
jns
mov
dec
mov
pop
adc
xor
adc
aam
xchg
dec
and
sahf
out
push
mov
sub
lcall
adc
push
xlat
inc
in
push
pop
push
fadd
aad
inc
movsl
jg
int3
mov
push
push
clc
inc
jmp
and
push
stc
cmp
jns
push
adc
in
lock
sbb
movzwl
pop
pop
mov
add
pop
cmp
mov
testb
addr16
pop
sbb
mov
mov
xchg
sub
jae
in
arpl
and
aaa
dec
ja
fdivrs
jg
fs
test
xor
xchg
pop
scas
nop
inc
adc
cmp
mov
fucom
mov
lods
pop
imul
not
maxps
jg
out
and
xchg
cli
dec
or
push
mov
xor
lret
imul
cltd
mov
inc
dec
dec
pop
iret
dec
ror
push
in
cmp
mov
mov
inc
in
and
rclb
adc
lock
lea
lods
and
add
and
test
mov
cmp
and
pop
mov
mov
cli
dec
or
xor
dec
lock
push
movsb
pop
movsb
ja
xchg
adc
and
stos
nop
addr16
push
arpl
cmp
ret
pusha
pop
pushf
popa
out
sbb
pop
daa
shll
add
xor
std
dec
cli
push
push
xchg
pop
outsl
mov
push
pop
leave
mov
mov
add
ret
cmp
xchg
lods
or
in
idivb
outsb
push
pusha
adc
xchg
rolb
cmpsb
or
pop
adc
idivb
adc
sub
gs
push
mov
shrb
lret
outsb
sbb
out
test
adc
movsl
out
and
and
insl
fildl
daa
fmull
sub
ret
scas
fstpt
xor
imul
xchg
mov
push
and
and
sbb
sub
mov
sub
out
out
dec
int
popfw
ds
add
clc
inc
iret
test
lods
cmp
lods
clc
or
jmp
mov
fsubl
add
into
add
jmp
jge
mov
mov
in
adc
push
fiadds
inc
inc
inc
mov
xor
shlb
pop
mov
hlt
scas
inc
cmp
mov
inc
adc
lret
dec
pop
sub
ljmp
xchg
lcall
test
or
popa
adc
shrl
or
dec
rcrl
dec
pop
stos
cmc
xor
pop
das
lock
adc
mov
dec
mov
pop
jo
jmp
shrb
lret
vpsrad
add
pop
mov
lcall
sbb
sbb
out
out
jb
popa
sti
xchg
fidivrl
shlb
repnz
fiaddl
mov
pop
pop
pop
xchg
sub
je
das
sub
in
es
mov
mov
sbb
int3
loopw
cltd
rcll
or
iret
mov
movsl
fnstcw
cmpb
or
shrb
jmp
cwtl
adcb
jns
fwait
sahf
lock
push
lods
mov
jne
jg
dec
movsl
push
mov
mov
pop
inc
mov
in
subb
xor
in
mov
iret
sbb
outsl
adc
or
jge
xorps
adc
dec
gs
test
insb
sub
outsb
lret
cmp
jno
and
xchg
add
lahf
hlt
mov
fs
shll
cmp
sub
sbb
in
pusha
fisttpll
xor
pop
pop
dec
cmp
mov
sub
push
stos
or
int3
cmp
jns
fsts
rol
xlat
and
or
jb
adc
xchg
std
icebp
test
adc
mov
push
mov
movl
xchg
xor
or
cwtl
pusha
dec
insl
call
xor
jg
mov
sub
mov
arpl
rolb
icebp
cmp
int3
cmp
ljmp
mov
dec
adc
std
mov
dec
test
push
std
ret
std
enter
lret
mov
dec
in
jns
push
inc
ljmp
incl
aad
int3
mov
pop
cmp
inc
jg
or
data16
mov
nop
sbbb
push
jecxz
clc
js
jbe
and
sub
shr
mov
pop
xor
jae
lret
pop
test
adc
pusha
fisubl
mov
mov
lahf
jnp
push
mov
cli
dec
fwait
test
insb
jae
jae
adc
cmp
mov
roll
js
test
sbb
vpminub
stos
xchg
mov
loop
add
cmpsb
dec
mov
cltd
xchg
clc
loope
icebp
insb
test
push
mov
mov
push
jbe
bound
pop
fldenv
sti
push
sub
mov
mov
data16
add
mov
leave
pop
std
ret
pop
or
std
mov
ret
aad
or
cmp
jmp
sbb
cmp
adc
or
mov
mov
inc
cli
or
adc
inc
imulb
push
mov
andl
dec
movsb
inc
pushf
push
or
iret
sti
cli
or
xor
push
push
pushf
jnp
xchg
adc
dec
and
insb
call
sub
and
push
aad
push
insb
in
mov
cld
lds
les
loop
inc
jl
dec
adc
lret
and
jbe
cmpsl
pop
mov
cli
out
xor
sub
jge
std
and
xchg
in
pushf
mov
outsb
call
repz
test
popa
fs
jl
pop
mov
push
addl
add
pop
cmp
es
fwait
out
and
repz
fs
push
ret
mov
ljmp
pusha
pop
cmp
push
sub
movsl
mov
mov
dec
dec
lret
mov
pop
jns
cmpl
mov
push
mov
ficoml
sbb
ss
xchg
cmpsl
stos
jbe
and
sbb
sbb
sbb
jge
pop
and
add
rcrb
cmp
mov
out
mov
mov
mov
cmc
pop
clc
rolb
shlb
loop
outsl
sbb
ds
push
sbb
repz
pushf
mov
xchg
lahf
stos
arpl
push
arpl
inc
in
fiaddl
incl
sub
imul
and
outsl
iret
data16
sbb
pop
les
fwait
jnp
popa
push
fisttpl
aad
aam
lock
push
outsl
inc
pop
bound
test
imul
push
addr16
and
aad
xchg
push
sar
loop
jmp
mov
out
mov
and
adc
sahf
cmp
hlt
loop
push
sti
enter
and
pop
inc
fbstp
add
pop
int
fwait
notb
stc
cmp
sahf
stc
mov
andb
int3
mov
ja
je
sub
lds
orb
loope
mov
sti
jmp
and
repnz
out
das
push
fildl
push
mov
lods
dec
mov
inc
scas
xchg
jge
clc
fnsave
push
add
clc
mov
adc
sub
lods
notl
in
aaa
cs
outsb
out
rorl
jo
cmpsl
mov
divb
adc
or
fwait
jo
or
cld
cmpsl
xor
popf
clc
addl
popa
pop
test
ss
add
mov
lcall
adcl
push
jo
add
pop
imul
divl
or
and
pop
pop
lock
cmp
jge
mov
outsl
fstps
dec
inc
fucomip
mov
add
stos
fdivrl
fidivs
pop
or
leave
xor
stc
shlb
or
cmp
and
push
test
es
ficomps
pusha
addr16
adc
and
or
fstl
addr16
lahf
out
xor
ret
cmp
and
xchg
arpl
or
sub
dec
or
test
and
repnz
sbb
xchg
xchg
mov
pop
push
mov
inc
ljmp
adc
dec
lcall
in
push
popa
pusha
mov
lock
adc
test
das
lret
pushf
insb
mov
xor
outsb
push
js
xchg
mov
sub
aas
xor
repz
jp
xchg
cmp
shlb
and
push
jp
hlt
outsl
lods
test
cmp
mov
iret
scas
mov
mov
xchg
bound
cmp
jmp
stos
push
xchg
inc
sub
pop
ja
test
not
loope
jmp
cmp
in
jle
and
shll
jnp
mov
imul
jae
stc
dec
jmp
mov
mov
jp
inc
fistpll
mov
add
les
lods
dec
mov
sbb
xor
in
into
sub
jbe
fsubrs
clc
out
mov
xchg
adc
xlat
loope
div
push
cmp
jge
push
roll
add
cltd
add
cli
adc
xchg
mov
xor
orb
mov
cmc
mov
xor
xchg
jae
int3
mov
out
xchg
sub
insl
mov
andb
enter
ret
mov
lahf
out
add
lret
dec
and
insl
dec
inc
inc
cmp
mov
jmp
xchg
insl
fdivrl
cli
add
ljmp
dec
jae
dec
push
icebp
pop
or
or
jmp
aas
inc
xor
or
int
data16
jo
lods
jle
jle
mov
int
mov
xlat
sub
mov
jb
inc
inc
dec
xor
js
push
icebp
and
in
je
dec
popa
lahf
stc
subl
cltd
insl
mov
fcoms
mov
jne
pusha
adc
arpl
loopne
das
enter
inc
lods
pop
jg
loope
loope
outsb
lods
out
movsl
std
xchg
imul
push
xchg
scas
lock
or
mov
and
sub
daa
out
sub
fcoms
repz
leave
jns
std
lcall
stos
jmp
and
mov
mov
dec
cmp
inc
daa
sti
and
pop
sub
mov
insl
jge
sub
sbb
mov
gs
lock
mov
ljmp
test
xor
dec
mov
lret
into
mov
repz
jecxz
push
loop
xlat
mov
push
sub
test
mov
jns
ficoms
xchg
flds
mov
mov
outsb
mov
sub
stos
shll
movsb
in
movq
jle
push
cwtl
mov
fisttpl
fwait
jno
inc
nop
dec
jle
sbb
xchg
test
imul
outsb
jl
xor
insl
mov
scas
mov
push
lret
or
mov
shl
mov
mov
test
dec
cwtl
sbb
lock
ret
xchg
jne
mov
lcall
cmp
xchg
pop
nop
jl
fcomp
jne
or
clc
xor
andb
les
pop
xor
mov
inc
dec
imul
dec
sub
xchg
mov
sbb
sub
jne
into
out
mov
push
dec
mov
cmp
pop
push
jmp
cmp
mov
test
dec
jnp
idivl
rolb
push
aaa
test
out
mov
pop
jae,pn
push
repnz
or
jmp
cwtl
adc
shrl
jmp
mov
sete
hlt
adc
jmp
sub
dec
in
mov
xchg
aad
popf
lock
or
mov
stc
jae
mov
jmp
and
out
js
and
sbb
stc
mov
mov
lcall
int
cmp
dec
imul
add
sbb
stos
cld
in
jecxz
dec
cmp
pushf
sub
sub
pop
cmpsl
scas
test
xor
push
mov
frstor
rcrl
cltd
neg
mov
jl
int3
addl
and
mov
jle
movsl
cmpsl
sub
mov
pop
sub
rorb
add
imul
lret
arpl
ffreep
in
sbb
dec
das
xchg
test
sbb
idiv
inc
pop
sti
pop
lret
sbb
adc
ficoms
dec
mov
xor
pusha
adc
sbb
pop
xor
xchg
sbb
mov
sub
dec
mov
nop
ljmp
stos
jb
sbb
jbe
imul
icebp
enter
sub
lods
mov
cmp
xchg
push
adc
movsb
aas
repz
or
in
mov
jae
shll
icebp
xchg
pop
jecxz
fildl
aas
mov
push
leave
adc
aaa
pshufw
jns
movsl
push
hlt
pop
mov
inc
xchg
xlat
adc
imul
pop
hlt
dec
add
xchg
mov
pop
xor
jb
push
inc
cwtl
or
and
pop
test
mov
test
or
push
mov
or
jmp
and
mov
packssdw
jmp
les
inc
or
mov
lahf
rol
dec
pop
mov
movl
mov
loope
repnz
int
aas
xchg
into
push
dec
outsl
mov
pop
fcoms
xchg
jge
mov
dec
loope
fiaddl
jmp
pop
pop
push
rolb
fs
outsb
xlat
repz
incb
pusha
enter
xchg
sbb
mov
sub
sbb
imul
iret
mov
add
scas
mov
cld
ja
test
sub
aaa
jg
xlat
scas
cmp
orb
jle
cmc
fnsave
adc
cltd
mov
subb
xchg
push
test
fnsave
add
pushf
frstor
nop
pop
or
xor
push
xchg
hlt
std
mov
add
pop
xchg
mov
mov
inc
cli
mov
clc
mov
add
out
cld
movsl
into
outsb
and
cli
jnp
pushaw
fistl
fisttpll
aam
je
xlat
sbb
ljmp
mov
movsl
out
fwait
pop
cmp
sbb
push
imul
test
push
adc
pushf
cmp
dec
cmp
xor
xchg
sbb
fiadds
popa
push
movsb
shrb
add
add
rcrl
scas
add
loope
jmp
add
jo
repnz
fldcw
inc
test
out
andb
jecxz
das
loopne
test
push
fnstcw
adc
pop
dec
dec
jo
push
mov
xor
nop
dec
xchg
push
mov
sub
mov
loopne
leave
add
test
push
mov
sbb
mov
push
add
shll
lods
movsb
and
fs
xrelease
jne
inc
mov
sbb
add
lea
mov
stos
clc
cmp
and
mov
shl
cmp
dec
add
dec
inc
jns
mov
ret
ja
push
ficomps
pop
mov
je
xchg
add
pop
jno
fidivs
lret
push
sbbb
mov
fists
xor
inc
in
subl
cmc
pop
sbb
push
sbb
fistpl
mov
ds
sbb
fnstenv
dec
mov
xor
jno
mov
adc
cmp
inc
in
xchg
out
xchg
inc
jmp
xchg
add
mov
pusha
into
mov
jge
cmp
daa
add
and
iret
push
int
jmp
out
loope
push
rol
outsl
mov
mov
shlb
lret
jmp
testl
es
add
pop
repz
mov
in
fsub
xor
bound
push
adc
pop
dec
xor
bound
pop
mov
rorl
jecxz
pop
mov
pusha
or
sub
mov
rorl
addr16
sarl
rcrb
xor
jl
sbb
push
lret
xchg
leave
in
test
mov
pop
adc
das
cmpsl
xchg
mov
dec
ror
lea
mov
lret
sub
fstl
test
adc
dec
mov
mov
add
pushf
movsb
in
fwait
xlat
mov
add
xchg
je
sti
xor
addr16
mov
into
mov
push
adc
rclb
push
xchg
sub
push
adc
jge
xchg
movsl
mov
mov
lcall
rcr
std
ret
out
sahf
mov
sub
ja
insb
imul
sahf
cmp
fcomps
sti
fwait
pop
imul
xor
cmp
leave
push
xchg
clc
xchg
sub
mov
mov
inc
std
aad
aaa
out
aaa
ret
pop
cmpsb
test
ret
and
dec
inc
sub
xchg
or
ret
pop
loop
mov
in
sub
dec
gs
cltd
cs
shlb
mov
jo
or
dec
dec
pop
imul
sahf
icebp
inc
dec
pop
xor
push
add
les
mov
ret
jbe
fcmovb
or
mov
push
xchg
xor
int
push
inc
mov
shr
mov
shll
clc
add
cld
cmpsl
iret
jecxz
lds
mov
jge
xchg
xchg
sub
lods
test
xlat
aaa
sbb
aas
sub
mov
outsl
dec
or
dec
sbb
add
je
fmulp
in
push
aad
jecxz
movsl
cmpsl
cs
xor
outsb
sbb
mov
hlt
addr16
scas
imulb
pop
cmpsl
pop
mov
pop
sahf
lods
or
out
sti
pushf
mov
int3
lea
cmpsl
and
lods
push
fildll
push
push
mov
jle
sbb
enter
in
cld
sub
adc
dec
dec
sub
out
or
insl
sbb
int
int
pop
ss
das
inc
nop
out
pop
lods
dec
mov
push
sahf
stos
mov
popf
add
sub
jge
inc
mov
sbb
xchg
loopne
shlb
mov
jns
pop
and
repz
sub
inc
es
inc
testb
lods
sub
fidivrl
xchg
lahf
add
outsl
jle
out
mov
mov
das
ret
mov
mov
insl
repz
adc
push
daa
xor
sub
xchg
sub
xlat
daa
movsl
out
imul
pop
es
sub
mov
imul
repnz
sbbb
mov
xor
jecxz
int
pusha
mov
xchg
cmp
mov
fimuls
xor
mov
in
push
xor
mov
ds
aad
sub
rol
addr16
mov
bound
icebp
mov
jns
dec
aam
xchg
pop
lock
outsl
pushf
pop
ret
stos
mov
add
lret
loope
fsubrl
iret
testl
out
aam
push
fs
inc
mov
sub
push
pop
xor
push
cmpsl
xchg
xchg
push
js
aaa
mov
in
stos
fsubl
xor
inc
call
pop
cltd
mov
mov
movsb
inc
in
dec
or
pop
sub
push
sbb
mov
aaa
loopne
sub
cmp
ficoml
mov
cmpsb
jne
add
cmpsl
rol
jbe
xor
js
push
aas
mov
in
out
pop
imul
mov
iret
shlb
cmp
adc
out
and
hlt
bound
sub
push
nop
sub
int
in
push
xor
aam
pop
mov
adc
movb
mov
dec
sub
repz
dec
faddp
loopne
sti
pop
jns
jg
xor
mov
pop
ss
fldt
jns
rcll
lods
bound
pop
pop
sbb
and
cmp
add
fsubs
insl
jp
es
adc
ret
sub
cmp
sub
xor
arpl
push
inc
out
jecxz
hlt
shll
sbb
cmc
stos
sbb
shrl
pop
adc
sbb
cs
repnz
add
cmp
jge
addr16
xchg
adc
aad
inc
dec
mov
btsl
cmp
popf
data16
cmp
mov
in
mov
call
nop
mov
shlb
xchg
xchg
cmp
jl
xchg
cwtl
lods
inc
pushf
add
lcall
js
out
jp
jmp
adc
das
mov
push
xchg
aaa
and
dec
add
popa
es
jb
arpl
jbe
jecxz
mov
scas
and
xlat
mov
aad
mov
and
in
rcll
push
in
fstl
movsb
mov
dec
lock
fs
mov
lahf
cmc
inc
pop
aaa
pop
loope
push
or
sub
ljmp
in
lea
loopne
xchg
mulb
dec
xchg
mov
test
jecxz
lret
push
adc
rcrl
sbb
out
imul
push
pushf
mov
and
jno
push
push
out
pop
jg
fcoml
pop
stos
push
outsb
xchg
aad
push
mov
mov
xchg
imul
in
in
pop
adcl
idivb
scas
inc
je
dec
test
or
mov
insb
aaa
push
sub
int
or
sbb
data16
cmp
sbb
mov
inc
mov
test
test
mov
jno
int3
mov
dec
psubsw
fidivrs
ljmp
xchg
js
mov
pop
in
jb
inc
test
scas
das
dec
jmp
iret
int3
add
scas
adc
gs
xor
stc
add
dec
outsb
cmp
add
xor
jp
addr16
rcrl
outsl
and
sti
insb
and
bound
lods
add
shll
push
mov
mov
add
in
adc
cmpsb
adc
mov
subb
pop
dec
lfs
insl
mul
je
pop
inc
pop
pop
jge
and
ss
imul
add
mov
es
test
jb
mov
inc
cmp
movsl
dec
xor
jns
jo
cmp
add
test
inc
repz
outsb
cmpsl
xchg
dec
nop
xchg
repnz
insl
xchg
fidivrs
add
mov
mov
int3
fdivrs
xchg
aad
push
add
xor
lcall
cmc
loopne
aad
call
stos
cmp
filds
pop
adc
lret
cmp
mov
pop
pop
cmp
cs
leave
rolb
jle,pn
lahf
inc
or
imul
mov
sbb
mov
dec
lret
cmpl
popf
out
popf
xchg
rol
push
cs
or
xchg
clc
and
or
jae
into
icebp
jle
add
push
pop
adc
xor
cltd
jmp
aaa
cwtl
stc
cmpl
mov
mov
push
out
cmp
mov
fs
mov
jle
sti
push
in
mov
cltd
xchg
or
add
and
or
sbbl
bound
xchg
lret
cmp
cli
jo
rcl
mov
out
inc
bound
mov
pop
mov
mov
mov
mov
fiaddl
add
push
and
call
xor
das
add
xchg
xor
lret
mov
xlat
orb
or
jle
or
mov
push
es
add
ret
inc
inc
inc
sbbb
add
cmpsl
pop
xor
add
nop
shrl
popf
sbb
pop
das
clc
jns
decb
mov
jl
stos
inc
cmpsl
pusha
mov
push
lcall
cmpsb
jae
push
pop
fbld
cmp
imul
jne
or
ret
mov
test
iret
pop
cmpsb
and
dec
out
negl
mov
inc
test
xchg
ds
pop
xor
xor
fsubr
pop
sarl
orl
push
data16
test
adc
cltd
insb
bswap
adc
pop
add
push
rorb
out
xor
jnp
ja
into
mov
dec
push
sub
rorb
jne
lret
sarl
rcrb
jb
rcrb
fdivs
xchg
call
paddd
cwtl
push
mov
push
repz
and
ja
jp
dec
adc
add
pop
push
cmp
adc
dec
out
into
sub
leave
xchg
add
sbbb
lods
adc
jecxz
mov
in
sbb
adc
xchg
insb
inc
movsl
cmpsb
adc
out
pop
or
jp
mov
fwait
cltd
sahf
add
in
inc
cmp
test
xor
xor
add
mov
arpl
jl
lods
jae
mov
out
cwtl
stos
jb
dec
dec
mov
neg
mov
add
pop
aam
adc
pop
pop
int3
add
mov
or
adc
pop
aad
nop
es
adcb
or
int
sbbl
or
rcrb
fdivs
xchg
add
jle
jae
add
mull
scas
dec
iret
pop
rolb
lahf
loope
mov
loope
lcall
xchg
inc
inc
in
pop
lret
xchg
xlat
push
into
out
sbb
mov
push
jmp
or
enter
movsb
dec
jl
mov
mov
sbb
add
insl
push
adc
sbb
out
cmp
xchg
sbb
push
dec
jnp
popf
dec
sbb
ljmp
shrb
pop
stos
xchg
rcrb
ss
stos
cmp
push
rcrl
mov
add
enter
repz
idivl
insb
not
cmp
add
xchg
popf
pop
pop
test
fnstcw
jmp
cmp
dec
test
and
fwait
aaa
je
push
fsts
push
out
mov
lea
in
into
out
movsl
cmp
push
pop
dec
cmp
scas
scas
sbb
int
jp
cmpl
divl
pop
adc
into
mov
push
in
mov
push
add
mov
pop
popa
cmp
mov
ljmp
cmpsl
cwtl
jle
sub
pop
lret
jno
push
inc
xor
mov
shlb
cmp
adc
cmp
xor
inc
mov
pop
imul
push
sub
mov
sub
xchg
gs
dec
dec
gs
fwait
sarl
das
sar
test
mov
outsl
adc
xor
mov
sub
xchg
jae
in
test
adc
jmp
and
jecxz
xchg
mov
cmp
cmpsl
or
leave
or
cmpsb
dec
int3
pop
inc
shll
and
jbe
nop
push
lock
and
xchg
cmp
and
jecxz
aas
cmp
ret
jbe
mov
dec
jns
pop
pop
ja
cs
bound
push
jp
add
pop
jmp
or
xor
sbbb
xchg
iret
out
jo
callw
roll
adc
iret
dec
out
sbb
jae
dec
out
push
push
pop
add
or
cs
xchg
loopne
xchg
ret
add
cmc
mov
dec
mov
or
popf
lret
cmp
cmp
dec
insl
add
lods
add
arpl
dec
leave
and
arpl
aam
fldenv
inc
sbb
leave
outsb
push
scas
fcmovnbe
in
js
sub
dec
fldenv
dec
pop
fstpl
adc
lds
adc
xlat
pop
mov
lods
lret
mov
xlat
stos
mov
xor
cmc
ret
inc
std
or
adc
mov
mov
out
aam
jp
xchg
test
add
sbb
pop
int3
scas
imul
scas
pop
xchg
repnz
dec
mov
mov
aas
cs
adc
sub
and
insb
mov
test
jns
adc
lds
imul
and
cwtl
jb
sub
inc
sarb
xor
xchg
out
add
jne
lods
fiadds
sub
out
sub
movswl
lods
pop
popf
out
pop
shll
cmpsl
or
in
shlb
push
inc
ljmp
push
adc
sub
jno
clc
call
mov
scas
mov
hlt
add
cmpl
xor
mov
cmpsl
cltd
xchg
aas
fsubrs
sbb
and
mov
ds
loope
lret
mov
aas
sub
mov
fsub
sub
dec
fldt
xor
ds
sub
sti
mul
ljmp
pop
pop
cmpsl
scas
test
stos
sbb
prefetch
ret
xor
jmp
mov
mov
adcl
lods
adc
jo
fwait
insl
addr16
jbe
dec
fsubr
inc
jno
mov
int3
neg
fisubrl
cltd
dec
mov
push
leave
jle
sub
popa
leave
loopne
stos
sbb
fsubp
jge
bound
into
mov
je
and
jns
aad
xchg
xorl
adc
fwait
pop
fdivrs
sbb
icebp
shl
data16
mov
jp
pop
jb
xlat
xchg
or
fsts
lahf
fwait
or
pop
hlt
inc
ds
clc
popaw
push
aas
or
es
lds
or
or
mov
insb
or
or
stos
mov
mov
push
hlt
in
push
push
sub
jo
xor
or
fisttps
inc
cwtl
shl
outsl
cmp
aaa
adc
dec
jno
push
mov
jbe
mov
jmp
pop
cmp
movmskps
jmp
pusha
sbb
dec
pop
lea
mov
es
insl
dec
test
add
sahf
xor
ljmp
adc
adc
dec
sarl
xchg
push
cmp
push
xchg
call
lods
pop
incl
jg
pop
decl
cmc
sbb
dec
fimull
ja
pop
inc
popf
fwait
mov
mov
jle
adc
fsubrl
aaa
pop
jp
push
jae
or
mulb
lea
adc
push
push
mov
loopne
pop
cmp
repnz
rolb
rcrl
pop
push
mov
xor
enter
imul
ror
movsl
jnp
cmp
std
jge
fidivrl
addl
mov
popf
test
and
movsb
repnz
pop
test
mov
and
push
mov
mov
and
je
push
fsts
cmpb
xchg
sub
pop
mov
clc
out
cmp
pop
and
shll
or
ret
mov
sub
inc
in
enter
arpl
sub
mov
sbb
xlat
ret
in
pop
mov
jmp
ret
pop
stos
pop
xor
mov
pop
lea
out
nop
dec
push
ja
push
push
outsb
jmp
fucompp
insl
std
sub
pop
push
clc
mov
mov
mov
or
pop
mov
dec
lods
testb
test
ret
loop
sub
iret
aad
dec
leave
sbb
dec
adc
in
jbe
ret
ja
cmpl
mov
clc
in
or
gs
leave
dec
pusha
into
jne
data16
daa
push
shlb
mov
scas
xor
hlt
das
jmp
sbb
or
xchg
sbb
clc
cmp
xchg
cmp
pop
or
je
scas
adc
mov
mov
mov
dec
movsl
adc
std
fidivl
mov
adc
push
outsb
js
cmp
mov
mov
adc
movsb
mov
xor
inc
sub
bound
jae
icebp
icebp
xchg
pop
sbb
bound
xchg
je
push
neg
lods
cmp
popa
negb
mov
xchg
aam
imul
add
cmc
lods
fdivrp
ljmp
int
ds
in
adc
popa
sub
and
data16
es
stos
push
cmp
aas
mov
mov
fincstp
into
xchg
sbb
mov
std
pop
inc
cmp
cs
or
and
lds
inc
xchg
and
fstl
xor
cmp
mov
mov
int3
sbbl
or
and
sbb
xor
add
adc
cld
jnp
repnz
iret
fsubl
mov
push
push
mull
in
sti
pusha
out
es
lcall
adc
lods
ja
jecxz
je
mov
ret
fwait
mov
loope
std
jl
iret
inc
arpl
and
lcall
bnd
or
rcrl
popa
into
sub
pop
or
push
pop
fs
add
pop
lahf
push
inc
inc
push
cmp
enter
mov
rcll
push
jae
jge
inc
data16
imul
adc
test
fdivs
roll
mov
fisubs
fwait
aas
stos
test
ret
arpl
movsl
addb
push
push
ficoml
or
fistps
push
jno
scas
dec
sti
ds
jge
push
shrb
inc
notl
cli
xor
call
mov
xor
mov
push
rorb
sahf
xor
xchg
push
xchg
cmp
out
mov
dec
test
sub
cmpsl
sbb
pop
sbb
mov
enter
lds
jp
fisttpl
and
jg
pushf
dec
sbb
into
inc
push
pop
adc
call
add
push
pop
mov
aas
mov
mov
ret
mov
int3
jecxz
cli
sbb
push
jo
jb
out
and
gs
lcall
test
mov
xchg
cmpsb
push
cmp
shrl
out
popf
popa
popl
adc
jne
xchg
mov
jbe
cld
add
mov
psllq
and
push
test
das
cmc
outsb
loop
cltd
int
mov
add
pop
clc
sub
and
arpl
sbbl
mov
mov
jecxz
mov
mov
cltd
aas
neg
rcl
adc
js
arpl
pop
mov
and
aad
xchg
lahf
cli
adc
aas
mov
jne
push
inc
enter
stos
loope
rcll
sarl
pop
or
jne
push
fcoml
dec
and
int
lods
push
mov
ret
fs
push
lds
push
lcall
cwtl
cld
inc
iret
aas
es
mov
cmp
adc
lahf
push
fstps
std
cmp
adc
data16
movsb
jnp
sbb
jbe
mov
mov
adc
mov
scas
popf
popa
test
pop
outsl
ret
add
pop
cmpsb
dec
jbe
or
adc
lcall
dec
cmpsl
std
scas
push
stos
xor
add
sub
ss
push
jbe
jbe
jbe
ds
jg
jne
jmp
mov
stos
jp
jmp
mov
dec
in
pop
cltd
cmpb
dec
inc
enter
or
pop
cmp
pop
push
iret
dec
fistpl
adc
jg
icebp
sub
addr16
push
imul
sub
push
inc
xor
mov
out
roll
dec
in
xchg
fcomps
cmp
and
cmp
and
scas
std
sub
fstpl
cmp
pop
cmc
addl
dec
mulb
dec
scas
icebp
aaa
ds
mov
insl
outsb
fidivrl
aaa
sbb
adc
mov
or
sub
push
and
pop
pop
imul
loopne
mov
mov
pop
mov
sbb
popa
test
out
mov
mov
cmc
mov
jecxz
xor
pop
or
es
push
adc
xor
sub
cmp
adc
jecxz
push
mov
outsl
lea
insb
out
or
sbb
into
mov
mov
add
pop
les
lret
mov
mov
jecxz
jecxz
adc
jno
mov
leave
dec
xchg
lods
clc
pop
inc
imul
fdivrl
addr16
mov
mov
test
hlt
fadd
pop
pusha
inc
or
jmp
je
and
jmp
icebp
push
xor
sti
jmp
mov
dec
push
add
icebp
sbb
and
imul
inc
xchg
das
enter
mov
lds
cmp
pop
push
xor
push
shlb
cmp
pop
push
sbb
and
jp
inc
fs
rcl
push
das
inc
mov
rorb
aad
cmp
push
jbe
mov
repz
and
cmpsb
in
rolb
mov
mov
jns
xchg
inc
sub
mov
popf
fsubrl
mov
mov
fiadds
fldt
pop
loop
cmpsb
inc
cmp
dec
mov
push
andb
sbb
ret
and
pop
fwait
fs
popf
or
out
mov
movsb
bound
mov
into
or
int3
sub
aas
or
cwtl
push
int3
xor
jnp
ljmp
cs
push
sub
popf
loop
mov
cmpsl
addr16
js
inc
sub
pushf
int
test
std
lcall
cltd
adc
cmp
xchg
cmpl
add
shrl
outsl
dec
xor
test
mov
push
repnz
sub
mov
xchg
and
pusha
add
dec
pop
arpl
ror
loopne
test
orl
xor
sub
pop
daa
repz
xchg
pmulhw
xor
sbb
xchg
lret
bound
adc
test
in
out
test
shlb
fdivrs
fistpl
mov
scas
inc
pushf
pop
cmc
inc
adc
adc
sbb
sarb
loope
jmp
test
outsb
out
imul
cmp
sarb
jmp
push
lods
jmp
cltd
or
scas
es
imul
movsb
jne
push
out
sahf
in
fwait
cli
pusha
in
aaa
outsl
popf
fidivrs
add
lahf
xor
add
xchg
or
pop
add
or
sub
imul
add
test
dec
xchg
pop
mov
hlt
loop,pn
xor
lods
pop
mov
movsl
daa
push
xchg
mov
cld
cs
dec
and
aas
xchg
sub
fildl
loop
xchg
arpl
or
jnp
cmp
cmp
mov
adc
jecxz
mov
popf
or
xor
gs
es
lret
cmp
aas
jge
lret
pop
lds
das
lret
ret
mov
or
into
lret
insl
sub
push
scas
fisubl
out
push
int
sub
shrb
movsl
pop
pop
cmp
dec
bound
sbb
fbld
pop
xor
mov
cltd
adc
shll
add
ds
add
repnz
aam
sahf
sbb
clc
xchg
fs
imul
jle
aas
and
pop
xor
xchg
mov
cmp
std
adc
imull
inc
xchg
mov
sub
push
cmp
dec
mov
push
mov
mov
clc
std
mov
dec
mov
call
movsl
pop
jecxz
mov
icebp
push
outsb
imul
adc
insb
adc
orb
lds
lcall
repz
and
insb
fsts
and
jecxz
pop
aad
fdiv
aad
int
iret
loop
pop
push
cmp
mov
cmp
popf
das
adc
sbb
and
dec
dec
xor
push
stos
and
ret
add
push
and
arpl
cmp
lock
dec
out
pop
arpl
xor
jnp
jae
pop
call
lea
cmp
xchg
adc
adc
inc
add
inc
stc
fildll
jecxz
imul
scas
imul
incl
inc
add
push
fptan
push
loopne
outsb
repz
lods
xchg
fcom
cmpsb
cmp
in
ss
cmp
xchg
and
jne
call
scas
push
sbb
xchg
push
xor
xor
fsubrl
daa
int
sti
mov
iret
dec
test
push
mov
ret
into
xchg
dec
cmp
jle
out
mov
jle
notb
mov
xor
mov
insb
xor
repnz
pop
arpl
adc
xor
pop
inc
fidivrs
nop
imul
insb
mov
add
or
scas
jo
mov
fisttpl
mov
sub
cmp
loope
mov
icebp
dec
jb
imul
inc
shlb
out
jmp
pop
adcl
push
scas
xchg
lea
sti
and
in
div
xchg
inc
cld
mov
cmp
les
sbb
jle
sbb
enter
adc
inc
fmulp
cltd
lods
imul
shll
ret
pop
and
imul
in
xchg
jno
dec
es
lea
jbe
in
inc
mov
adc
adc
repz
fiadds
mov
rcrl
adc
je
push
jnp
mov
pop
fwait
ret
nop
inc
lea
fiaddl
jmp
ja
inc
lcall
push
xor
clc
outsl
push
mov
jno
pop
sbb
mov
mov
and
je
push
in
add
dec
sti
aas
sub
aad
jp
dec
or
and
jbe
pop
push
push
sbb
into
and
pop
fsubs
dec
mov
cmpsb
clc
adc
lock
popa
mov
pop
test
push
jae
lcall
cmpsb
andb
clc
or
cld
clc
call
xchg
daa
jp
sub
cli
xchg
sub
dec
mov
add
cwtl
aaa
rol
stc
mov
and
cmpsl
sbb
pop
int3
pop
test
fstpt
adc
int3
lahf
add
adc
mov
repz
push
jp
sbb
loope
or
into
add
mov
and
mov
mov
adc
cli
mov
xchg
add
leave
lcall
pop
jns
and
inc
adc
push
insb
push
pop
jge
ds
sbb
mov
push
xlat
lcall
cmp
sahf
lea
xor
test
lcall
decb
and
mov
enter
les
out
in
in
cmp
xchg
pop
add
or
dec
mov
fildl
xor
sahf
rorl
icebp
mov
add
cmp
stos
add
out
mov
cmc
pop
jmp
lahf
in
mov
out
jle
mov
pop
push
js
loope
sbb
sub
ljmp
sbb
and
ror
mov
fisubl
xchg
jne
inc
loopne
out
mov
scas
sti
jecxz
jg
mov
int3
xchg
int3
fmul
mov
push
adcl
inc
std
mov
adc
sub
jecxz
test
mov
inc
mov
insl
jo
or
test
jb
gs
shr
pop
jp
aam
mov
push
int3
shlb
lds
movsb
cmp
incb
adc
jmp
in
push
cmp
inc
lcall
xchg
sub
outsb
out
in
mov
int
aaa
sub
data16
xchg
lock
iret
sub
lds
xorl
add
into
iret
les
dec
mov
inc
in
andb
cmp
mov
repz
jno
enter
mov
pop
mov
sub
mov
push
push
call
push
jmp
rcrl
js
aas
sub
ds
fisubs
loopne
adc
pop
dec
push
mov
push
cmp
xor
pop
dec
cld
cmp
add
add
push
roll
rorb
insl
jo
int3
imull
imul
add
fstps
ret
xor
neg
sub
lds
out
loopne
inc
lods
xchg
xchg
iret
push
scas
aaa
mov
jecxz
sub
and
or
mov
jg
xchg
mov
pminsw
dec
jae
mov
sbb
fldl
push
push
and
daa
jecxz
sbb
jae
cmp
shlb
mov
rolb
push
cmpsl
insb
in
xchg
adc
mul
imul
subb
sar
out
xor
out
push
sub
test
xor
mov
inc
mov
mov
in
int
push
sub
stos
sbb
or
cmp
adc
insb
rorb
jbe
or
inc
inc
je
lahf
sbb
mov
jmp
xchg
push
push
sub
gs
mov
push
cltd
push
call
jecxz
jo
dec
push
mov
pusha
shll
pop
pop
shl
sti
inc
test
jge
xchg
adc
divl
lods
sbb
mov
std
push
aaa
test
jge
xchg
adc
loope
sbb
lds
xor
fstpl
sbb
push
or
pop
fstpl
in
ret
insl
ret
mov
jmp
xor
pop
ret
je
jb
push
fstpt
push
xlat
daa
pop
ret
movsl
in
jecxz
and
cmp
addr16
dec
sbb
out
movsb
ret
or
pop
xchg
lcall
pop
or
insl
inc
jecxz
xchg
in
mov
add
push
pop
and
push
sub
push
fcoml
loopne
test
pusha
sbb
mov
sub
sub
or
fcmovb
test
mov
add
cltd
iret
movsl
add
pop
pop
rorl
and
stos
push
in
add
jbe
std
pop
xchg
inc
das
sbbb
push
int3
je
mov
loope
adc
add
cld
jns
divb
push
dec
add
dec
lret
scas
int3
mov
aam
ss
test
pop
or
jns
jnp
dec
stos
dec
daa
sbb
sub
xor
ret
dec
adc
scas
mov
rcr
push
jb
mov
cs
call
sti
out
jno
push
xchg
push
pop
adc
ret
xchg
push
inc
mov
hlt
out
xor
mov
jno
dec
mov
in
in
out
mov
jmp
mov
clc
mov
aad
daa
movsb
sbb
mov
popf
and
fisubrl
jl
sub
sbb
mov
cltd
mov
sbb
mov
movsl
inc
out
inc
shlb
and
sbb
testl
addr16
je
adc
mov
pop
xor
aaa
cmc
jae
ret
data16
decb
push
push
int
add
mov
fstpl
je
adc
jmp
add
out
add
add
adcb
lds
cwtl
xor
loopne
cwtl
movsb
das
push
repnz
cwtl
xor
fs
cli
jne
xchg
sbb
aaa
gs
into
cmpsl
dec
fisubrl
adc
mov
lock
and
mov
cld
xlat
outsb
add
dec
adc
les
adc
mov
stos
cli
scas
ss
out
dec
pop
cltd
lods
dec
in
dec
jo
push
movsb
sub
cmp
push
add
xchg
pop
sbb
cmpsb
mov
mov
dec
imul
adc
xor
fs
sarl
sbb
jo
cmp
cmpb
xchg
pop
sahf
jmp
sub
fwait
push
out
lods
stos
into
xor
out
push
out
iret
push
pop
lret
gs
cli
or
cmp
fwait
add
sbbb
nop
xchg
std
cmp
pop
adc
pop
movsb
mov
fmull
pop
popf
test
hlt
int3
in
xchg
clc
stos
push
pop
ja
maskmovq
testl
pop
and
or
xor
lret
mov
inc
divb
popa
jecxz
inc
pop
jp
mov
aaa
sbb
je
das
mov
xchg
mov
adc
fisttps
adcb
sbb
jb
and
sbb
cmp
cwtl
in
and
push
rcrl
push
lcall
push
out
orb
pop
push
sub
rorl
ss
lret
bound
add
lds
and
jo
cmpsb
dec
xor
clc
in
xorl
outsl
out
push
lahf
lea
mov
jbe
stc
dec
and
jecxz
pop
outsl
test
xchg
aam
psubusw
mov
mov
mov
ror
cld
in
jnp
ror
popa
pop
inc
push
pop
inc
pop
sbb
popa
popa
xchg
icebp
sub
cli
cld
mov
test
les
pextrw
lock
jl
sub
mov
xchg
push
int3
adc
mov
push
in
outsl
xor
mov
mov
in
mov
clc
out
pop
add
cmp
mov
mov
ds
cltd
mov
fmul
hlt
jb
and
xchg
fwait
or
xor
jl
js,pt
aaa
dec
cld
shll
bound
xor
push
cmp
cmpsb
xchg
xchg
pop
push
sub
rorb
mov
insl
rcr
daa
pop
mov
pop
lods
mov
sti
out
xorl
out
mov
sub
adc
cmpsb
aas
aam
push
dec
in
sbb
xor
xchg
scas
add
orl
pop
inc
fisubl
mov
xchg
dec
aas
push
push
xchg
rcl
add
outsb
lock
repz
mov
mov
ss
sub
sarl
lahf
and
jae
aad
or
inc
out
dec
cltd
adc
outsl
and
das
pop
mov
pop
inc
aad
xchg
jg
xor
add
fimuls
pop
cltd
jbe
int3
fisubl
decb
ret
dec
pushl
sub
fdiv
cmp
lret
fdivs
xor
mov
mov
in
rcr
inc
scas
std
shlb
lcall
out
xchg
dec
push
and
and
push
or
mov
jo
insl
pusha
jg
mov
pop
inc
pop
adc
ljmp
push
out
lds
mov
push
fcmovbe
fisubs
pop
leave
add
rcr
movsl
cwtl
push
inc
mov
das
mov
sub
push
xchg
fcomp
add
cmpl
sbb
push
aas
fadds
and
mov
pop
gs
pop
jae
sub
les
ret
cmp
xor
push
push
in
push
mov
popf
sahf
mov
fs
xlat
push
mov
ror
imul
cmc
test
jle
jno
sbb
mov
pop
push
aad
or
insb
jbe
pop
pop
dec
int
dec
andb
mov
mov
or
btc
inc
pop
icebp
lods
pop
sti
lret
mov
inc
push
pop
dec
push
mov
mov
or
cli
sbb
sub
jne
mov
sub
dec
xor
xor
mov
test
sbb
jo
push
cmp
mov
add
outsl
pop
repnz
bound
insb
pop
xor
mov
test
mov
mov
adcb
sbb
arpl
pop
ljmp
dec
es
xchg
addr16
jle
mov
mov
das
lahf
aaa
das
cs
cmp
cmp
add
mov
sub
pop
cs
dec
mov
jb
ret
push
jge
dec
jmp
inc
jle
sbb
loope
and
cs
rorb
push
mov
fdivrs
xor
repz
imul
add
clc
pop
mov
mov
mov
or
jnp
stos
xchg
mov
movsb
int3
out
xor
mov
and
adc
adc
je
push
sarl
leave
push
test
hlt
ret
mov
dec
add
mov
xchg
push
cmp
stc
call
dec
imul
ret
cmp
fxch
faddp
push
cmp
push
adc
xchg
subl
jge
push
push
cmp
movsl
gs
inc
mov
mov
scas
inc
mov
pop
in
dec
adcl
mov
arpl
adc
xchg
jecxz
popf
insl
pop
clc
pop
inc
dec
adc
daa
adc
mov
sbb
shl
repz
lock
cmp
and
fs
leave
gs
mov
xor
dec
loope
xchg
fwait
std
out
or
in
lcall
jb
out
lret
sti
shrb
xchg
enter
pop
stos
mov
fnstenv
lret
xor
out
int
jecxz
and
mov
sahf
add
fs
std
je,pt
test
iret
fstpl
stos
lahf
or
add
in
test
call
mov
dec
sub
test
jb
ljmp
addr16
or
enter
in
lds
gs
imulb
std
mov
insl
outsb
hlt
popf
xor
pop
xchg
clc
jle
dec
xor
or
mov
mov
cld
sahf
or
mov
jnp
mov
aam
cmp
shrb
fs
orb
jmp
mov
adc
push
addb
jl
leave
add
insl
imul
clc
xchg
xor
movsl
ret
shlb
pop
lret
and
dec
mov
not
cs
sti
mov
or
adc
loope
lahf
test
pop
adc
pusha
pop
in
nop
aas
cmpsl
test
cld
je
ret
addl
xchg
adc
mov
mov
pop
mov
aaa
mov
jge
fildll
dec
cld
pop
jns
addr16
mov
fdivrl
mov
sub
ds
xchg
loop
ljmp
inc
pop
push
mov
inc
ss
jp
adc
cmp
xchg
int
xchg
ss
mov
lock
repz
lock
add
into
mov
mov
sbb
test
or
mov
cmp
fistps
add
jge
clc
xor
aaa
stos
xchg
mov
sbbl
cmp
mov
jne
cmp
js
lcall
or
mov
mov
jnp
shrl
ret
cmp
imul
sahf
enter
clc
mov
cli
push
lock
push
fsubs
testl
enter
pslld
cmpsb
jae
push
es
test
bswap
or
cmp
dec
push
cmpsb
mov
aam
or
cmp
pop
aaa
add
xchg
push
add
mov
flds
mov
movzwl
mov
cmp
push
int
test
clc
dec
push
rcll
pop
out
aam
out
sti
outsl
loop
insl
or
push
push
push
cmp
mov
mov
mov
out
dec
pcmpeqb
and
and
insl
cltd
xlat
sarb
or
adc
shlb
adc
adc
dec
and
rorl
or
push
lahf
mov
jl
loopne
mov
in
pop
leave
push
sahf
push
mov
imul
cmp
bound
ss
mov
test
push
movsb
push
arpl
mov
mov
sub
dec
lock
sarl
and
ror
stos
cld
jecxz
jb
in
jmp
xchg
dec
leave
xchg
fcmovnb
pop
lret
js
fstps
int3
insl
mov
pop
jns
sbb
xchg
clc
sub
leave
fisubl
repnz
daa
hlt
cmp
mov
test
js
jo
rcrb
push
or
loop
cmp
add
push
fcomps
add
or
push
and
xchg
imul
and
push
or
cmp
insb
mov
cmp
lret
fadds
push
lret
jbe
jo
push
icebp
in
fidivs
cltd
mov
push
stc
sbb
xchg
and
lcall
sar
sub
ja
stos
mov
pushw
fdivs
sub
ret
flds
movsb
rorl
ja
xchg
dec
sub
push
data16
mov
mov
cmp
aas
outsl
pop
lea
lds
sbb
imul
sub
lret
jae
aas
outsl
adcb
push
push
pop
aad
mov
enter
cli
insb
fisubl
iret
xchg
and
ds
cltd
push
fistl
mov
push
ucomiss
rcll
lods
out
cmpsl
sbb
and
fcompl
fwait
test
mov
xor
sub
inc
dec
add
pop
inc
sbb
xor
mov
xchg
pop
and
test
add
add
adc
sbb
lea
addb
sbb
jp
enter
fcoms
mov
int
jae
inc
leave
test
enter
repz
orl
stos
and
sbb
pushf
push
mov
pop
mov
imul
push
cmc
imull
jl
mov
mov
in
scas
test
jbe
add
dec
les
pop
int3
pushf
inc
cmp
mov
jb
ret
mov
inc
mov
push
jl
push
cmp
lea
scas
pop
popa
jmp
mov
sti
xchg
pop
mov
outsl
dec
cmp
test
aas
push
bswap
mov
mov
fsubrp
mov
and
shrb
es
outsl
faddp
inc
sub
push
movsl
push
mov
addr16
xor
fwait
jne
adc
mov
ljmp
stos
mov
outsl
pop
ret
imul
or
scas
and
popf
sub
or
sub
testb
movsl
test
add
xor
gs
and
into
gs
and
mov
push
fnsave
bound
ja
or
push
sbb
pop
pop
loopne
in
stos
jb
arpl
mov
inc
xor
sbb
cmpsl
and
addl
adc
pop
xchg
inc
test
add
push
jbe
rcrl
dec
mov
xchg
fsubl
mov
imul
cmpsb
push
dec
das
adc
data16
inc
adc
inc
fcoms
cltd
or
pop
imull
rcll
and
push
jo
out
pop
fistps
addr16
mov
adc
mull
cwtl
test
inc
xchg
fadd
push
inc
insb
shll
outsb
sub
adc
shl
push
xor
lds
flds
sarb
stos
cmp
sbb
test
jne
adc
pop
test
cmp
fcmove
popa
add
inc
inc
mov
and
mov
push
inc
test
daa
xorb
movsb
inc
into
lret
mov
pop
push
pop
ljmp
stos
add
mov
push
sub
mov
jmp
sub
sbb
and
push
sbb
inc
ds
negb
lea
xchg
sar
test
in
add
stc
push
and
push
lods
and
fs
aaa
xor
cmp
mov
inc
mov
imul
cmpl
scas
push
add
jne
jnp
pop
jnp
push
mov
pop
fs
or
add
imul
xchg
pop
adc
sti
xor
aaa
mov
or
fs
fidivrl
mov
je
pop
bound
jnp
mov
jecxz
subl
xchg
xchg
cmp
xlat
shll
sub
popf
insl
add
add
mov
movsb
mov
mov
push
and
sub
insl
add
outsb
nop
add
clc
inc
enter
mov
jge
add
cmp
or
lds
and
pop
je
sbb
mov
out
mov
loop
add
int
xorl
pop
aaa
movsl
sbbb
mov
out
push
popf
xlat
leave
mov
xor
out
xor
jo
rcrl
stos
mov
inc
rorb
nop
fistpl
and
sar
adc
sbb
mov
ret
out
jnp
mov
xor
cmp
xor
lcall
sti
movsl
rcrb
mov
les
cmp
and
sub
stc
mov
cmp
cwtl
stos
cmp
dec
inc
add
mov
into
ret
shl
lahf
lds
sub
popl
xchg
dec
arpl
scas
into
jecxz
das
xchg
lds
jp
or
cmp
add
or
out
dec
dec
arpl
pminsw
test
dec
hlt
or
lahf
mov
sub
stc
iret
pop
cltd
mov
loope
in
fsts
xchg
ficompl
pop
int
push
std
and
inc
rclb
js
sub
xor
jecxz
mov
jp
jecxz
into
jecxz
jbe
aas
sub
sbb
hlt
js
dec
sbb
add
lods
push
jg
dec
sbb
in
pop
adc
jl
jl
sbb
xor
stos
and
mov
mov
xorb
lds
xchg
push
call
jmp
or
scas
dec
jecxz
cmpl
int
aaa
dec
sub
cmp
push
lahf
aaa
jmp
mov
and
ljmp
cmp
add
and
xlat
into
popf
adc
hlt
pushf
mov
jbe
in
add
fists
cs
loope
in
push
push
sbb
sub
pop
or
insb
inc
cs
call
lret
cmp
sahf
mov
push
push
int
jle
in
fldenv
mov
push
fbstp
sub
nop
xchg
das
sbb
inc
das
es
dec
adc
and
push
enter
ljmp
aad
push
push
outsl
jp
sahf
mov
dec
ficoml
inc
push
lods
lcall
fs
stos
imull
dec
loope
bound
mov
shrb
ss
mov
push
sub
dec
or
pop
mov
sbb
jns
jbe
mov
xchg
lcall
ds
out
outsl
jbe
pop
adc
and
mov
mov
jae
push
xor
push
dec
pop
movsl
sbb
out
enter
sbb
add
mov
inc
out
mov
out
mov
or
xor
and
mov
cmp
xlat
xchg
jns
jo
mov
push
xor
pop
stc
scas
inc
jo
push
add
sbb
push
adc
and
inc
pop
popa
or
mov
mov
repz
sbb
pop
stos
push
in
xor
jge
sahf
sub
dec
cmpsl
mov
lahf
mov
and
lock
cmp
mov
add
scas
pop
xchg
out
dec
inc
in
xchg
fdivrp
rolb
int
repnz
insb
xchg
and
jmp
cltd
sahf
pop
mov
xchg
das
and
sbb
pop
loope
push
mov
mov
add
cli
call
faddl
fsubrl
movsl
xor
mov
icebp
jmp
popa
out
add
or
xchg
fistps
mov
das
sub
xchg
scas
outsb
dec
or
and
jo
les
xchg
mov
inc
cmp
xchg
push
pop
fbstp
js
int
add
scas
sbb
inc
call
xchg
cltd
iret
sbb
dec
hlt
cmpsb
mov
es
sub
or
mov
cmp
fbld
jl
into
ficoml
xor
jnp
xchg
cltd
pop
fnsave
shrl
sub
xor
push
insb
pop
mov
sbb
es
mov
mov
leave
adc
mov
add
shr
test
or
xchg
and
jl
mov
in
inc
aas
jae
repz
push
dec
mov
adc
or
mov
lods
ljmp
movntps
into
in
push
and
push
jb
sub
sub
gs
repz
sbb
stos
mov
push
xchg
add
insb
push
es
push
ds
shrb
fistps
inc
out
and
stc
jg
pop
test
xchg
mov
xor
or
inc
sar
js
daa
or
push
mov
daa
dec
xor
xorl
out
or
lahf
xor
jbe
insb
iret
jp
aaa
sti
xor
fwait
cmp
pop
mov
sub
sub
fisttpll
or
iret
adcb
pop
mov
addr16
jmp
ret
sub
mov
push
scas
iret
cmc
push
add
add
leave
mov
mov
addl
lcall
stc
jge
jnp
and
sub
mov
out
adc
pop
addr16
das
ss
or
test
mov
mov
fcompl
mov
adc
and
mov
in
jmp
xor
imul
pop
sub
mov
jecxz
nop
shlb
lods
pop
sbb
push
imul
adc
pop
sub
js
ljmp
pop
pop
icebp
xchg
movd
adc
dec
gs
cmp
in
mov
xor
add
or
orl
mov
mov
inc
scas
xchg
add
pop
xlat
cmp
repz
fdivl
and
sahf
js
pushf
daa
pop
in
popf
or
or
cmc
xchg
into
lods
xor
mov
inc
mov
or
cmpsb
cmp
mov
mov
xchg
inc
xchg
popa
and
mov
aas
iret
lods
add
dec
adc
jns
ja
pop
movsl
mov
rcll
or
into
jb
push
mov
add
mov
fistpll
mov
pop
jl
push
insb
into
sbb
sarl
sbb
andb
push
mov
arpl
push
bound
adc
push
rcrb
scas
ljmp
jb
and
test
mov
lds
lea
into
clc
push
rolb
dec
and
movsb
push
pushf
inc
imul
jmp
adc
pop
or
aad
cmp
xor
sbb
mov
fwait
insl
fbld
sbb
imul
push
cmc
xchg
dec
jo
shll
scas
in
and
int
in
pushf
pop
sbb
decl
jmp
fcomp
out
sahf
leave
sub
es
fisubrs
xor
add
jne
mov
std
shll
mov
cmp
mov
std
sub
add
adc
out
testb
shlb
bound
jp
fdiv
xorl
and
dec
incb
je
stos
scas
loopne
dec
int
fdivs
add
out
ljmp
jnp
inc
or
int3
and
cmp
popf
xchg
movsbl
fidivrs
inc
sbb
sub
dec
push
test
push
cmp
jne
adc
out
es
cmp
outsb
cli
push
out
addr16
inc
jg
cmp
adc
in
stos
jg
inc
lret
xor
jle
fstpt
ss
xlat
fstps
and
mov
jnp
jmp
call
add
pushl
popa
xorl
pop
pop
outsl
push
sbb
push
mov
mov
pushf
ret
imul
int
popa
mov
pop
jecxz
cld
js
into
das
ljmp
or
punpcklbw
jl
pop
sbb
sbb
xchg
movsbl
enter
xlat
jle
xor
mov
test
scas
cmp
xchg
arpl
mov
cmpsb
sbb
xchg
add
pop
adc
mov
bound
data16
pop
or
repz
jbe
test
pop
pop
pop
out
enter
inc
pop
mov
js
lock
rol
sbb
sub
cmpsb
cmp
je
cmp
mov
shlb
jl
xchg
and
mov
and
xor
inc
or
ret
icebp
into
dec
and
adc
in
les
fstp
inc
and
ret
xchg
adc
lret
mov
push
ljmp
dec
xlat
into
inc
es
xchg
add
mov
fcmovnu
loop
push
pop
les
and
int3
jle
xor
outsb
ja
xchg
pop
out
cmpsl
jne
outsb
push
andl
mov
pop
dec
xchg
add
fimuls
mov
gs
pcmpeqd
add
sbb
push
ds
jo
xor
mull
repz
movsl
das
push
sub
push
push
ljmp
and
xchg
pop
leave
cmp
adc
ret
idivb
sub
inc
mov
cmp
mov
lods
and
sti
fistps
xor
mov
lcall
inc
ret
out
mov
pop
jle
adc
push
dec
mov
dec
test
pop
cmpb
xor
jno
repnz
pop
jg
or
repnz
iret
sbb
adcl
out
pop
loope
dec
lods
and
cmc
dec
and
pushl
xchg
sub
dec
push
and
jl
daa
dec
push
mov
jb
or
add
insl
lret
daa
call
mov
dec
pushf
xor
lock
out
scas
mov
movsb
xor
scas
call
mov
pop
scas
pop
xor
xor
fmull
aas
out
inc
ljmp
mov
pop
cmp
sarb
xchg
subl
mov
aad
es
mov
insb
mov
lds
or
xlat
shrl
out
xor
lret
call
mov
mov
lods
inc
xor
mov
aas
adc
test
out
adc
rcll
cmpl
imul
sbb
cld
movsb
xor
dec
aam
inc
ret
les
xchg
sbb
andl
add
fsub
ret
push
adc
movsb
push
fwait
pop
fcomps
push
lret
push
xchg
jbe
pop
add
mov
and
dec
outsl
repnz
lret
mov
jo
sahf
ret
scas
inc
push
cmp
xlat
push
lea
sub
popl
xor
pop
ficoms
imul
stc
mov
cmp
das
add
mov
repnz
call
stos
push
in
add
sub
insl
push
jbe
data16
mov
fimuls
test
dec
mov
sub
das
cwtl
insb
jmp
rcrb
stc
xchg
insb
inc
dec
lcall
or
cmp
sbb
sub
cmp
call
xor
or
sti
jp
or
fstpt
divb
inc
das
xor
add
int
std
pop
adc
fnstsw
gs
imul
cli
lock
push
inc
jno
pop
jnp
stc
jge
pop
pop
ljmp
add
in
mov
xchg
inc
arpl
aad
cmp
lret
jne
fnstenv
dec
or
or
int
mov
bound
ret
xor
enter
fldl
and
scas
sbb
cmpsb
jns
cli
rorl
jne
outsb
mov
into
mov
xchg
fisttpl
daa
ds
dec
ret
or
pop
into
add
mov
dec
fcoml
popf
adc
mov
gs
pop
jnp
cltd
pop
xchg
notl
ja
dec
and
mov
arpl
cltd
add
pop
out
daa
xor
arpl
mov
in
pusha
fwait
sahf
jbe
scas
jnp
inc
xchg
mov
lds
jmp
je
andl
push
add
aaa
out
loop
imul
or
in
mov
xor
sbb
inc
movsb
sbb
mov
stos
dec
mov
jg
push
mov
inc
mov
popa
cmp
mov
jl
je
test
cmpsb
push
test
nop
cmp
aas
pop
iret
cmpsb
out
loope
adc
and
cmp
mov
cmp
int
scas
ret
cwtl
sub
jne
out
xchg
adc
inc
adcl
push
adc
std
pop
xlat
sbb
mov
pop
fnstenv
out
adc
lods
or
xchg
in
fnstcw
insl
enter
jnp
out
inc
iret
rorl
rclb
jle
push
sarb
pop
add
in
aam
mov
cld
fists
stos
push
push
iret
fistps
dec
gs
cmpsb
xchg
inc
xor
lahf
push
and
pop
sbb
jb
mov
aad
inc
mov
push
dec
and
adc
mov
sarl
pushf
into
test
inc
adc
repz
loopne
js
scas
adc
push
xor
ret
mov
add
icebp
or
jecxz
loopne
cmp
dec
lahf
and
add
sbb
in
and
sti
or
mov
lcall
adc
sahf
add
fisubs
sub
lret
or
jg
jns
pop
pop
cwtl
clc
inc
jo
mov
add
shr
scas
jmp
xchg
cmpsb
jbe
daa
test
mov
dec
xchg
push
mov
repz
push
mov
icebp
dec
mov
sub
push
lcall
mov
fstpl
xchg
pop
cmp
gs
mov
scas
int
cmp
loope
mov
mov
mov
mov
cmp
aad
test
les
pop
fildl
insl
je
aaa
inc
cltd
daa
leave
lods
mov
andb
cli
fsubrl
push
mov
push
out
xor
out
shlb
xchg
pop
dec
sub
pop
fs
incl
jl
movsl
sbb
aas
push
outsl
fwait
jge
inc
fldcw
bound
dec
ficompl
pusha
in
adc
js
fcmovne
mov
es
mov
orl
aad
adc
mov
cmp
and
loop
cmp
mov
xor
cmp
das
cmovg
jne
mov
cmp
pop
push
fstpl
cmpsb
movb
clc
aas
xchg
mov
and
sub
mov
xchg
movsl
pop
and
in
imulb
ret
mov
rep
jp
cli
mov
jb
in
pop
mov
jge
hlt
stc
mov
xor
mov
lea
bound
cmp
mov
mov
xchg
rcr
ret
and
shl
ja
inc
jns
xor
imul
arpl
xchg
cmp
cmp
subb
adc
popf
mov
subl
push
rcll
mov
adc
sahf
mov
leave
ljmp
or
aaa
inc
xor
test
out
cmovb
mov
arpl
sbb
movsl
int
in
scas
insl
pop
or
lcall
fwait
data16
jecxz
rorb
mov
scas
ja
dec
mov
jl
push
push
lea
xor
bound
loopne
insb
sbb
lods
icebp
test
clc
and
inc
test
fwait
repnz
sbb
shrb
pusha
aam
icebp
outsl
fisttps
push
xor
dec
mov
add
sarb
push
addr16
mov
mov
mov
mov
loopne
add
xor
cmp
sahf
out
inc
dec
lret
lcall
sub
imul
mov
repz
lea
ljmp
test
add
movsl
test
cmp
inc
es
lcall
in
cmpsb
mov
sub
nop
jecxz
xlat
popa
xchg
pop
mov
mov
adc
push
push
lea
jnp
sbb
repnz
add
add
fiaddl
sub
lods
xor
sahf
outsb
loopne,pn
jae
mov
stc
push
xor
fadds
aaa
imul
cltd
adc
loope
inc
mov
xchg
mov
das
rorl
mov
rclb
jnp
push
sti
icebp
mov
cwtl
nop
push
xchg
xchg
enter
sub
mov
mov
cmp
mov
rclb
movsl
outsb
in
lahf
xchg
or
pusha
xchg
xlat
lods
add
adc
mov
pop
xchg
das
iret
mov
int3
clc
add
inc
jg
jmp
shrl
xchg
movl
mov
ja
call
jb
je
cmpsb
pop
aam
lret
ss
mov
fwait
cld
inc
scas
mov
into
jp
lcall
jp
outsl
dec
xlat
jo
sub
sbb
pop
inc
int3
xchg
pop
out
xlat
pop
lds
scas
jns
hlt
push
and
das
xor
inc
xor
pop
jae
std
ja
inc
pop
out
jo
add
pushf
jne
cmpsb
nop
scas
mov
mov
jne
xor
shlb
or
and
imul
rcrl
bnd
push
jecxz
jae
xchg
mov
lret
mov
xor
or
scas
push
add
add
cmp
pop
popf
adc
jp
cmp
insl
adc
das
fscale
pop
sbb
xor
mov
pop
xchg
cmp
cmc
and
sahf
xchg
jbe
and
outsl
icebp
jp
aas
cmp
jae
inc
imul
pushf
cmp
inc
pop
push
dec
in
mov
out
and
test
mov
push
mov
dec
sbb
outsl
pop
test
or
es
jbe
dec
cmp
sub
xchg
add
jb
jle
out
xchg
insl
or
pusha
pop
imul
sbb
cs
mov
scas
cltd
std
test
int
lahf
pushf
outsb
cmpsl
cld
imul
push
xchg
rclb
mov
cwtl
stos
and
xor
sub
mov
xor
leave
outsl
iret
cmp
pop
pop
sub
or
xor
fdivrl
jge
insb
arpl
push
movsb
jns
das
mov
add
dec
in
mov
loop
xchg
call
sbb
inc
mov
pop
dec
pop
pop
add
add
adc
pop
sub
xchg
insl
into
pop
adc
daa
loopne
xchg
adc
fucomi
add
mov
jg
dec
movsl
sbb
paddq
jle
movsb
push
cmp
or
andb
clc
fcoms
roll
insl
aas
loopne
xor
inc
xor
pop
dec
xor
cltd
dec
pop
iret
or
xchg
cld
mov
repnz
inc
and
fcompl
je
in
cmp
sub
or
jnp
mov
lods
ja
loope
enter
rcrb
jbe
lcall
fbstp
sti
les
cmovns
movsl
cld
loop
cmc
nop
sbb
nop
in
ror
or
loope
stos
notl
sbb
sahf
jp
push
push
and
popf
mov
fdivl
add
jecxz
movsb
adc
sub
xchg
xchg
iret
sub
test
xchg
aas
sub
insb
xchg
add
adcb
movsb
loopne
mov
push
cmp
inc
or
push
and
or
addr16
stos
addr16
lcall
jmp
sbb
adc
dec
pop
fmuls
rcll
pop
push
pusha
jns
es
in
mov
push
add
xchg
clc
jg
pop
jge
cs
psubsb
jb
pop
fsub
cwtl
dec
out
shl
sahf
fidivrs
adc
xchg
ds
inc
arpl
sub
fcoms
xlat
or
js
ret
and
inc
fstpt
cwtl
jno
push
push
jge
cmp
shll
repnz
and
roll
mov
movsb
jb
dec
sub
test
push
fcmovb
cli
dec
cltd
cltd
or
popa
and
push
in
xchg
or
push
push
imul
xor
dec
ja
cmpsl
inc
cmpsl
jecxz
cmp
mov
orb
out
lret
mov
in
jle
loope
repnz
mov
subb
mov
or
out
inc
xchg
sbb
mov
inc
lods
test
test
loop
test
stos
inc
jmp
loopne
cmp
push
imul
je
or
ds
pop
xchg
shl
pop
out
dec
andl
sbb
cmp
mov
xor
es
sub
inc
sti
lds
or
fcmovu
cmc
push
and
jae
vmwrite
cmp
stc
mov
shrb
faddl
and
jmp
add
pop
insb
mov
or
inc
fnstenv
cs
mov
shll
push
pop
jge
lds
adc
xchg
mov
fists
int3
inc
jmp
cmpb
jb
jnp
out
push
lea
rolb
xor
push
mov
stos
xchg
ret
dec
shrb
inc
jae
xor
xchg
xchg
iret
push
stc
outsl
imulb
enter
sub
orb
hlt
xor
mov
jae
mov
fbstp
lods
and
mov
lds
ljmp
mov
cmp
rclb
xchg
test
stc
inc
in
sbb
subb
sbb
pop
cld
ret
rolb
mull
sub
cmc
bound
jmp
sbb
mov
mov
xor
cmpsl
mov
cmp
mov
aad
push
jbe
lds
inc
sbb
cmc
jl
rorb
stos
or
std
mov
repz
test
out
adc
insl
or
xor
push
inc
mov
add
cmp
jbe
pop
mov
loope
dec
cld
sub
xchg
cmpsl
push
adc
xchg
pop
dec
stos
clc
add
cmp
fs
mov
add
pop
mov
repnz
pusha
mov
stos
mov
cmp
xchg
jnp
sbb
movsl
and
dec
lret
sbb
adc
lahf
inc
call
sbb
push
test
test
or
pop
lock
test
adc
push
jmp
push
leave
ja
xor
fbstp
jp
das
push
adc
adc
aaa
push
imul
aam
xchg
imul
daa
mov
cli
sub
sub
xchg
outsl
jno
jl
in
dec
inc
fisttpl
test
fs
cmp
mov
addr16
and
push
movsl
sti
rcrl
dec
jns
push
xor
mov
jmp
lret
xchg
jg
iret
or
mov
ss
mov
push
or
xchg
dec
push
addb
fistpll
out
clc
xorb
jmp
cmc
inc
or
push
sbb
shr
in
mov
in
mov
popa
push
addb
sbb
test
outsb
scas
and
imul
mov
inc
sbb
inc
imul
xchg
stos
and
inc
jp
shlb
mov
adc
adc
inc
fistps
or
xchg
add
adc
ja
sub
jmp
in
out
daa
out
mov
jnp
add
pop
jo
sbb
insb
sarl
jbe
fistpl
inc
iret
inc
int3
add
push
pop
pop
fs
or
int
dec
clc
mov
rcr
call
testl
loope
mov
cmp
adc
adc
and
sahf
push
xchg
push
ja
aad
xchg
clc
jmp
movsb
cwtl
pminsw
inc
pop
ret
arpl
xchg
mov
lcall
mov
push
repz
jno
or
add
mov
push
sub
ljmp
mov
mov
dec
addr16
les
inc
fstps
int
pop
mov
mov
xor
jns
call
adc
cs
mov
sub
insl
or
sahf
jg
fs
int3
in
pushf
xchg
loopne
pop
or
push
stos
mov
xchg
fidivl
xchg
pop
and
js
jecxz
add
adc
sbb
adc
jl
outsb
sti
xor
loop
mov
femms
mov
test
jmp
push
orb
in
jmp
xchg
les
pop
mov
xchg
add
outsl
sbb
mov
sbb
fstps
int3
loopne
push
jmp
aad
scas
dec
sbb
jne
inc
test
js
mov
or
lret
jb
push
xchg
shl
sub
fcomi
inc
jne
push
push
mov
dec
cltd
imul
inc
sub
add
mov
ja
mov
cmp
outsb
jns
push
lcall
push
dec
push
sbb
std
adc
out
cmc
mov
dec
pop
lret
arpl
mov
inc
push
mov
lds
cltd
or
sbb
jo
repnz
hlt
ja
loop
into
xchg
jp
push
jl
es
das
addr16
loopne
adc
adc
sub
or
jle
cmp
lcall
mov
sub
cwtl
cmp
mov
enter
mov
fistpll
pop
int3
out
loopne
pop
lock
mov
inc
pop
and
sub
push
dec
ret
inc
dec
loopne
cmp
xchg
iret
sahf
fwait
into
sahf
das
push
adc
frstor
lods
or
xor
int3
dec
inc
popa
xchg
movsl
sbb
adc
fs
shl
jle
popa
adc
divl
sbb
adc
mov
or
cmp
dec
cmp
inc
lock
movsl
and
adc
sbb
mov
jns
sub
outsl
mov
jge
movsb
out
pop
lds
mov
cltd
jge
dec
popa
arpl
lahf
aam
fdivl
jbe
rcrb
in
mov
sbb
loop
mov
xor
adc
xchg
pop
pop
sub
add
hlt
inc
sub
mov
push
sub
push
xor
adc
sbb
jo
and
daa
sub
jle
clc
nop
lcall
popf
inc
and
xchg
andb
mull
ljmp
or
mov
jae
lahf
jmp
jb
cmp
push
push
icebp
xor
imul
dec
add
mov
cmp
cmc
sub
inc
push
push
pushf
xchg
add
add
or
push
or
stos
dec
icebp
xor
mov
les
ret
jbe
pushf
test
sarl
xor
fmull
jo
pop
lock
adc
icebp
adc
mov
pushf
or
enter
cwtl
mov
mov
sbb
idiv
jnp
pushl
xchg
sahf
lret
arpl
jb
mov
pop
in
insl
arpl
inc
out
or
push
cwtl
sub
dec
std
or
hlt
movd
pop
dec
and
test
xchg
xlat
push
xchg
xor
fcoms
fs
push
roll
and
out
xor
add
xor
outsb
mov
sbb
lahf
inc
subb
dec
push
push
jl
cmc
loope
sbb
mov
push
and
icebp
jl
mov
jl
jbe
cld
call
pop
int3
mov
decb
cwtl
xor
xor
mov
fdivs
loope
pop
popf
in
out
out
loop
lea
jle
test
pop
invd
cld
xchg
mov
sbb
mov
xor
cmp
mov
cwtl
outsb
stos
mov
adc
mov
ljmp
pop
cwtl
xorb
fcomps
ret
fdivs
pop
orl
and
push
mov
dec
xchg
pop
ret
icebp
dec
js
xchg
aaa
cmp
lret
mov
xchg
push
cs
addr16
xchg
loop
out
dec
dec
cmp
sub
xchg
cmp
out
adc
inc
data16
jmp
popa
and
mov
mov
dec
lods
fwait
sub
lock
cltd
adc
dec
jne
lcall
mov
lahf
jno
scas
push
cmp
ret
mov
bound
cmp
and
push
add
mov
dec
lock
pop
cmp
mov
or
jb
pop
lock
or
loop
lretw
cmp
cmp
dec
jg
negb
cmp
daa
inc
xchg
loope
sti
pop
xor
test
fsubrp
les
daa
jno
movsb
mov
mov
gs
push
dec
mov
pop
iret
mov
adc
movsb
rcll
in
jmp
into
stc
jmp
sub
setg
push
fistpll
add
mov
cs
nop
mov
cmp
ret
idivb
xor
cmpsl
stc
mov
mov
es
enter
or
stc
adc
xchg
xor
inc
inc
pop
mov
int3
adc
jmp
and
testb
or
arpl
push
push
mov
fimuls
jb
pop
cs
mulb
cmpsb
out
xchg
mov
mov
insl
mov
mov
dec
mov
cmp
or
loopne
pop
push
insl
imul
js
jmp
lret
jmp
clc
cmp
pushf
int3
and
add
push
mov
fldl
lock
jg
js
rclb
in
std
xchg
xchg
mov
idivb
lcall
shr
pop
shl
mov
mov
scas
aam
mov
adc
loop
inc
std
cmp
push
sbb
pop
test
sbb
leave
push
imul
lock
jp
sahf
lret
and
int3
call
fsubr
fisttpl
mov
push
out
repnz
jae
xor
and
mov
int3
add
jae
es
or
pop
mov
bound
mov
into
mov
shrb
sub
ss
sahf
cmp
repz
aas
repnz
call
push
pop
add
pop
jns
lea
ljmp
mov
xor
jmp
push
cltd
cmp
fwait
push
outsb
push
aad
sbb
insl
ds
push
scas
call
in
add
dec
mov
or
dec
inc
addb
mov
push
push
out
addb
loopne
adc
jo
bound
fstpt
in
gs
xchg
lods
mov
int
mov
repnz
into
inc
sbb
mov
push
or
out
adcb
pop
das
cmpb
movsl
push
scas
xchg
or
and
and
mov
lret
pop
test
cmpsl
mov
xor
push
or
lret
scas
add
subb
in
xchg
imul
out
cmp
addr16
push
or
xor
sbb
add
mov
inc
stos
add
inc
in
enter
add
sahf
adc
repz
test
cmp
in
push
stos
in
enter
mov
sbb
cmpsb
es
mov
negl
rorl
test
pop
sub
cmp
pushf
sub
iret
xor
adc
jmp
inc
jmp
fstps
mov
fyl2xp1
and
outsl
inc
in
jp
int
pop
sbbb
repz
cwtl
jno
fs
lods
cmp
cmp
sbb
mov
inc
push
scas
cmp
and
aad
inc
mov
pop
mov
add
call
xchg
in
dec
loope
cmp
mov
shll
mov
call
rcll
jnp
xchg
adc
or
cvtpi2ps
push
lea
test
lahf
inc
sbb
xchg
adc
ja
mov
iret
outsl
mov
fwait
sub
repnz
aad
or
jge
mov
inc
test
xor
loopne
dec
adc
in
in
lahf
out
inc
xor
fwait
xor
outsb
push
add
push
mov
adc
mov
in
test
push
push
test
inc
inc
jnp
in
sbb
ljmp
cmpsb
lock
lods
leave
jo
jne
add
pop
data16
and
sub
pop
xor
xchg
imul
js
push
out
scas
jp
mov
inc
pop
push
mov
mov
sbb
push
mov
movsb
mov
and
mov
test
mov
add
orb
xchg
movsl
sub
mov
ds
add
inc
das
es
xchg
inc
jg
mov
or
out
adcl
xchg
mov
dec
das
sahf
cwtl
cld
inc
mov
out
stos
shl
loope
mov
das
ret
push
inc
rclb
pop
sub
popa
sti
push
loope
movsb
loop
int3
out
ss
push
addl
iret
pop
dec
movb
inc
sub
inc
mov
int
inc
inc
cmp
inc
inc
sbb
pop
ret
pop
push
mov
insl
adc
push
inc
cli
outsl
mov
outsl
and
inc
das
mov
jo
add
mov
aaa
xchg
dec
pop
cmpsb
inc
ds
cmp
dec
push
sbb
mov
xchg
fsubs
sub
mov
jle
sub
sbb
jne
test
stos
jle
das
xor
cwtl
pusha
ret
inc
test
mov
je
jae
or
test
push
xor
mov
cmp
movsb
in
sub
xchg
sub
or
pop
jmp
push
clc
in
mov
gs
xchg
sbbl
stc
dec
andb
stc
adc
repz
fsubs
jle
out
lcall
repz
xor
rcrl
pop
outsb
mov
or
out
call
cmp
mov
movsb
mov
popl
push
mov
sti
lret
pop
xchg
and
and
push
clc
sti
insb
sub
and
push
lret
cmp
scas
or
outsb
cmpsl
pop
xor
push
sbb
or
jmp
adc
dec
fisubl
and
mov
jne
xor
cld
push
mov
clc
lea
cmp
push
gs
push
icebp
or
in
es
dec
mov
icebp
adc
enter
sbbb
ss
pop
sti
or
sub
sbbb
or
pop
pop
lret
pop
fildl
mov
out
test
add
int3
jo
mov
fimull
iret
mov
js
adc
mov
arpl
imul
add
mov
push
ficoml
xchg
jo
idivl
dec
imul
in
roll
sbb
rcrb
lods
jne
nop
ljmp
fs
xchg
faddp
imul
xlat
sub
das
stos
xchg
jns
sbb
xchg
ss
lods
cmp
mov
fisttps
jg
lcall
inc
movsl
jbe
mov
jmp
cmp
add
xchg
fldl
sarl
popl
mov
in
hlt
neg
fs
in
pusha
loope
popf
inc
cmpb
mov
jns
xchg
or
jns
mov
inc
mov
or
cmp
adc
arpl
push
and
add
lret
jl
fisttps
mov
jge
fisubrl
push
ret
and
and
in
lcall
xor
jg
push
jns
js
sub
xchg
or
aas
xor
in
mov
hlt
xchg
js
fstpl
mov
mov
mov
dec
add
cmp
ljmp
call
shlb
into
mov
hlt
cli
xor
test
scas
jl
inc
loop
pop
je
imul
add
jl
xorb
je
fisttpll
fstpt
popa
shlb
adc
mov
pop
adc
popl
fldenv
or
lods
fmuls
test
inc
or
dec
lret
and
leave
add
fcomps
out
xor
in
mov
cmp
mov
sbb
push
inc
mov
ljmp
divl
popf
out
jb
testb
outsl
push
ret
xor
lea
cmp
push
inc
out
mov
popa
outsb
lds
lods
cmc
jbe
pop
iret
push
mov
sbb
push
and
or
xor
cwtl
sub
lock
and
jb
cmc
adc
jo,pn
inc
pushf
icebp
jnp
repnz
icebp
ja
in
cmc
std
mov
arpl
popa
mov
pop
leave
pop
mov
adc
sub
in
arpl
sbb
xchg
cmp
in
sbb
adcb
xchg
push
mov
pop
xchg
xchg
jge
shrl
lahf
repnz
mov
hlt
addr16
repnz
imul
rclb
jg
bound
adc
jne
or
mov
scas
jge
test
jg
mov
pop
jecxz
pop
rcll
addb
ss
in
sub
mov
xchg
lds
leave
arpl
xlat
insl
shll
adc
and
addr16
or
sub
icebp
adc
xchg
dec
fsubl
add
dec
into
dec
push
inc
pop
lock
cmp
cli
jmp
jge
daa
fildll
mov
xchg
cmp
dec
repnz
cwtl
das
add
xchg
sub
pop
inc
in
push
add
rolb
iret
cmp
jge
repnz
lods
out
dec
xchg
cwtl
clc
jo
pushf
jne
cmp
push
cmp
mov
adc
add
xchg
sarb
rclb
jp
test
cmp
mov
fcmovne
and
xor
dec
pop
out
fcomp
in
out
outsb
imul
sti
mov
add
xor
filds
test
aam
adc
bound
push
stos
xchg
adc
das
jne
aaa
jmp
jmp
loopne
test
jnp
ss
cmc
lea
and
idivl
jne
sbb
mov
dec
mov
shll
imul
or
negl
mov
lret
sbb
cltd
pop
mov
iret
mov
ljmp
fistpl
mov
mov
pop
cmp
mov
addl
sbb
in
in
inc
sbb
pop
out
stos
jb
adc
mov
out
cmp
jno
jmp
xchg
inc
scas
add
cmp
sarl
fistl
adc
lcall
ror
push
sub
js
cltd
stos
push
sub
in
xchg
imul
add
shl
mov
cmc
out
leave
aad
jp
ret
negb
cmp
xor
push
jo
std
or
outsb
cmpsb
rcl
popf
repz
scas
cmc
pop
add
push
and
add
je
or
sub
ret
add
in
ja
rcll
cmc
loope
hlt
jmp
aas
cmpsb
push
ficomps
stos
sub
pop
pop
inc
mov
pop
mov
pop
inc
sbb
inc
mov
push
inc
sub
loopne
arpl
jecxz
mov
dec
addl
and
fsubl
xchg
scas
push
rclb
add
xorb
aas
add
pusha
in
ja
fldl
ret
in
ret
lcall
inc
pushf
call
xchg
rcrb
fnstsw
dec
pop
mov
jno
xor
jo
int
cmpsl
mov
int
arpl
xlat
insl
adc
fists
shll
mov
movsb
cmp
add
je
out
popa
jp
jle
adcb
xchg
js
int3
xor
mov
shll
gs
cmp
jp
jmp
push
nop
sub
fildl
arpl
or
push
cmp
mov
sub
lds
pop
xor
out
jge
push
jge
sub
mov
shll
push
mov
pushf
test
jae
dec
xchg
mov
out
jle,pt
adc
lret
repz
xchg
sbb
hlt
inc
fs
jge
inc
mov
ljmp
push
jbe
jecxz
gs
jl
js
sub
testl
loop
xchg
ucomiss
adc
insl
mov
xchg
lret
outsb
mov
outsl
int
xor
add
testb
mov
nop
imul
outsl
xorl
pop
popl
mov
push
sbb
ret
in
repnz
cmp
xchg
jnp
mov
sar
push
sbb
imul
cs
clc
dec
into
jl
popa
pop
outsb
rcrl
push
es
push
lret
addr16
sub
sahf
xor
movsl
add
mov
mov
jo
jecxz
and
push
insl
sbb
mov
and
bound
push
cmp
insl
sbb
scas
jns
cli
ret
inc
call
cmp
stos
sub
in
adc
push
mul
adc
jae
add
fsub
jae
adc
fsubs
pop
mov
cmp
inc
rorl
sbb
repz
loop
push
popa
fldcw
ds
add
push
or
adc
xor
out
ret
mov
or
stos
rolb
cmc
cmpsl
pop
pop
sub
pop
mov
inc
xor
mov
push
jecxz
and
pop
sbbb
imul
ljmp
jns
and
scas
pop
outsb
icebp
xchg
mov
sub
jbe
popa
and
mov
mov
and
repz
dec
jle
sub
mov
xorb
hlt
cmp
sbb
mov
mov
js
push
jp
shl
leave
mov
pop
mov
inc
cli
in
insb
jbe
std
std
and
outsl
and
lret
imul
cmp
jle
aaa
mov
call
add
add
pop
fsubs
dec
inc
jnp
mov
mov
loope
lds
fnstsw
cwtl
inc
xor
stc
rcrl
pop
cmp
mov
test
cld
jge
ret
ljmp
inc
mov
outsb
pop
sub
insb
sarl
pop
or
sbb
out
mov
xor
loope
aad
nop
andb
push
in
outsl
xchg
xor
lds
jb
test
sbb
fidivrl
idivl
cmp
dec
sbb
xchg
dec
dec
and
int
popf
mov
lods
xor
jecxz
pop
mov
ss
inc
cmp
mov
cmpsl
push
inc
xchg
and
sete
ds
je
sbb
es
cli
cmp
xchg
and
inc
mov
xor
in
xchg
out
lret
jae
xchg
inc
mov
sub
arpl
xchg
loopne
xchg
xor
xchg
in
adc
mov
inc
inc
hlt
adcb
in
and
mov
or
cmp
stos
adc
mov
stc
daa
mov
cmpsb
scas
or
cmpsb
mov
ja
lods
fsubs
sbbb
sahf
fwait
sbb
test
stc
addr16
dec
inc
push
jnp
add
or
fwait
aad
add
test
pop
int3
inc
or
push
mov
mov
adc
roll
jnp
nop
push
cmpsb
mov
mov
fbstp
aam
adc
out
rol
dec
and
cmc
sbb
shr
scas
pop
mov
dec
gs
in
adc
cltd
jnp
and
jnp
mov
sub
pop
dec
push
ljmp
xor
xor
repz
fdivl
xchg
push
imul
test
mov
cmp
mov
inc
dec
stos
test
cmp
iret
testb
dec
ds
negb
insl
lcall
scas
pop
add
inc
cmp
xor
repz
push
sbb
lds
in
dec
pop
xchg
push
cltd
pop
push
pop
mov
popa
imul
add
loop
loop
xorl
cmc
test
and
cmp
mov
pop
out
out
gs
or
mov
out
mov
loop
rcrb
mov
add
cld
adc
xchg
std
and
fldl
ret
hlt
push
mov
data16
ret
dec
inc
push
sub
mov
loopne
dec
std
test
push
lock
sbb
iret
clc
inc
int
sub
mov
ret
jb
jge
and
pop
xor
fwait
inc
xchg
insl
jbe
aad
add
add
cmp
mov
movsl
cmpb
int3
shlb
push
or
ds
xor
mov
icebp
mov
sbb
cmp
pop
cmpsl
or
shlb
mov
hlt
mov
les
lods
dec
outsl
pop
or
fbstp
in
mov
fiaddl
je
push
js
stc
rcrb
add
push
jecxz
into
test
dec
xor
mov
dec
je
adc
and
popf
fcompl
cmp
enter
loop
addr16
xor
jmp
and
sub
mov
jns
sbb
and
mull
call
xchg
mov
test
xor
cmpsl
incb
sub
scas
pop
push
test
adc
pop
imulb
cmp
fildll
aam
outsb
lahf
or
shlb
fcomi
repz
jne
int
add
icebp
adc
in
mov
push
mov
addr16
mov
out
push
int3
mov
xor
xchg
xor
inc
loopne
lods
lret
dec
cld
cmp
mov
fs
cmp
add
xchg
push
andb
mov
mov
jle
lock
orl
out
in
imul
jae
mov
push
push
xchg
xchg
hlt
std
insb
cmp
and
cld
mov
inc
mov
std
sbb
inc
mov
adcb
mov
scas
insb
mov
mov
inc
and
mov
xlat
mul
aam
sub
cmp
dec
jno
nop
out
mov
outsl
sbb
inc
into
in
pushf
loope
dec
mov
jns
rclb
lret
imul
adc
ret
movl
xlat
cltd
pop
call
addr16
cmp
add
add
jns
dec
call
leave
pop
pop
push
js
cmp
adc
cmp
out
les
mov
pusha
dec
ja
inc
push
mov
fwait
sbb
adc
in
jle
arpl
insl
arpl
jno
lock
cld
sbb
xchg
pop
inc
arpl
mov
pusha
add
xor
lret
jnp
adc
aas
in
pop
mov
in
push
mov
outsb
daa
aas
leave
nop
fmulp
shl
pop
repz
cmp
movsl
jae
xchg
mov
fldl
outsb
jbe
fbld
rcll
sar
repnz
adc
nop
fwait
mov
push
test
les
adc
or
and
pushf
and
add
cli
dec
bound
mov
dec
popa
push
pop
dec
pop
cmp
lahf
loopne
add
mov
into
or
adc
xchg
repz
lods
xchg
inc
dec
fbstp
fisubl
mov
inc
xchg
sti
cmp
rcrb
scas
cli
call
mov
pop
in
dec
data16
lods
sbb
or
xchg
add
jge
mov
mov
pop
cmp
je
cli
mov
sbb
inc
pop
out
lcall
cmpb
push
fsubrl
cltd
or
pushf
mov
es
sub
sbb
or
sarl
out
arpl
jp
inc
pusha
lock
ret
xor
push
push
inc
sbb
jbe
daa
decl
mov
sarb
cmp
test
sbb
cmp
xchg
push
es
sbb
lcall
or
jae
icebp
ss
jo
repz
ret
cmp
test
inc
aad
ss
outsb
xor
test
fisubl
push
adc
xchg
into
rolb
pushf
lahf
insl
mov
mov
rol
mov
sbb
mov
in
and
and
mov
fidivs
test
je
or
cmp
aad
je
imul
add
sub
les
add
cmp
dec
mov
and
sti
fistl
scas
testl
stc
test
shll
xor
push
push
scas
inc
fdivr
or
pop
or
daa
jbe
cmp
and
movsbl
mov
xchg
mov
pop
inc
xor
stc
lret
hlt
bound
cmp
loopne
xor
mov
pop
enter
addr16
hlt
ret
fmul
sar
lds
fbld
jle
inc
mov
gs
faddp
or
mov
pop
push
out
jg
je
and
mov
rcll
ss
mov
sub
cmp
pop
pop
inc
negb
rolb
je
fmulp
scas
cli
jp
sub
add
cmp
aas
mov
ds
adc
mov
shrb
xor
mov
addr16
test
jo
nop
call
fimull
jns
or
add
cwtl
xchg
subl
mov
ljmp
roll
cmp
rcll
lods
call
mov
cmp
mov
adc
sbb
mov
cmp
js
sbb
xchg
imul
bound
sbb
stos
call
insl
xor
int
fwait
cld
dec
imul
in
jmp
jl
or
and
aaa
pusha
inc
and
dec
sub
js
or
out
lea
test
cld
loope
adc
inc
xchg
fadds
cmp
mov
push
cmp
and
idivb
stc
sbb
jge
or
or
sbb
mov
rol
jnp
add
rclb
loopne
inc
add
imul
lahf
mov
clc
gs
inc
cmp
mov
sahf
add
cmp
push
mov
lcall
or
sti
xchg
inc
sbb
xor
notl
push
and
or
les
add
mov
sub
fldenv
adc
aad
jne
xchg
ja
mov
inc
lahf
pusha
bound
mov
lods
sbb
mov
loop
jns
pop
pop
aas
mov
cmp
test
pop
sub
scas
cmp
out
or
pop
xchg
adc
in
in
ds
or
ljmp
push
and
xchg
lret
aad
dec
jp
xor
xchg
xchg
mov
sub
xchg
sbbb
rorl
enter
adc
ss
cmp
arpl
fcmovnu
xchg
add
stc
insl
popa
or
push
popa
sar
fcomps
mov
sahf
dec
adc
stc
add
mov
icebp
and
mov
lea
pop
and
dec
insl
or
dec
icebp
push
arpl
test
inc
cmpsb
aam
jnp
mov
cmp
call
ljmp
jmp
into
adcl
mov
adc
dec
std
and
mov
int
mov
mov
sbb
pop
dec
test
lock
es
pop
mov
popa
into
and
pop
cmp
pop
adc
insb
test
cmpsl
sahf
cmc
mov
xchg
repz
xorb
xor
call
jle
pop
jne
add
sbb
dec
fwait
inc
out
arpl
pop
sbb
int
and
pusha
xorl
repnz
sub
and
pop
mov
in
adc
repz
adc
inc
je
sub
inc
jl
mov
ljmp
sub
sub
inc
cmpsl
mov
pop
je
jp
mov
cmpb
dec
xchg
stos
push
fildl
push
enter
xchg
call
jae
ss
cli
dec
add
mov
pop
dec
cmp
and
jb
add
or
fbstp
leave
dec
jns
stc
mov
xlat
xchg
mov
lahf
add
jg
xor
or
movsl
jmp
outsb
js
jae
aad
xchg
int
lds
jl
sub
push
out
pop
or
jge
xor
adc
in
xor
mov
arpl
lret
jo
flds
loop
mov
push
add
jg
das
sub
fdivrl
sti
cmpb
loop
mov
mov
js
in
test
lods
mov
lahf
add
inc
sahf
por
sbb
pop
inc
inc
cmp
xchg
lret
pop
jbe
pop
popa
inc
pushf
adc
stos
xor
rcr
and
out
sbb
inc
in
int
mov
inc
stos
hlt
fsubrl
cmp
fimuls
pop
cs
sub
pop
testb
mov
xchg
ja
es
stc
lods
repnz
pop
pop
and
outsl
cli
jo
pop
mov
cmpsb
push
and
xor
add
jno
test
call
stos
inc
ss
idiv
cltd
and
clc
pop
in
clc
and
out
fwait
mov
fmuls
push
fstpl
cmp
xor
xor
push
pop
arpl
insb
add
rol
mov
cmp
xor
jp
add
fdiv
int
inc
mov
loopne
xor
adc
ljmp
pusha
or
lds
popf
fxch
and
xor
sub
pop
pop
test
pop
addr16
int
lret
mov
xchg
pop
pop
out
sti
xchg
mov
mull
test
pop
sahf
insl
lea
iret
inc
into
mov
sub
sub
push
ss
pop
jp
sahf
mov
and
jge
pop
test
popf
xlat
or
adc
push
mov
push
call
das
bound
push
cmpsl
fnsave
add
daa
jae
cmp
jo
adc
and
sbb
adc
repz
adc
mov
pusha
xchg
add
push
insb
cmc
lock
push
insb
adc
mov
xchg
mov
xchg
dec
sbb
inc
xchg
push
add
dec
xchg
je
mov
loope
jns
mov
add
test
lock
rcr
jmp
or
stos
sbb
xor
add
stos
add
dec
pop
rcrb
fldt
jo
mov
mov
xor
out
jns
and
adc
cld
test
int3
outsb
dec
insb
mov
xor
mov
fmulp
je
mov
andl
inc
mov
mov
xchg
push
xor
cltd
iret
bound
ret
cmc
sbb
lret
sub
or
out
adc
movsb
cmp
movsb
loope
adc
lea
aad
add
pop
push
dec
or
dec
inc
mov
movsl
sub
cs
cmpsb
jl
out
fsubrp
lret
repz
ljmp
pop
data16
add
add
cmpsl
fisttpll
cs
and
jo
dec
and
hlt
lret
inc
inc
push
adc
popa
test
xor
pop
mov
pushf
add
sbb
add
jae
or
mov
mov
push
mov
sbb
cmp
add
das
xor
mov
or
addb
mov
xchg
lds
push
popf
adc
scas
loop
dec
mov
xchg
mov
sbb
and
out
stc
lea
lret
jbe
and
es
repnz
aam
lahf
add
xchg
mov
fmuls
inc
and
mov
aaa
adc
jg
outsl
out
cld
xchg
faddl
dec
fcomip
mov
adc
dec
push
jle
xchg
fstl
stc
imul
pusha
dec
add
pushl
mov
sahf
pop
mov
xchg
pop
in
mov
popf
or
mov
lock
push
lret
push
pop
ret
dec
out
push
sub
xor
push
sahf
inc
fstl
sub
mov
cmp
cwtl
into
sbb
push
jno
movlps
shll
ja
jo
lcall
repnz
ss
push
xor
mov
sbb
and
mov
mov
cmp
lcall
mov
fdivrl
scas
mov
mov
push
rcrb
iret
ljmp
ss
sub
xlat
adc
mov
pop
stc
push
cltd
mov
xchg
cwtl
lret
loope
mov
sub
fcoml
pop
movlps
insl
insl
test
stos
push
push
mov
push
div
pushf
ret
leave
push
cmp
add
cmpsl
mov
loop
lahf
int
adc
cvtpi2ps
fs
ds
rorl
or
jo
dec
fisttpl
stos
add
mov
xchg
int3
xchg
pop
mov
in
cmc
dec
cmp
push
out
dec
test
ret
fdivrs
dec
pushw
xchg
dec
orb
mov
adc
inc
sub
jno
and
fiadds
mov
adc
pop
cld
insb
push
dec
popf
or
popa
sbb
sbb
fwait
xor
pop
dec
loopne
mov
inc
subl
aam
adc
fwait
test
sbb
cmp
add
scas
inc
sarl
hlt
gs
xchg
dec
cmp
or
add
pop
pop
ds
lods
pushl
inc
fidivl
pop
test
jb
outsl
std
je
push
in
mov
jecxz
dec
lods
mov
inc
mov
pop
pusha
pop
fcomps
loope
mov
sub
loopne
mov
xor
jmp
jmp
xchg
or
repz
cmp
das
jl
aaa
xor
mov
lret
xor
sbbl
outsl
pop
add
pop
aaa
inc
xchg
mov
jne
lcall
inc
mov
or
das
push
dec
mov
xor
dec
mov
scas
shrl
fs
js
xor
out
push
inc
add
dec
add
lods
mov
xchg
push
xor
add
es
mov
dec
ljmp
push
inc
mov
cmp
xor
cmp
andb
jle
cs
leave
cltd
pushf
daa
push
add
xchg
lret
out
push
and
icebp
inc
out
jg
sete
xchg
jl
mov
aaa
jge
ja
lods
xor
cmpsl
aaa
movsb
pop
into
loope
mov
xchg
and
test
movsb
fnsave
clc
shl
sub
inc
mov
rorl
rcrl
imul
pop
xchg
lock
pop
dec
sti
cmpsb
dec
fcomps
mov
inc
mov
cmpl
in
xor
pop
leave
sub
dec
jno
loope
fsubs
inc
insb
aaa
push
test
packuswb
xchg
inc
mov
mov
mov
test
das
cmc
call
or
dec
dec
jle
popl
jo
imul
fiadds
add
arpl
mov
cmpsb
cli
push
enter
sbb
push
dec
sahf
mov
push
sbb
mov
pop
icebp
push
stos
add
mov
lods
mov
jge
je
or
dec
icebp
sub
mov
fcmovnbe
xor
xchg
add
mov
shll
aas
xchg
bound
push
mov
outsb
and
int3
cmp
dec
mov
xor
loop
scas
cli
xchg
mov
mov
shl
dec
push
or
aam
shrb
loop
sub
dec
add
decb
mov
dec
dec
in
push
dec
cmp
jnp
sub
in
xor
jno
lret
lret
add
jecxz
les
dec
and
cltd
jbe
out
mov
in
cli
outsb
scas
cltd
int
sbb
aaa
mov
cmp
cmpsl
xchg
inc
adc
adc
push
imul
push
adc
fs
xor
jno
in
jnp
push
cmpsl
xlat
and
pop
pop
ret
loop
mov
int
mov
add
mov
xor
lcall
in
and
arpl
std
sbb
aad
mov
sbb
adc
sub
int3
add
in
add
shl
pop
cmp
cmp
rcrl
fidivrs
adc
addr16
movsl
and
scas
mov
cmpl
hlt
mov
test
mov
inc
jle
jl
aam
push
sbb
xor
push
lock
adc
inc
add
fwait
rolb
dec
int
sub
lret
jp
fwait
cltd
mov
mov
cmpb
xchg
gs
mov
or
gs
sub
jmp
pop
popa
adc
imul
add
fbstp
int
sbb
and
fstpl
and
stc
adc
lods
sti
in
in
mov
sbb
in
mov
out
jg
imul
jno
aad
movsl
incl
jmp
mov
repz
mov
sar
imul
data16
in
mov
mov
push
bound
or
loopne
jmp
and
sbb
sbbb
pop
or
jmp
adc
shll
int
push
xlat
imul
cmp
sub
sbb
adc
mov
or
xchg
stos
dec
or
add
dec
test
mov
jb
out
jno
inc
pusha
push
mov
outsl
pop
daa
xor
loop
sbb
sbb
repnz
scas
jbe
pop
cmp
xlat
imul
scas
xchg
jb
dec
adc
ja
and
adc
mov
jl
mov
cmpsb
xlat
mov
jmp
cmp
int3
cmpsl
movsb
mov
out
lret
clc
pop
jb
or
lahf
jmp
call
jl
ss
inc
outsl
push
lods
mov
mov
stc
fldl
loop
mov
fmul
subl
mov
shrb
mov
repz
dec
jle
add
lahf
clc
jmp
sbb
clc
loopnew
push
xchg
dec
inc
and
ss
pop
pop
cmpsb
fs
sub
mov
mov
push
in
sti
das
push
popf
push
dec
push
pop
insb
mov
jle
mov
fcompl
sbb
xchg
in
pop
cmp
addr16
adc
in
leave
push
mov
pop
adc
mov
dec
and
push
rclb
stc
xor
mull
pop
mov
mov
push
mov
jle
mov
fidivrs
push
pop
add
pop
adc
mov
adc
rcll
jmp
loope
inc
fmul
push
movsl
out
push
int
inc
xor
sti
cwtl
shl
add
sbb
test
jbe
loop
sbb
insl
push
add
cmpsb
movsl
fdiv
call
xchg
mov
sti
std
cld
sbb
adc
jb
dec
inc
cmp
outsb
push
mov
inc
les
xchg
negb
push
aad
fs
add
daa
mov
fs
fldt
frstor
jno
sub
sub
push
mov
lret
sarb
add
adc
push
or
inc
jns
fs
stos
scas
pop
push
push
mov
jne
jge
loopne
xor
inc
mov
mov
movsl
loop
ss
test
pop
sbb
jge
gs
sub
lock
std
notl
clc
mov
push
or
mov
je
push
sub
or
cmpl
aaa
dec
dec
stos
fiaddl
pop
push
mov
cmp
push
xchg
fcompl
xchg
xlat
imul
int3
js
outsb
shlb
mov
hlt
aad
mov
sub
push
jp
mov
fldt
pop
icebp
pushf
push
and
cwtl
sbb
mov
cmpsl
inc
les
mov
add
mov
add
iret
jbe
jmp
sbbb
push
mov
dec
xchg
in
xor
lahf
les
ret
push
rolb
jno
popf
cmpl
aas
pop
dec
scas
mov
sub
push
stc
daa
dec
nop
pop
adc
sahf
push
loope
dec
sub
jns
mov
in
mov
cld
xchg
pop
add
jle
mov
pop
xchg
fwait
push
xor
push
add
inc
pop
sahf
mov
or
mov
les
mov
pop
mov
dec
cmpsl
int3
lret
inc
push
inc
sub
rclb
mov
nop
and
sub
shrl
jae
push
ja
ds
inc
orb
add
popf
add
mov
aas
lods
shrb
pop
inc
mov
movsl
mov
clc
pop
pop
sbb
and
mov
xlat
cmp
rcll
dec
fwait
cltd
outsl
aam
or
add
and
inc
js
mov
jmp
sahf
jg
push
jge
cmc
pop
test
sahf
cmp
inc
lahf
popa
or
push
xor
mov
pop
cmp
mov
cmp
add
push
je
hlt
flds
imul
int
ljmp
addr16
je
lods
and
jge
aam
xchg
fsubs
mov
inc
mov
or
mov
dec
testl
jne
pop
outsb
cmpsl
jle
ret
or
gs
jnp
lock
dec
mov
je
pop
dec
lcall
mov
enter
aad
jg
pop
hlt
mov
jae
pop
aaa
mov
pop
das
xor
es
pop
lcall
lock
hlt
inc
lea
mov
xor
mov
into
mov
mov
jmp
jg
ficoms
mov
jp
mov
sbb
pop
lahf
pop
push
cmp
mov
sub
or
insb
cmc
cmpl
outsb
fldt
add
fs
cmp
mov
add
in
enter
loop
in
stos
inc
add
xor
jge
inc
enter
mov
or
movsb
adc
mov
mov
add
push
pop
imul
xlat
aas
sbb
popa
mull
mov
outsl
sbb
cmp
pop
movsb
mov
inc
or
je
mov
les
test
jg
push
fsubr
or
pop
out
testb
pop
mov
and
lods
lahf
andl
cmc
or
fcomi
test
push
aad
dec
xchg
dec
add
fisubs
push
sub
popf
popf
cmc
out
mov
xchg
pop
nop
roll
icebp
mov
xchg
call
mov
mulb
jbe
jp
sbb
xchg
mov
mov
lods
push
outsl
sbb
or
lods
ror
fcompl
xchg
lods
and
jp
imull
cmp
mov
test
stos
sbb
mov
xor
subl
inc
mov
xchg
outsb
psubsb
ja
xlat
jb
push
fildl
xchg
cmc
in
ffree
or
and
inc
aad
sbb
push
jb
mov
je
mov
daa
fdivp
sub
cwtl
in
push
fnstcw
jg
jb
fsts
and
xor
jb
addr16
dec
out
jecxz
sbb
adc
cs
gs
adc
into
lock
xchg
mov
or
arpl
cmpl
push
sar
push
sub
push
nop
lods
dec
adc
inc
repz
lret
dec
pop
cmp
inc
jo
pop
xor
or
nop
pop
mov
sub
xlat
jl
sub
leave
out
pop
int3
xchg
popf
adc
pop
cli
pop
cmp
sub
fldcw
divb
push
add
sbb
adc
or
dec
mov
adc
and
subl
adc
idiv
lods
jge
adcb
xor
aas
js
ja
or
or
subb
sar
dec
push
inc
scas
jns
xor
dec
xchg
lret
out
decl
mov
insb
shlb
mov
fcomip
rorb
xchg
cmpsb
cmove
and
adc
int3
mov
ds
lahf
mov
clc
paddb
xor
mov
jmp
mov
call
flds
xchg
pop
clc
scas
ljmp
xor
pop
pop
push
lods
in
xchg
mov
inc
adc
mov
push
ret
in
fmuls
mov
xchg
imul
pop
pop
mov
dec
push
mov
and
aas
call
inc
mov
lret
cmpsb
pop
inc
and
or
rcl
popa
jl
lret
mov
cmp
cmp
push
jecxz
cmp
add
in
pop
jmp
xchg
rorl
mov
inc
jg
add
scas
push
xor
fnstenv
loope
or
in
scas
push
pusha
paddq
sbb
fwait
or
aaa
dec
lret
pop
pop
jmp
pop
sti
and
outsb
pop
test
adc
test
popf
xchg
and
xor
sub
xor
xor
lods
push
data16
lock
pop
ds
xchg
jl
push
inc
fnstenv
cmp
ficoml
sbb
std
mov
lcall
mov
jnp
js
mov
inc
aaa
gs
dec
call
xchg
dec
addl
aad
fidivrs
sahf
mov
jb
sbb
loope
dec
lcall
mov
cmp
push
ficoml
sbb
xchg
dec
inc
mov
mov
cld
push
int3
repz
adc
push
rcrl
lret
inc
and
aad
inc
mov
das
loopne
pop
add
insb
ja
mov
jne
cmp
subb
and
arpl
push
cmp
dec
dec
mov
loop
xorb
sbbl
or
add
pop
in
dec
dec
and
in
je
rcrl
xchg
aad
loope
jge
sbb
lock
insl
pushf
xchg
push
mov
scas
push
xor
cmp
out
mov
jge
jp
sbb
sub
jnp
sub
int3
cmp
pop
add
pop
jnp
pop
cltd
mov
and
xchg
movsl
test
cwtl
and
cwtl
fcomp
jo
fidivl
shlb
fwait
xchg
inc
shrb
std
mov
pop
mov
inc
daa
cmp
hlt
inc
inc
mov
mov
loopne
mov
int3
jp
xchg
iret
sbb
xchg
mov
cltd
fisubl
ficoms
xor
cwtl
cmp
mov
mov
stos
xlat
and
xor
push
mov
scas
adc
pop
mov
add
sub
pusha
xor
adc
out
xor
pop
mov
push
cli
test
fsts
mov
sbb
loope
insb
sbb
pop
lret
into
cwtl
out
push
jae
sti
mov
cmp
xor
adc
pop
push
adc
lcall
out
aaa
mov
xor
push
push
int
push
pop
jo
push
cltd
sbb
xor
stos
repnz
out
and
push
push
insb
and
sarb
out
jecxz
stos
mov
mov
mov
shrl
aas
ficoml
lahf
push
cmp
sub
push
ss
lea
add
push
adc
enter
popf
push
dec
out
in
hlt
bound
lea
shll
xchg
testl
jo
sbb
inc
pop
sub
shrb
mov
push
fnsave
push
xor
aas
loopne
mov
mov
xchg
xchg
adc
gs
lcall
xchg
incl
les
xchg
xlat
mov
inc
adc
cmp
add
shll
adc
push
mulps
dec
call
add
inc
xor
xchg
pusha
mov
inc
or
fs
add
pop
add
mov
xor
jge
mov
push
ljmp
lahf
push
sub
test
xlat
divl
or
imul
dec
daa
in
lods
and
or
fsubl
fistl
insb
shll
dec
ja
orb
ljmp
push
movsb
sti
mov
dec
sarb
inc
mov
call
mov
cmpsb
mov
movsb
fimull
daa
popf
in
ret
push
and
insl
loopne
mov
in
inc
sub
mov
adc
push
out
and
es
push
inc
inc
add
cmp
inc
aam
scas
insl
mov
in
imul
pop
xchg
push
push
or
xchg
mov
cmp
in
fidivrl
inc
rcrb
scas
push
add
mov
pusha
mov
js
cli
push
pop
inc
xorb
addr16
and
rolb
stos
add
mov
inc
fdivrs
mov
push
addl
sahf
sahf
fstpl
xchg
push
dec
xchg
mov
in
push
movsb
lods
add
dec
les
mov
popf
out
les
outsl
das
icebp
insb
push
xchg
and
mov
popf
aaa
push
orb
fcoms
push
lea
push
test
es
xlat
pop
dec
and
mov
add
out
mov
lret
push
push
jmp
jle
jl
push
jge
mov
aam
cmp
leave
mov
lods
cmpsb
lods
xchg
push
movsl
sbb
push
minps
dec
lds
adc
inc
mov
inc
arpl
test
test
hlt
inc
sub
xlat
lahf
mov
pop
pop
xor
dec
add
imul
mov
ds
aas
and
xchg
add
mov
test
jb
mov
mov
inc
adc
xor
sbb
xlat
insb
pushf
popa
out
pushf
jae
dec
inc
mov
cmp
cwtl
add
jnp
popf
lock
push
pop
pop
jno
inc
push
js
jecxz
aas
ss
and
add
popa
pushf
mov
popf
aaa
js
jns
nop
mov
dec
incb
loop
imul
inc
rolb
inc
aam
into
lods
hlt
jle
nop
sub
fwait
or
in
int3
movsl
int
sbb
sarb
mov
xchg
cmpl
fists
jne
js
popa
cli
js
in
addb
je
mov
pop
imul
jge
lret
pop
xchg
outsl
or
inc
js
add
orl
dec
pop
scas
dec
adc
lds
inc
imul
lcall
popl
outsl
cmp
cmc
mov
xchg
jecxz
add
inc
scas
ss
lea
out
sti
xor
fstpl
repz
jbe
popf
and
fistl
clc
nop
dec
popf
jmp
clc
push
fbld
push
xor
and
jae
sub
std
jge
cmpl
rcrb
subl
add
pop
loopne
jp
mov
lret
rcll
fs
xchg
adc
xchg
cwtl
out
xor
and
sub
jne
inc
pushf
in
icebp
test
inc
adcl
push
mov
cltd
mov
or
add
jo
adc
lcall
and
cmpsl
movsb
mov
pop
mov
inc
insl
ljmp
icebp
push
imul
xor
mov
test
cmpsb
jmp
mov
addr16
mov
dec
insb
or
test
and
dec
fmuls
inc
pop
stos
das
cmp
sub
jnp
mov
icebp
ss
jmp
dec
sbb
cmpsl
ss
mov
stos
in
xor
unpckhps
scas
sub
or
or
push
and
mov
mov
into
rolb
add
add
pop
add
adc
or
sub
pop
mov
stos
pop
push
xchg
and
clc
pop
outsb
repnz
inc
insl
lods
fwait
hlt
mov
clc
or
pop
cs
into
push
jle
adc
inc
in
ret
fwait
ret
push
xchg
lods
aam
cmpsl
insb
push
call
in
push
pop
movlps
inc
mov
xchg
jb
icebp
cmc
int3
sub
fsubs
lret
out
lock
bound
icebp
in
inc
mov
jno
jmp
xor
sti
sti
ret
js
or
mov
cmpl
push
mov
mov
clc
and
jns
push
sub
pop
jle
jae
sbb
xchg
inc
fwait
mov
adc
lcall
push
push
lods
cmpsl
and
es
std
cmp
sti
popl
push
or
pop
out
insl
mov
push
lods
mov
jecxz
adc
push
nop
cwtl
das
lea
or
pushf
popa
ljmp
cmp
push
pop
outsb
sar
push
bound
add
push
jne
or
ror
cwtl
sarl
ds
test
sbb
clc
and
mov
cmp
jge
mov
add
mov
popa
or
bound
lret
cld
or
xor
in
rcll
xchg
adc
pop
jl
inc
std
movsl
xlat
mov
or
sbb
das
xchg
rcrl
mov
inc
pop
ret
pop
push
sub
and
or
shll
jno
xchg
pop
dec
stos
ja
sbb
enter
xor
pop
jg
mov
les
out
xchg
push
or
fnstenv
dec
xchg
sub
movsl
das
stc
movsl
cmc
inc
or
hlt
repnz
cmp
mov
push
jns,pn
imul
mov
jns
or
push
xchg
out
hlt
in
outsl
lret
mov
sahf
stos
adc
sub
xlat
push
xchg
lea
cmpsb
lret
iret
inc
scas
jp
and
ja
xchg
push
mov
dec
pop
popa
ret
rcr
inc
mov
push
mov
ja
dec
mov
xchg
cld
aas
lret
cmpsb
out
jnp
repz
pop
jno
pop
loope
sbb
fstpl
push
jno
nop
xor
inc
call
dec
cmp
test
dec
faddl
loopne
fists
mov
pop
stc
iret
inc
in
out
stc
xor
add
test
neg
repz
pushf
fadds
incb
out
nop
repnz
push
fmuls
jne
mov
inc
dec
vmovsd
dec
lock
cmp
jae
test
mov
and
loopne
sbb
js
ret
nop
les
sbb
xor
mov
inc
sbb
fnstcw
xor
fdiv
enter
inc
rcl
int3
daa
push
data16
xor
adcb
adc
and
imul
cwtl
rclb
pop
adc
jge
pop
or
jbe
movsl
sub
xchg
sbb
fwait
movsb
movsb
xchg
pushf
addr16
push
jne
sbb
popa
or
cmp
test
fmuls
pop
pop
scas
lods
ret
inc
jle
cmc
xchg
movsb
mov
dec
scas
push
loop
xchg
sub
cmp
mov
sub
sbb
mov
les
jne
fimuls
add
cmc
or
and
stos
mov
mov
xor
stc
dec
fdivr
daa
jns
mov
sti
xchg
daa
ljmp
popf
jnp
adc
repnz
sub
testl
loope
je
jno
divl
out
mov
iret
fdiv
inc
and
icebp
repz
scas
inc
jnp
call
inc
scas
xchg
mov
jg
push
pop
cmpsb
pop
xchg
xor
incl
imul
pop
jl
insl
inc
dec
pminsw
or
arpl
push
jl
and
addl
out
data16
jl
and
xchg
cmpsb
sti
cmpl
fldt
enter
outsl
xor
xor
mov
movsb
into
push
sbb
cmp
and
imul
or
insl
hlt
imul
cmpl
inc
inc
das
sbb
andl
lret
mov
mov
inc
xchg
ljmp
out
cli
cmp
daa
push
and
pop
push
xor
xchg
out
sub
cmc
loop
out
clc
test
pop
lock
shrd
xchg
and
cmp
cmp
jo
dec
pop
push
sbb
add
out
jecxz
sbb
inc
in
mov
jmp
movsl
xor
icebp
lds
sub
push
fwait
inc
cmpsl
add
arpl
mov
push
xor
cld
mov
repnz
jle
dec
aaa
jbe
pop
scas
add
xor
stos
test
daa
aam
call
push
mov
mov
ss
pop
adc
data16
shlb
and
sarl
jns
and
push
fs
popa
adc
pop
inc
mov
sub
mov
ljmp
insb
fwait
xor
push
les
aaa
or
mov
mov
mov
movsb
outsl
cmp
decl
nop
sub
sub
js
pop
dec
test
xor
add
mov
jecxz
or
push
icebp
insb
mov
push
xor
lds
fdivp
push
negl
test
sti
add
movsl
push
sbb
add
push
lds
negb
sahf
dec
std
jo
xor
pop
cmp
aam
xorb
aas
adc
es
outsb
cmp
pop
out
lea
push
cmc
mov
cmp
xchg
push
sub
push
add
add
mov
and
in
pop
sub
in
push
jge
arpl
push
sub
xchg
incb
push
cs
jnp
dec
subb
int
jns
xchg
or
inc
adc
mov
and
pop
and
mov
inc
cmpsb
fiaddl
cmpsb
jl
iret
negb
das
loope
lods
xorl
jb
imul
test
add
popf
sbb
push
xor
in
clc
cld
test
cmp
push
ret
mov
or
push
idivl
test
std
stos
mov
sbb
cmpsb
pop
and
lcall
adc
xchg
sbb
sub
sbb
aad
pop
ja
push
add
leave
stos
mov
sub
push
or
xchg
data16
push
ss
outsl
nop
pop
xor
add
add
xchg
xchg
outsb
cmp
insb
jnp
pop
xchg
rorb
jae
and
inc
outsb
or
enter
mov
pop
adc
lahf
in
adc
insb
adc
leave
sub
jne
jge
jmp
cli
imul
mov
fsubp
cmpsb
sarb
push
rcr
pop
cmc
jle
xor
or
rolb
dec
in
mov
mov
stos
daa
mov
je
ret
out
insl
mov
fwait
iret
mov
add
ljmp
repnz
in
push
push
xchg
mov
incb
jmp
imul
lock
sbb
and
add
test
push
cmpsl
stos
dec
inc
mov
inc
out
enter
xchg
or
movsl
jmp
mov
imul
scas
test
sbb
cmp
fdivp
and
jne
jnp
xor
push
lock
ljmp
into
test
outsl
scas
cmp
aaa
movsb
lret
dec
inc
mov
cltd
and
mov
lock
inc
into
imul
das
in
fwait
push
insl
insl
jb
shll
xchg
add
pop
in
jnp
xlat
cmpsl
out
jns
pop
arpl
fcoms
or
fs
loopne
std
pop
xchg
add
hlt
dec
cmp
hlt
and
xchg
shlb
inc
add
or
dec
pop
push
cmpb
push
xor
mov
push
dec
in
xor
mov
inc
sbb
xlat
ret
stos
loope
sbb
and
fbld
pop
fisubs
bound
fmuls
andl
sub
pop
dec
pop
sarl
cmpb
jecxz
jecxz
sbb
lret
mov
xor
aas
aaa
insl
sbbl
sub
jns,pt
leave
push
stc
xchg
add
xchg
jns
in
push
xor
bound
fimuls
mov
cmp
add
in
imul
in
mov
ret
dec
sti
push
test
inc
pop
out
subl
push
jne
lret
addr16
push
shrl
mov
cmp
bound
fdivl
pop
jl
mov
add
mov
push
xchg
cmp
cmp
jns
jp
imul
pop
xchg
sbb
mov
jb
xor
pop
andb
mov
rcl
iret
inc
jnp
test
movb
int
hlt
pop
roll
data16
add
cli
sub
cmc
pop
push
dec
stc
pop
loopne
into
stc
rorl
and
movsb
cmp
ljmp
jg
add
or
movsl
or
mov
fildl
jno
lahf
jb
adc
jno
std
sbbb
push
sbb
ss
push
cmp
dec
loope
out
jnp
daa
ja
xlat
outsb
andb
int
icebp
mov
mov
lcall
fldt
xchg
int
or
test
adc
jl
pop
repnz
mov
scas
mov
out
subb
mov
xor
mov
es
addr16
cltd
fisubrl
iret
loop
cmp
push
aaa
xlat
mov
imul
and
cli
pusha
arpl
pop
hlt
cmp
pushf
mov
jne
out
int3
or
or
les
js
add
mov
imul
inc
jge
icebp
popf
and
jne
push
mov
iret
xchg
out
and
int
pusha
push
repz
pop
test
pop
push
addr16
adc
pop
dec
jno
dec
js
dec
pop
inc
add
fstpt
mov
push
pop
dec
xchg
adcb
push
mov
mov
adc
jno
popa
dec
mov
mov
push
lods
movsl
negl
adc
pop
inc
test
add
pop
into
jecxz
pop
adc
adc
mov
les
dec
dec
lods
enter
data16
sahf
add
sti
push
inc
mov
sahf
lret
in
jecxz,pt
sbb
daa
add
sub
stos
in
sub
push
addl
iret
cld
mov
rcrb
xor
xchg
pop
fmulp
push
gs
lret
mov
clc
test
jns
fidivs
jg
insl
push
fdiv
scas
cli
jle
enter
dec
test
pop
mov
out
xchg
sbb
xor
sti
mov
dec
add
jle
shll
call
nop
sbb
mov
sub
int
jg
cmp
in
sub
shll
stos
sub
mov
mov
jnp
add
xchg
xor
pop
dec
jmp
ja
jns
push
mov
mov
cmp
push
and
call
dec
aaa
add
clc
int3
enter
pop
pop
adc
and
sahf
push
mov
in
and
fnsave
inc
testb
inc
subl
test
jg
sbb
inc
cltd
push
es
cmp
add
push
xchg
mov
push
inc
push
rcrb
mov
xchg
in
nop
mov
push
adc
enter
mov
lahf
xchg
test
push
pusha
aam
jg
imul
orl
ret
adc
repz
pop
lds
imul
stos
pop
jmp
jmp
add
and
mov
mov
aaa
movsb
iret
xor
xchg
gs
pop
cmp
fsubl
sbb
mov
sbb
orb
cld
cmp
sub
mov
xorl
push
mov
mov
adc
inc
faddl
pop
jnp
lds
pop
add
cs
stos
data16
lret
add
adc
outsb
test
std
addl
xor
dec
xchg
mov
xchg
push
push
xchg
mov
loop
out
push
mov
pop
btrl
mov
cmpsl
add
out
cmp
rcrl
adc
xchg
inc
dec
out
inc
xchg
push
xchg
dec
js
jl
jge
pop
xor
imul
ret
nop
popa
rclb
mov
sub
jge
icebp
jge
mov
xor
loope
push
popa
dec
popf
mov
outsb
inc
stos
sti
jge
mov
in
outsb
mov
fldenv
xor
aas
bound
push
mov
insl
cwtl
jno
mov
push
out
sahf
sahf
xchg
in
cmp
test
push
dec
int3
mov
arpl
hlt
not
pop
addl
mov
pushf
adc
push
jns
cmp
mov
inc
repnz
daa
sets
je
xchg
sti
xorb
xorb
in
mov
add
fstl
add
test
xchg
test
inc
out
sbb
lcall
stos
xlat
mov
add
neg
push
stos
dec
mov
or
int
fdivr
aaa
out
stos
and
mov
daa
sbbb
outsl
imul
jns
lods
push
pusha
stc
push
dec
mov
gs
cmpsb
shll
leave
xchg
int
popf
xchg
add
clc
mov
inc
fisubl
lcall
aas
lret
cmp
cmp
sbb
popa
gs
cmp
and
cli
rorl
push
mov
ror
cmp
sahf
adc
sub
and
pop
psllw
inc
or
out
daa
xchg
dec
arpl
bound
loop
pop
add
cmp
popa
pushf
call
into
shlb
stos
or
fisubs
in
xchg
xchg
cmc
adcl
cmc
pushf
ljmp
mov
decl
icebp
outsl
enter
int
aam
mulb
dec
pop
in
dec
daa
nop
stos
ljmp
jae
pop
fwait
jae
dec
push
and
repz
in
cmp
or
ret
stos
mov
data16
cmp
arpl
mov
xor
jge
js
call
into
pop
pop
scas
lds
les
jmp
sbb
pop
lock
add
mov
or
lret
mov
out
bound
loope
xor
ja
sti
outsl
mov
repnz
in
jbe
out
add
or
xchg
cmp
xchg
imul
hlt
stos
adc
inc
adc
jno
fdivrs
pop
mov
incl
pop
mov
add
inc
sbb
adc
testb
sysexit
and
pop
jno
sub
xchg
cwtl
sbb
ret
adc
mov
and
mov
sub
repz
mov
mov
aas
mov
fstl
inc
cmpsb
sbb
xchg
dec
cmp
mov
aam
sub
hlt
inc
sbb
es
pop
mov
adc
jecxz
push
adc
das
aas
test
movntps
xchg
pop
mov
scas
adcb
push
ds
pusha
pop
dec
pop
cld
and
mov
sub
loope
daa
jo
pop
repnz
shrb
lcall
cmp
mov
mov
hlt
jne
sti
mov
ja
inc
mov
fcoml
cmpsl
push
push
pop
add
in
push
mov
mov
scas
lret
pop
sar
fistpll
push
pushf
pop
call
lret
mov
and
adc
je
stos
sbb
lods
clc
xor
popa
mov
add
stc
and
sbb
hlt
mov
pop
and
insb
fisttps
outsl
dec
push
into
leave
cmp
lret
out
loop
adc
in
in
dec
ja
sbb
xor
add
stos
cmpsb
ret
add
mov
div
jae
ja
loope
pop
repnz
jbe
int3
icebp
xor
loop
xchg
pop
test
lds
sub
insl
imul
dec
jb
aaa
aam
dec
or
and
ret
jecxz
xchg
ds
inc
loopne
lock
jp
xor
aad
add
cmpsb
dec
xor
inc
cltd
push
insb
jecxz
sub
decl
cwtl
fdivs
pop
je
test
mov
ds
iret
push
jo
and
fldt
test
cmpsl
test
mov
sub
xor
pop
inc
mov
lods
xorl
sti
jge
jae
or
outsl
js
cmp
test
jne
push
mov
push
dec
es
int3
test
sub
mov
xchg
stos
in
jbe
daa
jae
xor
in
xchg
xlat
out
aam
mov
mov
mov
stos
xor
pop
mov
xchg
jnp
ja
stos
les
cmpsl
arpl
aas
scas
mov
sub
or
hlt
mov
cs
pop
stc
sub
cmc
push
and
scas
xor
add
loopne
bound
jb
cmp
inc
push
lds
sbb
rcr
shrb
cmp
addr16
jmp
lods
imul
cld
xor
popa
nop
data16
mov
add
mov
add
leave
xchg
jge
test
and
call
xor
push
lret
and
loop
sbb
pop
or
aam
ljmp
fwait
cli
xor
or
and
divl
pop
inc
dec
xor
xor
addr16
push
das
mov
cltd
mov
js
inc
loop
pop
aam
push
mov
sbb
mov
mov
jno
and
cmc
jmp
scas
mov
mov
pushw
pop
ds
sub
imul
std
ret
testb
inc
xchg
popf
or
adc
push
lret
sub
jnp
leave
mov
xor
pop
in
jmp
sbb
inc
cmc
pop
in
lea
fwait
inc
ret
cmp
xchg
loopne
jmp
add
faddl
mov
imul
mov
dec
mov
cmp
mov
mov
mov
xor
sbb
mov
or
outsb
out
fistps
mov
cmp
pop
movsb
das
and
js
imul
mov
arpl
dec
pop
mov
mov
inc
and
sub
test
mov
mov
out
dec
aam
inc
in
push
inc
mov
sub
or
inc
notl
scas
fwait
insl
pop
call
mov
and
push
aad
pop
mov
mov
test
pop
femms
push
xchg
push
filds
dec
test
dec
sub
ljmp
mov
cmp
mov
xchg
sub
cs
iret
aam
xor
rorl
xchg
movsl
cmp
mov
inc
adc
dec
in
fisubrs
loope
stos
js
insl
stc
inc
leave
mov
cmp
stos
notb
mov
in
cmpsl
pusha
rcr
push
mov
mov
stos
pop
add
int3
mov
jmp
push
mov
xor
jmp
xchg
xchg
push
push
sbb
adc
jbe
inc
xor
movsb
xor
iret
cmp
mov
cwtl
jo
mov
xchg
sbbb
sbb
jnp
int3
es
xor
jo
cli
out
jl
cs
insl
mov
cmp
pop
fs
fs
das
stos
inc
aad
cmp
dec
mov
jo
adc
xor
mov
mov
dec
test
nop
insl
adc
mov
cmp
aas
push
jle
inc
stc
xor
outsb
lds
lock
add
sbb
stc
mov
and
pop
nop
cwtl
fcomip
dec
xlat
push
and
jne
xchg
cmp
sub
fucomip
push
les
adc
cmp
inc
push
mov
rorl
add
dec
mov
sub
in
jno
cmp
push
push
and
jl
cmpsb
rclb
or
imul
in
sub
das
add
ds
sub
pop
mov
add
dec
popf
ss
mov
sub
push
push
out
pusha
outsl
jle
add
gs
loope
push
rcrb
sbb
sub
movsb
sub
pushf
xor
pop
aaa
repz
adc
fsubrs
stos
and
iret
aas
mov
jp
insl
mov
lods
or
sub
les
fidivs
int3
cld
stc
fcomip
xchg
push
fs
lea
cmpsb
scas
icebp
test
adc
and
adc
rcrb
imul
mov
lahf
insl
xchg
out
push
lods
pop
sub
and
ret
mov
inc
or
int3
jecxz
push
pop
sbb
sbb
iret
mov
ljmp
cmp
mov
or
in
je
pop
cmc
idiv
sbb
mov
adc
xchg
aam
push
fwait
jbe
add
pushf
add
call
inc
cmp
xchg
gs
and
adc
int
adc
jnp
sbb
sbb
cmp
adc
mov
fwait
or
xor
xchg
push
push
push
mov
mov
cmc
push
lret
mov
and
push
and
test
jg
roll
dec
adc
je
mov
pop
fwait
mov
or
xchg
pop
in
xor
add
fld
sbb
aam
enter
xor
fdivrs
cmp
ss
popa
out
and
push
aad
shl
aam
ret
lahf
and
sub
lods
jne
std
or
push
popa
mov
push
xlat
inc
pop
jae
movsw
jno
mov
test
or
fldl
loop
int
arpl
movsb
aam
xchg
loopne
mov
mov
ja
sbb
shll
add
mov
sbb
roll
aam
push
pop
dec
inc
mov
adc
xor
jne
bound
ja
or
push
rcl
push
xchg
stc
dec
daa
or
sbb
dec
push
out
push
into
mov
push
je
mov
pop
stos
push
mov
xchg
cmp
adc
int
popf
pop
add
push
xor
sub
mov
add
add
lds
cltd
nop
xor
dec
sub
inc
loopne
lock
mov
pushf
dec
cltd
mov
adc
aad
or
mov
fscale
dec
leave
mov
lods
and
sbb
xchg
ret
or
jp
mov
dec
mov
jmp
ds
xchg
lahf
xchg
repz
aaa
lcall
pusha
mov
jge
std
push
dec
mov
push
and
aad
inc
pop
xchg
data16
cs
xor
cmp
mov
popa
dec
dec
jae
insb
mov
aad
cmp
dec
js
or
jge
mov
lods
xchg
xor
fwait
cld
push
imul
pop
mov
test
ja
int3
lock
mov
ja
ret
popa
mov
stos
mov
outsl
mul
mov
out
mov
test
sbb
call
adc
add
cmpsb
mov
push
push
mov
jg
fldt
out
pop
inc
or
dec
sti
jno
decl
filds
or
push
dec
add
iret
inc
nop
pop
out
in
jo
rcl
out
push
dec
fwait
mov
and
mov
sbb
faddl
repz
lock
dec
test
xchg
or
clc
divb
or
shl
xor
mov
xchg
xchg
es
pushf
jno
sbb
jbe
les
daa
out
sbb
subb
cmc
push
in
out
rcll
add
mov
pop
nop
in
leave
push
fisubl
mov
mov
shlb
imul
inc
insl
iret
mov
divl
push
adc
in
ljmp
mov
jmp
int3
or
push
dec
gs
or
fbld
popf
jmp
daa
out
dec
mov
out
xchg
lea
insl
cltd
outsl
aaa
cmp
out
xor
in
aad
xchg
call
mov
leave
lret
add
xchg
imull
mov
mov
jbe
jmp
out
mov
push
push
shlb
mov
jne
iret
stos
lret
pop
les
cmp
arpl
repnz
movsb
pushf
mov
outsl
sbb
pop
sbb
mov
jno
push
add
push
loop
js
out
dec
jno
pop
sbb
inc
das
icebp
pop
movl
aaa
fldenv
lret
out
add
xchg
mov
sbb
aas
or
cmpsb
xlat
mov
jl
cmp
aas
rolb
stc
xor
popa
xor
mov
push
das
add
and
cs
inc
loopne
pop
test
cmpsb
sti
push
sbb
xlat
sub
clc
lea
adc
insl
add
add
cmpsl
inc
ja
mov
jge
xorb
xor
cmp
push
out
js
inc
pop
cmp
cli
push
outsb
in
stc
in
mov
mov
out
fadds
dec
sub
mov
or
xchg
cmpsb
xor
xchg
cli
push
fisubrl
icebp
mov
sarb
cmpsb
inc
xorl
mov
mov
popf
lahf
incl
cmp
lret
cs
lods
cmp
inc
repz
cmp
aas
sbb
lret
bnd
adc
test
repz
shrb
ret
fcoms
and
pop
xor
mov
cmpb
xchg
dec
ss
adc
jbe
or
cmp
adc
ret
dec
pusha
pop
mov
pop
fdivrl
decb
fs
nop
out
mov
xor
push
inc
adc
cld
loope
sahf
jmp
inc
sub
mov
filds
scas
fmull
in
xchg
in
jmp
loope
xor
bound
sti
les
fsubrs
fldcw
dec
movsb
mov
mov
int3
into
or
lea
outsb
xchg
jmp
clc
cmp
dec
inc
nop
mov
push
adc
push
mov
jbe
sahf
push
mov
les
pop
sub
popa
loop
sahf
sub
dec
xor
push
ss
fwait
test
push
lods
out
xor
adc
dec
dec
jg
cli
pop
mov
sub
fsubs
xor
sbb
dec
jle
mov
out
in
inc
dec
hlt
insb
sbb
dec
das
aam
jnp
push
scas
jne
cltd
pop
mov
inc
ficoml
push
lock
mov
in
arpl
bound
loope
jmp
aam
outsb
aaa
out
push
jns
insb
js
out
push
pop
mov
mov
js
or
and
jecxz
jg
std
addb
xor
sbb
fstp
push
xchg
xchg
ret
xchg
std
cmp
inc
push
movzbl
mov
inc
lret
mov
inc
insb
loop
mov
cmpb
add
ss
ljmp
dec
out
mov
ljmp
jb
pop
jo
inc
fcomp
cld
ljmp
dec
xor
out
lods
in
je
dec
dec
mov
push
gs
leave
test
inc
and
xor
lods
repz
lret
push
push
out
mov
mull
push
xor
xor
mov
div
je
cld
push
push
int3
mov
ror
sub
sbb
mov
push
jno
xchg
lretw
cltd
push
out
int3
ja
ja
subb
es
fsub
and
jge
mull
out
adc
je
jb
fcmovne
adc
inc
out
sbb
dec
aaa
fsubrs
mov
rol
push
jbe
xor
iret
xorb
and
addb
jle
add
repnz
xchg
cmc
inc
lods
pushf
aam
and
inc
dec
int
out
xchg
lret
or
nop
repnz
leave
jb
jg
scas
mov
push
xor
gs
xorl
cld
xchg
xchg
sub
arpl
iret
pop
jne
pop
es
adc
popf
mov
mov
cmpsl
daa
cmpl
out
test
dec
xchg
push
inc
mov
dec
xor
inc
shll
add
push
orl
jl
mov
fwait
cmp
push
cli
fisttpll
mov
aas
jo
loope
push
les
inc
shrl
cmpsb
sub
xor
les
fcom
sbb
rcrb
arpl
push
or
cld
mov
push
loop
mov
push
xchg
scas
ret
mov
icebp
and
outsb
stc
dec
hlt
xlat
fstpl
add
mov
cmp
xchg
nop
in
lods
dec
push
push
jnp
mov
negb
imul
aaa
add
into
mov
and
leave
pop
sbb
lret
loopne
fbld
gs
insb
ljmp
add
jle
insl
int
xchg
ret
jl
xchg
iret
int3
in
out
imul
data16
cmpsl
imull
xchg
cmc
lds
js
gs
popa
fiadds
mov
pop
stos
lret
push
lret
push
pop
int
movsl
inc
js
rolb
scas
std
fnsave
cmpsb
mov
test
test
lods
loopne
inc
das
es
mov
mov
add
mov
push
pop
sbb
outsb
adc
std
daa
pop
dec
adc
fdiv
aas
fcoml
push
lea
ja
mov
loop
inc
adc
jle
sahf
xor
sahf
nop
ss
pop
sub
xchg
cmp
pop
cmp
or
xor
outsb
jo
fisubl
int
in
lcall
push
sub
mov
cmc
pop
je
sbb
data16
mov
push
ror
adc
cmp
pop
in
jp
inc
cmp
jmp
and
shlb
les
aas
mov
add
lock
dec
jg
sbb
scas
mov
or
scas
cmpsl
fists
or
cs
push
mov
push
lret
mov
push
lcall
movsb
lds
mov
cs
cmp
fildll
ss
gs
xor
mov
sbb
aad
scas
push
adc
or
adc
add
int
les
lea
cmp
pop
lods
mov
xchg
cmp
or
dec
jge
cmpsl
aad
scas
inc
mov
push
push
jnp
pop
fcoms
and
cmp
sub
or
subl
push
rcl
or
mov
je
xchg
aaa
mov
xchg
movsl
in
dec
mov
fdivrs
fisubl
inc
fs
pop
mov
xchg
adc
call
dec
shl
push
je
inc
mov
push
mov
hlt
dec
inc
pop
shrl
jmp
das
inc
cld
aad
sbb
iret
scas
sub
fisttpl
out
jnp
xchg
sub
lret
adc
hlt
pushf
int
ja
jle
outsb
adc
pop
shrb
sti
ret
jne
adc
mov
xchg
jbe
push
jmp
in
dec
out
lds
iret
in
mov
jp
sahf
mov
punpckhdq
xorl
dec
xlat
int
push
xor
inc
inc
jmp
xor
iret
and
imul
arpl
ret
ja
cmp
jo
xchg
in
aaa
push
das
ret
pop
adc
int
cmpsl
or
push
jo
call
movsl
in
cmp
dec
scas
insl
pop
enter
cmp
inc
fs
jo
fidivs
loope
or
imul
pop
inc
enter
insl
imul
ss
ret
out
scas
mov
xchg
nop
xchg
sahf
pop
jmp
inc
pop
shll
scas
mov
xchg
cmp
jne
fisubrs
jge
sub
mov
test
cmc
test
xchg
mov
imul
outsb
mov
aad
adc
xor
sahf
in
adc
les
sti
sub
mov
aam
push
ljmp
push
push
dec
jp
pushf
dec
pop
out
rclb
mov
pop
push
in
inc
fsts
xor
jb
xor
int
nop
cltd
sub
cmp
arpl
ljmp
icebp
test
jp
mov
inc
cli
mov
andb
std
lret
dec
xor
lahf
dec
inc
inc
sarb
and
loop
out
cltd
jnp
adc
xor
push
sbb
and
call
or
dec
or
add
and
pop
xor
xchg
pop
mov
push
aaa
loopne
jmp
cli
inc
mov
mov
sbb
shll
add
fstp
push
and
sub
cmp
adc
roll
mov
xorb
inc
dec
push
inc
pop
push
jb
jns
pop
xchg
and
clc
or
and
pop
jecxz
mov
xchg
jmp
jp
sbb
sub
dec
sbb
xor
cmp
jle
pop
add
mov
movsl
or
cld
pop
mov
or
mov
cltd
cld
pop
and
xor
cmpsb
test
dec
movsb
pop
ss
pop
mov
rorb
fldt
fnstsw
aam
pop
adc
popa
sbb
add
iret
push
mov
sahf
xchg
and
xor
sub
stc
je
or
mov
xor
dec
add
daa
dec
mov
lods
push
decb
sbb
xlat
test
aas
cld
idivl
xchg
fidivs
insb
fbld
movsb
cmp
lock
mov
pop
rcll
mov
sub
frstor
mov
pop
xorl
jmp
jns
ja
sahf
loopne
cwtl
scas
push
xlat
push
out
inc
cmpsl
xor
inc
data16
nop
aad
insb
mov
adc
push
lods
into
or
pop
loope
mov
loope
in
dec
repz
mov
or
pop
push
xchg
pop
jno
lock
xor
pop
ljmp
cld
jno
daa
sub
icebp
xchg
pop
lods
mov
andl
sub
out
std
inc
test
inc
jae
orb
inc
xor
ja
xor
jmp
push
pop
aad
fisttpl
sub
lret
mov
jns
jl
shll
es
dec
stos
repnz
lret
inc
fwait
mov
sarb
mov
xor
lret
jno
arpl
int
sbb
addr16
pop
or
addr16
mov
arpl
je
in
pop
ds
push
std
out
ds
fisttpl
dec
add
aad
sbb
ret
mov
push
xchg
add
pop
ljmp
repnz
outsl
push
mov
lea
pop
outsl
push
mov
mov
je
loop
add
addr16
mov
icebp
jmp
pop
lcall
int3
aad
insl
jecxz
jno
pop
mov
divl
lret
rorl
negb
push
dec
dec
push
push
fildll
pop
jl
or
cmpsb
mov
and
xor
dec
xchg
mov
jae
adc
movsl
cmp
cmp
mov
enter
in
out
popa
dec
punpckldq
iret
adc
cmpsb
inc
mov
pop
es
movsl
mov
mov
jns
xchg
mov
int3
sub
nop
pop
addb
jne
stos
mov
dec
adc
xchg
push
mov
js
mov
push
loop
mov
pop
es
inc
and
arpl
adc
cs
jnp
sbb
inc
cmc
or
inc
sbb
nop
fs
out
push
cmp
js
push
lock
mov
cmp
lods
mov
js
lods
insb
insb
sub
fldt
inc
mov
scas
push
jno
fidivrl
xchg
sub
pop
push
jge
daa
mov
repz
jnp
push
and
adc
xchg
clc
iret
ucomiss
outsb
addr16
cwtl
xchg
lea
pop
inc
cwtl
loope
pop
xor
movl
les
movsb
dec
sub
out
jecxz
xchg
mov
nop
push
xor
lds
jle
adc
push
jnp
popf
out
xlat
push
shlb
adc
jns
xchg
pusha
and
scas
add
xor
mov
pop
repz
xor
dec
add
mov
jne
fdivrs
insb
push
inc
inc
cld
inc
lods
mov
fidivrs
xor
jmp
loope
mov
mov
xchg
lahf
std
mov
divb
or
mov
xchg
dec
or
cmp
inc
mov
xor
push
pop
in
push
pop
mov
scas
test
pop
je
mov
sub
out
xchg
mov
je
push
mov
aaa
pcmpeqw
xor
fcompl
xorl
cmpsl
jne
cmpsb
sub
stos
jecxz
mov
in
inc
js
fldl
out
or
pushf
call
cli
stc
sub
insb
pop
lret
pop
pop
cmp
rorb
push
adc
mov
into
dec
pop
push
mov
add
pop
mov
cmc
cli
insb
xchg
mov
mov
test
dec
notb
fidivl
jge
lds
sbb
popf
adc
pop
stos
lcall
ljmp
sub
pop
cs
iret
int
push
add
cld
int
mov
mov
pop
mov
cmp
cltd
js
cmp
or
iret
int3
add
fcoml
jecxz
mov
das
or
mov
mov
imul
setg
or
icebp
in
outsb
mov
out
jge
inc
push
jecxz
stc
imulb
push
dec
lods
or
cmpsb
xorl
stos
xchg
test
pop
ret
outsl
jle
jns
jp
enter
jb
push
ret
ss
pop
mov
add
mov
xchg
cmp
jge
dec
repnz
add
xchg
xor
sub
adc
cmp
cmp
push
loopne
lret
pop
push
dec
mov
pop
test
fdivl
pop
mov
ret
cmc
cmp
jg
jl
movsl
sarb
aas
aad
xchg
add
aad
dec
push
js
stos
jge
xchg
pop
cmp
add
or
xchg
nop
call
ror
popf
mov
jbe
daa
adc
fucomp
jp
dec
adc
cld
pop
inc
adc
push
xchg
xor
sub
add
push
and
repnz
cmp
pop
sub
add
pusha
mov
inc
xor
sbb
stos
cmp
lock
cli
mov
inc
push
push
ljmp
xorb
stos
sbb
imul
pop
jne
loope
push
inc
leave
pop
outsl
cmp
sub
sahf
mov
xchg
dec
mov
push
jbe
rcrl
or
push
or
jmp
and
fisttpl
sbb
mov
lock
sti
mov
xor
mov
sarl
cmp
mov
or
mov
cld
das
jge
pop
push
add
mov
cmpsl
cmp
in
pop
xor
jp
hlt
add
fisubrs
int
test
and
ss
stc
mov
ja
adc
or
filds
mov
imul
repnz
mov
das
jge
pusha
leave
loopne
cli
inc
adc
push
imul
push
cs
fwait
pop
dec
fstpl
gs
negb
and
cmp
xor
insl
rolb
mov
aad
aaa
mov
inc
sub
add
in
and
adc
std
fnstsw
paddusb
jns
mov
fidivrl
into
cmpsl
jg
push
xchg
mov
cs
shlb
add
inc
mov
adc
and
xor
mov
fdivrl
inc
je
mov
arpl
out
out
sbb
adc
xchg
or
inc
and
cs
jp
pusha
jl
fstpl
aas
xor
stc
out
jle
and
pop
xor
jp
stos
sbb
cli
mov
and
or
sub
xor
aad
mov
stos
ret
fisttpl
mov
shll
stos
idivl
inc
rcll
pop
movsb
test
addr16
ds
jns
mov
mov
xchg
cld
in
sub
rcll
int3
or
mov
dec
mov
int3
aaa
push
test
std
jg
scas
jnp
adc
shr
outsb
les
and
rcrb
and
sahf
adc
xor
stc
imul
stc
roll
in
loope
jno
stc
or
jne
add
mov
mov
cld
pop
inc
push
or
sar
loopne
ja
int
frstor
popa
pop
inc
imul
lods
mov
cli
sub
mov
mov
xor
xchg
repz
lahf
mov
mov
jp
mov
fs
push
adc
int
push
adc
push
cmp
insb
je
xor
jae
rcl
sahf
popl
mov
repz
je
inc
sbb
loop
xchg
jecxz
test
insb
pop
pop
sub
push
cmp
cs
dec
pop
mov
and
pop
xor
pop
pop
rorb
xchg
lcall
jo
push
mov
add
pop
ss
xchg
jnp
bound
and
inc
mov
jp
movl
xchg
jl
xchg
jno
movsl
jp
xlat
push
rorl
rorl
mov
xlat
cmp
loopne
andb
sub
cmp
adc
insb
mov
loopne
push
das
rcrl
push
fidivrl
pop
lcall
pop
sub
jmp
cmpsb
add
add
insl
dec
pop
mov
fwait
pop
mov
push
and
insb
out
jae
mov
or
xor
std
jae
repz
xor
in
or
idivl
cmpsb
inc
add
lret
push
xor
clc
push
xor
loopne
sbb
lock
fisubrl
mov
mov
pop
negb
xor
adc
aad
addr16
ds
cmpsl
cwtl
ljmp
or
cmp
std
or
cs
dec
pop
adc
add
mov
out
repnz
bound
fwait
or
repz
dec
repnz
call
add
jns
push
and
pop
into
cwtl
push
push
jb
in
adc
in
scas
jne
push
subl
rcl
jns
jecxz
in
iret
xor
test
cmp
xchg
nop
lods
std
mov
dec
lds
sbb
fnsave
pop
rclb
or
add
mov
jp
inc
and
popf
fwait
pop
jp
es
daa
and
hlt
fcoms
pop
or
out
lcall
out
dec
incl
cmp
mov
mov
cmp
inc
mov
cmp
in
push
enter
imul
roll
test
ds
jle
xlat
lods
lcallw
das
dec
out
iret
xchg
lret
mov
xchg
imul
inc
cmpsl
push
sub
icebp
jae
notb
std
pop
sbb
mov
xlat
dec
sub
out
jle
push
sarl
mov
sbb
sbb
mov
es
out
pop
lods
dec
push
sar
cmp
jnp
jne
jbe
xchg
and
aam
mov
push
adc
loop
fildll
xorl
pop
jle
pop
mov
fidivl
xor
repz
push
xchg
loopne
mov
pop
popf
mov
mov
sbb
test
in
and
int3
in
xor
push
push
loop
fwait
das
outsl
cmp
or
mov
pusha
and
mov
mov
cld
stc
mov
or
imul
cmp
push
jp
sbb
std
sub
sub
cmc
sarb
and
dec
scas
dec
sti
addb
push
push
mov
sbb
mov
and
cmpsl
popf
outsl
push
cmpsl
shr
fldt
push
popa
xor
or
std
mov
add
fadds
xor
icebp
push
xor
mov
decl
sbb
sbb
xchg
scas
xchg
dec
xor
fildll
push
ja
inc
adc
mov
sbb
addr16
cmp
or
inc
sarl
mov
leave
mov
sbb
shlb
push
mov
mov
xchg
in
sbbl
outsl
das
or
fcmovb
mov
cmc
nop
sti
aaa
cmp
stos
or
xor
shlb
je
inc
mov
daa
xchg
psubsb
movsl
outsl
dec
mov
mov
lret
fiaddl
daa
popf
pop
mov
scas
pop
jmp
inc
jge
fmull
test
loop
jp
addl
sti
aas
fstl
mov
loop
push
pusha
cmp
cld
inc
mov
cmp
xchg
or
jb
pop
inc
test
sbb
jbe
out
xchg
xchg
or
je
mov
dec
shr
cs
xorb
jae
testb
or
xchg
and
dec
rclb
in
cmpsl
push
push
test
or
js
lcall
adc
addr16
jno
ret
inc
fsub
fsub
fs
imul
stos
mov
scas
lahf
push
mov
iret
adc
xchg
es
xchg
arpl
push
popf
inc
jecxz
ret
jecxz
mov
hlt
dec
cmp
mov
add
test
jg
shrb
addr16
jns
mov
clc
lret
fidivs
mov
outsb
and
add
jae
cwtl
xor
mov
sub
loop
stos
or
outsb
popf
adcl
pop
loope
jg
xor
sub
inc
iret
pushf
cmpsl
stos
xchg
cmpsb
mov
and
jp
and
xchg
xchg
or
pop
rcll
sub
pop
pop
adc
clc
sub
lods
jecxz
pusha
lret
or
int3
rcll
add
pushf
fwait
cmpsl
out
pushf
pop
add
test
mov
jp
xor
inc
ja
cmc
daa
mov
and
test
jae
mov
mov
jbe
cmp
or
incl
xor
and
movsl
cmp
mov
movsb
sbb
inc
sub
popf
sti
insl
jl
xor
inc
stos
dec
lock
imul
xor
xchg
push
cmp
es
adc
mov
cmp
repnz
push
dec
inc
shrd
push
fs
mov
or
cmp
mov
mov
jae
cmp
int3
pop
lods
test
pop
add
sar
addr16
sub
push
and
fdiv
jg
shrl
popa
adc
cvtps2pi
sub
fidivrs
mov
fstpt
ret
cli
jecxz
push
lock
pop
scas
iret
cmpsl
jle
jp
aam
xchg
lcall
mov
popa
pushf
xchg
mov
cli
pop
pop
mov
jno
pop
sbb
in
or
outsl
mov
mov
in
jp
xchg
inc
daa
in
and
sub
lods
and
icebp
mov
mov
test
inc
loopne
jp
fmuls
pop
and
dec
or
int3
into
add
lds
or
cli
inc
xchg
sub
add
adc
and
andb
mov
pop
daa
repnz
lods
iret
aam
inc
scas
enter
repnz
jno
adc
ret
cmp
mov
push
mov
mov
mov
cmc
cltd
fcomps
rcr
jl
ficoms
or
iret
popf
and
push
mov
pop
imul
mov
xorl
cmp
loop
in
mov
std
push
mov
jb
add
jo
mov
scas
scas
and
sbb
jecxz
mov
fsubrp
sub
adc
sbb
sbb
xchg
rclb
cmpsl
jp
stos
inc
sbb
out
or
es
sti
xor
ds
mov
js
jo
fwait
testl
sbb
push
les
mov
in
push
iret
push
dec
andb
fldenv
jo
roll
push
or
incb
and
adc
dec
pop
jl
push
dec
add
xchg
mov
add
sub
test
sbbl
mov
cltd
lcall
in
cld
fucomp
adc
sahf
inc
mov
mov
mov
push
jmp
addr16
lahf
or
add
inc
in
lods
adc
xchg
cs
and
shl
nop
sbb
pushf
shrb
cld
sar
mov
inc
jge
fstl
fbstp
mov
mov
inc
xchg
push
pop
pop
pop
arpl
pop
pop
xor
add
out
mov
adc
cwtl
movq
sub
popa
pushf
dec
adc
sub
add
xchg
cs
ret
in
pop
push
bound
insb
cmp
mull
cmp
call
out
sbb
clc
cmp
push
lret
xlat
fisttpl
dec
xchg
es
rcr
xor
pusha
stc
lahf
insb
sub
icebp
enter
cmp
int
mov
mov
pop
lock
imul
test
push
fisubl
stc
je,pn
cmp
int3
das
test
inc
mov
lcall
mov
in
inc
movsl
fs
mov
jg
sub
push
ds
sbb
loopne
stos
jmp
xlat
das
and
ja
jo
loopne
clc
sub
daa
inc
add
fs
jb
ret
sti
mov
mov
lcall
lret
push
mov
dec
or
rclb
bound
clc
mov
aas
inc
xchg
cmp
shrb
call
and
pop
mov
mov
pop
out
adc
arpl
sub
in
push
clc
incl
mov
andl
sub
adc
rcrb
cs
jae
or
in
xor
cmp
int
dec
call
ljmp
pop
cld
mov
popf
or
mov
inc
adc
mov
repnz
lods
pop
xlat
xor
push
test
mov
enter
in
push
div
and
or
movsb
jp
fnstcw
sti
lcall
dec
aad
add
loopne
or
movsl
add
mov
rcrb
jo
xchg
cmp
repz
mov
outsl
in
negl
ror
push
fiaddl
mov
movsb
rcr
stos
xchg
xchg
imul
cmp
pop
iret
arpl
ljmp
aam
pop
xor
xchg
lock
idivl
sahf
gs
ds
fldenv
mov
cwtl
push
pushf
dec
cmp
imul
adc
outsl
dec
push
inc
add
les
pushl
sub
mov
enter
inc
stc
sbb
insl
fcompl
adc
cmp
imul
mov
stc
push
mov
les
sbb
dec
push
push
push
or
mov
dec
push
mov
xchg
xchg
jo
lret
add
jo
add
xlat
int
pushf
pop
in
or
cmp
stc
mov
push
pushw
and
mov
push
xchg
int3
jnp
jg
lods
jno
mov
xor
mov
ss
subl
rcrb
sub
jg
ljmp
aam
cmp
or
or
aam
shlb
pop
arpl
fcmovnu
push
sbb
jo
dec
negb
mov
mov
cmp
ficomps
jl
add
arpl
mov
cbtw
mov
ss
ret
cmp
dec
loopne
fstp
and
sub
pop
bound
xor
leave
mov
test
cld
rclb
cmp
es
cld
cmp
mov
xor
cwtl
adc
jne
ds
jl
shll
cmp
stc
js
push
jb
cli
mov
inc
pop
and
shrl
mov
and
mov
sub
je
out
int
or
in
push
xchg
sub
out
sbb
into
sub
mov
fstpl
xchg
fists
mov
sbb
pop
lods
cld
cmp
loop
sti
inc
mov
mov
and
cmpsb
sub
loop
cmpsl
inc
inc
lahf
aad
mov
mov
arpl
inc
pop
and
mov
sub
lea
popf
sahf
mov
sub
incl
roll
mov
mov
adc
outsb
fldcw
pop
les
mov
jecxz
sbb
fistpll
mov
loope
fbstp
xchg
push
in
sarl
and
insl
mov
push
fistps
ja
inc
icebp
pop
in
pop
mov
mov
lret
pop
push
sub
aam
xchg
sbb
inc
mov
mov
shlb
and
std
xchg
push
xchg
dec
inc
test
add
rorl
pop
aam
inc
mov
sbb
push
insl
xor
xor
jmp
push
bound
or
nop
addr16
in
testl
into
xorl
or
sbb
sub
out
and
mov
lret
xor
into
or
adc
fistps
jl
mov
dec
mov
mov
lret
daa
mov
lock
out
outsl
mov
pop
or
sti
imul
xchg
sub
les
pop
ror
xor
jecxz
cltd
sbb
aaa
dec
sub
in
and
push
mov
aas
sub
mov
jp
idivb
nop
pop
adc
push
sar
xchg
mov
int
psrad
fiaddl
and
xlat
das
out
outsl
cmp
outsl
push
push
pusha
lds
mov
stos
les
mov
jmp
inc
out
lcall
push
mov
shl
mov
pop
xchg
jbe
pop
cli
cmpsb
bound
scas
pop
lret
fstps
xchg
sbb
ljmp
mov
sbb
stos
in
mov
fs
push
aas
jle
push
cmp
cmp
es
pop
je
pop
popf
dec
sub
pop
faddl
mov
lods
push
and
in
sub
std
push
cltd
dec
lods
pop
push
insl
mov
scas
lods
fucom
xor
push
inc
adc
pusha
push
stc
jno
or
ret
loope
dec
mov
lds
icebp
out
gs
rolb
scas
fisttpll
jg
ljmp
jl
cs
xlat
addr16
sub
and
stos
into
pushf
pop
popf
dec
fdivl
mov
jbe
ja
push
stos
lret
sbb
in
enter
mov
mov
jge
test
daa
lret
std
adc
sbb
sti
insl
push
in
enter
js
jge
xchg
in
xor
daa
cmpb
mov
rcl
pushl
mov
pop
sbb
mov
mov
ss
gs
mov
test
add
fstpt
dec
jno
or
cmp
or
and
insb
rolb
add
push
push
adc
ficompl
addl
popa
xor
sbb
push
mov
or
mov
cmp
fwait
sbb
mov
test
push
cmpsl
push
inc
inc
insl
call
aam
insb
jo
jp
and
iret
cmp
xor
or
cmpsb
mov
in
ds
xchg
dec
jg
sbbl
push
mov
jb
pushf
loope
fdivrp
fisttpl
add
mov
sub
cmpsb
xlat
mov
xchg
test
dec
data16
mov
out
pop
jp
sub
jl
js
cwtl
hlt
aas
scas
xchg
test
aad
mov
add
or
shlb
jge
iret
in
leave
sub
ficompl
add
bound
mov
pop
jge
pop
or
out
shrb
mov
fs
mov
pop
lea
xor
fs
jnp
cmp
cmp
ret
cmp
jno
pop
cwtl
xor
cld
push
inc
mov
les
inc
xchg
in
repnz
aam
xchg
shll
sub
cld
je
mov
mov
int3
cld
and
test
xor
shl
sub
outsl
fisttpll
out
push
ret
js
sti
jecxz
shr
push
xchg
sbb
mov
sub
push
xchg
cs
xor
jge
testb
push
jecxz
lret
push
shrl
xor
lods
and
icebp
inc
pop
ja
outsl
sbb
out
mov
or
inc
imulb
xchg
jg
fildl
std
leave
dec
jns
adc
leave
jb
xor
lcall
out
test
ss
sbb
inc
sbb
addb
or
gs
iret
fidivrl
popa
in
movsb
icebp
imul
fs
jns
and
sbb
je
add
dec
dec
mov
mov
bound
sahf
aam
movsb
lcall
inc
sub
shll
ljmp
xor
xchg
movsb
lret
sti
push
fisubl
inc
mov
call
lods
cmc
enter
icebp
out
clc
sbb
addr16
xchg
and
sub
daa
xlat
mov
cmpsb
mov
call
cmp
loopne
test
insl
mov
rcl
lods
gs
cmp
neg
jbe
or
lds
stos
jno
dec
in
jnp
mov
mov
dec
pop
shl
xchg
push
pop
jae
xchg
add
fistps
cmp
sub
jns
adc
iret
leave
shrd
sub
mov
sub
inc
stos
add
push
cmpsl
mov
xlat
add
jecxz
jp
mov
pusha
and
fwait
add
sub
into
lea
inc
mov
pop
mov
adc
push
adc
or
pop
mov
and
push
fiaddl
pop
pop
enter
push
arpl
ja
xorb
mov
mov
xor
jbe
pop
outsl
push
xor
fbld
push
inc
fsub
and
flds
mov
adcb
stc
in
ret
sub
pusha
mov
and
mov
xchg
subl
mov
push
outsl
xchg
mov
pop
sub
xlat
pop
jg
cld
xchg
mov
mov
add
adcl
andl
push
cmp
mov
lahf
or
std
fs
cmp
sub
enter
sbb
push
jg
cmpb
xor
daa
mov
cmp
icebp
jno
mov
jg
and
jnp
orl
shlb
insl
sbb
and
cmp
mov
xchg
stc
inc
cmc
mov
andl
movb
mov
test
icebp
or
xchg
imul
rcrl
bound
inc
add
xchg
cltd
dec
and
addr16
in
mov
fwait
imul
dec
jo
sahf
add
cmp
sarb
dec
pusha
repz
push
xchg
cwtl
dec
lret
ret
xchg
jecxz
adc
cmpsb
xor
mov
sbb
addl
mov
rcrb
adc
sub
lcall
stos
jne
or
outsb
dec
push
and
scas
mov
popf
out
fdivl
push
xor
sbb
xorl
mov
aas
and
outsb
push
push
xchg
dec
clc
insb
daa
sahf
lods
out
leave
add
enter
push
dec
jg
pop
cmpsb
hlt
sub
sbb
mov
int
sub
test
cmp
add
cltd
iret
repz
pop
dec
add
dec
pop
push
or
and
ficomps
sarb
mov
ljmp
stc
sub
cmc
xor
xchg
in
js
mov
mov
xchg
xor
test
pop
ja
inc
push
cmp
jle
les
add
adc
jge
pop
aam
jge
jp
repnz
ret
push
mov
loopne
dec
mov
add
and
je
pushf
mov
or
and
cld
inc
dec
cmpsl
addl
xchg
xchg
adc
xor
in
xchg
jge
les
dec
dec
popf
pushf
or
inc
cmp
lods
xchg
es
sub
mov
int
jo
xchg
bound
aad
ror
aas
imul
cmp
out
aaa
insb
in
jg
jecxz
jbe
int3
lods
loopne
xor
mov
sub
aas
lcall
lods
push
fidivrl
xchg
outsl
sub
std
sbb
out
ss
addb
test
dec
bound
dec
pop
sti
outsb
mov
fldenv
sub
out
icebp
scas
add
pop
dec
lods
imul
xchg
push
arpl
test
jae
out
lcall
repnz
or
rorb
xchg
add
addr16
iret
mov
fs
scas
mov
sub
fucomi
xchg
push
ret
jg
aaa
aaa
hlt
rcrl
jb
mov
loopne
mov
fdiv
orb
jge
and
es
dec
in
push
cmp
xor
add
loopne
pop
dec
lahf
push
test
js
je
inc
pop
pop
negb
inc
add
mov
popa
push
cmp
inc
mov
stos
push
mov
mov
insb
fisubrs
mov
and
inc
add
sub
aam
call
push
sub
jns
mov
or
cltd
add
in
outsb
xor
aad
loop
into
cmp
cmp
hlt
jae
pop
and
testl
push
cmp
xor
adc
inc
test
out
movsb
cli
mov
icebp
ret
clc
and
sti
outsb
jno
push
jle
mov
cmp
xchg
scas
pop
jl
je
jo
xchg
xchg
cmc
mov
addr16
outsw
arpl
push
mov
sti
mov
mov
sub
lcall
das
add
out
aam
add
adcb
push
negl
insb
mov
clc
sbb
stos
cmp
sbb
dec
inc
or
mov
mov
mov
adc
push
push
roll
cmp
add
cli
sbb
push
or
or
push
push
inc
inc
loop
roll
inc
imul
adc
in
and
jno
mov
and
add
pushf
and
repnz
adc
lcall
pop
cs
xor
jp
sub
bound
mov
pop
cs
aad
es
pop
xchg
push
xchg
lret
aam
push
push
stos
push
cmpsl
xchg
add
sar
fnstcw
pushl
cmp
add
loopne
adc
pop
dec
pop
cmp
push
xchg
sub
lcall
cmpsl
ljmp
andl
loopne
movsb
xor
and
inc
jnp
push
gs
hlt
popa
clc
jle
jmp
jnp
nop
inc
mov
mov
pop
add
ret
mov
and
lods
mov
mov
icebp
movsb
push
ficoml
or
adc
sbb
mov
mov
add
cli
adc
mov
ja
jmp
mov
in
sub
test
int3
movsl
pop
adc
mov
cld
fists
xchg
shrb
fcompl
or
push
mov
pop
subb
inc
adc
aam
xchg
hlt
xor
roll
push
pusha
and
push
cmp
dec
cmp
add
push
cmpsl
out
out
push
mov
and
mov
mov
fists
xchg
gs
insl
sbb
inc
pop
rorl
rclb
add
adc
sahf
push
sbb
es
cs
ret
popf
gs
dec
je
cld
and
jp
xchg
sbb
adc
pop
inc
fildll
inc
and
push
xor
or
test
cltd
test
sbb
jge
scas
pop
jae
mov
pushf
mov
pop
fidivs
mov
lods
add
inc
mov
in
sub
xor
inc
xchg
cli
push
mov
gs
lea
mov
jmp
shrb
and
sbb
ja
pusha
adc
out
pop
xlat
movsb
jecxz
aam
pop
mov
out
xor
sub
aaa
push
pop
push
pushf
pop
dec
cwtl
sub
frstor
ret
imul
fchs
cmpsl
jmp
jno
lods
fsts
iret
out
repnz
xadd
popa
dec
sub
or
mov
cltd
sti
jo
pop
repnz
add
lods
fidivs
dec
aam
cmpsl
scas
push
pop
cltd
add
mov
dec
pop
int
vminsd
mov
test
popf
stos
data16
add
fbstp
scas
cmp
lcall
mov
les
add
cmp
lcall
shlb
fldcw
jne
icebp
mov
inc
or
jno
add
mov
fs
mov
rolb
movsl
inc
jb
jge
mov
xchg
popf
mov
sahf
jecxz
adc
scas
or
popa
mov
mov
dec
dec
loopne
push
lods
adc
mov
mov
push
xor
sahf
je
sbb
pop
or
xor
lea
sti
and
in
out
mov
push
or
cmp
inc
dec
jae
xchg
out
icebp
cmp
data16
cmp
leave
xchg
testb
testl
cld
out
cwtl
pop
mov
leave
or
out
out
pop
or
subb
push
push
xor
cs
movsl
unpckhps
xlat
out
cmp
sub
cmovle
mov
pop
push
sbb
and
lahf
jne
and
fstp
jbe
adc
dec
add
mov
cmp
jbe
test
inc
dec
outsl
dec
push
mov
mov
jmp
pushf
push
mov
popf
add
repnz
sbb
roll
mov
mov
adc
scas
pop
pop
in
aaa
and
inc
in
test
dec
sub
or
mov
addr16
or
or
aaa
std
ja
ljmp
ret
fnstcw
repnz
test
insb
jp
and
stc
test
xor
out
and
popa
je
int3
mov
ret
pushl
cli
inc
pop
hlt
inc
daa
push
fldt
and
test
stc
pop
rcrl
fucom
js
xchg
pusha
pop
inc
dec
sub
lret
add
dec
jne
iret
cltd
pop
mov
mov
adc
jo
jmp
push
fisubs
push
cltd
mov
in
dec
and
in
rcll
cmp
int3
pop
leave
adc
xor
xor
sti
mov
cmp
ja
xchg
or
pop
test
or
mov
rorb
sbb
into
fistps
jns
sbb
mov
adc
sti
cmp
cmpsl
idivl
sahf
xchg
mov
cmpsl
test
or
mov
in
xlat
into
test
xchg
adc
pop
test
repnz
jle
jbe
loop
dec
sbb
js
xor
outsl
daa
xchg
jb
pop
adc
ljmp
incl
stos
mov
xchg
cltd
sahf
mov
jbe
xor
inc
mov
adc
ss
inc
mov
mov
push
xchg
pop
in
mov
mov
mov
mov
pop
stc
cltd
loope
sahf
repnz
div
xchg
std
cmp
xchg
cmp
xchg
pop
or
rcll
adc
and
jae
js
sbb
nop
bound
shlb
inc
sub
push
sarb
loopne
push
jns
movsb
push
sub
out
jmp
or
cmpsb
imul
imul
inc
ret
or
sub
jne
push
test
pop
in
gs
mov
xchg
loop
mov
push
xchg
mov
ja
jmp
pop
insl
test
and
mov
or
int
int3
xorl
push
nop
or
sbb
jl
rcrl
mov
pop
lock
or
not
add
pop
sti
stc
ficoms
jb
test
das
rcll
xchg
push
cmp
sbb
jnp
mov
dec
cmp
fwait
ljmp
daa
imul
mov
out
push
push
dec
inc
add
sub
stos
jmp
repz
sti
sub
fs
pop
scas
cmpb
cmp
aam
inc
fisttps
clc
jp
in
xor
into
mov
xchg
mov
mov
out
push
add
xor
dec
adc
mov
fs
sub
nop
push
pop
adc
dec
sbb
sbb
push
fcmovne
mov
xchg
jmp
jno
xor
jne
sbb
xor
xchg
movsl
add
aaa
cli
sub
xchg
sbb
shrb
es
incl
lods
repnz
std
aaa
jp
ds
inc
jne
bound
or
push
push
arpl
test
stos
push
jmp
ljmp
xor
popf
into
ss
scas
andl
add
dec
add
dec
test
mov
push
pop
popf
js
pop
pushf
jne
pop
inc
mov
push
push
and
imul
stos
cmp
xchg
push
inc
es
lret
mov
cmpb
ret
sub
in
addr16
jmp
fsub
enter
int3
or
xor
cmp
gs
jno
xchg
add
sub
xlat
mov
int3
cmpsb
push
dec
ret
dec
mov
add
lret
js
push
lret
jge
daa
cmpl
js
rol
sub
inc
mov
add
xor
dec
lahf
pop
test
adc
add
xor
ret
insl
mov
ret
pop
xor
or
ja
mov
sub
or
cmp
pop
arpl
imul
lcall
pop
mov
mov
cld
lahf
outsb
pop
xchg
and
cmp
inc
or
pop
and
cmc
jle
or
pop
aad
dec
cli
push
jns
xor
test
sbb
ss
out
xlat
int
sbb
push
mov
mov
jbe
inc
push
fcmovbe
test
ret
cmp
xchg
test
lods
out
pop
stos
mov
cmp
add
add
sbb
lret
mov
inc
add
movsb
push
shl
xchg
out
add
aas
addr16
aad
lret
cwtl
mov
xor
jns
sti
stc
movsb
idiv
add
lods
push
fsubs
adc
loope
sbb
jns
cli
or
dec
dec
xchg
mov
js
in
data16
push
push
cli
stc
pusha
adcl
xchg
push
movsb
or
je
bound
dec
mov
fisubrs
dec
outsb
jbe
ljmp
sti
adc
jmp
in
dec
mov
outsb
js
lods
mov
mov
xor
mov
ds
mov
bound
sbb
in
jns
mov
pusha
outsl
jg
aas
jnp
in
ret
cli
inc
rolb
jg
pusha
mov
aas
sub
leave
and
mov
sbb
adc
push
dec
add
outsl
push
push
push
cmpl
int
mov
cmp
shr
stos
xchg
sbb
ficompl
sub
repnz
ret
sub
icebp
add
jb
xchg
dec
jb
adc
sahf
ret
daa
movl
cmp
add
call
ftst
repz
push
bound
test
or
out
out
jnp
lret
inc
lea
mov
and
out
test
lock
aas
cs
pop
sub
lea
inc
xchg
jno
sbb
fwait
ror
sbb
mov
xchg
sub
cmpsb
scas
push
push
in
addr16
repz
clc
loope
jb
push
in
push
push
cmp
notb
cmp
or
outsb
sub
mov
imul
cmp
xor
jge
push
jnp
and
inc
lcall
add
or
std
sarb
cmp
lea
adc
outsl
ret
add
pop
repnz
xchg
ja
movsl
shl
mov
loop
stos
das
adc
mov
xor
jge
xchg
aad
popa
ss
pop
in
out
mov
xchg
adc
repz
shrl
loope
lods
xchg
shr
inc
lret
int3
and
sub
sbb
inc
test
aaa
pop
cltd
mov
pop
in
inc
stos
push
push
jle
mov
lds
lret
mov
mov
fldenv
div
mov
jmp
and
andl
mov
imulb
sbb
add
and
subb
in
cmpsl
out
push
and
mov
fidivrs
les
into
inc
inc
ja
movsb
adc
mov
jb
adc
scas
aas
lock
cli
subb
nop
and
and
popf
push
outsl
std
mov
iret
movsl
cltd
xor
dec
or
ja
andb
dec
stc
jl
dec
cmp
cmp
shl
push
fildll
xchg
clc
pushf
mov
fstpt
iret
pop
xchg
movsb
xchg
pop
lahf
and
clc
jge
out
xchg
mov
aaa
jge
sbb
add
ret
xor
adc
lret
xchg
ret
push
and
test
daa
dec
scas
mov
ret
push
inc
call
mov
jo
and
lret
jne
ja
loop
pop
call
mov
mov
loope
sub
adc
loope
or
addl
push
arpl
mov
pop
jb
push
repz
mov
cltd
loope
push
mov
jge
dec
sub
mov
sub
mov
mov
lret
sub
aam
jnp
push
mov
mov
or
and
std
push
fisubl
cwtl
cmc
push
sbb
or
adc
aam
dec
mov
xchg
cmp
cmp
icebp
jae
or
sahf
loop
aad
cwtl
stos
xor
xchg
pop
imul
dec
adc
cwtl
mov
cmp
std
adc
lret
jno
incl
lret
hlt
fcmovnb
cs
enter
jl
add
push
dec
and
add
repz
jb
lods
pushf
lea
bound
jno
hlt
repz
push
xchg
jnp
movsb
push
lods
mov
pop
inc
iret
cwtl
loope
mov
dec
mov
sub
cwtl
dec
sti
jns
outsb
add
fs
test
insb
mov
xor
push
inc
cmpsb
xchg
dec
scas
jmp
jb
arpl
icebp
scas
loope
jmp
loop
dec
mov
cmp
jns
fisubrl
call
sub
aas
imul
add
jp
fdivrs
adc
and
popf
lea
scas
push
lods
mov
test
inc
mov
pop
ftst
mov
loopne
pop
mov
enter
aad
push
cmp
sbb
mov
enter
cltd
add
loop
mov
xor
push
cs
push
jge
fnstcw
cmp
lcall
jb
shl
int
cli
outsb
inc
xchg
fcomps
sub
out
idiv
imul
jmp
inc
or
mov
or
addl
sub
jno
push
mov
jns
or
pop
sub
call
int3
cmp
push
sbb
jbe
xor
out
cwtl
or
in
pop
push
mov
in
or
pop
leave
rcrb
loopne
push
xor
int3
and
jge
jb
shrb
mov
mov
aas
push
rcll
fwait
dec
dec
fcompl
bound
sbbl
movsb
dec
pop
int3
hlt
or
jmp
lea
mov
xchg
shrb
pop
sbb
clc
inc
stos
imul
das
xchg
inc
bound
nopl
push
sub
sub
cmp
ds
add
int3
cmpsb
lcall
jle
mov
test
cmc
stos
orb
cli
jp
cmp
sub
pop
sbb
ss
jp
inc
and
xchg
sub
inc
add
popf
pop
dec
in
test
in
lock
mov
inc
xor
fidivrl
outsb
jo
in
sub
mov
inc
pop
mov
data16
cmc
das
push
xchg
pop
hlt
push
sti
jmp
js
jo
push
pop
pop
cmp
mov
mov
and
repz
xchg
lods
jmp
mov
mov
dec
add
or
and
and
int3
das
xchg
sbb
es
sbb
imull
xor
and
fwait
mov
fadds
jae
xor
addb
rorb
outsb
mov
popa
pop
in
or
test
xchg
and
jne
xor
and
and
dec
cmp
enter
add
push
test
ja
add
push
fwait
bound
adc
dec
jo
adc
pusha
jne
pop
mov
inc
mov
push
mov
xlat
and
jecxz
dec
popf
cmc
mov
adc
rorl
mov
fldl
fiaddl
in
shr
and
loopne
sbb
lods
clc
mov
fstpt
pop
arpl
fcompl
adc
xchg
mov
xchg
loop
dec
pop
std
fwait
imul
adc
xchg
shrl
dec
call
inc
add
clc
pop
mov
popf
fcos
mov
scas
sbb
test
andl
mov
aad
pop
jne
adcb
ljmp
cmp
adc
jg
imul
test
cmc
push
xchg
mov
fnstenv
pop
push
mov
push
xor
jno
lea
das
xchg
xor
stos
pop
pop
fcmovnb
push
dec
fcomip
call
aas
and
out
movsl
mov
pop
jl
push
inc
out
dec
test
popa
int
add
jno
scas
pop
xor
xchg
lods
mov
cmpsb
pushf
xchg
sbb
ss
and
addb
push
mov
lret
inc
adc
jb
aas
mov
fldenv
scas
sub
imul
dec
jb
shrl
push
sub
int
imul
inc
sti
pusha
in
pop
xor
mov
scas
bound
test
dec
in
test
mov
mov
mov
ljmp
outsb
or
subl
cmp
fs
call
lret
aas
jns
mov
pop
leave
es
jmp
pushf
into
stc
ss
dec
push
movsl
push
mov
pop
push
cltd
das
into
push
inc
adc
in
fists
and
jmp
pop
je
cmp
aam
adc
mov
push
and
mov
push
add
jl
push
mov
jbe
xor
sub
sarl
pop
aas
add
push
pop
popf
add
pop
jg
cmp
pop
xchg
mov
gs
sbb
sub
bound
les
push
aad
cld
cmpsb
jl
call
push
loop
fidivrs
ficoms
or
jmp
fildll
mov
jle
mov
sarb
mov
js
push
mov
xchg
hlt
cmovbe
inc
xor
mov
jns
bound
xor
adcl
movsl
dec
in
cmpw
xor
lret
adc
mov
pop
jecxz
push
pop
pop
xchg
pushf
mov
movzwl
cmp
jbe
into
xchg
pop
outsb
cmpsb
jbe
xchg
jb
rorb
int
jne
out
add
imul
inc
add
cld
leave
mov
mov
cltd
xor
mov
add
stc
loope
xor
repnz
dec
out
sbb
aam
sub
mov
dec
xor
fstpt
xor
notl
push
jge
test
sbb
push
xchg
mov
push
hlt
cltd
int3
movsb
ret
dec
in
jp
xor
outsl
sub
rcl
push
aaa
push
mov
in
push
dec
sub
iret
jge
sub
dec
adc
push
insl
cltd
std
fimull
sbb
lea
add
mov
push
or
cmc
mov
sub
fdiv
jge
xor
into
mov
in
scas
lahf
imul
mov
or
adc
xchg
ret
mov
data16
mov
fwait
xchg
dec
pop
icebp
jl
mov
push
mov
inc
fimull
pop
aaa
cmpsl
sub
dec
addl
mov
pop
lods
leave
aad
add
mov
or
es
lea
test
xor
xchg
loopne
fwait
clc
mov
les
cmpsl
fldcw
sarl
in
iret
test
enter
into
xor
mov
mov
mov
adc
pop
adc
cmpsb
aam
filds
jmp
push
mov
push
test
fsts
mov
cld
pushf
or
scas
push
mov
cmp
arpl
test
outsl
in
inc
and
cmpsb
pusha
xchg
add
mov
dec
mov
adc
shl
sub
mov
jo
xor
shlb
and
lock
stc
xor
mov
call
ds
dec
pop
mov
lock
pusha
push
mov
aas
enter
add
jne
arpl
mov
daa
data16
std
sub
fsubp
gs
adc
push
stos
cmp
mov
push
sbb
out
outsb
push
jmp
sub
out
imul
sbbb
repnz
mov
xchg
mov
lahf
daa
cmp
adc
clc
outsb
or
insl
enter
test
mov
jle
jb
in
loop
insb
xorb
dec
test
adcb
adc
and
jcxz
repz
movsl
adc
mov
add
loopne
mov
js
jae
sbb
aam
sbb
fs
ret
jnp
idiv
xchg
imul
or
lock
mov
xor
into
push
ja
ret
mov
mov
insb
adc
popf
push
push
xchg
push
cmpsl
jecxz
adc
repz
out
mov
popa
fcoml
mov
shl
movsl
int3
pop
lock
loop
add
stc
or
cmp
mov
push
fsubrs
jno
popf
xor
cmpsl
popa
rcl
or
inc
aaa
js
sub
pop
imul
push
and
pop
add
mov
mov
jle
xor
pop
insb
aaa
mov
cmpsb
push
leave
add
push
fcomps
mov
mov
sub
call
ljmp
scas
mov
insb
fistpll
scas
stos
xchg
push
mov
movsb
mov
mov
inc
mov
nop
inc
inc
nop
fadd
xor
add
jl
and
bound
dec
popa
xchg
imul
inc
cmp
mov
scas
jmp
fs
lds
adc
fcoml
stos
adc
stc
iret
bound
nop
clc
adc
mov
inc
fisttpl
add
pop
sarb
cld
bswap
jo
jb
adc
testl
sbb
adc
pop
sub
into
insl
ljmp
cmp
xchg
mov
loop
cwtl
int
xor
jns
fildll
icebp
xchg
mov
sbb
or
push
xor
mov
les
popa
cltd
lock
enter
ficompl
fdiv
ss
jnp
xor
jp
loope
and
sahf
push
and
xchg
pushw
jp
scas
mov
movsb
pushf
lds
scas
push
loopne
sub
aad
mov
dec
bound
xlat
pop
adc
mov
dec
insb
subb
fst
inc
stc
jo
sarb
pushf
mov
neg
out
jle
and
jne
pop
in
sub
jle
fs
mov
clc
imul
ds
push
shll
outsl
xchg
xchg
fwait
sub
add
fstpl
mov
xchg
and
or
ret
movsl
shlb
add
jl
test
lds
pop
stos
inc
cmp
in
mov
cmp
ss
or
lret
dec
jb
mov
pop
sbb
inc
mov
pop
out
pop
mov
pusha
and
inc
pushf
out
xor
rcll
sub
mov
in
jmp
pop
mov
mov
adc
addr16
and
sbb
dec
mov
mov
inc
loope
sbb
jl
in
pop
mov
lods
pop
push
js
sub
dec
shrb
scas
daa
sub
pop
pop
xchg
jl
mov
push
mov
mov
cmp
idivl
iret
cwtl
inc
repnz
push
push
cmpsl
repz
aad
cmpsb
iret
mov
cmp
ds
push
fidivrs
dec
xchg
inc
roll
mov
mov
rolb
pop
cwtl
cli
sub
scas
loop
push
xchg
xor
xor
adc
adc
jmp
jl
pop
in
bswap
lds
gs
loop
mov
fsts
jno
inc
mov
adc
insl
adc
inc
mov
mov
mov
cltd
je
fidivrs
sahf
das
lods
sub
imul
dec
cmp
idiv
dec
sahf
jno
sub
xchg
push
mov
repz
les
cld
jno
pop
out
push
mov
dec
add
cltd
sarb
shlb
insb
ja
dec
sub
outsb
adc
call
add
adc
pop
add
lcall
add
es
jecxz
popf
rcrl
outsl
xor
inc
add
cmp
and
test
or
es
dec
mov
jno
sti
outsl
xchg
push
jnp
lock
mov
aam
push
pop
or
xor
push
je
add
loop
popa
test
push
cwtl
popf
ror
test
fdivl
ja
bnd
leave
lret
xchg
pop
jl
ljmp
push
or
hlt
push
sbb
jns
mov
mov
test
out
into
cmp
push
ds
xchg
stc
xchg
arpl
or
mov
stos
into
sahf
mov
insb
xchg
mov
xor
hlt
dec
mov
icebp
add
xor
js
inc
roll
imul
add
jbe
mov
int
pop
xor
or
inc
jae
sbb
pop
dec
mov
loopne
push
mov
pushf
mov
xchg
push
and
bound
sbb
movsb
mov
mov
mov
push
and
lds
aaa
cmp
xor
push
fdivrs
add
frstor
lret
pop
jnp
xchg
fwait
mov
adc
mov
mov
loop
adc
insl
jno
fadds
std
sub
cmp
shr
nop
int
sbb
insb
xorb
sub
lret
pushf
push
sub
add
in
sbb
pop
movsl
pushf
xlat
arpl
push
imul
xor
xor
sbb
out
adc
add
or
lea
adc
fidivl
negb
sub
sahf
popf
pusha
out
jno
call
xchg
lds
insl
imulb
xor
jmp
ret
sub
or
xor
jg
pop
add
sub
int
hlt
push
popa
cmp
insl
int3
sahf
aas
aaa
repz
sbb
inc
xchg
repnz
aam
in
jecxz
loopne
mov
jp
cmp
lahf
or
and
mov
xchg
push
std
aam
push
inc
add
lods
xor
lds
cwtl
fcmovnu
lret
loop
test
cld
mov
and
add
lds
dec
mov
cmpsl
out
pop
sbb
or
mov
and
pop
lret
push
push
popa
mov
push
and
inc
xor
jnp
jg
jns
lock
loope
in
cmp
fmul
or
movsl
jns,pn
push
push
mov
xchg
sub
inc
dec
loopne
iret
repnz
cmp
in
mov
gs
fisubrl
insb
subb
dec
out
rcl
das
fsts
add
in
mov
gs
lods
ss
cwtl
aam
ficompl
leave
pop
outsb
int3
mov
lock
sub
dec
cli
xor
dec
adc
push
clc
ret
iret
push
jg
psubsw
out
mov
test
stos
loop
mov
sub
imulb
pushf
cltd
cs
and
sub
leave
xchg
inc
dec
arpl
lahf
sub
out
mov
js
lock
lods
bnd
push
test
or
aas
loop
lods
mov
mov
je
es
adc
ja
leave
je
int3
jmp
sbb
stos
sti
sbb
push
mov
daa
sti
test
jp
cmp
pop
pop
xor
bsf
jno
sub
jns
push
cmp
gs
out
jns
and
xchg
aad
cmpl
xchg
sub
push
aam
and
das
push
scas
and
test
insl
push
popa
sub
test
roll
or
push
and
hlt
int3
inc
cmp
mov
push
and
push
mov
jl
mov
clc
pop
xor
inc
mov
out
clc
aas
sbb
push
mull
xchg
sub
fadd
fdivl
out
jmp
ss
jge
add
ret
mov
and
iret
int3
outsb
rolb
mov
leavew
rcl
add
hlt
movsb
xchg
movsl
shrb
xchg
ror
movsl
bnd
jg
push
cld
aad
xor
xchg
push
lret
addr16
sbb
pop
nop
in
jmp
cmpl
movsl
add
ds
idivl
push
jb
jmp
es
ficompl
dec
nop
mov
rcrb
inc
mov
imul
mov
int3
lret
mov
mov
int3
std
test
cmp
xlat
dec
in
test
int
in
rcr
push
aaa
pop
sbb
shll
mov
addr16
scas
sub
xor
or
lcall
pop
push
ds
cmpsb
xor
jae
sbb
jbe
and
add
idivl
in
dec
aad
imul
inc
icebp
leave
shlb
cmp
out
cmp
ret
cs
jnp
or
adc
scas
in
push
mov
sub
sub
pop
mov
pop
arpl
push
scas
inc
mov
mov
cli
pop
mov
cltd
in
dec
or
mov
cmp
inc
inc
dec
shll
jb
mov
es
aad
fisubrl
ficoml
cmp
xchg
inc
daa
dec
daa
ljmp
popf
and
aas
imul
mov
xchg
xor
cmp
xor
stos
xchg
clc
and
rcrb
adc
xchg
xor
fsts
mov
add
pop
cmpsb
push
fwait
lcall
jmp
jae
mov
push
inc
xchg
cmp
mov
rcrb
out
inc
loopne
inc
in
lods
xor
dec
xchg
mov
mov
push
push
jne
push
push
das
aas
call
xlat
cmpsl
sbb
sti
inc
repz
dec
push
leave
mov
outsb
shlb
xor
ret
lret
lret
and
push
dec
call
rcll
sub
cwtl
pop
cmpsb
into
xchg
imul
push
into
push
ficomps
rcrl
fdivs
icebp
mov
in
add
loopne
sub
in
outsl
fstpt
push
mov
imull
fdivrs
sub
inc
dec
je
mov
movsb
mov
nop
mov
cs
lahf
dec
add
out
hlt
cmc
mov
push
movb
shl
cltd
sbb
inc
aaa
shll
jmp
hlt
pusha
xchg
into
clc
mov
out
xor
imul
outsl
inc
test
test
add
xchg
dec
mov
mov
in
test
clc
xor
jecxz
out
rclb
xchg
mov
push
nop
push
ljmp
loope
bts
xchg
sub
or
testb
pop
xor
push
addr16
insl
sub
inc
test
inc
push
cmp
sarl
pop
xchg
or
popf
data16
int3
xchg
adc
and
and
or
jo
mov
mov
cltd
shrb
in
xchg
cmp
in
hlt
xorl
icebp
icebp
repz
ds
cltd
mov
testb
mov
jmp
out
xor
jg
fsubrl
xchg
shl
test
rcll
repnz
add
cmp
xorl
mov
inc
lret
daa
lods
addb
adc
cmp
test
or
mov
add
int
sti
pop
jge
dec
and
xor
xor
xchg
ss
mov
cmpsb
jae
mov
sub
xor
jo
add
out
jno
sub
mov
xor
add
in
jl
jle
push
test
cltd
adc
sbb
rcl
test
outsl
sti
xchg
jge
fldenv
dec
xor
icebp
stc
sbb
mov
push
imul
jmp
testb
jge
adc
xor
push
sbbl
dec
sahf
stos
adc
popa
push
in
push
aas
iret
add
push
mov
or
testb
int3
inc
cltd
fimull
stc
cld
xchg
pushf
mov
sub
dec
sbb
call
or
lcall
mov
sub
pop
adc
mov
add
stc
xor
repnz
dec
pop
mov
mov
out
or
mov
mov
sub
lea
cld
xchg
inc
nop
mov
cmp
sub
mov
sub
insb
jecxz
push
or
sub
sti
lahf
adc
inc
push
push
push
cmp
jle
outsl
pop
or
mov
add
dec
test
hlt
jbe
je
sti
test
push
ljmp
cwtl
sub
dec
pop
cs
daa
ret
xor
out
push
ljmp
outsl
mov
cmp
mov
pop
push
mov
xlat
jp
outsl
push
mov
xchg
sub
dec
add
ja
pop
incl
js
das
jae
xchg
cmpsb
ret
dec
cwtl
dec
daa
repnz
fistpll
rcrb
outsb
adc
into
data16
xor
sbb
stc
pop
dec
jge
insl
shrl
xchg
jmp
mov
cli
push
inc
cmp
add
push
lret
std
out
cmp
cmp
and
xor
xchg
or
insl
sub
mov
popf
push
movsb
int
lahf
add
leave
mov
mov
sub
sti
jmp
movlps
imul
mov
and
sub
cltd
stos
ret
iret
movsl
adc
jne
sub
ret
js
cmpl
xor
sar
adc
sub
add
arpl
push
int
roll
cwtl
push
mov
repnz
sub
xchg
jge
cmc
mov
arpl
and
mov
or
out
sbb
arpl
dec
inc
adc
sub
repnz
inc
xlat
and
call
movsb
cmp
xor
scas
and
jmp
pop
sub
xchg
bound
iret
cmp
sar
test
dec
scas
iret
ljmp
and
mov
jle
scas
iret
fisubl
add
push
jl
push
and
and
test
mov
mov
or
js
pop
sub
ret
mov
jg
es
mov
aam
movsl
push
jne
pusha
popa
mov
dec
into
cwtl
mov
push
lret
aaa
shlb
test
cmpl
add
fildll
xor
xor
push
sub
xor
mov
pop
stos
out
xor
inc
data16
adc
cmp
sub
cwtl
aaa
sbb
adc
and
incl
pop
test
test
movsb
add
xorb
orl
mov
mov
xor
movsb
in
and
mov
push
sub
jl
push
inc
pop
dec
xor
lret
add
les
fs
std
test
jbe
das
mov
dec
xor
shlb
adc
repnz
or
cmpl
aas
push
test
push
or
push
loope
repnz
stos
lods
lret
sub
mov
je
adc
addl
loop
add
std
mov
icebp
cmpsl
daa
inc
and
fwait
adc
xchg
lcall
and
das
mov
cmp
mov
jno
popa
lret
fimuls
dec
mov
inc
repnz
int
sbb
adc
xchg
inc
add
add
pop
nop
and
pop
adc
jns
pop
ja
cli
cmp
lcall
addr16
rcr
mov
aas
add
or
push
mov
mov
pop
idivb
pushf
shrb
icebp
es
adcl
push
pop
nop
dec
imul
push
dec
fnstsw
mov
mov
fldenv
lock
sub
ljmp
scas
jae
jns
pop
or
pop
test
lret
movsb
push
xchg
mov
jno
inc
pop
stos
xor
inc
jg
filds
repz
mov
push
test
jmp
jbe
adc
cli
pop
cli
xor
cmp
mov
popf
inc
ja
dec
jns
popa
sub
test
enter
mov
pushf
add
xchg
sti
inc
bound
jecxz
test
sub
or
push
stos
sub
sub
ja
dec
pop
cwtl
aaa
sbb
jns
cmpsl
mov
cmpsl
hlt
add
mov
mov
outsl
add
or
imul
jb
xor
idivl
dec
cli
add
jmp
cltd
sarb
roll
mov
int
stc
mov
sub
push
cmp
pop
jmp
dec
mov
je
daa
clc
aaa
in
cmpl
adcl
fdivl
cmp
cli
std
or
inc
xchg
leave
mov
lds
push
sahf
pop
sbbb
sarb
dec
push
divl
out
lods
dec
dec
xor
loopne
xor
sarl
aas
stos
push
inc
in
in
insl
mov
fwait
or
pop
cmp
or
aas
inc
cli
push
popa
mov
lea
test
std
jl
xchg
jg
in
cmp
outsb
and
orl
fimuls
insl
fidivrl
imul
popw
in
xor
sbb
push
sub
xchg
lahf
in
icebp
and
repnz
xor
sub
fmul
pop
int
push
xor
lahf
and
sti
push
mov
push
sbb
es
test
sbb
xor
hlt
mov
test
and
out
imul
mov
cmp
rorl
rorl
imul
popa
popa
fld
or
mov
sub
fdivp
mov
ret
xlat
mov
inc
mov
in
sbb
lea
xor
push
es
js
push
movsl
arpl
add
cmp
pushf
dec
pop
lock
xchg
sub
mov
int3
xor
sbbb
jecxz
cmp
sti
aas
inc
pop
lcall
xor
add
das
in
int
ret
add
and
push
mov
jne
jno
mov
test
xor
jecxz
mov
mov
sbb
or
ja
and
inc
push
sbb
loopne
cmp
cld
aas
jb
sub
add
cmpsb
jmp
sbbb
js
pop
mov
test
sbb
jae
movsl
add
test
negb
add
pusha
jp
idivl
mov
imul
sbb
addr16
in
sbb
testb
fisttpll
into
sub
xor
dec
and
shlb
pushf
cltd
jne
out
sub
push
nopl
inc
outsb
xor
mov
cmp
mov
stc
sti
lcall
in
outsl
mov
dec
adc
cmp
mov
cltd
inc
int3
movsl
test
jge
dec
call
cmp
ljmp
push
shrb
popa
mov
loopne
lock
stos
popf
stos
jne
aam
popa
ret
adc
test
sahf
cmp
pop
roll
insb
mov
nop
pop
sub
xchg
lods
and
dec
mov
sbb
add
test
cmp
xchg
mov
in
sub
and
out
shrl
das
hlt
imul
cmpsl
gs
in
adcl
lock
pop
test
or
pop
push
xlat
dec
or
rcr
xor
and
adc
iret
lcall
jmp
pushf
sbb
loopne
jns
adc
cmc
mov
and
jl
das
lcall
mov
mov
icebp
jo
std
mov
sbb
push
in
mov
xor
sar
lock
nop
push
or
cmp
or
xchg
inc
xor
in
pusha
movsb
dec
xchg
aam
fsub
ja
call
and
addr16
in
add
inc
adc
lock
das
sbb
dec
popa
fs
push
xchg
sti
lahf
inc
or
pusha
pop
jecxz
loope
dec
dec
xor
lds
sub
cmp
sbbl
jp
in
ficoms
scas
or
ljmp
divb
inc
mov
xor
mov
pop
push
imul
fstpt
push
jb
add
inc
push
or
push
cmp
jge
jbe
sub
xor
popf
mov
jecxz
mov
repnz
push
push
pushf
xor
outsb
idivl
sbb
jno
cmp
fmuls
mov
cmp
lock
aas
mov
xlat
dec
add
fwait
jge
and
adc
pop
mov
icebp
pop
test
mov
add
mov
mov
or
pushf
dec
lret
stc
push
in
add
sbb
sbb
icebp
lods
iret
push
mov
dec
inc
mov
pop
shll
sub
out
insb
mov
aam
ret
imul
or
in
je
gs
cld
jp
lcall
lods
arpl
xor
sub
dec
fdivr
arpl
sbb
add
lret
fsubs
std
jg
pop
ret
jp
cmp
sbb
inc
fwait
xor
mov
inc
rcrl
xchg
jecxz
push
sub
or
jmp
push
fistl
push
sub
pop
cmp
adc
mov
sub
js
and
mov
adcl
aas
div
push
in
push
insl
mov
jmp
pop
cmp
add
sbb
cltd
movsb
int
push
in
push
insl
shl
or
cmc
xchg
and
sbb
sbb
jmp
cltd
add
push
jge
inc
sub
cvtdq2ps
jp
xor
jecxz
imul
lea
ja
jmp
in
out
push
fimuls
adc
dec
sbb
femms
mov
popa
lahf
and
sub
adc
movl
pushf
jne
loope
mov
stc
lret
or
cmp
int3
into
pop
gs
push
ficoml
mov
push
ficoml
xor
enter
mov
iret
dec
jns
sti
frstor
lcall
fs
rorb
std
out
or
xor
sbb
or
xchg
mov
inc
xchg
or
adc
jb
push
mov
mov
jb
fcoml
insl
inc
mov
aaa
mov
inc
sbb
jge
lods
bnd
roll
dec
mov
sub
aad
out
pop
push
pop
xor
popf
arpl
iret
sub
jbe
shlb
gs
mov
mov
insl
or
ljmp
test
cmp
fstpt
inc
lcall
sbb
ja
or
jle
pop
xor
movsb
insb
push
in
push
addl
stos
ret
add
sarw
cmp
mov
add
loopne
jnp
push
xchg
call
sbb
sub
popf
subl
or
stc
or
aam
ret
andb
lods
mov
and
movsb
and
xchg
in
in
scas
scas
mov
inc
call
into
lds
jle
add
jmp
pop
outsb
loop
sub
out
and
push
leave
lock
je
rcrb
jno
insb
notb
and
ss
pop
ja
jb
jns
xchg
sbb
test
push
jp
add
fmul
test
lcall
mov
push
jl
ss
nop
shll
mov
add
sub
pop
xor
lret
cmpsb
inc
sbb
pusha
jp
mov
shrb
popf
and
jne
and
xor
fldl
mov
jecxz
xor
inc
insl
jno
push
cltd
leave
adc
jae
adc
push
jmp
sbb
push
arpl
stos
adc
mov
out
add
cmp
push
into
sbb
fwait
outsb
mov
push
ja
sub
arpl
scas
pop
mov
orb
pop
repz
and
adc
cmp
ljmp
test
push
and
mov
bound
or
mov
je
lods
jmp
test
mov
xor
leave
or
das
cmpsb
pusha
or
mov
add
sub
outsb
ret
jo
push
adcl
les
or
roll
adc
add
test
xchg
or
mov
test
or
in
call
les
lods
iret
clc
push
cmpsl
movsb
enter
mov
mov
popa
xor
call
or
sbb
pop
sub
pop
in
cmc
nop
ja
enter
inc
call
adc
inc
adc
lret
aam
cwtl
cltd
rclb
loopne
adc
sbb
imul
loop
lret
cs
insl
inc
and
xchg
xchg
test
loopne
ljmp
inc
dec
ss
call
mov
sti
mov
dec
ror
rolb
out
and
jno
add
ljmp
loop
in
jle
dec
nop
ljmp
sbb
jge
test
mov
jae
inc
js
jl
mov
sarb
popa
xchg
int3
push
push
inc
cmp
imul
leave
pop
stc
orb
xlat
cli
orl
mov
adc
enter
inc
lds
movsl
out
int3
ljmp
cmp
lock
sbb
jmp
add
xchg
pop
push
push
adc
xchg
imull
enter
data16
lock
lret
lahf
add
repz
mov
test
ret
stos
jl
or
xor
xor
mov
faddl
lea
lahf
mov
jo
mov
adc
andb
sub
push
cs
sti
cld
popf
sbb
cmp
jbe
cmp
pop
inc
popa
ds
cmp
testb
pop
sub
add
movsl
mov
jmp
mov
lahf
inc
lods
push
ss
or
nop
inc
mov
sbb
dec
fsts
cmp
ljmp
lea
shlb
jo
lret
pop
loope
add
rorl
sbb
dec
in
ret
dec
test
inc
and
rorl
mov
loop
sbb
ffreep
stos
loope
mov
ret
lea
daa
nop
push
sbb
out
lret
scas
sub
xchg
jp
push
mov
in
insb
pop
jb
lret
scas
popa
data16
mov
or
fildl
sub
inc
jmp
sti
repnz
jns
mov
out
test
hlt
adc
je
jl
jp
mov
sub
pop
pop
xor
movl
pop
repnz
in
adc
jae
mov
adc
pop
and
loopne
jg
cld
dec
lahf
outsb
stos
ja
and
dec
push
dec
fdiv
cmpsb
and
lds
pop
orl
cmp
mov
arpl
xor
sahf
enter
cmp
mov
dec
inc
cltd
adc
xor
ljmp
sbb
jbe
out
inc
xorb
inc
push
inc
fwait
lods
fwait
loop
sbb
clc
mov
pop
repz
sub
fldt
scas
xchg
cmp
cmp
push
loopne
push
lahf
mov
adc
add
dec
mov
push
cmp
push
dec
mov
or
test
jnp
inc
jmp
xchg
in
jne
divl
in
popf
add
push
or
sarl
rolb
mov
mov
cmpl
int3
sbb
pop
add
les
dec
mov
adc
scas
add
test
icebp
mov
xor
pop
push
movsb
mov
jl
rcr
mov
lret
cli
cs
dec
cmp
cld
xchg
xchg
push
push
gs
rcll
int3
test
fwait
xchg
int3
out
sub
jae
out
jl
mov
jecxz
jle
add
mov
pop
nop
sbb
mov
ljmp
dec
rcr
cli
ljmp
lods
mov
sbb
mov
and
nop
test
aas
iret
int3
sub
mov
cmp
jo
mov
sar
pop
in
dec
sbb
iret
and
addr16
test
es
int3
js
mov
into
or
lea
mov
jo
mov
cmp
jne
push
lods
xor
scas
aam
mov
xor
dec
sbb
jne
movsl
mov
or
cmp
sbb
and
push
int
imul
lret
or
popa
xorb
sbb
negb
lret
mov
mov
xor
sbb
leave
nop
pusha
pop
jbe
sti
push
arpl
push
imul
ret
sub
into
ss
scas
and
and
dec
addl
cmp
mov
jl
cld
jecxz
aas
dec
test
adc
faddp
mov
repz
jnp
scas
rcl
cmp
aam
insl
scas
sti
mov
push
xor
inc
xor
mov
lods
pusha
es
xchg
ret
adc
in
ss
cmp
mov
and
pop
scas
out
lods
sub
in
inc
push
push
cmp
cltd
fisttpl
roll
xlat
movsl
mov
rclb
mov
jb
outsl
pop
add
pop
mov
dec
pop
popa
inc
imul
and
jp
or
pop
inc
fisttps
arpl
mov
hlt
push
aad
sbb
xor
dec
and
aaa
mov
dec
push
cmp
fcoml
pop
jnp
imul
lock
sub
inc
enter
out
mov
jmp
inc
fnsave
mov
mov
add
imulb
in
adc
or
jns
push
adc
arpl
daa
dec
push
jnp
cmp
lea
addb
xchg
in
jbe
cmpsl
out
and
loop
mov
ret
test
mov
push
xchg
hlt
mov
jle
adc
es
adc
test
dec
pop
movsl
pop
xchg
xlat
orb
jmp
adc
out
xchg
jl
push
ss
es
daa
in
outsb
rclb
daa
jno
lret
push
jmp
mov
shl
inc
mov
icebp
inc
mov
mov
sbb
xchg
popa
outsb
roll
cmp
push
jae
lahf
bound
mov
lods
insl
in
mov
jmp
scas
mov
push
mov
loopne
faddl
mov
or
pop
inc
in
ret
sahf
rcl
mov
sahf
jg
ret
inc
xchg
inc
icebp
and
adcl
jbe
xorl
popl
jmp
ficoms
or
stos
ja
fimuls
lcall
test
push
shlb
xlat
idivl
adc
sbb
or
sub
push
or
ljmp
sbb
repnz
inc
jmp
sbb
mov
ja
loope
popf
into
adc
aam
xor
inc
xchg
pop
cmp
and
pop
cmp
jp
inc
pop
loop
mov
xchg
ljmp
ret
inc
test
cs
xchg
das
outsl
cs
fadds
std
sbb
rclb
jmp
cmp
pop
sbb
jno
in
lock
push
mov
lahf
jno
das
test
fsubrp
call
hlt
inc
stc
fcmovnb
dec
cmpb
xchg
fmull
stos
mov
or
in
pop
push
push
rclb
push
lcall
or
inc
mov
fnsave
sbb
lret
sbb
ja
dec
mov
push
jns
subl
add
pop
pushf
leave
pusha
adc
sbb
adc
inc
lock
cmpsb
jns
xchg
jle
fs
adcb
stc
orl
mov
scas
hlt
or
outsb
jnp
insl
push
mov
ret
push
xor
adc
adc
xor
mov
push
ljmp
push
addr16
pop
cwtl
ret
jmp
push
dec
test
cmp
shrb
lds
lea
outsb
fldenv
dec
sar
rol
loopne
stc
in
negb
ret
daa
and
pop
or
mov
popf
jge
mov
sbb
pop
rolb
sub
or
dec
sub
inc
inc
push
jp
sbb
push
sbb
stos
mov
leave
mov
enter
mov
jge
cmpsb
rcrl
pop
xchg
fcmovne
or
movsl
minps
aad
test
ds
pop
mov
push
ss
rorl
jo
inc
and
pop
test
aad
std
fxch
xchg
sub
cmp
cmpsb
sub
pop
test
shlb
into
or
out
jo
iret
rol
fwait
leave
stos
xor
push
outsb
adc
mov
adc
jmp
mov
jbe
and
lock
mov
jge
jnp
jl
sub
mov
inc
fldt
cmpsl
add
mov
test
fisubrl
leave
enter
xchg
pop
gs
loope
test
push
sub
out
jge
fcom
imul
sahf
pop
sbb
mov
sbbl
sub
les
inc
fnstenv
or
sbb
enter
stos
popf
xlat
inc
pop
adc
das
dec
pop
lcall
das
aad
jle
adc
int
out
insl
mov
add
jns
pop
and
push
pop
mov
les
in
dec
xor
sub
jnp
and
mov
sbb
mov
stc
push
sti
fisubl
jns
dec
add
jmp
scas
mov
push
xchg
xchg
inc
int3
xchg
js
mov
jle
mov
and
outsb
dec
pop
pop
jo
mov
inc
cmp
call
ss
addr16
or
xor
cmp
es
or
shll
dec
add
aam
pop
clc
mov
mov
push
xchg
call
lods
mov
popf
jle
addl
inc
push
in
imull
shl
out
sub
shl
adc
stos
mov
and
or
addr16
lods
sbb
push
shlb
ret
popf
inc
xchg
fidivl
inc
jmp
sub
test
sbb
aad
cmp
nop
les
scas
pusha
mov
ror
xor
ja
pop
add
cmp
xchg
mov
loopne
stc
lea
out
lret
sbb
pop
xorb
movsl
push
ljmp
sbb
mov
xchg
mov
leave
push
adc
out
aad
lods
andb
or
subl
ljmp
push
jge
movsb
jp
pop
mov
mov
mov
leave
xchg
in
dec
cld
inc
idivb
fisubs
add
lret
pop
mov
add
scas
or
sub
mov
lcall
mov
xchg
sarb
xlat
or
cmovae
enter
jg
lcall
fisttps
movsb
mov
iret
pusha
or
pop
mov
jae
mov
ds
or
aad
cmp
mov
sub
mov
xor
and
push
roll
outsb
into
inc
je
mov
jns
inc
and
fistps
add
inc
addl
int3
jge
sub
dec
mov
push
mov
lret
mov
sarb
fnstsw
cmp
or
jecxz
imul
mov
jmp
xchg
mov
pop
or
ret
cli
icebp
xlat
int
push
addr16
cmpsl
je
jae
push
jecxz
cli
push
mov
into
sahf
xor
jns
sbb
mov
jg
push
dec
cmpsb
mov
ss
cmpsb
enter
and
xchg
add
subl
or
sub
or
jge
aad
pop
xchg
push
daa
insb
pusha
jmp
adc
mov
or
test
out
push
mov
adc
inc
out
xor
add
test
sti
pop
cmp
xchg
leave
daa
adc
add
jecxz
push
mov
ja
mov
add
mov
es
pop
and
mov
xor
dec
outsb
or
fildll
jae
mov
cmpsl
subl
push
outsl
cmp
add
xor
ficompl
pop
pop
ret
dec
cwtl
out
or
mov
xchg
adc
jo
repz
or
jg
xchg
insb
xlat
or
pop
aas
sbb
in
push
icebp
notb
cmp
ja
gs
lahf
push
fisttpl
push
pusha
xor
pop
movsl
call
icebp
popf
fsubp
sbb
insl
pop
fmull
popf
mov
imul
in
inc
jbe
inc
stc
mov
adc
cs
ret
mov
xchg
and
mov
xor
xor
iret
or
jg
cld
cmpsb
xlat
arpl
loopne
adc
adc
xchg
or
das
insl
mov
jne
fists
mov
push
mov
stos
adc
popf
mov
bound
pop
jg
sub
pop
xor
xchg
scas
jle
fwait
mov
lret
mov
roll
aaa
adc
sub
jl
inc
or
cld
mov
out
stos
inc
dec
stc
andl
sbb
fists
outsl
out
add
aaa
fs
mov
push
subb
int3
mov
lds
sub
pop
subb
rorl
jbe
and
cmpsb
or
or
inc
rcl
loopne
xchg
inc
xchg
jns
mov
jb
and
mov
mov
mov
ljmp
xchg
cmpsl
cmpb
jns
push
inc
scas
pop
cltd
xchg
xor
in
and
in
shll
sbb
mov
push
sub
cmp
scas
stos
push
loop
or
fcmove
lahf
cmpsl
mov
pop
leave
mov
dec
xchg
push
sbb
addl
stos
adc
idivb
pop
jmp
stos
xchg
mov
jb
cs
and
mov
mov
fistpl
rorb
jne
xchg
pop
scas
iret
je
stc
ljmp
lds
cmp
add
sub
cli
stos
mov
std
mov
and
gs
bound
out
sub
call
pusha
dec
mov
movsl
lea
xchg
rorb
sbb
mov
in
mov
outsb
ljmp
int
movsb
test
ja
push
xchg
push
cmp
mov
cmpsb
out
add
sbb
test
pop
mov
test
mov
test
ret
push
sub
mov
add
sahf
jecxz
lcall
and
mov
jle
and
punpckhbw
push
rorl
adcl
push
mov
mov
mov
and
mov
cld
add
dec
or
clc
pop
jge
mov
popa
mov
stc
pop
and
sbbb
and
sbb
mov
sbb
mov
add
out
fists
cmpsb
cmp
mov
xor
out
sbb
xor
inc
repnz
xchg
jne
out
sub
or
in
xor
outsb
pop
cmc
mov
cmp
lods
xor
sub
popa
nop
xchg
lahf
or
ja
push
push
sbb
add
ret
inc
arpl
fmuls
psubsw
fbstp
mov
dec
out
mov
dec
mov
repz
ja
mov
add
mov
push
pop
mov
push
jecxz
lret
cmc
sub
addr16
in
fimuls
pop
push
sbb
movsb
push
andl
enter
in
out
fs
sub
cs
mov
push
mov
sbb
shll
loop
imul
jno
lods
pop
or
jecxz
or
cmp
jp
ret
adc
int3
sub
ret
es
aas
fists
xchg
xor
ja
mov
fidivrl
fdivl
mov
pusha
push
add
das
repnz
fcomps
sub
cs
sti
sub
inc
popf
inc
loope
jg
inc
inc
imul
int3
insb
mov
scas
jnp
xor
notl
xor
fistl
clflush
cmp
sti
inc
cmpsl
cmp
subl
dec
mov
or
loopne
imul
pop
jae
sbb
pop
lods
and
movsb
data16
lods
adc
pop
push
repz
sti
sbb
ljmp
fwait
aaa
subl
mov
xchg
cmp
adc
mov
xchg
sub
mov
movl
out
or
popf
arpl
dec
sub
xor
or
mov
insb
scas
jmp
daa
movsl
es
shlb
and
xchg
jg
sarb
data16
mov
sub
jne
and
lret
sti
inc
dec
loop
aas
push
mov
adcl
push
push
movl
mov
mov
int
sahf
movb
add
mov
pop
push
scas
mov
sahf
add
insl
ja
xor
jl
xchg
and
outsl
xchg
cmpsl
mov
outsl
jecxz
add
js
or
mov
inc
pop
imul
sub
call
add
xchg
add
lcall
nop
mov
arpl
mov
stos
add
xor
test
fs
adc
inc
loop
in
xchg
push
cmp
cld
pop
jmp
push
ljmp
fidivs
push
icebp
pop
divl
inc
push
shlb
test
subl
jns
adc
cmpsl
push
mov
jecxz
sarl
pop
rol
lods
mov
pop
dec
xchg
fnstsw
jo
test
popf
pop
sbb
aam
mov
xchg
push
cld
lcall
popf
cmp
repnz
scas
mov
ficomps
aam
dec
xchg
mov
add
fsubr
push
leave
arpl
or
mov
ds
jmp
and
push
push
ja
xor
clc
outsl
sti
push
xchg
jge
jl
shr
push
cmp
mov
lret
jb
in
inc
mov
lret
je
out
mov
inc
testb
imul
add
in
jae
jmp
test
repz
dec
xchg
rcr
jmp
mov
loopne
and
mov
mov
mov
push
les
add
push
jl
pop
subl
outsl
iret
jl
dec
out
aam
pop
sbb
inc
jecxz
nop
dec
lret
add
inc
insl
add
jl
and
jle
adc
fldt
pop
cmp
stos
loopne
movsl
in
jmp
div
mov
outsl
sbb
data16
repnz
sbbb
push
pop
xor
aaa
cmpsl
pop
adc
outsl
js
mov
mov
sub
adc
jbe
movsl
mov
fs
inc
loopne
pop
shlb
lds
adc
adc
xor
lock
sti
arpl
stos
jecxz
subb
jg
fiadds
subl
ss
mov
icebp
in
das
add
mov
flds
out
cli
jle
or
movsb
sahf
fdivrl
jge
nop
xor
stc
fbstp
sbb
xchg
push
ljmp
jb
or
sbb
jecxz
sub
inc
and
lahf
imul
and
xchg
popa
loope
pop
and
movsb
sarb
dec
mov
mov
insb
cmp
add
aaa
fidivrs
dec
stos
pop
in
andb
decb
dec
stc
cld
sbb
aas
fnstsw
xchg
inc
xor
fwait
jecxz
test
push
imul
loopne
lods
ljmp
or
in
mov
into
add
ret
mov
stos
movsb
pop
repz
push
cltd
aas
subl
xchg
test
push
xlat
rcrl
cmpsl
aad
ja
data16
filds
lret
xchg
jo
jnp
pusha
into
std
cmp
adc
and
rcrl
or
sahf
dec
sub
icebp
jnp
and
cs
sar
pop
push
pop
adc
js
sbb
mov
sub
adc
fimuls
adc
popa
adc
loop
xor
dec
int3
in
insl
push
push
filds
arpl
cld
cmc
add
rcll
push
mov
cmpsb
cld
es
push
mov
inc
pop
leave
sub
cld
inc
add
popa
adc
jns
sub
aam
inc
loop
push
sub
mov
fwait
mov
in
sub
adc
pusha
je
in
into
ljmp
cmp
outsb
ret
shlb
fcomip
rorl
pop
mov
xchg
xor
cmp
or
inc
cli
aam
rcrb
dec
xchg
lret
into
mov
and
push
fstpt
sub
fildl
xor
popf
cmp
rcl
mov
mov
pop
pop
test
mov
sbb
out
ficompl
std
and
mov
xchg
cmp
mov
fdivrl
es
test
dec
add
out
and
sbb
stos
sub
test
dec
pcmpgtw
stos
xchg
add
mov
or
daa
ficomps
insl
lret
cmp
jp
adc
ja
pop
pop
mov
leave
push
dec
jle
sti
jecxz
lds
pushf
sbb
imul
fsubrl
in
jle
mov
xor
xchg
cmp
xor
push
cltd
out
mov
and
mov
xchg
lret
add
xchg
das
out
std
sti
insl
dec
add
enter
adc
popa
mov
cmpb
loope
adc
jne
sbb
scas
cmpsb
jo
outsl
loope
sbb
push
es
js
mov
fiadds
pop
ljmp
xor
pop
leave
push
loopne
shl
gs
jl
xlat
in
xchg
scas
mov
mov
xlat
call
mov
ss
out
or
negb
sbb
mov
inc
xchg
cmpsl
xchg
push
mov
adc
js
popf
inc
and
pushf
pusha
add
add
push
lods
sub
pop
xchg
sahf
add
lret
inc
stos
shlb
mov
ret
iret
lret
inc
add
out
adc
idivl
fiadds
mov
sbb
adc
imul
xchg
inc
xchg
adc
call
jno
or
or
or
sbb
jecxz
cmp
mov
das
or
lret
out
dec
iret
arpl
lds
xor
ds
cmp
add
int
mov
xchg
or
das
cwtl
stos
xor
sub
dec
xor
in
sbb
xchg
addr16
jae
cld
aam
add
jp
jmp
call
inc
jle
sbb
bound
sub
cli
pop
xchg
xlat
in
ljmp
les
lret
lahf
cmp
call
pop
jnp
dec
dec
sar
sahf
and
mov
lahf
xor
jecxz
sub
and
mov
dec
stc
push
fidivl
jmp
adc
sbb
jge
mov
fstpt
lods
iret
mov
aad
xchg
movsb
sub
sub
aas
jb
pop
adc
int
cltd
iret
sbbl
push
lock
or
fucomp
lahf
mov
cmc
and
shll
cmp
adc
sbbl
cwtl
loope
popf
push
pushf
in
ret
out
cmp
data16
adc
mov
lcall
add
or
jmp
sbb
cs
jne
ja
fdivrp
push
cs
mov
fwait
jle
call
inc
add
fldenv
sarl
sbb
adc
mov
adc
pop
mov
out
adc
sbb
mov
stc
rorb
sub
jecxz
popa
dec
pop
data16
cmpl
and
dec
and
cmp
repnz
mov
lods
insb
inc
sbb
loopne
mov
mov
icebp
in
repnz
or
je
jo
xor
and
popf
push
lcall
mov
ret
ficoms
pushf
fisubrs
loope
sub
push
dec
inc
jp
push
lret
xor
xor
and
hlt
insb
cmp
gs
add
stos
leave
sahf
xor
lods
out
xor
bound
stos
insb
jns
pop
addr16
ss
jo
jl
mov
das
inc
mov
movsb
test
jne
sbb
push
jnp
push
fistps
test
scas
loopne
adc
stos
aad
push
mov
out
ljmp
int
pushf
shl
aam
sbb
xor
jbe
pusha
pop
inc
test
sub
cli
into
cmp
inc
loopne
sub
es
sbb
mov
insb
mov
mov
xor
adc
data16
fnsave
test
jb
dec
std
cmp
xchg
es
in
sub
xorb
insl
test
push
mulb
icebp
mov
sbb
xor
inc
fnstcw
mov
sbb
lds
es
xchg
and
pop
xor
dec
int3
push
mov
mov
stos
ljmp
aaa
lsl
mov
dec
pop
in
sbb
xchg
cmpsl
add
push
and
dec
mov
or
jb
xchg
adc
or
cltd
adc
mov
cmp
pop
inc
out
or
roll
sbb
mov
pushf
sarb
and
mov
int3
or
sbb
imul
pop
cmp
xchg
pushf
sub
fsubr
jo
pop
inc
popf
fstps
movsb
cld
push
cmp
mov
aaa
sub
shlb
stos
enter
das
push
xchg
lret
std
loope
stos
push
jnp
push
in
xchg
test
mov
jo
subb
xchg
adc
outsl
mov
repnz
cld
inc
mov
leave
adc
inc
lahf
pop
adc
out
jg
stc
sub
enter
add
scas
sahf
mov
mov
lea
sbb
fisttpl
pop
push
nop
adc
les
lods
into
out
out
ljmp
fdivrs
lcall
or
push
pop
idivl
rorb
pop
lahf
sbb
std
and
test
mov
ljmp
or
cmpsl
mov
cmc
cmp
fs
in
popf
mov
jo
lock
jnp
cwtl
xor
movsb
mov
jg
clc
xchg
mov
cmp
inc
std
jmp
mov
and
shll
dec
daa
int3
or
xor
mov
xor
add
lahf
add
aam
jp
lcall
cmp
clc
push
hlt
push
hlt
sbb
mov
aad
sbb
rcl
xchg
and
push
fcomps
test
outsl
add
jae,pt
mov
ss
xchg
rclb
imul
stos
ljmp
sbb
push
push
mov
lea
dec
sub
sbb
outsl
into
pushl
xlat
sbb
lret
cmpsb
or
mov
mov
dec
insb
xchg
adc
mov
pop
push
cmp
loopne
jbe
mov
cmp
add
mov
xchg
pop
scas
mov
das
into
push
movl
sbb
mov
mov
sub
ret
clc
mov
inc
in
je
and
lcall
add
daa
xchg
imul
add
pop
or
outsl
mov
out
or
xor
inc
push
int
xor
fldl
shrb
ss
stos
insb
inc
jl
mov
pop
movsb
cld
adc
mov
cmc
arpl
xchg
rcrl
xchg
inc
inc
push
push
mov
popf
jg
xchg
mov
pushf
pop
lahf
std
dec
xor
add
mov
and
ds
push
data16
xchg
ja
xor
pop
and
shr
sbb
adc
mov
mov
cmp
dec
jno
add
in
popa
push
stos
lahf
inc
les
out
xor
sub
repnz
bound
xor
push
aam
shr
jl
jge
sbb
mov
xchg
sbb
pop
jl
sbb
mov
mov
fsts
dec
mov
push
cmpl
sub
jecxz
shlb
jle
mov
push
and
imul
popa
popl
xor
sub
pop
cmc
popf
cwtl
cmp
xchg
bound
sub
xchg
ss
pop
test
jne
leave
mov
shlb
xorb
mov
xor
push
add
pop
mov
popf
pop
inc
mov
je
add
dec
and
mov
add
ret
in
loop
jmp
adc
cmpl
add
nop
or
divb
xchg
add
add
jmp
or
call
aam
test
insb
cmp
xor
push
mov
jmp
mov
push
mov
pop
arpl
ds
repnz
cmovbe
mov
xchg
mov
shll
xor
in
movsl
imul
pop
pop
dec
mov
cmp
das
pop
xor
cmp
mov
mov
ret
cld
pusha
mov
xor
in
mov
cmpb
dec
ja
mov
es
mov
insb
add
and
fstps
sub
icebp
dec
lds
fimuls
lods
mov
cltd
jnp
outsl
inc
sbb
inc
pop
push
faddp
fdivrl
xchg
pushf
xchg
mov
pop
in
roll
inc
cmpsb
jge
jecxz
mov
mov
mov
mov
fwait
cmp
add
xor
sub
or
mov
gs
cwtl
mov
pop
cmc
sub
pushf
mov
ret
mov
imul
push
sub
and
dec
rcll
mov
imul
dec
add
pop
out
popa
mov
pop
adc
cmp
insl
lahf
roll
dec
xor
cld
gs
add
es
adc
adc
inc
push
xchg
mov
shl
mov
outsl
or
mov
inc
iret
daa
sbb
out
out
outsl
aam
das
sbb
jp
cs
clc
shlb
ds
int
cmpsl
out
popa
lock
mov
or
jle
and
jecxz,pt
je
scas
pop
dec
add
pop
and
popa
mov
jns
inc
jo
lea
rcrl
leave
sub
jle
ja
mov
mov
jne
pop
mov
mov
adcl
scas
shl
or
std
mov
xor
xchg
mov
push
repz
xchg
adc
mov
sbb
lea
push
mov
inc
and
cmc
jle
cld
pop
test
jnp
dec
xor
loop
jg
mov
fstpt
mov
jo
jge
repz
loope
lods
mov
push
mov
repnz
mov
mov
std
push
out
sbb
lods
sbbl
enter
inc
inc
lea
cs
and
mov
adc
daa
mov
imul
xchg
push
movsb
add
aaa
pop
rclb
mov
cld
loope
dec
je
sbb
jmp
xorb
sub
jmp
lgs
shrl
push
hlt
js
lea
add
lret
test
and
dec
inc
popa
sbb
push
mov
dec
stos
mov
sub
fcomps
mov
in
mov
in
in
and
leave
pop
jmp
adc
lods
jmp
adc
les
mov
pushl
push
cmp
out
jo
movsb
mov
pop
addr16
jg
popf
cmp
push
clc
notl
adcb
inc
xchg
inc
adc
adc
xor
sbb
or
add
fs
xchg
ret
push
or
test
jbe
je
ss
cmp
xor
mov
mov
cmp
dec
lret
cmc
ljmp
pop
sub
ret
sbb
outsb
sarb
xor
add
adc
adc
inc
dec
xor
push
sbb
lcall
inc
jge
push
jnp
mov
icebp
mov
and
dec
adc
xlat
pop
xchg
mov
js
cltd
or
xchg
lods
nop
xor
add
mov
lods
fistps
jge
mov
lret
shlb
lods
jmp
lret
jns
movsb
mov
dec
aaa
xor
or
mov
lods
loop
push
mov
in
cmc
aaa
leave
mov
nop
hlt
and
out
dec
add
lock
push
mov
jp
cmp
mov
std
iret
scas
mov
imul
pop
xor
mov
push
mov
aad
push
mov
insl
out
pop
cmp
adc
aam
sbb
mov
xchg
icebp
pop
jb
jmp
es
subb
pop
push
jmp
pop
cmp
xor
lahf
xlat
loop
aas
ljmp
test
xchg
pop
stos
cwtl
outsb
pop
rorl
mov
inc
and
cmp
xor
jbe
ljmp
or
sbb
sahf
dec
sahf
mov
inc
gs
movsb
inc
ljmp
xchg
into
mov
sarb
aad
int3
scas
adc
jnp
popf
dec
in
scas
cmp
int
lcall
dec
sahf
scas
xchg
sbb
xchg
add
inc
push
arpl
inc
iret
jno
das
jne
xor
sub
dec
test
and
shlb
es
scas
pop
cwtl
jecxz
hlt
inc
mov
mov
repz
fnstsw
push
in
jecxz
xchg
mov
sbb
push
popf
xor
push
add
mov
sbb
cli
fidivrl
dec
stos
jbe
leave
test
mov
xor
mov
xchg
icebp
jne
insl
push
out
daa
in
mov
loopne
loop
push
pop
pop
lea
or
dec
orl
cmp
scas
in
inc
lock
mov
fdivrl
jbe
xor
test
xlat
mov
stos
jnp
aad
lret
xorb
jg
mov
xor
dec
imul
sub
sbb
dec
sbb
aad
call
cmp
imul
mov
out
lods
mov
leave
mov
jmp
cmpsl
mov
filds
sarb
lods
inc
dec
sub
push
jge
fsub
pop
sub
test
lret
test
test
mov
add
inc
jg
in
mov
lods
mov
les
inc
push
jb
lds
sbb
imul
inc
xlat
enter
loopne
loopne
cs
jge
xchg
pop
sti
mov
xor
fmull
shr
jns
movsb
ja
rclb
sbbl
lock
out
lds
in
pop
into
in
testl
insb
repz
xorl
inc
aam
movsl
lods
pop
push
xor
push
sub
adc
outsl
fyl2xp1
xchg
loop
add
cld
mov
jbe
sub
lea
push
repz
adc
xchg
in
loop
add
mov
pop
aam
movsl
push
aas
pop
push
dec
jl
push
sahf
aaa
popa
scas
jnp
mov
cmpsb
scas
pop
bnd
sbb
xchg
mov
lret
inc
cmpb
adc
aam
lret
add
out
push
mov
adc
add
cmp
imul
inc
xchg
insb
and
pop
orl
sahf
mov
jle
fwait
xchg
inc
add
popa
push
ljmp
test
xchg
push
xchg
test
sub
in
add
mov
push
enter
addr16
mov
push
jecxz
shll
mov
sbb
push
xorb
fisttpl
cmp
ss
icebp
mov
cmp
mov
adc
sub
daa
add
sub
cli
add
push
ja
dec
pop
lret
ss
loop,pn
sub
sahf
out
adc
loope
pop
pusha
test
inc
clc
add
dec
sub
lods
xor
pop
inc
in
mov
xchg
gs
mov
outsb
repnz
dec
out
xchg
int3
icebp
shlb
push
or
in
imul
sub
out
inc
lahf
and
xchg
into
pop
das
mov
das
push
fwait
mov
push
andl
pop
xor
sub
pop
dec
pop
aam
daa
cwtl
out
ret
or
adc
mov
pushf
hlt
mov
cmpsb
pop
jg
push
ret
jne
dec
leave
stos
and
hlt
mov
mov
jl
loop
mov
sbb
test
lret
mov
push
xchg
mov
clc
pop
fsts
dec
and
out
outsb
std
jmp
add
ds
push
jne
test
jo
mov
pop
mov
jne
jg
into
fucom
pop
jo
pop
jae
cmpsl
std
adc
test
cmpsl
movsl
sbb
or
xchg
mov
dec
repz
repnz
sub
mov
icebp
imul
out
lods
lret
repz
xchg
xchg
sub
or
jge
or
inc
push
sub
mov
pop
xor
test
cmpsb
fcoml
add
test
jbe
mov
or
jp
jne
aam
loopne
pop
xor
lock
jbe
ljmp
shll
mov
cmp
cli
dec
inc
lea
mov
sbb
into
sbb
push
int3
lcall
dec
packuswb
shrb
push
push
je
xor
fisttpll
out
mov
lret
jnp
lea
mov
cmp
push
mov
filds
je
mov
imul
js
int3
cmc
mov
ficompl
mov
jp
xor
in
cmpsl
ret
pop
push
adc
aad
shll
ljmp
inc
sbb
mov
or
outsl
push
sti
mov
stc
adc
loopne
pop
out
pushf
imull
sub
es
test
dec
mov
cmc
movsl
cmpb
sahf
loop
clc
sub
add
xchg
inc
dec
jnp
inc
or
dec
sti
out
mov
inc
fstl
inc
xchg
adc
je
jl
fucom
or
pusha
or
cmpsl
sarl
negl
push
pop
xor
cmp
jno
or
cld
cmp
mov
test
insl
adc
inc
mov
lods
jle
pop
pop
jle
pusha
int
icebp
cmp
stos
rcr
nop
adc
cmp
in
push
cmp
aaa
int3
cltd
push
fdivrp
add
lea
andl
fxch
scas
rcl
and
push
adc
mov
faddl
inc
push
loopne
xorl
movsb
dec
popa
dec
or
int
push
leave
cld
es
out
inc
int
xor
dec
jl
stos
xor
leave
or
push
ret
insl
or
inc
jp
push
sbb
sub
add
in
mov
rcl
mov
and
push
mov
mov
push
mov
out
jle
xchg
inc
cmp
in
adc
aas
aaa
fbstp
mov
andb
leave
push
mov
adc
xchg
xor
adc
jmp
into
test
adc
gs
pop
into
fwait
rcrl
pop
jo
inc
outsl
and
iret
sbb
pusha
cmc
test
jle
push
pop
lcall
adc
jge
out
pop
ret
loope
cmc
cld
out
xchg
repz
das
jne
xor
mov
mov
daa
sub
dec
in
imul
push
jbe
jge
mov
mov
ljmp
scas
adc
out
out
lcall
cli
pop
leave
repnz
jecxz
in
cs
and
lods
sarb
jae
push
out
cmpl
sub
adcb
jg
adc
jecxz
pushf
std
push
jae
inc
sub
sbb
lods
or
jle
inc
pop
ljmp
and
push
mov
fwait
enter
icebp
push
fimuls
mov
repnz
sbb
lea
imul
rcrl
es
mov
dec
push
sbb
push
jmp
mov
mov
stc
xor
fwait
aaa
mov
sub
ja
iret
rorb
mov
or
call
es
pop
mov
mov
xchg
cmp
les
icebp
cmp
mov
xor
add
bound
repz
fucomp
push
sahf
into
enter
push
repnz
pop
nop
cwtl
scas
dec
adc
fisubs
rolb
lock
push
pop
daa
adc
pop
fwait
or
mov
sarb
decl
loope
fsubrl
dec
sti
dec
mov
aas
vrcpps
pop
sub
fadds
movsl
insl
pop
mov
sbb
cltd
call
int3
punpckhbw
jecxz
mov
push
test
es
mov
add
xlat
or
xchg
or
push
sahf
clc
dec
cwtl
add
cmp
push
mov
aas
push
mov
mov
shll
repz
inc
mov
out
sub
mov
push
xor
jp
js
and
push
stc
cmc
incb
pusha
call
das
xchg
cld
and
dec
movsb
inc
mov
pop
and
inc
inc
xor
mov
comiss
ja
adc
push
xchg
std
mov
divb
sarl
pop
fwait
mov
shl
adc
pop
loopne
rcll
pushf
cmp
outsb
add
lods
mov
cmc
inc
jp
jmp
jbe
mov
jbe
and
test
jl
pop
xor
mov
mov
mov
hlt
mov
adc
cmp
sbb
push
cmc
pop
push
adc
iret
and
rcrb
push
push
adc
ja
mov
add
add
daa
out
lret
cmp
fidivs
imul
or
addr16
subl
mov
test
jge
jae
and
popl
cmp
mov
xor
inc
xchg
mov
fisttps
incb
mov
pusha
insl
jle
sbb
jge
sub
ret
out
or
adc
xor
and
fwait
lcall
test
nop
xchg
shlb
cmpl
cmp
push
pop
loop
push
xor
sub
inc
fimuls
or
or
daa
mov
push
loop
and
mov
push
dec
loopne
xchg
fcoml
mov
lret
outsb
add
fwait
xor
jecxz
or
imul
mov
jle
xchg
pop
test
pop
das
popf
pop
lret
push
xchg
lcall
dec
mov
xchg
loope
dec
cmp
mov
lcall
fld
test
sahf
fdivs
out
jmp
xlat
loop
sar
xchg
push
ss
dec
and
add
cmpb
mov
push
jge
mov
scas
nop
test
ds
je
or
and
roll
xlat
repnz
jae
mov
pop
mov
std
and
gs
popf
push
loopne
push
push
mov
jmp
sub
inc
mov
rclb
xchg
dec
sbb
daa
stos
xchg
and
mov
xchg
pop
add
adc
sub
test
mov
jae
lock
daa
mov
inc
fcmovnb
repz
jb
jns
int3
jp
loopne
push
lret
push
xchg
out
testb
cmp
pop
mov
dec
loope
xor
ljmp
mov
test
xchg
test
test
and
sti
mov
jp
das
add
jne
inc
push
inc
adc
and
je
mov
jbe
push
ficomps
sbb
sub
bound
ret
xor
and
push
xchg
movsl
shrb
push
scas
xchg
xchg
nop
aad
mov
add
addr16
mov
leave
mov
aaa
lds
push
aaa
lcall
outsb
inc
xchg
out
mov
push
in
mov
icebp
mov
lods
fsubrs
push
pop
sbb
mov
movsb
lods
ret
js
fwait
movsl
dec
pop
aam
mov
ja
xchg
sti
adc
sbb
dec
lds
push
mov
rolb
cmp
xchg
dec
jle
pop
mov
cmc
lods
data16
inc
dec
cmp
inc
popa
ds
push
imul
test
andb
in
lods
scas
mov
ret
bound
cs
jg
sti
add
inc
rorl
sub
lret
notl
pop
cli
fbld
out
fidivrl
add
ljmp
cmc
outsl
and
std
push
arpl
xor
int
insb
bound
lea
pusha
out
inc
pop
mov
or
movsl
nop
xchg
jae
add
or
arpl
sbb
sub
xor
das
cmp
pushf
es
jmp
fs
out
xchg
jge
pusha
ret
mov
inc
sbb
jl
or
jo
lods
cli
jo
aad
shll
daa
mov
jg
dec
and
xor
test
jb
stos
or
in
xchg
mov
inc
inc
cld
pop
or
mov
or
ja
into
mov
out
sub
test
hlt
xchg
sar
inc
hlt
jecxz
xchg
lea
inc
or
pop
mov
pop
bnd
out
push
mov
mov
jne
mov
xor
xor
add
cltd
pushf
push
mov
or
sub
loopne
add
fildll
fldcw
mov
out
xchg
xchg
adc
push
in
jno
bound
and
test
movl
fs
out
xchg
push
icebp
cmp
jge
inc
cmc
out
test
repz
lahf
or
bound
mov
popa
cmpsl
fistps
mov
testb
push
lods
adc
movsb
lea
xchg
jge
mov
ret
lds
orl
out
pop
sub
in
jnp
mov
int
push
cmc
pop
mulb
cwtl
mov
daa
xchg
cmp
in
pop
xchg
pop
push
shll
inc
rcrl
mov
mov
js
and
shrl
dec
int
cli
test
imul
stos
xchg
rorb
adcb
shlb
jle
or
loopne
fs
cmc
mov
add
jp
fmul
addb
jge
inc
or
push
int3
or
cltd
xlat
add
test
movl
stos
ds
or
xor
out
int
inc
enter
cmp
notl
cmc
pop
xlat
mov
insb
or
mov
rcl
jg
adc
divb
mov
mov
cld
nop
ret
test
and
outsl
adc
jne
test
movsl
or
adc
into
dec
sbb
ljmp
mov
push
mov
test
cmpsb
jnp
int3
pusha
and
daa
cmp
scas
xchg
jge
and
jno
or
sbb
popa
in
push
ret
repnz
add
shrl
xor
add
inc
inc
or
lret
xor
or
jle
in
mov
add
push
jno
shl
mov
lret
pop
jae
fisttps
and
mov
or
test
pop
inc
shrl
jl
popl
cmp
aam
sbb
aad
add
mov
dec
pushl
adc
repz
push
fcomi
ret
mov
push
mov
out
pop
cmpsl
sub
push
es
inc
xchg
fsubrl
or
push
sub
outsb
dec
cmp
and
out
and
adc
ss
pusha
std
xor
inc
outsl
cmp
cs
daa
scas
mov
or
sub
adcb
outsb
or
loopne
jge
in
jge
fbstp
mov
scas
wbinvd
rclb
clc
in
addr16
dec
lret
cmpsl
sarl
xchg
inc
adc
mov
subb
and
lock
lcall
push
sub
int3
add
call
rorl
mov
mov
outsb
pop
mov
loopne
notl
dec
jnp
sbb
mov
sub
pop
stos
cmpsb
fmuls
and
push
arpl
cmp
mov
add
bound
xchg
pop
xchg
lcall
pop
pop
xchg
nop
push
pop
cmp
nop
jle
mov
insl
push
and
or
fsubrl
or
shl
lret
jge
jns
fadd
arpl
cld
lcall
cli
jbe
lea
xor
adc
hlt
icebp
lods
and
fbstp
dec
leave
dec
sbb
sub
dec
ds
push
and
dec
aas
lods
jns
fnstenv
imul
push
sbbl
push
aas
cmp
rolb
cwtl
push
mov
and
jge
push
out
push
call
dec
pushf
std
xchg
mov
push
stos
test
cs
and
sarb
fcoml
pop
and
fiadds
mov
sbb
icebp
mov
xor
insb
push
sbb
jb
mov
xchg
mov
push
imul
js
aam
imulb
shl
pop
mov
jnp
cltd
aam
push
dec
dec
in
clc
push
adc
adc
cwtl
pop
sub
xor
jg
cli
sub
call
sti
or
adc
sub
bound
jae
xor
push
add
std
imul
sbb
xchg
test
insb
scas
sahf
or
xchg
lahf
push
xchg
ljmp
fwait
out
mov
or
add
sbb
daa
push
push
inc
das
test
loope
xchg
sbb
sbb
in
cli
pop
xchg
cmp
xchg
daa
add
popf
add
in
xlat
pop
lods
adcb
mov
xor
pop
jp
pop
adc
ja
filds
xlat
inc
jecxz
mov
pop
sbb
inc
pop
mov
shll
cltd
or
fld
movsl
nop
out
xlat
insb
bound
icebp
pop
jmp
pop
xor
jbe
repz
lock
icebp
mov
inc
add
js
movsb
adc
inc
adc
push
test
sub
fdivl
inc
repnz
aam
push
and
imul
shll
aaa
jecxz
cmp
pop
lret
cmc
jp
scas
clc
inc
cmp
xorl
xor
shlb
cmpsb
add
mov
xorb
dec
or
jecxz
sbb
cmpsb
adc
mov
dec
push
and
add
cmp
mov
insl
repz
jnp
mov
out
push
movsl
les
aad
xorl
add
xchg
jl
xchg
sahf
mov
mov
dec
or
or
inc
aas
jbe
std
push
nop
inc
lahf
xor
mov
sbb
push
xchg
mov
test
xchg
inc
sbb
lods
aas
sbb
push
jae
xor
adc
stos
mov
sub
cmpsb
int
fwait
lock
mov
inc
loope
fcom
mov
stos
mov
push
cwtl
inc
mov
push
mov
fstp
sbb
outsl
jl
push
or
add
jmp
xchg
fcomip
adc
mov
fnstsw
sarb
mov
mov
mov
rcrb
fisubrl
xor
mov
sbb
cmp
lds
add
or
push
jno
fcomip
and
xor
mov
cli
ds
arpl
gs
mov
mov
xchg
mov
in
cmp
cmp
xchg
dec
mov
mov
xchg
ds
arpl
mov
xor
movl
insl
mov
fsubs
adc
cmpsb
arpl
cmpsb
cwtl
sbb
or
lret
pop
mov
fcom
xchg
dec
fstp
mov
ljmp
adc
pop
fistpll
fcompl
lret
mov
int
mov
aam
xchg
movsl
xchg
jno
cld
push
cmp
cltd
mov
cmp
fldt
std
stc
out
push
sub
and
pop
adc
arpl
ljmp
cmp
clc
jp
mov
jno
fwait
lods
push
out
push
inc
es
add
je
pushf
lds
jecxz
pop
mov
mov
shrw
test
sbb
jnp
imul
push
cmc
jmp
sbbl
adc
dec
xor
movsb
jmp
adc
add
xor
xchg
iret
inc
outsl
lea
mov
movsb
shlb
stc
add
push
sarl
add
xor
cmp
into
cmc
insb
sahf
pop
cmpsl
lods
and
ret
shll
xchg
adc
xchg
push
scas
adc
pop
jg
push
std
jne
test
gs
mov
pop
inc
stos
xchg
out
cmp
out
mov
jae
jge
pushf
mov
fimuls
jno
addr16
sbb
mov
pop
dec
out
icebp
mov
loopne
add
lods
sub
xor
push
sbbb
incl
add
scas
push
sbb
jge
insl
mov
int3
cmpsl
pop
into
push
jnp
lods
push
sub
dec
mov
out
jg
lret
clc
jns
cmp
mov
jae
mov
andl
mov
pop
sbb
js
daa
aas
xchg
cmp
sbb
test
adc
mov
push
ljmp
pop
dec
jo
jbe
sbb
sub
in
lock
sbb
scas
sahf
into
pop
push
xor
lods
mov
pop
sahf
add
sbb
mov
out
mov
cwtl
arpl
or
outsb
push
aad
xchg
dec
stos
sahf
xor
and
out
jge
mov
imul
dec
imul
inc
fwait
jnp
popf
hlt
sbb
xchg
xor
pushf
push
xchg
push
adc
adc
xchg
pop
push
xor
pop
inc
int3
and
push
xchg
sbb
popa
mov
sub
lahf
popf
inc
sbbl
mov
mov
out
andl
xor
mov
sub
mov
jmp
repnz
lods
sub
ds
fistl
and
imul
fnstcw
add
inc
sahf
xchg
in
push
mov
push
out
mov
scas
xor
jge
imul
shlb
dec
clc
das
leave
inc
std
push
sbb
jle
ss
inc
jae
push
mov
jb
xchg
jl
mov
sub
xor
pop
test
sub
insl
mov
test
in
dec
xlat
mov
popa
mov
inc
push
adc
and
inc
jp
hlt
repz
xor
adc
scas
pushf
bound
xor
ficoml
insl
xchg
jns
and
dec
mov
lret
out
jmp
pushf
xor
pop
adc
hlt
pop
jnp
popf
fsubr
cmp
xor
mov
dec
xor
fwait
dec
insb
addr16
fwait
xor
and
in
lods
call
int
mov
sub
fbstp
cs
hlt
cwtl
mov
sbb
clc
dec
shr
imul
pop
adc
scas
add
xor
mov
bound
pop
lret
movsl
push
mov
pop
lahf
xchg
imul
cmp
or
into
mov
sbb
movsl
and
or
push
insb
xchg
iret
test
xlat
inc
pop
mov
xor
sbb
adc
out
add
pop
sub
lock
push
push
inc
inc
mov
or
enter
outsb
push
aaa
ret
test
push
popf
push
mov
dec
aam
addl
sub
lcallw
lahf
test
aam
jae
aas
shrl
add
or
mov
mov
out
dec
push
mov
data16
ljmp
mov
mov
dec
test
xor
pop
push
xor
nop
and
xchg
sbb
dec
stos
xor
out
xlat
and
sbb
ds
ficoms
imul
out
adc
aaa
mov
call
or
push
mov
dec
xchg
fidivrl
lods
pop
stos
notb
inc
orb
pop
rorl
fs
addr16
pop
lret
add
out
test
dec
jo
mov
ret
push
lock
mov
inc
push
mov
addr16
cmp
inc
popa
cmp
dec
inc
fidivrl
jecxz
cmpsb
xor
cs
pop
out
pop
cmpsl
push
int3
sub
dec
dec
cmpsb
mov
mov
insb
sbb
scas
in
test
outsl
lret
or
jp
inc
and
pop
jno
jmp
xlat
int3
pushf
lcall
and
call
mov
jl
mov
mov
std
dec
sub
loope
add
mov
daa
sub
xchg
jno
adc
in
clc
mov
stc
dec
test
enter
adc
inc
fnsave
pushf
stos
popa
sub
mov
adc
outsl
aaa
xchg
out
jle
mov
lock
out
repnz
jno
adc
rcrl
gs
movsb
mov
or
movsl
das
pop
pop
out
add
pushl
xor
loopne
mov
xor
addr16
mov
lea
cmp
scas
add
cmp
xchg
cmp
cmp
mov
and
push
add
aaa
adc
dec
sarb
jno
int3
inc
movsb
inc
imul
pop
and
test
mov
les
call
mov
mov
mov
mov
or
xor
jno
scas
popf
fistpll
and
mov
idivl
les
jle
ds
test
ror
mov
pop
aad
jge
ret
in
roll
dec
sti
negb
into
jne
enter
repnz
insb
inc
lods
fwait
clc
inc
negb
jge
or
iret
or
push
xchg
lods
xchg
push
sub
mov
mov
ficoml
pop
js
lods
sbb
sub
aam
push
fisttps
ficoml
icebp
mov
scas
lret
fistl
fisttpl
cld
cmpb
jae
loopne
arpl
das
mov
outsb
push
out
dec
dec
out
jmp
movb
unpckhps
iret
mov
sub
fs
repnz
fnsave
scas
xchg
inc
cmp
lahf
aam
push
xor
pushf
add
adc
mov
lgdtl
lea
dec
das
push
sub
in
insb
xor
cld
clc
mov
js
sub
or
xor
cs
insb
aaa
add
fdivs
mov
and
and
pushf
scas
xchg
push
inc
xchg
cmpsl
bound
call
push
mov
rorb
fnsave
lea
mov
pop
jb
and
pop
les
push
lcall
repnz
loopne
cs
fs
pop
adc
stos
gs
xlat
ja
shrl
hlt
daa
mov
into
add
mov
cld
push
pushf
and
or
cmpsb
cmp
jmp
in
lods
and
inc
arpl
inc
cwtl
out
lcall
sub
pushf
xor
pop
rclb
cwtl
sub
and
jns
jp
lret
call
iret
cmp
loopne
repnz
dec
ret
filds
fstl
hlt
rclb
jb
notb
mov
sbb
sahf
mov
insl
inc
cmp
call
lret
gs
mov
xchg
ret
movsl
mov
jo
jg
cmp
lahf
mov
int
sahf
add
hlt
cmp
leave
lret
je
rcrl
ret
test
js
jmp
mov
test
push
push
clc
cs
jnp
daa
cmpsb
mov
dec
push
jle
cmc
pop
pop
mov
cmpsl
out
ds
jb
sarl
push
cmp
inc
adc
xchg
or
mov
roll
and
std
jne
mov
jno
cmc
jnp
sbb
sub
das
mov
and
rcll
jns
repz
sub
shrl
jb
and
enter
lret
mov
daa
mov
dec
jae
push
inc
jmp
ja
dec
jne
roll
es
xor
pop
mov
and
into
mov
sti
sbb
push
mov
mov
das
ds
mov
xchg
or
dec
dec
fisubl
cmp
imul
xchg
pop
jns
imul
push
rcrb
or
mov
test
xor
rolb
test
lds
sub
xchg
dec
cmp
movsl
idivl
adc
adc
or
jo
xchg
imulb
cmpsl
and
decl
pop
adc
pop
pop
stc
mov
insb
ret
mov
xchg
mov
and
insl
sbb
dec
syscall
and
pop
out
xlat
fld
push
fwait
adc
mov
aad
int
mov
pop
divl
or
or
or
dec
and
and
sbb
in
clc
mov
lods
fidivrs
cmp
cmpsl
add
or
adc
cmp
jae
fxam
out
and
inc
inc
mov
sub
and
cmp
insb
das
loop
pop
dec
mov
in
jae
and
inc
jg
movsbl
sarb
mov
clc
je
rcr
dec
es
outsl
cmc
int
pop
out
mov
loop
daa
push
sbb
xor
nop
in
aas
inc
gs
aas
fisubs
int3
mov
sbb
rorl
add
aaa
mov
mov
shll
nop
jle
push
mov
push
cmp
lret
jg
es
fwait
ljmp
popa
test
push
jnp
cmc
fs
lods
push
rcll
leave
add
jmp
mov
xor
jnp
popf
adc
cld
xlat
subb
fbstp
lret
jmp
shr
adc
insl
or
push
push
and
fisubs
je
add
in
ret
cmpb
rcrl
xor
mov
sub
outsb
mov
cmp
mov
jl
mov
stos
adc
fldenv
fisubs
nop
fldcw
or
out
pop
sbb
jmp
lods
stos
push
inc
mov
mov
fmuls
dec
sti
les
sub
test
xor
rcrb
aas
decb
sub
sbb
sub
sub
out
movups
int
xchg
das
shlb
popa
sub
ret
mov
cmpsl
not
mov
imul
mov
cltd
pop
aam
cmp
inc
js
and
ljmp
add
push
test
or
jb
mov
xor
push
cli
cmpsl
ret
ret
xorb
movsl
andb
test
sbb
mov
fnstsw
jnp
je
out
mov
clc
jae
push
xchg
xchg
xor
divb
repz
push
ds
and
into
cmp
pop
xchg
pushl
sbb
dec
mov
stos
mov
lods
test
call
aas
loopne
in
add
mov
loope
ja
sarb
int
ljmp
testl
popf
ret
lret
iret
test
jmp
push
push
popa
faddl
inc
lret
out
pop
cmp
lds
mov
mov
adc
mov
stc
push
push
cmpsb
sub
or
std
push
daa
push
sbb
jbe
jno
push
dec
insb
pop
mov
pop
sbb
push
dec
test
mov
add
insl
push
mov
xchg
cwtl
mov
or
mov
imull
dec
dec
sbb
and
test
sahf
pop
add
test
inc
dec
es
fisttpll
imul
pop
insb
pop
js
negl
test
sub
mov
sbb
arpl
addb
in
jb
lock
mov
popf
mov
jmp
sbb
das
or
add
ss
test
mov
adc
and
inc
push
mov
rolb
mov
rcrb
inc
leave
inc
mov
imul
push
in
mov
int3
in
and
xor
cmp
les
sbb
and
loope
in
jg
out
enter
mov
stos
pop
movsl
inc
cmp
mov
movsb
stc
add
clc
sub
cmpsb
ror
mov
inc
xchg
push
popa
lret
into
inc
dec
mov
push
inc
dec
mov
sbb
mov
arpl
jl
jno
fistpl
sbb
push
lods
cmp
jbe
bnd
shlb
int
outsl
test
inc
jb
les
fsts
and
pop
lret
mov
and
stc
ljmp
scas
popf
sbb
inc
das
rcrl
in
aas
fisttpl
movsl
xor
add
ljmp
rsm
addl
mov
and
cmpsb
jno
or
in
push
pusha
cld
adc
push
popa
std
mov
mov
outsl
mov
stc
sbb
push
out
jno
icebp
cmc
cmp
fs
movsl
lea
xchg
loope
fwait
test
enter
push
lret
hlt
push
pop
inc
xchg
adc
clc
jg
mov
sub
and
fcmovnu
inc
sub
pop
jb
xor
int
jle
jne
repz
xor
sub
pop
es
pop
gs
loopne
sub
or
xchg
movsl
sbb
in
lret
imul
pop
leave
call
jl
mov
jae
push
sub
mov
push
jg
rclb
adc
sub
leave
mov
ret
pop
pop
enter
stos
push
shrb
outsl
jp
fstpl
pop
aaa
sub
fidivs
mov
sti
inc
push
pusha
loop
mov
fcomps
std
ret
insl
pop
add
jle
rcrb
cmp
add
js
cmp
push
lods
sub
pop
fnstenv
sub
icebp
pop
je
pusha
dec
outsb
mov
cld
mov
inc
mov
sbb
or
lahf
sbb
lds
lods
ljmp
inc
adc
loopne
icebp
in
imul
jmp
mov
stos
repz
cmpsb
mov
rorb
xchg
cmpsb
and
push
and
movsb
pop
inc
jecxz
and
movsb
dec
mov
insb
std
ret
fiaddl
sbb
mov
pop
jg
repnz
adc
jns
cltd
out
jb
jo
jle
mov
adc
into
jo
loopne
sbb
fdivrl
push
dec
pop
sbb
mov
ljmp
enter
fistpl
cmp
and
or
pusha
lea
adc
and
cmpsb
cwtl
shl
xchg
int3
lods
mov
jle
and
or
lock
loope
jg
ficoms
fs
lret
lods
aam
pop
mov
insl
xchg
mov
loope
sbb
push
cmp
stc
push
add
loope
adcb
in
xor
mov
push
pop
hlt
xchg
adc
fidivrl
pop
flds
dec
repnz
nop
push
shl
mov
jmp
mov
jmp
mov
inc
pushf
push
gs
call
bound
fdivrl
xor
mov
xchg
mov
data16
push
and
cmp
test
or
loopne
xchg
lds
cmpsl
dec
loope
cmp
jno
pop
gs
test
dec
or
imul
fists
pop
sub
sub
int
fwait
mov
push
pushf
lods
or
inc
dec
pop
mov
dec
insl
popa
or
dec
pop
rcrb
ret
jmp
jae
mov
orl
mov
mov
bound
gs
push
xchg
nop
xor
xor
push
mov
mov
bound
adc
daa
mov
cmp
loop
cmpsl
push
dec
out
aad
cld
jl
movl
mov
insb
fbstp
aaa
mov
jl
lret
push
sti
test
insb
or
scas
loope
out
pop
repz
push
xor
push
mov
cmp
in
movsb
faddp
mov
popl
lret
mov
add
sbb
mov
in
imul
lea
pop
xor
sbb
ljmp
fisttpll
fstl
fstps
sti
call
ss
sbb
xor
or
bnd
mov
fmull
pop
pop
std
ret
lret
ja
in
jb
mov
and
mov
and
inc
sbb
into
aas
push
addr16
lods
lock
jo
jns
mov
xchg
cmp
lds
dec
nop
ljmp
addr16
test
push
rolb
insl
jns
sar
xchg
loope
popf
inc
in
cmpsl
xchg
jnp
fdiv
add
dec
sub
dec
andb
ja
mov
imull
pop
push
fstl
sbb
add
cmp
icebp
pop
loop
add
or
repz
inc
aam
jmp
jmp
sbb
xor
stc
jno
mov
outsb
jbe
test
int3
orl
fs
out
adc
cli
push
or
pop
shr
sbb
xchg
add
jo
xor
xchg
mov
pop
int
jnp
callw
jge
sahf
push
cmp
cmp
lock
adc
imulb
push
subb
dec
in
sbb
cli
imul
stc
cld
fsubrl
dec
cmpsb
inc
add
aaa
popf
js
pop
jg
mov
push
mov
dec
lds
dec
push
gs
cmp
dec
arpl
pop
inc
nop
and
rclb
jns
inc
es
subb
stos
sahf
popf
out
sti
gs
stos
mov
add
sbb
push
rcll
xor
jge
push
adc
mov
aam
push
ss
and
and
sub
sbb
aas
lret
loope
cmpsl
ret
repnz
dec
sahf
cld
xor
mov
mov
sub
idiv
cltd
lods
mov
add
mov
ds
xchg
in
inc
or
and
loop
or
stc
jbe
mov
inc
test
testl
js
sub
mov
test
sub
ret
push
or
movsb
jbe
jmp
sub
dec
lods
pushf
data16
pushf
xchg
ljmp
xor
jb
lods
inc
rcrl
sub
pop
xlat
es
adc
sub
imul
aaa
roll
sarb
test
pop
dec
sub
out
adc
out
dec
or
stos
das
rcll
xorl
xchg
add
inc
sub
mov
out
arpl
fcoms
jno
mov
jo
mov
std
dec
add
cmp
into
mov
mov
xchg
jb
sbb
push
call
dec
or
pop
mov
sahf
lret
test
in
movsl
add
pop
cmp
bound
shlb
scas
shrl
ret
adc
mov
xor
lea
mov
sbb
mov
test
in
dec
sti
ljmp
out
fmulp
lods
add
push
hlt
pop
xor
add
out
pop
dec
aas
or
jnp
push
dec
je
pop
sbb
orb
fwait
xchg
pop
loopne
sbb
jns
mov
ficoms
out
shlb
decb
aaa
arpl
lea
cmpsl
ljmp
and
leave
fldcw
push
dec
lret
push
sahf
and
sbb
and
loope
outsb
cmpsl
call
pop
mov
xor
in
or
pushf
das
jecxz
sbb
xchg
sahf
lret
imul
cmpl
dec
dec
adcl
cmp
andb
jmp
movsb
xor
dec
test
fsubp
adc
lahf
out
adc
xchg
adc
cwtl
iret
inc
sbb
hlt
add
js
push
cwtl
mov
cmp
testb
or
mov
lock
gs
mov
aad
pop
sbb
xchg
je
cmp
loope
hlt
mov
mov
adc
cmp
test
sbb
jmp
dec
or
stos
xor
push
out
mov
or
jo
int
stos
xor
loope
xorb
mov
add
lods
dec
test
gs
mov
fbld
cmc
or
ret
fimuls
rorl
cmp
xor
xchg
cmp
mov
mov
mov
subl
shll
gs
sub
dec
movsb
sbb
movb
and
inc
push
push
iret
addr16
gs
icebp
sahf
pop
or
xor
pop
icebp
dec
xor
fwait
cli
loopne
es
lcall
jecxz
push
jbe
scas
sub
sbb
out
mov
push
mov
test
std
pop
cmp
lcall
dec
cltd
mov
add
pushf
jne
inc
lcall
inc
cs
xchg
cli
leave
jp
out
mov
and
inc
rcrl
out
xchg
dec
icebp
fldenv
sub
cmp
mov
pop
xchg
wrmsr
pop
add
lahf
das
cmp
xor
xor
or
fdivl
inc
repz
les
xor
xor
popf
stos
jo
out
lret
stc
mov
lcall
aas
addl
xchg
lds
cmp
hlt
arpl
and
dec
stc
ret
mov
inc
in
jns
enter
rol
sub
int
jl
and
mov
adc
lret
imul
adc
xor
loope
add
pushf
test
adc
repz
scas
div
repnz
insl
ret
pop
xchg
or
out
mov
subl
fs
lds
sbb
mov
cltd
jno
loop
test
add
push
sbb
sub
sub
adcl
fwait
mov
ficompl
dec
jbe
ss
scas
push
pop
jmp
enter
bound
xchg
pop
cmc
cld
mov
push
sbb
pop
test
adc
fnsave
pop
hlt
cmp
lret
pop
jae
xchg
in
inc
ljmp
es
pop
or
cmp
mov
mov
or
jbe
adc
movsl
ljmp
xchg
imul
lea
xlat
lret
outsb
push
mov
pop
mov
rorl
sbb
xchg
pop
push
int3
jno
int3
aaa
cmp
dec
dec
bound
cltd
jnp
nop
fcomps
faddp
or
sub
aad
enter
test
clc
movsb
inc
xor
xchg
out
stos
jb
mov
jmp
push
jns
pop
mov
xchg
aaa
push
sbb
pushf
ficoms
and
sub
mov
push
push
inc
aad
lahf
pop
xchg
mov
popf
ret
push
add
jmp
jl
mov
inc
pop
movsl
and
mov
jg
sbb
jo
jne
stc
jnp
sub
sub
lods
and
daa
add
clc
mov
filds
nop
loope
inc
sbb
daa
push
mov
add
imulb
cli
inc
cmp
cmp
sti
test
adc
sti
ja
and
lret
out
or
in
push
or
je
rorb
push
adc
push
bound
cmc
ret
loop
push
fdivs
imul
sub
xchg
inc
jge
dec
push
pop
add
and
mov
mov
in
ljmp
outsl
dec
inc
cmp
mov
ja
aas
aaa
test
pop
rcrl
xchg
sub
pop
call
lcall
incb
test
leave
pop
jae
sub
outsl
push
hlt
negb
or
sbb
mul
hlt
adc
lods
pop
push
ljmp
mov
sub
mov
daa
push
jmp
andb
dec
pop
and
inc
mov
pop
leave
addr16
mov
cltd
es
rcrb
pop
int
push
dec
lret
lods
ficoms
mov
adc
push
mov
push
sub
inc
call
sub
int3
es
aaa
negl
in
sbb
jb
sub
xlat
in
sbb
lahf
in
ss
jle
xchg
mov
repz
add
sti
leave
pop
arpl
inc
cmpsb
or
repnz
mov
xchg
les
jl
add
add
aam
shlb
cld
mov
insl
mov
sahf
scas
mov
scas
xchg
jl
sub
dec
loope
aam
or
sub
sbb
sahf
rcl
pop
xor
cs
pop
hlt
fmulp
je
xchg
xor
fs
ret
adc
jp
mov
pop
fimull
cmp
push
mov
xor
adc
shll
cmpsl
push
mov
into
xchg
or
sub
std
jl
sub
loopne
adc
fnstcw
mov
push
inc
test
pop
in
fsubrs
push
aas
mov
sti
pusha
sti
sbb
sarb
mov
fucomp
ss
mov
jle
xor
push
push
icebp
inc
xchg
stos
cmp
sub
mov
hlt
dec
in
in
les
stos
push
lds
mov
cmpsb
jle
xchg
cmp
mov
push
sub
pop
nop
fnop
scas
jg
mov
jae
scas
adc
sub
outsl
jnp
mov
jo
enter
rcrl
pop
add
lret
popf
lea
jge
pop
fwait
mov
pop
xor
fcoms
loope
sub
xchg
push
xor
lret
in
push
add
and
jo
pop
ret
or
mov
inc
rorb
loopne
sub
inc
adc
xchg
pop
scas
aad
jns
inc
fmull
add
mul
lahf
xor
adc
adc
arpl
push
sub
jmp
inc
cmpsb
cwtl
sub
mov
mov
add
subl
cwtl
dec
xor
cwtl
xor
xchg
dec
in
and
pop
sbbb
inc
mov
inc
scas
repz
andl
movsl
mov
sbb
les
push
xchg
cmc
pop
lcall
inc
fnstsw
dec
dec
mov
inc
jo
sub
push
pop
lods
mov
xor
imul
jno
in
adc
shlb
in
jp
mov
push
jge
jg
rorb
lea
arpl
xchg
mov
rolb
or
outsb
inc
aam
add
nop
out
cmp
stos
mov
rcll
sub
in
push
xchg
xor
shl
dec
jle
xor
rorl
sub
pop
in
push
add
cltd
pop
cmp
popl
pop
mov
mov
ficoms
mov
rol
or
xchg
dec
sbb
jmp
popa
sbbb
clc
xchg
xchg
out
stos
stc
test
adc
mov
mov
xor
es
pop
xchg
insl
pop
add
out
ret
mov
les
add
sbb
cmpsb
add
fcoml
rorl
dec
sub
fdivs
test
push
xor
dec
outsl
repz
fistpl
addr16
rcll
les
adc
push
or
inc
cwtl
or
or
xchg
lcall
sti
rsm
ljmp
fbld
dec
and
adcb
jecxz
pop
sbb
ret
sbb
shrl
mov
xchg
js
scas
or
sbb
loopne
inc
jae
xor
and
movsb
mov
mov
cmp
repz
test
mov
stos
jmp
jb
movsb
mov
push
mov
dec
dec
sbb
mov
or
es
stc
repz
mov
xchg
lret
mov
cltd
insb
es
fsub
nop
repnz
imul
xchg
jb
popl
lret
xchg
cmp
ja
jo
xchg
mov
mov
int3
jns
notb
add
cmp
test
lret
ja
cli
cmp
repnz
adc
int3
pop
adc
sbb
push
mov
dec
mov
sub
test
xor
or
stos
or
mov
push
imull
out
pop
mov
popf
push
sti
mov
add
push
mov
ret
jle
cwtl
sub
mov
adc
push
or
and
sub
dec
xor
ficompl
push
push
cmp
divl
add
add
loope
cmc
sub
cmp
pop
les
mov
pop
mov
sahf
inc
xchg
dec
adc
pop
in
push
imul
dec
out
fistpll
das
imul
mov
or
jge
scas
or
into
adc
sbb
mov
sahf
xchg
inc
pop
out
xchg
call
loope
inc
inc
aad
inc
dec
sbb
cwtl
xor
ljmp
scas
mov
in
aaa
xchg
fdivs
gs
mov
loope
int
ss
cmpsl
mov
and
mov
pop
out
mov
in
push
inc
cmc
xchg
cmc
mov
lret
sub
aas
add
xchg
mov
fmuls
repnz
and
dec
xchg
sbb
adc
jecxz
repz
inc
add
xchg
mov
jne
imul
scas
lahf
jg
jge
cmp
je
loopne
dec
xchg
push
jle
fcoms
popa
push
lret
cs
or
mov
fisttps
add
mov
sbb
fisttpl
mov
inc
das
push
dec
or
in
addr16
and
sbb
pop
push
adc
arpl
push
jp
and
push
ror
add
mov
movsb
or
daa
push
frstor
idivl
int3
cmp
sahf
das
rcrb
inc
popf
inc
jmp
xor
ljmp
xchg
dec
pop
xchg
cmp
punpcklwd
insb
push
fstps
push
xor
dec
lret
std
inc
cmp
mulb
and
xchg
stos
inc
clc
das
push
dec
adc
xchg
push
or
xchg
pop
mov
mov
xchg
xchg
xchg
push
lahf
or
ficoms
adc
lcall
stc
pusha
sbbl
mov
fcoml
or
ljmp
cmp
aam
push
xchg
mov
push
or
shlb
or
mov
inc
aas
nop
iret
inc
scas
push
repnz
ret
cltd
ljmp
std
cmpsb
xor
mov
add
fistl
add
adc
cmp
sti
dec
nop
mov
fsub
xor
je
fwait
es
sbb
or
inc
mov
add
xchg
add
ja
clc
fisubrs
dec
test
pop
mov
xchg
inc
jg
sbb
mov
mov
nop
dec
push
mov
cs
ds
or
filds
cmp
aad
sub
out
fisubl
sbb
adc
add
std
movsb
arpl
rcll
adc
into
push
hlt
sahf
jecxz
pop
fwait
in
inc
in
lea
and
sub
subl
cltd
ret
jge
imul
mov
jecxz
adc
push
cmp
loop
sbb
adc
faddl
push
insl
mov
xchg
inc
dec
mov
in
mov
test
aas
iret
or
and
push
mov
pop
and
jae
add
mov
add
pop
stc
sbb
lahf
popa
dec
mov
xor
dec
xchg
dec
push
hlt
adc
mov
lret
xor
xchg
push
std
sub
arpl
imul
out
ds
mov
pushf
mov
xor
sarb
jo
sahf
push
inc
pushf
addr16
cmpsl
outsb
mov
inc
mov
and
dec
mov
sahf
data16
je
lret
mov
rcr
fxam
cmp
dec
pop
aaa
stos
pop
lock
rcr
sbb
loopne
adc
and
shlb
xchg
xchg
out
xchg
sub
push
es
in
dec
popf
cmpb
push
mov
mov
push
inc
push
shr
jle
pop
mov
testl
imul
movsl
jnp
and
xchg
jno
stos
add
add
scas
cmp
mov
test
out
fisubrl
clc
imull
xor
mov
add
imul
das
ja
cmp
mov
int
lds
inc
pop
and
test
push
adc
and
push
gs
sahf
xchg
dec
lods
test
scas
cmp
rsqrtps
stos
fdivrs
cmpb
ret
rcrb
xchg
xchg
inc
mov
xor
cmp
cmp
push
push
and
sbb
outsb
sub
sub
dec
adc
inc
jb
outsb
out
dec
lcall
call
sbb
loope
dec
das
fldcw
dec
lret
inc
push
and
lods
mov
stos
mov
int
jae
sub
mov
sub
mov
adc
shlb
in
loopne
stc
aad
jns
icebp
in
mov
mov
out
int
orl
rol
leave
shll
xor
fcomps
pop
sbb
mov
push
adc
comiss
cmpl
cmp
mov
mov
lods
jecxz
sbb
outsb
in
sbb
arpl
loopne
cmp
add
enter
shlb
push
lcall
imul
cmp
adc
es
dec
pop
mov
xchg
popa
mov
or
sub
sbb
hlt
jne
aam
sub
jmp
or
and
test
and
mov
decb
add
aad
mov
xchg
lret
cs
lods
incl
mov
insl
pusha
hlt
mov
push
inc
icebp
dec
sub
cld
mov
jle
stos
aam
cmp
push
mov
jle
inc
shrb
push
xchg
xchg
outsb
iret
cmp
lret
push
dec
repz
adc
scas
jae
mov
loop
jno
fsub
mov
mov
andb
cmp
cmc
dec
xchg
cld
imul
test
rorb
push
mov
xor
dec
iret
xchg
sub
xchg
mov
cli
adc
test
add
inc
mov
sbb
add
pop
sub
cmp
or
ljmp
adc
lcall
leave
insb
movsb
int
mov
mov
xchg
scas
xchg
push
mov
sti
jl
gs
mov
fidivs
xchg
pop
mov
stc
in
aam
xchg
int
jno
shll
sar
nop
sub
jmp
push
and
adcb
ret
or
ds
xchg
jl
cmovs
repz
shll
sub
mov
dec
std
sub
sub
mov
outsb
movd
or
lahf
mov
test
ljmp
test
xor
roll
xchg
mov
mov
dec
mov
xchg
dec
mov
mov
sbb
xor
std
pop
roll
jb
lahf
mov
lods
flds
dec
jge
aaa
xchg
jle
out
jl
adc
add
jp
mov
sahf
mov
cmp
xlat
or
cltd
pop
pop
and
sti
hlt
enter
shl
sub
push
nop
subl
outsl
sub
jae
mov
js
int3
addr16
pop
push
pushf
dec
arpl
sub
fcom
stos
std
mov
add
jg
jnp
fcmovu
in
shr
and
sub
pop
enter
cmp
nop
rcrb
bound
inc
test
and
adc
pop
push
into
push
scas
lcall
or
mov
lock
mov
test
clc
adc
adc
sub
in
pop
shrb
insl
dec
cld
stc
xchg
jo
xor
inc
adc
lret
lea
xchg
or
mov
fwait
hlt
jo
clc
push
sbb
sub
jnp
mov
mov
sub
sar
outsl
mov
push
divl
mov
ds
mov
pop
ret
fwait
dec
mov
cmc
jb
adc
and
push
xlat
cmc
fnstenv
sahf
cld
pushf
movsl
icebp
mov
test
lods
icebp
inc
lea
imul
xchg
and
iret
in
popf
cmp
xor
clc
pop
xchg
mov
mov
in
mov
jge
push
dec
sub
jg
mov
mov
and
in
loopne
push
out
push
and
add
popf
adc
or
jb
push
add
xor
mov
scas
gs
repz
rol
mov
jmp
lods
mov
movl
jb
xchg
cmpsb
dec
mov
idivl
cmp
mov
cmp
cmc
stc
jg
scas
sub
mov
int3
addr16
iret
mov
ficoml
ret
mov
jno
xchg
fcomi
dec
push
ret
stos
rcll
and
scas
sub
jmp
mov
movsb
or
mov
scas
in
lahf
rolb
or
or
scas
aad
mov
jno
adc
test
es
in
jae
sub
dec
mov
dec
mov
jbe
push
cmc
out
stos
xorb
out
sarl
frstor
rclb
xchg
out
xchg
sahf
cmp
adc
xlat
lret
jl
ret
mov
xchg
adc
mov
out
push
pop
push
lock
push
xor
arpl
test
outsl
or
test
sub
out
aad
inc
mov
cmpsl
test
call
pop
xor
lea
cmp
leave
jnp
and
lds
jle
sti
cmc
ret
arpl
lret
aas
and
subl
stc
cmp
push
pop
dec
lods
loop
sar
icebp
jno
sbbl
and
cwtl
adc
out
push
mov
inc
lea
int
aas
mov
in
insb
mov
mov
stos
sahf
add
mov
or
ss
jmp
cld
jns
out
nop
xchg
xor
enter
cmp
push
jb
mov
test
jnp
fmulp
pop
leave
mov
or
scas
insb
std
xchg
out
idiv
fildl
sub
jge
lds
or
fmuls
inc
mov
orl
mov
pop
push
xchg
xchg
outsl
shl
inc
call
cmp
ljmp
popa
movsb
push
mov
das
mov
jnp
pop
subb
add
jb
shll
and
xor
fildl
test
mov
pushf
filds
test
xchg
mov
xor
f2xm1
iret
push
shrb
js
mov
out
ucomiss
or
xchg
add
adcl
es
adc
push
fwait
cmp
adc
movb
aad
fwait
stc
sbb
leave
push
fwait
mov
xchg
mov
cwtl
dec
cmpsl
or
mov
out
enter
or
sarl
cld
mov
jmp
adc
sbb
shll
dec
pop
out
lret
xor
dec
ss
scas
xor
fildll
hlt
mov
into
xor
xor
mov
jo
fdivs
mov
sbb
in
out
rcrl
stc
push
cmp
xchg
shrl
jle
push
loope
dec
dec
in
sbb
push
clc
fwait
stos
jp
out
inc
fisubrl
ljmp
enter
loop
cwtl
popf
fidivs
fsincos
inc
adcb
xchg
mov
mov
mov
in
jo
rcr
adc
fsubl
cld
lret
inc
testl
inc
lock
scas
sbbb
or
idivl
leave
mov
sbb
and
loop
inc
sub
scas
xchg
push
lahf
fcompl
dec
push
shll
and
mov
aas
std
xor
and
push
arpl
movsb
jnp
addr16
fildll
pop
inc
enter
cmp
dec
aaa
sbb
out
add
aam
fcomip
add
addl
imul
dec
cmp
fmull
subl
push
cmp
jl
stos
les
je
lret
pushf
out
push
pop
fidivrs
addr16
test
insb
jne
mov
ja
dec
sub
repz
pop
pop
ret
xchg
icebp
jbe
or
movsl
ljmp
and
out
mov
inc
loope
or
gs
sbb
cmc
inc
xor
in
sub
mov
icebp
dec
push
sub
sub
imul
sub
cltd
leave
cmp
dec
mov
dec
imul
mov
cmp
adc
mov
and
cmp
sub
loop
leave
mov
daa
lahf
mov
sbb
mov
lds
loope
pop
ds
popf
push
fwait
jg
stos
cmpl
cld
pushf
sbb
stos
inc
sbb
add
daa
mov
push
mov
pop
aaa
cmp
scas
or
mov
xor
test
out
add
mov
add
scas
jecxz
int
or
ja
aad
sub
or
call
mov
sbb
scas
mov
sbbl
xchg
mov
dec
test
mov
clc
testb
push
icebp
lods
bound
push
sbb
inc
mov
enter
daa
lcall
xchg
jp
xor
mov
test
mov
popa
insl
mov
cmp
pop
xor
loopne
iret
pop
xchg
std
sbb
pop
lods
and
imul
add
mov
repnz
push
stos
mov
mov
std
mov
pushf
lock
je
shlb
js,pt
scas
outsb
js
sub
cld
rclb
push
mov
mov
mov
std
or
ja
repz
push
das
arpl
dec
ficomps
jge
mov
xchg
xorb
or
sub
dec
inc
js
sbb
mov
push
adc
jmp
xor
xor
add
insb
stos
mul
xor
lea
add
lcall
lret
test
or
push
movsb
call
out
inc
mov
test
add
mov
pop
pop
add
out
or
mov
xchg
and
pop
adc
mov
add
dec
or
jb
add
push
cltd
mov
xor
push
fwait
cld
xchg
push
out
mov
dec
xor
sbb
lods
xchg
arpl
aam
xchg
jae
or
mov
es
cmp
fadd
xchg
clc
imul
push
decl
add
in
jp
mov
pop
cmp
std
das
movl
mov
pop
inc
test
jne
mov
cli
mov
jno
and
mov
mov
fcompl
mov
test
push
in
stos
xor
mov
aad
mov
in
rcrb
lea
jecxz
daa
and
dec
mov
sub
and
cmc
repz
call
or
cmp
int3
jmp
rol
test
enter
pop
loope
mov
push
in
mov
iret
jno
pop
outsb
roll
jae
popf
or
sub
pop
jno
pushf
sub
out
add
arpl
push
jae
xchg
push
or
repnz
jle
enter
or
or
imulb
scas
dec
cmp
push
xchg
ja
mov
into
xchg
push
mov
jmp
push
adc
mov
fadd
mov
inc
repz
repnz
aas
inc
testb
cmp
imul
sbb
mov
add
lret
scas
insl
test
das
xchg
jecxz
js
jno
push
daa
dec
pop
das
lods
ja
dec
in
push
or
ret
sub
add
dec
addb
cmp
fs
sahf
mov
gs
adc
pop
jb
cltd
aam
imul
int3
pop
sarl
fidivs
jne
out
dec
lock
in
rcrl
sub
lret
loop
xor
mov
push
dec
push
int3
sub
repz
call
sbb
add
inc
sub
sarb
jl
dec
iret
lds
mov
cmp
jmp
mov
mov
fdivp
scas
je
jg
dec
inc
clc
push
jb
dec
testl
push
cs
nop
lds
push
data16
add
mov
testl
push
inc
aas
insl
cld
fidivl
in
mov
pop
ljmp
es
mov
push
push
imul
pop
and
push
mov
out
stos
dec
inc
movsb
sbb
push
mov
loop
sarb
add
ret
shlb
lret
inc
ret
mov
xchg
mov
lds
pop
sahf
or
adc
sbb
cmp
repnz
cmp
xchg
test
push
ret
fsubr
dec
push
inc
fwait
pop
mov
push
dec
mov
enter
cmp
movsb
mov
fpatan
outsl
pop
cs
push
loop
pop
cmp
les
lcall
repz
jnp
repnz
js
add
dec
lods
xor
fucomi
xchg
lcall
xchg
ss
jno
ficoms
cmp
xchg
sub
pop
fsubl
fisttpll
frstor
lock
aad
cmpsl
pop
xchg
insb
add
cmpsb
cmp
lock
pushl
and
mov
sar
xor
bound
cmp
and
adc
das
jae
fwait
jmp
stc
insl
imul
rorb
inc
les
mov
lret
sti
pushf
fcomps
pop
ja
lods
jmp
xchg
add
xor
mov
push
xchg
cltd
into
pusha
aad
and
pusha
nop
lods
bnd
push
mov
jb
push
xchg
test
or
jmp
addr16
jl
shlb
sbb
mov
sti
sub
adc
aam
and
cmp
addb
xor
push
xor
xchg
xchg
es
lds
sbb
cmpsb
and
or
xor
adc
enter
ja
outsb
imul
cmc
pop
add
dec
fstpt
cwtl
ss
movsb
mov
insb
cmova
push
pop
movsb
xchg
and
sbb
dec
aad
mov
cmp
adc
movlhps
imul
mov
or
and
mov
imul
adc
adcb
mov
test
xorl
push
out
push
mov
or
stos
jle
lds
popa
test
fdivrs
add
pop
cs
insl
repnz
sbb
int3
in
or
and
sti
sub
negb
call
or
pop
adc
jnp
push
sar
sbb
jno
sub
jb
daa
cmpb
dec
mov
or
lds
repz
mov
cmp
pop
pop
insl
addr16
push
jnp
fmull
loope
jb
ja
jecxz
fildll
mov
dec
and
dec
cltd
fldl
mov
cli
test
dec
ret
inc
sti
insl
inc
pop
std
icebp
inc
push
lret
cmp
mov
fldt
lahf
std
add
xchg
loop
or
mov
jns
dec
or
pusha
jae
insl
cs
mov
jnp
hlt
jmp
cmp
jnp
push
jmp
ja
outsb
inc
inc
push
test
idiv
pop
push
adc
add
in
sub
jne
jecxz
sbb
out
fsubs
frstor
outsb
movsb
arpl
mov
ja
test
mov
data16
mov
mov
and
mov
mov
pop
mov
or
push
xchg
cmp
int3
std
add
jb
sahf
sbb
ficoms
mov
mov
pop
cmp
loopne
roll
lods
mov
pushf
cli
jae
sub
adc
mull
xchg
jl
xchg
xor
out
mov
and
mov
in
cmp
rorb
inc
ss
xchg
leave
mov
int3
aam
jnp
or
cld
inc
test
mov
xchg
push
bound
in
and
pop
je
jno
ss
push
mov
jmp
mov
and
movsb
movsl
cli
insl
xchg
mul
mov
sti
imul
imulb
pop
cmpsl
mov
sbbl
add
sbb
sbb
adcb
cmpsb
xor
jno
or
scas
xorl
insl
mov
pop
sbbb
mov
adc
xchg
pushf
xchg
popa
es
dec
jge
xchg
mov
and
mov
add
inc
sub
clc
inc
lahf
sub
daa
cwtl
movsl
add
cmpb
mov
push
sub
xor
icebp
mov
fwait
imul
fldl
mov
dec
int
mov
stos
and
popa
icebp
mov
pop
cmp
or
sar
cmpsb
cmc
add
inc
and
mov
sahf
sub
addb
mov
inc
shl
jno
and
jp
arpl
sbb
pop
fldt
and
call
sub
add
js
jno
shrl
repnz
cmp
jmp
pop
jmp
inc
sub
mov
cmp
xchg
fdivs
fcmovnu
mov
adc
cmp
fs
cli
pusha
inc
xor
popl
push
decl
loop
imulb
ss
aas
iret
or
xor
hlt
cld
ret
pop
addr16
and
xchg
pop
mov
pop
js
and
xor
and
fst
or
fnstsw
push
jbe
xor
inc
sub
mov
push
lock
es
mov
push
push
inc
mov
pop
and
call
imul
pop
daa
push
imulb
dec
fdivrs
popa
rcrl
mov
or
or
pop
pop
mov
popf
and
inc
test
loope
cmp
push
cltd
int3
sub
pop
inc
pop
sub
inc
jns
dec
lcall
adc
adc
arpl
dec
aad
jns
and
sub
dec
shl
mov
lods
popa
or
mov
lods
bound
add
iret
daa
gs
fbld
xor
pop
das
sahf
push
lods
es
sub
xchg
loop
inc
xor
repnz
xchg
push
mov
shlb
out
outsl
std
lea
loope
mov
cmp
pop
mov
mov
xchg
push
cmp
out
xor
lock
cmp
mov
and
stos
gs
cmpsl
xchg
stc
pop
rcll
aad
adc
aas
pop
dec
xchg
in
fstpt
xlat
push
adc
repz
fbld
sahf
mov
jb
dec
cmpsb
sub
lds
xor
repnz
out
or
loop
add
mov
movsb
push
aas
and
push
js
mov
xchg
test
inc
dec
pop
xchg
test
imull
push
inc
loop
sbb
or
pop
sub
jbe
pop
and
out
cmpsl
sbb
inc
cmpb
mov
mov
xlat
sbb
and
stos
sbb
fmuls
pop
mov
jbe
push
loopne
ret
stos
sbb
push
mov
and
in
jg
jae
mov
pop
ret
rol
or
or
dec
jo
int3
sti
or
dec
mov
mov
out
cmpsb
pop
dec
mov
xchg
pop
mov
cld
fistpl
sbbb
out
nop
sub
fistl
sbb
xor
imul
cmp
mov
xor
shl
fmulp
cmpsl
add
inc
test
mov
push
xor
f2xm1
inc
mov
js
inc
mov
mov
xchg
sbb
push
lods
dec
out
rorl
pop
xor
call
and
jge
add
mov
gs
jmp
add
fists
in
fs
ja
fs
mov
pop
and
sub
jmp
mov
sbbb
jb
or
in
lret
xor
int
sbb
das
cmp
push
in
iret
mov
mov
xor
jne
pop
inc
icebp
adc
xchg
call
nop
xor
lods
lcall
mov
fisubrs
mov
push
int3
fists
dec
push
es
xchg
pop
lcall
pop
andb
cmp
cmpsb
repz
mov
push
sub
es
and
sbb
test
rclb
add
push
add
mov
pop
loop
pop
jne
mov
lea
xchg
out
xchg
xchg
push
fmul
test
pop
cmp
mov
ja
cmpsb
insb
dec
repnz
bound
hlt
or
xchg
dec
test
jp
sub
mov
into
lret
jmp
ret
xor
repz
ljmp
adc
add
ret
lods
mov
lahf
push
ljmp
mov
sbb
rorb
push
addr16
xor
dec
lret
pop
es
xchg
xlat
cmc
leave
push
call
sahf
adc
loope
and
pop
test
add
jg
xchg
mov
adcl
stc
imul
iret
jecxz
add
sbb
sub
add
mov
in
mov
fadd
hlt
mov
jecxz
daa
and
outsl
leave
xor
dec
test
add
mov
lods
xchg
pop
insb
std
mov
sarl
xchg
test
lea
or
pop
scas
xchg
dec
cmpsb
pop
sub
stos
push
mov
jecxz
mov
and
roll
pop
push
je
je
rolb
xchg
ret
xchg
bound
xchg
jecxz
mov
sbb
ret
cmp
ljmp
sbb
ss
cmpsb
dec
adc
xchg
dec
jmp
ja
and
push
repnz
inc
fisttpll
stos
aam
jnp
fcomps
stc
sti
xor
cmp
push
leave
inc
fidivs
js
and
mov
pop
scas
gs
stos
das
leave
enter
mov
sahf
hlt
les
dec
fisttps
sahf
push
sbb
dec
pushw
fimuls
jp
or
sub
jae
mov
gs
test
adc
sahf
sahf
or
insl
iret
out
je
data16
inc
ljmp
aas
cmp
push
negl
mov
int3
lea
inc
repnz
enter
jg
pop
outsb
adc
call
jno
or
jle
in
inc
push
pop
out
movzbl
test
scas
xchg
xlat
popa
mov
xor
sub
outsl
std
add
rorb
xor
jae
aaa
mov
mov
les
js
fwait
and
ss
lock
scas
and
dec
dec
push
test
add
clc
pop
es
xchg
loop
mov
cltd
loop
cmpsl
sub
inc
mov
push
lock
jmp
mov
xor
aas
sbb
mov
je
jecxz
std
xchg
mov
dec
or
aaa
adc
mov
ds
adc
stc
push
scas
int
pop
sbb
ret
ret
popf
mov
add
aaa
push
sbb
pop
xchg
mov
inc
pop
xlat
cltd
repz
jo
fsubrp
sub
dec
mov
sub
mov
dec
ds
fists
inc
fistpl
bound
inc
sbbl
popf
xchg
int3
xor
es
pop
movsb
fs
jmp
sub
sub
and
or
sbb
push
out
int
mulb
jmp
lahf
test
pop
lret
or
hlt
or
ljmp
dec
dec
fstl
xchg
ja
rcrl
push
cmpsb
mov
imul
int
mov
out
jl
sahf
sbb
pop
mov
cmp
jmp
loop
imulb
js
in
testb
es
xchg
inc
jmp
lret
jge
add
mov
mov
loope
insl
imul
repz
and
and
stc
pop
inc
repnz
and
xchg
jle
jmp
and
jge
mov
push
add
push
and
mov
adc
sub
mov
orb
cmp
xchg
mov
int
add
movsl
jp
pop
lret
shll
mov
outsl
inc
dec
push
pop
xchg
mov
cltd
fs
out
xor
jecxz
push
mov
sub
leave
inc
push
mov
sbb
daa
xor
xor
not
sbbl
mov
daa
rorb
mov
dec
pop
fdivp
xchg
roll
sbb
pushf
sahf
cmp
jl
dec
add
add
cld
and
mov
pop
cmc
aad
cmp
hlt
movsl
and
sahf
mov
fnsave
int
std
repnz
jmp
push
add
push
ret
clc
rcl
imul
xor
mov
icebp
push
stos
es
pop
sub
and
sub
mov
xchg
es
movsl
cmp
dec
in
daa
xor
xor
fwait
inc
clc
hlt
clc
adc
inc
pop
mov
sarl
xchg
data16
cmc
psrld
lea
mov
repz
jne
mov
mov
jae
fxch
shl
jp
cld
sbb
loop
mov
in
leave
inc
sti
sarl
mov
sub
fsubrs
jae
popf
adc
xor
jle
repz
or
mov
outsb
out
xcrypt-ofb
cmpsl
scas
fnstenv
push
push
dec
pop
cld
hlt
xor
repz
aaa
data16
and
pop
mov
mov
xchg
mov
icebp
adc
iret
pop
xor
lock
insl
cmp
dec
mov
cmp
aas
in
inc
add
ljmp
dec
xchg
mov
fcomip
in
mov
jle
test
mov
daa
lret
xor
add
xchg
dec
out
sub
cmp
push
jge
jmp
mov
hlt
jmp
fisttpll
lret
mov
xor
sbb
popa
repnz
aad
aas
mov
mov
cmpb
mov
mov
imul
in
ss
test
fstpt
cmp
add
xor
int
test
aaa
push
cltd
pop
stos
scas
stc
scas
pop
sarb
jg
and
push
adc
mov
mov
aam
and
sub
je
or
add
es
icebp
mov
add
and
sub
rcll
xchg
repnz
add
jns
test
addr16
push
add
mov
mul
cmc
add
jle
push
ficompl
imul
rcrl
sub
ja
aad
call
xor
outsl
pushf
jne
mov
pop
lret
lea
xchg
iret
mov
adc
pop
mov
and
pop
pop
xor
outsl
or
xchg
mov
dec
cmp
inc
adc
mov
adcl
or
nop
insl
out
or
lock
xlat
into
sub
add
int
ljmp
xor
jl
incb
push
push
lcall
popa
xor
mov
pop
pop
hlt
and
push
and
mov
bound
sub
xor
test
mov
rorb
jge
add
xor
xchg
movsl
or
xor
fs
cmc
fistps
adc
imul
fnstenv
mov
adc
pop
jmp
jge
pop
cmp
pop
inc
jno
stos
push
aam
pop
inc
xchg
mov
adc
xchg
lods
ljmp
and
fcmovbe
lahf
ret
inc
cmp
out
sub
sbb
fnstsw
xchg
xchg
out
addl
mov
mov
popf
mov
push
cli
sbb
ds
xchg
mov
sbb
pusha
test
dec
sub
loop
xchg
dec
loopne
cltd
inc
out
xchg
or
jg
xor
and
enter
repz
cmp
add
pop
rcrb
sbb
dec
scas
jae
arpl
imul
jns
popa
ficoml
es
pusha
cmp
jp
jae
fistl
data16
repz
sbb
jno
test
dec
outsb
xor
add
not
mov
mov
mov
call
ja
jae
sti
movsb
jg
pop
inc
shrb
out
les
sub
push
sbb
mov
pop
js
arpl
jge
repz
mov
push
mov
sub
sub
sahf
jno
lods
sbb
pop
adc
xor
mov
jnp
mov
subps
pusha
daa
aas
arpl
mov
xor
aam
nop
xchg
mov
cmc
mov
jmp
push
push
int3
jp
xor
sbb
cmpsb
movsb
push
pop
and
test
stc
lahf
fdivl
outsl
rcl
inc
mov
pop
mov
push
es
sub
mov
pusha
nop
cmpsb
cmp
mov
ret
sub
xchg
pop
dec
add
sbb
jne
les
add
and
sub
faddl
cli
xor
icebp
dec
repnz
not
cmp
jp
mov
test
orb
leave
push
inc
idiv
pushf
popf
lcall
cmp
pusha
mov
ljmp
push
int3
std
aaa
jae
xchg
jle
mov
jae
cmp
lds
addr16
jns
gs
xchg
pop
outsb
mov
xor
dec
cwtl
mov
mov
addl
and
clc
test
inc
push
cmpl
insl
and
push
add
lea
loopne
push
xchg
rcrb
int3
inc
mov
jne
dec
adc
dec
aas
mov
pop
fwait
mov
in
xchg
and
push
mov
ss
cmpsl
mov
in
movsl
cmp
jle
pop
cli
or
push
push
out
outsl
loopne
cwtl
inc
sti
cmp
mov
pop
faddl
sbb
jle
or
nop
and
dec
aas
jmp
lahf
sub
mov
push
sub
cmp
ja
mov
adc
cmpl
mov
sahf
mov
std
mov
inc
sbb
sbbb
push
cmp
stos
hlt
xor
inc
jle
orl
pop
mov
xchg
insb
pop
jecxz
lods
cmpsl
std
and
inc
mov
in
das
ss
jb
ror
xchg
push
inc
andl
test
cmc
fistpll
imul
jnp
fs
out
out
andb
pop
xchg
mov
cmpb
les
popf
icebp
and
push
mov
cmp
mov
or
adc
scas
test
push
xchg
outsl
sub
push
mov
les
orl
jl
inc
movsl
fwait
push
nop
outsl
xchg
jecxz
outsl
rcl
or
test
adc
push
shr
roll
cmc
daa
stos
push
cmp
jecxz
ja
and
andb
imul
push
hlt
and
mov
into
xlat
movsb
inc
leave
cmp
pop
mov
cmpsl
lods
and
add
add
and
and
push
pushf
mov
xchg
cmp
ror
or
inc
out
sub
mov
jg
cmpsl
outsb
jle
inc
subb
mov
xor
mov
adc
clc
cmpsb
jnp
mov
mov
test
and
call
sub
cmc
pop
insb
js
fimuls
fdivr
xor
hlt
loop
cs
repz
int3
lahf
mov
leave
xchg
nop
mov
and
rcr
mov
lret
inc
push
and
or
outsb
stos
xor
loop
add
je
shrl
test
xchg
insl
jg
push
jbe
xchg
push
adc
jmp
into
sub
pushl
or
pop
fidivl
test
lahf
or
mov
test
xor
add
es
les
dec
insl
fstpt
cltd
push
mov
pushf
dec
stos
jg
aad
call
add
ss
pop
loopne
dec
jmp
sbb
faddl
push
fidivl
add
incl
std
scas
sub
repnz
cmp
add
lret
mov
in
push
imul
inc
xor
sbb
cmp
sub
lods
jb
sub
and
stc
ljmp
int
inc
fildl
mov
sub
push
aam
mov
mov
mov
push
dec
mov
out
mov
clc
mov
jb
mov
mov
pop
jg
xlat
loope
dec
add
daa
mov
shlb
cwtl
cmpsl
push
or
jecxz
lods
shll
inc
or
push
lods
xchg
pop
or
je
clc
jmp
inc
pop
fcompl
cmp
mov
dec
cmpsb
push
jp
add
clc
fcompl
lret
sub
push
push
sub
insl
das
dec
sub
inc
mov
jne
jge
push
and
mov
je
leave
pop
testb
dec
jb
mov
mov
push
scas
movsb
lret
xor
xor
xor
jbe
addr16
jnp
clc
orb
mov
js
inc
inc
shl
ficoms
mov
insl
sub
sub
cmp
movsb
and
jge
push
out
mov
movsl
std
xchg
xchg
push
xchg
jno
fsubl
fists
or
or
pop
out
mov
mov
ss
xlat
xchg
jb
push
adc
inc
sbb
pusha
je
ror
clc
aas
fcomps
cmp
push
xchg
fiaddl
cltd
mov
xorl
imulb
fsubl
push
ss
sbb
mov
mov
roll
jae
dec
xchg
pop
push
iret
outsb
aas
test
inc
xor
and
lcall
sbb
scas
jnp
lea
cs
mov
push
insl
push
sbb
aaa
in
jns
mov
mov
out
pushf
lret
cwtl
and
das
js
jecxz
sub
andb
mov
movsb
loope
push
and
add
pop
inc
jl
fs
xorl
inc
or
and
sbb
cmp
adc
shrb
pop
push
xlat
frstor
sbb
das
adc
loope
pop
add
repz
movsl
sub
shrb
aas
inc
xor
out
and
cmp
pop
mov
int3
adc
sti
subb
adc
mov
mov
popa
jb
pop
shrb
xchg
aas
adc
dec
push
jge
ret
sub
ret
movsb
sub
iret
adc
idiv
addr16
or
sbb
aas
cmc
dec
xchg
jmp
outsl
pop
lock
dec
add
lret
xlat
cmp
andb
mov
pop
scas
int3
popf
loope
pop
pusha
ja
repz
les
out
inc
cld
or
aaa
dec
xchg
rcll
and
ja
aas
stos
sbb
jg
dec
lods
xor
push
push
pop
inc
sarb
mov
pop
push
cmp
outsl
push
xchg
sub
inc
adc
adc
pop
pop
cmpsl
out
jnp
sub
push
fwait
push
cwtl
pusha
js
int
pop
rorl
and
sbb
jne
mov
xlat
xor
lahf
inc
mov
mov
test
sub
add
das
lods
loope
pop
push
cli
int
mov
mov
sub
pop
inc
mov
scas
stos
in
add
jns
mov
inc
stc
ret
loope
cmp
nop
sbb
and
test
ret
push
popa
ja
or
dec
or
icebp
push
add
imulb
cmpsb
jnp
stos
dec
pop
data16
call
aaa
push
cwtl
jle
mov
jnp
jge
cld
test
enter
cmc
push
pop
or
scas
dec
sahf
lock
cmp
cmc
test
lcall
cli
xor
loop
adcl
int
push
sub
scas
cmp
subl
xchg
push
adc
or
dec
xchg
pop
lret
out
nop
pop
aas
push
cmp
dec
mov
sti
pop
cltd
mov
mov
jne
dec
mov
das
cmp
inc
fcompl
into
sbb
fwait
and
out
cmpsb
pop
ficomps
mov
or
mov
adc
inc
cmpsl
mov
mov
out
test
pop
xchg
std
aaa
jns
mov
jno
scas
gs
lcall
and
pop
sbb
inc
cmp
lcall
adc
jmp
sub
pop
lret
pushf
inc
adc
jae
sahf
cmp
jmp
pop
outsb
sbb
sahf
cmp
and
push
mov
je
pop
push
pop
clc
push
fstps
or
and
mov
sub
and
lds
psrad
lods
jne
insb
das
lea
fwait
mov
cmpsl
mov
cwtl
or
add
insl
add
mov
and
mov
les
decl
shll
es
jo
mov
push
jno
mov
inc
hlt
inc
xor
rcr
loopne
adc
and
mov
jmp
rcrl
mov
cmpb
dec
divb
pop
pop
cltd
pop
insl
or
add
sbb
or
sub
cmp
jb
xchg
sbb
cltd
add
mov
cmp
iret
pop
lods
dec
push
pushf
in
sbb
in
fimuls
adcb
ds
xchg
jl
movsl
aam
pusha
int3
adc
push
outsb
pop
add
insb
orb
je
std
cmpsb
mov
mov
or
sub
mov
pop
lods
cmc
sub
cld
gs
dec
pop
andb
leave
xchg
mov
out
push
clc
jecxz
sub
push
adc
stc
push
ror
dec
or
adc
lea
xor
jae
cmc
jno
jge
addb
leave
ljmp
addr16
flds
call
mov
lcall
pop
loope
mov
dec
out
and
pop
shrb
ret
mov
adc
cli
cmpsl
inc
xchg
pop
dec
outsb
or
lret
xchg
xor
insl
pop
mov
and
adc
orb
mov
sahf
and
push
ret
addr16
lret
daa
pop
nop
imul
mov
andl
lret
pop
leave
out
ds
or
sub
lds
xchg
mov
jbe
cwtl
fs
pop
and
pop
sahf
push
sub
adc
mov
roll
lods
mov
xchg
xchg
xchg
gs
lahf
sarb
xchg
decb
lock
pop
movb
inc
xor
inc
test
cli
aam
inc
push
sbb
notb
cmp
mov
call
fisubrs
ret
lahf
das
pop
push
daa
sub
adc
sub
fsubrp
jl
jp
loopne
std
dec
dec
lods
clc
inc
les
nop
out
lcall
cmp
xlat
xchg
orb
push
mov
mov
mov
and
mov
mov
test
packsswb
clc
out
mov
add
sub
imul
fcomi
mov
data16
mov
lods
out
adc
fs
pop
cmp
or
fidivrs
addr16
xchg
cmpsl
xchg
sbb
pop
popa
xchg
cmp
xor
fistps
mov
mov
dec
adc
dec
imul
jns
loopne
cs
sub
imul
sbb
mov
mov
sti
inc
fiaddl
jmp
jmp
test
lahf
push
xchg
test
add
add
lea
jne
and
xor
inc
rorb
fnstcw
add
es
inc
lds
outsl
nop
or
mov
inc
push
or
data16
testb
dec
add
jno
and
and
push
mov
js
or
inc
ret
inc
scas
sbb
pop
xchg
movsb
xchg
xor
repz
int
sti
ret
xchg
scas
or
outsl
test
push
jae
outsb
sub
xor
rclb
push
push
inc
into
xlat
push
xchg
repnz
and
call
and
cmp
dec
cmc
push
dec
and
mov
leave
sbb
adc
xchg
cmp
test
js
jl
jmp
jnp
adc
mov
jp
cwtl
adc
inc
daa
popa
push
fwait
sbb
lea
mov
pop
jmp
test
aaa
jbe
in
mov
ss
stos
std
scas
add
ror
or
sbb
fisttpll
sub
stos
hlt
xor
jno
mov
dec
cmp
mov
xchg
xor
negl
add
mov
mov
pop
mov
or
pop
mov
repz
into
xor
fnstenv
int3
notl
jmp
mov
sti
mov
or
add
push
leave
insl
sbb
call
pop
popa
hlt
int3
les
pop
jp
pop
adc
sub
dec
std
int3
mov
enter
sbb
shrl
mov
repz
sub
aas
mov
xchg
int
jae
in
or
push
xor
pushf
xor
loopne
pop
push
or
lcall
and
dec
fsubs
cmpsb
sub
or
fcmovnu
divl
jo
jg
test
cmpsl
add
and
ret
and
add
adc
fs
adc
movsb
jbe
inc
lea
jae
or
pushf
ss
mov
mov
and
inc
fs
sahf
dec
adc
mov
ljmp
enter
xchg
je
movl
mov
sbb
rol
std
stos
xor
decb
add
sub
imul
adc
dec
push
or
iret
xchg
sbb
adc
fldl
mov
adc
push
iret
sbb
sbb
jmp
das
sub
dec
or
stos
cs
push
stos
clc
push
mov
mov
sbb
pop
insb
xorb
mov
das
dec
push
std
xor
imul
daa
popa
cmp
out
ja
inc
lcall
jnp
jg
loopne
and
aad
jns
push
adc
scas
icebp
mov
movsb
nop
mov
mov
xor
lcall
dec
push
jae
adc
mov
or
xor
popl
out
outsb
pop
mov
sbb
cmp
push
xchg
shll
mov
ja
daa
or
fnstcw
int
push
push
out
xchg
mov
and
push
inc
sub
sub
mov
inc
add
lock
and
jb
xor
pop
int
aam
jecxz
cmpsl
mov
cmp
das
addb
sbb
les
movsl
fists
mov
test
jae
adc
lods
sub
jl
pop
cmp
inc
movsl
fbld
xchg
in
fisubl
pushf
add
sub
int
xor
xchg
enter
out
out
sbb
sbb
dec
xor
loop
cmp
lds
lock
xchg
daa
pop
inc
push
std
add
add
mov
lret
test
sbb
pushf
sub
shrl
sub
cmp
sahf
pop
in
add
rcll
sbb
inc
addr16
xor
int3
or
jg
mov
jae
xchg
fnstenv
outsl
test
loopne
fadd
add
test
pop
jecxz
push
in
test
xor
stos
int3
lret
clc
xchg
pop
lods
cmpl
adc
loopne
mov
sbb
stc
imul
jge
xchg
inc
jl
cmp
jge
into
roll
pop
js
loope
inc
xchg
jp
push
adc
out
push
fwait
xchg
cmp
movsb
dec
xchg
sbb
int3
xchg
aam
cmpsb
lret
pop
cmp
jo
sbb
insb
jo
sub
and
and
sbb
add
pushf
int
push
sbb
pop
xchg
cwtl
in
adc
bound
lret
push
out
pushl
adc
popa
adc
gs
pop
lods
mov
test
mov
stos
hlt
out
ss
xchg
push
test
push
push
mov
rcrl
test
push
push
jge
cmp
ficoms
mov
or
inc
mov
call
mov
shll
or
jg
aad
add
mov
lea
in
push
icebp
mov
xor
inc
pop
lcall
push
pop
popa
mov
int
mov
lock
or
data16
sub
sbb
fdivl
lret
div
sbb
lods
aas
sub
lock
inc
jp
stos
inc
xchg
pop
mov
es
lret
fmuls
and
xchg
loopne
push
hlt
cwtl
es
push
cmp
je
and
mov
mov
rolb
mov
fs
add
aad
adc
jbe
mov
lods
imull
mov
add
rcl
fcompl
cmp
addr16
pop
xchg
and
das
roll
cmp
jae
pop
pop
sbb
push
lret
pop
pop
int3
repz
pop
repz
sbb
lahf
xor
imul
pushf
int
fistpll
mov
mov
fsubl
out
cmp
push
aaa
cld
loop
test
je
jge
scas
shlb
inc
out
outsl
sbb
dec
pop
test
dec
mov
mov
divl
pop
fs
xor
inc
mov
inc
sarb
bound
cmp
ror
fmul
mov
dec
out
lret
lret
pusha
clc
leave
xchg
jb
pusha
dec
cmp
sub
stos
cs
imul
sub
stc
mov
xchg
mov
loop
movsl
dec
popa
movsl
fisttpl
out
mov
mov
std
xchg
sub
mov
add
or
rorb
mov
xor
add
sbb
and
xchg
pop
psubusb
cmp
into
fiaddl
enter
add
or
pop
outsb
sub
jae
cmp
inc
in
js
add
ret
in
adc
mov
lret
jl
push
inc
ljmp
rcrb
and
mov
sub
ss
scas
or
cltd
aam
in
jbe
jmp
xor
shll
lret
rclb
and
pop
test
popf
fsts
aam
sub
lods
sbb
aaa
ss
mov
inc
sbbb
push
aas
xchg
sete
xchg
mov
mov
repnz
test
fsubrl
inc
jge
int
jo
inc
jecxz
inc
sti
rclb
sahf
cmp
xchg
inc
or
adc
mov
shl
mov
jo
sub
sbb
aam
or
scas
orb
pushf
bound
add
pop
fwait
mov
pop
loope
sbb
rorb
hlt
hlt
lock
xchg
fsubrl
stc
das
std
dec
frstor
adc
inc
mov
je
imul
mov
hlt
lea
sbb
mov
xlat
mov
out
outsb
jecxz
inc
stos
je
aam
mov
outsb
insl
or
es
in
out
fs
adc
push
movzbw
jle
addb
adc
cmp
les
ss
xchg
adc
fnstenv
insl
mov
sbb
pop
fnstcw
mov
mov
test
mov
or
sbb
sub
lret
shll
fbld
or
jmp
xor
jmp
push
xchg
sbbb
loop
stc
cmp
lret
lcall
xor
test
sub
sbb
and
fdiv
loop
inc
popf
push
push
adc
cld
mov
or
orl
mov
sbb
or
xchg
mov
das
push
xadd
insb
loop
std
cmpsb
fisttpl
lds
mov
loop
sbb
in
cltd
add
mov
or
ljmp
jge
pop
xchg
out
sub
mov
pop
and
jge
repz
mov
adc
or
rcrb
addr16
xchg
mov
lahf
sbb
ja
lahf
hlt
ljmp
xchg
or
scas
in
cld
ror
inc
loope
sbb
subl
push
or
bound
ret
sub
sbb
mov
mov
jmp
pop
ja
xchg
push
daa
mov
cmp
addb
xchg
xchg
jbe
out
jl
cli
mov
lret
fcoms
xor
sub
xor
pop
inc
rep
xchg
jb
in
dec
mov
pop
mov
push
iret
xor
jge
xchg
movb
jae
pop
insl
xor
fwait
dec
jbe
fisubrs
sub
jmp
ret
enter
mov
xlat
push
inc
pop
repnz
push
out
gs
xchg
out
insb
je
bound
in
adc
jp
adc
decb
repz
sub
std
daa
data16
xchg
stc
in
pop
das
scas
push
mov
sbb
mov
cmc
in
lcall
adc
loopne,pn
out
mov
sub
das
cmc
and
pop
mov
test
shrb
mov
lret
insb
or
jbe
inc
rcll
push
aaa
mov
sub
or
mov
int
push
jp
jl
fiadds
aaa
in
aad
sbb
test
imul
and
add
fadd
xchg
dec
sbb
pop
mov
test
ret
xor
and
or
inc
jbe
bnd
xchg
in
mov
out
xchg
xchg
dec
mov
js
sahf
inc
dec
mov
rclb
fidivrs
loop
jae
dec
loopne
push
sub
movsl
push
xchg
cmp
mov
cmpsb
mov
imul
adc
lock
inc
mov
sub
mov
fs
into
dec
jb
dec
cmp
xor
push
xor
sub
cmp
xor
psubsw
pop
popa
pop
repnz
push
and
ret
mov
fsubrl
jbe
mov
mov
loope
add
lock
inc
mov
push
popa
mov
mov
scas
inc
or
insb
repnz
mov
adc
test
in
mov
das
inc
sahf
cmp
cmpsb
aas
movb
aas
vpmulhuw
sahf
mov
cld
sub
fwait
enter
fidivrs
push
xlat
js
jl
sbb
or
mov
in
xchg
inc
loope
mov
or
mov
pop
lahf
mull
and
jmp
xor
and
xchg
add
ds
mov
cmp
mov
stos
aas
outsl
inc
lcall
decb
jmp
imul
and
dec
loopne
int
add
jg
aad
cmp
sbb
cmpsb
and
dec
mov
pusha
sbb
push
add
in
jno
movsl
sub
dec
xor
rolb
mov
add
sub
push
cmp
sbb
xchg
scas
pop
inc
push
cmp
les
or
lret
idivb
inc
mov
sbb
mull
mov
jl
data16
outsl
pusha
fcmovb
pop
dec
xor
rclb
int3
adc
xor
add
push
in
das
test
test
out
xchg
loope
mov
or
repz
shl
sahf
popa
dec
fsubl
jl
or
rorb
cld
and
sbb
and
lahf
dec
jle
ret
xchg
sahf
out
and
in
jae
test
mov
pop
inc
out
or
or
xor
pushf
inc
jecxz
push
push
mov
shrb
mov
mov
mov
xor
pushf
or
dec
sub
repnz
fdiv
popa
push
cli
gs
inc
popf
dec
mov
and
cld
test
pushf
pop
cmpsb
inc
sub
cmp
jl
pushf
mov
pop
enter
sbb
call
mov
lods
icebp
or
je
loop
push
into
inc
sub
cld
sbb
mov
imul
cmp
test
and
cmp
sub
into
dec
xchg
mov
jecxz
in
xchg
bound
dec
mov
jb
add
arpl
orl
fwait
orl
lret
mov
andl
xchg
popa
sbb
stos
add
sub
adc
lods
mov
ret
dec
push
rolb
and
aad
je
pushf
fwait
fs
shlb
lds
xchg
push
lods
subb
lahf
mov
adc
lock
inc
adc
shr
cmc
insb
cmp
in
push
addb
in
push
mov
mov
pusha
outsl
inc
jp
pop
sbb
push
enter
sbb
fsts
mov
adc
xchg
mov
das
into
movb
ljmp
push
cmp
dec
sub
xchg
leave
mov
ss
xchg
loop
pop
std
pop
push
gs
add
getsec
jo
pushf
movsl
xchg
jbe
loope
push
stos
pop
sub
mov
push
lods
outsb
pop
lret
jb
push
data16
hlt
loope
mov
mov
test
cltd
mov
add
mull
mov
in
xchg
adc
jnp
add
sub
mov
xchg
adc
lock
cmp
mov
ret
sub
int
aad
aas
js
xchg
mov
rcrl
inc
cmp
fcmovu
push
jno
aaa
xor
dec
push
gs
inc
call
clc
fcomps
adc
adc
xchg
adc
cwtl
jg
pop
leave
addr16
sub
or
xor
into
or
loopne
pop
outsb
aam
cmp
call
mov
push
ss
cmp
push
scas
or
pop
and
or
and
test
out
jae
cmpsl
adc
mov
cmp
call
xchg
shlb
test
in
xchg
iret
rcrl
xor
rorl
add
filds
js
popf
ret
fwait
jb
std
mov
sub
cmp
and
xor
outsl
sbb
mov
sbb
pop
xor
push
call
jno
xchg
push
roll
lretw
xchg
in
into
movl
addr16
xchg
lds
xor
cmpsl
cmp
stos
mov
pop
inc
data16
jmp
ret
lock
sub
cs
test
ret
fisubs
xchg
pop
lcall
imul
xorb
xor
cmpsl
in
jl
push
sbb
les
lret
mov
inc
mov
ljmp
xor
sbb
push
loopnew
adc
scas
addl
add
mov
pop
idiv
mov
pop
cmp
loope
das
mov
pop
movsb
into
rcrb
mov
rcll
xchg
je
pop
xchg
popf
push
cltd
sbb
xchg
jge
mov
sbb
xor
pop
mov
or
cmp
popa
cwtl
icebp
xchg
adc
arpl
ret
in
scas
in
xchg
add
sbb
sbb
ficoms
icebp
ds
lock
push
rclb
push
lret
imul
add
outsl
leave
ret
xchg
dec
push
jge
add
movsl
xchg
jmp
lret
or
pop
loope
mov
ror
in
xor
xor
pop
insb
sbb
sub
jmp
or
imul
inc
jecxz
lahf
xor
lods
loopne
out
xor
push
mov
add
pop
sahf
into
push
push
adc
int3
cmp
or
xorl
adc
orb
enter
arpl
pushf
dec
jecxz
or
jo
iret
push
push
les
mov
add
repnz
pop
test
insl
repz
push
arpl
pop
andl
in
cld
jns
cmp
add
mov
jp
and
cmp
sti
leave
stos
rcll
ret
gs
sub
cltd
sub
insb
call
mov
cmpsl
nopl
adc
or
fwait
lcall
xor
mov
jnp
lock
bnd
push
test
pop
add
mov
adc
dec
lods
mov
stc
mov
clc
mov
add
inc
shrb
outsb
add
imul
xor
jae
cmp
push
sub
jae
mov
mov
lods
stos
ljmp
mov
sbb
jne
push
clc
push
sahf
dec
mov
lds
sahf
test
jne
sub
les
sub
dec
les
pusha
outsl
scas
push
jl
xchg
xchg
mov
jle
xor
inc
sub
xlat
xor
insb
stc
sbb
add
ljmp
stos
inc
aad
inc
mov
imul
lea
ret
pop
pop
lcall
pusha
inc
xlat
punpckhdq
data16
and
pusha
pop
mov
in
push
mov
jnp
sbb
mov
imulb
and
mov
jbe
leave
ja
adc
inc
in
mov
pop
pop
aad
test
pop
out
mov
or
rorl
sub
pop
jae
adc
orb
fistps
mov
ret
je
xorb
mov
out
enter
movsl
lods
rcr
push
jle
jp
or
aad
jmp
and
mov
aas
cmp
nop
mov
lea
shrb
adc
in
xchg
int
gs
repz
dec
sbb
jg
fsubrp
repz
sbb
fs
int3
shll
dec
imul
test
pusha
fwait
mov
in
setge
pusha
add
aaa
xor
frstor
clc
and
pop
add
mov
jle
pop
mov
jmp
push
pop
mov
leave
imul
setno
jno
jae
pop
in
lret
hlt
call
cmp
lea
xchg
mov
mov
jmp
xchg
arpl
lea
inc
fmull
xor
cmpsl
xchg
int
jns
pop
cmc
cmp
inc
popf
stos
push
int3
aam
call
xchg
aad
jge
fdivrp
insl
push
push
push
lret
xchg
adc
pusha
push
daa
pop
clc
js
icebp
adc
jg
test
mov
pop
ret
pop
mov
adc
jnp
add
jb
aam
aaa
push
aam
jae
imul
imul
inc
mov
xchg
andb
out
out
push
push
std
inc
sbb
jne
cld
or
loopne
vmread
jl
push
dec
push
les
push
cmp
pop
fidivrl
sti
cmp
dec
jne
jge
mov
fmuls
shll
call
pop
aam
sub
add
into
out
ret
adc
adc
mov
loop
mov
or
out
les
ret
fs
push
fsubr
repz
push
outsl
sbb
or
dec
out
pop
arpl
lods
mov
das
insb
dec
in
pushf
dec
xchg
call
push
push
xchg
addr16
movsl
push
flds
ss
imul
inc
enter
xor
sbb
aas
adc
insb
mov
in
and
xchg
rcll
fistpl
or
leave
aaa
add
dec
inc
dec
mov
xchg
or
inc
xchg
push
js
add
xrelease
push
ret
jbe
sub
lea
shr
lcall
xchg
pop
inc
sbb
mov
dec
aad
in
pop
jbe
push
outsl
mov
jmp
mov
jmp
xor
outsl
jns
ja
mov
xor
popa
lcall
or
jae
push
sbb
repnz
es
pop
insl
imulb
and
mov
lods
adc
nop
lods
icebp
add
cli
fildll
loopne
push
and
xor
cmp
push
cmp
popf
cmc
andb
inc
insb
xchg
adc
mov
jns
stc
sub
pop
addr16
pop
hlt
add
pop
addr16
int
mov
ds
aam
mov
jecxz
add
cmp
inc
mov
lcall
je
data16
stos
ja
pop
stos
inc
ret
and
shll
xchg
sahf
fwait
or
test
std
stc
fcmovu
out
pop
xchg
int3
and
mov
sbb
lods
into
pop
dec
repnz
mov
sbbb
out
rclb
test
arpl
out
call
lods
mov
call
mov
or
dec
jle
sbb
mov
neg
mov
push
stc
xchg
ds
movsl
aam
xchg
cs
in
sbb
xor
inc
dec
jg
rcrl
adc
repnz
or
inc
int3
daa
scas
adc
repnz
into
sbb
jle
sbb
push
iret
or
and
sub
sub
lcall
add
aas
cmp
mov
add
das
inc
mov
jge
sub
jno
loope
mov
repnz
cmp
test
out
dec
xchg
ficoms
cmpsb
xor
mov
enter
mov
into
sbb
add
lahf
aas
adc
sahf
filds
hlt
xor
outsb
mov
or
div
or
test
mov
xchg
insb
in
xlat
sub
idivl
xlat
fdivs
dec
or
hlt
push
iret
xor
jge
in
pusha
jp
inc
dec
adc
sahf
insl
mov
test
mov
xchg
mov
pop
or
nop
out
push
push
stos
repz
test
frstor
push
xchg
ret
push
pop
ljmp
shrb
ja
sbb
lea
ss
mov
ret
xchg
pop
ret
aam
push
jmp
sarb
dec
testl
xor
adc
push
sub
pop
imul
std
xchg
insl
cmp
imul
mulb
or
mov
pop
push
fmuls
pop
repnz
sbb
or
ss
mov
push
push
sbb
mov
xor
xor
btr
out
aaa
loop
adc
pop
jl
insl
and
movsl
mov
sub
xor
sbb
inc
and
lods
or
push
inc
cs
add
in
data16
icebp
out
dec
lahf
push
jecxz
xor
sub
xor
xlat
push
add
out
jo
repz
or
mov
inc
outsl
mov
in
cmc
and
push
cwtl
mov
in
repz
and
jecxz
pop
sahf
jno
or
sbb
ret
cmpsl
sar
addr16
sbb
das
mov
gs
xchg
jg
adc
inc
mov
sbb
loop
xor
test
test
sbb
inc
repnz
popf
pusha
xchg
mov
or
in
xchg
outsl
and
stc
and
adc
adc
adc
sub
insl
dec
fstps
xor
push
sbb
cmp
pop
popf
out
ret
inc
out
jno
cmp
stc
iret
scas
aas
add
xor
xor
dec
jmp
push
shlb
enter
inc
punpckldq
adcb
aas
pop
outsb
mov
ja
fisubl
and
fcmove
fs
push
mov
in
pop
fnstcw
ja
add
pop
insb
aaa
sahf
div
icebp
leave
mov
mov
stos
lahf
dec
gs
lods
pop
and
xorb
mov
outsl
pop
in
pop
and
ds
andl
push
sbb
cmp
popl
outsb
lds
jg
lahf
mov
cli
mov
sbb
fstpl
xchg
fcompl
std
aam
lret
notb
dec
lahf
cmp
mov
loope
cmp
test
cmp
scas
or
out
jbe
push
cmc
popa
push
popf
addl
js
inc
push
rorl
push
sub
fidivrl
and
xchg
push
repnz
push
cli
add
movsl
out
and
testl
adc
rolb
sbb
adc
orb
mov
sub
jmp
sub
mov
pop
mov
cmpsb
xorl
imul
mov
scas
idivl
shl
xor
ljmp
mov
xchg
icebp
loop
adc
mov
cmp
sub
clc
mov
std
lcall
stos
jno
loopne
bound
fistl
inc
xor
shlb
ja
jbe
lds
xor
movsb
adc
inc
scas
dec
add
sti
pop
adc
scas
aaa
in
lods
sti
mov
or
das
std
sub
jp
stos
push
lret
mov
test
mov
cmp
pop
jecxz
jl
cmp
mov
pop
hlt
addb
mov
gs
mov
dec
mov
sbb
ret
push
or
jb
xor
call
sbb
adc
adc
popa
mov
ret
xchg
sbb
scas
xor
idivl
lea
pop
hlt
push
fistl
or
js
daa
mov
adcl
cmp
cmpsl
data16
leave
mov
jno
lods
ja
push
aam
inc
xlat
cli
subb
cli
cmpsb
fidivl
in
and
xor
test
or
cmp
or
cmp
cmp
fistpl
ret
pop
addl
mov
cmpsl
lcall
mov
cmp
je
mov
add
in
and
adc
rcrb
lcall
jmp
dec
out
les
and
mov
movsb
das
mov
or
icebp
fnsave
sub
lock
jns
jae
test
movsl
notl
sbbl
aam
add
std
mov
add
and
lock
xor
sahf
inc
pop
push
shll
mov
add
repnz
mov
imul
mov
inc
aam
imul
ror
add
movsl
adc
xor
mov
mov
dec
loop
jle
push
in
jle
xor
cltd
mov
dec
rolb
shll
jae
sbb
push
add
int
pop
and
aam
das
sbb
repz
into
inc
jl
ljmp
push
lods
add
pop
jo
adc
out
dec
push
push
push
adc
mov
imul
rol
daa
mov
inc
inc
push
fildl
testl
fsts
cmp
adc
xor
pop
aad
movsl
cmp
sbb
and
sub
sar
das
jle
mov
arpl
shlb
push
dec
out
arpl
leave
mov
pusha
push
push
aaa
fnstcw
loope
cltd
mov
add
pop
xlat
sbb
add
mov
jle
scas
mov
in
pop
test
and
out
aam
jbe
xchg
sbb
sbb
mov
push
add
jg
sbb
out
push
pop
outsb
pop
fldenv
fdivs
and
out
std
ds
repz
push
sub
dec
mov
mov
test
je
pop
test
loope
daa
aad
add
xor
mov
dec
push
scas
inc
push
dec
sysret
jbe
mov
fldcw
mov
scas
int
xchg
cmp
xchg
daa
mov
int
add
leave
add
jb
in
adc
or
pusha
jge
adc
lcall
sbbb
pop
call
fsubrs
and
pushf
daa
ficoms
fwait
or
outsl
icebp
mov
bound
dec
mov
jno
ret
jp
xchg
xchg
mov
mov
std
test
mov
dec
xlat
push
pop
psubd
loop
mov
ljmp
test
outsb
mov
mov
repz
movsb
add
dec
mov
push
sub
pop
push
and
xchg
bound
mov
std
notl
subb
ret
adc
xlat
lahf
in
cli
push
xor
ret
fisttpll
pop
rcl
push
xor
ret
mov
clc
mov
dec
std
mov
in
xor
aam
in
add
xchg
addb
ds
daa
mov
lret
aaa
int
js
pop
out
pop
pop
iret
xlat
test
sub
mov
sbbb
or
or
inc
mov
les
in
sbb
and
insb
shll
and
jle
inc
cmp
mov
test
xchg
jno
mov
or
negb
jl
sub
out
stos
push
in
rorl
adc
jecxz
idiv
test
sub
mov
je
mov
push
cmp
adc
sub
lods
repnz
daa
jge
loop
movl
js
popf
sarl
adc
xor
lods
ja
mov
outsl
inc
xor
test
pop
adc
adc
add
jne
call
xchg
jecxz
mov
sub
fildll
mov
pop
movsl
mov
or
mov
sbb
add
xchg
shlb
stc
bound
aaa
cbtw
cmp
inc
adc
fsubl
out
inc
mov
jl
cmc
nop
pop
nop
hlt
jmp
pop
sub
jae
inc
adc
loop
and
test
fnstsw
outsb
dec
xchg
pop
xchg
jle
in
inc
mov
mov
or
cwtl
cs
fwait
cmp
add
pop
orb
sti
dec
mov
loop
mov
mov
int3
insl
mov
cli
sbb
in
inc
sbb
mov
xor
adc
mov
adcl
mov
or
cld
insb
in
out
lcall
lret
aam
or
scas
jp
jo
roll
std
stos
movsb
int
bound
aam
test
jge
sbb
icebp
aad
push
rorl
je
in
adc
push
cmc
in
mov
and
es
mov
aaa
in
fsubrs
mov
cmpsl
jecxz
btr
jmp
pop
mov
movsb
cwtl
outsb
push
xchg
sub
xchg
xchg
xchg
mov
mov
sahf
push
pop
mov
cvttps2pi
in
rcl
lods
jle
sub
xorl
mov
rorl
sarb
xchg
insb
rorb
es
cmp
into
cmp
and
rorb
loope
icebp
sub
out
fisttpll
inc
push
lret
fisubrl
out
xchg
test
fcoml
nop
js
inc
dec
stos
and
gs
cmp
pop
push
scas
pop
mov
sahf
mov
push
mov
xchg
xor
stc
aam
and
lds
mov
or
inc
arpl
add
aas
lock
in
js
jo
jg
pop
enter
jbe
xor
add
cmp
out
add
test
shl
xchg
push
and
sbb
mov
shl
cs
and
loope
scas
adc
lea
or
adc
repz
outsl
add
hlt
cmpb
out
sub
ds
mov
je
fldl
sbb
in
das
call
jp
ljmp
mov
cli
aad
mov
test
inc
lret
repz
outsl
push
xchg
add
nop
loopne
pop
xchg
inc
push
fwait
call
pop
add
inc
vcvtsd2ss
mov
sbb
push
jmp
outsl
sub
fnstenv
and
mov
xor
loope
and
cwtl
mov
mov
cmpsb
mov
xor
test
stc
fcomi
cmpsl
arpl
in
and
cmp
push
sub
stos
pop
xor
mov
scas
gs
add
aam
mov
push
mov
push
test
cmpsl
xchg
insb
cld
inc
scas
in
adc
dec
add
adc
ds
cld
cmp
aam
in
adc
loopne
cltd
jb
aaa
push
inc
aad
push
cwtl
out
dec
sar
test
out
pop
mov
push
mov
lret
xchg
mov
sub
fistpll
das
icebp
imul
push
stos
sbbl
pop
out
add
push
and
ret
test
daa
hlt
loope
lods
inc
les
mov
sbb
jbe
add
cwtl
jp
inc
add
cmpsb
out
mov
stos
mov
add
xor
fs
push
lret
ljmp
lcall
fbstp
xor
xor
popa
loop
xor
cmp
sbb
or
push
push
int3
lahf
pop
xchg
push
lods
dec
bound
imul
pop
test
inc
or
imul
fistps
repnz
pop
inc
fimull
dec
ret
lea
fwait
int3
push
jl
outsb
outsb
jp
or
push
out
vrcpss
pop
jle
sub
sahf
in
pop
orb
xor
in
mov
mov
aas
add
hlt
jl
or
in
in
cmpsl
out
out
in
jns
dec
std
push
test
lods
sahf
xchg
aad
push
add
xchg
jns
arpl
lahf
mov
pop
lret
dec
and
xor
and
stos
xchg
scas
cltd
stc
push
xor
fidivl
insl
nop
mov
pushf
sub
xchg
mov
and
adc
out
andl
iret
std
jo
stc
mull
andl
cli
out
sub
fcomp
pop
cmp
aaa
ds
cmpsb
inc
jle
xor
lds
mov
inc
mov
out
stc
out
ficoml
cmp
repz
scas
in
scas
movsl
mov
inc
pop
dec
ss
les
in
xchg
mov
incl
cli
cmpsl
fnsave
insl
jo
cmp
pop
les
in
arpl
cmpsb
cmp
push
stos
push
dec
fs
insb
push
cli
scas
jbe
negb
adc
invd
lea
in
and
stos
int
fwait
arpl
fisttpll
mov
mov
sub
loop
push
leave
pop
test
add
push
loope
jnp
hlt
loopne
pop
rcll
aad
out
and
in
mulb
stc
mov
mulb
cmc
add
test
sbb
dec
cli
xlat
cmpsl
cmc
mov
roll
push
cs
sarl
rolb
mov
je
out
sub
mov
sarb
and
inc
xchg
sbb
jecxz
ljmp
ffreep
push
xorl
cld
inc
lcall
jbe
enter
or
fsubl
lret
cltd
les
orb
adc
paddusb
shr
or
add
test
mov
jl
or
ljmp
sub
mov
pop
add
pop
lcall
pop
pop
xor
jge
pop
xor
ds
inc
push
push
js
js
mov
mov
cmc
jg
xor
sbb
fidivs
test
dec
test
lcall
adc
test
gs
mov
lea
idivb
push
dec
mov
mov
mov
outsl
inc
in
cli
inc
sub
jnp
inc
xor
jle
je
fidivrs
inc
insb
mov
stos
pop
ja
in
hlt
dec
dec
std
outsl
sub
mov
mov
in
push
jle
out
sub
dec
mov
popf
cwtl
sub
pop
lock
lock
push
push
xor
mov
ds
lock
xchg
mov
or
shll
shl
lret
pop
add
ss
vdivsd
push
addr16
add
or
sahf
inc
jge
lea
mov
iret
xor
les
push
add
popa
nop
fmulp
inc
fsubl
aaa
mov
mov
cld
popa
add
sub
inc
mov
inc
mov
dec
jae
sub
cmp
push
lea
insb
cmp
cmp
call
sbb
push
rcrb
xlat
nop
inc
or
mov
jne
jo
adc
mov
in
aaa
pop
je
pop
sbb
jg
adc
and
add
push
bound
sbb
cli
test
lods
and
inc
in
lret
mov
xor
jne
flds
mov
or
cs
fisttps
shrl
lds
mov
jle
sub
cmp
jmp
imul
pop
dec
or
aaa
mov
cmp
cmp
rcr
jle
inc
dec
pusha
inc
sub
icebp
jo
fcos
arpl
aad
adc
out
add
subl
in
inc
and
or
mov
push
adc
mov
jnp
jno
cli
inc
aad
mov
push
jae
test
test
pop
fnstcw
xchg
adc
imul
rcll
rorb
xorl
fisttps
adc
inc
addr16
popf
add
movl
inc
cmpsl
pop
jno
subb
cmpsb
cli
mov
adc
aaa
pop
sbbl
cmp
inc
pop
sti
decl
dec
dec
mov
mov
or
adc
inc
std
push
mov
dec
push
xchg
adc
or
lret
pop
sahf
cwtl
jl
push
dec
add
leave
addr16
inc
xor
sub
into
lret
cmp
rsqrtps
adc
in
push
mov
sbb
outsb
cmpsb
fbld
dec
test
mov
aas
and
adc
xchg
mov
inc
sbb
inc
mov
sarb
fdivs
push
lods
mov
add
ret
mov
jb
pushf
push
fistl
scas
push
xchg
push
inc
pop
sub
lds
testl
stc
xor
mov
cs
mov
sub
cmc
test
daa
cmp
out
popf
cmpsb
mov
orb
mov
jns
rorb
push
ficoms
xchg
pop
jmp
aas
sub
push
mov
add
sub
cmp
outsl
push
push
mov
aas
push
mov
xchg
push
adc
bound
pop
xchg
fdivp
imul
push
in
jg
dec
aad
loopne
add
inc
scas
fwait
outsb
repnz
cmp
push
mov
insl
mov
es
push
nop
scas
mov
shrb
pop
stc
pop
jne
xchg
aaa
push
aaa
mov
hlt
test
inc
xlat
lock
push
fucomip
les
cmpb
test
xor
jns
fistps
repnz
add
jle
jmp
xchg
add
and
test
sbb
ja
call
js
adc
lods
adc
jae
xor
ret
enter
xor
daa
xchg
lds
push
aaa
jo
jae
jns
push
movsl
xchg
dec
sbb
or
rcll
out
mov
mov
insl
xchg
dec
ljmp
repnz
jns
daa
addl
sub
push
sub
fidivrl
mov
out
lret
mov
adc
fdivrl
data16
pop
xchg
in
dec
hlt
push
test
pop
in
push
addr16
lods
pop
mov
xchg
push
fmull
aam
sbb
sbb
cmp
sub
les
shlb
mov
cmp
icebp
cltd
push
adc
mov
jmp
movsb
movsb
mov
add
fwait
or
adc
mov
push
xor
pop
andl
fs
das
das
stos
mov
ds
roll
into
mov
cmc
add
shrl
je
leave
and
inc
xchg
and
mov
fldenv
push
ret
aaa
sub
sub
mov
mov
xlat
aad
frstor
inc
aad
fnstsw
jns
inc
lret
xchg
test
in
mov
xchg
gs
stos
mull
push
aam
jb
sahf
aaa
shlb
xor
add
lcall
mull
fdivrl
adc
andb
pushf
mov
or
and
arpl
icebp
mov
jae
pop
jl
cs
or
cli
repz
sbb
xchg
push
inc
push
add
push
xchg
pop
dec
cs
fistl
sbb
adcl
int
mov
jg
push
stc
nop
adc
clc
sub
popa
shr
dec
pop
xchg
mov
mov
sbb
mov
or
mov
divb
out
pop
cmpsb
aas
adc
and
push
test
jp
and
in
dec
xor
add
cli
xchg
mov
mov
popf
popf
mov
and
or
xlat
and
in
pop
out
mov
and
mov
dec
mov
dec
lret
jne
cmc
fwait
push
add
jae
and
xchg
and
cmovle
mov
call
mov
push
mov
pop
adcl
mov
ja
fwait
jmp
jle,pn
mov
pusha
std
test
ja
lds
add
subb
mov
push
mov
jge
sbb
sbb
movd
and
lea
sbb
rol
pop
inc
lea
sub
cwtl
adc
mov
dec
jle
pop
and
cmp
mov
mov
std
push
and
lods
jmp
pop
stc
daa
sub
negl
idivl
pop
shll
fwait
repz
inc
xor
jnp
lock
stos
in
ja
xor
xor
iret
sbb
cmc
mov
sub
test
cltd
push
rcr
cmp
arpl
mov
icebp
das
push
mov
sbb
and
sub
dec
fsubl
lret
cld
push
sbb
pop
inc
subb
loopne
add
push
lret
push
mov
jae
dec
jo
pop
dec
repnz
sub
or
mov
cmp
addr16
sbb
inc
jbe
mov
cmpsw
mov
mov
sub
pushf
mov
or
jo
cmp
pushf
pop
mov
lea
mov
insl
in
pop
mov
int
or
sahf
inc
repnz
fbstp
lea
adc
and
or
sbbl
xchg
cwtl
jge
movsb
add
xor
jnp
gs
icebp
mov
cmp
inc
ss
hlt
jmp
jbe
xchg
sub
jecxz
dec
adc
ret
lock
std
add
or
push
and
cli
mov
loopne
mov
pop
popa
and
mov
sub
lcall
pop
insl
push
cmp
insl
les
push
bound
gs
sub
in
pop
lods
jge
xchg
jno
cmp
jb
mov
cltd
pop
adc
jl
out
mov
mov
lret
lods
cmp
adc
cmp
xchg
jns
pop
cs
xor
lock
sub
sahf
sbb
push
nop
adc
fistpll
data16
inc
pop
xchg
sub
icebp
dec
rcrb
sub
loope
std
xchg
add
stos
sub
push
mov
and
into
gs
loopne
or
mov
mov
or
pop
cmp
gs
cmp
sub
xor
mov
clc
scas
pop
or
or
mov
rclb
jb
jo
orl
xchg
dec
add
jp
xchg
sbb
fwait
cmp
add
sub
or
cmp
mov
dec
sti
xor
dec
je
add
mov
addl
pushl
mov
data16
es
mov
mov
fcom
sarl
push
gs
in
push
ljmp
data16
out
cmpsl
push
data16
jnp
jge
cmc
mov
mov
push
xor
cmpsb
pusha
jmp
enter
lret
xor
in
mov
test
add
cli
inc
mov
cmpsb
stos
lds
jmp
cmp
or
mov
push
mov
out
mov
call
or
pop
mov
insb
jge
sti
adcb
add
cmpl
cmp
sbb
in
jmp
xchg
push
pop
dec
cmp
icebp
pop
out
xchg
xor
cmp
pop
jmp
xchg
sbb
mov
add
jecxz
dec
mov
cli
sub
pop
gs
jnp
hlt
lock
or
aad
test
sub
test
popa
mov
pop
pop
test
cwtl
movsb
loop
mov
inc
rcrl
pop
arpl
xchg
mov
xchg
inc
in
rorl
sti
out
lcall
push
pusha
mov
std
xor
ret
rclb
cmp
push
push
in
mov
fstpl
dec
push
lds
jne
test
inc
push
std
push
in
shl
push
push
fisubl
je
cs
test
mov
int3
pop
mov
bound
icebp
mov
in
test
in
cmp
nop
ret
lods
shr
mov
fbld
test
push
pop
cmp
ss
or
fldenv
jp
sub
rcr
xchg
popa
dec
in
out
lock
movsb
jg
push
mov
lock
lods
dec
clc
icebp
ficoml
jno
push
inc
pop
nop
int
xchg
loope
pop
pop
out
mov
sbb
sbb
push
sbb
jmp
ss
cmpsl
fldl
shll
stos
add
ss
jb
sahf
jge
dec
push
ficoms
cltd
inc
lahf
test
ret
xor
fistpll
gs
clc
mov
jmp
adc
lret
sub
popa
pop
in
pop
mov
dec
popa
nop
jns
std
pop
push
je
cltd
test
sub
scas
push
aad
xor
addr16
pusha
clc
ss
mov
cmpsl
push
xchg
test
enter
xchg
sti
ret
jmp
push
cmpsl
icebp
xor
mov
and
aam
mov
xlat
loope
cmp
jl
jnp
xchg
jnp
inc
cmpsb
sti
and
mov
int
test
repnz
out
cmp
insb
lret
fwait
scas
inc
add
jno
cmp
push
and
and
mov
sbb
sub
add
xlat
sti
jbe
adc
xor
mov
jmp
xchg
mov
mov
repnz
rcrb
test
xchg
pop
pop
sahf
nop
cmp
test
jbe
xchg
imull
js
xchg
and
mov
pop
sti
pop
clc
testl
add
push
cld
rclb
push
mov
les
sbb
pop
jnp
movsb
addr16
loop
lock
icebp
adc
push
test
push
mov
xchg
and
lcall
jns
outsl
testb
mov
inc
and
adc
insb
daa
inc
scas
in
std
cld
push
dec
add
mov
add
push
ljmp
mov
xor
or
mov
mov
mov
pop
push
mov
loop
test
cmp
std
fs
inc
enter
mov
lret
pop
adc
inc
jle
jbe
or
inc
cli
mov
es
movsl
mov
data16
insb
daa
jno
mov
mov
sbb
xor
or
jmp
mov
and
dec
cmp
lret
xchg
inc
icebp
add
cmp
in
daa
xlat
jns
mov
mov
inc
fnsave
jae
pop
out
push
mov
or
inc
jno
outsl
fnsave
lss
mov
push
movsb
adc
insl
outsl
push
inc
pusha
inc
cmpsb
cmpsb
dec
not
nop
dec
jl
inc
cli
je
call
or
lret
xchg
adc
imul
and
push
dec
outsl
jb
xchg
mov
call
call
ficoms
aad
in
mov
dec
movsb
imul
cmp
xchg
dec
movsl
negl
or
mov
sbbl
lods
out
test
push
out
stos
js
sti
je
xchg
mov
ja
xchg
sbbb
mov
jg
sbb
or
popa
out
xor
mov
clc
add
inc
sbb
movsl
fists
test
cli
inc
mov
call
jno
adc
rol
jg
add
or
outsb
outsl
xor
mov
into
dec
jecxz
xor
push
add
mov
aad
pop
shl
jmp
test
movsl
addr16
movsl
ffreep
ds
fists
mov
pushf
cmpsl
scas
inc
mov
das
fcompl
fsts
pushf
jge,pn
adc
cld
aad
arpl
jb
push
mov
rclb
pop
mov
adc
cli
shll
adc
enter
popa
pusha
adc
gs
andb
push
insb
jg
pop
sub
dec
cltd
js
xor
dec
adc
cmp
mov
adc
imul
jge
push
arpl
mov
dec
iret
es
push
dec
mov
inc
and
mov
xchg
jg
test
jo
into
shll
fdivl
mov
add
dec
cmp
cld
adcb
stos
pop
aam
hlt
lcall
hlt
push
sbb
fbld
int3
cmp
jmp
mov
lea
call
imul
sub
divl
iret
inc
imul
fisubrs
jle
inc
inc
sub
jmp
add
mov
pop
xchg
idivb
xchg
mov
aam
out
cmc
ds
add
outsl
dec
lret
in
repz
mov
ror
je
repnz
cmp
ja
dec
loopne
das
push
nop
iret
out
add
daa
and
addr16
mov
or
dec
mov
roll
mov
incl
ljmp
mov
add
xchg
inc
jne
xor
cmp
insl
cltd
pushf
pop
cmp
pushf
decl
mov
jbe
lcall
pop
xorl
aam
ljmp
fisttps
inc
pop
cld
and
popf
into
mov
push
pop
jbe
lret
adc
jle
rcl
pop
add
fadds
je
xor
imul
pop
adc
mov
xchg
rol
sbb
fnstsw
jae
lods
add
push
aaa
lahf
pop
add
adc
gs
ds
add
dec
lock
xchg
lahf
xor
sbb
jnp
xor
aas
les
cmpsl
cmc
aam
jmp
jle
cwtl
pop
mov
cmp
jle
lods
loop
lret
sbb
repnz
out
int3
mov
inc
test
dec
les
out
pop
aas
jecxz
inc
aaa
pop
cld
xor
push
rep
stos
add
mov
out
pop
add
sti
mov
jecxz,pt
push
cmpsl
fisttpll
push
mov
loopne
xor
and
and
fcompl
cmp
and
es
push
or
jno
sub
aas
enter
out
pop
add
mov
push
jae
sub
push
xor
jnp
dec
add
adc
cli
sub
test
out
push
push
mov
adc
push
adc
cmp
adc
sub
out
push
aam
shll
mov
jo
clc
pop
jbe
xchg
dec
sahf
or
sub
xchg
aam
shll
pusha
jae
insl
out
notb
mov
adc
sbb
push
mov
pusha
adc
insb
and
int3
out
test
in
xlat
cmpsl
lret
outsl
scas
mov
mov
stos
divb
push
xchg
aam
inc
enter
dec
or
dec
inc
and
adc
pushf
push
lea
out
sbb
cmp
xchg
out
xchg
xchg
in
jecxz
test
rep
mov
xor
jge
lods
cltd
clc
sbb
mov
sub
xlat
adc
or
fwait
add
cs
push
testb
ret
pop
and
jne
bnd
or
pop
mov
sub
pop
xchg
shl
sbb
daa
inc
clc
inc
test
push
and
sarb
jo
sarl
or
call
mov
jne
jle
rol
bnd
adc
mov
mov
dec
sti
mov
and
pop
lods
inc
lcall
and
inc
pop
das
test
rcl
sub
mov
add
cmp
stos
aas
out
fmulp
or
pop
cmc
test
in
out
rep
decb
mov
pop
or
scas
dec
xchg
stc
xchg
es
aad
shll
scas
push
ficoms
adc
cmp
jno
add
dec
insl
sbb
jae
ficompl
push
dec
bound
pop
inc
data16
movb
sub
das
jl
testl
or
es
fbld
jp
xchg
icebp
loopne
mov
dec
call
pop
sbb
push
sub
and
fwait
clc
push
idivb
mov
aad
push
xor
xor
mov
movsb
and
mov
sub
sub
jne
mov
mov
push
pop
jnp
xchg
loop
leave
push
mov
lds
jo
jae
push
cwtl
lock
xlat
push
imul
mov
xchg
cmp
sahf
idivl
lods
stc
repz
outsb
adc
cmp
pushf
lcall
jnp
stc
or
sub
fsubrl
mov
scas
and
ss
mov
test
out
gs
in
mov
push
push
movsl
repnz
mov
mov
adc
xchg
mov
jbe
jno
outsl
inc
repz
pushf
imul
inc
movsb
jns
inc
dec
xchg
loope
movsb
popf
add
push
cmc
mov
adc
jne
lock
add
cmovs
mov
stos
sbb
and
or
mov
mov
fbld
clc
cmc
jge
movl
fbstp
loopne
dec
lods
xchg
mov
pop
cli
cmp
daa
mov
and
mov
cmpsb
jnp
dec
aam
stos
inc
mov
imul
push
cmp
dec
out
dec
aaa
rclb
fsubrl
ror
inc
xchg
push
push
jae
jne
out
insl
cmp
inc
call
addl
or
shl
pop
out
addb
mov
cmp
or
mov
xor
sbb
jnp
dec
loopne
cmp
mov
xor
in
xchg
mov
push
adc
push
or
lea
ss
pop
jae
push
add
xor
or
aaa
xor
mov
xchg
pop
add
fcmovnbe
cmp
add
out
loopne
or
sti
cmp
xor
jle
mov
hlt
rorl
mov
sub
lods
push
jo
mov
gs
inc
daa
and
fs
sbb
bound
jmp
cli
icebp
add
sbb
les
and
jns
lret
inc
repz
mov
gs
int
insl
pop
jne
mov
and
jb
sub
rorb
sub
xchg
jo
aaa
ret
sub
pause
mov
mov
and
aas
shrl
sub
sub
popf
and
mov
pop
scas
std
fisubs
and
ja
dec
xchg
push
mov
in
popf
sti
cmpsl
fcoml
mov
mov
and
and
add
mov
ja
adc
out
pop
popa
jne
jb
pop
out
or
dec
imul
in
sbb
sbb
dec
aas
pop
inc
outsl
call
jo
or
add
jle
push
mov
repnz
aas
xor
lcall
mov
std
push
das
mov
shlb
inc
and
mov
inc
sub
in
roll
icebp
div
fwait
adc
cs
mov
lds
clc
push
mov
das
sbbb
insb
or
or
jbe
add
mov
std
jae
mov
xor
and
add
dec
mov
pusha
push
into
scas
or
mov
and
dec
xor
dec
cmp
cs
cmp
add
int3
dec
inc
call
adc
js
xchg
xorl
push
mov
adc
fcmovnbe
lea
jb
stos
cmp
jecxz
xchg
loopne
pop
int3
fstpl
jle
test
test
sbb
stos
das
jno
cmp
xchg
adc
fbstp
dec
lea
imul
addr16
fistpl
add
es
pop
push
repnz
cmpsb
ljmp
sbb
xor
cs
mov
inc
jle
shll
rorb
repz
xchg
dec
add
imul
lods
repz
dec
mov
loop
les
sub
push
and
or
cmpsl
and
jnp
sbb
lds
dec
decb
imul
lock
out
test
dec
adc
test
ss
jle
lods
inc
jbe
dec
xchg
sub
imul
inc
mov
push
dec
js
call
xor
sub
dec
inc
add
xor
add
pusha
lret
push
xchg
insb
or
jae
mov
pushf
mov
inc
aaa
mov
jl
cs
call
pop
or
pushf
xchg
aad
ljmp
inc
mov
outsl
pusha
xchg
mov
lret
lcall
repnz
andl
or
mov
sub
divl
jle
xchg
popa
mov
stos
pop
add
xor
pop
dec
sub
and
add
push
stos
es
incb
cmc
test
pop
jbe
bound
sub
js
mov
push
or
cltd
jns
stc
xor
loope
and
xchg
popa
int3
out
inc
and
jl
jb
out
cld
ret
inc
or
inc
out
add
aam
jle
out
push
jle
jp
xchg
lret
mov
in
loopne,pn
cmp
pop
inc
or
daa
mov
ljmp
push
rorb
sbb
cmp
fwait
pop
stos
test
lods
inc
int3
sarb
jmp
jp
dec
mov
loope
and
icebp
adc
cmc
push
adc
adc
ficomps
insl
lret
jle
out
cmpsl
pop
insl
and
gs
dec
cli
std
push
mov
cmpsl
arpl
lods
xlat
lcall
iret
shlb
data16
mov
ja
scas
jmp
adc
sbb
pop
out
popa
jae
lret
inc
shlb
xor
int3
mov
jo
add
ljmp
scas
pop
or
pop
ret
push
push
dec
mov
or
lds
into
cli
or
in
in
std
stc
inc
fwait
out
into
xchg
arpl
shrl
pop
pop
stos
jmp
and
mov
hlt
hlt
dec
jo
loope
nop
call
cmc
or
push
aad
jecxz
cmp
pop
out
nop
adc
adc
dec
daa
mov
int
xlat
shl
jbe
aaa
clc
mov
xchg
int3
jg
pop
lds
leave
adc
add
fdivrl
inc
fimull
dec
and
dec
xchg
insl
mov
movsl
fnstsw
ret
push
and
jl
cmp
in
adc
fiaddl
jge
jl
add
lcall
rcl
or
out
jnp
fnsave
jge
sub
jns
mov
xor
fisubrl
addb
sbb
nop
mov
xchg
test
fldl
xlat
dec
in
add
test
and
popa
adc
cmpl
lcall
push
cmp
fs
not
into
push
xchg
test
adc
and
xchg
mov
popf
pushf
jge
fcoml
lret
push
test
into
cmp
pop
scas
out
add
mov
xor
mov
cli
dec
xchg
pop
or
or
add
sbb
incl
fldl
loop
shl
mov
add
push
xor
cmp
movsb
data16
inc
push
mov
mov
mov
adc
inc
mov
fisttps
and
sub
je
mov
xchg
mov
cli
mov
pop
xor
and
dec
andl
call
adc
in
aad
into
out
mov
mov
sahf
or
or
ret
pop
and
daa
sbb
fcompl
test
jecxz
popa
or
pop
lret
std
andb
insb
xchg
mov
sub
push
mov
pop
and
fs
loope
enter
or
pop
enter
test
arpl
cmpsl
in
cs
gs
out
movd
les
outsl
rol
fdivr
mov
mov
jae
int3
jae
ljmp
enter
xchg
sbb
jbe
xchg
mov
inc
icebp
pop
cmp
mov
xchg
ds
fs
js
inc
xor
insl
stos
shlb
in
jge
mov
into
inc
mov
push
lret
loopne
pavgb
inc
incl
clc
orl
sbb
cmp
testl
orl
cs
test
jecxz
jbe
mov
inc
shlb
mov
arpl
and
iret
adc
popa
mov
dec
out
or
arpl
xor
movsb
jo
sub
fidivrs
jmp
sti
push
jns
xchg
xchg
movl
sbb
mov
and
jp
sub
or
xchg
popf
cmp
jecxz
cmp
lods
outsb
push
mov
pushf
pop
test
and
shrb
mov
inc
inc
clc
out
popa
jge
sub
xor
add
fwait
pop
mov
fdivrl
push
popf
int3
jnp
in
ret
dec
adc
test
in
dec
mov
push
mov
adc
lret
xor
dec
andb
and
xor
cs
fimuls
mov
mov
mov
xchg
push
aad
cmp
mov
xchg
dec
mov
xor
inc
adc
lahf
jo
push
fwait
cld
or
cmp
lods
inc
mov
push
jae
sub
push
mov
and
pushf
imul
mov
call
dec
sets
enter
int3
in
in
xchg
jb
mov
dec
stos
cmp
jb
addb
stos
inc
lods
add
jg
mov
mov
movsb
out
mov
or
xor
or
in
sub
mov
xchg
pop
push
pop
js
fistpl
mov
js
into
shr
in
dec
xor
icebp
and
ja
movsl
enter
cmpsb
or
sub
jmp
out
jmp
sub
jg
pop
sahf
pusha
mov
sub
mov
inc
loopne
and
mov
push
push
cmp
iret
leave
jno
enter
outsb
je
in
and
out
or
dec
stc
mov
pop
shll
mov
sar
flds
jle
repnz
aas
inc
notb
sbb
adc
jl
popa
data16
cwtl
xchg
idiv
jmp
ficoms
out
jbe
pop
xchg
lret
outsl
inc
add
mov
mov
jecxz
xor
pop
outsl
mov
cli
lods
or
fcmovu
scas
arpl
hlt
in
add
data16
push
adc
sbb
and
arpl
push
int
jbe
xor
push
out
dec
pop
xchg
or
mov
iret
sbb
lds
fidivrs
dec
add
jne
dec
mov
scas
ja
inc
jmp
mov
mov
push
push
sti
inc
cltd
out
mov
in
adc
cs
xchg
add
fdivl
jl
jno
adc
das
inc
ss
jnp
pop
div
add
xchg
and
bound
scas
clc
pop
jbe
jbe
mov
dec
cmp
add
ss
rorl
jno
cld
in
cli
icebp
lea
inc
subb
les
sahf
mov
subb
rorl
iret
daa
cmp
sub
mov
clc
push
lods
outsb
dec
js
push
mov
xorl
cmpb
mov
push
addb
or
mov
jle
xorb
push
cmc
and
cli
or
cmpsb
or
push
cmc
cld
aam
movsb
inc
rclb
adc
or
rcll
outsl
mov
repnz
stos
or
sahf
push
fcomi
sub
enter
nop
xchg
dec
push
jns
call
leave
rol
sbb
fisubrl
xor
add
adc
fwait
sub
cmc
lret
xchg
pusha
pushf
xor
xor
jge
cmp
js
push
dec
js
lret
xchg
adc
or
jecxz
js
sbb
mov
sbb
add
inc
add
sbb
xchg
in
icebp
dec
push
push
or
in
cwtl
aad
in
sbb
sahf
and
jnp
and
fiaddl
iret
leave
movsb
adc
rorb
xchg
out
ret
mov
mov
aam
es
inc
fucomip
popf
out
loop
inc
fiaddl
xor
or
ret
pop
shll
xchg
cmpsb
jl
or
mov
sti
xor
aam
push
jbe
mov
mov
sub
out
push
jns
adc
insb
push
outsl
and
std
or
or
lea
lods
clc
movsl
mov
cltd
arpl
jecxz
addb
mov
mov
mov
and
cmp
insl
push
xchg
test
sarl
jns
jg
ret
or
and
push
xor
dec
adc
mov
cld
add
test
aad
xchg
mov
in
ljmp
call
adc
mov
stos
in
mov
pop
out
lock
iret
xchg
jo
xchg
shlb
fwait
and
mov
in
loope
mov
xor
rclb
ljmp
fimuls
shr
xchg
sub
outsb
mov
xor
xchg
out
mov
xorb
mov
ja
adc
in
mov
mov
cmp
stc
or
and
fstpl
adc
loop
out
xchg
jns,pn
jecxz
adc
jno
scas
mov
xchg
xor
dec
clc
and
outsl
pop
mov
and
jg
fisttpll
and
pop
stc
jns,pt
pop
ja
popf
pop
fsubl
adc
ret
ret
add
and
dec
adc
es
sub
insl
sub
sub
sti
xor
andl
cmp
cld
mov
and
cmpsb
xchg
ret
int3
sahf
or
jno
andl
sahf
add
sub
jle
push
dec
and
pop
jle
sbb
cmp
mov
xor
fnstsw
rorb
or
stos
xchg
icebp
lret
xor
cli
inc
jnp
addr16
mov
add
mov
sahf
out
adc
adc
stc
mov
shlb
test
mov
and
test
movsl
mov
sbb
inc
lea
fistpll
movsl
fdivl
mov
or
outsl
sub
sahf
std
loop
cmovbe
mov
xor
mov
xor
cli
xor
push
imul
mov
jns
inc
daa
and
mov
inc
xor
mov
frstor
lahf
push
ret
jo
jecxz
sbb
repz
jnp
imul
push
lcall
pop
pop
ret
aad
and
add
sbb
lea
sub
xor
loope
jp
scas
dec
lcall
sub
adcb
repnz
jg
stos
mov
or
cmp
aam
clc
mov
mov
aas
test
cmp
testb
add
push
pop
sub
and
lahf
and
jle
mov
test
mov
mov
add
jecxz
push
ret
notl
popf
nop
int
loope
decl
ret
movsl
cltd
push
ds
repz
add
inc
cmp
mov
mov
arpl
sti
movsb
sbb
in
mov
cmp
sub
inc
in
test
shrb
mov
or
mov
sbb
jo
push
jb
xchg
loop
cli
lods
inc
sbb
xchg
mov
sbb
mov
sahf
mov
pushf
into
out
jns
xchg
std
xor
in
ret
pop
mov
sub
push
pop
lods
xchg
shrb
test
jnp
js
inc
and
rorb
jb
dec
or
shrl
pop
mov
push
dec
cwtl
sbb
clc
popf
push
call
xchg
push
rclb
dec
fimuls
push
mov
shrb
jmp
adc
repz
nop
pop
std
mov
cmc
rorl
movsb
sbb
cmp
pop
stos
data16
rcll
mov
nop/reserved
sub
cwtl
xchg
cmp
xor
add
push
or
add
shrl
add
pop
cmp
scas
pop
imul
popf
leave
xchg
testl
sbb
pushf
icebp
add
sbb
sbb
lret
ret
scas
mov
mov
hlt
jmp
pusha
test
xor
loope
cmp
pop
add
sub
stos
jmp
mov
pop
jle
iret
in
dec
add
add
bound
filds
jp
in
push
ss
or
mov
jge
sub
mov
negl
sti
push
movsl
pop
jl
dec
mov
subl
and
sbb
loopne
imulb
fmul
rcll
dec
push
aaa
mov
dec
push
mov
lahf
fdivrp
shrl
dec
add
ss
test
das
add
insl
adc
or
dec
push
repnz
adc
xor
test
jp
bound
ds
mov
push
test
and
inc
rol
cmp
cmp
js
or
pop
add
insl
inc
out
dec
dec
scas
test
ss
pop
adc
pop
lods
leave
lret
in
mov
xor
dec
movl
mov
jno
adcl
in
das
mov
data16
pusha
leave
jnp
rcrl
movsb
ss
xchg
mov
push
mov
fxch
fsubrl
fcmovnbe
enter
jnp
xchg
jg
pop
call
adc
repz
jbe
pop
test
push
xchg
mov
mov
ds
repz
jmp
jg
jne
sarl
xlat
jno
push
xchg
xor
add
dec
loopne
xchg
cmp
xchg
push
movsb
out
mov
pop
daa
mov
inc
outsb
scas
pusha
add
add
divb
xchg
std
fwait
js
lret
mov
sbb
cmp
imul
and
rolb
or
xor
sub
sub
pop
imul
cmc
push
out
and
sarl
pop
gs
scas
fisttpl
push
mov
rorl
sub
test
imul
cltd
icebp
xlat
cmp
cmp
es
pusha
xchg
add
inc
push
jg
xchg
push
in
mov
cmpsl
mov
repz
in
xor
mov
cmpl
es
push
lds
cmp
out
int3
mov
or
out
adc
into
lahf
sbb
dec
fisubrl
jecxz
pop
add
push
mov
xchg
mov
addr16
add
adc
xchg
ljmp
mov
xchg
sbb
fadd
sbb
mov
cmp
pop
and
mov
mov
sahf
rclb
push
je
jne
xor
push
insl
mov
roll
ret
xchg
mov
push
loopne
stos
rorl
cmp
ret
js
mov
shll
push
cli
push
dec
inc
mov
push
push
ret
mov
pusha
cmp
jle
xchg
enter
movsl
les
mov
sub
leave
xchg
or
out
jo
lods
xor
je
int
cli
ret
xor
filds
cmpl
jmp
test
pushf
mov
xchg
inc
mov
dec
and
enter
std
add
mov
minps
mov
xchg
addl
push
out
mov
or
add
imul
add
pop
scas
test
addb
vmfunc
mov
lods
and
sub
mov
repnz
inc
popa
lret
inc
popa
cmp
pop
pop
aad
int
push
adc
cli
sbb
imul
dec
mov
push
imul
xchg
sbb
repz
push
jne
xor
inc
and
adc
addr16
jecxz
xlat
or
imulb
jmp
test
shll
ss
push
mov
dec
rorl
mov
inc
scas
pop
test
mov
imul
dec
jb
sbb
sti
cs
pushf
ds
loope
push
jge
cli
insl
inc
dec
push
in
jl
add
inc
pop
fadds
aam
jbe
xor
sti
mov
add
cli
leave
jl
sbb
sbb
add
xchg
add
ljmp
popf
and
adcb
mov
mov
mov
pushf
scas
adc
xchg
mov
jo
and
dec
repz
testl
dec
mov
dec
mov
push
adc
jbe
andb
mov
int
or
xchg
jg
mov
imull
out
xchg
push
mov
cmp
pop
push
push
movsb
jg
out
ljmp
cmp
cmpsl
sbb
dec
dec
mov
cmp
push
popf
out
lret
mov
and
fbld
notb
inc
add
pop
call
xchg
pop
mov
mov
inc
scas
mov
aad
dec
jbe
addr16
repnz
ljmp
mov
pusha
jns
sub
rcr
test
cmp
dec
jne
imul
mov
sub
or
jp
push
mov
xchg
out
mov
insl
loope
mov
cmp
iret
add
in
push
into
jno
cmpsb
pusha
xor
incb
jg
orb
std
mov
ja
mov
mov
adc
rcr
adc
leave
ret
mov
mov
repnz
hlt
inc
xchg
cmc
xchg
sbb
imul
mov
bound
sub
jno
fnstsw
mov
ret
push
mov
add
adc
add
mov
xor
in
rcll
dec
mov
xor
pop
push
daa
xchg
data16
sbb
pusha
loopne
jne
push
enter
mov
insl
stos
push
mov
in
xchg
insl
test
cmpsb
test
orb
insl
fstpt
ret
sbb
adc
test
cmpb
mov
xor
int
outsb
ficompl
in
popa
lock
ja
sub
dec
les
test
xchg
fisttpl
bound
mov
movsb
xchg
daa
and
mov
stc
or
dec
inc
mov
loop
int
dec
call
sub
loop
push
icebp
mov
pop
jge
aas
jmp
subb
test
hlt
pop
subl
iret
jl
push
in
push
fstps
sbb
cmp
aad
sbb
sub
pop
addb
loop
mov
out
popf
xor
xchg
mov
xor
loope
xadd
pop
test
int3
jmp
test
jp
jb
push
aas
cmp
inc
data16
aaa
and
in
popf
push
loop
sbbl
sub
insb
and
cmpsl
lods
data16
pop
ljmp
mov
mov
adc
mov
jmp
cmp
inc
inc
cltd
add
out
jmp
lea
jle
clc
sub
adc
mov
xor
loop
dec
sbb
les
push
sbb
icebp
cmp
mov
adc
dec
addr16
mov
outsl
bound
pop
shlb
sbb
pop
imul
aam
or
mov
dec
push
cs
fstpl
mov
cmp
jg
out
imul
ret
adc
sub
mov
push
sahf
push
xlat
or
fsubr
std
mov
add
int3
jle
pushf
ds
pop
int3
push
mov
adc
mov
xchg
loop
xor
push
mov
jne
in
xchg
pushl
jo
pop
mov
icebp
sbb
pop
sbbb
pop
inc
popf
add
fcomi
jbe
outsl
fldcw
das
jmp
pop
das
push
or
les
loopne
xchg
enter
cmp
pop
xchg
insb
fwait
add
aam
dec
sbb
mov
lods
pop
mov
mov
shlb
lock
loopne
push
subb
iret
hlt
in
int
lahf
sbb
rolb
cltd
pop
pop
inc
dec
out
sbb
aam
call
xor
shll
cmp
in
repz
movsl
adc
push
clc
push
mov
adc
in
rolb
ds
sbb
mov
xlat
test
inc
push
into
mov
call
and
jb
sti
sbb
cmpsl
in
jnp
jo
divb
popf
ja
mov
jo
int
and
aaa
std
xor
les
xchg
mov
cmpsl
jne
sahf
dec
sbb
or
or
xor
xor
mov
inc
or
dec
cmp
sub
das
maxps
jbe
pushf
push
loope
ret
aaa
shll
xchg
vprotw
aaa
push
movsl
jg
xor
jb
es
xlat
or
sub
lock
popa
popa
popf
and
sbb
inc
add
and
pop
jns
out
and
sar
ja
lea
lret
adc
pop
and
cwtl
rcrb
fildl
fldl
cmp
pop
pop
mov
xchg
sbbb
ret
sub
insb
addr16
mov
add
and
or
push
loope
push
mov
inc
dec
int3
stc
lods
dec
data16
xchg
and
imul
sti
in
call
cmp
cld
lds
cmp
mov
add
sbb
cs
push
lret
mov
push
push
les
out
adc
push
and
in
mov
and
or
pushf
es
mov
and
fnsave
call
push
or
xor
and
loop
mov
and
sub
out
add
xchg
mov
mov
and
movsl
jne
mov
push
or
lcall
lods
fwait
scas
cs
xchg
lret
and
xchg
mov
mov
lods
test
outsb
ficomps
pop
add
imul
mov
sub
or
shl
int3
dec
icebp
jno
dec
xchg
jecxz
or
cmp
cmpsl
lods
sarb
mov
ds
test
pop
push
cmp
xor
mov
repnz
cmpsb
xor
movsl
stc
or
pushf
push
out
mov
lret
inc
pop
test
fdivl
mov
jecxz
push
repnz
dec
mov
jmp
mov
push
and
aaa
dec
iret
pop
dec
cmpsl
push
xchg
leave
icebp
adc
jle
clc
jl
or
sbb
sub
out
iret
and
push
js
cs
cmp
cmp
xchg
mov
insb
mov
fmull
aaa
pushl
int3
mov
xchg
shll
nop
fsts
loope
cmpsb
bound
pop
enter
into
out
dec
sbb
test
ljmp
je
or
test
cmp
ja
cmpsl
iret
divl
adc
push
push
mov
jmp
xor
insb
or
jo
ja
jb
xchg
sub
dec
mov
jns
dec
adcl
pop
movb
xchg
in
std
cmp
inc
push
inc
dec
lds
out
add
sub
adc
xchg
add
sub
pop
lea
or
xchg
pop
jmp
in
mov
adc
sub
push
pmullw
dec
mov
push
jb
pop
lea
or
subb
inc
inc
mov
test
and
dec
cs
mov
mov
aad
mov
mov
mov
or
mov
push
adc
jno
gs
fcoms
insl
addr16
dec
mov
stos
out
in
mov
jno
cmp
rorl
sub
lret
loope
dec
lods
xor
cmp
scas
dec
into
divl
xchg
sbb
mov
pop
and
push
sbb
add
sbb
pop
es
ss
adc
lock
pop
push
sub
dec
xlat
and
fsubrs
int
adc
cs
in
scas
sub
stos
lret
shrl
pop
and
rcll
jmp
ficoml
addr16
mov
mov
push
out
xor
pop
add
cli
xor
fiaddl
add
fistl
sub
jo
mov
mov
sub
inc
cwtl
lcall
mov
jl
lret
mov
xchg
lock
cmp
and
sub
out
insl
dec
mov
imul
or
in
jle
push
pop
mov
in
aaa
xor
sbb
test
insl
fsub
xor
test
or
lea
jno
sub
cmp
lcall
in
scas
dec
les
cltd
fcompl
and
into
iret
lds
dec
enter
xchg
and
insl
jo
or
pop
or
lcall
mov
sti
stc
fs
dec
jnp
outsl
call
jne
jb
sahf
test
int
out
pushf
fdivrs
pop
dec
icebp
into
dec
stos
stc
jge
lods
pop
pop
clc
add
fcom
mov
es
cwtl
push
test
outsl
iret
adc
out
dec
adc
and
xchg
aas
xchg
scas
dec
xor
std
push
je
ja
add
cs
js
rclb
adc
mov
or
cmp
sub
scas
pop
clc
adc
sbb
stc
std
outsl
xor
xor
mov
or
mov
jg
outsb
adc
loope
push
adc
fbstp
xor
mov
cld
xchg
pushf
pop
ficomps
inc
cmp
pop
xchg
scas
add
add
mov
mov
rcll
jne
jp
movsl
sbb
sbb
adc
mov
sub
icebp
mov
sbb
loope
add
fwait
sbb
mov
hlt
out
pop
xor
fistl
or
clc
pop
and
mov
or
push
xor
pushf
call
icebp
mov
cs
aas
fnsave
mov
fists
mov
out
xchg
mov
cmpl
xchg
push
addr16
xor
dec
mov
inc
push
mov
rolb
push
popf
mov
and
adc
nopl
mov
int3
dec
in
in
repnz
mov
cs
fwait
loop
inc
fldl
sbb
or
mov
and
movsb
xchg
ja
outsb
push
push
pop
or
or
xlat
fbld
jl,pn
es
push
fidivl
pop
scas
add
pop
sbb
xchg
add
mov
mov
mov
cmp
push
add
mov
dec
cwtl
or
outsb
ss
lret
sahf
ficoml
pop
xchg
or
and
pop
idiv
repz
jg
cwtl
fsubr
cmp
ret
adc
xchg
xchg
scas
push
mov
ret
in
mov
cmp
fucomp
or
icebp
dec
dec
and
int
pusha
pop
std
jmp
cmp
add
jmp
aam
inc
mov
ljmp
mov
push
outsl
and
mov
imul
idivl
aad
add
in
pop
push
dec
cmpsl
jbe
adc
cltd
or
pop
jg
add
jne
xchg
call
out
dec
call
iret
sub
out
pusha
cmc
ret
sahf
mov
iret
push
xor
mov
lea
mov
jle
cmpsl
xchg
repz
nop
mov
out
dec
add
int
lock
imul
pop
mov
cli
idivb
mov
or
mov
mov
daa
cltd
jns
add
sti
mov
in
in
adc
mov
rol
ja
jge
outsb
clc
test
pushf
repnz
insl
call
pop
pop
inc
jb
ljmp
mov
cmp
pop
pop
xorl
icebp
mull
icebp
xchg
dec
pop
mov
lretw
outsb
dec
push
adc
jecxz
mov
mov
or
jge
fsts
mov
adc
loope
fadd
adc
mov
jb
push
jle
ja
lsl
xor
je
out
adc
cmp
ret
sbb
xor
mov
push
jb
mov
jb
les
ja
repz
aaa
test
je
pop
dec
xor
into
add
push
scas
fnstenv
push
cs
cmovp
push
add
push
jno
push
push
cmp
or
adc
sbb
test
mov
test
repz
jmp
addr16
xor
sti
pop
adc
xchg
xchg
mov
mov
scas
inc
outsl
loopne
test
clc
std
ret
xchg
mov
icebp
sbb
fsubp
mov
movsb
xchg
inc
lods
pop
xchg
int
imul
aas
test
inc
imul
pop
mov
ficomps
pop
sub
jbe
mov
xor
outsl
es
lahf
mov
cmp
cmpsl
movsb
jns
mov
cld
ret
push
or
inc
mov
inc
pop
decb
ds
test
xchg
xor
mov
push
nop
scas
fdiv
xchg
cli
mov
enter
mov
xor
movsl
cltd
out
clc
cmpsl
pop
dec
call
cwtl
lret
test
lcall
dec
mov
xchg
les
push
lahf
or
xor
pusha
cmp
test
test
jg
sbb
subb
cmpsl
or
adc
and
xchg
jne
pop
fstps
push
nop
or
push
pop
mov
push
shll
jns
arpl
out
mov
mov
pop
xchg
mov
imul
mov
push
xchg
or
sahf
rolb
loope
enter
jg
cmp
es
cmp
add
mov
popa
xchg
shrb
pop
pushf
ret
push
mov
enter
xchg
add
mov
in
cwtl
sub
insb
xchg
movl
mov
or
jmp
inc
lods
mov
test
clc
mov
sub
xor
mov
sub
test
inc
cmp
or
iret
dec
ret
inc
or
fwait
cmp
and
push
leave
shll
mov
pop
rcrl
shrb
loope
mov
les
out
and
lods
cld
ljmp
dec
jecxz
jecxz
sub
dec
sbb
jnp
pop
adc
pusha
mov
and
mov
popf
jge
mov
pop
sbb
mov
call
sbb
or
inc
lods
lret
push
mull
das
cmp
repz
xor
cwtl
lock
inc
xchg
and
mov
cmc
out
push
sub
lret
and
dec
movsb
clc
sub
lcall
adc
dec
cmc
mov
lcall
xchg
dec
jp
pop
adc
push
ljmp
icebp
shrb
mov
and
leave
mov
xor
mov
or
mov
xchg
sbb
andl
fiaddl
test
pop
inc
sub
or
sahf
mov
mov
adc
inc
add
mov
pop
icebp
and
fimuls
xor
inc
bound
jae
test
sub
cmp
jge
adc
pop
dec
mov
mov
jge
add
mov
mov
aas
loopne
clc
mov
mov
mov
mov
mov
cli
jb
out
popa
xchg
jbe
xchg
incl
push
push
hlt
mov
pop
cmpl
dec
add
pop
je
stc
inc
scas
out
lock
sub
test
xlat
push
sub
mov
jno
scas
mov
or
popf
push
and
je
pop
inc
movsb
mov
popf
mov
add
std
imul
scas
bound
cmpsl
adc
push
cmp
leave
cmc
fidivrs
gs
cmp
push
cli
lret
mov
int3
xchg
incl
mov
bound
or
push
aas
cmp
cli
mov
out
xchg
jmp
pusha
cltd
or
sar
add
fmull
sarl
pop
pop
scas
into
mov
jp
test
adc
push
je
mov
je
or
pop
mov
mov
jge
jle
add
push
fildl
xor
xchg
sbb
enter
jne
icebp
outsb
and
sbb
cld
mov
cld
scas
add
test
mov
pop
sub
sbb
and
test
rorl
in
int
push
fisubrl
xor
push
or
pop
jp
cli
xchg
in
repz
fs
inc
pop
call
push
rorb
lret
insb
pop
adc
mov
ret
cmpsb
jne
adc
jae
sbb
pop
stos
in
jnp
int
shll
inc
nop
cmp
add
or
mov
test
xlat
cli
in
jmp
jmp
xchg
fs
out
repnz
sahf
pop
shlb
nop
xchg
and
inc
sub
lea
or
mov
cwtl
js
cmp
inc
cmp
push
push
mov
movsl
add
sbb
js
jmp
or
repnz
jno
sbb
fadds
push
insb
fwait
inc
jae
adc
xorl
and
hlt
pusha
xchg
xchg
jmp
stos
lea
cmp
and
pushf
mov
dec
sbb
mov
mov
xchg
jnp
mov
shll
pushf
push
inc
fbld
ficoms
push
or
sub
sbbb
js
and
push
loop
mov
fstl
sarl
fnstsw
pop
leave
mov
adc
repnz
mov
jnp
into
mov
cmp
in
cmp
push
std
movsb
sbb
roll
mov
popf
mov
jno
jle
into
test
pop
cmp
sbb
faddl
movsl
sub
fbstp
inc
inc
scas
mov
cwtl
inc
sbb
push
and
push
mov
enter
adc
fidivs
sub
test
lcall
outsl
loopne
iret
xchg
test
popf
das
jge
scas
into
dec
subl
adc
and
inc
xlat
ds
pop
xchg
xlat
add
in
cmp
stos
add
cld
pop
scas
int
bnd
mov
std
jle
fsub
xchg
in
lods
jg
imul
inc
mov
filds
or
mov
les
dec
pop
pop
and
sub
pusha
cmp
test
mov
xor
scas
test
mov
in
jle
push
mov
mov
inc
sbb
inc
ljmp
in
inc
jl
loopne
push
pop
fisubrl
in
aas
inc
jbe
fisttpll
fwait
push
sub
mov
pop
cmp
inc
dec
and
add
test
cmp
ret
or
popf
inc
pop
movsb
sti
fmull
sbb
jl
sub
jl
das
scas
daa
push
movsl
xor
jl
fdivrl
ucomiss
add
inc
stos
movsb
cmp
xor
pop
fsubs
sbb
mov
insl
inc
lahf
push
mov
leave
test
pop
aas
ja
xor
fs
push
xchg
mov
push
into
call
push
jnp
sub
in
inc
inc
fistpll
enter
mov
bnd
mov
or
sbb
aaa
add
mov
xlat
xor
shlb
jnp
or
or
dec
push
hlt
or
mov
inc
cmp
not
out
imul
xlat
mov
sub
and
cmp
ficompl
mov
out
lcall
aas
xchg
imul
sbb
pop
ss
scas
imul
xchg
lods
loope
frstor
arpl
pop
ja
push
inc
dec
mov
cltd
push
pop
pop
insb
jp
and
rol
stc
test
ficomps
addr16
mov
cmp
fs
or
les
rorb
and
xor
push
loope
orl
mov
adc
mov
repz
push
aam
imul
mov
push
ss
cmp
das
dec
cmpsb
arpl
mov
and
adc
jbe
movsl
out
call
das
imul
cmp
aaa
xor
dec
and
cld
repnz
cli
or
sbb
inc
insl
xor
aam
pushf
fnstenv
les
mov
daa
jbe
push
in
xchg
aaa
inc
mov
add
add
in
int
mov
enter
inc
imul
xor
inc
jbe
loope
stos
adc
faddl
negb
add
lret
js
scas
jg
mov
sbb
fsubrs
iret
rorb
mov
jg
push
js
inc
faddl
mov
push
xlat
mov
dec
outsl
sub
push
icebp
mov
jmp
add
test
dec
call
cmp
adc
ja
and
stos
add
push
stos
cmpsl
lahf
mov
jge
into
or
sahf
shlb
mov
push
ds
out
mov
ljmp
test
mov
push
sbb
in
mov
ds
add
int3
xchg
rorb
mov
adc
jmp
dec
pop
aas
int
pop
push
clc
sub
push
adcb
push
sbb
lock
or
stos
and
xor
fstl
jae
xlat
push
dec
lods
or
add
mov
test
leave
scas
push
lock
xor
or
int
or
xor
xchg
push
sti
xchg
fisubrs
rorl
out
add
mov
stos
outsl
movsb
insb
jnp
fisubs
mov
insb
sbb
test
add
add
repz
pop
out
mov
sahf
mov
lods
xor
lea
in
push
push
pop
dec
push
stos
inc
fldpi
jl
imul
and
inc
std
cmc
sbb
sarl
jne
push
int
push
xor
gs
dec
add
xchg
xlat
cmp
repnz
dec
inc
adc
pop
cmp
out
mov
pop
jmp
hlt
movsl
ret
sub
jl
inc
adc
jns
outsl
shrl
add
popf
ja
mov
dec
in
rcll
push
dec
ljmp
rorl
and
xchg
jg
scas
movsb
ficoms
shll
push
adc
sub
fnsave
or
and
inc
add
rcrl
sub
mov
xor
xor
cmp
icebp
lea
nop
xor
inc
fimuls
mov
outsl
xor
mov
jae
popf
sbb
xor
pop
xchg
mov
sbb
in
insb
mov
cmp
out
int
in
icebp
popa
sti
sub
arpl
js
sbb
cmpsl
add
and
scas
cwtl
lret
add
cmp
out
xchg
sub
xor
addr16
xor
pop
rcrb
mov
lcall
dec
arpl
andb
mov
sub
adc
adc
push
loope
fucomip
or
xchg
pop
push
xor
lea
adc
outsl
xchg
test
loop
cmp
ljmp
add
imul
xor
notb
fsub
mov
loop
cmp
outsl
rcrl
into
popa
loope
mov
add
ficomps
pop
nop
leave
jb
jb
mov
jmp
arpl
test
imul
push
inc
enter
fsubr
cld
jge
iret
rdtsc
pop
lods
push
les
dec
inc
push
fisubrl
and
aaa
sti
fs
aad
aas
sbb
popf
pop
gs
mov
movsb
sbb
add
jno
mov
repnz
out
stos
push
sarb
and
pop
sub
pop
dec
cmp
repz
sub
je
std
or
mov
sub
lret
cmp
lret
mov
sub
or
cmp
iret
and
add
xchg
push
push
lods
rcrl
add
pushf
mov
sbb
cmp
stc
int
mov
movl
sbb
fidivrl
cmpb
cmp
lcall
rcrl
mov
xlat
sub
jae
dec
adc
pusha
daa
pop
stos
shlb
shlb
jnp
loope
sbb
inc
mov
cmpsb
repnz
pop
sub
lret
mov
aam
adc
daa
inc
lret
push
push
fnstenv
add
int
sbb
sbb
nop
or
mov
cltd
fildll
je
nop
inc
push
push
movsb
cld
push
lahf
xchg
cmp
test
ljmp
mov
jbe
aam
cmp
inc
and
xlat
shll
jmp
add
mov
test
jno
xchg
or
movsl
addr16
iret
mov
lds
inc
xchg
xchg
add
mov
add
xor
popa
dec
adc
mov
mov
out
jmp
pushf
jae
pop
pushf
xchg
sub
pop
ds
arpl
loope
push
push
dec
stos
mov
mov
imul
inc
roll
mov
mov
lret
cltd
mov
add
add
xor
xor
repz
dec
dec
sub
pop
mov
addr16
in
repnz
adc
loope
cmp
jmp
test
ljmp
mov
mov
adc
hlt
cmp
ret
cltd
xor
mov
xchg
and
scas
lret
mov
pop
sub
js
and
cmp
jl
adc
mov
stos
arpl
adc
sahf
adc
sahf
xchg
xchg
push
int
loop
push
into
push
cmp
dec
int
fistpl
adc
out
into
mov
or
mov
int3
sub
jns
fs
jl
test
jne
dec
xchg
pop
pushf
ljmp
sub
dec
lret
pop
push
lea
push
int3
cmpsl
icebp
inc
push
sub
inc
aaa
cmpsl
add
jmp
daa
stos
jo
fs
mov
roll
mov
add
dec
dec
cmpsl
and
sbb
xchg
jge
pop
fbld
sbb
mov
mov
dec
cmp
cmp
aas
mov
js
ljmp
cmp
stos
popl
dec
push
sbb
test
add
clc
dec
shll
dec
sub
lock
mov
test
aas
inc
subb
lcall
popa
outsb
in
mov
cmpsb
push
dec
call
in
adc
das
xchg
mov
mov
enter
movb
mov
cmp
test
repnz
xchg
shlb
outsl
negb
sub
or
mov
sbb
jno
cli
pop
lods
push
or
addr16
pop
ds
mov
add
sub
dec
xchg
sahf
std
lret
jae
jecxz
xchg
xchg
stos
scas
ja
mov
xor
xlat
adc
jae
out
push
rcr
pop
aad
mov
scas
and
sbb
cmpsl
test
add
sbb
or
xor
outsb
insb
xor
sarl
jecxz
add
loop
popf
push
cmpsl
mov
aam
cvtps2pi
fisubrs
mov
das
stos
jae
adc
lahf
nop
jmp
inc
mov
lahf
std
jae
sbb
inc
mov
fstpt
dec
or
jg
mov
jne
repz
xor
push
leave
cmp
sub
aas
int3
push
xor
aaa
or
fstl
inc
mov
jns
dec
stc
dec
repz
flds
push
pusha
inc
xchg
inc
inc
les
in
movsl
mov
inc
gs
sbb
xchg
mov
and
icebp
jl
movsl
out
aaa
out
jecxz
bound
jns
lret
or
sub
inc
jbe
inc
add
ljmp
pop
in
gs
push
js
mov
iret
xor
pop
in
xor
dec
cmp
les
inc
jmp
add
popf
sbb
mov
fwait
jp
mov
inc
jne
aaa
aas
xchg
aas
jle
lret
sbb
repnz
insl
sub
arpl
cwtl
sar
xor
jg
lsl
popa
aas
jb
movsb
or
mov
fldcw
sbbb
cmp
rcr
leave
xor
shrl
imul
mov
push
and
out
out
cmp
loopne
add
cli
mov
sbb
mov
mov
pop
push
xor
pop
fbld
mov
imull
jne
pop
push
xchg
sti
addb
sub
sub
lahf
gs
pop
adc
push
jo
jb
sub
lahf
dec
push
icebp
mov
inc
mov
test
mov
lcall
pop
and
inc
push
outsb
sbb
fistl
mov
jmp
ljmp
hlt
imul
lods
pop
jae
mov
int3
adc
les
mov
icebp
mov
sbb
xor
nop
movsl
test
inc
shlb
adc
decl
xchg
aas
dec
jns
push
std
add
idivl
adc
mov
mov
push
jl
lahf
das
shr
imul
pop
cmc
test
sub
cmpsb
fsubl
in
fmul
repz
and
ja
xor
ret
inc
mov
cmp
adcl
nop
push
je
into
and
pop
inc
lods
xchg
fnstenvs
dec
dec
dec
fisttps
mov
fiaddl
popf
jbe
lret
fmul
scas
sbbb
or
call
and
fstps
sbb
enter
sbb
outsl
pop
sbb
jns
je
loopne
cmc
add
xchg
push
jae
push
aaa
jo
scas
test
dec
sahf
cmp
sbb
test
adcl
mov
movsl
lock
aas
jecxz
mov
jg
arpl
repz
es
dec
jmp
loop
pop
mov
adc
lcall
and
outsb
test
mov
and
inc
push
cmc
xchg
sbb
mov
mov
push
xchg
stc
cmp
mov
and
cmpsb
jmp
sbb
out
test
loop
idivl
push
or
shll
inc
loope
sub
fildll
sub
mov
aad
sbb
movsb
aaa
std
sahf
aas
and
ja
flds
aad
lock
jo
lahf
pusha
cld
pushf
mov
jno
enter
stc
into
loop
sub
hlt
dec
push
enter
and
inc
dec
fcomps
mov
lock
gs
sub
and
and
jl
mov
add
dec
fcmovbe
mov
pop
shlb
xchg
inc
cmpl
in
incb
flds
iret
mov
adc
arpl
stc
ss
in
ljmp
testl
push
inc
and
xchg
cmp
xchg
jno
loopne
gs
int
idivb
or
dec
mov
call
fistps
aam
daa
lock
test
sarl
mov
push
fs
mov
xorl
movsl
xchg
push
andb
icebp
sbb
jecxz
pop
mov
ret
or
lock
adc
cmp
pop
sub
xchg
mov
notb
imull
and
push
js
cmp
bound
push
adc
rcrb
push
mov
push
insb
jae
int3
jno
mov
mov
xchg
ss
repnz
xchg
popa
fmuls
scas
je
fsubl
inc
pop
hlt
cmc
fiaddl
stos
test
cs
in
mov
sub
sub
add
fwait
adcl
mov
lock
shll
ljmp
sub
sub
xchg
outsb
and
sahf
jo
sbb
std
stc
ja
cmp
cld
out
jae
clc
xor
adc
xchg
cs
inc
xchg
in
pop
push
cmp
loop
loop
int3
mov
mov
cwtl
pop
mov
das
mov
sbb
push
xor
out
cmpsb
jae
jo
out
inc
pop
mov
hlt
inc
jge
sub
mov
clc
fwait
sub
push
pop
lods
lea
add
lods
lods
sti
arpl
test
dec
jae
nop
cld
cmp
push
aaa
dec
andb
lret
adc
mov
jge
insb
ret
stc
hlt
adc
add
cmp
push
imul
adc
arpl
pop
sub
mov
testl
inc
adc
jae
mov
push
loopne
fcoml
js
mov
jp
jne
fwait
popa
outsl
fdivp
pop
scas
or
lods
dec
dec
xor
sbb
dec
jno
xor
cmpl
and
les
inc
adc
mov
fs
cmpsl
xor
out
jno
fstps
lret
aam
sbb
inc
xchg
inc
in
add
mov
jecxz
and
push
push
ljmp
and
adc
mov
push
mov
adc
lock
fdivrl
cs
or
xchg
pop
sub
out
cmp
pop
in
pop
xchg
je
scas
push
in
or
leave
adc
xor
mov
sub
repz
sahf
rorb
fbld
mov
pop
or
pop
sub
aam
out
mov
loope
push
ror
xor
pop
imul
aad
sub
jo
jmp
lret
and
jns
mov
js
pop
es
adc
orl
sarl
adc
jae
xorb
and
pop
rclb
xor
cmp
push
ret
fldenv
jecxz
fldl
pop
mov
mov
or
lock
ja
push
cmp
and
icebp
ja
mov
cmp
add
repz
dec
inc
adc
adcb
std
int3
or
xor
call
out
inc
cmp
adc
jbe
push
pop
xchg
cmp
add
push
leave
test
icebp
movsl
fs
lcall
dec
in
mov
push
fisubrs
mov
enter
inc
pop
imulb
loop
xchg
or
int3
subl
gs
jbe
lahf
out
mov
or
cli
xchg
test
xchg
test
nop
arpl
mov
aas
and
movsl
pop
fildl
mov
orl
aam
arpl
sbb
mov
out
test
add
aad
mov
pop
jbe
xlat
cwtl
hlt
push
dec
jne
and
and
xchg
ss
aas
std
stos
jp
sbb
xchg
aad
xlat
popf
mov
dec
mov
ret
sub
jecxz
pop
jle
xchg
xchg
test
ret
pop
aaa
xchg
fisttps
mov
mov
cmp
xchg
sbb
es
aaa
push
data16
mov
mov
mov
shr
fcomi
adc
jge
adc
mov
addl
std
xorb
popa
xor
cltd
lret
mov
call
insb
lods
out
das
pop
mov
movsb
mov
int3
sub
xor
sbb
jp
out
nop
jnp
icebp
xchg
cmc
xchg
mov
dec
mov
inc
lods
or
movsb
pop
xchg
out
repz
sbb
shll
and
shrb
inc
lds
inc
lcall
das
xor
dec
test
addr16
shll
dec
test
aas
cmp
fldenv
rcrl
pop
xor
ja
dec
fcmove
mov
push
xor
and
xchg
into
fstpt
jl
fcmovnb
arpl
push
pusha
add
xchg
adc
mov
cmpsl
js
es
sub
loopne
mov
aaa
es
mov
sti
rolb
or
or
or
pop
adc
mov
jb
xchg
mov
addr16
push
stc
mov
and
stos
or
xor
lret
adc
ficoml
inc
in
mov
mov
mov
arpl
dec
jo
cmp
std
stc
xchg
aas
add
in
outsb
cmp
repnz
mov
fdivrl
inc
sarl
xor
das
imulb
or
sub
and
lock
adc
push
dec
mov
out
inc
shl
nop
mov
push
inc
negl
xchg
adc
rclb
ds
jne
xchg
repz
rolb
mov
std
lahf
inc
adc
push
adcl
dec
imul
jb
xchg
inc
bound
out
sarl
inc
jns
cmp
jb
ror
popa
cmp
push
and
xchg
push
andb
in
sarb
cmp
fwait
xchg
mov
out
ja
sub
int3
rorb
pop
sbb
insb
int
cmc
test
movsl
sbb
inc
mov
add
mov
gs
sbb
addb
fadd
dec
stc
push
loopne
cmpl
fstpt
lods
into
inc
mov
add
lds
jne
jbe
movsb
test
loop
xchg
scas
repz
mov
enter
push
push
cmp
jmp
cmp
stos
aam
cmpsl
sbb
test
sbb
and
mov
sub
dec
pop
insb
sub
dec
lock
jo
xchg
dec
mov
prefetcht2
or
rorl
fwait
xchg
mov
xchg
stos
pop
paddsw
orb
xor
adc
mov
ja
adc
sahf
and
mov
in
adc
jmp
add
sti
inc
or
mov
cmp
aad
mov
sbbl
pop
pop
ret
adc
cmp
pop
jns
xor
fisttpl
jnp
xchg
jl
or
cwtl
out
fisubrs
subb
gs
jne
cmp
cmp
adc
call
mov
pop
mov
mov
sub
dec
jae
shrl
lds
mov
mov
dec
mov
mov
pop
push
or
lret
pop
add
push
lret
bound
jecxz
xlat
popf
in
mov
xlat
addr16
pop
or
pop
sahf
cmp
push
sub
pop
xchg
pop
or
jge
orb
sbb
lock
adc
jns
addb
stos
push
lret
pusha
std
movsb
in
test
test
imul
mov
shll
andl
jno
inc
push
popa
test
lcall
int3
popa
aaa
imul
lahf
inc
mov
jbe
jne
mov
and
jae
jb
sub
adc
outsb
pop
sti
mov
fsub
add
xchg
or
fisttps
dec
movsb
ret
lret
mov
test
ja
push
js
pop
push
mov
popa
sbb
sbb
mov
insl
xor
pop
dec
out
add
push
push
jnp
sti
fidivrl
jle
les
sbb
stos
testb
addr16
imul
sahf
fldl
lods
in
and
in
adc
add
cmp
sub
pop
mov
push
inc
repz
vcvttpd2dqx
xchg
test
shrb
xchg
mov
decl
add
les
pop
aaa
insl
and
repnz
xlat
push
orb
inc
jle
jns
rcr
mov
lods
scas
ss
cltd
pusha
arpl
test
lcall
lea
jg
inc
popa
inc
imul
and
and
and
call
mov
dec
call
rolb
pop
xchg
ljmp
cmc
sbb
lods
adc
ss
sti
push
sahf
loop
mov
sbb
incl
xlat
int3
es
lret
jle
loope
dec
lret
pusha
cli
ja
insb
inc
mov
sub
add
mov
adc
cld
aad
loop
aas
sbb
and
mov
pop
inc
xor
xor
fiaddl
in
shll
cld
mov
aaa
hlt
mov
fwait
ljmp
jno
icebp
outsl
stos
jbe
pop
sub
push
les
xorl
test
pop
lea
xlat
imul
mov
ja
aad
adc
xor
rorl
and
or
imul
fs
push
pusha
out
cld
call
mov
and
mov
sarb
inc
loope
cmpsb
inc
js
nop
jle
xchg
in
cmp
dec
outsl
xchg
rolb
inc
xchg
jo
shr
pusha
es
in
xchg
cwtl
jl
clc
dec
daa
mov
cld
fcomps
inc
xor
push
stos
stc
dec
pusha
xor
mov
or
dec
sbb
inc
sbb
sub
mov
outsb
aas
dec
dec
xchg
xor
mov
adc
jp
push
ja
xchg
int
sbbb
in
scas
pop
loope
cmp
and
aad
fwait
fs
cmp
xchg
repz
stos
pop
lahf
enter
icebp
adc
adc
nop
bound
mov
enter
popf
inc
movsb
jg
sub
cli
or
add
inc
add
insb
cmpsb
mov
mov
pop
aaa
ss
inc
ljmp
ret
cmp
or
mov
jp
lds
xor
add
cmp
mov
jg
mov
lcall
mov
pop
shlb
pop
cwtl
dec
mov
scas
push
inc
call
leave
rorb
mov
mov
ss
xchg
mov
pop
push
cmp
sub
jne
mov
push
mov
fs
sub
cmp
bound
fimuls
inc
add
ja
das
jg
pop
jbe
lock
aas
ja
pop
pop
sub
xor
je
fistpl
mov
call
dec
pop
ljmp
jp
ljmp
inc
jmp
test
hlt
inc
xor
ja
xlat
ja
xor
mov
add
in
inc
push
mov
fldt
add
mov
inc
mov
cmp
mov
cmpsb
or
ljmp
sbb
add
ds
adc
cwtl
rorb
mov
add
cwtl
xchg
xor
nop
scas
or
ja
xchg
pusha
shll
cltd
adc
gs
mov
sub
enter
lds
xchg
lcall
mov
daa
jne
mov
hlt
push
pop
and
or
jne
cmpsl
addr16
popf
out
lock
xor
inc
inc
sub
test
add
push
test
pusha
jl
pushf
sub
adc
les
int
adc
imul
xchg
mov
dec
cmp
bound
ret
inc
lcall
xchg
lret
das
and
pop
enter
adc
das
imul
shll
add
jo
sbb
jno
cmp
lock
mov
mov
mov
lods
into
push
pop
pop
inc
inc
or
aas
and
pusha
xchg
jge
pop
test
arpl
xchg
lret
dec
pop
test
arpl
xchg
inc
cmp
pop
stc
sbb
xchg
pusha
sahf
es
out
stos
push
lds
call
and
popf
enter
xchg
out
xlat
aad
frstor
xor
sbb
and
es
mov
inc
mov
into
mov
pop
hlt
sbb
sub
push
push
rcrb
dec
and
adc
sbb
loop
data16
mov
and
and
and
test
in
or
out
in
inc
adc
ja
leave
daa
mov
clc
dec
mov
mov
inc
rcrl
sbb
shr
aad
push
add
fimull
arpl
xchg
lret
fistl
add
and
cltd
test
dec
enter
mov
jle
sarb
or
aad
mov
mov
inc
nop
lret
mov
int
loope
mov
pop
sub
hlt
fiadds
popf
mov
push
jno
sub
in
pop
enter
adc
lret
mov
fwait
push
jle
ss
shlb
dec
mov
and
xchg
loop
xchg
xor
outsb
subb
subb
push
imul
insb
ret
pop
mov
fwait
cmp
pop
xchg
jge
repz
xchg
xchg
mov
cs
adc
or
sar
push
or
int3
xchg
mov
add
xchg
pushf
sub
lcall
dec
out
js
push
fildll
cmp
je
xor
shl
push
ljmp
xor
mov
push
push
inc
xor
cmp
in
out
mov
lds
sub
mov
shll
sbb
inc
pop
pop
push
negl
push
pop
sahf
add
out
in
hlt
mov
jle
scas
mov
cmpsl
out
dec
test
out
xchg
adc
pop
orb
into
pop
inc
mov
inc
xchg
cld
mov
shrl
movq
mov
mov
lahf
push
adc
lds
lds
mov
lcall
sti
and
push
iret
inc
dec
sahf
mov
into
pop
mov
dec
arpl
push
lret
fsts
es
or
cmp
cmp
out
out
out
dec
lods
stos
out
push
cld
sbb
lock
aas
imul
cli
stc
xor
push
xchg
dec
mov
dec
popf
push
jge
pop
icebp
fldcw
insb
push
lret
push
push
jle
aam
popf
stos
scas
decb
xor
pop
sub
mov
call
insl
add
cmp
roll
sbb
cmp
aad
mov
jo
ret
pushf
stos
adc
leave
aaa
test
mov
shlb
sbb
jbe
shlb
mov
repz
jmp
jb
mov
popw
add
lret
cmpb
int
je
mov
mov
fdivrl
cld
cmp
loop
sbb
mov
cmp
in
cli
xchg
repz
fstps
push
outsb
xchg
in
mov
sbb
xchg
push
push
mov
addr16
in
sbb
xchg
lret
nop
cmc
sub
and
fs
pop
rcrb
and
push
xor
mov
jne
or
push
dec
xchg
daa
iret
inc
shrb
mov
mov
add
fsubl
sahf
rolb
mov
adc
lret
pop
inc
sbb
xchg
adc
out
mov
add
mov
das
lret
leave
jb
jg
lret
jae
xor
jl
loopne
outsl
iret
jle
cli
push
leave
outsl
sbbb
push
xchg
adc
stc
jecxz
pop
loopne
stos
cmp
shlb
sahf
push
xchg
lcall
cld
jle
rol
repz
add
mov
dec
pop
ret
je
andb
push
dec
leave
pop
lahf
test
icebp
data16
repz
or
or
in
dec
and
jo
push
int3
outsl
jmp
dec
lcall
lcall
inc
xor
in
xchg
mov
jns
adc
add
mov
pop
sub
jecxz
jmp
add
and
jmp
into
mov
in
fisttps
inc
xlat
xchg
add
inc
cmp
test
arpl
jb
fwait
and
pushf
mov
sahf
dec
inc
outsl
adc
mov
fwait
xchg
push
mov
ret
jae
pop
call
cmp
pop
add
stc
sar
idiv
test
dec
dec
push
dec
pushf
imulb
mov
call
dec
leave
pop
scas
fistps
push
dec
shl
ds
mov
sbb
pop
and
aas
jge
adc
mov
imul
fwait
in
je
sbbl
popf
shll
arpl
je
or
dec
sbb
jmp
add
lret
vrcpss
cmp
cmpsb
enter
sarb
stos
or
std
and
call
push
push
xchg
into
icebp
cltd
mov
out
push
aaa
fcmovnb
fildl
lahf
fistpll
psubsb
mov
addr16
xor
jbe
dec
push
ja
adc
je
fbstp
out
or
mov
jmp
push
pop
rol
mov
adc
out
roll
out
pushf
hlt
dec
add
mov
mov
add
cvttps2pi
jne
add
inc
cmpsl
jl
dec
mov
adc
dec
adc
shlb
and
and
movsb
orl
mov
daa
ret
xor
fs
push
pop
int3
sub
xor
mov
adc
ss
adc
aas
pop
pop
mov
adc
mov
popf
or
jp
ret
out
fidivrl
aam
adc
movsl
shll
adc
jae
or
test
push
sub
dec
pop
xor
sbb
andb
fisttps
adc
lds
int
mov
cmc
ss
pop
mov
rcrl
jnp
push
add
and
jp
cld
or
pop
cmp
add
mov
das
mov
mov
pop
bound
popl
outsl
movsb
cld
jno
inc
pop
addr16
xor
out
inc
movsb
cld
push
stos
fcmovnu
xchg
test
call
push
mov
sbb
jg
mov
add
jne
or
adc
sub
movsl
arpl
jmp
jp
clc
mov
pop
push
aas
ret
push
cmp
das
or
pminsw
and
cmc
in
aam
jecxz
popa
mov
out
mov
and
dec
push
testb
mov
and
leave
mov
push
sub
scas
xor
cwtl
aam
test
and
sbbb
rorb
sahf
dec
sbb
cmpsl
xchg
sub
push
cmp
cmp
xchg
movl
lahf
in
mov
adc
inc
jmp
lock
cmpsb
push
lods
mov
inc
mov
xor
les
mov
jp
sbb
in
jbe
pop
mov
fisubrl
jp
out
flds
and
mov
and
xor
ss
in
push
sbb
out
inc
lcall
inc
in
scas
stos
aam
aas
add
pop
bound
xchg
hlt
stc
sub
cmp
sbb
nop
cmp
dec
inc
test
mov
ljmp
cmpl
je
xor
mov
cld
repz
mov
fcomip
nop
call
xchg
movsb
nop
pop
xor
aad
xor
std
outsl
popf
fisubs
ret
enter
mov
cmpsb
adc
pop
aas
cltd
push
sbb
jo
xchg
mov
les
stos
adc
xor
jne
ja
rcll
xorl
cltd
cmp
enter
lods
lock
sub
sub
adc
rclb
les
cwtl
dec
mov
jle
mov
pusha
pusha
clc
cmp
cld
rorb
rol
add
movsl
adc
adc
pop
mov
dec
pop
bound
sbb
into
shrb
popa
imul
cltd
repz
fidivl
jo
mov
xor
ss
dec
scas
pop
mov
dec
inc
mov
gs
and
testl
inc
fisttps
push
std
cmp
rclb
inc
scas
xchg
or
mov
cwtl
sahf
pop
mov
rorl
out
in
aam
inc
push
pop
in
pop
aad
push
leave
inc
cmc
sub
mov
jbe
jns
and
mov
imull
inc
jle
ret
push
out
adc
push
pop
push
xor
xchg
and
inc
adc
push
xor
inc
pop
or
loope
push
insb
push
and
xchg
inc
test
mov
test
push
inc
sbb
iret
adc
jne
ljmp
pop
sbb
iret
insl
inc
pop
add
iret
cld
and
rcl
sbb
mov
lds
sub
push
push
mov
jg
mov
jg
lock
add
fcomps
and
cltd
jle
sarl
fsubr
mov
or
xorl
fwait
sarl
lret
loop
dec
les
insl
push
sarl
add
pop
movsl
repz
push
scas
lret
mov
gs
mov
jmp
and
ficomps
les
inc
push
aaa
jl
cmpsl
mov
mov
dec
pop
sbb
rcrl
cmp
shlb
sub
mov
stc
mov
jns
add
sbb
clc
cld
rcrl
and
iret
fnstsw
push
bound
mov
aam
jae
mov
gs
lret
sub
sbb
adc
push
hlt
lods
scas
pop
jne
pop
outsl
push
pop
xchg
mov
jns
insl
cmc
jae
mov
scas
cli
xchg
aam
and
outsl
mov
je
sahf
mov
push
jne
ss
mov
cmp
push
adc
fdivr
or
xchg
stos
out
addr16
movl
push
xor
adc
adc
xchg
xchg
adc
push
scas
xchg
hlt
mov
test
jne
sbb
cwtl
out
rcl
cmp
pop
xchg
pop
scas
int3
lock
xchg
pop
imul
dec
mov
pop
sbb
adc
popa
inc
mov
insb
adc
fucomip
pop
push
dec
sub
sbb
mov
add
cld
mov
cmp
rolb
cs
ret
out
dec
xor
push
lret
icebp
les
ret
cld
adc
mov
rcrl
gs
mov
lahf
mov
cmp
jb
inc
scas
test
jae
cmp
fs
mov
jle
imul
mov
push
or
cmp
adc
xchg
dec
outsb
outsb
push
jne
cmp
sbb
mov
mov
repz
xchg
cmp
stos
jmp
mov
popa
bound
pop
arpl
insl
std
ss
in
inc
mov
rcrb
fisttps
push
int
dec
ja
mov
dec
shlb
sub
bound
test
addr16
push
rcrb
pop
fs
inc
xchg
popa
and
ljmp
sub
in
scas
sbb
loop,pt
adc
xor
cmp
mov
sarb
cmpl
out
aaa
and
data16
js
outsl
or
cs
inc
push
shrb
push
lcall
mov
xchg
mov
add
cmp
icebp
cmpsb
testb
int
jmp
imul
xor
cld
add
mov
or
movsb
ret
mov
mov
scas
push
leave
sub
std
arpl
ss
jmp
or
sbb
out
and
lret
xchg
inc
outsb
and
push
clc
je
mov
xchg
push
pop
mov
cmp
cli
cmpsb
pop
xchg
jbe
and
je
adc
dec
jmp
cmp
cld
mov
lcall
lret
clc
sub
jmp
xchg
push
pop
inc
or
sbb
and
cmc
lods
push
insb
add
jns
jg
lods
ljmp
mov
xchg
ja
mov
mov
repnz
xchg
adc
sub
mov
cmpsb
cmp
adc
pextrw
sbb
popa
add
push
addr16
jae
loope
and
rorb
imul
scas
cmp
cmp
or
add
fimull
test
jge
js
or
lds
ret
jmp
adc
scas
movsl
test
xor
fwait
xchg
xor
ja
imul
lret
xchg
insl
dec
add
enter
xchg
out
fstpt
fstpt
fmuls
xchg
dec
mov
push
xor
and
pop
into
insl
pop
arpl
pop
sub
out
sbb
push
jmp
cmpsb
mov
mov
in
sub
iret
cmp
push
scas
fildll
mov
sub
jne
loope
in
jae
cli
xchg
mov
imul
xchg
sbb
int
je
sbb
mov
xchg
pop
das
aad
stc
mov
and
popf
js
adc
lods
inc
inc
das
cmp
movsl
in
sbb
cli
fildl
aaa
push
pop
xor
xor
jbe
or
mov
test
flds
pop
pushf
decb
mov
gs
jg
bound
into
push
dec
mov
outsl
adc
mov
cmp
push
jo
mov
and
lods
mov
out
jmp
lcall
add
dec
inc
inc
or
push
cltd
out
jle
mov
test
mov
xchg
in
dec
repz
add
rclb
and
push
mov
cmpsb
push
fildl
jge
xorl
fsubs
popf
aam
adc
lea
mov
inc
push
jmp
pushf
jp
pop
mov
pop
rorl
mov
test
and
jmp
seto
jns
cltd
into
xchg
jg
cmp
ss
cltd
lea
sub
cmp
aad
mov
inc
pop
mov
jae
pop
cmc
xchg
int
ljmp
mov
outsb
sbb
mov
insl
push
mov
out
nop
sub
arpl
add
hlt
mov
mov
dec
movsb
sbb
int3
xchg
movsb
push
dec
sbb
outsb
fldenv
iret
sti
or
cltd
inc
vmulpd
insl
push
jne
mov
cmpsb
fldl
mov
retw
pushf
xor
and
dec
arpl
push
out
mulb
xlat
push
mov
addb
push
rorb
xchg
cmp
mul
mov
lock
sbb
xlat
ror
and
dec
test
lahf
imul
jl
loope
jmp
lcall
jno
in
jae
inc
rorb
imul
test
pusha
push
push
sbb
jno
pop
pop
mov
jno
ja
insl
inc
xchg
and
mov
xchg
and
cmp
xchg
cmp
jno
pop
addr16
gs
jnp
mov
movsb
into
fld
sub
or
xor
cltd
push
inc
loope
mov
call
lret
jbe
test
test
mov
loope
xor
and
jnp
je
jbe
cmpsb
sahf
dec
and
fwait
xor
ja
adc
inc
and
mov
mov
movsl
and
xor
dec
mov
pop
xchg
push
and
sub
inc
in
ss
sbbb
rorb
add
fcoms
mov
pusha
jecxz
das
dec
push
push
fisubrs
sbb
das
lods
xchg
add
cmp
or
cmp
push
sti
push
push
movsl
xor
jbe
rol
or
adcb
das
sbb
test
scas
dec
push
lods
test
loope
mov
fadds
lahf
adc
roll
dec
mov
push
fsubrl
mov
pop
pop
ds
outsb
std
ja
mov
movsl
imul
push
inc
cmc
aaa
lret
adc
and
shll
adc
nop
jne
sub
test
push
sub
inc
loop
mov
out
mov
pop
fisttpll
mov
rorb
lea
dec
add
imul
and
push
sahf
jne
popf
jp
cmpsb
neg
sub
sub
sub
or
das
xor
sbb
mov
inc
xchg
ljmp
lret
mov
in
mov
fistpl
out
mov
xor
ret
daa
cmp
add
sub
rolb
test
mov
clc
aam
leave
sub
lods
andl
stos
mov
mov
mov
popa
scas
cs
loop
stos
cltd
std
jno
cmp
mov
fsts
or
fsubrl
aas
and
jle
pusha
ja
inc
stos
loopne
stc
out
xchg
sar
mov
sti
imul
sbb
ja
mov
das
fneni(8087
jmp
andl
out
sub
push
sbb
aaa
pusha
ficomps
popa
maxps
sub
xor
adc
cmp
cmpsb
jmp
in
push
fistpl
dec
sbb
test
sbb
adc
adc
hlt
mov
mov
out
std
mov
out
push
sub
repz
aam
jb
inc
mov
mov
loope,pt
rcrl
adc
loopne
int
sbb
sub
xchg
cld
cmpsb
cmp
add
cld
in
mov
movsb
mov
rcrl
lds
jno
ja
mov
push
jecxz
mov
ljmp
shll
rcrb
cli
push
mov
and
inc
pop
add
mov
xor
loope
outsb
fstpt
mov
movsb
aaa
call
pop
mov
jbe
enter
pop
add
mov
mov
jb
or
enter
push
in
mov
cmp
mov
ljmp
mov
lods
pushf
push
imul
dec
xchg
int
aas
pop
pop
popf
inc
scas
mov
inc
mov
push
dec
andb
test
cmpsl
jo
jne
lods
cli
shll
imul
aad
orl
cmp
aaa
cs
test
cld
sub
int3
xchg
pusha
lock
xor
in
push
cmc
and
adc
and
repz
int3
mov
xchg
push
mov
mov
ds
pop
add
xor
mov
out
lock
addb
push
pop
pusha
fidivrl
or
pop
cmp
ja
jae
cmp
lret
rolb
inc
jg
adc
cwtl
pop
add
jp
adc
and
mov
jae
daa
fmuls
outsb
movsb
cmp
or
sub
jge
sbb
inc
mov
sahf
cmc
imul
stc
enter
add
pop
rol
push
xchg
mov
dec
fadd
push
mov
pop
pop
inc
sti
add
push
sub
adc
mov
mov
mov
popa
dec
loop
incb
xchg
popa
xorb
imul
or
and
mov
daa
test
mov
mov
lods
pop
mov
out
imul
lcall
or
mov
sub
push
lods
pop
sbb
dec
push
mov
lock
gs
jb
xchg
pop
das
fs
sbb
and
cltd
inc
int3
fisubrl
cmp
scas
pop
sub
sbb
xor
outsb
fcomip
lock
lret
or
iret
mov
shll
aas
lret
lods
leave
xchg
ret
incl
and
dec
xchg
mov
xchg
pop
shll
adc
enter
test
push
adc
sahf
rcll
cmc
mov
sub
jg
pop
mov
pushf
and
inc
pop
push
mov
mov
push
scas
arpl
inc
pop
mov
add
call
xchg
je
sbb
shlb
inc
scas
in
mov
add
push
inc
adc
pop
fsubrs
inc
push
iret
dec
mov
loop
push
push
push
stc
sbb
mov
adcb
and
mov
stos
mov
mov
xor
das
daa
adc
mov
mov
xchg
push
out
xchg
cltd
adc
fwait
jbe
fistps
insl
mov
and
fstps
xor
pop
mov
jge
ljmp
or
popa
mov
mov
dec
push
mov
dec
push
sahf
data16
lret
cmp
js
scas
sti
jp
daa
fildl
fcompl
mov
mov
adc
insl
dec
jo
mov
adc
outsl
xchg
sbb
mov
xchg
shl
mov
loope
pop
out
mov
stos
les
inc
xor
adc
stos
jp
cmc
cld
repnz
hlt
pop
jle
loope
sbb
orl
sub
imul
cwtl
ret
sub
outsb
and
mov
mov
jmp
fbld
mov
in
xchg
repnz
adc
adc
fldt
cmc
js
lods
pop
cmp
fnstenv
mov
repz
repnz
das
aam
pusha
or
ljmp
lds
inc
jecxz
cmp
fbstp
jge,pn
insb
out
jne
mov
sub
dec
jne
push
push
fcomps
cwtl
test
mov
bound
loop
outsb
ss
cwtl
fsubp
sahf
sbbl
sahf
dec
aas
mov
add
cmpsb
adc
sbb
fwait
sub
push
cli
pop
and
push
adc
mov
mov
cli
je
jg
arpl
pop
loope
jno
sub
pop
movsl
or
icebp
shlb
div
xchg
xchg
ret
xchg
dec
rolb
add
and
les
push
xor
xchg
xor
and
or
sbb
cld
adc
and
sub
sub
leave
xchg
pop
icebp
gs
inc
cmp
xchg
or
pusha
jecxz
pop
loop
mov
scas
lds
push
xchg
ljmp
sarl
gs
repz
les
fldenv
xor
pop
mov
leave
cwtl
int
fcoml
and
or
enter
sti
inc
pop
ss
arpl
inc
pop
nop
jg
lahf
jnp
ds
mov
cmp
dec
fdivr
mov
sbb
mov
pop
dec
lea
ret
jg
subb
aas
test
aam
icebp
bound
popf
pop
add
jnp
out
sub
lret
shll
loop
mov
jl
mov
clc
rcr
adc
out
and
and
dec
int
sub
dec
mov
pop
xor
aas
push
jl
fisubrl
scas
mov
imul
mov
pop
mov
rorl
inc
fcomp
dec
pop
test
xchg
add
sub
or
repz
inc
fiadds
xchg
cld
shll
stos
mov
icebp
mov
rclb
jnp
add
aam
out
hlt
gs
ljmp
pop
mov
xor
hlt
jne
scas
xchg
fs
xchg
scas
sbb
sbb
xchg
inc
ret
lock
loopne
adc
pop
test
psrad
sbb
clc
inc
test
add
push
pop
pop
out
aas
outsb
cwtl
addr16
pop
sbb
xchg
cmp
adc
xchg
daa
xchg
mov
add
or
pusha
inc
xor
enter
adc
mov
sub
insb
sub
pop
rcrl
inc
sub
into
jbe
loopne
cltd
sub
lds
and
xor
add
orb
pop
mov
test
xchg
out
sub
and
pusha
daa
xchg
or
test
push
mov
xchg
lahf
int3
repnz
subb
cmp
mov
adc
jb,pt
insl
outsl
or
mov
xor
mov
pop
mov
jne
dec
fcmovnu
sub
movsb
mov
es
daa
mov
repz
stos
xor
test
insl
push
ljmp
jae
ds
mov
stos
int
arpl
and
icebp
dec
and
in
test
insb
push
pop
mov
mov
int
xor
outsl
pop
jae
cltd
mov
shlb
cltd
jns
cmp
pop
test
push
loopne
insb
inc
orb
mov
mov
push
adc
or
inc
lea
lds
outsb
add
cli
push
mov
sub
pop
lock
or
push
pop
movsl
or
fcmovbe
xlat
divb
sub
sbb
xchg
nop
lods
stos
fistpl
mov
loope
mov
or
stc
mov
push
mov
out
outsl
mov
lret
mov
jmp
cmp
sub
lahf
or
xor
sbb
cmpl
xchg
sbb
enter
les
sbb
in
and
cmp
mov
testb
enter
call
imul
dec
jae
pop
mov
mov
xor
jns
xchg
or
xor
sti
movsb
sbb
or
pop
xchg
inc
xchg
adc
lods
cmp
js
cmp
sub
mov
mov
in
fsubs
cmp
mov
test
ljmp
shll
sbb
fdiv
mov
movsl
lods
movsl
jae
mull
mov
test
cmp
mov
insb
lods
or
inc
shll
or
scas
inc
sub
push
pusha
adc
cmp
pop
aas
xchg
jle
dec
aaa
xorl
fs
xor
push
fcmovnu
pop
jl
mov
xchg
daa
inc
in
or
sub
popf
jp
fs
sub
in
loope
fdivrs
mov
mov
daa
das
jnp
jns
pop
jecxz
xchg
mov
cmp
gs
dec
in
dec
mov
popa
insb
fsub
pop
es
div
xlat
xchg
movsl
sbb
dec
add
outsb
frstor
push
push
xchg
push
arpl
movsb
push
lock
mov
cmc
and
shl
int
mov
fidivrl
pop
ljmp
mov
jb
sahf
fdivl
adc
cmp
insl
mov
cmp
xchg
cmp
aad
cmp
jp
mov
je
fnstsw
pusha
loope
push
lahf
mov
push
adc
cltd
mov
cmp
xlat
leave
cmc
xchg
sub
in
ds
xchg
inc
ret
pop
pop
in
js
or
and
out
loop
fistpl
inc
fbld
jb
aaa
or
in
das
push
in
and
bound
mov
dec
push
cli
or
jae
neg
mov
lcall
sbb
movsl
pop
xlat
mov
rorl
lcall
and
sahf
dec
lret
and
mov
sbb
sbb
out
cmp
xchg
jmp
push
cmc
dec
xchg
jo
mov
sub
dec
mov
ds
roll
jae
fcmovnbe
test
or
xchg
mov
out
adc
and
pop
xchg
nop
push
js
mov
lret
xchg
loope
mov
sahf
adc
adcl
icebp
mov
movsl
sbb
adc
out
xchg
xlat
mov
jns
out
sbb
stos
dec
add
inc
fnstcw
add
sub
loope
dec
stos
sarb
lods
xor
test
xchg
out
shll
cmp
push
lock
int
lret
mov
sbb
xor
mov
mov
dec
jge
mov
or
sbb
jo
sbb
push
filds
cmp
xchg
sub
pop
mov
adc
mov
mov
jp
nop
das
mov
insl
call
loop
cmpb
iret
mov
sub
pop
adc
in
mov
adc
icebp
nop
dec
inc
adc
jl
ret
sahf
push
or
sbb
shl
fcmovnbe
pop
inc
out
cli
mov
hlt
loopne
pop
loope
sbb
inc
cmpsl
xchg
jne
clc
out
movsb
in
ss
xor
push
xlat
jmp
dec
inc
xchg
mov
xchg
test
mov
mov
insl
adc
jmp
mov
fwait
mul
sbb
xchg
pop
shrb
pop
sbb
leave
int3
call
icebp
xor
pop
sbb
mov
fildll
stc
imul
jns
lds
mov
fsts
lods
pop
dec
pop
incl
jge
xor
pushf
js
inc
lret
addr16
mov
pop
or
insl
inc
fisubs
lds
scas
data16
icebp
mov
cs
lock
pusha
test
dec
fcompl
sbb
insb
sub
jbe
pop
in
xor
ret
ret
pop
cwtl
jle
add
push
sbb
subb
push
outsb
cmpsb
and
loop
inc
test
jne
test
scas
loope
jnp
mov
inc
inc
xor
insb
stos
data16
fisubl
cmpsb
mov
stc
push
imul
and
insb
nop
insl
dec
push
push
add
stc
loop
sahf
xchg
jo
in
mov
and
aaa
fwait
lods
cmp
inc
mov
mov
and
add
mov
cmpsl
adc
arpl
mov
mov
dec
testb
out
jg
xchg
or
or
inc
mov
push
dec
cli
mov
stc
jne
mov
int3
xor
shlb
push
and
andl
jmp
rorb
xchg
fbld
mov
jne
adc
pop
pop
fildl
test
in
cmpsb
inc
or
test
call
ret
dec
out
fmuls
inc
into
inc
sbb
lea
fsubrs
ds
lcall
pop
dec
push
xchg
test
in
mov
mov
jno
mov
insb
xchg
and
cmp
ljmp
fisubrs
dec
dec
pop
or
data16
loope
icebp
sub
in
test
sbb
jns
adc
push
add
in
mov
sbb
shl
cmpsb
mov
mov
sub
cmp
out
bound
push
xor
ret
sarb
cmpsl
stc
out
mov
push
dec
loopne
inc
shll
das
mov
mov
mov
loopne
inc
jl
or
push
stos
ja
jno
loopne
jmp
movsl
sarl
mov
les
mov
and
shrb
sub
xor
push
int
les
push
mov
ret
cmp
and
fdiv
inc
lret
mov
pop
scas
mov
test
in
int
cmc
cmp
imul
ja
push
shll
add
inc
mov
enter
test
sbb
pusha
pop
cmp
xlat
clc
std
xchg
pusha
sti
jp
in
lahf
movsb
adc
pop
stc
lods
les
filds
inc
iret
loop
loope
cmpsb
lahf
mov
movsl
or
dec
fstpl
push
fcomps
and
inc
and
mov
push
insl
adc
or
push
or
nop
aaa
push
ret
sbb
outsl
mov
xor
dec
rolw
jecxz
enter
fcmovnbe
cld
or
add
ljmp
iret
sar
cmp
jo
out
out
mov
sub
into
fistl
and
stos
push
testl
jge
cs
dec
cs
sub
scas
popl
push
xor
pop
fcomip
inc
add
dec
mov
xchg
outsl
nop
addr16
mul
add
mov
gs
mov
inc
push
push
xchg
fadds
dec
and
rolb
test
jmp
push
mov
pop
mov
inc
jge
cmpps
xchg
cmp
mov
addr16
lret
das
call
test
and
lods
dec
fwait
xchg
popa
pop
cmpsb
xor
imul
push
addr16
cmp
cmc
pop
stos
out
pop
dec
push
cmpsb
mov
sub
cmp
mov
cwtl
push
repnz
cli
adc
test
sbb
ficompl
fldl
test
mov
push
hlt
dec
pop
mov
and
xchg
jbe
xchg
sub
mov
shll
pop
sbb
stos
sbb
mov
ja
lret
out
mov
test
lret
push
pop
dec
int3
sbb
pop
scas
rcl
jl
inc
inc
outsl
dec
sbb
imul
inc
jo
sti
ss
out
nop
dec
addl
mov
add
mov
sub
lea
inc
ja
jnp
xchg
mov
pop
xlat
rcr
and
adc
mov
push
inc
call
inc
fldcw
inc
jae
and
test
sbb
mov
ss
pop
jl
inc
sahf
jp
jbe
imul
cli
and
xor
ss
and
sub
inc
mov
pusha
mov
into
outsl
hlt
push
popa
mov
je
xor
sbb
xor
jno
sbb
inc
xchg
and
cmp
iret
cmp
and
sub
mov
pop
lds
cld
pop
leave
xchg
cmpsl
xor
or
xchg
xchg
add
mov
xchg
sub
lock
add
dec
push
jno
xchg
dec
int
js
jne
dec
je
add
sub
dec
dec
in
mov
pop
int
ljmp
stos
cs
mov
push
loop
dec
push
dec
arpl
aad
jg
mov
jl
mov
jle
ret
clc
jg
stc
in
jo
mov
add
pushf
xlat
test
stos
add
push
aaa
add
jne
add
ss
add
lea
fmull
mov
push
push
dec
mov
dec
push
ret
adc
adc
xor
mov
addr16
cmp
mov
cmp
out
js
repnz
jo
adc
cld
in
jo
loopne
lret
push
rcrl
adc
in
jg
push
sub
rclb
std
scas
inc
lret
xor
mov
repnz
mov
fldenv
or
and
cmp
out
mov
ljmp
and
clc
push
in
addl
pop
test
pop
jne
repnz
icebp
cmp
pushf
mov
inc
push
xchg
add
lret
nop
loope
adc
lret
mov
mov
dec
cmc
mov
ss
dec
mov
pop
push
xorb
test
repz
in
std
test
mov
xchg
lods
dec
xchg
pop
sub
nop
xchg
scas
cld
sarb
mov
les
enter
dec
xchg
jo
mov
jae
xlat
shll
dec
pop
mov
jg
xchg
jb
dec
pop
push
orl
sti
jge
push
pop
xor
int
xor
cmp
and
mov
sbb
out
jo
lock
add
popf
xchg
adc
shr
pop
scas
push
daa
cltd
sahf
cmp
fwait
loope
and
lods
pop
rorl
subl
movsl
add
jecxz
stc
sbb
lcall
push
adc
mov
fsubp
sub
scas
mov
js
cs
xor
push
or
push
mov
push
das
pushf
sbb
lcall
stos
stc
xchg
iret
lcall
insl
int
dec
dec
mov
fwait
mov
push
das
sbb
xor
in
mov
jno
jnp
ljmp
ja
jne
mov
pop
daa
movsl
daa
lds
jg
loop
aaa
fdivs
int3
jl
sti
cmp
aam
addr16
mov
mov
shrb
sub
int
or
mov
andl
mov
push
int3
xchg
arpl
dec
test
add
imul
hlt
imul
and
mov
ss
xchg
loopne
dec
adc
and
jbe
fstp
add
mov
push
in
scas
mov
subl
lock
sub
int
jno
popf
nop
pop
inc
mov
les
ret
dec
notb
inc
cmp
js
cmp
daa
jae
test
int3
mov
xchg
stc
nop
push
xor
mov
cmp
inc
and
mov
test
sahf
hlt
ret
mov
les
iret
int3
addb
out
test
sti
shl
paddd
cmp
cmpsb
cmp
inc
sbb
hlt
add
lock
push
adc
fisubrs
clc
pop
insl
mov
fmul
icebp
rcr
rclb
sub
jge
mov
jge
out
mov
dec
inc
inc
pop
sub
roll
mov
cmpsb
push
test
lahf
pop
mov
fisubrl
pop
popa
shld
mov
push
push
out
js
test
mov
pusha
mov
or
push
mov
mov
dec
cwtl
js
js
pop
sub
jbe
aad
mov
sbb
test
push
cmp
cmpsb
fdiv
pop
push
mov
jg
inc
mov
imul
fcoms
xor
cld
lock
rcrb
jp
cmp
xorl
push
fisubrl
into
decb
repz
cmp
arpl
ret
adc
or
jns
loop
pop
and
push
jge
jae
xchg
mov
cmp
mov
jmp
push
jne
push
hlt
aad
psubusb
test
stos
dec
out
repnz
into
imul
inc
jne
sahf
out
dec
xchg
subb
push
dec
jecxz
scas
test
out
sahf
xchg
insl
pop
sub
push
arpl
mov
dec
jle
xchg
mov
divl
mov
fsubrl
jp
out
sub
xchg
push
inc
bound
or
inc
mov
ret
pop
inc
pop
push
pop
stos
push
std
popa
outsl
adc
adc
pop
mov
adc
sub
or
cmp
hlt
xchg
in
faddl
andb
or
and
jmp
add
out
xorl
int
enter
test
xchg
inc
mov
call
inc
xorb
adc
xchg
and
mov
cmpsb
sti
stos
test
mov
mov
js
cmp
mull
push
sub
mov
lret
pop
and
cld
test
iret
jnp
and
mov
xor
shr
stos
mov
dec
in
or
std
rorb
les
pusha
sti
cmp
lock
movsb
fimull
cld
xor
cmp
adc
mov
mov
cmp
jno
xor
push
mov
xchg
stc
pop
cmp
or
or
lods
jb
jmp
test
xchg
pop
psubsb
aas
xorb
xor
sbb
sub
in
in
xchg
mov
insb
mov
roll
sbb
mov
outsb
or
cmp
xor
andl
outsb
ja
mov
mov
inc
or
dec
mov
and
insb
sbb
out
add
jle,pn
add
cmp
cmp
add
and
mov
adcb
xor
mov
enter
mov
movsb
les
and
cmpsb
scas
jmp
sub
mov
pop
orb
pop
xchg
sub
fiadds
inc
loopne
xchg
pushf
pop
fldenv
dec
jns
mov
xchg
hlt
roll
mov
sarb
in
lods
xchg
mov
dec
pop
rol
and
stc
mov
shll
int3
test
push
inc
push
std
into
adc
fcompl
jmp
repz
jp
xor
mov
xor
and
lret
xchg
scas
xchg
jp
dec
dec
inc
cmp
lahf
cmp
or
inc
jle
push
cmpsl
mov
mov
jns
mov
or
mov
pop
ret
mov
pop
nop
scas
xchg
push
lret
pushf
push
outsb
addr16
jg
fstpl
cmp
adc
dec
lods
ficompl
outsl
or
icebp
dec
xlat
add
or
out
rorl
jmp
mov
jne
mov
push
mov
mov
cmp
rcr
scas
add
xor
mov
push
iret
pop
mov
sub
xor
ja
jne
inc
pop
sbb
mov
sub
mov
int3
mov
subl
mov
fwait
test
fs
mov
mov
jbe
ljmp
repnz
lock
push
and
add
stos
dec
leave
bound
nop
imul
cmp
test
fstps
mov
adc
movsb
mov
ljmp
pop
sub
shl
cwtl
jo
xor
in
cmp
or
outsl
dec
mov
jae
sub
pushf
cmp
ret
pop
xor
push
jmp
push
inc
mov
shll
movsb
xchg
mov
pop
movsb
or
repnz
shll
lods
xor
pop
adc
data16
bound
mov
push
pop
mov
dec
mov
pop
pop
and
sub
pusha
inc
rolb
pop
cmp
test
or
cs
inc
sub
in
jl
adc
xor
ds
test
test
data16
or
roll
clc
aam
cmc
sahf
adc
pop
cmc
divb
push
testb
dec
jmp
loope
addr16
fwait
dec
jne
repz
xchg
out
xchg
in
popa
in
pop
mov
inc
mov
or
inc
in
lock
jge
sbb
xchg
fwait
jb
adc
lret
inc
cs
cmp
loopne
jae
fistpll
lods
fwait
add
and
cmp
iret
xchg
ficoms
pusha
mov
call
dec
aad
push
jnp
push
gs
cmp
dec
push
adc
sbb
push
adc
js
or
iret
cld
pop
shrb
jne
cmp
les
lock
fisubrs
push
push
add
xor
cltd
jbe
dec
add
push
jnp
scas
inc
daa
mov
jne
fmul
in
aas
sti
ss
pop
ljmp
out
fmuls
cmp
cwtl
adcl
add
dec
stc
dec
mov
cmpsb
mov
mov
and
cmp
cld
mov
inc
mov
gs
out
mov
repz
cmp
mov
pop
pop
fcmovbe
add
xor
insb
adc
push
loop
xor
es
fs
cmp
loop
mov
std
push
or
inc
mov
mov
imul
in
pop
adc
imul
icebp
fildll
loop
rcr
call
xchg
inc
pop
sub
out
inc
jo
fadds
les
cwtl
clc
and
dec
or
jl
jle
dec
repz
xor
xor
cmp
orb
lea
adc
push
test
mov
mov
rcrb
orb
stc
xor
addr16
pop
es
ja
mov
pop
pop
dec
adc
lds
mov
mov
jo
data16
dec
dec
mov
sbbl
mov
dec
add
mov
lcall
repnz
leave
cld
push
push
fdivrs
mov
dec
and
stos
and
push
scas
sub
rclb
jb
into
jb
fwait
jmp
mov
repz
sbb
clc
dec
leave
nop
addr16
jl
or
sub
fiadds
je
xchg
std
pop
mov
push
fcoms
mov
pusha
rclb
mov
add
cmp
dec
rcl
pushf
ror
aam
xchg
in
xchg
lods
loope
add
pushfw
inc
dec
repz
pop
jecxz
stc
push
enter
jg
cmp
pop
adc
xlat
mov
fcoml
in
cltd
add
stos
jo
add
sbbl
addb
leave
add
ret
mov
stc
xchg
pop
idiv
sbb
adc
fsts
leave
mov
scas
bound
add
push
ret
dec
cmpsl
inc
mov
add
pop
fiaddl
push
sub
add
and
mov
daa
sahf
out
std
xor
xchg
pop
sbb
or
in
ror
out
inc
push
adc
ret
dec
popa
aad
scas
push
iret
jge
filds
movb
pop
dec
rorl
cmc
pop
mov
pop
jnp
aaa
adc
out
mov
jmp
pop
add
push
lahf
adc
leave
int
fdiv
inc
inc
push
or
add
jle
mov
nopl
or
nop
lcall
sub
mov
dec
pop
add
fistpll
xchg
xchg
mov
scas
and
js
pop
cmpsb
scas
mov
test
fmull
insb
mov
cmpsl
cltd
movsl
call
ret
out
pop
inc
and
cwtl
mov
jge
inc
lods
and
ret
adc
inc
xor
push
mov
cmp
mov
cld
pop
imul
push
ficompl
pushf
outsb
loop
xchg
rcr
xor
xchg
pop
mov
cmp
call
add
xchg
inc
iret
cld
ret
lret
fdiv
mov
push
cwtl
int3
mov
repnz
push
add
xacquire
cmp
test
sub
test
fstps
aad
sbb
or
call
test
rcrb
sti
sub
mov
fmul
jns
fcomps
xchg
jae
test
std
jno
jecxz
dec
clc
push
jb
fcompl
adc
push
pop
push
sbb
jge
std
mov
icebp
push
in
push
xlat
cmp
loope
push
pop
inc
mov
xchg
scas
pop
mov
rcrb
stc
cmc
cld
push
xchg
lret
adc
adcl
mov
or
sub
jge
test
sarl
into
popf
outsb
daa
test
add
sub
inc
call
xchg
pop
outsl
pusha
shll
sbb
jbe
sahf
mov
or
fwait
das
hlt
jns
lods
push
ds
nop
out
incl
mov
xchg
lret
push
outsb
cmp
je
out
add
adc
mov
add
mov
in
clc
insb
fidivrs
negb
lock
jb
xor
rclb
orl
imul
pop
dec
mov
ja
and
cmpsb
adc
out
data16
and
push
xor
jge
adc
sub
stc
ror
push
bound
mov
loopne
mov
ret
enter
clc
outsb
add
dec
out
jnp
and
fnstcw
cltd
adc
insl
or
js
sbb
push
cmpl
in
push
xchg
jecxz,pt
pop
and
and
xor
sbb
cmp
push
sbb
xchg
movsl
mov
notl
aas
stc
pop
in
sbb
lret
dec
mov
sbb
js
pop
push
das
aam
aaa
pushf
leave
push
out
loope
fldcw
fnsave
call
mov
mov
adc
xlat
insl
es
add
in
pusha
data16
sub
jge
cmp
pop
aaa
mov
cs
sti
sub
cs
fmulp
cmp
add
adc
mov
xchg
inc
fisttpll
or
dec
insb
and
push
cmp
cltd
or
inc
fwait
add
xor
dec
and
jmp
inc
xchg
pop
xlat
fbld
out
jg
stos
jg
jp
xor
lods
pop
inc
clc
pop
lret
enter
std
repz
ffreep
iret
in
hlt
int3
push
mov
insl
jae
adc
lahf
mov
out
insl
mov
add
ljmp
outsb
mov
ss
pop
push
sub
inc
out
add
add
or
push
sub
fists
sbb
and
sub
fistps
xor
sarl
jnp
xchg
pop
mov
es
and
xlat
lahf
enter
mov
lock
je
sbb
push
jno
xchg
aad
or
jb
xchg
cmovp
lock
mov
int
cld
and
das
in
push
mov
mov
jp
and
adc
cmp
in
faddp
sbb
and
cmp
imul
mov
add
mov
lea
jne
cmpsb
imul
ror
and
lret
or
jne
xlat
insb
decl
xchg
xlat
test
scas
inc
out
jb
push
pop
out
lea
xchg
mov
lock
mov
add
aam
push
pop
jns
or
icebp
jp
aad
jno
out
and
imul
outsb
insl
out
dec
jecxz
or
enter
ljmp
shll
sarb
lret
notb
shll
mov
popa
sbb
fbstp
fs
shlb
push
jnp
jge
ljmp
cli
rclb
outsb
cmp
cwtd
aam
dec
dec
mov
stos
clc
jbe
sbb
push
adc
or
daa
jns
jp
hlt
adc
test
xor
xor
and
push
jp
loop
sub
push
imul
in
mov
jl
sbb
mov
shll
int3
or
pop
mov
push
and
insb
out
push
add
int3
push
jnp
sbb
xor
insb
ljmp
cmpsb
outsl
stos
mov
insl
subl
cmpb
cli
cmp
popa
lcall
cs
sbb
sbb
int
mov
xchg
xchg
sbb
inc
mov
dec
xchg
mov
mov
sub
sub
xor
push
jbe
int
jl
jecxz
xor
xor
in
dec
test
push
das
mov
mov
das
add
out
fsub
add
jae
push
jno
pop
adc
jb
jmp
lret
jl
pop
cltd
dec
pop
pop
mov
dec
test
lods
ljmp
pop
jne
popa
ljmp
test
data16
pop
ja
subl
cmp
lea
mov
push
mov
aad
xchg
ret
out
int
sbb
sub
sub
repz
mov
adcb
mov
dec
aam
cltd
sbb
push
data16
loope
outsl
mul
loop
push
add
cmc
stos
je
or
mov
sub
mov
push
sub
imul
adc
inc
jo
jne
frndint
sub
shlb
int
or
jge
add
mov
clc
outsb
hlt
mov
add
sbb
mov
mov
adc
in
cli
out
mov
out
or
jne
cmp
rolb
and
mov
movsl
sti
sbb
aam
and
inc
test
or
imul
leave
lods
into
fdivs
and
jne
jg
imul
push
pop
sub
out
mov
shrb
inc
mov
cld
xchg
or
jae
or
cmc
divl
pusha
push
push
or
jno
sub
push
mov
dec
xorb
stos
inc
mov
sti
mov
js
insl
jb
mov
insl
js
mov
lods
mov
outsb
xchg
mov
pop
mov
lock
outsb
cld
xor
inc
jo
lds
mov
pop
mov
dec
pop
subb
mov
and
aas
test
mov
test
mov
sub
mov
les
cmp
lret
push
adc
lcall
jle
sti
test
xor
subb
cs
mov
cmp
nop
xor
xor
adc
push
push
pop
cmp
sub
aas
mov
sub
outsl
daa
mov
mov
out
xor
push
bound
les
adc
out
pop
mov
nop
xchg
lds
lods
into
sbb
addl
pop
xchg
sub
xor
outsb
mov
mov
cli
sub
mov
nop
push
aas
pushf
xor
testl
mov
pop
dec
nop
inc
xor
das
nop
icebp
xchg
iret
sahf
outsl
ljmp
adc
int
or
and
fildll
push
lock
xchg
sub
sbb
add
imul
or
mov
sbbb
ret
inc
sbb
xchg
inc
and
push
pop
sub
lret
push
pop
and
adc
shll
xchg
dec
push
aad
lahf
mov
in
mov
das
cwtl
mov
mov
in
push
inc
stc
arpl
add
xchg
into
push
adc
jg
sahf
mov
enter
mov
fmul
pop
pop
pop
and
das
sbb
int3
jae
jne
xsha256
cmpsb
adc
sahf
jge
idivl
or
push
popaw
lock
mov
dec
pop
lcall
jle
orl
mov
push
scas
je
cs
jg
inc
icebp
fcmovnbe
xchg
xor
jecxz
xchg
das
xor
mov
aam
push
stc
jns
cmp
mov
dec
dec
mov
fcomps
xor
xor
mov
jno
and
pop
cmp
jns
lds
push
insl
xor
xor
cli
xchg
hlt
test
leave
sub
jno
adc
ja
dec
shl
mov
pop
sub
test
loope
or
jnp
inc
subb
out
push
mov
add
in
stos
aaa
add
inc
cli
xor
movsb
or
add
sub
inc
mov
stos
mov
sahf
inc
dec
mov
or
sbb
call
sub
sbb
sbb
int3
test
pop
test
aad
dec
divb
pop
lret
push
mov
movsl
adc
dec
ja
mov
iret
into
sub
stos
ret
icebp
pop
push
adc
lods
mov
pop
push
js
push
or
pop
cwtl
xchg
icebp
jns
mov
loope
out
adc
out
int
sarb
push
xchg
mull
push
popa
das
lods
mov
jbe
xor
xchg
adc
enter
sbb
add
out
aas
adc
pop
mov
inc
cmp
cmp
stc
aam
pop
aas
sub
ret
xor
push
aaa
or
jl
leave
pop
std
inc
or
xor
stos
pop
sub
test
push
mov
bound
mov
xchg
inc
aaa
icebp
dec
or
pop
xor
cmp
or
cli
jns
popa
in
int
dec
or
ja
test
bound
icebp
ljmp
mov
into
test
pop
jbe
pusha
jnp
mov
pop
test
xor
xchg
stos
pushf
and
dec
stos
int
imull
xor
push
push
data16
mov
push
fnstenv
arpl
out
or
mov
lods
push
adc
pop
sbbl
and
dec
inc
stc
mov
cmp
scas
jecxz
sub
iret
add
pop
or
push
es
lret
dec
daa
repnz
adc
dec
mov
mov
dec
cmpsb
movl
mov
out
sbb
jl
fiadds
sti
pop
fwait
xchg
je
or
iret
xchg
mov
sarb
pop
pop
and
inc
out
xchg
out
jmp
outsb
jmp
mov
sub
inc
sbbl
cmpb
push
jbe
mov
insb
mov
es
sub
jmp
adc
sahf
lds
cmp
divl
inc
push
clc
sbb
cmp
pop
sbb
cmp
lods
std
in
xchg
sub
mov
adc
sub
inc
jae
lods
mov
insl
jns
xchg
stos
jno
ds
fbld
jl
mov
out
push
push
pop
mov
mov
mov
or
cmp
out
es
stos
fsubs
inc
mov
sub
xchg
cmp
std
mov
std
aas
test
lods
movsb
mov
mov
lds
dec
repz
pop
ja
pop
xor
orl
aaa
jne
push
adc
js
fistl
mov
push
fldl
pop
movsb
cmpsl
mov
mov
testl
xor
mov
push
lds
rolb
push
pop
push
add
sub
or
in
out
cmp
inc
imull
jnp
icebp
lret
inc
decl
mov
cmp
mov
rcrb
sbb
jl
aam
aad
lods
sub
push
mov
dec
aad
mov
adc
pop
lahf
cmc
lds
sub
and
arpl
lock
xchg
call
negl
repnz
adcb
ss
in
pop
mov
cmpb
addb
xchg
loope
inc
bound
aad
dec
push
addr16
jl
arpl
mov
adc
mov
lret
inc
xor
pop
inc
rorl
repz
jbe
adc
rcr
mov
aam
push
xchg
mov
pop
push
push
xor
push
push
mov
imulb
aad
inc
add
outsb
xor
lock
xor
stos
loop
hlt
inc
divl
insb
bnd
fwait
xchg
push
or
aad
sub
dec
cmpsb
scas
jne
repz
jmp
jae
and
mov
add
imul
enter
or
in
sub
inc
xor
out
sahf
and
mov
or
xor
sbb
fwait
sub
fucomip
push
scas
and
inc
pop
pop
aam
subb
pop
or
mov
test
jmp
push
fs
lds
cmp
dec
push
or
adc
testb
outsl
push
gs
cmpsl
int
adc
pop
cwtl
adc
jg
inc
mov
pop
cmp
mov
jmp
out
cs
into
push
mov
cmc
ror
mov
or
imul
or
aad
lea
dec
adc
mov
andb
inc
jno
fisubrs
fistpll
lret
adc
aas
rcl
cwtl
mov
mov
imul
lcall
insb
ficompl
inc
xor
push
cwtl
mov
cwtl
adc
js
cmc
dec
adc
pop
jns
push
lret
mov
mov
mov
pop
mov
pop
sbb
mov
push
sahf
mov
mov
inc
out
mov
and
mov
lods
or
inc
sub
ja
inc
cmp
aaa
ss
pop
scas
dec
daa
icebp
mov
icebp
gs
add
mov
dec
orb
add
lahf
icebp
jge
clc
out
adc
adc
jo
into
inc
mov
inc
cwtl
add
xchg
adc
out
cmp
pushf
jb
das
cmpsb
insl
pop
inc
cs
sbb
adc
and
mov
sbb
lahf
inc
sub
inc
or
iret
lret
es
mov
test
stc
rcrb
dec
stc
fsubrl
or
xor
test
addr16
sbb
stos
sbb
sub
and
cltd
sbb
push
cmp
xor
leave
sub
xchg
ret
dec
sub
xor
mov
outsl
inc
decl
mov
popf
mov
jns
std
lret
mov
jb
cld
imul
sub
iret
push
aad
adc
mov
das
es
cli
inc
push
sub
mov
fwait
mov
das
xor
js
nop
js
cmpb
scas
cltd
enter
and
decb
and
cltd
imul
xchg
add
jmp
xchg
adc
jb
imul
or
xchg
sbb
hlt
vpsrlw
xorl
les
fidivrl
ja
xchg
adc
inc
lret
stc
jmp
or
adc
inc
pushf
scas
in
sub
push
aam
pop
imul
xchg
or
std
loopne
mov
inc
mov
pop
les
dec
in
sub
aas
lret
hlt
cmp
dec
sbb
xchg
pusha
repnz
jl
xchg
fdivl
frstor
xchg
push
in
push
and
int
add
lret
lds
inc
int3
mov
cmc
mov
movsl
dec
arpl
test
pushf
fimull
iret
inc
inc
in
adc
xor
pop
cmp
test
roll
push
cmp
dec
pop
mov
mov
rcr
xor
aaa
movsl
daa
aas
cmpsl
and
addr16
jp
int
jnp
aam
cmp
mov
out
mov
jae
stos
scas
loop
jmp
xlat
push
inc
lods
sbbb
adc
int
xor
xchg
push
test
sub
das
std
xchg
jmp
es
repz
jp
arpl
cwtl
bound
ret
addr16
ds
add
loop
inc
or
inc
in
ss
fldenv
jp
xchg
xorb
pop
mov
jne
adc
and
mov
scas
aaa
fdivr
lahf
cmp
std
inc
les
pop
inc
mov
add
mov
fwait
add
pop
add
fimuls
nop
mov
cmc
stos
incl
push
bound
push
push
jno
lock
adc
fimull
inc
inc
scas
test
sbb
sub
cmp
outsl
sti
mov
add
mov
repnz
out
insl
dec
mov
lcall
movsb
and
and
dec
rcl
mov
xchg
cmp
idivb
xchg
int
cmc
mov
cmp
pop
es
mov
inc
scas
cs
sbb
imul
ss
imul
outsl
push
cwtl
fisubs
outsb
mov
or
sub
push
out
aad
cltd
dec
pop
sahf
mov
clc
pop
mov
sub
xor
inc
jae
mov
pop
mov
push
xor
xor
jmp
xchg
lret
inc
and
scas
scas
mov
in
cmp
pop
pop
pushf
call
aad
and
enter
or
stos
xor
repz
lahf
lahf
ret
hlt
roll
imul
loop
pop
test
subl
imul
or
imul
pushf
jp
lret
mov
xchg
push
outsb
shrb
out
ds
fwait
lds
repz
hlt
dec
repz
cmp
daa
xor
rorl
lret
sub
mov
adc
jnp
jne
and
xchg
add
test
pop
push
jae
push
insb
addr16
adc
sub
cwtl
jl
or
pop
pop
bound
js
adc
xchg
jae
lahf
fdivs
loopne
jae
xor
int
icebp
cmp
leave
adc
push
ss
js
jl
pop
xorl
mov
dec
repz
gs
xor
xorb
dec
andl
pop
neg
insb
inc
adc
ja
or
jo
adc
lods
push
cmp
xchg
test
sub
cmp
addb
dec
push
mov
imul
mov
adc
std
xor
icebp
add
or
inc
pop
adc
adc
add
and
lods
mov
adc
jns
movsb
sarl
mov
dec
fisubrs
jne,pn
test
dec
push
mov
dec
mov
clc
mov
inc
and
stc
jno
cmc
push
dec
and
xor
das
dec
sbb
outsl
inc
mov
jmp
add
fstl
push
fiadds
mov
jo
xor
and
adc
pop
movsl
insl
sub
mov
xchg
repz
cli
cmp
je
arpl
pushf
int3
pop
movsb
jecxz
push
push
and
pop
fdivp
mov
int
adc
inc
lock
push
mov
mov
lahf
add
or
imul
pop
fdivl
test
mov
jl
push
insb
addr16
popf
loope
loope
lea
push
movsb
in
inc
push
adc
jle,pt
cmp
mov
mov
js
and
imul
fistps
jmp
pop
add
mov
jno
mov
addr16
or
xor
leave
gs
mov
gs
arpl
xchg
add
aad
adc
dec
mov
out
das
xor
mov
inc
mov
push
lahf
or
adc
movsl
insb
ds
mov
mov
pop
fs
aaa
imul
call
or
es
adcl
jle
ss
ljmp
cmpsb
add
arpl
mov
lea
mov
inc
sub
xor
sub
adc
adc
stc
sub
out
cmc
lods
push
xchg
iret
aas
push
push
andb
fwait
push
sub
cmpsl
xor
mov
ss
jns
push
sub
repnz
dec
mov
cwtl
inc
stc
cli
aad
adc
das
incl
jnp
sub
std
sub
jg
xchg
and
in
fisubl
mov
jmp
mov
int
fmuls
inc
enter
pop
jmp
or
mov
jo
push
out
xchg
or
xchg
stc
mov
pop
movzbl
pop
or
add
pop
adcl
scas
imul
inc
aad
loopne
dec
dec
or
xchg
repz
xor
fidivs
inc
adc
add
add
mov
imul
ret
push
ljmp
popa
inc
and
xor
test
xchg
dec
popa
push
adc
mov
dec
cmc
cmp
sti
jno
popf
inc
xor
xor
loop
test
aaa
shrl
xor
pushl
dec
xlat
and
pop
xchg
fiadds
dec
sbb
clc
pop
lds
adc
and
mov
bound
fbstp
mov
cmc
dec
pop
in
sbb
inc
cltd
and
fdivrs
test
popf
ljmp
xor
pop
xor
outsb
lahf
xchg
mov
dec
je
mov
add
sbb
xor
fimuls
mov
add
enter
xchg
rcrl
gs
sbb
loope
lods
pop
jp
aas
xchg
dec
cmp
and
mov
add
push
jg
in
cmpsb
cmp
jmp
sbb
add
iret
ss
adc
xchg
add
shll
dec
std
adc
sub
sub
push
push
je
jo
das
std
dec
ja
jnp
in
cmp
mov
leave
inc
sub
sbb
das
pusha
pusha
stos
or
xchg
adc
dec
cmc
ret
and
arpl
add
add
aas
adc
rcrl
push
jl
js
ret
scas
pop
test
shrl
jmp
inc
jne
outsl
mov
sub
fnstenv
xchg
add
mov
std
xchg
pop
sub
loop
subb
adc
inc
mov
jmp
jnp
jmp
es
das
fdivl
shll
out
mov
pop
out
ss
cli
shrl
pop
add
jne
dec
sub
jae
inc
pop
mov
clc
mov
gs
add
mov
mov
addb
mov
fwait
and
mov
ljmp
ja
sarb
pop
hlt
push
cmp
xchg
pop
aaa
sti
add
lret
sbb
inc
inc
shrb
inc
push
sub
pop
pop
xor
push
sub
fidivrl
mov
stos
cmp
push
jo
inc
jle
mov
mov
inc
daa
jmp
and
push
ljmp
add
mov
sahf
push
cmpsb
add
aaa
je
xchg
cs
cmp
xor
rcl
adcb
aam
jecxz
loope
mov
fistl
int
mov
add
lock
xchg
lds
dec
call
test
lcall
out
xchg
dec
test
int3
dec
mov
push
dec
or
cmc
mov
and
jge
xchg
adc
adcb
lcall
sti
fildll
jl
adc
mov
mov
dec
shlb
fcmovne
pop
sbb
aam
loopne
mov
int
lods
fwait
lret
popf
enter
inc
sahf
and
pop
or
xor
adc
fwait
push
movsb
push
add
pushf
leave
fwait
test
and
jae
outsl
loop
dec
mov
lods
adc
adc
push
pop
inc
mov
test
out
shrl
push
or
mov
in
rclb
incb
xor
in
sub
ret
add
mov
inc
pusha
push
loope
pop
inc
addb
sub
rolb
push
fwait
icebp
into
ds
mov
push
outsb
mov
dec
xchg
xchg
leave
ss
outsl
mov
jmp
mov
ja
fcmovbe
sahf
push
lret
push
das
mov
gs
int3
jg
lock
jae
fldt
cmpb
ret
sti
es
jmp
jbe
inc
out
inc
add
cmp
adc
or
in
push
sbbl
in
mov
jne
adc
lcall
int3
fwait
or
call
xchg
int3
cmpsb
into
inc
insb
into
mov
nop
aaa
cmp
lods
cmc
jo
mov
mov
scas
stos
stos
jne
pop
mov
ja
pushf
int
mov
pop
stos
stos
push
xor
pop
dec
add
or
shrb
mov
cmp
mov
adc
hlt
adc
fldt
inc
dec
mov
xor
mov
inc
fwait
adc
clc
add
into
lods
popf
inc
jo
pusha
inc
inc
fstl
out
movsb
cmp
pop
inc
icebp
or
mov
push
sarb
fs
jb
sbb
adc
push
mov
or
aas
add
jae
int3
stc
shll
cmpsb
lcall
jo
int3
jcxz
xlat
pop
jle
movsb
mov
lret
sbb
shll
push
dec
or
cmp
lods
inc
sub
mov
sbb
sub
xchg
mov
pop
pop
mov
add
enter
push
loope
aad
test
push
sbb
les
mov
add
adc
jge
sbb
sub
xorb
movsb
xor
adc
fcos
add
cmp
fildll
dec
pop
aas
mov
mov
cs
hlt
pop
push
xchg
das
fists
das
lds
add
arpl
rorl
fiadds
jo
dec
daa
call
ljmp
out
int
in
push
cmp
repz
pop
xchg
add
pop
sbb
ljmp
das
fadds
mov
insb
sbb
in
mov
cmp
or
je
pop
xor
pop
mov
push
add
mov
mov
push
ljmp
push
mov
nop
xchg
in
mov
push
dec
sbb
jl
xor
cmp
push
sbb
xchg
dec
jb
lods
jnp
inc
sbb
push
aas
ja
imul
mov
shll
mov
pop
sub
fiadds
push
jg
xchg
inc
pop
lret
aas
jo
lock
cmp
push
jmp
test
rclb
add
shl
xchg
xchg
add
ficompl
mov
in
sub
push
ret
mov
xlat
repnz
rcrb
int3
xor
inc
mov
fimull
cmp
les
jecxz
add
in
push
imul
cmpl
or
jae
movsb
ret
test
imulb
push
inc
in
jbe
xchg
icebp
jb
js
cmp
jl
jb
jae
test
inc
sbb
fidivrs
push
xor
pop
jne
xor
sub
jbe
mov
push
scas
sbb
jle
jl
movsb
movsl
jl
cmpsl
or
mov
xchg
push
and
xchg
sahf
ret
je
mov
cmpsl
loop
xor
xchg
add
and
icebp
fisubrs
push
dec
fs
cmpl
jnp
movsb
in
dec
mov
or
sub
xchg
xchg
stc
nop
or
sub
pop
mov
xchg
dec
push
shlb
adc
addr16
call
stos
adc
push
mov
mov
in
mov
std
sbb
cmp
adc
ret
ret
inc
xor
scas
push
push
jbe
mov
sbb
inc
and
mov
lods
jae
rclb
scas
sub
xlat
pusha
add
dec
cmc
js
sahf
xor
test
jle
cmpsl
es
into
lock
jle
sbb
mov
xor
inc
sbb
scas
arpl
sbb
cmp
addr16
movsb
sbb
rolb
pop
pop
xor
rcll
dec
push
stos
fistpl
or
test
cmp
ja
sbb
sbb
push
jle
pop
aaa
loopne
lea
je
das
in
and
sbb
mov
jb
call
xchg
jns
int3
pop
lods
xchg
mov
pop
pop
out
aam
bound
repz
aam
xor
ljmp
es
sub
popf
sbb
sbb
mov
pop
and
aam
mov
imul
and
sbb
xchg
aam
pusha
jmp
test
sbb
xchg
add
mov
jge
out
lret
jp
rorb
repnz
ja
sbb
jno
pop
insb
mov
add
push
loop
push
mov
ret
or
imul
dec
mov
scas
sti
add
int3
test
imul
adc
pop
mov
mov
cmp
sub
sbb
cmp
mov
arpl
inc
jo
xorl
sbb
dec
cwtl
test
pop
push
lcall
inc
dec
insl
mov
dec
jae
frstor
stc
ja
and
mov
push
dec
push
bound
pop
xchg
mull
mov
loope
mov
mov
add
pop
xlat
into
lret
mov
dec
mov
push
xchg
mov
sti
and
loop
xor
fdivrl
push
pop
out
test
cmpsl
pop
call
xchg
es
sub
ds
test
fs
pop
lea
inc
loope
mov
sub
outsb
sahf
sbb
xchg
cmp
sbb
faddl
push
test
cmp
push
lock
ds
sbb
inc
mov
stos
mov
stos
mov
mov
add
lret
ja
or
cs
lods
cmp
rorl
imul
hlt
mov
jne
ja
test
jle
pop
sub
mov
pop
in
sub
dec
pop
sub
aad
mov
push
mov
inc
jge
and
sbb
or
lcall
pop
xor
mov
lods
lock
and
add
add
stos
insb
and
mov
push
pop
fwait
call
jb
sbb
sahf
lods
insl
mov
cmc
jb
adc
out
cwtl
mov
mov
inc
pop
mov
jp
fisttps
adc
adc
in
cmp
fcomps
mov
clc
das
dec
jecxz
or
repnz
fisubs
fstps
adc
testb
dec
cltd
sbb
int3
aas
or
pop
iret
hlt
bound
jg
xor
pushf
notb
cmp
mov
jecxz
jp
push
xor
jge
cmpsb
stos
push
scas
mov
fldcw
adcb
lcall
adc
stc
aad
out
xor
call
ja
mov
test
mov
nop
or
ljmp
mov
mov
jp,pn
subl
aad
fistpl
sub
push
jb
xorl
imull
std
jbe
add
cmpsl
rcll
or
jns
shl
mov
les
inc
jne
outsb
push
fsubr
add
dec
jbe
pop
push
dec
lret
js
push
cld
or
outsl
xor
xchg
out
push
fildll
lea
lock
test
bnd
dec
call
fucomi
xor
cmp
sti
aam
rcll
add
xchg
adc
iret
and
pop
pushf
inc
mov
lock
shl
adc
mov
add
sub
cmp
and
mov
fisubrs
int
push
out
hlt
sbb
push
adc
scas
in
stos
outsl
inc
dec
adc
jnp
mov
pushw
pop
or
stos
or
inc
lock
push
dec
iret
mov
dec
movsl
push
movsb
push
dec
cmpsb
inc
mov
dec
dec
inc
out
or
cli
leave
sbb
sbb
ret
dec
sbb
jae
jl
jecxz
cmp
sbb
nop
mov
mov
adc
xchg
xchg
out
shlb
push
push
std
fcompl
mov
stos
xchg
testb
pop
arpl
mov
xchg
lret
sbb
repnz
into
cmp
sahf
mov
pop
xchg
in
cmc
mov
cmpb
adc
testl
xor
xor
movsl
lods
and
lret
lock
push
sub
xor
jno
int3
or
les
repz
cli
fwait
push
jbe
hlt
xorb
pop
jge
xchg
inc
std
lods
sti
or
in
or
leave
sbb
fdivrs
xor
test
nop
inc
jmp
add
out
dec
fsubrl
cmp
mov
popf
dec
or
push
fidivrs
shlb
adc
or
stos
fwait
ja
insl
xor
insb
mov
pop
jp
jl
popf
incl
dec
add
movsl
mov
outsl
xchg
and
jne
add
jno
pushf
data16
xor
cmpsl
popf
mov
and
or
insl
lds
or
add
imul
sub
add
cs
pop
xchg
repz
and
repnz
cld
dec
pusha
cmp
mov
aam
rcl
jecxz
inc
ds
push
xor
lods
mov
fs
bound
call
mov
enter
loop
inc
out
ljmp
imul
je
les
xor
and
pop
push
xchg
ljmp
mov
or
cli
addl
sbb
xchg
xchg
mov
jmp
sbb
lcall
sarb
mov
mov
or
inc
jbe
popf
xchg
add
outsl
outsl
bound
dec
sbb
jmp
fs
cmpsb
movsl
pop
in
shl
add
pop
in
mov
inc
mov
xchg
xorb
mov
pop
or
out
inc
pushf
aad
daa
movsb
leave
and
and
add
inc
adcb
xor
dec
aad
fwait
sub
mov
sbb
xchg
mov
xchg
inc
mov
adc
xor
mov
loope
push
push
je
int
dec
sub
xor
pushf
pop
xor
push
loopne
ds
stc
insl
cs
sbb
xchg
aaa
sbb
sub
sbb
mov
xchg
into
std
mov
lea
mov
lret
pop
leave
mov
out
inc
aas
ds
cmp
xor
insb
lcall
jmp
mov
push
adc
cmp
inc
xchg
cmpsl
and
loop
adc
push
mov
pop
dec
add
xor
outsl
mov
fildl
add
sbb
cmp
faddp
cmc
mov
aad
prefetchw
or
inc
test
lock
popa
scas
and
mov
and
ret
fcomps
dec
cmpsl
nop
jb
sarl
aad
dec
int
ret
add
cmpsb
es
mov
sbb
and
lret
gs
inc
xor
test
sub
mov
test
push
jns
push
dec
into
lret
bound
inc
inc
pop
xorb
testl
adc
and
xchg
cmp
in
das
call
fmull
loope
dec
dec
mov
sub
mov
mov
aam
xorb
jae
loope
and
mov
mov
js
sidtl
cmp
fistpl
mov
fsubr
push
dec
fisubs
cmp
sarb
pusha
mov
movsb
vmptrld
cmpsb
add
leave
je
jle
dec
xchg
dec
lahf
ss
adc
jge
mov
insb
out
push
xchg
jmp
add
mov
cmp
lea
into
mov
cmp
into
fs
add
out
pop
add
sbb
add
xchg
push
fmuls
push
cmp
sbb
pop
repz
jmp
test
cltd
mov
and
es
xor
dec
or
imul
pop
add
push
rcll
mov
cmp
je
sbb
sbb
adc
popa
in
xor
mov
pop
jle
or
outsl
hlt
inc
out
cmp
jle
mov
sbb
leave
and
or
in
adc
jp
div
rcll
mov
add
fisttpl
adc
scas
jmp
loop
cmp
rorb
hlt
sbb
jge
adc
sub
mov
pop
jp
movsl
in
lahf
sub
adc
sbb
aas
repnz
fs
push
add
xor
mov
jecxz
out
repnz
or
fwait
cmpsl
je
shll
mov
and
pop
dec
mov
and
cmp
xor
push
xchg
imul
int
call
jb
xor
sub
pop
fistps
pop
sti
ss
in
inc
push
sbb
pop
mov
aad
jecxz
sahf
mov
mov
xchg
inc
jg
adc
mov
fldl
push
aas
aam
pop
popf
sub
cmc
mov
or
mov
mov
adc
add
or
push
pusha
pop
inc
add
outsb
stos
and
cwtl
in
arpl
mov
aad
nop
cmp
sahf
mov
lea
jp
xchg
mov
dec
nop
mov
loop
icebp
xor
mov
jo
pop
dec
jne
pushf
adc
aam
mov
adc
shlb
dec
xchg
add
mov
push
sub
add
mov
test
add
cli
call
ja
sub
aam
pop
sbb
mov
push
jb
jns
aaa
pop
imul
or
jae
mov
shll
adc
pop
cmp
clc
mov
orb
enter
mov
sbb
jp
popa
xor
lret
sub
loop
jne
aad
pop
inc
addr16
test
xchg
ret
andb
xchg
push
dec
dec
dec
out
add
nop
push
jb
push
movsl
aas
int3
and
sbb
ud1
inc
pop
jp
inc
test
pop
inc
sub
mov
aam
shll
mov
mov
mov
add
push
outsl
mov
sub
mov
scas
fucomi
pop
mov
fs
and
shl
iret
cmp
xchg
mov
mov
xchg
addr16
ds
shrb
stos
push
stos
clc
loope
dec
in
push
ljmp
mov
fists
out
push
imull
ljmp
cmp
mov
xchg
or
out
add
test
inc
cmpsb
push
cli
dec
pop
pop
adc
mov
push
mov
mov
out
faddp
sbb
cld
out
pop
pushf
movsb
pop
mov
mov
lahf
test
mov
mov
stos
ret
fstpl
adc
push
dec
std
sub
xchg
imulb
daa
int
movsb
inc
jb
cld
test
sbb
rcll
add
cwtl
scas
shlb
or
mov
xchg
filds
lds
cmp
lock
test
sub
cmp
insb
xchg
and
cmp
test
mov
stos
xor
movsl
push
push
mov
clc
test
sbb
jne
std
cld
call
call
jl
fiaddl
or
stos
push
sub
mov
mov
jae
add
data16
stc
or
push
dec
push
out
jb
sub
mov
loope
jmp
lcall
mov
and
shll
push
lret
inc
out
xorb
loopne
inc
add
jp
sbb
mov
cltd
xor
cmp
pop
and
aas
xchg
in
incb
sbb
xchg
lahf
cwtl
sahf
sub
xor
xchg
mov
mov
fisubl
fwait
rcrl
jno
sbb
faddl
call
inc
cmp
pushl
jo
shlb
loope
cld
push
mov
fistpll
insl
les
inc
pop
addr16
sub
jb
shl
outsl
gs
jp
call
arpl
repnz
pop
xor
pushf
fnstcw
cmpsb
arpl
loope
repz
insb
xor
ror
cmp
divl
xchg
mov
and
out
xor
and
push
mov
lcall
scas
shlb
sub
xchg
ficoml
jne
add
imul
sub
es
mov
mov
dec
rolb
xchg
mov
cmp
aas
and
mov
pop
cwtl
in
jmp
pop
dec
xchg
popf
insb
loope
xchg
pop
jb
xor
shlb
adc
jecxz
xchg
lock
xor
dec
pop
or
add
cltd
repnz
cmp
mov
ds
push
push
stos
aaa
cmpsl
push
outsb
jl
scas
sahf
movsl
xlat
mov
ljmp
cs
fisubrs
inc
jnp
in
shl
sub
adc
lods
pop
ret
jne
jecxz
mov
in
inc
and
lds
mov
fistpll
das
loop
jl,pn
cltd
mov
pop
xorl
jg
mov
or
push
xor
xchg
jp
mov
mov
insl
xchg
adc
scas
fnstsw
and
fdivs
dec
repz
fists
mov
and
sub
push
in
sahf
scas
jl
cwtl
and
sub
mov
popa
sub
int3
xor
pushf
jne
lret
out
clc
dec
movsl
test
cmp
dec
jae
push
mov
pop
mov
xor
orl
adc
in
xchg
shl
mov
push
mov
add
xlat
pcmpeqw
cwtl
adc
xchg
and
xchg
xor
push
xor
mov
sub
inc
sub
popa
aaa
cltd
jnp
pop
sub
xchg
call
dec
sarb
sahf
movsl
mov
xchg
mov
dec
jecxz
sbbb
dec
test
icebp
and
dec
push
call
data16
pop
call
data16
fisttpl
mov
ja
movsb
mov
in
das
test
adc
test
xchg
xchg
jb
cli
loopne
pop
mov
inc
lret
fsubs
add
xor
cmc
pop
jg
es
scas
mov
adc
cld
dec
popl
dec
arpl
xchg
xchg
lcall
aas
sub
cmp
cmp
mov
xchg
out
sahf
and
sbb
rol
sti
or
sbb
stos
loop
insl
pop
and
jae
inc
fptan
cmpsb
mov
lret
popa
inc
or
ds
test
aad
jge
jle
adc
dec
sbb
into
and
mov
notb
mov
cmp
sbb
out
mov
sti
int
loope
adc
mov
cmp
into
mov
jg
sbb
sub
sbb
mov
addb
vmovaps
xor
ljmp
adc
xor
mov
je
jge
inc
push
lahf
pop
mov
cmpsl
add
cmp
mov
push
into
and
mov
add
lea
and
xchg
aaa
mov
mov
pusha
mov
inc
mov
cwtl
mov
stos
xchg
outsb
push
fucomi
add
xchg
sbb
mov
ljmp
sub
sbb
cld
inc
inc
mov
imul
mov
inc
test
shlb
sti
dec
pop
ja
and
shl
lret
xchg
adc
outsl
and
xchg
xchg
out
mov
jo
arpl
cltd
or
mov
mov
mov
adc
inc
xor
xchg
mov
and
test
xchg
sbb
repnz
jecxz
and
sbb
test
out
jl
nop
jne
cmpsl
sub
dec
jnp
popa
lods
inc
aad
xchg
add
mov
pop
adc
add
jae
cmp
push
hlt
push
mulb
inc
sbb
mov
push
jle
push
xchg
ja
and
sub
ja
push
xchg
cmp
repnz
mulb
or
mov
stos
and
jnp
ds
sub
pop
std
lahf
jb
lods
and
mov
mov
clc
pop
cmp
dec
lret
in
dec
mov
mov
cmpsl
dec
ljmp
adc
insl
insl
lods
mov
xchg
fwait
and
xchg
xchg
dec
dec
jo
popf
lea
mov
xchg
push
pop
mov
rorb
or
mov
sahf
xor
xor
mov
daa
xchg
dec
mov
ljmp
add
and
mov
ljmp
pop
std
cmp
sub
loop
inc
xorb
dec
mov
in
in
shlb
lea
in
or
pop
jno
inc
jo
pusha
subb
and
dec
popf
add
in
cltd
movsl
pop
loop
xchg
mov
dec
loopne
daa
rolb
jle
xor
test
cmpsb
outsb
imull
push
sub
enter
adc
mov
inc
loopne
push
outsl
dec
sub
add
push
out
fnsave
lea
sub
cltd
mov
lods
jp
iret
enter
es
mov
adc
cmp
xor
push
and
sbb
loop
leave
ret
je
filds
cmp
lods
inc
imul
xchg
mov
cmpsb
xchg
imul
and
loop
dec
ja
popa
sub
idivb
jle
add
lds
sub
push
xchg
xor
imul
cmp
adc
loop
outsl
jnp
cltd
jg
sarl
es
xchg
movsl
inc
int3
push
repnz
dec
cmc
push
clc
insb
fadd
rorb
adc
hlt
cs
or
leave
dec
mov
sbbl
inc
aaa
mov
insl
aas
or
mov
sbb
adcb
pop
out
cld
add
mov
sahf
jne
in
and
xchg
cmpsb
mov
pusha
adc
mov
pop
enter
inc
repz
fstpl
lret
in
daa
shr
enter
push
testl
xchg
stos
fs
stc
sarb
aaa
movl
cli
xor
xchg
mov
dec
insb
scas
add
scas
jecxz
int
ret
sub
enter
stos
test
dec
sahf
sar
cmpsl
jnp
xor
mov
inc
jae
pop
out
fldcw
add
shrl
cmp
mov
fs
pop
in
popf
mov
mov
addps
xchg
push
mov
sub
cmp
push
js
repz
out
repz
pop
stos
data16
cmp
dec
dec
jo
adc
mov
std
or
xor
es
lock
cmp
add
mov
pop
jae
xchg
cmp
ja
dec
fisubs
loopne
pop
dec
or
mov
outsl
fs
in
xchg
lret
jns
sub
mov
jae
adc
cmc
out
stos
std
jnp
sbb
shll
shl
cwtl
mov
aas
jg
divl
mov
xor
insl
jmp
popf
and
int
inc
dec
or
sbb
lods
mov
or
or
adc
pop
clc
aas
push
mov
imul
mov
push
cli
les
aaa
push
xchg
mov
or
adc
aaa
xlat
push
js
xchg
jnp
enter
shr
cld
adc
adc
inc
adc
outsl
popf
inc
push
out
push
mov
or
inc
mov
fsubrs
add
mov
mov
dec
test
and
sub
test
fimull
pop
or
dec
xor
jno
dec
nop
lods
out
bts
inc
les
or
mov
sub
push
xor
fs
jp
jp
popa
dec
out
imul
and
je
or
cmp
fisubl
mov
ja
mov
push
cmpsl
fnstenv
sti
jmp
dec
imul
inc
inc
mov
std
mov
add
call
insb
and
leave
mov
mov
ja
mov
enter
xchg
push
fs
dec
dec
lds
adc
nop
xorl
aam
dec
movsl
loope
daa
and
test
cmp
std
jp
inc
fst
dec
mov
jnp
aam
pop
insl
out
enter
lcall
fildl
pop
sbb
test
or
add
cltd
push
adc
je
cs
mov
jl
sbb
out
mov
and
pop
fwait
ret
inc
inc
mov
xor
adc
pop
mov
jmp
push
push
add
mov
insl
jno
test
dec
xor
mov
add
pop
lret
mov
icebp
inc
ss
push
std
push
daa
daa
vpsrld
cmp
xor
lret
sub
inc
or
xchg
je
xchg
lret
sti
jb
insb
popa
adc
lcall
and
sahf
or
adc
add
mov
xchg
lret
cmp
jbe
cmp
stos
je
and
outsl
loopne
addr16
xchg
lea
mov
dec
xor
mov
pushf
jp,pt
cmc
mov
cmp
rcll
jmp
jle
pop
adc
iret
adc
and
and
mov
int3
push
lret
or
cltd
out
add
divl
jne
xor
lds
lahf
jmp
ja
pop
and
jecxz
xchg
scas
jle
ret
push
cmp
mov
pop
fsubs
mov
xchg
xchg
ficoms
jmp
pop
pop
pop
xchg
sbb
xchg
rcrb
testl
jbe
xor
jnp
cmpsl
inc
mov
xchg
out
mov
cmp
xchg
mov
stos
push
mov
je
mov
cmp
enter
fnstsw
in
cmp
rolb
mov
pop
lock
cld
stos
mov
mov
ljmp
cmpb
inc
movups
jne
mov
in
inc
inc
inc
pop
mov
test
cmpsb
cmp
lahf
or
and
add
jmp
int3
dec
or
inc
into
aas
int3
inc
xor
pop
inc
aas
clc
call
xchg
sub
pop
pop
sar
fstpl
push
xor
stc
or
orl
mov
insl
add
jg
outsb
push
cld
mov
adcl
mov
mov
aad
mov
cmp
push
imul
test
std
xchg
insl
lcall
push
out
movsl
push
dec
jecxz
es
xchg
push
sets
pushl
aaa
jp
dec
ret
stos
jge
cld
fidivs
lret
or
sub
mov
mov
fwait
subb
jle
xor
xchg
mov
fnstenv
out
xchg
cltd
mov
cmp
jl
mov
mov
pop
int3
arpl
cmp
lcall
dec
imul
push
cmp
jnp
lock
push
data16
popf
sbb
pop
in
int
xchg
and
or
or
nop
in
pop
cmp
imul
pop
cltd
flds
xchg
mov
sub
lret
loop
adc
dec
mov
dec
dec
out
push
cmpsb
fwait
xchg
mov
daa
inc
sub
pop
pop
add
push
imul
xor
divb
bound
add
jno
push
or
pop
adc
xchg
pop
cmp
pop
cmpsb
adcl
ds
fstl
clc
std
addr16
lea
iret
mov
sbb
gs
dec
jns
sti
jl
xor
xor
or
cmp
cli
ss
mov
mov
xchg
gs
mov
lahf
mov
push
es
loop
mov
mov
pop
mov
insb
ss
pop
pop
and
mov
imul
cmp
inc
xor
push
add
sub
push
pusha
mov
sub
popa
lock
movb
inc
addl
inc
sbb
pop
mov
cmc
pop
movsl
nop
add
loop
ds
jne
leave
stos
mov
cmp
dec
ret
ror
xchg
mov
cmp
je
add
js
test
xchg
sbb
mov
cmp
ret
inc
neg
xor
inc
nop
sbb
dec
notb
popf
jae
push
mov
pop
movsl
int
and
outsb
sub
mov
ret
or
out
push
or
mov
ficoml
mov
scas
jp
cmp
scas
xor
mov
icebp
xchg
insl
insb
cmpsl
imul
cmpsl
imul
cwtl
shrl
daa
in
xchg
imul
mov
aam
xor
outsb
shrb
fimuls
loope
or
xor
jne
aam
lods
mov
cmp
or
test
inc
daa
imul
in
fwait
dec
mov
push
lds
roll
sbb
loopne
inc
pop
push
out
push
in
adc
jmp
es
outsl
popa
fimull
adc
icebp
es
and
xchg
out
sarb
nop
sbb
jl
jb
adc
pop
adc
out
add
test
hlt
xchg
cmp
cmp
pop
sub
push
repz
xchg
dec
icebp
mov
adc
push
push
dec
pop
fnstsw
stos
clc
inc
jbe
sti
mov
xor
mov
mov
add
push
pop
loop
push
sbb
lock
fildll
xchg
sbb
sub
add
xlat
je
adcb
add
xchg
add
enter
jnp
xor
shll
sub
jmp
in
shlb
adc
xchg
out
fiadds
sub
sti
pop
imul
xchg
popa
inc
cmovge
fwait
mov
jo
jne
pop
push
scas
sbb
orl
dec
push
inc
or
test
xchg
std
inc
rorl
ss
fidivrs
jne
mov
push
mov
pop
xor
mov
dec
and
jo
dec
in
dec
cs
cltd
out
pop
dec
and
adc
int3
add
fnstsw
movsl
inc
shrl
das
mov
mov
push
popa
es
lret
ds
test
jl
jmp
movsb
icebp
inc
push
std
gs
arpl
or
lock
jb
mov
lods
mov
adc
test
cld
xor
popa
mov
sub
jns
dec
jnp
movsl
insl
adc
mov
sahf
xchg
shr
shr
ss
push
js
loope
sahf
repnz
add
jmp
insl
push
scas
mov
movsl
in
sub
scas
mov
lea
jae
xchg
int3
mov
sbb
daa
cmp
xchg
out
add
test
fiaddl
jno
ss
loopne
arpl
jb
cmpsl
sti
sti
faddl
aas
and
adc
inc
out
mov
xor
mov
fstp
js
mov
cltd
or
dec
push
and
les
xchg
pop
lret
scas
cmc
and
push
inc
add
repnz
sbb
mov
xorb
sub
adc
add
mov
mov
and
and
insb
xchg
out
and
loop
pop
pop
in
mov
adc
in
in
jns
mov
sbb
cwtl
in
mull
cmp
mov
ja
jg
mov
ret
nop
add
pop
or
or
andl
lods
or
lahf
add
pop
fs
mov
xor
cld
addr16
sbb
mov
dec
sti
mov
xchg
mov
insb
nop
pushf
cs
gs
xor
addr16
out
mov
mov
leave
push
loop
adc
jecxz
jno
sahf
add
shlb
leave
add
idivb
push
mov
or
or
clc
adc
movsb
xchg
into
lea
adc
push
jl
xchg
jl
test
lahf
push
in
pop
xchg
inc
and
mov
int
sahf
and
fildll
cld
pop
lods
inc
push
test
or
mov
adcl
flds
or
push
les
mov
push
stos
inc
push
dec
int
aad
push
pop
sar
shlb
dec
repz
jb
sub
pop
push
nop
js,pt
xchg
iret
sbb
in
pop
pop
scas
loope
jg
stos
xor
subl
xor
mov
xor
mov
bnd
outsb
cli
cmp
mov
hlt
pop
ror
out
shld
les
jecxz
mov
insl
js
xchg
test
lds
pusha
pushf
adc
pop
and
mov
in
imul
pop
sub
daa
scas
out
dec
xchg
aaa
lahf
xlat
jno
call
mov
pop
clc
cmc
cmp
dec
sti
mov
mov
and
nop
or
or
add
addr16
cmpsl
mov
and
and
arpl
rorl
mov
push
fstl
dec
repnz
cltd
es
fmull
testb
add
pushf
iret
inc
push
clc
in
cltd
lret
jecxz
test
sti
mov
and
std
add
add
and
dec
jmp
js
in
add
loop
js
jge
pop
out
cld
movsb
push
or
gs
inc
lahf
jb
sarb
sbb
shrb
andb
dec
lcall
aam
inc
les
dec
mov
cmp
lea
sbb
push
or
jns
dec
push
aaa
cli
outsb
fldl
mov
xchg
adc
sub
xor
ja
cmp
lret
push
das
sti
mov
lods
lock
dec
enter
xor
xchg
lods
mov
jge
lods
data16
xor
mov
xchg
fidivs
dec
jne
sub
in
mov
ret
mov
jg
adc
movsl
jo
ret
sbb
popa
rorb
roll
mov
idivl
fildl
fidivrs
inc
sahf
insl
repz
dec
xor
xchg
leave
pop
add
outsb
fidivs
lret
rcll
out
hlt
inc
mov
stc
sarl
inc
and
in
lahf
out
xor
xor
jns
mov
ds
push
mov
cli
push
mov
pop
sbb
mov
mov
pop
push
xchg
pop
dec
push
je
mov
xchg
mov
hlt
add
sahf
data16
fsubrl
in
push
xchg
js
pop
mov
jo
jnp
mov
adc
sub
int
xchg
add
in
pop
pop
repz
dec
mov
mov
jge
mov
out
adc
dec
sub
sti
pushf
clc
mov
adc
cmpsl
mov
jg
sbb
mov
mov
mov
pop
roll
cwtl
inc
icebp
dec
shrd
andb
jno
sbb
pop
push
sub
daa
add
jae
jl
add
addr16
jno
sub
dec
adc
dec
es
cmpsb
pushf
xchg
lret
ret
sarb
push
out
jbe
and
dec
enter
xchg
and
push
xor
sub
xchg
scas
adc
sbb
xchg
stc
rclb
popa
loopne
pop
jl
jae
adc
pop
xchg
push
jecxz
inc
xchg
fadds
test
push
mov
mov
mov
push
aas
popa
push
loop
pop
shll
xchg
push
aas
in
push
cmp
mov
push
sub
xchg
push
adc
jle
mov
pop
outsl
ret
aam
out
sbb
xchg
mov
mov
cwtl
daa
pop
add
mov
inc
ret
sbb
js
popa
mov
mov
jb
push
out
es
sub
loop
lret
fimull
cmp
fucompp
hlt
sti
dec
stc
and
in
cmp
sarb
inc
popf
add
ret
push
adc
test
sub
sub
mov
cmc
jbe
mov
insb
out
inc
jle
mov
nop
frstor
inc
push
dec
and
sub
xor
mov
out
mov
fistpl
adc
fbstp
push
sub
cltd
popf
mov
jae
fbstp
imul
xor
into
aad
pop
mov
mov
inc
out
inc
daa
fs
iret
iret
sub
or
push
ss
rclb
sti
popa
test
cmpsl
mov
cld
inc
pop
push
sti
imul
shl
push
movsl
mov
mov
mov
sbb
jmp
repz
mov
push
jbe
je
adc
jp
pop
hlt
sub
ja
adc
into
adc
xor
xchg
scas
stos
jbe
shlb
jns
dec
fstps
sbb
inc
push
data16
mov
bound
push
sar
movsb
lret
push
xchg
sahf
mov
dec
xchg
adc
icebp
cld
int3
xchg
in
repz
cmpsb
fsubrl
fisubs
or
jp
sub
add
lret
or
sbb
xor
outsb
and
mov
pop
aad
enter
mov
enter
addr16
inc
mov
das
push
mov
fstpt
movsl
arpl
inc
or
ret
cmpsl
shlb
gs
and
inc
cmp
sub
and
xchg
inc
cmc
dec
jne
int
call
int3
cltd
cmp
aad
mov
cmc
fdiv
std
movsb
mov
ss
mov
cli
insl
test
in
rcl
shl
pop
mov
rcrb
adc
jne
pop
dec
adcb
test
stc
adc
in
subl
into
sub
xchg
pop
aad
pop
jno
push
pop
loope
imul
sahf
adc
lret
pop
inc
cmp
dec
ja
rorb
pmaxub
dec
or
sbb
and
mov
or
scas
mov
out
push
dec
mov
pushf
in
cmp
and
into
in
ss
sub
leave
pop
inc
orl
cmp
mov
inc
outsb
push
arpl
push
arpl
jp
pop
hlt
jmp
cld
mov
mov
mov
inc
nop
pop
or
jno
inc
dec
shr
rcll
subl
xchg
mov
inc
cmc
jb
pop
dec
jge
add
mov
lret
or
ret
xchg
dec
fwait
inc
xchg
jmp
sbb
cmpsl
fs
pop
cmp
leave
jle
cmpsl
jg
ror
jp
push
push
sahf
pop
test
insl
aad
scas
out
fsubl
sbb
decb
add
lret
sub
js
cmp
sub
xchg
xor
xor
push
bound
dec
shlb
xchg
clc
and
insl
pushw
loope
adc
dec
int3
cwtl
cmp
leave
xor
add
jbe
call
popf
iret
sub
and
in
out
jnp
out
popf
in
dec
lea
or
xor
inc
fidivl
ja
mov
mov
and
dec
cmp
jmp
cltd
scas
adc
mov
pusha
mov
je
ja
push
pop
insl
xor
jno
arpl
cltd
mov
int3
stos
fnstenv
daa
cs
in
xor
fbstp
jne
add
inc
repnz
ljmp
int3
andb
nop
notb
in
xor
movsb
pop
fucomp
and
add
sbb
pop
sbbl
rolb
repnz
test
adc
movsw
xor
mov
mov
mov
push
xchg
add
push
jge
stc
or
mov
jecxz
ret
in
cmp
loopne
dec
xor
mov
pop
test
aam
add
mov
xlat
repz
mov
push
test
xchg
lds
push
push
cltd
lahf
lods
ret
int
mov
ficoml
insl
fdivrs
jmp
pop
es
push
push
cmp
cmp
and
aaa
ljmp
insb
int3
leave
mov
fcoms
divb
inc
pop
call
mov
daa
inc
xchg
hlt
add
pop
fcompl
pop
dec
sahf
jbe
jae
repnz
cmpsl
repz
orb
out
xor
pushf
out
pop
fstpt
and
loope
test
lea
inc
sub
dec
test
mov
push
loop
daa
xchg
pop
insl
sti
std
imul
mov
mov
sub
notl
rorl
or
mov
xchg
mov
pop
divl
lock
or
negb
adc
dec
fnstsw
sub
xchg
xchg
mov
pusha
jnp
xor
mov
aam
and
pop
ret
dec
testl
loope
enter
and
movntq
out
push
cmp
sbbl
fwait
sub
mov
cmpsl
jb
dec
stc
rcll
out
pop
lods
or
xlat
inc
and
mov
test
pop
lahf
and
js
mov
dec
jno
movl
mov
and
or
jle
adc
adc
adc
xchg
inc
test
and
addr16
aaa
lret
cli
adc
mov
test
ss
shl
roll
add
sbb
sub
push
push
and
aas
dec
and
dec
push
nop
mov
lock
cmp
cmpsb
sub
sbb
out
push
mov
lret
dec
pop
icebp
add
cmp
fcom
movl
xchg
xchg
imulb
in
mov
stos
jecxz
dec
fcmovbe
push
sub
xchg
add
inc
stos
pop
jae
push
test
push
out
and
cli
inc
aad
lcall
or
sbb
dec
push
push
push
loop
jae
outsb
ja,pt
mov
or
int3
rolb
cmp
lea
jle
shr
fdivr
call
loopne
fiaddl
data16
dec
jge
daa
cld
dec
xchg
lret
and
imul
test
and
in
mov
lret
dec
cltd
popa
fisubl
mov
mov
dec
inc
sub
mov
push
inc
ret
sub
dec
mov
mov
mov
ljmp
pop
jecxz
outsl
jb
sbb
cmp
icebp
mov
and
test
xchg
out
fadd
clc
adcb
push
sub
mov
repz
xor
cmc
bound
leave
xor
nop
cmp
sub
pop
sbb
jmp
sub
mov
sub
mov
xchg
rol
xchg
push
js
fmulp
cs
adc
outsb
pop
int
testb
mov
shll
sub
xchg
stos
in
mov
add
outsl
repnz
sbb
mov
pop
daa
aas
cwtl
divb
or
movsb
je
mov
mov
in
adc
mov
outsl
stos
xorb
gs
sbb
push
add
scas
sub
mov
stos
jno
xchg
cltd
and
cmp
aaa
mov
sahf
sub
int
jns
gs
loop
mov
cld
or
xor
bnd
stos
jmp
cld
mov
ljmp
out
add
xlat
sub
push
adc
mov
xchg
pop
test
inc
lea
pusha
in
pop
push
mov
movsb
pusha
or
mov
or
je
mov
testb
test
mov
cmpsb
and
cmp
jae
sarl
cwtl
or
or
xchg
dec
jb
add
out
mov
push
in
call
add
mov
leave
or
test
and
xor
iret
cmpsl
mov
adc
push
cmp
mov
xor
sub
sbb
pushf
lcall
pop
fiaddl
ja
cld
je
mov
mov
mull
pop
and
inc
lret
mov
pushf
test
rolb
xchg
push
mov
sbb
sbbb
mov
std
push
sti
addr16
shrl
jbe
ja
test
mov
inc
mov
imul
js
lock
push
pop
and
test
lahf
std
outsl
jecxz
mov
or
stos
inc
nop
xchg
xchg
cli
shlb
push
dec
out
sub
aaa
cmp
cld
mov
jae
in
inc
and
fstpl
bnd
jo
sub
jbe
jge
dec
sub
cmpsl
daa
repz
or
mov
leave
or
pop
push
pop
cmc
jns
mov
push
inc
cmp
add
pop
pop
adc
fs
sub
mov
outsb
inc
clc
rcll
xlat
mov
add
sbb
sub
cs
outsb
lahf
xchg
xor
dec
or
js
inc
fdivr
filds
hlt
mov
or
mov
or
adc
fs
xlat
adc
test
jb
stos
inc
loop
data16
add
inc
imul
cmpsb
pop
mov
jp
sbb
pop
fisubrs
xchg
ret
push
xchg
in
xor
push
in
mov
xchg
mov
push
xor
jmp
push
int3
mov
imul
out
imul
push
pop
test
fisttpl
dec
shl
add
repnz
rcrl
shlb
outsl
cwtl
push
dec
adcb
test
push
or
idivl
push
cmc
or
icebp
das
aaa
jle
pop
xchg
shll
ja
adc
sub
xchg
ds
fwait
aas
push
stos
sub
mov
out
jo
repz
mov
mov
nop
test
pop
xchg
inc
and
dec
add
mov
andb
in
dec
adc
cmp
fwait
jae
push
out
es
xlat
cmpsl
jge
and
sub
outsb
fs
ficompl
aaa
xor
lods
test
xchg
sub
stos
xlat
xchg
sti
pop
jns
shll
jne
dec
push
push
xor
insl
sub
rclb
cltd
mov
jmp
dec
js
negl
lea
insl
out
in
leave
insb
or
xor
test
and
xchg
sahf
sbbb
inc
call
cmp
repnz
cmpsb
test
and
add
mov
clc
xor
int3
cmp
mov
inc
or
in
cmp
and
mov
fcomps
lahf
sub
shrb
mov
jecxz
sub
xchg
lea
in
cwtl
mov
xchg
mov
or
mov
adc
sbb
ret
lods
loop
dec
push
cmp
jp
mov
push
test
int3
add
nop
jo
push
jb
sub
add
fcomp
jo
stos
sbb
ds
icebp
mov
sub
fdivs
fcomps
jae
lea
out
jle
test
arpl
mov
mov
ds
or
fnsave
mov
loop
push
stos
das
xor
cmp
test
add
call
repnz
inc
mov
and
fisubrl
push
mov
pop
sbb
sub
repz
xor
sub
or
mov
pop
jo
lcall
and
das
cmc
psubw
mov
rol
or
adc
push
xchg
outsl
sarb
arpl
iret
cmp
xchg
add
imul
push
decb
mov
xor
sub
aas
out
cld
sub
lea
push
pop
insb
sub
mov
xlat
fadd
div
sbb
inc
loope
push
lods
dec
in
mov
aaa
sbb
int
test
dec
pop
nop
xchg
mov
hlt
cltd
mov
cli
adc
dec
push
jl
xor
and
icebp
or
nop
pop
push
jp
int
hlt
mov
and
sbbl
in
add
inc
mov
subl
jb
lods
push
mov
gs
ds
xchg
push
jl
pop
and
xchg
add
cmpl
lret
sbbl
jp
scas
cli
mov
inc
das
call
pop
add
mov
pop
into
add
es
mov
xor
fildll
inc
push
loopne
sbb
js
inc
fidivrs
ss
push
repz
mov
insl
pop
lret
pop
fisubrl
fsubs
jae
dec
aad
enter
sub
sbb
adc
mov
pop
pop
imul
or
mov
outsb
xchg
mov
lods
cli
sub
push
daa
pop
stc
cmp
daa
mov
or
adc
rorb
jecxz
mov
sub
mov
insb
enter
lea
sub
add
xchg
xchg
dec
repnz
outsb
or
mov
sarb
daa
dec
jmp
push
and
cmp
out
xor
or
push
mov
push
adc
mov
sar
dec
jno
lock
nop
adc
icebp
jg
stos
in
and
test
xor
lret
into
mov
jne
jecxz,pt
popf
shlb
pop
mov
jne
pop
arpl
push
test
cmp
aaa
cmpsb
stc
jl
adc
scas
ja
jb
xchg
or
fstl
cmc
pop
loopne
in
flds
test
int3
push
lea
jmp
int3
outsb
mov
and
xchg
test
mov
roll
std
inc
or
pop
cmpsb
int
in
mov
stos
mov
ja
fsub
les
gs
fisttpll
and
xchg
inc
fimuls
test
pusha
in
inc
jle
sub
inc
xchg
mov
ficoml
push
push
jle
xchg
sbb
lds
and
outsl
fmuls
sahf
ljmp
jmp
xchg
bound
jmp
sbb
or
mov
cmp
inc
cld
add
negl
jg
fucomi
daa
bound
lret
mov
mov
or
mov
or
shlb
sub
stos
lods
cmp
les
xchg
inc
sti
enter
js
xor
jno
mov
dec
cmc
and
push
mov
lret
orl
sub
je
dec
aaa
adc
out
iret
mov
or
inc
mov
shll
xchg
addr16
ret
pop
push
and
dec
imulb
leave
pop
loopne
ret
or
cmp
and
aas
pop
add
mov
xchg
adc
ss
into
pop
pop
mov
in
call
cmp
xlat
js
push
daa
adc
pop
into
jae
lret
pop
ljmp
mov
add
aaa
ret
cmc
inc
idivb
enter
mov
pusha
cmp
andl
mov
sbb
out
in
dec
jg
mov
pop
js
push
lods
fildl
xorl
popa
lods
pop
or
jl
dec
jg
sbb
inc
add
stos
dec
dec
imul
mov
pushf
ljmp
jl
sbb
cmp
jmp
push
mov
jb
sub
adc
rolb
sbb
mov
mov
fwait
adc
lock
movsb
inc
xor
push
mov
stc
xor
das
sub
cli
jno
mov
repz
popa
scas
adc
sbb
movsl
sbb
lods
sub
je
pop
add
sbb
mov
mov
push
sbb
nop
sub
push
aam
xchg
pop
mov
jno
jp
xor
push
icebp
jge
mov
cmpsb
repnz
popf
add
mov
mov
sbb
lret
cld
mov
push
jp
cmp
push
cltd
cld
pop
andb
inc
cs
xor
and
and
inc
stos
sbb
ret
sarl
imul
mov
mull
jge
repnz
inc
inc
lret
xchg
push
popl
and
imul
inc
test
mov
jnp
sbb
dec
shrb
jle
jmp
mov
xchg
inc
adc
shr
cmpsl
cmp
pop
pop
in
loopne
sbb
or
movsb
mov
pop
jg
in
fiadds
in
fnstenv
lret
xlat
mov
adc
stos
das
out
cs
push
and
sub
stos
or
push
add
pop
mov
push
test
push
lods
gs
add
inc
sbb
push
dec
mov
or
pushf
xchg
sbb
adcb
fnstsw
push
fistpl
sub
jle
aas
pop
mov
incb
push
lods
xor
subb
sti
inc
adc
cltd
lods
jecxz
mov
dec
lds
mov
sub
mov
into
add
push
mov
inc
adc
mov
sub
aas
fdivs
lahf
mov
cmc
arpl
lods
ret
lahf
mov
cmpsl
stc
in
ret
jb
js
jne
sti
mov
fistl
mov
sub
mov
cmp
push
sub
out
xchg
mov
es
inc
inc
pushaw
xchg
or
cwtl
lds
addl
xchg
iret
stc
jnp
push
xor
mov
aas
lea
sub
imul
push
jp
or
imul
xchg
lods
dec
xchg
jl
or
cwtl
mul
mov
xor
cmpsl
or
mov
rcl
ficompl
dec
or
adc
int3
add
test
jmp
mov
imul
cmp
fdivrs
ja
jge
push
adc
or
call
pop
pushl
fs
mov
mov
push
je
mov
mov
ret
adc
and
mov
adc
pop
bound
mov
aam
jo
cwtl
cmc
sti
icebp
fnstenv
push
mov
adc
les
cli
xor
insl
sahf
loopne
sbb
nop
mov
out
sub
gs
nop
jle
sub
xchg
jl
roll
sbb
add
icebp
rorb
ljmp
jge
xchg
or
jnp
xor
pop
test
xorl
repz
movsb
fdivr
push
mov
std
inc
lods
push
pusha
push
jne
ror
call
mov
in
lods
pcmpeqd
mov
faddl
mov
xchg
aad
sarl
pushf
popf
cmp
cmpsb
lea
push
cmc
cmp
mov
aad
pop
sub
adc
jmp
pop
popa
jmp
xchg
mov
outsb
pop
pop
or
pop
out
cmc
insl
mov
inc
in
inc
jno
stc
mov
rcll
dec
leave
mov
cmp
outsl
and
push
jmp
xlat
mov
call
add
push
cli
cmp
addr16
mov
insb
and
inc
sub
imul
fistpl
sub
jecxz
stos
sbb
or
mov
push
sbb
divb
push
pusha
xlat
int3
subl
and
lret
sahf
pushf
out
sbb
outsl
arpl
leave
xchg
int
mov
xchg
fdivr
popa
repz
pop
loop
fisubrl
mov
xorl
jmp
cmp
into
inc
ljmp
pop
into
std
ret
fisttpl
ljmp
pop
test
or
sub
cmp
dec
int
lret
data16
dec
or
and
repnz
sub
loope
xchg
mov
mov
andl
jl,pn
pop
jo
sub
adc
and
je
movsb
repz
jnp
mov
clc
cmp
out
shll
and
cmp
incb
xchg
popf
test
cld
sub
cmp
lods
test
out
fisubl
xchg
dec
pop
push
sbb
mov
lahf
sub
in
dec
stos
dec
jg
cs
push
sub
movsb
dec
sub
xlat
dec
rcrb
or
popf
out
int3
or
fsubrs
xor
outsb
sti
inc
clc
adc
out
dec
push
fistps
jb
icebp
sub
aad
dec
int
and
out
inc
adcl
pop
clc
stos
nop
mov
push
sbb
test
jnp
icebp
jl
mov
adc
ds
gs
insl
ror
and
jae
ror
add
fwait
cmp
pop
nop
and
mov
mov
movsl
idivl
imul
sbb
insb
fs
sbb
mov
and
cmpsb
xchg
cmpsb
ret
fadd
or
aam
andl
push
jle
inc
int3
pextrw
mov
jo
cli
mov
jge
add
insl
cli
iret
adc
xor
mov
mov
mov
mov
popa
sahf
push
pop
adc
int
cmpsl
std
cmp
jmp
jle
pop
xchg
loope
xlat
dec
or
mov
mov
mov
fldt
cmp
adc
or
imul
sbbb
test
dec
pop
pop
in
test
pushf
lahf
add
lret
mov
mov
aaa
call
leave
dec
sbb
mov
sub
jmp
cwtl
adc
xor
in
fimuls
imull
andl
adc
push
xchg
shrl
outsb
loop
pop
mov
mov
stos
adc
sub
xchg
fnstsw
cwtl
into
mov
das
add
imul
rcll
pop
or
or
frstor
aam
repz
stc
popf
in
in
push
notl
lods
jnp
jo
mov
push
movsb
cld
test
push
and
cmpsl
inc
xchg
xchg
xchg
adc
lret
out
imul
decl
cmp
push
push
sub
xor
jl
clc
sub
ljmp
out
sbb
and
daa
arpl
aaa
das
push
inc
cwtl
fsts
mov
lds
mov
adc
or
nop
ffree
imul
jnp
shrb
cmp
push
inc
insl
adc
add
add
cmp
jge
xchg
das
test
pop
arpl
aad
enter
cmp
out
cmp
stc
sbb
xchg
les
out
pushf
add
fmuls
push
push
subb
notb
ror
mov
xor
cld
and
in
outsb
cmpsl
movb
pop
cmc
lret
lock
aaa
or
inc
xor
std
test
xchg
cmpsb
fwait
mov
jb
mov
inc
mov
aaa
jno
jle
xor
cmpsl
and
lahf
push
hlt
mov
adc
ret
ret
mov
dec
mov
int
sahf
push
sbb
sahf
mov
pop
leave
mov
mov
and
mov
aaa
add
inc
in
jb
ret
cmp
jb
push
scas
imul
cmp
jno
mov
insb
shrb
jp
push
subl
in
rcr
dec
insb
sbb
in
jbe
daa
das
lcall
call
repnz
es
imul
lret
decl
lahf
movsl
outsb
pop
sahf
dec
xchg
enter
in
pop
out
xchg
mov
mov
fnsave
xlat
testl
pop
or
lcall
int
jo
std
or
andl
sti
cs
test
jge
aad
cwtl
or
push
sti
mov
movl
addl
inc
lret
dec
pop
mov
xchg
mov
jne
push
add
push
mov
cmpsb
test
je
fimull
and
test
je
mov
insb
xchg
movsb
jb
std
mov
aad
into
cmp
push
dec
jb
jns
push
mov
mov
push
pop
cli
imul
cs
bound
sti
lods
xchg
cmp
test
int3
mov
cli
popf
arpl
shll
and
mov
aad
jmp
or
es
jno
or
and
mov
adc
pop
fildl
xorb
in
cs
mov
jo
push
fstpt
and
lds
mov
insb
mov
rcl
neg
dec
or
xchg
add
jns
push
jnp
iret
mov
pop
push
add
jge
insl
pop
shlw
dec
leave
push
mov
sub
test
ret
lods
repnz
pop
cmp
sub
lds
xor
cmp
add
shrb
lret
push
sti
add
imul
and
sahf
adcb
sahf
mov
sti
jae
cli
into
jbe
xchg
int
das
add
mov
das
clc
xlat
jnp
ret
nop
daa
subb
aas
fisubrl
std
ds
sub
jnp
xor
lahf
outsb
mov
pusha
xorps
fisttps
dec
add
mov
jle
fs
xor
lods
sub
repnz
dec
xchg
adc
pusha
movsb
dec
xchg
iret
adcl
out
mov
push
or
push
inc
stos
adc
insb
fisttpll
push
adc
cld
ljmp
cmp
out
ljmp
scas
out
fisttps
add
xchg
and
xor
ljmp
je
adc
xchg
iret
mov
std
aam
sub
mov
mov
xchg
nop
repnz
mov
xchg
mov
lahf
lcall
push
adc
es
xor
ret
inc
jg
inc
out
push
sub
mov
out
mov
rorb
cmc
leave
ja
push
mov
jg
outsb
fistpl
les
in
hlt
push
sahf
or
xchg
xchg
fdivl
jg
jno
imull
sbb
mov
daa
mov
mov
mov
cs
mov
lahf
movsb
mov
lds
xchg
xlat
sub
xchg
and
sbb
movsb
mov
mov
lret
pop
xchg
mov
push
xchg
sub
lahf
enter
lahf
fimull
mov
ret
in
add
clc
mov
push
test
lret
pop
mov
addr16
fldt
cmpsl
mov
aas
sbb
paddw
imul
jb
sub
xor
sub
cmp
dec
xchg
decl
repnz
ss
mov
subl
push
jbe
mov
cmp
add
imul
push
cld
stos
aas
dec
xor
cwtl
jne
mov
mov
inc
push
das
std
pop
call
cmc
add
call
inc
lret
fidivrs
sahf
inc
repz
mov
in
mov
dec
pushf
push
dec
lret
dec
rcr
faddl
push
push
leave
cli
call
aad
popa
and
daa
cmpsb
adcb
sub
adc
or
add
cmp
and
push
scas
aas
sbb
or
int
cld
fsubp
fldt
cmpsb
int3
jbe
aas
sub
mov
lea
xchg
sbbb
and
stc
addb
jne
inc
movsb
fidivrs
rorl
pop
leave
fsubs
ja
enter
cmpsl
sub
inc
xchg
xchg
dec
sub
cmp
push
ret
mov
xchg
or
mov
sbbl
jbe
dec
call
stc
mov
mov
lahf
mov
mov
pop
fwait
orb
incl
int
in
adc
stos
shll
sbb
mov
in
pop
fiaddl
mov
push
cmc
jecxz
rolb
pop
inc
mov
mov
int
sub
test
pop
ds
add
xor
sbb
push
push
loope
xchg
cltd
dec
jno
lret
les
mov
and
sahf
lea
pop
cmc
out
mov
jae
mov
outsb
loope
and
inc
cmp
sbb
xor
movsl
fistl
push
sbb
fsubrl
test
fld
aas
adc
ja
cmpsl
push
xor
fwait
clts
push
rcrl
test
gs
jmp
call
loope
jmp
les
fs
pop
roll
idivl
mov
or
push
cmp
add
pop
mov
add
into
je
xor
roll
sub
ja
mov
push
and
in
inc
xchg
sbb
cwtl
icebp
js
lds
adc
dec
xchg
mov
mov
pushf
rcrl
clc
gs
sub
fmuls
orl
xor
inc
mov
pop
sbb
fimull
push
sbb
rorb
mov
bswap
mov
lock
cmp
test
add
mov
jo
ljmp
fdivs
cwtl
cli
loope
dec
dec
mov
lcall
jb
out
neg
pop
fcmovnu
mov
inc
bound
jp
adc
cli
test
into
push
sbb
in
inc
mov
loope
filds
popf
stos
lds
mov
inc
mov
push
stc
pop
mov
jbe
pop
jmp
dec
js
xchg
cmp
mov
cwtl
push
adc
and
sbb
push
test
push
mov
shr
cmp
push
mov
imul
insl
and
lret
shr
incb
test
ja
cld
cmp
push
xor
jbe
js
andb
mov
aam
imul
sarb
and
fprem1
lods
mov
and
hlt
xchg
and
pop
andb
lods
inc
cmpsl
nop
insb
mov
push
sbb
int3
jne
adc
mov
scas
adc
repnz
adc
mov
loop
je
addr16
push
or
setl
sub
adc
xchg
cli
jg
imul
call
jae
aas
fcoml
jg
mov
fldenv
nop
aas
cmc
mov
push
or
mov
negb
filds
jae
sub
xchg
pop
lret
aas
pop
inc
lret
bound
popa
sbb
mov
lock
cmp
lahf
int3
cmpsl
sbb
fcmovnbe
or
mov
jbe
nop
xchg
xchg
and
testb
cld
mov
xor
cmp
pusha
push
mov
in
mov
inc
lds
push
in
aaa
idivl
nop
rolb
xor
cli
push
mov
bound
push
lods
loope
add
mov
xor
fnsave
cmp
xchg
ja
lret
dec
ss
cmc
push
rorb
sub
and
ss
js
dec
sub
popa
aad
pop
pop
call
lods
lcall
movsb
fwait
mov
inc
sub
das
fcomps
add
flds
mov
mov
and
repz
mov
sbb
test
fcomp
jge
jbe
cmp
shlb
lea
push
xchg
xchg
shrb
fwait
mov
add
xor
lret
shr
out
leave
scas
lahf
xchg
int3
push
fwait
cmp
leave
inc
jp
mov
sbb
jecxz
jecxz
mov
aaa
pop
ret
sub
cmp
mov
cmp
jno
mov
inc
jp
in
mov
lahf
ljmp
inc
mov
fidivrl
xchg
add
out
sti
jnp
lret
aaa
inc
cwtl
and
mov
inc
adc
insl
dec
insl
clc
push
pop
test
fsubs
push
inc
pop
mov
das
push
popa
add
fmul
inc
sub
insb
aaa
fs
negb
xchg
loopne
xchg
out
push
mov
xchg
arpl
ret
arpl
jo
aaa
mov
sub
push
in
dec
addb
je
stos
xchg
ss
addr16
xchg
aaa
pop
js
outsl
movsl
ss
push
in
bnd
and
outsb
xor
push
and
ja
fistl
sub
push
mov
inc
into
xchg
push
mov
adc
fistl
lret
int3
fistpll
sub
movsb
dec
arpl
pushf
aas
aaa
dec
test
aam
dec
xlat
xor
or
ret
sub
sub
dec
push
push
aam
sub
cmpsl
pop
stos
sbb
mov
sub
lcall
pop
lret
cmpsl
sub
popf
cmp
ja
mov
ficompl
repnz
imul
sahf
in
pop
lock
in
jmp
sbb
push
cld
and
lcall
push
in
mov
out
cmp
xor
mov
popa
test
in
jnp
dec
cmpsb
and
xchg
test
push
fstpl
jmp
jne
lret
lea
mov
push
add
jg
insl
and
ljmp
fdivp
movsl
xor
sub
mov
ret
lods
add
add
out
arpl
cs
cmpsb
mov
xor
or
mov
shll
fdivrl
les
aad
adc
jno
divl
cmp
adc
xchg
stc
addr16
mov
xor
fsubl
mov
jae
jl
mov
inc
out
stos
pop
fcmovnbe
cmovbe
bound
mov
in
inc
sarl
gs
or
push
add
cmpsb
push
nop
push
sbb
xlat
adc
jae
mov
xor
sbb
jge
ja
rclb
dec
adc
adc
cld
addr16
cmp
or
ret
jle
ljmp
mov
push
pop
inc
int3
aad
ja
pop
fbld
adc
jmp
dec
out
and
jb
imul
add
jmp
icebp
in
fnstenv
sub
aas
cmc
push
or
outsl
pop
addb
out
in
dec
rorl
negl
mov
mov
sub
cmp
cltd
jb
mov
movsl
nop
mov
mov
push
cmp
push
push
jbe
popf
mov
adc
cli
clc
roll
sbb
add
lock
dec
test
xchg
clc
arpl
repnz
out
push
mov
out
xchg
out
in
push
lret
xchg
xchg
lret
ret
add
mov
pushf
and
jb
mov
sub
mov
fstp
xor
dec
xor
sub
cltd
mov
dec
or
pop
cmc
mov
inc
xchg
push
lods
repz
out
leave
pusha
orb
mov
into
pop
std
jno
and
int3
bound
lret
pop
pop
xor
mov
mov
enter
and
test
mov
out
adc
lock
mov
pop
out
shll
lea
das
add
jecxz
xchg
mov
or
inc
push
push
sub
in
mov
jne
aas
push
jmp
sbb
mov
push
push
sbb
jg
mov
andb
xor
cld
sub
cmpb
mov
or
cwtl
add
mov
sbb
jmp
add
lret
adc
push
add
push
mov
insl
fstps
inc
xchg
enter
out
dec
rcrl
add
xchg
inc
mov
pop
adc
inc
in
std
cld
test
and
inc
cmpsl
mov
and
push
add
sti
or
loopne
cmp
inc
daa
in
sbb
lock
subb
decb
iret
xchg
xchg
fs
jecxz
xchg
out
leave
sarl
jbe
mov
or
arpl
sub
mov
mov
movsb
in
nop
ljmp
and
xchg
or
add
ret
xchg
fimuls
sbb
clc
popf
jbe
lds
mov
sahf
repz
imul
dec
push
add
lret
mov
ljmp
data16
cmpsb
dec
add
jp
sub
sub
sub
movsl
sub
rcr
mov
cmp
loope
stc
jg
mov
push
adc
sahf
cmp
dec
aaa
loope
xchg
lods
in
push
call
jge
push
jp
hlt
fs
lods
mov
push
je
lcall
xlat
js
jg
mov
fldt
ss
sbb
stc
int3
or
pop
out
mov
imull
iret
mov
adc
test
jnp
push
lcall
push
das
cmc
mov
add
dec
xor
in
xchg
adc
addb
add
mov
in
mov
xorb
jo
xlat
mov
decl
xchg
lahf
cld
jg
dec
inc
test
lods
scas
lahf
jmp
jne
mov
xor
xor
maxps
shlb
push
aas
pop
rorb
es
orb
inc
adc
pop
ret
inc
push
mov
pop
mov
mov
stos
sbb
sti
sahf
aas
sbb
aas
push
hlt
inc
lcall
or
pop
mov
xchg
mov
gs
push
xchg
pop
cmp
mov
add
pop
cmpsb
mov
add
xchg
mov
out
xchg
sub
in
add
mov
add
push
test
lret
xor
dec
loope
in
int3
inc
clc
dec
movsl
nop
jp
ret
pop
add
sbb
cmpl
idivb
nop
cmp
pop
cmp
sub
add
in
mov
and
scas
loope
adc
or
cwtl
mov
je
mov
aam
sub
fcompl
mov
or
gs
mov
jp
jmp
mov
xor
adc
mov
cmp
mov
sbb
mov
outsb
mov
mov
jno
test
sahf
xchg
xchg
or
mov
addr16
cli
int3
add
or
pusha
push
cltd
mov
xchg
adc
add
pop
mov
and
cmp
sbb
xor
mov
inc
arpl
cmpsb
andb
jno
jl
and
pop
fsin
stc
popa
cmp
pop
pusha
fcompl
ret
add
lret
imulb
sub
in
ficoms
pop
mov
mov
outsl
stc
scas
jne
clc
add
enter
rorb
cld
fadds
test
sbb
dec
lds
jne
adc
push
jmp
xlat
cmp
and
insl
pop
cmp
fisubl
cmp
and
mov
mov
jl
pop
out
fsub
push
test
std
mov
mov
mov
mov
fildl
rcl
sub
leave
divl
lret
cwtl
lods
rolb
cmpb
push
and
aas
xor
ja
fcmovbe
xchg
loop
xchg
shr
add
cmp
divl
jb
adcl
add
or
mov
adcb
fwait
sbb
inc
lds
ss
xor
roll
iret
cs
mov
dec
loopne
xchg
in
pop
mov
cmpsl
xor
int3
sub
lcall
iret
mov
xchg
icebp
in
push
xchg
mov
inc
mov
jns
sbb
and
dec
xor
add
ja
inc
dec
fwait
out
roll
mov
mov
mov
lds
clc
mov
cmc
jmp
gs
stos
inc
mov
and
dec
push
push
xchg
arpl
sets
das
add
cmp
pop
sub
inc
mov
push
cmp
jge
ss
pushf
mov
or
inc
sbb
cmp
cmp
sub
aaa
imul
rorl
or
or
pop
inc
ret
inc
sbb
xor
ficoms
mov
mov
pop
int
mov
jns
dec
arpl
cltd
xchg
cld
scas
add
ss
xchg
xor
inc
xor
push
aaa
pop
andl
ljmp
pop
pop
jg
shr
daa
rolb
mov
jne
xchg
sbb
inc
cwtl
es
pop
fs
stc
std
pop
or
and
pop
rcrb
das
fsub
sub
test
jno
or
add
xor
mov
jp
icebp
int
xor
push
cwtl
xorl
mov
jo
add
cltd
addl
add
subb
rcr
int
les
jb
pushf
pop
icebp
cwtl
fldcw
push
inc
inc
into
sub
xchg
push
dec
in
add
mov
jae
cmpsb
xor
ds
mov
lods
sbb
stc
addl
cmp
loopne
rol
add
out
push
and
add
jne,pn
jnp
sbb
or
and
sub
shlb
popa
jbe
scas
pop
loopne
jo
rcrb
sbb
pusha
daa
adc
mov
pusha
addr16
repnz
pop
cld
sub
lret
int
repnz
xor
jne
add
push
and
dec
sub
pop
pop
jmp
mov
js
outsb
scas
into
sub
xchg
ret
aas
out
sub
pop
mov
test
mov
fsts
mov
mov
insl
push
loop
xchg
out
xchg
ret
mov
mov
xlat
jae
popa
xor
inc
mov
mov
or
jnp
jp
lahf
cmp
xor
mov
cmp
rorl
mov
into
xchg
out
out
popf
cli
in
jmp
aad
jns
lods
inc
in
sbbl
xchg
pop
and
jp
dec
or
ss
mov
lcall
dec
mov
jmp
lahf
ret
push
fwait
mov
cmpps
or
jle
stc
daa
ret
mov
or
sbb
xor
xlat
dec
aam
sub
cmp
loope
cmp
fcompl
aam
adc
inc
push
jno
pop
mov
rcrl
push
xchg
inc
xor
fcomip
lock
into
enter
ret
cmp
pop
and
xchg
fnstsw
aad
adc
movsb
jnp
mov
and
or
push
es
hlt
es
rolb
xchg
loop
xchg
add
lea
mov
push
adc
push
mov
stc
icebp
cwtl
test
push
cmp
arpl
xchg
gs
jmp
sbb
jbe
push
sub
aaa
mov
insl
int
rcll
loopne
cmp
cmp
sbb
sub
movsb
cmp
mov
mov
adcb
lahf
in
aad
add
sub
int3
fcomps
imul
dec
sahf
stc
mov
inc
cwtl
or
repz
cltd
cs
xor
scas
sub
xchg
mov
ds
enter
shrl
jp
mov
cmp
add
jmp
add
js
outsl
push
adc
gs
pop
ret
dec
insl
push
pop
pop
jge
idivl
in
or
ja
sbbl
and
lret
in
dec
push
add
and
mov
loopne
iret
lcall
add
sbb
sub
sbb
xchg
mov
popf
push
jo
js
jg
sub
inc
enter
jecxz
xlat
jle
mov
outsl
and
sub
addl
inc
lods
jno
cmp
repz
int
outsb
jp
hlt
lcall
cmp
shl
out
pushf
rorl
mov
and
add
push
sub
sub
jp
or
push
mov
test
jbe
fdivs
xor
xchg
jnp
sti
push
fsubr
icebp
push
in
mov
jb
jl
pop
mov
dec
sbb
ret
xchg
dec
aas
pop
addl
mov
push
call
aam
into
cmp
sub
pop
fsub
fldt
stc
lock
fdivl
and
xchg
fwait
in
xor
mov
jo
std
pop
rol
mov
stos
pusha
xchg
xchg
aad
jecxz
mov
rolb
mov
mov
and
shr
add
subb
mov
mov
cmpsl
lcall
jbe
jmp
fcomi
sub
orb
frstor
dec
fpatan
mov
aaa
sahf
int3
push
nop
and
fcompl
dec
packsswb
cmp
cmc
xchg
in
adc
add
mov
lret
push
mov
es
cld
add
mov
add
insl
shrl
mov
add
dec
mov
cs
rorl
add
mov
xchg
lods
rolb
xlat
mov
into
and
mov
outsb
bound
jmp
cmp
aaa
inc
cli
inc
cltd
cltd
fistl
jge
jo
leave
fimuls
add
xor
or
mov
stos
add
fistpll
jae
pshufw
cmpsl
pop
or
call
negl
int3
lcall
pop
xchg
xchg
call
add
pop
xor
cltd
and
xor
add
xlat
add
dec
addr16
into
das
out
mov
cmpsb
dec
dec
and
adc
fdivs
cs
rclb
leave
ret
lahf
ror
outsl
xchg
or
adc
scas
iret
into
adc
dec
mov
xor
testl
stos
and
fimull
ljmp
pop
nop
dec
sbb
adc
stos
adcb
popa
pop
lret
push
in
cmpl
mov
imul
sbb
movb
sahf
mov
fisttps
je
stos
cmpl
or
xchg
movsb
cmp
int
jb
xor
xor
pop
hlt
inc
sub
nop
xor
adc
mulb
lcall
adc
xlat
pushl
and
adc
loope
sarb
pop
insl
and
lcall
fnstenv
outsb
pop
mov
lcall
in
fwait
sahf
lret
mov
jno
loopne
scas
mov
js
jmp
xchg
sbb
cmp
stos
rorb
cmpsl
pop
inc
cmp
imul
inc
stos
or
pop
mov
lds
ljmp
dec
pop
sahf
adc
mov
or
xor
or
cli
mov
mov
mov
cwtl
sbb
xchg
push
xor
repnz
into
dec
fmull
pop
jns
lods
xchg
fists
mov
lret
or
mov
add
jbe
mov
pop
enter
fs
ficoml
int
ja
in
sub
fs
lods
add
xchg
xor
push
add
sub
adcb
pushw
or
lret
dec
lcall
push
sbb
xchg
inc
jb
inc
jmp
out
int3
in
add
inc
aad
inc
lods
dec
orl
mov
push
ret
pop
mov
orl
mov
sbb
fstps
dec
xchg
pop
push
pop
push
daa
sub
mov
jmp
stos
or
jae
cmp
popa
xchg
xchg
iret
mov
into
or
scas
jne
rorb
pop
xchg
push
inc
cmpsl
add
mov
icebp
push
push
sbb
mov
mov
inc
sub
push
sub
in
lcall
mov
into
cmc
jmp
push
pop
in
sub
repnz
cmp
add
add
mov
sub
sbb
inc
cld
cltd
mov
pop
insb
jb
movsb
xor
loopne
movsl
shrb
jb
mov
dec
mov
das
mov
mov
pop
frstor
stos
dec
and
in
subl
and
and
outsl
aas
imul
int
pusha
rorl
xor
shrb
xor
push
sbbl
fs
jmp
sub
ss
sbb
or
outsl
fcmovnbe
cmp
cli
cli
shl
cmc
es
cmp
xor
sub
push
mov
cmp
xlat
add
imul
pop
pop
gs
mov
hlt
adc
clc
test
lcall
lcall
shrb
push
mov
aas
ds
out
cmpsb
inc
inc
mov
xchg
sbb
shlb
out
and
ja
or
adc
stos
mov
shr
daa
jg
jo
push
sbb
nop
add
pop
adc
cmp
int
dec
ds
je
push
scas
or
xlat
inc
add
mov
mov
dec
and
ficomps
jae
je
add
rcrb
push
xor
mov
mov
test
out
call
movsb
push
popa
insl
push
dec
pop
and
xchg
cld
mov
shlb
push
divl
arpl
int3
cmp
inc
fstps
pop
les
das
jo
cltd
pop
lods
negb
je
mov
in
sti
jne
lds
ret
mov
lret
jb
and
push
add
ja
incb
dec
mov
sbb
js
scas
and
int
xchg
icebp
mov
push
jg
fucomip
jp
test
test
mov
cmp
test
cmp
push
flds
incb
enter
aaa
ja
adc
mov
ud1
mov
pusha
imul
cwtl
add
in
hlt
jne
jmp
xchg
es
xchg
outsb
int3
adc
pushf
pop
loope
aas
pop
dec
mov
or
sub
jge
inc
xchg
lret
out
clc
jmp
fsubp
in
jne
shl
cmp
adc
sbb
mov
inc
sarl
test
xchg
pushf
in
insl
pop
into
add
inc
adc
sub
xchg
lea
push
jnp
push
xchg
xor
xchg
jns
mov
pop
jne
jbe
mov
movsl
xchg
loope
ja
and
aas
inc
out
mov
cmp
push
dec
dec
dec
repnz
jne
pop
in
stos
jmp
xor
es
call
popf
xor
xchg
jmp
shll
je
cmpsl
push
cld
pop
dec
jle
and
mov
cwtl
mov
dec
jmp
xchg
or
mov
sbb
mov
add
stos
pop
sbb
sub
pop
add
les
and
mulb
je
inc
mov
sbb
cmp
jo
dec
cs
mov
in
or
sub
xchg
xchg
push
cmp
int3
cwtl
aaa
mov
dec
cmp
dec
hlt
xchg
aaa
mov
mov
fidivrs
mov
pop
test
insl
data16
push
jle
xchg
jns
jle
aaa
cmp
cmc
data16
das
xchg
fadds
sbb
lcall
stos
jae
push
xchg
in
push
jecxz
rorb
jne
push
pop
xor
mov
push
and
push
shl
push
ljmp
aaa
nop
inc
or
lret
loop
fbstp
push
imul
scas
mov
push
pusha
pop
jp
dec
std
mov
mov
ret
loopne
out
sub
aad
ljmp
xchg
pop
pusha
cmp
div
je
rcl
out
inc
cltd
ja
mov
xchg
subl
xchg
jns
dec
popf
insl
fmuls
and
ficomps
stc
push
add
icebp
test
out
movsl
int
push
mov
out
xor
ljmp
jge
gs
pusha
pop
loop
fidivs
gs
cld
xchg
jnp
filds
das
mov
out
cmp
test
shrl
int
aam
in
fs
addr16
das
out
mov
inc
jo
pop
lea
fbstp
aaa
out
jo
stos
prefetch
or
inc
cmc
in
jmp
fs
in
xchg
mov
xor
call
iret
aaa
pop
lcall
mov
aaa
pop
aad
pop
stos
in
outsl
and
jl
xor
imul
ret
cmp
cmp
ror
andb
loop
push
fdivrp
mov
in
bound
push
and
mov
dec
mov
imul
mov
repnz
dec
je
adc
sarb
mov
xchg
sbb
adc
out
aas
dec
sbb
ljmp
xchg
fisttpll
pop
pop
imul
mov
sbb
jge
add
push
jge
mov
popf
xlat
ds
inc
mov
dec
mov
lock
xor
cmpsl
fnsave
and
mov
cmp
cmpsb
lea
icebp
test
inc
in
inc
ret
outsb
les
add
mov
push
xor
xchg
cmp
fsubp
mov
popa
push
mov
stos
filds
mov
push
stc
movsb
fs
and
mov
jno
bound
or
jne
xor
lds
inc
mov
pop
outsl
adc
push
pop
loopne
cld
clc
mov
adcb
mov
inc
fcoms
add
adc
sbb
pop
test
rorl
in
mov
mov
test
push
pop
xor
dec
xor
pop
mov
push
neg
inc
push
scas
dec
std
push
outsb
mov
adc
xchg
dec
or
das
cli
daa
inc
xor
and
out
cli
scas
out
les
pop
and
sub
aaa
jge
dec
jmp
adc
add
jl
je
or
test
ret
in
or
or
sbbl
xor
rorl
mov
push
lidtl
mov
fisttps
jae
test
lea
sbb
je
lcall
or
int
mov
test
inc
mov
lahf
outsl
std
pushf
pop
lcall
jge
mov
sbb
fimull
bnd
lds
pop
call
lock
flds
pushf
push
mov
mov
cmp
shlb
push
ss
pop
shrl
mov
js
add
jmp
inc
cltd
jb
fistps
dec
fdivrl
mov
out
dec
popl
push
cmp
dec
pop
inc
sbb
fsts
cmp
dec
int3
lds
dec
adc
addr16
inc
adc
pop
inc
adc
xor
dec
lods
arpl
pusha
cmp
pop
dec
loopne
mov
push
pop
mov
and
pop
dec
notl
adc
push
loop
popf
cmc
or
mov
sub
das
inc
inc
leave
sar
std
ja
jmp
xorb
sbb
jmp
xorb
leave
lods
ret
out
fsubs
ss
lcall
xor
sub
int3
xor
loop
lcall
cli
inc
aas
dec
add
dec
pop
out
lea
js
pop
cmp
dec
dec
jns
cmpsl
pop
jno
mov
mov
or
das
bound
insw
dec
push
stos
or
add
outsb
mov
xor
sbb
orb
adc
call
mov
mov
into
mov
aam
cli
or
lret
push
push
fadds
cmp
sbb
test
push
dec
std
stc
adc
imul
cmp
pop
ljmp
mov
mov
scas
pop
bound
out
dec
xlat
sbb
push
imul
add
mov
mov
imul
push
push
mov
sbb
sub
sbb
shll
divl
rol
cmp
lret
movsb
ja
pop
sbb
cmc
insb
jp
insb
inc
std
test
mov
jae
sub
nop
push
subb
jg
add
push
js
mov
cmp
test
or
cltd
add
adc
inc
push
and
jp
add
xlat
xor
divb
fists
xchg
mov
mov
or
movsb
sub
mov
xchg
inc
jmp
adcb
cmp
dec
mov
fistpll
xor
repnz
and
imul
xorl
xor
pushl
xor
loope
icebp
into
mov
push
in
or
jo
or
cmpb
pop
dec
push
arpl
xor
inc
mov
movsl
cmpb
cmp
and
pusha
and
fcoms
add
mov
and
dec
inc
out
shll
das
lcall
insb
xlat
cwtl
mov
roll
xchg
mov
inc
lcall
jle
dec
xor
dec
ret
fs
imul
jae
jl
mov
mov
xor
add
js
lcall
mov
movsl
in
xor
inc
jne
add
and
je
int3
cmp
loopne
cltd
icebp
jns
jnp
mov
push
sbbl
mov
out
xchg
pushl
outsb
mov
ret
int
sbb
adc
insl
mov
orb
pushf
pop
inc
cmp
push
and
mov
inc
jl
mov
idivl
je
das
dec
stc
xchg
xor
jne
mov
negl
sbb
loopne
jae
fisttpll
cmpsb
inc
mov
dec
fstpt
mov
aas
jmp
xchg
sub
loope
aaa
fnstenv
and
sar
sub
sub
cmp
cld
imul
push
xor
imul
mov
ljmp
inc
or
sahf
dec
mov
pop
add
into
ljmp
inc
or
lret
inc
push
mov
pop
sahf
xchg
add
stc
icebp
out
pop
shrb
inc
mov
sbb
mov
or
movsl
add
jecxz
negl
cwtl
push
cs
popa
cmpsl
dec
xchg
fsubl
pusha
bnd
test
out
rcl
inc
push
pop
lahf
sub
cmp
mov
popa
rcrb
dec
gs
jecxz
and
cwtl
jns
add
scas
ss
aam
ficompl
ret
nop
les
cmpsb
and
addr16
or
stos
add
leave
mov
setp
dec
into
xchg
data16
lods
ja
outsb
push
push
daa
sbb
xor
inc
pop
hlt
mov
cmp
sub
stos
jl
sahf
cmp
jg
movsl
frstor
ss
lock
out
std
adc
lret
adc
in
imul
fadds
movl
cli
jecxz
hlt
cmpsl
cmc
jns
das
mov
clc
push
jmp
test
repnz
and
leave
and
sbb
pop
and
int
jno
incb
sahf
rcpps
xchg
ror
dec
inc
jle
popf
es
xchg
nop
jo
or
and
sbb
mov
aam
ficoms
cmp
dec
dec
sub
pop
pop
adc
mov
movsb
fs
std
sbb
jecxz
call
adc
bound
mov
lods
inc
movsb
pop
inc
icebp
ret
lds
shll
mov
es
cmp
xlat
jae
ss
rorb
in
cmp
cmp
stos
loopne
dec
out
int
jecxz
pop
cs
imul
es
jmp
repnz
xor
ss
jne
popa
nop
xchg
jae
jl
jbe
test
pop
mov
lea
testb
leave
jecxz
lock
int
push
aad
mov
fdivl
sti
and
mov
aad
jnp
xchg
shrb
pop
rorb
dec
add
sahf
inc
xchg
mov
mov
xchg
insb
in
sbb
dec
lea
push
iret
je
mov
adc
in
imul
movsb
test
cs
lods
and
aaa
nop
sub
repnz
jl
repz
test
cmp
sbb
addr16
std
out
fldenv
iret
out
out
or
mov
add
fwait
mov
jg
call
hlt
sbb
or
xor
outsb
outsl
or
insb
jne
mov
xor
nop
adc
out
test
jle
cmp
cli
adc
aas
outsl
sahf
add
and
vpmulhuw
cld
or
lea
push
cmpsb
mov
pcmpgtb
mov
pxor
mulb
cwtl
daa
arpl
and
xchg
sbb
cmp
inc
dec
mov
xor
test
pop
adc
pop
mov
sbb
out
add
sub
inc
jns
xchg
insl
mov
xchg
add
sub
lret
jmp
movsb
mov
push
rorl
fbld
or
ret
lahf
mov
fisttps
jg
xor
push
or
mov
ljmp
or
ret
in
mov
push
jo
std
or
mov
dec
push
adc
and
into
xor
int3
out
inc
jmp
jnp
arpl
mov
in
jle
inc
mov
jmp
fucom
mov
jecxz
xor
mov
add
lret
pop
aas
add
sub
dec
xchg
cmpsl
inc
lods
addb
jge
ss
xlat
int3
dec
icebp
push
mov
xlat
mov
addr16
cmp
stos
sbb
mov
cmp
lret
fmull
mov
mov
ret
fcmovb
dec
cmp
mov
call
es
cmpsl
add
sbb
dec
clc
xor
int
aaa
imul
imul
lahf
xchg
lods
xchg
arpl
scas
mov
imul
xchg
lcall
jecxz
jne
out
cmc
scas
shrl
aaa
and
push
sub
ljmp
iret
and
xchg
ss
movsb
inc
in
cmc
adc
jge
jo
or
test
das
sarb
pop
and
mull
mov
jno
sub
popl
mov
out
jno
subb
push
pop
scas
sbb
mov
outsb
jnp
nop
cs
pop
jmp
xor
lret
repz
movsb
push
jmp
ret
icebp
inc
mov
push
jne
insb
sub
outsb
pop
jecxz
ss
mov
int3
aam
jp
inc
push
idivb
cs
popa
leave
lea
mov
icebp
icebp
and
mov
cmp
inc
dec
or
pusha
or
rep
sub
push
fildll
mov
cmp
adc
or
push
mov
sbb
mov
imul
add
push
in
adc
decb
rorl
es
sti
mov
add
add
cmp
cltd
mov
jb
push
stc
mov
adc
pop
mov
aas
sub
add
cs
lock
fldcw
add
jae
negl
fistpll
mov
ds
cmc
sahf
mov
in
push
push
cwtl
in
mov
pop
or
inc
idivb
cmpsl
lahf
mov
inc
out
call
sbb
es
jecxz
cmp
mov
loop
push
cmp
dec
dec
inc
jb
andl
stos
popf
loop
lock
push
mov
addr16
cmp
sub
add
and
mov
mov
pop
addr16
sbb
mov
push
gs
mov
pop
or
sub
or
pop
nop
xor
add
inc
adc
jns
ds
xor
aaa
arpl
mov
or
mov
sbb
ss
sbb
ja
loope
fiaddl
xor
mov
mov
mov
cli
add
pop
fnstcw
lods
sbb
and
cld
cmp
ret
call
pop
ret
mov
lea
jne
movsb
imul
pushl
mov
adcl
int
lret
or
push
cmp
cmp
je
xlat
jb
jmp
mov
je
cld
add
cld
mov
pop
mov
sti
lds
cmpsl
mov
testb
pushf
sub
pop
inc
xor
adc
cmp
add
popa
mov
push
ret
clc
imul
push
int
mov
call
or
mov
mov
or
mov
xchg
sarl
loopew
ljmp
test
jne
mov
fsubrl
dec
push
inc
in
scas
leave
ficompl
inc
movsb
and
cmpsl
push
testb
adc
xor
pop
sbb
in
or
pushf
push
adc
jecxz
and
fidivs
push
add
lret
fdivrp
test
rorl
into
rclb
sbb
mov
lahf
pop
out
std
lret
mov
and
clc
push
mov
cmpsl
mov
add
mov
or
in
xlat
daa
ds
xor
mov
push
or
repz
imul
pop
and
sbb
in
sahf
movsl
jmp
adc
sbb
lds
js
test
sbb
cmc
fsub
mov
sbb
scas
std
mov
fidivrs
insb
mov
sahf
incb
or
movsl
adc
mov
ffree
inc
subb
mov
add
dec
sbb
push
xor
js
mov
ret
mov
push
ds
jno
sub
pop
pop
cli
cwtl
scas
push
rolb
in
xchg
shll
push
jb
pop
xor
cmp
clc
leave
std
pop
ret
inc
cmp
inc
jle
add
adc
xchg
sti
lret
int3
pop
repz
enter
out
mov
repnz
mov
mov
lods
push
mov
in
fdivl
test
inc
in
add
jg
andl
push
dec
mov
xor
xchg
mov
push
je
jecxz
or
xor
lock
std
lcall
cmp
fcom
add
pop
adc
push
xchg
int3
jge
xchg
xchg
sbb
push
out
jecxz
dec
push
and
mov
add
adc
filds
aam
ret
push
push
cli
popf
jae
inc
or
out
sub
jno
mov
xchg
pop
mov
add
out
pop
jg
addr16
mov
out
dec
imul
arpl
pop
imulb
xor
sub
jo
sti
aad
cld
insb
push
jno
cs
loope
xchg
aam
xor
stos
lock
jnp
ret
push
cmc
popa
xor
jl
jl
cmpsb
gs
into
pop
push
adc
iret
in
jnp
sbb
dec
ficoml
push
dec
jp
je
xor
xchg
mov
add
fstpl
inc
stc
out
out
mov
push
pop
jp
outsl
xchg
idivl
ds
xchg
cli
mov
jp
das
mov
xchg
dec
push
in
in
cmp
xchg
mov
addr16
arpl
cmp
cmp
enter
mov
outsl
push
inc
test
adc
fs
rcll
pop
push
and
xchg
mov
pop
adc
lds
insl
cmp
push
int
inc
dec
je
mov
xlat
fs
in
jg
mov
mov
nop
test
rorb
push
ljmp
stos
mov
lods
jns
pop
bound
fisubs
jbe
loop
or
or
add
mov
je
in
cmp
pop
in
stos
inc
add
cld
into
insl
pop
inc
cmp
push
das
pop
cmp
pop
or
aaa
jmp
outsb
js
cmpsl
outsl
stos
lock
shrl
jmp
fsubrl
xchg
into
push
dec
fdiv
jno
pop
ljmp
or
cmpb
mov
test
ror
adc
imul
out
jge
mov
icebp
flds
ljmp
sbb
loope
cltd
int
mov
shlb
inc
mov
lock
pop
mov
in
mov
ret
daa
jns
push
and
xchg
test
lcall
or
sub
pop
xor
mov
les
pop
popf
mov
ja
xor
mov
mov
call
lret
jbe
mov
jl
lcall
add
in
scas
les
les
ljmp
mov
adc
imul
rcll
or
dec
sub
push
dec
jne
xor
fsubp
test
adc
add
sub
jecxz
dec
aad
sub
fadd
into
movsl
cmp
into
test
leave
ret
lcall
mov
xchg
in
sbb
or
sbb
inc
aad
push
out
mov
sub
out
sub
testl
jmp
ja
jg
ror
mov
sbb
clc
and
inc
arpl
call
popa
imul
in
dec
adc
cwtl
cmpsl
daa
sub
xchg
stos
outsl
sbbl
pop
cmp
aaa
push
into
jne
mov
cmp
in
mov
pop
xor
mov
sti
mov
loop
xchg
ret
mov
add
inc
push
jb
sbb
or
and
add
out
push
adc
cli
mov
xor
and
inc
call
push
std
or
repz
mov
aaa
cwtl
or
rcrb
cmp
stc
xor
dec
in
inc
add
je
imul
int3
xor
adc
ljmp
test
mov
fdivl
add
pushf
mov
push
add
pop
popl
je
xchg
xchg
pop
pop
mov
dec
out
push
push
add
dec
xrelease
xchg
lcall
xor
xchg
sub
daa
jle
sub
push
cmp
xor
and
xor
iret
imul
inc
imul
xchg
xor
loop
pop
fs
jno
sbb
inc
xlat
add
mov
rcll
jae
lcall
fmul
xchg
mov
ljmp
dec
mov
cmpsb
inc
fucomi
mov
mov
jge
dec
lret
data16
mov
lret
pop
insb
lret
or
pop
outsb
loop
inc
mov
cld
push
xor
mov
inc
jb
push
stos
sub
and
mov
aam
pusha
sub
movsl
mov
mov
test
adc
je
mov
repnz
mov
sti
pop
mov
jne
mov
push
push
adc
mov
rcll
adc
in
mov
add
sahf
cld
xchg
mov
test
dec
sbb
roll
ucomiss
pop
rcl
pop
into
js
xor
hlt
test
in
fsts
mov
outsb
fidivrs
push
sub
inc
outsb
push
xor
xor
adc
pop
jge
xor
fwait
inc
inc
mov
inc
add
testb
adc
stc
rcll
outsb
mov
push
jne
or
movd
lods
outsb
jle
add
cmpsl
popf
filds
or
imull
mov
dec
xchg
jbe
mov
and
jg
jge
add
fidivrs
adc
adc
shll
xor
sub
dec
xor
je
xor
mov
inc
xlat
adc
out
dec
mov
ficompl
or
stos
push
popf
cmp
add
jo
aam
xchg
test
shll
pop
jnp
mov
out
loopne
mov
sub
sbbl
ret
out
scas
mov
xor
xlat
jns
test
sub
mov
insl
pop
loop
js
or
and
xchg
and
adc
sbb
ss
jb
pusha
js
mov
aas
pop
fwait
or
dec
xor
sti
or
aam
adc
dec
pop
jo
inc
inc
jl
dec
xor
test
cmc
xor
sbb
mov
mov
pusha
pushf
cmp
jnp
fnstenv
jne
roll
xchg
addl
je
jb
or
add
dec
push
push
pop
in
loopne
insb
xor
in
aad
mov
sub
xchg
flds
mov
pop
push
xchg
call
jl,pn
push
test
scas
mov
pop
mov
dec
lahf
pop
ja
lock
jmp
pop
ss
cmp
dec
sub
jb
push
push
lea
pop
sub
and
cwtl
jl
cmp
icebp
jno
cmp
insl
es
mov
jmp
dec
stc
cltd
sub
adc
push
adc
pusha
in
inc
or
inc
cmp
push
sbb
add
adc
frstor
mov
adc
out
popl
pop
mov
pop
into
mov
inc
data16
adc
call
dec
fwait
rcrl
cltd
lahf
daa
xchg
insl
or
mov
xor
faddl
xlat
xchg
jno
push
adc
ret
sahf
ret
les
idivb
out
mov
xchg
out
cmpsl
inc
mov
add
repnz
xor
mov
add
dec
add
add
popf
adc
call
insl
jbe
xorl
xchg
add
adc
repz
into
pop
dec
lcall
or
add
loopne
xlat
hlt
outsb
mov
pop
sarl
sarl
xchg
test
arpl
leave
pushf
inc
fs
and
sub
lret
or
les
xor
mov
rcrb
out
dec
into
dec
sub
push
les
popf
shll
stos
insl
push
push
push
maskmovq
testl
insb
inc
jne
outsl
ja
jns
lret
sub
ret
jno
sbb
add
sbb
xchg
das
mov
push
fwait
adc
leave
ficompl
je
ret
mov
or
insb
cmc
or
push
lahf
mov
cmp
dec
add
add
pusha
jmp
cmp
push
pcmpgtw
jmp
inc
or
popf
outsb
sti
adc
divb
mov
dec
das
dec
loopne
jnp
pop
icebp
sti
lods
mov
mov
lahf
repz
aad
pop
xlat
dec
sub
xchg
fcoms
pop
mulb
cli
mov
test
and
loopne
fidivrl
pusha
cwtl
pop
ficoms
cli
imul
add
sti
add
jp
pusha
add
in
loopne
shlb
inc
imul
xor
and
fcoms
or
stos
jecxz
pop
sbb
push
cmpsl
andb
test
aad
dec
jp
fisubrs
fs
cmpsb
jmp
push
mov
xor
mov
fidivs
andb
fcmove
dec
add
jne
fnstcw
fnsave
sbbl
push
push
scas
jecxz
jge
xchg
imul
out
movl
xchg
mov
lret
rcl
stos
mov
ficomps
stos
cmp
rorb
inc
cmp
inc
sbb
add
xchg
into
test
icebp
mov
dec
aam
adc
sub
cli
mov
sub
mov
pop
movsb
fistpll
je
rcl
inc
sbb
hlt
scas
xor
mov
nop
sbb
sub
jae
lock
shrl
or
lret
stos
filds
pop
push
icebp
lock
call
imul
je
mov
jmp
pop
add
pop
add
mov
mov
in
xchg
push
out
mov
sbb
fildll
ljmp
popf
lcall
fdiv
sbb
arpl
xchg
in
pushf
or
ret
adc
xor
lds
mov
cmpsb
sbb
pop
push
stos
mov
inc
sti
push
lods
push
jbe
push
sahf
mov
testl
adcb
nop
and
mov
cld
mov
pop
jb
sub
sub
mov
sub
add
fildll
lahf
sub
adc
shl
push
dec
imul
sbb
out
mov
xor
sahf
add
insl
and
and
cmp
mov
test
addl
add
ja
sbb
sub
inc
jecxz
popa
inc
jg
add
je
push
sub
cwtl
aad
fisttps
les
pop
xlat
test
jge
pop
add
sbb
pop
inc
aad
jp
adc
andl
iret
out
jo
sahf
mov
add
scas
pop
call
add
sub
push
dec
iret
pop
outsl
xchg
fdivrs
jb
pop
subb
push
pop
test
inc
xor
sub
push
xor
adc
xor
pop
add
adc
clc
mov
lahf
daa
pop
clc
mov
into
mov
jno
lods
in
xchg
pop
push
out
jecxz
and
ljmp
int
cmpsb
in
subl
adc
sub
mov
pop
fstps
pcmpgtw
cmpsl
dec
repz
cmpb
inc
push
xchg
sarl
stc
pop
jne
adc
sarb
push
mov
ds
sar
cmp
icebp
mov
add
lcall
sti
inc
test
adc
mov
fisttps
mov
lahf
pop
cmp
jne
addr16
push
inc
or
dec
nop
xchg
mov
int
fdiv
mov
push
push
push
inc
aaa
sti
push
in
lods
cmpsl
dec
scas
lods
jecxz
pop
test
lds
mov
lods
arpl
inc
add
push
and
or
addl
xlat
jl
cmpsl
xchg
sbb
xlat
cmp
add
lret
cmp
into
sbb
push
cmpsb
cwtl
jne
xlat
insb
mov
fcmovb
imul
xor
mov
rorl
or
int
inc
out
inc
jg
outsl
adc
mov
dec
out
ret
jnp
scas
fcoms
inc
sub
outsl
sub
jne
aaa
push
pop
jmp
test
push
lahf
jmp
jge
or
mov
and
pusha
push
data16
mov
jbe
fdivl
dec
sbb
pop
pushf
or
pop
sub
stos
into
sbb
ja
stos
or
cmpb
imul
jnp
and
orb
sub
adc
cmc
fs
sbb
loopne
cmpsb
aaa
jne
inc
lea
stos
push
sahf
adc
pop
repnz
ret
or
js
cs
cmpsb
push
gs
clc
push
addr16
lds
xchg
dec
repz
pop
pop
xchg
aas
push
movsb
enter
or
les
push
fnstsw
call
aam
push
xor
fidivl
cmp
dec
out
adc
imul
sub
aas
andl
pop
das
test
xchg
les
mov
scas
mov
lret
imulb
and
sub
je
lods
divl
cmpb
cli
cwtl
push
xchg
loop
jg
mov
jmp
shll
sbb
pusha
pushf
call
pop
cs
xchg
cwtl
cmp
jmp
lds
adc
and
loopne
loope
dec
push
and
pop
xchg
add
mov
sbb
add
movsb
hlt
push
nop
jl
sub
xor
insb
mov
sbb
test
sbb
or
hlt
lea
repnz
cmpsb
je
pop
into
mov
leave
mov
sahf
in
cmp
fsubr
insl
outsb
or
loop
testb
mov
push
lahf
or
add
mov
mov
shlb
insl
out
scas
loop
in
data16
mov
mov
and
mov
outsl
mov
mov
xchg
or
pop
ljmp
lret
cltd
cmp
sbb
movsl
mov
xchg
cmp
sub
push
mov
push
adc
fidivs
adcl
pop
xor
mov
fdivrl
popa
jg
add
add
mov
mov
mov
out
cmpsl
test
fs
mov
in
sbb
add
jne
xchg
pushf
ljmp
test
data16
mov
into
add
dec
xor
push
nop
pusha
dec
or
push
cmp
push
sbb
inc
dec
shll
jne
fistps
test
and
js
int3
jg
jmp
add
mov
and
pop
sbb
ret
xor
ficoms
sbb
addr16
xchg
sahf
mov
push
outsl
or
ds
jl
jno
inc
sbb
test
fbld
mov
fistps
inc
xchg
in
push
shl
or
imul
cld
cmp
and
test
mov
mov
flds
xchg
dec
sub
fnstcw
xchg
jecxz
cmp
fnstcw
mov
icebp
mov
adc
xor
sbb
lock
stos
cmp
fsubs
pushl
and
jmp
imul
sbb
shr
into
or
aaa
mov
outsl
add
push
dec
and
pop
xlat
lea
int3
push
jne
lcall
cwtl
sub
paddd
daa
scas
mov
in
pop
inc
in
std
aad
cmpsl
add
lret
add
pop
jne
mov
ficomps
stos
add
insl
xor
pop
out
push
mov
pop
imul
sub
add
flds
xorl
in
jae
mov
rcrl
data16
sbb
repnz
inc
jno
pushf
xchg
xchg
xchg
mov
lock
xchg
sub
mov
add
icebp
xchg
add
cli
sbb
push
outsb
mov
stc
or
jecxz
cwtl
shr
mov
sahf
xor
aaa
jno
mov
jbe
sub
xchg
andl
in
inc
andb
mov
jl
inc
mov
pop
cs
push
push
andb
inc
adc
test
and
jae
imul
lahf
pop
fildl
mov
jae
jae
pop
hlt
xor
sbb
xor
pop
clc
adc
lahf
shl
or
xor
repnz
xchg
adc
jge
in
jae
push
xchg
dec
adc
xor
dec
orb
dec
push
pop
sahf
test
inc
test
testl
jns
inc
or
fbstp
xchg
psrld
add
pop
mov
mov
dec
or
addl
aam
adc
dec
lea
push
and
stos
daa
ucomiss
xorl
insb
adc
subl
in
jae
mov
pop
sub
xor
push
repnz
lds
cwtl
aad
stos
bnd
push
dec
mov
mov
jnp
in
push
rcll
daa
stc
loopne
pop
mov
add
pop
lods
lret
cmpb
mov
aaa
mov
andl
mov
out
aad
decl
xchg
data16
push
adc
push
loopne
fsts
fistl
call
jmp
jo
ret
sub
std
jmp
ret
lret
inc
cmp
test
jle
and
cmp
ljmp
orb
repz
or
jbe
dec
push
cmp
push
lret
jns
lods
add
jae
pop
hlt
mov
mov
push
sub
push
aad
xchg
add
cmc
and
test
pop
mov
je
dec
sub
add
mov
fildll
xchg
pusha
jl
add
dec
nop
popf
mov
subl
inc
push
add
testb
rcrl
xchg
out
shrb
in
scas
mov
je
inc
mov
cmp
xor
addr16
shlb
lods
push
adc
imul
in
jg
scas
mov
pop
mov
mov
dec
sahf
and
mov
or
je
outsb
arpl
addr16
adc
mov
and
adc
clc
inc
sahf
sbb
sbb
mov
in
data16
cmp
push
add
cltd
subl
jl
mov
sahf
cmp
push
imul
dec
jno
in
lock
push
jmp
sub
test
stc
or
pop
xchg
test
mov
pop
sub
fstl
mov
pop
imul
movl
xor
stc
mov
xchg
lea
dec
imul
push
imul
sub
icebp
xchg
imul
jl
adc
mov
mov
insl
push
lret
pop
lods
mov
repz
bound
fldt
test
loop
fsubrs
leave
mov
mov
scas
and
cmpb
faddl
xorb
sbb
das
jae
repnz
mov
jg
jl
in
lcall
push
and
aad
in
xor
call
leave
enter
xor
loop
dec
fisubrs
mov
fcoms
out
inc
stc
xlat
mov
in
xlat
mov
mov
fmull
adc
rcrb
pop
mov
insb
fldcw
push
cmc
imul
mov
cs
mov
mov
out
in
xor
or
and
pcmpeqd
pop
cli
idivl
test
loopne
out
icebp
pop
mov
jns
es
xchg
lcall
and
loop
pushf
fiadds
mov
pop
ja
int
and
dec
pop
retw
pop
scas
fsts
fdivl
les
jbe
pop
shlb
sub
or
sarb
xor
and
sbb
loopne
jns
inc
dec
xor
or
mov
and
sbb
push
aaa
inc
cmc
or
cli
mov
cmp
mov
or
std
mov
jne
xchg
je
lcall
orb
jge
inc
lods
rcll
mov
add
leave
xchg
ret
jecxz
outsl
fstpt
sti
movsb
xor
cmp
outsb
es
ret
lret
lea
add
sbbb
in
cmpsb
xlat
imul
cmp
outsb
lods
aad
mov
dec
js
or
test
inc
mov
inc
fisttps
add
sub
enter
aam
insb
add
mov
into
aad
subl
cmp
sbb
sti
movsl
dec
out
xor
cmp
xchg
xchg
cmp
mov
or
sar
outsb
xor
pushf
mov
xorl
popa
lahf
daa
daa
daa
in
inc
fidivs
leave
dec
inc
add
roll
insl
and
cmp
test
rclb
ss
dec
inc
imul
or
inc
mov
jno
jecxz
mov
pop
xchg
sti
test
mov
std
pop
movsl
sub
nop
xor
push
in
jmp
push
lea
push
ret
frstor
xchg
or
xchg
jl
push
cmp
dec
popf
push
roll
push
ljmp
inc
mov
jle
ljmp
iret
in
ds
or
gs
jl
and
lds
adc
pop
int
or
push
jne
or
mov
out
mov
negb
pop
push
and
inc
lea
mov
stc
push
cmp
rcll
xchg
out
enter
pop
push
repz
in
jae
cmp
leave
sub
enter
sub
mov
lods
xor
mov
push
test
roll
loop
and
mov
out
add
push
jnp
adc
adc
or
xor
or
loopne
in
ret
les
leave
inc
and
lds
add
testb
sub
fidivl
int3
or
and
push
out
xorb
and
adc
outsb
xchg
jno
inc
out
dec
lret
push
cmp
jmp
outsb
sti
jge
stc
divb
sbb
adc
adc
pop
sub
jnp
cmp
jge
cltd
loopne
xchg
pop
pushl
ret
push
lock
repnz
xchg
inc
test
pop
xchg
dec
pop
sbb
ljmp
cmp
mov
push
xor
stc
cltd
mov
in
mov
scas
popa
sbb
lods
insl
std
cld
lock
dec
mov
add
adc
and
mov
sub
lcall
jmp
les
divl
sub
adcl
pop
adc
pop
bound
out
xor
stos
mov
popa
pop
cmpsl
add
stc
mov
movsb
in
adc
xchg
jecxz
popl
adc
icebp
adc
aaa
lcall
xor
lods
adc
call
leave
insl
xor
out
loope
pop
fbstp
ss
iret
gs
dec
or
add
ret
lock
mov
jmp
adc
loope
pushf
or
jne
mov
push
dec
mov
pop
fmull
mov
dec
pusha
mov
fdivr
cmpsl
inc
mov
mov
test
cmpsl
test
ja
dec
ja
rcrb
mov
push
mov
cmpb
push
xchg
imul
movsl
pop
lods
lret
add
js
mov
pop
adc
cmpsb
lret
mov
leave
les
push
cmp
fdivrl
std
scas
sub
cmc
rcrb
imul
cwtl
pop
mov
pop
jp
dec
test
pop
arpl
je,pn
and
imul
jg
rorb
cmp
lret
cmp
lret
ja
lods
dec
icebp
push
xor
inc
jae
adcl
dec
jmp
xchg
pusha
inc
adc
cmp
adc
lahf
sub
pop
xor
add
push
addr16
inc
aam
jg
cwtl
leave
lret
and
outsb
push
cmp
push
adc
scas
int
sub
pop
test
clc
jle
mov
stos
mov
sub
je
inc
aam
sbb
mov
mov
stos
push
mov
mov
pop
sub
mov
rorl
pop
js
or
movsb
inc
pop
jo
mov
test
or
in
push
popf
dec
adc
pop
test
dec
je
dec
xchg
popf
inc
jl
dec
dec
add
sbb
or
cmp
mov
jg
fs
movsl
repz
cmc
in
pop
push
gs
andb
or
push
outsl
orl
pop
push
push
xchg
inc
rorl
mov
push
xchg
ret
daa
pop
ss
outsl
fcmovnu
push
arpl
shl
testb
fnstcw
test
hlt
pop
cmp
jmp
in
cmp
movsl
shlb
shl
inc
arpl
dec
and
mov
adc
inc
sub
push
sarl
xor
jns
arpl
inc
mov
add
scas
xor
lret
jmp
xchg
mov
cmpsb
das
cmp
xchg
sub
ja
sbb
ret
push
inc
mov
incl
jnp
jecxz
fisubl
cld
insl
das
ljmp
mov
cmp
rcl
hlt
push
pop
adc
mov
popf
dec
popa
sbb
adc
xor
sbb
cmpb
push
cmpsl
jl
sub
mov
sub
sub
push
jmp
xchg
jns
mov
dec
ss
cmp
fcmovne
push
cs
popa
aad
out
jbe
xchg
sub
bound
cld
inc
popf
add
movsb
add
inc
sbb
jle
cmp
push
ja
mov
imul
out
xchg
sbb
orb
sub
aas
xor
or
or
dec
mov
pop
in
mov
out
js
ret
fnstenv
mov
inc
sbb
ret
int3
shlb
or
and
lcall
pushf
pop
dec
xor
in
mov
jnp
movsb
fmull
xlat
rcl
xchg
std
push
or
pop
inc
inc
xor
xchg
leave
jb
es
clc
sahf
add
add
int3
sbb
shl
or
loopne
jge
or
xchg
clc
repnz
test
sahf
shlb
cwtl
leave
fwait
testb
and
pop
and
and
outsl
add
adc
ja
mov
mov
dec
mov
inc
add
jge
rclb
xchg
or
xor
sub
pop
out
cmp
cmpsl
jecxz
add
mov
bound
das
mov
lds
jbe
ja
imul
or
sbb
enter
dec
sub
dec
inc
or
sbb
aad
addr16
lahf
frstor
adc
scas
popf
stos
inc
pop
mov
outsl
fdivs
aam
pop
stos
fwait
sbb
add
mov
pushf
shlb
clc
push
sysexit
shl
call
sarb
push
and
xor
fmul
lret
xlat
mov
xchg
mov
xchg
inc
push
pushf
and
or
ja
test
test
aaa
push
mov
into
lret
push
inc
xchg
or
mov
xlat
xchg
int3
mov
incb
push
mov
movsl
or
add
cmpsb
sahf
pop
repnz
jmp
clc
jbe
adc
or
sub
mov
in
fcmovnu
data16
cmpsl
add
mov
arpl
mov
ja
popa
jno
push
std
lods
insb
mov
nop
mov
lea
cmp
shrl
ja
jmp
add
mov
mov
jmp
scas
dec
repz
out
loopne
sbb
jne
pop
jl
fcoml
inc
xchg
cmp
loope
cmpsl
maxps
aaa
lret
mov
lahf
sub
repz
mov
daa
das
enter
mulb
push
std
xlat
outsl
mov
adc
mov
iret
xor
xor
or
push
add
clc
mov
jp
or
mov
cmp
cmpsb
orl
popw
mov
enter
pop
push
fnstsw
mov
ret
pusha
fucomi
lcall
pop
in
xlat
mov
adc
mov
sub
aaa
out
mov
pop
ret
xchg
jle
lret
pop
jmp
push
setg
pop
stos
in
xchg
shlb
jo
cmp
xorl
dec
repz
and
bound
or
std
sub
lret
ljmp
fisubs
jl
leave
jg
loop
push
push
xchg
sbb
jmp
dec
in
push
mov
mov
lds
cmpsl
pusha
xchg
jle
push
mov
out
xorb
xchg
xchg
mov
aam
int3
add
mov
push
rcll
insb
cmp
pop
sarl
cwtl
mov
shlb
sbb
lods
hlt
std
add
nop
xor
adc
inc
fiaddl
sub
iret
xor
rorl
stos
cld
icebp
pop
sub
and
mov
and
cmp
sarb
inc
push
adc
mov
or
jg
cmc
dec
repnz
leave
aaa
xchg
mov
sarb
lods
leave
outsb
aaa
loope
out
add
jb
je
imulb
idivb
cmp
stc
cmp
or
nop
mov
mov
fwait
jns
jo
dec
mov
cmp
mov
outsl
adc
mov
dec
mov
shlb
mov
gs
pop
cli
mov
pop
push
lods
jle
out
inc
fistl
loop
cmpsl
pop
xchg
test
rol
inc
push
mov
std
sti
lret
popa
ficoml
leave
ret
setne
dec
fcomps
lcall
std
lods
mov
das
inc
mov
adc
movsb
pop
aad
sub
mov
loop
cmp
mov
cmp
cmp
xchg
ds
jnp
pop
imul
xor
loop
enter
mov
xor
ljmp
jns
jecxz
push
jge
in
or
imul
movsb
or
mov
in
inc
and
adc
shl
mov
push
mov
jo
scas
ljmp
dec
in
cmp
andl
and
lret
cwtl
xchg
ret
mov
jne
xor
xchg
fwait
mov
xchg
push
ficompl
push
in
jbe
int
inc
and
or
add
dec
mov
cmp
sub
in
pop
in
test
cmp
jne
ret
or
inc
xchg
ss
push
ss
mov
dec
fisttpl
ficompl
lret
pop
adc
or
add
sbb
pop
sti
ja
scas
add
mov
pop
bound
push
mov
rorl
xchg
or
mov
arpl
jo
fwait
mov
daa
repnz
mov
inc
outsb
movsl
sahf
jnp
mov
jns
mov
fsts
scas
pop
mov
loopne
gs
enter
incl
cwtl
pop
stos
int
repz
inc
push
imul
xor
int
cmp
xor
addr16
out
inc
arpl
fs
cmp
pop
mov
sbb
lahf
push
scas
xor
js
out
push
xchg
adc
push
push
adc
test
or
pop
lea
jl
xor
xor
not
push
dec
out
mov
jae
loope
or
mov
cmp
pop
pop
dec
cmp
clc
fwait
mov
mov
lcall
sar
mov
in
mov
and
add
sahf
inc
jmp
in
fdivrs
ss
push
or
jo
dec
jl
push
add
xchg
imul
mov
jle
add
push
jbe
fcompl
xor
out
outsl
outsb
inc
ja
xor
pushf
jnp
push
or
push
pop
xchg
sbb
mov
or
push
and
stc
pop
dec
mov
sbb
shlb
cltd
outsl
xor
out
push
fmulp
nop
push
push
shl
push
inc
pop
faddl
lret
push
cmp
lret
or
dec
dec
ficomps
fnstcw
in
add
movsb
mov
jbe
jge
nop
and
pusha
and
dec
xchg
jns
mov
or
into
mov
daa
shll
in
pusha
adc
fcmovb
push
jo
sub
icebp
into
scas
into
push
es
inc
mov
mov
jmp
lea
xchg
ret
mov
lret
dec
xchg
push
stos
imul
filds
hlt
inc
out
jnp
lods
stos
lret
scas
mov
stos
out
push
add
ret
imul
insl
mov
sub
ds
jns
add
mov
imul
ds
xlat
pop
loop
int
dec
adc
pushf
and
in
stc
inc
jecxz
popa
lahf
out
insl
imul
ljmp
jns
popf
ficomps
xchg
fmul
movl
lds
dec
and
mov
push
xchg
fscale
add
lods
dec
lds
push
sahf
sbbl
mov
xlat
adc
call
negl
pop
push
mov
sahf
call
dec
shl
mov
sbb
fwait
jl
test
loop
and
or
fidivrl
aas
pop
sub
insl
or
repz
jg
dec
stc
out
lods
pop
mov
jbe
add
out
fstps
dec
incl
cmp
dec
test
inc
test
push
mov
push
xchg
xor
cmp
aaa
cmp
pop
scas
movsl
dec
mov
out
mov
or
add
imul
mov
cli
cmp
sub
lcall
fadd
adc
test
or
cwtl
xchg
or
cmp
orb
sub
int3
shll
sbb
push
cs
mov
xor
mov
mov
out
imul
subl
dec
xchg
sbb
loop
xor
iret
rcrl
mov
add
adc
enter
arpl
sub
mov
push
mov
out
mov
push
imul
mov
adc
fwait
mov
aad
ja
fdivs
lock
lret
lret
xchg
push
lcall
pop
cltd
cmp
or
lds
pop
or
dec
clc
jecxz
or
movsl
movb
xchg
push
dec
push
fmuls
jb
aas
in
mov
pop
ror
pop
test
rorl
sarl
arpl
jecxz
cmp
and
jmp
test
sub
jecxz
ja
lcall
mov
stos
mov
sbb
hlt
movsl
and
xlat
sub
mov
loopne
loopne
or
aam
imul
cs
pop
mov
call
cmpsb
dec
cltd
cmp
dec
leave
scas
aaa
push
jmp
dec
and
test
mov
xchg
mov
dec
pop
mov
mov
outsb
idivb
lods
cmp
cmpsl
xchg
loop
loope
scas
pop
test
jge
push
sahf
pusha
xchg
xor
sbb
push
cmp
adc
mov
bound
jmp
lods
jnp
lcall
pop
xchg
xor
stc
out
xorl
aam
jmp
lods
jo
shlb
das
repnz
fiaddl
mov
stc
stos
inc
scas
xlat
gs
mov
sub
mov
and
and
pusha
lods
stos
jge
jmp
mov
jae
mov
mov
dec
cli
sti
ljmp
enter
cli
mov
in
or
sub
insl
xor
xor
iret
ret
jno
jbe
xchg
into
mov
ret
loope
iret
fcoml
sub
ffreep
sar
test
mov
push
call
jo
out
cmp
mov
in
and
rclb
and
cltd
ficompl
adc
fistps
cmpsb
out
push
xchg
sbb
xchg
aaa
sub
add
cmc
hlt
jne
les
lock
ret
ret
cmp
or
add
and
cli
xlat
sub
push
or
ja
cmpl
xor
int
xchg
call
sub
pop
adc
and
push
ss
test
pop
add
fwait
out
test
addr16
mov
fnstsw
dec
cmp
mov
xchg
movsb
xor
repnz
icebp
pop
popf
js
ret
sbb
sbb
sub
push
push
cmp
cmp
subl
shlb
mov
scas
fs
stc
jmp
ror
clc
add
push
sbb
test
push
sub
aaa
add
jge
push
pop
adc
sbb
sub
mov
outsb
in
imul
jb
pop
dec
cli
mov
es
cmp
cltd
xorb
mov
push
mov
addr16
mov
cmpsb
loope
ret
and
jnp
pop
mov
and
jecxz
add
aaa
stos
fincstp
xor
adc
mov
jbe
stos
test
mov
xor
lret
mov
in
push
stc
cmp
jb
aam
adc
lahf
cli
push
cli
sub
mov
enter
scas
pop
fwait
in
adc
aad
add
dec
in
mov
sbb
mov
mov
jmp
jg
push
cltd
loopne
loope
ret
pushf
ds
xchg
push
imul
mov
rorb
stos
cmp
add
mov
and
ss
jle
push
jge
mov
xor
mov
loope
or
xor
pop
mov
mov
in
nop
push
add
or
push
cwtl
inc
loop
mov
shlb
cs
movsb
adc
fiaddl
sub
jb
jl
mov
popf
pop
push
movsl
mov
xchg
leave
je
mov
and
push
xchg
adc
xchg
fisubs
mov
pop
lret
mov
int3
jge
adc
mov
mov
or
jnp
push
push
outsb
imul
and
push
in
push
cmpsb
cmc
ret
dec
cmpsl
ja
leave
insb
sbb
test
xor
icebp
call
divl
shrb
int3
in
das
mov
divl
mov
mov
jg
scas
stos
push
hlt
xor
in
lahf
repz
imul
xchg
xchg
lcall
or
pop
fmul
scas
lds
or
inc
and
in
testb
jl
fcoml
mov
enter
mov
cld
push
sahf
cltd
shl
hlt
and
cmp
mov
push
popf
jns
inc
mulb
pop
rolb
data16
sbb
lock
cmpsl
push
adc
loop
xor
int
xlat
mov
mov
les
mov
sub
insl
bound
in
mov
dec
fidivrs
jmp
pop
jmp
and
dec
inc
mov
fs
aas
adc
in
xor
push
pop
inc
xchg
mov
and
test
inc
enter
xchg
mov
or
js
iret
aas
push
cmp
inc
dec
lea
cwtl
xchg
popl
dec
shl
and
repnz
jle
mov
xchg
scas
les
iret
jne
push
push
jle
and
xchg
mov
data16
mov
adc
movsl
mov
mul
scas
loope
mov
mov
mov
xor
leave
adc
push
pop
mov
aam
aad
and
cbtw
add
bnd
and
leave
sahf
mov
call
push
fisttpll
dec
out
dec
pusha
lock
or
popa
cmp
add
lret
test
sub
test
inc
jno
lock
jg
inc
cltd
out
inc
addb
pushf
jecxz
cwtl
inc
and
jmp
mov
inc
xchg
pop
out
mov
pop
push
cmpsb
pop
aad
js,pt
stc
push
loope
mov
jo
mov
dec
sbb
adc
sahf
or
test
in
push
and
pop
fsubrp
cmp
add
cmc
xor
bound
xor
mov
or
xorb
iret
ret
popa
pop
bound
sub
icebp
aas
and
aad
rcrl
int3
dec
sub
aaa
fildl
lock
int
jecxz
adc
add
xchg
cwtl
add
stos
mov
lret
cmpb
push
pop
jge
adc
inc
xor
sbb
push
in
sahf
inc
cmp
in
jmp
mov
iret
pop
jo
inc
mov
mov
mov
call
add
adc
ror
cs
xor
jb
dec
cmp
imul
pusha
and
repz
mov
xchg
cwtl
xchg
fistps
adc
sub
in
xchg
and
pop
icebp
cmp
jo
jmp
mov
loopne
xchg
xlat
add
sub
mov
addr16
sbb
aas
mov
dec
xor
and
sbb
mov
test
cmp
mov
and
sbb
add
scas
jns
ja
mov
cmp
adc
add
jno
repnz
push
adc
pop
push
adc
mov
inc
movsl
aas
out
mov
mov
adc
cld
sub
sbb
cmp
out
jns
mov
inc
sub
inc
adc
cmp
leave
or
imul
call
cmp
xor
xor
imul
dec
pushf
fidivl
in
shll
jg
scas
xchg
pop
mov
cs
or
arpl
dec
cmp
cmpb
cmp
adc
inc
push
mov
pop
fisttpl
dec
inc
ss
aad
inc
and
xor
icebp
inc
jne
cld
or
mov
cmpsb
insl
sub
scas
mov
inc
jns
pop
pusha
add
inc
insb
movsl
dec
xchg
lret
stos
mov
in
fxch
popa
icebp
and
xlat
add
fidivs
test
mov
movb
dec
jge
mov
daa
lock
mov
into
mov
pop
push
imul
call
fcoms
movsl
xorl
rep
cmp
movsb
sub
mov
mov
dec
xor
dec
test
cmp
adc
mov
or
insl
fsubs
test
jo
das
push
xchg
je
mov
stos
cmp
or
fs
jo
dec
xor
ret
je
leave
push
dec
dec
rcrb
adc
cmp
mov
into
ja
je
cld
mov
mov
scas
into
push
into
adc
aam
imul
imul
bound
mov
enter
cmpsb
cmc
push
pop
mov
pop
les
lock
sahf
cmp
test
mov
int
aam
imul
aam
repz
dec
mov
dec
inc
dec
jo
call
cld
mov
add
push
pop
and
mov
inc
add
rorl
pop
sbbb
pusha
dec
mov
fbstp
lods
pop
dec
ljmp
arpl
mov
mov
aas
mov
mov
daa
scas
mulb
adc
mov
std
loop
ror
lcall
repz
je
mov
xchg
aad
ret
sub
cmp
or
sbb
cltd
push
cmc
subb
aas
les
mov
repnz
ds
cmp
fwait
ds
stos
fsts
repnz
mov
or
add
or
sbb
mov
scas
fsubl
lods
xchg
add
xor
adc
fisubl
xchg
mov
pop
data16
mov
sbb
xchg
into
and
pop
dec
scas
xchg
and
jmp
sti
adc
jg
mov
mov
mov
mov
jnp
paddd
jb
bound
lcall
subb
gs
pop
jb
adc
lret
jecxz
mov
adc
mov
push
inc
jle,pt
mov
fisubrl
mov
sahf
pop
sahf
outsl
fisubs
addl
jbe
jae
inc
add
xor
adc
rorl
mov
and
scas
sti
jg
das
rcl
inc
cli
dec
icebp
not
jecxz
jnp
and
outsl
ficoms
lahf
cs
lock
popf
jnp
pop
shl
cld
out
ja
mov
vandnps
jns
in
push
jb
cmc
lea
repz
xchg
repz
mov
cli
mov
rcrl
pop
sbb
push
ljmp
lods
adc
jo
push
xlat
xor
xchg
insb
and
lret
pop
loope
mov
in
pop
fs
dec
aam
imul
xchg
out
dec
mov
fldt
pop
test
nop
shrb
popa
jb
fisttpll
sub
rolb
outsl
dec
xor
mov
xchg
in
std
add
cmp
or
and
cmp
mov
mov
or
out
sbb
cmp
jmp
push
mov
les
es
lcall
add
in
mov
add
cmpsb
and
pop
in
filds
or
adc
rorb
repnz
ds
jmp
and
mov
mov
into
dec
ds
adc
pop
rcll
sahf
xorl
sub
fsubs
jne
mov
inc
in
add
jnp
out
add
mov
lds
sahf
arpl
or
push
shll
dec
out
push
stos
xor
out
lret
fsubrs
movsl
add
cwtl
out
mov
enter
aaa
leave
lods
faddl
fnstenv
test
jp
lret
add
pop
clc
push
sub
loop
sub
dec
jb
adc
mov
push
mov
lock
hlt
into
cmpsb
scas
push
and
mov
push
stos
sub
or
movsb
aaa
mov
dec
xor
repnz
andb
mov
and
shrl
mov
adc
fs
mov
push
lea
dec
dec
fstpl
insl
xchg
out
je
rol
pop
ret
test
int
cmp
adc
push
and
int
cmp
hlt
rcrb
push
xchg
jg
mov
mov
scas
repnz
xchg
ret
push
icebp
rclb
out
lea
testl
popa
fstps
cmp
inc
add
mov
add
jecxz
outsl
stc
dec
subl
dec
mov
in
rorb
ja
insl
sbb
mov
sbb
push
add
adc
ja
inc
mov
sahf
adc
lahf
enter
pop
cmc
pop
mov
stos
out
pusha
mov
add
shrl
fsubrp
dec
popf
inc
mov
sub
ret
xor
mov
adc
adc
pop
cmp
cmp
fbld
and
xchg
mov
or
les
repnz
imulb
call
mov
enter
sarl
loope
adc
xchg
jno
inc
je
adc
pusha
lods
jmp
out
dec
jbe
sub
or
mov
mov
js
dec
mov
and
stos
imul
addr16
mov
jg
lods
sahf
jmp
pusha
jl
movsbl
xchg
pusha
fwait
fwait
mov
insb
mov
movsb
and
mov
pop
fwait
stos
test
das
lcall
lock
jbe
jg
fstpl
shl
orl
test
xchg
loop
ret
loopne
sub
mov
mov
insl
and
sbb
lds
imul
in
sbb
out
fistl
stos
movsb
imul
xchg
push
aam
xchg
scas
shll
and
push
imul
sub
mov
or
pop
push
xor
loope
in
sub
cmp
mov
popa
les
clc
pop
es
pusha
xchg
stos
and
mov
aaa
xor
cmp
gs
cmp
mov
into
adc
adc
pop
gs
adc
inc
loopne
jne
mov
out
out
rcr
je
fnstenv
adc
stos
ret
jmp
je
dec
mov
pop
test
add
inc
mov
jne
and
in
lahf
insb
mov
jns
inc
inc
int3
dec
fiadds
or
jg
mov
addr16
jbe
pop
inc
cmc
inc
imul
and
xchg
or
lods
cmpsl
pop
mov
xor
mov
sub
je
dec
inc
aaa
in
sub
xchg
mov
icebp
inc
rcrb
mov
dec
fistps
aam
xor
aam
lock
subb
rcrl
lds
shl
loop
lods
cli
jmp
xchg
mov
push
sti
pop
pop
dec
push
leave
andb
repz
lret
daa
mov
loope
add
fisttpll
push
daa
sbb
cmp
fdivrs
jae
js
mov
mov
xchg
jg
inc
mov
mov
mov
sbb
add
mov
push
mov
adcl
xor
fildl
xor
rorb
shlb
pop
jp
aaa
mov
sbb
xor
xor
das
cmpsb
ret
imul
and
pop
js
gs
rolb
adc
into
fimuls
test
or
out
and
add
add
xchg
pop
ds
and
std
stc
xlat
nop
sub
out
mov
mov
push
hlt
xor
sti
in
lods
shll
fldt
in
xchg
sahf
sub
push
out
adc
push
mov
xchg
sub
movsb
push
inc
imul
jb
test
fcomps
icebp
cmp
iret
xchg
mov
xchg
mov
xor
dec
mov
push
mov
and
push
pop
mov
stos
pusha
pop
lock
jecxz
mov
les
sbb
inc
insl
xor
jno
mov
sub
mov
out
sbb
xchg
mov
dec
push
ret
into
ss
pop
xor
mov
push
cmpsb
inc
xchg
addr16
enter
das
fistps
cmpsb
stos
fisttps
ja
jb
fwait
xor
mov
xlat
ja
sbb
and
ja
loopne
repz
or
sbb
in
cmp
jae
xchg
push
ja
pop
sub
pushf
sub
and
mov
cmp
mov
xchg
xchg
xchg
pop
jle
adc
test
sbb
xor
inc
loopne
and
mov
jns
lock
in
mov
cld
mov
inc
adc
xor
mov
push
lret
add
or
aaa
clc
sbb
pop
jo
dec
push
cmp
mov
jae
adc
leave
leave
icebp
and
xchg
cmp
xchg
out
insl
sub
push
pop
cmpsb
inc
ffree
or
push
icebp
in
xor
cmpb
cmpsb
insb
popl
sti
push
call
mov
icebp
jl
cmp
pushf
push
int3
ja
incl
fcoml
stos
cmp
sub
and
inc
lahf
mov
fcomi
gs
nop
jb
jae
inc
push
xorb
add
sbb
stc
xor
push
push
test
mov
jb
or
and
mov
push
mov
lcall
rolb
pop
jnp
cli
sbb
cwtl
call
ja
mov
mov
mov
jmp
in
cmp
add
icebp
inc
icebp
pop
popa
or
out
xor
out
out
inc
adc
dec
push
mov
insb
out
and
adc
jns
mov
push
sbb
dec
jecxz
dec
lea
sub
lods
cmp
mov
push
mov
sbb
fwait
sbb
sarl
xor
adc
jo
mov
int3
adc
and
in
and
ss
rorl
les
mov
lods
adc
pop
lret
andl
xchg
add
adc
in
scas
cmp
cld
push
push
rcrl
lods
mov
dec
inc
bound
into
jo
xchg
stos
daa
dec
bound
imul
mov
in
adc
mov
mov
cmpsb
pop
push
or
pop
inc
jb
and
or
rcrl
mov
push
or
call
int3
decb
arpl
flds
cmp
sub
lods
jp
and
lret
popf
mov
in
neg
mov
cmpl
or
and
mov
leave
fimuls
mov
push
cmpl
lock
mov
jmp
rcll
and
sahf
into
add
pop
sub
inc
mul
xor
push
dec
mov
xchg
sbb
mov
aam
mov
and
xlat
dec
js
jl
divl
sbb
out
pop
adc
fldcw
mull
lret
out
imul
jbe
push
data16
xor
into
ss
and
jmp
lahf
fists
aam
mov
xchg
mov
pop
shlb
lods
xchg
add
data16
dec
clc
xlat
rcll
ret
or
mov
or
int3
jo
sbb
ja
sbb
incb
push
outsb
push
pop
jecxz
add
pusha
fstpt
negb
stos
push
mov
push
in
shrl
or
cmp
sub
sbb
dec
ret
cmp
inc
push
outsb
gs
push
pop
leave
pop
sbb
and
test
pop
out
mov
rcll
or
idiv
mov
test
xor
stos
rolb
das
cmpsl
in
push
mov
mov
int
adc
mov
pop
xor
pop
pusha
inc
jne
pop
xor
mov
std
outsl
insb
xchg
leave
fdivs
add
scas
push
xor
add
jae
insl
incb
out
cmp
or
adc
lds
pop
xchg
cli
xchg
ret
and
negl
xor
mov
add
mov
dec
repnz
out
imul
insl
das
push
in
mov
or
inc
cmpsl
xchg
mov
jnp
and
nop
xchg
cmp
xchg
sbb
and
and
repnz
sub
mov
scas
mov
jns
inc
pop
fmuls
mov
fnstcw
dec
gs
cmc
cmp
xor
aas
stos
adc
sub
push
icebp
imul
insb
sahf
das
xor
clc
out
push
sar
filds
ds
popl
push
adc
xlat
je
lea
jecxz
rol
stos
inc
mov
jno
repz
outsl
cmp
cmpsl
add
and
push
shl
movsl
jae
mov
jo
imul
jmp
mov
and
inc
test
push
jl
mov
dec
cmp
and
aam
inc
rorb
mov
jns
fwait
cmp
mov
in
out
sub
dec
mov
add
mov
shll
dec
xchg
shrl
xlat
jns
pop
sub
add
push
nop
jl
pop
mov
mov
int
ljmp
std
fildl
sbbl
push
orb
mov
repz
sbb
ret
push
fmull
pop
cmp
jae
pop
cld
cmpsl
stos
loopne
icebp
push
pop
ret
cmpsl
loopne
mov
add
add
sbb
roll
popa
aam
lods
loop
xor
lahf
jp
dec
cmp
mov
ret
decb
mov
lahf
popa
movb
cmp
andb
je
xor
shrb
sub
adc
cmp
jecxz
push
cli
out
insl
jmp
xchg
dec
sub
fwait
jb
xchg
test
jle
push
xor
out
pop
sahf
pop
adc
mov
push
clc
mov
fwait
dec
xchg
push
enter
pop
pusha
dec
rcrl
inc
pop
rcll
mov
cmpsb
inc
scas
xchg
pop
push
addb
pop
xor
cmp
shrb
jae
adc
jg
push
jg
or
xchg
xchg
add
outsb
mov
rdmsr
js
cmpsb
sti
pop
in
dec
xchg
xchg
decb
sub
or
sbb
shrb
fs
cmp
mov
jbe
lods
out
mov
icebp
out
mov
xchg
sub
mov
stc
movsb
jno
mov
icebp
jmp
fisubl
lahf
and
dec
mov
popf
inc
leave
xchg
sti
int
loop
rorb
xchg
jb
or
jb
push
data16
mov
lods
jmp
push
push
ret
daa
test
in
lret
sbb
dec
or
test
lods
add
xchg
jmp
jbe
push
mov
sbb
clc
pop
lods
adc
push
sub
pop
pop
out
push
movsl
cld
lock
pop
cmc
call
push
adc
rcl
sub
mov
jnp
in
jno
pop
pop
xor
ljmp
pop
popf
pop
inc
rcrl
test
addr16
pusha
add
out
or
dec
sbb
mov
jecxz
jbe
out
fildll
add
scas
lods
add
inc
ja
or
imul
jns
movsb
and
lds
and
mov
mov
adc
scas
xor
cmpsl
push
test
outsl
jg
lret
outsb
sti
das
lock
adc
jmp
js
cmp
cs
stos
mov
mov
pusha
fisubs
pop
lcall
mov
mov
test
inc
shlb
andb
jmp
arpl
cmpl
mov
mov
dec
and
pop
or
add
test
jle
nop
inc
mov
scas
dec
data16
mov
out
sub
sub
mov
pushf
mov
mov
inc
mov
test
inc
stc
add
xchg
push
sub
popl
out
lock
dec
in
cmp
andb
test
mov
stos
iret
call
pop
in
sbb
jnp
and
lods
dec
sub
mov
movlps
loop
inc
lcall
adc
sbb
pushf
xchg
cmpsl
daa
rclb
movsl
lcall
xchg
or
fldt
xchg
cwtl
sahf
pop
mov
adc
dec
aaa
xchg
andl
test
adc
push
pop
hlt
push
out
rcrl
fdivrl
popf
pop
bound
cmp
inc
push
cwtl
xchg
pop
roll
imul
in
pop
inc
add
mov
testl
jle
push
pop
adc
insl
sub
push
gs
sti
hlt
les
xor
hlt
mov
and
inc
sbb
jns
inc
jecxz
xchg
sbb
dec
shll
jb
jb
leave
fisubs
scas
jmp
jp
aaa
cmp
in
mov
out
dec
sub
and
shrb
inc
std
bound
pusha
dec
sub
imul
push
xor
std
incl
mov
mov
popa
cmp
lret
pusha
pop
ret
jbe
adc
insb
mov
xchg
stos
or
xor
loop
cmpsb
cmovns
out
jno
adc
cwtl
mov
fdivrs
dec
rcl
xlat
mov
and
cli
sti
ljmp
sub
inc
loope
pop
aaa
adc
xchg
pop
mov
adc
add
mov
frstor
scas
cmpl
and
cltd
cmp
push
fwait
out
sbb
lahf
cld
scas
inc
push
jne
mov
mov
test
xchg
sub
mov
mov
mov
jmp
add
sbb
jl
push
test
mov
xchg
aaa
imul
lea
dec
mov
push
int
xor
and
push
sub
jbe
shrb
iret
cmp
add
and
or
pop
sbb
loopne
inc
or
cmp
rorl
ror
sbb
mov
iret
add
inc
dec
in
aaa
aad
loop
sbb
xchg
fcompl
adc
call
je
imul
dec
sub
pop
movsl
adcb
loopne
sbb
lods
loopne
xchg
and
hlt
mov
mov
out
jns
stos
fisttpl
fistpll
inc
popa
mov
lock
cmp
push
or
lea
icebp
loopne
lock
mov
sub
mov
mov
cmp
notl
fmuls
mov
data16
lcall
es
sub
loopne
fwait
rcrb
dec
mov
add
mov
mov
out
es
lcall
popf
cmp
int3
es
test
hlt
jne
cmp
ret
stos
fdivr
ljmp
sahf
scas
popf
scas
test
loopne
or
cli
loopne
push
pop
push
mov
test
jp
dec
sbb
push
push
jl
mov
adc
xor
mov
repz
or
sbb
mov
movsb
jmp
or
into
fld1
xchg
xchg
nop
test
or
sti
sti
or
lgs
add
jl
out
sahf
mov
cltd
jecxz
lods
sub
push
gs
sbb
inc
shl
cmp
lods
push
and
scas
imul
lds
xchg
jb
daa
pop
fcompl
jmp
div
cld
jge
insl
jmp
jecxz
or
popa
das
outsl
mov
std
add
adcl
cld
xchg
test
ljmp
mov
std
popa
das
pop
sbb
imul
addb
mov
cmpsl
pop
adc
ds
cli
mov
repnz
cmp
fmuls
and
ss
call
push
dec
xor
scas
cmpsl
insl
hlt
xlat
ljmp
jg
andl
and
gs
rorl
fdivr
dec
ret
lock
fstpl
jo
push
push
test
add
movl
xchg
ss
aas
or
jne
sub
or
shlb
jl
or
rcrl
pop
xor
aaa
iret
inc
nop
cli
enter
mov
mov
dec
push
push
add
push
inc
jae
fldt
ds
mov
cs
mov
insb
mov
add
sti
rcl
jecxz
dec
ljmp
arpl
insb
into
mov
mov
mov
sbb
xchg
adc
hlt
aaa
dec
lds
je
ret
pop
in
imul
mov
ds
in
pop
mov
mov
cwtl
es
sub
dec
sbb
inc
mov
loopne
dec
mov
sahf
pusha
cli
stos
mov
mov
lcall
mov
mov
test
adc
test
in
ret
es
push
pop
js
xor
mov
mov
xchg
mov
repz
subl
rorl
sbb
repnz
or
mov
mov
pop
jb
xor
mov
cs
add
sbb
mov
xor
lods
sahf
imul
adc
stc
push
mov
lods
mov
mul
mov
je
and
aaa
push
xchg
mov
pop
je
xor
in
push
push
mov
jnp
popa
push
pop
inc
ss
fsubs
sahf
filds
push
test
popf
imul
bound
cmp
push
rcl
mov
jno
jl
push
inc
jo
mov
data16
xor
repnz
cmp
fwait
mov
mov
int3
aaa
shl
jmp
js,pt
adc
int3
mov
sahf
outsb
inc
pop
inc
mov
mov
movsb
mov
outsb
mov
push
push
aas
int3
iret
cmpsb
bound
add
test
xchg
sub
jl
dec
inc
cmp
je
cmpl
jecxz
out
repz
hlt
imul
or
lea
cmpsl
arpl
dec
cmp
out
addb
jp
stos
lods
rolb
sub
push
dec
outsb
add
leave
inc
out
cmpsl
gs
pushf
lcall
sub
mov
and
int
adcl
test
mov
fadds
jno
pusha
jo
adc
aam
cmp
rcrl
push
sub
fnstcw
cvtps2pd
and
ds
test
sbb
xchg
inc
ljmp
xor
jl
stos
dec
pop
dec
jae
ret
fldl
cli
call
es
inc
loope,pn
addb
cs
fldcw
inc
ffree
cltd
push
in
les
repz
pop
xchg
or
inc
mov
ljmp
push
lret
jnp
pop
inc
jae
pop
dec
mov
fcomi
enter
xchg
cltd
sub
pop
nop
ret
jg
push
and
xlat
out
ret
imul
dec
push
and
mov
insl
lea
mov
inc
cmpsb
jnp
cmp
mov
adc
repnz
lods
pushf
and
movsl
std
add
push
lcall
xor
adc
or
fisubrs
add
xchg
shl
leave
sbb
sub
cmp
rorl
lods
xchg
mov
daa
and
mov
movsb
xchg
int3
lret
xchg
adc
ljmp
icebp
sub
pop
lret
xchg
push
in
stc
cmc
sbb
std
or
mov
pop
mov
ficomps
jmp
test
lods
pop
xchg
clc
ret
and
in
out
xor
add
jmp
jae
push
nop
jmp
leave
std
or
jg
mov
dec
pop
call
adc
in
sarb
inc
mov
mov
into
jne
enter
js
rcrb
push
mov
adc
stos
shrl
mov
mov
daa
mov
mov
jecxz
sbb
popa
mov
outsb
xor
stos
xor
lret
jmp
or
or
push
cmc
call
and
in
lret
insb
pushf
loopne
push
std
lret
jb
jno
fucomi
xchg
adc
enter
pop
movsb
xchg
sbb
into
movsb
in
pop
inc
xchg
repnz
mov
sbb
jecxz
mov
mov
pop
dec
sbb
inc
adc
inc
xor
fidivs
jle
sbb
jle
sahf
or
scas
jbe
js
cmpsb
push
or
incl
mov
arpl
daa
cmp
stos
adc
fdivrl
addr16
xchg
mov
lds
pop
or
jge
mov
mov
imulb
mov
fisubl
mov
lea
sbbb
dec
out
xchg
dec
or
lcall
imul
jecxz
jbe
pop
cmpsl
jb
outsb
rcrb
cmpsb
add
or
subb
push
push
or
cmp
out
clc
or
inc
jno
cmp
lret
in
jle
push
ja
imul
shll
fs
mov
testb
aaa
stos
ret
mov
adc
das
cld
sbb
add
xchg
iret
or
jge
shl
jge
add
clc
data16
adc
pcmpgtw
ret
mov
scas
roll
gs
add
xor
mov
in
lcall
add
ss
std
jl
pop
call
jb
lret
stc
xor
ljmp
js
shr
adc
shlb
cmp
popf
movsb
sbb
out
sarl
and
cld
fstps
daa
sti
fisttps
das
outsl
test
and
out
dec
inc
mov
mov
out
psrld
std
sti
mov
fisttpll
mov
je
jae
add
js
mov
pushl
stc
jne
xlat
mov
imul
jns
out
add
mov
dec
dec
adc
pusha
or
cmc
cmp
mov
xor
mov
mov
jnp
add
mov
or
add
push
xchg
xchg
push
gs
xchg
cmp
pop
mov
mulb
or
aam
adc
inc
std
lret
imul
mov
mov
xor
frstor
and
test
mov
ja
lret
or
inc
mov
repnz
mov
add
movsl
fimull
and
mov
fisubrl
inc
jmp
stc
sbb
cmp
xchg
dec
mov
inc
and
inc
nop
mov
mov
das
mov
fwait
xlat
or
xchg
daa
idivl
insl
xchg
add
call
pop
xor
mulb
inc
ret
sbb
repnz
mov
rol
repnz
push
push
push
aaa
dec
adc
mov
push
mov
repnz
sbb
xchg
jle
pop
dec
in
xor
jp
inc
inc
xor
inc
stos
ja
jns
cs
inc
out
jle
cld
mov
shrl
popa
movsl
mov
xor
sub
in
and
fld
lret
test
jp
ret
and
sbb
insl
jge
inc
or
aad
inc
dec
arpl
push
push
and
push
push
add
pop
push
cmpsb
fldl
std
mov
movsb
cmp
arpl
adc
cmpsb
push
push
xlat
jmp
adc
in
stos
jecxz
push
xor
mov
push
lock
mov
lods
aas
outsb
das
testl
or
outsb
cmpsb
in
pop
dec
add
sbb
imul
xchg
loopne
je
inc
sbb
xor
cmpxchg
dec
mov
repz
inc
mov
inc
xchg
jns
mov
outsl
mov
lock
add
sbb
mov
xchg
jae
roll
ja
fcmovu
pushf
mov
xor
push
cmp
lods
fcmovne
and
push
xchg
mov
jae
and
in
es
add
pusha
mov
xchg
mov
and
enter
out
outsb
sbb
mov
mov
rcrl
sahf
ss
mov
push
push
dec
jns
jb
in
and
mov
fdivp
pop
ja
loope
dec
loop
mov
dec
sbb
mov
in
mov
xor
out
dec
fcomip
lcall
daa
fs
cmp
rcrb
sti
add
xchg
enter
xor
dec
gs
repnz
dec
sahf
and
pop
imul
and
movsb
sub
jecxz
into
mov
jmp
testb
in
inc
push
add
cmpsb
jno
jmp
and
dec
push
cltd
sbbb
inc
mov
punpckhwd
pop
xor
mov
insl
mov
rolb
or
std
mov
loopne
sbb
cmp
jno
dec
cmp
movsl
loope
dec
mov
imull
mov
cmp
xchg
lret
sub
pop
ljmp
scas
scas
mov
bound
sbb
inc
jecxz
cmpsl
mov
xlat
out
test
push
movl
je
lahf
mov
ret
mov
dec
add
es
por
mov
adc
jbe
mov
cmp
popf
dec
pop
mov
test
sub
xchg
js
mov
lret
mov
sub
adc
daa
imul
and
icebp
rcll
and
jns
repz
fsubrs
dec
inc
sbbl
fmull
popf
dec
mov
fisubrs
pop
andb
add
fs
inc
inc
call
push
push
stos
cmpb
jle
out
push
push
out
push
sti
stos
xchg
subb
pop
hlt
lock
push
dec
lods
mov
or
push
pop
aas
sbb
or
inc
push
cld
or
js
inc
or
sahf
cld
shrb
cmp
inc
pop
inc
mov
push
je
xchg
test
cmp
cli
movsl
jnp
adcl
cmp
dec
lret
and
fucomp
pop
or
iret
mov
push
jle
push
mov
mov
xor
gs
or
cmp
push
test
pusha
daa
xchg
sub
pop
mov
cwtl
and
xor
inc
loope
ret
cmpsl
js
cltd
enter
shlb
lret
stc
scas
shrl
jns
mov
pop
enter
mov
jnp
gs
xorl
stos
shrb
movzwl
insl
mov
adc
jne
mov
in
subl
push
popl
popa
aas
lock
leave
call
adc
or
ret
jp
or
mov
icebp
add
mov
les
xchg
fistl
sub
imul
dec
mov
pusha
inc
ja
mov
je
adc
xchg
bound
jb
and
and
div
adc
jns
ret
pushl
test
jp
fidivl
fldl
xchg
jns
jmp
pop
dec
sub
jle
popa
insb
dec
popf
js
or
jmp
push
xlat
addl
push
xchg
mov
insl
aam
or
jmp
lods
dec
out
mull
mov
sub
icebp
shll
xor
add
int3
icebp
sbb
jp
mov
shl
data16
js
rcll
push
adc
xor
xchg
pop
rol
xlat
aam
loope
pop
dec
hlt
cld
arpl
aas
mov
sbb
out
dec
add
insb
cltd
pop
testb
jl
insl
int3
lods
xchg
push
stos
pop
les
mov
inc
cmp
xchg
repz
push
ret
pop
jle
cmp
pop
imul
push
sub
and
mov
popa
ja
jg
roll
cmp
sbb
adc
inc
ret
sbbb
insl
cmpsb
in
imul
mov
or
sub
and
dec
cmp
fstl
xchg
mov
ljmp
cld
lods
jo
xlat
repz
add
mov
ds
fs
sahf
in
dec
out
jl
xor
pop
aas
jmp
mov
mov
pushf
std
mov
mov
push
test
sub
in
cs
outsl
call
popa
scas
mov
mov
pop
dec
pop
lea
in
insl
bound
mov
add
mov
mov
xchg
bound
test
cmpb
jl
outsl
push
stos
js
sbb
mov
xor
out
inc
cmp
mov
leave
das
push
push
adc
aam
jg
add
hlt
sub
cmova
xchg
push
sub
mov
outsb
sbb
cmp
nop
xchg
lret
add
push
je
mov
mov
jg
fs
imul
mov
xor
jns
push
cmpsb
out
xchg
fs
mov
imul
mov
out
adc
scas
test
hlt
repz
mov
lcall
push
mov
push
ss
test
enter
pop
jge
sub
xchg
xor
es
pop
lahf
inc
sub
mov
into
call
xor
ja
fnstenv
insb
popf
addps
pop
bound
es
jl
xchg
inc
jbe
stos
pop
jb
bound
fnsave
incl
fimull
inc
ss
loope
mov
out
shlb
lods
fidivrs
and
xchg
add
orl
into
push
pop
xchg
out
ja
sbb
inc
aaa
stos
jne
lds
cs
test
in
mov
movsl
int
movsb
enter
dec
test
sbb
add
jnp
xor
cmp
jp
mov
inc
adc
jne
lods
add
cmc
pop
sub
push
and
lea
ja
movsb
in
and
xchg
jle
cmp
add
sbb
es
jecxz
pop
xchg
xchg
sbb
xor
pop
in
clc
loopne
mov
adc
xchg
imul
aaa
es
or
adc
cwtl
sbb
pop
mov
inc
mov
and
into
lret
push
inc
push
or
gs
subl
mov
scas
mov
mov
daa
jl
das
mov
lret
xchg
arpl
scas
and
pop
cmpsb
jno
sti
mov
or
add
daa
xor
inc
lahf
das
mov
mov
scas
sbb
pop
pop
dec
into
xchg
cmc
lahf
outsl
sti
lahf
dec
jo
dec
push
inc
loope
cmpb
std
lea
lods
jae
or
mov
int
dec
adc
ret
jg
mov
xor
mov
dec
pop
pop
mov
sbb
js
imul
popf
lret
push
dec
xchg
sbb
cli
testb
push
mov
movsb
cmpl
addl
addl
rcl
sbb
push
movsb
in
scas
pop
sub
je
enter
xor
xchg
pop
push
cwtl
sub
cmp
mov
inc
in
xchg
xchg
add
cmp
xor
pop
mov
jo
sub
loope
lcall
mov
cmp
lea
mov
std
movsl
and
mov
mov
jo
and
jp
sbb
pop
pop
imul
out
xchg
outsl
mov
neg
insb
pop
pusha
adc
jne
push
fsubl
jecxz
adc
fs
dec
ja
fsubs
cmp
js
and
xor
fistps
jbe
stos
pop
sbb
out
in
jne
bound
mov
ds
mov
xchg
mov
dec
out
mov
add
mov
sbb
adc
dec
mov
add
dec
adc
testb
sahf
ljmp
test
dec
mulb
pop
mov
pop
cwtl
cmp
in
clc
lds
jb
js
ja
inc
lcall
push
mov
nop
sub
and
stos
cmp
dec
cmc
fistps
lods
adc
repnz
dec
mov
clc
ret
xchg
mov
xchg
leave
sub
mov
or
dec
dec
push
arpl
testb
js
jne
inc
inc
mov
enter
push
in
in
sbb
mov
mov
loopne
xchg
fs
test
adc
sti
repz
sbb
jne
xchg
jp
inc
test
subb
pop
popf
mov
dec
mov
sub
mov
mov
mov
daa
std
test
pop
sbb
mov
test
push
sbb
mov
pop
inc
xor
pushf
in
xor
sub
inc
fisttpl
cmc
sbb
cmpb
es
sbb
je
push
jl
test
inc
mov
jae
lods
fistps
mov
out
cwtl
gs
roll
mov
adc
mov
push
cmpsb
dec
xchg
jae
lret
sbb
xor
push
cmp
hlt
jp
cmp
add
sbb
push
js
mov
stc
xchg
aad
push
cmp
movsl
inc
jge
xor
jg
jno
loope
test
dec
add
sbb
cmp
adcb
or
jl
cltd
call
and
cmp
mov
subl
in
fcomps
jecxz
pop
xor
jmp
lret
out
iret
add
push
xor
aad
add
dec
popa
sbb
dec
mov
mov
sub
mov
adc
and
shrb
add
dec
or
test
daa
stc
or
into
dec
jbe
push
insl
call
adc
mov
out
adc
fbstp
push
xchg
dec
sub
lahf
push
mov
cmp
addr16
test
inc
mov
mov
sub
add
lods
rorl
in
jb
jge
fldenv
sbb
hlt
mov
out
or
inc
xchg
push
adc
xchg
out
mov
decb
cltd
enter
imul
cmp
daa
and
icebp
loope
fnstenv
xchg
lret
pop
push
jns
jp
cmpsb
in
mov
push
iret
xchg
xchg
cmpb
out
xchg
push
jmp
cs
mov
add
fmulp
xor
outsb
cmp
or
notb
movl
dec
pop
dec
test
test
dec
and
cmp
sahf
mov
adc
mov
int3
ret
cmpsl
mov
mov
push
cmc
js
ds
sti
pop
inc
sub
dec
nop
adc
addl
rorb
dec
mov
push
cmp
rorb
cltd
jg
sbb
push
push
inc
mov
sarb
dec
aad
je
ljmp
mov
cmp
add
notl
mov
test
scas
ja
ds
xor
into
jmp
fstpt
movb
bound
push
divl
jne
imul
sub
notl
adc
ds
fildl
nop
push
aam
jp
scas
inc
fiaddl
movsl
mov
repnz
rorb
sbb
outsb
pop
out
cmp
sbb
test
sbb
into
mov
aad
dec
mov
xchg
push
movsl
sub
inc
cltd
sub
jnp
or
pop
int
jae
scas
das
subl
es
mov
and
mov
in
movsl
cltd
arpl
popf
ret
rolb
jle,pn
mov
pop
rorl
fimuls
sbb
add
cmp
mov
shrb
jbe,pn
out
jl
dec
inc
mov
sub
push
mov
aam
jbe
mov
cmp
xchg
jle
push
nop
mov
xchg
jge
je
jno
out
pop
dec
sarb
fstp
sbb
lcall
add
aad
inc
pop
testl
jb
repnz
lahf
imul
imul
andl
iret
push
loop
xchg
inc
jg
hlt
pop
mov
jno
lods
clc
cmp
test
jno
add
sub
jb
pop
scas
mov
flds
sub
mov
mov
lret
mov
int
dec
adc
mov
pop
dec
sar
lock
jg
lea
lock
std
mov
sbb
mov
pop
mov
jmp
rolb
fcompl
push
push
loop
negl
mov
mov
in
aad
cmc
sub
out
int3
ja
add
ja
and
stc
popf
add
cmc
add
push
cltd
xor
inc
dec
xchg
push
push
sub
test
add
xchg
push
lret
fcomip
mov
arpl
jne
fstl
pop
and
out
add
les
mov
jp
fwait
pushf
sbb
iret
push
insl
mov
pop
inc
movsl
test
inc
add
xchg
call
jae
push
dec
data16
stc
sub
mov
subb
mov
push
sub
and
aas
inc
repnz
push
std
popa
int
mov
adc
repz
inc
mov
ret
fsubs
addl
clc
leave
pop
and
stos
lahf
outsb
mov
gs
out
jns
or
pop
ret
clc
add
xor
jmp
adc
insl
mov
out
fwait
inc
jns
adc
xchg
cmp
movsl
dec
mov
cld
data16
sbb
mov
shrl
jbe
rol
outsl
sbbl
loope
dec
fidivl
mov
daa
adc
jnp
mov
sub
and
movsb
std
roll
aas
xchg
xor
xchg
push
and
insb
add
ss
mov
jae
and
fnstcw
or
into
xor
push
mov
push
pop
ja
cmp
pop
aas
stos
mov
mov
in
pop
jb
jp
call
sub
testb
sub
mov
rorl
inc
in
adc
adc
lret
aad
iret
mov
inc
adc
out
push
ret
lcall
mov
mov
push
jp
push
fs
dec
fnstenv
bound
add
ficoml
je
pop
hlt
nop
inc
out
jl
pop
mov
xchg
sbb
test
jae
mov
inc
cld
cwtl
jcxz
sub
or
add
sbb
cmc
and
dec
inc
and
jbe
shlb
and
insb
es
mov
jo
test
mov
lods
pop
or
rcrb
inc
das
xor
sub
bound
xor
cmc
sbb
jb
lods
mov
mov
or
sub
xchg
les
xchg
inc
cs
into
cmpsb
cmp
push
or
pop
mov
pop
loop
fisubrs
cmpsb
daa
hlt
shlb
mov
icebp
nop
in
outsb
mov
ljmp
dec
fists
and
cmp
cmp
add
add
push
cwtl
aam
xlat
rclb
cmpsl
pop
mov
dec
or
jl
shrb
jnp
ljmp
jae
xchg
sahf
jl
test
pop
sbb
aaa
out
add
mov
jbe
les
push
movsb
ja
jne
pop
jnp
dec
pop
fsts
sbb
je
lahf
inc
pop
push
mov
add
jo
rcrb
and
pop
and
addr16
vcmpps
sbb
cld
lea
mov
bound
pop
cli
mov
pushf
pop
push
lock
in
sbb
lret
pop
add
rorb
or
movsb
lods
iret
mov
cmp
jmp
shll
mov
fisttpll
out
sbbb
clc
or
in
dec
daa
push
pop
jge
xor
mov
lret
pushf
cmpsl
add
scas
jmp
push
mov
push
lahf
sbb
sub
iret
insl
sarb
pop
fwait
mov
jbe
stc
int3
adc
push
mov
add
pop
in
xor
and
cld
jl
xchg
or
rep
sub
mov
call
inc
sub
mov
adc
cld
sahf
notl
div
push
cmp
xchg
push
fs
add
ret
sub
mov
pop
jns
push
int
jae
push
lahf
loopne
lret
dec
mov
and
jl
aad
fwait
sbb
pop
or
push
cmpsl
mov
in
leave
push
data16
sbb
dec
loope
inc
enter
jp
mov
neg
in
jg
add
add
mov
shll
lock
shlb
push
sub
sbb
out
movsb
pop
sbbb
out
iret
repnz
add
push
mov
fdivr
scas
jnp
jno
repnz
mov
sarl
jmp
jp
movsl
sub
cmpl
loopne
daa
outsb
and
sub
pop
and
mov
ja
xor
pop
ficoms
push
ss
dec
outsl
data16
mov
mov
lock
xor
outsb
leave
xchg
imul
in
adc
push
xchg
sbb
xor
mov
sbb
daa
pushf
lea
jp
push
push
xor
lret
or
insb
insl
les
dec
sbb
test
mov
fbstp
add
repz
mov
inc
js
cmp
test
sbb
in
inc
pushl
pop
xorl
cmpsl
fmulp
js
push
xor
jnp
mov
std
inc
test
sti
loope
shrb
movsl
and
repnz
arpl
mov
adc
inc
or
fistpl
add
add
jbe
jne
std
inc
sarb
aad
shll
jnp
adc
loopne
cltd
mov
bound
or
je
aaa
pop
push
pop
dec
mov
incb
jp
or
pop
jo
cmpsl
push
pop
jno
mov
and
cld
pusha
mov
lcall
or
pop
js
imul
xchg
sbb
pop
mov
cld
out
flds
push
xchg
popf
js
fs
mov
xchg
sbb
sub
jl
cld
sti
add
loop
int3
xor
and
cmp
ljmp
enter
shrb
sbb
out
sbb
push
mov
rolb
xor
ljmp
jns
sub
cli
adc
mov
pop
cmp
mov
pop
and
lea
dec
movsl
mov
mov
jp
cmp
push
std
insb
mov
xchg
adc
jg
loope
adc
and
test
cmpsl
lods
out
mul
lock
push
inc
or
pop
mov
sbb
repz
add
push
arpl
popf
adc
inc
les
xchg
lods
imul
cwtl
mov
pop
mov
pop
xor
inc
mov
inc
or
aas
jno
shlb
pop
pop
rolb
jmp
inc
out
xchg
jb
mov
lcall
scas
dec
mov
fs
sti
xor
add
mov
cltd
scas
mov
adc
inc
and
sub
lret
jbe
or
in
imul
sbb
inc
inc
call
jns
stos
pusha
adc
dec
push
push
lcall
insl
adc
xchg
mov
push
push
arpl
enter
int
xchg
repz
push
leave
and
mov
mov
xor
fcompl
call
jne
dec
aam
insl
adc
rorl
pshufw
push
xchg
cmpsb
jae
xchg
pop
enter
in
outsl
jg
mov
fcmove
mov
dec
push
sub
pop
fists
jno
mov
ljmp
cmp
dec
cli
dec
sbb
sbb
pop
or
bound
in
jp
xchg
push
or
scas
or
sbb
sahf
sub
jl
jno
and
mov
sub
fadd
data16
outsb
js
cmc
inc
add
mov
out
cmp
xor
mov
outsb
cmp
jb
in
stos
dec
cmp
loopne
bound
push
pop
mov
inc
push
inc
int3
mov
leave
in
inc
push
mov
shlb
push
movsb
hlt
adc
sahf
push
inc
xlat
aad
cltd
mov
scas
jmp
dec
nop
cmp
and
mov
mov
jl
inc
dec
xchg
push
aad
test
inc
scas
or
push
popa
mov
std
push
test
sbb
push
sub
test
orb
int
push
in
lahf
pop
jle
loopne
aas
cmp
ds
adc
inc
push
sarb
ljmp
jge
fidivs
jnp
dec
push
sub
push
sub
lock
lds
mov
popa
outsb
fisttpl
jge
mov
scas
fsubs
jnp
pop
popf
dec
aas
loop
mov
jns
xor
mov
inc
xor
cmp
or
fsubrs
mov
jae
lret
push
arpl
pop
outsb
mov
pusha
icebp
sbb
mov
xor
lds
cmp
mov
mov
rcrb
and
movsb
in
jnp
jge
xchg
cmpsb
fistps
xor
adc
inc
and
mov
push
cwtl
jno
int3
jne
dec
mov
out
or
inc
js
push
ds
adc
sbb
sbb
sahf
pop
out
xchg
stos
aas
sub
mov
ss
aaa
sub
fwait
pop
push
mov
cmove
imul
ficoml
add
push
js
js
jg
aas
scas
mov
xor
or
pop
aad
rorb
push
adc
inc
ss
jmp
xlat
shll
sbb
inc
inc
pop
xor
mov
popf
jmp
mov
dec
push
xor
mov
adc
cs
or
push
mov
and
gs
fst
lahf
enter
adc
xchg
pop
pusha
push
pop
add
out
and
js
inc
cmpsl
add
xchg
in
xlat
push
mov
sbb
stc
mov
mov
push
mov
ret
and
sbb
pushf
es
sbb
jno
stc
mov
adc
test
jg
add
das
stos
div
jl
dec
ljmp
mov
outsb
dec
sahf
mov
sti
adc
mov
sbb
lret
imul
push
in
jne
je
stos
aas
out
adc
inc
jmp
jmp
inc
neg
mov
or
jo
cmp
lds
mov
cmpsb
outsl
aad
movsl
movsb
stc
mov
in
jb
add
xchg
outsl
mov
test
insl
mov
pop
decb
pushf
repnz
cwtl
inc
sbb
jp
in
xchg
mov
push
faddl
jns
mov
ret
shl
int3
repnz
fs
in
jb
add
fdiv
sub
cli
shll
aad
push
xor
fdivs
int3
or
imul
lahf
adc
pushf
jb
jnp
fmull
cltd
push
stos
add
popf
test
sub
in
push
jo
push
ljmp
inc
jge
cmp
cs
out
mov
or
lret
pushw
jmp
hlt
repnz
mov
mov
call
lahf
popf
and
mov
pop
sbb
mov
loop
fistps
push
mov
lods
push
fisttps
push
xchg
insb
adc
mov
and
sub
subb
push
js
push
adc
cmc
insb
mov
jg
xor
in
cwtl
jl
gs
fsubrl
incl
call
xchg
aam
cmpl
xchg
jbe
lods
std
fistps
out
and
add
hlt
dec
aam
aam
dec
pop
out
sub
mov
data16
pop
add
push
inc
add
scas
stos
jp
fsubrs
mov
xchg
std
faddp
fs
xor
inc
scas
in
xor
in
add
sbb
xorl
test
push
xor
mov
rcl
sbb
sbb
and
or
push
insl
fnsave
mov
movsl
mov
inc
xchg
sbb
roll
enter
xor
jb
shll
aaa
popf
jno
sub
push
iret
int
sub
adc
and
test
mov
add
in
loop
add
test
push
dec
iret
jecxz
sub
fucomp
mov
adc
movsl
nop
xor
nop
fsubrs
mov
jl
cmp
dec
syscall
cmpsb
cmc
bound
repnz
out
insb
pop
cli
das
mov
push
dec
xor
add
jl
push
pop
push
ja
arpl
shrb
insl
lods
shlb
mov
into
stc
and
inc
psubb
pop
inc
dec
je
inc
adc
inc
aas
mov
push
mov
sub
push
repnz
pop
fcmovb
cmp
push
lock
iret
jp
stos
push
inc
xchg
xchg
mov
mov
or
xchg
sahf
jecxz
pusha
stc
jno
push
repz
sbb
ljmp
pop
ss
in
xchg
sub
sub
clc
cmp
filds
lds
ss
adc
sub
movsb
fnsave
movsb
cmpsb
aad
test
fs
test
pushf
xor
dec
icebp
xor
popa
xchg
fadd
fiaddl
xor
dec
or
and
adc
sub
imul
stos
outsb
aam
imul
sahf
pop
mov
loop
in
jo
jg
cmp
cld
lds
push
xor
js
add
fdivp
sbb
leave
pop
inc
call
leave
ret
fdivs
lahf
lea
test
or
push
xchg
cltd
xor
jbe
cmp
cmp
ret
test
xor
int3
and
repz
pushf
aad
mov
push
leave
xchg
mov
pop
cmpsl
xor
mov
imul
or
push
dec
loope
call
dec
sub
sbb
mov
in
lock
mov
cmc
inc
inc
or
xlat
rcll
and
into
add
arpl
adc
cmp
mov
fisubrl
fxam
mov
stc
pop
xor
mov
stc
pop
push
setne
popf
xlat
jb
lods
outsl
in
dec
cmp
popf
push
push
cmp
gs
add
enter
and
xlat
mov
jnp
mov
add
clc
lcall
jg
nopl
ret
xchg
faddl
xor
icebp
dec
fisttps
gs
push
aam
aaa
jle
out
mov
push
sub
fldenv
pop
mov
jle
sub
movsb
sub
mov
test
add
jb
sub
jns
aam
dec
lahf
call
leave
jo
and
push
pop
pusha
fs
fwait
inc
fsts
mov
in
inc
in
mov
dec
out
jae
push
pop
mov
mov
adc
mov
arpl
pop
cmp
test
pop
jge
subl
out
inc
jp
insb
imul
aam
testb
mov
adc
mov
rolb
imul
pop
icebp
adc
stos
adc
outsb
fs
out
and
sti
mov
cmc
adc
vmovss
dec
xor
dec
mov
ret
jns
pop
enter
jge
lods
mov
mov
jge
and
cmp
push
dec
sahf
jno
mov
stos
call
xchg
lods
mov
push
push
jmp
push
repz
inc
shlb
cli
mov
sbb
loope
and
push
scas
femms
cmp
movsb
jl
int
ret
and
dec
fisubrl
stos
mov
adc
lret
mov
or
and
iret
in
idivb
or
fld1
test
and
js
mov
xchg
fstps
jno
push
aaa
push
inc
in
dec
ljmp
xor
xchg
push
sub
hlt
arpl
sbb
pop
sbb
test
pop
xchg
sub
out
dec
mov
push
jbe
incl
fs
lods
mov
loop
jae
mov
sbb
dec
dec
fldl
and
inc
jnp
sub
iret
adc
pop
push
fsubrl
push
in
in
jbe
mov
sub
aas
xor
add
fadds
and
rolb
mov
cmpsb
shl
movsl
jecxz
adc
add
movsb
push
cltd
mov
push
xorb
jns
iret
mov
iret
add
pop
pop
inc
jecxz
scas
sub
ds
je
imul
xchg
push
and
dec
or
sbb
scas
sahf
or
les
jno
andb
push
int3
adc
movsl
lea
xor
mov
adc
sbbl
mov
sahf
jmp
mov
sbb
in
lret
iret
fstl
jg
clc
stos
ds
je
pop
mulb
lock
fcompl
jmp
addr16
xchg
or
pop
repz
aas
push
sub
push
nop
cmpsl
lock
call
arpl
scas
push
jg
push
leave
push
cltd
gs
cli
iret
push
ja
mov
in
jge
ja
mov
fiadds
jecxz
sbb
flds
xor
xchg
sub
mov
adc
jecxz
jnp
pop
inc
mov
jne
cwtl
rcl
sahf
sbb
gs
pop
pmulhw
dec
or
popf
test
in
shl
lcall
cmpsl
orb
and
repz
test
or
or
mov
jmp
movsl
addl
insb
mov
fiadds
sti
cli
adc
ljmp
enter
pop
adc
mov
lea
rolb
fwait
cmp
or
cltd
dec
hlt
scas
jae
sbb
testb
movl
dec
mov
ss
cmp
cwtl
sub
mov
mov
ljmp
cwtl
movsb
pop
enter
loope
cmpsl
repnz
lock
xchg
jg
pop
das
mov
lfs
fsubl
das
mov
inc
push
xlat
jne
or
bound
cltd
lret
inc
div
xchg
xchg
cs
ss
fadds
xlat
sti
or
jmp
int3
fildl
mov
adc
js
dec
shrl
pop
pop
adc
sbb
sbb
mov
aas
mov
cmpsl
int
out
xchg
or
push
fists
push
lds
stc
xchg
insb
not
mov
jnp
and
test
sub
cmpsl
cmp
lret
or
sub
adc
xchg
cmp
mov
hlt
call
test
out
outsl
in
jl
xchg
outsl
ret
repz
paddw
add
jb
stos
mov
lret
rorl
mov
pop
cmc
ror
shlb
or
mov
xor
cwtl
add
push
or
pop
mov
sbb
dec
mov
imul
mov
xchg
mov
push
fidivs
shll
xchg
pop
dec
addl
push
xor
cmp
insb
je
xor
dec
push
mov
mov
cwtl
int
test
aad
in
stos
and
loop
outsl
dec
sbb
les
cmp
iret
pushf
stos
sub
dec
stc
rolb
lods
xchg
pop
insb
mov
dec
mov
ficoml
dec
sbb
xchg
test
inc
bound
addr16
sbb
push
cvttps2pi
push
mov
outsl
inc
fimuls
dec
in
data16
cmp
pop
xchg
lds
imul
mov
add
inc
sar
mov
bound
mov
xchg
mov
mov
jmp
imul
inc
dec
faddl
insl
aaa
cltd
cltd
and
jbe
addl
push
in
sub
mov
fmul
mov
sti
xchg
add
jecxz
int3
jg
dec
xchg
push
mov
mov
dec
mov
pop
repnz
inc
xor
sub
mov
cltd
mov
xor
pop
jae
mov
aas
rclb
xchg
pop
loop
sub
sbb
ja
adc
cmpsl
sbb
roll
xorl
cmp
xchg
lods
pop
ljmp
sbb
push
addr16
bound
jbe
fisubl
or
rcll
test
xor
test
cmp
pop
out
xchg
cmp
mov
xlat
sub
out
or
popf
jne
fucom
test
add
push
cmp
cltd
stos
fwait
jno
add
push
scas
jg
ret
aam
daa
dec
testl
push
xchg
loope
xchg
xchg
cmc
sahf
loopnew
xchg
xor
fisubs
push
subb
outsb
mov
xor
adc
aaa
xor
stos
lcall
or
cli
fwait
mov
ficoms
xlat
insb
xor
add
push
mov
rolb
add
test
cmp
stc
jns
int3
or
and
fwait
mov
add
lock
int3
out
xchg
push
cmp
jp
push
and
add
sti
adc
outsb
sbb
and
adc
pop
cmp
test
bound
int3
or
test
jo
adc
mov
frstor
dec
adc
xchg
dec
punpckhbw
and
movd
sbb
faddp
cmp
popaw
sbb
and
ror
loope
jmp
es
dec
addb
mov
xor
mov
jp
mov
je
xor
jp
scas
and
enter
cli
xor
or
xor
stos
lea
insb
mov
cld
adc
mov
movsb
cmp
es
jecxz
dec
and
xchg
fwait
jnp
sbb
loope
dec
cmp
mov
lcall
mov
insl
lcall
pop
fwait
lods
cmp
lcall
cld
xor
scas
aad
addr16
pop
mov
dec
outsb
inc
cld
add
mov
pop
sub
rorl
pusha
aam
cmp
mov
jae
inc
fisttps
and
jns
sub
loop
iret
ja
ss
pop
rclb
int3
add
cmpsl
push
and
push
popf
add
push
je
and
push
clc
jge
nop
add
mov
aad
fwait
inc
jmp
cltd
lea
rcrl
ja
insl
xorl
out
inc
dec
sbb
daa
movsb
push
frstor
cmc
lret
dec
aas
ret
test
imul
repnz
aas
and
test
je
add
pop
in
es
fs
xchg
xor
mov
mov
cmpsl
dec
bound
ds
pop
jge
xor
mov
adcb
std
pop
dec
push
popf
push
push
gs
lods
xor
js
push
subl
in
xchg
sti
dec
rol
xlat
in
mov
cmp
daa
nop
or
sbb
in
loopne
mov
stos
mov
call
out
push
mov
add
rorl
sub
push
out
pushf
xchg
jno
mov
mov
imul
xchg
cwtl
das
mov
movaps
iret
sahf
sub
xorb
add
mov
push
je
and
mov
dec
push
shrl
cmp
or
push
or
fstl
mov
pop
hlt
rcr
lods
jnp
cmp
aad
or
push
test
lret
dec
das
sbb
or
jne
or
sahf
adc
ficomps
xchg
and
rcr
test
inc
dec
hlt
push
push
les
cwtl
sahf
movsl
xchg
ret
mov
popf
imul
jge
sti
mov
jne
int
sub
ds
sbb
jge
mov
push
adc
sbb
scas
dec
add
push
xchg
push
push
xorb
lcall
fistpll
imul
jl
in
adc
xorl
cwtl
xor
gs
or
ljmp
add
sbb
xor
test
rorb
int
dec
jae
out
jbe
arpl
in
xor
loop
outsb
mov
mov
and
pop
jl
dec
inc
scas
push
rcrl
inc
arpl
mov
movsl
imul
sub
test
pop
cmp
mov
loop
imul
loopne
out
xchg
in
cmpsb
push
sub
dec
xor
cld
movsl
ss
mov
xor
pop
or
jecxz
inc
fistpl
lcall
inc
mov
ret
imulb
mov
das
jl
jge
jb
sub
negl
push
sub
call
gs
sbb
xchg
jmp
stos
les
int
outsl
sti
or
push
mov
dec
sub
mov
dec
dec
cmp
mov
pop
pop
leave
mov
cli
sbb
int
repz
gs
mov
andl
pop
mov
pop
call
sbb
dec
inc
or
inc
adc
mov
fcmovnb
sbb
sub
lock
xlat
cltd
enter
sti
sahf
fldl
sahf
scas
pop
cmp
mov
xor
mov
pop
dec
cmc
inc
xchg
jbe
arpl
aas
mov
or
cmp
popf
pop
fldcw
cld
dec
sbb
outsb
cmp
cmp
pop
jge
jbe
clc
push
arpl
adc
pop
std
mov
js
pop
pop
jb
inc
das
cmpsl
les
mov
repnz
or
outsl
and
fcomps
xchg
add
push
dec
cmp
ss
xor
fdivl
cwtl
adc
test
pop
mov
adc
je
fwait
sub
xchg
jmp
hlt
fcmovnbe
outsb
xor
push
cmpb
sub
xor
and
push
icebp
cld
les
std
cs
sub
lcall
mov
mov
pop
mov
jnp
push
lcall
fmull
dec
subb
cmp
repnz
into
push
push
adc
shlb
push
mov
mov
enter
negl
mov
pop
loopne
sub
xchg
or
fdiv
cmpsb
jl
fucom
or
jns
or
lods
mov
push
jbe
mov
je
int3
add
fstl
add
pop
fisttpll
xchg
icebp
ss
popf
insl
out
lahf
lahf
aaa
xchg
mov
lds
insb
inc
mov
pop
xor
outsb
adc
mov
js
leave
mov
lods
sub
jo
sbb
and
or
iret
pop
in
jno
jl
rcr
out
and
inc
inc
sahf
push
xor
mov
lea
mov
inc
xlat
sbb
clc
dec
mov
push
popf
js
sub
sub
aam
dec
les
sbb
sbb
lods
sub
lock
jp
mov
cli
je
push
dec
shll
arpl
mov
shrb
rcll
sahf
push
shrb
aam
lds
sub
mov
mov
jge
mov
repz
mov
insb
mov
test
mov
int
fidivl
repnz
sbb
mov
pop
fcoml
test
mov
and
sbb
mov
shrl
test
mov
xor
int
pop
add
shlb
pop
shrb
imull
in
xchg
cltd
sub
jae
jle
push
jae
stc
dec
mov
inc
dec
jno
pusha
test
cwtl
aaa
popaw
pop
mov
rcl
and
imul
or
fs
xchg
mov
fdivrs
dec
push
and
add
cmp
adc
sbb
cmp
or
sbbl
sbb
add
jno
imul
xchg
mov
and
cmp
mov
cmp
movsl
cmpsb
inc
les
jge
es
aam
loopne
xchg
cmp
fidivs
and
fs
sahf
add
incb
xor
sahf
addb
pop
test
add
les
dec
incl
mov
pop
arpl
pop
aad
cmp
insl
movsl
adc
hlt
cmp
sub
sub
mov
mov
add
inc
push
sub
mov
or
sub
mov
scas
push
add
cld
inc
insl
clc
in
or
jno
fcomi
in
js
aas
jno
xchg
adc
rorl
lea
adc
das
push
xchg
cmpsl
add
sbb
inc
jg
hlt
dec
not
lret
cmp
pop
add
jae
jmp
pop
or
xchg
cli
fs
push
call
fmuls
ret
stos
sti
popf
sub
sbb
roll
mov
dec
rep
orl
data16
push
xor
push
lods
push
mov
inc
mov
jmp
jno
fildll
jg
xchg
push
push
ss
mov
sub
lret
and
popl
mov
jge
es
xor
cmp
std
pop
mov
xchg
cwtl
or
xchg
inc
testl
cmpsl
in
mov
push
add
inc
inc
xchg
lret
xor
jmp
add
jae
daa
xchg
pop
imul
inc
sbb
pop
icebp
mov
cli
outsl
minps
mov
adc
mov
push
mov
inc
ds
jo
mov
jo
ja
jecxz
jne
movsl
popf
mov
xchg
lcall
xlat
outsb
dec
icebp
or
int3
push
mov
pusha
inc
int3
test
fwait
clc
andb
push
mov
adc
jp
adc
xchg
dec
test
pop
out
xchg
into
fwait
mov
aad
andb
stc
adc
push
sub
or
stos
imul
inc
fimull
jecxz
xchg
mov
lret
int
stos
jle
js
jbe
add
cs
cli
mov
call
aad
adc
inc
fnstsw
pop
jl
test
call
cmp
in
fnstcw
stos
adc
fdivs
dec
jnp
ret
out
mov
mov
repz
std
cmpb
jg
push
fwait
test
and
sbb
adc
dec
jns
xchg
mov
in
in
es
pop
fisubrl
cmp
fstl
popf
push
dec
icebp
push
cmpsb
clc
out
dec
dec
xor
ja
scas
push
add
aaa
inc
divl
and
movsb
lahf
cmp
sbb
rcl
push
push
pop
stos
aad
int3
imul
push
je
mov
es
jmp
fwait
add
xor
cmpsb
cmp
xchg
jnp
jge
adc
xor
icebp
sti
dec
or
cmp
push
add
jp
or
inc
push
and
jg
sub
dec
sbb
jnp
xchg
sbb
fsubrs
dec
dec
pop
mov
lds
lcall
mov
cmp
sbb
lcall
insb
loop
ret
dec
adc
das
aam
leave
daa
repz
add
imul
mov
push
mov
xchg
in
popa
lret
std
clc
sahf
int
jb
shl
dec
inc
stc
or
sahf
stos
mov
nop
cmp
test
jecxz
adc
pop
cmp
or
rcr
mov
fnstsw
lahf
sub
pop
sbb
in
lods
mov
lcall
fisubs
jecxz
loope
jae
rcl
or
and
and
adc
and
sti
or
std
xchg
and
icebp
stos
and
push
stc
test
pop
sbb
ficompl
rclb
mov
in
lods
and
dec
and
push
mov
adc
outsl
and
lret
int
mov
out
jbe
fmul
dec
mov
leave
dec
and
xor
push
pop
movb
cs
push
out
ja
mov
rorb
int
jg
mov
mov
shr
stos
imul
mov
mov
fwait
into
and
push
fisubrs
add
mul
dec
sub
jge
stos
adc
loop
sbb
jae
ss
shrb
cmpsb
mov
adc
stc
jnp
repz
dec
arpl
lea
xor
jecxz
add
xchg
repz
xchg
xchg
movsl
push
add
lds
and
hlt
add
push
xchg
mov
pop
lret
cmpsl
inc
xor
sub
mov
and
mov
inc
cwtl
xchg
insb
xchg
stos
and
xchg
mov
in
inc
xchg
push
add
popa
int
lock
dec
mov
xor
xchg
mov
divl
shrl
filds
push
pop
hlt
ret
jecxz
daa
and
inc
mov
loopne
divl
mov
cmpsb
push
and
sub
sbb
lods
scas
cli
add
out
out
in
cld
xchg
and
or
test
stos
stos
jecxz
lret
popa
cmp
jns
loopne
sub
cmp
jno
test
mov
icebp
sub
mov
jle
rcrb
and
pop
adc
xchg
int
cmp
cmp
mov
outsb
dec
outsb
mov
mov
mov
ss
push
std
popa
jb
jne
dec
mov
inc
adc
stc
rolb
inc
ss
mov
sahf
xor
in
jmp
pop
inc
mov
inc
jmp
inc
mov
push
rorl
scas
sub
xor
inc
int3
aad
mov
mov
stos
sbb
fs
nop
fwait
xchg
fistl
mov
jb
pop
or
and
imul
mov
loopne
dec
add
jle
mov
cmp
cmove
sarl
mov
fwait
call
fidivrs
cmp
cmc
xor
jmp
hlt
arpl
clc
fs
cmp
icebp
or
jecxz
xor
mov
mov
popf
ljmp
in
ja
add
das
pop
xor
inc
xchg
faddl
outsl
notb
stos
aaa
lock
mov
jns
xchg
cld
lahf
dec
adc
cmp
test
imul
xor
sub
xor
stc
mov
jmp
push
lods
jp
xchg
fst
xor
xor
inc
das
loope
pop
mov
in
mov
push
xor
or
rcll
add
jl
insb
xor
sbb
mov
cmp
neg
lret
pop
inc
mov
out
sbb
cltd
arpl
repnz
mov
dec
ret
mov
xchg
arpl
int
and
push
movsb
xor
mov
je
xlat
mov
and
inc
xor
stc
imul
dec
aaa
cld
roll
sub
cmp
inc
xchg
fistpll
pop
stos
test
roll
addl
xor
pshufw
test
aad
sub
sbb
push
sbb
cld
push
pavgb
fwait
lahf
mov
jno
pop
pop
outsl
lcall
int3
add
cld
mov
mov
jge
mov
cmp
les
inc
mov
jp
adc
push
imul
stos
ficomps
lret
sub
push
pop
xor
fstpt
icebp
pop
or
and
ret
sub
push
add
mov
push
xchg
cmc
push
jp
testb
mov
pop
xchg
ret
or
xor
inc
scas
icebp
fisttpll
rcrl
mov
jle
push
mov
std
dec
arpl
cmp
sub
ret
pop
lcall
je
sub
xchg
mov
xchg
sub
shl
insb
add
and
add
rorb
les
loope
adc
rorb
not
sbb
es
mov
fadds
push
cmp
movsl
mov
mov
out
mov
aad
sbb
push
dec
lcall
test
test
mov
xchg
aaa
int3
cwtl
test
rcrl
sub
lea
jb
dec
pop
jl
shlb
mov
les
inc
shl
push
pop
xor
jnp
xor
cmc
popf
test
pop
mov
jns
les
fistps
in
out
rclb
jge
jno
ret
or
add
out
fcomi
data16
out
cmp
stos
xchg
pop
cs
add
nop
stos
push
and
mov
mov
ljmp
fldl
imul
arpl
fbstp
int3
cmpsb
cmp
lahf
insb
add
subb
icebp
xor
add
outsb
jns
mov
adc
xchg
pushf
pop
pushf
pop
adc
inc
call
xlat
xor
adc
mov
mov
hlt
test
ret
adc
das
and
iret
in
insb
xor
hlt
jns
cmpsl
cli
jp
ljmp
outsb
push
enter
insl
cltd
test
nop
or
jae
lea
push
fs
jns
push
jge
shr
and
sbb
ljmp
dec
push
mov
mov
ss
and
and
pop
mov
inc
add
into
push
mov
lea
xchg
mov
js
cmp
sar
dec
and
mov
add
mov
nop
test
int3
fidivs
mov
inc
jle
sub
jl
dec
sub
sbb
pop
rclb
leave
jmp
inc
push
jae
lea
int
fmull
adc
mov
cmpsl
adc
movsl
mov
imul
xor
int3
in
insl
ja
fwait
popf
iret
clc
mov
add
pop
mov
cmp
xchg
roll
repz
fs
mov
cmpsl
aad
decl
sbb
nop
repnz
in
mov
stos
mov
adc
les
mov
pop
mov
mov
mov
je
inc
mov
rclb
aaa
mov
push
dec
loope
scas
or
mov
mov
outsl
fisttps
je
adc
jbe
data16
es
push
in
les
push
loope
popf
insl
mov
cs
pop
das
cltd
push
push
loopne
daa
or
and
mov
in
inc
js
jns
fisttps
or
outsl
bound
es
xchg
or
jo
aas
xchg
xlat
add
aad
ljmp
je
stos
movsb
cltd
call
cmp
rep
add
shrl
lds
xor
sbbl
and
subb
sbb
cltd
xorb
add
js
sbb
repnz
jb
movsl
xchg
cmp
shlb
testl
lahf
adc
and
cmp
std
mov
insb
jg
xchg
ja
mov
sahf
les
dec
insl
mov
inc
mov
push
add
push
lret
vmwrite
mov
xor
cwtl
test
fldl
dec
lahf
xor
inc
jnp
ret
mov
mov
cmpsl
jo
add
cmpsl
lods
mov
lret
aas
push
xchg
cld
outsb
popa
xchg
cmpps
insl
sub
clc
cltd
xchg
fstpl
or
or
sub
movsl
mov
ret
jne
push
scas
mov
xchg
inc
mov
je
shrl
lahf
jle
dec
xchg
sub
inc
ret
adc
mov
test
inc
jecxz
jmp
aam
dec
adc
fdivr
lods
dec
adc
in
pop
loop
dec
inc
leave
jb
add
mov
xchg
sti
addr16
pop
pop
or
jmp
aad
testb
mov
fwait
pop
lods
stos
orl
rcl
jne
test
cwtl
insb
scas
inc
pushl
pop
insb
ffreep
xor
icebp
arpl
push
mov
loop
cli
add
scas
dec
addl
out
xor
mov
out
imul
je
lock
or
pop
dec
mov
push
aad
sbb
lret
inc
mov
dec
cmp
cmpsl
pop
lret
testl
fldl
sub
xor
push
popf
nop
jl
out
pop
icebp
outsb
jnp
xor
pop
gs
imul
movswl
repz
mov
push
lret
je
loope
ja
cs
dec
dec
cmp
xorb
inc
xor
mov
xchg
mov
aad
sub
xchg
sub
xor
leave
leave
mov
mov
inc
xchg
jne
mov
push
sub
dec
pop
sti
push
xchg
mov
sahf
cmp
adc
popf
lret
lret
adcb
jbe
adc
lret
or
movsl
xor
fs
jb,pt
movnti
cltd
movsl
and
push
add
ret
or
pop
mov
cs
sub
sahf
mov
pop
movsb
push
lret
sbb
mov
xchg
jp
mov
insl
dec
mov
mov
out
inc
push
cmp
cld
adc
xor
push
xor
loope
sti
cmpb
pop
mov
and
lods
push
xchg
sub
jae
pop
or
cmp
and
or
mov
iret
lock
mov
sbb
inc
or
icebp
popa
mov
mov
push
test
xlat
scas
or
adc
fimull
xlat
outsb
inc
imul
into
jo
loopew
or
ljmp
in
aam
mov
sti
stos
jg
dec
dec
xor
dec
dec
jnp
std
pop
aad
mov
fbstp
mov
test
fisttpll
mov
mov
testl
nop
icebp
inc
es
mov
push
aam
mov
lcall
fcoms
adc
shrb
sub
xchg
jecxz
xchg
pop
xchg
xchg
aam
fwait
xchg
je
in
push
mov
fcomi
xor
leave
mov
jnp
cmp
sarl
xchg
aaa
or
push
add
stos
sbb
and
arpl
mov
rcrb
pop
add
repz
sub
scas
or
pop
xlat
push
lret
push
ret
cmp
jle
and
push
pop
push
pop
icebp
fimull
jbe
add
cmp
int
sahf
scas
ret
outsl
jge
cmpsb
push
mov
testl
outsb
cltd
mull
loope
imul
rcll
dec
subl
negl
aas
andl
test
je
or
and
and
subl
push
mov
cwtl
sub
je
pause
hlt
dec
mov
outsb
sbb
lret
jmp
mov
hlt
adc
popf
pop
scas
add
in
push
pop
orl
and
jbe
leave
ljmp
out
movb
subl
and
dec
insl
mov
insl
leave
incl
mov
je
subb
fildll
rorb
jae
movsb
mov
add
arpl
xor
xchg
mov
mov
and
adc
movsb
mov
lock
int3
not
std
out
daa
sub
cs
sarb
addl
insl
int
int3
adc
push
jl
in
call
icebp
pop
stc
push
dec
cld
lods
adc
mov
pop
dec
in
js
nop
push
cmp
jmp
aas
stos
mov
push
aad
pop
xchg
cmp
nop
out
push
mov
dec
and
loopne
adc
out
mov
andb
and
mov
add
and
push
scas
xlat
das
sub
je
pop
ss
mov
test
push
cmp
push
or
push
jp
and
add
pop
inc
out
cmp
pop
popa
dec
mov
push
je
xchg
cmp
inc
jbe
jle
pusha
pop
movsb
je
or
rcrl
in
lods
dec
stos
je
adc
push
popf
sub
in
add
fsubrl
shlb
aaa
dec
shlb
andl
icebp
adcl
cli
es
push
lds
mov
xchg
xchg
sbb
dec
adc
arpl
add
cmp
push
lock
jle
mov
or
jno
das
aas
pop
popf
fsubrp
out
push
xor
testl
adc
cmp
aas
or
test
sbb
cmc
jns
xor
ja
sub
jo
add
adc
std
mov
hlt
int
sbb
jne
push
push
scas
jp
mov
insl
mov
jno
and
repz
adc
xor
sbb
flds
pop
fadds
scas
mov
test
or
aam
inc
mov
cmp
iret
cld
icebp
int
jns
push
mov
fimull
cwtl
rol
imul
add
adc
outsl
enter
lcall
iret
ret
or
inc
pop
mov
stos
and
or
mov
test
add
cmp
inc
jns
mov
scas
aam
repnz
mov
test
adc
mov
push
cwtl
clc
dec
jno
jmp
pop
add
scas
dec
imull
aad
in
push
das
popf
mov
push
sahf
and
xchg
addr16
inc
cmp
stos
jecxz
mov
pop
insb
push
mov
dec
maxps
jge
sub
adc
mov
or
test
mov
jne
xor
inc
push
xchg
idivl
loopne
mov
int3
push
mov
jl
mov
jbe
mov
push
dec
xchg
pop
pop
popl
mov
cmp
addr16
nop
in
mov
scas
adc
mov
push
testb
pop
lret
push
xorl
mov
cmpsl
jne
or
icebp
in
nop
pusha
arpl
sbb
je
es
adcb
jne
cmpb
testb
repz
rolb
aad
inc
sub
rolb
pop
in
pop
rcrl
or
bound
mov
fwait
leave
inc
adc
rclb
xor
push
fcoml
jecxz
mov
mov
leave
int
jae
imul
push
test
movsb
sub
fcomp
or
lahf
push
ljmp
add
pop
testl
pop
sub
jb
push
push
jo
cwtl
xor
pop
xchg
adc
fldl
add
pop
lods
pop
repnz
fnstcw
aas
das
test
dec
aaa
sub
es
add
ljmp
jg
add
leave
outsb
dec
ret
filds
daa
mov
sub
pop
popa
mov
test
cmp
outsb
mov
and
mov
in
add
lds
xor
out
mov
jle
mov
add
fwait
cmp
pop
mov
xlat
xchg
mov
fcomip
and
int
js
push
xchg
pop
sub
xor
pop
mov
mov
xorl
aaa
aaa
loopne
imul
lock
mov
sar
xchg
inc
jae
xchg
cld
inc
ds
xchg
pop
push
andl
pop
xchg
sub
jle
jg
push
outsl
xor
add
out
jge
mov
gs
and
idivl
aam
push
adc
mov
lret
push
stos
fwait
adc
addr16
add
int
imul
jle
mov
fstl
jne
push
mov
imul
push
sub
pop
add
sbb
cmp
jbe
iret
scas
sub
mov
dec
inc
or
imul
mov
or
cmp
fwait
popf
out
cltd
adc
and
jecxz
or
popa
enter
mov
loopne
nop
pop
push
sbb
out
pop
pop
xchg
pop
cmp
add
sub
push
aad
rcll
sub
push
pop
push
scas
dec
jg
mov
shlb
jp
dec
loope
sahf
stos
out
out
movsb
mov
pop
call
xchg
cs
mov
in
sub
cld
imul
shlb
arpl
lret
stos
daa
sar
sub
cwtl
jo
fstps
stos
push
xchg
fucom
and
mov
movsb
dec
jmp
shlb
mov
inc
ljmp
sbb
cmp
imul
adc
add
sbb
fisubrs
rorl
mov
data16
ss
sbb
addb
push
pop
xor
enter
inc
lahf
xchg
add
dec
or
push
dec
outsl
or
jl
xor
daa
movsb
xchg
add
inc
xchg
push
lcall
sub
jmp
dec
xor
inc
addl
adc
and
cmp
test
cmp
sub
mov
jle
adc
xor
aad
mov
jmp
test
adc
sbb
mov
add
xchg
dec
int
mov
aam
sbb
pop
shrb
adc
jl
rorl
jge
mov
loopne
fcomps
test
dec
jp
pop
shlb
mov
jae
loope
mov
ss
arpl
push
fldl
notl
add
clc
cmc
pop
jno
daa
ret
mov
daa
mov
ljmp
mov
jbe
or
sar
stc
adc
jmp
iret
loop
pop
enter
ret
push
lds
scas
fsubrl
outsl
out
push
addr16
or
or
test
fnsave
inc
mov
mov
cmp
xor
push
lret
push
inc
jp
and
push
inc
mov
inc
cmp
fisttpl
and
add
cmp
fdivl
cli
dec
lret
jo
pop
or
aad
fdiv
mov
faddl
push
xor
sub
mov
mov
xchg
je
mov
out
xchg
mov
push
xchg
mov
daa
xchg
xchg
cmp
inc
cmp
lret
out
push
sub
mov
dec
sub
sub
fldpi
add
inc
in
into
lods
call
outsb
push
sub
add
andl
popa
and
ror
jne
lcall
push
loopne
outsb
xlat
mov
movsl
mov
inc
test
jecxz
push
je
sbb
scas
or
add
push
add
stos
gs
pop
mov
jle
or
sti
or
xchg
and
jg
int3
sbb
jmp
imul
ret
repz
cmp
lods
or
xchg
sub
jle
addr16
sbb
xor
xor
xor
cmp
add
mov
mov
scas
mov
inc
inc
test
inc
mov
pop
fisubs
or
mov
or
dec
movsb
inc
int3
popf
xchg
cmovne
or
adc
and
lret
mov
test
jle
ror
clc
paddsw
add
loopne
sbb
push
jmp
or
pop
sbb
clc
mov
lock
xchg
stc
jnp
call
add
outsb
adc
inc
inc
imul
pop
scas
sahf
pop
pop
mov
add
pop
icebp
adc
aad
aaa
andl
outsl
cmp
sarb
fists
pop
into
mov
dec
mov
push
in
mov
mov
mov
icebp
xor
mov
cmp
insl
aas
data16
and
stc
aad
push
sbb
fld
and
sti
insb
aas
repz
cmp
clc
ja
jecxz
and
je
adc
push
les
mov
lcall
mov
es
inc
push
rcrb
pop
add
lock
push
sti
pop
repnz
je
mov
push
jns
std
mov
outsb
push
mov
fimull
adc
inc
xor
fcoms
insb
fcomip
out
push
cmpsl
dec
scas
inc
icebp
out
cli
cmpl
push
movsb
rorl
mov
sub
test
mov
pop
bound
in
jns
inc
or
pushf
shrb
sbb
mov
dec
orl
test
xchg
add
xchg
test
out
jmp
das
add
lods
pop
inc
sub
jge
mov
addr16
notl
jp
idivb
rcr
mov
shrl
push
and
xor
lock
scas
dec
movsb
dec
lret
fdivrl
mov
pop
or
jo
popf
sub
into
int
sub
scas
fwait
addr16
loope
xor
jp
cmp
mov
inc
mov
mov
out
loope
lahf
shr
cmp
loopne
imul
pop
hlt
ret
mov
pusha
lods
mov
int
sbb
mov
out
cmpsb
jge
and
mov
push
xchg
rcrb
loop
sub
push
and
outsb
ds
xor
and
inc
adc
xchg
aas
adc
push
bound
lea
es
mov
push
pop
mov
imul
mov
adc
dec
std
xchg
arpl
cs
xchg
outsl
dec
cmpsl
xorl
inc
ret
stc
fimull
mov
test
cmpsl
adc
inc
or
incl
jnp
ret
mov
dec
dec
mov
ja
addb
imul
jecxz
mov
movl
js
inc
mov
hlt
ljmp
mov
aaa
sbb
dec
pop
push
pop
je
dec
mov
movsb
shl
and
sub
das
cmpsb
pop
adc
mov
lods
jg
inc
mov
inc
dec
jae
sub
out
jb
hlt
xlat
jbe
rcr
ret
int3
adc
stc
jnp
pop
xchg
fwait
lods
cltd
mov
jl
popa
jae
dec
push
dec
jne
mov
pop
dec
xchg
mov
or
frstor
inc
imul
int3
insb
add
lea
xor
lret
mov
sub
fisttpl
mov
add
xchg
cmp
jae
das
jnp
pop
nop
iret
lahf
fsubl
lds
push
mov
add
inc
ss
stos
jmp
push
movsl
outsb
jge
sbb
dec
ret
xor
loopne
jmp
xor
into
pop
aam
xchg
or
jg
pop
add
push
push
mov
cmp
shl
cmpb
sbbb
dec
cmp
icebp
popa
push
sub
mov
pop
pop
jnp
cltd
mov
dec
pop
jne
xlat
mov
or
imul
push
into
iret
dec
lods
xchg
inc
gs
test
arpl
ret
mov
test
inc
xchg
je
cmovp
fisubl
es
les
enter
mov
add
inc
and
fistl
inc
and
adc
mov
arpl
inc
dec
inc
in
lea
add
mov
aad
jg
in
push
cmp
pop
sahf
aas
cwtl
dec
mov
mov
sub
xchg
shrb
pushl
cmp
aam
hlt
pop
lea
daa
lds
jno
push
sub
popf
inc
adc
sti
sbbb
pop
sub
sbb
leave
dec
repnz
leave
ret
popa
sbb
arpl
shlb
pop
mov
mov
stos
xor
cmpsl
fdivrs
add
imul
push
jne
mov
cld
dec
jae
mov
add
loop
mov
mov
push
shlb
push
mov
pop
adc
dec
jg
insl
sub
rolb
lcall
push
je
in
mov
outsl
addr16
jne
data16
sbb
outsl
lods
xorl
xchg
inc
in
push
loopne
jnp
fwait
pop
jp
lods
sbb
sahf
mov
stos
add
xchg
sbb
int3
xchg
push
movsl
jl
cmp
mov
lds
push
call
sub
cmc
lret
push
push
or
xor
lock
adc
xchg
xor
sub
inc
dec
and
ss
push
mov
les
push
dec
loopne
jne
in
jle
add
xor
shlb
and
sahf
aaa
nop
fmuls
mov
pushf
cmp
ret
fadds
mov
or
into
mov
dec
loopne
fwait
out
repz
mov
push
int
mov
cmp
add
dec
fsubl
sub
inc
sbb
mov
jb
fwait
pop
aas
lret
xchg
nop
rclb
or
lcall
mov
pop
lea
jnp
mov
mov
in
ljmp
dec
aad
add
test
adc
fdivrl
xchg
out
add
cltd
outsb
mov
pop
aad
clc
dec
insb
les
push
ljmp
and
data16
cltd
test
rcrb
and
shlb
xchg
inc
fwait
dec
jno
loope
fsubs
imul
mov
out
xor
lret
in
stos
icebp
je
test
lahf
and
xchg
jae
xor
cmp
aaa
and
fs
xchg
pop
and
scas
movsl
dec
adc
outsl
mov
ret
xchg
out
in
mov
stos
xor
jp
push
adc
sbb
adc
cmp
mov
lret
pushf
sub
jo
jmp
lds
dec
mov
rcrl
adc
test
aaa
dec
xor
aaa
mov
cld
add
add
or
jle
jns
stos
or
stos
movsb
in
xlat
adc
ret
jp
adc
adc
les
scas
shl
adc
and
mov
xor
xchg
lcall
jb
mov
repz
lret
jg
push
int
sub
gs
push
xchg
fwait
inc
mov
pop
cmc
inc
or
rcrb
imul
sarl
sbb
testb
sti
ret
test
addr16
outsb
jmp
popf
push
pop
inc
pushf
fmuls
das
cmp
mov
in
jo
mov
cli
in
cmp
add
adc
ss
je
loopne
adc
test
pop
cwtl
ret
mov
mov
arpl
sbb
in
dec
pushl
les
sub
daa
pop
mov
add
cli
mov
dec
ret
pop
inc
cld
mov
stos
xlat
rorl
jne
mov
cmp
fistps
xchg
adc
into
or
or
pop
and
xlat
pushf
pop
sbb
xor
fidivs
adc
inc
xor
fiaddl
ds
sbbb
and
mov
sbb
es
sub
cmc
and
hlt
xchg
in
mov
test
leave
xor
adc
xchg
ds
cmp
imul
fcomp
jg
sub
sarb
fwait
sbb
inc
in
inc
ret
lret
xchg
dec
call
mov
scas
fwait
adc
xor
leave
lods
pop
add
pop
dec
imul
push
je
sbb
ds
jmp
stos
mov
lods
iret
pop
inc
mov
sbb
dec
arpl
lret
repnz
pop
mov
jo
pop
arpl
sarl
int3
int3
test
cmpsb
jmp
sub
movsb
inc
inc
sbb
shlb
scas
pop
dec
mov
sub
sbb
cmpsl
movsl
stc
mov
xlat
lods
jl
adc
scas
adc
sti
adc
lock
fdivl
inc
push
icebp
dec
sub
adc
cmpsb
mov
pushfw
movsl
lds
scas
enter
cltd
js
fnstenv
sub
dec
std
fwait
jno
sbb
cwtl
or
fwait
inc
clc
leave
mov
jecxz
dec
xchg
pop
ljmp
jle
subb
pop
fwait
jne
mov
sbbb
out
xchg
xchg
sbb
int3
test
push
rorb
xchg
mov
mov
cmp
adc
push
mov
pop
aad
cmp
stc
lcall
dec
data16
jmp
dec
leave
dec
popa
sti
aad
mov
push
push
jge
lea
hlt
popa
mov
nop
inc
fildll
sbb
jne
in
push
sbb
test
mov
add
mov
popa
loop,pn
adc
xchg
xchg
xchg
push
adc
lcall
cltd
push
lock
add
je
sbb
push
mov
cmp
mov
sbb
out
jmp
dec
hlt
nop
imul
inc
jns
mov
ja
cmp
cwtl
mov
sti
xchg
out
hlt
mov
or
xchg
lahf
scas
dec
test
cmp
push
push
std
movsl
xchg
adc
scas
cmpsl
mov
xor
shll
out
or
out
push
jge
out
jmp
ret
inc
pop
jge
in
or
aas
cmc
mov
mov
clc
pop
dec
mov
icebp
jg
movsl
popl
sub
fs
cmp
dec
mov
jmp
add
sub
xlat
stos
ficoms
adc
cmp
test
lret
ljmp
lahf
jg
mov
jl
mov
jno
mov
js
jns
sub
dec
das
in
lea
push
scas
xchg
jle
cwtl
inc
aam
xchg
fs
cmp
out
lods
fcoml
mov
stos
cmp
and
cmp
inc
push
jmp
xor
rorb
test
add
ljmp
orl
enter
sbb
loopne
dec
test
add
lret
xor
pop
gs
mov
inc
cmp
xor
mov
imul
mov
outsb
daa
xchg
cli
push
fcmovu
and
lret
loop
stos
in
popa
add
pop
js
mov
dec
mov
cs
fimull
int
out
mov
and
xchg
addr16
call
cmp
into
in
pop
sti
mov
in
rclb
lahf
fwait
mov
mov
add
movsl
outsb
fcmovnb
cmc
cmp
xlat
ret
push
push
std
ljmp
popl
mov
ss
adc
in
sahf
cli
lret
xor
imul
xor
adc
add
aaa
sbb
push
adc
js
push
xlat
ja
test
adc
inc
mov
js
out
or
dec
adc
loopne
lret
das
faddp
add
aad
test
sub
jecxz
inc
pop
jb
or
jno
hlt
sub
pop
adc
orl
daa
iret
inc
imul
sub
in
jmp
jno
push
push
jae
popf
adc
cld
add
in
and
push
gs
jl
ljmp
mov
xor
xchg
xor
insl
out
add
addl
mov
xchg
sbb
loop
nop
mov
in
mov
int3
popa
adc
pop
shrb
inc
adc
push
xchg
mov
cs
and
gs
and
cmp
dec
inc
mov
xchg
imul
dec
std
and
or
cmc
loop
xchg
xor
mov
enter
in
dec
loopne
out
lahf
jb
xchg
jmp
inc
cmpsb
lock
movsl
adc
lds
lret
xchg
rcll
pop
xor
aas
sbb
pop
sbb
add
lahf
pop
sub
and
movb
mov
jle
sub
daa
lea
jbe
xchg
xchg
pop
mov
cltd
xchg
loopne
inc
jp
jno
sub
nop
scas
sti
mov
test
imul
mov
add
push
xchg
and
mov
mov
addr16
fsub
or
lods
pop
gs
sbb
aas
cli
shlb
and
lock
outsl
inc
cwtl
insl
addb
jg
in
xchg
das
ja
pop
sahf
aaa
mov
cmp
aad
and
and
sub
ja
lret
and
ss
pop
gs
and
mov
mov
add
inc
mov
pop
adc
cmp
shll
dec
dec
cld
cmp
pop
pop
jnp
sahf
gs
rcrb
clc
push
out
mov
in
push
adc
outsb
sbb
push
dec
icebp
outsl
into
add
xor
cltd
mov
subl
push
sbb
lret
pushf
sub
aad
fdivrl
mov
sahf
or
adcl
push
inc
insb
jnp
in
mov
sbb
sub
dec
into
outsl
mov
sbb
mov
outsb
jg
add
inc
pop
jg
lock
cmp
cmp
negl
jb
faddl
popf
pop
scas
popf
lahf
loopne
fwait
or
icebp
outsl
adc
mov
pop
test
jns
pop
inc
shl
pop
mov
mov
sbbl
fists
sub
fdivp
xchg
loope
test
in
mov
sbb
mov
and
xchg
nop
lods
xchg
pop
inc
push
ret
in
imul
pop
outsl
aad
ror
xor
jo
fidivrl
cli
ds
imul
int
jno
or
add
push
ja
outsb
test
call
jge
cmp
js
jmp
fnstcw
movl
xchg
mulb
cmp
mov
xchg
xlat
pop
mov
stos
mov
rolb
pop
push
lods
iret
sub
xchg
gs
sub
xchg
mov
popa
mov
shrb
sarb
mov
les
lahf
lds
repz
mov
xchg
sbb
add
dec
xchg
ljmp
cmp
lods
insl
rcrb
jne
ljmp
cli
ficomps
mov
je
mov
lds
ljmp
jb
add
imul
push
mov
out
xchg
push
movsl
jbe
cli
fidivrl
cmp
jg
sbb
adc
add
inc
dec
pop
je
test
push
push
xchg
ss
add
iret
or
into
repz
mov
out
cmp
iret
and
jmp
xor
push
sbb
scas
sbb
loopne
mov
insb
stos
test
rolb
lahf
fwait
pusha
lahf
mov
inc
add
daa
pop
lret
movsb
adc
mov
adcl
cmp
inc
jnp
inc
movb
fmull
jmp
jo
inc
scas
lea
or
mov
xor
mov
push
pop
mov
push
jo
xchg
into
ret
and
jns
push
xlat
cmpb
lods
xor
fldl
adcl
mov
stos
mov
mov
dec
dec
jmp
dec
lret
sbb
sub
mov
loope
dec
mov
cmp
cmp
push
imul
ss
mov
jno
fcomps
jb
cmp
es
push
sub
sahf
xchg
add
add
xchg
jbe
imul
insb
in
iret
add
push
xchg
imul
xchg
xor
data16
loop
loop
test
xor
insl
push
mov
addr16
outsb
xor
insl
push
pushf
fildll
ret
pop
jae
xchg
dec
scas
and
xchg
push
push
sub
les
mov
adc
lcall
dec
cwtl
aam
mov
ljmp
mov
rorl
lret
push
out
fs
fcoml
sbb
or
sbb
push
add
push
add
push
jbe
mov
adc
lret
push
cmpsb
add
outsb
sbbb
aad
or
repz
push
sub
adc
xor
cmp
inc
xchg
jae
sbb
mov
adc
push
push
mov
sti
mov
jnp
ja
jle
out
outsl
xorb
inc
stc
push
ret
lds
or
inc
push
sbb
jo
dec
jecxz
push
into
jecxz
or
addr16
je
in
mov
xchg
xlat
add
in
scas
xor
mov
into
lcall
xchg
dec
push
inc
subl
mov
sub
mov
pop
lahf
dec
adc
xor
push
test
pop
push
pop
push
repnz
scas
pushl
pop
aad
inc
mov
jmp
push
dec
test
mov
enter
jne
fisttps
decb
rcr
arpl
jge
dec
out
or
push
inc
or
xchg
adc
ds
iret
cwtl
loope
popf
mov
mov
and
push
pop
mov
pushf
xor
aaa
repnz
lods
mov
push
mov
pop
jmp
scas
and
jmp
aad
or
out
mov
aam
or
outsl
pop
jns
push
jbe
inc
les
cmp
push
out
sbb
push
jle
sahf
push
sub
rcll
cli
aaa
sub
or
nop
push
or
xor
in
nop
nop
mov
nop
mov
mov
or
or
inc
push
xchg
stos
mov
outsl
fmull
addr16
jb
fildl
iret
movsb
sti
cwtl
push
xor
mov
fcompl
or
iret
repz
inc
fs
push
scas
xchg
cmpsb
or
sbb
ljmp
aas
lcall
and
ret
fwait
xchg
add
inc
inc
pop
and
mov
js
cmpsl
test
cmp
pop
adc
lods
fdecstp
mov
les
lods
fs
hlt
push
mov
cli
rep
xlat
outsb
aas
mov
or
and
sbb
mov
jg
mov
mov
mov
call
movsl
in
pop
jbe
outsl
arpl
dec
and
sbb
int3
rcr
ja
mov
adc
iret
andl
aad
add
imul
repnz
and
cmpsl
clc
lods
outsl
cmpsl
mov
inc
jp
enter
movsb
stc
dec
shrl
loopne
or
call
das
in
loopne
mov
fs
jnp
outsl
out
lahf
or
inc
dec
mov
sub
mov
hlt
mov
adc
addl
adc
aaa
mov
movsb
in
mov
jne
not
add
add
push
stos
sub
cmpsb
mov
js
push
mov
adc
in
jbe
pop
cltd
ds
std
cmpsl
stos
push
cmpsb
movsl
mov
or
mov
xchg
jge
inc
push
out
mov
or
prefetchnta
cwtl
ss
push
adc
pop
and
xor
cmp
xor
scas
sub
dec
add
insb
bound
adc
pop
test
inc
mov
aam
out
arpl
jp
dec
pop
into
mov
mov
aas
xchg
jge
fimuls
push
outsl
pop
aaa
mov
inc
rcll
sub
push
pop
dec
add
mov
aam
std
fnsave
in
jl
mov
pop
loop
sbb
mov
mov
out
and
les
cld
scas
enter
pop
pop
dec
and
out
pushf
inc
lock
loopne
cmp
jo
and
cli
dec
jmp
or
pop
inc
adc
sub
clc
and
dec
les
aas
aam
dec
lcall
scas
mov
or
test
xlat
pop
xor
mov
clc
add
mov
loop
mov
or
and
lcall
cmpsl
mov
push
xor
lods
dec
ss
sbb
jne
idivb
mov
daa
inc
inc
negb
stos
dec
pop
jb
es
jp
push
xchg
fdivrp
nop
shrb
ljmp
inc
imul
into
fmuls
jle
out
js
es
sub
shlb
daa
loopne
fdivrs
or
mov
pop
mov
push
sbb
cmp
ja
sub
add
scas
mov
xlat
pop
jo
inc
popa
inc
xchg
loopne
mov
negb
call
lds
repz
adc
push
mov
push
xor
out
roll
in
mov
rclb
lods
jecxz
mov
add
adc
sub
xchg
pop
daa
pop
subb
sbb
mov
cmp
fsubs
mov
mov
push
mov
mov
xchg
aas
fcompl
push
call
insl
fimuls
cmp
sbb
je
dec
dec
adc
inc
into
fidivrs
mov
imul
mov
icebp
adc
sbb
jmp
push
push
push
xor
mov
dec
and
mov
push
lods
cld
adc
jno
call
mov
sub
push
cvtps2pi
lods
pop
ja
mov
mov
and
xchg
outsb
rcl
add
test
mov
pop
mov
insb
push
add
xor
or
mov
sbb
cs
mov
mov
sbb
bnd
mov
xor
mov
mov
and
mov
xchg
fucomip
cmc
bound
sub
int
fcomps
xor
arpl
push
ss
aad
jne
rcrb
aaa
mov
xorl
cmc
sbb
push
and
das
dec
xlat
adc
daa
imul
push
adc
jbe
gs
out
and
fisttpl
sub
sub
mov
in
mov
lods
add
jmp
xor
or
push
xorl
adc
aam
les
and
rcr
add
sbb
es
adc
insb
out
test
cli
pop
ret
dec
mov
leave
rorl
mov
repz
pop
clc
pop
rcll
add
jmp
mov
add
cmc
sub
push
leave
mov
mov
pop
addr16
xchg
daa
shrl
cli
int3
incl
popa
adc
or
xchg
das
inc
dec
loopne
cmp
inc
cmp
push
or
sbb
test
movsl
pusha
pop
leave
dec
mov
mov
dec
dec
bound
mov
inc
addb
or
rorl
movsl
xor
jg
fisubs
aaa
push
and
jecxz
popf
xchg
hlt
popa
inc
das
jmp
call
fwait
mov
lret
xchg
xor
std
mov
cmp
mov
cwtl
outsl
call
shrb
push
dec
aam
in
jnp
iret
sahf
jmp
xchg
data16
cmp
adc
push
mov
jno
and
dec
or
sbb
xchg
xchg
nop
lods
dec
ret
loope
fldenv
imul
hlt
incl
gs
int
fmuls
push
outsb
xor
in
js
insl
stos
int
mov
sarl
jae
or
loope
out
roll
jge
pop
mov
iret
mov
into
cs
pop
rol
ja
lods
dec
call
mov
ret
test
push
cmc
rcrl
mov
test
xor
xor
sete
jns
daa
adc
cli
inc
in
test
out
jecxz
inc
mov
or
cmp
jbe
and
and
fwait
fwait
push
pop
mov
in
push
es
movsl
cmp
dec
xlat
repnz
daa
mov
insl
and
push
repnz
addl
push
adc
pop
xor
xchg
imul
sub
cmpsl
addr16
ss
inc
scas
incl
add
pop
xchg
fsubrs
scas
les
push
popa
pop
inc
div
cmp
dec
xor
icebp
xorb
outsl
jmp
xchg
pop
mov
xor
faddl
jl
inc
xor
xchg
add
cmc
js
xchg
fisubrs
movsl
lret
enter
push
and
enter
inc
std
pop
cmp
pop
inc
mov
lock
mov
and
loopne
in
cmpl
mov
mov
inc
push
and
mov
aas
xor
push
test
jp
mov
ljmp
or
test
ljmp
comiss
daa
push
pop
xchg
movb
popf
and
sub
adc
push
inc
insl
ds
int3
adcb
rolb
push
inc
arpl
and
xchg
aaa
add
pop
mov
in
xchg
sbb
sbb
xor
fs
mov
dec
pop
and
sti
inc
jle
int
str
inc
in
pop
adc
dec
cmp
addr16
int
int
sbb
clc
mov
mov
inc
sub
bound
iret
mov
jbe
xor
sub
insb
dec
insb
and
adc
jp
in
sar
dec
xor
xor
xchg
push
jle
loopne
movsl
sub
mov
aad
lods
xor
and
jl
mov
xchg
sub
scas
adc
cmp
xchg
lret
insb
lds
xchg
add
mov
and
cmp
mov
adc
push
and
add
jmp
add
test
pop
test
lds
enter
push
hlt
push
test
cltd
rcrl
insb
ret
jae
scas
lret
sub
stc
mov
dec
cmp
xchg
xchg
test
call
adc
adc
jp
or
xchg
call
popa
es
push
mov
dec
aad
pushf
iret
mov
jae
pmaxsw
mov
mov
movsl
jnp
pusha
imul
mov
lahf
int3
sub
int
adc
pop
and
mov
mov
test
imul
mov
in
push
pop
rorb
ds
add
mov
fdivs
shlb
mov
lods
or
mov
inc
bound
sbbl
inc
mov
rcrl
xor
xchg
push
mov
icebp
xor
cmp
mov
jmp
add
cli
call
addb
les
cmp
dec
push
ljmp
mov
jge
in
jge
adc
mov
test
rorb
sahf
sub
inc
xchg
xchg
insb
xchg
sbbb
sti
pop
cmp
jecxz
adc
cmc
mov
sbbl
xor
test
lahf
dec
adc
mov
jp
addl
mov
aam
lcall
test
jno
mov
pop
fwait
or
or
ljmp
in
cmp
jmp
jge
sbb
notb
shrb
mov
or
and
or
and
or
testb
cmp
dec
jnp
fstps
or
test
pop
mov
mov
cltd
push
inc
add
push
lret
js
shl
lahf
sbb
dec
test
enter
cmpsl
xorl
scas
shll
testb
repz
jbe
mov
sbb
fs
mov
test
movaps
sbb
jbe
xchg
pop
xchg
cltd
push
aaa
mov
in
das
adc
cwtl
dec
repnz
daa
inc
or
out
xchg
dec
or
xor
daa
mov
mov
push
insl
push
pop
jge
pop
in
stos
lret
stos
pop
jp
or
out
sarl
lret
insb
ja
test
cmp
aaa
push
mov
pop
adc
outsl
pop
cs
hlt
jne
rcrb
cmp
jae
inc
negl
cmpl
stos
pop
sbb
test
cmp
fsub
ljmp
xor
cli
incl
push
mov
add
mov
stos
or
pop
mov
orb
sbb
jnp
nop
push
add
test
pop
cmp
sti
sub
sbb
loopne
movsl
sub
nop
cmp
mov
sub
inc
lahf
push
mov
fistpll
lretw
mov
stc
movb
or
or
mov
icebp
and
test
std
jp
push
push
cmp
arpl
std
mov
jmp
test
jae
adc
lods
in
cmpsl
jo
cs
xor
push
fisttpl
insb
js
bnd
cmpsb
test
test
mov
loopne
in
scas
jl
pop
leave
addps
dec
mov
inc
test
lcall
jl
pop
mov
mov
ljmp
push
push
push
push
fcomip
stos
xchg
shl
cmp
test
add
pop
mov
pop
jmp
sbb
cmp
int
push
je
outsl
roll
push
mov
pop
pop
subb
mov
pop
push
add
xor
adc
pop
push
inc
push
test
iret
nop
loop
aam
int3
hlt
dec
test
cwtl
lret
out
xor
jbe
popa
or
imul
out
sbb
gs
xlat
daa
lahf
cli
jmp
sub
rorl
mov
adc
js
ror
aad
shll
push
sub
dec
and
mov
xchg
mov
outsl
sbb
lock
loop
xor
stos
ss
loopne
movsb
mov
sbb
movsl
out
stos
dec
popa
or
pusha
xchg
mov
xchg
shlb
jo
dec
or
imul
sbb
fs
jno
or
jp
mov
pushl
cltd
leave
xlat
push
pop
lret
stos
data16
es
and
mov
shll
in
add
rolb
lret
sub
repz
mov
mov
inc
out
and
mov
mov
lock
mov
pop
dec
mov
ffreep
aas
mov
and
sub
test
add
add
loop
fs
xor
adc
xchg
movsl
testb
mov
push
jp
cmp
xor
ja
sbb
cltd
idiv
or
enter
pop
sbb
sub
mov
dec
outsb
ret
lahf
adc
pop
mov
sti
out
mov
js
jle
mov
leave
sub
jnp
sti
loopne
mov
in
icebp
jmp
cmp
push
divb
cs
lret
and
scas
rcrb
outsl
cmp
andl
ds
push
pop
push
repz
sbb
push
movsl
mov
adc
dec
sbbl
stos
int3
mov
adc
mov
sarb
xor
sub
mov
and
or
nop
das
imull
lea
cmp
ss
mov
sbb
jge
in
icebp
aad
or
push
pop
sbb
mov
jl
cmp
jae
in
mov
mov
loop
add
loopne
add
rolb
daa
js
push
fidivs
jl
mov
stos
test
in
ja
nop
lods
push
test
inc
adc
nop
ds
je
and
int
mov
and
mov
xor
push
pop
shlb
std
stc
pop
mov
loop
cli
rolb
sbb
push
fwait
push
je
cs
insl
jp
test
push
fcomps
mov
xchg
pop
add
xor
push
insl
xchg
sbb
jbe
fs
pop
popf
pop
out
cmp
in
inc
jl
popa
rorl
movsl
test
sub
xchg
jecxz
xlat
test
cmp
lods
mov
hlt
pop
fs
mov
pop
push
popa
pop
mov
xchg
inc
and
xchg
dec
jg
add
xor
inc
mov
cld
popf
scas
inc
lods
inc
mov
dec
les
cmp
sbb
inc
clc
xchg
daa
das
cmp
and
lods
fnstsw
xchg
leave
jae
lods
push
mov
in
mov
sahf
jo
test
inc
sub
xor
pop
sub
mov
dec
cmp
dec
ja
mov
pop
push
in
in
xor
fildll
sbb
insl
jmp
int3
cmp
xor
mov
je
dec
sub
jp
ret
pop
push
aam
mov
cmovl
dec
mov
jb
lds
cwtl
push
sub
icebp
mov
mov
pop
pop
loope
dec
push
nop
xlat
add
ja
jg
add
enter
test
fwait
mov
clc
aam
dec
inc
js
testl
mov
nop
xor
es
shlb
or
mov
sarb
mov
push
out
inc
pop
push
cmp
bound
cmp
xchg
sbb
les
cwtl
inc
add
rorl
mov
sub
push
and
lahf
xchg
loop
int
xchg
jae
mov
xor
pop
popf
add
mov
mov
dec
enter
loope
mov
mov
lods
outsl
adc
xchg
pop
call
dec
leave
hlt
loopne
xchg
cli
pop
fnstcw
lea
fwait
cltd
pushf
mov
stos
mov
cmpsl
push
lret
pop
sub
leave
popf
scas
mov
es
or
xchg
jbe
cld
pop
cmc
pop
fwait
jb
adc
and
out
xchg
lea
aad
push
cmp
or
clc
add
mov
cmp
mov
inc
out
cs
popf
bound
and
xchg
xlat
fcmovnbe
jge
and
call
push
jns
cmpsb
xchg
js
cmp
push
in
cltd
jns
repnz
in
outsl
mov
mov
sub
out
mov
add
icebp
fs
vcmpps
xchg
arpl
and
mov
inc
lock
popa
les
aam
mov
sub
fcmovnu
or
rcrb
sbb
popf
xchg
adcl
mov
mov
add
xor
insl
test
andb
addr16
adc
inc
pop
mov
sub
dec
pop
in
pushf
push
cli
fwait
push
push
dec
stos
mov
fildll
dec
cld
cltd
dec
stos
pop
sub
pusha
xchg
shrb
and
out
push
dec
jmp
mov
ds
insb
fcomp
mov
inc
push
leave
out
push
cmc
inc
test
rclb
movsb
pop
mov
cmc
movsb
loopne
mov
movsl
addr16
into
push
lods
jae
and
test
gs
inc
stc
adc
mov
push
push
aaa
mov
sti
mov
mov
jl
pop
int3
js
dec
or
in
mov
mov
add
add
jl
out
inc
out
fidivl
stos
add
mov
popa
or
leave
fadd
data16
popa
unpcklps
daa
push
jmp
pushf
mov
cld
xchg
jge
aam
popa
pop
push
xchg
imull
clc
in
fs
jo
cld
int
icebp
outsl
sub
add
fists
outsb
ss
push
out
bnd
mov
ficomps
push
and
and
leave
cmp
inc
adc
aas
test
ds
inc
xchg
fstl
xchg
hlt
in
xchg
sub
xor
outsb
jae
sub
insb
add
dec
in
outsl
push
add
ret
jmp
jl
mov
lock
mov
push
mov
lret
push
imul
sub
negl
test
je,pn
dec
mov
lcall
xchg
lock
cmpsb
push
stos
xchg
imul
or
push
push
push
or
inc
dec
mov
outsl
pop
dec
cmp
cmc
mov
cmp
sub
or
mov
push
out
outsb
pop
jle
dec
sub
bnd
mov
sub
iret
jb
sub
sub
in
xor
mov
scas
pushf
aaa
lahf
popa
icebp
daa
adc
pop
sub
mov
sahf
fdivl
cmpsl
scas
push
inc
xchg
aas
and
jmp
jo
add
xor
xchg
jne
bound
xchg
loop
xor
xchg
push
ret
stc
xchg
in
dec
loopne
pop
dec
loope
adc
dec
scas
addb
sbb
jno
ret
dec
lahf
push
jne
mov
fstps
out
fcomps
xchg
push
or
aam
das
cmp
fistps
out
sbb
jno
call
cmp
push
xchg
jno
inc
test
fisttpl
clc
dec
adc
inc
pop
pop
cli
mov
es
das
lcall
mov
xor
fstpt
enter
ret
dec
fucom
jbe
pop
xchg
das
jle
push
pop
std
mov
int3
imul
cmp
mov
stos
mov
dec
jmp
xchg
rol
paddq
mov
jnp
ss
mov
adc
push
nop
xchg
or
aaa
out
adc
push
dec
inc
mov
jge
cli
mov
rclb
fsubrl
faddl
in
sahf
in
sub
mov
fwait
mov
out
das
mov
lret
ja
mov
daa
lock
and
jne
mov
inc
sub
fistpll
pop
push
bnd
insb
insb
adc
rclb
sbb
jbe
sbb
sbb
jge
adc
popa
insl
mov
cmp
cmpsl
cmpsl
pop
dec
aad
cwtl
aas
xchg
sbb
loop
jbe
or
stos
aam
mov
mov
xor
push
lret
das
mov
or
aas
xchg
push
fsubs
push
cmpsb
lods
loope
inc
and
dec
in
imul
daa
mov
imulb
cmp
int3
sub
push
pop
int3
xor
pop
mov
mov
outsl
lods
fdivr
inc
and
cltd
fbld
jbe
mov
ret
loope
xor
pop
dec
dec
imul
xchg
and
mov
push
and
dec
mov
je
jge
repnz
gs
mov
lock
loope
repnz
dec
adcl
lds
repz
pop
push
sub
dec
dec
int3
movsl
test
cmpsb
mov
test
cmp
sub
cs
cli
mov
cmp
fmuls
add
dec
inc
mov
fdivl
scas
pop
lods
out
aam
jmp
sbb
stc
retw
xor
push
cmp
mov
imul
mov
mov
xor
test
test
lret
out
movsb
repz
lds
loope
or
cmp
out
ds
mov
imul
ljmp
mov
fsubrp
int
movsb
or
xchg
xchg
pop
add
je
int3
roll
imul
imul
jle
cltd
jno
mov
jne
and
loope
insl
dec
cmc
pushf
mov
pushf
push
sbb
fwait
push
imul
popa
pop
or
aad
sbb
mov
and
and
xchg
push
adc
mov
mov
pop
xchg
sbb
inc
pop
scas
lahf
xor
push
xchg
in
cmpl
add
push
shll
ja
lcall
add
les
dec
pop
in
dec
cmp
push
xor
in
xor
push
pop
fs
and
mov
or
clc
cmp
icebp
xor
xchg
stos
inc
cli
sbb
jle
das
nop
sarl
out
xor
inc
jbe
scas
jmp
sub
test
icebp
loope
fucomip
pcmpgtw
aas
je
xchg
repnz
cli
mov
push
mov
std
jne
arpl
mov
xor
cli
xchg
push
pop
inc
mov
in
xor
or
in
or
push
add
shl
mov
int
add
mov
out
in
push
adc
fsubl
mov
inc
add
inc
push
adc
imul
lahf
dec
imul
pop
mov
inc
push
pushf
push
fs
test
outsl
fwait
in
xchg
lahf
in
sub
mov
add
xchg
add
jge
push
lahf
out
repz
popf
inc
add
push
pop
out
movsb
sub
add
adc
cmp
add
jo
popf
js
cs
mov
sarb
add
add
lods
or
faddp
daa
push
inc
je
xor
jnp
cmp
xorb
push
jle
add
add
enter
fiadds
jl
out
jo
mov
jl
inc
pusha
add
mov
jp
push
andl
aas
cmp
sub
mov
scas
adc
mov
mov
cmp
xchg
loop
or
fld
mov
cmpsb
sbb
mov
cmpsl
popl
xchg
aas
jle
adc
ja
xchg
cmpsb
js
jo
inc
and
mov
ficoml
outsl
lea
sub
jle
pop
pop
push
adc
loopne
mov
mov
xor
repz
imul
xor
pop
xchg
stos
cmp
rcrl
inc
add
mov
cmp
test
cmp
mov
and
popl
xchg
push
shrb
loope
mov
ds
cmpsl
or
in
dec
add
xchg
pop
clc
mov
loop
cmp
loope
xor
cmp
clc
push
out
sub
xchg
rorb
push
das
xchg
out
out
outsl
in
mov
ret
xchg
or
and
push
clc
ljmp
adc
incb
nop
push
data16
adc
cmp
fimull
inc
xchg
xchg
sub
lods
call
frstor
add
incb
jo
dec
dec
lds
pushf
shrb
dec
mov
and
pop
aam
push
pop
push
mov
cmc
imul
inc
gs
popf
std
pop
ljmp
pop
cmp
sub
loopne
sub
adc
push
sub
and
pop
frstor
mov
sbb
mov
std
fisubs
cmp
fidivs
jno
xchg
gs
cmp
inc
jns
repz
in
es
or
dec
mov
xchg
loope
jo
add
mov
nop
fdivp
sbb
adc
xorl
faddl
mov
mov
movsb
icebp
pop
sbb
cmp
stos
jnp
mov
pop
cmp
dec
push
xchg
mov
aas
xor
push
add
stos
pop
sahf
xchg
test
popa
and
cs
mov
push
iret
insl
or
in
sub
ja
push
xor
mov
push
mov
scas
inc
das
mov
ds
xchg
aas
rorl
adc
add
jb
and
push
lret
xchg
nop
cmp
push
jae
jmp
and
lock
sub
xchg
push
adc
bound
dec
mov
cmp
popa
stos
mov
out
mov
mov
jge
outsb
push
arpl
sub
das
pop
sub
imul
jne
mov
sahf
push
xchg
mov
inc
sbb
outsb
jge
dec
nop
hlt
icebp
push
jb
sub
add
cmp
push
sub
movb
in
fwait
pop
mov
inc
xchg
call
shrl
xchg
or
cwtl
ds
ret
lock
cmp
scas
in
pusha
icebp
mov
aad
imul
insb
test
aaa
mov
lea
lods
insb
hlt
lock
movsl
rol
std
lods
sti
mov
pop
sbb
or
sbb
push
out
hlt
ret
fistpl
cwtl
push
add
push
adc
pop
or
inc
out
dec
mov
test
jmp
insl
pop
adc
ja
outsl
push
inc
fdivrs
aas
aad
shrb
cmp
jmp
insb
inc
and
mov
dec
and
jecxz
shlb
into
daa
push
out
dec
push
das
lahf
mov
push
je
pop
insb
mov
pop
in
mov
or
pop
enter
mov
cmovns
mov
inc
movsb
cmp
pop
inc
aam
pop
mov
imul
out
mov
mov
imul
popf
push
flds
or
add
sbb
jns
or
mov
xchg
outsl
andl
or
cmp
fs
inc
std
xor
fwait
ja
cmc
or
sub
add
in
lods
push
rcrl
adc
dec
pop
addr16
shr
push
mov
add
push
add
cmp
subl
jns
ret
and
xchg
mov
sbb
sub
cmpsl
add
xchg
cmp
or
xor
pop
and
lock
add
cmp
push
movsb
sbb
popf
pushl
iret
sbb
test
pop
sub
mov
jecxz
mov
test
xchg
mov
push
adc
insb
mov
xor
mov
pop
nop
mov
sub
int3
jns
data16
pop
stos
sbbb
cmp
insl
jnp
ret
jl
mov
mov
xor
rcr
or
dec
cmp
mov
mov
sub
push
sbb
hlt
neg
xchg
call
loop
cs
test
mov
dec
scas
stc
lret
xchg
inc
pop
add
fs
ljmp
fwait
or
jae
rcr
mov
sbb
ss
ljmp
gs
cmp
mov
ret
call
cmp
into
les
mov
xchg
mov
mov
mov
fs
loop
rcrb
mov
adc
adc
aad
aaa
and
sub
cmpl
or
dec
data16
xchg
hlt
adc
adc
push
mov
cltd
dec
aaa
lds
mov
dec
ss
and
movsl
push
jp
aas
sub
push
out
cmpsl
fbld
jae
xchg
jo
fwait
popf
fistps
fmuls
xlat
ret
out
cmpl
scas
dec
test
mov
jmp
lret
dec
cld
fsubs
dec
orl
scas
adc
pop
insl
adc
sbb
sub
jbe
mov
pop
pop
push
mov
mov
lret
mov
hlt
xchg
mov
scas
push
repz
test
pop
inc
out
jb
imul
dec
aas
roll
sbb
sarb
fistpll
movsl
mov
lcall
add
pop
jg
xor
in
les
sbb
xor
or
add
fcmovu
stos
xchg
or
gs
cmp
scas
dec
mov
fcmovu
mov
or
ret
mov
enter
gs
pop
andl
mov
lea
push
inc
dec
movsl
xchg
sbb
arpl
xchg
mov
mov
mov
outsb
in
mov
pusha
mov
pop
add
dec
jb
inc
xchg
mov
roll
shr
gs
adc
nop
in
fwait
sarl
and
cwtl
add
std
pop
and
loopne
test
roll
fistps
icebp
mov
push
leave
add
aas
jge
xchg
mov
outsb
adc
test
insb
lds
lds
stos
stc
stos
imul
aas
inc
mov
loopne
in
jge
mov
sbb
jmp
pop
pusha
or
sub
loope
rcrl
and
jg
inc
ja
sub
mov
jnp
aad
pusha
inc
cmpsb
fldt
add
cmp
push
jmp
jae
push
and
inc
cli
rorb
sbb
jmp
bound
movsl
cmp
jb
ja
adc
iret
nop
push
test
mov
lret
xlat
data16
xor
cs
movsb
fildll
sahf
inc
stos
inc
into
scas
mov
gs
stc
jbe
xchg
or
mov
add
or
outsl
mov
enter
loope
xchg
sub
sub
roll
and
test
dec
loopne
xchg
mov
ret
or
mov
jge
jae
and
pop
lods
shrb
inc
orl
sbb
lcall
and
out
jno
pop
jb
sub
test
mov
sbb
push
mov
dec
rolb
mov
push
mov
xchg
inc
push
xchg
mov
add
cs
in
push
in
mov
jl
daa
mov
xor
jo
xchg
pop
push
and
push
sbb
or
dec
incb
addr16
pushf
aad
icebp
inc
add
addb
pop
jl
cmp
out
mov
push
sub
addps
xor
fidivrl
xchg
mov
sub
shl
or
cmpsb
adc
mov
aas
adc
ljmp
cmp
stc
mov
je
clc
outsl
push
pop
and
sbb
push
rolb
or
mov
or
or
mov
push
adc
in
aaa
sbb
jnp
adc
adc
subl
test
mov
ret
push
and
cs
or
popf
sub
lods
push
ja
stc
rcr
lret
cmp
int
ds
push
mov
aas
aas
insb
and
or
sti
dec
xor
aas
sub
incb
mov
or
pop
fisubrs
cmpsb
add
test
test
enter
rclb
xor
repz
insl
fdivl
imul
xchg
sbb
sbb
outsl
es
punpckhdq
lock
in
or
hlt
data16
in
mov
or
or
shll
and
lock
adc
fimuls
icebp
jg
xchg
sub
mov
or
out
pop
pusha
or
cmp
sub
cmp
xchg
jne
hlt
dec
fiaddl
scas
jo
or
sub
lahf
daa
add
xor
scas
fs
dec
cltd
ficoml
jp
xor
aaa
lahf
das
jne
sub
xlat
cmp
clc
xor
into
out
inc
iret
or
mov
fldz
cmc
pop
xor
dec
jbe
jno
test
bnd
jne
xchg
mov
adc
aad
sbb
scas
xor
cmp
lods
mov
xor
push
imul
mov
adc
and
icebp
cmp
mov
movsb
rcr
xchg
insl
xchg
cmpsb
fwait
mov
jnp
push
jecxz
sbb
push
jne
dec
jns
xchg
addl
or
adc
cmpsb
xor
stos
adc
cmp
jo
aad
xlat
popf
insl
ljmp
and
movsb
dec
add
imul
sub
cmp
sub
fidivrs
cs
mov
pop
out
jmp
pop
push
add
aam
mov
xlat
sub
xorb
sub
stc
cld
or
pusha
cmc
mov
imul
mov
push
test
inc
mov
cmp
pop
or
sti
mov
mov
imul
push
mov
push
jge
out
insb
cwtl
pop
xor
insb
in
jecxz
out
repz
add
pushf
mov
xor
call
test
lea
sub
loope
mov
lret
ds
pop
fstps
call
cmp
sahf
push
scas
popf
mov
out
shr
outsl
jo
fnsave
ficoml
and
sbb
pop
gs
xor
lret
adc
pop
leave
ja
cmp
xchg
or
push
add
rcrb
jp
inc
fldcw
push
push
sub
in
out
adc
adc
jle
sarl
push
sbb
jnp
scas
push
icebp
inc
mov
pop
inc
clc
sbb
into
jo
leave
pop
js
in
in
outsb
aam
fwait
rcl
xor
and
xchg
clc
inc
movsl
jne
jno
cld
mov
mov
adc
mov
sub
inc
out
mov
xchg
xchg
mov
stos
or
mov
movsl
xchg
mov
orl
ss
or
pop
pusha
xor
mov
out
adc
and
pop
sub
mov
xor
pop
push
in
push
mov
out
mov
cs
mov
sub
scas
repz
out
int
shr
xchg
test
int3
pop
and
filds
mov
mov
xor
lods
test
dec
push
hlt
rcrb
mov
push
mov
dec
push
sbb
stos
push
jmp
das
pop
arpl
ss
outsb
and
xor
and
mov
mov
iret
sbb
dec
mov
pop
mov
movsl
out
movsl
sti
daa
jo
orb
sub
js
jb
call
sub
dec
adc
pusha
popf
mov
and
test
cmp
inc
push
dec
xchg
lcall
push
scas
bnd
cmp
fwait
xor
jo
fsubr
into
insb
shlb
arpl
or
xor
sbb
bound
inc
mov
jl
lock
mov
sub
pop
mov
mov
add
mov
mov
outsb
mov
nop
push
repz
pop
push
mov
jbe
cmp
gs
int3
in
mov
ret
mov
aam
ja
lods
jno
test
sbb
jae
fnstsw
cli
xchg
mov
adc
mov
and
cmp
divb
out
push
xchg
out
ret
or
fwait
insb
in
and
xchg
ret
out
lahf
mov
add
adc
pop
jecxz
jbe
pop
stos
shl
sbb
adc
lret
jecxz
fwait
jmp
xlat
inc
sbb
push
mov
dec
mov
adc
loopne
idivl
and
xchg
scas
mov
mov
fwait
iret
mov
pop
mov
pop
and
fmull
shlb
jmp
ja
fucomp
and
pop
push
in
inc
jle
addr16
dec
hlt
fimuls
fcompl
mov
mov
cmp
mov
fs
pop
jmp
push
mov
rorb
jmp
mov
imul
fwait
jae
std
mov
pop
nop
fmuls
dec
xchg
fsub
mov
jecxz
lret
mov
inc
psllw
sub
or
or
xchg
aas
into
ret
pop
inc
dec
insl
xchg
push
mov
stc
and
or
in
cltd
xchg
sbbb
out
lods
jae
jo
shufps
or
fiadds
and
jmp
mov
call
sbb
pop
xor
insl
push
fdivrl
nop
mov
ja
mov
mov
nop
test
rol
ret
cmp
andb
mov
popa
lods
ret
insb
aam
pop
sbb
test
add
push
hlt
jge
pop
lea
xchg
andb
fs
xchg
stos
fwait
mov
xchg
jno
mov
inc
and
mov
repnz
ss
sarl
test
xchg
adc
shrb
cwtl
push
dec
cmp
out
das
push
xor
les
out
ss
pop
add
and
add
add
xor
adc
mov
mov
mov
ja
jne
add
nop
xor
push
jb
dec
sar
fldl
sbb
jnp
pop
into
fstpl
orl
xor
popa
bound
testb
xchg
loopne
sbb
or
fisubrs
jo
hlt
aas
loop
jp
cmp
sbb
fiadds
js
sbb
sarb
sbb
and
scas
sahf
lcall
push
mov
test
stos
test
xor
dec
mov
cltd
fisubs
arpl
jb
mov
fbld
sub
in
ds
mov
jge
ret
push
mov
or
adc
xor
dec
and
das
mov
cli
arpl
rcll
push
loop
mov
das
push
xchg
aas
mov
fcompl
mov
cld
push
jle
outsl
lea
inc
mov
dec
add
push
add
cmp
mov
jle
test
pop
rclb
mov
sub
fisttps
dec
sub
mov
inc
xchg
push
push
mov
ret
int3
fstps
adc
mov
sub
or
xor
movsb
stos
dec
fstl
cmp
test
shl
pushf
pop
ds
pop
pop
inc
stc
cmp
pop
lahf
push
push
add
ror
pushf
push
stos
aaa
mov
lcall
jl
xor
bound
in
lret
enter
pop
push
xchg
test
mov
fwait
imul
ss
pusha
mov
jo
lahf
lock
or
lea
js
sahf
notb
call
hlt
fdivl
fwait
nop
push
or
bnd
and
lret
out
add
mov
pop
stos
rcrl
loop
sub
xchg
add
xlat
fistpl
lds
mov
push
push
xchg
inc
sarl
sub
cmpsl
xor
cmpsl
pop
xor
pop
ja
flds
xor
out
movsb
jecxz
leave
arpl
add
mov
out
or
stos
add
mov
jae
in
pop
jo
sub
xchg
cmp
jmp
mov
or
movsl
into
fiaddl
orb
push
scas
nop
mov
add
push
mov
lret
jno
mov
mov
or
jge
aas
jbe
xchg
xor
loop
dec
punpckhdq
lcall
fdivs
popf
jne
aaa
pop
push
sbb
fs
push
pushf
stos
test
pop
cmp
test
out
clc
lcall
cwtl
sti
dec
xchg
bound
aaa
lea
lret
xchg
lret
cmp
lods
lcall
incl
jl
out
xacquire
mov
mov
pushf
ret
das
call
push
jnp
repnz
dec
xor
jl
dec
jp
outsl
pop
adc
rcrb
push
lods
mov
jp
xchg
hlt
int
sbbl
dec
pop
bound
mov
cwtl
shrl
adc
cmp
xor
and
mov
sbb
mov
add
xchg
sub
stos
dec
cld
shrl
xchg
and
mov
stos
cmp
cmc
rcr
jnp
dec
pop
or
daa
jns
lret
mov
jne
jl
stc
pop
add
out
fdivrl
inc
lahf
mov
and
sub
push
sbb
aam
jecxz
pop
imul
shrl
mov
data16
hlt
testl
push
cmc
movsb
jae
push
xchg
pop
les
pop
pop
aas
xor
aas
push
mov
test
cmp
xchg
sbb
cmp
decl
std
mov
pop
add
das
popf
sbb
inc
push
loope
and
cli
cld
mov
shlb
and
cmp
push
add
push
cmpsb
xlat
cltd
das
ret
fisubl
pop
sub
das
xor
inc
js
adc
hlt
xor
inc
pusha
fyl2xp1
sarl
fisttps
pop
jno
mov
inc
ds
hlt
mov
inc
in
pop
fldpi
xchg
xchg
inc
test
adc
xchg
mov
or
imul
loopne
or
popa
lods
sbb
repnz
mov
or
lock
mov
cmp
aas
sub
shll
pop
pop
andl
dec
int
cmp
inc
ret
xchg
fdivs
adc
mov
es
insl
js
sbb
gs
in
jbe
sti
cmp
int3
dec
sbb
adc
xchg
adc
jnp
mov
mov
ja
outsb
lock
jl
mov
fisubl
rorl
push
push
popf
mov
or
or
arpl
mov
dec
fistpll
test
ljmp
test
sbbb
cmp
cmp
fucomi
leave
jne
mov
inc
xchg
mov
jecxz
scas
mov
lcall
pop
icebp
xchg
inc
mov
imul
imul
ja
mov
sub
cmp
into
or
sub
cwtl
inc
rorb
inc
cltd
pop
dec
ret
push
int
jae
jmp
add
add
mov
xchg
fwait
aad
pop
inc
mov
jno
mov
inc
sbb
dec
jl
add
push
scas
xchg
out
xlat
sahf
je
add
outsl
dec
pop
inc
push
fnsave
mov
adc
adc
std
cmpl
cmpsl
loop
cmpsb
pop
add
pavgb
adc
jecxz
out
xchg
push
pushf
sahf
jne
push
hlt
mov
jecxz
stos
xchg
push
mov
rcll
ret
test
mov
jmp
mov
insl
push
ds
imul
inc
pop
cltd
xchg
stos
lret
ret
jp
mov
jno
aaa
add
in
insl
jne
dec
mov
mov
mov
add
imul
cmc
push
mov
call
sbb
lock
mov
insl
mov
cmp
in
and
sub
loope
xchg
push
sbb
xor
les
xchg
cmc
mov
rclb
popa
repz
push
inc
push
arpl
js
cmp
jp
push
adc
aaa
xchg
int3
aad
mov
sti
mov
sbb
gs
jo
aad
xchg
out
lods
pushf
or
mov
loopne
jmp
test
or
mov
les
test
sbb
in
sbb
or
sbb
scas
inc
jge
setae
mov
cwtl
fwait
jbe
imul
pop
pop
sbb
xchg
xchg
pop
jae
sub
inc
cmpsl
xchg
cmc
jb
shll
mov
jns
jae
inc
sub
js
push
daa
rclb
cld
les
outsb
pop
div
and
mov
cmpsb
fisttpll
jmp
mov
xor
testb
rolb
mov
push
arpl
arpl
xor
cld
push
mov
clc
sbb
sub
add
fadd
add
insb
fcompl
or
pop
inc
add
push
fs
adc
mov
aaa
xchg
adc
sub
ljmp
lret
mov
xchg
arpl
inc
cli
out
rcr
nop
or
cmp
pop
jp
mov
cmp
add
dec
push
sub
cmpsb
or
decb
lods
cltd
mov
testl
mov
sub
xor
cmp
sbbb
gs
loop
dec
stos
pop
cmp
aad
mov
neg
jae
xchg
fisttpll
xor
pop
add
jns
das
sbb
into
xor
xchg
push
dec
mov
push
xchg
outsl
icebp
mov
sub
test
out
or
inc
jmp
inc
movsb
lock
ret
int
xchg
subb
jge
pop
jae
jno
mov
add
test
or
dec
test
fistpl
adc
loopne
sbb
jno
push
mov
imull
and
cmp
adc
push
xchg
jecxz
jo
pop
cmpsb
hlt
push
in
lock
cmp
mov
sbb
enter
mov
pop
xor
mov
jo
xor
ss
dec
mov
sti
or
loope
hlt
xchg
aaa
sarl
lret
lea
fs
aaa
ret
push
test
out
adc
insb
xchg
out
pushf
mov
or
mov
push
pop
insl
xor
arpl
aaa
imul
mov
repz
jb
add
cmp
popf
xchg
jg
jge
out
mov
xchg
push
xor
push
pusha
cli
es
jl
push
dec
je
xchg
dec
adc
pop
imul
inc
push
xchg
mov
sbb
pop
mov
ret
repz
rorl
lods
xor
stos
jmp
je,pt
lcall
lock
pop
push
jg
insb
es
in
or
push
xchg
mov
jo
aaa
dec
and
dec
fnsave
arpl
inc
mov
push
jb
dec
repnz
rclb
sub
xchg
mov
jnp
fcmovnb
or
adcb
push
sub
mov
push
scas
call
cmp
mov
pop
and
outsl
sbb
sbb
mov
outsl
fs
ficoml
and
inc
daa
sti
cld
push
sub
loopne
mov
adcl
add
fs
sbb
mull
pop
inc
movzwl
cld
jg
pop
dec
jbe
shrb
inc
lret
out
xchg
sub
xor
inc
and
outsl
lods
and
mov
int3
cmpsb
mov
shl
inc
or
das
inc
mov
mov
sbbl
nop
mov
das
xor
in
xchg
mov
fistpl
mov
fsubrs
es
out
out
xchg
cmp
das
aam
out
inc
mov
insl
jne
and
xchg
cmc
xchg
inc
aaa
cmp
call
movsl
xchg
movsl
sub
lret
mov
sahf
lea
adc
mov
cmp
ljmp
add
scas
or
lods
scas
les
mov
xor
stos
cwtl
jle
fcomp
cld
loop
sti
mov
clc
sub
out
cmp
bswap
sub
movsb
push
adc
aam
in
pop
ret
add
test
jl
push
sti
adc
xorb
in
aam
mov
inc
and
cmpsl
into
mov
rclb
xchg
arpl
or
jle
sahf
adc
enter
rclb
fdivs
push
shlb
add
mov
negb
imul
adc
gs
out
sub
fldl
sub
mov
inc
outsl
xchg
iret
adc
das
dec
mov
push
and
loopne
inc
repnz
push
idiv
jmp
into
fcmovnbe
push
push
bound
sub
loope
and
push
js
or
adc
push
and
das
je
cmpb
cmpsl
loope
cmp
jno
mov
popf
push
das
xchg
shr
inc
and
mov
inc
stos
add
mov
xor
inc
mov
in
jbe
je
jne
inc
jne
cmc
out
js
in
fnstsw
js
pusha
out
loop
stos
in
jge
sub
je
jmp
adc
and
xor
test
scas
fcmovnbe
gs
xchg
xor
loope
push
jo
insb
or
push
jg
gs
cltd
jo
rcr
cmc
mov
in
dec
xchg
mov
cli
add
js
and
lahf
xchg
mov
and
sub
lret
push
jg
xor
cs
fyl2x
movsb
inc
jg
lock
jecxz
out
add
add
rorl
scas
xor
lods
mov
arpl
scas
adc
jb
data16
mov
out
or
sbbl
dec
jno
push
scas
insb
jle
pop
rorb
mov
pop
fmul
push
cmova
mov
push
cwtl
push
out
scas
mov
inc
arpl
inc
imul
jp
iret
bnd
dec
test
ret
bswap
aad
jnp
jnp
test
nop
dec
lretw
int3
repnz
mov
imul
hlt
push
and
jnp
in
scas
pop
xchg
mov
dec
inc
fmuls
fists
pusha
rol
fimuls
xchg
sti
imul
sub
xor
mov
lret
xor
jns
aaa
pop
adc
scas
pop
insl
in
cmp
sbb
pop
lahf
mov
pop
jae
jbe
imul
or
cld
mov
test
sbb
ds
mov
xor
imul
cli
pop
repnz
push
xor
sahf
enter
adc
and
scas
pop
mov
pop
cmp
xchg
out
cmp
pop
xor
fbld
test
mov
dec
jnp
ljmp
fdivrs
lret
fstp
js
repnz
xor
xor
ret
adc
mov
dec
xor
cmp
push
imul
sbbb
or
sub
pop
cli
movsl
xor
xchg
shlb
add
adc
jns
mov
inc
push
popf
fwait
or
push
data16
mov
push
insb
pop
mov
loope
add
push
inc
push
mov
cmp
push
add
cltd
cmp
cmp
imul
sti
xor
inc
out
mov
icebp
mov
dec
test
fstpt
inc
adc
movsb
dec
lcall
sub
jge
sti
into
pop
repnz
repz
outsb
sub
cmp
sbb
fs
inc
dec
cltd
fstps
lret
adc
jb
imul
and
addb
xchg
rcll
or
mov
jbe
pop
mov
push
movsl
out
xor
into
xchg
inc
pop
clc
aam
lods
in
out
shlb
push
mov
adc
pushf
or
cmp
lret
jae
sub
lahf
ss
aam
dec
movsb
and
subb
inc
mov
das
enter
and
roll
inc
call
lods
or
dec
stos
xchg
or
into
popa
jnp
jae
pop
push
push
pop
push
pop
test
adc
jno
fstpt
sbb
cmp
int3
loope
sbb
int3
sub
add
ret
addr16
jb
fistps
repnz
orl
lahf
test
pop
ss
cmpsb
movsb
out
inc
ret
xor
sbbl
call
lcall
or
outsl
jmp
inc
shll
lahf
inc
cltd
ficomps
mov
sbb
and
lcall
push
cmc
jle
cli
mov
lret
dec
aam
aam
push
sbbb
sub
mov
or
cmp
pop
ljmp
xor
in
inc
cmp
and
insl
mov
aam
adcl
fisubrl
jmp
cld
and
test
pop
mov
or
push
hlt
and
dec
inc
cmp
cwtl
or
repz
pusha
notl
mov
mov
pop
jb
pop
and
aaa
jge
jae
and
pop
cld
int
jmp
test
inc
icebp
inc
ss
or
rclb
push
dec
inc
jmp
lds
out
outsl
pop
call
enter
cmp
adc
arpl
clc
stos
fildll
xchg
cmp
fadds
fs
cli
push
repz
mov
shlb
and
xor
idivl
fstp
movsl
stc
scas
mov
rolb
xchg
adc
andl
xchg
icebp
dec
stc
outsb
test
push
and
stos
mov
jmp
lret
jnp
cld
lods
xchg
scas
inc
cld
sbb
loopne
jae
cwtl
mov
orl
imul
pop
out
push
adc
sbb
push
dec
mov
in
js
inc
jg
inc
mov
push
ljmp
jns,pn
or
mov
sbb
pop
fs
and
xchg
pop
xchg
imul
and
inc
stos
addr16
xor
scas
loope
push
xchg
cmp
cs
or
push
pop
sub
mov
push
rcrb
push
mov
iret
jmp
outsl
movsb
pop
into
ds
inc
decb
jns
adc
mov
or
std
es
ret
dec
sub
and
test
lock
mov
std
mov
jbe
test
dec
and
cwtl
or
mov
xor
out
push
xchg
outsl
aaa
ret
xchg
mov
pop
sti
cmp
xor
add
imul
jecxz
repz
lcall
pop
inc
out
data16
jge
adcb
add
inc
mov
shlb
lret
fcmovb
aad
sbb
pop
pop
add
outsl
out
and
cmp
cmp
outsb
andb
aaa
jmp
xbegin
sub
sub
aad
pop
cmc
in
pop
inc
mov
cli
fistpl
sub
test
ret
bound
insb
sbb
cmp
or
cwtl
mov
scas
daa
rcl
adcl
aad
or
and
lcall
mov
ja
test
cmp
pusha
cld
out
inc
popf
sbb
rclb
mov
and
rcr
adc
rorl
adc
aam
shll
loop
push
loope
mov
cmp
popf
ret
mov
push
add
push
sbb
mull
xchg
sbb
mov
imull
cli
test
or
cmp
loop
orl
icebp
out
cmp
push
adc
xsha1
cmpsb
mov
mulb
mov
mov
test
enter
xchg
mov
push
lds
mov
adc
shrb
pusha
fdiv
mov
jo
adc
inc
fidivl
adc
add
scas
loopne
xchg
push
and
loopne
sub
sub
pusha
push
in
or
fsts
xor
sbb
shl
or
dec
jbe
or
std
xor
xor
iret
xor
aam
dec
sbb
ljmp
and
and
lret
nop
sbb
add
imull
clc
scas
push
or
mov
mov
add
ret
sub
aas
adcw
test
cmpsb
cmp
sbb
cld
pop
or
repz
xchg
sub
mov
push
shl
arpl
aad
sbb
into
xchg
xor
pop
idivl
imul
cmp
xchg
cmp
and
mov
jae
data16
jbe
mov
sbb
push
fwait
push
fistps
shlb
lea
mov
xchg
in
pop
popf
sbb
jo
or
mov
cmc
test
rcr
push
xor
ret
insl
call
fwait
jno
sub
add
inc
sub
in
ficomps
mov
repz
mov
lret
addr16
outsl
push
adc
lahf
mov
cmpsl
jg
xchg
les
jmp
add
fldt
adc
pop
in
and
int3
es
and
loope
cmp
jl
mov
int3
rcr
ss
ror
divb
mov
das
jecxz
push
int
add
adc
rcrb
sbb
test
arpl
in
scas
push
inc
dec
fcoms
fnsave
xor
pop
lea
mov
test
xor
adc
inc
or
xlat
xchg
lods
icebp
aaa
jno
mov
int
adc
mov
movsb
stos
sub
ljmp
daa
jno
lods
sti
dec
sbb
mov
mov
cltd
push
and
mov
shll
jne
pop
and
adc
rcll
cmp
lret
cmp
adc
cmpb
push
mov
sub
orb
das
int
adc
cmpsl
sbb
repz
out
jb
filds
ss
cmp
xchg
xor
mov
jbe
mov
enter
xchg
dec
jae
fcmovnu
sub
movsl
dec
jo
scas
out
mov
xor
sar
cmc
js
jl
cmp
roll
sbb
push
rorb
pop
xor
mov
cld
xor
pop
xchg
cs
or
pop
fidivrs
cmpsb
sub
aaa
dec
nop
adc
outsl
fcoml
jo
sbb
xchg
mov
lock
mov
movsl
stos
jns
ret
aaa
add
int3
mov
sar
test
pop
pop
ret
movsb
lea
pop
pushf
popfw
push
mov
push
neg
adcb
or
in
add
iret
mov
sbb
cmp
movsl
adc
imul
and
insl
jmp
dec
jle
imul
repnz
call
xor
nop
jle
add
decb
lret
or
pop
pop
jmp
pop
clc
push
cltd
jle
cmp
loop
ficoms
sbb
or
lock
mov
decl
pop
lods
or
inc
lret
pusha
repz
mov
and
subl
testb
cli
loope
test
call
xor
jae
xor
cld
pop
aaa
xchg
aad
fimull
or
ret
xchg
mov
and
pop
dec
loope
pop
adcl
push
adc
jmp
insb
push
sbb
fistpll
lahf
cmp
ret
scas
in
dec
insb
push
mov
jp
jnp
in
gs
push
hlt
clc
dec
pop
xchg
mov
stos
mov
mov
lods
inc
pusha
mov
js
pop
mov
pop
fcompl
data16
sbb
int3
out
sub
test
add
sub
addl
sarb
insb
xchg
jg
xlat
lret
imul
sub
cs
aad
mov
in
jl
or
hlt
cmp
xor
add
or
jg
lods
jns
and
push
std
push
ja
mov
bnd
movsl
lret
cmpsb
setno
xchg
ja
pop
outsl
stos
ja
mov
fidivrl
jbe
les
push
push
stos
jmp
clc
sbb
popf
addr16
adcb
sbb
insl
arpl
cmp
iret
and
push
mov
and
lods
mov
lret
cld
cmp
mov
rcr
out
or
xor
jle
int
add
sub
dec
inc
cmc
adc
push
daa
push
inc
lods
mov
pop
movsl
mov
and
addb
fbld
mov
scas
test
cmp
cwtl
jle
aaa
dec
testb
mov
lahf
ljmp
adc
sbb
sti
cmp
sbb
push
xor
or
les
inc
sahf
push
sbb
xor
aaa
mov
decb
mov
aam
iret
xchg
aad
xchg
fidivl
pop
mov
out
fcmovnu
orl
data16
push
enter
out
push
aaa
xchg
lods
orl
call
movsl
sbb
fnsave
out
aas
push
inc
and
das
inc
mov
dec
mov
in
out
mov
adc
ljmp
faddp
enter
jae
in
push
jb
add
xchg
cld
add
jge
adc
sub
xchg
fbstp
mov
jle
outsl
jne
sbb
xchg
cmp
popa
out
add
sbb
bound
cmp
dec
inc
mov
scas
popa
pop
mov
repz
insb
inc
sti
cld
xor
pop
repz
rorl
and
ret
outsb
sbb
lahf
lods
and
push
pusha
gs
rorl
cmp
add
jp
add
sub
fistpll
mov
sarl
mov
mov
xchg
loopne
dec
in
fimuls
popa
test
pop
loopne
fisubrl
dec
out
jg
inc
aad
push
mov
fists
subps
xchg
mov
je
inc
sbb
outsb
mov
mov
pop
and
and
in
mov
out
clc
push
pop
in
or
test
cmp
test
rcl
xor
out
nop
push
vmread
lock
xor
div
dec
fstl
push
mov
pop
gs
adc
jp
int3
jb
or
xlat
pop
mov
lret
pop
outsl
sbb
sub
sbb
cli
lcall
in
mov
sub
jmp
mov
mov
fstl
stos
push
or
push
inc
dec
outsl
bound
mov
push
arpl
push
sbb
mov
sbb
push
sub
or
or
and
sbb
jmp
lret
mov
mov
dec
fsubs
cwtl
and
inc
dec
xor
push
sbb
mov
mov
dec
in
sub
or
xor
jmp
jno
push
es
lods
pop
js
pop
lods
pushf
ja
paddb
shrl
sbb
sub
mov
imul
mov
or
popa
inc
xor
enter
xchg
cmp
push
lret
pop
je
xor
and
gs
pop
rcrb
ljmp
inc
je
out
adcl
sub
ja
inc
fists
sub
inc
fwait
jns
xchg
fcomps
jne
aad
jle
bound
sbb
outsb
and
jno
xchg
lea
mov
iret
ja
pusha
lock
addr16
sub
mov
shll
cmp
add
sbb
scas
mov
jns
lret
dec
cmp
mov
mov
sbb
dec
and
mov
or
loop
and
shll
inc
pop
xor
idiv
jle
es
mov
sub
roll
and
mov
jbe
jecxz
mov
sbb
arpl
cltd
mov
mov
and
and
sbb
cmp
je
cs
mov
dec
dec
dec
cld
jae
inc
sub
into
arpl
push
xchg
jmp
mov
sub
mulb
add
int3
bound
inc
fidivl
or
mov
pusha
sub
bound
pusha
mov
pop
jns
cli
sahf
mov
cmpsl
pop
inc
and
jbe
xchg
loopne
mov
test
sub
xor
in
fmulp
insb
adc
inc
stos
sub
andl
ja
enter
adc
sub
ret
mov
imul
mov
ret
jo
sbb
sub
jge
lahf
add
aad
mov
loop
outsl
cmpsb
add
pop
push
xor
pop
add
fistpll
arpl
fs
xchg
enter
mov
scas
xchg
lret
inc
cltd
and
testb
cmp
lods
inc
cs
popa
sarb
xchg
mov
mov
mov
insl
mov
pop
inc
mov
jnp
jne
mov
xchg
xlat
inc
jl
mov
pop
push
ds
xlat
xchg
mov
mov
pop
movsl
nop
xchg
pop
cmpsb
test
adc
mov
or
adc
call
lcall
in
add
and
mov
fadds
call
cmp
lea
adc
jmp
imul
dec
mov
jl
jae
arpl
scas
data16
fld
mov
mov
sbb
in
cltd
shll
js
adc
xor
adc
xchg
rcr
xor
out
enter
mov
mull
xchg
jecxz
roll
imul
inc
aas
cmp
adc
add
inc
jmp
or
test
and
outsb
jno
jne
test
cmpsl
icebp
push
rcrb
into
jbe
add
dec
punpckldq
fstps
sub
lcall
fs
sbb
sub
adc
mov
fisubs
jmp
adc
or
loop
fisttpl
fisubrl
and
mov
xor
mov
incb
mov
adcb
test
dec
or
in
in
dec
mov
inc
lods
inc
xchg
cmpsb
stos
lds
test
outsb
stos
or
jbe
inc
in
cmp
fwait
pop
test
xchg
clc
xchg
dec
jnp
mov
cmc
xchg
cmpsb
pop
inc
pop
cmc
call
fnstsw
xor
xchg
push
and
mov
xchg
cwtl
push
xlat
repz
push
cmpsl
or
fcoms
loopne
mov
data16
push
jmp
loopne
adc
add
cld
stos
stos
jmp
imul
jp
ja
xchg
jbe
fwait
xchg
setg
adc
in
ret
popa
pop
sbb
cli
andl
enter
mov
mov
xor
insl
xchg
xor
daa
cmp
imul
add
push
aad
mov
mov
mov
ja
out
jge
lods
inc
sbb
sar
lods
adc
in
inc
std
lods
add
std
testl
lock
data16
ljmp
hlt
lock
pop
aad
mov
sub
jb
cmp
int3
out
and
mov
in
dec
hlt
fstpl
sbb
out
mov
pusha
sahf
jb
pop
xor
jnp
les
add
mov
pushf
adc
jmp
add
or
adc
sub
and
shrl
out
enter
push
and
adc
mov
fsubr
pop
repnz
stc
mulb
sbb
pop
fists
and
imul
adc
data16
fwait
les
fsts
mov
addr16
dec
arpl
sahf
add
xor
jl
cmpsl
fstpt
push
stos
push
mulb
mov
jne
int
adc
nop
jge
mov
lea
bound
popf
es
mov
ds
insl
jge
test
mov
lds
sti
mov
adc
mov
xchg
out
scas
test
in
inc
sbb
add
pop
dec
mov
aaa
adc
jbe
roll
mov
xchg
jae
jne
pushf
xchg
rcll
cmp
mov
sbb
mov
dec
inc
xlat
shlb
mov
inc
inc
ret
push
mov
pop
orb
cli
mov
pop
fimull
sar
sub
add
push
sarb
lahf
dec
mov
or
cs
sub
pushf
loop,pn
or
daa
shl
cmp
bound
negl
lods
lods
lock
xchg
xor
mov
mov
ds
adc
sub
adc
shr
mov
lcall
mov
dec
ret
pop
and
dec
mov
xor
test
cmc
or
add
mov
and
das
push
sbb
les
aad
push
mov
pop
add
push
insb
shl
mov
or
xchg
gs
movsl
mov
dec
add
and
int3
gs
idivb
cmpl
clc
test
fcoml
mov
xchg
ret
ljmp
dec
mov
out
jp
frstor
dec
mov
inc
lods
aaa
lret
int
push
dec
in
sub
push
add
movsb
hlt
adc
aaa
cmpsl
mov
jl
fnstcw
arpl
push
lods
imul
int3
in
mov
lahf
mov
xchg
dec
dec
and
mov
outsl
jns
sarl
ret
sub
out
in
loope
aad
enter
mov
adc
cmc
pop
or
or
jl
xor
imul
fcom
adc
mov
cmpsb
pop
push
sub
xchg
xchg
je
mull
popf
mov
lret
dec
ljmp
sbb
sar
prefetch
jl
sub
add
loope
xlat
cmpsb
cli
ret
push
les
dec
sahf
xchg
cmp
add
sbb
subl
push
imul
and
and
mov
mov
pop
push
inc
lret
push
mov
jns
sub
popa
mov
xchg
gs
adc
hlt
inc
mov
inc
or
adc
mov
xchg
pop
jecxz
or
mov
cwtl
mov
cmp
inc
imul
les
jg
add
lds
sub
or
jle
loopne
cmpl
cmp
jmp
inc
ljmp
pop
cmc
fnstcw
xchg
insl
ss
cmp
andl
in
loopne
inc
ljmp
add
test
add
jns
sbb
int3
cmp
jb
inc
sbb
rorb
daa
hlt
enter
dec
xchg
xchg
push
inc
cltd
jle
mov
inc
ds
mov
push
xor
jl
or
out
pop
dec
dec
stos
insl
loope
out
xor
les
icebp
push
pop
adc
xchg
insl
jecxz
dec
ds
in
pop
xor
or
lahf
mov
ljmp
lret
cmp
loop
out
rorl
in
pop
ljmp
rorl
inc
push
jg
repz
or
adc
lods
scas
fstpl
iret
dec
or
test
mul
hlt
lcall
jmp
adc
repnz
insb
push
xchg
test
pushf
scas
cmp
test
movsl
push
aad
sbb
mov
outsb
inc
mov
js
xorb
call
shrl
push
adc
inc
test
or
bound
lret
negb
adc
in
xchg
aam
xor
inc
jno
and
adc
xor
mov
stos
or
xchg
mov
adc
push
jge
ret
add
pop
inc
cmpsb
mov
sub
out
xchg
pop
and
inc
into
xor
xchg
sub
test
sbbl
loop
lcall
fdivr
jl
icebp
jge
lods
inc
out
mov
ljmp
leave
and
shll
xchg
mov
fists
in
lcall
lods
mov
ss
mov
sbb
mov
fstps
cmp
or
sub
push
in
inc
and
xor
mov
pop
adc
mov
jno
outsb
ss
jae
cli
pop
gs
pop
das
lods
inc
xor
enter
sti
jo
pop
sahf
cli
cmp
push
repnz
aad
or
aad
aas
enter
jnp
cs
mov
jmp
mov
inc
adc
movl
int3
cmp
test
test
test
stos
and
mov
jno
mov
pop
aaa
in
mov
frstor
addr16
dec
fwait
xchg
or
sub
jae
das
repnz
lds
or
imul
icebp
repz
mov
push
lcall
lods
pop
out
movsb
out
mov
xor
loope
sub
lock
xchg
push
or
add
sub
and
aaa
jne
mov
mov
mov
out
clc
sbb
xor
jns
or
decl
orl
xchg
xchg
dec
in
fsubrs
stos
jne
rorb
jle
adc
dec
mov
loope
test
ficomps
sub
or
jne
jo
pop
icebp
subb
push
push
jo
in
mov
sub
push
xor
mov
repz
fistl
aas
and
out
adc
subb
dec
sbb
bound
pusha
std
mov
jecxz
insb
mov
fwait
lahf
pop
jae
test
mov
or
inc
mov
or
sbb
fidivrs
pop
lcall
add
incb
dec
cltd
cmp
mov
dec
pop
inc
ret
movsb
push
and
xchg
mov
repz
xchg
sub
push
mov
in
daa
or
push
or
or
pop
sub
jmp
mov
mov
mov
push
inc
imulb
scas
mov
mull
cmp
cmp
cmpsl
or
out
iret
rclb
jbe
movsl
stos
sub
inc
push
push
cmpsl
pop
mov
test
push
or
sub
pop
lret
divl
ret
stos
rcl
and
fmuls
aaa
jle
rcll
mov
mov
mov
ljmp
test
inc
scas
lahf
lahf
out
outsl
xchg
shll
add
pop
scas
push
push
xorb
push
ret
cmp
and
fcmovne
stc
mov
into
pop
sti
out
cwtl
sbb
jmp
add
aaa
xchg
outsb
pop
sbb
fbstp
out
dec
and
push
mov
jecxz
jne
jno
movsbl
fs
call
scas
or
das
enter
neg
xor
jbe
pop
and
cwtl
fadd
mov
pop
aas
inc
inc
ja
add
and
loop
mov
subl
outsb
mov
testb
pop
int
lea
pop
jle
sub
outsl
rolb
paddusb
or
cmpsb
fs
xchg
sub
in
mov
mov
repnz
movsb
push
clc
cwtl
dec
cltd
repnz
push
push
mov
test
jns
xchg
adc
fcomp
cltd
xchg
mov
lods
popl
pop
mov
pop
mov
mov
inc
addr16
adc
jp
inc
inc
lea
hlt
push
insl
cmp
ret
rcll
mov
mov
rcrl
hlt
cwtl
es
shrl
pop
pusha
fisttpl
inc
rolb
add
pop
repz
cmp
mov
push
aam
push
push
out
imul
in
lret
loopne
test
in
mov
jns
or
mov
stos
mov
scas
and
mov
daa
aas
repnz
cs
jae
daa
fcmovnu
add
add
cmp
and
mov
test
mov
out
cmp
sqrtps
xchg
aad
add
mov
icebp
push
inc
dec
lcall
adc
test
push
outsl
mov
cmp
push
ja
cltd
sbb
sbb
rorl
gs
ljmp
push
push
int
inc
repz
jb
jae
mov
rorb
or
insl
rorl
jp
test
sbb
lahf
pop
outsb
jmp
test
pop
ja,pn
cmp
jmp
sub
jb
or
push
je
add
shll
test
dec
xchg
cmp
adc
dec
xor
push
mov
xor
sub
or
pushf
mov
repz
xchg
or
add
pop
enter
ss
les
push
shlb
cmp
jbe
outsb
lods
movsb
subw
pop
sub
sbb
mov
mov
aad
decl
fwait
push
dec
mov
xor
aaa
push
pop
je
push
cld
mov
fadds
movsl
ljmp
xorb
iret
or
icebp
inc
xchg
or
outsb
sbb
sub
scas
stos
push
mov
lods
sbb
add
xchg
into
xor
inc
test
lahf
es
cmp
sub
push
jle
mov
sbb
add
into
xor
lds
rorb
insb
out
pop
xchg
mov
push
out
loop
xor
lods
jecxz
cmpsb
pop
xchg
sbb
jno
adc
scas
or
out
jb
movsl
cmp
add
jnp
std
add
movsl
jae
pop
cmpsb
pop
repz
pcmpeqw
fucomi
or
cmc
and
mov
jnp
lahf
pop
xor
pop
loope
ja
xchg
inc
adc
call
push
int3
clc
mov
in
xchg
aam
test
lretw
xor
btr
jo
and
mov
xchg
push
mov
int3
add
mov
fs
lcall
shr
xchg
nop
and
fdivrl
jnp
in
sub
push
test
xlat
mov
cld
lcall
test
xchg
mov
mov
hlt
cmp
xor
xor
lcall
mov
mov
dec
jo
popf
into
jl
ljmp
test
dec
stos
inc
movsl
push
add
dec
jl
inc
or
and
shll
push
clc
ja
inc
imulb
mov
lds
adc
push
pop
jl
sti
fs
int
js
test
inc
data16
or
sbb
or
push
mov
xchg
inc
test
push
outsl
dec
push
dec
xor
cli
iret
jecxz
push
jg
pop
jg
jp
pop
lahf
jne
cmpsb
movsl
into
sbb
dec
ja
lds
stos
add
jnp
leave
int3
stc
inc
xchg
xchg
call
out
mov
jmp
insb
push
pusha
out
fwait
add
mov
sbb
test
jg
clc
cltd
adc
movsl
pop
in
sti
inc
cmp
outsb
cld
mov
jnp
sbb
mov
in
jno
nop
jg
sbb
test
jg
pop
adc
xchg
adc
dec
and
push
lahf
lds
into
loopne
push
adc
movsl
dec
cltd
icebp
pop
pop
imul
mov
inc
pusha
cli
imul
out
xorb
ror
mov
pop
xor
in
xor
stc
and
psubusw
movsl
popa
in
and
inc
popa
push
shrb
pop
lret
push
test
push
out
mov
mov
aam
xlat
out
imul
jmp
test
add
mov
mov
adc
jne
mov
roll
nop
pop
jbe
lcall
into
icebp
out
pop
pop
in
mov
xchg
xchg
ljmp
fldz
pop
test
adc
jno
ja
cli
clc
inc
adc
and
sub
sti
cwtl
cmpsl
push
das
mov
sahf
cmp
and
and
orl
cmp
dec
jle
fldt
sub
mov
jbe
imul
jp
cmp
sub
mov
aas
fsubrl
xor
pop
popa
popf
jmp
mov
lods
mov
xchg
in
mov
std
pop
cmp
cld
add
jnp
mov
sti
jae
and
inc
in
mov
into
jmp
push
dec
add
mov
arpl
ds
fdivp
lahf
ljmp
ret
pop
loope
dec
adc
popf
subb
or
stos
pop
nop
lea
push
adcl
idivl
and
xchg
adc
insb
cmp
add
ja
sub
fwait
mov
inc
or
inc
and
je
subb
test
les
les
int3
ret
lock
dec
inc
cld
pop
andb
inc
jp
add
mov
fidivrs
fnstenv
sbb
adc
pop
int
popf
hlt
add
imul
je
aas
js
xchg
mov
sub
sbb
inc
sub
lcall
pop
cltd
mov
push
push
push
roll
rcrb
js
aad
pop
mov
dec
cmc
xchg
pusha
into
xchg
jl
jo
rolb
jle
cmp
inc
outsb
mov
pop
add
out
push
sbb
push
xor
mov
sbbl
dec
insl
and
popl
sub
jmp
cmc
addr16
mulb
fs
pop
sub
xor
cmpsb
fisubrs
outsl
adc
adc
scas
inc
outsb
aas
push
popf
in
mov
fmuls
and
in
add
loop
gs
mov
nop
pop
decb
adc
pushf
hlt
nop
clc
jl
repz
ror
dec
pushf
std
cld
sahf
inc
movsb
test
imul
add
jae
shlb
sub
mov
insl
es
or
testb
mov
adc
jae
popf
push
cmpsb
in
xor
rol
fistpl
inc
mov
cwtl
pop
mov
push
mov
ret
mov
xchg
stos
push
lret
sti
cli
xchg
or
enter
aas
stos
andb
lahf
dec
movsb
push
xchg
push
push
inc
mov
dec
xchg
std
aaa
ficomps
ret
ds
in
pop
push
mov
sbb
inc
cmp
mov
rorb
test
xchg
or
out
pop
add
gs
out
mov
ss
repz
lods
push
daa
bound
pop
outsl
mov
cs
pop
sub
cmpsb
xchg
cmpsb
push
dec
xor
stc
and
pop
mov
int3
lds
inc
push
repnz
xor
rorl
add
outsb
icebp
aaa
pop
jo
and
sub
sti
cmp
cmpsb
cld
sahf
rorb
mov
addr16
fcomps
adc
fcompl
or
and
imul
dec
aad
xor
adc
xchg
adc
and
mov
movb
dec
notl
mov
inc
mov
mov
mov
cs
jl
dec
cmpsb
movsb
mov
adc
jle
mov
jne
dec
std
mov
into
sbb
iret
aam
iret
daa
in
iret
ret
je
mov
lret
lcall
in
mov
dec
push
cmp
scas
daa
mov
jp
lret
sbb
lods
sbb
mov
into
inc
and
cs
dec
fsubs
cwtl
push
inc
cmp
inc
arpl
cs
nop
or
int3
inc
or
push
stos
pushf
mov
or
add
fldt
mov
outsb
imull
xchg
je
je
flds
mov
adc
mov
inc
das
fistpll
imul
je
les
pusha
sub
sbbl
pop
push
stos
xchg
movsb
mov
and
inc
inc
and
sub
inc
clc
iret
cmp
add
cmp
repz
push
mov
das
in
lcall
push
js
enter
in
pop
xor
subb
outsl
sbb
inc
pop
daa
sarl
sbb
addr16
mov
cmpsb
ss
xor
sub
lds
inc
mov
or
sar
jnp
xor
push
mov
dec
xchg
shl
insl
cmp
inc
leave
ss
idivb
in
jle
aad
inc
fwait
mov
jb
jae
mov
mov
je
ljmp
xor
jnp
xchg
add
nop
or
dec
sti
inc
stc
mov
rorb
test
jecxz
jnp
and
cld
sahf
pop
insb
repz
xor
mov
stos
jno
jnp
lahf
imul
fcmove
cmp
popa
in
or
push
sub
aad
out
stc
outsl
call
call
sub
pushf
outsl
mov
lds
pushl
xlat
jbe
test
pop
push
xchg
dec
mov
xchg
loopne
push
mov
mov
or
pop
ficoml
inc
clc
vmovlpd
mov
cwtl
mov
fcoml
les
call
adc
pextrw
xor
cmpsl
mov
cwtl
test
adc
aam
scas
imul
loopne
not
fisubs
data16
jl
cmp
xchg
out
jecxz
xor
xchg
pop
call
add
pop
imul
xor
jmp
pop
mov
rcrw
lods
out
pushf
and
sbb
xlat
out
push
add
mov
iret
imul
lds
cs
lods
jne
lret
pop
ret
mov
sbb
push
repz
and
and
jg
lret
dec
push
test
push
push
or
fimull
inc
test
aaa
pop
pusha
pop
adc
in
outsb
push
pusha
aas
mov
push
mov
dec
mov
xor
mov
jp
in
shr
gs
lea
sbb
mov
pop
mov
xor
cli
xchg
dec
jno
pop
dec
cmp
arpl
ljmp
mov
push
cmp
push
incl
xor
sub
repnz
dec
fwait
pop
and
in
xchg
push
aam
lea
loopne
jmp
ljmp
jmp
sub
aas
push
dec
mov
std
xor
es
inc
pop
sbb
filds
mov
push
mov
paddusb
push
jo
cld
je
in
mov
mov
outsl
aad
mov
repz
push
pusha
xor
jno
ret
lea
lahf
and
faddl
pop
in
jno
es
add
mov
aaa
rcrb
scas
mov
rcl
loop
xor
fisubl
mov
in
cmp
push
lret
out
and
and
lds
adc
inc
test
sarl
enter
sub
int3
push
pop
jl
sbb
gs
dec
shrl
xchg
loop
aam
ja
or
in
out
cwtl
mov
nop
popa
test
jl
sub
push
inc
icebp
insb
push
xchg
xchg
int3
add
scas
xchg
push
inc
daa
mov
sub
jbe
orl
sbb
std
xlat
mov
int
lret
xor
cmp
ds
adc
dec
out
and
movsb
xor
adc
inc
cmp
idivb
in
jae
roll
and
jne
mov
cmp
mov
sbb
dec
push
stos
sbb
or
lods
popf
mov
dec
push
ret
adc
inc
test
popa
pop
fisubl
mov
jg
cmp
pop
adc
nop
aaa
lret
inc
cmp
fstl
dec
jnp
inc
cli
les
sbb
pop
add
pop
cmp
ret
jge
je
push
xor
ss
out
or
out
push
inc
inc
mov
and
outsl
mov
adc
nop
xchg
dec
and
or
adc
insb
xor
imul
jo
fstps
lods
jbe
rcl
flds
ljmp
push
sub
and
add
sub
shll
add
fisubs
pop
or
xor
iret
call
popa
mov
mov
xor
ja
stos
mov
fmulp
xchg
jle
repnz
nop
push
adc
jg
mov
or
testl
or
scas
cmp
aam
ds
std
out
add
xchg
push
loop
push
ds
sahf
loopne
dec
clc
xchg
pop
add
push
pop
sbb
insl
das
jb
sbb
and
mov
test
dec
into
xor
in
inc
and
test
add
sub
fsubr
test
sahf
scas
loopne
scas
mov
sub
scas
faddl
pusha
arpl
jbe
jmp
inc
mov
xor
aas
mov
push
xor
sub
outsl
xor
popf
jnp
mov
mov
sbb
adc
cltd
fnstenv
dec
sbb
mov
mov
dec
sbb
sti
and
call
cmc
or
push
test
nop
mov
cmc
push
aam
adc
dec
shr
push
outsb
shll
or
lods
stos
adc
lock
lds
xchg
repz
xchg
inc
clc
or
jae
shl
fwait
add
cltd
adc
add
jno
jb
mov
loopne
ret
sbb
xchg
pop
add
imul
xor
dec
insl
inc
pop
and
popf
addr16
dec
ficoms
dec
cmp
mov
lahf
mov
mov
fldcw
loope
decl
rcr
insb
fstpt
incb
ficomps
fstl
movsl
popa
mov
ficomps
xchg
push
data16
add
and
adc
mov
sbb
dec
scas
push
xchg
rcrl
mov
jne
fsub
f2xm1
and
into
cmpsb
inc
sbb
insb
or
repnz
int
test
dec
fisubrs
into
rcr
cmp
mov
pop
xor
inc
mov
imul
xor
push
int3
lea
nop
or
out
xor
das
add
das
push
mov
pop
popf
test
dec
pop
lea
test
rclb
addr16
lods
in
jp
imul
lcall
mov
xchg
inc
add
lods
out
xor
pop
push
or
cmp
fucomip
adc
inc
mov
pop
adc
fwait
mov
into
outsl
cs
mov
cmp
pop
ds
mov
jg
out
sbb
jecxz
jl
mov
insl
fwait
sti
sbb
int
daa
scas
enter
cmp
jge
orb
das
cmc
rorb
data16
jno
adc
into
pop
mov
fcmovbe
cs
push
movsl
stos
dec
jns
sub
fcoms
sub
fisttpll
and
sbb
pop
add
into
jne
ja
sbbl
jmpw
pop
push
lods
sbb
int
shll
mov
mov
mov
pop
and
push
and
or
shlb
femms
cmpsb
mov
pop
ret
loopne
and
xchg
nop
jg
pop
gs
mov
lret
pushf
cmp
push
mov
adc
adc
sbb
cmp
lea
cwtl
lahf
int
xchg
ds
inc
xchg
mov
pusha
xorb
add
inc
out
dec
mov
test
fbstp
sbb
mov
adc
js
jg
in
rcrb
les
test
cmpsl
jae
jns
xor
jae
iret
stc
popl
sbb
fldenv
or
fwait
insb
or
mov
inc
or
sti
mov
inc
fwait
xchg
sbb
stc
cli
adc
js
dec
std
faddp
push
push
mov
push
push
popf
dec
aaa
test
sbb
packuswb
js
lods
jnp
les
push
cmpsl
test
mov
dec
and
lods
adc
lock
inc
jno
mov
fcom
fsubrs
and
inc
xorb
cmpb
roll
insb
pop
mov
push
ret
cmpsb
cmp
sub
outsb
jge
out
push
adc
subl
jb
lret
cmp
dec
cmp
jl
pushl
add
fidivrs
push
icebp
mov
jnp
arpl
insl
fdivrp
rcll
adc
mov
xchg
mov
clc
pop
mov
xor
mov
mov
fdivrs
and
ds
mov
dec
test
dec
cmp
add
scas
mov
cmp
pop
or
pop
mov
ljmp
mov
add
es
clc
pop
xlat
lcall
push
cs
aam
push
pop
sub
sub
repz
pushf
mov
add
push
add
vmread
rol
out
dec
adc
adc
in
xlat
inc
sbb
imul
lods
mov
daa
or
movsl
fldenv
inc
loopne
adc
stos
and
jl
xchg
cmp
push
clc
mov
push
sbb
out
std
mov
call
jno
cmpl
adc
dec
mov
pop
adc
or
mov
ss
cltd
js
inc
mov
and
inc
repz
and
pushf
cltd
fucom
mov
lea
cmp
pushf
andb
mov
int3
mov
loopne
xor
mov
stos
inc
nop
into
mov
xchg
push
push
aam
addr16
addr16
fnstenv
xor
mov
lds
pop
xor
loope
ja
mov
in
sbb
add
sti
push
sti
cwtl
cli
mov
and
inc
xchg
xchg
mov
mov
outsb
or
mov
lret
inc
sbb
fstps
pushf
add
mov
fadd
test
adc
rcrl
mov
inc
mov
fs
sbb
xchg
pushf
cmc
inc
push
imul
je
inc
aaa
enter
repz
out
jb
mov
fsts
cli
sbb
push
in
pushf
jo
lds
aad
jmp
add
add
jnp
stc
mov
std
and
loope
xchg
test
ror
ds
and
mov
pop
stos
sbb
mov
pop
aam
adc
xchg
int3
xchg
les
test
sbb
xchg
push
scas
push
mov
and
outsl
movsb
aaa
mov
mov
stos
sbb
lea
in
add
pusha
mov
jge
and
pop
pop
cli
lds
data16
add
pop
data16
loope
push
daa
lret
jmp
out
stos
cmp
imul
loopne
xor
test
sbb
out
subb
mov
js
cmp
mov
dec
push
push
insl
insl
pop
cmc
pop
testl
sbb
adc
leave
iret
nop
push
decl
or
jnp
jae
push
cmp
mov
sub
cmc
mov
addr16
sbb
jns
sub
mov
dec
ja
xor
mov
lods
repz
ret
call
lea
push
hlt
out
and
aad
add
fisttps
cmpl
das
inc
push
lret
imul
bound
addb
xor
pop
int3
inc
inc
clc
test
adc
or
test
xchg
and
xlat
dec
aam
or
add
sbb
jge
mov
enter
add
lret
outsl
and
pop
dec
loope
add
cmp
xor
xor
xchg
sub
mov
addr16
push
stos
add
cmpsb
xchg
lret
nop
push
sti
mov
push
testl
es
imul
jp
ret
jb
mov
stos
scas
xlat
ret
test
nop
sub
xchg
sahf
mov
cli
xchg
movsl
add
adc
or
test
mov
mov
sarl
and
jns
in
jl
pushf
cs
mov
inc
pop
pop
sub
push
pop
mov
push
shll
ja
in
sarl
dec
pop
dec
subb
lock
jge
ret
mov
mov
aam
jns
inc
xlat
mov
push
sbb
push
xor
iret
movsb
cmp
mov
clc
clc
outsl
fsts
and
and
inc
mov
popf
jo
rcrb
xchg
sub
and
jno
outsb
mov
or
adc
mov
sbb
scas
repz
mov
mov
dec
outsb
loope
lods
xchg
pop
or
dec
in
dec
pop
lcall
popf
lods
stos
clc
mov
fucom
mov
cld
jg
xchg
dec
pop
adc
and
dec
dec
lods
lahf
sbb
sahf
sbb
inc
and
xchg
bnd
push
pusha
in
lret
fsubp
adc
dec
lcall
out
loope
call
mov
pop
dec
xchg
xor
movsl
mull
pop
outsl
or
xor
out
lock
sbb
inc
jg
mov
loopne
addr16
push
mov
mov
insb
dec
push
icebp
inc
add
subb
pop
inc
jo
mov
jns
lods
mov
inc
mov
ret
jp
enter
adc
pop
orl
fisttps
sbb
scas
aam
incb
mov
mov
movsl
sbb
or
fs
in
or
imul
scas
mov
subb
push
stc
cmpsl
pop
cmpsb
and
stos
je
or
push
or
cmp
call
push
or
mov
js
lods
popfw
mov
je
adc
jg
fcompl
stos
mov
call
pop
repnz
ret
push
mov
or
xchg
pop
loop
cmp
mov
pop
or
mov
mov
es
and
adc
repnz
adc
test
test
adc
push
lcall
ja
lea
sbb
xor
xorl
mov
out
outsl
dec
cld
scas
push
jmp
cmp
dec
mov
add
repnz
fucom
pop
les
jne
pop
sbb
pushf
xor
jmp
subb
mov
dec
push
cmp
imul
dec
call
xchg
outsb
out
out
cld
jo
cmpsb
loop
stos
push
cmpsb
sub
mov
lods
scas
pop
dec
push
stos
push
cmpsb
mov
pop
aad
cmp
xor
pop
adc
and
icebp
jmp
les
mov
jne
and
fs
mov
adc
cmc
out
jo
add
fstpt
or
lods
push
mov
pop
pushf
xor
mov
mov
pushf
sub
cli
add
lcall
subl
test
dec
mov
std
ljmp
nop
pop
or
enter
xchg
jae
cmp
jge
andb
mov
lea
dec
xchg
les
inc
fstps
call
dec
pop
lahf
pusha
push
add
mov
lret
mov
aam
cwtl
repnz
cld
add
pop
xchg
in
pop
fadds
jo
cmp
sbb
and
and
fs
adc
push
and
xor
and
popf
mov
cmpsl
shl
stc
les
lahf
cmp
mov
add
mov
mov
adc
aam
in
stos
cmp
cmp
sahf
int
in
lock
faddl
shl
jp
arpl
inc
es
movsb
adc
pop
adc
movsb
jb
and
and
mov
dec
cmp
lock
adc
cwtl
mov
dec
add
inc
cmpsl
in
jle
stos
push
mov
das
imul
nop
push
adc
cmpsl
xor
iret
or
mov
mov
cld
mov
cli
add
scas
cmp
lret
lcall
jo
je
cmpsl
loop
aaa
repz
push
movsl
insb
or
cmp
aad
push
jge
repnz
je
add
cmpsb
stos
mov
or
inc
or
cmp
out
push
incb
lock
add
iret
xchg
sub
adc
mov
test
aam
push
insb
mov
sbb
lds
pop
pop
lahf
push
jnp
pop
out
test
cld
mov
fcmovnb
outsb
lods
loopne
mov
lea
sub
idivb
push
outsl
out
mov
jnp
push
adc
and
adc
jecxz
sbb
out
sub
cmp
xlat
cmp
loopne
dec
insb
jmp
loope
lods
jecxz
mov
push
lods
or
addr16
cmpb
pop
sahf
scas
in
xchg
int
notl
leave
mov
mov
cmpsl
daa
vmread
aam
xor
pop
out
outsl
cmp
mov
push
arpl
push
loopne
mulb
adc
and
and
icebp
call
mov
imul
ret
xchg
jo
aam
adc
mov
test
pop
pop
mov
cmp
lods
sub
imul
inc
popa
push
push
sub
jg
das
rcrl
test
xchg
or
mov
pop
sbb
enter
jo
xchg
ficomps
arpl
outsl
mov
pop
arpl
pop
inc
sbb
das
repnz
nop
pusha
xchg
das
lahf
mov
jg
repnz
jle
fcoml
pop
push
xchg
xchg
je
sub
lods
cli
jae
or
inc
mov
ja
leave
negb
dec
pop
insb
dec
xor
stos
and
push
test
jg
outsl
bound
pop
jl
push
mov
mov
fsubr
loop
inc
fdivs
fwait
mov
mov
leave
fcomi
mov
sti
mov
outsl
lea
push
ja
mov
add
mov
pop
xchg
pop
addl
mov
inc
roll
in
pop
xor
and
js
popa
nop
push
out
ja
sti
mov
fwait
lock
and
ret
cmp
cmp
aaa
int3
cltd
sbb
adc
or
add
adc
jp
repnz
mov
mov
jmp
lret
sarb
adc
dec
push
addl
xchg
inc
push
pop
jl
cmp
sahf
out
sub
and
jbe
cmp
es
lcall
dec
add
js
xor
jecxz
hlt
push
dec
mov
sub
or
inc
outsb
cwtl
mov
sahf
pop
xchg
mov
rcll
add
arpl
insb
or
das
in
pop
fstl
test
adc
dec
and
idiv
hlt
adc
lds
outsl
je
mov
xchg
xchg
push
xchg
repz
outsl
pop
call
and
into
jne
cmp
add
ds
cmp
xchg
push
hlt
movsl
into
sub
ret
std
cmpsl
mov
dec
int
push
sbb
fsubp
mov
add
insb
jbe
decl
clc
lea
mov
das
rcrl
jo
mov
arpl
mov
jns
sub
outsl
lahf
subl
fidivs
lds
mov
andb
out
sub
lds
loopne
aad
dec
faddl
icebp
in
push
dec
out
xchg
cmc
test
push
mov
and
outsb
mov
ljmp
pop
add
ja
push
pushf
sub
insl
pop
inc
mov
icebp
and
xor
nop
lret
push
nop
jnp
xchg
out
int
mov
xchg
sti
inc
je
pop
stc
pop
enter
jecxz
dec
popa
xchg
cs
cmp
xor
stc
jns
add
mulb
pop
fldt
cmp
cmp
ret
sub
aam
add
and
add
jecxz
xor
sbb
outsb
cld
jno
stc
xor
ficoms
inc
pop
add
and
lcall
bound
mov
xor
orb
testl
lock
push
sbb
jno
sub
jo
pop
inc
pop
out
cmpsl
and
js
adc
aad
gs
mov
mov
xor
mov
or
pusha
or
sahf
mov
jge
jle
addr16
test
mov
adc
or
aas
sbb
add
stc
clc
repz
cmp
jle
pop
pop
sti
lea
repz
dec
jo
cmpsw
sub
repnz
mov
aas
sarb
mov
and
sbb
mov
dec
shll
jnp
jns
xor
cltd
nop
xchg
js
push
stos
inc
inc
aad
gs
shrl
les
stos
pop
fldenv
and
add
hlt
sub
dec
sub
imul
stc
movsl
sbb
out
xor
movsl
imul
and
jne
pop
std
in
outsb
jns
xor
adc
xlat
fcmove
es
imul
pop
test
mov
test
jg
das
rolb
mov
in
scas
scas
jae
lock
idivb
into
je
aaa
push
xchg
mov
xchg
cwtl
out
cli
and
addr16
pop
inc
outsb
pop
jp
not
mov
pop
shll
jne
pop
or
sub
add
dec
push
pop
push
out
mov
push
sub
pushf
push
push
mov
inc
stos
sarb
mov
lock
addl
aad
leave
mov
mov
pushf
xor
adc
cmp
push
scas
ret
cmc
mov
push
pop
push
sbb
inc
pop
incb
daa
cmp
dec
dec
imul
and
push
jo
mov
xor
sub
cld
pop
mul
mov
pop
aam
shrl
pop
adc
inc
cmpsl
push
inc
cld
outsb
or
mov
sub
jp
in
pushf
mov
sbb
pop
sub
loopne
or
xchg
mov
out
dec
sbb
psrad
movsb
push
mov
jno
mov
test
sahf
outsb
fldenv
sbb
jo
jle
sbb
sub
fidivl
cmpsl
inc
out
pop
stos
nop
nop
add
sbb
push
jl
pop
sbb
xor
shll
jp
or
fsub
or
mov
cmp
insl
mov
rorb
sub
mov
or
mov
fs
bound
adc
test
orl
test
mov
lds
daa
or
mov
movsb
insl
sub
cmp
cmp
scas
pop
push
test
mov
daa
pop
gs
push
cmp
shl
mov
cld
inc
dec
mov
cmp
loopne
add
push
cmpsb
imul
dec
mov
ljmp
mull
dec
rcll
insl
out
xchg
inc
and
ljmp
ret
pusha
xor
adc
xor
sbb
xor
mov
cwtl
push
dec
pushfw
pushaw
xchg
pop
outsl
mov
jno
es
xchg
out
pop
mov
or
lods
mov
mov
or
inc
sub
not
sbb
mov
out
dec
insb
in
push
mov
lcall
lahf
aam
pop
cmp
les
ja
mov
jb
pusha
adcl
shlb
cwtl
xor
fwait
les
dec
outsb
cmc
das
cmp
lods
dec
or
sbb
mov
pushf
aad
ja
adc
mulb
dec
rclb
loope
mov
fisubs
jmp
adc
out
fildl
mov
push
fsub
or
jb
and
xor
dec
jge
repnz
mov
out
loopnew
jmp
and
arpl
ret
mov
iret
pop
xor
lcall
addr16
and
xchg
pop
cltd
xchg
pop
cmp
mov
sub
imul
insb
jnp
popf
fisubl
outsb
jecxz
jg
cmp
rcll
push
add
mov
adc
mov
test
xchg
mov
lds
mov
jp
test
inc
in
push
ds
push
rcrb
pop
jo
add
or
out
xchg
insl
cld
in
dec
repnz
notb
fidivl
std
lods
test
xchg
jg
popa
sbb
pop
inc
jg
and
fwait
lret
xor
arpl
call
testl
bound
pop
fildl
push
jno
in
sub
adc
xor
dec
inc
lods
inc
pop
inc
fimull
notb
push
fidivrs
lds
or
pop
addb
jp
lret
lret
or
dec
adc
loope
mov
fcoml
adc
ficoml
lahf
add
push
xor
test
add
sub
jg
push
sbb
dec
inc
mov
loop
add
lcall
inc
and
adc
xchg
pop
aaa
mov
dec
hlt
add
mov
cwtl
aad
adc
jmp
cld
out
xchg
loop
call
dec
fwait
cmp
sub
js
mov
inc
add
adc
sub
sbb
dec
mov
jmp
sub
jbe
es
lahf
xchg
test
push
std
je
ret
or
roll
lods
xor
inc
or
sbb
idiv
push
sahf
pop
lret
pop
mov
shll
mov
jnp
es
xchg
and
cld
jnp
js
cmpsl
mov
sub
mov
hlt
jb
in
inc
call
add
push
inc
sbb
orl
sub
push
stos
pop
in
fistpl
fmuls
mov
fcmovu
pushf
cmp
jnp
add
fildl
in
repz
jl
ljmp
add
cmpsb
pop
test
cmp
bound
xor
mov
fisubs
mov
loop
subb
in
orl
sbb
fiaddl
pusha
jl
xor
mov
push
mov
les
insb
mov
js
daa
mov
inc
mov
test
shrl
cmp
loope
pop
out
sahf
outsb
iret
rorb
sbb
pop
adc
push
adc
push
in
rcl
jp
xchg
pop
loopne
enter
adc
push
je
xchg
ds
imulb
popf
ljmp
and
repnz
lea
clc
je
aad
sbbb
fdivrs
js
jg
mov
push
fdivr
les
fsubrl
jb
push
pushf
sarl
addr16
jg
add
jmp
clc
or
not
rcrl
mov
fwait
subl
jnp
loope
and
sub
sarl
adc
ljmp
xor
jle
and
int3
in
arpl
jb
outsl
test
addr16
cmp
pop
sahf
jmp
jno
xlat
push
loopne
lcall
xor
sbb
jl
hlt
adcb
cltd
xchg
inc
ja
repz
pushf
addl
fstl
rcl
mov
mov
call
jmpw
cmc
into
lret
adc
lea
push
lock
fsubl
jp
aam
or
mov
out
add
dec
xor
mov
aam
jg
scas
push
clc
pop
pop
out
in
dec
in
dec
repnz
in
xor
xchg
loopne
loopne
pusha
loope
sarb
jns
push
les
inc
nop
cmpsl
js
pop
mov
xchg
xchg
jbe
mov
loope
in
shlb
xor
dec
mov
pop
repnz
call
out
dec
jno
sub
dec
std
sbb
fld
dec
inc
mov
shll
ja
and
mov
add
inc
shl
leave
xor
lods
mov
imull
stc
pop
and
xchg
push
sahf
mov
jns
in
insb
popa
divl
jp
xchg
pop
insl
sbb
sahf
xchg
or
popa
mov
aaa
imul
notl
adc
dec
cwtl
das
pop
sub
or
out
jge
addr16
inc
mov
loop
sbb
in
pop
cli
ret
jmp
and
leave
dec
or
repz
or
loop
and
or
nop
and
inc
mov
sbb
lods
lock
adc
stos
call
cmp
fs
sbb
fldenv
cmp
pop
in
jno
test
lods
push
scas
data16
fisubrs
cli
jecxz
out
insl
ja
cmp
outsb
pop
or
popf
fidivl
loop
jo
pop
push
and
pop
cmp
fs
dec
pop
pop
sti
sbb
fstl
in
mov
dec
pop
sbb
loop
xchg
or
xchg
dec
scas
jnp
jl
inc
adc
fisubl
data16
and
cwtl
push
mov
aas
xor
int3
lahf
dec
loopne
jbe
or
loop
push
shrl
dec
push
shl
jge
aas
ja
rol
dec
jae
xchg
mov
xlat
popa
mov
add
xchg
jmp
mov
ds
jns
out
inc
mov
popa
ja
lea
xchg
cwtl
mov
lcall
or
adc
dec
sbb
imul
sahf
dec
enter
fidivrs
in
push
xor
popa
gs
mov
fcomps
cmc
leave
cmp
fs
sub
xchg
popa
xchg
decl
movsb
xchg
and
mov
mov
insb
loopne
sbbl
sarb
dec
loope
inc
push
sbb
inc
mov
xchg
jecxz
push
mov
mov
test
scas
cmp
fs
xchg
lcall
pop
add
ficoms
leavew
sbb
sub
or
sahf
fimull
rcrl
mov
xchg
mov
push
hlt
loop
test
adc
inc
add
xor
mov
testb
mov
dec
jg
jne
adc
int3
dec
popa
and
cltd
mov
fdivr
jmp
dec
stos
inc
fs
inc
xorl
rcl
pop
outsb
sub
xor
xchg
lock
ret
xor
rcl
scas
fstl
xchg
push
mov
nop
fstl
cmp
adc
adc
dec
loopne
pop
rolb
bound
mov
mov
in
and
jb
andl
movsl
xor
bound
movsb
call
rorl
jb,pn
sbb
jnp
pop
into
imul
lahf
int3
add
std
dec
js
dec
ljmp
pop
cld
pop
inc
sub
gs
test
add
add
into
push
cmp
inc
xchg
insl
std
push
sarl
and
dec
and
insl
pop
inc
out
hlt
stos
sbb
inc
iret
push
adc
ficomps
mov
push
bnd
rclb
mov
xor
mov
ja
int
hlt
xchg
mov
sbb
aad
jns
sub
outsl
pop
repz
int3
or
jne
icebp
mov
push
jns
cld
adc
adc
ja
repz
out
lcall
popa
mov
lahf
sbb
jnp
lds
dec
cmp
cli
push
int3
push
das
cmc
cmp
push
mov
push
loope
pop
pop
mov
aas
cmpsl
sbb
sbb
mov
pop
aad
mov
ja
ret
test
movl
sarb
cmp
mov
mov
adc
mov
inc
dec
mov
das
sbb
push
pop
mov
and
inc
jp
add
cmp
addr16
cmp
xchg
and
xchg
adc
pop
cmp
jno
mov
push
xchg
xchg
orb
lea
enter
andb
sahf
jle
mov
jl
insb
clc
cld
dec
xchg
mov
xor
pop
mov
mov
mov
sbb
ror
cs
inc
dec
xchg
cwtl
push
arpl
outsl
lahf
jb
inc
xor
rclb
sub
sbb
jae
mov
cmc
negl
inc
xchg
cmp
arpl
in
pop
lock
imul
clc
mov
add
rolb
dec
mov
xchg
fmul
push
adc
mov
sub
sbb
xchg
jbe
push
hlt
adc
popa
lahf
xor
loopne
dec
mov
sub
test
adc
insb
pop
lds
cmp
add
inc
mov
inc
stc
shll
enter
push
aad
clc
dec
xor
popf
adc
movb
cmp
mov
adcl
jns
mov
dec
in
lret
and
stos
jno
dec
lahf
xor
fiadds
shrb
ds
xchg
fldt
sub
outsb
aas
cmp
xor
in
pop
xor
ja
cmc
jge
std
lret
sub
lods
cmp
xchg
adc
int
pop
mov
icebp
xor
sahf
imul
ss
lcall
call
jae
insb
cwtl
xor
dec
aaa
cli
lds
or
stos
cwtl
shrb
jbe
cmp
lods
stos
inc
loope
sub
repnz
pop
scas
aaa
fcompl
lods
xchg
sbb
add
loope
das
es
je
mov
je
pop
cmp
fbld
cmp
sarl
jecxz
mov
test
insb
clc
push
inc
mov
or
cmp
ret
out
sub
pop
and
bound
inc
test
xchg
les
ret
fisubrl
dec
mov
aas
cs
scas
add
mov
fcmove
add
out
xor
xchg
mov
js
push
mov
mov
ss
sbb
sub
push
cmpsb
pop
fnstenv
dec
rcll
stos
into
xchg
mov
mov
sub
fnstenv
scas
jmp
xor
cmpsl
cmpsl
and
xor
inc
jmp
incl
inc
test
jno
cli
clc
push
or
dec
icebp
push
dec
pop
lods
ljmp
int
inc
jbe
and
outsl
dec
mov
push
xorb
subl
sti
push
push
mov
push
fsubrs
xchg
fcomip
push
aad
in
rcrl
outsb
and
into
ja
movsb
and
mov
dec
loope
popf
iret
adc
inc
push
fimuls
or
add
shll
or
jle
inc
dec
adcl
cmpsl
jb
and
xchg
popf
pop
lods
outsl
inc
sbb
jns
sti
lahf
mov
inc
fisttps
inc
push
mull
inc
nop
xchg
mov
rcrb
scas
pop
xchg
sti
in
into
add
push
adc
push
pop
rcl
push
and
adc
addr16
pop
inc
lock
or
lods
fadd
or
jmp
addr16
add
test
fildll
aad
cmp
mov
aaa
push
mov
not
fcmovne
xchg
je
or
xchg
inc
dec
repz
out
lret
push
xor
fcomi
cltd
shlb
push
or
add
or
inc
test
add
popa
lock
xchg
movsl
in
jbe
loop
sub
or
cmp
out
push
pop
fwait
testb
xchg
fidivl
fstp
cmp
or
xchg
inc
pop
xlat
shl
jo
das
cmpsl
cmpps
sbb
fldl
lods
lods
outsb
vorpd
leave
cwtl
jae
into
bound
dec
and
test
cmp
dec
jbe
mov
imul
mov
mov
mov
xchg
push
outsl
dec
cli
cmp
mov
insb
das
lea
xchg
out
mov
xchg
mov
cmpl
test
pop
pushf
jmp
lods
xchg
outsl
lods
add
inc
push
push
out
mov
inc
adcb
push
sub
push
xor
xor
jp
xchg
mull
mov
cmp
mov
es
shll
fistpl
or
jns
xorl
fmuls
lds
xchg
out
shrb
stc
addr16
repz
incl
daa
inc
test
movsb
inc
and
test
mov
test
push
imul
sub
jb
mov
mov
pop
push
add
sub
out
mov
pop
adc
cmc
pop
rorb
sub
push
aas
cld
clc
sbb
iret
xchg
and
scas
es
pop
pop
fstps
or
incb
sub
jns
leave
xchg
inc
jge
inc
ja
lret
ret
fs
adc
ret
cmp
cmp
loop
loopne
mov
pusha
mov
iret
inc
out
sub
dec
lcall
push
outsl
mov
mov
icebp
shl
iret
mov
arpl
sbb
pop
ficoml
cmpsb
push
aas
inc
mov
dec
std
ret
xchg
mov
push
and
mov
xchg
sub
mov
cltd
dec
shll
leave
mov
push
outsb
xchg
mov
dec
std
cmp
fidivrs
xadd
sbb
insl
pop
adc
lds
stos
or
xor
mov
ret
bound
jge
or
imul
and
repz
add
pop
dec
shl
and
leave
sub
cmpsb
mov
xor
hlt
or
addr16
and
cwtl
divl
iret
inc
in
jl
and
aaa
and
lcall
xor
data16
mov
xchg
into
and
jge
addr16
jno
or
jecxz
adc
out
cmpl
pop
xchg
and
outsb
cltd
jp
xor
call
cmpsl
vpermpd
fsubr
rcll
loopne
aad
sub
sub
pop
mov
aaa
mov
cmp
dec
jp
repnz
cwtl
pop
fisubl
pop
imul
adc
sub
scas
movsl
in
pop
sbb
and
pop
lret
ss
cs
dec
adcl
jns
xor
cmp
xchg
test
fiadds
pop
test
cmp
out
jne
repz
pop
pop
mov
flds
and
mov
and
jg
cmp
movsb
push
loopne
cmp
pop
mov
or
jnp
mov
push
stc
mov
and
push
dec
lods
aas
jbe
repz
rcll
adc
push
jnp
repnz
mov
fcmove
mov
into
rcl
sbb
das
divb
inc
push
ret
pop
hlt
or
and
sbb
or
cltd
je
mov
xor
jecxz
cld
das
pop
xor
sub
xchg
sbb
jo
ret
jbe
jns
das
inc
ljmp
fwait
ss
popa
loope
inc
sbbl
loope
pop
inc
sahf
add
fsubl
xchg
adc
mov
ljmp
inc
ljmp
aas
in
or
dec
fdivrs
loope
shll
je
mov
jmp
loop
cmp
out
and
xlat
insb
leave
and
mov
or
mov
mov
jp
sti
mov
add
mov
das
jae
fnstsw
test
mov
shrb
mov
cmp
lret
mov
hlt
out
movsb
data16
dec
or
cmpsb
add
hlt
jo
adc
cmp
adc
xchg
inc
das
iret
inc
outsb
xor
dec
add
js
shll
out
add
scas
push
push
scas
ss
xor
mov
dec
dec
addr16
enter
cmpsb
dec
or
ret
aam
cli
fdivs
in
lahf
cmp
and
adc
jecxz
mov
inc
hlt
xchg
imul
jg
add
cmp
mov
mov
cmp
pusha
fst
pop
clc
mov
cmpl
push
and
rolb
push
mov
fistpll
dec
lcall
fwait
movsb
cmp
pop
or
pop
in
inc
mov
lsl
imul
xor
push
ja
or
clc
cs
jnp
je
data16
add
sub
mov
pop
cmpl
dec
movsb
pop
in
mov
in
push
popf
mov
aam
addr16
mov
mov
sahf
lds
xor
ss
ror
xchg
cltd
push
lock
pop
je
dec
dec
lret
fdivrp
push
je
js
shlb
mov
mov
jae
pop
or
mov
xsaveopt
sub
push
sbb
iret
popa
push
repnz
test
or
int3
push
in
icebp
test
lods
sbb
or
ret
movsb
jno
cli
pop
loop
repz
mulb
popf
out
pop
testl
inc
jmp
pop
or
lods
push
call
xchg
out
sahf
rorb
inc
into
xchg
pop
sub
xchg
in
inc
int3
and
jp
call
aad
lods
cmp
and
jb
imul
cmp
jbe
stos
sub
or
sub
gs
repnz
xchg
inc
xchg
call
out
push
lcall
push
in
cmpsl
sbb
pop
stc
mov
jne
ret
inc
push
dec
lret
sbb
mov
xchg
pop
pusha
xchg
test
xchg
pop
and
and
mov
add
push
and
add
loope
pop
sub
sbb
lret
call
sub
push
pop
xchg
out
aaa
out
shll
test
scas
lret
sub
loopne
lret
xlat
nop
sub
fwait
rcl
test
sub
fidivs
ja
sahf
mov
adc
sbb
push
rcrb
and
push
pop
lcall
stc
adc
das
push
xchg
test
pop
cmp
jae
aam
popa
push
adc
push
mov
xchg
out
sub
mov
nop
outsb
mov
ret
mov
insb
lea
bound
outsb
adc
mov
xchg
add
push
cmp
mov
dec
adc
adc
inc
sbb
icebp
lods
jge
dec
pushf
sarb
sub
inc
in
negl
or
in
cmpsb
nop
sub
mov
out
rolb
in
push
mov
loope
cmp
aam
cwtl
xor
cmp
jbe
sub
jg
mov
cmp
xor
decl
aam
or
sbb
push
xchg
push
aaa
loopne
out
mov
rcrb
hlt
neg
dec
or
push
rcr
xchg
add
int
inc
and
movsb
inc
cs
jbe
jp
jle
inc
mov
inc
or
sub
aaa
and
push
sbb
cmp
in
push
rcrl
dec
dec
mov
pop
jnp
xor
movsl
cltd
push
jns
lea
imul
jb
and
stos
jb
push
adc
test
push
jg
pop
loopne
and
aam
xchg
jmp
inc
std
xchg
loopne
fcmove
jp
and
test
pushf
call
pop
call
insb
lret
ret
xor
mov
lret
ret
jp
fldcw
nop
push
and
rcll
je
test
jp
add
orl
addr16
cmp
insb
test
fldcw
ja
mov
or
cmp
out
inc
mov
pop
or
xchg
mov
test
sbb
mov
pop
inc
mov
in
addr16
cmp
sbb
sbb
jo
pop
jne
cmpsb
cmp
test
mov
xchg
mov
lods
mov
cmpsl
pushf
sbb
xor
mov
lods
test
push
cltd
inc
sub
outsl
decl
pop
loop
stc
in
rcl
mov
xchg
in
fidivl
dec
outsl
sbb
xlat
lods
outsb
xor
mov
enter
outsb
and
adc
aas
icebp
movsb
cmp
fisubrs
loope
aas
dec
dec
xor
ret
ljmp
aas
pop
inc
push
mov
insb
push
add
push
leave
dec
adc
aaa
bound
dec
mov
xor
xor
pop
adc
add
adcb
xor
pop
push
and
bt
mov
xor
push
test
sahf
cmc
fdivrl
out
imul
and
pop
dec
jle
pop
push
sub
xor
hlt
xchg
loop
add
lock
fwait
xor
pop
or
subb
xor
mov
add
aam
pop
mov
arpl
aas
mov
push
xor
out
andb
adc
cwtl
icebp
lods
loop
test
cltd
out
xor
jl
and
xlat
les
jnp
mov
clc
insb
adc
in
jnp
mov
and
xchg
cmovg
aam
dec
push
and
mov
test
lods
push
nop
jbe
mov
daa
xor
xchg
or
cmp
pop
mov
idivb
cmc
sarb
jnp
cmp
enter
sbb
sbb
pop
sub
mov
cmpsb
or
mov
lcall
sub
pop
sbb
mov
sbb
cmp
sarl
aam
or
inc
xchg
dec
aas
daa
fninit
mov
mov
jbe
sbb
dec
sub
and
push
mov
cld
pop
dec
sarb
pop
stc
insl
iret
imul
add
aaa
aam
ss
jg
cltd
outsl
xor
inc
cli
loope
jo
jecxz
lret
push
cmp
mov
outsb
pop
lcall
or
outsl
test
push
mov
cld
jne
cmpsl
fidivrs
clc
cs
sbb
mov
dec
jle
outsb
ret
lea
inc
mov
test
sbb
jg
imul
cmp
and
sub
pop
aas
and
and
test
jnp
adc
fists
jbe
or
hlt
stos
test
iret
movsl
cmp
stos
out
mov
adc
ja
mov
cs
ds
or
ljmp
mov
ficomps
sbb
mov
mov
rorb
mov
je
add
sti
adc
xor
loope
cmp
xor
imul
cmp
dec
mov
lahf
mov
xchg
test
mov
mov
in
jge
stc
push
lock
cmp
mov
adc
pop
jnp
xor
into
mulb
cmpsb
or
mov
adc
pop
push
aaa
push
loope
mov
mov
aam
add
cli
scas
lahf
repnz
stos
mov
sahf
fisubl
xchg
insl
or
push
adc
and
out
mov
push
add
adc
mov
out
push
mov
jp
bound
jmp
add
jnp
push
or
icebp
stos
stc
lds
cmp
mov
daa
cwtl
add
dec
int3
insl
les
push
or
dec
mov
sbb
adc
xchg
fadds
loope
outsb
mov
cltd
jae
push
stos
cli
test
es
stc
adc
jge
or
pop
push
push
xchg
or
call
dec
in
icebp
sub
and
xchg
and
imul
fldcw
jge
push
inc
call
and
sahf
test
scas
push
test
jmp
fwait
sahf
push
pop
xor
sahf
out
xchg
or
pop
mov
aaa
loope
mov
inc
loopne
push
inc
ficoms
push
cwtl
enter
movsb
repnz
xchg
dec
ja
icebp
arpl
subb
aad
shl
mov
leave
mov
push
jp
xor
cmc
pop
gs
pushl
cmp
adc
icebp
stos
movsb
mov
fcoms
out
pop
sbb
lock
push
jbe
and
movsl
xor
sbb
cmp
cmpsl
cmp
cmpb
or
out
jecxz
mov
aaa
pop
mov
push
pop
enter
insb
arpl
jo
jne
daa
or
sbb
mov
aas
nop
mov
lret
add
mov
jge
outsl
ljmp
pusha
dec
jne
mov
out
and
lods
xchg
push
jle
jne
mov
push
inc
adcb
into
jns
imul
insb
cs
adc
dec
mov
insl
and
loope
and
lret
push
mov
and
lcall
repnz
js
and
jge
inc
adc
popf
daa
repnz
fistl
fiaddl
sbb
jge
or
pop
stos
push
lods
ljmp
mov
pop
xor
out
push
fwait
test
clc
in
sbb
sub
loopne
jecxz
ret
ftst
js
jo
out
aam
sahf
sub
adc
add
sbb
fisttps
or
add
add
jnp
cmp
pushaw
sbb
popa
insb
repz
lret
test
imul
xor
ss
iret
cmp
pushf
adc
jl
adc
outsl
sbb
adc
cmp
ljmp
adc
add
cmp
and
and
mov
inc
stos
jle
out
pop
mov
mov
cmp
aaa
cmp
pop
imul
sbb
out
out
ds
fistl
adc
pushf
loop
shrb
cli
lret
adc
pop
mov
xchg
mov
and
ror
loopne
ret
mov
jmp
inc
pop
lea
push
sbb
jmp
dec
pop
mov
fcoms
lea
hlt
mov
insl
jp
push
mov
mov
lret
loop
mov
and
mov
hlt
ja
pop
stos
and
add
into
dec
ret
iret
and
fldcw
ret
jecxz
and
into
in
jb
push
add
dec
outsl
pop
push
test
lods
and
mov
xchg
lcall
mov
subl
adc
xchg
push
mov
adc
mov
mov
xor
sbb
jnp
xchg
cmp
adc
enter
sub
or
xchg
jle
roll
xor
pop
mov
add
sub
ss
repnz
adc
movsb
mov
mov
xchg
out
pop
xchg
jb
jbe
test
xlat
mov
insl
and
xchg
cli
and
push
popf
mov
sahf
lods
inc
jo
out
xchg
pusha
and
cmp
out
cmpsl
loopne
jg
lahf
xchg
push
pop
dec
jo
cmp
decb
mov
push
pop
add
jae
ret
pop
lret
ret
mov
cs
inc
push
sub
test
sub
sub
sub
bound
int3
sub
stos
cmp
cmp
test
xor
es
lahf
or
add
xor
jne
insb
pop
sub
insl
mov
mov
sahf
sub
das
jle
dec
aad
mov
sbb
cmp
pmuludq
push
bswap
mov
sahf
mov
rorb
mov
sbb
repnz
inc
sbb
arpl
jmp
fcos
inc
xorl
mov
stos
mov
ret
dec
adc
cwtl
pop
jmp
loopne
cmp
ja
dec
scas
imul
add
sub
pop
dec
out
dec
xchg
or
jge
loop
stos
add
and
ret
sbb
call
xchg
pushf
shlb
aaa
xchg
jmp
xor
lret
data16
or
push
mov
sahf
int
adc
fsubs
shl
xor
insl
add
or
loop
sub
jg
ret
call
xor
add
or
out
jo
mov
sbb
insl
sub
jbe
pusha
and
xchg
push
ret
aas
or
jb
mov
or
adc
dec
rcr
mov
pop
imul
arpl
iret
mov
lods
dec
ret
jg
xchg
cmp
push
add
fildl
int3
pop
incl
cmp
xchg
mov
nopl
mov
sbb
lods
pop
pop
into
fwait
fs
push
xchg
imul
in
sub
cmpsb
mov
inc
fwait
mov
arpl
out
fldt
pop
add
mov
or
popf
dec
test
lcall
andb
add
xchg
cmc
add
push
test
xor
arpl
push
jmp
into
cld
sub
mov
sbb
clc
mov
mov
xor
repnz
push
ss
les
push
cli
fwait
sbb
or
sub
mov
sbbb
jb
dec
cli
cmp
sbb
testb
cld
in
inc
fdivl
jns
xchg
movsb
shll
sub
and
jnp
lods
mov
cltd
divb
loopne
ficoml
cmp
or
xchg
orl
outsb
add
enter
int
mov
cli
push
jmp
mov
rcl
jbe
dec
fs
and
cld
mov
jnp
jmp
mov
pop
outsl
rcrl
mov
shll
out
mov
mov
xor
xchg
repnz
lret
jmp
xor
call
xor
aad
push
mov
and
std
xchg
fwait
inc
inc
into
sbb
aaa
call
mov
jne
xlat
ljmp
lret
xor
fists
inc
jg
nop
sbb
test
push
dec
inc
je
mov
inc
out
int
xor
loop
add
add
popa
mov
repnz
pop
test
mov
pushf
js
push
sub
cmc
shl
sarb
ret
pop
xchg
xor
push
fwait
aas
call
fs
fwait
scas
movsb
sbb
mov
sub
push
rcrb
xor
push
add
xchg
mov
inc
xor
popf
cld
ja
incl
cmp
int3
push
js
or
mov
das
pushf
popf
mov
call
jno
sbb
fcomp
add
bsf
movsb
push
lods
outsl
addb
ljmp
xor
shl
cltd
int3
jp
inc
test
je
in
mov
test
loope
jp
and
jbe
dec
shlb
std
cmp
mov
sub
nop
adc
jl
loop
rcrb
repz
mov
es
sub
jp
adc
aam
scas
jb
sub
jnp
cltd
and
imul
push
js,pn
dec
jl
sub
push
fs
ja
xchg
inc
jle
cmp
add
es
shll
add
dec
adc
push
outsb
jns
cld
jg
push
nop
adc
dec
inc
out
movsb
fbld
scas
jns
mov
mov
push
adc
mov
inc
and
sti
hlt
inc
inc
mov
out
outsl
lret
mov
push
out
mov
lods
fldcw
insb
xor
pop
repnz
adc
rorl
fmul
jo
pop
out
aam
inc
negl
in
nop
ret
test
xor
and
mov
lds
cmp
cld
rolb
mov
sbbb
xchg
cmpsl
pop
decl
in
cs
loop
cmpsl
dec
mov
and
mov
rcrl
testl
mov
jb
mov
inc
jge
xchg
push
inc
or
push
jl
sbb
mov
jnp
mov
xor
sub
sti
xor
and
dec
mov
int
enter
xchg
inc
xchg
sbb
sbb
mov
xlat
jmp
int
shrb
ljmp
fcmove
ljmp
cmp
lret
mov
rclb
pop
insb
mov
add
call
stos
jb
sti
add
dec
lcall
or
inc
inc
lret
cltd
repnz
add
data16
dec
mov
int3
mov
mov
fadds
add
aaa
addl
cs
out
xor
inc
xchg
dec
cmp
pop
test
hlt
push
ss
lret
xchg
cmp
xchg
push
and
sub
xor
pop
xor
inc
mov
popa
push
push
aad
fucomip
call
insb
xchg
repnz
pusha
or
jmp
sbb
insl
das
mov
pop
sub
dec
or
pushf
call
mov
fstps
add
jge
shrb
popf
cli
das
jp,pn
push
mov
sub
jnp
adc
cmp
das
mov
sub
pushf
mov
jp
jno
cmp
or
ss
insl
je
xchg
andb
xchg
xor
mov
insl
or
push
lret
sti
xchg
xor
pop
push
cmp
jp
fs
iret
push
movsb
sti
stc
mov
mov
cmp
stc
xchg
out
or
mov
fmuls
pop
sbb
into
scas
out
mov
in
mov
outsb
ja
and
xchg
xor
inc
ljmp
sub
fnstsw
jb
jae
int3
jbe
and
add
decb
xchg
mov
gs
xor
push
xor
cmp
gs
subl
xchg
or
xchg
cli
mov
das
test
jmp
insb
pop
xor
and
mov
hlt
cmpsl
sub
and
lock
pop
jns
aas
push
or
mov
stc
dec
aad
fdiv
fsts
sub
cmp
ja
jbe
pushf
pop
sub
mov
push
lret
sbb
lds
imul
mov
ret
iret
in
dec
push
hlt
imul
dec
jns
shr
pushl
bound
xor
in
sti
adc
cmp
push
fisubrs
dec
dec
and
scas
js
cwtl
sbb
push
insl
repz
addl
shll
cmc
sbb
arpl
in
in
xor
ret
or
shl
and
sub
jae
loopne
sub
pop
rcrl
outsl
ja
test
add
jmp
cmp
add
add
xor
mov
out
push
aas
jmp
fwait
stos
sti
cmpsl
push
lret
and
scas
mov
out
xchg
dec
mov
movsb
push
shll
cld
sbb
dec
inc
dec
es
testb
xchg
mov
and
adc
or
ljmp
jmp
adc
xor
cmp
or
jge
insb
loope
xchg
cltd
enter
xor
inc
cmp
imul
pop
movsw
rorl
lds
mov
subl
popa
and
cltd
pusha
push
cmpsl
sbb
xchg
stos
jb
data16
push
mov
fsubrs
cmpsl
arpl
adc
cmp
add
xor
dec
std
xchg
call
pop
sub
jne
cmp
aas
data16
negl
lret
ror
cmpsl
rcl
rorb
xchg
lret
push
adc
cmc
jb
inc
clc
js
test
ljmp
std
jnp
push
insb
inc
mov
mov
and
fidivs
lock
jl
mov
and
pop
out
cmp
data16
outsb
mov
and
dec
sub
insb
sub
sbb
into
adc
orb
cmp
ds
aam
repz
cli
add
xchg
or
sub
enter
xchg
push
repnz
ss
jae
ss
mov
bound
test
dec
loop
or
cmc
enter
scas
or
jl
in
mov
fdivl
pop
adc
xchg
or
mov
pop
aaa
xor
dec
iret
int
pop
repnz
mov
add
add
mov
sbb
or
shlb
mov
jo
movsl
cli
mov
adc
in
adc
jmp
mov
sbb
sbb
push
in
ljmp
sti
and
icebp
xchg
lock
cmc
insb
fcoml
inc
lock
aam
mov
pop
int3
inc
mov
and
xchg
inc
jbe
mov
pop
dec
out
or
out
mov
adc
jne
xlat
push
lcall
inc
lret
or
in
adc
or
sbb
scas
sahf
mov
mov
mov
xchg
mov
pop
test
scas
inc
movsl
or
xchg
addr16
gs
mov
xlat
stos
shll
mov
in
and
adc
mulb
inc
rclb
sahf
imul
mov
iret
cld
ficomps
hlt
dec
out
in
mov
sahf
outsb
aas
push
pop
xorb
xchg
int
sbb
mov
into
pop
cmp
in
repz
stos
scas
or
mov
cmp
push
or
pop
out
mov
test
jae
test
jbe
push
mov
inc
int3
lcall
xchg
inc
jne
cli
mov
je
pop
shl
out
push
outsb
mov
subl
jb
jbe
iret
test
es
stos
dec
int3
stos
jb
xchg
mov
nop
mov
shl
or
sub
arpl
inc
mov
mov
loopne
adc
jbe
ret
test
ret
cmpb
clc
fnstsw
mov
shlb
lahf
aaa
xor
arpl
mov
mov
movsb
bound
sub
mov
cmp
and
hlt
call
push
fldt
mov
lret
in
sbb
lahf
push
pop
cld
pop
rcll
iret
dec
cld
fwait
inc
out
nop
repnz
inc
lea
sahf
jbe
mull
pop
add
insb
rcll
or
xchg
dec
xchg
or
mov
push
and
xchg
mov
sbb
and
mov
bound
mov
mov
je
cs
push
inc
filds
sub
insl
push
rolb
mov
ljmp
stos
lods
repz
xchg
inc
push
lret
popf
mov
and
mov
dec
lahf
mov
add
ljmp
push
jo
leave
and
into
mov
xor
outsl
adc
into
daa
ja
ljmp
mov
push
in
cmp
xor
lods
rorl
and
out
jg
pop
adc
cli
rcl
dec
lods
lock
loope
and
in
xchg
lcall
ret
and
mov
pop
and
xchg
add
jmp
lret
lea
mov
out
mov
cltd
sbb
arpl
push
push
jno
lds
xchg
xor
aaa
push
cmp
adc
xor
cmpsb
add
sub
sbb
mov
out
pop
scas
jp
sbb
inc
std
add
sub
push
addr16
repnz
mov
stos
shll
popf
xchg
fstps
leave
mov
dec
add
outsb
outsl
mov
or
repz
sbb
nop
mov
push
pop
fs
or
dec
dec
je
mov
mov
repnz
pop
pop
mov
xor
jp
sbb
les
adc
sbb
pop
xchg
rolb
push
testl
es
mov
mov
pop
sbb
loop
jae
push
mov
jle
out
je
xor
add
cs
push
mov
bound
mov
jne
cs
data16
mov
xchg
sbb
int
xlat
repnz
jecxz
lcall
mov
rcll
pop
push
loopne
jnp
dec
iret
mov
fistpll
outsl
js
out
lea
pop
icebp
xlat
add
jg
loop
sub
inc
ss
xor
inc
repnz
cmpsl
ficoms
pushf
lds
fidivrs
or
xlat
and
fnstcw
xlat
jno
imul
repnz
jns
call
and
mov
cs
mov
sub
or
and
add
ret
add
push
sub
add
jns
ret
sbb
movsb
fldl
daa
jge
sub
pusha
mov
mov
xor
ja
cs
inc
jl
aaa
sub
insb
outsl
nop
out
and
sbb
dec
jg
cmp
addr16
inc
daa
loope
cmp
adc
dec
loopew
in
lods
inc
jecxz
push
jge
cs
add
imul
cmpsl
fnstenv
push
xchg
dec
mov
ret
add
stos
cmpsb
sbb
xlat
xor
imul
mov
or
xchg
dec
loop
test
inc
les
jb
jge
sbb
aas
dec
dec
outsl
xor
sti
pop
mov
jmp
leave
jp
in
sbb
std
sbb
out
xchg
and
hlt
inc
xor
fnstsw
dec
int
lds
in
cmpsl
mov
pop
pop
repnz
enter
hlt
int
loope
jmp
dec
outsb
nop
mov
lods
std
or
je
test
sbb
mov
jns
inc
inc
in
scas
dec
mov
xlat
ret
jno
mov
add
imul
adc
mov
les
dec
push
mov
jp
out
mov
xchg
stos
add
movsb
idivb
mov
bound
jo
flds
into
std
mov
mov
pmulhw
outsb
aad
cs
xor
das
mov
je
jne
xchg
xchg
in
jmp
lods
dec
sti
pop
cmp
push
dec
mov
adc
inc
add
sti
dec
jp
pop
lds
mov
ljmp
pop
aam
outsl
jne
imul
inc
lret
nop
mov
sti
mov
jno
dec
mov
adc
in
rcrb
push
mov
mov
fnsave
push
or
test
loop
mov
test
lea
jo
pop
xor
imul
cmp
in
push
fcom
cmp
sti
iret
cld
sbb
add
insl
in
pushf
adc
dec
mov
or
arpl
mov
ds
lea
mov
push
jb
mov
out
sbb
int
pop
mov
rcr
pop
stos
inc
out
mov
aas
stos
pop
aam
addr16
insb
arpl
data16
cwtl
pop
daa
lock
inc
aas
mov
js
insl
daa
addl
lret
or
pop
jae,pt
ljmp
dec
outsl
inc
xchg
cwtl
xchg
inc
gs
jge
ds
jl
scas
js
sbb
push
adc
imul
xor
arpl
cmpsl
or
sbb
and
lcall
push
nop
and
dec
inc
pop
xor
sbb
mov
dec
xor
or
and
jg
out
pop
cmp
in
push
cmp
bound
cltd
sbb
xor
cmpsb
out
add
cltd
push
lds
icebp
xor
sbb
movsb
cmc
add
rol
pop
sub
int3
aam
add
push
xchg
daa
sbb
incl
mov
mov
inc
std
je
lds
aad
cmc
mov
add
xchg
mov
pusha
push
or
icebp
inc
dec
cmpsl
mov
or
adc
nop
push
in
stc
or
lret
outsl
sub
lahf
ds
dec
aas
push
ds
push
or
orl
cld
mov
sbb
js
in
addr16
aad
pop
add
jbe
pop
add
cmp
inc
add
pop
and
xchg
mov
repnz
addr16
test
push
dec
clc
xor
outsb
jnp
mov
sbb
push
clc
adc
xlat
inc
and
dec
inc
inc
cld
fimull
int
adc
jnp
add
mov
sbb
fildll
in
ds
inc
fdivrs
dec
xadd
push
int
pop
xchg
fstpt
inc
add
push
sub
pop
adc
ja
dec
rolb
andl
push
in
mov
and
scas
testb
inc
dec
ljmp
enter
or
push
mov
mov
ljmp
cmpl
mov
mov
imul
push
clc
test
lahf
mov
dec
fmuls
cmp
mov
xlat
push
into
mov
pop
lahf
daa
clc
and
xor
xlat
add
ljmp
inc
shrb
xchg
inc
mov
dec
shrl
in
xor
sar
add
call
mov
mov
mov
ss
cmpsl
push
mov
and
clc
in
pop
aad
daa
pop
jns
fstps
stc
dec
fcmovnbe
enter
sub
jl
adc
popa
dec
mov
loop
leave
mov
stos
aam
std
xor
xchg
xchg
aas
fwait
lea
test
scas
and
das
sub
stc
cmpsb
mov
xchg
loopne
daa
repz
jp
cli
dec
ret
cld
out
cli
xor
add
ss
clc
mov
or
pop
sub
mov
icebp
dec
pop
add
pop
and
push
pop
sarl
enter
mov
cmc
daa
mov
mov
mov
mov
jg
movsb
jo
xchg
dec
les
mov
das
or
inc
jno
xchg
jecxz
and
or
or
cmp
mov
fldt
mov
jb
xchg
push
rcll
sub
and
cmp
aaa
lods
pop
syscall
mov
mov
add
sahf
shlb
jb
push
cli
jo
mov
mov
xchg
loope
daa
mov
inc
pop
cmpsl
insb
adc
push
mov
xchg
pop
cmp
dec
ss
and
sub
insl
sbb
arpl
adc
sbb
push
cmp
pop
jno
clc
xchg
shll
dec
jne
xor
dec
loope
mov
push
iret
int
out
ss
adc
adc
push
jecxz
cmpl
add
and
sahf
adcb
add
rcrb
jg
repnz
jecxz
xchg
int
or
mov
sbb
movsl
je
in
sub
mov
mov
jle
dec
call
push
pop
mov
jecxz
mov
sub
or
in
sbb
cmpsb
xor
pop
push
lods
dec
sbb
sbb
pop
ss
jnp
loopne
mov
bsr
dec
add
rclb
idivb
lea
mov
test
popa
ret
adc
or
addb
cmc
lods
mov
jp
aas
push
jle
jmp
repz
jl
xchg
aam
sarb
in
cmc
mov
dec
cmp
faddl
ret
jns
push
pop
jle
div
cmp
rolb
pop
je
int3
clc
jbe
test
int
push
outsl
movsl
das
xchg
push
setns
sub
out
xor
and
xchg
push
push
mov
int3
fldenv
int3
adc
xchg
add
divl
movsb
xlat
lods
xlat
lea
imul
cltd
jno
adc
sti
mov
scas
mov
inc
sti
lcall
xchg
lods
pop
fcomip
enter
push
adc
stc
bound
arpl
jecxz
sbb
inc
clc
aaa
rcrb
sub
dec
or
stos
sbb
punpckldq
fs
mov
out
jne
or
xchg
xor
iret
dec
mov
outsl
stos
and
fnstenv
cs
lret
repnz
cmp
aam
and
test
dec
sbb
adc
fsubp
outsl
add
sbb
les
mov
dec
xor
call
insl
and
icebp
fdivr
dec
mov
cld
dec
fstps
inc
scas
jbe
out
mov
andb
scas
dec
fdivs
sti
nop
arpl
or
pusha
xchg
adc
orb
dec
imul
pop
inc
and
cmp
out
fsubrs
jo
add
push
inc
and
call
mov
mov
inc
outsl
jl
jecxz
test
mov
xor
ret
lock
and
mov
dec
mov
gs
sbb
mov
ljmp
inc
arpl
mov
sti
shll
ljmp
jns
rclb
call
dec
xor
test
adc
jnp
sub
and
out
push
iret
mov
pop
imul
vmovsd
dec
daa
adc
and
aam
movb
data16
sub
popa
popf
pop
clc
pop
lret
test
imul
loopne
sub
inc
push
dec
loopne
xor
or
notb
inc
std
icebp
popf
negl
imul
mov
push
ja
mov
sbb
push
xor
iret
mov
js
xchg
adc
adc
sar
cmpsl
int3
sbb
or
fistl
xlat
xor
sti
push
addr16
inc
scas
sub
cmp
int3
ja
mov
adc
jmp
cmp
leave
cmp
sub
nop
push
or
ret
loope
dec
sbb
jp
xchg
out
ret
mov
adc
stos
and
imul
lds
repnz
rolb
adc
adc
cwtl
mov
cmpsb
repz
xchg
adc
and
sbb
xor
into
mov
ds
add
add
in
sbb
fistl
mov
stos
jg
arpl
popf
pop
or
dec
fbld
popa
aam
aam
or
cmp
pop
pop
pop
sub
pop
xor
gs
into
jmp
fldcw
nop
sub
xor
push
xor
jg
imul
inc
or
mov
adc
sti
mov
stos
pop
out
fiaddl
insb
fnstenv
dec
mov
sbb
sarl
popa
jmp
popa
cli
mov
inc
lret
xor
inc
pop
adc
pusha
cwtl
out
sti
xlat
adc
adc
cmpsl
rclb
and
xchg
les
jl
pop
or
iret
mov
js
leave
xorl
and
scas
and
and
mov
dec
adc
pop
mov
in
dec
data16
push
outsb
movsl
rcrl
cmpsb
adc
enter
aad
lcall
std
mov
or
call
mov
mov
neg
xchg
jg
int3
fwait
jecxz
insb
loopne
xor
daa
sub
repz
das
xchg
pop
int3
sbb
cmp
imul
leave
mov
mov
cwtl
out
repz
inc
loope
icebp
daa
pop
into
mov
int3
add
and
mov
sbb
jg
movsb
mov
sub
mov
aaa
bound
add
push
sbb
mov
cmp
jl
jl
shlb
jp
and
inc
jmp
jb
aas
pmulhw
push
cwtl
sahf
sub
xorb
das
jnp
imul
ss
push
xchg
adc
gs
jns
xchg
dec
inc
inc
leave
fmull
jmp
repnz
and
sbb
sub
inc
call
mov
mov
jl
and
jne
dec
addr16
or
sbb
imul
shrl
push
xchg
enter
lock
mov
xor
std
and
das
mov
jge
sbb
ljmp
andl
cwtl
aad
jg
enter
orb
mov
mov
cmc
call
data16
jne
dec
push
cmp
or
jmp
sbb
jp
add
xorl
or
andb
jbe
or
out
mov
int
pop
or
fadds
cmp
push
sbb
loope
addl
dec
cwtl
mov
add
addr16
addb
out
push
mov
xchg
xor
jae
fbld
repz
scas
icebp
mov
fnstcw
sub
inc
fwait
mov
mov
aam
arpl
imul
dec
pop
jp
jno
sub
add
ss
pushw
mov
jbe
xchg
cli
xorl
hlt
push
js
adc
jle
push
cltd
ljmp
jne
cwtl
movsl
push
adc
stos
and
in
jbe
jecxz
arpl
insb
js
leave
lahf
mov
loop
pop
scas
into
sub
cmp
xchg
rcll
sub
lcall
mov
std
push
inc
pop
vandps
jecxz
addb
add
ss
mov
lods
pop
shl
pop
hlt
lret
bound
pushf
mov
lcall
mov
les
jmp
mov
mov
adc
shll
dec
imul
or
imul
sbb
les
mov
repnz
negl
mov
orl
std
sub
out
dec
orb
addr16
lret
sbb
and
jb
fnsave
mov
enter
ret
xor
jno
outsl
jbe
and
sbb
mov
test
xor
je
jnp
fidivrs
test
fwait
outsb
xchg
sub
pop
xchg
inc
scas
inc
dec
imul
ret
add
inc
push
rorb
jno
cmpsl
dec
mov
icebp
cltd
mov
mov
dec
sub
push
adc
dec
shrb
mov
into
mov
aas
insl
cmpb
push
ja
lea
cmp
aas
test
rclb
cmp
inc
int3
rcr
test
pminsw
pop
cwtl
shrl
inc
or
out
or
aaa
es
push
dec
fistps
jne
loopne
push
or
cmp
cmp
jge
mov
aaa
insl
loopne
popa
outsl
leave
cmp
or
repz
mov
jle
pop
pusha
in
cmp
sub
adc
cmp
jno
cmp
int3
shld
movsl
sbb
fdivrs
ja
cwtl
add
and
add
adc
dec
adcl
cltd
cmp
rclb
xchg
dec
mov
push
call
cmp
insb
or
inc
sbb
imul
pop
ret
imul
push
mov
test
sub
arpl
pop
loop
push
sub
add
lds
jl
mov
cmpb
sbb
ret
adc
xor
cmc
dec
add
pop
fldenv
adc
lret
test
sbb
arpl
cmp
sbb
xchg
and
jne
mov
jmp
push
test
or
xor
int
mov
push
mov
out
add
repnz
leave
and
fistpll
outsl
js
test
mov
mov
xchg
xchg
mov
ljmp
into
push
insl
in
ljmp
xchg
lods
out
adc
bswap
xchg
repz
sub
cmp
mov
test
cmp
and
test
or
mov
dec
test
add
insl
or
mov
test
shrl
mov
jbe
sub
and
xor
in
and
cmp
cs
cli
cltd
jno
sbb
sbb
adc
dec
insb
outsb
mov
push
ja
xlat
and
cld
repnz
and
pop
cmp
stc
or
mov
lods
es
fildl
xchg
xor
out
jns
and
inc
int3
pop
mull
jg
fdivr
lahf
mov
push
jnp
les
xor
addr16
push
lret
pop
and
xlat
ret
aad
ret
aad
mov
pop
into
ret
scas
popf
bound
ss
or
fisttpl
sub
pop
stos
pop
std
std
pop
hlt
xlat
push
aam
and
inc
jbe
aam
mov
fiaddl
sbb
add
xor
enter
clc
sbb
mov
xor
fstl
popf
mov
imul
cmc
xorl
scas
push
inc
jae
inc
cmpsl
test
xor
jg
addr16
pop
jmp
in
fnstenv
xchg
repz
pop
iret
test
push
or
jmp
mov
pushf
movsb
dec
cli
aam
inc
add
sub
mov
scas
nop
test
jl
shlb
std
or
test
scas
movsl
or
adc
in
lods
and
inc
adc
in
sub
cmp
insb
add
fcompl
out
clc
mov
mov
leave
dec
lods
icebp
into
subb
adc
xchg
pop
or
mov
lret
push
add
cs
cmp
mov
add
cmp
loopne
test
int
mov
push
pop
jo
cmc
rclb
sbb
lods
clc
jl
clc
test
adc
stos
in
xor
xchg
inc
mov
out
rcll
mov
cmpsb
xchg
outsl
arpl
shl
inc
call
mov
jbe
pop
pop
cltd
lret
cmp
dec
pop
xchg
adc
aaa
loope
xor
bound
imul
inc
shrl
jne
dec
pop
mov
out
jp
add
shrl
iret
sub
out
lock
icebp
jns
xchg
js
insb
pop
jle
test
xlat
xor
xor
cmp
pop
add
sub
xchg
and
rorl
push
data16
es
and
insb
cltd
int3
arpl
mov
jecxz
cltd
rcr
add
shrb
add
hlt
lcall
xchg
push
add
xor
push
or
and
popf
out
imul
push
jae
sbb
xchg
adc
xlat
add
into
ror
hlt
fbld
mov
jne
pop
pop
ds
xor
cmc
push
add
sub
clc
xchg
adc
push
xchg
adc
lret
lretw
nop
xchg
cmc
fwait
popa
sbb
loopne
cmc
loop
pop
out
lock
in
jmp
or
dec
iret
fstp
sti
hlt
test
mov
shlb
popa
test
inc
call
sbb
out
out
add
xchg
pop
loope
outsl
push
add
shll
jne
pushf
xor
imul
clc
orb
scas
popa
lods
shl
inc
decl
mov
call
adc
push
push
push
mov
rclb
mov
mov
mov
xchg
cmp
out
into
push
mov
inc
inc
push
and
inc
pop
int
jl
imul
push
out
jl
insb
mov
es
or
movsb
nop
sbbb
je
cmp
in
push
mov
xor
je
push
orb
aam
orb
xchg
movl
es
adc
jmp
cld
icebp
cli
shr
mov
mov
fldenv
xor
repnz
xchg
jge
cmp
arpl
subb
cmp
mov
jns
xor
pop
jnp
add
scas
jecxz
adc
cmpsl
mov
push
cmp
sub
sbb
fstp
data16
lock
into
mov
sub
ja
mov
xorl
add
pop
jb
xchg
jb
dec
pop
inc
mov
rorb
push
scas
push
mov
fmull
rcrl
shl
les
rclb
mov
xor
and
cmpsl
cld
scas
repz
xor
xchg
or
lock
in
adc
shlb
stos
xchg
inc
insb
int3
lcall
add
idivb
aas
mov
pop
pop
push
lahf
icebp
stc
jp
inc
sbb
cmpsl
xchg
push
pop
inc
lds
add
idivl
sub
in
fucom
pop
sti
test
xor
pop
jno
inc
stc
jl
pop
mov
sub
adc
dec
in
jp
aaa
mov
jne
js
test
cwtl
leave
or
xor
mov
lret
cmp
mov
stos
add
fstl
dec
fildl
repnz
mov
cmp
sub
in
xchg
cwtl
sbb
daa
data16
or
adc
fsubl
mov
iret
daa
xchg
xorb
mov
jno
and
mov
mov
xchg
nop
jne
mov
clc
in
loopne
repnz
clc
pop
sbb
inc
pop
ja
and
dec
push
pop
pop
adc
adc
push
fwait
stos
sub
outsl
or
pop
mov
dec
push
sub
dec
sub
and
aam
xchg
pop
cli
fnstenv
mov
xchg
sarl
outsb
xor
stc
cwtl
sbb
arpl
mov
fcomps
lods
or
das
out
push
or
or
movsb
jle
rorl
imul
test
push
fildl
adc
insl
push
mov
iret
inc
xchg
inc
mov
fs
sub
sti
jns
adc
decl
xor
mov
sub
lds
push
cmp
or
scas
inc
call
mov
lahf
mov
cli
faddl
notb
pop
mov
test
pusha
cmp
into
sti
cs
mov
mov
pusha
inc
dec
popa
in
push
xchg
in
aaa
inc
rol
test
jmp
sahf
xchg
add
jg
push
test
xor
sbb
out
dec
dec
jno
repz
mov
jae
daa
xor
das
lds
pop
xor
fidivrl
mov
mov
inc
xor
outsb
xchg
ljmp
and
jp
xor
mov
out
push
sbb
inc
dec
or
out
add
rorl
or
jne
in
out
es
push
pop
push
das
scas
bswap
jno
into
scas
fucomip
mov
cmpsb
daa
lods
mov
jl
cmp
xchg
adc
jne
add
mov
sbb
lods
movsl
fists
cmpsb
xlat
xchg
xchg
adc
dec
aaa
add
lods
pop
mov
call
adc
or
push
and
sahf
mov
ds
std
mov
xor
faddp
jle
push
and
mov
bound
lock
mov
lahf
push
jnp
lds
and
xchg
xchg
xor
mov
sub
ja
push
jb
inc
dec
xor
dec
cmpsb
jae
xchg
out
ja
push
imul
mov
mov
jecxz
fistpl
add
mov
lock
jno
inc
sub
imul
shl
push
cmp
mov
outsb
jo
aaa
or
js
xchg
out
sub
xlat
xchg
scas
adc
cmp
xchg
out
cld
cmp
jne
lods
bound
push
cmp
hlt
ljmp
jmp
shl
cmp
fdivs
popa
mov
xchg
dec
xor
mov
mov
xor
mov
fisubs
add
inc
pop
rorb
push
adc
cwtl
mov
in
ja
xchg
mov
fsubrs
sub
pop
jl
mov
std
das
repnz
cmp
lcall
mov
add
sbb
sbb
cli
nop
sti
fwait
adc
add
mov
mov
add
out
push
es
push
mov
xor
cmpsl
mov
xchg
cmp
shl
jbe
and
xchg
scas
mov
pop
jecxz
push
adc
add
call
mov
mov
cmp
inc
outsb
or
test
in
push
aaa
cs
pop
push
mov
lcall
enter
mov
mov
cld
jge
stos
push
hlt
hlt
sti
andb
in
sub
les
push
icebp
mov
inc
push
andb
fwait
lods
mov
push
add
push
pop
sub
sbb
insl
lret
out
or
decb
divb
shlb
mov
cli
add
stos
ret
sti
or
pusha
hlt
cltd
lods
ds
mov
ja
js
lret
adc
out
mull
mov
sbb
inc
xchg
and
imul
push
lds
ljmp
mov
shrb
push
or
or
pop
inc
pop
and
aas
lock
mov
mov
loopne
dec
xorb
fdivl
or
xor
jl
fdivs
jne
into
sar
out
mov
repz
jp
clc
adc
ret
cmp
or
call
das
popf
sbb
add
xchg
cmp
mov
shlb
addr16
ret
outsl
test
jae
es
mov
push
aaa
arpl
ljmp
icebp
push
sub
lods
sub
xor
mov
add
xor
push
pop
sbb
out
inc
lret
add
jle
mov
loop
cli
jg
cmpsl
mov
cmp
xor
sub
ret
es
xorb
xchg
call
mov
js
push
adc
fcmove
push
fsubrp
loop
aad
dec
pop
and
or
xchg
cmp
test
adc
test
or
add
pop
call
leave
and
es
jl
jno
xchg
in
mov
mov
pop
in
lea
fisubrs
xor
mov
xlat
icebp
sub
scas
subb
jp
xchg
movsl
pop
adc
jae
mov
push
mov
jbe
xchg
cltd
jge
lds
mov
add
loope
sbb
cmp
aaa
jl
cld
xchg
pop
cmp
mov
rcll
fbstp
movsl
mov
xchg
xchg
or
frstor
lds
sub
jb
jae
das
add
fisttpl
cmp
flds
jb
and
in
or
lods
mov
xchg
pop
lret
stos
cmp
ja
sbb
xor
cmpsb
mov
mov
push
mov
enter
ficoml
int3
test
addl
xchg
dec
add
mov
mov
cmp
add
push
sbb
dec
popa
mov
imul
sub
jg
into
daa
pop
hlt
jns
dec
mov
cmp
push
insl
shlb
pop
mov
xchg
mov
mov
add
jns
dec
jo
push
in
imul
jecxz
xchg
inc
dec
push
ret
dec
jne
add
rcrb
insl
ret
xchg
and
int
or
pop
dec
pop
push
sbb
and
loopne
push
adc
cvtps2pi
inc
pop
mov
mov
sbb
or
xor
inc
movsb
das
in
gs
sub
cmp
je
repnz
push
or
aaa
xchg
add
pop
adc
or
fadds
out
bound
js
inc
push
or
mov
jl
or
mov
aas
xchg
call
lods
test
jns
pop
pop
shll
mov
outsb
dec
mov
xor
xor
jno
daa
jae
mov
daa
lock
cwtl
movsb
cmp
lahf
out
outsb
inc
movsb
out
test
xor
lret
lock
mov
mov
jmp
mov
ficoms
inc
stos
dec
pop
xchg
mov
inc
xchg
xchg
fcompl
pop
lret
inc
dec
sub
scas
pop
loope
xor
mov
sub
pop
push
iret
push
push
jb
imul
mov
pop
lods
pop
ret
aad
hlt
pop
out
notl
insb
mov
and
hlt
rorl
xchg
xchg
adc
xlat
and
lcall
and
shlb
out
dec
inc
adc
mov
cmp
icebp
movsl
push
sub
andl
mov
es
jmp
sti
popl
jae
sbb
sub
sub
mov
inc
push
insl
rorb
test
cmp
add
push
int3
cli
das
insb
push
mov
imul
mov
movsb
lds
sbb
outsb
sub
ficomps
sbb
mov
sub
enter
push
or
rclb
out
sub
loop
and
and
and
outsb
cli
push
ljmp
imul
or
dec
mov
fcom
nop
xor
jl
cs
xchg
inc
fldcw
in
mov
or
and
scas
sbb
fstps
les
pop
jns
sub
inc
dec
std
loope
or
movsb
sub
lahf
clc
sbb
sub
sub
in
xchg
insb
arpl
ret
aas
pop
pop
mov
popa
lds
popa
inc
and
pop
sbb
and
xorl
data16
in
enter
nop
dec
idivl
inc
in
sbb
fisubrl
test
sbb
ficoms
outsl
insb
inc
fs
shlb
adc
mov
pop
cmpb
scas
ss
js
mov
stc
pop
cmp
xchg
repnz
or
and
loopne
sarl
test
mov
lock
popa
push
sbb
and
out
icebp
and
and
test
pop
and
lretw
or
aas
mov
addl
test
jg
aaa
mov
js
xchg
cmp
mov
sub
push
fistl
sahf
or
jb
sub
or
shrl
lock
add
movsl
loop
mov
mov
jl
fwait
daa
lock
pop
cli
push
jb
fsubp
mov
ljmp
sbb
or
sub
or
bound
push
sub
mov
movsl
adc
js
ret
pop
xchg
clc
imul
aas
push
mov
push
mov
xchg
mov
andb
pusha
mov
in
andl
das
cmpsl
ret
ss
rolb
testl
push
das
ds
mov
xchg
add
cmpsb
movsl
dec
enter
rolb
data16
outsb
je
lret
cli
movsl
int3
mov
subl
fldl
mov
mov
push
push
pushfw
mov
mov
cwtd
repz
das
pop
dec
push
fbld
add
repz
cmp
push
cmpsl
cli
pop
pop
sbb
outsb
sahf
sbb
shlb
call
cld
insl
xchg
inc
movsb
cmp
push
inc
test
gs
fnstcw
int
jge
out
xlat
jb
rol
aaa
sar
jbe
out
fld
iret
push
xchg
sbb
clc
fcoml
mov
bound
rorb
sbbl
jne
jge
xchg
pop
sub
lret
sbb
cmpsl
sub
clc
sbb
out
cmpsl
sbb
pop
jge
ja
mov
and
pop
or
sbb
adc
in
addl
movb
inc
jecxz
xchg
xchg
or
loop
fs
sub
push
es
push
stc
rorl
sbb
pop
vphsubdq
xor
mov
ret
and
inc
sub
in
imul
sub
loop
dec
pop
int3
daa
cmp
cmp
push
jmp
mov
loope
pushf
insl
and
mov
fldl
jg,pt
arpl
scas
daa
pop
push
dec
imulb
sbb
sub
mov
mov
push
ret
in
jle
lock
aaa
jmp
ja
mov
movsl
leave
mov
jo
into
jg
mov
enter
sbb
fcom
jne
dec
sbb
dec
and
nop
push
inc
arpl
jns
jno
inc
xchg
jne
fsubs
stos
pusha
dec
push
jb
mov
stos
stc
shrb
hlt
or
mov
push
or
int
push
xor
cmpsb
dec
cmp
lods
cwtl
mov
fmuls
cmp
je
mov
pop
inc
cli
xor
lods
jbe
cli
lock
mov
mov
mov
or
test
test
cld
mov
mov
clc
push
and
cmpl
cmp
lret
mov
lahf
mov
icebp
xchg
adc
lret
cmpsl
add
mov
outsl
mov
cmpsl
xor
push
cmp
adc
lcall
in
mov
or
out
cmc
das
flds
shrb
sbb
incb
mov
adc
cli
sbb
pop
jp
or
loop
sub
push
pop
jp
aad
shrb
mov
imul
mov
mov
movsl
and
lock
xchg
mov
pop
jmp
pusha
in
inc
pop
and
fwait
in
mov
sbb
repnz
mov
stc
nop
mov
inc
andb
mov
xlat
lret
push
sub
in
and
or
andb
xor
or
mov
push
inc
lods
dec
sahf
push
sub
push
dec
insb
dec
adc
inc
loopne
inc
or
cmp
sbb
push
fldt
sbb
adc
and
call
fcoms
adc
lds
loopne
sti
mov
shrb
in
xchg
dec
push
pop
stos
test
push
mov
rcll
fbstp
jns
jmp
jo
scas
inc
fcompl
aam
repnz
subb
in
out
repnz
mov
mov
add
push
out
adc
fisttps
ja
loope
mov
in
sbb
and
adc
addr16
test
mov
and
lock
push
inc
jb
pop
int
add
xchg
mov
jle
cmp
imul
add
mov
cmp
outsl
shll
push
insl
xchg
push
mov
pop
stc
in
xchg
addr16
inc
mov
push
jl
gs
out
and
clc
addr16
dec
inc
push
cmp
cmp
out
enter
mov
loop
mov
cmp
int
iret
or
outsl
xchg
cmp
cli
fwait
cwtl
adc
or
xlat
mov
lret
mov
leave
push
mov
bound
imul
std
pop
xchg
jbe
rorl
and
dec
inc
shll
add
lret
jmp
aas
idiv
jne
xchg
pushf
pop
addl
rsm
inc
jmp
jp
popl
popa
and
mov
cltd
scas
jmp
inc
shll
inc
push
cmp
or
mov
movsb
cmp
jno
jns
ret
xor
and
arpl
sub
cmp
xor
mov
int3
lds
inc
sbb
xchg
mov
adc
mov
arpl
mov
sbbl
push
mov
mov
ja
xor
dec
enter
sub
jns
pop
mov
lods
push
mov
adc
or
std
pop
fabs
sbb
xor
test
mov
out
dec
cmpsb
shrb
imul
inc
fnstenv
movl
mov
mov
pop
jge
pop
push
push
mov
inc
inc
addr16
and
mov
int
xchg
jb
rorb
js
and
sbb
pop
in
les
icebp
mov
or
ja
sbb
fsubs
loope
inc
xor
pop
out
jne
jmp
pop
cli
mov
push
inc
out
sti
xchg
mov
cli
call
cltd
cs
negb
jo
dec
nop
jae
mov
or
jo
pop
pop
mov
in
cmp
mov
cwtl
push
in
loope
mov
cmpsl
mov
sub
dec
ret
loope
jno
lret
test
out
lahf
cltd
dec
inc
lods
int3
clc
pop
daa
push
in
lahf
cwtl
jp
sbb
pop
fistpll
jle
scas
xchg
out
mov
push
mov
std
in
dec
subl
repnz
push
sbb
cs
mov
fdivrs
add
mov
sbb
pushf
mov
rorb
sbb
xchg
repnz
cmpsl
dec
xchg
mov
imul
and
cltd
fstpl
ja
pop
outsb
jno
ret
or
and
lret
rcll
jg
jbe
fld
aam
pushf
and
jae
jg
pop
sbb
or
and
loope
rcrl
jae
xchg
mov
sub
shrl
sbbb
sahf
leave
add
jp
or
js
sahf
or
in
sbb
hlt
aad
subl
fimuls
push
xchg
test
cmpsb
add
movsl
mov
jno
jg
add
cmpsb
stc
out
cmpsb
pusha
or
mov
mov
mov
in
mov
jbe
xchg
push
xlat
xchg
insb
mov
inc
lret
enter
clc
dec
or
bound
mov
popf
cmc
nop
add
shl
pop
test
jmp
push
sbb
mov
lods
lea
loop
sub
sub
mov
aam
jl
aas
dec
adc
jmp
mov
loopne
icebp
push
cli
fisubrs
out
test
outsb
aam
adc
addl
ficomps
xor
fisttpll
xlat
pop
loope
cmc
mov
xchg
sti
scas
cmp
jecxz
jecxz
das
cld
ror
in
sub
jmp
test
shr
sub
int
sub
mov
lret
dec
inc
mov
or
and
cmpl
ret
ret
mov
mov
test
mov
xchg
xchg
stc
data16
mov
jmp
sub
dec
les
and
mov
lret
pushf
lea
push
mov
daa
push
inc
push
mov
notl
jnp
xor
push
and
fucomp
and
jo
loopne
xchg
xor
jo
nop
pop
call
enter
add
mov
inc
ret
inc
aas
fisubrl
push
add
inc
pop
in
mov
push
addb
mov
fsubrl
mov
jl
fldenv
repnz
icebp
cmpsl
adc
aad
inc
jecxz
and
mov
xchg
shll
adc
mov
lds
out
pop
pop
cmp
or
loop
dec
sbb
imul
pop
out
pop
xlat
cmp
push
gs
les
push
mov
int3
pop
xor
jecxz
ffreep
inc
xor
mov
aad
aaa
or
pop
jbe
pusha
xchg
sub
mov
cmp
or
sbb
xchg
shlb
sbbl
dec
jecxz
outsl
mov
repnz
icebp
int
mov
into
cli
and
cmp
mov
lock
adc
aaa
test
mov
adc
jbe
movsl
icebp
testb
mov
insb
mov
jns
stc
fisttpl
mov
cmp
enter
mov
cli
add
aam
mov
push
vandps
jo
fnstsw
inc
and
push
testb
stos
jl
pop
je
sbb
test
push
jb
sub
lret
pop
insl
add
test
lods
and
mov
and
repnz
add
in
mov
or
mov
xor
add
scas
adc
mov
fs
pusha
lock
loopne
jae
dec
test
xor
imul
fildll
das
cwtl
into
loop
ljmp
aas
mov
push
mov
or
mov
jo
cltd
into
outsb
filds
out
cmp
nop
dec
jmp
pop
int
inc
imul
xchg
je
int3
out
xchg
jle
aad
fldt
mov
push
fwait
loopne
cltd
or
out
pop
bound
loope
adc
shlb
or
ds
cmp
push
cmpsl
mov
in
sbb
inc
adcb
orb
scas
xor
out
jmp
xchg
inc
cmp
jno
movsl
ja
iret
cli
push
cmp
pop
mov
in
jns
or
in
test
rcrl
in
xor
in
in
cmp
jno
test
jp
push
dec
ljmp
imul
cmp
mov
lret
adc
in
pop
jmp
in
xlat
mov
sub
jo
mov
sahf
ret
repnz
popa
push
loope
jnp
jae
pop
jnp
mov
cwtl
push
xlat
cwtl
aaa
mov
movb
add
sub
out
std
repz
add
ss
mov
fisubrl
pop
sbb
add
push
int
inc
cmpsb
xor
ljmp
bound
popf
popf
jns
and
scas
xchg
iret
rorl
sub
sarl
dec
xchg
cmp
jne
sbb
lret
xchg
out
dec
cwtl
xorb
ret
pop
mov
mov
inc
mov
cmc
out
shlb
popa
es
out
ljmp
dec
mov
movsb
sub
push
mov
fisttpll
lods
or
scas
push
or
pop
jecxz
adc
data16
outsb
cli
test
mov
xor
sti
push
loopne
or
push
fadds
cmpl
test
dec
fstpt
test
inc
testb
in
jbe
and
sub
jl
repnz
repz
popa
jecxz
sub
push
and
sub
in
faddl
mov
cld
push
xlat
cmpsl
mov
imul
andb
jo
into
subb
mov
cs
lcall
cmp
pop
mov
mov
mov
sbb
sub
adc
ja
push
aas
insb
std
idivl
movsb
pop
adc
jno
sbb
push
out
pop
adc
inc
jl
aas
test
xchg
lret
dec
movsb
push
jge
enter
lret
mov
jno
xorb
push
mov
mov
jp
mov
movsb
and
fldl
add
bound
and
push
xor
mov
aas
sbb
pop
xchg
inc
int
scas
push
jns
mov
call
sub
jo
cmp
jg
mov
cmp
xor
es
insl
xor
lds
lret
pop
mov
mov
out
cli
lods
cmc
lods
clc
sub
in
xchg
ja
sbb
push
push
pop
test
sub
mov
xchg
xlat
mov
movsl
mov
and
or
pavgb
test
in
filds
loope
mov
xor
sbb
xchg
scas
adc
dec
fstpl
xchg
xchg
pop
dec
out
clc
push
xor
inc
cmpsl
sub
cmp
cli
xor
mov
pop
pop
pop
mov
cmp
push
out
jae
pop
or
adc
shll
mov
inc
lods
sbb
inc
dec
mov
sbb
add
data16
sbb
cmp
add
imul
sub
pop
into
sbb
outsb
xchg
push
nop
dec
cltd
add
jns
add
xor
mov
pusha
xor
clc
cwtl
pop
inc
aam
adc
push
test
fnstenv
in
test
negb
dec
stos
push
lock
out
push
out
ret
inc
sbb
pop
push
popf
add
pop
sti
into
outsb
pop
mov
mov
jmp
mull
call
jb
pop
dec
cmc
mov
mov
or
dec
jge
mov
push
fsubrl
aad
xchg
pop
call
jne
into
mov
sbb
push
dec
xor
cmp
hlt
lcall
ja
pop
pop
int3
jae
push
aad
daa
xchg
fwait
es
push
nop
mov
inc
insb
stos
repz
pop
mov
out
mov
mov
xlat
movsl
loopne
dec
nop
inc
dec
pop
mov
loope
ss
cwtl
les
xchg
sbb
xchg
popf
jne
push
add
pop
add
dec
or
movswl
cmc
imul
push
clts
mov
inc
mov
aas
lea
notb
xchg
in
mov
xor
pop
test
mov
sub
and
mov
xor
enter
pop
adc
test
test
add
movq
fdivrp
sbb
scas
clc
xor
mov
cld
jl
out
fwait
rorl
iret
or
loop
dec
push
cmp
cs
scas
testb
sti
hlt
outsb
hlt
cmpsl
test
mov
push
inc
dec
dec
sbb
fiadds
pop
test
add
add
in
test
xchg
gs
clc
in
pop
fcmovnb
in
pop
pop
fidivs
cmpsl
lock
sbb
jl
sbb
push
ucomiss
sub
addb
inc
push
mov
movsb
inc
xchg
or
push
out
pop
movsl
dec
cmp
sbb
stos
cmp
inc
xchg
outsb
iret
sti
add
out
and
push
test
lods
popf
dec
xor
mov
xor
xchg
push
push
negl
in
xor
fisttpl
cmp
jecxz
mov
sub
jecxz
pushf
cmp
into
mov
popf
adc
mov
cmpsl
mov
add
das
ss
mov
iret
out
in
fsubl
inc
pop
or
sub
pop
pop
test
lret
loop
or
je
adc
in
das
out
fucom
cwtl
sahf
lea
mov
jb
imul
rcrl
sbb
xor
push
sub
jnp
push
shl
bound
pop
jmp
dec
out
aaa
pop
cmpsl
orb
xlat
mov
lcall
iret
mov
aad
int
fisttpll
rolb
sub
and
test
fisttpll
out
pop
sub
jbe
stos
or
mov
mov
shrb
push
jge
push
mov
sbbb
ja
push
lds
cmpsb
mov
les
sub
fstl
cmc
jp
pop
adc
and
mov
fmuls
jmp
out
subb
mov
mov
jecxz
or
stc
lret
imul
sbb
or
pop
nop
sbb
imul
ret
jmp
xchg
mov
rcll
aam
mov
add
or
xor
xorl
in
cmp
jns
jecxz
cmp
sub
div
into
stos
xchg
shrl
daa
imul
ja
frstor
cs
add
cmpsl
pushf
add
pop
inc
test
xchg
daa
fists
inc
in
add
jbe
fcmovnb
imul
sahf
repnz
sbb
lock
sbb
sbb
mov
aas
fistpl
sub
cmp
fucomp
faddl
in
cmpsl
cmp
fidivs
pop
mov
cli
pop
sbb
cmp
xor
adc
push
pop
lcall
dec
rcl
jb
mov
inc
sub
fnstenv
jecxz
mov
out
ret
adc
test
shll
stc
push
mov
add
sbb
js
mov
cmp
jnp
test
bound
jno
mov
jbe
inc
mov
add
mov
jge
mov
push
mov
insb
cmp
xchg
cmp
inc
push
jmp
fcomps
xor
das
push
repz
dec
xchg
popf
mul
mov
scas
cmpb
call
into
subl
pop
test
cmpsl
jnp
les
jg
test
ss
movsb
add
mov
sbb
push
ljmp
scas
dec
and
cmpsb
mov
pop
fs
pop
xchg
sub
mov
mov
aam
xor
push
orl
push
lret
or
xchg
leave
cmp
lods
inc
scas
lret
in
movsl
inc
loope
mov
test
shrl
mov
sub
je
icebp
stc
lea
add
fcomp
push
fldcw
jo
cli
enter
add
jmp
adc
in
xchg
cmpsl
test
or
or
in
call
xlat
ret
mov
cmpsl
ffreep
mov
insl
les
sub
lea
xlat
adc
push
jmp
lea
mov
mov
push
xlat
ja
mov
ror
sbb
mov
or
mov
xor
dec
xchg
and
sub
dec
sub
fistpl
xchg
outsb
inc
out
cmp
cwtl
sahf
neg
mov
push
push
inc
icebp
loope
mov
mov
and
dec
fiadds
insl
stos
mov
cwtl
lock
cmp
mov
mov
cmpsl
dec
sbb
out
dec
repnz
out
leave
std
mov
xchg
in
popf
cvtdq2ps
test
dec
push
fdivl
mov
cmp
mov
inc
and
jl
sbb
into
les
mov
push
push
inc
out
movsb
inc
jmp
jl
rcr
xchg
xchg
les
xchg
lcall
outsb
gs
pop
or
pop
into
mov
pop
add
or
dec
dec
fwait
lea
js
jae
jb
jno
in
inc
ror
addr16
test
imul
outsb
shlb
pop
pop
les
xor
addb
mov
push
mov
xor
out
js
scas
lea
inc
jle
loope
jmp
xchg
sub
jle
pop
inc
sti
mov
sub
xchg
adc
jl
sub
mov
int
jmp
xor
lret
pop
and
scas
daa
aam
mov
lock
movsb
pop
inc
adc
inc
or
loopne
das
hlt
imul
bound
loop
xor
inc
popa
daa
scas
mov
std
inc
adc
movsb
or
inc
mov
push
xchg
push
sub
sub
aad
lcall
loope
push
cmp
mov
or
jb
out
dec
cmp
js
cmpsl
pop
jno
mov
cmp
je
add
decb
dec
mulb
cwtl
fs
out
insb
dec
sub
dec
pop
cmpsb
mov
push
cmc
add
xchg
mov
ja
cmc
mov
cmp
pusha
pop
pop
mov
andb
push
xchg
inc
in
cmpb
ds
pop
xchg
cmpsb
xlat
in
xchg
xchg
loope
je
fadd
push
jne
mov
clc
inc
or
test
pushf
xchg
dec
imul
mov
mov
mov
jnp
xchg
mov
and
data16
xchg
addr16
loop
nop
cmpsl
xchg
xchg
out
jge
mov
in
xlat
push
push
xchg
fdivrs
lahf
xor
jbe
sbb
orb
mov
add
cmpsl
mov
int
cld
les
or
cmp
sbb
nop
in
sub
mov
in
out
enter
fcoms
repnz
push
bound
push
nop
popf
cmp
mov
popa
push
or
rcl
test
jecxz
mov
xchg
fsubrl
cmpsb
outsb
pop
mov
pop
dec
psubq
out
mov
mov
cli
in
ret
testb
out
add
mov
add
cmpl
pop
fs
and
sbb
ss
adc
ljmp
mov
mov
mov
and
dec
popf
xor
lods
cltd
jg
push
mov
decb
adc
pop
hlt
inc
scas
aas
movsb
iret
xchg
sub
pop
insl
push
fcmovnb
int
jno
das
out
sahf
add
lret
ret
xchg
or
arpl
imul
add
mov
sub
or
pop
mov
pushf
jns
lahf
mov
mov
movsl
aam
movsl
loopne
push
rcll
mov
cmp
push
jno
adc
popf
sub
shlb
pop
pop
dec
sarb
xchg
add
mov
jg
jp
add
mov
fsub
mov
fcmove
xchg
je
pop
ljmp
push
ret
repnz
hlt
mov
shl
aaa
mov
shr
outsl
pop
repnz
cmpsb
cmp
daa
fcoml
fstp
pusha
pop
push
mov
arpl
xchg
rcll
daa
push
push
stc
inc
jmp
shll
mov
cld
cmp
add
inc
addr16
imulb
lods
xchg
push
xor
lret
pop
mov
jns
push
push
jnp
jbe
stos
gs
cmp
push
jecxz
cmpsl
or
xchg
arpl
xchg
pop
inc
add
mov
gs
cmc
jecxz
and
inc
fwait
or
int
xor
ret
into
mov
cmp
dec
cmp
popf
sbb
aad
push
mov
addr16
adc
or
hlt
lret
add
mov
pop
testl
xchg
mov
leave
movsl
xor
rorb
pushf
stc
mov
test
pop
mov
jnp
dec
mov
in
loopne
mov
inc
shlb
cmp
mov
shll
pushf
cmp
gs
adc
outsb
ljmp
sahf
sbb
lcall
js
repnz
out
sub
cli
and
daa
or
vpsubb
and
ret
fdiv
bound
jg
popa
out
or
les
cmp
fdiv
push
leave
mov
mov
enter
icebp
mov
mov
inc
fwait
sbb
jmp
shll
pusha
jno
mov
daa
shl
xchg
les
pop
hlt
idiv
addr16
mov
mov
add
test
data16
cmpsl
jle
jo
in
push
dec
out
push
lock
les
mov
lods
or
lea
mov
lcall
stos
mov
pop
xor
push
jge
daa
sarl
push
into
sub
and
jo
mov
sub
push
mov
add
lea
pop
push
daa
push
adc
cmpsl
inc
dec
mov
outsl
xor
out
cmp
or
pop
les
inc
mov
sbb
stc
ret
mov
adc
mov
sub
insb
decb
repz
orl
sbb
arpl
in
loopne
pop
pop
cmc
sub
add
insb
mov
scas
inc
dec
sub
dec
mov
pop
inc
or
or
iret
jp
hlt
inc
push
rcll
popa
jg
mov
jne
mov
xchg
fcomi
add
test
sbb
sarl
fstp
xchg
sub
pop
adc
add
adc
and
xor
or
scas
data16
and
js
and
jg
sbb
sub
loope
adc
fdecstp
je
xchg
mov
jecxz
addr16
jge
icebp
cmp
ret
mov
lret
in
int
pop
cmp
je
vmwrite
test
movl
pushf
in
and
jnp
dec
xor
aad
ret
xchg
int
dec
pop
jb
test
ja
daa
mov
pop
scas
inc
pop
jp
cs
inc
jl
mov
mov
sub
cmp
icebp
ret
rorb
das
out
jnp
mov
mov
or
add
lock
and
dec
cmpsl
addr16
clc
sbb
mov
hlt
xchg
jle
add
out
and
mov
adc
and
enter
xchg
pop
mov
aad
int3
fisubrl
pop
jo
push
ficompl
cmpsb
rcrb
push
mov
or
and
and
mov
push
ret
pushf
sti
icebp
in
pop
mov
loopne
pop
int3
inc
fmul
mov
mov
cmp
shrl
lods
jmp
adc
test
pop
pusha
pusha
lahf
push
cmp
movsb
test
push
fimuls
xchg
and
pop
cmp
stos
dec
aad
push
xor
lahf
sti
out
std
jecxz
sbb
cmc
inc
mov
ret
pop
adc
mov
mov
cmp
lods
xchg
cmpsb
cmp
pop
push
inc
xor
pusha
loopne
add
fildll
pushf
mov
insl
pop
mov
je
adc
mov
lods
push
insl
cmc
pop
ljmp
xchg
push
mov
pop
cmpsb
iret
cwtl
xor
sarb
stc
adc
prefetch
pop
mov
pop
xchg
outsb
or
iret
xor
xchg
jae
mov
in
cmp
xchg
mov
sbb
out
push
aam
cmp
push
test
lret
popf
ret
cli
jmp
into
push
or
es
leave
lock
mov
push
dec
clc
fcoml
test
dec
in
lcall
sbb
push
or
pop
mov
jno
out
sarb
inc
mov
mov
xor
sbb
cmp
pop
arpl
dec
cmp
nop
xor
out
or
imul
cld
outsb
xchg
shlb
xchg
pop
push
fidivl
pop
sti
add
mov
outsb
jp
and
arpl
xchg
mov
jno
rcr
push
in
imul
add
inc
scas
inc
jle
sbb
loopne
stc
xchg
inc
es
push
jno
xchg
xor
and
orl
push
loope
fcmove
cmc
pop
data16
lret
and
jb
and
sub
push
adc
outsl
and
push
out
stos
and
outsl
jae
in
add
mov
shl
pop
sti
ljmp
popa
lods
jmp
cld
pop
adc
divb
cli
push
sahf
add
jnp
cmp
sbb
es
inc
sbb
mov
add
mov
sbb
adc
test
mov
pop
push
je
pop
insl
addr16
xor
sbb
cld
mov
test
mov
lcall
repz
gs
testl
mov
pop
mov
jecxz
mov
movb
enter
and
and
mov
xor
mov
sub
inc
sub
fcoms
std
mov
sbb
cmp
adc
test
or
sahf
add
aas
sahf
jae
xchg
add
xchg
in
dec
cmp
fcomp
dec
insl
push
mov
imul
movl
decl
pusha
sbb
xchg
push
sbb
adc
sub
shrl
jnp
shll
jno
mov
xor
insb
jecxz
cltd
inc
loope
cmp
ret
sbb
dec
add
sarb
xchg
xor
adc
test
xchg
cmpsb
pop
icebp
lds
cmp
cmp
filds
aas
stc
sar
fs
adc
push
adc
pushl
pop
sub
arpl
pop
dec
lds
xor
cmp
pop
cmpsl
pop
push
sbb
dec
fisubrl
dec
sub
loop
in
dec
out
das
fdiv
std
adc
push
xchg
aam
out
and
jle
push
xor
or
cmp
ja
inc
cmpsl
imul
shrb
sbb
subb
mov
clc
cmp
push
jo
leave
dec
mov
in
test
je
or
sbb
dec
jae
test
mov
adc
adc
aas
mov
push
in
int3
xor
pop
jns
lods
negl
inc
sahf
cwtl
adc
sbb
pusha
data16
sub
and
arpl
inc
test
jns
adc
sbb
and
lret
nop
mov
mov
ror
and
pop
in
clc
pop
pusha
popf
xchg
pop
or
sbb
insb
pop
out
or
jge
push
imul
inc
sbb
nop
push
push
jp
mov
ret
inc
adc
jle
ljmp
popl
lret
movb
mov
xor
or
aad
push
add
sahf
jno
cmp
orb
adc
mov
test
aas
pop
fdivrs
inc
mov
add
jnp
clc
xor
jnp
lods
nop
call
outsl
mov
loop
in
ljmp
mov
fsubl
lretw
dec
adc
cmp
xchg
adc
int
push
sub
adc
test
test
loop
cmpsb
pop
add
push
test
pop
add
cmpsb
sbb
sbb
inc
xor
insl
dec
push
addr16
jmp
pop
arpl
xchg
jmp
adc
adc
lods
sub
dec
shll
mov
loopne,pn
popf
outsl
jl
cmp
aad
cmpb
mov
mov
jmp
add
mov
jne
sub
xchg
pop
pusha
lock
rolb
cmp
mov
add
popf
xchg
jmp
gs
stos
inc
data16
sahf
push
cltd
add
insl
inc
movb
and
stos
jl
test
test
arpl
rolb
lods
push
jbe
fwait
jno
sahf
xchg
sbb
insl
or
cwtl
add
xchg
xor
data16
icebp
fbld
aas
cwtl
lcall
rorb
inc
push
in
adc
mov
inc
and
enter
and
mov
mov
mov
gs
fidivrl
mov
nop
xchg
pop
xor
fs
fwait
pop
inc
cmpl
xor
add
and
sbb
insb
mov
xchg
push
mov
testb
ja
mov
xor
stos
inc
jg
jns
mov
aad
cltd
cmp
jb
xchg
enter
push
fcompl
pop
xchg
vpcmpeqd
xchg
adc
xor
or
xor
sub
fwait
mov
fnstcw
push
mov
out
push
jno
mov
sub
insl
or
addb
dec
xchg
es
xchg
xchg
mov
and
ljmp
xchg
cltd
sbb
mov
xor
daa
xchg
sub
rcl
mov
clc
sub
xor
mov
es
jge
pop
test
jmp
gs
leave
outsb
sbb
pop
fldl
lods
cmpsb
sysenter
les
xchg
insl
mov
clc
jge
pop
cmp
mov
loopne
lret
cmp
pop
enterw
jmp
cmpsl
mov
das
lea
pop
test
jb
out
cmp
fwait
movsl
jno
std
stos
fmull
enter
stos
inc
lret
into
and
sbb
scas
pushf
adc
cs
xchg
xchg
dec
xor
mov
insb
pop
movsb
sub
mov
sarb
icebp
push
mov
jp
sti
cmp
or
mov
pop
and
and
lods
js
out
cwtl
andl
int3
cs
xor
outsb
daa
push
sbb
jne
shl
icebp
hlt
mov
sbb
imul
test
loopne
cmp
in
inc
out
orb
adc
fisttps
cmp
jne
push
fmull
les
lahf
into
xlat
mov
inc
mov
push
sbb
pop
mov
dec
push
mov
lds
mov
lcall
sub
xor
and
inc
push
and
mov
es
imul
aad
inc
icebp
dec
notb
xchg
aaa
sub
cmc
lds
add
cltd
push
cs
or
out
jle
mov
repz
loope
pop
add
int3
mov
sub
xor
mov
out
bound
sub
int3
test
subb
ds
imul
movsl
stos
cltd
sti
filds
inc
mov
xchg
push
std
js
adcl
gs
pop
shlb
popf
mov
or
xor
clc
mov
inc
cld
mov
and
rol
popfw
les
icebp
outsb
mov
push
inc
int
pop
testb
push
pop
push
and
push
xchg
hlt
push
cltd
lcall
aas
jge
lods
shlb
and
pop
out
xor
lods
inc
inc
mov
xor
mov
std
movsb
add
cmp
sbb
bound
cmp
test
jmp
xchg
movsl
sub
push
into
mov
push
lock
push
push
fcompl
add
imul
mov
mov
lcall
jbe
lods
xor
dec
or
mov
arpl
add
pop
popf
xchg
adc
lret
mov
push
aaa
pushf
sub
add
sbb
fxch
and
jp
push
icebp
lcall
push
mov
cmp
outsl
fcos
dec
xor
xor
cs
push
imul
xchg
fstpt
xor
mov
pop
sub
cltd
arpl
in
dec
into
int3
pushf
daa
fwait
outsl
pop
jae
mov
dec
sub
lret
xchg
cld
pop
ds
cli
test
sbb
out
mov
out
mov
ret
pop
mov
pop
daa
nop
movsl
jne
xchg
xor
mov
add
rcrl
xchg
fs
pop
push
outsl
mov
cmpsl
xchg
jge
sbb
adc
jg
jo
out
pop
cmp
icebp
xor
lock
xchg
xchg
lcall
bound
fs
jae
aaa
hlt
mov
push
inc
mov
inc
adc
std
mov
xor
cmp
aaa
popf
push
and
out
icebp
jnp
add
popf
sub
push
sub
add
repz
scas
jb
iret
push
and
lods
flds
cmc
out
xchg
or
pushf
or
mov
pop
mov
inc
and
inc
mov
mov
ret
sbb
jg
mov
push
or
inc
imulb
xchg
loop
xchg
jg
pop
mov
sbb
mov
test
push
mov
cmpsb
fsubl
lods
mov
mov
cld
inc
int
push
cmp
nop
int
cmp
pushf
pop
xor
xchg
faddl
cmp
sahf
push
int3
jmp
add
pushf
mov
mov
push
lods
mov
popa
jnp
mov
mov
or
out
xor
adc
pusha
cwtl
aam
cmc
mov
sahf
xlat
push
push
mov
and
pusha
lret
cld
or
into
push
shlb
xchg
push
mov
outsl
push
rcrl
push
xchg
inc
push
push
cmpsb
mov
stos
lea
jg
push
fcmovne
pushf
sbb
hlt
inc
push
pop
cltd
dec
cld
push
in
mov
mov
xchg
loope
mov
int3
jg
mov
mov
jge
jg
test
leave
inc
pop
pop
dec
in
adc
je
push
sbb
popf
mov
push
test
or
scas
inc
data16
mov
test
xor
mov
mov
cmp
inc
popf
out
adc
in
out
fadd
push
jmp
jecxz
je
sbb
les
in
dec
pop
cmp
hlt
ss
lahf
add
mov
std
inc
loope
imul
push
test
ja
mov
in
mov
and
das
mov
jecxz
xchg
lahf
jecxz
scas
neg
xchg
pop
das
xchg
inc
pop
sarl
cs
fs
add
adc
fbld
out
or
dec
out
jl
cmp
testb
xchg
mov
fisttps
mov
popf
jecxz
jp
dec
mov
orl
scas
repz
mov
cmpl
cs
xchg
lcall
mov
mov
push
testl
popf
cs
xlat
adc
std
mov
inc
ror
dec
xchg
ret
xor
dec
mull
sub
sub
add
xor
sub
add
sbb
call
mov
mov
cmc
in
pslld
adc
orb
scas
and
or
jecxz
jmp
in
jbe
mov
stos
jmp
mov
cld
push
insb
pop
fsub
cmp
fsubrs
sbb
xor
push
pop
mov
mov
inc
popa
jnp
dec
xchg
or
xor
mov
jns
jg
lds
mov
dec
xchg
movsb
mov
int3
add
popa
repz
gs
shrb
movsl
data16
sbb
cmpsb
movsb
stos
sbb
cs
lods
xor
xor
sahf
cmpsb
sbb
adc
inc
xchg
add
int3
jo
sbb
stos
mov
inc
jns
fs
xor
mov
mov
sbb
pop
out
and
and
mov
mov
pushf
leave
gs
xor
ljmp
js
ret
adcb
sti
loope
pop
icebp
dec
out
aaa
daa
fidivl
pop
fiaddl
nop
jg
imul
xor
arpl
push
jle
jo
popf
xchg
cmp
inc
dec
xor
movsl
mov
sbb
cmp
lret
push
popf
jno
dec
fldenv
jmp
int3
stc
push
xchg
and
mov
mov
fwait
rcrl
or
outsl
xchg
ja
xor
pop
mov
mov
stc
fstl
orb
sbb
ret
jbe
dec
sub
or
enter
mov
scas
icebp
sbb
aad
jno
daa
and
sbb
xchg
xchg
sti
jns
jb
and
xchg
pop
leave
mov
push
add
in
scas
cmpsb
into
sbb
iret
mov
dec
call
das
out
dec
mov
cmp
jmp
lahf
and
xchg
xorb
dec
push
xor
xchg
add
mov
mov
add
dec
out
pop
hlt
rep
aad
loopne
and
fisubs
insl
les
and
dec
sbb
add
leave
ror
pop
cmpsl
cli
inc
outsl
dec
mov
movsl
and
and
and
in
bswap
cld
aaa
ret
in
mov
and
or
inc
sti
xor
gs
and
xchg
pop
stc
not
inc
fiaddl
sub
loopne
outsb
mov
out
cmovne
sbb
pop
les
pop
outsl
test
mov
sub
adc
add
xor
sbb
cmp
outsb
or
sub
jle
jno
in
lods
jmp
btsl
stc
mov
insl
pop
fnstcw
leave
mov
and
fwait
aad
in
mov
shr
cmp
mov
jne
pop
xchg
addl
xchg
call
movsl
and
xchg
cmp
cli
sub
pushf
div
lods
xchg
cmp
ds
cmp
jnp
xor
sar
dec
cmpsl
mov
sub
fld
repnz
insl
xor
into
jb
dec
xchg
push
test
pop
pop
ror
push
push
dec
aam
mov
mov
sbb
scas
lods
aaa
mov
xchg
ja
xchg
or
test
xor
jbe
movsb
mov
mov
pop
fstl
sbb
aam
jns
push
fimuls
pop
sbb
add
push
sar
loopne
fisttpll
adc
jle
fsts
pop
xchg
xchg
mov
int3
push
dec
or
ret
fwait
add
cmp
test
mov
xorb
push
clc
icebp
cmpsb
dec
pop
dec
xchg
std
mov
mov
int3
andw
call
mov
cmpl
mov
aaa
sbb
pop
popa
cwtl
mov
int3
into
pop
xchg
jl
clc
lret
mov
clc
test
jecxz
mov
scas
push
rolb
fidivrl
clc
dec
std
sub
push
sarb
movsb
mov
lods
adc
ret
je
sub
xor
test
mov
leave
mov
add
xor
lcall
xor
call
inc
icebp
sbb
and
shl
out
fs
adc
outsl
out
jb
aas
mov
pop
push
push
lods
jmp
mov
lcall
mov
or
dec
sbb
les
mov
dec
cmp
push
imul
xor
stc
movsl
gs
mov
lea
add
xor
mov
sub
dec
or
enter
cmp
push
pushf
outsl
loopne
push
mov
jge
clc
pop
or
cltd
dec
ficompl
adc
mov
pushf
xchg
mov
fdivl
fstp
testb
dec
aas
pusha
clc
pop
out
imul
rorb
pop
stc
es
cmovno
inc
clc
in
sbb
icebp
rclb
or
lock
xchg
sub
adc
jmp
js
xor
xchg
cmpsl
add
xchg
or
push
in
inc
std
ret
lods
lahf
cmpsb
imul
pushf
icebp
xor
cmp
rorl
and
xchg
xor
xor
sbb
cli
or
push
fwait
mov
out
ds
and
lret
fwait
arpl
out
mov
loop
and
or
repnz
rcrb
test
mov
xor
dec
icebp
scas
lcall
iret
jns
pop
testl
cltd
push
int
ja
adc
daa
fwait
cli
sahf
xor
adc
into
cmc
enter
mov
testb
dec
test
add
out
dec
mov
ja
cmc
xchg
out
cmpsb
pop
in
pop
and
hlt
cmp
sbb
cmp
scas
mov
jno
cli
jnp
dec
push
negl
adc
hlt
pop
fidivs
jg
push
mov
xor
shll
inc
cld
sub
mov
mov
mov
push
mov
inc
or
mov
call
int3
mov
sub
xchg
arpl
das
lret
das
sub
dec
xor
movsb
ds
iret
aam
imul
test
xchg
sarb
xor
movsb
hlt
movsb
dec
mov
add
pop
jmp
cltd
lret
inc
xchg
loopne
aam
pop
mov
jle
cli
sbb
push
out
lret
inc
xchg
ja
pop
push
add
or
add
add
movl
jg
dec
xchg
sti
mov
es
sub
les
addr16
int
lods
in
mov
aam
jmp
cmp
xchg
gs
out
add
mov
push
push
jl
pop
in
in
insb
xchg
dec
aas
push
nop
iret
dec
in
test
test
mov
insb
in
sub
jno
inc
ja
pop
xchg
and
push
lods
mov
popf
addl
cld
sbbb
outsb
or
push
addr16
lahf
adc
pop
iret
aas
cltd
leave
xchg
push
inc
jb
aas
std
mov
and
loop
ja
and
test
cmp
lahf
xchg
ja
push
je
lcall
andl
int3
stos
mov
cmp
adc
ja
movsb
mov
mov
push
xor
dec
jmp
mov
and
mov
stos
ficoms
sbb
push
lds
xor
xor
or
push
lock
pop
mov
and
movsb
fdiv
scas
cmp
sbb
setnp
dec
clc
xchg
rcr
xchg
and
movsl
dec
xorl
mov
imul
gs
and
xor
adc
cmpsb
mov
fildl
in
adc
ficompl
div
lret
push
xor
fwait
out
inc
add
outsb
xchg
inc
mov
sub
mov
xlat
push
sti
or
pop
pusha
nop
xor
or
jnp
inc
lret
push
ljmp
shrl
mov
mov
or
movsb
cmp
mov
ret
xchg
repz
jge
mov
imul
out
in
pop
pop
push
cli
push
fdivrs
arpl
daa
jns
loope
mov
pop
aas
mov
inc
pop
cmpsl
je
invlpg
sti
stos
insl
sbb
in
mov
mov
sti
pop
jmp
mov
and
gs
and
ret
xchg
xchg
push
aaa
mov
jo
pop
inc
or
nop
jns
rcll
int3
mov
mov
lds
or
mov
cmp
out
mov
cmp
aad
mov
dec
mov
shll
and
and
dec
cmp
xor
xor
clc
inc
clc
adc
insl
fidivrs
sub
push
mov
mov
repz
shll
pop
inc
cmpsb
int
jae
jl
add
push
inc
inc
xchg
adc
and
push
ss
sar
push
movsl
ss
popa
and
lods
rorl
lds
bts
stc
add
aam
jnp
push
out
sbb
nop
inc
aaa
pop
jle
jae
jmp
mov
popf
jmp
pop
xor
xchg
and
inc
cmp
mov
xor
jb
or
xor
fwait
arpl
sbb
xor
inc
fcoms
call
idiv
repnz
add
lea
push
std
data16
xchg
cmp
jl
rorb
popa
mov
rclb
loope
sti
ret
inc
or
enter
cmp
out
into
js
lcall
in
add
out
insb
cltd
call
and
push
dec
imul
das
cmp
test
nop
loop
and
pop
adc
call
lds
dec
jb
cltd
push
xor
out
inc
outsb
ljmp
ss
and
sahf
outsb
jl
scas
inc
fs
test
enter
inc
mov
mov
inc
std
popf
xor
push
push
dec
jge
lahf
test
xor
jns
push
stos
lods
sbb
and
sub
sbb
mov
lahf
xor
nop
jne
jb
adc
or
adc
or
add
cmp
ret
dec
inc
in
iret
push
test
inc
add
mov
pushf
pop
mov
inc
mov
repz
cmpsb
add
jnp
jmp
xor
jne
jp
dec
sbb
jbe
push
stc
add
cmp
andb
in
nop
jae
fstpl
jo
mov
aad
and
out
pop
into
cli
add
jo
adc
mov
fsubp
and
push
popf
fmuls
cs
or
xor
into
movsl
cmp
in
je
mov
or
jmp
pop
and
out
jmp
mov
push
jecxz
lods
push
xor
push
outsl
arpl
xor
jmp
add
xchg
psubb
insl
xchg
repz
decb
mov
aaa
js
outsb
xor
jecxz
repz
push
dec
fs
and
adc
mov
xlat
push
push
dec
lret
cmpsb
in
dec
sbb
and
in
fistpl
pushf
popa
shrl
or
sbb
andb
int
popf
ja
outsb
xchg
mov
testb
sbb
xchg
insb
add
xchg
fcoml
incl
cltd
popa
sbb
sbb
pop
dec
adc
je
lcall
pop
loop
enter
pop
or
add
aaa
lods
ftst
sti
sbb
adc
lret
sbb
inc
and
adc
jns
movsl
mov
insl
in
pop
push
lcall
into
ja
jp
or
inc
lea
jmp
lock
iret
add
jo
inc
mov
jbe
xlat
pop
repz
mov
pop
mov
sub
mov
addl
shr
filds
xor
std
insl
push
push
stos
hlt
out
jbe
adc
addb
cmpl
or
or
dec
dec
repnz
shr
jp
fimuls
xchg
dec
pop
add
push
xor
mov
push
shlb
xor
mov
cmpb
xchg
jecxz
jb
repnz
lahf
ss
aaa
sub
js
inc
stos
cmp
popf
scas
adc
enter
xchg
xchg
sbb
and
imul
repz
outsb
jle
xchg
pop
stos
cmp
imul
cmp
popl
adc
call
mov
add
mov
push
ds
es
push
push
movsb
sbb
fisttps
add
leave
jae
stos
push
mov
movsb
inc
int3
sub
fnstcw
enter
shll
lock
or
loop
out
cmp
xor
mov
jmp
shll
jo
add
test
les
enter
adc
mov
test
dec
into
loop
sub
cmpsl
xchg
fs
mov
enter
std
js
sbb
dec
mov
notb
in
sbb
insb
test
andl
sbb
xor
repnz
pop
xchg
push
lea
test
jp
jno
mov
dec
dec
test
lcall
jl
shll
jae
hlt
sub
jp
cmpsl
dec
mov
lea
movsb
mov
pop
xchg
shll
fidivs
push
fimuls
dec
insl
jge
cmc
in
je
in
fs
xchg
mov
mov
jne
leave
pop
push
fs
push
cmpsb
add
pop
add
xor
and
out
mov
jmp
cwtl
sahf
mov
sbb
movsl
in
xor
mov
hlt
loope
push
cmp
mov
movsb
xchg
popl
subl
subb
push
xor
es
mov
outsl
mov
notb
ret
sahf
adc
flds
cld
in
int
push
test
sbb
or
sbb
pop
or
xchg
mov
test
lahf
adc
or
or
jp
xlat
pop
inc
cmc
mov
and
into
adc
in
adc
jae
jb
pop
cmp
dec
adc
dec
gs
or
test
lret
push
xchg
mov
pop
mov
xor
mov
and
lcall
lahf
add
push
and
test
adc
jne
lock
stc
sub
jno
sti
push
inc
inc
je
call
ss
test
and
flds
mov
pop
xor
inc
sbb
js
mov
pop
dec
xor
push
inc
push
or
mov
add
fwait
stos
sbb
nop
scas
cmp
pop
imul
push
sub
aas
jo
clc
push
cmp
sahf
pop
inc
bound
jmp
mov
int
jg
adc
push
roll
imul
xchg
add
add
roll
push
out
bound
fwait
clc
mov
ret
adc
push
and
lea
les
jns
mov
ljmp
jle
and
jns
rep
sbb
filds
repnz
movsl
adcl
mov
test
mov
rolb
jp
fsubrl
xchg
mov
fnclex
nop
adc
jnp
out
xchg
pop
mov
sub
dec
adc
lods
fnstenv
push
jo
aad
mov
ljmp
stos
jg
push
jae
sahf
cmp
lret
cmp
lret
bound
loopne
xor
es
fcom
cmpsb
or
rcr
pop
and
bound
mov
add
cmovge
repz
xchg
xor
fcompl
pop
dec
pop
mov
add
cld
push
popf
xor
sbbl
out
sub
xchg
clc
popa
loopne
sbb
hlt
sti
test
pop
test
mov
mov
adc
loopne
rcrl
pusha
mov
lahf
inc
shrb
and
xor
xor
adc
pusha
mov
pop
and
inc
mov
sub
jb
mov
xchg
enter
movsb
insb
adc
jge
or
fmuls
loopne
adc
or
shlb
pop
or
decb
rorl
cmpsl
sti
cmp
cltd
mov
mov
arpl
std
cmp
mov
shrb
and
fsubl
mov
inc
enter
and
push
les
mov
mov
mov
jl
jge
pop
jge
and
add
mov
dec
fdivs
call
pop
xor
add
or
pop
xor
mov
imul
out
push
daa
mov
sub
stc
xor
and
sub
sbb
jne
int
ljmp
lea
xor
dec
fdivrl
in
cmp
or
pop
lcall
ljmp
rcr
and
mov
loope
out
cmpsl
jo
sbb
cmp
stc
bound
jnp
out
dec
and
or
mov
sbb
lea
mov
popa
sub
cmp
cmp
mov
jno
mov
mov
mov
mov
mov
mov
inc
push
fcoml
cwtl
mov
outsl
es
cmpsl
testl
mov
lock
sub
in
mov
push
inc
sbb
ljmp
in
add
iret
into
pop
mov
rcrl
pop
and
cmpsl
popa
aad
jns
sub
cmp
inc
jmp
movsl
mov
aaa
in
mov
or
xchg
xor
mov
lret
xchg
and
ljmp
lods
xchg
iret
cli
pop
or
inc
into
push
add
sbb
arpl
lods
test
outsl
mov
pop
add
mov
push
jne
out
imul
fcmove
push
lea
cmp
xchg
add
inc
xchg
mov
xor
mov
pop
push
xor
sub
int
adc
in
jne
mov
sub
stos
sarl
inc
mov
push
bound
jl
insl
mov
inc
mov
sbb
lods
stos
xchg
fstpt
lds
mov
push
cmp
or
push
cmc
insl
and
inc
cmp
bound
jle
push
fs
rolb
mov
jge
mov
push
jb
into
popf
fidivs
stos
jle
sbb
fcmovu
xchg
rcrl
push
mov
aam
mov
push
loopne
mov
out
int3
jp
mov
fildl
push
loopne
dec
aas
push
pop
mov
jle
fiaddl
outsl
jecxz
pop
mov
pop
cmpb
cmp
sahf
sbb
sub
add
jge
fcomps
out
fs
cmc
sbb
mov
fucom
sub
lods
iret
cmpsl
aam
int
lahf
cs
test
xchg
push
jmp
jge
xchg
push
mov
pushf
sbb
ret
daa
loopne
out
daa
push
and
push
dec
add
or
in
xor
roll
xlat
jmp
testl
shlb
pop
call
cld
scas
lahf
aad
fwait
scas
mov
xchg
gs
jo
jl
out
dec
or
mov
mov
sbb
adc
imul
push
sub
mov
jg
aaa
mov
mov
out
lods
call
out
cmpsb
xchg
dec
rorl
fcmovb
jmp
and
cmpsb
lret
sbb
mov
test
hlt
pop
stos
in
in
xchg
pop
jle
inc
inc
mov
fs
sub
cmp
lahf
add
dec
mov
add
cmp
sbb
lods
out
xchg
ja
push
cli
aam
imul
repnz
shlb
cld
hlt
jg
jle
iret
loop
lds
mov
and
jbe
adc
sbb
fmuls
xor
and
arpl
lcall
je
inc
dec
xchg
pop
stos
dec
bound
or
stos
pop
dec
jne
sbb
add
xchg
int
test
jecxz
pop
push
xor
ret
sbb
push
pusha
dec
ret
inc
dec
xchg
lea
in
jg
mov
cmp
mov
push
stos
push
push
xchg
jmp
sti
push
jne
mov
arpl
inc
out
out
cmpsl
les
sbb
or
fs
push
je
lahf
mov
bound
xlat
mov
lret
jg
dec
scas
stos
or
pop
mov
test
cltd
cmc
jb
in
jae
mov
push
pusha
sub
stos
mov
out
cld
repnz
pop
out
sti
out
lret
cli
mov
lods
lock
jo
icebp
jle
mov
ret
push
add
es
fsubs
in
dec
movsl
jg
jge
add
rol
imul
sub
push
imul
cltd
add
sti
mov
add
movsl
mov
xchg
jmp
nop
fwait
dec
jle
in
jle
test
loopne
rcrl
adc
cmp
and
mov
push
ljmp
ljmp
fcoml
loope
test
sbb
lret
sti
sbb
mov
stos
lock
fldcw
decl
pop
jns
scas
int3
mov
nop
je
ret
dec
cmp
add
scas
mov
repz
add
jg
inc
xor
mov
ljmp
fiaddl
icebp
test
lods
ljmp
sbb
test
pop
lock
adc
fstpl
jne
sub
push
and
pop
into
and
insb
xchg
mov
daa
sbb
cmp
sbb
dec
mov
lea
push
loopne
int
fcomi
cmpsl
hlt
mov
xchg
jmp
or
push
push
jmp
sub
and
lea
adc
lock
mov
lods
data16
jns
push
sbb
sbb
test
aaa
dec
push
stc
je
ror
movsl
sub
or
jno
arpl
loop
mov
xchg
std
dec
negb
dec
outsb
jge
add
and
jge
and
mov
or
cmc
cwtl
xchg
sub
adc
test
cli
sub
pop
jnp
pop
cmc
push
jne
popa
jp
pop
mov
ja
mov
repz
dec
dec
out
push
fildl
adc
popf
es
loope
repz
mov
dec
inc
add
or
mov
ret
nop
and
js
sbb
aad
call
cmp
pop
bound
divb
mov
test
addl
and
xchg
xlat
cmp
in
iret
adc
add
pop
popf
fdivrl
daa
and
daa
fsub
lds
mov
dec
clc
lcall
add
jns
out
jmp
sbb
pop
xor
mov
test
aaa
imul
rorb
pop
daa
fiaddl
pop
dec
test
into
shll
lret
xchg
mov
pop
sahf
xchg
mov
aas
ja
and
jo
mov
xor
lret
mov
push
inc
lret
or
shrl
fbstp
or
lock
dec
xorl
in
call
push
aaa
inc
mov
cmp
imul
and
ret
xchg
mov
or
add
sbbb
repz
test
pop
stos
ja
sub
out
inc
sub
xlat
testl
test
inc
dec
xchg
mov
mov
popf
dec
or
sahf
push
scas
sub
pop
imul
enter
imul
test
out
jnp
lahf
aam
adc
jmp
mov
out
cmp
and
push
and
lods
jg
rcrb
cmp
call
insl
pmulhw
shrb
mov
lds
jno
fistpll
mov
adc
xchg
jno
inc
hlt
lcall
les
ret
jmp
pop
sbb
aad
dec
add
jae
jmp
mov
iret
sbb
sar
sbb
and
xchg
movsl
xor
mov
fistpl
test
es
out
mov
fnstenv
sub
push
inc
mov
push
mov
lahf
and
shl
sub
push
sub
add
add
or
stos
xchg
inc
lods
cmp
cmp
test
xchg
sub
shl
gs
inc
loop
jb
add
xchg
mov
fldl
or
aaa
mov
flds
js
sub
popf
push
sahf
pop
jmp
pop
cltd
stos
gs
test
ds
aam
clc
mov
push
divb
rcr
xchg
flds
push
add
test
roll
addb
and
insb
ret
gs
adc
sbb
push
jle
mov
jbe
add
bound
fnstcw
call
shl
push
or
fidivl
add
xor
ljmp
loopne
cmp
inc
cmpsl
ret
shl
fcmovu
xchg
jmp
jo
pop
sub
inc
push
dec
add
dec
rorl
insb
jle
cmp
sub
jno
and
cmpsb
loop
int
push
stos
cld
mov
dec
fidivs
mov
push
xchg
xchg
clc
int3
xchg
add
leave
cmpsl
int
aad
dec
flds
adc
adc
or
push
xchg
dec
jo
dec
leave
cmp
jb
push
loopne
in
and
es
les
inc
in
xor
add
fmuls
pop
or
dec
adc
call
push
jo
cmc
jge
shrb
xchg
mov
cs
lods
jo
std
mov
inc
push
xchg
and
clc
int3
ss
je
es
testl
lahf
mov
xchg
push
lock
je
int
pop
sbb
jl
scas
nop
test
aad
fwait
inc
clc
outsb
pop
in
mov
fst
mov
sti
mov
and
mov
or
pop
ljmp
sar
pop
ss
fstl
push
not
sbb
adc
sub
push
xchg
fbld
mov
dec
arpl
mov
movsl
int3
dec
outsl
xchg
pop
xor
loop
cmp
jge
cmp
mov
mov
cli
pusha
dec
bound
or
fwait
in
fidivl
mov
adc
das
push
mov
iret
adc
cltd
jge
and
jge
xor
xchg
pop
sbb
mov
inc
test
add
movups
jmp
cwtl
leave
adc
lcall
adc
shl
mov
shll
and
xchg
addr16
mov
cmp
outsb
mov
imull
sbb
mov
push
in
or
sbb
pop
pop
test
icebp
jo
sbb
test
scas
popa
into
push
push
lcall
loopne
divb
mov
mov
pusha
insl
daa
repnz
mov
jno
lret
jne
sbb
mov
mov
and
mov
filds
hlt
jecxz
sbb
pop
cmp
xchg
or
dec
push
pop
and
das
leave
rcrb
js
or
das
jo
icebp
pop
dec
mov
subb
cmpsl
dec
xchg
pop
in
push
adc
push
push
inc
das
and
outsb
rcr
aam
dec
dec
mov
adc
ror
mov
and
sbb
rcr
in
test
cltd
xchg
jp
mov
cs
inc
scas
push
pop
push
adc
adc
xor
insl
sbb
bound
push
dec
add
loopne
adc
jmp
rorb
stos
xor
fstpl
and
das
test
out
mov
cld
pop
xchg
adc
adc
pop
mov
jle
pushf
enter
jmp
sbb
sub
push
add
jp
push
jb
cmp
cmp
test
pop
scas
sub
pop
push
ds
shrl
cmp
dec
push
and
sub
adc
js
inc
lods
dec
xor
sarl
mov
mov
in
mov
xchg
ljmp
and
loope
push
jl
adc
xor
ud2
cltd
pushl
push
arpl
fcomp
adc
mov
sbb
imul
pop
sbb
aad
loope
fnstenv
mov
cmp
jns
pop
sbb
adc
lcall
test
int
push
xchg
jp
sarb
xchg
adc
lret
pop
aaa
mov
add
dec
leave
mov
lahf
add
jg
cmp
subb
pop
cmpsl
ljmp
jns
jl
jae
xchg
loope
out
insb
lock
push
leave
insb
insl
adc
lds
faddl
mov
xlat
xor
mov
jno
mov
scas
xchg
stos
test
pop
dec
xor
xchg
and
fcoml
movsb
add
mov
bound
pushf
in
fst
and
popa
popf
pop
mov
dec
adc
pop
push
cmp
mov
xchg
repnz
mov
fldenv
stc
xchg
adc
add
inc
imul
addr16
jp
jns
sbb
push
jmp
pushf
jo
fisubrs
stos
push
pushf
xorl
mov
pop
movsb
test
xchg
lret
xchg
mov
sbb
cmpb
ljmp
std
dec
xor
fwait
push
xor
push
stos
es
scas
fnsave
mov
sub
into
fucomp
cmpsb
in
ret
movsl
lcall
jne
push
or
sbb
and
xchg
divl
pop
scas
push
and
les
pop
inc
xor
enter
xor
dec
mov
mov
test
adc
in
xchg
jns
pop
lcall
or
cmc
testb
mov
out
xchg
mov
xor
out
in
xor
mov
fwait
lcall
shlb
data16
into
inc
daa
sbb
out
iret
inc
into
shl
subl
xchg
and
insb
imul
jg
fwait
icebp
sbb
mov
std
push
stos
lods
aaa
dec
sub
aaa
sub
orl
jl
movsl
inc
insb
por
fldenv
or
mov
mov
pop
xor
sub
dec
ss
xchg
fsubs
mov
fimuls
int
shll
stos
mov
or
mov
sets
movsb
out
aad
jno
dec
xchg
adc
and
or
das
dec
cmp
jo
xchg
aas
inc
scas
sub
insb
pushaw
sub
daa
cmp
out
repz
adc
subl
dec
imul
test
xor
fisttpl
push
add
mov
sub
shll
xchg
or
mov
imul
ss
subb
add
mov
push
stos
xchg
loope
jo
jo
gs
addr16
out
mov
jno
sbb
mov
push
xchg
scas
and
mov
xchg
scas
fists
pop
xor
hlt
or
adc
cmp
rcl
inc
adc
push
push
push
loope
adc
xchg
mov
push
sbb
in
jno
pop
clc
jnp
pop
cld
out
frstor
inc
sahf
decl
jns
mov
lret
mov
mov
sub
je
ss
push
xchg
test
xor
ss
or
insl
inc
decb
add
dec
cmp
das
mov
aam
mov
pop
xchg
sub
push
dec
jle
subl
mov
loope
cmc
inc
push
test
in
adc
mov
xor
lods
dec
cli
and
xchg
sbb
mov
jne
cmp
pusha
jae
ds
add
popa
movsl
imul
mov
cmp
mov
test
mov
add
out
xorb
push
xchg
cli
popa
inc
leave
jle
add
lea
imul
dec
lcall
or
adc
les
jns
scas
mov
xor
push
into
adc
xchg
add
gs
stos
sub
movsb
cld
mov
nop
lock
and
insb
push
stc
hlt
mov
stos
mov
add
mov
test
push
adc
mov
loop
les
sbb
mov
dec
fists
rclb
insb
push
sbbl
mov
add
adc
mov
and
sub
sub
push
inc
jne
or
adc
in
cmp
out
call
push
xchg
mov
scas
sbb
imulb
int3
mov
and
mov
xchg
and
or
dec
pop
xchg
rclb
mov
sbb
insl
lds
adc
adc
lret
sbb
sbb
push
loopne
pop
outsl
cmp
pop
add
movsb
out
pop
or
loop
or
pop
mov
inc
fchs
mov
xchg
dec
imul
lods
lea
shlb
imul
mov
mov
push
insl
xor
or
adc
mov
cmp
fstps
pop
push
xchg
cmp
sbb
in
arpl
icebp
cmpsb
or
or
jbe
mov
mov
adc
sbb
cltd
bound
mov
fnstcw
mov
inc
push
jl
inc
xlat
lock
lahf
lods
sub
jg
push
dec
xchg
pop
sbb
and
das
adc
stos
dec
push
fs
xor
sahf
mov
adc
repnz
in
push
push
in
xchg
pop
jns
fs
test
jns
fs
or
inc
push
outsl
xor
test
xor
cs
lcall
stc
mov
inc
jno
jnp
adc
into
in
pop
gs
scas
push
lret
adc
push
pushl
loope
lret
jno
arpl
mov
push
sbb
ficomps
test
dec
xchg
push
adc
pop
in
test
cmp
xor
orb
xchg
das
push
hlt
cli
lahf
cmpsl
xchg
sub
mov
mov
test
jge
fistpll
mov
cmp
push
xor
icebp
es
aas
dec
fldt
xor
or
push
cmc
add
addb
pop
jg
bound
sbb
and
lock
pop
adc
push
popf
cmp
mov
add
dec
mov
dec
popf
enter
mov
mov
fistps
loop,pt
fucomp
movsb
mov
cmp
or
ret
lods
xor
orb
popl
bswap
jae
repz
xor
dec
sbb
mov
push
lds
cmpsl
cmp
xbegin
cmpsb
add
shrb
test
mov
xlat
jle
inc
clc
sub
aaa
in
data16
lock
adc
sbb
xchg
outsb
sub
xchg
fistpl
out
sahf
call
rolb
scas
lea
cli
add
sarl
jecxz
and
xchg
aaa
sbb
xor
xchg
mov
das
jbe
jge
fcom
roll
jp
setne
xor
jbe
pcmpgtd
dec
mov
aam
inc
add
sarb
and
lds
iret
pop
pop
stc
adc
std
popa
lds
inc
lods
inc
xor
mov
sub
xchg
xchg
stos
and
xchg
push
adc
hlt
paddw
pop
mov
test
nop
push
mov
push
or
cltd
rcr
and
mov
cmp
pop
clc
imul
les
mov
imul
jg
enter
push
insl
pushw
inc
je
ret
in
xchg
sbb
pushf
and
rcrl
fcompl
rorb
xor
pop
aad
add
sub
push
mov
fidivrl
pop
xchg
jns
or
push
data16
xor
pop
sub
loop
sbb
popf
or
jmp
jge
subl
test
cld
outsl
cli
dec
sub
in
inc
insl
inc
mov
outsl
lcall
test
or
lods
jns
repz
nop
inc
and
push
inc
daa
test
push
jge
mov
aas
jmp
ss
or
pusha
mov
stos
mulb
adc
jmp
mov
pop
push
lret
and
dec
fmull
out
xchg
aas
or
cmc
int
imul
pop
add
jns
mov
push
cmpsb
in
cs
cmpsl
push
cmp
xor
mov
mov
add
and
movsb
divl
scas
out
hlt
rcr
adc
jae
or
stos
jb
fsts
jmp
inc
cld
fdivrl
imul
movsb
add
xchg
out
mov
sub
xchg
pop
xchg
jne
dec
sub
cmc
arpl
test
adc
inc
mov
or
push
mov
and
out
call
fwait
adc
int
adc
in
pop
subl
xchg
fimull
lcall
shll
push
test
xor
inc
mov
call
inc
aaa
dec
in
xorl
repnz
popa
jno
dec
fisttpll
pop
in
outsl
mov
outsl
push
es
xchg
jg
ret
dec
into
ja
cld
xchg
stc
xor
jns
data16
or
sub
hlt
decb
fstpt
hlt
dec
push
push
jns
lahf
cltd
push
int
pushf
sub
test
lcall
dec
xor
dec
mov
or
xchg
sahf
inc
adc
jmp
ljmp
push
push
mov
sub
repnz
fdivrs
scas
pop
mov
mov
push
ret
fcomps
adcb
int
xchg
inc
cmpsl
and
and
jp
dec
cmc
sbb
aad
inc
inc
cmp
and
push
push
mov
push
inc
mov
insl
pop
aad
xlat
aaa
xchg
push
rcrb
jmp
adcb
and
adc
mov
mov
add
cltd
pop
add
clc
ljmp
test
push
test
cmp
outsb
addr16
pop
add
jae
mov
adc
cs
cmp
jae
ret
xor
cmpl
and
pop
fisttps
scas
ljmp
cmp
sbb
cmp
add
xorb
sub
les
test
xor
jnp
shlb
pushl
mov
pop
push
jb
jne
inc
pushf
add
inc
shlb
adc
and
insl
out
cmpsl
jne
pop
ret
pop
jno
xchg
loope
inc
push
xor
sub
dec
aaa
movsl
jmp
fsin
add
push
cli
and
mov
jns
loopne
mov
aaa
push
pop
adc
sbb
movsb
push
mov
lods
pop
xor
lock
and
add
jmp
push
addr16
push
gs
out
ja
mov
mov
fisttpl
sub
loopne
sbb
sub
aas
sub
test
xchg
repz
mov
fiadds
sbb
add
dec
pop
ss
or
mov
sbb
stos
cld
mov
sahf
imul
push
shrl
mov
push
imul
sub
int
sub
imul
imul
dec
loop
jl,pt
test
jle
cld
rorl
pop
dec
mov
cmp
sbb
sti
sahf
pop
lock
xchg
pop
testl
into
ljmp
sbb
aaa
add
stos
gs
movsl
sahf
or
xchg
pop
jp
jecxz
xlat
stc
iret
out
and
test
pop
pop
out
and
sub
divl
fs
sub
es
ja
mov
cmpb
dec
sub
mov
leave
add
xlat
mov
cmpsl
pop
mov
imull
push
out
ss
repnz
hlt
call
nop
shll
mov
aam
mov
push
aam
shr
dec
shrb
outsl
cmc
add
loopne
sub
pop
in
dec
ds
out
xchg
cmpb
shlb
ljmp
adc
ja
push
jmp
pushf
sar
adc
push
mov
or
lret
sbb
push
aaa
repnz
insl
loopne
pusha
xchg
outsb
lret
sahf
push
jecxz
xchg
in
cmp
jl
sbb
xlat
add
sub
lods
or
icebp
repnz
fxch
pop
and
aas
jne
and
or
rclb
mov
jle
jp
iret
inc
into
inc
push
add
inc
cmp
sti
mov
jg
les
cmp
mov
jmpw
subl
leave
shll
mov
inc
mov
cmp
and
jmp
popa
mov
nop
xchg
rolb
cmpsb
lock
fistpl
dec
leave
adc
imul
in
pop
pop
data16
xor
sbb
pop
and
fsubs
add
adc
clc
dec
xor
xchg
mov
nop
jge
or
pop
ljmp
jne
stos
mov
dec
and
loope
out
adc
and
adc
push
das
xchg
into
jns
and
stos
sbb
cli
stos
mov
jb
dec
std
leave
loop
aam
add
push
inc
mov
cltd
pop
shrl
sti
and
push
inc
popa
movsl
ds
test
xchg
adc
mov
lret
sbb
and
pop
stos
push
jge
and
int
call
push
rorb
dec
pop
fiadds
fisttpl
insl
sub
fnstsw
xor
pop
test
add
shrb
mov
repnz
mov
cmp
mov
popa
filds
or
xor
into
adc
adc
push
or
and
mov
inc
test
test
mov
xchg
push
outsb
inc
fcomps
sub
cltd
divb
push
mov
mov
pushf
int
jns
fiaddl
lahf
cmp
jge
ret
xchg
pushf
and
fcoml
jg
out
ljmp
xchg
insb
mov
andl
in
fsubrs
jp
loopne
mov
testl
xchg
jbe
pop
shll
jl
and
push
push
push
mov
movsl
cmpsb
mov
adc
ret
or
dec
xor
push
sub
mov
cld
xchg
stos
inc
or
cltd
mov
or
and
out
mov
call
xchg
xchg
fldl
pop
repnz
test
divb
jnp
lods
dec
cmc
inc
dec
imul
sbb
test
mov
xchg
cmp
cmc
sub
sti
pop
scas
dec
mov
iret
push
fistpl
mov
mov
cltd
adc
xor
jne
dec
std
mov
cmp
jge
js
shll
mov
dec
test
dec
or
sub
mov
lock
mov
ljmp
dec
adc
jmp
jbe
mov
pop
pop
cmp
fs
shlb
aas
mov
pop
lret
add
dec
cmp
ret
cmpsb
jo
push
aam
popa
xchg
mov
jno
dec
int
incl
out
sub
sbb
fdivrs
lods
adc
roll
insl
jle
push
inc
ds
test
and
cmp
int
imul
pop
ss
pop
shll
popa
mov
push
pop
dec
sub
imul
pushl
sbb
vrsqrtss
sub
adc
jno
shlb
inc
daa
and
je
sub
dec
jg
sub
shl
adc
scas
repz
dec
sub
xchg
insb
lock
mov
fadds
lret
mov
mov
push
inc
pop
cmpsl
add
ja
cmp
in
das
pop
mov
inc
adc
xor
add
testb
push
or
pop
xchg
or
and
jbe
jp
xchg
sarb
stos
in
lock
rcrl
sub
mov
mov
dec
jmp
in
cltd
lds
mov
sti
mov
sub
fldl
dec
inc
imul
cmpsb
mov
fisttpll
int3
daa
mov
dec
loop
inc
mov
xor
mov
mov
mov
lret
sbb
or
xchg
filds
push
add
or
ret
xchg
mov
mov
ret
fnsave
cmp
adcb
out
repz
nop
fsts
mov
sbb
lds
push
adc
mov
sub
or
jb
add
mov
cwtl
mov
arpl
push
sbb
xchg
fs
cmpsl
cmpsl
sub
mov
mov
adc
fucom
lret
sub
cli
pop
xchg
cmp
jo
int
inc
pop
mov
ret
lret
jbe
sbb
sahf
push
dec
sbb
lods
push
sti
das
loop
loop
mov
and
xor
stos
in
inc
shl
push
iretw
lods
or
movsb
jo
dec
xor
add
mov
or
negb
jp
fdivl
xor
xchg
xchg
fninit
xor
pop
lds
pop
clc
inc
mov
insb
mov
or
cwtl
mov
and
dec
cmc
pop
das
pop
and
pop
push
or
inc
jnp
inc
sub
dec
in
fwait
movsb
dec
rcrb
inc
inc
push
rorb
sbb
adcb
adc
jmp
aad
jns
daa
sub
fidivrl
adc
push
push
stos
mov
mov
lods
inc
aad
mov
cwtl
fdivrs
fxch
insb
sarb
insl
inc
lcall
inc
mov
ficomps
dec
dec
inc
xor
jp
mov
dec
jae
les
mov
or
in
stos
push
add
lcall
xor
ficoml
mov
aas
inc
sub
cli
cmp
loopne
adc
cwtl
and
pop
std
push
xchg
bound
mov
dec
fdivrs
lret
mov
push
xor
hlt
push
mov
jg
add
cld
xor
xchg
dec
fdivs
lret
lret
dec
xor
insb
jnp
dec
jg
lea
stos
mov
sub
pop
int3
fs
jp
insb
clc
cmp
lock
xlat
jl
push
outsb
pop
mov
inc
mov
push
sahf
inc
cld
iret
arpl
cmp
mov
cmpsl
mov
clc
push
inc
xor
sbb
jns
aas
scas
push
das
cld
adc
xor
mov
js
lods
unpckhps
addr16
cmpsl
or
jmp
mov
push
push
jle
push
repz
cltd
push
or
cs
cmpsb
aam
cmp
idivl
pop
je
out
out
cld
mov
movsb
out
je
inc
mov
movsl
mov
and
stos
push
std
cmc
xor
ret
loop
leave
andl
pop
mov
push
jne
pushf
pop
mov
imul
loop
clc
add
inc
sahf
in
cmp
sahf
movsb
fisubrl
push
mov
pop
sub
mov
mov
pop
inc
mov
jo
push
loope
mov
sub
jp
push
jl
das
cmp
loope
xchg
int
out
jl
hlt
ficoms
push
out
out
adc
push
leave
sbb
mov
sub
sbbl
movsb
inc
mov
fisttpll
out
into
fcoml
fidivs
sub
leave
iret
mov
add
jmp
and
std
icebp
pusha
adc
sbb
sub
movsl
inc
enter
jns
xchg
fcomps
sbb
pop
sub
dec
xor
fwait
cmp
push
xchg
sub
fistps
mov
stos
dec
inc
ljmp
xchg
arpl
or
and
stos
lcall
add
cwtl
jae
test
push
dec
ds
sbb
mov
ljmp
adc
sub
sbb
mov
or
in
mov
sub
inc
sbb
es
call
int3
lea
pushf
push
inc
and
cld
pop
ljmp
ljmp
sub
out
jae
lds
stc
pminsw
out
aam
test
adc
movsl
mov
rolb
pop
fistps
clc
lret
sub
xchg
push
lods
clc
out
incl
aaa
xor
les
lods
mov
mov
cmp
icebp
mov
in
mov
mov
pop
mov
or
inc
add
cmp
out
and
mov
nop
addr16
add
inc
pop
insb
les
and
xor
mov
mov
fsts
insl
leave
jnp
in
aas
mov
stc
pop
mov
xchg
in
dec
fimull
and
jne
popf
addr16
ret
fisubrs
aam
pop
faddp
test
bound
sbb
add
lods
dec
sub
fwait
aaa
jmp
add
dec
xchg
xchg
pop
dec
xchg
ss
mov
mov
inc
addr16
dec
jp
fldenv
fisttps
enter
mov
popl
clc
mov
pop
push
fsubs
pushf
and
lret
cmp
sub
mov
clc
jmp
fucomip
dec
or
or
mov
jmp
test
popa
fsubrp
neg
jb
stc
lahf
cmp
push
test
subb
imul
cmp
adc
mov
and
pop
hlt
imul
addl
sub
int3
repz
and
enter
fs
pop
ds
lea
cli
xchg
repz
lcall
and
loop
cmp
dec
in
in
sub
js
decl
xor
and
lret
jnp
leave
dec
imul
inc
addl
mov
inc
sbb
adc
leave
push
pop
addr16
mov
subb
jl
cld
mov
xchg
xorb
and
scas
mov
xchg
mov
jno
outsl
push
mov
lcall
movsb
push
push
stos
fiaddl
stos
adcl
inc
push
pcmpgtb
in
or
mov
dec
or
scas
fldl
imul
and
aam
xchg
fs
jp
xchg
test
aad
jo
mov
xchg
test
test
or
cltd
es
push
push
jo
xchg
cmp
lahf
popa
mov
inc
jecxz
mov
adc
add
or
push
scas
in
push
jbe
dec
ret
daa
cmp
nop
dec
js
pusha
insl
jle
jbe
mov
sbb
cmpb
cmp
xchg
popf
ds
in
xchg
roll
std
push
shlb
les
repz
mov
jle
push
es
push
andb
std
lods
arpl
sub
inc
addr16
inc
xor
inc
pusha
jp
jne
sub
add
and
sbbb
dec
mov
adc
xchg
pop
stc
mov
inc
mov
scas
xor
rorb
aam
pop
daa
push
ficompl
test
xchg
ret
add
aaa
cs
sbb
lcall
pop
sub
sbb
js
enter
sti
xchg
jne
pop
push
lea
jae
cmp
and
xchg
sbb
sub
dec
xchg
mov
sub
ljmp
push
xchg
stos
pop
cmp
dec
testb
ds
std
jp
lret
jg
ret
sbb
jge
loope
cmp
ja
sbb
popa
arpl
push
loope
push
decl
mov
mulb
inc
add
mov
lret
pop
jecxz
and
and
or
lods
fisttpll
test
ret
into
mull
outsl
adc
jmp
add
or
sbb
xor
pop
enter
pop
out
mov
inc
ja
push
arpl
jne
or
sti
sbb
inc
movb
test
scas
adc
test
mov
sub
je
pop
lock
lds
pop
shrb
nop
insl
sub
cs
jp
jnp
xchg
loope
addr16
push
mov
dec
add
call
lea
out
jle
xor
mov
xor
inc
pop
cmc
or
and
adcl
fucom
lods
das
repz
xchg
je
cld
lret
jns
sub
cltd
cmp
adc
testb
pop
mov
sub
mov
jb
out
push
xor
lret
xlat
test
imul
mov
push
mov
jae
mov
mov
scas
inc
jb
xorl
inc
jmp
shll
sub
scas
mov
fcomip
shlb
xor
rolb
adc
xchg
int
cltd
pop
nop
xor
pop
mov
das
pop
jbe
add
jns
jg
test
insl
ffree
sbb
lret
sbb
rcrb
mov
jns
jecxz
add
sbb
das
dec
push
test
adcb
push
jecxz
popf
mov
mov
std
fcmovnb
and
xchg
fs
lcall
pop
and
cld
dec
cmp
nop
jmp
inc
cmpsl
pop
ja
mov
mov
cld
push
cmp
sbb
in
cli
leave
pop
xchg
pop
rcll
popa
mov
xchg
aam
sub
dec
test
mov
sbb
popf
mov
pop
fcomps
lcall
test
into
cmpsl
mov
or
dec
sub
nop
mov
fistpll
cmp
and
sub
xchg
int
popf
leave
jecxz
xchg
mov
inc
in
in
insb
push
xor
cmp
das
adc
pop
je
xchg
jg
mov
or
into
and
jne
and
pop
aaa
dec
jg
add
cmp
sbb
stos
cli
sti
inc
and
cs
insb
int3
loopne
mov
push
mov
mov
cmpsb
dec
jbe
add
mov
or
ret
mov
imul
mov
dec
mov
pusha
mov
call
push
mov
pop
pop
xor
mov
mov
enter
std
pop
mov
les
or
fildll
dec
inc
jmp
or
inc
loopne
adc
arpl
jns
sub
adc
fcmovu
outsb
push
pop
ljmp
popf
lret
push
pop
jge
sbb
roll
pop
mov
into
inc
sbb
cmp
stos
repz
mov
adc
push
mov
das
rolb
jecxz
enter
sbbb
mov
xlat
mov
lahf
pusha
pop
mov
outsb
adc
xlat
pop
and
in
sub
pop
xchg
push
mov
scas
ljmp
ficoml
mov
repz
ljmp
mov
lcall
loop
pop
add
inc
push
call
cmpsb
mov
push
push
test
scas
or
movsb
inc
lds
inc
sbb
sub
insb
sbb
pop
pop
stos
xchg
mov
xlat
jb
push
rol
pop
cld
inc
xchg
daa
xchg
add
out
jl
es
lcall
jo
out
dec
pop
xor
lds
sub
lods
adc
imul
call
adc
loopne
inc
ret
arpl
test
mov
rcrb
adc
fucomp
out
loope
jns
test
adc
push
sbb
enter
shll
mov
jb
jge
mov
shlb
mov
aam
sbb
movsb
mov
mov
mov
test
aaa
inc
in
cltd
mov
jle
int3
addr16
fisttpll
das
xchg
scas
popa
rcll
lcall
addr16
dec
adc
mov
fdivrl
nop
sti
jbe
mov
cs
enter
xchg
adc
sbb
jge
out
add
add
mov
mov
popf
lret
mov
test
shl
jp
je
sbb
imul
push
in
sub
stc
pop
cmpsb
sbb
ret
rorl
stc
les
inc
dec
scas
pop
xchg
sbb
test
les
add
divl
arpl
jg
imul
inc
dec
sub
or
inc
jge
enter
dec
aaa
xchg
call
mov
mov
jmp
push
repz
push
xor
cmp
ljmp
popf
add
sbb
and
js
int3
sub
hlt
push
cld
sub
les
cmpsb
outsb
add
mov
push
xor
inc
movb
mov
push
inc
cmp
cmp
dec
addr16
and
and
sub
fadd
cmpsl
dec
hlt
cs
repnz
pop
ljmp
push
icebp
sbb
repz
mov
int3
inc
fiadds
xor
test
cmp
sbb
inc
mov
sub
movsl
hlt
inc
mov
stos
je
pop
fisttps
and
pop
insb
dec
shll
lods
jg
in
cltd
imul
adc
mov
xor
in
pusha
jae
sbb
mov
cwtl
sbb
daa
imul
mov
fcmovb
xchg
loope
pop
xlat
test
push
sub
xchg
lock
inc
push
cs
out
sbb
faddl
mov
pusha
insb
cmpsl
pop
add
movsb
push
inc
pop
std
or
xchg
inc
iret
push
xor
mov
mov
enter
push
dec
popf
xor
xchg
fdivrl
inc
mov
xchg
push
iret
outsl
iret
xchg
mov
dec
and
xor
add
insb
xor
add
out
mov
dec
and
out
ffree
push
sub
add
mov
jne
xchg
xlat
pop
fwait
inc
cmpsl
ret
movsl
mov
lods
sub
dec
mov
inc
sub
jecxz
rcrl
jp
mov
jnp
sub
sub
push
pop
stos
sub
orb
push
push
and
hlt
push
test
and
ds
gs
mov
add
test
mov
fisubrl
pop
shrb
out
jmp
jo
jecxz
fldz
lock
or
in
repnz
and
data16
or
mov
mov
stc
inc
scas
adc
cmp
fcomps
ljmp
inc
mov
adcl
rorl
xchg
jne
ret
out
scas
xor
gs
jne
ds
in
xlat
mov
mov
cmpsb
pop
jge
and
jge
mov
sti
adc
dec
int3
adc
outsl
mov
cmp
xchg
xchg
jp
sbb
push
jno
push
out
pop
fldt
imul
jle
outsl
dec
xchg
mov
aaa
sbb
mov
mov
fisubrl
mov
lahf
subb
repz
sub
imul
or
lret
out
mov
cmp
ret
ret
and
loope
add
pop
jp
hlt
loopne
mov
mov
sbb
push
push
pop
daa
jl
testb
cmp
cwtl
adcl
sub
cwtl
cmp
push
stos
cltd
cmp
pop
mov
push
fdivl
rorl
xor
sarb
lods
sbb
data16
sub
testl
test
enter
inc
shll
out
and
pusha
ret
ja
mov
stos
dec
push
add
add
shl
je
and
into
je
jmp
lds
or
fmuls
xchg
add
adc
movsb
cmp
jg
and
adc
dec
daa
jp
into
or
popf
int3
push
gs
mov
cli
mov
imulb
shlb
andl
xor
mov
testb
cmpsb
mov
fdivrs
sub
xchg
stos
adc
mov
add
mov
cmpsb
sub
jo
cmpsb
jb
push
push
mov
add
mov
and
aam
or
mov
xor
je
mov
movsl
jne
xchg
mov
adc
lret
adcb
xor
xor
cld
ss
xor
repnz
push
inc
mov
or
add
movsb
std
jmp
js
or
enter
mov
xchg
mov
adc
cld
es
out
insl
add
and
add
mov
shrb
aaa
jno
jg
mov
push
jo
or
sbb
movsl
je
mov
stc
cmpsb
bound
xorb
jle
ljmp
call
jl
rcr
hlt
ljmp
outsb
daa
cmc
sub
pop
inc
enter
add
xor
pop
int3
aam
movsl
xor
aam
jmp
inc
insb
push
ret
insl
cwtl
js
sbb
orb
jge
xchg
int
pop
xlat
rcr
repnz
xor
add
lods
mov
int3
ret
imul
dec
nop
into
or
jge
iret
movsb
jecxz
xchg
imul
sub
pop
add
outsl
lds
cmc
mov
pusha
xchg
cmpl
mov
lret
inc
xchg
rolb
cltd
jle
pop
es
jg
push
stos
or
mov
push
dec
dec
xchg
sbb
push
shll
mov
mov
imul
cltd
cli
pop
and
fisubrl
jnp
fdivl
mov
jl
popf
mov
fdiv
pusha
repz
mov
adc
jns
xchg
enter
mov
mov
and
adc
ss
and
xor
into
popa
loope
push
das
inc
sub
outsl
inc
jnp
loop
ljmp
jp
jmp
hlt
int
add
rcll
and
cmp
dec
popf
inc
add
mov
jo
enter
sarb
xchg
or
pop
sti
stc
jl
daa
ds
add
inc
outsb
push
imul
loope
mov
mov
sbb
jl
xlat
xchg
inc
test
pop
std
sar
fs
fdivrs
add
or
jns
sbb
movsb
cmp
sbb
jp
and
dec
fmull
mov
mov
divl
mov
jno
lahf
pop
pop
xor
adc
or
fcompl
mov
setno
ret
outsl
shrb
mov
fbstp
mov
sar
mov
sbb
cmp
js
jecxz
mov
sbb
push
add
push
scas
movsl
bound
cmp
stc
sbb
push
push
mov
xchg
sbb
jbe
pop
test
inc
mov
cmpsb
into
sub
pop
aam
fidivl
lods
iret
pop
cmpsl
cmp
jmp
cli
cmp
inc
sbb
neg
push
clc
sti
inc
push
movsl
inc
push
dec
imul
pop
shlb
stos
mov
adc
jl
in
rcr
pushf
push
repnz
sbb
xor
popf
fsubrs
or
cmpsl
mov
push
cmp
repz
mov
add
in
add
stos
leave
or
sub
sbb
pop
icebp
mov
jge
cmp
bound
loop
dec
cltd
subl
and
pop
or
xor
fbstp
shll
xchg
jns
xchg
leave
xor
in
or
out
cli
mov
xor
test
xchg
cltd
out
out
stc
cmp
jae
les
pusha
and
xor
test
mov
push
pop
xlat
aad
outsl
in
addl
xchg
xchg
or
push
mov
jo
dec
aad
push
in
pop
or
mov
out
add
es
sbb
or
insl
imul
ret
jae
insb
jnp
or
and
xlat
mov
and
push
ficoms
mov
adc
pop
add
xchg
push
and
sub
dec
iret
es
xchg
mov
fidivs
aaa
mov
cli
push
inc
push
cli
and
lret
or
cmp
xorb
and
xchg
xchg
pushf
pop
out
fs
sbb
xor
dec
add
or
enter
orl
and
out
int3
add
dec
stos
jbe
fadd
sbb
sbb
das
or
jmp
mov
xor
sub
and
add
sbb
inc
into
mov
xchg
in
mov
sub
and
iret
stos
sti
and
or
mov
mov
addr16
nop
adc
mov
fidivrs
xchg
in
sub
mov
inc
dec
pop
mov
aad
cmp
icebp
mov
and
push
int
inc
sbb
aaa
andl
mov
mov
scas
cmp
fwait
xchg
rcrl
and
unpckhps
adc
pushf
aad
dec
clc
mov
mov
adc
jp
mov
int3
or
jge
into
pushf
out
pusha
xchg
stc
push
or
aad
loop
jns
cmp
cwtl
and
lds
mov
gs
lock
pop
imul
xchg
jb
push
out
test
sbb
gs
lock
iret
mov
popa
dec
adc
es
sbb
push
stos
jae
lods
pop
fimuls
stc
fldt
cmp
sub
fldt
or
mov
popa
and
test
jne
jno
jle
scas
xor
enter
sarl
and
xor
xchg
cmc
cmp
mov
pusha
sbb
loopne
ret
add
jge
mov
sahf
ds
mov
mov
sub
sub
pushf
xlat
or
ljmp
pop
dec
notb
cmpb
xor
lret
adc
decb
repz
loopne
ljmp
in
imul
or
and
aam
in
lods
push
xchg
pop
sbb
fcmovb
adc
adcb
sbb
push
push
sub
test
push
mov
cmp
aaa
pop
cpuid
jg
pop
out
sbb
sbb
push
adc
push
xor
pop
and
sub
out
loopne
mov
jl
and
sti
jmp
sub
mov
sub
push
daa
mov
pop
push
xor
sbb
sbb
cmpsb
mov
xor
sbb
pop
pop
sbb
or
cmp
std
fld
scas
jns
fwait
mov
std
loope
pop
mov
xor
jae
push
push
and
addb
movsb
imul
loop
frstor
push
leave
add
andb
in
push
inc
cmp
cld
fstpl
add
and
mov
mov
and
inc
test
mov
iret
inc
mov
adc
addr16
ds
addr16
popa
into
mov
mov
dec
fnsave
pop
add
cmp
aam
jb
jnp
push
int3
call
hlt
xchg
iret
inc
out
imul
push
cs
mov
dec
std
jae
mov
fucom
mov
jo
stos
xor
int
cmc
cmp
pop
mov
mov
xchg
push
enter
in
aas
push
adc
xorb
mov
and
xchg
fbstp
push
inc
rcr
cmpsl
rolb
xchg
xchg
sbb
int3
ret
or
rolb
mov
xor
jp
add
vaddsubps
sti
shl
ret
sub
add
cld
push
insl
aam
adc
stc
cmp
sub
mov
into
add
sub
lods
outsl
adc
add
mov
jl
idivl
fstpt
fs
xorb
cli
test
js
jecxz
mov
inc
test
mov
popf
pop
jnp
add
and
aas
gs
inc
jecxz
sbb
mov
les
lods
inc
mov
into
pop
nop
jb
add
push
add
ja
pop
pop
mov
xchg
pop
mov
cltd
xlat
jo
sub
inc
or
push
pop
xor
push
nop
repnz
test
fsubrl
fimuls
push
adc
scas
jecxz
test
push
out
pop
scas
sbb
mov
dec
insl
movsl
sti
mov
mov
dec
clc
outsb
daa
ds
cld
pop
adc
push
mov
ss
cs
aam
inc
mov
mov
jecxz
mov
fildll
jp
jmp
xchg
negb
sub
mov
jns
mov
push
jecxz
fidivrl
cmp
aaa
push
jecxz
xchg
lret
pop
mov
aam
add
sbb
mov
pop
out
mov
lds
leave
push
lods
faddl
pop
xor
mov
sub
xchg
mov
mov
jp
shlb
fimull
and
mov
loop
loope
les
sbb
pop
les
push
sub
xorb
pop
fistps
loopne
dec
lret
gs
inc
or
xor
cltd
ret
cmp
push
and
out
and
in
xchg
outsb
jb
rcrb
dec
ss
jo
mov
pop
fwait
dec
mov
mov
test
in
xlat
mov
push
and
insb
mov
sbb
and
or
outsb
push
mov
pop
ficoml
in
cmpsb
lods
mov
mov
jnp
push
pop
push
movsb
popa
inc
sub
mov
sti
les
inc
repnz
addr16
ret
pop
out
jmp
ss
jbe
push
adc
addr16
rolb
adcb
stos
add
pop
int3
mov
fidivrl
or
add
ds
or
js
lods
xor
bound
mov
mov
lds
add
aas
pop
int
inc
push
mov
lock
arpl
inc
loop
iret
inc
popf
inc
shll
ret
mov
out
adc
sbb
insl
jns
or
mov
call
movq
pop
sub
sub
fcmovb
cmp
stc
xor
pop
lcall
ret
cmc
insb
ja
scas
into
and
or
adc
leave
cmp
stos
mov
in
jb
inc
test
or
jo
mov
in
and
enter
roll
pop
jns
mov
loopne
out
stos
lods
arpl
iret
jne
mov
bound
movsb
shl
sti
rcl
enter
push
vmovaps
inc
add
insl
movsb
xchg
ja
xlat
mov
cmpb
jmp
jns
jne
fcmovnbe
mov
sbb
out
cltd
fisttpl
push
or
sbbb
imul
shll
lret
cmp
jle
push
pop
xchg
xchg
jns
add
sbb
jecxz
dec
jmp
rcl
dec
outsl
lds
lds
mov
addr16
push
inc
movsb
inc
xchg
xchg
stos
mov
pop
lcall
mov
cmp
inc
out
dec
int
xchg
shll
dec
in
jmp
es
arpl
incl
std
repnz
mov
ja
aad
or
inc
insl
dec
arpl
loop
or
imul
inc
or
incb
mov
and
push
imul
mov
lcall
mov
jmp
clc
leave
pop
add
cmpsb
and
mov
and
mov
imul
mov
frstor
movsl
loopne
popa
and
adc
nop
lcall
rcll
sbb
dec
cmp
push
dec
dec
and
leave
test
inc
hlt
scas
sub
fdiv
bound
push
jne
and
push
imul
getsec
sub
sub
out
adc
xchg
push
loopne
jae
mov
jo
xchg
push
jl
test
mov
cmpsb
scas
cmpsb
add
cmc
cmp
inc
push
js
arpl
mov
or
pop
adc
and
ds
sbb
js
sub
jg
arpl
in
loope
add
addr16
test
sbb
mov
and
sub
mov
js
sub
adc
mov
test
stc
cld
fnstcw
jbe
push
pop
push
cmp
enter
fistpl
lcall
push
and
call
ret
loop
add
dec
mov
mov
leave
sub
or
and
nop
xchg
dec
fsubrs
insb
insb
jb
enter
inc
sub
gs
adc
xchg
mov
cmp
cmpsl
inc
pusha
ss
mov
sbb
and
xlat
inc
fcoms
pop
jb
movsl
cmp
adc
cmp
add
adc
push
dec
sub
cmpsb
push
cmc
mov
bound
push
orb
faddl
ret
xchg
xor
mov
mul
scas
pop
movl
and
push
mov
jmp
cmpsl
js
push
arpl
push
jg
ja
popf
cltd
fwait
xorb
mov
pusha
in
hlt
test
inc
mov
pop
push
mov
ja
cmp
cld
sub
pop
xlat
sbb
mov
jle
mov
fimuls
lea
mov
dec
add
jge
push
xchg
lret
imul
stos
filds
pushf
sbb
xor
pusha
xor
iret
jne
jp
hlt
cmp
js
and
data16
or
xchg
xor
sub
jae
push
push
and
xchg
fdivr
sub
adc
inc
sbb
mov
loope
mov
xchg
daa
loopne
testl
inc
mov
imul
daa
out
and
mov
xor
cld
fbld
daa
fildll
data16
scas
cmc
pusha
in
or
stos
mov
xchg
cmp
loopne
jnp
mov
push
shll
lret
or
mov
xchg
sbb
pop
js
stc
test
cltd
jae
push
test
mov
stc
cmc
shlb
fwait
ret
rorb
adc
mov
xchg
dec
mov
xchg
or
adc
lahf
outsb
ror
dec
stc
and
dec
aaa
push
inc
cltd
cmpsb
adc
or
inc
les
sbb
stos
addr16
xchg
outsb
imul
jg
add
inc
rolb
cmp
jecxz
insl
decb
mov
fstl
int3
data16
cmp
add
xor
shlb
sbb
add
inc
mov
lods
les
pop
sti
lret
sub
lea
cs
movsl
out
mov
js
stc
xchg
push
lret
pop
pop
negl
sbb
dec
movsl
mov
shrl
xchg
pushf
xchg
insb
mov
inc
loopne
ja
push
das
pop
cld
mov
cs
fstpt
mov
and
adc
gs
roll
fidivs
jmp
cmp
cmpsb
dec
stc
rolb
push
adc
dec
push
xor
xchg
mov
jecxz
ficomps
push
outsl
nop
push
pop
leave
mov
mov
cmp
or
lods
and
pop
mov
or
adc
mov
mov
or
sbbb
or
jnp
jmp
push
or
int
bound
notl
movsl
ret
rcl
mov
mov
pop
mov
scas
test
clc
sbb
sbb
adc
mov
jb
jge
jnp
pop
mov
notb
mov
ja
loop
sub
xor
xchg
repz
cwtl
inc
xor
push
int
cltd
es
or
dec
pushf
stos
push
mov
pop
push
inc
das
xchg
insb
dec
outsl
mov
test
xor
cmp
inc
cmp
sbb
fs
movsb
out
inc
lds
mov
cmp
xchg
cmp
or
pop
aaa
push
hlt
pop
pop
test
sbb
dec
mov
sbbl
push
data16
es
insb
imul
and
dec
jnp
jmp
in
dec
jmp
inc
jbe
add
jle
dec
pop
xchg
out
adc
shlb
mov
bnd
movsb
loop
cmc
arpl
sub
pop
dec
lea
je
mov
cli
add
pushf
and
cmp
mov
aad
add
cmp
sbb
pop
xor
and
sti
roll
lea
mov
outsb
stc
xlat
imull
cltd
iret
nop
cmpsl
test
mov
fwait
scas
cmp
jo
cmp
mov
xor
or
xchg
cli
repz
or
cs
mov
mov
stos
or
stc
mov
or
jge
sub
mov
mov
lret
mov
dec
stos
dec
mov
scas
mov
fcomps
xchg
scas
inc
inc
in
ret
int
xor
shlb
jmp
loopne
ret
inc
pminsw
jbe
mov
mov
das
leave
out
push
xor
insl
mov
pop
data16
orl
and
mov
sub
sbb
mov
inc
mov
dec
or
push
sub
loop
iret
ds
inc
dec
sub
xor
xchg
out
es
in
pop
xchg
mov
xor
pop
je
add
mov
xor
jg
pop
and
scas
sarb
sub
cmp
add
pop
pop
mov
inc
push
icebp
mov
cmp
sbbb
mov
negb
adc
cwtl
add
fisubl
test
call
mov
xor
push
sub
ja
bound
sub
jne
or
push
test
inc
cmc
or
add
test
xchg
popf
bswap
push
out
js
ds
pop
jp
in
rcll
and
add
inc
inc
inc
cld
filds
mov
jmp
js
nop
pop
xchg
mov
sbb
sarl
jl
ljmp
xchg
or
mov
lea
xor
leave
cli
popf
xchg
mov
adc
pop
push
jmp
cmp
add
cmp
fwait
or
sbb
xor
or
xor
push
xchg
scas
lcall
mov
lret
aas
out
cmc
xor
mov
push
sub
mov
and
test
pusha
loopne
add
xor
mov
adc
lods
dec
into
aaa
call
xor
jns
cs
cmp
ds
add
inc
inc
mov
sbb
and
sahf
mov
les
pop
cmp
repz
aad
adc
out
pop
mov
cmp
frstor
and
inc
cmp
pop
loopne
int
out
adc
xor
aad
movsl
insb
fcmove
and
xlat
out
sbb
cwtl
jns
push
or
scas
or
enter
mov
xlat
fnsave
fdivl
outsl
test
mov
xor
lret
jle
cltd
mov
xor
cmp
out
lods
pop
mov
out
in
push
ret
and
pop
push
enter
mov
scas
aam
push
sbb
sbb
cmp
mov
jnp
add
xor
xor
add
xchg
mov
adc
xor
jns
lcall
mov
imul
lea
mov
adc
divb
shrb
or
pop
gs
jl
xchg
inc
xor
or
mov
ljmp
adcl
mov
add
in
and
inc
ljmp
stos
inc
mov
into
jae
mov
xchg
outsb
sub
ret
in
pop
je
lea
enter
pop
ds
inc
imul
dec
push
inc
add
adc
aad
and
mov
and
push
cld
cs
fcoms
pop
cltd
mov
movsl
pushf
stos
movb
call
outsb
xor
mov
cmpl
mov
cmpl
divb
jp
or
out
les
ss
orl
add
lcall
sahf
xor
sbb
push
push
repz
push
mov
mov
jne
mov
and
cltd
scas
leave
sarb
imul
mov
dec
and
popf
out
lret
mov
pop
mov
push
xchg
cmp
mov
out
xchg
ret
sahf
adc
cmpsb
jecxz
stos
cmp
cmc
pop
mov
and
cmp
cmpl
adc
xchg
cltd
int
rcrl
pop
cld
in
cwtl
nop
cs
nop
mov
adc
push
andb
sub
aad
jbe
mov
idivl
call
push
dec
andb
fwait
lahf
xchg
lds
xchg
adcl
mov
jbe
adc
icebp
gs
jg
lea
adcb
iret
lds
rorl
aaa
push
lahf
pop
jne
and
sbb
and
pop
js
mov
movsb
int
cmp
push
mov
jge
or
stos
stc
dec
mov
add
push
and
jae
adc
mov
scas
push
sarb
ds
mov
stos
sbb
in
inc
or
dec
ret
xchg
inc
adc
sbb
in
enter
push
sub
roll
pop
push
mov
es
fimull
ljmp
pushf
repnz
rclb
lods
jg
fucomip
enter
xchg
lods
xchg
lea
fcmove
fisttpll
dec
in
ja
ljmp
sarl
popa
out
xchg
mov
push
push
xor
mov
test
mov
nop
xchg
or
sub
std
aad
fcompl
dec
adc
mov
in
inc
ljmp
sub
dec
shlb
jo
and
jmp
mov
out
hlt
and
xor
dec
jbe
call
outsl
or
enter
nop
dec
movsl
sahf
and
dec
loope
jnp
sub
imull
pop
jp
das
int3
or
fwait
sub
mov
je
mov
rcrb
add
orl
cmp
mov
xchg
sbb
out
jg
jl
call
roll
lods
xor
push
xchg
mov
das
stc
adc
dec
ds
push
and
xorb
scas
add
sub
pusha
sub
das
mov
das
cmpsb
out
add
inc
js
mov
inc
ds
lea
ss
clc
and
loopne
inc
into
loope
inc
and
add
data16
shrb
xchg
jl
ljmp
xchg
mov
dec
inc
arpl
xlat
cli
add
and
ljmp
xor
mov
xor
or
sbb
jecxz
dec
jmp
rcr
cmp
pop
test
adc
fwait
mov
jne
data16
ret
inc
xchg
pop
mov
or
imul
movsl
dec
jmp
cwtl
jbe
inc
cs
in
or
fwait
pushf
les
inc
dec
or
in
int
pop
add
jno
dec
rcr
aad
lock
repz
pop
shll
sahf
mov
adc
and
popa
loopne
lods
push
cs
push
adc
ja
lret
pusha
mov
or
mov
cmp
gs
sub
pusha
jmp
das
jo
jl
xor
cmp
ret
stos
out
incl
xchg
adc
pop
adc
in
addr16
xor
cmp
xchg
add
pop
cmpsl
inc
icebp
inc
cmpsb
jl
les
dec
jns
xor
dec
jmp
mov
push
xchg
out
inc
inc
and
push
push
aas
lret
sbb
lret
dec
test
mov
lock
or
cmp
test
and
in
sbb
sbb
addl
mov
and
mov
enter
lahf
jae
mov
movsb
jbe
sub
mov
xor
dec
pushf
fsubrs
sbb
mov
icebp
ret
mov
loopne
ret
cmp
mov
out
push
push
cmpsb
inc
insb
xor
std
sbb
xchg
sbb
adc
lret
xchg
movsb
rol
cmp
mov
cltd
mov
loope
daa
jecxz
push
in
inc
inc
negb
ficoml
lds
inc
lret
lcall
mov
push
cld
pusha
lahf
insb
push
sbb
inc
add
int3
pusha
mov
mul
cld
xchg
lods
adc
sub
and
sti
mov
movsl
xchg
sahf
lret
mov
xor
pop
mov
inc
fidivrl
or
mov
cmp
xchg
jmp
rcr
xchg
test
pusha
sub
jmp
mov
xchg
call
inc
mov
and
cld
nop
mov
mov
icebp
nop
stc
or
xchg
push
push
pushl
test
mov
push
mov
fadds
sbb
cmp
mov
pusha
pop
orb
pop
pop
jns
inc
in
sbb
movsb
inc
mov
fdivs
add
mov
shrl
loope
inc
dec
ret
test
push
lock
dec
shll
or
adc
sti
fistpl
push
add
jns
je
icebp
mov
sbb
adc
push
scas
pop
lret
jmp
jb
mov
sub
inc
popf
test
rorl
jecxz
dec
das
lock
movsl
mov
sahf
or
xchg
add
in
pop
mov
xor
xor
push
jnp
cmp
push
shll
call
sbb
mov
aas
iret
pop
das
cmc
adc
add
stos
in
pushf
test
push
cmp
mov
jl
jns
sbb
in
push
psrld
jmp
xlat
add
and
mov
lret
lcall
fldcw
movl
xor
ljmp
cmp
lahf
xchg
dec
stos
xor
pop
lcall
mov
mov
shrl
xorb
pop
std
mov
outsl
out
mov
lods
lret
sub
dec
pushw
jecxz
pop
add
lea
dec
test
sbbl
inc
xorl
xor
add
lock
in
cmp
mov
add
jae
sub
and
dec
ljmp
jno
pop
aam
cmpsb
cmp
imul
or
stos
mov
std
jb
pop
or
mov
and
mov
movsl
mov
mov
in
push
ds
leave
in
jne
divb
ljmp
imul
dec
add
cmpsl
mov
lret
adc
and
fisubs
mov
cli
sub
dec
sbb
mov
cld
add
outsl
jns
sub
mov
lea
stc
inc
or
push
nop
iret
enter
shrl
sub
inc
add
lret
lahf
dec
xchg
mov
ljmp
mov
lahf
xor
cmpsl
lods
out
in
cmp
lahf
push
jg
and
stc
inc
icebp
js
pop
call
cld
push
inc
call
repnz
std
addr16
leave
sbb
mov
xchg
lods
pop
cmp
mov
sub
mov
xor
sbb
stos
stc
cmpxchg
mov
rcrl
mov
movsl
imulb
sub
xor
shlb
mov
shrb
pusha
dec
add
or
fcmovu
repnz
mov
mov
lret
add
test
sbb
pushl
inc
mov
pop
loop
and
push
xchg
leave
int3
jl
push
movsb
in
pop
jg
and
cli
subb
mov
movsl
dec
or
and
xor
lcall
sbbl
ja
cli
mov
repz
outsb
sti
pop
xor
shrb
stos
and
inc
pushf
fcomps
mov
gs
rorl
cld
scas
cmpsl
xchg
cs
push
xchg
int3
ret
adc
xchg
sahf
das
xchg
test
xchg
rcrl
aam
lods
jae
or
fdivs
gs
cmp
cli
lahf
repz
fs
stos
jae
xchg
mov
imul
dec
cmp
push
stc
jne
fdivrl
mov
adc
pop
and
popf
jbe
aad
in
or
popa
sbb
xchg
std
jmp
pop
les
cmp
adc
push
fadds
ljmp
pushf
push
ljmp
repnz
xchg
and
cmp
inc
std
bound
sti
mov
sbb
cmc
fsubr
adc
out
int3
mov
divps
sti
stos
jne,pn
sti
call
mov
repnz
data16
inc
and
outsb
test
out
aas
sahf
out
loop
das
inc
ret
mov
pop
or
cld
movsl
mov
or
stos
ret
dec
subb
inc
cmp
push
and
imul
jge
cmp
mov
and
sahf
jl
cmp
es
pusha
ds
out
mov
out
push
dec
in
movsb
aas
cmp
popf
adc
ljmp
mov
lods
adc
push
ret
push
push
mov
xorb
and
lds
jmp
xor
sub
cwtl
sar
insb
movsl
lock
push
aad
popf
mov
jge
jecxz
pop
or
mov
pop
pop
jmp
and
hlt
scas
scas
mov
and
pop
jg
dec
jmp
lcall
mov
ror
mov
mov
adcl
gs
mov
rcrl
movsb
inc
push
repz
add
add
xchg
xchg
popf
pop
movsl
jmp
cltd
inc
add
imull
push
push
mov
arpl
bound
adc
jecxz
and
jl
ds
cmp
mov
pop
subb
mov
dec
cld
dec
in
push
xchg
sbbb
lock
mov
imul
push
loopne
xchg
lds
in
add
mov
adc
xchg
stos
jnp
std
adc
loope
xchg
sub
jb
mov
dec
ret
hlt
mov
sarb
adc
mov
push
push
fisubrl
push
in
divl
jmp
testl
or
or
add
int
inc
js
pusha
xor
aaa
and
fmull
fmulp
and
mov
popf
stos
dec
popf
fstpt
fisttps
jno
inc
inc
add
sub
jo
add
mov
cltd
jge
int3
cmp
jmp
jbe
mov
into
and
testl
dec
jo
dec
jle
scas
push
call
and
push
jl
mov
or
adc
lahf
jae
add
aas
mov
nop
and
jne
inc
or
xchg
popa
data16
call
in
loopne
mov
decl
xor
or
rclb
std
mov
outsb
arpl
pop
pop
stos
pop
sbb
cmp
adc
std
movsb
fbld
fdivs
pop
pop
cmp
mov
xchg
imul
dec
leave
popf
out
jmp
adc
in
or
mov
mov
lret
test
mov
es
cmp
sbb
add
sub
jle
jg
push
adc
loop
add
leave
imul
test
push
out
ret
inc
mov
gs
add
dec
in
dec
xor
mov
push
fwait
adc
dec
push
push
mov
lock
imul
mov
es
dec
sub
andl
lret
mov
fwait
inc
and
sub
shlb
fidivs
mov
mov
out
lret
ja
jnp
or
push
lret
and
add
pop
pop
rcll
dec
and
mov
neg
sbb
pushf
rorl
add
mov
sti
mov
fbld
mov
jno
and
outsl
adc
fsubs
mov
out
test
rolb
inc
push
or
iret
jecxz
adc
movsl
and
outsl
iret
lcall
dec
cmp
fimuls
dec
xchg
cmpsl
push
adc
fsubrl
lds
lds
jg
cmpsb
xlat
ret
inc
add
in
and
mov
stos
loopne
add
fsubl
enter
fmul
enter
pushf
push
push
rcrl
inc
in
jbe
push
jne
aas
cmpsb
mov
mov
jae
aas
xchg
es
dec
nop
jg
sub
adc
push
jo
sbb
mov
lret
push
cli
insl
mov
jb
or
jmp
add
int3
push
pop
imul
dec
jb
cmp
pop
movups
dec
scas
dec
jne
out
xor
and
sbb
in
push
pop
lea
xor
shr
jnp
or
movl
dec
testb
xor
ja
cmp
outsb
inc
adc
push
pop
mov
cwtl
sub
imul
and
mov
or
sub
movsl
icebp
inc
mov
gs
sti
push
nop
loopne
jle
or
mov
fldl
pop
push
imul
and
clc
nop
fnstsw
dec
xor
daa
imull
push
in
mov
jmp
test
or
loop
cmp
inc
and
xlat
mov
mov
icebp
test
sbb
out
adc
shlb
je
sbb
inc
sub
dec
sti
mov
ja
and
es
jp
inc
mov
adc
mov
xchg
cmp
lcall
adc
outsl
lods
sbb
mov
and
fdivr
pop
in
call
int3
xchg
loop
repz
arpl
or
xor
mov
xchg
je
movsb
aas
jno
sahf
jle
inc
shlb
cltd
iret
pop
cwtl
add
xor
mov
mov
lea
xor
in
loopne
xchg
xor
fisttpll
dec
loopne
test
ret
ja
add
lock
sbb
je
mov
adc
sub
xchg
add
xor
cmp
mov
adc
mov
test
cwtl
or
push
outsb
mov
pushf
popa
popf
inc
lret
push
jae
dec
cmpsl
mov
leave
sti
aam
ja
cmpsl
dec
aaa
movsl
dec
mov
lret
stos
jnp
sub
jle
movsl
sub
imul
stc
or
push
mov
lock
mov
rorb
xchg
xchg
push
inc
push
mull
sbb
outsl
rcrl
sbb
pop
loopne
mov
shrl
aaa
jg
lods
jne
push
mov
es
or
adc
push
xchg
xor
movsb
outsb
das
data16
sub
add
rcll
adc
pop
jbe
fildl
sti
les
mov
jge
or
int
in
cld
xorl
xor
add
jmp
loope
lods
fiadds
inc
sub
ss
addr16
call
pop
sbb
in
jmp
cmpsl
hlt
dec
jecxz
jae
fmulp
cltd
pop
pusha
icebp
xor
pop
out
jmp
and
sub
in
sbb
fstpl
xor
das
fbld
adc
out
sub
mov
push
pop
dec
int
enter
mov
pop
pusha
ljmp
push
stc
fidivl
mov
in
push
arpl
into
aaa
cwtl
cmp
fwait
sbb
pop
mov
inc
adc
fnstcw
dec
sbb
mov
xchg
push
int
lds
stc
int
jp
adc
adc
pop
lret
fistpl
out
push
cmp
scas
movsb
inc
jae
inc
shrl
out
cli
xchg
int3
add
pop
cs
std
in
out
incl
mov
or
nop
mov
xor
mov
add
fldl
sbb
sbb
outsb
and
mov
test
out
sbb
and
xchg
or
fcmove
pop
or
test
fdivr
jl
add
gs
aas
xrelease
test
adc
mov
gs
sub
out
xchg
jno
push
test
clc
loope
lods
ret
add
fcmove
aam
sbb
fldenv
sarl
jle
cld
mov
ret
fsubl
push
xor
xor
push
mov
jo
sub
in
cmp
arpl
pop
ficompl
xchg
add
mov
mov
or
and
mov
jae
mov
outsl
add
pop
jae
sub
cmc
in
imul
jecxz
mov
jmp
or
les
imul
pop
mov
addl
in
fstp
nop
add
push
ret
das
int
push
adc
fwait
sub
xor
shrb
push
and
lahf
mov
js
push
fiadds
mov
sar
lret
daa
jecxz
lea
pop
inc
add
cmp
ljmp
mov
cmp
ret
jno
imul
stos
out
iret
mov
add
leave
call
in
sahf
mov
cli
adc
push
fnsave
sub
stc
sbb
adc
stos
xor
xor
and
rcrl
in
lock
sub
cmc
dec
mov
xor
sbb
or
sti
rclb
jae
pop
dec
and
in
int3
pop
das
xchg
loope
icebp
outsl
sub
cmp
jnp
or
aam
push
scas
mov
mov
or
jae
push
mov
movsl
push
movsl
xor
popf
orl
adc
mov
rcll
out
movsb
and
mov
lahf
in
pop
inc
mov
sub
popa
sub
lea
mov
clc
stc
sub
mov
inc
dec
out
shl
js
cmp
or
and
mov
adc
fisubrs
pop
mov
es
in
mov
push
adc
mov
in
addb
pop
mov
xchg
lcall
subl
sahf
and
cmp
pop
cmp
loop
jl
cmpsl
std
pop
cmp
cltd
ja
pop
xor
aam
push
std
xchg
mov
lods
inc
xchg
mov
or
nop
aaa
sub
dec
fcomp
pop
sub
enter
adc
inc
pop
shll
movsl
or
repz
xor
mov
cwtl
dec
lret
mov
iret
push
es
cs
or
and
mov
pop
sbb
and
mov
mov
sahf
push
stos
movsb
xchg
adc
jge
xchg
fwait
sbb
arpl
xor
or
sbb
or
sbb
shll
fisubl
fnstcw
push
cltd
mov
push
xor
cli
and
inc
rorb
in
sub
dec
orb
or
das
mov
pop
xchg
add
sbb
mov
sbb
jecxz
sbb
std
and
popa
sbb
xor
jae
mov
adc
cli
sbbb
insb
add
mov
pop
mov
mov
cmpb
mov
xchg
cli
out
push
aaa
pop
popa
jg
test
xor
push
ficomps
movsb
mov
out
negb
or
int
cmp
insl
inc
outsl
js
sub
stos
jmp
fisubs
cmp
sahf
nop
mov
jno
lret
in
in
sarl
test
dec
add
add
gs
into
insb
sahf
and
cltd
popa
and
int3
or
and
std
xor
cs
dec
loopne
insb
mov
out
mov
pop
outsl
pop
notl
movsl
push
jnp
pop
decb
dec
xor
rol
cmp
jo
js
mov
ds
adc
lds
adc
mov
int
leave
push
shr
inc
popf
lahf
xor
mov
sbb
icebp
pop
inc
mov
xor
pop
ret
loope
cli
lret
inc
jl
out
leave
jp
ss
cli
pushf
inc
xchg
sti
out
pop
cld
pop
mov
xchg
sub
lret
xchg
adc
icebp
mov
call
mov
xchg
and
adc
dec
and
xchg
out
lods
inc
in
push
dec
stc
hlt
pusha
fistpl
aam
inc
clc
mov
inc
ds
int
cmp
cmc
inc
sub
cmc
cmp
jno
insb
testb
or
fcoml
or
mov
pushf
mov
fcmovnbe
insl
leave
pop
add
xor
cli
in
or
setg
scas
iret
xor
pop
mov
and
into
sbb
pop
cmp
mov
push
dec
inc
mov
mov
mov
shrl
and
test
sub
pop
push
mov
add
push
mov
dec
js
cmp
fst
das
aas
xchg
pop
pop
inc
mov
push
dec
shll
test
pop
lods
sub
out
lcall
pop
dec
shl
mov
or
roll
std
sbb
or
inc
mov
mov
ja
sbb
inc
aam
js
jo
mov
xor
or
xlat
cmc
ljmp
inc
push
jmp
sar
xor
popa
arpl
cli
sbb
jno
mov
test
xchg
jp
pop
aas
mov
jle
leave
sub
sbb
int
cmp
outsb
in
cltd
sbb
ret
mov
push
bound
lock
leave
ret
jmp
outsb
std
push
push
jp
xchg
cmpsl
dec
sbb
dec
xlat
xlat
pop
in
mov
cli
add
sti
sar
das
jecxz
and
and
sub
daa
out
mov
rcll
xor
jecxz
out
sub
and
pusha
sub
std
out
xchg
lahf
pop
stc
add
add
jnp
mov
daa
loope
dec
add
lods
sub
lods
outsb
mov
xor
mov
push
push
or
mov
xor
rcr
push
test
loop
sub
mov
jge
push
stc
jmp
loope
es
fldt
pop
or
subl
pop
nop
repz
sub
mov
into
cs
adc
sbb
sub
pop
rorl
adc
and
jg
flds
aam
nop
push
add
and
lret
pushf
mov
ffreep
xor
pop
cmp
jnp
aad
sbb
mov
out
pop
add
lds
pop
call
loope
insb
loop
stos
popf
jae
mov
jp
xlat
sub
ret
pop
xchg
icebp
mov
fnsave
jp
or
mov
lock
out
adc
in
mov
and
in
aas
push
mov
add
lahf
pop
fdivrl
jl
cwtl
shl
test
cs
xor
lock
cmc
dec
inc
cmp
outsb
adc
rcrl
jmp
xchg
push
adc
aas
arpl
sti
dec
fcmovnb
cld
xchg
insl
mov
dec
repz
loope
pop
mov
idivl
mov
gs
add
xchg
icebp
addr16
mov
push
and
dec
fdivrs
pop
cmpsl
out
adc
out
push
daa
rolb
popa
in
push
aas
fwait
pusha
sbb
dec
andb
out
out
or
inc
xchg
push
push
lret
test
jg
push
iret
ret
pop
cmp
insl
popa
shll
mov
inc
jae
adc
stos
jg
subl
add
mov
dec
pop
inc
loopne
jmp
adc
lahf
pop
call
aam
push
mov
mov
pop
mov
mov
push
pusha
jg
outsl
adc
mov
shl
xchg
fisubl
push
adc
test
push
enter
stc
pop
inc
pop
mov
mov
test
fisubs
fidivrl
adc
sub
adc
test
popf
gs
popf
push
dec
jge
fiaddl
in
cmp
filds
or
sub
in
mov
lret
push
mov
push
xchg
sub
xchg
and
icebp
xchg
sbb
push
inc
dec
pop
jnp
xlat
adc
mov
push
outsl
sbb
jl
nop
and
cmc
dec
dec
in
jns
sahf
cmpb
jmp
mov
jecxz
xor
xchg
loop
shrl
daa
xchg
push
push
cs
mov
gs
stc
push
lea
inc
mov
iret
push
mov
push
std
in
and
push
outsl
cltd
jge
mov
ja
fnclex
add
push
call
mov
fdiv
mov
sub
loopne
movl
mov
insl
mov
repz
aam
je
les
cmpsl
loop
int
dec
sbb
js
mov
push
xchg
mov
cwtl
fdivrs
jb
dec
xor
inc
lods
pop
out
inc
sub
inc
hlt
xchg
mov
inc
imul
lods
mov
and
jle
push
lds
sub
push
rclb
js
out
iret
push
loope
jg
mov
imul
push
and
scas
test
sbb
ss
gs
stos
jae
aam
mov
jmp
call
mov
into
ss
fisttpl
mov
stos
pop
mov
int3
leave
jl
push
mov
mov
dec
mov
mov
mov
mov
push
cmc
mov
push
jnp
jp
decb
cmp
push
pop
inc
js
faddl
push
or
inc
arpl
pop
rorb
pusha
sub
cmp
xchg
pop
dec
out
hlt
test
lds
adc
lods
mov
std
dec
scas
pop
es
jbe
in
inc
test
cmpsl
insb
jne
pop
xor
inc
sbb
test
or
pop
jb
cmpsl
into
sahf
xor
lods
and
or
jo
xor
add
dec
pop
push
adc
ss
and
cmp
push
xchg
scas
jns
aas
lods
lahf
aad
adc
das
adc
pop
sbb
jo
xchg
repnz
test
mov
push
push
jle
sub
pop
xchg
adc
push
fwait
mov
sbb
sbb
inc
dec
nop
xchg
dec
testl
addr16
or
or
ljmp
mov
mov
dec
fimuls
int
sub
sbb
into
mov
cltd
add
aaa
scas
xor
je
xor
dec
fisubl
or
or
test
mov
or
shll
pop
cmpsb
call
mov
dec
sub
cmp
js
mov
popa
dec
xor
dec
jbe
pop
cmp
ret
in
pop
xchg
sbb
enter
jge
mov
out
xor
lea
fsts
xchg
mov
pop
aad
std
jg
xchg
xor
mov
sub
loope
in
dec
pusha
stc
inc
xlat
dec
jnp
stos
mov
xor
pop
imul
add
mov
in
or
inc
notb
subb
xlat
sbb
sbb
shr
aad
ss
xor
push
pop
pop
sbb
cmp
or
outsl
sbb
xchg
sub
or
mov
divb
mov
mov
ljmp
push
mov
mov
repz
lock
rcrb
or
mull
mov
js
enter
scas
xchg
mov
into
clc
stos
pusha
mov
pop
pop
dec
pop
mov
pop
mov
cli
add
ret
test
jge
je
xor
hlt
test
ja
int
mov
imul
std
scas
dec
jp
aad
push
andl
add
add
insw
or
lcall
lds
and
stos
hlt
adc
popa
xor
jno
jl
mov
push
mov
or
and
add
add
call
in
scas
adc
mov
or
or
jle
inc
rol
xor
mov
pushf
sar
and
loop
iret
pushf
push
sar
imul
sti
into
pusha
nop
mov
lea
jg
imul
call
pop
adc
pushl
push
rcll
leave
adc
jg
push
pop
popa
shl
and
sahf
sahf
add
push
ret
aas
fmull
mov
in
aaa
cmp
or
rolb
decl
adc
add
cmc
shrb
pop
mov
add
or
fisubrl
dec
dec
sbb
loope
cmp
xor
add
sahf
shrl
inc
sbb
shlb
mov
dec
pop
xchg
jns
jmp
xchg
test
jb
mov
std
sub
sbb
loop
cwtl
mov
mov
movsl
sub
mov
dec
scas
pushf
test
fstl
stos
aam
sub
loop
mov
inc
pop
inc
mov
nop
push
jns
loope
dec
push
mov
in
jnp
mov
sbb
push
fstpl
and
loope
lcall
pusha
rcrb
imul
inc
pop
mov
ret
dec
ja
or
sub
jno
pop
sbb
adc
stos
gs
call
inc
or
lods
sbb
call
adc
int3
pop
out
jle
push
push
imul
in
pop
fstpt
sub
jge
xlat
mov
and
mov
sbb
fsubl
xlat
popa
movl
ret
xor
jge
into
add
pop
scas
push
insb
xchg
in
and
aaa
push
mov
and
shll
je
inc
inc
stos
mov
push
jmp
mov
push
iret
mov
gs
inc
rcr
xchg
lcall
rcl
jl
pop
pushf
loop
and
add
fiadds
sub
lods
ds
repnz
xchg
mov
scas
es
outsb
imul
dec
mov
nop
and
mov
xchg
loope
xor
fwait
data16
push
popf
adc
orl
imul
std
enter
fstps
push
or
ds
cs
aas
xchg
xchg
icebp
add
pop
mov
pop
xchg
jnp
js
adc
fbld
bound
or
loop
es
xor
mov
cmp
mov
cltd
push
adc
std
xchg
cmp
shll
or
test
xchg
pop
loope
fwait
scas
pop
ss
clc
jnp
xchg
xchg
xchg
jno
dec
into
insl
in
orl
repz
or
sarl
mov
repnz
loopne
xchg
mov
in
jnp
mov
inc
fistpll
stos
test
lea
add
sub
sbb
mov
sub
fidivrl
clc
sahf
loopne
fldt
xor
push
dec
lods
mov
cmpsl
push
push
out
or
mov
repz
stos
mov
xor
andl
sti
xor
adc
xchg
scas
test
lret
cmc
fwait
jne
jp
in
je
or
push
test
repz
sti
sbb
popa
icebp
mov
or
dec
xchg
loopne
lret
mov
or
iret
sbb
xchg
pop
or
icebp
push
fnstenv
sbb
lahf
sub
push
fiadds
adc
mov
ja
adc
fcoml
add
add
enter
cmpsl
lret
sti
loop
add
pop
cmpsb
das
or
xchg
les
out
test
stos
xor
stos
inc
pop
imul
imul
sub
shll
jg
mov
stos
enter
sub
in
ja
int
pop
mov
adc
jp
adc
outsb
notl
jbe
sbb
mov
pextrw
scas
xor
or
jbe
fistpll
inc
nop
pop
dec
cmpsl
lods
in
icebp
push
pop
or
xchg
or
lods
adc
ret
push
xlat
mov
mov
xlat
dec
pusha
adc
pop
or
mov
ret
push
inc
repnz
in
dec
jg
and
xor
pop
inc
push
out
scas
inc
incb
icebp
and
inc
jecxz
movsb
pop
popf
mov
in
jbe
xchg
mov
stos
repz
inc
cmp
mov
jbe
fsubl
mov
aad
or
mov
mov
and
xchg
loop
in
mov
mov
add
mov
mov
rcll
mov
push
cmp
lret
mov
jge
inc
xchg
test
mov
decb
js
or
mov
repz
sub
cmc
inc
sti
lods
cwtl
add
test
movsb
cmp
jno
mull
out
inc
rorb
lods
inc
or
test
pushf
inc
push
rorb
imul
leave
int
loope
sub
pop
out
inc
xor
mov
ja
enter
ds
fisttpll
leave
add
xchg
pop
mov
insb
imul
jl
test
test
movsb
out
call
je
xchg
dec
sbb
mov
dec
testb
xchg
into
push
std
pop
imul
test
repnz
imul
mov
movsl
hlt
xchg
arpl
inc
in
ljmp
fs
outsl
lcall
xchg
ret
xchg
lods
mov
xor
lret
mov
je
xchg
adc
call
or
mov
gs
loopne
mov
rclb
mov
mov
pop
add
aam
leave
jmp
push
ss
mov
aaa
lods
sbb
test
aam
lret
mov
out
jno
mov
push
jge
int3
div
nop
sarl
lret
sub
or
test
pop
push
ds
inc
nop
cmpxchg
jb
push
jb
mov
bound
and
push
ror
adc
pop
and
ja
test
ss
cli
lahf
xor
sbb
mov
mov
ss
jge
dec
enter
loopne
jns
mov
xor
dec
jbe
int
and
data16
mov
jmp
ds
lods
push
mov
jne
aam
adc
movsl
xchg
xor
xchg
rorb
stos
repz
add
cmpsb
dec
jo
cmp
lret
mov
mov
rclb
arpl
ja
fwait
xchg
lahf
push
mov
jmp
cld
inc
dec
ja
fcoms
pop
pop
inc
fnstenv
xor
fidivrs
lret
push
push
jns
test
fwait
jo
and
fwait
cmp
data16
mov
daa
jecxz
sub
xor
in
push
rclb
sub
data16
inc
pop
jmp
lcall
aad
out
fistpll
xor
pop
filds
movsb
loopne
icebp
mov
jno
push
xchg
pminub
pusha
jmp
or
sbb
push
sub
loope
jbe
inc
addr16
jne
and
out
popf
push
iret
scas
movsl
fwait
sub
sbb
inc
scas
movsl
sub
xor
jp
add
inc
jns
sahf
das
dec
cli
iret
xchg
pop
les
mov
sub
inc
ds
adc
jns
inc
mov
test
cltd
jae
and
data16
push
adc
loope
mov
iret
into
pop
lea
das
ja
ss
inc
push
adc
mov
xchg
xchg
mov
mov
xchg
pop
xor
xchg
pop
out
lods
jmp
jnp
xchg
or
mov
sbb
mov
dec
pushf
inc
lods
xchg
adc
add
mov
jbe
mov
xchg
daa
dec
xchg
push
shrb
mov
gs
mov
cmp
xchg
jno
jp
shll
jb
dec
adc
push
out
gs
sub
and
pop
iret
sub
ss
call
data16
fistl
test
mov
repz
and
movsb
stos
gs
mov
xchg
shll
push
mov
aaa
mov
lods
sahf
fnstsw
jo
inc
leave
push
inc
cmp
sub
inc
loope
ret
cli
mov
push
lret
sub
inc
ret
jl
mov
add
add
dec
imul
ret
sub
into
fisttpll
jns
loopne
lods
sub
in
popf
xchg
mov
mov
mov
fnstsw
hlt
mov
insl
push
push
sub
scas
mov
pushw
loop
and
ljmp
insb
aas
popa
std
rcr
push
or
scas
cmp
jb
or
sti
test
dec
nop
xchg
fisttpl
test
rclb
inc
sub
mov
push
into
leave
aaa
mov
sti
and
rcrb
and
sbb
test
lret
sub
loopnew
sbb
lahf
sarl
mov
pushf
shll
inc
add
sbb
jl
xchg
out
fwait
rcrl
add
jns
cwtl
out
mov
pop
mov
shl
call
iret
mov
aaa
rorb
jecxz
lret
shrl
mov
xor
test
jl
outsb
xor
mov
movsb
pop
addb
pop
mov
add
pop
add
movsl
pop
lcall
xor
mov
jae
daa
movl
jle
mov
mov
negl
rep
shl
sub
leave
xor
dec
sahf
loope
inc
in
lret
into
in
cld
addr16
cs
cwtl
outsb
pop
cli
mov
cs
cs
movsl
stc
ret
jg
test
ret
adc
adc
push
ffreep
xchg
clc
in
and
stc
or
fcomps
es
xchg
ret
rorl
pop
push
in
or
stos
pop
pop
out
in
sarl
xchg
and
shll
popf
cli
cmpsb
ja
add
xchg
push
mov
pop
mov
aaa
sbb
lret
lods
push
addr16
inc
and
sbb
pop
clc
call
pop
mov
pop
dec
jb
pop
adc
pop
fsubs
cli
lahf
jmp
inc
lods
icebp
stc
nop
pop
sbb
fildl
xchg
inc
dec
add
icebp
xchg
lcall
cmp
aas
lds
pop
xor
out
xor
ds
je
mov
or
fnsave
fwait
push
dec
cmc
nop
mov
pop
inc
adc
xchg
sbb
mov
mov
pusha
inc
xor
out
fnstenv
fcoms
lds
push
test
jns
adc
repz
sub
cs
fistps
push
lret
ret
push
test
repnz
jmp
out
lcall
into
fmul
sub
dec
mov
insl
pusha
mov
out
mov
rcrl
sub
mov
jbe
lods
fwait
and
xor
cmp
cmp
mov
repnz
and
das
cltd
sbb
mov
call
mov
sub
and
or
adc
cmp
cmp
adc
aas
mov
lods
jecxz
push
and
ret
or
iret
out
and
fildl
pop
mov
fs
inc
outsl
dec
in
aas
sub
jno
stos
sbb
push
jg
cmp
rcll
sbb
push
pop
repz
fwait
stos
aad
ret
push
addb
pop
test
cmp
jbe
fisubrl
ljmp
or
mov
ret
cmp
stc
js
imul
popa
and
or
in
sub
lret
pop
sahf
pop
xchg
dec
pop
dec
mov
and
sub
or
in
cmp
aad
inc
mov
xchg
repnz
cli
cs
scas
cmp
fucomi
push
jnp
cmpsl
dec
jnp
imul
lock
or
lret
or
sub
out
push
pop
inc
dec
lret
dec
add
bswap
hlt
in
jle
subb
adc
xlat
test
jecxz
repnz
pop
mov
imul
cmp
lods
sbb
or
pushf
scas
sbb
data16
fcomps
inc
outsb
int
pop
jne
sar
and
xor
jl
inc
pop
in
and
xlat
fmuls
mov
movsl
dec
das
sub
xchg
jmp
in
dec
pop
in
pop
movsb
testb
shl
dec
movsl
add
mull
orb
and
mov
into
lods
jge
and
mov
push
outsl
dec
fsts
jne
fisttpll
gs
adc
dec
in
rorb
pop
pusha
pop
lods
sti
dec
orb
xor
jnp
insb
and
cmp
jns
xchg
enter
loop
and
cli
lods
test
or
mov
int3
and
lods
add
cmp
lock
jmp
jle
jne
push
adc
aad
ljmp
pop
mov
popa
ja
imul
push
pop
push
push
loopne
dec
popl
mov
and
cmpsl
add
decl
cmp
inc
xchg
aad
pushf
fs
inc
pop
push
loopnew
pop
push
sarl
pop
into
sbb
test
and
test
sub
mov
in
imul
frstor
mov
iret
push
pop
jbe
sti
mov
mov
or
nop
lods
cmp
arpl
adc
loop
popf
fcoms
lcall
adc
and
mov
jne
cmc
jmp
lret
add
shlb
mov
imull
jne
cmovs
insb
push
pop
sbb
push
test
ret
cmpsb
inc
mov
lods
rorl
stos
call
cmp
push
aam
std
scas
dec
push
in
imul
stos
cmp
enter
or
out
pop
mov
int3
fsubrs
pop
sub
scas
jg
dec
dec
sub
out
data16
push
mov
repnz
xor
iret
hlt
jne
mov
out
test
clc
int
or
sub
push
cmc
pcmpeqw
push
movsb
xor
test
getsec
fs
xor
aaa
cmpsl
xor
arpl
inc
cmp
and
and
mov
adc
or
push
mov
lea
xor
out
not
sbbl
fcomps
jge
scas
add
xlat
fidivrl
or
adc
adc
xchg
pushf
sbb
dec
lahf
test
std
pop
add
mov
cwtl
xchg
imul
pop
pop
call
fsts
pop
rolb
mov
inc
mov
insl
lret
mov
mov
data16
shlb
aam
adc
mov
cmp
cmpb
cli
js
loope
mov
pop
sbb
shlb
cmovbe
gs
and
std
cmp
mov
test
dec
je
iret
pusha
ficoms
inc
lds
out
cmp
add
scas
nop
mov
shlb
add
push
les
sub
cmpsb
repnz
pop
or
insl
pop
jbe
ss
roll
fsubp
sub
das
icebp
mov
add
notb
or
mov
arpl
sub
ja
es
dec
mov
or
add
ds
call
xchg
loope
pop
enter
out
jae
sbbl
jmp
loop
aam
dec
cmpsl
mov
pop
loopne
pop
add
cmp
xchg
ds
arpl
pop
pop
not
subb
fisubs
cwtl
sub
shr
in
test
lret
sbb
mov
test
out
mov
jb
adc
ret
xchg
jne
xchg
arpl
test
lcall
nop
decl
adc
jl
pusha
sub
sbb
cltd
jg
test
jl
cmc
or
mov
mov
dec
mov
nop
ret
in
mov
and
mov
adcb
xchg
pop
xchg
push
add
mov
stc
xor
cld
stc
add
ja
add
mov
addb
fcoml
pop
mov
aas
lret
loope
xorl
rol
cwtl
cmpsl
daa
dec
movsl
mulb
xchg
xor
sub
adc
xor
clc
and
pop
sub
xchg
es
adc
loope
popf
aas
jnp
jge
cld
push
fidivrs
mov
cli
fnsave
sahf
ret
leave
insb
lods
out
or
les
out
dec
popa
push
test
lahf
xchg
xor
push
adc
out
xor
aad
push
and
icebp
test
inc
add
xchg
mov
aad
xor
sub
inc
jle
fscale
mov
xchg
xchg
mov
adc
lods
push
sahf
cwtl
push
std
pop
hlt
lock
inc
je
push
pop
insl
cwtl
push
or
jbe
aam
mov
cmp
and
mov
ds
out
stos
loope
mov
nop
mov
dec
add
ret
scas
or
and
jp
stos
insb
cltd
movsl
test
ret
jecxz
mov
mov
test
mov
fldenv
jae
cmp
sbb
gs
mov
int3
pushf
fldcw
rolb
xchg
cmp
cli
dec
leave
push
loope
fcompl
push
pop
adc
ret
je
dec
push
ljmp
lods
xor
insl
jl
ret
and
lcall
test
xchg
roll
pop
sbb
mov
mov
sbb
cmp
lods
jb
mov
push
jnp
or
scas
inc
dec
xchg
add
mov
orl
lret
pop
and
mov
adc
lods
push
sub
xor
test
mov
mov
std
insl
lret
pop
test
xchg
call
icebp
std
sbb
cmpsl
enter
jge
sub
mov
or
adc
mov
jle
cmp
fmull
sbb
and
call
loop
imul
scas
test
add
cmc
push
and
or
dec
jne
pop
jl
data16
adc
leave
dec
and
je
pusha
test
out
add
pop
jb
jge
pop
dec
stc
loopne
in
movsb
das
add
sbb
mov
ljmp
in
enter
sti
cmp
sarb
xlat
clc
or
push
cmpl
push
in
inc
sub
jo
pop
pop
into
cmpsl
in
in
xchg
and
inc
loope
mov
xchg
push
sbb
and
sbb
add
jne
add
lahf
hlt
sbb
add
jbe
out
les
add
or
xchg
or
sub
or
cmc
inc
imul
lahf
fcomps
mov
adc
or
fidivs
mov
push
mov
jge
sbb
xor
fcmovnu
cli
dec
inc
jns
andl
mov
push
mov
shr
mov
pop
scas
dec
sarl
push
jno
test
mov
aas
cmp
arpl
mov
sarb
aam
xor
mov
or
pop
cld
push
pop
pop
add
sub
int3
sub
sub
push
adc
int3
add
sub
xchg
mov
cmp
jp
push
setns
push
mov
or
fdivrs
jecxz
subb
mov
mov
sbb
ss
leave
pop
jle
test
dec
mov
push
adc
and
and
cmp
mov
jb
gs
dec
dec
lock
mov
dec
out
subl
dec
sbb
out
scas
mov
mov
xor
clc
imul
sbb
ds
loop
dec
daa
outsb
inc
xchg
cmp
mov
adc
int
imul
ss
in
push
aad
out
es
lods
cmc
mov
icebp
inc
out
not
sub
std
pop
idivl
mov
sub
push
in
mov
push
dec
shlb
sub
mov
pop
add
add
mov
ret
mov
push
shrb
fs
sbb
shrb
dec
pop
test
mov
inc
inc
adcb
push
or
xor
push
pop
mov
xor
out
movsl
cltd
into
mov
xor
xchg
jo
jecxz
xchg
movsb
scas
sub
stos
insl
add
cmp
fsts
pop
mov
idivl
aaa
push
jnp
xchg
mov
stos
sub
shr
and
movsl
in
insb
decb
cli
mov
pop
hlt
jne
sbb
mov
insb
ss
out
jmp
aaa
add
stos
sbb
fdivs
dec
xchg
gs
pop
or
scas
clc
aad
scas
lods
push
aas
dec
push
arpl
pop
sbb
xchg
je
or
test
mov
int3
scas
jne
faddl
push
jo
out
stc
int
jg
sbb
push
imul
mov
les
mov
lods
lret
adc
xchg
cli
not
shl
out
push
sub
movb
push
or
sub
and
and
push
sbb
xor
mov
mov
repz
mov
xor
sbb
leave
call
mov
into
cmp
out
and
popf
inc
dec
test
daa
sub
iret
jo
push
lcall
pop
mov
iret
insl
or
add
mov
bound
push
movsb
add
mov
inc
add
dec
ret
fldl
xor
sbb
mov
push
pusha
dec
fisttps
push
in
mov
xchg
mov
pop
in
add
push
ss
popf
cld
nop
inc
push
cli
push
xchg
out
or
gs
jne
ja
or
adc
sbb
lea
adc
cs
mov
into
or
in
cmp
mov
sti
mov
xor
rclb
add
inc
jno
add
mov
cmp
push
sbb
jl
sub
xchg
ja
sahf
and
nop
mov
mov
push
stc
xchg
repz
popl
mov
adc
lds
lods
aam
rcr
jecxz
push
dec
push
call
ja
mov
mov
scas
leave
sahf
rorl
add
inc
fwait
xor
fsubs
fbld
sub
test
sarl
xor
push
mov
ljmp
ficoml
pop
push
rorl
neg
outsb
mov
pop
je
and
cmpsb
dec
out
lods
and
scas
orb
loope
daa
popf
add
sbb
mov
push
fcmovnbe
and
cli
cli
pop
mov
dec
xor
cmp
and
rolb
insl
add
push
push
mov
or
aam
pop
gs
rcrb
and
xor
pop
imul
adc
push
or
xor
test
pushl
xchg
mov
cld
or
test
call
jge
outsb
out
call
jl
cmpl
jl
sub
adc
mov
dec
loop
fdivl
lock
mov
loopne
cmpsl
enter
out
or
dec
sbb
xchg
cmp
js
pop
iret
dec
mov
daa
jb
pop
aam
jecxz
aaa
xor
fistpll
push
in
pop
push
xchg
cmp
aas
pop
fcmove
mov
adc
push
outsl
jbe
cld
dec
mov
jge
movsb
sahf
adc
insl
inc
fwait
mov
outsl
dec
leave
push
arpl
adc
mov
stc
push
out
in
jns
or
enter
push
pop
lcall
cs
test
xor
xchg
pop
daa
nop
mov
inc
rcrl
cltd
dec
setl
pop
les
pop
jbe
stos
mov
shrb
mov
rorb
sahf
sti
and
ss
pop
pop
js
jle
sbb
out
push
adc
push
test
pop
mov
stc
and
xchg
lret
mov
hlt
inc
xchg
dec
fstpt
add
ja
push
mov
adc
push
iret
js
std
jae
lea
pop
adcl
jne
mov
imul
inc
mov
inc
shrl
mov
test
in
bnd
sti
push
xchg
sbbl
into
cmpsb
rorb
addr16
dec
es
jnp
dec
mov
or
or
emms
jmp
repz
fisubrl
lods
arpl
pop
pop
cli
dec
in
dec
jl
iret
lock
mov
xchg
sarl
neg
sahf
cmp
loopne
adc
lock
imul
stos
xchg
ror
addb
inc
jne
jle
mov
test
repz
movl
sbb
stos
std
lahf
inc
xchg
push
push
dec
popf
jle
cmp
lret
xor
xor
inc
pop
stos
adc
jae
loopne
shl
sahf
fisttps
fwait
mov
shrb
loope
add
xchg
in
in
or
aas
mov
andb
lcall
pop
test
imul
dec
pop
stos
sub
filds
test
xchg
push
mov
dec
inc
sbb
mov
lods
mov
daa
sbb
jg
out
pusha
jecxz
xlat
iret
add
test
and
ljmp
jbe
ret
mov
ds
hlt
mov
and
das
xor
inc
xchg
iret
inc
fisubrs
sbb
shlb
mov
test
xchg
jle
adc
mov
xor
xchg
mov
mov
cmp
scas
jno
fdivl
dec
or
cmc
pop
inc
pop
aas
jl
mov
fmuls
dec
lods
add
pusha
fdivrl
dec
jae
out
lret
out
rcrl
std
fisubrl
notl
les
xchg
dec
lods
dec
dec
adc
fnsave
pop
xor
lock
mov
xor
loop
mov
stos
lcall
inc
outsl
mov
mov
arpl
mov
sbb
les
inc
mov
mov
mov
sbb
fistpl
outsl
sub
adc
mov
lds
mov
mov
imul
pop
jecxz
fcomip
fs
jl
sub
mov
subb
push
shlb
inc
decl
xchg
push
cmp
pop
mov
push
push
cmp
jo
int
stc
jb
scas
mov
sbb
ja
push
clc
inc
xchg
inc
mov
jno
sub
pop
jae
pop
pusha
imul
or
stos
ret
jmp
or
mov
roll
sbb
jge
xchg
cmp
cli
jbe
iret
mov
push
xchg
push
pushf
test
inc
lock
call
and
nop
cmp
and
or
movsl
mov
aas
cli
jg
mov
int3
fdivrl
mov
loop
sahf
aad
add
sbb
cmp
add
mov
jmp
out
fisttpl
cmpl
inc
pop
push
dec
sbb
outsl
out
or
jl
into
flds
lret
cs
xor
inc
les
jae
sub
rclb
mov
sarb
xchg
rcrb
gs
and
pop
rol
aas
jecxz
mov
lret
movsb
dec
xchg
and
lods
mov
mov
xchg
pop
aad
stos
inc
push
data16
push
jbe
push
inc
call
cmp
xchg
cli
adc
push
jns
rorl
cmpsl
jecxz
lods
mov
lds
inc
mov
rcll
push
es
icebp
int3
push
jnp
mov
outsl
pop
adc
ja
out
jae
dec
mov
arpl
gs
jno
aas
cli
mov
aas
sbb
std
loopne
cmp
mov
jae
fldl
add
jg
xor
mov
loop
and
dec
cmp
imul
lods
fistpl
out
push
jg
mov
and
xchg
movsb
repz
faddl
popa
fldenv
jle
out
jg
mov
inc
or
dec
adc
mov
xor
sub
cmpsl
mov
fiaddl
enter
clc
dec
mov
into
daa
sub
ss
pop
add
leave
ret
add
push
cmpsb
xchg
mov
add
aaa
insb
mov
fs
popf
mov
push
popa
insb
inc
push
push
jge
cli
xlat
push
or
dec
add
inc
inc
jbe
mov
xchg
adc
pop
adc
mov
cmp
out
cltd
pop
or
jecxz
jmp
push
dec
pop
xchg
mov
int
and
jecxz
pop
mov
dec
jmp
jbe
jo
fistpl
scas
je
in
in
mov
jp
cs
rcll
xor
das
cmp
sub
fmull
cltd
ret
mov
je
adcb
inc
xchg
sub
xchg
ucomiss
dec
or
add
fucomip
ja
inc
into
fcmovnu
les
jnp
xchg
mov
jge
cmp
sbb
sti
lea
call
mov
insb
mov
pop
mov
cltd
repnz
dec
enter
cmp
imul
and
xlat
xor
and
mov
std
les
stos
fisubrs
into
aaa
pop
push
cltd
dec
jmp
mov
pop
jecxz
jno
jo
lock
call
xor
int
icebp
push
sbb
pop
pop
push
sahf
testb
aam
movsl
or
add
mov
mov
or
gs
inc
pop
mov
xchg
das
hlt
push
pcmpeqb
mov
pop
inc
mov
das
in
and
lods
sbb
repnz
jb
sbb
test
cmp
or
dec
flds
nop
sahf
mov
test
mov
shlb
rorl
push
push
xor
sbb
adc
sbb
cmp
sub
stc
shlb
mov
arpl
hlt
adcb
sti
inc
aad
push
xor
arpl
insl
cmp
outsl
dec
lea
imul
adc
lcall
adc
mov
push
sub
xchg
xchg
mov
adc
jg
popa
scas
jo
cmp
cmpsb
mov
or
jns
arpl
dec
repnz
popf
and
mov
pop
scas
std
js
fidivl
add
and
push
cmp
lret
cmc
hlt
and
movsb
sarb
mov
in
xor
jg
std
fsubs
notb
mov
push
rcrb
push
push
pop
leave
insb
out
in
dec
push
mov
xlat
push
cmp
imul
scas
lahf
push
or
dec
inc
jmp
in
js
loop
inc
shrl
scas
mov
popf
lahf
iret
sar
cmp
pushf
mov
ja
inc
pop
fwait
pushf
lret
ja
sub
dec
and
pop
insl
push
xchg
push
or
scas
cmp
icebp
in
and
sub
std
dec
out
add
sbb
lods
lahf
push
fisttpl
sub
xchg
jl
js
jmp
xor
in
add
sub
cmpsb
pop
add
adc
mov
dec
std
aas
pop
call
lods
iret
sub
jne
fbstp
xchg
into
cmp
not
test
push
add
or
adc
repz
xchg
lcall
mov
pop
jo
mov
and
dec
lods
push
jecxz
add
adc
sub
rcrw
aaa
imul
je
mov
pusha
adc
fstps
stc
mov
lock
imul
xchg
or
cwtl
mov
jno
shlb
das
imul
aam
arpl
pop
cltd
dec
mov
xor
inc
xchg
jns
pop
loopne
das
movsl
jns
sub
scas
push
std
push
jne
fwait
lods
outsl
xor
sbb
call
jns
xor
mov
mov
int3
mov
inc
and
xchg
call
lock
out
mov
inc
sub
add
lds
push
jae
mov
mov
and
lods
add
mov
xor
xchg
and
inc
dec
mov
sbb
cld
ss
fs
shll
cs
dec
in
mov
andl
dec
ret
sbb
push
fistl
mov
pop
adc
je
cmp
sbb
mov
pop
pop
push
push
cmp
xor
add
cmp
push
xchg
jno
push
int
adc
sahf
push
jno
add
psubsw
and
int3
jne
test
mov
loope
ss
test
sbb
dec
dec
fisubs
and
lods
sbb
adc
iret
pop
push
push
xor
fmul
pop
loopne
pop
leave
rcrl
or
cmpsl
bound
lea
lcall
je
pop
popa
mov
mov
adc
jb
mov
mov
push
hlt
int
cmc
mov
pop
xchg
jge
or
mov
aad
data16
add
cld
sub
inc
push
and
js
push
imul
dec
mov
cmp
jne
jbe
mov
outsl
xor
pop
shlb
ret
mov
adc
cmc
pop
loop
mov
data16
lods
aam
daa
es
pop
sub
ror
psubb
pop
ret
sub
sub
jne
cs
imul
popf
aas
xor
in
xchg
inc
push
andb
fwait
xor
inc
and
lock
test
pop
dec
shrl
lret
add
fwait
mov
inc
dec
in
sub
add
mov
arpl
push
push
mov
jns
aad
mov
jle
ss
jae
inc
inc
jns
add
ds
push
xchg
jne
cmp
test
adc
mov
fstps
icebp
mov
adc
xor
mov
and
cmp
and
push
mov
pop
pop
dec
dec
or
sub
cmp
cmp
add
int
dec
pop
push
or
mov
jecxz
call
mov
inc
jmp
xor
addl
lock
and
adc
lock
jno
hlt
pop
testl
fwait
push
or
fcmovbe
pop
inc
jp
mov
movsb
gs
sbbl
jmp
leave
pop
rcrl
ljmp
pop
loop
loop
fcmovnb
push
insl
adc
cmp
fwait
push
out
jge
pop
inc
mov
push
test
shl
test
icebp
mov
stos
mov
jle
fadds
sbb
xchg
movsb
pop
lods
lds
jnp
aam
pop
int
mov
and
push
mov
jle
push
pop
mov
repnz
mov
xchg
lret
cmp
push
cwtl
push
rol
push
mov
mov
xchg
lea
enter
js
ret
js
push
pop
push
jge
cmc
gs
dec
stos
mov
jl
jne
xor
xchg
aad
stos
inc
push
inc
or
or
orl
cmp
push
js
and
add
std
dec
cmp
movsb
scas
jle
movsl
data16
xchg
cmpsl
lock
sahf
lahf
dec
mov
sbb
sub
test
xchg
cmp
enter
cmp
xor
hlt
mov
adc
pop
mov
adc
fmuls
cmc
or
sti
out
rclb
mov
int3
sahf
test
and
repz
in
aas
fadds
rolb
mov
out
sub
jb
push
loopne
scas
sahf
fnstenv
jle
fldt
notl
xchg
push
outsl
iret
dec
das
inc
cmp
in
inc
inc
out
sbbb
repnz
rcll
in
loopne
dec
ljmp
jo
cli
test
or
mov
mov
or
mov
inc
mov
jo
sbbb
sahf
aas
je
stos
repnz
or
jmp
je
test
or
test
mov
jmp
dec
push
cmp
mov
or
pop
or
lds
jne
jae
xlat
mulb
rcl
fcompl
adc
push
inc
add
ds
insb
mov
pop
dec
or
test
imul
bound
in
sbb
push
add
scas
jne
mov
imul
in
sbb
fs
xor
inc
add
xchg
sub
shrb
sub
mov
pushf
xchg
jb
xlat
std
dec
lret
inc
sbb
pop
xorb
or
mov
xor
ficoms
out
addb
pop
cmp
movsl
add
sbb
mov
adc
das
es
push
shr
nop
adc
mov
cs
add
js
js
sub
cmp
cmp
jb
sbb
jo
cwtl
cwtl
aas
rcr
ss
into
jmp
mov
enter
insb
pop
out
lahf
popf
adc
cmp
gs
add
adc
push
jecxz
add
xchg
test
lods
push
cmp
scas
xor
jecxz
mov
pop
cmp
lahf
popf
scas
or
insl
test
ljmp
cmp
xchg
insl
inc
or
fxam
fdivrp
and
pushf
sub
dec
fadd
pop
pusha
inc
mov
popa
sub
jecxz
pop
out
mov
or
jb
ret
cld
stc
sahf
mov
push
inc
repz
push
mov
loop
lahf
cld
pop
jbe
hlt
jmp
add
push
lock
lret
lock
add
scas
lcall
push
insb
insb
lcall
mov
imul
mov
lods
dec
cmc
cltd
mov
stos
lret
sbb
add
mov
out
mov
fistpll
add
sbb
ret
push
dec
xchg
and
ljmp
mov
sub
pop
jo
outsl
cmp
movsb
sub
nop
lods
test
mov
push
sahf
outsb
jmp
mov
push
sbb
push
popf
sbb
les
ror
insl
fcmovb
adc
push
iret
mov
cmc
push
clc
add
or
adc
sub
jne
pushf
mov
mov
sarb
mov
or
dec
xor
xor
lahf
rol
cmpl
sbb
mov
xor
pop
sub
movsl
sub
out
filds
dec
push
or
add
cmp
rcrl
test
sbb
fisttpl
aad
bound
and
cmp
mov
nop
repnz
mov
adc
or
xor
jns
lret
ret
ljmp
xor
sar
test
or
daa
xchg
push
cmp
adc
inc
stos
dec
and
cs
shrb
jne
xor
icebp
and
test
or
pop
lret
sub
leave
or
xchg
out
call
lds
stos
xchg
imul
les
sarb
out
inc
int
in
sahf
cmc
fld
or
nop
mov
sub
xor
pop
call
loope
sbb
in
pop
mov
rcl
adc
ja
lock
jge
pop
insl
pop
sub
pop
mov
adc
movb
lahf
shlb
aam
dec
leave
cltd
call
cmp
popf
popf
mov
and
std
push
icebp
lret
cmp
mov
loop
outsb
mov
add
hlt
ljmp
cmc
test
xor
mov
int3
jno
cmp
fwait
adc
push
mov
insb
test
loopne
lret
inc
inc
or
ret
fdivs
cmpsl
xor
pop
ss
insl
mov
flds
mov
daa
insl
jnp
addr16
push
inc
pushf
push
cltd
and
mov
sbb
andb
xlat
nop
repz
cmpsl
jge
push
jmp
adc
sbb
pop
or
movsl
mov
push
cld
jp
mov
mov
adc
jb,pn
lcall
mov
andl
test
push
inc
adc
dec
mov
in
adc
mov
test
es
fistl
mov
pop
sub
hlt
lods
mov
jne
xor
push
insl
mov
mov
loope
mov
daa
dec
ljmp
sbb
mov
adc
int
pop
mov
sub
lahf
pusha
sub
lods
out
femms
aaa
shlb
addl
xor
jp
fidivl
jle
cmpsb
pop
sbb
pop
jge
xchg
push
xor
push
sub
insl
call
jbe
scas
mov
lods
mov
mulb
and
aaa
dec
popf
and
mov
popa
cmp
inc
mov
add
ljmp
cmp
adc
popf
stos
das
fdivs
push
push
mov
push
lahf
cs
aaa
xchg
jae
dec
insl
arpl
or
hlt
jle
dec
dec
roll
int3
inc
imul
adc
lahf
xchg
jge
or
adc
enter
pop
cld
cld
xor
jnp
decb
sbb
imul
jmp
dec
outsl
xchg
dec
fstl
loop
fildl
ret
and
lret
xor
stc
stos
xchg
xchg
icebp
or
sarb
seto
mov
and
setnp
and
inc
stc
js
cwtl
inc
push
pop
dec
adc
sti
stos
mov
ds
aaa
ret
xchg
pop
jp
mov
cmp
cld
cmp
mov
inc
mov
mov
movb
jle
pop
mov
push
repnz
inc
sbb
mov
or
stos
sbb
push
sbb
pop
or
pop
xchg
dec
fistps
stos
adc
inc
xor
mov
xor
add
call
fsubrl
mov
popa
lods
rcrl
xor
cld
or
jb
jle
cwtl
ljmp
ret
movl
push
sub
pushf
cmp
add
je
pop
pop
into
push
pmaxsw
adc
jmp
cmp
push
sahf
movl
mov
test
push
inc
pop
clc
mov
negl
or
or
sbb
sbb
ja
sub
insl
in
loop
in
movsl
or
aaa
mov
inc
xlat
pop
test
iret
mov
or
mov
xchg
stos
nop
fsubrs
mov
iret
dec
sub
imul
pop
push
mov
cmp
xor
inc
jns
push
sbb
ds
aam
test
xor
fstl
cmp
xor
adc
into
xchg
lods
push
xchg
leave
clc
mov
jne
xor
pop
fsubl
rorb
pop
or
push
and
clc
xlat
frstor
mov
lahf
jb
outsl
xchg
in
push
lahf
sbb
fcmovne
out
pop
dec
out
xchg
sub
xchg
ja
repz
call
sub
or
jecxz
decb
jno
cld
lret
in
xor
pop
sar
mov
mov
out
cmp
push
test
scas
ljmp
insb
adc
pop
cmp
fnstsw
popa
fucomip
stos
push
incb
icebp
loop
pushf
int
cmp
rcrb
arpl
les
pusha
pusha
lcall
out
sbb
xlat
jle
sti
lret
xor
lock
jo
push
ljmp
jnp
and
fwait
inc
stc
push
lcall
std
sahf
int3
push
push
xor
sub
int3
add
pop
imul
lea
cmp
push
je
dec
sbbb
adc
jp
repz
and
bound
and
mov
sahf
ret
and
cmp
xchg
stos
push
icebp
or
sub
ret
mov
ss
and
int3
daa
dec
xor
xchg
movsb
out
stc
into
faddl
xchg
mov
cld
mov
hlt
daa
pop
mov
fisubrs
push
mov
sub
int
mov
clc
sub
jo
gs
push
xor
cmp
xchg
fs
mov
jnp
bound
xchg
aam
loopne
mov
or
sbb
fadd
mov
mov
insb
mov
sub
repnz
rorl
sub
ja
scas
xchg
cmp
int3
mov
add
lcall
stc
fidivl
in
jp
mov
mov
imul
cwtl
call
or
push
or
in
stos
cmc
ds
outsl
dec
clc
mov
es
shrl
lods
xchg
xchg
imul
cld
nop
push
and
js
ja
shrl
fwait
add
ja
mov
lods
out
stos
push
xchg
stc
xchg
jmp
fsts
adc
add
xlat
divb
push
push
fisttpl
adc
scas
pushf
ret
jae
ficomps
pop
mov
jbe
or
push
std
pop
leave
mov
mov
or
enter
fwait
xor
or
push
test
jg
cli
sbb
clc
push
xor
mov
jecxz
ret
rclb
mov
mov
push
inc
sbb
out
addb
push
fsub
sub
jb
cmp
mov
lock
dec
sti
jg
push
hlt
icebp
jbe
jnp
daa
xor
inc
sti
cmp
xor
dec
inc
clc
enter
popf
test
xchg
imull
cmp
bound
repz
lret
mov
mov
inc
gs
jle,pn
test
add
mulb
cmpsl
loope
decb
jb
data16
or
add
or
ja
adc
or
mov
lds
xchg
mov
sub
jp
je
scas
jp
jno
adc
jl
ret
rcll
sub
pop
mov
jmp
dec
mov
sarl
adc
adc
dec
sub
mov
testb
and
jns
ds
out
push
push
xchg
popf
adc
add
sub
aam
pop
dec
pop
mov
dec
mov
mov
into
ja
jge
cmpsl
movsl
mov
lods
jmp
xchg
xchg
or
sub
out
std
and
test
movsb
lret
ds
jmp
xchg
mov
in
xlat
scas
in
fildl
push
daa
daa
fmuls
dec
outsb
mov
or
pslld
lds
dec
pop
rdtsc
xor
hlt
mov
repz
add
scas
insb
loop
insb
insl
push
negb
sub
data16
cmp
jmp
push
cld
mov
cwtl
in
cwtl
imul
mov
negb
mov
cmpsl
push
cmc
dec
mov
ds
jl
daa
push
lea
dec
pop
int
cmp
add
sbb
rcl
addl
lds
aas
scas
rclb
cmpsb
push
shlb
aam
cmp
mov
inc
test
movsl
mov
sarb
or
das
add
insb
fs
push
cmp
adc
xchg
push
out
push
jl
jmp
popa
test
ljmp
ljmp
cmp
idivb
cmp
outsl
cmp
cmp
jae
jge
pop
push
push
stos
pop
insl
pop
stos
imul
test
jbe
movsl
inc
cli
mov
call
push
std
sub
ljmp
in
addl
pop
stc
xor
out
fldt
sbbl
sub
pop
in
adc
fwait
mov
jl
mov
xchg
aas
outsl
repnz
imul
add
iret
xor
mov
ds
mov
sahf
cmc
push
roll
push
xchg
lcall
xchg
push
sub
xor
push
addl
in
lods
test
adc
ss
stos
out
jb
int3
jl
sbb
mov
mov
xor
stc
and
or
or
jae
pushf
mov
cmpsl
mov
sbb
cmp
mov
xor
dec
adc
push
mov
dec
lcall
fnstcw
cld
cwtl
cld
icebp
mov
bound
dec
push
imul
cltd
dec
sub
std
hlt
mov
xor
add
sub
movsl
andb
outsl
or
adc
out
xor
push
in
inc
sub
cmpb
test
add
adc
sbb
mov
xor
pop
sub
ja
xor
cld
cmp
push
and
inc
xchg
insb
or
push
or
scas
sbb
mov
xlat
xlat
push
loope
push
scas
sbb
push
jle
dec
push
addb
xor
loope
jne
idivb
xchg
jg
jle
pop
pop
push
loop
testb
inc
mov
jmp
test
loopne
nop
cmc
lahf
dec
sub
xor
rcr
rcrl
xchg
pushf
cltd
les
mov
addr16
sub
mov
aam
mov
scas
mov
stos
mov
test
fdivrl
jp
aaa
mov
es
sarl
cmp
jns
fdivs
dec
andb
cmpsb
jge
fisttpll
dec
testb
and
mov
pop
mov
leave
inc
fldl
add
js
imul
icebp
xor
popf
mov
inc
jmp
incl
lcall
jecxz
and
jecxz
pop
add
jmp
jg
xchg
in
outsl
mov
repz
fisttps
xlat
jmp
push
imul
in
lret
cs
sub
mov
adc
pop
xchg
fsubs
fidivs
or
roll
push
lea
jg
mov
arpl
or
xor
mov
adc
cmp
sub
jp
adc
mov
jae
repnz
addb
ret
mov
and
xor
push
test
addb
aad
mov
sahf
daa
test
arpl
jmp
lock
sub
or
pop
and
cmc
into
cld
enter
fldt
fnsave
mov
xchg
push
or
mov
loopne
sub
xchg
insl
js
sbb
pop
and
jge
shrb
mull
sahf
dec
mov
cmpsb
bound
inc
or
in
mov
push
xor
std
push
movl
jmp
addl
sbb
xchg
mov
popl
mov
aam
inc
push
jnp
cmpl
push
enter
mov
js
adc
lret
adc
xor
xchg
stos
gs
jecxz
hlt
mov
andl
xchg
add
adc
mov
ret
mov
lcall
mov
stos
scas
mov
imull
int
popf
inc
js
pop
sbb
rol
add
jmp
mov
pop
nop
mov
cwtl
lea
jp
cs
test
and
pop
in
xor
imul
repnz
cmpsb
push
cvttps2pi
sbb
or
iret
out
xor
cmp
pop
and
mov
lret
mov
mov
in
cmp
mov
sbb
loopne
mov
push
test
push
daa
cmp
clc
pop
sbb
mov
or
sbb
or
test
ss
out
and
xchg
ficompl
in
out
mov
fdivs
mov
daa
cmp
sti
mov
dec
in
decb
xchg
add
adc
je
cwtl
cli
ret
push
adc
shr
mov
and
sub
mov
xchg
jle
arpl
or
shll
sbb
outsl
out
inc
leave
dec
pop
cli
ljmp
inc
lods
mov
scas
jne
pop
mov
shll
dec
xchg
dec
mov
mov
popf
lods
ljmp
pop
xchg
jp
push
and
pop
mov
sbb
or
dec
push
push
pop
jnp
mov
push
imul
out
mov
push
pop
jb
test
mov
cwtl
stos
jmp
mov
loopne
mov
xor
xchg
dec
inc
bnd
xchg
das
shl
addl
mov
xchg
daa
xchg
notl
int3
lods
sbb
pop
sbb
jecxz
jecxz
fildl
xlat
aas
or
and
sub
cli
call
adc
xchg
jmp
leave
sub
and
fmull
sti
mov
mov
leave
sti
dec
hlt
sbb
mov
sbb
and
cmpsl
mov
out
fldt
adc
or
lret
fsubrs
iret
arpl
sub
lds
inc
sub
enter
sub
xchg
mov
xor
repnz
mov
pushf
inc
mov
mov
insb
mov
adc
imul
or
gs
dec
pop
stc
idivb
mov
shlb
stc
nop
cmp
aam
rorl
cmpl
test
int3
imul
xlat
lcall
push
inc
shrb
int3
push
cmp
aam
mov
lret
sub
add
xchg
and
cmp
mov
stos
mov
mov
arpl
jg,pn
pop
sti
loopne
nop
sub
xor
xchg
xchg
xchg
mov
rclb
jp
inc
mov
int3
mov
dec
sbb
push
and
les
das
mov
add
scas
hlt
sti
mov
popf
push
push
das
or
cmc
clc
movsl
mov
push
and
rcrb
mov
movsl
stos
mov
icebp
fcom
lcall
aam
cli
aaa
pop
in
jl
mov
cvtdq2ps
inc
pop
jg
rorb
and
pushf
add
das
testl
cld
ret
out
scas
push
test
clc
adc
lret
sbb
sarl
push
fisubrs
les
push
cmpsl
mov
sub
in
and
or
ljmp
scas
mov
icebp
sbb
pop
movsl
lret
dec
sahf
sub
add
mov
lret
shr
dec
pop
mull
fs
inc
imull
dec
or
xchg
pop
gs
xchg
in
lret
test
aam
jbe
add
ds
pop
cld
lods
jne
das
cmpsl
ret
push
hlt
xchg
hlt
imul
sahf
jno
roll
sbb
lods
fdivp
iret
or
cmp
repnz
and
in
push
std
sahf
out
aaa
dec
add
dec
icebp
cld
xchg
mov
dec
iret
out
mov
mov
xchg
mov
mov
mov
imul
fstpl
cld
cmpsl
cmp
sbb
lcall
cmpb
adc
shrb
mov
out
shll
cmp
and
cmc
imul
and
in
adc
pop
cmp
cli
rorb
cmp
cmpsl
insb
sbb
adc
ret
loope
loop
lock
and
push
adc
adc
lods
mov
mov
xor
aam
pushw
push
add
fs
lcall
out
loope
mov
nop
dec
in
and
cld
cli
push
loope
push
push
mov
hlt
cli
jno
pop
repnz
sub
mov
out
xor
pop
pop
push
sub
pop
mov
push
sbbl
fs
push
popf
loope
pop
fistpll
add
aaa
mov
adc
daa
cmpl
dec
and
or
mov
pop
cwtl
mov
xor
sbb
leave
lds
or
out
and
mov
dec
imull
cvttps2pi
fistpll
lcall
pop
sbb
xlat
lea
movsb
xor
cmc
mov
incl
mov
xor
stos
jg
mov
xchg
add
xor
push
cmp
ret
inc
int3
int3
nop
xor
dec
cld
mov
push
mov
in
inc
je
rolb
dec
test
sti
jae
int3
shll
ret
inc
dec
push
addr16
jo
popa
jge
dec
jge
or
in
dec
aad
mov
aaa
andl
hlt
sub
int3
dec
je
dec
and
aam
ret
int
clc
sarb
out
fisubrl
fdivrl
pop
sbb
lods
fisubl
xor
mov
icebp
push
jge
pop
and
mov
repnz
mov
mov
lods
leave
jmp
sub
ljmp
add
or
xor
pop
push
lods
push
lcall
into
ljmp
fwait
enter
mov
cmp
mov
std
pusha
rep
mov
inc
and
push
dec
ja
cwtl
dec
inc
test
and
add
ret
mov
sbb
adc
or
pop
inc
daa
repnz
mov
mov
cli
js
jg
dec
cmp
pop
push
jno
nop
cs
fstpl
inc
outsb
inc
cmp
jmp
xor
and
inc
jo
stc
mov
push
xchg
stos
xlat
push
out
test
decb
icebp
arpl
gs
pop
cwtl
cmp
pusha
stc
ljmp
add
adc
lcall
mov
loop
rol
aaa
daa
jmp
ja
or
sarb
jecxz
mov
aam
cmp
scas
mov
je
fisttpll
adc
rol
aas
aas
loope
lods
fucomi
movsb
mov
outsl
icebp
aaa
adcb
jl
sub
mov
js
xor
adc
pop
cmp
aaa
lds
pop
mov
or
xchg
mov
push
mov
pop
imul
jnp
aas
std
lret
fldenv
mov
sar
movsl
xor
xchg
lahf
imul
call
push
mov
fs
inc
outsb
mov
mov
mov
std
popa
stos
and
add
cmc
gs
or
pop
sbb
or
or
add
sbb
lock
in
leave
popf
cwtl
iret
int3
lret
mov
adcl
push
out
pusha
push
ljmp
ds
aam
cld
dec
popf
outsl
mov
and
inc
imul
adc
mov
test
popf
jle
ja
adc
test
push
xchg
ficoms
imul
arpl
in
inc
testl
mov
xchg
scas
es
ja
lds
out
enter
mov
pop
xor
xchg
ljmp
jg
adc
sub
mov
xor
jecxz
jnp
pusha
out
adc
cmp
int3
loop
mov
addr16
add
mov
mov
pusha
jl
fisubrs
in
push
xorl
jb
push
jmp
lods
jp
pop
das
xor
add
xor
push
jecxz
std
orl
lcall
scas
mov
addr16
iret
popa
xchg
sub
stc
mov
inc
jl
and
dec
popf
mov
repnz
adcl
or
fsubrp
sub
push
sar
out
xor
adcl
leave
ljmp
enter
imul
popa
xor
data16
andb
xor
mov
loopne
sub
int3
std
insl
into
add
push
mov
push
sub
gs
xchg
stc
aam
adc
sub
cltd
sarb
ja
mov
dec
jnp
test
add
inc
into
je
mov
test
jne
sub
lds
int
lret
push
je
lret
and
cmp
testl
jge
sbb
movsb
lret
xchg
cmp
mov
cmpsl
or
pop
out
stos
arpl
insb
fsts
bound
mov
fnstsw
hlt
xor
fbld
mov
pop
or
push
push
imul
insb
xchg
xor
mov
jecxz
and
sti
push
out
push
dec
mov
jg
mov
pop
fcomps
in
ljmp
mov
icebp
mov
sbb
pop
push
sti
cmp
jmp
repnz
out
jg
adc
ss
inc
cmp
std
adc
in
inc
inc
pop
enter
enter
cmp
mov
cs
or
mov
jge
and
push
scas
sub
and
stos
sbb
mov
cli
inc
xchg
out
aam
xor
aam
cmp
cli
das
pop
pop
idivb
sahf
mov
mov
and
sub
push
dec
jp
call
sub
pushl
dec
aam
insl
or
jne
inc
in
inc
test
cwtl
rorb
push
xchg
sub
pop
push
pop
add
lods
sbb
inc
inc
cld
rcl
jl
sbb
fs
jbe
jmp
or
or
in
in
lods
mov
xor
pop
fwait
xlat
xor
jno
sub
push
cmp
mov
sub
xchg
aaa
sub
orl
push
iret
loopne
or
push
dec
push
cmpsb
cmpsl
push
push
xor
ss
repz
lret
jp
pop
mov
jmp
and
pop
and
loop
xchg
mov
push
rolb
lahf
cltd
pop
dec
inc
or
sarb
mov
fs
mov
nopl
mov
adc
nop
mov
lahf
mov
test
sub
push
ret
cmp
inc
int3
xor
xor
xor
push
lods
jmp
or
test
pop
or
mov
shrb
idivl
cmp
ljmp
mov
pop
jnp
lret
and
popf
jmp
test
in
add
push
into
das
xchg
push
orb
sbb
push
imul
cmpsl
push
in
out
in
pop
mov
adc
mov
and
xor
ss
je
aad
int3
inc
adc
jo
ret
cmp
adc
in
xor
dec
xchg
dec
test
mov
bound
lods
cmpsb
orb
jmp
sbb
push
jmp
imul
add
cmp
push
jp
sti
jbe
test
shrb
mov
shlb
or
xchg
and
cmpsl
addr16
adc
mov
ret
iret
ja
adc
arpl
mov
call
mov
inc
std
scas
mov
add
out
mov
cs
fsts
std
dec
pop
adc
shl
push
jnp
push
mul
adc
int
ljmp
cmp
jno
sub
fwait
jne
add
xchg
inc
mov
loop
std
mov
fidivrs
ret
pop
sti
mov
sbb
sub
dec
bound
sahf
add
mov
sbb
dec
cmp
push
mov
test
cmp
inc
fnstsw
les
add
xlat
data16
clc
fsts
xor
inc
cmc
fs
dec
adc
dec
cld
pop
mov
lea
ret
rcr
or
outsb
leave
mov
fcmovb
pop
dec
xchg
xchg
stos
ret
rcll
in
xchg
in
aaa
jae
mov
aad
xlat
mov
lcall
repz
sub
sub
clc
cmp
jb
imul
imul
lcall
std
daa
stc
movsl
jno
sbb
xor
dec
xor
inc
cmp
aam
mov
sbb
xchg
movsb
rcll
jecxz
loope
cmp
stos
mov
int
repnz
jb
and
orl
sbb
adc
je
push
mov
leave
or
jne
add
and
je
arpl
cmp
enter
into
test
cmc
test
fmuls
dec
imul
and
loopne
and
test
push
or
out
cmp
xchg
xor
pop
out
mov
or
test
insb
daa
fistpll
dec
ds
jae
push
orb
movsl
pop
and
jg
xchg
out
pop
lret
fprem
call
sub
ljmp
in
jecxz
mov
das
pop
xor
repz
rcll
fs
aad
ret
pop
mov
or
or
das
add
inc
mov
shrl
lods
sub
ss
mov
xchg
inc
stos
mov
add
cmp
stc
loop
or
and
lahf
mov
rcl
pop
mov
cltd
cltd
jae
hlt
jp
stos
notb
call
jae
inc
xchg
out
sub
pop
sarl
mov
stc
sbb
mov
shr
sub
pushf
inc
inc
rolb
idivb
mov
fadd
mov
ds
sbb
mov
jmp
push
and
fidivrl
xor
inc
xchg
cmpsb
je
and
sub
push
insb
aam
and
xchg
test
inc
js
dec
jne
jle
push
clc
js
adcb
cld
xchg
or
xor
in
xchg
icebp
clc
aaa
out
in
les
xor
repnz
cmp
inc
cmpsl
jp
pop
mov
dec
cltd
xor
stos
add
mov
ror
mov
les
sbb
test
loope
or
sahf
push
out
fstpt
aaa
jne
sbb
ficoms
stc
add
xorl
in
out
sbb
or
dec
jns
push
xchg
jge
mov
mov
ds
pop
jae
pop
rcrb
dec
fldenv
pusha
shll
mov
bound
leave
icebp
shlb
sbb
inc
ja
lahf
das
dec
add
pop
insl
pop
xchg
inc
daa
fstps
mov
cmpsb
idiv
ljmp
or
aad
hlt
int3
aas
push
les
pushf
insb
enter
adc
nop
sahf
lods
sbb
jp
sub
mov
and
test
jnp
pushl
imul
mov
iret
and
insb
out
rcll
ret
inc
rcr
push
lea
cmp
mov
add
ja
push
fwait
mov
or
pop
and
jne
shll
mul
js
mov
cli
insl
and
andl
ljmp
fnstsw
cltd
push
mov
push
imul
push
dec
adc
or
mov
mov
int3
jb
dec
mov
lahf
mov
imul
mov
daa
dec
dec
pop
sahf
push
jmp
pop
add
int3
mov
sub
and
movsl
jo
inc
pop
jae
cwtl
add
mov
shll
cmp
push
movb
sbb
test
jb
stos
mov
dec
pushf
add
movsl
pop
push
add
sub
int3
loop
mov
out
dec
test
inc
mov
roll
push
mov
and
test
mov
and
iret
pop
ret
or
lods
lret
ss
xor
sub
test
imul
adc
jb
jecxz
test
lahf
pop
cwtl
sub
mov
jmp
mov
in
cmc
test
xchg
icebp
push
pop
cs
sub
pop
lret
cld
add
jb
cmp
imul
scas
and
adc
std
rcll
push
fld
out
adc
inc
jl
iret
lods
add
jno
rcll
pop
jo
push
lret
fs
adc
mov
gs
out
or
or
mov
fwait
mov
jle,pn
push
xchg
inc
roll
test
jp
aad
imul
mov
loop
loopne
imull
jp
stos
cs
pop
xchg
repz
test
mov
or
add
pusha
mov
push
push
adc
sbb
mov
mov
inc
dec
jge
je
pushf
mov
cmp
mov
jmp
push
dec
mov
inc
cmp
mov
cmc
out
ljmp
stos
leave
mov
sbb
mov
jno
push
mov
repnz
xlat
insl
push
mov
in
push
clc
xchg
pop
and
push
pop
push
adc
lock
testb
in
popf
cmp
cmp
in
sbb
iret
sub
cld
cmp
ret
in
fcompp
xorl
aaa
jg
das
sub
pushf
fcoms
xbegin
fucomp
std
addr16
or
dec
lods
sbb
mov
lea
rorl
adc
aaa
das
pop
xchg
out
fldcw
addr16
setge
push
sub
pushf
pusha
in
decl
shrl
jecxz
cmp
aas
out
xor
and
push
and
pushf
pop
ds
xchg
mov
mov
lods
mov
in
mov
pop
lods
insl
mov
cltd
mov
das
fwait
and
or
int3
and
xchg
lods
xchg
add
xchg
ficoms
inc
and
call
add
mov
iret
stos
and
test
shrl
xchg
inc
push
imul
loop
inc
fstl
vmovaps
xchg
xor
fisubs
cmp
sbb
adc
repz
shl
fidivrl
aas
mov
fcmovnbe
stos
mov
stc
pop
aad
or
cmp
mov
insb
test
call
cwtl
jp
push
imul
dec
das
cmp
inc
lcall
fdivl
mov
jne
jp
mov
push
dec
rorb
lods
sub
xlat
xor
cmp
movsl
arpl
lods
jb
sub
iret
pushf
or
jg
add
jge
push
cmpsl
sti
lea
cmp
xor
into
rep
jmp
std
dec
xor
ljmp
fisubrs
inc
jns
mov
xchg
pusha
mov
aad
jmp
loopne
test
std
in
nop
and
mov
mov
popf
cli
inc
sub
jno
jmp
imul
push
adc
cmp
sbb
sbb
in
add
xchg
imul
xorl
pop
into
xor
mov
stos
in
add
mov
cmp
push
xor
movsl
mov
mov
mov
or
push
xor
mov
aas
jmp
inc
adc
sub
test
out
mov
sub
push
or
repnz
shlb
lahf
ss
fisubrs
rep
cld
mov
mov
scas
sub
inc
int
lock
pop
or
push
stc
inc
iret
sbb
fimull
cmc
imul
negb
and
imul
stos
addr16
test
int
jno
add
and
outsl
mov
xor
out
popf
in
dec
insl
call
ror
sub
jl
ret
pop
rorl
xor
inc
or
pop
lods
rcrb
push
and
dec
jns
mov
sbb
jo
ja
outsb
adc
xchg
testl
repnz
cmp
inc
mov
fsubrs
leave
dec
mov
sbb
ja
adc
mov
fs
out
mov
adc
and
dec
pop
xorb
and
cwtl
add
test
pop
imul
xchg
pop
mov
xor
adc
or
ss
js
push
pop
pop
das
aaa
ljmp
cmp
dec
and
lock
test
sub
fsub
std
fprem
pushf
inc
pop
mov
rep
or
ljmp
loop
sarl
push
pop
adc
mov
mov
mov
push
neg
dec
movsl
cwtl
xchg
shl
xchg
popa
cmp
aad
fxam
shl
cld
outsl
inc
pop
sbb
mov
out
movsl
jno
arpl
lea
inc
loop
jns
cmpsb
jp
sub
inc
mov
push
mov
inc
popa
dec
mov
pop
les
push
in
sub
xchg
inc
cmp
scas
jb
jp
lds
leave
and
add
popf
ss
xor
inc
test
ds
mov
or
lcall
add
subl
shrb
push
xor
mov
sarb
stos
je
sbb
and
test
int3
sub
cli
push
sbb
std
jle
cli
popa
adc
sysenter
into
xor
shll
push
mov
sbb
xlat
lcall
jb
jg
into
mov
add
adc
lcall
scas
fimull
ljmp
xchg
fs
faddl
aad
xor
lds
cli
mov
aam
lret
dec
jle
outsl
aad
inc
in
shlb
outsb
inc
icebp
and
jecxz
std
dec
leave
idivl
incl
mov
xchg
ret
cmpsb
xchg
mov
fchs
dec
les
imul
pushf
and
das
fwait
test
testb
xchg
mov
inc
push
mov
call
sbb
push
outsb
sarl
mov
outsl
jnp
adc
cli
inc
add
xchg
mov
jo
loop
mov
fistpl
fisubrl
pop
sub
mov
out
stos
fwait
jp
aaa
mov
xchg
popa
dec
dec
in
fsubs
lds
adc
add
cli
mov
fs
cmp
jecxz
add
stos
test
xchg
je
outsl
sub
cmpsl
and
das
or
fdivr
dec
and
imul
mov
inc
call
fnstenv
cmp
aam
xchg
pop
int
fsubrs
movsb
outsb
cmpsb
cli
push
lret
imul
aad
lahf
fwait
lea
out
je
xor
xchg
scas
popf
cltd
loop
pop
jg
sub
push
mov
jns
inc
adc
into
enter
popa
sub
xchg
test
orl
cld
imul
pusha
imul
mov
dec
fisubrl
out
push
cmc
xchg
pop
fwait
xor
jns
jecxz
cli
mov
pop
push
xor
push
mov
ret
and
push
cmp
iret
xor
cs
mov
sub
ret
sbb
fisubl
cmpsb
adc
mov
dec
je
push
sti
mov
push
jne
xchg
pop
pop
addb
add
or
push
bound
dec
adc
mov
push
lret
andl
dec
xchg
push
stos
sub
add
xchg
subl
int3
notb
push
and
lret
mov
fistl
push
add
mov
ljmp
mov
rcll
lods
xchg
ja
mov
jno
out
jl
inc
lods
fstp
push
lret
shrb
pop
fisttpl
and
aad
hlt
push
and
jl
mov
sti
sbb
xor
push
in
add
push
leave
icebp
out
cld
dec
dec
pop
mov
cmp
lret
mov
nop
mov
divl
add
ljmp
iret
pop
and
outsb
lea
sbb
jg
cmpsl
xchg
sbb
xlat
cltd
adc
into
outsl
mov
test
ja
xchg
and
ja
pushf
popa
dec
daa
inc
and
jp
ret
les
jae
outsb
xchg
out
jns
xlat
cmp
cmp
out
cli
xor
push
data16
sahf
cmpsb
xor
jnp
fdivl
xchg
lock
jle
inc
in
scas
ret
or
xchg
lahf
fmull
lahf
jnp
loope
lds
pop
es
mov
addr16
mov
sbb
adc
or
adc
jo
ss
and
es
fstl
mov
fists
or
call
mov
dec
cs
fbld
mov
jmp
cs
shr
push
and
sub
mov
add
inc
pop
add
adc
outsb
sub
mov
scas
sub
fs
scas
cmp
in
inc
cmp
or
cmpsl
inc
cwtl
fcompl
pop
sbbl
cmp
mov
sub
test
jp
push
push
add
addr16
mov
loop
and
cmp
and
sbb
loope
dec
fldl
adc
xchg
je
lods
aad
jno
or
pop
pop
andl
das
push
sarb
adc
shlb
lret
fucomip
jnp
pop
sbb
sub
mov
xchg
repnz
xor
push
pop
mov
push
sub
sub
lea
jl
test
xor
jae
add
mov
mov
daa
or
icebp
xorl
cwtl
pop
inc
cmpsb
mov
outsl
outsb
mov
cltd
pop
push
std
adc
cmp
mov
ret
mov
icebp
rcrb
out
cltd
add
sub
imul
out
shlb
sahf
adc
adc
cwtl
test
push
repnz
mov
sti
int
aad
out
adc
mov
jns
mov
into
and
movsl
fnstenv
das
sub
daa
mov
xchg
xchg
cmp
xor
push
punpckhwd
adc
shl
mov
mov
inc
loope
test
inc
insl
xchg
jmp
jmp
adc
aad
and
add
es
xchg
push
jae
xchg
out
or
icebp
sahf
xchg
icebp
and
cmpsl
mov
arpl
pop
aad
jecxz
ja
or
lds
fs
ljmp
icebp
lret
xchg
pop
pop
shrb
dec
mov
cmp
data16
pop
mov
pop
sbb
in
mov
mov
hlt
push
imul
jb
lea
pop
fsub
rclb
jl
outsb
imul
lea
mov
lods
dec
adc
sbb
cmc
lds
testb
xor
adc
icebp
aad
mov
enter
aaa
cmpsb
mov
arpl
fisubs
xor
shll
mov
bound
xor
sbb
dec
sbb
out
cli
pop
fwait
shl
pop
adc
xchg
xchg
inc
outsl
dec
push
add
sub
sub
or
adc
and
xchg
cmp
lea
xor
mov
popa
add
mov
sbb
dec
insl
jge,pt
mov
fwait
stos
mov
fldl
adc
jmp
mov
movsl
jg
test
cmp
lea
test
shll
sub
xchg
pop
jg
outsb
lods
inc
in
pop
mov
xor
aaa
jns
scas
out
mov
loopne
sbb
mov
movsb
jp
sti
inc
ret
in
in
cmpsb
push
and
lret
xchg
sbb
cmpsb
xor
insb
push
xor
push
sbb
add
adc
pop
pop
out
fdivrl
or
cmpsl
pop
lods
pushf
add
mov
dec
sti
les
std
push
lret
mov
sub
shll
arpl
mov
ja
cmp
sbbl
mov
ja
repnz
push
stos
mov
int3
int3
add
push
pushf
scas
xchg
sbb
cld
push
jle
xchg
push
rcrb
sub
sub
mov
es
pop
dec
cld
shlb
lods
xchg
xchg
mov
ljmp
fcompl
mov
mov
pop
adc
jno
sbb
mov
jge
and
mov
inc
inc
and
mov
movsb
jns
push
xorl
scas
out
shrl
mov
inc
sbb
pop
push
inc
xor
lret
push
and
sbb
push
scas
fwait
xlat
add
add
xlat
pop
hlt
jnp
popf
ss
shll
adc
std
ljmp
cmpsb
pop
cmc
subl
popf
sub
push
pop
shll
out
sbb
push
arpl
dec
sbb
adc
int3
movsb
shlb
cli
xchg
xchg
mov
inc
pop
mov
xchg
mov
lock
mov
jns
adc
aad
xchg
xorb
lret
outsb
outsl
test
mov
stc
lcall
cmc
push
mov
stos
or
adc
mov
aas
xor
inc
xchg
jge
sbb
jmp
cmp
fsts
aad
call
cmc
pop
fsincos
sub
inc
mov
scas
sbb
mov
dec
fiaddl
iret
into
lock
ficomps
push
cwtl
call
mov
sub
test
adc
fisubrl
or
add
sbb
out
lahf
inc
and
adc
stos
movsb
dec
nop
frstor
shlb
sbb
sub
ficomps
cld
pop
inc
scas
pop
fistpll
lret
int3
into
jb
xor
cwtl
inc
mov
or
mov
es
imul
in
nop
sub
test
dec
nop
lods
jecxz
pop
push
lahf
popf
cmpsb
cs
sub
lock
mov
je
addr16
xchg
inc
out
pop
push
sub
pop
jecxz
mov
addl
imul
mov
leave
sub
mov
popf
out
jle
dec
sti
xchg
or
aaa
sahf
nop
xor
sti
mov
mov
xor
push
sar
popa
mov
mov
rcll
fdivl
int
data16
mov
aam
clc
lods
pop
mov
fs
movsl
out
xchg
scas
je
push
std
ret
das
and
xor
xchg
mov
gs
repnz
jle
mov
bsr
pop
repnz
inc
cmp
add
or
ret
push
sbb
ja
cwtl
inc
pop
mov
mov
push
sti
out
dec
mov
lret
inc
cmpsl
dec
jle
movsb
mov
sbb
fmul
stos
sub
cwtl
shlb
inc
imul
sar
int3
movsl
loop
daa
daa
sub
jne
jl
shlb
add
scas
stos
pusha
shrb
imul
sbb
push
xchg
pop
out
push
push
and
imul
data16
mov
push
sbb
icebp
inc
xor
iret
test
out
std
nop
adc
push
lahf
addb
lret
stos
gs
fs
mov
xor
mov
mov
jmp
push
out
shl
cld
sbb
into
fldcw
lock
jge
xchg
or
fldenv
hlt
and
lods
mov
mov
fwait
adc
push
cmp
jmp
and
repz
mov
popa
jge
adc
lods
sbb
rclb
jp
or
mov
pusha
inc
stos
sbb
ja
cli
jl
aam
dec
int3
movsb
inc
jns
ljmp
fisubs
sub
fcoms
pop
aad
lods
fisubrs
mov
dec
push
mov
mov
mov
jmp
push
mov
sub
mov
sbb
les
lods
mov
outsb
adc
push
movsb
inc
std
add
cmpsl
push
ret
lret
lret
pop
xor
icebp
fcomp
adc
mov
aam
jl
jg
pop
or
cmp
xchg
iret
pop
std
ja
cwtl
mov
scas
cmp
rclb
mov
addr16
aas
mov
push
lock
inc
ret
repnz
pop
mov
xor
xchg
and
ret
xor
xchg
sbb
stos
sbb
sbb
movsl
lock
popa
push
jnp
fistpll
mov
adcl
movb
jo
sar
fs
xchg
rcrb
pop
inc
push
ljmp
jbe
inc
fxch
jo
fwait
inc
clc
testl
fmull
hlt
jg,pn
adc
stc
push
sub
inc
imul
movsl
stos
movsl
jle
xlat
test
sti
ds
pop
fwait
movhps
sub
js
mov
ds
mov
out
imul
sbb
push
jae
fiaddl
cmp
scas
ds
aaa
lret
xor
sbb
xor
add
sub
icebp
incl
push
je
push
dec
push
call
fsub
insl
mov
addr16
xchg
inc
std
mov
jmp
sub
lods
outsl
arpl
test
push
inc
arpl
pop
xchg
dec
jg
daa
rcrl
jmp
and
mov
and
repz
xchg
movsl
inc
stos
mov
enter
cmp
in
adc
pop
cmp
int
dec
jo
or
xchg
add
mov
aam
addr16
outsb
fs
call
add
push
jnp
mov
push
cld
hlt
pop
es
push
inc
jo
xchg
jnp
shll
cli
shlb
push
cmpsl
mov
xlat
js
mov
imul
inc
dec
sahf
and
aas
outsb
adc
sbb
pushf
xor
mov
out
and
movb
out
enter
or
scas
mov
add
orb
and
in
aam
xchg
cmp
mov
adc
or
adc
pusha
test
lds
pushf
pop
ret
cli
out
scas
mov
cli
fwait
mov
test
mov
push
fmull
xchg
ds
repz
mov
mov
push
mov
cmp
mov
add
xor
or
add
jecxz
inc
jp
iret
mov
in
scas
mov
cmpsb
cmp
pop
test
cmc
leave
pushl
xlat
loop
xchg
imul
and
lret
adc
ret
std
out
lahf
loope
xor
or
fisubrl
and
outsb
push
popf
or
push
xchg
aas
jg
adc
push
adc
mov
cmpsl
cmpsl
push
cmp
in
ja
out
dec
loopne
mov
xchg
sahf
jb
jns
outsb
sub
add
cld
sti
and
mov
stos
int
dec
loop
mov
ljmp
pop
das
subl
pop
xorl
jno
dec
bnd
xchg
imull
cmp
inc
lret
in
dec
movsb
push
mov
xchg
push
insb
jmp
mov
adc
mov
jmp
xor
fiaddl
in
cmp
js
xchg
inc
lret
mov
into
mov
adc
adc
cmp
sbb
adc
es
sub
and
mov
jb
imul
mov
loope
test
mov
push
push
repnz
std
dec
lods
pop
scas
movb
xor
cld
cld
sbb
repnz
jp
cmpsl
jge
shl
add
dec
jae
cmpl
cmp
jle
dec
rcrb
cltd
aaa
cmc
mov
std
cmp
adc
pop
ljmp
cmp
mov
adc
xchg
in
lods
jae
leave
movsb
jge
cmp
or
mov
mov
nop
dec
fcoms
xor
and
push
push
mov
aad
xor
fwait
neg
lock
mov
dec
insl
jg
add
in
mov
int3
and
les
movsl
cmp
mov
mov
loop
and
inc
lret
push
dec
adc
xchg
dec
adc
data16
jp
push
jo
xchg
jg
inc
adc
movsl
mov
fidivrs
lds
lds
mov
jg
sahf
mov
lret
lea
jg
aad
scas
add
pop
sub
imul
je
sub
fcomp
std
mov
sub
inc
roll
mov
sbb
add
daa
cli
sub
push
in
sbb
ds
dec
mov
into
sbb
and
cmp
xchg
scas
fildl
and
les
push
orb
dec
jmp
xchg
mov
xchg
leave
mov
dec
mov
incl
or
in
in
rcrb
mov
imul
repnz
out
add
pop
std
cwtl
shll
lcall
sbb
push
or
fdivrl
xchg
in
enter
pop
or
mov
std
push
int3
adc
nop
or
int3
sbb
xchg
imul
sub
mov
int3
test
dec
jg
and
jne
daa
cmp
mov
sbb
dec
dec
mov
stos
scas
mov
loop
enter
add
lock
jmp
js
and
dec
mov
pop
repz
cld
dec
aas
xlat
adc
addl
les
movsl
int3
pop
ret
pop
sub
sub
mov
cmp
cmpb
nop
dec
pop
insl
scas
xor
cwtl
test
jmp
xor
sub
popl
or
out
xchg
jge
xchg
jbe
inc
test
add
xchg
sti
and
inc
push
sbb
push
je
in
aam
lahf
sub
hlt
stos
jbe
outsb
rolb
in
jae
jne
dec
pop
loop
into
jp
push
lock
mov
and
mov
fistpll
mov
sub
jns
js
sub
push
int3
daa
push
push
push
sub
lret
xor
popa
in
mov
insl
call
pop
cmp
cmovp
imul
xchg
insl
call
lret
out
push
inc
push
push
mov
or
mov
inc
popf
push
in
in
pop
adc
dec
mov
adc
subb
popa
sub
and
xor
cltd
jno
out
cwtl
mov
enter
mov
xchg
scas
jo
mov
lock
enter
adc
outsl
mov
ss
sahf
fcomp
cmpl
cwtl
ret
and
jle
cmpsb
les
and
xchg
mov
idiv
push
mov
popf
dec
adc
pop
pusha
push
cmpl
adc
pop
lods
cltd
rcl
lahf
test
cli
cld
lea
mov
sub
inc
add
xchg
imul
aam
frstor
jb
imul
dec
cs
xor
pusha
lods
or
mov
pop
negb
subl
xor
sar
inc
scas
sbb
repnz
dec
mov
pop
bound
mov
xor
dec
loope
sbb
leave
xchg
inc
fstps
lds
arpl
decb
pop
les
push
pop
cmpsb
xchg
mov
out
xor
pop
bound
insb
xor
push
add
pop
inc
sub
push
add
out
cmp
ret
push
shll
xchg
daa
sahf
out
xchg
jl
add
cmp
stos
test
fdivl
arpl
int
jae
push
add
jno
jmp
or
rclb
add
stc
jp
sub
sub
mov
insl
scas
shlb
adc
jp
push
andb
sub
mov
int3
cltd
xor
xchg
push
mov
jo
xor
scas
lods
pop
mov
jle
jo
pop
movsl
mov
xchg
nop
mov
mov
in
push
in
lods
inc
add
add
jle
scas
push
xor
call
into
rclb
xchg
std
adc
movsb
and
fwait
cltd
das
les
sbb
enter
call
pop
mov
shr
mov
in
in
cmp
mov
xor
pop
fst
int3
cmpsl
jb
les
jb
incb
pushf
pop
aas
out
punpcklbw
fsin
and
pop
or
fstl
test
cmp
xchg
jns,pn
insl
sub
mov
outsb
add
movsb
mov
insl
imul
lods
cmpsl
mov
in
icebp
lret
push
jle
test
fwait
xor
ss
pop
lock
push
adc
xchg
mov
cmp
shll
imul
pop
aaa
mov
dec
and
mov
xor
nop
mov
push
lahf
int3
nop
sbb
imul
xchg
cmp
jmp
not
scas
test
in
inc
push
push
mov
outsl
int
loopne
pop
jmp
cmp
cld
lods
cltd
pop
out
fs
ret
sub
ja
jg
add
cmp
imul
jno
lcall
ljmp
cmp
xchg
loopne
jae
dec
mov
inc
daa
sbb
ljmp
insl
and
add
movsl
mov
imul
add
xchg
mov
sub
test
or
cmc
mov
pop
jge
inc
gs
dec
add
sti
mov
mov
bound
cmp
or
xor
jae
inc
scas
lret
xchg
outsb
mov
pop
pop
xor
xchg
enter
or
jne
xchg
jno
imul
icebp
xor
cmpl
icebp
lret
ds
pop
shlb
mov
rorb
mov
sub
js
stc
jge
idivl
lock
jo
rcrl
mov
popa
jbe
in
adc
dec
test
movsl
dec
ffree
fstpt
mov
xor
aas
in
lds
xchg
push
popa
icebp
sub
xchg
int
cltd
jp
pop
xor
jge
push
outsb
ljmp
rclb
int
cmpsb
clc
lds
lret
imul
lods
loop
fdivs
ret
clc
in
inc
inc
cmpb
sub
test
aaa
aam
mov
mov
cmpsl
insl
or
mov
arpl
bound
pop
push
out
fstpt
cmc
mov
mov
iret
xchg
xchg
xchg
inc
push
fstps
mov
mov
or
sbb
arpl
or
adc
xchg
cmp
pop
stos
test
mov
sbb
lods
in
jb
iret
xchg
push
or
xor
lcall
cwtl
dec
or
add
inc
fistpl
leave
pop
adc
mov
popf
ja
je
inc
dec
cmpsb
test
sub
mov
jno
xor
leave
repz
adc
repnz
inc
shlb
jle
ds
push
fisubrs
or
pop
xor
jle
push
xchg
bound
ljmp
clc
aad
insb
addl
stos
cmp
mov
and
xchg
adc
jns
dec
cmpsl
pop
aad
jae
push
jecxz
insl
push
and
adc
mov
sbb
add
ret
testb
adc
pusha
xchg
or
int
inc
and
pop
xchg
pop
sbb
pop
xor
scas
mov
add
aam
adc
dec
shl
cmp
adc
mov
scas
mov
and
add
fnstsw
add
adc
mov
pop
jmp
iret
mov
sbb
jbe
loope
pushf
cli
lahf
js
int
call
sbb
data16
and
sbb
call
fistl
jge
in
lret
in
mov
call
xchg
adc
pusha
jmp
test
sbb
mov
xchg
dec
sbb
es
or
sahf
imul
rcrl
bnd
sbb
int
xlat
xchg
sbb
fdivl
mov
mov
es
pop
lret
stos
push
sbb
cmpsb
mov
inc
and
and
pop
ret
rcr
xchg
addb
je
cmp
mov
aaa
popa
xor
popa
sbb
mov
dec
pop
fdivl
add
xor
stos
out
sbb
loop
xor
jp
adc
xor
xchg
stos
jo
push
paddusw
ret
xchg
cmp
loope
test
or
xor
js
ficoms
inc
into
xchg
mov
mov
inc
or
movsb
dec
ljmp
repnz
imul
dec
ds
fsubrs
mov
inc
imul
sti
xor
pop
cli
neg
jae
in
fildl
sbb
ret
loope
mov
call
sub
pop
ror
pop
aam
xchg
jmp
pop
imul
pop
push
inc
test
lods
pop
cmp
and
inc
xchg
mov
cmc
loope
xor
inc
mov
repz
sub
fsubl
adc
jb
mov
xchg
xor
mov
popf
push
loop
test
frstor
arpl
push
mov
lods
mov
add
jb
cmp
and
adc
adc
xorb
xlat
or
hlt
or
call
ror
sahf
sub
pop
cs
inc
cmp
mov
inc
pop
adc
adc
in
loop
in
xchg
out
loope
loop
cmp
lods
sub
cli
xchg
push
jmp
xchg
pushf
outsl
xor
dec
js
dec
std
pop
jle
aad
icebp
out
lea
adc
stos
movsb
sub
int3
and
cmp
dec
push
call
outsl
pop
pop
arpl
jbe
daa
mov
xchg
jnp
dec
leave
popa
mov
mov
xor
push
mov
ficoml
dec
push
jmp
sub
mov
mov
jecxz
aad
dec
mov
lcall
xor
or
sbb
imul
mov
scas
xor
and
dec
mov
mov
pop
loop
mov
xchg
in
adc
cmp
sbb
out
adc
cmp
lret
data16
cwtl
pop
mov
nop
shrb
xlat
jp
test
xor
into
and
sbb
inc
subb
data16
push
es
mov
aaa
xchg
shl
mov
inc
or
add
ffree
sub
sub
add
rcl
stc
vmovaps
or
sub
jl
or
and
cmp
sbb
add
sub
aam
lods
imul
loope
notl
shl
loope
inc
outsb
xchg
in
xor
clc
and
icebp
and
fsubl
xor
bound
pop
in
inc
sbb
mov
inc
push
and
cmp
out
sarl
mov
dec
lahf
mov
xchg
test
inc
adc
icebp
xchg
mov
push
std
dec
les
pushf
cltd
testl
dec
imul
repnz
enter
cmp
jbe
hlt
ss
ss
rorb
pop
sub
ss
sbb
xchg
pop
mov
dec
cmp
lods
xchg
sbb
mov
bound
mov
mov
sbb
inc
inc
push
fsub
pop
repnz
clc
pop
push
movl
push
hlt
pop
dec
mov
sbb
add
je
xor
fs
mov
add
bound
mov
or
aas
inc
and
mov
adc
in
loopne
dec
jbe
fcoms
sub
push
xor
movb
out
movsl
imul
add
scas
sbb
das
lds
xchg
testb
jne
enter
lcall
xlat
xchg
shlb
icebp
iret
mov
pusha
fmul
and
add
sbb
cmpb
add
sub
fldenv
push
dec
push
xor
ljmp
gs
scas
mov
lds
repnz
mov
jl
xor
int
movsb
sbb
out
push
inc
pushl
scas
mov
out
pop
ja
mov
or
outsb
out
mov
push
xchg
mov
mov
add
shlb
sbbb
xor
fcoms
out
and
or
xor
and
adc
out
fidivrl
cmpb
add
popa
cmp
inc
out
fiaddl
sarb
jge
xor
sahf
push
arpl
jp
inc
dec
mov
lods
test
push
and
popa
xor
or
pop
jo
je
cmp
arpl
sbbl
add
jno
fcoml
cmpsb
push
test
fnstcw
inc
loop
xchg
add
test
cltd
frstors
movsb
and
xchg
jae
cli
mov
jg
cs
fs
rcr
jno
daa
jle
adc
inc
lcall
xor
hlt
mov
int
mov
dec
mov
dec
cltd
lret
push
xchg
enter
les
cmp
aad
loope
ljmp
insb
sub
incb
pavgw
mov
inc
cwtl
sub
sbb
mov
jne
rcrl
lea
outsl
jmp
xchg
into
das
in
xchg
leave
mov
shrl
bound
jo
mov
scas
adc
addr16
adc
adc
and
adc
inc
cwtl
outsl
inc
lods
pop
subb
xchg
xor
rolb
jge
lea
test
jecxz
xchg
pop
scas
scas
fidivl
jmp
cmp
mov
daa
gs
ret
mov
mov
fists
out
mov
pop
cmc
mov
movsb
jmp
outsl
imul
and
or
ficoml
movsb
lret
movl
xor
jmp
jg
ss
repz
or
jg
cli
aad
stos
cmp
add
cmp
pop
inc
dec
bound
ret
jle
nop
enter
jno
pushf
or
lahf
sbb
ljmp
jle
mov
mov
pop
fimull
dec
mov
add
loop
shll
fdivs
fwait
mov
into
cmp
mov
inc
das
push
pop
cmp
loop
inc
inc
insl
nop
add
mov
lods
mov
cs
and
sub
push
testl
dec
sbb
sbb
mov
int
out
js
inc
cwtl
push
mov
lret
cli
ds
mov
mov
bnd
mov
add
shrl
adc
lret
pop
fbstp
cmp
lret
xchg
popa
push
and
mov
inc
cld
adc
add
les
jl
addr16
mov
add
gs
xor
fdivrl
mov
outsb
xor
gs
mov
hlt
out
inc
test
in
jp
shlb
out
sub
or
push
dec
repz
sub
add
arpl
pop
inc
sub
add
stc
mov
dec
dec
mov
movsl
in
aam
cmp
std
jg
aam
lahf
inc
pushl
shrl
mov
jecxz
mov
xor
out
mov
xorl
mov
cmp
sub
mov
mov
mov
inc
pushf
and
jbe
jo
mov
inc
mov
enter
andb
scas
pop
xchg
pop
and
repz
dec
cmp
mov
daa
cmp
and
sti
outsl
out
pop
xor
dec
jbe
movsl
xchg
xchg
mov
sub
push
add
out
mov
inc
sbb
push
adc
pop
movsb
mov
mov
xor
pop
pop
js
mov
loopne
sub
and
gs
xchg
mov
out
dec
xor
das
jp
insl
xor
push
lods
jnp
and
mov
add
and
je
in
jl
sbb
or
insl
lahf
lea
inc
mov
add
push
xchg
mov
dec
imul
test
pop
mov
jmp
push
faddl
sbb
leave
mov
jb
sbb
mov
jl,pt
dec
in
aaa
enter
lret
fiadds
inc
xchg
scas
aaa
inc
xlat
push
frstor
jne
sub
adc
rolb
cmc
xor
cmp
lds
mov
fiadds
xor
enter
sbb
xor
fmul
insb
fstps
sub
scas
xchg
fsubp
sub
enter
and
sbb
cwtl
mov
push
cmp
sbb
add
add
sub
insl
idivb
fnstcw
add
sub
xlat
push
and
mov
loopne
stos
ret
pop
cmove
popa
cmpsl
xor
cld
aam
fiaddl
jg
aas
push
sbbl
and
lds
jecxz
repz
pop
outsl
lcall
xor
mov
fimull
dec
subl
into
cli
scas
mull
adc
ret
xlat
and
pop
mov
jle
inc
scas
xchg
bound
ja
and
mov
enter
pushf
push
scas
repnz
xchg
mov
mov
push
mov
aad
cwtl
jge
xchg
pop
and
in
xlat
cmpsl
xchg
iret
or
mov
inc
lods
mov
pop
mov
xor
into
sub
push
pop
movsl
ret
or
mov
nop
add
adc
sti
dec
test
mov
lods
jp
shll
jmp
mov
push
int
ret
int3
sub
jp
lcall
out
in
cli
in
push
cld
inc
or
mov
dec
ljmp
jge
sub
pop
pop
mov
cmp
je
sbb
jns
rorl
push
pop
cmpsl
push
sti
mov
nop
jno
inc
adc
dec
and
jno
bound
add
mov
dec
mov
sbb
push
call
and
dec
adc
xor
test
call
cmpsb
aad
mov
push
and
cwtl
mov
jae
inc
fiadds
add
outsl
aad
sahf
test
mov
jecxz
xor
cmc
pop
push
xchg
insl
push
jle
iret
cmp
mov
pop
arpl
xor
push
lret
sbb
jae
sub
push
out
lcall
cmp
or
xor
out
jns
dec
jbe
sar
sarb
xor
add
mov
nop
add
mov
outsl
and
fwait
dec
inc
in
cli
mull
mov
fcom
xor
scas
cs
jbe
mov
xchg
adcl
movsb
test
mov
pop
push
sbb
xor
fsubs
int3
mov
sub
scas
dec
cmp
in
xor
rcr
xchg
aam
dec
mov
jmp
shlb
mov
jecxz
xor
push
or
das
or
outsb
je
outsb
ficoms
imul
mov
fdivrs
adc
lods
loope
loopne
push
inc
daa
push
movsb
int3
loopne
mov
data16
and
sbb
mov
into
xor
add
or
div
aaa
sar
stos
push
lods
dec
push
push
or
cs
int3
int
and
insb
sarl
xlat
repnz
xorl
mov
jmp
sbb
outsb
scas
mov
push
jle
mov
stos
mov
xor
adc
fstpt
clc
mov
mov
cltd
xor
jae
push
xor
pop
div
and
loopne
add
lods
je
or
push
push
movsl
ss
shrb
sub
mov
in
out
fcoml
mov
in
stos
pop
imul
jle
adc
dec
lcall
fcmovbe
sahf
cwtl
add
cmp
sbb
cmp
inc
js
mov
sub
jb
mov
sub
fdivp
xor
imul
xchg
cmp
xchg
and
jmp
outsl
leave
pop
xor
mov
in
ss
or
jb
mov
jno
or
cmp
cmpsb
inc
pop
test
fists
cmp
add
in
add
add
xchg
cmc
cli
imul
insb
push
xchg
sbb
xchg
mov
clc
push
mov
inc
jns
aam
stos
imul
out
add
cmp
fistpll
push
dec
in
inc
movsb
jno
xlat
lock
mov
repnz
mov
cli
push
aam
aas
test
repnz
xor
imul
sbb
xor
fs
sub
pusha
push
adc
cmp
test
outsl
sbb
inc
mov
pop
nop
fwait
testb
stos
dec
xchg
jg
fisubrs
test
xorl
clc
enter
lds
popf
add
shlb
cmc
mov
sbb
lcall
or
rcrb
ret
adc
xor
inc
mov
jg
sbb
xchg
pop
xchg
int3
xchg
dec
add
and
sbb
pusha
mov
dec
lods
cld
jmp
mov
sbb
ja
test
xchg
inc
push
ljmp
or
cmpsb
xchg
add
mov
pop
sbb
testl
inc
inc
adc
mov
jns
test
dec
push
mov
jns
out
xor
mov
incl
jnp
xchg
out
cmpsb
adc
sbb
push
or
pop
push
xor
jnp
stos
lahf
cmpsb
adc
sub
ja
decl
mov
sub
test
repz
stc
mov
cltd
lea
and
cld
push
dec
imul
jns
mov
lahf
mov
sbb
sar
cli
cmp
into
cmc
jecxz
rcll
pop
cmp
arpl
mov
imul
insb
lods
adc
sbb
cli
cmp
or
mov
xor
sub
jne
adc
adc
adc
cmc
jno
outsl
pop
leave
int3
mov
xlat
fcoml
imul
cmp
xchg
sti
lods
dec
or
cltd
enter
enter
xor
iret
insb
out
pushf
aam
ljmp
jns
leave
in
test
cmpl
cmp
rcrb
filds
pop
fildll
inc
mov
cltd
fsubrs
js
jecxz
insl
enter
or
xorb
mov
jns
shll
xor
outsl
pop
int3
inc
mull
mov
clc
jb
push
popf
stos
icebp
dec
repz
test
xor
mov
cs
xchg
xchg
nop
cltd
ret
push
sar
repnz
in
int
push
pop
bswap
fnstcw
push
xchg
pop
int
mov
pop
mov
jg
pusha
inc
push
or
lret
lods
int3
rcl
inc
xchg
jge
mov
cmp
inc
rcrb
hlt
ja
leave
pop
or
inc
jp
addb
pushf
popa
fnstenv
xchg
cmp
jbe
xchg
and
test
jmp
cmp
fwait
fs
decb
sarb
psrlw
sub
imul
fcoms
int3
pop
das
decl
mov
das
lock
lock
shll
outsb
stos
mov
lahf
test
jns
faddp
mov
pop
subb
hlt
push
jae
pop
push
sub
cmpsb
scas
cli
dec
add
mov
fiaddl
xor
jne
rcr
jae
xchg
xchg
ret
mov
xchg
cli
adc
or
or
scas
add
test
push
jecxz
xor
cmp
fstl
and
pop
xchg
shll
into
in
shll
pushf
test
add
imul
in
dec
lea
and
nop
lcall
ds
mov
cli
sbb
loope
sbb
adc
loopne
xchg
shll
dec
push
inc
dec
dec
add
repnz
dec
jg
mov
dec
mov
and
in
std
iret
and
pusha
sbb
xor
jno
jno
outsb
daa
inc
and
ss
mov
add
stos
or
sbb
mov
pop
repz
loop
call
dec
mov
cmp
testb
fsubr
mov
out
pusha
mull
pop
cltd
mov
cmpsb
imul
mov
call
pop
insl
popa
cmpsl
xchg
popf
cmp
or
inc
out
pop
repz
sbb
fistps
jle
xchg
insb
cmp
push
das
pop
mov
xchg
mov
cmp
pop
popf
cmp
pop
repnz
int3
fiaddl
xchg
sbb
and
loope
mov
xlat
out
fcomp
inc
fldenv
sub
cmp
lahf
lock
xchg
pop
cs
outsl
aad
imul
aaa
test
mov
loope
std
repnz
pushl
lods
test
pop
jmp
and
cmpsb
in
rcrb
cmp
mov
push
inc
mov
imul
popf
add
insb
sub
sbb
jne
add
sbb
jns
jae
mov
daa
ljmp
pop
stos
pushf
int3
das
iret
pop
push
int
sti
sti
test
popa
testl
sbb
mov
inc
pop
ja
leave
xor
pop
cli
mov
in
and
shl
or
imul
aas
pop
jg
mov
sti
add
addr16
arpl
pop
adc
dec
pop
push
iret
jne
xchg
cld
aam
ljmp
jno
xchg
jl
mov
lock
jle
in
imul
jns
mov
xchg
dec
ret
xchg
sub
and
mov
fldenv
jne
lock
xor
loop
dec
xchg
aam
sub
insl
subl
test
int
inc
jmp
and
cmp
sbb
cwtl
stc
push
mov
out
cs
js
scas
adc
int3
dec
adc
jnp
inc
nop
adcl
out
jmp
fsubl
jp
lods
push
dec
or
out
hlt
pop
pop
movl
loop
mov
sbb
mov
imulb
movsb
and
lock
lea
ss
fidivl
mov
fistpll
mov
fcomps
outsl
shlb
jmp
cmpsl
xchg
push
mov
push
loopne
jae
mov
inc
mov
movsb
out
cltd
dec
mov
push
and
or
outsl
imul
mov
popf
aam
pop
call
call
testl
dec
scas
sti
adc
mov
frstor
clc
fdivl
push
cmpsl
push
jp
pop
enter
mov
ljmp
mov
shlb
push
mov
fwait
jo
mov
mov
pop
aad
in
sbbl
mov
mov
mov
cmpsb
scas
int
stc
loop
or
movsl
idivb
add
rol
mov
lods
call
outsl
jle
cmp
ja
lds
xchg
bound
inc
popf
cmp
jns
fdivr
outsb
jae
js
and
push
insl
inc
lods
dec
repnz
add
mov
sbb
stc
jae
js
mov
rol
test
lds
push
lock
fwait
cwtl
aam
sub
sbb
nop
clc
add
pop
arpl
add
cmp
lahf
or
pusha
dec
cmp
pop
sub
push
add
inc
or
adc
daa
ja
add
outsb
mov
rorl
mov
push
sub
iret
add
cmp
mov
das
inc
mov
sub
mov
xchg
ds
cmpsb
and
cmp
divb
or
push
and
cmp
pop
jae
cmpsl
mov
insb
cmpsb
addr16
push
out
mov
push
and
test
test
dec
cmp
and
xchg
mov
adc
xchg
or
push
test
into
lea
mov
xlat
sub
xchg
in
call
sahf
ffreep
xchg
lods
repz
call
xor
and
lcall
xor
mov
into
loopne
adc
xor
push
lods
or
push
jb
leave
js
push
fidivrl
and
and
popa
xchg
test
ljmp
es
sahf
mov
pop
lcall
in
adc
cmp
fwait
divb
enter
nop
jae,pt
ss
xchg
fnstenv
mov
popf
dec
jg
adc
in
loopne
pop
cmp
out
cmpsb
clc
adc
xchg
jo
icebp
cli
or
rcrb
sub
push
lahf
or
in
dec
mov
cmp
mov
xchg
sbb
scas
jno
jmp
push
lcall
lret
insl
push
add
cwtl
enter
xchg
add
pusha
shrb
sub
jecxz
dec
lcall
inc
and
out
aad
iret
mov
insb
adc
cmpsb
jge
xchg
or
insb
pop
js
cs
push
lret
or
mov
in
or
iret
filds
sahf
cmp
pop
jo
add
out
add
sbb
test
push
sbb
int
aas
pop
lods
jns
jp
pop
xor
aas
mov
hlt
pop
jmp
cvtdq2ps
adc
pop
cmp
pop
aam
adc
pop
push
cld
or
push
fwait
loope
not
jns
inc
or
je
adc
inc
jns
mov
in
mov
sbb
push
cltd
add
loopne
int3
pop
pop
jecxz
inc
add
std
mov
sbb
imul
fsubr
subb
js
sub
iret
andb
and
test
cmpsl
in
xchg
xchg
xchg
fildll
cld
mov
fcoml
mov
imul
adc
in
sub
jge
inc
addl
cli
dec
adc
xor
cmc
jo
push
daa
fs
push
xchg
negl
insl
mov
ja
jno
cwtl
mov
push
call
pop
icebp
vmread
sti
xchg
xchg
stc
and
jge
cld
in
xor
add
rorl
add
clc
insb
add
jae
ficomps
loop
xchg
test
xor
inc
cmpl
loopne
stc
and
je
inc
inc
jg
fistps
fwait
movsb
cmpsl
xlat
push
js
cmc
and
stc
jne
xchg
cmp
mov
jle
out
pop
mov
or
pop
into
pop
dec
ret
repnz
xchg
insl
mov
or
xchg
pop
adc
mov
sarl
ret
or
inc
and
imul
sbb
je
xor
push
pop
stos
dec
daa
dec
dec
mov
aaa
inc
cmp
in
sub
gs
movsl
jae
pop
lods
pop
arpl
xchg
ds
out
fstpl
jns
ret
add
popa
cwtl
mov
push
push
or
add
ret
je
mov
lret
sbb
inc
das
mov
in
cmpsl
es
out
xchg
dec
shll
mov
adc
xchg
pop
stos
cli
outsl
loopne
cmc
test
lret
fnsave
out
sub
xchg
outsl
adc
aad
mov
or
pop
push
aaa
ljmp
cs
jmp
in
adc
insb
sub
sub
ds
mov
add
jae
idivl
in
out
test
outsl
mov
and
fwait
push
icebp
jbe
int
mov
inc
push
adc
arpl
fsubs
inc
pop
sbb
ja
cld
out
inc
sub
jg
sub
out
lock
std
bound
jl
mov
int3
adc
push
sub
js
ss
leave
pop
shl
add
jnp
lret
cmp
in
outsb
jge
aam
call
paddsb
inc
sub
lds
or
jle
nop
pop
pushf
popa
xor
sbb
rol
push
into
scas
push
lahf
movsl
insl
outsb
mov
push
test
xchg
add
iret
stc
daa
cmp
and
fmuls
outsb
sahf
xchg
or
int
cli
ds
mov
or
mov
dec
stos
divb
xchg
loope
add
dec
sbb
mov
cwtl
jmp
out
jae
mov
jmp
js
fsubr
loopne
out
mov
and
or
in
fdiv
das
lock
mov
sbb
adc
mov
mov
xorb
xor
jno
dec
sbb
lret
mov
in
push
inc
add
add
cltd
xchg
in
or
cld
test
xchg
or
loope
inc
out
xor
aam
mov
in
push
jg
aas
cmpsb
fs
lret
lods
mov
and
pop
subl
and
pushf
and
imul
stc
popa
imul
fiaddl
mov
rol
dec
or
dec
pop
or
loopne
jecxz
ljmp
aas
dec
pop
add
les
fs
jl
rcl
pusha
cwtl
push
pop
mov
add
add
or
mov
mov
pop
leave
negl
cs
outsl
nop
out
rol
std
adc
arpl
xchg
pop
lock
popa
adc
stos
jmp
repz
mov
xchg
gs
jnp
lret
dec
inc
xchg
int3
lock
mov
hlt
addr16
stos
inc
repz
fwait
lcall
ljmp
adc
fdivl
stos
test
add
inc
push
pop
mov
out
cmp
mov
xor
loopne
rol
or
or
sbb
jno
push
xchg
insl
ja
push
jne
lret
cmp
adc
call
jecxz
outsl
loopne
xchg
je
jo
mov
aad
mov
aaa
fnsave
mov
in
or
rcrl
xor
repz
ss
mov
sarl
rol
subl
and
and
xchg
cmp
mov
out
movsb
fstpt
pusha
sahf
lahf
push
ror
mov
push
pop
fimull
pusha
add
ja
or
das
sbb
cmp
xor
xlat
out
std
pushf
fmull
mov
adc
test
out
jg
lret
mov
inc
call
andb
push
stc
cmp
push
xchg
push
ljmp
pushl
pop
jecxz
fcomps
jbe
add
push
jp
xor
lea
cli
lret
mov
xor
inc
in
imul
out
jb
cmpsl
orl
cmp
xor
hlt
add
movb
lcall
and
int3
cwtl
repnz
mov
shlb
lahf
mov
call
pop
and
mov
mov
push
ret
mov
icebp
add
jge
pop
mov
or
dec
fld
aad
or
inc
xchg
lock
inc
adc
push
test
jmp
xor
dec
rcl
mov
mov
pop
push
dec
aam
ja
push
sbb
inc
lods
add
iret
aas
in
push
stos
adc
popf
std
je
jle
push
aam
push
mov
cmpsb
mov
xchg
sub
xor
push
repz
subl
cmpsl
fimull
nop
inc
insl
adc
mov
inc
mov
test
xchg
fnstsw
repnz
stos
xchg
jmp
imul
add
mov
fstps
out
pop
notl
arpl
pop
enter
sbb
or
dec
pushf
xor
push
movsl
sbb
or
and
test
pop
loopne
xorl
mov
add
jmp
in
xor
mov
sbb
cltd
adc
sbb
jmp
frstor
in
sub
das
mov
mov
mov
jnp
sub
fisubrl
test
dec
pop
jno
lahf
cmp
stos
rcl
cmp
nop
imul
sbb
push
xchg
push
insl
adc
mov
push
or
jae
push
test
sahf
shll
test
fcoms
lcall
inc
ljmp
and
rolb
mov
sbbl
popf
mov
sbb
or
mov
jle
pop
fcompl
cwtl
inc
popa
ds
jns
out
mov
lods
mov
xor
push
adc
jo
dec
inc
out
cmc
inc
inc
and
fcoms
fnstsw
push
xor
pop
ss
iret
and
xchg
stos
das
fdivl
fs
fxch
fdivrl
pop
inc
mov
sub
add
jg
jo
xlat
in
push
lds
inc
dec
inc
mov
adc
das
mov
jmp
sbb
push
and
sti
pop
ljmp
mov
add
ret
ret
sti
movsl
sub
or
insl
inc
mov
pop
addr16
mov
scas
mov
gs
int
shl
repnz
loope
int3
mov
pop
jo
dec
mov
pop
mov
adc
je
movsb
fs
mov
and
mov
in
lahf
xor
pop
ret
fcomps
jae
stos
into
adc
movsb
scas
ficompl
movsb
aad
out
out
test
inc
mov
pop
sarb
cli
adc
es
xor
push
xor
xor
pcmpeqw
dec
push
push
or
hlt
mov
popa
imul
fstpt
lret
scas
mov
xchg
mov
add
inc
cmc
jp
or
pop
dec
popa
insb
stc
rorb
jo
mov
adc
or
imul
cltd
push
adcb
imul
jo
pushl
enter
repnz
pushf
out
cmp
or
movsb
cmpsl
jge
sub
sahf
add
cs
incb
pop
pop
inc
test
popf
jo
mov
push
loopne
dec
mov
shlb
mov
out
mov
sub
mov
pop
or
inc
xchg
push
loope
mov
push
aad
xor
outsb
dec
mov
ljmp
loopne
jno
lret
fwait
lea
cmpsb
pushf
scas
sbb
or
pop
test
jns
mov
shll
xchg
cli
adc
cs
pop
fisubrs
sub
mov
pop
push
cmp
fwait
arpl
push
pop
pushf
aaa
in
sub
jne
xlat
fbstp
loope
adc
sahf
inc
into
imul
mov
lock
shrl
sub
jle
cltd
popa
dec
push
jmp
sbb
in
inc
push
ret
lret
sbb
pop
mov
sub
rcrl
lret
aam
sub
sbb
jb,pt
jp
jnp
das
pop
and
jnp
int
sbb
pop
shlw
cmp
outsl
cmpxchg
scas
cmp
sub
xor
push
add
scas
ret
loop
or
repnz
addr16
add
pop
vhsubps
dec
imul
ss
data16
into
in
das
cmp
xchg
cld
jmp
insl
in
inc
inc
das
int
lea
movsl
add
test
sbb
mov
outsb
sti
mov
addr16
stos
jmp
int
imul
fisubrl
push
dec
std
test
insl
and
mov
or
cmp
cltd
xchg
inc
cli
ficoml
and
inc
out
out
add
aaa
jle
jmp
ss
leave
aad
loopne
cmp
add
out
pop
iret
cmp
not
mov
int
xchg
xchg
sub
nop
and
dec
push
sub
iret
dec
ret
dec
jno
adc
xor
cmpsl
loope
mov
enter
mov
xchg
jg
movsl
setno
push
or
xchg
xchg
in
setbe
aaa
add
jns
popf
and
sahf
lock
ss
adc
xor
ljmp
cmp
or
jno
outsl
shr
int
pop
jnp
mov
in
pop
jmp
xchg
cmpsb
push
jb
dec
jae
push
jbe
or
push
fsubl
and
ja
ljmp
orb
push
adcb
mov
std
cmp
aam
fcomip
xchg
out
dec
cwtl
add
fcoml
outsl
jp
test
add
sahf
sub
loope
testb
pop
pop
pop
cmp
mov
dec
pop
and
ljmp
repz
mov
mov
add
xchg
dec
fwait
in
out
loop
cmc
fxch
in
jle
out
push
mov
ja
mov
xchg
sbb
lock
inc
fisttpl
lock
lahf
negl
stc
cs
add
xor
pop
jmp
sbb
jmp
je
andl
push
or
sarb
pop
pop
cwtl
std
adc
mov
jb
rcll
loop
bound
ret
adc
fs
or
ret
out
xchg
shr
sub
cmc
rcrl
int
or
jl
andb
insb
push
int3
add
sarl
dec
iret
fwait
sub
sub
jbe
push
push
repz
push
incl
xchg
ds
lcall
insl
inc
push
mov
aas
fcomi
sub
mov
lods
sbb
addl
sti
fnstsw
and
fildll
icebp
ljmp
aam
sbb
adc
add
fistps
jg
mov
cmp
insb
xchg
mov
sbb
cmp
sbb
adc
dec
sub
mov
fnstsw
and
aas
push
mov
mov
jecxz
mov
movsb
sub
ficompl
sub
mov
and
test
repnz
hlt
fiaddl
jecxz
adc
push
mov
insb
or
loop
jno
cmp
pop
mov
fwait
out
dec
leave
mov
mov
mov
inc
xor
je
aad
iret
dec
inc
add
loop
pop
out
lret
icebp
fnstcw
in
std
movsl
pop
dec
inc
cli
lret
add
lahf
loop
or
es
push
cmp
inc
pop
pop
sti
pop
inc
sub
xchg
jge
or
pop
loopne
cli
mov
jno
cmpsb
push
push
mov
mov
sub
xor
xchg
test
cmp
push
push
mov
aaa
aam
or
jp,pt
shlb
in
mov
popf
sahf
push
rclb
cmp
popa
inc
jne
pusha
scas
ror
or
in
push
xor
inc
loopne
jae
mov
sbbl
repnz
lods
iret
push
imul
ja
mov
gs
pop
inc
pop
sub
mov
push
mov
xchg
out
lret
outsl
test
and
hlt
lods
push
sbb
jb
movsl
adc
imul
imul
xchg
push
sub
xorl
pusha
mov
jb,pt
outsl
out
stos
or
sahf
pop
cs
push
xor
sub
hlt
mov
pop
mov
cmp
into
das
cmp
dec
jg
mov
std
add
out
pop
roll
mov
in
mov
nop
nop
or
jo
xchg
cmp
xor
aam
xor
inc
popf
jae
in
mov
ret
mov
adc
das
dec
lods
add
adcl
mov
loop,pt
dec
frstor
dec
adc
cld
mov
stc
aam
jmp
cmpl
jnp
pop
mov
pop
jp
pop
adc
repnz
sti
and
loope
nop
jmp
add
xchg
aam
mov
xor
jnp
pop
sti
push
pushl
push
or
aad
idivl
xchg
jbe
cmp
mov
repnz
dec
lret
ds
jg
ljmp
arpl
inc
ret
rcrl
movsb
dec
iret
fadd
scas
dec
popa
or
jl
jnp
adc
push
add
test
in
xor
push
sbb
dec
leave
out
dec
and
pushf
mov
aas
cmp
ds
nop
imul
cmp
inc
in
push
cmp
pop
loopne
daa
push
mov
push
pop
fisubl
xor
cli
mov
xchg
or
and
mov
or
ljmp
out
insl
ds
leave
shr
push
mov
or
dec
xor
imul
push
aam
pop
call
cmp
mov
push
out
pop
jp
fcmovb
mov
mov
or
pusha
and
inc
aaa
repz
xor
jp
sahf
mov
mov
cmp
mov
outsb
add
xchg
sub
mov
movsb
test
sbb
aad
and
hlt
add
fiadds
dec
adc
lcall
add
popf
aad
inc
inc
imul
jb
sbb
mov
mov
jns
push
mov
xor
sub
mov
shl
cmp
or
sahf
push
xor
mov
adc
xor
xor
sub
sub
push
les
jnp
cmp
jo
adc
jo
adc
cmc
pop
out
fstpl
xchg
cltd
sub
nop
fistps
xchg
es
insb
popa
jmp
fcoms
movsl
imul
jecxz
xor
rolb
cmp
mov
push
fildll
mov
push
sbb
jmp
pop
push
pop
notb
xchg
xor
xchg
jge
out
clc
mov
dec
in
test
addl
repz
cmpb
pop
outsb
xchg
pop
gs
push
or
mov
mov
lea
repz
std
dec
call
dec
aad
test
aam
sub
lods
mov
lret
insl
mov
push
outsb
jge
out
iret
push
inc
scas
push
test
les
mov
and
sub
or
test
mov
push
arpl
bound
loope
icebp
lock
es
dec
jbe
or
inc
sbb
in
add
or
dec
xor
and
inc
fmull
adc
cwtl
mov
push
ret
push
test
insb
sti
mov
clc
sar
add
push
mov
sbb
xor
jg
sub
pop
aam
lret
pop
dec
inc
fnstsw
lds
fwait
adc
movsl
sub
sbb
cmpsl
mov
jge
jecxz
jle
ja
loope
xor
jne
or
cmp
in
repnz
pop
cwtl
inc
mov
aas
repz
sub
ret
icebp
jb
clc
jecxz
push
jns
inc
aas
mov
xchg
dec
jge
or
pop
fnstsw
lods
mov
and
je
and
jnp
sahf
lock
mov
xchg
jp
jnp
psrld
dec
pop
sbb
test
xor
cmpsl
cmp
push
test
and
nop
push
jmp
dec
push
push
test
shlb
jne
popa
mov
ja
jb
push
mov
call
cmpsb
je
cld
xor
add
pop
adc
lahf
jmp
outsb
mov
loope
sbb
lret
xor
xchg
lods
je
dec
ljmp
hlt
aam
and
lret
cmpb
cmp
ja
pop
imul
add
mov
sbb
mov
out
adc
mov
addr16
inc
jns
or
sub
arpl
lods
fistl
or
out
mov
jne
imul
movsl
jo
movsb
loope
mov
enter
enter
or
scas
xor
adc
loopne
xor
adc
in
imul
add
leave
leave
adc
fimuls
jle
aad
ljmp
dec
rorl
fldenv
stc
push
sub
sbb
dec
and
out
decl
into
jp
scas
jnp
adc
xchg
sbb
cmc
or
inc
and
clc
cli
lcall
aam
repnz
sub
shlb
insb
je
mov
stc
rorb
pop
movsb
stos
pop
jne
and
lods
addl
fs
pop
cwtl
dec
push
out
lea
stos
push
pushf
jne
imul
ret
jne
iret
les
aam
out
lret
aaa
arpl
jnp
aad
popa
and
xor
xor
movsb
mov
cli
das
les
repnz
mov
mov
mov
sbbb
faddl
mov
xlat
mov
movsl
popf
mov
jnp
aas
and
ret
cmpb
cmpsl
sub
leave
scas
jmp
and
adc
ficompl
sbb
loop
mov
pop
pop
adc
daa
push
mov
mov
jne
jnp
mov
cltd
pop
mul
mov
lret
jge
jns
mov
mov
mov
mov
or
xchg
add
stc
daa
xor
mov
aam
mov
lcall
or
pop
or
std
sub
out
jmp
lods
or
loopne
pop
jmp
lret
xor
cwtl
lock
adc
test
shll
repnz
imull
insb
fnsave
inc
fmull
lret
mov
mov
xchg
add
adc
dec
aaa
fwait
in
cmpsl
cmp
dec
in
pop
out
jbe
not
mov
test
and
inc
lahf
and
out
adc
scas
addr16
pop
push
cmp
out
pop
cmpsb
xor
emms
fdiv
das
imul
jo
fisttpll
cmp
adc
fidivl
inc
popa
stos
dec
lock
addr16
lahf
dec
fisubrl
mov
push
adc
decb
shl
scas
fimuls
add
lcall
callw
lods
in
and
scas
cmp
push
test
je
mov
loopne
test
icebp
cmp
bound
pop
push
jae
jecxz
fildll
test
mov
mov
dec
iret
sbbl
dec
cmpsl
shrl
cltd
pop
enter
leave
xor
je
iret
fcmovnb
mov
shl
lret
aad
xchg
clc
test
add
ss
cmpsb
pop
add
fsubrs
xor
push
fisttpll
xor
push
lea
jnp
je
inc
pop
push
jo
dec
push
scas
mov
stos
push
fs
stos
ret
inc
adc
cltd
pop
and
fidivs
mov
les
sahf
and
fdivrl
in
test
xor
mov
push
sbb
fsts
pop
push
inc
popa
cmp
mov
in
into
push
test
cwtl
mov
cmc
loopne
repnz
or
xchg
cmpsl
mov
loop
sbb
pop
or
adc
pop
pop
pop
or
mov
mov
imul
cmp
adc
push
outsb
jp
outsl
sbbl
pushf
mov
cmpsl
loopne
mov
cs
imul
sti
outsl
fnstenv
jmp
in
jmp
lcall
push
and
xor
add
insw
sub
rcrl
sub
inc
and
jge
cmc
test
xor
jns
pop
cmp
inc
test
cmpsb
into
xor
outsb
add
fdiv
mov
mov
xor
hlt
pinsrw
adc
out
cmp
add
pop
iret
scas
stos
sub
shlb
std
cmp
xchg
or
fdivrs
repnz
sbb
and
daa
jns
negl
scas
in
and
jmp
std
jl
inc
push
push
xorb
xchg
test
dec
mov
into
pop
mov
movsb
add
aad
add
popf
xchg
mov
test
xlat
cli
push
sar
je
jl
jno
mov
and
mov
loopne
aad
add
xor
fstpt
add
pop
push
test
sub
or
push
or
inc
jmp
ficomps
movsb
addr16
outsl
mov
sub
ret
pop
mov
dec
mov
into
movsb
iret
mov
lret
push
cmp
and
cmp
cmpb
xchg
bound
jle
inc
inc
enter
xor
iret
jmp
in
dec
cmpsb
add
and
pop
test
xor
mov
scas
adc
jae
dec
dec
or
mov
or
xor
in
decl
jns
jbe
ret
and
aaa
cld
movsb
cmp
dec
fs
int
xor
cmp
nop
scas
add
sbb
push
mov
cmp
addr16
adc
add
or
sbb
push
xchg
pop
lods
dec
or
out
mull
mov
and
cmp
mov
dec
add
mov
jg
jmp
sub
pop
xchg
cmp
out
cmp
cmp
pop
pop
sbb
daa
fildl
bound
or
or
int
cmp
dec
xchg
sbb
or
out
and
jns
inc
lret
and
int3
inc
mov
adc
nop
cmp
or
sarb
dec
das
mov
mov
sbb
mov
jbe
xor
add
cmpb
out
cld
jp
xor
add
mov
push
mov
imul
test
test
gs
adc
add
filds
lret
jbe
arpl
lahf
aas
inc
dec
push
aaa
loope
pop
cmpsb
and
cmp
arpl
das
pop
push
call
push
stc
jno
leave
pop
lret
jns
or
jns
push
stos
gs
call
inc
dec
mov
rolb
xchg
xchg
enter
push
jg
mov
dec
lods
add
mov
mov
lock
pop
dec
push
movsl
and
jge
or
cmp
lods
xor
fdivs
popfw
push
pop
xchg
push
push
pushf
and
test
dec
inc
clc
push
pop
lret
adc
mov
pop
test
std
rorl
mov
mov
lcall
cwtl
mov
js
les
mov
std
xor
mov
sub
and
sub
dec
mov
std
repz
mov
mov
push
enter
xchg
inc
or
push
test
int
aas
and
mov
push
push
faddp
movb
movsl
addr16
sbb
outsl
fwait
repz
idivl
push
mov
sub
mov
mov
and
in
pop
push
adc
push
jns
push
aam
dec
mov
into
aaa
pop
or
gs
out
test
or
jle
push
inc
cli
mov
push
rorl
dec
lret
shll
mov
dec
int
and
fwait
cwtl
test
and
out
repz
fadds
inc
lcall
mov
dec
lcall
xchg
push
out
in
popa
cmp
movsb
ds
mov
cmpsl
push
xchg
scas
das
mov
int
adc
pushl
pushf
scas
ret
inc
in
test
mov
push
cmp
sahf
int
mov
push
lret
jbe
xchg
jb
inc
pop
jecxz
icebp
mov
stc
mov
sbb
xor
sub
add
test
dec
pop
mov
push
xor
sbb
idiv
push
sbb
hlt
call
icebp
test
rcrb
inc
aaa
xchg
lods
gs
pop
or
test
and
inc
lret
xor
leave
ret
mov
ljmp
movhps
add
mov
add
cmc
cs
flds
neg
xchg
and
cmp
icebp
addr16
jbe
inc
ss
into
jge
mov
das
outsl
popf
mov
clc
dec
hlt
les
call
fsubs
inc
ss
scas
push
mov
fisubl
push
mov
jnp
pop
push
mov
nop
mov
add
mov
sbb
jbe
xchg
cs
sahf
pop
cmp
insl
inc
add
xchg
ret
icebp
sahf
decb
mov
jg
ret
cmp
test
xchg
push
xchg
gs
nopl
mov
mov
iret
push
out
and
xchg
scas
cmp
je
and
add
cltd
adc
addr16
xchg
enter
and
sbb
xchg
cwtl
aam
push
dec
push
fs
stos
adc
adc
cmp
cmp
inc
adc
mov
jp
jne
mov
repnz
scas
or
adc
sarb
pop
cmc
in
mov
lds
xor
pop
pop
add
xchg
push
cmpsb
mov
sub
cmp
push
mov
sahf
adc
int3
xlat
jl
adc
cmp
sarb
hlt
xor
lds
xor
les
fucomi
adcl
rcrl
hlt
cmc
push
lcall
lahf
add
mov
jns
fnsave
fwait
jge
dec
test
loop
nop
shrb
int3
mov
test
push
cli
mov
and
aaa
bound
insb
xchg
jbe
pusha
pusha
cli
pop
cmp
call
push
ret
mov
fmul
jae
hlt
or
dec
inc
xor
insl
in
pop
and
fdivrs
leave
xchg
push
xor
scas
mov
std
leave
push
fimuls
or
dec
hlt
aaa
or
shrb
test
xor
mov
cmp
insb
push
aam
outsl
push
jle
in
mov
cmp
lds
add
sbb
int
lahf
jg
sub
add
std
push
mov
mov
xchg
jmp
clc
push
xchg
jl
xchg
sbb
clc
mov
push
scas
and
int
dec
leave
outsl
mov
mov
xchg
shrl
mov
loop
sbb
jp
out
fsqrt
jns
paddsb
mov
dec
ljmp
adcb
inc
dec
dec
mov
pop
aam
or
aad
add
test
push
aaa
cmpsb
nop
fs
sub
lods
in
test
lahf
mov
xor
xchg
push
lds
lods
mov
hlt
int
add
push
xor
jmp
rcll
lods
movsb
arpl
dec
cs
ljmp
or
and
or
cmpl
lret
adc
jns
mov
ss
mov
jne
lret
xchg
mov
daa
clc
ret
sbbl
scas
dec
adc
imul
hlt
xor
inc
fbstp
dec
add
pop
arpl
test
mov
mov
pop
sbb
xchg
ret
outsl
jle
addr16
add
je
push
xor
jecxz
sbb
push
jno
std
out
dec
or
push
repnz
mov
les
or
shlb
ds
jmp
cld
or
test
adc
movsb
push
sub
xchg
pop
mov
repz
aad
hlt
outsb
negb
xor
fsubr
jae
sbb
and
pop
imul
stos
int
out
xchg
or
cltd
sti
cmp
mov
aaa
pop
lods
mov
jge
mov
adc
mov
adc
sub
shr
push
pop
adc
push
lcall
rorb
xchg
int
jecxz
mov
leave
mov
out
cmp
rclb
cmp
add
pop
jbe
icebp
add
mov
cmp
mov
movsb
pop
stos
fnsave
je
add
push
jle
int
daa
fcompl
add
lcall
push
movsb
push
out
repnz
imul
and
pop
mov
outsl
sbb
scas
and
fcomps
xchg
loopne
push
dec
cmp
notb
add
and
lods
in
xlat
stos
sub
push
cmp
adc
rcrb
les
repnz
lcall
aam
ljmp
xchg
cmpsl
mov
daa
ja
shrb
or
sbb
push
out
shr
lods
inc
xor
mov
xchg
mov
pop
out
call
arpl
sub
add
aam
push
ficompl
in
fisubs
int3
inc
imul
add
and
movsl
push
add
stos
test
adc
fiadds
mov
jns
mov
cmpsl
rcrb
shll
dec
or
or
jle
inc
fldl2t
insb
rep
push
pop
dec
adc
cmp
pop
sbb
mov
stos
int3
jns
in
sarb
popa
dec
enter
mov
in
mov
test
rcrl
in
mov
pop
jle
jle
xchg
inc
cmpsb
bound
jmp
fimuls
scas
fwait
sub
inc
push
mov
sub
sahf
cmp
loope
push
dec
pop
inc
jp
mov
or
daa
jl
push
pop
jae
sbbl
sti
ss
inc
pop
mov
jb
shlb
sahf
ja
push
push
xchg
je
shll
stos
nop
les
sub
lods
adc
push
imul
and
adc
and
fst
int
icebp
mov
xor
loopne
das
push
ret
ljmp
dec
mov
jle
shlb
cmpsb
adc
push
push
xor
jl
jmp
imul
xor
and
daa
jmp
cmp
xor
aad
lcall
xchg
sub
call
jge
stos
mov
sub
push
out
and
lcall
movsl
dec
or
mov
hlt
out
fnsave
dec
push
push
in
sub
pop
sbb
inc
and
dec
sub
jge
mov
cmp
xor
add
nop
outsb
xor
mov
cltd
sub
pop
jnp
inc
fwait
jo
stos
dec
arpl
or
ret
mov
js
cmp
pusha
sub
je
sarl
scas
out
inc
pop
outsl
stos
and
cltd
popa
mov
or
sbb
dec
mov
jge
mov
push
mov
das
push
push
jp
push
test
mov
adc
dec
icebp
out
dec
lea
inc
mov
mov
gs
popa
xchg
fdivrl
adc
and
inc
call
sti
shl
cmp
nop
push
push
idivb
xor
jge
sub
out
cmp
fwait
xor
cld
mov
cwtl
jp
and
jae
and
mov
into
jecxz
lods
adc
scas
adc
pushf
adc
lahf
jge
mov
lretw
nop
out
cltd
sub
ja
xchg
stos
out
dec
sub
add
sbb
lock
cwtl
dec
out
jae
mov
jnp
pop
pop
xor
stc
inc
ja
pop
arpl
sub
push
enter
mov
sub
sub
pusha
add
add
cmp
stos
mov
xchg
das
jg
xchg
push
in
cmpl
sub
les
cmpsb
push
pop
mov
outsl
addl
mov
subl
insl
dec
and
push
je
xorl
cmpsb
xchg
dec
xor
push
jo
sub
jbe
dec
lock
push
dec
mov
xorl
and
push
cs
sub
mov
push
roll
add
daa
add
mov
dec
add
es
sbb
aam
imul
daa
push
mov
push
inc
cmp
lea
sub
out
das
in
data16
cmp
jns
cmp
scas
call
sub
data16
icebp
mov
mov
hlt
mov
mov
jl
call
imulb
cmp
jns
pusha
pop
lock
rcll
popf
lea
jb
jbe
cld
jno
data16
stos
sub
push
push
loope
hlt
cmp
stc
or
lret
pop
xchg
add
mov
pusha
dec
sub
in
repz
ret
iret
cmp
cs
and
insb
loop
pop
adc
rclb
pop
jecxz
adc
loop
mov
push
dec
or
out
iret
pop
movsl
xchg
push
pop
insb
xchg
inc
filds
dec
repz
or
icebp
xor
hlt
or
mov
xchg
bnd
stc
and
sbb
mov
xchg
addb
cld
xor
std
add
les
andl
fisubs
addr16
inc
popw
mov
push
mov
lods
inc
pop
in
or
out
adc
jecxz
ret
pop
es
adc
insb
fidivrs
fyl2x
pop
adc
repnz
loopne
ret
jnp
push
jmp
ss
pop
ror
xchg
adc
ret
mov
jle
jmp
jp
or
mov
sti
adc
cmp
fdivrl
mul
mov
shrb
loop
out
jl
jle
test
jge
jo
mov
and
add
mov
fwait
int3
jg
fstps
sahf
dec
ss
cli
loopne
ljmp
xor
sub
mov
fsts
cmpsb
outsb
adc
sbbl
cmp
popa
push
int3
jg
nop
es
jbe
xchg
jbe
mov
lret
movsl
xor
pushl
iret
mov
lcall
adc
insl
fs
out
dec
sbb
ss
scas
lret
xchg
pop
sub
jl
add
clc
sub
jecxz
and
xchg
dec
xchg
jle
dec
mov
push
sbb
ret
pushw
fwait
sbb
sahf
jg
and
push
cmp
ljmp
xor
adc
jmp
cmp
icebp
loop
mov
adc
inc
fsubl
and
hlt
js
stc
cmp
popf
push
daa
jnp
inc
movsl
mov
lds
pop
in
fstl
decl
inc
push
xchg
arpl
insb
pop
mov
cmp
push
pop
stc
xchg
or
add
dec
dec
push
mov
movsl
lret
pusha
mov
notl
adc
loop
xor
sub
xor
mov
mov
pop
inc
inc
ds
add
xchg
std
jle
xchg
cli
in
jae
xor
inc
imul
test
lret
add
mov
and
mov
inc
pop
cmp
test
cmpsb
stos
push
mov
lcall
mov
fdivl
cmc
ss
int
dec
or
cmpsl
dec
ss
or
jg
lds
out
out
scas
mov
push
movsb
pushf
mov
pop
adc
inc
or
jb
pop
test
fcoml
add
push
mov
ja
dec
mov
push
mov
fs
sub
fldt
xor
push
pop
inc
mov
adc
addr16
push
and
ret
movb
or
mov
popa
inc
sub
hlt
int3
sbb
cltd
fwait
inc
shl
decb
fmull
add
rcr
roll
sub
stos
pop
aad
jo
mov
roll
xchg
push
mov
fidivrl
cltd
pop
sbb
subb
pop
dec
inc
clc
shlb
mov
jnp
cli
xor
cmp
pop
dec
mov
pop
sbb
arpl
jb
shrb
fcoms
xchg
test
mov
pop
inc
mov
mov
dec
adc
test
mov
sbb
rcll
adc
cmova
pop
xchg
pop
pop
ss
xchg
int3
das
push
dec
cs
xchg
jns
js
sbb
mov
repnz
add
inc
repz
jo
mov
sub
mov
and
push
sub
add
sbb
sub
cltd
rcl
adc
xchg
pop
adc
pop
push
and
push
mov
sbb
jge
adc
and
pop
jmp
mov
inc
out
inc
cli
sti
mov
sarl
mov
shlb
or
out
xor
cmp
xchg
loop
mov
sub
jp
hlt
leave
imul
out
loopne
push
jb
mov
sub
push
cmc
jge
jbe
test
movsb
sub
inc
fistps
mov
mov
inc
iret
addr16
cmp
das
cmp
mov
xor
pop
push
rcll
fstpl
out
fldt
push
dec
pop
xchg
dec
clc
adcl
lods
outsl
inc
pop
jge
test
mov
mov
sbb
and
leave
jno
call
sub
pushf
jg
xor
das
cmpsb
data16
mov
sbb
pop
fsubs
rcrl
or
sbb
flds
pop
cwtl
push
and
in
dec
rcrl
mov
repnz
bnd
je
outsb
lods
pop
lret
push
cmp
cli
sarb
decb
ficoml
inc
cmp
add
pop
push
repz
imul
sub
popa
aas
insb
sbb
dec
mov
fisttpll
mov
iret
jns
out
in
test
cmovnp
adc
xlat
fdivrl
pop
mov
inc
jns
hlt
sbb
call
mov
stos
sub
aam
and
mov
jge
out
add
mov
mov
mov
stos
cs
addr16
inc
cmp
push
imul
arpl
dec
add
popa
rclb
cmp
fidivrs
or
scas
ljmp
ss
sbb
stc
mov
mov
adc
in
pop
iret
adc
sti
xchg
in
sbb
mov
xor
movsb
mov
sub
xchg
pop
mov
adc
rcr
push
push
push
sti
imull
pop
xor
sub
push
outsb
jmp
scas
test
lock
xchg
faddl
fistl
pop
jecxz
jno
mov
fs
push
mov
mov
out
loop
icebp
pmuludq
stos
sbb
sub
and
rclb
out
lret
dec
lahf
jp
cmp
and
insl
adc
dec
jle
jle
sbb
sub
je
std
out
mov
add
cmp
lods
jbe
fdivr
cmp
sbbl
ds
fdivs
ret
sbb
rorl
push
mov
pusha
xchg
sub
rcll
cmpsb
sti
push
inc
fcomi
add
xchg
bound
aad
sbb
dec
dec
ja
aaa
repz
roll
into
loop
mov
std
fs
sub
mov
cltd
out
push
dec
mov
sbb
add
gs
inc
push
xchg
out
cmp
jbe
fcmovnbe
sbb
and
movsb
cmp
inc
xor
jle
cmp
nop
pop
or
fwait
and
mov
push
out
mov
cmp
xor
dec
lods
nop
push
pop
push
xchg
mov
sbb
lret
fidivrl
inc
int
lret
or
and
jecxz
jmp
test
push
cmp
mov
sbb
imul
ret
ja
push
pop
inc
enter
mov
xor
jecxz
dec
xchg
mov
jo
dec
icebp
es
popa
mov
ljmp
repz
or
flds
dec
xchg
jns
dec
sbb
daa
fs
cld
or
testl
les
cmp
sub
daa
pop
pop
mov
sahf
jnp
jl
cmc
das
and
jl
int
out
sbb
hlt
dec
jnp
push
add
in
daa
stos
or
fstps
dec
dec
cmc
xchg
xchg
push
sub
loopne
push
notl
ds
cmp
mov
push
xchg
aad
pop
testb
andl
pushf
xchg
dec
sbb
inc
test
pop
in
push
mov
cmc
sbb
fabs
push
insl
xor
xor
mov
push
test
ja
push
jge
xchg
adc
aaa
mov
push
push
loopne
gs
cld
push
lods
movsl
mov
dec
lcall
enter
jno
add
insl
inc
mov
push
ret
xchg
dec
nop
xlat
dec
out
add
mov
pop
lcall
mov
call
shrl
adc
xchg
fisubrs
sbb
outsl
arpl
stc
imul
std
addr16
mov
jg
inc
mov
cmp
inc
orl
inc
add
xchg
jno
ficoml
mov
mov
jne
mov
sbb
inc
jne
jmp
std
cmp
push
ss
jecxz,pt
push
cmc
lods
lahf
cld
aam
in
dec
mov
shr
stc
add
lret
addr16
andb
nop
insl
sti
pushl
imul
add
mov
mov
cltd
dec
push
ja
iret
addr16
in
std
cmp
push
mov
js
iret
push
out
ljmp
iret
mov
in
mov
pop
mov
jp
xchg
ss
outsb
adc
push
lods
daa
cltd
mov
add
jo
adc
test
push
cmc
pop
cmp
xor
jno
les
call
in
addr16
stos
negl
mov
shlb
test
sub
fsts
js
out
and
mov
insb
test
movsl
jecxz
sub
adc
outsb
insl
mov
ret
gs
sub
stos
outsl
incl
enter
pop
daa
xor
pop
into
std
jno
stc
outsl
xchg
pop
jne
aad
and
cmp
data16
cmp
pusha
push
or
adc
loopne
push
push
or
je
fwait
inc
pop
leave
in
pop
fsubs
cld
out
xchg
fstpl
and
aaa
enter
cmp
and
mov
cltd
cmp
xor
popa
stos
cmp
cmpsb
push
into
xorb
pushf
mov
cmp
cmpsb
pop
lock
adc
cmp
sar
out
xchg
mov
push
scas
pop
fidivl
sahf
jns
xchg
and
andb
inc
jae
mov
icebp
xchg
mov
cwtl
nop
push
daa
and
and
stos
add
inc
sub
inc
mov
inc
fs
cwtl
push
test
fstpt
mov
leave
sub
dec
pop
jbe
ret
sti
xor
jl
and
imul
sbb
ret
adc
aas
jbe
fsubr
xchg
sbb
push
sub
jg
shlb
mov
sub
lcall
nop
les
scas
or
imul
call
mov
jl
aad
ljmp
or
add
gs
outsl
cmp
data16
movsb
mov
popa
sub
xchg
add
adc
cmpsb
pusha
negb
insb
jne
mov
jle
cmpsl
dec
ret
adc
loopne
xchg
xchg
mov
push
leave
shll
sti
test
dec
test
push
sbb
jnp
sarb
test
xor
lret
leave
aad
adc
popa
mov
daa
aaa
mov
mov
jmp
sahf
iret
sub
jno
mov
fwait
jl
stos
mov
or
in
repz
shll
inc
jg
or
aaa
sub
jg
pop
adc
add
shll
lret
push
mov
daa
ljmp
jge
jmp
cmc
mov
or
lods
inc
jo
lret
cmpsl
icebp
flds
les
sahf
mov
daa
mov
push
xchg
les
repz
repnz
pop
aam
pop
adc
loop
dec
pop
add
leave
mov
cli
ret
mov
les
clc
cs
cs
jo
dec
mov
popa
mov
int3
mov
je
stos
sbb
jle
and
mov
mov
stos
cmp
in
or
inc
mov
adc
addr16
lods
inc
fimuls
fwait
inc
pushl
outsl
rorb
lret
dec
jne
aaa
pop
xchg
lret
icebp
std
or
mov
mov
inc
xchg
xchg
stos
popl
xchg
ljmp
sbb
ss
into
push
fisubrs
test
loope
and
cld
pop
insb
outsl
pop
cmp
mov
cmc
out
jl
test
pop
mov
stos
test
lock
ret
pop
xor
jo
pop
enter
fists
cmpsb
push
mov
iret
pop
sbbb
mov
fcoml
icebp
cmp
stc
fldcw
inc
mov
sbb
xchg
sub
pop
jle
stc
jns
hlt
xorb
dec
in
iret
ret
push
test
out
rclb
adc
and
pusha
mov
lret
test
inc
hlt
jmp
cld
or
loop
pop
lock
push
xor
sub
mov
loop
notb
push
das
jae
sub
jl
xchg
and
stc
pop
ficoml
or
jae
adcb
cmc
mov
aaa
pop
mov
mov
aad
rcll
sbb
std
fdivl
sub
push
or
mov
and
aas
push
mov
pop
xor
adc
lret
mov
push
mov
xchg
inc
inc
out
push
ja
loop
jns
xor
sbb
dec
and
test
lods
aam
cmc
addb
mov
hlt
mov
and
mov
in
pop
in
cmc
test
mov
into
stc
push
jge
into
inc
and
daa
mov
in
push
mov
andb
add
push
xor
push
mov
add
fistl
sbb
lahf
test
sub
movb
mov
and
or
cmpsb
jns
jle
or
and
add
cmc
mov
jo
push
fcompl
int3
repz
test
rol
inc
pushf
rcll
mov
pop
daa
mov
mov
xor
aas
test
mov
sbb
test
ds
xlat
sub
mov
ljmp
rorb
xlat
pop
push
jnp
lods
jae
sbb
repnz
ds
or
add
add
in
jmp
icebp
push
repz
push
test
int3
pop
push
fnstenv
or
jne
scas
cwtl
into
jb
adc
pop
in
std
fdivrs
es
mov
hlt
mov
xor
lcall
inc
inc
insb
cmovl
cmp
sbb
jp
jb
test
arpl
dec
dec
ret
sbb
jecxz
ss
inc
imul
add
lahf
pushf
jno
push
imul
out
sbb
and
push
mov
lds
inc
push
add
aaa
or
shrl
push
insl
xchg
sti
iret
and
sub
into
cltd
mov
pusha
lods
jmp
in
rclb
inc
cmp
cmp
pop
stos
test
push
pop
cmpsl
sbb
dec
sbb
sub
dec
call
in
pop
lahf
jbe
insb
adc
aaa
out
sub
mov
push
mov
test
fdivrs
popf
push
sbb
dec
loopne
in
adc
adc
and
fmul
sub
cwtl
roll
adc
sub
jp
out
mov
add
sbb
aad
sub
mov
xchg
jmp
sbb
and
sub
std
cli
xlat
add
mov
push
ss
pop
sub
je
sub
cmpb
cmp
mov
cmp
stos
ficoml
cmp
ss
fidivrl
sub
sbb
mov
mov
mov
in
sbb
adc
es
ds
mov
dec
jns
push
in
and
inc
xchg
cwtl
jne
cltd
out
dec
pop
jnp
jecxz
xchg
pop
clc
outsl
dec
in
out
popa
inc
or
out
adc
xor
sahf
mov
cmp
sub
inc
mov
sti
ja
jge
cmpsl
int3
mov
sub
out
insl
cmc
or
mov
sbb
insb
or
pop
lods
bound
jns
xor
mov
cmp
pop
jb
lds
xchg
dec
repnz
bound
jg
sbb
pop
jnp
pop
cmpsb
out
mov
push
inc
xchg
fstps
imulb
pop
sub
pop
arpl
xchg
into
dec
mov
test
test
jae
add
mov
std
pushf
add
fdivr
dec
dec
push
add
push
and
add
in
inc
mov
jbe
outsb
stos
ss
lret
insb
xchg
cmp
out
sub
imul
imul
lds
or
mov
fisubs
inc
jle
jne
das
xor
mov
dec
inc
dec
jb
pop
xchg
mov
lock
jl
sbb
lds
out
aam
mov
adc
mov
cwtl
jbe
or
push
xchg
xor
fisttpl
test
cwtl
scas
jno
lods
cmpsb
mov
test
sub
cltd
cmpsl
and
mov
jecxz
push
inc
jl
pop
into
jl
inc
and
xor
mov
xor
test
jnp
push
shrb
std
arpl
icebp
icebp
and
pop
inc
cmp
mov
les
movsl
mov
pop
hlt
out
dec
in
popa
jge
mov
jno
in
ret
push
popa
movsl
jl
ret
xchg
sbb
and
sub
sbb
rcll
mov
dec
jl
bound
push
dec
outsb
sbb
mov
sahf
into
adc
pop
arpl
rorb
orb
mov
lahf
ss
iret
in
mov
rcrb
pop
add
dec
scas
push
push
ds
dec
mov
into
or
adc
shlb
ljmp
movzbl
ret
lds
insl
add
dec
test
mov
test
push
cmp
mov
jg
cli
je
rolb
mov
xchg
cmpb
xor
jo
rol
add
test
inc
pop
xor
out
iret
lret
test
fucomip
mov
jbe
ja
push
or
fs
mov
sbb
or
lret
cmp
add
rol
js
out
addb
fcmovb
xchg
lods
iret
cmp
cmp
pop
and
push
cmc
dec
scas
pop
xchg
xchg
ret
xchg
and
ret
pop
mov
fistpll
cltd
sub
pop
icebp
add
jl
cmc
add
jmp
rcrb
cs
pop
mov
std
mov
cli
sub
push
adc
cmpsb
loope
loopne
mov
outsb
mov
out
sbb
repz
push
xor
pushf
es
sbb
inc
dec
fs
xchg
inc
repz
mov
pop
jg
cwtl
dec
adc
jg
loopne
add
and
sub
out
cmp
in
mov
ljmp
dec
jbe
xchg
adc
movl
and
das
mov
pushf
pop
add
xor
pop
shlb
add
mov
imul
sahf
inc
clc
inc
loopne
pop
insb
sub
or
into
xchg
sub
stc
out
xor
xlat
lea
sub
push
std
pop
lods
das
aam
fcomps
and
mov
jp
aaa
ret
add
addb
repnz
movsl
scas
xchg
sub
cmp
jnp
adc
inc
sarb
dec
rcl
outsl
and
jg
xchg
sarb
push
aad
xchg
push
sub
idivb
repnz
mov
stos
rclb
outsb
fwait
testl
jmp
repnz
jmp
mul
cmpsb
dec
jno
mov
mov
nop
ret
mov
jl
aam
jg
out
negb
leave
or
sarl
int
insl
mov
fildl
das
and
inc
push
mov
scas
div
jl
mov
sbb
or
fnstenv
inc
jg
repnz
aad
mov
and
fsubs
mov
movsl
cmp
mov
and
pop
test
lcall
cmp
out
jb
xchg
fisttpll
fcoml
cmpsl
ret
push
das
arpl
sbb
mov
xchg
insl
mov
iret
dec
adc
int3
pop
sbb
ss
and
out
push
ljmp
loop
mov
loopne
shlb
out
aam
addl
sbb
int
cmpsb
out
adc
cs
daa
in
insl
lret
cmpb
jae
mov
cmc
es
movsb
imul
push
mov
aaa
xor
and
push
push
jb
xchg
jae
xor
fwait
xlat
xchg
pop
rorl
test
cmpsb
push
sbb
sbb
push
out
pop
xor
sub
in
mov
inc
dec
outsb
jmp
add
cmpsl
and
inc
test
shrl
fildll
dec
inc
dec
mov
pop
stos
dec
lock
mov
mov
cmp
mov
mov
insl
ret
dec
push
mov
push
imul
add
idivb
inc
cs
xor
adc
and
out
xchg
hlt
leave
rcrb
sub
int
mov
sarb
mov
push
jnp
gs
cmpsb
sbb
add
mov
enter
daa
cmpsl
jle
mov
mov
inc
popa
bound
pop
lret
sbb
mov
fisttps
leave
or
cmpsb
lea
mov
aaa
jae
and
dec
out
inc
sbb
sbb
sbb
lret
ljmp
cwtl
jl
and
int
js
cmp
cld
add
adc
push
lods
int3
aam
daa
pop
gs
dec
test
jo
xor
insb
rcll
insb
jg
sti
mov
pop
and
pop
xchg
pop
pop
pop
outsb
mov
xchg
rol
loope
stc
sbb
xchg
popa
xchg
xor
lock
add
adc
adc
ret
test
jge
xor
sbb
test
push
push
inc
ret
lret
jne
sbb
push
out
and
cmp
into
mov
popf
popf
insl
cmp
xor
mov
dec
subl
and
mov
or
dec
fmuls
xor
insl
lcall
jno
out
pop
push
xor
adc
add
or
and
aaa
push
xor
or
sbbb
fsubs
leave
sbb
in
xor
decl
fsts
mov
xor
push
cmp
bnd
loopne
dec
push
inc
aad
stos
and
mov
mov
loopne
mov
test
ds
jmp
xchg
enter
or
adc
sbb
jg
clc
xlat
add
mov
shll
iret
aaa
adc
xchg
or
xor
fnstsw
cmc
and
clc
xchg
mov
test
or
adc
lret
ret
pop
cmp
dec
repnz
hlt
cmp
cmp
xor
jle
dec
sbb
test
add
add
xchg
in
scas
sar
dec
push
mov
push
mov
xchg
ljmp
dec
fwait
mov
rcr
dec
pop
out
popa
inc
outsl
out
and
adc
sbb
mov
lds
sub
mov
mov
push
adc
les
pop
enter
mov
lea
stos
push
jnp
jge
ja
lock
cli
mov
cmpsb
call
int3
shlb
lods
cmp
add
ss
xchg
daa
out
out
stos
nop
mov
cmp
pop
push
mov
sti
js
xor
dec
sub
cld
pop
add
jl
cmp
in
das
fildll
loopne
adc
js
lahf
neg
xchg
or
and
lret
push
nop
cmp
in
insb
adc
lret
test
xchg
out
jp
mov
in
cmp
and
je
inc
mov
sub
jg
xor
mov
ret
bound
cmpsl
xlat
cmc
jbe
test
xor
or
dec
test
push
sbb
bnd
dec
mov
and
xor
jp
dec
mov
insl
std
cli
adc
mov
push
in
loop
mov
shll
daa
lcall
ja
jl
ljmp
je
in
and
insb
test
dec
test
xor
cmp
stos
mov
in
jecxz
mov
in
stos
jl
out
fiaddl
sub
mov
popa
cli
xchg
sbb
cmpsb
or
popa
ret
pop
stc
scas
mov
and
mov
lret
mov
mov
dec
repnz
jg
sbb
stos
inc
adc
cmp
ret
fnstcw
punpckhdq
or
mov
ss
inc
cmpsl
mov
mov
push
bound
fadds
xor
lods
clc
mov
and
dec
mov
xchg
xor
enter
mov
dec
mov
push
fimuls
loope
mov
add
mov
gs
cmp
stos
xor
jb
xor
mov
cmp
jecxz
add
mov
pop
pop
mov
mov
jg
mov
jb
subps
das
bound
lcall
test
mov
and
jbe
subl
rol
clc
gs
jno
xchg
push
iret
mov
enter
lret
js
call
mov
mov
pop
pop
roll
rorb
shl
aaa
fmuls
aaa
shrl
sahf
stos
jno
mov
dec
popa
aaa
aaa
test
cld
push
xor
test
push
mov
mov
movsb
fsubl
pop
xor
int3
push
lock
pop
add
pop
stos
add
xor
xorb
sub
cmpsb
xor
mov
mov
mov
add
js
dec
std
push
js
push
pop
dec
in
and
fstp
and
jnp
mov
ror
ret
jne
push
mov
sbb
sub
push
inc
dec
pop
rcrb
outsb
push
lds
inc
daa
call
inc
mov
mov
pushf
mov
cs
pop
daa
inc
mov
jo
jg
je
push
inc
jle
add
mov
in
lds
mov
xchg
dec
lds
test
inc
lods
dec
add
push
rorl
popf
and
arpl
ror
repz
cwtl
pop
js
fbstp
sub
jnp
aad
sub
imul
decb
inc
cmp
mov
shl
push
xchg
and
and
pop
jge
les
loopne
stos
ja
mov
jge
push
mov
adc
adc
xchg
sahf
xchg
push
cmpsb
sahf
jmp
stos
sub
out
jge
push
pop
jle
inc
ret
jle
pop
xchg
lods
mov
lahf
mov
popa
add
cs
fwait
cmp
clc
jp
push
aaa
fwait
arpl
pop
lret
int
mov
lcall
adc
mov
adc
inc
mov
cmp
shll
jnp
pop
push
push
std
pop
test
add
aam
sbb
dec
push
leave
bound
ret
js
sub
xchg
sbb
and
pop
loopne
or
dec
xchg
insb
test
cld
shl
fcomps
xlat
xchg
jne
dec
jb
xchg
out
inc
scas
fiadds
adc
cmp
xor
insb
lods
xchg
fstpl
add
ja
sbb
mov
imul
js
xchg
dec
pushf
imulb
lret
ret
xchg
sarl
fiaddl
push
push
push
or
push
xchg
adc
xchg
cmp
fsubrl
fcom
aaa
adc
mov
mov
cmp
lret
std
aad
insl
jno
loope
mov
in
sarl
popf
pop
roll
cmpsb
sbb
xor
scas
mov
jge
lcall
mov
or
sub
incb
and
outsl
or
xchg
cmpsl
xchg
adc
push
pop
lcall
dec
scas
rorb
jp
and
lret
push
jae
mov
push
sub
jecxz
shll
pop
in
shr
and
popf
es
movsb
icebp
cs
xor
mov
pop
jo
xchg
or
enter
lods
xchg
repz
push
out
mov
pop
loop
xor
and
shll
mov
sahf
jae
jb
cmp
mov
and
outsb
je
rcll
mov
clc
pop
jae
xor
mull
pusha
mov
clc
mov
or
in
stos
mov
clc
pop
fiaddl
adc
inc
pop
jge
jb
cmpl
gs
js
cmp
stos
jmp
add
rorl
mov
pushl
adc
test
enter
cmp
pushf
test
dec
mov
pop
dec
bound
add
daa
xchg
mov
outsl
js
cltd
mov
sub
xor
xchg
mov
sub
scas
mov
pop
lods
testb
aad
inc
push
leave
test
adc
dec
push
repz
jnp
ljmp
mov
divb
mov
dec
add
xor
in
aas
add
popa
add
xor
sub
mov
clc
icebp
push
jecxz
mov
adc
movsl
aad
lahf
int
xchg
dec
out
lods
xor
dec
repnz
movsl
jae
dec
mov
cmp
mov
push
mov
add
mulb
fcoml
add
lret
mov
mov
inc
adc
mov
inc
pop
in
sbb
sahf
mov
mov
mov
loope
sub
xor
xchg
mov
ret
jne
test
xor
in
in
xchg
repnz
jae
or
pop
jo
loopne
outsb
push
arpl
clc
xor
js
arpl
pop
in
cmp
and
xor
lret
xchg
fbld
pop
out
aad
mov
pushf
iret
inc
cmp
and
das
jecxz
inc
cmpsl
cmpsb
std
dec
dec
or
into
mov
cmp
cmp
sbb
add
into
imul
ja
sub
push
jecxz
sbb
cmp
out
mov
pusha
and
enter
inc
mov
xchg
cli
outsl
mov
xchg
inc
adc
dec
sbb
dec
mov
in
push
pop
xchg
push
in
inc
or
adc
cld
mov
fsts
int
mov
xchg
outsl
sbb
pushf
jle
stos
adc
cmp
stos
clc
imul
push
xor
inc
in
cmpsb
add
push
jns
inc
in
mov
or
xchg
decl
fwait
dec
mov
sti
fdivrp
sahf
sti
push
xlat
jmp
xor
ret
pop
xor
aam
repz
xor
mov
fcoms
jp
inc
sbb
push
ljmp
scas
jno
mov
arpl
xor
stos
fisttps
addr16
pop
popa
cltd
or
or
mov
je
into
jl
test
repz
std
push
sbb
xor
aas
sbb
sbb
out
lds
sub
and
sub
push
inc
add
pop
push
insl
push
jl
fcomi
jo
xor
add
jae
dec
push
int3
fwait
push
mov
adc
mov
sarb
dec
jp
or
pop
repz
cmp
adc
xor
les
sub
loop
fiaddl
pop
aaa
in
jno
mov
jl
adc
cs
add
and
lea
mov
xor
mov
and
pop
xor
pop
loop
mov
lods
sti
lret
mov
sbb
xchg
lret
rorb
xor
mov
into
mov
lock
add
push
movb
repnz
push
je
cmp
pop
imull
repnz
push
and
jg
scas
aaa
sub
stc
fwait
aaa
cmp
push
push
mul
inc
inc
dec
call
sub
inc
mov
in
data16
push
jnp
push
cmc
movl
adc
fst
push
inc
daa
cwtl
pop
mov
aam
add
inc
mov
add
lret
mov
testl
inc
xor
and
sub
outsb
jo
test
orb
pop
jp
fsubl
and
imul
inc
xchg
icebp
mov
std
dec
xchg
cld
clc
popf
int
enter
fildll
cltd
xchg
fs
stos
gs
and
dec
out
cld
jp
popf
mov
loop
jge
lods
shr
sub
loopne
jns
jl
insl
mov
sbb
btc
pop
mov
push
es
nop
mov
rol
fcompl
cmpsl
sub
or
dec
rorb
movsb
and
add
fs
sbbl
rol
sub
test
push
add
cmp
push
sub
aam
and
pop
adc
inc
mov
adc
xchg
sbb
cmc
fcmovnbe
mov
sbb
sbb
or
xor
push
sub
sub
sub
je
arpl
cli
pop
test
icebp
nop
pushl
sti
adc
gs
jbe
mov
mov
pop
fldt
sbb
scas
dec
xchg
mov
sbb
andb
aad
push
push
adc
and
loopne
aad
daa
mov
cltd
pop
negl
fwait
cmp
pop
shrb
sub
mov
movsb
mov
out
sbb
mov
dec
jmp
hlt
pop
pop
pop
shrl
mov
mov
mov
sub
add
dec
scas
push
ja
and
mov
sub
jmp
mov
pop
sahf
cmpsl
jo
icebp
fidivrs
push
movsb
cmp
int3
ret
out
jmp
adc
push
cltd
jmp
rcrb
xor
pop
loopne
pop
scas
pop
xor
out
and
shl
adc
push
pop
in
and
std
push
pushf
push
add
ret
popa
pop
xchg
push
lds
fildl
pop
stos
push
mov
xor
jge
cmc
outsl
xor
leave
mov
xor
xor
nop
xchg
inc
add
rolb
enter
jo
jecxz
fs
adc
lahf
mov
adc
jp
out
dec
cmp
inc
sbb
lods
inc
xlat
xorb
cmp
cltd
imul
pop
cmp
dec
add
bswap
mov
sub
aaa
adc
leave
and
xor
addr16
clc
lret
inc
pop
mov
mov
dec
fwait
dec
nop
mov
mov
dec
xorb
pop
add
mov
dec
mov
cli
jmp
movsl
test
mov
and
ss
lods
popa
lds
xor
xor
sbb
fwait
mov
cmp
pop
push
add
gs
cmpsb
mov
dec
mov
push
sahf
movsl
std
stos
mov
ficompl
ret
pop
icebp
xor
mov
cld
out
nop
addr16
roll
xchg
std
cmp
add
mov
and
sbb
hlt
cmp
bound
rol
clc
inc
and
add
adc
popa
bound
pushf
mov
movsb
and
jecxz
mov
jnp
xchg
data16
push
dec
mov
push
push
pop
jae
xchg
mov
mov
xchg
xchg
and
xor
jns
add
push
aaa
or
sbb
jge
andl
aam
push
xchg
cmp
das
aas
or
ret
shrb
and
sbb
sub
aaa
push
adc
mov
xchg
adc
sub
pushf
jae
subb
xchg
mov
or
out
sbb
dec
mov
and
lcall
call
arpl
cmp
cmpsb
cli
stos
push
cltd
mov
push
in
scas
xchg
mov
push
adc
fwait
jle
idivb
mov
enter
cmpsb
sub
fisttpll
mov
loop
sbbb
dec
iret
fistl
lret
sub
sarl
adc
pop
jbe
hlt
adc
ret
add
sbb
ss
ret
jle
popa
xlat
gs
ljmp
aas
mov
pop
std
cmp
int3
xlat
aas
add
js
xchg
cmp
adc
cmp
gs
cmp
jmp
hlt
stos
dec
lahf
scas
mov
nop
lcall
jge
jns
daa
mov
adc
inc
jle
sahf
cltd
xchg
adc
and
pushf
and
call
in
jns
mov
iret
ss
jbe
arpl
cwtl
jb
adc
arpl
jmp
xlat
out
jb
scas
shlb
rcrl
cmc
fdivl
push
pop
mov
jp
or
in
cld
cmp
mov
push
fisubrl
sub
pop
add
rclb
sub
int3
shrl
push
mov
idivb
loop
subl
ljmp
rorb
push
lcall
in
ss
jecxz
inc
outsl
add
stos
mov
arpl
push
add
loop
jns
sub
jns
fwait
in
cmp
adc
push
push
xor
mov
mov
popa
inc
mov
add
jge
xor
jne
cmpsb
pop
push
inc
adc
add
push
xor
das
lret
das
and
jns
mov
repnz
mulb
pop
sti
loope
mov
stos
movsb
shrb
cmc
loope
fsubs
aas
movsl
shlb
lahf
adc
and
pop
arpl
es
adc
xchg
adc
and
mov
cmp
int3
cli
stos
inc
aaa
mov
addr16
fwait
jb
ret
ljmp
or
ja
jbe
mov
push
sub
js
cmp
push
sub
jo
mov
dec
mov
jno
lds
adc
fsubrl
shr
pushf
mov
out
int3
test
adc
shlb
inc
sti
aam
mov
arpl
jmp
lods
adc
add
shrb
loope
pop
aad
es
jle
add
ja
add
inc
jge
ficoms
mov
ret
ds
aam
lods
insb
in
xchg
not
and
or
sti
push
sti
pop
enter
out
pusha
push
xchg
cmc
xchg
sub
decl
xor
out
lods
adc
cmc
push
push
rclb
fadd
mov
inc
add
push
lods
and
inc
jne
mov
sub
mov
cmp
jo
xchg
cs
scas
inc
push
addb
pop
inc
mov
sbb
fidivrs
stos
lret
mov
push
push
rcrl
in
arpl
outsl
dec
adc
movsl
mov
cld
jmp
jnp
mov
fdivrl
add
iret
push
fs
imul
mov
jg
movsb
xchg
cmp
mov
gs
aaa
lea
or
inc
and
mov
lret
filds
push
test
nop
mov
sbbb
and
ret
shrl
lret
xchg
dec
repz
in
xor
mov
in
jmp
or
cmp
push
jge
stos
popa
cmp
ds
jb
jmp
hlt
es
iret
ret
imul
mov
adc
inc
cld
lret
test
out
dec
xor
mov
ja
fnsave
test
mov
scas
imul
sahf
mov
cmp
out
sbb
cmp
data16
outsb
iret
push
dec
pusha
mov
lods
mov
jmp
or
push
jo
lods
add
and
jne
jge
mov
lret
outsb
cld
daa
pop
je
and
inc
cli
cmc
adc
gs
in
cltd
cmp
sub
int3
add
sti
mov
stos
adc
jo
jp
es
push
stos
ja
inc
cmp
sbb
pop
data16
cmc
mov
cmp
inc
adc
xlat
cltd
mov
shll
mov
dec
or
or
xlat
lcall
bound
test
dec
adc
lcall
outsl
cmpb
xor
rolb
cmp
sahf
add
shl
sub
cld
lea
lahf
xchg
insb
test
rclb
adc
addr16
loope
push
repz
cmp
xchg
cmpsb
mov
cmc
stos
test
arpl
sbb
push
aas
and
dec
push
les
jns
aad
pop
or
push
test
je
nop
test
stc
ret
rorl
in
and
cmp
data16
into
xor
imul
push
dec
pop
clc
movsl
dec
std
insl
daa
xor
jecxz
ja
push
daa
add
push
bound
popf
xchg
fwait
loope
iret
jle
pusha
pop
mov
xchg
mov
ljmp
mov
sub
stc
xchg
clc
sbb
out
cld
xor
loop
icebp
fmuls
fsubrl
and
mov
das
mov
mov
and
jnp
or
inc
das
push
imul
pushf
testl
inc
orb
xchg
int3
xchg
loope
ret
jge
jge
push
adc
dec
xchg
mov
adcb
dec
pop
test
and
clc
and
lods
jmp
dec
xchg
sub
fsubp
aad
mov
cmp
movsl
mov
es
mov
idivl
mov
push
sbb
pop
fcmovnbe
sub
push
lods
cli
dec
aam
jmp
popa
and
adc
notl
cmp
add
jnp
sahf
inc
inc
movsb
and
scas
inc
js
mov
or
popf
lahf
mov
insl
fcomps
scas
pop
fs
adc
lret
xor
lahf
sbb
stc
imul
mov
out
or
push
test
lcall
pop
mov
leave
es
mov
fcoml
mov
orl
fcmovu
aaa
adc
add
imul
daa
pushf
add
int
ljmp
aad
pop
daa
pop
dec
mov
mov
stos
xchg
negl
xor
movsb
sub
inc
mov
xor
mov
mov
push
loopne
out
dec
mov
insl
rol
cmp
out
addb
xor
pop
stc
jb
cs
int3
in
std
and
fst
out
icebp
sbb
push
sub
rcrl
aam
icebp
cmpsb
cmp
dec
insb
inc
push
outsl
outsb
and
push
mov
xchg
or
fidivrl
insb
ljmp
lock
subb
inc
scas
pop
ret
icebp
add
scas
addb
push
ss
mul
mov
xor
outsl
jns
pop
int
dec
dec
add
repz
fsubrl
cmp
mov
or
icebp
nop
and
in
xchg
sub
hlt
shll
xlat
data16
xchg
pop
and
xchg
pop
inc
push
int3
mov
shlb
or
xchg
mov
outsb
fwait
outsl
cmp
inc
jmp
jp
add
mov
mov
inc
sub
mov
jns
andl
sbb
mov
fcmovbe
das
jg
sahf
adc
movl
lds
cmp
mov
add
daa
repnz
cmovae
roll
jle
dec
jle
jae
lods
jnp
pop
and
sti
daa
sub
iret
add
jne
ss
mov
dec
push
push
push
out
dec
test
ja
push
nop
lcall
arpl
mov
jae
ret
xchg
sub
je
add
subb
jb
sub
pop
leave
push
xchg
loope
arpl
mov
mov
fcmovnb
xchg
mov
dec
cltd
fsubr
push
loopne
in
or
repnz
cmc
and
mov
gs
arpl
and
cli
and
mov
xchg
cmp
pop
adc
aaa
leave
popa
mov
jbe
sbb
lcall
adc
rcr
sub
and
add
addb
pushf
add
xchg
jge
xchg
or
ja
mov
insb
mov
pop
mov
add
jp
inc
add
lcall
and
in
ficomps
pop
test
inc
nopl
test
lcall
lds
xchg
shrl
pop
or
mov
lea
mov
sbb
fiaddl
clc
push
pop
jb
xchg
lcall
mov
nop
aam
cmc
in
mov
hlt
das
jno
fldt
outsl
dec
cmp
mov
xchg
data16
das
and
rcrl
mov
into
jbe
sbb
cmpb
add
aam
sbb
cwtl
add
sub
push
push
xor
xchg
mov
push
mov
or
or
or
sub
in
pop
or
fcoml
dec
xor
lods
and
or
inc
add
enter
pusha
decl
stos
int
loop
insl
or
ds
sub
push
scas
fsubrp
inc
mov
mull
mov
cltd
les
sub
cmp
lods
mov
mov
clc
or
or
repnz
cmp
mov
pop
lahf
insb
aaa
mov
mov
mov
leave
jb
ret
fisttps
push
in
sub
xorl
jo
and
add
mov
scas
inc
fcoml
push
inc
rcrl
xor
cwtl
xchg
frstor
repnz
outsb
mov
bound
scas
test
cmp
jecxz
add
cmpl
and
std
pusha
popf
mov
inc
xor
aas
and
sbbb
cli
std
aad
mov
lock
leave
pop
or
cmp
loopne
adc
sahf
nop
mov
daa
push
mov
mov
sbb
jae
adc
mull
aas
jge
enter
stos
inc
fisubs
les
insl
push
fldt
fmull
mov
test
xchg
test
out
mov
test
push
pop
cwtl
pop
imul
jecxz
jl
add
sahf
mov
mov
int3
ss
test
pushl
fwait
jb
ja
sbbb
ret
mov
add
gs
sub
push
mov
rcl
insl
js
out
pop
cld
or
cltd
inc
inc
dec
popf
daa
in
test
pop
js
scas
push
push
leave
mov
mov
mov
jb
mov
pcmpgtb
std
inc
xor
lods
test
add
cmp
mov
mov
mov
popf
lock
xchg
rcll
cmpsb
cmp
imul
into
js
add
cmovo
add
mov
push
in
dec
jb
pushl
mov
cmp
mov
xchg
scas
add
and
mov
pop
push
and
loop
mov
push
pop
and
test
scas
xor
sbb
or
adc
or
or
pop
sub
dec
mov
pop
call
pop
xor
sahf
sub
xchg
movsl
lret
jbe
dec
shrl
aaa
notl
jae
cs
or
add
xchg
lcall
popf
push
ss
or
aam
loop
mov
jecxz
xor
push
out
sub
pop
popa
and
outsl
in
jmp
pop
cli
pop
es
gs
stos
cmpsb
pop
or
sbb
jmp
pandn
lret
xchg
and
mov
push
test
jno
movsb
or
and
add
jmp
ret
push
les
movsl
icebp
lods
stos
nop
sub
imulb
mov
cwtl
out
mov
popa
xlat
push
and
or
fsubrp
pop
cltd
sub
mov
adc
hlt
jg
repz
jno
push
pop
loopne
scas
test
mov
into
fistl
movsb
xchg
lods
dec
insb
in
loope
cltd
divb
rcr
pushf
inc
int3
pop
mov
or
int3
adc
aam
jnp
dec
xor
sarl
out
pushf
dec
sub
sbb
push
push
or
das
mov
push
ret
mov
ret
adc
jno
sub
fstpl
fimuls
mov
adc
out
je
cltd
loopne
mov
orl
fcoml
lods
pop
leave
xlat
adc
rclb
xor
shr
push
lods
call
push
mov
cs
inc
fdiv
lcall
pop
sbb
mov
push
push
cwtl
adc
and
xchg
push
dec
and
sbb
into
push
xchg
and
inc
lock
and
xchg
filds
lea
push
das
mov
ret
adc
mov
stos
sub
dec
xchg
mov
push
push
das
fxch
mov
ret
rorl
ret
adc
push
sahf
std
lret
xor
sbb
xor
inc
adc
pop
add
mov
rclb
subb
push
fisttps
pop
xor
nop
mov
ja
movsb
xchg
pop
shlb
int
mov
pop
sbb
inc
jl
xchg
bnd
xchg
movsb
adc
enter
pop
push
dec
dec
adc
adc
orl
pop
jp,pn
es
push
push
jnp
cmp
cmp
pop
sbb
mov
add
mov
xchg
icebp
push
cld
xchg
or
xor
movl
mov
les
sbb
sub
push
inc
push
mulb
mov
test
cld
xor
and
sahf
aaa
daa
lock
pusha
mov
jmp
repz
mov
enter
adc
pop
hlt
mov
dec
xchg
mov
push
cmp
jo
jno
rcll
pop
push
fucom
push
jb
orb
cmp
andb
outsl
xor
dec
mov
rolb
gs
push
mov
ret
mov
cmp
inc
test
jbe
ret
mov
or
dec
mov
pushf
inc
jne
pop
sti
mov
test
pop
jecxz
popf
xor
mov
insl
and
push
movb
inc
and
cmp
xor
jbe
adc
adc
mov
adc
sti
jmp
out
test
pusha
lock
pop
ljmp
arpl
dec
push
mov
in
sbb
pushf
mov
bound
inc
popa
mov
xchg
cli
lcall
std
loop
add
pushf
push
scas
inc
xchg
or
rorl
sbb
push
dec
push
jae
sub
repnz
jecxz
jns
scas
das
into
mov
xchg
sbb
sub
jne
jecxz
jp
cmc
popl
xor
sub
adc
adc
and
mov
shrl
fstpl
out
ljmp
andl
push
inc
lret
mov
inc
push
adc
fldcw
out
into
pop
in
xchg
loopne
cmp
xor
lret
add
in
pop
adc
pop
repnz
mov
loopne
push
xchg
andb
lock
jle
xlat
aaa
jg
mov
repnz
andl
sub
lea
push
jno
sub
jae
hlt
sbb
mov
mov
push
sub
arpl
sub
dec
icebp
xchg
orb
int3
stc
dec
mov
jo
fmuls
out
push
sbb
adc
jp
aas
add
push
insl
and
shll
push
inc
jb
insl
hlt
fucomi
mov
decb
js
xor
aam
pop
sarl
sub
ljmp
in
sahf
mov
mov
cmpsb
add
cmp
or
pop
repnz
mov
mov
cmpsb
int3
sub
cltd
sbb
xlat
cmpsl
std
adc
mov
sub
es
mov
filds
mov
and
mov
cmp
sbb
add
add
lcall
dec
push
lea
mov
pop
out
inc
xor
lods
stos
loopw
and
cmc
xchg
push
mov
ja
rorb
test
loop
inc
push
outsb
lea
xor
enter
mov
cmp
dec
inc
outsl
mov
jmp
mov
mull
jnp
jl
adc
jne
adc
or
push
jl
mov
jmp
data16
inc
out
les
cmpsb
std
stos
dec
dec
in
inc
in
divb
jle
sahf
mov
dec
pusha
jp
add
out
sbb
xchg
push
and
mov
lcall
stc
popf
es
seto
repnz
enter
jmp
jecxz
call
jne
daa
cwtl
inc
movsl
sahf
popa
cmp
pop
push
cmp
in
add
int3
jo
out
inc
mov
pop
mov
mov
sbb
lahf
inc
add
les
aad
loop
fistpl
fwait
cmc
push
add
sti
in
jmp
or
adc
out
out
jns
andb
cmovbe
xchg
mov
inc
sbb
xchg
lds
xor
and
mov
pop
es
lahf
sbb
jecxz
fwait
inc
jmp
mov
xchg
mov
push
push
xchg
push
cs
loope
or
dec
loope
push
fildl
clc
fdivrs
pop
ficoml
xor
mov
push
jmp
das
sub
and
mov
sbb
cli
ljmp
push
fdivrl
mov
push
mov
jno
leave
ficoml
jns
xor
cmpsb
in
add
sarl
ss
pushf
rcpps
shr
sub
stc
mov
sbb
jg
pop
leave
sub
int3
xor
dec
stos
lret
mov
sbb
sbb
mov
cmpsb
in
sbb
cld
add
sbb
xor
sub
jg
dec
mov
jnp
les
pop
and
nop
ljmp
frstor
imul
mov
lds
out
jmp
sarl
ret
leave
dec
jmp
dec
movsl
xor
decl
pop
lds
outsb
add
push
jmp
shr
out
mov
mov
pop
aaa
movsl
loope
out
cmc
push
in
inc
clc
xchg
or
idiv
sbb
adc
imulb
es
jno
scas
pop
mov
lret
enter
adc
popa
mov
dec
je
out
int3
and
pop
xchg
sub
into
pop
lods
pop
andl
mov
xchg
adc
test
mov
stos
jecxz
fisttpll
imul
icebp
aas
mov
mov
mov
mov
int
popa
or
leave
jnp
jb
pop
pop
rol
cld
in
add
lahf
or
xchg
int3
loope
and
mov
sbb
cmpb
inc
mov
mov
pop
ds
and
sub
and
mov
mov
mov
dec
gs
mov
mov
outsl
add
sbb
adc
cmp
ljmp
inc
mov
dec
xor
aam
mov
xor
mov
outsb
dec
inc
jo
push
mov
cld
add
out
inc
aas
cltd
dec
cmc
xchg
mov
decl
popf
loop
and
mov
pop
notb
pop
popa
arpl
popa
aas
cmp
cmp
xchg
clc
or
add
rorl
cli
xchg
lea
js
sbb
cmp
in
hlt
mov
js
jg
clc
test
subl
inc
shrb
cmc
lods
dec
ret
mov
adcl
pop
adc
push
push
push
xchg
pop
mov
icebp
push
and
push
aad
loope
xchg
sub
loop
shll
pusha
test
popf
push
push
shll
mov
adc
cmp
dec
xchg
shll
xchg
das
mov
stc
sbb
push
addr16
sbb
daa
jmp
xchg
fldt
pop
jns
adc
and
jbe
out
jbe
movsb
fcmovbe
xchg
pop
adc
xchg
ret
data16
inc
js
popf
adc
pop
ljmp
xchg
mov
bound
in
xchg
rol
popf
cld
and
jb
cli
push
imul
push
push
iret
sbb
pop
mov
andl
add
xor
pop
test
dec
loope
xchg
push
cli
sub
push
and
bnd
jnp
aas
mov
lret
insl
fsub
test
aas
fwait
repnz
push
pushf
sarb
add
lock
push
clc
cmpsl
frstor
or
inc
int3
call
dec
adc
jb
pop
push
leave
test
cmc
cwtl
jle
mov
andl
adc
mov
icebp
xchg
fld1
xor
movsb
cmovno
in
fs
dec
sbb
jecxz
sub
dec
lret
pop
in
not
push
cmp
insb
jecxz
lret
xor
rclb
dec
mov
fcmovbe
sub
dec
ret
xchg
push
push
sbb
cs
shrb
mov
jae
lds
aaa
mov
in
inc
jno
mov
fucom
adc
daa
lods
mov
pop
clc
xchg
cmpsl
stos
sahf
mov
fwait
add
pop
loopne
push
iret
mov
sub
jl
cmp
fldcw
mov
jp
adc
jne
std
mov
xchg
mov
sarl
mov
jle
daa
sub
mov
hlt
int3
test
push
fisttpll
sahf
jb
adc
subl
cmc
rcrl
cli
jp
fs
repnz
xor
inc
jnp
arpl
and
mov
fcmovnbe
xorb
repz
mov
sbb
push
test
mov
push
sbb
incl
adc
fisubrs
outsb
jp
jnp
or
insb
and
inc
pop
mov
cli
imul
and
mov
icebp
adc
mov
ja
xchg
mov
pop
mov
mov
dec
mov
lods
xchg
bound
xchg
cmp
dec
add
inc
test
fisubl
imul
aam
in
and
loop
fnstcw
add
mov
pop
pusha
testl
rcrb
pushl
or
inc
sub
xchg
xchg
or
inc
inc
movsl
js
mov
call
subl
arpl
insb
xchg
out
mov
icebp
std
adc
repnz
adc
idiv
insl
pop
popl
sub
cmp
adc
les
shlb
xchg
fucomi
andb
and
shll
mov
int3
push
sub
mov
xchg
pop
call
dec
hlt
cwtl
dec
sub
loopne
inc
mov
lds
and
ds
insb
xor
sub
out
inc
aas
xchg
test
rol
sbb
cmp
mov
aad
and
push
or
mov
cmp
call
pop
sub
push
loop
gs
push
testb
fwait
mov
inc
hlt
sbb
aaa
pop
mov
ret
cmp
inc
pop
or
adc
aas
push
cmp
pop
fisttpll
outsl
lock
into
aas
dec
cmc
cmpb
sbb
fwait
push
dec
test
dec
push
bnd
popa
pop
ljmp
dec
repz
repz
int3
inc
jne
push
lea
out
popf
cmc
xor
addb
push
mov
test
add
xchg
pop
mov
jae
and
imul
pop
js
adc
xchg
push
inc
sahf
xchg
xchg
test
fchs
sbb
dec
mov
ss
mov
dec
xlat
push
cmp
outsl
sub
cmp
inc
test
sbb
cmc
leave
shr
dec
or
dec
out
dec
pop
pop
fisubs
cs
sbb
add
xor
nop
mov
fimull
mov
ror
aas
cmp
insl
popa
cmc
push
enter
clc
pop
mov
cmp
or
lret
test
aaa
fisttpll
movsl
pop
adc
inc
sbb
addr16
fidivrs
or
ljmp
repz
sbb
pop
jg
push
insl
xlat
test
mov
push
fdivrl
cmc
loop
push
aad
test
stos
pop
pop
les
je
out
cs
aaa
adc
cmp
es
sub
mov
lret
add
test
hlt
popf
adc
xchg
lods
xor
imul
push
pop
sti
ds
push
sahf
enter
lea
xchg
jnp
pop
xchg
jae
test
loope
mov
stc
cld
repnz
fisubs
or
dec
cmp
xchg
nop
mov
out
dec
pop
data16
adcl
sbb
cmp
adc
and
jbe
xor
mov
fstps
lahf
mov
pop
jae
std
sub
xchg
testl
sbb
movsb
lods
adc
fadds
divl
inc
or
in
mov
call
adc
xor
imul
fldl2t
sbb
jne
fcoms
inc
outsl
xchg
repz
mov
inc
pop
scas
movsb
jne
in
cld
pop
popf
in
pushf
arpl
in
mov
push
adc
lds
jae
cmp
insb
xor
pop
addb
dec
push
push
repz
push
jle
sub
jae
jp
inc
mov
pop
adcl
mov
scas
je
or
rcrb
push
mov
loope
fisubrl
mov
mov
nop
push
pop
xor
inc
nop
sbb
addl
enter
outsl
jo
test
sub
jns
add
ret
inc
sub
aas
outsb
and
mov
pushf
push
ficoml
adc
lods
push
test
jno
movsl
xchg
imul
inc
pop
aad
rorb
add
data16
mov
mov
mov
push
cmpsl
mov
or
mov
or
xor
int3
adc
popa
xchg
xchg
pop
xchg
lret
lahf
rolb
mov
fistps
mov
pop
sub
adc
mov
xor
xchg
scas
or
rorl
cmpsb
push
xchg
inc
jo
insl
popl
and
out
stc
and
jg
subl
dec
inc
push
add
or
in
aam
lcall
cmpl
hlt
and
orl
mov
jns
fsubrs
test
addr16
jmp
mov
outsb
inc
mov
leave
fistpl
lds
or
mov
xor
xchg
push
jl
push
add
fisttps
push
xchg
fs
push
fcoml
cmp
sub
dec
push
rcrl
das
in
out
sahf
jle
add
cmp
and
ss
outsb
cwtl
faddl
push
fcmovnu
or
cmp
inc
notb
fisttpll
sbb
mov
insl
imul
popa
xchg
xor
popl
pop
cmp
aaa
test
jbe
push
leave
ljmp
push
outsl
fsubl
inc
mov
cmp
lahf
and
mov
test
mov
loope
xor
imul
or
js
xlat
cli
das
dec
rorb
push
pop
lret
fwait
rol
sti
adc
mov
and
mov
out
mov
leave
icebp
loope
ljmp
cmp
lret
xor
mov
cmp
stos
mov
sub
loope
insb
inc
push
mov
push
and
cld
shlb
add
sub
jno
jne
shll
adc
push
shr
inc
rolb
lahf
fldl
mull
dec
out
outsb
sbb
sahf
cwtl
mov
fildl
movb
push
dec
daa
mov
sbb
or
adc
xchg
add
cwtl
sbb
cwtl
negl
mov
cmp
jg
mov
dec
inc
jl
sub
or
add
mov
in
out
add
jno
xor
shlb
dec
and
and
int
stos
pop
fisttpll
sbb
sub
incw
and
add
and
shl
cmc
sub
test
xor
pop
std
push
xor
adc
dec
cli
rcr
out
cmpsl
mov
dec
outsb
inc
or
dec
push
push
dec
cvtdq2ps
push
sub
inc
test
aaa
mov
out
and
sub
xchg
push
fimuls
sahf
dec
nop
icebp
repnz
pusha
mov
xchg
mov
stos
sbb
add
xor
mov
mov
dec
xor
mov
pushf
into
leave
jae
outsb
test
in
mov
add
inc
negb
ret
mov
out
imul
add
test
xor
and
sbb
lret
cltd
lret
push
lret
cmp
mov
adc
ja
mov
mov
pop
cmp
sub
add
inc
fnstsw
and
adcb
or
or
xor
inc
mov
lock
ret
and
dec
xchg
inc
ss
aad
shrl
out
je
xor
xchg
push
insl
mov
inc
mov
or
es
sub
inc
jmp
mov
mov
cmc
ljmp
add
icebp
data16
aas
sub
ds
into
jmp
inc
sti
loop
adc
test
cmp
ret
pop
jbe
imul
out
bnd
mov
cmp
sub
inc
push
sub
mov
loop
fisubrs
pop
or
inc
add
sub
ds
fwait
int3
imul
int
add
sub
inc
stos
and
aas
dec
mov
cmc
pop
in
mov
aad
mov
imul
sub
inc
mov
sub
mov
dec
fisubrs
repz
int
adc
cmpsb
rep
fmuls
sub
xchg
std
in
dec
in
sti
inc
sbb
push
nop
push
aam
cld
cmp
stos
es
mov
pminsw
inc
mov
dec
mov
adc
decb
leave
adcl
mov
je
sub
jg
lods
rcrb
cmp
add
movsl
inc
push
xorb
mov
cmc
adc
pop
arpl
jae
int
sub
loope
mov
mov
lods
leave
jo
push
mov
rorl
adc
push
add
adc
mov
mov
xchg
or
fadd
shr
cmp
shll
jno
xchg
stos
dec
out
and
jnp
es
xlat
ds
ljmp
addl
jmp
adc
jbe
inc
and
xchg
rcll
or
mov
inc
arpl
stc
orb
xchg
xor
add
xchg
repnz
dec
sahf
and
loop
sub
add
mov
jg
outsl
pop
test
inc
mov
xchg
iret
fsubrl
pop
clc
and
pop
cld
insb
aas
subb
add
xchg
sub
jb
repnz
jmp
push
jno
aaa
fdivl
outsb
decl
xchg
sahf
jo
iret
pop
sahf
mov
xor
shll
mov
xchg
adc
iret
hlt
inc
aaa
stos
cltd
addr16
fsubrl
fwait
subl
xor
cli
ss
inc
mov
ret
les
test
pusha
mov
pop
sub
stos
fcompl
xchg
add
push
jg
cmpsl
xchg
loopne
jns
jge
adc
adc
out
test
and
push
or
sbb
mov
enter
out
mov
adc
sti
jmp
insl
outsl
stos
arpl
or
pop
das
jmp
pushf
data16
xchg
sub
fimuls
lods
xchg
data16
or
int3
xchg
cmpsl
hlt
xorb
sbb
push
xlat
sub
pop
jne
push
notl
adc
mov
jbe
loop
adc
cmpsl
fs
add
test
inc
xchg
push
cltd
xchg
fbld
mov
pushf
jge
pusha
mov
jle
popa
nop
stos
sbb
lahf
mov
stos
inc
sub
jb
mov
ss
iret
cmp
pushl
add
aaa
cmp
arpl
xlat
adc
mov
push
jmp
arpl
mov
xor
add
jle
mov
stc
jl
out
inc
mov
jg
mov
fs
add
pop
bound
or
push
jae
cmpsl
sti
adc
jns
mov
mov
mov
push
xchg
mov
push
rclb
out
imul
sub
push
test
icebp
sbb
push
dec
dec
rolb
mov
fcoml
xchg
sbb
add
enter
add
mov
dec
test
pusha
jg
xchg
cwtl
loope
xor
in
fwait
cmc
or
imul
adc
mov
xlat
and
out
or
pop
iret
inc
add
mov
test
repz
notl
pcmpgtd
sar
xor
lea
push
test
testb
lea
cmp
aaa
das
repnz
mov
stc
mov
lock
fs
jbe
sbb
mov
push
jae
pushf
cld
out
lcall
addl
ret
xchg
or
nop
repz
mov
inc
mov
lds
pop
fisubs
lahf
lret
sbb
adc
jne
jp
cld
fwait
jne
push
addr16
adc
dec
push
jnp
outsb
adc
dec
adc
jl
xchg
out
mov
adc
insb
cmp
movsb
mov
cmpsl
push
jnp
mov
jmp
ja
sbb
mov
add
leave
or
xchg
int
lret
addr16
fwait
xchg
test
cmp
test
mov
das
jae
push
je
mov
pop
hlt
insb
rol
mov
pop
movsl
outsb
mov
cmp
pop
cmpsb
fstps
jno
and
out
adc
mov
les
adcb
xchg
lds
inc
jb
pop
mov
cmp
gs
inc
xor
jecxz
pop
lahf
mov
xchg
xor
push
fmuls
dec
inc
xor
insl
jb
sbb
les
or
stc
fimull
cmp
xchg
movsl
popf
fstp
insb
mov
jmp
cmp
push
test
fstpl
mov
aas
push
stos
jge,pt
sbb
sub
adc
mov
lock
das
lea
pop
sub
lods
jl
ss
inc
cmp
adc
mov
or
lret
or
and
std
mov
ret
sbb
inc
pop
test
pop
mov
cmc
xchg
jle
pop
sub
dec
pop
cmpsb
cli
fs
xchg
jg
mov
shl
lea
pop
aaa
inc
push
cmp
sub
and
inc
aam
cwtl
shl
pop
ss
adc
sub
shrb
mov
popa
sub
daa
lock
je
mov
dec
inc
out
enter
jo
cmp
fidivrs
ds
gs
ror
mov
mov
pop
pop
xchg
jle
and
or
jl
add
insl
dec
mov
add
sub
adc
dec
sub
pushf
fstps
dec
outsb
push
pop
jne
and
scas
repnz
and
push
or
jle
lock
or
adc
std
or
fisttps
test
sahf
sbb
inc
inc
dec
inc
mov
movsl
aaa
push
or
sbb
js
jb
std
cwtl
adc
ljmp
xchg
mov
mov
or
rcrb
cwtl
adc
mov
enter
bound
daa
push
mov
or
dec
inc
jg
hlt
mov
jl
xor
dec
fcmovnu
lods
int
jmp
dec
in
jp
adc
sub
dec
mov
cmpsb
out
push
and
xchg
cmp
sub
sahf
repz
push
cmpsl
mov
add
outsb
push
movsb
mov
lcall
or
cld
ret
je
ss
aad
arpl
fcmovb
dec
sbb
mov
xor
ja
setno
sbb
int3
lds
int3
int
lahf
xchg
cmc
loopne
dec
or
add
adc
xchg
pop
adc
mov
xor
ja
push
adc
jo
push
shlb
insb
xor
mov
or
xlat
add
call
gs
mov
test
sbb
inc
lret
dec
hlt
jbe
push
pop
inc
lods
jns
fwait
ss
gs
adc
cmp
lret
enter
inc
xor
rcll
adc
aas
xor
push
jns,pt
jp
sbbl
jnp
push
cmp
pop
nop
out
inc
in
jg
push
sub
mov
sahf
or
jb
sbb
clc
inc
cld
push
sub
outsb
fwait
or
sub
jnp
pushf
xor
stc
mov
into
pop
fwait
and
in
xchg
jmp
sti
stos
mov
stos
lahf
aam
sbb
lock
ret
outsb
mov
mov
dec
xchg
pop
ficoms
mov
data16
xchg
add
je
sbb
sbb
repz
cmp
inc
fidivs
mov
push
loope
fld
mov
push
clc
lods
xor
js
xchg
mov
or
xchg
push
push
jne
rcrl
lock
leave
rcl
xchg
sbb
push
insb
add
adc
or
jge
pop
inc
stc
and
adc
jnp
sbb
sbbb
mov
xchg
push
xchg
and
imul
stc
push
andl
pop
pop
mov
mov
cmp
hlt
popa
pop
fiaddl
rcrl
aam
adc
mov
adc
lret
clc
cmc
sti
int3
mov
enter
jne
and
jl
dec
scas
push
addr16
mov
subl
dec
jmp
leave
add
jp
push
and
imul
xchg
sub
mov
pushf
xchg
xchg
mov
dec
aas
lcall
or
mov
leave
hlt
adc
stc
movsb
push
push
sub
sub
sarb
jg
xchg
jne
push
mov
mov
cmp
mov
adc
test
xchg
jge
sub
mov
fidivs
ficompl
hlt
lds
ja
out
adcl
pop
mov
sbb
add
xchg
scas
das
sub
xchg
pop
fsubrs
mov
rcrb
jo
sbb
sbb
je
xchg
jnp
pop
movb
pop
cmp
adc
push
cltd
push
jnp
dec
xor
in
sbb
pusha
adc
pop
jbe
lcall
repnz
outsl
lahf
adc
inc
and
xor
xchg
push
test
fsincos
aad
popf
mov
arpl
fdivrs
push
cwtl
add
sbb
cmp
sub
iret
push
add
and
inc
addb
mov
cmp
push
lock
idivb
imul
fildl
sbb
pusha
push
lret
movsb
sub
fnstenv
sbb
mov
call
inc
leave
pop
ja
push
push
test
leave
pusha
xor
aad
xchg
pusha
scas
outsb
clc
mov
pusha
jbe
fwait
das
lcall
mov
lea
test
adc
stc
jecxz
or
outsb
lea
fucomip
fstl
sbb
mov
sbb
popa
xor
out
test
pop
pop
adc
or
push
mov
adc
adc
mov
ljmp
mov
mov
mov
inc
xchg
jp
cmp
push
inc
pop
cmc
out
sahf
pop
addr16
lea
pop
lret
pop
sub
lret
pusha
sub
iret
fbld
sub
das
inc
fidivrl
rcr
push
fwait
cwtl
sub
pusha
rep
mov
pusha
cmc
add
iret
shlb
jg
dec
mov
mov
and
and
add
inc
dec
add
imul
out
mov
or
mov
mov
sub
sub
fmuls
push
dec
cwtl
stos
xor
ljmp
sub
push
repz
popf
stos
mov
inc
jbe
push
fisubs
and
insb
and
adc
loopne
inc
cmp
aam
jno
push
movsl
daa
cmc
add
push
out
inc
inc
dec
pop
je
pushf
inc
outsb
sub
push
testb
fcoms
je
dec
xor
push
or
ds
test
dec
mov
loope
pusha
andl
xchg
cmpl
sbb
and
push
aad
out
lret
repz
int
xor
fcoml
js
shll
or
and
iret
notl
or
dec
mov
nop
repnz
xchg
mov
in
imul
dec
xchg
adc
test
sbb
pop
iret
push
or
mov
or
sbb
enterw
mov
imul
xchg
mov
mov
mov
sar
jo
scas
jecxz
mov
insl
imul
xor
xchg
movsl
sarb
xchg
lcall
xchg
das
sub
fstp
in
jle
cmpsl
mov
mov
sbb
insl
jg
jb
cmp
mov
sub
xchg
sub
sti
loopne
xchg
mov
pop
bound
push
add
mov
leave
xor
push
pop
mov
and
es
stos
std
jno
and
cmp
cmp
jae
push
jp
inc
fs
inc
mov
lcall
xchg
pop
jl
push
negl
sti
mov
dec
loop
mull
enter
push
popa
pop
daa
inc
roll
andb
dec
push
out
dec
adcb
sbb
bound
mov
in
mov
cmp
adc
xchg
sub
sbb
sbb
pop
xor
mov
inc
cli
cmp
inc
mov
into
push
add
push
dec
jmp
mov
pop
je
mov
inc
push
pop
cmpsl
adcl
gs
call
push
sbb
mov
fsubrs
jnp
and
cmp
mov
sub
movsl
nop
dec
lods
push
in
je
pop
pop
stos
jae
aad
inc
das
xchg
mov
pop
dec
sub
mov
xor
xor
incl
xlat
inc
and
jecxz
cmp
push
xor
xchg
lea
sub
xor
sub
sbb
outsb
sub
and
es
cmc
xor
sbb
adc
test
cmp
and
scas
clc
adc
fnsave
jnp
push
pop
aam
sbb
xor
pop
and
and
push
add
push
push
mov
daa
pop
jo
loope
lea
pop
sbb
and
int3
cmp
pop
insl
push
jmp
sbb
ss
js
dec
push
enter
xchg
js
or
mov
clc
adc
cmp
dec
pop
xor
sarb
stc
mov
popa
jbe
pusha
push
repnz
lahf
or
jb
jge,pn
add
inc
rorb
repnz
ds
sbb
mov
mov
std
stos
jmp
jg
mov
add
jae
sbb
jle
cld
in
pop
out
inc
fs
call
adc
fidivrs
or
andb
fwait
loope
cltd
inc
repnz
xchg
and
push
inc
dec
data16
and
insl
bound
lods
scas
mov
xlat
add
inc
pop
loop
insl
sbb
imul
mov
sbb
mov
mov
cmp
sbb
lods
push
and
push
fidivrl
lret
pushf
xchg
add
mov
jecxz
pop
lods
push
and
in
rol
cld
scas
and
jno
lret
fdivp
xchg
idivb
push
push
xchg
int3
into
mul
leave
sahf
cmp
arpl
mov
shll
sahf
sbb
test
out
xor
dec
inc
cmp
fwait
xchg
in
lcall
mov
jl
adc
pop
mov
jb
fmull
mov
out
movsl
test
dec
out
or
pop
test
addb
sub
rolb
dec
outsb
sbb
jns
fwait
xor
cmp
mov
lahf
fwait
insl
xchg
pusha
es
int3
insb
add
sub
jge
das
inc
cli
mov
jecxz
jl
push
mov
mov
xchg
mov
mov
sbb
xor
pushf
jns
sub
fimull
inc
ljmp
push
cld
dec
sbb
mov
test
sbb
inc
add
leave
ds
xchg
outsl
mov
push
rcr
xchg
or
pop
or
fbstp
mov
incl
mov
and
les
inc
or
push
int
dec
and
movsl
push
jbe
or
xor
inc
push
xor
mov
popa
das
pop
adc
iret
mov
movsl
lods
add
pushf
push
mov
call
ja
mulb
pop
adc
cmp
sub
cmp
mov
std
mov
fmull
cmp
rcrb
or
lcall
adc
xchg
popa
ret
cmp
add
fwait
or
popw
mov
hlt
jecxz
and
out
and
jge
int3
test
test
and
sub
xchg
aas
sbb
stos
mov
fcomi
jne
mov
repnz
add
pop
jecxz
mov
push
inc
arpl
add
xchg
jle
jb
aaa
inc
mov
pop
push
jbe
repz
jmp
add
lds
inc
cmc
movsb
jne
ret
dec
addr16
nop
aas
xlat
jb
in
movb
out
sub
push
sbb
cmp
cltd
aas
sarw
push
xchg
cmp
aad
dec
xchg
sbb
pop
pop
xchg
fcmovbe
shl
jg
pusha
paddw
jno
push
push
imul
xor
cltd
and
or
mov
add
pushl
pop
test
xchg
pop
pop
jle
jl
mov
out
and
std
je
cmpl
dec
jecxz
into
mov
aaa
fnstenv
mov
and
cmpsl
jmp
into
fs
pop
mov
xor
dec
pop
dec
mov
insb
jl
mov
push
jg
jle
in
xor
and
push
shll
cmp
jae
mov
ret
sbb
pop
loopne
mov
jnp
pop
popa
mov
xor
test
and
and
xor
int3
add
xchg
pushf
dec
iret
shlb
popa
jmp
arpl
push
sub
dec
jb
push
mov
sets
repz
cmp
in
jb
mov
addr16
jb
fistpll
aam
in
mov
xchg
test
xor
inc
sub
rcrb
push
daa
add
gs
push
sbb
jnp
add
push
lock
push
push
loop
adcl
call
adc
and
xor
lods
out
stos
dec
xchg
and
mov
out
xchg
es
jmp
stos
add
and
xchg
mov
xor
dec
arpl
pop
ja
dec
in
add
sub
or
hlt
cld
jnp
or
xorb
jns
addr16
and
mov
inc
add
cld
adc
dec
or
popa
stos
dec
int
cmp
lods
sub
pop
pop
test
fstl
add
and
dec
xor
lea
sahf
and
iret
cmp
adc
outsl
test
pop
push
mov
fistpl
mov
dec
adc
and
lcall
stos
push
lahf
aas
sub
lods
mov
mov
filds
lcall
mov
inc
dec
mov
insb
sarb
lods
iret
push
inc
fldcw
push
dec
int
inc
mov
fnstenv
inc
imul
out
into
bound
mov
mulb
scas
aam
int3
dec
jne
mov
gs
mov
sbb
sbb
stos
scas
add
fcmovbe
test
jg
or
arpl
mov
mov
mov
test
aaa
aad
fisubrl
push
out
xchg
jnp
inc
mov
cmp
adc
jno
lcall
sub
int
jae
das
cltd
subb
pop
shll
enter
wbinvd
lds
jge
cld
test
aas
and
sbb
inc
pop
sbb
aas
pop
or
dec
jbe
jne
jne
sarb
jmp
xchg
je
xchg
mov
fcoms
xlat
ja
pop
std
pushf
xchg
ljmp
adcl
icebp
popf
fildl
lds
testb
ss
fidivl
or
cltd
js
stc
sub
out
in
jecxz
jle
pop
add
imul
lea
test
loope
verw
xchg
mov
xchg
xor
fadds
lds
inc
xchg
xor
add
xchg
into
cltd
paddq
lea
aam
inc
sti
loop
shl
idivl
pop
push
push
jmp
cmpsb
push
sbb
fcoml
sbb
add
data16
mov
sbb
andb
bound
dec
mov
inc
pop
add
fildll
cwtl
in
push
insb
andb
inc
aaa
inc
fucomip
xor
and
lret
add
and
aam
xor
dec
xchg
nop
cld
adc
sub
cltd
xor
inc
jge
imul
or
add
mov
and
call
mov
mov
push
test
sti
lret
leave
in
addr16
jmp
mov
rcrl
or
pusha
mull
idivb
mov
pop
sbb
and
fcmovnu
jecxz
dec
fwait
stc
jne
fistpll
lock
out
subl
nop
fs
out
cmp
clc
flds
ljmp
sub
in
xor
jno
enter
out
aas
rol
inc
iret
push
mov
cwtl
cs
dec
in
xor
outsb
ret
cmp
fmuls
and
fcomip
idivb
adc
clc
jmp
scas
dec
mov
add
sub
repz
pop
nop
loop
jno
adc
push
mov
xchg
pop
das
xchg
push
mov
mov
mov
not
cli
xlat
push
pop
fisttpll
dec
in
or
jbe
push
outsl
fld
leave
pop
mov
sub
sti
lea
pop
pop
mov
lock
inc
mov
in
xchg
pop
mov
mov
test
dec
shlb
lods
cmpb
or
gs
out
sbb
aad
add
push
into
fidivl
pop
add
nop
scas
and
les
ss
mov
shl
cmp
sub
cmpsb
cltd
push
mov
add
sahf
dec
mov
sub
xor
outsl
jle
lock
xor
jae
out
xorb
jge
cmpsl
mov
in
push
pop
movsl
or
xor
lahf
sub
xchg
dec
push
inc
pop
sbb
out
mov
cmp
mov
xor
ja
sub
inc
fisttpll
cltd
xchg
xor
mov
mov
jno
mov
sbb
dec
hlt
das
fidivrl
lds
pop
jae
inc
lcall
push
push
cltd
mov
push
push
mov
pop
lods
in
cmp
aad
mov
leave
mov
arpl
or
in
pushf
psubusb
ja
shll
test
adc
jne
icebp
push
sarl
cmp
call
sbb
sub
pop
sub
or
xor
xchg
bound
mov
xor
ret
sub
fnstcw
shll
cvtps2pd
rorb
pop
repnz
xchg
nop
mov
mov
mov
push
outsb
mov
push
xchg
xor
dec
cmp
mov
xchg
pop
xchg
pop
sbb
pusha
dec
jno
sub
flds
orl
dec
pop
aam
dec
cs
pop
xchg
add
fs
sub
out
mov
mov
testb
push
and
in
je
push
test
out
stos
sub
xchg
ja
pop
lahf
lods
imul
jnp
les
lahf
push
mov
rcrb
lcall
in
jne
inc
cld
repnz
and
std
push
in
sbbb
sub
pusha
popa
cli
sbb
cld
mov
repz
mov
mov
sub
jecxz
xchg
dec
addr16
test
dec
clc
xchg
pop
lea
mov
test
xor
adc
jno
dec
cwtl
or
mov
gs
fbld
push
mov
das
out
dec
mov
lods
fcoml
pop
lods
aam
sub
addr16
cmpsl
mov
decl
sbb
scas
xchg
cmp
xorb
and
fsubrs
add
jle
cwtl
aaa
jae
dec
hlt
ret
in
mov
push
push
hlt
fldl
subl
push
adc
lahf
dec
pop
ret
cmp
arpl
jg
insb
enter
fldt
mov
dec
cmpsl
js
cmp
pushf
insl
push
sub
jne
cmp
es
push
inc
xchg
cmp
mov
enter
push
ffreep
sbb
sub
mov
pmaddwd
roll
je
scas
aaa
sub
js
lret
fwait
mov
jl
jge
leave
pop
mov
fnstenv
xor
bound
push
xchg
adc
jg
mul
pop
test
rorb
add
arpl
imul
hlt
and
jns
and
rorl
hlt
ja
fsubs
xchg
and
mov
popa
int3
test
xor
sbb
xchg
mov
push
or
or
xor
dec
fs
inc
insl
popa
imul
dec
lods
mov
mov
in
arpl
jp
sbb
dec
mov
add
push
lock
aad
gs
jg
or
cltd
pushf
rclb
and
sub
push
pop
jns
pop
and
mov
mov
testl
sbb
movsl
dec
jbe
ds
test
jl
popf
aad
mov
ficoms
jb
xor
jp
lods
sbb
icebp
or
and
insl
pop
push
pusha
out
jne
mov
pop
rolb
std
xor
pop
pop
insl
jg
push
gs
scas
in
fdivrl
mov
xchg
lcall
mov
in
lods
aas
fisubs
data16
mov
mov
and
fs
dec
fidivl
jge
cmp
add
aam
popf
fwait
push
sbb
cmp
push
imul
push
mov
and
mov
lahf
inc
xchg
enter
add
aad
arpl
sbb
jecxz
sub
stos
and
and
sub
shll
mov
mov
test
jb
movsl
xchg
mov
adc
or
inc
mov
lods
hlt
sbb
nop
dec
je
dec
jae
cmpsb
insl
mov
fcmovu
mov
xchg
test
or
fsubp
sti
push
or
cmpsl
outsb
lcall
xchg
lcall
jne
aaa
je
jmp
dec
xchg
mov
cmp
sub
pushf
sbbb
aam
loope
les
lods
lea
mov
jo
lcall
or
imulb
pop
insb
pop
shrl
fistpll
cmpsl
cmc
dec
push
mov
enter
mov
lods
adc
fdiv
lods
popa
adc
gs
pop
xchg
fs
std
cmp
and
arpl
adc
data16
sarl
xchg
xchg
cmp
sbb
push
push
jae
xchg
mov
mov
dec
testl
lahf
mov
jl
jg
rorb
adc
fwait
je
pop
fdivrs
out
das
stc
or
dec
mov
das
push
push
add
aam
mov
push
lret
test
cmp
scas
lahf
push
jns
stos
push
xorl
out
inc
mov
mov
xchg
adc
and
push
jp
jle
jne
cmp
aas
jg
out
loope
cmp
ds
push
xor
cmpsb
mov
mov
scas
mov
pusha
out
rcl
pop
popf
push
mov
or
pop
mov
fdivs
outsb
shll
pusha
sbb
fsubrs
dec
push
jle
fcmove
jno
push
in
and
inc
insb
stos
xchg
pop
dec
or
bts
iret
jno
in
sbb
mov
inc
cli
add
sbbb
pop
pop
lahf
adc
jmp
xor
lahf
push
inc
enterw
daa
call
rol
inc
sub
in
test
sar
xchg
inc
fs
push
pop
xchg
test
and
movsb
outsb
lcall
xchg
lea
notl
jns
mov
ret
dec
cltd
jno
ljmp
sub
popf
in
stos
cli
das
add
cmp
sahf
xchg
roll
add
incb
jno
ja
sbb
xchg
les
in
lock
xchg
adc
push
sub
fldcw
in
leave
pop
dec
xchg
rcrl
repnz
xor
scas
inc
call
mov
jb
inc
movsl
xchg
inc
jns
push
iret
iret
imul
pop
scas
hlt
icebp
fwait
mov
inc
ss
xor
pushl
xchg
mov
cmpsb
pop
stc
sbb
in
popa
movsl
ljmp
loop
addr16
mov
xchg
adc
mov
jbe
ds
cvttps2pi
inc
add
jne
je
stc
fstp
sbb
jmp
add
add
sub
sti
andb
push
testb
jmp
pop
cltd
aaa
pop
je
xor
rclb
in
or
pop
arpl
shlb
cmp
push
cmp
stos
inc
hlt
dec
add
lahf
push
cld
adc
outsl
sbb
es
std
addr16
stos
ljmp
xor
insl
into
xchg
adc
lods
test
or
adc
testl
cmp
cltd
fildl
in
adc
sbb
mov
jb
scas
je
test
out
sbb
mov
push
dec
mov
sub
mov
sub
cmc
jo
inc
cltd
mov
int
dec
ret
dec
mov
push
mov
in
jecxz
mov
mov
xchg
jb
xchg
repz
mov
out
mov
sbb
inc
ds
imul
into
mov
arpl
sub
aaa
pop
jmp
in
ret
loop
jbe
pop
aam
mov
dec
adc
inc
test
insb
bsf
push
movsb
bound
lret
cmpb
xor
popa
mov
cli
dec
arpl
daa
stos
dec
pop
pop
and
fmull
clc
pop
int3
mov
stos
shrl
rorb
stos
addb
andb
cltd
cwtl
xchg
pop
dec
repnz
push
sub
fcmovnb
dec
add
mov
sub
std
retw
leave
pop
mov
sub
pop
shrl
sbb
movd
push
inc
dec
aas
ja
in
sub
jl
sbb
shr
stos
adc
sub
shrd
inc
xchg
fistpl
xchg
xchg
dec
pop
jle
add
jne
or
xor
jb
ficompl
rolb
cmp
push
aaa
pop
jo
mov
out
rolb
ret
es
and
mov
cmc
xchg
pop
jmp
or
imul
push
jae
je
adc
sub
xchg
jo
lret
push
aaa
loope
imul
enter
mov
mov
int
dec
out
push
fs
enter
sbb
clc
xchg
add
aas
mov
rcl
pop
sahf
inc
sarl
test
sbb
in
or
cmp
sbb
out
aam
sub
sbb
mov
and
mov
neg
xor
out
lock
mov
outsb
sar
push
ljmp
jo
pop
js
mov
xchg
mov
sub
mov
mov
jae
mov
push
push
inc
lahf
push
jbe
repnz
add
jg
and
scas
ljmp
mov
jecxz
sbb
mov
mov
add
add
push
mov
and
loop
jae
out
mov
jle
push
mov
subl
or
or
mov
enter
loopne
jns
fs
popa
cltd
sub
lcall
xor
in
aas
mov
cmp
xlat
inc
lods
or
popa
push
pop
jne
ja
in
jle
pushf
fiaddl
aas
fwait
dec
lock
sub
jnp
push
adc
gs
inc
cwtl
pop
lcall
push
push
pop
fcompl
shlb
xchg
pushf
dec
mov
jmp
and
cmc
imul
dec
jno
sti
call
xor
push
mov
sub
pop
mov
outsb
incl
cli
lods
cmc
xchg
fsubrs
pushf
mov
out
adc
ret
push
or
mov
fistps
sbbl
xor
adc
sbb
jns
popf
push
ret
test
fcomps
push
cmpsl
std
inc
jle
movsl
imul
gs
es
cmp
or
add
cmp
es
xor
cmp
add
dec
lcall
pop
xchg
fnsave
pop
cwtl
icebp
xchg
shr
imul
push
or
inc
test
pop
push
pop
dec
xchg
scas
outsl
jb
xchg
pushl
xor
xor
popf
cmp
lock
enter
xchg
dec
mov
stc
sbb
or
addr16
push
cmpsl
jnp
sti
loope
xor
jbe
imul
out
movsl
mov
sbb
jmp
push
mov
or
mov
cmp
in
sub
mov
je
jg
add
insb
mov
mov
mov
inc
inc
or
fsubs
lea
rcrb
ja
aaa
mov
sbb
fldenv
bnd
paddsw
hlt
adc
cs
mov
push
and
or
push
add
shlb
or
lret
jl
and
cmp
fs
add
call
out
icebp
inc
call
repz
add
fisubl
insb
dec
in
mov
test
movsl
fcompl
jecxz
out
pop
mov
lret
ret
aam
std
cmp
pop
data16
lret
inc
shl
mov
sbb
not
pop
jle
fisubs
dec
outsl
rorl
cmpsl
jle
das
jae
mov
mov
push
lret
add
jne
push
in
pop
xor
dec
dec
std
and
adc
mov
aaa
sbb
out
mov
or
std
daa
jnp
sub
pop
aas
lock
inc
push
rcll
push
pop
stos
idiv
inc
mov
mov
pop
pop
int
dec
and
dec
xor
sub
lahf
jp
popf
ds
mov
mov
testl
mov
add
mov
icebp
push
inc
push
xor
mov
sahf
les
mov
add
jnp
int
adc
mov
lret
fsubrl
mov
dec
popa
das
das
xchg
mov
jle
movsl
xchg
lock
jno
sbb
dec
movsb
inc
xor
cmp
push
ret
lods
xchg
jle
mov
jle
lock
mov
ret
xchg
xor
inc
cmp
mov
push
outsb
lret
imul
lods
adcb
pushf
xlat
test
arpl
cmp
mov
mov
ja
mov
mov
test
ficomps
cmp
in
sub
addl
scas
faddl
mov
push
cmpsl
lret
push
addr16
stc
pop
arpl
cwtl
lods
outsl
sub
add
cmp
push
fld1
jo
inc
pop
push
add
xchg
out
jbe
push
lret
mov
jne
daa
aam
in
sub
pop
test
jnp
ficoms
sub
outsl
pop
dec
int
inc
push
mov
scas
orl
xchg
ficoml
sbb
pop
rol
pop
pop
mov
pop
ret
inc
jmp
loop
cmc
sbb
push
or
cwtl
cmp
dec
or
mov
adc
xor
fidivrs
movl
popa
xchg
jge
decb
loope
push
dec
mov
mov
mov
jae
jp
inc
xor
mov
in
adc
and
aam
mov
pop
loope
into
cmp
pop
mov
pop
out
and
mov
push
sbb
sahf
cmovns
and
inc
jmp
andl
outsl
mov
orb
dec
sub
into
hlt
dec
mov
pop
dec
adc
iret
cmp
inc
jb
sbb
xchg
sub
dec
adc
ficoms
nop
jecxz
jmp
lods
cltd
cmpsb
in
call
cmpsb
pop
shrl
gs
popa
call
adc
sub
and
cmpsl
in
jle
out
sti
pop
add
push
xchg
mov
push
sbb
push
mov
mov
mov
mov
and
les
mov
fdivrp
enter
dec
daa
in
sbb
sub
mov
rcrl
push
push
mov
lret
clc
out
mov
divb
push
repz
into
mov
sbb
add
mov
jne
out
mov
push
cmp
push
push
pop
or
add
scas
xchg
mov
mov
mov
push
add
popa
iret
js
mov
or
out
sbb
push
xchg
jmp
pusha
jp
dec
fidivrs
adc
pop
or
loop
movsl
mov
int
jno
xchg
ret
aam
push
or
mov
movsl
lock
stos
movsl
xor
pop
scas
push
lods
aas
jbe
mov
dec
idivb
jae
ljmp
adc
jge
shll
mov
pop
sub
mov
lret
ret
adc
cmpsl
or
inc
or
push
fiadds
or
sub
arpl
pop
adc
cmp
cwtl
or
pop
or
rcll
mov
cwtl
addr16
fwait
addr16
jb
push
mov
aas
push
mov
xor
sbb
xlat
std
mov
scas
adc
incl
clc
loope
add
out
push
rcrl
inc
sbb
sahf
das
stc
inc
dec
test
xor
daa
jmp
popa
jmp
or
addb
ljmp
mov
bound
mov
pop
ret
xlat
jbe
lods
lcall
scas
or
xchg
sbb
clc
pop
lcall
in
in
cld
or
xor
push
sbb
clc
pop
es
adc
push
mov
repz
mov
andl
inc
mov
xor
in
test
pop
int3
mov
inc
ret
mov
mov
jne
jnp
mov
stc
lahf
xor
lret
jg
lock
sbbb
inc
and
andl
mov
mov
popa
cltd
fidivrs
ljmp
nopl
xchg
dec
flds
mov
xchg
lds
insl
out
stos
mov
push
pop
sbb
mov
and
jno
aad
sbb
sbb
push
insl
add
xchg
subl
in
popf
shrl
and
ret
inc
push
xchg
jns
fs
add
mov
movsb
fmull
aaa
dec
cld
xchg
icebp
mov
push
rol
daa
push
icebp
fsubrl
into
push
add
std
xchg
lds
adc
push
push
sbb
lret
cmpl
add
and
sub
ja
mov
add
nopl
and
pop
xchg
scas
lea
cwtl
loopne
into
mov
or
xchg
xchg
rorl
xorl
jnp
mov
and
sbb
insb
cmp
mov
inc
lahf
sub
ljmp
mov
leave
loope
and
fdivs
sub
mov
mov
test
sbb
mov
aaa
inc
xor
bound
ud0
pushf
mov
dec
jp
pop
filds
jo
xor
or
push
push
jg
push
loope
mov
jae
add
inc
fsubr
lret
mov
inc
outsl
out
gs
idivl
adc
xchg
jns
pop
and
dec
xor
test
add
push
adc
mov
cmp
fsts
aas
sti
xchg
es
insl
mov
int
les
mov
add
xor
mov
outsb
sbb
imul
jo
xchg
pop
stos
lea
xchg
fcmovbe
bound
mov
push
icebp
es
mov
cld
and
stos
sub
lods
pop
ljmp
mov
inc
psubsw
ja
insl
rcll
jge
add
imul
adc
add
jle
sub
fwait
push
add
pop
pusha
imul
lea
xor
add
inc
sbb
add
fisttps
fcomp
dec
lds
cmp
lea
pop
imul
mov
mov
xchg
leave
das
jl
mov
and
out
inc
pop
adc
sbb
xor
loopne
and
addl
enter
add
movsb
mov
sbb
mov
hlt
jo
add
in
movsl
adc
mov
stc
fisubl
sti
outsb
imul
gs
stos
fimuls
and
les
test
pop
je
xchg
push
sbb
mov
jns
cmp
loop
cmc
rcrl
mov
xchg
es
imulb
adc
js
xchg
fildl
add
mov
shlb
pushf
dec
push
mov
in
shrb
test
or
lock
push
cwtl
roll
ret
pop
jg
aaa
adc
or
bound
icebp
lds
jecxz
jmp
sbb
lret
mov
and
cmpsb
dec
and
insl
outsb
lret
fmull
cld
pusha
cmp
imul
stc
int3
scas
mov
clc
popf
shl
popw
test
inc
push
xor
repz
xlat
xor
sbbl
xchg
insb
add
stos
and
sbb
imul
into
push
mov
out
clc
cmpsw
xchg
mov
movsb
dec
adc
push
mov
jmp
xlat
or
sbb
dec
push
ds
aaa
xchg
mov
addb
cli
add
stos
add
dec
shr
dec
sti
xor
dec
rolb
mov
aaa
daa
je
sub
sub
adc
enter
xor
sbb
int3
mov
jbe
xchg
mov
adc
ret
push
cmp
arpl
and
mov
fadds
add
call
test
push
imul
mov
pop
repnz
pusha
in
ret
in
adc
in
or
and
jae
mov
adc
lods
int
mov
testb
jecxz
shlb
aam
dec
jno
in
pop
jl
imul
jl
dec
adc
sub
call
out
cmp
xlat
mov
add
repz
lea
pushf
mov
push
insb
fs
mov
inc
cs
aad
sbb
lods
mov
sbb
mov
push
data16
xor
push
xor
and
add
in
cmpsb
repz
aaa
jmp
addr16
sbb
nop
xor
adc
cmp
add
sub
or
shrb
imul
adc
fwait
dec
rcrl
xor
xor
int3
xchg
or
lret
or
jae
sti
cmp
push
mov
or
or
mov
and
repz
sbb
lods
push
std
dec
popf
in
aaa
shrb
jne
cmp
or
sbb
jbe
sub
sbb
rclb
adc
mov
and
fisttpll
mov
ja
movsl
call
cmp
out
vmwrite
mov
pop
std
aad
jne
and
sub
xlat
mov
and
pop
jbe
aad
mov
xchg
cmp
mov
mov
repnz
mov
mov
mov
jo
mov
les
push
inc
nop
cmpb
jns
or
cwtl
cmc
js
push
jnp
in
or
and
xor
shlb
sub
icebp
sub
xchg
outsb
mov
sub
sti
jne
xchg
jo
aas
dec
and
push
test
ja
dec
popa
lret
gs
cmp
pushl
addr16
push
xor
fstl
adcb
mov
insb
pop
int3
push
daa
push
pop
xchg
adc
fs
mov
out
cmp
mov
xlat
mov
xchg
call
adc
imul
fmul
mov
add
dec
movsl
je
mov
stos
mov
pop
scas
pusha
cli
xchg
push
fisubl
adc
pop
lcall
mov
repz
fidivl
jge
cmpsb
push
xchg
shrl
sub
push
pushf
js
inc
fcmovnbe
fisubrs
jge
add
dec
mull
mov
xchg
pop
jae
cmpsb
xor
leave
lret
pop
xchg
sub
jno
popa
jno
loope
pop
imul
mov
out
repnz
cli
mov
lods
ficompl
push
in
outsl
mov
imul
pop
pop
cmpsl
or
int
arpl
test
out
jle
mov
jnp
jne
sbb
cmp
lods
adc
jnp
inc
rorl
push
out
pop
in
out
jbe
dec
and
pop
add
fs
sti
popl
sbb
fs
lods
add
leave
mov
movsb
mov
fmuls
and
sti
add
ret
imul
push
jp
mov
push
lcall
sub
lret
test
subb
fwait
jo
mov
icebp
adc
pop
fdivl
gs
and
cmpsb
xchg
inc
jmp
jne
cmp
mov
aaa
push
lret
sub
mov
xchg
rcrl
stos
inc
insl
fildl
scas
cmp
inc
or
hlt
xor
daa
jne
cmp
push
push
add
jle
pop
shlb
int
pop
mov
ljmp
es
lahf
cmc
mov
mov
mov
jne
or
int
bound
rorb
sub
cmpsl
xchg
testb
jmp
shll
pop
lea
pop
das
xchg
jle
cwtl
test
jbe
xchg
jb
mov
pusha
movsb
sub
xor
mov
xchg
pop
inc
movsl
fcoms
adc
mov
and
jg
jbe
cmpsl
lcall
mov
xor
mov
fadds
loop
imul
pop
cld
dec
push
das
repz
cmovbe
fwait
sub
sub
xor
inc
cmp
icebp
in
leave
cmpsb
inc
xchg
jns
sbb
or
and
cmp
inc
push
push
xchg
cmp
mov
mov
jmp
inc
push
xorl
jae
xchg
add
xchg
or
xlat
mov
cmp
lock
aas
arpl
jo
sub
add
decl
mov
repnz
mov
mov
xchg
mov
icebp
cmp
std
add
inc
cmp
into
cld
insb
testb
sti
scas
leave
rol
sub
sahf
adc
iret
pusha
fists
dec
jns
push
fsubrl
call
scas
arpl
sbb
mov
dec
inc
repz
jecxz
orps
cld
daa
addb
int
movsl
pop
out
aaa
out
subb
push
push
orb
mov
cmp
ljmp
inc
and
cmpsl
gs
test
lcall
rclb
push
jb
das
notb
cs
mov
sarl
jno
mov
and
push
and
xchg
cmp
jae
mov
inc
jle
pop
mov
dec
mov
std
aaa
test
mov
pop
inc
imul
cmp
mov
jecxz
pushf
pop
inc
jg
shlb
jo
int
mov
sub
dec
xor
loop
mov
lods
inc
or
mov
fdivl
in
push
mov
ja
mov
pop
iret
mov
clc
int
push
xorl
test
paddsw
mov
inc
push
and
cmp
push
lock
leave
rolb
pop
mov
push
cmp
cltd
xor
push
and
mov
imul
fsubs
pop
pop
push
pop
es
mov
scas
dec
bnd
cli
rep
adc
jno
inc
dec
add
repz
dec
movb
and
xor
orb
jg
cmpl
out
mov
adc
jmp
cmp
jo
add
repz
and
add
inc
cmp
imull
test
push
aas
lods
jp
rclb
fisubrs
rcrl
pop
pushf
cmp
out
out
sbb
push
dec
out
shr
push
divl
outsl
sub
clc
sti
mov
insl
shrl
xchg
cmp
insl
inc
lahf
inc
loope
insb
fmuls
dec
xor
das
in
shll
aam
sti
lahf
or
bound
sub
pop
out
push
jge
fwait
push
push
add
xlat
cmpsl
lret
aaa
add
and
mov
inc
push
pop
insb
fnstenv
xchg
rorl
or
pop
sti
test
xor
mov
sbb
xchg
adc
push
pop
inc
jb
jns
movl
cmp
cmp
or
fildl
pop
mov
in
push
or
push
xchg
adcb
scas
and
sub
lret
xor
or
or
inc
leave
je
jle
and
ss
fdivl
sbb
cli
inc
rcl
loop
dec
ds
sbb
pop
sti
pop
pusha
xchg
mov
ret
pop
sub
push
and
outsl
mov
popf
incb
mov
jle
adc
and
mov
scas
push
ret
add
outsb
lock
shll
out
rorl
jb
cltd
xchg
push
xlat
out
das
mov
stos
dec
fdivrp
jg
xorl
xchg
xchg
jge
ss
in
rorb
outsb
mov
jl
xchg
mov
jo
cmp
aas
push
inc
dec
jle
dec
pop
mov
pop
lret
rcll
push
test
mov
hlt
jmp
xlat
mov
lahf
out
aaa
les
mov
out
dec
ds
aas
inc
leave
arpl
xorl
lahf
mov
mov
sbb
gs
mov
xchg
push
test
inc
cmp
mov
jmp
lods
xor
sar
mov
add
and
sbb
addr16
dec
inc
test
xchg
add
in
xlat
xchg
pusha
aaa
int
orl
stos
popa
mov
shrb
inc
mov
out
pop
add
loope
out
andl
sub
std
test
iret
js
int3
pop
push
dec
or
inc
cld
hlt
cmp
pop
xor
es
pop
adc
dec
fsubrl
into
ret
add
push
cs
inc
pop
sbb
pop
or
or
in
pop
les
sub
sub
leave
push
sbb
xchg
inc
push
cltd
imull
cli
xor
loope
xor
jle
xchg
pop
adc
data16
push
cmp
stos
icebp
addr16
pop
sti
std
mov
cmpsb
pop
sahf
andb
lret
incl
lret
sbbl
testb
xchg
sbb
inc
pop
in
mov
dec
push
movsb
inc
xor
cmp
add
add
sbb
lcall
fimuls
movsl
xchg
decb
enter
ret
test
and
mov
jno
lret
pop
mov
mov
mov
or
fdivl
sub
mov
cltd
inc
jl
mov
scas
push
cmp
rcll
push
cmp
sub
xchg
enter
cmp
or
cmp
ljmp
inc
jge
sbb
xchg
out
mov
dec
je
fdivrp
movsl
mov
or
jle
push
mov
push
lods
ds
and
push
adc
fyl2xp1
pop
push
or
call
imul
mov
adc
xor
addr16
in
lods
xorb
and
mov
out
popa
enter
jp
lahf
outsb
lcall
into
or
pop
enter
dec
leave
or
sbb
mov
xchg
aad
iret
cmpsl
dec
cld
sbb
sbb
stos
mov
jmp
xor
stos
pop
xor
insb
push
jb
in
pop
push
loope
stos
inc
cmp
xor
lds
mov
clc
flds
fwait
dec
mov
mov
pop
inc
pop
cltd
sbb
dec
lods
stos
lahf
out
leave
hlt
lret
daa
mov
fistps
push
jo
jnp
lds
jp
jecxz
pop
sub
scas
bound
movsl
pop
dec
cmpb
adc
push
fiadds
mov
es
ds
iret
outsb
cmpsb
dec
mov
rcrl
test
stos
movsl
rcrb
test
add
dec
inc
and
fs
sub
aaa
in
rcr
or
jmp
cmp
in
outsb
jae
lcall
adc
rol
pop
sbb
int
pop
jnp
int
fsubrs
push
aas
cwtl
les
inc
jne
je
ds
or
jg
mov
add
and
mov
insb
movsb
mov
sti
ret
popa
mov
lahf
push
mov
aas
int3
rol
icebp
jl
repnz
scas
push
mov
xor
pop
push
sub
inc
sbb
rol
and
test
adc
out
pop
mov
dec
arpl
jbe
sbb
push
jecxz
xchg
mov
pop
cmp
xor
sbb
pushf
es
jno
das
mov
insl
push
lcall
sbb
or
outsb
xorb
outsb
jmp
push
sti
mov
or
into
lret
rcrl
mov
es
lahf
mov
fwait
adc
out
fsubl
adc
fldenv
pop
dec
cs
or
test
mov
cmpsl
xchg
fldt
icebp
ss
and
jmp
pop
jg
xor
or
or
pop
sbb
or
fwait
negl
jno
mov
and
adc
fwait
lods
lret
mulb
cld
mov
inc
xchg
in
fiadds
push
mov
mov
les
test
sub
xchg
push
jge
jns
cmp
insl
mov
xchg
push
and
or
mov
jmp
or
dec
ret
test
pop
push
xchg
pop
mov
iret
stos
lea
jl
sub
test
mov
dec
lret
xchg
fisttps
add
insb
cmp
inc
rep
push
decl
sbb
mov
in
pop
and
cmpsl
sbb
lock
add
mov
inc
pushf
pushl
nop
fnsave
popa
and
dec
fistpll
mov
mov
pop
pop
xchg
pop
mov
gs
enter
les
shll
andl
ja
addl
cli
cmp
arpl
jbe
cmp
push
push
mov
fists
lds
or
and
aaa
scas
add
sub
jns
jno
sub
daa
adc
outsl
sbb
push
ds
in
cli
stos
imul
in
jae
not
mov
cltd
test
cmp
loope
out
arpl
pop
test
imul
iret
popa
cmpsl
fistl
out
adc
mov
leave
sbb
cmp
fwait
adc
add
push
aad
call
push
push
push
loopne
mov
add
test
or
lahf
xor
mov
inc
cmp
fwait
mov
jmp
push
loop
or
test
sarl
orl
add
mov
addl
int
jmp
sbb
and
les
call
mov
js
rcr
sahf
faddp
add
loop
addr16
shlb
fs
adc
loopne
aaa
je
daa
mov
aaa
stos
mov
or
cmpsl
xor
les
out
call
je
rep
fisttpl
lods
push
in
js
jno
or
mov
fildll
pop
xchg
push
loop
fyl2xp1
cmp
adc
jmp
push
fs
loopne
dec
jmp
adcb
sbb
mov
adc
fsubrs
ja
mov
mov
stc
adc
pop
adc
daa
jns
sbb
mov
mov
xor
cmp
sbb
sbb
frstor
pop
fst
push
push
or
jl
repz
out
repnz
addr16
lret
jb
mov
fldcw
pushf
mov
aas
pusha
ds
pop
scas
popl
daa
lods
or
cmp
into
scas
mov
icebp
sbb
arpl
fdivrs
cmp
sar
mov
cmpsl
mov
xchg
hlt
dec
dec
cmovg
in
xchg
dec
xchg
adc
fwait
cwtl
sbb
ret
lret
cltd
into
xchg
add
push
sbb
int
or
aad
mov
and
arpl
mov
mov
ja
bound
sub
adc
mov
insl
xor
mov
pop
lcall
add
fisubs
jmp
add
or
mov
jae
std
lret
fcmovnu
gs
ficompl
loop
xor
out
fstps
add
inc
and
and
xor
popa
mov
dec
outsb
push
pop
out
int3
dec
pop
fldt
push
scas
shlb
jae
jecxz
xor
mov
xor
xor
dec
shl
pop
push
mov
mov
push
or
std
inc
mov
je
mov
movsl
add
test
mov
xchg
xor
and
movsb
aad
sarb
das
push
popa
mov
bound
push
mov
repnz
jns
std
dec
repnz
rcrb
sub
fs
fucomp
fiaddl
jl
mov
out
test
fnstcw
arpl
pop
out
mov
std
and
movsb
mov
jp
inc
mov
out
into
jl
push
pop
jno
sub
repz
inc
xor
add
lods
dec
jb
loopne
ja
sbb
sbb
pop
stos
gs
mov
test
das
push
pop
nop
cmp
cltd
sbb
or
std
insb
push
sahf
mov
aas
cmp
add
push
loope
repz
lcall
int3
movsl
mov
imul
cwtl
bound
dec
shl
fldcw
dec
out
lea
mov
xchg
sub
fisubrs
jmp
pusha
lcall
loop
inc
int
sar
pop
ds
iret
sbb
adc
mov
xlat
sbb
aaa
cwtl
test
inc
fwait
pop
call
mov
faddl
jg
int3
dec
adcb
sbb
pop
mov
sub
xor
cli
inc
dec
jb
je
jecxz
and
jb
test
jnp
and
xchg
call
xchg
pushf
nop
fistps
xor
scas
nop
mov
ljmp
sahf
cld
push
out
adc
push
fwait
inc
push
stc
ja
fdivl
filds
or
and
push
pop
hlt
out
fldl
enter
mov
repz
mov
stc
outsl
mov
xor
es
pop
pop
cmp
and
mov
add
xor
ds
push
inc
push
dec
or
push
repz
jecxz
outsl
pop
in
inc
les
sbb
push
flds
lea
mov
add
lds
insb
pop
fisubs
jmp
inc
pop
xchg
add
adc
aaa
inc
aaa
outsb
jb
mov
fildl
call
push
or
cmpb
or
shrb
push
test
das
enter
push
xchg
jo
fmull
icebp
mov
out
mov
in
ret
sbb
lods
cmpb
scas
addb
xor
into
adc
repz
mov
inc
lret
rol
xor
sub
cmp
call
add
pop
stos
mov
jnp
push
adc
cltd
pop
repz
call
dec
xor
std
jge
cwtl
and
sub
jle
ss
cmpsl
popf
cld
mov
push
jne
icebp
xchg
inc
mov
jo
sahf
push
icebp
sbb
jg
push
dec
dec
mov
jle
add
incl
in
inc
int
sub
cld
aad
jne
xchg
iret
sbb
cmp
xchg
xlat
addr16
push
add
mov
jo
daa
mov
sub
and
sbb
sti
or
out
sarl
out
das
push
lcall
fisubrl
cmp
push
in
push
push
jae
push
cmc
jae
or
mov
push
jecxz
les
test
loop
sbb
bound
mov
jo
dec
fstps
or
push
imul
lods
xchg
mov
or
xorb
pop
loop
stos
data16
ret
insl
scas
pusha
sbb
outsl
icebp
popa
popa
dec
inc
mov
cmpb
scas
movsl
imul
stc
inc
sub
push
fwait
daa
jge
loope
test
call
jmp
add
clc
xor
cmpsb
and
aad
xor
fs
div
test
push
shlb
xor
lea
into
add
pop
ret
test
stos
inc
setne
les
adc
mov
push
call
out
fwait
jecxz
ds
pusha
sub
mov
les
fsubr
push
jl
or
xor
mov
aam
fisubrs
adcl
ret
leave
jno
cmpsl
cmc
int
cltd
roll
dec
push
jo
push
mov
repz
pop
dec
inc
sti
sbb
dec
ljmp
pop
loop
outsl
imul
fildll
mov
aas
pop
orb
dec
out
popa
ss
into
std
nop
mov
loop
icebp
add
test
mov
add
ret
push
leave
sub
notb
js
lcall
idivl
loopne
inc
sbb
jl
xchg
push
in
pause
jo
stc
inc
xchg
rorl
mov
mov
leave
in
insb
test
sub
mov
sub
stc
xchg
jns
popa
dec
push
xor
shl
mov
sub
pop
rolb
sbb
mov
mov
xchg
movsb
mov
jns
or
shll
inc
roll
nop
xchg
aas
stos
pop
test
decb
aas
xchg
mov
add
cli
sti
mov
add
sbb
pushf
or
dec
dec
addr16
pop
ljmp
xor
jo
ja
rclb
pop
mov
mov
jg
dec
xor
adc
xchg
ficomps
xchg
aad
lret
mov
sahf
or
pop
je
das
repnz
mov
push
push
xor
add
sub
pop
mov
shl
std
push
mov
notb
mov
push
ret
sbb
add
dec
xchg
inc
jecxz
xlat
push
out
cmpsl
ror
testb
and
gs
rolb
aas
mov
mov
push
lcall
nop
cmp
add
adc
cmc
cmp
xlat
test
xor
push
test
out
shlb
rcll
mov
repnz
movsb
and
push
lret
out
in
shlb
mov
movsl
enter
mov
push
push
outsl
pop
push
push
lcall
fwait
mov
scas
pop
popa
inc
jp
xor
mov
test
cmp
int3
stos
xor
or
hlt
shr
call
cmp
and
clc
cmp
std
mov
sub
push
mov
lret
cmpsl
cmpsb
loope
cld
test
push
xchg
jp
inc
jns
and
fs
imul
xchg
sar
jb
mov
and
xchg
inc
sub
mov
loop
mov
or
or
mov
fistps
mov
outsl
sbb
movsl
lcall
cmpl
lret
inc
scas
push
arpl
jae
fwait
insb
push
inc
cmp
mov
gs
mov
pop
cwtl
and
fwait
jp
iret
mov
shll
pushl
push
shl
inc
int3
scas
xchg
pop
xor
xor
cwtl
repnz
lds
mov
push
das
jns
dec
cmp
rcrb
out
fs
jb
sbb
ret
inc
jnp
cmp
mov
in
mov
and
push
xchg
add
loope
call
adc
addr16
xor
fcompl
clc
cs
mov
fs
subb
mov
sbb
and
pop
fistl
xchg
out
cs
and
xor
cli
xchg
mov
fstenv
hlt
pop
mov
push
lock
pushf
js
cmp
inc
nop
fwait
fs
pop
loopne
or
xchg
cmp
pusha
jle
mov
sarb
mov
adc
sbb
out
cmpl
sti
out
or
int
mov
lret
lea
inc
jns
cmp
loop
xchg
ja
dec
popf
xor
jnp,pn
shrb
jle
push
xchg
idiv
sahf
les
pop
mov
cwtl
outsl
sub
cmp
aaa
xor
sarb
and
push
shlb
pop
sub
pop
jo
pop
loope
adc
imul
xor
sbb
js
or
xchg
push
and
fdiv
popa
xchg
fldcw
adc
mov
incl
jle
jl
cltd
mov
mov
jno
or
push
lea
mov
xchg
jbe
test
sbb
cmpsb
into
add
inc
mov
cmp
cli
lahf
scas
or
fistpl
ljmp
mov
jg
testb
push
outsb
cwtl
int
popa
pop
out
pop
sub
and
and
xchg
dec
jb
jl
xchg
add
nop
insl
jo
push
add
ljmp
adc
je
push
pop
hlt
jae
push
js
push
shrb
and
cmc
push
roll
and
adc
and
cs
add
in
and
xchg
or
out
fs
addr16
pop
adc
repz
mov
mov
inc
xchg
call
jmp
mov
mov
call
push
aad
popa
jo
loop
hlt
movsl
and
adc
xchg
shl
into
pop
dec
scas
pop
push
and
xor
sbb
in
lret
and
push
mov
popa
xor
int
push
addl
std
imul
jo
insl
sbb
pop
aad
mov
xchg
dec
jne
outsb
insl
jge
add
xchg
cmc
ljmp
imul
fidivs
push
insl
pop
jbe
shrb
push
mov
sbb
mov
pusha
xlat
pop
ljmp
or
repz
sub
faddl
int
inc
xchg
xor
fcmovnbe
push
push
pushf
call
sub
inc
loopne
rcrl
sbb
dec
mov
repnz
loop
xor
fldcw
pop
mov
xchg
pop
add
and
fldcw
and
pushf
pop
mov
or
pop
add
pop
out
in
mov
mov
sti
jge
mov
int3
mov
xor
sub
push
rorl
fdivs
cwtl
sbb
inc
idivl
test
dec
icebp
pop
mov
mov
repnz
or
sub
add
out
out
pop
xor
aad
push
xchg
inc
fs
loope
sub
lods
es
or
lea
dec
or
lds
xchg
mov
lahf
mov
lret
sbb
notl
daa
leave
mov
push
je
es
push
sub
inc
outsl
jg
out
sbbl
and
sbb
les
ret
xchg
hlt
aas
sbb
or
mov
lcall
adc
mov
adc
dec
mov
nop
pusha
cld
add
inc
stos
mov
nop
inc
jle
cmp
inc
mov
mov
daa
cltd
ss
popa
xchg
int3
inc
lods
cmp
call
jne
ja
push
int3
xchg
jle
and
out
jno
xor
sub
lds
add
movsb
sbb
mov
addr16
out
imul
xchg
lods
adc
or
into
xchg
outsl
mov
ljmp
push
sbb
frstor
sbb
xor
lds
in
mov
sbb
in
mov
in
mov
subl
sub
lret
cmc
push
dec
faddl
jge
push
push
pop
sbb
inc
cld
push
xor
jmp
sub
les
adc
pop
pop
or
inc
fdivrl
dec
sahf
cltd
cmpsl
cmc
addb
push
js
cmpsb
add
pop
push
nop
jo
sbb
ror
lea
sbb
sbbb
fwait
shll
and
push
decl
mov
or
lahf
sub
jg
ret
out
xor
aas
cwtl
cwtl
push
and
imul
sbb
out
dec
cmp
in
mov
xchg
xlat
cwtl
enter
fstl
leave
sub
lret
les
mov
popa
sti
clc
push
pushf
add
scas
mov
add
fldcw
aas
dec
cli
adc
lods
cld
fmuls
aam
cmp
lcall
adc
cmp
or
xchg
sub
leave
scas
jns
insl
mov
cmp
dec
aas
shll
jae
and
in
scas
dec
pop
dec
xor
pop
jmp
cmc
and
mov
lods
sbb
dec
notb
xor
hlt
and
adc
jae
mov
jno
pop
cmp
mov
in
sbb
sahf
loope
arpl
or
mov
mov
adc
mov
loopne
test
xor
stos
addr16
or
add
mov
mov
aad
mov
scas
fwait
data16
add
and
aam
pop
sahf
pop
adc
pop
jae
ss
add
loopne
fcmovnbe
popa
orl
push
lahf
or
stc
xor
adc
or
jge
add
cmp
adc
jg
les
mov
xchg
or
cmpsl
loop
adc
clc
cmp
jg
in
adc
sahf
jo
sub
repnz
pushf
mov
mov
lods
jp
push
or
adc
loop
mov
adcb
inc
dec
dec
cmc
or
and
movsb
sbb
add
fnsave
or
outsl
arpl
jo
insb
dec
xchg
inc
into
jnp
lea
int3
incb
mov
icebp
push
stc
and
mov
cld
add
int3
push
pushf
stos
cmpb
lods
push
adc
cmp
sub
cltd
lods
dec
adc
pusha
ljmp
push
adc
jmp
fwait
mov
out
pop
incl
sahf
add
sbb
les
dec
sub
dec
push
sbb
test
sbbl
cwtl
xor
jno
rol
xor
out
fcomip
fildl
inc
jo
cmp
and
push
mov
or
adc
clc
aas
cmp
jecxz
push
or
pop
rcrl
xchg
mov
and
movb
mov
push
push
loope
push
pop
ffree
mov
sub
fdivs
add
cli
and
sbb
scas
xchg
cld
adc
in
cmp
jmp
mov
or
or
jle
into
xchg
aaa
jge
inc
push
add
shll
or
mov
mov
mov
insb
pop
test
mov
add
push
pop
out
mov
pop
cmpsb
or
test
xchg
push
insb
inc
fldt
hlt
iret
cmp
pop
push
cmp
es
push
and
iret
inc
and
fbstp
dec
xor
adc
sub
roll
mov
and
cltd
inc
ds
das
notb
jg
fs
lret
in
imul
and
adc
test
jecxz
jbe
lods
pop
jmp
xorl
andb
add
ljmp
icebp
ret
or
iret
sub
lds
add
mov
pop
jmp
and
pushf
adc
aam
inc
pushf
mov
std
sbb
mov
dec
jb
out
rolb
mov
add
mov
popa
jg
dec
pop
dec
lret
mov
imul
popf
sbb
jbe
adc
leave
mov
pop
mov
std
inc
push
ret
jae
aas
mov
push
pop
cmc
or
inc
std
ret
rclb
leave
out
bound
data16
pop
sahf
or
aas
lret
xchg
push
or
imul
add
mov
xchg
jecxz
test
push
inc
push
call
fiaddl
addr16
sbb
push
add
sbb
pop
test
lods
dec
xchg
mov
icebp
inc
jl
dec
add
sub
lret
bound
ret
mov
lds
movsb
adc
sub
popa
sahf
or
es
or
push
sub
stc
fisttps
js
imul
push
enter
ds
divl
in
out
addr16
hlt
cmp
test
xlat
cld
fcom
mov
push
pop
cmpsb
pusha
xchg
mulb
sti
incb
xor
in
sub
xchg
inc
scas
pop
scas
cmpsb
jne
in
test
cli
inc
pop
or
jo
ror
ljmp
imulb
arpl
ljmp
xor
imul
push
xor
mov
addr16
fnsave
mov
mov
dec
aas
jmp
inc
rcrb
and
out
cli
enter
in
jmp
cmp
jecxz
outsb
cmp
pop
adc
and
mov
sarb
jmp
movlps
fiadds
aam
mov
out
pop
js
fstpt
loope
xor
hlt
or
cmpb
push
mov
out
sbb
or
nop
mov
lcall
jno
adc
fcoms
aaa
inc
rol
mov
mov
fcmovnb
xchg
popf
test
rcrb
filds
mov
or
jle
daa
das
test
dec
xchg
fisubrs
or
dec
mov
lcall
or
imul
ds
andl
push
adc
movl
leave
xor
sub
and
xor
bound
cltd
xor
bound
jae
adc
sbb
loopne
rorb
cld
rclb
mov
xchg
pop
scas
xor
test
in
mov
aas
lahf
dec
fwait
test
cmp
lock
add
notb
or
pop
popa
xchg
out
and
mov
push
mov
mov
int3
jnp
xchg
mov
push
push
xchg
imul
mov
aam
loop
push
aaa
loope
push
xchg
outsb
ss
or
or
pop
pop
add
pusha
pop
arpl
pop
addr16
jmp
dec
add
daa
dec
rclb
ss
cmp
and
jp
pop
pop
push
dec
fisttpl
mov
sbb
pushw
mov
mov
cmp
push
testl
mov
xor
jmp
push
cwtl
mov
rcrl
push
sub
out
ds
into
aam
std
lock
or
pushf
sub
adc
cmc
fs
aaa
mov
cli
inc
xor
pop
mov
stos
jbe
arpl
or
mov
and
pop
xchg
out
int
push
cli
mov
in
outsb
testl
inc
push
jno
push
shlb
es
fdivrl
xchg
cwtl
aaa
in
ds
or
out
lock
push
lds
push
outsb
into
mov
mov
pusha
notb
and
or
mov
pop
repnz
imul
ja
mov
inc
les
mov
stos
dec
nop
loope,pt
cmp
push
cmp
daa
pop
in
inc
mov
or
stos
std
std
pop
mov
stos
inc
fidivrl
and
test
popa
pop
pop
jne
push
loopne
sbb
lahf
dec
mov
pop
pop
adcb
rcrb
inc
sbb
xchg
push
mov
in
cmp
popa
pop
sbb
das
loope
gs
test
xor
inc
out
out
pop
stos
mov
sub
inc
scas
lahf
or
xchg
or
lret
popf
adc
xchg
cltd
add
jbe
lock
repz
cmpsl
xlat
xchg
jae
pop
dec
jno
adc
dec
jecxz
dec
stos
mov
stos
das
sub
incb
inc
dec
jmp
orl
in
mov
out
jp
pop
and
cmp
add
ljmp
nop
fisubrl
mov
in
fninit
push
insb
xchg
dec
xchg
sub
aad
and
and
and
das
bextr
adc
cld
xchg
cltd
les
push
jbe
jb
dec
and
je
dec
adc
xor
insb
mov
aad
xlat
push
movb
movsb
dec
es
imul
inc
aam
sbbl
pusha
stos
sub
shll
js
xchg
outsl
mov
pop
cmp
xchg
test
test
cmp
arpl
mov
aas
mov
jl
sub
mov
test
pop
cli
jl
insb
cmpsl
and
ds
push
stos
mov
sub
cmp
xor
popf
jns
pusha
retw
pushw
scas
push
xchg
mov
or
aad
test
cmpl
in
daa
jnp
sbb
sbb
jo
cli
rcll
sarl
test
cmp
fs
rclb
inc
mov
jb
cmpl
push
scas
cs
jecxz
push
ja
not
cmc
cmpsl
mov
cld
or
bound
dec
fidivs
push
fcoml
nop
nop
xor
pop
ja
out
fisubrl
nop
hlt
add
fs
mov
xchg
pop
dec
nop
cld
sar
sub
into
rcll
jecxz
lods
in
cld
scas
and
mov
mov
fdiv
lea
adc
dec
sbb
cmpsb
lods
mov
js
mov
leave
inc
push
push
jl
push
lret
push
test
push
lock
ret
xor
shlb
shlb
sahf
insb
cmp
andl
bound
aad
dec
out
and
jae
cmpsb
cmp
jno
stc
pop
test
stos
mov
pop
test
mov
mov
int3
pushf
iret
mov
das
lea
imul
mov
addl
mov
fstpl
add
jae
les
dec
outsl
mov
leave
jecxz
jge
or
and
out
cmp
ss
mov
mov
std
jmp
mov
push
xchg
mov
hlt
and
inc
test
jbe
sbb
jbe
ret
add
lods
adc
sub
sarb
in
xchg
mov
cmp
test
leave
stc
mov
sbb
mov
arpl
fucomip
jo
fdivrs
mov
shrl
and
push
in
mov
scas
clc
dec
sbb
jno
testl
xor
insb
pop
and
xor
pop
adc
or
push
mov
inc
aad
cmp
addl
inc
imul
pushf
push
es
sbb
lcall
or
jecxz
sbb
push
loopne
jmp
ss
sub
jg
sub
cmp
loope
data16
xchg
insb
sub
dec
add
dec
lahf
lcall
fcmovb
mov
imul
pop
adc
mov
lea
loope
jns
or
adc
xor
or
add
mov
jno
arpl
ret
fiaddl
xchg
push
push
shll
popa
dec
mov
mov
push
scas
rcll
out
jl
push
mov
aaa
xchg
ds
test
daa
and
arpl
cltd
jne
lret
in
jle
stc
xor
mov
inc
push
cmpsl
repz
mov
sbb
add
ret
mov
popf
xchg
push
popf
jbe
mov
sbb
xorl
es
cmpsb
test
push
jle
clc
add
mov
jecxz
lcall
scas
fisttpl
jp
fwait
ja
cltd
cmpsb
cmpsb
sbb
mov
imul
ds
popf
test
outsl
aas
movb
mov
jnp
out
pop
inc
push
rol
jne
jp
jno
adc
jnp
dec
lret
out
mov
mov
cmp
mov
sahf
stos
int3
cmpsl
and
jnp
rcr
je
pusha
jle
cmp
in
jge
lcall
int
repnz
stos
cmpsl
adc
xchg
mov
call
pop
dec
stos
popf
mov
in
mov
pop
cltd
or
or
inc
mov
and
jbe
mov
icebp
testb
or
loope
or
out
popf
pop
cld
mov
mov
cmp
and
jge
add
adc
movsb
dec
out
int3
icebp
aaa
outsb
int
loopne
and
sbb
mov
inc
fucomip
dec
cmpsb
xchg
xor
mov
mov
lea
cmpsl
mov
xchg
push
xor
sahf
cmp
mov
adc
in
and
scas
pop
insl
movsl
inc
into
out
sub
xchg
jl
push
stc
dec
and
out
cwtl
cmp
les
sbb
push
cld
push
jle
pop
and
push
lcall
xor
cmp
fsubp
pusha
mov
xor
add
daa
repz
push
cmc
imul
into
std
notl
cmp
in
nop
or
dec
ret
lods
fcompl
mov
jns
pop
sub
cmpsb
xor
ret
repz
push
mov
jg
scas
leave
call
adc
adc
mov
adc
adc
dec
xor
aaa
icebp
sbb
xchg
test
inc
xor
sub
out
pusha
adc
stc
stc
insl
xchg
xlat
hlt
in
fsubl
jo
mov
push
inc
mov
sbb
or
xchg
clc
imul
gs
popa
mov
sub
es
sbb
mov
xlat
imulb
inc
and
mov
xor
in
and
adc
cmp
pop
divl
jae
mov
sahf
add
insb
shr
add
out
mov
xchg
je
or
lcall
mov
mov
sbb
push
ss
lret
add
add
or
lret
mov
sbb
dec
mov
daa
sbb
mov
or
test
xor
dec
jb
or
cmpb
adc
sbb
mov
insl
add
push
in
jl
lock
push
sub
cli
push
push
addl
cltd
bound
mov
icebp
std
sub
add
or
mov
mov
into
subb
push
aas
subl
jns
fwait
ljmp
les
mov
outsl
in
fldenv
xchg
dec
test
scas
push
ror
or
xor
or
or
insb
and
dec
xchg
push
sbb
mov
dec
popf
xchg
shrl
jae
cs
ja
and
add
lods
out
daa
xor
pop
clc
dec
inc
mov
cmpsb
movsl
mov
mull
ss
insb
outsl
sbb
fiadds
jecxz
jno
mov
fidivrl
es
rcr
jnp
lods
js
xor
pop
into
fcomps
xlat
outsb
movsl
pop
cli
es
lods
inc
mov
jnp
sbb
das
test
test
arpl
pop
xlat
mov
and
inc
ds
xlat
dec
dec
std
mov
ja
fcompl
cs
movsl
cwtl
fidivl
jo,pn
push
sbbl
ret
cltd
mov
ret
fildll
imul
cmpl
inc
cmpsl
movsb
push
sbb
and
sub
clc
xchg
xchg
fstl
xchg
jns
mov
aad
imul
cmp
ja
mov
xchg
repnz
pushf
inc
push
push
mov
int
insb
fstpt
in
fildll
test
push
push
popf
imul
les
add
jl
push
mov
pop
jge
pop
pop
and
dec
or
cmp
jle
xorb
lea
inc
lret
popf
sti
dec
cmpsl
xchg
pop
ljmp
in
push
sub
cmpsb
shrb
push
in
sub
xchg
adc
sub
shlb
mov
iret
mov
push
dec
pop
push
daa
test
cmp
mov
mov
in
lods
pop
enter
jg
mov
pop
sti
and
pop
repz
sbb
inc
dec
dec
lret
fiaddl
test
mov
xor
imulb
lret
test
pop
jecxz
push
jp
push
mov
xlat
hlt
sbb
adc
divps
ucomiss
xor
rorb
lock
shll
fwait
ljmp
mov
sub
popl
lock
sub
ret
cmp
aas
repz
idivb
in
and
mov
xor
cld
push
cmp
sbb
and
xor
xchg
aam
in
jnp
inc
adc
dec
cmp
xchg
cmpsl
and
add
inc
stos
inc
xchg
movsb
scas
ljmp
rcll
dec
mov
aas
or
out
mov
test
push
inc
std
ret
out
push
mov
mov
mov
inc
jb
push
lods
jle
dec
sar
xchg
es
nop
in
sbb
add
push
xor
dec
xor
sub
push
test
fcoml
xchg
cwtl
adc
inc
fldt
test
jae
adc
cmp
xor
jb
inc
inc
dec
dec
adcb
arpl
push
mov
inc
int3
sarl
sbb
xor
das
or
dec
mov
popa
addb
cmp
les
xor
lret
out
xor
jo
dec
orb
push
cmp
ds
push
ljmp
je
and
pusha
outsl
in
rclb
or
push
xchg
jne
loope
xor
cmc
aad
and
push
mov
cs
and
sar
lods
mov
and
mov
push
mov
ret
xor
movsb
jbe
mov
aad
and
mov
or
sarb
int3
adcb
test
mov
jne
jno
dec
or
and
out
dec
or
add
xchg
jne
scas
shr
int3
fnsave
cltd
jl
push
test
add
cmp
sbb
out
pop
push
sbb
xchg
shrb
out
icebp
mov
jmp
orb
inc
push
lock
inc
sti
clc
cmp
sarl
inc
repz
es
adc
test
xor
outsl
stc
pop
cltd
outsl
inc
addb
sbb
xchg
cmc
outsb
jns
cmc
repnz
sbb
jl
adc
sti
mov
push
mov
inc
loope
ljmp
xchg
pop
stos
cs
shrb
dec
inc
cmp
pop
loop
cld
ja
mov
or
xchg
cmp
inc
pop
xchg
jbe
js
ret
movl
shr
lods
jmp
into
mov
jmp
sti
cmpsl
subl
mov
or
xor
cltd
decl
mov
in
or
jb
test
inc
inc
imul
inc
mov
and
dec
lods
add
shlb
xchg
dec
repz
jl
cmpsb
cmc
insl
fucomip
push
iret
lods
cmpsb
inc
cmp
mov
jmp
dec
in
les
cs
adc
xchg
and
push
cmp
mov
sarl
jae
push
je
fnstenv
push
dec
xchg
jg
sbb
mov
mov
cld
sbb
repnz
jno
insl
mov
mov
pop
in
mov
shrb
sahf
sub
mov
cmpsl
jns
mov
mov
add
aad
mov
loopne
push
sub
fdivr
cld
cmp
jne
pop
jge
mov
dec
inc
adc
ljmp
sbb
movsb
push
mov
jnp
cmp
mov
add
mov
pop
xchg
mov
int
stc
test
cmp
jb
push
hlt
jp
xchg
repz
in
pop
arpl
inc
fdivs
adc
pop
jo
jo
scas
in
sbb
mov
mov
ret
jb
lcall
dec
jbe
fistpl
jmp
sub
pop
lcall
cmp
dec
pop
mov
aad
inc
int
std
pop
sbb
mov
push
or
out
mov
push
pusha
scas
out
pop
cld
test
push
jp
in
or
mov
call
lret
fidivs
xor
cmpsb
in
add
clc
fwait
cmp
sbb
rcrw
sbb
cmp
push
or
mov
push
jl
push
gs
cwtl
rorl
cmp
adc
mov
mov
and
push
cltd
dec
clc
jp
int
in
subb
pusha
popf
pushf
psrlq
push
lea
iret
out
loope
push
mov
and
inc
leave
mov
inc
insb
xchg
das
xchg
gs
icebp
mov
insb
sbb
cmc
cmp
movsb
mov
out
jae
js
cld
jns
std
mov
loope
jno
cs
repnz
sub
movsb
in
mov
les
xor
adc
mov
rdmsr
xchg
scas
push
out
pop
daa
cmp
mov
jno
outsb
mov
pushf
aam
test
xchg
mov
adc
jle
sarb
xlat
sub
add
outsl
ret
push
xchg
cmc
jnp
sbb
mov
xor
xchg
loop
jg
std
inc
enter
pop
and
mov
inc
test
push
daa
mov
sub
ficomps
mov
enter
sar
push
loop
inc
fildll
cmc
and
out
stc
fsubrl
xchg
dec
rorb
adc
faddl
int
jle
push
push
mov
rcrl
and
xchg
dec
push
jbe
inc
mov
sbb
pop
add
idivl
adc
pop
xchg
clc
jae
pop
xchg
imul
std
outsb
jb
mov
fildll
or
mov
and
enter
dec
wrmsr
cmpl
and
bound
push
shufps
sub
mov
shrl
mov
test
mov
sbb
or
xchg
movsl
fsub
inc
ds
das
xchg
jl
ds
push
and
imul
and
mov
sub
or
rol
rolb
jb
jne
mov
das
das
int
mov
xor
js
orl
nop
fisttpl
push
jbe
aaa
pop
jne
lahf
push
in
js
cmp
mov
test
loop
fs
sbb
adc
xor
dec
mov
aam
cmp
ja
sbb
pop
push
xchg
iret
cld
dec
lock
imul
es
fmuls
hlt
aaa
je
and
cmpsl
dec
push
sub
add
inc
out
insb
sti
xchg
mov
mov
test
jmp
ficoms
jge
sbb
jecxz
xor
es
vaddsubps
or
insl
pop
clc
jl
aas
push
adc
jns
inc
inc
xchg
cltd
sbb
test
ds
jne
inc
mov
popa
outsb
inc
adc
mov
adc
or
mov
enter
test
pop
sbb
dec
pop
jb
xor
jge
push
dec
lea
sub
jnp
movsl
scas
pop
xchg
stos
popa
xchg
ljmp
sbb
mov
xor
sbb
sub
jle
inc
mov
jl
jmp
lret
cmp
sbb
cmp
call
sub
aam
lcall
inc
inc
dec
pop
push
mov
fdiv
pop
jbe
and
pop
adc
dec
int
jmp
fstl
cmpsb
stos
cwtl
push
mov
insl
cmpsb
fildl
pop
xor
sub
push
icebp
cwtl
sarl
daa
xor
sahf
jge
int3
dec
and
add
es
fsubrl
movsb
inc
loope
icebp
mov
xor
subl
push
in
push
dec
inc
mov
cmpsl
addr16
pusha
rcll
cmp
jp
jecxz
sub
aad
xor
sub
mov
xor
fdivrs
cmp
inc
hlt
mov
in
jg
pop
popa
pop
mov
mov
cld
in
mov
inc
outsb
ret
aam
jle
aad
insl
mov
sbb
minps
pop
mov
imul
add
mov
add
xchg
nop
jg
out
ror
cmp
int3
into
sbb
mov
and
xchg
aaa
inc
ret
hlt
mov
and
shrl
pop
jne
xchg
mov
xchg
push
or
pop
ret
cmp
jb
fdivs
mov
add
push
stc
add
push
inc
sub
into
fwait
and
rcrl
icebp
sti
jne
cmpsl
in
pop
in
imul
pusha
push
notl
lds
mov
loope
inc
popf
daa
leave
xor
xchg
adc
int3
pop
sub
mov
pusha
leave
jo
ss
scas
sbb
je
mov
jo
add
stos
sub
aas
sbb
outsl
mov
mov
cltd
pop
xchg
pop
inc
sbb
jmp
mov
mov
push
xor
ljmp
jns
mov
push
xchg
nop
push
idivb
and
jae
scas
lock
xchg
int
sub
aad
adc
adc
jnp
aad
into
pop
jbe
in
jae
dec
in
jb
mov
test
add
leave
fidivrs
mov
bound
mov
out
pop
mov
inc
cmp
xchg
pushf
or
or
daa
mov
inc
int3
stos
push
pop
cld
push
and
cmp
jno
cld
adc
into
xor
out
or
adc
cmp
sbb
ss
ret
roll
push
adc
notb
pop
out
lcall
cmpsb
and
out
cmpsb
jp
dec
cmp
iret
rcr
test
popa
cmc
mov
bound
sub
cli
enter
adc
adc
xor
xlat
aaa
test
aaa
mov
or
jno
jno
cmp
pop
jns
pop
push
stos
dec
ret
add
call
pop
xchg
psraw
adc
negb
xchg
pop
jle
in
push
sub
fstl
mov
sbb
pop
cmp
pop
mov
cmp
xchg
fdivl
mov
dec
ds
call
inc
fwait
bound
xchg
jle
xchg
sub
das
xchg
mov
jnp
lods
pop
roll
lahf
stos
xor
inc
mov
fcmovnu
sbb
mov
neg
out
and
mov
mov
mov
lds
aad
sbb
ret
insl
pusha
jge
mov
aas
out
pop
cs
sbb
mov
add
cmpsb
sub
pop
sbb
xchg
aam
or
inc
sub
ret
scas
pop
loop
pop
pop
lcall
les
sahf
xchg
rcrb
mov
xchg
and
dec
test
imul
gs
jmp
in
das
sbb
sbb
mov
jmp
dec
in
or
icebp
jo
adc
lods
xor
add
xor
inc
cmp
mov
sbb
pop
add
push
mov
sub
das
imul
mov
or
and
push
adc
mov
jae
adcl
sub
cld
xchg
sbb
rcpps
or
jmp
dec
stc
insl
leave
push
pop
mov
or
sub
or
inc
jecxz
jg
sbb
lock
add
jno
nop
hlt
outsb
pop
jno
into
fmuls
jle
scas
adc
fldenv
aam
mov
push
ljmp
rorl
mov
adc
push
andb
mov
cmp
je
adc
mov
arpl
mov
test
pop
mov
gs
sub
push
mov
cmpsl
add
iret
mov
ficomps
sub
loopne
scas
mov
inc
loope
inc
pop
jp
inc
sbb
adc
dec
add
xor
flds
int3
xchg
jo
sbb
or
movsb
aaa
and
sub
mov
mov
lcall
push
xchg
xchg
movsb
push
les
hlt
cmc
ret
dec
xchg
in
mov
xlat
fistpl
nop
scas
jns
ja
ss
sbb
mov
scas
cmp
xchg
in
imul
sub
jle
dec
mov
insb
pop
lock
mov
enter
mov
into
mov
dec
sub
and
lods
xor
fcompl
or
leave
sub
jecxz
loope
sub
xor
mov
inc
bound
jae
imul
mov
mov
add
repnz
movsb
stc
inc
mov
leave
int3
push
bound
mov
test
ljmp
add
mov
aad
jecxz
subb
pop
fsubp
mov
add
stos
mov
mov
mov
cmpsb
push
ja
sub
shll
pop
ljmp
cmp
jmp
xor
mov
push
sub
shr
mov
mov
iret
xor
and
push
bound
sub
lret
push
pop
sarl
out
stos
mov
xor
and
inc
push
mov
inc
pop
test
outsl
xor
mov
jae
xchg
movsl
pop
repnz
int
adc
add
mov
je
jge
mov
sub
fwait
dec
fdivrs
in
mov
cmp
and
pop
stos
fs
xor
out
outsb
inc
in
mov
outsl
jno
mov
mov
jp
aaa
subb
xor
lahf
xor
mov
outsl
popa
fstpl
push
out
dec
adc
loopne
rolb
adc
cmpsl
adc
lahf
pop
pop
jg
jp,pn
dec
jg
dec
insl
imul
clc
lock
lret
sbb
push
lock
movl
pop
repnz
ja
cmc
mov
clc
sbb
xlat
mov
fdivrl
ja
jnp
imul
iret
jo
ja
sbb
xor
add
pcmpgtb
es
sbb
mov
pop
sar
lret
cmp
pop
sub
nop
mov
clc
xchg
add
lcall
mov
js
sbb
xlat
sbb
call
fcomps
inc
in
nop
pop
aas
cmpb
dec
sub
inc
lods
cli
pop
rcl
nop
sub
sti
pop
lods
sar
mov
adcl
arpl
outsl
loopne
jecxz
push
lea
xor
es
push
mov
arpl
das
dec
sbb
jbe
fcomps
pushf
cmp
jo
mov
out
sti
stos
ret
sub
xlat
push
dec
outsl
and
sti
cmpsl
clc
and
loopne
adc
xor
inc
mov
js
cmp
and
jg
xchg
jle
adc
pushl
imul
es
inc
mov
test
push
lret
jnp
fstpl
mov
adc
icebp
xchg
xlat
fmul
adc
lods
aad
cld
mov
push
es
aad
jae
test
loopne
lret
inc
cltd
jl
mov
lea
dec
repnz
scas
sbb
arpl
sbb
mov
pusha
jae
xchg
sbb
inc
xchg
fwait
in
notl
jnp
arpl
mov
mov
push
ret
xchg
jmp
mov
dec
sub
aas
or
daa
pusha
cwtl
mov
mov
lods
xlat
xchg
mov
cmp
aad
aam
pop
orb
adc
mov
stos
es
rorb
stos
scas
scas
inc
jae
cmp
aaa
or
aaa
into
cmp
sbb
enter
mov
dec
neg
daa
aaa
stos
or
aad
mov
mov
sbb
add
pop
xchg
ja
stos
cmp
and
mov
mov
push
inc
loop
mov
nop
jg
jnp
test
addl
iret
insl
push
lret
es
out
cmp
xor
shrb
into
cmp
mov
fisubrl
fcomps
inc
pop
call
push
dec
mov
into
frstor
cmp
inc
push
xorl
xchg
popa
ljmp
push
mov
pop
push
out
idivl
arpl
pusha
insb
dec
cmp
or
mov
push
xchg
xor
scas
and
lahf
notb
sub
dec
and
dec
mov
test
mov
pop
sbb
inc
add
cltd
mov
movq
test
fsts
xlat
lds
into
push
push
ds
pop
sub
jo
repnz
mov
and
pop
mov
sahf
test
call
and
push
xchg
aam
movsb
jecxz
jo
cltd
das
outsb
sahf
push
lock
cli
or
jecxz
scas
xor
sarl
jno
js
cs
mov
test
std
loop
loop
out
lods
jb
mov
pop
pop
push
out
out
movsl
xor
cli
test
ret
jp
lahf
outsl
nop
sahf
sub
mov
xchg
fsubl
inc
inc
int3
stos
scas
dec
sub
cmc
and
pop
sbb
les
xchg
or
into
push
xchg
push
or
add
mov
loopne
dec
je
xchg
adc
shlb
push
jecxz
pop
data16
lea
mov
dec
sub
ljmp
cmp
xchg
test
mov
in
aad
or
aam
mulps
filds
xchg
lahf
xor
mov
mov
scas
sbb
inc
xchg
subb
mov
lock
cld
xchg
push
mov
mov
add
pusha
cmpb
mov
push
jmp
shll
icebp
ret
fdivrl
sub
popf
nop
push
xchg
pop
jno
mov
cmp
add
out
lods
call
jmp
inc
pop
fcoml
flds
jnp
push
lcall
mov
ljmp
call
aad
dec
sti
xor
pop
pop
ljmp
int3
fldcw
mov
dec
mov
sub
daa
jg
fneni(8087
fldenv
jp
aas
jge
frstor
mov
arpl
sbb
popa
loope
lods
out
pop
cmp
cld
fwait
sarl
jnp
dec
push
outsl
lock
xor
push
js
push
sbb
jnp
adc
daa
roll
mov
stos
imul
loop
pop
imul
jmp
ret
lea
adc
movsb
pop
aad
or
movsl
cmp
enter
daa
cmpsl
xor
daa
xchg
iret
mov
es
dec
ret
repnz
mov
push
lret
pusha
div
rorl
and
pop
jmp
dec
sub
sbb
dec
repnz
mov
xchg
push
ljmp
inc
mov
jno
xchg
sbbb
insb
pop
xor
movsl
cmp
xor
push
jge
adc
cli
bound
push
push
lea
cmpsb
jnp
or
dec
adc
fiadds
aas
rcrl
test
andl
mov
mov
mov
add
xlat
mov
in
icebp
and
js
fcoml
xchg
jns
in
lods
insl
fs
mov
insl
adcb
frstor
cmpl
pop
popf
lcall
sarl
inc
dec
fcomps
mov
lock
or
movsb
imul
cmp
mov
cmp
lea
sbb
mov
sub
bsr
xchg
push
pop
inc
adc
arpl
cmpsb
cli
loope
movsb
xchg
sbb
pop
outsl
fs
dec
out
loopne
int3
stos
mov
mov
xor
repz
dec
sbb
aad
sarl
rcrb
pop
mov
lcall
pop
fstpl
notb
cmp
xchg
mov
mov
jmp
lods
iret
mov
fldt
pop
push
and
std
or
pop
mov
lds
pop
pop
stos
div
andl
add
pop
push
mov
stos
xchg
mov
jo
insl
xchg
pop
sub
mov
add
mov
jb
sahf
in
lea
in
xchg
je
call
jo
xor
pop
sub
mov
dec
mov
push
fildl
test
stc
sbb
adc
lahf
jle
in
lock
cmc
dec
in
pop
cmp
pop
jp
rcr
movsb
scas
adc
enter
rorl
mov
fbstp
jg
mov
test
inc
and
push
enter
loope
xchg
cld
icebp
inc
in
inc
mov
or
xchg
sub
and
loop
xchg
mov
stc
mov
imull
mov
test
loopne
int3
js
call
xor
and
aas
lods
cmp
cmpsl
push
sub
cli
mov
inc
lock
das
fnstsw
cltd
scas
imul
cmpsl
pushf
shll
xchg
xchg
sub
out
enter
sbb
ljmp
js
cmp
fisubs
xchg
es
int3
jb
loope
test
fisubrl
aad
adc
cmpsl
les
pop
jmp
adc
inc
and
mov
add
ljmp
xchg
adc
inc
sbb
int3
push
fnstenv
jg
repz
dec
xorl
aam
lds
fildl
insl
popf
stos
out
movsb
mov
xor
pop
nop
pop
movsl
fstps
or
ret
subl
hlt
inc
lahf
sub
call
mov
adc
mov
cmp
cmpsb
stos
pop
cmpsb
fwait
imul
mov
or
into
adc
inc
pop
shrl
pushf
outsl
mov
sbb
inc
or
int3
out
inc
call
dec
lahf
in
cmpsb
xchg
sub
je
jbe
xor
add
stos
adc
outsb
rcl
push
xor
push
popf
inc
xchg
fldl
jle
movsb
pushf
les
in
faddp
pushfw
cli
sbb
jmp
inc
add
mov
xchg
fsubs
mov
mov
jle
adc
mov
mov
outsb
push
inc
mov
xchg
jno
sub
dec
in
insb
adc
dec
clc
sub
jl
scas
arpl
dec
push
push
mov
inc
out
sbb
adcb
push
push
cmc
pushf
cmpsb
push
push
jo
sub
sbb
popf
jp
mov
imul
lods
shlb
addr16
ret
scas
mov
mov
je
lret
xchg
mov
icebp
test
and
push
rcrb
movsl
test
push
and
bound
mov
jg
jl
mov
jns
stos
out
inc
mov
pop
stos
ret
dec
pop
lret
mov
mov
jno
mov
stc
pop
fsubs
inc
dec
neg
out
rcll
jbe
in
push
or
repnz
mov
lret
les
inc
cmp
mov
mov
lcall
sub
push
mov
test
mov
mov
cmp
fldl
movsb
aam
xchg
enter
fucom
scas
adc
cmc
sbb
sub
cmp
lods
adc
repz
test
outsl
and
push
jp
aam
fiadds
sbb
lods
xor
test
subb
sbb
and
pmulhw
stos
fmuls
pop
sub
xchg
lds
jmp
addr16
xor
imul
mov
mov
insb
out
movsl
mov
pop
and
fst
push
sbb
mov
fs
sub
cs
sbb
pop
rolb
push
mov
push
mov
mov
in
lahf
xchg
or
push
mov
adc
mov
cmp
jecxz
aad
push
inc
pop
loope
cwtl
mov
dec
movsl
pop
out
xor
jb
popa
mov
xchg
xchg
test
pop
into
ret
add
mov
fnstsw
insl
xor
fimull
inc
insb
mov
aam
test
daa
stos
dec
orl
sub
cmp
mov
clc
lret
pop
jne
adc
pushw
xchg
inc
inc
pop
xor
sub
sbb
pusha
push
push
adc
pop
into
and
stos
pop
mov
xchg
cs
mov
mov
iret
adc
mov
in
inc
out
mov
pushf
scas
lock
aas
add
imul
push
mov
xchg
pusha
mov
dec
or
shll
popf
sub
icebp
inc
sbbl
push
loop
dec
mov
dec
out
les
div
and
sub
adc
dec
jp
push
rcll
js
jnp
pop
loop
sub
and
mov
dec
orb
cmpl
mov
in
stos
sbb
out
lahf
pop
and
xchg
mov
mov
sbb
lcall
mov
cltd
imulb
ss
xchg
xor
lods
pop
movsl
jnp
sbbl
and
icebp
mov
xchg
js
lods
or
add
andb
push
outsb
addr16
inc
mov
and
js
xchg
xchg
push
add
sti
imul
imulb
jcxz
sahf
scas
push
sarl
mov
test
loop
scas
or
lods
movsl
and
or
mov
loopne
js
or
push
pop
lods
test
icebp
movsl
je
jmp
jmp
arpl
test
into
std
call
pusha
xchg
mov
cmp
cmp
gs
shlb
rcrl
lods
lret
mov
mov
bound
jle
mov
pop
scas
mov
pop
imul
in
and
mov
cmpsb
rol
das
ja
cmp
sub
stos
dec
push
mov
cs
sub
movsl
loope
pop
sbb
and
add
xor
or
xchg
cs
cmp
ret
cmc
xor
cmp
mov
add
mov
test
mov
test
pop
inc
adc
xchg
xchg
push
mull
mov
lret
and
and
add
add
cmc
cmp
sub
add
nop
or
dec
pop
jecxz
bound
cmp
pop
inc
mov
add
xor
ss
xchg
mov
sbb
lahf
test
mov
mov
ret
mov
mov
push
test
filds
inc
ret
insl
pop
dec
aas
leave
mov
ljmp
inc
or
fdivl
mov
js
xchg
out
shrl
jae
ficompl
movq
pop
mov
pop
mov
dec
scas
out
push
aad
imul
cs
xchg
inc
mov
sub
mov
mov
mov
pop
and
lds
and
movsl
pop
gs
out
jns
xchg
popf
mov
cld
out
push
imul
pop
movsl
sarb
pop
xor
mov
insl
movsb
loope
xchg
sbb
jmp
and
mov
and
xchg
inc
xor
push
fildll
add
daa
bnd
mov
mov
out
and
xor
xchg
xor
sahf
pusha
popl
add
cmc
cmp
sbb
mov
pop
pop
sub
mov
imul
or
push
leave
adc
icebp
pushf
add
xchg
loop
mov
out
in
lahf
pop
popf
dec
jmp
in
out
pop
and
cmpsl
fisubrs
ret
cmpsb
adc
arpl
cmp
xchg
std
dec
stos
jbe
adc
or
sbb
test
sub
mov
ja
cli
mov
or
mov
in
out
xor
add
ror
pop
shlb
mov
roll
outsl
jp
sub
lock
mov
fnstcw
or
ss
mov
mov
sti
cmp
mov
mov
cmp
inc
pop
test
sbb
pushf
rolb
pop
mov
jp
lret
ret
fsin
gs
sub
sub
cmpsb
mov
gs
add
and
jmp
push
xor
insl
add
jecxz
xchg
rcrb
pop
dec
xchg
lahf
shll
adc
loope
cmp
mov
pop
insl
xor
fxch
lods
or
jb
in
jnp
inc
pop
in
ret
dec
nop
pop
mov
sub
sbb
leave
mov
jmp
or
pop
clc
test
addr16
cmp
aas
stos
mov
das
dec
mov
insl
aas
xchg
add
add
sub
xchg
lock
fidivrl
iret
fdivrl
lods
js
mov
jp
pop
push
pop
xor
mov
rcrb
jmp
xor
xchg
vmovaps
mov
adc
lds
jl
add
ret
xor
leave
pop
cld
jb
std
loope
adc
fwait
lock
jmp
lds
and
lock
add
xor
cmp
jbe
add
movsl
add
fxch
lret
dec
xor
idivb
scas
dec
mov
jge
iret
andl
add
adc
pop
addb
add
dec
push
mov
pop
mov
in
mov
push
cmp
xor
lods
fnsave
and
mov
or
rclb
fnstcw
test
cs
push
aam
icebp
jg
inc
cmp
and
adc
xchg
jae
pop
jp
mov
cmpsb
sub
js
scas
movsb
repnz
fmuls
imul
xchg
xchg
inc
fsubp
aad
mov
out
iret
fldenv
mov
mov
jge
lret
mov
push
sub
pushf
pop
sub
jne
pop
sbb
mov
xor
leave
mov
clc
lds
ret
fisubrs
inc
and
les
cmpsb
rclb
mov
scas
mov
es
and
loop
fmull
repz
adc
push
faddl
jno
in
and
addr16
je
mov
hlt
cltd
jne
pop
inc
dec
sbb
jg
inc
insl
mov
stos
out
iret
jno
and
cmp
fsts
outsl
adc
call
popa
ss
add
shl
inc
or
jno
arpl
xchg
arpl
stc
dec
outsl
shlb
add
fdiv
test
inc
imulb
add
cmp
jns
add
add
pop
data16
faddp
xchg
roll
add
or
cmpsb
mov
xor
fisttpll
in
idivl
xchg
ja
or
es
dec
cmp
jp
incb
data16
ds
xchg
pop
xchg
or
and
mov
and
mov
hlt
mov
fcomip
jbe
nop
mov
push
inc
lret
push
cld
cmpsl
jmp
pop
bndstx
std
pop
push
in
sub
push
fnsave
sarl
mov
loopne
mov
mov
pop
in
mov
dec
loopne
test
out
std
cmp
cmp
out
les
iret
inc
aaa
test
scas
mov
fstpt
sbb
xor
popf
or
sti
mov
movsb
out
mov
jl
and
mov
xchg
shrb
cmpsl
and
push
fists
mov
in
fstps
insb
xor
mov
icebp
gs
jne
scas
out
push
push
cli
sub
add
adc
jae
jp
push
pop
cmpsb
xor
adc
test
push
adc
adc
adc
cld
mov
sarl
cmpsl
andl
adc
test
stc
and
pushf
mov
cld
cmp
dec
rolb
push
jp
xchg
inc
dec
xchg
push
movswl
xor
mul
mov
jl
mov
test
std
mull
mov
ficoml
pop
add
imul
xlat
sti
jl
or
lods
fwait
pop
mov
mov
jo
jmp
outsl
cmpsl
sbb
push
cltd
jge
mov
pop
add
aas
dec
lret
lret
test
xor
shlb
aam
rolb
lock
negb
mov
or
stos
in
stc
sbb
iret
adc
aas
fadds
sti
jge
cmp
inc
out
addr16
aam
xlat
and
test
subl
and
aaa
cs
mov
call
repz
push
cmpl
pop
dec
jp
pop
lods
push
sahf
aaa
and
inc
mov
cwtl
outsb
rol
push
cmp
pusha
cmp
cmc
sbb
andb
push
insl
cmpl
xchg
sti
xor
mov
mov
incb
insl
pop
fwait
and
sub
movsl
sbb
outsl
fldpi
jne
jne
in
mov
movsb
test
je,pn
ljmp
and
aaa
pop
xchg
das
cmp
mov
je
fmuls
aas
xchg
popf
pop
jae
adc
mov
push
nop
sub
lock
cmp
push
pushl
and
sub
sub
mov
out
xor
ret
fildl
cmp
push
mov
bound
add
add
xchg
jns
xlat
pop
cmp
std
adc
mov
add
dec
jmp
add
inc
pusha
aad
aas
dec
dec
fwait
lret
push
push
sbb
xor
imul
sub
nop
test
mov
and
cli
sbb
icebp
inc
dec
in
push
or
shr
mov
cltd
xchg
or
cmc
xlat
mov
cs
hlt
adc
out
ds
fs
adc
scas
ljmp
mov
out
bound
mov
andb
outsl
loop
int3
das
dec
pop
sub
out
je,pn
loope
inc
aad
lods
fnstenv
addb
mov
scas
aaa
in
push
or
aam
cs
push
cmp
xchg
adc
fstpt
pop
inc
add
jp
push
and
repnz
daa
push
sbb
xor
mov
loope
xchg
push
cli
cwtl
stc
push
dec
pop
aas
xchg
ja
mov
fsubrp
push
push
xchg
jmp
pop
jle
fcomps
cmpsl
or
or
mov
das
mov
dec
dec
and
adc
iret
out
mov
mov
push
ljmp
xor
lret
and
dec
loop
push
sub
cmp
out
xchg
bound
xorl
or
bound
cmp
sahf
mov
mov
and
and
aam
lock
rcr
push
and
test
inc
insl
dec
cmp
fwait
dec
push
mov
ret
lds
nop
out
lea
adc
cmp
into
repnz
test
ja
movsl
fisttpl
inc
inc
push
mov
movsb
push
dec
xchg
imul
jp
xchg
sti
shll
pop
push
push
adc
aad
ficoms
outsb
test
cmp
sbb
and
aad
or
cwtl
pushf
mov
mov
add
insb
cs
ret
scas
jo
cld
jne
push
sub
sti
divl
and
lods
push
xchg
js
pop
cmp
and
xor
mov
or
adc
mov
adc
push
inc
fldt
or
les
mov
push
data16
lcall
jns
fbstp
movsl
mov
jbe
xor
mov
cmpsl
cmpsl
dec
jo
testl
mov
shr
mov
cltd
out
in
fidivs
orb
adc
push
in
lds
push
mov
push
sti
add
loope
insl
ja,pn
imul
jnp
addr16
out
xchg
nop
fldcw
divl
add
lock
xlat
mov
jg
repz
push
or
adc
xor
push
rcl
iret
sbb
clc
pusha
inc
outsb
adcb
lds
outsl
pop
push
fcmovu
pop
fldt
sbb
sub
cld
es
dec
pop
inc
shll
testl
lret
dec
data16
lret
shrb
add
inc
mov
or
ja
mov
sub
or
shld
xor
xchg
xchg
add
fdivs
out
call
fnstenv
inc
push
lock
adc
push
mov
rcrl
jecxz
imul
pop
psubsb
sbb
inc
movsb
dec
ja
fsubrs
andl
icebp
lcall
xchg
aas
popf
fcmovnu
stos
jno
pop
cmc
repnz
orl
iret
pop
adc
shrl
fisttps
mov
mov
gs
repnz
les
mov
add
ret
push
shlb
addl
cli
cwtl
mov
xlat
ds
mov
push
fucom
mov
scas
sub
and
cwtl
xchg
mov
stos
xchg
jg
lea
mov
mov
cmp
pop
sbb
mulb
jp
xchg
add
lods
mov
aam
mov
stos
incb
jge
jl
pop
add
add
add
adc
add
ret
scas
mov
push
in
test
out
xor
push
mov
cmp
jb
xor
ljmp
add
push
pop
mov
lds
inc
data16
xchg
mov
addr16
rcrb
mov
imul
xchg
push
inc
jnp
leave
sbb
mov
lods
xbegin
jae
xchg
lret
into
mov
mov
mov
add
loop
mov
mov
jno
push
call
es
adc
fwait
sub
add
mov
pop
mov
cmpsl
ret
popf
add
test
xchg
push
imul
push
sbb
jns
jl
movsl
outsb
mov
iret
lock
adc
repz
mov
jp
fstp
repnz
fucom
fsubr
pusha
jmp
xchg
cwtl
shl
lea
into
push
or
adc
rcll
dec
hlt
aaa
sbb
fcmove
xchg
pop
jbe
push
hlt
call
add
fst
push
je,pn
stc
jo
aad
outsl
rcl
fwait
push
add
dec
adcl
sbb
test
ss
daa
xor
loop
jb
add
ljmp
push
in
ret
xchg
leave
movsb
jmp
jp
das
dec
jno
js
idivb
je
mov
icebp
bound
fidivrl
nop
adc
jl
push
jnp
sub
pop
jle
in
jne
xlat
outsl
sbb
inc
push
push
in
mov
in
ljmp
or
lret
sub
imul
mov
xor
lock
or
pop
cmp
lds
push
movsb
or
popf
lret
inc
or
loop
je
mov
aad
aas
ret
jns
lahf
pop
popa
mov
test
or
outsb
fldt
cwtl
cmc
xchg
mov
jb
cmpsl
or
mov
shlb
dec
xchg
popa
popf
add
loopne
cmp
pop
rcll
pop
xor
ja
scas
das
repnz
mov
test
movsb
das
in
test
xor
aam
in
add
push
imul
mov
mov
xchg
enter
sbb
stos
mov
adc
fidivrl
or
es
loop
scas
dec
mov
mov
sub
sbb
mov
mov
mov
xor
test
jnp
bound
mov
pop
cmpl
in
outsl
sbb
and
cmp
lds
and
sarl
jmp
ljmp
bound
jb
xchg
inc
movsb
pop
or
jl
or
loopne
sub
imul
popa
cs
pop
mov
jle
hlt
dec
fnstenv
mov
sub
push
add
adc
leave
adc
or
cs
rclb
xchg
sahf
pop
dec
pushf
mov
inc
xchg
fcomip
int3
xor
mov
scas
sub
dec
adc
icebp
or
insl
fwait
inc
xorb
sbb
iret
fdivl
cmpsb
push
sub
add
jecxz
popf
insl
dec
mov
out
mov
ds
cmc
sub
addr16
sti
rcrb
mov
frstor
sbb
ds
pop
xor
movsb
inc
jno
or
dec
add
adc
push
fldcw
scas
gs
mov
maxps
out
or
stc
xchg
add
insb
loopne
pop
sub
jns
loop
cltd
cmp
ja
fistpll
mov
cmp
dec
cld
inc
in
mov
and
xor
push
cltd
loopne
pop
movsl
roll
xor
xor
cmp
mov
mov
sub
push
xchg
pop
rcrl
fsts
scas
hlt
jle
cmp
push
cld
es
faddl
js
add
cmp
std
fbld
shrl
cld
pop
mov
lea
scas
addr16
sbbb
stc
sub
mov
xor
and
pushf
jne
push
sbb
push
cld
add
inc
popa
sub
inc
sub
addb
vfrczps
pop
jle
ret
xor
out
inc
and
pop
cs
cmc
mov
adc
mov
fstps
pop
push
inc
jae
out
les
add
out
and
lahf
subb
pop
out
cmp
pop
sahf
mov
shr
arpl
stos
std
or
ljmp
dec
xchg
dec
mov
jno
rcrb
mov
loop
cmp
adc
cli
and
mov
xchg
jge
and
or
mov
and
roll
mov
mov
push
loop
mov
xor
sbb
sbb
pop
lods
pop
leave
xchg
pop
aam
sub
adc
divl
std
mulb
lods
outsl
jne
lret
int
ss
jg
fisttpl
mov
lcall
inc
lret
shll
shlb
movsb
test
pop
test
mov
fsubp
popw
loop
adc
push
lds
mov
mov
lahf
subb
pop
add
and
fistps
xor
push
test
sub
mov
aaa
lret
sub
jb
sbb
sub
andl
leave
mov
dec
adc
jg
sarb
stos
push
ret
mov
jp
arpl
arpl
and
cld
cmpsb
adc
cmp
dec
lahf
cld
and
mov
lret
xchg
cmp
xorl
or
mull
test
pusha
sbb
out
sbb
mov
rcrl
cli
out
aaa
xchg
test
sbb
scas
mov
or
lahf
sub
adc
lods
dec
mov
insb
js
int
stos
jp
stc
sbbb
divl
jp
sub
inc
loope
into
into
or
and
push
mov
jbe
cmp
inc
xor
mov
mov
cli
dec
das
push
inc
push
and
repz
out
and
cmc
add
in
enter
jmp
and
dec
lods
cmc
jns
and
loop
fldt
adc
sti
add
outsb
xchg
adc
outsb
inc
ficoml
push
jns
loope
sahf
sbb
stos
sbb
test
popa
xchg
addr16
lcall
push
mov
mov
lcall
notl
out
pop
jecxz
mov
lods
repnz
add
loop
ss
nop
mov
adc
dec
pop
mov
adc
xlat
push
mov
clc
lret
mov
repz
mov
enter
mov
ja
jo
xor
or
xchg
movsb
bnd
dec
pop
sub
sbb
add
scas
pop
cmp
sub
mov
sbb
adc
mov
pop
sub
iret
xor
out
adc
lock
sub
in
sbb
repz
or
cmpsl
aad
pop
mov
mov
int
pop
xchg
fstp
movsl
pop
cmp
mov
mov
jge
and
lret
int3
pusha
mov
fisttps
cmp
jle
push
adc
push
scas
nop
repnz
loope
push
cltd
add
pop
dec
xchg
sbb
int3
cmp
sbbb
cli
aam
jne
dec
xor
mov
xchg
cmp
outsl
adc
scas
xor
outsl
mov
xchg
pushf
cmp
add
sbb
inc
push
xchg
pop
push
scas
cmp
lds
ret
xchg
xchg
pop
das
push
push
push
andl
leave
jns
lods
and
scas
inc
sbb
cmp
pop
sbb
jl
mov
clc
inc
jg
mov
adc
mov
imul
std
and
setnp
mov
push
jg
or
ljmp
jmp
loop
jecxz
adc
repz
ljmp
mov
xor
sbb
pop
in
mov
dec
push
mov
cltd
sbb
pop
jne
lds
sbb
std
jne
mov
add
and
jle
in
mov
sub
enter
sbb
dec
jl
mov
xchg
sub
lret
fwait
dec
aaa
cmp
dec
push
adc
dec
imul
sbb
inc
cmc
dec
mov
fxch
cltd
test
mov
or
stos
data16
mov
repnz
cld
lahf
cmp
sahf
test
mov
dec
push
inc
arpl
and
cli
jno
inc
lds
push
pop
cmp
mov
rep
xor
xor
mov
mov
mov
sbb
fimuls
inc
rorl
add
sbbl
jle
add
sub
ja
loope
lcall
je
pushf
sub
sub
dec
loopne
and
sbb
scas
call
dec
xor
mov
jmp
xchg
cmp
pop
mov
testb
adcb
js
push
pop
sbb
push
and
loope
clc
adc
filds
mov
imul
nop
es
pop
mov
lock
insl
fcmovbe
cs
out
xchg
pop
jnp
sub
cs
test
pop
mov
cmp
adc
dec
push
icebp
add
dec
lcall
insb
cmp
and
stos
int3
sbb
cmp
negb
pop
mov
jmp
xchg
and
xor
mov
push
rcl
fdivrp
shr
dec
dec
sbb
push
and
scas
mov
movl
dec
cmp
sub
idivl
pop
sub
les
jnp
pushf
inc
in
movsl
andl
mov
out
mov
jns
push
mov
xor
hlt
leave
dec
add
fistl
lock
push
stc
mov
jp
repz
cwtl
sbb
mov
jns
cmpl
cli
and
insb
outsb
cli
fcomps
jb
out
repnz
lea
pop
fsubp
mov
mov
jae
jo
push
sbbl
adc
int3
pusha
scas
pop
fcompl
ss
pusha
xor
negl
xor
aas
nop
xor
emms
dec
inc
shlb
ljmp
inc
sbb
pop
bound
in
fs
ja
mov
jge
out
inc
int3
repz
pop
sahf
shrl
jns
imul
daa
cmp
and
cltd
fisttpll
push
lea
subl
mov
testb
je
pop
add
inc
jnp
mov
push
pop
adc
fistl
lock
ret
or
sti
sub
cmpsl
add
das
lea
xor
into
xor
lret
dec
xlat
mov
xor
cwtl
fisubs
push
inc
sbbl
jno
adc
or
add
repz
mov
in
mov
int3
mov
lea
out
mov
popf
fadds
push
sarb
cmc
xchg
or
lret
fcom
aas
xchg
jle
cld
cmc
test
iret
push
test
and
mov
pop
stc
push
cmp
ret
sub
sub
lods
jo
mov
cmp
add
imulb
fisttpll
adc
clc
pop
add
divl
lcall
and
imul
xchg
xchg
sti
cmp
xlat
pop
mov
imul
test
aas
mov
and
sub
shl
cmp
xchg
cltd
sar
stos
adc
lcall
repnz
nop
and
movsl
movsb
cmp
xchg
sbb
stos
pop
lods
cld
push
shl
xchg
add
arpl
clc
pop
dec
popf
add
mov
das
push
cmp
add
xchg
insl
jo
mov
aam
ljmp
and
shlb
lcall
cmp
ret
enter
test
clc
adc
adc
jbe
jnp
mov
push
or
mov
jns
dec
cwtl
dec
loope
ret
mov
xchg
outsl
in
inc
sahf
out
xchg
sbb
movl
loope
pusha
dec
inc
int
lods
lahf
jb
cs
orb
in
cmp
mov
push
jbe,pn
mov
test
dec
fists
pop
adc
fbstp
mov
add
popf
je
call
aaa
mov
lret
or
pop
sub
imul
pop
adc
inc
lods
push
icebp
mov
push
xchg
in
cmpb
cmp
lds
test
mov
mov
adc
sti
mov
fwait
push
xchg
movsb
or
sbb
mov
shr
add
mov
ret
movsl
or
push
pop
rorl
js
dec
pop
jg
mov
hlt
movsb
adc
cli
fadds
xor
sub
inc
fwait
adc
lahf
mov
xchg
stc
out
leave
jno
jne
mov
and
or
jge
xor
inc
xchg
xor
xchg
xor
cmp
dec
mov
xchg
std
jbe
cmpsb
push
xor
lods
or
adc
mov
arpl
xor
xchg
in
fld
mov
mov
fsubrs
in
dec
mov
or
call
mov
aam
call
adc
jne
inc
xor
imul
sti
mov
out
cmp
repz
cwtl
jb
jmp
push
jge
pop
dec
or
mov
dec
jne
lods
dec
dec
cwtl
pop
aas
jo
call
adc
gs
xchg
mov
and
andb
stos
test
inc
dec
repz
mov
enter
ret
cmp
and
sahf
push
outsl
dec
or
pop
mov
dec
loop
xorb
pop
add
das
shr
mov
fdivr
lret
jae
jb
mov
outsl
mov
insl
dec
call
jo
loope
mov
cmp
test
mov
xchg
add
cwtl
addr16
clc
aaa
aad
xchg
lcall
fistps
pop
xor
hlt
loope
xchg
dec
test
mov
fisttpl
sbb
aad
sub
ljmp
dec
fcmovnbe
fildll
sub
jno
mov
inc
sbb
adc
je
jnp
and
loope
pop
sbb
mov
adc
xchg
or
std
ljmp
mov
lea
add
rorb
out
test
pushf
sub
movsb
repz
aaa
cmp
jns
sbb
sub
mov
mov
xchg
pop
mov
xchg
out
mov
into
dec
cmp
cld
jmp
cmp
or
xor
add
jmp
sbb
cmpsb
mov
cmp
mov
add
fs
jmp
bound
aam
sub
and
inc
xchg
mov
add
pop
repnz
pop
dec
int3
jecxz
mov
add
shl
and
xchg
xor
rolb
and
pop
fistps
sub
sahf
les
lods
clc
mov
fildll
dec
dec
insb
sub
dec
sbb
stos
clc
dec
push
test
lahf
sbb
adc
mov
xor
rcrl
insb
std
das
hlt
push
fidivl
add
js
test
mov
aam
shl
xchg
xlat
and
mov
xchg
lock
mov
sbb
push
jnp
pop
inc
test
jge
xchg
aam
shll
ret
rcll
or
jg
jl
out
std
inc
jl
pop
cmpsl
jbe
rcr
xchg
push
mov
add
push
out
subb
xor
call
push
push
icebp
jbe
jge
sub
xchg
push
or
adc
inc
or
pop
mov
cltd
xor
fsubl
imul
fidivl
sbb
fcmovnbe
or
xchg
hlt
xchg
les
mov
fldcw
sarl
fcoml
ret
push
ret
inc
aas
mov
add
ret
push
lods
cltd
rcrl
jle
sbb
push
aaa
pop
lods
or
jb
mulb
loopne
jne
ljmp
sbb
fmul
rcrb
testb
and
jne,pn
mov
test
adc
fwait
je
jnp
rcrl
popf
mov
fisttpl
or
xor
sarl
sahf
lds
dec
adc
cmpl
and
xchg
sbb
xor
jnp
inc
rorb
xlat
std
adc
das
xor
xchg
dec
jle
inc
pop
add
clc
ljmp
into
lock
sahf
fwait
dec
jp
push
hlt
add
pop
and
and
dec
cmp
dec
in
das
mov
dec
or
fwait
testl
and
aaa
in
ljmp
jns
push
test
xchg
outsl
leave
es
out
cmp
add
jmp
xchg
lds
sahf
js
leave
jno
mov
mov
push
in
sub
std
pop
mov
xor
loopne
fiaddl
mov
jge
adc
inc
mov
dec
pusha
lret
sysenter
shll
lahf
ss
mov
inc
mov
fstps
or
inc
cmpsb
or
xchg
mov
sbb
jge
xor
es
ja
fnsave
popa
fmuls
loope
fsubs
pmaddwd
sbb
in
pusha
cli
inc
adc
sahf
jl
fsts
notb
jno
test
sub
in
pop
sub
xor
or
clc
sbb
jge
push
mov
jp
push
cltd
jl
and
dec
sub
xor
jb
int
pop
adc
or
push
ja
in
xchg
cmp
cmp
cld
stos
adc
les
mov
jge
test
loope
aam
xor
fnstsw
jo
movl
rorb
push
jno
add
out
xor
pop
pop
lret
adc
imul
aaa
cmp
pop
lods
rclb
test
inc
mov
pop
pop
mov
and
adc
sbb
icebp
push
cmc
mov
mov
lcall
xchg
jle
shl
std
outsb
scas
add
bound
sahf
mov
mov
rcr
adc
dec
test
mov
adc
std
negb
pop
sub
cli
call
hlt
dec
enter
cmp
bound
nop
mov
jae
stc
cld
push
jns
adc
std
push
hlt
add
roll
mov
fnsave
cltd
lods
pop
ja
fucomi
push
fiadds
mov
pop
xor
xchg
fldl
adc
mov
push
xchg
adc
shrl
or
dec
add
lahf
cmpsl
hlt
test
sbb
leave
push
sub
push
cwtl
jecxz
jnp
mov
jp
mov
adc
xchg
adc
inc
rolb
jle
or
mov
mov
pop
les
cltd
push
or
ss
mov
xor
adc
mov
add
lock
mov
popf
mov
pop
and
mov
scas
sbb
push
lods
inc
sbb
ds
pushf
jbe
mov
stc
mov
sbb
xchg
jp
xchg
mov
clc
xchg
mov
loop
push
pop
cli
push
pop
xor
fbld
and
and
sub
mov
xlat
inc
adc
mov
sbb
sbb
pushf
movsb
inc
rcll
xchg
dec
xchg
xor
pop
add
xchg
jo
aad
rorb
mov
daa
andl
mov
mov
cmp
out
inc
es
pop
ja
mov
mov
pop
gs
cs
pop
xor
cli
xchg
outsb
jmp
mov
xchg
inc
and
and
xchg
orb
xor
fsubs
push
push
lods
or
add
stos
pushf
mov
aad
jmp
and
fstpt
jp
cltd
rcll
ret
push
jmp
aaa
sti
das
out
rorl
and
dec
imul
jg
cmpsb
sarl
push
cmp
push
mov
inc
mov
xor
xor
clc
dec
pushl
scas
pop
pop
cmp
mov
outsb
pop
or
or
jl
mov
bound
es
stos
xchg
xchg
lods
ljmp
fsubr
xchg
jnp
fldcw
inc
sbb
push
ret
jb
inc
jne
into
or
xchg
ret
stc
andb
cmc
sti
push
or
xchg
inc
and
pop
pop
adc
xor
inc
mov
sbb
movsl
xor
repz
outsl
sub
mov
loopne
lcall
mov
xor
nop
cmp
int
cmpsb
and
popa
push
sbb
es
inc
nop
cwtl
adc
inc
cmp
leave
cltd
into
xor
pop
fsubrp
lahf
cmp
fstps
insb
fidivrs
out
mov
loopne
mov
rorl
hlt
leave
adc
sbbl
push
pop
push
mov
flds
mov
imul
push
add
movhps
aaa
adc
imul
sbb
dec
xchg
and
jno
pop
icebp
xchg
addr16
or
jl
jb
pop
std
out
add
add
dec
lods
bound
notb
dec
mov
mov
or
jns
xor
xor
mov
push
sub
notb
sbb
lds
xchg
pop
enter
movsl
das
jnp
pop
push
into
xchg
imul
jmp
fwait
lods
pop
mov
daa
loope
jmp
xchg
fildl
test
jo
fs
add
xor
mov
mov
arpl
dec
shl
mov
sub
jle
and
fcoml
pop
or
pop
icebp
dec
test
repnz
adc
imul
iret
mov
imul
xchg
test
mov
and
xor
fdivrl
int
jnp
ret
repnz
pusha
push
jmp
int
xor
push
mov
push
rcll
stos
outsl
inc
adc
icebp
dec
stos
scas
das
lds
into
xor
jns
xor
add
aad
movsb
pushf
jbe
sub
sahf
fdivrs
push
stos
icebp
scas
adc
dec
jb
in
in
fimuls
mov
push
mov
pop
out
cmp
sub
mov
syscall
dec
movl
xchg
out
add
xor
push
jp
dec
mov
imul
pusha
sub
mov
mov
adc
inc
bound
and
movsb
mov
ret
adc
pop
imul
lret
rcrl
std
push
dec
loop
push
push
jg
or
add
jmp
stos
mov
cwtl
cmp
mov
lock
dec
outsl
icebp
ss
mov
fisttpl
mov
out
mov
loop
xor
push
loope
push
fisubs
enter
mov
ficomps
add
aaa
adc
and
stc
lods
or
sbb
xchg
icebp
scas
mov
pop
inc
mov
jge
cmc
mov
pop
in
cwtl
mov
and
jns
lods
loop
pop
or
andb
daa
loope
sbb
andl
cltd
dec
sub
add
cwtl
out
gs
test
jg
imul
ficoms
jecxz
rcrb
fs
adc
movsb
push
adc
rcrb
rcl
cmpsl
fisttpl
aaa
sbb
mov
in
jae
pop
clc
stos
cmp
std
into
divl
sub
rorl
mov
gs
pop
mov
cmpsl
cmc
inc
or
mov
inc
icebp
add
int3
pusha
jp
std
lret
mov
xorb
mov
cmp
xor
push
es
cli
dec
pop
addr16
cld
and
mov
dec
sbb
in
cld
mov
vcvtps2ph
push
inc
pushf
push
dec
in
and
test
push
and
jns
pop
cltd
sub
dec
pop
adcb
and
pop
out
adc
sub
lahf
inc
sbb
push
sub
out
adc
loope
lds
subl
dec
xor
jge
les
retw
mov
lahf
push
xor
aam
sub
icebp
pop
mov
jle
mov
dec
mov
aas
mov
dec
out
pop
cwtl
cltd
movsb
inc
lds
or
lahf
popa
mov
jg
les
mov
mov
adc
cltd
jmp
lods
sbb
dec
das
fbstp
push
jo
scas
lret
jns
mov
lcall
jno
xor
cltd
jp
cmp
mov
sbb
mov
push
arpl
arpl
daa
rcr
pop
popf
fldenv
lcall
dec
into
xchg
adc
adc
aam
fdivr
pop
xchg
inc
dec
or
push
mov
cld
mov
aam
std
sub
adc
or
cmp
sub
cs
jmp
jle
loopne
ljmp
sbb
les
sub
mov
or
add
mov
mov
scas
loop
nop
in
les
lds
repnz
mov
cs
add
popa
cmc
jae
adc
jecxz
mov
out
pop
push
adc
mov
jle
push
xchg
ljmp
std
push
push
and
push
xchg
inc
inc
xor
jg
inc
sti
xchg
out
dec
mov
pop
mov
insl
sbb
lock
enter
orl
mov
mov
loope
xor
and
js
inc
ret
lods
pop
insb
in
stc
mov
sti
adc
dec
icebp
imul
rcrl
sbb
or
loop
lock
out
inc
shrb
lret
push
dec
jg
sbb
mov
addr16
mov
sti
add
inc
push
cs
jecxz
add
filds
aas
jg
in
sub
inc
dec
leave
stos
adc
dec
adc
cmp
popa
fxch
dec
cmp
dec
adc
push
mov
add
or
xorb
je
push
test
mov
in
and
add
mov
mov
add
fmull
sbb
aad
pop
xchg
cmpsb
jl
movsb
dec
negb
ljmp
xchg
or
cmp
scas
fisttpl
insb
and
mov
mov
sahf
stos
popa
mov
mov
call
or
movsb
stc
pop
jmp
movsl
adc
orb
imul
cmp
jb
inc
mov
xchg
sub
icebp
sbb
shrl
shll
jp
jl
xlat
and
movsb
aaa
xlat
push
lds
aad
mov
paddq
imul
std
fimuls
fs
pop
xchg
or
jp
mov
clc
xchg
clc
imul
jnp
sub
test
or
or
pop
xlat
outsb
addr16
enter
xchg
jp
movsl
pusha
addb
inc
mov
xchg
jp
ljmp
xchg
ficoms
in
add
pop
shlb
ja
call
fildl
jae
mov
ret
andl
test
mov
dec
fmull
and
nop
cmc
sub
mov
out
je
rorb
je
lret
xchg
inc
repnz
movsl
mov
ss
popa
cmp
out
in
xor
fnsave
sub
push
push
mov
aam
ret
or
in
pop
in
das
cli
imul
push
fisubl
mov
outsb
ja
fadds
adc
and
dec
lahf
mov
jae
std
shlb
stos
push
pop
xor
fisttps
push
sub
test
jb
pop
test
in
andl
stc
in
sarl
mov
jno
ror
outsl
sbb
insb
cmp
out
pop
fld
jne
sbb
or
push
pop
push
mov
in
mov
push
add
cmp
xor
mov
xor
push
shr
mov
xor
aad
aam
scas
in
pop
sbb
pop
das
mov
mov
sbb
push
jo
mov
push
std
loopne
mov
xor
sbb
lods
pop
jmp
ffree
sti
jl
mov
jbe
fadds
hlt
push
push
sbb
pop
dec
xor
mov
outsl
inc
cs
dec
mov
das
jb
lds
int3
or
sbb
inc
mov
pop
sti
dec
push
repnz
inc
mov
dec
into
cmp
data16
adc
pusha
push
das
shlb
loopne
cli
jle
testl
xchg
lret
jmp
inc
or
mov
dec
xchg
cwtl
icebp
pop
sub
xchg
gs
scas
xor
daa
mov
int3
xchg
push
push
negb
loopne
loop
xchg
jmp
sbb
xchg
psubusb
inc
mov
loope
ds
xchg
lock
dec
pop
jmp
pop
ror
ja
mov
sub
rorb
adc
inc
mov
pop
lods
and
mov
push
repnz
inc
aam
and
in
lea
aaa
mov
loopne
jo
test
push
inc
pushf
mov
push
aam
cmc
sti
pop
fidivs
rorb
mov
ret
test
push
and
stos
loop
fcoml
hlt
notl
movsb
dec
cmpsb
jmp
in
iret
push
in
rorb
aad
aaa
push
and
sub
pop
mov
repnz
jle
test
sahf
jns
sub
xor
sub
jo
movsb
loope
jg
and
es
movsl
jbe
jmp
leave
mov
adc
btc
pop
test
or
jp
insb
repnz
sti
jmp
mov
in
dec
sbb
mov
push
cmp
sbb
scas
shrl
stos
ljmp
enter
jl
adc
adc
adc
push
call
jmp
mov
xor
dec
jo
jno
std
xchg
imul
push
decb
je
mov
sub
add
and
sub
mov
and
rclb
into
rcrb
mov
pop
xor
in
inc
lods
jb
push
stos
pop
sti
fdivrl
leave
adc
inc
push
or
or
rcrb
addb
in
mov
push
out
out
push
inc
jae
push
pop
mov
ja
xor
xchg
repz
or
scas
pusha
fwait
push
test
das
cmp
push
std
cmpsl
scas
call
xchg
jg
ja
gs
je
cmpsb
xchg
pop
leave
repnz
cmpb
jge
fs
hlt
mov
inc
pusha
js
addr16
lea
loopne
mov
mov
fisubrl
out
in
inc
idivl
jle
cmp
test
and
in
sub
sub
enter
sqrtps
and
push
add
cmp
xor
test
jb
test
sbb
insb
mov
sub
out
dec
xchg
add
insl
cmp
mov
cwtl
outsb
sarb
and
and
mulb
out
xor
pop
pop
cs
adc
je
lods
push
and
mov
sbb
adc
sub
sub
xchg
sbb
jns
mov
test
ret
jnp
movswl
enter
bound
repnz
jne
mov
sub
sbb
xor
xor
clc
loope
out
sbb
pop
mov
std
das
aaa
jle
and
dec
loop
cmp
bound
rolb
push
adc
imul
movsb
out
mov
jb
cli
xchg
xor
cmpsb
int3
pop
ljmp
cmpb
popf
adc
mov
push
adc
push
add
js
mov
cmpsb
pusha
push
jbe
lret
and
add
icebp
sbb
pusha
inc
add
xchg
inc
loop
push
sti
fmuls
xchg
push
arpl
scas
mov
push
sbb
icebp
xchg
test
movl
cmp
movsb
xor
push
adcb
xor
aas
ret
mov
and
adc
cmpsb
cltd
adc
hlt
inc
xchg
xor
popf
les
out
in
mov
ljmp
sub
mov
mov
dec
and
lret
clc
dec
jmp
scas
aas
jmp
mov
sub
xchg
call
pop
pop
daa
jp
inc
xor
incb
adc
ror
aaa
bound
pop
cld
roll
mov
push
inc
loop
call
addr16
xchg
mov
jo
test
decl
cmp
ljmp
jb
and
xchg
mov
popf
cmp
adc
in
outsl
in
mov
sahf
dec
sbb
xchg
push
push
add
mov
in
cmp
add
adc
loop
mov
push
cvtpi2ps
sub
and
fmulp
repz
add
cmp
sbbb
fnstenv
out
mov
mov
aad
pop
nop
inc
xor
lret
adc
xchg
in
call
jge
cmp
and
adc
push
xor
stos
mov
call
das
sub
cmp
mov
pop
push
or
dec
sub
push
push
es
dec
popa
cmp
movsl
jl
mov
jp
int3
mov
jle
clc
icebp
rclb
or
je
loope
sub
push
jne
sarl
fldt
mov
bound
lahf
iret
xor
adcl
loopne
pop
mov
xchg
insl
mov
push
sahf
push
adc
cmpsb
daa
or
sbb
out
lods
in
xor
jno
cltd
push
dec
clc
rorl
jge
ret
adc
fwait
pop
push
ret
shl
cld
adc
stc
push
scas
aas
rolb
inc
in
gs
ret
scas
sub
jne
dec
lcall
cmp
cs
es
out
in
into
inc
or
jle
adc
mov
or
pop
mov
push
nop
not
int3
repz
xchg
jne
xchg
mov
int
inc
sbb
jg
mov
int
test
hlt
inc
mov
push
dec
fmull
adc
push
sbb
popa
gs
mov
imul
pop
or
add
outsb
jno
mov
xchg
inc
ds
jo,pt
insl
and
mov
ret
jmp
into
ret
out
jg
pop
shrl
cmp
mov
negl
into
pushf
in
outsb
push
mov
push
jle
push
in
or
cmp
roll
insb
jp
dec
and
sahf
dec
cmp
mov
cld
jne
movsb
mov
shrb
and
iret
sbb
or
ss
test
lret
push
shll
test
push
out
js
rorl
addr16
mov
enter
fsts
fs
andl
decl
aam
or
xor
push
push
add
insl
aam
das
cmp
popf
loopne
cmp
mov
mov
repnz
mov
movsb
cmp
xchg
adc
cmp
cli
idivb
push
mov
sub
les
push
inc
cmc
jae
cld
mov
adc
mov
jge
jbe
rorl
pop
xor
ficoms
inc
mov
iret
xlat
adc
clc
cltd
imul
cmp
mov
mov
movl
or
push
pop
and
lea
push
xor
cmpsl
clc
xor
les
pop
push
mov
int
leave
add
jno
mov
push
or
pop
sbb
popa
pop
cmp
cltd
shlb
test
sarb
ja
lret
push
mov
inc
lahf
push
push
mov
adc
daa
cli
sub
push
jp
pop
add
mov
xor
sbb
je
jnp
jbe
pop
ljmp
lock
les
imul
loopne
sbb
mov
xchg
test
arpl
jnp
add
arpl
je
jle
jae
icebp
mov
push
inc
rcl
scas
pop
xchg
test
in
repnz
les
sti
mov
gs
adc
pop
fists
lock
daa
loope
push
inc
xchg
test
test
cli
xchg
cmpb
xchg
fdivrp
testl
add
ds
cmp
and
inc
xchg
adc
lret
pop
js
xchg
ss
loope
int
jmp
sub
lock
mov
mov
mov
push
xorl
and
les
mov
outsb
jmp
adc
movsb
stos
lret
mov
inc
and
repnz
mov
gs
dec
lret
sbb
sarl
frstor
add
or
mov
dec
lock
inc
repnz
add
repnz
lea
outsb
mov
adc
fcom
jp
xchg
pop
adc
inc
lcall
push
in
in
lcall
pop
nop
inc
pop
mov
ss
call
mov
xchg
int3
adc
cmpsb
js
xchg
sbb
xchg
lret
ficoms
aam
cmc
fwait
cs
cmova
repnz
shll
and
test
shlb
sbb
in
xor
sub
pop
lahf
ja
adcb
fsubrl
vmwrite
ja
je
dec
cmp
sbb
enter
and
xor
adc
adc
or
xchg
stos
int
mov
xlat
jne,pt
rclb
int
rcll
jle
loop
ja
fsubrs
ss
lods
out
mov
scas
fucomip
cmpsb
mov
lcall
jb
lret
pop
loop
stos
shr
loope
jmp
push
hlt
dec
fcmovu
cmp
cmp
mov
scas
nop
pop
xor
inc
lods
cwtl
arpl
jge
cmp
sti
in
ds
pop
sub
inc
dec
lahf
push
cli
fildll
and
sahf
sub
fstpt
shrl
in
sbb
ds
cwtl
lea
sub
mov
inc
mov
xchg
sub
jl
stos
sbb
in
sete
arpl
adc
divl
aas
jmp
xor
xor
outsl
popf
pop
jle
ret
adc
or
int3
and
bound
and
pusha
sub
lret
cli
pop
xor
fdivl
or
icebp
mov
fildll
dec
cmp
shlb
or
jmp
dec
repnz
insl
xchg
dec
xchg
cwtl
ret
test
jnp
popfw
ror
mov
add
jecxz
repz
and
mov
lret
dec
insb
scas
mov
sub
and
dec
insl
lahf
mov
roll
dec
and
fnsave
in
lods
jle
cmpsb
dec
icebp
sahf
pop
in
fwait
xchg
mov
cwtl
inc
mov
add
ret
lds
fucom
dec
adc
push
add
jb
aaa
fcomp
mov
push
pop
lock
pop
mulb
mov
cmpsb
sub
push
cs
push
fbstp
xorb
jmp
cpuid
jp
test
sbb
pop
sub
mov
pusha
xchg
lahf
mov
leave
loop
cli
negb
scas
pop
xor
push
sbb
out
ret
xchg
push
in
hlt
aas
sub
into
std
xchg
stos
aam
adc
sarb
mov
push
aad
outsl
ja
cmpsb
repz
sbb
adc
dec
mov
xorl
imul
adc
add
inc
mov
addb
sti
pop
adc
xchg
xchg
lahf
push
push
xchg
mov
fwait
pop
pop
fwait
xor
roll
cmp
mov
out
and
cltd
lds
fidivs
and
in
mov
xchg
daa
imul
aas
jmp
fs
cmpsb
sbb
adc
in
mov
xor
lock
mov
std
in
mov
loopne
sbbb
xchg
push
push
mov
push
inc
rolb
lock
push
sbb
jbe
lock
pop
scas
and
fisubs
ss
mov
inc
mov
jae
xchg
test
mov
add
push
jmp
rorb
in
popa
adc
sub
imul
fwait
in
push
dec
cmp
xchg
test
in
test
faddl
mov
xor
cmp
test
mov
mov
push
mov
or
sub
add
inc
jns
adc
rcrl
push
jg
cmpsb
inc
inc
cmp
mov
adc
cwtl
jae
aaa
pop
cmp
loop
aad
in
mov
lds
js
out
loopne
inc
cmpsl
add
pop
ss
xor
push
movsb
out
pushf
sbb
xchg
mov
imull
cmpsl
iret
cmpl
mov
xchg
testb
jae
jp
push
rcrl
push
adc
push
push
fs
imul
inc
mov
adc
ret
jecxz
or
jmp
jmp
mov
das
popf
das
xchg
dec
sahf
outsl
push
loope
in
dec
mov
push
loop
popf
call
sbb
rep
push
push
adc
outsl
jge
test
imul
sub
pop
push
mov
sub
sbb
pop
sarb
jno
adc
fucomi
int
dec
scas
out
dec
sub
test
or
in
pusha
lret
dec
pop
or
adc
xchg
and
test
push
dec
shl
sbb
mov
and
fs
cmc
sub
ljmp
adc
cmp
or
mull
sub
adc
adc
scas
xchg
push
into
scas
lods
into
xor
mov
popa
jne
repnz
jns
cmp
fwait
dec
es
pop
cli
lret
ss
jno
idivb
int3
cmp
pop
mov
mov
ffreep
jae
mov
fldcw
mov
sub
test
xor
dec
dec
cmp
push
jl
mov
mov
out
sub
or
cmpl
rcr
cvtdq2ps
pop
dec
cs
test
jo
bound
dec
fimuls
nop
xchg
jbe
adc
push
xchg
outsl
outsl
call
test
xchg
xchg
fimull
movsl
pop
sbb
and
ret
add
pop
mov
insl
shl
jns
mov
push
mov
inc
jge
cmp
fisubs
ja
daa
pop
testb
pop
ret
sub
inc
cmp
or
outsl
int
push
mov
in
dec
xor
jns
adc
sbb
xor
int3
stos
lret
inc
push
jge
xchg
scas
fstl
andl
pop
pop
jb
mov
dec
lds
push
sbb
cmc
sti
mov
cwtl
sub
sti
mov
ds
push
mov
push
loop
in
sbb
push
push
out
in
and
insb
in
or
stc
mov
inc
fldt
mov
test
and
push
xchg
repz
cs
jmp
dec
loopne
shll
inc
rcr
mov
stc
into
les
mov
addr16
dec
arpl
sbb
lods
mov
jbe
jnp
shl
pop
push
ja
jno
stc
fldenv
mov
nop
and
rorl
sbb
divl
xchg
push
add
sahf
pop
lcall
movsb
push
and
enter
lahf
inc
pop
add
shl
mov
std
sub
in
out
xlat
jo
mov
lret
xlat
inc
fisttpl
movsl
and
aas
pop
pushf
stos
int3
push
lret
add
xlat
loop
and
into
hlt
xchg
hlt
inc
dec
int
sub
cltd
icebp
ljmp
mov
popf
fisubs
mov
dec
push
pop
je
cmp
loope
xchg
dec
pop
imul
xor
pop
ja
cld
in
and
sarb
scas
lock
into
mov
lret
loop
sbb
decl
clc
sub
insb
lahf
xchg
push
or
rcrl
cmc
mov
jbe
and
das
hlt
mov
ds
clc
xorl
push
dec
gs
and
mov
mov
shlb
add
je
and
es
cmc
daa
stc
dec
pop
dec
rol
pop
cltd
pop
lahf
mov
sti
aad
pusha
ja
ret
loop
pushf
xchg
int3
mulb
dec
mov
ja
jne
movsl
or
cmpsb
mov
inc
sbb
pop
sbb
adc
and
push
xchg
scas
imul
daa
ret
mov
test
xor
or
popf
stc
mov
sbb
adcb
mov
push
dec
inc
mov
pusha
push
cmp
jb
push
mov
xor
into
sbb
in
and
inc
ja
xorl
xchg
or
xchg
jae
or
adc
int3
frstor
movsl
mov
repnz
mov
addl
push
divl
push
jo
xor
cmp
cli
shl
mov
and
and
xchg
mov
lcall
jp
pop
adc
in
sub
jle
ja
inc
ss
mov
or
mov
jo
repnz
fdivl
mov
mov
das
andb
loope
adc
addr16
pop
push
jb
push
jle
lods
adc
gs
and
mov
ja
or
je
imul
cmp
test
div
xchg
push
in
iret
fimuls
sub
jl
mov
fdivrs
and
mov
dec
or
xchg
ret
fistl
aas
outsl
sbb
inc
push
lods
inc
mov
jmp
mov
mov
das
ret
insl
mov
pop
inc
das
jae
daa
les
mov
out
add
pop
mov
xchg
lods
mov
cld
je
add
cmp
ret
add
jo
int
shll
ret
jo
and
pushf
add
icebp
pop
xlat
movsb
push
mov
test
aad
in
ds
fcoml
out
and
imul
enter
sbb
mov
scas
test
mov
mov
push
pusha
xor
rcll
xchg
mov
push
in
int3
call
repnz
push
mov
jns
dec
mov
push
mov
cmp
outsl
pusha
dec
in
aas
cwtl
test
cwtl
shrl
fs
cld
das
cmc
sub
jecxz
xchg
push
scas
xchg
stos
je
sub
stc
or
sbb
je
lods
cmpsl
pop
push
loopne
cmp
outsb
jg
mov
test
mov
xchg
xchg
sbb
cmc
xlat
ss
lea
shlb
ficompl
outsl
mov
and
pop
xor
fwait
hlt
xchg
inc
int3
divl
mov
jle
push
xchg
mov
push
dec
xor
mov
lods
push
fdivp
mov
repnz
pop
cld
push
notb
push
mov
mov
frstor
push
push
mov
fsubr
pop
sub
mov
jno
push
dec
xchg
loope
mov
cmp
imul
dec
ss
jg
dec
lock
jne
mov
mov
cmp
popf
pop
sbb
pop
and
ret
dec
push
mov
out
nop
dec
ljmp
fldenv
in
pushf
je
lcall
mov
pusha
mov
add
mov
shrl
or
gs
dec
add
jl
sub
xor
jmp
mov
xor
jb
pushf
bound
scas
sub
lods
inc
push
pop
aas
bound
pop
mov
dec
and
xchg
stos
dec
xchg
mov
or
lds
and
cmc
sub
xchg
jmp
fsts
adc
push
icebp
cmp
push
and
test
inc
int3
push
addr16
enter
ret
rcrl
or
leave
xchg
or
inc
pop
lods
stc
mov
cmp
mov
cmp
xchg
pop
add
pop
fbld
sub
add
iret
shlb
jns
leave
jno
lock
arpl
ss
int
jns
mov
mov
in
sbb
cld
inc
sub
cmpsl
mov
call
xlat
mov
and
out
stos
jmp
hlt
mov
add
xor
call
dec
mov
xchg
imul
outsb
cmp
cmc
orl
push
pop
jp
scas
add
sbb
mov
lods
shrb
outsl
xor
xorb
fcomp
stos
xlat
jle
sub
sub
adc
adc
mov
lods
mov
dec
push
insl
push
mov
dec
xor
shl
jno
pop
mov
dec
pop
sbb
add
cltd
sahf
pop
mov
xchg
and
xchg
sbb
addb
sub
ret
fwait
add
jns
stos
mov
inc
inc
ret
cltd
popa
dec
repnz
int
sub
std
pop
ja
mov
pop
sbb
fs
pop
cmpsl
jne
sub
sub
mov
fs
sti
dec
sbb
xor
stos
cmc
dec
sbb
cmc
or
and
dec
mov
enter
sbb
js
fstp
inc
sbb
or
push
jp
push
divb
push
call
dec
cmp
sub
pop
stos
jae
xchg
pop
pop
popa
fdivr
mov
insb
test
int3
and
roll
outsl
popf
mov
sahf
stc
pusha
int
test
scas
mov
add
je
int3
dec
cmc
jg
xchg
jl
ret
clts
adc
mov
outsl
je
jns
lcall
jg
cmp
sahf
cmp
jae
jnp
push
aas
or
mov
mov
aam
sbb
or
or
jne
jp
fcmovnbe
push
test
push
into
mov
dec
sbb
mov
push
dec
jle
pop
leave
popa
jno
movsl
xor
jecxz
mov
and
mov
data16
jl
dec
test
mov
mov
out
lahf
pop
xor
dec
loope
cmpsb
fistpll
sbb
out
imul
addl
sbb
pop
sbb
mov
out
add
jp
mov
dec
loop
push
jne
je
cmpsb
jg
outsb
inc
and
testl
pop
add
push
jge
or
mov
mov
jno
popf
inc
xor
jmp
roll
mov
mov
mov
icebp
leave
leave
cs
push
push
xchg
cmp
ljmp
xchg
add
outsb
cmp
cmp
in
jb
shrb
push
pop
lret
push
sub
mov
clc
sbb
cmpb
fidivl
loop
and
adc
test
xor
mov
loope
cmp
es
lea
mov
arpl
daa
shll
mov
lcall
xchg
push
xchg
aad
xorl
inc
and
adc
pop
push
je
sbb
enter
lea
in
iret
and
aam
ficoml
mov
jns
cld
push
sbbb
push
push
call
or
push
test
xchg
int
decb
adc
rcrl
dec
dec
leave
loop
jno
xchg
shrl
lret
fwait
push
adc
sub
out
repnz
subb
push
insl
testl
fistpl
push
rol
in
and
addl
inc
stc
fdivs
push
sub
xchg
xor
jp
sbb
inc
or
dec
xchg
xchg
ret
or
or
push
movsl
punpcklwd
xor
insl
push
inc
das
or
int
in
dec
loopne
adc
and
andl
cmp
fmull
in
add
test
and
nop
pop
xchg
dec
int
sbb
add
mov
testb
push
sbb
test
sub
test
push
push
out
inc
xchg
test
stos
mov
xsha256
cmpsb
push
stc
mov
mov
jp
adc
fistl
sti
scas
push
out
xchg
cmpsl
add
cwtl
ss
mov
sub
insb
popa
or
rolb
mov
push
lods
int3
test
xchg
pop
and
scas
sbb
mov
or
insb
and
in
mov
dec
roll
pop
ret
loope
and
rolb
fwait
jmp
cmp
scas
subl
dec
pop
mov
cmpl
mov
fldl2t
rcll
mov
lret
imul
xchg
push
jo
shr
jp
pop
xchg
sbbb
mov
cmp
lret
add
cltd
shll
add
lods
repnz
adc
push
stos
stos
mov
pushf
jae
out
lcall
push
jecxz
jne
mov
ret
pop
imul
les
or
rolb
inc
add
into
xchg
push
mov
ret
mov
in
dec
orb
push
lahf
mov
push
idivb
dec
test
movsl
pop
and
lods
jnp
insb
fdiv
jg
adc
cmc
stos
pop
subl
fs
lds
imul
enter
std
add
cmp
xchg
jmp
push
or
into
ss
push
xchg
sbb
into
fwait
icebp
ss
fmuls
mov
std
aaa
lods
jle
int
jns
pop
adcl
cmp
scas
mov
jl
sub
inc
inc
jns
adc
jb
lock
scas
cs
and
dec
fwait
mov
arpl
jmp
inc
adc
inc
adc
jbe
xchg
pop
sub
cmp
sbb
orl
add
mov
xchg
sub
inc
int
inc
jle
cmc
and
add
out
or
popf
pop
je
repnz
popa
mov
sti
mov
push
add
push
pusha
test
mov
imulb
jns
adc
fs
jno
push
testb
mov
xchg
or
test
in
imul
jae
and
pop
cmc
scas
mov
add
fcoml
insb
inc
in
push
mov
ss
jno
xorb
lods
fmul
mov
scas
push
pop
outsl
leave
push
push
rclb
adc
mov
xor
or
cmp
sbb
icebp
fcmove
out
dec
arpl
xchg
cld
mov
jle
fwait
adc
out
add
cmp
lcall
pop
xorl
and
andb
mov
add
jns
into
sbb
repnz
fdivp
jnp
xor
js
xchg
stos
aad
insb
stc
sub
outsb
xchg
mov
je
sub
xchg
pop
xchg
mov
xor
inc
repnz
lret
rorl
fsts
aad
push
cmp
daa
dec
test
mov
ret
pop
dec
out
popf
sbb
push
int
fisubrs
push
shrb
mov
notl
inc
pop
xor
push
push
call
es
jno
ss
mull
dec
xchg
mov
jbe
mov
enter
sbb
out
negb
dec
cli
loop
dec
inc
fisubrl
mov
mov
movsl
push
rep
das
mov
int
push
inc
sbb
pop
cmp
xlat
jne
fldcw
xchg
inc
mov
xchg
jbe
int
or
mov
jmp
and
aas
ja
cmp
mov
pop
sbb
or
dec
xchg
ljmp
stc
iret
outsl
leave
adc
mov
cli
jns
in
add
je
jae
pop
cld
push
push
cwtl
or
lret
cmp
sti
inc
jo
jae
mov
mov
lock
xbegin
push
sub
inc
bound
inc
mov
icebp
aaa
mov
pusha
push
xlat
imul
pop
inc
adc
pop
fsubl
mov
inc
and
jmp
dec
popf
mov
xor
jbe
cmc
jo
icebp
xor
xlat
mov
jge
cmpsb
jne
imul
inc
mov
out
dec
push
inc
xor
xchg
and
jecxz
jle
jns,pn
cmp
xchg
pop
cmp
lahf
jecxz
repz
xlat
scas
mov
aam
pushf
repz
fisttpll
sub
cld
dec
ret
xor
pushf
cmpsl
jno
xchg
out
ret
or
js
cmp
in
mov
imul
stos
imul
inc
push
test
xor
cmp
decb
sub
sub
pop
aaa
add
mov
and
pop
aam
jne
mov
mov
inc
push
push
mov
cmc
push
sub
dec
xor
rorb
jo
pop
or
push
les
inc
and
jmp
add
mov
mov
push
movsl
inc
stc
bound
inc
mov
xchg
sub
and
and
cmpsl
call
dec
divl
add
cmc
mov
push
fstps
xchg
iret
mov
cmp
push
jne
pop
lods
cmpsb
insl
mov
jb
jle
in
xchg
or
or
sub
cmp
shlb
fcoml
iret
inc
insb
subb
mov
aas
jmp
jecxz
pushf
out
jne
jp
imul
aad
out
cli
pop
in
mov
push
pusha
mov
ds
inc
cmpsb
sub
jp
test
add
popl
and
orl
rorb
and
fnstsw
loopne
stos
imul
pop
popf
lock
in
mov
stc
sub
lods
cwtl
push
and
ret
mov
xchg
adc
cmp
leave
xor
xchg
dec
fisttpll
lcall
div
jg
loopne
and
test
and
int
hlt
test
push
adc
aaa
mov
fidivrl
inc
mov
dec
mov
inc
cmpsl
mov
insl
xchg
mov
lods
xchg
jge
inc
sbb
cmc
push
xchg
loopne
cmp
mov
mov
jnp
loopne
or
sbbb
add
xchg
push
xlat
aaa
fidivl
cli
pop
sti
push
fnstenv
sbb
aad
mov
cmp
testl
pushf
sbb
aaa
mov
jg
arpl
sub
into
scas
lods
cmp
cmp
or
das
sub
mov
addr16
rcrb
pop
dec
sub
push
out
push
movsb
push
ret
push
out
lret
subb
xor
adc
cmc
xchg
jnp
and
adc
push
pop
xchg
popf
out
push
ljmp
dec
mov
imul
not
add
fisubrs
and
mov
cltd
push
inc
sub
test
je
mov
dec
sahf
xchg
or
push
cmp
fs
icebp
cwtl
xchg
lret
mov
int
push
dec
in
test
cmp
and
xor
ljmp
add
inc
jo
ds
in
dec
test
inc
sahf
jae
sbb
and
push
dec
ror
pop
xchg
data16
pop
xchg
movsl
in
push
pop
mov
in
add
ljmp
imul
xchg
cltd
dec
dec
cmp
push
lret
xchg
or
rcll
loopne
sub
sarb
push
outsb
mov
cmp
pop
push
dec
loop
push
fiaddl
cmp
inc
out
inc
mov
push
aam
mov
les
cmc
imul
rcrb
cmpsb
inc
jne
mov
mov
add
dec
xlat
push
flds
mov
ds
movsb
out
fdivr
insb
leave
and
loopne
mov
pusha
ret
pop
mov
test
inc
sbb
rorl
ror
mov
cmp
idiv
dec
pop
cmp
cmp
shlb
data16
push
push
xchg
push
das
sbb
push
arpl
loope
add
dec
movsb
fsubrs
xor
call
into
call
scas
inc
mov
inc
dec
dec
aas
pop
lret
jle
dec
cmp
bound
out
push
and
mov
push
or
ficoms
xchg
shrb
aaa
jae
aad
loopne
cmc
pop
repnz
mov
cltd
pop
push
jnp
pop
imul
repz
dec
or
out
xchg
jmp
pop
push
lcall
push
or
int3
ja
shrl
add
in
mov
test
insb
addl
les
daa
fcompl
dec
enter
in
xor
das
les
cmp
jns
out
mov
mov
and
add
push
sahf
adc
jp
inc
sti
dec
xchg
inc
push
or
sub
sbb
in
stc
ds
xchg
call
subb
cmp
int
mov
popa
add
sub
mov
and
outsb
mov
adc
dec
shrl
inc
aas
mov
loopne
pop
mov
pushf
mov
stos
xor
mov
out
not
jmp
div
mov
push
pop
mov
jbe
shll
xchg
xor
jg
inc
xor
pop
sbb
fnstenv
lods
fidivrl
out
jns
xchg
push
inc
into
cmpsb
aaa
rclb
sbb
add
push
in
cmp
test
inc
xchg
rorb
mov
dec
fucom
mov
inc
pop
adc
mov
mov
rol
test
xor
mov
add
rcll
mov
cmp
xchg
aam
jg
cli
popf
cli
mov
orb
andb
into
imul
in
mov
inc
push
jae
adcl
and
sbb
stc
fnstenv
es
imul
dec
nop
insb
cmp
imul
test
mov
adc
inc
imul
fildl
nop
sbb
cmp
xchg
imulb
sti
cmp
jne
or
and
ror
bound
fwait
sahf
lock
pop
fisubs
test
fldl
xor
ds
jp
int3
in
cltd
in
dec
std
sbb
ficomps
mulb
inc
out
pop
jmp
scas
mov
and
push
insb
pop
jg
mov
push
cmp
test
popf
mov
or
xchg
fnsave
inc
aas
sbb
aas
in
movsl
fdivrl
cmp
cmp
adcb
test
inc
into
cld
adc
mov
imul
icebp
jecxz
mov
mov
dec
xor
enter
push
cmp
dec
aaa
fnstsw
test
lcall
cmpsb
inc
pop
clc
pop
xchg
stos
jmp
movsb
cmp
push
push
nop
add
mov
jg
and
aas
mov
das
daa
xchg
or
cmovb
inc
or
fistps
jg
mov
rcr
push
xchg
inc
sub
xor
shll
loopne
or
mov
loopne
out
fs
adc
jns
jge
adc
js
nop
mov
adc
and
fdiv
sub
lods
scas
fldcw
test
daa
or
add
jno
fs
popf
xchg
daa
repz
dec
cmp
adc
in
leave
push
stos
shlb
and
lret
ret
bound
push
lods
data16
or
arpl
sbbb
jle
adc
or
movsl
cmc
mov
sbb
mov
sbb
inc
mov
icebp
in
imul
test
decb
js
imul
ror
bound
sahf
dec
aas
cmpsb
js
jp
xchg
push
xchg
iret
adcl
cmp
mov
pop
mov
test
xor
xor
lock
or
adc
xor
outsb
sbb
xchg
xor
lret
jl
ds
ret
sbb
test
mov
xor
cmc
sbb
aam
dec
mov
mov
and
fmul
xchg
arpl
mov
jnp
ficompl
imul
lock
in
mov
shll
or
shlb
int
mov
xor
ds
fsubr
mov
fwait
push
inc
dec
mov
add
enter
es
pop
hlt
test
mov
add
sbbb
gs
inc
fdivrs
push
xor
xor
and
mov
or
ret
inc
clc
push
pop
xchg
or
add
lret
jno
inc
sahf
mov
add
jmp
sarl
cs
add
mov
cmp
outsl
lcall
lahf
inc
jne
xor
jecxz
mov
mov
rcll
test
mov
cs
ja
loop
fnsave
les
js
into
push
ljmp
outsl
inc
inc
push
rcll
icebp
sub
mov
aaa
ss
xchg
jg
movsl
orl
testl
adc
loope
fnstenv
aaa
fs
adc
dec
xchg
push
or
jb
popf
pushf
jbe
ds
popa
cli
jne
jnp
inc
pop
jb
mov
sub
out
xchg
xchg
and
pop
mov
jle
sbb
cmp
sub
rorl
lretw
test
mov
test
and
mov
test
das
inc
mov
pop
jl
jecxz
add
jne
js
loope
mov
jge
roll
imul
mov
pop
mov
js
xor
pop
xor
int3
lea
aaa
addb
inc
ficoml
cs
loopne
out
mov
js
inc
aas
cmp
insl
xor
adc
cmp
xchg
jecxz
add
xchg
arpl
daa
arpl
mov
aad
sbb
ljmp
xchg
arpl
push
std
mov
pop
sbb
jge
pop
xchg
push
cmpsl
push
inc
inc
sahf
adc
xchg
ret
mov
xchg
dec
add
divl
lea
and
jb
mov
mov
lods
mov
jp
mov
jno
stos
jns
js
pop
mov
push
repz
mov
divl
mov
gs
adc
lds
idivl
fdiv
ljmp
insb
dec
divb
inc
cwtl
lods
push
les
pop
or
movsl
dec
lds
icebp
xor
ds
pop
outsb
rcll
cld
and
lds
sbb
or
test
jne
mov
add
jb
or
xor
inc
enter
xchg
push
inc
test
lret
xacquire
ljmp
in
int
test
jmp
or
push
xchg
sbb
mov
lds
out
or
add
in
add
lods
dec
testb
scas
pop
pushf
mov
test
ljmp
insb
enter
add
ljmp
jg
add
es
mov
es
mov
loop
adc
ret
sub
add
xchg
xor
lds
das
in
xchg
xchg
or
out
pop
sbb
sbb
xchg
js
sub
pop
js
sub
and
in
loopne
cltd
in
push
das
pop
xor
les
stc
mov
jnp
or
adc
xchg
iret
scas
and
test
sub
aaa
inc
push
adc
xchg
daa
jmp
inc
repz
mov
lds
jl
xchg
mov
fsubr
push
jecxz
repnz
das
enter
or
cmpsl
insb
xor
pushf
imulb
mov
test
sbb
or
cmp
pushf
pop
xor
arpl
lahf
aaa
aam
mov
data16
adc
add
cmp
mov
mov
sbb
xlat
push
scas
sbb
mov
add
cmp
mov
dec
ret
add
test
repnz
mov
pop
les
push
ret
ljmp
stos
push
rcrb
in
sub
fs
jbe
dec
mov
and
lock
hlt
gs
shll
adc
mov
lcall
icebp
mov
sbb
ljmp
in
jo
mov
out
lds
sbb
xchg
pop
xchg
popa
xor
xchg
fwait
and
or
mov
mov
pop
loopne
cmp
jp
out
push
out
sti
sbb
adc
loope
xor
daa
sbb
xchg
cmp
mov
push
in
mov
xchg
push
std
inc
inc
test
outsb
shl
or
pop
movsl
add
fmull
pusha
dec
cmp
xchg
jo
push
xor
cltd
mov
clc
test
pop
pop
loop
pop
insb
and
out
cmp
inc
cs
xor
lcall
jne
inc
mov
sbb
push
dec
in
mov
add
push
push
popa
xchg
jo
push
and
mov
in
adc
push
pop
stc
scas
je
add
push
dec
push
sub
adc
nop
sbb
push
adc
shll
lods
and
test
and
jg
pop
fisubrl
push
add
add
cmp
mov
mov
add
sbb
or
cwtl
bnd
mov
cmp
in
mov
jne
and
ret
int3
xchg
lret
test
rcrl
out
xor
push
mov
sbb
mov
loop
sbb
add
loopne
sub
inc
xlat
out
shl
fwait
push
enter
inc
xor
nop
aad
or
testl
cs
dec
leave
dec
paddq
es
cmpsl
jns
mov
popf
sub
cwtl
xchg
shlb
dec
jecxz
int
out
or
test
sahf
or
int3
mov
popf
push
scas
xchg
mov
cmc
sub
scas
lods
sbb
stos
xor
aas
mov
mov
nop
inc
sbb
and
shlb
sub
sub
push
outsb
or
or
decl
mov
cli
or
in
loop
or
mov
jnp
inc
push
fsubl
push
xor
pop
sub
pop
xor
mov
add
or
aam
jecxz
sbb
pop
std
sbb
or
push
out
pop
outsb
gs
mov
dec
jns
sub
xor
rcrl
lods
sbb
fidivrs
jbe
data16
fidivl
mov
and
mov
push
movsl
mov
sarb
sbb
sti
push
mov
push
xadd
mov
mov
test
ds
jo
popf
hlt
push
and
inc
xor
mov
pop
jns
jmp
sarb
mov
jg
xchg
shll
cmp
sub
adc
stos
xchg
in
xchg
cmp
mov
push
add
or
sub
xor
insb
shrl
cmpsb
xor
sub
add
pop
into
ljmp
jnp
loope
mov
mov
jno
clc
xchg
adc
mov
or
xchg
mov
loope
movsl
repz
xchg
rcll
loopne
popa
fwait
repz
lods
sub
data16
fucomip
movsb
bswap
lods
out
push
shrb
pop
int3
fistl
lret
popf
sbb
mov
and
jnp
cli
in
movsb
sub
xchg
sti
or
scas
subl
data16
xor
and
mov
scas
xlat
dec
scas
out
mov
pop
add
mov
and
sbb
mov
les
mov
imul
out
xor
daa
out
jno
shlb
into
jp
cwtl
dec
inc
sub
or
xchg
bound
int
jb
add
sub
add
push
inc
add
int3
sar
add
fdivl
hlt
adc
add
repz
mov
xor
lret
sbb
add
popa
lahf
mov
add
movsl
mov
xchg
dec
das
inc
pop
gs
jmp
xchg
orb
insl
xchg
inc
inc
popa
push
cmp
sub
stos
and
push
adc
insl
add
jno
dec
call
mov
inc
jp
hlt
inc
call
ja
mov
incb
js
push
pop
add
push
leave
leave
outsb
int
jl
popa
out
jns
andl
sub
loope
rorl
sub
negb
je
pop
mov
jmp
cwtd
ds
jae
xchg
cltd
mov
xchg
pop
dec
rorb
xchg
mov
in
push
outsl
push
fucomip
ja
sbb
sti
adc
mov
imul
cwtl
int3
fcomi
push
ss
sub
jmp
jmp
enter
fxrstor
xchg
jle
xlat
push
mov
in
out
adc
sahf
xchg
push
mov
rol
mov
mov
ret
jle
jno
cmpsb
inc
std
jp
jg
outsb
sub
fidivs
mov
clc
out
enter
xchg
add
jbe
mov
xor
in
popa
sti
mov
mov
cmpsb
ljmp
iret
jmp
xchg
aas
push
mov
jge
cmp
push
cmp
pusha
aaa
mov
ret
xchg
push
adc
add
mov
fldenv
roll
call
sti
shll
scas
fildll
pop
lea
adc
arpl
out
dec
sbb
jo
hlt
mov
fistps
into
fisttpll
dec
ficoms
pop
sahf
mov
or
fldl
mov
mov
cmp
pop
gs
xchg
in
mov
aas
jns
in
and
mov
pop
sub
mov
rep
pusha
clc
xor
or
mov
mov
and
xor
cmpsb
and
xorb
xor
xor
sub
lea
stos
adc
popa
mov
mov
in
sahf
jno
xor
fstps
lods
addr16
and
lcall
popa
movsl
inc
fnstcw
pop
aam
jmp
js
adc
imul
hlt
sbb
add
lods
pop
inc
dec
fs
mov
fnsetpm(287
stos
mov
mov
pop
mov
aas
dec
push
ret
mov
repnz
or
cltd
xor
mov
out
fmull
xor
xchg
adc
out
mov
jno
popa
dec
movsl
leave
call
cmpsl
sbbl
cmp
and
mov
sub
ss
lock
xor
push
or
imulb
cmp
test
push
jg
sub
into
std
icebp
test
scas
lods
in
testb
arpl
push
int3
mov
add
or
test
sbb
mov
jne
pop
xchg
into
rclb
cwtl
das
mov
xchg
mov
arpl
jae
and
adc
mov
out
adc
xchg
cmc
sub
xorl
mov
xor
and
into
dec
jl
fistl
xor
dec
incl
mov
ja
out
xrelease
shrb
repnz
xchg
jge
mov
repnz
jp
push
lahf
fxam
icebp
imul
pop
jmp
xor
adc
or
in
invd
xchg
dec
adc
mov
int3
jmp
aam
inc
ret
fisubrl
out
popa
and
dec
jg
mov
xor
mov
cli
cmp
sub
xchg
inc
call
push
aaa
lahf
jnp
ja
imul
jnp
test
inc
cmpsb
test
es
int3
sbb
data16
je
xor
xor
lock
cli
insl
jns
pop
mov
jl
dec
push
and
mov
sahf
xchg
pop
test
adc
iret
test
adc
jbe
cmp
jns
shlb
inc
mov
mov
lods
push
mov
bswap
lock
lcall
mov
dec
stc
xor
das
testl
outsb
hlt
push
mov
and
enter
mov
sbb
inc
jecxz
pop
mov
cmpsb
pop
in
add
mov
fdivrp
decb
inc
xchg
inc
dec
mov
push
cmp
push
enter
aad
cwtl
adc
shll
mov
lcall
scas
inc
xor
leave
dec
cli
test
xchg
xor
out
mov
aad
inc
cltd
xchg
mov
jmp
hlt
hlt
adc
dec
ret
bound
jno
shr
mov
cmp
pop
pop
lret
pushf
repz
pop
xchg
mov
in
int
jno
es
aam
or
ret
addb
int
sbb
bound
xchg
sbb
inc
cmpsb
dec
scas
lock
xor
push
mov
push
in
mov
lahf
mov
mov
cmp
and
jp
jb
insl
lods
mov
sbb
repnz
pushl
sbb
jp
out
popf
jae
push
sbb
popf
jmp
pop
aad
iret
jmp
sub
ret
mov
sub
cld
xchg
in
inc
push
mov
jle
or
pop
outsl
lret
xor
sbb
or
test
mov
pop
and
movsl
mov
fwait
stos
stos
or
xchg
sbb
repnz
js
sbb
cmc
push
mov
bound
mov
pop
mov
xchg
shrl
cs
cmp
add
add
cmp
fcoms
je
add
cs
hlt
mov
movsb
das
mov
sub
jbe
push
xor
push
cmpsl
mov
lds
inc
mov
shlb
or
stos
aas
or
inc
xchg
mov
cmp
mov
sbb
cld
adc
shrl
jmp
je
and
cmp
mov
insl
and
pop
cltd
movsl
filds
and
repnz
int
scas
sbb
pop
sub
cwtl
shrl
fcomps
dec
pushf
lea
push
stos
jnp
shrl
mov
sub
jne
mov
fnstcw
jo
cmp
push
js
fs
test
addr16
sbb
cld
sbb
xchg
mov
cmp
loop
mov
mov
sub
out
or
xor
mov
xchg
or
adc
repz
fisubrs
mov
cmpsb
pop
and
and
sub
repnz
rorl
outsl
orl
gs
ret
out
push
shlb
push
jae
dec
add
mov
or
xchg
mov
mov
inc
shlb
lahf
dec
lock
addr16
xchg
outsl
in
insb
mov
lods
repz
mov
int
push
jmp
insb
lahf
int3
pop
sub
jno
xchg
repnz
cmc
fcomp
testl
inc
sbb
jmp
dec
pop
adc
out
pop
mov
sarb
shl
in
mov
push
inc
cld
pop
dec
sub
mov
scas
cmp
sbb
push
push
xchg
jo
fldt
or
and
aad
lret
lods
js
jbe
mov
xorb
cmpsl
nop
or
and
sub
dec
fsubrl
xor
punpcklwd
xlat
mov
lock
or
insb
adc
sarl
or
shrl
rcr
push
mov
or
mov
cmp
shrl
enter
mov
pop
sub
loopne
adc
pop
lds
imul
mov
sti
cmp
inc
pop
push
lcall
jmp
fbstp
mov
push
inc
lahf
aas
adc
adc
repz
ror
lds
out
lods
outsl
nop
add
mov
add
adc
outsl
std
mov
and
outsl
je
or
test
xor
enter
repnz
stos
fisubrs
out
stos
and
sub
xchg
gs
sbb
jg
xor
mov
mov
cmp
aaa
or
sbb
outsb
cmp
loope
push
pushf
sarl
repz
pop
dec
popf
fisttpll
data16
pop
adc
dec
popa
sti
push
sub
or
jmp
mov
sbb
adc
loop
add
rcll
fcom
outsl
adc
orb
lods
inc
cwtl
xor
pop
in
rcl
sub
call
xchg
push
shll
mov
pop
lods
cmpsl
sti
insl
addr16
shll
sbb
movsb
pop
ret
sbb
sbb
lret
popf
xor
int3
sub
xor
les
mov
scas
jp
fcmovne
test
les
insl
push
stc
and
jl
popa
in
jmp
or
sti
lods
inc
or
pop
pop
xor
stos
mov
addr16
cmpsl
sub
inc
test
ret
je
mov
icebp
std
mov
xor
nop
cmp
add
por
sarl
repnz
in
js
mov
aaa
fmulp
dec
inc
cmovge
lods
clc
idivb
add
and
mov
pop
xchg
out
xchg
push
sar
sbb
dec
inc
div
adc
loopne
cmpsl
pop
movsl
int
push
adc
xchg
mov
pop
xchg
std
add
sbb
loope
jl
adc
jmp
push
hlt
mov
xor
jmp
sbb
icebp
and
imul
mov
xlat
push
and
xor
scas
shr
pop
loopne
cmp
fidivrs
inc
test
cmp
jno
lret
cmp
push
xchg
mov
cmp
test
adcb
add
cmp
push
loop
int3
jae
out
inc
add
test
dec
test
mov
bound
adc
add
outsb
pop
les
outsb
aas
mov
sub
xchg
pop
lods
push
cmp
and
scas
push
pop
inc
ljmp
or
clc
aam
das
int
into
mov
push
jp
sbb
push
cmc
adc
sbb
das
das
mov
cmpsb
inc
xor
dec
inc
repz
into
insb
mov
std
stc
jge
std
scas
fsubl
mov
mov
dec
pop
test
subl
inc
sarb
inc
and
fsts
jb
nop
mov
scas
dec
loopne
sbb
fidivrl
add
mov
dec
or
mov
bound
dec
fstl
push
inc
sub
or
stos
adc
data16
mov
jne,pn
mov
inc
jo
insl
test
ja
lahf
xor
out
ret
lock
xlat
lock
arpl
pop
dec
cmp
mov
xchg
pushf
jl
cmp
jae
in
pop
fcompl
test
loop
pop
or
adc
cwtl
mov
inc
icebp
jae
jle
icebp
xchg
push
bound
jmp
test
je
pop
lahf
mov
cli
int3
cmp
adc
jb
test
std
or
add
and
inc
popf
adc
sbb
es
ljmp
or
fmulp
pusha
jns
test
out
outsl
sbb
fucom
inc
jl
xor
jne
mov
cmp
jnp
xor
pushf
dec
or
lahf
xchg
push
call
or
and
aad
pop
daa
push
or
push
mov
test
lret
sbb
xlat
mov
dec
test
out
movsl
sub
movsl
push
or
ffreep
mov
mov
aam
jl
sbb
or
and
dec
jae
jo
mov
inc
lods
pop
jge
add
gs
pop
dec
sti
daa
mov
stc
jno
cmp
in
mov
sbb
jl
cli
or
add
push
scas
and
pushf
inc
je
dec
push
dec
xor
addr16
call
iret
sub
xlat
rcr
mov
jg
jp
fiadds
bound
jle
sub
cmc
stos
clc
mov
push
ss
lods
icebp
gs
adc
mov
pop
or
inc
aas
and
sub
pop
jae
rcll
bound
loope
mov
stos
bound
repnz
sbb
out
or
out
push
cltd
jg
incl
sbb
inc
dec
xlat
cmc
cmp
lock
negb
fstps
ret
out
mov
pop
ja
jb
xor
and
xor
mov
stc
push
xchg
ja
and
and
ret
aas
pop
in
int
out
into
gs
xchg
add
aas
imul
hlt
gs
mov
mov
cltd
in
cld
in
adc
jl
inc
cmpsb
stc
push
jo
std
dec
int
sbb
std
out
movsb
notl
sub
sub
mov
in
and
into
pop
mov
mov
movsl
ret
addr16
xchg
in
push
xchg
and
cmpsl
das
sahf
test
add
or
out
sahf
or
sbb
dec
mov
add
loope
mov
sub
inc
decl
mov
jl
dec
mov
mull
test
out
setp
stos
stos
in
pop
sbb
lret
test
sub
push
inc
bound
mov
clc
jle
jno
xchg
add
mov
imul
sub
and
xchg
enter
lret
or
jl
cmp
into
out
lods
cltd
stos
and
mov
adc
dec
ljmp
daa
hlt
rorb
cmpsl
pop
loopne
test
lea
ret
mov
xchg
jmp
mov
stc
mov
xchg
dec
repz
mov
shll
int
or
push
iret
mov
shlb
test
repnz
pushw
xchg
push
cmp
adc
xchg
shll
or
dec
mov
jmp
mov
or
cmc
add
gs
out
jge
adc
mov
add
push
cmpsb
cmc
inc
cmpsb
gs
in
iret
sub
xchg
push
xchg
dec
bnd
pushf
je
idivb
cmpsb
ret
lods
ror
mov
push
fdivs
lret
fnstcw
cmpsl
lock
push
leave
test
inc
push
out
aam
xchg
mov
movl
fldcw
cmp
call
cmpb
xchg
mov
dec
mov
insl
loope
and
mov
push
jae
cmp
mov
mov
mov
push
fimuls
dec
paddw
mov
lcall
aas
inc
cwtl
ss
mov
jo
loopne
sbb
aas
test
in
fisubs
sub
cmp
movsl
dec
jmp
jae
lds
xor
adc
leave
inc
inc
test
mov
add
stos
test
pop
out
pusha
add
pop
hlt
jp
repz
aaa
add
dec
lea
sbb
loopne
pop
out
mov
insb
add
ret
lock
pushf
lds
mov
add
push
xlat
push
jp
dec
xchg
dec
add
out
enter
cltd
mov
stc
fistl
loope
int
fcoms
sbb
stc
or
xchg
sbb
sub
bound
imul
cmpsl
jns
sbb
movsl
mov
lods
cmp
xor
ficoml
in
test
enter
jo
icebp
jge
cmc
and
call
cmp
jae
mov
shl
clc
or
push
test
push
loop
pop
mov
fsubl
cli
push
movsl
outsl
movb
cmp
out
pop
js
pop
ljmp
push
repz
call
sbb
push
cmp
jno
add
rcrl
and
pushf
mov
lock
addr16
fsts
pop
sbb
daa
sub
je
inc
jl
mov
and
test
pop
mov
mov
jmp
and
cmpsl
dec
jae
fisttps
ret
psubsw
pmulhuw
cmp
adc
ss
aam
push
jmp
add
subb
inc
jmp
mov
cmpb
pop
and
mov
mov
stos
jge
not
jle
sub
dec
popf
fwait
pop
clc
lock
push
rep
sub
xor
es
sbb
push
leave
gs
mov
out
mov
enter
test
inc
fidivrl
shrl
test
push
push
stos
insl
fnstsw
les
das
out
daa
insl
out
sahf
outsb
push
adc
out
or
mov
xchg
xor
pop
pusha
sbb
jmp
xor
and
mov
mov
outsb
pop
mov
pop
or
lock
in
sti
out
clc
sub
dec
mov
cmpsl
enter
aas
inc
push
div
lcall
push
in
mov
das
xchg
fidivrs
mov
lock
aas
pop
sub
orb
movsl
dec
out
inc
imul
icebp
jecxz
jp
inc
in
mov
lods
out
jmp
lods
mov
aad
aam
mov
mov
je
adc
ret
or
aad
xchg
outsb
pop
mov
inc
les
push
ljmp
insl
adc
pop
loopne
push
xchg
je
loopne
add
pop
push
mov
popf
jns
in
mov
lods
bound
jecxz
xor
sub
dec
mov
mov
icebp
popf
dec
lcall
arpl
push
test
out
adcb
fwait
xchg
cli
lock
fnstcw
cld
bound
cmp
icebp
shlb
imul
aad
hlt
mov
pop
cwtl
mov
cmovnp
outsl
fstl
sbb
pop
xor
inc
pop
int3
xchg
cwtl
das
mov
xor
test
call
xor
jmp
std
jecxz
push
into
mov
jnp
jp
lock
jae
test
xchg
dec
hlt
aaa
fsub
adc
dec
inc
xor
insl
mov
shll
frstor
into
fs
rorb
pop
sbb
or
scas
mov
pop
add
cmp
add
adc
xchg
push
jno
cmc
in
rcll
push
dec
jno
cmpsb
xchg
mov
sbb
cmpsl
push
cltd
leave
in
out
cmc
dec
push
jle
popa
iret
aaa
cmp
stos
adc
push
fcoms
test
insb
cwtl
mov
aam
or
jbe
sbb
stc
pushf
xchg
inc
adc
mov
cmc
inc
cmp
and
mov
mov
jle
popf
xchg
gs
shl
push
lret
sub
pushf
je
sbb
sub
dec
jns
jne
lds
dec
xor
add
in
dec
mov
jmp
xor
or
lods
xor
aam
loopne
pop
inc
sbb
and
mull
jp
movsb
push
lods
fisubrl
and
lds
mov
cmpsb
cmp
hlt
xabort
inc
scas
cmpsb
lods
push
adc
shll
push
pop
xor
fbstp
ffreep
bound
mov
ljmp
jae
addr16
repnz
test
jb
outsl
sub
loop
and
cs
jl
lret
outsl
mov
lods
jl
cltd
cmpb
in
dec
push
out
mov
js
sub
sbb
jo
xor
stos
jg
repnz
sti
out
dec
lods
aad
mov
sbb
movsl
sbb
or
rorb
inc
mov
jnp
xchg
sahf
sub
cli
stos
mov
sbbb
push
dec
pop
sahf
sbb
add
stos
dec
adc
push
sub
popf
mov
xbegin
sub
pop
int
xchg
mov
int3
lds
out
sbb
mov
xor
insl
mov
sub
sub
jg
test
pop
test
out
jmp
mov
xchg
insb
mov
dec
bound
cltd
les
sbb
aaa
jnp
jns
fsts
int3
or
out
mov
mov
cmp
call
lods
clc
das
cmp
jne
jo
les
ja
repnz
mov
adcb
push
mov
stos
sbb
inc
mov
clc
inc
xchg
jne
and
xchg
mov
cmpsb
cmp
stos
inc
popf
nop
cld
in
scas
xchg
jg
into
hlt
vpsubsb
scas
or
es
outsl
jnp
into
imul
or
fwait
scas
cmp
mov
or
mov
jns
test
dec
js
mov
cmpb
sbb
mov
in
outsb
sub
or
adc
jae
mov
or
mov
pushf
adc
out
pop
loopne
pop
sub
dec
icebp
jmp
push
xor
cmp
out
sub
adc
mov
pop
sub
push
sahf
mov
jmp
sub
mov
pop
cld
xchg
incb
add
sub
lahf
loopne
sbb
mov
sub
mov
jno
mov
add
jbe
jmp
sub
dec
pushf
fdiv
cmpsb
adc
sahf
lods
std
movsb
pop
decb
out
or
popf
cs
addr16
cmp
mov
xchg
outsl
push
fstpt
mov
mov
or
inc
sbb
cwtl
xor
sbb
lods
lret
subl
jge
adc
inc
jbe
in
mov
outsl
or
test
xorl
xor
or
out
data16
test
data16
xchg
xor
mov
xor
pop
dec
mov
in
das
loop
arpl
add
test
lock
inc
rcrl
stos
rcll
jge
sub
sbb
mov
push
adc
cmp
data16
mov
adc
sbb
ret
dec
lock
xchg
in
add
xchg
jbe
jg
push
pop
add
xchg
mov
js
or
loopne
pop
scas
sub
js
daa
arpl
cmp
jb
sub
mov
add
insb
pop
jnp
sbb
push
fstp
dec
sbb
inc
sti
mov
test
insl
mov
push
add
icebp
int
outsl
jge
add
jo
movsb
jmp
repz
and
sbb
xchg
mov
fisttpll
or
loope
adc
addr16
mov
test
mov
adc
inc
mov
shll
jecxz
pop
or
into
data16
lret
clc
sub
push
mov
xor
xchg
jmp
insl
add
adcb
push
mov
ret
inc
shlb
jbe
out
adc
and
sub
mov
arpl
mov
es
cmp
push
push
jecxz
mov
mov
clc
add
lods
adc
in
jne
std
xchg
rcl
push
inc
add
loop
sub
xchg
popa
adc
xchg
push
inc
adc
cmp
ret
in
xchg
pop
xchg
push
in
jae
sub
xchg
jecxz
rcl
xchg
cmpsb
ret
jo
mov
es
lahf
mov
scas
or
jnp
pop
sbbb
jl
and
lods
pop
cmp
out
fs
cmc
cld
xor
out
ret
xchg
inc
enter
dec
pop
jne
jnp
call
fimuls
imul
mov
cmp
insl
jl
fldenv
or
scas
test
aaa
fstps
hlt
xor
das
xor
jae
aaa
jp
and
out
call
pop
pushf
and
daa
mov
out
jge
inc
aad
cmp
sbb
jmp
mov
mov
ss
sahf
imul
mov
cmp
fisttpl
mov
mov
cmp
ret
lods
sbb
in
jge
popf
aad
pop
jmp
rep
pop
cmp
add
inc
jg
imull
adc
jp
jg
pop
fsts
nop
pop
and
imul
js
add
ds
not
add
mov
pop
lock
pop
imul
pop
adc
in
sub
inc
jb
mov
pop
test
sub
jge
pusha
jns
jbe
inc
lock
push
xchg
pop
push
sahf
jecxz
je
imul
pop
jnp
jae
mov
aam
mov
xor
inc
push
outsb
lret
les
xchg
dec
bound
xlat
mov
mov
aam
push
cltd
test
xor
xchg
mov
out
cld
loop
dec
sti
cmp
push
jge
call
or
mov
xchg
add
push
mov
popa
and
shll
iret
jnp
adc
roll
pop
add
fdivr
test
into
push
jae
imulb
push
popl
cwtl
adc
mov
inc
jle
lods
mov
adc
cmpsb
xchg
mov
jno
mov
or
add
jl
jns
xchg
jbe
pusha
pop
popa
fsts
mov
push
push
xchg
leave
mov
fistl
pusha
adc
xchg
pop
cli
fbstp
and
mov
scas
jge
xchg
cmpsl
mov
repz
aas
mov
dec
arpl
shrl
adc
fisubl
shrb
jg
jg
int
imul
xchg
push
movsl
add
fbld
lret
adc
mov
dec
sub
sbb
adc
rol
dec
mov
fwait
call
test
pop
mov
mov
jg
xor
add
scas
call
mov
inc
mov
jecxz
sbb
cmp
xabort
pop
leave
xchg
mov
jg
out
mov
lock
int3
sub
xor
insl
add
jno
aam
push
mov
ret
xor
add
mov
jno
sbb
inc
dec
jbe
test
imul
xor
cltd
push
lds
mov
shr
cmp
in
and
les
jge
pop
mov
ja
fbld
mov
jae
inc
enter
cld
xor
iret
pushf
xchg
gs
imul
std
fistl
ret
in
dec
xchg
jo
mov
sar
push
xchg
lds
fcmovb
jge
out
dec
or
pop
stos
push
mov
imul
or
enter
pushf
sbbb
cmc
xchg
pushf
lock
scas
outsb
xlat
xorb
jns
out
push
jg
fmull
or
mov
out
mov
inc
fmull
enter
add
push
or
fists
rclb
fs
jbe
lahf
or
in
mov
sub
sbb
negb
outsl
int
or
shlb
ret
insl
inc
mov
les
pop
dec
arpl
mov
cmp
mov
xor
xor
lahf
scas
fadds
mov
or
or
enter
push
sub
sbb
jnp
push
out
xchg
mov
sbb
pop
sbb
mov
and
cli
movsl
mov
jmp
pop
xchg
int3
flds
add
in
aad
jo
inc
loop
dec
xchg
ret
push
or
xchg
pop
cmpsb
cli
push
xchg
leave
mov
add
jno
mul
pop
jle
cmp
bound
fcomi
and
filds
add
cmc
sub
int
daa
push
adc
pusha
mov
adc
and
mov
xor
adcl
jae
aas
mov
sbb
sub
sub
xor
inc
fwait
lret
fs
rcrb
jge
shll
testl
mov
inc
imul
scas
sbb
jne
test
sbb
add
dec
mov
and
icebp
mov
sbb
adc
xchg
stos
rcr
fidivrl
scas
ret
ret
iret
pop
sub
ret
pop
cwtl
mov
ljmp
pop
xchg
mov
and
xlat
xchg
icebp
jmp
pop
outsl
outsb
test
xor
jmp
sbb
int3
iret
pop
inc
xchg
jl
pop
mov
push
sahf
push
pop
mov
fsub
in
sbb
xchg
ljmp
xchg
inc
sbbb
push
rol
inc
sub
push
dec
adc
pop
mov
inc
inc
ss
jle
dec
push
into
sbb
adc
mov
out
aas
scas
sub
and
xchg
sarb
adc
lock
imul
jl
dec
push
rdtsc
test
cmpsb
insl
pop
add
jns
jns
mov
enter
jb
lods
clc
inc
cmp
mov
mov
lods
xlat
iret
pushf
data16
insl
pop
aas
int3
inc
out
jg
jle
cmc
lods
cltd
lock
add
pop
fdivrl
movsb
sti
stc
pusha
push
and
inc
outsb
sub
dec
pop
insb
or
pusha
adc
enter
mov
xor
inc
rcl
push
shr
mov
xchg
mov
mov
add
fnstsw
sub
mov
je
push
mov
cmpsl
xchg
shr
or
out
dec
xchg
xor
cmp
jae
or
stos
jae
pushl
add
cmp
outsl
paddusw
aad
adc
subl
pop
std
mov
cmp
push
int3
sbb
sub
sbb
mov
xlat
test
mov
mov
mov
add
push
aas
mov
push
mov
stos
dec
xchg
outsl
loop
in
mov
adc
shll
mov
gs
lcall
cmpsl
rol
mov
jb
xor
adc
arpl
pop
pop
pop
push
inc
sub
iret
and
shll
adc
lods
inc
mov
sti
pop
mov
xor
pop
nop
ss
movsb
je
push
mov
data16
hlt
mov
pop
cmp
arpl
hlt
xchg
pop
rcll
mov
sbb
push
cltd
leave
mov
icebp
mov
pop
cmp
and
mov
lds
jo
int
test
xor
out
fisubrl
jne
jl
out
test
jnp
sbb
mov
mov
pop
pop
lret
cmpxchg
imul
xor
add
aaa
rcrl
cmp
out
jg
sti
mov
shl
sub
push
push
movsb
sub
mov
test
fwait
xor
or
sub
pop
and
lea
mov
clc
daa
jo
sbb
shrb
aaa
xchg
into
push
test
loop
js
imul
aam
addl
xor
fcoms
lret
inc
pop
dec
out
jp
test
shl
fisttps
add
aam
into
aaa
pop
adc
mov
push
jp
push
lock
int
pop
sbbb
inc
mov
mov
out
sbb
xor
dec
addb
stos
inc
and
mov
add
push
jmp
test
addr16
jne
icebp
ja
mov
and
call
sbb
add
test
aad
addb
movsb
xchg
cs
mov
push
mov
cltd
xchg
xchg
or
aad
inc
stc
cmpsl
test
xchg
add
insl
jmp
dec
pop
lcall
cmp
cli
aad
hlt
cmc
testl
lret
sbb
jge
stc
or
jne
iret
xor
sarl
pop
inc
jb
push
mov
mov
imul
test
jnp
and
stc
dec
pop
mov
xor
shrl
ja
push
mov
mov
mov
enter
dec
in
or
fwait
iret
pop
adc
adc
cltd
sbb
inc
clc
sub
push
jecxz
scas
jle
in
cmc
dec
movsl
sbb
mov
sbb
cli
jno
dec
sbb
loopne
aaa
sub
sarb
push
imul
shrb
cmp
xchg
dec
sahf
xor
daa
cwtl
jnp
push
loopne
sub
push
ss
into
sub
ljmp
cli
std
inc
ret
dec
sbb
mov
dec
aam
jb
sbb
xlat
popl
cmp
cmp
mov
xchg
cmp
jnp
test
sahf
mov
dec
lret
lock
scas
lahf
outsb
pop
or
pop
jnp
jmp
dec
popl
pop
testw
negb
inc
mov
pop
loopne
std
cmp
pop
leave
sbb
sub
aad
inc
fwait
ljmp
push
mov
jno
ja
rorl
sub
cmp
adc
dec
call
mov
mov
and
jp
out
mov
xlat
rcrb
insl
adc
pop
lret
adc
and
or
adc
enter
call
pop
jg
lock
ret
mov
leave
pop
and
dec
jno
incl
pop
ss
aas
pushf
in
shll
shr
mov
stc
shlb
cmp
lcall
sti
jle
movb
mov
jb
lods
jmp
out
jno
test
jnp
push
xchg
pop
fldl
loop
lods
mov
mov
ljmp
nop
ret
mov
and
mov
jle
mov
sub
dec
or
loope
cmp
outsb
stos
jmp
leave
scas
shrl
push
mov
adc
enter
and
xor
setbe
ss
lock
data16
lcall
or
sbb
mov
sbb
fucomi
push
add
in
add
pop
dec
test
fistps
inc
adc
ret
pop
fsubs
cld
loopne
rcl
mov
push
inc
cmp
ret
sub
pop
dec
imul
adc
insl
aam
stc
jne
fdivs
enter
inc
mov
insl
xorl
jo
int3
fnsave
aas
inc
out
lea
add
in
xor
std
popa
testb
xor
into
aas
sub
cmpsb
ljmp
jmp
ljmp
push
or
loope
sub
push
cs
pusha
scas
lock
out
pop
ror
cmp
jp
xchg
ret
test
enter
xor
inc
cmc
jmp
incl
cmp
ret
scas
test
int
jge
pop
and
lods
rol
jp
or
sbb
push
mov
bound
call
or
icebp
push
lods
sahf
sarl
mov
inc
dec
test
cmc
sbb
subb
mov
stc
mov
mov
cmp
repnz
pop
fsubrs
jno
xor
mov
test
mov
or
mov
xchg
in
mov
mov
inc
pop
cmpl
sbb
rolb
addr16
mov
sub
out
mov
aaa
xchg
xchg
fwait
push
jl
outsb
pop
scas
dec
in
mov
daa
test
or
shlb
mov
adc
adc
outsl
arpl
push
ret
rol
sti
mov
xlat
inc
pop
jns
pop
and
stos
fs
pop
sub
loope
outsl
loop
mov
jge
negb
xchg
aad
push
punpckhwd
outsb
and
jg
or
xchg
xchg
cmp
addr16
jmp
mov
lahf
repnz
nop
in
call
fistps
cltd
dec
cmpsb
test
push
jo
push
and
push
addl
mov
mov
icebp
jno
inc
adc
pop
push
mov
stos
dec
cmp
push
push
ret
cwtl
gs
inc
pop
xchg
xchg
js
push
sub
adc
cmpsl
imul
jl
push
aas
in
xchg
mov
jmp
pop
dec
and
sbb
in
out
mov
test
inc
mov
in
loop
ja
add
mov
pushf
push
mov
rorl
subb
or
xchg
add
fcmove
pop
rcll
jecxz
cmpsl
lahf
sub
pop
out
mov
mov
sbb
sub
das
mov
sub
test
lret
mov
shl
mov
loopne,pt
lods
lds
loop
inc
xor
fmulp
adc
dec
hlt
out
imul
jecxz
movsb
mov
add
loope
push
fadds
shrb
ja
fsubs
fistl
and
mov
sbb
dec
mov
sbb
adc
or
mov
nop
xlat
clc
sbb
lods
xchg
sub
push
dec
data16
clc
mov
sbb
call
insb
xor
scas
push
mov
xchg
mov
xchg
push
into
je
lret
and
test
notl
clc
in
xor
sbb
add
and
test
add
stos
pop
nop
add
mov
xorb
dec
mov
xchg
inc
out
out
jle
icebp
fmuls
add
cs
aaa
mov
pop
cltd
outsl
int
int
mov
dec
mov
bnd
pop
orl
lods
aas
pop
jge
lcall
data16
rclb
insl
dec
das
cwtl
and
lret
jg
das
mov
ja
xchg
push
sub
in
movsl
test
lea
inc
push
mov
xor
push
inc
or
shll
inc
add
stc
movsl
fwait
sub
aas
push
push
pop
jmp
enter
mov
rcll
scas
mov
mov
lods
push
loop
ljmp
test
and
adc
out
xchg
test
xor
lock
dec
push
enter
lahf
xlat
repz
sbb
dec
movsb
cmp
fimull
lret
iret
hlt
inc
scas
cmp
das
cmp
sub
popf
out
or
js
xchg
inc
lock
lahf
inc
movl
sti
xor
mov
mov
mov
es
sti
pusha
leave
cmp
out
aas
jl
push
lret
or
adc
inc
cmp
adc
test
or
outsl
sub
in
lock
je
jle
icebp
movsl
cmp
and
push
pop
inc
mov
enter
mov
fsubrs
add
sbb
pop
jb
sarl
dec
loop
dec
push
cltd
xorb
push
movsl
sbb
and
rcrb
cmpsb
add
xchg
fnsave
mov
aaa
adc
push
push
inc
idiv
xchg
pop
mov
int
pop
xor
adc
dec
xlat
cmp
mov
imul
js
loop
mov
xor
fwait
add
pop
lea
inc
dec
pop
push
ja
mov
mov
lds
int3
ficoml
repnz
jbe
mov
clc
ljmp
dec
adcb
outsl
ficoms
xlat
cmp
dec
ss
xchg
lods
inc
and
enter
in
add
cmp
cmpsb
inc
shlb
les
inc
pop
movsl
lock
xchg
mov
das
addr16
mov
push
ret
xor
pop
enter
fisubrs
inc
lret
faddl
push
mov
push
and
in
cli
push
adc
movsb
lods
sub
in
in
fnstenv
jb
mov
or
inc
adc
loope
xor
jp
mov
jmp
ret
mov
cmp
rolb
inc
leave
in
lret
popa
rclb
adc
sub
sbb
dec
psubsb
test
cmp
out
je
int
and
popa
lods
adc
xorb
cmp
cmp
mov
sub
xor
les
cmp
sub
mov
add
mov
in
fsubrs
insl
mov
sbbb
sbb
lock
mov
insb
cmc
testl
bound
stos
mov
int3
or
xor
cwtl
cs
sahf
mov
pop
pop
jo
out
nop
pop
lahf
push
lds
ficomps
mov
loop
xchg
notl
sbb
push
push
xchg
out
lcall
dec
or
mov
fwait
jne
rcll
jg
sarb
sti
nop
ds
inc
xor
ret
add
pop
jmp
out
xlat
push
or
lock
push
pop
test
pop
pop
xor
xlat
jb
ret
les
icebp
repnz
data16
cmpsl
xchg
mov
pop
sbbb
das
out
adc
push
movsl
xchg
or
lods
daa
pop
jo
orb
mov
add
test
sub
inc
js
inc
adc
repz
je
aas
adc
or
faddl
mov
push
test
aaa
loopne
push
mov
mov
cmp
xor
shll
adc
out
cmp
mov
or
in
inc
cmp
movsbl
in
dec
adc
mov
cmpb
aam
pop
jp
pop
stos
popf
jb
movsb
sbb
add
jno
xchg
into
cltd
mov
test
mov
sub
test
sub
out
mov
mov
jno
add
dec
lock
or
icebp
fnsave
cmp
outsl
call
jle
sub
xchg
mov
mov
mov
popa
es
jo
insb
and
sbb
popf
insl
lock
daa
pop
fwait
gs
insl
pop
repz
sti
fadds
pusha
fstpt
dec
or
mov
clc
mov
jae
xor
xor
movsb
mov
ret
jge
inc
ficoms
cwtl
or
jle
outsb
jns
cltd
mov
sub
movsl
jl
push
enter
push
cld
ljmp
insb
jno
pop
js
jo
inc
das
ret
push
inc
sub
aas
mov
mov
lock
fwait
jl
lods
or
sbb
mov
jl
loop
cmovno
xor
mov
ja
dec
mov
sbb
xor
dec
test
adc
pop
jb
out
dec
sub
sbb
dec
xchg
xchg
aas
and
add
movsb
jge
in
fnstsw
adc
push
sub
loop
test
idivb
push
out
clc
adc
call
mov
aas
dec
xor
dec
mov
mov
in
cmp
push
mov
xlat
dec
fdivrs
xlat
clc
mov
int
int
ret
movsl
insl
popa
loop,pt
push
dec
in
mov
adc
sbb
movb
pop
inc
outsl
popf
sbb
xor
fs
jne
repz
pop
or
iret
mov
addl
mov
mov
jno
shl
shl
iret
sarb
cmp
dec
adc
popf
imul
mov
loopne
mov
adc
stos
fwait
jmp
out
fistpl
mov
xlat
stos
test
jg
int3
iret
lret
mov
jmp
movsb
mov
xor
adcl
xor
clc
push
insb
hlt
push
mov
pop
jmp
cmpsl
cwtl
push
fs
testb
stos
mov
mov
jnp
sbb
xchg
xchg
lret
cmpsl
pusha
cmp
mov
adc
inc
or
xchg
inc
sbb
ljmp
jmp
xchg
cmpsb
cmpb
int3
dec
arpl
sub
mov
cmp
push
out
aaa
or
arpl
mov
mov
mov
lret
xor
dec
in
jecxz
inc
sub
mov
xchg
iret
jne
nop
and
aam
or
test
or
xchg
shl
repz
in
scas
or
inc
or
mov
xchg
add
push
and
cmpsl
xlat
fsts
add
push
add
addr16
inc
cmp
fwait
dec
adc
mov
ret
loope
ds
out
or
in
ficompl
fsts
les
outsl
cld
repnz
shll
std
lds
add
ljmp
sarl
mov
and
test
out
mov
xchg
test
ja
push
in
jle
mov
pop
adcb
stos
bound
scas
mov
es
popa
pusha
sbb
scas
in
inc
fistpl
sub
pop
cmpsb
cmp
mov
push
aas
test
xchg
lret
xchg
sub
sbb
sbb
lods
sti
inc
fwait
lods
je
int
sub
xor
pop
stos
dec
bound
call
push
mov
cwtl
and
xor
pop
mov
and
in
ret
cmp
int3
mov
jnp
and
cmpsl
inc
lock
inc
or
push
popf
mov
push
lock
sbb
out
adc
cs
mov
xchg
jb
int3
fdivrl
dec
bound
fiaddl
jns
pop
xchg
das
bswap
jmp
test
push
adc
out
icebp
inc
stc
mov
rorl
or
xlat
xor
rorl
sbbl
pop
in
push
jg
xchg
jnp
std
enter
jae
leave
dec
mov
or
jp
fs
push
push
cmp
iret
mov
insb
idivl
loop
les
notb
in
in
push
or
mov
or
jo
fcoml
mov
inc
out
popf
and
std
addr16
mov
pop
fbstp
pop
cmp
or
jmp
pop
in
dec
fisubrs
sub
mov
aaa
rcr
bnd
nop
and
sbbb
mov
movsl
jle
jmp
and
dec
dec
in
rcrl
push
popf
gs
sbb
mov
mov
push
cmp
in
adc
mov
cli
movsb
push
sub
icebp
les
push
add
aaa
adc
mov
jbe
ret
cmp
sbb
decl
cld
ss
mov
jp
addr16
mov
icebp
dec
nop
sahf
int3
push
loope
jmp
je
xchg
xchg
imul
aad
lcall
sbb
adc
clc
std
lds
adc
push
std
lea
imul
cld
sub
gs
dec
cmp
loope
lcall
xor
push
jge
jno
dec
inc
jno
mov
xor
fnstsw
xor
mov
mov
push
add
inc
lock
xlat
mov
adc
mov
pushf
jecxz
sbb
push
repz
push
xchg
push
xchg
lret
movsl
les
insb
jp
loopne
pushw
outsb
cmpsb
scas
fdiv
lea
insl
ret
in
int
mov
fidivl
add
push
mov
rclb
inc
xchg
xor
ret
jp
lahf
xchg
and
outsb
pop
and
arpl
pop
jae
sarl
sbb
stos
xor
mov
rcll
lods
int3
mov
aaa
pushf
xchg
mov
mov
popa
mov
mov
lock
pop
pop
add
test
nop
xchg
cmp
gs
lods
add
and
inc
inc
andb
push
push
jg
push
movhps
add
inc
fbld
pop
addr16
into
and
daa
test
mov
out
xchg
ret
sub
dec
popf
add
and
hlt
inc
gs
push
test
jne
xchg
pop
or
dec
lods
dec
outsb
jp
and
sbb
test
cmp
push
sub
dec
mov
cmp
fiaddl
fisttpl
or
cmp
out
jecxz
pop
nop
xor
pop
test
test
mov
sub
xor
push
jmp
or
mov
jg
jns
or
das
lahf
inc
dec
mov
cmp
push
cmp
mov
adc
cwtl
imull
mov
mov
mov
adc
test
imul
lahf
mov
adc
cmp
xchg
popa
inc
mov
icebp
sub
bound
pop
stos
bound
pop
cmp
cmp
fisubrs
or
cs
test
mov
daa
sbbb
mov
cmc
pop
test
decl
dec
adc
pop
lret
aas
push
cwtl
pop
scas
mov
adc
jmp
inc
jnp
mov
adcl
jmp
and
pop
shll
and
sbb
pop
mov
fadd
aam
rep
cmp
outsl
xchg
xchg
sbb
cwtl
jne
jmp
jmp
fisttpll
mov
xor
sbb
fdecstp
push
in
cmp
jmp
test
pop
lcall
ja
inc
mov
jl
mov
xor
enter
pop
xor
fs
leave
orb
leave
ss
mov
mov
dec
movsl
inc
inc
addr16
jne
inc
jne
arpl
stc
jle
pop
es
or
lock
xchg
ret
shl
mov
pop
cs
xorb
lret
addr16
jg
stos
mov
cmp
nop
dec
push
pop
cmp
movsl
testb
testl
xor
jbe
xchg
add
ret
jo
dec
ret
push
lods
sub
mov
inc
mov
psadbw
xchg
mov
rcrl
add
data16
testb
cmp
mov
cmpb
repz
out
mov
fwait
arpl
aas
add
xchg
mov
mov
mov
inc
and
inc
loopne
xchg
dec
mov
rolb
fldenv
mov
hlt
mov
dec
call
enter
xor
mov
pop
sub
add
mov
pop
push
gs
fcmovnb
jecxz
mov
ja
mov
add
ss
enter
jge
outsb
dec
cmp
rcll
ja
pop
outsl
out
xchg
sbb
mov
scas
sub
lods
test
or
jge
dec
rcrl
adc
jl
pmuludq
or
aaa
rcrb
sti
jp
in
shll
dec
insl
xchg
leave
add
out
pop
shrl
test
lret
jae
movsb
je
add
cmpsb
jnp
pop
sub
mov
push
fimuls
test
imul
jmp
mov
movb
cmp
popf
shll
out
lds
cmc
jne
fistpll
ds
or
push
lods
or
sbb
shlb
scas
popf
aas
jo
add
adc
add
jg
das
daa
mov
inc
pushf
shlb
inc
xchg
lods
clc
cmp
das
jmp
pop
jbe
mov
int
adc
in
jp
ss
cmp
cmp
in
out
aam
in
shlb
jne
jo
push
cmc
insl
cld
insb
or
push
mov
cli
mov
mov
sbb
in
imul
xchg
jbe
sub
call
pushf
arpl
mov
pop
cmpsl
ret
flds
fiaddl
les
dec
push
fisubl
and
divl
or
push
dec
pop
fildl
and
scas
cmc
cmp
inc
push
in
and
bound
add
repnz
push
jo
or
addr16
mov
popl
sar
test
rcr
call
movzbl
xor
xor
fstp
out
call
cmpsl
mov
inc
jno
out
mov
pop
dec
xor
aas
insb
inc
sahf
pop
sarb
std
pushf
sbb
loop
inc
and
lcall
mov
sbb
push
imul
jecxz
xor
cld
incl
xorl
daa
leave
into
xchg
jmp
out
jns
repz
adc
pop
dec
and
push
pop
scas
add
cmp
pop
pop
ljmp
push
sahf
insb
testl
inc
mov
call
pop
inc
inc
outsb
fdivrp
pop
cmp
adc
testl
popl
pop
insl
stos
orb
mov
incb
outsb
out
shlb
adc
fcoml
pusha
testl
outsb
pushf
and
pop
es
and
pop
push
sub
cmp
push
repz
sti
push
push
push
sub
or
cmp
xlat
les
scas
and
jns
or
adc
adc
sarb
ss
pop
sbbl
mov
popf
lods
push
dec
lahf
mov
leave
dec
sub
mov
aas
lcall
dec
dec
lods
push
sub
sub
mov
mov
into
add
imul
mov
xchg
ret
jmp
mov
mov
xchg
int3
loopne
lock
xchg
in
in
shll
push
sbb
test
jg
dec
repnz
stos
jae
push
jae
xor
popa
add
lods
sub
add
push
in
push
mov
xor
or
jecxz
out
daa
cmc
and
int3
sahf
xor
push
or
test
outsl
sti
mov
jo
ljmp
inc
dec
mov
stos
inc
movsb
mov
mov
test
loopne
jb
shll
fstl
clc
add
fwait
lahf
jne
ja
hlt
cltd
mov
into
adc
jp
pop
imul
push
xchg
jp
push
ret
mov
cmpsl
pop
pmulhuw
add
sbb
mov
inc
popa
flds
mov
nop
jge
stc
mov
jne
lret
jl
outsb
cmp
or
into
outsl
xlat
sbb
js
mov
popf
faddl
cmpsb
fcmovnbe
fs
cwtl
and
mov
icebp
and
stc
push
int
jg
lahf
lock
enter
mov
sbb
cmp
aam
loope
mov
out
daa
pop
fwait
pop
inc
aaa
pop
and
loop
insb
mov
repz
adc
push
dec
jmp
outsl
repnz
push
mov
and
lods
mov
push
jle
jecxz
xor
or
pop
mov
or
mov
jae
fidivrs
add
lds
cltd
stos
or
jb
xchg
or
loope
fcmovnbe
fstps
push
test
dec
mov
arpl
lcall
jmp
adcl
sub
scas
adc
pushf
cli
dec
push
mull
mov
mov
shlb
and
pop
cld
imul
rorb
loop
outsb
out
scas
or
sub
movsb
std
jp
mov
cmp
subb
fwait
cltd
sbb
fimuls
movb
or
je
and
dec
fldt
ret
roll
int
jnp
cmp
mov
push
dec
mov
pop
sahf
jo,pt
sub
pop
and
add
mov
repz
notl
xlat
adc
xchg
repnz
in
test
jne
and
sub
xor
es
jb
shr
pop
into
cwtl
out
aas
dec
dec
jp
pop
int3
lods
push
push
inc
out
mov
jg
outsl
or
lds
lahf
mov
xor
jbe
xchg
mov
push
movsl
and
into
mov
roll
add
cmp
daa
inc
gs
stos
dec
div
mov
xchg
pop
dec
jno
popa
js
dec
pop
hlt
push
in
jecxz
cmc
sub
insb
inc
clc
xor
inc
jmp
ja
les
je
sbb
sbb
mov
or
sbb
fimuls
imul
movsb
inc
mov
jp
cltd
mov
lret
loope
lret
mulb
dec
inc
ror
mov
jmp
jo
lea
pop
imul
fiaddl
or
addl
sub
fwait
pop
lds
fstpl
mov
add
cmp
sub
cmp
xchg
push
movsl
jp
subb
ret
into
fnstcw
jl
in
inc
std
inc
cmpsl
or
sbb
sub
mov
mov
dec
cmp
and
aas
mov
aas
adc
mov
lcall
jecxz
adc
push
gs
pop
dec
xchg
pushf
mov
mov
das
outsl
shlb
lods
xchg
or
int
jecxz
pop
mulb
xchg
mov
into
or
cs
outsl
jnp
xchg
inc
inc
fs
dec
stc
out
mov
daa
add
ss
mov
push
adcl
cmp
je
or
out
js
repz
call
adc
lcall
push
cmc
popa
push
cs
push
lods
daa
cmp
xchg
mov
rclb
sub
out
les
test
cmc
pop
and
pop
dec
rorb
mulb
mov
mov
jmp
mov
mov
xor
sub
jo
hlt
test
out
sub
mov
rolb
sub
negb
push
adc
scas
mov
push
mov
sub
jmp
mov
xlat
out
pop
stc
ss
cmp
aad
call
sbb
shl
push
ja
xchg
xlat
test
mov
loopne
jnp,pn
mov
and
and
sub
lods
cld
and
data16
or
or
mov
mov
shrb
or
cltd
mov
inc
pop
xchg
mov
movsb
sbb
lock
and
pop
clc
lods
inc
movsb
fsub
aam
lods
repz
in
jp
stos
outsb
push
int
xor
or
clc
xchg
ret
dec
mov
and
faddl
jg
enter
lret
nop
lods
lea
mov
pop
enter
pop
shrl
hlt
in
into
pop
sub
and
push
fcmovne
sti
jge
sbb
loope
movsl
cmp
cmpsl
mov
cltd
aam
movsb
leave
in
dec
repnz
xor
jns
jb
repz
jb
xchg
mov
mov
cli
mov
pop
sub
sbb
push
jle
mov
dec
aas
jb
lret
add
adc
mov
mov
int3
xor
push
cld
mov
mov
xchg
test
xor
inc
pop
jge
jo
inc
repnz
jnp
mov
loop
stos
imul
fucomip
pop
or
mov
jge
xchg
cld
cmpsb
out
fsubs
push
cwtl
fstps
dec
inc
mov
fs
jbe
jo
into
sbb
adc
das
adc
pop
lcall
icebp
push
inc
pop
mov
adc
test
in
sub
jae
mov
mov
jae
sbb
push
popa
mov
fwait
nop
clc
data16
xchg
jo
cmp
int
add
fstl
cmp
xor
add
jle
shl
sbb
movsl
push
jno
int
aad
push
iret
xor
xor
scas
mov
mov
mov
data16
inc
sbbl
aaa
mov
es
push
jl
sub
jle
stos
popf
sub
in
cmpb
sti
jle
cltd
fisubs
repz
in
sti
mov
pop
in
or
leave
stos
ljmp
lds
sub
sub
cmp
mov
js
sbb
mov
adc
mov
add
iret
jl
in
sarl
sbb
jnp
xchg
ss
out
loope
xor
mov
bound
mov
insl
jecxz
push
fwait
ljmp
xor
shlb
add
data16
bnd
adc
mov
jnp
sub
xchg
cwtl
push
nop
loopne
xchg
mov
scas
clc
testb
push
mov
pop
sbb
sbb
outsb
jo
lcall
push
not
push
lahf
cmp
cwtl
sbb
aad
lcall
jo
fisubrs
jo
lcall
cli
pop
and
cmp
outsb
jns
mov
sbb
dec
adc
ss
fadds
cmp
outsl
dec
scas
mov
xor
jp
jle
mov
push
cmp
dec
xlat
arpl
inc
mov
adc
cmp
jge
xchg
dec
and
sarl
jmp
inc
adc
in
mov
fs
out
inc
inc
insl
xor
mov
test
dec
lods
std
xchg
mov
ja
movsb
loopne
mov
push
mov
sub
or
mov
fildll
sub
lret
xor
inc
gs
xor
jg
ret
ret
lock
sbb
icebp
pop
inc
dec
scas
xlat
loop
out
les
sti
pop
sbb
inc
aad
or
loopne
xchg
sahf
outsl
push
add
mov
cwtl
jg
cmp
xor
mov
pop
inc
iret
sbb
inc
mov
xchg
sub
mov
iret
pop
loopne
ret
sbb
cmp
adc
aas
adcb
stc
shl
pop
ljmp
loope
sbb
js
xchg
scas
aas
adc
aad
daa
pushf
inc
dec
ss
shll
pop
out
cmpsb
fdivs
testb
clc
sbbl
fidivrs
mov
adc
or
fnstsw
fucom
dec
inc
stc
outsb
push
jge
dec
imul
jno
fldl
into
movsl
loopne
icebp
mov
jg
pop
push
outsb
sbb
xor
loope
or
and
es
lahf
scas
add
hlt
sbb
loope
fisubl
psrld
xlat
int3
inc
push
xchg
outsb
mov
mov
fisubs
out
insb
out
imul
lea
jge
pop
lods
dec
push
add
pop
outsl
add
jns
lods
push
pop
ret
xor
inc
fs
lods
push
mov
xor
icebp
in
stos
push
out
add
pop
cmp
lock
int
rorb
lret
es
and
xor
shll
xor
xor
jge
in
fisubrl
adc
pop
lahf
in
sub
and
roll
bound
mov
int
mov
pop
push
xor
mov
or
ret
js
xchg
jecxz
jge
cltd
dec
dec
les
mov
std
push
rcll
arpl
dec
in
push
leave
xor
cmpsl
mov
aad
push
xchg
mov
sub
rcll
es
xchg
in
scas
fmuls
movsb
mov
xor
dec
dec
aaa
fs
pop
cmp
pop
xchg
repz
xchg
inc
dec
dec
loop
inc
ret
lods
jno
iret
mov
es
aas
mov
jns
enter
pop
sbb
mov
into
ja
fisubrs
xor
push
repnz
sub
sub
jo
cli
and
pop
inc
mov
add
shll
movsl
mov
xor
das
arpl
add
mov
shrl
adc
lahf
adc
cmpsl
loop
incl
add
pop
mov
mov
and
mov
inc
mov
mov
enter
jns
filds
adc
out
jmp
insb
test
xchg
xchg
outsb
out
lahf
test
jmp
ljmp
mov
cmc
add
and
xchg
sub
out
add
fists
jmp
ljmp
stos
cltd
std
gs
movsb
pop
dec
pop
or
pop
lret
push
jno
sti
xchg
sub
ficoms
pop
mov
xchg
sbb
xchg
sbb
and
xchg
stos
fcmovnb
mov
inc
or
repz
inc
mov
cmc
fcompl
and
lcall
rorl
xchg
pop
inc
push
lds
jg
inc
mov
lock
cmp
push
repz
dec
pop
or
mov
divb
icebp
jl
mov
and
and
add
pushf
lret
insb
cld
repz
sbb
les
cltd
mov
and
jmp
mov
xchg
sub
jg
and
je
jge
mov
loope
jge
int
dec
test
incb
test
rcl
dec
mov
dec
addr16
iret
pop
in
adc
jg
ret
xor
test
sub
stos
push
cmp
mov
arpl
add
subb
add
clc
and
sbb
insb
stos
js
fstl
xchg
imul
and
mov
lret
jge
jbe
cmc
pop
popf
outsb
sub
cwtl
arpl
inc
inc
cmp
mov
pop
dec
ss
push
sub
icebp
imull
mov
cwtl
std
jno
add
nop
aas
cld
mov
cwtl
cmp
cmovae
or
negb
out
xchg
orb
adcb
mov
pop
and
jo
sti
loope
cmp
fildll
mov
mov
xchg
hlt
mulb
cmp
jmp
push
insb
loope
pop
xor
js
call
push
js
dec
cmpb
pop
mov
lock
nop
jmp
or
dec
jo
shlb
jmp
pop
xor
jl
popa
clc
push
or
cmp
in
cld
mov
mov
pop
cs
cmp
aas
aam
mov
movsl
ret
adc
add
sub
loopne
add
dec
and
pop
in
stos
jp
mov
aas
add
pop
je
add
pop
popf
pop
mov
sbb
ss
pop
rolb
mov
xlat
pop
jp
adc
mov
jl
lock
cmpl
sbb
mov
lock
xchg
mull
adc
rcr
fwait
insl
dec
lods
mov
roll
mov
jle
mov
aad
push
imul
out
xor
mov
xlat
xor
ss
movsb
rclb
into
push
push
cwtl
sbb
xchg
ds
adcb
jne
lods
lret
fxch
bound
xor
mov
fcmovb
mov
imul
mov
jge
pop
lret
subb
jbe
stos
jbe
dec
dec
inc
inc
loope
add
leave
and
mov
int3
mulb
fstl
sbb
and
js
fnstcw
cmpsl
jo
dec
mov
and
jecxz
fwait
das
mov
pop
fcompl
dec
cli
test
rclb
leave
ds
mov
mov
jg
jecxz
fs
jb
adc
lock
mov
andb
cwtl
mov
dec
outsl
mov
icebp
lea
lods
ret
ja
es
or
adc
imul
pushf
pop
dec
daa
pop
sbb
inc
inc
jb
lret
lahf
arpl
cmp
in
xor
pop
pop
and
shr
dec
pop
sbb
pop
push
sub
mov
add
shlb
xor
mov
lea
xchg
in
mulb
pop
dec
pusha
cmp
out
push
fs
test
lret
in
mov
pop
xor
xchg
sbb
push
outsl
xlat
fldl
or
mov
adc
adc
popf
subl
pop
xchg
loope
ljmp
adcb
out
cli
mov
fldenv
mov
call
sub
fistpl
outsl
pushf
in
add
lea
lods
xor
xor
pop
inc
sub
cld
lds
add
cmp
rcrb
dec
je
lahf
jns
xor
jno
sti
cmp
pop
mov
pushf
push
pushf
movsl
push
cmp
lea
shr
les
inc
movq
outsl
clc
loopne
roll
leave
jo
cmp
inc
in
je
jae
fidivrs
test
pop
out
loop
sbbb
push
stc
inc
fnstenv
fimull
and
cltd
and
push
test
ds
ljmp
cmp
xchg
lds
mov
xor
xchg
pop
call
jl
insb
push
push
in
mov
rcl
sti
inc
inc
or
je
dec
mov
and
setg
fsubrl
movsb
xchg
out
xchg
lods
aaa
out
sbb
sub
mov
insb
je
je
cltd
inc
lea
push
adc
ds
dec
add
mov
push
popa
sub
pop
mov
shl
pop
flds
dec
dec
dec
mov
xlat
jle
cmp
aaa
push
sbb
pop
dec
jne
adcl
icebp
pop
mov
pop
ret
add
jb
int3
sahf
leave
lods
js
mov
mull
add
add
xchg
or
insb
push
xor
mov
dec
dec
lret
jge
mov
lock
orb
and
cs
sub
jle
fdivrs
leave
xor
stc
mov
sbb
pop
or
inc
dec
das
and
movaps
ret
sbb
pop
cmpsl
cmovo
jg
shl
jno
sub
jle
push
dec
fisubs
cmpl
in
and
mov
outsl
out
fdivs
jmp
insl
das
or
invd
in
je
inc
mov
mov
adc
fnstsw
aam
dec
sub
pop
sub
add
push
clc
pop
insb
test
clc
xor
loope
jo
mov
out
fdivrl
movsb
aas
xchg
pop
lock
in
lret
jb
jno
lods
pop
je
jne
loopne
cltd
out
je
xchg
push
push
xchg
sub
ret
loop
lcall
ja
jge
push
sub
jne
lcall
dec
repnz
std
cmp
fcmovne
sbb
mov
adc
or
sub
shlb
fiaddl
fwait
cmp
add
nop
push
ret
add
repnz
nop
cmp
mov
ds
aaa
dec
jne
mov
dec
loop
pop
sbb
js
or
inc
pop
js
jmp
jp
test
loopne
mov
and
xchg
jge
cmp
xchg
push
push
dec
in
jae
popl
icebp
jbe
movq
stos
inc
or
and
push
jp
add
daa
push
les
xchg
repnz
mov
sahf
push
push
jbe
sbbb
push
aad
insl
cwtl
fwait
jecxz
dec
mov
outsb
sub
loop
jns
lret
mov
cmpsb
stc
cmp
fstps
sbb
xorl
vaddpd
lret
and
addr16
data16
ret
test
mov
ds
sub
xchg
test
or
cs
cmpsl
inc
pop
test
adc
mov
scas
ror
mov
jecxz
sbb
leave
mulps
movsb
jp
pop
lret
das
or
push
std
sub
mov
add
sbb
jecxz
icebp
out
sub
std
leave
push
rorb
push
xchg
cmp
pop
out
in
xor
jo
sbb
lods
insb
push
mov
call
and
jmp
inc
or
push
hlt
sti
mov
push
cmpsl
outsl
out
dec
add
adc
adc
xor
popa
jp
nop
in
arpl
test
ss
xorl
std
push
cmpsb
fisttpll
loopne
inc
lcall
adc
fs
repnz
push
dec
stos
push
clc
cmpsb
sub
pop
mov
sub
sti
aas
add
adc
mov
cmp
mov
mov
and
and
outsb
fcomps
or
loop
push
nop
mov
mov
inc
add
mov
test
sbb
or
ss
mov
icebp
fcmovnbe
push
mov
cmp
aas
pop
repnz
jp
push
inc
jg
enter
pop
or
xchg
mov
push
inc
filds
cmp
xchg
inc
xor
dec
jne
and
xchg
ficoml
imul
jle
adc
std
lcall
cli
bswap
ficoms
xor
pop
loopne
repnz
mov
gs
test
sbbb
xor
clc
out
push
lock
and
sub
and
int3
mov
push
push
sub
mov
mov
ja
and
repz
cld
jl
movsb
mov
mov
push
dec
pop
int3
mov
sbb
and
mov
pop
fiaddl
adc
ss
cwtl
adc
cmp
repz
popf
repz
mov
and
inc
es
mov
pop
lret
sarl
mov
mov
or
mov
sbb
repnz
daa
daa
inc
sbb
xlat
mov
arpl
pusha
es
mov
inc
jmpw
jne
or
mov
or
mov
lock
cmp
cwtl
and
inc
xor
cmc
jb
lock
lcall
adc
loop
js
shl
jae
adc
jg
outsb
mov
stc
cmp
and
mov
add
and
dec
add
sbb
add
pop
cmp
popf
out
inc
stos
pop
add
pop
aad
int3
pop
rcll
into
cmpl
popf
lods
sbb
inc
movsb
pop
int
int
push
mov
fabs
mov
xchg
cwtl
sti
ret
or
mov
psubsw
push
arpl
in
movsb
xor
iret
mov
andb
gs
dec
pop
adc
aad
int3
lahf
sbb
repz
sub
inc
jmp
add
loope
mov
dec
xor
idivb
lret
dec
clc
pop
jo
ja
mov
jns
pop
and
mov
mov
in
sahf
dec
flds
ret
in
adc
adc
clc
out
ret
mov
push
lods
es
cld
pop
icebp
inc
pshufw
mov
mov
cmp
cmp
cmp
scas
mov
mov
or
scas
popf
mov
mov
scas
test
pop
addb
dec
mov
jns
imul
dec
repz
sub
xchg
xchg
mov
lret
es
xchg
addr16
and
rcr
add
mov
mov
test
and
mov
jg
test
jbe
add
icebp
inc
frstor
xor
stos
fstpt
push
mov
mov
jge
cwtl
int3
movsl
sub
inc
stos
ljmp
int3
icebp
pop
fnstenv
jle
pop
in
sub
aad
mov
fsubs
sbb
pop
xor
aad
dec
stos
shll
ret
aam
adc
movsl
jne
xchg
movsb
in
mov
icebp
orl
push
stos
aad
rcl
fidivrl
fistpll
pop
stc
and
frstor
mov
jmp
outsl
fisttpl
test
ficomps
xchg
xchg
rcrl
fs
dec
dec
cmc
jbe
push
jo
out
jp
xchg
cmp
and
mov
xor
jmp
sub
and
push
ret
jecxz
popa
fnsave
pop
mov
mov
pusha
leave
jl
rorl
fmul
mov
jb
ret
jne
xchg
stos
inc
ret
jne
jge
insb
pop
jge
fwait
xor
pushf
sbb
cwtl
xchg
mov
clc
jb
or
iret
ss
popa
arpl
repz
push
mov
stos
mov
pop
push
cmpsb
xor
imul
adc
shl
test
jns
adc
adcb
xchg
push
pop
loopne
jnp
cmpl
inc
adc
cmpl
rorl
pop
jl
popf
enter
jns
popa
dec
cmc
sbb
add
outsb
jg
mov
hlt
ss
jb
mov
test
loopne
out
pop
dec
dec
mov
int3
fdivr
push
and
pushf
and
push
jns
sub
push
xchg
das
cmc
cwtl
jp
dec
popa
lods
fwait
imul
xchg
mov
jne
pushf
orb
aad
ficoms
aad
into
pop
pop
aas
xchg
mov
pop
dec
inc
les
daa
int
lret
lret
fwait
xchg
divb
sti
or
xor
fnstsw
cmpsl
mov
add
or
and
jp
mov
push
xchg
mov
imull
push
popa
sbb
adc
jne
push
icebp
loopne
daa
xor
mov
jb
rolb
pop
mov
mov
hlt
push
movsb
push
and
sub
jecxz
cmp
xchg
mov
jl
popl
mov
js
cmp
int3
push
mov
lock
lods
mov
int3
nop
pop
sub
sbb
add
mov
daa
hlt
fcos
imul
lahf
mov
or
sbb
and
jge
xor
out
jns
das
addr16
mov
test
ja
jmp
icebp
pop
int
js
int3
out
mov
xor
or
movsl
mov
mov
push
push
jmp
mov
push
daa
push
mov
jmp
add
ret
ja
xchg
cs
sahf
add
hlt
cli
test
lcall
inc
test
test
dec
data16
mov
push
and
or
aas
mov
fidivl
mov
stos
pop
ror
and
outsb
dec
and
or
jb
scas
aam
xor
in
mov
popa
insb
rolb
push
pushf
je
add
or
jb
and
in
mov
jle
mov
ljmp
jb
fwait
push
daa
add
das
cld
enter
ljmp
xchg
xor
ss
out
and
inc
rcrl
lods
repz
pop
sbb
int
mov
popf
xchg
scas
out
sub
dec
mov
stos
or
mov
xor
je
jne
cmp
and
xor
xchg
in
stc
arpl
xbegin
clc
decl
outsb
icebp
insl
dec
iret
imul
mov
scas
cmp
lea
mov
das
scas
sub
mov
js
mov
and
mov
sbbl
data16
fcmovne
and
sub
inc
in
ret
xchg
mov
xor
addr16
xor
ja
fstps
and
mov
mov
dec
clc
lock
fwait
xchg
lods
add
je
push
cmpsl
ss
dec
add
mov
ljmp
cmpsb
loopne
leave
repnz
incl
es
xchg
mov
inc
inc
test
cmp
cmc
and
dec
ja
cltd
stc
in
mov
mov
movsb
jmp
ja
sub
into
loop
jecxz
stos
adc
rorb
sbb
lretw
mov
aas
test
jg
dec
push
movsb
add
sub
sub
std
xchg
shr
dec
data16
fyl2xp1
pop
dec
mov
sti
imul
dec
aad
test
push
push
inc
repnz
inc
outsb
insl
lret
sub
or
cmp
insl
xchg
add
mov
dec
cld
in
xor
rcrb
xchg
adc
jle
cli
and
pop
push
lock
xor
out
addl
xor
les
mov
stc
rorl
pop
fildl
lret
bswap
seto
xor
std
adc
mov
daa
push
mov
rsm
ljmp
mov
inc
inc
xor
sar
fnsave
bound
dec
jo
mov
push
mov
fldt
sub
add
lret
fidivs
jo
outsl
cmpsl
and
and
pop
jg
mov
jecxz
aaa
jns
pop
ss
shrl
aam
jecxz
test
das
cmc
fs
stc
mov
push
scas
test
sbb
in
pop
out
lahf
and
mov
out
jge
add
push
cs
pusha
lds
mov
popa
mov
das
dec
cmp
mov
fwait
outsl
daa
push
aad
stos
js
xchg
or
mov
rcl
scas
or
pop
jp
imul
arpl
push
andb
insl
mov
ret
sub
movsl
fldl
imul
cld
jecxz
shl
add
sbb
cmp
pusha
test
mov
test
push
divl
ret
lret
lret
in
das
inc
and
mov
mov
repnz
xchg
jl
mov
lods
xchg
pusha
cmpsl
push
jns
mov
inc
dec
clc
ret
mov
arpl
or
in
push
mov
push
mov
mov
push
xchg
ret
rcl
jg
test
mov
js
pusha
or
ficoml
pop
xlat
dec
flds
and
dec
dec
loopne
jno
lret
pop
mov
add
push
sub
xor
pop
push
test
cwtl
push
sub
push
and
andb
jmp
orb
jecxz
push
enter
or
outsb
shl
mov
inc
mov
sbb
mov
mov
cmpxchg
sub
bound
pop
mov
sbb
loope
jl
aas
xchg
xor
inc
cmpsl
les
cld
sbb
stc
add
pop
daa
jno
cli
mov
and
xor
xor
adc
push
mov
out
aaa
lret
js
addl
test
and
pop
push
ss
mov
out
movsb
in
push
mov
sub
nop
mov
mov
lods
dec
cld
sbb
daa
jmp
xlat
xor
mov
insb
shrb
pusha
sbb
es
sbb
xchg
jo
fwait
xchg
mov
jle
mov
roll
mov
xchg
test
inc
jae
dec
imul
pop
mov
mov
sarl
stc
out
xchg
pop
mov
inc
mov
test
or
jecxz
insl
test
incb
loopne
sahf
pop
movsb
mov
pushl
xchg
fidivl
sub
xor
andl
and
xchg
shrl
lds
xchg
shl
push
sub
xor
rorb
mov
sub
jbe
cmp
out
lret
fwait
pop
sahf
jecxz
push
inc
xchg
mov
sub
ret
and
rol
insb
push
lcall
cs
sbb
adc
leave
mov
outsl
xor
mov
cmp
inc
clc
mov
xchg
adc
lea
inc
jmp
lds
pushf
xor
addr16
subb
jle
shr
in
xchg
cmp
jno
push
fstpl
fisubrl
dec
out
push
adc
mov
pop
cmpb
cmp
sbb
outsl
adc
divl
lahf
xor
je
adc
outsl
cmp
sub
dec
xchg
pop
xchg
or
inc
mov
xor
push
mov
out
ja
add
cltd
push
aaa
loop
test
push
shlb
scas
dec
xchg
inc
fucompp
nop
jnp
nop
clc
sub
imul
mov
loope
adc
mov
push
or
lea
dec
dec
push
sbb
mov
inc
and
mov
jle
dec
sarb
mov
shll
cld
sbb
sub
or
push
sahf
xor
xchg
inc
or
jg
push
pusha
fadd
dec
out
push
mov
jb
out
mov
cmp
adc
or
addr16
pop
out
shl
mov
push
mov
push
mov
jo
pop
loope
repz
stos
mov
cmp
inc
cltd
push
outsl
gs
or
lcall
or
je
and
fwait
lcall
push
fdiv
xor
or
jae
int3
inc
cmp
push
jb
and
std
sub
mov
sub
mov
and
add
cmp
subl
cmc
mov
xchg
jmp
push
xor
mov
mov
outsb
fstpt
rcl
cmp
in
and
mov
fimull
mov
inc
push
ffree
dec
imul
sbb
or
pop
pop
push
and
mov
mov
jmp
in
sbb
add
push
mov
std
or
fldln2
pop
mov
xchg
loope
xor
or
mov
imul
jns
les
mov
in
sahf
jb
sub
xchg
cmpsb
xchg
lea
iret
pop
or
xor
jbe
fbld
cmp
or
sbb
or
out
sbb
sub
xor
xchg
and
adc
inc
mov
imul
icebp
jp
xchg
jb
mov
pop
mov
scas
mov
icebp
xchg
nop
popf
pop
pop
jg
in
ret
out
rcrb
lcall
jecxz
ss
jecxz
out
fiaddl
fsub
rorl
pop
mov
pop
retw
push
sub
int
cltd
xor
xor
mov
data16
pop
jns
ss
shrl
mov
sbb
std
dec
xchg
lret
cmpsb
add
adc
insb
insl
push
emms
cmc
or
mov
test
pop
jne
pushf
pop
dec
and
cwtl
xor
imul
jl
cmp
sbb
sbb
outsb
lcall
lds
or
call
mov
test
and
frstor
into
jae
in
inc
dec
sti
cmpb
cmp
mov
fcmovbe
dec
inc
ds
pusha
jl
std
and
dec
push
cmpsb
insl
push
add
cmp
jae
jg
inc
or
xchg
ret
mov
hlt
mov
xchg
popf
add
inc
jge
mov
popl
mov
aas
sbbb
ror
dec
repnz
shl
inc
jnp
xchg
fmul
xor
push
adc
clc
loop
stos
inc
loop
add
xor
adcb
int3
push
outsb
inc
mov
je
jb
idiv
push
aam
xchg
test
imull
adc
js
loope
jne
pop
int
xor
enter
adc
fisubrs
mov
imul
inc
mulb
xchg
mov
ret
aam
pop
push
mov
cmp
sbb
sub
ret
ljmp
aam
mov
mov
sbb
xor
xchg
stc
push
aas
xchg
and
or
mov
dec
sbbb
adcl
xor
push
inc
mov
add
push
mov
push
movsl
xchg
inc
in
mov
pop
and
sarl
lret
rcrb
push
mov
aaa
orl
xor
iret
mov
cmp
cmpsb
add
pop
int
jnp
fists
mov
lret
ss
push
xor
push
mov
hlt
mov
cmp
mov
dec
push
shll
fwait
inc
mov
add
lds
cs
and
adc
adc
push
dec
xor
xchg
cltd
in
call
pop
pop
adc
xchg
call
dec
mov
xchg
imul
or
outsb
call
mov
fs
xchg
xor
cmp
dec
push
xchg
push
xor
psubd
in
mov
xor
mov
pop
mov
mov
jecxz
mov
sbb
subb
sarb
adc
sbb
cs
push
dec
into
xorl
xchg
stos
sub
jb
pusha
lock
and
jmp
mov
inc
inc
ret
add
test
insb
clc
jmp
cmp
jmp
lahf
enter
std
dec
xor
mov
inc
xor
daa
insl
fsincos
jns
xchg
mov
ds
cmp
inc
pop
fistpl
push
ljmp
mov
pop
std
dec
and
lahf
in
sub
adc
jmp
xor
xor
push
and
push
dec
movsl
mov
cmp
xor
enter
mov
inc
jne
shrl
mov
adc
mov
mov
dec
add
xchg
mov
inc
sti
pop
mov
mov
ljmp
mov
cld
adc
dec
push
mov
fstps
push
sbb
int3
mov
sbb
mov
xchg
lods
sbb
add
mov
call
ds
sti
mov
cmpl
imul
xor
loop
in
movsb
push
inc
xor
lret
inc
pop
fnstsw
icebp
fistpll
push
enter
fisubrl
mov
movsl
pop
or
mov
sahf
push
pusha
lret
leave
adc
aaa
int
mov
scas
sbb
sub
mov
sahf
and
dec
mov
add
sbbl
sub
ret
push
test
test
imul
jno
xchg
cli
popa
lret
dec
jle
addr16
mov
mov
out
push
repnz
sbb
cmp
xchg
inc
sbb
out
xor
inc
adc
pop
add
inc
mov
pop
and
mov
cmpsl
sbb
idivl
or
mov
fwait
iret
mov
mov
movsl
jno
mov
out
mov
sahf
sub
rcll
dec
call
mov
push
and
ja
mov
out
xor
stos
lods
inc
fbstp
and
in
scas
cld
mov
cmp
aaa
imul
imul
inc
cmp
fimull
test
nop
out
pop
inc
stc
mov
bound
stos
pop
mov
lea
xchg
pop
and
mov
mov
jnp
rcrl
stos
xchg
add
cmpsb
mov
inc
push
icebp
test
in
add
pop
jo
negb
ja
dec
sbb
daa
add
ret
icebp
lcall
jl
das
call
inc
cmpsl
cmp
mov
dec
enter
clc
rolb
into
pop
lcall
pop
in
std
iret
or
bound
or
mov
sub
mov
das
push
mov
into
ds
lds
insb
hlt
cmpb
xor
dec
mov
add
push
stos
push
add
aaa
lret
leave
dec
adc
push
sub
inc
inc
add
or
ds
in
jo
jae
inc
in
push
jp
daa
test
inc
cltd
shll
inc
cltd
repz
mov
fwait
add
cmpsb
push
jle
pushf
xchg
mov
stc
aas
or
inc
dec
pop
hlt
fbld
lods
lods
sarb
push
adc
lea
popf
jns
es
inc
push
sub
push
es
addr16
push
in
stc
outsl
pop
lods
rcrl
push
std
adc
in
and
stos
mov
adc
pop
add
mov
xchg
popf
mov
mov
adc
inc
jmp
cmp
xor
mov
mov
dec
mov
mov
push
ret
add
aad
lret
mov
and
int
std
rol
bound
iret
or
jecxz
and
popf
cld
mov
dec
mov
lds
pop
int
dec
mov
ds
xor
int
xchg
xor
leave
pusha
xchg
pop
jmp
sub
mov
cli
das
testb
and
jp
jbe
add
mov
das
lret
pusha
rol
push
clc
push
mov
fildll
pop
dec
stc
push
jb
xor
fst
mov
dec
xchg
outsb
imul
aas
mov
pop
sub
push
jmp
sahf
mov
adc
inc
cmp
mov
dec
adc
addr16
pusha
jmp
ss
pop
je
inc
add
loop
sti
mov
out
aam
dec
rorb
jmp
dec
repnz
pop
test
jle
or
mov
lret
sub
sub
pop
xlat
ret
mov
test
and
es
dec
add
jbe
addr16
int3
ja
or
pushf
inc
jge
mov
pusha
lock
ja
sti
xor
adc
pop
movsb
addr16
adc
adc
in
adc
clc
pusha
adc
and
cmp
cmp
xchg
test
or
pop
mov
adc
out
sbb
mov
pusha
rclb
sub
mov
das
xchg
mov
pop
cltd
adc
jns
lret
and
mov
pop
dec
push
cmp
add
add
fidivrs
mov
fbld
imul
sar
push
jo
cmpb
test
mov
push
addr16
jl
scas
adc
pop
fcmovu
push
push
subb
mov
and
xchg
pop
dec
imul
int
mov
ret
push
push
add
addr16
pop
in
cltd
repz
dec
jne
mov
fdivrl
repnz
adc
ret
push
mov
std
in
stc
bound
xor
ja
and
lcall
inc
loop
dec
xlat
testl
daa
outsb
mov
mov
push
lods
sub
arpl
fwait
xchg
cmp
add
fcoml
xchg
lods
or
sbb
cmp
mov
xchg
jl
test
repz
out
mov
inc
out
mov
lock
shll
mov
xor
movhlps
loope
stos
rcl
xchg
mov
daa
cmpsb
test
xchg
dec
xor
lea
cmpsl
rorb
stos
fadds
jle
jl
mov
xchg
cmpsl
bound
fdivrl
pop
rcrb
in
sub
sbb
lea
mov
inc
fstsw
fildll
flds
cld
pop
int
and
movsl
push
mov
jns
pop
call
cmp
out
mov
ret
inc
mov
inc
aam
or
xchg
enter
aas
imul
ror
in
scas
in
sbb
clc
and
mov
fdivr
pop
mov
lahf
loop
xchg
dec
and
push
insl
dec
cmpsl
mov
pop
adc
and
sbb
and
imulb
mov
add
js
scas
aaa
aam
mov
pop
das
xor
sbbb
loop
nop
pop
sbb
faddp
pop
iret
pop
inc
adc
aad
jp
pop
xlat
mov
jle,pn
loopne
popa
js
sub
jno
mov
or
es
bound
hlt
loopne
mov
add
jmp
add
lock
mov
sbb
cmp
or
daa
stos
into
ds
jecxz
jno
push
mov
into
push
sub
adc
mov
pop
pushf
xor
mov
pushf
es
scas
adc
leave
dec
das
hlt
dec
jae
popf
inc
mov
jae
js
adc
out
mov
xlat
cmp
push
sub
mov
dec
arpl
aas
adc
ljmp
das
insl
mov
cld
or
gs
mov
fnstsw
inc
maxps
mov
jb
data16
outsb
add
xchg
aas
int
xchg
test
bswap
insb
cltd
imul
addl
les
xor
xor
fidivl
jl
or
jo
ss
jb
in
inc
repz
dec
out
nop
inc
cmp
ret
jl
stos
ss
pushl
je
test
lods
jle
inc
xchg
jg
addl
in
les
int3
cmc
mov
lahf
xchg
fcoml
outsl
sbb
mov
in
mov
fsubrs
pop
xor
mov
repnz
imul
les
int3
jle
mov
xchg
mov
cld
nop
stos
pop
sbb
test
mov
in
or
dec
test
outsb
inc
xorl
roll
into
inc
je
mov
mov
add
push
mov
xor
pop
push
xchg
push
dec
fsubrs
add
xchg
dec
jns
mov
xchg
xor
xor
out
sbb
mov
cmp
push
and
push
push
outsb
lods
and
mov
push
and
sbb
stos
mov
insb
outsl
movsb
in
pop
mov
pusha
pop
add
mov
or
aaa
imul
mov
int3
adc
jb
decl
in
inc
aas
movsl
das
push
and
jno
ss
outsb
xchg
inc
stos
aaa
jmp
jle
lods
dec
mov
nop
jae
loopne
jl
add
test
and
mov
ror
mov
arpl
lcall
test
and
mov
or
xor
mov
xor
iret
push
and
ffree
dec
xorl
shrb
xor
jmp
jae
jmp
bound
pop
jbe
ljmp
das
or
shll
in
xor
fisttpl
push
pop
push
mov
adc
shrl
add
sub
inc
jp
sub
cmp
enter
and
leave
icebp
mov
push
xchg
xchg
push
mov
scas
cmpsl
repz
daa
je
fstps
cmp
adc
pop
add
out
dec
gs
sub
cmp
push
nop
xor
fisttpll
in
dec
mov
xchg
push
sub
pop
cwtl
xchg
ds
loopne
sbb
jnp
loope
outsb
lods
daa
out
bound
sub
push
mov
iret
sbb
sbb
push
add
shll
mov
cmp
mov
out
hlt
adc
cltd
jbe
pop
adc
jnp
dec
popl
jmp
jmp
fcompl
fnstsw
nop
outsl
cmp
jmp
inc
mov
ret
jg
xor
mov
jae
out
and
shlb
mov
or
out
pop
mov
pop
idivl
movsl
std
leave
adc
mov
shl
pop
adcl
push
js
jae
sbb
pop
nop
mov
or
scas
cld
pushf
test
ljmp
nop
mov
sbb
xor
pop
mov
pushf
or
xlat
jbe
inc
pop
mov
cmpsl
xor
dec
fsub
icebp
shrb
les
sbb
jg
adcb
imul
test
cmp
pop
jmp
and
mov
inc
cmp
inc
xchg
loope
jns
sub
lcall
loop
inc
push
dec
out
ljmp
in
loopne,pn
cmp
jmp
xorl
pop
test
push
push
rorb
test
leave
inc
sbb
jp
cmp
add
push
and
insb
mov
mov
in
pop
adc
loopne
pop
mov
xchg
iret
into
daa
xor
pop
subl
inc
js
inc
sub
roll
or
jo
add
mov
repz
xor
mov
dec
pop
cli
das
dec
scas
repz
lahf
je
fwait
jle
adc
cmp
push
mov
packuswb
and
cs
in
loop
sub
cs
mov
push
mov
push
fildll
jbe
and
jbe
subl
test
pushf
fcmovne
aad
jno
shlb
dec
push
inc
sbb
xchg
je
std
lcall
mov
pop
enter
daa
into
push
popa
fidivl
jnp
push
out
sbb
fidivl
lret
fsubs
in
xchg
dec
cmc
ficompl
sub
mov
push
ret
dec
cli
and
inc
aaa
mov
pop
pusha
inc
mov
push
pop
test
fsts
sub
or
sbb
or
inc
inc
add
push
scas
push
stos
scas
stos
imul
xor
ret
push
fisttpl
in
movsb
arpl
das
sbb
cli
mull
sahf
imul
aaa
in
jecxz
loope
pop
fidivrl
int
repz
inc
push
sar
popf
push
dec
dec
das
pop
mov
stos
ret
das
sbbb
mov
fdiv
repnz
and
fs
mov
shlb
sub
loope
pop
inc
xor
add
sar
cmp
mov
mov
xor
adcl
pop
or
mov
cs
aaa
cmp
inc
cmc
ss
lret
mov
ds
xchg
fisttps
into
pop
stos
and
popa
repnz
push
cltd
xor
testl
mov
pusha
adc
gs
and
pop
push
mov
out
jo
lods
mov
out
jecxz
enter
aaa
into
hlt
sub
xchg
xchg
data16
sbb
and
push
cmp
mov
mov
adc
mov
repnz
jl
jbe
rol
scas
mov
pop
les
cmp
icebp
out
mov
rorb
leave
cmp
shrb
dec
adc
rorl
cld
mov
pop
in
mov
jmp
and
test
jno
inc
or
jl
in
loopne
jp
mov
inc
adc
xor
xor
test
ja
sbb
fs
aas
arpl
stos
fistps
push
scas
cmc
std
lret
test
cmp
out
sbb
pop
popa
xchg
pop
dec
fldl
stos
lock
leave
push
jle
int
mov
cmpsl
adc
jae
jge
jo
cmpsb
mov
xor
out
clc
shll
ja
lods
js
lock
push
std
xchg
rol
inc
fsubrl
add
mov
push
sub
push
hlt
xor
gs
sub
xor
cmp
lahf
je
jne
test
push
pop
shrl
or
inc
dec
xor
push
pop
cld
mov
dec
dec
ja
ja
aas
jecxz
lret
inc
jmp
or
mov
popa
mov
sub
mov
xchg
pushf
mov
or
jbe
mov
lds
and
fdiv
lods
pop
mov
inc
push
dec
mov
sti
adc
in
adc
dec
lods
xchg
pop
test
das
shl
shll
cmc
scas
jnp
xor
orl
cli
test
xor
ja
fwait
imulb
cmpsb
add
lret
mov
mov
mov
add
or
cli
js
scas
out
mov
xor
xchg
stos
es
sub
dec
lods
jmp
sbb
int
mov
and
ror
mov
lock
xchg
push
scas
push
add
cmp
mov
shrl
int
or
or
andb
add
repnz
shl
test
movsb
outsl
add
push
call
lret
aas
jae
scas
xchg
sti
jmp
push
adc
push
mov
lods
repz
hlt
in
sar
xor
or
lds
lds
lock
dec
sub
ss
cli
sahf
push
inc
daa
add
inc
ljmp
xlat
mov
jbe
shl
rorb
xchg
sub
aam
pop
or
cmp
adcl
push
lcall
fidivs
aas
add
add
mov
and
lods
mov
out
in
mov
xor
sbb
scas
push
inc
cmc
ret
inc
push
xchg
nop
mov
lods
jmp
or
fimuls
pushf
andl
mov
nopl
fdivs
sbb
out
dec
stos
or
mov
leave
pop
mov
inc
leave
add
in
ret
mull
hlt
insb
lahf
sbb
test
rcrl
popf
rcrb
inc
push
insl
xor
mov
out
adc
outsl
ds
sti
mov
xchg
cmp
mov
push
adc
scas
cmp
dec
mov
imul
cltd
scas
jae
fnstsw
mov
adc
rclb
roll
add
or
cld
dec
shrl
cmp
mov
jo
out
inc
fldcw
and
push
push
sbb
dec
aas
icebp
nop
in
mov
pop
test
neg
and
mov
or
jo
xorl
jg
and
lods
insl
mov
push
mov
xchg
je
call
or
xor
aad
mov
dec
stc
adc
testl
jb,pt
xor
dec
mov
lods
cmp
out
push
mov
data16
mov
ljmp
hlt
cmp
out
and
jecxz
int
mov
loop
cmc
cltd
scas
or
lcall
inc
frstor
cld
pusha
js
cmp
fldcw
seta
sahf
stos
cmp
mov
test
shrb
movsl
xlat
lods
mov
jg
adc
rclb
push
xchg
das
pusha
fidivs
and
out
mov
call
inc
mov
pop
push
loope
mov
shrl
outsb
ss
push
shlb
pop
in
cmp
cwtl
inc
mov
mov
mov
inc
xchg
mov
mov
push
xchg
jge
stos
mov
mov
leave
ss
jno
inc
adc
es
dec
mov
ret
add
rclb
or
add
loop
cmp
lret
mov
sbb
sub
cmpsl
cmp
je
mov
xor
push
inc
mov
adc
in
adcb
fimuls
push
mov
lods
cmpsl
sbb
mov
jle
mov
daa
sbb
ret
jmp
stos
xchg
push
and
fidivrs
sub
mov
out
cmp
jp
les
sbb
cmpl
popa
sbb
mov
or
jo
scas
aaa
jmp
and
in
jb
arpl
and
jl
dec
pop
test
inc
adc
inc
shll
test
stos
mov
ret
jns
bound
xor
push
jbe
shlb
decl
sbb
xchg
jo
xor
push
scas
cmp
adc
cwtl
sbb
nop
outsb
push
cmp
cmp
pop
jb
divb
xor
pushf
daa
out
mov
add
loopne
stos
add
fsubrl
cmp
and
sub
or
nop
loopne
adc
inc
fs
lods
out
hlt
cld
xor
or
dec
mov
or
jge
repz
and
push
into
ret
cmp
sti
js
ror
or
mov
mov
sahf
outsb
das
aad
loop
enter
call
aas
int
xor
leave
test
add
bound
ja
imul
data16
cmpb
cli
stc
in
ss
lahf
jle
sbb
repz
or
fs
push
pop
lahf
fisttpl
inc
inc
aad
jl
xor
or
mov
cld
and
pop
mov
pop
adc
push
mov
leave
shrl
shrl
cmp
stos
and
sub
sahf
add
mov
outsl
arpl
cltd
mov
loop
mov
stos
rol
push
mov
popf
adc
dec
push
pop
add
xchg
xor
push
push
out
cmc
mov
mov
iret
stos
pop
enter
loop
push
sub
lock
adc
push
push
lods
pop
push
arpl
inc
hlt
imul
push
sbb
leave
in
repz
lret
addl
lods
shlb
dec
and
adc
mov
fnsave
outsb
dec
push
sbb
inc
lret
testl
push
test
mov
aam
and
or
popa
or
xor
xchg
adc
mov
outsl
popf
in
mov
mov
jg
cmpsb
jge
and
add
cmp
xchg
test
test
mov
lret
jmp
test
push
jmp
pushf
add
dec
mov
xor
mov
jge
repnz
xchg
pop
test
fistl
mov
or
loope
xchg
pop
dec
popa
jns
jg
divl
hlt
inc
je
sub
sbb
in
or
fstps
xor
cwtl
mov
xor
jbe
xor
and
subb
mov
mov
fsubp
mov
ret
inc
rorb
rolb
cmp
lret
cmp
xor
shll
mov
and
ret
dec
test
sbb
pop
cmp
push
xchg
mov
push
les
cmp
fadds
rolb
imul
std
ja
and
sub
lds
add
xchg
cmp
mov
push
movsl
mov
sbb
sub
or
scas
xchg
mov
dec
add
jecxz
cmp
sub
out
jb
xchg
jp
pusha
cmp
fwait
pop
call
sarl
dec
les
and
loope
mov
into
shlb
inc
loop
xchg
adc
push
cmp
sub
fwait
jns
outsb
mov
lods
dec
imul
and
and
dec
ret
xchg
movsb
and
adc
sbb
aad
popf
and
mov
dec
adc
test
jns
leave
push
rorb
adc
lea
lods
jl
push
push
jae
cmp
mov
aaa
sbb
cmpl
in
scas
insb
mov
and
inc
sbb
test
outsl
idiv
xor
adcb
inc
adc
or
enter
push
sbb
sahf
gs
mov
ja
jb
dec
dec
sub
push
call
test
add
add
dec
ret
mov
pop
ret
fisttps
ds
inc
dec
int
xchg
cmp
add
in
fldl
dec
jo
repnz
mov
stc
pop
inc
mov
push
repnz
jno
frstor
push
and
shrb
mov
aad
test
inc
cwtl
rcrl
ret
mov
clc
shl
xchg
lcall
lea
ret
sarl
mov
adc
dec
push
xor
iret
pushf
fisttps
stos
loope
xchg
xchg
std
or
xchg
enter
lds
cli
sahf
les
and
cmc
mov
fistl
push
push
repnz
and
cld
pop
stos
jne
xor
out
call
dec
or
das
in
cmp
dec
add
add
sub
subb
movsb
adc
mov
mov
push
mov
adc
fcomi
sbb
js
bound
icebp
in
adc
jae
mov
jae
pop
fbld
cmpsl
adc
mov
sti
push
cmp
add
adc
bound
pop
jns
adc
clc
jae
mov
dec
fwait
dec
jb
mov
mov
cmp
imul
pop
pop
popa
ja
pop
cmp
inc
aaa
push
adcl
dec
mov
and
arpl
or
imul
popa
sbb
test
arpl
sub
fwait
scas
adc
push
xchg
add
or
dec
xchg
cmovle
test
test
ljmp
dec
sbb
dec
hlt
sbb
pop
mov
mov
cltd
xchg
inc
push
inc
je
push
jecxz
push
das
push
pop
push
lret
lods
lea
ret
jno
mov
mov
sbb
mov
jmp
cld
mov
repnz
popf
sahf
jp
cwtl
repz
notl
int3
inc
xchg
pushl
push
cs
add
xchg
push
add
mov
sbb
or
or
xchg
cltd
cmc
mov
sub
inc
adc
xor
pop
loope
sub
popf
loope
sub
in
lret
ret
repnz
test
leave
sbb
push
jge
push
xor
loopne
or
popf
jbe
leave
push
push
and
gs
dec
lcall
jb
cli
jb
mov
inc
add
sub
aas
push
mov
cmp
add
arpl
mov
jecxz
aas
mov
loopne
cld
inc
inc
fldcw
sub
daa
mov
mov
xor
adc
fwait
and
mov
int3
test
pop
adc
add
adc
jne
pop
std
in
sub
pop
xchg
jae
jae
dec
jecxz
sahf
mov
xchg
xorb
popf
dec
loop
and
sbb
cmc
cmp
adc
jno
fdivrl
pop
inc
inc
mov
push
dec
or
data16
imul
fcoms
iret
xchg
out
push
dec
cmp
lods
aaa
cmp
dec
sti
xchg
je
jp
push
push
or
mov
dec
xor
incb
inc
loope
mov
sub
or
bound
mov
sub
icebp
testl
adc
mov
push
add
popa
and
cmp
int3
ficompl
into
das
sbb
sub
jl
cmpl
call
pop
sub
or
xchg
lret
mov
nop
mov
lea
pop
mov
pusha
inc
mov
pusha
mov
ret
mov
push
call
xchg
mov
sbb
leave
push
dec
shl
addr16
jno
les
inc
or
dec
jno
jne
sbb
and
insb
in
cmpsl
push
aam
mov
push
mov
xchg
push
lret
stos
dec
and
clc
mov
insl
mov
mov
negl
out
loope
loopne
dec
loop
add
ss
mov
sbb
xchg
inc
pop
cmp
mov
sbb
mov
sbb
fwait
pop
inc
subb
push
and
dec
repz
fstpt
xor
popf
xchg
cmpsb
jae
mov
jnp
xchg
add
shlb
cmpsb
movsl
mov
cmp
adc
push
sti
or
or
outsl
or
push
cwtl
xlat
movsb
clc
in
inc
or
sbb
orb
xchg
imul
inc
xchg
mov
sti
mov
mov
sbb
inc
cmp
cmp
push
mov
hlt
sub
ja
insl
mov
sub
test
imul
inc
lldt
and
push
dec
sub
insl
push
sub
inc
pop
mov
cmpsl
iret
pop
pop
xchg
jecxz
daa
xchg
loop
pushf
fwait
mov
sub
cmp
ret
mov
add
jo
in
hlt
mov
bound
xor
mov
push
outsb
dec
sbb
pop
inc
xor
sub
or
or
out
push
jle
test
sbb
push
pop
jno
lea
dec
out
in
aas
fdiv
sar
stc
or
dec
xchg
add
aad
dec
cmp
pop
loope
pop
pop
clc
loope
pop
jg
mov
notl
movsl
les
repnz
xchg
xor
iret
andb
das
hlt
xchg
mov
xchg
fldenv
pop
pop
pop
cmpsb
lock
cld
inc
mov
loop
test
dec
dec
in
fnclex
cld
adc
mov
scas
xchg
sub
adc
inc
sub
mov
push
fistpl
in
xchg
testb
push
jb
push
bound
nop
mov
xchg
push
arpl
cli
push
daa
sub
sub
gs
push
and
lret
lret
jmp
lods
ja
xchg
cmc
xor
popf
push
mov
pop
sub
mov
jecxz
mov
mov
in
xchg
out
fdivrs
mov
or
popf
and
dec
js
mov
fnstenv
cs
es
out
test
pop
inc
mov
ljmp
aad
push
stos
inc
cwtl
lcall
mov
jne
cwtl
mov
repz
int
xor
cmp
imul
sub
ret
xchg
test
pop
xor
stos
mov
jnp
mov
out
adc
pop
mov
scas
jno
lret
xor
mov
imul
dec
and
in
rcll
sbb
or
push
fwait
scas
cmp
aad
pop
push
add
lock
sbb
cltd
xorb
daa
xor
outsb
mov
in
dec
pop
gs
sarb
loopne
jle
mov
call
ja
fbld
mov
hlt
pusha
push
sbb
xchg
and
sbb
movsb
daa
xchg
xor
fwait
dec
sbb
mov
mov
pop
mov
or
fidivrl
xor
into
inc
popf
sti
ret
fcmovu
mov
out
in
sub
test
xor
iret
out
sub
adc
sbb
ja
push
xor
int
jg
mov
cltd
pop
cli
jl
incl
gs
lods
pop
jmp
fs
or
push
shrl
pop
fldl
push
push
lock
ljmp
in
mov
out
and
jmp
adc
push
rol
jl
xchg
pop
rcll
pop
lods
jo
popa
daa
mov
scas
pop
mov
jb
cld
and
sbb
nop
dec
lahf
cmpl
jmp
filds
xchg
je
les
add
out
fidivrs
dec
dec
arpl
mov
and
jl
into
leave
lret
pop
xchg
mov
cmp
cwtl
fnstenv
dec
pop
dec
aad
nop
cli
xchg
sub
movsb
addl
cmp
mov
pop
sub
jo
cmc
out
loopne
xor
and
mov
mov
out
and
int
out
cmpsl
addl
hlt
mov
cmp
les
into
loop
sub
push
cs
or
lods
sti
xlat
xchg
pop
in
xchg
lret
xchg
jp
sti
out
xor
jne
repnz
push
and
push
and
or
adc
aad
inc
pop
js
sub
mov
mov
mov
inc
and
lods
add
or
dec
in
jb
inc
xchg
xchg
mov
xor
enter
cwtl
push
scas
cmp
sbb
push
sbb
sub
mov
repz
orb
outsl
daa
lods
scas
xor
sub
cltd
pop
mov
xchg
sub
pop
push
or
xchg
sbb
gs
jmp
push
mov
pop
mov
xchg
cli
mov
jnp
outsb
jmp
or
push
mov
and
xor
or
int3
ja
mov
ja
pop
sti
jnp
dec
cld
push
lea
outsl
les
testl
add
and
addr16
jns
xor
dec
loope
loopne
jecxz
lds
les
sbb
incb
dec
mov
push
mov
insl
xchg
jbe
xchg
sub
popf
add
repz
mov
in
mov
mov
ret
mov
sbb
addr16
stc
pop
xor
or
lea
xchg
lahf
and
jae
pop
cmc
or
mov
and
pusha
jg
cmp
mov
inc
inc
dec
popw
iret
shlb
xor
out
arpl
icebp
iret
adc
mov
pop
adc
push
jmp
movsl
mov
xchg
xor
cwtl
test
add
jge
push
mov
ret
cmp
in
ljmp
outsb
cmc
sbb
lret
mov
daa
fwait
pushf
mov
sbb
aad
loopne
pop
sbb
loope
pop
add
xchg
faddl
lret
lret
iret
sbb
cmp
aaa
sub
cli
jo
es
cltd
notl
lock
scas
sbb
cmpsl
popf
cmp
dec
fs
push
lods
pop
repz
push
pop
and
push
inc
inc
sbbb
out
push
popa
orb
sub
cmp
push
push
in
jo
testl
sbb
or
adc
stc
and
sub
mov
out
in
mov
mov
add
leave
pop
pushf
insb
addr16
es
cmp
mov
mov
cmc
insb
aad
rcl
lods
fisttpll
cmp
dec
mov
push
cmp
add
and
jno
test
scas
and
loop
lds
push
lcall
inc
mov
jne
cs
pop
sahf
xchg
adc
sub
orl
fadd
movsb
fstps
loopne
jl
adc
inc
add
cmpsl
push
rcr
xchg
mov
into
test
fldcw
xchg
js
cmp
dec
shlb
insb
and
mov
pop
or
xor
inc
and
loopne
sarb
push
loope
arpl
mov
pusha
xchg
in
pminsw
mov
jno
popl
inc
arpl
int
sbb
jge
adc
dec
adc
push
cwtl
cmpsl
push
nop
or
aam
lahf
push
pop
mov
pushf
inc
add
outsb
xlat
sbb
mov
into
jmp
push
out
repz
dec
leave
jne
adc
popf
divl
out
rcrb
pop
pop
imul
rorl
lahf
mov
shlb
sub
iret
mov
mov
je
mov
mov
ds
or
xor
aad
fildl
sti
sbb
fnstcw
pusha
push
xchg
push
jmp
ret
sub
and
loop
cmp
xchg
sbb
mov
lods
jnp
pop
or
sbbb
ret
push
sahf
loopne
and
xor
popa
lcall
or
arpl
fadd
aaa
inc
inc
inc
pop
ret
cmp
pop
fidivl
fwait
sbb
frstor
push
mov
xor
cmp
js
dec
fwait
insb
int
mov
ret
jae
popa
push
or
pop
sbb
jle
arpl
aaa
xor
mov
xchg
test
in
insb
inc
jg
add
push
scas
int3
mov
test
shll
sahf
mov
les
arpl
pop
std
andb
xchg
imull
mov
xor
mov
sub
faddp
das
mov
orl
xor
divb
adc
clc
addr16
mov
and
sub
sub
subb
add
push
jle
adcl
lcall
cmpsl
mov
cltd
pop
add
jbe
stc
or
insb
lea
repnz
add
test
mov
rolb
xchg
es
outsl
add
inc
lods
xlat
jns
jbe
push
pop
dec
ljmp
jge
push
andb
in
fs
inc
adc
sub
fwait
xor
inc
push
clc
repnz
sbb
out
adc
jge
pop
aas
mov
adc
jle
ja
xor
stos
or
loop
mov
fisubrs
shr
add
fucomi
mov
rcrl
inc
xchg
push
mov
push
dec
bound
xor
loopne
pop
push
je
stc
out
xchg
xchg
inc
sti
add
sub
mov
bound
fistps
xor
cmp
pop
rorl
pop
repnz
in
daa
jg
pop
dec
gs
or
adc
sbbb
inc
or
dec
insb
push
aam
mov
repz
test
lcall
in
test
push
xchg
arpl
dec
pushf
add
mov
mov
xorb
sub
pop
pop
scas
mov
sbb
pop
in
and
sub
xor
inc
lahf
jp
adc
push
xchg
call
adcl
xor
dec
sbbl
adc
sbb
xchg
lock
cs
or
jne
imul
pop
xlat
sub
dec
push
adc
stos
mov
cmp
loope
fstpt
cli
sti
lret
push
lods
jb
movsb
lret
not
enter
daa
pop
lret
outsl
xchg
jecxz
cltd
aam
push
in
sub
and
and
jbe
das
inc
push
cltd
or
addl
sbb
jl
fs
pop
dec
ror
adc
repz
and
addr16
imul
sbb
outsl
adc
lds
cmpsb
imul
insl
xor
out
lds
jmp
mov
xor
adcb
jecxz
sub
cmpsl
clc
nop
cld
ficoml
es
xorl
scas
sti
mov
mov
das
gs
scas
jge
js
outsb
arpl
xor
mov
shl
mov
or
leave
push
sbb
sub
mov
cltd
dec
pop
mov
mov
pusha
add
cs
dec
movsl
cmpsl
push
sahf
pop
xor
cmp
adcb
in
inc
xchg
sub
hlt
mov
daa
rorl
dec
fwait
sbb
xchg
mov
pop
gs
push
push
ret
or
pop
inc
xchg
notl
cmp
adcl
fucomip
xchg
call
fucom
shl
test
push
mov
lock
and
repz
sub
cli
cmc
call
fcomps
shrb
adc
cmpsl
aaa
mov
int
or
or
test
adc
xchg
pop
mov
in
sbb
movsl
es
or
push
nop
pop
push
lods
adc
out
push
mov
fdivl
push
cltd
out
fistpll
out
jae
adc
or
rcrl
jg
xor
jne
sub
scas
aas
sbb
push
mov
xchg
xchg
adc
test
mov
cld
in
add
mov
test
cmp
maxps
enter
dec
lods
ret
divl
mov
in
cltd
cmp
clc
test
lcall
aas
test
sbb
adc
sub
mov
in
inc
fdivp
xor
xor
iret
mov
xor
subl
loop
leave
outsb
push
push
jge
call
jne
insl
xor
sbb
cmc
enter
xchg
jle
scas
loop
scas
push
arpl
sub
jle
setb
and
bound
imul
jb
aas
in
and
stos
and
int3
or
movl
or
out
jmp
xchg
xchg
enter
pop
cs
and
sbb
stos
icebp
es
in
nop
or
gs
mov
sub
popa
arpl
test
jns
lods
aam
out
adc
ljmp
sbb
inc
test
cs
out
cmpsl
jne
into
aas
and
lock
mov
or
lea
leave
mov
lret
inc
push
push
shlb
jns
adc
mov
push
sub
push
fisubrl
add
adc
push
pop
in
fsubr
cmpsb
shld
or
clc
jae
mov
mov
jnp
call
and
sbb
fmul
lcall
fs
enter
xchg
sub
jg
jns
filds
cs
inc
jecxz
jne
xor
jge
sbb
outsl
add
and
jbe
into
inc
fcoms
enter
outsl
xchg
or
dec
and
inc
aad
sbb
jmp
test
movsl
bnd
push
out
ljmp
inc
and
mov
push
lret
pop
mov
add
inc
les
stc
push
xor
add
insb
fidivrl
adc
sarb
push
mov
cmpsb
adc
sarb
adc
pop
jecxz
adc
cmp
sub
pop
inc
mov
pop
mov
xor
test
add
pop
sbb
mov
adc
and
xor
push
lock
popf
adc
call
pusha
xor
xchg
cltd
pop
fimull
jo
lods
mov
mov
and
mov
dec
in
xchg
mov
addr16
adc
and
insb
test
sub
pop
fsub
jecxz
push
pop
and
sbb
mov
and
scas
mov
lea
cld
rol
in
mov
add
fcomps
sti
xchg
mov
dec
jle
cmpsl
das
cmpsl
inc
mov
shll
sub
push
push
mov
les
pop
lds
je
xchg
movsb
cmpsl
or
mov
sbb
pop
add
push
add
outsl
xor
inc
js
pop
rolb
shlb
jp
dec
fldz
xchg
mov
xchg
lds
bound
fucom
mov
jbe
and
jp
jae
and
xor
xchg
mov
stc
inc
mov
sbb
out
inc
sbb
sbb
adc
ror
jp
add
repz
cli
xchg
add
inc
stos
std
push
jge
mov
lret
cmp
mov
sub
loopne
popa
push
movsb
popf
xchg
notb
lods
inc
adc
hlt
mov
pop
and
and
xchg
repz
rorl
sub
addb
sub
cmp
and
fsubrl
enter
ljmp
rep
sub
push
ds
add
inc
push
repnz
cltd
aaa
push
add
call
popf
xchg
add
jecxz
push
sub
insb
in
jo
std
insb
clc
rcll
mov
hlt
xor
popa
test
insb
js
ficoml
jne
ror
inc
test
fcompl
sub
xchg
enter
jo
insb
jno
mov
or
adc
arpl
jg
jmp
movsl
movsb
inc
mov
mov
test
and
lds
hlt
stos
lret
mov
inc
nop
sub
sbb
mov
xor
xchg
cltd
or
into
icebp
and
fisttps
mov
xchg
or
jge
lcall
jle
xor
dec
add
mov
xchg
das
aam
push
pop
repnz
xchg
mov
cli
xor
cltd
sbb
aas
pop
scas
movsb
xchg
dec
inc
pop
mov
mov
dec
adc
mov
cmpsb
out
sbb
mov
inc
jg
dec
pop
mov
inc
dec
insb
pop
mov
cld
inc
cmc
cmp
sub
lret
flds
cmpsb
mov
inc
dec
pop
iret
rcrl
in
xor
sbb
icebp
scas
out
jnp
jg
shrb
lret
sbb
in
dec
mov
insb
push
hlt
push
fdivs
push
ja
subl
fists
adc
mov
dec
xlat
xchg
push
jbe
out
test
push
call
int3
ret
pop
jg
leave
jg
and
rolb
ret
loopne
inc
rorl
xchg
dec
add
and
dec
scas
cwtl
out
xchg
negb
stos
int
out
or
push
inc
cmp
cmpsl
cmp
std
or
mov
std
fisubs
push
inc
and
pushf
cmp
sbb
xchg
mov
cmpl
pop
or
int
pop
add
adc
cld
testb
daa
fwait
adc
cmp
pop
xchg
xchg
outsb
pop
ret
push
sub
pop
jb
and
xlat
xor
int
inc
outsb
adc
mov
in
cwtl
es
das
sub
cmp
and
repz
add
loop
pop
shufps
pop
inc
into
les
xor
lea
sti
test
mov
ss
int3
push
js
shr
adc
fbld
sub
push
stos
cmp
cli
push
movsl
leave
data16
push
sub
mov
jns
push
jp
imul
inc
sbb
shlb
lock
ljmp
and
imul
pop
cmp
pop
mov
cmc
mov
cs
cmc
add
pushf
adc
and
cmp
stos
sbb
and
mov
iret
add
pop
push
push
mov
and
rorb
and
scas
aam
sbb
es
xor
pop
xchg
mov
inc
imul
and
and
fbld
in
jae
jnp
scas
xchg
lods
nop
or
jecxz
test
in
call
cmovns
pop
sub
pop
insl
aam
cmp
lock
xlat
loop
std
cs
push
cmp
into
popa
aad
or
jle
lcall
xchg
jbe
xor
sub
xlat
sarl
fimull
lock
mov
jae
and
mov
dec
mov
mov
add
call
int
fcmove
sub
dec
sti
xchg
paddsb
dec
ljmp
imul
call
push
ret
add
cmp
sbb
pusha
xor
cmp
cmp
les
push
pop
pop
pushf
inc
sbb
mov
punpckhdq
xchg
cli
into
imul
xchg
pop
pop
cltd
js
test
sti
mov
popa
sbb
cmpsb
subb
mov
hlt
xchg
cmp
jnp
cmpsb
sub
jp
add
adc
lock
xchg
test
xor
cmp
mov
xor
rcll
loope
adc
es
jo
aam
add
inc
xchg
sbb
arpl
jne
mov
cmp
xor
xchg
sbb
sbb
push
int
xchg
ja
std
movsb
es
or
test
pop
xchg
mov
mov
cwtl
xchg
push
adc
insb
push
es
adcl
das
jb
xor
xchg
jl
ret
sahf
ret
je
pop
aaa
pop
or
imul
scas
rcl
pop
data16
loope
clc
push
push
cmp
sbb
ljmp
xchg
scas
enter
xor
mov
loopne
dec
xchg
dec
adc
je
icebp
cmc
sub
xchg
mov
bound
mov
dec
jbe
mov
mov
test
mov
sbb
mov
or
push
lcall
inc
cmp
ret
and
std
or
xchg
fucomi
push
pop
in
jg
xchg
fisttpl
leave
cmpsl
cwtl
cld
into
inc
sbb
scas
adc
jp
pop
jge,pt
inc
xchg
inc
sbb
aad
fs
fistl
dec
inc
ljmp
xchg
roll
dec
fisubrl
or
pop
mov
lock
sbb
pushl
aaa
in
jbe
mov
leave
sti
mov
cld
pop
xchg
notl
pushw
add
sub
pop
sub
stc
dec
mov
mov
fidivs
pop
out
test
or
inc
out
push
pop
mov
push
fmull
inc
mov
jne
sub
test
and
mov
sbb
inc
cmp
movsb
cmp
faddl
aas
shrb
xor
mov
ljmp
xor
das
or
inc
pop
fs
aad
sbb
fsubrl
pop
icebp
outsb
jmp
fwait
ss
mov
lret
sbb
push
pop
sbb
xchg
shrb
adc
adc
mov
adc
repz
fdivrl
fxch
scas
jecxz
cmp
cmc
iret
stc
cs
and
scas
stos
hlt
cmp
xor
mov
jae
mov
scas
adc
sar
pop
fcomp
insb
push
out
sub
sub
pop
mov
mov
shlb
lods
xor
cwtl
adc
iret
xor
in
mov
sbb
mov
jle
xlat
mov
ret
insl
movl
fldcw
mov
inc
pop
scas
sbb
decb
xchg
mov
xchg
nop
mov
rcll
imul
xchg
inc
push
int
lds
sti
adc
lods
cmc
pop
int3
mov
dec
mov
adc
inc
ja
adc
pop
out
cwtl
loopne
add
fcoml
stos
dec
add
aad
in
jle
fsts
push
filds
and
xchg
push
testb
pop
push
cltd
cmpsl
dec
sahf
jmp
bt
jmp
lock
imul
dec
es
cltd
or
sbb
add
sub
ljmp
int3
pusha
and
push
test
dec
mov
push
lcall
imul
push
push
pop
dec
mov
ficoms
xchg
movsl
movl
enter
cmp
das
pop
push
loop
lock
cs
xchg
mov
and
mov
dec
test
jae
inc
mov
out
dec
std
mov
and
aas
mov
sub
jp
loopne
push
ljmp
test
aam
movd
lods
sbb
sbbl
mov
aaa
test
rorb
add
xor
pop
mov
push
in
xor
popa
in
adc
ljmp
mov
cmpl
mov
push
sbb
adcb
mov
xorl
sbb
and
push
jmp
mov
cltd
mov
shrb
or
test
adc
push
popa
shll
or
pop
inc
mov
into
imul
dec
and
push
pop
pop
xchg
cmp
std
lock
xchg
mov
pop
in
xor
popf
fs
push
test
and
mov
xchg
dec
enter
xor
stc
xchg
push
sub
dec
leave
mov
xlat
pop
loopne
jne
adc
jle
fwait
mov
mov
pop
adc
call
and
sub
test
adc
pop
cmp
rcrl
loope
lcall
inc
hlt
imull
xor
mov
aaa
ljmp
sbb
or
mov
ljmp
in
imull
push
push
ret
pop
into
outsl
push
mov
sbb
inc
test
stos
popf
insb
bnd
fisubs
lock
lea
xchg
sahf
shrb
in
cmp
shlb
addb
adc
pop
jo
xchg
lcall
push
es
and
outsb
push
sbb
mov
jbe
loope
mov
cmp
je
mov
push
push
shll
cmp
repnz
push
or
repz
daa
push
loopne
ss
or
loop
testb
aaa
out
out
out
arpl
gs
mov
jmp
lods
jmp
cltd
cltd
push
mov
ljmp
pcmpeqw
js
push
rcrb
mov
sbb
outsl
mov
shrb
jnp,pn
loop
cli
pop
lods
and
icebp
adc
fs
das
cmp
cmpsb
ficompl
mov
leave
pop
insb
fistps
test
in
test
sub
inc
sbb
cmpsl
pop
add
jecxz
mov
add
pop
leave
loop
xor
pop
mov
dec
pop
pop
adc
mov
lock
and
gs
xchg
dec
out
jb
dec
cmp
lods
push
outsb
std
lods
xchg
dec
bound
push
add
mov
cltd
push
xor
fidivl
scas
push
ljmp
mov
cmp
das
mov
mov
stc
inc
ret
test
test
ret
xchg
or
and
negb
pop
test
push
js
lds
xchg
push
rcrl
scas
mov
sbb
xlat
push
adc
xor
mov
cld
fsubrs
adc
add
aas
push
xchg
pop
addr16
dec
and
test
cmpsb
cmpsl
pop
lret
add
push
imull
cmp
cmp
not
dec
popl
loopne
jge
or
lods
iret
mov
lods
mov
jb
inc
cmp
ret
pop
and
loopne
or
sub
js
mov
in
cltd
and
mov
in
jae
and
or
xor
cs
dec
popa
or
int
and
popa
inc
adc
mov
data16
mov
aad
add
cmp
cltd
and
fdivl
daa
xchg
sbb
adc
stos
imul
fwait
xor
cmp
lret
nop
nop
mov
pop
test
jbe
inc
dec
or
add
lahf
dec
jg
iret
dec
in
bnd
aas
pop
push
addr16
mov
xor
mov
fnstcw
mov
insl
xor
std
aaa
insb
adc
enter
jp
inc
int
ret
mov
sti
nop
or
scas
jne
orb
push
scas
movsl
js
inc
jg
mov
shl
std
sbb
test
push
mov
pushf
adc
repz
sub
sbb
push
adc
xchg
mov
sarl
leave
out
loopne
lods
jecxz
sub
add
xor
add
adc
inc
fistpll
sahf
dec
int3
imul
pop
js
mov
clc
jmp
int3
enter
xchg
xor
sti
or
add
jae
add
out
pop
xchg
pop
pop
rcr
scas
adc
inc
sbb
insl
loope
xor
pop
dec
push
aas
fidivrl
ja
call
cmp
mov
mov
push
shlb
sub
adc
dec
arpl
mov
sub
outsl
pop
fistl
mov
xlat
mov
rcr
mov
adc
icebp
or
jnp
repnz
and
mov
xchg
js
aaa
mov
in
mov
jns
js
call
add
out
push
ret
repnz
cmp
jle
and
dec
cmp
sahf
rcr
hlt
in
ss
iret
sbbl
adc
push
sub
pop
imul
out
mov
mov
std
dec
stos
nop
out
add
jge
mov
lock
dec
inc
out
cmc
mov
cltd
idivb
ret
inc
cmc
mov
sbb
inc
inc
sbb
sbb
dec
out
bound
pop
scas
sub
int3
out
mov
push
pop
jns
sbb
call
xlat
repz
adc
mov
into
pop
sti
out
das
enter
mov
sbb
or
xor
in
shll
mov
leave
push
pop
aam
or
nop
sub
jle
jae
jns
stos
dec
or
sbb
jl
mov
cwtl
mov
dec
and
aad
adc
jmp
cmp
fists
dec
push
aad
daa
and
sahf
adc
xchg
lahf
bound
pop
mov
sub
movsb
test
call
lcall
xor
jae
mov
jg
inc
inc
jnp
pop
pop
jno
fxam
xor
pop
lret
shlb
mov
ror
nop
pushf
push
sbb
mov
sbb
icebp
pushf
dec
pop
mov
in
mov
pop
jl
sarl
in
mov
std
and
xor
add
pop
pop
dec
mov
and
loopne
call
test
push
ljmp
aad
add
ss
jb
gs
in
mov
push
in
lcall
mov
shrl
cmc
out
lahf
xchg
jp
pop
push
pop
das
adc
xchg
lock
xor
xor
and
sti
mov
adc
jne
xor
inc
orl
inc
sti
shr
cmp
push
imul
iret
movsb
dec
nop
icebp
icebp
cmpsb
mov
add
xchg
out
mov
pop
adc
shlb
sub
xchg
push
add
clc
das
inc
pop
adc
mov
imul
jle
stos
cmp
inc
loop
mov
ss
je
xchg
mov
pop
pop
cmpsb
loope
popl
insl
jmp
orb
jg,pt
or
sub
lret
or
cmc
insl
or
mov
sub
repz
mov
lea
mov
adc
inc
mov
push
orb
aam
leave
clc
or
jl
scas
ds
and
and
lret
jno
shlb
xchg
fnstcw
icebp
lods
scas
adc
cmpsb
mov
xchg
sti
pop
mov
notl
inc
iret
sahf
mov
stos
cld
mov
orl
adc
dec
cmp
cmp
cmp
adc
xlat
mov
enter
push
scas
adc
jns
push
in
jae
scas
inc
mov
sbb
xchg
push
fs
dec
cs
or
xor
pop
das
xchg
add
mov
mov
pop
cli
cmp
pop
pushf
notb
mov
sar
fidivrs
pop
xlat
push
aas
enter
clc
lds
rol
sub
cli
out
lret
rcrl
ja
pop
out
jns
or
sub
int
out
outsb
out
push
dec
mov
pushf
movsb
cmp
test
mov
dec
dec
jl
daa
sbb
lea
rclb
cmc
pop
shld
mov
aam
mov
sub
xor
lcall
sbb
pop
out
jp
lret
xchg
add
loope
mov
in
jmp
sbb
xor
pop
sbb
fsubrl
xor
scas
inc
pop
lret
dec
and
inc
sbbl
xchg
fs
aaa
adc
pusha
std
addr16
jb
sub
ds
call
in
hlt
scas
rcll
xchg
insl
cmp
ds
inc
sub
dec
outsb
add
pop
adc
jmp
push
cmc
xor
xchg
lahf
and
call
pop
pusha
in
cld
adc
sbb
sub
xlat
mov
insb
xor
lcall
mov
adc
xor
fisubrs
ja
jo
mov
out
xchg
or
nop
xchg
dec
cmp
or
test
test
push
rorl
into
in
ficompl
or
pop
nop
sti
adc
out
aam
or
es
lods
inc
in
push
mov
jecxz
stc
sahf
jl
jle
jl
dec
push
jne
sub
mov
jne
or
loopne
sub
pusha
adc
mov
and
rcll
mov
cmp
jg
xor
fiadds
mov
inc
hlt
fwait
adc
fstl
and
mov
rorl
pop
clc
pop
in
outsb
js
into
decl
out
jbe
or
and
sub
int
adc
test
xchg
mov
addb
les
shl
aad
mov
into
adc
or
shl
cmp
inc
mov
cmp
xor
aas
fs
push
adc
pusha
jle
jge
fisubrl
pop
adc
dec
xchg
mov
roll
cmp
jp
js
xor
loop
sub
out
cmpsl
in
testb
mov
inc
repz
arpl
adcl
xor
sbb
ljmp
push
shll
xchg
scas
lods
fidivs
in
adcl
imul
pop
inc
xor
loopne,pt
pop
iret
lock
sub
ja
dec
mov
mov
jne
rorb
pusha
clc
loopne
je
sub
xchg
arpl
cmp
ss
icebp
xor
cmp
popf
and
repnz
push
pusha
lret
daa
cmp
xor
fdiv
add
enter
bnd
pop
inc
dec
adc
xor
xor
imulb
mov
jno
stos
lret
std
aas
sub
push
sub
aas
sub
xchg
add
lahf
mov
lret
jbe
xchg
pop
or
sbb
out
addr16
add
jne
push
loop
clc
mov
jg
insb
and
add
xor
fstps
inc
mov
mov
push
lds
out
push
clc
lea
sbb
jo
cmp
mov
into
xchg
mov
insl
cltd
test
mov
ret
fwait
push
push
adcb
call
nop
add
insb
add
pop
inc
lods
jne
push
push
adc
sarb
sub
xor
out
sub
sarb
lock
bound
fisttpll
xchg
add
lods
push
rorb
mov
xchg
pop
adc
aas
mov
mov
inc
cld
inc
pop
std
mov
aam
pop
fstl
sti
ss
xchg
pop
dec
jmp
dec
pusha
adc
mov
addr16
jecxz
xor
jp
ficompl
ds
inc
push
ror
jg
addr16
xor
daa
pop
sti
mov
repnz
orl
ss
call
mov
mov
fiadds
sbbl
arpl
jbe
jmp
out
and
int3
iret
add
xor
loope
push
aam
lds
cmp
xor
enter
fwait
jns
push
dec
xor
and
push
sub
out
aas
movsl
mov
cmp
push
sbb
add
mov
inc
mov
inc
add
mov
lds
in
push
cld
xor
jns
lret
add
lahf
dec
jge
pop
mov
xchg
mulb
mov
add
inc
and
dec
cmpsb
pop
loope
add
cs
cmp
fwait
push
cmp
test
pop
imul
movsl
lds
divb
and
xor
int
out
add
and
das
jbe
cmp
pushf
xor
or
mov
inc
aaa
gs
pusha
sub
sub
gs
in
mov
jne
jmp
ljmp
xchg
mov
in
adc
out
gs
push
xor
jge
or
or
jge
adc
lret
ja
dec
test
stc
xchg
sbbl
mov
test
pop
clc
in
push
movsl
xlat
mov
fneni(8087
push
addl
out
jo
fsubl
xor
call
or
scas
xor
js
sub
into
sti
push
or
hlt
lds
jb
jno
std
cmp
sub
jnp
movsl
shlb
jecxz
jne
ret
inc
iret
imul
inc
hlt
testl
fwait
enter
mov
fiaddl
mov
mov
mov
mov
xor
testb
icebp
daa
sbb
imul
clc
jl
push
mov
out
sbb
test
mov
fwait
push
outsl
xchg
cli
or
mov
stc
scas
sbbb
mov
or
arpl
push
adc
mov
ljmp
or
stc
in
sbb
aaa
cmp
or
outsl
push
mov
add
mov
xor
dec
jo
xor
pop
sub
out
imul
pop
gs
cmp
mov
and
jns
rcll
movsb
insb
push
mov
push
into
and
je
push
lock
iret
jle
jl
lods
jge
in
xchg
add
rclb
add
fcoms
nop
ss
push
xor
jg
inc
adcl
inc
sarl
jnp
mov
or
arpl
filds
inc
pop
cld
push
xor
or
mov
add
les
test
mov
shl
test
mov
sbb
hlt
or
fisubl
cltd
lods
and
xchg
pop
mov
out
fistpll
sbb
push
out
jbe
mov
jge
and
sbb
dec
jb
or
add
mov
aas
ljmp
push
orb
lock
dec
xor
rcl
and
sbb
cmp
mov
pop
dec
jle
jne
xchg
bound
lret
iret
add
ja
sub
or
nop
imul
dec
xchg
idivb
loop
xchg
push
add
shlb
xchg
sbb
aad
mov
es
xor
mov
sbb
js
sbb
pushl
inc
push
or
mov
movsl
outsl
mov
xchg
fldenv
fwait
sbb
in
cld
inc
cmpsb
xor
addr16
push
mov
jno
out
mov
inc
push
adc
lods
dec
mov
xchg
ret
sub
xor
mov
sbb
jg
scas
xchg
cld
inc
cmovae
sub
xor
mov
ja
mov
daa
sarl
mov
dec
scas
cmp
mov
xchg
fistpll
or
mov
jns
or
pop
or
insb
pusha
in
jae
jmp
lods
fildl
and
xor
push
jb
pop
lss
and
inc
rolb
call
push
int3
icebp
out
mov
lea
aad
pop
push
arpl
add
stos
ss
and
inc
mov
nop
add
inc
cli
jnp
je
and
scas
repz
fwait
sbb
adc
jle
iret
test
adc
enter
xchg
into
mov
mov
xchg
scas
push
int3
fists
inc
int3
lods
arpl
fcomps
push
nop
mov
and
andl
xchg
push
jge
push
das
add
in
ficompl
push
dec
ret
je
mov
stos
in
test
cli
in
and
sbb
arpl
or
or
adc
jb
push
sub
cld
fisubl
mov
adc
sub
lods
inc
xor
in
aad
inc
xor
daa
mov
adc
xchg
jmp
addr16
out
bound
sub
out
subb
xchg
pop
arpl
pushf
arpl
fcmovnbe
push
sub
bound
push
pop
jo
cld
mov
jb
loop
popa
enter
std
xchg
out
mov
dec
aam
cli
stc
ja
xor
test
cwtd
in
mov
shr
pop
sbb
int
call
pop
rorb
mov
cs
mov
or
sbb
jle
sahf
dec
or
sarb
adc
stc
cli
jle
mov
push
adc
outsl
idivb
pop
xor
test
mov
xchg
mov
scas
cltd
imul
mov
test
ja
mov
test
in
sbb
lcall
loop
inc
or
push
stos
dec
fldt
add
xlat
jmp
pop
dec
in
test
or
je
mov
cmp
cltd
dec
into
aam
shll
jbe
test
and
aaa
mov
loopne
pop
or
jecxz
xchg
fisttpll
arpl
xchg
xor
or
jmp
in
jns
subb
jle
lret
popa
cmpsb
push
add
pushf
xor
loop
call
lods
pushf
mov
mov
ja
outsl
std
pop
stos
mov
lds
fbstp
lds
xor
jo
inc
jne
imul
jmp
loope
mov
xchg
flds
jne
mov
pusha
xchg
iret
leave
fildll
mov
sarl
ja
loope
rolb
scas
add
adc
adcb
pop
je
fyl2xp1
lock
cmp
scas
xorl
stos
jns
xor
mov
add
inc
pop
rcll
cmp
push
clc
adc
jae
cltd
aam
jae
bswap
cmp
sarb
pusha
jne
mov
inc
sbbl
inc
je
scas
enter
and
mov
xor
mov
push
sbb
adc
xchg
pop
fcmovnu
mov
cli
sub
and
adc
fadds
outsl
mov
loopne
xor
sbb
pop
out
sbb
mov
jl
in
mov
pop
insl
enter
mov
clc
divl
fsubrs
out
mov
cmp
sarb
xchg
jbe
xor
xor
jnp
dec
cmp
les
loopne
iret
jo
jmp
repnz
pop
sbb
mov
sub
jbe
test
ret
and
sbb
out
callw
and
js
inc
sub
sub
inc
inc
add
movsl
xchg
xor
add
or
mov
out
push
inc
fisttps
pop
xor
ljmp
jp
add
int3
push
and
mov
push
pushf
xor
inc
fmul
stos
fists
out
mov
add
jne
mov
rcl
rcll
mov
inc
in
jne
dec
popa
iret
cmp
mov
shrl
scas
inc
pushf
and
enter
out
adc
mov
inc
scas
dec
loope
fcmovnu
data16
fcmovnbe
cwtl
fwait
jne
xchg
xor
push
push
adc
sub
mov
lret
pop
adc
sarl
xor
nop
fsubrp
ror
mov
lds
fwait
inc
les
cmp
xor
mov
adc
or
adc
cwtl
sahf
pop
jb
mov
adc
mov
rorl
fs
sbb
lock
sbb
pop
ss
xor
ret
push
mov
scas
push
iret
mov
iret
sub
dec
push
xor
mov
adc
inc
mov
add
jecxz
cmpb
push
pop
xchg
mov
fdivrs
push
xchg
dec
push
xchg
mov
js
lcall
jnp
stos
arpl
in
out
mov
mov
in
fnstenv
lea
sbb
into
add
xchg
mov
jo
and
out
in
icebp
ret
adc
and
imul
push
push
push
push
xchg
mov
sbb
lcall
cmp
add
scas
mov
rol
rclb
lods
xlat
insl
and
pop
inc
sbb
inc
adc
xor
jno
or
out
and
pusha
js
sbb
pop
sub
push
inc
stc
bound
push
mov
and
mov
out
inc
push
mov
cli
out
cmpsb
push
cmpsl
add
add
pop
pop
pop
ror
aam
daa
dec
xor
ljmp
les
stos
test
pop
mov
ljmp
cli
pushf
repnz
outsb
cli
or
arpl
fucomi
fs
mov
mov
lea
mov
push
push
inc
dec
leave
pop
lcall
iret
pop
clc
mov
pop
push
pop
mov
push
out
out
fcmove
ret
shlb
or
dec
enter
inc
pop
gs
jbe
aam
xor
sub
lods
aaa
adc
lcall
loop
clc
adc
mov
push
lahf
pop
out
outsl
fwait
dec
aas
jl
je
sarb
mov
or
push
cld
push
mov
push
cmpsb
push
sub
mov
sub
aam
inc
jno
in
cwtl
sub
adc
push
mov
xor
add
movsb
icebp
cli
jb
xchg
sbb
bnd
inc
push
cmp
cld
lds
rcrb
int3
ss
fcmovnb
cmp
mov
ret
jecxz
and
cltd
ja
mov
adc
rcrl
xor
es
xchg
test
call
pushf
mov
std
lea
add
rolb
movsl
mov
cmc
adc
ljmp
cli
sbb
ds
stos
dec
add
sub
xchg
mov
ss
cmp
mov
xor
sub
out
mov
inc
adc
pop
push
cmp
out
mov
push
add
fcomp
add
cmpsb
cld
js
lea
xchg
hlt
lret
jge
fistl
and
xor
lock
xchg
insb
jnp
xor
out
sub
aad
add
push
loop
add
or
push
lods
int3
bound
inc
pop
push
sbb
add
mov
and
incb
aaa
mov
cs
sub
mov
out
or
stos
adc
jns
xor
sbb
test
cmp
into
in
pop
arpl
inc
mov
mul
adc
sbb
xor
test
test
pop
rorl
popf
push
jg
scas
adc
test
add
cld
test
adcb
out
insl
cld
ljmp
xor
xor
push
sub
pusha
push
push
loop
sbb
bound
add
ljmp
mov
or
std
and
gs
mov
ret
sbb
xor
pop
cmpsl
push
xor
mov
hlt
dec
int
mov
xchg
xchg
mov
jns
jmp
mov
lods
ljmp
push
xor
cmpsb
loope
jbe
jno
ljmp
dec
imul
fidivs
mov
cwtl
pop
mov
sub
mov
and
pop
sub
dec
cmp
sub
add
addb
shlb
inc
jmp
lcall
mulb
outsb
lcall
cli
sbb
mov
or
js
lea
xor
jge
rorl
and
leave
ret
mov
pop
outsl
mov
inc
jge
cvtpi2ps
jnp
dec
inc
pop
cmp
sti
add
mov
xor
push
inc
mov
in
jo
jns
mov
lahf
mov
add
jbe
mov
test
mov
inc
lods
push
pop
add
adc
push
and
addr16
sbb
pop
pop
push
sahf
pop
mov
mov
cmp
loopne
dec
push
fistl
jecxz
jmp
lcall
out
sub
sub
or
je
sbb
mov
pushf
dec
stc
xor
cmpsl
rcll
cmpsl
mov
out
out
std
mov
out
xor
mov
xchg
popl
cmp
inc
and
pusha
scas
add
clc
add
pop
cmp
gs
and
fdivs
mov
shrb
adc
bnd
inc
push
sbb
jo
ficoms
mov
jo
nop
std
rorl
pop
xchg
push
adcl
bswap
hlt
aas
push
inc
ficompl
pusha
ljmp
mov
jbe
adc
jb
in
jle
ret
sahf
sbb
and
pushf
xchg
xor
cmp
outsb
xor
ficompl
scas
cs
push
xchg
mov
loopne
arpl
add
in
xchg
push
push
lahf
sbb
test
lods
cmp
or
sub
add
dec
gs
push
repz
sub
cmp
icebp
and
outsl
ret
mov
push
adc
sub
test
dec
negl
xor
fidivs
lea
xor
sti
mov
ljmp
mov
xchg
out
jecxz
pop
ss
jecxz
adc
add
sub
mov
jge
push
mov
mov
arpl
cli
lahf
pop
ficoms
dec
insl
hlt
adc
xchg
dec
push
pop
pop
mov
mov
dec
adc
inc
jge
mov
data16
adc
mov
movsl
cli
or
popf
push
jno
adc
imul
repz
mov
cmp
adc
jp
push
jbe
inc
jae
add
je
inc
xchg
inc
adc
jg
jbe
test
sub
gs
dec
fiaddl
movsl
scas
adc
sub
aad
rcrb
or
movsl
cltd
movd
shl
and
movsl
cltd
es
arpl
mov
push
enter
push
popa
mov
xor
outsb
xchg
mov
lcall
jg
outsl
popa
fsts
mov
jae
and
out
mov
mov
adc
sti
cwtl
ljmpw
sub
adcl
xor
scas
mov
add
dec
inc
vpshaw
and
cmpsb
ljmp
mov
mov
jmp
adc
sbb
pop
cltd
or
add
mov
jg
inc
into
clc
das
cmp
mov
scas
imul
fs
std
scas
jnp
xchg
out
cmpsb
adc
inc
call
dec
lods
imull
or
popa
cmpb
test
add
loop
inc
fimuls
lahf
cmp
mov
mov
mov
or
cmpsb
in
filds
sub
insl
pop
jo
xchg
inc
ret
sbb
or
xchg
jmp
fnstcw
and
push
jns
imul
add
movsb
jnp
repz
stos
add
shlb
lods
lret
cwtl
inc
pusha
fidivrl
movsl
dec
sub
imul
or
iret
mov
push
stos
notl
dec
andl
xchg
into
jl
add
jnp
inc
adc
and
pop
rep
push
xchg
sbb
sbb
mov
mov
stc
call
pop
mov
mov
mov
and
lret
icebp
add
aas
xchg
push
scas
push
jmp
push
xchg
bound
and
shrl
adc
sbb
dec
cmp
cmp
mov
int
or
icebp
and
xor
jbe,pt
scas
insb
mov
ret
lret
aas
add
or
jecxz
ds
add
gs
lock
mov
std
mov
sbb
xchg
sbb
dec
sbb
stc
ss
add
jge
and
mov
pop
cwtl
mov
xchg
pop
stos
into
popf
into
xchg
mov
aas
cmpsl
cwtl
fstl
xchg
and
test
lods
mov
jne
mov
pop
loop
mov
pop
sbb
jmp
int
add
sub
loope
loop
add
mov
add
inc
dec
dec
insb
sbb
mov
inc
cmc
nop
lahf
cld
push
push
mov
pushf
imul
outsb
add
cmc
scas
or
jl
test
test
int
jl
aad
push
sub
push
pop
daa
jp
and
out
cmp
pushf
arpl
xchg
loopne
imul
out
jmp
push
or
mov
daa
inc
mov
out
loop
mov
fcoml
jns
inc
hlt
inc
mov
das
jo
inc
xor
gs
sub
dec
js
xchg
push
mov
jmp
ljmp
test
movsb
push
dec
ds
shlb
dec
pop
mov
ljmp
stos
xor
or
push
jns
es
dec
std
mov
sahf
add
pop
and
jns
xor
mov
ljmp
jno
push
sbb
add
lahf
or
subl
jno
xor
lds
not
lret
je
mov
enter
or
or
sbb
mov
push
arpl
dec
aad
lods
scas
jmp
lods
xchg
mov
addr16
add
push
je
lahf
sub
mov
aam
mov
add
aad
mov
dec
stc
pop
loopne
xor
pop
mov
cmp
filds
scas
idiv
call
loop
in
aad
xchg
sub
jo
mov
or
pop
add
loopne
repnz
insb
push
mov
jne
aad
out
ss
xchg
and
jge
call
xchg
sub
adc
jg
pop
pop
mov
pop
sub
out
call
adc
xor
mov
or
inc
mov
out
push
sbb
sbb
adc
mov
or
jb
aad
ja
mov
mov
add
xor
inc
dec
fbld
mov
add
es
inc
fldl
xchg
minps
push
es
jo
cs
movsb
test
fucom
aaa
jnp
scas
testb
ja
or
push
fwait
mov
and
daa
lcall
push
fimuls
iret
ljmp
icebp
bound
cwtl
dec
adc
iret
mov
cmpsl
cmc
xlat
mov
sahf
ja
mov
mov
daa
test
cltd
jbe
test
xchg
sub
in
cmp
js
pop
mov
push
xchg
leave
or
stc
fwait
push
in
mov
repnz
pop
inc
mov
pop
aad
sbb
ret
fdivrs
sarl
in
mov
loop
cmp
sbb
lret
jge
loop
pop
jnp
pop
add
sbb
dec
mov
jb
test
xor
xchg
lods
push
push
scas
test
cmpl
sbb
aam
pop
sub
stos
neg
call
push
xchg
pushl
or
or
out
jae
mov
jmp
divb
xor
sbb
or
pop
push
cmp
dec
mov
inc
inc
addr16
xor
sti
mov
insb
cmp
cmp
cmp
push
pop
push
mov
dec
sbb
fcomps
mov
popf
shlb
lods
jecxz
mov
and
or
pop
pop
popa
nop
pop
repz
imul
add
fsubp
lock
mov
sahf
aas
clc
imull
cmp
inc
scas
je
mov
dec
and
jbe
test
sub
dec
xchg
int3
adc
mov
int
call
sbb
adc
sub
jbe
int3
sahf
pop
jg
dec
sub
loop
out
inc
dec
ss
cmp
and
inc
sub
cmp
push
pop
js
mov
push
rorb
sbbb
mov
dec
pop
mov
adc
stos
test
bound
adc
scas
dec
pushf
enter
cmpsb
js
adc
jae
xor
lret
enter
out
jl
pop
test
loopne
push
or
or
xchg
push
jb
jg
jne
sub
int
shll
sub
inc
add
mov
pop
ret
mov
into
ror
sub
mov
popa
mov
shrd
mov
cmp
add
adc
push
cld
insl
test
jbe
pop
sti
test
push
push
push
std
mov
mov
ja
scas
adc
inc
aaa
aaa
cmc
fwait
aaa
repz
add
xchg
xchg
mov
sbb
cmp
mov
fptan
sbb
jg
ror
not
lods
push
daa
aas
and
xchg
mov
fdivp
sub
pop
pop
subl
ja
or
les
xlat
int3
movsl
fildl
jnp
push
push
adc
sub
mov
sahf
dec
xor
mov
push
stos
mov
sbb
cmc
out
xchg
ret
in
cmp
fdivrl
pushf
xchg
loopne
and
or
fldenv
pop
das
sub
and
jmp
add
and
jne
pop
inc
push
fildl
add
shl
and
outsb
cwtl
pop
xchg
pop
shlb
test
jnp
lock
or
jmp
cld
mov
int
sarb
lcall
inc
and
and
mov
push
push
mov
lea
roll
inc
insl
ror
ss
xchg
lds
inc
jbe
jae
xchg
pusha
pop
pop
idiv
cmpsl
add
add
lods
xorb
lods
pop
in
mov
sub
sbb
fldt
add
sbb
cmp
pop
cmpb
pushf
mov
add
inc
mov
dec
mov
sub
aas
stc
in
pop
jl
sbb
lods
jmp
rcrl
dec
std
mov
test
je
push
lcall
test
outsb
fcmovnb
je
lcall
and
sub
push
mov
jge
addr16
push
inc
or
mov
ret
das
sbb
cmc
jmp
mov
std
mov
ret
xchg
test
test
push
aaa
or
idiv
out
push
jmp
out
sub
dec
mov
pushl
outsl
out
or
loopne
shr
sbb
orl
mov
inc
jmp
rclb
ret
adc
daa
outsb
hlt
dec
insb
sub
cmp
pop
cmc
sub
mov
cmpsl
fildll
push
pop
cmp
sbb
cld
out
or
cmp
push
test
jl
dec
jnp
mov
mov
push
sbb
pop
inc
jmp
repnz
add
xchg
jmp
loop
or
inc
mov
ret
cmp
in
subb
mov
inc
push
sbb
and
fsubs
cmp
ja
cmp
sbb
jns
in
subb
out
fldt
loope
fucompp
dec
jbe
sub
mov
and
push
inc
add
inc
mov
mov
mov
push
js
shlb
xor
and
add
xor
cmp
sub
add
sti
sbb
mov
inc
loopne
scas
jmp
and
stos
aas
jmp
xchg
loope
mov
loopne
les
pop
pop
jp
sahf
push
int3
dec
sub
add
and
outsb
fisttps
mov
or
or
or
jb
add
xchg
popa
pop
call
loope
add
pop
pop
cli
jmp
leave
shll
outsb
cmpsb
aad
xchg
cmp
cs
xor
adc
cli
add
cmp
fisubrl
rcrl
xchg
mov
jge
fildl
lds
out
jp
cmp
loop
and
shl
inc
mov
mov
mov
xor
jp,pn
data16
jecxz
mov
inc
mov
test
and
es
pop
jne
cmp
xor
push
push
movsb
movsl
data16
sbb
inc
push
ja
lret
repz
jg
mov
push
jae
jg
pop
dec
pop
out
mov
sbb
push
jae
mov
fnsave
aas
outsb
or
scas
push
test
mov
arpl
mov
js
in
add
push
xor
sbb
add
mov
add
adc
les
fldt
lods
not
icebp
bswap
xchg
xchg
roll
xchg
jb
add
js
mov
repnz
daa
adc
push
mov
xor
sahf
push
aad
outsb
lahf
cli
incb
push
xor
adc
adc
sub
fdivr
enter
fildll
jle
sbb
xchg
cltd
ffree
pop
int
push
mov
jb
xchg
daa
and
testb
in
pop
adc
lods
les
ljmp
cmpl
adc
dec
int3
cmp
aam
mov
jle
dec
lods
sahf
mov
lock
cmp
jecxz
int3
push
add
into
std
sahf
ret
ds
fs
cmp
fs
xor
std
lods
jmp
scas
mov
jge
nop
shlb
adc
mov
add
cmp
in
in
aad
jno
jecxz
rclb
xor
sub
add
imul
pop
pop
xor
xchg
xchg
inc
adc
push
mov
arpl
mov
push
daa
std
repz
loope
cmp
loop
or
sub
pop
inc
sub
fcomps
mov
xchg
xchg
mov
add
shlb
lds
mov
into
addb
mov
addr16
jge
add
mov
movsl
data16
pop
imul
or
xchg
mov
cs
jp
jb
mov
and
aad
ret
dec
inc
pop
repnz
push
ljmp
xchg
dec
lret
mov
dec
or
add
fucomip
ud1
adc
dec
mov
dec
or
test
pushf
and
ja
sub
fwait
lcall
sub
and
mov
or
adc
push
xor
pop
sub
cli
insl
jno
addb
sbbl
mov
outsb
ss
xchg
lret
mov
scas
inc
rorl
and
xchg
icebp
jmp
nop
in
dec
mov
fimuls
ss
inc
jb
add
cli
xor
mov
xchg
clc
xchg
fbld
imul
data16
jb
sbb
xor
out
add
fbstp
dec
movsb
sbb
pop
or
jae
nopl
jle
testb
aad
subb
fbld
push
stc
or
popf
in
imul
push
pop
mov
mov
mov
xor
jno
add
xchg
mov
loop
dec
cmp
fisubrs
out
int
loope
sbb
push
in
adc
sbb
mov
call
loop
inc
mov
rclb
movsl
mov
xor
fisttpll
mov
stos
sub
inc
imul
shrl
lret
jbe
xchg
add
and
cmpsl
out
xor
adc
sbb
ss
out
mull
fsubl
lods
jo
pop
femms
mov
loop
inc
xor
or
adc
pushf
in
or
add
mov
testl
mov
dec
mov
arpl
dec
cmp
std
mov
mov
pop
mov
sub
mov
dec
lret
cs
xchg
mov
xor
call
cltd
sub
dec
pop
aas
call
cwtl
lods
xchg
mov
jno
nop
es
sbb
cld
iret
cltd
fsubs
dec
jo,pn
mov
fcomps
adc
dec
sbb
add
or
mov
dec
xchg
pop
mov
add
arpl
and
enter
lods
push
mov
add
mov
sub
xlat
push
or
adc
andb
dec
imul
lods
mov
movsl
lret
xor
pop
cmp
aad
addl
popa
add
lahf
sbb
ja
in
rorb
cmp
dec
jl
mov
mov
rcrl
cmp
mov
and
jle
addr16
push
mov
mov
aaa
icebp
sbb
dec
out
mov
cmpsb
cmp
jl
push
jecxz
or
or
fistpl
xchg
fdivrp
mov
jge
and
test
cmp
rclb
sbb
adc
inc
jle
sub
push
leave
repnz
cmpsl
mov
xchg
mov
xor
mov
or
addr16
repz
dec
and
jae
inc
call
dec
cmc
lea
or
xor
icebp
pop
aad
mov
clc
loopne
cld
pop
popf
icebp
mov
nop
arpl
or
inc
mov
adc
fisttpl
pushf
fisttpll
inc
lods
mov
out
or
sahf
add
lahf
push
cld
loope
test
dec
xchg
xor
inc
xchg
jmp
lret
leave
gs
or
jmp
add
mov
inc
pop
jg
cltd
cmp
std
xlat
dec
fdivl
inc
push
dec
mov
xchg
insb
bound
pop
push
shrl
push
sub
jno
xchg
aad
fildl
fwait
dec
icebp
adc
sub
cld
xlat
cli
mov
sub
mov
test
add
sub
pop
mov
mov
test
dec
jns
push
dec
or
pushl
es
into
ja
fwait
pop
xlat
push
ret
push
push
pop
cmpsl
hlt
push
push
movsl
fwait
xchg
push
ss
sub
xchg
hlt
out
sarl
mov
adc
mov
xor
add
rcrb
flds
xor
push
sbb
mov
rol
jbe
fucomip
movb
scas
mov
roll
push
sub
push
fwait
jno
push
mov
dec
mov
add
shr
fs
mov
loope
jno
rorl
aas
ds
xchg
outsb
dec
les
adc
jp
cs
push
addl
xor
jae
lret
sahf
mov
dec
int
inc
xchg
nop
pop
in
es
or
scas
jne
mov
sti
mov
pop
add
sarl
jbe
pushf
rcrl
cld
sbb
cmp
or
xor
xchg
loop
xchg
mov
pushw
xlat
mov
jnp
in
dec
push
inc
aas
rorb
jns
ret
and
jnp
loopne
aam
cmpsl
xchg
inc
push
lds
lcall
cli
bound
fs
cs
cmpsb
sbb
dec
ret
dec
lock
inc
cmpl
jb
push
and
sbb
lea
ret
jge
pushf
repnz
arpl
loop
xor
stos
fiadds
mov
jmp
xchg
rcrl
ret
push
mov
pop
push
icebp
xor
mov
cltd
push
lahf
insb
jno
fincstp
data16
adc
iret
mov
inc
int
mov
inc
movsl
jbe
cmp
jno
inc
cmp
sub
mov
or
add
ja
sub
mov
jnp
aad
add
dec
or
out
jmp
lret
pop
sub
pop
rcl
mov
jp
mov
mov
sbb
cmp
jnp
sti
clc
mov
jb
mov
psubsw
sub
ss
cmpsl
outsb
mov
xchg
pop
fisubs
inc
push
out
mov
pushf
dec
popa
mov
xchg
dec
push
ret
jl
pushf
and
push
daa
js
adc
mov
xor
imul
add
pop
call
das
push
test
mov
or
xchg
addr16
repnz
in
mov
popa
jno
pop
pop
xor
inc
jo
xchg
pop
mov
dec
shll
pop
jae
loopne
push
dec
cmc
jg
push
jne
mov
jae
mov
xchg
pop
jg
hlt
stos
testl
mov
imul
jbe
sbb
pop
sbb
adc
outsl
sbb
cld
fcomps
add
and
insb
cli
popa
lods
fstpl
es
mov
fisubs
mov
push
inc
xor
repnz
sub
jge
add
jmp
and
sub
push
or
out
dec
inc
je
push
push
imulb
in
icebp
outsb
xchg
dec
test
test
rol
dec
in
jb
sbb
or
mov
jne
xchg
adc
or
mov
add
cmp
inc
xchg
hlt
call
pop
out
xchg
ficompl
call
add
adc
xor
lods
or
repnz
out
jmp
cmpsb
cwtl
ljmp
scas
xchg
xchg
data16
and
out
mov
inc
lods
cmp
fyl2xp1
sbb
iret
pop
lcall
add
sub
sbb
int
in
cli
and
pushf
lds
or
xlat
sbb
cld
jecxz
xchg
shrb
push
dec
adc
push
push
mov
outsb
rcrb
aam
push
adc
add
roll
cli
xchg
push
push
aad
jns
cmp
adc
cmp
pop
cmpsb
xchg
sub
jecxz
repz
inc
mov
adc
aam
xor
xor
movsb
adcl
cld
or
bound
dec
fidivrl
in
pop
mov
leave
sbbb
mov
std
dec
popa
push
or
ja
in
es
out
das
andl
shr
je
fwait
add
test
ja
rolb
hlt
lret
mov
xchg
cmp
jnp
imul
jno
jmp
lret
xor
mov
sub
aas
xorl
sbb
test
dec
rorl
sbb
sbb
fidivl
mov
out
dec
stos
xor
cmp
into
inc
out
out
push
ss
jl
call
pop
push
into
scas
push
inc
loop
dec
fxch
movsl
mov
cmp
ret
jb
push
ja
mov
push
arpl
loope
clc
je
push
pop
or
arpl
xchg
push
pop
xor
mov
into
loope
lock
in
or
int
cmc
sbb
mov
test
cs
mov
and
jg
int3
fiaddl
stos
xchg
jecxz
cmp
loope
cmp
jb
cmp
xchg
mov
ds
pop
es
dec
test
push
enter
jge
sbb
insl
jb
aaa
mov
push
pop
or
pop
dec
dec
pop
push
pushl
jl
or
or
or
or
push
jp
negb
mov
lret
cmp
int3
jns
insw
hlt
add
jo
and
add
inc
cmp
pop
scas
lds
add
hlt
outsb
mov
jmp
das
mov
sub
adc
mov
les
imul
mov
inc
into
daa
repnz
filds
cmpsb
bound
imul
cmp
mov
xor
aad
nop
fisttps
dec
inc
pop
cmp
pop
std
ficompl
push
push
dec
mov
ror
pop
add
aad
push
xchg
pop
mov
es
jne
inc
rorb
sub
cmpsb
cld
test
adc
pop
add
mov
mov
xlat
push
mov
xchg
inc
pop
mov
inc
xchg
movsl
mov
out
setbe
ds
cmp
out
test
movsb
sbb
xor
push
xchg
insb
insl
mov
call
jl
fucompp
adc
addr16
bound
or
scas
enter
jge
addl
dec
int
fsubr
xchg
stc
cltd
mov
dec
test
xchg
out
mov
or
mov
out
push
sub
jnp
shl
or
cmp
adc
mov
xlat
loopne
mov
jb
stos
sti
int
xchg
out
fistps
xor
lods
jp
and
xchg
dec
push
cmp
fs
inc
jb
aam
test
int3
es
ret
inc
loopne
int
dec
push
add
sbb
xchg
ds
inc
push
jns
sub
imul
fsubrs
dec
rclb
push
imul
inc
add
out
fsubrs
jae
dec
mov
adc
push
xchg
cmpsb
pushf
movb
pop
bound
scas
mov
std
jp
xchg
inc
out
das
out
mov
or
outsb
setno
pop
mov
lcall
xchg
sbb
add
push
mov
in
mov
sahf
in
add
lret
mov
cmp
js
add
adc
and
dec
rorb
aad
xlat
xor
loope
jb
loopne
hlt
je
inc
ficomps
fbstp
str
pop
push
and
popa
mov
inc
lret
test
das
jge
mov
push
dec
shll
xor
cltd
add
xchg
out
dec
pop
dec
daa
rol
out
adc
jmp
or
dec
cld
daa
inc
ljmp
in
test
sbb
sti
mov
mov
fidivrs
ret
popf
inc
inc
shrb
or
push
and
and
sub
inc
push
mov
inc
push
jge
push
and
syscall
mov
fsubs
sub
in
cmp
clc
sti
add
daa
movb
aam
ja
xlat
jp
cwtl
test
sbb
andb
or
pop
and
xor
or
mov
add
and
addr16
ja
sbb
add
out
popf
insl
xchg
aad
imul
insb
mov
aas
ror
insl
pop
pop
lret
dec
fistl
in
xchg
rep
push
popf
lcall
push
cwtl
pop
xor
movsl
pushf
in
xchg
repnz
aas
mov
jle
jo
sub
pop
pushf
push
jle
mov
loope
jge
xor
mov
scas
mulb
dec
imul
adc
in
out
rclb
jmp
push
mov
pop
adc
lret
and
stos
sbb
inc
jne
dec
cmpsl
mov
iret
add
push
inc
testl
xor
test
xor
sbb
cmp
cmpsl
and
lcall
xlat
fdivl
push
push
imul
test
outsb
push
mov
pop
sahf
push
imul
fwait
dec
jge
decl
push
mov
bound
dec
mov
je
je
pop
mov
add
push
rorb
mov
xchg
test
push
mov
cltd
mov
pop
dec
movsb
xor
sarb
xchg
pop
dec
clc
xor
lahf
pop
daa
mov
sbb
sub
lcall
aas
xchg
sub
jne
dec
push
sbbb
fldl
or
xor
repz
jge
jmp
sub
lds
inc
and
das
mov
dec
xor
cli
pop
aam
mov
jno
je
sub
scas
rclb
js
in
nop
je
and
ss
xor
mov
or
popa
test
and
jmp
cli
outsb
mov
mov
xor
inc
adc
sub
mov
adc
and
cmc
xchg
mov
and
nop
dec
movsb
sbb
test
in
or
or
inc
movsl
or
fnsave
ret
or
loopne
mov
bound
xor
out
ret
gs
and
or
sub
jl
cli
cmp
dec
cwtl
daa
jne
clc
mov
bound
lret
pop
jae
fs
mov
jmp
jb
ljmp
jbe
xor
mov
mov
dec
push
xor
ljmp
clc
out
movl
fisubrs
sub
dec
adc
imul
test
dec
adc
sub
jmp
mul
pop
sub
cld
negl
inc
pop
out
sbbl
push
sbbl
xor
inc
call
cmp
jne
ficoms
xchg
rcrl
fnsave
sub
andl
sbbb
xchg
push
xchg
test
mov
ret
sbb
es
fisubrs
xchg
or
push
dec
mov
insl
out
pop
je
push
inc
rorl
inc
insb
jmp
mov
popf
in
inc
sbbl
gs
lcall
mov
and
pop
orb
dec
sbb
das
pushf
call
xor
call
inc
out
daa
daa
outsl
ja
add
and
mov
xchg
mov
fwait
imul
sbb
inc
cld
dec
fmull
les
daa
push
and
loopne
data16
lock
mov
arpl
xor
insl
clc
jo
lret
out
pusha
sub
mov
test
loop
std
in
pushf
ja
xor
int
dec
ja
add
xor
cs
dec
aad
jae
mov
sbb
dec
lea
xor
mov
std
jp
outsl
push
scas
out
ficomps
mov
sti
aaa
xor
test
push
aaa
push
xor
mov
dec
and
push
xor
fsts
stos
bound
sbb
xor
lret
jno
lods
aam
mov
fs
xor
jecxz
cmc
in
mov
pop
popa
mov
push
cmc
testb
lret
xlat
lock
cwtl
ja
jle
lahf
cmp
loope
pop
inc
repnz
cmpsl
and
decb
rcl
cmpsb
or
xor
mov
pop
insb
scas
cli
push
cmp
lahf
test
xchg
outsl
cmp
iret
adc
mov
inc
je
xchg
shlb
cwtl
mov
mov
test
push
mov
inc
cmc
call
js
push
mov
sti
pop
adc
sbb
mov
ja
test
cmp
in
mov
hlt
cmpsl
xor
cs
add
jo
jle
jle
inc
dec
hlt
xchg
mov
out
rcrb
push
cmp
or
push
sub
lds
adc
cmc
push
dec
stc
repnz
aad
dec
jns
loop
aad
jnp
mov
sub
bound
pop
js
cmp
es
mov
mov
jmp
push
enter
out
and
sbb
mov
mov
jle
daa
add
fists
add
pop
or
xor
jmp
fs
adc
cwtl
pop
lcall
push
cmp
and
in
lods
aaa
or
ffreep
lods
xchg
xchg
sub
pop
popf
jb
inc
fstpt
cmpsb
push
and
inc
ljmp
adcb
mov
aam
xor
pop
push
rorb
jle
aas
loop
or
add
push
adc
inc
ret
and
fs
test
or
push
pop
mov
add
add
in
data16
xor
adcb
jg
popf
mov
mov
sar
cmpsl
stc
push
imul
mov
jae
lret
sbb
push
mov
push
shll
repz
adc
pop
cltd
ds
jbe
push
ljmp
lds
repz
aad
lods
pop
cmp
int
push
jle
and
shl
inc
pop
xchg
or
jb
mov
hlt
aad
fiadds
movsb
je
inc
pop
mov
inc
into
cmp
insb
mov
leave
inc
fisubl
fimuls
cmp
mov
cltd
jp
cmpsl
mov
or
xchg
cmp
xor
jecxz
mov
xor
xchg
mov
test
sub
add
ja
lods
fucomi
scas
repnz
xchg
es
imul
mov
mov
imulb
test
cmp
js
cmp
push
leave
xor
xor
dec
pop
out
dec
jge
ss
xor
imul
or
flds
int3
pinsrw
dec
insb
cmp
push
xor
or
push
in
jg
and
or
mov
test
cmpsl
popa
nop
xlat
ret
outsl
mov
ss
fucomp
in
sti
lret
jle
push
iret
push
push
bswap
add
pop
enter
pusha
test
jge
and
fisttps
rcll
or
pop
add
lods
xlat
int
fstl
fnsetpm(287
xor
enter
mov
inc
xlat
imul
fisubs
push
jmp
insb
fbstp
in
cmp
xchg
ss
cmpsb
sub
adc
push
pop
push
xor
dec
in
jg
movsl
ljmp
pop
fisubl
mov
mov
dec
xchg
xor
pop
xor
insb
cmp
fs
xor
lahf
jo
xor
sub
xchg
pop
add
loope
stc
in
test
int3
push
mov
je
rclb
inc
je
mulb
popa
scas
repz
jle
cmp
push
push
mov
mov
aaa
aad
test
or
or
pop
test
sbbb
and
xor
sub
push
pop
cltd
mov
mov
adc
and
sub
outsl
mov
cltd
pop
xchg
add
pop
out
xchg
or
adc
mov
ret
test
pop
adc
sbb
shll
imul
js
iret
call
or
sub
mov
xor
int3
mov
jbe
mov
mov
mov
movsb
jae
lds
pop
pushf
sbb
repnz
push
mov
xchg
iret
aad
add
arpl
sbb
cwtl
out
push
sub
imul
je
sub
adc
imul
adc
pop
jb
push
jmp
stos
movsb
cwtl
leave
jne
add
fcomps
adc
outsl
fs
lods
xchg
or
ret
pop
test
mov
cmp
mov
daa
pop
mov
cmp
pop
bound
xchg
test
shr
in
cli
jecxz
push
cwtl
addr16
addr16
and
adc
dec
xchg
je
lods
sub
push
add
mov
mov
pop
mov
cld
fnstsw
cmp
xor
ret
popa
ss
cwtl
cmp
add
arpl
adc
mov
ret
adc
fdiv
xor
jmp
or
loop
jae
cs
mov
ret
je
stos
inc
rcrb
sbb
loope
and
in
cltd
test
adc
sbb
scas
outsl
insb
iret
cmp
aas
repnz
mov
insb
stos
testb
and
stos
int3
add
push
xchg
ja
xchg
push
js
movsb
repz
cmp
outsb
fdivl
imul
jae
xchg
sbb
popa
cmc
test
xlat
movsl
das
incb
mov
push
sar
arpl
push
cmp
pop
ficoml
ds
aam
movsbl
mov
imul
lods
adc
sbb
add
stos
mull
fsubrs
mov
test
dec
ljmp
mov
mov
sbb
scas
test
lock
mov
arpl
shrl
and
adc
sbb
inc
lcall
cmp
mov
jns
jmp
stc
pop
into
loopne
mov
push
jbe
adcb
jmp
push
sbb
repz
mov
lret
add
xor
sub
fbld
jbe
pop
mov
mov
pop
jg
mov
inc
pop
outsb
push
cli
pop
xchg
push
sbb
addr16
xor
es
dec
sbb
inc
xchg
or
xor
lea
mov
mov
push
jns
pusha
es
les
jne
add
jns
int3
inc
or
pop
aad
inc
jge
rorb
add
call
mov
xor
int3
outsl
sub
cltd
dec
test
sbb
cmc
mov
subb
mov
scas
jle
fisttps
cs
repnz
fld1
or
lret
adc
xor
nop
jb
dec
bound
jp
push
jae
add
cmp
fs
movsl
adc
lcall
dec
pusha
and
push
and
pop
jns
mov
pop
add
aad
or
fs
aam
and
inc
jmp
pop
ja
xor
mov
add
jg
dec
in
jo
adc
jl
stos
xor
into
aas
mov
and
xor
xor
mov
int
ljmp
pushf
cmp
in
div
fmuls
mov
sub
xlat
lahf
mov
test
pushl
xchg
ja
es
mov
lret
cmp
enter
enter
movsb
outsl
andl
sbb
pushf
jae
fidivl
dec
sbb
in
pop
push
xchg
xchg
push
stos
fs
test
pop
cltd
pop
sbb
inc
and
js
repnz
xchg
pop
add
fsubs
in
stc
movsl
aas
cld
jmp
fcmovnu
pop
ucomiss
inc
or
pop
ret
in
pop
lea
loopew
xor
inc
clc
loop
jb
dec
dec
out
adc
cmc
in
test
orb
outsl
sub
pop
cmpb
imul
pop
scas
xor
sti
jg
stos
xlat
push
loop
loop
jb
push
aam
stc
lds
pop
scas
pop
xchg
xchg
negl
xchg
mov
dec
aas
cmp
cmp
adc
jg
jno
xchg
mov
inc
adc
daa
pop
pop
and
mov
nop
divb
fcmovnb
lods
test
inc
jno
and
jb
cmc
jnp
push
sbb
lods
adc
inc
scas
fistpll
outsb
call
jp
fdivrs
insl
xchg
test
push
sbb
mov
sbb
aaa
lock
call
lcall
dec
xchg
ja
ds
sub
mov
int
xor
mov
clc
dec
push
xchg
xor
fmulp
push
test
inc
mov
outsb
stos
js
in
cmc
mov
jp
ja
lock
fstps
jae
scas
fistpl
inc
cmp
and
pop
adc
jbe
push
ret
outsl
pop
and
test
adc
cltd
mov
arpl
lret
mov
loopne
mov
movl
xchg
sub
incl
in
push
in
clc
mov
or
inc
xor
dec
lea
int3
stos
clc
adc
cmp
aad
rclb
sti
or
cmpsl
add
divl
sub
ljmp
mov
lret
xor
pop
mov
pop
ljmp
jp
pop
lods
jnp
std
das
pop
aad
sbb
adc
jne
push
dec
ret
iret
xchg
arpl
std
cli
arpl
sahf
xchg
mul
paddusb
pmuludq
push
sbb
dec
arpl
subb
or
imul
push
mov
dec
lret
or
ja
into
fs
lods
push
xchg
fs
fbstp
adc
pop
pop
xor
dec
mov
mov
test
jno
sbb
pop
test
jno
aad
out
xchg
jmp
out
repz
jbe
cmpl
xor
dec
mov
popf
push
push
lock
lcall
jne
xchg
imul
test
push
repnz
mov
xchg
jae
ret
cmp
in
jno
and
icebp
xlat
fucomip
pop
sbb
or
mov
pushf
repnz
or
pushf
faddl
adc
bound
outsb
jnp
and
inc
inc
outsb
outsl
jl
shrl
jns
xrelease
stc
into
loopne
cmp
pushf
sub
stos
hlt
push
sub
ret
divb
lods
mov
out
cli
shl
sbb
pop
shl
addr16
xor
adc
sar
mov
cmpsb
add
pop
jnp
cmpsb
rcll
ja
outsl
repnz
int3
push
or
gs
aaa
sbb
dec
inc
jns
daa
dec
out
adc
gs
mov
or
pop
mov
inc
pop
jb
mov
sbb
addr16
xor
push
inc
adc
cmp
sub
sub
pop
adc
mov
icebp
mov
test
aad
sub
fucom
cmc
dec
subb
xor
cmpsb
dec
jmp
mov
xchg
rcr
jp
ljmp
pop
mov
add
int
cli
enter
je
sbb
xchg
mov
pop
ficompl
mov
jb
out
mov
mov
in
fwait
xor
dec
in
addl
in
cld
inc
xchg
and
cli
xor
cmp
adc
push
lea
aam
push
lret
lcall
gs
sub
cmpsb
mov
or
das
out
outsl
ss
je
ljmp
lds
xchg
adc
fcoml
dec
jle
push
xor
xchg
test
sbb
popf
sub
leave
jl
mov
lret
popa
sub
add
mov
cmp
cmpsl
push
mov
adcl
adc
or
iret
js
mov
jg
cltd
cmp
cld
insl
aad
inc
mov
xor
shll
test
in
pop
sbbb
dec
les
dec
and
sbb
lods
mov
xor
subb
rolb
mov
stos
filds
pop
xchg
sub
nop
pop
mov
cmpsl
add
lcall
sbb
xchg
sbb
xchg
adcb
jmp
fadds
push
jo
pusha
cltd
xchg
xchg
ljmp
push
sbb
dec
imul
pusha
in
mov
mov
pop
insb
xchg
sbb
ret
jl
rcll
sti
sbb
sub
dec
dec
sbb
ljmpw
sub
cs
lods
mov
outsb
fisttpl
xchg
push
stos
dec
push
sahf
out
lds
in
daa
mov
pop
xlat
pop
mov
dec
pop
mov
fisubrs
mov
cmp
inc
jg
lds
or
rclb
inc
mov
stc
sbb
dec
int3
or
mov
push
int3
xor
out
mov
test
push
ljmp
jo
enter
adc
adc
aad
lcall
div
add
push
outsb
sbb
stos
je
push
jmp
mov
test
ficomps
hlt
inc
mov
test
push
xor
jo
dec
das
and
push
repnz
test
sub
jle
sbb
push
sub
mov
xor
sub
inc
mov
lea
adc
xorl
and
jo
bound
sub
aaa
pusha
jle
pop
clc
and
push
idivb
out
or
and
test
jle
lret
jne
inc
and
sti
shll
jl
xor
push
mov
jp
dec
hlt
push
xchg
pusha
sahf
pop
stos
sub
cmp
outsb
adc
test
dec
cwtl
mov
mov
inc
cmp
push
sbb
mov
ret
fstp
stc
mov
mov
enter
subb
insb
outsb
nop
mov
sahf
and
out
ror
out
mov
ficompl
mov
jecxz
in
testl
mov
pop
pusha
xchg
adc
arpl
js
mov
mov
or
adc
jl
xor
shl
fnstenv
movntq
mov
mov
add
movsl
dec
mov
dec
add
xchg
nop
push
cwtl
pop
adc
or
xchg
mov
jno
stos
in
push
aam
pop
mov
jnp
cld
sbb
add
ljmp
addr16
jp
sbb
test
addr16
add
lret
jl
adc
fnstenv
xlat
pop
or
out
movsb
jae
sarl
xchg
insb
jge
dec
push
and
jl
adc
pop
lahf
pop
cwtl
stc
lret
fs
rcl
insl
dec
aam
mov
inc
enter
push
loopne
pusha
jge
cmp
xchg
pop
cmc
movsb
xlat
sbb
mov
test
aad
mov
mov
jnp
sarb
pop
push
xchg
push
pop
xchg
gs
out
and
pop
outsb
pop
lea
mov
push
jecxz
and
aam
pop
movsl
push
and
pusha
add
lds
mov
xor
cmpsl
cwtl
lea
mul
ficomps
push
shll
clc
lret
mov
mov
mov
xor
or
pop
cmpsb
mov
call
popf
push
stc
test
jge
jle
xor
pop
sbb
jl
mov
jbe
push
lahf
iret
int
test
stc
jns
mov
sub
sti
stos
outsl
adc
add
cli
insl
pop
sub
icebp
push
pop
mov
jmp
cmp
xor
mov
and
pop
popf
dec
xchg
mov
loope
jle
repz
cmp
rorl
sub
cmpsl
inc
pushf
adc
and
xchg
aad
xor
in
fldl
and
rcrb
aam
push
sub
iret
dec
lods
mov
call
or
pop
shrb
iret
int
addl
lods
icebp
sub
or
and
jne
in
and
shlb
xchg
stos
dec
js
shll
movsb
or
in
ret
stos
jg
ss
mov
mov
push
rclb
test
adcl
rorb
scas
orl
cmp
bound
test
cmc
adc
fwait
sub
aad
ljmp
mov
mov
icebp
inc
mov
clc
insl
fiaddl
xchg
lret
divl
cmp
sbb
adc
fs
clc
sub
mov
imul
jno
xlat
sub
mov
mov
cmc
pop
icebp
ds
add
loop
pusha
cmp
pop
sbb
pop
inc
jbe
sub
inc
out
jp
sub
dec
pop
outsl
loop
inc
or
rcl
popf
pusha
sbb
lahf
dec
cmc
adc
push
xor
ss
out
pop
mov
xchg
lcall
and
je
xchg
arpl
mov
ds
push
test
sub
inc
cmpl
leave
subl
mov
push
mov
call
add
push
fucomi
dec
das
dec
movsb
jo
loope
sub
in
mov
rorb
fsubs
js
or
repnz
gs
loope
in
jne
aad
in
push
cmpsl
add
adc
xor
dec
out
fs
stc
lcall
xchg
test
cmpb
repnz
mov
fildl
dec
scas
inc
mov
xor
testb
mov
repz
cmp
repnz
xor
imulb
pop
mov
sarb
add
arpl
daa
mov
mov
out
inc
sbb
push
push
test
fdivp
mov
xchg
scas
ret
fmuls
hlt
jle
popf
xrelease
js
sar
std
nop
or
sbb
fld
jb
add
mov
pop
into
js
andb
inc
pop
fisubs
adc
fbld
clc
and
xor
stos
ljmp
test
aas
push
mov
and
mov
mov
mov
loop
pop
add
fwait
sbb
xchg
movsl
lret
mov
leave
dec
lahf
out
popa
xor
pop
outsb
or
xor
mov
xlat
into
ficoml
pop
dec
out
pop
int3
pop
mov
cmp
cmpb
sub
adc
jmp
std
mov
dec
stos
popf
cmp
pop
inc
push
cmp
out
popf
or
cmp
shl
ret
and
mov
test
mov
push
pop
or
mov
or
mov
popa
sub
inc
repz
adc
mov
xor
std
push
mov
stc
scas
lret
add
out
popa
xor
imul
es
adc
and
outsb
loopne
inc
dec
call
cmpsb
pop
lods
xchg
aam
icebp
cmp
insl
aad
or
mov
insl
cmp
daa
test
mov
sbb
jecxz
jmp
aaa
inc
dec
pop
mov
cmp
cmp
dec
mov
dec
fbstp
pop
shlb
stos
inc
lds
sub
pop
add
or
daa
sar
pushf
push
mov
pop
and
mov
sbb
mov
jge
push
jecxz,pn
jns
lahf
repnz
scas
daa
shll
data16
ret
sub
ljmp
into
pop
jns
imul
popf
sub
std
fs
jae
in
jno
sbb
gs
shlb
xchg
in
add
test
sbb
xor
inc
and
lar
ss
vmulps
mov
daa
xchg
mull
lods
out
sti
xchg
lock
lods
int3
push
mov
cli
push
insl
mov
loop
mov
popa
mov
scas
dec
arpl
push
jb
inc
jns
stos
add
stos
lods
jae
mov
aam
adc
mov
out
jmp
cltd
xor
jne
adc
pop
lock
scas
ss
fildl
lods
fidivs
aaa
push
int
push
fidivrl
in
arpl
and
jg
mov
adc
in
cmpsb
cld
cmp
stos
inc
push
or
mov
incb
call
into
adc
in
loop
gs
jge
jbe
xchg
sub
stos
cld
adc
rorl
dec
in
adc
jne
cmp
mov
xchg
dec
and
add
inc
int3
out
ja
shlb
gs
cmp
sbb
fdivl
push
in
cmp
mov
jge
jo
pop
cmpsb
push
sbb
xchg
pop
clc
and
pop
and
mov
les
ret
out
ljmp
rcll
dec
shlb
fisttps
pop
and
out
adc
in
pop
into
enter
mov
ljmp
inc
cmp
mov
insl
xor
aam
cld
mov
or
loop
push
mov
aas
loope
dec
loopne
cmpsb
flds
sbb
mov
and
int
or
cwtl
inc
cmp
ret
mov
xor
imul
ds
cld
test
dec
pop
imul
das
add
rorl
pop
mov
mov
push
mov
push
inc
test
jns
aad
and
or
mov
in
xor
jo
nop
cwtl
adc
adcb
dec
or
or
jo
or
add
ficoms
pushf
lock
add
test
xchg
popf
loope
mov
inc
sahf
int
js
pop
lds
movsb
hlt
movsb
fsubp
aam
xchg
mov
mov
adc
repnz
ja
adc
jmp
imul
pop
lock
ficomps
sub
inc
xchg
push
cmp
in
sub
movsl
js
pop
retw
adc
or
idiv
inc
ja
push
pusha
stc
js
js
jl
dec
add
xor
cmp
and
or
pop
clc
and
movsb
pop
or
inc
stc
out
mov
ret
pop
in
adc
aas
inc
push
icebp
xor
out
push
inc
lret
stos
jle
sbb
mov
test
pop
inc
es
jns
insl
mov
sub
in
pop
push
jge
xor
ljmp
cmpsl
jnp
mov
sub
xor
sub
mov
fidivs
push
ss
loop
add
in
push
xor
jo
xor
mov
xor
xor
repz
push
scas
movsb
data16
sbb
ret
mov
aaa
imul
or
sti
mov
push
adc
inc
shrb
fisttpl
in
mov
sub
pop
cmp
in
out
fwait
dec
fs
es
stos
push
sub
mov
mov
aad
jo
dec
or
dec
imul
daa
sbb
mov
std
jb
jge
dec
fiaddl
mov
push
fsubs
xchg
adc
push
xchg
cmc
jle
lret
out
push
xor
pop
xchg
nop
ret
xor
mov
cmp
jo
or
mov
aas
jmp
fwait
xlat
mov
loopne
mov
xor
jne
push
dec
xor
mov
or
test
gs
sarl
xor
adc
cmp
pop
ljmp
sarb
je
insb
hlt
repnz
pushl
pop
and
hlt
ds
flds
js
xchg
or
inc
movsb
incl
push
inc
xchg
mov
inc
add
dec
fs
daa
hlt
dec
popa
or
loopne
mov
cmpsl
mov
xor
xchg
mov
jmp
iret
sbbb
aaa
jnp
or
sbb
lret
xchg
pminub
jno
mov
cmp
out
or
mov
and
outsb
xchg
push
aam
outsl
data16
lods
insl
scas
clc
and
insl
mov
je
xor
addb
loopne
pop
lcall
test
aas
popf
add
sub
pop
loop
je
push
mov
ja
push
stos
xchg
mov
js
aas
push
mov
or
dec
pop
aaa
xchg
cmp
rcl
fcoms
and
es
mov
enter
shrb
inc
lahf
jg
add
fs
xor
test
push
insl
dec
inc
pop
dec
cmp
ljmp
mov
mov
out
push
mov
lahf
in
xchg
fs
cmp
cld
mov
and
dec
enter
and
push
ss
cmpsb
dec
dec
xor
clc
sub
ljmp
arpl
fs
lret
push
pop
test
lods
and
pop
fisubrs
aad
adc
fs
out
test
xchg
aaa
aas
sub
ja
cmp
pushf
cmc
bound
icebp
divl
lock
ja
inc
cli
cltd
lds
pop
or
out
inc
adc
xchg
popf
lock
or
iret
bound
xor
mov
sub
cltd
std
jns
add
adc
adc
ds
pop
inc
pop
arpl
lret
cltd
mov
and
mov
mov
sub
cmpb
lds
or
es
aam
stc
subl
loopne
lahf
adc
mov
lock
jle
dec
daa
inc
push
adcb
into
add
repnz
nop
mov
push
or
les
test
test
pop
push
movsl
inc
outsl
insb
int
roll
push
or
lods
popa
xchg
leave
mov
sub
mov
pop
scas
or
jb
sub
add
shll
cltd
scas
mov
mov
xchg
xlat
jecxz
loopne
mov
das
rorb
cmc
and
inc
shl
sbb
pusha
mov
pop
cmp
data16
dec
les
dec
adc
mov
arpl
and
loopne
jae
dec
cmpsl
stc
dec
sahf
jne
test
push
sahf
mov
int3
loop
fadd
dec
push
ret
insl
gs
jl
jno
inc
gs
imul
fisubrl
mov
arpl
shlb
aam
insb
mov
cmp
insl
sbb
loope
lods
sbbl
pop
xchg
cli
adc
push
mov
sub
adc
xor
xchg
cmpsb
pop
pop
enter
jecxz
sbb
push
aad
fidivs
aam
imul
std
and
shlb
mov
adc
push
sub
xchg
dec
lar
cmp
fbld
stc
fimull
jno
jnp
pop
mov
leave
lret
and
in
idiv
cwtl
inc
adc
mulb
pop
adc
cmpsb
loopne
xlat
inc
rcl
xor
mov
fmul
xlat
dec
jnp
mov
mov
or
sahf
and
inc
iret
sub
pop
call
mov
notl
cmpsb
mov
mov
test
imul
sub
outsl
stos
pushf
ss
mov
sbb
repnz
jb
push
push
enter
push
imul
out
lock
and
cli
jbe
aas
aaa
cmp
mov
inc
or
in
xchg
cli
ss
jg
mov
jge
ja
and
push
cmp
int
jge
imul
dec
mov
add
xchg
sbb
mov
cmp
in
repnz
mov
add
aam
add
inc
test
mov
push
lahf
dec
and
dec
cmp
mov
and
das
add
mov
jo
lahf
addr16
mov
and
sbb
sub
das
mov
xchg
or
mov
inc
in
push
rcr
ret
cmpsl
aaa
aam
sbb
dec
jecxz
fwait
push
mov
push
inc
shlb
fsubrs
cs
sbb
insb
xor
clc
fisttpl
add
add
out
repz
mov
jmp
jae
push
bound
mov
dec
cmp
add
adc
mov
dec
sub
dec
lcall
fs
pop
lcall
and
and
push
mov
adc
call
jns
jns
rorb
cmp
or
pop
mov
cmpsb
xchg
test
dec
lcall
sub
addr16
push
push
cmpsb
mov
jne
andb
rol
cmc
addl
outsl
cs
cwtl
adc
js
aam
mov
pop
sub
cwtl
xchg
movsb
or
jecxz
mov
pop
sub
subb
xor
xor
pop
push
xchg
jbe
jge
mov
xchg
pop
nop
sbb
pop
adc
add
or
and
mov
imul
xchg
in
lods
lcall
or
repz
int
xor
fwait
sub
into
iret
cmp
cmp
in
sbb
leave
nop
xor
stos
pop
inc
pop
or
adc
add
jp
bound
mov
jns
mov
jb
push
fdecstp
inc
shl
lds
push
push
jo
pop
testl
pop
push
mov
cltd
sbb
xor
mov
mov
sahf
lds
das
ffree
leave
pop
push
push
jo
mov
lcall
in
dec
add
sub
sub
push
add
mul
sub
or
aad
enter
mov
notb
sub
mov
mov
pop
sti
inc
and
cmp
cmpsb
mov
cltd
nop
xor
movsl
loope
mov
arpl
out
inc
sub
dec
dec
fcoml
xor
mov
negl
fistps
jmp
fsubrs
jmp
add
mov
mov
and
or
arpl
insl
xchg
inc
cmp
cli
cli
dec
test
ljmp
je
mov
xor
je
sahf
xchg
push
notl
loop
popf
je
stc
ljmp
add
mov
test
mov
shll
push
sahf
push
add
adc
dec
push
mov
sar
fs
gs
scas
lods
movsb
fistpll
jns
inc
sti
in
pop
adc
movsl
or
xchg
adc
aam
int
testb
xchg
out
loope
xchg
mov
or
xchg
lret
test
xchg
sahf
jo
sub
jmp
sbb
push
cmp
cmovno
adc
sti
cmp
popf
mov
repz
das
or
adc
sbb
lods
jno
movl
cmp
outsb
xor
pop
adc
in
lea
sub
push
ret
add
cmp
mov
mov
out
out
sbb
sub
adc
mov
cmp
adc
insl
rorb
dec
sbb
push
popa
dec
adc
sbb
inc
inc
inc
jne
aaa
xchg
cwtl
rolb
and
sti
stos
in
mov
mov
insl
inc
pusha
add
dec
bound
jp
mov
or
sbb
sub
cltd
in
pop
mov
or
in
or
into
jecxz
mov
std
inc
sti
sbb
insb
movb
jb
pop
je
xchg
mov
mov
inc
dec
scas
ja
ja
mov
test
xchg
fisttpl
les
mov
cltd
in
push
pop
mov
xor
je
mov
push
je
gs
lahf
adcl
and
xchg
roll
sbb
inc
dec
adc
lods
in
mov
bound
pop
test
stos
mov
xchg
icebp
test
cmp
inc
fcomps
or
out
movsb
jg
push
dec
test
int
stc
stos
pop
aam
inc
cmpsl
mov
dec
adc
xor
test
pop
or
data16
pmaddwd
or
mov
inc
iret
push
pusha
leave
cltd
test
cmpsb
ljmp
inc
add
jae
add
rcrb
mov
ret
pop
push
stos
lock
or
jmp
adc
into
and
in
stos
dec
scas
clc
insl
inc
movsl
xor
js
push
adc
les
leave
cmp
inc
inc
popa
mov
xchg
fcmovnb
inc
aaa
pand
cmp
cltd
enter
incb
mov
gs
xchg
outsb
jb,pn
mov
shll
sbb
push
or
test
pop
ss
data16
fnstsw
out
popa
pop
dec
dec
shll
daa
jg
insb
mov
adc
adc
std
ljmp
ss
mov
js
lea
pushf
pop
cmc
jne
dec
and
je
sbb
xchg
and
and
insb
rcrb
call
cmp
mov
flds
int
cs
mov
mov
pusha
dec
enter
imul
jecxz
push
jl
int3
inc
mov
inc
imulb
inc
mov
xchg
popa
jmp
adc
add
xchg
push
pop
xchg
adcb
fildll
or
fucomp
test
mov
dec
xorl
add
xchg
rcl
into
out
jae
xor
cmp
inc
and
cmp
subb
dec
add
inc
mov
mov
xchg
xchg
shr
sbb
idivb
fdivs
dec
dec
addr16
and
add
bound
fidivrs
push
loop
mov
aad
shl
jnp
pop
xchg
test
sub
sub
sbb
add
scas
mov
mov
imul
push
cmpsb
test
sahf
stos
dec
iret
xchg
inc
jmp
andl
arpl
and
jecxz
jo
mov
mov
mov
ja
je
mov
in
xchg
shlb
sub
dec
rol
mov
mov
xorb
repz
shlb
cli
push
out
mov
leave
test
and
xor
and
jmp
push
dec
cmp
pusha
test
xor
insb
dec
popa
jmp
mov
int
inc
sub
sbb
mov
fisttpl
arpl
hlt
sarb
call
push
pop
jb
cmp
push
pop
ljmp
pop
pop
ss
imul
in
dec
inc
cmp
mov
stos
adc
scas
push
and
xor
cmp
addr16
lods
cli
lea
push
mov
lahf
in
mov
rep
xorb
ja
les
adc
jmp
pusha
add
andl
mov
dec
in
mov
jbe
mov
push
sub
int
fnstsw
mov
mov
lock
pushf
mov
jl
insl
aas
jecxz
daa
pop
rcrl
mov
pop
adc
mov
mov
pop
and
adc
test
adc
test
das
jl
xchg
xor
lods
mov
daa
inc
adc
divl
call
or
fs
stos
fs
hlt
mov
in
jo
add
out
sbb
movsl
xchg
xlat
push
fbld
dec
lds
imul
mov
add
stos
jmp
sub
shl
aas
jns
cli
push
pop
cwtl
mov
xor
aaa
mov
sub
xchg
int
roll
push
push
mov
and
ljmp
or
in
cmp
xlat
ljmp
movsb
mov
add
loope
fs
cli
add
enter
sbb
enter
shll
movsb
cli
jge
cmpb
pop
ds
lock
xor
mov
pop
sarb
pop
push
cmp
mov
loop
sarb
cld
mov
adc
add
hlt
dec
inc
fsubl
repnz
lock
lcall
pop
and
sbb
push
push
push
in
fwait
das
cld
mul
jmp
outsb
outsl
mov
and
mov
negb
cmpsb
xchg
add
dec
aad
andl
mov
xchg
pop
push
cli
mov
fmuls
je
hlt
push
lea
repz
rorb
enter
movsb
jae
xor
jp
jge
orl
cwtl
popf
lahf
pushf
mov
filds
push
popf
cwtl
rorl
push
dec
int
push
and
lret
lcall
xchg
and
mov
mov
lds
push
add
outsb
xor
pop
fdivl
jecxz
in
cmp
lret
or
sti
or
in
mov
fsubrl
cmp
sub
jp
lods
adc
es
out
xchg
jg
test
cmp
ror
out
cmc
and
leave
sbb
inc
inc
mov
andb
mov
push
dec
outsb
mov
mov
stos
fistps
out
andb
dec
into
dec
icebp
fcom
pushf
inc
fs
negl
push
mov
out
or
add
inc
jae
xchg
sub
pusha
jnp
fs
mov
insb
pop
mov
ret
or
ja
dec
sbb
addr16
out
movb
imul
mov
xor
sahf
daa
aas
push
inc
ret
sbb
mov
cmp
fistpl
scas
rcll
loopne
cld
xor
iret
jmp
mov
jl
mov
popa
dec
pavgw
dec
sarl
popf
and
pop
jle
or
mulb
mov
out
dec
ljmp
mov
jmp
test
sbb
test
lahf
dec
mov
mov
pop
cmp
mov
out
sub
jns
call
test
scas
jno
jns
arpl
imul
mov
adc
push
popa
inc
or
dec
pop
adc
ret
stc
dec
lret
les
pop
ds
pop
lret
loop
imul
mov
movsb
je
adc
loope
mov
imul
fsubrl
adc
mov
pcmpgtd
bound
enter
push
xlat
xchg
shlb
hlt
addr16
loope
cmovp
sub
cmp
push
negl
add
cmpsl
dec
leave
and
or
icebp
inc
inc
les
or
xlat
mov
clc
rcrl
and
in
sbb
sti
insb
xchg
idivl
jnp
insb
pop
push
inc
ss
inc
cmpsb
and
inc
or
jns
addr16
fadd
int3
shll
dec
and
xor
adc
adc
mov
fmull
fildll
cmp
dec
stos
das
pop
cli
or
dec
psubusb
rol
lods
or
jge
subb
repnz
inc
bound
mov
cmp
push
call
imul
cmpsb
push
and
dec
pop
cmpsb
es
outsb
out
pushf
add
cmp
repnz
pop
dec
sbb
movsb
xchg
cmp
repz
and
lahf
pop
sahf
test
inc
lock
loopne
fprem
popa
in
pop
std
loope
popa
bound
cmp
mov
sub
adc
dec
cld
xchg
xor
mov
dec
mov
push
lds
ljmp
xchg
xor
es
dec
imul
pop
leave
and
js
lcall
ds
call
test
sbb
in
imul
ljmp
cs
into
les
clc
gs
pop
popf
insl
jl
rcll
or
jecxz
cmp
xor
sbb
jns
aam
push
add
shll
inc
arpl
test
xor
inc
and
fnstcw
inc
out
xchg
jno
leave
pushf
mov
pop
add
lret
fwait
push
xchg
scas
inc
dec
lods
inc
cwtl
in
and
inc
nop
call
xor
loope
imul
jle
fcoms
push
pop
xchg
push
cli
pop
xchg
inc
iret
mov
inc
push
cmp
jne
movsl
mov
mov
xor
jno
mov
lods
xor
fnstsw
stos
add
ja
lods
hlt
testb
jns
pop
mov
mov
inc
mov
test
inc
scas
fwait
push
out
mov
out
jge
lea
pop
mov
pop
pop
movsl
or
subl
or
and
shll
test
call
jb
movsl
and
dec
stos
pop
cmp
add
jp
cmp
das
jl
testb
movl
push
es
pusha
cmc
push
jnp
sub
stos
xor
lods
inc
pop
add
pop
out
push
push
mov
push
jge
inc
scas
cmpsb
or
lods
adc
jb
out
clc
test
and
dec
or
jp
dec
inc
xchg
push
jecxz
sub
and
push
push
jmp
cmpsl
aam
lods
aam
pop
pop
cmpsb
loope
aam
arpl
rol
mov
mov
and
call
cltd
xchg
lcall
cli
aad
std
stc
jcxz
pop
adc
add
and
and
cmp
out
add
mov
mov
pop
xchg
cmp
inc
mov
cmp
xor
push
xor
ss
in
out
ret
stos
cs
sarb
popf
out
lods
test
mov
dec
and
imul
cmp
mov
pop
lods
aad
fiaddl
jecxz
addr16
adc
and
pop
fsubrs
sbb
push
shll
dec
xchg
aaa
stos
mov
push
mov
jae
out
fldl
mov
sbb
jge
xor
sbb
mov
mov
addr16
and
mov
ja
imul
test
cmpsb
testb
lods
cmp
mov
pop
hlt
mov
xlat
jno
cmp
test
add
inc
xlat
or
ret
inc
out
sbb
aas
movsl
jae
dec
add
xor
add
xchg
mov
das
insb
jns
pop
mov
pop
pushf
jp
mov
nop
jmp
inc
lock
les
inc
xchg
std
ja
xchg
or
imul
adc
mov
mov
cmpsl
das
fcomps
mov
insl
jns
mov
xchg
cmp
in
addl
imul
stos
dec
cmp
dec
add
push
mov
sbbb
testb
push
push
cmc
push
add
mov
dec
mov
pop
push
lods
fadds
add
inc
repz
dec
icebp
out
adc
out
dec
or
fildl
imul
dec
int
and
insb
or
imul
sub
xchg
sbb
and
stc
lods
pop
test
cmc
cmp
inc
mov
pop
hlt
xor
xor
and
mov
vpunpckhqdq
mov
sahf
mov
in
int3
sub
ljmp
dec
test
hlt
inc
mov
xchg
pop
add
popa
divb
inc
mov
fxtract
mov
scas
mov
loope
pop
adcb
insb
in
in
add
adc
jae
and
call
aam
pop
xor
mov
jmp
pop
dec
ficomps
fcomip
pop
push
ret
mov
aam
lods
mov
lds
cltd
sbbl
sub
icebp
aas
iret
xchg
or
cmp
repz
sbb
inc
adc
and
daa
int
lret
xor
pop
add
cmp
xor
jle
mov
and
xchg
add
cld
jbe
sub
and
fstps
adc
and
loop
push
cltd
mov
pop
add
sub
ret
jmp
sbb
aas
inc
imul
push
push
mull
jnp
pushf
sub
lods
fnsave
or
push
jl
pop
or
in
mov
and
repnz
fwait
pop
push
xor
and
push
hlt
ljmp
jae
sbb
add
xchg
jnp
movsl
ret
test
or
inc
or
jmp
lret
pop
cmp
outsb
push
pop
nop
mov
sub
ficomps
xchg
std
cmp
insb
jg
mov
imul
adc
inc
leave
adc
lret
cmp
sub
add
aas
insb
dec
pop
lods
clc
in
push
cli
pop
jb
dec
xchg
aad
and
enter
mov
cmp
mov
and
cwtl
insl
je
js
xor
je
rcrl
and
push
fldenv
pop
dec
lret
stos
fldl
inc
mov
sarb
clc
xlat
add
and
jmp
jl
inc
out
or
jl
and
cmp
iret
inc
hlt
dec
or
mov
add
or
test
negl
shll
arpl
push
in
xlat
dec
push
arpl
xchg
test
pop
mov
pop
or
jb
or
bound
cmp
push
sti
pushf
lods
stos
adc
jb
lcall
xchg
cmp
cmp
mov
push
aad
jl
and
fsub
test
or
cld
mov
outsb
mov
loop
xchg
out
adc
bound
stos
sub
push
dec
mov
bound
inc
lcall
lea
pusha
and
int
push
mov
cmp
xor
js
daa
mov
ret
push
jmp
enter
fadds
jmp
push
inc
in
popl
sub
fisttpll
sub
push
int3
xchg
icebp
fmull
jb
loop
lds
or
leave
mov
sub
cmp
mov
adc
sbb
fwait
cmp
xchg
or
scas
xor
cmc
je
inc
or
mov
test
inc
out
ffreep
mov
fcompl
addb
lret
insb
rcll
inc
dec
lods
mov
sbb
sub
int
mov
and
arpl
mov
add
cmp
mov
lret
into
rolb
inc
jnp
dec
sbb
lea
outsb
test
mov
out
mov
sbb
fisubl
ljmp
or
xchg
inc
cmp
loopne
mov
cmc
ljmp
out
dec
insl
pop
mov
push
pop
sbb
mov
cs
scas
fldl
cmp
sbb
pop
jns
mov
ficoml
pop
mov
jae
dec
nop
xor
dec
sub
in
mov
jb
dec
xor
push
popf
pushf
inc
cld
rcrl
out
xor
movsl
outsb
stos
fsts
adc
in
test
mov
pop
out
out
push
cmp
mov
pop
push
pop
cltd
test
call
test
sbb
cmpl
test
fists
das
cmp
idivl
cmc
cli
sub
ret
push
data16
aad
push
ret
ret
jmp
stos
adc
pop
mov
jl
sti
fucomip
xlat
out
sub
aam
mov
cmp
test
enter
xchg
cmp
bound
pop
xchg
push
and
cmpsl
adc
not
cmp
nop
clc
sub
add
dec
mov
in
inc
lds
pop
gs
push
xchg
or
ror
sub
or
push
cmc
xchg
popa
xor
push
sti
fisttpll
push
mov
lds
jg
aad
daa
xor
ljmp
mov
xor
ss
jbe
cwtl
pop
cli
add
fwait
push
ljmp
adc
fsubrs
pushf
xlat
out
xchg
daa
ds
std
mov
xor
mov
jns
dec
mov
fdivrl
shll
mov
pop
push
orl
je
mov
xor
push
jne
fnstenv
mov
fs
mov
decl
sarl
std
ja
add
pop
xchg
sahf
int3
addr16
jnp
sbb
cmp
aam
sarl
mov
movsb
in
mov
sbb
mov
cmpsb
xchg
fbstp
lods
mov
sar
lock
ret
fcoml
aad
test
xor
cli
xchg
xchg
icebp
rcr
add
ds
mov
sub
mov
ds
add
inc
xchg
mov
push
pop
scas
nop
xchg
xchg
cmc
bound
aaa
pushf
xor
ficompl
or
mov
outsl
loope
push
stc
sbb
leave
fimull
out
lods
out
and
fnsave
sub
push
pop
push
xchg
mov
mov
or
mov
dec
iret
rorb
xchg
call
dec
sub
push
push
mov
jge
jb
rcl
jb
leave
mov
add
insl
xor
jle
popf
std
lret
leave
jecxz
mov
addr16
imul
sub
jnp
outsb
iret
stc
push
push
out
mov
adc
or
stos
int3
jae
in
movsl
std
rol
mov
xor
adcb
adc
mov
sub
or
push
jb
pop
jae
pop
push
inc
or
gs
sub
mov
pop
push
mov
cmpb
repz
inc
mov
xchg
pop
mov
pxor
arpl
pop
not
outsb
les
lock
mov
into
adc
or
lods
pop
sub
ljmp
test
mov
in
in
roll
out
sbb
ret
xchg
xchg
add
fstpt
test
pop
stos
andb
pop
negl
xchg
iret
fnstcw
add
cmp
add
xchg
fcoml
push
adc
fsubs
xor
repnz
jecxz
xchg
aas
xchg
mov
loopne
mov
cmp
xchg
out
ja
or
lret
clc
cmp
in
pop
sub
jl
pop
pop
bound
add
and
ds
pusha
sbb
and
rcll
mov
in
jnp
xchg
sub
cmp
stc
pop
mov
and
pop
addr16
xor
mov
inc
roll
shlb
das
adc
inc
mov
ds
jmp
leave
iret
shlb
mov
add
repnz
mov
ljmp
sbb
add
daa
mulb
aas
bound
mov
stos
pop
incl
aam
sub
cld
mov
stos
jg
and
dec
bound
stc
jle
and
jmp
sbb
stos
inc
fbld
jo
jmp
dec
je
mov
and
jge
xor
or
sbb
xacquire
insb
jne
inc
rolb
adc
iret
repnz
icebp
lods
sbb
mov
sub
fdivl
sub
mov
jge
loop
sub
call
xor
jge
iret
or
into
fsubs
jbe
fwait
bound
xchg
fimuls
leave
jp
sub
mov
mov
jae
inc
pushf
push
pop
or
cmp
out
pusha
in
cld
lea
enter
aaa
and
sbb
and
cmp
inc
movsl
icebp
add
cmp
into
pop
lds
shl
loope
xchg
xor
lea
data16
in
add
xor
dec
clc
clc
outsb
cmpsl
xlat
add
fisttps
mov
insb
cld
lret
icebp
push
add
jp
cld
movsl
push
inc
dec
shr
cs
xchg
scas
pop
hlt
lea
xchg
dec
sub
push
test
pop
aam
dec
sub
mov
sub
fwait
cli
add
mov
adc
out
call
in
sub
ret
cld
sahf
dec
mov
pop
inc
notl
xor
cmp
pop
call
mov
cmpsl
stc
cld
or
sub
mov
enter
cltd
fisttpll
into
push
push
pop
fs
mov
js
jp
pop
hlt
je
pop
adc
icebp
pop
or
and
push
or
sti
xchg
pusha
sub
sbbb
add
cmp
pop
and
dec
or
std
pop
cmp
cmpsb
adc
in
sti
imul
pop
movsl
jae
fstp
addr16
orb
cmc
add
mov
inc
jo
dec
ljmp
ret
adc
mov
inc
dec
ficomps
loop
pop
stc
movsb
fsts
mov
insb
mov
rolb
jmp
inc
cmp
push
pop
cmc
lds
sub
das
mov
or
pop
adc
int
adc
fcmovbe
shlb
push
fs
adc
mov
jo
ljmp
mov
mov
shlb
push
test
mov
sahf
mov
imull
mov
jnp
pop
xor
sub
adc
jbe
push
xor
jecxz
mov
sub
inc
shrl
sub
pop
outsb
sbb
ffreep
push
iret
fwait
repnz
lret
xor
mov
imul
sub
movsl
mov
jl
ds
fldenv
out
aaa
shlb
cmovle
lcall
dec
pop
pop
or
out
fldenv
and
add
arpl
pop
sbb
movsb
or
mov
sbb
cmc
insb
orb
mov
mov
stc
xchg
dec
bound
dec
ret
xorb
out
xchg
aam
insb
fdivrl
cmc
mov
jno
ljmp
push
stos
cmp
xor
shll
shrb
hlt
push
fistpll
jno
xchg
arpl
fldl
sbb
idivb
sub
std
ja
jno
jg
dec
sub
into
push
jg
dec
jbe
shrb
xchg
aam
in
mov
add
push
xor
outsb
cmpb
pop
int3
js
jae
mov
aad
fmull
loope
jns
out
sti
test
pop
test
mov
shll
dec
and
cmp
add
mov
cld
jp
out
push
mov
or
xor
adc
loop
mov
cmpb
scas
fisttpll
es
idivb
mov
sbb
mov
cmpsl
lahf
sar
xor
jne
dec
mov
mov
loop,pt
jl
mov
out
inc
or
adc
pop
pop
fsubrp
cmpsb
mov
out
lock
pop
imul
cmp
push
sbb
std
dec
push
mov
fldz
xchg
in
adc
cmc
lods
mov
mov
cmpsl
sbb
pop
fisttpll
mov
xchg
daa
jb
add
push
sbb
inc
cs
in
in
push
jo
imul
mov
clc
xchg
push
rcrb
push
shrl
fimuls
nop
mov
loopne
ljmp
imul
imul
faddl
sbb
sbb
divl
mov
ja
push
xlat
inc
inc
dec
outsb
pop
mov
and
sar
mov
and
fcmovnb
jg
orl
mov
add
cs
cltd
lods
insb
mov
jge
push
test
xchg
das
xchg
add
cmp
add
push
fstpl
or
rorl
sub
xor
inc
enter
pushf
stos
and
cmpsb
out
fbstp
fcmovnbe
xlat
sahf
pop
leave
lea
andl
mov
xchg
loop
das
inc
xchg
xor
mov
iret
cs
jns
xor
int3
xor
pop
jne
test
ss
mov
aad
push
adc
enter
rcr
mov
cmp
inc
or
jl
or
test
leave
int3
cwtl
mov
repnz
enter
sbb
subl
mov
pop
out
sub
mov
mov
xor
push
push
xor
imull
cmpsl
sahf
mov
mov
aad
jecxz
test
mov
jl
push
sub
jae
rcr
loopne
popa
pop
dec
cmc
hlt
cli
jns
jnp
out
and
in
data16
jno
je
js
leave
shld
inc
sub
inc
pop
push
imull
cmpsl
cld
push
lahf
lret
push
mov
xchg
js
lea
jg
push
xor
jl
in
fmuls
arpl
mov
push
in
sbb
sub
pop
push
dec
shrl
cmp
inc
in
mov
ljmp
inc
cmp
jp
mov
das
faddl
jle
das
push
test
or
mov
push
push
hlt
mov
sbb
mov
outsb
mov
push
lea
xchg
movsl
pop
sbb
mov
call
mov
xor
sbb
add
fs
insl
inc
sarl
out
out
movsb
movsb
mov
push
mov
mov
cmc
dec
inc
jmp
and
or
add
push
xchg
mov
sub
adc
push
and
pop
and
dec
mov
cmpsb
stos
and
stc
imul
push
orl
das
mov
mov
lds
scas
bound
inc
mov
insb
sarb
mov
iret
icebp
push
test
push
sbb
ja
push
mov
lret
daa
out
mov
mov
xchg
rolb
insb
dec
lahf
insb
sahf
data16
out
in
cmp
mov
push
rclb
xor
cs
lret
popa
cmp
or
inc
xor
xor
mov
mov
lods
loope
sub
popf
inc
mov
mov
mov
test
pop
in
adc
cs
aad
pop
inc
mov
pop
pop
or
jae
pop
ret
mov
xchg
les
or
sahf
daa
out
sahf
mov
sub
aaa
negb
mov
loop
jge
std
push
out
stc
leave
aam
add
iret
cmpsb
xchg
es
cmp
clc
shl
cmc
push
outsb
flds
inc
xor
jbe
push
dec
addr16
pop
int3
aad
hlt
push
or
and
je
imul
xchg
mov
lea
into
scas
mov
add
hlt
cli
lock
or
jnp
bound
cltd
pop
sbb
test
fs
popa
das
call
sbb
cli
sbb
jns
nop
popf
out
rcl
bound
into
pop
mov
fldl
cwtl
cmc
orl
or
imul
cmp
les
in
orl
add
mov
add
lock
lcall
mov
pop
aam
mov
xchg
mov
pop
out
sub
inc
loop
in
push
add
stc
movsl
cmc
imul
out
js
daa
pop
jnp
cs
out
fidivl
xchg
mov
pop
mov
in
loopne
cmp
dec
iret
mov
dec
adc
aam
push
push
fcomp
loopne
outsl
xor
push
add
pop
xlat
push
hlt
push
pop
sahf
lret
pusha
fldt
ds
jnp
inc
lods
aad
aad
ss
xchg
push
mov
mov
dec
add
lods
loopne
insl
das
aam
jns
fists
mov
aad
lahf
mov
rcll
fmull
cmp
pop
popf
insb
mov
xor
addr16
pusha
ficomps
sbb
xadd
insb
lock
inc
sbb
ret
xor
push
pop
stc
mul
enter
jo
enter
push
scas
sub
icebp
mov
xchg
test
sub
pop
arpl
dec
test
lret
xchg
cmp
fisubrs
mov
scas
fisttps
into
mov
mov
xchg
insb
nop
test
shl
mov
mov
push
mov
out
es
shrb
fcmovnu
add
jne
push
loope
mov
push
movsl
in
ljmp
mov
fmul
and
push
jge,pt
hlt
das
fwait
pop
jb
adc
mov
sbb
sbb
rcl
das
lock
aad
lds
cmpsb
fldenv
stos
rolb
je
loopne
push
mov
sbb
xor
adc
psllw
ret
push
xor
into
fisttpl
mov
pop
mov
xchg
sbb
add
lea
add
rorl
inc
fisubs
subb
das
ret
xchg
jmp
popa
fisttpl
fldl
and
cli
mov
repnz
mov
add
xor
jle
push
add
pop
clc
add
xchg
lea
cmpsb
sarl
mov
push
and
mov
or
mov
and
mov
addr16
pop
out
call
adc
out
cmp
jecxz
insl
outsl
jne
jmp
or
push
rclb
shll
out
xorb
adc
stos
mov
fnstcw
xlat
sbb
jge
je
pop
cmp
sti
sbb
jmp
mov
loop
fcmovbe
loopne
test
jne
movsl
mov
or
lret
cs
inc
pop
sarb
dec
js
dec
sub
sbb
aam
stc
je
cmpsl
pop
jb
lock
popf
inc
or
sub
shll
std
dec
fsubr
cwtl
or
mov
xor
data16
push
popf
call
ljmp
or
fildll
or
stc
push
test
stos
imulb
mov
ror
push
out
xchg
lods
aas
mov
insb
mov
xor
and
lret
les
sbb
cld
out
sbb
add
imul
sbb
jmp
and
and
sbb
jl
repz
dec
adc
sbb
or
insl
popf
jmp
dec
xchg
les
pop
rorl
mov
xchg
xchg
fs
and
lret
js
and
repz
mov
pop
lcall
adc
loope
pop
cvtpi2ps
or
aam
rcrb
imul
fildl
in
aas
pop
rcrb
rcrb
push
cmpsb
les
xchg
sbbb
das
cmp
mov
push
add
sub
mov
push
pop
scas
cld
sti
inc
cli
fdiv
pop
rolb
push
cmpsb
inc
cli
jae
loope
add
pop
lahf
xchg
pop
and
test
or
sbb
bound
mov
xor
fsubrp
std
out
pop
shlb
dec
jo
insb
fldcw
xchg
in
adc
add
mov
mov
xchg
push
mov
jbe
inc
insb
jae
xchg
cmp
mov
or
push
stc
clc
repnz
jbe
js
dec
pop
inc
mov
push
mov
sub
out
bound
push
jae,pt
push
aaa
pop
push
cld
mov
adc
scas
test
fwait
dec
xchg
pop
test
test
lcall
sbb
xor
cwtl
mov
adc
fnsave
xorl
cmp
xor
pop
das
out
adc
outsl
jo
scas
push
mov
mov
dec
out
push
push
xchg
cmp
std
jl
push
adc
enter
cwtl
cmp
mov
shrl
cmpsl
push
sbb
or
aam
and
popaw
nop
ljmp
lds
negb
pop
sti
mov
mov
xor
ja
dec
mov
pop
fcomi
cmp
lret
aaa
fimuls
test
add
jae
and
repz
inc
pop
mov
fildl
insl
xchg
mov
aam
inc
dec
cmc
mov
sbb
sahf
gs
mov
cmp
push
and
shlb
jne
sbb
aad
push
out
insb
sbb
dec
and
inc
int3
jmp
dec
sub
inc
call
std
push
xchg
out
fnstcw
push
mov
movsb
and
das
pusha
mov
mov
enter
iret
and
shl
and
mov
pop
sbb
or
dec
push
and
xlat
cld
mov
mov
jns
stos
and
push
sbb
cs
rcll
rcl
ds
scas
mov
ficoml
pop
cmc
lret
out
push
mov
repz
xchg
push
add
hlt
lock
pop
jecxz
xchg
jbe
mov
repz
icebp
rorb
out
lea
jnp
shr
xor
push
fdivl
jb
push
sbb
lds
adc
lds
mov
ror
and
ss
cs
lods
and
loope
jno
dec
dec
into
jno
xor
xchg
inc
cmpsl
in
les
std
dec
bound
outsl
jecxz
fmull
fnsave
mov
push
test
out
rol
mov
sarb
or
pop
addl
jne
mov
sbb
mov
aaa
movsl
out
cmpb
bound
scas
sbb
jge
pop
and
scas
lea
loopne
dec
pop
fcoms
and
fimuls
push
sub
pop
lds
mov
notb
xchg
jb
mov
adc
sbb
push
cltd
bnd
mov
mov
push
ds
mov
bound
out
mov
call
fists
imul
dec
mov
pop
scas
lock
cmpsl
hlt
and
pusha
imul
sub
cmp
iret
or
inc
push
xor
iret
lods
or
xchg
mov
or
cli
fisttpl
jns
mov
push
add
xor
cmc
insb
sarb
xchg
ja
mov
xchg
xchg
jno
std
xchg
fwait
in
push
jge
jle
pxor
dec
cli
jne
imul
out
push
and
aad
insl
or
aaa
adc
xchg
mov
xor
xchg
add
pop
xor
dec
mov
sub
mov
shll
vmovaps
mov
xor
outsl
or
jae
xchg
scas
fsub
in
les
sbbl
stos
sub
push
dec
sarl
movsb
xchg
out
or
push
imul
adc
cli
mov
mov
cmp
push
xor
test
imul
pop
dec
shrl
mov
mov
mov
cwtl
stc
mov
rorl
inc
fwait
mov
push
je
and
mov
leave
clc
sub
fwait
push
fwait
or
out
and
inc
ss
leave
pop
shrl
cmp
mov
out
sub
pop
out
repnz
in
or
lds
jecxz
insb
movsl
adc
add
sarl
sarl
push
inc
dec
xchg
cmp
inc
clc
sub
xchg
mov
lock
push
inc
push
lea
push
dec
pop
mov
movsb
push
dec
gs
pop
imul
sbb
cmp
mov
or
frstor
aas
cmp
add
leave
mov
fstpt
out
ds
hlt
sbb
mov
add
neg
mov
xor
mov
sbb
mov
xchg
pop
iret
mov
iret
xchg
ret
rcl
xchg
push
fstl
cmpl
fsubrs
mov
xor
push
ficomps
scas
sbb
mov
mov
repnz
xchg
fwait
aas
inc
js
aaa
mov
cmp
pushf
inc
enter
cs
and
es
mov
xor
ja
dec
shr
mov
loopne
cmpsb
jecxz
scas
sub
inc
mov
inc
movsb
mov
cmc
dec
loopne
movsb
fsub
gs
pop
sub
outsb
jbe
les
dec
rcrb
xor
in
inc
or
add
ja
xor
xchg
add
jle
jne
fwait
loope
out
sub
cmp
mov
xlat
push
test
mov
add
lahf
and
adc
pop
lea
mov
sbb
int
mov
and
push
push
js
aam
jmp
jmp
cmp
mov
sub
int
fwait
mov
pop
inc
mov
das
pop
jns
cltd
mov
mov
nop
insb
insl
xchg
xchg
sahf
cwtl
aam
repnz
outsl
inc
jge
pop
dec
test
out
das
cmpb
popa
and
addl
inc
inc
jp
ja
jl
sbb
xor
cltd
sbb
mov
or
or
jg
push
add
dec
out
fisubrs
xor
call
push
push
mov
inc
and
andl
pusha
xchg
mov
jp
mov
xor
xchg
movsl
rcrb
push
es
adc
daa
add
fadd
and
jmp
jb
enter
add
mov
leave
push
popf
cwtl
mov
xchg
lret
sub
shr
mov
cmpsl
es
out
ljmp
sub
jp
xor
add
imul
fstps
mov
shr
sub
sub
fcmovnbe
movb
inc
repnz
sbb
mov
dec
mov
mov
inc
inc
lds
in
mov
jno
or
mov
lods
pop
jg
mov
mov
das
cwtl
push
xchg
roll
add
nop
icebp
cmp
push
or
ljmp
pop
and
movsl
inc
stos
sbb
lret
and
sti
sbb
cmp
sti
daa
adc
sti
arpl
decl
lock
aad
or
jmp
and
inc
orl
aam
stc
inc
fcoml
scas
adc
adc
int3
es
dec
fwait
inc
stos
push
movl
cmp
movsb
jb
sti
and
push
add
dec
cmc
lret
jbe
add
mov
lret
rorl
subb
cltd
inc
jo
cmp
jnp
pop
pop
xchg
je
inc
jmp
mov
xchg
scas
xchg
mov
push
jmp
xor
sub
std
pop
lahf
jle
hlt
popf
mov
pop
adc
mov
jne
or
mov
movsb
outsl
xchg
das
inc
leave
mov
pop
aad
test
lret
xchg
aam
out
fs
xchg
pop
outsl
ficoml
std
fldenv
push
jne
mov
jp
adc
scas
mov
add
sub
aas
fwait
call
stos
test
fcompl
dec
dec
imul
mov
adc
into
les
js
stos
push
fwait
add
and
pop
sbb
ljmp
fdivrl
lea
cmp
push
leave
dec
ss
out
pusha
sub
sbb
sub
push
cwtl
sub
clc
lods
mov
cld
mov
testb
add
sti
arpl
roll
or
aas
sub
push
rcrl
jbe
fwait
mov
push
jg
std
adc
mov
mov
popa
xchg
loopne
mov
cli
pop
push
mov
mov
out
jecxz
xor
ss
fcomip
movsb
testl
shlb
push
out
andb
sbb
sbb
daa
sbb
mov
mov
scas
clc
jmp
movsb
popl
sub
and
sub
iret
add
dec
outsl
or
cmp
imul
cmp
leave
jle
fmul
mov
loopne
arpl
and
pusha
push
push
leave
cmpl
adc
lcall
add
ss
fs
jmp
sbb
lret
pop
test
jnp
pop
sahf
repnz
add
sahf
es
stc
and
int
mov
movsl
enter
orb
push
stos
add
popa
and
stos
push
sub
jbe
cmp
jecxz
sbb
std
sbb
mov
outsb
inc
mov
repz
stos
pop
lcall
mov
xlat
lods
ljmp
mov
aas
sbb
jo
mov
jmp
mov
rcl
out
aad
mov
jecxz
in
mov
sbb
dec
xor
xor
mov
outsb
and
and
jmp
pop
xchg
cmp
rcl
cmp
negb
mov
out
mov
or
pop
and
icebp
test
js
daa
cli
or
xchg
jb
cmp
xchg
lcall
cmp
mov
xchg
arpl
popf
jo
push
in
lret
jp
clc
jo
push
mov
stos
push
sub
xchg
data16
xor
repnz
in
outsb
aam
jg
sbb
shlb
push
cwtl
dec
leave
stos
jmp
arpl
test
mov
push
jno
add
shl
add
in
fs
je
lret
lods
jg
jg
jne
mov
xchg
mov
and
xchg
and
xor
in
lods
lods
lcall
or
fdivrl
add
rclb
or
mov
roll
jmp
and
lcall
int3
and
sub
lea
outsl
xchg
xchg
loop
cmpsb
jle
add
mov
loopne
xchg
sbb
fmull
stos
mov
rorb
loop
nop
pop
mov
addl
shl
push
mov
mov
add
gs
push
orb
inc
push
ds
je
test
cmp
sbb
negl
sub
std
dec
js
xor
filds
or
out
mov
mov
and
fmull
pusha
test
pop
subb
sub
insb
loop
add
int
movsl
es
ljmp
aad
mov
enter
icebp
aad
or
sbb
loope
pop
xor
cmp
xor
or
out
mov
xchg
faddl
outsl
or
fcompl
add
push
icebp
inc
xlat
div
jb
cmc
outsl
mov
add
outsb
aad
das
pop
hlt
lods
push
mov
inc
xchg
out
jmp
lea
imul
andl
movsb
lock
sub
ljmp
push
mov
adc
push
inc
std
rorb
inc
popf
stc
repnz
test
mov
call
inc
cmp
aas
sub
cmp
adc
mov
mov
cltd
xor
outsb
sub
dec
rol
push
clc
imul
xorb
movsl
adc
dec
leave
js,pt
add
outsb
rclb
push
fwait
sti
sbb
mov
lcall
mov
nop
cmp
inc
adcb
fdivs
inc
mov
inc
jns
xchg
mov
je
sub
cmp
rolb
test
add
cltd
clc
mov
mov
cmp
popa
and
les
push
in
dec
cmp
xchg
jb
lods
sarl
xchg
or
bnd
mov
sahf
aam
xchg
out
cld
sbb
mov
aad
add
xchg
cmp
push
sbb
dec
cmp
loope
cmp
dec
addr16
insb
stc
xchg
pop
fcmovb
fwait
cli
pop
insb
scas
jbe
test
mov
repnz
inc
xchg
cmp
mov
call
or
xchg
lret
jne
adc
pop
stos
cmpsb
pop
imul
mov
dec
mov
add
sbb
jb
xchg
lods
cmp
nop
call
lret
fisubs
mov
sti
test
lods
lahf
sbb
mov
cmp
adc
addl
inc
mov
dec
jmp
mov
mov
bound
test
add
mov
and
jne
pop
lods
push
xchg
sbb
and
push
cltd
es
fwait
shl
add
mov
xchg
scas
mov
popa
adc
aaa
enter
sbb
jge
sbb
add
pop
xor
xor
mov
push
inc
xor
xor
xor
xor
adc
nop
cmc
outsl
xor
andl
rcll
jns
stos
sbb
or
int3
sbb
and
loope
scas
sub
lods
push
test
hlt
iret
mov
adc
sbb
and
icebp
cmp
jns
sbbl
xchg
in
xorl
jl
fists
fwait
lahf
ret
pop
mov
movsb
scas
icebp
mov
sarl
mov
les
inc
iret
xor
xorl
mov
jo
mov
mov
cmp
mov
xchg
cmp
insb
mov
repz
out
and
jb
in
adc
lcall
push
and
add
push
sbb
fistl
and
into
or
sbb
pusha
xchg
das
fisubrl
jb
mov
and
add
fcmovne
mov
mov
push
into
dec
nop
test
inc
mov
jmp
je
sahf
and
stos
orl
fidivs
xlat
xchg
outsb
repnz
xchg
sbb
push
enter
inc
test
sbb
daa
hlt
sub
in
push
push
mov
lods
push
push
cmc
sbb
dec
dec
push
js
mov
adcb
push
pop
mov
out
xor
out
push
mov
sahf
lcall
mov
pushf
push
cmp
cld
mov
sub
mov
scas
rclb
push
jne
rcrl
xchg
shrb
xchg
insl
pop
push
cmp
xchg
cmc
clc
pop
jnp
or
int3
jnp
sub
clc
cmpsb
adc
xor
mov
xor
xchg
sub
insb
ret
cli
jae
data16
fldenv
into
jnp
cs
cmp
lds
and
mov
cmp
jmp
test
dec
mov
fcompl
lods
outsl
je
mov
mov
into
popw
push
mov
lret
sbb
and
arpl
mov
addr16
inc
insl
ret
xchg
push
cmp
ficoml
out
std
push
mov
mov
adc
inc
repnz
ret
pop
pop
jecxz
fnstcw
lds
pop
popa
add
inc
fmull
daa
in
mov
pop
rcll
or
into
rcr
mov
stc
mov
inc
push
rclb
in
pop
mov
sbb
lods
inc
mov
sub
jle
adc
scas
gs
mov
popf
mov
pop
jne
mov
scas
dec
xchg
xchg
fsubs
inc
push
notl
movsb
or
rcl
sbbb
test
roll
mov
adcl
es
add
fs
jb
movsb
sbb
or
jae
mov
and
pop
mov
ficoml
mov
jge
or
ret
adc
add
dec
mov
cltd
repz
movsb
jno
test
push
clc
mov
xchg
shll
pminsw
mov
jecxz
adc
mov
jmp
pop
jnp
jge
xchg
and
sbb
push
js
jg
test
push
test
push
mov
icebp
fstpl
mov
push
cltd
pop
mov
and
jne
popa
andl
inc
fcoms
dec
clc
imul
sub
mov
pushf
pop
cli
and
mov
cmp
inc
pop
movsb
push
mov
jmp
pop
mov
cld
sbb
xor
fcmovnb
pop
add
pop
mov
push
movsl
pusha
add
lcall
inc
dec
or
xor
stos
xchg
lret
mov
jns
aaa
sub
pop
or
aad
pop
mov
out
clc
inc
divb
mov
pop
pusha
cli
cmc
stos
mov
inc
fsub
shlb
jns
sbb
arpl
cmp
andl
hlt
sub
in
test
and
bnd
lock
sbb
fists
push
cwtl
mov
nop
or
cmpsl
sti
lcall
push
pop
fbld
dec
into
sub
add
movsl
imul
or
movsl
xor
xchg
xor
adc
or
sub
or
sub
fadds
sub
enter
std
je
js
sub
adc
jp
sbb
mov
loope
xchg
ja
inc
push
or
and
fcompl
xchg
push
jb
inc
xor
fcoms
mov
jecxz
xlat
cmp
lods
ret
inc
and
sub
bound
inc
popf
xor
add
in
dec
push
cmp
cld
mov
stos
lock
jns
movsb
int
xchg
and
pushf
or
cmpb
shr
adc
ljmp
jb
enter
sbbb
cmpsb
and
daa
scas
stos
xchg
pop
xor
stos
mov
hlt
in
inc
jge
int3
fldcw
ret
daa
adc
dec
mov
mov
cmp
jnp
pop
push
adc
mov
sbb
inc
push
aaa
hlt
arpl
pushf
jbe
pop
push
rol
inc
lock
push
stos
iret
lock
sti
movsl
sbb
sbb
mov
or
xchg
les
inc
push
clc
dec
mov
mov
mov
xchg
icebp
xchg
adc
xchg
lods
adc
sarb
sahf
dec
out
stc
test
fimuls
subb
fnstsw
sbb
sbb
inc
sbb
sbb
pushf
sub
mov
out
push
movsb
dec
test
jp
push
inc
jno
rol
sbb
lods
mov
mov
lods
xchg
cmp
or
jae
sub
shrl
push
jnp
inc
shlb
sbb
lods
in
mull
mov
test
jae
sbb
ret
mov
dec
xor
aad
xorb
pop
mov
cmp
mov
scas
ret
mov
sbb
clc
in
pop
stos
rorl
jb
mov
pop
push
mov
cmpsl
mov
or
xor
negl
push
and
ror
mov
xor
loop
mov
popf
test
jne
insb
sbb
stos
push
scas
roll
and
mov
adc
sbb
sbb
cmc
call
dec
jl
insb
xor
dec
cmp
mov
lret
shrl
jecxz
mov
daa
pop
ret
xor
shl
arpl
xchg
sub
pusha
cli
rclb
dec
sbb
cmp
sbbl
in
fs
sub
outsb
mov
or
negb
fdivrl
sbb
jne,pn
mov
add
or
icebp
fwait
scas
mov
xchg
repz
jle
mov
xor
clc
add
orb
aad
mov
adc
icebp
rolb
lea
int
mov
out
js
add
out
icebp
xchg
dec
and
sub
arpl
or
mov
lds
sub
add
lods
jnp
mov
dec
push
out
lret
iret
or
adc
ret
or
xchg
shl
or
lret
test
push
fisubrl
addb
cmc
dec
test
push
lret
or
ds
mov
ret
or
pop
sarl
jge
arpl
pop
in
in
mov
in
mov
loope
sbb
fwait
into
mov
aaa
xchg
mov
psubusb
pop
xor
fimuls
xchg
inc
mov
or
and
lahf
add
sub
mov
stos
popf
cmpsb
push
das
les
xchg
and
sbb
mov
mov
mov
fstpl
das
pushf
jne
mov
adc
jg
push
aaa
cld
mov
mov
cmpsl
inc
push
inc
sbb
xchg
ret
test
andl
inc
and
sbb
mov
outsl
xor
loop
xchg
cld
sub
push
xor
call
mov
scas
sti
or
cltd
pushf
add
call
xor
andl
cli
and
js
xchg
jo
cmpsb
andb
mov
aad
jecxz
lock
rorl
cmp
stc
mov
sub
cmc
mov
test
in
test
data16
sarl
add
inc
or
cmp
lret
lret
cmp
mov
jecxz
es
mov
add
lods
loope
mov
sti
pop
and
stos
out
push
out
rcll
mov
int3
cmp
ss
adc
nop
out
gs
cltd
sbb
in
cmp
dec
clc
test
mov
lods
mov
cmp
push
xor
sahf
xor
xchg
out
cs
cmp
pop
pop
xchg
adc
cld
pop
orl
inc
movsb
xor
adc
test
jnp
int3
imul
sub
xchg
dec
xlat
mov
in
and
cltd
test
xchg
pushf
stc
or
icebp
fs
rol
test
xchg
push
add
pop
inc
mov
mov
insb
mov
dec
mov
cld
nop
lret
and
ret
icebp
out
mov
ret
std
and
in
pop
cltd
stos
sti
inc
cmp
mov
jb
jp
addr16
daa
add
mov
dec
or
mov
mov
or
jbe
sbb
test
out
push
push
push
lods
out
xor
sbb
in
adc
jmp
in
inc
orl
addr16
xchg
mov
mov
lret
lret
pop
lods
js
imul
popf
incb
sub
aad
gs
shrb
mov
repnz
adc
xor
dec
fsubrs
mov
push
in
and
or
loope
imul
adc
out
mov
rol
push
notb
mov
fsub
jg
mov
add
mov
adc
loope
mov
add
xchg
aas
sub
lahf
jb
push
out
inc
jge
sub
in
outsl
loop
add
sub
xor
bound
ja
ja
and
xchg
adc
sub
xchg
loop
leave
adc
push
xchg
bnd
jp
sahf
rolb
in
int
mov
stos
dec
dec
into
mov
jle
push
push
fadd
adc
jmp
addr16
jl
push
cli
scas
dec
xor
cmpb
inc
divl
popf
cld
mov
cmc
push
cli
enter
inc
and
ficoms
leave
inc
add
fisubrs
mov
mov
add
in
pushf
push
inc
icebp
cmp
fsts
mov
into
sahf
push
loop
pop
dec
icebp
pusha
pop
fsts
or
mov
fistpl
pop
cmc
jmp
out
and
sarl
and
scas
fwait
jbe
xchg
add
add
int3
adc
notb
pop
out
loopne
cmpsb
in
ljmp
xor
lds
outsb
fimuls
clc
mov
xchg
cmp
test
shrb
mov
or
test
mov
jns
dec
or
push
out
cmpsl
sbb
incl
fstl
pop
lahf
sbb
dec
sub
insl
scas
fisubs
or
xchg
iret
lret
call
adc
arpl
sub
cmpsb
les
fisttpl
sbb
stos
sahf
add
aaa
lret
dec
jnp
add
std
aaa
dec
data16
xor
mov
in
test
pop
test
cli
mov
in
mov
or
divl
sahf
cmp
inc
xlat
sbb
cli
adc
loopnew
nop
push
hlt
mov
push
jo
in
sahf
aas
dec
sar
test
jmp
mov
into
flds
xchg
nop
xchg
pop
xor
jl
dec
gs
dec
mov
sar
lods
or
sub
mov
mov
rcrl
jmp
in
and
inc
jns
addl
adc
mov
in
addb
mov
xlat
xchg
jmp
sbb
pop
xchg
insb
fwait
gs
and
test
nop
dec
sub
aas
cmp
inc
movsl
inc
cmp
add
scas
jmp
mov
mov
je
insl
sub
push
fs
push
adc
xor
daa
inc
sub
lcall
pop
cmp
mov
sub
enter
adc
inc
push
mov
push
or
orb
pop
sbb
sbb
fisttps
mov
std
adc
aad
push
dec
hlt
jbe
inc
inc
pop
mov
or
test
pop
in
sbbl
dec
xchg
gs
idivb
mov
push
orl
insl
adc
push
dec
mov
gs
mov
add
jnp
cltd
inc
adc
mov
pop
movl
adc
loopne
jne
xchg
xchg
imul
sbb
sub
mov
rclb
xchg
xchg
and
imul
and
mov
add
sbb
andb
mov
mov
ret
sub
dec
icebp
add
jmp
or
arpl
and
std
pop
xchg
xchg
out
ret
es
lret
int
xor
imul
ds
xor
pop
and
in
and
mov
sti
mov
push
lds
add
shll
daa
jl
sub
lahf
xchg
lds
and
jnp
stos
mov
jg
int
mov
inc
shl
mov
rcrl
pushf
sub
push
mov
jno
xchg
es
icebp
xor
or
call
or
ret
lret
pop
cwtl
fucom
imul
adc
test
mov
mov
push
xchg
or
jo
vpmulhuw
test
jae
insb
push
adc
negb
jp
pop
xchg
sub
dec
lcall
or
test
pop
ljmp
xchg
or
stos
add
icebp
dec
pop
sbb
jmp
fwait
hlt
mov
adc
iret
cmc
pop
xor
popa
dec
and
and
mov
or
add
dec
fs
adc
insb
lret
outsb
test
pushf
sub
arpl
cmp
loop
push
insb
add
loopne
movsb
repnz
rclb
stos
pop
sarb
popf
dec
push
sub
sti
adc
jo
jl
or
sahf
dec
pop
out
stos
mov
aad
xchg
add
jae
or
jecxz
jp
sub
cmc
xor
stc
sub
push
mov
mov
jl
and
pop
xlat
or
adc
popf
mov
mov
push
scas
movsl
pop
daa
enter
cmp
add
dec
test
mov
add
jg
cmpsl
inc
stos
daa
das
cltd
pop
or
dec
mov
stos
shrb
shll
in
cmpsb
sti
sbb
sub
out
pop
fmulp
int
rorb
addr16
sub
cmpsb
aas
dec
adc
fwait
push
and
shll
mov
jmp
cmpsl
mov
cmp
inc
cmp
sbb
push
add
test
cli
pusha
dec
stos
sti
sti
ljmp
mov
cmp
scas
pop
pop
and
test
repz
push
in
imul
push
nop
loopne
test
nop
or
pop
sub
stc
enter
and
mov
inc
push
push
mov
jle
out
test
or
movsl
int3
sub
movsb
pop
jle
popa
stos
sub
push
lahf
lcall
in
push
test
pop
xor
roll
jmp
dec
inc
push
into
test
fisubs
lret
mov
xor
sub
je
mov
hlt
sbb
adc
in
sub
cmpsb
mov
push
adc
cld
int
inc
into
adc
pop
lods
sub
inc
jb
addr16
mov
sbbb
mov
repnz
mov
pop
test
or
xor
in
push
push
xchg
bound
pop
mov
sub
push
pop
or
xorl
adc
xchg
scas
cmp
ja
stc
int
push
pop
or
mov
mov
or
mov
xchg
sbb
dec
xchg
aas
xchg
stos
icebp
and
push
int3
mov
adc
add
negb
cmp
inc
ret
in
dec
xchg
pop
sbb
mov
out
pushf
xor
test
cmc
mov
jbe
insb
xor
les
out
lret
inc
mov
ret
cmp
hlt
and
test
std
xchg
pop
sbb
xor
push
mov
stos
or
xchg
enter
outsb
loope
arpl
mov
adc
cmp
clc
shrl
and
jl
in
pop
add
push
or
data16
dec
adc
mov
push
stos
pushf
ss
inc
cmp
or
push
faddp
jmp
js
cld
mov
ja
pop
mov
and
jnp
and
rolb
setnp
hlt
enter
loop
ja
mov
lock
mov
xchg
xor
lods
xorb
sti
sarl
cmp
dec
mov
stos
add
test
es
pop
mov
push
inc
movsb
xchg
jb
in
add
dec
decb
mov
cmp
pushf
insl
dec
lcall
jge
int
nop
jnp
cmp
xor
dec
insb
mov
cmp
sbb
mov
sub
add
push
loopne
mov
aad
fistps
inc
sti
mov
jle
cmc
and
loopne
mov
dec
int3
xchg
aas
sub
cli
leave
iret
aaa
jb
mov
xchg
mov
adc
in
lcall
dec
movsl
pop
mov
int
xchg
jl
out
jo
xchg
pop
mov
add
or
mov
addb
int3
or
in
out
sarb
xchg
or
cmp
cmp
aaa
popf
and
sbb
xor
sbb
mov
mov
pop
outsl
lcall
hlt
cmp
xor
call
cltd
sub
fisttps
aas
lret
push
movsb
push
dec
add
and
inc
pop
cmp
and
cwtl
mov
int
or
ret
iret
fdivrl
mov
sbb
or
xor
push
dec
fucom
rcrl
cli
adc
insb
test
adc
xor
mov
push
call
dec
cmp
mov
test
adc
mov
mov
cli
pusha
int
cmp
cmpsl
cs
adc
test
arpl
sbb
aas
mov
ds
xor
orb
mov
cmp
add
sti
cmp
std
arpl
data16
outsb
inc
out
loopne
pusha
adc
or
cmovge
int3
aad
xor
pop
dec
lds
mov
or
sahf
sbb
jnp
xor
sub
jmp
mov
push
rcrb
pop
ds
add
sbbl
adc
mov
fldl
mov
fs
jmp
xchg
test
test
sub
out
xor
jp
jg
dec
or
rcrl
imul
popf
cmpsl
imul
and
fiaddl
enter
push
or
xchg
data16
mov
xor
out
adc
pop
out
test
insl
into
jmp
imul
pop
mov
lret
inc
mov
mov
pop
xchg
shll
xor
sub
mov
xchg
mov
jbe
icebp
sbb
loope
js
pop
stos
mov
jl
fwait
and
adc
inc
test
xchg
sbb
loope
ret
pop
jmp
inc
bound
sub
dec
mov
and
add
ja
add
fsubp
lret
push
xchg
loop
jge
imul
fmul
movsb
cmp
inc
outsl
leave
fimuls
out
scas
popa
adc
jae
shlb
pop
sub
inc
sti
inc
or
and
imul
sqrtps
pop
lcall
or
ror
or
pop
sub
jne
aad
add
cmpl
xchg
hlt
pop
das
cld
push
notl
xchg
insl
sbb
int
xchg
sub
xor
sahf
jl
loop
sysenter
pop
xchg
or
xchg
dec
and
sahf
fimuls
fidivrs
lods
orl
jge
jne
push
lcall
and
jbe
jo
sub
dec
xor
inc
rcll
lcall
inc
repnz
lea
sbb
int
push
and
dec
pushf
xor
or
std
mov
or
inc
xchg
ret
outsl
lods
adc
mov
stos
xchg
sbb
imul
mov
mov
mov
jae
cs
dec
imul
jo
add
scas
mov
pop
pop
pop
jns
or
adc
sub
adc
out
fs
jp
push
pop
les
stc
push
lcall
pop
mov
iret
jle
pop
jmp
pusha
aaa
add
mov
push
test
mov
ds
push
push
loopne
fidivrl
mov
je
fcomps
and
inc
cmpsl
aaa
mov
mov
pop
push
inc
sub
push
lods
adc
adc
aaa
icebp
mov
test
std
xchg
pop
xor
sub
scas
pop
lods
pop
xor
das
icebp
fisubl
inc
stos
shl
insl
adc
and
mov
aas
sub
loopne
jg
adc
pop
pop
lods
cmpsl
sub
repnz
mov
jb
push
movsb
jo
dec
fdivl
mov
mov
data16
repnz
add
adc
stos
daa
iret
push
icebp
mov
sub
inc
aaa
loop
arpl
pop
or
mov
pop
int
add
roll
push
inc
jmp
outsl
push
fcomps
add
bnd
cmpsl
lea
and
xchg
fldenv
dec
cmp
inc
loopne
repnz
sub
jb
lods
cmp
jp
subb
mov
popf
sbb
jle
ss
int
mov
shrb
sub
ret
fadd
jno
xchg
xor
lret
sbb
adc
xor
add
xor
sbb
cmp
pusha
ljmp
je
sbb
xor
ljmp
les
int3
cmpsl
lret
in
adc
out
jne
call
lods
and
and
in
mov
inc
icebp
xor
push
jnp
mov
mov
jp
ljmp
fsub
xchg
mov
jnp
call
pop
mov
ret
mov
xlat
push
fbld
pop
sti
pop
sbb
sbb
in
add
jl
enter
inc
mov
pop
lret
daa
mov
push
fsubl
insl
bound
shll
mov
xchg
xchg
and
fldl
in
pop
sub
cmp
mov
std
scas
xchg
add
jae
iret
leave
push
xchg
xchg
push
bound
add
sbb
jecxz
jne
inc
sbb
out
popa
mov
pop
repnz
xor
mov
cmp
push
iret
mov
sbb
pop
daa
aad
dec
sub
push
jl
cmp
jnp
or
cmp
mov
shl
in
inc
pop
push
test
mov
in
lods
clc
or
int3
in
sbb
xlat
or
stc
js
test
cmp
incb
sbb
xor
hlt
ljmp
xchg
push
jle
fbld
mov
cld
xor
cmpsb
or
xchg
cmp
mov
and
pop
mov
cwtl
testl
nop
mov
das
xchg
sbb
into
jecxz
sub
inc
orps
xchg
insl
int3
sti
mov
in
fsubl
sar
cmp
scas
in
mov
mov
ret
nop
jns
add
cld
fistps
mov
mov
dec
add
iret
mov
insl
popa
ret
dec
jg
mov
in
fadds
pop
push
add
sbb
add
jle
rorl
mov
inc
or
int
in
out
xchg
mov
lret
mov
aaa
mov
mov
mov
mov
push
test
movsb
add
out
out
insb
jl
sub
cltd
sub
icebp
adc
dec
mov
lcall
mov
sub
or
add
lahf
call
push
jbe
pop
aas
adc
stc
rorb
mov
or
jnp
mov
cs
and
pushf
stos
adc
jp
mov
mov
push
and
xor
and
daa
cwtl
mov
clc
push
cltd
pop
push
repz
mov
inc
sbb
rcr
int
adc
xchg
inc
or
fsubs
rclb
jmp
repnz
cmp
push
mull
xchg
jp
push
mov
arpl
sarb
movnti
inc
dec
scas
sub
cwtl
pop
cli
jl
aad
pop
mov
mov
ficompl
pop
vmread
je
cs
jne
test
ljmp
mov
sti
jo
das
sbb
mov
les
push
sub
in
insb
loope
add
mov
popf
scas
fs
lods
lea
lret
inc
daa
imul
add
jbe
adc
dec
sahf
and
pop
push
dec
inc
jmp
or
jge
mov
in
xlat
and
les
push
cmp
xchg
adc
dec
push
popa
bound
mov
outsl
pop
jg,pn
outsb
sub
inc
fimuls
movsb
fisubrs
popl
pop
xchg
add
movsb
inc
add
mov
and
outsl
sbb
les
mov
pop
mov
ficomps
cmpsl
iret
mov
fsubl
stos
or
lret
divb
mov
movsb
sbb
int
dec
dec
test
mov
mov
xor
inc
mov
lahf
insb
mov
add
jle
shrl
push
lret
dec
xchg
cmp
dec
std
mov
jl
mov
jb
out
mov
les
aad
dec
and
add
sahf
push
mov
or
dec
lds
and
ds
jno
pop
popa
cmp
mov
ds
int
mov
sbb
jo
or
icebp
int
jns
mov
mov
pop
and
das
scas
cmp
ljmp
in
pushf
mov
mov
ja
xorb
dec
loopne
adc
leave
mov
int3
fnstsw
adc
pop
adc
js
push
out
and
jmp
mov
jmp
cmpsb
add
xchg
xchg
push
mov
scas
jnp
movsl
cmp
push
xchg
stos
push
lahf
gs
lods
cmpsl
mov
sbb
lahf
out
inc
and
pop
and
dec
popf
push
mov
test
add
mov
xor
repnz
int
ja
xchg
aam
jb
dec
imul
je
mov
mov
testl
mov
js
inc
sbb
push
sub
fidivl
in
lcall
aam
cli
outsb
cmp
and
sbbl
lods
mov
lea
add
mov
stc
imul
mov
inc
dec
inc
push
lret
sbb
cltd
adcb
cmp
jge
push
push
pusha
or
aad
mov
xlat
jns
outsl
insb
dec
push
xchg
js
sbb
sbb
mov
fidivs
inc
jne
sub
xor
sbb
jnp
insb
notb
xor
mov
adc
add
xor
mov
push
add
jb
imul
mov
xchg
adc
sar
fs
mov
xchg
pop
in
pop
xchg
push
mov
push
mov
ljmp
lahf
pop
in
outsb
inc
adc
inc
rcll
stc
and
jno
addr16
cltd
dec
mov
pop
into
ss
repnz
cmp
stos
mov
mov
sti
jb
xor
dec
mov
sub
xor
shlb
inc
cld
decl
xchg
js
jo
stos
or
cld
mov
adc
inc
inc
adc
test
leave
cmp
scas
scas
lret
xchg
into
call
fmull
sub
mov
mov
mov
cli
mov
bswap
nop
in
fidivs
jb
mov
xor
fisttpl
sub
arpl
shl
pop
les
jge
xor
andl
mov
in
jne
push
mov
adc
mov
xchg
outsb
cmpsb
and
adc
testl
ds
jg
cltd
mov
fildl
icebp
cmp
fnsave
inc
xchg
and
and
aam
lds
fs
or
or
xchg
push
xchg
jo
addr16
mov
xchg
das
loope
lret
pusha
leave
leave
push
push
bound
xor
dec
ljmp
mov
std
inc
loopne
push
xchg
add
mov
cli
lcall
notl
shlb
loope
aam
rclb
sbb
jmp
adc
ds
das
mov
gs
nop
pop
and
pop
test
sbb
sbb
pop
fs
cwtl
insl
and
pop
cmpb
fbstp
xor
dec
test
fisubrs
fmuls
jmp
es
xor
sub
xchg
push
rcrl
inc
or
push
cmpsb
aam
cmp
pop
movl
jno
pop
test
jns
pop
dec
jae
call
sbbb
es
push
test
pop
adc
inc
jecxz
dec
mov
mov
add
lret
xchg
mov
mov
out
loopne,pt
push
xor
insb
shlb
lock
or
push
mov
popf
leave
out
dec
sub
pop
cmpsb
call
cmp
pop
scas
mov
pop
jmp
mov
lock
lahf
movsl
cmp
xor
push
mov
mov
jno
int
divl
sbb
xchg
push
mov
daa
cli
fisttpll
outsl
pop
push
pop
mov
sbb
mov
mov
outsl
push
and
cmp
mov
mov
pop
packuswb
or
xor
jge
out
xchg
xor
sub
ret
lret
int
sarb
dec
test
scas
inc
cmp
inc
mov
lcall
xor
inc
add
pop
outsb
inc
data16
push
outsb
les
xchg
push
mov
pop
sarl
cmp
push
or
jae
push
xchg
call
pop
scas
xchg
add
cmp
pusha
cli
mov
int
mov
in
pop
and
mov
jmp
js
push
into
cmc
pop
test
mov
and
push
imull
and
sub
lea
cmpsb
cltd
pop
push
jp
data16
enter
push
adc
repnz
push
imul
pop
sti
ret
xchg
add
or
push
mov
cltd
out
sbb
jbe
cmpsl
dec
sbb
sbbl
jbe
xlat
sbb
enter
cs
jno
jne
cmp
lock
and
dec
addr16
mov
popw
and
mov
test
jmp
dec
and
cmc
ret
sbb
int3
inc
push
adc
or
js
adc
dec
sbb
jnp
out
arpl
mov
add
in
sub
lret
xchg
loop
imul
push
jb
jno
sub
ja
aad
insl
inc
jmp
and
cltd
idivl
add
mov
fmull
in
popa
ret
xchg
out
push
jno
imul
mov
or
int3
mov
pop
mov
aas
fsubrp
cmp
loope
shufps
sti
sti
mov
or
and
push
and
daa
ja
seto
cmp
xchg
sahf
sub
into
push
stos
adc
mul
sarl
pop
bound
dec
xchg
add
cltd
xor
mov
inc
adc
out
dec
andb
cmp
pop
sti
andb
xchg
cmpb
sahf
pop
push
push
ljmp
jl
adc
shll
push
adc
loope
or
pop
mov
movsb
je
loope
test
icebp
push
call
clc
xchg
xor
jg
popa
rol
pop
mov
adc
push
inc
jl
mov
fdivp
int
aam
popf
ljmp
xor
imul
sub
add
inc
out
faddl
cmp
mov
and
in
mov
dec
test
rcl
popf
pop
and
cmpsb
test
push
sbbb
xchg
push
mov
cmp
mov
or
adc
lret
or
leave
push
ret
jle
sub
adc
push
pop
push
dec
xchg
mov
pop
fidivrs
dec
dec
outsl
xchg
jne
sub
pop
push
sbb
rep
sbb
cmpsl
jg
cwtl
cs
fcmovu
out
subb
popa
inc
jno
lds
cmpl
cli
xchg
fsubrl
mov
push
pop
cli
hlt
fmulp
test
lds
push
imul
jb
hlt
int
pop
scas
or
addr16
in
inc
dec
sar
clc
insb
mov
enter
jmp
pushf
out
or
add
push
loopne
sbb
lods
mov
sub
jnp
or
cld
and
add
das
mov
xchg
stos
ds
cltd
mov
shll
sub
pop
mov
dec
push
xchg
insb
jbe
mov
es
repnz
or
push
mov
lock
aad
jns
insb
aam
dec
pop
mov
push
inc
pop
cwtl
mov
adc
or
iret
and
cmc
dec
mov
sbb
aam
dec
stos
fnsave
int
test
cmp
scas
xor
loope
imul
cmpsb
inc
jge
inc
or
daa
loopne
rcrl
pusha
jmp
jge
jb
stos
xor
dec
dec
pop
push
cwtl
cmp
lret
int3
cmp
sbbb
call
xchg
imul
pop
pusha
push
mov
inc
xchg
out
push
pusha
inc
xchg
test
mov
adc
add
sub
mov
shrl
ljmp
loopne
sub
pop
sarb
dec
filds
in
dec
inc
filds
mov
ljmp
or
cld
add
pop
and
and
sub
icebp
and
icebp
arpl
mov
mov
mov
push
mov
ljmp
out
dec
mov
repz
mov
push
inc
rolb
pop
cmpsb
gs
aaa
cmp
movsb
push
lahf
ljmp
sti
cltd
cmp
cltd
call
mov
sub
sub
insb
adc
sbb
and
mov
stc
lock
push
pop
enter
jge
push
movsl
int
lea
stos
out
push
repz
push
push
or
mov
scas
add
insb
push
daa
arpl
stc
or
pop
cli
and
fsubs
ss
shr
das
rorb
xchg
popa
stos
dec
sub
mov
loope
jne
mov
inc
or
daa
xor
subl
dec
mov
dec
sub
into
outsb
fmul
inc
in
push
pop
push
lods
scas
and
sub
cmpsl
jle
loop
jo
cld
fst
pusha
sub
pop
xchg
mov
fnstsw
add
bswap
adc
xlat
pop
cltd
push
pop
dec
xchg
and
mov
mov
ds
loop
cmp
jmp
in
adc
addr16
jp,pn
lret
sbb
sbb
inc
xchg
dec
int
sbb
scas
mov
mov
das
add
inc
inc
bound
pusha
imul
cmp
fstpl
stos
in
xchg
cmpsb
mov
mov
cmp
stos
push
mov
or
fcoml
repz
stc
enter
pop
cmp
out
test
aad
ss
js
aam
pushf
nop
pop
loop
xor
mov
pop
test
sbb
in
icebp
lret
iret
and
sarb
ljmp
lret
add
mov
sbb
push
cli
imull
mov
pop
jbe
ja
sbb
outsl
cmc
jae
or
push
lods
dec
cmpsb
add
ret
cs
push
iret
iret
jecxz
xor
dec
dec
add
nop
mov
and
dec
jo
out
int
popf
adc
dec
inc
jns
enter
adc
dec
xchg
or
inc
es
xchg
call
cld
scas
and
jp
loope
push
mov
int3
fadd
test
aam
movsl
sub
sub
popa
adc
call
sub
bound
hlt
mov
lcall
scas
bound
loope
loope
cmc
mov
jle
shl
ljmp
rclb
push
xchg
xor
mov
rol
jne
mov
adc
push
add
fisttpl
xlat
xor
shrb
inc
mov
mov
and
fcompl
pushf
movsl
fs
stos
add
js
out
and
scas
stos
repz
jg
jae
mov
sub
add
jg
jl
arpl
dec
jo
cmp
outsb
mov
jno
into
loope
xor
xchg
dec
outsl
aad
std
ds
or
push
mov
ss
int3
pop
cmc
int
je
xor
stc
scas
mov
fisubl
mulb
pop
out
jg
repnz
add
cmp
rorl
xchg
xor
fistl
scas
mov
outsl
mov
mov
adc
fistps
aas
or
out
jmp
fstl
icebp
add
push
dec
sbb
adc
or
jecxz
insl
mov
xchg
cs
cwtl
sbb
push
divb
jle
push
cli
imul
mov
shll
fsubp
or
cmp
inc
das
jo
out
lock
pop
mov
aam
call
mov
rcrb
cld
popl
rolb
aaa
add
popa
add
sbb
popf
imul
mov
jecxz
dec
push
pop
dec
popa
mov
lock
mov
addr16
mov
inc
iret
jns
les
sahf
xchg
sbb
inc
mov
add
mov
mov
hlt
and
mov
sbb
xlat
jbe
stos
mov
rorb
imul
cmp
mov
lcall
subl
fmull
in
sub
and
xchg
xchg
mov
dec
mov
negl
cmp
insl
outsb
pop
aaa
sbb
dec
orl
jle
sub
shll
or
mov
ss
push
push
xor
int
or
jne
lcall
add
and
or
jbe
jle
aam
outsl
sub
push
adc
xor
fisubl
mov
cmp
out
bound
ss
jae
lea
mov
mov
sbb
add
repz
mov
loopne
mov
mov
and
adc
popf
inc
arpl
cli
add
arpl
sahf
mov
lcall
ret
clc
pop
js
imul
cmp
nop
inc
stos
pop
jb
rcl
dec
aas
rolb
adc
das
dec
loopne
sub
sbb
mulb
sub
adc
leave
mov
out
xor
inc
push
cmpsl
and
in
test
xchg
ficompl
out
loope,pn
cli
pop
xor
push
dec
xor
cmp
in
int
cltd
add
push
lcall
jle
flds
in
loope
test
xchg
int
cmpsb
std
push
out
cmp
jb
insb
insb
jp
mov
jne
loope
adc
imul
mov
cmp
inc
repnz
push
jnp
adc
sub
stos
jmp
xorl
inc
arpl
push
dec
movsb
push
mov
les
testl
and
mov
jl
loopne
xchg
fildl
dec
pop
jg
push
add
cmp
imul
scas
fistpll
dec
sbb
mov
add
orl
xchg
stc
je
mov
xor
adc
lock
rcrl
mov
and
sbb
xor
inc
stc
mov
mov
adc
dec
pop
mov
je
and
push
xchg
add
adc
xchg
test
lret
rcl
push
lds
mov
into
outsl
inc
insb
cs
pushl
jns
pop
ret
sbb
jmp
or
push
pop
pop
fwait
xchg
loope
scas
cmp
movsl
cmpsl
adc
jns
xchg
and
movsb
pop
imul
je
pop
ljmp
imul
repnz
adc
or
jo
fisubl
pop
push
mov
add
repnz
out
stc
jle
mov
xchg
pop
xor
pop
pop
jnp
sub
xor
push
inc
push
or
and
shl
mov
pop
fstpl
push
in
pop
ds
pusha
pop
sbb
and
adc
mov
dec
test
xchg
mov
mov
lcall
sbb
cld
shlb
sbb
loopne
add
movsl
cmc
sub
loope
jo
and
fs
rcrb
mov
add
pop
xchg
clc
xor
push
imul
sahf
insl
mov
mov
test
cld
dec
or
test
lcall
jbe
and
sbb
pushw
repz
inc
test
dec
div
cs
hlt
or
sub
sub
sbb
lock
add
daa
jno
add
lods
lds
cli
jecxz
sbb
das
push
mov
pop
dec
aaa
fldl
cmpsl
or
movb
pop
xchg
jecxz
out
test
bound
scas
push
loope
sahf
pop
mov
test
sbbb
scas
imull
cmpsl
popa
xchg
ret
lock
and
out
faddl
lock
mov
xchg
mov
repnz
enter
imul
or
icebp
sbb
add
pop
pop
push
pop
test
mov
out
xchg
and
cmp
inc
rorl
aad
add
imul
and
fs
jne
cmp
inc
pop
xchg
shrb
xor
jne
xchg
xchg
mov
frstors
notw
mov
or
xlat
xchg
mov
sti
enter
in
js
jnp
cli
or
adc
push
enter
xor
jbe
sub
mov
jp
and
add
into
push
xchg
je
data16
scas
insl
das
jo
shll
xchg
rcll
push
stos
mov
ret
push
push
mov
in
inc
inc
jle
mov
mov
add
add
fdivs
and
int3
adc
cmp
xchg
pop
push
jno
stc
push
lret
ret
jg
jge
mov
adc
dec
or
or
popf
jl
lret
jns
mull
pop
cmp
xor
push
jge
pop
stc
mov
add
icebp
or
push
xlat
iret
dec
mov
mov
clc
cmpsl
sub
pop
push
loop
call
jl
inc
push
jmp
lret
jbe,pn
into
daa
or
xor
pop
mov
inc
imul
or
inc
loop
lds
scas
sub
jns
fisubrl
cmpsl
mov
sti
sti
test
jge
pop
in
push
jl
sahf
jg
shrb
or
sub
cmp
dec
mov
popaw
decl
imul
lods
adc
cmp
mov
jecxz
xchg
and
int3
call
or
repnz
sarl
ss
push
js
jo
push
sti
push
stos
outsl
push
sub
inc
xchg
iret
and
jae
xorl
sub
dec
pop
cmpsl
arpl
xor
shrl
clc
hlt
dec
daa
xchg
imul
pop
mov
pop
cmp
fwait
jnp
int3
out
mov
xchg
adc
mov
fwait
fs
lods
jne
jmp
sbb
sbb
dec
cs
jno
into
cltd
test
xor
mov
pop
push
xchg
lcall
add
movsb
dec
or
cmp
cmpsb
cwtl
js
fldcw
mov
fldenv
mov
mov
mov
lret
je
rcl
pop
mov
hlt
mov
add
fldz
or
jae
mov
jmp
mov
call
popf
adcl
and
push
sub
popa
xchg
adc
pop
inc
outsl
loopne
mov
add
inc
and
test
stos
add
stc
dec
mov
in
ret
add
add
sbb
mov
jge
sahf
jmp
rclb
test
cwtl
mov
jl
xchg
das
test
repnz
ret
insb
xlat
popf
lea
fnstenv
addr16
mov
sbb
inc
adc
fbld
arpl
lahf
mov
lret
arpl
push
ss
push
inc
push
sbb
xorl
adcb
sbb
jle
or
cmpb
push
pop
xor
sbb
mov
mov
into
stos
test
jns
aad
or
fld
fidivs
ss
or
ds
inc
adc
movsl
push
mov
dec
dec
mov
test
mov
loope
jnp
xor
in
stc
test
pop
ljmp
fwait
ja
outsl
mov
dec
cmp
jns
cltd
nop
pop
push
xor
pop
movsl
lret
aam
notb
or
push
mov
lret
leave
lcall
roll
call
std
and
mov
xchg
movsb
xchg
lea
ja
fldl2e
xlat
add
mov
test
ds
jbe
sbb
imul
outsb
xor
arpl
mov
cmc
and
mov
xor
push
sbb
rep
aad
add
push
jbe
jecxz
mov
sbb
add
repnz
inc
sub
shl
inc
int
jp
mov
mov
mov
insl
cli
or
mov
push
iret
inc
js
sbb
inc
sub
pop
mov
xchg
add
insb
mov
sti
je
bswap
dec
out
or
insb
xchg
cmp
mov
and
and
mov
or
movsb
jno
cltd
jmp
and
jecxz
movl
roll
ror
jl
jb
sbb
xor
out
int3
retw
out
dec
and
xor
fcmovnb
jbe
jno
adc
out
rorl
xor
jns
jo
clc
leave
repz
sti
fwait
add
int
mov
xchg
bound
and
out
daa
mov
repnz
cld
icebp
lea
push
dec
lods
lcall
rolb
jmp
or
lods
inc
setne
neg
movsb
arpl
mov
xor
push
push
rorl
xor
test
mov
sti
jbe
mov
addb
xlat
imul
and
pop
dec
into
sbb
sbb
xchg
mov
scas
adc
mov
ljmp
shl
and
jecxz
mov
gs
push
dec
scas
outsb
aam
mov
sbb
aaa
and
enter
movsl
sbb
inc
add
jns
lcall
in
mov
sub
sbb
nop
addr16
mov
ljmp
mov
adc
loop
mov
cmp
adc
xlat
dec
and
sbb
loop
cs
or
mov
fcomps
inc
xchg
and
jge
in
or
pusha
fisubl
mov
xlat
xor
lock
push
ljmp
xchg
neg
sbb
or
enter
push
mov
mov
cmpsb
fnsave
fidivl
sbb
sub
dec
mov
push
inc
stos
dec
xchg
scas
dec
mov
jge
aam
and
pop
xchg
in
sbb
cwtl
mov
lock
test
lods
daa
out
mov
pop
and
ja
add
repnz
ret
dec
gs
inc
cmpsb
orb
jae
mov
xor
frstor
add
mov
sub
int3
sbb
xchg
cltd
fldt
sub
xor
ja
xchg
bound
fcom
fwait
mov
push
fwait
arpl
scas
in
rorb
stos
dec
sbb
pop
lret
xchg
xor
xor
cld
mov
popl
or
mov
push
out
mov
lret
cmp
loop
cmpsl
sub
push
adc
lcall
jo
imulb
les
pop
mov
mov
cmp
fs
xchg
int
pop
mov
lcall
jge
outsl
sub
mov
mov
clc
popf
xchg
insb
mov
in
or
jg
lea
pop
shl
test
sar
nop
fildl
shlb
lds
addr16
notl
pop
adc
adc
and
pushf
jnp
repnz
lds
cmp
lds
xor
or
xor
out
and
imul
pop
and
sub
and
pop
pop
xlat
or
push
sub
out
sti
imull
je
pusha
pop
xor
jo
xor
aas
add
sub
adc
xchg
repz
adc
aaa
mov
sub
call
lds
sub
jmp
inc
sarb
xchg
ficoms
test
imul
ret
sbb
cmp
cmpsl
fld1
sub
sti
bound
push
pop
ret
or
cmpsb
aam
scas
gs
push
int
out
inc
fidivrs
dec
sbb
jmp
and
or
loop
mov
pusha
sti
fs
xchg
add
xor
and
add
fnstenv
cli
push
rcl
lock
jne
mov
adc
add
ret
and
push
mov
push
mov
sub
inc
push
xorb
push
scas
sbbb
mov
test
jge
das
ljmp
and
push
mov
jmp
or
icebp
push
jb
outsl
mov
add
xchg
xor
sbb
sbb
scas
and
adc
pop
jmp
inc
and
sbb
or
pop
in
in
mov
xchg
icebp
repz
jle
fdivrs
outsl
hlt
or
xchg
adc
dec
addr16
and
pop
dec
or
and
adc
pop
ret
lret
jae
jecxz
clc
stos
roll
dec
mov
ret
sbb
push
fs
add
inc
mov
mov
mov
out
stos
mov
subb
fidivrs
movsb
push
jb
mov
hlt
cmc
cmp
jbe
cwtl
ja
pushl
jg
mov
jp
fs
test
pop
or
cmpsb
or
lret
push
mov
cld
inc
push
xchg
test
pop
jbe
mov
aam
outsb
pop
xor
and
sbb
xchg
mov
jg
push
insl
push
mov
mov
gs
sbb
into
xchg
outsb
insb
jae
add
pop
cmp
sub
add
inc
xor
daa
repz
loope
mov
aam
rcrb
int
cmp
xchg
aas
lret
pusha
call
out
fadds
pop
xchg
ja
lods
jo
rolb
sbb
mov
xchg
cmp
push
xor
mov
adc
movsl
ljmp
test
dec
fsubrs
outsb
out
pop
outsb
push
fistps
cld
mov
cmc
cltd
xchg
aaa
push
sub
imul
aad
lds
ror
mov
outsb
lret
ss
cmp
test
xchg
testl
push
in
inc
and
mov
idivb
dec
mov
cmc
add
outsb
pop
in
cmp
aad
lea
jle
jmp
xchg
rorb
lret
dec
dec
jmp
fsubl
adc
gs
std
pop
stos
mov
jg
mov
mov
gs
sbb
lret
cltd
ds
cmp
insb
jne
push
cmpsb
mov
jno
mov
pushf
cmpl
mov
push
cmp
dec
push
dec
fwait
adc
sbb
lret
pop
add
or
cmp
inc
add
addr16
xor
scas
mov
cwtl
mov
ret
movb
ret
iret
pushf
je
mov
pcmpeqb
add
pop
subl
xchg
xchg
cmp
push
cmp
jmp
cld
dec
xlat
jge
fxch
dec
fisubrl
addr16
add
sahf
sub
repz
xchg
sub
int
pusha
add
and
aad
in
xchg
dec
xchg
sbb
stc
xor
mov
fidivl
sbb
gs
scas
jg
mov
and
xor
add
rorl
in
test
int
xor
or
inc
cmp
sub
jo
stos
push
adcl
je
lret
xchg
adc
cmc
xchg
sbb
dec
jb
faddl
mov
push
inc
mov
xchg
or
xchg
and
xor
iret
inc
inc
sbb
fdiv
adc
sbb
mov
int
adc
dec
dec
cmp
sub
idiv
cmp
fwait
jb
push
mov
mov
inc
movsb
or
call
or
cmpsl
roll
and
dec
movb
idivl
pop
xor
lcall
out
insb
cmpl
pop
aam
jmp
push
out
sarl
out
fstp
jne
adc
divb
pop
mov
dec
mov
outsb
fisttpl
pushf
cmp
ljmp
sub
rclb
sahf
stos
mov
imul
movsb
add
aad
mov
leave
cld
xor
movd
xor
aad
scas
sti
rcll
push
test
insb
sbb
sbb
cmpsb
outsb
filds
repnz
faddl
mov
ja
faddl
sub
jne
and
inc
pop
mov
add
cmp
and
sti
mov
mov
or
pop
dec
icebp
and
pop
push
rcrb
sti
pop
cmpsb
testl
dec
repnz
add
popa
imul
cmp
sbb
mov
jb
dec
pushf
mov
int3
shll
sub
fbld
cmp
in
xchg
aas
cmp
gs
sbb
call
mulb
jb
inc
jnp
inc
xor
movsb
sub
pop
xor
inc
imul
out
cld
mov
adc
dec
mov
test
jno
dec
rol
pop
sub
mov
cmpsb
out
das
xchg
or
sti
mov
icebp
xchg
sub
fcmovne
dec
hlt
popf
xor
adc
mov
sbb
arpl
int3
xchg
inc
cmpsl
in
loope
xchg
push
jb
mov
mov
insb
idivl
lret
xorl
ljmp
lods
cld
fcoml
jno
lea
add
push
shlb
or
adc
es
cld
fcomps
mov
pop
loope
jmp
frstor
xor
fs
pop
sbb
xchg
cmp
call
repz
inc
mov
icebp
fldenv
pop
enter
shlb
mov
dec
popf
scas
into
jl
fldenv
fwait
dec
enter
insb
into
aaa
pop
mov
push
lods
and
sub
mov
aas
mov
cld
xchg
push
movb
stos
mov
push
sub
int3
inc
fst
add
mov
push
cmp
adc
mov
lods
jmp
sbb
ds
add
movsb
mov
cmp
and
lods
fadd
cmpsl
push
jge
mov
shl
xchg
jnp
in
add
aam
pop
fsts
or
imul
je
ss
pop
repnz
push
mov
in
dec
fbld
fs
add
out
daa
sbb
mov
xchg
lret
adc
clc
push
mov
popa
mov
ljmp
jae
scas
orl
imul
hlt
cmp
cmp
imul
jae
mulb
cmpl
jne
sti
sub
out
mov
clc
cmpsl
lfence
mov
xor
scas
into
bound
push
loope
sbb
shll
arpl
adc
xor
dec
pop
inc
jnp
arpl
dec
aas
or
mov
jg
aas
adc
sbb
jmp
cmpsl
cmp
mov
test
push
push
in
mov
xchg
mov
adc
in
pop
out
mov
sub
xchg
add
sbb
or
xor
inc
xlat
mov
ja
nop
pop
adc
stc
jno
xor
rcrl
pop
push
mov
inc
inc
xchg
loopne
sbb
and
das
jno,pt
stc
inc
imul
xor
xor
sbb
mov
roll
les
hlt
sbb
popf
xor
push
pop
and
mov
fcoms
je
stc
mulb
jmp
shll
out
rcll
aad
sub
jecxz
jecxz
pop
jg
jnp
cld
push
sbb
sbb
inc
hlt
aad
push
and
inc
gs
sti
xchg
mov
mov
mov
ljmp
ffreep
cmp
cmp
and
sub
sub
push
das
cmpsb
mov
lds
fcmovb
sub
dec
insl
arpl
test
mov
stos
push
rolb
movl
or
lahf
push
outsb
xorl
outsb
daa
push
dec
cmc
fnsave
out
insl
inc
test
jbe
fdivrs
arpl
shrb
sub
mov
imul
in
xor
lds
fwait
movsb
cmc
pop
xor
mov
outsl
pushf
sbb
jl
sub
scas
loope
push
mov
inc
push
or
or
lret
insl
mov
xorb
inc
loopne
cmp
daa
jle
int
ja
or
add
sbb
sbb
scas
roll
pop
push
mov
jae
fiaddl
fcompp
sbb
int3
mov
xchg
inc
adc
xorb
cmp
pop
pop
push
test
pop
inc
incb
sbb
fnstenv
pop
add
adc
xor
xchg
push
inc
push
not
cmc
les
repnz
push
inc
sar
cmp
mov
push
mov
jl
out
xchg
in
lret
mov
mov
repz
add
sti
mov
adc
push
jns
sub
jns
xor
add
xchg
sbb
int
add
test
mov
stc
fists
lds
sub
fcmovne
adc
call
mov
sahf
ja
sbb
pop
insb
imulb
in
push
out
lods
fcoml
cwtl
jg
pop
mov
das
cmp
arpl
loope
inc
cmp
mov
jp
pop
cbtw
add
dec
addr16
adc
arpl
xchg
mov
lea
fwait
jo
mov
xchg
sahf
les
pop
lds
std
xor
jecxz
js
cld
ss
out
xlat
jg
ss
cmpsb
adc
bound
jecxz
jns
mov
out
dec
inc
lods
int
cmp
scas
add
inc
push
jp
jno
ja
xor
mov
jo
push
repnz
mov
addr16
pop
adc
cmp
insl
cli
decl
in
xor
js
add
popf
inc
sub
aaa
sbb
mov
fmull
aam
in
out
out
cli
test
int
cmp
xlat
fwait
dec
cmc
fistps
test
jmp
insb
mov
shll
aas
stos
psubb
mov
sbb
mov
lock
aam
and
loop
test
fisubs
xchg
arpl
insb
inc
movsl
outsl
jp
dec
jbe
popa
adc
aaa
xchg
jnp
dec
iret
pop
aam
mov
mov
dec
fcmovnbe
outsl
push
cmp
cmpsb
int
jne
fwait
lahf
lcall
cmpsb
stc
js
adc
jmp
mov
stos
arpl
jns
dec
call
stc
stc
daa
lock
xchg
adc
scas
mov
add
or
pushf
push
in
push
sbb
fildll
and
stos
call
lods
cmp
xchg
repz
stos
andl
nop
bound
inc
out
rolb
pop
hlt
int3
push
std
lret
or
in
mov
jp
es
jbe
call
scas
push
call
pop
sbb
je
mov
jno
lods
in
add
repnz
pop
jecxz
popf
scas
aas
mov
std
mov
push
push
mov
test
mov
fbstp
sub
dec
push
test
bound
dec
aaa
sub
xor
jns
fwait
xchg
push
test
shlb
cs
in
mov
mov
cmp
pop
jns
icebp
push
fstps
jno
ds
cli
sub
mov
pushf
adc
cmpsl
push
mov
roll
jnp
out
pop
pusha
and
or
mov
test
add
popf
dec
in
insb
ss
scas
lods
pop
adc
jl
and
popa
sti
out
aas
push
pop
cltd
jo
push
sub
lock
mov
xchg
mov
sub
jne
loope
pop
test
insb
jl
inc
jae
pop
jp
cs
xor
clc
mov
lods
arpl
mov
fndisi(8087
data16
push
mov
dec
dec
jns
out
enter
rcrb
push
insb
in
fucomip
inc
aaa
cld
mov
std
gs
and
add
push
outsl
jne
pusha
ret
adc
inc
cmp
mov
test
scas
pop
mov
insl
xchg
cli
int3
or
gs
and
jo
jo
in
pusha
or
adc
aas
fwait
lods
pusha
mov
add
aad
pushl
cmp
pop
movsl
out
push
sub
repz
and
and
push
imul
jnp
dec
fcmove
lcall
jbe
fs
dec
rolb
and
adc
movsb
xchg
test
mov
xor
dec
push
clc
push
adc
pop
cmpl
mov
xchg
sbb
xor
int
push
cmp
insl
fstpl
sbbl
fwait
jecxz
jmp
dec
sbb
out
adc
int
mov
js
jb
ja
cwtl
inc
decl
lods
fwait
mov
sbbl
add
jo
adc
mov
aad
rcll
shll
icebp
in
ret
and
dec
mov
pop
push
dec
and
test
pop
pop
out
mov
fistpll
add
pop
cwtl
sub
es
inc
mov
push
gs
stos
mov
and
inc
cmp
stos
mov
push
mov
insl
lods
movsb
sbb
mov
dec
xchg
int3
mov
rcll
sbb
popf
xorl
lahf
popf
lock
push
lcall
popf
loope
into
or
lea
jnp
cwtl
mov
lock
xor
push
xchg
lret
test
insb
das
sahf
push
mov
xchg
fistpl
and
inc
jge
movsb
sbb
xchg
iret
push
stc
xchg
lahf
sub
sbb
cld
mov
add
insb
cmp
fdivrl
bound
ret
push
repnz
mov
pop
jmp
loop
mov
sbb
fmull
pop
jnp
in
sahf
xchg
jmp
sub
rcrl
add
fmuls
movsl
adc
int
mov
mov
shrl
adc
hlt
push
out
ret
les
imul
add
nop
add
pop
adc
outsb
bound
pop
jmp
fldenv
cwtl
ret
lods
shrl
js
sub
push
cmp
xor
jg
les
xchg
dec
push
sti
aam
stc
adc
popa
out
enter
addl
ret
mov
push
fstpt
mov
dec
jnp
cli
cltd
inc
jg
out
fcompl
fiadds
cmp
mov
and
cmp
mov
jae
sti
out
jb
jl
inc
out
cmp
out
jne
mov
mov
pusha
out
or
xchg
xchg
cmpsb
ja
add
out
mov
nop
int
rcrl
jo
inc
inc
jmp
mov
leave
fdivrl
cli
sub
adc
shlb
inc
push
cmovo
pop
push
shrb
sbbl
in
inc
adc
pop
inc
andl
lock
repz
mov
daa
mov
xorl
sub
cwtl
dec
mov
xor
push
add
stc
frstor
mov
lods
lods
jg
daa
and
test
clc
ljmp
or
stos
mov
repnz
mov
cwtl
add
xchg
in
faddp
pop
push
ljmp
xlat
cmp
jo
rorb
inc
mov
nop
test
cli
cmp
lret
into
call
push
stos
das
in
addr16
or
mov
mov
loopne
mov
mov
sub
es
iret
fcoms
pop
idiv
jnp
jbe
pop
outsl
adc
fistpl
repz
push
cmp
test
mov
sahf
lret
xchg
or
test
std
or
sub
and
pop
pop
ljmp
cmp
lcall
xchg
insl
insl
push
movsl
imul
pop
push
lcall
xchg
fimull
jmp
daa
push
cmpb
push
sub
stc
ljmp
cmp
lret
pushf
cmp
ljmp
xchg
pop
push
jge
inc
movsl
test
mov
bswap
xlat
or
pop
push
lods
bswap
orl
adc
mov
mov
inc
mov
push
mov
dec
jl
mov
pop
and
fcomip
in
insb
out
arpl
pop
ja
xchg
adc
jae
insl
lds
mov
enter
pop
repz
mov
dec
mov
mov
inc
shr
mov
xchg
pop
sbb
in
xor
adc
neg
imul
push
fdivp
and
loope
push
and
jns
push
popa
xor
insl
repz
xchg
sbb
push
cmp
dec
mov
cld
mov
xor
addr16
daa
in
mov
pop
and
and
int
dec
and
fcoms
out
jle
xchg
out
loope
xor
xor
xchg
dec
pop
and
dec
ja
fimull
adc
mov
fisubrl
mov
int
lea
daa
ja
cmp
ret
mov
arpl
jecxz
in
dec
dec
xchg
mov
xor
jp
leave
xor
push
push
pop
push
popf
jmp
les
insb
popa
sub
push
stos
cltd
imul
sub
adc
xlat
inc
fldt
pop
or
int
icebp
cmp
imul
js
lahf
aam
push
push
xor
inc
sbbl
sub
out
pop
lock
push
inc
adcl
dec
cmp
inc
push
icebp
lcall
adc
out
push
xchg
int
out
pop
orl
jae
ret
test
mov
adc
scas
leave
cmp
mov
lods
jp
jae
fchs
out
mov
cmp
and
mov
mov
xor
jge
popf
mov
and
jnp
xchg
lcall
xlat
mov
sub
lock
clc
adc
sub
inc
rorb
sub
shl
sbb
rcll
scas
cwtl
mov
loop
mov
clc
nop
dec
repz
in
or
aas
add
loope
sbb
sub
sahf
movsb
xor
fcompl
xchg
enter
pop
cwtl
pop
dec
push
adc
gs
xor
fisubl
mov
fstp
nop
push
divl
mov
or
sub
in
out
push
jg
pusha
jmp
stos
mov
sub
movsl
sub
pop
add
nop
xchg
pop
xchg
imul
push
movsl
lret
inc
mov
push
rcr
push
jns
inc
enter
jmp
inc
xor
je
mov
clc
into
sbb
es
mov
jne
iret
xor
test
cwtl
orb
ret
xchg
pop
xorl
add
hlt
adc
pop
stos
movsb
xchg
xchg
ja
or
rolb
dec
mov
subl
adc
sub
inc
and
shll
in
addr16
ja
adc
or
xchg
mov
mov
push
cmp
push
dec
add
xor
outsl
js
shr
lock
mov
jb
and
jmp
pushf
das
jge
ret
xor
jp
jno
mov
gs
adc
xchg
lcall
aaa
mov
jmp
mov
outsb
clc
fildll
adcb
les
mov
out
add
jae
xchg
sbb
stos
mov
sar
cmp
mov
imul
aas
xchg
fiadds
mov
inc
mov
in
inc
loopne
imul
push
jge
pop
dec
loope
push
push
sbb
icebp
sub
cmp
gs
cld
test
sbb
push
movsl
jle
jge
push
jo
ret
shll
daa
loope
sub
sbb
xlat
inc
test
cli
cmpsb
fimull
sbb
xor
xor
add
sub
push
jmp
sbb
xlat
mov
addr16
lcall
mov
push
dec
push
repnz
adc
mov
pop
lods
mov
push
fisttps
in
dec
jmp
adc
addr16
adcl
paddsb
outsb
dec
inc
fidivrs
sub
fcmovb
pop
jbe
lods
ljmp
cmc
push
cwtl
lods
into
rcrl
lock
imul
mov
push
jae
rclb
cltd
adc
xchg
cmpsb
dec
lods
jne
xor
jge
repnz
lgs
arpl
dec
cmp
cmc
clc
adc
xchg
jmp
push
mov
jo
insl
psubusw
cmp
jo
pop
pop
jno
cmpsl
pushf
adc
lea
loop
lods
jl
pop
cmp
jo
dec
jmp
lods
lds
add
adc
insb
inc
pusha
mov
scas
into
test
sbb
aas
repz
test
pop
test
scas
fstp
inc
test
cmc
jbe
push
push
jp
inc
pop
test
aas
icebp
aam
or
dec
bound
mov
bound
or
push
stos
jbe
sub
and
mov
shll
out
cmpb
je
xor
iret
cs
mov
sarl
outsl
loope
mov
jns
sub
stc
ljmp
arpl
pop
cmp
jl
xor
or
rcrb
xchg
inc
fs
mov
aam
adc
rolb
xor
push
sbb
lds
sar
jo
inc
or
in
ss
sub
nop
pop
arpl
or
and
adc
cs
jne
into
jmp
sub
mov
jns
push
mov
inc
add
xor
mov
stos
jge
call
inc
push
cltd
xor
jl
adc
inc
or
mov
imul
insl
nop
mov
xor
out
or
nop
and
repnz
lods
cmc
mov
in
mov
mov
arpl
inc
out
mov
pop
nop
scas
dec
out
in
repz
add
faddl
xor
push
test
xor
outsl
sub
ret
sbb
outsl
ret
add
sahf
outsb
mov
addl
test
jle
sub
add
sub
cmp
inc
popf
mov
inc
xor
popf
mov
ret
sub
mov
ret
enter
loopne
mov
pop
sub
and
or
gs
in
adcl
scas
push
jbe
insl
adc
or
movsl
frstor
bnd
pop
mov
push
pusha
cmpb
or
or
pop
cmp
lcall
sub
in
ret
lret
fmuls
rcr
orb
daa
bound
xor
sbb
push
js
sarb
ja
xchg
adc
pop
sahf
add
nop
fs
xor
mov
jge
dec
xchg
test
sub
pop
imul
addr16
hlt
cmp
fcoms
aaa
sub
adc
lea
sbb
mov
add
sub
pusha
jl
inc
arpl
mov
mov
xchg
into
repnz
and
xor
dec
bound
xchg
xchg
pusha
xchg
mov
loope
mov
std
mov
in
and
sub
pop
popf
test
call
ja
cwtl
mov
mov
mull
mov
mov
pop
insb
sub
gs
lods
add
out
test
inc
push
leave
leave
or
sub
sahf
imulb
or
jp
or
fs
and
mov
jb
sub
push
in
adc
popa
stos
shlb
outsl
pop
and
or
pop
mov
loope
inc
lret
out
ljmp
or
jb
or
jg
jl
lods
pop
sbb
filds
jg
dec
out
sbb
dec
pop
and
jl
mov
lea
xchg
or
sbb
test
or
shll
loopne
sbb
pop
sbb
in
or
out
push
cli
out
and
out
adc
rol
stc
shlb
insl
push
in
dec
mov
sahf
push
hlt
jno
movsb
int3
cmp
adc
push
sub
ret
push
cmp
dec
iret
repz
lds
jp
inc
mov
outsb
test
inc
mov
mov
std
xor
inc
cs
mov
aam
cmpsb
mov
out
push
test
lock
pop
xor
cmp
lcall
mov
sbb
mov
dec
rolb
adc
mov
add
mov
test
stos
mov
mov
lcall
add
mov
out
scas
adc
test
aas
xchg
fcmovb
adc
es
out
cltd
xchg
mov
dec
sub
and
sahf
adc
fst
inc
xor
jmp
jg
inc
mov
mov
imul
out
out
outsb
test
or
mov
in
out
xor
add
xchg
sub
mov
js
xchg
mov
call
cmp
adc
mov
mov
nop
add
mov
punpckhbw
mov
insl
movsb
gs
jmp
mov
cmp
sub
and
das
cli
mov
scas
out
movsl
push
mov
jns
inc
loope
lcall
movsb
cld
pop
xchg
movsb
lcall
mov
jl
std
ljmp
mov
xchg
lds
jmp
pop
sbb
sub
pop
adc
or
jno
aad
test
scas
pop
mov
pop
sbb
push
xor
sub
jo
pop
cmp
jl
dec
pop
xchg
add
inc
cmp
jg
dec
mov
cmp
enter
ret
fistpl
or
lret
add
fs
cmp
mov
ss
adc
arpl
mov
mov
cld
jae
aas
mov
sbb
imul
outsb
adc
inc
inc
inc
xchg
popf
lcall
cwtl
push
xchg
xchg
cmpsb
sbb
sub
push
out
xlat
fcmovnb
mov
shll
jno
test
pop
aam
sahf
mov
subl
aaa
flds
jp
push
adc
orb
test
xchg
shr
popf
cmpsb
cmc
adc
lock
cmp
and
mov
loop
mov
iret
repnz
pop
arpl
pop
popa
mov
mov
cmp
mov
cmpsl
inc
lea
loope
mov
xchg
cmp
jecxz
cs
and
mov
jne
cmc
dec
out
sub
push
sub
xchg
jmp
mov
outsl
mov
xor
mov
or
fstpt
and
sub
icebp
xchg
cwtl
lret
repz
xor
pop
cmp
aas
mov
mov
jmp
lret
or
outsl
mov
jmp
das
popf
into
pop
add
leave
jge
mov
dec
test
inc
popf
ja
jae
imull
cwtl
mov
jno
test
xchg
inc
test
lcall
flds
xor
cltd
mov
iret
ret
mov
inc
pushf
shrb
dec
mov
popa
and
pop
shlb
pusha
movl
stc
es
popa
jg
or
push
mov
push
lret
negl
fidivrs
shll
and
mov
in
cmp
shlb
cld
repnz
jmp
mulb
push
cvttps2pi
add
push
xchg
push
mov
jge
std
sub
adc
fs
pop
pop
adc
push
dec
inc
sbb
mov
outsb
arpl
aam
push
insl
aam
cmp
shrl
sbb
inc
testl
imul
lock
out
es
loopne
xchg
aaa
imul
jge
pop
cld
inc
ret
push
sbb
out
jmp
outsl
in
add
imul
inc
mov
inc
jo
les
lret
clc
mov
pop
lea
outsl
test
insb
sub
aad
pop
inc
or
pop
dec
sub
aam
call
in
xchg
outsl
xor
xchg
enter
pop
sar
mov
out
cmp
stos
cmp
cmpsb
xor
xor
out
in
sub
dec
sub
shll
dec
sub
fcompl
sub
jbe
call
lcall
insl
or
xlat
or
inc
insb
push
dec
negb
mov
dec
out
mov
jecxz
pop
inc
adc
sub
cmpb
subl
push
dec
test
pop
cmp
bswap
jmp
dec
add
adc
mov
sbb
mov
mov
cmp
pop
mov
dec
outsb
dec
xchg
scas
insb
mov
jecxz
adc
cmp
and
xlat
loope
popa
sti
cmp
out
sarl
out
dec
data16
sub
fcmovnbe
jbe
xchg
push
cmp
pop
dec
cwtl
xchg
push
repnz
dec
mov
iret
clts
xchg
arpl
cmp
ja
out
pop
ss
xchg
and
mov
mov
jge
cmpsl
mov
xor
dec
cltd
stos
loop
jmp
shll
fistpll
dec
xor
pop
in
xchg
cmp
mov
mov
aam
push
jl
loope
adc
cmpl
sbb
int
call
mov
push
fwait
add
frstor
pushf
out
not
sti
js
mov
popf
imul
flds
inc
ficompl
jmp
inc
push
test
pop
shlb
xchg
dec
dec
dec
aam
cli
sbb
std
in
mov
aas
mov
ljmp
push
shl
call
jbe
pop
adc
mov
inc
int
jecxz
out
ror
pushf
std
fimuls
pop
in
fisubrl
jns
mov
jbe
mov
pop
outsb
ret
daa
add
int
lret
mov
testl
test
xor
push
adc
jmp
leave
dec
scas
push
cmp
or
test
dec
or
sbb
bound
insb
je
push
jecxz
push
cmpsb
push
hlt
loopne
jl
sub
pop
in
mov
xorl
sbb
lods
mov
pop
out
lock
jge
dec
cmp
in
cmp
icebp
jb
adc
xor
mov
adc
xlat
ljmp
dec
xchg
and
shrb
or
fwait
cmp
divb
int3
push
in
jecxz
int3
popf
add
xchg
lds
rcll
cltd
ffree
dec
xchg
jge
cmp
aas
add
xchg
rol
or
scas
inc
add
or
add
jl
push
sub
arpl
in
leave
outsb
mov
fisttps
sbbb
mov
push
cmp
push
push
loop
decl
ficoms
fwait
push
mov
sahf
mov
cmp
mov
out
movsl
sbb
mov
pusha
test
inc
pop
in
pop
jle
add
and
dec
test
out
push
mov
aad
lods
dec
aaa
pop
ret
push
and
sar
outsl
fmull
xchg
cld
aaa
cmp
pop
xor
addb
repz
inc
sub
sbb
adc
jbe
dec
jecxz
mov
push
push
push
push
mov
fimuls
loopne
inc
insl
in
xor
test
push
sbb
int3
pop
loopne
cmp
xor
movb
incl
leave
cli
mov
mov
sbb
pop
mov
inc
or
mov
movsb
test
mov
stc
or
clc
hlt
mov
sub
jns
xlat
mov
cwtl
sub
sbb
insl
stos
outsl
pusha
outsb
or
aaa
jmp
ja
repnz
sti
in
out
push
mov
jle
fs
sbb
arpl
mov
lea
les
jbe
lret
sub
jp
pop
movlps
fidivs
scas
test
call
idiv
xor
fstl
sub
xor
movsb
imul
cmp
cmp
mov
sub
pop
insl
loopne
ja
dec
inc
cmp
push
into
mov
jns
fidivrl
imul
stos
fnstenv
jne
repz
aad
addl
aad
les
popa
std
pop
cmpsb
push
xchg
fnstsw
inc
jno
and
xchg
xchg
out
movsl
sbb
add
mov
lds
cmp
popa
and
mov
add
mov
jae
fstpt
dec
fisttps
sbb
xchg
shrl
into
loope
sahf
add
inc
pop
or
shll
sub
sbbl
insb
inc
fistpl
push
inc
mov
pushf
aad
xchg
sbb
jle
mov
pop
fcompp
or
cmp
jb
dec
lret
scas
cmp
les
test
mov
add
jge
test
pop
cltd
push
into
arpl
pushf
insl
clc
fcoms
mov
out
lret
or
xchg
lcall
cmc
inc
out
lock
mov
js
cmp
stc
popf
inc
sbb
and
push
cmpsl
aam
out
fstps
cwtl
mov
cmp
sub
dec
push
daa
js
and
sbb
insl
push
ds
pop
ljmp
adc
xlat
add
xchg
and
arpl
repz
push
push
fcompl
and
or
add
jle
push
adc
xchg
es
icebp
sbb
fistl
mov
xlat
inc
stos
das
mov
stos
aas
inc
sub
mov
je
filds
dec
int
inc
out
stos
and
lods
sub
getsec
and
mov
fmull
popf
inc
and
les
lea
fsubs
xor
movsb
xor
dec
cmp
pusha
out
push
cltd
imul
and
test
les
scas
and
ret
nop
das
fucomip
lods
addr16
pop
dec
sahf
jge
push
imul
push
ds
mov
cmpb
mov
cltd
mov
loop
pop
stc
sbb
inc
movsl
leave
rol
std
adc
mov
int3
jecxz
and
pop
adc
dec
mov
pusha
dec
and
insl
sub
fimuls
sti
xchg
popf
loope
adc
inc
nop
subb
cmp
push
cs
xchg
mov
pop
dec
testl
or
pusha
lret
in
sub
loopne
arpl
jle
xor
and
lahf
dec
cli
aam
subb
imul
mov
cld
out
jecxz
out
cmp
xor
xchg
jo
mov
scas
jne
push
mov
scas
pop
cwtl
inc
out
mov
mov
test
push
call
mov
in
xchg
mov
arpl
loope
mov
push
fisubrs
jg
rorb
lock
xorl
out
cmp
sub
lahf
mov
jl
xchg
fcomps
push
jp
fdiv
push
xchg
lods
call
xchg
mov
testb
clc
xchg
sub
out
movsb
imul
sti
pop
jmp
dec
les
xlat
xlat
inc
pop
fdivr
lea
inc
push
mov
sub
push
movsb
or
popa
jno
arpl
add
mov
xor
test
push
jbe
xor
sbb
mov
stos
or
imul
mov
maxps
test
mov
cmp
subl
pop
flds
lahf
lock
and
sbb
push
sub
cmp
and
jl
mov
pop
outsb
cmc
aam
scas
ss
inc
stc
das
sub
icebp
xor
pop
or
or
xor
add
sbb
adc
popf
shll
stc
adc
mov
sub
xor
add
shrb
push
fisttpl
bound
push
inc
icebp
cmp
cli
jge
ljmp
mov
clc
or
inc
add
push
in
notl
movsb
add
adc
mov
fnsetpm(287
mov
xlat
iret
movsl
adc
adc
pop
scas
mov
jb
out
loope
pop
add
call
or
xor
dec
fs
pop
in
clc
mov
call
and
ss
mov
sub
add
ss
xchg
arpl
and
int3
int3
inc
push
push
push
xor
stc
popf
push
out
jno
ret
es
enter
idivb
jl
mov
sahf
fstl
lretw
pop
pop
adc
lods
das
lock
sbb
and
or
aad
ffreep
es
loope
js
or
out
pop
add
lahf
xchg
ss
repz
sub
adc
loopne
hlt
add
jg
in
mov
inc
xchg
stc
data16
or
and
add
sub
fnsave
out
adc
mov
cmp
add
mov
dec
hlt
mov
mov
hlt
orb
push
fimuls
xchg
xor
loope
clc
insb
sahf
xor
mov
stos
fcmovne
rcl
inc
cltd
pop
xor
cmpsb
sub
xor
xchg
mov
inc
addr16
outsl
sbb
and
mov
and
movsb
and
in
sbb
aam
arpl
add
mov
test
sbb
fidivs
cld
rcrl
imul
jnp
aas
xchg
jo
jnp
imul
loopne
std
rcrl
aad
mov
out
mov
imul
mov
sub
pop
mov
inc
lea
sub
fmull
clc
dec
rolb
mov
push
sub
mov
stos
mov
jmp
inc
pop
push
daa
out
jle
dec
inc
aad
fiaddl
ljmp
insb
es
sbb
test
mov
cmc
and
ljmp
pop
std
fsubrs
xchg
dec
dec
aaa
jg
fstl
in
sub
mov
adc
ds
out
sarl
shl
jmp
pop
mov
mov
or
loopne
cs
bound
cmpsl
ds
push
popa
cmp
insl
popa
mov
mov
xchg
cmp
shrb
sbb
test
arpl
jae
or
sarb
push
mov
cld
mov
mov
cs
inc
out
cltd
pop
add
jp
insb
pop
sbb
mov
ljmp
in
mov
mov
sti
shlb
das
inc
bound
mov
push
cltd
scas
jno
addl
les
or
mov
cltd
jb
je
push
mov
in
fistpl
imul
inc
aaa
adc
inc
cmp
xor
inc
addr16
test
out
in
and
cmp
ret
lods
mov
fs
mov
and
test
add
int3
jbe
adc
sub
cmp
in
mov
negl
push
in
xor
lock
ljmp
aad
mov
pop
cmc
insb
add
xchg
pop
push
push
jns
pop
pusha
add
xchg
mov
stos
shlb
in
dec
ljmp
and
fwait
push
mov
addr16
xchg
lods
lods
and
inc
add
mov
dec
enter
sbb
mov
cmp
fbstp
int
xor
push
lock
aaa
pop
std
insb
and
lahf
sbb
test
aas
fs
push
push
xchg
mov
and
lcall
in
lods
sub
out
cmpsb
add
push
jecxz
das
pop
je
out
cmpsl
push
mov
popf
and
inc
roll
xchg
fisubrl
das
sbb
sub
iret
sbb
ss
ret
adc
mov
int
repnz
addr16
int
xchg
sbb
icebp
outsb
outsl
push
xor
jle
jno
in
sbb
inc
popa
ss
in
pop
mov
dec
cmp
rcl
lret
enter
out
or
insl
popl
jb
adc
or
faddl
les
pop
jns
rorl
lret
xchg
cwtl
push
ss
negl
loopne
cs
push
stos
mov
std
push
test
sbb
imul
fbstp
enter
sub
cmp
fldcw
sub
or
push
adc
pushf
pop
lahf
inc
vmulss
mov
adc
shll
inc
lahf
push
and
xchg
clc
and
insb
lock
out
icebp
jnp
add
pop
dec
sarb
stos
test
jb
cmpb
inc
ja
imul
push
js
int3
test
mov
jae
xchg
sub
lret
shll
pop
xchg
mov
stc
jp
jno
stos
xchg
sbb
mov
jnp
lods
mov
xor
push
pop
mov
or
repnz
fwait
pop
inc
or
and
cmp
cmp
ss
add
aam
cmpsl
popf
outsb
pop
xchg
jne
int3
mov
pop
loopne
pop
adc
jmp
xchg
int
call
scas
in
in
push
shl
dec
jg
inc
fisubs
inc
mov
je
lds
adc
fmul
cmp
fistpll
and
xchg
das
push
repnz
stos
repz
pop
xchg
jle
incb
and
negl
stc
jb
test
inc
or
and
mov
nop
push
push
scas
mov
insb
push
movb
adc
loop
sbb
inc
bnd
das
dec
into
pop
adc
test
and
enter
mov
adc
mov
push
stos
repz
push
out
mov
das
lahf
fdivs
in
arpl
pop
lods
push
rorb
mov
sahf
lret
es
test
mov
and
mov
ret
lods
repz
adc
std
xchg
out
or
out
movsl
ficoms
mov
mov
jb
pushf
push
xchg
aam
mov
mov
mov
flds
orb
or
sub
xchg
jecxz
lds
repz
roll
mov
sub
cmp
mov
scas
popf
mov
jae
sbb
insb
mov
dec
imul
dec
js
sbb
adc
cmp
xchg
fdivrs
aas
scas
mov
pop
and
xchg
sub
cltd
push
in
pushf
movsl
subb
dec
pop
outsb
in
xlat
sub
and
or
loopne
mov
xor
pop
stos
pop
std
lods
adc
xchg
dec
sub
mov
fdivr
sub
loop
and
aam
inc
popa
out
out
repz
fisubrl
push
xchg
popf
jp
test
xor
or
xlat
rorb
xchg
mov
test
ss
aad
clc
mov
and
jecxz
jne
out
xor
or
outsl
daa
pop
es
pop
sbb
adc
jge
lahf
test
lret
mov
jmp
mov
jno
test
or
or
cmp
or
into
and
movsl
pop
xchg
enter
or
loope
negl
adc
sub
pop
rcl
das
push
xor
adc
or
in
mov
in
call
pop
add
and
in
jp
or
test
pop
stos
je
push
mov
es
je
add
mov
add
sbb
jo
movsl
fsubr
add
inc
stos
aad
subb
mov
mov
jl
xor
cwtl
mov
insl
cs
out
dec
popf
cmp
sub
ds
jbe
adcl
mov
imul
dec
xchg
fstl
cmp
mov
lahf
mov
jg
jo
pusha
sbb
test
xchg
mov
les
cmpsl
mov
push
popf
call
stos
jg
fimuls
in
out
dec
sbb
sbb
jns
or
out
mov
xorl
mov
mov
lcall
imulb
fidivrl
and
clc
inc
mov
dec
dec
cmpb
sub
push
in
imul
movsb
test
lcall
aam
pop
clc
test
les
es
rorl
rcr
dec
ficoms
dec
mov
xchg
jbe
mov
jmp
mov
pop
popa
lods
popf
gs
xchg
lahf
and
lahf
cltd
loop
pushf
movsb
xchg
mov
mov
cmpsl
and
jecxz
adc
mov
js
data16
sub
add
fbstp
xor
mov
pop
inc
dec
ss
lods
jnp
inc
pop
push
sar
in
scas
sbbb
decb
fiaddl
inc
inc
dec
jae
enter
dec
rclb
cmp
int3
imul
push
test
daa
mov
jae
inc
pop
sar
ret
dec
mull
push
inc
mov
sub
or
xchg
and
cmp
test
xchg
pop
ss
sbb
ss
sarb
adc
push
mov
mov
or
and
push
js
imull
pop
push
push
xorl
cmp
lods
or
and
xor
ljmp
mov
and
scas
leave
lahf
cmp
and
or
mov
and
ljmp
daa
arpl
imul
dec
fildll
sub
fistpll
or
cmp
pop
cmpl
fucomip
xor
pop
mov
xor
pop
sbbb
mov
adcb
dec
adc
fmul
sbb
imul
lea
push
in
xor
testl
cmp
incl
test
mov
push
or
push
imul
out
nop
test
mov
aad
adc
mov
or
shll
mov
out
stos
into
xchg
ret
nop
inc
push
dec
jge
cli
sub
lret
int
lcall
and
cs
and
rorb
lds
andl
cmc
lret
xor
jecxz
stos
jno,pt
jmp
jbe
push
lcall
in
push
mov
xchg
popf
in
pop
lahf
repz
lods
scas
jmp
cwtl
inc
pop
enter
or
push
aad
cmpsb
je
or
add
gs
test
push
test
add
push
daa
out
fldenv
add
icebp
xor
jno
pop
in
jp
jg
mov
inc
xchg
add
jo
nop
jp
test
nop/reserved
flds
call
lock
hlt
inc
add
pusha
les
sahf
aad
mov
int3
fcmove
pop
insb
push
inc
jbe
int
sbb
sub
std
jb
mov
mov
pop
imul
mov
or
movsl
lret
cmp
lahf
push
in
loopne
jecxz
mov
loop
mov
scas
inc
inc
pop
out
jp
test
rolb
lret
cli
dec
mov
sub
iret
loope
push
fidivrs
push
sbb
adc
fdiv
cmp
sub
iret
xchg
mov
jne
mov
lea
movl
mov
mov
enter
add
mov
adcb
jmp
outsb
add
js
or
adc
out
into
test
mov
xor
adc
les
inc
addr16
out
jle
jo
mov
xor
gs
push
cmp
lds
xor
aaa
pop
xor
fs
or
lock
sbb
rcrl
in
mov
or
movsb
cmc
sar
mov
ret
jmp
stos
das
das
fldenv
pop
ficomps
les
push
or
mov
lock
loope
dec
xor
pop
mov
cs
lret
push
shll
scas
cld
mov
mov
and
mov
or
ja
push
dec
sahf
hlt
sbb
mov
lock
adc
xchg
push
xchg
jns
mov
and
mov
pop
xchg
pop
fcoms
and
jg
rorb
bound
ror
xchg
icebp
outsl
dec
xlat
cmp
orl
or
jge
mov
sub
popf
adc
idivb
adc
jno
out
pop
mov
or
adc
std
mov
xor
pop
movsb
in
cmp
dec
pop
test
out
or
jbe
and
sub
cmp
mov
or
adcl
mov
cmpl
mov
test
shlb
movsb
dec
inc
and
test
in
das
jne
jmp
push
fisttpll
pop
jo
xor
mov
shrb
ficomps
ds
push
pop
inc
test
cmp
lret
mov
xor
movsl
mov
adcl
inc
nop
mov
andl
je
ret
cmp
mov
sub
pusha
in
push
xor
push
mull
xchg
sbb
jmp
cmp
xchg
inc
dec
int
sbb
int3
sbb
iret
jle
dec
and
in
into
aas
jmp
fdivrl
aaa
insl
addb
fwait
in
pushf
into
stos
iret
pop
into
cmpsb
das
adc
pop
xchg
hlt
sbb
ret
sbb
testb
fmuls
hlt
sbbl
mov
ret
pop
pushf
push
out
movsb
movsb
sbbb
pop
jmp
xlat
out
sbb
fildll
imul
fsubl
jno
fbld
loop
mov
cld
mov
jecxz
scas
lret
adc
addb
inc
arpl
cmp
jns
add
ds
stos
pop
jnp
test
inc
mov
icebp
and
mov
push
jecxz
int3
fcmovb
push
out
inc
imul
or
mov
add
std
int3
pop
dec
mov
leave
int3
xchg
push
fidivs
scas
lcall
cmp
mov
ret
adc
jnp
xor
sbb
xchg
xchg
fs
dec
rol
insl
inc
adc
cld
adc
bound
inc
jmp
je
in
test
je
add
lret
out
mov
repnz
cmp
pusha
and
leave
cmc
adc
in
inc
fldl2e
mov
xor
add
push
jae
inc
adcl
iret
cli
ljmp
mov
rorl
and
xchg
lea
insb
xchg
in
sbb
mov
adc
sub
leave
mov
pop
leave
pop
mov
nop
sub
into
xlat
adc
jge
cli
arpl
and
mov
cmp
pusha
and
sahf
mov
dec
or
test
mov
jmp
pop
fadd
mov
adc
jmp
cmp
pop
sub
pop
push
out
ror
icebp
push
into
mov
push
dec
adc
mov
aaa
pushf
test
int
shlb
test
jmp
xor
std
out
popf
test
shrb
pusha
or
in
fildl
cltd
clc
movsb
lock
sbb
ret
test
stos
mov
pop
stos
mov
ja
sbb
inc
imul
stc
and
jl
inc
out
jg
inc
jb
ljmpw
movsb
lods
fdivs
or
hlt
popa
jne
mov
lea
sbb
test
in
inc
fidivl
jge
loopne
lea
push
mov
adc
pop
mov
or
fstl
push
sub
cmpsb
mov
fnstenv
les
mov
lret
mov
mov
dec
adc
add
jl
cmp
xchg
jp
mov
push
inc
mov
pop
cmpsl
out
addb
cwtl
test
aaa
cmp
push
loopne
xchg
fldt
test
mov
push
dec
xchg
daa
pop
pushf
fisttpll
movsb
js
aad
addr16
lds
movsl
pop
and
pop
outsl
push
scas
sbb
push
add
dec
push
outsb
movsl
sub
orl
and
popa
and
mov
movsl
ljmp
cltd
insb
jl
repz
in
or
jnp
jge
adc
and
pop
leave
jg
rcrl
in
bound
jae
mull
push
testb
xchg
pop
cmpl
orl
fsubrp
push
or
sbb
jne
mov
adc
sbb
mov
cmp
gs
out
sbb
sbb
sub
iret
jecxz
jno
jns
inc
mov
dec
outsb
push
jo
dec
xor
leave
arpl
adc
jb
push
addr16
push
cmpsb
xor
sub
sbb
test
pop
sti
icebp
push
mov
cmp
stos
insl
sub
pushf
jb
test
sub
cmpsb
insl
xor
add
dec
and
icebp
adc
lcall
jl
scas
inc
and
xchg
jp
sub
pop
dec
xor
jae
mov
or
outsb
jl
in
add
ja
inc
mov
call
out
outsb
jge
pop
in
inc
nop
into
shlb
mov
dec
jecxz
cmp
mov
push
int3
test
jl
dec
push
mov
or
bound
adc
mov
inc
jp
fidivl
aam
repnz
jle
js
mov
push
stc
fs
adc
mov
cmp
cmp
adc
aad
add
popf
lods
roll
and
and
sarl
and
mov
mov
popa
mov
adc
aaa
and
insb
sub
pop
adc
inc
inc
xor
sbb
rorl
cmpsl
loopne
pop
mov
dec
jmp
inc
fs
adc
add
fnstsw
cmc
adc
inc
outsl
xchg
fmuls
sbb
enter
sti
stos
mov
jnp
psllq
jmp
pop
and
mov
mov
and
mov
push
jmp
pop
add
lods
xchg
xchg
ja
movsl
fwait
jge
out
xchg
fstps
mov
popf
sbb
lret
cmp
test
andl
int3
lock
pop
jo
fsubrl
push
pop
sub
mov
ljmp
ja
xchg
arpl
inc
ljmp
pop
addr16
inc
pop
or
xchg
mov
lcall
push
sbb
adc
aam
pop
xor
ret
mov
lock
pop
dec
imul
cli
and
call
insl
pop
in
push
pop
je
inc
leave
mov
rclb
lahf
sub
rcrb
je
popf
add
push
js
in
lea
add
push
adc
cmp
test
leave
and
inc
je
mov
inc
into
adc
cwtl
add
mov
push
sbbl
jmp
xchg
dec
pop
adc
popa
dec
dec
jl
addr16
cmp
lea
inc
imul
sbb
cmp
push
mov
sti
in
outsb
ss
adc
andb
push
int3
lret
and
push
lahf
mov
mov
sbb
inc
enter
leave
sub
or
sbb
mov
fmul
or
push
and
daa
outsl
jae
arpl
scas
push
mov
push
mov
mov
icebp
stc
xor
fsts
js
add
push
pop
fildll
cmp
into
inc
mov
inc
shrb
xchg
cmc
pusha
jae
inc
mov
mov
pop
rcrb
fldcw
mov
aas
xor
mov
push
jmp
sub
popf
rcrb
aad
push
fisubs
popf
aaa
mov
out
adc
sahf
add
not
aad
adc
lds
lret
mov
stos
test
mov
jl
and
loope,pn
stos
mov
jl
inc
cmp
dec
shll
test
inc
adc
arpl
dec
fimull
sub
repz
imul
push
mov
mov
ret
dec
push
mov
push
fldcw
jns
mov
out
mov
fbld
jl
jg
push
data16
adc
mov
fldenv
adc
and
call
aad
sbb
push
pushf
mov
sub
lods
test
jb
jo
addr16
mov
cmp
xorb
ror
or
mov
les
aas
mov
mov
lds
shlb
xchg
mov
push
loopne
jle
push
pop
lock
sbb
in
stos
roll
or
outsl
fcompl
in
sti
loop
lcall
inc
imul
mov
inc
sbb
add
js
xor
leave
insl
mov
cmp
mov
ljmp
out
sbb
stc
or
test
jmp
outsb
int3
lods
inc
pop
and
sbb
add
pop
jmp
das
pusha
dec
mov
dec
xchg
or
xor
push
outsl
jns
movsl
mov
fwait
shll
cmp
mov
xchg
pop
insb
mov
in
fdivrs
insl
cmp
jnp
imul
inc
loop
cmp
adc
inc
and
mov
and
jmp
add
inc
int3
out
mov
dec
add
imul
fs
jecxz
inc
stos
mov
or
cmova
inc
in
pop
inc
mov
cmpsb
inc
push
sbb
out
clc
loopne
loope
dec
mov
bts
mov
xor
call
test
jnp
out
dec
fcmovu
xchg
scas
and
test
rolb
dec
lea
mov
ss
or
loope
ss
cmp
sub
push
jge
push
push
push
add
jle
mov
inc
loopne
movsl
dec
int3
mov
sbb
mov
mov
lods
pop
shrl
cmpsl
jp
arpl
mov
out
fstpl
adcb
bound
mov
dec
aaa
sar
loop
mov
stc
sub
icebp
sub
adc
dec
cmovb
or
sub
aas
cwtl
lock
push
sub
pushf
test
pop
jp
out
mov
je
mov
cmp
jg
in
add
fwait
insb
push
push
into
pop
and
fcmovb
xchg
addr16
clc
push
dec
lret
mov
push
pop
or
loop
push
adc
sub
movsl
mov
pop
out
mov
out
inc
cs
push
push
cmc
or
sbb
sbb
out
call
inc
or
sub
aas
into
inc
arpl
fstpl
not
lret
mov
mov
or
sbb
xchg
or
lods
mov
push
pop
pushf
mov
or
mov
sbb
hlt
aam
xchg
push
mov
cmpsb
push
add
mov
and
mov
xchg
out
cwtl
mov
sbb
inc
out
nop
cmpsl
loop
mov
mov
data16
stos
pushf
cmp
out
jbe
dec
jmp
cmp
sarb
popf
mov
push
lods
push
test
imul
xchg
loop
and
arpl
pushf
mov
div
movsb
pop
outsl
int3
cmp
clc
mov
cwtl
rcrl
mov
iret
lds
in
cwtl
je
repnz
jecxz
jo
pop
cmp
mov
xchg
pop
mov
push
dec
pop
cmp
enter
lahf
mov
enter
inc
hlt
icebp
dec
mov
jbe
and
dec
insb
xchg
ret
jo
sbbb
xchg
sub
sbb
dec
dec
adc
inc
cmc
sub
ss
sub
jge
insb
cmp
loop
mov
adc
loop
jb
mull
inc
cld
loop
lcall
xchg
inc
fists
popf
pop
xchg
out
mov
mov
and
je
mov
mov
adc
inc
cmp
shr
cmc
or
mov
outsl
sbb
sbb
shlb
sbbl
add
xchg
push
fmuls
fwait
adc
adc
cmp
cmp
lret
shl
jmp
arpl
mov
clc
fmull
jle
jp
cltd
lock
sahf
inc
pop
pop
mov
xor
fwait
adc
sbb
sbb
pusha
or
jno
jmp
cmc
loopne
dec
jp
mov
push
lock
adcl
mov
jge
lret
jg
dec
iret
mov
add
push
scas
notb
jl
jno
push
sub
add
sbb
cmpb
outsl
cld
mov
stos
fsubl
mov
mov
push
icebp
mov
int
pop
mov
lea
mov
sti
sub
aas
test
mov
in
fldcw
sahf
jb
mov
cmc
jne
icebp
add
mov
cmp
add
scas
push
pop
adc
outsb
stc
repnz
out
popf
clc
mov
xchg
loope
push
inc
xchg
sub
es
jb
daa
out
jns
and
orb
adc
aas
inc
sbb
xchg
mov
loope
mov
adc
jecxz
js
jns
daa
and
jnp
sub
call
sub
add
sahf
imul
dec
fistpll
nop
xchg
dec
out
shl
fimuls
or
inc
aaa
fnstcw
xchg
lods
lds
xor
adc
lahf
push
xlat
imul
or
jne
lcall
pop
mov
movb
imul
dec
and
pop
jnp
or
ror
mov
push
inc
fistpl
inc
das
add
mov
aas
push
sysret
test
int3
scas
inc
push
cmp
cmp
call
js
sub
es
inc
inc
mov
pcmpeqb
idivl
xchg
stos
jl
lcall
add
repnz
inc
inc
sub
nopl
inc
stc
jle
xchg
inc
push
push
and
push
in
add
movsb
scas
mov
icebp
sti
mov
cld
jne
jb
and
add
sbb
test
into
lods
mov
xchg
jmp
mov
xor
cld
das
lods
ja
daa
mov
add
outsb
insl
insl
xor
lock
cmp
mov
sub
mov
popa
pop
aaa
and
jae
xor
ljmp
adc
sub
dec
fwait
push
mov
cwtl
xlat
push
push
in
loop
inc
fisttpll
push
push
gs
sub
aas
dec
std
stc
sub
imul
jmp
lods
mov
lds
call
jno
sbb
addb
loop
jb
clc
pop
inc
xchg
and
push
test
sub
movsb
or
fwait
pop
ljmp
mov
cmpsl
sbb
scas
push
ljmp
sbb
cltd
das
pop
loop
das
nop
jmp
fimull
test
inc
in
xchg
hlt
jno
mov
mov
leave
add
adc
test
sarb
imul
stos
loopne
xlat
aaa
adc
sub
add
mov
adc
loopne
jge
mov
and
mov
cmp
add
arpl
push
mov
ja
into
xchg
test
je
negb
push
sbbl
movsl
je
add
cmc
aam
jecxz
fs
fs
mov
cmp
stos
sti
jae
push
sti
mov
call
lods
sahf
lret
testl
xchg
in
xchg
push
jp
jle
jne
test
jns
pop
pushf
aas
clc
insb
out
ds
out
mov
dec
aaa
mov
add
pop
xchg
test
sub
xchg
push
int
pop
js
jo
lods
inc
jp
outsl
das
mov
popf
out
and
inc
negb
or
and
push
sbb
jno
xor
outsb
pop
inc
leave
push
add
jo
out
rcll
jp
out
stc
sbb
pop
fadds
shll
dec
rcrl
je
fisttpl
mov
aad
scas
orb
nop
aad
ret
orb
fidivrl
js
call
dec
cmc
inc
mov
mov
mov
mov
mov
xchg
add
in
mov
subl
in
mov
add
jge
add
and
sub
std
pop
aaa
fadds
jp
jmp
push
mov
cltd
mov
jnp
add
loopne
adc
stc
sar
jmp
out
xor
or
pop
sahf
cmp
arpl
fistpll
mov
jle
xor
cs
push
push
and
pusha
sbb
addr16
lcall
sbbb
in
xchg
fcoms
lock
push
or
icebp
stos
jle
mov
push
loopne
movsb
adc
stc
sub
ja
push
out
test
loope
sti
out
cmp
cmc
dec
sbb
shrb
fstl
stc
fs
test
dec
push
xlat
lods
mov
das
xor
test
outsb
es
xchg
pop
aam
pop
or
pop
mov
xchg
in
cmp
and
mov
and
and
or
out
and
xchg
dec
aam
cmp
xchg
sub
or
cmpsl
xchg
outsl
xor
inc
sbb
jnp
andb
dec
in
je
cld
or
mov
mov
mov
outsb
adc
push
adc
push
sbbb
mov
mov
push
imul
movsb
roll
fs
hlt
addl
ds
xchg
test
or
mov
cmp
loope
jle
sub
and
jne
cmpb
pop
pusha
adc
fadd
loope
jne
das
jae
xor
add
jbe
hlt
lea
mov
sti
negb
mov
pop
push
mov
jne
sub
fwait
mov
mov
jle
jbe
jno
cmp
mov
xlat
cwtl
scas
jle
sub
dec
sub
stc
cmp
out
push
xchg
mov
jge
pop
popf
aad
adc
pop
mov
sub
cmp
or
fdivs
jo
mov
mov
clc
loop
xchg
popf
ss
les
mov
dec
in
andb
movsb
cmp
outsb
data16
mov
mov
cltd
push
loopne
hlt
dec
dec
repnz
fisubrl
dec
pop
jnp
mov
pop
cmp
ret
out
loop
xor
std
xchg
fisubl
call
cwtl
mov
leave
xor
cld
imul
inc
jne
push
imul
dec
fildll
jno
call
stc
cmp
xor
shlb
jne
push
movsw
pusha
call
push
aam
pop
movsb
sahf
je
dec
repnz
jl
add
inc
cltd
insl
jmp
jns
jns
push
xor
add
lea
sub
inc
int3
bound
dec
jmp
cmpb
loope
int3
imul
in
test
jbe
std
out
in
negl
ret
dec
lcall
add
orl
in
dec
sti
adc
mov
mov
fdivrs
arpl
xchg
or
stc
push
adc
adc
loopne
insl
mov
cwtl
xor
ret
ja
cmp
cltd
cmpsl
mov
addr16
add
dec
mov
cwtl
adc
iret
jne
cmp
dec
mov
sbbl
add
mov
rcl
enter
add
outsl
pop
jecxz
xor
jecxz
push
dec
or
fdivl
shlb
jle
and
add
dec
ret
sbb
sub
sub
add
inc
xlat
mov
pshufw
out
xor
sbb
outsl
jge
mov
test
imul
sbb
cmpsb
test
pop
rorb
and
hlt
shlb
xchg
or
in
or
addr16
or
push
rorb
aaa
inc
into
out
pop
inc
hlt
xor
fdivs
in
or
pop
test
leave
xchg
or
arpl
out
mov
lods
push
inc
xchg
clc
cmp
lds
jmp
mov
mov
nop
and
xchg
jp
test
sub
icebp
xor
mov
push
in
mov
inc
scas
xor
ret
lea
lcall
es
jb
lds
sub
pop
rclb
pop
stc
push
roll
xchg
scas
cmp
mov
pushf
ds
xchg
sub
mov
rorb
jb
insl
mov
mov
jmp
sbb
test
arpl
xchg
inc
ret
out
or
scas
rorb
ss
dec
sbb
or
mov
movsb
imul
lcall
je
jns
sub
mov
xchg
pop
sub
leave
jl
fsubrs
aas
cli
mov
je
pop
push
mov
mov
andb
jg
cmpb
out
xor
xchg
loop
shlb
push
aam
lret
stc
lock
xchg
xorl
leave
js
or
mov
sub
shr
fists
ret
cli
insb
xchg
mov
sub
lods
mov
mov
mov
adc
jp
int3
mov
sbb
std
jnp
jae
mov
sti
int
inc
sbb
push
faddl
mov
pop
xchg
sbb
jae
ret
cwtl
pop
mov
fmuls
insl
roll
in
mov
inc
inc
jl
test
add
mov
pop
in
push
ret
sbb
push
mov
lds
pop
adcl
lods
or
lea
das
ss
cmpsb
in
imul
jecxz
adc
cmp
loope
mov
stc
in
aam
mov
or
loopne
cld
dec
push
mov
es
ror
cwtl
jns
add
pop
ja
mov
cmp
daa
inc
sbb
popa
fnstenv
pushf
lret
aaa
es
xchg
mov
push
test
movsb
gs
mov
add
dec
rcll
stos
mov
mov
bound
and
pop
inc
into
mov
cmp
push
sbb
lods
push
rcll
and
loope
cmp
div
int
pop
in
dec
jp
jge
cmpsb
sub
bound
pop
aam
jno
cmp
insb
pop
mov
push
or
push
cmp
mov
es
mov
pop
or
mov
arpl
clc
aas
xchg
pop
outsl
xchg
call
inc
push
gs
lcall
inc
lcall
lods
popf
mov
adc
in
mov
subl
ja
dec
push
aas
push
adc
sub
sbb
repnz
cmp
adc
add
test
adc
aam
cmp
jmp
pop
sub
leave
xor
les
xchg
inc
rolb
cld
xchg
in
push
mov
scas
push
jb
out
fs
pop
pusha
stos
pop
cmp
or
imul
fstps
pop
cld
xchg
cmp
arpl
pop
addr16
jmp
icebp
cli
decl
in
adc
sub
xor
sbb
ds
mov
or
out
rcrb
mov
ficoml
dec
aas
insl
adc
mov
cmp
jnp
adc
mov
pop
fiaddl
flds
adc
pushf
ss
lods
push
and
in
or
push
jg
repz
push
push
inc
in
jg
ret
test
pop
fbstp
in
xlat
dec
arpl
ficompl
dec
fwait
sub
or
cmc
pusha
jmp
add
hlt
es
adc
cli
mov
push
lret
arpl
lock
xchg
adc
lret
push
movsl
add
ret
call
scas
hlt
adc
jle
sub
notb
imul
andb
inc
pop
mov
xor
aam
mov
mov
cmpsl
loopne
push
lea
push
lahf
aaa
xor
inc
mulb
pop
sbb
mov
imul
loopne
mov
xor
push
sub
int3
test
push
aaa
push
xorb
decb
aad
mov
jle
xor
bound
jmp
xchg
mov
xor
sub
jmp
fnstcw
popa
mov
and
sub
out
cmpsl
mov
int3
filds
sbb
sbb
push
mov
sub
repz
xchg
in
mov
lret
add
xor
dec
and
outsl
push
outsb
pop
push
push
das
lret
add
adc
pop
fldcw
aam
cmp
jmp
aas
xchg
xorl
scas
popa
jbe
mov
rclb
xor
shll
xchg
jae
lcall
hlt
cltd
shr
mov
mov
inc
sarl
mov
push
ss
sbb
dec
or
shll
rclb
pop
sbb
jae
push
jp
scas
orb
cmp
clc
add
push
lahf
mov
insl
xchg
inc
sbb
fisttpl
mov
push
pop
mov
jmp
mov
movsb
xchg
in
xor
inc
pop
jnp
movsb
mov
aas
cmp
jne
xor
adc
mov
adc
or
jmp
jnp
and
cs
inc
neg
ret
inc
push
insl
cs
mov
popf
xchg
aas
movsb
inc
inc
pop
aad
dec
movsb
pop
lods
xorb
mov
ja
fiadds
shll
jp
add
and
mov
push
out
sti
mov
jnp
sar
xchg
out
mov
cmp
mov
out
inc
and
pop
leave
cmp
bound
dec
sbb
push
popa
lock
add
xchg
push
jp
iret
push
jp
hlt
rorl
add
clc
jge
int
jg
fs
push
inc
into
aam
fstl
jb
and
fdivrl
xchg
mov
lods
and
call
lods
jb
cli
sahf
or
jl
sti
je
xchg
xor
roll
testl
sbb
in
dec
dec
xor
push
insb
add
dec
add
pop
inc
jnp
lret
mov
outsb
xor
push
ds
fidivrl
mov
fdivrs
popl
rcrl
pop
pusha
xchg
mov
enter
inc
mov
les
pop
ret
jo
mov
xor
ror
or
inc
loopne
mov
pop
clc
cmp
mov
push
push
nop
fcomps
mov
jno
or
mov
cltd
imul
dec
lret
inc
out
mov
inc
jge
jo
adcb
test
pop
fnstenv
xor
jmp
in
fwait
jns
lods
dec
cmpsl
sbb
or
or
push
mov
scas
std
ja
imul
jmp
loope
push
mov
stos
jne
out
push
inc
sbb
sub
sahf
fistl
dec
or
mov
fsubrs
mov
push
aam
add
lret
cmp
iret
sub
sbb
mov
or
lcall
mov
or
mov
jne
adc
insl
xor
subl
or
mov
in
movsl
mov
cs
ret
inc
jb
decl
xlat
cmp
mov
popa
cmp
aad
mov
movsb
and
imul
adc
jg
cmc
xor
int3
mov
push
lock
imul
push
sbb
mov
outsl
gs
cmp
and
mov
pop
mov
and
cltd
mov
inc
add
or
sbb
shr
ss
repz
jge
and
into
jb
add
cli
push
rorb
test
jb
lahf
shrl
pop
xchg
push
fsubrp
lods
call
shll
scas
push
pop
repnz
mov
mov
imul
xchg
xchg
sbb
popf
jnp
test
mov
adc
imul
jbe
mov
ret
test
mov
dec
add
enter
repz
js
rorb
rol
push
sbb
fwait
cmp
inc
inc
ljmp
sub
les
cmpsb
fsubr
fimull
enter
xor
inc
xchg
clc
nop
pop
fnstenv
ret
ljmp
icebp
mov
pushf
outsl
les
fwait
pop
scas
pop
pushf
dec
call
das
mov
jne
jge
dec
lret
sub
pop
pop
sahf
addr16
icebp
or
repnz
cmpsb
cmp
add
fisubl
sbb
sbb
and
popf
lock
inc
xchg
arpl
and
and
dec
dec
hlt
adc
lret
or
lods
jl
push
loop
sbb
mov
mov
xchg
mov
dec
bound
xor
dec
das
jbe
sarb
mov
lahf
dec
leave
xor
jle
lahf
aaa
imul
stos
leave
jne
xor
inc
repnz
fstl
subb
in
ret
jns
jp
xor
jl
xor
xlat
cmpsl
enter
push
arpl
xor
xchg
int3
mov
orb
add
imulb
bound
arpl
mov
cltd
outsb
jne
mov
mov
rcr
mov
xchg
enter
xlat
jbe
hlt
or
gs
sbb
xchg
in
pop
add
stos
ds
mov
mov
or
loop
loope
push
push
rcll
js
iret
scas
mov
aam
cs
test
or
jno
xchg
jb
insl
into
xchg
mov
imul
sub
lret
xchg
mov
push
cmp
test
dec
xor
push
pop
dec
sbb
dec
shlb
sub
sbb
lret
inc
test
lret
fwait
pusha
lret
addl
iret
out
and
mov
fcoms
adc
std
outsb
dec
sahf
pusha
mov
in
jbe
adc
add
imul
or
xchg
dec
lret
sbb
scas
adc
and
out
les
loope
stc
test
inc
shll
sarb
nop
fisubrs
xchg
lock
hlt
xchg
sbb
fildl
cli
test
idivb
xor
fsts
mov
sbb
jno
mov
loopne
daa
lods
out
enter
cmpsb
push
mov
cmp
push
push
imul
add
cltd
pop
daa
dec
adc
pop
ja
inc
adc
dec
jmp
mov
shrl
sbb
test
push
mov
mov
das
out
dec
mov
aam
adc
xchg
scas
cmpsl
xor
mov
inc
xor
cmp
das
clc
std
cmp
xchg
push
xor
xchg
cli
divb
sbb
mov
push
adc
imul
enter
lds
sub
and
dec
repnz
xchg
pop
xchg
sbb
xchg
sbb
das
shrl
and
adc
add
push
and
andl
mul
lcall
xchg
into
cs
pop
shlb
push
fdivrs
pop
sbb
insb
icebp
dec
mov
popa
imul
push
mov
outsb
sub
subl
inc
xor
out
insl
push
mov
repz
fisubs
cwtl
adc
popf
es
lock
add
add
pushl
inc
push
enter
je
ljmp
and
push
jg
fistpl
sbb
ds
sbb
mov
dec
mull
jle
sub
xor
pop
and
cmpb
ror
ss
sub
xchg
cmp
es
in
pop
mov
pusha
xchg
mov
mov
fs
inc
testb
repz
sbb
out
jmp
cli
pop
xchg
je
es
xchg
jp
sbb
sahf
mov
rolb
add
cmp
jns
fcmovnu
inc
mov
adc
out
into
loopne
mov
insb
in
sbb
pop
shr
push
lret
pop
add
xor
inc
shl
xor
mov
dec
jnp
bound
lea
mov
out
mov
leave
int3
test
push
ljmp
and
jb
sbb
mov
push
repz
les
lods
clc
out
loope
mov
aad
lds
mov
ja
and
xchg
jno
mov
or
pop
dec
and
movsb
sar
dec
lock
loope
movaps
push
cs
mov
out
sahf
ja
lods
add
and
cmc
int3
adc
fwait
aas
mov
xor
sahf
sbb
mov
adc
fisubrs
int3
inc
xchg
xlat
sti
fs
jns
push
scas
loope
mov
xchg
cmp
sbbl
rcrl
test
adc
cwtl
dec
adc
call
int3
subb
mov
fsubs
into
nop
cmc
or
pop
insb
mov
xor
push
pop
xor
cmc
lahf
mov
push
loope
lret
mov
sbb
push
les
or
xchg
dec
add
ds
push
push
dec
leave
pop
lcall
adc
dec
pop
bound
jnp
rcrl
fs
addl
pusha
ljmp
scas
xchg
negb
aam
adc
pop
mov
jnp
mov
scas
sub
insb
sti
mov
bound
xchg
test
ds
mov
or
iret
pop
pop
pop
xor
xchg
mov
flds
outsb
hlt
fwait
addr16
fsts
or
pop
cmp
push
pop
movsl
out
int
lods
or
scas
ja
ret
imul
dec
in
add
mov
and
xchg
xor
ss
jb
lret
sar
cmpsb
inc
hlt
cmpsl
jae
scas
cmp
call
mov
ret
les
les
jbe
cmp
aaa
adc
popa
mov
add
xchg
pop
imul
fistps
sbb
inc
add
leave
cmc
and
xor
inc
sub
sub
sub
add
ds
push
add
mov
loope
dec
fwait
push
cmp
leave
out
push
inc
shrb
mov
cmp
dec
das
dec
xchg
mov
or
pop
xchg
sar
lock
sbb
fidivl
sub
dec
jmp
ja
mul
pop
addr16
sbb
loopew
lcall
out
fs
xchg
jl
cmp
fbld
fldt
loopne
lret
pop
and
mov
in
sbb
adc
es
sbb
mov
mov
cmpsb
fiaddl
sub
sub
data16
loopne
fidivrs
mov
lods
pop
adc
popa
xchg
fnsave
cs
ret
in
lock
sub
in
scas
jbe
imul
push
or
aaa
imul
push
cmovbe
lds
jecxz
pop
lea
mov
addl
sti
mov
fldt
cmpsb
sub
les
sahf
jge
push
or
repz
sarb
and
mov
fisttps
cmpsb
lcall
insb
lods
mov
xchg
std
push
inc
lea
popa
mov
cmp
sbb
lret
pop
cld
pushf
in
rol
jns
cltd
call
mov
adc
clc
cmp
stos
shrl
inc
pop
popf
sub
scas
mov
in
jae
mov
cld
bound
fmulp
sahf
or
mov
xchg
shlb
fistps
loopne
or
jmp
iret
cmp
and
fmul
push
sbb
mov
dec
pop
into
aam
xor
inc
jmp
cld
aam
jnp
std
lock
mov
jg
jb
mov
ret
jnp
fimull
pop
imul
xlat
jbe
add
dec
mov
int
jmp
outsl
and
insl
in
cmp
fdivrl
repz
sbb
jg
jge
jbe
je
push
enter
fnstcw
je
addb
xor
sub
fdivrs
push
mov
mov
aam
dec
mov
int
lods
in
cmc
js
jne
mov
aam
lock
or
mov
inc
repnz
mov
nop
lods
jb
push
and
outsb
adc
ret
xchg
add
dec
hlt
stos
inc
fidivl
mov
mov
mov
or
add
pop
mov
sub
mov
shll
cltd
jge
cmp
pop
movsb
loope
xor
or
pop
mov
mov
dec
mov
jae
aaa
lock
jl
fisubrs
pop
fbstp
outsl
andl
scas
inc
data16
cmp
aas
cmp
pop
mov
push
jecxz
ret
sahf
test
mov
in
jmp
mov
add
cmp
cmp
movsb
dec
inc
lds
shrb
ret
cmpsl
push
cwtl
loopne
add
ss
mov
sub
pop
sub
jmp
jmp
inc
sub
rcrb
push
shrb
inc
test
stos
outsb
cli
lahf
sarb
xchg
shll
sbb
push
pop
jle
test
inc
test
mov
jmp
out
int
adc
sti
out
xorb
sti
std
test
jge
outsl
cmp
xchg
fs
inc
xor
in
xor
mov
pop
sub
repz
insl
jge
fisttps
ja
popf
pop
stos
ja
dec
jne
insl
cmp
dec
ss
stos
pop
lea
movsl
and
fcoml
push
sbb
xorl
cmpsb
mov
pop
push
add
jmp
mov
fs
fsubrp
pushf
daa
mov
loope
and
jnp
call
pop
push
mov
out
or
mov
rcrb
mov
in
into
adc
xlat
push
popa
shrb
fisubrl
pop
je
jp
xor
addr16
mov
mov
dec
mov
fs
mov
lods
addr16
movsb
mov
loope
jnp
lahf
imul
xor
fs
jae
inc
inc
sbb
stos
dec
loopne
int
rclb
stos
cmc
push
sub
cmpsb
cs
js
xor
add
inc
out
pushf
mov
fmull
jle
push
lret
mov
pushf
xor
sbb
lods
dec
enter
ds
adc
pop
xchg
aad
popf
jnp
sub
inc
es
mov
ret
inc
ret
movsb
rorb
loopne
lret
les
pop
outsb
ja
pop
fs
call
movsb
push
repz
pop
lock
in
xchg
xchg
lds
in
xorb
daa
and
mov
dec
xor
mov
shll
sbb
cmp
inc
int
add
les
push
push
xchg
lea
jo
dec
lahf
sarb
xor
mov
jl
inc
adc
incb
sahf
pop
adc
push
adc
adc
int
cmp
or
add
jbe
adc
outsb
in
aas
inc
ss
mov
out
lock
jmp
pop
mov
xchg
and
int
cmp
push
xor
mov
and
mov
mov
inc
aam
ds
dec
xchg
cmc
test
sbb
xor
ret
jl
dec
sbb
lods
xchg
and
lods
pop
pop
cltd
or
aaa
pop
cmpsb
cmp
sti
inc
or
inc
popa
rclb
mov
fsub
ljmp
pop
jo
int3
push
test
push
mov
xor
cmpb
jb
scas
mov
cwtl
shl
in
cs
pop
add
sbb
fisubrl
bnd
add
enter
adc
pushf
jns
cmp
cmp
cmp
sahf
adc
sti
scas
pop
jp
call
cld
xor
pusha
sti
xchg
and
push
pop
push
jno
dec
pushf
dec
cmpsl
cwtl
mov
mov
lods
mov
rcrb
or
out
cmp
lods
fwait
inc
mov
sub
push
sub
cmp
cmp
mov
sbb
jl
aaa
inc
sbb
je
jle
mov
popl
das
cld
lea
aad
cmp
lds
nop
mov
sub
into
ljmp
lret
jbe
cmp
mov
xchg
outsl
imull
or
jg
mov
adc
inc
int
push
popa
jge
adcb
mov
call
mov
inc
movsl
inc
or
leave
ds
stos
xlat
js
adc
or
in
shr
aad
and
fmuls
stos
and
jo
cmc
sbb
imul
mov
mov
or
data16
and
cld
cmp
aad
xlat
mov
inc
movsb
sbb
adc
mov
xor
xchg
adc
push
mov
iret
mov
lods
lock
loop
repnz
cmc
push
adcl
mov
ja
mov
xor
mov
aas
xchg
adc
adcl
cmp
call
bnd
push
imul
out
sub
rol
jbe
stos
pop
hlt
aam
jo
mov
mov
sbb
adc
std
add
leave
movsl
lahf
jmp
sub
movsb
mov
xor
cmp
jnp
imul
fdivs
shll
stos
stos
out
pop
or
mov
pop
and
push
mov
shll
shl
scas
jle
xlat
sbb
in
test
enter
sbb
mov
pop
dec
scas
push
pop
popa
adc
daa
mov
mov
fsts
fstp
sbb
scas
lock
in
fnstcw
or
mov
xchg
mov
and
ljmp
lret
dec
jmp
imul
xor
cwtl
fisttps
inc
xchg
inc
std
jle
jo
test
repnz
sti
mov
fstp
push
jl
insb
pop
push
mov
jp
mov
adc
test
push
insl
arpl
cmpsl
pop
in
std
xchg
loope
inc
mov
lahf
pop
in
addr16
xchg
outsl
sub
int
out
dec
push
push
leave
lods
mov
aam
out
inc
insb
mov
inc
lahf
jmp
scas
orb
scas
jae
lods
and
orb
mov
dec
jbe
and
rcr
cld
pop
rorl
xchg
inc
dec
cmp
lret
orb
stc
je
jle
pop
or
pop
dec
pushf
mov
je
xchg
loop
pop
sub
lahf
ret
lds
cmp
jmp
loopne
cmpb
inc
sbb
mov
mov
mov
test
push
pop
testb
lock
push
push
pop
xlat
pop
inc
push
insb
sub
out
lock
mov
pop
dec
jmp
stos
adc
xchg
add
xchg
aas
cmp
js
push
cmp
rcrb
adc
bound
mov
jmp
arpl
pop
and
push
xor
loop
mov
pop
mov
mov
add
jmp
out
jno
xchg
add
cmpsl
dec
stc
mov
test
adc
and
lret
fwait
test
stos
iret
xchg
jp
fsubrs
and
jns
sbb
frstor
insl
ja
test
into
gs
add
aaa
rclb
jbe
lcall
clc
rorb
adc
jns
sub
mov
add
lock
mov
mov
mov
xor
cmp
scas
pop
jle
test
pop
fisttps
aas
add
sub
inc
in
loop
mov
cmpsl
pop
mov
mov
out
pop
cmpsb
mov
pop
dec
cmp
cmp
jecxz
pusha
test
jae
pop
sub
pop
movsb
sbb
hlt
push
mov
dec
sbb
or
cwtl
test
or
lret
psllq
sbb
movsl
popf
pop
add
xor
add
dec
xlat
or
jl
jo
movsb
out
dec
push
or
das
xchg
lea
mov
pop
jnp
mov
cmp
cs
andl
mov
xor
mov
pop
clc
jo
rolb
icebp
inc
leave
jae
mov
sbbl
mov
test
fwait
rolb
mov
mov
pop
mov
hlt
jge
arpl
mov
and
cmpsb
ds
cmp
scas
pop
cmp
aad
roll
fistps
loopne
xchg
push
push
pop
adc
test
push
bound
jl
lds
xchg
adc
loopne
and
pop
pushf
cmp
xchg
sub
bound
jo
sbb
jae
hlt
sub
cmp
int3
add
int
add
sbb
jne
test
into
mov
jo
and
popa
jle
sbb
popf
fisubrl
xlat
inc
jae
int3
mov
lahf
mov
call
and
in
mov
data16
xor
jmp
mov
lret
jb
movsb
cli
in
sub
shll
xor
dec
pop
fisttpll
sub
push
jo
or
push
pushf
scas
mov
jp
ja
scas
dec
outsl
stc
insb
or
lods
pop
mov
add
sbb
push
sarb
inc
insl
xor
je
aam
push
mov
and
mov
mov
lahf
lods
xchg
or
push
into
es
pop
push
fcoms
fdivrl
icebp
lock
sahf
cmp
pop
push
pop
stc
jmp
sti
inc
mul
push
lahf
jns
xchg
or
in
pop
dec
ret
popf
add
add
sub
add
roll
pop
sub
hlt
int3
adc
das
cmp
ljmp
imul
fdivrs
divb
andl
mov
jbe
andb
cs
stc
pop
mov
mov
lcall
stos
and
ljmp
popa
fwait
push
sub
sub
fisttpll
xchg
sti
mov
imul
or
or
jle
xlat
fnstsw
mov
or
imul
xchg
jbe
cwtl
outsb
les
add
or
mov
mov
cmp
imul
lahf
bound
je
je
bound
and
xlat
push
pop
insb
xlat
dec
or
les
lods
stos
mov
in
inc
out
inc
movl
push
xchg
stc
imul
jge
aad
pop
mov
xchg
pop
outsb
int3
ljmp
stos
leave
lock
mov
sbb
jo
bound
js
adc
xor
sbb
clc
push
addr16
dec
out
jge
outsl
cmp
push
nop
mov
pop
out
pop
aaa
popf
or
mov
movsl
xchg
inc
adc
imul
cli
mov
sbb
push
sub
pop
xchg
jge
push
es
js
fsubrs
cltd
mov
adc
hlt
and
in
mov
iret
push
popa
add
nop
dec
ffreep
out
mov
idivl
sahf
insl
lcall
daa
aad
inc
int3
decb
and
leave
movsb
and
jg
fimull
imul
cli
push
je
subps
mov
imul
mov
push
mov
mov
mov
jnp
fs
iret
dec
les
fnstcw
testl
cltd
outsb
mov
rcll
jae
mov
xchg
jns
into
inc
add
pop
notb
cli
mov
jl
iret
dec
roll
imul
and
pop
push
and
mov
mov
je
cmp
xchg
js
pop
cmp
inc
and
daa
hlt
lock
out
movl
test
ss
mov
push
fsubrs
and
lock
orl
jle
jbe
xor
dec
ret
out
daa
sbb
sbb
aad
sbb
push
sbb
pushf
mov
jg
xchg
sub
xor
adcl
clc
loop
js
popl
fcompl
adc
dec
xchg
add
call
arpl
shll
sub
sub
ljmp
cmp
and
or
sbb
xchg
sahf
outsb
cmp
lahf
gs
mov
mov
xchg
test
out
sub
jecxz
cmp
fildl
xor
push
loop
cs
xchg
push
lods
push
dec
mov
xor
movsl
or
jmp
push
into
mov
push
dec
out
mov
xchg
pop
adc
mov
mov
testl
fwait
jge
mov
xor
js
lods
xchg
in
cs
sub
pop
test
xor
js
add
pop
lret
lds
dec
insb
lret
test
xchg
addr16
and
aaa
sub
adcb
sub
test
divb
cmpl
ss
push
xchg
movsb
xchg
sub
and
push
sub
xor
sub
xchg
loopne
mov
mov
repnz
clc
mov
pop
ss
xlat
in
ret
xor
test
pop
xchg
hlt
aas
pushw
cli
lock
enter
or
pop
mov
jns
aas
fs
pop
and
movsb
xor
adc
push
jg
adcl
xchg
idivb
jo
xchg
pop
loop
aas
dec
pop
jae
outsl
testb
sub
xor
jnp
xor
icebp
and
and
fnsave
inc
push
repnz
imul
mov
nop
jb
out
dec
enter
lock
rcl
xchg
cmp
ljmp
mov
mov
mov
cmpsb
mov
ret
mov
dec
mov
mov
lret
mov
jl
pop
frstor
in
push
hlt
sub
ret
sti
dec
pop
outsl
sti
shlb
out
cmp
out
filds
outsl
sub
adc
les
push
jae
add
in
xor
std
and
mov
and
aas
xor
add
xchg
xor
subb
out
cmpsb
inc
jnp
int3
shr
repnz
sti
pop
outsb
icebp
push
pusha
cld
movsb
cld
push
jne
pop
fisubs
in
nop
push
lods
aas
mov
push
lods
jg
ljmp
imul
icebp
push
mov
std
xor
xchg
scas
pop
cmc
test
into
and
dec
or
or
push
sub
in
call
cmp
cmp
ret
lds
jecxz
dec
mov
jle
push
xchg
les
mov
incb
mov
mov
faddl
mov
push
pusha
adc
inc
fists
cltd
mov
jge
lds
ja
inc
mov
lahf
xchg
cld
mov
adc
cmp
ljmp
jbe
xor
inc
mov
dec
int3
cmpsl
cmp
pop
xchg
fcoml
inc
cmp
push
mov
les
sbb
sbb
and
xchg
adc
dec
lahf
lods
and
sbb
test
xchg
sti
int
jmp
mov
inc
inc
xor
es
pop
or
xor
fcmovb
push
das
hlt
je
mov
das
sbb
push
cmpl
scas
addr16
inc
aam
fcmovnu
movsb
xchg
pop
setae
push
adc
sub
mov
hlt
pusha
mov
ficoms
pop
ja
fsubs
inc
mov
lods
loop
jecxz
push
xor
nop
pop
xor
fisttps
ret
sbb
sti
add
lods
imulb
dec
mov
sti
enter
sti
and
fisubrs
mov
icebp
lock
fcompl
mov
das
sarl
sar
test
jbe
sbb
cmp
rcl
jnp
clc
dec
sbb
pop
cli
xchg
rolb
test
shrl
mov
pop
mov
imul
mov
dec
mov
lods
mov
mov
in
test
xchg
mov
push
xor
add
push
movsb
sbb
lods
adc
sahf
je
xor
pop
cmc
adc
mov
mov
leave
sub
or
jl
or
fsub
push
xor
gs
jns
test
mov
add
jno
fcmovbe
and
rcr
ljmp
xlat
inc
xor
int
sub
sub
jge
mov
iret
aaa
fnstsw
cltd
pop
movsl
aas
cld
mov
inc
or
pop
mov
and
sbb
cmp
fidivrs
and
mov
pop
pop
pop
clc
test
xchg
and
cmp
add
jmp
inc
sub
mov
aad
mov
fcoms
and
icebp
fisttpll
inc
pop
add
ror
rcl
cmp
repnz
dec
xchg
int
or
mov
mov
xlat
loope
adc
jl
sahf
lds
mov
data16
xlat
dec
xor
jmp
jbe
add
adc
js
sub
push
pop
mov
and
dec
dec
and
rorl
jle
jno
mov
xchg
in
dec
fiadds
enter
shll
lock
mov
js
and
xor
out
lret
pop
ljmp
mov
rcrb
mov
jne
out
cmpb
insl
xor
inc
mov
aas
xchg
jno
mov
and
aad
andb
in
pop
xchg
pop
enter
rolb
pop
xor
mov
adc
in
ficompl
sti
imul
in
push
imulb
inc
out
mov
ret
jl
test
out
dec
sub
mov
in
rorb
sbb
pushf
push
or
sarb
lret
dec
pushf
add
jge
pusha
dec
rcrl
xor
lock
inc
lock
hlt
insl
call
enter
leave
cmp
cmp
lods
loopne
cmpsb
fildl
add
mov
lcall
roll
push
sbb
outsb
xlat
push
das
idivl
test
mov
push
lret
xchg
sahf
test
xchg
inc
sbb
repz
fbld
mov
les
sub
outsb
push
or
push
ret
push
cltd
push
adc
and
xor
dec
test
push
mov
add
pusha
cmp
sub
xor
arpl
sbb
repnz
add
add
addr16
jmp
into
pop
stos
ljmp
cmp
in
mov
mov
mov
pushf
inc
jg
add
pop
aaa
xchg
cld
lods
add
push
inc
sub
pop
movsb
push
push
add
dec
inc
and
jae
daa
fldenv
out
dec
inc
add
lcall
inc
movsb
jnp
jno
mov
jb
mov
aas
ret
shll
or
sub
icebp
andl
lret
cmp
fisubrl
je
les
add
iret
mov
sub
dec
scas
call
fstpt
lret
pushf
dec
xor
or
or
adc
dec
pop
jmp
push
mov
inc
inc
ds
jb
and
pop
loopne
and
pop
pop
jg
scas
push
add
lahf
sub
andb
sbb
inc
jbe
aas
jecxz
ds
cmp
dec
xchg
cmp
fnstsw
enter
xor
out
inc
loope
xlat
lods
call
in
ret
pushf
and
or
mov
adc
into
adc
cmp
mov
call
ret
out
icebp
xor
sub
in
push
mov
cwtl
add
or
imul
inc
leave
jp
and
mov
gs
mov
adc
call
fcmovnu
jl
add
push
scas
pop
hlt
sbb
xor
sarb
call
jecxz
add
fwait
or
fdivr
and
ljmp
fidivrs
scas
aaa
push
mov
mov
addr16
mov
and
movsb
sbbl
fs
ficomps
lods
push
dec
gs
mov
cmp
repz
int3
and
push
iret
sub
fcompl
dec
int
insb
mov
pop
push
stos
mov
rolb
fwait
fdivs
shrb
gs
int
fldenv
xor
push
or
ret
jae
sub
leave
into
inc
mov
sbb
movsb
jbe
aas
adc
cmp
in
movsb
inc
push
xchg
jb
ljmp
insb
mov
jmp
shll
and
out
jne
push
sbb
call
mov
or
insb
pop
lcall
mov
cltd
fisubs
pop
pop
mov
stos
mov
mov
outsl
in
gs
js
int3
push
or
pop
sarb
dec
stos
and
sbb
insl
idiv
es
mov
and
fdivs
and
ret
xchg
or
xchg
dec
sarb
rol
mov
scas
mov
mov
into
jl
test
call
and
out
sub
movsb
imul
in
mov
xchg
adc
iret
mov
push
ljmp
xchg
jne
pop
shrl
pop
enter
scas
mov
jle
jl
pop
jns
sbb
mov
call
jle
mov
testb
loopne
mov
aad
and
xor
push
cmp
out
mov
pusha
add
cmp
jns
test
and
mov
push
and
mov
orb
lret
pop
fisubrl
xchg
in
pop
jle
dec
sub
cli
imul
in
pushf
push
push
cmp
scas
xchg
cmp
mov
pop
rcl
aas
mov
insl
lahf
aas
jp
cmp
mov
xchg
inc
not
xlat
addr16
sub
ret
mov
popl
shl
inc
inc
pop
and
xchg
and
jle
push
daa
push
popf
daa
jns
ficoms
les
pop
mov
test
dec
imul
mov
dec
movzbl
idivl
mov
es
test
test
rorb
mov
stos
and
mov
ret
pop
mov
and
ja
or
aaa
mov
jbe
xchg
clc
and
xchg
mov
stc
fwait
jg
fildl
mov
lods
nop
dec
hlt
pop
jge
fbld
pop
adc
mov
outsl
lret
inc
jae
imul
mov
enter
cli
mov
xor
std
stos
in
sahf
xchg
sbb
adc
push
push
leave
mov
clc
mov
clc
and
sub
dec
adc
popf
arpl
test
push
mov
aam
out
mov
mov
test
push
mov
and
fxch
cmp
adc
lea
and
cmp
sahf
dec
sub
stos
les
je
push
fsubs
lret
xor
mov
repnz
in
xor
and
pop
in
outsl
xchg
sub
sarb
jae
jbe
mov
dec
pop
call
push
cmp
ds
push
mov
jb
and
sbb
xchg
hlt
mov
inc
sbb
ds
pop
adc
adcb
inc
fdivr
adc
cmp
movb
push
cmpsl
xlat
or
mov
xchg
adc
popa
lahf
fldl
sub
mov
arpl
sub
jbe
pop
mov
popf
push
cli
repnz
lcall
mov
push
xchg
cltd
mov
sbb
stc
or
mov
rclb
sbb
rorl
push
sbb
daa
test
xlat
mov
dec
lods
adcl
mov
movsb
fstl
push
xor
fs
aad
sbb
jb
enter
cmpl
pop
lahf
jb
stos
xor
push
sti
stos
dec
or
cmc
fs
sbb
aaa
imul
lock
popf
dec
xchg
test
mov
out
ds
imul
add
daa
pop
push
jle
int3
ret
pop
mov
nop
cmc
or
inc
jg
call
imul
bound
leave
hlt
jmp
lret
jo
cmp
gs
stos
and
shll
push
mov
popf
dec
or
addr16
mov
outsl
movsl
sahf
icebp
and
mov
outsb
dec
imul
addr16
or
cwtl
xchg
ficoml
test
std
inc
pushl
inc
dec
push
cmc
xor
repz
dec
mov
xchg
cmp
jg
mov
xchg
jne
inc
push
hlt
and
push
sub
jne
sti
push
fwait
dec
adc
mov
adc
lock
andl
aas
fwait
mov
test
or
jecxz
outsl
dec
stc
xor
imul
rcl
and
mov
iret
and
xchg
sti
hlt
lods
int3
add
and
xchg
or
aad
test
mov
xchg
and
pop
xor
mov
sbb
pop
inc
sti
pop
xlat
dec
ret
pop
fwait
iret
jp
add
cltd
sub
xchg
shrl
mov
mov
mov
and
pop
cmp
cmpsl
test
pusha
xchg
pop
ss
cld
fincstp
pop
lret
xchg
xor
lods
out
dec
aas
xchg
test
loope
adc
fwait
pop
rdtsc
ljmp
lahf
sub
and
test
sub
insb
push
lahf
leave
rcrb
ret
push
xor
je
inc
into
lret
adc
adc
repnz
jno
mov
and
sahf
fwait
sbb
repnz
push
xor
je
pop
ss
push
sub
xor
pop
mov
xor
dec
cmp
stos
push
lods
ret
call
sbb
pop
push
lret
stc
out
xchg
mov
inc
cltd
fs
daa
dec
lahf
sbb
mov
mov
sbb
leave
sbb
cmp
cmp
inc
add
jo
and
fcmove
movsb
jmp
js
outsl
cs
stos
not
test
and
adc
scas
dec
arpl
sbb
mull
dec
inc
outsb
test
mov
inc
mov
and
enter
stc
or
pop
dec
xor
mov
in
out
ds
cwtl
or
cwtl
fmull
mov
pop
pop
addb
fwait
cmpb
imul
lea
pop
ret
addl
sbb
push
mov
dec
pop
fcom
stc
inc
push
dec
loope
dec
ficomps
shl
cmpsb
sbbl
negl
xorl
arpl
call
jo
testl
or
cmpsb
sub
ja
xchg
std
push
sarb
or
xchg
add
inc
scas
pop
imul
es
std
fdiv
add
mov
aaa
sub
rorb
std
or
cs
add
shrl
adc
dec
xor
adc
xor
push
push
add
popa
xchg
fsubrl
xor
lock
push
inc
and
popa
int
xor
xlat
int3
adc
or
ret
test
adc
xor
ds
xchg
xchg
arpl
adc
jecxz
jae
pop
nop
push
mov
lds
pop
sbb
lret
sbb
nop
push
in
pop
mov
dec
push
iret
test
ds
into
test
test
cmpsb
dec
outsl
movsl
gs
cmpsb
dec
xor
cmp
dec
mov
inc
mov
or
rolb
xor
out
out
cli
aas
or
adc
sti
out
dec
push
hlt
aad
mov
dec
orb
out
dec
ja
or
jl
xchg
dec
jge
xor
mov
inc
stc
cmp
std
out
dec
bound
push
movsb
stos
pop
mov
or
inc
aam
sub
shll
dec
movl
xchg
arpl
mov
jp
iret
sbb
sub
je
scas
and
dec
inc
mov
inc
pop
cmp
shrb
fadds
out
iret
push
sub
push
cmp
test
pusha
mov
sahf
das
stos
mov
push
inc
fiaddl
or
aam
lods
push
repnz
repz
xor
inc
sub
add
xchg
data16
xchg
mov
imul
push
shll
xor
mov
int3
into
sbb
push
dec
das
push
pop
jg
aam
sahf
cmp
adc
ja
sbb
push
fwait
mov
xor
push
inc
lods
pop
cld
mov
mov
cmp
pop
and
jns
fiaddl
sub
test
lods
dec
les
insb
mov
cmpsl
sbb
xor
xchg
fmull
mov
jg
dec
mov
or
ret
scas
adc
jg
out
test
jno
cmpb
jno
mov
jle
lock
addr16
outsl
xchg
pop
push
inc
add
ljmp
and
mov
lods
faddl
out
push
aam
dec
xor
out
aam
mov
and
sbb
bound
pcmpeqb
pop
das
inc
aad
lahf
daa
inc
shl
popfw
cwtl
addl
sarl
pop
jmp
rep
arpl
jge
fcmovu
or
push
call
sub
aaa
push
inc
or
add
repz
fsubs
xchg
adc
sarl
adc
push
push
fdiv
loop
sbb
aas
testb
xor
mulb
fimuls
sub
sbb
outsb
or
shl
out
add
adc
or
dec
dec
pop
frstor
fildl
inc
repz
ret
aam
mov
sub
sti
inc
out
jb
mov
mov
xchg
cmp
xchg
push
mov
xor
cli
scas
mov
and
out
pop
sahf
in
imul
scas
sahf
aad
pushf
popf
outsb
insl
lret
call
pop
dec
fstp
insl
sbb
mov
out
sub
test
int3
push
mov
push
rorb
sti
rclb
shl
pop
lock
insl
add
scas
icebp
adc
xor
jmp
jmp
add
nop
and
das
loopne
inc
sbb
jbe
sub
insl
and
sub
out
pop
dec
sub
ss
out
out
pop
rcr
faddl
xor
sbb
imul
sub
dec
bound
lret
lret
mov
sar
js
pushf
andl
xchg
xchg
imul
outsb
inc
sub
popf
movsb
sub
or
aas
inc
rcr
arpl
or
fs
dec
pop
icebp
cmpsb
lods
popa
dec
jg
cmp
fimuls
push
loop
mov
popf
jl
cmp
inc
cmp
iret
sub
xor
pop
fs
inc
adc
mov
jbe
mov
push
mov
call
adc
mov
fsubrl
lea
fcoms
popa
pop
stos
push
cmpsb
dec
sub
add
icebp
mov
add
hlt
inc
dec
xor
push
leave
xchg
int3
rcrl
adc
imul
add
fiaddl
test
pop
imul
clc
ds
fisttps
and
flds
cmpsl
or
dec
mov
scas
adc
cmp
jg
shll
cmpsl
ret
aaa
std
inc
fwait
addb
test
xor
loope
dec
inc
fcmovu
and
xchg
mov
jns
adc
add
jo
cmc
mov
xchg
mov
js
jp
fldt
xchg
or
leave
inc
mov
push
scas
adc
dec
divl
cmp
gs
loopne
std
xor
ret
iret
pop
insl
test
mov
lods
cmp
dec
mov
jmp
mov
mov
aad
jmp
adc
and
and
jb
leave
pop
mov
add
int
sub
jno
cli
sub
push
or
push
mov
mov
outsb
push
lea
call
xchg
sub
cs
cmpsb
stos
outsb
push
inc
sub
cmpsl
cmp
mov
or
int
or
les
push
in
repnz
into
outsl
xchg
adc
fildl
stc
mov
jbe
adc
data16
mov
or
and
cltd
movsb
add
cmp
pusha
lcall
outsl
xlat
out
pushf
loop
in
ret
sahf
sub
mov
addr16
jle
mov
dec
sub
pop
call
xchg
int
mov
sub
inc
mov
mov
dec
outsb
jle
scas
adc
mov
movl
pop
test
lret
test
cltd
add
jno
lods
inc
inc
dec
movsb
inc
lret
jmp
xchg
iret
or
push
dec
xchg
or
pusha
and
inc
imul
orb
lret
in
je
nop
adc
ljmp
test
xchg
leave
push
adcl
das
icebp
jne
push
and
xchg
jecxz
mov
addr16
gs
push
mov
xor
fidivrs
iret
fisttpll
testl
pop
pop
xchg
rcll
dec
mov
into
cmp
or
add
xchg
addl
cld
addb
xor
loop
jne
stos
in
push
pop
mov
pop
movsl
push
mov
stos
outsb
mov
scas
push
loop
rcll
jmp
mov
scas
scas
lock
cmp
inc
sbb
negl
inc
mov
add
cmp
loope
hlt
pop
push
or
loop
iret
jae
aas
mov
fsub
shrb
dec
enter
cmp
scas
repnz
mov
inc
in
pusha
adc
mov
cwtl
cmp
das
cmp
fwait
dec
mov
pop
jge
cli
repz
inc
add
and
stos
or
fdivr
scas
das
add
xlat
pusha
cmp
movsl
or
icebp
jle
mov
adc
mov
sbb
adc
cwtl
xor
insl
xchg
pop
dec
and
inc
cmc
test
push
loopne
inc
or
jmp
inc
or
jp
xlat
data16
lea
sub
add
xchg
xor
shl
mov
mov
test
pop
cmc
mov
fadd
fistpll
jbe
cmp
mov
js
enter
stos
data16
mov
mov
pushf
adc
pop
aaa
xchg
lret
into
ja
sub
xor
ljmp
pop
pop
or
cs
inc
test
pop
push
mov
divl
dec
pop
ficoms
mov
nop
push
jnp
shl
cltd
mov
adc
psrad
jp
xchg
push
add
fimuls
mov
dec
gs
cmpl
add
jno
pop
test
je
repz
sbb
nop
pop
lret
movsb
inc
cltd
iret
add
loop
es
xchg
and
xor
or
ret
cmp
sbb
or
aaa
xchg
dec
push
sti
dec
or
cmc
push
cmpsl
ljmp
lods
pop
mov
in
adc
pusha
push
add
insl
dec
leave
cmp
and
inc
add
in
cmp
out
cld
push
gs
or
or
mov
mov
enter
xchg
stos
icebp
push
sti
jae
in
adc
pop
rorl
jns
push
sub
push
cmp
mov
and
jbe
or
mov
push
and
inc
cmp
xchg
popa
lods
bound
push
gs
jbe
scas
xchg
outsb
cmpsb
mov
adc
mov
adc
roll
pop
mov
orl
and
mov
push
dec
leave
lods
lock
fcoms
jns
cld
add
mov
repnz
test
xchg
adc
aaa
test
fmul
ljmp
movsl
add
lock
into
out
fsubl
pushf
push
pushf
int
pop
dec
push
lea
xchg
push
in
gs
sub
scas
lods
lret
xchg
sub
push
pop
xor
aaa
fdivrl
pushf
loope
data16
or
xor
loopne
and
aaa
cmpsb
xchg
cmp
mov
sbb
xchg
cmp
xchg
cmp
clc
xchg
cltd
in
or
cmp
jne
push
dec
sti
xchg
icebp
xchg
adc
xchg
mov
cmp
fwait
movsl
outsb
push
incl
mov
xor
mov
cltd
or
mov
fsts
inc
mov
stc
outsl
pop
and
insb
daa
sahf
test
push
xor
andl
in
mov
jg
mov
xlat
adc
lods
adc
cld
cmpsl
add
outsb
and
inc
aam
xchg
mov
add
inc
mov
ret
fnsave
shl
lods
data16
cli
das
jle
push
imul
idivb
ret
push
fmuls
push
subl
sbb
xchg
or
xor
cmp
movsl
xchg
jnp
add
xchg
imul
add
mulb
shl
in
imul
pshufw
jae
mov
rcrb
jg
pop
insb
jno
mov
outsl
mov
pop
dec
add
imulb
shrd
sub
cmp
mov
scas
roll
cmp
int3
addr16
jnp
into
lret
andl
xchg
mov
or
out
cmc
xchg
push
push
in
adc
jnp
mov
shr
ret
cld
sar
adc
pop
lahf
and
xchg
dec
xchg
sbb
nop
pushf
mov
lahf
js
subl
cwtl
out
out
sub
sbb
fldenv
mov
int3
sbb
test
sbb
pop
ret
jno
xchg
mov
lds
dec
loopne
mov
jmp
test
str
mov
adc
gs
jne
xor
push
sub
push
add
mov
repz
sub
in
fadd
cmp
bound
into
call
loope
mov
sub
xor
scas
push
jmp
cmpsl
mov
pop
jg
dec
sub
xchg
sub
or
or
xor
dec
leave
fdivp
jns
mov
pop
sub
aad
mov
mov
shlb
iret
mov
out
call
and
std
mov
inc
outsl
addr16
mov
or
sub
cmp
data16
push
mov
mov
xor
out
jmp
dec
pop
xchg
movsb
outsb
jge
imul
sbb
adc
lcall
movsl
mov
xor
mov
mov
and
std
scas
mov
jp
jnp
rcl
mov
or
push
aaa
mov
add
je
adc
jo
pop
mov
jmp
or
scas
dec
xor
and
and
roll
pop
inc
jnp
lds
decl
push
push
jp
scas
sbbl
xor
mov
movsb
outsb
rcrb
bound
imul
jmp
sbb
je
adc
shll
pop
icebp
xor
in
test
int3
in
xchg
add
sub
xor
and
mov
bound
mov
cmp
jg
jnp
repnz
mov
inc
dec
mov
stos
sub
cmp
stc
cmpsb
pop
hlt
cmpsb
xlat
rep
dec
mov
insb
sbb
xchg
adc
adc
jp
lea
push
inc
dec
sub
inc
stc
js
dec
data16
sbb
pusha
inc
shll
cltd
dec
push
aad
xchg
cmp
dec
push
mov
das
arpl
andb
sub
sbb
mov
dec
std
fnsave
lds
dec
in
xor
fwait
add
stos
pop
pop
mov
sub
xlat
and
inc
mov
shrl
fwait
shl
cmp
outsl
std
popl
jb
mov
lret
cld
push
insl
mov
pusha
scas
add
xor
mov
mov
fmul
int
push
lea
sbb
push
scas
call
jns
xor
jge
sbbb
dec
mov
cmc
mov
cmp
pop
rol
sub
inc
push
mov
fs
xor
jecxz
stos
sub
cmp
insl
not
imul
push
xchg
push
inc
and
ret
dec
and
inc
sbb
outsl
xor
xchg
add
xchg
xorb
dec
or
cwtl
loope
test
bound
sbb
sti
add
pop
aad
or
cmp
pushf
or
outsb
es
das
ret
add
adc
push
popf
out
cmp
imul
add
iret
mov
xchg
test
push
outsb
adc
mulb
xchg
pop
xchg
xor
stc
das
loopne
nop
sahf
push
lods
inc
add
lea
arpl
jb
adc
inc
inc
pop
xor
xchg
pop
push
mov
cmpsb
loopne
pop
jle
push
ja
test
cmpl
mov
ret
ss
repz
push
aam
adc
test
dec
fs
pop
add
ljmp
aam
test
loopne
sub
cli
xor
mov
sub
mov
enter
sbb
shrb
sbb
xchg
pusha
cmc
idivb
mov
cs
setb
jle
jns
xchg
adc
jg
into
shrl
test
mov
adc
ljmp
rol
xchg
jg
mov
mov
pop
insl
jb
mov
aam
dec
scas
roll
lcall
jae
cmp
cmpsb
sbb
jmp
scas
push
jmp
rcrb
dec
xor
push
clc
imul
insl
insb
mov
push
mov
dec
aad
jg
push
mov
shll
xchg
cmp
lock
adc
shrl
xchg
jae
jno
sti
into
jge
std
sbb
roll
fcoms
pop
xchg
mov
std
pop
cltd
aas
add
lret
mov
in
push
or
fdivrs
dec
and
shl
sub
dec
dec
in
arpl
lcallw
xor
sti
out
clc
lea
in
push
xchg
inc
and
subb
imul
leave
sbb
fnsave
aaa
mov
fwait
mov
movsb
push
bound
lret
inc
out
lret
loop
leave
push
shlb
arpl
aaa
cmpsl
ret
inc
stc
add
cwtl
cmpsb
sbb
gs
stos
jecxz
fwait
hlt
daa
fdivrs
adc
test
pop
add
jmp
call
dec
popf
loope
testb
push
aad
adc
or
add
aaa
les
push
rcll
dec
jl
mov
pop
shlb
mul
popf
lret
cmpb
add
or
push
scas
push
movlps
mov
loope
mov
sbb
dec
pop
xor
fmuls
jns
dec
or
xor
lods
insl
or
scas
js
scas
jle
das
adc
pushf
xchg
push
mov
loop
sti
cmp
lods
pop
and
cmpsl
add
dec
fistps
iret
in
das
out
cmpsb
mov
dec
test
and
popf
lods
cltd
mov
xor
xchg
insb
dec
shll
sub
out
outsl
pushf
fnstsw
inc
or
std
icebp
jmp
les
add
and
jb
std
sub
inc
mov
inc
out
loop
and
mov
jns
jge
mov
push
enter
or
jle
inc
hlt
into
push
cmpsb
xor
fcompl
je
ss
jo
dec
and
cld
ret
jg
aaa
fwait
mov
push
mov
jno
imul
dec
js
mov
lds
cmp
xchg
inc
push
bound
cld
lahf
int3
xor
fistpll
xchg
std
icebp
pop
icebp
loopne
mov
jne
sbb
sbb
repz
ret
lcall
cltd
mov
dec
stc
xchg
add
jle
jle
out
pop
push
mov
or
not
test
outsl
jp
dec
loopne
ret
mov
xchg
and
fisttps
gs
push
and
outsb
inc
and
fidivs
mov
mov
clc
xchg
add
mov
push
shll
psllw
outsl
popa
mov
sub
sbb
jge
roll
jne
push
out
jbe
mov
mov
icebp
mov
aaa
popf
sbb
pop
inc
clc
clc
xchg
mov
sbb
pop
pop
pop
xor
push
jl
daa
out
daa
xor
rcr
aas
push
fldcw
mov
inc
or
arpl
decl
aaa
dec
aad
and
mov
stos
cwtl
xchg
ja
stos
div
jbe
mov
test
in
loope
and
mov
dec
shl
dec
cmp
lea
cltd
cmp
adc
xchg
push
mov
pop
shrl
mov
xchg
in
sub
xlat
or
shrl
outsb
shlb
push
cmp
movsb
mov
adc
push
daa
xchg
imul
mov
or
xchg
popf
ret
in
lret
cmp
scas
xchg
addr16
popa
rclb
nop
lea
out
into
add
push
mov
lret
movsb
add
xchg
mov
inc
cs
add
jbe
shrb
lret
jb
mov
out
inc
cmp
cmp
aas
inc
pop
inc
mov
xor
push
push
leave
xor
adc
xlat
fiaddl
popa
jbe
addr16
adc
mov
loope
call
jae
in
outsb
imulb
jno
out
fwait
lods
dec
mov
addr16
mov
adc
jge
jge
test
dec
dec
push
ss
ja
mov
les
push
mov
jno
sbb
push
push
shl
cld
out
adc
aad
push
lods
popf
pushl
fwait
add
cmp
mov
adc
sbb
or
push
lea
sub
push
sub
ljmp
mov
adc
pop
rcr
aas
cmp
fldl
sti
lea
loopne
fwait
mov
or
scas
jb
bound
arpl
and
testl
pusha
mov
mov
movsl
mov
adc
xor
jo
mov
mov
add
mov
popl
mov
inc
in
or
jle
add
in
pop
sub
aaa
pop
push
dec
mov
sub
push
push
arpl
xchg
cltd
