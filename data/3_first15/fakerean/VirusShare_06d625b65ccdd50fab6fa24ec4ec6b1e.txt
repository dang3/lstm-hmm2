push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
call
push
push
call
push
push
push
push
pushl
call
sub
add
neg
sbb
inc
ret
push
mov
sub
andl
push
push
push
mov
mov
lea
mov
mov
sub
mov
push
and
xor
pop
push
cmp
jne
mov
ror
div
pop
push
pop
push
sub
shl
pop
mov
mov
mov
shr
or
and
mov
mov
sar
mov
test
jne
mov
xor
mov
div
add
add
mov
sub
jmp
mov
xor
div
pop
mov
sub
mov
mov
shr
mov
shl
or
mov
sub
mov
mov
xor
incl
mov
rol
inc
cmpl
jb
pop
xor
pop
inc
pop
leave
ret
push
mov
push
lea
call
test
je
call
jmp
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
call
test
je
mov
mov
movl
jmp
mov
or
mov
mov
add
mov
mov
test
je
movl
jmp
movl
mov
xor
divl
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
xor
push
pop
div
mov
mov
sar
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
push
call
pop
pop
push
call
pop
pop
leave
ret
int3
fadds
std
adc
int3
int3
int3
int3
int3
int3
int3
and
mov
inc
xor
fimull
hlt
push
mov
popa
jnp
aaa
or
pop
push
aad
inc
jbe
sbb
out
dec
pop
movsb
pop
outsl
and
pop
clc
xchg
sbb
stc
or
xor
push
and
fs
xor
inc
push
dec
daa
shll
mov
jge
pushf
sbb
mov
cli
adc
sbb
outsb
pop
imul
in
or
mov
adc
nopl
jmp
push
adc
in
orl
push
add
in
ljmp
mov
sub
cmc
xchg
jne
sti
jg
mov
out
sysenter
push
pop
add
inc
out
lret
loopne
inc
jb
repnz
jne
or
jne
add
ret
inc
nop
sbb
xchg
loop
mov
int3
xchg
popa
mov
sub
push
sahf
loopne
xor
dec
and
push
xor
add
out
loop
fildl
inc
sub
adc
or
adc
mov
mov
addb
out
pop
aaa
xchg
movsb
push
push
imul
insb
sarl
leave
test
jne
jae
pop
jmp
cmpsl
push
inc
mov
repnz
dec
and
add
int
andl
pushf
inc
jle
adc
fmuls
xchg
inc
cmp
xor
stc
sahf
push
pop
xor
xor
push
cmp
add
test
cmp
mov
popf
lea
shl
sbbb
inc
pushf
mov
xor
outsb
addl
iret
iret
jo
sub
popf
icebp
stos
rcl
xchg
xchg
xor
nop
jmp
test
fnstenv
lret
sub
gs
push
mov
inc
push
pop
das
pop
shlb
lahf
pop
mov
ljmp
or
xlat
pop
sub
aam
ljmp
push
push
aam
xchg
ja
mov
aam
fcom
adc
pop
xor
fildll
scas
or
int
xor
push
es
mov
repz
js
mov
pop
jnp
add
push
mov
data16
popa
imull
jp
lret
leave
fwait
negb
test
add
scas
test
rclb
or
mov
out
stos
lcall
jmp
sbb
and
xchg
cmp
mov
pop
test
cwtl
mov
xor
aad
daa
cmp
xor
sbb
je
mov
cwtl
adc
jg
sbb
inc
jle
dec
lret
jne
shrb
fwait
or
cmp
cmp
sub
mov
cmp
mov
cli
xchg
stos
lret
or
loope
les
movsb
cmp
add
sbb
mov
lea
andl
pop
lcall
mov
lret
mov
icebp
mov
movsb
cwtl
repz
xor
hlt
sbb
and
in
pop
jl
xorl
adcb
add
add
and
sti
sbb
xor
jno
dec
jecxz
cmp
imull
jns
mov
popf
mov
imul
mov
dec
jne
outsb
cmp
sarb
call
std
enter
sahf
repz
or
bound
jb
pop
scas
insl
adc
mov
repz
movsl
jle
vpsraw
mov
lcall
jbe
ljmp
arpl
negb
ljmp
add
xchg
xlat
mov
int
jae
ret
arpl
lods
add
xor
mov
imul
lret
mov
fstps
inc
std
sbb
jle
push
push
cltd
aaa
push
mov
adc
mov
icebp
pop
mov
inc
cmp
xchg
cmpsb
mov
jg
pop
or
test
fstl
fwait
in
insl
jnp
adc
jmp
lea
daa
xor
push
sti
xor
aaa
cltd
push
xor
movsl
adc
inc
xchg
cmp
ret
and
mov
inc
mov
add
xchg
dec
lret
sub
push
popa
fwait
ret
daa
pop
mov
mov
pop
adc
push
jl
arpl
xor
aas
lods
imul
mov
push
mov
xor
cmp
push
add
ficompl
loop
gs
inc
or
xchg
test
fnstcw
fsts
stc
stos
scas
mov
adc
dec
xchg
mov
pop
sbb
scas
jbe
lds
jbe
in
mov
fsts
push
jecxz
jb
pusha
movlps
jl
sbb
scas
test
cmp
sbb
aaa
lret
xchg
test
cmp
rorl
sub
movsb
out
xchg
lea
mov
cmpsl
lsl
fidivrl
fwait
inc
imul
xchg
push
add
bound
nop
rolb
xchg
aaa
fcmove
scas
push
ljmp
sbb
icebp
jbe
fisubl
mov
daa
lea
sub
shlb
or
jg
cmp
mov
jp
inc
fidivs
mov
in
jmp
sbb
iret
icebp
test
pop
xchg
psrad
or
push
shr
out
mov
bound
adc
sahf
test
jnp
pop
jne
xor
or
mov
push
inc
in
dec
adc
repz
and
xchg
jl
dec
pop
shrd
fadds
push
shl
push
xchg
mov
add
push
arpl
mov
repz
nop
pop
mov
movsb
lahf
sti
xchg
scas
pop
cmc
mov
les
lahf
aaa
fdivl
pop
sbb
test
mov
rol
imull
sub
out
bnd
pop
fwait
aas
mov
fnstsw
outsb
sub
cmc
lea
or
or
add
pop
dec
adc
loope
addl
pop
mov
inc
addb
jbe
leave
fcmovbe
push
mov
push
outsl
pop
scas
loop
das
and
dec
cmpsb
push
lcall
add
cmp
push
das
leave
movsl
aas
mov
sbb
mov
pop
insl
lea
das
loopne
ret
sbb
out
cmpsl
dec
mov
gs
je
and
add
jb
test
imul
cltd
orl
inc
test
mov
push
iret
dec
aad
and
cmpsl
shl
push
sbb
cmp
scas
cmp
repz
cli
inc
andb
repz
loopne
jp
arpl
and
nop
into
test
xchg
cmp
outsb
std
fistl
pop
mov
lea
hlt
movsb
cmp
rol
arpl
leave
and
cs
es
pop
cmp
sub
stc
cs
xor
pop
push
mov
shr
fs
gs
mov
lods
mov
sbb
enter
cld
fcomip
pop
std
outsl
jp
jno
aas
push
dec
mov
jle
mov
scas
jnp
mov
lret
popf
fimull
fnstsw
cmp
test
xchg
repz
lds
out
mov
aam
inc
pop
sbb
in
aad
test
pushl
xchg
dec
insb
xchg
xchg
adc
mov
roll
stc
pop
lds
sti
and
and
test
pusha
xchg
out
ret
push
jecxz
mov
mov
jl
aas
jg
push
loop
and
sbb
andl
sub
shrb
push
lret
pop
in
sub
cmpsb
mov
pop
jae
mov
imul
aad
scas
mov
sbb
xlat
push
clc
mov
fs
push
pop
or
sbb
pop
push
push
dec
or
cltd
in
rclb
cwtl
test
inc
mov
sub
inc
mov
pop
xlat
sbb
jae
jl
stos
cmp
stos
pop
jg
test
xor
int
sub
mov
out
push
leave
sbb
ljmp
cmp
xchg
mov
adcb
mov
repz
xor
adcl
imul
jle
jge
sbb
scas
arpl
testl
inc
inc
shl
push
aaa
lcall
adc
mov
ror
sahf
cs
int
push
int
stos
ret
repz
jns
push
cwtl
sahf
cwtl
dec
jp
mov
push
mov
test
push
ret
xchg
negb
push
subl
add
jle
push
pop
push
dec
xor
mov
icebp
mov
pop
or
outsb
iret
leave
loope
loopne
in
jbe
fisubs
daa
insb
gs
pop
out
cwtl
sbb
int3
sbb
nop
rolb
int3
sbb
push
std
cwtl
out
jecxz
cmp
imul
push
arpl
adc
std
jbe
fwait
adc
cmp
data16
and
pop
mov
loopne
adc
lock
les
cli
stos
stos
stc
cmpsl
scas
test
rolb
jmp
es
cmp
sti
jae
js
push
cmpsl
faddl
cltd
push
neg
out
data16
fwait
mov
loop
movl
or
xor
cltd
aaa
mov
fdivr
xor
jl
mov
jo
pop
roll
fs
sbb
mov
lock
cltd
xchg
xor
popf
lock
ret
repz
mov
fwait
out
push
jbe
mov
iret
adc
daa
data16
cmp
addr16
shll
or
into
sub
sti
std
dec
xor
in
xchg
mov
mov
lds
and
sub
ds
pop
cmp
pop
cmp
cld
xchg
mov
jmp
push
xchg
sub
pop
dec
out
fwait
out
sub
fwait
je
test
adc
dec
xchg
push
push
push
fcomps
popa
jnp
jns
adc
les
mov
jns
sbb
or
je
jae
lock
xchg
nop
movsb
mov
push
into
push
sti
inc
fmul
mov
dec
in
pop
idivb
cmp
int
xor
ficompl
hlt
add
fdivrl
mov
aas
daa
pmulhuw
fiaddl
inc
inc
jmp
mov
out
lea
call
dec
pop
mov
push
mov
lock
mov
stos
jmp
inc
adc
outsl
addr16
cli
mov
inc
mov
mov
add
push
add
call
sbb
rorb
hlt
mov
scas
lcall
arpl
add
bnd
or
call
das
jecxz
xchg
es
fcmovnu
enter
cmpsb
jle
sti
adc
add
incl
sbb
jge
mov
in
pop
lods
dec
inc
test
sbb
push
pushf
out
ss
mov
jb
jb
xor
sub
xchg
sub
cmp
cmp
ss
xor
sub
xchg
cmp
xchg
popf
inc
and
inc
faddl
inc
aas
push
lods
fsubrl
rcll
les
mov
cmpb
mull
jecxz
pop
popa
xorl
jmp
dec
outsl
mov
shlb
lods
sbbb
inc
cli
cmp
popa
jbe
mov
push
syscall
pop
xchg
call
pop
lods
mov
mov
sub
push
cmpb
jl
imull
mov
xchg
stos
in
out
cmc
pop
and
push
sti
or
xor
adcb
dec
mov
pop
pop
xor
aaa
dec
jns
pop
mov
pushf
fs
sub
cs
cs
cmpsl
push
cmp
add
pop
sub
xor
or
in
jg
xor
les
pop
xor
and
ret
inc
cmovns
aaa
repnz
stos
xor
mov
clc
xchg
mov
insb
sbb
ror
sahf
bound
enter
arpl
nop
cld
arpl
mov
test
int
cmpsl
jae
shrl
add
lcall
test
nop
jmp
xor
xor
repnz
inc
or
sub
int
int
push
sub
stos
cmpsl
cmp
jmp
xor
xchg
fisubs
fists
repnz
xchg
and
ficompl
cmpsl
clc
push
add
inc
inc
rcll
pop
mov
scas
xchg
mov
push
pop
mov
dec
repnz
ja
das
insl
lret
mov
xchg
shll
sub
pop
inc
dec
pop
or
outsb
out
icebp
lahf
mov
mov
jae
rclb
jmp
mov
scas
js
stos
leave
push
mov
mov
test
imul
push
pop
data16
pop
ret
clc
adcl
mov
adc
hlt
notl
outsl
inc
test
mov
xchg
cmpsb
andl
xor
ds
cmp
sub
imul
arpl
xchg
push
push
aam
loop
lods
ficompl
inc
sbb
fiaddl
ret
xor
test
dec
pop
inc
push
mov
outsl
push
mov
lcall
lea
daa
sti
sub
mov
test
fsubl
add
sbb
sbb
jmp
inc
xlat
fnstenv
dec
aas
fisubrs
adc
mov
rorl
pop
sbb
push
xor
pop
int3
es
jbe
in
iret
lret
dec
and
rcrl
and
cmp
sub
dec
xchg
lea
popa
popl
jecxz
jp
adc
or
popf
bound
stos
fiadds
mov
fstpl
xchg
negl
pop
outsl
jns
lea
lods
loop
or
add
jo
sub
mov
insb
inc
mov
pop
push
jae
push
jmp
xchg
fistl
push
movsb
jo
jo
out
cmpl
xor
adc
push
and
push
out
sbb
and
pop
insl
dec
fiadds
fnsave
xchg
pop
popa
daa
and
jb
xor
sahf
fstl
enter
adc
ret
mull
loopne
rorb
sbb
xor
cmp
sbb
mov
mov
subl
sarb
push
inc
cmpsl
fnstsw
lods
xor
and
jnp
cmp
dec
adc
icebp
mov
lahf
add
mov
sbb
sbb
mov
jecxz
and
in
std
mov
lds
cld
push
std
pop
stos
lahf
clc
mov
sahf
sahf
imul
mov
dec
in
and
inc
inc
mov
cwtl
mov
aam
outsl
fnstenv
addr16
nop
xchg
mov
xchg
xchg
sar
test
sub
out
nop
mov
adc
adcl
sbb
dec
pop
shlb
xlat
in
fucomi
or
loope
sbb
sar
sub
inc
dec
mov
push
in
xchg
aam
cwtl
lds
cmpsb
pop
mov
pop
add
mov
push
inc
out
imul
sub
lahf
xchg
movsb
loope
call
jp
inc
cmpsl
adc
pop
or
lock
jns
mov
and
sbb
pop
cmp
sub
add
fadds
aas
loopne
iret
dec
pop
mov
pop
stos
push
mov
pop
data16
fisttpll
fnstsw
jl
repz
sbb
xor
idivb
mov
sbb
jno
or
cmp
imul
ds
xchg
add
jo
ljmp
movsl
loopne
push
and
mov
in
and
sbb
pop
outsb
dec
les
repz
dec
xor
sub
or
sub
jnp
je
jl
inc
sahf
dec
les
out
jo
clc
mov
inc
sub
push
push
ret
jmp
jnp
and
fwait
loopne
arpl
dec
stos
sbb
jno
mov
adc
pop
xlat
xor
push
lods
prefetch
sbb
inc
push
sub
jp
jne
lods
mov
xchg
xor
pop
fstpl
push
inc
mov
mov
mov
mov
test
fbstp
cmpsl
repnz
adc
leave
lret
aas
into
cld
xchg
push
jg
fisttpll
and
mov
jbe
adc
xchg
push
test
push
aad
pop
xor
dec
test
adc
aaa
sbb
pop
push
gs
rcrb
mov
insl
pushf
xchg
mov
mov
fdivl
jns
dec
or
mov
sahf
addr16
dec
call
test
out
mov
rcr
lret
adc
enter
add
xchg
fwait
insb
mov
xchg
rcrl
frstor
test
xchg
cmpsb
test
push
mov
loop
fstl
das
jne
or
push
jne
sbb
mov
ret
dec
dec
lock
sub
ficomps
push
push
ja
sub
and
ds
gs
ja
arpl
icebp
bound
sub
add
sbb
scas
pop
adc
sbb
inc
pop
and
lret
aas
scas
daa
add
jno
mov
adc
lret
adc
in
xor
pop
insb
xchg
mov
jle
inc
sbb
lods
test
adc
std
ljmp
sbb
loope
out
dec
cmc
stc
leave
xchg
sbb
fbstp
mov
addr16
xor
mov
divb
or
add
cwtl
sbb
fwait
pop
stos
xchg
addb
and
stos
fsubrl
je
or
mov
das
mov
int
cli
mov
int
push
push
and
and
sbb
pop
fwait
sbb
lret
push
push
lock
aaa
and
ja
adc
scas
fdivs
push
sub
mov
stos
mov
push
or
sub
adc
sbb
in
xlat
and
and
out
pop
inc
sbb
or
lods
divl
sarb
stos
daa
xchg
pop
in
dec
sbbb
mov
and
inc
xor
mov
dec
sub
xor
mov
pop
int3
mov
in
sahf
or
inc
insb
jp
push
incb
dec
stos
and
lds
add
scas
repz
push
movsb
adc
xor
pop
je
je
jno
rclb
xor
or
dec
sbb
mov
adc
in
and
xlat
jne
push
stos
jmp
mov
add
in
pushf
jecxz
push
fdivrp
xchg
lret
inc
scas
mov
push
mov
mov
ffree
movsl
sub
pop
xor
mov
repnz
lods
lds
icebp
pop
enter
ret
lret
fsubrs
aam
inc
xor
inc
inc
or
and
jb
sbb
xor
xor
shll
test
pop
gs
mov
cmpsl
push
xor
pop
aaa
loopne
cmp
sub
ds
shrl
push
cmp
ss
test
inc
hlt
mov
js
xchg
daa
pop
jge
stos
jb,pn
cmp
popa
mov
inc
addb
and
sbb
cmp
inc
push
notl
enter
out
cmpsb
ds
or
mov
leave
fs
shlb
js
popf
jg
mov
mov
push
sub
or
movsl
xor
stos
push
call
xchg
mov
inc
fisubrs
and
sbb
sub
and
pop
shrl
rol
lea
outsl
ss
adc
jae
lds
adc
xor
mov
adc
fcomi
rcr
shll
testb
mov
js
imul
jmp
jmp
es
in
arpl
and
sbb
fstpt
xlat
sbb
js
jb
mov
mov
or
fisubl
push
fisttps
daa
outsl
shl
pop
je
mov
xchg
movsb
and
popf
stos
pop
xchg
cmpsb
sbb
lret
hlt
lret
cmp
loopne
xchg
ret
xchg
stc
mov
arpl
mov
and
dec
mov
and
in
or
fcompl
insl
rclb
repnz
pop
add
pop
mov
mov
mov
aam
imul
shl
mov
pop
or
xor
test
xor
loopne
rolb
fisttps
cld
sahf
pop
adc
rclb
sbb
in
fdivl
mov
lods
rcrl
pop
jecxz
int
leave
mov
push
jg
test
add
cltd
ja,pn
nop
je
sbb
push
push
or
or
fs
jne
sbb
call
shrl
xor
lcall
lea
insb
xlat
ja
lea
push
loope
push
sub
pop
hlt
inc
int3
fdivrp
pop
in
rclb
sub
sub
inc
lret
jge
pop
xchg
or
mov
xlat
mov
mov
or
mov
jno
fwait
out
mov
push
pop
pushf
dec
hlt
imul
addr16
mov
mov
aad
and
cltd
jae
fwait
shll
inc
sub
push
cld
mov
jne
imul
adc
mov
pop
addl
lcall
dec
push
and
inc
pop
add
add
inc
push
insl
push
cmpsl
cld
aaa
in
cmp
add
test
sub
inc
inc
ret
cmp
adc
sarl
push
adc
adc
loope
rcrb
aas
pop
push
je
adc
cltd
inc
test
loop
pop
stos
or
gs
imul
ffreep
push
repnz
popa
xchg
mov
push
sbb
andl
decl
out
xor
outsb
add
and
gs
cmovnp
cmpsl
mov
mov
mov
mov
and
mov
push
dec
cwtl
sub
iret
jmp
jmp
imul
loopne
out
loope
iret
xchg
xchg
jo
roll
enter
xchg
in
xor
fdivrs
dec
in
dec
push
pusha
cmp
adc
out
xchg
xchg
cmp
insb
mov
testl
add
mov
adc
mov
dec
mov
jl
mov
imul
pop
push
add
cmp
daa
sub
mov
or
adc
fmull
addl
lcall
jb
add
imul
lcall
outsl
pop
mov
mov
xchg
and
cwtl
mov
or
sbb
push
ret
ret
ss
push
dec
das
fadd
bound
fbstp
sbb
xor
xor
cmpsl
shl
push
and
in
jo
out
aas
mov
xor
add
jp
push
loop
cmovno
fmull
xlat
aad
or
cmpsb
leave
fwait
inc
jle
fcmovnbe
out
cmpsb
jmp
mov
fs
lcall
nop
subb
repnz
stos
cmp
cltd
add
ret
jb
add
dec
dec
rcrb
fwait
xchg
stc
push
pop
push
and
mov
jl
pop
lret
xchg
outsb
jl
js
movsb
out
mov
or
xchg
cmp
arpl
mov
pop
xor
lcall
adc
mov
aad
test
push
mov
sbb
xrelease
jge
sti
cmp
ss
mov
and
jo
and
push
push
mov
pop
dec
mov
andb
vmovddup
int
in
inc
mov
pop
popa
aad
scas
add
mov
or
shll
xor
test
lock
xchg
popf
bound
push
mov
loopne
dec
ret
cmp
rorl
mov
push
or
sbb
je
adc
call
je
loop
not
outsl
dec
add
rclb
xchg
mov
or
lods
jne
rcll
dec
shr
addr16
js
int
pusha
sub
test
xor
jbe
dec
mov
daa
fdivrs
out
mov
scas
arpl
inc
xchg
push
cmp
inc
aaa
lods
sbb
add
mov
ljmp
popa
push
ret
sub
and
insb
mov
push
imul
mov
ret
push
repnz
and
push
xchg
jae
popa
pushf
in
pop
cld
cmpsb
inc
rcl
shlb
mov
fs
xor
ret
pop
imul
push
add
lds
dec
mov
paddb
cmpsb
daa
mov
std
inc
lcall
cmpsb
and
daa
rcrb
in
xlat
push
into
cs
fcos
movsb
mov
sub
in
push
mov
cs
mov
repnz
test
gs
in
push
sub
push
or
imul
push
lcall
jp
push
cs
jge
out
adc
inc
fdivp
ficomps
mov
outsl
test
lods
pop
push
add
xor
fisubrs
cmp
dec
cmp
jge
push
xor
push
xchg
xor
fcoms
into
inc
fdivl
inc
inc
dec
ret
pop
and
xor
daa
lock
dec
in
cmp
in
or
js
sub
mov
movsb
vmovapd
sbb
push
adc
sbb
mov
ret
and
mov
mov
xchg
push
xchg
std
hlt
shlb
subl
cwtl
cwtl
cli
add
add
ljmp
sbb
pop
adc
cmp
push
mov
mov
or
xchg
lock
or
and
xor
push
insl
jle
push
mov
lcall
add
xchg
insl
cs
mov
mull
stc
xchg
cwtl
and
push
daa
clc
outsl
sti
roll
movsb
out
adc
test
xor
inc
mov
stc
and
cwtl
fisubs
inc
xor
sub
dec
push
stc
xchg
outsl
sbb
pop
push
mov
xchg
es
into
pop
aad
jl
jle
xchg
dec
in
xor
ret
pop
sub
and
ret
push
mov
sub
cpuid
enter
or
lods
mov
sbb
popf
into
add
pop
cmp
stc
push
enter
jns
call
add
ds
jecxz
and
orb
test
gs
orl
push
fnsave
mov
mov
mov
xchg
mov
mov
xchg
popf
int
fldenv
test
aas
cwtl
mov
ret
inc
out
test
inc
mov
sub
push
insl
xchg
jecxz
pop
popf
jle
enter
outsb
fs
lret
test
dec
add
jg
add
inc
adcl
in
mov
lret
xor
clc
popf
ss
jmp
imul
adc
setns
dec
dec
iret
pusha
mov
pop
hlt
mov
in
int
mov
clc
iret
out
icebp
out
dec
call
outsb
es
les
xor
pop
sbb
mov
push
add
imul
lahf
adc
pop
jo
sub
mov
mov
inc
xorb
pop
lret
js
dec
mov
jmp
mov
mov
jns
jae
pop
sub
xor
imul
ds
or
out
stc
cmp
je
into
in
and
int3
dec
and
xlat
sbb
bound
cld
sub
outsb
cwtl
call
sbb
insl
cmp
outsb
in
or
pop
xor
add
push
clc
cld
jno
or
stos
sbb
aam
je
push
mov
pop
popf
roll
xchg
out
in
fmull
push
cmp
push
shr
xchg
sub
shll
mov
bound
loop
sub
cltd
xor
adc
fmulp
ret
mov
scas
mov
aad
sbb
lret
xor
inc
cwtl
pop
lds
addr16
popa
mov
lahf
ljmp
sti
pop
xor
les
xor
movl
push
and
push
iret
add
cs
cltd
add
mov
lods
icebp
xor
ds
rcr
lahf
push
jbe
mov
mov
push
popf
cmp
adc
popa
jb
lahf
ljmp
out
roll
roll
mov
pop
stos
dec
dec
mov
call
ljmp
repnz
mov
push
jecxz
lods
adc
push
in
jae
mov
ret
add
mov
push
fdivrs
daa
fldenv
loope
jl
outsb
jmp
out
jae
popa
cwtl
sbb
mov
stc
out
sti
sub
int3
stos
xor
or
or
int
ljmp
insl
inc
fstpt
dec
cwtl
scas
mov
or
xor
movsl
push
insl
scas
jb
add
add
mov
mov
roll
sbb
sar
ficompl
test
or
repz
rcr
clc
lea
shrl
jmp
push
and
fildl
sub
out
add
xchg
push
outsb
test
ficoml
lahf
int
dec
test
repnz
pop
or
ljmp
pop
jae
sub
fisubrl
inc
bnd
pop
out
adc
inc
push
push
sub
xor
es
cmp
pop
mov
jb
jno
sbbb
fstpt
outsb
push
jo
mov
jnp
outsl
fidivs
xor
orb
cmp
xchg
or
jecxz
sbb
inc
pop
outsb
push
add
add
push
fldt
or
jp
test
test
gs
aam
std
cltd
sbb
mov
or
inc
sub
xchg
push
sbb
and
push
clc
inc
xor
iret
push
push
inc
mov
gs
pop
dec
imul
jae
and
and
movsb
mov
pop
loopne
jp
stos
popa
or
movsl
cltd
in
inc
dec
fldcw
jp
sbb
pop
repz
and
repnz
iret
aad
test
push
fwait
pop
push
add
pop
movsb
xorl
arpl
adc
jle
je
jmp
adc
push
mov
and
xchg
sub
adc
adc
arpl
xlat
push
lcall
into
and
outsl
in
cltd
sarb
rorb
scas
pushf
cmp
adc
es
xchg
mov
add
rcrb
xorb
in
dec
add
push
sbb
adc
fmul
mov
push
pop
dec
pop
add
in
jo
and
fmul
and
mov
test
inc
stos
push
xorl
jo
mov
or
push
adc
mov
mov
bound
out
jb
rcll
xchg
jle
push
sub
int
mov
mov
mov
mov
push
inc
jnp
adc
push
add
xchg
mov
push
cmpsb
mov
add
stos
pop
or
dec
shrl
insb
jg
enter
ja
xchg
movups
add
mov
inc
imul
test
stc
pop
cmp
add
ja
sub
cld
movsb
push
sbb
scas
mov
imul
add
jmp
rsqrtps
imul
cs
call
lods
adc
ret
outsl
lea
mov
push
outsl
in
cmp
push
repnz
or
aas
mov
add
push
lret
cld
es
leave
and
aas
xchg
shll
fistpl
outsb
dec
loop
sbb
dec
ss
lret
test
cmp
push
or
xchg
addr16
jne
sub
xor
ret
xor
pop
mov
pushf
lods
mov
loopne
dec
cmc
cwtl
out
fidivl
out
xchg
lret
pop
loope
xlat
je
aaa
ja
clc
dec
divl
jns
jle
aad
inc
jmp
adc
xor
sub
cs
and
out
sbbb
jge
jb
cmp
cmp
inc
sub
push
mov
pop
adc
bnd
in
out
push
and
in
imul
cli
outsl
mov
aaa
in
dec
xchg
cmp
and
aas
dec
pop
inc
pop
fldenv
mov
stos
push
pop
add
xchg
insl
adc
lret
pop
xchg
or
into
and
shll
dec
push
pop
mov
lods
icebp
rol
jbe
add
clc
inc
sarl
sub
cmp
lods
repnz
cmc
dec
lcall
xlat
stos
in
test
mov
push
push
ljmp
or
add
lahf
xor
sarl
pop
rorl
loop
mov
in
pandn
add
sub
jle
test
jl
or
int
imul
pop
subb
hlt
ret
and
adc
sub
ret
dec
jl
outsb
test
pop
and
dec
stos
les
in
sbb
imul
std
mov
sti
fldl
push
sbb
bound
xor
je
pop
rolb
sbb
ret
add
ja
jbe
out
fnstcw
adc
imul
or
adc
scas
adc
cmc
mov
push
jg
mov
scas
add
in
add
cmp
jecxz
out
or
sbb
or
cld
ljmp
inc
movsl
xchg
dec
scas
sbb
jbe
data16
jnp
jecxz
inc
mov
lea
out
inc
stos
addr16
imul
xchg
fisttpll
mov
and
jo
add
add
stc
in
push
pop
nop
add
test
push
cltd
test
stos
mov
lods
cli
fcoml
imul
fwait
or
enter
insl
and
arpl
lahf
mov
mov
std
pop
notl
pop
add
icebp
shl
jns,pn
insl
and
inc
fsubl
xchg
test
ret
adc
xchg
std
call
jle
test
ds
push
mov
xor
addr16
push
add
dec
pop
in
jae
mov
out
xor
cmp
addr16
fildll
xchg
imul
insb
aad
testb
in
scas
ficompl
or
gs
dec
add
adc
cli
loope
mov
mov
movsl
dec
cmpb
mov
ja
inc
aam
and
hlt
test
push
incb
mov
aad
mov
les
imul
hlt
aas
cmp
imul
lea
cmpl
inc
mov
mov
fbld
xor
dec
pusha
dec
lcall
rcrl
les
or
in
xchg
xchg
scas
cmpsl
jns
ss
imul
sbb
mov
aas
int
ret
xor
adc
add
loop
pushf
xchg
sbb
gs
sbb
and
outsb
testb
xchg
pop
pop
mov
rclb
sahf
mov
dec
clc
out
data16
cs
mov
sbb
xchg
jecxz
outsl
mov
cli
dec
aaa
inc
ret
inc
cs
movsb
addr16
fildll
subl
repnz
and
dec
add
cmpsb
mov
push
icebp
shll
arpl
sub
mov
cwtl
movsl
mov
mov
mov
jge
fwait
neg
mov
or
push
lret
pop
push
fisttps
add
mov
mov
sarb
push
inc
and
filds
icebp
jmp
push
cmp
fldt
mov
mov
sbb
or
ffreep
fcmovb
add
cmp
pop
and
cltd
xor
insb
xor
adc
xchg
aam
add
rcrl
dec
outsl
mov
outsl
mov
sub
xchg
mov
add
cmp
outsb
call
xchg
sbb
inc
cmpsb
addr16
hlt
shll
popa
xchg
xor
sbb
mov
pop
lock
dec
jp
pop
jb
testb
jae
repz
cmp
cmp
in
loope
cmp
mov
stos
and
in
imul
and
mov
xor
adcb
xchg
std
insb
sbb
mov
iret
cmp
xchg
add
leave
sbb
loope
or
mov
sbb
add
call
dec
sti
pop
jl
lret
pop
dec
das
insb
pop
in
adc
cmp
mov
movsb
in
outsl
mov
push
adc
repz
jmp
xchg
inc
ja
and
rol
mov
arpl
jg
stc
rcr
les
mov
sbb
or
xchg
scas
movsb
mov
iret
dec
sub
xor
xchg
push
add
insl
lcall
xlat
push
xlat
dec
or
cmp
xlat
pusha
jl
jno
push
mov
mov
das
or
arpl
orl
pop
mov
and
or
and
or
and
and
test
mov
adc
sbb
mov
repz
mov
in
xchg
adc
adc
jg
iret
lods
and
loop
cmp
cmp
in
insb
popa
jbe
or
sub
es
movsl
sub
dec
stos
xor
lea
mov
popa
mov
inc
fimuls
pushf
add
dec
adc
mov
roll
in
inc
inc
pop
dec
inc
jle
inc
and
shll
inc
jb
mov
dec
dec
lds
xchg
imul
scas
adc
or
dec
mov
adc
sbb
mov
ds
xchg
adc
inc
iret
jae
sahf
fcompl
mov
pop
out
sbb
incl
popf
lods
clc
and
jge
adc
pop
push
mov
test
xor
hlt
add
pop
aad
jns
stc
or
fisttpl
incb
adc
sbb
lret
mov
fstl
lods
or
call
inc
cmpsl
aad
cwtl
xchg
mov
adc
lock
pushf
ljmp
insb
lret
jnp
or
inc
push
cli
clc
push
repnz
ljmp
jmp
push
shl
sti
mov
add
scas
or
add
shrb
jne
aam
ljmp
push
jp
fdivl
inc
jbe
push
adc
mov
mov
mov
mov
cltd
test
push
ret
or
adc
jnp
pop
xchg
decb
lcall
jecxz
xorb
loopne
add
jae
adc
cmp
mov
cmp
movsb
jae
es
aam
rcll
aam
cltd
cmp
adc
pop
xchg
outsl
pop
test
popf
sbb
ja
outsl
jae
and
or
dec
jle
push
and
test
cmp
jnp
insb
lock
insb
movntq
out
in
ret
sti
pop
pop
sub
adc
pop
xchg
xor
mov
stos
pop
aam
out
gs
jno
subb
cmc
pop
test
jo
xchg
cwtl
mov
inc
pusha
in
sbb
mov
clc
out
adc
sahf
mov
mov
scas
adc
pop
xchg
mov
cld
cmpsb
pop
sbb
fs
dec
popf
mov
xor
adc
jl
mov
cmp
jb
xlat
icebp
mov
jnp
ds
xchg
xor
daa
mov
nop
xor
sbb
or
in
imul
adc
shl
in
mov
sub
push
pop
xlat
shl
add
in
add
xchg
pushf
lcall
sub
sbb
cmp
aaa
pop
mov
lret
inc
dec
sub
loopne
sbb
in
mov
sti
lret
cwtl
test
add
je
xchg
fdivp
lods
insl
fdivrl
sarl
xchg
pop
popa
cwtl
cld
or
aaa
idiv
pop
mov
inc
repnz
xor
fisubl
pop
jb
xchg
imul
sub
cmp
inc
push
mov
outsb
inc
and
mov
repnz
ffreep
or
sbb
cld
in
pop
addb
daa
rclb
jbe
test
addr16
inc
push
outsb
sub
outsl
loopne
cmp
adc
and
xlat
fisubrs
cmpsl
orb
insb
mov
inc
pop
push
test
mov
and
sbb
js
and
out
lods
mov
inc
jmp
dec
jl
enter
and
xlat
data16
lods
jp
int3
push
repz
rclb
stos
lods
inc
or
sub
sub
push
cmpsb
lcall
ror
out
sbb
xchg
pop
lahf
out
je
pop
or
mov
in
lret
fistpll
add
je
push
or
adc
mov
add
add
sub
mov
xor
out
js
loope
enter
sub
dec
scas
fwait
sbb
stc
mov
es
mov
rorb
push
add
aam
andb
in
xor
mov
divl
aam
xchg
mov
adc
add
push
cpuid
rorl
lahf
lea
jmp
mov
jp
dec
pop
push
xchg
scas
mov
lea
xchg
leave
adc
repz
js
or
or
stos
std
ret
adc
jge
add
or
mov
es
adc
loop
aaa
dec
in
in
or
imul
mov
mov
and
xchg
add
push
cmp
sahf
int3
cwtl
and
loopne
jo
sbb
testl
mov
dec
out
mov
pop
loopne
andb
dec
fadds
inc
mov
ret
cltd
clc
jle
jmp
jecxz
ds
loop
rcl
rcll
data16
inc
stos
sbb
loopne
adc
xor
fwait
leave
mov
adc
push
arpl
inc
cmp
sarb
cltd
xor
push
mov
add
lahf
pop
sbb
subl
jmp
cmp
add
test
inc
test
hlt
jno
cmpb
stos
jne
sub
negb
movsb
hlt
iret
stos
mov
push
push
xor
lods
cmp
dec
xor
sbbb
dec
loope
ds
inc
push
xor
int3
fisubl
hlt
mov
test
adc
test
fadds
dec
or
negl
mov
loopne
cmpsb
jnp
cld
enter
cld
fdivr
mov
sbb
in
push
pop
subps
ret
pop
fmull
loop
cmp
aam
fwait
rolb
aam
cld
cmpsb
mov
scas
inc
and
sahf
pop
inc
dec
cmp
mov
dec
inc
pop
aas
clc
cltd
mov
sub
idivl
outsb
insb
push
xor
xchg
inc
dec
lret
dec
push
cmp
ljmp
push
ret
jmp
push
pop
xor
add
sar
je
outsb
movl
sub
xchg
push
and
cmc
inc
cmc
scas
das
adc
movsb
fildl
xchg
xchg
in
pop
imul
sub
mov
jno
out
mov
int3
leave
add
ret
mov
repnz
jle
pop
mov
mov
mov
popf
inc
rcll
cmc
in
mov
lds
push
movsl
addr16
push
dec
call
ss
pop
dec
pop
fwait
inc
inc
in
mov
lcall
shlb
cmpsl
insl
arpl
push
mov
mov
inc
in
mov
stc
popa
inc
jmp
mov
pusha
lds
dec
fcmovnu
outsb
dec
dec
mov
loopne
je
mov
add
mov
lret
pop
jmp
xchg
push
push
inc
pop
mov
sub
add
jo
xor
pusha
adc
sub
sub
lods
xchg
xor
sub
roll
cmp
add
cmp
jmp
jecxz
jl
pop
cmpl
inc
scas
mov
mov
inc
outsb
in
adc
adc
fcomi
sbb
mov
cld
mov
outsb
and
idivl
fnclex
jnp
adc
scas
pusha
lds
cmp
fadds
or
dec
add
rcl
pop
mov
stos
xor
or
add
rcrl
mov
int
or
dec
xchg
gs
and
cmc
ds
push
or
mov
sub
inc
or
adc
imul
sbb
divl
mov
lret
sbb
stc
inc
adc
mov
mov
mov
ja
inc
cmp
mov
pop
adc
sarb
cmp
ret
pop
insl
in
xor
adc
xor
sub
in
and
arpl
int
add
xor
pushf
sub
cld
out
andl
lcall
mov
mov
in
leave
xchg
push
nop
repnz
dec
adc
subb
xchg
popf
ja
mov
xchg
add
sti
add
in
jae
xchg
fists
xor
pop
inc
adc
cmp
mov
inc
xor
ret
cmp
fstl
and
mov
mov
or
int3
inc
and
push
dec
dec
loopne
jle
add
mov
test
xor
hlt
popf
cld
lods
fnstcw
push
ds
in
rolb
mov
mov
incb
ljmp
add
xchg
jne
ror
das
stc
ljmp
ret
mov
push
shll
pop
dec
jge
pop
daa
push
mov
daa
stc
sar
xor
pop
mov
inc
inc
rcrl
cmp
sbb
mov
loope
adc
jbe
repnz
in
mov
pop
imul
dec
xor
pushf
mov
fwait
sahf
lea
ss
mov
notb
jne
daa
push
test
dec
xor
dec
dec
jne
inc
lcall
iret
or
push
cmp
inc
stos
and
push
rcrb
push
sbb
add
fisubl
es
shl
push
test
icebp
jae
test
xchg
out
pop
aad
ficomps
mov
movsl
pop
cmp
mov
mov
xchg
mov
push
mov
xchg
add
insb
out
mov
movsl
add
outsl
push
roll
sahf
aas
pop
fiadds
int
sub
lods
int
xor
es
popf
decb
pop
sub
repnz
dec
decl
xchg
ffreep
data16
adc
mov
fdivrs
into
jae
js
lret
xchg
add
mov
cmp
push
lods
je
or
lcall
push
push
shll
dec
sarl
mov
movb
pop
sub
pop
fisubl
mov
inc
jnp
sbbb
adc
shlb
jbe
shl
ficompl
jbe
mov
roll
out
aaa
push
jnp
or
cmp
jno
sub
sub
iret
aam
mov
xor
jl
mov
clc
jl
mov
fs
popa
mov
jae
aas
jne
jmp
or
add
and
shlb
push
ficomps
mov
add
cmpsl
sbb
inc
mov
outsb
aaa
stc
cmp
daa
dec
cmp
les
sub
repnz
xor
jg
adc
adc
jns
or
movsb
inc
outsl
pop
inc
add
rep
dec
mov
mov
ds
jmp
shlb
push
cmp
xor
add
movsb
adcb
outsl
push
repnz
adc
xchg
aaa
mov
ret
sarl
inc
mov
dec
pop
mov
jmp
inc
xor
jns
int
ret
aad
fcoms
sti
sub
pop
pop
lret
icebp
adc
out
mov
lods
shlb
pop
xor
test
cli
xchg
scas
hlt
out
cmpb
leave
cmp
lods
jecxz
push
push
xchg
scas
and
jl
popa
pop
pushf
inc
imul
and
test
pop
daa
cmp
stos
mov
daa
xlat
xlat
dec
push
add
add
cmc
nop
inc
outsb
leave
or
cmp
inc
mov
dec
stos
mov
xor
inc
fwait
cmp
push
lods
or
cld
mov
test
das
hlt
mov
cmp
xor
pusha
lea
mov
stc
pop
dec
sub
shl
cmpsl
ficoms
fxch
xor
jb
pop
jmp
orb
push
stos
inc
repz
aaa
push
in
sub
pop
fwait
and
cmp
mov
jecxz
scas
add
mov
and
insl
jmp
adc
pop
fdiv
xlat
cmp
cmp
cwtl
not
mov
xor
aam
mov
hlt
xchg
pop
cltd
and
xchg
lea
fcomi
lea
cmp
dec
dec
inc
adc
xchg
fmul
adc
inc
ret
mov
xchg
jmp
or
fsub
jp
add
or
mov
mov
push
push
test
mov
or
cs
fimull
mov
push
push
dec
jl
pop
xor
fstpt
pop
out
std
xor
xor
pop
push
push
jge
ljmp
fbld
leave
sbb
mov
aaa
xchg
push
dec
das
pop
hlt
fstpl
jno
imul
and
lods
ret
cmp
subb
stos
popl
adc
xlat
pop
lock
lret
fists
and
in
xchg
jnp
js
mov
lods
int
out
jb
cwtl
loope
mov
call
shr
push
dec
inc
pop
add
dec
and
mov
mov
adc
movsl
xor
mov
pop
mov
jns
dec
inc
cmc
sbb
adc
mov
or
cli
fldenv
xchg
dec
ret
lcall
sbb
cld
mov
aam
lds
mov
incl
jle
mov
cli
push
repz
xor
lods
sbb
ss
dec
pusha
cltd
fidivs
jbe
cmpl
jno
cmc
mov
gs
movsl
mov
sbb
roll
mov
scas
lods
ret
and
push
stos
in
or
pop
xlat
in
add
es
mov
out
jg
adc
mov
pop
data16
fst
cmp
cwtl
or
ja
cmp
scas
lahf
pop
mov
xchg
mov
add
mov
mov
cmp
lods
fimull
test
jnp
cmp
add
xor
hlt
jbe
aam
mov
mov
add
cmp
xchg
ror
push
lret
pop
push
lret
mov
or
fmul
sub
adc
movsl
pop
or
scas
jo
daa
sub
ss
jo
rcrb
xchg
xchg
les
push
and
add
mov
cld
sti
xchg
dec
jp
dec
or
mov
nop
mov
sti
fistpl
cli
movl
dec
test
dec
lods
lcall
test
aam
mov
icebp
add
scas
js
xchg
sbb
aas
sbb
ret
dec
jp
mov
mov
int
and
xor
mov
inc
mov
dec
ja
sbb
push
sub
sub
inc
pmulhuw
je
push
call
aam
test
in
and
fistps
mov
testl
leave
push
repz
push
movups
mov
shll
shrb
cmp
rcr
dec
cmp
daa
pop
mull
and
inc
andl
add
aad
mov
movsl
clc
data16
stos
mov
inc
test
insb
lods
nopl
xchg
sbb
xchg
mov
xor
mov
add
scas
je
push
iret
popa
in
xchg
inc
rorb
mov
out
xchg
shrl
js
nop
stos
mov
rclb
cmp
mov
add
cmp
jmp
push
rcrl
pop
js
jns
xor
dec
or
or
sti
mov
jmp
xchg
lahf
mov
pop
fcoms
icebp
es
sub
or
insb
fcmovnb
mov
imul
cmp
sub
lods
push
adc
in
xor
jl
add
shll
jmp
iret
stc
cs
cmp
dec
jmp
cli
add
aaa
inc
sti
test
mov
fisubrs
notl
cmp
xchg
push
mov
pop
in
and
in
lods
enter
fadds
or
inc
into
in
xchg
adc
pushf
jecxz
add
add
sub
add
jl
fildl
and
ljmp
mov
cmc
inc
in
test
and
bswap
inc
inc
mov
shlb
push
xchg
inc
fs
push
lods
jns
cmc
lret
pop
icebp
cmpb
pop
mov
sbb
add
push
pop
sbb
sahf
test
ss
dec
xchg
mov
repnz
pop
fnstsw
addl
lods
jns
lret
fwait
and
push
xor
cmc
icebp
mov
mov
push
pop
scas
cmp
lahf
jne
orb
dec
push
flds
fildl
loopne
and
pop
lcall
push
cld
fsubrp
jmp
das
xor
mov
nop
loope
test
push
sub
and
sahf
cmp
xchg
xlat
adc
mov
mov
fsubl
mov
xor
icebp
jnp
mov
cmp
jb
insl
fcoml
push
and
fsts
lcall
fcoml
mov
xor
xchg
jge
xchg
shl
cltd
out
repz
push
jecxz
jmp
clc
mov
frstor
adcb
in
andb
and
jb
inc
lock
out
mov
push
jae
mov
insb
icebp
cmp
pop
repz
sbb
push
fmuls
mov
pop
push
test
fstp
adc
fcoml
dec
xorl
mov
stos
ja
sub
dec
xchg
clc
add
sub
xchg
popa
add
sub
out
push
loopne
outsb
cmp
hlt
pop
cmp
stos
push
and
cmp
roll
cmpsl
or
ret
and
adc
sbb
xlat
xchg
es
mov
imul
shrb
out
std
rorl
jae
push
aad
jnp
ja
repnz
subl
pop
jno
mov
adc
test
xchg
add
lea
nop
xchg
lea
cmpsl
adcb
pop
and
cmp
xchg
cmp
mov
mov
jb
inc
mov
lret
dec
jb
lds
outsb
pop
ljmp
push
jl,pn
lods
push
mov
repnz
imull
mov
push
scas
xchg
and
subb
pop
mov
jmp
jnp
std
push
xor
pushf
push
jmp
jno
imul
pop
mov
jmp
mov
mov
stos
adc
adc
loope
scas
addb
aad
jg
stos
aaa
and
mov
jbe
ljmp
sarl
inc
inc
idiv
push
les
fwait
dec
jle
mov
in
push
loopne
mov
in
insb
inc
cmpsb
loopne
sbb
push
pop
dec
scas
xchg
push
ror
nop
imul
lods
sub
xchg
mov
and
insl
mov
cmp
add
les
and
push
out
push
cmp
scas
cmp
call
cmp
push
mov
std
adc
cmpsl
lds
hlt
inc
sub
push
ficomps
es
inc
dec
mov
std
add
test
ljmp
in
pop
test
in
js,pt
push
sbbl
mov
mov
inc
pop
call
cmp
lods
fldenv
mov
mov
stos
jmp
inc
jle
lea
xchg
cltd
inc
add
xlat
test
jg
test
imul
push
call
jb
sub
imul
push
mov
in
and
lret
pop
daa
lock
imul
movsl
aaa
and
das
das
aaa
out
cmp
icebp
cmp
pusha
xor
jae
lods
int3
mov
aaa
push
movsl
mov
lock
lds
add
xchg
push
xchg
add
movsl
dec
push
pslld
jns
and
lcall
inc
arpl
movsb
jae
shrl
mov
shll
rcll
mov
push
test
pop
testl
imulb
fs
aaa
xchg
inc
cld
hlt
flds
push
pop
shll
imul
dec
test
leave
push
dec
cmp
cltd
inc
and
jns
pop
jbe
out
imul
ljmp
in
inc
inc
rorb
push
cltd
pop
mov
mov
and
ret
arpl
jae
mov
aas
xor
mov
rolb
lea
xchg
add
mov
test
lods
cmpsb
sbb
mov
fisubrs
rorl
and
mov
imull
es
cmp
mov
loope
add
inc
dec
adc
mov
push
jb
sti
add
xor
mov
insl
jb
mov
push
insb
aaa
lods
push
int3
repz
cmpl
xor
push
xchg
mov
loope
xlat
aas
or
inc
mov
push
test
mov
out
mov
mov
shlb
mov
int3
fcompl
inc
xchg
mov
jp
test
or
add
daa
loopne
cmp
jl
and
lret
roll
push
repz
cmp
adc
daa
lret
je
cli
imul
faddl
js
xor
jno
imul
aad
add
cmp
jecxz
in
jecxz
out
sub
test
je
mov
jno
inc
push
sbb
cmpsl
xchg
in
xorl
xchg
sub
cmp
push
call
lods
mov
ljmp
add
lret
jae
sub
sbb
ss
arpl
xor
add
cmp
nop
daa
sbb
popa
inc
cmp
jmp
add
fsts
aam
jg
mov
ss
pop
clc
hlt
mov
add
sbb
inc
addb
jp
adc
xchg
push
ret
push
mov
cmp
aaa
mov
add
flds
sbb
sahf
mov
imul
jns
leave
pushf
inc
xchg
lods
loop
outsl
test
inc
loopne
call
int
push
mul
sahf
cltd
iret
push
insl
fs
icebp
out
stos
adc
lret
xchg
push
sarl
cmc
mov
xchg
cmp
add
jle
test
sarl
imul
jge
jle
loopne
fisubs
in
cwtl
push
cmp
dec
les
jne
pop
push
loop
adc
mov
je
mov
mov
dec
inc
xor
rclb
push
xchg
mov
push
repnz
dec
int3
jne
imul
add
imul
mov
mov
neg
test
stos
pushf
fisttpll
shrl
shrb
dec
add
xchg
rolb
pop
sbb
in
xor
shlb
dec
pop
mov
cli
xlat
out
andb
xchg
sbb
mov
and
push
mov
test
and
dec
scas
mov
repz
mov
pop
jno
adc
inc
and
xor
push
push
aam
push
and
icebp
xchg
lcall
int3
or
jae
xor
loope
movsl
cmp
xor
mov
mov
in
stos
outsl
enter
flds
adc
ja
int
cs
inc
and
xchg
cmp
mov
outsl
sbb
lret
sub
popl
cmp
mov
or
jnp
popf
in
adc
lods
or
jecxz
adc
mov
iret
pop
jbe
sub
pop
fsubs
jg
popa
cmpsl
adc
sti
clc
dec
dec
mov
add
inc
imul
jns
mov
fcomps
add
xchg
insl
ret
or
mov
dec
xchg
lea
xchg
lret
fidivrs
stc
jnp
and
lods
jne,pt
cld
jbe
aad
in
dec
scas
les
sti
inc
push
pushf
cwtl
sub
xor
punpckhbw
jbe
add
jbe
push
ret
dec
mov
insl
sbb
sbb
movsl
push
and
nop
pop
daa
dec
int3
lea
push
pusha
cs
orl
sub
and
nop
lods
pop
add
xchg
pop
fisttps
or
movsb
xchg
add
mov
inc
dec
and
mov
sti
ss
test
mov
mov
and
xchg
dec
and
dec
sbb
lods
outsl
lods
mov
pop
add
add
cwtl
insl
test
xor
or
pop
ljmp
dec
adc
cmpsl
rorb
mov
add
or
repz
mov
mov
pop
repz
sbb
push
cmp
mov
fists
and
mov
sahf
jnp
mov
movsb
pop
adc
xor
push
fnsave
invd
xchg
lret
lock
push
enter
push
out
mov
add
mov
jle
xor
sub
push
xor
xchg
xor
or
movsl
gs
ss
sub
imul
addr16
call
jo
movsl
sahf
inc
xor
sub
mov
das
imull
cmp
fs
ljmp
aad
in
repnz
in
jecxz
push
jb
adcl
xchg
sbb
std
pop
or
ljmp
pop
std
je
aam
je
ret
sbb
lds
popf
adc
cmpsb
push
xor
pop
dec
jle
mov
push
mov
xchg
xlat
mov
popa
dec
cmp
es
out
and
sti
pop
fdivl
movb
lds
pop
pop
repz
dec
cmp
test
mov
ds
leave
addr16
cli
xchg
aaa
inc
jp
pop
push
cs
fbstp
and
ds
cmp
jecxz,pt
shlb
stos
repz
xchg
pop
imul
sbb
je
add
mov
movsb
fildl
ftst
adc
pause
pop
ljmp
fldl2t
add
pushf
int3
loopne
and
mov
sbb
jl
or
sbb
xchg
outsb
or
adc
xlat
xor
lcall
out
inc
sarb
add
or
arpl
adc
push
inc
mov
xor
sub
inc
mov
add
pushf
add
ss
fildl
out
dec
xor
mov
mov
lods
sarb
nop
jg
sub
clc
mov
std
add
test
mov
push
sbb
xor
mov
test
nop
aas
or
pop
inc
and
sbb
push
stos
adc
push
scas
dec
cs
call
in
int
insl
stos
pop
hlt
adc
mov
lret
mov
fsubp
xchg
fdivrl
cmpl
xlat
adc
stc
inc
push
test
mov
cmp
cmp
repz
shlb
pop
sbb
xchg
mov
xor
mov
ficoms
inc
test
je
shr
jo
jb
pop
scas
scas
leave
add
mov
gs
insl
in
cmp
mov
out
popa
ja
inc
mov
xchg
push
mov
adc
xlat
ret
add
aaa
test
in
out
sub
mov
add
and
mov
push
orl
mov
std
xchg
pop
push
cmp
mov
jns
cmp
lcall
push
ljmp
sahf
or
data16
lock
cld
pushf
movsb
lret
mov
mov
lret
adc
andb
lock
shrl
mov
loop
je
scas
orps
sbb
jno
push
mov
out
or
sbb
iret
pop
scas
or
stos
sahf
popf
xor
test
pop
fists
and
mov
jns
lret
nop
hlt
sub
and
popa
jnp
fcomi
xor
xor
aaa
adc
iret
mov
cwtl
inc
dec
lds
add
mov
lods
cs
loopne
inc
jle
dec
cwtl
jle
ja
xchg
xor
inc
sbb
mov
test
xlat
cmp
mov
xor
jge
cld
iret
mov
push
jb
xchg
dec
pusha
pop
sub
jo
lret
and
or
in
in
push
inc
outsl
xchg
loope
jl
add
rorl
mov
xchg
cmp
sub
pop
pushf
xor
testl
mov
mov
fildl
sub
and
repz
fs
pop
xlat
rcrl
test
or
xchg
jg
sub
mov
clc
mov
push
test
test
mov
sbb
dec
jb
lds
lds
stos
shll
and
push
outsb
imul
pop
jmp
sbb
lock
xor
push
pop
or
push
mov
outsb
pop
sahf
les
mov
mov
mov
lock
clc
push
fucomi
scas
sbb
lret
mov
in
pushf
sub
test
pop
out
test
push
jmp
pop
dec
stos
mov
scas
jae
push
inc
ds
pop
arpl
scas
rorb
cmp
inc
in
or
insl
and
dec
fstps
pop
testb
movsb
cmpsb
xor
mov
ret
pop
fldl
pop
mov
flds
xor
ds
and
push
pop
sbb
xchg
sahf
mov
adc
ss
in
mov
arpl
push
sub
lahf
sub
int3
mov
jno
jnp
jnp
aam
lea
test
hlt
lret
pop
xchg
xchg
shll
pop
and
mov
cmp
or
jl
cmc
push
sahf
popf
cmc
test
movsb
ret
mov
es
mov
sbb
xchg
add
jno
push
jns,pn
mov
repnz
cmpb
lahf
lahf
fstps
pop
ret
mov
adc
and
lcall
dec
je
jmp
popa
ljmp
insb
cmp
mov
and
repnz
adc
mov
pmaxub
push
add
fidivs
mov
sub
jo
scas
inc
insl
pop
in
adc
jno
adc
sub
add
inc
pop
lea
mov
sbb
add
lea
and
pushf
std
inc
addb
push
mov
jno
xlat
clc
js
fdivs
rcrl
insl
and
push
fs
sbb
push
xor
push
sbb
adc
pop
adc
out
out
enter
push
stos
rcr
mov
sahf
push
sbb
or
and
jp
pop
xor
repz
popl
adc
push
cmp
pop
pushf
xchg
dec
pop
push
movsb
and
xchg
dec
sbb
fdivrs
xor
lcall
sbb
push
jmp
cld
jp
fstpt
cwtl
sub
roll
loope
lods
repz
aad
fadd
adc
fnsave
pop
test
popa
xchg
cmp
mov
add
adc
xor
sbb
push
pushf
jbe
dec
arpl
pop
rol
cmp
jae
scas
push
mov
int
mov
adc
jp
cltd
adc
negb
or
xchg
das
cmc
adc
subb
outsb
jmp
fsubrl
xor
xchg
cmp
sbbb
xchg
stc
push
mov
adc
leave
data16
mov
jle
sahf
and
dec
aad
inc
jmp
movsl
xchg
lods
xor
cmpsl
xchg
mov
fcmove
scas
mov
subl
scas
pop
loop
dec
in
pop
fbstp
inc
xor
dec
jne,pn
and
mov
clc
roll
inc
and
clc
jecxz
push
insl
or
fsubl
ficomps
pop
mov
andb
and
add
dec
push
stos
xchg
orb
repz
cmc
jl
outsb
daa
icebp
je
or
cmp
adc
test
xor
aad
stos
imul
xchg
pusha
nop
loopne
ja
jbe
mov
clc
jne
sub
or
mov
dec
xor
push
mov
push
mov
inc
dec
inc
pop
pop
and
gs
mov
or
pop
or
enter
cltd
jge
fisubrl
das
push
dec
add
push
test
test
lock
push
in
mov
test
into
adc
scas
jg
iret
mov
sahf
mov
out
mov
rolb
into
fsubrl
push
fld
jge
pop
mov
lret
jbe
pop
out
adc
stos
push
pop
mov
push
and
cmc
popf
incl
enter
push
jnp
ret
xor
cld
std
pop
outsl
sarb
aas
hlt
mov
and
add
jg
mov
xchg
fisttps
add
jle
aaa
out
test
xchg
ja
ja
sub
inc
push
in
jle
pop
clc
lahf
pop
inc
cs
aam
push
pop
aas
lds
ljmp
push
popa
mov
lods
mov
xlat
loopne
icebp
daa
and
lea
dec
test
fsubrp
repz
adc
or
nop
movsl
add
cmp
mov
fscale
call
int3
in
flds
lret
mov
cld
sub
jbe
pop
popf
sbb
sbb
subb
jle
dec
nop
iret
rolb
js
mov
sbb
mov
dec
or
and
cmp
test
push
jp
sub
jmp
popa
add
adcb
xorl
jp
cmp
mov
adc
lret
xor
mov
cli
mov
cwtl
ret
cli
jp
sti
sub
fldcw
outsl
repnz
lods
fsubs
data16
xchg
and
aad
out
inc
fsubs
adc
out
inc
cmpsl
xor
cwtl
lret
xlat
ljmp
xchg
pop
jl
outsl
xor
adc
mov
pop
mov
shl
xor
dec
sbb
jmp
test
dec
mov
jae
jl
adc
outsb
dec
inc
sbb
sarb
stos
out
orb
cs
sahf
mov
dec
inc
mov
flds
jno
dec
cltd
in
hlt
in
fbld
jmp
inc
jae
jp
pushf
pop
pop
or
cwtl
loopne
mov
das
cmp
insl
add
test
xchg
jne
lahf
lods
imul
cbtw
dec
loop
and
ja
jl
xor
aam
dec
ror
xchg
fldenv
addr16
movd
rcl
jmp
pop
cltd
and
xor
xor
fidivrs
repz
hlt
pop
cld
push
shr
mov
xchg
imul
inc
decl
or
or
dec
mov
sub
aaa
lods
xchg
xchg
sahf
lods
xchg
add
jbe
nop
cmp
mov
ret
pusha
aad
cmp
dec
ret
daa
push
sarl
mov
push
push
out
clc
rcrl
cli
fs
jg
mov
and
cltd
inc
sti
add
mov
out
subb
jp
mov
pop
shll
or
xor
lods
jae
loopne
xchg
ja
addr16
add
lds
cmp
hlt
add
jae
imul
fmuls
jno
test
cs
jmp
test
jle
xchg
pushf
test
daa
jb
cmp
inc
cli
or
aam
jg
pop
xor
aaa
and
cmpsl
lds
dec
mov
test
adc
in
push
and
loope
out
xchg
xchg
sbb
insb
xor
pushf
aas
add
jbe
inc
cwtl
sub
fwait
neg
jecxz
sub
xorl
jns
fistl
mov
les
inc
xorl
add
add
mov
lcall
lock
jns
lahf
add
add
iret
cmp
mov
mov
adc
add
and
out
mov
push
xchg
pusha
mov
jns
xor
mov
or
cmp
add
pop
push
inc
jmp
add
aas
sti
cmpsb
out
cmp
imulb
adc
insl
lahf
xlat
pusha
mov
cwtl
inc
movlps
loope
adc
adc
mov
xor
or
xchg
movsb
or
leave
ror
inc
add
das
sub
xchg
pop
and
mov
mov
cmp
sub
push
jmp
clc
shll
push
into
push
into
pop
adc
xchg
inc
push
pop
lcall
dec
shll
outsl
sub
rolb
and
mulb
sub
push
pop
push
fwait
sti
aam
out
subb
dec
inc
mov
sub
std
mov
das
and
and
or
sub
js
xchg
mov
shll
push
adc
hlt
sbb
jnp
pop
adc
dec
sahf
xchg
inc
daa
mov
call
adc
ja
in
add
push
testb
jnp
repz
out
mov
push
adc
pop
mov
aaa
and
push
pop
into
inc
pmulhuw
fldcw
int3
sbb
lods
push
test
out
bswap
push
pusha
cmpsb
cwtl
jmp
jne
les
pusha
xchg
sbb
test
scas
cmp
or
arpl
jg
mov
arpl
pop
adc
scas
cltd
mov
pop
push
mov
pop
add
mov
lret
jns
clc
xchg
in
pop
mov
shr
push
lock
cwtl
stc
or
repnz
cmpsl
test
fs
mov
mov
pop
add
lock
fadds
movsl
pop
xchg
adc
dec
jns
lock
repnz
les
sbb
sub
jmp
imul
mov
out
popf
mov
arpl
nop
out
arpl
jbe
in
imul
cli
fmull
mov
cmp
jnp
aam
xchg
test
daa
add
arpl
sbb
inc
rclb
push
mov
push
add
mov
loope
mov
repz
xchg
sar
sbb
or
dec
xchg
cmp
and
stos
dec
sub
out
fdiv
call
mov
or
cmp
adcb
or
or
mov
mov
mov
xor
pop
hlt
stc
popa
cli
sub
pop
in
pusha
or
je
fwait
mov
and
clc
popf
mov
cmp
arpl
pop
xchg
test
leave
lods
inc
hlt
and
jo
das
adcb
es
out
push
shll
jmp
stos
inc
movsb
dec
pop
mov
lret
mov
add
pushf
add
test
mov
cmp
fmuls
fdivs
mov
sbb
push
fidivrs
leave
out
sbb
jns
movsb
add
push
jbe
test
push
data16
cmpsl
mov
add
jae
aad
cmpsb
adc
mov
cmp
mov
cltd
jg
ja
or
mov
popa
or
repnz
add
xor
sti
fisttps
fdivrl
idivb
iret
xor
push
mov
cmp
cmp
std
cld
or
aam
movsb
in
in
mulb
jae
out
jne
sub
or
or
call
bound
nop
cmpsl
lock
out
sbb
lods
fadds
shll
add
pop
fisttpl
loopne
int3
add
lahf
push
pop
jmp
addr16
mov
xchg
cmp
xchg
jae
rcrb
aas
sbb
rolb
xor
cs
or
nop
pop
sahf
or
jno
and
mov
mov
divl
cmp
or
bnd
pop
pop
dec
xor
cmpsb
aad
bound
lock
jns
add
jns
js
outsl
or
mov
xchg
inc
xor
xorb
sub
ret
lea
cli
fnstcw
mov
movsl
sub
mov
lcall
pop
loopne
pop
xlat
mov
sbb
aad
push
mov
inc
xor
or
arpl
ja
mov
sbb
cmpb
mov
aaa
pop
mov
add
inc
adc
scas
pop
or
push
in
scas
pop
lods
mov
int3
sub
add
mull
mov
rol
jnp
loopne
out
or
xchg
pusha
sub
stos
fdivrp
fs
add
test
jg
lcall
outsb
daa
clc
mov
adc
rorl
enter
insb
imulb
jmp
pop
popl
faddp
push
shlb
and
ljmp
lock
inc
adc
cltd
enter
outsb
dec
icebp
mov
mov
cli
cld
push
dec
sbb
pop
lahf
pop
test
cwtl
adc
divb
cmp
mov
aas
scas
dec
mov
jo
mov
scas
mov
es
ljmp
jle
sub
mov
std
and
ds
adc
out
out
cmp
pop
in
sub
mov
iret
andl
dec
movsl
loope
mov
jg
enter
pop
pop
scas
popf
mov
shll
jnp
adc
dec
jns
aad
jnp
sbb
fs
jl
call
aad
arpl
andb
dec
mov
jb
xchg
fcoms
xchg
xchg
xchg
jno
push
in
xchg
repz
jae
inc
notl
prefetcht0
lods
mov
mov
pop
adc
push
and
add
ret
in
jb
out
cmp
cmp
pop
aam
and
sub
imul
rcrb
adc
cmpsb
fstl
fstl
mov
xchg
mov
inc
mov
clc
push
repz
cmpl
jb
ljmp
int
div
popf
mov
inc
imull
lret
lods
or
lcall
push
daa
pop
push
add
push
fs
hlt
incb
setns
outsb
jne
xchg
dec
adc
mov
mov
out
jg
je
cli
aas
je
int3
ds
jo
ret
xchg
jns
mov
dec
rolb
cmc
pop
pop
shlb
dec
mov
push
jp
pop
repz
inc
or
jecxz
xor
cmp
or
fidivrs
xchg
pop
pop
shrl
daa
stc
popa
mov
jl
pushf
jp
push
shl
push
lret
addb
lcall
add
mov
lds
or
lcall
jno
sbb
adc
inc
sub
mov
test
xchg
add
inc
xor
add
int
lods
inc
popa
xchg
repnz
in
and
cmp
jae
cmp
ja
orl
popf
inc
scas
into
mov
xchg
sub
int3
pop
das
cltd
sar
xlat
pop
outsb
out
mov
adc
out
xchg
arpl
mov
xor
popf
inc
sahf
ret
outsl
ret
jbe
adc
inc
xor
stos
or
pop
cmp
pop
add
jp
dec
inc
js
pushw
lds
xorb
mov
scas
push
jns
out
inc
imul
cmp
fiadds
aaa
push
mov
jae
dec
add
pop
in
and
inc
adc
sbb
pop
test
lahf
xchg
xchg
movsl
mov
enter
fistps
in
movsl
ficomps
scas
cs
std
pop
and
lea
lret
lds
lret
rorl
sbb
fcomps
jmp
cwtl
aad
loope
and
cmpsb
xchg
lcall
mov
data16
mov
cmpsb
inc
and
cmp
loopne
xchg
cmp
cmp
int3
hlt
ljmp
mov
xchg
cs
popf
loop
jge
nop
ret
jmp
jecxz
cmp
sti
xchg
jb
ss
cld
sbb
in
loop
sbb
push
sti
or
push
add
iret
sbb
andl
mov
fdivs
jbe
mov
inc
scas
jmp
addr16
aas
rcrb
xchg
dec
repz
cmp
mov
data16
es
lds
lea
and
pop
xchg
sub
out
stos
addr16
inc
xchg
es
shrl
add
jmp
add
sbbl
dec
jge
mov
push
rcl
test
test
inc
cmpsl
jmp
xorl
je
mov
mov
pop
divb
insb
roll
sbb
cld
shrb
out
adc
mov
loop
push
pop
scas
testl
and
sub
fisttps
test
das
pop
mov
mov
sbb
xchg
xor
cltd
inc
lret
cmp
fistpl
lods
xchg
jle
jne
push
arpl
xchg
or
pop
movntps
sub
dec
inc
inc
mov
mov
cmpsb
mov
lret
cmp
lea
mov
cmp
fs
mov
pop
movaps
rcll
rcll
lret
pop
push
mov
xor
push
mov
and
mov
sub
pop
inc
push
inc
mov
stos
cmpsl
pop
dec
std
adc
dec
dec
les
popf
xor
ret
pop
pop
jae
sbbl
pop
xchg
add
shr
inc
scas
and
scas
push
and
es
ficoms
xor
cmp
xchg
push
faddl
mov
rolb
shlb
xor
jle
les
xchg
adc
and
xchg
sbb
scas
mov
int3
call
mov
dec
outsb
and
fiadds
cmp
dec
pop
andl
das
cmc
push
test
pop
xor
push
rcl
mov
cltd
test
test
rolb
jge
out
sbb
xchg
push
pop
ljmp
jge
and
clc
xor
mov
jnp
fs
jle
mov
xchg
shll
dec
mov
insl
cmp
push
mov
xor
lods
in
movl
xchg
aaa
ss
sbb
movsb
mov
or
pop
ss
dec
or
mov
inc
movsb
xor
fcomp
xchg
aaa
out
rolb
and
lods
mov
xchg
in
adc
xor
das
mov
cmpsb
pop
lahf
dec
xchg
and
adc
decl
jo
cs
mov
mov
out
sub
jae
sbb
pusha
xor
inc
daa
inc
scas
inc
jno
sub
mov
in
test
mov
cmpsl
pop
mov
mov
jg
movsb
jb
fbstp
cwtl
pop
adc
dec
mov
int
arpl
add
adc
sub
push
ret
jne
sbb
mov
in
add
sahf
sbb
shll
xchg
mov
push
ljmp
add
fiadds
mov
mov
repnz
pop
test
fmulp
in
jne
xchg
mov
iret
cmp
dec
cltd
int3
mov
push
into
push
mov
ds
jno
and
jmp
mov
iret
in
les
jp
dec
pop
xor
push
pop
aas
and
inc
mov
sbb
mov
xchg
inc
pop
jecxz
mov
outsl
mov
bound
mov
sub
adc
das
loop
cmp
mov
xorb
mov
inc
ja
add
aad
clc
mov
and
fisttps
xorb
add
dec
mov
xchg
mov
addr16
xor
xchg
or
fsub
sub
mov
repnz
aam
or
fadds
sub
push
cmp
ret
push
test
nop
mov
loope
aad
rcll
cltd
push
lcall
movb
xchg
das
out
int
addl
popf
xchg
cmpsl
mov
out
aas
outsl
in
loop
shl
iret
stos
sbb
aad
out
das
sub
add
pop
jbe
inc
push
add
sbb
inc
mov
nop
jnp
fsub
stos
pop
dec
xor
jmp
les
movsl
fisubl
jns
out
vcvtps2pd
rorl
cmc
shrb
pop
adc
mov
cwtl
call
clc
fidivrl
cmpsl
dec
int3
fwait
sub
jge
pop
mov
jns
int3
jg
fsubrs
jb
pusha
push
jb
cmpsl
pushf
add
lods
ret
mov
pushl
movsb
pop
sub
xorl
fnop
out
call
mov
push
xor
xlat
ret
and
add
xchg
mov
pop
inc
test
adc
insb
stos
push
repz
push
into
enter
ss
dec
mov
es
mov
roll
in
adc
xor
pop
fdivrs
lods
xchg
dec
out
jmp
scas
lcall
roll
test
push
cmpsl
out
xor
and
jnp
mov
sbb
pop
pop
push
fidivrs
fnsave
in
lahf
mov
sbb
cld
inc
xchg
adc
shll
or
adc
sar
test
sub
inc
jmp
mov
scas
xchg
push
js
ret
shl
lods
mov
mov
fs
jmp
pop
dec
cld
sarl
mov
sub
add
jg
std
jp
push
inc
cltd
lea
add
je
or
addr16
or
out
and
addr16
bnd
sub
je
mov
dec
jb
daa
xor
outsl
xchg
xor
dec
sub
mov
lock
sbb
add
hlt
inc
jg
hlt
or
jle
add
lcall
mov
mov
faddl
mov
aas
cli
sub
movsl
mov
fucomp
mov
ficomps
pop
or
ds
stc
jg
xor
dec
and
movsl
mov
aaa
xor
int
add
pop
xor
cmp
movsb
cmc
jo
add
jns
cmpb
push
jl
jo
jnp
fnstenv
jl
es
mov
xor
fwait
xchg
aas
andl
jnp
lret
fistpl
mov
mov
add
orb
mov
test
es
pop
cmp
inc
jmp
add
push
adc
or
and
xchg
jns
inc
imul
out
cs
push
add
popf
mov
or
cld
pop
xchg
aam
mov
dec
icebp
mov
dec
push
xchg
into
shl
ja
jns
leave
imul
sarl
and
stc
cmp
jl
lea
mov
pop
stc
or
adc
movsl
mov
cmp
test
fsubp
jecxz
mov
mov
mov
enter
movsb
dec
fisubrs
push
jge
shl
jbe
stos
dec
rcrl
add
cld
les
sbb
and
out
sub
mov
sbb
mov
adc
dec
jo
fidivrs
cmp
das
push
lret
xchg
inc
mov
sub
addr16
push
sahf
rolb
xchg
jge
mov
out
pop
loop
or
leave
xchg
rclb
sub
sub
or
and
scas
sbb
push
ljmp
xor
mov
cmp
xchg
or
inc
mov
lea
mov
jno
daa
movsl
jbe
and
pop
lods
sub
sti
and
call
pop
shrb
imul
sub
adc
scas
sti
mov
xlat
testb
pop
packssdw
shl
sbb
push
adc
clc
push
cli
lcall
lods
je
dec
jl
xor
inc
jb
cwtl
cmc
loop
or
iret
xchg
xor
xchg
repz
fdivs
inc
add
ret
xorl
push
iret
sub
stos
xor
mov
cwtl
je
jae
lret
mov
jno
dec
xchg
fwait
jbe
cld
jle
popa
repz
mov
popf
pop
jl
call
sub
add
mov
shll
add
test
jae
push
push
or
cmp
out
in
xorb
call
pop
sub
sti
outsb
pop
je
push
xchg
add
inc
mov
sub
dec
rcrl
pop
xlat
inc
adc
dec
in
jg
xor
gs
inc
xchg
ficoms
adc
cmp
rorb
add
sbb
pop
push
out
xchg
sti
push
in
ret
js
add
inc
mov
push
mov
les
push
sub
data16
repz
sub
dec
push
xchg
ficomps
lds
mov
nop
dec
adc
xchg
testl
shll
sbb
sub
out
cmc
cmp
lea
mov
jecxz
jle
data16
imul
xor
mov
outsb
lds
adc
fsubrs
out
std
out
fldcw
fsubs
pop
jle
ja
sub
cmp
fistpl
outsl
ja
bound
addb
lea
orb
xchg
and
cmpsb
add
js
xchg
insb
ret
out
inc
cwtl
in
hlt
sbb
add
mov
daa
daa
mov
cmpsl
cmp
push
pop
sti
mov
push
out
mov
adc
push
xchg
mov
repz
cmp
sub
js
jmp
or
call
loopne
jnp
mov
mov
push
in
mov
shrb
jle
or
cmp
mov
dec
xchg
dec
xchg
sbbl
fildl
clc
or
shl
loopne
jns
jp
lods
aaa
pusha
es
cmp
xchg
push
or
cmp
add
sub
sub
in
push
aam
movsl
jmp
or
lods
ret
in
movsl
mov
movsl
orb
rolb
or
push
cmpl
repnz
mov
dec
xor
lods
push
adc
aas
shll
and
ljmp
gs
xchg
pop
xchg
call
cli
fcomps
or
jecxz
icebp
arpl
pop
test
roll
test
insl
filds
test
pop
movsb
and
sbb
mov
pop
or
pop
push
mov
gs
mov
sub
insb
adc
push
mov
call
pop
movsb
jecxz
repnz
xor
sub
rcrb
or
ljmp
cwtl
add
or
lar
mov
adc
lock
adc
ds
pmulhuw
jle
cmp
or
and
add
add
into
fistl
scas
mulb
cmp
sti
int3
xor
pop
into
subl
ljmp
gs
outsb
jbe
push
cwtl
lret
nop
cmp
sbb
jae
mov
lea
rcr
pop
cld
mov
cmp
std
sbb
pusha
popf
pop
addr16
sbb
cld
inc
sub
pop
out
dec
add
ret
dec
stc
mov
shlb
mov
lahf
mov
sbb
jae
lods
sub
pop
sub
lret
push
and
add
sub
test
lea
rorb
dec
jmp
push
sbb
je
or
sbb
int
lds
gs
lcall
stos
mov
nop
stos
add
push
pop
hlt
lods
scas
xor
test
fwait
jne
fiaddl
arpl
stos
xor
out
scas
pushf
aas
iret
cs
sbb
jne
inc
idiv
in
xchg
pop
pop
rclb
rorb
testb
sub
push
push
test
mov
jb
mov
or
loope
xchg
repnz
sbb
je
test
push
scas
xor
pop
pop
stos
test
xchg
sbb
orl
pop
xchg
xor
pop
mov
addr16
repz
imul
cltd
loopne
dec
mov
into
and
xor
and
mov
in
in
mov
xchg
mov
cltd
aaa
je
dec
cmc
andb
xchg
fidivrs
data16
stos
xchg
addl
mov
out
mov
stc
jecxz
pop
lds
and
outsl
sbb
inc
jecxz
lea
add
lods
incb
mov
mov
push
neg
mov
add
push
inc
andb
push
in
test
mov
nop
js
mov
pop
xor
inc
cmp
jmpw
jno
fsubrl
add
scas
das
or
pusha
ja
pop
lods
movsl
mov
jle
dec
ret
dec
xor
xchg
test
add
pop
pushf
mov
sub
fidivrl
xchg
add
cmp
das
dec
dec
xor
int
mov
sahf
or
ljmp
loope
push
leave
add
mov
mov
into
push
sub
shr
loopne
clc
sahf
or
xchg
xchg
mov
imul
hlt
pop
clc
xchg
jmp
test
js
pop
mov
aaa
dec
rorl
mov
cmp
push
out
jb
push
mov
jp
test
jae
xor
and
roll
outsb
mov
sahf
xor
xor
jle
fwait
add
loop
mov
jns
int
rorl
cmp
mov
ds
stos
pop
dec
dec
xor
mov
fsubl
sbb
add
or
dec
mov
cmp
andb
push
scas
pop
pop
cmp
jnp
mov
repnz
adc
add
jns
flds
and
push
out
jo
dec
aaa
pop
data16
inc
inc
lret
cs
fistpl
dec
sbb
sbb
stc
and
adc
mov
sub
cli
test
inc
xchg
push
xor
psubw
mov
xor
test
xchg
cmc
or
push
push
jle
loopne
pusha
cs
movsl
mov
les
mov
ljmp
sbb
inc
into
daa
clc
add
sbbb
mov
jl
aaa
movb
and
fmuls
leave
mov
jecxz
mov
test
jae
imul
lods
subl
mov
sub
or
cli
aam
fimull
sarl
lea
push
std
sbb
fildl
add
inc
jo
cli
aaa
mov
lods
xchg
push
xchg
add
shlb
sarb
in
or
clc
push
rcrl
loopne
pop
hlt
mov
mov
into
and
arpl
xchg
dec
cmpsl
xchg
js
xchg
xchg
cmp
mov
xor
mov
jecxz
dec
insl
sub
test
ss
pop
mov
out
mov
sbb
pop
jbe
push
dec
sbb
mov
xor
mov
out
dec
push
test
inc
jo
and
dec
xchg
push
jg
cmpsl
test
mov
adc
push
loop
jp
js
stos
adc
push
cmp
cmp
jno
push
cwtl
jae
sti
cld
mov
xor
std
inc
add
insl
sbb
push
lds
lcall
pop
push
shrb
icebp
jmp
outsl
push
popf
jo
push
popa
push
lods
dec
xor
push
sbb
mov
cs
std
jns
jbe
add
mov
mov
and
cmp
sbb
jbe
pop
dec
xchg
mov
aam
lock
movsb
push
test
cli
test
aaa
iret
mov
push
cmc
mov
ret
pop
dec
je
rorb
arpl
lds
shrl
mov
inc
inc
push
sbb
mov
test
lds
shlb
add
push
movsl
cltd
std
subb
add
imul
cmc
nop
mov
jbe
push
fistpll
xchg
and
call
call
shr
push
adc
push
mov
in
xchg
xchg
aam
xchg
std
loop
mov
insb
inc
add
jns
test
dec
imul
xchg
add
jecxz
mov
cmp
loopne
xor
inc
sarb
jg
inc
jmp
dec
movsb
int3
push
or
xchg
call
lahf
je
int3
xor
fiadds
push
pop
ss
nop
iret
fcomi
pop
push
cmc
dec
aas
es
lcall
test
out
cmp
push
orl
inc
jge
popf
push
and
in
jle
adc
xor
xor
popf
mov
repnz
lods
jbe
jnp
push
inc
mov
subl
push
push
mov
mov
fcoms
dec
mov
shrl
pop
inc
popl
leave
leave
setae
push
popa
stos
jns
lret
push
mov
jns
scas
adc
ret
dec
push
out
in
inc
in
arpl
ljmp
push
outsb
mov
hlt
movsb
test
mov
fidivl
pushf
imul
ret
fldt
inc
fbstp
add
sub
movsl
mov
scas
repnz
add
xor
gs
ret
xchg
mov
imul
mov
push
push
xchg
cltd
cmp
jo
pop
sub
int
cs
stos
inc
pop
mov
paddb
fwait
shufps
fcomps
pop
cmp
pop
push
mov
jmp
cmpsb
and
mov
sbb
inc
bound
push
aas
push
xchg
sub
dec
adc
les
or
and
mov
jle
cmc
call
jle
pop
iret
sub
xchg
add
sahf
imul
rcrb
inc
lcall
xor
outsl
push
cs
xor
xchg
inc
dec
push
aam
push
pop
ficoms
jl
and
dec
shl
mov
in
cmp
repz
out
cmpsb
in
xor
sub
fidivl
daa
arpl
fdivrl
repz
sbb
testb
adcb
aad
cmp
rcll
xchg
dec
ret
sbb
jb
fists
dec
push
frstor
add
add
mov
cmpsl
pushf
xchg
loope
mov
es
mov
mov
lock
and
lea
mov
mov
mov
ljmp
jns
jl
insl
shlb
cmpsb
insl
push
push
push
loopne
mov
mov
out
mov
adc
fs
push
pop
fimull
rorl
or
inc
cltd
mov
add
cltd
xchg
icebp
add
mov
into
push
daa
mov
aad
pop
mov
ja
inc
push
dec
jmp
mov
push
iret
fbld
in
lcall
mov
popa
out
clc
sub
sbb
lock
xchg
shl
aad
xor
push
data16
mov
jle
hlt
mov
nop
and
aaa
sbb
cld
cmp
mov
pop
push
xchg
cmp
repz
dec
mov
push
sub
and
incl
imul
in
pop
pop
mov
push
push
adc
sub
fadds
xchg
lcall
fstl
decb
mov
cmpsb
sub
jae
test
in
ret
xor
jg
push
je
int
rol
arpl
dec
mov
bound
or
ss
js
jl
stc
and
add
cli
mov
pop
repnz
add
aas
mov
jl
call
mov
cmp
movsb
add
aaa
pop
jno
in
cmp
sub
dec
and
xor
mov
sub
mov
sbb
pop
ljmp
jmp
pushf
clc
movsb
loop
xchg
add
add
push
daa
inc
mov
xlat
aaa
nop
leave
scas
jns
scas
xchg
addr16
cmpsl
mov
gs
push
scas
ljmp
adc
pop
loope
sub
adc
mov
lret
popa
hlt
in
pushf
inc
dec
sbb
ljmp
stc
outsl
push
mov
add
dec
negl
stos
loopne
repz
js
mov
or
mov
sub
jge
mov
lret
imul
cmpsb
mov
mov
pop
popa
or
stos
inc
out
fcoms
cmpsl
pop
iret
cmpsl
lahf
mov
inc
out
mov
mov
jbe
and
test
mov
inc
insb
xchg
ss
mov
xor
inc
test
pop
call
pop
push
das
out
cmp
or
shll
pop
push
xchg
fwait
lea
xchg
sbb
mov
cmp
call
cmp
mov
mov
insl
cltd
jae
and
es
nop
fimull
pop
adc
popf
fidivs
xchg
cmpsb
cmp
cmpl
push
outsb
fidivrl
inc
mov
rcr
dec
mov
outsl
jnp
out
dec
ffree
push
sbb
mov
mov
mov
lcall
push
xor
stc
sbb
dec
inc
loopne
adc
add
mov
fwait
pop
ljmp
lods
rcr
adc
jnp
mov
adc
hlt
inc
mov
inc
xchg
jg
cmp
lret
cmc
jae
lods
mov
test
mov
outsl
ljmp
sbb
mov
lock
outsb
mov
or
cmp
jp
pop
pop
xor
xor
sahf
dec
add
shll
pop
std
jns
std
movsb
push
dec
dec
ret
push
mov
push
inc
xor
shrb
test
push
sbb
or
sbb
adc
or
push
repnz
clc
fmulp
fs
in
in
pop
mov
and
repz
and
jae
test
gs
mov
dec
std
mov
cmp
mov
mov
pop
std
jne
test
push
jns
push
jmp
fs
cmp
sbb
stc
dec
insb
test
in
mov
int3
adc
sub
xchg
mov
lret
test
mov
test
aaa
out
mov
fcomip
xchg
test
loopne
mov
sbbb
and
mov
or
inc
shlb
jo
add
cmp
inc
xchg
test
mov
mov
cmp
shl
aaa
fstpt
insl
fcmovbe
xor
sub
cmp
mov
add
cmpsl
leave
aam
push
pop
push
sub
lods
cmp
movsl
leave
mov
fists
push
and
sub
or
dec
xor
mov
xor
push
sbb
lods
sbb
xchg
inc
mov
idivl
out
mov
das
add
push
dec
xorl
add
xchg
int
jge
stos
adc
imul
mov
cli
scas
mov
jl
cld
test
jg
insl
je
and
std
cwtl
imul
outsb
sbb
or
mov
jo
push
dec
cltd
int3
sbb
adc
jp
mov
ja
mov
imul
jns
icebp
imul
mov
cmp
test
mov
repnz
jmp
pop
xor
jnp
pop
inc
and
lahf
loopne
icebp
outsl
insb
add
ds
jecxz
jmp
out
xchg
or
sub
or
fsincos
inc
mov
push
repz
fimuls
clc
out
or
sub
xchg
shrl
in
pop
dec
in
and
xchg
data16
lock
daa
into
xchg
mov
pop
mov
test
dec
mov
enter
je
les
push
rcl
push
jecxz
bound
pushf
mov
pop
pop
imul
sahf
jg
das
neg
push
pop
jb
jo
pop
lods
xchg
in
std
mulb
dec
movsb
in
xor
push
mov
xor
dec
mov
sahf
lret
in
cmc
sarb
cltd
into
mov
xor
xor
lret
and
ds
dec
das
or
or
dec
and
push
jae
push
lods
mull
and
xor
xchg
mov
pop
xchg
lahf
mov
ljmp
dec
inc
aam
push
mov
outsb
dec
bound
adc
clc
test
or
mov
lret
xor
adc
add
mov
xor
call
not
mov
into
hlt
dec
iret
xor
add
lret
jg
push
scas
add
call
jno
sbb
dec
mulb
int
imul
lods
int3
aas
fisttpl
mov
ret
inc
jns
jb
mov
rclb
push
cli
outsl
test
push
sub
add
mov
add
xchg
mov
cmp
bound
aam
xchg
dec
adcl
push
js
push
mov
ret
mov
mov
cmpsb
xchg
lahf
pop
lods
mov
pop
repz
fistpll
push
dec
sti
push
int
rorl
mov
mov
jns
add
lock
and
test
icebp
sti
pop
or
stos
push
aad
xor
push
adc
leave
daa
push
sbbb
testb
push
aam
xorl
test
cmp
mov
dec
cmp
push
jnp
add
ljmp
rcr
fwait
cltd
cltd
adc
push
xor
pusha
mov
push
incb
cltd
sub
push
adcl
mov
testb
ficoml
jmp
out
scas
js
sti
push
xor
cmpsl
out
xor
repnz
pop
mov
mov
and
and
dec
movsl
mov
dec
popa
mov
mov
in
scas
cmpsb
cmc
mov
scas
sub
std
dec
or
aam
add
jl
cmp
mov
lahf
out
mov
iret
xlat
add
sub
fs
iret
sub
dec
jmp
es
ja
mov
fsubrp
daa
cli
fdivrl
bt
outsb
lods
gs
rcrb
mov
mov
scas
or
mov
fs
jge
sub
sub
cld
sub
adc
rcl
jns
mov
negl
cmpsb
decl
decb
xchg
fs
ja
xchg
pushf
call
repnz
jmp
dec
dec
fs
jo
mov
pop
sub
leave
inc
sbb
xchg
mov
loop
mov
mov
add
cmp
adc
inc
cmc
fnstcw
int
push
rolb
or
pop
lcall
loop
jnp
xchg
das
daa
cwtl
adc
adc
and
push
and
mov
pushf
gs
inc
add
in
mov
mov
cmp
out
cmp
cmp
add
mov
dec
fdiv
xchg
jnp
adc
les
lret
cmp
movsb
xlat
ret
xor
dec
xor
pusha
mov
ret
cmp
imul
cs
aaa
jb
push
mov
xchg
ret
aaa
add
test
ss
popa
popl
xchg
add
test
movsl
movsl
xchg
xchg
jae
movsb
mov
or
xorb
jb
mov
loope
sub
insb
subb
mov
pop
test
mov
jbe
nop
aam
sti
push
and
movl
rcrb
push
es
mov
out
or
repz
mov
add
in
lock
es
filds
and
cld
or
jbe
mov
stos
int3
push
testb
dec
ret
pop
or
sahf
pop
aad
jmp
jl
xlat
or
sub
ret
mov
pushf
xchg
inc
outsb
mov
push
add
xor
push
scas
push
sub
inc
sti
jno
imul
or
xchg
out
pop
in
fidivrs
movl
pushf
sarb
js
push
repnz
insb
mov
lret
jg
sub
dec
xor
xor
popf
rcll
jmp
and
inc
je
pop
and
dec
sbb
or
es
rolb
in
xor
in
or
jbe
movsb
push
pushf
sbb
cld
sbb
mov
xchg
pop
push
and
call
sbb
in
cmp
enter
xchg
andb
xor
sbb
add
in
pop
push
add
push
xchg
dec
cmc
mov
mov
rorb
xchg
dec
in
or
cmp
popa
fdivl
pop
add
arpl
out
imulb
jl
btc
test
leave
sbb
or
sub
stos
push
pop
push
data16
push
ja
daa
shlb
movl
fistpl
repz
imul
sarb
and
sbb
inc
pop
mov
sub
mov
mov
cs
cwtl
jmp
hlt
xor
sahf
inc
push
mov
cmpsl
ret
sub
loopne
jg
or
or
mov
imul
iret
mov
xchg
and
sbb
das
lahf
xor
arpl
rcr
les
add
or
adc
enter
mov
inc
xchg
or
roll
js
popf
sbb
push
and
mov
in
es
mov
or
aam
shrl
mov
leave
sti
mov
scas
xor
xlat
pop
pop
daa
in
shrb
cmp
cmp
sub
push
lods
das
lahf
mov
stos
jb
jge
call
or
cmc
mov
xchg
aad
sarl
and
sub
push
andb
mov
adc
outsl
jae
inc
lret
jmp
add
fstpl
sbb
inc
lock
push
adc
or
mov
mov
inc
jb
mov
cmpsb
inc
cmc
add
and
mov
sti
int
adc
repz
outsb
outsl
les
sahf
add
push
lret
inc
sbb
int3
and
dec
inc
and
xlat
mov
pop
shr
jns
push
call
cmp
inc
in
sbb
xor
jge
adc
jle
sub
cltd
sbb
mov
pop
shlb
inc
imul
xchg
popa
cld
xlat
xor
ud0
push
jns
shrb
gs
clc
lret
cwtl
jmp
fdivr
mov
dec
sbbb
sbb
push
add
movsb
jmp
sbb
jno
add
addb
pop
aaa
xor
jge
xor
jge
call
xchg
jno
and
rol
cli
inc
cmp
ficoml
out
sbb
nop
sub
iret
in
fsubl
iret
or
test
push
sub
outsb
and
mov
jo
movsb
add
jne
jmp
lret
sbb
mov
mov
rorb
mov
xor
xor
adcb
xchg
in
pop
test
test
js
sti
xor
cld
addr16
outsb
pop
push
daa
sbbb
sarb
les
cmp
push
mov
sbb
xchg
lock
cmp
jno
test
adc
mov
adc
jp
inc
shl
mov
mov
inc
cmp
mov
mov
adc
lods
int3
les
cmpsb
pop
test
mov
cmp
jge
imul
jnp
sub
mov
std
filds
aam
mov
inc
lcall
aam
shlb
xor
mov
pop
xchg
dec
lret
pop
pop
scas
and
leave
xchg
rclb
sarl
cltd
and
dec
or
leave
out
jae
shr
loope
imul
or
push
fs
mov
xchg
add
xor
fbld
movsb
cmp
ret
pop
fnstenv
sbb
mov
dec
pop
loope
adc
and
fs
inc
add
push
bound
xchg
push
sub
cld
mov
ds
mov
jne
pop
mov
pop
dec
inc
push
js
inc
xlat
lods
hlt
popf
repnz
repnz
dec
adc
xchg
imul
mov
adc
push
repz
in
sarl
cmp
sub
or
mov
aad
rclb
mov
pop
mov
dec
ds
fistps
inc
jg
lahf
ljmp
adc
xchg
adc
lcall
inc
nop
push
cmpb
jns
jle
cmpb
jo
icebp
loope
pop
pslld
dec
movl
jb
add
dec
and
jne
sbbl
sub
inc
and
cmpsb
sub
or
xor
out
mov
gs
mov
fcmovbe
cmp
int3
shll
or
sub
lods
hlt
cmp
subb
imul
push
je
std
notl
mov
mov
xor
shl
stos
call
loope
cmpl
rcll
cld
out
lcall
js
or
rcrb
cmp
hlt
fwait
jmp
in
fnsave
dec
rcrb
data16
jne
int
fsubrs
insl
cld
inc
mov
or
ret
out
icebp
xchg
xchg
test
dec
aad
scas
sbb
mov
fdivl
repz
push
repnz
push
push
jne
enter
data16
dec
cmp
outsb
inc
inc
std
xor
and
add
loop
popf
mov
mov
jb
push
mov
adc
jge
or
imul
pop
xchg
push
clc
ret
in
cltd
test
add
push
jno
int
leave
sub
lret
movsl
add
push
fnstenv
and
dec
movsl
pop
xchg
dec
int3
and
pusha
test
orb
es
fld
xchg
inc
loope
shlb
mov
cmpl
outsb
xchg
lret
cltd
mov
pop
iret
adc
out
lret
out
insl
inc
addb
mov
push
jns
jnp
sbb
add
jo
fsubr
out
or
add
and
lods
sub
lcall
cwtl
ret
es
jmp
push
filds
movsl
xchg
loope
jg
stos
cs
adc
push
cmp
fimuls
adc
cwtl
in
mov
mov
imul
into
cwtl
cli
sub
stc
fs
sbb
fidivrl
stos
in
add
and
mov
inc
cmpsl
push
ficoms
dec
sub
ljmp
pop
jae
repz
xchg
and
jns
xchg
mov
arpl
out
je
mov
or
cmp
adc
inc
adc
test
lods
sub
pop
jne
lock
dec
ds
cli
insl
fstp
mov
enter
add
xor
dec
adc
pop
lea
sbb
xor
sub
call
out
das
aas
xchg
dec
sub
cld
js
mov
or
jne
cmp
jle
fdivrs
gs
mov
mov
dec
cmp
adc
xor
xlat
pop
out
xchg
std
jmp
shrl
xchg
inc
sub
jge
sbb
out
test
in
fs
jge
dec
push
push
in
push
jle
pop
adc
cld
icebp
iret
pop
lods
notl
pushf
xchg
cmp
adc
mov
scas
pop
or
imul
shl
jns
fldl2t
nop
sahf
push
adc
push
xchg
scas
jp
inc
mov
inc
rolb
shrb
rorl
adc
xchg
xchg
negl
pusha
jle
ja
jmp
xor
xor
mov
scas
inc
and
popf
xchg
pop
lods
mov
dec
cli
rcll
addl
add
orb
andb
dec
push
mov
inc
insb
xchg
lret
dec
push
add
add
call
repnz
and
je
fwait
int
rolb
inc
xchg
shl
bound
mov
mov
daa
int3
nop
and
dec
nop
orb
ret
pop
and
dec
enter
pop
inc
icebp
mov
pop
movb
test
mov
in
adc
sbb
jge
out
cld
ret
loopne
loope
sbb
sbb
fdivl
fildll
cwtl
push
std
enter
aas
cli
push
mov
or
fsubl
call
fcomps
inc
adc
das
test
push
push
fcmovnbe
cs
inc
mov
std
je
inc
dec
and
dec
out
mov
popa
pusha
mov
pop
outsb
pop
ret
leave
and
shl
lcall
aam
insb
pop
cli
cmp
jp
and
xor
imul
jecxz
in
xor
jno
dec
pop
dec
pushf
push
fstps
mov
imul
or
push
repnz
js
and
fisttps
ffreep
mov
aam
stc
fucomp
lock
pop
mov
ljmp
xor
daa
repz
int3
push
nop
xor
jno
rcrl
push
cmpsl
mov
leave
ja
xor
mov
sub
jne
adc
insb
in
mov
xor
mov
aad
xor
mov
shlb
into
repnz
sub
mov
iret
adcb
lcall
jbe
inc
xchg
arpl
mov
sahf
pop
dec
addr16
mov
mov
mov
lods
lret
ja
imul
lcall
lea
jne
sbb
pop
test
mov
mov
in
pop
push
enter
sub
arpl
decl
fucomi
inc
test
rcll
cltd
imulb
xchg
xchg
sbb
jb
xchg
sub
adc
fisttpll
mov
pop
add
stc
xchg
cmpsl
xchg
dec
jle
xchg
dec
mov
or
repnz
dec
cmpsb
mov
pop
push
mov
lahf
inc
push
dec
ret
jp
je
sti
aaa
pop
adc
iret
mov
and
push
test
xor
call
add
loopne
and
sarl
xchg
subb
shrl
cmpsb
mov
or
outsb
test
arpl
jne
into
icebp
push
daa
jae
jl
push
inc
stc
cmp
movsl
inc
xchg
ds
cltd
mov
sbb
lock
shr
mov
jo
fwait
and
movsl
inc
or
jno
jl
int3
add
xor
test
ret
and
idivb
arpl
mulb
cmp
ss
aam
mov
out
out
scas
mov
ja
adc
gs
jle
outsb
cmpsb
fdivl
imul
dec
push
xchg
cmpsb
push
jno
mov
js
jnp
jo
in
stos
fwait
and
outsl
pusha
push
leave
incl
shl
sbb
adc
movsl
fmull
jb
sbb
pop
push
push
scas
jl
push
jb
fcompl
mov
test
xchg
and
inc
mov
jle
and
pushf
scas
push
mov
fistl
sbb
daa
jmp
popa
lahf
mov
mov
add
adc
mov
addr16
ja
mov
dec
lock
std
sub
sbb
pushf
cmpsb
dec
and
scas
inc
sub
cmp
add
lret
cmp
pushf
aad
mov
lahf
lods
incb
mov
add
adc
dec
test
ret
pop
test
push
cmp
insl
mov
into
dec
and
push
ret
shlb
out
jge
xor
add
push
xor
adc
or
loopne
push
cwtl
xor
xchg
lahf
adc
outsl
add
std
enter
ja
mov
mov
mov
lret
xchg
cmp
xor
jb
popa
mov
xchg
mov
sub
add
pop
mov
mov
and
add
sbb
pop
adc
jecxz
or
jmp
fstl
jle
std
push
sarl
push
lock
fsubs
jge
jae
gs
lods
mov
xor
add
ret
fchs
daa
cld
in
push
pop
popf
mov
jp
cmp
insl
ds
loop
loopne
or
call
cmpsb
add
std
or
pop
xor
loop
int
xchg
fldz
push
dec
das
shlb
lods
fisttps
inc
mov
mov
xor
fnstenv
adc
out
movsl
push
dec
pushf
cwtl
or
add
sbb
icebp
and
stos
mov
pop
imul
lcall
mov
mov
mov
mov
cs
mov
mov
push
xchg
push
mov
das
push
cli
xchg
add
jae
inc
stos
mov
mov
movsl
add
cltd
iret
popf
aaa
jmp
pusha
call
push
fs
pop
fpatan
inc
push
cli
add
push
test
sbb
adc
pushf
lret
mov
in
data16
sahf
aaa
inc
mov
mov
gs
xor
insl
ret
mov
lods
ds
mov
icebp
cli
xor
add
popl
inc
sahf
push
jae
je
sbb
push
inc
js
mov
lea
mov
pop
dec
xor
mov
std
cli
sarb
lods
inc
adc
xchg
dec
xchg
and
movsb
insb
lods
lea
out
aad
or
sti
aaa
addr16
pop
jb
sbb
pop
fdivrs
mov
adc
and
maxps
pop
adc
call
add
stc
es
arpl
out
jns
gs
push
pop
mov
mov
les
jmp
dec
orl
mov
scas
xchg
push
lcall
add
sub
cmp
imul
movsb
inc
jbe
jno
xor
and
mov
loopne
pop
sbb
mov
cmp
xchg
xchg
or
adc
jecxz
imull
scas
rorb
jno
push
push
rorl
pop
int
fstl
into
jl
sarl
out
mov
push
dec
pop
jae
or
mov
popf
roll
add
int
mov
sti
ret
rorb
adc
imul
xor
pop
fwait
mov
pusha
in
fsubrs
lfs
nop
mov
dec
orb
clc
xchg
fsubrl
mov
sysexit
sbb
dec
push
dec
lock
fwait
aad
pop
add
mov
mov
push
sub
cld
mov
and
push
insb
mov
ret
mov
push
mov
dec
mov
mov
jns
addr16
xor
jg
iret
mov
jno
dec
cmp
popf
xor
cld
cmp
jnp
aam
roll
sub
pop
inc
jb
mov
sbb
out
adc
fcmove
cli
cmp
jnp
jmp
jo
mov
out
lds
push
cli
pop
pop
mov
movsb
jecxz
insl
js
aaa
add
idivb
xor
pop
sub
outsb
mov
sub
cs
rorb
mov
push
sub
jecxz
jne
mov
mov
lock
sahf
ljmp
test
pop
lea
insb
loop
adc
sbb
mov
or
scas
jp
mov
cmp
jmp
neg
push
mov
cli
jbe
inc
dec
int
mov
pop
xchg
xchg
add
arpl
or
arpl
push
aas
mov
cmpl
pop
rclb
inc
imul
and
rcrb
cmp
je
mov
or
bound
rol
or
jne
mov
rolb
cltd
sub
pusha
scas
push
scas
push
xor
sub
subb
adc
mov
mov
pop
scas
imul
fstpt
lea
mov
add
icebp
stos
sbb
imul
or
addl
es
push
into
ret
sub
pusha
push
jnp
int
test
sbbb
loop
jmp
add
adc
jne
outsb
mov
push
in
push
icebp
mov
movl
xor
jp
lahf
mov
inc
and
lea
repz
pushl
inc
pop
sbb
dec
jb
inc
test
or
bound
lods
or
and
icebp
xor
rclb
icebp
stos
bound
aas
lock
in
psrlw
xchg
jae
and
pushf
aaa
and
jg
out
pop
dec
das
je
clc
xorb
fisubrs
std
xlat
repnz
push
mov
dec
jmp
mov
call
ret
xchg
int
add
test
mov
in
jg
movsl
stos
sbb
mov
sub
lret
rol
sbb
mov
cmp
fstp
inc
push
xor
push
call
or
jecxz
ja
dec
jecxz
mov
and
cmp
inc
fsubrs
jno
push
or
push
xor
cmp
lret
das
in
mov
xor
adc
pop
lock
pop
les
loope
gs
xchg
or
sbb
add
imul
imul
rorl
popa
sbb
aam
cltd
jg
stos
xchg
pop
lret
arpl
cmpsb
cmp
or
out
push
subl
push
xchg
cwtl
pop
xor
add
test
ja
test
add
fildll
sbbl
adc
jbe
or
pusha
xchg
loopne
fisubl
in
dec
mov
into
mov
mov
addl
jbe
adc
push
xor
xor
and
daa
xor
into
push
xor
pop
cmc
psrld
mov
and
aad
jbe
push
mov
adc
dec
or
fisttpll
mov
leave
mov
push
mov
mov
jnp
xchg
push
test
inc
mov
jmp
lods
out
cwtl
aam
jne
add
pop
push
sub
rcr
jmp
ljmp
imul
cmp
test
mov
enter
test
divb
mov
ljmp
sti
popa
aam
mov
mov
sub
sub
mov
jmp
testb
sbb
mov
add
dec
aam
dec
sbb
inc
flds
xchg
xlat
ret
dec
cmp
fisttps
out
in
outsl
xchg
jbe
rclb
mov
test
lods
xlat
add
aam
ficoml
dec
mov
or
dec
or
mov
push
jmp
add
push
xor
mov
adc
push
add
nop
xorl
mov
fistps
pop
or
sbb
out
dec
outsl
jae
call
ja
inc
jg
js
push
mov
pop
sbb
sub
imul
jp
and
or
dec
adc
xchg
pop
cpuid
sub
cmp
gs
xchg
dec
fwait
jne
cmp
dec
andl
js
rcrb
or
mov
add
pop
cs
lret
or
jp
popf
scas
divb
arpl
inc
cmp
sub
adc
movsb
rol
lods
in
in
data16
add
jb
hlt
mov
mov
cmpsl
adc
dec
sub
cmp
shlb
cld
test
jb
sub
push
cmp
add
aad
in
test
pop
int
repz
rcr
dec
dec
jp
loop
lods
or
xor
cli
sbb
scas
xbegin
scas
mov
xlat
or
fisubrs
pop
dec
xor
add
xor
and
adc
push
dec
pop
sub
stc
pop
roll
mov
cld
in
les
mov
lret
cmp
mov
lds
popa
mov
out
mov
jmp
in
je
dec
inc
or
outsl
popf
lret
inc
pop
stc
cs
or
mov
cmp
push
sbb
adc
je
add
and
push
pop
sub
and
mov
cmpsl
push
or
imul
xor
xchg
test
lds
adc
fnstsw
cli
hlt
xlat
fstps
pop
mov
mov
xchg
rcl
nop
lcall
bound
or
mov
mov
mov
fsubl
divb
jl
nop
leave
adc
dec
pop
int3
add
pop
jge
or
jno
jmp
pushf
cs
or
push
sbb
jl
add
psrlw
adc
jl
mov
add
sbb
sub
or
cwtl
cmp
xchg
adc
test
jg
sub
lods
push
mov
cld
xorb
push
lahf
sti
ljmp
icebp
mov
add
addr16
jne
test
dec
call
add
in
icebp
xchg
sub
jp
loope
jp
mov
stos
repz
fidivl
shrb
push
pushf
aas
mov
popa
or
test
jb
cwtl
jno
out
mov
dec
flds
jecxz
dec
xor
adc
add
fwait
pushl
xor
ret
jmp
sub
cli
xchg
xlat
or
xor
add
sub
fcoms
cmp
mov
adc
jmp
dec
psubq
sarl
mov
sbb
imul
mov
cmpsb
add
jmp
jnp
imul
mov
filds
fcoms
mov
mov
popa
adc
clc
inc
sar
aas
mov
popa
fwait
sti
pop
dec
mov
cmp
adc
aas
jp
mov
push
or
in
loope
lds
jbe
dec
adc
mov
mov
sub
jmp
iret
imul
cmp
jns
scas
sub
adc
imul
fidivrs
daa
cmp
xchg
cli
pop
mov
and
mov
mov
cmp
cmpsb
xchg
mov
or
dec
stc
cmovae
movaps
dec
inc
and
xchg
clc
hlt
mov
stc
xor
xor
or
adc
scas
push
test
mov
mov
xchg
cli
xlat
mov
mov
sbb
inc
jle
in
int3
imul
leave
mov
rolb
cwtl
and
std
and
jl
or
mov
sub
jbe
xlat
cltd
notb
leave
and
frstor
mov
cmp
cmp
movsl
push
rolb
mov
mov
push
and
adc
cmp
mov
enter
orl
fldenv
sub
std
xor
ja
sub
andb
icebp
sub
insb
sahf
in
xlat
sub
outsl
xorb
adc
stc
cmc
testb
cld
push
xchg
sbbl
xlat
add
cmp
mov
int
xor
movsb
int
das
pop
test
popa
ds
jb
sbb
aaa
or
adc
push
add
addl
sahf
decb
mov
iret
jae
stos
push
sbb
inc
das
aam
xor
push
mov
add
out
stos
imul
mov
rcrb
mov
in
ret
or
and
sub
daa
aad
aad
mov
push
jae
xlat
dec
stos
fwait
sub
out
mov
xchg
les
cltd
add
scas
out
arpl
sub
xor
pushf
mov
sub
inc
inc
push
pop
ss
jmp
movsb
or
cmp
jle
popa
jmp
and
push
sbb
fwait
sub
push
jl
aad
mov
mov
jno
mov
fwait
push
mov
out
pushf
movsb
inc
mov
cmpsb
lret
andl
add
movsl
mov
leave
xchg
jmp
dec
push
mov
lahf
dec
loopne
mov
push
add
cmpsb
mov
pop
pop
mov
fcmovu
mov
pop
bound
out
adc
sbb
aaa
int3
sbb
fldt
jo
cmp
clc
js
add
jo
and
into
xchg
stos
push
or
hlt
ds
xlat
arpl
cmpsl
jmp
repnz
ja
or
ss
sub
cmc
add
scas
xor
xchg
arpl
sbb
cld
xchg
adcl
movsb
or
cld
adc
ret
pop
xor
imul
mov
xor
adc
and
xchg
and
adc
pop
xchg
adc
lods
andb
ljmp
jno
inc
hlt
push
cld
mov
test
call
aaa
sbb
jecxz
cltd
cmpsb
rcl
cmp
sbb
inc
insl
inc
xor
jge
imul
clc
cltd
jns
negb
lret
out
rcrl
jbe
lcall
sbb
pop
outsl
dec
mov
push
rcrb
fsubrs
test
xchg
idivl
shll
and
xor
add
andb
pop
sub
out
or
lea
jge
adc
push
cmp
adc
stos
incb
add
jmp
jo
fwait
mov
mov
outsb
sub
rep
in
in
rcll
cwtl
shl
outsl
loopne
aam
dec
jns
es
mov
xchg
pop
add
sub
test
adc
outsb
iret
mov
mov
xchg
je
sub
iret
push
ljmp
lea
ss
mov
js
imul
add
mov
cmp
inc
mov
jge
or
sub
add
push
call
fdivl
push
dec
dec
lods
push
sub
mov
xchg
lret
scas
lcall
dec
cmpsb
aas
int
push
add
mov
cltd
pop
push
inc
pop
mov
nop
xor
pusha
adcb
jle
aas
std
ja
fwait
mov
and
lret
pop
cmp
jbe
inc
outsb
or
cltd
sahf
in
xchg
cmp
cltd
inc
sbb
push
dec
ss
out
mov
cmpsl
fstl
std
icebp
xchg
in
cmc
mov
fdivrl
push
and
xchg
arpl
push
xor
adc
dec
push
or
cmc
dec
dec
add
rolb
xchg
push
xor
adc
int
or
pop
aaa
jbe
xchg
mov
adc
insl
lret
rcrb
pop
dec
mov
popa
xor
vpsubusb
sti
cs
out
loope
mov
mov
push
bound
cmp
dec
sub
roll
mov
mov
or
js
dec
bound
lods
popa
fistl
or
lahf
jne
add
insl
popf
xor
and
icebp
adcl
pop
mov
xchg
cld
adc
sbbb
add
push
nop
push
xor
loop
and
adc
lock
out
data16
fstpt
outsb
pop
and
je
jl
cltd
fidivl
and
mov
leave
scas
divl
adc
xchg
cmp
push
test
xor
sub
push
inc
int3
lret
mov
daa
leave
jae,pn
arpl
xchg
inc
mov
sub
insl
push
outsb
sbbl
jno
test
ret
inc
notb
inc
sahf
xchg
xor
inc
shrl
and
adc
mov
fisttpl
ja
nop
in
or
jle
inc
jmp
adc
or
ror
stos
inc
add
cmp
add
mov
das
repnz
arpl
and
jns
inc
inc
int3
sbb
rclb
dec
in
mov
jns
scas
int
xchg
mov
sbb
repnz
push
sarb
dec
xchg
clc
fs
das
movsl
jbe
or
dec
xchg
mov
sub
shlb
add
cmp
xor
xor
push
adc
cli
and
repnz
shrb
pop
sbb
insb
into
lahf
sub
cmpsl
push
mov
sub
into
dec
pop
xchg
lea
mov
mov
aad
adc
pop
loopne
ret
hlt
lock
test
repz
sub
test
leave
test
in
sti
push
mov
lahf
test
stos
xchg
sti
cmp
push
subl
mov
sub
stos
ljmp
in
nop
push
adcb
or
cmp
xor
test
sub
adc
push
jne
cwtl
pop
das
sub
aaa
xchg
mov
jne
test
xchg
mov
mov
sub
aad
pop
aam
insb
push
in
fs
in
add
cmp
add
jns
cmpps
sti
sub
pop
cltd
ljmp
jb
in
int
mov
jg
and
mov
fdivrp
stc
add
xchg
enter
rorl
lret
call
loop
add
mov
leave
mov
jno
in
push
jge
pop
lock
dec
push
clc
in
movsb
or
stos
push
stos
xor
aas
loopne
out
je
iret
adc
mov
cmp
fidivrl
out
jnp
cmp
jmp
jmp
div
jns
notb
adc
mov
jae
lcall
jbe
push
push
subl
es
dec
ds
mov
mov
out
cld
lret
xchg
mov
cmpsl
sysret
inc
jbe
in
and
mov
cmc
idivl
xchg
cmp
in
les
dec
es
xor
and
adc
loope
sub
mov
jae
cmpsb
out
movsl
jbe
je
cli
push
adc
ficoms
xor
mov
cmpsl
rol
add
inc
test
jecxz
cmp
or
sbb
mov
hlt
fcoms
xor
sbb
cmp
sti
add
jge
inc
sarb
ss
and
inc
push
lods
mov
leave
popa
repnz
aad
dec
cmpl
mov
adc
out
adc
xchg
jnp
sti
pushf
xor
mov
jnp
shrb
out
mov
lods
jbe
mov
clc
inc
mov
pop
cmp
xor
mov
idivb
mov
decl
pop
sbb
sbb
or
jecxz,pt
repz
or
jb
jmp
mov
rcrb
sbb
leave
mov
ja
cltd
fistpl
test
jle
push
xor
std
add
jp
stc
popf
leave
or
xchg
scas
out
push
jmp
fcomip
mov
stc
cmp
insl
and
sarb
adc
repz
push
mov
lret
sub
mov
mov
inc
and
adcl
mov
and
stos
or
in
in
jnp
clc
fcompl
cmp
pop
fnstsw
gs
xchg
lds
sub
xchg
xlat
gs
sub
mov
shr
nop
fistl
fimuls
test
sub
cs
jns
xchg
inc
stos
popf
pop
rclb
in
outsl
xchg
pop
inc
jae
imul
and
jno
push
sbb
adc
outsl
fidivs
pop
mov
push
jne
adc
sub
ret
lahf
rclb
fiadds
xor
add
inc
cmp
out
xor
sub
xchg
adc
ds
data16
adc
mov
fwait
inc
iret
sbb
sbb
dec
add
mov
or
mov
or
scas
dec
sbb
incl
insb
and
into
fdivrl
mov
mov
fcoms
mov
cmp
xchg
xchg
pop
in
mov
arpl
fcmovnbe
loopne
mov
arpl
pop
push
mov
sti
sub
pop
lods
loop
fildll
sbb
inc
stc
adc
inc
sti
sub
mov
sub
push
add
mov
pop
imul
or
or
shll
and
fidivl
mov
aad
sbb
jmp
cwtl
lods
sbb
push
mov
mov
push
or
xchg
dec
adc
fsub
sub
ljmp
fstpl
test
adc
add
out
loopne
ja
enter
lods
sbb
dec
std
xchg
cmp
sub
push
and
dec
adc
mov
in
jae
cmc
inc
mov
push
dec
int3
out
pop
sbb
arpl
or
divl
jl
dec
xchg
sbb
push
lret
jle
fnstenv
outsl
mov
rcl
popf
idivb
mov
std
add
cs
repz
stos
arpl
adc
stos
outsl
test
xchg
pop
mov
push
inc
shrl
pop
push
xchg
dec
insb
movsb
jb
js
sahf
cmc
adc
cmp
rolb
and
iret
and
xlat
aad
mov
pop
andb
sbb
mov
add
outsl
addr16
fdivp
mov
cmpsl
ljmp
inc
pop
and
shrl
addl
and
dec
mov
fildll
sbb
popf
inc
mov
sbb
push
aam
dec
pcmpgtb
je
pop
repnz
sbb
in
cmpb
push
lock
lret
jg
rcl
or
nop
mov
dec
jecxz
inc
sub
mov
into
mov
test
lods
and
mov
rcr
or
pop
aas
jne
push
lcall
addr16
gs
pop
xor
and
pusha
in
or
add
pushf
sbb
mov
stos
icebp
cwtl
pushf
sub
adc
mov
inc
sub
sbb
int3
cmpsb
cs
pop
pusha
mov
dec
push
into
add
sub
adc
popa
mov
adc
in
lcall
loope
mov
push
pop
push
sbb
pushl
imul
mov
jnp
add
xor
popl
jle
inc
and
jmp
xchg
test
sbb
dec
movsb
int3
mov
scas
xchg
icebp
out
clc
push
and
mov
jae
cmpsl
xchg
scas
arpl
roll
flds
ljmp
das
sti
dec
pushf
mov
adc
int3
pusha
out
mov
inc
cmpb
or
lods
lret
add
mov
push
push
outsb
stc
mov
xchg
out
aam
and
and
jnp
push
jle
sarb
sarb
jbe
mov
stc
push
adc
jl
jnp
push
les
dec
cmp
jle
xchg
lods
inc
sahf
push
shrl
mov
aas
sbb
out
fwait
cld
js
jl
je
dec
ss
insl
jp
dec
mov
add
sbb
jl
in
int3
stc
stos
mov
insl
leave
cmc
mov
mov
lea
xor
bnd
in
or
fwait
clc
push
sub
popa
mov
movsb
mov
or
dec
rolb
push
mov
lock
cmp
jmp
push
les
mov
pop
adc
mul
pop
je
lea
out
xchg
lds
bound
lds
fs
scas
fucomi
sub
loop
jns
popf
int3
xor
iret
mov
les
inc
add
std
jecxz
hlt
fcmovne
clc
xor
rolb
div
test
add
or
xchg
xchg
mov
xchg
adc
int
les
cmp
pusha
mov
lcall
pop
sahf
mov
cmp
cmpsb
je
repz
out
adc
dec
pop
cltd
add
sbb
rolw
inc
pop
fstl
pusha
mov
sbb
lods
xor
and
adc
sub
push
jmp
pop
mov
sbb
sub
fsubs
xchg
enter
testb
repz
xchg
push
mov
mov
loope
mov
xchg
cmp
iret
mov
test
xchg
mov
popa
cmp
xchg
or
adc
jbe
xlat
cs
xor
pushf
lea
xchg
push
icebp
lea
out
add
sub
cmp
mov
and
and
fdivrl
cwtl
fmuls
xchg
jl
testb
es
test
rolb
dec
inc
mov
dec
lahf
out
aas
faddl
jnp
inc
movsb
rorb
scas
testb
mov
pop
gs
pop
pop
ss
lret
std
push
lock
and
pop
addr16
mov
push
cli
fcomp
jmp
mov
push
jecxz
jnp
or
and
in
repnz
adcl
cwtl
add
xchg
pop
or
mov
lock
xchg
jb
pop
inc
xchg
cltd
add
rorl
into
jge
ret
cwtl
inc
scas
ds
push
ret
push
stos
mov
je
add
aas
scas
and
inc
xchg
xchg
cmpsb
loopne
fistpl
in
pop
lret
adc
mov
mov
aad
dec
push
sub
fsub
cmp
test
shrb
sub
xchg
dec
clc
pushf
loopne
mov
sub
shlb
pop
sub
aam
in
aam
push
and
ja
dec
jo
aaa
cs
or
xor
movsl
loope
push
clc
in
dec
adc
xchg
push
and
push
inc
push
pop
decl
popf
loope
andl
cli
int3
daa
push
or
cmp
shl
mov
and
pop
mov
dec
inc
test
pop
or
pop
shrb
sbb
bound
adcb
lahf
hlt
bound
bound
adc
mov
jmp
pop
shr
xchg
setnp
adc
call
add
jle
aam
aad
pusha
mov
and
xor
jmp
insb
movsl
jge
xchg
ljmp
cmp
jmp
or
nop
adc
mov
jecxz
lcall
pop
mov
pop
cwtl
inc
aas
mov
ficompl
fildl
push
sahf
enter
push
movsb
xchg
push
xlat
cmp
lret
pop
sub
cmp
movsb
dec
push
es
out
loop
sub
adc
cli
xchg
jne
adcb
jle
andb
pusha
fldt
mov
cmp
iret
imul
inc
push
sbb
push
xor
push
inc
mov
orl
mov
gs
sahf
and
and
add
mov
add
int3
cmc
add
jno
pop
push
mov
and
lock
loop
lea
ljmp
arpl
jbe
std
add
aas
and
mov
cli
sbb
dec
mov
pop
or
mov
lret
sbb
test
add
cli
pusha
rorl
jo
xor
inc
notl
cmpsl
fimull
lock
lret
dec
lods
dec
add
jecxz
inc
or
aaa
data16
scas
adc
int3
cwtl
repz
mov
xchg
xchg
shll
incl
xchg
xchg
dec
cmc
cmp
or
mov
je
mov
add
mov
push
insl
jne
aas
add
sub
subb
in
incl
pop
add
xor
divb
and
nop
adc
out
jecxz
mov
shlb
lock
pushw
cmpsb
xchg
loopne
pop
inc
or
nop
inc
arpl
adc
xor
jmp
and
testb
cld
fbld
push
lahf
jb
pop
lods
dec
scas
cmpsb
add
mov
out
cltd
xchg
clc
ds
nop
popa
stos
mov
pop
xchg
test
push
clc
rcrb
cltd
jbe
inc
imul
in
sub
mov
dec
ficomps
test
jns
mov
xor
xlat
dec
sub
adc
loop
jns
mov
pop
call
fisubrl
cmpsb
jns
arpl
clc
xor
enter
lret
and
in
push
xchg
pop
pop
js
fildl
aas
mov
adc
std
xchg
mov
add
cmp
and
loope
push
push
xor
stc
inc
dec
sbb
into
lds
ss
mov
sbb
out
arpl
insl
sub
cmpsb
clc
sbb
int3
outsb
shll
js
fstpt
pop
mov
lds
sahf
test
pusha
push
mov
sbb
mov
enter
lods
ret
fists
movsb
add
repnz
sbb
mov
and
adc
push
jnp
mov
mov
sbb
cmp
mov
pop
pop
call
movsb
and
aam
mov
scas
ljmp
test
mov
cmp
and
add
dec
lea
mov
jno
popa
inc
ja
loopne
nop
shl
and
scas
clc
cmp
ljmp
pop
mov
lds
rcl
lfs
inc
mov
into
push
jb
push
dec
pop
sub
ret
into
adc
cld
inc
pop
movsl
out
hlt
mov
or
xlat
das
push
outsl
fdivl
xchg
negl
stos
pop
imul
adc
jmp
ret
adc
jl
mov
mov
sbb
ss
push
cmp
int
jge
int
outsb
andb
ja
dec
xchg
inc
mov
push
pop
add
xchg
add
jns
outsl
daa
outsl
cli
sahf
xchg
jbe
repnz
loop
and
mov
out
in
shrb
pop
lds
movsl
pop
add
jle
or
cli
mov
pop
jno
stc
jge
inc
xchg
pop
into
outsb
or
jb
mov
and
dec
insl
in
dec
lea
je
arpl
jecxz
mov
shlb
push
mov
jne
push
jo
dec
cmp
cmp
lods
push
repz
push
xor
js
jnp
mov
or
push
mov
repnz
ds
dec
sbb
cli
dec
push
adc
lods
or
iret
dec
aam
testl
fistpll
mov
cmp
leave
dec
push
sub
pop
pop
out
les
outsb
mov
jbe
pop
stos
in
cld
dec
mov
icebp
in
out
jmp
cmpsb
bound
pop
jge
mov
cmpsl
or
dec
inc
jns
int
ss
cmp
cltd
sbb
cmp
fs
cmp
fcoml
stos
and
hlt
inc
mov
cmp
sub
ret
cmp
push
mov
mov
pop
pop
cmp
sub
lret
ret
cwtl
fadds
cmpsl
scas
inc
dec
mov
fmuls
shrb
and
or
or
fsubrs
out
dec
sub
inc
lods
jmp
pop
mov
sub
lcall
push
out
iret
sub
addr16
scas
sub
mov
bound
push
sbb
or
mov
xchg
jl
jecxz
adc
mov
pop
ss
add
leave
mov
mov
pop
sti
lock
mov
mov
aaa
dec
jno
pop
jmp
data16
gs
push
sub
popf
mov
je
xlat
and
xlat
aaa
mov
daa
inc
out
mov
lods
and
notb
sbb
sub
rcl
icebp
and
ljmp
push
out
mov
fnsave
push
outsb
out
outsl
sti
dec
je
inc
test
cmp
mov
xchg
bound
arpl
sub
push
lea
test
xor
or
jb
xor
sbb
xlat
in
addr16
sbb
mov
and
xor
add
pop
outsl
sub
data16
jp
loop
xchg
or
mov
cmp
paddusb
sbbb
outsb
pop
lahf
mul
xor
fs
pop
ficomps
mov
inc
lret
std
add
jmp
cmp
xchg
cld
xchg
xor
pop
jbe
imul
pop
mov
mov
or
or
push
arpl
xor
push
pusha
loopne
and
clc
fwait
push
int3
imul
push
push
add
and
push
xor
fsubrl
xor
jb
clc
or
nop
loopne
mov
shrl
ljmp
out
and
int
sbb
lcall
stos
mov
bnd
jns
stc
leave
sahf
and
pop
mov
or
sti
imul
imull
or
fsubs
sti
xor
cmp
in
test
dec
cmp
into
adc
push
stos
mov
push
js
mov
dec
xchg
add
fs
and
mov
popf
repnz
xor
je
cltd
in
sub
sub
dec
cmpl
mov
mov
test
mov
xchg
push
mov
push
iret
sbb
test
jo
and
sub
xor
push
repz
test
adc
push
mov
push
loope,pt
push
dec
mov
xchg
pop
pop
add
mov
cwtl
ljmp
adc
jne
fistpl
mov
or
sbb
and
enter
in
pop
ret
call
lret
inc
orl
popf
xchg
jmp
subb
sub
push
outsb
mov
addr16
stos
out
inc
xchg
mov
ret
andl
sub
cmp
push
fs
jp
pop
cmp
lret
xchg
mov
xor
mov
sub
mov
push
sub
test
xchg
pop
add
inc
or
push
stos
andb
mov
push
cmp
loope
out
cmpsb
add
and
push
mov
addl
adc
sbb
mov
dec
fwait
xlat
xchg
xchg
call
and
shlb
loop
cmc
mov
mov
cmpl
pop
andl
dec
lret
and
mov
pusha
jmp
add
lret
mov
xor
xchg
int3
das
leave
cltd
xor
stos
jge
jp
add
lods
stos
ret
pop
test
pop
pusha
pop
aad
jmp
aam
js
cmp
ss
cmp
std
sti
xchg
fistl
sti
mov
leave
mov
leave
lret
jmp
ss
or
ljmp
and
into
mov
scas
push
push
in
insl
ret
lea
call
loop
sbb
call
add
dec
xchg
aas
dec
pushf
test
xchg
mov
dec
test
hlt
and
mov
insb
jno
sbb
mov
and
int3
clc
rorb
fcompl
out
mov
dec
fcomip
push
shrl
mov
mov
test
inc
out
sbb
push
push
fucomp
std
aaa
jge
push
mov
std
aad
inc
in
gs
xchg
lock
les
or
daa
ss
in
aas
xchg
test
test
sbb
mov
jmp
mov
shrl
out
lcall
daa
lds
test
mov
aaa
stos
mov
jmp
push
sbb
cmp
mov
in
push
popf
xorb
jno
pusha
test
xchg
sarb
andb
stos
enter
or
mov
push
fyl2x
inc
push
dec
cmc
sub
xor
mov
test
test
push
adc
inc
in
dec
movsl
sbb
pop
lods
imul
test
cmp
xor
add
imul
mov
xor
out
dec
xchg
pop
mov
and
pusha
pushf
lds
stc
mov
and
jo
ret
xor
nop
ds
mov
push
xlat
test
mov
push
mov
xchg
fldcw
cmp
dec
xchg
add
adc
test
pusha
popf
movsb
jg
loope
xor
or
dec
xchg
test
enter
inc
je
xchg
dec
aad
pusha
push
fs
mov
mov
dec
xor
mov
push
repnz
lret
cmpsb
jo
mov
sbb
aam
repz
cmp
add
mov
cwtl
or
rcl
jbe
subl
pop
test
daa
outsb
adc
xchg
sub
push
or
pop
cmp
push
ror
xorb
adc
adc
cmp
imul
test
sbb
sub
fcompl
mov
xchg
nop
scas
gs
lret
adc
jmp
out
jno
adc
loope
mov
dec
es
jb
arpl
call
lock
das
fwait
xor
popf
dec
adc
loopne
flds
pop
and
or
imul
std
inc
cwtl
mov
into
shl
pop
mulb
jg
xor
int3
out
stc
dec
dec
pop
sbb
ja
lret
mov
fildl
pusha
fldcw
sbb
lock
inc
loopne
subl
mov
cltd
sub
movsl
mov
scas
cld
lods
push
hlt
jge
mov
mov
gs
int
test
xchg
push
adc
movsb
push
push
movl
jne
add
push
cmp
and
or
aas
outsl
jmp
aaa
xchg
andb
jmp
xor
push
adc
sbb
inc
push
lret
out
sub
outsl
aaa
pop
mov
les
shr
outsl
inc
fcomps
in
lds
xor
cmp
push
inc
iret
xor
jle
and
jp
push
or
lea
sbb
das
rclb
pop
mov
xor
mov
loop
aaa
jge
push
xchg
add
lock
fs
stos
scas
adc
jnp
es
push
pop
ret
sub
out
jg
adc
lcall
hlt
mov
jecxz
xor
lahf
ficoms
sub
clc
test
pop
xor
call
imull
jnp
and
xchg
sti
cmp
and
dec
pop
fpatan
push
sbb
loope
cmpl
jne
sbb
repz
shrl
daa
in
and
mov
pop
or
lods
stos
jecxz
and
jl
arpl
aas
adc
pop
dec
pop
xchg
cmc
sahf
aam
shrl
push
fiadds
clc
loop
das
mov
vmovaps
in
icebp
movsl
dec
sahf
inc
mov
xor
out
mov
int3
or
pop
xlat
clc
scas
push
ljmp
lret
or
push
fnstenv
nop
pop
sub
filds
mov
jmp
push
cltd
xor
outsl
adc
iret
shl
or
xlat
mov
mov
pop
shll
xchg
jne
lds
push
je
push
ds
jp
and
lock
popf
ret
jp
jecxz
movsb
sti
sbbb
xor
mov
xchg
in
xchg
xchg
mov
scas
add
rolb
lcall
push
push
dec
popa
daa
call
adc
shrb
mov
lcall
lock
xchg
push
dec
lods
push
sub
xchg
roll
sub
or
push
xchg
scas
dec
iret
mov
rcrb
lods
jnp
inc
pop
popl
loop
and
or
loope
adc
bound
mov
mov
pop
shl
loope
push
stc
les
inc
fwait
leave
push
aas
cltd
jne
pop
dec
arpl
sbb
pop
push
jg
jo
hlt
rcrb
pop
mov
test
imul
lock
lea
mov
addl
pusha
lret
xlat
cmp
jo
clc
cmp
in
jo
mov
hlt
xor
ljmp
andb
test
fstps
shll
add
push
xchg
stc
jmp
mov
movsb
push
jbe
or
push
sbb
dec
adc
mov
sub
sub
clc
test
call
fwait
sbb
test
mov
test
mov
add
sub
loope
push
loop
imul
xlat
pop
rorl
out
push
aad
loopne
cmp
dec
fists
xchg
xchg
and
push
ljmp
shrb
push
fnstsw
insl
test
insl
pushf
push
imul
mov
lcall
arpl
push
jl
adc
sarl
sbb
xor
sbbb
lret
imul
jg
ds
add
pop
or
fwait
mov
call
cmp
std
xlat
pop
mov
cltd
out
clc
and
and
push
mov
and
dec
je
add
testb
or
enter
xor
xor
jle
xchg
scas
jmp
sbb
rcrl
mov
lcall
insb
jle
stos
push
or
addl
loop
rol
sahf
les
xchg
push
inc
and
repz
jo
lahf
cmp
mov
cli
xor
mov
aas
pop
mov
outsl
jae
seta
pop
pushf
mov
mov
add
lret
push
or
sbb
mov
push
outsb
jnp
push
fidivrl
out
jge
int3
repnz
xchg
xchg
fcoms
sti
das
in
lods
repz
pop
cli
int3
jle
lret
adcb
repz
mov
sbb
mov
adcl
cmp
push
dec
jp
mov
pop
fwait
das
xchg
scas
pushf
call
inc
mov
out
xorb
int
cli
add
imul
xchg
and
js
lods
leave
xchg
xchg
ret
out
dec
mov
popf
inc
jle
sub
mov
dec
rolb
aad
add
stos
jbe
and
mov
nop
adc
add
dec
ss
mov
clc
loop
push
int3
and
adc
in
repnz
ret
movsl
sub
and
icebp
mov
and
mov
mov
bound
cmp
mov
rcrb
rorl
push
stc
nop
xor
pop
cmp
xchg
xchg
push
sub
int3
jne
inc
pushl
es
dec
leave
and
sub
and
adc
imull
add
push
cmpsl
sub
fwait
sbb
dec
outsl
or
push
jle
add
xchg
sbb
jbe
fmulp
fwait
stc
pop
jmp
int3
add
inc
push
in
lods
add
push
mov
ds
shlb
cwtl
fs
stos
jg
adc
movsl
mov
jg
pop
ljmp
mov
hlt
shlb
ret
jns
outsb
push
or
fisttpl
popf
rolb
mov
push
or
fwait
std
je
lods
je
fldt
inc
add
pop
cmpl
inc
outsl
jb
cmp
sbb
leave
mov
pop
movsb
add
sbb
push
test
cmpsl
fwait
mov
dec
call
cmp
pop
das
xor
sbb
sbb
inc
testb
shlb
idiv
jae
mov
add
mov
pop
mov
arpl
shrb
stos
pop
dec
dec
rcrl
shl
repnz
sub
lock
mov
std
push
inc
jecxz
pop
mov
fwait
mov
mov
shr
stc
pop
dec
pop
sub
shrw
jge
movsl
aas
jae
mov
enter
sti
jl
int3
je
sbb
or
das
insb
popf
gs
and
pop
fisubs
scas
jno
mov
and
add
lret
mov
xlat
jle
mov
cmpsb
repz
cltd
xor
rcll
fmuls
ss
adc
sub
mov
stos
push
jb
mov
or
fcmovbe
shl
adc
int
movsl
cmp
in
xchg
movsb
inc
sub
or
inc
push
dec
add
jecxz
xchg
lret
xchg
adc
sbb
mov
adc
dec
cmp
jae
cld
dec
xlat
or
mov
insl
xchg
dec
dec
mov
mov
repz
xlat
fidivs
push
or
pop
sub
jmp
jg
add
push
push
divl
loopne
ja
add
in
mov
sub
mov
xchg
test
cli
xchg
call
and
lret
call
iret
sbb
push
mov
stos
iret
rcll
stos
jae
xchg
loope
dec
test
fs
je
popf
iret
pop
call
sub
mov
mov
push
in
inc
and
and
push
aad
push
xlat
sub
popf
push
mov
mov
int
cmp
or
and
adcl
jl
mov
inc
fstpl
sub
movsb
out
frstpm(287
pop
jo
outsl
test
or
jle
inc
add
mov
notl
aaa
push
clc
pop
sub
stos
sub
push
fwait
dec
ss
js
pusha
mov
inc
int3
push
xchg
ficoml
leave
pop
ja
xchg
jns
sbb
movsb
cltd
sahf
scas
cmp
add
pop
add
rorb
idiv
int3
cmp
rorl
mov
cs
xchg
les
add
outsb
shrb
or
icebp
test
dec
push
mov
or
mov
push
push
sub
int
or
orl
stc
push
shr
jl
icebp
scas
cmp
outsb
daa
adc
lods
lods
gs
out
shlb
dec
inc
push
adc
xor
imul
mov
inc
or
outsl
popf
in
das
sbb
adc
sub
xchg
sbb
mov
jno
mov
lock
mov
or
jge
sti
in
push
mov
sbb
scas
cmp
clc
mov
call
mov
sti
in
sub
jnp
mov
rorb
xchg
int
fisubs
mov
push
jecxz
test
push
fwait
js
insb
ja
outsb
jno
arpl
and
pop
sub
or
movl
popf
lret
jge
fistps
stos
aaa
or
adc
lret
rclb
xor
fwait
dec
fisubs
xor
xor
ret
imul
jne
push
dec
dec
or
push
mov
insb
js,pt
enter
xor
xor
or
daa
insl
ja
xor
scas
out
repz
jnp
xchg
add
add
or
add
and
add
add
mov
and
or
add
and
add
add
and
add
or
push
arpl
dec
cmpsl
inc
adc
mov
add
inc
xor
and
aas
mov
imul
lea
cmc
imull
and
popa
inc
insl
cld
pop
push
subb
pmulhuw
scas
inc
out
sub
mov
or
movsb
and
in
mov
fstpl
sub
ret
notb
inc
add
fimuls
je
sub
xchg
lret
popf
mov
sahf
je
call
jg
fcoml
sbb
arpl
push
jmp
and
out
addr16
push
or
mov
adc
jl
leave
push
scas
ret
or
cmpl
lds
add
jne
and
ret
xor
ljmp
negb
inc
mov
dec
mov
ss
inc
sahf
lcall
frstor
gs
cmp
jb
push
sbb
stc
or
loop
test
mov
dec
pop
push
ljmp
xchg
stc
lea
std
shrl
push
cmpb
sub
inc
pop
fwait
into
push
imul
xchg
inc
mov
loop
jnp
mov
call
mov
inc
lahf
stos
xchg
pop
xchg
insl
clc
cmpl
mov
pop
mov
push
jmp
or
mov
stos
cmp
inc
lcall
and
dec
sbb
mov
fs
sbb
daa
jp
sub
adc
adc
jmp
enter
jg
xor
dec
xor
cmpsb
clc
loopne
lds
jmp
loope
jmp
jmp
lret
and
jnp
test
ja
cmp
xchg
stos
imul
xchg
cld
arpl
push
sti
test
daa
mov
and
xor
adc
adc
mov
adc
imul
movsl
out
mov
add
test
inc
adc
mov
clc
les
xor
mov
aaa
xor
adc
sub
lea
lcall
out
jns
lcall
mov
xorl
sarl
add
into
jge
mov
add
fs
mov
adc
push
dec
dec
out
mov
mov
outsb
lret
xchg
pop
jae
mov
fwait
push
fcoml
dec
xchg
cmpsb
ljmp
and
pop
movsb
movsl
out
add
add
push
testb
adcl
inc
ds
cmp
sbb
inc
add
cmp
inc
add
pop
cmpsb
js
ljmp
push
cmp
sbb
es
pop
xor
negl
mov
test
cmp
inc
in
les
dec
push
shlb
repnz
jl
inc
mov
push
fldt
mov
loopne
adc
xchg
insl
rorb
incb
mov
mov
sbb
jg
cmp
enter
sti
fidivrl
fsubs
mov
mov
dec
cvtps2pi
in
xchg
popa
xor
popf
sbb
mov
nop
jl
cld
sbbl
js
nop
mov
jbe
lods
popf
pop
pop
adc
mov
jg
cmp
add
leave
lcall
in
dec
iret
push
cmp
jbe
jmp
push
jg
int3
mov
mov
fs
sbb
or
mov
dec
mov
ret
inc
mov
clc
out
and
das
mov
adc
xchg
ret
cmc
loopne
arpl
push
lcall
xor
fld
ret
xor
mov
mov
dec
or
out
or
testb
xor
test
push
xchg
dec
sub
cld
jl
or
adc
sub
jae
jmp
pop
add
repnz
bsr
mov
cmp
add
inc
rcrb
outsb
movsb
lock
sbb
mov
or
jmp
dec
sbb
or
out
push
fildll
fstpl
and
sbb
ja
movsb
adc
xchg
lock
mov
outsb
and
mov
and
pop
aam
fcomps
stc
dec
inc
sbb
pop
pop
enter
sbb
xchg
add
insl
inc
aad
imul
fists
lods
push
or
scas
xchg
push
ljmp
shlb
pushf
or
mov
xor
xor
std
cltd
xchg
adc
aaa
bound
ficomps
push
sbb
xchg
jge
insb
mov
mov
hlt
idivb
fdivl
call
into
rcl
les
jecxz
mov
xor
loop
lods
iret
repz
mov
xor
cmp
fnstenv
dec
cli
ror
sub
lds
push
mov
cmp
into
adc
mov
mov
adc
loopne
iret
orl
dec
add
mov
sbb
jp
mov
adc
pop
adc
lcall
dec
adc
pop
cmc
fsts
pop
mov
jne
push
dec
cmp
inc
and
jmp
das
mov
cmp
fldenv
push
jecxz
xchg
std
dec
gs
int3
ds
xchg
mov
and
push
lea
fcomip
rcr
cmp
stos
lret
scas
sub
in
insl
rcl
cmpsl
jae
sbb
mov
mov
xor
or
jnp
or
sti
dec
jle
mov
dec
cmp
aaa
sbb
dec
cld
in
pushf
jmp
add
int3
into
int3
test
lods
test
nop
jbe
les
adc
test
data16
les
pop
mov
jmp
pushf
loopne
add
xchg
out
fsubl
mov
adc
jns
xchg
push
jl
mov
fldt
pusha
mov
ss
xor
mov
adc
idivb
or
push
call
mov
pop
pop
cmc
push
and
ret
pmullw
pop
mov
xchg
lret
mov
rorb
push
mov
and
or
cmp
adc
jns
jne
scas
jecxz
sbb
sub
mov
daa
imul
cmpsb
loopne
iret
jne
in
lahf
cwtl
out
or
fwait
xchg
and
sbb
and
leave
paddusw
imul
scas
xchg
cmp
or
pmuludq
shlb
and
inc
inc
jecxz
mov
loopne
fmul
movsb
dec
jge
les
loopne
lock
inc
xor
sahf
pop
je
mov
orl
xchg
fistps
push
sub
rolb
loopne
cmp
mov
or
iret
adc
sbb
or
pop
pop
mov
dec
inc
push
cmpsl
iret
dec
mov
fisubs
dec
pop
mov
pop
cmp
dec
jne
stos
cmpsl
pop
cltd
repnz
xchg
xor
xchg
jge
adc
fistl
psllw
in
pop
dec
cli
gs
mov
cmp
or
pushf
sbb
inc
test
or
add
popf
push
std
adc
mov
je
jnp
sbb
sub
fstl
nop
in
inc
fnsave
mov
call
xchg
mov
mov
shl
dec
sbb
push
jmp
jmp
jnp
testb
call
mov
lcall
jecxz
je
pop
and
jle
test
pop
push
and
cmp
ljmp
outsb
jbe
sub
xor
in
mov
sub
leave
out
push
mov
or
outsl
jns
push
loop
jl
decl
insl
add
cmp
mov
mov
mov
sbbb
inc
decl
ss
fisttpll
imul
sti
nop
adc
xor
mov
jbe
mov
pop
rolb
sub
lahf
test
jo
pop
lds
adc
inc
add
dec
insl
mov
movsb
and
xchg
popa
xchg
insb
test
popa
cmp
jne
add
stos
pop
push
lcall
inc
frstor
xor
stos
test
mov
lahf
imul
inc
imul
mov
sub
in
addr16
cmc
aad
arpl
adc
fdivrs
sub
mov
and
leave
dec
data16
add
outsl
cmp
mov
stos
shl
pop
xor
add
setb
pusha
pushf
jae
sbb
mov
les
daa
mov
icebp
adc
xchg
push
cmpsb
and
cmp
dec
outsb
add
dec
push
xor
push
push
fcoml
dec
push
mov
cli
mov
leave
dec
push
outsl
faddp
in
mull
les
cmc
cmpsb
dec
add
or
cmpsb
ja
jmp
inc
sub
sbb
dec
stos
sub
gs
jle
sbb
jle
loope
xchg
movsl
cmp
adc
mov
add
rol
cmpsb
and
leave
loop
cs
imul
push
js
addr16
and
or
and
mov
out
cmc
les
mov
scas
add
mov
cltd
arpl
enter
mov
addl
out
mov
sbb
xchg
fdivrl
add
lods
sbb
imulb
or
rol
mov
inc
cmpsb
mov
mov
mov
mov
repz
sub
add
adc
adc
and
scas
sub
pop
mov
sub
addl
aad
into
lods
leave
push
jns
and
adc
mov
pop
add
cmp
insb
fidivrl
mov
push
pop
cmp
insl
fmul
jmp
xchg
lcall
iret
aam
cmp
mov
xchg
adc
mov
mov
xchg
xor
xor
mov
add
fs
ret
in
jno
aas
ss
ret
push
mov
icebp
mov
sbb
cwtl
jmp
adc
lcall
sub
mov
in
jle
jno
xor
adcl
shll
sub
dec
fimuls
cmc
lcall
jge
cmp
cmp
push
int
jno
scas
or
fbstp
or
xchg
pop
je
jl
stos
dec
int3
aaa
dec
mov
xchg
xlat
test
insb
fildl
and
dec
add
or
jmp
nopl
cld
adc
jne
mov
loopne
leave
add
or
mov
pop
out
jno
xchg
shlb
out
fs
out
mov
pop
std
and
in
xchg
push
or
dec
idivl
sub
in
out
in
jo
push
hlt
aas
xchg
lcall
lcall
fldl
popa
jg
repnz
test
and
xchg
icebp
mov
mov
mov
insl
cmpsb
add
rcrl
push
push
das
pop
sbb
imul
test
sub
xchg
push
dec
bound
shrl
mov
push
stos
sbb
sahf
sub
mov
ja
movsl
inc
cltd
sbb
jns
int
clc
cmp
lock
mov
stos
cmc
inc
pop
in
fistpl
sbb
insb
or
ds
pop
mov
sbb
sub
bswap
sbbl
aam
leave
or
sbb
mov
dec
int
fisubrs
add
int3
jno
cmpsl
test
inc
jp
insb
jnp
cmp
jmp
ja
outsl
pop
dec
ljmp
cwtl
lods
pop
jecxz
aas
divb
pushf
sbb
or
jl
sti
jle
mov
xchg
jge
popf
in
pop
divb
cwtl
mov
fwait
sub
push
int3
push
fs
lds
sbb
pop
ret
out
les
dec
sub
push
sbb
xchg
lods
mov
inc
rcrb
add
jns
mov
iret
mov
jmp
popa
shr
fiaddl
js
xchg
adc
xlat
xor
out
fsubp
outsl
js
push
out
add
xchg
fwait
adc
mov
fnstsw
lahf
lock
int3
sub
adc
push
dec
jbe
xor
adc
mov
rcll
outsb
jp
loope
jp
adc
mov
shlb
mov
jmp
jmp
jecxz
push
pop
cmp
add
lret
int
cli
lods
sbbb
lods
imul
popa
pop
out
out
andb
push
sub
jg
xchg
push
hlt
outsl
cwtl
test
cmpsl
imul
push
add
icebp
fisttpll
dec
int
jno
xor
int3
insl
jl
ss
mov
scas
mov
xchg
sub
movl
pop
or
cwtl
mov
xor
inc
pop
inc
shrb
loope
and
mov
data16
rcrb
mov
sub
orb
mov
aas
insb
push
cmp
push
cmc
cmp
sbb
mov
sbb
aad
inc
shll
push
out
test
roll
mov
cwtl
xbegin
xchg
push
sub
cmpsb
lcall
pop
out
int
mov
pop
test
popf
jmp
test
push
push
mov
push
push
dec
sub
rorl
hlt
xchg
into
shl
fisubl
mov
sbbb
xor
mov
cmpsl
cld
imul
sahf
sub
inc
or
mov
xor
or
cmp
fisubl
cwtl
mov
and
outsb
adc
mov
pop
repnz
push
fsts
push
arpl
into
movsl
pop
jmp
xchg
movl
imul
rclb
scas
and
mov
mov
mulb
in
pop
mov
jg
into
cltd
push
clc
mov
and
test
inc
adc
mov
xchg
cmp
push
xlat
and
loope
cs
mov
mov
cmp
stc
mov
pop
push
and
push
jns
mov
and
ret
nop
mov
sub
push
or
cli
push
jnp
outsb
ss
ss
lret
movsl
adc
js
xor
jg
mov
push
mov
rclb
xor
push
dec
mov
inc
ret
xor
sahf
mov
adc
mov
jg
jnp
xchg
push
sub
in
push
mov
shrb
xorl
push
adc
xchg
xlat
stc
sbb
dec
sti
cmp
dec
mov
out
cmp
dec
push
xchg
ja
and
sbb
mov
xor
jae
push
push
mov
outsl
xor
fwait
add
out
cmp
inc
adc
dec
out
jb
std
rcr
je
xchg
enter
sbb
xor
movsl
bound
mov
jmp
mov
inc
sub
and
add
test
jl
ret
jns
les
inc
notb
popf
popw
cmc
movsb
and
mov
sub
push
jl
jno
ret
cmp
aas
ret
imul
mov
arpl
jge
aam
lahf
mov
pop
aas
pop
iret
in
jp
cmp
add
adc
fimull
and
and
sbb
je
hlt
scas
sbb
les
fdiv
test
mov
jns
test
notb
movl
xchg
cmp
shr
ret
loope
addr16
mov
cmp
mov
call
and
in
cmpsl
cmp
mov
or
fiaddl
mov
mov
lods
jge
add
xchg
and
cwtl
sbb
pop
and
outsb
push
inc
and
mov
cld
cmc
lods
mov
inc
xor
mov
fiadds
mov
pop
orl
sub
jecxz
hlt
fcoml
addb
xor
cmova
pop
icebp
lcall
rclb
out
ret
fisubl
xor
mov
pop
jg
mov
xor
ret
repz
lret
hlt
cmc
dec
pop
dec
mov
xor
and
sbb
movb
pop
js
jno
jne
das
in
dec
les
test
cld
popa
cmc
jecxz
in
xor
add
dec
repz
pop
sub
push
mov
rorb
cwtl
nop
fwait
lock
mov
sti
fmulp
iret
aaa
dec
pop
ss
mov
cmp
les
xchg
jge
insl
pop
gs
in
jge
clc
ret
add
andb
pop
imul
aam
sub
cld
hlt
filds
das
pop
xchg
adc
inc
js
xchg
add
movsl
pop
jns
push
test
or
add
push
stos
lods
rclb
shrl
mov
in
sbb
ficomps
insb
dec
out
repnz
lea
adc
ret
sahf
inc
in
mov
lods
or
jmp
mov
push
add
xchg
mov
call
je
movsb
or
pop
rorl
je
rcrl
sbb
subb
adc
sub
jb
inc
and
sbb
filds
adc
fdivrs
es
mov
inc
dec
imul
mov
mov
ss
inc
out
repnz
mov
enter
push
or
or
mov
jle
add
cmpb
dec
in
faddp
loopne
into
sbb
mov
sahf
and
pop
enter
mov
push
pop
jecxz
dec
add
and
mov
pop
sbb
cmpsb
mov
test
shl
jno
cmp
push
jno
aas
nop
shrb
pop
test
push
sbb
jae
mov
inc
jmp
lahf
lret
mov
pop
sub
popf
imull
mov
xlat
dec
mov
cld
mov
push
or
and
adc
xor
shl
loope
push
loop
adc
sbb
fldenv
and
mov
insb
mov
push
rcrl
insl
xor
add
sarb
insl
push
pop
sub
fucomip
xor
mov
sbb
shl
or
jns
pop
push
mov
ljmp
or
mov
and
clc
mov
int
fwait
repnz
dec
add
test
aam
add
pop
add
popa
les
jle
insb
and
inc
dec
das
fsubp
cmpsl
pop
and
into
pop
popa
dec
in
mov
cmp
push
dec
stos
mov
enter
cwtl
fdivl
enter
sub
jbe
stos
add
cwtl
sub
lods
cmp
ja
int3
iret
arpl
in
pop
outsl
fisttps
push
sbb
icebp
or
add
jns
cmp
jb
pop
jl
jb
rcrb
add
adc
mov
or
cmp
out
inc
xchg
into
inc
add
aaa
popa
aad
lcall
xlat
jmp
add
add
jns
popa
fildll
clc
mov
jl
cmp
xchg
fsts
inc
sahf
cmpsb
cwtl
cmpsl
es
dec
pusha
inc
adcl
push
jg
pop
push
add
cmpsl
sahf
add
imul
orb
in
sarl
scas
shrb
les
lcall
rcll
mov
sub
lea
stos
jno
xor
fidivl
rclb
out
fisubs
push
add
adcl
jns
pop
pop
cmpsl
push
movb
test
je
xchg
fistpl
sti
je
std
cmc
push
pop
xor
stc
jmp
fadd
lods
mov
es
sub
or
mov
pop
test
fnsave
out
js
push
sbb
imul
popf
lcall
pop
stc
pop
movsb
popa
dec
insb
mov
in
cmp
ffreep
sub
test
inc
and
mov
ljmp
das
subl
dec
xor
mov
push
jg
mov
or
cwtl
mov
ds
xor
iret
dec
cwtl
xchg
or
test
ja
mov
mov
push
mov
cli
dec
call
sub
adc
jo
xor
inc
xor
cmp
fneni(8087
movsb
mov
or
add
mov
ja
icebp
push
push
fdivrl
and
call
out
add
xchg
ds
inc
repnz
test
pop
xchg
enter
push
mov
add
pop
rcll
divl
in
or
cld
jp
pop
xchg
jle
ret
jo
leave
addr16
push
pop
shr
aaa
aad
enter
sbb
mov
cmp
mov
leave
pusha
lret
pop
aaa
popf
push
loop
push
ret
jp
nop
mov
in
sbb
cmp
insb
push
lret
iret
and
ret
xchg
jle
fs
out
out
and
arpl
loope
cmc
mov
imulb
sub
fwait
jne
test
pop
inc
pushl
cli
mov
jp
stos
fistl
push
ret
jecxz
ss
stos
in
mov
ret
xchg
daa
sbb
or
es
sbb
pop
addb
andl
or
enter
push
lods
mov
push
cli
or
xor
out
out
sub
lea
insl
push
mov
cmpsl
dec
push
or
test
stos
adc
dec
mov
cmpsl
rcl
mov
out
lock
cmp
in
loope
sub
inc
repnz
cmpsl
push
mov
sub
cmp
mov
sub
push
mov
xchg
cmp
mulb
fistps
dec
pop
pop
pop
adc
sbb
pop
movsl
ret
test
inc
jo
clc
out
xor
mov
dec
sahf
movsl
sub
movsl
dec
stos
pop
jge
or
fdivrl
mov
aas
insl
movsb
lret
jle
adc
rcrl
dec
mov
sahf
leave
mov
call
fimuls
mov
sub
xchg
or
shlb
orl
hlt
cld
jae
hlt
xor
jle
jnp
cltd
imul
sub
ds
icebp
inc
daa
jge
dec
sub
iret
stos
jbe
mov
stos
fnstenv
lret
loope
sub
rclb
fisttps
scas
aam
cld
addr16
sbb
lret
jae
fptan
mov
cmp
dec
mov
mov
jo
and
push
cmp
sbb
sbb
xchg
adc
test
mov
and
xlat
lret
and
imul
xchg
xor
cmp
roll
push
sub
pop
loope,pt
push
mov
ret
push
xor
or
push
je
cmp
adc
xchg
dec
mov
nop
and
cltd
sahf
hlt
xor
add
mov
lret
pushf
jle
fwait
sbb
cmp
rcrb
dec
xchg
mov
aas
and
inc
ss
and
add
mov
xchg
out
xor
sbb
sbb
movsb
cld
pop
push
and
and
or
shl
fnsave
adc
mov
pop
in
arpl
sub
daa
cmp
inc
and
daa
dec
je
add
add
loop
mov
mov
xchg
loope
lods
je
cmp
inc
xchg
pusha
add
sti
inc
lock
addr16
outsl
dec
test
movsb
xchg
inc
xchg
stc
push
dec
pop
les
sbb
xchg
cld
dec
aad
cltd
outsb
lods
xchg
dec
sti
push
outsl
shlb
repz
sbb
movl
cltd
call
dec
jecxz
in
out
xchg
stos
mov
stos
push
aad
or
mov
mov
bound
xor
loope
flds
cs
ss
and
and
inc
iret
mov
xchg
lods
into
mov
push
jbe
pop
ds
cmp
stc
pop
push
lds
lahf
xchg
or
xchg
sub
bnd
test
cmp
in
in
inc
pop
out
jo
jge
hlt
test
add
cmc
mov
push
push
add
sbb
add
bnd
rcr
jle
outsl
pop
bound
loopne
xchg
jo
out
or
test
mov
int3
testb
or
sub
mov
stc
in
or
mov
jb
add
jl
push
addr16
pop
or
daa
pusha
mov
leave
in
cltd
bound
roll
jo
gs
dec
sub
ljmp
jg
xor
scas
sbb
in
push
add
jg
inc
fdivr
inc
ds
cmp
into
pop
lret
adc
inc
xchg
sahf
add
scas
adc
in
cmp
mov
sti
test
dec
cmpsb
jns
and
xor
xchg
or
xchg
outsb
add
int3
lahf
xchg
sub
test
xor
xor
adc
or
adc
fwait
mov
aas
mov
push
xor
test
pop
in
cmp
mov
aam
outsl
xchg
mov
adc
and
inc
or
add
cmp
mov
push
xchg
inc
pop
jl
int
push
insb
aas
imul
test
mov
pop
and
push
jle
negb
jne
jg
sub
mov
test
and
inc
lods
push
leave
mov
and
jle
push
test
adc
lds
fidivrl
outsl
sub
ds
cs
mov
mov
cmc
push
mov
subb
push
xchg
pushf
or
mov
push
fiadds
mov
insb
or
pusha
test
aas
arpl
adc
daa
jns
aas
sahf
xorb
mov
int3
mov
sub
inc
ret
rcr
dec
cwtl
lahf
jo
jnp
push
rorb
jle
ss
push
mov
sbb
xchg
inc
arpl
test
add
ficoms
shrl
call
mov
fs
jg
mov
mov
lods
enter
cmp
pushf
cmpsb
mov
and
or
adc
adc
ljmp
fstl
test
sarl
pusha
cs
sub
adc
mov
or
ret
stos
popa
shlb
arpl
iret
rol
xchg
cmp
add
movsl
mov
add
insl
aas
ljmp
scas
mov
or
aam
pop
adc
addr16
clc
cs
add
and
in
pusha
sahf
xchg
cmp
mov
js
adc
sahf
jno
add
insb
leave
aam
mov
mov
dec
jle
jecxz
mov
cmp
cmp
dec
loop
push
mov
push
xor
ffreep
in
mov
sub
fildll
pusha
dec
mov
cmp
push
mov
or
or
test
mov
mov
cmp
sub
arpl
lret
je
mov
mov
pop
aas
mov
push
lods
faddl
push
test
mov
sbb
jo
scas
inc
mov
sbb
mov
mov
push
xchg
jecxz
xor
fucomi
imul
jecxz
mov
ud1
xlat
sti
pop
lds
pusha
mov
addb
stc
push
mov
outsb
add
mov
xchg
test
fmuls
mov
outsl
xchg
jb
fildll
xchg
test
lock
push
sub
push
sbbb
cs
nop
imul
xor
in
fucomi
sarl
or
lods
hlt
pop
out
jb
mov
sti
jg
cwtl
mov
and
adc
xchg
outsb
inc
push
gs
movsl
cltd
data16
push
out
mov
xchg
mov
push
cltd
ss
bound
xchg
fistpll
rorb
dec
cmp
sbb
pop
roll
cltd
xor
into
loopne
add
mov
aam
cmc
test
sbb
xor
push
stos
out
insl
cmp
cld
pop
out
sbb
mov
fcom
mov
sahf
inc
xchg
add
cmc
lods
jecxz
fcmovnu
shll
loope
dec
jecxz
mov
add
out
jae
faddp
sbb
fwait
pop
push
test
repz
cmp
inc
pop
mov
add
arpl
movsb
xor
cmp
mov
jno
jecxz
or
shrl
in
dec
out
jns
xlat
cmpl
pop
lcall
out
in
sbb
rol
rcrl
xor
sbb
addr16
out
jg
jmp
push
push
jns
jne
sbb
xchg
test
dec
lds
xchg
mov
stc
mov
or
jnp
imul
pusha
cld
xchg
mov
fwait
adc
lret
popf
inc
lret
inc
push
stos
dec
lea
je
lahf
xchg
mov
testb
jmp
mov
fucomi
insl
test
cltd
rcrl
popa
adc
xor
lcall
adc
add
jecxz
addr16
mov
push
sahf
in
sub
insb
pop
sbb
or
enter
inc
shlb
push
inc
push
inc
lret
pop
out
dec
jmp
mov
sub
push
das
aas
adc
scas
fidivrl
cmp
push
and
in
push
ljmp
mov
movsb
mov
mov
movsl
ljmp
mov
insb
push
fstps
inc
and
push
jmp
cmpsl
or
insl
or
adc
or
imul
mov
cmp
sub
pushl
and
mov
jp
sti
mov
push
and
jle
xor
adc
xchg
lods
inc
loop
and
dec
sbb
adc
push
outsb
inc
mov
sbb
sbb
push
cltd
cmp
daa
mov
sub
pop
mov
scas
adc
in
subb
mov
push
jp
insl
fistpll
xchg
shrb
bound
stc
incl
and
dec
or
cwtl
jnp
or
mov
jl
sub
or
xor
mov
sub
in
popf
mov
int
out
in
add
adc
fidivs
es
sbb
and
lods
loopne
addr16
je
out
mov
xchg
addb
aaa
sbb
outsl
loopne
mov
test
sbb
jle
stos
push
push
sbbl
cmp
out
xor
mov
pusha
inc
loope
mov
pop
dec
jae
mov
fisubrs
or
mov
lods
clc
cli
scas
cmp
ljmp
hlt
cmpsb
adc
pop
fisttpll
mov
leave
loopne
mov
mov
imul
popf
leave
aad
inc
into
or
or
repz
mov
in
xor
repz
pop
xor
fistpl
adc
out
pop
push
xor
mov
sbb
lahf
stos
inc
xor
push
jg
pushf
pop
and
outsl
inc
xor
cld
xchg
jl
dec
movsb
jmp
jne
loope
in
inc
stos
call
clc
dec
inc
push
out
inc
and
lcall
adc
mov
pop
sahf
adc
popa
mov
iret
xlat
xor
aas
xchg
imul
sahf
mov
sbb
dec
dec
adc
dec
jae
ljmp
adc
mov
push
pop
arpl
popf
jae
loope
imul
faddp
scas
mov
cld
in
pop
notb
les
mov
sti
shlb
pop
dec
fildl
or
aas
ret
rcl
rorb
sub
jle
jne
mov
test
jae
jmp
dec
test
out
dec
mov
or
or
cli
outsl
repnz
adc
pop
sbb
dec
push
hlt
lock
or
iret
addr16
add
add
out
fcmovb
mov
lock
pop
mov
sbb
mov
fdivrs
sub
sbb
and
sbb
lods
in
xor
dec
clc
fcoml
outsl
push
bnd
test
and
xor
mov
push
jno
stc
cltd
mov
or
jo
movsl
jb
xor
sbb
inc
lods
push
mov
pop
movsl
mov
mov
in
in
xchg
mov
xor
inc
mov
add
fisubrl
bound
mov
js
pop
pop
aad
dec
ds
popf
sub
icebp
xlat
jecxz
mov
cmp
andb
sub
stos
mov
dec
mov
and
cmc
add
push
xchg
mov
mov
aad
xchg
lods
addr16
clc
aam
cmpsl
mov
aad
mov
jmp
mov
sahf
push
mov
xor
jg
inc
mov
cwtl
push
inc
cmp
ret
cmpsl
les
push
cmp
mov
aad
movsl
out
fidivl
xchg
in
jno
fisttpl
ret
loopne
mov
pop
mov
or
in
ficoml
imul
mov
sbb
pop
add
lods
sbbl
in
or
in
push
leave
jmp
int3
sbb
or
js
pop
add
mov
mov
jae
test
cmp
cwtl
fmull
call
mov
and
insb
mov
add
add
xor
pop
mov
xor
std
jg,pt
mov
cli
ret
repz
mov
test
jb
sub
inc
push
mov
test
call
mov
jp
adc
pushf
push
mov
mov
test
icebp
dec
mov
mov
aam
sarl
out
cmpsb
cmp
addr16
sbb
adc
vmwrite
and
jae
jns
dec
sbb
orb
cmp
and
stos
outsb
cmp
lds
stos
ss
hlt
int
adc
bound
adc
scas
xlat
mov
sti
jge
mov
mov
mov
ss
cmpsl
inc
add
or
jae
aam
inc
mov
jno
dec
enter
jns
repnz
fiaddl
lea
enter
sub
or
ror
cmpsb
jle
cmp
nop
shll
inc
div
fmuls
ret
int3
adc
add
imul
imul
dec
jnp
clc
sub
in
pushf
or
jae
mov
mov
dec
test
insb
lea
outsl
das
push
cmpsb
xchg
subb
push
fmuls
and
mov
cli
hlt
insb
jge
idivl
loope
cwtl
outsl
movsl
sub
ja
sbb
sub
add
adc
dec
loope
js
mov
aad
mov
xchg
subb
jbe
mov
add
mov
inc
mov
out
jg
int3
subl
xlat
mov
mov
mov
mov
cltd
notb
add
push
add
sub
pop
xchg
scas
out
loop
testl
lock
xchg
repz
adc
push
imulb
sbb
int
shr
pushf
addr16
and
fcom
fidivrl
push
loop
mov
xchg
mov
sub
or
out
out
lret
cmp
add
jb
shll
mov
or
pop
push
mov
adc
xor
mov
movsl
rolb
jle
leave
clc
inc
fcmovb
sub
xchg
stos
add
xor
xlat
xchg
mov
xlat
sub
fwait
lcall
mov
jno
loope
addl
aad
xor
dec
mov
test
and
pop
xor
movsl
push
lea
loopne
xor
or
test
mov
out
fwait
enter
pop
and
shrb
add
les
xor
sub
or
test
and
inc
adc
ljmp
jnp
pop
or
test
pusha
gs
dec
xor
or
mov
pusha
sbb
in
mov
mov
xor
pop
subb
lock
test
lret
bound
lahf
les
adcb
and
mov
movsb
adc
lcall
jns
dec
das
call
pop
out
test
pop
pop
ret
push
pop
xchg
nop
dec
test
cmp
inc
mov
jae
ret
fdiv
sub
mov
pushf
mov
or
pushw
adc
fadds
daa
adc
negb
fldenv
push
jg
cli
iret
filds
sbb
dec
cmp
adc
les
or
mov
mov
mov
sub
mov
adc
imul
pop
sahf
into
push
mov
inc
sub
psubb
scas
pusha
loop
push
cmp
add
pop
jmp
add
fistpl
mov
and
push
jg
fldenv
xor
test
outsl
decb
pop
hlt
imul
hlt
jl
inc
cmp
ss
rol
fimull
fs
push
enter
rorl
inc
inc
out
pushl
ret
lods
xchg
cmpsb
jb
add
adc
cmp
cmpsb
in
add
aad
cmpsb
fdivs
cmp
fisubrs
sbbl
sub
aad
xchg
loope
mov
xor
pop
mov
aam
jno
pop
ss
cmpsb
cmp
jp
test
cmp
idivb
cmpsl
pop
push
mov
sti
push
mov
pop
xchg
rcrb
mov
cli
jmp
loopne
pop
add
icebp
fcmovu
jg
adc
push
xchg
bound
add
push
xchg
jno,pt
fiadds
mov
jmp
lods
lods
mov
xchg
out
inc
cmpsb
cli
mov
jecxz
push
mov
rcr
xchg
test
xor
popa
and
lock
pop
fcoms
inc
mov
adc
in
pop
and
pop
js
sbb
adcb
shrb
mov
cmp
cmp
jno
jo
dec
ds
xor
inc
cwtl
jge
inc
dec
scas
ljmp
scas
test
test
into
sbb
dec
adc
push
mov
jp
jbe
cli
dec
fbstp
add
das
outsw
push
mov
sbb
aas
xor
inc
and
hlt
and
sbb
test
bound
mov
cmpsb
mov
loop
xchg
std
test
mov
lea
outsl
fcomps
in
sbb
mov
and
sti
cld
push
insb
mov
mov
imul
movsb
scas
mov
sub
cwtl
ljmp
mov
dec
clc
movb
mov
dec
pop
xchg
in
cmp
out
adc
cmp
bound
int
xchg
cmp
cmp
inc
arpl
mov
lahf
mov
dec
mov
imul
ss
xor
cwtl
fistps
cmpsb
fwait
and
adc
ret
mov
cmp
das
jns
fcmovbe
jae
dec
inc
ret
dec
xchg
adc
mov
adc
aam
imul
je
lahf
jge
jae
out
outsb
dec
or
inc
fstl
fldenv
xlat
add
pop
shr
jo
dec
mov
mov
cmpl
mov
inc
add
bnd
call
idivb
mov
inc
sub
mov
lret
push
call
add
mov
mov
out
ja
mov
xor
xor
push
mov
out
fcmovnb
xchg
loopne
add
fwait
push
imul
clc
mov
test
loop
jl
mov
ret
mov
xor
adc
sub
js
lods
out
cwtl
stos
ret
adc
call
xor
add
inc
or
dec
and
cmc
mov
cmp
sbb
mov
movsb
mov
fcoml
movsb
sbb
jle
mov
call
in
mov
cmpsb
adc
subl
or
ds
and
push
pusha
xor
inc
inc
pop
outsl
or
inc
xchg
dec
movsl
loop
push
mov
sbb
or
pop
jg
js
push
aas
jo
std
cmc
xlat
popa
mov
fs
cs
hlt
enter
fdiv
mov
push
gs
shll
and
or
pop
testb
mov
xchg
out
ret
popf
fsts
mov
mov
fisttpl
hlt
aad
ss
push
mov
xor
icebp
mov
jo
mov
push
or
inc
push
repnz
push
jg
cld
adc
mov
out
cs
inc
out
push
cmpsb
hlt
xorl
mov
lea
sbbb
cmc
sbb
insb
loopne
push
je
imul
add
mov
sbb
inc
mov
or
leave
mov
adc
mov
xor
jle
ret
push
stos
or
shlb
gs
cmp
adc
insb
sahf
inc
outsl
shrb
inc
push
cmp
cld
mov
les
sbb
xlat
jae
inc
and
in
pop
lods
cmpb
dec
icebp
inc
inc
xor
mov
or
add
gs
leave
in
in
pop
cltd
sub
jne
mov
jae
add
jmp
mov
jbe
daa
in
les
xchg
insb
shrb
sarl
nop
pop
mov
add
stc
dec
sti
xor
sub
cs
inc
sar
mov
test
lock
pop
or
and
nop
jnp
xchg
leave
sarl
adcl
mov
repz
gs
pop
fistps
cmc
dec
faddl
call
push
shlb
jns
jo
mov
push
in
decl
ret
pop
scas
fadd
shrl
mov
ss
decb
pop
adc
add
adcb
mov
or
scas
rclb
dec
mov
outsl
sbb
push
pop
stc
out
sub
dec
sarl
adc
pop
sbb
mov
jmp
adc
add
mov
dec
std
sti
dec
lods
stos
mov
pop
push
mov
dec
or
mov
cs
cmp
jp
mov
data16
mov
mov
cli
pop
jp
xchg
arpl
subb
inc
xchg
mov
sarb
jp
ret
leave
cmp
fisttps
sahf
xchg
out
push
add
bnd
shl
into
repnz
das
hlt
lahf
popa
aam
mov
pop
jp
jns
push
pop
adc
pop
push
adc
adc
inc
and
rclb
lret
push
lods
in
out
insl
arpl
mov
push
xchg
sbb
xchg
fwait
mov
mov
mov
cmp
repz
insl
xor
inc
jb
addb
push
push
xchg
adc
out
aam
shl
subb
cmp
paddd
insb
outsl
mov
sub
inc
add
sub
in
pop
rcll
mov
rcl
add
pop
mov
jb
shrb
jns
pop
mov
and
loop
lods
or
cmp
add
pop
out
push
aaa
dec
xor
cmc
jle
dec
cmp
or
push
out
mov
nop
fimull
or
in
xchg
dec
push
bound
push
inc
bound
inc
and
jnp
popf
xlat
and
xor
dec
or
or
and
pop
pop
adc
sbb
hlt
cwtl
and
outsl
stos
sub
fnstenv
negb
cmpsl
mov
pop
sbb
je
pushf
mov
xchg
cmpsl
inc
int
and
xchg
dec
jns
ja
adc
sub
je
icebp
mov
and
adc
cmp
inc
add
enter
xchg
fucom
xor
mov
lcall
adc
pop
aam
sbb
dec
cs
cli
inc
fwait
mov
in
sbb
sbb
loope
and
es
push
dec
sub
int3
mov
daa
pop
test
data16
sbb
lret
stc
mov
sbb
xlat
out
aam
xchg
adc
mov
imul
fisttpll
pusha
stos
cltd
stc
daa
pop
incb
jb
mov
lret
pusha
out
sti
add
test
stos
sbb
lret
dec
pusha
fimull
adc
ret
push
xlat
and
pop
cmp
xchg
jmp
pop
enter
popa
clc
add
out
dec
je
mov
out
icebp
iret
out
sub
in
std
xor
mov
dec
call
mov
xchg
gs
push
push
xchg
rolb
cld
mov
dec
loop
lcall
outsl
cmp
sahf
sahf
fimull
sahf
test
mov
lds
adc
pop
int3
test
roll
xchg
fbld
or
mov
insb
icebp
push
push
push
cmp
dec
scas
roll
or
xchg
adc
push
int3
jno
sub
int3
mov
call
add
and
repz
fisttps
inc
dec
add
ja
out
cwtl
lods
stc
or
aaa
fisubrl
dec
nop
aas
xchg
sub
cmc
ja
mov
fadd
sub
xchg
add
mov
add
jecxz
mov
sbb
jo
sbb
subl
insb
sar
dec
pop
sub
fwait
mov
dec
cli
xchg
lea
aas
jle
cmp
xor
add
cmpsb
sub
faddl
jno
leave
sbb
je
push
test
pop
and
es
sahf
dec
pop
sar
add
mov
mov
cvtps2pi
jns
or
negl
popa
pop
mov
add
jg
lahf
cmp
ret
jno
mov
fiadds
out
insl
cmpsb
dec
pop
aad
mov
lahf
or
aad
data16
pop
outsb
xchg
xchg
xchg
mov
aaa
sbb
loope
inc
jns
xchg
call
push
outsb
sbb
stos
je
insb
jno
fs
rcrl
dec
ret
cmp
mov
mov
in
fwait
lods
enter
scas
fwait
aas
add
xchg
andl
in
or
inc
adc
xor
incb
jecxz
clc
dec
dec
or
mov
int
sub
les
dec
push
loop
or
pop
dec
jmp
mov
dec
stos
pop
aaa
fstps
adc
mov
mov
add
xor
xlat
nop
mov
dec
jecxz
jo
call
adc
sbb
insl
add
xlat
sbb
add
test
push
sbb
das
cmpsl
ss
mov
push
repnz
adc
bswap
mov
add
inc
pusha
aad
pusha
insl
mov
pop
xchg
stc
add
jnp
jo
test
add
cmp
loopne
js
test
xor
add
movsb
dec
pop
nop
das
fcmove
and
scas
out
mov
push
in
push
adcl
fsubr
sub
push
mov
idivb
notb
roll
pop
imul
in
pushf
stc
shr
mov
jg
xor
inc
xchg
in
popf
pop
dec
lret
cltd
xor
out
pop
vxorps
inc
loopne
inc
push
xorl
dec
cmp
fstl
aam
jg
loope
and
andl
pusha
or
or
mov
sub
pop
jge
cmp
rolb
sub
jecxz
pop
add
push
dec
mov
or
insb
xchg
shrb
mov
xchg
test
imul
push
or
mov
test
addr16
aad
push
sub
repz
and
pop
scas
and
clc
and
hlt
push
stos
jmp
mov
dec
cmp
add
cltd
xor
scas
push
sbb
xchg
mov
mov
scas
popa
jmp
lods
or
pop
dec
add
xchg
int
clc
add
sarl
fwait
ret
push
pushf
push
repz
mov
add
nop
sbb
shlb
stos
lret
mov
mov
pop
jl
pop
pop
cmp
fstpl
or
repz
lods
push
loopne
aam
int
dec
mov
jp
pop
push
push
in
dec
jae
test
enter
insl
push
icebp
xchg
push
jp
adc
pop
mov
pop
ljmp
fdivr
push
cmp
inc
or
dec
int
enter
arpl
jg
lret
cmp
and
ficompl
mov
rorl
stos
sub
add
add
cmpsl
mov
ret
mov
push
aam
fs
and
or
or
or
pusha
mov
mov
and
in
jg
cltd
testb
lock
insl
push
ja
lret
insb
xor
push
sbb
dec
pop
inc
lods
and
dec
pop
imul
movsl
insb
lret
loop
hlt
jmp
mov
adc
xor
test
imul
mov
add
cmp
sub
add
call
push
sbb
dec
enter
clc
jge
xchg
push
inc
pop
push
cli
leave
sub
sbb
je
jle
dec
jo
lock
fisubl
call
sub
xor
inc
add
pop
sbb
mov
out
pop
mov
stos
cmp
xchg
push
mov
ret
mov
dec
pop
inc
cs
pop
jne
dec
push
outsb
or
je
and
popa
push
ljmp
std
iret
push
movsl
je
arpl
and
fcmovbe
fcoml
dec
or
rorl
dec
cld
stos
mov
mov
filds
sbb
imul
add
stc
dec
js
es
imul
jb
dec
mulb
dec
fildll
and
mov
dec
jbe
mov
fdivrp
pop
leave
jecxz
sbb
or
push
addb
in
fnstenv
nop
mov
movsl
dec
aaa
cvtpi2ps
adc
cwtl
jg
pop
cwtl
lahf
cmp
loop
mov
pushf
inc
sarl
clc
mov
sbb
scas
jle
jmp
add
pusha
bound
shll
ret
out
testb
mov
add
fs
xchg
xchg
add
cmp
inc
push
inc
mov
jmp
paddq
and
loopne
cmp
imul
xchg
popf
lret
push
rol
jo
loope
xchg
fistps
call
sbb
pop
movb
mov
jg
pop
js
inc
push
mov
mov
int3
jnp
lock
addr16
ret
pusha
jmp
mov
lahf
ds
out
jge
pop
dec
inc
sub
sub
out
cmp
push
loope
sbb
cmp
scas
and
pop
clc
rorl
jo
stc
int
loope
hlt
ja
test
and
pop
mov
fs
fiadds
inc
push
sbb
aas
and
inc
in
dec
add
mov
fbld
stos
es
cmp
mov
inc
fstpl
test
pop
jbe
or
fcmovnu
incl
and
cld
sub
xor
iret
mov
sub
pop
test
push
ss
jmp
lahf
nop
sub
push
ss
mov
dec
insl
or
adcl
push
cmp
pop
mov
roll
popf
mov
sbb
sbb
insl
cltd
jmp
xor
sub
leave
stc
dec
movsb
fildll
sub
sbb
mov
xor
lods
cltd
mov
jmp
loop
loop
and
into
xor
fs
jae
into
adc
pusha
shl
pop
mov
stc
inc
jecxz
movsb
int3
dec
xchg
out
imul
mov
shrl
stc
pop
push
mov
test
pushf
mov
leave
lods
mov
or
pop
scas
cld
aad
mov
adc
fistpll
scas
sti
dec
mov
or
imul
sbb
pop
xchg
xor
iret
or
jle
push
fnstcw
int3
fs
add
lds
repz
xchg
dec
jmp
adc
xchg
insb
ja
lods
sbb
test
icebp
or
cmp
sbb
sahf
lret
xor
add
pop
neg
repnz
jae
dec
adc
push
scas
xor
pop
mov
rorb
fdivrl
fsubs
and
xor
xchg
sub
aas
push
cmpsb
xchg
daa
adc
pop
or
pop
sub
xor
ljmp
pop
xchg
ds
pop
push
outsb
stos
aam
push
xchg
push
mov
and
jb
andl
outsl
cmp
rol
mov
dec
subl
pusha
popf
jg
push
clc
lret
imul
push
cmp
xor
lahf
mov
loope
sub
movsb
ret
mul
in
lahf
fdivs
out
ljmp
sbb
push
test
adc
xchg
scas
js
and
cli
mov
mov
bound
test
jmp
mov
clc
fldt
push
orl
in
xor
xchg
dec
jne
sbb
clc
test
adc
fistpll
cltd
add
push
nop
cmp
mov
test
std
lods
inc
or
mov
or
jnp
scas
inc
int
pop
iret
insl
lcall
jp
add
push
mov
fstpt
repnz
stos
dec
cmpsl
lods
mov
push
or
cltd
push
les
lcall
jl
sti
pushf
rcrb
push
mov
lahf
in
pop
notl
dec
int
push
add
dec
in
fsubrp
cmpsl
sbb
jb
int
inc
dec
pop
pop
or
cmp
orl
dec
arpl
ljmp
rorl
inc
adc
addr16
or
cli
js
pop
shlb
cmpsb
addr16
cwtl
sbb
pop
and
cld
adc
cmp
sbb
lret
cmpsl
sub
mov
es
mov
in
stc
adc
mov
jnp
orb
add
movsb
outsl
loope
mov
sbb
ss
rcr
inc
jecxz
mov
enter
sahf
rorb
or
cmp
mov
cwtl
inc
sub
icebp
test
xchg
pop
sub
push
xor
arpl
jbe
sub
jae
fwait
add
pop
jnp
shr
stos
outsb
and
push
nop
cli
iret
cmpb
lods
pop
ljmp
rep
sbb
out
sbb
addr16
dec
pop
std
pop
das
fucom
mov
adc
cmp
push
stc
cmpsb
push
sbb
cmp
sbb
push
lea
lds
add
push
movsl
leave
inc
push
lcall
adc
add
and
inc
sbb
push
fbld
sub
push
fwait
leave
or
ret
mov
mov
stc
mov
xor
adc
inc
add
ss
popf
jb
outsl
sbb
add
cltd
test
daa
and
int
out
mov
or
push
adc
popf
mov
insb
xor
dec
add
lret
leave
xchg
loopne
leave
or
jb
push
xchg
sub
imul
test
in
mov
xchg
pop
add
inc
jne
shl
and
push
cs
testb
cwtl
jle
aad
shrb
add
sarb
sub
movsl
jno
fiaddl
inc
out
dec
aam
adc
mov
aaa
fistpl
xor
xlat
dec
shll
enter
mov
std
xlat
adc
sbb
dec
xchg
jle
mov
dec
lea
mov
pop
fst
pop
lcall
dec
hlt
loop
insl
popa
pop
cmpsb
in
xor
add
movsb
add
xchg
outsl
aas
pop
sub
ds
sbb
int3
ret
mov
inc
mov
repz
mov
push
sub
sub
and
je
dec
xor
aas
out
out
cmp
jmp
outsl
scas
insl
adc
bound
push
out
sub
repnz
adc
sub
jmp
inc
cmp
sar
into
mov
scas
sbb
push
popa
dec
push
decl
outsl
pop
enter
adc
mov
rcrl
dec
jo
and
or
sub
xor
dec
out
enter
mov
lock
rcrl
sbb
rcr
daa
dec
inc
mov
test
fs
push
js
orl
cmpsb
rcrl
sahf
mov
push
out
xor
sub
cmp
addl
insb
push
dec
stc
daa
add
scas
jo
lcall
cmp
and
sbb
mov
adc
daa
jmp
cmc
out
mov
pop
mov
sub
pusha
movsb
adc
jo
jnp
add
or
jne
popa
les
js
hlt
mov
aad
pop
dec
shlb
outsb
pop
ret
sbb
mov
mov
das
repz
mov
movsb
mov
inc
lahf
in
test
arpl
inc
lods
and
movsl
jno
cmpsl
push
mov
aad
xchg
dec
jno
inc
aam
xchg
or
xchg
adc
pop
adc
xchg
out
jae
ret
xor
mov
cwtl
andl
jecxz
mov
and
mov
mov
lock
les
xchg
mov
xchg
mov
xor
pop
mov
ljmp
sub
into
fwait
adc
inc
aad
cwtl
ror
add
in
inc
rcrl
rolb
mov
pop
loop
jae
jno
dec
adc
fimull
test
fnstsw
jmp
jbe
adc
adcb
ret
ds
and
push
adc
stos
inc
shll
movaps
mov
lea
adc
std
es
inc
clc
xchg
addl
rolb
in
rcrb
popf
dec
inc
inc
outsl
sti
or
enter
sbb
jno
mov
mov
xor
sbb
incb
xor
fldenv
and
data16
jnp
faddl
es
xlat
test
nop
xchg
sub
icebp
std
insl
dec
mov
repz
pop
mov
sub
hlt
jmp
inc
inc
ljmp
inc
cmp
push
je
pop
in
xor
rcl
pop
add
adc
cltd
std
mov
cmp
cmpsl
pusha
xor
loop
int3
daa
imul
ret
insb
sub
in
in
fidivrl
mov
test
add
sbb
pop
sahf
ficomps
sbb
lock
or
dec
in
cmp
cltd
adc
sub
inc
cmp
adc
rcll
sub
movsb
rorb
in
scas
push
mov
scas
push
fdivp
es
sbb
xchg
ja
adc
ljmp
enter
mov
sub
push
in
adcl
jmp
dec
stos
rorl
mov
out
mov
xchg
icebp
sarl
imulb
mov
xchg
cld
sub
sbb
cmpsl
mov
jo
rorl
cld
push
xor
aas
in
mov
repz
add
loopne
popf
xchg
aas
add
dec
mov
and
cmpsl
imul
push
stos
mov
mov
outsl
sub
xorb
js
mov
adc
scas
and
mov
fwait
dec
add
mov
push
push
pop
xchg
int3
cltd
and
int3
insl
enter
pusha
pop
imul
xchg
leave
cli
scas
test
mov
pop
lret
or
mov
pop
fdivrs
call
loop
sbb
pop
mul
sub
cmp
xlat
dec
ret
sub
mov
sti
enter
mov
cli
or
dec
xorl
jb
enter
inc
xchg
inc
sti
xor
add
push
xchg
cmc
push
xor
inc
sbb
scas
daa
push
pusha
mov
fstl
dec
push
and
test
pop
test
inc
xor
into
clc
jle
add
push
stos
mov
popa
cmp
push
push
sbb
dec
testb
xchg
in
sbb
out
dec
lahf
outsl
mov
orb
inc
das
ds
jle
rorl
hlt
mov
cld
lret
add
movsb
add
insl
pop
mov
in
pop
std
arpl
mov
ficompl
sub
xchg
jno
into
test
xlat
adc
ret
or
pop
mov
fisttps
mov
fidivl
sbb
xor
cmpsl
dec
lds
rcrb
xchg
jecxz
call
sahf
jle
in
fadds
adc
stos
pop
mov
negb
adc
sbb
sub
mov
dec
jnp
sahf
dec
inc
push
sbb
jg
push
dec
ja
mov
xchg
adc
cmp
dec
out
das
leave
sbb
push
cmpsb
data16
in
out
sbb
mov
mov
xor
add
push
mov
test
xchg
xchg
ret
adc
imul
dec
loop
adc
jp
cmpsb
fnsave
dec
mov
push
cwtl
pop
jg
and
add
popa
mov
lret
cmp
cld
test
push
fimuls
leave
sahf
sbb
aad
mov
test
and
xchg
push
mov
arpl
add
imul
sbb
into
loop
in
jg
dec
jmp
sarb
orl
mov
cmp
or
xchg
out
clc
push
cltd
cmc
xor
xor
iret
hlt
aad
adc
das
out
lds
loop
or
pop
pusha
stc
mov
sub
data16
xor
mov
outsb
jg
and
loop
jae
adc
scas
mov
lahf
mov
adc
cs
ja
jmp
call
jmp
sbb
clc
jns
out
jg
fidivl
push
jle
mov
test
movsb
movsl
mov
dec
pop
jbe
xor
aam
loope
inc
jmp
mov
fsubl
sbb
push
dec
rclb
mov
cs
shll
out
sub
xor
xchg
pop
xor
rcr
adc
add
sbbb
mov
stc
xor
push
loope
cmp
repnz
ret
mov
movsl
sbb
or
xchg
xchg
sahf
mov
loope
push
lods
adc
aas
mov
loope
repz
scas
cmpl
movsb
lods
jb
sbb
lcall
fcoml
lds
mov
pop
in
jo
xchg
add
add
push
xor
mov
cmpsb
push
mov
inc
sub
xor
lock
test
push
mov
sti
mov
outsb
mov
add
inc
jno
mov
es
cmova
dec
test
sar
pop
test
out
test
arpl
add
leave
xor
imul
je
xor
jns
cmp
xor
sti
mov
out
testb
push
mov
lret
lods
mov
call
xorl
pushf
push
push
leave
pop
pop
sbb
in
loopne
out
add
xchg
add
shl
and
sub
stos
aaa
cmc
cmp
mov
mov
fsubrs
dec
dec
repnz
jb
sbb
mov
mov
jno
xchg
in
je
test
fnstsw
jb
pushf
dec
cmpb
mov
cmp
dec
lock
jecxz
mov
inc
pop
out
or
aad
pop
inc
sub
xlat
inc
and
jle
add
add
pushf
stos
mov
adc
test
in
dec
xor
xor
jns
out
into
inc
rcll
pop
shlb
pop
aaa
fucomi
jp
dec
mov
xchg
imul
ficomps
loop
mov
push
jnp
iret
outsb
and
into
sbb
mov
xchg
shrb
loopne
xor
les
test
push
out
outsb
enter
pop
dec
adc
jmp
stos
clc
pandn
inc
dec
jne
xchg
inc
icebp
hlt
les
lea
inc
cmpl
enter
ficoms
mov
or
fwait
shl
scas
in
jo
lods
mul
mov
addr16
out
shlb
call
cmp
add
rcrl
push
bound
jp
dec
cmp
jo
sbb
imul
sbbb
jp
push
xor
icebp
push
cmp
sbb
aas
lcall
loope
ficomps
int
xor
jne
icebp
dec
movsb
out
std
mov
insb
sti
mov
mov
rorb
mov
pop
xchg
clc
mov
idivb
je
mull
mov
loope
test
dec
add
stos
inc
sbb
sbb
adc
xchg
cmpsl
and
shl
push
aad
das
test
push
jo
popa
push
shr
add
cmp
aad
add
xchg
mov
push
sub
scas
adc
int3
cmp
subb
push
lret
cwtl
cmp
mov
sbb
adc
pop
orb
mov
mov
xstore-rng
cmpsl
inc
pop
dec
cmpsb
fwait
hlt
push
popf
jo
imul
mov
or
push
push
mov
dec
popa
xchg
mov
das
notl
pop
and
imul
loope
sub
fidivrs
push
cmp
jb
int3
pop
lock
lds
pop
pop
cmp
push
push
xlat
xor
dec
nop
test
cmp
std
mov
push
inc
pop
mov
stos
and
orl
mov
xor
nop
jae
popf
mov
mov
cmpsb
xlat
dec
rcrb
jne
pop
mov
cmp
fisubrs
loope
or
mov
xchg
mov
or
pop
cli
negl
jg
out
test
movsb
jae
repz
add
pop
adc
adc
mov
pushf
jg
push
inc
adc
adc
fcoml
adc
jl
lret
test
roll
jnp
imul
sbb
sub
jg
shlb
add
das
cmp
jo
sahf
cmovo
mov
cmc
jbe
sti
jge
cmp
mov
inc
aad
push
mov
dec
mov
out
aam
mov
cmp
stos
fmull
gs
lock
mov
testl
sti
loopne
daa
int
in
mov
xor
xchg
inc
je
outsb
dec
mov
test
js
rorl
and
in
cmpsb
mov
js
push
or
jp
cmp
js
ja
inc
loope
cmp
nop
lahf
adc
arpl
cmp
arpl
rcl
loopne
cwtl
fiadds
jne
popa
xchg
stos
aam
stos
sub
nop
and
ret
jp
adc
shrl
sarl
bound
stos
pop
inc
mov
cld
loope
bound
adc
cmpsb
mov
fsubs
pop
test
cmc
cmp
ret
pop
lea
pop
outsb
out
xor
lcall
das
shll
dec
pop
sarl
or
lds
mov
pop
stc
pop
mov
push
shll
lret
jmp
sub
jb
lock
cld
insl
mov
sti
add
mov
dec
xor
xchg
jo
aas
mov
sahf
pop
jbe
mov
adc
fmuls
insl
jl
cmp
xchg
popa
and
push
nop
adc
dec
in
pop
pop
push
rcrb
lock
outsl
sbb
xlat
repz
jns
adc
int
dec
ljmp
adcb
push
mov
jbe
ss
cmp
outsb
fistps
and
jns
cmp
adc
ret
test
outsb
es
mov
sbb
inc
mov
push
std
loope
addl
sbb
rcll
sarb
adc
dec
and
stc
ds
cmc
cmpb
cs
jl
add
pusha
int
scas
jno
outsb
jns
jb
int
flds
push
pusha
out
inc
push
fisttpl
in
shlb
mov
mov
imul
negl
jne
sbb
in
jmp
imul
ficompl
add
dec
mov
push
cld
mov
addl
xor
stos
fldcw
sub
sub
xor
lds
mov
pop
jg
ret
in
jp
sahf
xor
filds
and
mov
pop
mov
out
push
rcrl
aad
test
jae
fmuls
test
mov
sbb
negb
subw
lea
xor
cmp
add
xchg
jge
mov
jmp
and
xchg
and
xor
stc
lods
or
pop
xor
ret
lret
sahf
jae
out
dec
nop
mov
imul
jmp
ljmp
int
or
inc
sub
mov
mov
insl
lret
mov
mov
fidivrs
and
fnstenv
aaa
dec
cltd
mov
pushf
movsb
xchg
mov
inc
fwait
fwait
scas
addr16
repnz
bound
ja
cmp
call
lret
aam
popa
xor
and
cmp
and
add
sbb
stos
cmp
notb
mov
pop
gs
inc
incl
aas
cltd
push
in
xchg
inc
lcall
mov
clc
add
add
adc
repnz
mov
jbe
insb
mov
shll
out
cmp
add
rolb
arpl
inc
aas
dec
movsb
xor
mov
out
and
sbb
outsl
pop
inc
mov
nop
aaa
pushf
mov
sbb
jmp
xor
std
je
add
push
out
cld
aas
nop
mov
in
jne
push
mov
aam
adc
aaa
jmp
pop
cmova
jnp
xlat
mov
cli
pop
adc
ret
cld
pusha
inc
xchg
and
pop
test
and
pop
test
hlt
sub
cld
les
outsb
dec
movsb
and
dec
xchg
pop
cltd
ds
jbe
mov
pop
sbb
rolb
es
add
orl
xchg
imul
addl
sub
jmp
jbe
in
mov
and
into
mov
sbbb
cmpsb
imul
pusha
inc
push
jle
rcrb
inc
sub
aad
loop
dec
wrmsr
mov
cltd
popf
scas
mov
dec
outsl
jne
mov
rorl
stos
adc
out
sbb
ret
lret
cli
and
bound
pop
lahf
aas
and
out
fisttpll
dec
lret
fwait
mov
into
push
xchg
insl
xor
test
pop
push
movsb
mov
popa
shl
inc
mov
scas
lahf
mov
stc
outsl
push
push
xor
mov
add
sub
mov
xor
movb
shll
jns
popf
outsb
ret
data16
fcoms
stc
xchg
ja
sti
stc
add
andl
faddp
add
jno
ror
std
in
push
dec
add
push
mov
pusha
sbb
insb
test
lcall
jl
cs
sbb
cmp
jl
mov
jg
subl
jg
test
scas
outsl
push
fs
jno
pop
repz
or
jmp
lock
dec
outsb
fisubs
out
popf
inc
aas
xor
mov
dec
std
cmp
aad
push
test
adc
add
mov
cmpsl
test
adc
xchg
pop
or
cmp
adcb
stos
mov
adc
outsl
xorb
xchg
aas
mov
jmp
movsb
inc
bound
inc
or
fstl
iret
jecxz
mov
jl
sub
inc
notl
add
out
cmc
insl
pop
adc
repz
sub
mov
inc
mov
insl
pushf
mov
or
cmp
cltd
jo
xor
sub
xchg
mov
mov
bnd
ret
lahf
test
lahf
fstl
clc
shrl
dec
cmp
cmc
pop
jg
mov
loop
jmp
in
inc
add
inc
std
stos
xchg
or
lret
sub
scas
out
jp
stc
xor
jp
xchg
outsb
jge
mov
aas
test
xor
xchg
dec
and
xchg
sbb
cmp
adc
test
dec
add
xchg
jge
sub
fidivrs
lods
shll
out
xchg
stos
lcall
scas
push
inc
js
jne
lret
sbbl
das
dec
xor
mov
xor
push
bound
shll
dec
cmp
dec
cmp
mov
push
push
shll
mov
scas
lods
enter
enter
sbb
mov
jg
cmp
pusha
test
in
adc
adc
pop
push
sbb
mov
aad
lret
pop
sub
aaa
pop
mov
arpl
rorl
push
jns
and
imul
rcrb
jmp
pop
push
mov
sbb
push
aam
jge
pop
xor
mul
imul
mov
or
push
sti
xchg
iret
mov
das
test
jp
sbb
sti
ret
hlt
fmull
test
pop
cmpsl
adc
mov
push
add
idiv
adc
push
dec
and
adc
dec
pop
adc
xchg
sbb
loope
and
or
jae
jns
stos
pop
mov
je
inc
cmp
sbb
inc
pop
sarl
xlat
sti
ljmp
push
insl
pop
dec
mov
aaa
add
mov
or
mov
push
sub
inc
insl
xor
into
push
rcrl
lea
in
sahf
mov
stc
push
movsb
mov
pop
das
iret
das
adc
data16
and
inc
add
rclb
dec
in
push
scas
adc
vfmadd132sd
repnz
cltd
scas
inc
push
mov
in
push
pop
xor
xchg
mov
adc
cli
scas
repz
sub
pop
insl
aad
cmc
fcoms
repz
add
subl
cmpsl
inc
jb
pop
sar
jae
adc
aaa
fisubl
push
xor
mov
or
movsb
and
xchg
mov
push
pop
fstpt
ficoms
cmp
dec
lock
add
fiadds
stos
out
xchg
fsubl
ss
inc
or
xor
sub
cmp
pop
xor
in
loop
xchg
push
cmp
and
cwtl
imul
mov
adc
jp
pop
inc
orl
mov
cltd
fdivr
stc
jp
push
dec
and
out
stc
and
push
xchg
ja
das
sbb
subl
enter
test
add
je
lret
xorb
cmc
add
sahf
adc
or
int3
sbb
fneni(8087
adc
mov
loopne
sub
push
push
imul
xchg
sbb
imul
icebp
mov
xor
movsl
and
xor
push
push
or
cmpsl
cltd
xchg
inc
inc
arpl
inc
arpl
jb
xchg
loopne
sbb
push
cmp
sbb
mov
jg
fldcw
scas
inc
xchg
cmp
call
add
cmp
inc
sarl
lret
mov
or
fwait
cltd
es
adc
loop
inc
pop
or
ss
jp
cmp
daa
fnsave
das
subl
int
and
or
enter
push
mov
xchg
mov
or
pop
loop
outsl
cmp
dec
cmp
xchg
lea
scas
movsl
nop
dec
loopne
popf
inc
adc
push
aaa
xor
loope
push
insb
dec
add
add
pop
xor
mov
xchg
mov
and
jecxz
sbb
mov
fwait
in
mov
inc
mov
xor
sbb
popa
xchg
lods
rclb
push
dec
outsl
inc
mov
cltd
mul
or
ffree
adc
in
mov
jno
jmp
ja
cmp
imul
dec
pop
stc
push
lret
fwait
lods
aaa
insl
fdivrl
add
orb
or
mov
xor
out
int
mov
pushf
xor
add
in
rcrb
imulb
mov
jno
shlb
lods
and
pop
xor
cld
adc
xor
insl
lods
sbb
bound
cmp
fdivrp
sar
push
or
push
in
jae
movsl
cmp
xchg
movsb
inc
ret
popf
xchg
sub
das
mov
mov
dec
mov
mov
ret
jnp
and
out
add
push
mov
xlat
and
jge
insb
movsb
or
movsb
or
mov
or
push
loop
movsl
pop
sbb
xchg
inc
pop
les
and
nop
xchg
mov
cmc
fwait
lahf
mov
mov
outsb
aaa
jbe
and
mov
xchg
test
push
mov
jbe
sbb
jl
mov
dec
rcrb
lea
dec
adc
add
adc
test
out
stos
pop
pop
ljmp
in
xchg
or
jl
sbb
popf
add
pop
lcall
fcompl
ficompl
lcall
xchg
push
lahf
pushf
pushf
loop
testb
xlat
inc
jmp
mov
fs
or
adc
lea
adc
push
push
cmp
dec
sarb
cmp
int
scas
outsb
and
xor
repnz
loopne
mov
add
jmp
fistpll
data16
adc
loop
xchg
lret
push
xor
mov
stos
imul
and
push
or
mov
leave
and
into
imul
cmc
xchg
jecxz
mul
cmc
add
cmp
test
cld
mov
arpl
or
ja
push
add
fsubrl
push
outsl
dec
repnz
cltd
adc
sbb
lret
sarb
push
ror
xchg
sub
xchg
adc
inc
mov
cmp
sbb
and
dec
loopne
fcoml
pop
mov
dec
js
or
jg
xchg
add
movsl
daa
and
stos
iret
inc
adc
push
jnp
arpl
sub
sbb
fcompl
xchg
mov
clc
lods
push
inc
pop
jae
dec
add
jbe
mov
out
into
mov
sahf
inc
mov
sbb
lcall
pop
mov
mov
sbb
pop
add
mov
mov
dec
je
inc
out
movsb
mov
fs
push
lods
sbb
mov
or
mov
fs
loopne
loope
jge
push
sub
loop
sbb
inc
push
pop
jl
push
cmp
test
aad
mov
fstl
xchg
movsb
push
add
push
clc
fistpl
popa
arpl
scas
mov
jp
insl
shlb
jns
adc
incl
push
imul
in
pop
dec
mov
push
repz
and
adc
push
xchg
lods
ds
push
test
push
xor
adcl
push
or
sub
adc
or
shlb
outsl
repz
shr
xorb
mov
fsub
lcall
std
movsb
xchg
xrelease
pop
inc
fsubp
ja
cmpsb
sbb
in
call
test
lds
cli
rcrb
add
pop
mov
pop
push
leave
sbb
test
cmpsl
ds
rcll
data16
aam
sbb
mov
stos
in
mov
jae
iret
sbb
mov
lahf
cmp
outsl
lret
fmulp
push
iret
fisttpl
adc
loopne
je
shlb
cli
test
xchg
push
sbb
cmp
scas
push
insb
std
rcr
in
aaa
shlb
or
ss
ljmp
jb
inc
les
imul
daa
inc
push
xchg
dec
sub
inc
mov
jne
test
out
loope
push
andl
lock
fsub
dec
mov
fs
push
ja
cmc
jecxz
popf
scas
push
loope
or
fs
dec
aaa
sarl
jbe
xchg
aas
repnz
cmp
sbb
int
jns
fcomps
fstps
popa
jg
sti
jge
test
cmpsb
test
lcall
mov
jge
in
idivl
adc
add
negb
js
lods
or
and
clc
inc
orl
ljmp
pushf
or
xor
mov
test
add
xchg
aad
inc
test
dec
mov
add
cmc
imul
fucomp
and
jmp
int
mov
dec
ds
dec
or
dec
jnp
mov
aam
sub
icebp
test
sub
icebp
addl
push
or
lock
cli
pop
cwtl
xchg
cli
jecxz
mov
jno
into
lcall
jecxz
shrb
bts
insl
lds
add
sub
setnp
cwtl
fldt
mov
jmp
mov
aas
mov
xor
push
or
sbb
fnstenv
sub
and
flds
push
mov
test
lahf
adc
enter
add
inc
test
stc
xchg
loope
fisubrl
jne
sbb
jb
sbb
in
push
cmpsb
sub
mov
adc
notl
add
aaa
fs
and
jg
mov
pop
in
push
or
lds
std
in
subl
sbb
pop
outsb
jns
xchg
mov
and
fwait
clc
push
cmp
pop
mov
xor
addl
sub
pop
lds
xchg
and
aaa
sbb
jmp
gs
fstpl
xchg
fisttpll
inc
rcrl
push
imull
jg
lods
mov
inc
xchg
mov
sub
insb
outsl
or
scas
inc
mov
movsl
insb
xor
push
xor
xchg
push
popa
jmp
mov
shlb
jbe
mov
fwait
lods
sbb
imull
stos
daa
xor
test
in
push
pusha
scas
lret
rorl
sbb
std
inc
mov
ret
nop
ret
sbbb
rolb
pop
inc
imul
and
adc
push
cmp
mov
push
cld
pushf
pop
push
pusha
pop
add
inc
scas
and
mov
inc
addl
lock
inc
popf
xchg
les
mov
pusha
jns
push
jnp
jae
inc
push
push
out
pop
or
icebp
push
dec
jae
sbb
and
repz
outsb
add
sbb
mov
add
xor
xor
stos
ficoml
aad
insb
xchg
repz
icebp
pop
pop
mov
xchg
xchg
popf
jl
outsl
and
rcll
jp
sbb
mov
popf
mov
sbb
fisubl
js
mov
cmp
jecxz
out
in
inc
sbb
cmp
xchg
cmp
xchg
inc
cmpsb
stc
rclb
mov
cmp
adc
jo
or
mov
push
pop
mov
dec
mov
xor
dec
imul
ljmp
or
pop
ficoms
enter
inc
mov
les
in
mov
mov
lahf
and
test
daa
sbb
mov
xchg
rcl
loopne
or
cmpl
add
repz
xor
push
or
mov
stc
test
out
jecxz
mov
push
mov
rorl
dec
or
xchg
xchg
xor
or
fs
enter
stos
bound
adc
roll
add
xor
add
jp
mov
aad
aad
cwtl
pmaxsw
mov
sbb
sub
fs
lret
loopne
or
push
xorb
or
add
jnp
stos
in
bound
cli
out
scas
out
ret
mov
mov
xchg
mov
mov
in
fidivs
jl
sub
add
and
fnstsw
jecxz
lret
pop
loopne
xchg
enter
jae
sahf
jno
icebp
xor
xchg
sub
inc
and
mov
sahf
sub
or
jae
loope
xor
dec
cmpb
inc
loop
std
push
add
mov
pop
lock
push
hlt
xor
ret
jmp
mov
arpl
fldpi
sub
cld
pop
mov
inc
in
xor
nop
stos
stos
ljmp
push
fildl
fidivrs
xchg
sbb
add
add
ljmp
mov
or
jne
rcll
imul
les
pop
or
lods
mov
and
subb
ljmp
ss
add
mov
or
inc
mov
in
pop
mov
sbb
in
and
stos
jbe
push
pop
dec
aaa
shl
cmc
inc
lock
daa
shll
movups
negl
sub
or
inc
dec
cmpsb
lock
adc
lods
xchg
dec
jno
bound
add
mov
inc
ds
addr16
loope
leave
inc
jl
icebp
xchg
or
mov
lds
jmp
test
sub
mov
aad
and
push
bnd
fcomps
sbb
mov
push
or
enter
repz
sbb
jg
aad
xchg
sbb
lock
jb
fnstenv
out
movsb
and
lods
mov
arpl
sbb
int3
cmc
invd
jmp
iret
lret
pop
adc
dec
movl
ds
out
aas
dec
sbb
xor
fdiv
addr16
adc
add
adc
push
push
sbb
jns
shl
pop
mov
fbstp
aas
fstl
leave
push
test
dec
add
add
insl
std
mov
mov
jb
dec
mov
dec
push
cmp
ret
mov
or
cli
inc
shll
faddl
jnp
in
cmp
fstps
push
pop
adc
jo
push
data16
mov
push
mov
mov
insl
cmpsl
into
mov
call
aam
jb
sub
int3
dec
pop
xchg
add
sbb
imulb
int
aam
pop
rclb
arpl
dec
clc
pop
pop
les
mov
popa
mov
lcall
ja
test
out
push
cmp
inc
pop
bound
add
insb
push
das
xchg
aad
insl
std
stc
add
adc
and
add
adc
lcall
add
or
push
sub
jle
add
cmp
pop
fs
loop
lods
xchg
sbb
or
jecxz
pop
aad
int3
rorb
xchg
in
cmc
sbb
aas
fcmovbe
clc
repnz
sub
imul
stc
jbe
das
and
fildl
stos
rcrb
xchg
lods
mov
pop
xor
jnp
mov
bound
cmp
lret
sbb
or
or
xor
xlat
sub
xchg
call
fsubl
dec
lcall
jle
push
out
push
cmpsl
movl
notl
inc
jno
mov
aam
or
mov
inc
into
test
mov
out
in
into
shll
jecxz
pop
mov
jbe
sub
test
dec
mov
push
lea
pop
or
aam
pop
push
jge
cmp
mov
in
jne
ret
ret
stc
pop
adc
jmp
scas
jns
test
jg
inc
dec
mov
sbb
adc
mov
stos
testb
lahf
push
adc
inc
adc
jb
push
mov
jecxz
leave
scas
cmp
or
andl
lods
jg
insl
movsb
xor
push
mov
sbb
push
mov
sub
add
aaa
sbb
sub
std
movsb
movsb
sub
dec
repnz
loopne
sbb
cli
jb
test
pop
xchg
mov
cs
adc
or
jbe
adc
jge
pop
dec
add
mov
mov
cmpsb
repz
sbb
or
lcall
pop
xchg
mov
arpl
mov
xor
divb
jne
pmulhw
add
jle
je
sbb
xchg
outsl
movsb
stc
test
popa
std
imul
or
das
add
cmp
fidivrl
fdiv
int3
or
stc
adc
add
out
jae
pop
out
test
cld
xchg
mov
in
insl
xchg
cmp
mov
fxtract
or
cmp
outsl
or
sbb
mov
sub
loopne
outsl
push
xchg
push
shll
inc
adc
cmc
addr16
xlat
sbb
push
jp
mov
jno
xchg
add
adc
aam
jecxz
popf
data16
cmc
call
mov
fstpl
mov
dec
pusha
sub
dec
mov
adc
xchg
cmpsl
add
ds
mov
rcrl
jl
leave
shrl
cltd
int
mov
std
das
lea
sbb
pop
sub
lret
pop
fcomip
aaa
pop
jmp
dec
or
mov
dec
ss
sub
outsb
cli
aam
xchg
pop
mov
out
out
push
fmuls
push
pop
inc
test
add
popf
dec
loope
add
pop
jns
lods
imul
cmpsl
rep
loop
push
inc
xchg
sub
add
outsl
iret
cmp
mov
shlb
push
mov
inc
xchg
andl
sub
sbb
xchg
jo
in
sbb
jne
pop
inc
mov
xor
jno
lds
pop
add
iret
sbb
jp
icebp
push
sbb
js
repnz
gs
xchg
pop
sbbl
sarb
jb
fdivp
cld
dec
lret
in
into
or
imul
mov
mov
test
inc
jbe
adc
jb
dec
mov
mov
stos
cli
inc
fdivrp
xor
aaa
sbb
adc
pop
sub
test
jno
sbb
xor
inc
dec
add
test
xchg
jne
fldcw
and
in
xchg
jmp
dec
or
push
push
xchg
imul
dec
movsl
push
ss
mov
sub
dec
jnp
pop
enter
std
pop
mov
out
ficoml
js
cmp
and
neg
daa
ret
loope
aad
push
xchg
popa
imulb
xchg
dec
fcoms
cwtl
sbbb
js
cltd
sbb
pop
pop
adc
sahf
jae
cmp
in
mov
loope
and
add
fisttps
push
mov
enter
hlt
scas
add
cmpsb
fs
test
mov
xor
ss
lds
fs
iret
lcall
aad
sbb
cltd
fsubrl
hlt
mov
sub
arpl
push
repz
xor
ret
shll
inc
push
mov
push
sub
pusha
je
mov
ss
das
les
mov
dec
sbb
ret
pusha
cld
jnp
imul
mov
mov
jecxz
push
mov
inc
push
lea
scas
mov
cltd
sbbl
push
test
mov
xchg
nop
cld
lock
sbb
fisubrl
sbb
push
add
stos
push
in
xlat
jp
or
cld
lock
mov
inc
sbb
jbe
mov
sti
jnp
in
lret
ss
or
sbb
pop
in
pop
mov
adc
lock
nop
fmull
sbb
enter
adcl
mov
call
enter
fwait
sub
mov
jecxz
shrb
xor
cmc
loop
xor
lds
mov
cmp
push
ret
mov
sti
mov
es
and
xor
in
cmpsl
fwait
insb
into
and
pop
mov
xchg
rcl
xchg
nop
jl
push
mov
fiadds
dec
push
push
mov
sbb
mov
movsl
je
sub
pop
mov
imul
roll
hlt
rcr
push
pop
andb
sbb
subb
out
pop
cld
or
pop
adc
popa
mov
push
pop
in
jp
hlt
test
das
scas
inc
and
push
cmp
clc
jns
xlat
mov
iret
mov
pop
outsl
cmpb
in
jg
stos
pop
scas
inc
cmp
cmp
mov
xchg
stc
in
mov
rcll
xchg
sub
push
arpl
add
pop
cld
push
loopne
dec
inc
testb
add
push
or
jnp
push
fidivs
mov
mov
fldenv
std
stc
daa
push
mov
cmpsb
repz
mov
add
or
xchg
aaa
or
mov
sub
not
push
jno
add
jle
imul
call
jb
loopne
xchg
aas
xchg
lcall
push
mov
pusha
mov
arpl
loopne
cmp
cmp
cmp
int3
fsubp
mov
imul
shlb
cli
or
mov
jnp
dec
or
push
ret
xchg
mov
xchg
shrl
loopne
xorps
mov
inc
xor
jl
imul
arpl
dec
or
pop
mov
lret
test
lcall
push
test
mov
and
and
pop
fdivr
test
mov
mov
imul
cmp
popf
mov
les
loopne
jp
xor
inc
push
sbb
mov
dec
jmp
ret
pop
cmp
mov
inc
fisttpll
stos
fdiv
xor
nop
adc
cmp
mov
push
xor
xor
hlt
sbb
stos
ds
popf
repnz
xor
mov
jo
loopne
inc
sahf
ljmp
xchg
mov
add
push
arpl
adc
mov
int3
ja
cltd
push
pop
arpl
pop
xor
es
push
dec
cmpsb
mov
jne
mov
insl
jno
or
orl
stos
xor
outsl
insb
dec
hlt
cli
mov
pop
ja
dec
fyl2x
push
dec
mov
mov
cmc
cwtl
push
shrl
sub
in
test
iret
lods
jno
lock
mov
adc
ja
fstpt
and
sbb
mov
push
mov
ficomps
pusha
jge
cmp
imul
mov
std
lahf
xchg
lds
insb
add
repz
push
sbb
or
jns
pop
cs
push
jge
aas
fidivl
hlt
loop
sbb
inc
in
xor
and
fs
fwait
popf
adc
sbb
inc
push
sbb
into
out
arpl
lahf
mov
xchg
xchg
and
mov
cmp
test
and
pop
mov
push
stos
cld
decb
pop
xor
stos
xor
and
xor
jge
add
pushl
push
cwtl
ret
loopne
bound
testl
fdivrp
das
pop
insl
mov
and
or
movsl
lods
mov
fcomps
add
lea
int3
aad
cld
sti
int3
aad
push
pusha
lods
xchg
notl
and
xchg
shl
xchg
sub
and
popf
dec
dec
cmpsb
jl
lock
xchg
xor
jns
mov
inc
daa
mov
add
jmp
xchg
pop
cwtl
fs
loopne
xlat
out
adc
outsb
dec
or
pop
cmp
jecxz
push
pushf
add
dec
ljmp
loope
ja
repz
imul
ljmp
rcrb
push
dec
movsb
shl
cmp
xor
lods
into
push
xchg
aad
cmp
lret
xor
mov
xchg
adc
pop
bound
dec
das
call
cwtl
je
ja
jb
xor
imul
out
mov
clc
jge
fldt
mov
fsub
cmp
lahf
out
mov
jl
jle
mov
ja
test
fs
inc
adc
mov
fmul
fidivrs
ljmp
xor
inc
mov
repnz
movsl
addr16
or
addr16
mov
xchg
daa
addr16
dec
or
shll
scas
adc
pop
lds
push
mov
das
ret
bound
sub
lods
push
inc
insb
int3
xchg
in
sub
data16
dec
out
and
xchg
lret
jg
mov
into
and
cmpl
add
inc
aam
sub
hlt
pop
sahf
sub
sub
jno
sti
stos
cmp
xor
cmp
xor
popf
punpckhdq
xlat
jge
inc
loop
mov
rcrl
xor
or
cmp
mov
aad
adc
dec
and
fdivr
movsb
aaa
jg
pop
or
das
es
ret
xchg
outsl
scas
mov
ret
xchg
mov
pusha
sub
xlat
pop
sbb
mov
jg
insb
add
out
add
fcoms
mov
xchg
pop
loopne
and
gs
je
iret
xor
push
imul
jae
daa
mov
loopne
inc
pop
dec
clc
js
and
xor
mov
repnz
xchg
add
mov
arpl
xor
fldcw
cs
ss
fldcw
xor
push
jne
fs
sbb
lahf
ret
push
fsubl
push
sub
scas
sbb
loop
test
scas
cmp
shlb
mov
js
loope,pn
push
inc
cmpsl
dec
movsb
dec
jb
test
mov
scas
add
in
xor
xchg
jne
push
mov
lds
mov
or
xor
ret
mov
mov
jle
mov
movsb
and
insl
lret
dec
loopne
stos
aad
rorl
sub
jp
add
lods
lahf
sub
jae
out
jge,pt
pop
xchg
dec
xor
aas
jecxz
xchg
js
dec
int
aam
test
adc
mov
jmp
imul
stos
fistpl
lahf
outsl
mov
jne
lret
movsb
jnp
aam
pop
lock
lret
in
cwtl
fstpt
fxch
mov
ret
and
sub
fwait
dec
mov
clc
add
inc
ja
dec
add
and
or
jns
inc
cltd
pop
lret
pop
xor
pop
cli
out
movsl
in
pop
popf
add
mov
sbb
fdivr
mov
sub
sbb
dec
popa
sub
pop
mov
stos
fiadds
dec
rcr
rol
aaa
adc
mov
pusha
cltd
adc
mov
subb
lret
or
fxtract
dec
cmp
mov
shrb
mov
xorb
in
js
push
dec
inc
sbb
daa
fiadds
mov
pusha
and
and
ljmp
bound
xor
in
xor
std
adc
xlat
mov
pop
mov
jecxz
shrb
and
adcb
mov
xlat
jecxz
inc
mov
inc
jge
lea
fwait
jno
pop
ja
in
mov
ds
jl
test
adc
int3
fstpt
jg
pushf
insb
pop
inc
aam
xchg
push
test
test
imul
cs
punpckhbw
mov
enter
sahf
ret
lods
movsb
or
inc
fcmovb
or
test
fwait
inc
sub
je
add
jne
je
mov
mov
xlat
fwait
mov
lret
mov
shll
xlat
xor
or
dec
and
adc
bound
rep
push
fimull
add
in
sti
jmp
adcl
testb
popa
push
mov
dec
das
imul
paddsw
fwait
sbb
jmp
aad
jle
in
xchg
lcall
icebp
divl
nop
js
imul
daa
cmpl
push
jecxz
out
sub
orl
cld
push
call
bound
jbe
add
xchg
outsb
pop
stos
dec
mov
ja,pn
mov
lods
cmp
je
sub
jne
daa
cli
aaa
xor
fwait
add
and
jns
mov
enter
push
dec
cld
mov
mov
push
icebp
insb
push
and
lcall
push
jae
inc
sub
shlb
cmp
dec
dec
cs
imul
add
push
dec
lock
call
sbb
dec
or
loope
mov
aas
sbb
dec
and
popf
stc
push
cmp
cmpsl
xchg
jne
inc
jns
push
mov
sbb
push
ljmp
scas
push
cmp
adc
arpl
jl
scas
xor
push
and
mov
pop
xlat
or
mov
addl
pop
in
sub
xchg
rorl
sub
adc
xor
into
sbb
mov
out
push
mov
mov
mov
je
adc
push
movsl
inc
push
sub
popa
sbb
fnsave
dec
pop
xor
dec
mov
std
xlat
test
mov
push
cmpsb
cmp
pop
lcallw
and
cmc
push
outsb
sbb
sahf
mov
dec
push
sbb
lds
cltd
lahf
ja
and
in
and
movsl
cmc
mov
push
shlb
sbb
or
dec
aam
xor
pop
ds
xorb
add
and
movsl
sbb
sti
into
mov
test
je
mov
xchg
jmp
sbb
push
or
decb
fs
fwait
lock
sbb
imul
std
xor
mov
jmp
sbb
mov
fdivrs
xor
jmp
sti
sbb
sub
jo
push
adc
or
mov
jo
stos
sub
sbb
sub
cwtl
add
push
pop
inc
inc
sub
jecxz
inc
cmp
lods
and
in
bound
inc
and
xchg
sbb
loop
insl
lret
inc
dec
into
cmpsb
pop
ret
out
mov
pop
bound
push
push
mov
insb
mov
xlat
shlb
shrb
or
cmp
xor
or
js
jne
lods
push
pop
jne
or
out
and
fsubl
pop
lock
es
fsubrs
popa
fs
fcmovnb
add
mov
rcr
cmp
loop
loope
ret
dec
mov
ffree
pop
icebp
movsl
cld
insb
push
and
ret
clc
shll
pop
mov
fwait
mov
pop
stos
cs
ljmp
scas
inc
movsl
lock
orl
cmpsb
pop
stc
xchg
jno
pop
fwait
xsave
jle
movsb
add
fnclex
std
call
movsb
les
lods
add
push
cmc
leave
inc
cld
sub
aaa
enter
push
jae
xchg
int
sbbl
cmp
das
cmp
or
test
scas
sbb
bnd
int
aam
daa
movsl
outsl
add
and
es
jb
add
jnp
lret
mov
cmp
dec
pop
test
jbe
mov
lds
xchg
dec
in
mov
stc
hlt
pop
stc
mov
out
fbld
shll
mov
imul
sbb
or
or
push
dec
aas
push
push
andl
fstpt
in
repz
pop
jmp
mov
mov
in
cmp
negl
cmp
pop
dec
loop
dec
loop
add
icebp
mov
add
xor
orl
cmp
pop
sarl
ja
sub
dec
fcoms
adc
in
or
jg
fmull
rcrb
mov
rcr
gs
pop
xlat
pop
enter
cmpsl
adc
inc
push
adc
or
sub
jno
rclb
aam
add
mov
adc
faddl
mov
cld
adc
push
dec
nop
into
lahf
push
sbb
leave
dec
inc
mov
mov
dec
push
insl
dec
add
rol
dec
jbe
jns
cmpsl
ss
aam
fldl2t
jo
fstpt
fucomip
stc
cmp
test
fdiv
or
mov
dec
test
jle
stos
xor
or
aad
outsb
xchg
mov
push
lds
fnstcw
mov
jmp
add
mov
pop
imul
push
flds
popa
push
fxch
aas
and
lods
dec
lods
add
push
loop
into
mov
popf
mov
xor
xor
cmova
flds
or
xchg
lcall
mov
ljmp
mov
decl
cmpl
outsl
fcmovu
outsl
fisubrl
inc
mov
dec
out
sub
or
jecxz
dec
lret
cmp
cwtl
cmpl
mov
and
inc
add
enter
mov
dec
scas
repz
cltd
decb
js
mov
mov
ror
lea
int3
adc
mov
sete
pop
mov
xor
icebp
hlt
mov
loope
push
sbb
in
aaa
ds
jb
xchg
dec
cmp
jno
xor
insl
ret
mov
and
fbstp
pop
mov
test
inc
add
repnz
sbb
shrb
test
sbb
sbb
inc
ds
xchg
fstps
fimuls
lret
dec
xor
fistl
dec
daa
inc
cwtl
sbbl
cli
push
adc
or
insl
add
lret
rcrl
outsb
dec
jae
cltd
sbb
insl
mov
mov
and
dec
mov
cli
jno
je
add
cld
xchg
aas
add
pop
out
or
jns
cmp
repz
xor
xchg
aas
mov
jns
mov
push
or
push
xchg
movsl
std
mov
push
push
dec
lods
jp
clc
or
js
call
push
add
mov
pop
xlat
add
icebp
add
mov
lret
nop
jns
imul
add
iret
repz
cs
mov
xchg
and
shl
pop
sbb
jae
mov
ret
lods
sub
jg
pop
pop
adc
repz
mov
jmp
dec
pop
jae
sahf
call
push
cmp
in
in
das
ret
popf
xor
push
rorb
cwtl
jnp
sarb
fsubp
les
push
adc
mov
loope
push
jae
into
push
gs
cld
add
mov
mov
push
dec
sbb
loope
xor
cmpsb
sub
notb
cltd
pop
insl
clc
xchg
push
mov
mov
and
lods
js
and
sub
pop
add
adc
mov
aad
cltd
sbb
sub
xlat
push
pextrw
dec
xchg
mov
lcall
jnp
outsb
nop
insb
dec
lds
nop
sarb
jno
popa
xchg
mov
xchg
out
aaa
push
pop
mov
xor
in
sar
inc
jnp
cltd
add
aaa
pop
mov
lods
pop
or
xchg
or
sub
jae
cmp
pop
sahf
sub
cmp
and
test
ret
push
pop
xchg
fdivrs
sbb
or
dec
xchg
push
adc
push
dec
and
int3
or
add
sarl
lods
xchg
push
push
mov
jmp
or
stos
loopne
icebp
cs
pusha
add
xor
fidivs
arpl
cmp
psrad
dec
mov
inc
push
jge
leave
xor
iret
icebp
sbb
iret
mov
sbb
or
cmp
push
cmc
arpl
ja
xchg
ret
xchg
xchg
mov
xor
pop
sbbb
xor
movsb
cmp
addb
fmuls
pushl
mov
push
pop
outsb
fstps
daa
jno
adc
and
sub
clc
das
aaa
call
mov
lods
lock
push
mov
cmp
test
mov
stos
xchg
pop
mov
dec
or
sbb
jp
fiaddl
les
push
or
sti
xchg
cmpsb
loop
pop
lods
loopne
add
je
or
lock
pusha
scas
inc
fisttpl
pop
mov
xchg
cmp
movsl
ja
rolb
sbb
in
and
lret
pop
scas
popf
and
mov
stos
and
stos
sub
out
negb
out
clc
pop
mov
sti
stc
push
xchg
das
lods
xor
jo
mov
cs
inc
inc
inc
mov
lds
movsb
imul
dec
mov
ret
jp
and
jno
mov
inc
or
ja
adcl
add
mov
pop
mov
inc
lahf
cmp
leave
and
cwtl
dec
push
xorb
and
outsb
sub
pop
addb
and
jbe
dec
xchg
or
push
xchg
bound
inc
ljmp
insl
outsl
cmp
pop
lock
pop
jns
xor
xlat
jg
rcll
jne
add
jne
fwait
scas
jae
add
jle
mov
mov
cwtl
mov
shrb
je
jne
ror
add
sahf
repnz
xor
ja
dec
pop
xchg
cmp
sub
stc
push
fs
push
cmp
shll
arpl
test
mov
xchg
cmp
xchg
dec
mov
lea
enter
enter
xor
and
push
pusha
mov
inc
out
lea
aam
xor
add
into
sub
popa
dec
pop
shr
scas
and
shrb
and
test
stos
ror
jecxz
in
add
mov
add
repnz
cltd
lret
inc
jne
inc
ds
push
leave
cmpsb
ret
adc
sub
mov
and
ss
cmc
sbb
or
sti
push
cmc
ss
inc
pop
and
outsl
call
cmpsl
ss
add
das
insb
mov
fs
mov
lahf
sub
pop
jnp
pop
ljmp
push
sbb
push
icebp
fsub
inc
mov
loopne
test
cmp
stc
mov
repnz
push
sbb
mov
hlt
mov
decb
mov
cmc
lea
or
fnstsw
addr16
repz
imul
das
icebp
das
add
adc
rcll
xchg
inc
and
cmpsb
dec
movsl
cmp
jg
fs
pusha
shrl
push
jle
add
adc
sub
out
pop
inc
push
jns
pop
mov
jle
sbb
sub
iret
shll
xor
add
mov
add
mov
pop
stc
data16
jae
ret
mov
int
cmp
sbb
mov
mov
in
xor
pop
mov
mov
push
sbb
xchg
fnsave
and
popf
inc
nop
add
imul
lcall
shrl
pop
jle
adc
pop
mov
cltd
sti
mov
pop
xchg
pop
pop
jnp
cwtl
sarb
jp
jo
loopne
dec
or
lret
leave
movsl
lds
aad
orb
mov
cmp
cmp
mov
xchg
pop
jo
div
out
xor
clc
gs
sub
iret
les
jo
cmp
xchg
movsb
push
std
add
cli
insb
xchg
mov
inc
cmc
pop
call
cmp
or
data16
push
and
push
or
daa
add
inc
mov
mov
cmp
pop
in
lods
popa
lods
icebp
or
popa
andb
pop
decl
rolb
jne
sahf
adc
xor
insb
lds
nop
pop
loopne
ja
into
mov
roll
or
sub
imul
jns
jp
ja
pop
add
cwtl
sahf
mov
inc
divb
xlat
mov
adc
sahf
inc
push
int3
out
push
mov
flds
mov
push
fs
imul
mov
push
mov
jne
fildll
fnstcw
cwtl
pusha
hlt
ficoms
mov
inc
pop
out
rcll
push
imul
adc
inc
xchg
pop
sbb
iret
jp
rcrb
popf
mov
nop
roll
dec
jge
pop
sub
and
mov
stos
xor
decb
dec
or
lods
out
loop
sbb
fld
sahf
stos
pop
mov
mov
stos
daa
setno
lahf
test
jmp
roll
mov
pop
lods
xchg
mov
sti
pop
inc
add
je
sub
inc
clc
dec
popa
sbb
loopne
ret
je
lods
jecxz
in
ljmp
insb
pop
insb
dec
adc
pop
sub
aas
sbb
test
sub
incb
int
push
mov
lock
data16
mov
dec
inc
bound
mov
sub
pop
jp
lods
rcrb
lret
and
data16
adc
jmp
push
add
into
inc
push
out
loopne
bound
out
sbb
addr16
int3
or
jo
push
or
adc
jno
mov
test
dec
icebp
add
add
pop
stc
dec
insb
jae
mov
xor
pop
mov
inc
test
inc
imul
imul
mov
movsl
les
stos
loop
cmp
sub
fwait
ret
cmp
loope
cmp
movsb
roll
jg
repz
mov
bound
mov
movsl
cmp
mov
mov
push
xlat
dec
cwtl
pop
sbb
jle
and
xchg
dec
mov
imul
push
outsl
xor
test
mov
jb
jl
movsb
pop
mov
addr16
jb
aas
pushw
inc
lcall
sub
mov
cmp
pop
sarw
es
adc
or
out
jmp
aas
mov
push
and
sbb
imul
fsub
in
xchg
shrb
and
push
cmpb
subb
push
sahf
or
cmp
cmp
rcl
or
fldcw
fcoml
mov
cmpsb
mov
xchg
sbb
or
cmp
pop
inc
dec
dec
int3
xor
jno
fdivs
sbbl
dec
and
push
push
inc
lret
sub
push
lret
lods
sbb
lret
add
mov
inc
dec
dec
jb
push
push
pop
inc
add
jp
cwtl
test
stos
ja,pn
lret
enter
jb
movsl
lret
cmpb
push
lock
mov
dec
add
add
mov
xchg
cltd
shlb
mov
test
addr16
sub
aad
mov
xchg
enter
xchg
addr16
xchg
pop
xchg
loopne
mov
adc
xchg
xor
xchg
sbb
aas
mov
je
inc
popw
cmp
dec
pusha
xchg
sub
xor
lcall
in
es
mov
rclb
fsts
mov
repz
ss
aad
cmp
inc
gs
dec
sti
call
lcall
repnz
xchg
es
push
sub
jmp
sbb
mov
push
dec
xor
std
xor
xor
xchg
add
ljmp
cli
mov
push
inc
inc
mov
mov
add
nop
and
nop
insb
and
pop
mov
mov
data16
aad
add
push
pop
jge
add
add
in
inc
inc
mov
push
or
inc
test
mov
addr16
inc
repnz
mov
jnp
fildl
jne
in
int3
mov
rorb
out
push
icebp
ret
adc
sbb
sub
std
insl
test
aaa
or
daa
pop
sbb
lds
push
mov
jmp
testb
or
in
jo
movsl
cmc
add
inc
xorl
sub
test
mov
out
inc
fs
pop
push
push
mov
loope,pn
je
xchg
mov
les
sub
adcl
leave
mov
and
mov
inc
jp
mov
scas
add
cmpsl
fdiv
popl
mov
mov
clc
lea
imul
sub
lret
shlb
xchg
jno
in
mov
stc
negl
sub
pop
add
call
and
and
movsb
imul
test
insl
jns
inc
push
mov
jns
das
add
ljmp
pop
xor
jp
pop
mov
jb
daa
or
imul
outsl
test
lock
addr16
fcomps
sbb
push
call
das
or
outsl
jmp
cmp
out
scas
jo
jg
adc
sub
lds
add
arpl
mov
jbe
mov
into
xchg
fdivp
rcll
out
lcall
push
gs
inc
push
call
add
loopne
shrb
shll
sbbl
jmp
mov
dec
insb
in
xchg
inc
adc
push
mov
loop
lds
dec
rclb
mov
inc
adc
push
sub
add
lea
mov
xor
out
push
out
ss
data16
xchg
and
mov
aad
mov
lret
mov
mov
imul
pop
sbb
sbb
pop
call
int
cmpsl
xchg
xchg
repz
js
call
outsl
data16
popa
or
mov
adc
mov
jno
repnz
cli
cs
mov
fiaddl
add
mov
xor
negb
jno
sti
jb
mov
out
fstl
push
jns
sahf
push
popa
lods
fisttps
sub
and
ficomps
push
xor
pushf
mov
mov
dec
sti
or
push
cmp
cmp
bound
and
ret
dec
outsl
mov
mov
loop
adc
scas
and
out
push
xorb
call
lahf
jbe
and
sub
xchg
sub
lods
test
mov
stc
cmp
aaa
adc
outsl
and
mulps
sbb
pop
or
cmp
and
dec
cmp
xorl
sbb
pop
adc
leave
dec
mov
movsb
xchg
or
mov
push
push
lods
pop
jbe
ds
lock
lock
inc
xor
mov
adc
or
fwait
mov
je
call
stc
lret
jmp
add
inc
loope
faddp
push
dec
repz
std
mov
jb
add
sbb
out
pop
add
mov
out
imul
daa
lret
movsl
icebp
aaa
mov
push
push
in
jge
mov
fimull
rcll
jbe
push
out
pop
pop
sub
sbb
scas
outsb
and
scas
adc
dec
sub
into
mov
or
fwait
ljmp
sbb
cmp
adc
fimull
pushf
fidivl
mov
mov
loop
mov
addr16
imul
pusha
dec
out
mov
rcl
xorl
popf
rolb
xchg
fwait
dec
add
jge
loope
jns
mov
pop
xor
and
sub
shlb
mov
xchg
inc
fiadds
adc
mov
cmp
dec
sbb
fisttpl
mov
xchg
mov
add
inc
andl
loop
and
mov
and
mov
sub
mov
iret
incb
inc
aaa
mov
jne
push
fs
jge
movsb
das
inc
fidivl
xchg
adc
mov
or
into
sbb
add
sbb
jmp
icebp
pushf
mov
cmpsb
add
es
adc
dec
sub
sbb
pop
orl
clc
fcoms
mov
cmpsb
loop
jmp
xor
push
fadds
leave
push
sti
fcoml
or
negb
int
dec
ret
js
inc
and
imul
adc
lock
sbb
mov
fwait
dec
and
fwait
adc
roll
cltd
call
icebp
mov
push
dec
fnstcw
adc
mov
adc
lock
mov
inc
sbbl
lret
or
lret
call
outsl
mov
jge
push
sub
push
fidivs
insl
int3
inc
and
jnp
mov
inc
sub
lds
loopne
cmp
cmc
js
ret
in
imul
mov
inc
mov
mov
lcall
add
inc
iret
mov
fsubs
jg
sub
adc
adcl
sub
lahf
jb
inc
das
push
cwtl
mov
add
cmpsb
push
push
cli
or
dec
sbb
idivl
test
lock
loop
data16
add
xchg
cmpsl
push
mov
xor
shl
repnz
in
push
sbb
jae
or
inc
xchg
fwait
call
sar
sbbb
mov
jae
and
push
cmp
jecxz
je
xchg
push
sub
cld
shl
icebp
jnp
aaa
add
mov
mov
clc
leave
fisubrl
out
adc
adc
pop
push
stos
xor
cmp
test
pop
repnz
cmp
dec
insb
jne
loope
lods
inc
mov
xchg
inc
mov
sub
pop
mov
or
stos
neg
push
mov
scas
ds
xor
lods
cmp
repnz
aad
ja
jno
lcall
mov
sti
bound
inc
ss
loope
jecxz
sbb
and
data16
and
and
inc
jg
xchg
dec
and
and
jne
lock
adc
outsl
and
sarl
lcall
sarb
xor
add
mov
aad
jmp
pop
and
push
jae
jp
mov
pushf
xor
idivl
dec
jo
jg
cmc
loope
cwtl
xchg
out
repz
clc
add
pop
mov
into
popf
test
mov
push
test
jns
es
out
scas
mov
jmp
lahf
aad
in
jl
icebp
fidivl
pop
mov
mov
aas
pop
lods
mov
push
into
and
sub
cld
push
fidivl
stos
and
dec
popf
sub
int3
push
ss
hlt
push
mov
imul
sub
addr16
js
cmp
sbb
push
mov
mov
addr16
loope
inc
cs
frstor
out
jns
cmp
pop
xor
out
cmp
popf
mov
std
in
xchg
les
fwait
lcall
add
out
shll
xchg
add
mov
xchg
std
pop
fnstcw
les
mov
mov
mov
shlb
dec
loopne
stc
add
cmp
sbb
push
sarb
dec
int
into
rol
or
outsb
mov
cwtl
jno
push
fs
or
pop
cltd
sarb
pop
sub
or
sub
fwait
testl
mov
push
inc
or
dec
pop
push
mov
aad
fxch
shll
rcrl
popl
hlt
cmc
rcrl
cmp
cs
push
cld
shr
pop
or
add
jne
xchg
repz
dec
orb
lods
pop
xor
xchg
jae
pushf
je
shlb
cmpsb
push
pop
pop
and
adc
xchg
fstpt
lds
bound
adc
ret
add
dec
enter
mov
lods
mov
sbb
imul
inc
and
data16
mov
jo
mov
and
out
rcl
aam
adc
lahf
or
mov
or
push
pop
insb
sub
popa
insl
inc
sti
cwtl
faddl
bound
sbb
xchg
aam
push
daa
mov
mov
outsl
xor
nop
jne
sti
mov
jmp
push
pop
jecxz
sbb
hlt
cmp
inc
pop
pop
cld
push
icebp
in
pop
rcl
mov
in
aam
ror
fs
xchg
enter
jb
xor
push
and
outsb
mov
loopne
xchg
fwait
lods
aas
jp
add
adc
outsl
negb
xor
mov
jle
inc
into
xchg
cwtl
cmp
inc
dec
pop
adc
add
mov
push
mov
mov
push
fisttpl
push
mov
loop
push
pushf
sub
aaa
hlt
xor
jne
xorb
sub
iret
repz
mov
or
sbb
cmp
adcb
push
iret
lret
call
outsl
mov
inc
inc
or
push
lret
or
adc
cld
mul
and
xchg
lds
adc
mov
or
call
iret
cmp
adc
dec
lock
ficomps
inc
dec
mov
outsl
stos
stc
sahf
dec
lcall
aas
mov
mov
clc
mov
fiadds
out
leave
js
lods
pop
xchg
push
int3
cmpsb
inc
arpl
mov
ja
into
sub
call
push
xchg
packuswb
out
add
inc
scas
adc
shr
outsl
jl
hlt
cmpsl
stos
pop
aam
outsl
mov
and
add
inc
inc
popf
lret
mov
pop
push
dec
mov
fcompp
cmpsl
mov
stos
div
fstpt
xchg
xlat
inc
pop
inc
test
xchg
test
and
jmp
pop
mov
mov
adc
cmp
adc
jmp
stos
lahf
rorl
xor
in
xchg
pop
daa
jo
call
test
shr
inc
insb
mov
and
rorl
dec
cmp
push
pop
jne
push
sbb
mov
movsb
mov
push
int3
fldcw
leave
mov
and
test
pop
and
fcompl
mov
ljmp
mov
iret
lahf
inc
jp
adc
in
neg
mov
popf
cmpsb
jp
andl
xor
in
cmp
jne
aad
bound
cwtl
out
popf
shlb
cmp
add
test
fdivl
push
cld
std
adc
and
mov
fcomps
jb
mov
adc
mov
sbb
push
ja
fisubl
sbb
movsb
jp
sbb
add
adc
sub
push
dec
xor
sti
lret
xchg
adc
repnz
jecxz
jbe
jne
call
add
jne
mov
mov
sub
push
dec
xchg
mov
push
sub
imul
or
pop
test
int3
ret
jl
repnz
pop
adc
lods
add
insb
inc
xchg
xchg
jecxz
aam
sahf
mov
push
arpl
push
pop
inc
add
xor
enter
push
pusha
shlb
push
dec
push
daa
and
ja
adc
mov
push
in
lods
push
add
rcr
sub
ljmp
xor
cltd
jge
shlb
fcomps
in
mov
in
stos
and
ret
push
int
pop
xchg
pushf
ror
inc
mov
stos
xor
and
test
ret
pop
mov
cmp
and
xchg
or
dec
pusha
daa
fdivl
data16
cmpsl
jmp
nop
xor
pop
idivb
andl
sub
out
int
push
ss
inc
inc
mov
jg
push
inc
or
ret
jns
call
dec
xor
imul
lret
popf
pop
rorl
mov
mov
inc
mov
xchg
xor
jg
xor
sti
aad
mov
dec
mov
xchg
popf
or
mov
xor
mov
xlat
sub
cmp
mov
and
orl
sbb
or
cltd
sti
daa
mov
and
xchg
cs
fs
pop
scas
xchg
daa
jle
negb
jle
mov
mov
push
xchg
idivl
notl
sub
fistps
test
gs
or
cli
adc
test
cmp
mov
pop
clc
fiaddl
std
sbb
mov
mov
fildll
cmp
cmp
jbe
cmc
popa
xchg
add
lods
shlb
daa
mov
shlb
std
fisubs
push
std
jae
ljmp
ljmp
cmp
movsl
in
shll
int3
test
push
shl
xchg
pusha
cmp
fidivrs
mov
imul
fstps
lods
out
dec
pop
or
stc
gs
pop
jbe
adc
lock
in
xchg
sbb
lret
pop
das
dec
les
stos
dec
fs
testl
ret
shlb
ss
or
in
mov
cwtl
fld
and
pop
int3
dec
call
mov
dec
mov
mov
pop
cmp
add
jmp
sbb
ficoml
xchg
jnp
push
insl
adcl
mov
mov
xchg
cld
jno
mov
or
movsl
outsb
push
adc
cmp
lock
push
in
mov
jo
or
adc
xor
sub
xor
jns
sarb
lods
movsl
xchg
jb
xchg
jno
dec
call
inc
addl
pusha
stos
jb
sub
add
xor
jnp,pt
sbb
in
sub
testl
int3
jmp
pop
xor
lret
sub
push
fwait
sbb
adc
sti
jne
in
and
dec
or
push
dec
into
rcr
int
orb
jp
popa
call
jae
inc
sti
or
ljmp
xor
aad
pop
mov
and
jns
mov
loope
and
lods
mov
nop
outsb
mov
and
notb
std
rcrb
pop
leave
icebp
subb
mov
jnp
mov
je
mov
adc
es
pop
and
in
stos
insl
dec
mov
sahf
adc
cmp
test
mov
and
sbb
mov
imul
in
dec
and
aas
jnp,pt
pusha
and
mov
push
sbb
adc
dec
jl
mov
repz
daa
add
push
and
sbbl
inc
pusha
sub
lods
rcl
fstpl
mov
mov
movsb
pop
imul
mov
les
cld
pop
push
scas
sbb
jns
ret
adc
sbb
jnp
int
xchg
movsl
add
push
xchg
dec
cmp
stos
adc
push
orl
lods
push
xor
sbb
imul
xchg
push
inc
imul
or
dec
cmpsl
pushl
in
fdivrs
clc
scas
xchg
lcall
imul
sub
repnz
das
cmp
pop
loope
or
pop
sub
and
xchg
scas
testl
xchg
adc
adc
popf
ds
inc
pop
jnp
pop
push
mov
aam
call
push
xor
lcall
mov
push
xchg
mov
adc
xchg
js,pt
bnd
lahf
mov
aad
xchg
cli
mov
cmpsl
mov
and
iret
mov
jb
cmpsb
inc
cmp
adc
scas
mov
cmp
lods
sub
cld
pop
mov
mov
mov
xchg
xor
pop
iret
mov
jl
push
adc
ret
xchg
loope
sub
add
jae
mov
jle
or
int
or
push
stos
dec
clc
mov
addb
scas
std
sti
test
pop
ljmp
sbbl
sbb
mov
xor
das
subl
push
arpl
movsl
in
push
lods
fcompl
out
push
jno
cmc
rolb
int
setne
mov
jmp
push
aad
aas
ja
ds
mov
and
lods
je
cmp
cmp
fldt
or
cwtl
ret
pop
mov
pop
movb
stos
and
repz
insl
pop
dec
negl
jnp
jne
add
ret
lock
call
xchg
js
or
shlb
inc
push
xlat
repnz
dec
outsl
dec
stc
insl
jb
dec
std
lods
popa
push
lret
lcall
sarb
dec
sub
inc
jb
or
inc
int3
jns
call
mov
xchg
sub
add
cmp
scas
add
fdivl
push
outsl
movsb
or
push
adcb
inc
jns
mov
call
cmp
out
pop
mov
in
add
jl
ret
mov
insb
pop
bswap
aaa
dec
dec
leave
or
push
push
mov
bound
sbb
insb
clc
in
test
and
pop
cmc
imul
fldenv
call
fistpll
pop
cmp
les
cltd
jg
scas
xchg
or
push
aaa
and
push
jg
loope
sub
ret
inc
out
lcall
mov
xor
adc
pushf
cmp
orl
out
fadds
lret
fisttpll
jge
fsubrl
push
popf
into
inc
jle
mov
push
xlat
pop
lcall
xchg
add
push
mov
push
ds
push
leave
push
jne
dec
xor
gs
sahf
inc
pop
sub
mov
movsl
sub
out
sbb
lret
xchg
mov
sti
mov
lret
mov
mov
fucom
xor
push
and
or
mov
xchg
xchg
stc
fsubr
push
mov
lcall
cmc
or
pop
xlat
dec
xchg
xor
test
mov
testl
inc
aas
pushf
jecxz
and
xor
lds
lods
inc
push
pop
ret
jle
inc
movsb
js
in
cmp
push
sbb
stos
sarb
sbbb
or
in
sub
mov
adc
xchg
xor
mov
pushl
les
scas
and
out
hlt
add
mov
cmp
inc
and
mov
mov
jg
in
xchg
cs
push
cmc
sbb
loope
push
adc
repz
push
adc
hlt
inc
add
dec
mov
popf
test
repz
cmovbe
lret
scas
or
pop
les
rorl
jnp
je
test
and
test
cmpsl
xchg
pop
leave
fsub
aas
xor
fildl
cmp
popa
das
add
mov
shlb
js
xor
xor
ljmp
bound
leave
xchg
xor
xchg
int3
adc
pop
dec
push
lret
xchg
or
aam
loope
scas
pop
dec
inc
adc
test
and
cmc
out
jmp
push
or
lock
fstl
bound
xor
cld
mov
loop
shrb
mov
or
sbb
movsb
or
xchg
inc
sub
jns
xor
push
cmc
sub
daa
and
pop
fisubs
add
cmc
fsubrl
pop
xor
test
push
pop
lret
mov
xor
int
xor
enter
out
out
int
das
aas
mov
sbb
dec
or
pop
cmc
mov
add
cmc
inc
cmp
push
stos
xchg
and
ret
sub
add
jbe
fwait
ja
mov
lock
push
aaa
subb
into
loopne
add
ret
sbb
mov
movb
jns
stos
xchg
and
adc
test
idivl
push
mov
lea
cmp
movsl
xor
std
push
lea
mov
stos
leave
jmp
mov
in
lods
fldcw
jmp
jmp
add
xchg
and
cmp
scas
lret
call
lods
ja
aad
shll
daa
xchg
arpl
push
jg
fs
ss
fildll
cltd
jnp
stos
arpl
loop
or
xor
out
jge
int
mov
int
popa
insb
gs
ret
push
cltd
jnp
mov
in
jmp
insl
cmpl
mov
int
inc
pop
pop
ret
or
dec
loopne
mov
push
mov
and
hlt
gs
inc
cmp
js
jb
arpl
lods
outsl
push
daa
out
and
cmpsb
push
push
pusha
gs
or
or
fstl
add
push
imul
aaa
enter
push
pop
in
sti
mov
mov
mov
test
mov
xorb
xor
adc
xor
stos
lods
aam
mov
xchg
xchg
xor
mov
jb
adc
daa
adc
pop
cmpsb
sub
cmp
inc
pop
pop
je
jns
movsb
inc
jge
or
push
and
add
mov
arpl
pop
mov
outsb
xchg
mov
push
sub
xor
mov
bound
call
scas
imul
and
jae
fwait
popa
dec
mov
pop
jle
imul
or
call
cmp
cld
jne
xor
subb
test
xchg
sar
ds
xor
shll
and
xchg
es
hlt
mov
das
pop
cmp
dec
sbb
lods
jge
into
test
bound
jge
test
rolb
add
mov
hlt
jp
pop
or
orb
pop
sub
mov
cmp
imul
or
insb
add
aas
stc
jae
and
dec
sub
adc
xchg
and
add
pop
adc
dec
cmpsl
addr16
adc
sbb
xor
dec
lods
mov
adc
sub
int3
cmp
gs
in
jae
jo
pop
shrb
aas
fisubs
std
lcall
rclb
cmpl
mov
push
inc
sbb
xchg
icebp
adc
adc
mov
xlat
pop
hlt
mov
test
push
sub
in
fldenv
pusha
push
jno
ja
xchg
adc
xchg
sti
sub
movsl
jae
pop
addb
loop
xchg
cmpb
or
rclb
jnp
xchg
insb
pop
xchg
repz
sub
lea
sbb
sub
cltd
out
cs
dec
jmp
mov
jecxz
rcrb
outsb
bound
outsl
dec
jge
pop
shll
or
and
insb
fwait
shl
adc
xor
ror
mov
adc
xor
pop
lret
jecxz
push
xor
aas
aaa
mov
inc
inc
fildl
scas
add
data16
push
leave
mov
cwtl
mov
test
xchg
pop
mov
mov
sbb
bound
scas
mov
jmp
dec
icebp
inc
sub
dec
push
scas
dec
outsb
add
xor
pop
add
mov
inc
add
inc
push
iret
cltd
lahf
rcr
sbb
dec
pop
push
pop
xlat
arpl
dec
push
out
mov
into
add
jae
jecxz
test
int3
fstp
jne
xchg
and
subl
push
sub
xchg
ds
inc
xor
mov
add
imul
push
push
mov
add
mov
cmp
dec
adc
jp
dec
les
into
sbb
mov
adc
cmc
bound
inc
sti
xchg
pop
sub
int3
pop
pop
push
jne
cmc
jge
aam
sub
into
ja
dec
mov
in
aas
mov
sub
sub
insl
test
cli
loope
dec
push
sti
dec
sbb
outsb
xlat
iret
or
pop
pop
rolb
mov
mov
dec
and
xchg
jg
add
aaa
pop
cs
in
test
filds
sub
mov
stos
sub
dec
add
sbb
jno
mov
xor
dec
push
mov
sarl
or
cmpsb
or
in
xlat
and
jp
push
das
repz
xor
mov
fs
or
xor
in
decb
fiadds
cwtl
lods
cmp
jne
pop
cmp
or
and
mov
cmp
hlt
punpckldq
dec
in
lcall
dec
sarl
aad
cmp
pop
mov
inc
xchg
jmp
dec
out
xchg
push
xor
nop
jnp
pop
popf
popa
lahf
add
or
sub
popf
inc
mov
shr
inc
pop
push
outsl
mov
and
mov
xchg
adc
ret
rolb
sbb
lret
arpl
in
mov
jns
xchg
repnz
pushl
jnp
xorb
jge
fs
lahf
dec
lret
and
imul
add
jg
push
adc
jmp
std
mov
jo
shlb
add
das
aam
fisubl
pop
xchg
repz
lahf
lret
push
pop
movsl
sub
ds
dec
js
test
dec
fistpl
cmp
fadds
jmp
shlb
xchg
lods
push
xchg
cmp
or
mov
pop
and
mov
into
adc
aaa
hlt
mov
das
clc
mov
in
in
xor
sbbl
cmpl
iret
pusha
add
pop
inc
out
pushf
cmc
rcrw
sub
inc
pop
popf
inc
imul
loop
ret
xchg
adc
dec
sbbl
sub
leave
in
repz
stos
push
push
mov
aad
in
push
ret
cmpsb
dec
xlat
mov
enter
ret
imul
pop
test
jne
aaa
mov
xlat
xchg
adc
xor
sbb
lret
sub
pop
inc
mov
cmp
ja
sbb
add
je
pop
and
mov
out
mov
movb
pop
cmp
lcall
test
xor
xchg
push
out
adc
or
pop
addr16
mov
sbb
icebp
jo
mov
pop
mov
or
and
push
loop
pusha
leave
adc
sbb
sti
insb
jns
xchg
pop
lret
scas
jne
cvtpi2ps
js
aad
int3
in
lcall
sti
pop
fbstp
push
dec
inc
mov
movsb
jecxz
adc
jae
addr16
xor
dec
sbb
or
xor
arpl
out
mov
dec
rcll
dec
pop
outsb
sub
dec
sbb
mov
cmpsl
or
cmp
fisttps
scas
idiv
dec
loop
aam
loop
stc
adc
xchg
xchg
cmpsb
push
or
insb
mov
sub
lret
jb
mov
in
jo
mov
orl
call
xor
sarl
jle
pusha
xchg
cmp
or
mov
or
out
sub
rorb
cmpl
cmp
push
mov
add
or
aas
xchg
push
jecxz
repnz
sbb
idiv
and
jno
adc
lds
jbe
aam
js
inc
inc
mov
jp
lahf
aam
mov
cmpsb
lret
imul
fidivs
test
add
lock
shrb
sub
xchg
add
sub
rorl
iret
test
sbb
jge
pop
jmp
leave
or
add
mov
fcompl
idivb
mov
lods
push
ret
cmpxchg
mov
inc
stc
rcll
data16
push
add
out
and
jns
ficoml
notb
outsb
cmc
push
leave
and
mov
inc
inc
xor
xchg
push
xrelease
repz
pushl
in
add
pop
fucomip
adc
xor
and
push
cmp
fs
add
or
add
jbe
ret
cmp
cli
scas
mov
js
lret
inc
add
push
jge
sbb
shll
clc
sub
pusha
in
pop
repz
or
iret
aaa
mov
push
daa
rcr
gs
fsubl
daa
jg
adc
sub
or
cmp
and
test
dec
or
or
cmpsb
clc
je
dec
pusha
daa
call
aaa
adc
js
rcl
sbb
imull
sub
xchg
mov
fiadds
xor
lods
pop
add
stos
and
xorl
cmpsb
add
icebp
or
popl
pop
in
push
pop
fidivs
or
push
sub
xor
sbb
int3
push
xorb
repz
pop
jl
test
loope
xchg
cmc
inc
in
jmp
hlt
push
jg
jl
jl
push
or
imulb
fstpt
mov
les
mov
cmc
inc
insl
in
cmp
pusha
cmp
fs
jbe
mov
and
or
sub
add
inc
and
aas
outsl
pusha
sbb
dec
out
sbb
scas
loopw
xlat
inc
fdivrs
ja
aaa
adc
in
mov
hlt
pop
clc
push
inc
rol
shll
pop
cwtl
cmp
in
xchg
mov
daa
and
fxsave
pop
mov
test
movsl
cs
test
in
push
dec
aad
out
cwtl
fidivs
dec
jg
inc
rcrb
jl,pn
pop
xchg
aam
mov
adc
subb
test
rolb
push
mov
push
xchg
dec
mov
inc
pop
cld
pop
dec
dec
dec
mov
cmp
sub
add
cli
add
push
sub
sti
push
jo
cmc
and
xchg
push
add
jnp
mov
jo
jb
sub
lods
fildl
push
add
mov
in
sbb
add
shll
sbb
or
sahf
pop
sahf
es
js
lds
fnstcw
add
int3
stos
outsl
dec
cwtl
mov
jle
inc
fists
bound
in
ljmp
mov
xlat
mov
lcall
ss
add
lea
mov
jns
xor
mov
test
lcall
xchg
pop
cmp
push
mov
mov
or
bnd
in
icebp
addl
imul
and
out
push
addr16
popf
jmp
xor
insl
scas
jno
add
aad
add
add
mov
std
push
leave
loop
push
fistps
insl
call
in
sti
add
and
jecxz
fcomi
fdivl
rol
mov
and
bound
cmp
shr
mov
fstpl
sub
add
or
mov
or
sub
dec
push
mov
pop
sub
jnp
mov
mov
insl
loope
jp
fwait
push
mov
xchg
push
mov
std
scas
pop
enter
dec
xor
mov
cmp
mov
xlat
push
jno
pusha
in
cmp
test
add
mov
clc
xchg
push
lods
sarl
fsubp
mov
out
mov
add
add
lahf
xor
test
rolb
cmp
inc
loop
add
stos
pcmpeqw
iret
in
stos
shl
shll
mov
aad
cmp
ja
mov
stc
imul
xchg
das
iret
inc
cwtl
push
jo
xchg
push
idivl
pop
push
and
sub
je
xor
jmp
sti
test
mov
add
adc
mov
mov
ds
push
stos
mov
pusha
pusha
in
popf
jno
push
add
sbb
into
aaa
cltd
cwtl
fwait
fwait
call
mov
lds
andl
decl
ja
inc
mov
mov
shlb
and
jmp
jbe
daa
addr16
scas
pop
inc
xchg
pop
cmp
xchg
out
mov
sub
sbb
js
clc
lods
andl
rol
stos
in
nop
imul
push
in
cltd
mov
sbb
data16
adc
lea
cmp
loope
data16
lea
pop
ljmp
pop
jl
into
push
ficoml
fisubl
mov
jae
stos
fs
mov
cmp
adc
jg
ja
xlat
inc
cmp
lods
inc
test
sub
popf
not
xor
in
lods
mov
divb
mov
hlt
push
sbb
push
imul
loopne
loope
movsb
jno
into
sub
sub
fmuls
xchg
sbb
push
inc
xlat
ds
sub
sub
mov
and
cld
push
int
pop
cwtl
or
pop
sbb
jns
out
dec
adc
loop
pushf
fdiv
xor
cmp
popf
insl
mov
xchg
lds
addr16
scas
insl
pop
xchg
push
stos
jmp
movl
mov
loope
xor
sub
mov
jno
add
or
pop
loope
mov
out
push
jnp
xchg
and
inc
lahf
xchg
add
loopne
cmp
in
cltd
in
test
nop
push
pop
mov
xchg
subb
xchg
aad
outsb
mov
data16
clc
mov
sub
pushf
inc
dec
cmp
cmpsb
andl
aas
cli
pop
cmp
ret
scas
mov
add
xor
mov
lret
push
adc
push
jp
fcomps
sub
scas
scas
dec
mov
sub
mov
jl
fistps
lret
es
test
add
bound
leave
pop
dec
push
pop
push
leave
hlt
std
push
mov
adc
push
out
or
cltd
data16
dec
fnsave
mov
ficoms
out
insb
test
xchg
jl
loop
adc
cmp
xchg
adc
pop
mov
fs
sub
pop
pop
dec
sar
inc
dec
pop
and
inc
push
inc
push
daa
jnp
ret
pop
mov
les
cs
inc
lcall
xchg
mov
test
lahf
and
sub
pop
push
push
mov
adc
test
shlb
lcall
mov
mov
inc
cld
xlat
inc
sbbb
add
in
inc
pop
jle
das
mov
dec
jmp
nop
lods
ljmp
pop
sbb
pop
cmpsb
int3
das
pop
mov
pushf
mov
pusha
jecxz
adc
iret
add
inc
and
or
jno
aaa
out
ret
stos
ja
loope
clc
lods
mov
mov
aaa
stc
lret
arpl
aaa
push
mov
insl
insb
or
cmp
cmc
fwait
cmp
and
adc
nop
enter
fcomp
inc
xor
es
cmp
and
xor
pusha
pop
adc
xlat
xchg
data16
mov
gs
inc
push
mov
sub
push
std
mov
xchg
es
mov
cmp
in
cwtl
push
sbb
in
outsl
push
fchs
push
mov
mov
cmp
pushf
xlat
dec
mov
dec
jno
aam
mov
push
mov
inc
in
cmc
ret
push
out
in
movsl
pop
mov
xor
push
xlat
jae
mov
pop
pop
fiadds
mov
jns
dec
pop
out
inc
iret
jle
iret
scas
xlat
xor
out
notl
jb
jo
rol
icebp
outsl
hlt
push
mov
or
sbb
push
cmpsb
xchg
jmp
push
pusha
push
sbb
jp
notb
push
mov
ja
icebp
pop
test
shrl
xchg
test
incl
fs
aad
fldenv
arpl
sub
cld
out
adc
pushf
idivl
ss
arpl
out
mov
mov
fistps
mov
in
cmp
popa
sbb
jnp
cli
lahf
insb
mov
das
pop
fcmove
scas
push
cmpsl
test
dec
ficoms
jg
loope
jo
int
push
scas
fisubrl
and
pop
fisttpl
leave
inc
jl
sub
out
stos
lcall
xor
inc
inc
and
mov
xor
mov
dec
stos
aam
dec
pop
fwait
pop
clc
cmp
pop
je
mov
inc
mov
dec
aad
out
and
or
xor
insb
test
nop
in
cli
dec
call
inc
lods
sub
lods
inc
rol
subb
pop
sarb
push
cmc
or
shrb
inc
xor
jo
mov
or
jle
pushf
das
cld
inc
xor
pushf
jmp
shll
test
push
xor
int3
popf
dec
popl
cwtl
add
adc
mov
jge
inc
outsl
inc
cli
sbb
jmp
inc
call
gs
popf
push
int
fisubrl
mov
repz
sbb
test
shlb
or
xchg
mov
jo
gs
gs
jecxz
rclb
inc
sbb
jae
popa
sub
lock
fsubl
sbb
jle
sub
mov
in
mov
push
inc
and
cmp
xor
gs
mov
push
fisubl
je
subl
int
sbb
aas
xchg
sub
pop
xor
add
ret
neg
mov
xchg
xchg
andl
add
jp
jge
mulb
xor
mov
ja
mov
popf
jg
popf
jmp
mov
orb
push
fnstsw
mov
jmp
mull
mov
ret
lds
dec
cmpsb
jae
push
add
rolb
sbb
ret
adc
js
je
nop
pop
cmpsl
pop
mov
xchg
push
mov
push
fs
xor
sub
fs
test
jmp
sahf
inc
dec
jo
xchg
mov
or
cmpsl
mov
ficoms
sub
cs
fdivp
clc
cmpb
shll
in
arpl
fcmovnbe
lcall
sub
iret
stos
hlt
enter
loopne
pushf
out
dec
jns
fdivrl
mov
pop
and
cmpsb
xlat
cmpsl
cmp
pop
stos
adc
cmpsb
sub
mov
mov
pop
insb
adc
sbb
int
mov
mov
bound
mov
mov
cltd
or
subb
add
cmpsl
mov
fsubs
test
adc
ljmp
push
pmulhw
js
scas
scas
or
add
push
pop
push
add
in
lods
pop
les
outsb
shl
sbb
iret
adc
sbb
nop
add
jae
adc
xchg
jbe
lock
xchg
ret
xor
fnstsw
dec
mov
push
and
pop
pop
sbb
pop
push
repz
cld
loop
or
jecxz
push
pop
inc
icebp
cmp
leave
and
sar
jne
sbbl
add
pop
adc
add
xchg
aam
push
add
repnz
lcall
lock
dec
pop
add
loope
jge
stos
pop
mov
inc
jno
dec
cmp
cmp
pop
lret
mov
loop
sahf
and
mov
lea
and
ror
icebp
faddl
mov
int
rclb
cmp
fnstenv
jmp
dec
cmp
loop
std
add
lock
ficompl
shrl
mov
in
addb
fwait
push
shll
out
mov
or
jo
dec
cmpb
daa
ljmp
push
lahf
mov
jecxz
mov
int3
movsl
inc
push
xchg
bound
stos
pushf
inc
mov
mov
fistpl
push
in
lods
adcl
and
iret
sbb
or
out
shrb
jo
or
inc
push
push
enter
push
rcrl
icebp
cwtl
adc
repnz
xchg
loopne
mov
lcall
inc
adc
out
std
daa
xchg
data16
movsl
inc
push
cmp
mov
mov
sarb
pop
sub
sbb
test
out
fbld
jns
mov
fisubrl
sbb
es
ficoml
imul
push
clc
xor
sub
and
test
mov
sub
xor
jno
push
jp
ds
xchg
inc
xchg
ljmp
mov
imul
add
xchg
in
mov
in
dec
out
sub
movsl
enter
pop
push
repnz
dec
sbb
xor
and
rcr
sbb
ficoms
out
mov
adcl
adc
or
test
pop
sbb
fwait
mov
or
jmp
mov
adc
xchg
arpl
clc
mov
and
lds
cmp
xor
dec
or
cmp
cmpsb
aas
push
sub
sbb
adc
lods
push
mov
in
lret
push
repnz
mov
mov
test
int3
lret
sbb
sbb
mov
sub
cmp
leave
cli
scas
mov
mov
mov
add
aad
pop
mov
sub
push
fsubrl
push
rclb
fistpl
dec
xlat
jne
inc
ret
dec
xor
cmp
out
jp
xlat
jbe
mov
push
insb
mov
add
imul
and
inc
frstor
and
movsb
dec
cmc
repnz
rcrb
ss
pop
adc
aaa
xor
iret
push
stos
jne
xchg
cmc
xor
fucomip
movsl
or
xor
or
sbb
jno
sbb
cltd
movsb
das
xchg
adcl
mov
jmp
cld
ja
cmp
imulb
xchg
notl
jno
mov
add
and
scas
push
mov
mov
jno
icebp
iret
jecxz
xor
cs
imul
xchg
mov
xchg
mov
loope
mov
ljmp
out
push
xchg
int
jmp
sti
mov
idivb
sbb
inc
jo
test
xorl
popf
pusha
push
pop
rcl
mov
aad
pop
pop
aam
loopne
inc
adc
js
cmp
push
inc
push
pop
aaa
xor
xlat
cmp
push
das
movl
nop
mov
das
loope
add
add
stc
in
adc
push
inc
jl
ljmp
aam
jp
into
xchg
jnp
sbb
lods
mov
dec
sub
jge
mov
call
mov
data16
cs
mov
test
push
jb
push
cs
das
mov
stos
stos
rolb
popf
ret
lods
inc
mov
rcl
cmp
out
repz
cmp
mov
scas
push
cmp
push
pushf
sub
pop
mov
dec
aaa
ja
mov
or
pop
test
rclb
dec
mov
repz
sahf
dec
pop
or
mov
cltd
decb
loope
mov
push
push
and
out
lods
mov
loopne
insb
mov
mov
sub
mov
test
mov
inc
js
pop
mov
xchg
cli
adc
xlat
mov
cli
jb
jp
sbb
add
orl
dec
ficompl
xchg
inc
mov
in
dec
mov
jmp
lea
arpl
shll
test
push
and
outsl
shrb
ja
pop
mov
je
loop
pushf
es
hlt
sbb
sub
and
ja
sbbl
sbb
add
cmpl
lcall
out
sbb
adcb
mov
ljmp
shr
scas
jecxz
popf
sub
and
push
hlt
adc
jne
js
rclb
call
adc
cmc
call
fimull
sbb
ljmp
lods
xchg
dec
sub
jnp
or
arpl
test
pop
enter
mov
pop
inc
push
lahf
pop
dec
xlat
push
mov
pop
movsl
xor
test
sub
sub
xor
add
jne
cmpsl
ss
cmpsb
les
xchg
aaa
lods
loope
mov
pop
daa
sbb
lcall
mov
mov
adc
addr16
std
xchg
jle
lock
jns
mov
ror
add
cmc
out
in
leave
pop
or
int3
nop
and
jl
sbb
adc
sti
jp
es
pop
fiaddl
ret
fsubl
jae
inc
or
sbb
or
adc
pushf
mov
mov
sbb
jge
movsl
or
sbb
stc
mov
in
xor
xchg
pop
sub
lret
scas
mov
imul
mov
mov
mov
jne
arpl
cmp
dec
xor
adc
pushf
push
shll
pop
inc
mov
lods
dec
jmp
js
and
push
mov
mov
ret
jle
mov
dec
xchg
je
inc
test
lcall
lahf
mov
stos
js
hlt
sbb
and
xor
dec
pop
xchg
mov
sub
out
pop
pop
xchg
jge
push
sbb
inc
test
pop
pop
xchg
sub
fiadds
out
pop
clc
mov
dec
test
xor
xor
add
adc
fwait
pop
sub
push
sarl
pop
add
sub
xchg
jo
repnz
leave
decl
insb
imul
cmp
cmp
adc
ja
sub
cmp
push
data16
lcall
xor
adc
out
mov
arpl
lret
adc
pop
add
int
ja
js
and
test
enter
push
aas
inc
mov
fcoml
in
sti
lret
mov
push
sbb
mov
pop
pop
add
in
daa
std
clc
ja
push
xchg
adc
add
cmp
jmp
cmp
pop
sub
adc
in
bound
loope
pushf
pop
in
mov
mov
mov
aaa
jmp
xchg
out
daa
stc
xor
test
jp
push
das
pop
xlat
loope
push
mov
ljmp
push
out
sbb
xor
dec
ret
out
pop
lods
mov
mov
mov
cmp
stc
or
mov
fs
mov
cmp
mov
je
daa
pop
sub
icebp
cs
in
fistps
xor
lods
sahf
add
push
adc
arpl
push
into
sub
pop
stos
and
fimuls
aam
lds
into
pop
sarl
xor
mov
fisubl
into
int3
and
or
xchg
dec
out
push
sbb
jecxz
or
scas
lods
bound
dec
push
fdivrl
lcall
pop
into
inc
mov
pop
cli
cmp
xchg
hlt
psubb
dec
sti
outsl
xchg
cli
outsl
ret
sbb
mov
mov
adc
mov
sbb
ret
cmc
call
jb
cmp
psllq
arpl
adcb
xor
aad
dec
insl
shlb
adc
sbb
mov
pop
mov
call
sbb
mov
dec
sub
dec
add
mov
xor
dec
out
jnp
mov
add
sti
jp
loope
xchg
in
xor
inc
pop
adc
notb
dec
dec
inc
push
sbb
leave
into
and
push
lods
cli
push
mov
inc
add
lret
out
adc
ret
sub
jl
pop
push
inc
nop
pop
xor
push
shll
xchg
jae
push
inc
jmp
stos
inc
hlt
cwtl
daa
into
sti
push
sbb
sbb
rolb
mov
loop
pusha
dec
adc
sbb
es
add
stc
iret
je
sub
add
push
mov
stos
imul
mov
test
incl
movsl
push
jo
lds
inc
xchg
repz
adc
jns
mov
or
sbb
dec
mov
lods
add
xorl
testl
aam
mov
popf
dec
out
mov
inc
inc
icebp
int
aam
xchg
jbe
xor
test
xor
cs
xchg
add
add
mov
loopne
addr16
xchg
addl
adc
adc
dec
sbb
mov
dec
nop
jg
bound
and
adc
testl
cmp
fistpll
push
mov
mov
cmp
pop
xchg
loop
mov
test
mov
jno
sbb
cmp
fidivs
inc
pop
into
push
ret
sub
push
dec
lret
andl
xchg
dec
arpl
dec
loopne
aas
push
aad
ja
jae
bound
in
lret
movsl
addr16
lds
sti
mov
or
mov
imull
jo
lods
imul
je
int
and
data16
shlb
add
sub
mov
mov
rcrl
cs
or
xchg
pop
test
mov
xor
fisttps
add
xor
fbstp
in
push
pusha
xchg
bound
inc
jge
outsl
or
xor
xchg
out
addr16
jns
mov
sti
scas
jnp
popf
xor
sub
jb
mov
jl
inc
xchg
or
in
sbb
ljmp
xchg
pop
ret
push
in
or
mov
fsubrs
rcr
add
mov
xor
add
dec
pop
cmp
int
inc
popf
js
cmp
inc
out
out
das
fistpl
loope
mov
insl
imul
pop
clc
lcall
xchg
xchg
das
jmp
add
fidivs
pop
sbbb
std
adc
sub
and
into
aad
dec
sti
insb
mov
mov
ljmp
test
mov
ret
xor
ja
prefetch
fwait
inc
mov
xchg
mov
or
loopne
cmp
leave
int3
lea
xchg
test
add
fwait
dec
rol
sbb
add
xchg
lret
and
add
ffree
mov
jl
cmpsb
xor
mov
repnz
jns
movsb
adc
lods
nop
cld
jp
clc
push
sub
jb
icebp
idiv
popf
out
jmp
into
mov
jnp
stc
jbe
addl
mov
sarb
test
popa
data16
cltd
mov
icebp
mov
xor
mov
and
mov
lods
inc
pop
loop
inc
popf
out
loop
xlat
mov
or
cmp
add
push
add
das
cmp
jno
fnstsw
test
das
or
cs
jnp
test
lcall
hlt
jmp
test
sub
mov
push
js
sub
cmp
jns
int3
or
mov
mov
mov
dec
popf
sub
sti
jae
mov
pop
add
jecxz
popa
popa
mov
push
jl
sbb
flds
mov
jo,pn
addr16
pusha
lret
cmp
push
cmp
sbb
mov
push
push
inc
sub
ja
sub
sub
xchg
mov
jo
dec
xlat
xor
mov
adc
mov
pop
xorl
add
repz
cmp
scas
iret
lock
shrb
in
test
inc
shl
mov
out
rcrl
fdivl
enter
iret
shll
sub
in
inc
sub
les
stos
xchg
jge
mov
jmp
add
mov
or
add
jo
inc
in
push
stos
mov
ja
pop
pop
mov
pushf
adc
fwait
out
sbb
dec
pop
or
add
dec
test
cmp
add
fbld
push
add
jno
cmp
pop
push
mov
les
adc
hlt
fbstp
inc
xchg
push
test
push
xor
repz
lock
pop
cli
xchg
out
loope
cmp
fadd
mov
mov
iret
test
lcall
or
repz
fmull
jp
int3
fldcw
xor
cmp
mov
pop
or
sub
sbb
mov
mov
push
arpl
or
and
cmc
or
add
or
push
inc
jg
sar
dec
jno
test
pop
scas
inc
popf
js
dec
cld
jo
jne
mov
js
jp
jo
repnz
add
sbb
call
lret
test
mov
xchg
fists
inc
fidivrl
xchg
rorb
out
mov
nop
leave
cmp
ret
insb
roll
adc
repz
ss
mov
mov
and
leave
cli
cmp
push
mov
fdivr
inc
sbb
gs
adc
cmp
jo
mov
pop
jne
hlt
out
inc
add
dec
mov
xor
bound
xor
les
bound
dec
in
xchg
call
daa
inc
push
in
adc
lea
dec
and
and
cmp
push
pushf
scas
dec
outsb
cli
cmpl
xchg
pop
dec
aam
jecxz
call
repnz
add
mov
or
jb
test
mov
insl
imul
jns
imul
outsl
mov
leave
pop
je
pop
cmp
jns
adc
jnp
mov
jle
les
movsb
sub
mov
jp
ret
addl
dec
mov
loop
ror
and
inc
jge
jp
movsl
or
sti
sub
int
clc
nop
aaa
lret
pop
mov
and
mov
xchg
mov
rcll
lret
sub
mov
ja
int3
pop
in
mov
inc
jge
mov
xor
push
cwtl
jnp
outsb
mov
lods
inc
lret
push
mov
test
movsb
testb
push
addr16
icebp
xor
out
push
in
adc
in
mov
jp
frstor
mov
aas
sub
jo
cmovp
adc
xchg
call
aas
ror
pusha
sub
cli
fadd
push
in
aas
and
sub
cltd
xchg
fnstsw
out
adcb
ret
mov
call
dec
fisttps
fstpt
jo
or
into
push
je
nop
sahf
and
sub
or
mov
fs
int3
aam
push
inc
fwait
add
jns
shll
lods
cld
jns
and
mov
shlb
fnsave
jo
cmp
repnz
in
cmp
mov
cli
nop
and
pop
jp
sbb
lret
shr
mov
mov
xchg
js
repnz
sbb
mov
sub
insb
jne
sub
les
inc
jno
int3
mov
or
inc
jno
jmp
not
bound
adc
sbb
sub
cwtl
fiaddl
das
xor
repnz
ret
push
adc
nop
mov
sbb
sub
mov
ljmp
dec
inc
lret
fdivs
xchg
add
repnz
mov
xor
pop
cmp
loopne
adc
scas
mov
cwtl
shl
mov
repnz
dec
push
add
mov
push
pop
xchg
adc
mov
stos
clc
dec
sbb
es
repnz
jno
cld
sub
xchg
sarl
daa
out
fdivs
mov
sbb
les
mov
cmp
outsl
out
push
mov
inc
inc
fcoml
repz
or
pop
jns
lahf
push
xchg
arpl
pop
fldcw
add
lcall
frstor
or
add
arpl
inc
or
adc
jb
je
adc
cmpsl
aas
jno
xchg
xor
and
jnp
jns
arpl
or
adc
ret
mov
adc
mov
mov
lock
imul
fsubrl
cltd
cmovg
cmp
aam
inc
xchg
rcrb
int3
shll
mov
jmp
push
jbe
cwtl
jnp
push
xor
cld
xchg
jge
and
gs
sarb
mov
enter
mov
mov
mov
mov
push
cmp
sub
sbb
adc
ljmp
nop
fdivs
jg
lcall
sbb
and
ds
add
fwait
dec
lds
mov
daa
and
sbb
dec
imul
ja
pushf
cmpl
adc
fcompl
out
xchg
lret
mov
jo
std
loop
int3
sub
mov
out
sbb
mov
daa
repnz
cmp
testl
jg
nop
pop
andb
stc
xor
shrb
xchg
movsb
adc
stos
mov
in
mov
andl
fldlg2
push
and
popf
es
add
imull
mov
out
mov
out
pop
js
pushf
or
and
ffreep
xchg
movb
out
ficomps
push
repnz
add
fsubrs
movsl
or
jp
pop
js
inc
adc
add
add
lea
stos
enter
pop
mov
dec
je
mov
dec
push
fdivl
mov
cmpsl
adc
mov
mov
xchg
sub
inc
and
mov
inc
dec
jmp
rorl
sub
in
push
insb
push
mov
cmp
lret
call
sub
leave
ja
mov
lret
xor
xor
push
or
in
in
ljmp
bswap
mov
add
mov
xlat
cld
pusha
jne
orb
mov
shl
jp
aad
rcl
icebp
jns
fsts
mov
mov
decl
subl
int3
test
or
inc
insb
pop
mov
fdivrl
push
loop
mov
es
in
sbb
aaa
in
inc
loope
pop
jmp
push
int
outsl
in
sbb
jl
mov
add
cmp
and
cmpsb
jns
push
mov
inc
push
jl
es
test
pop
cmpsb
stc
mov
push
aam
loope
cwtl
or
pop
adc
push
lock
enter
test
sub
lods
cld
fs
cmp
adc
push
mov
adc
lods
outsl
pusha
sub
or
ret
sub
lods
push
bound
int
dec
outsl
inc
outsl
jg
sahf
int3
cltd
jge
mov
stc
movsl
fdivrl
test
sub
loop
cmp
sub
sub
mov
ljmp
stos
rclb
xchg
arpl
int
mov
imul
shll
sbb
mov
dec
xor
mov
mov
out
jg
in
mov
add
out
dec
cmpsb
xor
xor
fmull
pxor
or
dec
push
and
outsb
fwait
jg
xchg
std
mov
dec
into
out
ret
fildll
cli
or
adc
adc
cld
or
dec
and
or
fcmovu
int
int3
adc
dec
ret
sahf
cmc
and
movlps
enter
andb
ljmp
mov
push
pop
int3
mov
les
in
and
pop
dec
xchg
sub
out
inc
and
ss
cmp
insl
loopne
sarl
pop
mov
pusha
adc
pop
mov
mov
mov
jge
aam
test
popf
shlb
sbb
icebp
jg
sbb
inc
push
sbb
nop
push
jae
das
fnstenv
or
dec
inc
pop
push
pop
cmpsb
sbbb
mov
aaa
push
xlat
adc
xchg
iret
pop
mov
mov
mov
cmpsb
mov
mov
dec
in
jmp
mov
sbb
mov
imul
xchg
pop
lcall
mov
cmp
push
mov
orl
inc
or
cmp
xor
adc
cmpsb
cmc
movsb
mov
jmp
and
pushf
repz
data16
sbb
cmpl
xchg
incl
and
fdivl
and
push
xchg
lds
out
xor
loope
xor
dec
push
mov
sti
mov
cmp
add
push
or
jecxz
inc
xchg
dec
pop
sbb
inc
xchg
and
icebp
mov
add
rcl
inc
xchg
hlt
inc
cmp
shr
cmpsb
add
push
push
mov
in
sub
xchg
sub
aad
in
fisubrl
jno
sub
sbbb
sbb
lcall
rcrl
dec
nop
ss
lcall
fwait
and
dec
out
sti
mov
mov
sbb
inc
shlb
add
fsubrp
stc
sub
gs
sbb
pop
mov
mov
mov
sarb
mov
mov
mov
push
iret
lods
dec
and
in
out
dec
sbb
sub
shr
out
test
xchg
call
fsts
fisttpll
test
mov
jno
fcom
xchg
incl
add
mov
push
sbb
adc
xor
loopne
lds
orl
in
lret
jb
loop
mov
inc
xor
fildl
fsubl
test
xchg
rolb
dec
sbb
pop
cmp
repnz
jl
inc
cmp
iret
xor
enter
sbb
fcomps
fcmovb
dec
int3
cltd
fisttpll
mov
mov
fucom
jmp
imul
div
stos
and
cmc
dec
std
xor
push
faddl
mov
jo
popa
cmp
dec
xchg
jl
push
shll
sbb
mov
jmp
adc
push
in
flds
into
cli
and
xchg
bound
movsb
rcr
push
lock
push
mov
pushf
out
ja
sbbl
pusha
push
fsts
pop
xor
out
out
lret
xchg
mov
bnd
mov
pop
xchg
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
mulb
ss
insb
add
jne
jns
add
ret
push
std
lea
mov
push
push
jg
stc
das
popa
popa
xor
sbb
dec
jns
cwtl
imul
inc
cli
out
push
xchg
push
sbb
shlb
mov
xor
mov
xor
scas
mov
imul
mov
fimuls
inc
add
jmpw
xchg
mov
cmpsl
movsl
cmpb
cmpsb
leave
clc
fldt
addr16
test
cli
pop
adc
inc
insb
inc
call
sti
or
add
in
jns
rol
sbb
gs
xchg
repnz
imul
iret
arpl
xor
mov
sbb
jbe
insl
mov
push
test
mov
add
fmulp
push
cs
add
popf
lcall
inc
mov
mov
sbb
pusha
xor
scas
xchg
fcmovnbe
sub
je
out
loopne
sub
adc
pop
dec
mov
cwtl
and
sti
sti
sub
push
pop
sti
mov
mov
mov
outsb
mov
pop
lahf
rclb
mov
jecxz
mov
mov
aas
out
mov
mov
jle
sbb
je
aaa
add
pop
cld
mov
sbb
mov
push
pushf
pushf
sub
outsb
push
and
and
fdivl
dec
loope
xchg
push
and
test
shll
ficoms
sahf
mov
aad
lea
cmpsb
mov
mov
cwtl
pop
dec
insl
add
xchg
daa
icebp
sbbb
stos
xchg
dec
xchg
mov
adcb
ficompl
and
push
or
adc
xchg
data16
lock
lock
cpuid
lods
cmpsl
cmp
fstpl
and
sti
lret
sti
divb
xor
inc
mov
mov
ret
lods
in
push
mov
inc
ret
add
jb
frstor
aam
or
mov
mov
pop
jbe
push
or
xor
mov
fildl
fs
jae
mov
nop
in
out
aam
fstpt
inc
std
pop
or
mov
shlb
xlat
sub
mov
cld
js,pt
adc
ror
mov
and
out
mov
ret
scas
sub
sarb
out
loopne
ret
jg
dec
push
push
cmpsl
test
jle
mov
std
nop
loope
pop
cmp
dec
mov
pop
enter
sub
pushf
bnd
cltd
push
fwait
cmp
js
aaa
cmp
lcall
mov
cmp
in
xchg
mov
cmpsl
repnz
sbb
mov
adcl
pop
ja
test
add
mov
gs
cmp
lahf
push
pop
clc
jecxz
insb
xchg
add
cmpsl
ret
pusha
outsl
jmp
aam
jge
lret
jne
mov
push
pop
insl
std
out
inc
push
jp
fldl
in
push
jae
mov
lea
out
xchg
xor
mov
das
mov
fs
mov
adc
ret
ret
cmpsb
sbb
and
or
sti
or
cld
pop
xchg
mov
mov
mov
clc
adc
testb
scas
push
ret
xchg
jae
adc
sbb
je
pop
test
sti
mov
testl
lret
sbb
and
and
cmc
xchg
cmp
mov
and
gs
imul
cmp
popl
ret
push
cmp
das
push
mov
popf
jb
lret
push
pop
or
push
xor
lahf
js
ret
add
mov
add
lret
outsb
add
xlat
lahf
push
std
cmpsb
mov
inc
mov
inc
cmpsl
cmc
inc
mov
and
add
pushf
pusha
cmpb
jl
fdivrs
add
mov
sub
jae
pushf
or
adcl
inc
add
inc
imul
push
cmp
ret
inc
testb
and
jge
ret
push
jns
xchg
fwait
pop
daa
out
aam
mov
dec
add
ljmp
mov
in
mov
cltd
xor
inc
or
divps
pop
leave
add
andl
popa
jae
fistps
add
fisubrs
into
cmp
mov
repz
movsb
iret
rcrb
stos
fld
test
push
int3
je
pop
jo
sub
repnz
mov
dec
pop
cmc
call
lds
inc
push
cmpsl
popf
or
lahf
fiadds
ret
pop
cmp
loop
fdiv
mov
test
jge
pop
add
and
and
adc
int
xchg
mov
sbb
das
add
fsubs
lods
pop
jecxz
icebp
add
sbb
decl
aam
sub
aaa
and
sbbb
test
xchg
cmpsb
add
cmp
lods
sbb
in
push
int3
xchg
enter
mov
pusha
aas
xor
or
mov
dec
nop
gs
int
push
je
jmp
notb
mov
push
aaa
xor
pop
movsl
sbb
imul
push
loopne
adc
shlb
xor
add
mov
mov
das
shlb
outsl
jp
stc
rorb
stos
pusha
push
test
xor
lcall
mov
push
cmp
push
mov
jp
mov
nop
clc
orl
nop
movsl
aad
xchg
jmp
hlt
movsb
loop
mov
or
mov
mov
mov
push
cwtl
test
gs
sub
lret
pop
push
cmc
push
pop
dec
xchg
cwtl
dec
sbb
cwtl
scas
mov
aas
mov
fsts
mov
loope
lcall
pusha
mov
add
or
pop
lahf
dec
fwait
jg
cmp
fadds
pusha
mov
addr16
cwtl
imul
clc
xor
add
pop
insl
test
call
sbb
imul
nop
test
jge
xchg
call
push
adc
jmp
sbb
ret
ret
test
int
sti
push
jbe
dec
lahf
sub
xor
lss
mov
and
lock
push
xor
fsubr
popf
lcall
sub
repnz
adc
mov
cltd
cli
push
mov
ja
ljmp
js
xor
or
mov
fmuls
aaa
loopne
repz
mov
fwait
cmpsl
and
inc
sub
leave
pop
push
inc
xchg
in
pop
xchg
add
repz
ja
das
rolb
adc
inc
fwait
adc
cmpsl
adc
popa
jns
pop
dec
in
aaa
scas
mov
cmpsb
packuswb
cld
stos
arpl
hlt
ss
lcall
mov
aaa
enter
call
inc
cltd
pop
adc
mov
push
ds
mov
xor
das
pop
mov
cmp
xchg
roll
adc
sbb
pushf
and
dec
in
add
sarb
xchg
adc
mov
ss
cmp
pop
xor
mov
dec
jb
daa
add
sbb
adcb
jns
add
rol
inc
mov
subb
mov
pop
pop
mov
push
push
cmp
mov
sub
and
mov
mov
adc
lahf
mov
mov
push
pop
xchg
inc
lcall
les
cld
xchg
shrl
int3
fwait
ret
mov
xor
scas
sub
andl
icebp
or
test
and
dec
imul
ret
push
mov
std
int3
mov
lcall
shrl
sbb
mov
in
cmp
jg
stc
es
or
push
loop
mov
jno
lret
jecxz
sbb
scas
outsb
scas
and
cld
testl
or
js
xor
mov
push
jg
lods
push
repnz
call
xchg
add
out
xor
mov
push
popf
rcr
test
inc
les
lret
inc
mov
loopne
lock
sti
pop
fwait
xor
push
inc
push
dec
xor
mov
incl
push
jmp
or
inc
sub
push
clc
mov
insb
bound
aaa
ljmp
jmp
daa
orl
pushl
jge
jl
icebp
loope
in
sbb
dec
fisttps
je
lods
fdivr
push
icebp
xor
loopne
mov
or
fnstenv
sbb
movsl
pop
or
das
adc
pop
mov
das
mov
add
xchg
pushf
and
aad
test
cmp
shrl
jg
call
add
mov
mov
cmc
icebp
je
sub
or
dec
add
mov
out
ficoms
dec
idiv
pop
adc
daa
push
rol
jbe
cmpsb
mov
mov
mov
out
and
in
push
jns
aad
dec
les
push
and
ret
aad
leave
sbb
xchg
xor
pop
pop
pop
stc
push
cli
insl
mov
xor
test
or
cmp
mov
pop
aas
dec
adc
xchg
push
js
in
mov
mov
push
jmp
bound
cmp
and
adc
cwtl
mov
ss
imul
ret
mov
sahf
sub
sbb
jns
arpl
add
add
popa
adc
add
mov
xor
rcl
call
push
jbe
jg
pop
hlt
mov
stos
lds
fstpl
pusha
cltd
scas
in
inc
es
into
xchg
loopne
add
jo
xchg
jnp
in
out
test
in
cmpsb
sub
xor
sbb
fiadds
cmc
enter
push
xchg
mov
stos
jl
mov
jp
outsb
push
inc
rcrl
imul
sarb
xchg
test
adc
mov
dec
add
shrl
or
sub
jle
jp
adc
insb
out
repz
xor
stos
adc
pop
xchg
fimull
xorb
fistl
movsb
test
js
or
orl
sbb
mov
mov
add
or
sahf
xor
arpl
mov
or
sub
mov
pop
ja
mov
xor
ror
inc
or
and
fidivrl
and
int
cmpsb
or
test
jg
mov
xor
push
xchg
inc
test
mov
push
cmpsl
les
push
mov
pop
stos
lods
pusha
adc
jns
daa
xchg
mov
addr16
pop
scas
push
int
mov
icebp
popaw
dec
fwait
jno
lret
mov
sbb
pop
fimull
call
or
cmp
imul
lds
test
inc
insb
scas
add
jg
fstpt
xlat
fcoms
js
sbb
xor
sti
outsb
mov
add
xor
je
xor
mov
enter
or
mov
inc
push
push
dec
pop
jp
push
loop,pt
cmp
cltd
js
rorl
cmpsb
in
adc
inc
inc
push
xchg
pushf
fwait
insl
icebp
mov
and
sbb
push
mov
or
mov
int3
or
xchg
mov
or
pop
in
xchg
xchg
mull
xor
arpl
pop
pop
inc
cltd
and
cmp
mov
and
fldenv
fs
call
and
pusha
add
lahf
loopne
jecxz
jl
pop
cwtl
inc
cltd
dec
fs
iret
xor
jge
orb
or
sti
int
les
lret
jl
gs
sbb
mov
sbb
sub
xor
icebp
leave
fbstp
mov
sbb
xor
cmp
inc
in
push
test
pop
add
cmpsl
imul
push
jle
pusha
inc
cltd
pop
dec
push
mov
push
xor
bound
loope
sti
xchg
fisubrs
add
pop
or
je
ret
cmc
add
aad
push
sub
push
pop
les
nop
pop
je
xchg
scas
sub
cmp
testb
sub
pop
mov
popf
out
push
pop
testl
mov
xor
jbe
push
adc
je
int
lahf
sub
jae
add
mov
jnp
dec
leave
loop
inc
cmpsb
xor
mov
or
in
test
adc
rorl
jae
push
pop
lret
jae
leave
xchg
dec
mov
pop
iret
arpl
cld
and
cmp
outsl
cmp
les
pop
fdivl
xor
es
sti
mov
jmp
add
aas
add
dec
sbb
jmp
add
bswap
and
or
mov
dec
cmpsb
data16
das
ret
arpl
pop
add
push
outsl
push
subb
pop
je
inc
mov
cwtl
mov
xchg
fisttps
adc
push
je
repz
test
cmpsb
mov
mov
xchg
xchg
lods
pop
lds
or
fldcw
add
and
jmp
in
adc
lock
pop
xchg
jle
or
sar
stos
adc
loopne
pop
cs
cmp
push
out
daa
add
fcoml
cmp
and
pop
cld
push
pop
mov
mov
cs
aam
lahf
add
cmp
push
mov
cmp
mov
std
sbbb
in
out
shrl
ret
and
mov
ret
cmp
shll
rolb
cwtl
loop
add
les
adc
in
dec
jle
sub
ss
fisubs
ret
push
sub
int3
mov
cmp
jne
lods
ljmp
imul
popf
mov
add
outsb
out
dec
roll
xor
repnz
popa
pop
push
add
pop
mov
or
inc
or
in
mov
cmp
mov
loopne
pop
xor
cld
jmp
out
jle
sub
dec
lods
repz
cmp
jmp
cmp
dec
aas
push
sub
xchg
shrb
add
xor
xor
xchg
and
rolb
js
pop
andb
pop
pop
push
sub
inc
cmp
or
sti
scas
or
outsb
jae
js
mov
cmp
lea
dec
sub
dec
pop
xchg
pop
test
jae
lock
bound
jge
lcall
sbb
or
outsl
mov
out
je
pop
mov
and
cmc
push
leave
adc
pop
sbb
dec
clc
out
push
pop
shll
dec
ret
insl
xor
lahf
andb
scas
call
enter
mov
mov
and
adc
jmp
mov
pushf
inc
inc
mov
xchg
push
rorb
repnz
imul
or
dec
aaa
pop
xor
xor
call
mov
mov
mov
jecxz
movsb
loope
adc
xor
xor
repz
sub
push
jmp
jnp
stos
sub
ss
inc
inc
jle
dec
push
fistl
xor
mov
pusha
inc
add
stc
insl
add
inc
rolb
xchg
xor
xchg
sub
mov
cmpsl
cmp
lret
jp
lds
xchg
adc
cmove
pop
fs
outsl
mov
and
sub
push
sti
es
cld
arpl
sbb
in
cmpsb
inc
repnz
orb
imulb
mov
inc
dec
in
das
pusha
dec
and
lods
mov
push
leave
dec
add
sysenter
pop
fidivs
loopne
sub
sbb
sub
add
nop
inc
mov
cmp
jge
inc
les
mov
mov
push
pop
add
pop
sub
xchg
ljmp
xlat
mov
call
or
jo
mov
ja
push
push
cmp
inc
and
pop
adc
addr16
inc
ss
andl
and
sub
push
xor
inc
outsb
add
out
mov
mov
je
popf
mov
adc
outsb
xor
outsl
mov
js
rcrb
fs
xchg
sbb
cld
test
and
xor
xor
push
rcrb
cs
push
negb
mov
int
dec
daa
fsts
test
aaa
call
adc
pop
rcll
or
not
leave
std
int
hlt
test
cmp
std
jle
pop
loop
mov
test
mov
jl
inc
push
sbb
add
lock
jl
push
push
dec
xchg
and
icebp
jmp
jge
add
cmp
sub
imul
xchg
inc
rolb
mov
sub
movsb
test
stc
scas
jl
insl
ljmp
push
xor
movsl
dec
jbe
jecxz
jnp
mov
add
sbb
stos
out
stos
cmc
lret
push
adc
cmp
mov
mov
mov
lret
cmp
mov
cmp
sub
mov
jle
push
adc
cmp
jno
and
mov
outsb
aaa
call
hlt
push
xor
pop
icebp
mov
pop
mov
dec
mov
call
orb
xor
lea
insl
xchg
cmp
push
test
xchg
sahf
inc
iret
mov
clc
pop
movsb
call
lods
sub
aas
lcall
push
adc
dec
es
je
leave
fcoml
push
xchg
pop
mov
dec
push
addr16
jne
fucom
clc
sub
in
dec
jns
cmp
aaa
mov
insl
xor
add
xchg
int
pop
and
ljmp
sub
std
ja
push
mov
mov
and
add
icebp
loopne
jb
fsubrp
enter
in
sub
inc
and
sarl
push
push
adc
jno
dec
mov
pop
push
lcall
lea
fdivl
xchg
shrb
jg
push
out
andl
gs
mov
xor
sub
add
gs
ds
inc
xor
into
pop
push
jge
push
test
dec
test
xchg
jae
mov
jbe
lcall
inc
test
push
and
xchg
test
std
ds
inc
inc
xor
push
xchg
pop
mov
xor
int3
fwait
enter
mov
sbb
scas
adc
add
call
out
mov
int
push
and
hlt
xor
cmpsb
int3
nop
mov
mov
lret
push
mov
cmp
in
jo
cs
iret
mov
dec
jp
inc
inc
or
jmp
pop
repnz
es
loop
das
push
pop
jb
xor
loop
call
jb
aam
sub
push
shlb
pop
or
out
adc
push
ffreep
add
jne
out
imul
incb
mov
cmp
dec
aas
neg
dec
das
mov
adc
cmp
jl
cld
xchg
call
or
jle
mov
into
popa
push
sub
daa
mov
rcrb
jge
scas
imul
cmp
sub
cmp
jecxz
ret
fs
shll
ljmp
rorl
fs
mov
mov
sub
scas
push
jp
out
push
test
dec
dec
popf
adc
mov
rolb
cmp
push
gs
mov
adc
aas
cld
push
xorl
mov
imul
mov
imul
js
and
push
in
cmpsl
xor
pusha
mov
loopne
out
dec
and
mov
cld
ret
mov
stos
push
aas
sbb
aas
gs
sub
test
jl
lods
mov
push
cmpsl
add
test
lea
fbstp
daa
iret
mov
cmp
rclb
adc
movsl
mov
out
ljmp
mov
out
enter
and
stc
xchg
aam
adc
gs
loop
jne
jns
xchg
outsl
push
add
adc
and
pop
mov
aam
mov
xchg
pop
cmp
aam
xor
std
dec
xchg
outsl
jle
lret
dec
iret
xchg
jns
push
cmp
insl
and
inc
adcb
sub
cmp
loop
cmpsb
mov
aad
mov
out
cmp
sahf
pop
enter
mov
fdivr
mov
aad
mov
push
dec
lcall
les
xchg
jmp
shl
cs
movsl
or
dec
inc
shl
es
push
sbb
fisubrl
popf
repz
xor
iret
mov
popa
jecxz
loope
lret
fdivr
icebp
or
jbe
rolb
inc
or
lahf
mov
addl
sbb
lret
fidivrl
xchg
pop
sbb
in
xor
jno
or
lods
push
mov
gs
stos
or
and
inc
jle
call
mov
adc
fistpll
subb
cwtl
lcall
jbe
icebp
mov
bound
daa
in
mov
cs
mov
push
test
rclb
mov
adc
movsb
mov
adc
or
lods
pop
push
lods
icebp
pop
mov
fsub
mov
mov
add
mov
push
cwtl
dec
mov
inc
ret
int
adcl
push
lahf
cmp
arpl
and
cli
push
xchg
pop
in
add
movsb
inc
mov
dec
inc
outsl
test
mov
push
or
lds
and
xchg
push
inc
subb
adc
mov
add
ret
push
mov
int3
dec
xchg
pop
push
and
cmp
adc
and
lock
repz
xlat
xchg
jnp
setge
in
sub
stos
aas
push
mov
imul
test
adc
out
mov
jne
daa
cmp
je
inc
decl
adc
popa
mov
popl
adc
mov
sub
sbb
inc
sysret
cs
in
in
pop
pop
loopne
jl
popf
jns
jp
aas
sbb
data16
add
dec
pop
jmp
test
jae
scas
pop
mov
ror
cmovle
ljmp
scas
jbe
aaa
add
xchg
nop
and
push
dec
dec
cli
pop
cmp
adc
cmp
push
in
aad
fiaddl
lret
lods
bound
std
into
jge
pushf
or
lock
xchg
testl
ftst
aam
sub
inc
shrl
sar
jle
mov
pop
mov
insb
or
cmp
lods
pop
loopne
and
add
jbe
jne
push
pop
sahf
xchg
mov
and
dec
pop
push
jno
adc
cmp
sbb
xor
mov
adc
push
adc
das
sub
stos
aam
pop
inc
sub
int3
cld
mov
loope
xor
ret
mov
loopne
movsb
pop
mov
xchg
xchg
jmp
data16
mov
xchg
add
xchg
or
aaa
push
mov
xchg
fmuls
xchg
nop
fnstenv
mov
push
add
in
ret
orl
sbb
mov
sahf
push
add
cmp
mov
pop
sar
les
aad
out
mov
sub
popf
dec
dec
xchg
sub
mov
xchg
fimull
cmc
push
adc
das
idivl
sbb
jge
jne
pop
push
loop
divb
cmp
ror
mov
fidivs
and
lret
dec
xchg
nop
cmp
jns
xor
inc
jnp
js
xchg
or
sar
mov
add
add
and
xlat
sahf
add
xor
js
cmpsb
pop
pusha
and
mov
out
cmc
mov
shrl
xchg
push
iret
lds
mov
test
inc
inc
in
pop
sbb
or
scas
sub
xor
xchg
push
dec
and
fbstp
arpl
adc
add
xchg
xor
ljmp
popa
jg
cmp
sub
and
cwtl
stc
pop
shlb
ret
mov
sub
push
inc
xchg
fsubrp
movsl
cmp
or
push
ret
pop
pop
pop
jecxz
pop
imul
lret
pop
decb
repnz
icebp
addl
movsb
aam
or
cmc
outsb
and
jmp
arpl
dec
jle
cmp
out
imul
stos
sub
out
and
xlat
adc
add
xor
out
sbb
sahf
inc
fxtract
xchg
lahf
add
mov
xlat
in
icebp
push
pop
mov
loope
mov
outsl
cmp
add
in
incl
das
je
adc
sub
aam
mov
or
out
jmp
cltd
cltd
notb
xor
xor
push
sahf
sbb
mov
cmpsb
mov
nop
add
cli
inc
je
sub
and
inc
dec
fstl
popf
shrb
addl
fcompl
cmpsl
sahf
jne
adc
jl
mov
pop
ljmp
lods
mov
cmpsb
stc
icebp
mov
nop
pop
inc
fisubrs
lahf
push
mov
dec
push
aas
fnstenv
hlt
inc
inc
jbe
and
xchg
aam
xchg
jb
add
into
jnp
or
push
xor
addr16
mov
sub
mov
inc
add
jb
call
ljmp
mov
movsb
cwtl
aad
ja
sarb
mov
pop
js
aaa
jbe
xchg
insl
addl
cmpsb
jge
inc
pop
inc
jae
xor
or
fcoml
andl
sbb
cmp
inc
mov
adc
push
mov
roll
xchg
push
out
sahf
and
test
aam
dec
xor
jmp
sbb
outsb
mov
push
sbb
mov
incl
dec
dec
jmp
ret
jecxz
loopne
push
xchg
push
mul
cmp
ficoml
movsl
add
adc
fcompl
maxps
pop
dec
fwait
sahf
in
stos
mov
icebp
mov
push
jle
inc
pop
mov
lods
mov
sub
xchg
push
out
xchg
lea
inc
mov
in
sarb
outsb
ljmp
mov
jnp
scas
ss
mov
hlt
dec
std
adc
mov
data16
imul
add
aaa
mov
ficompl
out
adc
jns
popf
mov
pop
xor
jp
xor
sbb
and
push
mov
out
adc
scas
add
adc
adc
cltd
cmp
mov
cmp
decl
int3
mov
cmp
jo
outsl
or
mov
pop
ret
or
cwtl
dec
xor
out
cmpsl
inc
cmpsb
ds
pop
hlt
adc
rcrb
imul
mov
adc
push
adc
and
xor
shll
push
push
jns
std
fwait
rol
sbb
cmpsb
addr16
and
xor
pop
mov
movsl
loop
adc
sbb
dec
addr16
cli
movsl
pushf
mov
mov
lret
xchg
adcb
ret
int3
mov
push
xor
adc
pop
ss
mov
jbe,pn
cs
mov
in
in
js
push
fnstenv
or
cmc
aaa
mov
out
and
sti
cmp
sub
stc
or
fxch
dec
sti
fistl
push
mov
call
ret
jecxz
loopne
pop
xchg
rcrb
adc
into
sbb
lret
fwait
enter
lret
aaa
sbb
out
mov
sarb
push
push
pop
dec
jl
dec
sub
cmp
lds
inc
jl
xchg
push
sub
lahf
pop
out
lret
mov
pop
incb
stos
jle
ds
aaa
sti
jge
add
inc
jno
push
push
and
push
xchg
pop
subb
enter
push
jmp
jp
jg
sub
mov
mov
inc
into
sub
les
jne
push
shl
push
cmp
aad
pop
icebp
test
cld
ja
sub
cmpsl
sub
and
add
mov
lret
inc
sub
dec
mov
inc
mov
inc
shll
xchg
sub
lods
inc
or
inc
mov
ss
rcrl
or
xor
rolb
push
xchg
gs
cltd
ljmp
fcomps
aam
mov
jecxz
clc
ret
push
stos
adc
lods
ret
pop
dec
or
stos
es
add
cwtl
mov
gs
pop
aam
mov
push
or
mov
das
daa
popf
divb
iret
cmp
sbb
ret
nop
das
pop
std
lret
sbb
push
testl
stos
sub
adc
test
pop
frstor
mov
in
test
push
or
xor
add
mov
fisttpl
add
jbe
cmp
rcrl
adc
out
or
into
in
outsl
testl
push
or
or
add
xor
in
push
mov
jge
inc
shrb
imulb
sbb
push
push
cltd
in
cmp
and
movsl
push
inc
push
das
sbb
xchg
xchg
lret
or
test
sub
aam
dec
rolb
mov
mov
int
decl
add
fs
outsl
js
jo
ljmp
mov
adc
mov
jmp
sbb
cmp
cmp
faddl
mov
lcall
jecxz
fstl
outsb
imull
xlat
or
lea
dec
mov
pop
xor
jmp
fldt
out
negb
cmc
imul
aaa
pushf
mull
imul
or
ret
cmp
sub
cmp
andl
pop
pusha
mov
xor
dec
mov
fldenv
out
mov
call
jmp
aaa
jge
push
mov
ds
sti
pop
or
test
xlat
addr16
sar
shlb
notl
fcmovnbe
popa
xor
pop
adc
data16
mov
push
inc
dec
loop
fidivrl
test
rclb
xchg
push
in
lds
mov
xchg
sub
or
scas
mov
es
rcr
push
jne
jp
aaa
ja
mov
and
and
sbb
mov
mov
out
out
pushf
pop
mov
sub
adc
adc
cmp
enter
inc
inc
daa
testl
fprem
leave
loopne
xchg
mov
lea
dec
leave
sbb
lcall
daa
repz
sarl
leave
insb
popf
or
jge
adc
scas
sbb
ss
idivl
fisubrl
mov
bound
add
pusha
lods
test
shrb
jmp
pusha
dec
ds
push
mov
xchg
pop
push
adc
xor
mov
test
jno
mov
mov
pop
xchg
inc
faddp
mov
dec
ret
sbb
push
xchg
pop
in
or
xchg
or
pop
add
outsl
push
xchg
pop
fldt
fdivrs
ljmp
jo
scas
mov
mov
cwtl
in
test
stos
sbb
ljmp
pop
out
arpl
pop
pop
mov
add
xlat
mov
enter
inc
lret
sub
mov
push
mov
mov
push
pop
out
cli
dec
in
or
dec
bound
jle
xchg
mov
leave
jle
rolb
or
jg
cmpsb
jae
cmc
es
mov
dec
pusha
outsb
inc
in
add
jne
jb
mov
je
jl
dec
mov
add
add
jno
sarb
int
sbb
bound
std
std
outsb
cmp
sub
and
das
stc
push
popa
or
add
inc
sbb
pop
lret
push
mov
add
sbb
stc
das
pop
movsb
movsl
mov
arpl
xchg
or
sub
sbb
push
xchg
push
xor
jo
fdivp
xor
test
cmp
adc
int
mov
icebp
sub
xchg
aad
mov
cld
sub
mov
movaps
testl
aad
xor
and
adc
pop
leave
fwait
xchg
adc
cmp
adc
xor
cltd
mov
call
das
jmp
enter
jl
pop
mul
stc
in
test
add
jl
jle
cmp
push
and
imul
imul
push
inc
int3
push
mov
pop
aaa
sbb
pop
clc
dec
jecxz
push
pop
je
inc
mov
mov
jmp
cld
stc
mov
movsb
scas
pop
sub
sti
outsb
mov
int
mov
adc
sti
jne
imul
test
repnz
mov
xor
cmp
shr
rcll
fisubrs
cmc
lea
sub
fisubrs
jmp
stos
mov
pop
pop
sbb
adc
mov
push
lock
xor
bound
shll
lcall
jae
in
int
or
inc
popf
and
cmp
imul
je
push
mov
pop
mov
cs
mov
lods
mov
int
jbe
sahf
pushf
cmp
mov
pop
mov
pop
mov
inc
sbb
mov
mov
mov
loope
iret
mov
in
sbb
xor
mov
xor
lods
mov
aaa
mov
mov
jo
cmc
or
adc
int3
pop
mov
sbb
aad
lret
mov
mov
fwait
push
mov
mov
test
mov
popf
mov
cmpsl
mov
test
nop
xorb
scas
fcompl
stc
sbb
jmp
outsb
xadd
or
stc
lret
ja
add
insb
insl
inc
xor
pop
mov
or
cmp
mov
outsl
fcoms
ret
hlt
mov
ret
jl
addl
into
cmp
fisubrl
mov
gs
popa
pop
dec
mov
push
mov
xchg
es
loop
mov
dec
mov
push
sub
mov
mov
stc
or
arpl
mov
imul
stc
mov
adc
int
mov
pop
push
xor
xor
mov
ss
fidivl
jno
or
je
int3
rcrb
push
lcall
aas
sbb
sub
mov
dec
or
fdivs
mov
mov
outsl
loop
xchg
sbb
push
xchg
xor
insb
shlb
pop
les
hlt
call
xchg
js
ss
cmp
pop
fidivrs
orb
jge
jmp
ret
imul
sahf
add
add
jb
cld
cmpsb
xor
xor
pop
sub
mov
sub
in
mov
cltd
lds
mov
ja
add
xchg
and
adc
dec
inc
pop
andl
ret
pop
xor
into
pop
adc
dec
jl
daa
cltd
inc
adc
adc
lock
rclb
fdivs
push
stos
cvtpi2ps
iret
mov
pop
add
push
push
sbb
out
sti
xor
push
mul
and
cli
je
test
dec
nop
pop
aaa
test
popa
sahf
loopne
call
in
dec
and
pusha
adc
xor
lock
cmp
cltd
push
xchg
das
adc
jp
xor
outsb
push
push
filds
cmp
sbb
popa
pushf
cmp
add
pop
hlt
add
ret
pop
xor
jge
out
mov
or
les
push
rcrl
sbb
pop
mov
lock
popf
lods
movsb
orl
xchg
add
xor
push
add
andl
push
or
int
adc
addr16
push
jb
nop
fisttpll
dec
shlb
imul
int
push
lds
mov
pop
dec
lock
adc
mov
xor
sub
test
pop
dec
insl
jae
xchg
or
xor
mov
ja
fistpl
xchg
test
mov
mov
jge
lods
sahf
mov
inc
adc
jnp
std
add
scas
mov
lock
leave
push
out
mov
xchg
lods
pop
add
push
jb
outsl
inc
add
scas
pop
push
icebp
mov
dec
fisttpl
fmul
mov
in
mov
and
xor
jbe
repnz
in
xor
fstpl
push
js
fcmovnb
push
lods
sub
movsb
cmc
dec
sub
out
andl
or
inc
xchg
stos
std
loop
mov
cvtpd2ps
test
imul
inc
popf
jg
sbb
cmp
inc
loope
mov
inc
push
out
lret
inc
leave
in
xchg
fs
pushf
add
clc
loope
std
cmc
in
inc
or
scas
mov
mov
mov
testl
jmp
add
mov
or
mov
ret
pop
gs
sahf
lcall
xor
in
dec
pushf
and
xchg
pop
or
xlat
jb
outsl
or
add
inc
jb
or
pop
out
sub
mov
mov
out
cmp
enter
aad
pop
into
mov
out
shrl
pop
sarl
or
pop
sub
out
scas
xlat
fidivrl
ds
add
addr16
dec
mov
out
fucomi
pop
jbe
popa
adc
xor
je
xor
cmpsb
fimuls
insl
pop
xor
push
scas
mov
out
fiadds
cmp
dec
dec
jb
inc
sbb
sti
in
xchg
pop
icebp
test
in
mov
pop
js
lods
movsb
loope
nop
mov
pop
or
lcall
insb
push
out
lret
mov
sbb
mov
ror
roll
pop
or
push
imul
aas
xor
dec
mov
add
cli
cwtl
aaa
xlat
or
mov
call
loop
jg
fwait
repz
and
jp
sbb
xor
cmp
insl
jp
cmc
das
or
jp
leave
dec
jmp
addr16
sub
mov
sub
lock
jecxz
movsb
test
cmc
mov
mov
cmpsb
mov
addb
push
sbb
lret
cmp
je
fld
push
push
pop
mov
inc
outsl
imul
ljmp
in
mov
loop
sub
std
inc
xor
aas
xor
sbb
es
and
mov
jge
movsl
push
hlt
fwait
jns
pop
in
mov
sahf
mov
push
shll
mov
cli
loopne
ljmp
pop
or
test
mov
enter
adc
xchg
add
lods
push
arpl
ret
int3
scas
add
std
mov
loopne
pop
out
inc
scas
lea
mov
rcr
mov
rorb
je
or
fwait
cmp
push
aad
fisubl
mov
sub
push
push
xchg
or
dec
xor
fistpll
fsubrl
mov
adc
repz
lods
xchg
idiv
das
stos
out
in
test
xchg
mov
mov
fs
cmp
out
mov
je
popa
je
in
add
xor
ljmp
and
popf
out
mov
add
xchg
or
cmpb
es
das
iret
push
cltd
push
add
clc
mov
push
jae
sahf
pop
in
xor
pop
shrl
or
test
mov
xchg
cmp
ficoml
dec
out
sbb
decl
fldcw
xor
outsl
mov
daa
je
push
inc
popa
and
xlat
cwtl
mov
or
stc
cmp
push
adc
outsb
nop
xlat
mov
nop
mov
push
and
pop
push
mov
aaa
mov
or
loop
push
scas
movsb
je
jge
and
sbb
pushf
push
adc
jecxz
cs
out
repz
imul
addl
lds
roll
inc
xchg
cmp
lods
cmp
or
cmp
jp
or
mov
scas
sub
and
out
jnp
mov
cmp
cs
shrb
dec
mov
mov
in
shrl
adc
ds
lret
jae
es
dec
add
fs
mov
and
rcrb
push
mov
mov
movsb
out
out
jnp
and
dec
or
mov
outsb
fcmovne
daa
inc
iret
fmull
clc
cmp
add
rcrb
and
and
mov
pop
push
push
dec
push
sbb
pop
mov
xor
and
sti
pusha
sti
call
sub
add
xchg
pop
xor
lock
arpl
push
in
mov
jge
cwtl
xchg
cmovno
repnz
sahf
sbb
push
xchg
das
add
pop
fwait
xor
bnd
rorb
adc
fcoml
cmp
in
jb
arpl
push
mov
iret
es
rolb
jg
pop
jbe
mov
sbb
jg
imull
fcomi
or
lds
dec
es
scas
jbe
sarl
mov
testl
and
mov
mov
jge
push
stc
data16
pop
ret
and
jge
lret
xor
jo
cmp
mov
push
andb
scas
enter
dec
mov
lea
xchg
adc
out
repz
mov
fstpl
bound
shl
test
cmp
in
mov
loopne
sub
pop
call
cmc
xchg
add
push
shlb
or
sti
aam
jle
mov
push
fldl
mov
addl
or
popa
push
sbb
jo
enter
ljmp
stc
sbb
cltd
lret
out
push
jmp
inc
xor
outsb
icebp
push
jle
data16
ret
cwtl
xchg
xor
or
pop
sar
loopne
xor
sahf
or
fisubrs
repz
outsb
pop
inc
hlt
add
mov
xor
or
out
mov
fildll
inc
jecxz
notl
or
sub
test
cmpl
scas
pop
push
jecxz
mov
push
jecxz
xchg
lret
xchg
ljmp
jecxz
imul
mov
or
mov
push
push
sub
fs
cld
pop
inc
fidivrs
mov
cmp
ss
dec
testl
lcall
mov
or
pop
iret
fmulp
insl
into
mov
jne
jecxz
mov
and
or
leave
mov
mov
prefetch
jl
jmp
or
or
repnz
arpl
adc
sbb
dec
mov
sahf
subl
mov
push
lcall
std
and
xlat
mov
adc
daa
test
cmc
stos
roll
int
xchg
xor
mov
filds
lret
xchg
sub
jmp
inc
pushf
cmp
sub
xchg
test
push
inc
ss
cmp
ret
xchg
idivl
sbb
xchg
xor
mov
jle
rorb
test
ja
dec
cmpsb
insb
aas
data16
pop
int
jne
sbb
cmp
mov
and
sti
xor
out
cwtl
jnp
add
lods
lock
ljmp
dec
mov
and
test
lret
jecxz
dec
sbb
add
push
out
jbe
scas
pop
mov
adc
insl
mov
jo
das
or
dec
in
pop
adc
fs
jns
int3
insb
mov
and
lea
aas
push
pop
dec
das
jl
stos
ret
sub
shrl
shlb
and
pop
xchg
stos
sub
mov
mov
inc
lcall
es
mov
mov
repz
clc
and
pop
sbb
lahf
push
and
pusha
sbb
jmp
lahf
sub
inc
push
sarb
cs
add
dec
lahf
pusha
in
lret
loopne
arpl
xchg
pop
test
in
mov
rorb
das
daa
cli
jl
mov
sti
hlt
das
mov
sub
mov
int
mov
xchg
mov
dec
push
mov
insl
dec
das
stc
mov
fistpl
scas
jle
mov
push
stos
push
cmc
lock
push
cwtl
xchg
int3
adc
xchg
push
repz
aad
aas
int
push
mov
scas
cli
and
and
jg
adc
inc
pop
pusha
xchg
insl
shll
pop
mov
xor
and
cmpsb
push
rcrb
adc
ret
mov
in
lret
in
cmp
mov
cmp
dec
add
adc
push
sbb
movsl
xchg
je
xchg
cli
xchg
gs
push
jae
mov
mov
ret
mov
rclb
lret
pushf
aas
add
stos
int
aaa
cwtl
add
call
fst
cmc
into
push
push
push
popa
sub
notb
and
mov
repz
mov
out
lods
out
push
or
roll
cwtl
adc
cltd
dec
out
divl
jbe
jle
insl
add
sub
dec
mov
jle
in
add
lret
repz
loop
into
inc
clc
shll
ljmp
ret
imul
mov
loop
xchg
push
jb
bound
mov
mov
popf
mov
test
mov
out
nop
jnp
fbstp
stos
sbb
movsb
fcom
loope
fsubr
in
mov
sub
loop
mov
pushf
push
push
das
addr16
cmpsb
dec
pop
mov
push
mov
jl
push
mov
xchg
jmp
out
xchg
jg
push
fsubrs
xchg
adc
or
daa
inc
in
stc
jnp
xchg
inc
out
add
dec
dec
test
cmpsl
sarl
pop
daa
add
ret
xor
rcll
arpl
mov
and
mov
mov
shll
push
shlb
insl
cmpl
in
sbb
mov
push
mov
jecxz
lock
xchg
dec
push
in
inc
pop
mov
lods
xor
lock
adc
add
xchg
out
fmul
sbb
add
or
xchg
addr16
test
and
icebp
mov
inc
out
mov
mov
fcompl
dec
inc
out
sahf
cmpsb
mov
js
dec
inc
pop
scas
pop
mov
jl
repz
mov
mov
ljmp
outsl
cltd
push
or
es
jbe
sub
stos
in
lcall
fs
cmp
sahf
sti
cmpsb
pop
sbb
pop
adc
inc
ret
xchg
std
mov
push
es
stos
mov
sub
pop
ret
test
inc
aam
lret
jge
xor
mov
add
sub
shll
enter
cmpsb
mov
pop
mov
push
push
or
inc
inc
sub
jl
stc
jnp
loopne
jae
imul
push
and
popa
xchg
xor
jns
add
fiadds
dec
aas
cmp
sub
mov
inc
mov
outsl
mov
sbb
imull
add
dec
mov
cmpsl
lcall
sbb
add
xlat
pop
mov
into
ljmp
cld
dec
pop
popa
inc
iret
jae
adc
push
stc
pop
lds
or
cmpsb
push
ja
aaa
fidivs
inc
mov
and
and
push
orl
cmp
mov
das
jmp
xchg
lret
sub
cmc
add
xchg
mov
fs
jmp
jne
mov
pop
andb
fwait
mov
xchg
or
mov
mov
dec
mov
mov
jle
pop
pop
cmp
or
xchg
movsb
imul
dec
faddl
mov
sub
ret
in
cltd
cmp
add
repnz
add
push
not
clc
lret
adc
mov
ret
pop
ds
fildl
push
daa
std
test
shr
or
cmp
sbb
sti
aad
pop
movsb
loope
imul
mov
adc
sti
lods
mov
sbb
mov
adc
scas
lods
incl
xor
sar
xchg
dec
adc
das
stos
push
jae
lds
fadd
mov
jl
mov
inc
sub
out
dec
mov
adc
fidivrs
arpl
repz
lret
mov
inc
pop
mov
sub
iret
iret
imul
into
xchg
and
out
out
xchg
xchg
scas
popa
mov
dec
shlb
ljmp
mov
jecxz
push
pusha
sbb
inc
movsl
pop
jp
add
xchg
aaa
pop
icebp
popa
jmp
pop
int3
cmp
xor
fisubl
xchg
test
pushf
jnp
sub
or
cmp
inc
mov
js
cmp
dec
push
mov
insl
aas
fnsave
mov
popa
xchg
and
xchg
enter
rol
xchg
dec
out
pusha
fbld
pushf
push
xchg
dec
dec
sub
jg
arpl
insb
push
pop
cmp
xchg
push
call
hlt
sub
xchg
push
jmp
mov
adc
shll
dec
fbstp
loopne
mov
jp
push
ja
clc
push
pop
sbb
pop
inc
inc
adc
test
sub
fidivrs
dec
pop
out
pop
scas
push
fisubrl
xchg
outsl
or
xlat
cmp
sbb
push
adc
xlat
dec
clc
imul
sub
ljmp
jg
jne
sub
fs
dec
push
mov
sub
mov
enter
mov
in
orb
pop
lret
mov
lret
cltd
mov
push
xchg
add
call
xchg
loope
adc
xchg
iret
or
mov
mul
mov
cmp
xor
into
pop
push
cmp
popl
fsubrp
loop
out
leave
movsl
shr
enter
xchg
enter
cmp
sarl
push
adc
cmp
push
pop
gs
or
xchg
mov
into
xchg
add
jmp
mov
cs
push
das
or
test
in
dec
clc
jb
daa
mov
sbb
inc
mov
fisttpll
sub
pop
popa
jno
push
and
popa
lods
jb
mov
jmp
push
in
aam
pop
push
arpl
loope
xor
dec
jb
sbb
jb
mov
mov
arpl
movsl
aaa
mov
push
out
leave
sbb
movsb
dec
stos
dec
cmpsl
dec
out
in
insb
push
idivb
cltd
jne
ljmp
adc
test
sarb
sub
cwtl
out
mov
xchg
push
dec
in
adc
lds
hlt
aad
stc
pusha
mov
cmc
push
cmp
rorb
sbb
fbld
enter
push
adc
cmpsb
jne
cmc
mov
test
mov
inc
iret
mov
jb
or
aam
or
loop,pn
xor
pusha
sbb
add
std
in
adc
es
sub
pop
lahf
test
fldcw
popf
shlb
inc
sbb
fsubrs
lahf
fldt
mov
pushf
jp
add
repnz
out
rolb
cmp
in
lea
jle
xchg
arpl
pop
fcoms
mov
fimull
pop
adc
call
mov
into
adc
jbe
and
or
sbb
loop
imul
test
add
jns
sub
sbb
sub
push
mov
fwait
xchg
lahf
test
pop
inc
pusha
add
popa
push
dec
lret
mov
adc
hlt
push
ja
stc
int
inc
aaa
pushl
cmp
sbb
xor
lahf
inc
popf
gs
jl
push
insl
in
mov
inc
jnp
dec
ds
movsb
ja
scas
xorb
inc
es
in
xchg
fiadds
test
insb
cmp
xlat
sbb
shl
lods
popa
adc
push
ljmp
mov
jle
dec
xor
mov
mov
mov
push
add
mov
jnp
mov
xor
inc
lret
sub
cmp
jecxz
movsl
inc
rcrb
lahf
dec
mov
adc
testl
enter
push
mov
ficompl
out
lea
imul
mov
into
mov
out
jno
dec
add
cld
mov
or
sbbb
jecxz
insb
pop
push
cs
loope
sub
or
aaa
dec
int3
idivb
nop
loope
and
mov
pop
push
dec
movsb
add
hlt
or
repz
fnstenv
and
outsl
inc
pop
sbb
pop
lret
cmpsb
or
sub
in
pop
mov
cwtl
stc
sub
jmp
stos
out
adc
mov
faddl
insb
pop
or
sbb
or
mov
xchg
or
mov
test
loop
mov
in
std
andb
push
inc
out
js
test
rol
sub
gs
mov
cmp
xchg
fs
in
clc
das
mov
lret
jecxz
cmc
leave
insl
inc
out
pop
push
daa
mov
sub
sbb
dec
in
push
adc
mov
pop
dec
inc
mov
loope
out
dec
pop
inc
movsl
loop
inc
rorl
pop
mov
jbe
loop
and
js
lds
rorb
aas
mov
xor
cmc
cmp
xor
mov
push
xlat
or
stos
inc
pop
xlat
cmc
int3
inc
dec
and
and
lods
mov
pusha
je
push
testb
dec
je
and
cmpl
push
in
aaa
movsl
pop
sbb
lock
lods
popa
pop
sbb
xchg
sti
xchg
rorw
mov
jno
xor
popf
fcoms
dec
aad
insl
fistpl
inc
push
js
jg
mov
das
loope
imul
ja
push
sub
nop
repnz
dec
mov
pop
stos
enter
jmp
shlb
dec
aas
dec
aas
xchg
sub
or
jp
cmp
mov
mov
xor
scas
xchg
js
or
jg
pop
push
push
jnp
in
push
cmc
movsl
andl
ret
pop
std
outsl
lods
mov
test
shrb
and
and
and
jle
and
icebp
and
jle
pop
pop
pushl
mov
stos
cmp
scas
add
in
addb
test
insl
das
pop
test
lods
xchg
cmp
xor
pop
push
or
push
sbb
fs
les
iret
or
int
test
mov
call
pop
cmp
jmp
mov
pop
and
icebp
pop
stos
dec
pushf
loopne
mov
adc
aad
inc
jl
xchg
and
adc
into
insb
fdecstp
aas
popf
jg
enter
cmpsb
decl
test
imul
lock
fsts
outsl
xor
out
xchg
inc
ja
mov
pop
mov
or
popa
cmp
or
jae
xchg
popa
dec
in
jno
mov
gs
out
mov
js
or
movsl
jg
mov
jecxz
loopne
xchg
lock
mov
cs
xchg
jmp
into
repnz
call
loopne
add
mov
stos
adc
cmc
stos
jns
add
push
pop
lods
fwait
mov
mov
repnz
das
push
sar
cs
out
out
add
aad
xor
int3
and
mov
sbb
imul
icebp
int3
mov
and
js
aas
push
imul
pushf
mov
push
pop
jno
scas
adc
into
int3
bound
adc
sub
data16
leave
movsb
shl
sbb
dec
pop
cmpsb
sti
icebp
pop
jmp
lret
or
dec
cltd
and
pushf
jmp
mov
fwait
pushf
pop
pop
out
ret
add
mov
mov
stc
in
inc
in
aad
int3
cmp
imul
adc
loop
loopne
ljmp
lcall
and
fcmovne
roll
push
mov
insb
fiaddl
push
push
int3
js
insl
jp
jge
pop
dec
in
iret
fimuls
mov
adc
ljmp
cmpsl
lods
jbe
cwtl
imul
loope
xchg
mov
sarl
add
jno
imul
outsb
fs
push
xchg
adc
jl
push
xchg
inc
nop
xchg
or
jp
xchg
xor
pop
scas
clc
add
cmp
cs
ss
mov
xchg
jno
lret
dec
pop
fdivrs
sti
mov
in
xor
mov
xchg
insl
mov
or
xchg
dec
hlt
push
xor
and
loop
mov
stos
jge
mov
xchg
adc
mov
add
or
in
add
and
enter
ja
or
movsb
ficoms
mov
mov
jmp
mov
or
sti
imull
pop
imull
pop
xor
sahf
sbb
pop
scas
fsub
xchg
fcomps
into
pushf
pop
arpl
push
lods
xchg
popa
in
and
stos
idiv
fsubs
dec
cld
outsl
push
js
sti
nop
lcall
iret
and
daa
adc
push
cmp
xor
std
repnz
pop
sub
jbe
mov
add
scas
leave
mov
cmp
rcrb
hlt
jmp
or
jnp
cmp
inc
cmp
sbb
data16
ss
ljmp
push
shlb
addr16
fcmovnu
stos
lcall
icebp
mov
jl
lret
mov
and
mov
dec
int
add
inc
fs
cli
cli
fists
bound
imul
clc
dec
aas
xor
xorb
sub
roll
call
outsb
inc
jo
push
shlb
sub
jmp
add
js
enter
out
lcall
cmpsb
and
jge
mov
sti
xor
push
inc
cmp
mov
arpl
adc
fldenv
mov
pop
aam
das
pop
mov
repnz
pusha
rcrl
jbe
scas
inc
call
jae
cmp
cmp
cs
testl
int
jecxz
sbb
sub
or
mov
cli
sbb
frstor
je
pop
inc
in
add
test
loope
pushf
cmpsb
mov
inc
add
sbb
add
pop
jb
mov
adc
and
fcmovu
bound
mov
mov
push
mov
icebp
or
mov
cmc
xchg
mov
xor
pop
push
out
leave
jle
orb
jecxz
ja
cmp
cli
jecxz
cmpsl
out
adc
out
sbb
lcall
pop
adc
mov
jecxz
fs
les
lcall
fs
cwtl
jnp
jae
jmp
or
mov
arpl
xor
cmp
sbb
inc
sbb
mov
int3
lods
mov
lea
jne
pop
enter
mov
leave
ret
in
data16
jb
mov
pusha
aas
sbb
test
lea
push
leave
inc
inc
outsl
push
lret
push
std
mov
xor
inc
or
nop
cld
push
sub
cmc
clc
mov
cli
outsb
lret
popf
adc
cmp
movsb
sbb
mov
fdivrl
xchg
imul
push
or
mov
mov
jb
icebp
mov
pop
cmp
repz
aas
fwait
adc
mov
imul
sti
sbb
rclb
ljmp
movb
les
pop
dec
cwtl
adc
lret
std
dec
ljmp
out
pop
in
mov
cmp
inc
push
adc
in
out
into
dec
add
fdivl
fistl
ret
inc
test
pop
mov
data16
cltd
stos
or
scas
and
ror
insb
out
jnp
cmp
pop
add
jmp
ja
mov
pop
inc
cwtl
in
popf
insl
pop
xor
pop
and
in
jbe
insb
decl
sbb
jmp
loope
add
xchg
jns
sub
ret
cld
call
shll
sti
cld
pop
lods
mov
test
dec
call
je
push
adcl
call
leave
dec
mov
mov
and
mov
hlt
jo
push
push
push
icebp
inc
iret
stc
cmp
pop
outsb
repz
jo
sub
test
adc
out
lock
add
dec
pop
ficompl
test
gs
in
adc
xchg
or
jns
test
ja
movsb
sbb
adc
aaa
add
fildll
loope
les
mov
push
pop
test
cmp
jl
iret
and
add
and
xchg
imulb
pop
insl
incb
sub
pushf
dec
adc
stos
pop
mov
add
sub
pop
adc
scas
or
fildl
xchg
ror
cmp
jg
cs
xchg
ljmp
lods
mov
lock
sahf
dec
mov
icebp
adc
cmpsl
sahf
les
inc
inc
outsl
insl
adc
or
and
loope
push
jno
jl
dec
call
gs
stos
mov
fdivp
outsl
xchg
or
pop
cmc
dec
mov
mov
or
cltd
sub
enter
in
fiaddl
push
jp
dec
xchg
fstpl
aas
jp
fsubl
inc
fwait
pop
call
popf
cmc
and
cmp
cld
mov
mov
fs
mov
sub
test
pop
lret
out
out
addr16
das
aas
xchg
pop
sbb
push
mov
negl
adc
and
add
inc
or
dec
sub
into
lcall
movsb
outsl
dec
mov
inc
add
adc
xchg
add
and
in
lahf
mov
gs
pop
adc
nop
arpl
fldt
mov
ja
push
dec
mov
rolb
bound
insl
sub
incb
mov
sub
aaa
test
iret
sbb
sbb
or
or
icebp
pop
test
cwtl
les
sbb
xchg
shl
adc
jno
xchg
je
mov
mov
mov
inc
adc
sub
call
mov
out
push
jecxz
iret
mov
adc
xor
pushf
outsb
jmp
pop
xor
shl
cmpsb
add
movsl
cwtl
in
cwtl
push
xor
insl
pop
icebp
mov
inc
icebp
mov
lahf
mov
js
add
sbb
scas
stos
pop
fdiv
push
cs
and
jmp
dec
mov
and
mov
cmpsl
mov
sahf
jb
popf
xor
jp
js
or
fcmovnb
test
and
ja
cmc
pop
inc
dec
jle
stos
int3
jae
leave
sub
mov
fdivrl
jg
add
sub
adc
sub
push
sbb
mov
leave
jecxz
dec
fmull
push
fmuls
and
pop
imul
push
fcompl
cmc
jmp
ja
inc
jecxz
push
and
scas
cmpsl
pop
pop
push
add
adc
divb
push
cmp
shll
pop
test
jp
and
mov
mov
inc
daa
cmc
sbb
andl
out
cmc
inc
inc
inc
sub
sbb
outsl
cmp
and
mov
jge
adc
adc
pop
sbb
jp
lods
xchg
push
jg
sti
es
shll
mov
sahf
clc
or
cld
es
ret
scas
xor
mov
mov
mov
mov
mov
notl
call
jge
int3
xchg
cmc
mov
push
enter
in
add
jg
jne
xchg
pusha
mov
leave
daa
test
lret
adc
ds
or
fildl
xor
sbb
mov
scas
jo
push
xor
sbb
mov
hlt
xchg
jge
cmc
test
jp
stos
or
jnp
dec
lds
pop
lds
add
push
arpl
das
pop
jnp
push
mov
loope
inc
dec
sub
adcl
jae
daa
add
repz
divl
cmp
outsb
pop
jno
jmp
rep
mov
cmpsl
les
gs
push
xor
mov
out
ss
std
jle
stos
xchg
out
out
mov
lods
push
cli
bound
aad
xchg
adc
cwtd
dec
or
popf
lcall
outsl
cmc
ljmp
stos
inc
inc
xor
dec
xchg
clc
stos
or
mov
lret
fmuls
and
int
lcall
test
jecxz
ret
arpl
mov
mov
dec
xchg
aad
addr16
outsb
push
adc
mov
sbbl
enter
ficompl
mull
daa
push
cmpsl
mov
outsl
or
cmpsl
dec
insb
jns
es
mulb
mov
push
dec
nop
insb
aaa
jnp
dec
addr16
jge
jb
imul
cmp
testb
arpl
insb
cmpsl
mov
inc
mov
cmp
inc
push
test
mov
add
nop
test
adc
push
mov
sbb
dec
sbb
mov
loope
sub
lock
or
push
cli
aas
cmc
mov
cltd
pop
push
sub
in
pop
hlt
xor
arpl
sarl
pop
loopne
add
mov
icebp
add
iret
dec
inc
ljmp
fiadds
testb
sti
xchg
jge
xchg
mov
in
pop
mov
adc
in
push
divl
stos
mov
aad
insb
xchg
icebp
rorb
and
lret
mulb
jp
mov
mov
push
xchg
aaa
notb
out
jmp
hlt
fstpl
sub
lods
in
adc
xlat
nop
push
mov
call
out
mov
inc
mov
xor
jg
fsts
insb
cmp
mov
add
add
mov
mov
mov
xor
icebp
dec
jnp
daa
addr16
inc
int3
cmp
popf
jl
cmp
test
in
xchg
in
shll
pop
aam
inc
inc
stc
fdiv
scas
xor
mov
in
imul
jnp
mov
sbb
adc
out
or
call
insb
ss
adc
xchg
xlat
push
xor
test
fcompl
scas
enter
outsb
lret
xlat
mov
pop
or
fcoml
mov
push
sub
mov
out
aas
lret
jle
es
ds
sarl
imul
sahf
dec
insl
insb
jle
mov
cmp
repnz
xchg
imul
mov
movsb
pop
fsubs
aam
movsl
mov
cltd
ds
fnstcw
sbb
xor
test
js
and
push
xchg
push
sub
lods
je
or
or
xchg
jmp
add
test
fs
divl
cmp
test
ljmp
or
jmp
dec
xor
push
xchg
cmp
scas
xor
subl
adc
dec
xor
dec
adc
lahf
sbb
loope
cs
sub
ficoms
jns
xchg
add
popa
lods
aam
scas
scas
adc
imul
dec
mov
push
fistl
sub
std
lcall
lret
out
mov
insl
jle
push
push
mov
leave
mov
xchg
dec
pop
movsb
push
jns
mov
stc
movsl
adc
icebp
dec
flds
je
pop
shll
lock
cmp
push
fucomi
fcmovb
add
cmp
mov
push
and
icebp
test
xchg
stos
lods
pop
inc
xor
mov
ja
std
xchg
repnz
addr16
int3
fstl
stos
rorl
push
pop
push
aam
push
xor
and
push
pusha
mov
imul
sbb
xlat
adc
push
ljmp
ds
leave
mov
jge
xchg
loope
push
int3
xor
mov
mov
sub
sti
jne
xor
stos
cwtl
fldenv
int3
adc
jae
jl
or
jns
push
xchg
test
xor
and
sbb
jmp
cwtl
cmp
mov
or
pop
mov
aas
lret
mull
push
negb
or
cltd
xchg
jl
sbb
mov
jp
lahf
sti
jb
sub
int3
lret
out
pusha
jg
jno
js
out
xchg
push
js
cmp
test
sub
stos
andb
jo
cli
ja
in
leave
or
push
leave
arpl
cmpsb
mov
jns
sub
sbb
pop
push
adc
sti
mov
add
jl
add
in
ret
add
sbb
xchg
daa
stos
int
das
jg
jle
sbb
xor
dec
les
jmp
jb
xchg
sbb
xchg
addr16
movsl
fistpll
outsb
hlt
iret
add
inc
jbe
stos
sahf
inc
mov
sub
movsl
cmpl
into
data16
and
lods
mov
mov
xchg
push
pop
int3
dec
mov
push
jbe
pushf
aas
je
dec
jge
mov
int3
ror
pop
pop
sti
mov
xor
sub
pop
lahf
xchg
pop
jle
div
fadd
push
jbe
mov
cli
stc
outsl
je
dec
jp
xchg
mov
jl
inc
test
jne
ja
test
pop
and
sbb
orb
lret
fldl
loope
das
popa
sub
into
add
inc
mov
xchg
sub
mov
jp
cs
repz
mov
dec
push
mov
xor
or
mov
mov
or
pcmpgtw
jle
pop
mov
icebp
mov
mov
cmp
mov
cmp
mov
jle
mull
xchg
mov
sti
pop
sbb
jmp
sub
fs
jg
cli
xchg
sub
pop
and
add
add
les
out
out
cld
cmpl
pop
imul
jmp
jns
lods
sub
js
sbb
jne
fidivrs
xchg
xchg
aas
test
cmp
mov
lock
shl
stc
inc
lcall
mov
pop
loope
jecxz
stos
sub
repnz
sahf
ja
or
inc
jo
inc
push
test
add
gs
sub
ljmp
data16
out
sbb
mov
push
cld
sbb
xor
enter
arpl
cwtl
add
add
ret
fucomip
or
jb
in
rol
push
mov
notb
xchg
int3
mov
jae
cmc
mov
aam
xlat
sub
inc
cmp
sub
adc
jg
add
leave
inc
dec
inc
clc
add
aad
fsubrs
test
imul
jne
sbbb
inc
clc
gs
adc
mov
bound
adc
pop
cmp
in
mov
xor
aas
cmp
imul
in
setae
pop
xor
mov
leave
inc
in
and
jecxz
pop
fucom
inc
sbb
ds
pop
int
push
mov
out
daa
jae
adc
push
or
loopne
dec
adc
lcall
mov
cmp
clc
stos
icebp
pop
cwtl
call
sub
decl
add
cmp
lock
stc
lea
mov
or
jns
lods
mov
negl
sbb
or
xor
mov
mov
imul
mov
lods
insb
push
lret
int
and
xor
fwait
pop
imul
cmp
xchg
and
jae
sbb
hlt
aad
xchg
imul
jle
jmp
pop
clc
sub
rorl
sub
leave
push
sub
adc
pop
jns
lds
jl
mov
and
adc
lret
lock
mov
ret
jbe
mov
and
sub
fs
gs
addr16
cmpsb
sbb
aas
or
mov
mov
scas
inc
mov
rcrl
subl
mov
scas
rcll
fs
xchg
dec
jmp
jns
sub
push
dec
mov
imul
mov
add
addr16
cld
mov
je
outsl
add
movsb
add
push
pusha
nop
push
sahf
in
mov
enter
push
rolb
popl
lahf
lock
xchg
pop
iret
cmp
dec
push
cwtl
sbb
xlat
dec
inc
add
sbb
call
mov
inc
pop
testl
cmp
out
std
test
dec
fs
add
fwait
and
dec
cmpb
jbe
out
cmc
test
inc
mov
js
or
addr16
imul
test
outsb
xchg
arpl
adc
xchg
negl
fnstsw
stos
gs
push
ds
in
data16
clc
shlb
cld
sub
cmc
xchg
sbb
mov
push
jns
xor
pusha
gs
enter
push
sbb
push
das
dec
mov
jecxz
test
bound
clc
daa
dec
adc
aad
movsl
xchg
jge
dec
pusha
pop
sti
data16
mov
pop
xchg
lea
mov
push
xor
fcmovnu
xchg
or
and
mov
gs
jg
jne
iret
les
sub
leave
inc
mov
push
sbb
hlt
stos
repz
and
and
lret
xchg
inc
mov
je
xor
pushf
and
mov
out
ds
shrb
jno
xchg
lea
adc
xor
add
jmp
cmp
jl
jmp
mov
push
xchg
aaa
adc
fstpt
inc
and
sarl
fsubrl
cwtl
push
leave
mov
int3
stc
and
push
mov
dec
call
adcb
loop
mov
or
mov
in
ja
mov
inc
mov
fnsave
imul
xor
and
insb
cmc
shll
sbb
mul
pushf
out
outsb
into
int
mov
inc
lret
lock
cmpsl
xor
inc
in
jl
ret
xchg
imul
ret
sbb
enter
add
stc
cmpsl
mov
lahf
mov
dec
xorl
nop
mulb
fs
fdivr
xchg
cmpsb
or
shll
ss
cmp
fcoms
mov
jmp
mov
pop
mov
sbb
push
mov
cmp
imul
aam
pop
int3
pushf
lock
aad
lret
ret
rclb
or
sbb
les
add
jl
in
xor
sub
dec
pop
loop
and
outsl
push
bound
jo
inc
scas
or
test
jmp
sti
cld
dec
fsubr
mov
push
scas
scas
adc
mov
cli
pop
bound
rclb
jp
xor
jno
int3
sbb
dec
arpl
adc
dec
push
out
mov
popf
lret
lds
mov
out
int
dec
inc
flds
pop
mov
movsb
add
dec
xchg
inc
push
ljmp
fists
inc
jge
jae
test
mov
sub
je
xlat
sbb
add
shll
into
test
mov
pop
dec
mov
pop
aam
pop
mov
ficoml
stos
shr
lock
push
add
or
mov
repz
push
loop
jbe
lcall
xchg
cmp
dec
jae
shlb
inc
mov
rol
push
sbb
jmp
int
out
xor
pop
push
push
filds
jnp
test
add
insl
push
sub
push
cmpsb
fcomi
lods
out
cwtl
fwait
sub
bound
push
cmp
xchg
clc
inc
push
or
or
push
jge
dec
ret
push
mov
mov
pop
or
idiv
xor
mov
outsb
repz
cmp
and
xor
pop
adc
push
cmp
test
test
sub
mov
ss
mov
je
arpl
daa
jns
pop
push
jp
lods
dec
xor
mov
das
mov
setnp
inc
dec
mov
and
xor
es
inc
push
sbb
call
cwtl
lcall
daa
scas
xor
push
lock
shrb
add
test
dec
je
loop
xor
adc
sub
sahf
jb
dec
pop
mov
cmp
ret
cmpsl
jmp
inc
fstps
push
xor
dec
cmpl
sbb
icebp
shll
pop
sar
cmp
cld
iret
addb
outsb
push
inc
and
mov
jno
lret
mov
fistps
pop
sarl
lods
inc
add
mov
mul
cmc
xlat
adc
push
xlat
add
jmp
fucom
pop
jg
mov
mov
mov
out
movsb
push
and
fistpl
mov
jp
in
inc
lcall
in
mov
push
movsb
cmp
ja
xorl
jbe
or
sub
mov
cmc
inc
lock
mov
test
scas
adc
fldl2e
and
xor
fmuls
mov
jg
out
cmp
sbb
xor
push
data16
lods
ja
int3
cmpsb
int3
push
or
mov
mov
cli
mov
clc
loope
out
dec
andb
and
lock
ljmp
rclb
outsb
sub
and
pop
inc
cmp
lahf
mov
xchg
sub
sub
xchg
mov
mov
fisttpl
push
xchg
xchg
js
dec
cmc
push
pop
xchg
divl
roll
or
xchg
cmp
faddp
sbb
dec
inc
adc
stos
sub
les
inc
dec
cld
dec
in
dec
nop
lods
and
nop
cli
sub
mov
popf
cs
addl
fstl
fstl
cmp
notl
sub
mov
int
jecxz
add
push
jge
jmp
repz
and
ffree
mov
cld
in
ds
fsub
adc
and
mov
pop
add
jne
aad
repnz
sti
and
mov
mov
enter
push
cmp
aam
mov
and
jecxz
sub
cmp
arpl
add
inc
push
stos
sub
loop
cmp
push
flds
jl
iret
arpl
fs
in
iret
push
push
movsl
aad
sbb
adc
or
adc
xor
dec
cmp
mov
and
mov
fldenv
testl
push
aad
popf
mov
pop
xchg
jnp
sbb
sbb
hlt
adc
sbb
rcll
xchg
out
adc
movsl
aad
cmpsb
inc
into
jmp
inc
leave
dec
cld
mov
repnz
xor
int3
mov
dec
cmpsl
fimull
xchg
sub
xchg
xor
dec
or
std
adc
pusha
inc
loope
ret
sbb
jae
sbb
jnp
lea
orl
pusha
jns
idivl
imul
nop
daa
stos
xor
imul
inc
mov
insb
pop
jge
shrl
dec
hlt
stos
dec
sti
rcrb
push
je
out
lods
ffree
push
arpl
push
imul
sbb
pop
push
das
out
pusha
xchg
mov
cld
jle
push
add
mov
mov
test
push
inc
add
lahf
pop
or
and
out
push
push
mov
and
data16
push
and
add
add
xchg
aaa
sub
jle
cli
aaa
push
xchg
mov
inc
jo
push
mov
mov
mov
add
xlat
cmc
unpckhps
sahf
inc
xchg
in
adc
dec
int
pusha
aam
push
imul
jns
push
sub
xor
xchg
clc
imul
loope
and
xchg
fstpl
pop
imul
nop
ret
mul
jno
mov
lds
xchg
addr16
sub
into
lret
push
sbb
jae
mov
rorl
ret
lods
mov
pop
std
add
push
xlat
adc
flds
xchg
aad
mov
loopne
bound
xchg
jmp
imul
xchg
scas
jns
sub
stos
pop
dec
push
inc
inc
xor
ljmp
lock
xor
divl
arpl
test
jmp
test
adc
mov
sbb
out
lcall
push
mov
jnp
and
stos
sbb
dec
aas
xchg
and
sbb
cli
inc
ljmp
pusha
push
mov
xlat
leave
std
mov
rcl
shr
mov
add
jmp
pop
popa
lret
fs
adc
inc
sub
ja
push
fcomp
movsb
xorb
popf
xor
outsl
add
lds
push
xor
inc
fwait
xchg
aaa
cmp
add
popf
shll
sbb
pop
fwait
ret
sbb
sub
fdivrs
mov
inc
out
and
xlat
inc
push
arpl
pop
shrl
stos
push
pop
lock
push
outsb
jp
jne
iret
test
clc
lods
and
jb
lcall
mov
stc
mov
mov
xchg
rcrl
jae
andb
aaa
sbb
popa
xor
inc
in
and
insb
sbb
outsl
cltd
sbb
jb
ja
push
popf
test
mov
inc
enter
lds
cmp
mov
stos
scas
in
dec
jbe
shll
mov
cwtl
in
pop
movsb
stos
jns
js
xchg
fcomi
imulb
lret
cmp
test
push
xor
cmove
xor
jae
cltd
loope
xchg
cmp
int3
fs
xlat
add
adc
inc
rcl
enter
stos
inc
cmpsb
sbb
loope
and
popa
jmp
push
push
adc
pop
aaa
add
or
lods
adcl
mov
orb
sub
out
mov
jns
or
scas
les
sbb
mov
daa
jnp
ficoml
mov
in
sbb
xor
push
out
cltd
cmp
xchg
scas
scas
sub
adc
ret
sbb
lret
addr16
sbb
pusha
mov
push
sub
inc
lcall
pop
icebp
push
arpl
sbb
push
hlt
and
repnz
sar
addr16
mov
cmc
lret
aam
xor
loope
push
stc
lods
inc
lods
inc
inc
andl
push
mov
jmp
sub
jl
push
rcll
loopne
lret
lea
imul
fcmovnbe
mov
jmp
sub
fcomi
mov
int
mov
pop
lcall
adc
lock
push
pusha
cs
pop
jge
hlt
inc
xchg
xor
sbb
push
int
jg
loope
mov
inc
inc
sbb
idivb
cmp
sbb
dec
add
roll
mov
mov
xor
sub
stc
and
sbb
pushf
clc
sbb
jmp
ds
mov
sub
inc
or
fnstenv
sub
jo
out
adc
inc
adcb
mov
and
insb
rorb
je
lahf
icebp
push
push
or
out
es
loopne
xor
je
xchg
int3
pusha
sub
pushf
cmp
xchg
outsb
ljmp
mov
or
pop
fnstcw
fwait
or
xchg
ljmp
pop
insb
pop
imul
inc
xchg
dec
jmpw
test
icebp
fimull
inc
sub
ret
fnsave
push
or
call
mov
xchg
sbb
out
frstor
cmpsl
stos
and
rcrl
jle
and
cmpsb
js
das
bound
fldt
pop
or
insl
jbe
lock
stos
xor
je
cmp
scas
ret
dec
lcall
jl
in
sbb
lods
push
fimull
mov
cmpsb
lds
xlat
adc
mov
les
dec
mov
jecxz
mov
or
cltd
adc
and
dec
call
inc
sti
mov
lcall
add
or
in
jb
enter
and
jo
dec
shlb
cmp
leave
jb
push
aam
inc
outsl
scas
int3
insl
test
xchg
aaa
xor
adc
sub
iret
pop
jmp
cld
inc
cmp
mull
xchg
fwait
jnp
sub
int
repz
scas
lcall
imul
cmc
adc
scas
xor
dec
pop
jl
mov
cmp
insb
inc
jp
sbb
push
and
inc
out
in
push
jb
or
scas
or
xchg
pushf
js
icebp
addl
mov
popa
lods
xchg
iret
xor
pop
mov
sub
and
inc
cmp
fadds
cli
mov
mov
in
loope
int
fldenv
sub
pop
loope
nop
movsb
test
loopne
xlat
xchg
fmuls
add
insb
cmp
lahf
sub
xchg
xchg
jns
pop
ljmp
adc
jne
mov
pop
nop
test
sahf
cmp
cmp
mov
sub
popa
mov
xor
jo
lret
xchg
mov
fildl
inc
out
mov
or
call
iret
or
lods
cmp
sub
iret
dec
in
lret
sbb
or
sub
shrb
adc
pushf
push
stos
push
lods
rcr
aam
or
push
into
mov
mov
push
xchg
xchg
rclb
in
cld
pop
xchg
adc
outsl
xchg
mov
push
mov
jb
jmp
lcall
lret
dec
out
stos
ss
dec
scas
adc
rcll
pop
loop
mov
inc
in
lds
jmp
xor
ss
lret
insb
inc
or
mov
jnp
cli
imul
nop
push
mov
dec
hlt
mov
lret
xchg
insb
pop
insl
bound
aam
xlat
stc
cmc
jmp
and
daa
add
dec
push
mov
gs
mov
orb
inc
ds
std
adc
push
add
in
les
test
loope
add
inc
imul
inc
aam
pop
and
orl
push
scas
cmc
jns
jg
insl
or
cmpsb
dec
mov
aad
bound
addr16
je
daa
test
divb
xor
std
mov
jge
and
mov
add
sub
xchg
sbb
mov
into
inc
fldt
fiadds
cmpsb
jg
mov
or
lds
js
in
stos
xchg
sub
sub
dec
sub
enter
sbb
xchg
inc
xchg
lcall
mov
pushf
and
dec
int
jge
cmpsl
insl
ret
xchg
ss
and
push
xchg
pop
push
cmp
jg
inc
lds
cmp
mov
fadd
sarb
sbb
iret
cli
add
pop
sbb
xchg
loopne
sahf
lahf
xchg
sbb
cmpsb
push
pop
and
ja
sbb
in
mov
stc
daa
adc
jnp
mov
push
jg
out
fmuls
rcll
ja
mov
dec
sub
bound
xchg
jl
add
test
je
mov
pushf
cmp
inc
vcvttps2dq
pop
jmp
andb
bound
ljmp
je
and
or
cmp
inc
scas
mov
int3
sub
inc
or
pop
into
pop
mov
and
mov
inc
or
out
outsl
mov
sub
adc
mov
push
cmpsb
ret
icebp
test
insl
add
sbb
je
push
js
sbbl
dec
cld
xor
mov
pop
das
loope,pt
dec
mov
mov
stos
mov
push
in
inc
arpl
xor
fisubl
jecxz
daa
subl
loope
in
xor
add
inc
cmp
mov
inc
mov
sub
or
jge
jno
push
test
cld
aaa
icebp
ss
push
or
test
pop
andb
and
sub
mov
jne
insl
outsl
roll
sub
xor
xor
enter
jbe
xchg
jl
arpl
jmp
pushf
movsb
xchg
cmp
mov
testl
jg
sbb
fisubs
dec
js
xor
jae
insb
in
mov
cmpsb
jb
push
rcrb
xchg
jb
scas
add
int
ja
push
imul
inc
mov
ja
dec
mov
xchg
jecxz
dec
aam
shll
inc
lea
call
lahf
xorl
dec
fistpll
sub
movsl
mov
xchg
fcoms
aam
sub
xor
lea
dec
stos
mov
subl
pop
xchg
push
adc
shlb
xor
inc
xchg
stc
loopne
dec
test
aas
xchg
ss
cmp
iret
leave
das
push
xchg
cmp
in
add
dec
pop
push
and
movsl
repz
xchg
cmc
es
call
inc
push
movsb
cmp
test
sub
mov
sar
mov
fbld
pushf
out
std
shrb
adc
add
movsb
addl
mov
jo
xlat
ja
stos
aad
imul
movsb
mov
in
xchg
mov
mov
lahf
jp
jae
dec
adc
movsb
dec
sbb
int3
repz
xchg
mov
cwtl
mov
pop
push
imul
fisttpl
xchg
in
sub
movsl
inc
push
inc
fiaddl
xor
sub
push
les
ret
fidivrs
rorb
call
sbb
cmp
shlb
mov
push
js
call
ret
out
in
cmp
mov
or
dec
test
imul
and
xchg
ds
idivl
movsb
add
out
dec
push
pop
testb
cmc
popa
popa
pop
movsb
adc
in
cmp
add
mov
mov
fwait
repz
cmpsl
xchg
mov
test
add
mov
and
repz
xorb
mov
mov
pop
mov
bound
cmp
xchg
push
inc
repz
or
fstpt
stos
outsb
stos
movsb
sti
xor
inc
mov
and
pop
xchg
fucompp
or
outsl
mov
dec
shr
fisubrl
cmp
js
xor
hlt
orl
mov
pop
js
les
mov
mov
call
push
cmp
sub
xchg
push
mov
hlt
sub
xchg
xlat
sub
aaa
mov
inc
jns
mov
dec
lods
in
fsubs
xor
push
pushl
in
test
dec
jl
in
xchg
xchg
lahf
push
cmp
test
sub
out
leave
lcall
push
enter
jo
or
ret
std
mov
push
xor
sub
icebp
cltd
fwait
adc
jb
cmp
mov
mov
andb
jb
out
mov
or
sbb
outsb
sbb
xor
xor
push
scas
out
inc
pop
nop
or
mov
dec
fstpl
mov
test
jle
sahf
mov
xor
mov
inc
mov
jae
sbb
or
cmc
sti
xchg
frstor
ljmp
mov
xchg
jle
and
loop
lods
mov
out
sti
add
mov
xchg
insl
jo
inc
adcl
rcr
dec
adc
and
xchg
cmp
loop
dec
cmp
daa
jecxz
cmc
inc
in
lea
enter
adcl
xchg
push
sti
lcall
mov
dec
inc
inc
pop
push
mov
outsl
xor
lcall
and
add
jle
sbb
clc
bt
int
adc
cwtl
test
dec
mov
imul
jnp
push
out
icebp
xchg
and
shll
hlt
or
mov
xchg
pop
push
loop
jae
sub
test
adc
into
cmpsl
sub
xchg
pop
push
cmpsb
hlt
mov
mov
sub
or
mov
jae
mov
cmpsb
sbb
dec
adcl
aas
repnz
inc
fcompl
pop
or
sbb
ftst
dec
mov
add
rcrb
pushf
push
rclb
pusha
es
xchg
dec
pop
lret
and
dec
inc
cmp
out
xchg
ljmp
pop
mov
das
pusha
add
lea
mov
xor
fwait
dec
fcmovnbe
mov
mov
inc
scas
bound
jge
jae
pushf
test
xchg
mov
or
out
loopne
stos
loop
inc
dec
pop
ret
jb
fwait
cmp
mov
dec
pop
lea
add
lea
je
test
bound
cmpsl
xchg
inc
ficoml
mov
pop
ret
rcrl
adc
or
inc
fildl
je
xor
icebp
movsb
xchg
cmp
or
add
xchg
insb
lods
adcl
mov
sbb
inc
insl
add
xchg
push
fnstcw
clc
enter
ret
add
cwtl
das
sbb
push
pop
stos
stos
shll
inc
push
repz
icebp
inc
test
cli
out
xchg
divl
cld
mov
sahf
mov
mov
jae
out
or
mov
scas
divb
into
fcompl
jns
pop
sar
cmp
sbbl
int3
mov
out
fists
jns
mov
inc
mov
arpl
enter
or
test
fidivs
pop
or
pop
mov
je
imul
xchg
adc
pop
pop
push
or
mov
inc
cmpsb
lods
and
add
dec
fs
fisubl
adc
and
test
adc
das
ljmp
add
into
rorb
adc
pop
cli
hlt
and
cli
cmpsl
in
add
jno
test
sub
aad
mov
push
xchg
pop
adc
xor
dec
or
lahf
leave
dec
mov
lea
test
inc
shrb
jg
push
xchg
mov
push
xorb
leave
jp
mov
push
push
inc
out
xchg
imul
xorl
xor
icebp
test
inc
mov
insb
mov
inc
push
insl
cmp
orb
aad
push
lods
xor
inc
inc
data16
xchg
loopne
add
test
aam
push
xchg
inc
outsb
adc
out
adc
add
adc
lds
sub
mov
inc
icebp
scas
xor
cli
test
cmp
test
ds
iret
push
and
sub
stos
xchg
sarl
pop
bnd
xchg
pop
popa
mull
loop
enter
mov
jno
lahf
loopne
por
pop
xor
cs
rcl
imul
fdivs
roll
js
daa
cmp
neg
rorb
push
test
lahf
mov
push
icebp
or
mul
inc
dec
push
sbb
xorl
aaa
push
test
int3
enter
mov
cmp
pop
je
sub
fsubs
and
sub
push
aas
cs
movsl
test
pop
cld
jl
scas
mov
xor
data16
cmpsb
xchg
mov
cli
cmp
and
ja
adc
inc
push
dec
subb
mov
inc
fcmovnb
jle
add
inc
mov
xor
std
leave
push
ljmp
rcrl
fidivl
in
push
jg
cwtl
test
imul
jbe
mov
sbb
xchg
out
adc
xor
add
cmp
sarb
inc
test
fisubs
mov
mov
fcmove
cwtl
test
pop
push
dec
sub
jle
cmpsb
imul
shll
mov
je
in
sbb
ds
jo
inc
sbb
imul
pop
aas
mov
decl
in
mov
xchg
or
popf
psubusb
jle
sbb
frstpm(287
hlt
test
enter
dec
cmp
mov
sbb
pusha
ret
dec
gs
jno
push
mov
subb
ret
sub
std
jmp
ljmp
inc
adc
and
mov
xchg
insb
jbe
dec
add
adc
outsb
notl
or
pop
sbb
dec
xor
hlt
repz
jae,pn
repnz
daa
loopne
xchg
mov
inc
sbb
les
or
pushl
and
jb
scas
jmp
xchg
lahf
push
jb
sarb
rol
lods
pusha
test
mov
inc
scas
ret
cmpsl
mov
scas
add
push
and
and
das
enter
mov
add
pop
aaa
out
pop
add
xchg
or
adc
pop
int
out
sub
repz
in
loop
jmp
lret
xchg
imul
bound
add
ss
nop
test
fwait
addr16
jle
sub
addr16
test
push
mov
mov
cmp
std
sbb
push
movl
jmp
dec
pusha
add
sbb
shrb
push
lods
lahf
xchg
lods
rolb
jo
dec
out
xchg
xor
leave
sub
cmp
push
ret
push
jne
outsl
push
mov
xlat
mov
cmp
pop
mov
add
mov
mov
imul
inc
inc
loopne
ret
pop
push
push
dec
stos
mov
add
ret
and
dec
fisttpll
jns
inc
fimull
mov
inc
adc
xchg
pop
imull
xor
in
int
push
sbb
icebp
xor
dec
test
mov
fs
jg
mov
aaa
adc
and
shll
test
dec
clc
mov
add
fdivs
stos
mov
in
xor
sbb
pop
inc
enter
pop
pop
xchg
inc
pop
jp
push
insb
notb
sbbb
popf
lret
rol
dec
cwtl
arpl
push
add
and
leave
jmp
mov
mov
jb
lock
add
cmp
repnz
mov
sbb
jne
xor
lds
jmp
dec
mov
pop
dec
testb
popa
mov
lea
jb
aad
xor
call
pop
mov
lods
dec
out
push
and
xchg
ret
xchg
stos
gs
out
mov
jne
sub
jle
pop
out
dec
out
or
subl
dec
mov
inc
lahf
rclb
es
test
push
pop
out
cmpsb
mov
pop
mov
adc
fwait
sbb
inc
in
sbb
nop
out
filds
or
ds
sub
lcall
xor
cmp
push
mov
and
pop
mov
jge
clc
add
jl
in
outsl
xor
mov
jnp
pushf
adc
jno
rcll
nop
push
imul
inc
mov
pushf
jbe
stos
iret
in
or
repz
popf
push
dec
or
adc
rclb
sahf
mov
mov
test
xor
sub
mov
sahf
push
loopne
sub
popa
lds
fcmovnu
hlt
xor
frstor
mov
inc
or
jne,pn
sahf
inc
dec
fldenv
jecxz
cmpsl
cmpsl
mov
int3
jne
jae
std
sub
pop
rorb
xor
adc
aam
ja
jns
leave
jle
stos
push
cwtl
or
push
clc
cmpsb
push
inc
dec
dec
lcall
push
ljmp
push
jno
mov
mov
add
clc
out
fiadds
scas
sbb
and
sti
repz
xchg
dec
fcmovbe
lahf
ljmp
cmp
push
pusha
sbb
xchg
in
test
std
jns
pop
adc
cs
pop
cmp
out
arpl
push
fxch
mov
jge
xchg
outsl
nop
jne
push
mov
or
pop
leave
jge
pop
mov
xchg
add
test
jnp
mov
pushl
subb
mov
nop
mov
leave
push
or
stos
adc
pop
leave
lret
pop
test
push
gs
jbe
filds
push
sbb
xchg
push
pop
pop
adc
in
pop
testb
in
sbbb
push
cmpsl
movsb
inc
sbbb
dec
cmpsb
movsl
inc
pop
xchg
pop
mov
dec
pushf
jl,pn
ret
test
aam
sbbb
xchg
das
das
or
cmpb
sub
mov
lret
xchg
jecxz
pop
push
dec
pop
in
xchg
aad
or
ljmp
js
pusha
pop
pop
or
out
inc
xor
lret
fnstcw
push
rcll
jne
jle
mov
jae
fiadds
insl
dec
mov
inc
dec
mov
sbb
push
mull
test
sarl
repnz
insl
leave
out
pop
sub
cltd
aam
outsl
cs
pusha
lea
sbb
imul
scas
and
sbb
leave
scas
push
aam
xchg
xchg
inc
xchg
ja
rol
les
dec
mov
xchg
xchg
mov
out
cmpsb
inc
cmc
jns
in
pop
cmpb
sub
jge
jno
or
and
enter
nop
pop
push
mov
jge
push
movb
mov
cmp
lds
push
cmp
mov
pop
cltd
mov
js
jne
test
inc
scas
xor
pushf
test
sbb
fnstsw
push
fwait
add
or
mov
test
cmpsb
pop
jno
shlb
cmp
or
in
lcall
xchg
dec
lea
loop
out
iret
mov
test
pop
leave
imul
lea
push
decl
adc
and
repz
inc
and
mov
jne
nop
and
in
in
addr16
shrb
pop
test
dec
lods
popa
aas
or
and
mov
je
push
xchg
data16
jne
hlt
lock
out
icebp
cmp
mov
mov
sub
push
push
sbb
mov
mov
sub
ror
lret
jnp
test
daa
inc
mov
or
in
mov
mov
xchg
push
cmpl
mov
scas
out
pushf
and
rcr
addb
into
movsb
mov
test
lcall
rorl
jno
or
pusha
dec
aad
cmpsl
scas
jg
cmp
and
js
int
adc
and
sbb
ds
mov
sbb
nop
arpl
outsl
mov
hlt
insl
dec
cmp
aam
adc
pop
dec
rcr
movsl
or
cmp
xor
int3
outsl
sub
movsb
arpl
fwait
call
xlat
sub
fcomps
stos
aad
hlt
adc
shlb
lahf
sbb
sub
jae
outsb
add
es
cli
ficoms
jno
aas
sub
fstl
and
cmp
dec
lock
dec
in
adc
pop
add
jle
mov
repz
aad
lods
mov
xchg
mov
jno
pop
pop
in
in
push
lods
or
jg
cmpsl
sbb
mov
mov
cltd
pop
mov
mov
imul
insb
sbb
sti
jae
xchg
gs
lea
jbe
hlt
clc
or
rolb
mov
mov
stc
cld
clc
ja
bound
dec
sbb
or
into
ss
add
sahf
rolb
mov
or
push
push
popa
xor
mov
movsb
nop
xor
loope
sub
daa
je
and
outsl
insl
ss
shlb
test
mov
aam
arpl
sub
int
scas
xlat
or
xchg
leave
dec
or
sub
icebp
dec
cwtl
push
add
daa
xchg
decb
add
jmp
dec
jns
int
out
movsl
push
or
cmp
jecxz
rcrb
cmp
scas
or
cwtl
andb
or
push
dec
icebp
std
mov
jbe
mov
loopne
fbld
xchg
bnd
fldl
sti
inc
pop
xchg
out
out
add
pop
out
sti
adc
add
insl
call
mov
push
lds
mov
jne
addl
jno
and
fmuls
sbb
mov
mov
negl
xchg
mov
pop
mov
inc
rcl
xor
out
xchg
pushf
loopne
xchg
popa
rcrl
ret
scas
xor
xlat
or
lods
jno
or
into
sub
ss
and
sub
pop
dec
mov
fwait
dec
fmull
push
cmpl
push
or
and
mov
es
rolb
jle
fcmovnbe
push
movsb
adc
push
adc
out
je
or
aad
psubd
cli
cmp
add
mov
cmp
aas
jg
scas
pop
sub
xor
jecxz
scas
push
stc
out
pop
pop
pop
mov
repz
lock
leave
mov
sub
lcall
inc
push
ret
stos
inc
adc
cvtps2pi
scas
adc
ja
rol
and
or
mov
add
mov
das
xlat
push
cltd
negb
sbb
rorl
or
inc
xor
fwait
adc
lret
daa
std
daa
in
enter
movsb
fildll
xor
push
jmp
mov
xchg
clc
fcomi
cli
mov
stc
sub
fsubrs
sbb
scas
adc
pop
movsb
and
leave
sbb
les
stos
dec
scas
rcrb
sbb
xor
ret
loope
imul
cwtl
and
mov
ljmp
cmp
adc
cmpsl
mov
rorl
push
inc
xchg
loopne
std
fsub
xor
push
pushf
pop
fbstp
ds
cmp
dec
outsl
in
and
aad
movsb
hlt
fcmovu
inc
mov
in
stos
daa
push
xchg
es
sub
jb
xchg
fisubl
xchg
or
mov
cmp
sti
ret
jne
and
xor
fnsave
sub
sarb
mov
popa
int3
movsb
roll
loopne
loope
fildl
mov
xor
inc
iret
ret
pop
or
nop
xchg
dec
mov
fs
jge
xor
push
jg
cmp
out
push
dec
or
xor
std
jns
sbb
ret
inc
shll
outsl
sbb
lea
outsb
mov
mov
adc
sub
jbe
xchg
mov
int
in
std
cmpsb
dec
xchg
inc
jle
fildl
lock
fldl
dec
xlat
jg
add
rol
xchg
mov
inc
inc
cmp
mov
push
call
xchg
in
ret
jno
dec
in
or
jne
xchg
push
loop
ja
xchg
mov
xchg
dec
pop
rolb
shrb
fucomp
ret
adc
xchg
aad
loopne
out
and
add
fbld
sbb
scas
sbb
sbb
xchg
pop
pop
aaa
lahf
add
inc
dec
jae,pn
push
cld
jnp
xchg
mov
shll
pop
hlt
inc
sub
lods
add
push
imul
and
pop
push
lods
sub
jmp
xchg
jno
lahf
int3
fwait
xchg
mov
outsl
lea
xor
jae
into
in
mov
adc
aam
dec
pop
dec
sbb
sub
xchg
dec
fimull
std
mov
loop
xchg
jg
mov
and
popa
adcb
xchg
pop
ss
dec
jmp
sub
mov
popf
cmp
scas
and
sarb
mov
cwtl
into
sub
out
sub
inc
loopne
mov
xchg
shrl
dec
jno
lret
pop
dec
push
sti
adc
sub
xor
jecxz
push
xor
aas
inc
mov
lods
arpl
pushf
sti
dec
sub
inc
inc
dec
cmp
or
fs
negb
dec
cmc
fnstenv
test
and
cld
mov
inc
mov
xchg
mov
fstpt
mov
push
push
add
sbb
push
xor
push
pop
repnz
imul
pushf
push
pop
cwtl
repz
leave
cwtl
jns
or
pop
or
pop
mov
in
adc
insb
mov
push
cli
sbb
and
or
cmp
mov
xchg
mov
mov
push
dec
ss
pushl
xchg
iret
sbb
cltd
jb
movsl
xlat
mov
jo
push
dec
aas
or
in
test
pop
jge
repz
inc
xor
pop
repnz
sbb
mov
js
imul
inc
push
cmp
sbb
mov
xchg
inc
push
and
pushf
jecxz
sbb
jp
mov
sahf
pop
dec
sub
xlat
pop
lss
fcmovnbe
sub
outsb
dec
dec
stos
imul
inc
pushf
ret
mov
xor
dec
push
sub
pop
shl
in
arpl
out
sti
inc
nop
faddl
jnp
mov
insl
clc
ret
movsl
movsb
jns
and
mov
jo
pop
icebp
adc
imul
in
cmpsb
inc
sub
hlt
push
leave
fldl
xchg
mov
pop
pop
fnstenv
mov
pop
xor
cwtl
cmp
dec
cmp
sti
jnp
mov
dec
fbld
mov
mov
stos
insb
pushf
clc
xchg
push
pushf
jg
lds
addr16
mov
orl
dec
pushf
inc
cmp
or
lock
push
cmc
bound
sub
shlb
mov
cmp
sub
aaa
jmp
flds
xor
pop
mov
imul
int
cmp
mov
jne
jno
fcoms
add
shlb
mov
push
dec
cmp
stos
jno
into
test
subb
fnstcw
lock
add
jmp
xor
jmp
jmp
clc
pmaxub
movsl
pop
fcomps
leave
call
push
fwait
pop
ficoml
inc
inc
enter
inc
aad
xor
and
out
mov
sahf
push
jle
icebp
shrb
stos
push
stc
lds
mov
daa
inc
fs
fwait
mov
das
push
jmp
leave
lock
out
cld
mov
xor
sti
sub
sti
add
add
test
push
mov
loope
dec
lods
push
sbb
sub
push
and
cmc
fsub
dec
cmp
insb
mov
xchg
mov
out
xchg
popa
mov
mov
popf
mov
pop
add
mov
psubd
push
pop
into
pushf
add
sahf
shrl
jmp
movaps
js
fcomi
loopne
push
adc
cli
mov
lcall
inc
mov
mull
jnp
sub
fcomi
push
fsubs
subl
call
mov
cmpsb
and
test
je
loop
push
sbb
mov
sbb
repz
ljmp
push
loop
shlb
mov
add
pop
mov
imul
pop
fdivs
xor
mov
pop
stos
mov
push
out
cmpsl
or
push
xchg
and
sbb
jb
fsubr
xor
das
movsb
nop
xchg
cmp
cmpsl
fs
jle
xor
pop
pop
pop
int
push
in
xchg
jne
xor
cmpl
push
loope
jle
push
insb
cmp
das
cmp
lcall
and
mov
mov
jbe
fwait
lds
cmp
xor
jns
insb
xlat
outsb
outsb
inc
mov
scas
and
cmp
xlat
mov
shll
cwtl
enter
mov
add
xchg
mov
mov
sub
jmp
into
leave
mov
jnp
or
hlt
imul
arpl
mov
fwait
aaa
cwtl
pop
or
mov
push
push
lahf
mov
cmc
pop
ret
je
mov
and
sub
mov
mov
pusha
je
xchg
cli
not
xchg
dec
mov
sbb
lds
nop
pop
popa
int3
dec
call
dec
repnz
outsl
add
or
fcomps
fcomi
mov
bound
or
cmp
gs
xor
das
rorb
cmp
or
movsl
clc
push
mov
or
out
lds
mov
scas
inc
test
std
sub
jmp
sbb
in
fidivrs
cmp
iret
test
inc
je,pn
push
cmc
mov
push
and
movsb
int3
fs
push
dec
test
push
fists
insl
push
sub
cmp
int
pop
clc
mov
mov
aad
pop
push
mov
pop
std
push
addr16
sbb
loope
movsb
and
hlt
mov
fwait
or
mov
sub
inc
imul
pop
fs
js
add
pop
loop
scas
mov
fsts
aam
pop
out
ret
cmc
out
int3
mov
jb
les
dec
jbe
adc
dec
mov
ror
ret
nop
movsb
pop
int3
ret
inc
push
outsb
pusha
jmp
jmp
bound
pushf
ds
lea
pop
jge
jo
push
pop
mov
lret
sbb
push
repz
xchg
push
enter
lahf
imul
fbstp
into
idivl
jmp
rorb
xor
cmp
fidivrs
fcompp
movsb
pop
push
adc
mov
mov
inc
stos
movsl
mov
aas
fdivrl
in
cmp
mov
sbb
sbb
fcomi
push
lods
cwtl
in
nop
lret
mov
push
jbe
inc
fisttpll
and
xchg
out
cwtl
iret
ja
inc
shll
dec
in
repz
call
jmp
mov
push
inc
push
sbb
sub
leave
js
jmp
push
loop
ret
pop
inc
dec
xchg
xor
inc
jbe
ja
push
push
jns
jp
repnz
jge
je
lods
shr
mov
pop
std
xchg
ss
xchg
add
inc
enter
sub
sub
push
jns
sti
sub
shlb
fidivs
ja
lret
sbb
adc
mov
fmull
mul
rolb
cltd
pushf
stos
lcall
push
xchg
dec
fdivs
adc
popa
cs
push
dec
decb
jns
pop
loope
and
iret
fidivrs
das
mov
sub
cmc
sbb
cmp
divl
add
adc
gs
test
mov
addr16
push
jl
sbb
add
addr16
mov
addr16
adc
lock
xor
push
push
es
mov
imul
sbb
or
loope
ss
leave
inc
or
cltd
jle
out
icebp
jg
ret
call
push
andl
js
cwtl
fwait
xor
ret
mov
cmp
add
xlat
je
pop
jne
cmp
rorb
aaa
cwtl
test
xor
rcll
cmp
mov
sahf
pop
push
sub
lret
dec
pop
xchg
sbb
mov
adcl
and
scas
xor
not
push
into
xor
push
je
in
ret
jb
xchg
push
sub
xlat
and
fstl
data16
adc
clc
pushl
int3
lods
incl
arpl
dec
push
inc
sti
cmp
push
aas
popa
dec
jecxz
out
xor
in
xchg
inc
addb
sbb
mov
add
das
repnz
mov
jb
out
nop
scas
jae,pn
movsl
and
push
sbb
push
pop
leave
push
or
xchg
dec
mov
sub
outsb
loope
data16
movsl
imul
gs
pop
cmpsl
out
mov
pop
and
repz
aad
scas
int
insb
mov
movsl
hlt
inc
nop
mov
mov
cltd
xchg
stos
test
jb
loopne
repz
adc
xchg
jge
lods
jne
add
pop
insl
lret
sub
fs
ss
or
test
jmp
cld
fs
imul
lahf
xchg
iret
mov
lds
jecxz
test
add
dec
lea
push
mov
jns
sahf
jge
inc
cmpsl
adc
mov
int
pop
sub
dec
mov
jns
fs
cli
mov
adc
addr16
cmpl
fidivl
adc
jne
insl
dec
push
imull
repz
cmpsb
cs
in
cmp
clc
push
mov
std
mov
ret
outsl
sbb
filds
or
sub
pop
mov
dec
jae
aaa
jbe
cli
cwtl
sbb
inc
fs
dec
xchg
dec
adc
push
push
aam
stos
mov
mov
shll
mov
dec
hlt
adc
add
arpl
sbb
mov
stos
xor
pop
or
ds
rcl
inc
es
arpl
jbe
inc
ret
iretw
nop
sub
cwtl
and
push
lods
and
enter
lea
add
jmp
enter
mov
repnz
lock
testb
xorl
fsubs
xchg
xchg
dec
jp
inc
ljmp
mov
pop
jns
push
clc
movsl
dec
mov
xor
cwtl
cmp
leave
dec
enter
push
push
jl
jmp
ljmp
mull
movsl
mov
xor
mov
mov
cmc
lcall
rolb
das
adc
jp
outsb
and
std
jnp
lock
sub
dec
notl
mov
scas
push
jg
faddl
aam
push
arpl
and
jo
add
adc
clc
push
mov
rorl
sub
dec
stos
addr16
pop
add
mov
xchg
pop
dec
lahf
adc
imul
pop
sbb
or
test
xor
push
sti
dec
cmp
push
xor
mov
xchg
mov
popa
popa
xor
push
out
sbb
mov
jb
push
insb
xchg
mov
stos
sub
int
xor
sbb
gs
xor
fdivrp
loopne
stos
or
add
sbb
or
sub
mov
mov
push
dec
cmp
mov
push
bound
leave
pop
pop
pop
mov
pop
and
pop
rorb
into
cmp
std
xchg
dec
stos
dec
mov
pushf
push
fldenv
into
or
je
pop
addr16
mov
and
ror
mov
cmp
loop
dec
les
dec
lahf
ja
loope
imull
movsl
mov
cmp
mov
mov
andl
xchg
cmp
sbb
imul
jg
adc
aaa
dec
stos
cmpsb
icebp
or
jmp
pop
call
cwtl
cmp
aas
mov
or
ljmp
jmp
decb
aad
aaa
rorl
pop
cmovns
js
inc
xor
xchg
push
mov
out
insl
pop
repz
movsl
fs
rcrb
push
shll
out
je
cmp
inc
arpl
leave
sbb
lds
ja
cmp
inc
sub
push
inc
and
add
sub
or
test
xchg
mov
mov
in
call
clc
pushf
mov
adc
lret
lods
gs
mov
jecxz
or
gs
mov
out
data16
jmp
sbb
push
sarl
xor
test
daa
mov
and
cli
xor
loopne
sbb
scas
icebp
xlat
mov
pop
lahf
test
insb
inc
addr16
jp
aam
call
inc
lods
ret
sbbb
jmp
adc
jno,pt
lcall
test
out
jecxz
pop
fdivr
cmp
add
movsb
out
inc
jbe
jecxz
aas
sbb
filds
pop
push
enter
pop
sbb
test
shll
je
xorb
or
pop
mov
or
mov
pop
push
xchg
push
cmp
shll
sbb
call
mov
outsb
popa
int3
xor
loope
gs
mov
or
not
in
or
data16
xlat
fistpl
mov
mov
xlat
pop
test
pop
bound
xchg
jno
mov
xorl
or
push
fwait
jge
push
lcall
lods
insl
pop
add
mov
dec
mov
sub
iret
lahf
jns
fwait
push
arpl
insl
imul
mov
shlb
mov
loopne
or
outsb
add
push
push
pop
sub
lahf
xchg
dec
movsl
xor
enter
pop
je
xchg
cmp
dec
jmp
jp
nop
sbb
lret
adc
jg
adc
lea
sub
je
dec
and
xor
icebp
pop
adc
sbb
xchg
pop
xor
sti
and
shl
sbb
mov
sub
cmp
jp
ret
xor
pop
push
in
mov
les
lahf
les
test
aad
out
push
imul
mov
mov
stos
jge
mov
push
pop
loop
clc
popf
je
imul
mov
fdivrs
xor
jmp
fmull
fcompl
mov
add
fwait
lret
push
cld
sahf
mov
mov
pop
jb
jg
stc
dec
push
adc
fwait
das
hlt
pop
sarl
cmpl
in
xlat
ss
add
mov
aam
icebp
stc
lods
push
pop
xor
repnz
mov
sub
insl
dec
out
xor
enter
jo
out
and
xlat
mov
dec
ret
add
mov
loop
mov
ret
sub
test
sub
lock
mov
lret
jnp
jl
ret
cltd
imul
jg
xor
icebp
sbb
test
or
mov
dec
mov
push
xor
adc
xchg
xchg
imul
inc
and
mov
gs
dec
inc
push
lret
popf
push
pop
pop
push
sbb
xor
pusha
push
dec
iret
mov
pop
add
pop
mov
movsl
inc
outsb
fmulp
sahf
aas
test
lock
subl
in
sub
sbb
jno
stos
shl
popa
pop
js
inc
cs
in
das
test
mov
repnz
inc
push
mov
loope
lods
xor
fmull
cmp
xchg
mov
int
ss
sub
jle
and
addb
mov
pop
cs
adc
jb
mov
push
add
sbb
inc
cs
popa
in
cmp
or
ss
call
xor
push
ret
shlb
and
js
movsl
mov
xlat
dec
mov
dec
jbe
lods
mov
mov
jmp
out
dec
repnz
adc
adc
ds
shlb
xchg
hlt
stos
adc
insl
pop
and
jbe
dec
sbb
mov
das
js
movsb
or
ret
inc
outsb
mov
sbb
cmpsb
icebp
clc
ja
iret
sub
lcall
inc
in
das
inc
adc
xor
push
cmpl
loopne
inc
or
jns
clc
incb
push
inc
cmp
out
sbb
aas
jg
sahf
fnstsw
es
fiaddl
andl
lods
repz
stc
dec
mov
lea
inc
push
loopne
scas
add
es
loop
punpckhdq
xor
icebp
mov
mov
sbb
xor
jl
inc
mov
push
pop
jg
inc
cmp
aad
das
adc
iret
xchg
xchg
rorl
sub
adc
dec
dec
lods
sub
mov
xlat
push
and
loope
repnz
or
shlb
lret
adc
add
xor
xor
movsb
jb
fwait
jae
loop
pop
cmp
in
hlt
lahf
lahf
xchg
cwtl
je
push
cmc
lds
add
sbbl
mov
fdivrs
sbb
push
in
mov
pop
add
pop
shl
lock
mov
push
inc
enter
push
loope
testb
pop
push
jno
shlb
mov
mov
pop
fiaddl
inc
test
mov
mov
outsb
or
mov
movsl
pop
sti
push
cmp
cmp
pop
push
stos
lret
xor
sarb
push
dec
add
loop
incl
inc
inc
pop
std
and
out
mov
loop
rep
sbb
loop
jne
jecxz
bnd
mov
cmp
addr16
jns
ret
and
in
and
rclb
rolb
xchg
scas
daa
mov
sbb
xor
adc
xor
xlat
std
adcb
cmp
fimull
fwait
pusha
xchg
jmp
inc
loopne
imul
iret
sub
mov
pop
cmc
cmp
mov
js
call
cmp
sub
addb
dec
xor
lcall
mov
ret
mov
or
aas
pop
mov
cmpsl
mov
shrb
xor
cld
leave
sub
and
pop
sub
mov
loop
bound
rol
adc
mov
rclb
repz
mov
dec
sbb
mov
jnp
fwait
dec
in
xor
es
jb
add
test
scas
inc
pop
xor
adc
mov
dec
sbb
and
mov
mov
ja
out
dec
cmp
jle
xor
lea
jle
ret
icebp
rorl
test
cmp
repnz
mov
les
sub
call
bnd
pusha
mov
inc
stos
mov
loope
adc
loope
dec
push
and
xor
mov
pop
in
popa
cwtl
sbb
pop
outsb
orl
push
mov
pusha
lds
bnd
xor
movsl
mov
or
push
push
push
lea
or
mov
dec
int3
sbb
adc
imul
mov
int
inc
sbb
add
and
stos
inc
idivb
cmp
mov
sub
mov
sub
or
lods
int3
sub
pop
fisttpll
jbe
mov
pop
lret
mov
jbe
add
push
xchg
dec
mov
or
xor
sub
add
add
imul
out
sub
mov
xor
aaa
dec
fs
jns
lcall
push
jne
fwait
enter
pop
icebp
mulb
cwtl
les
inc
dec
std
cld
movsl
js
addr16
imul
inc
push
fildll
jecxz
mov
and
mov
sub
sub
fdivrs
ret
mov
mov
sysret
shl
push
and
lds
xchg
jg
js
test
cmpsl
adc
fidivs
ret
cmpsb
push
xlat
es
aaa
add
scas
jns
xchg
call
je
subl
nop
dec
enter
mov
fidivrl
stos
lods
xlat
dec
sub
sbb
mov
mov
sub
sub
sti
add
xchg
lret
mov
and
stos
popa
jae
lock
lret
inc
pop
push
int
inc
pop
xchg
mov
arpl
insl
test
dec
aaa
jnp
sub
cmc
outsb
popa
insl
sbb
out
popa
sti
inc
cmpb
add
nop
jmp
xlat
imul
pop
xor
stos
lcall
jno
add
push
mov
and
cmpl
in
cmpl
fsincos
lods
lods
push
loopne
fsubrl
fdivl
lods
lret
inc
or
and
iret
push
data16
loope
inc
cli
or
xchg
add
push
xor
jle
push
negl
call
ss
jae
ja
sti
daa
imul
out
pop
out
orb
call
ja
outsl
insl
test
bound
test
mov
enter
lods
stos
idiv
gs
cmp
jmp
popa
jg
mov
loopne
int
rorl
xchg
sarl
xor
cmp
xchg
faddl
jmp
inc
mov
sahf
xchg
out
xor
iret
mov
sub
sub
mov
icebp
xchg
testb
mov
movsb
fdivrl
loope
pop
mov
hlt
inc
int3
ficomps
pop
sub
cli
addl
idivl
cmc
subb
enter
push
mov
jbe
es
mov
pop
xchg
nop
add
pop
add
inc
cmp
xor
push
xchg
addr16
and
out
cmp
xchg
je
mov
lock
mov
mov
sbb
pop
mov
ja
xchg
fldcw
jg
push
stos
mov
loop
xor
sbb
nop
mov
inc
outsb
aas
loope
push
add
das
pop
and
and
sbb
lods
push
addb
aad
cmp
inc
mov
push
inc
mov
ljmp
inc
xchg
cmp
icebp
das
jmp
push
ret
mov
lds
bound
jl
in
dec
cmp
push
lods
dec
and
mov
mov
pushf
addb
sbb
inc
mov
sarb
push
add
pop
mov
scas
and
in
and
imul
lea
pop
lahf
cmp
dec
pop
jmp
push
adc
shrl
ja
ja
rol
sub
jns
mov
std
lock
jnp
xlat
cli
jne
popa
ss
or
add
out
jmp
movsb
leave
fnstenv
inc
dec
push
or
xor
push
xlat
mov
ljmp
cli
adc
outsl
mov
test
jo
mov
add
scas
pop
xor
cli
xor
shll
add
mov
insl
loope
mov
movsb
xor
mov
adc
movsl
pop
jo
out
xchg
add
prefetchw
or
pop
xor
adc
jno
push
push
cmp
jbe
cmp
xchg
and
cmp
ret
stos
lret
or
repz
dec
js
add
fiadds
cmpsl
dec
push
ljmp
sbbb
imul
xchg
and
xor
or
bound
cmp
or
insl
cmp
sub
cmpsl
sbb
jp
sub
bound
push
adc
cltd
push
jge
xchg
ds
xchg
test
rclb
mov
cmpsb
ret
xchg
dec
cmp
jge
mov
push
mov
add
fildl
dec
lcall
add
adc
pushf
and
fs
cmpsb
pop
xchg
jmp
mov
loopne
xchg
in
stos
addr16
jp
cs
aaa
je
mov
mov
jg
mov
mov
insl
sub
pop
pop
in
mov
push
negb
lahf
test
push
pop
clc
mov
nop
inc
xchg
loop
idivl
insb
icebp
push
movsl
rorb
rcl
and
aad
push
pop
xor
jle
xchg
fwait
lea
mov
pop
inc
mov
movsl
push
and
pop
inc
cmp
adc
mov
icebp
shrb
push
mov
mov
or
push
cmc
pop
or
adc
or
push
sbb
sahf
pop
dec
cmc
cmp
xchg
std
cs
fisubrs
or
sub
stos
fdivs
jecxz
std
sub
xor
imul
incb
fmuls
xchg
xor
cmp
jne
dec
lret
pushf
cmpsl
xchg
add
xchg
push
dec
jp
shlb
ljmp
incb
mov
les
and
es
xor
xchg
in
inc
les
adc
lcall
out
mov
jge
jecxz
xchg
lods
add
mov
jmp
push
fcmovbe
jno
pushf
scas
inc
lret
lret
cmp
sti
scas
add
ffreep
subl
aaa
jle
add
xchg
roll
orl
icebp
sub
cmp
pop
pop
jle
lcall
fwait
mov
in
jb
or
push
bound
in
adc
sbb
outsb
ja
stos
les
add
aas
ret
cmp
add
xchg
insb
cs
fldl
mov
mov
and
cld
inc
rcrl
mov
jbe
dec
int3
shrb
les
loope
add
mov
mov
out
or
and
or
or
inc
xchg
and
mov
adc
aam
popa
push
jb
mov
cmpsb
cmp
nop
push
repz
jg
repnz
lret
out
add
push
and
test
scas
rorb
cmp
dec
popa
leave
nop
std
negb
cli
sbb
and
les
lahf
and
shr
cld
popa
cwtl
dec
mov
xchg
pop
jbe
pop
jns
jg
push
sbb
dec
repz
icebp
adc
loope
shr
push
in
dec
call
push
mov
xchg
mov
push
fcmovnbe
int3
nop
adcb
lahf
cmp
mov
dec
jo
xchg
xchg
test
cmc
fnsave
sarb
pop
or
or
mov
and
push
pop
mov
push
mov
add
jp
or
mov
lret
lahf
lods
xchg
leave
aas
rclb
fildll
int3
cmc
mov
inc
mov
sub
data16
jg
and
les
scas
mov
adc
mov
mov
mov
inc
call
push
popf
dec
cmpsl
xlat
push
mov
out
jecxz
xchg
aaa
push
xor
add
fst
ret
xchg
jo
cwtl
out
mov
sbb
inc
mov
je
push
aas
mov
sbb
or
in
loop
test
test
add
xor
outsb
sahf
mov
hlt
mov
xor
jmp
jp
loop
xchg
aaa
das
movsb
arpl
push
mov
mov
test
enter
insl
or
mov
inc
sbb
ja
sar
imul
xchg
xchg
mov
push
jge
jb
into
lahf
mov
dec
arpl
lcall
test
mov
push
mov
mov
int3
inc
in
in
jmp
fs
js
enter
dec
adc
shlb
and
push
adc
int3
std
sbb
xor
dec
jmp
or
adc
xor
lahf
xor
lods
mov
add
fwait
mov
add
daa
rcr
ja
jbe
push
ja
sbb
neg
and
push
sbbb
xchg
loopne
jnp
mul
loope
lds
xchg
mov
add
pop
cmp
scas
lret
and
mov
mov
pushf
inc
imul
mov
xchg
lcall
subl
inc
js
jmp
sbb
loop
scas
dec
cmp
mov
push
jno
sbb
mov
ja
mov
pop
loopne
xor
xchg
psrad
inc
mov
mov
insb
scas
jmp
xor
pop
or
xchg
in
fcmovb
loop
insb
jae
adc
pop
push
lcall
mov
mov
mov
shrb
push
int3
pusha
mov
mov
mov
sub
inc
push
push
xor
ds
mov
data16
add
jl
lcall
fwait
dec
xor
lret
sub
xlat
addb
bound
mov
jg,pn
mov
mov
inc
out
inc
mov
lds
sub
mov
test
lods
insb
fld
and
incl
or
or
fidivrl
pop
stc
add
rcl
push
hlt
loopne
mov
push
mov
xchg
imul
jb
incl
xchg
mov
pop
and
push
cwtl
jne
or
cmpsl
lds
xor
ret
xor
dec
cli
bswap
es
pop
icebp
xchg
rolb
jmp
movsl
jb
mov
int
ljmp
mov
pop
add
mov
sub
mov
das
jbe
add
int
dec
jae
inc
dec
pop
ljmp
mov
mov
jle
or
cmpsb
mov
insl
dec
lods
notb
cmp
mov
xchg
dec
push
mov
ret
les
repnz
aaa
push
cmp
pop
mov
jp
negl
call
cld
xor
jle
hlt
daa
and
mov
dec
mov
loop
jbe
adc
call
ret
mov
popa
test
adc
mov
imul
cmp
pop
out
push
leave
mov
lret
je
push
movsb
push
ja
ja
xchg
cmpsl
ret
por
popf
ret
leave
adc
std
add
test
das
aas
filds
cwtl
cmp
or
xor
mov
out
fisubrs
mov
mov
xchg
pop
xor
and
cmp
lea
xor
jecxz
pusha
imul
mov
inc
bound
icebp
add
mov
into
inc
push
dec
dec
test
in
fldl
sbb
loop
pop
and
jg
cld
cmp
xlat
xchg
imul
pusha
mov
and
xorb
jge
fiadds
mov
pop
call
pop
inc
and
sbb
ret
dec
jl
mov
clc
pop
lahf
fdivrs
test
sub
inc
into
adc
add
push
adc
add
lahf
cmp
mov
je
in
sarl
lcall
inc
or
fstpl
mov
push
xlat
mov
stos
xor
popa
dec
cmp
push
jge
out
jbe
je
lahf
fildl
push
adc
lcall
xchg
inc
sbb
xchg
mov
jb
mov
dec
inc
das
jge
push
cmp
fidivrl
dec
mov
mov
inc
into
inc
push
les
cmpsl
int3
xchg
testl
dec
pop
addr16
mov
jae
push
fld
icebp
mov
cmc
xchg
pop
clc
cs
clc
ret
mov
xor
mov
xchg
sti
dec
movswl
pop
cwtl
jg
jns
mov
cmp
jbe
push
data16
and
adc
cmp
xchg
pop
xchg
das
in
clc
iret
dec
movsl
jmp
int3
xchg
mov
fs
xchg
movsb
repnz
sbb
cmpsb
cmc
cmpsb
add
mov
mov
pop
test
inc
mov
movsl
decl
bnd
cmp
push
dec
pop
out
mov
movsl
adc
test
rcl
fstpt
and
jl
in
sbb
cmp
xor
mov
xor
dec
stos
outsl
int3
mov
pushf
sbb
dec
push
jae
xor
cmp
sub
adc
jno
divb
and
scas
into
xchg
mov
shl
xchg
les
test
cli
pop
dec
loopne
jbe
and
inc
push
mov
jg
inc
jno
je
and
imull
mov
divb
or
or
mov
mov
adc
rol
stos
ja
lock
push
xor
cmp
sub
testb
mov
push
cmp
or
sub
aas
rolb
aam
imul
shrl
pop
add
xchg
leave
cvtps2pi
mov
inc
cld
andl
xchg
std
push
call
add
push
or
call
jae
mov
add
roll
clc
js
movsl
xchg
pop
cmp
out
inc
es
int
out
mov
xchg
fnsave
jl
insb
aam
movsb
cltd
sub
dec
dec
sub
xor
push
dec
outsb
roll
mov
or
and
pop
dec
xchg
rorl
ljmp
sar
inc
inc
xchg
adc
test
fdivrp
lock
sub
pushl
ja
mov
fbld
into
nop
lret
aaa
cmpsl
xchg
mov
mov
sbb
mov
aas
or
call
movsl
lahf
stos
imul
mov
inc
cwtl
cmpsb
mov
shlb
dec
jbe
shlb
dec
sbb
loopne
pop
fiaddl
lret
cmp
dec
jae
sub
jb
js
pop
lret
rol
jbe
xor
sar
into
sbb
lods
pop
or
xchg
mov
adc
or
mov
push
dec
cmc
inc
xor
fstpt
mov
push
lock
iret
mov
dec
push
push
add
push
dec
sahf
hlt
iret
test
cmp
or
cli
push
or
push
int
and
imull
sti
mov
lods
and
push
stc
jae
mov
push
mov
movsl
adc
lea
xor
in
insb
dec
jb
inc
shl
inc
pop
adc
pop
mov
rorl
sbb
jo
mov
push
data16
pusha
inc
pop
mov
adc
or
inc
insl
push
sti
sarb
adc
in
jecxz
cmp
fildll
push
sti
jp
into
ds
aas
mov
push
mov
ljmp
out
fnstsw
clc
mov
inc
push
test
pop
rclb
loope
adcl
int
mov
mov
add
enter
lock
je
xor
xor
dec
push
outsl
mov
sub
mov
xchg
or
cmpsl
inc
mov
jge
rclb
xchg
inc
test
add
repnz
push
mov
mov
xchg
pop
es
or
divb
jecxz
and
mov
xor
sbb
and
mov
shlb
sub
lock
dec
cmp
sub
jae
iret
mov
cmp
lock
dec
add
jmp
mov
dec
rcrb
pop
cmp
xor
mov
lods
sbb
mov
outsb
xor
jb
daa
sub
leave
adc
cld
jmp
push
jge
jg
push
and
dec
pop
pop
xchg
add
in
sbb
mov
and
fisttps
adc
daa
lahf
jmp
stos
icebp
adc
push
lods
jl
and
inc
sarb
push
and
shlb
pop
mov
cmpsb
push
xchg
add
push
pushf
xchg
repz
and
add
mov
sub
dec
shll
push
mov
add
rcrl
lahf
add
arpl
xchg
sbb
inc
mov
adc
jae
fadds
nop
adcb
adc
testb
and
xchg
push
cwtl
adc
push
dec
loopne
mov
lds
iret
imul
mov
push
sub
repnz
aas
push
enter
in
cwtl
add
mov
ret
fsubs
push
cmp
gs
scas
leave
sub
hlt
xchg
fwait
mov
dec
mov
xor
push
ljmp
into
das
pop
rcrb
es
les
lret
out
inc
jno
mov
xlat
sahf
fisubrl
testl
test
sbb
and
pop
push
out
divb
or
inc
xor
ds
test
add
xor
out
hlt
test
push
mov
add
pushl
add
shl
xor
mov
xchg
xchg
push
mov
imul
xchg
mov
daa
dec
fadds
int3
add
pushf
add
xor
push
dec
and
sahf
aam
adc
cmpsb
stos
sub
mov
mov
jns
adc
sub
xchg
mov
push
jb
dec
xchg
mov
mov
jns
ss
dec
cmp
jo
in
out
adc
xor
outsb
lock
sbb
xor
sub
xor
loopne
sbbl
fisttpl
adc
adc
or
lcall
inc
mov
xor
pop
mov
sub
and
int3
shll
cmp
mov
movsb
cmc
mov
sbb
imull
fcmovnb
insb
cmpsb
jmp
ss
daa
jmp
push
mov
mov
cmp
fisttpll
test
in
mov
push
test
pop
outsl
test
repnz
clc
pop
push
and
out
lds
fwait
jo
and
test
iret
pushf
ja
push
into
mov
pusha
and
aad
movsl
xor
mov
add
repnz
lcall
pusha
out
bound
xlat
or
mov
xchg
and
shl
sarl
notl
jmp
ror
mov
shl
adc
mov
popf
jl
xor
lock
sti
pop
or
push
or
lea
daa
test
ffree
inc
test
mov
or
mov
adc
fcoml
mov
inc
xorb
push
in
push
lcall
mov
pop
cmc
add
icebp
pop
into
lahf
add
cli
push
aas
mov
sbb
in
jle
lods
hlt
xchg
cmp
div
pop
decl
pop
xchg
lods
lret
sub
push
fs
mov
repnz
jl
mov
cmp
mov
data16
add
mov
cmp
mov
push
mov
mov
adc
out
dec
push
ja
lock
mov
mov
fistl
insb
xor
push
cmp
call
testl
cmpsl
cmpsl
mov
stos
inc
icebp
stos
mov
xchg
push
cwtl
pop
bound
lret
xor
push
mov
adc
mov
mov
xor
out
aaa
mov
sti
sub
out
pop
dec
xchg
popf
jno
cs
mulb
out
push
push
add
insb
add
adc
mov
inc
jo
sbb
pop
ljmp
xor
mov
repz
pop
dec
pop
out
test
js
addr16
push
add
cmp
jle
icebp
mov
ljmp
or
je
lcall
push
mov
sbb
cli
dec
lock
jo
ja
cmp
cld
mov
bound
sahf
mov
xor
scas
lea
jno
mov
rcrb
das
sbb
fstl
and
call
repnz
test
into
cli
adcl
fcomip
repnz
sub
xchg
sbbl
fstpl
xor
idivl
lods
dec
shll
add
shrb
popa
insb
pop
mov
imul
daa
ret
xchg
xchg
subb
adcl
jmp
mov
mov
lock
cmp
popa
int3
dec
dec
pusha
mull
push
lea
dec
nop
dec
call
xchg
lcall
adc
loopne
mov
adc
or
push
scas
cmp
leave
pop
cmova
jb
sub
aam
out
out
jae
shrb
testb
and
mov
rcll
ret
jmp
mov
lock
mov
sti
imul
clc
shrl
jno
or
push
or
aaa
mov
pop
cltd
ljmp
stos
adc
loop
inc
mov
add
adc
push
scas
cmp
popa
mov
pop
std
lret
scas
adc
mov
inc
fs
jae
test
adc
icebp
pop
out
xchg
sub
or
pop
movsl
lds
dec
dec
filds
popa
jb
dec
inc
imul
inc
jl
sbb
dec
dec
repnz
xor
bnd
mov
or
lret
xchg
scas
clc
and
orl
cld
dec
cmpsb
jne
jb
stos
mov
pop
leave
imul
pop
inc
cmp
push
or
mov
and
mov
icebp
js
mov
shrb
sbb
jle
fisubs
les
pop
adc
std
jns
add
loope
hlt
enter
sub
out
cmc
mov
orb
adc
aam
fucom
mov
hlt
popf
addr16
hlt
cmp
cmp
cwtl
adc
add
mov
pop
pop
scas
cs
or
sub
movsl
sbb
pusha
sbb
dec
cwtl
xorl
xchg
jle
dec
xchg
cmc
rorl
daa
arpl
lea
in
test
shlb
push
and
pop
iret
pop
xchg
xchg
std
mov
outsl
mov
sti
cmp
sbb
xchg
or
andl
push
xchg
jbe
dec
and
mov
pop
in
cwtl
ds
dec
jle
in
mov
pop
faddl
mov
sub
sbb
fidivs
mov
jmp
mov
iret
iret
mov
cmp
jnp
jp
fstpl
and
sub
popf
xchg
cmp
test
mov
arpl
pop
into
loope
add
pusha
rcll
cmp
xor
sbb
mov
fwait
add
adc
add
xchg
and
sbb
scas
add
sbb
fs
out
xlat
add
mov
cmp
mov
dec
push
adc
mov
hlt
ljmp
sub
scas
les
xchg
jb
ljmp
stos
popa
pusha
into
xchg
aam
stc
jge
fmull
pushf
jmp
out
dec
jl
pusha
int
dec
xchg
popf
cmp
fbld
imul
out
daa
lods
mov
call
add
lock
mov
jae
xor
mov
push
cltd
pop
or
add
arpl
mov
fimull
cmp
cmp
loop
jmp
jle
mov
jno
out
push
pop
sub
dec
and
sub
or
mov
or
and
and
sub
ljmp
xlat
xchg
fiadds
mul
pop
xchg
rcrb
mov
xor
sub
addb
fwait
ljmp
icebp
mov
lret
mov
shrb
sbb
fisttps
int3
div
cmp
pop
outsl
je
xchg
das
xor
xor
arpl
jecxz
ds
mov
jp
cmp
insl
gs
and
les
jp
add
mov
sub
dec
fisttps
jae
cmp
adc
repnz
testl
fs
jge
mov
mov
lods
pop
stc
cmp
push
ret
les
jmp
shrl
dec
or
iret
pop
pop
mov
add
xor
inc
stc
jp
call
jae
xchg
test
xor
loopne
mov
and
js
mov
push
push
stos
subb
jmp
push
std
inc
test
pop
xor
cmpsl
xor
cmp
push
int3
inc
sarl
jg
gs
sbb
ret
call
ss
jno
sbb
lea
ljmp
in
or
loop
popf
jb
ret
xchg
scas
jge
aaa
xlat
movsb
icebp
movsb
push
lahf
fmull
scas
js
inc
scas
pop
or
mov
dec
xor
xlat
pop
adc
sar
dec
imull
mov
jecxz
mov
loope
mov
sti
adc
sbb
cmpsb
jae
and
fistl
mull
loopne
push
lods
pushf
in
xor
mov
xor
add
mov
icebp
imul
mov
mov
sbb
or
inc
jg
pop
test
xchg
push
stos
adc
cmp
cmpl
imul
push
dec
dec
add
pop
add
sub
es
pop
cmp
adc
dec
addr16
movsl
sbb
add
pop
sub
nop
orb
cmp
pop
je
jecxz
cmp
push
jp
pop
in
outsl
push
scas
mov
data16
inc
push
pop
sahf
stc
enter
jb
jg
inc
outsl
inc
stos
ret
popa
pop
or
jno
or
jb
add
inc
mov
aad
inc
mov
imul
mov
out
fisubrl
pushf
and
enter
call
fldcw
inc
fidivl
insl
subb
mov
std
and
xchg
sub
pop
dec
in
adc
sub
inc
test
gs
enter
inc
xlat
pop
out
push
xchg
push
or
repz
inc
dec
dec
out
mov
testb
int
cmp
icebp
das
inc
mov
ja
mov
jg
outsl
aam
dec
fisttpll
cld
repnz
out
dec
pop
shll
hlt
jb
aad
stos
hlt
pushf
fisttps
scas
mov
cmp
bound
movsl
repz
sub
or
cmp
and
loopne
addl
jb
cs
popf
add
mov
mov
xor
push
or
fstl
add
xchg
dec
pop
and
mov
pop
sti
dec
push
pop
jmp
jbe
mov
movsl
jno
das
or
mov
test
fildll
sub
iret
pop
not
addr16
rorb
out
daa
add
insb
jge
scas
call
fbld
and
into
sub
icebp
cmpsb
mov
lods
cmp
bound
xor
cmp
cmp
sub
nop
fucomi
mov
popf
xor
push
add
shl
cld
js
adc
ret
xchg
lret
add
adc
or
jp
jae
adc
sub
call
loope
dec
stos
cwtl
mov
and
xor
xor
bound
xor
fstpl
stos
add
int
bndstx
out
call
js
push
cmp
xchg
or
xor
ficoml
inc
add
jecxz
lret
fbld
mov
aad
decb
ret
imul
lcall
sub
jge
jns
push
sbb
mov
movsb
sbb
dec
fs
fdivp
dec
leave
pop
in
frstor
or
pop
sbb
lret
inc
stos
out
cmp
mov
leave
lahf
popf
ja
mov
push
cwtl
sub
es
sub
pop
ja
jae
popl
dec
shrb
mov
dec
test
inc
pop
addr16
gs
pop
and
shlb
jmp
mov
daa
cs
insb
add
stos
andb
inc
sbb
imul
lcall
dec
popa
xchg
ds
mov
xor
sbb
mov
and
aaa
fnstsw
insl
push
dec
ret
pop
lea
test
mov
push
fcmovb
and
and
push
push
jnp
lcall
aas
sbb
mov
mov
pop
sbb
aad
push
pop
inc
lock
icebp
or
dec
jmp
mov
mov
and
push
mov
or
dec
xchg
mov
xor
addr16
stc
cmp
sub
inc
dec
test
js
add
in
repz
jle
clc
out
cmc
call
jo
sub
fisttpl
jl
push
add
jae
jo
in
cmc
and
test
cltd
sbb
sbb
cli
cmp
fldenv
push
lods
cs
shr
lock
out
repz
cmc
or
xchg
iret
int3
mov
mov
bound
movsb
sahf
icebp
push
add
shll
and
out
xchg
xchg
sti
gs
or
pop
loopne
cmp
sti
xchg
roll
insb
dec
loopne
cmp
dec
add
xchg
ja
sbb
lea
jle
xor
shlb
std
ja
cwtl
jmp
xlat
aas
into
scas
insl
imul
int3
mov
jno
fldl
push
push
jmp
pop
test
inc
mov
or
fstp
ss
and
fildll
bound
sahf
mov
cmp
xor
inc
adc
pop
outsl
rclb
shl
sub
std
jno
cmp
cmp
rclb
cmp
jnp
push
in
das
mov
or
xor
jg
or
imul
nop
inc
ja
test
pop
sbb
fnstenv
js
aas
rcrl
sbbl
mov
sub
sub
xor
inc
divb
sbb
pop
push
or
inc
and
lcall
mov
test
int3
arpl
pop
sahf
and
pop
lds
cwtl
out
lock
out
divl
in
jae
mov
dec
ret
clc
sub
inc
mov
dec
add
lret
in
push
adc
mov
scas
pop
fcomps
in
mov
shll
outsb
arpl
push
sbb
mov
pop
lods
outsb
incb
mov
repnz
jl
push
filds
push
push
imul
sti
xor
push
rcr
imul
aad
adc
scas
jo
aad
mov
sbb
sbb
fidivrl
repz
icebp
xchg
aam
jecxz
mov
cld
and
push
ret
cld
rclb
mov
shlb
jnp
imul
mov
jp
mov
arpl
cmp
testl
pop
shlb
push
pop
rclb
xchg
dec
aas
mov
enter
sbb
das
adc
push
out
gs
fcompl
aas
push
add
in
mov
mov
push
sub
movb
cmp
adc
test
sbbb
cs
push
lds
test
sbb
xchg
sbb
std
push
push
mov
jl
cwtl
aad
cmc
out
jp
repz
popa
in
pop
push
jae
sbb
pop
jg
jg
out
mov
mov
lahf
out
cli
cmp
xchg
push
fisubrs
adc
mov
lds
xor
hlt
cltd
mov
lcall
or
sub
jp
mov
js
ss
add
push
jnp
xchg
popa
aam
jns
gs
clc
add
mov
pop
jp
jle
pushf
iret
add
xor
lret
pop
jecxz
cwtl
ret
dec
inc
mov
sbb
test
mov
and
popa
arpl
jecxz
mov
jg
sub
psubq
jbe
cwtl
in
jae
popf
mov
stos
lcall
mov
xchg
scas
sbb
jbe
jb
xchg
outsl
fwait
add
or
mov
xor
or
add
stos
jmp
mov
or
into
es
or
aas
sysenter
add
loopne
inc
and
sbb
mov
aaa
add
jle
aas
daa
outsb
pop
jns
ret
es
push
sbb
push
stos
stc
sbb
shlb
xchg
shrb
xor
cli
sub
pop
mov
jns
adc
jmp
call
jnp
add
inc
cmp
pop
popa
fsubrs
xor
iret
aad
leave
xor
adc
js
shll
xor
adc
and
lods
hlt
sbb
incb
cmpsb
pop
es
pop
rcrl
frstor
frstor
and
xor
ja
js
jne
pop
xchg
cmp
in
and
push
sbb
add
mov
andl
popf
mov
lret
sti
mov
jo
gs
dec
mov
nop
fmull
iret
fbstp
je
sbbl
insb
gs
movsl
inc
jae
loopne
xchg
nop
fadds
out
sbb
sbb
lods
fimull
push
imulb
aad
xchg
and
jle
and
push
or
sub
mov
inc
add
flds
sbb
fisubrl
jne
cmpl
je
and
rcrl
imul
inc
ss
cmc
ret
add
jae
add
ja
pop
inc
loopne
pop
push
imul
mov
jmp
notl
xor
sub
xor
mov
cmpsb
mov
xlat
xchg
xor
daa
mov
stc
scas
adc
jp
sub
push
xchg
bswap
lret
pop
cmp
jns,pt
inc
clc
dec
cmp
mov
orl
add
cmp
add
adc
cmp
jbe
loope
add
mul
cmp
leave
mov
cmpsl
loop
mov
popf
adc
clc
or
push
push
mov
add
dec
inc
popf
adc
fwait
ja
hlt
gs
and
or
ficomps
push
push
mov
dec
lds
push
sbb
int
inc
cmp
mov
aad
push
clc
jle
orl
pop
popf
cmp
mov
int3
daa
cmpsb
sub
pop
popf
shrb
xor
xchg
je
mov
inc
adc
mov
pop
xchg
add
or
pusha
push
mov
or
daa
mov
pop
icebp
cmpsl
jo
jl
ss
das
in
mov
mov
mov
aam
aam
xchg
pop
fisubl
out
push
out
jns
pop
movl
idivb
xchg
lret
inc
test
mov
das
and
mov
push
mov
sbb
repz
movsb
unpcklps
inc
cltd
add
sub
adc
int
jecxz
xchg
movsl
sbb
jbe
add
dec
add
fucomp
pop
push
mov
add
add
xor
rclb
out
pop
cmpb
call
fisubs
push
dec
aaa
cmc
inc
sub
sbb
push
shlb
sbb
or
fdivl
iret
aaa
lcall
imul
cmp
mov
pop
cli
icebp
movl
pushl
pusha
test
sub
inc
pop
dec
sti
and
adc
nop
lret
insl
repz
push
dec
cmovg
ret
out
xor
pop
xor
jle
xor
jno
cs
push
repnz
push
mov
xor
int
fstl
rorl
xchg
daa
pop
cmp
add
aaa
movsb
incl
orl
fnstenv
fdivp
add
jp
pusha
hlt
nop
sub
int
xchg
push
xor
mov
jne
insl
test
lds
aaa
rep
inc
imul
movsl
sahf
add
popf
out
or
xchg
sbb
mov
or
or
imul
pop
mov
adc
outsb
push
lods
in
int3
cmpl
lock
push
clc
lods
dec
cmp
push
xchg
nop
fisttpll
lock
inc
push
pop
out
lea
lods
and
lock
jmp
mov
outsb
xchg
fsubs
sbb
jb
xlat
mov
cmp
stos
test
adc
aad
test
mov
xor
jge
imul
pushl
dec
shrl
aam
into
push
xorl
or
shl
loopne
popa
mov
aas
dec
push
das
stos
cld
xchg
mov
mov
dec
fmuls
std
in
aaa
ljmp
push
sub
rorb
mov
call
decl
jmp
jno
in
rcrl
mov
cmp
or
pop
mov
pop
and
nop
xor
int3
out
pop
das
adc
sub
jl
mov
outsl
and
stc
push
repz
mov
jge
clc
roll
mov
das
xchg
add
sbb
adc
dec
pop
fldcw
ret
add
mov
inc
sahf
int
xor
mov
mov
repnz
test
jge
mov
add
fbstp
xchg
mov
push
mov
aam
notl
push
or
repz
icebp
out
jne
jmp
mov
inc
aas
out
std
xchg
js
sbb
clc
xor
or
or
cmp
inc
dec
xchg
inc
add
cmp
mov
xor
adc
or
lods
mov
sahf
jecxz
push
mov
push
sbb
cmpsb
push
lcall
test
or
stos
es
mov
in
mov
xor
lea
dec
sarb
movsl
sub
pop
pop
and
dec
add
adc
sub
inc
pop
sub
gs
and
bound
sbb
add
sub
pshufw
jno
pop
cmp
pop
movsb
mov
xor
lret
stos
lds
incb
sub
lret
outsl
mov
fucom
pop
and
adc
push
cli
addl
and
pop
icebp
imul
mov
dec
pop
cli
push
rolb
sub
scas
sti
xor
add
decl
mov
divl
add
inc
push
dec
or
pop
jmp
adc
push
jo
add
pop
cli
xor
adc
xor
in
push
lds
ds
pop
dec
popa
movsl
test
push
jae
jp
jnp
adc
adc
cmp
dec
add
adc
outsl
dec
sub
and
sbb
mov
cmpsb
pop
mov
jp
add
and
pop
mov
orb
xor
or
into
add
fs
and
sub
ljmp
rorl
adc
lahf
cmpl
push
add
mov
xchg
xor
in
fcmovnbe
cwtl
cmpsb
jo
mov
push
adc
jbe
scas
arpl
test
dec
xchg
jge
mov
push
push
sbb
popf
insl
scas
aaa
inc
in
cmp
pushf
das
adc
or
mov
adcl
das
icebp
aas
inc
inc
iret
push
cs
mov
fcoms
xorl
add
dec
pop
cmpsb
hlt
cltd
sbb
jp
mov
cmp
push
jnp
push
stc
ds
insl
jae
xchg
xor
mov
push
mov
sub
xor
jg
push
ja
nop
cmp
enter
arpl
insb
pusha
ret
test
pop
sbb
cmpsl
aad
cld
lret
cmp
sbb
loope
jl
dec
inc
push
lret
sahf
mov
mov
hlt
mov
fwait
aas
les
sarb
adc
xchg
or
xchg
pop
pushl
iret
mov
inc
xchg
cmp
cmpsb
decb
and
test
cmp
xchg
iret
mov
divb
dec
mov
je
mov
mov
pop
sti
jle
mov
mov
adc
repnz
jno
dec
cmc
sahf
cmpb
pop
sbb
and
shll
mov
adc
sti
mov
jno
mov
into
ja
cmc
fwait
popf
loope
jnp
inc
lret
push
sub
adc
movsb
outsb
fstpl
or
rorb
mov
pop
dec
iret
sbb
aas
dec
mov
lock
mov
sub
jns
aas
arpl
test
pop
mov
xor
jns
outsb
push
add
dec
mov
dec
and
inc
or
mov
and
pop
dec
cmp
movsb
lret
inc
loop
aam
mov
gs
pusha
mov
pop
fimull
divl
stc
out
sub
lock
dec
cmc
jecxz
lods
stos
popa
xchg
push
iret
or
inc
stos
mov
stos
xchg
adc
pop
xor
jp
loop
ljmp
ficoml
ljmp
dec
scas
lea
dec
push
rcll
sbb
mov
ret
push
xor
sub
adc
lds
and
insb
out
or
push
lret
sbb
lods
stos
dec
mov
sbb
in
sarb
sub
mov
inc
popf
push
mov
das
repnz
xchg
add
icebp
xchg
inc
jmp
sub
cmp
cbtw
nop
fbstp
lret
mov
out
sbb
jle
das
js
add
ficomps
lcall
cmp
dec
push
jecxz
movsl
dec
mov
inc
das
bswap
mov
hlt
dec
unpcklps
pop
dec
sarb
xchg
mov
mov
lea
adc
mov
fcompl
mov
into
out
inc
add
or
xchg
adc
loop
fistpl
js
xor
fnstsw
inc
mov
and
lret
cmpsb
adc
cmovb
adc
insl
dec
pusha
movsb
sub
lret
inc
inc
push
push
popf
cmpsl
in
xor
mov
pop
test
sarl
adc
mov
jmp
jg
cmp
test
jle
pop
adc
addr16
adc
adc
jnp
sbb
xor
xchg
push
push
loop
leave
xor
lds
je
push
js
cmpsb
out
add
das
cmp
mov
shlb
pusha
adc
inc
stc
jp
not
jp
test
shlb
push
or
es
xor
fwait
mov
or
ljmp
or
push
inc
push
je
js
or
ret
push
pusha
popa
xchg
xchg
sbb
pop
in
or
das
push
sub
cmp
bound
mov
push
xlat
cmp
dec
inc
leave
popa
and
lock
xchg
fisttps
jne
xor
rcl
cmpsb
lds
insb
stc
cmpsb
je
add
std
xchg
adc
mov
mov
inc
cmp
cmpsb
push
arpl
cld
fisubrl
cli
sub
cs
stos
movsb
sbb
sbb
aam
mov
sub
push
inc
push
movsb
sbb
sar
adc
push
lds
mov
jns
clc
mov
int
jmp
pushf
fcmovbe
sti
jae
rcll
lods
sbb
or
imul
add
jg
shrl
pop
mov
fimull
xchg
pop
das
popa
pop
arpl
xor
xchg
add
and
clc
das
shrl
rcll
jb
cli
rorb
xchg
jl
call
sbb
mov
leave
push
mov
aas
sub
dec
enter
hlt
sub
mov
testl
xor
mov
jmp
repnz
cld
imul
jecxz
dec
add
lcall
pushf
icebp
jb
xor
pusha
mov
and
cmc
push
mov
in
jnp
into
inc
lcall
jnp
fstps
jecxz
lock
jge
push
xchg
scas
in
mov
roll
pop
iret
xor
jmp
jnp
add
inc
inc
or
std
xor
cmp
int
stos
rolb
push
sub
popa
imul
icebp
sbb
lret
clc
and
xchg
ss
xchg
cmp
add
cs
add
xchg
test
sbb
sub
jg
xchg
inc
cmc
jno
sub
icebp
iret
cmp
andl
jg
pop
push
ds
mov
aad
fistpll
push
mov
movups
aam
rolb
arpl
pop
sbb
jecxz
insl
ret
addr16
mov
add
stos
sub
inc
outsb
repnz
adc
xor
das
xchg
jae
fsubs
lods
test
in
mov
popf
mov
add
xchg
mov
cmp
insb
inc
adc
fisubrs
ja
xor
mov
mov
idivb
call
outsl
add
orl
negb
xor
xchg
cmp
or
rclb
jns
imul
jnp
and
lret
cmpsl
mov
pop
push
mov
add
mov
mov
es
adc
adc
push
insl
and
adc
adc
cld
movb
or
mov
out
or
ret
cmp
out
in
clc
cmp
mov
mov
mov
test
push
in
pusha
lret
adc
cmpsl
push
rcrb
or
std
push
sbb
inc
shrl
addr16
shll
sbb
call
stos
je
mov
addr16
sysret
add
add
in
lock
call
icebp
dec
test
leave
mov
daa
mov
mov
mov
mov
add
cs
sbb
lods
mov
dec
add
lcall
xchg
fists
repnz
in
iret
dec
pop
jl
mov
icebp
xlat
scas
sahf
and
mov
mov
and
lds
mov
dec
scas
adc
shll
sub
mov
cmp
push
test
cmp
sbb
sub
add
xchg
rclb
or
mov
xchg
sbbb
mov
dec
cs
sbb
sub
insb
test
mov
test
xchg
ja
imul
or
shrb
push
cmp
lea
in
lds
sub
dec
shll
bnd
adc
gs
sbb
inc
mov
add
adc
into
mov
dec
hlt
inc
movsb
ljmp
xchg
jl
pop
jne
jle
cmp
cmp
shrb
lcall
out
aam
xor
dec
aad
insl
xlat
push
push
and
dec
jne
xor
push
jp
out
jbe
mov
decb
addr16
pop
orb
std
std
push
in
dec
imul
jp
cmp
mov
cwtl
lahf
add
lcall
out
push
sbb
jle
cmpsl
pop
jp
jle
cwtl
mov
and
ret
stos
adc
jl
gs
adc
xor
push
insl
js
sarl
pop
cmp
mov
mov
pop
jl
xor
sub
pusha
push
mov
xchg
mov
sub
lcall
mov
xchg
push
xor
push
sub
jbe
adc
aam
rcrb
sub
push
pop
ds
lods
lods
and
cmpsl
pop
mov
mov
out
jle
xchg
call
mov
jno
dec
aam
dec
inc
jg
loope
lret
push
dec
add
inc
je
inc
mov
nop
leave
pop
fnstenv
aaa
nop
cld
es
dec
sahf
mov
cmpsb
clc
pop
repnz
pop
fwait
mov
fdivrs
jne
in
div
add
fldenv
in
jge
icebp
rcll
and
cmp
std
fimull
mov
mov
insl
rcr
lods
addr16
xlat
xor
and
insl
mov
push
lcall
cld
into
adc
sbb
loopne
adcb
xchg
gs
push
or
clc
daa
inc
and
mov
mov
xchg
adc
mov
pop
inc
icebp
mov
mov
mov
mov
inc
inc
cmp
xor
shlb
push
roll
pusha
xor
push
cmp
in
cli
jno
out
je
cmp
fstpt
int
mov
pop
fcompl
jnp
pop
pushf
nop
mov
pusha
push
ss
jmp
cltd
lcall
inc
test
stc
pop
inc
imul
xor
icebp
cmp
push
push
outsb
shll
int
jae
adc
shll
jle
push
pusha
pop
or
mov
fwait
gs
das
subl
push
mov
inc
movsl
push
ficoml
shlb
cmp
sar
cmpsl
lods
adc
imul
push
loop
outsl
and
cmp
mov
cs
push
call
add
sbb
and
test
leave
iret
and
iret
inc
je
pop
ljmp
inc
shrl
push
mov
sti
sub
jp
push
mov
jnp
dec
rcll
je
fcomps
pop
fnstenv
lret
test
and
sbb
fnstenv
inc
stos
inc
inc
addl
xor
add
adc
inc
lods
insl
subb
add
sbb
xchg
push
int
pop
push
jno,pt
ljmp
ret
xchg
mov
jnp
mov
sahf
pop
lahf
clc
push
data16
fmul
into
lods
outsb
cmp
repnz
xor
repz
cltd
xchg
fwait
or
addr16
fnstenv
clc
xor
loope
pop
out
fmuls
movsl
and
aad
cmp
jne
fdivrl
call
lock
mov
jmp
jle
cmpl
xor
call
cs
inc
nop
or
xor
arpl
pop
add
rclb
fnstenv
cmc
xor
movsb
push
or
cwtl
fsub
insl
lods
testb
jecxz
push
dec
xchg
addr16
mov
lret
mov
pop
push
xchg
arpl
loopew
pop
ret
lods
push
test
xor
fwait
sbb
mov
in
into
out
dec
aad
mov
add
mov
lods
sbb
and
cli
push
mov
cld
adc
orl
dec
xchg
clc
dec
lods
int3
pop
lret
fiaddl
sbb
sub
dec
leave
cmpsb
aaa
sbb
fistl
mov
inc
pop
jb
cmpsb
xor
adc
add
scas
xchg
insl
cmp
aas
mov
xchg
addl
cmp
push
ds
arpl
lods
addl
aaa
pop
das
mov
jnp
cmp
push
mov
ret
outsl
xor
fisubl
cmp
movsb
sub
inc
mov
ds
mov
push
fdivl
sbb
data16
adc
icebp
mov
cmpsl
ds
push
sbb
push
mov
in
pop
aad
pop
out
popl
in
movsb
sarb
insb
stc
push
test
and
sub
mov
pusha
dec
enter
daa
js
and
or
aaa
push
inc
pop
jl
xor
lea
jnp
jne
inc
or
pop
dec
adc
repz
in
cwtl
adc
xor
fistpl
mov
int
into
mov
test
mov
fists
in
test
jnp
scas
daa
jge
inc
cmpsl
push
call
mov
lcall
mov
and
data16
and
lds
das
sub
fmull
shrb
sbb
daa
jno
sbbl
cmp
dec
ret
loopne
jns
roll
sub
jmp
adc
addl
les
xor
jmp
or
fs
loop
rcrl
xor
out
bnd
bound
std
inc
adcb
cmp
jle
enter
mov
mov
dec
ss
lds
cltd
inc
lods
xlat
xorl
fcoml
push
ja
andl
pop
push
mov
mov
das
mov
sub
add
add
and
mov
aad
enter
xchg
imul
add
es
sub
mov
mov
pusha
leave
xchg
cmp
fisubl
dec
or
rcrl
repnz
daa
fldl
sbb
cltd
sbb
lret
add
xchg
push
add
ss
aas
test
das
in
mov
jb
fadd
imul
xorl
call
jmp
inc
push
shlb
pop
or
outsb
cmp
add
mov
mov
cltd
sar
jnp
sbb
test
stc
mov
fwait
nop
ret
xchg
out
sub
jns
and
rorl
or
mov
hlt
and
mov
mov
jle
hlt
js,pn
lret
push
add
loope
push
stc
add
fwait
and
ds
aam
inc
mov
lret
lret
mov
je
inc
push
pushf
xchg
mov
pop
inc
jge
xor
adc
cmpsb
sbb
push
mov
mov
xlat
push
enter
push
outsl
out
add
call
xorb
mov
testl
aas
push
mov
mov
and
stc
nop
adc
movsl
inc
arpl
fildl
cmp
movsl
in
pop
rolw
out
leave
imul
cld
and
sbb
mov
inc
adc
cmp
pop
sbb
dec
lret
jmp
cld
xor
out
xchg
xchg
std
cltd
or
int3
insb
nop
inc
mov
and
dec
xor
ret
das
cmpsl
shrb
push
test
lods
loopne
iret
push
subb
xlat
scas
xchg
sahf
test
jae
or
mov
mov
push
sub
sarl
mov
jmp
mov
dec
daa
push
lret
call
outsb
push
and
push
fdivl
mov
shr
and
pop
js
movsl
push
addl
inc
push
loop
inc
lcall
mov
sbb
mov
push
mov
fs
xchg
into
dec
mov
outsl
mov
adc
lods
fwait
repnz
xchg
cmp
or
cmpsb
xchg
out
push
xchg
sub
aam
sbb
mov
xor
sbb
jne
fmuls
pop
arpl
add
mov
sbb
aad
fstpt
fwait
divl
push
fisttpl
jmp
mov
arpl
call
lret
sub
out
jae
or
addr16
inc
insb
push
or
pusha
jne
je
outsl
lcall
sub
in
pop
test
mov
and
clc
out
in
push
lret
cltd
xor
aad
stos
dec
add
add
cmc
popf
in
cmp
repz
or
stos
fisttpl
mov
cmp
cmp
negl
pop
pop
xchg
adc
xchg
xchg
movsl
sbb
ss
xchg
pop
jmp
cmp
add
dec
lea
mov
add
mov
push
insb
xchg
sbb
pusha
cmp
shlb
adc
mov
fadd
fstl
push
jnp
jno
loop
mov
pop
insb
push
es
or
pop
ja
pop
xchg
sub
leave
rcrb
and
or
dec
prefetchw
add
adc
push
into
push
jl
inc
xor
dec
pop
cld
jns
fisubs
repnz
mov
notb
aaa
shll
mov
cmp
out
fisubs
mov
dec
cmp
xor
out
rcll
movsb
jno
aam
jo
sar
stc
dec
mov
mov
mov
push
mov
dec
fsubrl
data16
mov
inc
mov
sarb
or
addr16
xchg
mov
notl
inc
adc
sbb
mov
bound
in
inc
jecxz
lret
xchg
push
or
mov
push
push
sbb
pop
les
mov
xchg
repnz
fidivs
sbb
xchg
gs
push
repnz
inc
aas
xchg
add
or
mov
lods
stos
inc
cltd
fwait
add
dec
adc
fnsave
insl
and
aam
and
inc
in
sbbb
mov
je
popa
sete
inc
loopne
xor
in
cmpsl
inc
or
movsb
fwait
cmp
dec
lods
les
call
adc
or
mov
push
das
std
rorl
mov
daa
scas
inc
pop
cmpsb
push
ljmp
in
outsb
mov
sub
imul
adc
test
flds
xor
mov
mov
mov
cmc
icebp
mov
fbstp
dec
aaa
es
mov
sbb
inc
test
in
push
push
push
std
push
sbb
inc
add
pop
aas
popf
std
add
addb
aaa
push
push
sub
xlat
repnz
iret
pop
fisubl
ret
addb
fistpl
jno
inc
loope
ficoml
sbb
repz
call
jmp
outsl
push
es
inc
jp
pop
pop
add
adc
adc
shl
cwtl
ja
je
jl
mov
jge
fisubl
outsb
hlt
push
jb
cmpsl
sarb
aam
xor
mov
lret
pop
mov
hlt
out
mov
outsb
cmp
popf
xor
ljmp
call
pop
push
popa
lahf
fnstenv
icebp
jae
push
pop
push
stos
fsubl
imul
in
in
shl
enter
hlt
sbb
insl
dec
push
xchg
mov
scas
filds
mov
mov
dec
adc
or
xor
in
clc
clc
cmpsl
fimull
popf
mov
andl
sub
leave
fdivl
or
mov
cmpsb
rcr
inc
int3
imul
push
add
out
je
fcompl
jne
pushf
or
push
xor
sub
jb
xlat
push
push
mov
jecxz
add
push
xchg
fidivrs
sub
out
out
xlat
sbb
popa
lock
xchg
fcomps
mov
aad
mov
fdiv
repz
iret
mov
xchg
mov
mov
jl
movzwl
shrb
lds
mov
div
pop
mov
adc
jae
mov
pop
xchg
xor
sbbl
mov
or
icebp
jecxz
adc
jae
outsb
imul
and
sub
fimull
mov
push
add
xorl
mull
call
stc
jo
xor
dec
mov
in
or
mov
hlt
insl
inc
gs
dec
cmc
mov
lret
push
into
mov
add
xchg
fildll
test
sub
cltd
icebp
dec
ja
int3
in
hlt
rorl
scas
xor
and
jne
icebp
cmpl
cmp
shll
mov
scas
cmc
add
xchg
cwtl
push
aad
push
jle
push
jmp
sub
push
push
sbb
mov
jae
mov
jg
or
hlt
dec
in
hlt
xchg
testl
rcrl
outsb
adc
insl
sar
out
aas
cmp
add
add
popf
ljmp
jle
lret
xlat
xor
mov
pop
daa
cmp
push
cmp
or
ficompl
lods
cltd
out
or
insl
mov
or
add
add
push
out
adc
fnstsw
shll
leave
stos
dec
icebp
imul
or
mov
dec
sahf
jecxz
iret
mov
cmp
xor
test
cmp
pop
pop
arpl
addr16
sar
cs
das
shl
negl
pop
push
or
stc
insl
aad
or
mov
push
mov
mov
imul
jno
mov
adc
aas
xchg
sbb
jnp
mov
inc
jne
repz
xchg
cltd
inc
add
roll
xor
xchg
sbb
xorb
aam
bound
inc
shl
push
das
pop
jb
lret
push
mov
push
adc
rolb
insb
rol
fldl
loope
adc
jmp
push
pop
xchg
ja
rorb
lock
mov
bound
in
dec
test
loopne
int
mov
int3
popa
sbb
imul
stc
sbbb
shl
mov
repnz
je
call
in
lret
loop
xchg
sub
inc
add
std
jns
pusha
push
mov
inc
and
mov
jg
xor
pop
push
je
into
jno
mov
push
sbb
add
outsl
sbb
aad
or
inc
dec
sahf
mov
mov
sub
mov
cli
mov
arpl
arpl
mov
adc
jg
xor
popa
sahf
cwtl
test
dec
mov
and
inc
fdivs
sahf
fs
movsb
pop
mov
shll
jno
push
in
pop
imul
mov
imul
mov
sbb
sbb
cltd
movsl
jmp
adc
mov
pushf
cmpsb
mov
mov
and
dec
fcomps
gs
repnz
pushf
aam
aas
mov
inc
addb
and
inc
mov
push
adc
pop
das
es
mov
adc
lahf
das
mov
js
cmp
jne
add
ljmp
in
mov
jl
xchg
testb
popf
jns
lock
cmp
mov
js
jp
negb
inc
and
or
hlt
pop
mov
pop
dec
out
repz
clc
push
cmp
xchg
fs
adc
inc
cmc
add
rcrl
push
fists
add
in
dec
mov
xchg
test
out
push
adc
aam
inc
mov
int
ja
sbb
adc
out
mov
xchg
xorl
pop
inc
lahf
jae
rorb
xchg
pop
mov
cmpsl
mov
lea
mov
sbb
movswl
imul
aad
in
cmp
lods
rcrb
and
imul
lret
dec
push
mov
fmuls
pop
mov
push
mov
shrb
fstpt
jo
push
cmp
call
je
inc
mov
in
adc
xchg
or
in
iret
bound
pop
out
xchg
or
lods
rclb
push
imul
fs
enter
int
icebp
sub
bound
daa
mov
movsb
call
sbb
jno
jne
adc
fisubrl
imul
adc
pop
insb
sbb
filds
jo
and
inc
es
int3
flds
fisubs
jnp
mov
jmp
iret
test
cmp
push
mov
jge
repz
mov
aaa
jbe
pop
add
sub
mov
dec
gs
fwait
pop
adc
cmp
shrb
push
xchg
sbb
repz
add
add
mov
sbb
pusha
add
ljmp
inc
cs
xchg
inc
std
enter
jg
sbb
xor
iret
mov
mov
mov
mov
cmp
std
divl
dec
cld
mov
pop
inc
dec
xor
mov
std
xchg
fmul
fcom
fists
cmp
mov
ja
sbbl
mov
mov
dec
repz
xor
xlat
jl
idiv
in
push
dec
pop
in
dec
and
mov
outsb
mov
in
std
mov
sub
sbb
in
adc
mov
insb
clc
cmpl
pushl
and
test
sbb
enter
cmp
loope
ja
es
lret
sub
js
pop
cmc
dec
test
outsb
pop
js
movsb
jge
mov
inc
in
mov
adcl
jns
xor
test
lds
nop
xorb
outsb
int3
out
cltd
stos
test
jge
movsb
adc
mov
dec
cmp
sub
xor
mov
push
cmp
ljmp
pop
jbe
ret
outsb
adc
push
inc
push
add
imulb
popa
mov
fsubrs
into
lret
daa
jb
cwtl
jno
fldcw
fnsave
xchg
sub
out
xor
adc
mov
je
pop
pop
jmp
mov
push
cli
push
ljmp
addr16
mov
sti
adc
inc
jl
std
in
dec
inc
push
and
inc
sti
sti
mov
mov
or
iret
shlb
xchg
sbb
xchg
dec
loope
fsubrl
pop
stc
mov
mov
outsb
mov
cmp
mov
cmp
mov
mov
mov
sbb
outsb
inc
das
out
bound
inc
mov
pop
ss
xor
enter
imul
data16
xchg
lret
fsubrl
cmpsl
or
nop
call
insb
adc
push
in
outsb
out
xor
mov
pop
arpl
scas
mov
mov
jmp
cmp
cmpl
mov
pop
out
pop
add
data16
loope
jle
dec
shl
call
add
sub
in
stos
inc
inc
push
test
jmp
mov
add
pop
sub
sbb
sub
sub
sbb
arpl
psraw
popa
neg
loop
sbb
xchg
sbb
sbb
enter
out
ja
sbb
aas
inc
aam
jbe
adc
ficoml
adc
incl
inc
add
dec
mov
clc
add
inc
adc
inc
jno
cmp
lds
push
fiadds
sub
inc
fsubs
mov
lock
mov
jo
cmovbe
sbb
push
cmp
jo,pt
aas
jmp
arpl
test
aaa
xor
lock
and
sbb
lock
mov
data16
hlt
enter
sub
inc
add
sub
mov
sbb
fmul
lcall
loope
xor
cmovb
popa
cltd
add
jle
and
inc
outsl
pop
mov
leave
aam
icebp
sbb
sub
or
test
loop
pop
popf
push
lcall
xchg
pop
sahf
jae
cltd
movsl
sahf
out
fdivl
mov
adc
cmp
mov
out
mov
sub
enter
loopne
fists
add
inc
insb
mov
out
mov
repz
or
popf
sbbb
ds
pop
mov
shrb
jl
dec
jmp
and
ds
sub
inc
dec
inc
pop
jl
cmp
ja
xor
movsb
lcall
je
and
sbb
sbb
gs
adc
adc
fdivrs
pop
cmc
addr16
inc
pop
arpl
ss
sbb
dec
movsl
lods
xor
dec
mov
mov
dec
aad
jmp
or
xor
movsb
dec
aam
jecxz
js
sbb
pop
xor
leave
adc
test
in
adc
push
loop
sub
xchg
mov
mov
xchg
and
cmpsb
out
add
lods
cmp
pop
sti
js
jb
cwtl
dec
mov
mov
lret
sbb
ss
sub
adcb
sbb
pusha
sub
clc
gs
in
jmp
jle
mov
and
rcrb
xchg
jmp
xor
repnz
cmpsb
daa
in
cmc
cmp
jg,pt
aam
and
into
ficoms
test
fwait
cwtl
cwtl
pop
add
lods
inc
sub
inc
xor
sbb
call
orl
pusha
mov
gs
xlat
push
cmp
lcall
ss
sub
stos
aam
js
push
js
insb
cld
lods
fdivrs
sbb
out
gs
jg
loop
cli
enterw
movsb
mov
ret
in
sub
xchg
fwait
stc
add
bnd
mov
xchg
xor
push
jmp
mov
lods
xchg
jnp
aas
ret
jecxz
xor
cmpsb
das
inc
jno
in
xchg
jecxz
jecxz
dec
in
inc
dec
jnp
out
bnd
push
mov
mov
mov
fiaddl
add
adc
shll
fidivs
cmpsl
cmp
das
mov
and
fnstcw
lret
pusha
arpl
adc
dec
stos
les
dec
popf
pop
inc
push
xchg
ljmp
je
out
jb
pushf
fdivr
test
jmp
push
fwait
sub
xor
xchg
and
cmp
clc
ret
in
sub
pusha
cmpsl
and
and
pop
fistps
or
dec
jg
sbb
inc
fwait
rorl
add
je
fxch
aaa
add
cli
or
jge
mov
jbe
push
jle
lcall
outsl
repnz
test
movsl
sub
lods
movsb
sbb
xchg
sub
gs
push
push
enter
or
imul
sahf
out
dec
call
pop
sbbb
shr
jnp
arpl
cmp
mov
cmp
fistpl
add
dec
sahf
xchg
jg
gs
lods
dec
push
or
ret
inc
in
xchg
stos
fimull
negl
push
orl
insl
xchg
add
stos
hlt
dec
scas
cmc
xchg
subl
or
pusha
push
xchg
repz
in
mov
mov
sbb
sbb
push
push
or
push
sbb
je
jae
aaa
jmp
pop
sub
mov
inc
ds
in
divl
lret
sub
call
loopne
test
mov
mov
jp
fs
pop
dec
icebp
mov
loopne
sbb
or
ret
int3
js
mov
mov
shll
or
mov
loopne
or
xchg
in
push
cmp
sbb
cmpl
movsb
rcrl
nop
fcomp
cmp
mov
lcall
jo
shlb
pop
inc
daa
mov
mov
stos
sub
loopne,pt
enter
bound
pop
adc
adc
mov
jle
jp
and
mov
sub
pop
jb
gs
fs
mov
xor
push
call
xor
std
ficoml
push
lods
push
bound
test
or
jle
jno
test
pop
in
mov
xchg
test
add
pop
mov
lret
and
xlat
ret
cmp
sub
pusha
xchg
inc
call
popa
sub
cmp
inc
or
movsl
xchg
jae
cs
in
inc
xchg
jo
cwtl
aad
and
mov
shlb
lcall
adc
and
inc
stc
in
mov
andb
sub
js
pop
adc
aas
enter
xor
cmp
pop
and
bound
mov
outsl
test
adc
subb
clc
test
mov
xor
push
je
pcmpgtd
push
add
mov
cmp
sarl
dec
cs
xor
adc
add
lods
jecxz
popa
sub
fcomps
mov
xchg
cmp
fcomps
ja
push
int
pop
push
xchg
mov
shll
loop
jl
inc
jmp
mov
stc
mov
sbb
sti
icebp
lret
jg
xchg
loope
pop
mov
fwait
movsl
or
mov
test
mov
subl
xor
xlat
pushw
fwait
je
sbb
dec
idivl
clc
push
push
jae
pushf
jmp
psadbw
cmp
xchg
cmp
pop
cld
mov
fmull
clc
mov
movsb
xlat
xchg
push
ret
xor
pop
into
outsb
popa
ss
mov
loop
push
xchg
jb
and
cwtl
sar
and
xorl
ss
xchg
test
mov
mov
push
pop
adcb
cmpsl
stc
or
iret
cmp
loope
fisttps
into
pop
mov
mov
cmp
rolb
jb
mov
scas
outsl
fidivrs
jae
fmuls
dec
fildll
lret
cmp
insb
or
pop
ret
pop
mov
das
cmp
mov
gs
scas
ja
lock
fwait
adc
js
dec
pop
dec
js
test
addl
pusha
xchg
xchg
sub
sbb
xchg
mov
mov
popa
ret
cmp
mov
psubw
pop
or
cli
ja
mov
es
adcb
mov
xchg
xor
jns
or
cmp
push
jmp
xchg
decl
push
or
inc
sbb
leave
mov
lret
or
fsts
call
faddl
imul
clc
div
sbb
outsb
out
loopne
inc
jb
or
outsl
test
sub
mov
mov
loop
xor
inc
mov
inc
icebp
pop
nop
mov
inc
mov
repnz
sbb
fcmovb
shr
stos
jmp
cmp
sub
xchg
mov
jg
and
xor
mov
xchg
leave
sbbb
jge
cmc
jnp
mov
nop
or
adc
popf
in
xchg
scas
sahf
es
or
xlat
mov
mov
pop
mov
add
cltd
mov
inc
and
or
push
nop
pop
addr16
loope
nop
cmp
cltd
jns
movsl
or
push
cmp
xchg
add
push
mov
mov
sbb
mov
mov
pop
mov
fsubs
cwtl
mov
mov
push
out
jo
or
mov
adc
and
dec
mov
dec
mov
stc
loope
xchg
cmc
push
out
adc
imul
daa
xchg
notl
pop
fisubrl
fisttps
std
scas
adc
decl
nop
rcrl
fimull
adc
xlat
adc
out
and
loopne
stos
xchg
push
pop
int
inc
shlb
call
pushl
cmpsl
pop
jecxz
aaa
mov
popa
add
xor
sub
sub
fsts
aas
mov
xor
push
cmp
test
or
xor
and
and
fdivs
es
movsb
lret
xchg
ljmp
loopne
clc
adc
add
loop
sbb
jmp
idiv
es
mov
sub
stc
mov
insb
fsubr
cltd
jecxz
pop
and
sub
sub
bound
cli
hlt
sub
ljmp
cmpb
sbb
cltd
mov
inc
in
in
mov
scas
aam
pop
das
pushf
push
int3
xchg
push
adc
loope
pushf
cli
push
int3
adc
movsb
inc
lret
mov
hlt
jno
mov
push
inc
shll
or
add
push
xchg
in
sbb
inc
das
inc
and
add
mov
insb
xor
push
lahf
pushf
mov
cmp
pop
les
jl
inc
fs
adc
xor
call
xchg
lret
push
fdiv
sub
or
sub
rorl
jge
xor
std
lock
idiv
push
aaa
add
sar
push
ds
clc
int
xchg
in
or
xchg
dec
orb
gs
shl
pop
jnp
add
sbb
dec
clc
popa
dec
stc
lds
movsl
mov
dec
push
and
and
adc
imul
sub
mov
xchg
dec
jae
lock
cmp
in
mov
std
or
jbe
in
dec
inc
mov
add
int3
cltd
mov
or
int3
aam
sub
sbb
aad
add
jecxz
xor
adc
cmp
cmc
pop
enter
iret
mov
or
or
lret
shlb
or
std
push
cmpsb
cli
ret
in
or
std
lret
or
sub
xor
pcmpeqb
clc
xchg
sub
pop
lret
pop
push
push
jge
cli
mov
shl
xlat
repz
sub
out
xchg
into
pop
sub
dec
jg
iret
test
inc
mul
jp
hlt
fs
or
sub
ds
cmp
sbb
cmpsl
test
popa
or
gs
lcall
loopne
lcall
sub
mov
out
es
jl
cmp
aam
mov
lret
sbb
into
in
mov
lods
pusha
xor
fistl
xchg
sub
dec
push
jb
hlt
cwtl
inc
mov
inc
cmc
imul
push
dec
out
mov
xchg
lds
std
cli
push
adc
sahf
std
jmp
xor
mov
lret
pop
ficoml
dec
sub
test
cmp
repz
mov
es
push
or
dec
loop
and
mov
jns
xor
push
sub
sub
popf
add
push
dec
hlt
in
cmpsl
clc
jl
xor
ds
xor
insb
into
test
sbbb
rcl
inc
lret
mov
loope
flds
sbb
dec
ds
add
jmp
xchg
shlb
push
sar
daa
cmp
ljmp
test
ret
inc
stos
mov
mov
jns
cmc
loop
cmpsl
leave
imul
push
xor
scas
std
int3
inc
jbe
dec
nop
or
and
dec
or
push
mov
xor
mov
movsb
fstps
sub
lret
pop
rcl
mov
outsl
add
inc
fsubrs
push
lcall
mov
dec
mov
add
dec
test
jo
cltd
cli
leave
mov
and
jne
mov
mov
aas
mov
jmp
out
outsl
out
dec
movsb
test
aam
popf
test
fucompp
push
into
sub
aad
and
movsl
pop
fisubrs
cmp
jne
mov
testl
or
and
xchg
inc
sbb
iret
lea
jbe
clc
outsb
mov
lcall
mov
pop
cld
addr16
xor
insl
xor
out
mov
test
nop
push
ret
cmp
cmc
fdiv
mov
mov
xor
cmpsb
jl
or
into
adc
fidivl
ficomps
pop
xor
cmp
imul
pop
fistl
or
mov
rol
sbb
dec
jnp
inc
mov
iret
ja
stos
xchg
mov
pop
xor
aas
icebp
jle
cs
fistpl
xor
cwtl
loop
or
lods
add
cld
sti
imul
sub
aad
add
or
dec
cmp
mov
cwtl
or
push
jl
push
lods
aam
shll
les
js
incl
dec
outsb
fbstp
outsl
pushl
sbb
mov
or
scas
jl
jbe
sub
ds
testb
fld
and
xor
or
and
ret
cs
push
and
rorb
xchg
stos
fsts
aad
repnz
jle
and
filds
idivb
lahf
lods
push
rcrb
and
mov
cmc
test
daa
ror
xor
mov
xchg
pop
pop
rcrl
mov
arpl
adc
push
repnz
add
mov
das
mov
add
clc
popa
push
je
and
add
jbe
jle
xchg
int3
movsl
das
loope
test
lret
mov
in
dec
jg
iret
dec
std
rcll
mov
push
sahf
fidivrs
scas
lahf
sbb
inc
pop
loopne
push
mov
daa
adc
lcall
insl
cmp
icebp
lods
or
call
mov
and
jno
ja
mov
mov
push
or
add
dec
inc
out
mov
cltd
push
jg
pop
dec
fs
push
sub
jg
or
mov
or
push
or
jmp
push
cmp
insl
xchg
mov
sahf
xorl
xchg
sti
mulb
loope
lahf
mov
ficompl
roll
xchg
dec
cmp
lcall
cli
aad
and
sub
fcom
daa
iret
enter
sbb
mov
push
inc
jge
movswl
daa
loop
mov
jne
jbe
mov
aam
fwait
inc
addr16
aad
jnp
mov
mov
lods
push
jle
push
into
xor
inc
sahf
xor
cwtl
addb
cs
mov
cmp
adc
clc
sbb
les
mov
out
bound
adc
sub
adc
ret
cli
outsb
pop
pop
daa
cltd
iret
js
rorb
ret
sbb
lods
lret
add
fdivrp
mov
inc
adcb
adc
mov
push
dec
scas
rcrb
mov
in
mov
out
dec
cmp
pop
fdivrl
xor
flds
mov
stos
xchg
stos
adc
sbb
je
clc
cmp
aas
iret
daa
setge
divl
mov
mov
mov
bound
and
lcall
push
xchg
rorb
sub
xchg
add
repz
xchg
in
in
and
and
and
in
or
lds
aad
cld
scas
sub
mov
setb
test
xchg
dec
shrb
imul
bound
push
lea
add
jge
pop
mov
xchg
lahf
stc
or
mov
mov
pop
inc
jmp
inc
xlat
adcb
push
btsl
insb
cmp
inc
sbb
mov
add
cmc
leave
xor
mov
lods
jo
sub
and
out
testl
in
or
jne
rcrb
movsb
fwait
pop
mov
dec
mov
mulb
add
cmp
add
mov
add
out
dec
insb
push
jmp
lcall
add
pushf
outsb
pop
push
sbb
loope
or
mov
test
call
aam
aas
loop
movsbl
shlb
mov
push
inc
stos
sub
push
cmp
je
call
xchg
cmp
cmc
aas
notl
xchg
in
ja
and
add
out
cmp
cld
mov
jmp
out
mov
cld
aas
jmp
add
into
push
ret
pushf
adc
enter
mov
pop
call
stc
mov
jle
push
pop
clc
mov
pusha
fsubs
scas
fdivs
push
push
or
mov
cmp
insl
pop
lret
dec
push
jne
mov
sub
gs
dec
inc
je,pn
cmp
ds
fisubl
bound
jnp
clc
in
leave
push
outsb
adc
lods
push
jmp
inc
pop
dec
add
dec
mov
and
jmp
jp
bound
cmp
arpl
call
push
lods
es
outsb
popf
std
repz
in
mov
cld
aas
lea
js
ss
daa
js
fbstp
add
sbb
pop
rorb
lods
fistps
xchg
or
cmc
mov
mov
and
mov
dec
test
fwait
mov
push
pop
ret
add
addr16
xor
mov
or
xor
push
movsb
mov
push
ja
jno
dec
arpl
notl
imul
lea
pop
and
add
xchg
mov
loop
clc
divb
aas
adc
outsb
loopne
clc
and
jecxz
js
outsl
jp
jg
filds
movsb
and
pop
mov
out
inc
and
sarb
pop
lret
or
jnp
inc
sbb
add
sbb
add
cmp
xchg
loope
cmpsb
movsl
call
in
into
fstpt
inc
jge
sbb
gs
dec
xchg
sub
push
pop
xchg
xchg
lds
inc
aam
nop
jle
pop
mov
gs
and
mov
fcoms
jb
movsl
jge
jl
pusha
lret
hlt
mov
ret
idiv
test
inc
outsb
mov
cli
add
cltd
pop
cmpsl
xchg
sbb
clc
jb
push
mov
sub
ss
fwait
sub
xchg
decl
fnstcw
jne
mov
mov
sbb
dec
aaa
jge
mov
mov
es
in
pop
rcr
fsubrl
loop
push
push
inc
repnz
inc
jp
pop
xchg
mov
daa
mov
push
stos
loope
pop
test
rcrl
sub
jp
adc
sahf
sub
mov
cld
adc
test
es
shl
mov
sbb
and
xchg
add
push
sbb
jmp
rol
rep
jae
dec
hlt
dec
mov
inc
popf
sub
push
jp
cs
insb
xor
lods
add
gs
ds
clc
lock
cmp
mov
mov
inc
push
mov
sbb
or
out
rolb
xchg
dec
lret
push
in
ds
mov
jbe
inc
dec
imul
lea
jne
or
movsb
inc
cmp
test
into
xchg
mov
sahf
mov
and
mov
add
fwait
pop
stos
push
inc
jg
adc
inc
cmp
mov
fcomi
pop
psrlw
orl
addr16
ljmp
jg
test
mov
push
push
lret
push
sti
std
add
sarb
mov
sbb
call
sbb
jb
add
jmp
idivb
cmp
xchg
aaa
pop
jno
dec
int
or
mov
xor
dec
push
lods
std
aam
shlb
fs
out
xor
adc
loope
xchg
xchg
outsb
cmpsb
pop
pop
ret
add
push
mov
movsl
sti
cs
pop
sbb
sub
cmp
pop
addr16
ljmp
rsqrtps
mov
fnstsw
fnstsw
insl
sub
imul
lret
sbb
inc
jo
xchg
arpl
add
pop
mov
lret
mov
adc
add
out
xchg
sub
std
push
pop
cmp
ficompl
stc
xchg
shll
inc
xchg
div
call
inc
pop
jb
adc
fstp
cmp
pop
sahf
mov
sbb
mov
sbb
mov
or
xchg
jle
outsl
or
int3
sbb
ret
push
int3
bound
adcl
cwtl
dec
jae
jmp
mov
push
sti
fnstcw
scas
bound
lock
pop
jno
lret
sub
scas
sub
xchg
xor
fstpl
inc
cltd
gs
pop
es
cmp
aad
ud0
in
mov
shlb
pop
dec
xlat
inc
add
lcall
out
mov
insl
lods
sub
xor
call
cli
add
sbb
push
lock
je
mov
stc
iret
lds
je
add
lock
addr16
mov
inc
pop
jmp
test
add
popa
cmpsl
mov
test
sbbl
and
insb
leave
cmp
movsb
out
xchg
sbb
adc
shlb
jecxz
and
mov
popa
js
imull
loop
pop
pop
add
jo
cmpsl
jnp
adc
inc
ljmp
cmpsb
jno
inc
mov
cmc
dec
movsb
mov
ret
outsb
dec
jns
or
sub
ret
cmp
xor
lock
loopne
lret
div
mov
xor
cmp
mov
sbb
mov
and
fmull
and
scas
lock
movsl
lea
hlt
out
adcb
xchg
inc
das
inc
inc
popa
jae
notb
cmp
movsl
sbb
lods
test
inc
inc
loopne
dec
shrb
push
pushf
fwait
or
jns
out
decb
ss
jecxz
sti
lret
imul
pusha
mov
cltd
cld
pop
jg
call
imul
loope
aaa
cmpsb
mov
push
das
xor
xor
repnz
xor
adc
es
mov
jae
jae
sbb
lock
mov
mov
filds
jno
lock
adc
xchg
stc
xor
mov
out
inc
stc
movsb
mov
jne
adc
mov
loope
subl
mov
cmp
mov
fnsave
sub
fcomps
and
fdivs
mov
popf
add
and
xchg
std
in
xchg
sub
jnp
adc
mov
shlb
pop
test
cmp
daa
lea
cmpsb
push
or
inc
imul
and
divb
rcrl
xor
push
leave
pop
les
in
ss
addb
jo
inc
lods
xor
sub
mov
cmpsl
sub
mov
ja
sub
lods
test
xor
rclb
fs
imul
decl
jge
movsl
or
mov
ja
iret
xor
mov
out
adc
jecxz
dec
lcall
pop
lcall
rorb
push
arpl
pushf
push
dec
daa
adc
cmp
bound
orb
add
or
cld
sarl
dec
mov
notl
ret
xor
fistpll
push
je
movsl
jns
inc
ds
inc
ljmp
mov
fldt
xlat
push
arpl
cmp
insl
or
incb
adc
test
pop
jae
enter
sub
jecxz
scas
add
or
in
cmpsb
sub
inc
mov
jne
xor
lret
mov
mov
das
inc
popf
mov
xorb
pmuludq
xchg
repz
dec
lea
aaa
outsb
sbb
clc
mov
outsb
hlt
sti
mov
push
insl
sbb
repnz
xchg
sub
shl
xchg
mov
push
icebp
sub
cmpl
in
cs
in
shl
mov
pop
or
push
out
test
xchg
rcrb
mov
out
push
hlt
ret
push
subb
enter
mov
pop
xor
nop
mov
test
popa
jg
loope
sbbl
leave
pop
out
inc
stc
test
dec
out
cli
xor
addr16
mov
lds
int
add
cmp
xchg
hlt
icebp
mov
fwait
pop
imul
stos
cmovns
jnp
shrl
repz
inc
or
gs
lods
mov
incb
movsb
dec
insb
cmp
jbe
aam
out
rcrb
push
cmpsl
adc
clc
dec
cmp
add
sbb
sub
movsb
addr16
int
jns
dec
bound
jecxz
mov
mov
aas
shrl
pop
outsl
pop
jle
pop
sbb
adc
and
ds
int
je
outsl
sbb
mov
push
out
stc
mov
repnz
xchg
inc
movsl
cmpsb
pop
lods
arpl
and
loope
sub
mov
pop
cmp
dec
sub
jg
xor
adc
loopne
iret
iret
and
lcall
dec
push
dec
in
add
jp
dec
push
pop
and
dec
jns
stos
sub
pop
mov
in
lahf
lods
dec
adcb
pop
clc
movsb
stc
mov
pop
pushl
leave
mov
dec
pop
xorb
xlat
push
rolb
scas
testb
push
jge
xchg
pushf
or
mov
cmp
stos
lahf
das
add
pop
xchg
std
xor
mov
dec
dec
popa
mov
mov
test
loopne
xchg
xor
cmpl
scas
ss
or
jge
xlat
loopne
lds
fdivrl
jbe
lahf
or
push
mov
adc
add
jecxz
adc
push
dec
pop
aad
mov
mov
test
inc
andl
and
inc
push
push
mov
sti
sahf
mov
ror
stos
mov
lcall
adc
lret
jo
mov
imulb
cmc
push
test
pusha
jb
dec
add
push
notb
cmp
push
cmp
cmp
mov
dec
hlt
stc
adc
pushl
insb
and
stc
popa
rcl
jge
or
lcall
insl
push
cmpsb
out
mov
inc
push
mov
je
lret
and
sub
push
ljmp
mov
fcomp
insb
in
shlb
std
not
adc
outsb
iret
mov
data16
imul
movsl
mov
xchg
add
inc
mov
push
scas
jg
int
outsl
scas
jle
in
mov
jl
sbb
stos
mov
or
inc
lods
or
or
push
call
jmp
inc
out
in
dec
sarb
jne
in
stc
es
add
std
shlb
mov
push
mov
lret
sti
aam
mov
fadds
pop
sbb
jp
cmpsb
aam
cmp
sbb
cmpsb
sub
mov
sbb
mov
mov
sub
and
scas
adc
fildl
rcll
pop
sti
std
lds
mov
sub
aam
jp
popf
and
and
subb
dec
rcrl
rcrl
fwait
leave
pushf
dec
jmp
cmpsl
or
pop
adc
repz
daa
dec
nop
sbb
xlat
popf
adc
mov
jae
sahf
dec
loope
ret
movl
sub
pushf
js
sahf
repz
xchg
inc
gs
dec
pop
mov
jl
sahf
movsb
xchg
cmp
add
push
outsl
icebp
sub
nop
test
insl
push
cmp
inc
xor
sub
cmpsl
mov
adc
rcrl
xlat
xor
lcall
add
arpl
insb
lock
lret
jecxz
rorl
mov
xlat
scas
fcompl
stos
mov
mov
pusha
test
lea
pushf
imulb
addl
lods
dec
je
cmp
shrl
shlb
mov
iret
in
mov
jnp
push
popf
mov
push
out
fwait
je
jae
cli
scas
nop
cmpl
xchg
adc
cwtl
push
sub
mov
imul
outsb
movsb
add
sbb
lods
or
mov
shrb
lods
sbb
xor
dec
add
push
bound
fsub
in
shll
xlat
mov
sbb
mov
pusha
xchg
and
imul
sub
mov
jmp
imul
out
sub
loopne
sbb
dec
repnz
pop
movsl
xchg
ljmp
jl
sarb
sahf
cld
cmpsl
sti
inc
cwtl
out
out
sti
and
or
repnz
shlb
pop
mov
mov
daa
dec
enter
xorl
dec
mov
in
mov
das
incl
test
pop
mov
sbb
std
aas
mov
xor
outsb
ror
out
fisttpl
popa
add
fwait
je
pushf
mov
aam
pop
mov
fcoms
xchg
jbe
js
cwtl
sub
cmp
mov
or
xor
daa
rol
mov
mov
rcr
dec
dec
mov
dec
inc
adc
icebp
in
jge
fwait
movsl
xchg
aad
inc
cmp
dec
dec
movl
push
out
sbb
andl
loop
fimull
scas
in
into
negb
sub
or
inc
add
adc
call
out
jge
fisttps
pop
bound
mov
pop
dec
xchg
pop
cmpl
cmp
jl
pop
push
adc
cwtl
add
xor
dec
mov
mov
inc
push
popa
and
rorl
mov
jmp
arpl
shrl
ja
cmpsl
pop
lods
imul
add
xor
lds
add
xchg
jge
outsl
rcll
push
aaa
jae
sarb
stc
ror
cs
mov
fistpl
movsl
mov
mov
out
add
mov
jg
jne
xchg
lds
and
sbb
das
pop
jmp
mov
cmp
add
enter
sbb
push
orb
cmpsb
jo
pusha
sub
push
mov
mov
stos
nop
dec
test
lea
sti
dec
jns
cmp
pop
dec
shrb
xchg
jno
ds
adc
movq
xchg
outsl
inc
mov
and
pusha
sub
data16
adc
add
sahf
jecxz
cltd
repnz
call
fldcw
mov
cld
insl
inc
ret
lahf
jle
cld
in
adc
add
gs
pushf
mov
mov
dec
add
xor
inc
mov
sbb
mov
cmp
mov
call
cmp
mov
cmpsl
mov
xchg
cld
jg
frstor
cltd
loope
setg
das
sbb
xchg
mov
les
daa
xchg
xor
in
subl
lahf
pushf
mov
cmp
lds
icebp
dec
pop
pop
jns
mov
push
add
add
adc
pop
enter
sti
sbb
mov
stos
adc
jne
out
sbb
adc
test
data16
or
pop
lahf
out
jp
add
nop
mov
add
mov
xor
ret
inc
call
dec
les
jmp
adc
xchg
test
or
out
lret
data16
add
shr
aas
jns
scas
sbb
cmp
or
mov
divb
pop
xchg
aas
cmp
dec
inc
cmc
pop
adc
inc
lcall
ret
mov
scas
fistpll
inc
icebp
divb
push
dec
ret
ret
jmp
sub
movsl
add
aas
xchg
rcll
pop
mov
xchg
aas
xchg
imul
rsm
push
cmp
and
pop
std
add
lock
cs
sbb
pop
ret
xchg
stos
mov
cmp
mov
cmp
fld
adc
out
sub
lods
ret
xchg
loop
pusha
pop
push
mov
push
aaa
xchg
imul
cs
and
mov
sarl
mov
insb
dec
pop
repz
test
cmp
jmp
pop
rolb
je
mov
popa
xor
push
dec
into
sbb
scas
in
aaa
fs
mov
pop
subb
lret
lahf
stos
testl
pusha
adc
pop
mov
xor
and
jg
push
push
cmp
mov
jmp
lea
xchg
nop
out
sbb
mov
int3
loopne
sub
clc
add
fldt
fwait
dec
cmp
add
xor
sub
pop
lcall
or
adc
push
push
xor
mov
mov
int
sbb
cs
xor
iret
mov
adc
lahf
imul
push
ljmp
jp
pop
push
data16
sbb
loop
xchg
movsb
mov
addr16
sbb
push
adc
sarb
push
jmp
addr16
fisubs
sbb
push
fs
mov
mov
subl
cmp
notb
mov
lds
fistpll
jb
pop
mov
adc
andl
subl
cld
shl
adc
sbb
dec
pop
add
pop
push
rolb
cmp
nop
xor
rorb
shrb
out
sbb
mov
loop
popf
outsb
mov
pusha
sbb
test
js
mov
int
sbb
jb
dec
jns
sti
call
stos
lret
sub
cld
sbb
scas
xchg
sub
daa
cltd
mov
or
insb
jge
sti
jmp
fsts
adc
mov
inc
xchg
dec
push
mov
jp
sarl
mov
or
push
fldcw
push
sbb
lods
jnp
cmp
stos
push
mov
aaa
iret
stc
das
add
das
mov
inc
repnz
outsl
push
addr16
dec
mov
mov
lods
out
scas
sbb
mov
mov
or
jge
imul
ja
repz
int
pusha
xor
jge
push
xor
jae
jae
rcrl
lods
out
das
cmp
or
xor
xchg
lcall
or
lods
loopne
mov
xor
pusha
adc
push
mov
xchg
pop
insb
in
jg
pop
jnp
inc
imul
inc
in
movsl
mov
push
ss
adc
test
ljmp
mov
dec
mov
nop
ficomps
jp
imul
aas
negb
sub
xchg
or
ja
add
or
and
pop
cwtl
and
xchg
out
scas
loopne
pushf
scas
mov
mov
in
fcmovnb
jno
fisubrs
pusha
out
cli
mov
je
aas
cmp
and
mov
and
sbbl
mov
movsb
jb
repz
loope
push
inc
mov
pop
loopne
sbb
sbb
push
push
mov
sub
hlt
cwtl
ss
cli
bound
inc
sbb
aad
adc
mov
rclb
mov
mov
xchg
into
add
aaa
ja
lock
dec
stos
and
cs
fwait
outsb
pop
cmpsb
xchg
hlt
cmc
stos
mov
inc
in
cmpsb
lcall
fdivrl
lret
and
fwait
push
push
xor
inc
cld
mov
push
pop
sub
xor
mov
mov
xsave
adc
call
mov
mov
pusha
sub
inc
or
sbb
fs
mov
pop
jo
add
fisttpl
clc
enter
mov
lcall
and
push
sbb
sar
push
or
insb
lds
mov
inc
mov
cmp
aad
mov
and
cmc
add
push
xlat
pop
jl
lods
outsl
out
xchg
fdivl
and
jno
pusha
or
sarl
push
xchg
mov
into
je
jae
jl
push
or
movb
test
push
cs
gs
pop
ds
cmp
xor
adc
mov
pusha
insl
icebp
add
adc
mov
inc
push
jl
push
imul
jb
inc
dec
cwtl
cltd
dec
or
xor
cmp
and
add
mov
push
mov
lret
mov
int3
mov
mov
inc
movsl
lahf
jecxz
out
add
fistps
outsb
cmp
lods
and
adc
sbbb
jne
and
sbb
call
loopne
imul
cmpsb
push
pop
dec
dec
shll
sbb
addr16
jnp
push
or
leave
adc
movsb
and
push
push
xchg
lods
xchg
jmp
lcall
pop
mov
fmuls
les
and
test
xchg
stc
cmpsb
jmp
mov
cmpb
out
adc
mov
lods
push
ljmp
cwtl
sbb
mov
emms
push
leave
subl
stc
ss
jmp
lods
mov
lea
ficomps
mov
popa
in
push
push
scas
jnp
stc
pop
sbb
jae
jp
xor
mov
ret
pop
mov
insl
mov
pop
jne
dec
subb
pop
mov
in
xchg
mov
sahf
sub
leave
int
shrb
xchg
sti
cmp
mov
rolb
xor
mov
inc
xorb
test
jbe
lret
add
sub
imul
or
inc
adc
adc
jle
lret
fidivrs
mov
mov
and
cmpsl
aas
outsb
rcl
les
and
mov
scas
jbe
scas
or
icebp
add
cli
or
lock
pop
pop
pop
xlat
push
popf
xchg
push
aaa
les
lret
aad
or
stos
out
cmp
push
out
xchg
addr16
mov
iret
xchg
sub
dec
sub
dec
and
cmc
and
int
pop
inc
jbe
dec
push
mov
sbb
std
adc
pusha
int
shrl
pop
jp
mov
or
inc
aad
mov
in
test
lds
xchg
cmc
aad
inc
cmc
and
fisttpl
stc
dec
xchg
xchg
ret
sub
mov
lock
pop
loope
int
inc
test
inc
mov
push
sbb
pop
pop
mov
pop
xchg
daa
je
testb
adc
popa
loop
iret
pop
sub
jmp
sbb
inc
ljmp
in
xor
insl
loope
sbb
int3
pop
xchg
addr16
loopne
test
ljmp
adc
adc
insb
loope
inc
outsl
mov
push
nop
jns
mov
lock
sbb
aad
in
pushf
andb
les
and
not
dec
out
shrb
cmpsb
fldenv
push
icebp
out
mov
dec
or
fs
and
and
add
pop
jnp
xor
cmc
bound
pop
pop
xor
insl
imul
push
lret
inc
sub
mov
bt
insb
mov
outsb
icebp
jmp
xchg
push
fmull
jno
xchg
roll
je
insb
and
dec
jne
add
pop
stos
add
dec
movsb
xor
add
aaa
push
imul
jbe
sub
fcmovbe
mov
mov
sbb
mov
mov
movsl
mov
jmp
fs
stc
push
and
mov
insb
mov
xchg
pop
subb
fdivr
inc
sahf
aam
ds
xchg
and
sub
icebp
push
sti
aas
xor
mov
and
sbb
scas
mov
ret
jbe
add
fmul
stos
int
adc
push
xor
out
dec
sbb
arpl
insl
roll
mov
inc
sub
test
test
mov
rolb
sbb
push
pop
cwtl
pop
pop
cltd
dec
cmp
or
je
inc
mov
add
bound
adc
test
in
and
lret
xor
sahf
cmpl
add
cld
inc
add
in
cli
lea
fstl
out
stc
aad
int
push
cmp
mov
ds
push
pop
xchg
movsl
jb
inc
mov
push
lock
xchg
xchg
clc
push
dec
fdivl
xor
push
sahf
into
fdivrl
fnstsw
mov
xor
sbb
cmp
sub
movsb
or
sbb
les
and
call
adc
inc
push
mov
cmp
ret
xchg
ss
jecxz
add
ret
pushf
cmp
mov
mov
inc
cltd
push
push
cmpsb
repz
fidivrs
mov
add
jb
outsb
push
mov
addb
ret
sbb
ljmp
loop
add
mov
std
je
cmp
mov
and
imul
lods
mov
xor
dec
mov
imul
sbb
stos
addl
mov
cli
fdivs
lods
dec
adc
cmp
js
sub
jb
rcrl
daa
xchg
scas
sahf
jae
pop
add
xor
roll
sahf
cmpsb
xchg
out
dec
testl
adc
lahf
xlat
out
or
lods
imul
push
stc
shl
cwtl
stos
loopne
ret
adc
mov
inc
ss
les
stos
sub
movsl
sub
dec
mov
imul
mov
sub
mov
or
loopne
dec
jae
mov
push
cmp
ret
scas
imulb
push
rolb
mov
lods
imul
lcall
pop
in
push
loope
aad
cmpsb
repnz
add
lret
mov
xchg
sbb
orb
push
or
sti
add
jmp
dec
cmp
icebp
fwait
pop
fwait
in
cmpsb
subb
fildll
jle
inc
mov
push
inc
mov
mov
cmc
mov
push
dec
adc
mov
ss
sub
mov
mov
movsb
mov
add
cmp
xor
push
iret
mov
popf
out
sbb
int3
add
xchg
push
fwait
std
roll
mov
mov
lret
cmpsb
adcl
push
out
jbe
pop
fs
and
lods
jmp
cltd
cltd
cs
neg
xor
scas
pop
fcoms
cmpb
dec
dec
xor
xchg
mov
cmp
push
or
mov
cmc
enter
inc
sub
add
out
fcomps
and
or
add
outsb
jle
sti
nop
push
sub
or
jge
sbb
mov
xor
mov
das
fwait
jp
bound
inc
dec
in
pop
push
pushf
pop
mov
jge
push
sti
lea
outsl
adc
cmpl
mov
or
or
stos
add
mov
jle
mov
out
jge
pop
out
cwtl
cmp
pop
icebp
js
fdivrl
rorl
addb
sarb
jp
std
pop
ss
test
xchg
xchg
push
dec
push
stos
iret
mov
int
mov
push
std
stc
add
sbb
loop
addl
test
sub
ret
subl
pop
add
cld
push
out
lahf
pop
sbb
pop
sub
ret
and
fstl
aam
mov
int
jae
loop
jmp
popa
inc
push
mov
fstl
inc
pushf
xorb
sub
mov
hlt
gs
jl
hlt
test
sub
into
ljmp
xor
int3
xor
xchg
mov
or
cmpsl
in
test
and
ret
addr16
sub
dec
add
xchg
and
pop
in
psubsw
or
outsl
ja
ficoms
pushf
in
loop
dec
pop
jbe
addl
or
aaa
sbb
jg
and
sbb
adc
fidivs
sti
pop
inc
ret
scas
aas
andl
xor
fildll
or
hlt
cmpsb
out
scas
inc
sbb
dec
cmpsb
jo
std
sti
cmp
in
cmc
jge
dec
add
dec
push
dec
ljmp
stos
jbe
dec
enter
and
decl
pop
enter
xor
mov
jecxz
or
mov
sarb
loop
cmp
cmpsb
xchg
sahf
add
jge
shll
cmp
sub
addr16
idivb
mov
xor
cmp
movsl
jae
and
mov
int3
js
fcoml
loop
adc
dec
ret
aaa
push
or
mov
rcll
mov
in
and
loopne
jns
mov
les
push
scas
inc
xchg
push
loopne
jns
jnp
cmpsl
mov
pop
mov
adc
stos
mov
daa
add
icebp
xchg
inc
mov
outsb
mov
mov
jle
aam
mov
idivb
sar
popf
mov
mov
pop
dec
dec
xor
mov
push
fcomps
mov
jno
fs
mov
ret
adc
ljmp
jnp
cld
stos
pop
mov
test
std
mov
popa
outsb
cmpsb
roll
int
loopne
xor
add
or
pop
pop
xor
loope
push
inc
sarl
mov
mov
mov
and
in
dec
ja
ljmp
add
sbb
test
inc
loopne
mov
lods
gs
jl
cmp
add
pushf
in
gs
in
and
loop
sub
mov
lds
sbb
fsubrl
aas
addr16
or
cmpsb
jae
cmp
add
hlt
push
xchg
int3
sbb
movsb
jb
mov
xchg
rcrb
scas
jae
je
jle
lret
mov
xchg
aas
mov
pop
pop
push
and
shrl
adc
mov
pop
insl
or
out
mov
xchg
push
xchg
insb
xchg
shrl
inc
adc
imul
add
jecxz
push
or
lret
xchg
add
mov
jns
inc
outsl
cltd
adc
test
xchg
shrl
and
jmp
test
inc
sbb
call
and
popf
or
add
mov
cmp
pushf
cmp
adc
aad
adc
or
sbb
test
and
pop
sbb
iret
xchg
ds
cld
cmp
out
xorl
pop
add
adc
inc
pop
pop
mov
mov
push
fmull
in
mov
sysret
jl
call
into
imul
xchg
jbe
stos
mov
mov
ja
aad
dec
jge
dec
mov
or
loop
call
std
cmp
std
and
or
popl
fimuls
sbb
mov
fstl
cmp
or
in
add
lods
push
cmp
std
push
push
xor
push
stos
xchg
mov
mov
xchg
xchg
sub
inc
jnp
lods
cmp
jbe
imul
mov
loope
mov
in
push
je
popa
cmc
ret
repnz
mov
mov
jbe
loope
xchg
call
or
dec
popa
in
repnz
lods
pop
dec
pop
gs
daa
cmp
cmp
lahf
cmp
cltd
jp
fdivrs
jno
jmp
repnz
or
out
shr
jmp
cli
lret
std
xchg
es
rcrl
jecxz
test
pop
jno
testl
mov
pushf
shlb
mov
jg
jns
adc
daa
xchg
jmp
pushf
pop
leave
iret
testl
lcall
jb
add
pop
leave
xchg
cs
test
sbb
in
jb
xor
test
or
cwtl
shlb
xchg
cwtl
paddusb
loop
dec
insl
and
or
pop
add
adc
xchg
ret
scas
inc
call
ficoml
xchg
dec
into
pop
outsb
stos
hlt
sar
loop
sub
dec
push
or
lods
aas
lods
add
xchg
cmp
fwait
add
add
push
xchg
push
sbb
xchg
aas
ds
nop
movb
mov
sahf
cli
xchg
xlat
push
fnstsw
cltd
fldenv
aas
inc
repz
inc
jl
add
jmp
cmp
adc
xlat
sbb
xor
ret
jp
xor
aad
inc
push
jl
mov
test
inc
sub
lds
xchg
icebp
mov
jnp
clc
mov
xchg
xor
addb
mov
push
in
mov
call
les
int3
inc
and
adc
outsl
pushf
fcoml
sahf
mov
inc
mov
in
jno
xchg
push
sub
jmp
int
jg
push
sub
sbb
cmc
mov
dec
adc
ds
int3
out
jae
daa
push
pushf
jne
clc
push
in
mov
or
sbb
xchg
and
mov
mov
inc
int
adc
jb
inc
outsb
negb
push
jle
lds
pusha
fistl
xchg
jnp
aas
inc
mov
xchg
cmpl
pop
cltd
movsb
mov
adc
test
into
and
mov
lock
mov
out
rclb
loope
xor
gs
ja
pushf
cmp
adc
unpcklps
gs
fsubs
mov
adc
pusha
das
sbb
ljmp
sarl
jne
jnp
mov
into
or
stc
aam
sub
and
or
inc
inc
movsb
out
xor
pop
aas
cmc
adc
fdiv
inc
mov
fnsave
dec
sbb
int
push
leave
pop
jo
loopne
xchg
icebp
inc
arpl
inc
lods
shll
fdiv
loop
ret
hlt
rcl
and
cmp
xor
fsub
fldcw
test
cmp
mov
xchg
adc
pop
sbb
sub
lods
or
jle
mulb
xor
push
dec
jmp
into
loope
call
pop
clc
sti
cmp
jb
lods
std
jmp
loope
dec
scas
xor
dec
sti
pop
sub
jae
sub
jo
pop
xchg
jo
pop
pop
adc
pop
shlb
push
inc
mov
inc
movsl
imul
movsb
inc
fdivrs
das
xor
and
outsl
sub
push
call
mov
push
orl
scas
xorb
pop
stos
sahf
test
xchg
adc
and
inc
or
xchg
add
lods
xchg
xchg
rcrl
scas
sub
sub
out
pop
lret
cli
inc
or
pushf
loope
jmp
sbb
dec
cmp
pop
xor
sbb
data16
pop
int
xchg
ret
out
icebp
pop
addr16
pusha
inc
jmp
stc
sti
pop
sbb
xor
aas
xchg
enter
jg
pop
mov
adcl
or
insl
dec
out
or
xor
lea
shll
mov
ds
outsl
cld
pushf
sti
sahf
xchg
inc
test
clc
aam
roll
inc
fisttpl
adc
push
into
push
flds
add
ja
movsb
add
cmc
xchg
sub
jecxz
jmp
daa
sub
mov
mov
int
aas
cwtl
jg
mov
dec
adc
lods
jnp
pop
popa
push
clc
es
adc
inc
add
dec
xor
rolb
push
adc
rolb
mov
push
fbld
inc
and
inc
ret
sbb
jmp
push
daa
jne
mov
movsl
cld
scas
aaa
shlb
xchg
pop
or
cmpsb
pop
add
cwtl
clc
xlat
lods
aam
jmp
std
adc
inc
add
iret
sbb
push
cmp
push
cmp
pop
cmpsl
imul
sbb
push
les
cmp
dec
mov
in
insl
in
add
mov
popa
lret
push
mov
es
dec
daa
shll
sub
xor
push
mov
gs
and
mov
mov
mov
pop
mov
leave
dec
jmp
insb
cli
rcl
xchg
loop
jnp
dec
xor
test
pop
xchg
outsl
jbe
out
rorb
fcomip
mov
fwait
stos
jle
js
cmp
filds
xchg
dec
push
out
dec
or
cwtl
hlt
mov
movsl
sti
sub
fdivr
lahf
push
or
mov
flds
xor
data16
push
filds
cwtl
mov
movsb
or
pop
out
sarb
out
push
sub
mov
mov
push
sahf
les
jmp
outsb
add
cmp
insl
out
cmp
int
fdivl
xchg
lock
xchg
xchg
dec
xchg
mov
aad
jnp
lcall
out
cmc
iret
cmc
xor
jb
aaa
ret
add
sbb
int3
xchg
cmp
mov
lea
scas
icebp
test
fisttps
add
and
loope
xchg
int
mov
shll
cltd
fisttpll
cltd
pop
rcr
push
in
mov
sub
mov
les
pop
pop
dec
mov
nop
pop
sbb
ljmp
ret
popf
push
dec
xlat
leave
mov
outsl
dec
les
mov
lds
outsl
pop
scas
enter
adc
pusha
daa
add
jg
dec
shr
mov
jb
jb
mov
aaa
add
jle
xor
push
popf
inc
add
stc
push
cmp
repz
adcl
mov
cltd
scas
mov
xchg
inc
out
lods
sub
xchg
add
cmp
loop
mov
popf
or
mov
out
fisubl
loope
fmul
sbb
loope
lahf
flds
mov
and
or
sti
jle
push
hlt
insb
pusha
dec
xor
ja
mov
fistpll
dec
mov
or
gs
inc
scas
sti
jg
sbb
mov
xchg
xchg
lods
add
jge
xchg
xchg
mov
jmp
mov
mov
call
outsb
ds
sbb
mov
ja
dec
arpl
adc
pusha
dec
incb
mov
inc
xor
lock
lock
js
fisubl
add
cmp
in
bound
inc
sub
inc
arpl
xchg
add
adcb
mov
add
push
addr16
sbb
jle
sub
dec
call
in
and
xor
fbstp
jge
std
adc
mov
lods
js
jne
xor
xor
xor
jle
lcall
xchg
ljmp
sbb
rcrb
mov
frstor
fistpll
mov
clc
scas
in
push
loop
mov
mov
inc
xor
pushf
aam
jmp
out
fwait
out
lea
pop
ret
loop
xor
pop
mov
test
popa
push
xchg
or
mov
push
cwtl
movsl
aas
push
in
or
sub
dec
vmovdqa
pop
test
mov
adc
les
sahf
mov
ljmp
cmp
out
fcomps
jle
inc
leave
xor
addr16
xchg
xor
mov
outsb
ficoml
ror
sub
pop
xor
cmp
sahf
mov
test
test
inc
incb
mov
cltd
cmp
daa
jecxz
xchg
xor
iret
stos
sar
cwtl
leave
repnz
sarl
lret
push
mull
push
stos
sbb
jo
mov
and
push
sti
inc
mov
ret
enter
xchg
mov
imul
or
pop
movsl
pushf
or
adc
das
out
ficomps
push
gs
jb
mov
push
sarl
xchg
mov
add
mov
arpl
or
imul
jns
adc
adc
push
ljmp
jp
shrb
dec
jae
jno
in
aad
ja
push
mov
mov
stc
lea
push
add
push
outsb
test
data16
xor
sar
aas
sahf
cmpsl
and
stos
call
or
sub
fucomip
mov
add
cmp
les
ret
clc
sub
sahf
pop
stos
cmc
sub
mov
jp,pt
cmpsb
repz
mov
in
mov
leave
aas
scas
imul
nop
sub
cli
fwait
mov
imul
sbb
cmp
push
xor
pop
sahf
gs
sbbw
xor
mov
loope
xchg
cmpsb
jl
sbb
cmc
jmp
fcom
sbb
jmp
add
loop
cltd
insb
inc
sub
adc
jo
nop
ds
cwtl
stos
pop
mov
lods
sub
insb
sbb
dec
imul
std
xor
ja
popf
xor
jge
stos
lret
loop
sbb
icebp
imul
sarl
adc
ja
sti
add
in
insl
mov
daa
ds
push
pop
int3
nop
ficoml
sahf
mov
mov
into
mov
mov
outsb
cltd
mov
jb
cmp
arpl
test
jnp
in
into
mov
int
add
jp
sti
mov
xchg
shrb
bnd
jae
or
push
ss
cwtl
mov
mov
cli
dec
add
imul
out
jg
add
popf
sub
repz
dec
cmp
mov
cmp
mov
stos
xchg
in
jp
xor
arpl
das
cmp
sub
jno
fsubrp
jnp
mov
aam
push
add
xlat
sbb
dec
push
scas
test
mov
faddp
mov
aad
mov
add
into
iret
sbb
scas
je
mov
pop
fsub
pushl
dec
cmp
inc
in
mov
in
cmp
xchg
fnsave
clc
inc
loop
ss
jnp
repnz
pop
jp
aaa
inc
or
in
jno
add
iret
xchg
rcrl
cmp
ret
push
jg
mov
ljmp
push
push
bound
mulb
push
mov
inc
add
inc
or
xlat
imul
fs
bswap
jecxz
adc
lret
fcmovnu
inc
outsl
mov
adc
in
das
jae
pop
in
fisubrl
mov
arpl
movsl
lds
pop
jmp
test
cmpsb
adc
push
adc
mov
sub
std
mov
outsl
add
insl
int3
or
stos
arpl
and
repnz
sub
sub
movsb
test
inc
pop
addr16
sub
leave
pop
sub
out
jecxz
fnstsw
rorl
pop
icebp
dec
pop
and
pop
out
add
scas
cmpsb
pop
scas
rorb
arpl
sub
inc
xlat
sar
bound
fldl
pop
and
jae
bound
incb
clc
lcall
mov
bound
js
repz
or
dec
test
js
or
imul
out
fwait
outsl
or
mov
push
jl
lock
out
inc
push
lods
test
ds
mov
xchg
pop
aaa
in
sbb
out
jns
mov
scas
mov
fisubs
mov
add
js
mov
test
int3
repnz
ret
daa
sub
fisttpll
inc
insb
cmc
lds
add
in
scas
and
jecxz
mov
mov
mov
jbe
jp
movsb
movsl
inc
flds
sbb
popa
pop
jnp
sub
fstpt
mov
in
push
pop
mov
addb
sar
fs
inc
jae
outsb
repnz
aaa
cltd
aam
pop
in
xchg
cmpsb
cmp
mov
inc
sub
sbb
add
inc
xchg
or
jns
rorl
jmp
mov
shrl
dec
mov
or
cmpsl
jnp
mov
addr16
stos
mov
jg
mov
enter
jle
stc
mov
popa
adc
pop
xchg
pop
push
mov
int3
dec
pop
inc
jmp
test
xchg
add
movsl
sub
mov
adc
sbb
pop
push
cmp
cmc
xchg
lahf
sar
mov
jnp
lahf
cwtl
mov
sub
fcomps
cwtl
push
addl
jmp
test
push
les
cmpsl
popf
xchg
scas
in
aas
dec
psrlw
cmpsb
inc
mov
add
std
out
xchg
push
test
outsl
lahf
stos
lea
add
test
mov
cmp
adc
fmul
add
inc
inc
adc
loop
dec
fisubrs
dec
fldl2t
cmp
sar
mov
leave
cmpsb
imul
repnz
ljmp
adc
out
or
ja
aaa
xchg
iret
mov
movl
js
mov
icebp
jae
xchg
fdivs
sub
scas
cmp
decl
into
std
icebp
mov
mov
loope
shl
bound
jge,pt
xor
clc
adc
sub
cmovo
dec
add
lods
arpl
out
or
shlb
sti
pop
sbb
push
xchg
xor
ret
dec
add
je
inc
mov
push
add
jmp
jne
xor
stc
mov
xchg
outsl
cwtl
in
mov
pop
loop
stc
in
inc
jbe
add
adcl
mov
movsl
xchg
and
inc
cltd
dec
jae
mov
and
and
jno
jnp
pop
test
push
ds
jmp
int3
aam
inc
mov
sub
add
cmpsb
das
loope
iret
mov
es
in
popf
xlat
jo
sub
adc
push
jecxz
fwait
jno,pt
shlb
es
fidivrl
mov
aaa
xchg
xor
shlb
outsb
push
xchg
test
push
arpl
push
cmp
lods
pusha
xor
cmp
add
mov
sub
xchg
negl
adc
pop
nop
push
fimull
mov
jno
jne
inc
hlt
or
add
mov
mov
popf
cmp
imul
pusha
out
cmpsl
pop
loop
test
loop
in
or
xchg
fadds
lds
mov
sub
xor
mov
negb
or
push
cmc
push
loopne
lret
mov
add
dec
fidivrl
sbb
jbe
xchg
add
loop
in
mov
jle
in
mov
adc
cld
and
sbb
xchg
dec
mov
cld
outsb
cmp
or
sub
notb
in
pop
dec
lds
subl
sahf
sub
daa
mov
jge
fldt
mov
mov
jo
repnz
lar
retw
leave
mov
jae
xchg
mov
js
cwtl
inc
xchg
mov
dec
mov
lahf
bound
pop
es
sub
push
movsl
dec
add
ds
mov
test
insb
fisubs
shl
sbb
bound
daa
lds
loopne
xchg
push
stc
mov
xchg
fcmovnb
dec
sbb
and
jno
push
jl
js
dec
push
scas
mov
xchg
ljmp
jo
loope
inc
adcb
add
adc
scas
int3
int3
test
pop
outsl
pusha
or
les
leave
scas
sub
pusha
movsl
insl
mov
add
imul
pop
sbb
push
in
sub
or
mov
dec
movl
lods
daa
pop
sub
xchg
sbb
cli
add
sbb
cmovbe
ret
pop
mov
mov
inc
xlat
lods
outsl
cmc
popa
pushl
add
mov
jle
cli
jle
pushl
cmp
or
inc
test
sahf
pop
xor
pop
sub
hlt
das
enter
and
aad
test
andl
popa
mov
dec
mul
ficoml
jg
lcall
mov
lret
in
jp
xchg
adc
add
inc
push
es
and
cltd
inc
mov
cmp
mov
add
ds
call
add
push
cmc
lret
clc
loope
scas
fnsave
daa
and
nop
and
jo
or
mov
cli
dec
adcb
pusha
jbe
lods
xchg
cld
test
push
inc
mov
ret
bsf
icebp
xor
js
negl
jo
lds
jns
inc
mov
mov
sub
inc
sbb
jb
or
jle
mov
jmp
fisttpll
decb
mov
in
cmpsl
pop
xor
stos
inc
fimuls
inc
xchg
adc
sub
cmp
das
shl
into
shl
orl
lcall
pop
mov
inc
cmc
xlat
negl
sarb
adc
dec
jne
fwait
cli
call
in
pop
sbb
add
ja
xor
lock
clc
mov
add
inc
in
subl
sbb
nop
cmp
pop
lods
push
iret
jmp
xor
mov
adc
sbb
sbb
leave
pusha
pop
ret
mov
addl
adc
or
lock
lods
push
jo
pop
xor
decb
out
jle
pop
jo
shl
std
and
out
push
movsb
xchg
mov
xchg
xchg
push
mov
mov
pop
scas
outsl
gs
sub
or
push
scas
xchg
out
mov
es
fs
inc
mov
inc
cvtps2pi
jge
pop
bnd
je
or
jne
roll
push
push
sahf
mov
sbb
adc
sub
lret
popf
popa
cs
mov
mov
out
xchg
aaa
pushf
leave
dec
sbb
sbb
or
xchg
rcrl
incb
pusha
xchg
add
mov
dec
dec
outsl
out
sub
nop
pop
jne
inc
ljmp
std
push
movsb
sbb
xor
dec
clc
cmpsl
bound
fidivl
mulps
sub
mov
mov
mov
repz
aad
std
push
lods
aam
iret
add
mov
xorl
fistpll
mov
push
jae
sub
dec
lods
push
push
outsl
out
adc
ret
or
mov
lahf
enter
outsb
data16
mov
andb
mov
popa
xchg
push
ds
popa
pop
mov
rcrl
shll
and
mov
lea
notb
cmp
sbb
bound
inc
jmp
jg
mov
mov
mov
test
idivl
data16
pop
cmp
or
data16
sub
js
mov
lock
or
push
and
xchg
and
xchg
rcll
mov
cmp
xor
adc
stc
stos
jo
push
push
dec
loopne
lods
lea
sbb
stos
lahf
stc
scas
hlt
gs
pop
sbb
fbld
push
call
and
lea
lea
iret
sbb
pushf
push
pop
mov
xchg
mov
call
mov
aam
pop
xchg
push
jle
add
and
subl
repz
int
sub
je
mov
inc
jg
adc
push
in
xchg
mov
cmp
jae
push
into
movsl
leave
pop
fcmovu
decb
mov
cld
stos
aad
mov
push
incl
sbb
adc
mov
cmp
sti
add
test
test
ret
test
sub
inc
fistpl
dec
iret
int
dec
jl
pusha
rorl
jns
jb
sbb
iret
imul
movsb
aad
adc
jb
shrl
and
in
pop
push
clc
add
cmpsl
pop
or
or
insl
and
jnp
je
sbb
das
xor
jmp
aam
push
rclb
push
push
ljmp
inc
arpl
mov
push
mov
mov
fldl
inc
cmp
mov
inc
inc
adc
je
mov
adc
insl
shlb
mov
add
cmp
or
test
dec
sbb
fdivs
cmp
add
dec
into
ja
add
sbb
and
in
lods
pop
in
out
inc
test
cmpsb
xchg
cld
sub
inc
rcll
cwtl
xchg
cld
inc
cmp
lcall
mov
dec
fucomi
rcr
repnz
loop
jae
push
scas
fwait
or
pop
das
add
daa
jno
mov
inc
fwait
add
push
mov
insb
sbb
cmpsl
xchg
and
popa
push
push
mov
out
mov
out
stos
outsl
cmc
xchg
je
sbb
fnstenv
loopne
pop
movb
adc
pop
cld
aaa
jg
inc
fnstenv
ror
rorb
xchg
cmp
std
cvtps2pd
jp
mov
sub
sbb
movsb
mov
pop
mov
in
xor
xor
nop
add
jecxz
add
stc
cmc
fwait
jmp
xchg
into
les
jno
ret
outsl
xchg
cld
popa
test
push
cmp
and
repnz
push
dec
pushf
sbb
out
xorb
fistps
icebp
pop
data16
ffree
xchg
cmp
stos
push
fdivl
push
clc
cs
jnp
sub
in
fwait
call
test
add
inc
sbb
scas
xor
mov
int3
lods
sti
push
push
jp
lods
insb
sub
sbb
sbb
sub
or
cli
sarl
mov
movsb
js
nop
gs
mov
lcall
filds
or
cmp
xor
jecxz
mov
mov
jbe
test
jmp
mov
lret
add
mov
aas
test
insl
mov
push
shl
mov
xor
rol
jg
inc
cmp
cwtl
sbb
mov
repz
fisttpl
enter
int3
das
popa
xchg
cmp
sarb
inc
loopne
cld
das
or
and
sahf
lods
jnp
cli
shll
ljmp
test
cmp
mov
fwait
jb
clc
repnz
and
jnp
sub
sub
leave
add
loop
xchg
mov
rcrl
xor
adc
int3
xor
adc
inc
mul
stc
addr16
dec
push
int3
mov
popa
pop
mov
push
sbb
sub
xchg
cwtl
fstl
fcoms
pushf
sub
inc
pushf
movsl
popa
push
int
dec
pop
pusha
xchg
fcompl
test
sbb
adc
or
dec
push
imul
lods
adc
in
pop
xchg
test
dec
push
or
sbb
or
lahf
aad
mov
repz
arpl
jle
adc
adc
fcmovbe
dec
gs
mov
popa
popw
xchg
jl
add
mov
cmpsl
dec
sub
ja
sbb
xchg
pop
push
and
sub
and
sub
mov
addb
pop
sahf
xlat
sbb
xchg
iret
cltd
fucomi
sti
incl
sarb
jmp
js
xchg
or
lods
add
mov
cmp
adc
ja
add
fistpll
loope
in
xchg
xchg
cwtl
or
inc
mov
testb
loop
xor
cmc
bnd
jne
outsb
jns
sti
jmp
jne
cmpsl
dec
adc
roll
je
inc
ja
aas
push
testb
mov
cmc
push
mov
outsb
les
mov
xchg
pop
or
fcomps
add
daa
inc
jae
es
adc
pop
fwait
orl
inc
add
pop
cmpsl
mov
sub
add
lahf
mov
aam
or
pop
sahf
sbb
cmp
stos
shll
push
outsl
repnz
dec
jle
sbb
pop
xor
pop
and
gs
sub
ja
aas
mov
jmp
xchg
mov
dec
sub
mov
push
cmp
or
out
or
rorl
js
push
cmp
jge
test
lods
mov
mov
mov
int
or
push
mov
nop
ss
cmp
outsb
das
dec
jp
adc
daa
dec
lahf
imul
adc
les
jp
cmp
ret
inc
mov
pop
loope
daa
mov
int
movsl
fsubr
stc
das
scas
adc
loopne
sarl
pop
loopne
das
outsl
sbb
sbb
ret
scas
push
lods
insl
add
sub
das
out
jecxz
sbb
fdivl
cmp
pop
fs
or
enter
mov
cld
pop
mov
shrb
cmp
push
in
inc
hlt
pop
ret
lods
push
inc
jl
inc
push
xchg
mov
xor
jo
dec
out
fisttps
lods
mov
lods
pop
jg
dec
std
adc
movsb
iret
ljmp
jnp
push
hlt
and
push
jns
jmp
mov
int3
inc
inc
popa
dec
es
rcrl
sub
in
jb
jo
outsl
out
pop
inc
popf
push
or
xchg
sub
test
clc
sub
aas
fdivrl
dec
sbb
jecxz
jno
xlat
loop
push
es
popf
jns
cwtl
sub
pusha
loope
paddsw
sahf
ss
mov
xor
add
jle
cs
xor
shll
nop
xchg
push
adc
xchg
leave
mov
xlat
ficoms
lahf
int3
xor
mov
testb
adc
out
data16
std
jae
jmp
mov
mov
aad
mov
cmc
mov
pop
lret
sbb
and
inc
ret
lret
outsb
imul
add
ret
out
sub
add
and
insl
inc
adcl
pop
xlat
cli
inc
mov
clc
lods
fistl
sub
fmuls
jns
xor
and
fs
cmp
jo
mov
cmp
or
loop
and
lcall
stos
roll
cmp
adc
int3
imul
aaa
inc
outsb
rorl
jns
out
test
sbb
stos
testb
add
pop
loope
lea
pushl
xchg
orl
sub
es
nop
test
xor
sub
shll
mov
insl
xor
inc
stc
shrl
mov
push
ret
jne
jae
push
xor
jbe
fisttpll
mov
inc
mov
pop
and
push
sbb
arpl
mov
mov
mov
mov
mov
scas
push
push
pop
xor
mov
stc
mov
mov
icebp
add
xor
sti
lock
insb
dec
xor
fnstcw
xor
sub
adc
cld
daa
inc
out
inc
mov
sbb
stos
sbbl
nop
xor
test
mov
mov
mov
insb
sub
mov
xchg
push
movsl
cli
fwait
or
cmpsb
or
movsl
bound
out
iret
ja
pop
mov
sbb
inc
cmp
jnp
dec
aas
cwtl
xor
add
mov
aad
roll
mov
shrb
cltd
and
movsb
pop
inc
fiaddl
subb
pop
sbb
inc
fwait
dec
lock
xor
test
inc
pop
sar
sub
mov
ret
adc
cmp
push
jecxz
jmp
sub
ret
hlt
shrb
lret
incl
int
jo
in
repnz
cmpsb
test
fnstsw
leave
mov
jns
je
int3
cmp
inc
fadd
ret
jno
orb
shl
prefetcht0
fldl
rcrl
sbb
pop
sbbb
and
xabort
testl
mov
ja
mov
dec
mov
jmp
imulw
dec
sbb
inc
mov
pop
mov
mov
cmpsb
push
cltd
decl
lret
stos
fucomip
add
mov
jl
lods
bound
pop
jbe
fs
mov
mov
push
add
aaa
shlb
mov
lcall
jno
adc
repnz
push
mov
adc
xor
adc
or
insb
decl
and
mov
es
jmp
fstpt
fstpl
out
dec
cmp
cmp
or
cmp
inc
lcall
sub
jnp
ret
icebp
push
insb
cmp
mov
fnsave
jne
pop
cmpsb
cmp
lds
test
mov
and
bound
mov
sbb
and
rcr
dec
sub
ret
jmp
loope
lods
enter
iret
cwtl
mov
pop
ret
pop
aaa
xchg
jns
pop
leave
cltd
and
mov
mov
mov
jecxz
ja
out
nop
imul
dec
mov
aaa
fs
jmp
aas
out
and
xorb
mov
mov
shl
rcrl
add
and
and
jge
insb
dec
fwait
mov
and
sbb
cmpsl
mov
mov
scas
stc
out
iret
adc
mov
mov
and
ret
push
shll
das
or
adc
arpl
sub
dec
or
lds
inc
jno
xchg
push
jbe
rcl
bound
mov
in
sbb
enter
fistps
jns
mov
dec
mov
std
sub
stos
jle
mov
sub
mov
call
ficoms
and
xor
insb
enter
push
sbb
jnp
cli
xchg
mov
popa
outsb
inc
mov
jnp
insb
push
dec
pop
movnti
stos
mov
pop
push
sbb
sbbl
jnp
mov
or
out
mov
jno
inc
stos
adc
ret
pop
ljmp
pop
pop
push
jnp
sub
sbb
into
lds
roll
or
or
inc
fisttpl
repnz
add
imul
and
mov
shlb
fcomi
icebp
push
lahf
mov
jmp
jmp
push
test
push
stc
shll
test
in
push
sbb
or
aad
cwtl
jmp
imul
add
add
es
mov
test
dec
jno
add
xacquire
jae
dec
adc
jnp
scas
in
mov
mov
sbb
dec
mov
or
cmpsb
add
fisubrs
gs
dec
and
pop
in
mov
cmp
xor
lods
das
push
popf
call
and
ret
xchg
xorb
cltd
sahf
jge
cs
add
mov
mov
loope
mov
nop
push
cltd
xchg
int
sbb
out
out
out
fidivl
xor
ret
xchg
xchg
jnp
call
sbb
popf
xor
mov
mov
cs
inc
ljmp
mov
test
fnsave
add
stos
mov
push
into
mov
push
lcall
push
mov
sti
push
movsl
lock
loop
jp
push
stos
mov
pusha
in
mov
mov
mov
sub
out
nop
call
pop
push
dec
mov
mov
mov
jbe
mov
les
mov
adc
xchg
es
lods
stc
adc
add
inc
sub
sub
in
dec
push
jbe
cmc
jmp
cmpsl
xchg
add
imul
xchg
push
ss
mov
push
mov
xchg
or
pop
pop
cmpsl
inc
popa
push
mov
xchg
jmp
and
pop
lock
daa
movsb
mov
jne
xchg
add
mov
push
lods
stc
out
pushf
hlt
cmc
inc
pop
fbld
xchg
jne
roll
mov
in
inc
xor
mov
orb
scas
addr16
enter
aaa
adc
mov
mov
or
sub
add
clc
mov
dec
jmp
out
add
dec
arpl
sub
or
cltd
mov
iret
adc
ret
scas
fldenv
sub
arpl
stos
cltd
lret
xor
push
add
idivb
movsl
pusha
cmp
mov
ss
add
shl
fnstcw
in
fucomip
jnp
push
mov
sbb
out
xchg
orl
mov
xchg
push
jl
pop
imul
cli
sub
sbb
lock
sub
dec
ljmp
sub
scas
das
sar
shl
cmp
fstp
mov
ja
mov
push
cmpsb
scas
sbb
cmp
call
mov
inc
rcll
subl
insb
dec
imul
gs
sub
push
push
pop
ret
cmp
daa
gs
jo
adcb
pop
in
lods
lea
xor
jmp
jmp
decl
dec
lret
sbb
lea
les
enter
mov
rol
das
mov
push
adc
push
cmp
into
roll
push
pop
xor
insl
repnz
xchg
push
stos
lock
jns
sub
lea
sub
js
insl
mov
push
mov
or
int
xor
mov
xor
xor
fwait
imul
vpand
popf
in
jmp
mov
dec
mov
xor
add
add
sbb
xchg
mov
sub
or
aas
movsl
sub
add
mov
dec
scas
rclb
push
push
jle
sahf
movsl
mov
or
xchg
popa
notl
sbb
jns
sbbl
and
mov
inc
push
jno
incl
adc
jecxz
mov
std
jecxz
call
jb
outsl
es
loop
add
push
dec
mov
lret
push
aam
ret
imul
out
mov
aas
cwtl
adc
leave
and
mov
mov
mov
mov
mov
xor
xor
jecxz
push
mov
cmp
xchg
sub
xlat
rorb
cmp
and
mov
ret
popf
imul
mov
pushf
and
fistl
and
mov
stc
jmp
mov
je
push
sub
data16
sub
int
push
adc
data16
pusha
notb
aam
lret
jmp
orb
pop
lcall
cmp
mov
and
ljmp
lock
jbe
and
xchg
jmp
jmp
add
and
mov
pop
cmp
icebp
inc
adc
pop
jo
int
pushf
pop
mov
inc
push
fwait
add
sub
pop
enter
ss
loope
mov
rcrb
mov
pop
jne
or
sub
xchg
enter
mov
inc
mov
or
sbb
subb
pushl
sbb
out
lock
icebp
add
add
loop
jb
cli
daa
or
jae
ss
scas
jo
aaa
out
lods
cmpsl
mov
lcall
jns
popa
out
push
xchg
inc
add
xor
dec
cwtl
jmp
cmc
gs
mov
and
push
jb
jmp
jmp
addr16
je
cmp
mov
dec
push
subl
pop
add
loop
pop
int
int3
mov
int
lock
pop
inc
decl
popf
sbb
jp
jb
dec
aas
jle
jbe
adc
cmp
jno
and
lea
aaa
jo
pop
testl
loop
xchg
sti
lods
adc
les
push
mov
jmp
mov
cmp
xor
arpl
mov
invd
push
xchg
or
repz
aad
cmp
add
push
jmp
mov
xor
or
test
xor
test
pushf
addl
inc
in
xchg
add
cmp
xor
shl
sub
lds
jnp
ja
ret
inc
pop
or
mov
cmp
shll
inc
mov
fnstenv
movsl
inc
pusha
loopne
mov
and
jp
xor
pop
mov
cltd
adc
adc
dec
jb
jae
sti
lea
insb
jo
push
ret
mov
jg
rolb
inc
xchg
lret
fisubrs
or
lcall
push
popf
or
ret
stos
int3
or
not
int3
xchg
ficoml
cmpsb
push
xchg
push
testl
dec
mov
sbb
mov
jb
call
inc
ss
inc
add
inc
sbb
xor
iret
mov
inc
dec
out
xor
jp
sub
jge
js
cli
mov
arpl
arpl
adc
subl
lods
roll
xchg
jle
push
out
or
xchg
add
cmp
aas
das
sbb
test
in
clc
and
movsb
pop
rorl
int
shll
stos
xor
xchg
scas
call
mov
push
das
mov
and
lods
push
and
sahf
sbb
lods
push
push
xchg
fisubl
mov
sarl
daa
adc
lds
pushl
cli
outsb
cmp
leave
repnz
vunpcklpd
push
sbb
sub
repnz
mov
std
outsl
movl
fisubs
je
movsl
sbb
sbb
jl
leave
dec
int3
jge
pop
adc
adc
sbb
mov
mov
incl
aas
das
outsl
ret
test
lret
fcmovnu
push
sub
mov
adc
lods
mov
dec
arpl
mov
stos
ljmp
movsb
xchg
aad
cmp
pop
or
addb
int3
push
fildll
or
stos
add
push
shlb
jnp
hlt
and
sub
out
pushf
or
sub
in
outsl
pop
xor
push
std
jnp
cmpsb
aam
call
or
mov
jg
xchg
test
dec
lea
xchg
jge
xchg
push
inc
stos
xchg
dec
push
movsb
pushf
or
jbe
lods
sub
push
sub
insb
jo
outsb
test
addr16
mov
iret
mov
cmp
push
call
aas
scas
rcrb
add
and
test
jp
xlat
pusha
push
mov
xchg
fs
lahf
int3
and
in
and
mov
cmp
fnstsw
push
sbb
rcrb
add
mov
push
icebp
int3
or
sti
push
outsb
loopw
add
cli
bound
rclb
imul
and
adc
fists
or
sbb
aam
dec
movsl
pop
add
lcall
sahf
cli
mov
mov
test
xor
loopne
ret
inc
or
push
int
inc
mov
and
push
cmpsb
or
adc
mov
daa
movsb
dec
sub
mov
popa
mov
outsl
fs
out
leave
data16
and
jmp
in
insb
sbb
xor
out
adc
or
mov
dec
rcll
out
je
insb
insb
xchg
scas
cmpsb
cmp
sub
pusha
push
and
sub
xchg
xchg
cmpsl
iret
insb
xchg
pushf
xchg
inc
nop
addl
fmul
sub
and
in
mov
movsb
xor
daa
jle
lcall
cmpsb
bound
push
enter
inc
jmp
pop
xchg
mov
and
cmpsb
mov
xor
cmc
cs
ja
std
push
mov
lods
clc
jnp
test
stos
test
les
imul
mov
bound
addr16
mov
std
in
mov
pop
ss
and
jle
push
sbbb
ret
sbb
in
iret
adc
movb
push
push
cltd
and
loop
inc
add
push
sarb
or
xchg
push
adc
mov
xchg
cltd
sub
shrb
push
shlb
dec
adc
mov
push
mov
ret
sbb
lcall
in
sub
ds
ja
add
pop
mov
pop
jb
hlt
scas
mov
sub
mul
mov
pop
sbb
icebp
ret
lahf
cmp
mov
std
shl
nop
sbb
mov
icebp
cwtl
int
dec
jge
sbb
ret
pop
mov
aad
lcall
push
leave
orb
or
jmp
clc
dec
leave
lods
mov
cmpsl
sarb
idivb
rcrl
sti
push
out
in
add
repnz
mov
cs
les
push
outsb
loopne
aaa
int3
push
mov
xor
pop
or
addr16
cmp
cmp
push
sarb
sub
mov
test
jns
out
inc
sbb
les
inc
shlb
sar
or
stos
cmp
shll
add
dec
cwtl
mov
hlt
xchg
mov
fdivr
add
mov
mov
in
in
ret
pop
mov
pop
sbb
fsubrs
scas
lcall
sti
stc
add
call
cs
or
test
js
enter
bound
icebp
push
imul
cmp
or
hlt
mov
jle
jo
pop
js
xor
in
cwtl
imul
push
fsubrp
pop
daa
pop
push
adc
cmp
pusha
cli
jg
add
std
pop
push
insb
sbb
inc
out
or
cwtl
jo
adc
notb
mov
repnz
es
mov
sbb
fcoml
in
push
mov
sbbb
pop
add
int3
inc
xchg
and
icebp
mov
aaa
les
xor
orl
pop
les
aad
push
mov
jmp
nop
jae
push
int
xor
or
mul
mov
jecxz
or
out
orb
stos
or
mov
mov
dec
dec
lock
shr
lret
movsb
int3
popf
pusha
inc
adc
xor
sti
out
and
mov
nop
into
andps
jbe
jne
fwait
push
arpl
bound
in
push
aam
xor
notl
inc
inc
sub
jl
dec
cmpsl
bound
ja
jge
call
sbb
mov
jle
push
bnd
aas
mov
and
test
push
mov
das
push
add
jg
in
inc
mov
inc
lea
pop
inc
mov
stos
stos
lret
sub
lcall
loope
sbb
cmp
inc
jb
jge
scas
outsb
ss
add
mov
sti
dec
sti
push
fstps
into
add
add
or
cmpsb
inc
sub
cld
xor
or
cmp
xchg
adc
cmp
call
adc
jge
movb
mov
mov
cmpsl
inc
ljmp
add
push
outsl
scas
sti
out
inc
lea
out
pop
lea
fnsave
dec
in
pop
pop
sub
jle
imul
test
adc
pop
and
ret
xor
and
xchg
pop
push
sub
ror
loopne
push
lods
and
push
mov
or
sbb
pop
xchg
je
adc
leave
inc
mov
cmp
scas
aad
add
sub
jns
cmpsb
push
pop
and
xor
stos
fsubrl
cli
cld
shll
mov
arpl
loop
push
adc
hlt
and
enter
and
outsl
movsl
jae
aad
and
mov
out
dec
cmpsl
add
jmp
bswap
cltd
mov
add
ds
mov
jno
int
jnp
leave
or
mov
cmp
ret
dec
inc
dec
or
roll
sub
addr16
mov
inc
inc
div
mov
loope
mov
xchg
pusha
jl
jl
jno
jbe
in
jmp
popa
sbb
hlt
cli
and
lods
jmp
cltd
add
addb
xchg
mov
adcb
add
or
ljmp
mov
ret
lods
jmp
add
or
dec
or
add
jae
add
adc
jne
loopne
test
xor
mov
stos
adc
xchg
and
repnz
xor
push
scas
mov
add
adcb
jmp
xchg
daa
inc
cltd
jle
rolb
idiv
cwtl
cwtl
inc
aad
icebp
jmp
loope
inc
das
rorl
fstpl
or
jne
aas
cmp
dec
push
arpl
insb
scas
repnz
adc
fadds
cltd
push
sub
daa
js
mov
sarb
inc
fists
in
shll
gs
dec
and
xor
fs
pop
cmp
mov
xchg
xor
pusha
mov
es
into
insl
xchg
xchg
sub
jmp
mov
adc
lret
add
cli
sbb
fmull
rcr
jecxz
adc
add
jge
jns
add
adc
adc
std
sbb
xor
cmp
mov
cmp
inc
repnz
xchg
xor
fstp
mov
or
xor
ficomps
clc
iret
rorl
cmp
je
push
mov
addl
mov
dec
loop
xchg
push
mov
cmp
mov
imul
gs
add
ja
mov
pop
sbb
mov
fsubl
imul
push
inc
ljmp
ficompl
jne
jnp
fdivl
xor
dec
gs
mov
xchg
ljmp
jb
imul
nop
call
sbb
pop
push
scas
xchg
ficoms
aas
jmp
cmp
jl
jle
lods
int3
in
int
jge
sbb
stos
aaa
xchg
and
pop
add
bound
bound
sub
mov
dec
xor
push
jae
and
sbb
sysexit
dec
sub
loopne
movsl
jp
jle
data16
mul
jnp
jmp
xor
or
dec
icebp
push
pop
sbb
push
fldenv
in
fcomip
xchg
loope
mov
jbe
cmpsl
out
push
inc
sahf
dec
dec
or
pop
push
lds
out
mov
pop
cmpsl
mov
jecxz
out
out
push
inc
inc
outsl
push
adc
data16
mov
fadds
mov
lds
ljmp
add
test
cwtl
aam
ljmp
lret
inc
push
scas
push
in
int3
shl
dec
adc
adcb
jp
int
in
sar
scas
xor
sub
xchg
pop
rclb
sub
push
jecxz
leave
push
stc
jae
addr16
packssdw
lock
imul
lret
imul
dec
ja
ss
mov
sbb
xor
leave
and
xor
bound
jb
std
iret
ficoml
scas
nop
popa
adc
call
mov
ds
cmp
or
hlt
or
xchg
into
cmpsl
jae
sbb
cli
das
xchg
rcrl
out
in
pushl
xchg
loop
xlat
add
in
sti
mov
xor
idivb
jp
mov
mov
add
dec
lret
lahf
inc
iret
sub
leave
inc
or
ret
sbb
xchg
xchg
rol
call
dec
sbb
cmp
lret
mov
adcb
jge
aad
xlat
leave
pop
inc
lret
push
xchg
stos
and
ficompl
in
push
cmc
sbb
and
dec
out
xchg
mov
cli
and
mov
sub
jnp
pusha
pop
shlb
test
movsl
std
jb
mov
idivl
adc
dec
add
das
je
dec
xor
pop
cli
hlt
jo
stos
sbb
cmp
mov
je
cmpl
adc
or
mov
mov
add
movd
loop
and
mov
fwait
pop
leave
dec
rcrb
push
sub
adc
rorb
pop
sub
repnz
scas
jb
inc
sub
xor
adc
push
xchg
adc
cmpsb
and
test
aam
or
dec
or
adc
mov
je
or
or
jb
or
pushf
shll
push
stc
inc
ret
adc
daa
jb
lods
xor
sti
jp
xchg
cmp
cmpl
xor
out
idiv
inc
pop
movsb
lcall
repz
and
cmp
fidivl
movsb
sub
sub
xor
cmp
orb
or
lds
xchg
dec
mov
jle
xchg
jno
lock
je
hlt
lret
pop
lods
icebp
int
xor
leave
xor
lcall
and
xchg
add
les
adc
bound
shl
inc
fsubrl
mov
mov
inc
jae
jmp
mov
in
cmp
shll
testb
pushf
shll
sub
xchg
sbb
add
insb
loope
stos
clc
lcall
sub
inc
mov
mov
jns
fldcw
push
jns
jne
imull
test
xchg
lret
sub
lret
jp
add
imul
call
test
sar
xchg
fldenv
or
xchg
fildl
sahf
mov
and
in
mov
dec
orl
or
add
mov
push
lods
shlb
jmp
fldenv
arpl
sub
movsl
es
sbb
cmp
add
mov
popf
cmp
adc
dec
cs
repnz
ss
xor
cmp
imul
cmpsl
dec
push
mov
jne
xor
into
jno
jecxz
xchg
fchs
push
ret
sub
cmpsl
mov
pop
nop
cmp
andb
lcall
imul
pop
dec
fidivs
movsb
fwait
push
xlat
lock
dec
sub
out
mov
mov
leave
stc
dec
sti
mov
xor
aaa
outsl
mov
jle
inc
pop
jnp
inc
jecxz
pop
daa
fistps
or
gs
mov
bound
xor
aas
mov
add
pop
adc
leave
jg
leave
sub
incl
mov
loop
xor
ss
sbb
mov
xor
aas
push
and
notb
push
je
cmp
inc
mov
cltd
ljmp
or
clc
xchg
pop
sub
push
pop
jle
movsl
fbld
or
outsl
loope
xchg
in
cld
stc
mov
testl
push
mov
xor
sub
mov
push
dec
sub
scas
insl
pop
adc
dec
mov
inc
sub
or
jne
inc
sbb
cs
jp
std
jae
loope
test
ss
imul
cmp
push
out
aam
nop
fs
stc
fldl
aaa
pop
xchg
in
inc
mov
ljmp
out
testl
out
fnsave
bound
lahf
adc
or
sti
sbb
adc
call
test
sub
and
scas
cmp
xchg
inc
aaa
pusha
movsl
fdivrl
or
jmp
repnz
xchg
cmpsb
popa
ds
outsb
sti
xchg
mov
mov
in
hlt
or
jle
mov
inc
icebp
int
fdivrs
aad
or
sub
adc
repz
and
sti
cli
jge
in
cli
lret
jbe
imul
sahf
incl
jo
dec
sbb
xchg
push
lods
fsub
sbb
mov
rol
inc
pop
add
mov
lock
bound
mov
adc
inc
shll
push
dec
imul
int3
in
sarl
repnz
cmc
imul
jg
adc
xchg
std
out
loopne
jnp,pn
jmp
das
repz
cmpsl
and
outsb
xchg
fcmovnbe
cmc
inc
sbb
cmp
shlb
adc
daa
addr16
ja
lahf
jmp
and
cmp
jno
and
cmp
jp
mov
shlb
mov
sbb
out
cld
push
cmp
push
lods
mov
pop
nop
and
daa
cmp
mov
fbld
test
add
ja
ds
push
aaa
testl
xor
jb
roll
mov
cli
cmpsl
sbb
fistps
mov
cmp
out
loope
xor
xchg
bound
and
addr16
jmp
int
dec
add
int3
jbe
mov
push
mov
jge
test
jb
dec
mov
add
mov
add
sbb
jge
push
scas
sbb
pop
pop
aad
jo
stos
add
jne
cmp
outsl
sahf
mov
insb
int
mov
cmp
stc
test
push
xchg
mov
cmp
push
mov
jp
or
xor
lret
mov
sub
cmp
repnz
pop
add
and
ret
mov
sub
push
ficomps
pop
addb
add
dec
xor
inc
and
scas
cltd
push
sbb
aam
pop
mov
negl
loop
movsb
add
mov
repnz
mov
mov
jb
add
imul
dec
cmp
jge
aam
and
mov
adc
mov
push
mov
xor
mov
push
and
bound
add
jbe
jo
add
push
jl
lock
out
loope
mov
mov
aad
pop
cmc
adc
repnz
decl
ja
icebp
mov
adc
add
xchg
mov
divl
testb
int
lahf
cmc
in
loop
dec
xchg
imul
add
cltd
jae
mov
sahf
loopne
push
lea
xor
clc
sbb
mov
fnstcw
jge
dec
cmp
ret
push
arpl
xchg
sub
push
dec
cmp
jb
test
js
movsl
mov
enter
dec
in
cld
mov
lcall
mov
push
adc
daa
nop
dec
cwtl
aam
psubd
adc
push
incl
loope
push
mov
sbb
pop
pop
pop
scas
sbb
xor
ficoms
dec
movsl
popa
sbb
shll
push
push
push
data16
xor
push
jmp
xchg
jp
gs
ss
aad
add
mov
xor
je
cmp
sub
mov
test
andb
cpuid
mulb
adc
test
fcmovne
or
push
inc
lret
adc
gs
shrb
or
hlt
movsb
push
mov
mov
xor
push
mov
insl
fistpl
jp
add
call
sub
inc
lods
lahf
and
jbe
sub
cmp
pushf
mov
adc
pop
adc
and
add
xor
jo
movsb
push
mov
mov
and
cmp
stos
mov
pop
mov
aaa
scas
sti
adc
es
data16
xchg
pop
xor
mov
push
push
push
repnz
xor
pop
xor
xlat
test
mov
inc
add
sub
out
adc
lcall
daa
pop
sbb
xor
bound
daa
in
jg
cmc
jge
jbe
mov
mov
fs
jo
icebp
mov
mov
pop
out
sbb
shll
test
jmp
das
cmp
adc
inc
cmpsb
sar
xor
pop
mov
ret
sbbb
int
dec
or
sub
js
sub
les
xchg
xchg
es
mov
jae
ret
jecxz
xor
jno
mov
push
xchg
push
jmp
sbb
daa
jo
clc
hlt
int3
cs
addl
test
cmc
mov
lods
sub
dec
inc
out
repz
aas
imul
push
mov
clc
mov
in
int
lahf
cmp
fs
xchg
push
cli
ret
mov
jle
adc
jb
sub
cmpsl
pop
inc
imul
pop
jg
pop
negl
pushf
pop
jge
sbb
repz
mov
pusha
inc
jnp
mov
cwtl
sub
xchg
push
inc
push
jbe
mov
mov
test
frstor
popa
movsb
stos
in
inc
mov
pop
jne
mov
inc
add
aaa
jbe
lea
and
outsl
xchg
pushf
lods
test
or
cmp
or
push
push
dec
bnd
aam
sbb
xorb
lret
ds
pop
dec
push
inc
push
and
mov
ss
nop
mov
imul
das
cmp
aaa
ret
fisttps
or
cs
aam
ljmp
cwtl
mov
dec
movsl
dec
daa
fsub
xchg
in
fsubs
ret
cmp
xchg
loopne
int3
push
in
in
in
pop
sbb
mov
leave
xchg
ret
xor
out
mov
or
inc
mov
pop
out
aaa
mov
cmpb
cmp
xlat
or
imul
sub
insl
shlb
add
push
and
lods
inc
mov
lahf
dec
sahf
icebp
or
push
leave
push
test
clc
inc
mov
mov
inc
and
lea
lods
mov
inc
sub
fldt
hlt
mov
or
call
jmp
decb
shrl
push
add
int
pop
cltd
push
in
cmp
in
inc
pop
lahf
es
and
sbb
pop
xchg
js
stos
enter
arpl
rcrl
repnz
cmp
ror
push
lea
mov
sbb
inc
sbb
jne
xorb
fdivrs
and
mov
push
addl
sbb
push
and
pop
pause
std
sti
sbb
inc
dec
imul
mov
data16
push
mov
push
cmp
and
ds
lret
dec
cmp
cmpsl
mov
mov
cwtl
lret
inc
daa
cwtl
enter
jnp
idivl
icebp
dec
dec
sub
or
ds
pop
push
lret
arpl
rol
jns
pop
rcrl
jno
aam
mov
jo
dec
xor
add
push
mov
arpl
out
lock
push
or
lock
jecxz
adcb
enter
and
xor
cli
cs
out
mov
pop
cli
pushw
sbb
inc
dec
das
mov
add
stos
aas
pop
out
mov
sub
div
mov
push
test
jmp
or
inc
sub
daa
jmp
or
into
stos
xchg
xor
movsb
cmpsl
and
popa
jne
ret
rclb
insb
scas
mov
rcr
daa
sbb
push
int3
movsl
ja
out
adc
xor
subb
ret
int
cli
lea
gs
xor
aas
subb
mov
arpl
out
add
cwtl
pusha
icebp
mov
sub
fbld
dec
inc
pushf
lcall
scas
dec
orb
inc
adc
inc
in
jl
xchg
mov
jae
xchg
push
push
imul
sub
mov
jns
or
test
mov
jb
movl
add
dec
xchg
dec
push
in
aam
pusha
cmp
fsubrs
adc
adc
ret
in
inc
shl
ret
pop
repnz
jo
mov
std
sbb
sub
push
das
callw
jno
lods
pop
mov
adc
dec
and
cwtl
in
mov
mov
ljmp
xchg
mov
outsb
mov
jge
in
add
movl
push
loop
stos
in
sub
xchg
movsb
xor
clc
dec
or
orl
lock
inc
jge
call
add
rorb
fs
and
es
jg
shrb
dec
push
pusha
insb
ficoml
inc
push
insl
xchg
adc
bound
das
into
xor
jno
sbb
pusha
sbb
int
ljmp
cli
xor
inc
jmp
jp
mov
repz
and
adc
add
pop
xor
push
jl
mov
jle
cmp
daa
dec
in
inc
sub
fldt
nop
adc
and
add
outsl
xchg
xchg
xchg
aas
mov
int3
push
dec
push
mov
sbb
jns
or
clc
pop
addr16
loopne
adc
inc
cmp
inc
mov
rolb
xchg
push
add
ret
repz
push
pop
jmp
mov
cmp
jae
jge
and
into
stos
incb
loope
or
dec
pop
sar
das
outsb
mov
add
mov
inc
add
divb
jle
fstp
testb
ret
andl
rcll
std
pop
or
dec
xchg
cld
std
pop
add
ud1
leave
leave
dec
ljmp
adc
repz
insb
jmp
je
add
add
nop
icebp
pop
mov
xchg
shl
push
or
jecxz
adc
daa
cmp
cmpsl
lcall
push
dec
cli
insb
mov
mov
arpl
aad
mov
test
fisttpl
or
jmp
dec
cmp
mov
pop
in
push
outsb
loopne
cmp
aad
mov
lods
pusha
fs
rclb
sbb
into
dec
sbb
sbb
jne
loopne
xchg
cmp
ror
mov
xor
cmpsb
push
sub
mov
add
push
or
icebp
dec
xchg
mov
jp
aam
popl
mov
icebp
xchg
xchg
popa
test
mov
rclb
jo
movsl
sbbl
jae
mov
push
flds
insl
hlt
iret
cmp
cmc
arpl
mov
int3
push
add
pop
pop
mov
xchg
mov
arpl
or
inc
inc
add
adc
out
out
mov
aaa
sbb
cmp
push
jne
aas
sbb
jae
and
inc
push
lods
ret
mov
xchg
mov
dec
add
and
inc
call
mov
inc
es
jbe
movsb
dec
sbb
sbb
dec
sub
cmp
xchg
push
lahf
sub
sub
pop
fucomp
rcl
xchg
sahf
fstl
inc
push
rorb
les
push
sbb
dec
movl
outsl
lcall
test
in
add
xchg
fs
sti
bnd
aaa
insb
lcall
ss
cmc
movb
mov
push
sarl
fldl
and
sbb
xor
pop
rorl
jae
lcall
repnz
test
pop
xor
dec
imul
mov
xchg
sbb
mov
jns
outsl
mov
mov
test
sub
aas
sbb
out
je
fisubrs
jge
push
push
sub
adc
jno
ffree
shrb
shll
jle
pop
jge
fnstcw
jnp
sbb
sbb
cmp
js
dec
dec
sbb
adc
ffree
or
mov
inc
nop
je
scas
mov
lcall
mov
neg
mov
je
pushf
jbe
imul
fisttpll
fmulp
lea
jo
repnz
adc
xor
test
daa
mov
and
leave
dec
aam
push
fimuls
push
outsl
leave
cmp
imul
xor
xor
in
ret
jg
fidivrl
repnz
out
mov
jnp,pn
jmp
imul
repz
shlb
test
movb
mov
pop
push
stos
dec
cltd
stos
lret
xchg
push
and
arpl
arpl
adc
xchg
popf
ss
xchg
loop
fsub
push
into
dec
push
sbb
or
mov
mov
adc
jbe
cmpsl
sbb
inc
loopne
mov
jl
call
mov
daa
ret
jmp
lcall
repnz
push
or
mov
jb
inc
imul
pop
inc
lret
lds
mov
ret
xchg
dec
sub
jnp
imul
sub
sbb
pop
inc
imul
mov
push
pop
call
cmpsl
fisubrl
or
scas
sbb
inc
adcl
add
in
insb
sarl
pop
lods
jl
insl
xchg
insb
adc
ss
sub
fs
jb
xchg
sbb
outsb
push
stos
test
sub
mov
xor
xchg
inc
sub
jp
data16
jl
rorl
daa
div
test
repnz
inc
cmpsl
inc
mov
mov
es
fdivl
or
call
and
arpl
jae
add
cmp
sub
dec
xor
xor
insb
stc
std
sbb
xchg
dec
into
data16
aas
hlt
push
int3
stos
aad
push
mov
jne
push
mov
mov
sti
pop
adc
inc
cmc
jg
cmp
iret
imul
std
rcll
mov
sbb
push
pmulhw
xchg
sbb
push
dec
push
dec
cwtl
xor
jae
mov
lahf
and
mov
inc
jno
fidivrs
pop
adc
cmc
sbb
clc
push
or
aas
pop
adc
subl
add
inc
adc
ret
adc
call
mov
mov
jb
jg
adc
mov
std
push
stos
xor
push
mov
mov
or
dec
repz
cmp
rorl
insb
pop
adc
mov
sbb
or
adc
lahf
cli
push
shrb
xchg
mov
and
push
push
in
dec
int
test
push
push
daa
inc
aas
insl
jo
jp
pop
mov
pop
je
xor
stos
aam
xchg
mov
das
je
adc
cli
xor
mov
rcl
cmpsb
xor
add
jae
jge
filds
mov
repnz
pop
pop
inc
inc
lds
insb
xor
push
or
loop
jne
ret
push
inc
pop
xchg
pushf
add
fstps
shrl
and
mov
mull
loopne
add
dec
cmpb
mov
mov
sub
push
push
lods
leave
jb
stos
pandn
push
or
mov
call
dec
dec
and
insl
test
push
jb
fs
popa
daa
dec
icebp
cmpsb
pop
les
aam
lahf
sbb
dec
xchg
xor
sahf
cltd
mov
push
arpl
lea
fidivs
ret
and
js
lds
pop
movb
cmp
outsl
cmpsl
mov
sahf
imul
out
mov
inc
dec
cmovae
aas
andl
sti
lods
movsl
stc
pop
xor
mov
jl
push
fadd
xor
xor
mov
sbb
imul
fldt
dec
pushf
push
js
repnz
push
xchg
lret
popa
fnsave
adc
enter
add
cmp
xor
in
cmp
sti
inc
sti
rolb
pop
test
mov
sub
pop
jg
jge
insb
loope
jecxz
mov
es
shr
fucomi
aas
pop
xchg
push
neg
bt
jnp
mov
scas
les
out
or
cs
loopne
mov
lcall
mov
mov
mov
cmpsl
cli
dec
jno
jmp
stc
dec
sub
jg
xor
cmp
filds
and
push
pop
cs
jg
cs
pop
jle
pop
gs
xchg
and
pop
mov
pop
cmp
mov
stos
cmp
adc
sub
cmp
adc
sub
jo
push
inc
sti
scas
ficompl
clc
aad
fistl
sub
je
pop
adc
push
dec
cmpsl
iret
inc
mov
inc
negb
in
mov
mov
call
inc
dec
dec
insl
mov
gs
orl
lret
dec
fsts
fstpl
cmp
and
inc
fsubs
ljmp
out
inc
loopne
mov
pop
cmpsb
out
imul
jno
and
ja
jae
ss
stos
cmpsl
lods
leave
dec
movsl
scas
movsl
out
gs
push
xchg
enter
lods
cmp
pushf
sub
xchg
inc
rcrb
add
mov
jbe
jg
cli
pop
add
leave
repnz
pop
js
dec
add
mov
sbb
or
jns
xor
test
push
pop
imul
loopne
mov
fwait
jp
cmpsl
mov
mov
sbb
cmpsl
sub
and
mov
inc
adc
xchg
sub
mov
cmpsl
cli
cmp
push
cld
and
push
fdivr
pslld
cmpsb
or
in
adc
and
scas
xchg
mov
bswap
ds
adc
sbb
mov
popf
leave
push
fdivrs
fwait
push
push
mov
sbb
jbe
jbe
lds
inc
pop
xor
cld
xchg
jo
mov
sarl
sub
stos
push
outsl
jp
stos
pusha
jae
adc
dec
pushf
mov
cmpsb
mov
push
push
mov
dec
adc
repnz
push
cwtl
fistps
aaa
bound
adc
fisubrl
adc
add
or
push
jns
data16
ljmp
and
or
fadds
dec
das
call
imul
dec
rolb
fwait
les
in
shr
enter
push
xchg
hlt
fs
sub
mov
adc
jbe
xor
fstl
popa
mov
mov
cmpsb
lock
cmp
shll
or
dec
sbb
xchg
inc
test
adc
aam
xchg
cmp
push
jne
adc
test
leave
xchg
lea
cmp
popf
pop
fs
jb
rcrb
in
sub
push
sbb
mov
test
std
scas
sub
cmp
sub
sub
cmp
or
xor
icebp
mov
out
rcrb
push
cmp
jb
sub
shl
mov
or
fiadds
ss
gs
pusha
mov
xlat
and
negl
daa
fimull
xchg
and
or
cld
lods
test
mov
inc
jno
lods
or
cmpsb
xor
mov
decl
popa
int3
test
loop
jnp
fisttpll
fnsave
aam
mov
stos
mov
daa
test
jnp
inc
pop
adc
imul
lea
loop
ss
dec
in
push
insl
mov
fwait
xchg
adc
scas
out
pop
lea
pop
call
push
es
fisttps
fld
int3
mov
fists
or
dec
pop
int3
mov
in
mov
dec
ret
jnp
fisubs
shrb
inc
imul
and
je
ljmp
out
lods
int
or
cmpsl
push
sub
dec
push
fadds
and
mov
pminub
cwtl
popa
or
add
imul
mov
stc
inc
mov
pop
cmpsb
cmp
stos
sub
jo
aad
xlat
push
popf
cld
movsb
jl
pusha
ror
enter
jne
push
sti
xchg
add
xchg
cmp
add
cmp
dec
add
jnp
outsb
mov
adc
xchg
addb
jmp
xchg
mov
xchg
mov
xor
mov
mov
cmp
sarb
ficomps
inc
fstps
inc
outsl
test
push
jns
inc
jl
cmp
daa
and
stos
mov
dec
push
popa
pop
jmp
mov
loopne
out
xchg
mov
daa
pop
in
inc
or
test
test
call
inc
jb
fwait
dec
mov
lea
repz
aas
fwait
adc
pop
inc
adc
aad
jge
fimull
pop
lods
and
js
cld
repz
jecxz
xchg
cs
adc
lods
sub
pop
sbb
inc
dec
inc
mov
mov
leave
push
movsl
imul
adc
ret
jns
rcrb
stos
pop
xor
sbb
adc
adc
add
sub
add
scas
movsl
mov
scas
ja
fidivl
bound
xorb
faddp
push
push
add
sub
jp
movsb
test
mov
rol
mov
lock
ret
push
push
test
pop
outsl
insl
lock
push
sbb
ret
sub
mov
rcl
sub
addr16
jnp
mov
xor
cmc
add
ret
mov
jp
pop
cmp
sbb
mov
scas
mov
xchg
xchg
nop
lcall
jb
sti
mov
pop
cs
push
stc
sub
ret
cmpsb
mov
leave
clc
scas
in
add
xor
sbb
mov
mov
cmpb
push
lcall
jno
mov
xchg
xlat
mov
jb
sbb
aas
push
inc
sbb
arpl
xchg
jb
iret
add
aas
jb
mov
sub
and
call
inc
testb
mov
scas
es
push
sub
add
xchg
xor
std
adc
dec
fldcw
push
jecxz
mov
inc
jecxz
jp
push
mov
lds
aam
inc
xchg
dec
xor
mov
jae
cmp
cmpsl
out
enter
xchg
pop
fbstp
mov
inc
arpl
in
sub
pop
sub
es
push
pop
popf
sub
lods
and
dec
addr16
jns
cltd
push
scas
in
jae
push
jl
insb
inc
fcmovu
and
mov
jne
cs
or
push
inc
mov
shr
aaa
out
add
push
xchg
adc
incl
jb
mov
aas
add
add
es
jl
ds
add
stos
mov
cltd
dec
xchg
push
pusha
or
in
pop
repnz
jecxz,pn
dec
sub
xor
out
push
sub
test
sbb
mov
lds
mov
dec
mov
cli
sbb
aam
push
jp
push
xchg
in
pop
push
std
jbe
loop
push
shl
mov
cld
xor
test
iret
jo
jge
mov
cmc
or
xor
shr
jge
pop
lcall
xchg
adc
push
mov
inc
movlhps
push
lret
xlat
nop
pop
cmp
or
mov
push
lods
add
popl
mov
in
pop
push
ficompl
testl
gs
jno
jg
xchg
jg
ja
mov
mov
and
jmp
cmp
test
das
dec
or
cld
inc
jae
out
or
dec
in
mov
push
cltd
sarb
lahf
pop
bound
adc
or
jl
mov
fisttpl
imul
sub
outsb
mov
cmpsb
jbe
ret
mov
cmp
int
pop
pop
mov
popf
sub
nop
jge
sbb
stos
jg
adc
push
aaa
pop
dec
adc
mov
test
pop
movsl
mov
aaa
ficomps
cmp
outsb
enter
xchg
mov
lods
sahf
divl
lds
sbb
divb
add
push
cmp
pop
push
xlat
ret
cld
std
std
enter
lods
pop
out
cmp
jbe
add
cmpsb
xlat
ss
rcl
or
ljmp
ja
bound
adc
mov
mov
add
and
addb
lret
dec
pop
inc
xor
outsl
cmp
iret
mov
filds
loope
inc
push
sti
in
add
js
add
xchg
dec
dec
andb
stc
push
shrb
push
add
push
jns
test
lcall
xor
dec
xadd
in
mov
ja
sbb
pop
add
inc
iret
stos
fidivs
stc
dec
add
or
sbb
lahf
or
mov
jmp
push
in
cmp
xor
js
or
loope
push
scas
or
cwtl
mov
pop
pop
stos
call
adc
inc
insb
mov
shlb
inc
mov
out
popa
cmp
lds
push
mov
int
lock
mov
shr
aas
push
and
xchg
pusha
ss
arpl
push
mov
pop
pop
pop
jae
sbb
mov
fwait
out
mov
push
enter
cmp
mov
pop
cmpsl
jb
mov
imulb
ljmp
dec
mov
mov
pop
pop
lea
pop
pusha
mov
aaa
mov
test
repnz
push
test
adcl
jmp
jle
mov
ret
mov
rol
mov
jp
movsb
adc
and
sbb
insb
aas
shrl
iret
push
stos
sbb
sub
shl
rclb
jns
mov
xor
mov
divl
push
xor
xor
pushf
daa
pop
cltd
test
dec
add
lcall
jne
push
rorl
or
sbb
pop
lahf
addr16
push
inc
and
into
xchg
or
popf
je
mov
add
cld
mov
add
leave
sub
push
cmp
dec
arpl
pushf
lret
aas
rorb
in
stos
or
pop
jns
jle
and
jb
shll
cwtl
xor
and
xor
pop
nop
repz
scas
dec
repz
cli
movl
jg
jns
push
outsb
inc
sub
jecxz
sbb
mov
xorb
outsb
notl
push
dec
xchg
push
push
and
repz
lock
xchg
cwtl
daa
sbb
push
push
sub
mov
push
in
test
mov
pop
jge
ret
pop
test
jb
jae
imul
test
filds
movsl
and
adc
test
inc
jo
daa
faddl
or
imul
imul
inc
or
adc
fiaddl
push
adc
adcl
adc
jmp
jmp
push
push
movb
out
mov
hlt
icebp
sbb
mov
std
ss
xchg
stc
push
dec
inc
add
dec
xchg
andl
sahf
and
rolb
jge
movsb
push
rclb
sbb
scas
mov
adc
cmp
pop
push
jbe
pop
out
cmp
jle
pop
mov
in
outsl
mov
push
dec
icebp
mov
push
call
outsl
cltd
mov
pop
pop
jmp
and
data16
dec
repnz
mov
xchg
sub
mov
push
push
mov
pop
repz
inc
mov
adc
bound
mov
rcll
xchg
rcrl
inc
xor
jo
loop
inc
sub
leave
pop
cs
jne
out
xlat
les
jp
mov
loopne
in
cld
mov
sbb
push
popa
push
mov
shl
scas
leave
inc
push
mulb
ja
rol
mov
jl
cmpsb
lock
test
lahf
cmp
sub
rolb
xor
aaa
fdiv
and
mov
cmpsl
call
popf
push
dec
or
mov
push
adc
inc
test
out
pop
bnd
sub
mov
iret
jmp
lds
mov
mov
inc
cmp
pop
in
mov
mov
iret
xchg
fwait
push
add
cmp
push
mov
or
hlt
push
mov
movsl
xor
mov
dec
and
adc
mov
fsubrl
push
and
dec
sbb
jnp
jno
in
mov
cmp
out
mov
push
out
mov
pusha
in
adc
pusha
clc
in
mov
pop
mov
imul
mov
mov
inc
popf
cltd
sub
scas
fldenv
cmp
leave
adc
add
cmpsl
rcll
add
mov
mov
mov
jp
cmp
cmp
pusha
ss
mov
popf
mov
popf
std
sub
mov
in
sahf
mov
cmp
push
popa
pop
clc
and
std
jge
rorb
fisubrl
jnp
and
in
mov
mov
pusha
dec
cld
lret
shrb
ds
xor
or
ds
push
std
or
in
mov
scas
cmp
add
inc
cli
mov
stc
loopne
push
lock
loope
std
leave
cmp
insb
mov
inc
fldpi
scas
inc
push
xchg
call
int3
dec
int
dec
pop
sbbb
mov
loope
jle
mov
add
mov
jnp
movsl
cmp
ja
into
lahf
cmp
testb
sub
cltd
loope
popa
testb
mov
loopne
sbb
pop
xchg
arpl
sub
roll
mov
and
jmp
jecxz
and
in
sbb
cmp
cmpsb
cwtl
hlt
jno
or
rol
adc
xchg
fs
mov
mov
test
inc
dec
jecxz
fld
js
cs
mov
sahf
sbb
aas
mov
push
lcall
inc
mov
adc
xor
scas
jge
cmp
push
addr16
out
fstps
int3
stos
gs
movsl
fwait
cwtl
sarb
scas
aaa
stos
jle
or
aaa
mov
cmp
and
and
jg
xchg
push
sbb
mov
int3
xorb
mov
dec
andl
pop
leave
add
mov
test
loope
xchg
pop
pop
or
test
add
dec
call
imul
imul
lods
lods
jae
and
iret
add
into
ljmp
fistpll
dec
push
pop
push
notl
sub
mov
push
sub
mov
je
mov
xchg
sbb
orl
xor
push
xor
movsl
test
lock
mov
or
mov
sbb
out
dec
movzbl
sbb
mov
outsb
popa
adc
lea
fwait
mov
shl
jmp
and
lods
add
cmp
mov
mov
adcl
pushf
jmp
data16
xor
pushf
xchg
jmp
inc
and
fdivp
xchg
in
shlb
int
dec
mov
push
sub
mov
sub
sbb
push
xchg
xor
sub
lods
mov
stos
gs
test
dec
mov
leave
nop
xchg
fdiv
jns
adc
leave
cli
test
addr16
push
scas
stc
in
mov
adc
mov
xchg
lea
rcrl
flds
cmc
sarl
sub
xchg
jg
push
push
jmp
sti
lock
or
push
subl
pop
popf
xor
xchg
pop
fwait
mov
repnz
xchg
lds
fldenv
xchg
add
sahf
in
iret
sti
lret
jge
cmpsb
push
js
out
mov
std
mov
sub
sub
in
cmp
and
je
aas
and
dec
mov
xchg
jmp
pushf
in
push
inc
mov
jmp
pop
mov
mov
jge
pop
push
mov
fwait
cmp
shrl
int
orl
dec
in
jnp
faddp
mov
shl
int
out
push
ret
add
scas
pop
adc
pop
inc
mov
fimull
inc
pop
jae
addl
div
imul
pusha
jl
add
pop
pop
add
sbb
or
es
fucomip
adc
enter
cmp
inc
xchg
lods
mov
sahf
sub
pop
addr16
sub
int3
xchg
dec
pop
pushf
and
and
mov
ss
out
cmp
xchg
fldenv
pop
das
stos
fsubr
cmp
pop
pop
lock
adcb
fwait
add
mov
std
iret
sbb
call
es
push
adc
lcall
lret
cmp
xchg
into
adc
xor
sbb
pop
xor
fwait
cwtl
shr
sahf
sub
mov
mov
mov
ret
pop
inc
and
or
repnz
call
inc
dec
stc
bound
lods
mov
mov
mov
pop
push
mov
mov
add
movsl
daa
jb
cli
sbb
in
ret
mov
jmp
mov
pop
push
incl
nop
rolb
aas
lahf
bound
testb
adc
or
ds
mov
rorb
dec
in
xor
sbb
push
and
lea
and
xor
cltd
inc
scas
jge
mov
mov
inc
adc
aas
mov
cmp
daa
jge
or
adc
mov
xor
es
daa
movsb
and
rcll
notb
pop
push
mov
outsb
shrb
das
mov
ljmp
lret
fstpl
je
test
mov
loope
pop
das
inc
and
stc
int
dec
and
push
push
mov
push
aam
int3
das
out
scas
and
aas
pop
lods
mov
and
mov
in
xchg
xchg
movsl
sub
js
inc
stos
pop
test
stos
pop
xor
ds
dec
pop
cmp
xchg
and
mov
icebp
mov
test
adc
cmp
lods
push
sub
and
add
adc
fwait
dec
dec
sbb
push
sub
cmp
lcall
mov
shll
xchg
sub
add
and
ds
add
mov
xor
push
adc
dec
push
fmull
out
aaa
jb
jo
nop
jmp
jg
and
and
and
jae
push
dec
dec
push
sub
mov
add
xor
les
sar
push
repz
pop
int
je
pop
adc
push
inc
add
outsl
push
enter
scas
jne
pop
fcomip
and
aas
lods
jp
pop
jns
xchg
leave
imul
andl
test
inc
pop
mov
mov
add
mov
outsl
inc
adc
xchg
push
loopne
cmp
add
xchg
fsubrs
xchg
jae
push
cltd
sub
inc
js
mov
dec
lret
pop
jl
repz
leave
mov
xchg
or
or
mov
ja
adc
add
ja
xchg
into
jno
cmp
ror
mov
cmp
inc
hlt
enter
addr16
xor
incb
loope
rcr
cs
icebp
mov
xor
std
in
lods
ja
add
testb
jl
jg
jmp
pop
mov
cmpsl
shll
test
js
es
movsl
insl
test
push
mov
mov
addl
shrl
pusha
mov
add
xchg
lock
mov
aas
jl
jg
add
lods
jns
repz
decl
jnp
fisttpll
aaa
and
cmpsb
in
cs
shlb
xchg
adc
jecxz
lods
lcall
cwtl
js
imul
cmp
xchg
pop
sub
cmp
pop
add
mov
fwait
sbb
stos
add
pop
ss
jo
xor
jle
jno
cli
inc
data16
cmp
adc
sbb
das
push
test
jg
test
mov
stos
mov
sub
call
ret
fsts
popa
dec
sub
lcall
push
mov
or
lock
mov
cld
in
out
cld
loop
test
fcomip
nop
push
or
bound
arpl
aam
testl
push
mov
cmc
or
mov
lahf
cmpl
mov
mov
push
pop
cmp
pop
or
call
in
andb
lret
jecxz
cmp
lds
mov
or
cmc
cmp
pop
xchg
aad
ljmp
add
sbb
sub
mov
aaa
sbb
xchg
sti
in
mov
mov
push
and
and
std
orb
std
inc
pop
pop
loop
adc
pop
ja
mov
mov
sbb
mov
ljmp
mov
cmp
pusha
inc
adc
enter
xchg
xchg
and
pop
leave
in
repz
jmp
sub
jne
aad
pop
cmp
adcb
test
and
icebp
xchg
push
inc
int3
fsubs
int3
inc
adc
push
fnstsw
push
adc
inc
pop
and
mov
mov
push
lods
cmpl
or
scas
and
push
push
mov
push
outsb
push
pushf
push
test
out
decb
jbe
js
dec
repz
or
mov
out
xor
std
mov
mov
push
adc
mov
push
lahf
int
mov
stos
adc
nop
mov
cmpb
aas
jp
fadds
inc
push
cwtl
insb
loop
popl
mov
pop
es
mov
and
insb
fistpl
fidivrl
das
cld
aad
inc
jb
bswap
nop
mov
cs
adc
add
sarl
push
xchg
enter
push
cmp
cmp
adc
pop
mov
inc
mov
xchg
cmp
or
addr16
jmp
div
and
ret
mull
push
jnp
stos
mov
cmp
lock
jl
xchg
push
mov
icebp
adc
jbe
xchg
jne
dec
lds
jmp
xchg
and
popa
fmulp
sub
into
lods
add
sbb
mov
dec
pop
pop
sar
xchg
call
bnd
repz
movsb
test
cmpsl
adcl
push
insb
mov
les
inc
push
fs
cmp
cmp
xchg
scas
ret
pop
shlb
jnp
and
jl
dec
rol
mov
lret
test
aaa
sbb
sub
push
pusha
and
rcrb
ror
lret
in
cli
jg
das
pop
enter
mov
cwtl
out
mov
stos
in
dec
pop
jp
aas
mov
mov
sti
add
mov
test
clc
in
scas
adc
sbb
sbbl
jnp
enter
cmc
ret
inc
pop
es
stc
pop
and
mov
outsl
xchg
fwait
loope
dec
xor
cmpsb
xlat
imul
getsec
push
pop
in
popf
add
xchg
insl
into
mov
popa
sbb
inc
add
lahf
shll
mov
xor
xlat
loopne
sub
jg
jmp
xor
and
les
sahf
dec
sahf
popf
or
push
and
lret
scas
xor
push
cmpsb
sbb
std
mov
xchg
out
daa
add
mov
dec
je
jge
mov
cmp
mov
fnsave
dec
mov
mov
in
roll
test
dec
shll
dec
xor
inc
mov
arpl
jg
jne
sub
cmp
mov
sahf
in
int3
mov
lods
stos
notb
mov
xchg
mov
insl
fstps
icebp
out
mov
adc
push
mov
xor
push
mov
sbb
add
dec
sub
inc
rcrl
loope
mov
fsubs
imul
repnz
push
or
add
aas
sub
push
or
fiaddl
js
pop
add
imul
lahf
dec
les
nop
sub
call
mov
ja
sub
push
jno
mov
imul
sahf
imul
xchg
or
mov
divl
and
cs
sbb
jae
mov
add
mov
xchg
sub
add
add
aam
outsb
rcrb
push
jno
and
inc
aam
cmpsl
and
cmp
ss
and
xor
cmpsb
push
lock
test
jne
pop
pop
dec
dec
mov
dec
addr16
mov
xlat
jle
adc
lods
sbb
mov
ret
mov
push
ljmp
mov
add
jg
add
xchg
push
enter
mov
inc
mov
out
orl
mov
add
loope
jmp
sub
orb
pushf
dec
insb
fdivrl
mov
mov
xchg
imul
inc
cli
or
mov
imul
call
inc
cmpsb
jl
add
inc
fistps
pop
add
or
inc
and
mov
loopne
in
add
ret
inc
movsb
cmove
scas
mov
fwait
sbb
xchg
adc
test
or
push
push
mov
aad
in
movsb
cltd
jnp
sbb
lea
dec
cwtl
adc
cmp
lret
sub
aaa
xchg
add
push
test
add
mov
sahf
rolb
jecxz
movsl
je
cmpsl
jb
xlat
mov
jns
mov
add
imul
sub
popf
dec
xor
jbe
icebp
faddp
jb
or
sbb
push
and
test
in
std
dec
imull
or
pop
lahf
dec
and
push
adc
insl
aaa
int
std
cwtl
cld
in
aaa
add
cmpsl
jp
pop
adc
jbe
out
leave
mov
xor
adc
sbb
test
lret
mov
mov
hlt
jb
mov
subb
out
loop
aas
loop
dec
stos
fwait
jmp
push
push
push
bswap
mov
mov
and
ficoms
cltd
xor
loop
or
mov
and
dec
mov
sub
sahf
and
lock
lret
jg
mov
shrl
cmp
xor
dec
jno
sbb
ljmp
ljmp
xchg
aam
or
push
cli
cmp
mov
in
ficompl
hlt
lahf
in
in
pop
pop
jmp
jbe
daa
popf
fdivs
xor
in
mov
movsb
and
rcl
clc
dec
sub
aaa
call
add
xor
inc
aaa
fistl
pop
call
cmpsb
pop
jne
lods
mov
mov
mov
mov
stc
ret
ja
loope
les
jo
pop
cmp
pop
cmp
and
jmp
ficoms
or
jbe
or
movsl
bound
jbe
fistpll
jmp
sti
popa
bound
shrl
mov
fimuls
int
imul
mov
or
pop
lret
loope
xchg
push
aas
fwait
insb
lret
popa
shrb
fiadds
mov
xor
outsl
inc
cmp
cmpsb
pusha
jecxz
jns
addr16
add
jmp
sub
test
add
imul
xor
mov
dec
cs
test
mov
cmp
std
stos
xchg
xor
mov
aam
sbb
mov
xor
lods
imul
jl
adc
test
sub
xor
mov
daa
add
lret
mov
inc
loope
mov
cs
pop
data16
cli
insb
add
cwtl
sbb
or
pusha
cmp
popf
inc
xchg
jbe
pop
in
jnp
mov
aam
cmp
jg
add
test
andl
mov
adc
cmp
es
mov
pop
push
lahf
and
dec
loopne
ljmp
mov
adc
outsl
cmpl
imul
ret
in
or
ljmp
push
inc
add
ss
in
repz
lock
add
mov
das
cmp
mov
xor
pop
ja
mov
das
xor
push
outsl
dec
push
xchg
loopne
int
cmp
mov
stos
dec
push
sub
fmuls
mov
loope
pop
int3
xor
xchg
or
mov
fstps
mov
in
jl
dec
imull
xor
push
out
pop
push
pop
inc
movsb
add
mov
fldenv
dec
out
or
jl
and
dec
xchg
popfw
insb
stos
push
fsub
ds
scas
movsb
imul
or
pop
lds
inc
out
mov
imul
repnz
cltd
and
popf
adc
mov
out
bound
outsb
or
jb
adc
enter
and
adc
and
sbb
cmp
dec
xor
cmpsb
jle
in
mov
test
loop
hlt
pop
cli
inc
mov
out
mov
iret
cmc
loopne
xchg
mov
jo
jmp
xchg
js
scas
inc
pop
and
pop
lret
cmp
int
fiadds
mov
dec
arpl
ja,pt
addr16
adc
add
and
pop
mov
cmp
scas
xchg
add
jl
insb
xchg
mov
scas
sub
movsl
and
jne
lret
dec
xchg
dec
stc
and
pop
lret
je
nop
int
lret
jge
sub
shlb
inc
xor
adc
enter
push
cli
fsubrs
mov
sub
nop
dec
xchg
push
pop
add
pop
jmp
rcr
mov
int3
mov
aaa
mov
aam
movsb
jo
push
mov
dec
in
aam
in
fisubrl
lock
sub
in
push
mov
cmp
mov
mov
xor
pushf
pop
in
adc
jns
test
push
pushf
pop
rcrb
inc
xor
adc
jmp
outsl
movsl
repnz
dec
lahf
iret
cmp
and
push
mov
adc
mov
daa
in
or
mov
push
mov
je
sub
shrb
mov
fsubrl
add
cmpsl
scas
sbb
pop
pop
adcb
loop
enter
movsb
xor
pop
push
sbb
or
push
dec
iret
fbstp
adc
mov
aam
cmp
aaa
xchg
jge
pop
or
shrd
aad
jl
xchg
mov
loopne
add
xor
fildll
mov
ds
jb
fbld
in
mov
aad
aaa
or
pop
leave
hlt
or
lcall
mov
pmaddwd
enter
inc
mov
loopne
aas
jl
call
mov
ja
scas
cmpsl
bound
mov
mov
clc
fldt
cmpsl
orl
cmp
mov
cld
push
adc
lahf
sbb
cmp
jle
jae
dec
push
repz
int3
test
xor
inc
sbb
dec
sub
jl
mov
cmp
pop
xor
incl
dec
mov
dec
push
xor
cmp
pop
imul
add
fsubs
xchg
or
sti
dec
cs
arpl
movsl
inc
and
adc
push
fadds
lods
push
sbb
incl
subb
insb
ljmp
ss
inc
pop
mov
into
fsubp
cmp
arpl
outsb
in
rcrl
std
fisttpll
push
jne
inc
mov
js
sbb
jecxz
fwait
xor
cld
es
mov
fwait
cmp
sarb
pop
pushf
ja
lds
loop
pop
or
ret
repnz
pop
adc
mov
jno
int
gs
or
dec
mov
xor
or
push
inc
sbb
gs
jl
aas
sbb
or
out
xor
dec
pop
les
cmpsb
fsubr
add
loope
sub
inc
jae
je
add
lods
lret
sti
xlat
gs
ficompl
and
divb
add
addl
fwait
shr
cmp
push
std
push
cmp
adc
push
jmp
imul
mov
and
out
and
and
or
ret
out
stc
mov
imul
fs
iret
cli
adcl
push
insl
mov
add
push
dec
push
xor
aas
sub
inc
mov
call
cmp
enter
pop
lcall
push
jge
lods
pop
jnp
cltd
mov
test
push
sbbb
pop
add
pusha
mov
ret
test
mov
adc
mov
mov
mov
addr16
and
sub
test
ficoms
enter
scas
cld
adcl
sti
sub
rcll
das
addr16
push
mov
jae
in
lock
dec
cld
sbb
lds
push
jg
add
cld
cmp
stos
daa
sarb
jmp
sub
sahf
leave
adc
test
shlb
rclb
scas
and
clc
jg
push
divl
sbb
jnp
movsl
andl
sbb
mov
and
xchg
mov
ss
mov
mov
mov
jae
xlat
cmpsb
data16
add
mov
adc
mov
xchg
addb
lret
shlb
fsubs
movsl
mov
xlat
loop
xor
out
push
mov
mov
inc
ds
sahf
not
jbe
mov
push
stc
clc
cmpsb
aam
mov
sbb
dec
ror
bound
in
dec
adc
cmp
adc
aam
jmp
test
xor
adc
call
xor
hlt
mov
push
mov
stos
js
mov
mov
fnstcw
pusha
cmpb
add
cmp
addr16
cmp
push
lods
loope
popa
aas
sub
shrl
pop
add
jbe
out
je
insb
pop
aaa
cmp
xor
jo
mov
lret
inc
gs
dec
cmp
call
call
mov
js
add
int3
mov
sbb
negb
aad
mov
pushf
imul
xchg
stos
pop
xchg
lock
xchg
jge
add
movl
in
iret
xchg
sub
bound
loop
movsl
cmpsb
scas
ret
jl
mov
add
lea
ficoms
mov
lret
pop
scas
loope
xor
push
fiadds
dec
in
ret
push
test
aad
gs
adc
mov
mov
cltd
mov
add
pop
pusha
push
repnz
dec
push
gs
cmp
cli
cld
or
ds
xor
add
push
or
outsl
sub
mov
adc
dec
imul
jp
lret
mov
inc
xchg
or
das
and
dec
and
movsl
pop
sub
int3
int
jmp
pop
insb
or
lret
or
pop
cmp
and
push
ljmp
push
cmpsl
dec
adc
cwtl
pusha
mov
bound
mov
push
xchg
pop
mov
fnstenv
mov
fsubl
out
inc
xchg
jle
mov
jl
inc
cmpsl
outsb
fidivrs
mov
push
jmp
and
and
inc
jbe
flds
lods
rcll
lods
movsl
xlat
scas
outsl
out
sub
pushf
and
fs
xchg
cmp
outsl
jno
push
loop
xor
jne
cmp
cs
mov
cwtl
adc
cld
and
and
inc
enter
in
and
mov
enter
sub
shll
jge
lea
sbb
mov
jp
movsb
push
cmp
out
mov
int
lcall
push
bound
push
jp
out
insb
aaa
inc
inc
push
test
stos
push
out
add
add
jo
xor
adc
pop
pop
leave
adc
pop
xorb
pusha
xchg
loope
popf
lahf
add
or
mov
frstor
jp
sbb
gs
insb
add
adc
arpl
inc
movsb
jle
outsl
fildll
aas
into
pop
lahf
imul
inc
add
scas
lcall
fs
push
mov
repnz
or
jmp
bound
sarb
daa
fcomip
cmpsl
and
sbb
add
cltd
add
jecxz
ret
sbb
mov
test
out
push
push
or
cmpsb
or
dec
push
int
adc
mov
sarb
xor
push
popa
dec
fstp
lock
cmpsb
jne
gs
in
mov
cmc
popf
movsl
ror
lods
ljmp
push
scas
cmp
xor
sbb
or
aam
mov
fdivrs
das
sub
iret
pop
rcrl
xchg
outsb
push
xchg
jg
or
inc
add
mov
sub
push
cmp
imul
add
adc
xchg
jge
and
xchg
or
lock
inc
dec
movsl
pusha
sub
popa
int
cld
jo
mov
adc
xchg
push
int
lods
ja
pcmpeqd
cmp
stc
cmp
stos
ss
xor
jle
or
cld
leave
push
push
sub
cmpsb
pop
xchg
stos
std
sbb
dec
aad
push
sub
jp
sarl
dec
add
pushf
out
or
out
out
xchg
mov
pusha
lret
lea
sahf
sbb
sbb
int
mov
xchg
dec
cmp
lock
cmp
lods
mov
cmpsb
mov
push
scas
fdivs
es
cmp
jmp
add
inc
das
je
mov
mov
jbe
orb
jge
out
push
mov
popf
or
scas
in
jno
aad
adc
sbb
pop
or
mov
sti
fwait
lea
fwait
inc
and
or
push
sub
mov
enter
push
inc
sub
push
jns
xor
push
ret
adc
pop
cmpsb
xlat
pop
repz
and
adc
negl
pusha
clc
rcl
ljmp
adc
cmp
insl
xchg
mov
mov
shlb
lcall
cmp
pop
lock
push
dec
shll
sarb
sub
in
aaa
inc
movsl
sub
cmp
pop
into
addr16
popa
ret
insb
jns
xchg
loop
add
sub
ljmp
ret
mov
sarl
lea
in
fcomps
dec
add
push
lock
fnsaves
insl
sbb
fstpt
gs
cmpsb
xor
add
enter
fs
aas
push
sbb
cmp
scas
popf
xchg
loopne
nop
xor
test
shll
push
stc
pop
daa
stc
loope
sti
insl
push
push
popa
aam
sub
and
dec
addr16
clc
nop
ret
cmp
push
pop
es
mov
jg
dec
test
jno
mov
lahf
cli
fs
negl
test
hlt
mov
je
and
push
cs
lret
les
ret
or
stc
aad
push
xor
dec
in
hlt
and
jnp
sbb
and
into
cmp
loopne
fnstsw
fsubs
ss
insb
pop
jae
xor
aad
xchg
shl
xchg
dec
mov
add
jns
cwtl
adc
jecxz
dec
jo
sub
xchg
jo
movsl
and
cld
push
inc
add
adc
daa
cld
mov
enter
sub
sbb
adcl
lret
inc
pushf
orl
nop
test
pop
jle
add
inc
add
add
push
frstor
xor
inc
cltd
lods
jmp
aas
inc
sbb
mov
push
fnstsw
mov
jmp
dec
xor
insl
push
jle
push
cmc
jns
sub
cmpsb
jp
std
jbe
dec
or
or
mov
cwtl
into
fisubrs
lods
inc
xchg
sub
into
inc
fwait
push
push
fistps
int3
out
sti
stc
std
pop
jp
rclb
and
adc
bound
insl
inc
sub
loop
into
xchg
mov
adc
pop
pop
push
rolb
les
jg
sar
xchg
int
fwait
std
or
fimull
test
loopne
push
or
push
xor
jne
mov
int
add
fsubrl
stc
mov
cmp
stos
notl
test
fadds
mov
mov
icebp
or
gs
xlat
sub
pop
add
out
jge
loopne
mov
xchg
and
mov
sbb
cmpsl
fsubrs
std
cld
inc
push
pop
jae
test
inc
shrb
mov
outsl
popf
xor
inc
xchg
sub
cmc
mov
xchg
mov
mov
mov
adc
ret
sub
jle
shrb
jb
jp
xchg
movl
inc
movsl
popf
ss
pop
inc
xor
jp
cs
push
mov
cld
jmp
shl
push
add
faddp
sbb
sub
add
push
loope
int3
cmp
imul
bsr
pop
adc
dec
sbb
adc
xchg
xchg
lea
loope
sbb
inc
fldenv
lods
out
lret
repnz
mov
dec
fildl
sub
popf
lods
push
hlt
popl
mov
lret
add
rol
imul
iret
shrb
rcrl
imul
push
xchg
sub
loope
fmulp
mov
sbb
or
test
jecxz
cmpsb
lret
insl
cmp
insb
xchg
and
mov
call
xor
ret
lret
pushf
push
inc
jbe
adc
jnp
xchg
jbe
in
sbb
into
dec
cltd
add
cltd
fldenv
xor
jne
and
xlat
jmp
add
add
lea
push
stos
out
std
rcrl
xor
xor
adcb
inc
xchg
gs
sbb
les
pushf
mov
loop
cmc
in
pusha
or
pop
jecxz
jnp
sbb
xlat
sbb
mov
int
cmc
lds
popa
pop
mov
jecxz
stos
mov
or
inc
scas
lods
loopne
je
cli
fwait
xchg
call
std
mov
cs
and
test
adc
adc
lds
call
ljmp
jmp
lods
shll
dec
xlat
in
xchg
xchg
mov
xlat
inc
incl
add
pop
lcall
xor
sbb
sahf
fwait
lea
inc
cmp
cmp
inc
hlt
or
ficoms
inc
adcl
mov
sti
outsb
fs
jno
pop
repz
in
fnstenv
and
out
pop
ds
inc
pop
mov
imul
int3
or
xchg
cwtl
push
mov
arpl
mov
mov
cmp
or
push
jmp
fldl
jp
test
into
jns
cld
adc
mov
pop
js
sub
mov
in
add
sbb
mov
inc
pop
insb
jle
jbe
movsl
sub
ret
in
cmp
aas
mov
or
das
mov
repz
adc
push
sub
out
ja
mov
lea
lds
cmpsl
pushf
xchg
cmpl
or
dec
or
ss
pop
mov
xchg
test
xchg
pop
test
sbb
and
rorb
mov
fistl
jbe
jnp
repz
aad
dec
xor
sbb
inc
pop
jne
aad
inc
mov
int3
fwait
mov
or
sbb
sbb
fwait
call
or
int
mov
xor
and
lods
add
sbb
ficomps
lds
repz
stc
gs
pusha
bound
int3
icebp
lret
test
imul
xor
sbb
inc
test
push
dec
fcomps
and
cmc
fnstcw
push
mov
ja
gs
loop
ja
cs
xchg
add
push
and
push
xchg
lock
jle
add
xchg
stc
and
test
cmp
pusha
je
add
dec
cld
push
daa
repnz
cmp
lods
xchg
sti
into
add
fcmovnbe
insb
negb
fs
fistl
push
xchg
mov
lahf
and
out
and
push
insb
add
cmpsb
out
fmull
ja
xchg
push
jmp
cmpsw
je
jnp
mov
aad
sbb
jp
and
and
in
js
sub
test
leave
test
imul
sub
or
push
and
les
add
cmpsb
sub
adc
xchg
test
inc
int
pop
pop
fisttpl
mov
cmp
xor
mov
dec
dec
cltd
popf
in
mov
js
notb
mov
cmp
aas
cli
jge
mov
ljmp
jae
js
and
aam
out
and
jae
insl
arpl
pop
sbb
jle
leave
sub
bndstx
sarb
cmp
outsb
fimuls
dec
popa
or
sbb
hlt
ret
insl
inc
mov
hlt
jmp
and
inc
out
mov
sub
sub
or
xchg
cmpsl
mov
repz
xor
sbb
inc
add
fiaddl
jecxz
xchg
out
sti
inc
lods
ds
test
dec
xlat
lods
or
xor
sti
fstps
addr16
in
lods
push
xchg
repnz
xchg
pop
test
cmp
fbld
icebp
dec
shlb
mov
mov
xor
sub
in
out
rorl
sahf
faddl
in
add
mov
sub
sub
pop
adc
and
es
pop
cmpl
loop
jbe
adc
and
xorb
mov
in
les
sti
loop
outsb
mov
fnstcw
and
mov
insb
mov
add
popa
xchg
sbb
xchg
test
ds
mov
dec
jecxz
mov
loop
jo
sub
sbb
loope
and
mov
in
mov
out
jbe
sub
lock
ret
sahf
scas
push
inc
xlat
fwait
jmp
in
adc
pop
pop
sub
mov
mov
sbb
mov
sbb
mov
ja
enter
and
outsl
cwtl
sar
jge
and
xor
ret
push
int
mov
and
pop
inc
shlb
inc
in
test
gs
push
popa
cmpsb
gs
jp
xchg
cmc
sti
add
frstor
clc
pop
mov
sub
xchg
pop
add
stc
test
push
icebp
and
pop
sahf
push
mov
push
fadds
enter
scas
jnp
xchg
inc
cli
stc
dec
gs
stos
jno
jo
or
andb
mov
shll
ret
sbb
mov
push
cmp
aam
adc
roll
mov
pop
pop
sub
jle
cmp
outsb
mov
lret
mov
dec
jns
mov
mov
lret
fdivrl
das
sbb
add
sub
push
lock
xchg
sbb
fs
repz
or
fistps
or
cs
popf
jnp
insb
cwtl
fimull
cli
dec
pushf
inc
push
or
push
leave
shl
mov
rcrl
push
jecxz
inc
scas
lods
shlb
xor
lcall
iret
leave
cmpl
in
out
push
pop
push
sbb
cmp
xor
or
push
inc
mov
repz
aam
das
jo
and
dec
pushf
andl
pop
lods
int
mov
sbb
fstl
push
les
jae
mov
push
shrb
jmp
mov
cmp
sbb
push
lret
stos
pusha
imul
pop
jmp
aaa
cmp
mov
inc
dec
and
dec
call
daa
aaa
xor
adc
mov
pop
or
pop
enter
pop
lret
cmc
stos
ljmp
into
lods
xor
bound
mov
lods
inc
in
xchg
inc
cmp
sub
mov
push
jb
and
mov
in
and
dec
sbb
mov
sub
shr
sub
arpl
je
sbb
pop
mov
add
test
in
sbb
lret
fstps
mov
out
or
adc
sub
cmp
cmpsl
mov
lods
sub
cmc
or
iret
dec
lcall
xchg
mov
jb
sbb
and
lahf
dec
imul
cmp
test
jge
inc
das
call
mov
xchg
or
or
gs
adc
or
adc
movsl
and
push
fisubrl
scas
xchg
or
cld
xor
std
imul
imul
cli
sub
iret
dec
mov
pop
out
cmp
out
test
movsb
push
and
jns
int
das
cs
add
mov
loope
mov
dec
xchg
pop
imul
dec
std
scas
adc
cltd
add
test
or
repz
imul
hlt
mov
pop
cli
mov
mov
pop
sbb
xchg
dec
push
pop
das
xor
jnp
xchg
push
adc
mov
les
jl
aas
out
movsl
or
add
adc
adc
pop
enter
add
jmp
add
sti
xchg
add
cmp
jl
fs
adc
movsb
jp
gs
ja
pop
mov
out
and
cmp
fnstcw
or
jl
imul
test
jnp
ss
std
jecxz
or
mov
lods
push
imul
cld
xchg
adc
in
pop
arpl
sbb
ret
lds
in
xchg
push
lahf
fidivs
push
lock
mov
pop
cmp
jnp
ret
pop
pop
arpl
xchg
je
or
loopne
cmp
repnz
cwtl
repnz
add
jle
test
aad
jb
add
stos
ja
mov
sbb
and
imul
es
sbb
mov
mov
add
addr16
shll
and
clc
sbb
lock
pop
movsl
daa
fwait
insb
adc
and
push
xchg
push
push
out
and
sbb
jge
aaa
pop
add
iret
das
imul
cmpsl
pop
pop
popf
xchg
mov
lea
and
cmp
and
add
sahf
mov
mov
sub
sub
loop
aas
jl
push
lods
lret
addl
mov
jle
xchg
mov
in
jecxz
cmpl
or
lods
imul
clc
pop
aad
cld
mov
push
sbb
das
jb
pop
jne
lret
dec
jle
repz
xor
push
cmc
sub
test
ljmp
pop
aad
int3
and
sub
push
jae
mov
iret
ja
popf
xchg
jne
clc
je
and
les
mov
add
hlt
mov
sub
mov
and
jecxz
push
lods
pushf
and
psubsw
adc
jb
arpl
xchg
mov
dec
test
pusha
mov
dec
insl
mov
adc
push
mov
mov
mov
pop
add
lret
cmc
mov
lock
inc
and
pop
or
aas
dec
ja
fadd
cld
hlt
or
mov
cmp
sub
inc
lcall
into
and
jmp
and
mov
loopne
in
jae
fst
loopne
scas
imul
mov
call
add
ret
std
lods
mov
movsl
mov
xlat
in
push
add
jo
nop
aam
aas
add
or
xor
adc
out
mov
fimuls
jbe
mov
enter
jg
and
aad
xchg
push
je
lret
cmp
and
loopne
add
call
popf
push
mov
sbb
push
mov
gs
xchg
leave
and
mov
adc
mov
jle
xor
xorl
push
jge
add
xlat
mov
mov
in
inc
lods
dec
sub
mov
subb
fildll
adc
push
gs
into
outsb
rorb
outsb
aad
lock
xchg
add
xchg
pop
dec
pop
ret
dec
lods
pop
dec
jl
int
inc
loop
mov
cs
add
mov
inc
xchg
fwait
scas
mov
fdivs
in
push
add
adc
idivl
mov
adcb
adc
sub
xchg
fists
sbb
testb
hlt
repz
std
cltd
sub
aas
js
add
inc
out
test
cmp
shl
jl
xorb
mov
test
dec
das
sahf
sub
mov
pop
xchg
inc
jno
aaa
rcl
int
mov
insl
xchg
adc
xlat
xchg
push
sub
xchg
mov
test
pop
pop
mov
xor
arpl
out
add
pop
loopne
xor
mov
pop
movsl
in
int
loopne
insl
mov
popf
call
sbb
imul
into
jb
lret
ja
rcrb
cltd
add
and
jo
xor
cs
mov
push
shll
mov
add
ret
mov
xchg
jno
addr16
loope
arpl
jl
fcmovb
sbb
jmp
xor
adc
fwait
movsb
xchg
dec
test
cmp
das
ret
test
mov
cltd
ds
inc
mov
orb
movsl
mov
or
popa
sub
iret
or
mov
cmc
popa
mov
mov
or
cmp
sub
adc
sub
scas
aaa
mov
jmp
cs
lock
adc
mov
xchg
es
sub
stos
xor
jb
jge
leave
imul
mov
mov
loop
in
test
fisttps
xchg
mov
mov
fiaddl
add
lea
and
pop
pop
shl
xor
cmp
jo
push
aaa
mov
or
mov
pop
push
sbb
pop
cmpsb
xor
insb
add
sub
popa
out
mov
mov
in
bound
jne
lods
out
xchg
imul
iret
bnd
pop
ror
loop
add
adc
enter
repz
adc
out
xchg
mov
out
xchg
out
ss
mov
icebp
pop
sbb
dec
sub
scas
mov
lcall
shlb
jb
data16
fadds
mov
inc
jle
pop
cmpb
repz
shl
cmp
icebp
enter
shll
add
cmp
dec
jb,pn
pop
jb
in
out
dec
mov
bound
mov
call
rorb
or
sbb
rcrl
out
insl
in
fs
das
jnp
mov
cld
push
pop
add
pop
xchg
int3
or
ss
or
scas
inc
add
mov
dec
gs
cmp
faddl
push
shrb
or
subb
xorl
out
mov
movsl
sub
out
in
jb
pushf
sahf
or
aam
scas
lret
inc
js
call
and
inc
imul
xor
and
mov
xchg
ficompl
in
cmp
aam
add
repz
mov
test
sbb
adc
stos
test
push
int
inc
add
in
addr16
push
mov
mov
jne
jns
test
jp
push
rolb
add
lret
adc
cmpsb
aam
xchg
ja
mov
lods
push
cmp
into
aad
lock
cli
mov
inc
inc
cmp
pop
mov
ret
jno
cmc
sahf
mov
xchg
mov
mov
add
sub
xchg
lcall
negl
adc
ret
push
xor
and
mov
sbb
add
in
out
sti
mov
mov
aaa
add
daa
cmp
push
xchg
jp
and
push
jle
push
xchg
push
ljmp
ljmp
icebp
fsubl
pop
mov
pop
push
dec
adc
add
xchg
pop
jp
aaa
jns
jae
sub
push
insl
jecxz
add
lcall
push
ds
arpl
and
movd
xchg
pop
xor
sbb
imul
pop
xchg
lcall
push
stos
cmp
int
jp
sbb
int3
inc
fists
dec
fcoml
nop
orb
mov
sub
rorl
sbb
in
minps
cmpsb
and
fistps
test
xor
xor
ficomps
lods
pminub
sahf
imul
aad
dec
fs
fnsave
clc
shrl
mov
inc
pop
aam
xlat
xlat
add
lahf
xor
sub
xor
or
emms
push
in
data16
fsubr
pop
dec
bound
sub
cmp
out
icebp
sahf
popf
jg
imul
fwait
xchg
or
dec
mov
movsl
lds
rorl
sbb
adc
cs
in
mov
je
subl
stc
xor
cmp
stc
lcall
cmpb
mov
add
in
mov
pop
andl
sti
test
push
push
sti
mov
xchg
or
ds
jp
ja
jecxz
jle
stos
adc
push
loop
fcmovb
daa
in
mov
in
mov
mov
stos
les
mov
or
cmp
mov
ds
jnp
mov
sahf
ds
sub
jmp
je
xorl
pop
insl
mov
cmp
lods
in
cs
pop
and
add
popf
jl
rclb
pop
xor
or
pop
mov
xchg
cli
aad
sahf
sbb
push
cmp
inc
gs
push
pop
jl
xchg
fildl
repnz
inc
sub
push
adcl
inc
or
mov
popf
inc
int3
out
lret
adc
cld
jg
repnz
sbb
dec
outsb
repnz
mov
push
inc
test
leave
in
daa
clc
cli
mov
int
xchg
cmpsl
adc
imul
pop
jg
and
cmpsl
mov
nop
movsb
leave
ror
jg
outsb
aam
fsubrs
aas
adc
stos
push
in
loopne
push
pop
stos
lcall
dec
inc
mov
aad
jae
add
bound
aas
jb
lret
sbbb
dec
and
mov
mov
stc
adc
ja
lret
ljmp
test
rol
aas
in
cmpsl
cmp
rcr
fwait
cmp
into
xor
and
sub
jle
dec
inc
xchg
ficomps
sbb
push
aad
mov
out
xor
es
cwtl
std
rcrb
jno
jne
repz
notb
imul
add
adc
pushf
xchg
push
sub
gs
add
sbb
pop
inc
ret
mov
div
cmpsb
out
xchg
lahf
scas
jo
xchg
loop
and
pmulhuw
mov
nop
and
test
jb
push
add
pop
call
or
lods
pusha
je
leave
test
jnp
jp
jmp
lahf
or
pop
orl
mov
les
fwait
mov
fcomi
mov
dec
sbb
inc
cmpsl
out
std
int
nop
or
insl
fwait
mov
cltd
push
dec
dec
fldcw
lret
mov
push
idivb
lahf
cwtl
and
dec
ljmp
sub
jo
stc
mov
push
outsb
in
int
insb
push
mov
leave
ret
jp
or
pop
mov
jbe,pn
enter
lret
pusha
loopne
das
pop
dec
mov
pop
mov
jne
mov
xchg
clc
movsb
mov
or
or
push
mov
sub
mov
adc
das
xchg
add
scas
sbb
pop
inc
and
and
xchg
or
jp
xor
stos
pop
mov
lock
xchg
dec
push
lock
jb
adc
and
pushf
sbb
cmp
or
hlt
aaa
mov
sub
lods
pop
test
sub
es
outsb
hlt
out
enter
jnp
xadd
jnp
rcrb
mov
mov
imul
adc
lahf
or
int3
adc
dec
scas
sbb
jbe
inc
dec
mov
sub
pop
mov
xchg
je
jnp
push
or
inc
loop
lea
enter
ja
popa
cmp
lds
ret
jnp
int3
lcall
mov
add
inc
mov
cmpl
or
imul
mov
fists
xchg
pop
das
lods
in
not
jb
popf
mov
jmp
in
das
sub
pop
or
jle
xlat
push
dec
shll
inc
cmp
pop
dec
sbb
hlt
xchg
lret
in
push
inc
mov
pop
inc
xchg
sbb
pop
jns
imul
and
xchg
or
xchg
sbb
idivb
insb
fstl
sbb
idivl
mov
cmp
inc
xlat
rcrb
test
je
fistl
lods
dec
movsb
inc
pop
bound
andl
in
xor
pop
adc
testb
cmp
faddl
cmp
mov
inc
xlat
repnz
xchg
mov
ffree
pop
aas
add
mov
test
testb
movsl
xchg
pop
inc
scas
int
fstp
pop
add
inc
jmp
and
jb
jecxz
pop
mov
je
sbb
or
sbb
xchg
stos
push
xchg
mov
cld
push
mov
jmp
cltd
mov
lds
xor
cmp
decl
or
stos
imul
repz
sub
dec
in
adc
mov
inc
xchg
add
jae
mov
out
mov
stos
insb
push
mov
jmp
cld
test
aaa
cmp
xchg
sahf
adc
mov
aad
lds
test
das
out
and
jno
cmpsl
adc
push
inc
mov
cmp
nop
out
push
add
mov
push
insb
int3
outsl
mov
out
in
dec
cmc
inc
adc
or
pop
mov
or
cmp
add
add
les
push
leave
dec
mov
orl
imul
dec
push
out
scas
test
xchg
loope
int3
addl
jecxz
mov
fbld
movsb
test
mov
addr16
into
stos
test
in
into
test
sbb
push
cmc
inc
xor
ret
mov
subl
mov
pop
arpl
scas
gs
jae
pop
testl
mov
in
out
shrb
cs
sub
pushf
int3
cmp
stos
pop
xchg
or
mov
enter
inc
mov
ds
in
fcoms
hlt
push
test
jae
sbb
add
leave
cmpsb
sbb
jle
shlb
ret
ss
popf
in
aas
int3
push
mov
pop
pop
lock
jg
scas
or
es
pop
mov
add
js
adc
xor
daa
jbe
sbb
push
das
pop
mov
dec
jne
stc
je
addr16
xor
or
sub
cmpb
rcrl
push
lock
ret
imul
mov
arpl
out
and
push
cmp
or
dec
pop
sbbl
dec
les
insl
ror
xchg
inc
out
test
and
es
add
adc
pusha
mov
and
inc
and
mov
inc
cmp
jecxz
dec
mov
mov
push
fidivl
jno
ret
mov
icebp
frstor
mov
mov
mov
loopne
or
shll
cwtl
or
xchg
inc
mov
int3
test
dec
xchg
xor
fmuls
inc
xor
push
jp
cmpsb
iret
out
xchg
pop
mov
push
fcom
sbb
movsb
sub
xchg
pop
loop
subl
push
cmp
cmp
jecxz
push
push
adc
aam
ret
xchg
xchg
and
cmpsl
mov
mov
sbb
mov
mov
test
sub
xlat
ret
aas
lret
clc
adc
dec
or
data16
fadd
std
push
pop
xchg
lods
je
jecxz
jg
jne
fwait
xor
leave
dec
insl
addb
lcall
aad
pushf
xchg
inc
std
idivb
pop
int
jp
movsb
loop
push
repz
int3
cmp
and
xchg
jae
push
imul
xrelease
jns
mov
mov
out
int
lods
in
sub
adc
sbb
fadds
add
mov
xchg
adc
mov
adc
and
jg
ds
add
mov
loopne
lock
push
adc
popf
ss
sub
push
out
xor
or
or
mov
add
adc
jo
scas
add
scas
inc
incb
jmp
add
mov
dec
xchg
or
pop
mov
mov
data16
jg
enter
jl
push
or
inc
aas
pop
mov
cmp
mov
mov
negb
out
sub
lahf
push
jmp
outsl
and
dec
or
jmp
mov
aam
sbb
mov
sbb
pusha
dec
xlat
mov
push
or
ftst
sbb
lock
fidivrs
and
inc
jo
dec
in
xchg
cmpsb
insb
dec
lahf
cmpsl
xor
pop
call
ds
or
pop
out
or
sbb
cli
test
inc
sub
sub
imul
sarb
mov
mov
pop
mov
mov
add
jae
push
scas
fiaddl
ret
insb
imul
inc
mov
stc
sahf
jle
jecxz
xlat
jns
mov
test
shll
pop
movsl
fidivrs
stos
lds
call
push
test
ret
xchg
sbb
push
or
jbe
xor
ljmp
sbb
fnstenv
mov
in
pusha
mov
adc
loope
sbb
jo
scas
int
idivl
adc
pop
mov
cmp
inc
das
fsub
arpl
push
cld
fs
test
adc
scas
pop
inc
scas
dec
imul
jg
lock
sub
ljmp
mov
inc
xchg
test
mov
and
or
or
mov
add
sbbb
sbb
mov
fnsave
adc
movsb
adc
dec
mov
pop
inc
sub
jbe
add
mov
addb
xrelease
scas
sub
push
adc
sub
addr16
fwait
jo
std
dec
mov
jle
movb
push
out
and
cmp
lahf
lea
popa
aam
sti
shlb
inc
rcrl
add
in
rsm
sbb
ja
stos
sub
in
mov
movl
fldt
jmp
aas
mov
xchg
cmp
sub
mov
les
xor
test
push
jns
or
mov
sbb
pop
mov
mov
jp
cmp
pop
pushf
push
inc
inc
mov
ret
ret
inc
mov
std
jle
jnp
sub
xor
call
sbb
sbb
jbe
sbbl
repnz
ja
sbb
mov
mov
mov
call
repnz
cmpsl
mov
loopne
loop
pop
push
mov
rolb
bound
je
cli
fisttpll
jno
into
and
sub
popf
aad
imul
inc
icebp
mov
pushf
imul
popf
mul
fsubrl
fwait
enter
adc
cmp
xlat
mov
leave
rorb
ss
outsb
xlat
repnz
add
xor
call
aaa
push
fs
dec
mov
repnz
orl
cmp
cmp
inc
cmp
xor
inc
lock
sbb
mov
pusha
mov
ljmp
cmp
dec
pushf
add
fists
mov
rcrb
cmp
xor
inc
hlt
push
add
popa
dec
mov
mov
jl
cmp
pop
cmp
jbe
fdivrp
xchg
jns
int3
mov
adc
mov
jns
dec
sub
das
outsl
icebp
jno
mov
add
jb
cmp
xchg
sub
push
pop
jmp
pop
mov
inc
xchg
stos
pop
in
jnp
jle
cmpsb
push
jbe
sub
rolb
rcr
andl
addr16
into
mov
adc
packuswb
lods
mov
ds
lock
aaa
mov
loopne
insb
push
aas
and
inc
imul
push
push
filds
mov
cmp
add
mov
mov
pop
out
xchg
fildll
in
cmp
mov
push
mulb
lret
fists
nop
fstpl
cwtl
pop
xchg
pushf
frstor
and
stos
in
sarb
loope
in
popl
mov
dec
addl
push
or
divl
std
push
mov
sbb
push
xchg
inc
loop
mov
cld
and
push
adc
in
mov
bound
nop
shlb
pop
pop
add
outsb
jbe
daa
popa
or
loop
xchg
fwait
push
cmpsl
int
cmp
or
fisttpl
leave
clc
cli
push
std
dec
xchg
cmp
sti
add
or
xor
add
jbe
fisttpl
push
sbbl
mov
je
test
bswap
and
jnp
dec
cltd
add
adc
sbb
test
adc
xchg
lret
or
andb
out
int
loope
ja
adc
aaa
push
or
inc
jo
nop
cmp
adc
icebp
out
sub
pop
pop
cli
enter
pop
jge
jno
outsl
sbb
dec
xchg
imul
adc
out
popl
icebp
xchg
mov
mov
ficoml
and
jnp
jmp
and
pop
out
pop
inc
stc
jne
adc
inc
jno
in
xchg
pop
fldcw
inc
test
jp
jg
push
ja
fdivrs
adc
mov
and
mov
aam
jmp
lods
mov
into
mov
or
movsl
jb
and
out
pop
out
push
out
adc
sub
mov
out
jg
bound
dec
gs
push
or
out
xor
xchg
popf
gs
mov
fstpt
jp
sub
push
in
adc
fnstenv
dec
sti
lret
push
inc
arpl
jae
incb
stc
bound
movsb
clc
add
mov
mov
cs
sti
sbb
adc
out
adc
mov
test
jle
add
sbb
out
sti
pop
out
std
and
fildll
or
gs
mov
cmp
add
pop
movsl
push
push
les
mov
and
nop
test
jmp
add
pop
pop
inc
mov
daa
sbb
fs
pop
jge
outsb
push
ret
insb
scas
fisttpl
jnp
push
lods
jp
out
call
mov
nop
clc
pop
inc
mov
out
jge
fbld
jb
movsb
cmc
mov
and
add
mov
pop
outsl
data16
mov
push
dec
jae
sbb
inc
outsb
sbb
into
lcall
scas
lcall
movsl
adc
mov
and
jle
mov
push
sub
lea
arpl
ror
filds
stc
rcll
icebp
stc
out
push
and
div
sbb
push
mov
hlt
push
aaa
add
mov
push
push
in
fs
jmp
scas
in
out
push
loope
arpl
int3
fbstp
mov
xor
fiaddl
test
fsubs
mov
mov
pop
movsb
sub
jge
mov
subb
jle
push
imul
sub
push
fldl
loop
jnp
cmp
push
into
pop
nop
adc
push
or
testb
xchg
pop
adc
sbb
push
mov
xor
jno
inc
pusha
pop
out
stos
pusha
add
mov
ljmp
test
add
bound
sbb
xor
lds
inc
mov
pusha
fdivrs
jbe
ds
mov
xlat
mov
inc
jae
cmp
scas
push
insb
es
bound
adc
mov
push
jmp
push
aad
insl
pop
mov
dec
cmpsl
sbb
xor
mov
xor
popa
les
mov
adc
mov
fdivs
sbb
stos
leave
adc
push
movsb
sub
cmp
push
xor
jno
stc
jg
xor
or
or
fmul
mov
sbb
adc
loope
or
dec
xchg
ret
lods
adc
daa
out
ds
xchg
jl
bnd
mov
popa
addr16
hlt
cmpsl
pop
or
cmp
lods
adc
dec
and
xor
in
sbb
in
inc
xchg
icebp
decb
mov
dec
mov
popf
adc
mov
add
inc
and
xor
xchg
cmp
incb
ficoml
mov
or
call
in
sub
and
jae
ja
sahf
xor
add
push
push
stos
xchg
ds
jecxz
inc
dec
sbb
push
cmp
shll
adc
bound
mov
and
out
inc
mov
lock
cmpsl
pop
lcall
push
xchg
leave
pop
hlt
push
sub
scas
out
cltd
adc
loope
push
arpl
cmp
stc
idiv
jae
leave
push
jp
add
ds
and
push
inc
push
out
cmp
jl
pop
int
outsb
xchg
into
dec
mov
arpl
bound
aam
scas
clc
cmp
adc
ret
lods
fstpt
pop
push
stos
shld
ja
fwait
outsl
jl
popl
sub
mov
lahf
pop
mov
fnstcw
mov
mov
mov
loope
test
pop
sbb
or
in
fidivl
mov
mov
inc
ja
icebp
mov
push
mov
dec
pop
cmp
scas
gs
cmp
lret
int3
test
inc
fildl
movsl
cmp
or
test
sbb
add
sbb
out
xchg
movsb
mov
in
dec
xchg
xchg
shr
xor
loopne
int
je
mov
add
mov
loope
out
enter
xor
repz
ja
push
test
sub
leave
mov
jmp
into
push
hlt
nop
in
xor
xor
mov
clc
icebp
add
int
stos
sub
out
dec
gs
fs
mov
fisttpl
xchg
stc
in
mov
mov
cs
sub
shll
sub
imul
fwait
sbbl
jns
xor
cmc
push
sahf
adc
fidivrs
push
fisubs
pop
cmp
push
data16
jnp
stc
xchg
test
mov
mov
mov
in
mov
sbb
testb
sarl
aaa
lret
arpl
mov
fidivl
loope
mov
fidivrs
mov
jb
or
xor
cmc
sub
pop
inc
imul
xchg
xchg
fisubs
inc
into
popa
test
sahf
shrd
sbb
or
jg
lds
mov
fisttpll
adc
imul
push
cwtl
jne
loopne
ret
lcall
dec
pop
and
mov
inc
jl
ja
pop
push
inc
cwtl
scas
gs
jno
inc
pop
mov
mov
bnd
add
loopne
out
cmp
jb
lods
fucom
mov
icebp
call
mov
sahf
outsl
cld
lods
ret
push
stc
dec
mov
sti
insb
scas
ljmp
pop
dec
mov
cli
lods
sbb
testb
jmp
xchg
push
out
out
aam
int
inc
rorl
rorb
nop
mov
cmc
dec
popf
xor
insl
push
fs
out
mov
jo
push
sbb
not
jo
int3
dec
pop
icebp
xor
add
stos
jmp
inc
sbb
and
imul
xor
mov
mov
xor
popa
shl
fs
add
inc
aaa
jl
inc
xchg
add
bound
fs
mov
stc
jns
sub
out
out
lds
sub
out
movsl
sub
inc
lods
lods
adc
popf
mov
sbb
fdivrl
jne
addr16
and
dec
int3
mov
pushf
pop
pop
in
rcrb
dec
ret
pop
sbb
mov
pop
mov
popa
mov
xor
jo
pop
pop
repnz
jle
es
cltd
neg
xor
mov
inc
jne
enter
mov
add
fisttps
daa
ljmp
fstpl
movl
stos
adc
pop
lahf
pop
andb
out
cmpsl
xchg
scas
je
je
or
mov
jle
filds
fisubrl
in
xor
fwait
push
adc
mov
or
xor
into
sbb
lds
insl
push
xchg
jb
or
js
cmp
pcmpeqw
cmpsb
xor
loopne
cli
pop
lods
add
pop
in
repnz
sbbb
add
jg
xor
dec
in
orb
mov
ss
rorl
jns
popa
addr16
orl
lock
push
xchg
aaa
cmp
jmp
repz
mov
repz
idivl
push
std
rol
lods
mov
or
add
adcb
insl
call
adc
push
lods
or
xchg
cli
and
cs
dec
mov
jecxz
xchg
or
mov
xlat
fdivrs
and
xlat
ds
mov
mov
lods
push
popf
lahf
lret
mov
aas
enter
test
inc
sbbb
sbb
ljmp
adc
pop
jmp
jae
icebp
sbb
jne
cmpsl
pop
bound
std
push
push
push
mov
jp
xor
inc
mov
inc
fdivr
dec
push
ss
daa
imul
cmp
dec
fldcw
add
mov
adc
subb
or
packssdw
push
jp
push
push
repz
push
jp
ss
mov
fidivs
dec
dec
sbb
push
icebp
mov
incl
int
adc
lea
lret
imul
add
xlat
jns
imul
xlat
icebp
dec
into
adc
movsb
subl
subb
mov
aas
sbb
test
push
mov
cs
push
out
push
inc
mov
cmpsl
mov
and
mov
pop
sub
faddl
lcall
xchg
adc
pop
dec
enter
mov
test
les
fsubr
addr16
xchg
inc
jg
mov
push
mov
inc
mov
inc
fdivrs
push
je
mov
adc
push
addb
in
es
xorl
push
jno
mov
leave
sub
xchg
inc
imul
outsl
add
aas
jno
aas
std
push
subl
push
xor
sub
test
cwtl
dec
out
add
cld
stos
addr16
xchg
jns
ljmp
xor
imul
sub
dec
int
xchg
enter
mov
inc
aam
jne
push
add
pop
aam
xchg
add
mov
outsb
inc
jle
mov
icebp
sub
sbb
add
sub
ja
ficomps
dec
call
rcrb
fwait
jecxz
or
jno
daa
scas
xor
add
xchg
scas
xchg
stos
xchg
lock
in
cld
sbb
test
and
int
scas
arpl
loop
add
test
add
xchg
mov
jmp
lods
test
ljmp
push
sahf
aad
sbb
push
out
xchg
mov
sub
xchg
stos
cmpl
loop
fsubl
aas
addr16
into
dec
aaa
pop
and
mov
hlt
sarb
mov
cmp
sti
pop
out
mov
inc
xchg
jmp
scas
mov
sbb
mov
and
mov
ds
ljmp
je
inc
out
xchg
xchg
cmp
mov
loope
and
aas
or
lret
pop
daa
xor
xchg
add
fxch
loope
adc
mov
out
ret
subb
add
jnp
adc
xor
dec
repnz
mov
dec
lods
inc
faddl
ror
push
cmp
dec
jno
fcomip
jo
enter
cld
sub
adc
jp
pushf
frstor
mov
xor
outsl
aaa
imul
or
sub
add
out
mov
pop
xlat
push
add
xchg
ja
popf
add
jb
int3
lretw
adc
sub
fs
push
das
jmp
test
rorl
loop
xchg
insl
mov
imul
ret
into
repnz
addb
jp
or
xchg
aam
ret
jl
or
faddl
push
or
lret
data16
cmp
js
push
in
test
in
pop
xor
pop
mov
mov
push
push
xchg
out
and
call
adc
sub
push
das
inc
and
or
sti
rclb
pop
aad
pop
test
xor
arpl
push
push
xor
inc
mov
push
repz
enter
add
in
pf2id
and
push
adc
xor
pushf
les
jnp
je
add
mov
popa
iret
aam
imul
lcall
ret
xchg
mov
jno
dec
inc
inc
iret
xchg
dec
cmp
or
sbb
jge
sub
sub
jae
and
in
pop
les
movsl
push
xchg
out
pop
push
ds
push
iret
nop
sahf
pop
imul
hlt
nop
aas
andl
mov
mov
pop
sbb
subb
not
daa
add
xchg
sbb
das
in
pop
add
push
mov
push
mov
push
xchg
test
insl
adc
out
mov
in
enter
cmp
lods
and
xor
outsb
loopne
imul
loop
cltd
into
lods
sbb
sub
mov
adc
jecxz
mov
out
pop
out
lcall
adc
inc
sub
and
lods
nop
insb
ret
xchg
dec
fnsave
sub
clc
outsl
nop
loop
xchg
and
cltd
cmp
mov
inc
stc
sbb
stos
push
insb
fs
bound
xchg
hlt
aad
mov
inc
xor
cmp
mov
jae
adc
mov
jo
adc
stc
or
mov
hlt
adc
cmp
movsb
sub
aad
repz
inc
add
sub
cmc
mov
xchg
hlt
test
mov
in
mov
jne
cmp
sub
cwtl
sbb
or
ret
mov
sbb
pop
pusha
pop
ficoms
sbb
mov
mov
sahf
cmp
cmp
shll
js
jne
adc
les
or
fs
jne
jge
cwtl
shrl
add
xor
mov
inc
jmp
cmpsb
gs
xchg
push
lret
gs
movsl
sbb
push
into
bound
mov
jmp
pop
roll
test
push
xlat
dec
clc
icebp
cmp
xchg
ret
push
mov
popa
or
mov
pop
ret
mov
xor
inc
test
mov
add
movsl
mov
xchg
lcall
loop
andb
in
into
aad
adc
popf
add
dec
sub
jge
in
dec
inc
stc
push
fwait
xchg
sti
or
jbe
jmp
cmpsl
in
push
push
cmp
loop
in
inc
out
jl
mov
sahf
mov
xchg
aam
sbb
sub
mov
mov
sahf
lods
sub
or
xchg
pop
dec
aam
and
fidivrl
cmpb
das
mov
fldcw
fldenv
daa
xchg
lea
jge
push
je
jae
xchg
jae
or
jnp
and
mov
rorb
and
xchg
icebp
sbb
lea
add
adc
inc
or
mov
stc
ds
lcall
jbe
mov
push
outsb
loop
push
stc
and
popf
sub
dec
pop
into
fbld
lcall
sub
mov
cli
lret
add
inc
pop
push
inc
and
fs
dec
dec
fldcw
ret
sarl
sbb
mov
pushf
dec
xor
popa
ss
int3
xchg
es
into
pop
fisubrs
fsubrs
insb
lds
and
nop
jmp
mov
cs
xor
cli
in
ds
mov
adc
sub
dec
lret
ljmp
das
popa
lods
lods
push
push
add
pusha
dec
daa
xchg
out
xor
and
xor
lods
cmp
fwait
sbb
enter
jmp
out
mov
lea
test
xor
inc
add
into
test
add
jno
gs
jne
cmp
out
pop
jl
and
rcr
shrb
das
test
cs
aas
cmpsl
cltd
arpl
xor
rcpps
mov
xlat
cmp
push
mov
sub
push
lock
fstl
pop
stc
fdivrs
loopne
fisubrs
repnz
les
es
mov
ds
mov
inc
nop
add
jo
xor
cmpsb
out
inc
cmp
dec
call
inc
cmc
xor
jbe
shr
adc
cmpsl
lret
mov
ljmp
sbb
pop
inc
sbb
mov
call
stc
sub
xor
dec
xchg
mov
rcrl
jl
dec
sub
sub
or
aaa
lret
pop
push
es
push
pop
dec
jmp
xchg
ret
ret
test
mulb
and
idivb
pop
add
ljmp
xchg
roll
jecxz
xchg
xor
arpl
cmp
fists
popa
cli
pushl
mov
or
xlat
imul
imulb
jnp
inc
inc
and
cmp
adc
js
cmp
and
mov
mov
scas
and
or
or
mov
filds
add
mov
cmp
add
std
inc
insb
sbb
add
add
jnp
jb
adc
cmp
out
idivl
orb
xchg
push
out
scas
cwtl
lods
cmc
imul
sti
and
jl
mov
lahf
pop
push
test
pop
lods
jmp
js
mov
int
mov
add
js
jg
mov
sbb
lods
xchg
iret
or
push
test
aas
imul
push
sub
clc
adc
dec
or
lock
sub
jg
or
outsb
pop
jmp
pop
pop
rcrb
push
mov
add
dec
outsl
pop
xor
loope
jmp
or
mov
cmp
add
stos
repnz
leave
or
test
aam
sub
icebp
add
inc
sbb
mov
fmull
fcomps
addb
addr16
cmp
ds
cmp
sbb
cmp
movsb
aad
bound
iret
loop
cmpsl
adc
jge
adc
movb
dec
loopne
pop
fadd
sbb
lahf
and
and
mov
and
and
push
loopne
scas
test
scas
stos
sub
cmp
ror
ret
mov
xorb
cmpb
xor
shlb
fmuls
fistpll
rcr
pop
push
je
xchg
mov
sub
rol
cmp
and
icebp
adcb
jle
sub
rolb
jb
jae
call
or
and
add
mov
xchg
dec
repz
sub
sub
push
popf
lcall
mov
mov
mov
lock
test
jp
insl
loopne
mov
movsl
push
cmp
pop
jae
lret
cwtl
cmpsb
in
ret
add
dec
dec
mov
cmp
stos
jns
lcall
out
jae
lock
testb
cs
sti
ret
shll
mov
sub
and
mov
loopne
add
xor
xor
add
ret
mov
int3
gs
cmp
into
popf
lods
pop
rcll
pushf
dec
dec
sbb
nop
xchg
mov
jne
fnsave
pop
sar
jecxz
int
test
aam
loope
xchg
aad
enter
enter
fdiv
repz
adc
adc
xlat
xor
xchg
and
mov
push
inc
leave
icebp
scas
push
jno
mov
dec
ljmp
lahf
ljmp
mov
and
and
lret
out
add
adc
add
and
ss
fbstp
mov
gs
mov
ror
jmp
inc
loopne
cmpsl
and
sti
cmp
sub
mov
push
loop
fs
mov
push
push
inc
aad
cli
hlt
push
les
arpl
adc
and
faddp
add
mov
call
gs
fdivrs
sbb
outsl
jns
mov
pusha
call
das
jp
rol
pop
lcall
les
xchg
iret
std
pop
pop
fists
dec
daa
sahf
pop
ret
cmpsb
jge
mov
jmp
add
sbb
fisttps
pop
lret
inc
into
test
dec
mov
push
in
pop
lea
dec
push
mov
jp
xor
push
add
outsb
in
fs
fisubl
cmc
in
or
xor
cmp
xor
out
gs
les
in
cs
jnp
mov
xchg
cs
jo
out
cmp
clc
icebp
out
mov
push
sbb
mov
sbb
xchg
rcll
and
mov
sub
in
push
cmp
jne
ret
mov
or
mov
loop
and
mov
add
add
int
mov
test
dec
mov
repnz
cltd
shlb
cmp
or
and
mov
fistl
repnz
aas
ss
call
cmp
ret
adc
or
daa
pop
out
cmpsl
fdivs
mov
mov
push
xchg
sub
cmp
add
push
mull
je
push
add
push
lds
sbb
mov
or
dec
push
ret
dec
out
lahf
mov
rcll
in
jae
test
mov
not
and
out
push
add
cmpsb
pushf
repz
fucom
dec
mov
mov
inc
push
sub
test
inc
mov
repz
xor
mov
xor
adc
adcb
push
jne
dec
orb
movsl
push
xchg
shlb
push
sti
das
jg
call
fstl
adc
mov
push
pop
fbstp
fsubrs
xchg
stos
rcrb
arpl
scas
sbb
shr
addr16
cmp
subb
push
and
inc
jge
jno
pusha
jbe
sti
cmpsb
cmp
mov
add
add
lods
or
pop
add
push
cmp
mov
mov
arpl
pop
in
arpl
fstl
push
xchg
add
sti
pusha
pxor
dec
lret
inc
popa
int3
cmp
stos
lahf
jecxz
pop
ljmp
push
bound
pushf
push
iret
mov
rclb
je
imul
adc
adc
dec
mov
mov
add
test
or
or
test
cli
sahf
dec
out
test
aaa
xor
leave
addl
pop
ss
push
arpl
cmp
int
xor
repnz
test
jb
mov
jl
addr16
out
imul
add
push
inc
mov
mov
stos
pop
lahf
push
mov
mov
pop
cwtl
inc
sahf
std
stc
shr
insb
sub
push
xchg
mov
xchg
xchg
pop
daa
mov
sbb
mov
and
or
stos
xchg
and
dec
or
add
in
mov
jnp
pusha
xor
enter
pop
or
push
mov
sub
in
push
pop
push
adc
mov
sbb
loop
popa
out
or
pop
mov
sbbb
mov
je
cltd
in
iret
inc
or
iret
insb
test
mov
fidivrs
xor
dec
mov
ds
push
adc
mulb
out
fsub
out
dec
lret
pop
aas
scas
xchg
aaa
xchg
and
dec
xchg
dec
adc
pop
pushf
lahf
or
sub
mov
aam
fsubrl
or
lods
or
repnz
push
lcall
inc
mov
cwtl
popa
inc
dec
or
jmp
jnp
xchg
dec
cld
jnp
add
outsl
pop
movsl
fisubrs
bound
sbbb
add
decl
inc
xor
iret
adc
roll
jb
sbb
jne
xchg
dec
dec
sbb
movsl
add
pop
les
or
cmpsl
pop
jp
sub
ret
inc
out
sbb
cld
mov
dec
arpl
cmp
test
mov
dec
mov
adc
ror
mov
call
dec
out
scas
cmc
aaa
xchg
lret
mov
or
int
fwait
dec
fistpll
aad
std
add
scas
sub
sbb
adc
jg
adc
aam
add
cltd
or
jge
ret
pcmpeqd
into
aad
inc
sub
mov
cmp
lods
faddl
pop
or
mov
addr16
ret
sub
lock
jge
jns
imul
outsb
or
arpl
xchg
out
insl
lahf
mov
inc
inc
test
dec
dec
test
je
aam
orb
jns
repz
pop
insb
fldcw
loope
mov
dec
xor
cwtl
dec
jne
pop
leave
adc
dec
iret
jo
add
pushf
pop
jg
aaa
or
rcl
add
push
pop
dec
pop
push
daa
ljmp
mov
mov
push
mov
sbb
jp
mov
test
lcall
sbb
pusha
mov
mov
lods
fs
clc
cmpsb
sti
add
xchg
mov
and
popa
mov
and
cmp
add
pusha
mov
fs
jle
sbb
push
adc
adc
mov
aad
enter
mov
cmp
jge
inc
mov
mov
loop
pop
lock
cmp
mov
fldl2e
sbb
push
jo
pushf
lcall
insb
add
and
in
inc
stc
jbe
cmc
xor
insl
xchg
inc
push
shl
jge
test
jno
push
outsl
pop
cmpsl
std
inc
cmpsb
loopne
call
mov
sbb
aas
mov
push
bound
jl
mov
add
and
or
xchg
mov
lods
or
loope
cmp
sarb
insb
xor
in
inc
and
pop
jb
and
and
xor
test
imul
clc
cmpsl
push
lahf
mov
pop
and
jg
or
adc
sub
cld
dec
mov
push
xchg
cmp
sub
hlt
lds
inc
xor
pop
adc
cwtl
scas
out
lock
cmp
jge
fiaddl
out
dec
push
ret
mov
xor
shll
mov
call
mov
add
cmp
popa
cli
jns
sub
into
ds
sub
popa
cmp
xchg
mov
sub
inc
pop
cmpsl
das
lret
and
pop
cmp
sbb
cwtl
out
inc
sub
dec
shrb
pop
xrelease
push
xor
push
push
jb
ret
pop
push
in
sbb
jp
in
push
divb
dec
aam
inc
outsl
sti
int3
ja
out
inc
xchg
aaa
pop
jns
lods
aaa
in
xor
ds
pop
inc
push
cli
outsl
les
std
dec
stc
add
inc
or
bnd
and
xor
or
and
push
fcmovnb
adc
ret
jecxz
dec
test
fists
mov
adc
and
sahf
adc
sbb
cmp
push
and
pop
fisubrl
sbb
add
push
into
inc
push
arpl
enter
stos
shll
pop
or
add
outsb
xor
sbb
add
in
ficoms
fdivrl
mov
pop
xchg
aam
jb
stos
adc
loope
movsl
xchg
stc
jmp
cwtl
mov
xchg
lahf
call
fiaddl
sub
mov
adc
add
sbb
bound
cmp
push
in
jl
insb
mov
push
jge
outsl
mov
adc
mov
stos
stos
in
sbb
pop
push
sahf
mov
jle
mov
cmp
xchg
popf
ljmp
push
cwtl
mov
movsb
or
xchg
pop
xchg
adcl
pop
addb
fbstp
in
test
cmp
cli
sbb
push
xlat
pop
push
or
cmpl
xchg
lds
stos
sbb
pop
push
jbe
add
je
push
enter
and
ds
mov
xchg
mov
lret
cld
or
fdivrs
xlat
fsubl
push
add
fidivl
push
push
ljmp
jl
hlt
push
inc
push
sti
mov
in
test
mov
jp
aas
mov
outsb
mov
pop
pop
dec
scas
lods
inc
mov
jg
lea
lret
jae
leave
jo
push
rorb
in
fsqrt
pop
loope
fstpt
xor
pop
scas
adc
jmp
adc
ds
cmpsb
xor
imull
sbb
jbe
sub
push
rcrb
dec
or
mov
stc
lahf
mov
mov
pushf
fs
mov
dec
test
mov
inc
cmpsl
sbbl
or
mov
out
icebp
pushf
push
sub
mov
test
sub
sti
push
cmpsb
jmp
lock
add
subb
int
fidivrl
mov
and
test
aas
popl
push
ret
inc
es
fwait
mov
mov
mov
adc
cmp
mov
adc
lods
ljmp
fiadds
in
or
and
pop
inc
adc
inc
shr
sub
les
adc
out
repnz
aas
outsb
testl
imul
dec
pop
and
and
lods
sub
mov
add
push
ficomps
xchg
mov
daa
inc
sbb
repz
inc
repnz
cs
cwtl
sbb
daa
jnp
pop
and
mov
jecxz
xor
pop
cmp
cli
enter
cmp
pop
ljmp
xor
int3
cmp
lcall
nop
dec
jnp
pop
faddl
dec
bound
sbb
push
arpl
iret
ret
cs
mov
xor
dec
xor
in
scas
jl
inc
sti
dec
aaa
xchg
adc
jo
jno
xchg
mov
push
mov
jo
shrb
inc
pop
or
jecxz
hlt
or
shlb
js
inc
and
clc
pop
adc
repnz
xchg
ficompl
aad
into
fdivrl
xchg
imul
cmp
xchg
inc
dec
lock
xor
mov
inc
pop
icebp
and
jle
call
aam
adc
cli
pop
in
ret
pop
jg
cmp
pop
add
aad
jb
and
pop
int3
movsb
dec
mov
mov
enter
cmp
xor
mov
repnz
xchg
nop
andb
rcrl
rcrl
sub
adc
xor
ficompl
xchg
sarb
jne
loope
mov
repz
jl
nop
int
hlt
mov
subl
mov
mov
cwtl
push
adc
aam
and
mov
int
dec
cmpsb
sbb
jmp
arpl
imulb
mov
aad
push
jbe
repz
add
xchg
sbb
adc
shr
sbb
dec
jmp
dec
nop
dec
cmpb
das
fidivrl
pop
imull
int3
push
imul
out
cmpsl
pushl
and
mov
jno
or
js
mov
add
mov
stc
mov
mov
mov
dec
test
pop
cmpsb
add
inc
mov
iret
mov
mov
xor
daa
in
cltd
scas
fdivrl
pop
jno
into
es
mov
sbbb
xchg
addr16
add
xchg
inc
pop
int
add
or
mov
or
fcomps
nop
int3
mov
inc
jb
add
adc
xchg
addb
mov
pop
adc
add
jbe
push
cmp
or
jl
decl
addr16
sbb
rcll
and
fstp
xchg
cmpsl
add
test
cwtl
loope
filds
jl
xchg
shl
aad
dec
mov
add
fidivs
enter
mov
cmp
inc
clc
out
and
pop
and
jmp
mov
cmp
add
mov
push
jne
pop
push
dec
imul
add
dec
les
jl
fsubr
pop
rcll
scas
add
in
or
fldenv
jmp
pop
xchg
mov
or
out
adc
mov
outsl
in
shl
lods
scas
cmpsb
pop
xor
ss
adc
or
cltd
jp
mov
mov
push
or
in
pusha
and
iretw
stos
add
xchg
jp
cwtl
cltd
mov
aas
xchg
xchg
imul
pop
xchg
xor
popa
jecxz
push
lods
aas
add
jne
xlat
enter
cli
fdivrl
jns
out
out
insl
pop
movlps
push
adc
orb
sub
dec
movsb
xor
addb
cmp
into
mov
aad
rcl
xchg
cmc
jge
push
imul
pop
int3
cmp
das
xor
sub
xor
dec
mov
mov
pop
adc
push
icebp
test
dec
sub
icebp
call
jno
fisttpll
enter
xchg
adc
mov
pop
add
scas
in
and
ds
jbe
rorl
aaa
das
push
pop
and
xor
scas
pushf
sub
in
jne
lcall
popa
jge
ja
in
jg
std
add
mov
stc
lods
push
inc
out
mov
jge
mov
pop
cmp
fcoml
lods
xchg
push
mov
add
pop
dec
clc
subl
scas
push
inc
pop
sbb
mov
xor
test
mov
imul
adc
icebp
test
pop
pop
lods
pop
lea
testb
mov
or
xchg
rcl
inc
test
sbb
leave
ds
stc
int3
arpl
js
insl
in
repz
dec
mov
enclu
fldl
out
data16
pop
cmp
rorl
popa
xchg
and
and
lahf
js
lret
pop
mov
out
jmp
fstpt
fisubrs
xchg
push
xchg
mov
mov
lods
xchg
fs
movsb
daa
adc
cs
fadds
xchg
fidivs
ja
cmp
mov
neg
dec
mov
stos
mov
push
outsl
test
lds
shlb
test
mov
lret
jecxz
xchg
mov
in
xchg
aam
imul
sbb
in
add
xor
or
aaa
call
jl
mov
repz
rcl
aad
les
sbb
gs
pop
xchg
cmp
outsb
jne
ret
or
xchg
fs
int
test
inc
xor
mov
xchg
dec
push
scas
jb
push
lret
and
mov
push
sub
pop
inc
sub
sbb
pop
xchg
cmp
insb
lcall
mov
popa
or
sub
jmp
sbb
clc
dec
mov
cmp
xchg
std
xor
xchg
push
fnstcw
incl
mov
je
stos
scas
pop
mov
pop
movsb
scas
push
add
fnstenv
enter
mov
repnz
add
jno
push
inc
sbbb
push
jp
cltd
sub
lds
mov
jp
pop
add
dec
pop
arpl
ds
push
mov
iret
jnp
popa
scas
adc
mov
mov
je
cmp
add
jns
scas
dec
inc
mov
mov
inc
push
loopne
xor
or
mov
fidivrl
data16
sbb
pusha
push
hlt
jo
dec
addr16
push
pushf
mov
inc
int
inc
aad
pop
std
pop
scas
jle
xchg
pop
mov
packuswb
mov
adc
shrl
pushf
inc
cmpl
dec
test
test
dec
cmp
jp
dec
pop
in
and
dec
pop
cmp
or
fsts
dec
pop
mov
scas
stc
mov
out
cmc
jecxz
sub
push
add
adc
lret
and
fdiv
stc
sbb
cmpsb
cld
cmpsb
lods
clc
dec
aam
push
pushf
pop
das
lahf
nop
out
mov
push
ja
shlb
sub
mov
daa
dec
aam
jge
call
aaa
imul
stos
mov
sub
in
enter
repnz
hlt
imul
jnp
or
lods
mov
in
test
sbb
xchg
and
and
hlt
adcb
fwait
stos
fistl
push
mov
sbb
sub
cwtl
xchg
pop
xor
pop
stc
xor
movsb
fisubl
push
imul
imul
das
ret
loope
pop
and
pop
fs
je
dec
push
repnz
inc
mov
cwtl
mov
cmpsl
dec
mov
nop
outsb
or
cltd
jbe
sti
aas
fcmovnb
jg
sub
jnp
sub
mov
push
bound
nop
test
int
loope
cltd
or
push
outsb
mov
mov
sub
out
push
jl
clc
insl
jno
inc
mov
and
dec
hlt
inc
pcmpgtd
xor
mov
sub
bsf
cmp
dec
test
xor
pop
pop
fwait
cmp
xor
ss
lret
mov
lret
scas
fildl
imul
push
cmp
stc
jae
iret
xchg
cmp
jbe
loop
in
add
ret
sahf
outsb
stos
pop
pushf
dec
adc
mov
cltd
fucomp
pop
cld
rol
cmp
xor
mov
sub
adc
sbb
jl
loopne
pop
les
in
std
pop
sbb
leave
lds
sbb
pop
and
out
pop
in
out
mov
sbb
push
js
loope
mov
xchg
xchg
js
xor
xchg
lods
inc
enter
cltd
mov
push
out
mov
xchg
ret
xchg
cmp
cmc
push
cltd
and
inc
in
pop
add
sub
fiaddl
shlb
fimuls
add
cmp
cltd
mov
sub
inc
stos
mov
sub
and
orb
and
adc
les
in
iret
add
push
and
adc
jnp
add
dec
popl
fs
dec
sbb
clc
pop
push
pop
mov
xchg
push
jl
ficomps
leave
or
shr
inc
fcomps
adc
pop
add
lock
jns
movsb
and
inc
test
inc
popf
mov
shll
pushf
pushf
sub
std
mov
adc
xor
movsl
sub
out
inc
cmp
cld
pop
test
in
adc
xchg
and
hlt
add
fwait
out
mov
int
ror
sbb
data16
addl
out
and
and
shr
sbb
fmull
sahf
push
or
xorb
bound
outsb
ja
lahf
sbb
popf
jne
add
mov
pop
orb
cmpsl
ljmp
inc
push
xorl
icebp
push
xchg
in
addl
push
jns
pop
ja
push
pop
lods
das
xor
push
dec
inc
fdivl
xchg
hlt
mov
dec
jb
mov
stos
out
xchg
mov
inc
clc
test
pushf
xor
or
pop
test
shlb
aam
and
mov
cltd
xor
insl
lds
xchg
jno
test
fldl
push
rcr
jl
sub
add
inc
ds
inc
addl
test
jnp
int3
out
mov
and
mov
pop
rcr
js
mov
add
jg
out
cltd
mov
imul
ret
xor
es
push
push
mov
inc
xchg
push
adc
cmp
pop
dec
add
inc
movsl
movsb
adc
pop
ret
or
cmp
pop
es
mov
ds
stos
out
mov
push
add
mov
cld
js
loop
clc
xor
fnsave
mov
cwtl
cmc
pop
sbbl
in
or
jge
cli
and
scas
jge
xchg
pop
dec
or
popa
gs
fsubs
or
xchg
shlb
popa
jge
jmp
dec
les
add
dec
inc
in
adc
stos
inc
lods
leave
stos
mov
outsb
test
sbbl
aas
test
mov
pop
jb
ljmp
loope
mov
daa
adc
jmp
jae
cli
shll
popa
xchg
lods
cltd
rcl
mov
sub
jo
sub
shlb
inc
ret
lcall
push
test
pusha
imul
popa
mov
subb
sub
cmp
push
push
mov
jbe
enter
cwtl
dec
stos
int3
jne
or
pop
nop
xor
xor
mov
xchg
pop
dec
ffreep
jmp
ljmp
jns
pop
out
lcall
inc
lods
dec
mov
add
ljmp
imul
push
fsubl
jb
push
sub
jo,pt
adc
mov
add
ljmp
xchg
lds
stos
add
and
mov
mov
jb
or
xchg
fsubrp
mov
mov
pop
push
cmpsl
mov
sbb
js
ja
mov
mov
pop
test
push
fstpt
stos
rcl
lret
mov
pop
xor
jnp
aam
mov
fadds
repz
outsl
pop
data16
add
cli
dec
es
mov
iret
xchg
cmp
fcomi
loope
out
xor
in
fwait
sti
lods
fdivrs
xchg
mov
loope
leave
jmp
add
lahf
cltd
xchg
cltd
jo
dec
ret
and
pop
inc
repnz
scas
mov
aam
imul
or
pop
lods
add
cmp
jge
xchg
jecxz
test
imul
jns
xchg
fsubrl
popa
push
nop
push
nop
xor
leave
dec
adc
addr16
mov
fists
jle
push
push
ret
jp
mov
sbbl
iret
lcall
test
mov
fdivr
int3
sti
iret
inc
je
stos
inc
lds
les
ja
sti
movsb
adc
insb
xchg
adc
andb
push
push
and
jmp
push
mov
fwait
sbb
xor
push
out
pop
pop
mov
std
inc
pusha
sbb
jns
mov
inc
clc
xor
mov
mov
mov
popl
idivl
jbe
dec
ret
mov
jp
add
mov
mov
cmp
jecxz
or
push
insb
and
dec
bound
add
sbb
cli
adc
in
mov
sub
inc
in
std
shr
nop
xor
sbb
xlat
popa
adc
out
cmp
data16
sbb
sub
sbb
push
repnz
and
inc
cwtl
xchg
sub
out
or
sub
cmp
dec
mov
out
icebp
push
sbb
and
test
jb
adc
imul
adc
mov
inc
add
mov
loop
jns
sub
scas
fcoms
and
xchg
stc
aad
dec
adc
cmp
add
jle
inc
test
lret
push
push
pop
int
popf
adc
negl
cmp
mov
pop
shl
das
das
cmp
dec
nop
mov
mov
cmp
gs
push
xor
enter
aas
or
mov
loop
outsb
pop
repnz
dec
push
jmp
lods
inc
jecxz
push
sub
mov
inc
std
add
sbb
shrl
jmp
shll
outsb
clc
sub
std
mov
pop
movsb
lcall
inc
adc
fiadds
push
sbb
aad
inc
push
movsb
adc
enter
push
push
mov
arpl
lods
inc
or
cwtl
xlat
movsl
xchg
clc
pop
xlat
push
and
push
icebp
out
mov
fidivrl
mov
ja
jecxz
cmpsb
leave
xor
and
mov
ja
subl
mov
int
xor
sbb
sarb
xor
jl
out
into
loope
mov
subl
pop
or
hlt
and
int
jle
push
divb
imul
xor
iret
pushf
mov
cmp
into
sbb
lea
xor
insl
test
fisubl
test
xor
cmpsb
sbb
leave
sub
das
jle
fldenv
sub
pop
dec
adc
or
jns
xor
mov
dec
mov
iret
adcl
pop
int3
and
dec
out
and
ljmp
fwait
mov
lods
test
shr
in
cmp
push
pop
sub
lcall
fcmovnbe
jle
add
or
pop
out
pop
jl
push
loop
cmp
push
add
mov
jns
inc
arpl
shll
xchg
jg
cli
inc
mov
sarb
pop
shll
stos
mov
push
ja
cmp
test
scas
jg
sub
lds
idiv
mov
in
pop
push
shll
pop
mov
mov
stc
mov
jb
cltd
push
in
test
into
movsl
loope
sub
cmpsb
movsl
in
xchg
push
popw
dec
jne
icebp
push
shlb
loopne
xor
lcall
ficomps
mov
push
jb
daa
and
cmp
int
sahf
push
push
and
in
test
leave
enter
int
rorb
inc
pushf
andb
stos
insb
cwtl
icebp
mov
imul
test
mov
inc
fcoml
jle
dec
inc
test
mov
mov
sub
inc
push
push
int
add
std
insl
out
lcall
int
cmp
mov
pop
out
jae
adcb
xchg
sbb
cmp
dec
push
cs
mov
push
andb
ret
mov
insb
loop
sub
add
push
inc
xchg
push
fsubl
roll
movsb
js
jmp
or
nop
js
lods
mul
sub
call
mov
aam
std
mov
jg
into
aas
bound
add
jns
js
xchg
xchg
ret
aam
mov
sub
sbb
jmp
lds
test
dec
xor
shlb
cld
subl
xor
dec
jne
and
mov
std
cli
mov
push
or
dec
out
sti
push
pop
fcomps
popf
fstl
lret
in
xchg
push
clc
sbb
out
add
cmp
shlb
gs
mov
jp
inc
out
dec
dec
fistpll
jnp
pop
jnp
xorl
fsubr
adc
jl
stos
jecxz
data16
imul
or
testl
les
jmp
cs
push
in
lcall
shll
ret
bound
lods
aad
out
popf
out
mov
ja
pop
clc
stc
jo
cmpsb
sbb
add
add
out
inc
inc
and
ds
imul
dec
jb
mov
sbb
lret
mov
mov
nop
outsb
sub
mov
int3
pop
push
xor
pop
jl
xchg
pop
sti
mov
dec
mov
sub
mov
jg
cmpsb
scas
jg
mov
loopne
ss
std
push
inc
sbb
xchg
mov
xchg
push
push
mov
subl
mov
xor
xlat
jmp
mov
mov
cmp
into
push
sub
mov
push
sbb
adc
clc
pop
sbb
lds
jnp,pt
je
loop
lods
inc
pop
mov
adc
mov
jb
ds
pusha
sub
lret
cmp
sbbl
xchg
gs
into
enter
or
and
add
incb
adc
ret
jl
sbb
fucomip
dec
and
popl
scas
jecxz
mov
fbstp
or
inc
ljmp
popf
clc
pop
imul
adc
aad
and
loope
xor
mov
das
add
js
lret
cmp
test
mov
mov
outsl
pop
mov
mov
jg
sti
mov
aam
mov
dec
sbb
xchg
std
jns
test
iret
pop
out
or
rol
sub
int3
mov
xor
pop
rolb
dec
and
adc
loopne
sub
daa
jl
jecxz
push
hlt
dec
or
pop
out
hlt
das
push
ja
xor
push
xchg
insl
ret
testb
and
enter
test
imul
xchg
push
sbb
ljmp
cmp
adc
pop
inc
pop
je
push
add
jne
in
inc
scas
enter
xor
adc
sbb
adc
movsb
jmp
and
push
sti
loope
jmp
ljmp
mov
dec
push
aas
fstl
xlat
sbb
inc
mov
fiadds
aaa
lds
add
jecxz
sarb
dec
sbb
sbb
scas
iret
mov
fstl
jo
fadds
xchg
inc
push
dec
jbe
fmul
xchg
adc
jmp
insb
add
pop
xor
pop
mov
xchg
inc
pop
and
pop
repnz
enter
test
jp
cltd
and
inc
push
repz
xchg
or
mov
jbe
jns
add
inc
pop
or
mov
push
iret
pop
push
xchg
in
lea
lahf
add
das
jp
dec
mov
jl
out
add
std
adc
lcall
sbb
mov
stc
scas
pop
or
xor
mov
mov
pop
outsb
mov
iret
xchg
cwtl
stc
bound
dec
xchg
mov
inc
in
sbb
cs
push
sbb
lods
jp
pushf
jns
hlt
add
lret
sub
cmp
addr16
add
adc
xchg
xor
leave
inc
jnp
xlat
stc
xlat
test
ret
enter
cmpsl
ret
inc
and
sbb
notb
sub
pop
ss
pop
lret
xchg
int
add
lret
imul
ret
push
sbb
xchg
xlat
and
fsubrs
aam
xchg
dec
call
mov
xor
and
mov
mov
add
idivl
pop
mov
push
add
stos
outsb
repnz
sub
mov
shrb
jmp
popf
in
call
testl
movsl
ror
ret
pop
mov
lcall
aam
std
mov
out
mov
jbe
fs
aas
mov
mov
or
ss
add
add
decl
mov
sti
xor
cmpsl
cmp
in
mov
cmp
pushf
loopne
imul
push
inc
xor
stos
ss
sub
push
ror
push
inc
cwtl
rcr
std
xchg
dec
add
clc
pop
xchg
fld
ret
lret
mov
add
in
push
fstp
shrl
fildll
and
and
ret
cld
out
ret
mov
jge
aad
clc
dec
insb
dec
fs
ja
cmp
xchg
movsb
mov
lods
popa
sarb
shl
mov
add
in
mov
std
ljmp
subb
dec
xchg
stos
les
cwtl
sahf
mov
inc
dec
mov
sar
sbb
enter
push
cmc
mov
xor
push
push
lret
sub
dec
push
pop
mov
xor
out
ret
xor
push
sbb
shrb
rcll
push
dec
sbb
cmp
add
hlt
mov
mov
outsl
pop
xor
shlb
scas
fdivs
pop
sti
cmc
pop
data16
js
stos
clc
xchg
stc
adc
pop
loopne
pop
cmpb
sbb
dec
xor
jae
lock
push
cwtl
sbb
icebp
ret
vlddqu
out
and
mov
popf
aaa
mov
fistpl
js
push
dec
xchg
cmc
lds
jecxz
in
test
xchg
mov
add
jmp
mov
sbb
mov
adc
jp
or
add
sbb
jp
lret
test
ds
and
incl
mov
jle
les
xor
loop
int3
stos
xchg
imul
dec
fdiv
adc
popa
xchg
ljmp
sbb
cwtl
jge
imulb
cld
pop
pop
push
aam
pushl
filds
jg
int
xor
mov
jmp
les
push
mov
lea
cs
outsl
in
bound
jge
xchg
or
adc
cmpsl
cmp
cmp
js
push
mov
or
cmp
lds
mov
iret
and
addr16
jns
cs
lea
enter
xor
xor
jne
add
add
imul
cmp
sbb
js
sub
inc
push
out
outsl
or
and
fwait
and
push
or
aaa
jmp
popf
pop
sbb
dec
popa
test
push
add
adc
imul
rorl
es
pop
enter
pop
mov
sub
mov
lods
fmuls
cld
jle
in
shld
movsl
mov
push
sub
adc
mov
mov
xchg
pop
mov
or
add
mov
aaa
shrl
push
repz
int
xchg
jbe
lahf
jns
jo
mov
mov
ret
bound
jne
adcb
mov
mov
dec
push
fldlg2
lock
pop
xchg
lret
sub
mov
loopne
mov
stos
add
lahf
mov
push
addr16
sbb
add
pop
xchg
jns
in
sbb
push
xchg
jl
dec
testb
insl
lret
ds
pushl
pop
jmp
scas
cmpb
pop
jns
test
movsb
or
pop
orl
cmpsb
xchg
jo
cld
push
fcmovnbe
add
xchg
xchg
daa
inc
dec
movsb
xor
inc
cmpb
mov
inc
in
pop
aas
jne
out
ja
add
insb
push
inc
xchg
lea
nop
mov
mov
pop
adc
xchg
pop
push
xchg
movsb
xor
xor
xchg
lcall
mov
cld
in
out
xchg
jmp
inc
std
hlt
aaa
fcomps
or
in
xor
add
test
mov
add
mov
mov
pop
xor
xlat
popf
cwtl
popf
imulb
loop
mov
sub
cmc
loopne
push
sbb
sti
outsb
jne
xor
mov
mov
aaa
cmp
out
inc
jmp
dec
mov
dec
push
jge
xor
aam
fwait
adc
pop
jp
pop
dec
negb
cltd
push
dec
jns
mov
pminub
sahf
rclb
push
ret
jge
inc
push
jp
bound
push
xlat
or
dec
jg
lock
or
xor
out
and
xchg
cli
les
in
dec
aam
cmpsb
jb
fs
stos
mov
cmp
mov
mov
aad
out
fmuls
int
inc
mov
or
std
jp
arpl
int
xchg
and
mov
dec
rorb
fistpll
pusha
inc
jg
jecxz
sbb
idivb
fnstcw
push
inc
push
shll
mov
push
lds
testl
adc
jns
mov
test
fiaddl
pop
imul
sub
insl
push
mov
ss
push
arpl
rorl
lds
lret
aas
xor
dec
pop
aas
pop
push
fwait
inc
sub
lods
js
mov
xchg
icebp
xchg
pop
cld
mov
pushf
mov
es
mov
jne
sub
test
push
jo
fisubrl
xchg
xchg
outsb
frstor
insb
and
jae
lods
push
and
fcmovu
or
les
add
les
inc
mov
call
xchg
jge
das
inc
push
mov
arpl
out
ficoml
push
scas
insl
mov
add
subb
jg
shrb
jle
jb
xchg
pop
in
or
rcr
lret
addb
movsl
insl
inc
fcom
in
xor
push
pop
mov
sub
push
daa
sbb
sbb
test
push
js
fidivl
scas
les
inc
int3
xor
sbb
into
adc
add
int3
mov
inc
cmp
mov
je
adc
das
xor
popf
dec
inc
hlt
scas
pop
mov
outsb
dec
fcomps
add
leave
mov
jae
aad
mov
jl
push
pusha
jge
jle
hlt
push
adc
jp
lea
mov
lods
scas
or
mov
icebp
in
push
inc
add
or
sahf
bsf
xor
inc
xchg
loop
push
sbb
fsub
xchg
mov
bound
mov
inc
into
mov
stc
jmp
inc
out
mov
pop
push
add
test
add
outsb
fadds
pop
stos
icebp
cmpb
push
mov
sub
fisttps
sbb
push
xor
adc
jo
cltd
add
test
inc
das
loop
fists
icebp
lret
lret
mov
jns
mov
mov
mov
jnp
in
andb
push
or
into
test
inc
insl
popa
hlt
lods
add
in
and
mov
rclb
mov
pop
push
pop
push
and
mov
pop
pop
cmp
enter
iret
jecxz
lsl
adcb
mov
fs
cld
xor
cmp
mov
dec
mov
and
and
fistpll
pushf
cmp
mov
cs
or
repz
pop
loopne
std
aaa
pop
push
in
sub
lods
inc
cmp
loopne
add
fs
push
xchg
ret
mov
xor
xor
bound
cmpsl
sub
scas
pusha
jnp
and
mov
mov
push
jmp
cmpsb
mov
jbe
mov
pop
dec
cmp
pop
fistps
sub
xorb
mov
and
mov
sbb
jp
imul
sbbl
add
adc
int3
es
jp
pop
inc
sub
mov
and
jecxz
les
jae
ja
mov
add
sti
int
jle
jb
pop
xchg
inc
dec
mov
and
sub
or
fnstsw
popa
xchg
inc
shrl
push
mov
movsb
xchg
jl
mov
push
aas
lds
push
mov
lret
mov
enter
jae
out
nop
inc
push
ja
sub
xchg
add
mov
push
pop
mov
adc
push
xchg
aad
adc
leave
hlt
jbe
xchg
ficoms
cwtl
add
leave
cs
fsts
cmpsb
cmpb
adc
sbb
dec
fldcw
mov
leave
subb
adc
jns
cmp
imul
adc
sbb
adc
lods
ficomps
cmp
xorps
xchg
adc
inc
sbb
mov
insb
or
pop
jle
push
cs
push
jge
adc
cld
fistps
out
shll
loope
push
hlt
push
rorb
iret
xchg
stos
xchg
int3
xchg
outsl
addr16
jp
test
aas
pop
cmp
fs
ja
into
jbe
jns
dec
inc
mov
inc
int
add
addr16
sbb
lea
xchg
add
xchg
out
sbb
in
movb
mov
jmp
jo
sbb
pushw
cwtl
fistl
or
arpl
xchg
andl
ror
ljmp
rorl
dec
and
xchg
dec
pop
push
jb
dec
icebp
movsb
lea
hlt
stc
jl
xlat
mov
and
inc
and
aas
pmuludq
cmovno
mov
decl
jmp
out
add
or
sbb
adcb
xor
xorb
negl
cltd
lcall
sbb
mov
or
add
aad
push
dec
xchg
pop
or
xor
mov
jle
roll
shll
outsl
in
xor
cmp
mov
call
cmpsb
mov
adc
fdivr
shl
cld
adc
inc
out
push
mov
add
add
and
mov
dec
mov
or
pop
sbb
inc
push
sbbb
mov
lock
or
shr
xlat
xor
enter
pop
adc
pushf
or
sub
jmp
or
mov
jp
in
in
inc
fists
add
cmpsl
fcmovnu
nop
mov
cmpb
imul
adc
mov
in
add
push
lods
xor
mov
or
das
cmpb
mov
shrb
push
out
outsb
mov
mov
jle
jb
mov
xchg
sub
xor
in
sbb
mov
dec
dec
pop
leave
pop
jne
push
jle
sahf
mov
mov
pop
iret
hlt
inc
pop
pop
lret
imul
pop
test
push
push
or
or
call
movsb
adc
xor
sub
pop
mov
mov
add
cli
cmpsl
mov
pop
mov
loop
or
in
inc
movsl
fists
jmp
out
movsl
call
gs
jge
iret
dec
mov
outsb
jl
adcl
ss
inc
xchg
out
stos
call
incl
repnz
jno
cs
test
push
mov
xor
mov
mov
xchg
dec
es
jno
cmp
xchg
je
aad
cli
jbe
and
cmp
xor
ds
adc
inc
lds
push
adc
push
in
sub
lcall
mov
adc
insl
sbb
into
lahf
adc
clc
out
jb
jno
pushf
loopne
rcrl
enter
shl
lock
mov
fdivr
mov
std
lock
sti
clc
fwait
or
repz
lock
mov
fiadds
lret
sub
cmp
sar
repnz
test
xchg
subb
or
or
in
or
lea
pop
bound
shl
pop
cmp
push
push
popa
icebp
add
mov
out
sbb
jg
je
cld
pop
out
rorl
cmp
lods
shl
das
jge
das
std
pop
sbb
rorl
ja
adc
test
jbe
xchg
mov
pop
jl
push
lret
out
stos
popf
stos
inc
and
xor
or
insl
push
sarb
jnp
adc
pop
scas
daa
xor
cmpsb
pop
mov
lret
mov
das
stos
push
movsl
outsl
pop
popf
test
mov
mov
sti
add
dec
jb
jno
je
ror
or
pop
mov
addl
ljmp
data16
repnz
xchg
jbe
inc
adc
dec
mov
mov
notl
jb
inc
xchg
scas
mov
in
ret
test
xor
ret
leave
arpl
pop
cmpsl
dec
insl
cmp
out
xchg
mov
shll
leave
dec
insb
sahf
xor
jmp
jo
out
stos
xor
fcom
sub
and
push
pop
dec
and
jl
ljmp
jmp
subl
ss
jae
clc
daa
mov
nop
out
push
add
mov
loopne
jl
inc
xchg
dec
daa
mov
stos
inc
aas
xor
add
xchg
int
loope
mov
mov
sub
pushl
dec
pop
insb
rorb
ss
adc
sbb
insl
out
jp
data16
xlat
xchg
add
imulb
lret
push
fs
cwtl
or
scas
aaa
pop
fst
pop
lret
pop
ljmp
pop
or
popa
and
xchg
testb
dec
sub
push
jmp
aad
add
shll
add
ljmp
mov
ljmp
cli
sbb
and
inc
cwtl
insb
pop
shlb
sbb
lock
lahf
test
pop
xor
xchg
clc
jecxz
adc
adc
lret
pop
sbb
and
or
out
adc
xchg
sbb
cwtl
xor
cmc
pushf
mov
cmp
add
in
mov
fs
push
popa
cmc
pop
in
xchg
sbb
dec
shll
jmp
outsb
mov
ret
pushf
mov
jmp
dec
pop
xchg
pop
cmp
push
mov
loopne
add
jnp
repnz
cli
push
loopne,pn
xchg
ret
push
sbb
sbb
sub
xchg
mov
stc
push
nop
aad
jmp
call
add
mov
jne
jo
inc
mov
mov
sbb
pusha
subb
xchg
lret
call
xor
xchg
out
xchg
lods
xchg
les
mov
and
cmp
andl
lock
xchg
shrb
or
loop
inc
cmpsl
xchg
daa
mov
pop
mov
push
out
je
pusha
and
les
data16
pop
jecxz
add
jno
loop
lret
cmp
ret
xor
add
jb
sub
mov
sub
jmp
mov
jb
push
repz
jmp
std
stos
mov
cmpsl
gs
mov
scas
fstpl
fcmovne
sub
ret
mov
rcrl
jge,pt
inc
and
movsb
stos
cmp
fisubrl
push
mov
lea
pop
inc
repnz
in
not
cmpsb
add
xchg
rolb
mov
fs
xchg
stc
mov
jne
das
int3
insb
lods
popa
cmp
ss
stc
cmp
dec
sbb
mov
adc
mov
jle
mov
xchg
nop
adc
adc
sub
call
repz
leave
sahf
add
push
fcompl
xor
sub
in
xor
xlat
and
push
mov
jg
fnstsw
int3
mov
adc
icebp
push
test
mov
jg
or
lret
push
ja
jg
int
xchg
mov
rol
movsb
adc
and
cli
jae
cmp
decl
fisubl
sbb
fcompl
fsubrs
pop
jmp
out
out
inc
aam
int3
cmp
sub
aaa
inc
push
jge
and
imul
daa
pushf
sar
jbe
xchg
inc
out
fwait
cmp
push
fwait
clc
and
push
or
jge
sbb
inc
aas
fld
shl
xchg
jecxz,pt
pop
in
xchg
mov
xchg
outsl
inc
xor
mov
sub
clc
push
sti
dec
mov
sub
xchg
popa
mov
inc
mov
and
inc
dec
out
into
out
arpl
pop
sbb
xor
jbe
imulb
hlt
lahf
mov
xor
sub
sub
cwtl
into
ficoml
lahf
lret
jle
pop
push
xor
popa
and
cmp
xchg
lret
les
cli
std
xchg
jmp
out
adc
shlb
cltd
adc
adc
clc
bound
aas
add
adc
movsl
stos
cmc
xorl
pop
dec
lcall
shll
cmovbe
sub
push
inc
orb
insb
sbb
test
push
repz
sbb
scas
push
xchg
add
std
jl
xor
daa
cld
test
add
dec
xchg
adc
adc
add
cmc
push
dec
lods
mov
add
fdivrs
inc
addr16
stos
add
sti
out
inc
mov
outsb
enter
int
xor
inc
loope
cwtl
enter
push
xor
cld
movsb
pusha
cli
mov
mov
xchg
mov
out
mov
scas
mov
mov
adc
ds
pop
push
ror
lret
jnp
sub
dec
and
fcmovnbe
in
jnp
push
paddusw
rcr
jecxz
rorl
test
fiaddl
mov
mov
js
xchg
push
add
arpl
inc
xlat
leave
stos
mov
test
adc
or
mov
pop
xor
mov
add
add
popa
jno
xor
sbb
movb
movsb
pop
xchg
jle
jg
sub
iret
pop
jno
xor
in
stc
test
outsl
outsl
aas
xor
repnz
rolb
mov
sub
movsb
xor
fsubl
jg
les
xor
test
inc
repz
inc
cmpsl
and
cmpb
lods
mov
sub
mov
ss
mov
enter
outsl
xchg
adc
dec
pop
and
daa
fisubrl
aas
std
cmpsl
dec
inc
jns
in
out
jbe
ret
mov
dec
ret
inc
pop
xor
mov
ret
pop
es
jae
call
adc
fs
xor
or
cmpl
cmp
dec
inc
xchg
push
mov
jb
mov
mov
add
xor
push
sub
pop
fnstsw
jo
outsl
cmp
int3
lret
dec
sbb
inc
mov
std
filds
sub
mov
sub
popa
xchg
inc
push
pop
xorb
add
divb
in
scas
imul
xchg
mov
pusha
pop
adc
popf
popa
inc
outsl
ficoml
cltd
out
daa
adc
mov
mov
mov
pop
sti
jecxz
fdivl
aad
pop
sub
ret
fsubrs
and
out
jecxz
pushf
jnp
lahf
add
mov
lds
pusha
stc
xor
cmp
sarb
popa
nop
sub
inc
add
nop
sub
fnstcw
ret
int3
outsb
jl
jbe
imul
out
mov
mov
movsl
jb
adc
push
fildl
mov
sub
aaa
hlt
xor
xchg
pop
xchg
call
dec
idiv
jns
test
rcr
cld
testb
jp
mov
dec
gs
lods
mov
pushf
stc
shl
cli
sbb
das
adc
xor
arpl
add
inc
sbb
dec
test
cli
mov
jne
xchg
pop
jp
mov
sub
out
xchg
shlb
xchg
sub
test
xor
mov
xchg
cmp
mov
mov
das
in
xchg
into
cmp
mov
imul
or
addr16
sbb
lods
push
add
push
lds
stc
xchg
pushf
sbb
fstl
cwtl
dec
jmp
das
add
mov
insl
or
repz
mov
out
lret
scas
sub
outsl
and
testb
rcll
outsb
or
push
sbb
push
pop
sahf
sbb
adc
test
sbb
push
mov
imull
adc
and
or
adc
mov
push
gs
mov
jno
iret
popa
mov
sar
cmpsl
adc
dec
push
cltd
fs
loope
leave
mov
push
adc
test
pop
pop
cli
pop
mov
test
jl
adc
bound
fsubp
cmp
aam
lret
lret
pop
cmovl
adc
clc
jo
sbb
insl
jns
fnstsw
jo
sub
jb
and
stos
lcall
xchg
cltd
push
xlat
jae
inc
cmp
inc
or
addl
dec
fdiv
sbb
push
roll
mov
in
lret
int3
mov
icebp
fdivrs
jns
mov
mov
aam
stos
mov
add
call
sbb
lahf
fldt
mov
cs
inc
jb
xchg
pop
fsubs
iret
sti
gs
dec
test
mov
xor
inc
cld
pop
test
ljmp
mov
adc
mov
jns
or
xchg
into
or
jae
pushf
adc
mov
dec
outsl
sub
stc
jo
mov
loope
into
cltd
fistl
jge
add
jb
pop
ficomps
sbb
and
scas
lds
inc
out
in
lahf
rcr
ja
popa
idivl
pushl
cmpl
fsubrl
shr
jbe
xor
xchg
push
call
sbb
nop
ds
leave
test
push
movsb
jge
sub
mov
dec
jo
dec
je
push
or
push
jno
mov
fadd
ret
push
inc
js
sub
test
insb
stos
mov
shlb
mov
dec
fs
lods
loope
cmp
pop
inc
out
inc
push
lcall
add
mov
mov
jecxz
pop
xchg
or
gs
fdivrs
pop
inc
jg
sbb
add
ds
push
jno
jno
xor
fs
xchg
out
push
cmp
adc
xchg
test
jae
push
js
loope
addr16
dec
mov
jne
jne
pop
lock
cmpsl
xlat
ljmp
jo
movsl
sub
sub
push
xlat
hlt
pop
leave
mov
sub
cmpsl
dec
adc
jns
and
shll
add
add
aad
mov
addr16
sbb
mov
popf
lcall
enter
mov
movsl
push
lret
jge
out
imul
dec
push
andb
jp
push
ds
mov
mov
jo
int3
push
outsl
aam
cmp
mov
movsb
jecxz
divl
mov
mov
mov
mov
mov
dec
pop
testb
mov
fistpl
test
inc
and
roll
in
decb
fidivrl
adc
scas
mov
test
fdivl
js
jae
xor
mov
pop
fldt
ss
pop
add
frstor
push
dec
jae
push
push
enter
es
cmc
dec
mov
data16
xchg
xor
scas
add
jb
imul
cmp
fidivs
aad
inc
mov
cwtl
xchg
mov
pop
mov
hlt
shll
xchg
int
je
xchg
rcrl
div
mov
icebp
add
push
cltd
insb
push
jbe
xchg
lret
shlb
ja
stc
scas
add
xchg
and
sub
fs
es
faddl
outsl
dec
mov
mov
jmp
and
inc
jae
sub
jbe
cld
push
notl
push
sbb
movsl
aad
mov
in
stos
push
push
cmp
dec
pop
dec
jl
mov
bound
insb
fcomps
aas
add
outsb
nop
js
push
mov
inc
in
add
out
mov
aad
ret
jno
lret
push
pop
mov
mov
jbe
jnp
jmp
aad
sbb
data16
xchg
and
pop
in
sbb
mov
arpl
push
sbb
dec
loope
inc
push
cmp
push
bound
clc
inc
stos
push
add
push
adc
mov
push
dec
cmc
enter
fwait
ss
std
xchg
das
dec
ret
or
mov
lds
fidivl
xlat
insb
fincstp
fwait
jp
bound
std
es
add
xchg
sub
jg
bound
cltd
call
fistps
test
add
dec
clc
inc
rcrb
cmp
mov
int
dec
inc
insl
push
xor
pop
dec
jb
arpl
jmp
shll
stos
shlb
mov
subl
sarl
scas
sub
out
int
and
push
sub
and
sub
call
ret
aad
xor
push
test
lock
addr16
add
dec
cmp
mov
stos
ja
mov
ss
imul
xchg
adc
dec
mov
pop
leave
imul
lret
pop
jl
popa
mov
mov
push
mov
lds
pushf
les
adc
mov
out
jmp
mov
mov
notl
jns
cmp
inc
pop
test
insl
mov
cli
cmp
pop
mov
popa
adc
sub
cmpsb
mov
leave
add
mov
mov
adc
pop
add
andb
jecxz
mov
cmpsl
fidivrs
jle
push
out
pop
push
inc
dec
adc
mov
je
mov
push
xchg
mov
movsl
sub
mov
adc
testb
jg
iret
movsb
cmp
dec
add
lret
pop
int
sub
lock
jno
dec
sub
pop
or
lcall
fsub
loop
xor
mov
cmp
pop
sub
lods
loope
fadds
loopne
aaa
xor
dec
mov
inc
addr16
cltd
xor
lahf
lods
push
cmc
pop
push
mov
mov
loope
cmpsl
push
inc
push
insl
pushf
or
cs
xchg
cli
sub
sub
sbb
cwtl
test
xor
xchg
ret
lock
and
xlat
ret
pop
inc
jae
xor
lds
adc
in
dec
lahf
repz
mov
jg
mov
mov
sub
stos
fdivrs
sbb
adc
movsb
push
cmc
cmp
fimuls
sbbl
ljmp
push
lods
lcall
lret
rclb
pushf
sti
sub
loop
xor
sarb
ret
lods
sub
in
fdivr
fs
dec
xor
out
cmp
xor
ja
mov
sbb
sbb
mov
or
push
fsts
dec
cli
loope
xor
inc
xchg
aas
loope
dec
or
inc
cmp
fistl
mov
lret
mov
sub
jns
xor
into
aas
jne
test
in
xchg
insb
test
lret
jo
scas
test
jmp
push
aam
inc
fisubrl
xchg
jmp
mov
adc
insb
pushf
idivl
aaa
fwait
cwtl
loopne
sbb
cwtl
movsl
shrl
adc
push
cmpsb
mov
aam
iret
les
in
cmpsl
arpl
cmpsb
jno
mov
mov
addl
jb
fcmovu
xchg
pop
das
push
pop
sub
or
es
lret
pop
in
es
cmp
divl
int
mov
scas
push
roll
jp
mov
dec
xchg
jo
push
cmp
mov
and
fisttps
scas
xor
test
xor
xchg
dec
add
mov
sti
into
push
ret
popf
ljmp
sub
outsb
movl
hlt
xor
pop
out
in
xchg
add
mov
aaa
xchg
outsb
or
test
jmp
mov
in
adc
gs
push
cmpsb
dec
sbb
jle
pop
in
stc
out
cmc
roll
push
pushf
push
sbb
fnstsw
cltd
out
sarb
xor
add
jmp
sbb
pop
lret
dec
adc
outsl
gs
out
pop
cltd
mov
inc
test
inc
shlb
dec
jl
mov
add
fists
cmp
test
pop
mov
inc
dec
gs
je
scas
or
insb
stc
dec
cwtl
stos
pop
cli
jne
mov
pop
dec
mov
dec
mov
testb
shl
xchg
sub
lds
cs
add
por
rcll
shl
jp
int
mov
cmp
xor
push
aaa
jb
int3
jae
sbb
cwtl
inc
add
daa
cs
push
enter
cmp
mov
fs
xacquire
push
lahf
jns
dec
and
or
xchg
inc
add
push
repnz
mov
pop
andl
push
lods
pop
jnp
push
mov
and
loopne
das
and
shll
xorl
bound
mov
cmp
xchg
aad
ja
or
loope
mov
pushf
shll
dec
fcomps
adc
cmp
push
into
es
out
lods
dec
sahf
lret
int3
rorl
daa
rorl
dec
loop
lret
ja
out
mov
fldt
sub
dec
mov
ja
pop
xor
loop
loop
ret
cmpl
jbe
loop
jecxz
pop
or
cmpsb
mov
xchg
cmp
out
sbb
sub
data16
dec
loope
push
call
sub
out
ficomps
pop
sub
sub
mov
ficoml
or
mov
decl
lret
sub
daa
mov
mov
test
call
jno
xor
rep
sub
jge
sub
mov
lret
mov
jp
mov
enter
rolb
dec
rcl
dec
mov
mov
sub
lret
lds
or
mov
or
test
cmp
add
aad
cwtl
xchg
push
adc
or
rcl
mov
dec
jecxz
cmp
jecxz
mov
mov
push
fists
cli
sbb
jmp
mov
xchg
ljmp
lods
pop
sbb
lcall
pushf
fninit
pop
rolb
push
mov
imul
fldt
jbe
jl
pop
mov
add
aaa
mov
fcompl
push
and
loop
shlb
jae
push
jae
add
fsubl
loop
test
mov
aad
test
into
fnstcw
xor
lret
adc
mov
aam
jno
popa
jne
imulb
icebp
repz
push
clc
jle
stos
subb
jp
ds
popf
mov
sub
jmp
sbb
inc
pop
test
movb
sub
pop
sub
popf
test
push
xor
push
fwait
cmp
adc
outsb
popf
addr16
dec
loop
mov
jo
push
push
sub
outsb
pop
mov
repz
add
cmp
sub
mov
stos
adc
rcrb
or
scas
sti
lock
mov
fdivr
push
roll
jl
mov
ss
mov
movsl
sub
repz
test
and
push
rcll
mov
loopne
jns
movb
jmp
inc
cmp
lock
and
jo
arpl
push
mov
and
fcmovbe
fnstenv
mov
and
ds
in
sahf
push
movsl
or
mov
xchg
jns
call
mov
mov
rclb
lahf
popf
into
and
int3
add
jmp
sub
pop
clc
cmp
test
pop
lret
fnstsw
add
xor
shrl
pop
ret
cwtl
sbb
jg
mov
cmp
gs
cltd
and
iret
test
shrl
jl
jmp
outsl
push
stos
and
mov
cmp
add
pop
sbb
jl
jnp
cmc
pop
aas
push
fmuls
sbb
pop
inc
dec
std
popa
add
pop
pop
lock
inc
and
mov
mov
pop
je
xchg
and
push
and
sahf
cmp
push
mov
jbe
lea
push
fcomip
clc
aas
pop
lods
cli
pop
ret
int
push
inc
inc
into
xlat
and
fidivs
push
pop
xchg
leave
stc
gs
ret
in
and
adc
pop
pop
inc
lea
fistpll
jns
popa
dec
mov
sbb
sahf
aas
pop
popa
outsl
call
xchg
xor
mov
lods
in
mov
daa
add
add
loope
pop
jne
cld
cltd
fucomip
dec
jge
xchg
push
dec
inc
jecxz
xorb
fdivrl
aad
daa
cmp
mov
fidivrs
outsl
dec
stos
xor
lods
lret
fidivs
hlt
push
xchg
mov
cmp
fstp
call
hlt
aam
les
add
xlat
hlt
daa
jg
jnp
jbe
out
pop
push
push
cmpsb
xchg
fldl
dec
roll
push
jmp
sti
orb
fbld
cmpsb
sahf
sbb
sub
jg
cmp
fisubl
mov
push
popf
fwait
dec
popf
iret
test
lahf
jbe
fwait
pushf
xchg
lods
cmc
xchg
and
test
pop
imul
fists
jl
sub
inc
hlt
jno
pop
mov
push
push
push
xchg
sbb
push
inc
jns
lods
stos
jge
sub
jno
mov
addl
push
mov
insb
push
add
ficompl
ja
out
out
xchg
and
cmp
outsb
fcmovb
cmp
jge
jl
xor
in
inc
sub
mov
cmp
xlat
cmp
mov
daa
mov
imul
adc
inc
test
mov
stos
pop
repnz
add
ljmp
mov
adc
mov
out
jns
push
cmpsb
lock
addb
mov
cmp
fmull
xchg
mov
xor
nop
mov
inc
jg
repz
mov
decb
mov
insb
or
push
jb
test
outsl
aaa
rolb
outsb
jmp
cmp
cmpsl
xor
out
fwait
ss
jmp
sub
dec
shll
sub
cmpsb
and
push
lock
dec
ja
movsb
pushf
pusha
inc
fcoms
mov
movl
outsl
cwtl
pop
stos
icebp
push
cmp
sbb
adcl
mov
inc
push
in
mov
nop
inc
aaa
and
mov
rclb
shr
sub
mov
fadd
fsubs
fcmovnb
jecxz
sub
arpl
cmp
cmp
jle
aas
lock
lahf
scas
fsubrp
jb
cmc
aaa
sub
or
orb
js
push
btc
notl
fnstcw
std
shlb
mov
cmpsb
sti
in
stos
insb
insb
stos
mov
fiaddl
jmp
adc
imul
mov
in
lds
xchg
insl
inc
inc
cmp
cmp
push
addr16
iret
clc
inc
xchg
mov
clc
mov
mov
mov
jns
cmp
bound
stos
mov
and
push
push
je
pop
xchg
pusha
addr16
test
pop
sub
inc
std
sarl
sti
mov
testl
dec
mov
push
sub
jbe
ljmp
adc
dec
ljmp
enter
pop
out
push
mov
out
jp
aad
ret
inc
mov
xchg
cmc
jns
es
aaa
adc
rcrl
lods
cmp
in
add
in
cli
in
hlt
mov
add
imul
mov
in
lods
xor
fisttps
out
and
pop
add
add
das
sbb
add
fldenv
sbb
das
jns
xor
dec
xchg
push
idivb
jnp
xchg
cli
insl
or
pop
sub
pop
mov
out
jno
call
pop
cld
fcmovnbe
in
jecxz
sbb
mov
and
lahf
imulb
fnstsw
or
mov
clc
lock
shll
les
jmpw
dec
mov
inc
mov
mov
xchg
sbb
mov
into
jmp
mov
and
stos
inc
dec
ret
inc
lock
adc
bound
pop
xchg
pop
daa
das
sbb
aad
loop
xchg
js
stos
dec
lret
jbe
sub
cmp
xor
dec
adc
mov
addl
mov
adc
in
jnp
inc
cmpsl
inc
lcall
fistps
push
into
outsl
xchg
dec
xchg
mov
ds
jmp
push
jnp
test
hlt
jo
das
pop
and
sub
pushf
fidivl
insb
jmp
mov
push
inc
shlb
mov
mov
popf
xchg
mov
inc
push
loop
jg
lock
loop
jo
jecxz
xlat
mov
add
dec
pushl
xchg
mov
sbb
sbb
cld
int3
jmp
mov
into
push
push
cmp
sub
dec
mov
and
xor
jnp
bound
adc
in
adc
into
movsl
in
pop
push
sub
adc
dec
push
mov
aaa
fwait
mov
sub
pop
jne
sbb
xor
cmpl
dec
add
fisubrs
dec
sub
xchg
sbb
xchg
imull
mov
dec
mov
pop
xchg
sti
stc
mov
cltd
mov
mov
pop
shlb
enter
fs
je
sub
jl
mov
mov
aaa
sbb
orb
inc
aaa
aaa
or
lods
cmp
stos
inc
lret
xlat
add
add
push
jp
icebp
add
fldenv
pop
cs
aas
scas
inc
xor
fsubr
ja
xchg
in
inc
jge
and
in
sub
lahf
or
push
sar
and
out
mov
sbb
jnp
and
mov
outsl
repz
stos
jnp
jbe
mov
inc
hlt
sahf
ljmp
fldcw
sub
sbb
data16
cmpsb
xchg
add
fstpl
and
push
xor
mov
dec
out
sbb
in
mov
ja
push
mov
movsl
jmp
sbb
mov
and
stos
xlat
inc
jle
outsb
and
mov
xor
mov
push
or
jb
lods
ficomps
jl
jp
inc
fwait
mov
pusha
or
xor
dec
push
and
adc
in
test
jne
xor
dec
inc
sqrtps
sbb
loop
les
pusha
and
pushl
cwtl
out
sti
jle
fldenv
ret
leave
daa
outsl
cli
pop
jo
dec
cwtl
cmp
aam
pop
pop
out
push
in
cmpsl
adc
jbe
ret
fcoms
dec
inc
xor
jnp
jle
inc
flds
rcrl
pop
movsb
in
cli
xchg
and
call
mov
decb
lds
sub
mov
xor
xlat
mov
inc
out
mov
sub
shl
jmp
or
sub
add
xor
fdivl
idivb
cmc
push
nop
sbb
stc
mov
cmp
and
push
and
fs
es
and
push
xchg
inc
push
mov
pop
mov
jl
enter
test
mov
out
cwtl
out
test
cmpsl
jmp
mov
sub
cmp
inc
out
and
cld
inc
and
or
mov
add
mov
loopne
push
push
xchg
dec
pop
sahf
stos
push
adc
mov
mov
shrl
sbb
aas
aas
cmp
pop
dec
or
push
js
mov
adc
adc
ljmp
cli
rcll
enter
inc
adc
mov
push
lcall
mov
out
dec
sarl
int3
popa
jge
adc
mov
jmp
ja
sbb
outsb
into
cmp
push
lock
adc
movsb
jbe
sub
cmp
jbe
stos
jae
adc
clc
popl
or
mov
iret
test
mov
adc
aaa
fmulp
dec
jecxz
push
adc
add
fs
std
mov
xor
ja
add
insb
inc
mov
js
xchg
mov
nop
and
ret
mov
in
mov
adc
rol
add
sbb
mov
add
fwait
rorb
dec
movsl
arpl
into
daa
xor
or
test
and
pusha
addr16
loop
pop
ljmp
mov
and
sbb
les
cmp
repnz
inc
cmovbe
leave
orl
jo
lahf
and
test
inc
xchg
js
iret
sub
lcall
adc
mov
bnd
and
push
or
test
or
xchg
and
mov
inc
scas
pop
lock
cmp
mov
or
add
mov
sub
sbb
es
repz
mov
gs
mov
mov
mov
fnstsw
lcall
adc
test
sbb
cmpsb
in
ja
ficoml
lahf
pop
sub
fdivl
inc
cmpsb
into
add
add
jge
mov
lock
sti
sahf
push
mov
cwtl
movsl
inc
leave
movsb
test
in
add
in
push
repz
sbb
in
adc
jmp
mov
push
pop
gs
mov
cmp
pushf
adc
and
inc
and
sub
pop
aaa
inc
pop
lods
je
jo
xchg
repnz
stos
push
cwtl
xchg
iret
or
sbb
daa
mov
int
les
sbbl
pop
lods
xor
push
pusha
sbb
pop
enter
test
test
test
xchg
movsb
popf
out
ss
imul
movsb
out
xor
lods
inc
les
lret
xorl
popf
icebp
dec
xchg
enter
movntps
add
pop
adc
jg
jecxz
and
pop
mov
sbbl
mov
in
mov
jae
lretw
fcoml
repz
push
cmove
push
inc
movsl
push
cmpsl
bound
pop
mov
in
int
cs
pop
or
ds
and
mov
dec
js
scas
sub
mov
add
dec
cmp
fiadds
incl
loope
outsl
bound
pop
aaa
das
mov
std
add
les
dec
outsb
test
sbb
pusha
cmpsl
icebp
nop
and
lret
lock
jmp
or
xchg
push
push
fistpl
fwait
mov
inc
inc
mov
pop
fs
fistl
adc
pop
fcoms
xor
mov
adc
fmuls
popa
pushaw
fstpt
arpl
mov
pop
pop
fistl
sbb
push
or
mov
ss
xchg
adc
jno,pt
or
xchg
lods
mov
ss
xlat
pushf
out
stc
dec
testl
scas
ds
xlat
sti
shll
adc
movsb
mov
cli
sahf
gs
loope
lock
fadds
shl
testb
add
adc
sub
mov
mov
stos
es
and
xor
jae
out
cs
xchg
pop
add
xor
mov
push
in
adc
add
inc
jae
mov
mov
xchg
popa
push
jle
repnz
pop
cmp
add
or
stc
gs
add
mov
pop
and
loop
pop
mov
fdivr
mov
xchg
pushf
xor
xor
shll
and
cmpsb
mov
mov
cmpsb
xor
fs
pop
faddp
inc
jp
sbb
jno
jnp
and
and
cmp
mov
inc
fwait
sub
mov
ja
stos
and
mov
jns
cmpsb
in
mov
movsl
repz
lea
push
outsl
in
sub
in
cwtl
aad
jle
insb
xchg
pop
lcall
icebp
scas
les
xorl
dec
jmp
jno
enter
pop
inc
mov
mov
ficoml
xchg
push
rcll
push
xchg
push
cmp
test
mov
dec
mov
repz
cmpsb
push
adc
repz
mov
add
je
xchg
add
sti
movl
adcb
push
sub
test
mov
and
dec
cmp
jmp
aas
in
pusha
shlb
sbb
in
loopne
jge
xor
xor
pop
lea
in
lret
es
push
xor
cmp
xchg
jb
push
push
test
aam
and
ds
flds
mov
dec
mov
cmp
push
and
add
pop
and
lea
clc
test
fnsave
mov
mov
and
jecxz
aad
ret
and
pop
xchg
push
insl
test
mov
xchg
mov
shrl
movsb
rorl
leave
popa
push
dec
or
out
add
fstps
test
inc
add
dec
jno
insl
and
inc
dec
decl
out
mov
sbb
das
add
mov
and
leave
hlt
inc
lea
inc
cmp
mov
push
fsubs
push
or
pop
push
je
xor
std
das
fisttpll
bound
stos
loop
in
iret
cmp
cmp
jb
add
adc
sbb
xchg
roll
adcl
inc
jns
cmp
push
es
dec
outsb
and
pusha
or
sbb
adcl
push
push
cmp
fstps
mov
cmp
pop
push
mov
scas
mov
pop
mov
ffreep
fcoms
mov
dec
dec
das
mov
cmpsl
cmp
sub
mov
sub
test
ja
icebp
jecxz
loope
sbb
pop
in
shrb
pusha
inc
hlt
movsl
insl
arpl
lds
jbe
in
xor
test
sbb
lods
icebp
push
and
lods
fmuls
lods
and
or
lret
jge
js
xchg
xor
xor
mov
cmp
jge
int3
jnp
mov
sub
cmpsb
andl
adc
sahf
aaa
mull
lahf
mov
pop
sti
sub
aas
xor
shr
push
xchg
fdivs
or
loopne
sub
dec
cmp
rorb
or
call
xorl
xor
cmp
outsb
cmp
jge
test
push
enter
and
fimull
je
push
mov
mov
mov
and
add
inc
mov
clc
ds
popa
sub
rcrb
mov
push
xchg
sti
dec
adc
popa
push
push
sbb
inc
shrl
rcll
cmp
fldt
xchg
ret
dec
or
cmc
sbb
sbb
xchg
in
or
jecxz
lods
add
shll
jle
push
fdivrs
hlt
push
aaa
enter
xor
adc
aas
and
neg
xor
mov
cmpb
in
dec
leave
jno,pn
mov
scas
call
sar
cmp
lahf
into
sbb
jmp
in
lods
addl
enter
mov
xorb
fsubl
lahf
out
jne
dec
pop
test
out
fsubrl
out
cltd
adc
push
out
xchg
sti
pop
dec
sbb
pop
pop
jl
cmp
add
jns
add
nop
push
add
pop
scas
jp
ljmp
xor
mov
rcr
inc
dec
pop
int3
ret
test
shlb
and
sbb
into
xchg
xlat
clc
js
leave
add
inc
cwtl
mov
add
movl
out
adc
cmpb
nop
loopne
xchg
lock
pop
imul
jno
negb
out
push
jae
adc
ja
jmp
sti
jecxz
pop
inc
insb
add
mov
insb
inc
jg
jno
adc
dec
movsl
in
adcl
push
add
inc
or
jmp
sub
pusha
mov
inc
xchg
lods
arpl
jge
cwtl
sub
adc
cmpsb
cwtl
ds
test
leave
insl
ret
repnz
add
ss
inc
xchg
push
dec
data16
mov
pop
ljmp
sbbb
dec
sbb
repnz
adc
add
cmp
arpl
sahf
xor
add
mov
xchg
ret
aaa
imul
mov
out
pop
lcall
mov
pop
pop
rclb
xor
lcall
push
push
cmp
rcrb
test
int
dec
xchg
dec
xchg
dec
loop
mov
subb
push
pop
push
imul
jns
and
movsl
cmp
add
enter
sub
sub
pop
push
jecxz
int3
in
ds
sub
lods
xchg
pop
and
testl
push
pushf
out
sbb
mov
pop
sbb
data16
es
jg
and
cs
sbb
or
xchg
inc
cli
mov
rcll
into
mov
mov
inc
aas
das
sarb
xchg
or
shll
xchg
lcall
jle
cmc
or
ja
or
dec
jb
add
out
jnp
mov
add
ret
aad
lea
lcall
adc
jae
mov
call
jns
sbb
mov
int
loop
cmp
sarb
shr
leave
mov
repz
sub
test
or
xor
pushf
add
jbe
adc
dec
lock
jae
lahf
xchg
test
sbb
mov
mov
jecxz
int3
cmpsl
mov
fidivs
xchg
lcall
inc
mov
imul
add
negb
xlat
shlb
lcall
bound
inc
test
bound
sub
push
jo
cwtl
xor
cmpsl
inc
inc
or
arpl
push
jno
mov
jne
mov
mov
cmpsl
ljmp
andl
jne
push
ds
es
and
mov
dec
lret
cmp
pop
push
imul
mov
and
movsl
cmpsb
lds
push
pop
or
add
hlt
aaa
int3
addr16
dec
pusha
fcomps
vunpcklps
addb
push
sbb
in
hlt
cmpsb
dec
outsl
mov
or
jg
jmp
insl
lds
add
push
out
xchg
std
inc
shr
cmpsb
push
roll
push
shlb
push
sub
xchg
and
loopne
push
xlat
xchg
popa
and
roll
repz
mov
and
fdivrp
cld
divl
mov
in
popa
adc
inc
sub
add
jns
outsb
inc
dec
test
adc
mov
mov
xor
lods
addb
sub
xor
fldt
inc
mov
mov
add
stos
shrb
cwtl
fs
inc
repnz
xchg
cmp
jge
rorb
cmpsl
inc
scas
subb
dec
in
lcall
push
xor
xlat
push
sti
sahf
or
int3
cmp
and
xor
lods
sbb
loope
and
les
cli
inc
sahf
and
cmpsb
into
mov
das
pop
jo
push
mov
scas
outsl
push
cs
jp
push
push
fidivs
cwtl
jmp
inc
cmp
push
inc
negl
fdivrs
in
das
mov
xlat
ja
mov
pop
movl
mov
jae
scas
mov
cmc
dec
int
in
scas
mov
jo
sbb
cmp
and
pop
lret
mov
mov
rorb
push
inc
dec
imulb
adc
pop
repnz
xor
loope
mov
aad
outsl
mov
jl
cs
push
sub
dec
mov
and
les
mov
adc
jp
out
pop
mov
cld
bound
xchg
repz
repz
mov
gs
cmp
xchg
ret
jge
and
mov
pop
fsubr
ljmp
push
out
mov
data16
dec
ds
mov
sub
lods
pop
inc
add
cmp
int3
call
adc
adc
pop
sub
mov
fnsave
or
jl
out
and
and
adc
push
fwait
test
xor
andb
or
subl
data16
ja
ljmp
lret
or
pop
mov
sub
dec
ss
dec
mov
mov
push
or
test
mov
pop
test
dec
fst
adc
dec
sub
insl
enter
jbe
jo
movl
fstpl
lea
imul
sbb
pop
inc
add
divps
xor
push
dec
lahf
mov
mov
adc
mov
xlat
xchg
xor
or
fcompl
pushf
dec
dec
icebp
or
insb
jb
cmp
test
xchg
iret
lcall
add
push
icebp
mov
scas
outsl
lods
xor
jg
and
mov
mov
fnstenv
dec
jmp
pop
test
cs
addb
jle
jecxz
adc
mov
mov
pop
pushf
xor
lock
imul
fisubrs
mov
lods
mov
mov
rcll
sub
mov
mov
bound
mov
xor
xchg
and
pop
insl
jnp
daa
pop
in
adc
xor
push
loop
cwtl
in
mov
jbe
xor
pop
icebp
pop
jge
inc
sbb
pcmpeqd
bound
sub
jecxz
mov
push
js
pop
jle
jns
lods
and
xchg
stc
int
sarb
adc
test
pop
js
xor
lahf
movsl
mov
mov
push
pop
jns
filds
add
jl
shlb
dec
jmp
mov
mov
in
iret
idivl
scas
fidivl
popf
repnz
xchg
adc
mov
test
ret
sub
in
mov
sbb
and
sbb
test
ja
cmc
lock
aas
fdivl
test
cld
and
jmp
cmp
mov
orb
mov
lods
sub
cmpl
repz
or
pusha
inc
hlt
cmpsl
mov
mov
or
xchg
cld
push
repnz
mull
jno
aaa
stos
lock
inc
adc
pop
jo
rcr
mov
scas
pause
adc
xor
dec
and
outsb
ljmp
std
shl
rcrl
fsubp
fildll
fs
pop
rcrb
hlt
push
xchg
sub
and
jne
push
xlat
lds
push
sbb
in
xchg
daa
icebp
clc
out
and
js
cld
and
hlt
in
jne
outsb
out
ljmp
data16
sarb
sahf
sti
fwait
inc
xlat
push
pop
dec
inc
pop
jmp
cmp
pop
sbb
iret
mulb
dec
out
orb
adc
mov
mov
sub
push
and
clc
aam
cmpl
mov
out
aaa
inc
fwait
sbb
cmpsb
xor
pop
jo
mov
hlt
add
aas
sarb
inc
inc
mov
jge
fnsave
add
in
mov
mov
fdivrl
nop
fsubs
jo
enter
mov
add
aas
mov
fidivrl
adc
das
shrl
movsl
push
add
dec
in
pop
sbbb
ljmp
pop
fmull
or
pop
mov
dec
pop
adc
or
inc
xchg
out
rcll
bound
gs
jno
cmp
dec
sbb
lret
das
dec
jae
and
scas
popf
sbb
mov
fildl
add
dec
adc
xchg
leave
repz
push
in
adc
sarb
xor
in
js
mov
inc
shl
pop
je
lds
pop
sub
imul
ljmp
cmpl
adc
loope
adc
daa
sub
jmp
pop
enter
psubb
test
aas
xor
mov
xor
rolb
jo
mov
xor
inc
xchg
xchg
bound
jo
and
dec
movsl
jns
jle
icebp
or
xchg
dec
or
in
xchg
and
pop
shl
cmp
push
icebp
loopne
mov
sub
xor
in
xchg
repnz
xchg
pop
push
js
ret
or
jge
mov
mov
les
xchg
push
mov
ss
sbb
iret
ret
cltd
adc
add
mov
push
sbb
int3
cli
in
sbb
mov
dec
mov
stos
and
or
xchg
cmpsl
dec
mov
pop
mov
loop
push
jns
lods
jl
jp
jmp
cmpsb
negb
out
ljmp
push
inc
test
cmpsb
dec
mov
call
imul
adc
fwait
xor
sbb
mov
iret
imul
push
loop
int
call
loope
fs
xchg
enter
stos
sbb
cmp
lahf
ja
and
mov
add
mov
or
dec
mov
arpl
and
or
filds
push
repz
and
insl
mov
and
movsb
test
xchg
stos
idivl
xor
xor
sbb
xchg
push
fwait
xchg
loopne
jecxz
lock
enter
jbe
int
sahf
push
addl
aad
popa
and
nop
and
aad
or
mov
mov
xor
pop
jg
jae
in
jmp
pop
lret
mov
in
fs
dec
mov
xor
cs
ja
call
xchg
subps
sub
js
data16
fbld
fwait
jp
inc
inc
pop
out
push
pop
hlt
test
xchg
mov
xchg
dec
sub
cld
imull
aaa
inc
popf
add
insl
test
sti
mov
arpl
mov
cwtl
aad
iret
fs
mov
push
out
xchg
add
add
pusha
xchg
xchg
ret
cmp
dec
hlt
pop
orl
pop
dec
mov
in
aam
mov
dec
push
andl
xlat
mov
ljmp
sbb
in
adc
sub
out
iret
pop
inc
lock
mov
xchg
mov
mov
sbb
mov
inc
cmc
mov
imul
outsl
movsl
jmp
fistpll
xor
jle
test
dec
xchg
cld
add
mov
dec
lret
dec
xor
sbb
insb
add
pop
lea
mov
jle
dec
mov
insb
sub
inc
loope
dec
aaa
lods
loop
jge
iret
pushf
addr16
adc
jbe
fs
inc
or
sti
int
cmc
shlb
dec
hlt
xadd
shll
push
mov
inc
sbb
jb
out
ljmp
push
adc
mov
orb
lods
jnp
add
and
xchg
xor
fdivs
js
addr16
xchg
out
xchg
sar
inc
ret
lock
xchg
xlat
in
shl
push
mov
fsubp
sub
mov
fwait
movsl
add
in
fsubrs
stos
lea
jge
daa
cmpsb
mov
or
xchg
adc
out
ret
mov
imul
arpl
sbb
jecxz
push
cwtl
sarb
in
aam
pop
xor
fs
stos
lahf
xor
out
xor
in
divb
and
dec
mov
test
adc
sar
outsl
pop
pop
cmp
fiaddl
lods
mul
jae
pushl
push
lods
leave
aas
movsb
call
and
jne
in
iret
lahf
sub
sbb
ror
xchg
scas
pop
mov
push
pop
sbb
daa
repz
add
negl
loop
mov
fld
jg
pop
add
jae
mov
loopne
mov
sarb
push
cmp
rolb
imul
adc
mov
popfw
jecxz
push
add
sub
es
popf
out
xchg
mov
mov
jns
add
mov
dec
pop
adc
sbb
xor
push
test
cmp
scas
js
in
rorl
rcll
outsl
mov
mov
sbb
adc
dec
sahf
cmp
clc
add
test
sbb
sbb
mov
test
mov
jns
out
sbb
shlb
sub
repnz
cltd
jge
cli
xor
jp
pop
mov
jae
add
jmp
notb
rcrb
cmc
jbe
ret
repnz
xor
jns
out
popf
rcrl
repnz
adc
std
gs
int3
icebp
lods
adc
cltd
int3
pushf
pushf
jecxz
mov
imul
xchg
lock
into
scas
mov
jns
cmp
loop
repz
pop
and
pop
fistl
or
mov
mov
lock
xor
and
icebp
lret
dec
pop
cli
test
xchg
and
xchg
rcrb
test
sti
and
sub
scas
xorl
out
jg
cmp
insl
mov
jle
xor
lock
mov
in
jb
and
arpl
mov
and
push
icebp
outsl
adc
das
mov
stos
enter
pop
cmp
test
dec
in
scas
push
jo
into
adc
cmp
sub
xchg
cmp
int3
adc
push
shrb
add
ljmp
fsubl
js
cmp
aam
mov
inc
push
mov
or
loope
mov
ret
mov
and
scas
inc
lock
mov
lock
je
pop
cli
mov
cld
outsb
mov
jle
outsb
lock
enter
test
loopne
push
push
clc
in
fidivrs
and
into
cmp
les
movsb
sbb
negb
data16
subb
inc
repz
bound
and
daa
mov
test
sub
aaa
jg
push
aad
arpl
adc
fsts
mov
push
mov
jnp
xor
and
fmul
stos
xchg
or
aam
sbb
push
push
insl
mov
sti
setne
pop
xchg
adc
mov
mov
push
sti
das
popf
sbb
int3
dec
cs
pop
icebp
mov
mov
int
aas
pop
aam
xor
mov
shlb
fstps
addl
inc
and
addr16
jp
inc
cmpb
sarl
je
test
mov
jg,pn
popf
fimull
in
mov
push
push
orb
hlt
insl
mov
dec
fistl
ljmp
insl
movsb
into
sbb
push
test
xor
shlb
loopne
xchg
and
sahf
jmp
and
push
loope
or
lahf
ret
loope
ror
fwait
cli
cli
cmpl
gs
inc
sbb
push
js
outsb
cmpsl
mov
push
fimuls
je
cmp
orl
fs
and
out
add
dec
sbb
cmc
arpl
pop
sbb
mov
pusha
shll
add
xchg
sbb
mov
push
lods
addr16
xor
mov
dec
pop
push
add
fsubrl
jns
jge
sbb
ret
mov
dec
ja
xchg
jecxz
enter
jle
jb
and
repz
xor
mov
popa
lcall
das
loopne
inc
movsl
inc
data16
lahf
popa
call
cli
lcall
cmp
jl
push
cli
cmp
xchg
push
inc
je
xor
mov
vmovd
cmp
sub
mov
enter
lods
stos
cmp
cmp
cld
xchg
dec
add
pusha
repz
push
pop
mov
push
sbb
sub
add
mov
pop
mov
add
xor
dec
mov
sub
in
sarl
jae
ja
pushf
inc
fstpt
js
mov
hlt
xchg
aam
mov
cmp
dec
pop
xor
inc
pushf
les
jnp
lahf
les
mov
into
and
je
xlat
xor
xchg
jge
loopne
shlb
mov
or
js
and
inc
scas
add
cmp
sub
adc
jbe
loope
pop
dec
inc
mov
push
mov
jecxz
cmc
adc
leave
rcl
xchg
rorl
shll
pop
arpl
cmpsl
repnz
mov
pop
mov
icebp
pop
mov
outsb
inc
popf
sub
adc
loope
and
mov
xor
pop
mov
sahf
loopne
inc
bound
mov
roll
jno
aam
test
add
sub
inc
push
mov
iret
push
outsl
clc
rcr
mov
xchg
popl
xchg
adc
pop
add
dec
in
jl
push
jecxz
scas
add
mov
sbb
xor
arpl
lret
jno
and
mov
or
adc
int
cli
fs
inc
test
mov
cwtl
cmp
lods
sahf
or
or
add
sub
cmp
leave
dec
out
mov
mov
jge
ss
sub
shll
data16
xor
sbb
fisubl
add
mov
cld
or
and
cld
in
jns
jnp
pushf
xorl
xlat
xor
in
shll
loop
add
cmpsb
inc
push
dec
test
ljmp
push
cs
mov
cmp
leave
insl
or
mov
call
test
push
leave
std
xchg
mov
dec
daa
dec
xor
fsubrl
aad
test
jge
mov
push
dec
cmp
mov
push
pop
leave
pop
sub
jb
cmc
test
adc
jbe
imul
adcb
addr16
xor
insl
pop
es
and
pop
test
sub
loop
push
lds
or
push
pushf
dec
mov
and
popl
repnz
inc
orl
je
jb
dec
cld
scas
loop
loope
inc
mov
aad
outsl
xchg
mov
in
fiadds
sub
xor
int
and
jl
cmpb
test
pop
push
dec
sbbb
mov
inc
test
ljmp
in
imul
push
xchg
dec
sbb
into
jecxz
cwtl
add
push
mov
push
mov
push
sbb
push
mov
xor
pop
sbb
subb
js
outsl
adc
adc
fisubl
in
adc
stos
cwtl
fcompl
mov
gs
inc
push
ja
pop
sbb
das
jg
mov
pop
push
inc
loopne
arpl
cmpsl
pop
hlt
mov
xchg
add
add
pusha
lods
xor
push
pop
sti
fmuls
and
mov
pop
jb
fxch
and
xchg
push
dec
es
add
sub
scas
das
in
and
outsl
lahf
adc
mov
movsb
push
jb
sub
rorl
mov
mov
stos
push
jmp
dec
jbe
clc
xchg
mov
push
xchg
adc
cld
push
stc
sbb
ret
aam
push
push
les
fisubs
and
inc
test
aas
or
jnp
and
arpl
mov
mov
clc
ja
add
mov
pop
repnz
mov
inc
jg
cmpsb
idivl
sub
pop
xor
dec
rcrl
mov
jp
mov
ljmp
jmp
loope
shrb
mov
push
push
cli
and
xchg
cld
mov
sub
mov
jecxz
outsl
lret
lea
scas
add
insb
cmp
es
or
dec
push
add
xor
mov
fsubp
sbb
inc
and
cmp
add
mov
dec
movsl
leave
add
pop
ficomps
incl
xchg
mov
orl
bound
dec
and
sbb
arpl
punpckldq
call
mov
les
add
jo
leave
mov
pop
and
adc
cmp
dec
mov
leave
ret
repz
and
ljmp
call
and
dec
ret
iret
scas
mov
mov
ljmp
loope
or
sbb
xchg
push
jle
outsl
xor
out
and
data16
mov
stos
popf
xor
xor
loop
add
jle
sbb
jg
shll
cmp
test
pop
inc
xchg
jmp
loopne
jle
push
out
ja
pop
pop
xchg
push
sbb
or
dec
insb
imul
subb
les
test
lcall
mov
sbb
popl
scas
dec
bound
mov
xchg
xor
adc
add
inc
lahf
sub
loop
shr
cmpb
negb
pop
hlt
aad
inc
inc
jg
test
insl
pop
push
idivb
xchg
lret
mov
lcall
lods
mov
out
mov
scas
lcall
scas
fldenv
or
int3
sbb
dec
rcr
subb
xchg
insb
rorb
and
fsubl
cmp
mov
jg
dec
fst
sub
shrb
sub
or
or
idivb
add
int3
rorb
mov
adc
dec
adc
mov
and
dec
popa
cmc
out
hlt
or
mov
faddl
cld
xor
xchg
cmp
js
jae
xchg
sbb
scas
cltd
bound
imul
pop
repnz
std
inc
and
inc
testl
sub
daa
pop
fisubrl
inc
clc
repz
push
cmp
lods
fwait
push
jle
jge
jns
and
inc
cltd
movsl
inc
push
jns
mov
std
nop
movups
xor
addl
movsbl
out
dec
cmp
xchg
jae
xor
dec
cmp
leave
aaa
pushf
add
jmp
idivb
cs
sti
cwtl
xchg
sub
ds
jbe
les
nop
mov
jge
xchg
mov
sbb
add
dec
js
pop
push
lret
adcl
addr16
call
into
push
xchg
pop
aaa
add
out
jae
sub
cltd
shll
cmpsl
pop
xchg
and
fs
or
sbb
bound
cmp
xchg
repnz
fcmovu
lcall
clc
lds
sbb
in
fisubrl
and
and
sti
flds
es
imul
jb
arpl
push
loop
sbb
popa
cmpsl
cmc
nop
clc
repz
and
test
pop
je
int
mov
push
mov
inc
jno
jg
aad
sarb
add
sub
dec
cmp
in
insb
cmp
push
jno
popf
pop
int3
or
jo
mov
insl
js
push
mov
sbb
and
add
loopne
sub
dec
jns
push
pop
scas
push
mov
mov
test
fldl
mov
int3
mov
das
fcoms
lea
addb
dec
scas
leave
repnz
cmc
divb
ret
cmp
out
shl
cli
mov
cmp
or
adc
adc
sub
fistpll
sub
dec
or
mov
out
mov
stc
sbb
xchg
sub
aas
add
push
out
ret
mov
add
push
xor
ss
jl
mov
roll
dec
or
add
mov
fs
cltd
pop
dec
mov
jbe
sti
sbb
xchg
sbb
leave
outsl
in
push
cmpsl
jbe
f2xm1
stos
jnp
mov
push
mov
push
cmpsl
jmp
call
lds
std
mov
inc
fdivrl
rorl
mov
xor
jmp
add
or
add
xchg
mov
insb
push
test
or
lods
insl
add
je
jecxz
lahf
mov
cmp
fs
test
add
aas
cmp
or
loopne
pop
ja
or
adc
xchg
arpl
pop
arpl
aam
xor
daa
mov
aam
int3
inc
jb
cmp
stc
lds
subb
popf
movsb
sub
jae
lahf
jbe
jne
push
push
jecxz
xchg
cltd
jbe
push
add
imul
adc
jecxz
icebp
mov
xor
mov
xor
add
sbb
sbb
mov
xchg
cli
mov
xlat
and
ss
sub
sarl
addr16
popa
mov
mov
rcll
jo
dec
pop
addb
push
sub
inc
roll
mov
mov
jl
inc
dec
inc
xchg
pop
sbb
push
add
push
sub
pop
and
adc
stos
push
bound
jo
jecxz
ss
data16
in
mov
es
jp
aam
jecxz
and
shrl
push
out
fcmovnbe
inc
and
bound
rolb
pop
sbb
xor
clc
mov
lods
mov
jmp
or
sbb
stc
push
sbb
push
push
aas
aad
and
mov
ret
mov
inc
imul
pop
loope
and
test
dec
dec
or
sbb
add
inc
ss
test
das
jns
push
scas
mov
in
jae
ja
mov
lret
pusha
sbb
js
inc
nop
shll
sbbl
sahf
inc
dec
aaa
ret
cmc
les
xor
cld
mov
mov
subb
and
dec
in
xor
mov
and
test
jb
pushf
pop
addr16
or
push
in
popf
movsb
movsb
icebp
sbb
dec
add
lods
insl
nop
mov
sahf
adc
pusha
cli
jne
inc
jg
loopne
inc
and
hlt
pop
adc
outsl
in
cmp
test
aaa
jge
jbe
pop
pop
pop
xor
jmp
lods
sub
jp
jge
ljmp
call
xor
xchg
inc
lea
movsl
sub
call
movsl
jecxz
mov
or
in
cmp
push
jle
cmp
mov
mov
insb
aam
cmp
scas
mov
push
js
stc
adc
pushf
mov
or
arpl
jp
cmp
lods
and
jl
mov
push
out
js
sbb
xor
fwait
out
fisubl
mov
xor
int
lods
call
jle
outsl
mov
mov
push
jg
xor
jmp
mov
popa
sub
pop
xor
adc
arpl
pushf
pop
fdivl
out
in
cmp
jmp
int
jno
mov
xor
clc
movsb
bound
shl
cmc
mov
jo
push
push
add
pop
sub
xchg
and
push
pop
jle
push
inc
xor
lods
mov
xor
mov
int3
loop
dec
jb
cmc
add
add
cmp
push
fldenv
xor
mov
dec
sbb
outsb
add
inc
jmp
cmp
xchg
sbb
nop
jl
lret
mov
sub
lock
scas
push
mov
mov
sti
adc
push
test
add
xchg
fs
and
adcb
inc
dec
mov
pop
cmpsl
push
adc
loopne
nop
repz
pop
mov
ja
push
jle
xlat
xor
outsb
mov
pop
jge
mov
fucomp
cmp
out
mov
dec
sbb
dec
mov
jae
outsl
test
in
inc
inc
ja
xor
jecxz
sbb
or
mov
sti
push
rol
bound
lods
dec
mov
iret
jb
ja
dec
mov
xchg
out
xchg
cmp
hlt
nop
pop
or
test
cld
shlb
adc
dec
inc
out
xor
sub
add
xor
sti
popa
mov
cs
in
mov
mov
imul
lcall
or
test
mov
int3
jbe
jmp
inc
fcompl
mov
or
aaa
int3
pop
lahf
fimull
addr16
xor
sbb
pop
dec
mov
stos
gs
xor
ret
mov
jae
ja
aam
out
sbb
iret
push
mov
and
lds
pop
sarl
push
lret
add
test
xchg
mov
subl
repnz
fdiv
rcrb
pop
stc
jmp
subl
movsl
lods
cltd
mov
mov
jp
test
jno
mov
movsb
inc
jbe
pop
inc
ds
imul
jne
out
xchg
pop
mov
adc
jnp
shl
fsubp
movsl
popa
add
aam
pop
fimuls
mov
daa
push
je
test
xchg
mov
mov
xchg
sbbl
fdivs
push
push
add
insl
and
imul
hlt
shrb
sub
mov
adc
and
mov
cmpsb
inc
push
dec
je
fisttpll
sbb
ffreep
imul
inc
dec
adc
rolb
mov
dec
jge
add
xrelease
mov
xor
mov
sub
sti
jo
push
and
xchg
in
dec
cmp
ret
imul
xor
xchg
popa
mov
out
imul
mov
imul
notl
std
sub
hlt
mov
cli
mov
or
add
jno
jb
rcll
scas
mov
movsb
ficomps
fmuls
imul
pop
pop
mov
idivb
inc
adcb
lock
out
pop
mov
push
daa
xor
mov
test
adc
push
inc
js
mov
ss
jecxz
cli
cwtl
fcom
out
inc
cmp
lcall
ja
jl
das
popa
push
push
push
test
sbb
push
push
mov
cmpsl
lret
inc
pop
xchg
pop
jae
fisttpl
mov
and
je
pop
cltd
push
and
cmp
push
outsb
xchg
stos
nop
push
xor
mov
push
cmp
mov
or
jp
sub
or
loopne
push
fmull
pop
jecxz
mov
cli
pop
lret
inc
cmp
leave
jl
out
imul
mov
iret
sub
sub
data16
sub
xor
in
inc
mov
inc
insb
je
push
cmp
and
je
pushf
call
jbe
add
push
or
push
sub
roll
pop
arpl
test
cmp
lods
push
or
dec
jno
fnsave
sub
jae
das
add
fadd
shll
int3
or
mov
add
sub
sti
aad
ret
fidivrs
pop
push
int3
arpl
fwait
adc
fwait
xchg
mov
push
sbb
fs
mov
cmp
push
mov
mov
xlat
cmpsb
jne
add
push
je
inc
jg
cmp
push
es
in
inc
push
jecxz
cltd
in
lret
bound
test
sub
jp
add
xchg
jae
outsl
mov
mov
push
mov
lock
push
adc
sub
inc
ljmp
xorb
int
in
loop
repnz
and
mov
push
dec
das
dec
int3
push
sbb
mov
cmp
sub
lods
in
dec
or
dec
bound
and
and
fisttps
add
sbb
sahf
xor
rcll
push
push
lock
add
test
sbb
adc
pop
pop
imul
insb
in
in
add
aam
push
jecxz
and
mov
mov
dec
pusha
mov
pop
dec
aam
pop
mov
movsl
pop
lret
or
add
and
jp
cltd
add
out
mov
push
cmpsb
xchg
out
sahf
rclb
imul
ljmp
adc
mov
jnp
dec
cmpsb
mov
mov
jno
loop
ret
add
fistpl
push
sbb
dec
or
or
in
xchg
push
sbb
adc
mull
inc
mov
ret
and
sbb
ficompl
idivb
dec
in
and
inc
mov
test
jmp
mov
add
cltd
subb
push
rcrl
push
popa
xor
adc
xchg
clc
and
inc
test
mov
data16
inc
pop
cs
ja
push
fnsave
mov
cmc
aam
fwait
pop
inc
push
push
mov
test
fsubrs
add
mov
jge
pop
push
pop
aaa
dec
or
andb
xor
xchg
pop
push
shl
stc
jge
imul
dec
push
iret
jae
daa
repz
or
sub
iret
mov
push
ret
and
imull
lret
push
les
rcll
jbe
incb
pusha
inc
push
jno
pop
fs
std
pop
cmp
push
sub
push
mov
shlb
sbb
xor
stos
add
inc
gs
inc
and
in
lret
cltd
cmc
fcmovu
mov
xor
adc
add
insl
jb
xchg
mov
addr16
push
mov
mov
sub
mov
jns
out
mov
sub
sub
mov
add
jge
scas
int
xchg
xchg
fidivs
leave
mov
xchg
jbe
gs
shll
popf
xchg
mov
push
scas
mov
sbb
or
aas
movsb
jmp
cmp
pop
jno
mov
test
and
push
xor
adc
ret
cmpl
push
xchg
stc
cmp
dec
mov
pop
mov
aam
in
hlt
leave
aad
sub
insl
movsl
ret
lea
inc
sbb
pop
push
pop
in
test
out
sbb
lods
mov
test
rorb
mov
add
fists
push
push
push
imul
das
jle
lock
shrl
mov
or
ret
movsb
mov
hlt
insl
xlat
js
pop
xor
divb
xchg
mov
jp
call
je
leave
dec
sti
test
lahf
loope
mov
aam
mov
inc
push
lcall
jmp
jp
ja
jl
mov
pushf
or
or
je
mov
add
dec
push
jo
jbe
inc
out
js
pop
out
mov
fwait
dec
mov
in
mov
ljmp
or
mov
lock
push
or
test
xchg
and
lock
stos
dec
lods
adc
cs
out
frstor
push
ret
xchg
out
bswap
int
nop
pop
mov
and
inc
xor
aad
jno
xchg
jb
xchg
es
shlb
sbb
mov
or
std
lret
inc
cmp
insb
lret
mov
dec
sti
jno
roll
clc
push
xchg
dec
adc
fcmove
jge
push
mov
popf
je
pop
push
mov
repz
cltd
xor
pop
daa
scas
push
ret
mov
jne
in
dec
add
pop
in
out
xor
cmp
loope
mov
je
mov
aas
fcompl
not
dec
iret
mov
dec
stos
std
adc
jo
push
int3
push
js
pop
inc
in
mov
push
mov
pop
stos
in
pop
pop
mov
lods
and
xchg
or
xchg
xor
pop
adc
fadds
mov
repz
popf
es
sbb
xchg
sub
xchg
mov
loop
and
jp
test
fcmovu
or
mov
int
sbb
jno
aaa
jecxz
add
and
cmp
push
or
add
mov
and
insb
mov
pop
add
fdivl
add
pushf
stos
pop
push
mov
mov
lock
cltd
das
pop
inc
mov
cmp
fisubrl
mov
test
adc
fnstsw
imul
lds
cmp
daa
pop
xchg
cmp
int
enter
sub
pop
int
loopew
ret
adc
jge
sub
movsb
mov
and
mov
fists
jne
mov
add
cmp
ret
pop
js
mov
repnz
dec
mov
pop
and
inc
sti
out
cmp
test
dec
sahf
xor
cmp
ret
sar
cmp
shll
popa
pop
inc
xchg
xor
in
loopne
cvtps2pd
sub
jmp
jp
in
or
rcl
js
cwtl
mov
sbb
cmp
inc
jl
or
lods
ret
pop
adc
cmpsl
scas
sbb
inc
icebp
cli
dec
mov
loope
fnsave
xor
nop
or
test
inc
jp
jmp
andl
jecxz
dec
mulb
out
loop
test
add
pop
cwtl
mov
clc
push
adc
lods
loopne
cmp
jg
mov
mov
es
fildll
push
lret
push
shl
dec
repz
mov
cmc
jmp
ret
mov
push
arpl
ret
sbb
mov
sti
int3
fdivs
dec
mov
pusha
xor
in
idivb
sbb
dec
js
xor
hlt
add
or
in
fidivrs
js
aas
out
sbb
adc
mov
add
or
jnp
add
je
cmpsl
cli
lahf
or
inc
sbb
inc
stos
ret
xchg
adc
es
loopne
sbb
pop
loop
and
imull
jne
inc
xor
push
jge
inc
sbb
mov
and
cmp
mov
loop
inc
in
loop
hlt
shrb
mov
fs
cld
jnp
mov
inc
enter
fimull
popa
pop
push
xor
aas
jle
ret
hlt
push
bound
or
nop
cmc
or
mov
fwait
inc
and
add
fwait
adcb
sbb
push
std
ffree
pop
into
push
dec
pop
in
dec
mov
push
ret
inc
push
loope
mov
subb
or
fmuls
or
inc
xchg
int
ja
fcoml
sbb
mov
push
sbb
or
jg
ljmp
lahf
mov
and
dec
jg
loope
push
mov
and
lods
push
mov
push
cmp
cmpsb
mov
retw
sub
sbb
jl
lods
pop
mov
in
bound
rolb
sub
out
fcoml
arpl
ljmp
push
pushf
inc
sbb
xor
je
jbe
push
arpl
stos
nop
scas
lret
mov
imul
imul
xchg
inc
mov
add
xlat
bound
sahf
cmp
add
mov
xchg
or
fldenv
mov
loope
loopne
adc
dec
sub
mov
pop
mov
xor
push
or
push
imul
incl
in
mov
out
imul
loop
or
mov
push
dec
out
movsl
icebp
mov
mov
dec
dec
std
mov
push
stos
mov
in
sub
int
pusha
mov
jl
pop
aam
add
adc
push
sub
lods
xchg
js
dec
leave
aaa
fs
jle
adc
mov
xchg
inc
idivb
repz
movsb
aam
or
xchg
push
add
fsubs
bound
jo
mov
sub
sbb
or
push
inc
mov
inc
je
push
xor
sub
lahf
mov
aam
mov
add
jp
mov
mov
aas
lds
inc
ror
mov
shl
pop
xor
xor
dec
adc
call
leave
and
arpl
fmuls
dec
push
dec
push
lock
scas
xchg
call
pop
mov
stos
push
adc
jge
lea
jecxz
cmp
sbb
mov
scas
mov
xchg
pop
and
cmp
cltd
lock
lret
int3
notb
and
in
or
mov
add
aaa
lea
mov
int3
mov
rcll
test
inc
rclb
fisubs
inc
mov
fstl
xchg
cmp
mov
sub
dec
aaa
pop
mov
js
pop
ja
lret
ss
cld
loopne
jle
ljmp
xchg
dec
mov
or
xchg
sahf
xchg
aaa
xchg
imul
in
ja
or
mov
xor
ffreep
lret
inc
loopne
xchg
xor
dec
cmp
shll
xor
decl
out
jl
cld
pop
mov
jns
add
movsb
jns
testl
push
cmpsb
into
bnd
movsb
scas
addb
add
std
lock
dec
fwait
into
sbb
hlt
dec
push
mov
popa
repnz
mov
mov
and
je
dec
dec
mov
jecxz
sub
push
and
xchg
movl
push
adc
dec
mov
mov
jmp
xor
repnz
add
ja
mov
outsl
xor
jb
jle
xor
rorl
cmp
jae
sbb
pop
mov
jbe
test
mov
lods
push
in
loope
test
mov
mov
dec
cltd
or
mov
call
clc
jle
mov
sub
ds
insl
add
xor
repz
push
xchg
or
cmp
push
push
int
inc
add
aas
or
and
out
mov
xor
add
daa
xchg
mov
cmp
mov
mov
dec
pop
jb
lcall
and
scas
mov
aas
sub
mov
dec
lea
fidivl
cmpsb
xchg
gs
mov
mov
add
pop
sbb
ret
mov
inc
push
leave
mov
lods
mov
shrb
popf
nop
xchg
iret
stos
rol
adc
pop
ss
lea
add
lahf
jns
shl
jge
sub
int3
add
xchg
inc
imul
push
ja
roll
imul
push
jmp
lods
adc
notb
sbb
shl
lods
mov
insl
les
aas
cltd
inc
sbb
mov
data16
cmp
jne
pop
popf
push
jge
pop
sub
rcrb
fcmovnb
repz
arpl
pop
lcall
cmp
dec
jns
call
mov
cmp
icebp
mov
mov
aas
ljmp
or
bnd
jbe
fadds
into
jne
lock
jmp
push
shll
int
push
sub
fadds
push
sub
add
mov
jecxz
mov
push
popa
xchg
inc
pop
enter
repz
lret
wrssd
popa
ret
pop
loop
mov
pop
lds
fstpl
mov
pop
xor
movsb
push
push
inc
jge
lock
mov
mov
or
pop
aad
jmp
fadd
xor
aaa
add
mov
push
inc
jb
div
mov
ret
lea
or
das
or
rorl
std
dec
inc
orb
mov
mov
sub
mov
jg
clc
rorl
push
cli
roll
adc
and
jb
fucomip
movsl
dec
adc
push
call
out
pusha
pusha
loope
sbb
push
and
jbe
add
cmc
sub
mov
mov
stos
xor
jno
add
mov
xchg
sub
xchg
or
mov
int
fwait
push
jl
lahf
pop
out
ljmp
push
push
bound
out
call
ficoml
fadds
ss
out
outsb
in
lcall
cmc
fstp
stos
xor
js
xchg
test
and
or
add
mov
jo
in
bound
cmpsb
add
leave
dec
xchg
or
jl
inc
fdivs
ss
loope
pusha
stc
cmpsb
movd
pop
sbb
and
cs
int3
jp
je
mov
popf
mov
arpl
mov
mov
sarb
leave
cmc
jae
and
push
leave
xchg
lea
adc
les
xorl
push
sbb
lods
push
mov
sub
js
adc
mov
mov
mov
cmc
inc
aaa
loopne
adc
jecxz
dec
data16
mov
add
lock
shll
adc
and
sub
mov
push
rcll
imul
fs
add
repz
jbe
int
mov
nop
dec
mov
inc
pop
add
fnsave
dec
and
stc
inc
xchg
jp
adc
lods
mov
mov
bound
lret
sbb
xchg
xor
pop
jbe
adc
xor
pop
test
jecxz
add
and
addr16
outsb
fiadds
xchg
sbb
jecxz
sahf
fisubs
sbb
jp
outsb
add
rcrl
add
sub
pop
hlt
pop
sub
xchg
ret
aad
dec
sbb
add
adc
inc
in
aam
pop
push
cmc
cmp
jmp
outsb
ljmp
mov
bound
movsb
mov
sarl
fidivrs
cmp
mov
fadds
mov
fwait
mov
stos
xor
lea
sub
loop
add
adcl
and
sub
xor
arpl
mov
movsb
jecxz
jecxz
add
push
adc
je
jecxz
cli
xchg
mov
call
xchg
pop
push
add
aas
ds
jno
movsl
mull
int
shrb
rclb
cmp
mov
cmp
add
repz
das
hlt
test
cmpsb
stc
nop
jl
push
lds
cmp
rorb
xor
fs
mov
data16
imulb
aam
xchg
push
out
xor
jnp
pop
adc
jbe
dec
inc
sub
xchg
add
mov
pop
and
cmp
or
pop
cmpsl
jl
xchg
mov
sti
xor
ja
pop
ja
andb
ljmp
mov
push
testl
mov
mov
pop
lcall
loopne
adc
int3
jecxz
and
xor
mov
popa
fs
pop
mov
xchg
adc
adc
or
pushl
sbb
scas
cltd
shlb
cmp
lret
inc
shrb
and
sub
push
imul
in
in
sub
mov
jecxz
add
push
push
test
outsb
shrl
fstps
popa
add
popw
es
or
jb
scas
lock
jg
mov
data16
and
and
addr16
shlb
daa
sub
lret
xchg
inc
mov
mov
cmp
ret
movsb
cmpsl
push
xchg
gs
xchg
aad
mov
cs
push
ret
insb
mov
cmpsl
mov
cld
stos
les
addb
hlt
push
imul
jnp
xor
push
push
cmp
sub
js
cli
xor
fwait
or
roll
adc
in
jbe
xchg
das
fidivrs
cli
xchg
ja
mov
sbb
test
cmpsb
or
sbb
shrl
nop
gs
shl
add
jne
jp
jo
and
xchg
pop
arpl
fildll
mov
repnz
hlt
fs
ja
subb
ljmp
scas
test
dec
outsl
mov
mov
and
cmpsl
dec
popa
mov
outsb
lock
push
fisttps
mov
xor
or
jle
cli
ja
adc
cmp
js
gs
mov
pop
mov
sbb
or
int
sbb
int3
fdivrl
scas
dec
mov
mov
in
push
test
jns
mov
mov
pop
mov
cmc
cwtl
pop
mov
sub
out
into
lret
ss
mov
iret
cs
cmpsl
xchg
push
hlt
loope
and
mov
sub
cmpsb
pop
and
push
hlt
cwtl
jne
push
sti
pop
daa
popf
xor
push
dec
das
xor
jo
js
or
push
jl
pop
push
fstpl
sub
jle
int3
cld
inc
or
std
jp
xchg
add
pop
enter
adc
pusha
aas
dec
or
add
mov
loopne
data16
movsb
jmp
adc
in
rolb
cmp
dec
sbb
cwtl
ret
jno
js
nop
daa
pop
rolb
ret
adc
add
lods
lret
arpl
adc
sbb
push
fldl
lret
test
inc
fcmovu
in
and
push
shrl
scas
jno
ds
rcrb
dec
sbb
adc
push
xchg
int
push
xlat
sub
ds
out
pop
arpl
outsb
pop
cmpb
cwtl
mov
or
imul
call
stc
data16
push
xchg
cltd
incl
add
lret
ret
or
scas
pusha
mov
lods
outsb
ror
pop
cmpsl
lret
or
add
and
jno
or
lret
popf
jbe
and
repnz
mov
adc
mov
lcall
call
ret
push
in
lret
push
popa
jnp
subl
jl
cltd
cli
and
xchg
push
out
shll
mov
les
push
mov
repnz
data16
mov
xlat
arpl
mov
icebp
jecxz
punpcklbw
pop
xor
popa
pop
imul
dec
sarb
arpl
xchg
mov
lret
cmpsl
ret
lahf
ret
ds
add
and
push
popa
mov
pop
jns
push
loopne
jno
clc
mov
out
dec
jb
rorl
je
jge
ljmp
and
insb
loop
xchg
or
push
mov
movsl
xchg
arpl
daa
pop
adc
mov
das
xor
out
and
fldl
cs
iret
idivb
ret
rcl
adc
pop
mov
lods
andl
int
arpl
shr
or
jl
mov
lds
out
es
sub
push
dec
sub
add
filds
add
mulb
mov
aas
dec
mov
imul
fildll
cli
jno
mov
leave
xor
call
mov
xor
xor
push
ret
jmp
dec
pop
fstl
jecxz
shrb
int
push
lea
mov
mov
inc
xchg
add
jne
adc
xchg
sub
shl
push
add
lret
into
fildll
testl
mov
cmp
xchg
or
fldcw
adc
out
cmpsb
pop
sub
pop
stc
pop
xor
push
aaa
cmp
das
imul
out
cld
lahf
mov
add
pop
cmc
idiv
sub
sbb
daa
inc
nop
push
mov
pusha
mov
insb
aam
push
and
sbb
mov
lea
ds
dec
mov
dec
mov
sahf
push
repz
out
fsubrs
js
lods
neg
sub
gs
jecxz
jle
and
push
adc
push
addr16
add
sbb
and
mov
dec
movl
and
push
mov
fcoms
test
jnp
mov
enter
clc
jns
pop
pusha
andl
xchg
int
mov
jmp
mov
jmp
mov
cmp
orb
cld
jmp
jp
and
sti
fldl
or
mov
ljmp
sub
dec
pop
adc
outsb
rcrl
dec
les
loopne
movsb
pushf
orb
mov
pusha
out
cld
jmp
push
pop
mov
cmc
cwtl
repnz
pop
out
pop
mov
cmp
in
ljmp
test
popf
mov
pop
stc
jb
xor
mov
in
add
jns
cmpsb
arpl
inc
jmp
dec
lods
sbbl
je
imulb
mov
jae
lea
add
fists
and
insl
and
out
mov
dec
repnz
or
pusha
inc
push
xor
faddl
aas
popa
data16
pop
push
lods
jecxz
jae
rorb
push
push
push
test
call
and
shll
add
cld
cmc
std
scas
and
lret
mov
ret
jno
scas
repz
movb
and
outsb
jae
nop
mov
cmp
mov
mov
cmp
cmpsl
in
loop
es
sahf
dec
insl
sub
ficoms
sub
int3
loop
sbb
add
cmp
pusha
out
daa
mov
fdivr
js
inc
push
push
vandps
mov
out
lock
stc
jns
add
pop
movl
stc
inc
mov
das
inc
inc
jge
sbb
js
repz
lret
xchg
mov
nop
je
jae
inc
shlb
pop
inc
dec
or
popa
jle
shrl
fisttpl
sub
mov
xor
xchg
mov
rorb
xor
and
xchg
and
je
lock
movsl
push
cwtl
rorl
popa
or
jge
call
xor
cmp
addr16
and
sbb
sbb
repz
jl
jo
cmp
in
mov
out
out
mov
dec
cmp
mov
hlt
add
iret
xchg
cs
fcoml
pop
and
or
pushf
cmpsl
dec
jne
dec
clc
in
mov
xchg
push
out
inc
xchg
add
dec
adc
xor
adc
add
idivb
xchg
mov
push
loop
addb
js
inc
jne
cs
sbb
mov
iret
pop
xchg
fmuls
cmpsb
movl
xchg
xor
and
mov
into
stos
inc
xchg
mov
mov
push
insb
insb
movsb
fldt
push
mov
or
push
cli
pop
fcompl
lcall
psrlw
sbb
aas
out
cli
add
lods
hlt
mov
dec
push
inc
and
or
lds
rcl
add
fldcw
xchg
inc
inc
mov
and
mov
lret
or
fs
out
mov
lds
cltd
pusha
call
cs
inc
sub
jo
orl
add
adc
lcall
rolb
sub
inc
sbb
cmp
dec
mov
loopne
push
mov
daa
push
cs
incl
push
push
andl
ljmp
sbb
mov
mov
das
pop
scas
xor
adcb
leave
leave
scas
mov
aaa
mov
xor
lods
add
mov
imul
scas
sub
std
mov
push
adc
or
cmpsl
push
or
mov
test
daa
fstps
add
in
jnp
ret
out
lret
ds
fsubrs
mov
fldl2t
pop
fcoml
mov
jns
xchg
test
sub
push
pushf
and
das
jge
in
fwait
mov
or
popa
or
imul
mov
lea
repnz
fs
xchg
pop
sub
outsb
adc
ja
mov
cmp
dec
fwait
sbb
clc
pop
popa
lds
xor
jno
mov
inc
mov
and
xor
cmp
clc
int
adc
sub
mov
or
push
push
and
mov
leave
mov
jb
cmc
outsl
dec
inc
and
jbe
xor
cmp
and
cmp
adc
mov
in
lods
hlt
add
outsl
adc
in
imul
dec
ss
add
ja
clc
aas
jg
cmpsl
jl
dec
push
pop
aas
fs
dec
rorb
adc
int
dec
js
adc
pop
push
clc
movsb
cld
mov
es
cli
mov
or
rcrl
shr
aaa
dec
shl
cli
cld
mov
jbe
mov
test
jle
call
lahf
sahf
push
mov
add
addr16
lock
jg
or
xor
out
stc
jbe
cli
push
loop
inc
stc
test
cld
jmp
into
loop
and
pop
lds
cmpsl
out
sbb
aad
aaa
cltd
push
xchg
in
inc
cmpsl
mov
rcll
adc
mov
in
xor
into
xor
ret
add
mov
test
mov
out
push
xor
add
andb
dec
mov
xor
mov
jns
ret
add
lea
mulb
les
test
in
popf
into
mov
mov
push
cld
add
sub
shlb
lahf
add
pop
pop
mov
ret
shrb
mov
into
repz
add
js
daa
xor
int3
adc
jle,pn
mov
push
cs
cltd
jmp
shll
fildl
inc
stos
push
add
push
loope
cmp
dec
stos
adc
test
test
mov
and
dec
jo
repnz
cld
repnz
mov
push
stos
dec
jo
test
jb
dec
inc
mov
or
scas
test
cmpl
lods
sti
jp
pop
sub
xchg
mov
mov
push
inc
jecxz
out
xchg
inc
orl
je
in
hlt
mov
xlat
cmp
push
cmp
cs
scas
jmp
out
sub
fcomps
mov
lods
add
test
fisttps
lods
push
negl
lahf
mov
add
pusha
filds
lods
nop
stos
mov
in
jmp
cmp
lret
addr16
clts
mov
fistpll
adc
push
dec
in
pop
adc
hlt
mov
inc
fldl
mov
nop
or
fs
mov
push
lea
rorb
popa
add
sbb
gs
mov
cmp
imul
add
es
ljmp
mov
mulb
out
icebp
and
push
roll
cmp
cwtl
in
adc
xor
js
adc
mov
pop
sar
xchg
cwtl
sbb
push
mov
jne
sahf
int
jae
cli
ja
scas
mov
add
stc
xchg
cmp
lods
mov
cs
test
out
cmp
push
inc
in
pusha
adc
and
and
xor
iretw
pop
cld
mov
les
pusha
int
push
rclb
xchg
lds
add
in
lea
mov
or
cld
out
icebp
pusha
lods
out
movsb
push
loope
inc
outsb
and
pop
xchg
std
push
lret
jns
sub
fisttpl
divb
cmp
or
pop
adc
mov
cmpsl
pushf
cmp
cmc
into
stc
ds
cld
subb
lahf
mov
scas
subl
sub
add
ja
or
adc
cs
xchg
js
inc
mov
sub
jle
lds
stc
ds
adc
imul
xor
add
loopne
inc
rcr
fmul
fucom
in
shlb
dec
aaa
orl
sbb
xchg
addb
popa
mov
mov
adc
cmp
pop
daa
xchg
cmc
mov
pop
mov
outsl
or
enter
stc
dec
adc
mov
push
xchg
pop
mov
fsubs
test
pop
stc
sbb
jb
pop
inc
mov
pop
les
stos
fdivs
inc
outsb
inc
mov
stc
sub
in
jg
xchg
fisubs
in
add
fldl
xor
sarl
lret
push
mov
adc
xor
dec
mov
inc
out
arpl
add
xchg
adcl
mov
xor
lea
and
sub
xchg
and
int3
xchg
bnd
ret
mov
jl
push
or
int
push
arpl
js
xlat
in
mov
stc
pop
pop
push
daa
cmp
js
xchg
inc
add
fnstenv
sbb
sbb
or
cmpsb
and
xor
or
enter
mov
mov
mov
repnz
cmp
sub
sbb
xchg
inc
shrb
sub
orb
test
loope
jno
pop
pop
dec
or
mov
push
lock
mov
add
or
in
pop
pop
popf
xchg
lds
es
dec
aas
ds
movsb
or
fwait
push
daa
xchg
cmpsl
gs
jo
mov
lods
test
jo
push
lahf
and
push
cmpsb
jne
or
hlt
lret
scas
pop
cld
pop
outsb
aas
ffree
cmp
adc
mov
push
sub
out
lret
mov
decl
fdivr
repnz
adc
mov
mov
movsl
outsl
lods
jne
cmp
fidivl
pop
inc
cwtl
andl
mov
rol
cmp
stos
mov
stos
int
cwtl
sub
dec
nop
and
pop
mov
sbb
or
ja
push
add
mov
dec
jnp
lock
fnsave
rclb
lcall
mov
add
cmp
sysret
jnp
es
xor
push
nop
jb
jl
adc
pushf
xor
inc
divb
pop
ljmp
ret
stc
loopne
movsl
xlat
inc
jns
inc
pusha
pop
jbe
jmp
jl
cmp
movsl
pminub
gs
or
gs
dec
adc
aad
lods
aas
push
adc
inc
push
sar
cmpsb
jp
mov
stos
test
not
dec
jmp
push
lcall
imul
stos
mov
xor
loope
xor
inc
insb
loope
inc
mov
loop
dec
jp
outsl
jge
push
adc
pop
sbb
cmovns
push
int
jb
push
mov
nop
lock
dec
or
mov
int
out
das
or
cmpsl
iret
cmp
fwait
ret
add
sub
sub
jg
data16
movb
add
ret
dec
inc
cmpsb
jmp
idivb
cwtl
mov
out
stc
rdmsr
pop
cmp
pop
dec
pop
fldt
and
ds
mov
rolb
mov
and
or
mov
js
and
fbld
pop
dec
gs
sbb
mov
add
inc
adc
mov
enter
in
test
fisttpll
adcb
mov
jge
jmp
xchg
nop
add
les
sbb
in
push
sbb
pop
movsl
jae
or
mov
rcl
jae
or
subl
jle
push
mov
aaa
test
xor
push
or
ds
sbb
xor
mov
out
inc
insb
add
mov
js
ss
xchg
mov
sarl
jno
sarb
sarb
cmpsb
jmp
add
jne
fdivp
xor
and
pop
jbe
in
xor
add
xlat
inc
sbb
add
sub
dec
mov
mov
inc
ret
pcmpgtb
lock
stos
out
xor
mov
nop
rcll
xor
fwait
insb
push
pop
push
pop
push
lods
sbb
lds
jp
mov
push
push
push
xor
mov
sub
adc
jo
je
outsl
ret
aad
jbe
call
dec
enter
aad
xchg
jle
dec
push
sub
fisubrs
test
mov
test
xchg
cmp
adc
dec
imul
pusha
sbb
imul
adc
mov
out
and
popf
mov
xlat
pop
jae
icebp
fildl
add
and
mov
push
movsl
jg
int
mov
pop
ds
iret
xchg
imul
mov
or
mov
jecxz
push
int3
bound
aam
pusha
push
jp
jne
jae
lret
sbb
lahf
pop
test
movsb
mov
enter
andl
ds
loopne
call
mov
lcall
sub
repz
imul
jl
loop
mov
ret
jb
cmp
sbb
fdivrs
xor
inc
add
mov
jo
jb
sbb
push
mov
popl
stos
fwait
stos
cmp
xlat
incl
movb
in
inc
cwtl
das
outsl
nop
cmp
push
jb
fimull
jg
sbb
rcrl
int
ljmp
add
sub
sarb
test
pop
call
bound
fcmovbe
lock
push
scas
sub
loop
jge,pn
test
xlat
adc
mov
jg
xchg
in
pop
mov
or
adc
outsl
xor
add
ret
loope
jae
stos
add
popf
fimuls
xchg
insl
inc
fwait
int
jnp
jle
rcrl
jecxz
icebp
inc
dec
sahf
xchg
and
jmp
pop
mov
cli
cld
sbb
and
ljmp
addr16
dec
aam
aad
adc
mov
pop
inc
sbb
xchg
mov
push
mov
pop
xchg
fisubrl
outsb
mov
sub
ljmp
push
pop
jo
clc
stos
lods
push
es
pop
add
lea
ficomps
vmread
shl
repnz
xchg
fstpl
or
push
popa
movsb
lock
ret
sbb
popf
inc
pushf
ret
adcl
ds
push
xor
xor
test
repnz
push
pop
rolb
sarb
mov
ret
and
ds
int3
loope
arpl
ja
insl
push
daa
cltd
sti
cmc
xor
push
jne
jecxz
jae
and
or
jo
mov
in
aaa
adc
xor
lcall
adc
lahf
cwtl
mov
loope
popa
or
pop
movsb
sub
push
add
add
cwtl
outsl
je
push
dec
les
rep
mov
mov
xchg
fsubrs
imull
repz
movsb
loope
mov
ror
arpl
push
aam
test
fsubs
xor
adc
mov
pop
cmpsb
push
adc
inc
aad
adc
mov
lock
in
xchg
push
outsl
xchg
aam
jle
jns
inc
mov
push
mov
lock
sti
dec
stc
dec
sub
lock
mov
stos
outsb
lahf
addr16
jo
mov
movsb
mov
sub
fcmovnu
out
sub
sub
in
divl
lock
aam
dec
popa
jmp
cmp
mov
push
mov
insl
stc
mov
dec
scas
bound
cmpsb
int3
sub
cwtl
fxch
mov
mulb
hlt
xchg
sbb
sbb
cltd
xor
add
pop
clc
lods
ret
outsl
lods
push
in
insl
dec
bound
lods
xorb
pop
fcompl
fwait
xchg
xchg
dec
mov
out
mov
arpl
pop
ffreep
pop
xchg
sbb
cmpsl
fbstp
mov
adc
out
xchg
or
pop
stos
mov
sti
push
mov
or
push
call
pop
ds
icebp
pop
xchg
xor
mov
cmc
fldenv
lfs
mov
pop
push
sarl
jge
cli
mov
xchg
push
rclb
call
nop
dec
add
jge
lcall
fisubrs
mov
inc
inc
js
in
mov
pop
lret
out
rcpps
adc
sbb
imul
popa
adc
xchg
jl
mov
test
cmp
dec
iret
in
mov
test
sbb
ret
dec
mov
dec
pushf
cmpl
mov
sub
mov
jbe
js
sarb
scas
push
test
lret
xorb
mov
sub
out
adc
mov
nop
out
jg
loopne
jno
in
push
fprem1
sub
or
fildll
jl
movsb
mov
les
shlb
jo
xlat
jno
repnz
rcr
mov
inc
push
loop
cmp
or
or
sub
data16
stos
xor
jo
les
popa
push
loop
dec
and
sahf
xchg
les
mov
inc
test
sbbl
jne
rcrb
daa
imul
cmpsb
movsl
js
iret
and
mov
sub
pop
hlt
cmc
dec
fldenv
loope
mov
sbb
jecxz
sbb
int3
cmp
mov
mov
jbe
addr16
lea
mov
jmp
mov
or
lea
adcb
add
fisubrl
xchg
inc
and
inc
out
ljmp
test
or
loop
dec
outsl
sub
fsub
dec
imul
jecxz
pusha
cli
cli
xor
out
cmpsb
push
orl
or
int
or
ficoml
cmp
cli
lods
iret
mov
loop
pop
xlat
push
dec
test
and
imul
cmp
lahf
negb
push
out
xor
push
cmpsl
stc
push
xchg
sahf
arpl
and
xor
sbb
pop
jnp
decl
test
lret
jl
cmp
test
inc
out
push
sub
push
jecxz
inc
andb
rorb
das
hlt
add
loopne
in
adc
ljmp
xorb
andb
sahf
movsb
bound
mov
and
jg
inc
pop
cmp
pop
mov
add
sub
adc
scas
xchg
adc
cmpsb
xchg
fucomp
hlt
scas
inc
cwtl
add
movsb
add
mov
ret
xchg
mov
aaa
dec
sti
out
je
mov
mov
ficoml
xor
mov
push
adc
loopne
outsl
mov
sub
ja
pop
js
movsb
jns
std
jne
rorb
mov
ret
or
test
idivl
inc
aam
loopne
dec
scas
mov
push
and
jmp
decb
movl
test
dec
outsl
imul
cwtl
pop
xor
mov
popa
adc
rcr
fistl
or
push
and
dec
das
out
mov
popf
int
push
je
addr16
sub
popa
rcrl
dec
out
insb
insb
repz
test
imul
out
pop
in
add
dec
repz
rorb
insb
stos
cmp
out
aaa
jne
inc
dec
adc
je
cmc
rcll
inc
stc
jle
xor
push
hlt
mov
es
loopne
rep
rcrl
movsb
inc
or
mov
in
jo
xchg
jl
fsts
add
cmp
data16
mov
cld
xor
inc
mov
rclb
inc
or
jb
add
and
push
adc
je
mov
mov
or
jns
mov
in
test
xchg
leave
mov
fs
inc
icebp
mov
fimuls
mov
add
jno
sub
push
jnp
lods
add
hlt
xchg
adc
cmpb
mov
aaa
sbb
push
mov
test
add
fstps
xchg
mov
clc
loopne
cmc
dec
iret
sub
int3
stc
pop
enter
or
and
imul
push
out
mov
jp
sbb
mov
in
jle
into
loope
xchg
mov
inc
xchg
pop
bound
add
push
xchg
xlat
scas
outsl
test
push
jle
jno
mov
sub
aaa
lds
fsts
daa
fidivl
call
mov
ds
jo
cltd
mov
gs
adc
dec
cltd
sarb
push
pop
lods
mov
in
repz
sbb
adc
loop
rorb
fcmovnbe
std
and
dec
pop
mov
sbb
jmp
mov
xchg
mov
push
cmp
fcos
pop
jne
sbb
call
or
sbb
or
lret
out
je
rcr
in
push
outsb
fsubs
in
push
sahf
and
mov
adc
ret
inc
fistpll
sub
mov
fisubl
les
xchg
mov
sbb
cmp
aaa
in
stos
push
sbb
adc
xchg
cli
and
out
push
stos
inc
pop
lds
icebp
pop
das
push
imul
sbb
movb
movsl
ret
sub
jecxz
enter
aad
sbb
xor
pushf
add
movsb
inc
mov
std
scas
lock
movsb
repnz
shll
pop
inc
xchg
in
imulb
sar
mov
pusha
fucomi
mov
je
push
enter
loope
outsb
bnd
bnd
inc
fadds
sbb
mov
jecxz
les
pop
out
and
and
divl
iret
ret
aam
mov
out
jmp
sbb
pop
mov
pop
mov
outsl
add
out
pushf
bound
dec
sub
sub
fstpt
cmpsl
mov
xchg
insb
jl
addl
push
adc
lret
mov
imul
or
mov
mov
cwtl
mov
cmpb
shrl
stc
call
fs
negl
inc
shl
or
xor
push
sbb
push
mov
add
pop
inc
jns
push
or
mov
push
xchg
inc
cmp
dec
push
jo
push
push
shll
scas
movsl
in
sti
adc
pop
mov
popf
mov
and
cs
push
cmp
and
out
shrb
repz
movsb
loope
push
lahf
les
mov
leave
jmp
inc
sub
cmp
mov
mov
in
sub
cmovs
or
cli
mov
outsl
mov
insb
ret
cmp
dec
xchg
dec
xor
imul
ficomps
lods
je
roll
cmp
std
jl
lods
out
or
push
repnz
pop
push
cwtl
ja
ljmp
xor
dec
test
mov
push
shll
adc
fistpll
sub
lea
addr16
std
mov
add
outsb
add
mov
iret
jne
rcll
incl
mov
cmp
dec
jne
aaa
xchg
mov
test
in
orl
jmp
push
cmp
nopl
int3
mov
jg
nop
call
and
sub
xor
mov
adc
mov
xchg
mov
mov
rorl
scas
out
stos
mov
je
fisubrs
dec
ja
mov
subl
sbb
jae
xor
shrl
push
push
test
ljmp
jne
adc
pop
aaa
mov
hlt
push
hlt
cmpps
xchg
repz
xor
imul
sbb
repz
stos
cmp
mov
xor
pop
mov
xor
push
jne
cld
movsl
adc
dec
inc
in
iret
pop
jb
bound
inc
sbb
jb
imul
bnd
jne
lods
mov
sbb
pop
leave
cli
xor
cmpsb
mov
inc
mulps
cmp
cmpsb
push
int
pop
ljmp
dec
scas
jl
inc
es
jb
push
dec
sbb
mov
xchg
sub
and
sbb
fcmovbe
xchg
sbbb
lock
pop
sub
sahf
ds
sbb
sbb
fsubrl
push
lods
movsl
or
imul
sub
inc
cmpb
jle
clc
jle
pop
xchg
mov
not
sbb
inc
test
scas
hlt
cmp
hlt
in
insb
mov
mov
fiadds
lret
dec
decl
stos
adc
and
jecxz
sub
jne
xchg
sub
ljmp
mov
push
ljmp
out
test
adc
in
fcoms
and
into
push
loopne
sub
insl
xor
pop
mov
movsb
movsl
cli
or
scas
pop
jmp
imulb
mov
jo
xor
sbb
add
inc
sub
rclb
je
mov
inc
lret
bound
mov
iret
neg
add
les
lods
and
add
jge
xchg
push
lods
data16
fistl
pmuludq
mov
xor
mov
lahf
int
mov
mov
dec
cmp
or
aaa
cmp
mov
lahf
je
pop
int
jmp
rcr
xchg
push
cld
push
xlat
repnz
outsl
insl
fidivl
dec
repnz
mov
pop
lock
hlt
addr16
jo
mov
pop
loope
cld
xor
push
pusha
aad
int3
push
adc
mov
mov
and
jns
or
jo
shl
mov
lret
out
test
and
mov
js
adc
fbld
or
inc
incb
loopne
add
mov
push
pop
out
es
repz
cmpsl
sub
fisttpl
mov
cmpsb
jns
icebp
test
xchg
movb
or
and
fisubrl
rolb
loop
jne
jbe
test
mov
push
inc
sub
jp
jnp
or
fld1
lret
and
xchg
sbb
in
pusha
aas
dec
adc
push
mov
add
sbb
imul
xor
je
jbe
mov
xor
stos
decb
xor
gs
mov
sti
cmp
inc
inc
iret
push
and
loop
xchg
shlb
cwtl
loopne
mov
xlat
sti
and
out
jmp
outsl
decl
xor
mov
dec
gs
insl
mov
inc
xchg
pop
adc
push
push
pop
pop
je
mov
lock
xchg
shrl
cmpsl
scas
cmp
out
aaa
ss
aad
andl
std
loope
out
and
inc
cmp
adc
fisubs
stc
jg
aas
and
test
mov
scas
jl
push
fwait
hlt
sub
pop
ret
mov
jne
xor
xor
icebp
adc
xchg
cltd
and
js
pop
lds
nop
ret
mov
push
xor
pop
dec
xchg
decb
inc
andb
fadd
jp
mov
and
pop
cmpsl
iret
push
inc
mov
mov
jbe
pusha
add
adc
hlt
int
cwtl
xor
clc
xor
sbb
into
xor
std
mov
add
loope
sub
out
sbb
xchg
hlt
test
dec
sub
int3
cwtl
pop
cwtl
insl
sub
leave
popa
sbb
fmull
xor
cs
jmp
aaa
test
cld
cmpsb
loope
test
fs
push
bound
or
repz
scas
shrl
ja
cmp
or
sbb
or
sub
mov
push
pop
push
test
inc
xchg
mov
push
inc
shll
mov
test
sbb
pusha
jno
push
cltd
or
inc
push
lods
mov
add
add
cmp
pusha
push
jmp
mov
xchg
pushf
outsb
fs
scas
clc
xchg
inc
faddl
xor
xchg
movsl
lahf
lret
iret
bound
mov
dec
xor
rcrl
pushf
push
xor
sub
in
cmp
jl
mov
das
add
xor
or
add
and
sbb
mov
inc
imul
js
push
mov
dec
mov
pop
into
sub
push
cmc
xor
les
aaa
nop
fwait
outsl
mov
xchg
ret
out
pop
xor
cld
cli
jecxz
fcom
sub
pop
mov
les
mov
shlb
inc
add
jb
ud2
cmovg
test
dec
arpl
bound
sub
inc
push
shll
test
add
and
jno
fcomps
rclb
xlat
cmp
insl
cmp
aas
or
ljmp
mov
and
loop
cmp
sbb
stos
xor
mov
les
inc
mov
dec
dec
jnp
push
cmpb
call
lds
movsb
push
shll
mov
lahf
in
add
add
and
test
scas
xchg
sbb
sub
imul
lods
push
inc
aaa
add
imul
daa
fcoml
add
mov
sbb
out
fwait
shl
mov
inc
pusha
jns,pn
mov
mov
into
loope
jo
jo
cmpsb
inc
pop
leave
dec
test
add
call
inc
or
rcrl
fdivr
adc
dec
mov
sbb
jecxz
repnz
decl
movsb
dec
mov
lea
test
shlb
repnz
lods
push
mov
test
shlb
inc
jno
jno
in
in
jg
sti
lcall
sahf
insl
xchg
mov
inc
movsl
mov
cmp
mov
jno
sub
xor
lcall
sbb
ja
push
subl
lret
mov
or
gs
in
mov
or
jg
jge
in
popl
cmp
mov
data16
mov
mov
jae
xchg
scas
jo
loopne
popa
add
hlt
pop
sbb
fiadds
dec
aas
xlat
dec
or
or
jecxz
mov
stos
cltd
pusha
nop
loop
in
cmc
pushf
mov
and
adc
adc
push
std
mov
lcall
or
push
lahf
rorl
add
mov
jne
xchg
cmp
out
inc
inc
fstps
and
add
stc
sub
jne
aaa
inc
mov
or
xchg
cmp
idivb
fldenv
xchg
cwtl
fsts
imul
xor
adc
stos
nop
addl
popa
outsb
in
mov
sahf
pop
mov
fisttps
sti
cmp
inc
dec
imul
mov
jmp
and
test
adc
push
push
mov
cli
out
jecxz
scas
and
mov
fwait
sbb
jns
and
inc
or
and
push
sbb
xchg
mov
jmp
rcll
shll
mov
cmc
fsts
xchg
call
add
jae
sahf
fidivrs
push
pop
cmp
jo
mov
push
cmpsl
and
test
lods
bswap
mov
outsb
dec
mov
ss
add
aam
dec
add
xchg
sbb
jae
and
enter
rcrb
or
or
add
or
or
inc
cltd
movsb
lds
lock
mov
jno
jmp
mov
es
jae
xchg
in
imulb
stos
hlt
mov
cmp
stc
inc
jmp
imul
pop
sahf
jmp
popa
enter
dec
aaa
in
sub
add
inc
pop
xor
test
int3
shl
or
ljmp
dec
lods
push
lods
std
push
mov
outsl
xchg
mov
lds
push
xchg
pop
lods
sti
rol
fildll
add
sub
inc
test
pop
arpl
dec
jecxz
xor
cwtl
dec
sub
jl
mov
xor
roll
rcrl
test
fisubrl
jno
sub
add
sub
sahf
jae
push
inc
jno
pop
or
and
stos
jo
aad
mov
sub
ret
and
adc
mov
into
push
lret
jle
in
cmp
bound
ret
add
sti
icebp
pop
lret
xor
jne
pop
imul
shlb
xor
pop
lock
cmp
repz
addl
pop
je
out
or
jbe
pop
sub
cld
stc
test
lret
mov
or
sbb
and
stos
push
cwtd
repz
cmpsb
pop
cmp
ret
ss
mov
adc
repnz
loop
cmp
mov
inc
add
push
add
negl
dec
push
push
dec
adc
jno
push
push
clc
cmp
vmovaps
jb
pusha
mov
mov
sarb
cltd
mov
sub
mov
je
dec
inc
gs
imul
movsb
jge
and
rorb
mov
out
lods
test
adcb
iret
clc
hlt
dec
pop
inc
inc
cmpsb
out
xor
fisttpll
daa
jg
add
sbb
lds
sub
lret
lods
xor
lods
aas
mov
mov
in
adc
outsl
lcall
ror
fwait
cs
add
mov
sub
push
inc
pop
sbb
dec
push
neg
fs
rorb
cmpsb
cmp
and
int
pop
push
mov
lods
into
pop
mov
inc
mov
scas
pop
scas
outsl
je
scas
mov
xlat
mov
jecxz
sbb
inc
push
popa
dec
xor
dec
mov
push
sbb
inc
aad
pop
mov
pop
out
fistpl
xor
jmp
shl
adc
and
pushf
sbb
popa
mov
jle
cs
sub
sbb
inc
fisttpl
cwtl
mov
dec
pop
cmp
repz
mov
adc
or
repz
mov
jp
push
dec
sub
enter
sub
xchg
pop
xor
push
leave
mov
loope
lds
rolb
push
aam
loope
pushf
xchg
pop
push
push
test
mov
call
adc
ss
xchg
or
inc
jmp
cmp
call
daa
push
test
fmuls
xor
repz
and
mov
into
fsubp
sub
leave
jle
sbbl
cmp
mov
mov
inc
out
std
mov
lods
pop
xchg
addr16
xchg
in
test
or
push
stos
add
jecxz
cld
cmp
out
jo
mov
stos
mov
int
or
stos
mov
jns
shlb
push
mov
dec
divb
int
xchg
jl
jo
or
movsb
jecxz
rcrl
pusha
mov
adc
fucomi
popf
std
test
in
stc
and
frstor
sub
pop
cwtl
lret
sub
fsubrl
cmp
adc
shrl
mov
repz
mov
jae
clc
je
fwait
dec
lcall
mov
or
cmp
mov
mov
ret
push
add
dec
mov
les
insl
cmp
sbb
nop
das
adc
and
xor
rolb
fstp
and
xor
and
mov
in
lcall
fnstsw
orl
idiv
mov
imul
jmp
mov
aad
sbb
lock
les
gs
cwtl
and
inc
stc
xor
xchg
repz
push
xchg
lret
jecxz
mov
sti
sub
cltd
cmp
out
cmc
pop
pop
loope
push
hlt
cmp
xor
cmp
ljmp
sbb
and
jo
in
dec
int3
fstpt
push
add
cmp
jmp
outsl
inc
mov
mov
rcll
dec
scas
stos
orb
out
ds
out
les
pop
xor
mov
push
jg
jmp
pop
cmpsl
fs
fdivs
lahf
or
sub
test
imul
mov
and
add
mov
sbb
orl
xor
mov
es
adc
inc
ljmp
cmp
aam
jle
jne
adc
adc
popa
cmpsl
adc
sub
push
push
sbb
mulb
ja
jb
bound
xor
dec
jle
int
testb
cmp
cmp
jnp
pop
leave
sbbb
outsl
pop
lock
sbb
mov
push
pop
or
sbb
mov
leave
inc
mov
rcr
inc
out
fs
inc
pop
dec
sar
pop
lret
adcl
popf
sbb
jo
faddp
rcrl
sbb
shr
fiaddl
fdivr
fistpl
mov
xchg
pop
or
gs
sub
or
pop
cmp
pushf
pushf
into
add
dec
cmp
jle
push
push
mov
xlat
mov
jne
xor
insl
leave
mov
sub
cltd
sub
sub
lret
and
int3
jne,pt
ret
fsubr
inc
inc
cmpsb
cli
cmpb
out
out
sub
addb
xchg
adc
sub
pop
das
loop
pop
aaa
sub
fiadds
roll
aas
cmp
fiadds
sbb
std
mov
out
push
ds
scas
and
out
push
xor
dec
inc
nop
jl
add
fcompl
pop
stos
jne
mov
insl
push
lret
fldt
add
push
aad
rcrb
decl
or
test
enter
inc
test
je
adc
adc
stos
cmpsb
adc
pusha
inc
push
bound
out
dec
dec
mov
push
xorl
ss
or
and
xchg
add
hlt
mov
jg
mov
add
jg
clc
fisttpll
adc
push
xchg
in
scas
faddl
mov
mov
or
mov
add
mov
mov
pusha
clc
insl
cmp
mov
sti
push
aas
imul
jp
add
rolb
in
lods
stc
add
jp
je
repz
jne
sub
dec
dec
insl
and
ret
out
jnp
dec
sbb
sub
mov
imul
push
sub
insb
cmc
sbb
jge
mov
lods
les
pop
cwtl
test
lret
enter
fisttpll
inc
popf
inc
in
loopne
enter
test
jae
sub
dec
sub
aad
pop
dec
jmp
push
icebp
jo
mov
jno
sbb
fwait
sarb
loopne
aaa
mov
cltd
adc
mov
pop
ljmp
jb
in
fildl
hlt
push
cmpsl
loop
js
std
lock
dec
cmp
mov
out
es
sub
pop
jnp
addl
inc
movups
and
adc
cmc
ds
cmpl
inc
mov
xlat
sbb
mov
sub
cli
repnz
insl
pusha
xchg
fcompl
jb
push
outsl
cmpsb
jmp
testl
pushf
sub
mov
add
jns
shlb
cwtl
jg
addr16
aam
daa
or
push
jo
pop
js
add
ja
scas
rcr
das
push
mov
mov
jns
lret
mov
sahf
aad
divl
lock
sbb
add
enter
fstl
std
mov
sahf
mov
sbb
add
clc
jmp
xchg
lea
lea
pop
sbb
fiadds
jmp
out
cmc
insb
pop
xorl
lcall
clc
inc
adc
cli
add
add
mov
out
pop
hlt
mov
mov
ja
xor
mov
cld
pop
lret
cmp
mov
leave
jmp
sub
jmp
lds
cs
add
out
mov
mov
jb
dec
jne
cld
jl
fcmovu
rcll
bound
hlt
pop
pop
dec
dec
mov
mov
mov
lahf
push
lock
sub
sbb
jae
mov
sbb
pop
addl
out
in
mov
bound
mov
or
cmp
fwait
testb
outsl
push
ljmp
add
xlat
jne
in
adcb
xchg
test
or
insb
inc
push
xchg
cli
pop
fadds
push
pop
je
mov
sbb
jo
in
push
or
or
mov
jne
mov
in
or
testl
cmp
inc
fdivr
jbe
push
add
pop
pop
pusha
and
pop
dec
cmp
jmp
and
push
ljmp
inc
sbbl
out
shlb
loope
orl
fdivp
outsl
jge
mov
repz
out
scas
cli
test
int
xchg
add
add
mov
cmp
in
hlt
push
mov
lock
inc
fwait
or
ljmp
adc
or
mov
out
out
shrb
out
push
adc
in
and
inc
jnp
cmp
stc
xchg
xor
into
int3
push
mov
or
push
xorb
int
jbe
mov
jbe
jae
xlat
cmp
pop
fistl
cmc
xor
pop
mov
sub
insl
pop
mov
mov
jnp
adc
jns
hlt
add
mov
xchg
pop
aad
arpl
add
mov
mov
popf
and
arpl
and
xor
jl
stos
add
jb
loopne
filds
xchg
dec
xor
mov
pop
fcomp
jle
mov
decl
rcrl
cmp
int3
test
sub
into
mov
push
in
loop
mov
gs
add
out
lret
add
xchg
lods
cmpsb
ret
xor
in
xor
fisubrl
aaa
xchg
and
xchg
inc
push
push
sub
shlb
lods
jp
mov
fistl
roll
mov
cld
int3
mov
je
in
dec
std
jne
lret
xor
data16
rclb
js
pusha
or
jae
mov
popa
cmc
or
push
push
fldl
rolb
dec
aam
inc
out
mov
xor
adcl
clc
xchg
push
mov
mov
cld
add
shlb
pop
dec
sbb
mov
add
out
fs
aam
out
loope
dec
imul
pop
add
lods
dec
xchg
and
loop
stc
and
out
mov
adc
dec
dec
ffreep
xchg
int3
dec
sbb
js
cli
repz
jbe
insl
adc
jmp
push
call
js
hlt
mov
inc
fidivrs
pop
imul
stos
bound
jb
jae
nop
dec
lret
cmp
adc
in
cmc
add
ja
and
mov
leave
xchg
inc
push
sbb
ja
nop
sahf
jg
loope
addr16
pop
sub
jns
add
add
pop
push
aad
mov
loope
lret
insb
add
jne
sahf
call
jae,pn
ja
lea
push
mov
sbb
mov
test
mov
sti
cld
xchg
iret
stc
filds
stos
outsb
pop
xchg
xor
mov
xorb
movsb
insb
xor
push
in
fistpll
fistpl
mov
or
or
mov
xchg
test
fidivl
repz
jns
dec
xorl
sub
nop
pop
sub
jae
inc
imul
pop
aas
dec
out
aaa
sti
rcrb
in
mov
repnz
fcomps
rolb
and
push
inc
insl
popf
mov
and
idivl
xor
mulb
idivb
test
loopne
jnp
and
add
shlb
mov
sbb
notb
ja
pop
sub
xlat
stos
mov
push
enter
sbb
push
push
outsl
filds
es
fstpt
arpl
pop
xchg
fs
mov
jp
pop
fwait
and
incl
fcoml
and
inc
mov
mov
push
jge
dec
popf
cmp
nop
loopne
data16
jmp
push
and
data16
jno
aas
lock
xor
push
inc
cltd
dec
jmp
sarl
mov
jl
movsl
xchg
je
mov
ret
jae
sbb
sbbl
mov
in
es
adcl
imul
jb
pop
jl
xchg
cmp
sti
cwtl
fmull
test
xor
aam
cmc
imul
dec
mov
xor
hlt
mov
mov
dec
dec
push
push
and
pop
sahf
xor
dec
out
cld
sub
fisttpll
mov
mov
lock
and
hlt
sahf
dec
xchg
arpl
xchg
inc
out
imul
cwtl
add
popf
fwait
adcl
jns
shl
sub
or
jmp
inc
mov
test
nop
and
add
dec
movzwl
cmp
lds
or
in
fidivrl
pop
cltd
mov
test
rcrb
mov
jns
int3
sub
and
lock
jecxz
in
jo
cmpsb
cltd
sbb
jo
std
xchg
xchg
test
push
cs
outsl
and
div
cmc
xchg
imul
inc
popa
pop
mov
lds
ror
mov
jns
testl
add
and
push
loop
mov
stos
adc
hlt
xchg
adc
mov
aas
pusha
mov
xchg
xor
mov
jae
jl
addr16
xor
or
inc
mov
adc
lcall
add
xor
bound
xchg
cmp
fldl
test
cmpsl
jl
pop
and
or
repz
sub
out
jp
jg
push
dec
jp
xor
repz
fnsave
fbstp
fcmovne
and
arpl
shll
fisubrl
mov
repz
pop
jo
sbb
mov
xor
inc
mov
mov
pop
xor
adc
mov
in
in
sbb
pop
cmpsl
into
loop
mov
fwait
pop
dec
notl
mov
test
cmp
icebp
cmpsb
push
sub
xlat
xor
inc
xor
xchg
cmp
out
and
add
mov
outsb
jns
and
push
jns
icebp
sub
push
icebp
adc
dec
in
testb
cmpsl
std
ljmp
cmc
hlt
addr16
add
lret
rorl
adc
jbe
das
je
sbb
push
loope
out
cmp
lret
ds
sbb
je
pushf
out
add
fld
aad
cmp
ss
sahf
leave
mov
ljmp
fiaddl
into
jp
sub
ss
dec
inc
fldl
push
scas
mov
mov
xor
movsl
repz
fs
mov
orb
adc
xor
iret
xor
out
mov
pop
insl
fwait
sbb
jnp
subl
pop
mov
push
int
sbb
fwait
xchg
repnz
pop
test
lret
rorl
in
jbe
jne
lods
movsl
inc
sbb
pop
out
mov
icebp
inc
dec
and
push
fnstsw
movsl
stc
addr16
or
dec
popa
inc
pop
add
test
push
mov
movb
xchg
stc
mov
call
pop
and
adc
add
xor
movsl
jecxz
push
jne
push
xor
xchg
mov
aas
ljmp
mov
push
int3
cmp
popa
divb
and
mov
mov
xchg
xchg
xor
lcall
push
cmp
sub
pop
cmpsb
fnstenv
int
fnstsw
aam
pop
in
xchg
push
cltd
push
rcr
xor
in
xchg
push
sahf
sub
inc
xlat
and
xorl
inc
jne
xchg
sbb
dec
jns
pop
in
bound
rcll
sahf
sbb
mov
icebp
add
adc
out
push
pusha
call
dec
es
push
clc
mov
adc
out
adc
dec
push
shlb
insl
out
mov
push
xchg
fstps
movsb
sub
pop
nop
mov
dec
mov
pop
mov
fwait
dec
xchg
add
int
pop
mov
inc
rcll
out
mov
jl
jns
mov
mov
xor
adc
das
cmp
xchg
xchg
insb
movsb
push
fdiv
jns
dec
pop
and
pop
fwait
int3
dec
ss
loopne
shlb
xchg
scas
iret
xchg
dec
xchg
in
inc
sub
lds
adc
popf
pusha
nop
sarl
jmp
dec
shrb
xor
js
gs
xchg
lret
popf
xchg
jb
xor
hlt
add
pop
fidivs
icebp
xchg
adc
jo
lock
out
add
cltd
repnz
out
jecxz
mov
xchg
xchg
loope
pop
mov
hlt
scas
insl
adc
stos
pop
xchg
pop
test
test
sbb
scas
cmpb
sbb
ret
jmp
inc
cmp
in
arpl
jg
int3
sbb
xchg
pop
inc
jp
repnz
imul
dec
popl
push
movsl
les
jns
pop
out
xchg
scas
xor
or
imul
ljmp
mov
out
data16
test
data16
and
cltd
addr16
ss
sbb
adc
clc
dec
lcall
inc
xchg
dec
imul
sbb
add
sub
pop
mov
jb
jp
dec
mov
sbb
lock
mov
xchg
imul
loope
lods
dec
adcl
lret
out
les
pop
jge
mov
shrb
cwtl
jmp
cmp
mov
addb
mov
fsubs
jo
dec
adc
lock
cltd
in
movsb
rol
add
mov
stos
xchg
add
pop
or
fwait
outsl
imul
idiv
insl
add
adc
add
push
cmp
mov
lock
dec
add
in
shrl
pop
sbb
outsb
cmpb
movsb
ss
orb
in
call
xlat
test
push
dec
pushf
repnz
popf
mov
push
ret
std
cwtl
lods
cmc
in
dec
mov
pop
push
in
mov
imul
std
dec
fstl
mov
ja
jle
sbb
cld
lcall
mov
pop
push
and
and
test
pop
sbb
arpl
insb
lock
push
sub
dec
outsl
sbb
cli
jge
addb
aas
popa
xor
test
lcall
mov
negb
mov
push
stc
cmpl
jns
stos
jno
push
push
adc
in
hlt
mov
or
xchg
imul
aad
imul
scas
add
scas
xor
jb
cwtl
push
push
sub
adc
sbb
sub
mov
inc
fs
hlt
ja
dec
aas
nop
dec
bound
mov
data16
aaa
push
jae
xor
hlt
or
lods
sahf
jne
fs
adcb
and
in
inc
mov
adc
in
addr16
scas
rorl
mov
push
mov
sub
das
not
movsl
out
and
mov
ret
cltd
gs
fcmovb
xor
dec
nop
push
aas
sahf
fdivrl
out
or
orl
and
push
pusha
and
pop
push
dec
repnz
pop
scas
and
loope
pop
lods
pushf
pop
push
sub
hlt
data16
sub
or
stos
xlat
jmp
mov
or
sub
push
mov
ret
sbb
jg
fsts
xchg
clc
add
mov
mov
cmp
sahf
daa
add
push
pop
outsb
in
pushf
out
dec
pop
adc
pop
sub
and
push
adc
adc
mov
pop
imul
movsl
shll
jbe
pop
outsl
push
mov
pusha
inc
inc
jle
je
inc
inc
loop
fimull
loop
scas
test
push
insb
cmp
mov
test
mov
cmp
adcl
popa
lods
addr16
fmull
adc
leave
sub
data16
mov
loop
cmp
or
xchg
cld
pop
movsb
mov
in
xor
xchg
dec
fs
cmpsb
out
movsb
mov
shlb
les
dec
or
dec
fsubrp
fs
enter
dec
pop
loop
ret
fistl
data16
pop
xor
adc
jno
dec
imul
or
lds
xor
add
cwtl
repnz
mov
lds
popf
jns
and
sbb
loopne
es
push
mov
arpl
mov
jl
xchg
xor
jne
mov
aas
jle
jbe
shrl
dec
sbb
inc
add
pop
aad
xor
jmp
jg
inc
pop
icebp
mov
jnp
hlt
mov
enter
sar
out
adc
mov
cltd
xor
xor
pushf
xchg
fisttpl
out
mov
test
loope
scas
xor
test
hlt
loopne
outsl
sbb
cmpsl
out
sub
inc
sbb
mov
mov
xorl
rolb
jnp
or
out
dec
negb
iret
xchg
or
fsubs
push
lret
pop
cmp
unpckhps
nop
lcall
data16
sbb
sti
xchg
pop
les
pop
sub
movsb
and
stos
pushf
inc
pop
xchg
fists
or
lret
in
das
or
dec
jne
mov
dec
fucomi
outsb
and
fcmove
arpl
pop
fstl
negb
mov
int3
push
mov
pop
int3
ja
xor
imul
decl
ret
fs
popf
sub
mov
mov
sbb
and
push
add
js
pushf
dec
scas
shl
inc
ja
inc
fwait
das
sub
xchg
xor
sub
arpl
test
js
mov
push
dec
iret
xor
stos
mov
ficoml
inc
pop
movsb
pop
loopne
lret
mov
fsubp
push
mov
cmp
mov
insl
xor
cld
jns
ja
dec
into
lods
jnp
stc
nop
pop
das
mov
push
call
out
repnz
iret
push
sub
sub
mov
dec
mov
ret
mov
and
loope
pop
add
adcb
in
repz
push
pop
jno
mov
jns
mov
mov
cltd
adc
test
or
or
outsl
out
jne
pop
int
and
sub
in
add
dec
cmpsb
jae
mov
in
daa
xor
mov
xor
nop
mov
jle
pop
bound
call
loope
vucomisd
add
jmp
sub
xor
out
aam
cmp
push
mov
fists
dec
in
negb
fldt
xchg
mov
inc
or
cli
mov
pop
lcall
pushf
bound
sarl
sbb
es
jo
sub
movsl
fists
dec
cmp
data16
out
adc
push
in
in
xchg
cmp
add
cmp
pop
sahf
bound
mov
or
add
nop
or
add
xor
pushf
arpl
ljmp
and
or
arpl
xor
push
push
xchg
das
cmp
or
jne
xchg
cmp
test
loope
aad
arpl
mov
imul
mov
jo
cmp
mov
in
loope
add
mov
cli
pop
lret
test
mov
mov
ret
add
xor
mov
mov
scas
xchg
sti
js
pop
mov
and
fcmovnu
movsb
cltd
scas
jmp
pop
movsb
inc
sub
sbb
lea
mov
ret
add
lahf
pop
adc
or
add
mov
mov
sbb
xor
movsl
pop
orl
in
cmc
or
mov
push
add
fldcw
inc
dec
pop
bound
mov
inc
add
and
ljmp
xchg
das
push
push
cld
fisubrs
mov
pushf
jnp
cltd
fnsave
dec
loope
pop
ret
pop
repnz
jno
cmpsb
or
xor
push
jns
pop
and
addr16
and
rorl
mov
pop
pop
enter
pop
mov
push
in
test
cs
roll
add
inc
dec
sbb
cmp
nop
and
fstpt
add
int3
cli
jbe
sbb
add
in
fwait
aaa
add
and
cmp
repnz
inc
fwait
xchg
sbb
loop
or
mov
lea
cmp
pop
mov
test
mov
dec
aad
xchg
push
stc
out
ljmp
in
fsubp
mov
leave
mov
xchg
mov
xchg
lcall
sbb
out
mov
dec
das
push
sahf
mov
cltd
dec
or
pop
ds
push
xchg
sub
pop
out
sbbl
decl
outsl
cmp
stos
test
or
fwait
lds
jl
movsl
push
idivl
scas
jecxz
ja
inc
dec
popl
fldt
mov
mov
test
ljmp
rorl
flds
iret
iret
inc
ss
test
icebp
xchg
push
lds
xor
xchg
fs
dec
ja
daa
arpl
repz
push
or
out
cli
mov
push
sbb
ss
lret
and
push
and
or
mov
and
clc
inc
lea
pop
cmp
fsubr
mov
add
ds
popf
and
in
or
sar
xor
mov
pop
mov
lods
paddusb
or
scas
fs
popa
das
sub
push
or
outsl
cwtl
cli
cltd
sti
pop
test
daa
imul
mov
ds
sbb
dec
je
dec
push
mov
lret
into
jl
mov
cs
dec
mov
jo
xor
mov
lea
mov
adc
xor
imul
rol
xchg
or
inc
int3
push
lds
pop
xor
and
cs
sub
sub
leave
xchg
imul
xchg
sub
push
out
enter
out
cwtl
jns
or
popf
rorl
xchg
push
dec
pop
lea
inc
cltd
inc
std
je
sti
xchg
int3
lods
jae
xor
jecxz
pop
cmp
xchg
jnp
test
pop
lcall
push
pop
xor
cltd
mov
and
lods
movsb
vcvttpd2dqx
idivb
dec
pop
scas
movsb
mov
mov
mov
in
mov
stc
xor
mov
clc
mov
mov
cld
lea
into
fwait
sub
jb
int3
or
out
adc
mov
insb
lods
jnp
dec
dec
adc
push
loope
xchg
fsubl
outsl
inc
sbb
jle
es
movsb
mov
inc
fldt
repz
xchg
and
scas
inc
hlt
subl
xor
sub
je
xor
nop
das
das
inc
add
notb
idivl
mov
ret
or
popf
push
xchg
xor
ljmp
dec
xor
or
lret
and
fsubrp
test
popf
std
xor
js
test
add
insl
inc
repnz
inc
imul
mov
dec
inc
sbb
sub
outsb
fs
ret
sub
push
mov
jmp
jbe
sub
repnz
into
mov
pop
jo
mov
jle
lahf
icebp
push
icebp
xchg
adc
mov
movl
subb
sahf
xchg
xlat
jg
cwtl
rcrl
daa
dec
ret
and
sub
lock
jbe
aam
mov
mov
inc
cltd
loope
inc
cmp
aad
dec
and
jno
rcr
cmp
cld
test
push
icebp
xor
out
repz
mov
lret
adc
inc
or
lcall
fidivrs
mov
fmull
insb
inc
cld
int
in
cmp
or
mov
and
dec
sbb
fbstp
subl
and
insb
jmp
scas
les
xor
inc
test
icebp
mov
lahf
ja
pop
call
pushf
inc
xorb
repnz
jno
push
nop
or
cmc
pop
in
lcall
stos
divb
popf
sbb
cmpsl
ja
movsb
fldcw
mov
mov
jl
cmpl
mov
pushf
cmp
and
inc
jb
push
lock
xchg
pop
add
addr16
nop
in
mov
push
rcll
jb
sub
jge
cwtl
jae,pt
inc
xchg
cmp
cmp
add
inc
add
jmp
or
setne
fbld
movsl
xchg
push
nop
gs
push
in
pop
int
xchg
int
movsw
fwait
nop
jae
lds
sbb
mov
fld
pusha
xchg
sbb
imul
jmp
cs
into
ret
inc
jns
mov
lret
push
outsl
xor
mov
std
gs
pop
adc
jmp
in
repz
mov
xchg
inc
das
ret
out
mov
out
inc
je
sahf
mov
mov
mov
adc
or
pop
sub
rclb
add
jns
xchg
push
pop
cmc
dec
mov
enter
call
push
movsb
test
cltd
lods
jg
inc
lds
andb
xchg
outsb
mov
ror
fisttpl
nop
pop
add
bound
dec
mov
sarl
xor
shrl
pop
sbb
lret
jno
daa
outsl
inc
ret
mov
dec
loopne
jnp
out
jne
xor
cwtl
sub
call
push
mov
cmp
push
inc
mov
add
imul
inc
repz
xchg
pop
fwait
jge
lods
sbb
pop
mov
ds
fsubr
leave
inc
or
enter
jo
xchg
loop
cmp
jp
lea
cmp
daa
jns
clc
pop
daa
je
aam
mull
and
or
sub
mov
int
pop
call
cli
xor
mov
testb
pop
jae
adc
shrb
jns
pop
loope
and
stos
lret
or
mul
testb
push
sbbl
jge
mov
xor
sbb
dec
mov
mov
cs
pop
lea
pop
xchg
mov
pop
popa
mov
daa
jl
add
sub
mov
add
scas
pop
repz
ja
sbbb
sbb
xchg
adc
movsb
daa
popa
arpl
and
cmc
sarb
and
jp
sub
push
out
mov
xchg
add
mov
test
jbe
and
je
pop
mov
pushf
mov
add
imul
into
or
sbb
jge
dec
das
out
mov
dec
out
and
sub
mov
mov
sahf
and
mov
mov
fs
hlt
je
mov
fistpl
shrb
and
fldl
cmp
stos
jae
and
xor
mov
in
and
cltd
mov
mov
mov
xorps
mov
loope
mov
add
cld
or
inc
cli
pop
xor
negl
mov
lcall
sub
enter
dec
fs
lods
sbb
lods
cmp
or
stos
cmpsl
inc
mov
nop
xor
or
fistl
test
xor
inc
adc
or
adc
shrl
push
lret
repnz
loopne
xchg
fs
sbb
adc
in
loop
into
ja
inc
and
adc
mov
or
pop
in
repnz
adc
bnd
sbb
loope
loop
out
mov
dec
arpl
outsl
aas
popa
pop
mov
dec
xor
scas
popf
ret
sbb
xchg
aas
js
mov
push
and
or
sbb
pop
ja
push
repz
movq
clc
das
sub
add
iret
data16
lret
and
xlat
cmpb
sbb
inc
mul
dec
and
mov
xor
int
pop
mov
jmp
push
aas
or
mov
ja
cltd
jg
add
cwtl
xchg
pop
cmpb
jp
mov
sbb
inc
loop
repz
xlat
mov
rclb
adc
cmpsl
out
into
sbb
fiadds
sub
xchg
inc
dec
dec
in
nop
add
xor
xchg
and
stos
mov
pushf
shlb
dec
adc
mov
dec
mov
syscall
add
in
rorb
inc
mov
jle
cmp
cs
mov
fists
popa
bound
mov
aaa
int3
push
jmp
les
xor
inc
fmull
mov
xlat
xchg
pop
push
popa
jne
loope
pushf
sbb
loope
ja
mov
ja
mov
mov
rcll
inc
push
or
cmp
ffreep
pop
insb
jmp
xchg
outsb
jmp
jecxz
insb
hlt
sbb
jae
popf
or
push
daa
mov
sub
lods
sbb
in
repz
cld
inc
mul
test
cltd
xchg
andl
testl
or
in
ljmp
xor
cli
cmp
nop
add
jo
add
pusha
xlat
test
lea
addr16
dec
adc
movsl
xchg
cmpsl
and
aad
jg
and
fisubl
stos
sub
imul
dec
pop
sbb
push
mov
jbe
mov
cmpsb
sub
insl
out
fadd
xchg
sub
sti
or
cmp
sub
call
lcall
ja
mov
das
inc
aaa
cwtl
add
push
enter
into
pop
dec
out
and
test
ret
ret
shrb
xchg
jl
dec
aad
push
cmp
cmp
icebp
jg
and
and
adc
mov
sbb
dec
sahf
mov
xor
mov
test
shrb
cmpsl
dec
xor
add
rol
push
mov
dec
xor
jnp
mov
fsubrs
and
add
icebp
xor
xchg
ljmp
mov
popa
aas
or
or
mov
pop
pop
cmp
push
mov
jmp
js
dec
lahf
xor
add
out
aas
push
cmp
xor
or
mov
test
jo
mov
sbb
adc
invd
cmpsl
cld
addr16
lock
call
and
ss
cld
cmp
inc
in
cmp
test
cltd
jge
mov
popf
cmpl
add
sub
outsl
push
jnp
repnz
pushf
inc
or
push
loopne
sub
and
nop
pop
jbe
rclb
daa
gs
xor
adc
sub
add
mov
fsts
data16
push
lea
jns
lock
xchg
xchg
daa
jbe
sub
inc
enter
pop
aaa
mov
mov
inc
push
and
lcall
fisubrl
mov
pusha
in
pop
or
xor
int3
jae
fstl
and
ljmp
mov
popa
fs
icebp
or
shr
sub
sahf
lock
mov
jmp
xlat
xchg
jo
es
inc
xor
push
xor
sub
lret
add
jg
dec
cli
mov
stos
scas
sbb
fsubrl
push
lret
pop
mov
into
call
mov
gs
adc
out
sti
dec
jns
ljmp
stc
loopne
in
fisttpll
loopne
push
fwait
ror
pop
mov
add
jbe
sbbb
xchg
shrl
lds
cmc
mov
adc
add
cmp
mov
dec
sbb
adc
das
pusha
mov
nop
and
push
fiadds
lahf
inc
and
pop
lds
and
mov
in
out
pusha
mov
xchg
popa
push
mov
clc
jbe
jg
fs
inc
repnz
hlt
pop
dec
or
popf
popf
mov
xor
adc
add
test
popl
sbb
push
fstpt
scas
testb
pop
cmp
mov
je
scas
call
mov
ret
loopne
and
shl
faddl
or
test
fs
lcall
xchg
mov
adc
clc
jae
sub
insl
mov
sti
xchg
outsl
push
xchg
add
test
cmp
and
pop
mov
outsb
sti
call
xchg
sbb
aam
lret
dec
loopne
in
fstpt
push
xchg
adcb
mov
pop
mov
xchg
xchg
jno
int
xor
pop
imul
jns
or
add
inc
aaa
pusha
sbb
inc
mov
mov
sub
je
stos
out
inc
push
inc
mov
addr16
jno
cld
push
repnz
cld
xchg
add
mov
out
mov
cmp
dec
out
mov
fiadds
xchg
stos
sbb
push
shr
sbb
sub
xor
dec
mov
adcb
aad
dec
popf
pop
sub
cmp
sub
andl
sbb
out
lock
pop
insb
into
xor
xchg
nop
xor
jne
in
adc
push
xchg
xchg
hlt
sub
push
bound
sarl
test
adc
fstps
mov
mov
in
mull
repz
dec
lret
cmc
gs
pop
pop
jbe
call
fidivs
js
xchg
add
push
dec
dec
sub
out
loope
add
mov
stos
push
fwait
test
rcrb
lea
mov
aaa
pop
jg
into
bound
enter
shll
aam
out
xacquire
sbb
and
cld
xchg
jnp
pop
jge
imul
ror
sub
out
jbe
mov
push
out
or
adc
and
and
cmp
cwtl
mov
xchg
mov
push
sbb
std
lock
cld
inc
adcl
xor
xchg
adc
push
mov
clc
lcall
cmp
inc
sbb
imulb
jno
fisubrs
adc
sbb
fldenv
jae
rcr
sbb
addr16
push
ror
out
stos
pop
push
ret
lods
int3
in
addr16
mov
int
inc
sbb
dec
aaa
pushf
lods
aaa
pop
lret
popf
xorl
inc
mov
mov
jmp
fistpll
xchg
fsubp
inc
mov
aam
jmp
mov
inc
jo
fstp
cmp
or
add
popa
pop
movsb
ja
xchg
dec
arpl
add
and
into
ljmp
andb
testl
lahf
mov
data16
push
fldenv
mov
imul
je
pop
push
fdivrp
fists
stos
jmp
subb
shl
mov
mov
ja
test
stos
lahf
and
sbb
xlat
or
mov
mov
jns
cmp
push
fisttps
push
push
push
cmp
add
jns
mov
xor
call
js
dec
std
push
xchg
xchg
iret
sub
pop
push
repz
ds
push
out
and
insl
loope
inc
orl
lods
and
in
insl
dec
xchg
fdiv
addr16
push
mov
insl
xor
sbb
popa
jecxz
push
pop
loopne
subl
cmpsb
movsb
jl
nop
jns
push
rolb
cmp
in
dec
rcrl
add
xchg
jb
mov
jnp
les
mov
loope
pop
add
repz
xorb
nop
push
xchg
mov
xchg
std
inc
xchg
ja
inc
xor
jns
and
mov
repz
fdivrs
daa
hlt
jl
je
outsl
scas
lahf
push
cmp
idivb
xlat
fs
imul
and
push
xchg
sbb
dec
cmp
popa
xchg
jl
cmpsl
pop
aam
fsubl
mull
mov
xor
adc
test
ljmp
call
inc
es
pop
jne
pop
cli
shll
addb
cmc
bound
popa
add
rclb
scas
push
and
gs
aaa
pop
negb
movsb
inc
hlt
pushf
cmp
inc
icebp
jne
sbb
aad
lods
mov
nop
mov
mov
push
int
lahf
js
insl
sbb
les
pop
push
bound
push
cmpsb
jmp
and
push
mov
push
ja
popl
cmc
mull
inc
push
ficoml
sbb
out
lcall
and
aam
inc
sbb
cwtl
repz
mov
jne
push
ficompl
mov
test
push
xor
cmpsb
or
js
sti
inc
cmp
xor
xchg
out
cs
or
pop
lods
sbb
push
mov
push
das
leave
out
add
test
push
mov
or
lahf
incl
fs
imul
jle
hlt
jo
in
cmpsb
ret
cmpb
sbb
scas
out
xchg
inc
push
rcrb
bound
push
mov
test
mov
sub
mov
sub
div
or
sbb
gs
in
stc
inc
pop
test
sahf
cmp
lds
mov
clc
push
out
jge
loop
dec
sbb
adc
jmp
sti
adc
mov
aad
popa
push
test
loope,pt
cmpsb
jg
pusha
xlat
movsb
cwtl
cmpsb
add
test
dec
add
test
daa
scas
xchg
jp
xor
mov
push
fs
popa
jbe
cmp
out
movsb
lods
jnp
add
jns
scas
stos
mov
int
rorb
inc
jle
andb
push
dec
inc
inc
add
sbb
mov
jne
es
xchg
push
sub
adc
inc
pop
add
pop
hlt
stos
mov
push
cmpsl
test
mov
mov
push
sub
xchg
pop
sarl
je
sarl
cmp
ret
mov
fcoms
fs
cmp
dec
mov
or
mov
mov
out
inc
out
movsl
divb
popf
popf
xchg
cmp
lcall
sub
dec
popa
dec
scas
or
mov
cli
out
test
lcall
xor
in
repz
testl
add
pop
or
add
roll
mov
and
stos
and
jbe
cmp
cld
add
testl
add
inc
mov
test
xchg
loop
add
push
or
out
cmp
inc
push
mov
sbb
cltd
lcall
sub
xor
iret
divl
es
lret
cmc
adc
jl
cli
xor
cs
ljmp
or
decl
dec
mov
mov
cmc
push
repnz
sub
divl
and
aas
jne
inc
inc
pop
out
cmp
add
scas
jl
repz
int3
mov
out
jge
cs
sub
cmpsb
cmp
movsl
bound
cmpsl
mov
inc
shlb
mov
sbb
jge
shl
out
push
inc
and
pop
push
aam
push
scas
xchg
mov
xor
in
and
je
xchg
int
sbbl
mov
mov
scas
aad
ror
arpl
outsl
lea
loope
or
xchg
xchg
bswap
in
and
xorl
mov
mov
add
jl
shrb
iret
jno
lea
cmp
inc
pop
cld
aaa
push
mov
mov
dec
add
aaa
rol
inc
add
sub
popf
mov
inc
bound
and
ret
sub
pop
aad
xor
and
add
jb
sbb
pop
and
shrl
mov
std
mov
xchg
add
imulb
push
push
pop
push
jmp
jg
push
sub
cmc
pop
jecxz
mov
xor
lock
push
insb
aas
mov
bound
adc
add
xchg
sub
xchg
adc
or
es
pop
loope
add
in
addl
xchg
and
push
push
fbstp
xor
outsl
xorl
es
ljmp
stos
xchg
push
inc
pop
mov
and
test
mov
in
mov
dec
pmaddwd
push
movsl
cli
dec
popa
pop
or
loopne
jne
xor
lods
push
or
test
flds
xor
sbb
repnz
repnz
mov
ja
lock
in
div
jno
sub
cmpsl
jmp
test
and
gs
mov
adc
adc
jg
imul
jge
inc
pushf
scas
mov
je
and
mov
pop
jp
popf
push
loopne
subb
jg
or
mov
pusha
rcll
repnz
cmp
test
and
jl
mov
mov
and
mov
jns
mov
fwait
push
and
jecxz
icebp
repz
dec
hlt
test
push
sti
outsb
roll
and
cmpb
mov
xchg
or
dec
mov
mov
sbb
in
mov
mov
out
ss
dec
scas
lock
mov
add
mov
pop
cmp
test
pop
push
add
add
lcall
jp
pop
pop
imul
daa
mov
fcoml
jp
std
jecxz
aad
sti
dec
fbstp
cmp
hlt
mov
dec
jae
mov
enter
sbb
daa
loop,pt
or
lcall
inc
out
jmp
test
ret
xchg
cmp
xchg
jle
fwait
cmp
jg
push
lods
es
addr16
pushf
addr16
movsb
pusha
arpl
movswl
daa
add
stos
repz
movsl
mov
push
mov
or
sbb
lock
mov
mov
mov
fldcw
pop
fbld
cmp
repz
dec
mov
or
mov
repz
add
movsl
shll
fsubrl
ss
mov
xchg
in
mov
in
in
mov
insb
scas
sbb
mov
and
ficompl
cmpb
cmpsb
ret
or
lcall
nop
std
inc
mov
mov
pop
jecxz
mov
xor
mov
inc
xchg
fs
jnp
mov
mov
pop
stos
mov
popa
shl
dec
pop
testl
add
xchg
push
xchg
adc
lock
sti
mov
test
mov
xor
cmp
or
sbb
mull
inc
xchg
cmp
popf
push
mov
push
sub
mov
inc
test
pusha
adc
insb
sbb
dec
sub
movsl
push
pop
lahf
cltd
in
inc
loopne
repnz
add
sti
lea
xor
mov
and
xchg
push
mov
rol
push
sbb
push
dec
jo
cli
cmc
ss
aam
jle
mov
pcmpgtb
sahf
jnp
fmull
jne
sti
sbbb
mov
push
xor
and
add
nop
mov
and
nop
xchg
add
dec
out
push
or
mulb
out
mov
push
insb
push
cltd
mov
lret
repnz
pop
or
and
inc
mov
cld
in
dec
add
cmpb
mov
mov
sub
mov
mov
fdivs
aam
mov
adc
jp
jnp
ret
jle
xchg
lds
jno
cmp
dec
xchg
mov
cs
dec
ret
outsb
cmp
xor
sub
xorl
push
sbb
inc
add
and
dec
ret
fcoml
paddw
ret
jb
stos
pop
les
xchg
pop
stc
out
jecxz
nop
push
pop
pop
push
in
mov
push
stc
test
stc
or
jbe
or
outsl
or
out
shrb
sub
aas
dec
xchg
push
and
sti
jae
pop
mov
cltd
push
add
lret
mov
mov
sub
gs
fdivs
loop
movsl
cmp
push
and
push
incl
in
push
imul
lock
aam
mov
mov
call
decl
clc
sbb
jno
sti
aad
into
push
das
test
mov
add
out
xchg
rol
sub
inc
or
test
call
arpl
and
jp
jecxz
in
fldl
test
inc
xchg
fisubrl
xor
sbb
addr16
nopl
adc
push
sbb
outsl
pop
cmp
adc
sti
adc
loop
xchg
cmpsb
xchg
xchg
mov
inc
cmp
or
inc
cmpl
jb
mov
xchg
push
leave
inc
fisubs
xchg
inc
or
and
pop
lods
orb
cltd
jne
dec
pushf
in
outsb
xor
daa
bound
inc
testb
ljmp
cmpsl
daa
mov
lock
sbb
jmp
jecxz
xchg
loopne
imul
js
insl
rcr
lods
stos
mov
mov
test
jge
mov
pop
int3
push
jecxz
jns
push
xor
dec
aad
lds
add
addl
test
xlat
inc
popa
add
or
xchg
das
int3
jbe
loopne
pop
in
in
iret
dec
out
or
add
push
insl
pop
sbb
es
insl
jle
and
mov
rorl
jns
in
mov
mov
js
mov
add
sub
testb
jae
into
pop
adc
mov
arpl
dec
mov
sub
popf
and
scas
mov
or
in
int
sete
int
nop
xor
scas
test
add
cmp
dec
pusha
sbb
mov
push
sti
sarb
adc
fwait
aad
and
pusha
icebp
pop
ss
or
iret
lea
ds
orb
mov
mov
cld
sub
mov
push
cmp
pop
lock
xchg
jnp
mov
xchg
popa
xor
push
aad
shrb
test
pop
stos
mov
jg
jno
push
inc
mov
adc
mov
outsl
and
push
and
fwait
sti
adc
scas
shll
in
sbb
movsb
sti
sahf
cli
outsl
adc
adc
jnp
cltd
xchg
mov
ss
add
mov
nop
add
sbb
pop
xchg
inc
fsubrl
loope
popa
jp
or
test
adc
sub
add
fists
les
jnp
or
outsl
pop
xchg
mov
xor
sbb
adc
jbe
ret
aam
dec
mov
mov
shr
pop
and
jb
jno
cwtl
cmp
adc
sub
dec
pop
bound
andb
pop
adc
and
push
gs
push
cld
sub
cltd
mov
test
stc
mov
pop
jg
stos
xor
jbe
mov
cmpsl
cmp
sub
xor
cmp
cmp
adc
outsl
outsl
leave
faddl
jle
dec
jne
mov
insl
dec
mov
mov
fildll
daa
xor
aam
dec
and
inc
mov
int3
and
in
sub
pop
rcrl
inc
or
jae
cmp
pop
jmp
cltd
fdivl
pop
int3
add
xchg
xlat
pop
or
scas
mov
icebp
pusha
or
outsl
sub
lock
stc
dec
das
mulb
pop
or
xchg
sbb
push
std
and
add
ret
pushf
sub
mov
rolb
dec
pop
aaa
js
repnz
cmp
push
cmp
mov
jne
arpl
imul
mov
repz
ret
adc
xchg
lret
popa
sub
lock
adc
sub
pop
sub
ret
mov
mov
pop
cmp
pop
repz
test
cmc
push
dec
sti
jmp
adc
and
daa
push
push
out
add
push
xchg
daa
out
mov
push
mov
xchg
mov
sar
xchg
sbb
sub
and
and
jle
ljmp
mov
das
mov
lret
dec
mov
roll
divps
push
xor
aas
out
jae
fwait
pop
loopne
jp
outsl
in
pop
jecxz
adc
lods
daa
sbb
cmpsl
insb
xlat
mov
mov
insb
hlt
mov
fsubl
adcl
adc
cmp
rcrb
add
imul
mov
lcall
mov
popl
roll
push
clc
xchg
outsl
call
push
lahf
nop
or
insl
pop
clc
or
dec
testl
mov
stc
loop
push
mov
aas
fwait
adc
push
pop
xor
xor
or
jne
push
dec
jns
cwtl
add
dec
cmp
sbb
into
loop
add
outsl
push
push
mov
mov
aas
daa
mov
das
mov
fdivrs
js
incl
xchg
shr
xchg
push
into
imul
inc
jb
iret
inc
mov
xchg
sbb
jnp
jnp
divl
das
or
cld
jl
popa
clc
push
leave
sbb
scas
pop
psubw
loop
xchg
es
out
std
pop
leave
xchg
xchg
adc
ss
jmp
or
pop
lea
pop
cmp
aaa
inc
mov
mov
xchg
adc
lock
dec
mov
dec
mov
sbb
dec
adc
xor
aaa
add
xor
daa
mov
clc
aam
sbb
aas
xor
mov
lret
mov
sub
inc
leave
arpl
rclb
push
lods
daa
add
mov
lods
adc
sbb
xchg
aas
push
enter
add
imul
push
mov
mov
or
icebp
mov
jb
fstp
aam
int3
inc
lds
mov
in
dec
push
pop
cmp
pop
pop
fs
pop
loop
repz
dec
cld
gs
mov
leave
je
leave
shll
dec
ljmp
mov
add
mov
jmp
enter
aam
xchg
cmp
mov
outsb
mov
out
stc
dec
mov
clc
pop
mov
mov
and
sarb
or
in
mov
lahf
dec
roll
inc
cmp
jp
cmp
fs
lock
mov
mov
in
fdivs
xor
insb
pop
inc
mov
inc
mov
loop
cmp
cmpl
clc
jmp
out
icebp
fdivrs
pop
cmpb
aas
cmp
das
sbb
inc
leave
ja
hlt
jg
arpl
fcoml
call
or
push
loop
stos
sub
int
movsl
data16
push
cwtl
lcall
cmp
cmpsb
jge
inc
les
inc
pop
inc
adc
pusha
push
mov
sub
scas
or
adc
jp
inc
dec
sub
push
adc
outsl
or
ljmp
inc
push
xchg
cmp
push
outsb
push
ret
adc
lods
mov
cmpsb
dec
jo
clc
mov
sub
push
mov
mov
cmpsl
pop
cmp
in
sub
xchg
add
sub
mov
jns
jp
push
pop
mov
add
lret
inc
push
add
aam
stos
test
dec
inc
movsl
loop
pop
inc
insl
push
adc
xchg
xchg
rol
loope
lahf
adc
xchg
out
xor
fists
popa
push
push
push
adc
lcall
xchg
sbb
pusha
or
pop
fwait
les
icebp
mov
adc
add
sub
xchg
jns
push
mov
aad
push
pop
sub
cld
std
imul
clc
mov
xchg
and
imul
fcmovnbe
cs
enter
push
jbe
mov
ja
mov
pop
into
lcall
adc
imul
ljmp
sbb
movsb
int
int3
mov
inc
fsubrs
movsb
jmp
rolb
sbb
decl
pop
cmpsl
pop
fimuls
and
test
pusha
mov
andl
push
movb
ljmp
jecxz
mov
sar
pusha
or
imul
cmp
pop
xor
rorl
das
inc
push
leave
ds
mov
mov
gs
jl
xchg
lds
dec
cmp
jae
sahf
mov
subl
mov
lea
lea
mov
loope
inc
mov
push
leave
sub
stc
add
je
adc
lds
int
sarl
hlt
pop
popf
push
out
in
sti
mov
or
into
nop
mov
sub
pusha
xor
dec
or
cld
sub
adc
adc
jne
mov
add
divb
sahf
out
repnz
dec
movsl
aas
sub
adc
shl
jb
push
xchg
xor
sub
mov
std
jbe
mov
xchg
pusha
xor
out
mov
in
sbb
test
mov
negl
mov
sbb
fisubrs
mov
xchg
cmpb
sbb
xor
lret
ljmp
test
add
xor
sub
repnz
inc
jo
rclb
daa
iret
ss
pop
xor
iret
mov
call
pop
pop
sub
or
adc
jge
testb
add
test
add
push
mov
icebp
addr16
aas
daa
inc
js
pushf
push
jno
out
cmc
fisttpll
out
iret
xchg
push
arpl
je
xor
ss
mov
and
lret
insb
push
out
mov
pop
lret
xchg
inc
xchg
mov
push
leave
dec
and
aas
shr
and
sbbl
stos
cld
add
iret
cmp
decl
inc
gs
sahf
add
push
sti
pop
cmp
sbb
ret
sub
shlb
push
and
xchg
add
popa
aas
or
fisubl
xchg
popa
in
divl
mov
jae
bound
ret
mov
les
pop
jge
push
andb
addr16
int3
icebp
pop
hlt
stc
inc
icebp
mov
das
icebp
adc
rcrl
pop
loope,pn
lock
mov
mov
in
cmp
rorb
cli
out
adcb
movsl
mov
mov
popf
cmc
sti
jbe
pop
cmpsb
lock
aad
fs
fdivl
addl
inc
popa
das
fistpl
loope
or
out
sbb
or
stos
dec
lods
jecxz
loope
or
in
in
std
fidivl
dec
fisubs
clc
into
arpl
iret
push
mov
adc
ss
lea
add
mov
or
mov
push
shl
icebp
and
pop
or
jno
sub
inc
data16
push
bsr
cmp
jle
cs
mov
or
dec
lods
shr
sub
push
loop
lods
sbbl
leave
jno
dec
orl
clc
out
cmp
stos
cmp
stc
or
ret
jbe
outsl
lret
lcall
int
pop
or
rclb
add
adc
lds
inc
xor
cltd
mov
mov
mov
jecxz
pop
cmp
outsb
pop
mov
jae
sub
fisubl
push
leave
rcrl
add
ret
gs
sub
or
or
jge
mov
fs
xor
xlat
sub
dec
je
loopne
ss
pop
mov
add
push
fwait
out
fwait
loop
clc
cltd
test
daa
iret
bound
xchg
sbb
jbe
aaa
leave
cmp
test
mov
cmp
lret
xchg
nop
lret
add
adc
inc
ja
sbbb
xchg
xchg
psubsw
inc
or
ret
adc
sbb
pop
mov
sbb
sbb
fs
sbb
int
stos
bound
pop
movsb
cltd
imul
fldl
cltd
cltd
sbb
xor
lret
cwtl
push
add
sub
cmp
dec
pop
arpl
out
xchg
mov
lret
repnz
xchg
xlat
enter
push
jb
out
jl
aaa
mov
jl
outsl
push
out
stos
sbbl
loop
or
add
mov
lcall
out
adc
push
mov
ffree
std
shll
in
add
jmp
add
inc
js
xchg
jl
aas
xchg
jns
mov
dec
push
mov
and
push
adc
inc
and
sahf
clc
imul
call
cmpsl
or
ljmp
movsl
leave
outsl
div
popf
pusha
aad
xchg
xchg
or
push
aas
jl
incl
stc
jno
sub
out
fisttpll
mul
jecxz
sarb
add
imul
push
push
add
or
mov
cmp
inc
movsl
out
mov
shll
stos
fcomps
add
adc
aaa
into
fwait
mov
mov
or
ja
sbb
lcall
and
insb
jbe
mov
icebp
sbb
add
rcrl
rcrb
outsl
adc
lret
movsl
and
fiaddl
js
jbe
mov
insb
in
xor
std
iret
jl
sub
pop
je
ljmp
pop
xchg
mov
jg
imull
push
repnz
pop
mov
cltd
arpl
xor
or
pop
jp
mulb
push
outsl
push
push
insl
adc
mov
adc
test
xor
jmp
flds
cmp
mov
mov
scas
adc
xchg
xchg
push
sbb
jl
sbb
pop
adc
ljmp
repnz
push
out
pop
push
aad
mov
mov
movsb
jp
pop
push
xchg
xchg
mov
pop
xor
xor
lds
xor
lret
cmpsb
xchg
test
and
shrb
sbb
loopne
add
or
scas
ds
pop
aaa
popa
cltd
mov
jmp
push
add
mov
loope
js
xor
cwtl
add
int3
push
movsl
lcall
ret
test
lret
popa
cmp
lea
in
mov
lea
in
xchg
adc
mov
into
and
dec
push
aas
xchg
stc
cs
sar
icebp
stos
nop
out
ficoml
hlt
pop
lea
das
push
or
imul
repnz
dec
test
pushw
dec
sub
shl
or
mov
mov
add
loopne
test
test
stos
ljmp
lcall
sbb
add
mov
in
cld
enter
dec
ds
fs
test
in
push
cltd
fdivs
dec
sbb
fidivrl
gs
pop
xchg
xchg
aas
outsl
rolb
test
pop
imul
ss
cmp
mov
test
mov
ljmp
shlb
enter
outsb
push
outsb
adcl
xlat
ret
xchg
or
fbstp
push
add
ja
std
pop
fwait
cmova
nop
pushf
insb
fmull
imull
iret
mov
scas
push
popa
sub
or
pop
mov
mov
xchg
pop
dec
xchg
scas
es
dec
pop
sbb
orb
adc
fadds
stc
cmp
xchg
cmp
cld
and
inc
mov
cltd
ljmp
add
ss
in
fs
adc
hlt
xchg
mov
inc
push
push
fscale
stos
mov
push
xor
pushf
aad
jmp
jmp
push
mov
cs
scas
push
das
repz
mov
pop
jne
mov
loop
lea
fucom
bnd
rol
call
xchg
cmpsl
rcrb
daa
push
test
lods
iret
fisttpl
addr16
jne
dec
les
sub
mov
rcll
rclb
push
hlt
mov
dec
fdivl
jecxz
mov
push
mov
jl
dec
stc
cmc
les
jge
sub
insl
mov
call
pop
leave
out
xchg
push
orl
cmovs
pop
dec
push
pushf
sub
mov
lcall
cs
sub
push
add
clc
dec
movsb
push
xchg
ret
rolb
inc
fidivrl
pop
test
or
adc
dec
mov
jp
mov
adc
adc
inc
lret
sahf
sbb
adc
ret
xchg
fdivrl
inc
dec
cmp
in
adc
mov
lcall
pop
dec
sbb
jecxz
pop
adc
sub
sarb
js
push
hlt
popa
push
adc
jmp
scas
jne
or
bound
add
jecxz,pn
shl
inc
jo
rorl
stc
lcall
xor
sbb
fs
fsub
lahf
mov
fwait
fs
jg
cmp
xor
pop
in
xchg
or
xchg
dec
loopne
das
and
cmp
sub
push
or
or
add
xchg
sbb
mul
stos
mov
mov
push
push
or
out
addr16
mov
inc
push
test
jb
loope
and
sbb
or
test
fistl
imul
push
sbb
jnp
aad
push
pusha
test
outsl
or
aaa
sti
jne
push
data16
aam
daa
das
xor
gs
leave
adc
cmc
stos
pop
xor
ljmp
inc
fsubrp
xchg
fisubrl
and
lret
lods
repnz
cs
and
insl
xor
dec
call
fisttpll
gs
mov
jg
sub
add
lods
nop
push
jge
lods
push
pusha
xchg
push
and
adc
rclb
mov
inc
jb
shll
add
mov
lahf
sub
pop
jae
or
mov
push
test
jecxz
mov
xchg
divb
ret
xchg
shlb
mov
das
push
mov
loop
mov
mov
mov
mov
inc
outsl
xor
inc
cmp
lret
pop
xchg
mov
pusha
in
mov
pop
andl
imul
mov
ljmp
std
lods
push
xor
aaa
jne
bound
ficoml
mov
push
rcll
pop
pop
pop
hlt
mov
push
push
cmp
je
test
ja
out
lock
jno
into
xchg
lock
pop
mov
push
je
lds
cmp
ljmp
jns
jbe
fs
repnz
enter
ja
sub
mov
lret
aas
pop
xor
or
fwait
adc
and
xchg
popf
orl
dec
pop
jae
lret
xchg
pop
and
mov
mov
sarl
sahf
ss
out
mov
push
inc
pop
sub
lods
scas
push
fadds
pop
add
lcall
adc
pop
adc
cs
adc
cmc
imul
call
sub
push
pop
or
and
aaa
xchg
jae
push
pop
push
or
mov
xchg
ficoms
mov
ficomps
jl
mov
jo
imul
dec
mov
mov
divl
xor
ss
jns
insb
rcll
cmp
test
xor
jnp
cli
jne
or
push
xor
lods
cmpl
popa
cmp
sbb
mov
and
xchg
pop
adc
les
push
push
cmp
push
adc
inc
cmp
or
push
rorl
mov
inc
push
insb
aad
mov
lods
lret
cmpsb
sub
sti
cmp
dec
fnstsw
dec
pop
sbb
pop
outsl
cmpsl
sbb
xchg
mov
jmp
adc
roll
imul
lods
repnz
push
sub
and
aam
ret
shll
clc
out
cmpsb
jb
push
dec
or
mov
mov
mov
jmp
jno
adc
push
in
xchg
or
mov
adc
add
inc
les
pop
movsl
movsb
shll
in
xchg
mov
cmp
and
sar
mov
cs
icebp
adc
mov
mov
sub
fmull
xchg
xchg
push
test
nop
and
push
pushf
inc
scas
cltd
nop
mov
cmp
add
jnp
mov
je
adcl
inc
push
movsb
das
push
pop
mov
pop
push
xor
arpl
lds
mov
adc
xor
mov
dec
in
pop
pop
and
jl
mov
xor
sub
out
mov
negb
xchg
rcrl
xor
jnp
fwait
stos
sbb
loop
cmp
sub
add
or
repz
mov
cld
dec
cmpsl
imul
jb,pn
add
imul
xorb
cmpsb
in
mov
add
fsub
das
je
insl
shlb
movsl
insl
xlat
inc
fwait
mov
nop
push
hlt
adc
js
xchg
push
fcoms
loop
pop
dec
insb
pusha
orl
hlt
sbbb
push
push
xor
xor
xor
add
and
xor
pushf
xchg
mov
sub
gs
fcmovnb
repnz
mov
aas
psrad
and
loopne
mov
sbb
repnz
jp
mov
jecxz
and
int3
or
incb
pop
outsl
or
loope
mov
push
fs
dec
sub
mov
sti
mov
xchg
mov
bound
or
les
in
sub
mov
stos
mov
dec
and
mov
jmp
out
xchg
mov
mov
push
xchg
and
mov
mov
bound
xchg
jecxz
dec
push
sbb
jp
cmpsb
pop
mov
aaa
jmp
inc
jp
jmp
xchg
jne
push
aas
mov
icebp
cmp
add
xchg
scas
mov
stc
aad
push
rcrb
negl
addl
js
xor
or
addr16
sahf
mov
lock
xchg
push
insb
add
imul
and
dec
gs
cmp
cltd
adc
mov
sub
xchg
imul
push
dec
testl
pop
ds
dec
cwtl
icebp
xchg
and
sub
sub
lea
cwtl
dec
dec
lret
cmpsl
pop
outsb
rclb
jno
jns
inc
clc
jae
or
xchg
mov
mull
lea
cmpsb
shrl
fucom
loop
lods
addr16
add
and
insb
daa
mov
lock
sbb
sbb
jae
add
jae
adc
out
into
mov
rorl
cmp
rcrb
or
pop
inc
flds
sub
into
mov
pop
adc
fdivrl
out
movsb
push
sahf
sub
lods
in
outsb
xchg
push
adc
xlat
mov
std
sbb
pop
sub
adcl
mov
les
xchg
jecxz
lds
es
in
pop
lock
adc
pop
test
and
push
fists
loope
outsl
pop
enter
adc
lcall
out
lcall
cwtl
mov
mov
and
xor
push
cmpsl
lcall
or
adc
and
ret
dec
roll
mov
sbb
pop
out
std
dec
cltd
mov
subl
test
pop
shll
jno
fadd
mov
adc
lods
mov
mov
xchg
movsl
or
xor
inc
out
xor
xor
sbbb
fcomps
xor
cmp
push
test
jle
pop
hlt
add
leave
xchg
test
jne
push
sbb
jl
aaa
sub
and
dec
push
xor
xchg
repnz
dec
ljmp
jle
cmp
sbb
fildll
ds
mov
push
in
test
adc
xchg
rclb
push
xlat
push
shll
jmp
ret
movsb
mov
push
addb
inc
sbb
inc
sub
sarb
mov
mov
push
xchg
push
call
cmc
jle
add
es
sub
mov
ficoml
call
or
int3
std
cltd
xchg
loop
inc
stc
push
testl
sub
outsl
mov
jp
orl
lahf
loop,pn
lahf
insb
loopne
push
mov
aam
pusha
sub
xlat
pop
jo
popa
push
lret
cmp
lock
call
sarl
sbb
mov
cmp
push
out
dec
pop
xchg
push
dec
dec
enter
cmp
outsb
loopne
sub
adc
pop
sub
adc
in
leave
ret
jae
xor
aas
or
xlat
push
lds
jno
test
jcxz
jne
adc
fcomp
stos
js
insb
hlt
mov
stos
and
adc
mov
add
jmp
repz
dec
inc
std
and
iret
out
mov
inc
stc
fistpl
or
add
jno
mov
ljmp
aam
sub
cli
mov
dec
xchg
xchg
adc
push
jmp
cmpsb
cmc
cltd
add
mov
jp
jnp
stos
out
sub
out
aad
mov
nop
jns
push
mov
mov
test
fs
xor
and
or
movl
mov
push
pop
mov
rol
mov
out
loop
jno
push
fisttps
std
cmp
adc
addr16
ja
scas
xchg
lea
add
popf
dec
jg
cmp
clc
cmpl
add
fwait
clc
daa
fisubrl
add
jmp
arpl
ret
bound
lahf
aaa
int
int3
xor
push
gs
and
incl
testl
add
sbbl
daa
mov
stos
mov
stc
movsb
into
add
xor
ret
pop
sub
jge
fwait
pop
test
xchg
xchg
pop
inc
pushf
in
cltd
fcoms
jns
sub
xor
and
dec
xor
sbb
loop
jmp
jg
xorl
mov
movsb
ret
push
pop
mov
dec
cmp
in
adc
pop
ror
popf
and
lds
sar
call
call
in
in
dec
push
mov
imul
test
ss
je
sbb
in
std
ss
ret
push
and
fadds
out
pop
stc
or
push
mov
pop
sarl
sub
or
mov
xor
aas
mov
mov
in
cmp
outsb
mov
nop
sbb
mov
out
sbb
push
test
pop
aaa
mov
out
sub
mov
or
or
mov
mov
outsb
push
push
dec
repnz
imulb
cmp
stos
lcall
or
loop
jg
test
inc
push
jo
jmp
mov
xor
push
sbb
push
inc
cmpl
test
and
lock
leave
arpl
cmc
call
cmpl
adc
xchg
insb
cli
lods
xchg
neg
orl
leave
push
stos
lock
leave
dec
faddl
shrb
or
push
insl
mov
call
iret
jge
cmp
ret
in
xor
jle
rcll
mov
lock
or
jae
and
mov
cmp
mov
jne
cltd
mov
and
ss
adc
cmp
mov
sbb
mov
adc
mov
js
fbld
inc
mov
popa
jle
cltd
test
mov
cmc
pop
dec
jmp
push
adc
out
add
mov
push
in
mov
and
sbb
sbb
inc
adc
sub
testl
adc
je
lcall
dec
sub
imul
lds
in
int
mov
pop
dec
fildl
sti
push
test
push
mov
pop
sbb
mov
sub
add
repz
mov
cld
mov
inc
cmp
sub
mov
pop
jo
hlt
andl
mov
mov
mov
and
mov
push
gs
add
test
pop
dec
js
mov
jbe
or
lods
in
jl
jo
xchg
outsl
push
mov
xchg
mov
xor
xor
lea
xchg
dec
adc
add
mov
dec
aad
xchg
add
add
in
sahf
pushf
mov
xchg
outsb
iret
ret
sbb
shlb
sbb
mov
ret
and
imul
sar
mov
lds
mov
mov
shr
add
push
add
fstps
test
sbb
bswap
repz
add
cmp
outsl
jp
cmp
mov
fsts
jbe
xchg
push
aas
mov
ja
mov
mov
xor
cmp
and
and
lcall
ds
jmp
add
and
sbb
xor
out
xchg
out
add
mov
jno
xchg
and
out
ficoms
in
cmp
mov
loop
loope
jecxz
mov
sub
pop
daa
or
mov
dec
or
jnp
sub
xchg
cs
pop
dec
test
inc
fistpl
sbb
sub
dec
cmp
scas
lods
adc
xor
inc
out
std
das
aaa
mov
xchg
sbb
dec
inc
xlat
insl
test
cmp
cwtl
xlat
fld
data16
cmp
mov
mov
mov
aad
xchg
into
dec
push
outsb
push
std
ja
ret
std
je
inc
cmp
popa
pop
fcompl
jecxz
popf
repnz
xchg
sti
push
mov
cmpsl
hlt
push
xor
fwait
sub
decl
jbe
popa
out
sbb
imul
in
sub
test
andl
mov
ficoml
lock
scas
add
mov
push
cwtl
jg
and
jne
cltd
mov
gs
sar
push
dec
cwtl
push
pop
int3
add
sub
adc
jno
stos
sbbl
cmp
push
mov
dec
jmpw
mov
sbb
loope
xchg
and
out
and
add
adc
pop
bndstx
addl
decl
cs
ds
cmpsl
jle
push
lahf
std
mov
xor
add
in
jle
lock
add
mov
push
or
sub
sub
xchg
or
leave
cmp
mov
leave
cld
pop
icebp
jle
dec
into
mov
mov
mov
pop
or
xor
in
lret
ss
loope
inc
xchg
jb
fnstsw
adc
les
mov
mov
pop
xor
xor
adc
in
outsb
repnz
push
lea
ret
mov
xchg
sbb
and
pop
xchg
andb
pop
push
cmp
push
fcompl
cmpsl
aam
test
xchg
stc
cltd
stos
dec
mov
pop
int3
dec
stos
or
lret
fstpl
xchg
or
xchg
in
ret
xlat
push
mov
xchg
mov
and
std
fsubl
data16
int
cmp
mov
mov
fistpll
mov
mov
xchg
jo
out
mov
jge
mov
mov
cmp
lock
test
mov
loopne
bound
out
mov
add
dec
cwtl
rorl
cmpsb
jecxz
sub
jbe
sbb
add
out
add
push
insb
add
lods
lea
adc
or
jbe
add
mov
fwait
in
xchg
pop
shrl
leave
nop
std
mov
pop
jg
insl
jecxz
js
cli
sub
inc
mov
ret
icebp
out
dec
int3
push
xor
lock
mov
imull
stos
pop
sti
sub
or
test
test
lods
push
cltd
jo
aam
pop
mov
fucomi
std
mov
or
orl
mov
jp
push
mov
bound
js
lahf
push
push
pop
cmp
bound
mov
ljmp
in
in
mov
pop
adc
mov
stos
sub
mov
ljmp
push
and
xor
add
or
mov
cltd
sahf
pop
aam
std
mov
loopne
enter
pushl
imul
or
scas
push
addr16
pop
and
fisubrl
and
stos
xorb
das
xchg
cld
testl
add
jnp
repnz
outsl
jg
push
ror
jle
in
sbb
push
pop
xchg
jl
inc
arpl
test
xchg
mov
jbe
in
xchg
inc
sub
rclb
and
fwait
jge
test
ret
nop
sub
cwtl
in
lods
lcall
call
mov
repnz
aas
je
lahf
dec
add
arpl
outsb
pop
ss
and
sahf
mov
scas
addb
pop
sbb
jg
add
je
or
xchg
inc
mov
fldcw
jo
mov
mov
xchg
xor
or
dec
scas
inc
shl
xchg
lds
add
mov
push
fnstenv
and
mov
or
or
push
sbb
inc
or
imul
jae
sbb
sbb
push
inc
lahf
xor
fs
sub
push
inc
jmp
inc
outsl
jmp
div
push
xchg
sbbb
sbb
cmc
mov
inc
in
dec
testl
clc
lock
ss
addb
movsl
pusha
sbb
aas
dec
xchg
mov
fnstcw
mov
imul
add
sub
fsubp
cld
cmp
xchg
mov
sub
xchg
imul
add
jg
in
pop
stos
add
rclb
xchg
stos
pop
or
rdpmc
sbb
cmp
les
mov
sub
push
loope
shr
shr
rorb
aas
int3
jno
and
shll
pusha
div
cmpsl
xor
stos
mov
or
test
add
test
leave
pop
add
xor
add
enter
fidivrs
out
mov
pop
adcl
inc
pop
adcl
pop
jle
jl
sahf
cmp
push
push
mov
shll
mov
into
sbb
jno
adc
fldln2
pop
jl
je
xchg
sub
cs
mov
mov
testb
jne
incl
xlat
xchg
mov
int
addr16
sbb
sub
aaa
enter
xor
jp
add
push
test
fildl
jbe
sbb
stos
push
imul
arpl
xor
cmpsb
aas
cmp
xorl
out
jb
or
mov
add
leave
test
iret
and
sub
nop
aam
adc
movsb
ret
and
cmp
mov
jg
xchg
cmp
lea
out
add
xchg
mov
call
out
fdivrs
jns
add
xchg
stos
nop
add
hlt
jns
cmpl
mov
inc
sbb
decl
adc
sbb
ss
insl
out
or
cmp
jne
sbb
push
or
xor
mov
adc
loope
pop
mov
pusha
push
mov
inc
filds
xchg
push
pop
push
in
mov
mov
loopne
and
sbb
push
lretw
leave
lods
push
and
ljmp
cmp
imul
inc
sbb
inc
mov
xchg
pop
jno
mov
jmp
fcompl
mov
sbb
ds
push
mov
lcall
je
ret
pusha
xchg
aas
push
stos
lret
leave
pop
call
jp
notb
cwtl
or
shll
xor
and
add
sub
scas
jmp
out
xor
xchg
je
roll
jge
mov
xor
push
sahf
mov
scas
pop
push
js
jg
lcall
je
jmp
sbb
in
lea
stc
scas
ss
pushl
out
and
mov
imul
pusha
test
data16
jp
mov
in
cmp
mov
in
jo
xchg
addr16
push
clc
dec
sbb
test
in
pop
rcr
rol
xor
inc
sahf
or
xchg
aaa
popa
loope
call
stos
es
pop
mov
mov
mov
icebp
pop
xchg
inc
mov
in
out
fnstcw
dec
sub
adc
sahf
jecxz
dec
repnz
out
lret
sub
imul
inc
mov
outsl
mov
mov
adc
pop
call
fists
pop
out
idivb
push
aam
in
lods
aam
je
mov
rorb
pop
mov
sub
pop
idivl
and
jbe
std
xchg
lret
push
popf
mov
scas
add
cvttps2pi
insb
orb
sti
nop
es
shr
jmp
cmpb
pop
sub
in
sub
mov
cltd
xlat
cmp
testl
push
stos
sahf
add
outsb
std
xor
and
cli
and
push
aas
or
inc
xor
mov
and
lods
jp
repz
add
scas
xor
add
and
mov
call
xchg
mov
cld
daa
lods
testl
mov
ret
push
jns
sti
add
mov
or
push
aad
inc
jno
es
cmpsb
mov
pop
sbb
fcompl
into
fwait
aam
push
test
addr16
loopne
lcall
in
out
add
push
xchg
add
pop
insb
jle
sbb
adcb
stc
and
lcall
insl
jae
das
roll
movsb
cmpb
cmp
sti
popf
jg
js
int
sbb
push
jge
inc
cld
imul
ret
inc
xchg
or
dec
inc
scas
sub
fbstp
and
rorb
lods
mov
mov
shll
ret
in
pop
ss
outsb
iret
leave
cmp
dec
js
pop
aas
mov
int3
mov
insl
add
sub
sub
jo
lock
push
jae
xchg
mov
inc
lds
pop
mov
add
out
sbbb
cs
inc
ss
fsubrl
pop
add
dec
cmp
mov
repz
iret
pop
daa
ds
xchg
add
insb
add
iret
dec
sub
xor
pop
push
mov
push
sbb
stc
inc
mov
fmull
cld
mov
and
jnp
adc
enter
lock
cld
or
and
sbb
movsl
jo
out
out
arpl
icebp
loope
pusha
push
das
scas
inc
mov
cmp
lcall
pop
lock
leave
pop
movsl
xchg
mov
lods
push
mov
dec
and
or
xlat
lea
icebp
shl
mov
jmp
jmp
jno
xorb
mov
push
aas
sub
scas
daa
gs
cwtl
mov
loop
mov
shrl
nop
mov
cmpsl
mov
jp
cltd
out
sarb
add
insb
testb
shl
lahf
mov
sub
dec
mov
iret
xor
ljmp
iret
movsl
fstpt
lahf
stos
cld
cs
cmp
pop
in
ficomps
add
mov
pusha
pop
dec
aad
incb
dec
ret
fdivp
fistl
jmp
incl
and
dec
mov
andb
mov
addb
int3
mov
jb
adc
fsubp
ds
fdivrs
push
or
and
pop
rorb
adc
cmpsb
xor
mov
andl
adc
dec
or
je
aas
fcmovnu
or
loope
mov
xorb
xor
and
iret
faddl
mov
jo
mov
sarl
movsl
push
int3
aaa
push
jb
cmp
sti
repnz
lcall
pop
aam
mov
aas
data16
popf
insl
xor
fistps
pop
add
add
das
test
jg
xchg
cmc
nop
lds
sub
jo
xor
loopne
or
and
scas
and
add
scas
mov
das
out
push
jl
das
adc
mov
imul
mov
inc
add
sbb
pop
sbb
sub
adc
push
jge
ret
xchg
rcrb
cmp
call
call
cltd
idivl
cltd
xor
arpl
jbe
sub
addb
mov
add
lahf
pop
add
sbb
pop
mov
dec
je
fists
sub
in
xor
ficompl
and
cwtl
gs
sub
jo
fcmovnb
out
mov
dec
lock
fst
nop
addr16
dec
jecxz
xchg
dec
sbb
das
jbe
pop
flds
pop
cli
lea
push
sub
push
repz
pop
or
mov
fs
add
cs
pop
jo
mov
aaa
mov
out
aas
aas
inc
test
mov
fadd
test
xchg
pop
or
mov
xlat
and
inc
mov
testl
xchg
bound
pop
imul
jecxz
or
nop
daa
popf
sbb
cmpsl
clc
sub
or
popf
ds
mov
inc
push
lret
int3
loop
roll
cwtl
sub
ds
and
jle
loope
adc
push
adc
in
iret
js
cmp
out
hlt
addr16
imul
mov
cld
test
subl
add
ror
add
int3
je
roll
int3
jmp
in
dec
leave
sbb
stos
jnp
jne
mov
stos
mov
inc
xor
and
xchg
or
sbb
aam
iret
hlt
lret
xchg
add
test
in
gs
decl
stos
lret
add
push
mov
cli
sbb
cmp
lock
je
cmpsb
cmc
mov
xlat
pop
dec
rol
or
jb
fs
shrl
cmp
add
leave
cld
cmp
sub
outsb
pop
sub
or
mov
jge
outsb
xchg
or
sbb
mov
addr16
cmpsb
pop
xor
mov
ds
mov
mov
int
movsb
or
and
lds
sbb
clc
xor
add
pop
ret
cwtl
push
test
lock
sub
push
and
shll
int3
cmpsb
stc
lret
xor
and
cmp
sub
cmpsb
aam
sti
std
cmp
stos
rorl
push
push
js
dec
sbb
fstl
sbbb
inc
xchg
cmpsb
mov
mov
test
jnp
mov
sbb
and
mov
cli
and
in
mov
jg
adc
pop
sub
inc
cld
mov
mov
sbb
mov
add
imul
lcall
inc
or
fisubl
push
jge
or
sub
das
aad
inc
out
ljmp
sbb
mov
decl
adc
sub
pop
mov
or
adc
pop
orl
stos
mov
push
mov
rorb
bnd
mov
mov
in
daa
movsb
xor
jecxz
adcl
cmp
sti
clc
ss
cwtl
mov
test
mov
xchg
stos
test
fst
adc
mov
addr16
hlt
and
mov
or
pusha
lret
in
jns
adcl
ljmp
outsl
hlt
add
xchg
aam
mov
sbb
orb
dec
mov
out
mov
lahf
sub
or
hlt
cmp
push
push
cmp
xchg
inc
add
test
jne
cmc
aad
sti
mov
es
repnz
jge
pop
sbb
dec
cs
icebp
adc
mov
adc
mov
lods
or
mov
push
fldenv
jbe
mov
adc
inc
or
and
pop
mov
xor
inc
and
xorl
loopne
adc
cmpsl
push
inc
xor
les
xchg
cmp
fcmovnb
cmc
jnp
fwait
sahf
into
lret
fisubrs
clc
inc
cli
pop
outsb
xor
mov
popa
loopne
cmpb
inc
sub
gs
rclb
push
push
fdivp
sub
jb
jno
cmpsb
repnz
and
subb
xor
pop
pop
iret
inc
mov
pop
push
mov
outsl
fucomip
fidivl
movsl
idivb
stos
jle
jne
jno
xchg
aas
xor
pushf
fisubrl
daa
mov
or
and
in
test
mov
pop
movsb
push
xor
push
ret
push
push
mov
repz
testl
or
mov
cmpsb
mov
inc
movsb
js
mov
leave
shlb
add
cmpsb
inc
xor
int
in
or
cmc
mov
popf
sbbl
lods
in
sbb
enter
popa
inc
xor
stc
loope
test
fucomip
or
inc
mov
xor
or
sbb
cmpsb
ret
xlat
fcmovnu
push
mov
imul
ret
cmc
insl
jp
ds
hlt
rol
les
pop
imul
jnp
xchg
stc
fcomi
or
out
out
push
mov
outsl
ficoml
test
rcl
js
and
mov
jcxz
leave
jecxz
aaa
test
mov
lds
outsl
outsb
add
fistps
arpl
cld
push
mov
push
enter
lods
mov
and
gs
fwait
mov
adc
add
arpl
nop
es
mov
lods
and
mov
sub
push
mov
mov
loope
out
leave
rcrl
lods
out
pushf
adc
dec
inc
push
loopne
ds
imul
repz
mov
mov
popa
ljmp
and
adc
add
push
xchg
jno
sbb
aaa
sbb
sarb
sbb
dec
imul
pop
fwait
and
mov
lods
add
push
dec
mov
mov
sub
repnz
pop
lcall
adc
or
mov
dec
ret
mov
sub
mov
add
gs
loop
rorl
xor
or
daa
sub
or
jl
orb
imul
outsl
add
adcl
rcrb
fstp
jae
mov
int3
and
mov
es
dec
or
inc
test
loop
ljmp
aaa
xchg
out
and
jmp
push
mov
jge
xchg
mov
add
mov
call
lds
test
or
dec
dec
in
in
or
arpl
mov
dec
fs
push
cld
mov
xchg
xchg
fdivrs
xchg
out
data16
addl
add
fisubrs
xchg
xchg
lock
shrl
lcall
mov
lret
std
fwait
jbe
outsl
push
lret
in
inc
and
lret
mov
fdivs
aaa
or
sub
adc
dec
xchg
mulb
sub
xchg
shr
jge
push
repz
add
mov
cmp
or
xor
inc
movsb
jo
push
mov
jbe
push
adc
pushf
popf
mov
adc
mull
mov
lock
inc
fbstp
repz
push
xchg
nop
mov
xchg
aam
inc
test
dec
mov
ljmp
add
loopne
dec
shrb
add
test
inc
scas
xchg
dec
icebp
mov
dec
jl
pop
cmp
add
or
xor
mov
test
xchg
aad
insb
cmpsb
loop
pop
pop
jecxz
xor
icebp
jbe
cmpsb
test
and
and
push
mov
add
out
xchg
add
data16
pop
jmp
inc
or
add
lret
mov
icebp
add
imul
sbb
mov
dec
or
mov
and
leave
jge
aas
pop
ja
cmp
das
jmp
mov
mov
jne,pn
or
cmpsl
add
insl
adc
stc
incl
dec
cmp
pop
jns
iret
inc
imul
fnstsw
mov
popa
arpl
jns
jae
xchg
adc
into
xor
mov
or
add
clc
adc
push
add
push
xchg
mov
sub
mov
dec
leave
mov
add
das
or
xchg
and
lahf
insb
int3
inc
fcoms
movsb
mov
adc
and
sub
and
ss
popf
into
add
and
jae
gs
mov
and
shlb
and
out
xchg
stos
in
pop
mov
arpl
dec
in
xor
sub
mov
test
xor
ss
push
mov
xchg
lret
cmp
dec
dec
scas
sbb
or
lahf
ret
in
cld
aaa
aad
mov
popf
mov
pusha
and
enter
arpl
ds
fimull
sub
lds
jbe
pop
lret
imul
inc
in
xchg
scas
cmp
jmp
cmpsl
xor
sbb
push
cmp
xor
test
cltd
inc
mov
pop
decb
sub
cs
cmp
lahf
test
outsl
push
pop
lcall
lahf
test
xor
or
cli
pop
addr16
sub
lahf
cmpsl
in
mov
andb
push
repnz
xchg
push
jecxz
and
out
sbb
orl
in
ljmp
enter
ss
movsb
outsl
or
mov
add
inc
shr
int
dec
dec
sub
pop
cmp
mov
push
rolb
fcomps
or
pop
jbe
imul
in
mov
sti
cmpl
sbb
in
jecxz
add
pop
jecxz
out
jae
scas
aam
adc
jae
rorb
pop
xchg
lcall
mov
repz
dec
jns
mov
mov
js
mov
outsl
lea
jo
addb
mov
or
push
hlt
xchg
adc
jne
fsts
jmp
pop
js
cs
inc
ja
mov
rorl
dec
dec
pop
scas
cli
fcomps
xchg
loopne
pusha
xchg
into
cmpsl
sbb
je
dec
insb
sti
xor
cmpsl
les
cmc
xchg
dec
inc
insl
push
es
xchg
lds
imul
pop
inc
rolb
imul
jns
dec
cld
lcall
inc
scas
shrb
lea
adc
pop
mov
add
out
dec
sbbb
push
xor
mov
in
jbe
int3
mov
xlat
dec
iret
pop
test
sbb
testl
loop
popf
fs
or
jl
push
pop
xor
mov
fldt
sub
jno
or
xor
push
sbb
xchg
or
cmpsl
adc
in
cmpsb
or
shrl
and
std
and
lds
mov
sbb
out
jnp
sub
xor
jmp
fdivrl
add
dec
mov
sub
lcall
mov
lret
cmc
xlat
mov
pop
push
sbb
mov
mov
dec
mov
leave
std
and
gs
and
and
mov
xor
popf
xor
push
mov
mov
lahf
add
cmp
nop
add
imul
dec
pusha
call
pop
xor
in
in
mov
push
push
adc
or
ret
inc
sti
mov
add
icebp
pop
js
jne
sbbl
pop
xchg
pop
nop
sbb
dec
fwait
mov
sub
cmp
cmpsl
out
jo
mov
les
shlb
roll
adc
lret
addr16
aad
shl
stc
pushl
jg
jns
lods
xchg
mov
mov
xor
pop
jo
mov
sti
push
mov
lds
and
nop
jmp
push
jae
adc
scas
and
mov
std
stos
lods
loop
sbb
add
push
call
jbe
and
push
lods
bound
call
sbb
sbb
xchg
scas
xor
icebp
dec
sub
hlt
dec
and
adc
pusha
lds
jmp
ds
fcoml
pop
sbb
aas
push
cmc
test
or
push
stc
and
jle
ds
incb
das
push
int3
pusha
jmp
insb
push
cmpsl
das
jnp
roll
int3
fcmovnu
sub
call
pushf
adc
cmpb
push
fstl
mov
cld
sbb
inc
divl
xacquire
xchg
fdivl
scas
jge
lock
jnp
pop
lock
std
scas
mov
sarl
mov
fsubs
mov
les
cmp
clc
pop
sti
mov
sbb
sub
popl
mov
and
iret
or
and
fimuls
inc
push
adc
inc
outsb
cmp
cmp
push
aaa
insb
xchg
and
nop
ljmp
lock
mov
or
push
das
clc
shrl
sbb
jnp
cltd
add
ss
jo
push
xchg
jne
insl
fisubs
mov
xor
ljmp
xor
xchg
ja
je
jno
push
sub
les
les
jo
dec
inc
out
neg
xchg
es
daa
ss
jle
inc
ret
mov
sbb
call
aam
adc
adc
push
mov
pop
test
sbb
lahf
mov
mov
lea
in
jle
and
sub
mov
imul
adc
stos
push
sub
mov
mov
je
mov
popf
jo
dec
fldlg2
fwait
gs
pusha
ret
sbb
ss
xor
mov
xchg
mov
sub
enter
cmp
sbb
mov
out
or
stc
jne
in
test
popf
pushf
addr16
sub
sbb
xor
aaa
sbbl
jnp
fs
fcom
int3
sbb
adc
mov
imul
int3
mov
and
mov
mov
addb
adc
xor
roll
cmpsl
and
adcl
jle
add
shrb
mov
xor
popf
mov
adc
xor
add
jl
push
or
aas
sbb
sub
outsl
ljmp
imul
dec
cld
and
shl
in
sti
iret
xorb
cmp
push
mov
addr16
adc
sub
add
xor
pop
mov
dec
and
int3
push
and
int3
and
sub
popa
pop
adcl
sbb
add
add
test
aas
add
mov
frstor
call
pop
iret
push
js
aad
jl
xchg
je
addr16
mov
and
mov
mov
sub
cs
mov
xor
jl
enter
and
lcall
mov
out
pop
mov
or
mov
xor
jle
sbb
add
or
pop
loope
lcall
mov
and
mov
add
push
cmp
xchg
test
pop
cli
mov
fisttpl
jle
and
test
mov
or
mov
arpl
sbb
lods
iret
leave
mov
mov
pop
dec
repnz
adc
pop
pusha
mov
mov
ljmp
adc
push
shrb
clc
movsl
hlt
es
out
loopne
mov
std
or
sahf
push
add
sbb
andl
or
mov
lret
mov
sahf
fiaddl
in
fwait
aaa
ss
sbb
cld
mov
jnp
xlat
mov
jnp
sub
sbb
outsl
inc
push
add
filds
jmp
push
stc
imul
jnp
jle
loopne
popa
lock
mov
pusha
test
sti
shll
clc
cmc
insl
cmpsb
dec
arpl
mov
push
mov
popf
inc
bound
jb
adc
sbb
je
imul
loope
call
add
sbb
rorl
fsubs
cmpsb
mov
dec
push
imul
inc
jns
mov
jb
mov
sub
pop
mov
add
popa
es
jl
lock
repnz
mov
jl
xchg
dec
pop
and
xor
movsb
pop
mov
aam
pop
adc
sti
call
or
fwait
iret
mov
shr
xchg
ljmp
fildl
xor
negb
aas
adc
push
lahf
popa
fs
inc
sub
push
xchg
mov
or
push
lahf
jl
dec
add
mov
or
leave
aad
mov
xchg
push
cld
mov
out
clc
dec
add
inc
sbb
jo
xchg
les
popf
mov
hlt
rcrb
sub
or
pop
mov
xor
cmp
jg
mov
xchg
xlat
adc
rsm
ja
cmpsl
jg
and
or
sub
mov
mov
ds
lods
pop
shlb
int3
adc
sti
mov
or
mov
pushf
lcall
xlat
out
out
sbb
loope
mov
xor
gs
cmpsl
insb
out
hlt
cmp
aas
ret
mov
fildl
mov
push
pop
cld
add
cmp
add
xor
xchg
pushf
std
dec
add
add
mov
and
mov
test
fstl
int
shl
jmp
dec
mov
mov
mov
cld
pop
inc
orl
and
mov
sub
ret
loopne
and
pop
jne
movsb
lret
stos
movsb
test
pop
jmp
cld
lods
movsb
leave
fsubrs
mov
lahf
es
sub
jl
sbb
in
pop
fnsave
ljmp
stos
sub
inc
or
hlt
cs
jle
dec
sub
fimull
mov
sub
xor
lahf
inc
cs
push
inc
dec
sub
imul
sbbl
mov
pop
orb
aam
push
les
pop
jp
push
jb
sub
mov
ljmp
sbb
dec
push
jle
xlat
decb
mov
jb
xacquire
pop
cmp
cmp
mov
jp
adc
fidivrl
ret
cld
lret
pop
bnd
inc
movsl
mov
mov
sbb
mov
pushf
xor
rcrb
mov
bound
cli
lcall
sub
inc
pop
rcrb
mov
lods
outsl
jle
jb
fistps
jb
and
xlat
imul
dec
or
inc
xchg
arpl
dec
shrl
cmp
repz
jp
pop
fisubl
sbb
movsl
into
add
mov
pop
mov
sub
xor
pop
lret
mov
mov
shll
out
cmpsb
cmpsb
push
shrb
arpl
cwtl
jnp
pop
clc
push
call
adc
inc
sahf
out
gs
outsb
testl
cmp
inc
fidivs
dec
cltd
scas
xor
roll
mov
icebp
cmp
mov
loope
movsl
aas
pop
mov
out
pusha
loope
out
inc
aad
sub
inc
pop
rorl
shll
fldcw
ret
in
sbb
hlt
nop
dec
push
inc
inc
scas
and
pop
lret
add
je
iret
pushw
push
inc
cmc
push
arpl
pop
or
test
loope
insb
mov
mov
pop
out
insb
popf
push
xor
inc
adc
inc
sub
pop
es
jge
jp
cwtl
loope
shl
or
into
mov
dec
outsb
cmp
adc
ljmp
lret
or
mov
mov
aam
stos
clc
cmpsb
mov
lret
lods
dec
mov
and
mov
mov
xchg
or
jne
imul
lret
mov
cmp
and
test
mov
data16
jl
push
jo
movsb
adc
cmp
adc
ss
lods
jo
enter
rol
hlt
inc
pop
sbb
dec
sbb
ret
jns
outsl
cmp
arpl
ljmp
cmp
jae
das
addr16
mov
mov
or
shlb
push
or
push
js
cmp
lret
sahf
testb
cwtl
push
jmp
add
imull
mov
jp
mov
loop
lahf
pusha
adcl
push
sahf
jp
rcrl
add
push
and
dec
roll
sbb
mov
pushf
shll
enter
fwait
pusha
cmpsb
inc
add
and
and
inc
xchg
jne
dec
iret
nop
xchg
add
mov
fwait
pop
jns
sbb
push
lahf
inc
and
rolb
dec
inc
pop
mov
or
pushf
dec
fucom
adc
iret
mov
push
pushf
arpl
adc
aam
outsl
push
shll
add
cmp
inc
or
addl
jo
fsts
pushf
pushf
bound
int
jnp
push
xchg
or
xchg
inc
mov
mov
and
bound
fcoms
ljmp
popa
and
int3
pop
mov
mov
aam
push
mov
add
bound
cmp
mov
sti
cmpsb
xor
sbb
lcall
fnstcw
push
dec
into
jae
insb
mov
xchg
mov
lcall
lods
les
aam
in
dec
fsubrs
arpl
out
mov
stos
repnz
mov
jb
xor
push
mov
in
js
decl
push
mov
out
aad
pop
ljmp
sub
aas
push
loop
popa
repz
call
lds
mov
or
mov
push
pop
and
popa
data16
inc
push
fistl
dec
adc
sub
jp
ret
iret
testl
out
dec
sub
gs
xlat
xor
in
shlb
inc
jle
and
and
or
pop
in
nop
jp
int
lret
lods
push
jmp
ljmp
lock
int3
dec
scas
call
fiaddl
daa
rcrb
add
sub
mov
lock
ficompl
adc
mov
xchg
ret
cwtl
adc
fcmovu
xor
arpl
out
cmp
add
inc
outsb
mov
dec
arpl
aaa
add
pop
fwait
rcrl
add
leave
test
add
repnz
xchg
xchg
sbb
dec
sbb
xchg
ja
call
in
lret
cwtl
popl
cmc
dec
adc
sub
xchg
nop
adc
and
jno
xchg
cli
sub
xchg
pop
sbb
fnstenv
mov
pop
cltd
ss
rol
xchg
in
jae
mov
rol
push
cltd
fcomps
in
pop
dec
xor
adc
lcall
lahf
psubq
pop
stos
lods
adc
inc
pop
movsl
mov
cmpl
lret
sub
pop
inc
sbb
add
cmp
xor
pusha
xchg
add
bound
scas
shrl
cmp
cltd
fldcw
jae
mov
cmp
add
mov
mov
cmp
inc
mov
cld
ljmp
pop
inc
das
cwtl
test
aaa
mov
dec
mov
xorb
xchg
adcb
inc
js
cli
or
scas
rorl
sub
push
add
bswap
clc
mov
ss
in
mov
inc
inc
gs
pop
dec
sbb
sub
dec
mov
loop
aam
gs
jp
rorl
and
jno
mov
cmp
adcb
or
jb
cmp
out
push
xchg
jmp
fsts
rcrl
adc
ja
mov
jl
cmc
jecxz
mov
cli
ret
aad
adc
sbb
jg
mov
jne
loop
jbe
jne
movsl
and
pop
pop
pop
imulb
in
jbe
lahf
pusha
bound
add
mov
push
hlt
mov
sub
push
stos
fs
xorb
mov
repz
sbb
add
dec
jne
dec
je
enter
leave
adc
hlt
shl
outsl
cltd
imul
add
push
int
jne
test
jne
insl
mov
je
andl
insl
cmp
or
or
mov
jnp
mov
std
lcall
sub
shrb
movsb
lret
add
jge
insl
pop
iret
sbb
and
lret
and
insl
xchg
adc
xchg
jecxz
sahf
dec
call
add
mov
add
dec
jb
fwait
dec
mov
xchg
cmpsb
test
cltd
into
in
xchg
or
sub
add
stos
test
pop
push
mov
mov
and
pop
pop
pop
sbbb
arpl
sarb
push
sbb
fisubl
xchg
jnp
jg
sbb
lds
or
push
mov
jbe
aas
int
xor
stc
mulb
and
sub
and
jl
test
or
ret
sub
jecxz
pop
xor
mov
mov
push
pop
adc
mov
jge
lret
fdivs
mov
mov
push
shll
push
adc
sbb
push
fdivs
lahf
js
add
mov
scas
fldl
inc
loop
or
ja
xlat
xchg
sbb
mov
orb
pop
jo
inc
and
jmp
add
push
fisttpll
aas
scas
loope
dec
enter
gs
or
fs
mov
mov
push
mov
fucomip
push
lock
jo
out
lret
dec
rcrb
jb
outsb
enter
inc
xchg
into
or
iret
enter
call
sahf
aam
call
inc
idivb
out
sbbl
jne
cs
out
push
pop
lock
out
dec
mov
movsl
je
mov
loopne
xor
loope
sbb
inc
je
out
das
push
and
cmp
mov
mov
imul
imul
repnz
push
jp
lods
push
sub
nop
pop
imul
cmp
dec
mov
lods
inc
cltd
fdivrl
and
and
dec
ja
cwtl
push
fdivrp
sarb
repz
lock
sahf
cs
leave
push
push
sti
movsl
fisubl
ds
shlb
mov
or
push
dec
adcb
ret
in
loopne
add
mov
mov
pop
jg
cs
add
and
add
pop
adc
loopne
insl
outsl
fldcw
sti
mov
fwait
insb
pop
sbb
jecxz
or
out
int3
insl
mov
das
xchg
js
ljmp
imul
gs
push
lds
push
jp
popl
inc
shlb
aad
test
js
add
xor
repz
and
push
xor
sub
xchg
addr16
add
inc
mov
es
mov
inc
sub
push
shr
pop
push
rcrl
jge
testl
push
push
xchg
in
test
push
inc
jp
sub
sub
outsw
lods
fdivs
xchg
jge
mov
aas
loopne
data16
fwait
sbb
outsl
mov
mov
add
add
mov
sub
sub
xchg
ds
xchg
push
out
sarb
daa
xchg
insb
mov
sub
cli
call
sbb
out
ds
call
test
ret
lret
fs
jbe
or
gs
mov
and
out
sbb
mov
adc
sbb
int3
mov
and
mov
ret
dec
loopne
mov
gs
test
lea
inc
dec
fisubrl
out
inc
insb
mov
xchg
or
adc
addb
cltd
push
add
add
insb
rcrl
xchg
ja
les
insl
jns
jne
ret
fistpl
mov
or
mov
add
mov
ss
aad
add
pop
lds
icebp
mov
sahf
jno
rcl
movsl
test
xlat
dec
iret
inc
call
xchg
cmp
loopne
in
mov
adc
aas
sti
add
shrb
jne
or
cmp
loopne
in
fisttps
push
inc
xor
sbb
pop
xlat
test
sbb
jns
test
mov
push
loop
push
cmp
sbb
add
cwtl
and
dec
add
push
rorl
fcmovu
pop
fmuls
cmpsb
pop
mov
xlat
divl
mov
sub
dec
or
sbb
pusha
aaa
repz
lret
bound
fstpt
jle
xchg
fistl
shl
shr
xchg
mov
negl
xlat
daa
icebp
ret
mov
adc
cltd
push
outsb
inc
negb
mov
and
loop
sub
stc
lock
and
inc
mov
cmpsb
inc
call
scas
filds
sub
fildl
ret
popl
jae
dec
push
test
jb
out
jl
mov
pop
in
jb
xchg
jle
push
orl
mov
subl
int
push
mov
lcall
adc
lock
inc
pusha
mov
mov
or
inc
test
sub
inc
pop
in
lods
adc
lfs
out
inc
test
sti
out
js
pop
mov
pop
mov
add
cmpsb
out
xchg
pop
mov
pop
frstor
add
sbb
outsb
pop
pop
mov
das
xor
in
cli
jno
addr16
pop
pusha
mov
and
dec
xchg
roll
movsb
sub
pop
mov
ljmp
mov
or
imul
sbb
sbb
ss
sub
xor
xchg
adc
scas
mov
inc
lahf
adcl
aas
push
mov
enter
jmp
add
inc
push
mov
jnp
mov
lock
cwtl
insb
xchg
and
ds
arpl
inc
imul
push
fs
mov
push
or
orb
pop
sbb
sti
data16
ret
or
lahf
and
push
push
mov
inc
jnp
pusha
scas
xorb
cld
or
test
inc
and
ficompl
pushf
pop
and
in
lret
les
sbb
lcall
hlt
int3
push
pusha
and
inc
mov
cmpsb
icebp
fistl
pop
lock
ret
inc
out
add
loop
sahf
fsub
je
sub
arpl
inc
or
cmp
inc
jns
and
insl
adc
into
lret
js
sbb
inc
sub
out
movsl
scas
data16
pop
jb
cmp
inc
stc
sub
jbe
mov
or
out
cmpsb
mov
xchg
jns
test
enter
fucomi
cmp
test
and
fsubs
mov
lods
outsb
ficomps
jne
int
enter
or
cld
dec
mov
jno
dec
orl
stos
mov
pop
lea
and
mov
sti
aaa
hlt
adcl
in
jns
cmpl
inc
cmc
dec
xchg
clc
popa
add
inc
imul
mov
xchg
mov
dec
mov
lock
stos
add
sti
in
outsl
cwtl
push
arpl
stos
xor
mov
jns
adc
mov
or
inc
sub
test
ss
sar
jg
jnp
xchg
jno
movsl
push
push
out
sbb
mov
push
cltd
pop
cmp
lret
cmp
leave
stos
mov
add
daa
in
setle
sub
ja
ret
ret
mov
push
push
les
and
and
cs
in
xchg
xor
jne
jle
dec
ret
lea
and
sub
push
aaa
cs
aad
sub
mov
movsb
neg
loopne
test
cmp
mov
hlt
cmp
adc
dec
push
mov
mov
inc
push
sbb
sbb
and
filds
in
pop
nop
mov
pop
out
ss
ljmp
lods
pop
faddl
cmp
jl
add
inc
incl
adc
out
sub
sub
sub
inc
inc
clc
mov
shrl
mov
push
xchg
cwtl
in
push
jg
cmp
jl
xorl
mov
sub
cmp
std
bound
aaa
out
clc
push
mov
or
lret
jmp
and
in
or
jle
xor
jmp
sbb
clc
test
fldl
and
out
cmp
sbbl
jl
xlat
pop
pusha
cmp
adc
xor
mov
mov
pop
mov
data16
test
xor
es
cmp
mov
jnp
rclb
push
je
fisttps
inc
loope
cmp
int
fwait
cwtl
xchg
push
lret
scas
aaa
sbb
test
xchg
outsb
fsubrp
or
push
movsb
fsubl
and
xlat
cltd
push
mov
jb
cmpsl
xchg
rorl
jno
fiadds
xchg
adc
adc
ds
adc
add
sub
sub
pop
iret
rcll
dec
aam
pop
test
inc
arpl
pop
outsb
movsl
xchg
mov
jecxz
jo
dec
repnz
frstor
sbb
test
pusha
cmc
or
loopne
aas
lds
pop
inc
pop
jp
lods
xchg
scas
fildll
xchg
popa
into
andb
jp
jle
inc
add
mov
std
pop
call
jne
xchg
mov
pushf
jne
iret
mov
mov
mov
leave
call
subb
pop
inc
mov
xchg
mov
push
lahf
mov
and
push
lods
and
sahf
imulb
movsb
adcb
lods
out
mov
imul
das
filds
and
inc
pop
hlt
nop
or
xchg
push
mov
pop
jns
xchg
fwait
sub
test
add
sbb
jns
arpl
lods
jno
xor
sahf
pushf
adc
pop
cmpsl
insl
cmp
cltd
xchg
inc
push
push
dec
data16
xchg
cmp
sbb
pop
push
nop
dec
insb
test
lret
sbb
mov
cmp
mov
out
insb
adc
jb
pop
clc
jb
mov
shll
rclb
cwtl
daa
ja
add
inc
add
xor
jl
cld
pop
xchg
movsb
scas
jo
jecxz
sub
out
fisttpll
add
pop
cmpl
sub
mov
adc
cmp
in
mov
out
push
call
jg
ljmp
inc
dec
xor
mov
andb
aaa
dec
fldenv
int
subb
data16
or
adc
orb
call
push
mov
mov
xchg
addb
push
cmp
adc
rcrl
mov
stc
jae
xor
mov
ds
sbb
push
dec
cmp
pop
push
pop
push
adc
or
loopne
xor
test
adc
rcrl
mov
lea
inc
mov
repz
movsb
push
jb
popa
xchg
femms
and
adc
add
sub
add
std
add
enter
push
jecxz
xor
les
aad
cmp
push
pushf
scas
scas
sbb
cmp
cmp
jmp
loope
lret
xchg
adc
mov
call
test
push
pop
imul
cmp
xchg
jo
jmp
or
lea
lcall
insb
std
out
push
dec
lds
out
push
and
xlat
jecxz
popa
mov
jg
call
fistl
mov
pop
push
loopne
push
jmp
sub
mov
fiaddl
jns
lret
pop
pop
mov
mov
jle
out
jecxz
in
and
es
adc
add
dec
outsl
and
pop
mov
fcmovnb
mov
inc
addr16
rolb
rolb
jg
sub
rcr
ss
inc
mov
xor
pop
int
or
and
lret
repz
xor
test
inc
mov
test
loop
add
mov
or
mov
std
cld
out
test
rorb
out
int
push
jno
add
lock
out
cmp
jge
sub
cmp
pop
inc
adc
mov
mov
mov
das
and
movsb
lods
push
lcall
and
inc
in
mov
adcl
sti
shlb
dec
dec
add
and
repnz
lea
int3
and
fwait
jo
jne
jbe
mov
mov
add
lea
dec
cmpsl
mov
cld
pop
and
cwtl
cmpsb
scas
fdivl
out
loope
inc
push
test
xor
adc
mov
pop
in
cmp
or
pop
cmp
jg
xor
push
stos
inc
mov
lds
int3
xor
cmpb
cwtl
mov
jo
mov
mov
test
jecxz
inc
mov
int3
inc
mov
ja
rorb
mov
ror
xor
stos
dec
xor
push
hlt
in
mov
test
sub
ds
add
mov
xchg
jg
data16
push
xchg
inc
sbb
adc
sbb
sbb
lds
pop
or
scas
icebp
lods
popa
in
lret
push
add
popf
mov
in
and
les
mov
test
rclb
testb
out
jo
jmp
cmpsb
and
jl
les
jp
cmp
int
in
repnz
xchg
into
sar
push
enter
mov
sbb
adc
pop
stos
jecxz
pop
ja
inc
ja
test
cli
outsb
jne
pop
xor
jns
adc
in
daa
inc
sbbb
cmp
rolb
push
xchg
in
mov
cmp
fcoms
jbe
filds
imul
and
sub
sub
push
sbb
lods
mov
je
lds
adc
xor
sbb
jmp
inc
dec
std
mov
out
jecxz
xor
mov
imul
and
int
xchg
or
outsl
mov
test
jns
mov
xchg
cli
mov
gs
dec
mov
xor
inc
aas
add
mov
repz
jmp
out
push
lds
aas
pop
mov
mov
push
lods
push
or
mov
push
mov
mov
jb
dec
into
lret
mov
std
scas
jl
xchg
and
ljmp
mov
cmp
shll
add
inc
jl
ljmp
and
ffreep
mulb
mov
insb
sbb
pop
jmp
xchg
hlt
xchg
dec
fs
xchg
aaa
xor
popa
add
lea
jg
aaa
cltd
fwait
or
mov
and
mov
or
xchg
jae
add
cmpb
xchg
lock
loopne
ds
imul
push
aas
adc
push
pop
mov
sbb
cmpsb
cmp
mov
xchg
and
out
pop
push
movsl
inc
sbb
fcmove
or
sbb
fidivl
adc
lock
pop
dec
in
lea
arpl
dec
movsb
xchg
mov
cwtl
test
fadd
pop
aaa
pop
fisubl
in
jae
cltd
jne
inc
and
out
inc
inc
push
mov
sahf
pop
call
dec
mov
xchg
or
and
adc
fs
pusha
push
xchg
add
adc
push
xlat
roll
dec
stc
mov
xor
mov
scas
in
insl
sub
in
addr16
mov
xlat
xor
adc
out
stos
rsqrtps
fidivl
ret
dec
inc
in
jbe
aam
fiadds
outsb
lea
jns
cmp
sub
mov
mov
test
push
xchg
mov
jge
ja
jae
repnz
jp
jb
push
out
xor
inc
jmp
rcrl
repz
add
outsb
sub
xchg
or
and
pop
xor
outsl
push
bound
add
je
pusha
mov
or
mov
pop
push
pop
nop
mov
js
dec
stos
daa
icebp
sub
mov
sti
fwait
pop
jnp
mov
xor
cltd
test
mov
test
jnp
cmp
movsl
fiadds
in
mov
inc
inc
shlb
lea
mov
push
jno
inc
dec
les
xchg
outsl
mov
pushf
scas
cld
je
mov
sub
adc
aaa
icebp
int3
push
scas
push
add
mov
adc
fldt
stos
ds
hlt
xor
or
add
dec
mov
add
xchg
push
mov
add
popf
fs
popf
fnstcw
push
incl
rclb
xchg
daa
or
add
xchg
xchg
shlb
cmpl
add
sub
mov
mov
repnz
push
jp
mov
and
jp
sti
movsl
arpl
sub
in
jmp
ja
daa
aad
shl
mov
adc
mov
push
loopne
mov
sbb
int3
push
out
mov
cmp
inc
xor
nop
in
lcall
insl
cmpsb
mov
mov
insl
out
xor
inc
cmp
push
bound
mov
mov
jno
lret
mov
sub
into
lret
dec
sub
and
lcall
dec
push
mov
mov
cmc
sbbb
jmp
pop
or
push
cld
jne
jge
and
sub
in
adc
mov
pop
addr16
pop
push
out
out
pop
mov
pop
and
or
icebp
movsb
mov
icebp
inc
and
pop
out
or
xchg
outsb
sarb
lahf
push
andb
mov
push
ljmp
in
nop
out
out
test
mov
mov
xor
inc
fwait
mov
mov
aam
mov
or
pop
or
mov
and
dec
mov
mov
xlat
push
jnp
cmp
jecxz
loopne
cli
xchg
ja
mov
scas
xchg
cmp
in
sub
andb
scas
adc
mov
jne
out
sub
ljmp
sahf
mov
enter
cmc
test
fadd
jne
xchg
mov
cs
mov
mov
aam
push
xchg
iret
jge
push
and
sahf
sbb
movsb
out
fadds
adc
dec
call
insl
ljmp
ret
dec
mov
outsl
dec
mov
inc
push
leave
lods
cld
pop
jno
inc
pop
or
and
shl
je
lret
pop
mov
sbb
in
sub
or
aaa
or
leave
enter
movsb
ffree
test
push
cmp
bound
sub
iret
jae
sub
add
xchg
dec
sub
cmp
adc
xor
mov
js
mov
sbb
aaa
add
jg
cmpsb
movsb
xor
mov
ss
mov
or
lods
fsubrl
mov
adc
mov
inc
stc
xchg
xor
mov
jnp
pop
xchg
int
pop
pop
testb
inc
sub
gs
and
xor
dec
imul
jne
in
into
mov
testl
xor
xchg
fdivrs
push
pop
rorb
inc
out
fmull
mov
test
pop
and
adc
mov
sarb
or
mov
sbb
sbb
add
mov
and
inc
mov
hlt
dec
or
xchg
xor
jl
enter
hlt
aad
xor
cwtl
icebp
in
or
xor
sarl
adc
pop
out
movsb
stc
mov
or
dec
push
lea
push
xchg
mov
into
addb
int3
mov
mov
mov
dec
dec
push
inc
inc
jl
add
or
xchg
and
pop
test
xchg
xor
mov
movsb
hlt
bound
pop
and
imul
jb
mov
add
jb
inc
and
sbb
mov
outsb
cmp
das
imul
jp
mov
cmpsw
insl
aaa
fstps
sbb
pop
movsl
xlat
dec
mov
lock
cli
mov
outsb
pop
sti
add
movsb
not
jne
xchg
mov
out
mov
pop
xor
gs
pop
mov
rcrb
cmp
ds
movsb
subb
xor
les
mov
cs
inc
pusha
pop
cmc
jae
lds
out
add
aam
adc
ficompl
insl
out
pop
cmpl
call
push
fistl
lcall
mov
rcll
sbb
push
ja
mov
mov
imul
jp
lea
cli
lods
out
fcomps
cmc
fildl
shlb
mov
jmp
mov
negb
jo
add
pop
adc
mov
dec
jno
cli
xchg
cmp
loope
push
stc
sbb
and
xchg
clc
push
cmp
test
adc
jno
lock
sbb
jb
nop
scas
lods
cli
lahf
jb
push
and
daa
add
xor
dec
out
cli
into
stc
adc
cmpsl
inc
sbb
adc
push
sahf
add
push
lock
icebp
mov
lds
sub
repnz
push
movsl
jo
popf
add
int
push
mov
sti
das
ljmp
cld
ret
jg
pop
mov
clc
add
test
mov
mov
and
mov
cmp
pop
adc
lahf
mov
inc
pop
jl
pop
mov
pop
repnz
into
rol
inc
andl
mov
lock
jae
lcall
negl
fstps
cmpsl
jl
mov
cmp
and
push
push
gs
ret
mov
and
xchg
dec
rcrb
ret
dec
mov
lret
jne
or
cmp
xor
jbe
mov
dec
lods
mov
aas
fdivrl
rolb
nop
and
repz
icebp
lock
mov
in
pop
int
pusha
and
adc
cmpsl
outsl
scas
les
add
jbe
mov
ds
jnp
outsl
push
inc
outsl
mov
daa
and
cmp
ss
and
mov
lods
sub
pop
pusha
add
sub
and
mov
and
scas
cmpsb
and
and
pop
outsl
ja
xchg
stc
sbb
cmp
jmp
and
pause
jmp
adc
xor
mov
push
add
xchg
pop
xor
pop
aam
mov
aad
lret
pop
xchg
in
pushf
pop
loope
add
pop
daa
cmpsb
xchg
mov
xor
mov
mov
jge
xchg
push
mov
jmp
ljmp
loope
call
leave
mov
addr16
rolb
push
xchg
xchg
cmp
and
cwtl
stc
and
fwait
push
pop
shrl
cmp
das
lret
arpl
lret
and
mov
cld
or
cmp
cli
xchg
xor
xchg
mov
dec
das
adc
push
sahf
push
daa
movl
or
adc
addb
insl
xor
adc
daa
fstl
adc
or
push
cwtl
fsts
add
cli
inc
mov
test
aaa
jge
pop
adc
ljmp
test
adc
inc
imul
pop
jns
popf
mov
lods
add
mov
pop
xchg
std
pop
pop
xchg
pop
hlt
pop
imul
sbb
xorl
cmp
sbb
adc
in
jmp
loope
pop
cmpsl
test
jns
es
xchg
sbb
movaps
sub
mov
test
xchg
aas
loop
xchg
out
das
sub
daa
out
and
pop
psrlq
mov
pop
push
dec
pop
xor
loopne
or
mov
jg
fwait
cltd
sub
cmpl
bound
stc
lret
mov
and
mov
inc
mov
aas
push
mov
push
add
cltd
outsb
lds
scas
mov
sbb
mov
or
jmp
push
repnz
and
mov
std
jle
mov
icebp
out
ret
and
sbb
mul
cli
xor
fstps
stos
dec
xor
lds
jae
movsl
cmc
xchg
fstpt
and
sbb
xor
xor
fwait
jnp
mov
bound
xor
cmpsb
popa
xor
cli
jns
dec
inc
jo
leave
leave
test
test
cli
sub
fwait
in
cmp
popf
mov
xor
mov
loopne
inc
adc
adc
cmp
pop
jp
or
outsl
lcall
mov
adc
adc
jg
jl
int
shr
mov
xchg
cld
jb
mov
imul
jns
and
xchg
xor
fs
in
out
mov
adc
sub
leave
fistpll
mov
add
mov
lahf
pop
inc
push
jle
pop
ljmp
loop
clc
cwtl
nop
jbe
dec
imul
cld
add
shrb
das
lods
adc
sbb
movsb
punpckldq
cmp
int
dec
jge
inc
xchg
fstps
cwtl
pusha
imul
pop
cmp
sub
push
sub
inc
stos
lds
shr
loope
jg
leave
fistpl
popa
adc
xchg
shll
call
mov
mov
push
lret
jmp
push
fdivp
inc
mov
shll
sub
out
pop
mov
lcall
sbb
and
ljmp
mov
adc
mov
sbbl
das
fbld
jle
mov
pop
fcoml
cmp
loop
lahf
rorl
dec
sub
mov
iret
jge
rcr
xchg
decl
fbld
in
adc
cmc
add
leave
daa
mov
push
mov
test
cmpsb
sbb
pop
xchg
test
icebp
xchg
pxor
sbb
mov
jg
ljmp
mov
fldl
aam
stos
clc
cmp
addl
inc
loop
pop
clc
mov
out
addr16
loopne
inc
gs
add
xlat
sbb
push
ss
sub
fsub
lea
mov
cmp
call
repz
stc
mov
mov
cmp
xchg
sti
aaa
cmc
jae
push
lret
dec
gs
scas
adc
test
push
inc
mov
sbb
xchg
stc
ret
ds
rclb
xchg
adc
jge
std
mov
jg
xchg
ja
or
mov
sbb
and
pop
add
jb
stc
imul
roll
mov
mov
xor
test
push
and
pushf
jmp
iret
xlat
jno
fcoms
outsl
inc
mov
lcall
ljmp
mov
test
shlb
aam
daa
pushf
fnstenv
subb
test
iret
and
out
leave
sti
xchg
mov
mull
push
outsb
sub
sub
cmp
jg
in
jle
out
and
std
sub
inc
cmp
sub
test
imul
shlb
xchg
lret
sub
mov
aad
or
scas
mov
pop
ja
add
icebp
dec
ret
mov
mov
mov
dec
mov
cmp
sub
fnstcw
addr16
jge
incb
int3
insl
mov
push
mov
nop
fisttps
and
jae
je
sub
jp
cmpsb
pop
sti
sti
ss
pop
aam
pop
int3
xchg
lds
dec
mov
mov
hlt
or
aaa
mov
insb
mov
imul
scas
popf
pusha
adc
stc
out
sbb
pop
sub
cwtl
fists
xor
jae
popa
shr
mul
or
mov
jl
testl
push
lret
xor
lret
sbb
jnp
inc
sbb
enter
pop
lods
sbb
or
loopne
sbb
dec
push
mov
jns
stc
jp
sub
mov
cmp
push
lcall
mov
dec
xor
dec
push
cs
mov
add
fwait
out
lahf
xor
sar
inc
push
in
push
add
fstp
lret
stc
mov
inc
xchg
js
mov
pop
push
push
adc
and
je
popf
mov
adc
loope
in
xchg
pop
cs
xchg
push
jns
xchg
out
jae
repz
pop
repnz
sti
cmc
gs
add
mov
scas
inc
lds
inc
push
jns
adc
xchg
pushf
mov
mov
lahf
mov
xorl
leave
lret
inc
roll
aas
push
jae
jnp
scas
movsl
cmpsb
mov
out
push
dec
cmpb
lods
hlt
mov
andl
cmpsb
or
bound
rcll
cltd
repz
imul
notl
adcb
es
aas
adc
ret
push
mov
inc
fwait
sbb
push
sub
hlt
xchg
mov
enter
test
push
pop
lret
adc
xchg
repnz
mov
xor
mov
inc
jecxz
out
adcb
repnz
xchg
add
cmp
and
cmp
or
xchg
popf
shrb
out
lock
aad
or
addl
cmp
sub
push
repz
adc
inc
sbb
nop
hlt
loop
data16
notrack
and
shll
push
dec
cmp
or
das
mov
sbb
fiaddl
popa
mov
imul
outsb
arpl
cmp
lds
add
psraw
dec
fildll
inc
cmpsl
mov
cmp
repnz
xchg
rorb
insl
push
in
or
mov
fdivl
out
dec
dec
clc
mov
rolb
jmp
outsb
mov
in
or
xchg
cmpsl
xor
out
ds
jns
aaa
mov
rcl
test
sub
jo
sub
sbb
es
call
stos
scas
push
js
jg
aam
imul
lea
sahf
insl
cmp
inc
lret
jbe
mov
add
repz
jmp
adc
xchg
and
lsl
sub
adc
lcall
ret
js
cmp
std
push
adc
xchg
add
les
and
test
adcb
and
loop
xchg
and
and
ss
faddl
xorb
add
cmc
ja
cmp
dec
push
jns
adc
add
mov
or
push
ds
jbe
adc
cmpsl
add
cmpsb
xor
idivb
aad
sbb
adc
addr16
jle
lret
adc
sbb
push
push
pop
shrl
adc
push
add
adc
movl
lret
in
dec
jns
sub
jl
in
in
iret
out
push
adc
mov
push
test
dec
sub
jae
cs
jns
cmp
mov
inc
jne
addr16
xchg
xchg
add
add
ds
es
scas
cs
mov
add
dec
in
in
jne
je
mov
cmp
mov
fs
pop
test
sbb
ja
pop
scas
mov
or
sbb
lods
mov
js
dec
call
imul
daa
mov
out
imul
adc
mov
and
leave
xor
push
mov
inc
gs
scas
cmpsl
sbb
or
or
adc
lock
pop
cmp
mov
lret
mov
push
xchg
pop
sbb
out
mov
gs
cmp
clc
sbb
xor
lods
pop
int3
cltd
mov
fstpt
nop
lods
sub
lcall
pop
andb
sbb
cmp
pop
inc
stc
dec
inc
icebp
add
lcall
inc
add
cmc
mull
xchg
xchg
sarl
fldt
shlb
push
add
rolb
in
rcrb
jo
mov
add
imul
into
out
inc
sbb
scas
jmp
xchg
imul
mov
cwtl
pop
jp
iret
push
idivl
mov
sbb
addl
jno
dec
push
scas
xchg
adcb
push
lahf
loopne
or
mov
loope
mov
cmp
mov
fimuls
or
lods
ucomiss
mov
rclb
push
inc
jne
jno
push
or
cmp
adc
dec
cmpsl
jo
aad
or
add
inc
xor
movsl
fldl
xor
imul
or
push
addl
mov
lahf
aaa
scas
push
sub
cld
mov
jge
jmp
sarl
pop
inc
je
mov
shr
cmc
pop
xor
mov
mov
mov
aam
mov
pop
ljmp
stos
jecxz
lea
push
subps
aam
icebp
faddl
xchg
mov
scas
jl
pop
sbb
orb
mov
xchg
loope
rclb
stc
xor
adc
icebp
push
xchg
fsubr
fdivr
mov
dec
cmp
shll
pop
in
push
icebp
fildll
mov
pop
stos
fsubr
aaa
popa
cmp
add
imul
fmuls
out
xor
mov
jb,pn
int3
fs
sbb
rcll
and
rorb
enter
or
mov
mov
jb
cmpsb
lret
mov
leave
fsubp
mov
movsl
addl
out
test
in
sub
mov
outsl
imul
lds
ljmp
jne
push
mov
sbb
ds
mov
xor
cld
dec
adc
ljmp
xchg
xor
pushf
jo
add
mov
and
jl
add
ss
enter
nop
xchg
sti
rclb
adc
cmovs
dec
inc
fs
es
mov
mov
movsl
adc
mov
repnz
arpl
adc
inc
or
xchg
insl
or
sbb
xor
push
test
sub
xor
pop
fcompl
jecxz
aaa
leave
dec
out
and
stc
mov
jecxz
xchg
fisttpll
sbb
aad
inc
aas
mov
pop
stos
int
loopne
sub
pusha
fdivp
jp
mov
sbb
divb
inc
or
jnp
loope
mov
cmp
cmp
hlt
push
leave
jb
adc
jo
stos
pop
push
call
jb
sbb
and
add
push
lea
enter
lret
mov
mov
ss
xor
into
pop
divl
xor
adc
jo
mov
sub
shlb
daa
data16
inc
pop
int
push
push
hlt
adc
sbb
aaa
fwait
pop
lret
fimuls
mov
pop
push
pop
cmp
insb
xchg
push
add
and
scas
into
or
mov
sub
outsb
int
xor
dec
dec
mov
in
sub
scas
mov
dec
sbb
lcall
xlat
sub
sbb
add
bound
loope
inc
add
bound
int
xor
js
add
mov
xchg
int3
fildll
jnp
aas
push
adc
sbb
addb
inc
and
mov
bound
clc
inc
imull
test
lret
xor
mov
mov
pop
jne
negl
sarb
xchg
mov
sar
sub
jns
lahf
push
pusha
push
test
or
lods
and
ja
je
shll
and
dec
and
sbb
dec
xlat
push
sbb
hlt
cmc
pop
loop
cli
les
call
mov
sub
shlb
cmp
aaa
jp
xchg
fs
jnp
xor
lods
js
sub
mov
nop
sahf
add
fcoml
mov
push
ljmp
loopne
int
outsl
ficomps
xchg
xor
shlb
sbb
push
sub
in
sub
pusha
pop
out
push
adc
jle
fwait
jo
sub
add
stos
in
arpl
lret
cmpsl
sub
pop
dec
jp
push
je
dec
repz
mov
sub
int3
dec
decl
mov
cwtl
add
xchg
test
sub
into
loop
mov
adc
push
lods
iret
or
add
shl
lret
push
inc
push
jl
insl
sbb
cmp
stc
js
push
mov
xor
mov
jp
dec
xor
add
test
adc
jg
loop
sub
movsb
loopne
insl
jnp
fs
repz
and
fadds
and
xchg
js
addr16
jle
das
jb
sbb
or
nop
dec
mov
push
lret
mov
fsubl
inc
addr16
dec
repz
aas
ror
stos
add
adc
aam
enter
jle
mov
lds
rcrb
clc
dec
rcr
sub
or
mov
mov
cmp
stos
xor
lods
adc
imul
xlat
icebp
add
pop
xlat
sbb
sbb
mov
cmp
cmp
aaa
in
std
jle
scas
mov
dec
jl
xor
jecxz
dec
jne
pop
out
or
or
mov
test
ja
inc
xor
pusha
xchg
cmp
add
call
cwtl
test
lock
sahf
jmp
daa
aam
into
inc
adcl
lcall
pushf
push
filds
fiadds
hlt
test
inc
lods
lret
test
or
push
adc
pop
test
loop
pop
clc
into
pop
fwait
ljmp
mov
jo
gs
xor
imul
lods
addb
in
das
adc
adc
shlb
imul
aaa
adcb
or
mov
dec
fdivr
lods
mov
js
jne
sub
mov
outsl
lret
jo
pushl
test
cwtl
mov
cmpl
xchg
add
int
in
popa
fcomp
ja
adc
call
pop
cmp
and
pop
mov
mov
fidivrl
rcr
sti
dec
leave
icebp
das
nop
push
nop
adc
mov
push
je
mov
jbe
ds
outsl
shl
into
enter
pavgb
xchg
push
push
mov
mov
or
dec
leave
sub
add
ja
and
mov
icebp
jp
inc
test
push
dec
out
add
or
inc
mov
inc
pop
ret
pop
mov
es
fucomi
mov
pop
lahf
or
aam
imul
arpl
mov
xchg
xor
push
inc
jae
and
faddl
imul
popf
or
jb
adc
or
in
xchg
ljmp
pop
push
xor
cmp
inc
xor
and
divb
pop
pop
bound
ljmp
cli
fmul
xchg
and
push
push
sahf
cltd
repnz
test
into
or
ds
rcrb
cmp
mov
sub
mov
orb
sbb
ss
adc
mov
add
loopne
call
inc
push
popf
add
ja
and
data16
mov
das
sub
iret
loop
shrl
insl
push
je
lods
js
fdivl
add
out
mov
mov
in
push
sub
mov
jns
xor
imul
xchg
jp
mov
jnp
cwtl
in
iret
imul
cltd
push
sti
or
in
fisubrs
leave
fwait
mov
lret
jnp
data16
mov
add
dec
jge
loopne
jb
loopne
push
push
adc
lds
nop
add
gs
inc
fdivrl
mov
cmp
mov
inc
xor
lock
loope
pop
fdivr
jl
xchg
lret
jecxz
sub
jne
stos
pop
xchg
mov
fiaddl
inc
filds
or
mov
sbb
or
data16
rcrb
adc
aas
pop
xchg
fstpl
adc
dec
jge
dec
rcll
out
xor
push
add
adc
cwtl
lock
in
xor
aas
movsl
test
or
in
aam
adc
pop
test
pop
hlt
push
adc
add
je
push
out
xchg
xor
xchg
leave
jae
push
inc
push
jo
fists
shlb
jno
andnps
jmp
adc
jns
rclb
popa
pop
mov
sbb
mov
sbb
stos
add
cltd
adc
push
lock
adc
outsb
mov
sahf
mov
jb
fildl
or
fldt
add
add
stos
pop
rcrb
add
and
pop
sahf
and
push
pop
lods
pop
sarl
sub
or
adcb
std
mov
outsl
and
xchg
dec
int3
xor
in
rorl
lcall
or
shlb
pop
sbb
je
mov
fiadds
fstl
bound
cmp
cmc
outsl
inc
sarb
loop
mov
ret
push
dec
notl
inc
pop
scas
shrl
fcmovne
cld
sbb
leave
push
ss
cmp
sub
in
xchg
mov
test
rcll
xor
xchg
adc
xchg
xchg
pushf
mov
andl
cmp
push
cs
inc
mov
stos
add
push
popa
test
iret
adc
push
mov
imul
fsubrl
add
pusha
insl
dec
ljmp
add
out
divl
and
push
push
fsubl
cmpsl
push
addb
and
aaa
pop
aad
js
fadd
aam
sahf
and
cmp
loope
in
mov
sub
rorb
cs
enter
lds
push
or
loop
xor
jb
scas
in
mov
pop
in
das
out
fimuls
pop
jle
lods
lock
fs
sbb
inc
xchg
jbe
int
scas
dec
insb
jp
adc
and
jg
or
gs
sbb
fisubrs
sbb
add
into
pop
add
repz
jae
aas
or
cmp
inc
test
mov
xor
inc
nop
cmp
stos
pop
int
adc
data16
lock
iret
rcll
cmp
or
mov
scas
fstpt
jo
pop
push
and
leave
inc
xchg
fdivs
pop
rorb
xchg
push
cmp
icebp
pop
cmp
lods
mov
aas
pop
in
or
mov
stos
xlat
dec
xchg
fwait
sbb
adc
dec
sbb
fisttps
pop
jae
shr
daa
or
jmp
or
mov
push
lret
rorl
ljmp
xchg
or
dec
stc
arpl
mov
adc
mov
ret
fwait
sub
cmp
push
dec
inc
inc
adc
xchg
push
movb
fwait
icebp
xor
mov
push
test
or
loope
insb
ss
imul
fdivrl
mov
lds
ret
mov
and
jecxz
jne
mov
aas
jno
jno
and
scas
aas
hlt
out
xor
pop
outsb
sbb
mov
cli
clc
cwtl
ret
pushl
addr16
inc
aas
in
frstor
out
popf
add
xor
popa
gs
cmp
push
aas
in
lahf
sub
mov
in
xor
mov
jbe
xor
shrb
lcall
addr16
mov
ljmp
jno
iret
aad
inc
shll
popf
andb
add
in
icebp
lahf
pop
pop
dec
iret
inc
mov
jns
and
sub
push
popa
int
leave
or
stos
jecxz
lods
dec
scas
outsb
dec
nop
inc
push
out
add
je
mov
pusha
lea
inc
adcl
enter
test
jp
push
jle
add
pushf
gs
rorl
in
xchg
xchg
pop
repnz
push
popf
ds
ljmp
mov
rclb
push
push
xchg
sbb
cli
call
icebp
fcoml
adc
imul
int3
xchg
loop
fwait
sub
aaa
sub
enter
xchg
push
cs
pop
add
stos
push
fsubs
pop
repz
sub
out
pop
popf
leave
fdivrs
xor
mov
mov
pop
loope
out
or
adc
js
out
sub
push
jmp
dec
mov
aam
inc
testl
cmpsl
pop
cmp
adc
es
mov
or
pop
mov
test
pop
lods
adc
and
cmpsb
xor
ror
push
add
push
outsb
loopne
xchg
xor
bound
jo
cmp
mov
fnsetpm(287
pop
icebp
lahf
sbb
mov
adc
mov
inc
stc
and
mov
arpl
pop
and
mov
clc
movsl
filds
jmp
sti
cmp
jl
jge
push
mov
adc
loop
imul
cmp
push
push
into
xor
push
gs
rorb
pop
outsl
mov
leave
sbb
cmp
pusha
or
rcl
je
leave
sub
pushf
outsb
jae
xchg
aad
scas
gs
pop
cmp
inc
test
xchg
ret
sub
into
test
shll
addb
inc
daa
add
popaw
out
call
dec
lock
shlb
pop
adc
in
push
push
sbb
mov
cld
adc
adc
out
mov
clc
or
in
push
sub
aam
push
push
xor
jnp
inc
adc
xchg
dec
mov
scas
fisttpl
xor
jg
shll
inc
jle
in
fstpl
psrlw
sbb
mov
arpl
inc
lahf
jmp
into
inc
pop
fdivr
mov
stos
sub
ljmp
fdivrl
cltd
repnz
inc
cmpsl
pop
lret
sahf
cmp
pop
jl
ret
out
enter
pop
xor
cmp
cmp
jno
iret
push
mov
test
adc
punpckldq
add
jecxz
test
xchg
neg
sub
test
mov
loop
loope
je
ds
or
mov
cltd
sbb
pusha
mov
and
dec
pop
mov
mov
pop
jl
out
pop
sub
int
jb
dec
sahf
mov
mov
jge
popf
cmp
and
add
ret
jae
jb
or
arpl
pushf
test
inc
inc
in
add
cmp
add
xor
cmp
xchg
jmp
inc
subb
pop
mov
imul
mov
dec
test
call
mov
int
lcall
pop
or
inc
xchg
mov
aas
das
icebp
cld
push
sub
mov
mov
push
pop
jne
adc
inc
mov
push
aas
aas
mov
scas
ret
mov
xor
pop
testb
dec
inc
mov
sbb
mov
pop
dec
jb
cli
adc
movsb
cmp
xlat
jo
and
lock
bound
pop
or
ja
mov
mov
add
mov
int3
pop
insb
add
push
push
fldcw
mov
out
aam
and
ss
push
pushf
call
pop
mov
shll
lret
mov
xchg
shlb
mov
xor
mov
add
adc
jo
xchg
mov
lea
nop
icebp
call
data16
jno
test
lcall
sub
add
push
sub
adc
inc
xchg
adc
xor
fmul
mov
lret
dec
gs
and
aaa
add
mov
jmp
mov
inc
push
adc
std
cmp
hlt
outsl
dec
add
in
dec
jo
bound
xchg
mov
pop
iret
out
push
jmp
bound
aad
imul
into
ss
cwtl
xchg
rcll
mov
fisubrs
jge
cs
mov
movl
cmpsl
lods
xorb
sub
mov
cli
dec
or
mov
lcall
cmp
test
inc
sub
and
dec
inc
rorb
inc
sbb
in
pandn
add
dec
in
mov
pusha
dec
popa
jmp
repz
cltd
push
adc
fsts
out
mov
insl
xlat
push
das
add
mov
inc
inc
test
stos
push
out
mov
notb
scas
or
adc
daa
cmc
lods
xor
jge
mov
push
cmp
jg
cmp
jp
ljmp
sub
mov
out
jns
mov
sub
in
push
add
cvttps2pi
dec
and
jne
push
out
cmpsb
dec
adc
lds
pop
mov
addr16
mov
outsb
pop
addr16
sub
into
sub
daa
ljmp
xchg
mov
push
add
and
repz
fcoml
fucomi
cmp
jecxz
cmpsl
inc
mov
lods
lret
sbb
adc
loop
and
push
sub
in
xchg
push
out
xchg
cwtl
inc
sub
sbb
notb
adc
xorb
ret
test
aam
mov
xchg
add
add
insb
inc
mov
xchg
ja
lret
addr16
fs
lock
xlat
xchg
mov
mov
cs
loopne
jmp
jle
pop
xchg
shrl
sti
jb
and
and
and
je
daa
inc
cmp
dec
jmp
mov
aad
test
jp
inc
hlt
adc
adc
mov
pop
mov
test
xor
mov
shrb
cmp
aaa
cwtl
inc
into
pop
in
mov
out
in
xchg
jno
cmp
imul
into
andb
add
mov
xchg
loopne
pop
dec
iret
punpckhwd
sub
ds
sub
push
int
pop
stos
sti
push
adc
jg
divl
gs
cmp
sbb
mov
imul
roll
and
std
pop
xchg
sub
and
lret
icebp
cli
loop
cmp
xchg
pop
bound
fs
in
lock
stos
scas
xchg
and
or
iret
push
pushf
sbb
lret
cmovs
dec
adc
jo
inc
add
pop
push
out
mov
pop
mov
sbb
cmp
xor
mov
in
leave
mov
es
repnz
and
jmp
incb
outsl
stos
add
or
mov
mov
arpl
jmp
mov
push
sti
pop
add
repnz
fwait
insl
aam
outsl
jp
pop
jge
shlb
cld
mull
or
or
sub
jl
mov
out
and
add
jnp
or
push
rcll
rcrb
sbb
movaps
movsl
aam
popa
outsb
pop
adc
add
ds
fcmovu
cmc
push
ds
call
mov
cmc
mov
sbb
shll
sub
shrl
inc
and
into
and
cmpsb
and
dec
sarl
sti
inc
pop
or
faddp
sti
dec
adc
and
gs
push
sub
pop
xor
cmc
int
pop
add
xor
lds
sti
repnz
add
xchg
sbb
ds
jo
fstps
mov
mov
mov
daa
iret
jbe
cwtl
fiaddl
mov
popf
movsb
jg
insb
adcb
ja
insl
bound
add
or
xchg
rol
fimuls
xor
decl
gs
mov
jge
sahf
pusha
or
cmovo
mov
pop
outsb
sbb
push
stc
jge
lret
push
lahf
dec
sbb
mov
and
push
jno
das
leave
sub
cmp
pop
mov
loope
inc
repz
push
jle
adc
loopne
incl
xor
mov
pop
dec
sbb
cmp
pop
popa
mov
movsl
pusha
scas
rol
ds
sbb
lods
test
jmp
movsb
dec
mov
cmc
dec
push
call
lods
add
and
aam
mov
lods
mov
lea
sub
jl
add
mov
movb
std
xchg
aad
ljmp
mov
out
out
cmpsl
enter
out
rolb
mov
cmp
in
xor
cmpsl
in
push
test
cmpsl
shlb
cld
sub
mov
mov
push
push
int3
int3
outsl
out
popa
and
and
je
and
outsl
shlb
mov
inc
stos
leave
lods
imul
pop
stos
in
adc
adc
jb
mov
xchg
ret
push
gs
dec
out
xlat
cmpsl
jp
lret
mov
jbe
test
dec
popl
xor
imul
mov
jns
mov
data16
repnz
adc
out
fwait
dec
subl
fdivrp
add
fldenv
leave
sbb
xchg
dec
dec
xchg
or
or
mov
xchg
mov
cmpsl
out
les
jae
mov
jbe
shlb
mov
loop
add
dec
out
fwait
icebp
xchg
dec
outsl
fmuls
adc
divb
inc
mov
mov
call
jns
xlat
mov
or
mov
xorl
out
xlat
pop
pop
sub
out
daa
push
ret
push
mov
mov
outsl
imul
jbe
jbe
pushf
shlb
add
stos
out
dec
xchg
into
test
cltd
les
xchg
sbb
xchg
fdivr
adc
test
cld
lret
push
mov
add
or
and
xlat
cmpsb
leave
test
fiadds
push
jge
les
push
push
nop
clc
dec
mov
stos
addl
adcl
mov
sub
leave
dec
sub
into
sbb
xor
outsl
scas
insl
in
rorl
push
sbb
dec
in
fsts
loope
in
data16
pop
jg
sahf
leave
shll
dec
lea
inc
lock
lods
dec
fcoms
je
sbb
inc
loopne
scas
jg
lods
jns
daa
or
ds
mov
mov
movsl
dec
mov
jecxz
psubd
not
pop
sbb
repnz
in
push
jne
push
sbb
adc
es
dec
popf
int3
and
add
xchg
popf
cld
xor
scas
scas
sbb
mov
adc
in
adc
hlt
lcall
mov
push
out
divb
out
inc
rclb
pop
pop
sbb
call
ret
call
out
and
fstp
popf
push
jbe
adc
in
adc
xchg
xchg
push
movsl
rcl
jb
imul
in
std
adc
call
and
jecxz
inc
jl
jae
incl
movsl
stos
mov
xor
lahf
xchg
into
cli
leave
push
fcomps
addr16
mov
or
xchg
fsubr
bound
cmpsb
add
mov
pushf
scas
xor
js
movsb
rorl
pop
mov
inc
mov
lods
xor
cltd
mov
pop
xor
push
clc
mov
jg
or
mov
outsl
ja
aam
or
or
stos
or
or
cmp
push
push
xlat
hlt
mov
jl
mov
cmpsl
and
rorb
inc
jns
inc
stos
bound
dec
insl
aaa
dec
addr16
int
mov
inc
call
pop
rcll
adc
mov
push
pop
mov
inc
cltd
incl
loop
test
or
ret
mov
lods
cmp
pop
dec
test
test
mov
scas
xor
mov
lods
rcrb
mov
rep
jae
mov
loope
or
scas
adc
pop
iret
test
and
cmc
test
xor
xchg
push
mov
adc
cli
inc
fdivrs
clc
dec
mov
jmp
icebp
xchg
lds
sub
jns
fwait
hlt
push
mov
add
jg
push
iret
pop
gs
push
mov
sub
adc
and
mov
subb
dec
dec
call
mov
xlat
cwtl
xor
jmp
and
scas
jge
mov
jle
pop
jno
ret
fldcw
mov
jecxz
cmp
cmp
aam
lcall
pop
adc
movsb
push
aam
scas
and
jmp
std
mov
mov
inc
adc
xchg
jne
outsl
imul
push
inc
adc
xchg
fbld
sti
pushl
jne
sti
cmc
add
mov
mov
cmpsb
jl
xor
cmpsb
rolb
inc
mov
ret
mov
test
rcrl
dec
sbb
push
push
adc
in
daa
mov
imul
pop
push
lods
lock
lods
push
and
mov
mov
mov
pop
ret
rcll
fs
cld
mov
cmc
scas
roll
and
sahf
addl
pop
outsb
and
jge
xchg
je
sahf
cmp
or
fs
mov
dec
rcr
cmp
out
sarl
in
outsl
cmp
leave
and
pop
es
mov
or
out
mov
xchg
dec
xor
andb
ljmp
int3
adc
pop
xchg
loope
rcrb
lret
mov
clc
push
sub
addr16
mov
sub
shll
or
pop
sub
xor
xor
mov
arpl
inc
leave
xor
and
mov
loop
fadds
mov
xor
push
xchg
sub
movsl
jg
call
and
pushf
out
ljmp
jle
inc
mov
adc
dec
cs
decb
jle
jns
pop
arpl
movsl
dec
mov
and
lea
adc
mov
mov
and
into
loope
and
lcall
sbb
pop
push
push
ljmp
loop
stos
popa
ret
rcl
dec
lahf
and
inc
xchg
and
inc
icebp
xor
add
cmp
adcl
cmp
mov
ret
add
cwtl
push
ret
cmp
xchg
xchg
push
int
ret
push
sbbl
push
pop
je
ret
xchg
cmp
sbb
sbb
mov
test
stc
dec
cmpsl
mov
push
pusha
mov
cmpsb
ljmp
jae
pop
xchg
sbb
sbb
aad
dec
xorb
or
pop
mov
rorl
imul
dec
mov
cwtl
mov
or
jo
add
paddq
ljmp
cmp
xlat
cmp
outsl
push
push
movzwl
leave
mov
cmp
pop
dec
push
mov
mov
cmp
push
les
inc
ja
add
inc
pop
fnstenv
cmp
test
cld
jnp
mov
pop
jp
stc
and
xchg
push
inc
lcall
jge
aam
push
push
cmpl
dec
fildll
jne
aad
cmp
js
xchg
jp
jge
adc
lret
push
rcrb
in
cmp
cmp
mov
fdiv
push
push
xor
mov
mov
push
out
xchg
fcompl
pop
daa
loope
ljmp
pushf
mov
jno
js
push
mov
movsl
jp
adc
stos
lods
cwtl
dec
movsb
stc
out
push
out
test
fld1
push
and
test
xchg
mov
inc
movsl
add
aaa
dec
loopne
xor
push
shll
xchg
repz
or
pop
dec
mov
cmp
out
jl
push
ss
out
clc
aam
fsubr
adc
sbb
and
ljmp
and
and
int
and
lds
je
xchg
orl
es
lcall
out
add
int3
int3
movsl
jl
inc
lcall
pusha
dec
ljmp
rorb
int3
mov
nop
aaa
lret
push
dec
sub
pop
xor
adc
mov
pop
adc
rcr
shlb
repnz
gs
inc
lods
out
or
cs
or
xorb
mov
fldcw
jge
pop
push
cwtd
clc
cmp
sub
mov
mov
xor
dec
jp
in
fisubrl
insb
adc
leave
lcall
xlat
xor
gs
sti
shrb
and
jne
or
imul
ljmp
pop
mov
xlat
dec
xor
aad
xor
jl
movsl
std
fsubr
sti
adc
mov
pop
sbb
sub
lea
add
cld
js
lock
bound
push
pop
sbb
popa
std
jl
xchg
mov
cmpsl
ficoml
sbb
adc
mov
daa
aam
shld
sahf
push
add
cmc
in
and
mov
push
inc
inc
aam
repnz
push
arpl
dec
mov
int
jl
jbe
jge
cmc
mov
testl
addl
and
xchg
lock
push
rdtsc
mov
pop
add
dec
pop
iret
les
rcll
mov
lds
call
mov
inc
pop
push
pop
leave
mov
jns
shl
addr16
int3
xor
adc
out
mov
fsubl
xor
sbb
lahf
push
je
leave
daa
mov
sbb
popf
push
xchg
mov
rcll
and
movb
push
mov
test
sub
rcr
scas
xchg
mov
mov
lds
sbb
inc
shlb
popa
in
lock
jns
les
inc
bound
cmp
push
xor
imulb
cmc
mov
push
lock
sbb
and
insb
xorw
add
js
leave
lock
arpl
jmp
xor
xor
jmp
jno
addb
sub
inc
cs
call
js
roll
mov
mov
icebp
jle
mov
fwait
adc
lret
loopne
sub
push
dec
outsl
mov
jb
rcrb
popf
push
out
nop
lret
jb
push
jge
adc
pushf
mov
jmp
mov
mov
cmp
test
aas
idivl
stc
or
cmp
add
sbb
test
xchg
adc
xchg
pop
adc
fs
mov
ljmp
loop
pop
jb
xchg
rol
sub
ljmp
mov
mov
add
xor
push
adc
jp
shr
ljmp
test
clc
pop
pop
jmp
cmpsl
push
mov
jne
adc
push
sub
je
cld
cmp
loop
jmp
add
xor
pop
push
fisttps
push
adc
push
jns
stc
adc
or
or
or
fisttpl
xchg
dec
in
fidivrs
sbb
out
jo
movl
xor
fdivs
out
or
leave
push
orl
or
jge
jmp
xor
imul
ljmpw
add
sub
pushf
ljmp
jecxz
call
mov
les
and
in
mov
call
and
inc
test
pop
push
pop
adc
push
outsb
ss
lret
push
or
add
and
out
jmp
pop
mov
outsl
jge
hlt
lea
mov
data16
cmc
adc
call
mov
test
jecxz
pop
fisubrl
wrmsr
xorl
iret
inc
outsb
and
push
dec
lret
out
add
xor
pop
in
xchg
das
dec
push
bound
bound
add
je
xor
mov
xchg
mov
call
stc
jmp
gs
pusha
sbb
jecxz
aad
andb
or
adc
and
ljmp
clc
pushf
lods
sar
pushl
mov
decb
mov
test
dec
xor
out
sbb
cmp
sbb
mov
sub
cs
xchg
or
sbb
je
ds
mov
or
xchg
rcrl
leave
push
into
mov
sbb
or
pop
push
test
cmp
dec
adc
scas
lds
cmp
adc
test
cli
mov
movsb
outsb
xor
and
sahf
xchg
and
in
push
mov
ss
cmp
adc
nop
flds
adc
adc
out
ljmp
add
cmc
das
setb
ss
xchg
jo
stos
pop
arpl
loope
cmpsb
pop
int3
cmp
ret
sub
jno
int3
add
sbb
orb
mov
inc
pusha
adc
xchg
push
xchg
and
fiadds
mov
enter
imul
insb
enter
xchg
dec
dec
stos
cmp
dec
push
and
mov
out
jno
ficomps
ja
dec
xor
sti
cmp
mov
and
mov
int3
frstor
je
mov
jl
adc
pop
popa
hlt
mov
jge
jb
push
dec
push
mov
add
rorb
and
mov
cld
xor
inc
xchg
add
mov
adc
fisttps
dec
int3
pop
pop
xor
mov
adc
jecxz
leave
mov
adc
xor
int3
mov
leave
sub
jae
sarl
sbb
and
out
out
out
dec
mov
ds
ss
jp
xor
imull
std
and
in
ret
inc
fidivrl
gs
mov
push
outsb
push
jg
push
cmp
inc
and
adc
mov
inc
inc
jp
inc
xlat
push
lret
in
xchg
orb
jp
outsb
insl
and
add
iret
sub
inc
loopne
adc
test
outsb
mov
jnp
ljmp
decb
add
push
shll
js
popl
pop
push
ss
jmp
test
push
mov
sub
faddl
sub
mov
nop
stos
js
int
fldpi
test
decl
sti
ret
jno
rorl
xor
push
scas
pop
dec
adc
call
inc
pop
aaa
pop
mov
rclb
add
iret
lahf
and
int
pop
push
dec
xor
out
out
pop
sbb
pop
sub
outsb
sbb
lret
out
mov
pop
jmp
mov
mov
aas
insl
fsubrs
mov
flds
jns
sbb
mov
jae
addl
shl
add
cmc
scas
mov
movsb
jg,pn
stc
in
cmc
neg
jg
imul
sbb
cmp
fwait
or
in
or
pushf
or
pushf
loop
dec
stos
repnz
jns
jb
shrl
out
stos
jo
loop
icebp
flds
sub
js
push
repnz
lcall
jmp
ret
aam
lods
inc
jae
mov
lahf
js
imull
cld
jo
test
roll
jns
xchg
out
scas
sbb
inc
int3
arpl
jmp
xchg
jecxz
shl
inc
ss
enter
sub
shlb
rcrb
ret
jno
pop
in
xor
dec
mov
rcr
cltd
imul
cmp
filds
ljmp
mov
cmp
lret
jl
mov
pop
mov
imul
lock
and
or
dec
fldt
push
repnz
lahf
adc
rcrl
sahf
in
mov
or
dec
mov
js
xor
pop
pop
mov
insb
mov
dec
shrb
sbb
insl
stos
jns
sahf
xor
out
jns
mov
fwait
and
jge
push
xor
int
jl
mov
pusha
and
and
inc
pushf
pop
xor
pop
negl
jns
pushl
flds
mov
xchg
sub
scas
arpl
adc
js
jl
mov
pop
cmp
dec
lock
in
loop
in
dec
test
les
mov
dec
and
sti
or
insb
cwtl
mov
rcll
outsl
incb
pop
adc
inc
gs
cs
dec
mov
cmp
popf
loopne
mov
add
into
fisttpll
mov
or
add
shrl
loope
jbe
jnp,pn
inc
inc
mov
mov
sbb
pop
push
icebp
lahf
or
or
loopne
idivb
mov
incl
scas
mov
imul
xor
lcall
pop
sub
pop
pop
bound
add
inc
add
je
rolb
xchg
ret
jbe
pop
int3
lds
fwait
jecxz
pop
xchg
pop
cmp
jmp
into
jle
cmc
xchg
cmp
add
add
shl
cmp
shrl
or
dec
adc
adc
push
mov
and
lock
rcl
xor
sub
lcall
scas
js
and
ds
cli
data16
inc
enter
ss
xchg
shl
or
dec
imul
aaa
xor
xlat
pop
out
addl
fcomip
xor
mov
sbb
lret
adc
sahf
stos
pusha
and
jo
mov
loop
cmc
jp
lea
cmc
or
xchg
cmp
add
mull
std
inc
cmp
mov
inc
dec
inc
ret
cmp
gs
xlat
outsb
int
enter
sub
dec
in
xlat
ja
je
movsl
push
test
cmp
out
push
aad
testl
fstps
pushf
clc
fidivs
push
cltd
lret
mov
push
out
sbb
mov
add
insl
adc
sub
and
pop
sub
cmc
pushf
mov
pop
cmp
js
push
fdivs
push
int3
les
pop
roll
rolb
push
adc
insl
dec
xor
pop
sub
sub
lahf
dec
xchg
mov
add
mov
inc
mov
adc
cld
ljmp
outsb
nop
jne
xorl
in
jl
mov
fs
and
cli
sbb
scas
add
std
lods
inc
ss
add
cs
mov
cmpsl
rclb
loopne
dec
add
xor
jg
call
cwtl
adc
push
int
sbb
xorl
fbld
mov
xlat
les
loopne
out
mov
sbbl
xorl
xor
mov
mov
push
mov
mov
push
pop
fdivr
imul
nop
inc
fwait
jg
xchg
rcll
fdivrl
dec
jo
lret
push
movsb
mov
repnz
les
repz
scas
push
jge
lock
adc
push
mov
iret
stos
enter
or
mov
xor
lock
js
adc
imul
fisttps
fs
mov
dec
inc
mov
fs
clc
sub
and
les
add
pushf
mov
cmc
stos
xchg
movsl
repz
cwtl
sbb
ss
jbe
out
popf
sarb
xchg
loopne
sahf
shrl
mov
mov
aam
inc
nop
sbb
fimuls
loopne
stos
js
push
pop
ss
or
push
int3
sbb
dec
pop
inc
xor
insl
gs
pop
in
std
jno
mov
cli
clc
xchg
call
scas
pop
sbb
xlat
shrb
push
sbb
adc
scas
push
sub
loop
icebp
std
shll
dec
dec
negb
mov
lock
xchg
lahf
cltd
lock
mov
push
mov
jno
jp
nop
and
nop
outsb
cmp
jle
or
mov
jne
scas
mov
ljmp
mov
mov
adc
in
in
out
loop
popf
xchg
insl
sub
inc
sub
addr16
sub
mov
jp
jnp
or
jle
pushf
pop
xchg
mov
mov
sti
out
sbb
lret
icebp
dec
sub
mov
and
fstl
dec
stc
sub
mov
and
dec
shlb
mov
mov
mov
repnz
xchg
jecxz
mov
xchg
scas
lods
adc
scas
movsl
push
cltd
daa
lods
jb
mov
sbb
lahf
gs
inc
fnstenv
aaa
mov
pop
les
mov
imul
sub
cmpsb
xchg
and
std
jbe
pushf
push
jbe
in
hlt
push
push
je
gs
dec
mov
inc
shrl
pop
cmp
mov
jp
sahf
pop
filds
js
loop
xchg
or
mov
int3
mov
cmp
dec
neg
negl
pop
rorb
adc
nop
rorl
fs
orl
adc
cltd
mov
push
and
mov
or
mov
cmp
push
sbbl
js
xor
push
jg
xchg
or
movsb
jae
jb
cmpsb
or
ret
pop
ljmp
pushf
push
mov
jne
mov
mov
pop
adc
add
lods
sbb
mov
int3
enter
lods
adc
xor
int3
lret
or
inc
fdivrp
adc
pop
pop
ds
jmp
jge
inc
push
mov
into
mov
fnstenv
in
enter
mov
loop
push
mov
nop
pop
lahf
xor
jp
cltd
cli
or
out
mov
sbb
xchg
mov
scas
jne
clc
adcl
mov
dec
add
xchg
jnp
add
pushf
loopne
add
dec
add
int3
and
or
ds
xchg
push
mov
int3
sbb
xchg
dec
cli
mov
in
arpl
test
loope
pop
in
adc
xchg
xlat
sbb
pop
rcrl
lods
loopne
sbb
mov
loop
jp
cmc
loop
dec
ds
scas
arpl
mov
repz
rcrl
jnp
pop
push
imul
clc
add
cs
cmovg
mov
je
pop
std
in
adc
mov
ljmp
mov
push
mov
xchg
sub
negb
push
mov
test
call
test
inc
sub
cli
stos
lock
add
jnp
dec
jbe
mov
push
jmp
cmpsl
and
jnp
fcoms
mov
push
cmp
cld
pop
sbb
aad
ret
lret
int3
int3
push
incl
fists
fdivrp
add
fsts
popf
sbb
pusha
cs
mov
adc
and
je
outsl
nop
adc
add
data16
test
cmpsb
icebp
xor
sub
and
mov
in
fldl
cmp
jecxz
imul
andb
lock
sub
adc
mov
lahf
mov
scas
mov
xchg
mov
orl
repz
sbb
adc
popl
xchg
addr16
pop
stos
sbb
cmc
jns
push
mov
cs
std
mov
fnstenv
or
mov
scas
je
sbb
or
sub
inc
cmpsl
lahf
jnp
test
ret
sbb
push
push
out
lds
popa
in
test
das
outsb
and
ss
in
mov
and
pop
das
dec
ret
mull
mov
lahf
jo
and
mov
sub
adc
outsb
stos
shlb
jb
out
push
pop
dec
mov
insb
ss
and
jle
in
sub
icebp
das
adc
cmp
sbb
jge
stc
enter
fwait
or
in
loop
int
movsl
dec
pop
and
dec
int3
test
xor
push
pop
call
adc
arpl
subb
shr
or
cmpsb
adc
pop
jp
and
hlt
jg
fbld
ret
leave
adc
add
out
sub
bound
sub
sti
mov
dec
jnp
loope
leave
xchg
xor
sti
stc
and
test
jl
call
fst
dec
int
adc
mov
dec
test
mov
push
dec
fbstp
cmp
iret
sub
das
dec
btr
cmpsb
push
ficompl
cmpsl
fsubl
jbe
pop
mov
mov
imul
xor
inc
xor
add
jge
jo
inc
mov
jmp
testl
add
pop
stos
and
inc
scas
sbb
out
cmpsb
stos
ds
xor
inc
or
fbstp
lods
popa
mov
sbb
mov
divl
outsl
mov
or
iret
cmc
add
cltd
je
sbb
xchg
jmp
cmp
sbb
inc
leave
stc
adc
lock
mov
jecxz
sbb
pop
xchg
pop
pop
pop
sti
jp
jg
or
sbb
rcl
push
fsubl
lods
dec
ljmp
cld
sahf
sbb
out
test
jno
mov
in
and
push
pusha
or
mov
fmuls
add
inc
jle
outsb
icebp
xchg
cmp
xchg
in
xchg
jmp
mov
xchg
pop
mov
jmp
js
shr
sbb
xchg
pop
dec
xor
scas
mov
stos
xlat
adc
jns
leave
dec
inc
and
cmp
inc
nop
pop
cwtl
adc
push
adc
sbbb
mov
jae
push
add
shlb
mov
xchg
int
insb
xchg
cmp
mov
sbbl
lcall
sub
rcrb
ljmp
cmp
leave
xchg
mov
xchg
jp
les
dec
scas
and
mov
sbb
aaa
ljmp
enter
nop
dec
stos
or
bound
lods
ret
mov
loopne
jb
and
adc
loope
negl
and
testl
xor
push
pusha
xor
rorl
or
ret
loopne
jns
sbb
lahf
mov
sbb
push
mov
add
cmpb
mov
cmc
xchg
lods
scas
adc
jne
std
loopne
sub
add
add
lret
adc
mov
xchg
sub
mov
sub
in
mov
pop
lahf
sub
mov
cmp
xchg
ret
fldt
aaa
stc
ja
xlat
icebp
pop
lock
je
xchg
xor
dec
adc
jle
sbb
mov
cli
enter
movsb
push
dec
dec
je
mov
xor
aad
hlt
inc
sbb
dec
mov
push
mov
adc
jno
xchg
cmpsl
mov
mov
lret
sub
loopne
fildll
or
pop
xor
and
insl
icebp
mov
jbe
scas
pusha
mov
std
repz
jge
movsl
or
insl
cltd
inc
mov
sar
popa
sbb
sti
pop
int3
in
fs
pusha
fiadds
into
jecxz
ret
test
jne
nop
and
adc
pushf
pop
inc
das
je
push
call
sti
mov
xchg
scas
jb
or
and
mov
in
or
pop
sbb
pop
pop
jl
int
jmp
cld
pop
add
pop
movsb
dec
cli
lret
push
fildll
stc
adc
push
cmc
shr
data16
out
cmp
push
lret
jge
mull
mov
lods
lods
in
xor
xlat
inc
mov
ljmp
and
xor
addb
dec
repz
popa
cmpsl
jbe
aas
roll
aad
rcll
sub
push
jmp
push
xchg
loop
jmp
lds
lock
and
sub
inc
movsl
dec
mov
jb
scas
cmp
cmpsl
sbb
xor
sub
sub
pop
jg
mov
inc
and
sub
loope
sahf
inc
stos
mov
imul
insb
jne
mov
scas
mov
push
scas
add
mov
add
sti
pop
lods
aas
cmp
xor
mov
lock
aas
cmp
scas
mov
in
imul
mov
jb
stc
mov
sahf
xchg
push
xor
test
dec
fisttps
jno
daa
lods
loop
arpl
cli
aas
dec
mov
test
add
mov
pusha
int
imul
jbe
mov
pushf
lahf
in
pop
adc
std
add
cmc
inc
fstpl
inc
fucomip
inc
lds
mov
xchg
or
mov
jno
pusha
add
insb
or
arpl
ljmp
cmovp
arpl
icebp
pop
in
xor
adc
add
dec
not
dec
pop
push
js
and
sub
repnz
xlat
leave
popf
xor
sub
iret
mov
pop
add
insl
inc
pop
jmp
fsubrl
pushf
inc
push
jmp
or
sahf
jg
inc
jo
xor
lret
scas
mov
imul
clc
cmpsl
sub
mov
loopne
jmp
dec
movsl
jge
nop
mov
inc
adc
mov
sbb
add
xlat
jno
jb
ja
shrl
dec
push
mov
and
xchg
mov
ficoml
inc
outsl
add
pop
add
rcl
cld
out
ss
cmp
ljmp
ljmp
jge
stc
movsl
adc
es
pop
mov
xor
out
mov
and
neg
arpl
faddl
call
pmaddwd
rclb
sbb
lock
add
xchg
clc
mov
mov
mov
adc
sub
sub
movsl
sub
cmp
cmp
clc
jmp
adc
lcall
jmp
jle
fisttps
mov
mov
and
repz
pop
pop
mov
or
mov
mov
pushf
xor
fidivrs
aad
fmul
ljmp
sub
jge
jecxz
mov
bnd
xchg
sub
add
pushf
insb
xor
mov
xchg
rorl
ss
add
push
sub
subb
lret
and
jne
cmp
shl
or
sub
loop
jmp
pop
mov
sarl
popf
movsb
lcall
testb
mov
lret
add
loop
xor
dec
ljmp
jae
outsb
fcomp
and
aam
and
enter
movups
scas
ret
enter
into
mov
mov
movl
adc
dec
mov
pop
arpl
lcall
xchg
xor
cmpsl
cmp
pusha
or
push
lret
add
cmp
outsb
out
into
punpcklwd
xchg
in
lods
int
add
mov
pop
out
mov
in
pop
and
lea
shll
push
rcrl
aaa
neg
xor
rclb
or
jmp
pusha
xor
out
arpl
dec
aam
mov
lock
dec
push
mov
loop
add
push
adc
or
test
lock
repz
sbb
jmp
scas
outsl
movb
jnp
dec
xchg
sbb
dec
incb
notb
and
cmp
std
bound
into
jmp
daa
mov
dec
cwtl
ret
xor
pop
movsl
out
lock
cwtl
loop
mov
jno
pusha
jmp
push
xchg
jg
xor
dec
ljmp
clc
cmpsb
mov
loop
cwtl
ja
add
cmp
mov
scas
call
inc
sbb
pop
push
xor
push
testb
shlb
and
fisttpll
loop
jmp
ja
jo
pusha
xchg
in
cmp
loopne
std
popf
pop
dec
pushf
aad
into
lea
mov
or
sbb
dec
insb
jns
icebp
in
fistps
stos
jo
mov
call
pop
push
add
jo
scas
or
cmp
sarb
jae
insb
mov
and
mov
addr16
push
stc
jmp
sar
incl
pop
sbb
mov
adc
sub
add
rclb
pop
xor
add
cld
mov
repz
pop
repz
xor
or
ja
lods
test
daa
repz
dec
adc
data16
jl
xor
into
fsubrp
push
xchg
inc
push
in
xor
jge
inc
add
lret
inc
into
push
pop
adc
es
ficoml
movsb
fbld
jg
and
xchg
outsl
dec
dec
xchg
mov
in
xorb
je
ja
fisttps
mov
mov
adc
mov
imul
es
and
or
mov
mov
decb
and
pop
fs
scas
inc
push
mov
mov
sbb
add
scas
cmp
aaa
in
mov
jmp
inc
lret
jp
dec
mov
add
add
js
and
popf
imul
and
sbb
clc
xor
fcoml
int3
xlat
mov
mov
adc
jnp
gs
add
xchg
or
imul
dec
std
sbb
stos
loope
xchg
andb
in
lods
push
push
mov
fildl
or
or
ja
push
ss
sub
ret
cs
jmp
xor
sbb
or
mov
mov
pop
out
sbb
mov
add
pop
fstpl
aad
fs
adcb
xchg
ja
mov
dec
sarl
fstps
cld
or
mov
popf
cmp
repnz
mov
pop
insb
xchg
pop
mov
pushf
aam
imul
cmpsl
jnp
lcall
rcrb
imul
pop
jmp
insb
mov
rclb
pop
pushf
push
push
push
push
stos
mov
push
xor
insb
popa
in
test
clc
lds
test
pop
cmc
xchg
xchg
xchg
dec
movsb
or
les
jle
jae
jne
pop
mov
out
imul
rcrl
push
inc
adc
cmc
popa
sbb
mov
jle
xor
outsb
andl
in
rcrl
shll
fimull
fwait
push
aas
pop
shl
negb
fists
jl
mov
sub
lds
add
popa
loop
pushf
enter
mov
je
iret
mov
imul
repnz
lods
inc
xor
sbb
movsl
pop
pop
fisttps
dec
adc
push
scas
loop
gs
loope
aaa
inc
gs
cld
xchg
mov
xor
jecxz
data16
out
ss
movsb
pop
cmp
pop
xor
iret
notb
popa
xor
int3
ret
test
rolb
aam
jp
dec
jns
dec
mull
inc
sbb
cwtl
xchg
pop
xchg
push
in
stos
mov
stos
pop
pop
sbb
mov
scas
aam
mov
mulb
stc
fcomip
jmpw
rorl
xor
pop
push
ja
xchg
jecxz
xchg
add
inc
push
or
loope
out
mov
and
js
jo
push
xchg
jge
mov
dec
and
fisubrs
or
push
jp
add
stos
adc
mov
bound
cs
insb
mov
incl
clc
popf
pop
sbb
pushf
push
clc
inc
stos
pusha
test
orb
scas
in
xor
jge
cmp
mov
ljmp
lcall
mulb
or
les
mov
lcall
cmp
mov
ret
xchg
dec
sahf
rcrb
mov
fisttpll
mov
xor
sbb
les
out
fwait
ss
pop
sub
push
inc
cmp
out
jg,pn
out
incb
add
fstpl
jmp
int3
test
shll
mov
fwait
or
or
movsb
jno
inc
jo
mov
in
test
push
out
or
fiadds
and
mov
add
into
and
xor
jnp
xchg
shr
rclb
cld
push
jg
cmpsl
add
mulb
mov
sbb
pop
out
pop
out
add
iret
hlt
jns,pn
cli
scas
mul
ja
fcoml
xchg
push
enter
addr16
adc
shl
lods
mov
pop
mov
ja
test
pop
xor
xchg
rolb
fisubs
int
add
push
cmp
in
fwait
adc
pushf
mov
adc
dec
sbb
imul
jnp
dec
xor
mov
popa
mov
jmp
mov
jmp
in
mov
or
ds
adc
cmp
cmp
adc
nop
mov
movsl
js
push
xor
rorl
push
cmp
pop
and
out
sbb
out
fists
popa
pop
and
in
jne
add
mov
inc
xor
mov
sbb
std
pop
xorb
imul
lret
subl
sar
loopne
mov
cmp
pushf
in
sti
scas
or
sub
repnz
cmc
add
out
hlt
xchg
jle
add
arpl
fmull
fcomp
stos
or
cmc
cmp
dec
pop
dec
lret
cmp
jl
cld
arpl
scas
aaa
push
ret
inc
js
cmp
jge
shll
push
sbbl
call
aaa
push
mov
out
cs
test
outsl
out
mov
push
ja
stos
xchg
jecxz
int
inc
ljmp
push
icebp
xor
pop
loope
cs
out
cmp
jo
xor
mov
sub
and
mov
sbbl
cmpsl
cmpsl
push
mov
adcb
and
cli
test
adc
sub
icebp
sahf
xchg
decl
xchg
mov
jmp
jnp
mov
lcall
adc
dec
mov
lret
cmpsb
and
add
outsb
cmp
mov
leave
pushf
mov
iret
sub
mov
dec
xor
cltd
in
out
pop
cmc
mov
jmp
jae
and
or
sub
aas
dec
push
cmp
lods
cwtl
clc
mov
mov
sbb
icebp
push
ljmp
mov
and
pop
pop
cs
mov
adc
pop
arpl
push
rclb
mov
sbb
and
bound
fbld
in
ja
mulb
add
mov
daa
pop
sbb
out
jl
scas
lret
icebp
rol
imul
push
inc
je
mov
inc
xchg
fsubl
sbb
scas
outsb
mov
sbbl
adc
mov
pop
popf
int3
inc
inc
cmpsl
test
jge
pop
notl
pop
fsts
and
sahf
shrb
in
jns
lock
push
lods
sub
and
aam
cmpsb
jle
xor
in
mov
cmp
ja
cmc
adc
inc
inc
addl
outsl
cmp
jns
pop
pop
add
dec
mov
scas
daa
pop
push
sub
mov
dec
add
adc
xchg
add
test
or
push
lret
fcomip
adc
add
lds
nop
ficomps
cld
int3
mov
inc
xchg
jge
cli
xor
clc
aaa
mov
and
xor
orl
xchg
sub
test
sbb
gs
xor
xchg
inc
push
mov
jp
cmp
lret
fwait
cmpsl
push
pusha
pop
adc
roll
inc
adcb
loope
test
in
rcll
add
mov
mov
lea
add
andl
les
lahf
mov
pushf
nop
in
mov
or
aas
popf
testl
xlat
cmp
push
aas
jge
incb
in
pop
mov
mov
jmp
mov
mov
mov
imul
adc
repnz
add
inc
jmp
jno
sbb
std
adc
sub
dec
push
mov
mov
rcrl
xor
daa
ficoml
push
sbb
or
into
imul
frstor
dec
mov
pop
jns
ret
aas
push
daa
lock
mov
jo
mov
loope
popf
or
repnz
lds
jmp
add
add
add
xor
imul
and
push
dec
jnp
fcomip
cld
icebp
fidivl
add
jnp
mov
lods
push
adc
jb
mov
inc
arpl
stc
out
rol
mov
test
jo
in
pop
jecxz
les
sbbl
daa
xor
push
push
xor
mov
cltd
aaa
inc
test
or
jne
pop
push
mov
loopne
cmp
and
cmp
imul
int3
idivl
cld
dec
shlb
pop
pop
cmpsl
xchg
adc
mov
or
int
lret
ret
jo
shll
jmp
mov
subl
pop
idivl
loope
rolb
rcll
into
lods
arpl
jle
inc
scas
dec
push
out
pop
adc
and
xchg
imul
jno
xor
aam
and
jg
iret
mov
pop
jb
mov
stos
jnp
sbb
jno
icebp
jge
push
sbb
xlat
dec
idivl
xchg
repnz
push
punpckldq
sub
lods
std
jecxz
jbe
pop
nop
sbb
jg
lret
adc
sbb
jecxz
jnp
cli
or
lds
add
or
ret
loopne
xchg
add
shll
aam
mov
inc
scas
rclb
hlt
call
mov
bound
ja
mov
cmc
in
xor
add
mov
faddl
data16
sub
scas
lahf
jmp
dec
mov
inc
sbb
faddl
ret
and
cmp
xchg
or
pop
lock
loopne
or
jl
add
mov
mov
sahf
adc
adc
lods
cld
pop
push
add
add
xchg
out
xchg
jmp
jmp
inc
ja
lret
pushf
xchg
add
sub
cwtl
orb
mov
push
lea
lret
fs
jmp
imul
out
xchg
lods
sub
scas
xor
mov
ret
mov
xchg
mov
addb
adc
imul
sbb
movsl
pop
arpl
mov
stos
roll
movsl
cmpsb
cli
dec
jb
push
mov
in
mov
inc
mov
pop
push
movsb
push
shrl
adc
cmp
add
jo
movsl
mov
inc
inc
inc
mov
sub
cltd
add
xor
popa
sub
lock
xchg
add
test
mov
dec
imul
or
cmc
adc
imul
daa
push
push
je
pop
pop
iret
pop
or
ds
pop
rcrl
pop
inc
nop
rep
loop
negb
cmp
ljmp
push
out
xor
enter
adc
jae
mov
add
das
push
mov
stos
and
push
jnp
mov
dec
inc
call
in
lds
iret
inc
fwait
pop
das
ss
add
xchg
push
aaa
mov
pop
ret
or
jg
ret
cs
pop
add
out
ljmp
in
movsb
ret
mov
push
movsl
stc
jbe
je
and
cmp
std
fiadds
jecxz
push
mov
mov
fwait
rorl
incl
pop
mov
shlb
mov
out
or
dec
imul
cmp
or
mov
jae
out
pop
inc
xor
push
aaa
adc
ret
jne
ljmp
dec
or
out
test
ret
lret
aas
xor
add
leave
aad
fs
push
lds
xchg
and
cli
xchg
mov
push
shll
shlb
cmc
jne
pop
popa
aad
inc
xor
lahf
mov
xorb
cmpsb
iret
mov
testb
in
daa
cmp
jge
cmp
pusha
das
jns
int
push
push
xlat
fdivs
test
rorl
mov
xchg
xchg
nop
mov
jbe
or
jl
pop
dec
mov
and
sbb
jne
jnp
lea
mov
in
int
push
sub
std
add
or
xlat
jle
xchg
or
pop
mov
outsl
dec
aas
fstpl
dec
inc
push
inc
mov
in
cmp
and
cmp
fld
sahf
pop
cli
adc
in
mov
fisubs
xor
and
push
jle
sub
sahf
sbb
je
pop
stos
mov
xlat
fistl
into
je
popa
pop
push
fisttpl
add
xchg
push
lea
sbb
in
sub
ret
sti
lcall
cltd
shr
enter
jno
std
mov
or
dec
aaa
pusha
jns
inc
call
pop
pop
ds
cmp
mov
lock
or
arpl
dec
int3
rclb
lret
out
push
stos
xorb
dec
dec
jno
cli
ss
arpl
xchg
pop
push
xchg
outsl
daa
xchg
xchg
mov
jle
insl
sub
mov
push
inc
cli
mov
mov
orb
test
test
clc
fcmovnb
sbb
aaa
jp
addr16
adc
notl
arpl
mov
loopne
mov
outsb
sahf
cld
mov
xchg
xchg
imul
aas
pusha
add
push
insl
xchg
cltd
jb
aam
fstpl
sbbl
mov
dec
adc
adc
sub
sbb
adc
mov
dec
in
shll
lret
pop
dec
jnp
sbbl
out
sub
fiadds
push
mov
sarb
inc
loopne
stos
lock
pop
pusha
jo
fistpll
push
and
fsubs
ja
xor
mov
loopne
ret
lods
scas
jmp
xor
push
lret
dec
push
daa
adc
cmp
xor
xor
aad
faddl
clc
out
adc
rcrb
scas
sub
scas
je
mov
push
jmp
outsb
cld
lods
inc
xchg
enter
and
stos
push
pop
xchg
push
cmp
sbb
cmpsb
pop
pop
popa
es
sarb
jmp
out
add
xor
jg
jmp
outsl
sub
push
dec
addr16
aam
cmp
mov
sub
jo
and
call
cld
push
dec
mov
sub
push
pop
repz
aas
pop
add
cmpsb
push
dec
or
or
add
and
and
mov
outsb
movsl
mov
mov
pop
ds
push
add
xchg
lock
push
xor
dec
xchg
or
or
mov
jb
push
add
decb
loop
cmp
rolb
xchg
sbb
sbb
arpl
jnp
dec
cmp
or
jmp
je
fstpl
fsubp
push
add
inc
test
and
pop
stos
sub
cmp
fidivrs
sub
push
popf
in
inc
scas
pop
aad
pop
jnp
mov
inc
pushf
bound
sbb
mov
mov
ja
push
push
xor
gs
cli
lds
push
sub
popa
movsl
loope
add
lcall
std
stos
dec
jl
inc
lcall
mov
in
pop
cltd
mov
sbb
xor
pop
push
das
push
add
movsb
cmp
cmp
fmuls
cmp
dec
jl
add
stos
push
add
push
out
fwait
adc
pushf
xor
jmp
das
lret
repz
aad
ret
jne
sahf
jne
shr
sub
or
sbb
outsl
add
inc
mov
or
loop
inc
inc
insb
pop
adc
cmp
js
add
out
mov
mov
lea
push
mov
stc
out
mov
dec
sbb
in
inc
cltd
test
faddl
xchg
jp
jmp
aaa
xor
js
std
fcmovne
test
es
adc
mov
jmp
adc
or
adc
mov
jp
xchg
scas
sub
cltd
inc
repnz
loope
xchg
xchg
mov
stc
fidivrs
xchg
scas
fists
sbb
or
dec
adc
lahf
ret
repnz
dec
cmc
bound
inc
mov
lret
and
xchg
xor
xchg
sbb
gs
nop
pop
jnp
jo
xorl
fadd
pushf
jp
lcall
mov
push
loop
sub
inc
iret
push
mov
das
mov
adcb
lret
sub
mov
xchg
je
in
and
shrl
rclb
mov
cmp
and
mov
iret
ret
dec
lret
mov
push
sbb
imul
je
mov
shlb
daa
mov
movsl
xor
sti
std
inc
sbbb
jb
add
xlat
add
or
cmc
in
ja
ss
cli
inc
mov
lds
adc
cmp
pop
mov
add
mov
push
xchg
and
icebp
loop
mov
xchg
lahf
inc
stos
sub
stos
dec
xlat
push
test
fsts
xchg
mov
rorl
test
inc
dec
andl
stos
test
xchg
dec
mov
movsb
inc
dec
pop
lret
das
lds
mov
daa
pop
adc
mov
add
aaa
jl
inc
dec
push
xchg
jmp
scas
inc
push
xor
lahf
add
stos
xor
cmpb
add
int
mov
lods
xchg
repz
pop
adc
push
push
cs
pushf
mov
xchg
mov
mov
fisubl
cs
push
cli
push
cmpb
add
das
ret
loope
fisubl
lds
ss
push
pop
or
decb
inc
xor
mov
ljmp
add
jecxz
sub
into
mov
in
je
daa
xor
cli
aam
jne
lret
jo
scas
mov
in
mov
roll
aad
mov
iret
push
inc
mov
add
sub
mov
pop
jno
lods
fbstp
inc
bound
sahf
sub
mov
and
rorb
out
lahf
ficomps
push
dec
xchg
loop
mov
mov
popa
dec
push
ret
pop
jno
sub
mov
add
inc
and
xchg
stos
cli
shrl
jne
push
lahf
mov
in
or
daa
bound
adc
loop
xchg
sub
add
mov
jno
xchg
sbb
and
pop
add
clc
adc
in
mov
loope
stos
cld
scas
sbb
jae
outsb
pushf
sbb
cltd
into
inc
pop
sub
outsl
cmp
add
mov
cmp
mov
mov
in
push
test
push
rcrb
inc
push
mov
inc
rcrl
lock
jnp
or
insb
lret
jno
popa
fcmovnb
or
lds
xor
std
sbb
daa
adc
jp
mull
addr16
sahf
lea
cmp
push
out
cmp
ds
dec
int3
add
out
lahf
push
dec
incb
cmp
inc
decl
inc
loopne
ja
xor
cmp
xchg
cld
clc
inc
sub
call
jb
cmp
mov
je
cmp
imul
jns
cmp
dec
add
cmp
pop
and
push
xchg
mov
push
add
lea
stos
idivl
cld
and
mov
das
mov
lods
xchg
in
or
pop
mov
in
pop
test
addb
cmp
jge
sbb
sub
sbb
pushf
adc
jp
orl
ljmp
push
test
cmpsb
ds
in
popf
out
rcl
sahf
or
outsb
mov
cmp
jp
repz
test
fstpl
mov
adc
and
cmpsl
add
iret
or
xchg
enter
pushf
jg
fildll
outsl
aaa
or
mov
test
sub
sbb
sahf
lea
daa
aas
setb
orl
cs
xor
xor
inc
dec
daa
out
inc
icebp
lret
or
xchg
and
mov
ja
fbld
cld
mov
test
mov
pop
fsubrl
negb
test
lock
inc
and
shlb
popa
xor
adc
data16
daa
ds
pushf
push
scas
pop
lods
ret
sbb
in
sub
cs
into
mov
push
pop
shlb
sub
les
inc
std
pop
clc
or
add
testb
fcoml
rcll
xor
in
push
jmp
rcll
leave
mov
cli
jp
in
leave
pop
inc
mov
jo
mov
cltd
xlat
filds
mov
push
mov
mov
icebp
addl
push
sbb
dec
pop
lods
add
out
cmp
je
dec
inc
add
aaa
filds
adc
and
out
stos
mov
xchg
jae
xchg
idivb
aam
sbb
mov
sub
sbb
popf
dec
jecxz
shl
cmp
in
mov
cmpsl
sbb
arpl
jb
icebp
or
loopne
test
les
sbb
xor
and
sub
adc
pusha
addl
or
and
testl
or
fs
scas
sbb
stc
pusha
mov
aad
add
inc
sahf
cld
cmp
imul
fadd
popl
fsubr
sub
sarb
jo
into
jmp
add
call
xorb
in
negl
pop
mov
push
pushf
in
inc
jae
cmc
cld
ljmp
and
cli
dec
xor
mov
fsubrs
mov
sub
mov
data16
and
iret
mov
add
pushf
out
cmpb
xchg
cmp
fs
stc
arpl
aas
fcom
dec
mov
jb
sbb
pushf
sub
fsts
cmp
mov
sub
jp
les
movl
inc
dec
cmp
out
xor
ret
rcl
movb
jg
aaa
or
xchg
push
mov
push
out
mov
jmp
xchg
sbb
rclb
in
dec
loopne
dec
dec
loope
cmp
adc
sub
cld
xchg
xchg
insl
stc
xchg
pop
fs
inc
inc
call
imul
mov
pop
dec
add
and
mov
and
cltd
lods
add
das
lahf
cmp
or
ret
fcoml
mov
cmpsl
leave
lods
inc
mov
xor
mov
cwtl
sahf
dec
sub
and
and
lcall
insb
pushf
pop
icebp
push
daa
push
mov
jl
aam
aam
ret
lock
adc
adc
jo
std
dec
pop
and
incl
test
mov
or
push
stc
xchg
js
repz
xchg
and
xor
jne
pusha
movsl
scas
sbb
clc
fcoml
mov
bound
push
mov
jno
mov
je
stos
xchg
add
inc
in
sub
pop
lods
ficoml
iret
data16
jne
inc
popa
sbb
lea
into
ja
push
mov
add
and
jg
inc
into
pop
testb
and
outsl
lcall
push
call
lret
dec
dec
stos
ftst
adc
dec
call
int3
fcomps
cltd
dec
dec
ficomps
inc
shlb
xchg
sbb
seta
lret
xchg
mov
mov
push
ja
inc
imul
cmp
push
xchg
push
movsb
mov
fwait
cltd
push
cmp
lahf
xchg
push
inc
mov
ja
add
add
cs
sahf
shll
gs
jge
outsl
fnstenv
dec
adc
sub
xchg
mov
xor
push
pop
and
jnp
dec
movsl
push
test
test
enter
out
or
aam
sub
mov
adc
xor
leave
or
mov
cmp
in
jge
cltd
inc
pop
xor
sbb
int
push
xor
xor
pop
fnstenv
inc
outsb
jbe
inc
xchg
es
inc
and
gs
outsl
pop
inc
setg
adc
jp
pop
xchg
ds
push
in
outsb
bound
xchg
pop
in
lahf
mov
test
pop
outsl
dec
pop
mov
sub
pop
dec
fsub
push
jmp
nop
cmp
inc
xchg
push
pushf
jno
je
js
inc
fwait
jge
mov
mov
aaa
mov
mov
mov
pusha
movsl
jno
andb
cmpsl
xchg
aam
das
pop
rorl
mov
cwtl
out
sbb
call
mov
xchg
pop
adc
mov
test
or
cmpsb
das
lock
sub
or
icebp
roll
mov
cmp
push
fst
cmp
leave
lret
dec
fcmovnbe
pop
in
imull
cwtl
mov
insl
and
mov
push
fadd
data16
cwtl
dec
jb
push
cli
sub
cltd
inc
add
pop
jmp
sbb
dec
pop
xor
lret
shrl
dec
mov
xor
scas
jnp
xor
pop
out
cs
adc
mov
add
fs
cmpsb
sbb
inc
ljmp
and
mov
mov
adc
daa
les
adc
lds
inc
pop
jne
js
xchg
inc
dec
xor
sbb
push
sbb
add
lret
lods
jo
loop
out
inc
outsb
dec
sub
sbb
lcall
cmp
dec
icebp
adcl
pop
push
jl
jae
or
test
adc
xchg
and
xchg
clc
or
sub
sbb
popf
dec
mov
call
imul
cwtl
out
insl
in
pop
push
pop
cs
push
push
lods
rcl
cwtl
test
repnz
in
xchg
xor
in
fwait
les
sbb
sahf
lea
stos
in
mov
push
stos
push
arpl
sbb
shll
sbb
movsb
inc
mov
clc
sahf
push
sub
aas
test
test
aaa
adc
xchg
cmp
inc
fisubl
xchg
in
add
int
push
xor
push
mov
enter
push
shrb
xchg
fsubrl
sub
jg
repz
ret
loopne
lret
lret
sub
jmp
dec
insl
add
in
in
cmp
pusha
inc
ds
test
pop
xchg
mov
push
dec
or
popa
incl
xlat
xlat
or
pop
dec
cld
cltd
pop
aaa
cmpsl
out
lock
xor
xchg
mov
fsubs
inc
icebp
cmp
hlt
sub
sub
and
push
pop
mov
daa
pop
add
call
les
mulb
add
jge
pop
ja
mov
out
jns
sbb
pop
movsb
mov
push
cmp
pop
and
in
inc
mov
add
pop
mov
cmp
pop
inc
push
mov
xchg
or
cmc
sbb
dec
movsl
mov
bound
aam
rol
jae
dec
jle
sbbl
stos
lcall
pop
test
xchg
je
pop
jecxz
add
mov
fsincos
cmp
dec
push
pop
test
push
stos
cmp
jbe
sahf
movl
xchg
js
sbb
out
rcl
rclb
jb
push
jae
dec
and
add
fwait
jae
cli
xor
pop
inc
jne
add
incl
aam
lret
pop
adc
addr16
pop
or
pusha
or
push
out
push
inc
filds
dec
jge
and
dec
pusha
mov
iret
mov
or
test
movsb
cli
aam
fwait
mov
sbb
orb
jg
cmp
pop
mov
inc
into
sub
inc
std
insb
dec
int
mov
push
adc
movsl
add
push
add
vpacksswb
imul
jno
pop
xchg
push
push
mov
fldt
cli
push
cltd
push
mov
xchg
xchg
js
test
gs
in
jo
push
nop
pushf
lahf
mov
xchg
decb
pusha
sub
push
cwtl
les
push
xor
aam
jnp
dec
adc
sbb
rep
cmp
adc
outsl
mulb
mov
mov
mov
rclb
cltd
cmp
fimull
add
lods
add
mov
push
lret
je
jne
inc
out
sbbb
iret
std
add
mov
push
xchg
adc
sub
popf
je
rolb
sbb
push
negl
fxch
in
pop
push
movsl
iret
mov
lock
ss
pop
and
and
xchg
push
out
xchg
in
mov
pop
int3
or
daa
cmc
xchg
outsl
mov
cmp
movsl
sbb
outsb
imul
repz
repnz
pop
or
loop
push
addr16
fldenv
and
in
jne
mov
rol
sbb
icebp
jbe
mov
sbb
mov
and
add
xchg
pop
rclb
mov
dec
outsl
repz
lods
mov
leave
dec
repz
push
push
cld
mov
mov
inc
xor
scas
dec
aas
pmulhuw
inc
inc
gs
ret
lock
sbb
shrl
pop
jmp
sub
je
mov
aam
mov
bound
jns
aam
insl
mov
sbb
push
xchg
cs
push
iret
cmp
into
scas
adc
add
rcrb
arpl
mov
xor
bound
dec
cltd
stos
setge
cmp
add
shlb
roll
or
mov
cli
aas
sti
xchg
dec
push
dec
lods
in
sets
add
ret
jnp
mov
push
cmpsb
out
leave
pushf
fdivrl
inc
int3
in
ret
sub
ljmp
cmp
femms
daa
sbb
xor
js
and
shll
int3
xchg
ret
mov
nop
out
shll
lock
cmp
push
cmp
call
movsb
sbb
dec
loope
popa
push
or
stos
jmp
mov
icebp
scas
scas
cli
in
mov
and
mov
pop
lret
xchg
lea
jns
mov
push
inc
jns
or
dec
fdivs
pusha
hlt
call
inc
dec
loope
insb
es
loope
pop
sbb
push
pop
push
and
cmpsl
xchg
decl
add
lret
mov
sbb
and
fcomps
int3
push
xlat
jge
jecxz
fwait
popa
lahf
mov
sub
por
rcl
call
icebp
sbb
xor
cmp
xor
sub
dec
xor
push
xchg
fwait
mov
lds
mov
pop
add
loopne
sbb
in
sbb
test
inc
fisttpl
fiadds
mov
sub
mov
aas
pop
sbb
pop
rorb
call
fidivl
pop
sbb
jmp
sub
or
and
cltd
add
inc
pop
xor
mov
cmp
inc
add
cltd
popa
jle
mov
pusha
inc
adcl
cltd
sti
adc
xchg
inc
sbb
push
data16
mov
pop
cmp
scas
push
aaa
inc
mov
js
lock
ret
mov
movsb
mov
xor
xlat
jb
sbb
lods
rolb
je
je
int
mov
lcall
cmp
ret
jae
notb
cs
in
test
les
lods
jnp
jbe
out
bound
dec
mov
cmpsl
icebp
call
mov
std
mov
xchg
inc
push
loop
push
cmp
jp
mov
shrl
jae
mov
jae
jb,pn
cmc
xchg
add
add
cmp
rcrb
dec
cmp
push
adc
pop
fidivl
int3
aas
scas
pop
lock
pop
cmp
add
xchg
bound
dec
xchg
ss
or
push
push
shrl
adc
cmpsb
inc
jne
adc
sbb
testb
push
pop
std
adc
xchg
mov
jl
lahf
xchg
xchg
mov
mov
sti
dec
mov
lret
push
pop
and
xchg
fmul
loopne
inc
mov
dec
jl
pop
or
inc
std
out
ja
jae
mov
jp
push
push
mov
xor
leave
jb
pushl
jns
jmp
pushf
dec
into
hlt
js
ljmp
xchg
hlt
rcll
mov
xchg
js
nop
outsb
sub
xchg
inc
sub
test
mov
jnp
push
cmpsb
jp
movb
sbb
or
inc
repnz
out
rorl
mov
push
dec
fcmovnb
and
cmp
jmp
out
imul
lret
bound
mov
iret
adc
mov
jl
xor
inc
out
pop
sub
adc
jmp
gs
test
and
ljmp
pushf
pop
jg
sbb
rcll
mov
or
aas
repz
sbb
stos
cli
jae
jns
aaa
or
lock
orb
pop
ds
rorl
xor
int3
mov
jb
cmp
in
jmp
push
stos
in
jl
cmp
push
adc
stos
mov
stc
orl
push
xor
movsb
and
lock
aas
les
or
push
xchg
adc
dec
adc
out
sub
adc
in
add
rcll
xchg
mov
aaa
dec
xchg
scas
cmp
mov
jp
mull
mov
into
insl
enter
inc
cmp
adc
lcall
out
pop
and
dec
arpl
inc
out
xchg
xor
test
mov
shrl
cmp
cmpsl
sahf
adc
xor
or
mov
addr16
cmpl
ffreep
add
mov
push
addl
daa
push
push
icebp
and
xor
in
and
xchg
push
or
and
pusha
jecxz
dec
cmp
adc
dec
and
nop
pop
mov
rorb
cmc
arpl
gs
lahf
xchg
scas
stos
add
pop
push
push
movsl
fidivrl
movsbl
inc
or
push
add
jp
lcall
push
pop
xor
out
popa
mov
sbb
sbb
imul
or
mov
pop
add
xchg
mov
lds
mov
mov
pop
mov
push
pop
loope
jge
cmc
dec
out
xor
dec
ret
mov
lahf
mov
or
xchg
jb
mov
loope
popf
js
mov
and
and
mov
mov
inc
movsb
aas
es
mov
cmp
or
adc
pop
div
mov
fldt
and
pushf
pushf
ss
lock
out
or
mov
ret
dec
les
adc
mov
sbb
ss
leave
cmp
xor
mov
stc
leave
sti
lds
rorb
fisttpl
ror
fsubrl
mov
inc
xchg
add
out
lret
dec
add
or
jle
xor
in
in
add
in
loopne
mov
popa
inc
lods
dec
pop
lock
mov
das
sti
mov
push
fisubs
xchg
movsb
test
stc
jno
popf
int3
loope
cli
rol
push
into
hlt
ja
adc
jns
inc
or
adc
and
repnz
sbb
pop
add
jb
pop
push
fcomip
jns
push
bound
pop
adc
mov
ja
ljmp
push
mov
pop
cmc
lret
jecxz
jge
repz
ss
popa
fmul
loop
lahf
sub
ffreep
scas
popa
sbb
cld
mov
aas
mov
into
xchg
nop
xor
sub
hlt
popf
cwtl
cmp
mov
xchg
test
jp
wbinvd
inc
js
or
xchg
call
xchg
add
int3
loop
sti
fsubrs
cmpsl
fdivrl
bswap
sbb
sub
outsl
mov
int3
out
inc
loop
push
sbb
rol
sarb
pushf
out
xor
fbld
cmp
xchg
sub
dec
mov
cmp
shlb
dec
mov
sub
jmp
pop
rol
stos
pop
pinsrw
fs
add
mov
jno
mov
adc
imul
push
subb
mov
xlat
add
ljmp
pop
fisttpll
or
sbb
mov
loop
cltd
stc
pop
push
das
fldl2e
rcrb
imul
xor
test
xlat
push
xlat
jns
jb
mov
push
or
mov
int
jne
out
cmc
push
dec
iret
fisttpll
lret
mov
pop
fst
and
pop
sar
jb
js
sub
cld
roll
icebp
daa
cmp
adc
adc
popf
fneni(8087
jb
sbb
or
pop
imul
sahf
dec
insl
jmp
aam
and
or
lret
js
divl
xor
clc
xor
movsl
adc
popf
mov
xchg
mov
cs
into
or
bound
std
cmp
outsl
xor
pop
popf
pop
sti
addr16
enter
cltd
and
ret
jne
divl
enter
jbe
or
pop
outsb
pop
xchg
pop
mov
xor
xor
fadd
add
add
mov
xchg
xor
and
out
xor
xchg
mov
imul
jo
jecxz
adc
stc
jle
dec
lods
aam
mov
adc
fst
ret
jae
mov
loop
sub
dec
or
addb
xor
lea
popa
lret
dec
add
shrb
gs
push
je
jo
add
cmpb
cld
push
sbb
addb
cmp
jnp
loope
jp
in
insb
mov
add
lea
nop
xor
leave
int3
or
add
stos
jg
lcall
idivb
lods
enter
push
sti
cmp
lock
xchg
sub
imul
mov
sub
adc
pop
or
outsl
setl
rep
xchg
mov
ret
roll
xor
fwait
lods
sbb
adcb
fsubrp
mov
icebp
in
icebp
pop
es
pushf
pop
push
divl
push
out
loope
cs
in
cmp
lock
inc
pop
repz
repz
adc
stc
dec
mov
cmp
sbb
xchg
movl
push
cmpsl
add
sub
sbb
fnstcw
imul
pop
dec
or
iret
stos
mov
sub
mov
jl
out
lret
adc
push
push
sbb
outsb
jb
push
dec
push
adc
push
cmpb
lods
shlb
xchg
inc
cmp
cpuid
into
sarl
cld
rol
cmc
ret
pop
arpl
sti
sub
inc
mov
push
pop
jle
scas
int3
cltd
in
cmpsb
jno
leave
fnsave
jbe
jb
fcmove
xchg
dec
sti
cmpsb
push
add
loopne
les
push
pushf
repz
sub
and
mov
jne
xchg
ss
push
inc
lods
frstor
push
orb
in
jge
sub
ret
mov
pop
pop
nop
int
outsl
push
movl
ss
push
push
add
int
push
decl
scas
shll
mov
call
bound
push
gs
inc
rcll
inc
js
shll
sbb
loopne
pop
mov
mov
int3
and
mov
ret
hlt
sbb
xor
mov
and
addr16
cmpb
int
iret
dec
mov
call
es
jbe
xchg
sar
pop
out
stos
jbe
fstps
mov
pop
inc
jb
int3
push
lret
jl
sub
ss
sub
icebp
jge
jp
pop
enter
sub
push
inc
lea
jp
pop
mov
mov
and
dec
movsl
popf
and
fsubl
pop
test
jo
pop
gs
pop
push
lods
out
adc
sbb
data16
mov
in
imul
faddl
into
les
movsl
push
mov
push
xchg
div
jns
push
jb
jg
fisubl
jo
adc
dec
inc
xchg
sub
sub
subb
lret
push
test
bound
or
push
aad
int3
aad
push
pop
lea
stos
cmp
ljmp
fucomi
mov
sbb
mov
clc
outsb
test
cmpsl
repnz
mov
mov
push
mov
xor
fwait
rcrl
pusha
xchg
movsl
cld
push
xchg
cltd
mov
xchg
ljmp
cmp
mov
aaa
cmp
mov
sub
cmpsb
xchg
lock
pushf
add
and
stos
pop
lahf
pop
out
aas
in
adc
shlb
gs
mov
xchg
loope
pop
adc
in
push
scas
adc
or
popf
fxch
mov
xor
imul
into
outsb
call
fs
push
out
mov
dec
cld
jl
pop
jne
or
jle
shll
xchg
jp
push
pop
inc
iret
jbe
pushf
out
dec
clc
pop
xchg
popf
daa
adc
inc
int3
and
nop
test
js
popa
pop
int
jno
lea
mov
push
popf
or
roll
lret
data16
fidivl
sbb
add
ds
icebp
and
out
bound
call
mov
push
mov
mov
push
int3
adc
or
clc
test
scas
jb
movl
push
fistl
sahf
lods
cmpsb
ljmp
push
pop
leave
scas
in
push
push
arpl
mov
add
cmp
orl
adc
pop
iret
pop
bound
jne
and
nop
jmp
movsb
out
push
sti
shl
sbb
cmp
call
add
pop
cmp
dec
movsl
test
mov
inc
push
adc
out
jae
movsl
mov
sbb
loopne
sbbb
jne
mov
loop
push
cmp
sbbl
jp
push
lret
cwtl
dec
loope
inc
jg
je
add
cwtl
lcall
inc
push
scas
cmp
adc
xor
cltd
adc
loop
sub
cli
repz
arpl
mov
fldcw
cmpsl
push
inc
xor
out
cmpsl
xchg
ja
push
pop
or
sbb
mov
mov
shrb
out
fwait
adc
sti
aas
dec
int3
pusha
jo
mov
ss
pop
adc
or
cmp
or
mov
xchg
jecxz
out
dec
sub
lcall
or
and
stos
push
icebp
cmc
test
ds
jb
dec
cwtl
add
cld
xor
push
out
sub
nop
iret
adc
mov
push
popf
iret
testl
jg
xchg
sub
popa
fstpl
enter
pop
adc
sbb
outsb
fsubs
cmc
inc
mov
xchg
inc
dec
daa
pop
test
leave
mov
cwtl
pop
shll
push
xchg
mov
fs
inc
stos
ss
add
push
mov
xchg
push
imul
jb
in
vmwrite
aad
call
popf
adc
cmp
push
add
dec
lahf
scas
in
mov
jp
in
shlb
mov
or
adc
aas
divb
rcll
adc
xchg
mov
shlb
jg
popl
sub
pop
dec
lods
pusha
push
lock
dec
popf
add
jp
mov
ds
adc
es
scas
mov
test
push
shll
scas
repnz
in
cli
mulb
jle
daa
arpl
test
push
cld
fucomi
cmp
inc
insl
push
aaa
add
rcr
xchg
sbb
fldt
pushf
xchg
xchg
subl
movsl
push
jb
loopne
inc
push
xlat
and
mov
pushf
sub
test
movsb
mov
inc
dec
add
jo
mov
rolb
clc
add
stos
lods
sbbl
insb
les
jmp
fnsave
or
sbb
adc
sar
repz
insb
ret
or
pop
lret
pop
adc
sbb
int
loope
je
inc
jmp
xlat
sbb
adcl
in
inc
sub
jae
adc
enter
sub
dec
sub
mov
clc
mov
pop
cmpsl
push
loopne
aam
and
pop
xor
mov
inc
add
test
jno
fs
out
orb
dec
cltd
mov
sbb
repz
pop
pop
daa
or
test
mov
jp
inc
jne
setnp
pusha
mov
push
add
sbb
sbb
lock
add
lret
shrl
sub
mov
push
sub
jle
psubsw
fucomip
icebp
and
les
push
cmpsl
inc
ret
int
xchg
sti
adc
pop
in
dec
incl
shrl
push
popa
in
sar
and
add
pop
push
int
push
hlt
add
int3
or
dec
jmp
pop
and
mov
jecxz
push
sub
out
shl
dec
sbb
aas
sbb
jbe
mov
jb
inc
xor
sti
mov
push
das
repnz
and
mov
outsb
mov
scas
jg
xlat
xchg
dec
dec
pop
mov
pop
popa
pop
imul
xor
xchg
xchg
js
mov
jo
lahf
mov
dec
test
sbb
scas
stos
mov
or
subl
test
adc
mov
jne
sbb
daa
popa
div
pop
fmul
cli
push
bound
and
daa
fstps
mov
xor
xchg
fistps
ficomps
test
mov
or
fadds
mov
adc
repz
cmp
icebp
lea
mov
xor
mov
and
ja
out
push
dec
cmp
fisttps
imul
outsb
fwait
sbb
and
xchg
xchg
insl
shrb
xchg
jge
nop
xchg
push
shr
lds
mov
mov
xchg
add
lahf
out
jmp
fisubrl
pop
loop
push
mov
pop
sub
fdivrl
xor
ret
addb
outsb
fidivrs
inc
xchg
ljmp
push
lods
push
cmpl
xchg
or
loope
push
or
push
ret
das
scas
adc
mov
insl
push
test
and
mov
adc
stc
inc
xor
mov
out
std
and
or
cmp
add
dec
flds
fldl
enter
mov
stc
lods
cmp
dec
dec
movsb
sahf
ss
add
dec
and
sbb
mov
cltd
fimuls
xor
mov
jb
mov
aam
sub
cmc
ss
imull
jo
and
adc
jmp
mov
icebp
mov
sbb
arpl
rcrb
int
shl
shl
push
addr16
test
ss
lods
mov
mov
out
xor
and
into
lock
mov
push
pop
inc
add
lock
test
mov
imul
or
cltd
fcmovb
mov
mov
cmp
or
cs
add
push
cmp
test
pop
adc
adc
mov
ret
sbb
repz
fnstcw
sbb
mov
jno
mov
in
jns
xchg
cwtl
ret
mov
pop
imul
rcr
jo
sub
push
or
sbb
pushf
or
pop
repz
sub
in
mov
jl
mov
push
add
js
ret
neg
cmpsb
or
into
scas
fwait
test
int
andl
sub
or
rolb
daa
jp
xchg
in
push
jno
das
int3
cltd
and
imul
test
mov
lock
cmp
xchg
push
scas
scas
loope
mov
push
xor
sub
bound
arpl
mov
lret
sbbb
stos
fsubr
pop
scas
add
std
mov
movsb
xchg
sbb
outsl
xchg
add
shll
or
test
xchg
xchg
and
test
scas
mov
sti
pop
cmp
xor
pushf
ret
lds
and
jae
div
adc
or
xchg
cs
dec
xchg
and
sbb
inc
mov
pop
cld
mov
mov
xchg
push
jo
cli
test
ret
es
mov
arpl
loop
mov
xor
sbb
push
out
push
dec
mov
inc
dec
sbbb
sbb
enter
or
jbe
pop
adc
add
cmpsb
add
jle
pop
xchg
mov
popl
sub
call
test
call
fwait
xor
cwtl
mov
outsb
cmc
in
lret
xor
cmc
andb
mov
push
cmp
mov
xor
bnd
stos
and
iret
and
cmpsl
pop
fcmovbe
cmp
shll
roll
lret
or
xor
leave
nop
ljmp
add
xor
push
cli
movsb
cmp
and
lods
loopne
sub
aad
insb
arpl
and
push
outsl
add
push
bound
out
pushf
gs
fldl
sti
xadd
jne
add
push
xor
xor
ljmp
js
mov
movsb
mov
sub
push
fwait
es
xlat
sub
mov
pop
js
mov
mov
in
ret
cltd
loopne
add
xchg
xor
lret
mov
out
xor
dec
pop
xchg
adc
cmpsb
addr16
jp
jl
cmp
es
and
cld
ja
in
insb
mov
sbb
sub
push
push
push
push
std
test
jg
jnp
sbb
mov
xchg
int
mov
popa
in
es
inc
and
cli
inc
mov
sub
push
fldl
jbe
imulb
and
arpl
dec
push
mov
cltd
jg
mov
ljmp
imul
daa
mov
int3
movsl
out
xchg
xchg
pop
stc
negl
out
mov
inc
shlb
and
sub
push
cmpsl
je
and
xor
mov
or
push
sahf
out
das
insb
repnz
lock
add
mov
mov
fisubrs
mov
in
stos
shlb
rcll
add
xchg
mov
test
gs
pop
mov
jg
cmp
pushf
mov
movsb
shlb
xchg
cmp
sbb
cld
sbb
mov
sub
adc
rorl
mov
sub
fwait
inc
ljmp
bound
repnz
into
scas
clc
cmpsl
jmp
dec
push
pop
or
adc
sbb
icebp
push
sub
push
mov
mov
sub
mov
faddl
and
add
xor
iret
pushf
ds
and
dec
sbb
cmp
jl
ljmp
lods
popf
xchg
fucomp
pop
xor
pop
imul
sbb
sub
mov
lahf
jg
mov
mov
pushf
fildl
cmp
out
cmp
inc
mov
fcoms
xchg
rcrb
pop
add
push
adc
into
sub
aas
jmp
xor
push
push
int
pop
cld
add
rcrb
aas
pop
into
xchg
leave
sahf
xor
sbb
xchg
cmp
add
adc
lock
or
push
sbb
leave
mov
adc
inc
xchg
fisttpl
and
jnp
and
das
sti
outsb
je
orl
adc
shll
push
cmpsb
aam
test
sbb
sbbl
dec
fnstcw
outsb
add
xchg
in
mov
in
rcl
add
and
shlb
imul
mov
pop
ja
cs
loope
and
das
sub
add
adc
inc
sub
int
push
imul
lock
or
mov
addr16
into
rcll
adc
mov
stc
loop
movl
insb
or
pop
dec
shlb
lods
mov
loopne
popa
cmp
dec
cmp
push
ljmp
jo
sbb
sub
mov
pusha
test
xor
ja
mov
test
je
xor
mov
xchg
aaa
push
xor
xchg
dec
pop
pop
push
or
mov
dec
push
add
dec
mov
inc
jo
xor
aam
xor
inc
fwait
xchg
cmpsb
push
and
mov
cmpsb
add
push
ja
lea
xorb
in
leave
pusha
cwtl
icebp
mov
mov
add
rolb
and
das
dec
es
mov
scas
lret
lea
cltd
dec
fsts
jle
jp
inc
mov
mov
or
or
add
xchg
movb
or
mov
aad
inc
xor
cld
faddl
dec
adc
jae
shll
int3
and
or
mov
fiadds
push
xchg
pop
in
cmp
repnz
pop
cmpsb
push
repz
sbb
add
mov
in
loopne
xor
pop
imul
sbb
sbb
cmp
out
mov
aam
call
or
sarl
pop
notb
pushf
jg
or
xlat
aas
jecxz
jecxz
fcmovnb
add
and
in
pop
pusha
roll
outsb
lret
inc
mov
das
xor
xchg
push
adc
add
outsb
and
dec
pop
or
cmp
add
rorl
mov
aaa
ficoml
xor
jno
mov
or
sbb
ret
in
shll
xchg
shlb
fstl
xchg
leave
ficoml
stc
and
ss
inc
mov
aam
fistl
addr16
mov
ja
subb
dec
jno
mov
out
pop
ret
sti
cwtl
test
fnsave
std
jge
xor
sar
xlat
xchg
lods
iret
pushf
shll
imull
mov
outsl
lea
push
push
ja
xchg
xchg
jae
sub
jge
add
mov
pop
in
sahf
jo
or
data16
mov
mov
inc
test
sbb
arpl
mov
ret
push
mov
adc
jp
cld
mov
fadds
roll
xor
inc
in
call
cmpsb
sbb
cmpsl
dec
jbe
pop
jnp
int3
into
scas
xorb
out
dec
add
in
data16
sbb
gs
dec
int3
pop
mov
out
sub
cmc
test
jmp
clc
mov
cmp
gs
fstl
push
mov
jl
xorl
mov
xchg
nop
jge
adcb
sub
shlb
data16
mov
addr16
negl
outsb
test
push
sbb
cmp
loopne
cwtl
aas
loopne
dec
xlat
and
pop
fldl
inc
mov
inc
pop
lods
jmp
test
lds
mov
insl
and
andb
outsl
pop
mov
add
loope
inc
cltd
inc
nop
dec
imulb
fisttps
dec
popa
sub
xor
and
adc
inc
mov
adc
jmp
test
popf
push
ljmp
jle
sti
mov
mov
movsb
lds
and
mov
or
test
addr16
sub
into
jmp
testb
inc
mov
add
push
addr16
sbb
inc
xchg
sub
stc
std
pop
clc
loopne
sub
out
sbb
movsl
mov
nop
dec
jo
in
lret
cmpsb
jbe
fxch
cwtl
and
pusha
adc
mov
clc
push
adc
jo
sbbb
sbb
mov
dec
icebp
loop
dec
push
dec
mov
stos
loop
and
ret
fwait
push
test
jge
aad
cmp
dec
insb
out
mov
jnp
mov
xor
int
inc
imul
cmp
xor
cwtl
mov
sub
mov
in
sbb
inc
sbb
adc
sar
mov
xchg
popf
xor
and
add
int3
std
dec
mov
ss
jae
cmp
xchg
es
fldenv
lea
adc
and
shl
gs
je
push
lock
dec
sbbb
mov
add
or
clc
ja
lods
cmp
sahf
jl
mov
outsb
fdivp
add
xor
shrl
movsb
dec
jge
mov
jmp
cltd
xor
adc
test
jne
push
fsubrs
cmp
loopne
inc
adcl
add
pop
xor
fadds
pop
mov
stos
xchg
pop
stc
mov
mov
mov
popf
mov
xchg
mov
pop
or
pop
imul
pop
movsl
xor
pop
inc
dec
out
and
lock
cmp
outsl
sbb
mov
lret
add
dec
decl
hlt
adc
rol
dec
xchg
mov
ljmp
popf
rorb
cmp
xor
push
or
addl
add
pop
cli
nop
jb
mov
lods
test
mov
out
lods
pop
ljmp
add
jecxz
dec
std
lock
push
fstpl
fs
mov
jecxz
xor
or
add
jae
cmp
sbb
test
jae
mov
mov
lea
dec
scas
add
mov
outsb
das
sbb
sarb
mov
frstor
insb
popa
mov
ss
sbb
mov
mov
sub
das
pop
insb
leave
fsubl
sbb
out
mov
arpl
repnz
incl
ficoml
ljmp
sbb
dec
nop
xchg
out
lods
jmp
xor
aad
and
mov
or
cmpsb
pop
push
inc
shlb
dec
xor
xor
mov
push
lock
scas
cmpb
inc
inc
mov
mov
std
pushf
pop
mov
int3
push
cmp
lret
mov
mov
inc
mov
mov
or
add
ficompl
xchg
mov
dec
lock
imul
push
dec
add
mov
mov
test
por
mov
imul
cmp
imul
aam
mov
mov
fs
jecxz
mov
or
or
fs
sub
push
cmp
notl
xor
in
mov
pop
mov
jmp
cmp
sbb
fldenv
jge
scas
sbb
ret
xchg
je
shl
jecxz
shl
dec
bound
adc
loope
cmp
cmp
loopne
fmuls
fmuls
sbb
mov
imul
jecxz
and
mov
fs
pop
ret
adc
loopne
dec
clc
xor
je
adc
addr16
sub
jns
in
repz
pop
imul
adc
repnz
sbb
in
jae
sbb
adc
or
loop
push
rclb
les
je
das
jno
jp
fimull
rcll
popf
mov
lods
mov
sahf
xchg
mov
fistps
or
stos
mov
enter
in
rcr
pushf
in
jmp
xchg
cmp
push
sahf
aad
lods
loope
rol
mov
mov
and
aad
loopne
pop
push
popa
test
lahf
pushf
push
cmpsl
mov
and
fistl
xor
je
cld
repz
insl
lods
insb
hlt
push
je
mov
fstl
or
cmp
popf
jne
lods
adc
dec
bound
dec
fdivrl
and
cmc
jp
cli
jl
and
push
xlat
popa
into
and
jge
sub
mov
jmp
hlt
xor
insb
inc
inc
xor
pop
mov
or
adc
and
jecxz
dec
adc
scas
cmpsb
or
insl
jno
test
sti
mov
ljmp
or
jp
dec
jmp
push
dec
push
push
mov
out
adc
push
jecxz
and
call
fucomp
int3
mov
dec
jge
push
adc
int3
movsb
mov
lods
arpl
divl
aam
les
or
aam
aam
mov
dec
jmp
mov
fs
inc
cli
jge
sbb
sub
mov
add
ss
dec
in
imul
jo
xchg
inc
lcall
mov
test
pop
ffreep
and
cmpsb
mov
jmp
mov
inc
inc
push
or
sub
xor
jno
add
cltd
loopne
mov
and
test
mov
push
cmc
mov
stos
aad
aad
rcrl
int
xor
ret
jno
inc
add
test
int3
iret
jns
or
push
add
test
out
out
jbe
scas
lahf
shr
mov
lods
enter
ret
scas
stos
ja
ret
insb
dec
push
dec
xor
lea
sbb
pop
xchg
outsb
imul
mov
lock
dec
fwait
enter
lods
aam
pop
in
push
enter
jecxz
xchg
inc
mov
pop
add
popa
dec
xchg
push
push
and
movsb
idivb
imul
rcrb
js
xor
shlb
inc
addr16
ror
push
xchg
leave
aaa
mov
das
hlt
mov
movb
xor
or
adc
push
out
inc
in
sub
sbbb
call
data16
mov
jg
pop
addr16
iret
or
and
loop
nop
stos
xchg
fcom
data16
dec
or
jmp
push
inc
sub
push
push
bound
jge
mov
and
ja
mov
lds
enter
repnz
lahf
stos
imull
rcr
and
lods
push
scas
mov
stc
or
insl
andl
or
call
jge
jge
lods
outsl
push
adc
dec
pop
push
stos
xor
das
ljmp
jnp
inc
xchg
les
pushf
sub
movsb
mov
mov
xchg
jbe
jg
jnp
sub
inc
lahf
inc
pop
and
fsts
jge
mov
cli
and
lret
leave
aam
addr16
mov
xchg
dec
test
push
and
into
cmp
or
adc
and
dec
sub
int
loopne
aas
xchg
jmp
clc
fwait
repz
and
inc
aad
jl
fs
xchg
mov
cltd
pop
sub
pop
cmp
icebp
scas
mov
pop
add
sbb
daa
inc
stos
pop
popl
or
daa
and
sbb
sub
xor
cli
dec
sbb
daa
dec
and
mov
bound
in
sbb
dec
xchg
xor
insl
cmc
andb
sbb
cld
ljmp
cmp
or
dec
sbb
push
shlb
ror
sbb
addl
lahf
pop
xchg
mov
xchg
jmp
jp
push
sarl
addr16
xor
int3
xor
xchg
fucomp
dec
ret
lcall
sub
je
ljmp
push
fs
sub
dec
push
jbe
subl
mov
adc
ficoml
popf
cld
ficomps
add
push
popl
adc
sbb
ret
jle
dec
mov
cmpsl
dec
pop
cmpsl
std
ret
mov
pop
add
inc
sub
shlb
movsl
mov
xor
les
stc
mov
inc
cmp
sbb
cmp
pop
cmp
jnp
imul
fdivrl
push
sub
int3
pop
ljmp
fsubrp
incb
or
push
in
sti
cld
jp
inc
or
mov
add
mov
mov
gs
xchg
lret
sub
xor
sub
inc
xchg
fs
rcrb
scas
scas
cwtl
aam
pushf
xchg
ret
cwtl
fimull
or
nop
xchg
movsl
xchg
addr16
xchg
hlt
mov
inc
push
adc
test
fisttps
inc
fneni(8087
cwtl
sbb
in
pop
sub
jl
adc
in
jecxz
xor
cmp
add
jno
sub
imul
add
cmc
add
mov
or
cmp
bnd
daa
mov
push
cmpsb
mov
mov
inc
mull
pop
and
jmp
fwait
mov
jp
pop
add
push
decl
mov
jmp
bound
lcall
fisubl
mov
scas
lds
mov
fsubrl
mov
mov
push
pop
inc
jmp
jbe
inc
xor
adc
inc
ret
imul
adc
lret
mov
int
ss
jl
add
fstps
xchg
adc
xchg
pop
pop
out
adc
xchg
nop
pop
pop
loope
enter
dec
cmp
xchg
mov
inc
in
cmpsb
les
fbstp
inc
jb
lds
inc
push
xor
add
and
lods
fadds
cs
cmp
insb
inc
push
adc
xlat
pusha
pop
adc
mov
dec
movsb
dec
inc
adc
into
sub
cmpl
sahf
pop
mov
frstor
xchg
jnp
add
je
out
xorl
mov
xchg
sbb
int
mov
push
hlt
cmpsb
sub
push
stos
xor
int
int
push
bound
stc
cld
xchg
push
sar
scas
sub
jbe
push
mov
add
test
mov
in
mov
pop
pushf
cli
cld
add
jae
out
daa
adc
lea
aaa
xchg
jle
push
inc
fdivrl
sub
mov
cwtl
adc
fldenv
insb
or
sbb
sti
xchg
cs
push
cmp
pusha
repnz
sar
push
jno
lcall
jo
jecxz
sbb
pop
mov
or
jmp
repz
xor
xchg
int
dec
sti
mov
xchg
jp
gs
mov
xor
lret
push
lds
aad
jecxz
leave
adc
mov
jecxz
lahf
push
pop
popf
add
cmc
xchg
int
sub
pop
pop
adc
and
push
jecxz
xchg
mov
sti
sub
into
mov
pop
mov
xor
enter
mov
lret
xchg
jmp
jb
xchg
push
and
mov
dec
jnp
sarb
ret
ja
cld
adc
sbb
mov
mov
jne
and
cld
xor
push
out
sbb
add
add
outsl
pop
popa
sete
sbb
std
push
aam
mov
ljmp
fisttpl
inc
pop
in
and
push
sar
loop
aas
loopne
add
inc
ret
jo
shr
add
out
push
mov
inc
mov
push
and
stos
loop
movsl
and
movsl
rol
sub
je
jno
icebp
lods
repnz
stc
mov
test
or
inc
dec
sbb
ret
push
dec
mov
sub
aad
loopne
push
leave
lods
add
scas
test
fadd
mov
out
es
pushf
jae
sbb
test
jns
xchg
jno
mov
popa
sahf
ljmp
aad
mov
dec
cmpl
lods
insl
mov
pop
mov
or
iret
xorb
add
das
cltd
ret
fstl
sti
loopne
mov
shrb
dec
pop
push
jne
cmpsb
aaa
push
add
mov
fmulp
or
and
sub
imul
cmp
and
mov
push
das
iret
mov
shrl
cmc
ret
out
mov
scas
test
xchg
insb
push
or
sbb
pusha
cmp
mov
insb
xor
cmpl
push
mov
or
shll
cmpsb
sbb
mov
pop
pop
cmp
aad
sbb
imul
mov
mov
fs
mov
les
in
imul
movsl
jne
or
push
das
scas
mov
ret
fisubrs
add
fidivrs
add
imul
xchg
sub
out
mov
sbb
sarb
int3
aam
lock
mov
popa
and
repz
inc
stos
ja
ss
adc
mov
xchg
sbb
call
ss
iret
jmp
in
addr16
test
jbe
mov
mov
add
dec
repnz
popa
cli
dec
fisttps
in
in
pop
das
lcall
out
cmp
imul
jae
bound
or
jmp
mov
test
sub
lcall
dec
gs
stc
mov
mov
std
sbb
ss
mov
jge
movsb
test
clc
lods
stc
xchg
push
gs
cltd
adc
into
xor
test
xor
fsubr
ljmp
aas
mov
or
repnz
data16
adc
icebp
into
insl
push
lea
nop
mov
add
xlat
jle
add
jnp
jb
dec
cli
ret
sub
dec
and
or
jle
dec
mov
sarb
xchg
mov
inc
mov
xchg
out
adc
adc
ja
mov
mov
test
and
mov
mov
inc
les
or
ficoml
adc
in
fwait
in
mov
dec
sarb
aas
dec
cmp
jle
add
and
mov
add
pop
jle
fdivr
inc
filds
aaa
out
ljmp
sbb
inc
sbb
xor
push
xor
pop
add
push
mov
and
cmp
adc
add
add
mov
inc
adc
hlt
and
addr16
ss
mov
jo
sbb
divb
test
mov
sub
inc
gs
and
lods
sbb
in
dec
mov
inc
add
imul
sub
sbb
insl
pop
dec
cltd
xchg
dec
pop
push
push
sbb
lret
loopne
or
pop
lcall
mov
mov
cld
xchg
xor
bound
clc
ret
jbe
mov
xchg
xchg
mov
or
pop
xor
ret
push
sub
or
dec
cmpsb
test
push
cs
fisubrs
cmp
and
inc
adc
hlt
cmp
mov
lret
movsb
lret
cmp
add
fwait
mov
je
fisubs
clc
fisttps
lret
add
xor
push
ret
lea
xor
icebp
cmp
dec
sub
ljmp
push
aad
jl
das
cmp
ret
mov
xor
movsl
xlat
mov
mov
testb
mov
jmp
pop
pop
neg
lock
jl
push
jp
cmpsb
das
lds
lds
mov
lea
mov
lret
mov
jmp
xchg
mov
sarb
movq
cld
xchg
inc
jmp
cmp
cmc
mov
dec
inc
pop
dec
and
inc
jnp
push
mov
inc
je
adc
xchg
or
scas
and
pop
ljmp
mov
imul
js
imul
aas
les
aad
or
test
cmp
dec
and
mov
fldt
jo
js
stc
push
mov
mov
jge
add
xchg
imul
adc
dec
repnz
mov
pop
lds
add
outsl
xchg
lock
cwtl
cmp
jg
mov
sub
pusha
mov
subb
jp
pop
dec
push
push
add
out
iret
imul
sbb
and
sbbb
fidivrs
inc
fbstp
mov
sub
ret
aad
jo
adc
jo
scas
push
repz
sbb
ret
mov
push
rol
les
jb
push
jb
sub
jge
stos
dec
adc
jl
jg
add
xor
mov
lret
mov
and
mov
imul
aad
pop
mov
imul
adc
push
xor
decb
add
outsb
fwait
movsb
sub
xor
inc
cmpsl
std
cwtl
or
jae
dec
scas
icebp
inc
in
loopne
xchg
push
loope
dec
sub
ljmp
mov
fwait
xorb
in
scas
aad
dec
jb
mov
fwait
or
inc
fldenv
imul
cmpb
xchg
imul
xor
inc
mov
add
mov
xchg
jb
mov
repz
cmp
pop
into
rorb
iret
xchg
mov
in
data16
shr
dec
pop
push
test
add
daa
dec
roll
sbb
jnp
fimuls
sub
pushl
test
jb
xor
stos
adc
sbb
jmp
pusha
adc
movsb
cmp
test
jne
ret
fidivrs
and
imul
fildll
jle
out
cmpb
jb
cld
in
sbb
hlt
pop
lods
testl
dec
scas
pusha
push
dec
les
out
mov
loop
out
test
test
out
inc
cmp
mov
in
mov
call
repz
mov
ret
into
ja
mov
sbb
test
pop
sub
rcll
aas
and
sbb
cmpsl
les
add
jno
and
mov
rorb
sub
movsb
icebp
mov
cli
pushl
jnp
push
mov
stos
imul
arpl
imul
loope
xchg
and
int
sbb
xchg
mov
pushf
fldenv
or
sahf
out
imul
dec
add
aam
dec
mov
out
inc
icebp
dec
ja
xchg
sbb
sar
sbb
in
test
call
das
xchg
and
out
cmpsl
mov
movsb
fwait
mov
adc
mov
inc
xor
xor
jg
stos
push
imul
cltd
dec
dec
mov
lock
sbb
movsl
inc
leave
or
push
stos
mov
xchg
mov
in
mov
sub
in
out
pop
loopne
adcb
jge
xor
mov
sub
or
dec
ljmp
xor
xor
dec
mov
mov
shrl
dec
add
inc
lea
fcoml
pop
stos
movsl
inc
mov
loopne
test
mov
enter
add
test
lcall
loope
push
stos
add
shrb
call
mov
or
inc
jno
cwtl
and
notl
fs
and
rclb
fsubrs
stc
push
sbb
sub
addl
fisubs
popf
pop
adc
fisubrs
test
push
mov
ror
dec
cld
loopne
dec
or
fdivrl
pop
int
in
out
sbb
loop
mov
popf
nop
fs
ljmp
inc
sub
mov
push
mov
gs
aam
or
in
sbb
loopne
push
test
jle
andl
loopne
pop
scas
aas
mov
or
iret
push
bound
add
out
sti
push
mov
out
pop
bound
add
fcompl
dec
outsl
sbb
mov
insl
mov
and
mov
sbb
jb
daa
push
cmp
dec
xor
pushf
pushf
ret
in
jnp
insb
loope
sbb
outsb
jmp
scas
leave
fwait
xlat
mov
jg
int
and
fstpl
movsl
xorl
or
xor
std
in
inc
shr
push
sbb
addr16
and
sub
in
jb
sub
mov
pop
or
mov
xchg
mov
hlt
cmp
inc
pop
mov
cmp
add
push
ss
out
test
jmp
decl
xor
popa
mov
mov
sub
loope
inc
mov
mov
jae
leave
nop
movsb
insb
adc
popa
or
cs
scas
mov
mov
testb
xlat
shrl
pusha
hlt
icebp
and
jmp
mov
mov
jbe
push
jmp
mov
mov
sub
mov
arpl
xor
mov
addl
xchg
out
mov
adc
in
ja
push
xorb
xor
rorl
inc
jns
sub
icebp
stc
in
push
ficoms
lret
lock
out
sarb
enter
std
gs
cmp
cmp
cmc
ja
imulb
mov
loopne
clc
mov
lds
cmp
mov
lret
fldcw
or
jmp
orl
jecxz
and
fidivrs
shlb
xchg
jne
lods
jo
sub
test
mov
cmp
pusha
iret
jp
iret
shl
mov
adc
mulb
mov
sbb
push
fnstenv
aam
xor
cmp
lea
push
pop
inc
fs
or
add
inc
rcrl
xchg
inc
adc
add
outsb
in
es
sub
loope
es
sub
jg
sub
cmc
mov
movsb
mov
mov
repnz
jns
pushf
add
sti
nop
inc
loopne
mov
dec
decl
inc
pushf
mov
std
adc
mov
scas
mulb
out
loope
xchg
lods
push
ds
xor
popf
push
mov
sbb
dec
push
mov
push
xchg
call
dec
lahf
shlb
xchg
out
and
sub
stc
js
mov
mov
bound
pop
test
push
loope
out
popf
loope
mov
gs
shll
adc
in
add
repnz
inc
xor
xchg
lahf
mov
out
cmpsb
jg
and
sar
mov
clc
dec
mov
xchg
jge
xchg
dec
xor
mov
and
ljmp
fwait
xor
stc
and
mov
bound
fimuls
lods
aas
cmp
mov
pop
mov
dec
dec
imul
add
adc
add
aad
andl
call
sbb
pushf
or
frstor
sbb
aaa
rcrb
or
fucomip
sub
sbb
je
cld
dec
pushf
push
lds
push
push
repz
sahf
sub
loopne
in
mov
mov
leave
lods
push
scas
push
xor
cs
mov
mov
add
push
xor
mov
mulb
cmp
addr16
lods
repz
icebp
ja
test
inc
push
xchg
test
or
mov
and
sub
and
andb
icebp
push
xor
out
adc
ds
js
or
push
adc
and
pop
test
cltd
shlb
cmp
mov
xchg
test
loop
and
add
call
pop
outsl
jle
cmp
mov
mull
mov
dec
and
sbb
inc
loopne
mov
or
rolb
stc
inc
push
mov
mov
jae
jmp
test
pop
push
sbbl
mov
fisubrl
jmp
sbb
sub
jge
xor
dec
andl
cli
leave
and
scas
inc
das
xlat
sub
pop
adc
notl
movsl
rcl
test
sti
xchg
push
cmp
adc
ljmp
inc
inc
xor
and
popa
xor
fisubl
rcrb
stc
lock
push
cld
popa
sub
or
jae
xchg
shrl
adc
aam
cs
ljmp
leave
ret
sbb
call
lock
jg
and
jbe
lods
lahf
mov
push
jg
popf
cmpsl
lahf
pop
mov
inc
or
out
cmpsb
or
ljmp
cld
ljmp
mov
mov
adc
add
inc
or
lea
mov
dec
mov
mov
pop
jbe
inc
or
or
lods
sbb
add
inc
scas
or
jno
in
adc
mov
fistps
sub
in
std
aaa
mov
mov
cli
fxch
rorb
jmp
push
xchg
ds
inc
add
mov
das
jle
inc
imul
mov
push
movsl
inc
arpl
mov
hlt
ja
inc
pop
fucompp
pop
daa
clc
addb
cmp
popa
outsl
in
mov
ficompl
mov
dec
or
jp
jno
test
sbb
add
js
jl
fnstcw
inc
mov
xor
loop
pusha
sub
aad
sub
clc
das
out
or
ds
fxch
xchg
test
lcall
xchg
fidivl
sbb
test
mov
into
jne
mov
aam
rcl
mov
shlb
mov
cmpsl
les
dec
in
dec
pop
movsl
pusha
test
push
subl
xchg
out
add
jb
cmp
jmp
pop
adc
xchg
jb
pop
adc
jg
and
pop
mov
inc
sbb
in
xorl
bound
push
mov
rcrb
add
sbb
std
das
push
jns
dec
jecxz
pop
sahf
cmpsb
or
and
nop
lods
xor
dec
lock
inc
add
test
cwtl
nop
sbb
inc
cwtl
lods
mov
adc
es
lret
pop
ret
xorb
pop
add
pop
fcmovb
clc
out
cmp
mov
sahf
repz
in
xchg
cmpsb
leave
add
mov
sub
adc
stos
in
popf
out
mov
cmp
dec
pop
dec
ss
sub
push
mov
mov
inc
ret
mov
mov
push
add
dec
adc
push
lods
ja
fisubl
push
dec
or
lods
and
jns
inc
je
ret
pop
dec
push
xor
dec
mov
mov
movsl
pop
lahf
add
push
pushf
mov
outsb
mov
cmpsb
jge
loope
in
pop
insb
inc
sti
mov
js
mov
xchg
es
xchg
jmp
loope
pop
mov
push
push
xchg
mov
stc
jno
mov
out
ljmp
sbb
cmp
fnsave
adc
fnstenv
sub
rsqrtps
pop
aam
xchg
andl
mov
fcoms
push
mov
das
jnp
nop
pop
pushf
bound
lds
lods
scas
jo
mov
les
inc
imul
rcrl
fcmovbe
aad
inc
mov
or
shrb
cmp
sahf
adc
das
jl
rcrb
dec
pop
adc
repnz
jp
les
fs
dec
xorb
sbb
in
inc
xchg
or
aaa
fs
fistl
add
hlt
pop
xchg
repnz
xchg
pop
jmp
xchg
pop
aad
push
xor
lret
fs
or
inc
jae
push
cmc
cmc
sub
out
mov
sub
or
pop
jae
aas
fcmovnbe
cwtl
test
cmp
ret
dec
lods
xchg
test
pop
jmp
mov
lods
dec
or
add
xlat
in
outsb
imul
dec
jne
push
ret
test
jbe
fwait
adc
inc
jl
or
and
out
mov
jl
daa
cltd
sub
addl
cld
sbb
stos
sub
pusha
pop
xchg
lret
lcall
pop
push
sahf
stos
fcompl
outsb
cmp
mov
rclb
leave
push
sub
inc
add
jns
std
cwtl
mov
jo
jno
ss
lret
sbb
jb
fdivs
insb
mov
push
dec
outsl
in
xor
test
jmp
sahf
es
nop
data16
push
ljmp
push
jno
add
loope
mov
mov
rcr
jmp
in
imul
add
jb
movsb
sub
pop
sbb
sub
jns
xchg
dec
pop
inc
pop
sbbb
xlat
stc
std
mov
cmp
aas
mov
sub
lcall
pop
mov
shll
fs
out
in
dec
test
adc
or
sbb
clc
add
out
lret
sbb
shlb
dec
ja
cs
decl
lods
std
sub
int3
or
pop
and
push
aam
xor
lods
mov
sub
add
lock
sti
scas
cwtl
jg
jno
repz
and
sub
pop
fdivr
xchg
push
cmp
test
aad
test
arpl
sbb
xchg
sbb
cmp
test
jmp
aad
loopne
mov
xlat
mov
insb
loopne
adc
das
xlat
or
fwait
mov
sbb
cltd
mov
stos
push
nop
push
sbb
sub
inc
or
sub
sbb
cs
xlat
ret
and
in
inc
jns
and
sti
fdivs
pop
xchg
insb
inc
jle
push
adc
out
scas
pop
out
out
pop
inc
rcl
lock
and
clc
or
inc
out
jns
dec
mov
mov
pushf
jmp
dec
and
adc
fldl
inc
xchg
sbb
xchg
jmp
sbb
cli
pop
push
movsb
push
bound
cld
xchg
xor
xchg
stos
sub
sub
mov
aas
imul
dec
cmc
or
lods
mov
inc
mov
dec
pop
pop
mov
call
imul
loop
mov
mov
shll
insb
in
dec
cmp
into
cmp
leave
xlat
xchg
daa
call
in
js
sub
xor
pop
gs
xchg
mov
ds
cmp
jnp
stos
xor
pop
push
xor
loopne
lods
and
rcl
sbb
mov
mov
push
or
insb
push
mov
in
imul
ret
cmp
outsb
cmp
xchg
sbb
fsubl
leave
insb
or
insb
popa
cld
jb
cltd
pop
rorb
test
cltd
push
jno
xchg
mov
test
adc
cmp
jae
xchg
xorb
mov
cmc
movq
lret
jno
das
mov
pop
and
rol
shlb
enter
mov
dec
in
sbbb
rorl
arpl
pop
add
jo
daa
mov
add
xchg
inc
lods
sbb
iret
mov
mov
cmp
and
mov
jo
xchg
mov
shrl
sub
fdiv
dec
bound
sub
jl
mov
push
push
cmp
pop
dec
popa
popl
rcrb
pop
pop
repnz
xchg
push
jno
fnstsw
dec
in
jp
fistps
push
mov
iret
outsb
and
jle
jl
sub
orb
loope
dec
nop
push
and
push
arpl
adc
das
add
icebp
sbb
test
addr16
icebp
into
mov
or
cmp
push
or
xchg
push
xchg
push
fisubrl
mov
adc
mov
inc
and
je
clc
movsb
jmp
mov
test
cmp
and
and
mov
pop
push
jle
pcmpeqb
adc
aas
testb
xor
and
mov
sarl
jmp
out
inc
adc
xchg
pop
adc
je
pop
adc
ret
mov
mov
mov
sbb
neg
loopne
out
or
jg
pop
adc
loope
mov
sarb
cltd
mov
loope
or
iret
shlb
pop
adc
push
jg
cmp
pop
out
or
push
out
sbb
push
mov
out
xchg
sbb
mov
dec
inc
cmc
test
pop
jl
xchg
lds
pop
shrb
cltd
pop
add
pusha
dec
inc
mov
cli
sub
or
lock
jge
add
lahf
inc
psrlw
dec
bound
cmp
fisubrs
pusha
mov
addr16
xchg
mov
mov
das
fimuls
mov
inc
nop
ds
mov
ret
xlat
and
bound
stc
repz
jne
fistl
daa
adc
lret
imul
movsb
daa
inc
test
sub
ret
addb
stc
inc
in
pop
push
and
push
push
pop
sub
xchg
fnstcw
das
push
push
into
mov
mov
fwait
mov
loopne
and
mov
aaa
sub
push
add
jle
rclb
lahf
scas
lea
push
sbb
sbb
out
or
fisubs
insb
push
lret
xor
mov
cmc
test
cs
and
imul
out
sbb
scas
pop
insb
xor
imul
xor
icebp
sysexit
jmp
aaa
fstpt
push
cli
stos
inc
mov
lahf
in
insb
inc
test
dec
sbb
in
stos
imul
frstor
dec
jp
dec
and
testl
cmp
lds
add
insb
push
cmp
les
int
ret
or
pop
jns
test
ret
gs
popa
in
push
sbb
leave
dec
mov
into
pop
filds
rorb
pop
jp
mov
pop
mov
sarl
ja
lods
or
mov
cmpsl
inc
mov
jno
outsl
mov
pop
pop
and
push
cli
movsb
pop
out
add
enter
shll
jle
jmp
sub
cmp
inc
ror
push
imul
aaa
jp
insb
mov
mov
cltd
dec
into
xchg
aaa
dec
xchg
mov
call
in
xlat
fstl
inc
and
pop
fcomi
and
add
icebp
movsb
and
cmp
loop
add
pop
stos
and
in
mov
cmpl
nop
mov
jnp
adc
in
inc
movsl
or
inc
and
sbb
lret
aad
movsb
jo
mov
out
inc
ror
jns
xchg
movsb
xchg
aas
js
jae
mov
into
notb
mov
inc
in
clc
mov
ljmp
mov
sub
pop
and
xlat
in
in
pop
adc
xor
sbb
push
push
push
jge
scas
cmp
add
subl
lock
lret
xchg
push
xor
push
loopne
pop
daa
daa
in
fiadds
outsb
sbb
mov
inc
cltd
add
outsl
fld
pusha
dec
daa
or
adc
xlat
lahf
sbb
push
add
jp
in
fwait
dec
mov
dec
sbb
mov
add
add
mov
xor
aad
stos
and
fwait
fs
push
pop
pusha
hlt
test
arpl
or
xchg
or
cmpxchg
push
push
daa
out
xlat
icebp
fs
jno
jp
jge
mov
mov
dec
adc
insb
cmpsb
jge
fwait
int
scas
ss
or
dec
movsb
mov
imul
xorl
mov
push
nop
push
or
insb
adc
jmp
jb
xchg
cli
cmp
jmp
lock
ret
xchg
dec
pop
xchg
adcl
push
jl
sbb
mov
cmpsl
add
mov
xor
mov
or
inc
sbb
sbb
pop
icebp
repnz
scas
lods
or
jne
sbbl
testb
std
cmp
inc
std
add
adc
cmp
ret
addl
and
mov
lds
xor
pop
int3
mov
nop
adc
sub
pop
mov
xchg
shrl
xchg
loope
add
add
inc
mov
xchg
add
movl
fs
pop
shll
mov
out
sbb
leave
xchg
jbe
push
inc
or
xchg
mov
lea
ficoml
negl
in
clc
or
jo
mov
in
outsb
add
js
cli
xor
fs
cwtl
popa
fwait
xor
or
mov
push
cmp
movsb
xor
decb
xchg
in
mov
fcoml
pop
jmp
cmp
das
push
outsl
mov
xchg
pop
mov
inc
xchg
xor
subl
cld
or
add
in
aaa
aas
mov
fs
cmp
cmp
out
sub
pop
jmp
add
and
mov
and
je
add
incl
mov
call
ja
cmp
in
xchg
or
cmc
ret
push
pop
xchg
in
dec
pop
mov
stos
cmp
and
xchg
lret
loope
loop
sbb
mov
push
jbe
mov
adc
and
mov
test
dec
cmp
inc
clc
cmc
imul
inc
fs
dec
push
pop
pop
js
add
adc
es
jl
jecxz
ds
mov
insb
pop
mov
jbe
or
jl
loope
mov
or
dec
dec
paddd
push
les
rorl
dec
xor
adc
xchg
xchg
sub
mov
fdiv
push
repz
in
repz
adc
and
xor
enter
pop
and
js
add
cs
mov
jl
dec
cmp
push
pop
mov
call
mov
adc
push
pop
test
or
mov
pop
push
jecxz
clc
enter
gs
sub
shlb
mov
dec
lea
xor
outsl
lret
clc
sbb
xor
and
pusha
inc
adc
pop
xchg
inc
jnp
inc
mov
jge
inc
inc
repz
inc
js
add
pushf
add
push
adcb
iret
repz
mov
and
mov
testl
cmp
xchg
lea
mov
mov
loopne
xchg
push
xchg
sbb
mov
or
pop
lahf
jno
cmp
daa
notl
jmp
das
lds
add
testl
inc
into
sbb
ret
out
pop
arpl
popf
adc
or
repnz
push
xor
scas
js
xor
fs
push
cmpsb
mov
in
push
pop
mov
decb
push
xchg
push
push
loopne
es
addb
icebp
insb
xor
and
mov
xchg
incb
mov
and
add
sub
movsl
pop
xor
sbb
outsb
je
in
clc
or
fadds
int
inc
fisubrs
popf
fs
pop
xor
repnz
jnp
cmp
push
sub
xor
inc
cwtl
ret
and
xchg
inc
daa
rolb
and
lret
mov
mov
testb
out
mov
and
adc
pop
pop
cmp
inc
aad
scas
outsl
mov
idivl
ret
imul
bound
jp
aas
imul
push
xchg
or
push
or
call
cs
or
int
xchg
notb
or
sti
push
sub
jne
cmp
push
sahf
test
jmp
xchg
ljmp
mov
sbbl
push
xor
mov
pop
ret
mov
jmp
xchg
into
loopne
out
or
es
inc
jns
jmp
dec
pop
cmp
in
and
testl
fs
hlt
fsubrl
or
movsl
testl
sub
cmp
mov
dec
adc
cmp
xor
and
mov
lea
mov
hlt
lcall
xchg
push
lods
pop
pop
sbb
rol
xlat
sub
mov
pop
filds
inc
lcall
lahf
mov
push
aam
push
addr16
dec
dec
pop
test
enter
mov
cld
jne
test
mov
xchg
or
push
cmp
mov
mov
int3
popa
aaa
dec
cld
lcall
nop
loope
adc
clc
int3
mov
in
and
adc
je
fs
mov
cmp
stc
fisubrs
out
andl
or
enter
xchg
rol
mov
sbb
mov
jecxz
ret
xchg
ret
shlb
testb
imull
insl
jl
ds
les
out
inc
popf
lock
sti
push
clc
jo
sahf
rcr
rorb
cmp
add
test
das
mov
cmp
mov
test
iret
hlt
mov
mov
cli
pop
sub
sbb
mov
clc
loop
cmp
mov
xchg
in
dec
jmp
cmp
mov
cmp
insl
add
stos
ja
pop
push
ljmp
cld
mov
add
pop
pop
push
sub
lea
pop
add
jns
bound
sbb
ds
mov
or
jecxz
test
mov
and
mov
pop
pop
scas
in
loopne
pop
and
test
mov
cmp
movsb
scas
and
clc
stc
push
adc
jp
jle
out
cmp
jmp
imul
inc
pop
lret
sub
push
mov
gs
xor
fs
pop
enter
push
shlb
sub
add
mov
setle
xor
pop
fucomi
outsb
cmpsl
je
sbb
xchg
pushw
leave
jmp
xchg
enter
push
inc
pop
leave
daa
mov
inc
fidivs
or
aad
push
xchg
cmp
ret
repz
sbb
clc
repz
sbb
xchg
push
push
pushf
jecxz
add
in
inc
out
subb
mov
jne
sbb
jnp
cmp
push
scas
leave
inc
pop
aam
sbb
mov
cmpsl
out
pop
jb
movsl
or
dec
andl
out
xorl
mov
stos
mov
aas
dec
mov
jb
imul
xor
or
imul
leave
add
popf
cmpsb
mov
divl
movsb
pop
jo
icebp
inc
mov
mov
shl
jge
jne
rorb
push
xchg
inc
lahf
aaa
stc
mov
ljmp
ja
push
ljmp
fdivrl
test
mov
cmpsb
xchg
xchg
inc
enter
div
adc
repz
inc
mov
xor
out
in
and
cmp
and
scas
xchg
popf
shll
and
dec
into
int3
sahf
cmc
xor
cmp
test
mov
adc
sbb
insl
jb
xchg
loop
shrb
xchg
mov
push
mov
mov
ds
dec
icebp
lcall
fwait
mov
popa
ss
aam
inc
stos
mov
mov
imul
loopne
jp
cmpsl
inc
add
push
stos
jmp
adc
jo
ss
mov
aaa
aad
sti
inc
xchg
fistpl
sbb
dec
push
arpl
adc
adc
out
js
push
data16
loopne
xchg
icebp
lds
daa
imull
out
and
leave
insl
add
stc
out
xchg
and
fidivrl
stc
lock
sbb
imul
jno
and
jb
sbb
jmp
mov
or
mov
push
or
pop
push
or
and
jnp
subl
cmpsl
mov
fwait
cmpsl
sbb
pusha
xchg
sbb
dec
or
add
sbb
dec
mov
xchg
inc
out
jo
fisttpl
movsb
jno
push
ja
faddl
aaa
pusha
idivb
pop
fwait
pop
mov
push
and
pop
xor
jecxz
pushf
jl
aas
imul
add
ljmp
pop
add
push
add
leave
jge
fistpl
and
xchg
cmpsl
xor
movsb
sbb
pop
push
dec
jns
popf
push
popa
testb
inc
pop
fidivl
sbb
inc
mov
aaa
mov
fcmovb
loopne
movsb
outsl
mov
bound
jl
push
idivb
mov
and
adc
pusha
jae
sub
cmp
je
pop
mov
xlat
dec
mov
cs
enter
jmp
pop
push
stc
aas
xlat
cli
or
shll
notl
icebp
adc
or
lret
inc
jmp
push
icebp
arpl
or
push
sub
dec
push
or
xchg
lods
xor
loopne
jmp
mov
mov
xchg
inc
mov
je
inc
cmpsl
mov
mov
aad
cwtl
mov
and
mov
cld
dec
adc
push
jns
es
xor
divl
mov
jns
cwtl
mov
bound
xchg
cld
dec
fcoml
sar
inc
and
je
imul
iret
fildl
repz
fdivr
mov
cmp
pop
enter
outsl
movsb
stos
hlt
mov
xor
add
jns
xor
adcb
movsl
mov
stos
int
xor
sub
aas
cmp
mov
inc
dec
cmp
sahf
call
adc
hlt
xor
shll
pop
rcl
lods
out
add
in
mov
and
sahf
dec
cmpsb
movl
mov
dec
cmp
push
lret
jp
jae
clc
adc
dec
in
sub
mov
pop
xchg
lret
mov
fwait
mull
or
les
fmul
aad
pop
inc
int
das
push
rolb
push
bound
int
pop
jbe
mov
mov
sub
push
push
mov
pop
je
jg
mov
jnp
sahf
or
rep
enter
dec
push
mov
ja
aam
loope
cmp
mov
lret
add
xor
xchg
clc
cs
pop
repnz
cmpsl
loop
insl
scas
add
mov
pop
add
js
out
arpl
popa
push
js
in
insl
cmp
loope
push
mov
mov
cs
dec
jno
xchg
fsubrl
and
and
mov
adc
fistps
lahf
cmp
daa
inc
loope
fst
lret
arpl
add
cltd
jp
jle
fnstcw
inc
and
jle
pop
outsb
div
push
jns
clc
or
test
and
or
xlat
mov
pop
xor
adc
movsl
in
xor
out
mov
sbb
aad
mov
movsb
cmpsl
arpl
mov
or
shll
sub
sbb
inc
ret
cld
push
out
adc
mov
ds
in
cwtl
sbb
sub
cmc
popa
mov
call
dec
sbb
sub
cmp
cltd
xchg
in
test
push
dec
xchg
scas
subb
cs
and
outsb
mov
test
jp
pop
inc
fdivp
jmp
aad
mov
aas
xchg
mov
bound
out
aaa
mov
push
out
sub
stc
mov
jmp
sub
ud0
jmp
push
mov
scas
icebp
movsb
into
add
ret
mov
cmpsl
push
push
or
dec
xlat
scas
mov
icebp
arpl
xchg
lcall
sbb
cmpsb
es
insl
ja
and
in
mov
enter
push
add
or
push
inc
loop
ds
xchg
sub
adc
loope
mov
iret
rcr
insl
movsl
lods
test
test
scas
jmp
mov
sbb
mov
cmc
xor
lahf
hlt
sbb
cld
mov
sub
and
jnp
push
jb
mov
sub
pop
loope
nop
nop
push
rclb
in
cmc
enter
jg
repnz
shr
out
loope
insb
outsb
into
dec
pop
adc
lahf
dec
aam
aas
movsl
inc
fldl
repz
xchg
sbb
dec
and
xchg
mov
cmp
adcl
mov
in
outsl
out
sbb
cmp
add
test
ret
inc
mov
lahf
into
test
jmp
cmp
pop
push
add
int3
xchg
lds
loope
inc
int3
cmp
test
fcoml
test
insb
xorl
lods
adc
pop
sub
and
je
mov
js
and
in
dec
pop
pop
adc
push
inc
loopne
jp
add
xchg
or
sub
repnz
jle
inc
enter
cld
js
aas
xchg
pop
fdivs
pop
cmp
lods
mov
fdivp
and
adc
inc
aad
sbb
inc
outsl
jmp
lock
lods
mov
sub
add
cmpsl
roll
in
jae
xor
fcmovnbe
jg
jno
add
dec
sub
shrb
stos
jmp
bound
mov
dec
cmp
movsb
scas
nop
into
pop
pop
out
test
and
or
xchg
mov
inc
rorl
out
jo
mov
faddl
xor
jne
lods
push
and
push
mov
mov
mov
movsb
xor
sahf
mov
xchg
jl
jno
adc
sub
add
pop
sub
xchg
jge
sub
sbb
pop
xlat
mov
icebp
cld
notl
push
mov
xchg
fwait
add
mov
shrb
clc
popa
xor
dec
and
pop
mov
popf
mov
jl
jmp
call
movsb
scas
xor
cmp
nop
pop
lds
lods
lret
mov
mulps
int
dec
lret
imul
aas
sahf
sar
or
arpl
pop
cwtl
cwtl
push
xor
pop
mov
ljmp
leave
mov
and
faddl
psubsb
nop
int
mov
add
shlb
jnp
jge
cmc
sti
ret
mov
jecxz
iret
push
or
rorl
push
push
and
inc
xchg
jge
frstor
stos
insl
movsb
inc
dec
xor
sbb
mov
pushf
jno
and
inc
or
inc
jle
addr16
push
dec
sti
jnp
into
or
push
push
out
pop
xor
push
sbb
jb
cmp
mov
imul
fldenv
mov
flds
and
sbb
mov
popa
mov
inc
and
nop
and
ja
mov
mov
mov
sbb
fstps
enter
aam
mov
test
mov
or
push
insl
xchg
or
push
aas
and
fucomi
pop
push
fs
lahf
ds
mov
xchg
lock
lcall
cmp
in
pop
sub
and
je
stos
movsl
or
mov
add
ret
push
mov
repz
loopne
push
inc
inc
fists
es
cmp
loop
sbb
mov
sub
fbstp
xchg
mov
dec
push
sub
jmp
jecxz
mov
out
dec
and
add
pop
sub
xor
jb
mov
xor
xchg
ror
mov
pop
stos
pusha
je
sbb
push
cmpps
push
mov
stc
pop
xchg
push
test
call
orb
test
cmp
xor
lret
mov
mov
mov
dec
mov
in
adc
cltd
lods
stc
push
inc
stc
gs
frstor
cmc
ret
test
push
ja
mov
das
mov
inc
sarb
xor
mov
sbb
out
in
push
andl
scas
inc
xchg
fwait
xchg
jp
pop
mov
inc
fsubs
inc
sbb
or
and
xchg
inc
mov
and
sbb
inc
rcll
bound
mov
inc
add
movsb
in
pop
add
cmpsl
testl
insl
xchg
mov
xchg
sarl
mov
aas
pop
inc
sbb
bound
inc
aam
fidivrs
xlat
push
pusha
push
xchg
mov
fwait
mov
sbb
inc
mov
xchg
xchg
mov
adc
sbbl
into
pop
icebp
out
test
addr16
or
adc
jno
pop
xchg
lock
aas
roll
lock
sbb
pop
add
xor
mov
hlt
shrb
in
add
movl
push
scas
push
dec
xchg
cmp
adc
or
jbe
xor
mov
mov
xor
out
or
lcall
popa
rclb
inc
rorl
js
or
or
and
idiv
jg
sub
std
cmpsl
push
fdivrs
arpl
cmp
sbbb
fistpl
mov
xor
inc
sbb
aam
shlb
mov
or
lcall
mov
cltd
flds
mov
mov
pop
mov
mov
add
and
and
testb
jno
icebp
xchg
xchg
add
push
arpl
cmp
mov
retw
pop
pop
push
sbb
loope
ljmp
enter
movl
cwtl
inc
push
pop
stos
add
insl
xchg
push
test
mov
or
dec
mov
daa
add
push
push
pop
and
mov
ljmp
dec
jecxz
ret
outsl
int
inc
push
xchg
enter
jno
jbe
test
cltd
out
and
cmp
dec
test
stos
xchg
aam
jae
xor
mov
hlt
cmp
cltd
in
xchg
xchg
xor
mov
fbld
movsb
ja
insb
xchg
repz
xchg
sti
arpl
aas
inc
pop
cmpsl
xchg
adc
cli
pop
scas
inc
dec
push
aam
les
lods
mov
cmpsb
movlps
push
add
in
xchg
repz
shrb
loopne
push
push
xor
pop
pop
pusha
sbb
xchg
sub
sbb
insl
push
adc
dec
xchg
lcall
das
out
and
lea
sbb
mov
repnz
sub
popl
mov
xchg
inc
adc
push
repz
fnstsw
sbb
mov
fwait
dec
gs
insb
adc
xchg
aaa
push
call
div
and
and
or
adc
jp
add
inc
xor
mov
inc
jbe
jbe
sub
jno
mov
add
push
jae
and
imul
inc
xchg
lcall
subps
dec
dec
daa
inc
push
mov
or
adc
out
inc
popa
sbb
pop
out
and
adc
add
repnz
push
aad
mov
repz
clc
ffree
ret
mov
sahf
decl
push
add
into
pop
mov
sbb
push
fwait
mov
mov
rol
cmp
dec
cmc
pop
xchg
dec
sbb
loope
jp
xor
or
mov
jb
xchg
cs
faddl
popf
push
das
iret
jecxz
jbe
cmp
aad
lret
push
jne
xchg
inc
push
aaa
mov
es
aaa
dec
mov
adc
scas
lahf
pop
pop
leave
push
dec
stos
cli
or
out
scas
shll
sahf
imul
aad
movsl
inc
lds
nop
sbb
scas
repnz
dec
mov
dec
lods
jns
jg
icebp
jns
inc
stos
push
push
call
mov
adc
decl
inc
enter
in
pop
pop
xor
sub
out
test
xchg
stos
in
arpl
cmpsl
and
fs
js
xlat
mov
push
gs
out
mov
out
and
sbb
sub
and
xor
jo
mov
pop
loope
js
mov
cs
sti
add
in
out
jg
add
cmp
fnsave
imul
lret
add
xchg
pop
lea
lret
cmp
jnp
dec
mov
mov
test
inc
fstps
push
jno
sbb
ret
add
xchg
mov
stos
sbb
or
int3
inc
div
lret
xchg
out
testl
push
jo
or
stos
int3
test
inc
jo
lods
iret
repnz
ss
adc
les
arpl
mov
inc
adc
inc
push
sub
xchg
fwait
aas
inc
pop
jo
jns
inc
xchg
imul
inc
arpl
fwait
pop
jecxz
nop
jecxz
fsubs
xchg
ja
fisubrs
sbb
out
jge
notl
xor
xor
mov
inc
adc
in
movsl
loop
call
xchg
leave
sub
mov
xchg
push
cmp
jns
inc
xor
icebp
out
popa
pop
iret
fidivrl
mov
aaa
pushf
inc
loopne
cwtl
sub
inc
lock
inc
inc
rcl
adc
xchg
push
jae
in
rcr
stos
scas
int3
mov
jp
jg
addl
inc
sub
movsl
hlt
imulb
xchg
ss
fmuls
test
mov
cmp
pop
pop
xor
sub
arpl
sahf
xchg
roll
lods
adc
xor
fsubl
ja
leave
subl
shl
mov
jg
jbe
inc
shll
testl
aaa
cmp
cmp
int
sub
xchg
loop
aad
sarl
mov
add
mov
imul
outsl
lret
mov
inc
lods
lret
xchg
pop
addr16
lods
gs
movsl
mov
stos
adc
pop
stos
dec
out
cmp
add
mov
hlt
scas
inc
pop
xor
repz
in
inc
sbb
data16
bound
inc
jne
je
jnp
cmp
sbb
mov
xor
jo
test
fistps
testl
mov
jns
adc
fwait
add
pop
roll
xchg
sbb
mov
mov
pop
pop
pop
xchg
or
pop
cmpsl
dec
mov
iretw
jmp
lods
cmp
insb
mov
jle
jo
mov
mov
outsb
loopne
mov
loope
cmp
dec
lock
inc
jne
in
cmp
out
stc
jecxz
mov
jecxz
adc
mov
or
pop
fldenv
fwait
jmp
aam
scas
pushf
fmulp
inc
lret
call
dec
xlat
xchg
sbb
sbb
data16
movsb
shll
in
cmp
loopne
iret
dec
mov
in
imul
int3
xor
jo
cmp
jle
pop
add
jle
cmp
cltd
pop
push
pop
fs
cmpsb
sub
dec
sub
cltd
cmpsb
loopne
jp
push
out
sahf
inc
daa
fistps
push
scas
adc
jecxz
xorl
cmp
nop
lret
and
jg
scas
push
in
in
filds
int3
in
sti
sbb
cltd
sub
and
in
and
add
scas
loop
fcoms
mov
mov
lret
imul
rcl
jbe
addb
ds
xchg
adc
lahf
add
popf
sub
xor
mov
es
mov
xchg
sub
push
call
clc
call
sub
out
pushf
dec
mov
negl
xchg
clc
push
lcall
mov
ljmp
std
inc
xchg
or
jecxz
mov
or
ret
inc
dec
fldl
bound
int
testb
mov
pusha
sahf
mov
cli
xlat
sbb
aam
fistpl
push
xor
dec
mov
push
jae
mov
jl
fisubrs
pop
cmp
loopne
inc
out
mov
jecxz
fsubs
add
xor
lret
inc
hlt
shrl
push
or
lcall
into
mov
ficoms
xchg
or
xor
jno
out
fsubrl
int3
mov
xchg
scas
lret
mov
popf
scas
jp
mov
sti
aad
push
adc
insb
mov
cmpsb
mov
jge
jge
pop
and
int
inc
rcl
mov
jmp
clc
push
dec
dec
xor
gs
cmp
aaa
gs
incl
dec
test
dec
gs
push
cmp
adc
nop
ficompl
or
cmpsb
into
mov
test
repz
cmp
fdivs
jne
shrl
out
iret
sbb
cs
out
cmp
insb
xorl
stc
xchg
jg
bound
nopl
pop
mov
out
xchg
insb
loopne
repnz
out
flds
pop
addr16
popa
lods
jecxz
inc
mov
mov
sbb
addr16
push
pop
fs
sub
or
ss
push
xor
mov
cmp
in
or
sub
ljmp
stos
scas
dec
test
xchg
mov
xor
insb
in
faddl
mov
insl
cmp
dec
bound
shrb
icebp
loopne
mov
ret
or
lret
pop
xchg
lret
test
xor
mov
mov
pusha
ret
test
pusha
scas
insb
dec
jne
fsubrl
add
push
jecxz
scas
or
enter
add
pushf
hlt
add
mov
jo
hlt
mov
pop
or
stos
add
add
sbb
xor
mov
leave
xchg
idivb
xchg
sub
stos
add
or
ds
dec
inc
pop
stc
xchg
movsl
jb
pop
mov
jecxz
test
daa
mov
or
pop
pop
hlt
sub
sbbb
aas
mov
mov
fmuls
or
aaa
mov
js
aas
pushf
fisubrl
xchg
mov
dec
test
adc
jmp
mov
test
sbb
imul
or
cmpsl
and
out
adc
jo
xchg
mov
mov
xchg
push
ja
sub
in
mov
dec
inc
xchg
push
mov
popa
sbb
fidivrl
mov
fildl
inc
xlat
and
movsb
and
sub
bound
inc
sbb
inc
sub
aaa
call
test
cmp
push
cmp
negb
push
dec
dec
ljmp
xchg
dec
testl
ret
iret
stc
sub
jo
test
mov
jno
rolb
nop
test
pop
mov
lods
mov
rcl
dec
mov
fadds
jp
cmc
mov
add
dec
cli
jmp
mov
pop
or
aad
push
fildl
sbb
outsb
neg
in
jge
outsw
jns
mov
mov
bound
stos
adc
mov
dec
rcl
aaa
adc
test
outsb
loopne
cmp
cmc
xor
mov
xor
icebp
inc
aas
pop
daa
xor
jnp
loope
arpl
addr16
shlb
mov
cwtl
sub
movsl
adc
mov
outsb
lods
adc
mov
mov
mov
push
mov
push
dec
jo
pushf
dec
scas
aad
mov
and
push
in
xchg
push
aad
iret
push
add
xorb
in
push
or
xlat
jb
shrl
or
and
jb
add
cmp
test
shl
in
ret
sub
repnz
xchg
stos
lret
push
cs
xor
dec
cmp
cmp
sub
push
lret
mov
mov
cli
sbb
insb
inc
outsb
sbb
rcrb
inc
icebp
mov
bound
adc
iret
push
adc
mov
mov
aaa
pop
sbb
rol
jb
sub
xchg
test
sbb
mov
inc
mov
sbb
inc
sbb
ret
dec
inc
push
stos
cs
aas
jno
aas
xor
push
mov
sub
mov
leave
inc
cmp
imul
movsl
aaa
lods
mov
outsb
jae
push
fs
mov
test
xor
jo
pop
loopne
mov
mov
pop
push
ret
movsl
push
pop
das
and
mov
sar
in
pop
jo
and
mov
add
test
stos
sub
rcl
mov
add
or
mov
mov
in
mov
and
sub
mov
pop
jbe
add
push
lahf
inc
int
insl
xor
pop
cli
ret
or
mov
add
dec
mov
sub
les
fs
out
lahf
sub
xchg
std
or
popa
test
cwtl
loopne
or
mov
bound
cli
int3
jae
or
adc
fldcw
adc
jae
repz
inc
fsts
int
into
xchg
sbb
pop
ds
test
dec
repz
push
out
lock
push
ds
xchg
ljmp
push
lock
cmc
popf
adc
inc
std
jl
cmp
xchg
sbb
push
xchg
xchg
movsb
sub
or
adc
ret
filds
out
lahf
pop
rorl
add
xor
fldcw
not
inc
or
mov
fiadds
mov
xchg
lock
imulb
mov
inc
repz
and
mov
scas
jno
insb
sub
pop
xchg
inc
rcrl
loopne
pop
aam
fisttpl
cs
mov
cmp
sbb
fadd
jg
nop
or
pop
lahf
aaa
cmc
shll
dec
push
out
popf
mov
sbb
mov
cmp
jp
push
jg
rcrl
xchg
xchg
mov
in
pop
or
insl
add
int
push
cli
sbb
movsl
pop
push
ret
jmp
in
adc
cltd
adc
cmp
push
push
mov
aam
and
jne
inc
dec
aaa
push
test
mov
cmp
repz
mov
lea
jae
sub
jno
mov
aam
lock
sbb
mov
sub
incb
repz
scas
sub
sbb
lahf
aas
clc
test
adcb
lea
or
call
cmpsl
adc
xlat
lret
inc
push
jge
clc
shl
test
dec
add
outsl
fldt
adc
iret
test
std
scas
loope
or
testb
pop
add
rcrl
clc
xor
les
mov
ret
out
or
outsb
cmp
push
sub
sbb
add
arpl
pop
and
xchg
fs
adcl
movsb
mov
in
clc
stc
lcall
ds
and
jmp
out
jb
fwait
mov
shll
cmc
out
icebp
and
and
fldt
push
lock
test
mov
xchg
insl
cmc
pop
push
loope
jmp
ror
pop
xor
pushf
mov
jecxz
int
shlb
ds
sbb
es
das
outsb
cmp
adc
addr16
cwtl
and
testl
adc
mov
adc
mov
or
int3
sahf
cmpsb
pop
xchg
lds
arpl
xchg
stos
mov
inc
mov
iret
lcall
xor
jmp
iret
add
das
scas
loope
pop
js
dec
negl
fcoms
pop
adc
xchg
jbe
icebp
mov
push
stc
jl
xchg
hlt
jnp
pop
cmp
rcll
and
sbb
cmp
xorl
pop
xor
add
out
lock
push
pop
sub
loope
addb
cltd
jb
flds
add
cmp
int3
fwait
outsl
mov
mov
icebp
loope
mov
repz
lret
das
jp
mov
in
adc
lods
mov
xchg
in
pop
mov
lods
fdivr
sub
loop
adc
cwtl
inc
push
subl
mov
rorl
adcb
push
or
mov
imul
mov
sahf
fs
xchg
or
jmp
fldt
xchg
xchg
inc
mov
push
shl
push
test
stc
xor
mov
aas
cmc
lds
push
outsb
jg
fwait
sti
out
rcr
je
cmpsb
imul
and
stos
inc
hlt
or
cmp
test
pop
sub
push
sahf
fidivs
sub
popa
aaa
insl
mov
xor
jmp
dec
lods
or
popa
inc
sbb
cmp
movsl
pop
lea
inc
sub
xor
fimull
jae
addb
inc
push
adc
dec
xor
pusha
cmp
mov
mov
pop
insl
push
loop
scas
loopne
xchg
test
fstpl
mov
sarl
scas
test
dec
ret
mov
adc
popf
dec
insb
mov
outsl
mov
inc
es
sub
xchg
mov
pop
fistpll
mov
fs
pop
jne
sahf
insl
sub
mov
jo
movsb
push
icebp
rolb
mov
inc
xor
and
mov
test
push
aad
lds
shrb
nop
insb
jg
jno
dec
mov
xchg
pop
rcrl
loop
cld
and
js
mov
paddd
xor
xchg
adc
mov
cli
inc
pushf
loope
pop
inc
sbb
lods
mov
popa
ds
sbb
mov
push
fistps
inc
rorl
inc
jmp
jo
enter
je
dec
cmc
std
loop
xchg
mov
rclb
sbb
jmp
mov
pushf
push
pushf
addr16
out
sub
outsb
scas
mov
and
push
sbb
movsb
lods
inc
cmp
lcall
movsb
cmc
pushf
mov
lahf
cli
fcoms
jo
aad
fldt
bound
jno
pop
sbb
fldcw
push
push
mov
pop
dec
fucomp
and
mov
xor
bound
mov
shll
insl
shrl
imul
mov
inc
movl
arpl
sub
jo
enter
jmp
mov
jmp
dec
push
sbb
inc
into
test
imul
pop
and
sub
dec
bound
sbb
xchg
leave
bound
and
gs
out
cmpsl
notb
fnstcw
push
lods
nop
fstp
je
pop
movsb
add
adc
sbb
sar
movsl
fs
ret
shrl
pop
jb
push
hlt
mov
sahf
int3
xor
sahf
push
adc
and
mov
pop
push
gs
lahf
sbb
popf
lahf
not
mov
cmpsl
jg
or
ret
fmul
rcll
loop
rclb
aaa
mov
and
mov
das
push
jge
push
mov
jl
aas
shlb
mov
sahf
xchg
sbb
or
shl
add
and
xchg
jb
cltd
je
adcl
mov
push
or
popf
inc
inc
out
aaa
out
cld
fwait
sbb
hlt
movsl
or
jae
adc
pusha
sbb
lock
ljmp
inc
mov
iret
push
fstps
push
mov
add
call
push
lods
fcmove
sub
mov
lds
loop
cmc
stc
or
imul
push
push
mov
int3
packuswb
repz
mov
pop
ja
pop
xchg
lret
imul
je
add
aam
cld
je
push
sbb
and
out
imul
mov
je
dec
mov
mov
fisttpll
adc
mov
imul
mov
dec
mov
xor
push
lret
loope
pushf
mov
or
xchg
mov
enter
jp
fcomi
leave
sub
bound
mov
inc
jnp
push
js
push
je
inc
sar
mov
dec
sub
jmp
sub
pop
call
mov
sbb
fisttps
sahf
sbb
scas
fwait
push
ljmp
test
addl
out
and
mov
sbb
adc
out
pop
pop
xor
add
dec
orb
mov
xorb
enter
lds
xor
jno
push
sub
mov
aas
mov
enter
lea
sti
inc
aaa
test
rcr
xchg
xchg
sbb
xor
leave
pop
cltd
sbb
cmp
mov
pop
cli
xchg
jno
das
add
arpl
inc
clc
jmp
xchg
jbe
sub
xchg
sbb
jne
nop
rol
pop
ret
mov
cltd
cltd
cmpsb
ljmp
test
shr
sbb
test
loopne
test
sbb
jns
insl
and
lock
jae
mov
adc
andl
out
andb
and
addb
sbb
scas
orb
test
or
add
aam
and
les
mov
push
data16
std
pusha
dec
xor
cmc
lcall
lds
int3
sbb
sti
pop
inc
mov
adc
aaa
je
push
mov
or
cmp
leave
insb
pop
adc
mov
cli
dec
push
or
jae
out
or
stos
and
popf
or
rclb
aad
repz
mov
or
movsl
sub
xor
les
imul
sub
cli
xor
jg
pop
shrl
shl
or
sbb
xchg
mov
leave
mov
adc
in
cmpsb
sarb
sbb
or
idivl
adc
sbb
flds
push
add
mov
sbb
pusha
sahf
ret
or
xor
add
fstl
dec
ljmp
jge
sub
dec
stos
mov
mov
pop
xor
xor
in
jbe
call
shrb
xor
mov
mov
sub
iret
push
pop
hlt
sub
shl
mov
inc
push
call
outsb
cmpsb
pop
jp
jae
test
fistpl
js
sub
and
add
test
cmp
adc
sti
scas
jg
mov
sub
nop
sbb
ret
loope
lret
call
push
jg
mov
jbe
jg
cli
xchg
lds
decb
jbe
std
fiadds
cmp
jp
cmpsl
movsb
pop
or
sub
rorl
out
push
mov
mov
sar
movsb
mov
mov
ljmp
mov
or
call
xchg
mov
aam
mov
inc
ja
sub
mov
jbe
adc
jo
push
cmp
jae
and
add
fdivs
aas
cmp
jl
out
mov
insb
pop
test
pop
add
adc
inc
mov
leave
adc
xchg
dec
adc
mov
mov
call
or
push
mov
pop
jbe
out
movsl
jle
pop
jno
inc
sub
stc
hlt
mov
in
lods
inc
mov
jb
adc
in
or
in
popf
lret
xchg
xor
sub
fistpll
dec
in
cmp
sub
out
xor
push
stc
sahf
int3
add
mov
inc
push
fnsave
adc
adc
sbb
jne
and
add
lret
mov
xchg
push
cmp
dec
xor
stos
mov
ja
fisubs
int3
pop
mov
test
jo
sub
in
or
dec
xor
es
adc
pop
or
fwait
push
ret
and
sbb
aas
mov
out
pop
test
mov
insl
mov
dec
pop
add
xor
or
cwtl
inc
mov
js
adc
popf
ret
push
sbb
lea
and
andl
mov
jb
add
jmp
lea
adc
push
addr16
push
xchg
cmp
xchg
inc
fidivl
pop
test
jecxz
es
dec
loope
mov
xlat
and
or
in
push
imul
mov
jns
and
dec
inc
enter
push
sub
and
movsb
cmp
push
gs
icebp
cmp
mov
push
out
rorl
lret
cmp
add
mov
sub
pop
xchg
jbe
in
add
jp
pop
std
adc
xchg
scas
into
pop
notl
das
int
or
loop
dec
xchg
insl
int3
push
fsts
fidivs
lock
sub
mov
nop
cli
lcall
sub
add
mov
mov
mov
push
or
cld
test
in
push
xchg
pop
pop
mov
into
mov
add
adc
subl
and
jmp
sbb
pop
popf
in
xchg
pop
subl
int
pushf
sbb
std
xchg
in
inc
xor
js
jp
rorb
or
jo
outsb
loop
add
pop
loop
jmp
jne
xchg
inc
or
jbe
adc
mov
and
mov
dec
push
xchg
movsb
inc
ss
adc
adc
sti
xchg
ret
sub
fisttpl
or
arpl
jp
mov
cmp
roll
loop
xchg
ret
push
leave
jnp
adc
xor
je
xor
dec
push
daa
rolb
pushf
or
cmpsb
adc
sbb
and
inc
push
leave
xor
mov
mov
inc
or
dec
daa
call
inc
stc
add
aad
xchg
cmp
aaa
or
es
fisttps
xchg
mov
mov
out
test
addr16
push
push
or
lahf
push
xor
sbb
cmpsb
dec
jp
loop
dec
scas
mov
dec
hlt
scas
inc
ljmp
test
psubusw
or
outsl
lahf
adc
into
sbb
pop
pop
cmpsb
pushf
in
popf
mov
inc
int
dec
sub
rcr
rcll
imul
jae
dec
es
and
sbb
push
mov
mov
mov
outsb
daa
push
in
push
fs
or
add
push
pop
sbb
xorl
ret
js
push
test
push
test
jbe
cmpsl
push
add
ficoms
mov
xor
pop
jnp
dec
adc
inc
sub
call
out
vmread
div
cs
outsb
out
jge
xor
xchg
xchg
lret
mul
outsb
mov
adc
lock
xchg
jo
inc
inc
jb
xor
inc
jmp
fidivs
mov
fcoms
loopne
push
adc
fwait
loope
mov
cs
xor
mov
sub
pop
aaa
xchg
aas
lods
sub
roll
push
sbb
cmc
inc
pop
icebp
add
push
scas
sub
jl
adc
fidivl
jnp
es
cmp
stos
addb
jl
roll
popf
ret
aad
aaa
inc
aaa
mov
popa
fsubs
mov
pop
dec
sub
inc
mov
std
icebp
aaa
sbb
mov
pop
cmp
arpl
fucomi
insl
xchg
movsb
mov
pop
test
fildl
or
cli
mov
pop
jne
jle
lods
daa
cli
lret
jl
ss
test
dec
cmp
xor
je
ret
sub
add
test
fimull
and
or
and
pop
shll
imul
dec
cmc
pop
push
icebp
test
adc
inc
bound
sbb
push
add
add
fs
jle
adc
fdivl
dec
push
push
and
bound
into
enter
mov
dec
sahf
inc
dec
dec
dec
mov
cmpsl
mov
mov
push
xor
daa
gs
leave
add
xchg
test
xor
hlt
adc
mov
in
and
jge
ficoml
icebp
cmp
xor
sub
pushf
jbe
dec
and
ret
ss
pop
mov
repz
fldcw
cmp
ds
jge
sub
call
pop
test
les
xchg
cmc
xchg
into
mov
in
jnp
inc
fcompl
cwtl
pop
or
add
in
js
aad
addl
sbb
cmpsb
out
mov
imul
xchg
adc
pop
stos
int
movsl
clc
mov
andl
cltd
insb
shrl
inc
inc
mov
rcr
out
mov
shll
xchg
pop
shufps
not
imul
into
sbbl
add
std
pop
fbld
sbbl
das
iret
inc
cmp
test
shll
pop
add
pop
dec
mov
js
xchg
cmp
dec
inc
sub
adc
aam
adc
mov
pop
inc
mov
add
jno
push
xchg
lods
xchg
xchg
jne
jae
jne
lds
jle
mov
dec
cmp
nop
mov
jmp
in
ret
daa
imul
jg
mov
movsl
popa
add
mov
popa
pushf
rcll
icebp
pusha
cli
xlat
cwtl
fs
xchg
pop
rcrb
iret
adc
lock
es
repz
jecxz
sbb
ret
jmp
mov
sub
lea
std
divl
sub
or
ja
sub
les
addr16
pop
mov
int
push
xchg
sahf
mov
arpl
and
mov
pop
insl
adc
pop
shl
dec
mov
xlat
push
pushf
xor
inc
mov
js
or
dec
add
xor
mov
xor
pop
xor
cmp
push
add
mov
insb
int3
mov
mov
sbb
xor
cwtl
fsave
add
leave
jecxz
mov
inc
ret
cltd
stc
in
lret
cmpsb
daa
aaa
pop
ljmp
adc
test
movb
sub
push
and
adc
adc
mov
pop
mov
add
adcl
or
jns
ljmp
rcr
sarl
loope
sub
pop
xchg
test
fimuls
ljmp
add
mov
inc
rclb
pop
pop
cmp
jnp
loopne
xlat
daa
sahf
fidivrl
loopne
mov
rcrb
out
fdivrs
out
add
adc
shrl
xor
sti
stos
sarl
cmp
mov
or
jg
leave
or
std
lods
inc
jb
jle
push
sub
enter
pop
or
pop
mov
push
addr16
mov
dec
lea
adc
cmp
rclb
dec
imul
mov
ret
outsl
aam
ds
jle
xchg
icebp
int3
popf
and
cs
add
testl
sahf
rclb
lret
addr16
or
jmp
cmp
in
mov
out
outsl
xchg
cmp
or
mov
dec
je
stos
pop
mov
pop
jbe
add
cmc
ljmp
sbb
xor
mov
into
mov
and
xor
xor
sub
sub
cmp
std
cld
jg
push
jnp
icebp
test
out
lret
pop
sbb
pop
xchg
pop
and
rcrl
getsec
add
jp
mov
push
rol
fiadds
stc
sub
and
mov
push
push
loope
loop
fs
fwait
push
push
add
jmp
fwait
sub
in
call
out
popa
jge
xchg
arpl
cmpsl
sub
cmp
xor
call
mov
lods
xlat
jno
or
jp
jl
pushl
cs
cmp
mov
dec
ljmp
mov
mov
jle
pop
xor
dec
pop
xor
pop
xchg
pop
cmp
mov
mov
adc
arpl
dec
das
enterw
jecxz
push
pop
or
mov
add
loopne
sub
testb
imul
push
sbb
and
jne
mov
jp
frstpm(287
ret
or
jo
jge
sbb
lods
pusha
cmp
bound
dec
sub
idivb
loopne
xchg
in
or
out
mov
xchg
lods
daa
fmull
sbb
leave
sahf
pop
push
and
jnp
insb
insl
mov
mov
push
ss
cli
inc
imul
sub
scas
adc
push
push
cs
or
push
int
mov
sbb
inc
leave
cld
outsb
lock
mov
mov
sbb
xor
cmp
in
fcmovnb
mov
in
bound
mov
adc
sti
add
jle
jno
adc
sti
cmc
out
pop
mov
fstpt
stos
stc
jo
sbb
adc
test
mov
mov
xor
pop
ds
jo
fstps
stc
cs
popf
ss
lds
inc
pop
out
test
dec
fdivr
outsl
cmp
jbe
push
inc
inc
and
ss
xchg
add
pop
push
push
shll
addr16
insb
cmp
jae
and
sub
xor
dec
mov
jmp
cmp
xchg
rcrl
fsub
jbe
lahf
daa
loopne
je
scas
ss
es
pop
push
test
in
cmp
push
mov
inc
hlt
subl
jnp
jl
push
scas
cs
frstor
push
dec
push
dec
push
add
jl
jge
icebp
xor
sub
push
xor
mov
mov
icebp
inc
enter
aad
into
daa
aam
lret
lret
fnsave
adc
outsb
outsl
jo
adc
mov
push
adc
je
movsb
push
mov
mov
mov
adc
shlb
adc
mov
pop
rcrl
ret
push
dec
in
sti
cmpsl
sarl
bound
xor
jae
sbb
stos
xchg
push
mov
addr16
lock
sbb
sti
or
pop
adc
adc
test
jmp
aas
fisubs
popf
jmp
stos
mov
sbb
push
es
sbb
push
dec
sub
dec
xor
cltd
faddl
idivl
xor
sbb
pop
mov
add
js
inc
aad
ret
cmp
test
shll
repz
aas
out
push
xor
sbb
jge
das
popf
rcll
jo
adc
inc
lret
adc
mov
int
push
in
pop
xchg
mov
cld
into
cs
cmp
mov
notb
and
fs
outsb
dec
mov
xchg
rolb
sbb
adc
aam
pop
fldl
sub
adc
subl
mov
out
fnstsw
push
fmull
rorb
addr16
pop
daa
aad
dec
into
add
mov
aaa
add
into
lods
int3
movsb
pop
out
inc
jo,pn
je
or
cmp
mov
mov
insb
cmp
jb
and
shlb
mov
mov
lcall
mov
test
fwait
cmp
pop
fdivs
jo
dec
sub
mov
jp
rol
int3
aad
lods
mov
or
jle
sbb
mov
mov
fwait
mov
shlb
mov
insl
sbb
mov
imul
xchg
bound
out
sti
mov
loope
pusha
push
mov
out
or
mov
mov
lret
or
jb
jo,pn
mov
add
xchg
xor
xchg
add
pop
or
in
lods
int3
sbb
clc
aad
xchg
lret
push
push
jmp
sub
xor
dec
adc
test
dec
add
lea
xchg
xchg
mov
jnp
pop
mov
push
pop
inc
xchg
push
xor
sbb
idivl
jb
std
enter
adc
pop
cmp
mov
std
inc
popa
lret
xchg
hlt
lahf
dec
sub
bound
loopne
popl
leave
out
insl
mov
in
push
jmp
and
test
stc
mov
jp
or
dec
dec
loop
mov
xchg
add
movsl
sub
jnp
sub
sbb
ficompl
insb
pop
jle
loopne
divl
inc
loope
mov
lret
sti
jb
addr16
pusha
push
add
ret
jecxz
cmpb
nopl
cwtl
out
pop
and
daa
ret
xor
mov
std
ds
cmp
mov
lods
mov
test
shl
pop
adc
aad
cmp
inc
and
je
sti
xor
pop
or
jo
add
in
out
inc
jno
xchg
in
push
xchg
ja
jne
movsl
cld
xor
cmpsb
loop
or
pop
pop
mov
dec
fsubs
xchg
pop
jnp
lret
lea
cmp
add
add
inc
aad
mov
ja
enter
push
shlb
mov
mov
movsb
add
inc
xor
add
hlt
cltd
pop
aas
or
or
inc
mov
ret
outsl
ret
mov
adc
inc
dec
push
scas
sub
and
add
hlt
dec
add
lea
jg
sbbb
inc
lahf
jnp
ret
es
pop
push
pop
shlb
int
cmpsl
xchg
xor
call
dec
shr
sub
ds
in
es
pop
scas
cmp
mov
mov
in
xor
mov
rorb
shrl
outsb
jecxz
add
jbe
outsb
or
pop
xchg
pushf
loopne
nop
xchg
push
jnp
cmp
addr16
mov
add
cwtl
in
aam
push
jg
ss
pop
lds
cmp
pusha
adc
inc
mov
ret
dec
xor
pop
xlat
mov
xchg
in
mov
push
icebp
nop
jl
push
nop
mov
flds
xor
loopne
jb
jl
push
movsb
es
les
fs
inc
add
mov
pop
lret
out
mov
inc
dec
outsb
cmpsl
or
lcall
imul
and
repz
insb
stc
push
lds
mov
in
sbb
rol
lret
data16
dec
test
fwait
pop
sbb
push
fucomip
xor
xor
outsl
loope
lret
inc
xchg
stc
push
inc
and
jne
sbb
pop
lret
inc
pusha
sub
rcrb
cmp
push
adc
hlt
js
lods
adc
lods
pop
cmp
inc
jne
cmp
xor
fbld
cmp
mov
xor
notl
xchg
push
daa
jnp
dec
lods
adc
les
out
scas
daa
mov
mov
mov
push
subb
imul
nop
fsubs
out
mov
insl
mov
mov
rcrl
adc
fdivrs
push
mov
xchg
mov
loopne
sub
ja
push
ret
and
dec
enter
and
sbb
movsb
pusha
enter
fiaddl
negl
aam
xchg
fcomp
add
repz
sbb
sbb
pushf
mov
rcrb
xlat
lahf
xor
add
push
sbb
sahf
imul
bound
inc
add
mov
inc
jno
or
clc
xchg
push
stos
out
pop
mov
aam
dec
mov
pop
test
roll
jecxz
add
inc
xor
add
pop
inc
mov
fildll
inc
aas
test
fldenv
ficoms
mov
cmc
addr16
out
fidivrl
xor
mov
dec
mov
or
xchg
insb
xchg
adc
jbe
xor
fstpl
inc
cmp
loopne
es
pop
push
addr16
cmp
mov
mov
hlt
mov
addr16
ss
mov
ss
daa
nop
mov
cwtl
xor
sub
cmpsb
mov
sub
insb
adc
cwtl
mov
jl
clc
insl
inc
rorl
les
ret
pusha
push
inc
lahf
xlat
and
xchg
cmp
inc
clc
mov
mov
addr16
test
in
pop
mov
xor
adc
sub
mov
mov
fnstcw
jno
sbb
mov
push
movsl
push
cli
jb
adc
lcall
insb
dec
jp
movsl
lods
in
rorl
inc
out
mov
stc
mov
sub
xchg
xlat
ja
cwtl
jnp
jns
mov
outsb
sbb
ret
loopne
cmp
shlb
shll
xchg
mov
push
cli
ja
jmp
dec
jmp
jp
das
scas
jo
adc
adc
dec
xchg
mov
out
ret
xor
fsubrs
cmp
mov
adc
adc
out
lds
jle
adc
fcomp
repz
out
shl
jmp
jmp
cmp
testl
mov
mov
rdtsc
mov
cmp
pop
and
sbbl
or
out
fcmovne
or
push
and
sub
fs
add
pop
mulb
lods
out
filds
fsubl
mov
mov
das
or
push
movb
stos
mov
call
outsl
fwait
out
mov
aad
jb
mov
sub
adc
js
rorb
xchg
cmp
je
cmpsl
sub
test
dec
add
and
gs
cmpsb
push
jmp
mov
add
push
test
inc
or
lods
inc
sub
mov
int
adc
xchg
push
xor
jp
iret
cmp
push
js
and
fstl
push
test
fwait
xor
movsl
insb
in
mov
dec
pop
jb
imul
call
in
pop
or
insb
add
sub
and
inc
addb
dec
xchg
and
pop
popa
mov
lret
daa
fdiv
loop
sub
dec
dec
je
mov
mov
sbb
lahf
loope
and
mov
mov
inc
pop
mov
add
outsl
fsts
btcl
fcomps
pop
or
lret
push
std
sbb
mov
push
test
cmp
jbe
cmp
stos
test
jmp
adc
sbb
sub
daa
ja
sbb
jne
icebp
jne
lock
mov
fs
or
dec
xor
loope
popf
mov
enter
insb
out
addb
xchg
bound
pop
xchg
add
cmp
mov
and
fst
and
leave
aas
popa
push
or
sti
pop
mov
adc
inc
add
pop
aas
jnp
dec
lcall
incb
pop
xchg
jno
into
int
lret
xor
ficomps
cmp
outsb
out
add
xor
lods
imul
ja
test
push
sbb
in
jl
mov
lods
incb
outsl
sti
add
test
into
mov
ja
test
in
stos
or
or
mov
mov
pop
pop
adc
stos
ja
jno
rolb
or
int
jno
mov
stos
add
and
inc
les
mov
fwait
add
pop
sub
lods
cmp
test
clc
push
sti
pop
pop
xor
nop
fmul
lahf
xchg
adc
and
mov
gs
dec
sbb
mov
jmp
push
mov
ud1
pusha
hlt
std
rcrb
cmp
rorl
notb
daa
sbb
or
mov
mov
test
mov
mov
nop
or
pop
out
gs
ret
stos
jmp
inc
mov
mov
test
or
sub
call
xchg
test
sbb
xchg
roll
lock
add
mov
icebp
fs
jle
cmc
xor
xorb
mov
in
mov
dec
mov
ret
dec
add
push
mov
orb
jno
bound
insb
jmp
mov
cmp
mov
out
mov
clc
leave
push
adc
cmpsb
divl
or
cmp
pop
icebp
sub
sub
xlat
nop
sub
pusha
mov
insl
scas
mov
inc
and
dec
ret
test
outsl
test
ja
mov
push
sub
outsb
fcmovne
rclb
out
inc
xor
insb
data16
pushf
addr16
jmp
daa
add
shrl
push
inc
insl
std
lods
repnz
and
pop
push
movsl
push
out
mov
lods
pop
scas
sbb
mov
cmpsb
ljmp
in
stc
jno
or
dec
jge
outsl
loope
bound
push
mov
aaa
jge
cmpsb
jle
outsb
mov
push
jb
or
enter
adc
test
addr16
js
cmc
in
test
mov
mull
addl
jecxz
sub
cmp
icebp
ja
bound
les
adc
mov
cld
push
sbb
push
fsubrs
xchg
pop
xchg
mov
mov
clc
ficompl
or
mov
fwait
or
mov
xor
rolb
sub
mov
mov
ds
cmp
ss
mov
in
adc
lock
call
cmp
push
adc
lods
ret
ds
pop
pop
jmp
les
and
shlb
in
mov
adc
sbb
cli
sahf
mov
mov
push
mov
jo
jle
push
andl
xor
xor
xor
cmp
adc
ljmp
es
mov
sub
or
test
pop
shll
gs
lret
push
roll
and
jo
repz
test
mov
cmpsl
pop
aas
es
clc
mov
stos
idivl
mov
dec
shr
stos
decb
mov
cmp
fs
sub
mov
lret
bound
rcll
faddl
aaa
push
pop
mov
mov
jp
xlat
orb
jp
jae
push
aam
loope
lahf
ret
adc
xchg
xlat
or
cld
jle
imul
rcr
pop
aad
sub
dec
sub
xor
je
sub
in
mov
neg
test
or
adc
pop
out
dec
jno
xchg
mov
andl
mov
cmpsb
in
mov
in
pop
xchg
adc
sub
cmpsl
bound
xchg
cmp
es
insl
mov
pop
push
test
repnz
jo
mov
push
mov
push
sahf
sahf
pop
ret
inc
fs
ret
sti
lret
js
inc
stos
das
sub
mov
jg
adc
test
aas
cmp
jmp
in
push
push
bound
mov
sub
test
jge
in
cmpsb
mov
jge
pop
push
inc
addr16
ret
push
rcrl
fidivrs
sbb
clc
dec
stos
add
inc
insb
dec
cmp
cmp
jo
int3
ret
pop
xor
pop
cmpb
xchg
sarb
shll
jle
mov
mov
lods
push
mov
int3
lea
or
mov
cmpsl
dec
push
ret
out
inc
aam
popf
lahf
ja
or
and
dec
lods
fsubrl
sbb
sbb
test
jecxz
sub
jne
repnz
stc
cld
das
daa
les
arpl
imul
insb
test
pop
jmp
lods
mov
and
imul
xchg
aad
imul
push
jnp
lret
das
imul
into
roll
jnp
cmpb
jg
das
mov
jne
scas
pop
fucomi
xchg
inc
cmpb
je
nop
add
sarl
mov
inc
fbstp
pop
fdivrs
cmp
sbb
push
cmp
cmpsb
xchg
ret
cmpsb
xchg
test
fmul
lds
inc
in
adc
jge
nop
fs
push
sub
das
and
jns
ljmp
sub
imul
xor
loopne
jecxz
pop
outsl
inc
jb
xchg
test
pop
jl
jle
pusha
clc
pop
xchg
push
and
push
roll
jge
fadds
mov
mov
inc
lods
or
xlat
fs
push
dec
xchg
stos
movsl
mov
fiaddl
sub
push
inc
cmpb
sub
lds
dec
dec
cwtl
xlat
fldcw
int3
cmpsb
das
into
je
lea
mov
notb
fdivl
cwtl
push
jo
in
jle
mov
push
je
imul
jne
jo
pop
pop
jmp
rol
cltd
dec
xchg
dec
cmp
hlt
pop
mov
inc
xchg
scas
rcrl
pop
mov
jmp
add
and
or
stc
enter
in
loopne
test
in
pop
xchg
fstpt
sub
jecxz
je
sarl
mov
fs
cmpsb
add
rolb
in
shll
out
pop
or
push
mov
dec
dec
inc
mov
pop
adc
jge
add
into
add
and
mov
sbb
insb
sbb
push
call
sub
je
inc
pop
inc
xchg
jmp
repnz
mov
cmp
cmp
insl
or
imul
ja
dec
dec
sub
sbb
scas
xlat
push
cmpsb
and
ss
sub
out
pop
stos
es
xchg
stc
and
out
jle
out
outsb
or
loope
or
xchg
in
adc
pop
cmc
andb
hlt
fwait
jle
sub
pushl
lds
mov
imul
xor
gs
out
jle
push
ljmp
fsub
lret
mov
movsl
xchg
subl
jle
xlat
cmpsl
clc
xlat
xor
lods
and
insb
or
ret
insl
add
repnz
sbbb
add
sub
test
cmc
mov
sub
movsb
das
lahf
pop
sub
fidivs
mov
xchg
cmp
dec
cmpsl
iret
cltd
mov
cmp
jmp
rol
xor
inc
adc
enter
das
in
jmp
pop
jp
add
adc
jmp
cmp
push
xor
pop
mov
xor
gs
mov
and
mov
call
mov
nop
jne
neg
test
jle
xor
movsl
jmp
push
mov
sysexit
in
loopne
xlat
fwait
movsl
loopne
jbe
pop
clc
filds
sti
in
ds
sub
jo
movsb
in
js
fisttpll
xchg
stos
pushf
mov
lahf
mov
cmp
outsb
add
mov
inc
and
leave
xor
repnz
jns
mov
add
inc
fs
and
push
fisubrl
xchg
sub
mov
add
ret
or
dec
sbb
sti
inc
dec
jmp
mov
jp
je
daa
repnz
push
or
mov
mov
clc
xor
insl
mov
pusha
cmp
ja,pt
or
rcrl
push
push
sbbb
test
inc
movsl
mov
or
lret
mov
mov
nop
test
rclb
or
mov
lock
scas
test
iret
inc
mov
insb
in
pop
iret
jecxz
cmpsl
and
mov
sbb
xchg
inc
fimull
xlat
into
inc
pop
out
mov
rcrl
cltd
int3
push
and
sub
sub
dec
jecxz
or
fisttps
push
sbb
into
in
xor
movsb
add
les
pop
hlt
add
cltd
xor
push
inc
lds
clc
les
pop
mov
inc
jmp
nop
cmp
jns
xor
mov
mov
push
push
jle
pusha
rcl
and
std
pop
fs
pop
xorl
insb
push
and
sbb
cs
cli
adc
dec
std
aad
std
gs
sarl
cld
push
dec
xor
jns
xorl
loope
icebp
idivb
movsl
jecxz
mov
ret
fst
lods
je
mov
sbb
mov
pusha
int
mov
jmp
and
adc
xchg
sbbl
mov
out
call
push
pop
adc
inc
add
sub
pop
pop
mov
jp
cli
mov
cmpsb
ljmp
popa
xor
and
pushf
jns
sbb
xchg
stos
sbb
mov
pop
aam
cmpsl
inc
out
cmp
inc
jo
sub
push
mov
xor
mov
jp
jne
add
jae
mov
push
int3
mov
jle
ljmp
lock
ficomps
push
adc
inc
rolb
inc
cmp
mov
and
or
fs
ret
ss
shrl
mov
ret
icebp
add
hlt
fdivrl
jne
push
mov
ret
addb
movsb
xor
cmp
decl
push
add
mov
add
arpl
stos
pop
xchg
fdivrs
lods
pusha
mov
out
inc
mov
cli
mov
adcl
in
mov
repnz
movsb
inc
dec
fisubrl
pusha
insl
dec
inc
mov
cmpsl
pop
lret
push
scas
sub
xchg
mov
stc
jns
mov
inc
ss
shll
nop
jecxz
jnp
xchg
jne
push
xchg
jmp
pusha
pushf
xchg
incb
or
push
push
and
inc
mov
iret
mov
iret
inc
dec
leave
adc
jo
repz
rcr
test
dec
cs
mov
mov
mov
loope
incl
movsl
cmp
jge
pop
addr16
shrl
add
lcall
js
mov
ljmp
cmp
arpl
cld
xchg
das
ljmp
mov
sbb
loopne
scas
pop
push
loope
mov
xchg
sbb
sub
and
pop
add
or
arpl
lds
jo
out
lret
xor
adcw
frstor
jno
pop
inc
enter
ja
cwtl
pop
ljmp
pop
movsb
ret
xchg
add
sub
fnsave
jae
add
inc
push
sbbb
pop
cs
cmpsl
push
cmp
jns
inc
pop
addr16
sub
es
xchg
das
lahf
mov
ret
lret
cmp
cltd
add
add
mov
mov
popf
lret
sbbl
sbb
fbstp
push
jno
xor
pop
or
jnp
xor
cmc
out
sti
test
and
scas
repnz
jl
in
stos
cld
aam
hlt
aas
mov
mov
jecxz
xchg
mov
push
rcll
push
push
xchg
push
mov
adc
aaa
fisttps
and
fbstp
fldenv
add
pop
mov
data16
add
es
sbb
inc
mov
xchg
or
pop
mov
repnz
push
hlt
scas
cs
hlt
pop
popa
mov
loop
sub
jb
cmpsl
mov
rdpmc
sbb
adc
sub
push
in
xor
mov
ret
shr
jae
ljmp
jmp
mov
lock
and
data16
dec
xor
mov
insb
sbb
fildl
mov
shll
outsl
jmp
aaa
fwait
das
mov
lret
sti
fwait
addl
imul
pop
sbb
pushf
sub
std
pop
rcl
adc
cltd
jns
hlt
mov
jmp
in
xor
dec
push
lock
dec
movsl
pop
xchg
jecxz
cmpsb
push
andl
mov
push
ffree
jae
addr16
push
in
pop
sahf
lahf
stos
xor
nop
decb
insb
in
adc
shlb
loopne
lock
jp
and
inc
add
lea
repz
push
cmp
stos
push
lcall
loope
inc
lods
adc
and
ret
xor
adc
out
mov
decl
loopne
es
mov
loopne
adc
pop
js
stc
sbb
mov
dec
xchg
sub
scas
stc
sbb
ja
add
sub
inc
stc
outsl
jg
push
xor
mov
push
push
xor
movsb
pop
dec
mov
push
repz
jbe
shl
sub
dec
call
jbe
sub
mov
divb
cwtl
and
sub
cmp
push
lods
sbb
pop
sub
push
cmpb
imul
addl
xchg
mov
jecxz
mov
cmp
lret
sbbb
sub
cmp
dec
push
or
mov
bound
jge
ret
cmp
not
int3
iret
push
mov
iret
pop
shll
scas
ja
mov
fisubl
pushf
pop
movsb
add
adc
pop
int
push
out
push
mov
sbb
ljmp
xlat
fptan
movsb
sahf
and
insb
xchg
sub
addr16
pop
test
adc
cld
or
mov
clc
push
movsb
mov
call
sbb
pop
push
loop
mov
clc
jae
into
inc
notb
cmp
cld
jmp
mov
andb
mov
or
inc
or
adc
mov
cli
xor
rclb
ljmp
sbb
mov
in
into
test
daa
adc
pop
shll
add
inc
fcompl
int
pop
outsb
xchg
fs
mov
lods
lds
pop
mov
and
mov
jns
js
fcmovbe
mov
push
subl
roll
nop
call
js
pop
das
ficoms
mov
add
inc
pop
into
pop
leave
or
push
rol
fidivrl
out
jg
and
push
push
cmpsb
xchg
out
jo
lret
mov
mov
imull
in
pop
mov
movsl
mov
jp
outsl
push
inc
pop
push
jae
mov
repnz
aad
mov
and
sub
popf
push
daa
test
jb
pop
jnp
out
rclb
sbb
adc
pop
mov
nop
stc
xchg
jo
into
push
nop
push
lret
and
xlat
loop
mov
popa
das
jg
mov
sbb
mov
enter
repz
pop
pop
push
xchg
mov
xchg
divb
mov
mov
jle
fiadds
jae
jmp
jns
addb
int
cld
pop
pop
mov
jmp
lret
aas
xlat
es
out
and
pop
fldl
bswap
mov
shl
adc
mov
mov
xchg
inc
pop
mov
fnstcw
sti
add
pop
pop
sbb
sbb
add
push
push
pop
stos
sbb
and
add
lods
mov
fcomps
nop
cmp
shl
dec
push
mov
lret
adc
jl
scas
adc
rclb
fucom
fs
sar
jae
and
es
js
fwait
pop
repz
fiadds
xlat
push
xor
sarb
cltd
or
inc
mov
iret
mov
xchg
mov
xor
cmp
xchg
mov
mov
aas
mov
idivl
in
mov
lock
adc
mov
movsb
imul
push
sub
stos
jno
jmp
icebp
adc
loopne
sub
jb
add
dec
pop
pusha
outsl
test
pop
leave
cmpsb
jnp
sbb
sub
or
or
addr16
lock
mov
pop
mov
pop
push
mov
adc
mov
jmp
fwait
cmp
cmc
jno
loope
insl
inc
xchg
xchg
sti
jp
subb
cmpsb
xor
jne
cmp
in
fisubrs
jae
call
jno
pop
aas
cmc
or
lcall
fstpl
push
int
jb
push
sub
push
pop
mov
rorb
jecxz
js
xor
aas
in
ret
out
rorb
lcall
adc
leave
xchg
and
and
frstor
jmp
inc
rcrl
popa
dec
rorb
mov
fiaddl
fiadds
mov
ret
xchg
shrb
push
cli
jno
cmpsb
mov
adc
inc
xchg
and
aad
sahf
adc
mov
pop
xor
pop
test
imul
pop
leave
mov
scas
sub
push
mov
outsl
mov
cmp
inc
in
adc
dec
cli
and
gs
mov
hlt
mov
and
aad
leave
sti
movsl
sahf
jnp
sahf
stos
aaa
cmp
ret
aam
mov
jmp
pop
push
xor
jmp
mov
sub
pop
cmp
jecxz
dec
mov
fwait
movsb
jmp
pop
iret
sub
insb
jmp
sub
int3
jge
bound
and
fcomi
out
fbld
loope
add
loopne
pop
mov
push
repnz
xchg
out
pop
into
cmc
cwtl
testb
aad
mov
outsb
hlt
mov
inc
jmp
je
clc
sub
ficompl
sbb
in
dec
out
out
cltd
cmpsb
pop
lret
iret
int
adc
mov
outsb
ficomps
insl
xor
lahf
sbbb
cmp
xchg
div
mov
stos
testb
push
into
test
pop
mov
lea
icebp
daa
loope
cmpsl
mov
push
popa
test
xchg
pop
ljmp
cli
sub
notb
mov
daa
mov
pop
inc
pop
push
jmp
mov
aad
and
mov
sahf
sbb
cld
or
mov
pop
addr16
adc
sbb
loope
data16
lcall
cwtl
cmp
cli
adc
icebp
adc
jmp
scas
stos
outsl
js
daa
lahf
lahf
or
lcall
ja
sub
shl
pop
fnsave
or
mov
jo
lods
add
push
movsl
int3
in
sbb
mov
in
lret
inc
test
add
enter
scas
test
push
cld
das
mov
call
outsb
call
ret
rcrb
jnp
insb
inc
jnp
mov
dec
and
out
outsb
mov
ss
shrb
movsl
nop
mov
inc
jae
mov
push
push
jg
adc
pop
fisttpl
fs
sub
push
xchg
insb
or
fisubrs
jne
xor
xor
mov
dec
sti
push
push
mov
xchg
and
cmp
bswap
push
iret
mov
mov
jbe
mov
outsl
fcoml
lahf
mov
xchg
mov
jl
push
xor
callw
test
jle
ret
jp
and
adc
add
mov
push
into
lret
sbb
fucomi
aas
lahf
das
add
dec
pop
jl
inc
call
bound
clc
subb
mov
jno
cmc
jl
jp
in
add
mov
add
mov
call
outsb
orb
ret
cmc
mov
cmpsb
add
inc
mov
popa
jl
cmp
aaa
mov
adc
ds
mov
fnstsw
daa
cli
mov
dec
iret
dec
sbb
xchg
push
nop
pop
mov
inc
out
xor
ja
sbb
inc
cwtl
subl
push
mov
mov
push
outsb
loope
pop
fnstsw
repz
lret
aaa
fimuls
scas
pop
repz
mov
sti
or
mov
gs
test
repz
pop
xchg
xchg
jl
lock
adc
mov
popf
dec
sub
or
aam
loope
dec
cmp
rorl
jl
ljmp
jne
pop
push
ret
push
out
push
push
rcr
imul
jnp
fisubl
jl
bound
mov
into
mov
shlb
jmp
and
adc
cmc
inc
mov
icebp
xlat
inc
xor
adc
jbe
lret
cli
addr16
push
aam
or
add
adc
flds
inc
scas
pusha
jno
shll
xchg
xchg
enter
es
aas
sub
lret
in
jnp
jnp
data16
je
cltd
in
pop
cld
movsb
stos
std
in
ret
sahf
dec
xor
fstps
mov
dec
inc
mov
stos
stc
xor
push
sub
or
and
add
add
xchg
jle
xchg
ret
jnp
cmp
sbb
jl
rcll
scas
xor
xor
push
pushf
jmp
cli
out
dec
jo
ret
popf
dec
arpl
xchg
lahf
repz
arpl
mov
push
cmovp
mov
push
push
dec
and
and
leave
mov
sbb
stc
mov
je
xchg
ret
cmp
jmp
lret
ret
push
jge
sbb
push
xchg
adc
inc
addl
adc
movsb
or
push
add
jmp
xchg
dec
test
push
fadds
fsubrl
inc
test
pop
and
sbb
jmp
mov
into
push
and
xlat
mov
cwtl
je
inc
aaa
xchg
lret
xor
sub
push
xchg
push
jns
mov
loope
push
pushf
pop
and
imul
in
aaa
inc
mov
stos
mov
out
cmp
mov
sahf
inc
jle
pop
hlt
and
mov
lahf
mov
ret
push
enter
mov
lea
mov
jns
sbb
mov
pop
cmpsl
fwait
sub
bound
push
dec
int
mov
mov
imul
jbe
mov
aad
adc
scas
adc
cmpsb
add
sti
adc
test
cmp
pop
pusha
jb
mov
pop
push
scas
push
add
pusha
stos
shll
cltd
mov
adc
call
addr16
int
cmp
xchg
ficomps
mov
mov
shlb
int
ja
jecxz
push
mov
mov
dec
push
cltd
jo
hlt
jno
xchg
jns
cltd
adc
cmp
xchg
lods
jb
inc
and
or
push
je
das
mov
rorl
scas
sub
pop
cmpl
mov
sbb
jo
in
lods
mov
mov
and
mull
out
mov
cmp
dec
inc
and
pop
movsb
pusha
xor
movb
push
fldt
adc
sbb
sbb
repnz
and
ficompl
mov
subl
imul
lock
in
dec
inc
lahf
cmpsb
shl
dec
bound
mov
mov
push
hlt
sub
in
inc
pop
push
add
adc
test
imul
pop
repz
inc
mov
xchg
cmp
test
fsubr
and
loopne
aad
dec
pop
jg,pn
pop
or
call
sbb
xor
mov
mov
mov
shlb
bound
xchg
mov
and
fcmovnbe
lret
jb
push
push
jbe
add
int
test
or
or
mov
add
sub
fmuls
scas
inc
ljmp
out
inc
aad
xchg
js
test
test
xor
sub
mov
cmp
cmpsb
jge
jbe
jp
std
mov
or
and
cmpsb
push
divb
cmpsl
add
js
leave
sbb
dec
xlat
push
lds
repnz
inc
cli
cld
mov
sub
sti
sahf
cmp
dec
roll
pop
xchg
pop
mov
test
inc
aas
in
xchg
leave
fs
mov
and
add
jmp
sbb
bound
dec
add
aam
push
fs
call
mov
lock
push
icebp
inc
and
sub
jmp
inc
rorb
inc
sbb
imul
enter
imull
insl
mov
int
xor
lret
int3
ret
mov
lret
out
xchg
xor
scas
mov
push
shlb
or
add
das
xchg
scas
mov
pop
add
push
xchg
push
ret
dec
imul
cmp
arpl
in
or
cwtl
imul
out
pop
cmp
adc
cmpsb
notb
je
ljmp
sbb
push
bound
aam
subb
lret
mov
jbe
jge
dec
xor
cmp
shll
sbb
push
add
dec
adcl
in
jne
and
push
mov
cwtl
sahf
push
adc
sub
mov
and
mov
mov
sbb
movsl
and
xlat
dec
add
fs
addb
mov
fwait
in
movsl
xchg
dec
int3
in
into
test
jmp
mov
bound
inc
out
fsubrs
push
in
cli
leave
mov
scas
push
jo
sbbb
ret
out
adc
cs
mov
mov
add
jmp
sahf
std
ds
fadds
sbb
mov
jnp
les
adc
mov
mov
hlt
test
adcl
mov
fsubs
clc
scas
xor
mov
ja
call
jg
lock
ljmp
imul
es
push
mov
leave
xorl
dec
mov
sub
jbe
cmp
mov
add
arpl
cmp
xchg
and
aam
loope
inc
imul
sahf
cwtl
mov
es
inc
pop
les
ljmp
inc
pop
clc
stc
pop
pushl
out
lahf
lahf
cmp
fldl
daa
jl
push
pop
mov
cmpsl
fld
add
ljmp
mov
pop
lea
adc
fs
shlb
push
cmc
jb
jnp
pusha
int3
sbb
add
sub
clc
pusha
sub
mov
mov
push
aad
add
add
fcmovb
vmwrite
xchg
mov
cmpsl
test
mov
iret
and
dec
cltd
xor
jmp
int3
leave
mov
stos
stos
ja
xor
mov
mov
or
jb,pn
out
stc
jl
mov
and
cmp
cmc
scas
xor
mov
jno
jae
sbb
js
or
icebp
cmp
negl
xchg
movsb
jnp
lret
fdivl
xchg
jns
loop
jge
andl
dec
testl
sahf
enter
movsl
cmp
jae
or
push
test
add
sbb
cmp
scas
mov
and
loop
movsb
sub
mov
enter
mov
add
in
xlat
xchg
sbb
stos
pop
push
ds
cmp
push
mov
hlt
xor
xor
mov
jmp
cmp
add
mov
mov
pop
pop
das
cltd
cwtl
or
mov
fwait
pop
or
push
je
xchg
mov
xchg
call
mov
xchg
int3
dec
ja
out
and
or
arpl
sub
xchg
sbb
mov
pusha
pusha
popa
addr16
fisttps
test
ret
lret
loopne
cmp
mov
fimull
cmp
divps
cmpsl
jns
aad
pop
dec
pop
ja
mov
dec
scas
xchg
and
jecxz
dec
mov
cld
insb
push
cmp
push
xor
leave
js
mov
pop
ja
add
leave
lahf
cmp
inc
and
js
pop
xchg
repnz
dec
sub
nop
lods
pop
clc
and
inc
repnz
fcomps
pop
and
inc
mov
out
jnp
dec
dec
or
iret
fs
ljmp
pop
ja
jbe
jb
out
mov
out
mov
xorb
adc
loopne
cmp
add
inc
and
nop
sbb
inc
out
popl
add
and
inc
fbld
and
test
lcall
stc
adc
xchg
icebp
dec
int
cmc
aas
icebp
jp
pushf
cld
bswap
loope
pop
xchg
inc
fists
mov
ret
daa
dec
mov
or
mov
mov
aas
jmp
out
pop
and
jns
inc
imul
push
sti
cmp
std
push
into
aam
repz
aam
jbe
xchg
mov
mov
int
mov
les
pop
ds
jle
and
xchg
cltd
aaa
leave
movsl
test
rorl
mov
pushf
and
and
mov
dec
sbb
inc
lock
xchg
mov
call
cld
ret
pop
repz
cmp
lods
sbb
jecxz
add
add
and
aam
mov
xchg
mov
sub
dec
cmp
adc
incl
icebp
push
out
lods
push
and
cltd
jo
cmc
xchg
add
jge
fs
push
mov
dec
xchg
aam
mov
add
test
sub
push
into
clc
cmp
mulb
shlb
xchg
sub
and
pop
in
xlat
rorb
xchg
bound
lock
cmp
repnz
ret
in
xchg
dec
shll
sbb
popf
mov
or
rol
adc
pop
jecxz
cmp
inc
and
mov
int
insb
pop
jns
hlt
loop
cmp
inc
outsb
add
mov
ljmp
and
out
addl
xlat
push
mov
xor
sub
ja
call
inc
icebp
in
push
push
or
xor
outsl
test
mov
mov
lcall
cmp
js
xchg
lods
dec
jge
jns
rolb
lret
sbb
xor
or
loopne
stc
pop
popa
insb
mov
inc
sub
popa
outsb
testl
mov
mov
mov
insb
shl
mov
cmpsl
jecxz
out
fs
call
pop
int3
out
and
popf
shrb
rorb
jae
enter
aam
cmp
pop
ret
cld
jmp
mov
ljmp
mov
push
xor
mov
sar
shll
xor
subl
or
outsb
rorl
jg
xchg
cmc
hlt
popf
ret
pop
inc
or
sub
lret
mov
test
mull
fisttpl
aad
arpl
es
std
scas
mov
dec
adc
sub
push
mov
pop
sub
mov
ret
mov
jno
mov
xchg
cs
mov
aad
adc
add
dec
inc
sub
push
xchg
xor
test
cli
inc
daa
mov
dec
stos
or
jle
sub
mov
lcall
cmc
xchg
mov
shrl
stc
inc
in
aad
pop
subl
mov
adcb
nop
mov
mov
stos
mov
mov
loope
push
lods
fadd
cmc
movsb
loope
adc
dec
gs
jbe
and
lds
push
mov
in
scas
das
loop
mov
loop
enter
stos
xchg
lret
add
mov
aad
mov
adc
push
adc
mov
dec
inc
clts
fcoms
jmp
notb
neg
add
mov
sbb
inc
rcrl
lea
pop
sbb
mov
ja
dec
mov
fimuls
inc
icebp
push
into
and
movsb
nop
cmpsl
dec
or
bound
sbbb
pop
ret
fnstcw
jecxz
lods
leave
in
inc
push
add
sub
lea
push
andl
xor
imul
mov
mov
shlb
adc
lea
jno
xchg
jl
or
jnp
mov
dec
sti
xchg
cmp
mov
shlb
mov
movsb
jno
cmpsl
jmp
fs
dec
test
add
lret
repnz
cmp
mov
jbe
jmp
push
or
xchg
pop
lock
mov
test
xor
mov
decb
lcall
sti
mov
arpl
adc
bound
bound
push
mov
inc
ret
cmp
jnp
outsb
xchg
inc
adc
adc
lds
push
addl
or
pop
adc
and
adc
fdivrl
jnp
rol
or
test
mov
loop
xor
fistpl
dec
popa
icebp
sbb
addr16
dec
mov
push
ja
adc
stos
mov
loop
xor
enter
dec
sub
add
pop
inc
or
push
ljmp
add
subb
int
sub
or
ret
jl
scas
bound
jbe
ds
js
mov
cs
sti
fidivl
ja
les
or
inc
jp
lret
xchg
pushf
push
incb
sbb
push
dec
mov
les
or
xchg
mov
out
lret
jns
or
adc
mov
mov
lcall
xchg
es
cmpsb
mov
add
in
pop
push
and
in
les
mov
out
jnp
dec
je
sbbb
adc
adc
mov
dec
add
push
fcoms
push
arpl
push
lods
jecxz
pushf
inc
mov
mov
daa
cmpsl
cmp
add
jl
gs
pushf
cmpsb
add
mov
scas
pop
das
popf
push
movsl
test
test
das
rorl
mov
mov
inc
inc
push
push
bound
xor
sti
jmp
add
or
push
sbb
loopne
gs
lock
test
data16
sub
loope
or
ljmp
ret
or
xchg
cmp
fs
or
fimuls
mov
inc
imul
ficompl
jge
pop
into
sbb
pushf
push
fcompl
std
sub
pop
lods
fcmovnu
pop
adc
mov
stos
bound
scas
xor
dec
aad
or
aad
sbb
mov
mov
xorl
fs
loop
pop
sbb
sarb
imul
mov
adc
rcll
std
mov
outsb
jmp
call
xor
scas
and
mov
pop
data16
fimull
lret
scas
imull
stos
cmp
xorb
xchg
sbb
movsl
lods
add
push
xchg
in
fisubrs
lock
call
mov
jmp
xor
mov
mov
jl
pop
rcll
and
adc
inc
sub
sbb
cmp
inc
adc
push
push
mov
xchg
in
cmp
loope
hlt
dec
ficompl
mov
or
pop
or
sbb
dec
cmp
and
aad
test
pop
xchg
out
rolb
push
loope
mov
ret
pop
jbe
xor
pop
test
xor
aas
sbb
cmc
and
into
loope
add
hlt
xchg
gs
push
stc
jb
mov
inc
subl
pusha
sahf
in
xor
mov
cmp
mov
and
and
pop
pop
mov
cmp
xchg
jbe
aaa
cmpsb
xor
dec
push
mov
add
xlat
fimuls
sbb
and
dec
gs
das
mov
cmpsl
xor
pop
lock
fwait
pop
and
add
repnz
es
ljmp
jl
clc
mov
decl
lcall
jb
xadd
add
fwait
sbb
out
mov
cltd
inc
das
gs
aaa
mov
cltd
fidivrl
sbb
adc
or
sub
ret
xchg
sbb
insl
out
fs
pop
and
rorb
adc
int
or
scas
inc
js
xchg
lret
lods
fisubrl
dec
out
sahf
shr
jl
and
je
mov
rcll
testb
or
outsl
clc
aam
les
push
scas
test
pushl
fists
mov
test
jmp
movsb
std
xchg
sarb
lea
cltd
or
dec
movsb
jno
cmp
daa
mov
push
aaa
clc
popf
insl
push
add
test
sub
mov
xchg
cmp
mov
jne
inc
sub
adc
mov
mov
scas
sub
clc
push
bound
fdivrs
inc
loopne
aam
orl
push
shlb
rorb
aaa
fsubr
sbb
mov
pushf
les
decl
test
jae
aaa
push
int
out
insb
mov
mov
xor
gs
jo
mov
cmpsl
out
add
inc
lea
shll
sub
fcoml
jbe
fbstp
int3
and
pop
mov
dec
lret
xor
add
sbb
jne
arpl
sub
add
dec
scas
sbb
push
les
lods
push
inc
clc
ljmp
xlat
jb
dec
in
sub
push
sti
xchg
lds
shlb
add
ds
inc
cmc
mov
mov
movsb
mov
push
pop
ljmp
inc
mov
scas
inc
mov
mov
mov
stos
add
jne
add
sub
outsl
hlt
ror
push
lea
out
jg
adc
lock
sti
jle
and
adc
dec
stos
cli
push
stos
arpl
lea
adc
add
adc
mov
into
fsub
pop
dec
int
or
jne
jae
lock
jecxz
mov
xchg
lcall
xchg
fistps
jns
pop
jae
daa
mov
rclb
shr
cltd
xchg
bound
jg
gs
bound
push
sbbb
xor
ss
ja
pop
and
mov
cld
rolb
mov
and
mov
inc
sub
mov
cmp
fwait
ds
mov
negl
popa
adc
test
cmc
loope
ljmp
iret
sub
or
test
mov
sbb
inc
adc
inc
iret
push
add
inc
dec
jno
or
sub
ret
xor
or
jne
xor
iret
and
sbb
repz
cmc
mov
jecxz
test
dec
sub
stos
sbb
adc
push
push
cmp
stos
test
jle
out
or
movsl
mov
pop
or
and
movsb
dec
orb
test
xchg
movsb
jl
lahf
mov
sbb
xor
xchg
out
or
filds
popf
jp
sub
jne
fstpl
lea
pop
pop
mov
push
mov
pushf
sbb
xchg
mov
lods
cmc
adc
jmp
jmp
ss
pop
andb
pop
push
mov
xor
mov
ret
aad
or
fstp
and
cwtl
stos
cmp
sub
lods
cmp
pop
nop
cs
push
repz
jge
andl
dec
pop
fwait
mov
out
fimuls
jno
push
dec
mov
push
or
out
jo
imul
mov
test
and
fs
jb
ret
mov
rcrl
pusha
ret
shlb
int3
nop
pop
mov
cmp
dec
decl
fistl
and
add
xor
xchg
sarb
and
inc
push
jo
nop
mov
mov
int3
and
add
mov
in
sbb
lods
xchg
mov
push
addr16
xchg
mov
mov
add
imul
aad
push
mov
add
ret
stos
testb
jp
cltd
rdtsc
cmp
cmp
popf
push
ret
pop
in
fcompl
pop
cmp
cltd
fadds
xor
not
jne
in
jne
mov
xor
cmpsb
pop
adc
adc
jecxz
sbb
sbb
sahf
push
sbb
xor
lcall
or
fmull
outsl
stos
arpl
insl
mov
pop
xchg
testb
hlt
cli
mov
test
mov
xchg
push
iret
sub
xchg
int
jns
pop
fisubrs
movsl
adc
xchg
or
pop
mov
cmp
repnz
les
mov
fs
es
cs
stos
xor
vpsrad
xor
pop
fsubl
out
xchg
jae
nop
push
icebp
jmp
add
enter
jnp
xlat
js
sub
push
add
repnz
xchg
push
and
pop
fwait
and
xchg
enter
mov
in
jb
push
into
mov
fsubl
mov
add
out
jge
sbb
aaa
mov
push
test
jecxz
pop
out
sbbb
lods
mov
dec
rorb
outsb
ljmp
or
mov
add
pop
cmpb
scas
inc
cmp
dec
dec
in
icebp
adc
mov
xor
mov
lods
add
loop
in
inc
cltd
fsts
fadds
call
lcall
ss
jg
cmp
inc
stc
xchg
mov
dec
pushf
push
xchg
rcrl
inc
pop
fs
dec
stos
in
pop
setne
xchg
rclb
push
je
daa
jb
xchg
mov
inc
mov
sbb
xor
iret
stos
sahf
clc
mov
and
clc
bound
leave
mov
vandnps
jno
add
scas
pop
movsl
mov
cltd
shlb
lods
stc
pop
aaa
arpl
xlat
mov
mov
pop
pop
cmc
push
cs
jbe
sub
outsl
mov
mov
fcmove
inc
and
inc
push
hlt
mov
sub
icebp
ret
movsb
sbb
fisubl
pop
popf
lcall
sbbb
push
shll
dec
xchg
mov
mov
adc
mov
add
sbb
popl
bound
push
fs
scas
js
clc
jns
push
add
mov
pop
loopne
cmpsl
cmp
jle
xor
test
sub
test
in
lods
test
pop
lcall
cmp
out
or
into
lret
inc
in
push
enter
add
out
jecxz
jbe
xor
jg
cmp
lods
push
xchg
and
leave
stc
shrb
daa
int
addl
aas
sbb
jo
sbb
mov
xor
push
fstl
adc
pop
mov
jb
sti
sbb
mov
int3
lock
inc
pusha
scas
into
daa
repz
push
or
jmp
outsl
adc
shrb
cmp
scas
mov
adc
call
ss
xlat
or
and
inc
mov
lods
filds
sub
cmc
clc
xchg
ficompl
outsb
sbb
sub
aaa
pop
jmp
les
add
lods
xchg
dec
xchg
mov
pop
jl
in
ja
aam
sti
jecxz
adc
movsl
cwtl
enter
fnstcw
or
push
lock
jl
pop
test
push
cmpsl
xlat
or
enter
xor
sarl
rcrl
mov
shrl
sbb
insl
xchg
lret
sbb
mov
test
cmp
clc
mov
bound
and
idivl
sti
xor
test
lods
in
push
push
out
das
lahf
test
roll
sahf
lcall
sbb
xchg
movl
scas
jle
add
mov
call
repz
inc
mov
movsb
repz
frstor
int
xor
fmul
loopne
jno
mov
add
hlt
enter
sbb
stos
adc
call
add
mov
scas
fcmovne
popf
mov
fcompl
sbb
xor
je
or
lods
in
pmuludq
or
fldenv
adc
push
sub
or
inc
xchg
jo
xchg
call
push
and
push
test
mov
mov
test
xchg
popf
lcall
add
mov
add
mov
fs
push
push
dec
dec
push
adc
push
mov
iret
leave
ret
movl
ficoml
imul
out
push
and
xor
mov
jbe
nop
outsl
sub
mov
mov
inc
fimuls
and
and
jp
movsl
lds
cmp
push
outsb
jle
adc
xchg
pop
call
jl
adc
jg
add
sub
xor
sbb
stos
fdivrp
mov
cmp
and
xor
jns
inc
xchg
lods
nop
iret
add
pop
enter
xor
xor
inc
lret
lea
loopne
add
mov
inc
push
xchg
leave
push
mov
bound
test
std
jne
xchg
pop
push
lods
adcl
push
cmc
push
push
dec
sub
sub
arpl
iret
cmpsl
mov
pop
cwtl
test
into
mov
imulb
xchg
scas
lock
pop
addb
sbb
sub
push
mov
mov
orl
jne
lds
cmp
or
js
aad
gs
dec
mov
xor
push
push
aaa
mov
mov
inc
movsb
test
mov
lock
fucom
mov
pushf
push
sbbb
ror
stc
repz
ss
sbb
das
pushf
xchg
leave
test
popa
mov
and
pop
sbb
inc
add
movsb
add
xorb
mov
into
jg
dec
lcall
mov
xchg
pop
dec
xchg
xchg
inc
call
xor
push
mov
ret
sub
xchg
mov
call
xchg
clc
push
out
add
push
ja
sub
inc
cmp
out
pop
mov
mov
xor
dec
inc
mov
pop
mov
sbb
mov
int3
notb
loopne
jae
dec
loopne
dec
test
push
shll
pop
pushf
xlat
xchg
cmp
dec
shlb
add
mov
jo
ss
inc
jmp
je
shll
mov
adc
imul
and
loop
mov
mov
cs
add
jle
out
ljmp
adc
lahf
pop
mov
movsl
adc
sarl
add
inc
cmp
push
ret
push
loop
add
dec
xor
lods
iret
pop
test
insl
jb
lahf
js
aam
mov
stos
fcoms
iret
popa
cmp
jmp
mov
mov
inc
sahf
int3
adc
or
xchg
adc
and
and
ds
int3
sbb
jnp
xor
cmp
std
add
fdivrs
test
stos
ficoml
or
sbb
mov
rorl
sub
in
xchg
jbe
ds
insb
fwait
push
and
mov
xor
negb
jae
out
mov
xor
mov
cmc
pop
pop
dec
pop
je
mov
xchg
inc
cmp
cltd
jo
mov
adc
andl
adc
cli
pop
and
ja
stc
and
cld
leavew
je
lcall
inc
loop
lahf
lcall
xor
jle
fstps
fcmovbe
call
mov
lock
into
adc
adc
in
jl
or
cmpsb
jp
cmp
ret
rorl
inc
sti
fstpt
dec
sbb
lods
and
adc
lea
clc
jle
pop
shr
test
jbe
ljmp
orl
and
nop
imulb
lds
mov
in
rcl
push
inc
icebp
fs
scas
in
repnz
xlat
jb
mov
popa
sub
inc
xchg
push
ljmp
repz
js
fwait
push
or
cmpsl
adc
rcll
out
push
sti
in
jl
jecxz
dec
xor
stos
repz
or
push
jg
mov
imul
push
loopne
and
adc
pop
lods
testl
sahf
pushf
pop
and
cltd
inc
push
adcl
push
xchg
push
push
fisubs
arpl
jp
mov
mov
js
fmul
nop
movsl
movsb
mov
xlat
fs
push
stos
pop
xchg
or
xchg
imul
call
push
inc
sbbl
sbb
out
ja
or
mov
cmp
mov
mov
cmpsl
subl
adc
pmaxsw
xor
fbstp
push
imul
and
shl
mov
mov
dec
push
push
push
rcrl
push
addr16
cmp
mov
rorl
dec
lcall
xchg
rcl
xchg
jl
mov
stc
or
lock
fimull
inc
cmp
inc
lea
movsb
dec
lret
hlt
out
fucomp
call
dec
and
sbb
cmp
int3
int3
xor
stc
mov
aaa
lods
arpl
test
xor
xchg
sbbb
call
adc
add
inc
sbb
enter
test
jecxz
insl
insl
inc
cs
hlt
xlat
dec
je
fimuls
push
pop
pop
ljmp
mov
enter
fcmovnu
icebp
push
loopw
inc
aaa
jp
lret
pop
or
pop
mov
repz
dec
loop
mov
inc
lock
adc
inc
scas
adc
jp
rorl
mov
es
ljmp
cmp
idiv
jb
imul
and
rcll
adc
ds
les
jmp
aaa
jle
movsb
jg
popf
outsl
push
jle
insl
inc
mov
jmp
pop
popa
pop
lahf
sub
lea
les
mov
add
in
pop
ja
sbbb
ret
lods
mov
stos
push
lods
mov
es
fmuls
pop
rol
negb
sub
xorb
jae
push
cli
pop
cmp
jg
jo
add
dec
jmp
sub
int3
es
mov
cmp
jmp
std
mov
jge
cli
test
sbb
test
fsts
jecxz
rcrl
iret
mov
pop
decl
out
xor
movsb
xchg
idivb
fs
cmp
push
cltd
repnz
aas
jns
iret
push
out
cs
rcrl
pop
jo
inc
dec
mov
inc
sarb
lods
push
test
ss
and
cwtl
das
gs
shrb
cwtl
inc
fsubp
mov
cld
sub
test
or
xchg
cld
or
push
sbb
mov
sub
movsl
int3
push
xchg
outsb
jno
je
mov
push
cmpsl
stos
cld
dec
aam
mov
popa
and
fistps
xchg
aas
xchg
lahf
addr16
cmpsb
jecxz
mov
xor
movsb
adc
xchg
mov
mov
pavgb
cmp
mov
mov
and
ret
mov
mov
std
dec
jb
aas
aam
das
mov
adc
mov
cmp
mov
cmp
sub
divb
outsl
sbb
or
ss
dec
je
popf
mov
fmuls
cltd
inc
jg
loop
mov
dec
lahf
ret
mov
ror
cmp
leave
fadd
cmpsl
fcoml
pop
jecxz
and
xchg
fstpt
cmp
int3
call
into
addb
lret
lcall
sub
fs
hlt
arpl
fdivl
jle
adc
cmc
shrl
xor
pop
mov
je
xchg
arpl
mov
stos
jge
cmp
mov
pop
push
dec
cwtl
dec
jbe
mov
adc
shrl
mov
jle
aaa
es
xchg
mov
cld
shrl
xlat
jo
xor
das
push
enter
sub
jle
jmp
not
xor
push
sub
repz
lods
mov
sti
xchg
xchg
pusha
orb
outsb
dec
fucomi
or
je
jbe
jl
sahf
or
in
outsb
xor
mov
loop
sarb
pop
fwait
sub
int
adc
rcr
sti
daa
movsl
hlt
pop
pop
sbb
lods
aaa
int3
add
mov
mov
xor
push
xor
lahf
xchg
sbb
xchg
das
sarl
ds
sahf
or
jmp
daa
sub
push
pop
in
aas
inc
insl
test
rcrl
ja
push
mov
lahf
mov
pushf
cmc
gs
sarb
mov
lock
adc
sub
test
in
iretw
aas
sub
ret
fidivs
jmp
or
scas
cmp
pop
scas
mov
xor
js
cmp
cmpl
ror
adc
sub
xor
sub
cmp
add
jo
xor
addr16
out
xchg
mov
lods
repz
sbb
cmp
add
lods
test
inc
fs
std
movsl
aam
scas
xor
imul
lahf
notb
xchg
jmp
popa
sub
movsb
sbb
cmp
mov
push
and
inc
mov
jle
out
mov
cmp
je
or
cmpsl
cwtl
out
jne
cmc
repnz
shll
sub
mov
jns
add
scas
inc
in
rorl
out
pop
repz
adc
rcrb
aam
jb
inc
lock
lcall
in
cmp
cld
xchg
rolb
aas
mov
std
ror
out
mov
arpl
ret
jb
push
jbe
addr16
imul
dec
jno
xor
dec
das
int
rcl
mov
call
jns
movsb
outsb
data16
mov
add
adc
ljmp
cli
lret
ljmp
stos
or
push
cmc
mov
jp
int3
shrl
mov
loopne
fsubs
lds
fimuls
or
jne
ss
faddp
pusha
pusha
push
gs
mov
and
stos
das
ds
cs
cld
arpl
xchg
xchg
inc
lods
mov
arpl
clc
pop
dec
sub
ljmp
mov
rcrl
jb
les
cmp
mov
inc
mov
sti
outsb
fcompl
loopne
push
jg
push
pop
lds
inc
rcrl
adc
mov
dec
push
scas
mov
ds
int
clc
push
in
mov
mov
push
cltd
loopne
sub
sbb
aam
sahf
mov
lods
icebp
data16
jp
les
out
pop
sub
int3
adcl
lods
iret
es
mov
xchg
imulb
sub
mov
sbb
xchg
fidivs
test
sub
scas
inc
inc
fcomps
xor
lcall
movsb
pop
sub
lret
jbe
in
dec
push
insb
push
ret
iret
xchg
dec
jb
movsb
mov
inc
cmp
or
jae
or
add
lret
xrelease
clc
es
das
push
xchg
push
pop
adc
cmp
mov
xchg
adc
cmp
pop
mov
aas
imul
into
outsl
add
jp
stos
aaa
insb
mov
pushf
jo
pop
fistl
in
ret
movsl
aam
rorl
das
add
mov
das
push
and
add
scas
pop
inc
xchg
and
scas
jno
stos
imul
mov
mov
fmuls
add
cmp
lock
roll
mov
imul
lret
pop
jge
cltd
sahf
ljmp
movsb
dec
rcl
xor
push
inc
movb
adc
movsl
ja
sub
dec
sahf
pop
mov
fwait
cld
out
xchg
bswap
and
xchg
mov
repnz
and
pop
stos
or
and
push
ss
pop
adcl
fisttpll
inc
push
fs
inc
jl
jns
jl
inc
cli
movsl
adc
scas
pop
push
imul
imul
push
or
clc
push
and
or
rcrb
and
push
mov
fld
inc
add
out
aad
mov
dec
xchg
loope
and
out
in
sbb
cmp
shr
or
push
sahf
pushf
cmp
xchg
pop
enter
sub
lret
inc
jmp
jmp
adc
mov
push
xchg
add
ret
sub
js
cmp
push
add
lret
xchg
sub
fucomi
push
jb
into
push
jne
xchg
xor
pop
cmp
push
fnsave
js
roll
xchg
add
pop
mov
jmp
int3
adc
xchg
jmp
mov
jmp
add
mov
push
pop
push
out
scas
mov
loop
out
dec
cmp
jp
mov
pop
jmp
sbb
mov
es
cmp
sbb
sub
into
sbb
mov
ss
push
pop
inc
ficoms
cltd
daa
mov
outsl
and
lret
cmp
mov
pushf
jle
aas
mov
pop
aad
pop
orb
in
rclb
cld
xor
jmp
cs
pop
shl
sub
cmp
sub
in
out
cmpsl
cld
repnz
lods
xchg
and
loope
fstpl
std
test
repz
adc
daa
dec
inc
loopne
push
lds
xchg
xchg
pop
or
jns
mov
cmp
clc
xchg
add
scas
rcrb
mov
decl
mov
es
lcall
loop
int
les
dec
sub
fbld
pop
clc
xlat
lcall
or
popa
sbb
in
xchg
pop
mov
bound
or
loop
ret
in
xchg
or
jo
cmp
mov
mov
mov
scas
arpl
es
popa
fistpll
xchg
sub
mov
jg
jbe
pop
pushf
xor
jns
ljmp
hlt
icebp
in
sbb
mov
sbb
subl
pop
repnz
jp
dec
stc
insb
dec
mov
dec
test
add
fisttps
xor
xchg
test
dec
push
ficompl
push
ljmp
ret
mov
addr16
and
and
es
in
mov
iret
xchg
pop
sub
or
mov
mov
dec
js,pt
sub
pop
fsubrl
mov
data16
roll
push
sbb
test
add
xlat
and
imul
popf
cmp
ljmp
add
fnsave
rcrl
les
fisubl
iret
ss
xorb
xchg
fwait
or
mov
decb
mov
sbb
xchg
sub
aaa
jns
imul
cmpsb
incl
sbbl
jne
jle
xchg
inc
adc
jg
dec
jp
dec
pusha
push
mov
pop
pushf
ds
aad
jb
bound
or
mov
push
jae
mov
cmpl
lods
imul
push
push
in
jecxz
lcall
push
jb
sbb
cmove
or
push
mov
xor
outsl
pop
adc
inc
mov
out
popa
std
vpunpcklbw
sbb
sahf
test
and
pop
imul
shr
mov
add
cld
push
sub
int3
pushf
jns
xchg
xor
or
or
cld
push
cmp
lds
xchg
xor
mov
xor
rol
fdivp
xorb
sub
push
push
loope
pop
rorl
in
icebp
cmp
in
mov
std
inc
outsb
or
daa
call
aas
sub
mov
mov
cmp
sub
adc
lods
inc
out
ja
jg
aas
notl
dec
ljmp
ret
bound
push
in
and
inc
push
cmpsb
data16
and
incb
mov
jg
cli
ret
push
inc
jle
hlt
pop
loop
mov
adc
mov
dec
mov
fimull
cmp
xlat
gs
sbb
mov
in
cmp
xchg
fldl
inc
xor
dec
shlb
addr16
inc
mov
xchg
add
pop
mov
gs
jae
jnp
pop
push
xchg
inc
insb
or
push
xor
mov
xchg
xor
push
and
arpl
dec
popf
iret
bound
xor
mov
add
test
adcl
adc
clc
fs
lods
mov
jg
xchg
dec
cmp
dec
add
xchg
inc
repz
dec
call
pop
sub
lock
mov
ret
sub
inc
push
in
outsb
xor
imul
mov
ss
adc
stos
xor
push
fimull
or
sbb
mov
stos
inc
pop
mov
pushf
jg
ret
mov
inc
pop
or
sub
sbb
jbe
daa
stc
rcrb
mov
mov
cli
cltd
cmp
push
fsubrs
or
pop
insb
cmp
insb
cmp
movsl
mov
push
push
aaa
mov
mov
jp
mul
lock
aam
sahf
adc
out
shrb
push
sbb
jp
push
or
icebp
sub
push
mov
enter
mov
jb
sbb
stos
jnp
into
rclb
pushf
or
int
daa
and
mov
cld
data16
mov
push
cmp
xor
cld
lods
sub
pop
aaa
std
dec
sbb
negl
lea
or
shll
mov
cmp
movsb
adc
in
pop
dec
out
mov
mov
dec
js
in
xchg
movsl
xor
cmc
xor
mov
inc
sbb
and
jg
cmp
cwtl
mov
repz
xlat
sub
test
cwtl
inc
xchg
adc
dec
mov
and
cmp
data16
push
jecxz
adc
movb
lcall
sahf
sbb
add
cli
es
out
xchg
or
cmp
pop
rcr
daa
insl
sub
je
xchg
aad
sbbl
outsb
add
add
jp
outsb
jne
scas
mov
mov
cli
call
leave
call
sti
popf
loope
add
repz
xor
dec
decb
arpl
lret
mov
out
mov
call
adc
cmp
sbb
cmp
decb
bnd
mov
cmp
movsb
pop
sbb
gs
decb
mov
mov
test
xor
rorb
insb
push
lock
repnz
mov
jl
arpl
negl
aam
push
jp
imull
lea
js
loop
sbb
add
mov
mov
imul
rcl
or
mov
int
lds
fs
daa
jle
cmc
adc
shl
paddsb
pusha
and
xchg
outsl
ficoms
mov
rcl
roll
xor
jl
dec
jb
sarl
dec
mov
ljmp
jns
imul
mov
jmp
lock
outsb
sahf
inc
imul
lcall
aas
xchg
rclb
icebp
dec
mov
ljmp
xlat
pop
dec
xor
rclb
inc
mov
cmpl
pop
jg
movsl
push
fdivrl
lock
shll
dec
push
leave
sbb
jg
int3
jp
sbb
sub
xor
comiss
cwtl
test
cltd
hlt
xor
sbb
pop
sbb
in
enter
jnp
xor
xor
test
adc
cmp
loope
cmc
clc
sbb
imul
loop
enter
in
mulb
or
or
sub
test
and
popa
push
call
into
pop
dec
orb
subb
cmp
shrb
das
xorb
cmpsb
fidivrs
loopne
into
xchg
test
push
or
outsl
cmpsb
dec
stos
mov
js
add
jmp
pop
neg
lea
es
pushl
push
ja
xchg
shl
or
sub
xor
pop
lods
cld
or
or
in
mov
ss
iret
push
lcall
addr16
pushf
int3
xor
int
mov
shll
pop
popa
add
or
or
mov
outsb
pop
lcall
mov
pop
add
xor
mov
mov
cmp
pop
or
stos
test
mov
scas
mov
aad
cmp
pushf
pop
mov
sub
xlat
pop
mov
jne
daa
pop
ljmp
inc
xchg
mov
adc
fisubrl
lds
cmpsb
pop
mov
nop
mov
movsl
lea
and
mov
loopew
jns
cmpsb
into
jp
subl
adc
sub
mov
outsl
jle
outsb
xor
stc
pusha
stc
pop
test
mov
sti
mov
pop
js
aaa
not
jbe
clc
cwtl
xchg
ljmp
and
mov
frstor
and
add
test
test
aam
cli
mov
add
out
jne
testb
push
test
stc
jbe
pusha
and
mov
rcrl
mov
mov
and
mov
mov
pop
or
ss
fisttpl
push
adc
rol
js
jne
fmull
aam
insb
mov
vaddpd
aam
cmpsb
mov
jb
movaps
aad
imul
out
mov
les
rclb
mov
dec
lret
mov
and
or
or
sahf
out
mov
ret
aam
jp
pop
ss
loop
ljmp
mov
xor
xor
xchg
jae
cmp
int3
into
pushf
mov
shr
in
mov
xor
pop
sbb
jnp
mov
mov
cld
jmp
fidivrl
aaa
mov
stc
jb
xor
sbb
inc
and
push
push
adc
adc
cld
fcmovb
popf
daa
jns
pop
and
lret
xchg
insb
daa
mov
icebp
pop
cmp
das
in
gs
pop
pop
and
mov
sti
mov
loopne
and
add
cmp
fisubl
xor
ret
mov
ljmp
cmp
call
repz
xor
out
mov
pushf
and
mov
and
inc
adc
flds
out
xchg
push
fistl
js
clc
into
js
lret
out
inc
in
jg
scas
and
cmpsb
out
inc
scas
xor
mov
push
outsl
mov
imul
hlt
jb
sti
das
pop
lcall
jl
adc
inc
adc
mov
mov
push
xlat
mov
pushf
sbb
sub
ret
xor
fwait
sbb
mov
pop
gs
cmc
in
add
daa
insb
sub
mov
mov
aas
and
icebp
jg
sbb
clc
xchg
mov
mov
imul
stos
pop
jmp
rorl
mov
xchg
adc
bound
pop
adc
xor
repnz
aad
adc
pop
fdivrs
mov
daa
test
int3
jp
loope
or
mov
add
out
adc
mov
dec
xor
cmp
aad
cmpsl
jo
mov
mov
in
dec
fwait
mov
cmpsl
ficomps
stos
mov
insb
mov
in
sahf
sbb
push
xchg
mov
addl
xchg
add
jle
cmpsb
cmp
pop
outsl
sbb
leave
aaa
in
test
fistl
mov
pop
inc
cmpsl
jl
cmp
dec
fdivrl
lret
mov
or
jno,pt
pop
pusha
mov
and
cmp
pop
outsb
sar
test
dec
mov
adc
repnz
loopne
cmpsb
fsts
push
mov
ljmp
ss
popa
repnz
mov
andl
adc
jne
cli
aad
or
pop
pop
inc
sub
xor
out
inc
mov
xchg
cmpsb
lcall
mov
fdivs
shl
in
mov
mov
cmp
push
push
ret
mov
pop
loop
jl
or
jnp
mov
fisubrs
push
stc
pop
push
pop
pop
and
loope
adc
cwtl
inc
jb
push
aas
and
sub
out
jns
push
shll
mov
fbstp
push
lret
stc
imul
sbb
or
mov
insl
loope
insl
jmp
mov
icebp
mov
mov
hlt
pop
mov
test
dec
out
gs
push
jae
adc
test
stc
icebp
mov
enter
and
insb
sub
inc
cmp
fistpll
mov
mov
push
insb
mov
dec
mov
adc
sub
mov
ds
mov
repnz
enter
insl
cwtl
jne
lahf
aaa
mov
mov
icebp
sbbb
push
inc
ds
push
push
mov
push
sub
pop
ljmp
in
icebp
or
xchg
mov
xchg
out
push
dec
adc
pop
pusha
lret
in
loope
psubusw
pop
andb
pop
gs
add
fadds
lcall
call
add
into
sbb
adc
and
dec
sbb
jmp
sub
cmpsl
mov
popa
into
mov
push
loop
pop
xchg
in
pop
popa
mov
ja
inc
pop
lds
iret
and
inc
outsb
lret
sbb
mov
faddl
pop
arpl
dec
xchg
in
cmp
sbb
scas
test
add
je
lahf
scas
xlat
enter
dec
inc
add
test
xchg
popf
sbb
mov
mov
movsl
sbb
xchg
jne
imul
loop
incb
cmpsb
sarl
jnp
stos
cmpsb
and
popa
xor
xchg
ljmp
pop
ds
pushf
lds
jmp
pop
xor
bswap
sbb
sti
bnd
fcompl
cld
enter
jecxz
scas
xchg
scas
dec
lcall
pushf
cmp
push
or
jecxz
fucomp
and
pop
and
and
call
or
add
sub
insb
shl
mov
jl
mov
jbe
sbb
jne
push
xor
lods
xchg
fwait
aad
loop
push
cld
xchg
daa
mov
xchg
jl
mov
mov
ds
out
jno
dec
stos
test
jne
or
cwtl
pop
pop
sbb
pop
jcxz
jge
movsl
hlt
mov
pop
push
insl
xor
rorl
in
pop
mov
xchg
mov
sbb
fs
xor
mov
push
and
xor
adc
shl
lds
or
hlt
xor
mov
xor
push
inc
jle
xor
fnstcw
test
in
fldenv
add
int3
sub
or
orl
mov
aad
cmp
mov
ds
sbb
xor
movsb
push
clc
sbb
or
popf
test
adc
insb
addl
mov
mov
jl
cmp
outsb
imul
add
add
inc
xchg
in
add
sbb
push
in
scas
adc
xor
sub
lahf
arpl
fs
ljmp
sbb
or
jbe
mov
data16
pusha
js
xchg
test
inc
fucom
mov
xchg
jg
mov
jmp
pop
jno
rclb
scas
dec
jne
out
add
cmp
mov
mov
sub
push
jmp
stc
pushf
aaa
mov
push
aam
out
xor
jle
outsl
sub
stc
or
popf
daa
aam
insb
pusha
sti
lcall
mov
lea
and
jb
lret
adc
adc
in
mov
aaa
stc
pop
pop
or
add
test
es
inc
mov
xchg
mov
xor
mov
rclb
push
push
lock
jg
add
pop
fdivl
jge
jne
mov
jae
inc
in
test
add
test
cmp
out
and
lret
xor
aaa
mov
and
lret
pop
out
loope
cmpsb
sbb
sub
pop
inc
mov
lahf
loopne
jnp
icebp
imul
inc
ljmp
and
shrb
add
loopne
sub
or
test
jmp
pand
mov
pop
or
jp
into
mov
loop
inc
enter
pop
push
xor
mov
ret
jbe
gs
cli
ds
lock
cli
xchg
clc
iret
or
sub
xchg
cs
mov
pusha
pop
ds
and
aas
scas
leave
jge
addl
hlt
ficoms
mov
lret
insb
movsb
out
cmp
movsl
imul
aaa
pextrw
push
and
mov
xor
or
lea
mov
outsl
test
adc
lds
jb
add
std
das
jp
jae
cmpsl
lahf
jns
fs
jp
in
add
or
rcrl
fstpl
add
sub
cld
lcall
inc
sub
in
addb
sbb
or
xor
pop
pop
mov
dec
sub
ficoml
mov
movsb
sbb
mov
shl
adc
scas
pop
imul
sub
jno
sub
push
cwtl
jecxz
xchg
int
inc
mov
fidivrl
sti
popf
dec
add
adc
cmp
inc
ss
cmpsl
xor
mov
adc
je
pop
notb
push
xchg
lock
outsl
jle
mov
dec
add
push
pop
adc
xchg
and
movsb
adc
inc
mov
pop
jno
or
fidivs
dec
fwait
sbb
outsb
add
lods
mov
ds
outsl
testl
xor
mov
xor
push
mov
mov
pop
mov
fst
cmp
addr16
pushf
or
dec
lods
sbb
daa
xor
pop
jo
xchg
mov
pop
bswap
stos
fisubl
jne
cmp
inc
add
dec
cs
clc
add
popl
call
xchg
in
scas
pop
add
push
or
int
sub
inc
fsubrl
lods
mov
gs
mov
sbb
mov
pop
adc
add
cli
jb
mov
sbb
adc
and
xchg
test
scas
add
push
jnp
adc
mov
jnp
in
insl
sbb
mov
repz
dec
ret
aaa
movsb
roll
test
sbb
movsl
rclb
mov
test
and
xchg
rcr
aaa
jnp
rcr
clc
call
ljmp
sbb
sbb
jns
fwait
nop
jne
cmp
mov
mov
jb
aam
test
mov
arpl
fs
or
les
sbb
adc
sti
xchg
push
dec
jno
xor
out
lret
jae
push
sbb
mov
mov
inc
rclb
outsb
aam
or
dec
push
xchg
pop
pop
mov
cltd
loop
lods
popa
jle
call
pop
leave
xchg
lahf
sbb
inc
jmp
pop
jmp
adc
pop
push
and
dec
jecxz
test
inc
dec
iret
mov
and
addb
jp,pn
dec
inc
or
in
subb
add
jnp
jmp
sar
je
lahf
mov
sub
cmpsl
scas
push
jns
fs
adc
jns,pt
lret
xor
jno
cmp
push
inc
sbb
dec
dec
jle
in
mov
insb
cmp
jmp
mov
jge
or
dec
ret
sub
mov
xlat
mov
dec
test
xchg
je
mov
push
xchg
sti
sahf
arpl
push
es
fs
in
roll
aaa
sub
sub
divl
jbe
inc
inc
test
add
xchg
push
std
fs
jl
out
dec
aad
aaa
out
mov
stc
fisttpl
lret
push
in
sub
cmp
xlat
rorl
mov
movb
divb
incb
idivb
out
in
cmp
push
push
pop
push
jp
out
gs
mov
jo
in
lds
out
xchg
cmp
mov
push
icebp
sbb
push
pop
insb
mov
push
movsl
xchg
test
cmpsl
and
imulb
jg
mov
xchg
loopne
adc
mov
movsl
xor
cmpsb
dec
adc
notb
test
cltd
aas
shlb
jge
add
sub
dec
inc
xlat
das
std
js
mov
out
imul
xchg
loop
gs
rcr
adc
scas
cmpb
call
sub
push
mov
pop
andb
xor
pop
mov
data16
mov
fistpl
lret
jns
push
add
xorb
jge,pn
and
fnstenv
popf
lods
jns
lock
push
cmp
dec
sub
xor
popa
fmull
pop
cmc
dec
jle
add
mov
inc
pop
sub
push
aaa
push
psllw
xor
mov
ja
lret
push
lahf
loopne
aas
add
and
sub
xor
out
sbb
jmp
push
jae
daa
dec
mov
inc
or
dec
subl
bswap
mov
cs
add
sahf
call
leave
lods
insl
and
icebp
mov
aad
cmp
and
aaa
add
mov
cmp
adc
icebp
testb
add
sub
push
or
movsl
loopne
xor
sbb
adc
stc
add
int3
sub
jb
std
iret
jmp
lds
cmpsb
addb
jge,pn
sbb
sbb
mov
leave
inc
adc
or
pop
adc
jge,pt
loop
int
je
fiadds
jae
and
jmp
arpl
ret
cmpps
into
repnz
jno
cmp
adc
or
out
shr
cwtl
xchg
mov
push
icebp
pushf
inc
loop
push
push
and
xchg
push
dec
mov
inc
xlat
push
xchg
or
mov
enter
jmp
decl
insl
xor
sbb
or
inc
push
xchg
pushf
cli
dec
and
mov
into
push
xchg
push
insl
out
pop
scas
mov
dec
add
pop
mov
inc
cmpsl
outsl
dec
stos
push
into
xor
add
xor
stc
scas
shlb
shl
mov
dec
pop
xchg
mov
adc
adc
imull
dec
stc
jecxz
inc
call
and
mov
adc
addb
pop
in
sbb
mov
fisubl
or
xor
cmp
pushf
ljmp
adcl
push
mov
cmp
les
mov
pop
add
xor
xor
cmp
or
xor
inc
dec
aaa
dec
add
fldl
push
xor
pop
pop
push
out
gs
fucomp
enter
push
lods
filds
sub
lcall
mov
lods
add
scas
cmp
and
mov
mov
mov
cwtl
std
repnz
ret
inc
mov
incb
std
push
sub
dec
fcom
inc
or
in
lds
xchg
ss
cmp
mov
sahf
popa
cmp
sub
mov
ja
dec
pop
mov
nop
adc
jb
cmp
out
cmpsl
xchg
insl
into
jg
fistl
jmp
inc
movsl
in
xor
ss
fstpl
int
or
out
inc
sub
gs
xchg
arpl
mov
in
xchg
inc
jnp
jg
stos
or
scas
inc
scas
sbb
or
gs
test
push
or
icebp
movsb
push
jge
and
aad
sub
mov
sti
insb
sbb
cltd
dec
std
lcall
pop
xchg
enter
dec
mov
pop
shl
inc
cld
shrl
sub
cltd
cmpsl
or
adc
sub
xchg
jecxz
and
scas
adc
jp
mov
jno
leave
arpl
mov
sahf
dec
lcall
inc
adc
dec
cwtl
loopne
cltd
les
enter
jae
ret
jp
or
iret
lds
cmp
sub
ljmp
adc
or
xchg
int3
repz
insl
ja
les
adc
adc
gs
subl
adc
pop
movsb
add
push
jbe
mov
les
cmp
sahf
sahf
push
ja
arpl
rcrl
sbb
icebp
aaa
sub
mov
add
xchg
mov
leave
adc
sub
pop
fucomip
in
cmpl
inc
fdivrl
push
cmpsb
pop
xchg
pop
imul
ss
add
mov
cld
movsb
mov
jmp
aad
test
mov
lret
in
in
ficompl
fbstp
mov
and
sti
lret
clc
add
mov
stos
push
jmp
lods
xchg
out
inc
fstpt
push
adc
or
loop
inc
mov
mov
jg
jl
ss
sub
gs
jp
jne
aas
add
aam
and
out
data16
clc
xchg
dec
mov
js
int3
adc
sahf
dec
aad
and
xchg
jbe
or
cmp
dec
push
nop
sbb
jg
stos
adc
mov
out
clc
clc
cwtl
jne
mov
int
pop
faddl
mov
pop
lock
lods
mov
mov
clc
scas
cltd
adcl
pop
sbb
fwait
into
xchg
fs
sahf
rcrl
pop
fldenv
daa
roll
cmp
sub
fsubrl
push
sbbb
sub
pop
xor
test
jle
push
fistl
adc
out
repz
stos
mov
outsl
sbb
xor
adc
mov
mov
inc
mov
test
cmpl
adcl
in
sbb
jno
out
sub
lret
fwait
add
lret
xorl
ljmp
sarb
inc
lret
aam
clc
mov
shl
adc
rcrl
punpckhbw
shl
popa
sarb
push
jmp
push
movsl
fwait
or
sbb
cmp
add
lret
mov
shll
cltd
shll
sbb
adc
xor
pop
sbb
es
stos
ljmp
lret
bound
sub
pop
cmpb
inc
jmp
pop
mov
inc
fisubl
neg
xchg
int
inc
lea
gs
sbb
scas
test
jecxz
push
gs
cltd
mov
bound
add
sbb
mov
pop
pop
call
adc
sbb
pop
push
call
push
arpl
or
loope
pop
mov
push
iret
test
mov
js
jmp
int
aaa
sti
inc
adc
sub
mov
or
stc
xor
xchg
imul
enter
push
cmp
pop
sub
lds
daa
int
or
lock
sub
mov
int3
aas
jmp
jno
cld
cs
or
push
jae
or
inc
push
mov
jecxz,pt
lret
jnp
jae
bound
or
fiadds
inc
xchg
or
pop
adc
in
jb,pt
testb
shlb
fwait
lahf
mov
jp
int
jmp
aad
mov
sbb
or
xchg
imul
xchg
pop
add
jl
popf
push
cld
xor
xor
lret
jbe
syscall
or
in
inc
xor
jmp
addr16
mov
mov
dec
and
push
call
pop
rcrl
mov
std
jnp
call
and
stos
push
enter
out
nop
jecxz
lock
push
insb
dec
or
lahf
inc
mov
mov
sub
sbb
fcmovnu
mov
pop
adc
and
in
jns
mov
jmp
ds
jae
out
and
jg
cs
outsb
inc
nop
movsl
loope
add
pop
push
jmp
aad
cmp
or
pop
add
ss
push
jae
orb
push
cmp
sub
stc
or
dec
iret
jbe
mov
pop
ret
setns
or
jb
leave
sbb
and
and
mov
xor
repz
lock
mov
lcall
int
repnz
xor
mov
test
jl
xchg
jne
call
lcall
cld
aam
cmp
jae
dec
leave
pop
pop
int3
xchg
mov
in
xlat
imull
jnp
cmp
dec
bswap
xorb
rcrl
int3
push
movsb
xchg
mov
int
gs
int3
lods
loope
incb
mov
and
xor
out
lea
pop
mov
cli
sub
or
pusha
inc
stc
push
xchg
sbb
mov
mov
lret
data16
in
and
mov
sbb
cmp
xchg
dec
jno
dec
repnz
or
cmc
lret
xlat
shr
clc
sbb
or
mov
add
mov
mov
xor
mov
xlat
push
sbb
mov
dec
movsb
pop
jne
pop
push
cld
call
nop
push
add
cli
test
das
mov
mov
icebp
and
popf
faddl
movsb
fcompl
insl
dec
imul
mov
and
adc
ret
mov
sub
rolb
cmpsb
std
jp
push
sub
addr16
add
sbb
push
icebp
repz
inc
sub
sub
loopne
loopne
mov
xchg
in
pop
ljmp
or
fbstp
adc
push
cs
xchg
in
jmp
inc
lock
ljmp
lret
mov
leave
add
movsb
pop
out
mov
jp
aas
jg
arpl
incb
xorl
mov
jg
sbb
ss
adc
ret
cmp
sbb
fcompl
mov
push
jns
pop
cmp
add
incb
sbb
cs
das
inc
xchg
fsubs
ss
out
cmp
add
sub
repz
mov
mov
jnp
xchg
inc
pop
push
pop
sbb
xor
or
add
das
out
into
cmp
test
xchg
lcall
or
insb
inc
mov
cmc
hlt
icebp
gs
outsb
mov
aaa
lahf
xchg
and
inc
pop
in
test
xor
arpl
popa
xchg
test
ljmp
sti
pop
lods
lret
fimuls
mov
pop
jae
and
mov
push
fsub
mov
fnstcw
lds
testb
test
mov
lods
jmp
test
mov
leave
add
push
mov
into
adc
rsqrtps
das
xor
xchg
cs
aaa
and
das
and
inc
int3
movb
cs
or
jnp
mov
fwait
test
or
jle
faddl
insl
mov
inc
pop
popa
pop
jge
mov
gs
jnp
cwtl
jmp
mov
icebp
pop
rorb
jo
or
mov
cmp
stos
adc
sbb
insl
repz
call
xchg
imul
cmpb
or
mov
pop
sbb
push
jge
mov
lahf
outsl
inc
jge
cs
shrl
dec
inc
pop
ss
mov
mov
scas
mov
jmp
lock
fstpt
sbb
aaa
jae
jns
jp
jnp
in
ljmp
hlt
cmp
ds
leave
sub
sub
fmuls
leave
push
insl
and
mov
test
dec
cmp
inc
pop
ficoms
stos
inc
or
mov
lret
addl
push
sbb
mov
mov
sub
adc
xchg
mov
fidivs
pop
jae
movzbl
stos
jne
fs
fisttpl
jnp
xor
xchg
decl
mov
xor
mov
mov
iret
lods
repnz
fld
mov
lcall
testl
lods
stos
jo
inc
data16
leave
sub
sbb
add
dec
aas
jecxz
fcoms
adc
shll
mov
mov
andb
movsl
mov
std
dec
sub
inc
xor
adcl
cltd
aas
in
insl
aas
lock
cli
hlt
jg
push
jb
adc
pop
adcl
out
mov
clc
rol
pop
xor
push
or
xchg
js
cmp
push
loop
xchg
sbb
lods
fisttpll
push
inc
xchg
xor
stc
push
fnsave
sahf
push
sarb
icebp
push
mov
jl
incb
jo
test
xchg
lods
pop
pop
or
out
push
arpl
and
je
aam
les
and
movsl
sub
cltd
sbb
jl
xchg
dec
imul
or
inc
scas
mov
fcoms
ds
negb
xlat
and
dec
xchg
mov
mov
or
mov
or
movsl
popa
and
js
pop
xor
add
sbb
int3
std
cmp
jae
outsl
cltd
gs
idivb
mov
inc
in
mov
jge
jnp
sub
iret
sub
pop
pop
lret
jle
sbb
cmc
cmp
icebp
andb
push
jl
ror
pop
and
push
outsb
jecxz
or
lahf
dec
inc
aaa
mov
inc
push
test
pop
mov
jo
popf
leave
jb
addr16
push
ror
movsb
jno
lods
jb
lcall
js
shlb
aam
je
jae
aam
divb
push
inc
fisubrl
sub
je
push
lret
mov
and
mov
jge
mov
icebp
xchg
mov
push
data16
dec
enter
xchg
dec
pop
fs
lds
int3
jns
cltd
imul
aam
and
scas
and
cmp
movswl
aam
sbbl
pop
lret
pop
cmc
pushf
ja
inc
xchg
jge
adc
divl
pop
stos
lods
ljmp
mov
mov
insb
push
dec
jp
ljmp
add
pop
mov
mov
rorb
les
dec
xchg
clc
aad
pop
xchg
sbb
sub
mov
js
fsubr
ret
stos
xor
add
push
fs
es
sbb
hlt
mov
in
jno
adc
sti
jno
or
in
and
fs
std
rorb
or
lods
aad
cmpsb
iret
jp
fmull
pop
xchg
inc
xchg
repnz
adc
mov
test
mov
inc
shl
jle
test
icebp
aaa
aam
push
cld
outsl
add
cld
cwtl
adc
stos
dec
mov
cs
push
mov
sbb
out
cwtl
inc
push
inc
call
adc
xlat
pop
lds
adc
mov
push
jo
aam
jae
xchg
mov
cmp
popf
push
lret
fistpll
jno
jg
repnz
scas
xchg
clc
and
clc
je
movsl
jp
es
push
xchg
outsb
ja
pop
dec
sbb
icebp
mov
mov
out
inc
adc
loopne
mov
sbb
mov
cmp
mov
cmpb
adc
sbb
mov
pop
dec
jnp
dec
in
push
push
test
adc
leave
je
mov
test
in
cltd
sbb
dec
xor
aas
push
iret
fsub
inc
add
enter
push
jb
int
stos
inc
mov
and
in
or
flds
sub
dec
xor
mov
mull
jo
push
in
loop
movsb
xchg
sub
mov
xor
iret
cmp
push
subl
adc
mov
jmp
jno
push
iret
out
lods
cmpsb
mov
movl
je
pop
inc
or
dec
in
stc
or
inc
call
scas
test
cmpsl
sti
lret
xchg
outsb
cmc
scas
mov
pop
fdivs
mov
sub
add
lcall
loopne
sbb
cmc
add
addr16
testb
out
scas
leave
rolb
push
fwait
and
in
inc
mov
insl
xorb
adc
lahf
xchg
push
outsb
push
in
sub
cli
xlat
int3
adc
loope
mov
call
mov
in
pop
fnstcw
sbbl
addr16
movsb
mov
inc
pop
jne
and
rcrb
aaa
dec
inc
sahf
sub
mov
fnstcw
je
sarl
sub
dec
xchg
mov
jo
test
add
mov
add
mov
inc
jno
add
fldenv
add
push
es
push
scas
andl
add
dec
aas
mov
adc
ss
das
sub
push
cmpb
stos
dec
popf
das
fwait
jne
xor
jecxz
cmp
stc
xchg
sub
add
js
xor
pop
movl
not
add
sbb
pusha
add
jecxz
lds
pop
jecxz
popa
pop
xor
outsl
dec
mov
cmc
std
cs
xchg
addr16
sbb
pop
cmp
inc
popf
sti
das
inc
mov
lret
pop
mov
adc
xor
loopne
xorl
in
jge
sub
out
push
sbb
sti
pop
imul
dec
ror
lcall
mov
pop
in
js
and
push
lods
lods
push
and
jae
ja
or
adc
das
outsl
fcoml
popa
jns
mov
push
jne
into
cmp
jns
sbb
cmp
xor
dec
aad
les
add
mov
mov
out
pop
mov
mov
imul
mov
lock
xchg
or
add
les
sub
push
push
ja
sub
ds
mov
xchg
jge
xchg
cwtl
or
mov
sti
sub
cltd
mov
shll
sub
xor
and
push
sbb
imul
jecxz
push
insl
ficompl
jo
movsl
pushf
push
xlat
in
stos
push
fstpl
clc
fisubrl
nop
xchg
dec
mov
lea
loop
inc
and
sbb
add
lret
lahf
stc
mov
mov
fstl
cmc
jns
add
sysexit
orb
leave
imul
pop
push
nop
push
lock
insb
push
or
sub
loop
out
enter
cmp
jle
mov
dec
test
in
loope
xor
inc
loope
js
sbb
andl
mov
outsb
fsubr
cld
ja
cmp
hlt
dec
sbb
gs
adc
call
sub
mov
mov
dec
cli
or
out
cmp
xor
or
fcmovnu
jecxz
int3
add
dec
das
outsb
sub
add
jecxz
sub
or
pop
sub
jb
sahf
aaa
xchg
rcrb
mov
mov
aad
cmp
or
add
aaa
xlat
pop
inc
test
lahf
testb
sbb
ds
mov
jns
cmp
test
add
mov
fs
mov
pop
loopne
fisttpl
shrl
into
or
jbe
cld
push
arpl
lods
dec
xor
nop
mov
or
or
xchg
xchg
fildl
jle
mov
xor
and
loope
sbb
mov
jmp
test
hlt
cli
aad
or
mov
xorl
incb
testb
rcrl
jne
adc
or
push
cmp
sbb
push
add
pop
mov
inc
or
jno
in
push
ljmp
lcall
mov
sub
js
xchg
lods
push
pop
pusha
outsb
dec
in
dec
loopne
shll
or
stos
inc
stos
int3
cli
dec
adc
mov
inc
jg
push
idivl
and
cmc
mov
shrl
fisubrs
loop
xchg
sbb
loopne
cmpsb
or
btl
mov
mov
addl
movsb
inc
jle
mov
jo
adc
and
mov
adc
leave
sub
rolb
ficompl
sub
aam
sub
lret
or
out
clc
imul
call
mov
or
add
xor
pop
inc
into
add
aaa
loopne
push
out
rcll
pop
lret
jmp
lods
mov
test
mov
loope
sar
mov
pusha
jg
mov
ja
add
xchg
xchg
repz
sbb
add
stos
loopne
lret
cmp
dec
aaa
pop
notl
subl
push
sarb
pop
sbb
mov
test
in
popa
out
or
mov
sbb
in
fistpl
lods
getsec
or
sbb
mov
fwait
stos
dec
cmpsl
leave
fsubrl
stos
sbb
and
add
in
cmp
icebp
les
cltd
inc
fimuls
jl
mov
or
or
push
ds
pop
aam
and
adc
pushl
loope
dec
clc
gs
popf
mov
dec
cmpl
mov
outsl
xor
mov
xchg
pop
dec
hlt
jge
xchg
and
xor
lcall
sub
or
lahf
je
or
sub
xchg
mov
mov
pop
and
pop
dec
push
xchg
fwait
jp
add
dec
hlt
adc
pop
sbb
in
lds
cli
xor
add
fistps
sub
dec
dec
test
test
stos
or
xchg
mov
dec
mov
add
icebp
push
push
imul
xchg
addr16
jo
fnstenv
loop
fdivrl
jmp
leave
sub
sbb
popf
inc
ret
stos
push
xor
stos
popf
pop
fcompl
fwait
outsb
sbb
inc
push
arpl
jmp
stos
jg
sbbl
lods
roll
sub
cli
lahf
adc
adc
pusha
aas
inc
sbb
lods
push
fldl
mov
lods
iret
push
and
loopne
dec
xor
scas
cs
xchg
jb
pop
or
jne
and
inc
icebp
xchg
imul
aam
addr16
aad
jle
pop
scas
sbb
cli
test
xor
push
dec
int
inc
imul
mov
ljmp
test
dec
mov
ret
shlb
jae
cmpsb
push
push
mov
dec
jnp
inc
ror
call
sbb
mov
std
pop
pop
mov
mov
add
popf
and
sbb
xchg
mov
jl
lea
mov
std
rclb
in
sbb
xor
mov
ljmp
aad
add
jl
add
gs
arpl
xlat
mov
dec
push
stc
mov
je
cltd
sbb
js
ret
mov
mov
je
repz
mov
icebp
popf
jge
push
inc
orb
mov
loop
pop
icebp
and
mov
xchg
mov
js
fstl
sbb
es
imul
pop
jno
aad
and
mov
pop
in
shr
pop
jmp
inc
mov
mov
pop
pop
outsb
and
sbb
scas
adc
gs
and
sarb
dec
les
cli
adc
cmpsl
dec
test
pop
fwait
add
jae
or
push
mov
and
in
and
jnp
mov
dec
stos
adc
jae
movsb
cmp
inc
mov
frstor
mov
lret
in
daa
rclb
or
lret
mov
xorl
repz
mov
inc
sti
and
xor
sub
call
cmp
push
sub
out
loopne
setnp
jp
push
or
fwait
cwtl
xchg
cmp
push
mov
in
sti
lret
adc
ja
pushf
jp
nop
add
je
int3
add
sbb
lods
ret
subb
lea
out
dec
mov
mov
mov
push
ret
mov
imul
xchg
cmpsb
ljmp
sti
or
test
dec
or
fxch
dec
enter
loope
add
and
or
or
or
pop
mov
inc
data16
xchg
stos
adc
lea
mov
or
add
repnz
mov
cmp
cli
sbb
mov
std
insl
lods
dec
hlt
and
push
inc
or
xor
mov
mov
sub
call
mov
adc
xor
arpl
inc
adc
mov
inc
dec
les
in
out
pop
in
mov
lcall
movsl
dec
lods
push
pop
das
pop
dec
sub
mov
add
xor
sarb
dec
jecxz
inc
arpl
pushf
add
jl
jle
push
and
imul
dec
push
xor
cmp
pop
push
push
sbb
or
stos
and
sbb
cmp
push
lret
mov
mov
fwait
mov
cld
or
divb
ja
push
cmpsl
ljmp
arpl
out
cmp
add
scas
jne
jmp
test
in
into
rcrl
or
or
xchg
ss
mov
loopne
es
aaa
pusha
cmpsb
cli
lods
adc
hlt
mov
mov
sahf
mov
or
xor
inc
in
out
cmp
pusha
push
xchg
insb
shll
mov
jmp
leave
mov
enter
cmp
inc
mov
xchg
adc
add
jb
pop
cmc
je
mov
or
fbld
dec
push
out
or
ret
jmp
sahf
mov
pushf
add
or
dec
dec
outsl
shll
call
ror
call
jo
and
sub
sub
divb
sti
lods
test
pop
fisubs
mov
and
or
movsb
aas
flds
push
ficomps
mov
lcall
stc
sbb
fidivrl
mov
out
incl
add
sbb
ret
push
popa
pop
add
mov
leave
or
scas
dec
mov
adc
and
xor
mov
sub
push
adc
xor
std
or
xchg
jo
ret
stc
jg
leave
xchg
arpl
arpl
inc
ret
adc
je
xchg
jo
jae
stc
enter
or
pop
or
mov
nop
dec
and
xchg
ret
add
or
lahf
and
push
sbb
mov
inc
xor
mov
nop
pop
add
pop
adc
lea
rclb
ret
mov
aas
adc
cmc
push
xchg
stc
int
fbld
sbb
aad
idivb
es
outsb
test
movsl
add
xor
mov
outsb
repnz
jb
insb
repnz
pop
pop
inc
mov
xchg
cmp
and
cpuid
jle
inc
sti
or
jae
push
push
aad
inc
adc
inc
lea
sbb
mov
add
push
dec
idivl
cmp
hlt
adc
cmp
enter
xchg
movsl
dec
outsl
int3
dec
cmp
inc
cvtps2pd
icebp
loop
push
in
enter
outsb
push
pop
test
inc
loopne
cmpsb
or
out
and
fsubp
movd
jp
pop
loop
pop
mov
dec
in
mov
lea
cmp
int3
pop
mov
xor
xor
jge
mov
mov
int
out
pusha
pop
push
sti
lret
fldt
sarb
sub
in
idivl
mov
jbe
int
push
mov
add
dec
mov
mov
dec
es
adc
pop
ret
push
push
xor
and
icebp
dec
mov
lcall
fisubl
fs
dec
fidivrs
enter
ret
mov
pop
adc
add
pop
prefetchnta
repz
mov
sbb
mov
push
jp
es
hlt
pushl
out
lcall
cmpsb
aas
movsb
pop
into
mov
movsb
in
push
cmp
iret
pop
inc
hlt
pusha
outsb
sbb
sub
lds
adc
cmp
outsb
cmp
je
push
mov
inc
into
push
add
sbb
lods
imul
pop
pop
push
xchg
xor
jg
fimull
mov
aam
push
adc
sti
jbe
xorl
sub
sarb
scas
jp
gs
clc
or
sbb
pop
nop
outsl
adc
pop
and
pusha
sbbb
fimull
lahf
or
call
test
add
int3
fcoml
push
test
imull
sbb
jmp
sbb
out
popf
mov
and
adc
mov
xchg
repnz
sbb
mov
aaa
and
inc
cmp
lahf
in
or
dec
xchg
cwtl
cmp
iret
movd
loop
pop
sbb
xor
inc
testb
pop
cmpsl
push
xor
and
scas
aam
cld
aaa
mov
dec
pop
adc
mov
inc
xor
fnstcw
neg
mov
and
test
ffree
sub
mov
sub
cmpsb
fists
ret
sahf
mov
clc
jle
inc
sti
cld
pusha
outsl
shl
fwait
imul
mov
jmp
sbb
push
mov
mov
mov
nop
icebp
mov
scas
or
and
xchg
jge
aad
mov
xor
add
add
je
pop
mov
fisttps
sbb
ret
stos
iret
imul
dec
ficoml
data16
sub
aas
mov
movsb
sbb
aad
fmulp
je
adcl
or
or
out
or
push
insl
ret
or
xchg
inc
repz
mov
sbb
fldenv
mov
in
mov
test
xor
fistps
movsl
and
or
popf
cmp
int
lahf
push
mov
cmpsb
out
xchg
es
pusha
sbb
mov
in
call
mov
xlat
movsl
ljmp
sar
lea
and
sub
xchg
and
pop
sub
xchg
cmp
sub
call
sub
cmp
push
xor
popa
int3
adc
shrb
stos
cmp
pop
adc
cmpsl
hlt
daa
cmp
insb
lods
mov
rolb
push
cwtl
pop
adc
ret
xchg
push
mov
push
aad
testb
add
sbb
in
dec
mov
enter
or
call
ret
or
and
mov
lods
je
jnp
cmpsb
repz
and
mov
push
add
aas
sub
mov
pop
adc
cmpsb
jno
inc
push
pop
mov
pop
movsb
sub
push
fsubrs
mov
in
dec
dec
jle
fprem
xchg
rorl
arpl
dec
mov
clc
int3
dec
icebp
subl
lcall
mov
jle
pop
iret
xchg
mov
das
dec
out
fsubrl
outsl
mov
out
xor
lcall
mov
xchg
sbb
cmpsb
xchg
mov
int3
and
in
filds
cmp
mov
std
add
jl
and
adc
pop
and
dec
cmp
pusha
mov
or
hlt
pusha
and
mov
std
lods
js
sahf
stos
scas
aaa
push
test
jb
test
je
sbb
sarb
inc
scas
mull
adc
loope
jb
fwait
insb
dec
cmp
dec
inc
orb
inc
and
jl
testb
cmp
icebp
lea
cmp
popf
out
movsl
pop
xor
jb
and
and
jne
pop
pop
fists
divb
jmp
lds
or
dec
jne
rcl
das
lock
jbe
out
sub
js
dec
inc
xchg
push
mov
dec
pushl
ja
ss
pop
sbb
fwait
push
jl
orb
leave
dec
lods
mov
add
pushf
sub
sbb
or
enter
cmp
nop
out
adc
xchg
sub
sbb
out
rorb
int3
shlb
pop
sub
sbb
adc
add
mov
mov
sarl
and
mov
bound
leave
mov
mov
mov
add
lea
stos
movsl
lret
scas
dec
add
xor
ss
xor
push
xchg
add
lods
mov
and
mov
or
lcall
sbb
or
mov
in
add
popa
stos
sub
int
jp
jecxz
mov
sahf
stos
pop
sahf
push
and
mov
out
je
inc
and
test
mov
xchg
in
mov
mov
cmp
xor
cmp
cmp
loop
pop
add
jne
add
fsubs
lods
popf
mov
das
mov
shll
test
roll
mov
dec
mov
lcall
cmpsb
xor
push
out
pop
sub
cmpsl
daa
lret
push
mov
jl
adc
mov
jno
movsb
inc
mov
pop
sbb
js
movsl
das
add
ja
ljmp
int3
aas
fmuls
xor
xchg
inc
clc
xchg
iret
stc
cli
or
jb
das
jae
jge
push
or
mov
int
fldl
jmp
push
popf
insl
and
hlt
fcmovb
or
arpl
mov
jb
out
inc
lcall
sub
jge
kmovb
sub
fldenv
jle
push
fsubr
pop
insb
popa
stos
jmp
aas
sub
mov
cmc
je
inc
mov
hlt
and
mov
jae
mov
pop
repnz
aam
fisubs
rcll
arpl
movsb
lahf
xchg
mov
push
push
jae
cmp
xor
pop
scas
sbb
sub
xchg
xor
lds
or
cltd
jo
jno
cmp
mov
lods
mov
mov
rcl
aad
arpl
sub
jle
xlat
je
xchg
mov
xor
mov
bnd
pop
fistpl
les
xchg
add
std
out
mov
mov
pop
ljmp
jmp
mov
dec
mov
inc
enter
rolb
fnstenv
or
es
or
fcmovu
inc
insb
push
mov
inc
add
sub
xchg
ja
sbb
fists
add
adc
cmp
mov
cmc
jae
mov
repnz
push
gs
fcmovb
in
dec
jecxz
aad
scas
sbb
cmpsb
xchg
sahf
hlt
loop
cmp
aad
mov
xor
cli
mov
dec
or
rcll
fdivrl
push
push
adc
je
sbb
data16
imul
or
and
or
push
jmp
xor
outsl
push
inc
adc
jne
mov
and
jg
in
and
mov
bound
xor
test
xor
insl
stos
imul
sbb
or
lods
and
aaa
frstor
or
xchg
je
adc
xor
jmp
int
sub
xor
dec
add
clc
and
and
jle
leave
add
aas
and
inc
loopne
sbb
push
or
fisubs
or
jle
push
enter
sbb
add
pop
std
cmpsl
and
jmp
xlat
jo
test
iret
mov
addr16
leave
push
div
cs
fcomps
fldt
pop
mov
outsb
data16
cmp
add
mov
ljmp
test
nop
jae
sub
nop
or
pushl
in
xlat
movsl
cmovs
js
jae
les
jecxz
and
dec
pop
hlt
pop
nop
out
ret
mov
sub
faddl
int
iret
cmp
xor
sbb
sub
push
mov
sbb
push
sub
cli
lret
adc
in
jp
addr16
inc
in
in
or
xchg
mov
and
addr16
xchg
je
fcoms
cs
mov
and
loopne
cs
inc
push
adc
test
test
pop
sub
lea
rorb
and
mov
jae
cmp
xchg
xchg
repnz
daa
stc
inc
mov
pop
cmc
pushf
dec
jae
clc
int
int3
xchg
je
or
cmp
and
testb
push
sub
pop
les
jge
cld
dec
xchg
mov
int
or
jp
mov
fs
shl
inc
inc
mov
pop
stos
sub
jle
and
sti
dec
scas
pop
cwtl
jb
inc
cmp
xchg
mov
in
dec
and
mov
or
faddp
lahf
sub
out
int3
mov
cmp
sub
jle
cltd
andb
pusha
push
push
shlb
aad
mov
data16
adcb
mov
sahf
add
xchg
lcall
push
arpl
add
jle
jp
faddl
mov
repz
push
std
adc
dec
sbb
add
pop
out
inc
addr16
inc
in
invd
jmp
rep
xlat
push
pop
ss
mov
lret
cmp
leave
in
mov
push
or
jae
ds
cwtl
sub
jno
inc
call
add
lret
add
repnz
jp
dec
inc
lret
pop
ret
fdivr
fsub
stc
add
outsl
les
cmp
sbb
push
nop
sbb
cwtl
notb
jp
sbbl
xor
mov
sbb
xor
adc
ror
push
cltd
pushl
push
xor
dec
and
and
bound
sbbb
push
inc
dec
data16
inc
icebp
arpl
dec
call
xchg
movsb
sub
xor
dec
lahf
pusha
mov
dec
insb
mov
dec
roll
nop
push
xor
cmp
cs
aam
les
inc
sub
cld
outsb
cvttss2si
repnz
dec
jmp
int3
iret
inc
sbb
jge
pushf
inc
std
cmp
leave
scas
ret
jmp
js
aaa
push
mov
jno
cwtl
pop
cmpsb
mov
fisubs
dec
xchg
jno
insl
lods
ret
jnp,pn
push
inc
xor
sbb
adc
sub
daa
lret
xchg
inc
cld
popf
data16
je
lcall
sub
mov
shll
lea
cmp
pop
push
mov
punpckhbw
adc
aam
mov
pop
inc
pop
sbb
mov
or
xchg
sbb
in
and
push
leave
sarl
pop
add
hlt
mov
es
fdivl
iret
cmp
inc
sbb
fldenv
pop
out
cmc
and
scas
jnp
xchg
cltd
invd
dec
mov
pop
pop
mov
into
dec
daa
roll
call
clc
int3
lret
xor
add
mov
mov
in
pop
push
adc
dec
jo
xor
mov
jmp
xchg
sub
in
jl
or
popa
mov
push
cltd
in
rcrl
sub
add
mov
inc
insl
inc
push
mov
jecxz
add
or
call
pop
jp
sub
mov
cltd
add
sbb
add
lea
mov
stos
sub
addb
out
push
rcr
adc
outsb
dec
xor
xchg
sub
scas
mov
and
mov
xor
shll
outsl
bnd
push
fstpl
mov
in
jge
inc
jnp
inc
adc
or
repz
jno
aas
mov
push
mul
push
and
outsb
dec
pusha
enter
push
xchg
fdivp
xor
mov
mov
jg
jns
fninit
movswl
adc
shl
test
cmp
mov
in
add
frstor
call
roll
bound
xchg
addr16
or
cmp
in
scas
and
imul
jl
aam
int3
out
rorl
leave
int3
lret
pop
mov
fsubl
mov
sub
adcb
and
dec
shlb
xor
daa
imul
mov
lds
andl
add
mov
jmp
mov
push
cmp
loop
adc
push
scas
xchg
enter
lret
addr16
je
jmp
in
lods
jl
sbb
insl
es
and
mov
ja
aaa
add
loope
jle
mov
and
inc
mov
mov
dec
inc
and
adcl
sbb
inc
mov
jns
push
mov
or
mov
mov
es
icebp
outsl
lahf
fwait
mov
mov
mov
inc
cmp
dec
icebp
jl
insl
jne
and
mov
xchg
ret
repz
mov
mov
pushf
mov
pop
scas
jp
jmp
push
test
pop
fdivrs
add
inc
pop
cmc
push
push
xchg
adc
add
mov
jne
shlb
add
imul
cs
and
jae
stos
in
and
leave
mov
sub
mov
cmp
inc
sarb
dec
push
dec
adc
adc
mov
push
mov
sbbb
out
cmp
xchg
pop
xchg
dec
sub
sub
fsubs
movsl
adc
push
mov
mov
rclb
pop
jo
insl
inc
clc
dec
jp
pushf
sub
inc
sahf
dec
divb
enter
xchg
imul
test
jns
lods
ljmp
mov
cmp
push
je
pop
xor
popf
push
cltd
jmp
dec
lods
add
aad
inc
rorl
movsl
and
andl
ljmp
or
outsl
fmuls
sbb
and
xchg
sti
clc
int3
out
inc
adc
ss
push
xor
movsb
nop
dec
inc
sub
fcomp
mov
js
sbb
dec
leave
in
out
jg
jne
and
jge
in
cmpsb
aaa
push
inc
mov
scas
xchg
arpl
mov
adc
mulps
or
in
in
aam
jne
aas
lret
iret
in
sub
sub
push
movsl
or
push
sbb
inc
cmp
xchg
repz
lcall
daa
jnp
fldl
dec
pop
xchg
mov
push
cmp
jmp
fcomip
test
dec
jmp
adc
sbbl
sub
nop
into
enter
imul
or
pop
std
sub
int3
scas
mov
mov
push
test
mov
or
es
les
imul
out
aas
sub
mov
bound
jecxz
mov
push
stos
pop
ss
jp
stos
cmp
xlat
sub
aas
es
adc
lahf
jno
xor
and
loope
aas
outsl
mov
push
xchg
pop
and
outsb
xchg
mov
adc
pop
push
lahf
xchg
xor
mov
test
ja
pop
icebp
mov
cmp
addr16
mov
pxor
jnp
jno
cwtl
js
aad
ja
sbb
cmp
mov
icebp
jecxz
mov
popa
rclb
fldl
test
jnp
jbe
loope
pop
fwait
aaa
dec
mov
push
fwait
mov
inc
dec
xor
shlb
pop
cltd
icebp
push
int
lds
insb
loop
mov
divl
addr16
xor
mov
pop
or
pop
xchg
out
pop
fwait
cmovp
repnz
jp
sub
jge
dec
mov
sahf
and
dec
mov
xor
xchg
lods
outsb
xchg
out
test
push
loop
mov
fldenv
jns
jecxz
je
mov
loopne
aad
repnz
or
out
mov
xchg
scas
mov
and
loope
out
orl
mov
loopne
jg
inc
sti
xor
aaa
test
popf
imul
ss
adc
adc
jle
cmc
outsl
stos
add
pop
mov
cmpsb
fisubl
loop
out
push
adc
mov
aas
into
push
jl
outsb
and
jno
jge
inc
jo
jmp
pop
mov
push
jb
add
sbb
xchg
push
pop
aas
jmp
xchg
or
cli
jle
push
adc
sbb
icebp
sub
add
shlb
sbbl
xor
push
sbb
lahf
mov
xchg
sub
je
sbb
cmc
in
imul
xor
aaa
jnp
xor
mov
xchg
inc
dec
adc
adc
arpl
mov
repnz
or
push
adc
in
hlt
adc
push
push
xchg
lahf
mov
mov
pusha
add
sbbb
mov
dec
xchg
dec
adc
les
out
push
sahf
xchg
fldl
adc
jmp
cwtl
aas
insl
or
sbb
dec
out
fsubs
push
bound
pop
inc
les
dec
mov
addr16
jecxz
in
scas
dec
and
push
sti
lret
pop
clc
loope
jg
nop
fwait
inc
mov
sbbb
mov
fcom
andb
scas
cltd
stc
cli
aam
inc
ljmp
or
adc
loope
dec
jb,pt
icebp
pop
ret
inc
mov
in
imul
or
sub
stos
clc
rolb
xchg
rcrb
xor
push
fsubs
ss
stos
push
outsl
fbstp
dec
jp
add
out
idivb
shr
stos
pop
fildll
cmp
inc
jp
jle
cmp
out
mov
cmp
test
mov
ret
xor
lahf
into
out
jmp
fnstenv
ss
dec
fisttpl
or
iret
dec
add
sbb
lret
sti
popa
out
fcmovnbe
add
xor
hlt
pop
dec
adc
or
popa
repnz
add
bound
jbe
cmpsl
std
subb
pop
mov
or
out
sub
add
popf
fadds
imul
loope
dec
aaa
mov
mov
jp
add
and
stos
aaa
dec
xchg
pop
call
insl
cmc
loopne
clc
leave
jae
arpl
xor
jbe
rolb
dec
mov
dec
cwtl
leave
xor
lret
ds
lahf
sti
jae
dec
and
inc
insb
cli
sbb
iret
add
adc
xor
outsb
loopne
adc
jp
mov
test
sub
jmp
test
dec
enter
add
mov
push
add
adc
mov
and
test
xchg
mov
aas
add
aaa
pop
dec
and
fisubrl
jo
dec
pop
add
mov
out
sbb
addl
outsb
sbb
mov
or
ror
lods
mov
jle
int
jp
xchg
jge
rcrl
rclb
cmp
jo
push
int3
fwait
cmp
incl
movsl
xchg
dec
adcb
adc
fisubl
mov
push
adc
mov
das
cmpsb
fnstsw
stc
test
xor
ljmp
lock
movsl
sar
in
or
sahf
hlt
fs
adc
shrl
mov
xchg
add
sbb
scas
xor
dec
rolb
mov
mov
xor
iret
mov
push
add
fidivl
aas
push
cmp
dec
out
inc
gs
inc
push
xchg
push
cmc
jmp
cmp
movsb
pop
aad
cs
pop
out
adc
enter
lea
and
decb
mov
xchg
imul
cmp
push
mov
cmp
ss
scas
mov
jb
inc
movsl
rep
imul
and
adc
pop
jo
xor
cmc
mov
push
aad
xor
pop
cli
dec
adc
pop
or
push
xchg
arpl
cmp
out
push
mov
dec
movsl
idivb
gs
mov
sub
mov
les
push
mov
pop
push
adc
fstl
ljmp
cld
cltd
sbb
jne
jp
dec
lods
mov
mov
and
clc
push
inc
and
dec
clc
xor
jae
lds
lcall
xchg
adc
incb
push
lock
ds
orl
jns
add
mov
test
ficompl
out
hlt
jae
sub
push
and
dec
push
inc
loope
outsl
cmp
popa
pop
or
inc
add
or
pop
add
jno
pop
adc
fsub
flds
cmp
int3
add
sbb
rcr
mov
enter
jae
outsl
xor
addr16
ret
dec
adc
gs
jecxz
addr16
stc
andl
or
push
fmuls
xor
fidivl
shr
daa
jae
jmp
enter
mov
mov
pusha
inc
mulb
pushl
aas
cmpsb
js
shlb
xor
jnp
outsb
add
lods
aam
mov
test
daa
test
hlt
cmc
jo
push
mov
mov
or
test
sbb
jle
push
test
mov
aaa
push
scas
repnz
jbe
shr
dec
sbb
or
mov
push
pop
nop
fdivl
loop
cmc
in
insl
jne
rorl
sahf
in
fst
loop
cmp
testl
cmp
push
sarb
mov
jmp
push
push
dec
add
push
mov
testl
xor
jge
movsl
or
xchg
pop
push
lret
inc
add
sbb
push
push
dec
dec
dec
or
cs
sub
xchg
add
jmp
or
push
push
repz
js
popf
pusha
push
nop
pop
fstpl
xor
dec
xchg
inc
lahf
push
cmp
dec
mov
mov
clc
inc
mov
push
pop
std
ret
inc
or
xorps
cmp
xchg
cltd
xor
mov
dec
push
flds
daa
pushf
and
hlt
mov
dec
std
pop
sub
sub
lret
lcall
addl
mov
dec
lods
lods
frstor
enter
iret
insb
push
xlat
jmp
into
mov
test
test
push
fstpt
sti
dec
mov
stos
pop
sbbl
insl
add
xchg
mov
test
ret
jo
or
lahf
or
es
fistps
ja
es
js
mov
repz
lods
push
cmpb
xchg
iret
pop
jecxz
movsl
mov
outsl
addl
stos
mov
incb
pop
out
push
add
mov
fcmovb
adc
mov
movsb
mull
inc
pop
in
cwtl
jae
and
imul
fs
sub
push
ret
mov
test
dec
push
iret
adc
sti
mov
stos
mov
inc
dec
insb
pop
movntps
pop
cmp
adc
repz
xchg
loop
repnz
fs
aam
jmp
lcall
std
outsl
mov
pop
mov
ror
fwait
rcrl
and
int3
pop
movb
add
dec
pusha
pop
mov
cmp
add
jmp
clc
loop
push
mov
push
jo
jp
cmp
cmpsl
das
out
sbb
or
call
add
mov
add
sub
ror
mov
xor
push
mov
jle
jg
imul
mov
rcll
mov
pop
or
pop
xchg
fisttpl
cmp
cld
clc
mov
sarl
inc
stos
sub
adc
lods
xchg
dec
mov
jb
inc
or
adc
inc
fiaddl
xchg
or
into
stos
or
in
mov
nop
push
mov
je
mov
sub
sub
adcb
rorl
out
push
dec
test
or
dec
leave
out
mov
gs
push
movsl
mov
adc
push
addr16
pop
jge
sub
cmp
add
stc
mov
mov
clc
xchg
notl
int3
mov
iret
jl
test
call
or
or
imull
inc
scas
lret
lock
mov
sub
jle
repnz
push
into
xchg
daa
mov
stos
addb
add
in
lods
mov
fistl
popf
jb
dec
mov
mov
and
mov
cmc
adc
out
jo
and
jmp
fdivrl
scas
pop
or
sub
repnz
jle
fbld
sub
loopne
adc
int
inc
repnz
push
bound
jmp
andl
push
push
fcmovnu
push
sub
xchg
aaa
call
dec
inc
push
add
orl
add
mov
rep
or
push
call
aad
mov
push
cwtl
xchg
js
decl
notl
xor
jp
fiaddl
mov
mov
mov
ret
sbb
push
mov
dec
sub
add
or
in
mov
in
cmpsl
sub
xchg
and
dec
faddp
fisubs
out
sarl
insb
push
jo
fisttps
cltd
xor
enter
jl
stos
push
inc
inc
imul
fldt
nop
mov
xchg
xor
in
ds
mov
adc
or
inc
inc
sub
fidivrl
mov
add
mov
adc
inc
cmp
clc
and
jo
outsb
lock
mov
loope
mov
repnz
jl
in
cmpsl
jne
mov
shl
add
push
shlb
jns
push
fisubl
xchg
pushl
xor
xchg
jecxz
mov
xor
fdivl
inc
sbb
xor
sbb
push
mov
xchg
adc
push
push
popa
xor
dec
stc
cmp
push
push
arpl
dec
sbbb
or
repz
jns
loope
mov
shrl
mov
mov
and
pop
enter
dec
icebp
repz
mov
shll
jl
jmp
inc
jp
hlt
shrl
pop
add
repnz
mov
daa
mov
adc
rorl
xor
fcmovnb
jg
dec
test
subl
test
push
fistpll
mov
fistps
loopne
aas
pop
sub
sub
nop
jbe
clc
inc
insl
cmp
xchg
pop
push
and
xchg
cli
mov
or
mov
mov
test
push
shl
sbb
xchg
std
fmull
aad
pop
xlat
mov
ss
addl
add
test
negb
in
or
loopne
adc
inc
dec
popf
ds
dec
flds
sub
pop
loopne
pop
add
pusha
cmp
pop
insl
test
test
jl
mov
sub
sbb
xchg
jne
push
pop
in
push
arpl
adc
adc
mov
orb
out
mov
fsts
insl
or
mov
pop
cli
adc
pusha
mov
mov
push
fldt
js
in
ss
imul
imul
cld
pop
cmp
xchg
mov
aas
fstl
test
outsl
mov
data16
or
and
sbb
lock
loopne
imull
sbb
pop
fsubrs
and
inc
movsb
xor
pop
repnz
sbb
icebp
into
lds
jo
jp
fiadds
jb
fucom
or
hlt
decb
push
jne
add
popf
jecxz
push
push
jb
add
adc
mov
cmp
fs
cmpb
fldenv
xor
cld
push
dec
xor
sub
shrb
inc
fcoms
sbb
leave
cmp
ret
push
test
mov
or
mov
inc
in
and
cwtl
or
xor
cmp
add
subb
pop
aas
jmp
int
push
ja
mov
jno
out
add
and
andb
cltd
bound
imul
add
jbe
shll
pushf
sbb
pop
sub
jg
aad
pop
adc
xchg
and
mov
outsb
in
leave
and
and
out
sbb
call
loope
pop
add
ja
outsl
mov
loop
jle
and
movsl
dec
or
pop
sub
sub
iret
cmp
push
pop
orl
imul
adcl
pop
call
mov
cmp
imul
insl
nop
push
repz
cmp
filds
js
repnz
sbb
das
jle
adcb
and
popf
nop
push
jae
xchg
cmp
xor
add
xchg
imulb
dec
outsb
bound
jmp
fsubrs
dec
outsb
out
mov
xor
pop
mov
sbb
and
scas
loope
sub
andl
fsubs
fwait
pop
je
dec
xor
fnstenv
mov
test
pop
fs
and
or
xor
or
mov
cmp
ficompl
cmp
imul
xor
mov
sbb
cltd
xor
dec
bound
gs
sub
es
out
xchg
add
lds
std
aaa
insl
jge
subl
add
fcmovnb
iret
inc
hlt
mov
pusha
cmpsl
sub
dec
xor
hlt
and
ret
cmp
mov
inc
stc
adc
fsubrs
mov
stos
test
jecxz
scas
add
xchg
cmp
pop
push
repnz
adc
inc
mov
push
enter
cli
cmp
shll
add
and
rcrl
cmp
pop
jl
insl
dec
ror
sbb
lock
cmpsb
mov
dec
or
inc
jmp
or
dec
xchg
mov
or
mov
lret
pop
mov
jmp
cmp
pop
pushf
adc
inc
mov
dec
loop
sbb
push
lods
jecxz
pop
js
add
adcl
xchg
in
out
jle
lods
jg
sbb
lock
dec
and
sbb
dec
aas
test
adc
lahf
es
rcll
pusha
ret
jae
xchg
pop
shl
aam
loopne
stos
push
dec
loopne
push
int3
lock
mov
xchg
add
mov
ljmp
shld
inc
gs
dec
mov
dec
inc
pop
xchg
mov
lods
xchg
add
dec
in
sub
jbe
xor
and
add
stos
cltd
cmp
sbb
aaa
mov
idivl
xchg
push
add
jmp
test
scas
int3
xchg
xchg
jp
inc
cwtl
arpl
jge
mov
shlb
push
mov
mov
jnp
sbb
mov
add
lahf
push
push
mov
js
pop
dec
mov
lock
pop
mov
fnstenv
xor
xchg
cmc
mov
xor
fcomi
sbb
xor
xchg
sub
and
adc
cwtl
jg
ljmp
cmp
cmp
movsl
lods
mov
std
add
jo
in
shrb
orl
cld
fsubr
pop
or
dec
orl
mov
jl
jecxz
hlt
fsqrt
es
cmpsb
nop
xchg
inc
lds
hlt
daa
sub
imul
inc
add
loope
cmp
mov
lods
jnp
or
sbb
leave
mov
int3
mov
aas
inc
or
popa
xchg
imul
add
add
sub
sub
fmull
ret
ljmp
lcall
in
and
adc
xchg
jo
stos
lret
adc
xor
fs
pop
pushf
movsb
in
enter
inc
rorl
stc
mov
mov
add
outsb
jp
in
fimuls
cmp
cli
inc
sub
pop
ljmp
lods
out
pushf
sub
repz
test
push
push
push
dec
movsl
popa
push
jbe
and
pop
lahf
ss
mov
jge
stos
jmp
outsb
pop
pop
fwait
dec
mov
test
cmp
int
dec
dec
test
fcmovne
or
fs
or
mov
popw
in
dec
push
cltd
addr16
mov
lds
insb
stos
pop
jne
mov
rclb
pop
or
in
dec
sbb
inc
dec
xchg
cmc
js
mov
insl
pop
jge
fdiv
ret
cmc
dec
repz
stos
fidivl
jle
or
adc
test
popa
sbb
loope
bound
or
mov
pushf
xor
jp
jmp
imul
add
rcrl
lcall
xor
orb
ja
movsb
sbb
in
scas
mov
xor
ds
push
mov
sti
or
pop
or
addl
mov
in
push
out
fiadds
xlat
add
test
or
in
aam
cld
popf
out
jecxz
sub
lods
nop
cmp
ss
mov
fxtract
add
dec
xor
push
or
mov
inc
inc
bound
mov
adc
inc
pushf
mov
jle
rclb
adc
sub
sahf
dec
or
adc
stos
bound
cmp
test
inc
inc
sarb
rol
xor
inc
fst
cld
add
aaa
cli
lcall
loop
lea
mov
dec
pop
adc
mov
arpl
jae
cmpsl
push
das
ja
jecxz
imul
sub
mov
pop
iret
mov
sbbl
pushf
add
dec
jge
test
subb
pusha
sub
mov
jmp
cmp
test
mov
xor
pop
lret
test
orl
ljmp
pushf
add
dec
push
enter
rclb
push
mov
std
jle
mov
sub
mov
xchg
insl
and
push
sbb
jl
adc
add
jmp
adc
pop
ds
div
sbb
inc
xlat
out
fs
incl
mov
loop
dec
loope
insb
pop
adc
arpl
sbb
addl
std
sbb
fiaddl
dec
dec
popf
cmp
sub
dec
insb
pop
dec
mov
dec
outsl
mov
jmp
dec
bound
mov
lcall
xchg
mov
pusha
test
push
and
cwtl
mov
and
add
inc
mov
and
gs
aam
sub
idivl
popa
add
add
adc
and
xor
sbb
flds
sub
mov
dec
lcall
inc
push
mov
mov
inc
icebp
mov
or
cmp
mov
test
pop
aas
pop
pop
sbb
pminub
dec
inc
and
outsl
xchg
int3
mov
mov
push
sub
add
mov
repz
xor
cmp
cmp
mov
cmpsb
lcall
pusha
imulb
lea
cmp
jle
adc
hlt
jp
leave
sti
mov
test
out
gs
sub
es
mov
in
inc
and
int3
push
mov
pusha
pop
dec
or
mov
jns
int
adc
xor
lods
dec
sub
adc
dec
sub
pop
aaa
lods
decl
scas
xor
into
out
mov
mov
mov
or
pop
mov
inc
push
scas
addb
ja
mov
add
rolb
scas
lods
xchg
enter
jo
or
pop
xchg
fs
stos
stc
sub
mov
add
orb
sub
or
std
int
pop
adcl
sub
add
pop
and
lret
test
mov
repz
sahf
adc
lretw
lahf
mov
xchg
push
loope
cwtl
iret
mov
int
lcall
push
pop
loop
jo
insl
mov
pop
in
xor
mov
xchg
loope
inc
sbb
fwait
test
ss
icebp
repnz
test
sub
lea
mov
fcomps
inc
adc
ret
into
loopne
pop
xor
mov
xchg
dec
stos
mov
shrb
scas
mov
insl
mov
in
lret
jae
fimull
aaa
jo
cs
movsl
or
jne
jnp
cli
loop
xchg
or
mov
pop
sub
fsubrs
xchg
cs
lahf
lock
pop
push
icebp
insl
fucomi
fsubs
push
sbb
cmpsb
outsb
mull
imul
das
push
inc
aas
shll
aas
xor
push
mov
jecxz
mov
pop
rcll
popf
xchg
and
xor
std
jns
mov
or
mov
cmp
push
lock
or
mov
xchg
sarl
lea
pop
aaa
popa
mov
mulb
push
ret
bound
stos
jl
js
cmp
inc
in
rcl
aaa
lock
and
mov
test
adc
cmp
cmp
inc
out
jne
dec
lea
repnz
shlb
sub
repnz
push
gs
push
lahf
and
pop
mov
fs
cwtl
cld
pop
ret
xchg
xchg
add
or
sbb
lock
andb
enter
movsb
repnz
lret
pop
in
jg
fstp
pop
lretw
adc
mov
lret
or
or
push
adcb
les
mov
repnz
or
adc
pop
into
icebp
dec
and
popl
data16
jnp
mov
xlat
pop
in
cli
inc
sbb
inc
daa
loop
lea
xchg
mov
xlat
or
xchg
aas
dec
out
dec
sti
popa
negb
push
pop
stos
or
cmp
fnstsw
jb
out
mov
mov
jg
jp
xor
and
cs
ret
push
dec
push
scas
add
pop
stos
sbb
cli
push
addr16
jp
adc
sub
mov
mov
fcomps
jne
pushf
mov
ret
pop
ret
jbe
sti
sbb
xorl
cmp
into
sub
pushf
loop
sbb
lcall
scas
push
jcxz
outsb
andl
aam
hlt
rcrb
mov
dec
dec
mov
pop
mov
mov
jp
popl
daa
dec
repz
mov
mov
sti
sti
insb
je
dec
xor
mov
lock
inc
testl
shrb
cli
mov
loop
inc
addr16
jnp
insl
mov
nop
cs
hlt
inc
mov
imul
daa
mov
adc
mov
or
lret
mov
icebp
out
or
inc
mov
adcl
xor
jo
mov
std
clc
adc
jmp
dec
adcb
pusha
nop
mov
sub
aad
leave
inc
ljmp
nop
call
inc
inc
pop
dec
adcl
mov
xchg
add
jg
push
jnp
pusha
add
addl
test
jmp
mov
jbe
call
fldt
xor
sahf
movsl
adc
xor
out
sub
call
push
adc
and
cmp
in
aas
jle
mov
rcrl
rorb
pop
paddsb
dec
loop
dec
xchg
sbb
mov
sbb
mov
dec
pop
xchg
sub
sbb
jo
ficoml
adc
pop
sub
adc
loopne
std
out
ficomps
xchg
pop
sarb
movsb
cld
in
jnp
pop
fisubl
xor
jecxz
pop
jns
xor
cmp
jne
rcll
outsl
gs
call
inc
leave
push
mov
ret
pop
shl
shr
fwait
rorb
pushl
out
and
cli
ret
pop
push
mov
lea
repnz
or
inc
push
sarl
test
jno
mov
jg
stos
call
notl
nop
sub
repz
fdivr
mov
sub
shlb
inc
ds
xor
mov
aaa
mov
roll
jl
or
mov
add
lret
out
inc
pop
leave
mov
mov
xchg
fs
leave
ja
mov
or
mov
repz
mov
mov
pushl
loop
pop
mov
jb
arpl
mov
pop
mov
mov
mov
ret
mov
sub
das
cmpsl
icebp
lcall
rcrl
cli
in
jecxz
mov
adcb
shrl
je
or
sbbb
jg
mov
xchg
cmpl
ficomps
lret
out
mov
mov
test
sahf
xor
lods
jae
jmp
sbb
cmp
out
cmp
adc
push
scas
mov
sarb
mov
sbbl
mov
and
mov
jno
loop
sub
push
and
cmp
ret
ds
rolb
add
sub
or
push
imul
xor
nop
rcl
mov
sub
divl
lock
repnz
aam
mov
jns
ret
mov
xchg
arpl
push
inc
jge
add
addr16
cli
fstpl
push
or
aad
adc
sub
push
inc
push
jge
xchg
add
inc
in
push
pop
pop
pop
or
in
lret
adc
sub
xchg
pushf
lcall
cmp
sbb
loope
into
pop
negb
cli
mov
dec
or
cmp
mov
daa
and
clc
and
loope
iret
icebp
lds
shrb
push
mov
enter
pop
mov
cs
mov
test
push
in
popl
sti
lahf
or
mov
jnp
sti
push
xor
cld
push
jae
shrb
jbe
inc
mov
cmpsl
dec
test
sbb
cmpl
mov
push
aam
in
in
adc
mov
repz
aam
repz
movsb
and
popf
sbb
out
insb
cmp
cmpsb
aaa
pop
and
addr16
insb
dec
rcll
and
pop
fmuls
cmp
insb
mov
mov
hlt
add
lcall
sarl
imul
xor
les
pop
pop
jbe
in
mov
lahf
je
popf
cmp
sub
mov
xchg
fdivrs
repz
mov
add
mov
sbbb
add
and
jp
mov
sbb
scas
xlat
int
mov
les
shr
mov
jg
rep
loope
xlat
jo
cmp
inc
xor
jno
inc
xchg
mov
push
push
fmull
loopne
cmp
sbb
jecxz
mov
push
mov
inc
and
push
xor
jl
sub
and
add
push
orb
mov
sub
divl
sarb
popa
or
daa
sub
iret
xchg
test
ret
repnz
sbb
cmp
aam
daa
sub
inc
out
les
jnp
xchg
cmp
aad
lret
sbb
into
int
jno
lods
dec
jo
jns
jecxz
adc
fsubrs
or
ret
inc
xchg
sarl
jle
xchg
jge
out
repnz
add
rcr
sub
pop
add
aad
adc
stos
pop
mov
mov
xor
andl
out
rorb
pop
dec
ret
jmp
jg
and
xchg
popa
mov
jmp
scas
xor
sub
push
push
add
adc
mov
mov
test
xchg
loopne
cmpsb
jne
add
scas
mov
fsubrs
cmp
lcall
dec
data16
ss
cmpxchg
mov
call
scas
and
jne
mov
movb
mov
add
sub
or
inc
enter
add
mov
clc
sbb
mov
sub
pop
mov
and
nop
fdivs
add
sbb
fisubrl
xchg
add
push
sub
jge
cwtl
sbb
and
orl
movsl
shrb
and
jbe
add
xor
mov
inc
inc
pop
mov
stos
imul
mov
movsb
xor
sar
mov
push
repz
mov
ja
jb
mov
stc
stos
sbb
push
pop
mov
cld
or
or
mov
out
dec
inc
pop
jnp
mov
fstpt
push
and
push
jl
das
add
dec
adc
rolb
add
mov
lds
cmc
in
jo
dec
lret
insb
jge
fdivs
jge
loop
jbe
xchg
mov
in
sub
push
dec
cmp
hlt
jo
sete
jno
cmp
test
jle
inc
movsb
movsl
and
sub
or
mov
mov
jge
cmc
mov
add
sbb
xchg
std
pop
adc
lret
in
jle
stos
rcrb
roll
idiv
xor
jno
cmp
les
aam
inc
sub
mov
pushf
xor
xchg
mov
inc
dec
pop
imul
xlat
add
mov
pop
mov
cs
loope
or
test
cmpsb
loopne
fsubs
in
mov
shrl
add
scas
loop
iret
xor
fcom
push
cmp
push
add
das
outsb
repz
cmp
pop
add
sbbl
divb
sbb
push
mov
popa
adc
ds
mov
mov
movsb
cmp
clc
jle
xchg
subl
aas
push
sbbl
jge
out
add
sub
int
mov
pop
push
pop
jge
fstl
stos
aam
dec
sahf
pop
fstl
add
in
adc
aad
pop
cli
pop
xor
cs
mov
xchg
insl
push
jae
jnp
pop
out
cs
jl
inc
fmuls
add
sbb
notl
test
or
ret
pop
call
inc
cld
imul
xchg
xchg
mov
popa
inc
adc
and
push
inc
sahf
lea
sbb
jecxz
pusha
push
insl
pushl
lods
xor
mov
std
pop
pop
xor
mov
test
inc
test
lock
mov
mov
jbe
cwtl
fcoms
test
jns
addr16
mov
xchg
fldl
mov
and
loop
sbb
pop
fldenv
loope
xchg
bound
cli
inc
add
rol
and
push
jmp
imul
push
fstl
aad
aad
daa
loopne
sti
std
clc
push
adc
gs
xchg
xor
dec
addr16
cmp
test
push
mov
fsts
out
in
fisttps
fisttps
lock
jl
bound
add
inc
aad
dec
roll
pop
inc
fcompl
mov
icebp
mov
fiaddl
xchg
popf
lea
inc
inc
mov
test
seta
jns
sarl
cld
mov
pushf
cli
and
clc
jb
ret
and
jnp
loop
sub
pop
jle
xchg
push
mov
inc
push
mov
cltd
mov
mov
inc
dec
call
dec
lcall
mov
sub
add
sbb
ror
or
push
push
std
jge
mov
and
inc
out
in
js
xor
pop
das
push
inc
rcrl
dec
ret
loope
pop
out
inc
nop
test
mov
inc
mov
addr16
cmpsb
push
cltd
xor
xor
mov
pop
add
dec
pop
jae
fstl
int
jno
fsubrs
sarl
push
je
mov
in
cmp
mov
jge
adc
loopne
jmp
insb
mov
mov
push
cmc
cwtl
stos
mov
sub
divl
in
rcrl
xchg
adc
stos
vphsubdq
lods
loope
in
add
push
mov
lret
or
xchg
cld
sub
lods
nop
jg
call
or
inc
pop
cmp
daa
in
imul
js
jge
xor
nop
jge
fsubr
fbld
jge
push
xchg
sbb
inc
je
lods
inc
das
mov
add
xchg
xor
sbb
xor
mov
aaa
xchg
mov
adc
xor
cmpsb
fxch
shrb
xchg
mov
orl
adc
and
cltd
das
push
inc
pushf
mov
xchg
or
push
pushf
pop
mov
les
jecxz
je
cs
scas
lea
stos
cmpsb
fucomi
inc
imul
lods
push
rorl
rorl
into
cld
sbb
push
cs
or
inc
iret
imul
add
dec
fsubrl
add
insl
popa
pop
int3
mov
or
mov
xchg
add
xor
and
add
stos
xlat
sar
scas
loopne
je
pop
leave
pop
ss
mov
push
insb
pop
xchg
insb
pop
dec
mov
jp
sbb
clc
scas
mov
cli
std
cmp
fwait
sbb
imul
insb
jae
pop
clc
shl
dec
and
adc
sub
stos
dec
jo
xor
fisubrs
ja
pusha
out
mov
cmp
adc
mov
fdivs
sbb
cmpsl
jae
sbb
je
pop
adc
xchg
sbb
sbb
mov
inc
aas
cmp
popf
xchg
mov
mov
dec
scas
xchg
loopne
ss
jae
rorl
fstp
mov
fcomps
cmp
inc
lcall
dec
fstpt
loope
inc
mov
sahf
pop
jb
cld
dec
lds
add
xor
jo
mov
stc
pop
xor
jl
push
gs
addr16
jo
xchg
cmp
mov
test
pop
cmp
cmp
dec
aam
enter
mov
aaa
xchg
inc
pusha
add
xchg
cwtl
aaa
xor
test
or
sub
add
inc
sub
jle
push
lods
scas
arpl
mov
je
notl
or
mov
adc
cmc
adcb
lret
cltd
sub
jb
test
fcmovne
xchg
icebp
es
adc
mov
mov
jge
idivb
mov
jne
mov
into
in
pop
js
and
fnstcw
push
mov
mov
mov
jl
shrb
pop
cmc
repz
repz
lock
aas
and
daa
or
push
outsb
out
xlat
lods
mov
and
fcomps
mov
jmp
decl
or
lcall
inc
in
sbb
adc
xchg
loop
stc
xor
dec
xchg
adc
lds
adc
out
out
add
jle
sbb
jg
andl
inc
rcrl
pop
aaa
sub
pop
mov
mov
sbb
dec
pop
mov
push
sbb
les
jl
clc
test
xor
nop
push
lea
xchg
ja
aam
mov
sbb
mov
inc
aaa
fsubl
and
ljmp
addr16
sub
enter
dec
testb
cmpsl
stos
dec
mov
cs
xchg
hlt
lret
sub
popf
jbe
add
sbb
loopne
lcall
xor
testb
call
xor
jg
sahf
pop
push
mov
mov
pop
mov
mov
mov
fcos
in
popa
leave
repz
mov
pop
dec
mov
clc
dec
outsl
in
mov
xchg
fimull
cltd
out
push
inc
in
andl
push
in
adc
lods
dec
in
sub
cmp
xchg
insb
inc
inc
mov
add
mov
jl
xchg
lock
jmp
pop
sbb
enter
or
pushl
mov
inc
mov
jno
inc
sbb
out
out
mov
cmpsb
mov
jbe
lret
rorl
pusha
jg
icebp
and
lods
xchg
movsb
es
jns
shlb
push
mov
in
sub
push
in
jo
pop
dec
xlat
imul
pop
das
push
test
data16
mov
xlat
xchg
or
mov
xor
push
ds
pop
pusha
inc
enter
sbbb
notl
dec
jmp
daa
push
leave
mov
fnstcw
sub
inc
stc
mov
repz
rcl
mov
fdivr
or
or
fwait
out
nop
push
mov
mov
xor
mov
test
pop
push
and
imul
sbb
push
in
ret
shll
mov
cmc
movsl
cmp
fsts
add
dec
fwait
mov
fldln2
sub
xorw
scas
mov
bnd
js,pt
jmp
adc
enter
arpl
lds
clc
ret
or
data16
xchg
add
loope
lahf
and
mov
xor
out
mov
bound
insb
jns
dec
add
fdivrl
mov
jecxz
insb
mov
in
movsb
cmc
sbb
out
leave
jo
cmp
fistpll
jb
push
in
lret
adc
push
or
pop
pop
xor
cs
xchg
fnstenv
aas
mov
push
popf
add
dec
xor
leave
sbb
call
pop
fimull
mov
out
std
cs
jle
fwait
bt
adc
rorb
xchg
insb
je
imul
popaw
ds
add
xchg
mov
sbb
push
in
sbb
jns
fildll
pop
adc
je
shll
mov
xchg
lcall
int
jno
inc
sbb
jb
pushl
imul
jmp
pop
jg
jb
xchg
push
insb
or
gs
fdivl
shlb
leave
jmp
jp
std
fadd
push
fisubs
cld
repnz
fs
jg
das
in
out
mov
adc
mov
out
push
add
dec
and
loope
sbb
mov
xor
cmpsb
das
jno
popa
sub
ret
sub
push
jecxz
pop
ret
mov
xchg
stos
jae
push
mov
add
je
out
xchg
fdivs
repnz
xor
xchg
pop
std
jb
dec
xchg
mov
push
fsubrs
aaa
jbe
cmp
hlt
sub
inc
shlb
fcmove
js
inc
bound
rcrl
sahf
jae
movsl
aad
jecxz
dec
dec
jo
fisttpll
js
int3
and
insb
out
xor
rcrb
lea
add
and
push
sbb
sti
es
stos
jno
mov
adc
and
or
or
out
enter
inc
negb
and
pop
cmpl
mov
lret
clc
xor
packuswb
cmp
ret
and
dec
cwtl
pusha
lds
cmp
pop
imul
dec
jmp
les
test
xchg
mov
mov
mov
sbb
popf
lahf
imul
push
out
mov
and
pop
bound
or
inc
dec
adc
jne
pop
xchg
mov
and
add
cmpl
ds
mov
jo
mov
adc
lea
inc
xchg
dec
or
mov
mov
lret
cs
cli
push
xchg
shlb
dec
test
inc
loop
mov
adc
mov
fnstcw
gs
cmpsl
inc
je
pop
scas
xor
xor
notb
pop
inc
ret
pop
mov
mov
mov
or
pop
rcr
inc
sub
xor
rcrl
dec
rol
sbb
ja
add
cld
push
lcall
jmp
sbb
xchg
sub
pop
imul
orb
adc
add
cmp
push
pop
js
xchg
xor
repnz
in
and
adc
inc
icebp
mov
xor
dec
xchg
lea
jno
pop
adc
stos
lcall
inc
xchg
mov
in
loopne
lret
mov
out
cmp
popf
jo
shl
scas
andb
int3
jmp
mov
jg
inc
sub
cld
gs
repnz
adc
fidivs
pop
xchg
shlb
mov
cmp
lcall
std
shl
pusha
adc
das
mov
xor
pop
imul
jne
sub
adc
fdivrs
outsb
test
ja
cmp
fisttps
stc
fsts
jb
add
dec
scas
xchg
push
lahf
inc
push
pop
in
rcrl
inc
ss
pop
dec
xchg
push
xchg
jnp
mov
or
sub
push
mov
add
cs
repz
mov
add
or
jg
ljmp
xchg
mov
imul
push
imul
daa
jecxz
add
cltd
mov
mov
cmp
sbb
jp
xchg
add
loope
jmp
popf
test
mov
fldl
inc
int3
call
loope
xchg
sbb
das
das
jno
sarb
rcrl
shrl
mov
jns
lock
xchg
dec
add
popf
pop
stos
lahf
adc
cs
lahf
fistpl
ljmp
movsb
mov
sub
orl
push
fcmovbe
stc
jp
mov
rclb
mov
cmpb
jne
cmp
pushf
xchg
push
lods
jns
ret
into
lods
scas
imul
gs
fdivr
sarl
imul
jbe
fsubr
mov
inc
mull
pop
arpl
mov
jmp
dec
push
mov
cmpsl
sbb
mov
out
adc
xor
outsl
ss
and
pop
sarb
stos
mov
popf
add
pop
or
xor
fwait
mov
or
test
push
or
sbb
nop
and
adc
test
mov
gs
mov
jne
xor
jge
adc
push
adc
inc
out
jno
add
cld
popf
mov
aas
mov
testl
in
loope
add
int
adc
mov
fdivl
in
cltd
lock
bound
sub
mov
mov
add
jg
pop
scas
mov
push
lret
sbb
movb
cli
mov
sbb
shll
push
and
sub
out
divb
or
test
push
pop
cmpsb
shl
fldl
inc
les
lret
test
xchg
xchg
sub
mov
fstpl
test
ret
clc
aad
ficoml
and
ror
sbb
dec
loopne
pop
popf
adc
jae
add
mov
addr16
xchg
add
jo
jecxz
ljmp
mov
dec
je
mov
cli
dec
sbb
push
iret
pop
aad
jge
push
call
movsl
movl
add
movb
adc
fidivl
sub
xchg
push
adc
dec
int3
shr
add
mov
add
cmpsb
out
inc
sbb
cmp
clc
jbe
cld
jnp
in
mov
int3
sbb
je
dec
mov
je
xchg
cmpsb
fistps
icebp
hlt
popf
call
mov
and
lds
pop
xor
add
ja,pt
lods
flds
cmp
xchg
sub
dec
adc
mov
jbe,pt
test
popf
pop
orl
call
int3
add
test
int
push
add
push
inc
jne
xchg
mov
outsb
pminsw
roll
addl
out
mov
lock
sub
outsl
and
jae
andl
stos
pop
loope
mov
mov
sbb
xchg
ficompl
imull
test
cmp
jmp
loop
push
xorb
dec
mov
pop
pop
clc
data16
subb
test
or
mov
cwtl
xchg
mov
sbb
mov
mov
xchg
cmp
add
and
insb
jnp
js
out
mov
push
outsl
xchg
xchg
out
cmc
mov
xor
inc
mov
jecxz
mov
jnp
dec
je
add
js
xchg
movsb
inc
mov
incb
xor
leave
mov
mov
leave
mov
shlb
lds
sub
mov
hlt
je
shll
int
leave
icebp
movsl
jle
xor
push
test
cmp
call
mov
cmp
test
neg
jge
adc
dec
jl
push
js
xor
imul
xchg
mov
lea
pop
mov
push
stos
imul
adc
pop
push
pusha
ja
je
ds
ss
repnz
and
test
mov
xlat
hlt
or
and
aad
pop
xchg
or
icebp
mov
or
mov
jmp
sub
and
fdivrs
pop
iret
stos
and
cmpsb
sbb
mov
mov
jnp
iret
in
outsl
cltd
xor
cli
das
and
xchg
push
push
adc
jbe
lds
test
jmp
popa
sub
dec
test
sahf
cld
int3
or
push
sub
arpl
push
xchg
jg
jae
cmp
loop
mov
sahf
ret
sub
xchg
adc
in
jmp
mov
push
das
negl
iret
loope
pusha
mov
fiaddl
sahf
call
shll
jg
ffree
mov
ss
fistpll
or
inc
fucomi
pop
push
rorb
fildl
sbbl
jb
dec
scas
insl
pop
test
sar
loop
insl
or
add
jne
in
mov
push
mov
jo
xor
ret
sbb
cmpsb
sub
push
pusha
call
jp
xor
mulb
mov
dec
bound
xor
dec
out
bound
xor
hlt
mov
cmp
pushl
cmpsb
or
sbb
loope
in
bound
ficoml
xchg
out
push
loope
int3
lds
pop
fcompl
adcb
in
dec
sbbb
ret
jb
mov
mov
insb
cltd
stos
inc
imul
in
loopne
cmp
int
mov
aaa
xchg
pop
pop
cmp
inc
add
cmc
lds
sbb
in
jo
nop
and
mov
jg
push
int
and
sub
xor
mov
repz
cltd
mov
in
fnstsw
dec
arpl
lret
inc
pop
push
add
push
lock
xor
es
leave
in
mov
addb
lods
cmpsb
fbld
push
in
xchg
adc
add
inc
sbb
adc
jne
pop
and
out
sub
adc
add
imul
out
jl
mov
mov
jg
or
cmpsl
push
cmp
andb
or
imul
sub
rcr
push
push
or
pop
sub
mov
icebp
stos
sahf
mov
mov
cmc
dec
dec
shlb
scas
jmp
cmpsb
movsb
stos
outsl
mov
adc
sbb
adc
fadds
je
loop
dec
mov
mov
mov
fnstenv
cmpsl
pop
sahf
sbb
sub
mov
mov
push
pushf
mov
pusha
int
mov
aam
cmp
sti
pop
push
add
hlt
add
push
sahf
lods
add
push
enter
movsl
xor
imulb
pop
aam
or
sub
cmp
pop
nop
mov
xchg
push
call
jbe
sarb
mov
cwtl
xchg
pop
les
push
xchg
ret
lock
mov
into
dec
cmp
stos
xlat
cmp
test
andl
jb
js
jae
cmp
cmpsb
ljmp
sar
scas
dec
add
pop
aas
sti
sub
dec
outsl
jae
aaa
iret
enter
sub
and
add
jbe
xor
add
bound
pop
dec
sbb
jne
call
jb
lcall
push
aas
mov
adc
sti
lds
push
mov
insb
pop
stos
inc
repz
mov
adc
shrl
loop
ja
push
lahf
rorb
sbb
stos
scas
shrl
leave
daa
or
mov
rclb
push
fs
fldenv
aas
xchg
repz
mov
add
push
jecxz
sahf
xchg
cmp
mov
jle
mov
fnsave
loopne
test
dec
xchg
orb
rol
jns
push
jnp
jp
pop
test
xor
sbb
xchg
mulb
pop
test
mov
mov
mov
cwtl
add
push
sub
cmpsl
mov
andl
xchg
pmaxub
nop
out
je
test
insl
imul
or
sub
jb
jle
fistl
xchg
cmpsb
dec
lahf
idiv
arpl
add
pop
or
xor
adc
mov
lcall
cmpsb
xor
xor
stos
sub
lret
pop
or
js
mov
xor
fwait
lcall
add
sbb
dec
sahf
and
sbb
pop
out
cmc
or
jle
lret
add
jae
pop
clc
sbb
or
iret
pop
jle
test
dec
leave
ret
or
xchg
movsl
jge
mov
mov
push
negb
mov
scas
movsb
dec
inc
cmp
inc
out
mov
adc
mov
or
inc
mull
inc
movsb
in
pop
lret
or
lcall
mov
outsb
xchg
and
sarl
push
aad
iret
cmpsl
ret
or
mov
jge
inc
xchg
cmp
xchg
sub
dec
loope
cltd
enter
inc
data16
outsb
in
ret
mov
dec
cld
mov
sahf
int3
pop
outsl
jmp
cli
or
add
inc
sub
in
mov
ret
ja
pusha
out
es
push
int
sar
ja
mov
cli
test
mov
rcll
inc
loopne
pop
pop
outsb
repz
ljmp
pop
sbb
mov
cmp
int3
es
mov
sti
pop
pop
dec
nop
mov
repz
sahf
out
fldl
leave
xlat
mov
and
jl
fidivl
movsl
add
adc
mov
stos
mov
in
sub
rclb
mov
mov
loope
fists
mov
sub
or
pushf
mov
in
fwait
inc
cmp
mov
or
rcrb
mov
sbb
push
pop
pop
movsb
lods
inc
add
pop
push
inc
scas
cwtl
popf
dec
sahf
sub
into
mov
fisubl
stc
es
and
cs
xor
ret
jp
sbb
cmpsb
test
xor
cli
jb
fimull
js
aam
or
adc
and
icebp
xorb
pop
dec
fimuls
mov
sub
sahf
es
pop
into
cmpsb
sub
out
pop
mov
sbb
imul
mov
jne
mov
iret
fnstcw
add
xchg
xchg
fnstsw
xchg
or
pusha
push
jno
outsl
leave
pop
mov
lcall
adc
fcoml
dec
in
outsb
les
jmp
shll
xchg
dec
xchg
int
imul
adc
push
loope
mov
test
sbb
pushf
out
mov
les
pop
gs
in
push
fmul
push
mov
add
scas
mov
sub
sbb
pop
insb
lcall
dec
mov
xchg
mov
rorl
push
and
pop
mov
sub
sbb
mov
mov
inc
xor
shlb
dec
rcrl
lods
fsubl
ss
insl
or
sahf
popf
pop
sub
push
xorb
aad
xor
mov
xchg
mov
jbe
cmp
lds
arpl
jg
daa
loop
jbe
mov
add
mov
inc
fxch
out
and
sub
test
fsubs
fisttpl
sub
test
xchg
or
mov
sub
cs
frstor
test
scas
popf
push
imul
addb
adc
mov
mov
jl
push
push
cld
and
sbb
hlt
adc
inc
cmp
jmp
pop
push
mov
sbb
enter
mov
rorl
xchg
push
ss
arpl
loop
fldl
or
and
mov
add
cmp
mov
ljmp
mov
jp
adc
int
out
fs
push
cltd
aad
pop
adc
imul
movsb
out
mov
mov
xchg
pushf
push
dec
jmp
xchg
mov
jl
inc
mov
push
pop
mov
add
incl
mov
inc
xchg
data16
push
mov
fists
nop
mov
mov
xchg
mov
adc
pusha
and
push
jb
and
xchg
mov
push
mov
sub
data16
mov
scas
add
int3
fisttpl
in
mov
and
fs
adc
mov
xchg
fisubs
outsb
aam
in
mov
jmp
addl
adc
xor
fnstcw
lcall
insb
movsb
or
jno
jg
mov
xchg
cwtl
or
jmp
push
mov
and
jb
push
ret
pop
xchg
aas
or
ds
pusha
das
ja
scas
outsl
adc
xor
sbb
cmp
shlb
cs
andl
pop
cs
fmul
subb
dec
cmc
cmp
jne
cmp
js
add
loopne
xchg
cmp
or
repnz
addr16
fildl
mov
rorb
mov
adc
sbb
leave
mov
and
pop
movaps
je
nop
jae
pop
mov
mov
pusha
jnp
jbe
mulb
jg
adc
mov
mov
ret
mov
aam
push
xchg
or
mov
ficompl
pop
dec
es
adc
pushf
nop
cmp
adc
jge
inc
xor
call
das
adc
sub
mov
mov
out
test
js
pop
movsl
shll
push
pop
xchg
and
cmp
in
inc
popa
pop
inc
int3
addr16
mov
pop
test
ficoml
imul
jl
iret
mov
cmp
aaa
push
mov
push
in
jle
call
push
rolb
push
mov
test
dec
fs
sub
jmp
out
jecxz
sar
pop
in
xchg
popl
adcl
rcr
sbb
dec
or
sahf
pusha
xor
jecxz
jne
call
mov
out
and
pop
shrl
mov
pop
jge
push
push
sahf
out
or
test
xchg
mov
or
push
mov
ret
mov
add
outsl
xchg
pop
jo
jmp
sub
dec
and
das
pop
cwtl
daa
jecxz
mov
daa
imul
jae
mov
cmp
pop
and
fnstenv
mov
add
xchg
sub
orb
push
cltd
cmp
shll
dec
add
inc
subl
xorl
and
lods
cmp
dec
inc
fisttpl
test
repz
mov
inc
push
gs
gs
mov
call
xchg
add
add
negb
adc
push
mov
cmp
outsl
faddl
cwtl
cmc
ds
add
outsl
sbb
sub
xchg
mov
sub
icebp
adc
xlat
add
in
por
xchg
int
loop
hlt
mov
and
xchg
orl
sub
cmp
pop
sbb
jl
mov
push
mov
fstpl
jb
mov
xlat
push
push
sbb
and
loop
push
push
icebp
lods
mov
sarl
cmp
lahf
adc
inc
sti
jge
dec
rcr
test
in
scas
mov
or
add
dec
ret
hlt
scas
mov
push
push
pop
shrb
icebp
and
int3
xor
pop
cmp
mov
dec
je
sbb
enter
stos
loop
ljmp
subb
rorl
pop
cmp
hlt
cli
in
push
sbb
dec
dec
jecxz
cld
mov
mov
in
inc
test
mov
pop
pushf
xchg
mov
inc
push
dec
mov
pop
pushf
in
add
bound
add
aad
popf
jle
js
add
pop
js
pop
mov
bound
xchg
xor
fiaddl
sarb
xor
icebp
int
and
je
retw
sarl
mov
addb
lahf
js
into
js
and
mov
mov
pop
ret
lods
jb
sub
xor
fs
loop
je
jp
sti
cltd
movsb
rorb
inc
cmp
cmpsb
fidivs
xchg
or
vpcomd
fadd
mov
add
mov
dec
cmp
pop
scas
or
mov
jb
add
dec
stc
sub
in
mov
in
push
mov
cli
pop
test
and
int3
xchg
ja
out
out
shrb
daa
leave
inc
mov
pop
pushf
je
push
sub
iret
push
xchg
xor
mov
cmc
cs
mov
push
movsl
adc
push
mov
jbe
inc
subl
ror
jl
jae
es
out
imul
mov
mov
shr
mov
mov
pop
dec
mov
inc
mov
xchg
or
lock
or
adc
aam
jnp,pt
fidivl
into
dec
xchg
jne
mov
in
loope
mov
loopne
ja
xor
pop
dec
pop
cltd
sub
ja
pop
enter
ds
std
lods
lret
sti
dec
inc
fstpt
ss
xchg
lds
rorl
mov
in
xchg
mov
sub
pop
jl
movsl
pop
movsb
sbb
cs
xlat
mov
rcrb
testb
adc
jae
push
imul
test
fsubrl
mov
pop
fcmove
iret
jmp
push
or
fidivrs
mov
dec
push
mov
pop
inc
mov
push
gs
xchg
jl
lcall
js
jbe
cmp
lds
test
mov
sub
rolb
fists
loopne
je
mov
cmpb
inc
shrb
mov
addl
lahf
or
sub
inc
roll
les
call
stos
stos
sarl
sub
and
out
add
sub
adc
mov
pop
mov
sbb
bound
and
test
shrb
or
jecxz
cmpb
mov
pop
inc
jmp
or
scas
pop
pop
lret
into
test
lea
sbb
pusha
rorb
repz
sub
inc
sub
push
dec
hlt
outsl
xor
sbb
jb
sub
jl
gs
sbb
xor
cmp
iret
rolb
test
loop
lea
add
lds
das
test
mov
inc
rol
data16
fwait
cmp
fldt
icebp
cwtl
xchg
aam
hlt
jne
push
jg
sarb
xchg
scas
pop
xor
mov
int3
int
mov
or
fsincos
insl
xor
jae
cmp
sarl
out
xlat
sub
mov
std
pusha
stos
mov
or
test
in
mov
push
xor
data16
cmp
add
push
cmp
and
jecxz
mov
shl
icebp
imul
pop
addr16
arpl
or
ja
add
jmp
cmp
popa
inc
out
mov
push
iret
adcl
cmp
jns
mov
lret
cmpsl
mov
xor
outsl
inc
and
test
push
movsl
mov
andb
inc
pop
in
add
sub
lea
and
xchg
sbb
add
imul
subps
out
mov
lcall
dec
lahf
lods
out
push
ss
in
sub
sahf
fidivrs
stos
sub
cld
nop
and
dec
fcom
mov
mov
sub
and
mov
jmp
dec
pop
dec
stos
xor
je
mov
pop
xor
xor
xlat
aas
push
stos
pop
adc
mov
fnstenv
mov
rcrl
ljmp
insb
loope
not
pop
jg
jecxz
inc
adc
or
or
loop
xor
out
inc
in
stc
rclb
pop
cwtl
aad
gs
loop
mov
out
call
fs
insl
sub
fcomp
or
mov
cmp
js
jae
aaa
in
inc
jno
movl
pop
dec
mov
gs
jmp
pop
les
or
aas
push
nop
cwtl
sub
jl
dec
pusha
push
dec
rorl
outsb
adcb
adc
add
xor
push
movsb
lods
jb
inc
ds
ss
cmpsb
cld
mov
pop
or
gs
mov
push
movsl
xor
and
stos
lock
sahf
dec
xor
es
adc
and
or
mull
and
pop
add
dec
inc
jns
popa
adc
jecxz
push
mov
call
mov
or
push
test
or
lahf
js
inc
inc
in
add
repz
cld
dec
xor
arpl
ljmp
rorl
pop
popf
push
sub
lcall
popf
push
pushf
loopne
call
mov
in
insb
jge
or
add
adc
cld
ljmp
push
mov
mov
ret
nop
xorb
fdivl
ret
data16
subb
add
jmp
cmp
mov
nop
insl
cmc
xorb
push
fsubp
xor
outsb
fs
jecxz
hlt
movsb
decl
lahf
xchg
and
out
mov
sarb
inc
imul
dec
jl
push
into
mov
enter
jo
jge
imul
test
outsl
mov
sub
sub
adc
shrl
pusha
in
xchg
mov
sti
fstpt
insb
popf
push
cmp
cmp
pop
jno
cltd
pop
popf
or
sub
or
test
enter
xchg
fadd
sub
pop
rorl
inc
mov
adcb
imul
dec
pop
insl
inc
xchg
insl
jle
push
ret
sub
insl
mov
je
lods
cli
push
cmpsb
push
inc
subl
neg
pop
sub
sbb
xchg
dec
inc
enter
sbb
pushf
sarl
add
dec
jmp
ss
sbb
aas
dec
dec
cmc
sbb
mov
and
cmp
inc
push
lcall
dec
jo
test
outsb
xchg
sub
fcompl
fsts
jmp
inc
jg
xor
sbb
mov
xor
dec
lahf
sbb
in
out
outsb
push
xchg
sub
sub
ficoml
push
in
cwtl
out
push
inc
sbb
sub
sarb
jge
xchg
data16
fnstenv
imul
loop
lea
aad
stc
xchg
jmp
imul
jns
lret
add
jp
add
or
sub
data16
in
pusha
add
ret
pushf
loopne
lret
ret
insl
xchg
jecxz
inc
mov
jns
push
aas
std
loop
dec
cld
popf
add
adc
insl
jns
ds
jmp
and
and
loopne
pop
sub
not
adc
stos
pushf
dec
mov
xchg
xchg
mov
mov
popf
cmpsb
cmpb
clc
pop
scas
fs
dec
sub
cmp
popa
mov
sub
push
pop
xor
push
sbb
add
jbe
pop
push
mov
daa
cmp
cmp
dec
add
mulb
xorb
sub
icebp
adc
and
push
pop
popf
pop
lret
push
out
clc
mov
fisttps
push
mov
xchg
bound
push
sub
jg
enter
into
jecxz
sub
test
jo
add
inc
dec
loopne
inc
sbb
push
stos
fwait
adc
cld
imul
jp
pop
lods
int
addb
out
pop
loope
call
daa
sbb
mov
lret
sbb
test
test
or
sbbb
jnp
fstl
lret
cmp
xchg
xor
int
ret
push
lahf
and
imull
fimuls
bound
cmpsb
setp
roll
push
js
xor
jb
pop
loop
jecxz
ror
mov
sahf
bound
out
arpl
jno
cmp
jmp
cmpsb
sbb
sub
adc
rorl
js
inc
mov
enter
add
dec
sbb
movsl
add
test
pop
cmp
daa
lret
xor
aaa
and
mov
sub
sti
mov
mov
ret
ror
dec
xchg
fcmovne
or
or
push
mov
mov
loope
mov
jp
lds
mov
adc
dec
push
add
lods
cmp
and
mov
and
ror
mov
sub
out
sbb
mov
and
push
ficoms
lcall
cld
or
daa
mov
sub
ficoms
xchg
add
leave
push
mov
mov
clc
sarb
adc
add
inc
test
sbb
xor
dec
push
xlat
js
cmp
mulb
push
cltd
aad
je
xchg
push
fildll
outsb
adc
push
mov
mov
mov
test
cltd
pop
jg
ja
sar
fcomi
add
xor
rolb
pop
fnsave
xor
scas
inc
gs
rcll
enter
jmp
mov
das
imul
repnz
cmp
adc
push
loope
sahf
jnp
pop
sub
jae
or
mov
aam
mov
ds
fdivl
add
push
lods
xchg
push
lds
out
jne
jo
xor
insb
bound
lahf
test
bound
scas
adc
iret
int
xchg
lahf
pop
lods
das
mov
push
add
inc
pusha
out
mov
sbb
mov
cmp
lret
in
xchg
pushf
inc
inc
cmpsl
and
sbb
fbstp
pop
rclb
insb
cmp
dec
jmp
sub
sub
mov
sub
aad
sub
outsl
fadds
mov
cmp
jge
jne
cmp
insb
xchg
adc
scas
dec
je
or
insl
fcmovbe
mov
jnp
jmp
imul
int3
sub
fadd
push
popf
shrl
push
in
xor
lds
sbb
lock
mov
add
sti
jne
xor
push
push
cld
lahf
icebp
and
mov
cmp
mov
add
xchg
dec
pop
xor
int3
fucom
mov
dec
in
ds
push
sbb
push
in
sarl
scas
ror
inc
stos
cmp
mov
out
or
outsl
imulb
lret
push
mov
in
sub
shlb
cld
and
fstps
dec
xor
into
pop
outsl
sarl
sbb
outsl
dec
push
jle
ja
in
push
and
sub
dec
dec
dec
xor
push
sub
adc
inc
loop
push
and
mov
add
movsl
sbb
mov
les
call
mov
ljmp
cli
out
cltd
outsl
jmp
xor
xchg
mov
mov
je
mov
fcomip
imul
xor
pusha
and
push
imul
add
xor
clc
das
hlt
xchg
shr
fiaddl
adc
sbb
xor
lret
cli
cmp
jb
and
pop
cmp
ja
cmp
daa
pop
jp
pslld
enter
mov
lock
stc
clc
push
mov
sub
pop
ret
xor
push
sar
mov
lret
add
xchg
lods
mov
fsubrs
out
push
push
mov
rclb
cwtl
pop
fstpl
lret
fisubrl
pop
and
mov
pop
and
xor
pusha
pushf
sbb
sub
pop
sbb
and
cmp
sub
sub
fldl
jne
cmp
je
ret
xchg
mov
mov
mov
push
ljmp
in
xorb
gs
lcall
cltd
sbb
jb
dec
dec
sbb
test
dec
mov
lahf
leave
mov
and
push
sarb
pop
inc
inc
les
dec
push
icebp
push
add
pop
enter
and
ret
push
jmp
pop
add
pop
fs
ss
push
test
cmpsl
je
and
push
sub
into
lods
push
add
cmp
pop
sti
aam
xadd
xchg
pop
xorb
sub
out
daa
insl
sti
and
inc
and
int3
out
inc
cmp
xchg
ficomps
fisttps
sbb
ret
mov
je
xor
nop
mov
enter
add
adc
das
lock
lock
hlt
loope
push
jae
sub
mov
push
ja
addb
test
mov
add
push
lods
mov
xchg
cwtl
cmpsb
mov
mov
jl
call
push
pop
and
sbb
fisubrs
xor
movsb
aam
mov
xchg
ret
int
dec
mov
mov
sbb
jecxz
xlat
fldt
jb
lds
lock
pusha
daa
adc
cmp
in
dec
mov
and
mov
scas
mov
scas
dec
jecxz
test
pop
imulb
mov
adc
add
add
cmpsb
jmp
add
js
into
incb
cmpsl
mov
jbe
jbe
lds
jnp
and
ljmp
sbb
mov
or
scas
mov
stos
test
mov
sbb
loope
fisubl
cld
je
mov
adcl
arpl
sbb
lock
aad
pop
sbb
push
adc
sub
and
xor
es
xchg
testb
xlat
fcmovu
fidivl
rclb
or
aas
mov
shll
xor
movsb
andb
add
loop
sbb
push
es
outsl
jae
cwtl
flds
jbe
nop
xchg
ljmp
adc
pop
cmp
inc
mov
sbb
add
mov
imul
jmp
mov
arpl
jge
js
sub
or
je
ljmp
xchg
cmp
push
lods
xchg
imul
or
mov
sub
fs
push
jns
dec
xor
or
or
adc
dec
mov
repnz
xchg
adc
shl
adc
ret
lock
std
xlat
es
push
out
xchg
pushf
out
rcr
sbb
test
aaa
push
add
out
outsb
push
int3
in
imul
stos
cli
adc
jb
mov
mov
xchg
mov
mov
adc
xor
pop
ljmp
fimull
sbb
stos
rcrl
gs
sub
shl
ljmp
leave
out
cwtl
lods
call
into
xchg
addr16
xor
dec
aaa
push
mov
xor
pop
stos
cltd
ljmpw
sub
xor
popa
fisubs
push
add
add
out
aas
mov
sbb
lock
sti
mov
sub
xchg
xchg
add
jp
and
sub
in
imul
or
aam
push
mov
fwait
jl
in
ret
xor
sbb
adc
mov
and
inc
imulb
ja
in
jae
jecxz
mov
outsl
or
adc
cltd
xchg
addr16
sub
dec
fs
adc
push
xor
pushl
das
idivb
mov
fnstsw
inc
adcb
ds
fstpt
pop
cmpsb
stc
push
stc
gs
or
push
cmpsl
repnz
cli
sbb
jl
ja
sub
hlt
xor
mov
xchg
lea
outsl
sarb
ss
daa
pop
fiaddl
in
cli
pushf
stos
in
mov
addr16
mov
cmc
add
shufps
pop
pop
adc
jle
jns
out
sbb
into
pop
int3
xchg
aaa
jo
imul
jle,pt
in
push
push
mov
mov
testl
xchg
je
mov
inc
mov
sbb
imul
lahf
inc
call
pusha
les
test
int
mov
pop
push
bound
push
jmp
adc
out
orl
sbb
sub
call
jp
sbb
mov
aas
mov
cmp
outsl
jle
xchg
lahf
add
in
repz
pusha
xchg
dec
repnz
inc
loope
and
out
imul
xchg
xor
outsb
cmp
lds
fs
jae
icebp
testl
push
add
jp
aad
cmp
std
mov
stc
add
cmp
loope
nop
lcall
jns
in
mov
adc
daa
inc
mov
lret
jns
popf
jb
fdivr
cmp
push
push
push
xchg
fidivs
fisubs
mov
cmpsb
mov
xor
cmp
and
ja
in
jmp
rolb
int
ljmp
arpl
leave
pop
inc
ss
pop
mov
xchg
cmp
mov
mov
push
jle
cld
fcompl
add
adc
shl
xorl
add
dec
xor
lea
xchg
push
shl
jg
xchg
imul
xchg
mov
pushf
dec
cwtd
jae
adcb
fidivl
dec
pop
pop
push
out
mov
fs
loopne
dec
into
lea
int3
cltd
repz
rcll
pop
ja
es
outsb
xchg
sub
pop
xor
sub
lret
mov
sti
incb
ds
push
shll
loopne
sub
ljmp
adc
pop
aaa
jo
xchg
inc
pop
sahf
mov
mov
out
std
aam
add
mov
adc
mov
scas
push
jo
clc
sbb
jmp
arpl
sub
sbb
or
stos
mov
loope
push
jp
hlt
stc
test
ret
push
mov
jecxz
enter
mov
inc
clc
sub
daa
mov
js
jb
sbb
jno
sub
popa
icebp
push
jge
je
dec
fcomps
jnp
idivb
or
out
cmp
xor
xor
ret
pop
test
pushf
std
mov
inc
data16
iret
cmp
xchg
je
loopne
adc
jmp
ja
inc
mov
jbe
jbe
fyl2x
or
arpl
sbb
out
and
push
xor
and
in
push
pop
pop
sub
xor
dec
call
lods
cmc
pushf
mov
hlt
fdivl
xor
and
clc
jne
xor
repnz
dec
push
pop
jno
and
daa
push
push
shr
insb
leave
lret
dec
icebp
sbb
in
pop
xchg
and
jo
jp
testl
mulb
xchg
imul
cld
mov
into
cmp
idivl
pop
aam
aam
jle
pop
cmpsl
lea
jp
aaa
inc
xchg
addr16
loop
mov
add
cmpb
bound
call
jnp
adc
insl
or
outsb
iret
sbbb
cmp
push
and
sahf
mov
test
add
sahf
fchs
inc
jne
mov
add
inc
xchg
ret
arpl
outsl
mov
stos
or
call
insb
insl
std
addl
loopne
inc
add
pop
xorl
cli
jbe
and
rol
push
clc
adc
stc
ret
inc
scas
push
xchg
push
fmul
cmp
sbb
lcall
sub
or
lret
sub
xchg
arpl
xlat
inc
gs
fwait
xor
or
fsubs
pop
lret
std
xchg
cmpsl
jg
mov
pushf
xchg
adc
cmp
test
mov
jne
cmpsl
mov
dec
and
mov
xor
popf
dec
jo
inc
or
mov
jne
mov
pusha
mov
pushf
inc
idivb
jmp
add
mov
adc
mov
lods
adc
mov
loope
sahf
xchg
shlb
mov
adc
pop
arpl
jb
rol
int3
mov
inc
or
jecxz
xor
cmp
push
mov
imul
fcmovne
pop
add
test
jae
pop
ljmp
pop
ret
xor
ret
sbb
shlb
pop
or
outsl
jp
jp
adc
enter
ret
cmpb
add
sbb
mov
orl
adc
rcrb
sbb
lods
lret
mov
test
mov
aam
clc
imul
mov
push
fsubrp
bound
rclb
sub
push
sbb
xchg
fwait
movsb
dec
aam
aaa
inc
push
fs
lret
mov
pop
xchg
int
dec
cld
in
cli
mov
andb
in
xor
es
push
push
push
pop
inc
test
scas
aad
mov
int3
sarb
jne
bound
xor
fdivl
mov
and
outsl
lahf
popf
pushf
pop
inc
test
cmp
jne
and
sub
in
data16
pop
mov
lret
mov
jo
mov
pop
xchg
cmp
aas
ljmp
cltd
cmp
sub
test
add
add
and
arpl
test
shrl
outsl
sub
int
xchg
je
adc
mov
cmp
sub
daa
jmp
mov
lret
ja
pushf
insl
addr16
mov
cli
mov
out
mov
xor
sub
subl
mov
jne
inc
aas
sbb
adc
adc
cltd
inc
add
cmpb
loop
test
push
mov
or
jmp
aas
scas
jb
dec
jp
push
ss
adc
xor
sbb
jne
jmp
sar
xorl
xchg
and
fcmovb
xchg
pop
stos
dec
dec
out
mov
std
sahf
movsl
adc
in
sbb
jecxz
into
sarw
jmp
xor
fbstp
mov
mov
adc
mov
xchg
icebp
inc
mov
inc
jnp
arpl
xor
insb
iret
mov
push
mov
scas
stc
fildl
cwtl
adc
xchg
idivl
movsb
loopne
sbb
sti
push
orl
pop
iret
movsb
dec
test
inc
pop
mov
add
clc
adc
adc
mov
add
loope
xchg
sbb
lods
cmp
and
dec
out
or
movsb
jl
lcall
outsl
xchg
mov
sti
pop
fxtract
push
lods
ljmp
sarl
in
ror
clc
mov
incl
or
repnz
jmp
jp
sub
fstpt
leave
sbb
add
jp
add
sbb
push
insl
mov
pop
loope
add
push
ljmp
aam
pop
push
loop
in
push
mov
mov
sbb
push
bound
inc
daa
pop
or
mov
xor
repnz
insb
insb
push
stos
cmp
adc
adc
inc
xor
dec
lea
insb
dec
repz
cmpsb
imul
xchg
fimull
sub
cltd
bswap
int3
mov
pop
add
addr16
shr
push
cmc
out
addl
inc
or
mov
xchg
or
cmp
sbb
dec
in
cmp
add
lods
mov
inc
jo
shr
loopne
mov
enter
fs
adc
cmp
decl
xor
cmp
inc
push
inc
and
int
daa
arpl
rcll
sbb
push
stc
lcall
lea
cwtl
add
xlat
adc
hlt
xlat
js
data16
jmp
push
mov
shl
sbb
cmpsb
sahf
je
out
sbb
lret
sbb
test
pushf
push
mov
xchg
push
ret
or
pop
dec
dec
or
xor
or
jbe
xchg
lock
out
stc
sbbl
xor
cwtl
movsl
jb
add
cmc
mov
jmp
dec
outsb
pop
aaa
test
or
pop
enter
sub
and
and
xor
lods
mov
push
mov
stos
cltd
adc
push
xchg
inc
push
push
and
inc
jae
inc
cmpsb
add
pop
ficoms
jl
fsts
cltd
loopne
push
mov
sar
out
movb
daa
xchg
or
mov
test
mov
xor
sbb
xor
loop
fimuls
lahf
cmpsl
xchg
dec
mov
out
cmp
mov
xor
pop
jns
xor
outsb
dec
sbb
call
sub
xor
sub
es
xchg
add
test
push
repz
lock
pop
xlat
fimuls
and
sbb
jo
add
mov
mov
jecxz
lahf
xchg
ret
mov
enter
lock
scas
or
xorl
pop
je
dec
and
rcr
xchg
pop
pop
mov
std
mov
push
xlat
cmp
cmpsb
out
fists
mov
pop
mov
lods
adc
jnp
dec
pop
or
or
mov
fwait
inc
lcall
or
shl
xor
xor
and
sub
cmpsb
shll
mov
mov
pop
cwtl
push
lret
mov
cmp
aam
test
cmp
lcall
stos
push
inc
mov
mov
nop
arpl
mov
sti
shlb
or
sbb
sbb
inc
cmp
xor
cs
or
mov
jb
push
jmp
mov
inc
je
adcl
sub
fcoml
pop
jl
or
movsl
fnsave
and
mov
adc
xchg
pop
mov
sbb
adc
xchg
leave
lea
cmc
add
test
shrb
lahf
test
sbb
mov
mov
jns
adcl
enter
push
cmp
out
fstl
mov
xchg
call
sbb
mov
push
push
ja
mov
pop
aas
sbb
jecxz
jmp
mov
push
fcmovb
or
outsl
add
adc
fcmovne
sub
icebp
dec
sbb
fstl
lds
cmp
aas
jo
dec
cmp
or
ljmp
jmp
jle
cmp
pop
mov
loopne
in
jae
lock
rclb
mov
inc
xor
aam
lret
xor
pavgb
push
cmp
lods
call
sbb
sbb
or
lock
pop
xchg
hlt
movsl
ljmp
sub
icebp
int3
xchg
in
mov
or
nop
outsl
idiv
dec
jbe
xor
dec
das
mull
xchg
sbb
aaa
int3
mov
xchg
mov
outsb
sub
push
mov
sub
aaa
jns
das
daa
addr16
mov
shll
std
das
pop
mov
dec
dec
xchg
mov
shll
push
aam
push
sub
in
or
sub
ret
add
pushf
iret
test
lds
dec
movsl
inc
xchg
ss
push
jno
or
stos
nop
and
dec
jmp
test
mov
jno
std
loopne
data16
push
lret
int3
mov
popf
test
mov
dec
adc
add
js
ds
xchg
loop
in
repnz
dec
loop
loopne
inc
sub
mov
clc
aad
or
cld
and
test
adc
inc
jecxz
dec
push
cmpsl
push
jbe
push
sub
mov
stos
pop
das
addr16
aas
pop
sub
push
fiaddl
add
or
dec
dec
aas
mov
data16
push
sub
cwtd
mov
pop
out
sbb
pop
rorb
pushf
testb
rol
mov
out
insl
pop
adc
xchg
ds
mov
cwtl
fs
mov
dec
aad
xchg
addl
into
pop
pushf
icebp
incl
xor
movsl
bound
xor
pop
js
sbb
lcall
inc
out
mov
call
scas
fcos
rcrb
lcall
inc
jp
loop
pop
xchg
pop
lcall
daa
mov
fisttpll
mov
sub
push
lock
arpl
loop
sub
xchg
ret
sti
je
adc
cmp
out
dec
lcall
push
nop
jl
or
lea
rcl
add
add
scas
cli
fwait
outsl
in
push
aas
int3
inc
adc
movsb
jecxz
cmp
sbb
scas
call
sahf
mov
and
push
push
sbb
ss
ja
es
mov
jnp
shl
aam
popf
outsb
popa
inc
push
rcrl
cmp
add
push
shrb
xchg
out
push
stc
and
movsb
aad
sub
aas
jg
int
mov
mov
or
loop
add
add
add
in
or
lods
test
sbb
arpl
mov
loope
out
negl
xor
es
jecxz
xchg
pop
jbe
gs
xchg
inc
sbb
or
inc
test
into
pop
sti
adc
push
stos
fcompl
push
cmp
sub
xor
movsl
sbbb
fidivrl
pusha
push
xchg
idivl
mov
rorl
xchg
pop
xchg
rcrl
and
aam
mov
lds
lods
mov
jl
and
fwait
hlt
cld
dec
rep
iret
dec
push
dec
jbe
sub
xor
nop
ss
jle
pusha
mov
jo
std
mov
je
scas
pop
es
fnstsw
sub
mov
adc
daa
inc
lods
out
leave
lret
mov
push
or
mov
aaa
push
clc
out
pop
and
mov
xchg
ror
in
dec
stos
int
movsl
cmpsl
xchg
fimuls
and
ss
push
mov
mov
xor
pop
sbb
in
sbb
mov
and
mov
addr16
mov
adc
daa
push
repnz
sbb
pushf
and
adc
jbe
mov
lods
jg
mov
mov
sbb
addl
shrl
jge
ret
movsl
ret
jbe
inc
ret
loope
mov
stc
jl
push
ja
icebp
fcomps
sbb
enter
loop
push
adc
icebp
outsb
cmp
rorb
mov
ficompl
mov
mov
push
addl
call
pop
repnz
int
and
ss
lret
add
mov
das
std
mov
cmpb
mov
call
jl
stos
mov
fnstenv
imul
sbb
jle,pt
dec
jmp
dec
jmp
mov
mov
mov
clc
shlb
mov
cli
cltd
cmpsb
adc
adc
or
pop
stc
aam
aam
incb
scas
and
push
push
mov
mov
add
mov
test
cld
cmpsl
xchg
mov
pusha
xchg
ljmp
inc
imul
mov
in
movsl
loop
dec
adc
jno
dec
lret
loope
pop
jo
dec
jl
data16
lret
pop
mov
lcall
sub
push
xchg
xchg
out
sub
cmp
mov
arpl
adc
and
fsubrl
jge
fdivrs
add
shll
icebp
mov
cli
xor
mov
cltd
nop
sub
xor
lds
adc
mov
aad
out
insb
add
insb
fisubrs
mov
call
loope
loopne
pop
jbe
xchg
fwait
jae
lret
test
dec
inc
add
mov
lcall
and
hlt
pop
add
clc
jne
aaa
add
dec
jp
inc
inc
sbb
push
cld
pusha
call
repz
fldl
add
push
je
popa
cmp
push
cmc
test
loope
dec
pop
xchg
sbb
xor
xchg
ret
fmull
sub
cmp
xchg
addr16
es
inc
addr16
sti
push
xchg
popf
jmp
lcall
lods
adc
repz
mov
scas
lret
in
sub
push
adc
repnz
sbb
or
in
in
jmp
test
mov
setge
mov
repz
mov
ret
mov
mov
sub
cmp
cmpsl
push
imul
lods
sbbb
and
sub
or
lret
dec
bound
das
mov
int
jae
rolb
adc
in
pop
fs
dec
es
inc
pop
push
cwtl
cli
pushf
xchg
cmpsb
add
push
sub
jno
and
and
movsb
pop
xchg
add
std
mov
in
sbb
test
out
mov
cmpl
insl
lds
cwtl
movsb
stos
push
lods
inc
pop
add
jl
cmp
pop
lods
adc
fldpi
movsb
stos
insb
xchg
jmp
repnz
hlt
mov
xchg
jae
add
ja
push
es
imul
sarb
maxps
shll
jge
mov
jg
std
xchg
adc
mov
push
jns
shlb
dec
std
mov
cmc
cmpsl
pop
jo
lret
add
dec
iret
lea
fidivl
pushf
aaa
out
in
push
or
add
adc
adc
cmp
xchg
aaa
sub
pusha
mov
rcrb
ja
push
call
add
pushf
mov
jo
pop
xchg
jecxz
mov
and
lods
mov
movsl
movsb
cli
cmpsb
sbb
jno
ret
cmp
sarb
cmp
aas
icebp
inc
sub
int3
es
scas
dec
sub
fs
inc
in
into
rorb
add
in
add
in
push
adc
stos
rorl
clc
in
daa
push
lods
cmpsl
rcr
push
xorb
jge
testl
pop
push
cli
push
ljmp
push
dec
iret
xchg
stos
add
mov
aam
fldenv
pop
xchg
jecxz
lods
adc
fmull
mov
test
lcall
push
das
fwait
in
fimuls
inc
jae
fstl
mov
mov
out
std
xor
outsb
lds
insb
enter
call
jno
xor
push
or
xor
je
stc
clc
dec
xor
ficoml
outsl
roll
cmp
lea
dec
jb
sub
add
adc
sbb
in
push
xchg
lret
mov
jg
mov
cmpsl
shlb
leave
jmp
int3
sub
mov
out
stos
mov
das
pop
add
inc
adc
pushf
adc
push
loope
adc
notb
jo
aaa
push
fcompl
jb
push
outsl
aam
daa
hlt
ljmp
inc
repz
scas
sub
sub
fists
jmp
mov
inc
xlat
into
and
loope
or
ficoml
lock
out
aaa
jbe
and
in
out
or
xorb
jnp
and
push
push
pop
das
add
mov
and
xor
inc
imul
sub
popf
sub
out
mov
mov
fdivl
shlb
fistl
jae
sub
fmul
scas
or
pusha
mov
push
or
xchg
fiaddl
add
cld
sahf
adc
fcoml
xor
push
fsubs
push
sub
adc
xor
inc
sub
in
movsl
scas
gs
cmp
inc
sub
and
fildll
leave
fists
int3
dec
repz
jge
in
rep
rcrl
xor
mov
int
sti
mov
outsb
shll
insl
in
imul
outsb
ss
addr16
in
fwait
orb
pop
jl
or
shrb
mov
push
cmp
jbe
les
sbb
dec
mov
cmp
add
aaa
jecxz
jns
xor
inc
repz
fwait
mov
jmp
xchg
hlt
iret
cmpsl
add
dec
adc
xchg
jge
rolb
outsl
mov
dec
cwtl
inc
daa
mov
pop
adc
push
or
inc
fs
lea
sbb
test
scas
mov
jge
sbb
mov
lea
insb
cmp
adc
adc
cwtl
dec
rolb
cmpb
push
mov
xor
add
mov
pop
mov
nop
ljmp
stos
mov
dec
call
in
mov
hlt
and
mov
sbb
pop
shll
outsl
add
xorb
xchg
adc
pop
flds
test
aam
pop
xlat
cmp
inc
in
cld
mov
adc
je
mov
pop
xchg
movsb
push
ja
adc
and
mov
je
mov
pusha
rclb
imul
push
and
fcmovbe
or
ret
mov
rcrb
cmpb
stos
inc
push
cltd
fwait
movsl
movsb
fidivs
mov
jp
xor
adc
enter
cmp
add
jmp
xor
addl
jl
dec
movsb
jo
ds
push
pop
into
popl
popa
jae
push
into
sarb
cs
pop
lea
sahf
cmpb
fildl
mov
sbb
push
or
sbb
mulb
lahf
insl
insb
mov
pusha
push
aad
push
cmp
pop
icebp
adc
inc
pop
adc
std
rolb
cmpsl
lods
les
sub
cmp
pop
dec
mov
pop
push
pop
jle
sub
cwtl
mov
test
sub
int3
mov
aaa
pop
ss
xchg
and
jmp
add
mov
cld
das
addb
mov
jmp
fwait
lock
xor
cmp
mov
mov
sub
push
xor
scas
test
lock
inc
lret
or
adc
ficomps
add
hlt
inc
daa
les
jg
fimuls
xchg
push
jl
push
dec
mov
in
fisttpl
ljmp
cmc
sub
ret
add
xor
mov
xchg
enter
and
loopne
xlat
jmp
movsb
push
push
push
xor
mov
push
orb
ss
push
imul
lock
aas
cmp
cmp
xor
jbe
or
in
push
jp
jns
dec
adc
aas
jle
add
mov
nop
add
ds
fisttpl
xor
push
jno
and
pop
xchg
sub
fisttpll
iret
mov
mov
mov
cmpsb
out
sarb
mov
mov
adc
mov
lcall
insb
add
nop
pop
mov
xorb
popf
movb
repnz
popa
xchg
in
adc
shrb
rcll
jns
push
mov
adc
add
dec
push
or
ss
mov
adc
repnz
sahf
and
test
jo
sbb
js
stos
ret
mov
pop
shll
repz
sub
cmp
ljmp
fldl
lods
and
mov
cmc
test
imul
adc
ficompl
iret
pusha
pop
xor
insl
dec
xchg
stos
pushf
test
out
insb
out
mul
push
mov
add
addl
imul
xchg
or
or
loop
cmp
xchg
adc
inc
adc
add
lods
rcr
iret
lods
xor
inc
inc
in
into
cmp
xchg
lcall
mov
je
jne
cmp
rorb
pop
sti
pusha
dec
push
jbe,pn
push
pop
pushf
in
push
addb
adc
sub
mov
in
test
mov
daa
push
hlt
push
lcall
mov
jecxz
sbb
dec
jbe
cmpsb
inc
sub
jge
adc
and
stos
and
mov
jne
daa
stos
pusha
adc
daa
filds
faddl
push
fmul
push
inc
rcrl
popa
fisttps
imul
cmc
lods
into
ficoml
loop
mov
lods
imulb
jnp
fwait
movsl
cmp
outsl
cmpsl
mov
inc
scas
arpl
adc
pop
mov
lods
mov
cvttps2pi
fimull
idivb
mov
cld
inc
inc
inc
daa
in
add
inc
filds
push
test
dec
add
jg
mov
fs
add
jg
lea
push
mov
xor
inc
lds
lods
or
in
xor
stos
push
and
and
aaa
mov
lods
cmp
pop
push
mov
nop
push
jno
adc
popa
mov
arpl
imul
pop
fwait
adc
hlt
adc
daa
add
lods
int
push
or
mov
xchg
out
out
or
sbb
fstpl
dec
in
xor
pop
inc
rcrl
fidivs
bsf
dec
imul
pop
sbbb
mov
scas
push
movsl
stos
daa
adc
jns
loop
adc
sbb
movsb
aas
fs
push
hlt
test
and
testl
lock
dec
pusha
sti
sbb
mov
lret
xor
div
cmp
push
mov
pusha
mov
clc
fs
icebp
aam
sahf
mov
cli
ja
dec
inc
or
cld
dec
xchg
mov
mov
or
jae
insl
mul
pushf
rolb
mov
pop
and
in
shl
loopne
js
sbb
arpl
xor
sbb
stos
mov
and
mov
push
cmp
fstpt
test
insb
pop
ret
shrl
push
and
dec
mov
fmuls
pop
or
enter
adc
fidivrl
sbb
fsubs
xchg
nop
dec
out
mov
pop
cmpsl
mov
test
aad
push
sbb
fadds
aas
enter
xchg
inc
fwait
clc
and
mov
out
inc
stos
pop
mov
notl
fwait
icebp
push
mov
out
imul
bound
xchg
int3
test
jne
loope
rolb
pop
outsl
out
pusha
jmp
add
je
sahf
sbb
mov
mov
and
out
dec
neg
sbb
aaa
add
sbb
adc
jno
dec
sub
pop
cmp
inc
xchg
jmp
insl
je
call
scas
push
leave
or
sahf
seta
icebp
out
je
loope
test
sub
xchg
jae
clc
adcl
dec
xchg
fwait
dec
ja
mov
sbb
xchg
pop
in
push
idivl
addr16
shl
inc
sub
pop
lds
das
imul
cmp
out
enter
es
cmovle
and
fs
shlb
icebp
fstl
out
adc
test
add
sbb
jno
adc
call
imul
bound
sahf
xorb
mov
test
sbb
cmpsb
inc
lock
add
mov
mov
xor
or
pop
imul
popa
jnp
jecxz
mov
jl
roll
stos
sbb
movsb
xor
add
mov
subb
sbb
sbb
cmp
pop
mov
jo
lods
and
mov
mov
xchg
inc
fnstsw
lret
clc
mov
adc
mov
cmp
xor
sbb
fdivl
mov
pushl
add
cmp
pop
mov
sub
dec
negb
pop
mulb
jo
adc
or
popa
insl
or
and
push
enter
xchg
mov
test
inc
pop
jno
adc
xchg
sub
movsl
inc
movsl
adc
mov
or
popa
cmp
ds
inc
dec
inc
popa
xor
cmp
les
lahf
xchg
inc
aas
movsb
sub
add
or
xchg
cmpsb
mov
mov
clc
repz
incb
add
lret
add
sub
cmp
jmp
pop
cmpsl
jg
pushf
mov
lcall
icebp
mov
and
push
push
add
adcb
and
pop
dec
push
dec
or
adcb
dec
movsl
gs
dec
xchg
fcoml
iret
loop
cltd
push
xchg
fcmovnb
pushl
ja
lea
xchg
fwait
jle
push
dec
cmp
dec
lret
xor
sbb
and
xchg
push
jge
out
jl
xchg
sub
push
out
je
notl
inc
adc
sbb
jnp
inc
xchg
movsb
push
add
icebp
jno
fwait
scas
sub
in
push
or
addb
add
add
cmp
ss
add
arpl
adc
jnp
mov
ret
in
xchg
ja
mov
pop
push
addr16
fdivs
dec
mov
xor
lahf
jg
pop
fwait
out
and
cmp
mov
repnz
push
fdivl
mov
aad
xchg
insl
sbb
cld
into
movsl
decb
and
adc
rcr
inc
cmp
pop
loop
push
and
and
pusha
notb
mov
add
mov
mov
jl
out
insl
test
mov
pop
adc
aaa
dec
mov
xlat
scas
enter
jo
call
jns,pn
jmp
aas
ret
cmpsl
cmpsl
mov
sbb
cmc
lods
int3
lcall
mov
adc
mov
inc
add
test
les
jns
aam
sbb
and
fidivrs
loop
cmpw
cmpsb
addr16
jp
push
xchg
nop
sbb
lea
sub
out
xor
into
mov
mov
xchg
or
cmp
push
cltd
out
cwtl
shll
aaa
xor
pop
lea
pop
icebp
fldt
sahf
mov
repnz
je
xchg
push
cmc
mov
mov
mov
test
lret
dec
ljmp
out
imul
cmpsl
int3
mov
xchg
cmp
sbb
sbbb
ds
adc
jecxz
inc
fwait
loopne
mov
xor
pop
cmp
mov
lret
sbb
test
xor
pop
pop
jns
jmp
mov
xchg
mov
inc
add
adc
mov
xchg
push
adc
fldz
cmpsl
lods
mov
rcrl
stc
insl
insb
xor
push
sub
les
mov
aad
adc
add
sub
test
jno
arpl
imul
sub
int
fstl
loopne
jecxz
into
mov
stos
test
sbb
mov
ss
in
insb
cmp
into
mov
fistl
inc
aas
aam
pop
sarb
adc
repnz
bound
lods
ds
daa
out
push
xchg
testl
incl
sbbb
movsb
pushl
fiaddl
adc
aam
sub
ja
std
sbb
cmp
shrl
aaa
mov
enter
aas
inc
dec
xorl
cmp
shrb
inc
xor
es
nop
dec
mov
pop
icebp
mov
cmpsl
jp
mov
xchg
mov
xor
cltd
loop
add
mov
cli
adc
adc
or
loopne
sub
gs
add
jmp
cmp
pop
xchg
cmp
dec
inc
cwtl
add
pop
les
dec
cbtw
mov
ss
or
inc
sbb
shrl
and
mov
and
scas
jg
nop
aad
jg
push
and
mov
dec
std
dec
stc
or
pushl
inc
pop
push
dec
imulb
leave
test
cli
dec
xchg
jl
dec
jecxz
enter
insl
and
or
movsl
mov
pop
add
xlat
sbb
push
data16
and
inc
mov
mov
loopne
inc
push
mov
xchg
mov
daa
xor
push
cmpl
and
jecxz
pop
adc
add
and
lcall
mov
sahf
mov
lahf
rorl
fwait
test
cmpsb
xchg
jae
dec
cwtl
les
imul
or
aad
jecxz
sar
inc
xchg
repz
sbb
movsl
pop
xor
in
sar
cltd
adc
aam
mov
lret
mov
push
sbbb
jbe
or
jl
aad
dec
xchg
dec
xchg
xchg
insb
add
pop
fisttpl
or
push
insl
add
dec
cmc
cwtl
aam
and
hlt
or
push
out
arpl
xchg
mov
mov
hlt
dec
jae
jno
jo
push
sub
or
sbb
in
daa
push
outsl
adc
jg
jl
sbb
push
cmp
cmp
pop
repz
repz
jge
addb
xchg
xor
xor
fwait
es
adc
pop
ljmp
push
or
sbb
sub
xchg
xchg
scas
test
push
mov
icebp
push
pop
adc
movd
adc
pop
sbb
xor
loopne
pop
pop
bnd
pop
mov
pop
nop
imul
arpl
push
add
lods
sbb
jmp
fcomps
inc
cmp
mov
out
gs
popl
pop
popf
mov
rcrl
pop
std
out
leave
xchg
xor
jp
push
aad
repz
dec
into
into
add
mov
test
in
mov
imul
repz
jg
and
mov
sub
mov
jo
and
sub
mov
push
adc
je
fsubl
cwtl
mov
or
scas
arpl
decl
add
mov
stc
notrack
test
sub
stos
sbb
filds
loopne
iret
inc
dec
sbb
ja
xchg
imul
mov
repz
xlat
and
mov
sbb
jae
adc
les
dec
shl
movsl
in
sbb
lods
mov
nop
shlb
mov
push
dec
xor
lods
jp
jmp
push
mov
fbld
shlb
pushf
test
out
push
pop
std
adc
xor
mov
cld
or
cmp
loope
sub
mov
dec
mov
test
clc
and
sub
shr
aad
cmc
dec
jge
dec
sbb
inc
outsl
loope
or
inc
filds
in
rorl
xchg
pushf
pop
test
push
lcall
and
fs
stc
in
push
inc
fcomi
sub
and
stos
xchg
jmp
popa
imul
jge
ret
ret
sahf
pop
pop
xor
cltd
repnz
data16
lock
lea
clc
aaa
out
cmpsb
in
shll
xchg
pop
cmc
jno
imul
rcrl
xchg
lods
or
movsb
jg
xor
lock
mov
call
sub
ret
ja
mov
loop
push
jle
push
cs
dec
popf
iret
sbb
add
aad
mov
and
dec
in
into
icebp
push
in
xor
mov
xorb
out
imull
pop
xchg
push
outsl
and
xchg
aad
aad
popa
test
mov
xchg
aas
dec
test
sbb
cmpsl
loopne
push
cwtl
fdiv
mov
jl
dec
enter
dec
fwait
and
dec
xchg
pop
cmp
xor
rep
adc
add
cmpsl
jmp
out
test
sbb
lods
push
sahf
std
aad
or
jae
jg
mov
les
addl
shrl
inc
rcl
aam
fucom
push
jg
pop
cmp
xor
adc
mov
jle
arpl
out
sbb
loop
or
ljmp
enter
ja
stc
pop
hlt
in
lret
push
dec
leave
pop
jns
mov
inc
imul
out
roll
movsl
repnz
push
inc
decl
xchg
dec
sub
xchg
mov
xchg
imul
jae
scas
mov
outsl
xor
pop
iret
sbb
add
push
push
xor
adcl
rcrb
inc
lods
push
in
test
shrl
add
ja
ret
xchg
or
sbb
pop
pop
gs
std
adc
pop
aaa
pushf
lea
mov
jmp
adc
push
push
and
dec
and
nop
pop
in
lahf
lea
call
cmp
rorb
notl
push
mov
repz
ret
and
push
mov
add
adc
leave
mov
dec
mov
xlat
inc
add
add
icebp
arpl
dec
cld
iret
push
ds
data16
or
jbe
sbb
push
mov
scas
clc
push
imulb
fstp
std
dec
jbe
cmp
cmp
mov
push
dec
neg
movsb
arpl
sub
and
stos
or
btr
inc
jnp
jne
push
sbb
rol
pop
cmp
ljmp
clc
mov
and
repnz
imulb
xchg
and
or
mov
mulb
test
push
sbbl
cmpsb
jnp
leave
adcl
adc
in
push
lret
imul
xor
das
lret
daa
sub
or
add
mov
stos
fidivl
sti
divb
push
and
xchg
push
mov
mov
sbb
ret
fidivrl
fldenv
lea
adc
mov
push
mov
pop
andl
leave
or
mov
xchg
mov
mov
mov
jl
lcall
mov
fisttpll
mov
adc
add
pop
and
and
shlb
xchg
inc
mov
pop
push
push
jnp
cmp
lds
dec
jo
mov
in
mov
icebp
xor
dec
shll
js
shr
lods
push
idivl
sub
mov
pcmpeqd
and
shrb
xchg
jb
dec
mov
sbb
out
push
shll
pop
cwtl
mov
repz
jmp
dec
in
inc
mov
mov
cmp
dec
sbb
leave
dec
add
outsb
inc
into
dec
mov
adc
lcall
call
add
dec
jl
cltd
xor
testb
dec
mov
in
ror
sbb
mov
sbb
mov
adc
push
leave
es
aaa
loope
pop
ss
ret
dec
aaa
movsb
inc
jae
imul
sbb
call
lahf
pop
das
inc
dec
imul
out
sbb
outsl
jnp
adc
rep
xor
mov
mov
adc
mov
or
aas
pop
pop
and
adc
dec
mov
fimull
push
adc
push
and
mov
negl
jp
lds
mov
pop
data16
inc
movsb
dec
dec
cwtl
xlat
fldl
add
mov
loop
xchg
adc
mov
rcrb
add
inc
jne
or
pop
xchg
dec
addl
or
push
mov
mov
jnp
cld
insb
cmpsl
push
jg
dec
or
scas
inc
ret
shlb
inc
repnz
std
faddl
mov
in
cmp
ret
cli
shr
nop
mov
lret
push
adc
push
jbe
mov
xchg
inc
daa
cltd
mov
and
imull
add
and
test
xchg
fidivs
sbb
cmpsb
aas
mov
mov
lret
pop
cltd
mov
sahf
cmp
test
push
xchg
fnstsw
incl
mov
xor
jmp
xchg
ljmp
pop
ja
mov
cmp
sbb
mov
sti
adc
jne
sar
ficoml
out
add
lea
loope
insl
jbe
cwtl
das
and
hlt
test
and
btc
pop
inc
in
movsl
in
mov
fs
rolb
mov
cmpsl
lea
ror
andb
add
push
sbb
cli
jge
inc
enter
rcl
fsubs
in
int3
dec
xor
pusha
pop
outsl
mul
or
sti
rcl
push
pop
int
add
and
lea
fs
imul
mov
pop
push
dec
xor
jle
call
push
loop
or
and
mov
mov
lcall
mov
mov
stc
lods
or
add
mov
and
rol
icebp
mov
mov
or
mov
test
mov
outsl
push
clc
imul
xor
jle
inc
jne
mov
pusha
adc
sub
or
mov
push
sub
leave
push
cmc
arpl
ds
and
add
ffreep
dec
mov
lcall
test
popf
xor
lret
mov
jne
jb
mov
pop
stos
mulb
dec
push
add
add
lret
add
subb
or
andb
cmp
inc
pop
mov
add
push
inc
add
dec
xor
pop
mov
adc
mov
out
fwait
loop
mov
push
in
aas
addr16
ret
aad
popf
xor
in
jge
dec
int
fiadds
pop
clc
es
sbb
imul
std
xchg
mov
pop
xor
jo
fsubrl
out
ds
mov
mov
or
les
mov
mov
aad
push
outsl
bound
imul
sub
insl
cli
icebp
or
inc
mov
jmp
mov
mov
mov
jge
outsb
insl
xor
loope
shlb
jne
pusha
jnp
cmp
mov
mov
ljmp
out
pop
pop
stc
inc
xor
or
xor
add
insl
dec
enter
xchg
xor
stos
std
lock
dec
mov
imul
jmp
stos
hlt
fldl
sub
pop
mov
mov
push
sub
dec
push
mov
mov
add
xor
jp
cmc
loop
dec
shl
dec
push
lea
cmp
ret
pusha
pushf
sub
movsl
xchg
aaa
add
fs
jne
mov
add
leave
xlat
or
pop
mov
popa
jo
and
jle
xchg
sbb
cmc
ds
mov
in
xchg
flds
dec
adc
add
aas
push
aam
xchg
add
jb
movsl
repz
lret
aas
jns
bound
stos
mov
push
mov
mov
xchg
fstpt
dec
jecxz
xchg
fcmovnbe
pop
push
push
or
fldt
pop
inc
fadd
cmpsl
imul
jbe
bound
out
cltd
iret
subl
dec
and
test
testb
mov
sarb
shll
fistl
xor
push
insl
loope
xchg
or
jne
into
iret
test
xor
and
or
push
xchg
push
inc
fucom
push
test
adc
cmc
mov
cmp
mov
mov
frstor
dec
add
pop
dec
std
in
push
pushf
cmp
and
inc
push
xor
data16
mov
out
push
jmp
aam
push
xor
pop
inc
pop
leave
lods
dec
fnsave
icebp
outsb
sbb
pop
gs
std
fwait
xchg
pop
mov
jae
cli
cmp
imul
push
dec
sbb
scas
cmp
jg
insb
gs
jmp
or
jb
aad
mov
mov
add
bound
stos
mulb
mov
popa
pop
jp
je
xor
lds
flds
imul
adc
adc
ret
and
fbld
lret
sbb
sub
cmp
pop
or
enter
clc
xchg
ret
ficoms
dec
mov
mov
pop
movsl
outsl
cmpsb
inc
pushf
in
leave
insl
xor
pop
mov
pushf
cmpb
iret
out
push
pop
sbb
roll
decl
jno
mov
and
pusha
sub
push
stc
test
inc
pop
mov
js
scas
jae
out
mov
imul
aam
adc
mov
xchg
pop
sub
pop
cld
mov
xor
xchg
and
popf
stos
and
sbb
xor
or
cmpsb
sbbb
mov
in
cld
mov
jle
jbe
sub
stc
mov
std
xchg
arpl
pop
rolb
sub
sub
into
lret
or
sub
push
pusha
and
mov
pop
push
pop
jge
das
jbe
mov
push
ret
in
das
sbb
outsb
mov
mov
pop
aaa
enter
mov
gs
inc
inc
loope
in
data16
xor
mov
loop
dec
mov
testb
push
inc
stos
dec
pop
data16
push
mov
jp
dec
push
push
dec
insl
clc
test
cmpl
iret
or
inc
xor
icebp
lods
lcall
lods
dec
dec
jl
icebp
in
fs
popf
out
enter
dec
mov
js
insb
jge
in
push
and
sub
cmc
js
cmp
in
xchg
xchg
mov
arpl
mov
jmp
or
mov
loop
addr16
fisubrs
cmp
enter
jmp
fisttpll
dec
ja
inc
mov
jecxz
stos
pop
adc
xchg
movsb
inc
ficompl
es
das
mov
lret
lock
fs
cmp
into
mov
pop
cs
jb
mov
shlb
ror
sbb
xchg
jno
or
sbb
jg
push
mov
scas
stos
xor
push
jnp
in
mov
jno
imul
in
lds
stos
insl
cmp
cmp
xchg
mov
jnp
dec
stc
xor
jno
pop
inc
sti
mov
les
jno
test
fsubl
mov
lds
xor
inc
dec
mov
incb
sbb
sub
lret
adc
lock
sbb
imul
mov
jmp
mov
xchg
sub
cmp
cwtl
jecxz
dec
lret
scas
push
pop
sbb
adc
mov
mov
fsubrs
inc
pushf
mov
aad
jecxz
mov
add
jns
imul
into
or
adc
shll
xchg
cmpb
sub
rclb
ljmp
jno
mov
stos
jae
aam
aaa
shll
inc
inc
jbe
dec
xchg
jmp
push
push
sub
fstps
adc
in
sub
popa
sbb
rorl
scas
inc
in
add
jbe
lahf
out
outsl
cmp
negl
call
dec
out
push
jle
adc
sbb
pop
xor
notb
call
fyl2x
rorb
jns
daa
scas
out
fldenv
mov
movsl
cwtl
cs
sahf
es
aad
mov
cs
int
insl
inc
insb
or
add
outsl
inc
jle
shll
roll
sub
lret
lret
jg
out
nop
bound
addb
ds
inc
jmp
in
cmp
sbb
sub
je
bound
int
xchg
dec
xchg
inc
scas
jns
popa
mov
mov
aaa
inc
adc
sbb
clc
jb
stos
cmp
xchg
jmp
repz
push
fnstsw
daa
jne
stos
mov
mov
sub
aam
dec
adc
or
lods
lcall
xchg
ret
jg
push
and
cwtl
add
ret
push
cmpsl
jg
mov
iret
push
jl
imul
push
pop
mov
mov
roll
xlat
rcrb
sub
pop
sbb
jge
addr16
mov
inc
fsubrs
mov
popf
bound
adc
sar
shlb
ret
or
mov
enter
xor
add
notl
bound
in
add
cmpsl
jo
xchg
or
test
rcrb
test
push
addl
out
mov
and
xor
mov
jmp
lock
loopne
push
xchg
les
sbb
mov
ret
jno
scas
mov
lret
sbb
add
popa
arpl
out
adc
push
add
rcrb
xchg
mov
jp
xchg
ljmp
sti
mov
and
lock
int3
shlb
hlt
lock
loopne
ja
loopne
pop
jo
movsb
arpl
in
js
movb
or
movsb
xchg
bound
fwait
repz
fstps
adc
cmp
mov
nop
cli
data16
sub
loope
out
inc
ja
sbb
mov
movsl
out
cmp
lods
dec
fwait
mov
mov
dec
bound
bound
and
cmp
dec
add
pushf
jmp
and
mov
shlb
pop
insb
pop
into
jmp
enter
xchg
xchg
loope
pushf
and
sub
mov
fdivr
mov
mov
add
nop
in
adc
push
xchg
and
in
jecxz
adc
or
rcr
adc
xlat
push
mov
clc
icebp
fs
mov
dec
pop
les
sub
pop
in
push
ret
daa
test
push
add
or
or
out
popa
xor
fucomp
dec
cwtl
inc
pop
dec
pushf
add
push
pop
loop
in
inc
inc
scas
ljmp
aam
repnz
out
add
and
xchg
pop
push
xor
int
popf
lahf
lret
xlat
inc
xor
shrb
pop
cltd
xlat
mulps
sbb
adc
repz
roll
insl
mov
stc
adcl
inc
mov
inc
mov
dec
ret
dec
and
fldt
sahf
insl
sbb
add
dec
ja
cwtl
and
or
xor
aam
xor
mov
pop
cmp
mov
in
movsb
jecxz
out
shlb
sub
adc
pop
jmp
ret
or
sbb
into
xor
gs
pusha
jmp
js
and
insb
cmpsb
xchg
fisubrl
and
sbb
popf
cli
mov
xchg
xchg
mov
dec
adc
imul
cmp
out
es
adc
mov
ja
push
faddl
and
cmp
dec
sub
push
xchg
xor
andl
jns
push
ret
sbb
ljmp
les
lahf
je
xchg
enter
adc
outsb
jbe
arpl
lock
fimuls
mov
push
xor
lcall
arpl
adc
rorl
sub
fldenv
sbb
push
jp
in
rcl
jp
jmp
push
pop
mov
inc
lods
in
push
in
leave
std
add
xchg
or
pop
js
mov
hlt
cmpsl
jne
enter
cli
mov
sub
mov
jp
filds
dec
lcall
push
movsl
pop
cmp
in
xchg
dec
lret
dec
fwait
push
jmp
inc
mov
imulb
sbb
mov
adc
mov
out
fistpll
dec
cmpl
mov
or
mov
aad
cmovns
out
or
jmp
adc
je
xchg
push
lahf
fmull
outsl
faddp
out
scas
mov
dec
mov
jg
pop
cs
mov
lret
cmpb
adc
aad
scas
rclb
xchg
decl
cwtl
clc
call
or
test
into
add
fstps
adc
test
leave
mov
clc
xchg
push
stos
pop
cmp
adc
jns
lock
add
adc
popa
mov
inc
pop
push
mov
mov
add
jb
pop
pop
js
stc
sbb
test
mov
xor
push
push
dec
xor
insl
mov
cmp
shl
aaa
sarl
stc
aam
push
jbe
and
decb
in
xchg
hlt
push
imul
cwtl
leave
rol
and
xor
popa
push
std
or
push
cs
sarl
cld
sub
xor
insb
and
mov
sbb
xchg
dec
push
pusha
push
repnz
pop
imul
loopne
mov
nop
rcl
dec
pop
pop
insl
mov
int
out
inc
push
mov
test
xchg
jmp
lods
lock
ret
pop
pop
lret
xor
mov
lahf
mov
sbb
and
cli
sbb
add
enter
push
out
xor
jo
scas
adc
mov
and
pop
mov
orl
ljmp
xchg
adc
sbb
rcll
movsl
sbb
pusha
inc
cmpsl
test
daa
out
lock
test
inc
xor
or
repnz
jmp
imul
ljmp
cwtl
mov
fadds
sbb
movsl
pop
add
pop
or
ljmp
aam
pusha
add
mov
lret
fisttpl
dec
das
sub
rcrl
add
sub
outsl
outsl
or
lods
mov
pop
xchg
cwtl
lea
mov
mov
out
decl
fisttpl
dec
lock
test
sub
mov
mov
ficoms
push
add
in
mov
stos
add
test
cmp
fcoml
lds
lds
gs
les
bound
aad
dec
nop
sti
mov
cmp
mov
test
out
fwait
sub
fwait
aaa
aaa
xor
icebp
popf
les
in
or
adc
int3
add
movsl
xor
add
insl
or
testl
pop
mov
jl
arpl
pushf
inc
sbb
loopne
addb
bound
std
mov
xchg
ret
xor
mov
movq
or
dec
sub
jp
jge
les
cmp
mov
int3
pop
cmp
dec
scas
in
jae
mov
jecxz
sub
js
pushf
pop
fsubl
test
push
xchg
loope
inc
jb
push
fists
test
movb
fsubrl
mov
outsb
pop
adc
cmp
cli
adc
adc
je
jb
xchg
stos
test
add
or
sarl
adcb
add
push
test
cld
sarl
mov
outsb
pop
jne
scas
les
xor
out
out
pop
imul
adc
stos
rcrb
icebp
or
cmp
adc
out
pop
in
clc
adc
test
cmpl
jmp
jns
lods
cmp
push
popf
sti
stos
shl
jbe
rorl
mov
xchg
aas
mov
push
sahf
enter
scas
fwait
arpl
lret
mov
ret
lods
insb
scas
orl
les
in
and
push
inc
js
xor
xor
cmp
mov
jbe
mov
adc
imul
jno
jnp
pop
dec
inc
and
repz
repnz
rolb
jle
sti
pop
adc
push
stos
add
mov
or
fs
mov
loop
add
dec
push
shrb
adc
repnz
lret
cld
fs
and
into
pop
lahf
inc
jo
push
std
inc
or
xlat
iret
pop
test
repz
dec
mov
xor
scas
add
adcl
icebp
into
lret
push
mov
out
icebp
loop
ret
nop
loopne
test
pop
jnp
ja
stos
dec
mov
lret
jno
xor
outsb
mov
mov
orl
xchg
push
mov
inc
and
sbb
lea
fs
negb
ljmp
inc
mov
nop
mov
xor
mov
aaa
out
sub
jae
or
add
xchg
adc
aad
cmc
cli
popf
imul
lret
aad
xor
aas
mov
pop
leave
jo
shll
ret
xor
cmpsb
add
dec
pop
cmp
rorl
les
cmp
jge
pop
ret
inc
jb
inc
push
popa
sbb
adc
mov
and
mov
jecxz
mov
add
loopne
mov
std
mov
push
sub
dec
cmp
into
lcall
cwtl
xchg
mov
mov
popl
cmp
dec
cmpb
inc
sahf
push
or
xchg
repnz
ja
cmp
xor
je
test
outsb
adc
lds
test
adc
icebp
ljmp
inc
ljmp
arpl
inc
pop
out
dec
into
lds
mov
sub
iret
and
icebp
adc
jg
inc
lcall
dec
pop
and
sub
das
xor
mov
inc
pop
push
adc
ret
iret
and
sub
sbb
and
mov
clc
push
hlt
xor
stos
fildl
cmp
lret
std
mov
cltd
popf
aaa
sbbl
lahf
cmpsl
jno
ja
xor
and
sarb
arpl
pop
dec
repnz
ret
mov
stos
rol
in
mov
ret
jle
andnps
mov
or
pop
inc
subl
push
lods
jg
in
push
or
sahf
in
cmp
adc
sub
push
push
add
test
rcrb
push
add
adc
push
add
pop
and
fstpl
mov
add
sub
outsl
test
jmp
xchg
mov
xor
jae
xor
sbb
add
mov
cmp
push
cwtl
or
sub
xchg
add
inc
leave
jae
mov
lds
jg
test
xor
mov
cmp
adc
nop
adcl
xchg
and
jnp
and
jae
or
mov
push
xchg
mov
xor
outsb
lock
les
push
or
xor
sbb
mov
not
lods
and
insb
stos
pop
pop
sub
mov
xor
in
inc
lock
js
jmp
xchg
jno
aaa
adc
mov
in
dec
shlb
andl
push
lahf
out
cs
mov
aam
add
pop
in
xchg
inc
cmpsl
mov
pop
push
push
mov
mov
push
cmp
add
xchg
mov
sub
aad
xor
out
inc
mov
add
setb
jl
and
outsb
popa
outsb
cmp
xchg
enter
ss
or
adc
cmp
rclb
or
mov
fnstenv
icebp
push
mov
cmpsl
fidivl
mov
loopne
jp
or
push
inc
jnp
add
outsb
mov
xchg
sub
inc
push
sub
mov
lods
push
add
push
push
leave
stos
push
scas
dec
lcall
call
xor
loopne
sbb
in
cld
cmp
pop
decl
jae
aam
xchg
aaa
xchg
mov
ja
out
ret
loopne
lcall
add
xchg
mov
mov
sub
outsb
pop
insb
pop
cmpb
mov
ret
fs
adc
int
inc
push
add
dec
outsl
sbb
ror
pop
xor
pop
mov
or
jp
ljmp
out
adc
data16
jbe
imul
ret
cmp
jle
sub
es
sbb
cli
leave
aad
lods
adc
stos
dec
xchg
int
push
add
sub
lock
push
mov
jno
popl
mov
jl
dec
test
mov
lods
inc
adc
adc
and
jno
fmuls
nop
mov
fs
int
aaa
dec
or
stos
test
sub
rcrb
cmp
jecxz
push
adc
adc
or
sub
lock
test
xlat
and
xor
and
or
jp
sbbl
mov
out
mov
not
pop
outsl
iret
fsubs
dec
mov
in
push
gs
les
xchg
andb
aam
mov
fdivr
clc
pop
add
fsubrs
push
sbb
push
jae
adc
push
dec
xlat
notb
int
mov
lock
shlb
pop
pop
inc
aas
inc
push
enter
ljmp
sbb
jae
stos
ds
in
aam
cmp
cmp
in
ror
lods
ret
pop
jne
mov
xchg
and
sbb
lods
push
push
mov
std
in
lret
lahf
hlt
orl
dec
mov
add
inc
jns
add
iret
xchg
add
inc
mov
mov
push
hlt
and
lods
jne
add
fildll
inc
inc
mov
repnz
mov
rcrb
mov
ret
divl
cmp
imul
jecxz
and
mov
cmpb
xchg
inc
mov
andnps
xchg
mov
lret
and
cmp
cld
jg
lods
cmpsl
aad
fsubl
loope
fdivl
cmp
int
test
jb
mov
inc
push
decl
sahf
mov
lret
pop
arpl
xchg
aam
add
mov
and
add
lret
and
pop
or
or
js
mov
jle
movl
adc
daa
mov
and
cmp
mov
jae
pop
xor
mov
jmp
pop
lock
dec
sahf
inc
pop
scas
adc
pop
pop
inc
jno
pop
push
add
and
mov
mov
adc
mov
add
sub
test
push
rorl
dec
shl
repnz
lds
lret
bound
in
and
les
cmp
test
xchg
cmp
cld
pop
andb
repnz
idivb
mov
repnz
fisttpl
stos
fadds
xor
cmc
lahf
inc
pop
cmp
adc
adc
fcompl
aas
fdivr
notl
mov
sub
mov
aas
sub
pop
std
or
or
test
out
scas
lock
mov
call
cmp
cli
fisubrl
inc
sahf
divb
xchg
push
pop
mov
mov
or
xchg
repz
pop
push
lea
in
add
int
cmpsb
popa
pop
leave
subl
and
sub
loopne
lods
fcomps
adc
push
les
jb
add
add
pusha
sbb
scas
mov
popa
arpl
cmp
mov
leave
je
mov
shlb
xor
xor
adc
mov
out
mov
cmpsl
sbb
mov
fnstenv
dec
sbbb
sbb
lahf
push
jecxz
xchg
xor
and
aaa
inc
xlat
movsb
sti
sbbl
enter
jecxz
lea
repz
mov
xchg
push
das
inc
mov
mov
out
into
lods
imul
push
out
or
lods
flds
ljmp
sbb
jecxz
adc
loopne,pn
lods
rorl
movsb
std
mov
ja
orb
jno
addr16
add
rorl
ret
repnz
negb
or
mov
aam
dec
cmp
xchg
sub
xlat
lds
aam
out
leave
stos
scas
push
jo
adc
stos
sub
nop
inc
sub
or
test
aam
insb
aad
xchg
rcl
dec
pushf
sub
negb
rclb
sbb
or
lretw
jo
jne
out
lret
cmp
xchg
inc
jnp
xchg
in
sbb
cmp
or
mov
mov
cmpsl
dec
es
arpl
clc
mov
jne
iret
adc
add
jne
xchg
push
pushf
dec
pop
sub
inc
mov
and
aam
and
xor
fdivrl
cs
inc
add
dec
int3
jnp
mov
icebp
es
and
mov
sbb
xlat
imul
loopne
cmc
inc
jmp
lcall
repnz
cltd
cmpb
dec
cmpsb
mov
mov
cltd
add
pop
dec
sbb
stos
mov
jne
mov
xor
xchg
das
push
fists
or
jnp
cmc
adc
in
imulb
jle
jl
gs
inc
jno
add
out
ror
in
cld
hlt
lds
out
clc
mov
ret
bts
popa
cmp
pop
jae
dec
cmp
movsb
dec
jno
dec
stos
mov
xor
les
rcrl
out
xchg
mov
test
mov
dec
lods
xchg
sbb
push
fisttps
subl
inc
shrl
inc
push
outsb
fdiv
jle
into
in
dec
cli
mov
dec
aas
mov
lret
cmp
paddq
push
call
pop
movsl
ds
cmp
cmp
push
inc
int
test
xor
sahf
or
out
bound
xor
repnz
aaa
and
cs
std
dec
push
pushl
lds
or
push
add
ja
int3
mov
xchg
cwtl
adc
fwait
mov
push
int3
fwait
movsb
scas
xchg
dec
fsubs
ret
sub
xor
add
mov
adc
sbb
std
lret
imul
int3
aam
and
mov
repnz
inc
decl
push
sbb
ret
pop
mov
divl
daa
je
lcall
inc
and
popa
and
stos
inc
adc
lods
mov
add
decl
and
test
pop
repz
and
clc
in
push
inc
ret
stos
lret
jmp
fs
dec
push
lods
stos
jg
sti
sub
js
fmull
mov
mov
shll
clc
fiaddl
push
into
inc
xor
push
inc
fldl
filds
xchg
xchg
push
inc
call
insb
pop
jmp
aad
jae
push
dec
adc
add
sub
cmp
mov
outsl
adc
sub
scas
pop
pop
test
in
scas
jg
jg
dec
call
test
jnp
jo
sbb
add
xor
fs
ret
add
or
imul
insb
lods
xchg
mov
imulb
add
sbbl
xor
fistpl
int3
mov
repz
sbb
push
push
pop
jp
and
push
jmp
pop
out
and
scas
mov
add
icebp
dec
repz
enter
sub
jmp
pop
scas
push
cmp
xor
gs
into
aaa
cmp
lahf
addl
fidivrl
lret
and
into
sub
jo
das
jg
jns
loope
or
test
pusha
hlt
lcall
data16
push
mov
push
insl
xor
sbb
cmpsl
xchg
jecxz
pop
test
xchg
xor
adc
or
add
loop
push
xchg
repz
test
dec
push
hlt
stos
lds
pop
adc
ds
jmp
ja
xlat
sbbb
pop
pop
jne
ret
push
movsb
jns
nop
in
push
hlt
mov
out
cmp
cmc
pop
pop
es
jnp
push
jle
call
lods
bound
inc
fistps
ficompl
dec
sub
jbe
jp
ret
lcall
fisttps
mov
jg
sbb
sbb
mov
int3
fs
mov
cltd
mov
and
push
mov
dec
push
mov
stos
fiadds
push
and
bound
jp
aaa
std
jmp
mov
sub
cli
dec
sub
imulb
lock
cmp
fdivrl
mov
cmc
ds
pop
xor
pushl
pop
cmp
out
lods
add
or
fistpl
jb
subb
movsb
mov
xchg
in
sbb
and
cmp
ret
insb
and
sbb
xchg
push
call
in
ljmp
sub
ljmp
add
lods
or
sti
mov
sbb
cltd
js
dec
mov
jae
mov
push
or
ret
dec
out
dec
addr16
jmp
clc
xorl
pusha
gs
dec
gs
jle
jo
out
ss
pop
jg
and
add
loopne
push
iret
cli
call
or
rorb
aas
xor
lcall
popf
stos
outsb
int3
jle
fisubrs
jmp
fldl
mov
mov
and
xor
fwait
inc
lods
shll
aad
sbb
stc
out
loope
add
add
popa
push
movsb
bound
jge
mov
mov
popf
out
inc
adc
in
fstp
add
or
dec
std
sbb
loop
in
in
data16
aad
pusha
rcll
push
test
inc
lret
add
ds
or
xchg
scas
and
pop
iret
shlb
mov
in
adc
mov
xor
scas
in
jg
out
out
jg
je
push
pop
mov
icebp
push
out
adc
cmpsb
dec
ret
inc
cmp
xor
mov
shlb
mov
iret
lods
cmpsl
loop
rorl
sahf
adc
or
mov
push
pop
mov
bound
in
mov
rcrb
xor
movsl
sti
enter
fildl
jl
xchg
outsl
imul
mov
lcall
cmp
mov
pop
mov
add
in
push
insb
sub
popf
mov
je
stos
push
and
rcll
cmpsb
cmc
rcrb
test
sub
lret
es
iret
cmp
mov
out
adc
mov
out
test
mov
mov
push
mov
xchg
push
out
nop
mov
sbb
inc
fsts
push
popa
les
and
mov
mov
iret
sub
mull
repnz
out
pop
pop
ficoml
je
sub
inc
test
outsb
jbe
adc
dec
repz
mov
daa
push
aaa
inc
sbb
fdivrl
in
sbb
cwtl
jecxz
pop
push
lcall
cmpsb
fisttpll
stos
mov
subl
and
inc
cwtl
cmp
ds
mov
dec
xor
cld
mov
inc
cmp
or
in
adc
or
inc
in
xchg
mov
sbb
orl
ljmp
aas
int3
punpckhdq
adc
roll
pop
sub
icebp
xchg
push
lock
stos
scas
aad
or
add
jmp
jl
insb
inc
add
sbb
out
mov
jne
jno
lods
xchg
repnz
cmpsb
lock
sub
ds
cmp
in
cmp
add
mov
xlat
sub
xchg
xchg
andl
mov
test
jno
sbb
mov
or
lea
dec
or
push
cmp
sub
fsts
mov
sbb
dec
jo
add
and
mov
ror
jmp
and
out
push
xchg
xchg
cmpsb
and
leave
adcb
xchg
cli
scas
adc
mov
mov
std
mov
je
mov
lea
mov
lods
dec
iret
popa
test
xor
pop
adc
adc
lret
cld
sub
fidivrl
lret
imul
push
mov
push
mov
not
in
pop
fcomps
cmp
popa
pop
xchg
dec
jbe
or
std
push
mov
aad
js
arpl
popf
sbb
xchg
cmc
cmpsb
inc
call
lods
fistps
mov
adc
fstpl
and
cmp
xchg
mov
insl
jne
xor
gs
push
mov
sub
mov
gs
enter
ja
mov
mov
iret
cmpsb
push
dec
leave
daa
scas
mov
pop
pop
stc
dec
loopne
cpuid
cmp
out
adcl
push
cmp
dec
xchg
adc
adc
push
sahf
mov
pop
enter
xlat
dec
dec
lret
mov
xor
sbb
test
xor
or
aas
inc
push
push
push
mov
mov
scas
movsb
inc
ror
and
aas
pop
repz
jo
outsb
xor
arpl
and
jecxz
jnp
add
ret
arpl
shrb
arpl
std
insb
ss
lods
lahf
repnz
sub
mov
bound
adc
shlb
and
xchg
fwait
orl
push
add
sub
and
inc
hlt
and
lods
mov
iret
frstor
inc
xor
movsl
pop
scas
sub
pop
xorb
mov
mov
add
sahf
push
ret
mov
lds
fwait
mov
outsb
int
adc
dec
popf
aas
adc
lahf
sub
in
xchg
dec
fbstp
mov
aas
inc
xchg
dec
fbstp
mov
cmpsl
aas
fadds
js
sahf
mov
and
jl
pop
push
movsb
mov
mov
scas
cmp
cltd
aad
push
mov
out
pop
sbb
mov
rolw
fwait
inc
fdivrp
std
push
rcll
dec
jg
xchg
es
pusha
out
xchg
jnp
add
cld
call
adc
insb
pop
cmpb
ljmp
jbe
and
shl
push
negl
movsl
add
mov
cs
inc
les
push
push
mov
jecxz
mov
push
push
sub
mov
jmp
sbbb
bswap
dec
xchg
jb
inc
push
ret
addb
mov
notb
aas
orb
or
repnz
or
inc
leave
cmp
dec
dec
fsubrs
insb
insl
mov
clc
mov
push
pop
fidivl
dec
or
or
dec
ja
or
dec
sub
int
stos
pushf
test
or
mov
sahf
fstl
ja
pushf
lods
sahf
mov
subl
dec
mull
into
shlb
and
ret
add
pop
orb
in
out
cmp
int
pop
lret
mov
in
pop
lret
ds
loopne
pop
dec
les
push
enter
push
out
pop
pop
test
mov
xchg
or
insl
adc
lock
or
inc
dec
xor
dec
or
aad
inc
shrl
stos
in
lcall
loop
add
sub
xchg
sarl
mov
in
scas
jne
inc
or
ret
sbb
push
gs
inc
inc
repz
dec
xor
ret
outsb
sub
mov
mov
out
cmp
data16
add
test
add
lret
dec
cmpsl
sbb
push
mov
pop
add
in
out
jno
adc
js
jmp
adc
scas
jae
cmp
push
jle
mov
out
lret
repz
hlt
imul
mov
into
push
out
fwait
outsb
jg
mov
pop
lcall
sbb
setno
or
insb
adc
lea
int3
int3
bound
push
and
rol
xor
push
dec
dec
xor
arpl
inc
cmp
add
dec
outsl
out
mov
addb
dec
int
sbb
not
xchg
loop
out
out
inc
test
or
je
jp
xor
add
fisttpll
rcrl
idiv
and
cmpb
in
jl
jnp
out
lock
jl
xchg
test
xchg
adc
lahf
cmp
ss
mov
mov
or
mov
shrb
inc
in
pop
pop
lret
or
stc
cli
out
inc
scas
mov
mov
sub
shrb
xchg
fldt
sahf
mov
inc
or
mov
mov
cltd
add
ss
mov
fimuls
addps
repnz
popa
adc
jo
and
mov
pop
in
add
sbb
iret
cmpsb
int3
lds
or
rorb
ja
xorb
pushf
ret
cmpb
pushf
adc
xor
je
add
popa
jmp
xor
mov
and
push
test
test
inc
das
ss
cld
sbb
vmwrite
sub
jns
lcall
xchg
xor
jle
inc
cmp
jno
call
dec
mov
or
xchg
pop
sub
lret
loop
lahf
pop
sahf
shll
into
lret
cs
fldcw
sbb
mov
adc
jb
jnp
out
stc
test
sarb
ret
fisubs
sub
aad
pusha
dec
sahf
add
jne
hlt
je
cmp
xor
scas
scas
dec
push
ds
jle
bound
mov
adc
shl
pop
pop
outsb
test
shrb
or
xor
or
int
repz
test
jne
dec
jge
movsl
mov
dec
xchg
fwait
loop
pop
cmp
ljmp
xchg
in
mov
push
push
cmp
cmp
aas
and
mov
cmp
cmp
inc
inc
mov
cmpsb
or
inc
mov
push
icebp
adc
pop
in
dec
daa
int3
adc
jmp
adc
xchg
adc
push
xchg
das
cld
and
ret
cmc
push
fldenv
sti
fwait
dec
jle
outsl
add
mov
scas
xchg
push
loope
and
inc
mov
xor
or
push
dec
and
repnz
and
adc
mov
and
and
xchg
dec
pop
push
adc
fnstsw
pushf
in
jle
aas
cmpsb
push
push
jmp
jbe
sahf
scas
sbb
push
or
dec
dec
jecxz
xchg
inc
lock
sub
js
dec
dec
ret
stos
test
xor
push
push
clc
fidivrl
inc
imul
ja
pusha
add
ret
mov
roll
sub
inc
push
mov
iret
xlat
lcall
cmp
lock
fsubs
pop
inc
lret
mov
fimull
add
popa
les
out
mov
cmpsl
leave
adc
xchg
or
clc
popf
add
mov
movsb
mov
ja
push
adcl
xchg
inc
add
faddl
jbe
cmpsl
xchg
push
sti
clc
xor
sbb
movsb
jg
jns
lods
jmp
outsl
cmp
cwtl
and
push
das
and
mov
adc
or
lds
arpl
sbb
push
mov
add
add
js
das
adc
push
pop
fadds
test
and
jb
and
test
addr16
inc
rolb
xor
insl
aas
xor
outsb
fsubr
icebp
ret
stos
mov
cwtl
or
cmp
data16
fdivl
sbb
aam
cmp
xor
and
lret
scas
outsb
gs
bound
in
jg
jg
ror
iret
pop
leave
les
cld
push
sbb
dec
lods
jmp
pushl
sbb
mov
jg
gs
push
test
mov
pushf
mov
cmp
sub
xchg
pushl
icebp
inc
sbb
insb
jge
pushf
ljmp
in
dec
test
clc
mov
dec
jmp
arpl
dec
mov
and
pop
jp
xchg
inc
repnz
push
inc
inc
push
outsb
cli
lcall
repz
or
dec
addr16
hlt
pop
scas
out
dec
fistpll
jl
mov
push
add
pushf
into
dec
and
out
mov
mov
iret
inc
pop
push
test
test
in
fmuls
mov
out
push
sbb
add
pushf
sub
stos
sbb
xor
clc
sub
jno
adc
pop
cmp
xchg
icebp
and
in
lret
lea
sbb
cmp
adc
mov
ret
aam
jl
xchg
dec
data16
mov
cmp
add
mov
xor
cmp
pop
sub
push
scas
xchg
ja
jns
in
mov
out
sbb
jle
loopne
in
andb
cmpsb
ss
mov
sarl
push
cmp
inc
or
hlt
add
lahf
test
movsb
std
stc
mov
fldpi
lock
xor
fimull
push
cld
orb
push
xchg
mov
mov
rcll
sbb
sbb
mov
inc
popa
push
shlb
mov
mov
xor
and
test
push
jg
and
arpl
mov
mov
lods
leave
clc
cmp
loopne
ljmp
in
push
xchg
enter
stc
push
jmp
hlt
out
xchg
add
jle
mov
cmpsl
sbb
mov
rcll
xlat
jp
fldenv
mov
scas
jle
fcmove
movsb
sub
xchg
sti
mov
mul
mov
into
xchg
xor
lock
xchg
pop
dec
mov
nop
pop
sub
push
and
mov
fmulp
xor
xor
xchg
cmp
or
adc
int3
xchg
cmp
and
pop
xchg
mov
add
call
sub
mov
lods
add
call
mov
add
in
pop
adc
nop
inc
dec
popf
das
inc
sbb
cvtpi2ps
mov
iret
jnp
or
jns
scas
xchg
mov
leave
push
pop
fs
push
inc
mov
mov
or
ret
ret
jnp
into
pop
dec
in
jl
or
dec
in
or
in
push
outsl
movsl
push
aam
inc
or
add
and
pop
cmc
push
adc
sbb
mov
pop
inc
or
iret
xchg
sbb
imul
sub
inc
fst
enter
inc
nop
xor
rorb
mov
fwait
inc
cmc
fwait
mov
xchg
in
adc
hlt
or
jmp
dec
jg
jns
mov
cmp
xchg
arpl
mov
and
pop
out
iret
sbb
inc
les
dec
stc
lcall
fistl
push
mov
fyl2x
repz
mov
mov
sti
mov
sbb
jp
xor
lock
lcall
sub
faddl
fists
sub
cmp
out
pop
sbb
or
pop
call
push
hlt
push
push
or
cmpsb
jle
ret
push
sti
sahf
pop
stos
dec
sarl
addr16
xor
dec
adc
cmpsb
inc
jp
dec
ljmp
push
bound
dec
lea
aaa
cmc
lea
sarl
jbe
lds
cmp
xchg
jns
subl
xchg
insb
mov
les
and
lret
test
push
xor
and
lahf
mov
loopne
mov
or
call
xor
loopne
in
cmovs
dec
divb
lds
mov
push
sub
xor
js
mov
xchg
jo
in
aam
sbb
inc
adc
movsl
ja
loope
imul
jb
mul
xlat
sti
in
stos
dec
adc
dec
cmpsb
xchg
pop
iret
pop
push
outsl
int
jnp
dec
sbb
gs
jb
inc
iret
jae
jno
scas
ss
repz
cmp
xchg
lods
dec
jne
pusha
mov
nop
xchg
jo
je
add
aam
lcall
inc
enter
bnd
cmpsl
shl
pop
icebp
mov
arpl
popa
or
xchg
pushf
stos
fsubs
xor
xchg
push
stos
pop
je
enter
fsubs
inc
repnz
dec
sarb
repnz
ret
mov
pop
or
sub
sub
loop
xor
and
mov
lea
repz
cmp
jb
in
fldenv
pop
mov
jecxz
pop
movsl
das
dec
jae
fbstp
sti
pop
movsb
adc
iret
jmp
repz
push
and
incb
sbb
mov
and
adc
sbb
sub
faddl
lock
jns
mov
sbb
lods
xor
push
repz
sbb
and
mov
stc
into
adc
sahf
push
or
push
inc
dec
cs
sti
out
cmpsb
imul
lods
aaa
xchg
pop
adc
jne
mov
sti
sahf
mov
push
add
push
cmp
and
xor
or
xor
dec
pop
rclb
and
aam
testl
push
lds
mov
mov
pop
xchg
inc
cmp
push
inc
arpl
mov
mov
scas
or
xchg
insl
sub
mov
inc
loopne
lock
xchg
jns
and
ret
mov
lock
ficompl
cmc
repnz
or
sub
add
or
je
push
adc
testl
dec
cld
xchg
inc
jo
mov
repnz
and
dec
cmp
mov
loope
dec
jne
jo,pn
sbb
popa
in
movl
call
mov
rclb
mov
rorb
mov
mov
addl
andb
in
and
testl
push
and
testl
xchg
jecxz
je
out
inc
lcall
inc
in
push
in
repz
mov
pop
xor
out
int
jg
pop
fists
lods
filds
fists
push
cmc
mov
negb
adc
jge
imul
pop
repnz
pushf
dec
out
gs
jo
or
sbb
out
pop
flds
sbb
fidivs
mov
pusha
or
adc
jae
orb
ljmp
cmpsl
pop
xchg
jl
leave
popf
pop
jo
aaa
push
and
jo
aas
mov
in
jg
outsb
xchg
addr16
enter
cmp
add
push
mov
cmp
lret
jmp
mov
rcrb
stos
jno
inc
xchg
rclb
pop
rcl
std
push
fildl
adc
or
pop
repnz
movsl
xor
push
insl
mov
rorb
inc
xchg
or
jbe
aaa
mov
pop
cwtl
fwait
call
daa
inc
std
dec
mov
fidivs
fucomp
test
shlb
mov
mov
mov
cld
cmp
mov
and
lods
stos
xchg
hlt
cmp
pop
push
lahf
fbld
mov
jg
fmull
xor
dec
mov
jne
push
jb
in
xchg
push
sti
sub
lods
cs
std
inc
inc
pop
inc
pop
push
mov
push
cmc
xchg
add
cmp
pop
pop
repz
xlat
mov
inc
sub
cli
insl
cli
scas
mov
pop
add
fmull
sbb
addr16
and
xchg
fdivr
roll
mov
mov
xchg
repnz
cwtl
adc
xchg
push
add
push
cmpb
or
adc
inc
xorb
out
add
mov
mov
stos
add
fiadds
rolb
add
in
insl
jmp
addl
cmp
pop
adc
cltd
inc
jecxz
mov
adc
dec
enter
repz
gs
adc
jnp
lods
mov
loop
cmpsb
enter
inc
lret
lods
mov
sub
jle
into
fs
ljmp
imul
imul
aam
leave
ret
sub
add
mov
aas
jbe
and
test
mov
jl
and
mov
dec
lret
gs
mov
mov
and
call
pop
test
fcomps
cld
aam
xor
lock
sbb
jecxz
iret
pop
push
jge
sbb
jbe,pn
repz
in
xlat
pusha
jbe
mov
iret
cli
cmp
jae
sub
sub
adc
test
sbb
fmull
jne
inc
inc
mov
or
stos
loope
clc
xorl
pop
subl
out
xor
push
or
push
into
shlb
sub
push
in
cmp
adcb
movsb
in
jge
push
add
js
adc
ss
pop
in
inc
movsl
pop
popf
loop
inc
or
add
add
pop
je
add
xor
jl
mov
lods
jp
mov
lret
pop
or
mov
cmp
nop
pop
ficoms
mov
aad
dec
loop
shll
outsb
mov
xchg
lahf
lods
add
movsb
dec
pop
mov
push
or
sub
pop
mov
fucomp
test
adc
mov
shll
pop
jne
lods
loope
in
sbb
movsb
push
in
ja
popf
push
add
pushf
push
lock
repz
and
ja
xchg
pusha
inc
popa
xchg
and
mov
in
jmp
pop
ret
ffree
jle
add
or
adc
pop
lret
mov
fucom
jb
sbb
jae
orb
hlt
lods
sbb
in
ja
sti
xor
cmp
adc
mov
std
aas
test
fmulp
sbb
aad
enter
lods
sbbb
jl
ret
mov
inc
ss
mov
inc
fisubl
hlt
mov
and
adc
out
lcall
into
insb
cmc
ljmp
cld
test
cmp
mov
xor
sub
inc
jp
nop
xchg
and
push
in
push
out
enter
adc
xlat
lds
aaa
loop
ret
add
into
lods
loope
push
dec
mov
cmp
int
mov
in
pop
mov
dec
stos
jmp
out
or
bnd
jae
lret
orl
jo
loop
xchg
stc
xchg
ja
subl
lret
pop
test
mov
mov
mov
push
inc
lods
mov
lret
dec
push
xor
pop
mov
inc
push
shll
xchg
push
scas
lds
add
xchg
addr16
ja
mov
in
fs
push
lods
mov
mov
test
fstpl
jnp
and
sub
cltd
lret
movsl
in
jle
div
roll
adc
cmp
fidivrs
imul
add
hlt
aaa
hlt
sub
pushf
int3
pop
or
into
xchg
add
incb
out
loop
hlt
data16
pop
enter
or
pushf
add
std
pop
mov
or
xchg
and
lods
mov
movsb
repz
mov
mov
stc
out
inc
push
lods
fmuls
push
dec
add
xor
and
inc
lea
inc
bnd
add
in
hlt
imul
adc
or
push
pop
lods
fsubrl
mov
jb
push
push
std
mov
jnp
mov
and
lahf
push
lret
mov
xchg
lods
scas
arpl
iret
rorb
ret
jg
decb
sbb
dec
inc
push
push
xchg
sbb
movsl
push
and
out
int
and
leave
test
int
mov
bound
push
imul
mov
imul
push
stos
mov
add
sub
aam
enter
out
test
dec
xchg
arpl
inc
pop
cmp
pop
push
scas
repz
setge
and
sbbl
out
sahf
inc
add
inc
adc
imul
fstpt
sub
mov
jl
in
mov
int
cld
adc
mov
mov
xchg
outsl
rcl
js
movsl
jbe
xor
cld
pop
or
jl
out
sbb
cmp
movsl
jmp
xchg
sub
pop
xor
ret
daa
mov
div
rcll
lods
fnstcw
adc
lea
and
pop
push
loope
push
pop
outsl
hlt
adc
and
pop
lret
aam
add
jle
dec
or
stos
mov
subl
xor
mov
or
sbb
sub
in
push
xor
and
dec
cmp
rorb
xor
pop
es
jno
in
cmc
jno
js
mov
mov
loop
lret
dec
ds
in
dec
sub
and
sbb
sub
xor
sub
adc
xchg
into
adc
add
xor
mov
ret
jp
xor
sub
xchg
xor
aas
pop
leave
bound
cli
out
in
push
movsl
xor
xchg
lret
or
sbb
adc
stc
mov
mov
mov
add
add
add
cmp
fdivrs
lods
mov
push
pusha
enter
rcl
imul
pop
dec
sahf
ret
jp
icebp
and
and
mov
fistps
scas
out
inc
jns
ret
jnp
jle
sub
and
fmul
pop
andb
je
scas
pushf
adc
fistpll
mov
push
mov
repnz
jle
stos
pop
lahf
pmaddwd
push
push
movsl
scas
jmp
mov
sti
fucom
aaa
lea
mov
and
pusha
push
jbe
leave
es
fs
outsl
cmp
ja
push
lea
jmp
mov
add
lds
popl
pushf
js
and
dec
lahf
pop
xchg
pop
mov
int
lea
lret
push
loop
int3
dec
cmpsl
xchg
jle
out
mov
xchg
faddl
cmc
xchg
mov
das
pop
adc
fcoms
fisttps
dec
aas
cmc
sub
xor
gs
cmpsb
jmp
adc
add
xor
shrl
sahf
mov
iret
int
std
sahf
jmp
and
dec
xchg
jae
std
sahf
adc
mov
fisubs
hlt
mov
sub
pop
or
outsb
aas
jle
or
rcr
mov
push
outsl
mov
sbb
ret
decl
lock
and
sub
out
jne
cmp
addr16
jne
add
push
sub
sub
in
inc
add
jg
int3
js
sub
cpuid
xor
mov
pop
test
xlat
jl
lea
dec
or
add
test
xor
movsb
cmp
jp
out
dec
aaa
inc
or
out
out
pop
xor
rcll
call
dec
pop
push
add
js
xchg
lods
adc
sbb
or
mov
mov
jecxz
subb
mov
fildll
stos
pop
xchg
cmp
and
popf
pop
rclb
xor
sub
iret
lret
repz
popl
xor
mov
mov
ret
mov
cmp
mov
loopne
hlt
mov
out
out
enter
aam
ljmp
iret
and
bound
lahf
enter
hlt
mov
jg
sbb
es
lods
adc
adc
mov
pop
shll
ret
cs
loope
mov
fisttpl
add
lret
int
mov
ret
mov
and
mov
sbb
sub
mov
sub
imul
xor
mov
les
add
js
dec
lahf
je
sbb
sti
add
jge
fistl
mov
cmp
pop
sahf
ret
ret
mov
inc
scas
testl
adc
add
jb
test
lods
mov
adc
jno
jle
ja
test
dec
mov
add
adc
test
lods
cmpsl
pop
dec
int
jle
repz
cmp
aam
fidivl
or
add
in
and
pusha
popa
jecxz
lea
jns
aaa
icebp
lods
hlt
pop
sbb
test
or
ljmp
fdivrl
jae
dec
and
lcall
sub
add
dec
xor
xlat
cmpsl
ss
jp
mov
cwtl
pop
cmpb
jbe
push
mov
adc
xchg
inc
ret
xor
in
inc
inc
idivl
inc
rcrl
xor
sub
add
mov
cmpb
cmp
pop
ret
pop
outsb
add
inc
xchg
pop
arpl
mov
fiaddl
ja
sbb
sbb
sbb
dec
inc
xor
cmpsb
mov
hlt
dec
mov
pusha
or
xchg
fwait
out
sub
push
push
sub
mov
lock
repnz
sub
insb
mov
xor
cmp
pop
imul
addb
jle
fisubrl
push
fidivl
add
test
test
push
mov
inc
in
pop
xor
dec
xchg
mov
in
fcomip
mov
shrl
aam
dec
int
and
shrb
pop
aam
jb
adc
inc
jmp
je
ljmp
jne
pop
das
pop
fcmovnb
push
mov
loopne
sbb
shrb
mov
scas
pop
sub
inc
jmp
divb
or
sub
ds
leave
push
mov
sub
xor
or
or
stos
and
sarb
dec
repz
xchg
dec
push
hlt
mov
cs
sbb
mov
sub
int3
mov
cmpsb
sbb
repz
shr
decb
adc
div
jbe
popf
adc
dec
fldcw
out
lret
inc
inc
pop
sub
add
xchg
and
dec
sub
or
pop
ret
insb
insb
sub
andb
xlat
xlat
arpl
jmp
stos
cmpsb
sbb
fwait
add
loop
data16
aam
xor
fisttps
mov
jo
adc
inc
add
mov
repz
jg
pushf
fisubrl
jp
push
das
jecxz
outsl
push
push
loopne
xor
pop
cmp
xchg
lret
enter
js
enter
insb
xor
gs
js
inc
rcpps
inc
js
push
pop
nop
xor
cmpsl
rol
pavgb
or
rcrb
call
and
outsb
test
pop
xor
in
push
aaa
cltd
fdivrp
xor
sbb
es
faddp
ret
sti
shrb
loop
addr16
push
add
and
lods
popa
insl
flds
pushf
dec
pop
into
xchg
clc
xchg
sbb
xchg
xchg
pop
adc
adc
mov
xchg
ficoml
or
push
fisttps
aas
cwtl
repz
mov
lock
pop
xchg
mov
or
inc
add
mov
inc
int
pop
fld
mov
mov
xor
pop
jbe
sbbl
popa
sti
fs
cmp
sahf
add
jae
stos
mov
jae
ja
fildll
pop
dec
ret
aad
xor
push
inc
in
xchg
or
inc
mov
cmp
adc
dec
sti
mov
mov
sti
sahf
push
vpshufd
adc
stos
and
xor
xor
daa
clc
in
add
sahf
add
test
repnz
clc
shl
or
mov
xchg
xchg
xlat
dec
cmc
lcall
adc
cltd
enter
imul
movsb
xchg
in
jge
cmp
push
pop
cmp
stc
daa
adc
movsl
jmp
test
cmpsl
mov
fsubl
inc
popf
sarb
and
je
lock
xchg
sti
hlt
jmp
mov
out
les
movsb
push
cmp
ds
mov
and
sbb
sub
push
mov
bound
insl
and
bswap
in
jle
push
inc
call
xchg
test
iret
das
imul
sbb
push
out
or
push
repnz
mov
jb
ret
js
out
add
nop
pop
fisubs
xor
loop
int3
xorb
xchg
jbe
add
pop
mov
lret
pop
int
push
jne
out
add
and
out
sbb
push
hlt
jnp
out
push
out
add
mov
pop
adc
shl
out
xor
push
test
out
cmp
cmp
mov
push
and
sbb
fucomi
in
nop
xor
ja
loopne
mov
call
lds
fs
pop
xchg
fcoml
jb
scas
filds
inc
mov
or
and
fbld
or
pop
mov
sbb
pop
xor
mov
inc
cmp
loop
push
dec
jne
push
push
sahf
mov
xchg
add
das
stos
push
shl
or
shrl
loopne
lods
lcall
xor
push
and
or
mov
adc
call
jns
popa
jle
inc
cmc
mov
loope
xor
rcll
or
dec
xchg
pop
inc
scas
mov
jb
xchg
out
xlat
mov
mov
inc
test
xor
adc
cli
fnstcw
xchg
xchg
imul
mov
loop
sbbl
subl
rcll
bound
cmp
pusha
push
test
jmp
fwait
pushf
cli
inc
jecxz
inc
mov
cmp
sbb
insb
cltd
lock
rep
xor
sub
pop
fsubrs
sub
cmp
stc
mov
cmpsl
mov
arpl
mov
stos
enter
cltd
cmpsl
dec
pop
add
adc
push
dec
cmpsb
repnz
add
push
in
push
pop
dec
mov
xchg
test
das
loop
and
das
xchg
fwait
xchg
pop
cmp
sbb
test
rorb
in
push
jge
pop
xchg
repnz
xor
jb
adc
in
jmp
and
and
fwait
test
and
sub
cmp
cmp
stos
xor
test
dec
call
mov
repnz
xchg
dec
lea
xchg
add
adc
in
xchg
enter
incw
ljmp
adcl
mov
scas
mov
mov
arpl
hlt
out
insb
xchg
sbb
dec
xchg
sbb
inc
aad
lret
lret
rep
mov
pop
jecxz
pop
jns
mov
ljmp
jle
or
sbb
adc
inc
xchg
cmp
pop
dec
mov
leave
addr16
jo
sbb
insl
ss
xor
data16
sub
rclb
test
test
xchg
cmp
push
shl
pop
retw
pop
and
hlt
popf
flds
aad
fstpl
iret
mov
mov
cmpsl
mov
out
inc
popl
sub
add
jb,pn
sahf
jo
push
jae
sub
sti
ret
add
or
int3
lds
add
jae
mov
sbb
negl
fcmove
inc
xchg
xchg
jg
js
fdivrl
xchg
push
push
mov
sbb
popa
test
add
add
mov
repnz
aaa
xor
mov
mov
cmc
add
shrl
inc
aas
subl
pop
add
xor
dec
aas
shrb
pop
pop
sub
fmul
xor
test
insb
jl
outsb
jl
xor
jmp
mov
cmp
cmpsb
roll
icebp
pusha
aad
add
fstpt
daa
pop
popa
leave
pop
aam
inc
sbbl
mov
add
push
mov
inc
mov
mov
int3
jb
aad
add
cli
js
and
and
or
adc
idiv
icebp
dec
push
mov
std
xor
out
jnp
in
stc
pop
and
adc
jle
out
cmpsb
cs
add
inc
or
adc
bound
xor
lods
iret
cmp
jp
cmp
push
xchg
movb
cmp
jmp
scas
icebp
shll
pop
stos
pushf
clc
cmpsl
pop
sbb
fwait
loope
hlt
or
rclb
push
leave
cmp
in
jno
cs
dec
clc
mov
cmp
cmp
leave
mov
adc
int3
pop
jle
push
push
jae
push
pusha
mov
sbbb
aaa
out
call
push
imul
mov
inc
and
out
sub
jg
pop
lret
in
mov
lret
lods
dec
push
xor
push
shll
and
mov
icebp
dec
push
andl
adc
repz
sub
in
aam
inc
test
roll
jae
sbb
push
push
xchg
adc
xchg
leave
imul
mov
push
push
mov
xchg
push
jne
sub
lods
pop
gs
insb
jle
push
add
or
pop
add
lcall
cwtl
ds
mov
or
cmc
push
cmp
mov
xorl
jg
lea
lcall
arpl
hlt
xor
jcxz
in
jl
pop
shll
adc
hlt
sub
rcrb
adc
in
popf
enter
push
add
cltd
jno
lret
mov
daa
push
dec
dec
adc
cmp
mov
repz
stos
pop
dec
adc
aad
sbb
add
jbe
cltd
je
test
cmp
mov
xchg
mov
scas
and
push
push
fsubr
jmp
enter
xchg
mov
in
lods
arpl
aad
add
pop
cmp
das
lret
xlat
push
dec
xlat
rcrb
ljmp
jp
pop
sbb
je
int
pop
cmp
mov
mov
ja
out
mov
sub
aas
push
mov
popa
outsb
dec
test
pop
pop
mov
and
jbe
sbb
and
xorb
push
or
jbe
xchg
push
loope
inc
daa
fnstenv
jb
call
push
push
inc
push
add
xor
loope
fisubl
add
lea
outsl
jle
mov
les
mov
dec
pop
dec
lret
mov
push
xor
fxch
and
add
mov
push
pushw
sbbl
jp
jne
nop
aaa
xor
mov
cltd
adc
addr16
inc
xchg
enter
nop
int3
sbb
andb
xchg
fdiv
jae
scas
cmpb
fldcw
mov
inc
push
adc
add
mov
mov
and
iret
out
cmpsl
fdivl
cmp
cmp
sbb
mov
loop
or
add
rolb
mov
push
mov
jno
cmp
in
pop
lods
push
aad
enter
cmp
mov
mov
cltd
inc
outsl
jb
and
inc
mov
fdivl
inc
push
enter
push
cmp
js
jb
xlat
fs
dec
daa
cld
sarb
or
jecxz
pop
pop
add
inc
dec
pop
stos
dec
push
add
lret
xchg
test
mov
fimull
lret
and
adc
pop
lea
pop
or
mov
in
out
ljmp
sub
ret
lcall
jp
mov
pop
mov
sub
pop
push
test
lret
pop
ficoms
mov
daa
pop
dec
mov
jo
outsl
leave
push
lcall
cld
pop
cld
cmp
sub
pop
insl
roll
sbb
xchg
popf
jnp
in
rcrb
cmp
ja
mov
dec
mov
in
sbb
aad
js
loop
mov
mov
mov
gs
and
fildl
xchg
jb
stc
sbb
add
dec
add
adcl
cmp
and
push
lcall
cmp
xchg
xchg
pop
mov
in
enter
fistpll
mov
xchg
push
jp
mov
add
cltd
adc
jecxz
cmpsb
faddl
stos
ret
or
andl
dec
sub
cs
add
mov
add
xchg
and
cltd
mov
xlat
sti
mov
sbb
mov
popf
out
and
dec
pop
test
inc
data16
xchg
fildl
mov
clc
mov
mov
mov
fisubrl
and
rcl
sbb
test
sbb
jns
xchg
arpl
cmc
pop
sub
out
cmp
sti
mov
push
and
movsb
xchg
mov
lcall
mov
int3
in
xor
add
in
int
lock
nop
into
pop
mull
dec
test
je
push
push
fsubl
out
stos
js
loop
out
adc
mov
fsub
daa
xor
ret
lcall
mov
lcall
lret
das
mov
arpl
and
mov
test
mov
setae
popf
dec
mov
stos
sbb
jp
sub
push
lds
popf
mov
rcll
push
scas
or
dec
loop
sub
pop
or
sbb
push
add
fcmove
fists
add
fwait
pop
inc
pop
push
adcl
mov
repz
xchg
adc
cli
loope
and
push
xor
push
cs
pop
inc
lahf
clc
mov
cmp
and
lock
adc
pop
and
push
cmp
in
jp
mov
xor
mov
movsb
imul
jo
repz
mov
lret
add
mov
dec
sti
jecxz
mov
scas
and
dec
sub
mov
lea
dec
lock
xor
cmpsb
pushf
inc
jecxz
or
or
fldt
xchg
mov
or
outsl
pop
js
mov
icebp
or
adc
in
shlb
mov
xchg
mov
xor
xchg
addr16
idivl
add
add
inc
jno
loop
shrb
test
aad
and
pop
in
insb
icebp
or
add
insl
push
jae
lret
dec
or
fbstp
pop
push
ja
je
xor
in
scas
add
aam
enter
call
jp
mov
adc
clc
jb
fs
xchg
inc
cmpsl
les
aam
out
add
ljmp
pushf
dec
jne
push
das
sub
fistl
in
push
int3
fisubrl
dec
jge
pop
fsts
mov
dec
arpl
dec
pop
jmp
cli
inc
stos
mov
loope
mov
loopne
mov
rcll
or
jo
dec
iret
add
int3
imul
not
add
inc
cli
xchg
and
nop
shll
rcrb
test
sub
popl
cmp
push
inc
push
outsb
stos
pop
fsubrs
aad
push
lret
jbe
sub
arpl
pop
nop
dec
aam
cmp
sbb
addr16
cwtl
xlat
sarb
and
and
les
out
mov
mov
xchg
loope
mov
or
mov
cmp
dec
das
lods
decb
inc
call
mov
jnp
pop
or
inc
frstor
mov
loope
lret
out
xor
sarl
sub
and
paddusb
jns
pop
out
cmp
pushf
sub
adc
test
ret
decb
pusha
xchg
call
loope
out
xlat
and
jl
popa
and
sub
cmp
call
movsb
xchg
push
sub
lret
adc
pusha
scas
mov
test
sarb
or
sub
out
or
cmpsb
scas
iret
insl
sbb
cld
adc
arpl
cwtl
xor
mov
je
adc
pusha
inc
dec
icebp
loope
mov
jle
dec
gs
mov
pop
sub
aas
cld
xlat
jg
mov
cmp
lock
cmc
inc
pop
insl
cmp
shlb
mov
outsl
lret
cmp
or
mov
arpl
mov
dec
xchg
mov
stos
mov
xchg
sbb
xchg
push
je
jmp
xchg
push
in
or
push
jge
dec
je
mov
in
in
loop
clc
mov
xchg
sbb
pop
pop
push
cmp
enter
mov
push
nop
sub
int3
insl
out
in
ss
hlt
xchg
xchg
leave
and
hlt
dec
imul
xchg
push
mov
xchg
pop
stos
adc
in
test
inc
push
imul
ss
xchg
out
call
pop
push
mov
stos
sbb
fcoml
jp
mov
lea
mov
lods
subb
icebp
in
popa
jne
jmp
movnti
or
cltd
cs
add
mov
mov
fwait
and
adc
pop
xor
test
push
jge
in
neg
push
adc
repnz
cmpsb
pop
jecxz
mov
aaa
ret
fs
notl
mov
in
mov
rclb
sub
adc
shrl
push
mov
out
aam
outsl
aam
call
push
mov
jno
loop
sub
mov
test
repz
sub
xor
pop
lcall
and
sahf
std
insb
dec
subb
and
mov
dec
in
fistpl
sbb
cmp
mov
xor
mov
nop
ret
fisttpll
cmp
ja
and
cmp
iret
inc
pop
push
mov
push
ss
iret
sbb
cmpsl
icebp
rcll
pop
jne
jo
adcb
jne
fisubs
notb
inc
sbb
inc
lcall
dec
es
pop
lock
mov
addr16
xchg
orb
fwait
sbb
lods
adcl
mov
push
clc
jle
sbb
addl
aad
jmp
xorl
call
sbb
jg
es
test
xor
inc
cmpsb
add
and
stos
scas
ja
mov
xchg
ljmp
insl
sbb
dec
lods
bound
aas
es
addb
or
dec
mov
pushf
mov
dec
jmp
fsts
cli
loop
dec
fnsave
outsl
fcmovne
cmp
jg
add
push
jge
and
mov
sbb
rcl
movsb
ficoml
adc
jmp
jbe
shrb
dec
or
shll
int
loope
mov
add
leave
movsl
int3
push
fwait
jp
test
daa
ds
divb
xchg
mov
mov
mov
call
pop
mov
inc
aam
cmp
inc
push
addr16
lock
in
mov
test
repz
or
mov
std
dec
mov
cmp
xor
sub
test
outsl
add
xchg
les
mov
test
mov
scas
andb
sub
out
fcoms
xchg
mov
scas
clc
imulb
mov
push
dec
pop
add
mov
mov
jl
out
lock
ds
mov
fists
or
rcll
sbb
cmc
sahf
fsubrp
sub
std
mov
jmp
andl
xor
jb
loop
in
outsb
or
mov
adc
cmp
movl
sub
jnp
sti
or
mov
push
int3
pusha
cmpsb
pop
or
inc
sub
jo
adc
loopne
push
nop
cmp
incb
mov
out
push
ret
cmc
out
ret
or
xor
push
movsl
mov
pop
mov
orl
dec
bound
aad
inc
or
aad
push
and
or
test
inc
jle
push
mov
mov
xchg
and
sbb
push
pop
mov
add
mov
adc
insb
into
insl
fcmovu
mull
and
xor
loopne
jl
or
mov
out
pushf
ss
sbb
mov
push
mov
icebp
mov
popa
xor
out
fs
jnp
arpl
inc
nop
sarb
mov
dec
cwtl
adc
cmp
adc
enter
mov
pop
and
push
leave
xor
std
test
pushf
andl
imul
jge
mov
jle
lahf
cs
xlat
push
adc
in
jbe
adc
sbb
push
dec
cs
scas
stc
xchg
and
cmp
push
cmp
push
xlat
push
mov
cmp
out
jp
pop
and
lea
pusha
and
push
add
mov
inc
repnz
jae
pop
adc
or
repnz
mov
repnz
mov
adc
scas
mov
inc
jp
xchg
and
inc
pushf
add
fcmovne
mov
out
inc
loopne
into
xchg
scas
cmp
addb
iret
fwait
mov
dec
movsl
lret
jmp
orl
aad
pop
xor
ja
popf
dec
and
and
push
addl
jns
mov
insl
mov
mov
jo
pop
popf
mov
sbb
ja
cmp
xor
and
sub
lret
test
push
push
xor
icebp
pushf
test
xor
mov
and
xchg
sbb
mov
pop
aas
jge
push
mov
imul
das
cmp
dec
in
aas
mov
xchg
push
sub
inc
ret
fmuls
jo
scas
ljmp
cmc
cmp
mov
addl
sub
int3
cmpsl
inc
dec
jl
inc
adc
mov
pop
and
sub
test
xchg
cmp
mov
mov
testl
test
mov
sub
scas
jnp
cmovs
lods
xor
mov
jo
inc
jne
pop
push
movl
inc
or
mov
fcmovnu
mov
scas
inc
int
xchg
push
xor
cwtl
in
adc
xchg
jns
push
cmpsl
pop
jnp
dec
cmp
fwait
shl
xchg
and
addl
fistps
pop
mov
aas
cmc
test
push
fnsave
fimull
jecxz
xchg
lahf
cmpsl
push
pusha
movsb
jge
add
pop
mov
fs
loope
sbb
in
test
cs
sbb
push
clc
xor
in
and
in
out
ret
fdiv
daa
jmp
out
push
jo
sbb
fxch
lcall
dec
cmp
cmp
adc
push
lods
negb
jns
std
mov
imul
movsb
fs
shrl
test
stos
iret
fs
addl
inc
int3
adc
mov
dec
adc
les
loope
test
cli
push
dec
cmp
xchg
mov
hlt
push
cltd
push
addl
int
pusha
jmp
fldenv
aaa
mov
insb
inc
mov
imul
pusha
mov
xchg
das
rcl
mov
jae
mov
ficompl
loopne
mov
pop
ds
mov
ss
mov
aam
dec
ret
cmp
or
nop
insl
ret
jg
das
xchg
push
pop
push
sbb
test
and
jmp
fiaddl
jp
jg
ror
bound
push
fnstcw
jle
lcall
dec
sbb
arpl
fnstcw
fwait
mov
xchg
xchg
int3
mov
xchg
mov
mul
ds
nop
data16
sbb
pop
nop
shl
cmpsb
mov
adc
xor
inc
rolb
jmp
test
xor
dec
push
cmp
xchg
pop
sbb
jo
test
jl
jae
in
pusha
hlt
adc
out
out
stc
xlat
sti
decl
aas
dec
ds
std
and
cli
loop
sbb
movsl
jnp
cmpsl
mov
out
test
arpl
cli
adc
and
out
mov
aaa
fldcw
fisubrs
repnz
pop
scas
test
arpl
pop
ror
jge
stos
sbb
inc
pop
add
arpl
das
in
push
lods
pop
adc
or
daa
jle
cmp
in
addr16
fildll
fmull
mov
xlat
lods
outsl
pop
mov
pop
dec
add
repnz
loop
ficoms
sbb
rcl
cmp
pop
cmp
xor
adcb
es
mov
add
mov
or
push
fwait
pop
mov
insb
lret
mov
addr16
test
push
js
loope
adc
fistl
cmc
std
xor
stc
call
daa
dec
and
cwtl
into
int3
test
mov
push
sub
ds
dec
mov
xchg
mov
movl
xlat
sbb
mov
inc
pop
push
or
mov
and
test
pusha
sbb
jbe
test
subb
mov
stc
insb
lahf
into
jo
mov
or
cmp
push
push
push
mov
cld
dec
adc
in
out
add
dec
sbb
mov
fwait
je
add
stos
add
in
sarl
fsubl
in
xchg
arpl
add
pop
mov
xchg
xchg
test
leave
dec
scas
lahf
pusha
dec
fld
cmpsl
xchg
xchg
aad
popf
pop
sub
mov
adc
pop
pop
mov
inc
bound
xlat
xor
shll
jb
xchg
mov
sub
nop
std
sbb
push
inc
loopne
out
push
popa
pop
sbb
into
mov
and
imul
pop
xchg
xchg
pop
cmp
mov
jp
shrl
in
sbb
aad
int
xchg
pop
mov
cmp
data16
push
sbb
mov
pop
leave
push
cld
push
push
or
leave
xchg
xchg
pop
push
sub
push
pop
pushf
xlat
aaa
pop
dec
and
mov
in
xor
lock
aam
sbb
adcl
push
or
imulb
dec
fdivrp
xchg
xchg
int
out
lock
cmp
push
aaa
shrb
rcll
out
add
mov
orb
jbe
daa
adcb
jp
mov
cwtl
jmp
dec
hlt
je
pop
or
or
pop
mov
lret
mov
fwait
orl
push
jle
mov
dec
into
les
outsl
stc
cmpsb
inc
mov
bound
jo
in
stos
fnstenv
into
and
out
add
jns
js
lahf
lods
xchg
and
pop
ja
xor
sbb
push
sarl
lret
outsl
mov
stos
and
or
add
adc
sub
cli
in
push
adc
cli
dec
cmpl
sub
hlt
sbb
push
xor
cmp
dec
out
gs
jno
lods
xchg
push
mov
test
fisttpl
das
mov
pop
or
add
pop
mov
and
cmpsl
mov
nop
push
out
xor
lock
bswap
fcompl
push
mov
dec
jns
mov
mov
movsl
pop
pop
test
xchg
add
dec
stc
inc
stos
add
mov
or
pop
jmp
jmp
sbb
dec
scas
out
mov
in
ds
in
das
imul
push
icebp
insb
xor
push
push
lahf
insl
xor
ja
cmc
out
imul
xlat
aam
or
shl
pushf
and
mov
out
sub
test
ficoms
mov
jg
inc
or
lahf
adc
pushf
dec
repz
inc
in
cmc
or
cmp
cmp
cltd
pop
xlat
clc
pop
movsl
inc
ljmp
in
lcall
subl
sub
mov
add
sub
daa
mov
test
mov
rolb
inc
mov
or
adcb
lret
dec
repz
repnz
fcmovb
pop
jg
adc
adc
popa
movl
pop
mov
scas
sbb
scas
xchg
push
push
dec
inc
xor
xor
aaa
daa
stos
pop
out
roll
add
and
mov
dec
mov
pop
add
rcrl
add
add
cwtl
sbb
imul
push
stos
sbb
into
sub
xlat
push
push
mov
cli
cmp
test
pop
ret
int3
rorb
test
mov
ja
inc
jo
lds
adcb
mov
std
jne
mov
jecxz
scas
fdivrs
fwait
mov
xchg
ret
test
icebp
repz
sbb
xor
call
and
shll
repnz
mov
dec
dec
out
repz
inc
imul
inc
mov
insb
sub
and
fistl
xchg
icebp
lcall
add
scas
arpl
push
imul
das
push
dec
dec
aaa
and
sti
dec
adc
rorb
and
call
in
mov
push
sbb
cmp
pop
adc
test
xor
adc
add
sar
push
inc
jp
pop
rcrl
inc
jge
adc
cmp
and
fdivrl
outsb
sbb
add
cmpsb
mov
out
cmpsl
pop
sysenter
dec
mov
or
fbstp
or
cmp
xchg
in
fnsave
add
adc
lret
leave
adc
mov
sbb
cmp
inc
push
in
je
pop
test
rorl
and
leave
dec
pushf
scas
rclb
dec
ljmp
out
cmp
xchg
rcl
xchg
lods
mov
push
fdivs
push
cli
or
mov
dec
imul
loop
xor
jmp
mov
sub
add
xchg
test
out
nop
hlt
jmp
and
mov
and
roll
rcrb
push
scas
in
hlt
mov
cmp
jmp
das
ljmp
bound
mov
adc
iret
mov
jge
mov
inc
xchg
and
test
mov
jmp
rorb
pop
sbbl
inc
jle
mov
loopne
sub
mov
mov
bound
jmp
sbb
sahf
out
mov
and
mov
mov
movsb
push
aas
pop
inc
jae
mov
iret
mov
xchg
leave
or
into
or
lods
mov
inc
xor
imull
mov
dec
imul
mov
and
sub
add
or
xchg
rclb
cmp
push
mov
sub
dec
xchg
lods
mov
and
loopne
data16
inc
ret
movsl
or
cwtl
lret
cmp
orl
ds
imul
das
xchg
pop
scas
jmp
pop
sar
push
pop
push
jle
adc
roll
and
jecxz
out
xorb
lods
xchg
and
aaa
ss
decl
dec
dec
flds
je
stc
enter
inc
movsl
inc
lock
imul
popf
inc
and
cmpsl
push
push
push
sti
xchg
sti
mov
push
loopne
or
xchg
rolb
popf
lock
test
and
or
inc
loopne
loop
sbb
push
mov
pop
push
repnz
xchg
sub
jae
fcmovb
nop
int
imul
mov
mov
shlb
mov
iret
int
mov
mov
pop
addr16
std
sub
inc
js
mov
shrl
xor
sbb
test
sbb
lds
cmpsb
andb
pop
dec
mov
scas
push
enter
js
bound
mov
sbb
sub
das
mov
mov
xor
loop
or
xor
adc
adc
sbb
jne
cmc
cmpsl
cltd
fcoms
faddp
pushf
xchg
jnp
inc
or
int3
in
scas
aam
sub
jb
push
mov
dec
std
fs
push
fidivl
xor
popa
add
adc
pop
call
xchg
inc
cmp
lods
push
pop
add
call
mov
adc
sub
std
popa
jne
dec
cmp
pop
mov
pushf
je
mov
add
ret
daa
inc
jmp
cmp
adc
adc
dec
or
add
inc
jmp
xor
bound
inc
ss
jno
mov
aas
dec
sbb
sarb
setns
cmp
stos
imul
ret
out
inc
add
test
xchg
cwtl
and
adc
sbb
xor
repz
add
insb
mov
ret
dec
add
in
mov
in
icebp
and
mov
cmpsl
xlat
mov
mov
or
cli
push
dec
mov
fmuls
pop
ss
fisubl
sub
cmp
bsr
in
int3
mov
push
inc
jnp
rcrb
pop
nop
fwait
cmpsl
fadds
stos
jmp
bound
js
rorb
subl
fwait
mov
cld
inc
mov
mov
adc
add
je
es
push
and
cmc
test
call
pop
call
xor
add
push
adc
lret
iret
nop
fisubrl
xor
sbb
mov
mov
inc
loopne
popf
frstor
inc
or
pop
outsl
cmp
or
sbb
mov
pop
push
jns
cmpsb
xor
jge
push
dec
sarb
and
pop
cmp
mov
cltd
gs
lea
add
pop
cli
out
lods
pop
push
insb
cmp
jns
push
add
popa
arpl
popf
add
lock
cwtl
fmul
and
cmc
mov
add
xchg
jnp
xchg
cmp
mov
jge
jne
movl
mov
mov
lds
fisttps
mov
int
mov
push
push
jg
in
pusha
sarl
scas
pop
push
sbb
bound
aam
imul
clc
cli
test
pop
faddp
add
mov
inc
mov
inc
jmp
dec
lock
movsl
sub
xchg
jp
mov
cltd
fdivrs
pushf
pop
dec
mov
sub
stos
adc
jg
mov
cmpb
sub
fcmovnbe
movsb
fnop
and
mov
pop
adc
adc
fwait
inc
ds
add
ret
xchg
mov
sti
lcall
sub
jg
stc
xor
mov
popf
mov
cmp
jns
movl
mov
enter
js
jle
dec
and
cmp
ret
repz
add
les
and
sbb
popa
or
outsl
popf
enter
jg
repz
sub
ror
xor
and
test
cmpb
sbb
icebp
ret
pop
push
xlat
popf
shrl
xchg
push
and
cltd
add
aaa
fdivl
inc
or
jp
pushf
xorl
cmp
mov
cli
add
into
push
adcb
or
adc
push
mov
das
ss
push
fisubl
insl
or
incl
imul
lcall
jle
cmp
xlat
ret
in
xchg
repnz
jl
data16
aaa
fcompl
stc
jge
cltd
shll
fdivrp
and
insb
dec
arpl
decb
mov
ret
fisubs
push
jno
sar
sbb
cmp
mov
xor
cltd
addr16
adc
pop
lods
das
call
inc
dec
sbb
data16
xor
repz
in
or
xor
es
imul
decb
sub
popa
rcr
pop
jb
stos
mov
or
mulps
pop
sub
imul
imul
dec
clc
imul
jbe
and
in
js
in
ja
out
or
cwtl
push
sub
pop
dec
lret
push
add
popa
mov
adc
sub
add
add
sets
inc
rcrl
jle
addr16
and
cmpsb
fidivrs
add
enter
stc
jge
xchg
inc
mov
int
scas
or
cmpsb
mov
mov
add
dec
in
fs
xlat
decl
or
gs
push
add
adc
sub
mov
in
outsb
mov
in
sub
dec
test
mov
xlat
pop
add
loopne
jb
or
pushw
ret
sahf
je
pop
push
and
pop
inc
mov
nop
sub
in
cmp
xor
inc
or
add
shlb
ret
mov
add
cwtl
xchg
pop
out
mov
pop
sub
shll
sbb
call
lret
add
scas
add
xlat
inc
add
gs
iret
or
inc
movsb
dec
mov
jbe
int3
inc
xor
mov
dec
popf
sar
roll
xchg
xchg
add
test
es
pop
mov
sub
mov
movsl
push
int3
cmp
mov
xchg
dec
in
sub
iret
sar
mov
and
mov
xlat
xor
adc
inc
sbb
sub
pop
and
pop
jg
cmp
in
push
lcall
mov
cmpl
jns
je
sahf
mov
inc
xchg
dec
cmp
and
mov
xchg
lock
mov
call
vpor
mov
cmp
mov
stos
stos
int3
or
or
ret
and
xor
add
mov
sbb
inc
inc
xor
js
movsl
test
les
adc
stos
lods
lahf
in
fcomp
cmpsb
push
mov
adc
adcb
pop
rolb
imul
pushf
lock
cmc
fwait
aam
arpl
mov
bound
and
cmp
mov
aas
push
pop
add
pop
mov
popf
mov
push
lea
insl
mov
and
or
jbe
jl
dec
ret
xor
cli
inc
jge
inc
insb
push
cld
inc
enter
sub
loope
push
pop
add
int
xchg
adc
lods
imul
subl
push
str
sarl
push
cmpsl
inc
xchg
arpl
and
idiv
fdivs
mov
stos
cmp
push
cmpsl
add
push
hlt
mov
push
fwait
aas
fdivp
dec
jns
jb
int3
jle
arpl
loop
xlat
cmpsl
xor
rcr
mulb
xchg
fdivrs
dec
cli
adcl
sbb
mov
push
or
sbbl
ret
lods
adc
sbb
pop
pop
cmpsb
or
fld
std
clc
mov
int
lcall
insl
lods
xchg
inc
fisubrl
ss
lret
out
imul
adc
mov
les
stos
cmp
push
iret
rcrb
int3
jecxz
icebp
sbb
sbb
addb
sbb
pop
cs
mov
pop
cmp
enter
mov
stos
cli
das
lods
divb
cs
dec
rcrb
mov
inc
jnp
movswl
pop
jns
shrb
push
sbb
loope
leave
ror
dec
lds
out
dec
inc
aas
shlb
fs
xchg
jnp
mov
add
lcall
jo
jbe
jmp
push
lds
outsb
xlat
jno
jmp
cmpsb
les
inc
inc
push
cmp
mov
popa
push
int3
add
add
pop
enter
push
stc
and
jbe
or
ljmp
xor
shrl
insb
lahf
lret
mov
sub
pop
xchg
shrl
push
daa
mov
pop
arpl
lods
lret
inc
push
cmp
outsl
push
or
cmp
jno
out
push
xchg
rclb
in
xchg
sahf
frstor
jmp
jno
pusha
es
pop
push
or
adc
sahf
fnstsw
and
inc
fidivrl
lcall
sbb
and
pop
pop
fidivrs
jbe
rorb
imull
adc
out
in
cwtl
movsb
lods
sub
call
sbb
cmp
ds
mov
inc
aad
lcall
shll
cmc
pop
push
jno
sbb
notb
push
in
test
cmc
test
add
ds
add
jecxz
dec
popa
cmp
inc
push
push
cmp
cmp
dec
imul
dec
shll
mov
push
stos
mov
adc
xor
jbe
xor
sbb
rcrb
scas
mulb
repz
mov
loop
lock
les
sub
aas
jnp
in
cmp
mov
std
cmpsb
clc
adc
add
shr
bound
movsl
push
pop
dec
in
movsl
lret
dec
inc
xchg
mov
sub
mov
xchg
test
out
rorb
mov
mov
arpl
ret
pop
shrb
sahf
pop
or
rcrl
mov
ljmp
mov
in
repz
pop
push
into
insb
scas
add
outsb
jno
add
xchg
lahf
lcall
js
mov
adc
fcoms
call
xchg
pusha
icebp
mov
cmp
sbb
in
push
jecxz
test
or
dec
loopne
inc
and
lret
mov
insl
jp
inc
cmp
mov
pop
sub
arpl
mov
and
sbb
pop
adc
test
mov
lods
hlt
les
ljmp
repz
adc
push
ja
insb
inc
mov
popa
bound
mov
lods
sub
out
inc
stos
push
cltd
xchg
das
popl
mov
gs
push
in
mov
sub
cli
xchg
or
out
cs
mov
aaa
pushf
push
lea
jmp
or
lcall
rolb
mov
pop
jnp
arpl
lcall
xchg
insb
sbb
xchg
jge
mov
out
data16
inc
add
aad
idiv
jecxz
loopne
push
adc
cmp
add
sbb
sub
cmp
add
test
jp
dec
lods
psubsb
ffreep
pusha
lock
and
insl
imul
cs
test
std
enter
xchg
mov
aaa
and
xchg
jl
sub
mov
sbb
sbb
scas
dec
mov
mov
fcoml
and
dec
scas
fwait
dec
fistps
dec
adcb
pop
xchg
fxch
adc
push
aas
cmpsb
daa
pop
out
push
jae
mov
sbb
test
cmp
fstl
inc
shlb
sub
cmpsb
cmpsb
push
cltd
testl
aas
cmp
fsts
arpl
dec
sub
insl
push
mov
bound
mov
shl
loop
cli
push
dec
icebp
mov
dec
pop
sti
js
xor
mov
pmulhw
cmp
pop
add
pop
cmp
fildl
and
cmp
and
adc
xor
xor
popf
movsl
enter
aad
xchg
je
xor
ret
insl
loopne
sbb
insb
mov
xor
adc
push
cmp
outsb
mov
sbb
push
inc
ds
xchg
fsubrs
push
idivl
sti
sub
mov
bound
sbb
in
cwtl
mov
rcrb
pop
inc
mov
test
ljmp
mov
dec
mov
std
mov
dec
jae
sub
xorl
fs
clc
push
or
repnz
fs
stos
shll
insl
push
pop
out
iret
lods
sbb
mov
sahf
pop
lea
or
jo
iret
int
cmpsl
lahf
push
aaa
dec
test
pop
mov
rcl
or
out
sbb
addr16
dec
xchg
add
jp
sbb
mov
lock
aam
xor
repz
fcmovu
jnp
imul
mov
nop
jb
fwait
lcall
fmul
fcomi
cmpsb
fs
adc
pop
sub
cli
or
cmc
cmc
jae
mov
jno
dec
and
ret
out
daa
add
add
cmpsl
sub
mov
push
insl
push
jecxz
jae
jo
sub
lret
movsl
hlt
cmp
xor
cmpsl
inc
shr
out
std
je
fstps
andb
cmp
daa
xchg
orl
pop
sbb
jl
bnd
pusha
xor
or
push
pushf
mov
xchg
ret
dec
xchg
testl
lock
jecxz
out
jns
into
rorb
mov
out
adc
add
pushf
cmp
sub
pop
mov
or
lock
addr16
outsb
aad
loop
out
cmp
adc
fnstcw
push
arpl
movsb
lret
jne
arpl
jb
pop
xchg
dec
ja
or
out
jns
cs
sub
movsl
push
mov
f2xm1
jmp
mov
into
push
cltd
push
iret
xchg
in
adc
sbb
outsb
mov
movsb
or
push
repnz
enter
pop
sbb
pop
fidivrs
popw
insb
test
lods
cwtl
lock
dec
out
bound
jl
xorb
jnp
lock
cli
jno
cs
enter
mov
mov
test
into
cmpsb
add
imul
aam
fisubrs
add
fstpl
fwait
xchg
mov
mov
pop
xor
out
mov
or
add
and
fdivr
cltd
pop
or
rcl
inc
push
xor
inc
cwtl
mov
cmp
add
aad
aam
lret
dec
xor
mov
nop
add
cmp
rorl
mov
and
and
iret
dec
aas
pop
adc
enter
dec
mov
lods
mov
ljmp
ret
test
adc
jbe
push
pop
or
mov
inc
and
lahf
lods
push
gs
cltd
cwtl
inc
test
loope
inc
mov
cmp
psubusw
nop
imul
lods
jg
mov
mov
add
dec
out
jecxz
or
imul
cmp
push
cmpsl
pusha
pop
and
push
into
push
repnz
out
fdivp
jo
sahf
pop
rcl
push
push
xor
sahf
pop
push
mov
std
or
enter
scas
das
sbb
mulb
pop
sbb
shl
adc
jp
outsl
dec
lcall
pusha
lret
gs
shrl
mov
add
cltd
movb
stos
hlt
cmp
pop
rcr
inc
cmp
movsl
cmp
lahf
xchg
xchg
adc
sub
jbe
pop
movsb
test
xchg
sub
add
icebp
fcoml
test
add
out
jne
in
push
jle
pop
ret
mov
call
pushf
rol
add
or
jo
mov
loope
test
rclb
test
xchg
es
clc
add
test
push
sbb
lds
inc
xor
lock
and
push
cmp
jb
mov
jne
pop
loopne
imul
clc
lcall
dec
outsl
mov
inc
loop
push
xchg
shl
pop
call
dec
das
insl
or
imull
or
dec
inc
xor
lret
push
mov
fidivrs
pop
es
xchg
dec
mov
mov
ja
mov
shrb
cmp
mov
mov
jo
pop
sti
adc
and
inc
cli
into
arpl
mov
mov
cmp
xor
mov
cmp
gs
ret
jns
fwait
pop
out
js
dec
inc
imul
pavgw
cltd
stc
data16
loope
sbb
cld
ss
mov
out
mov
inc
js
int3
mov
vmovd
rclb
or
mov
adc
adc
sbb
mov
test
std
sub
lea
lock
imul
xorl
jp
xor
xorl
dec
sbb
into
sar
aaa
adc
cmpsb
fdivp
push
pop
dec
movsl
jle
pcmpeqb
xor
nop
dec
or
loopne
cmpsl
mov
idivb
pop
push
add
movsb
sarw
add
lahf
incb
xchg
stc
cltd
aas
repnz
sarl
lock
fdivs
xchg
fisttpll
and
cltd
int
xor
fidivrs
repnz
push
dec
std
jno
mov
cli
jnp
xchg
mov
mov
std
pop
int
cs
lret
ret
bound
sbb
jle
arpl
out
cmp
mov
inc
mov
sbb
jmp
jmp
pop
pushf
adc
and
sbb
cmp
movsb
movsl
jl,pn
data16
ficoms
add
xchg
mov
stos
mov
test
mov
mov
xchg
aaa
mov
pop
insl
mov
lret
add
or
fstpl
pushl
in
sahf
inc
cmpsb
std
pop
ja
cmp
push
sahf
push
push
pop
rorl
out
jne
or
aad
add
jns
loope
les
iret
xchg
stc
pop
jle
or
test
call
dec
jp
in
mov
sub
jp
sbb
bound
mov
and
push
push
jecxz
xchg
push
or
xchg
lods
jno
push
sahf
cltd
les
mov
dec
leave
mov
mov
roll
mov
pop
fistps
cmp
les
xchg
stc
bound
addb
xchg
les
shrl
dec
lret
mov
aam
call
xchg
pop
test
clc
mov
mov
enter
lods
mov
inc
repnz
adc
ljmp
push
jo
xchg
jecxz
jb
xor
arpl
in
test
sub
fcoms
out
xor
lods
pushf
lret
jl
mov
fimuls
mov
adc
inc
loop
es
mov
out
push
sbb
pxor
sbb
sbb
stc
jmp
hlt
jp
mov
adc
adc
les
fwait
clc
mov
movsb
or
lea
fbstp
and
push
and
cltd
jl
pop
fimuls
sub
mov
push
sub
cld
iret
cmp
inc
xchg
out
loop
ljmp
negl
out
and
lret
pop
out
mov
and
adcb
push
xchg
aam
jle
fildl
fcom
fstpl
dec
ds
jle
pusha
imul
popf
cs
dec
rcr
cmpsb
stos
fimull
push
rolb
shll
inc
jge
jg
les
inc
dec
mov
ret
test
fstl
pop
aad
xchg
mov
xchg
and
hlt
gs
pop
mov
cmpl
xchg
icebp
clc
jle
or
dec
dec
jecxz
inc
loop
mov
lcall
cmp
fs
insb
mov
or
daa
sub
xor
xchg
sub
leave
xchg
fisubs
jle
fchs
addr16
cs
mov
aas
inc
cmp
imul
xor
jbe
xchg
pop
mov
dec
popf
adcl
mov
fstl
mov
rcrb
rcll
mov
pop
push
xor
arpl
sub
imul
pop
mov
lods
into
sub
mov
fldt
stc
scas
in
not
das
imul
testl
and
mov
add
jle
fs
xor
lds
xchg
int3
mov
cltd
pop
add
xchg
dec
or
out
ss
cmp
adc
mov
and
js
pushf
adc
fnstcw
push
dec
cmc
ss
inc
mull
mov
push
mov
gs
cwtl
ljmp
or
xor
xchg
inc
mov
les
scas
xchg
and
jo
push
xor
sub
dec
ret
out
fisubl
jae
add
outsl
bound
insl
xchg
jo
rep
jo
pop
insl
pop
aas
std
ljmp
xchg
scas
mov
mov
sbb
pop
dec
inc
je
mov
dec
jg
pop
jle
push
rcll
lea
pop
les
push
cmc
scas
mov
push
mov
iret
ja
jg
ss
out
mov
xor
xchg
mov
test
hlt
fisttpll
loop
xor
fs
es
cmp
insb
mov
scas
imul
sbb
je
jo
push
enter
cmp
or
mov
sbb
loope
in
shll
stos
test
popw
mov
out
lods
ret
and
push
mov
dec
clc
pop
push
pop
cmpsb
pop
jb
andb
mov
pop
es
fdivrs
ds
jmp
and
arpl
xchg
inc
popa
jle
mov
mov
fidivs
pop
iret
xchg
les
mov
outsl
scas
pop
cli
or
mov
push
push
clc
pop
fisttpl
rcr
cmc
push
insl
loop
dec
movsl
mov
add
aaa
cmp
sub
sub
push
push
iret
aad
xchg
pop
jl
jp
dec
lds
jae
xchg
cmp
test
cld
jmp
in
out
jns
xchg
nop
mov
mov
add
inc
imul
cmpb
aam
push
add
push
sbb
aam
ds
mov
movsbl
icebp
xchg
inc
daa
add
jl
fs
jmp
xor
adc
or
shlb
dec
cmp
mov
in
push
addr16
lcall
xor
insb
adc
jle
pop
scas
mov
cli
das
cwtl
and
push
xacquire
sbbl
pop
cwtl
xchg
cmpsb
les
push
mov
pop
call
xor
pop
cwtl
sbb
add
mov
xor
lahf
dec
je
fsts
push
cli
and
push
dec
mov
push
push
sti
cld
jnp
out
jns
dec
sbb
rol
test
jnp
imul
jns
pop
inc
dec
mov
mov
movsb
adc
add
shl
sub
stos
pop
jmp
rcl
push
mov
inc
or
mov
shlb
xor
rcll
cmp
popa
insl
jnp
in
into
iret
sahf
out
adc
das
shrb
out
out
push
xchg
jge
es
fstps
arpl
stc
aaa
push
xor
mov
sub
outsl
cli
test
out
add
ror
aas
jecxz
les
cmpsl
jg
daa
jb
mov
xor
gs
cmpsl
pop
add
mov
xchg
or
dec
adc
pop
int3
push
enter
out
cmpsb
jge
aas
pop
pop
not
std
and
ss
jae
pop
les
ds
add
pusha
inc
or
fdivrs
add
push
ret
fnstenv
mov
mov
mov
mov
outsl
repnz
adc
fs
xor
movsb
in
enter
mov
dec
mov
dec
ret
lods
das
mov
fdivs
sub
pop
pusha
jge
cs
and
dec
dec
test
fisubl
xchg
lret
inc
pusha
push
cmp
lock
lods
lock
add
roll
jp
stc
push
pop
sub
push
jmp
in
das
aas
test
faddl
cmp
call
in
cmpsb
out
cmp
aam
mov
or
std
jb
xlat
and
mov
and
push
mov
sub
jmp
push
jae
stc
inc
bound
xchg
jg
pop
ffreep
jae
adc
xchg
mov
filds
cmc
jge
fidivs
test
xchg
imul
push
test
add
imul
xor
pop
dec
stos
addr16
outsb
xor
cs
pop
mov
pop
jae
jo
rcl
fistps
jo
int
mov
ds
jmp
sti
jp
mov
add
inc
popa
xchg
pop
adcb
xlat
mov
dec
loope
rcrl
adc
imul
pop
fists
mov
js
and
div
add
std
adc
dec
hlt
or
jae
jl
xor
rolb
pop
pusha
push
jo
xchg
jmp
pop
fistpll
pop
cmp
mov
push
jecxz
jp
cmp
lods
mov
pushl
cmp
addl
push
je
inc
xor
mov
adc
insb
mov
out
or
int3
daa
mov
mov
mov
jecxz
test
xchg
inc
pushf
pop
sahf
sub
or
add
mov
pop
int3
int3
ret
push
cli
leave
and
dec
in
ret
adc
cmp
lcall
cmpsb
cmpsl
ljmp
and
pop
lret
mov
cmp
clc
mov
je
insl
mov
lcall
mov
push
sub
fdivr
test
xchg
lds
xor
add
bnd
inc
lea
adc
mov
stos
inc
test
lock
aas
imul
dec
mov
jle
popf
adc
imul
dec
xor
in
cmp
pop
mov
xor
shlb
pushf
cltd
lds
xchg
mov
adc
lock
dec
or
mov
test
adc
pop
and
fst
mov
mov
jecxz
adc
roll
dec
pop
mov
fnstenv
outsl
scas
icebp
out
mov
xchg
mov
in
jbe
aas
enter
and
sub
and
xchg
mov
aas
outsl
inc
xchg
ficoml
mov
shlb
bound
mov
or
enter
pushf
cld
das
mov
enter
loopne
bound
sbb
leave
jb
sub
and
nop
test
adc
mov
loopne
cmc
dec
das
cltd
clc
js
adc
dec
std
xchg
scas
add
dec
dec
or
mov
lds
or
test
lret
mov
mov
ret
mov
decl
mov
adc
or
or
scas
lock
and
jbe
es
imul
mov
push
inc
xchg
or
sahf
xchg
add
out
mov
cmc
xchg
cs
push
mov
mov
jmp
mov
mov
xchg
mov
in
mov
cmp
fimull
adc
pop
jb
sbb
and
cltd
mov
pop
dec
pop
dec
fsts
mov
dec
ljmp
sbb
inc
das
pop
out
sub
jecxz
test
push
shll
xchg
scas
jne
shl
jo
mov
pop
or
stos
add
sti
mov
sbb
adcl
mov
lea
in
or
fnsave
stos
mov
jmp
insl
fidivl
push
sti
lret
add
pop
ret
ss
outsb
aaa
xchg
dec
mov
mov
xchg
jge
cmpsl
roll
loop
push
test
or
inc
das
pop
and
push
sbb
pushf
mov
xchg
dec
mov
js
sub
mov
pop
scas
jmp
leave
inc
mov
clc
stc
mov
mov
cmp
inc
test
pop
pop
lret
movsl
sub
jecxz
addr16
push
stc
jne
scas
jmp
add
or
or
sbb
mov
sub
test
fdivl
cmp
test
popa
ds
loopne
cltd
mov
push
push
cmova
out
dec
and
loope
pushf
push
inc
stos
adc
lret
nop
and
jle
adc
xchg
mov
push
pop
fcmovnbe
scas
and
loop
repz
add
dec
inc
mov
arpl
add
mov
std
pop
push
mov
adc
jp
dec
xor
push
fs
dec
mov
idivb
xor
dec
dec
sbb
or
xchg
orl
sbb
test
xchg
fstp
or
add
xchg
in
xorb
fdivs
in
test
loop
repz
pop
fsubrl
ds
scas
mov
icebp
repnz
pusha
in
aad
jp
fsts
xchg
and
stos
cmp
in
mov
or
xchg
scas
fstpl
push
push
pushf
fidivrs
in
loope
in
cmp
movsb
das
sar
cmp
or
jb
neg
je
inc
lods
stos
incb
hlt
fbstp
and
inc
adc
xchg
test
fstps
lcall
adcl
insb
lret
loope
push
fisubrl
push
lret
and
inc
xor
cld
movsl
push
dec
shlb
fisttpll
xor
cmp
inc
cmp
hlt
inc
mov
nop
add
fistpll
xchg
mov
imul
call
sbb
pop
mov
sbbl
mov
out
xor
fld
mov
add
xchg
pop
sahf
jns
sub
mov
popa
xor
js
inc
out
cs
scas
mov
in
cwtl
sbb
repz
pop
jp
jb
ret
add
adc
xchg
imul
daa
cwtl
ficomps
ds
out
in
mov
mov
imul
jb
mov
mov
addr16
lcall
add
dec
inc
mov
lahf
lret
fsubs
fsubrp
jae
mov
pop
sti
testb
mov
mov
inc
mov
or
sti
adc
xor
pushf
loopne
ljmp
test
aas
test
dec
lret
testl
add
add
push
fcomi
inc
pop
cmp
pop
enter
data16
fs
aam
mov
sahf
sbb
mov
scas
cwtl
in
adc
sub
adc
aam
std
inc
in
xchg
jns
pop
xchg
xor
cwtl
outsl
sarb
cmp
mov
imul
out
push
push
jo
sub
test
rolb
hlt
stos
push
ja
cmp
mov
jp
add
and
jg
cwtl
pushf
xor
and
pop
cmp
dec
in
rcl
sbb
mov
cltd
es
nop
fadds
fildl
js
out
popf
aam
outsl
mov
mov
decl
inc
ficompl
jmp
lret
lods
loopne
mov
ja
mov
pop
jb
mov
iret
mov
mov
add
push
pop
xchg
dec
enter
pop
js
cltd
mov
xchg
iret
ret
cmpsb
lret
push
mov
repnz
lea
dec
push
sub
enter
inc
dec
int
idivb
inc
push
xor
xchg
loope
and
adc
jmp
jb
lods
cmp
mov
xchg
dec
je
loop
and
rol
icebp
mov
add
or
pop
push
push
sbb
xor
add
cmp
push
test
push
inc
add
push
mov
and
jle
fnop
dec
sbb
sbbl
dec
xlat
cltd
fcompl
mov
sahf
xchg
icebp
jbe
das
bound
rep
fstpt
andl
fmul
push
inc
push
test
xchg
mov
mov
jl
mov
push
adc
js
test
enter
dec
sarb
xchg
push
mov
push
cmp
sbb
cwtl
jne
jmp
dec
and
insb
mov
sbb
inc
xchg
in
inc
sbb
jae
adc
fstl
cltd
sti
test
fildll
inc
and
jae
adc
nop
mov
jg
and
daa
icebp
cmp
push
and
xchg
fsubr
mov
fsincos
fldenv
cmp
mov
mov
and
aas
in
or
iret
inc
imul
dec
cmpsb
call
lcall
xlat
pop
in
push
inc
and
aam
sbb
inc
add
daa
scas
or
stos
stos
icebp
ret
push
nop
jp
ret
movb
ret
fwait
int
and
repnz
clc
arpl
scas
mov
mov
sub
push
data16
mov
cs
ret
iret
add
cwtl
add
jae
xchg
sub
mov
insb
xor
mov
push
nop
jne
enter
ret
mov
add
push
iret
fbld
push
push
dec
cmp
lods
bound
in
xchg
mov
pop
cs
pop
jnp
mov
stos
aaa
arpl
mov
add
addl
pop
aas
push
int3
pop
push
inc
fisubl
pop
shlb
adc
mov
aas
sahf
cmp
pop
xchg
pop
add
aam
call
inc
out
imul
sub
stc
rorl
add
std
inc
inc
fidivl
push
adc
xor
sbb
notl
aaa
js
repz
jb
add
jnp
xchg
in
lock
mov
imul
call
mull
mov
lcall
cmp
fwait
jle
pop
in
imul
ret
xor
int
xchg
or
push
add
jmp
scas
push
dec
pusha
jb
icebp
pop
add
ficomps
jp
jge
cld
out
data16
fld
and
addr16
or
jns
xchg
das
nop
clc
sbbl
xchg
sub
sbb
sbb
dec
cli
mov
stc
adc
add
loopne
xchg
mov
or
mov
mov
xorb
mov
std
inc
xchg
aad
sbb
sub
cmpsl
loope
cmp
add
push
out
adc
push
lret
mov
lock
insb
or
sub
cmp
out
cli
push
mov
xchg
jbe
into
pop
mov
enter
mov
dec
add
add
pop
jns
rcrb
xchg
lret
daa
push
test
test
mov
ja
pushl
xchg
mov
or
jg
and
mov
push
ljmp
lea
mov
push
xor
ret
aam
mov
xchg
adc
push
cmpsb
cmp
fists
ds
lea
dec
rcl
imull
cmpsb
fbld
ja
fbld
inc
mov
fiadds
ljmp
push
xchg
aaa
loopne
or
out
int3
cli
jne
and
add
pop
xchg
lcall
sub
push
bnd
outsb
mov
adc
mov
and
mov
xchg
fiaddl
jno
int
leave
xchg
lret
filds
pop
xor
mov
mov
fwait
lret
xor
in
xor
and
or
into
in
daa
mov
in
inc
dec
call
adc
andl
aad
sub
fwait
mov
or
push
pop
add
or
les
mov
out
inc
mov
push
fwait
hlt
cwtl
or
cmp
mov
pop
inc
bound
push
shrb
mov
push
push
ret
lea
cmp
int
idivb
nop
mov
inc
or
dec
les
les
xchg
cmpsb
repnz
jmp
std
out
mov
jp
inc
or
idivb
dec
adc
inc
lock
popa
jge
pop
jge
dec
jecxz
sti
js
clc
scas
xchg
add
in
notl
jmp
es
sub
shrb
iret
pop
lods
sub
in
fbld
sub
outsl
mov
mov
mov
inc
cmp
fadds
cmpsb
mov
jge
xor
fistpll
pop
xlat
jg
inc
xchg
jno
pushf
or
xor
jecxz
movsb
mov
dec
int
push
pop
ret
enter
int3
popa
lods
popa
in
into
leave
jo
inc
add
hlt
mov
imul
aas
scas
xchg
cld
into
mov
mov
sarb
push
and
push
ds
pushf
fsubp
ljmp
pop
pop
dec
imul
pop
rcl
cmp
aas
xlat
and
cmpsb
int
cmc
arpl
test
bound
sbb
pop
lds
and
dec
xor
push
in
lret
pop
jmp
pop
lock
mov
cwtl
in
jl
xchg
je
dec
pop
jnp
dec
repz
push
adc
jbe
mov
aaa
cmp
ret
sti
add
aad
hlt
fstpl
sbb
pop
lret
popf
fwait
and
xchg
pop
and
pop
or
test
sub
jmp
mov
out
outsb
int3
mov
mov
int3
divl
roll
cltd
xchg
jbe
cli
shlb
mov
mov
movsl
scas
xchg
mov
fcmovbe
jno
out
sub
jecxz
out
addr16
rorb
or
imul
sub
mov
pmaxsw
rorb
lods
popf
jb
fisubrl
lods
je
push
pushf
mov
hlt
lods
push
jno
mov
loope
xchg
mov
scas
dec
inc
movsl
mov
aaa
pop
fistl
mov
add
scas
mov
or
adc
inc
push
dec
xchg
jnp
mov
sarb
lds
add
mull
push
scas
add
or
pusha
mov
mov
vmovaps
jb
sub
mov
jge
mov
jg
daa
sarb
xchg
lret
xor
cmp
push
movsl
xchg
andl
loopne
push
test
jmp
fwait
mov
jg
das
lods
jns
mov
xor
pop
mov
subl
insb
mov
cmpxchg
mov
mov
cs
push
dec
mov
xchg
xchg
faddl
mov
or
jp
adcl
nop
leave
shlb
adc
fbld
or
arpl
in
lds
add
jge
cli
jae
or
cmpsl
jns
inc
addl
ds
sub
or
js
inc
mov
insb
jno
fisubrs
jge
hlt
push
push
inc
fcoms
add
inc
push
hlt
scas
sti
test
jg
mov
addr16
add
mov
dec
loope
stos
xchg
call
imul
bound
leave
sbbl
mov
jb
push
mov
addr16
test
mov
cmp
insb
jae
add
cmpl
ret
enter
rclb
mov
mov
push
cmp
mov
ficoms
ds
inc
jle
adc
ffreep
shlb
sbb
mul
pop
pop
jmp
push
mov
ficoml
sarl
scas
cmpsb
stc
dec
and
push
dec
std
xchg
testb
fs
add
lcall
mov
sti
into
bound
icebp
aas
outsl
pusha
popa
sub
sbbl
pop
mov
in
pop
sbb
cmp
inc
ds
fnsave
pop
cmp
cmp
ss
mov
cli
nop
in
mov
and
xchg
stos
lods
and
jmp
mov
xchg
xchg
inc
xor
testl
xor
loopne
daa
or
shr
adc
fiadds
add
jne
mov
jae
inc
cs
pop
pop
or
push
push
mov
push
sub
add
idivl
call
ss
jbe
sbb
and
sbb
mov
fimull
jecxz
pop
iret
xchg
mov
and
jns
fcomps
inc
jae
pop
jl
pop
mov
and
test
pop
and
jno
sar
loope
sbb
add
mov
xor
cmp
fdivr
mov
mov
xor
dec
sbb
xchg
stc
out
mov
cli
xor
cmp
aaa
dec
hlt
subl
mov
inc
mov
lods
ret
jno
imul
ss
pop
into
cmpsb
aam
js
and
into
test
push
jae
xlat
fs
mov
pop
sahf
loopne
push
and
mov
psadbw
dec
inc
mov
jns
popf
mov
mov
mov
loop
dec
mov
and
lret
lock
mov
scas
mov
repz
lods
ja
push
in
push
aas
mov
pop
loopne
cwtl
flds
mov
lds
mov
pushf
xchg
cmp
xlat
pop
lret
aad
add
gs
cwtl
push
shrb
das
push
sub
jge
js
cmpsl
adc
mov
push
popa
push
or
cmp
popf
jmp
pop
pop
cltd
jne
sub
imul
mov
cmp
clc
mov
push
fsubl
adc
cmp
or
test
scas
push
add
cmp
pop
jno
test
movsl
ja
jge
adc
int3
add
fisttps
cmp
add
pop
mov
clc
cmp
mov
add
fldl
xchg
push
pop
jecxz
and
pop
cwtl
pop
mov
or
gs
arpl
push
push
sub
rcrb
cmpl
jmp
js
movsb
jbe
pushf
nop
mov
pop
in
mov
es
push
inc
dec
add
pop
in
xchg
mov
pop
iret
fwait
leave
push
pop
jne
adc
mov
js
in
and
mov
jnp
add
and
sub
jecxz
sbb
cli
negb
js
mov
sbb
arpl
push
inc
push
shlb
lret
mov
aam
push
jns
xchg
fcmovbe
xchg
mov
mov
push
roll
add
aad
and
out
enter
xchg
mov
mov
dec
pop
roll
xchg
mov
sub
sbb
pop
mov
js
mov
dec
or
push
popl
cmpsl
xchg
js
test
inc
inc
outsl
nop
adc
jl
sahf
out
push
pop
mov
leave
add
cmp
int3
and
jmp
lahf
add
jecxz
in
jmp
add
xlat
sbb
outsb
xor
mov
loope
dec
add
icebp
inc
push
mov
mov
nop
jo
repz
stos
les
jmp
fs
jae
das
pop
cwtl
pop
push
xor
xorl
push
scas
sub
pushf
std
enter
mov
cwtl
adc
pop
pusha
xor
fwait
sub
pop
in
push
movsb
mov
inc
notl
nop
push
push
movl
les
sbb
notb
add
clc
imul
dec
xor
stc
jo
scas
aad
xchg
pusha
push
adc
sbb
dec
les
aas
mov
sbb
jp
add
ret
aad
mov
in
call
xchg
rcll
cli
test
test
mov
scas
in
pop
lds
sub
rcrb
rolb
int3
sub
lods
cmp
outsb
icebp
dec
mov
ss
and
mov
fmuls
and
loop
push
cmc
dec
pop
cmc
fs
daa
xchg
push
push
jno
clc
fcompl
pop
and
popf
lret
xchg
push
sbb
and
or
jecxz
out
arpl
out
mov
lods
adc
lahf
in
inc
dec
inc
insl
insl
js
in
cmp
popf
inc
dec
data16
loopne
dec
pop
or
aad
cmp
repz
rcl
adc
iret
sbb
inc
mov
daa
push
mov
out
aas
mov
jmp
pop
or
xlat
mov
push
rorb
mov
jns
mov
lods
jle
fwait
push
sti
push
mov
lea
or
adc
jmp
les
fdivs
mov
mov
mov
int
cld
adc
fldl
dec
push
sbb
mov
pop
cmpsb
jb
lret
cmpsl
movd
insl
scas
mov
enter
xor
mov
push
rol
inc
dec
cwtl
pop
fs
inc
mov
fildl
mov
cmp
aaa
test
dec
pop
loopne
dec
std
and
or
jbe
jle
rorl
mov
push
sub
add
pop
gs
mov
iret
test
push
scas
and
push
lcall
adc
adc
add
int
xchg
fs
cli
in
or
mov
cmp
imul
cmpsl
clc
xor
mov
clc
dec
stc
enter
sahf
out
mov
pop
mov
out
mul
in
pop
rorl
aaa
jmp
test
xor
cwtl
test
add
jge
push
mov
dec
pusha
mov
cmp
add
cwtl
inc
sahf
pop
repnz
fs
jne
imul
outsl
xchg
cs
lea
test
xchg
push
in
es
push
data16
filds
repnz
inc
pop
ss
push
ffreep
pop
adc
mov
pop
or
push
pop
and
outsl
sub
aas
mov
ret
sub
xor
pop
cld
cmp
mov
or
adcb
inc
cmp
andb
pop
push
lret
jp
adc
cs
xchg
pop
fnstsw
aam
adc
xor
cmpxchg
cmp
push
or
adc
sub
adc
mov
mov
lods
inc
cmc
or
pop
mov
mov
xchg
pop
je
jp
pop
sub
pop
ret
mov
sub
leave
icebp
dec
pop
pop
dec
notb
adc
loope
or
add
lcall
mov
dec
fdivrl
sbb
pop
outsl
pop
xchg
mov
int3
xor
in
mov
stos
cmp
or
xchg
jp
push
jae
inc
pop
lret
jnp
cmp
adc
lods
dec
sarl
fmul
sub
sub
hlt
mov
inc
repnz
std
lods
scas
and
cs
outsb
xor
or
xor
or
loop
test
js
inc
dec
imul
xchg
ss
push
mov
insb
nop
sub
int3
int3
push
insb
mov
dec
pop
pop
sub
mov
mov
push
jb
hlt
and
dec
xchg
and
imul
unpckhps
pop
pusha
dec
int3
cwtl
std
sbb
into
cltd
cwtl
mov
cmpsb
mov
insb
add
enter
xor
adc
lahf
mov
pushf
jno
enter
and
mov
add
jb
pop
or
sarl
sub
pop
aas
xchg
ret
in
call
push
mov
lock
push
dec
pop
adc
ficoms
push
push
je
xchg
repnz
aad
cmpsb
aam
add
cmc
test
das
jecxz
pop
lret
push
fldenv
add
movsl
pop
sbbb
jmp
adc
push
cmp
xchg
dec
push
xor
sbb
xor
adc
inc
nop
sub
xor
pop
mov
cwtl
push
out
rorb
xchg
cli
mov
mov
xor
in
loopne
dec
fsubrl
sbb
aam
mov
out
jbe,pn
push
mov
cmpsb
clc
aam
sbb
fisttpll
lret
cmpsl
push
divb
dec
aas
sbb
xchg
sbb
out
jne
mov
mov
jl
fucomip
mov
push
imul
push
lahf
mov
les
daa
cmp
js
add
cmp
or
mov
push
pop
cmp
out
cmp
sbb
adc
or
pop
mov
mov
sbb
stc
hlt
mov
aam
inc
dec
mov
int
mov
fs
sbb
push
imul
cmp
push
mov
iret
idivb
push
pop
loopne
sbb
pop
insb
lret
pop
loopne
cmp
mov
insb
ljmp
xchg
out
scas
xchg
cwtl
xchg
push
ret
xlat
mov
jmp
add
and
cltd
sti
xor
xchg
or
mov
aas
andb
adc
cwtl
adc
mov
fmull
out
lock
ljmp
ljmp
fsubp
cli
sbb
shl
clc
mov
mov
popa
or
sarb
nop
or
out
dec
rclb
icebp
sbb
inc
mov
mov
push
mov
mov
or
jecxz
or
dec
loop
dec
lock
aaa
adc
lods
or
out
inc
std
lods
addr16
pop
push
mov
roll
arpl
cs
mov
push
push
mov
enter
xchg
inc
fwait
sahf
xchg
shrl
push
adc
mov
lods
ds
pop
inc
ret
arpl
or
popa
shlb
sahf
add
out
scas
jle
inc
ljmp
add
mov
mov
push
fisubrl
jl
ss
in
push
pop
scas
add
and
stos
ret
shrb
loop
pop
cld
testl
in
enter
cli
int
cmp
dec
test
mov
sbb
push
add
inc
inc
cmp
mov
out
inc
sahf
imul
stc
enter
add
mov
cld
hlt
cmp
popf
stc
mov
sub
addr16
mov
aas
jno
test
in
or
mov
sarl
dec
and
xor
or
stos
mov
fwait
mov
jbe
jb
jge
into
jp
jno
sub
inc
pop
inc
xchg
lods
pop
leave
jl
sub
pop
sub
xchg
out
out
sub
imul
rcl
cmc
jecxz
sti
dec
pop
popf
cwtl
add
xor
outsl
bound
js
cli
add
jo
pop
jno
in
mov
int3
cmp
shl
ret
stc
mov
test
pop
insl
mov
addr16
adc
insb
sbb
xchg
out
cmc
daa
imull
leave
std
cmp
into
mov
dec
cltd
in
lds
xor
fcoms
addb
insl
lods
adc
add
cmpsl
jnp
add
cwtl
mov
cli
dec
dec
add
test
bound
adc
es
rclb
mov
jecxz
jl
es
push
dec
data16
sub
test
mov
pop
sub
sub
push
mov
jle
enter
and
pushf
fwait
adc
ljmp
xchg
push
sub
pop
aam
shr
and
lds
sbb
jmp
daa
mov
jp
gs
push
sti
pop
xchg
jmp
jne
testb
es
jo
dec
lods
push
cmp
jp
inc
adc
in
rol
jl
mov
test
rorl
and
mov
flds
inc
fdiv
or
repz
add
pop
out
xlat
lock
sub
xchg
cld
in
lods
sar
sbb
loopne
lock
es
gs
scas
inc
icebp
mov
imul
cli
add
adc
sub
enter
add
cmp
fwait
pop
jmp
xor
testb
inc
sub
das
daa
clc
dec
scas
in
push
fstps
add
mov
mov
add
cld
in
fyl2x
mov
ret
es
xchg
mov
cmp
sub
push
mov
fidivrs
pusha
and
push
repz
imul
out
mov
push
jg
pop
sbb
adc
cmp
fwait
push
imul
cmp
sub
jns
jl
pushf
adc
in
in
pop
xchg
sbb
out
sub
mov
lock
ja
mov
jl
jmp
sub
rcl
or
push
fldl
fwait
movsb
jae
push
loopne
push
lods
std
pop
mov
sbb
std
lret
mov
add
das
mov
andl
inc
mov
lds
fdivr
add
cmp
pop
xchg
outsl
and
cli
cmp
xchg
jl
repz
sbb
push
mov
std
fstpt
cli
ret
flds
dec
sub
mov
test
xor
out
out
mov
cmp
rorl
ja
insb
setae
sti
lods
rcll
and
jle
xor
lret
pop
cltd
cmpsb
mov
dec
sbb
in
cmpsb
jns
repz
outsb
in
dec
and
es
mov
fiaddl
xchg
imul
insl
das
mov
ss
dec
sbb
mov
jae,pn
lcall
adc
andl
or
loop
mov
add
jle
mov
mov
sahf
aaa
lock
repnz
sub
mov
and
fdivs
mov
mov
inc
lea
mov
adc
and
or
xchg
into
push
pop
or
sti
or
fisubs
inc
es
mov
flds
inc
cwtl
jno
ss
jg
mov
loop
push
mov
adc
int
ret
in
ja
mov
leave
int
shll
aaa
lahf
call
shll
and
push
popf
mov
push
mov
test
xchg
lods
stos
and
insb
enter
add
insb
push
aam
or
push
and
jp
cmc
dec
hlt
scas
and
mov
mov
daa
add
pusha
sub
mov
xor
pop
inc
orps
or
adc
push
pop
dec
sbb
sbb
cs
fstps
arpl
js
jno
and
test
pop
mov
lods
stc
add
rcrl
jno
push
add
xor
lods
ja
pusha
sbb
nop
xor
inc
mov
dec
mov
fmuls
in
imul
out
sbb
jne
xor
dec
xor
cwtl
sub
fwait
jne
das
mov
cmp
mov
mov
xchg
sti
imull
push
fistl
mov
cmp
lods
xchg
sbb
pop
test
mov
pop
xchg
movsb
lods
and
jbe
mov
dec
mov
push
dec
sub
cltd
enter
adc
fs
sahf
rcrl
add
pop
xchg
push
xchg
addr16
xor
call
and
mov
jp
jnp
cld
pop
dec
mov
shlb
sub
pop
js
pop
scas
xchg
push
ficoms
popf
xorb
xchg
call
pop
sub
rorb
mov
stc
shll
je
out
xchg
fidivrl
dec
in
dec
mov
push
sub
subb
push
xchg
push
mov
push
ljmp
out
and
in
bound
or
dec
add
inc
into
rorl
dec
add
sub
scas
icebp
or
movsb
mov
mov
or
aad
xchg
jbe
hlt
ljmp
pop
repz
mov
fs
pop
fcomi
sub
inc
cltd
sub
xor
dec
jno
lea
jne
cmp
jb
jmp
pop
mov
lods
aad
sbb
xor
adc
add
int
gs
push
lahf
fsubs
lcall
xlat
ss
mov
push
fidivl
sub
pop
jge
stos
in
sub
lret
int
xor
pusha
dec
imulb
leave
and
push
vmptrld
int3
xor
popf
xchg
and
loope
inc
aas
jne
push
js
leave
insl
cmc
push
xchg
jae
xchg
fsub
mov
dec
ret
xchg
or
outsl
jnp
or
jmp
mov
lcall
pop
iret
mov
clc
sbb
jo
inc
leave
test
daa
or
movl
mov
jae
push
adc
xchg
dec
stos
in
pushf
rclb
mov
cwtl
insl
into
shll
inc
or
jne
push
add
ss
push
mov
or
js
pop
and
arpl
pop
mov
mov
outsl
or
jecxz
rcll
pop
das
xor
fcmovb
cltd
fdivrl
inc
insl
push
fdivr
rcl
lahf
lret
lahf
push
mov
shl
int
mov
push
cmp
xchg
movsb
into
fmuls
or
pop
mov
sbb
cmp
ljmp
lret
mov
mov
in
pop
xor
and
fimull
xchg
stos
jb
pop
xchg
or
jmp
out
push
xor
sbb
int
testl
mov
je
aam
rcl
push
fstpl
push
jb
shll
js
out
push
das
mov
ss
xchg
fnstenv
into
cmpsb
jb
mov
sub
imul
lods
mov
imul
movsb
arpl
ljmp
out
lret
push
and
enter
loop
fs
out
pusha
mov
scas
pop
pop
sbb
lret
js
dec
das
popa
xchg
add
pop
sarl
inc
xchg
lahf
loop
xchg
insb
std
aad
and
and
je
sbb
xor
lods
dec
std
add
sub
cmp
push
cltd
inc
cs
jp
test
dec
test
in
push
aam
lret
jo
outsl
lcall
cmpps
adc
and
dec
xchg
jae
pusha
xor
ret
int3
mov
fs
rclb
pop
adc
cmp
jmp
rolb
lods
ds
test
push
popa
fbld
cs
popf
cmp
push
cmp
cmp
jns
sbb
pop
dec
sti
stos
xchg
xchg
int
xorb
jne
dec
cli
cmp
adc
lods
sub
repnz
pop
and
sarb
mov
loope
popl
pop
adcb
bound
in
add
in
inc
xchg
push
rol
lret
adc
loop
sub
mov
xor
dec
mov
shlb
mov
cmc
jo
or
cmpsb
lea
xchg
popf
mov
sahf
dec
mov
and
aaa
aas
sarl
loopne
inc
clc
lcall
xchg
lods
movsl
xor
push
add
push
cwtl
test
sub
sti
xchg
pop
xchg
add
cmp
ficoms
jne
ret
bound
mov
data16
notl
dec
cli
xchg
mov
and
sub
das
sub
fwait
pop
jno
out
ja
icebp
stos
lods
inc
and
add
pop
cmp
rcll
pusha
pop
fistpl
test
jge
push
pop
outsb
jle
stc
neg
pop
lret
mov
adc
sub
sub
in
leave
jge
mov
jle
sub
pop
cmp
movsl
add
push
mov
sahf
int
mov
not
and
filds
das
orb
lock
jne
jl
int
es
clc
idivb
sbb
je
mov
cld
and
insl
insl
jne
movsl
inc
push
inc
les
int
divps
dec
and
in
sarb
decb
rol
cld
jle
dec
mov
mov
ja
pmuludq
imull
add
cs
sbb
mov
decl
adc
pop
jmp
or
mov
mov
xlat
fistpll
adc
jge
inc
pop
push
shll
out
cmpl
lods
es
mov
mov
mov
jecxz
iret
sti
mul
jecxz
cmp
js
outsb
ret
add
push
xchg
in
mov
in
inc
add
pop
xor
inc
xlat
dec
dec
add
mov
or
push
adc
cld
scas
in
aad
and
in
mov
cmp
out
inc
js
ljmp
stos
cwtl
and
xorl
mov
out
fiaddl
aas
jb
mov
cmp
sbbb
inc
inc
mov
push
mov
mov
push
into
aam
out
sbb
sbb
sub
mov
stos
pop
test
pop
ficoml
enter
unpckhps
pop
inc
jge
push
pushf
add
lahf
sbb
into
and
or
cmp
fsubr
mov
push
and
pusha
mov
jno
adc
in
mov
out
insl
push
inc
repz
jecxz
out
cmpl
xor
sbb
outsl
xchg
dec
xchg
sahf
mov
cmp
push
mov
movsl
mov
or
mov
test
popa
adc
mov
imul
in
lock
dec
mov
push
push
mov
stc
divb
mov
in
jne
or
add
jb
jge
aam
shr
push
mov
testb
mov
fldenv
daa
out
mov
jnp
or
xor
inc
inc
outsl
lods
movsl
pop
pop
out
xchg
scas
lahf
sbb
mov
jg
jl
shlb
dec
mov
or
add
repz
scas
fistl
pop
pop
push
out
jbe
test
jb
cmp
inc
aad
jns
xlat
std
pop
jns
pop
sbb
es
cmpsl
test
sub
es
push
js
sbb
notl
jecxz
jmp
pop
xchg
adc
dec
ljmp
lods
mov
out
cmp
sti
stos
gs
aaa
xorl
dec
sarl
imul
imul
movb
and
clc
jmp
int3
xor
daa
xor
iret
into
rol
inc
insl
mov
inc
xchg
into
fsub
mov
sahf
fisubs
addb
ret
stos
sbb
mov
std
out
fiadds
cmp
out
or
add
cmp
dec
jae
in
cs
inc
pushf
rcl
pop
pusha
mov
jl
jle
out
mov
jmp
fwait
mov
fsubrs
xor
mov
outsl
push
cld
adc
add
outsl
test
sbb
push
jb
fisubrs
xchg
pusha
fdivrs
aas
rolb
xchg
push
pop
xor
jo
fstps
out
pop
sarb
in
outsl
fisubrs
xchg
sbb
pop
dec
test
cmp
lock
add
adc
mov
mov
bound
inc
add
aam
xlat
mov
lret
stc
push
push
push
fcmovu
fcmovu
lods
frstor
sbb
pusha
pop
inc
or
lahf
mov
arpl
mov
dec
xchg
mov
adc
jo
pop
mov
mov
cmp
mov
mov
add
das
insb
lret
scas
outsl
popa
in
lahf
in
mov
jle
out
ljmp
jnp
lcall
mov
xchg
pusha
test
movb
popf
or
lea
push
cld
dec
mov
push
lea
lock
push
rcl
outsb
or
sbb
insb
stos
xchg
adc
lock
or
mov
stos
shll
or
pop
add
adc
pushf
out
rolb
lock
sarl
popf
cmp
sbb
test
lds
inc
jns
fs
and
adc
cwtl
jns
fwait
lds
loope
mov
or
call
ljmp
scas
or
cmpsb
ud1
mov
jnp
add
mov
mov
inc
push
inc
repnz
shll
pop
aad
clc
js
pop
pop
je
cmp
xchg
or
mul
jp
mov
int
cmp
das
inc
xchg
adcb
pop
adc
xchg
cld
movsl
movsl
jno
mov
movsl
sbb
les
jb
stos
and
fcomps
es
out
mov
jne
push
dec
or
jb
jp
sub
lds
lods
mov
inc
inc
sbb
xorb
add
ss
pause
and
ja
movsl
jge
dec
pop
in
icebp
sub
dec
loopne
ret
or
adc
repz
inc
hlt
lods
jno
and
pop
popa
rorl
add
mov
in
xor
xchg
inc
xchg
dec
roll
inc
in
cmpsl
fwait
out
lods
cltd
push
lahf
mov
cmpsb
outsb
out
dec
cltd
jl
or
mov
mov
sbb
mov
push
stc
insl
into
loopne
mov
scas
push
push
enter
fdiv
movsb
mov
stos
jp
sub
sbb
xorl
jle
es
and
roll
repz
xchg
roll
inc
out
and
and
inc
ljmp
jle
add
scas
pop
mov
test
out
cld
pop
or
cmpsl
jno
push
push
mov
dec
lcall
lea
fwait
rcl
pop
push
push
pop
iret
in
outsw
or
stos
cwtl
and
lret
pop
and
cmp
add
int3
sbb
and
inc
ja
xchg
pop
add
das
mov
ja
pop
dec
daa
rclb
add
jmp
loop
fimuls
add
shll
jmp
clc
sbb
inc
sub
mov
mov
insl
jmp
add
in
and
inc
fdivr
xor
jns
ret
fstl
mov
xor
andl
inc
jb
ret
mov
sub
push
fs
mov
scas
cmp
sub
mov
sbb
mov
push
push
inc
bound
push
mov
pop
jae
xchg
xchg
jmp
jno
pop
cmp
mov
int
mov
adc
imul
xlat
xlat
out
loop
out
mov
cmpsb
mov
lcall
jne
mov
adc
inc
outsb
sbb
xor
and
idivb
inc
jbe
int
sti
aad
notb
aad
add
pop
insl
test
imul
sub
pop
cwtl
inc
mov
xor
divb
adc
cmpb
faddl
imulb
mov
pop
mov
sub
test
xchg
mov
subb
jno
add
pop
xor
decl
jo
and
pop
mov
sbb
ljmp
xor
dec
fdivrp
xchg
rcrb
and
jne
lcall
pop
add
mov
pop
into
adcb
in
mov
pop
mov
insb
push
xor
or
fsubs
shrb
fldenv
cwtl
cmpsb
dec
cmp
or
fsubl
mov
dec
push
add
mov
jecxz
pop
xchg
xchg
bound
repz
pop
xchg
xor
inc
add
lcall
ret
psllw
push
sub
notl
inc
add
push
mov
cmp
add
mov
ja
and
and
dec
lock
dec
pop
jae
inc
push
lret
push
inc
inc
sub
loopne
and
nop
loope
mov
add
call
pop
mov
in
aas
fisttpll
into
cmp
jge
data16
lret
decl
nop
xor
add
or
mov
jb
sbb
cmp
mov
aaa
dec
test
icebp
pop
ret
xor
mov
lcall
insl
mov
leave
mov
pop
jmp
add
cmp
ja
popa
lcall
hlt
mov
inc
loop
pop
jbe
call
es
and
decl
loopne
mov
xor
mov
jle
add
fpatan
xchg
inc
inc
and
test
or
stos
rclb
ret
add
or
xor
sbb
loop
sub
xchg
dec
add
rolb
jno
pop
ljmp
outsb
ss
mov
inc
cmp
data16
popf
iret
fcmovnbe
mov
decl
or
push
dec
pop
loop
add
cmp
inc
cwtl
dec
mov
inc
repnz
cmp
ljmpw
imulb
jge
jo
pop
cmp
mov
mov
in
repnz
or
je
adc
adcl
push
add
dec
or
xchg
mov
cmpsb
or
adc
daa
jae
pop
xchg
mov
mov
push
jmp
repnz
repz
out
js
pop
sbb
shrb
cmp
adcl
das
rcll
mov
inc
sub
push
scas
insl
sub
add
sub
adc
push
and
insl
fcomip
das
adc
sbb
sbb
js
or
adc
ds
dec
and
int
xor
out
jno
jecxz
in
xchg
sarb
adc
int3
xchg
int3
adc
lock
stc
mov
insb
adc
and
sbb
pop
fcoml
ret
mov
pop
jge
jge
decl
call
xor
or
test
mov
pop
mov
loopne
adc
push
icebp
jno
dec
mov
jecxz
cmp
xlat
sbb
je
add
test
insb
clc
mov
mov
sbb
icebp
insb
mov
pop
xchg
mov
nop
mov
push
jo
imul
add
or
ret
mov
fdivrp
cld
dec
movsb
adc
jmp
call
cwtl
clc
xor
ret
stos
icebp
add
sub
in
cwtl
xor
in
add
dec
dec
jno
sub
rorl
push
push
mov
pop
mov
sub
sbb
push
mov
push
das
addr16
xor
ds
lahf
or
mov
icebp
in
aam
stos
iret
mov
rolb
lods
mov
test
inc
lret
movsb
xchg
adc
ljmp
inc
loopne
xchg
loopne
rorb
sub
movsl
lret
shll
out
das
outsl
sbb
jnp
aad
cli
pop
push
imul
sbb
sbb
outsl
js
scas
into
data16
in
test
test
xlat
push
aam
cld
in
dec
ss
inc
cltd
and
xor
std
xor
pop
xchg
push
outsb
adc
les
sub
stos
add
aaa
inc
aam
pop
sub
xor
hlt
jns
or
pop
dec
clc
rcll
mov
std
sub
or
movsl
inc
rcrl
xor
dec
popa
push
enter
pop
dec
pop
mov
ljmp
hlt
push
dec
cmpsb
adc
mov
jle
jo
mov
mov
adc
lock
imul
dec
je
xchg
shll
mov
in
xor
sub
into
mov
daa
add
adc
cmpsb
push
sub
mov
or
fstpt
test
roll
dec
leave
repz
das
jg
int
push
loop
sub
push
ja
xchg
dec
jno
es
xor
sbb
movsb
es
iret
test
and
jbe
bound
int
push
aam
dec
cwtl
fidivrl
mov
arpl
xchg
push
imull
push
dec
adc
xorb
repz
and
dec
andb
jo
cmpsb
cmp
cmp
pop
add
add
adc
xor
dec
iret
mov
sub
loope
xlat
les
sub
add
dec
call
stc
test
ds
mov
sarl
push
shrb
fstpl
push
popf
sbb
jns
mov
inc
scas
ret
lret
add
hlt
in
test
stos
rcrb
mov
xchg
je
add
in
cmp
lcall
push
mov
inc
out
push
pop
adc
adc
pop
scas
pop
aaa
lods
nop
insl
xorl
xor
cmp
int3
add
cmpsl
inc
shrl
mov
roll
push
call
mov
adc
test
in
mov
jbe
inc
jmp
popf
enter
dec
mov
mov
cmp
push
aad
push
das
pusha
dec
mov
bound
or
xchg
xchg
jmp
cmp
cmp
jno
into
arpl
out
adc
lahf
xchg
fs
xchg
std
sub
sbb
xchg
cld
xlat
mov
or
shl
jnp
mov
lock
add
push
fcoml
cwtl
xchg
pop
sti
jns,pn
shlb
or
sub
test
cmp
mov
lock
add
clc
fistps
push
xchg
cwtl
add
divl
adc
cmc
add
cmp
divl
and
sub
rolb
xor
jle
test
gs
movsl
dec
aam
inc
outsb
push
inc
scas
mov
pop
cmp
jg
int
mov
fdivrs
scas
rcll
pop
out
sbb
ret
push
subb
and
and
enter
insb
xlat
sti
mov
scas
mov
mov
fwait
pop
cmp
in
aam
lock
mov
jg
popf
fs
push
push
pop
inc
mov
scas
outsl
pop
xchg
jl
or
popl
mov
insl
add
add
lods
shlb
jge
insl
cmpsb
out
fcomps
movsl
lret
inc
mov
pop
fwait
mov
lods
and
int
push
out
loope
out
lds
xchg
fnstenv
cmpsl
add
sti
mov
jae
xor
pop
fs
sarb
or
cld
repz
bound
lahf
out
dec
popf
xchg
push
loope
lret
and
mov
mov
push
mov
out
xorl
addr16
nop
jns
push
sub
jg
loopne
gs
and
cmp
clc
in
add
in
jbe
pop
fists
out
add
in
cmpsl
imul
and
fidivs
inc
mov
mov
jp
inc
sbb
pop
popl
stos
dec
dec
nop
scas
hlt
push
sbb
adc
cld
gs
push
xchg
ss
movsl
cmpsb
jg
test
ret
int
imul
or
call
mov
sub
mov
inc
pop
in
call
arpl
and
mull
mov
inc
push
or
push
mov
push
movsb
xor
outsb
lock
lcall
fdivrp
in
imul
mov
jge
insb
push
loope
dec
ds
sub
outsb
roll
adc
fistpl
and
loope
pop
push
pop
lock
outsb
aaa
add
jae
mov
and
nop
sti
jp
test
negb
push
mov
and
cmp
sbb
ret
inc
fadds
inc
js
cmpsb
repz
xchg
lock
sbb
sbb
push
pop
pop
roll
dec
mov
int
xchg
dec
mov
into
cltd
jp
insb
mov
cmp
mov
inc
xchg
testb
lods
lret
add
xchg
and
adc
pop
xchg
fwait
call
cmpsb
or
mov
cmpb
sbb
or
sbb
lret
gs
mov
push
pop
jmp
mov
loope
push
fldl2t
jmp
scas
lods
icebp
add
and
mov
xchg
outsb
cmp
sbb
stos
repnz
xlat
or
in
adc
push
dec
scas
insb
rolb
pop
in
inc
icebp
dec
pop
push
inc
shrl
push
pop
std
ret
imul
nop
inc
jb
scas
push
aam
shlb
push
in
mov
push
sbb
das
xorb
mov
sbb
jb
notb
lret
in
mov
and
or
orb
repnz
add
jmp
mov
mov
gs
push
jg
dec
cmpsb
jno
lods
xor
sbb
icebp
xchg
fnstenv
jae
push
push
dec
pop
mov
scas
cmp
pop
jbe
enter
lods
adc
add
pop
dec
xchg
dec
mov
std
divb
les
push
cli
cmp
pop
in
pop
dec
adc
enter
in
mov
push
lret
cmp
pop
lds
lea
fwait
sub
push
bound
rolb
hlt
mov
fs
test
cli
stc
sahf
lcall
mov
out
mov
cli
and
cs
sub
outsl
mov
or
dec
sarl
mov
lea
adc
es
pop
popf
adc
sbb
xchg
mov
dec
cmp
in
xchg
repnz
iret
inc
mov
dec
leave
push
mov
jmp
sub
out
iret
ljmp
pop
sub
pop
dec
inc
mov
or
sbb
cltd
js
jb
push
das
cmp
pop
mov
shrb
mov
and
pop
test
sahf
call
or
clc
sbbb
aad
fidivrl
incl
sbbl
test
jmp
loope
mov
mov
and
fucomi
mov
pop
stos
jmp
mov
repnz
leave
cmpsl
das
int3
imul
mov
push
pop
sbb
mov
rorl
pop
push
scas
mov
cmp
adc
and
push
dec
fldenv
ss
outsb
ja
dec
inc
and
ja
jno
jns
mov
clc
movsw
dec
push
add
ja
sbb
test
and
lods
pop
ds
jnp
sbb
cmp
or
jae
fdivrp
jl
fildl
fiaddl
and
mov
imul
and
lahf
lods
test
fadd
cmp
enter
mov
mov
adc
mov
imul
fwait
int3
aad
sbb
dec
fcmovu
adcb
sub
xor
shl
shl
ljmp
pushf
or
hlt
daa
jnp
sbb
in
fcmovne
mov
cmp
jg
pop
and
leave
mov
fistpl
test
lock
mov
popa
mov
mov
xor
negb
sbb
and
pop
outsb
xor
inc
loop
mov
xchg
ror
aam
cmp
mov
in
xorb
sbb
adc
mov
mov
jmp
in
cmp
rcrl
aam
xor
ret
add
dec
sub
dec
lock
xor
lahf
rcl
xchg
lock
jl
iret
sahf
inc
test
mov
push
mov
mov
es
lock
cmc
push
scas
pop
lahf
cld
pop
stos
addr16
pop
mov
mov
add
idivb
scas
push
pop
xchg
jmp
mov
push
scas
mov
shll
imul
mov
xchg
cmp
xor
push
mov
sub
arpl
xor
pop
cmpsb
mov
fwait
or
dec
out
sbb
out
push
add
dec
nop
arpl
cmp
jnp
popf
aad
xchg
mov
or
xor
shlb
pop
cmc
ss
lds
fstpl
das
pop
mov
jne
push
idivl
ja
dec
mov
inc
push
mov
jno
xor
mov
or
pop
push
ds
xorl
loope
test
or
mov
lods
pop
sbb
mov
and
arpl
push
xor
mov
dec
rcrl
push
lcall
lcall
pop
std
xor
jbe
shll
out
mov
mov
movb
jle
fcomp
push
or
cs
icebp
mov
pop
lret
imul
clc
xchg
lods
sub
sbb
cmp
fprem
pop
mov
daa
sbb
pop
loop
inc
sbb
sbb
stos
xor
mov
mov
rclb
movl
stos
lods
pop
mov
data16
cld
movsb
inc
je
cmp
rcrb
pushf
adc
or
sub
pop
xlat
fmul
cs
fiaddl
dec
gs
lret
int3
and
fcmovb
inc
pop
sub
xchg
dec
jle
cmpsb
pop
adc
and
pop
popa
outsl
scas
jb
push
fstp
xchg
fcompl
leave
clc
test
push
xlat
lcall
cld
dec
lds
hlt
out
imul
bound
mov
mov
sbb
jle
lods
test
das
loopne
out
or
jnp
ds
movsl
sbbl
popf
std
leave
dec
cmp
ret
icebp
push
int
xor
xorb
xlat
xchg
jns
sub
sbb
test
sub
ds
cmpb
add
loopne
es
push
fsubs
mov
fsts
cmc
cmpsb
sbb
stos
xchg
and
jge
pushf
adc
in
call
ret
loop
push
dec
adc
pusha
jae
mov
xchg
bswap
ficompl
nop
repz
sbb
mov
loope
enter
xchg
rcrl
flds
add
mov
adc
mov
jno
mov
sbb
out
jno
inc
jo
or
loope
dec
xchg
in
cs
mov
or
data16
push
sub
mov
fst
fisubs
hlt
jge
enter
mov
gs
mov
pop
pop
xchg
adcb
or
scas
out
js
icebp
ja
or
sbb
jno
adc
arpl
mov
roll
pop
pusha
adc
lods
mov
inc
xchg
mov
sahf
push
movsl
sbb
lret
int
je,pn
xchg
mov
fistl
mov
or
icebp
mov
pop
xor
mov
ficoms
jmp
lock
aad
inc
cmp
lcall
push
mov
pop
mov
pop
arpl
sub
xchg
idivb
fisttps
loop
jge
or
fcmovne
data16
push
loopne
xchg
movsb
adc
aam
adc
push
mov
or
sbb
jg
push
push
rclb
dec
sub
and
jecxz
add
subb
jne
movsb
sub
jo
or
pushf
fdivl
xchg
test
jg
fincstp
push
les
mov
pusha
lret
lods
xchg
mov
push
xchg
loope
popf
xor
aaa
scas
jmp
dec
imul
xchg
mov
push
xor
call
jnp
lea
dec
hlt
inc
and
jmp
sbb
cli
insb
test
xchg
aam
test
inc
dec
xchg
cs
and
imul
and
test
sbbb
inc
pop
stos
jns
dec
lcall
mov
aas
mov
inc
push
inc
leave
adc
and
loop
sti
dec
jle
call
dec
push
lahf
mov
add
dec
orb
push
jg
jb
stos
jp
mov
or
cmpl
adc
jecxz
pop
test
pop
loopne
jl
add
push
pop
pop
imul
orb
enter
je
xchg
cmp
xchg
xor
xchg
mov
movl
sbbb
cmp
cmp
mov
scas
jl
jp
scas
lahf
xor
cld
or
das
jae
jbe
sub
stc
jnp
out
rcr
xchg
cmp
dec
orb
dec
fadd
aaa
in
ss
jg
pop
sti
out
std
ficoms
cmp
or
data16
scas
jle
pop
mov
sub
mov
scas
adc
movsl
ret
cltd
test
xchg
inc
cmp
inc
jg
pop
test
inc
jp
xchg
inc
sbb
add
mov
jae
stc
and
adc
xor
jmp
adc
lods
sub
lea
push
lcall
lret
push
lahf
mov
pop
push
aaa
leave
push
bound
mov
fisubl
xor
pop
push
les
dec
out
sub
push
and
fucomip
cs
iret
mov
cltd
sahf
ja
mov
or
cmp
dec
add
push
adc
stos
push
pop
sbb
stos
inc
insl
add
mov
pop
dec
ss
adc
loope
mov
inc
push
sub
push
popa
in
xchg
mov
mov
push
pop
in
push
mov
and
shrb
inc
cmp
inc
imul
stos
pop
sahf
mov
or
outsl
sbb
imul
inc
icebp
dec
sbb
sbb
inc
or
pop
inc
in
mov
sub
outsl
pop
fadds
test
jl
arpl
mov
mov
pop
mov
ss
repz
in
lods
jecxz
out
inc
pop
daa
sbb
cli
mov
lods
adc
dec
mov
xor
fsub
fdivrl
ficompl
gs
and
add
pusha
adc
pushf
xchg
in
out
andl
dec
orl
mov
ror
sub
lahf
lods
jb
push
or
inc
iret
push
int3
jmp
fs
sbbl
xchg
mov
fs
ret
cmpsl
dec
gs
mov
sbb
in
imulb
lret
and
cmpsl
sub
addr16
sub
adc
fdivl
sbb
out
inc
cmp
or
mov
shll
aam
cmpl
bound
imul
push
pop
jmp
dec
loop
jns
iret
loope
icebp
sub
jne
lods
pop
mov
stos
pushf
nop
inc
stos
clc
dec
repnz
std
rcrl
pop
stc
xchg
rorl
repnz
decb
ret
outsl
stos
mov
adc
mov
testl
mov
add
mov
mov
mov
push
das
leave
cmp
aam
aad
aam
shlb
clc
cmpsb
and
add
cli
xchg
dec
jb
aad
popf
lods
imul
adc
inc
sub
scas
fstps
xor
sbb
cmp
shr
push
add
outsb
jecxz
addr16
push
push
mov
xlat
mov
aaa
test
int3
add
inc
repz
arpl
popa
lods
lahf
pop
push
xchg
and
rcll
insl
add
cmp
adc
mov
or
icebp
aaa
dec
rcrl
outsl
push
stos
sub
jo
mov
cmp
adc
test
xchg
sub
cmp
xchg
pop
into
xchg
push
or
divb
push
cmp
push
push
or
jmp
sub
fcoms
jecxz
movl
daa
push
mov
push
adc
xchg
loop
pop
xchg
mov
gs
mov
ss
mov
cmp
testb
in
and
decb
cli
sahf
test
inc
pop
inc
mov
aam
ror
mov
inc
and
push
add
add
xor
mov
push
cld
hlt
sti
lds
cmpsb
sti
push
iret
pop
pop
xchg
stos
mov
dec
xchg
pop
js
xchg
inc
mov
addb
xor
rcll
ret
mov
push
cmp
jne
lret
rorb
jb
add
push
push
push
mov
xor
sahf
and
or
rolb
shll
inc
out
sbb
dec
pop
lret
mov
pop
incb
xchg
adc
push
out
jge
dec
jecxz
call
cwtl
mov
inc
pop
cmc
push
xor
mov
lods
add
add
or
xlat
push
cld
push
add
rclb
pusha
repz
ds
push
mov
sti
push
push
addl
inc
or
mov
outsb
cs
sbb
xorb
pop
repnz
mov
mov
sahf
rclb
push
jo
cmp
xor
daa
icebp
outsl
data16
out
adc
cmp
ret
es
mov
enter
and
push
shl
mov
cmp
sbb
fisubrl
or
mov
scas
daa
fisubl
addb
icebp
mov
repz
pop
pop
ja
mov
pop
mov
lret
inc
push
mov
leave
or
cmc
daa
mov
dec
int
mov
pop
push
jnp
jmp
push
aaa
pop
sarb
out
ds
xor
pop
pop
sub
lock
and
into
in
fldenv
mov
xor
fistps
ror
mov
adc
push
inc
and
lret
inc
cmp
inc
push
rcr
dec
data16
pop
mov
aaa
xlat
push
dec
xor
jne
jns
push
inc
push
loope
mov
or
out
lahf
push
addr16
add
in
scas
xchg
insb
loop
incb
mov
jb
lds
shr
test
sbb
enter
push
test
mov
jge
aas
xchg
fsub
icebp
es
cld
pop
out
pop
xorb
push
dec
scas
daa
dec
int3
add
addl
call
xacquire
out
or
hlt
outsl
push
repnz
add
sub
push
or
sbb
imul
hlt
roll
fistpl
and
test
loopne
jae
or
lret
movsl
sbb
push
mov
js
rcrl
clc
dec
imul
jmp
rolb
mov
insl
aaa
mov
std
xchg
pop
repz
dec
loope
or
jge
les
fsts
incl
add
fwait
push
mov
push
mov
cli
lret
push
cmpsl
sub
cltd
outsl
jecxz
push
mov
mov
call
gs
cwtl
aaa
in
or
xchg
in
fcmovne
adc
sbb
sbb
adc
cmp
cmc
hlt
fnsetpm(287
fldl
mov
in
mov
adc
cwtl
cmp
test
xchg
inc
lds
ret
loope
pop
jmp
mov
push
pop
pop
jo
ret
daa
jmp
cmp
cmp
push
lods
mov
lds
nop
push
fidivrl
test
xchg
cmp
lret
sub
outsb
ss
sbb
xchg
dec
leave
outsl
bt
sbb
imul
dec
mul
xchg
iret
enter
xchg
adc
jp
mov
fcompl
fstpl
int3
xor
fs
add
or
je
insl
leave
test
gs
sbb
or
nop
cmc
xchg
inc
mov
scas
insl
inc
inc
push
mov
ss
fdivp
cltd
rol
inc
cmpsl
and
inc
mov
sti
arpl
je
dec
pop
movsb
and
add
aam
add
mov
xchg
sbb
add
xor
sub
ss
cmp
jne
xchg
fdivrs
lea
cmp
push
or
negb
es
cmpsb
pop
imul
scas
enter
inc
sub
popf
repnz
in
add
icebp
dec
sub
xchg
int3
sbb
mov
pop
pop
dec
lret
or
mov
pusha
sbb
ja
mov
inc
cmpl
and
in
or
add
repnz
mov
mov
or
jno
sarl
xchg
sbb
xor
xor
iret
add
insb
xor
jle
stc
sbb
cmp
pusha
xor
fldenv
cmp
addr16
mov
push
cs
les
sbb
mov
xchg
loop
sub
dec
dec
and
add
cmp
xor
aam
add
jno
inc
push
push
adc
xchg
stos
pop
push
cmp
adc
dec
push
fbstp
xor
fcmove
out
sahf
and
fstpl
jbe
test
loope
pop
sbbb
add
je
out
inc
sbb
fcoml
dec
loop
mov
cld
stos
jno
ficoms
xchg
push
aam
mov
push
fcompl
out
mov
ss
sti
xor
cmp
xor
sbb
push
pushf
not
sbbb
pop
ljmp
push
sbb
mov
mov
xor
outsb
dec
lahf
sbb
dec
mov
inc
data16
inc
cmp
out
enter
or
in
sti
int3
add
jg
icebp
lcall
mov
fildl
stc
pop
adc
adcl
pusha
scas
sub
test
call
push
aas
mov
negb
inc
call
cmp
dec
mov
mov
jmp
stos
call
cmp
cs
fs
sub
mov
fs
mov
sub
pop
daa
sarb
mov
pop
popf
mov
rolb
add
push
jmp
lods
in
dec
sbb
fistpl
mov
lea
int
push
adc
outsl
out
dec
xlat
loope
les
push
bound
lret
mov
daa
sbb
mov
add
imul
loop
in
ficoms
adc
or
add
cmp
ljmp
mov
mov
int3
lods
jmp
outsb
jp
and
enter
ret
add
mov
insb
or
jp
pop
mov
inc
sub
rclb
out
mov
imul
pop
mov
mov
push
xlat
test
cmp
or
cs
jmp
aas
xorb
icebp
pusha
xchg
fdiv
pop
mov
sbb
xor
cmp
nop
or
lcall
jg
inc
sub
out
faddl
pop
jno
in
dec
lds
jecxz
jmp
bound
jne
xor
mov
xor
jmp
call
jnp
sbb
scas
mov
pop
dec
xchg
and
mov
or
int3
lret
add
sbb
add
lea
jo
not
pop
inc
sub
lea
ret
pop
pop
shld
push
add
test
popf
loopne
sub
fisubrl
jmp
fldt
clc
sbb
jo
mov
sar
dec
push
cmpsb
sbb
jl
cmc
sbb
out
jne
std
and
mov
add
xor
xor
mov
cmp
loop
inc
and
fisubl
pop
inc
dec
sbb
aas
adc
nop
or
jg
stos
mov
pop
sbb
lahf
xor
xor
ret
imul
outsb
daa
fcoms
mov
xchg
jl
loopne
into
hlt
inc
movsb
outsl
pop
pusha
popf
aas
aas
add
mov
das
adc
shll
arpl
popa
mov
fwait
adc
ds
jae
adc
push
mov
adc
fdivr
sbb
scas
mov
cmpsb
sbb
lret
jle
or
dec
fs
pusha
cmp
push
add
xchg
lods
ret
test
sbb
pop
fidivs
sub
test
out
enter
xchg
inc
add
test
cmpl
adc
aam
xor
sub
add
mov
lret
inc
cmp
xor
xchg
mov
jle
xor
rclb
int
inc
gs
lcall
push
adc
hlt
or
inc
mov
jb
or
inc
into
dec
loope
aad
test
aas
sbb
jge
push
xor
mov
fwait
ja
popf
sbb
jbe
push
jns
shl
pushf
mov
cmp
mov
stos
jae
aas
andb
ss
js
xor
das
dec
cmpb
xor
sarl
push
push
xor
je
mov
mov
adc
daa
add
xor
jle
out
test
xor
pusha
push
jge
hlt
xchg
clc
out
clc
add
and
mov
pop
add
outsb
or
movsb
cli
sbb
pop
sahf
xlat
ret
cld
mov
fdivrs
leave
and
repnz
lcall
add
arpl
add
add
add
bound
pushf
iret
mov
sbb
in
dec
insb
loop
repnz
mov
sbb
add
jle
popa
inc
xor
scas
call
pop
mov
add
push
rolb
lea
sbb
aaa
jb
add
fcoml
jmp
push
bound
push
inc
loopne
adc
insb
loope
je
pop
sub
in
sub
out
xor
sti
mov
aad
popa
mov
lods
mov
and
xor
xchg
pop
loop
push
cmp
loopne
out
pop
test
add
pop
pusha
and
popf
sti
ds
sub
xlat
into
pop
roll
xor
mov
mov
rcrb
inc
pop
lods
dec
test
xbegin
dec
into
dec
mov
aam
lods
xor
fwait
scas
out
xchg
add
ja
mul
out
insl
mov
sub
ja
jmp
and
lret
pop
add
or
sti
test
push
sarb
push
mov
mov
imul
mov
imul
fidivrs
lds
mov
mov
sahf
int
mov
int3
jb
cmpsl
pusha
xchg
adc
sti
int3
idivb
mov
and
stc
ficoms
minps
icebp
out
sub
cmp
fisttpll
jg
sub
mov
mov
jle
push
dec
push
push
call
pop
xchg
lret
out
mov
sti
mov
pop
mov
sti
loop
nop
outsl
mov
insl
xchg
scas
push
push
out
add
or
mov
gs
pop
sub
mov
mov
sub
test
cs
lret
xchg
test
mov
fdivr
cld
adc
scas
movb
push
inc
adc
mov
inc
add
sbb
sub
inc
lret
lea
or
fs
lea
repnz
gs
test
sbb
popa
sub
push
cmp
add
aaa
adc
ret
or
repnz
lret
inc
inc
jns
lret
cmp
pop
lcall
jbe
jecxz
pushf
pop
xor
aas
lcall
jmp
jnp
fidivrs
data16
dec
pop
push
sub
fcmovnbe
js
bound
xchg
push
jp
push
add
insl
imul
daa
fistl
out
pop
cmp
or
add
in
cmp
out
lahf
repnz
and
adc
cmp
icebp
fistps
popf
push
ret
loopne
mov
arpl
pop
sub
inc
int
jmp
and
pop
cltd
adc
mov
ja
fs
mov
in
add
and
adc
inc
aad
nop
testb
and
mov
mov
mov
les
xchg
jnp
sbb
movsl
aaa
mov
inc
inc
jno
push
inc
push
dec
add
push
out
in
aam
gs
imul
dec
jb
mov
sbb
mov
out
sbb
enter
jg
outsb
cli
call
test
aaa
jae
popf
mov
je
xchg
ret
cmp
cmp
movsl
lret
lret
aad
es
sbb
int
add
fsubrl
aam
out
mov
mov
cwtl
bound
sub
pop
sbb
dec
and
mov
scas
mov
adc
cli
or
enter
stos
push
out
push
ficoms
loopne
sub
pop
xchg
bound
or
lret
test
xchg
sti
testb
dec
mov
adc
repnz
dec
xchg
xor
mov
pop
push
and
sub
push
pop
mov
popw
add
push
lea
aas
sbb
loope
outsl
mov
fidivs
insb
dec
es
daa
fbstp
es
cltd
xchg
mov
and
adc
dec
enter
int3
cmp
or
cmp
js
mov
mov
imul
add
add
scas
imul
pop
xchg
mov
and
mov
jmp
shlb
packssdw
outsb
inc
push
pop
sti
ret
add
lock
out
cld
loope
cltd
loop
adc
push
pop
dec
xchg
mov
rclb
dec
cli
cld
popa
inc
xchg
aam
leave
inc
movsb
fstpt
or
call
jb
das
lret
sbb
push
daa
outsl
leave
mov
pop
or
push
and
and
push
cmc
fucomp
std
pop
sahf
push
cmc
je
in
inc
mov
add
add
push
pop
and
bound
jnp
inc
and
fwait
mov
jbe
inc
cmpb
jbe
adc
insl
push
mov
push
pop
cmp
adc
and
inc
sub
out
adc
mov
popa
shll
ror
movl
les
xor
ss
cs
hlt
scas
cltd
xor
adc
cmp
fmulp
fidivrl
pop
loop
xlat
jo
js
sarl
imul
xchg
pop
imul
mov
fdivs
out
pusha
cmpsb
cli
xchg
mov
inc
mov
lock
and
je
dec
cmp
jno
mov
adc
pop
cwtl
dec
ret
inc
ret
cld
jne
test
add
jl
push
iret
sbb
loope
shl
pop
fwait
sti
loop
imul
dec
push
jmp
add
mov
mov
out
cmp
cmp
jl
push
addb
jle
faddl
pop
lret
cltd
mov
ljmp
cwtl
in
call
mov
out
xchg
popa
mov
add
loop
test
adc
repnz
push
push
or
jo
push
mov
nop
ror
pop
test
push
jo
repnz
push
leave
test
xor
enter
dec
push
arpl
lret
cmp
dec
inc
jno
mov
sar
inc
inc
jmp
fxch
xor
lret
repnz
pop
data16
adc
push
dec
mov
xchg
mov
sbb
inc
fs
je
movsl
stos
push
push
push
add
mov
push
out
push
sub
xor
notl
mov
inc
add
cwtl
leave
data16
int3
lods
lcall
int
lret
out
xchg
push
hlt
adc
adc
cmp
cli
sub
in
negl
mov
inc
jg
scas
cmp
movsl
or
ficoms
arpl
negb
popa
xor
pop
pushf
adc
sbb
mov
mov
xor
mov
int
loop
into
test
or
inc
test
arpl
mov
pushf
addb
mov
ds
popa
lock
jbe
cmc
imul
fiadds
jnp
outsb
push
add
cli
pop
fistps
xlat
sub
mov
sbb
jb
xchg
leave
lods
xor
rcr
sub
aaa
mov
lock
inc
xor
push
int3
inc
lods
repz
push
stos
fmuls
mov
and
sub
lock
sbb
outsl
jg
in
je
mov
push
shll
out
sub
pop
fstpt
cmc
gs
in
aad
add
cwtl
pop
sub
jo
test
repz
adc
push
nop
jecxz
loope
loop
iret
cmpsl
push
jmp
cmp
adc
mov
in
dec
pop
js
lret
cmp
fadd
or
lret
jbe
xchg
ror
and
and
imul
mov
lds
push
inc
outsl
cmpsl
ds
pop
and
pop
add
push
jle
or
jo
xchg
pop
push
jmp
mov
pushfw
dec
insb
cs
out
jecxz
ficompl
loopne
iret
sbb
pop
test
adc
xchg
mov
les
mov
incl
sahf
pushf
repnz
lcall
mov
pop
cli
mov
sbbb
sub
int
rcll
xchg
pop
das
cmp
out
xchg
push
sti
inc
fidivs
and
arpl
dec
sub
jae
and
cmp
or
aas
push
mov
sub
mov
sbb
mov
outsl
mov
lahf
or
mov
daa
scas
mov
xchg
cmp
add
sahf
cmc
fmuls
std
cmp
popf
sbb
sbb
movsb
sbb
das
lock
inc
fadd
mov
scas
test
add
dec
inc
add
dec
inc
or
fs
lahf
adc
insl
movsb
lods
aas
sbb
mov
mov
pop
imul
mov
mov
cmc
mov
mov
pop
stos
cmpsl
xchg
stos
sbb
test
lahf
jecxz
jg
insb
push
jge
xchg
into
lea
je
sbb
xor
movb
ds
arpl
mov
mov
jbe
push
nop
insb
and
in
cld
and
xchg
into
les
repnz
and
pop
adc
pushl
sbb
and
jnp
aam
adc
pop
sub
adc
fldt
mov
dec
adc
push
repnz
je
adc
test
mov
inc
sbb
lcall
mov
in
jne
or
mov
push
cmp
mov
arpl
sti
fwait
jge
int3
sbb
cmp
mov
rolb
mov
add
lds
dec
add
dec
mov
xchg
adc
push
inc
mov
into
das
dec
popf
adc
mov
sahf
ret
mov
mov
adcb
lea
add
jg
and
xchg
mov
jmp
addb
daa
mov
aad
cmpsb
xchg
int
les
fstpt
xchg
push
push
xchg
add
mov
pop
dec
jg
push
sbb
push
jg
fimull
pop
mov
and
loope
fnstcw
pop
fdiv
icebp
aaa
test
sahf
sbb
mov
loop
lods
add
pop
hlt
cwtl
or
outsl
mov
mov
test
sub
daa
aas
cmp
pop
sarl
stos
xor
jne
or
dec
adc
mov
mov
cs
outsl
in
mov
sbb
test
data16
dec
lods
mov
xorps
push
out
ja
mov
dec
lods
cmp
mov
cmp
js
insb
adc
andb
in
jmp
fcompl
jle
mov
ret
add
cltd
sub
add
dec
xor
lock
lods
and
imul
ss
sbb
loop
ja
imul
fwait
scas
mov
cltd
idivl
or
iret
xchg
fisubs
cmp
sahf
fimull
jg
jecxz
pop
sub
adc
inc
stos
pop
mov
test
shl
pop
mov
add
xchg
sub
jmp
dec
test
pop
mov
test
and
push
add
adc
ss
test
inc
bnd
cwtl
dec
mov
insl
adc
mull
sbb
pushf
es
aad
jecxz
fisttpll
shll
dec
std
lds
mov
xchg
mov
add
cmp
hlt
jnp
test
data16
ss
mov
shrb
sub
popa
mov
ds
jmp
mov
add
movsl
cmc
int3
outsb
cmp
rclb
cwtl
pusha
aas
outsl
sub
ror
push
xchg
cmp
rolb
in
cs
jns
lret
cmp
adc
out
pop
xchg
lret
in
jb
stc
pop
out
sub
pop
mov
mov
adc
sbb
cli
jo
leave
or
iret
push
cld
jno
fwait
mov
dec
test
scas
and
stos
in
or
mov
pop
dec
gs
cmc
mov
jl
mov
jnp
mov
adc
test
sub
rcl
mov
je
dec
adc
jg
add
cmp
mov
sahf
out
orps
xor
ret
fldlg2
cmp
xor
mov
lahf
jg
iret
into
inc
cmp
mov
cmpsl
xor
scas
lods
mov
rcll
dec
or
cli
xchg
add
cmp
addr16
push
bound
pop
push
ret
push
ljmp
jne
sahf
decb
mov
sahf
mov
enter
filds
sub
sub
jg
pop
push
xchg
jl
shrl
stc
jg
data16
mov
int
icebp
sbb
aam
rorl
push
dec
lds
cmp
xor
add
sbb
out
add
add
popf
ret
jae,pt
stos
mov
cltd
rorb
clc
pop
or
jecxz
and
imul
mov
pop
daa
mov
mov
pop
sbb
xor
ret
ficoml
js
test
push
imul
aaa
mov
flds
xlat
cmp
mov
jmp
fildl
jns
cltd
and
xchg
iret
cmpsb
dec
icebp
push
pop
nop
jbe
inc
push
jnp
repz
mov
push
fadd
cwtl
lahf
dec
xor
aaa
mov
inc
cli
int3
mov
insb
cmp
mov
pop
jp
inc
pop
aam
xchg
lret
xor
mov
or
out
sbb
mov
mov
mov
pushl
adc
lret
cs
sbb
fwait
add
adcb
iret
cltd
adc
push
inc
sbb
icebp
js
outsb
fsts
in
jge
std
movsl
jbe
xor
xchg
push
rcl
add
sbb
sub
cmp
into
mov
xchg
mov
ds
xchg
mov
call
cmp
sbb
adc
clc
and
jge
push
push
loope
pop
push
jg
cmp
dec
jb
fsubs
add
push
cmc
jg
lahf
nop
aaa
sbb
mov
jmp
mov
jnp
push
lock
data16
lahf
fadd
mov
iret
adc
test
jmp
sbb
push
sbb
stos
inc
in
out
sbb
lds
stos
jmp
mov
cmpsl
push
out
dec
cmp
add
or
scas
mov
mov
lea
rorb
push
jle
adc
push
mov
mov
ds
jle
sahf
std
push
addb
das
mov
arpl
push
repz
mov
push
sub
mov
jns
jmp
mov
loop
and
dec
mov
inc
push
sbb
scas
into
scas
stos
out
es
fwait
sbb
xchg
or
add
cmc
fsubrs
inc
mov
stos
stc
ret
data16
xchg
xchg
xchg
pop
aam
cmp
fmul
adcl
lea
jg
les
or
loope
or
mov
cmp
sub
or
rcrl
nop
call
mov
out
adc
iret
test
frstor
andl
sub
xchg
inc
mov
stos
lods
sub
lcall
pop
mov
repz
mov
and
pop
cltd
ja
fdivrl
and
stos
subl
inc
mov
ret
pop
aad
mov
push
lret
xor
inc
dec
lret
hlt
add
scas
pop
iret
repnz
xchg
test
push
loop
hlt
pop
fisubrl
je
ja
imul
push
or
push
mov
idivl
iret
dec
sahf
repnz
arpl
jnp
ret
cmp
imulb
mov
cli
test
push
sbb
xchg
out
adc
xchg
mov
outsb
aad
icebp
lahf
sub
mov
repz
lret
gs
fwait
sub
in
fsubs
out
ja
adc
mov
mov
wrmsr
addr16
mov
clc
add
cwtl
sub
stos
dec
pop
out
jo
add
inc
fldcw
mov
push
pop
stos
jno
gs
pop
scas
xchg
dec
jp
xor
out
mov
and
cmp
mov
popf
mov
rcr
fwait
movsb
in
add
cmc
pusha
jge
pop
and
mov
add
mov
adc
shll
mov
sub
mov
jle
sub
leave
pextrw
test
ja
xchg
mov
mov
push
push
sbb
imul
ltr
jg
sbb
jns
dec
or
int3
sahf
mov
icebp
adc
stos
stc
xchg
addb
and
jns
inc
test
ljmp
mov
cmpsb
xorl
cmp
cltd
lahf
int
in
call
dec
sbb
outsb
pop
jb
sarl
pop
fidivrs
fcmovbe
and
cmp
mov
mov
rcrl
jmp
xchg
push
mov
imulb
inc
jp
cmpsl
mov
sub
push
dec
inc
mov
sti
mov
mov
push
inc
cs
addr16
cmp
out
mov
fwait
xorl
inc
out
inc
stos
jb
adc
int
dec
sbb
out
or
sub
adc
xor
inc
fdivs
push
mov
aas
mov
and
mov
inc
lret
insb
pop
sbb
push
xor
mov
sbb
scas
adc
xor
pop
jp
fiadds
pop
sbb
out
mov
es
xchg
mov
gs
push
mov
sarl
pop
aaa
and
lcall
and
push
stos
adc
mov
mov
call
xor
xor
fisubrl
inc
mov
out
mov
jns
push
addr16
bound
subl
add
or
ficompl
dec
ds
mov
cmc
inc
sub
jo
in
add
cmp
aad
cmp
in
mov
les
popf
dec
je
outsl
cmp
outsl
shlb
mov
or
dec
enter
test
mov
insl
adc
adc
addr16
or
add
push
hlt
rcrl
sbb
mov
imul
repnz
inc
ds
shl
xchg
test
rcrb
icebp
mov
cs
or
je
loopne
int
fistpl
outsb
shl
mov
out
mov
popa
loop
mov
shlb
imul
push
add
pushf
adc
cld
insl
adcb
and
sbb
sbb
aad
mov
cmp
mov
xchg
stos
dec
out
xor
jmp
lods
mov
test
sbb
push
or
xlat
pop
jnp
dec
mov
popa
cmp
sbb
fstpl
pop
repnz
mov
xchg
xlat
xor
adc
jge
add
jo
xor
lods
pop
dec
adc
fdiv
pop
adc
add
pusha
dec
loope
cmp
jge
and
push
or
mov
test
cmp
push
push
outsb
test
jo
mov
insb
les
popa
add
notb
pop
out
xchg
mov
push
loop
es
mov
rcrl
loope
add
pop
dec
mov
rcll
stos
out
in
xchg
mov
adcl
fisttps
mov
test
xchg
adc
or
adcl
insl
cli
inc
push
arpl
xor
aam
or
add
pop
and
shrb
pushf
add
lahf
loop
add
jecxz
adc
jbe
and
xlat
mov
in
and
push
outsb
sub
dec
outsl
fs
insb
and
out
jo
xor
insb
lret
and
mov
and
inc
loopne
mov
shll
sub
pop
sub
jl
jne
fistps
adc
fisubrl
add
outsb
jg
pushf
scas
xchg
addl
pop
notl
dec
pop
jp
dec
lcall
scas
mov
sub
add
jecxz
out
add
outsb
sar
fidivrl
jp
cltd
cli
mov
adc
mov
xchg
cmp
js
in
mov
sti
add
adc
xchg
adc
or
imul
pop
loope
lock
sti
inc
jbe
sub
jp
mov
inc
mov
inc
add
xchg
out
cmpsb
testb
ljmp
lcall
iret
mov
xor
cmc
cmp
popa
in
adc
mov
cmp
sub
mov
fsubrs
bound
cld
add
cmpsl
add
push
jnp
adc
mov
pop
movsb
cmp
xor
stc
xchg
xchg
lods
jb
pop
mov
dec
xor
xchg
out
insl
push
cwtl
clc
mov
imul
stos
dec
jge
lods
ljmp
inc
cmp
testl
int
stos
lds
sti
and
push
cmp
jo
mov
sub
adc
test
jns
mov
xor
in
stc
dec
bound
int
icebp
xchg
cld
fsubr
cmp
aaa
dec
gs
push
mov
xchg
sbb
push
ljmp
cmp
loope
enter
icebp
jne
mov
sbb
xor
xor
xchg
pop
push
dec
shr
cmp
add
daa
xchg
pusha
lahf
jecxz
add
mov
aam
shl
imul
sbb
les
push
jge
cli
sahf
enter
mov
pop
dec
add
dec
xchg
mov
call
and
faddl
ljmp
sub
outsb
int
pop
cmovl
pop
cmc
arpl
dec
gs
pop
pop
cmpsl
add
jno
les
cs
popa
out
inc
xchg
scas
lods
popf
lret
xor
jmp
mov
xchg
xchg
fimull
icebp
jecxz
js
iret
sahf
mov
ror
aad
enter
mov
cmp
cmp
addr16
mov
cmpl
mov
jne
inc
inc
dec
pop
inc
pop
jg
mov
lahf
test
movsb
jnp
fwait
xchg
test
xchg
jns
push
into
je
push
and
sub
mov
aaa
lahf
lret
cltd
stos
adc
push
push
leave
insl
adc
sub
mov
pop
adcl
sar
xor
ret
mov
jle
pop
insb
addr16
pop
mov
and
lds
repnz
cld
pop
sub
jmp
mov
mov
xchg
dec
jns
fisubrs
mov
dec
mov
mov
ljmp
cmp
into
jnp
insb
mov
bound
jns
lock
fwait
pop
test
inc
and
push
dec
es
insb
pop
jp
fcoms
mov
adc
sub
push
cmpb
jmp
fisubs
les
push
xor
stos
dec
movsl
test
mov
or
rorb
mov
cmp
decl
rcl
jmp
pushf
mov
popf
outsl
sti
out
icebp
xchg
jb
add
push
fwait
sbb
adc
xor
test
imul
enter
mov
in
out
push
movsl
in
pop
and
cmpsl
fnstenv
aad
xchg
sti
mov
sub
xchg
or
pop
mov
mov
lret
lahf
xchg
adc
or
lret
int3
mov
fisubs
pop
in
dec
jp
pop
add
test
enter
outsb
das
aas
pop
in
mov
loop
bound
lfs
dec
cmp
push
sub
inc
clc
cmp
int
push
and
xchg
jl
aad
inc
shll
adc
xlat
lods
into
je
imul
lahf
sub
insb
mov
ljmp
ljmp
js
push
lods
dec
inc
mov
or
push
dec
xor
lret
je
dec
cld
add
inc
rorb
daa
xchg
ja
sub
mov
or
mov
cmpsl
add
cmpl
nop
xchg
int3
fs
adc
pop
pusha
jecxz
ret
cmp
sbb
cld
mov
add
fs
int3
outsb
sub
jns
jns
and
lea
jle
setno
inc
addr16
mov
outsl
ret
xor
icebp
mov
popf
xchg
sbb
mov
cmpsl
and
mov
jmp
mov
push
mov
aad
add
and
ret
push
push
cltd
sub
cmpsl
shl
aas
test
loope
mov
jle
jmp
xorl
sub
jg
sbb
mov
test
pushf
das
pop
mov
rorb
inc
or
fisubs
pushf
push
out
lret
push
push
outsl
dec
jne
popa
popf
les
dec
and
mov
push
fldenv
out
lods
ljmp
sti
jecxz
push
mov
adc
in
pop
fstpl
out
jns
mov
arpl
inc
ffreep
xchg
in
outsb
pushf
shrb
mov
mov
insb
daa
inc
lods
fidivrl
xchg
iret
jmp
sub
aad
clc
out
movsb
xor
mov
dec
lret
ret
sbb
test
out
adc
fwait
xor
mov
out
push
cmc
mov
pushf
jnp
fwait
mov
repnz
or
popf
jbe
or
mov
sti
loope
cmp
fstl
mov
push
and
pextrw
inc
or
adc
dec
jecxz
shlb
mov
test
push
pusha
lret
jmp
lahf
in
andl
adc
sub
cmpsb
push
bound
adc
push
dec
imul
or
fldl
cmc
jns
sti
sub
dec
aaa
mov
jbe
int3
mov
daa
jb
add
and
pop
xchg
push
mov
lret
push
pop
add
rorl
xor
cltd
or
push
lds
sbb
call
imul
mov
ds
cmp
gs
fdivrl
add
ds
jle
pop
jp
push
jno
ss
xchg
cmpsl
or
fwait
sub
add
mov
stc
insl
lcall
xor
scas
mov
mov
lds
pushf
in
cmpsb
inc
push
idiv
das
pop
adc
scas
dec
dec
cmc
adc
pop
dec
pop
das
das
stos
or
fcompl
outsb
dec
frstor
dec
and
shll
push
xor
aad
ret
push
inc
jb
push
mov
mov
dec
jmp
inc
adc
pop
repnz
pop
xor
mov
popf
aas
out
and
mov
or
ljmp
inc
push
adc
call
mov
xchg
mov
mov
out
or
add
xor
dec
std
int
sbb
lcall
and
ret
repz
loop
cld
cmp
adc
stc
mov
xor
cmpsb
jl
shll
inc
cmc
ss
setae
imul
xchg
push
loop
push
pop
push
add
into
mov
test
out
in
pop
push
movsl
lret
cmp
lods
int
cmp
lret
or
xor
fsubrl
testb
aas
sub
je
push
outsl
movsl
adc
pusha
scas
mov
cmp
jnp
xlat
pop
mov
pop
inc
int3
push
bound
test
lret
mov
dec
fwait
pop
xor
loopnew
clc
cs
sub
ss
adc
fwait
into
iret
jp
cmp
jmp
mov
dec
add
dec
xchg
dec
in
push
scas
dec
jno
push
push
das
aaa
sahf
jno
mov
fisubl
sbbb
ret
das
push
inc
ja
fwait
ja
sahf
jg
fldcw
shll
aas
imul
xchg
jle
mov
xchg
pop
inc
sub
push
addr16
aam
mov
and
cmp
add
push
cld
sub
sub
mov
jb
filds
aam
pop
ffree
ja
in
adc
icebp
and
mov
daa
hlt
fsubrl
incl
push
jno
jmp
or
nop
and
fwait
mov
cmpsb
push
jmp
push
leave
stos
adc
xor
cmp
push
fisttpll
fisubrs
sub
mov
dec
xor
das
or
ret
dec
xor
jmp
mov
sub
pop
cwtl
mov
aas
ljmp
in
shrl
mov
fimuls
rorl
data16
insl
xchg
js
movaps
add
dec
ljmp
subl
imul
into
sbb
push
xchg
push
push
stos
mov
ds
cli
aas
outsb
or
push
push
xor
rolb
je
fdivr
dec
jnp
daa
imul
test
or
pop
pop
jge
add
pop
adc
scas
mov
out
call
mov
adc
xor
jle
addl
jnp
xor
xor
push
sarb
and
jne
push
repnz
mov
xor
pop
sbb
aam
ret
cmp
xchg
bound
orb
push
fwait
arpl
sahf
mov
or
into
leave
jnp
xor
loopne
aas
push
dec
fdiv
xchg
out
cmp
mov
mov
imul
sub
imul
add
pop
add
push
loopne
fiadds
das
cli
andb
fidivrl
sbb
aas
das
lock
mov
iret
enter
sbbb
jne
dec
push
fsubs
cmp
je
mov
lcall
or
or
xchg
ljmp
push
loopne
into
outsl
rcrl
jbe
fstps
push
jmp
ds
loopne
inc
xor
out
or
in
mov
dec
pop
dec
movsl
jg
mov
ss
jg
in
repnz
subl
orb
jne
push
jbe
lds
inc
pushf
sbb
cwtl
push
xor
push
repnz
lds
test
out
sub
sti
fistpl
test
insb
mov
fsubrl
add
loop
loope
in
out
lods
cs
xchg
aam
in
rorb
xchg
mov
out
sti
mov
sub
adc
pop
scas
push
push
cmp
popf
jge
add
and
aaa
push
mov
pushf
jl
jp
adc
stos
ror
fwait
cmpb
jle
stc
subl
xor
sbb
mov
testl
jnp
or
inc
jno
sub
nop
mov
repnz
jp
outsb
je
sti
out
ds
cmpsl
shlb
push
mov
imul
or
pop
shl
cmpb
pop
pop
pusha
sahf
sbb
mov
push
shlb
xor
pop
mov
fwait
sbb
test
shlb
outsl
pop
repnz
cmpsl
inc
call
das
cli
call
jecxz
sti
shll
jmp
jle
push
insb
pop
clc
xor
xchg
push
mov
mov
jecxz
fwait
xchg
push
sarb
cli
mov
sub
add
cmpb
jno
rolb
bound
push
cmpsl
sub
mov
push
shrl
add
sbb
test
add
rcrb
adcl
mov
clc
push
or
insl
cmp
add
lock
dec
mov
imul
cld
jo
iret
popl
test
adc
test
sahf
push
cwtl
lock
pop
scas
lods
leave
lahf
jbe
push
enter
xor
in
sub
jge
daa
xlat
enter
or
inc
sub
je
mov
cs
xor
shlb
xchg
out
cld
out
add
orb
shlb
outsb
jp
bndstx
fwait
sub
fisubrl
cwtl
inc
in
add
jecxz
mov
ljmp
push
xchg
outsb
dec
or
mov
cmpsb
and
jge
rcll
fidivrl
in
add
jno
jp
cmp
jne
int3
movsl
inc
loope
sbb
out
and
aaa
or
and
adc
pop
inc
mov
subl
inc
insb
out
orb
jne
in
or
adc
stos
dec
pop
lret
jmp
js
pop
stos
mov
cmpl
outsl
cmpsl
cmpb
inc
push
pop
sti
ds
daa
fcomps
pop
add
std
test
pop
in
mov
jb
pop
inc
ficompl
mov
adc
cmp
imul
jo
mov
push
insb
pop
ret
call
mov
jmp
mov
cli
xchg
pushf
fisttpl
outsl
aaa
push
jbe
sub
fists
adc
dec
pushf
xchg
add
inc
or
sbb
xchg
lock
dec
adc
movsb
loopne
sub
xchg
cld
mov
int
mov
pop
xchg
xchg
sbb
mov
in
dec
or
rclb
sub
cs
adc
pop
lods
xchg
lds
js
test
and
add
and
movsl
pop
lret
gs
repz
les
mov
daa
leave
fstl
jmp
clc
mov
adc
mov
sbb
std
adc
ss
rolb
stos
out
enter
mov
dec
cmp
hlt
mov
fwait
sub
push
call
adc
pop
and
xchg
in
ljmp
push
push
ret
xlat
mov
adc
mov
push
xlat
mov
lcall
loope
jbe
inc
cmp
push
pop
push
jbe
and
in
je
psllq
out
adc
outsl
fmuls
in
push
clc
lahf
lea
insb
mov
inc
push
mulb
incl
sub
lods
and
adc
mov
rorl
mov
enter
sbb
std
mov
inc
clc
xor
stos
lret
pop
pop
adc
fimull
inc
inc
call
adc
jmp
ja
fisttps
ret
pop
mov
inc
mov
cmc
push
clc
fmul
inc
ds
mov
nop
jae
xor
pop
mov
sahf
int3
int3
mov
pop
sbb
cmpsb
popa
or
push
out
test
push
mov
psubusb
push
pop
cmp
lret
int
insb
sahf
mov
xchg
xchg
stos
dec
out
filds
bound
cmp
mov
mov
aam
iret
add
jne
cs
ret
or
adc
stos
cli
push
out
insl
inc
lcall
xchg
xor
dec
pop
mov
push
lock
push
pop
mov
or
cmp
jle
lock
and
pop
lock
mov
js
fistl
mov
in
push
or
gs
dec
lahf
aas
sbb
mov
sti
xchg
jl
mov
insb
jecxz
mov
cmp
push
sub
insl
lcall
rcr
and
mov
into
sub
mov
in
push
fsubl
in
xor
insb
cmpsb
or
and
mov
pop
idiv
je
mov
gs
lahf
fxtract
sti
rolb
mov
xlat
les
mov
inc
call
adc
movsl
inc
es
lret
cmp
jnp
dec
inc
jne
out
ja
loopne
iret
jp
or
iret
adc
cmp
ret
adcb
test
jbe
ja
pop
loop
or
bound
dec
adcb
inc
jmp
movsb
dec
mov
xchg
mov
push
add
dec
fiaddl
fwait
cs
aad
fistpll
push
fbstp
mov
fnstenv
test
lahf
icebp
sti
into
fwait
inc
out
mov
out
mov
scas
movsl
hlt
or
mov
xor
fnstenv
js
jmp
jmp
push
je
icebp
mov
imul
xor
inc
lods
mov
xor
paddsw
fiaddl
or
push
jmp
mov
lea
es
imul
clc
sbb
imul
fistpl
in
push
inc
inc
dec
test
xor
mov
pusha
repz
adc
push
push
xor
int3
jnp
sub
js
xchg
dec
add
fdivs
and
sbb
inc
or
dec
mov
mov
ja
adc
sub
aam
jns
into
stos
in
push
enter
push
inc
cmpsl
fs
xchg
jmp
cs
out
add
rcll
icebp
cltd
push
pop
mov
stos
adc
dec
xor
xor
add
inc
lea
outsb
cs
push
imul
movsb
adcl
in
mov
sub
adcl
imul
stc
fcmovb
movsl
jl
stos
xchg
in
ret
push
mov
mov
push
xor
jge
pop
lret
pusha
notb
mov
push
icebp
sub
pop
ds
movsb
shlb
cmp
aad
lret
mov
cmpsb
jae
dec
in
mov
rcl
ret
fwait
outsb
adc
mov
bound
push
adc
test
pop
pop
movl
sbb
ds
or
iret
xor
mov
stos
js
adc
jb
into
mov
ret
xchg
sbb
flds
and
cvtps2pi
cwtl
outsl
dec
popf
ffreep
lahf
pop
push
push
xchg
push
mov
xor
cmp
jge
repnz
rorb
adc
sarb
enter
pop
das
mov
lret
jnp
xor
aam
inc
push
dec
ljmp
data16
dec
dec
jno
mov
sbbl
pushf
in
xor
sub
and
addr16
testb
pop
movsb
addb
add
out
mov
push
mov
das
fbld
pop
data16
and
mov
je
sbb
mov
mov
dec
sub
in
lret
in
jb
jmp
sub
pop
cmp
test
filds
pop
call
call
jmp
and
ds
sbb
adc
int3
fildll
jp
xchg
adc
and
ss
mov
faddl
lret
dec
lods
sahf
and
inc
xchg
lcall
push
fldl
jmp
jp
jae
scas
leave
sub
dec
jge
adc
lahf
mov
rcr
cmp
xchg
cmp
incb
js
xchg
jo
push
mov
adc
cs
dec
pop
fstpl
dec
popf
mov
ret
stos
mov
sbb
mov
dec
loop
push
ds
mov
scas
and
pop
pop
ret
jg
leave
cmp
sub
and
mov
dec
jg
pop
arpl
shlb
pop
and
out
push
stos
adc
pop
int3
cmc
addl
bnd
inc
cs
xor
ficomps
lock
push
popa
and
stos
mov
mov
aad
cmpsl
xchg
popf
pop
ja
daa
cmc
jnp
std
cmp
adc
inc
je
and
xor
mov
int
jnp
repz
shr
pop
sub
xor
out
into
sub
adc
add
imul
aam
mov
mov
pushf
mov
fsubrl
lods
mov
xorl
jns
or
pop
addb
inc
add
push
loop
fs
nop
cmpsb
lret
fwait
cmp
aas
jnp
inc
repnz
mov
lods
hlt
sarb
daa
int
aad
push
cmpsb
cmp
movsl
fmuls
cmpsb
icebp
jle
jne
xchg
and
mulb
clc
mov
mov
sti
ljmp
pop
dec
inc
sub
add
xchg
xchg
divb
adcb
push
add
pop
ficompl
or
es
pop
lods
and
push
xor
mov
cmp
stos
cld
inc
adc
xchg
ds
in
ficoml
fdivl
or
push
mov
dec
bswap
in
push
pop
jno
pop
and
loope
mov
repnz
imul
aam
xor
dec
inc
aad
test
xor
adc
push
push
insb
xchg
xor
fbstp
fimuls
adc
push
push
into
shll
fnstenv
adc
rcr
xor
movsb
out
and
maxps
xchg
inc
movsb
mov
cld
int3
outsb
cli
dec
std
dec
and
test
dec
arpl
inc
mov
cmpl
jns
lret
cltd
xchg
daa
jb
jmp
in
mov
or
loope
push
loopne
mov
icebp
outsb
lahf
mov
insb
mov
ljmp
adc
mov
mov
push
lods
xlat
jno
jp
and
jle
mov
and
out
adc
push
dec
cmp
fdiv
jge
inc
mov
add
xor
xor
cmp
push
in
add
push
arpl
dec
call
mov
in
pop
add
mov
fcompl
test
bswap
divl
cld
sbb
fs
mov
call
jle
pop
mov
int3
push
ficoms
mov
add
jmp
mov
neg
adc
dec
xor
enter
push
inc
pop
mov
sahf
push
idiv
fiadds
insb
pusha
pop
inc
sbb
out
and
xor
aaa
scas
sbb
mov
lods
sub
push
sub
je,pn
xlat
fxam
lods
in
ja
leave
push
mov
mov
sahf
addr16
sub
aad
inc
inc
fisubs
xchg
and
pop
mov
in
xchg
cmpl
pushf
sbb
daa
jg
test
lock
into
cmp
cld
popf
insl
iret
aaa
call
data16
nop
int
jnp
mov
ret
jle
repnz
dec
push
mov
inc
sub
inc
shl
mov
mulb
les
mov
in
imul
push
ret
leave
jp
aad
jbe
mov
stc
xchg
jl
sbb
scas
cld
movups
adc
lea
je
xor
mov
inc
pop
gs
or
mov
test
fidivrs
mov
enter
mov
aas
fcompl
lahf
and
xchg
fs
imul
mov
sub
and
js
pop
mov
cmpsl
push
sub
aas
mov
nop
sub
mov
stos
sbb
mov
test
adc
push
lahf
aad
icebp
cli
lods
rcrl
fwait
sbb
push
rorl
xchg
orb
roll
pop
stos
lods
imul
sbb
rolb
cs
xlat
mov
mov
push
je
xchg
pop
cld
bound
rcr
mov
dec
sti
mov
in
push
xlat
test
mov
rcll
pushl
cmp
ds
int3
jl
mov
and
xchg
sbb
in
xchg
pop
pop
fwait
out
or
cmp
sub
add
mov
add
mov
lock
ja
shr
inc
add
lods
lcall
out
sti
lods
dec
daa
out
sahf
push
sub
pop
into
mov
mov
mov
lds
movsb
add
xor
fsubrs
pop
push
push
or
pop
aaa
sbb
and
mov
or
call
mov
int3
enter
push
push
addl
jo
pop
inc
mov
mov
add
lds
lods
inc
test
dec
dec
xor
outsb
pop
out
mov
les
pop
test
stos
popf
pop
mov
xor
cld
sbb
lahf
cmpsb
scas
push
not
nop
lahf
xchg
dec
push
inc
sbb
cmp
outsl
pusha
lret
leave
push
mov
cmp
dec
xor
jge,pt
jp
test
scas
fdivp
inc
jp
daa
out
cs
inc
mov
clc
popf
repnz
loope
or
ss
xorb
mov
or
sbbb
imulb
arpl
loope
aas
and
xchg
push
dec
outsb
lret
inc
mov
leave
movsb
mov
popl
ds
mov
mov
mov
scas
std
dec
mov
lret
mov
dec
mov
out
faddl
mov
mov
mov
cmp
adc
pop
mov
jecxz
inc
pop
enter
lahf
add
pushf
add
add
int
sub
les
ds
or
pop
jne
mov
cmp
lods
sub
mov
mov
push
pop
xchg
adc
mov
shl
push
clc
pop
lcall
les
popa
fwait
xor
jno
dec
mov
fsts
lcall
dec
add
jns
dec
add
mov
out
cmp
adc
mov
mov
sbb
mov
lds
or
ss
sub
sbb
and
adc
loopne
scas
imul
sub
xchg
aad
dec
push
testb
adc
xchg
cmp
sub
mov
add
orl
mov
cmp
dec
cmc
sbb
mov
mov
add
je
ljmp
js
add
mov
loopne
xchg
int
mov
out
jmp
xchg
cmp
adc
imul
xchg
and
sub
inc
int
inc
lock
js
packssdw
insl
lock
movsb
push
data16
adc
mov
and
sahf
xor
adc
fsubs
mov
add
cmpsb
sbb
cltd
mov
fistl
adc
ljmp
lods
dec
pusha
pusha
mov
and
lods
es
aaa
cmpsl
or
and
fsubs
iret
jne
and
cmc
ljmp
pop
push
int
cmovl
pusha
xor
mov
movsl
xlat
jno
jg
add
add
testb
xlat
mov
out
fcomps
cmp
lds
pop
pop
sbb
mov
les
nop
shll
cmp
pop
fwait
shll
mov
xchg
fucomp
sub
cmp
adcb
add
push
add
testb
stc
test
clc
push
stc
mov
mov
icebp
test
add
lods
push
mov
and
sub
adc
fstpt
ffree
lea
mov
or
mov
jae
sub
fs
lock
outsb
push
ret
xor
fistl
mov
push
in
pop
iret
bound
xchg
pop
dec
and
inc
add
shll
enter
mov
ficompl
jns
lods
jp
sub
sbb
scas
test
int
mov
ret
xlat
dec
jb
idivl
insl
mov
dec
adc
mov
ds
stc
rsm
cmpb
xlat
xor
mov
mov
sbb
ret
aam
mov
aad
psrlw
orl
xchg
imul
sub
lods
lret
dec
jp
cmpb
hlt
out
xor
outsl
mov
out
mov
insl
cmp
call
movsl
mov
sbb
nop
stc
dec
jnp
loop
inc
testb
out
stc
xchg
xchg
push
lock
push
mov
imul
sbb
inc
push
jecxz
sbb
xor
jb
fsubs
mov
pop
popa
dec
mov
jmp
mov
mov
push
cs
cmp
data16
sub
in
enter
push
loopne
fcmovu
pop
imul
adc
sarb
add
fwait
pop
cmp
mov
sub
pop
pop
loop
int
lods
dec
mov
xlat
xchg
and
lock
aad
ja
sub
sbb
sbb
xlat
ficoml
and
test
mov
add
push
repz
fadds
mov
push
fstpl
mov
cmp
subb
cli
add
jp
push
ror
adc
mov
decb
mov
mov
pop
jne
mov
mov
adc
adc
lret
scas
sub
or
mov
cld
shrd
loopne
movb
insb
xchg
in
jmp
mov
mov
jp
stos
in
call
mov
sbb
nop
shr
pusha
fsqrt
daa
int3
or
out
mov
fdiv
aas
adc
faddl
jp
cwtl
cltd
add
aaa
fidivrl
dec
pop
cltd
out
rolb
inc
sbb
orl
jge
inc
loop
add
jge
call
pop
adc
pop
cmp
cmp
gs
lahf
mov
imul
add
arpl
daa
fsubl
xchg
lcall
cmc
cmpsl
int
cmpsl
jnp
mov
add
ret
idivl
scas
jmp
add
out
js
and
xchg
xor
mov
push
xchg
adc
push
or
faddl
inc
mov
cmc
clc
adc
cmp
fwait
sti
jbe
int3
jmp
movsl
stc
imul
xchg
or
test
addr16
or
imul
pop
imul
adc
insl
mov
dec
mov
add
jno
jge
push
lock
mov
pop
cltd
add
popa
movsb
push
icebp
sbb
jmp
les
pop
mov
clc
add
sti
outsl
push
xor
jb
sahf
inc
imul
jg
cmc
stc
int
xchg
dec
int
jne
and
add
shlb
fdivrs
sbb
notl
lret
mov
stos
loop
sar
repnz
sbb
pop
xchg
imul
mov
mov
loope
inc
in
add
or
adc
addr16
inc
inc
or
jns
ret
mov
dec
jnp
sub
hlt
mov
dec
mov
xor
push
nop
fdivl
orb
mov
pop
fwait
jno
mov
mov
push
repnz
mov
in
adc
mov
mov
movsl
pushf
arpl
pop
sub
stc
mov
lds
mov
dec
in
jnp
jg
pop
outsl
ja
fnstenv
sub
pop
pop
and
adc
sbb
xchg
inc
fildll
and
js
or
ljmp
hlt
int
clc
popf
sbb
push
in
mov
sbb
into
mov
shrb
sub
sbb
dec
mov
test
inc
fwait
lods
cmc
mov
addb
pop
fstps
sti
add
and
and
scas
int
xchg
mov
sti
or
jg
daa
fs
fisttpll
rolb
dec
pop
cmp
popa
sub
cmpsb
mov
sahf
mov
rolb
adc
clc
push
mov
ja
lret
and
scas
pop
test
outsb
cmp
add
inc
aas
shlb
loop
push
mov
push
mov
xor
jbe
pop
sub
sbb
call
pop
jp
and
lcall
xchg
popa
and
inc
jg
push
repnz
call
xchg
rcrb
sarl
mov
icebp
cli
cmp
dec
aas
jp
xchg
mov
ret
pop
lods
insl
ljmp
and
xchg
test
jp
cmpb
fucomip
fs
xor
and
rcrl
or
hlt
and
pop
push
sti
loop
je
sbb
add
scas
pop
xor
add
cmp
mov
lods
lahf
in
pop
int
out
aad
cmp
sbbb
ja
test
or
movsl
push
xchg
test
mov
add
xor
lret
pop
dec
ja
lcall
jg
movsb
test
mov
sbb
sub
mov
inc
shrl
jno
lods
ss
ss
bound
push
xchg
sbb
cmp
push
test
sub
mov
dec
fnstsw
cmp
rorb
out
add
push
mov
ret
imul
lea
iret
dec
sti
xor
pushf
loopne
add
lret
xchg
jge
push
cmp
inc
icebp
sbb
call
xchg
or
int3
xchg
sbb
ja
in
pop
out
roll
enter
ljmp
inc
fadd
hlt
and
ja
enter
xchg
js
cli
pushf
jp
loopne
repz
sbb
mov
jmp
out
jmp
cmp
loop
lret
mov
jnp
arpl
cmp
out
cld
out
fs
pop
jle
and
mov
xor
mov
push
inc
add
jge
or
mov
push
bound
jg
stos
inc
jle
jo
jp
dec
mov
popa
das
shrl
cmp
nop
fwait
xorb
std
xchg
arpl
ror
nop
rcll
cwtl
shr
pop
into
jo
in
or
dec
jae
sbb
outsb
mov
push
jge
rol
lcall
inc
adc
or
push
sbb
xor
sbb
jge
enter
ja
adc
dec
push
ljmp
push
add
test
and
xchg
mov
sub
inc
cmpsb
mov
loope
xor
push
test
out
sbbl
and
dec
push
dec
jno
sub
repnz
orb
xchg
loopne
aaa
xchg
adc
cmp
push
add
xchg
in
lcall
push
mov
jo
loopne
sbbb
lea
pop
mov
adc
aad
cmp
imulb
stc
adc
and
sub
jl
pop
aaa
jge
dec
rorl
das
lock
pop
divl
or
or
add
test
mov
push
mov
xchg
pop
cmp
inc
jl
outsb
bnd
out
mov
cmp
xchg
pop
fisubs
mov
lret
inc
or
scas
test
inc
js
add
xchg
mov
fcom
dec
test
sbb
ds
test
mov
jp
mov
daa
cmp
dec
ds
sbb
mov
inc
sbb
or
and
stc
sbb
xor
ret
add
sub
imul
lods
mov
in
das
add
sub
scas
in
dec
test
mov
jge
ret
mov
xor
mov
xchg
test
insl
xchg
es
lock
adc
stos
movsb
xchg
push
dec
in
pop
loop
test
lcall
push
rcll
lret
mov
outsl
or
cs
sbb
xor
fsubrs
jmp
gs
mov
pop
cmp
orl
adc
lret
out
sahf
lret
aaa
bound
sbb
pop
and
xor
or
cwtl
sub
or
int
cltd
or
jecxz
or
jb
or
sbb
mov
and
mov
mov
pop
jmp
aaa
add
cld
lea
xor
jmp
insl
es
mov
jg
in
sbb
ficompl
xor
lcall
cmp
dec
rolb
add
cmp
pop
mov
repz
adc
cs
aad
pop
imul
mov
mov
orl
cmc
jmp
pop
xchg
mov
mov
leave
mov
adc
mov
into
jmp
cmc
mov
add
jle
mov
xchg
fcompl
popf
pop
jb
test
out
cmpsb
xchg
fadds
mov
sbb
addl
push
fdivs
popa
push
sbb
ds
mov
lods
dec
mov
lods
or
jne
and
mov
orl
fucomip
pushf
xchg
scas
sbb
jl
loop
test
test
mov
dec
dec
scas
hlt
push
roll
sbb
jle
inc
push
inc
sbb
pop
push
xchg
shll
lods
push
xor
or
add
divb
fidivl
and
shll
dec
inc
or
xor
aas
mov
rol
loop
xchg
das
mov
adc
mov
fwait
push
test
pop
push
pushf
loop
pop
jl
fld
repz
pusha
test
push
jnp
icebp
xor
stos
arpl
pop
mov
pop
adc
inc
cs
jnp
cs
mov
out
dec
xchg
cs
shlb
lcall
cmp
fadds
je
xor
ds
push
inc
dec
push
mov
fcomps
xchg
sbb
pop
fs
xchg
sbb
daa
push
inc
ljmp
pop
or
push
sub
lahf
xor
lea
in
aaa
pmaddwd
je
mov
cmp
cltd
jmp
push
cmp
and
inc
les
jb
jecxz
push
orb
inc
inc
xchg
je
int3
mov
sbb
jle
fcoml
jge
in
in
sbb
pop
fnsave
sbb
mov
into
pop
inc
xor
fildl
dec
js
cmp
jb
sub
out
ss
in
dec
mov
pop
subb
cmp
mov
add
push
sub
lcall
sub
cmpsb
notb
mov
popf
bound
cli
fnstcw
bound
and
hlt
shrb
mov
mov
dec
adcl
popa
xlat
test
xchg
xchg
gs
push
lcall
sub
out
and
add
mov
push
ja
mov
cmp
xchg
cmp
sub
push
mov
or
xchg
sbb
mov
out
andl
xchg
insb
addr16
lea
aam
sub
lea
and
xlat
cmc
sub
adc
movsl
popf
inc
push
xor
cmpsb
jb
inc
or
mov
pushf
call
xchg
out
dec
push
pop
and
mov
bound
mov
lahf
jae
outsl
iret
popa
pusha
and
sbb
inc
mov
sbb
or
add
add
dec
push
mov
fbld
es
pop
add
and
mov
fprem
inc
mov
inc
call
in
sbb
mov
data16
add
cmp
mov
and
mov
jl
imul
daa
sbb
or
mov
dec
lcall
xchg
push
mov
iret
cld
ljmp
jbe
cmp
xchg
movb
andb
test
or
mov
mov
push
jmp
dec
xor
or
mov
scas
add
mov
in
push
flds
fsubrs
inc
hlt
cmp
add
idivb
xchg
pushf
out
and
dec
or
stc
shll
andl
mov
jmp
jns
aas
dec
loope
and
and
mov
incl
push
into
dec
outsl
insl
into
mov
sbb
int3
ret
lret
xchg
lock
inc
test
dec
push
inc
xchg
pop
cmc
add
adc
xchg
mov
sbb
jg
pop
shrb
popf
testb
and
movsl
fcmovbe
jo
jae
push
es
sarl
or
fidivs
sbb
in
shl
push
xchg
mov
lahf
in
and
lods
decb
pusha
dec
bound
cltd
cltd
hlt
inc
jnp
pop
insb
aas
add
dec
jno
ljmp
sbb
imul
int3
dec
lea
push
jae
jnp
rol
jne
movsb
ficoml
test
dec
mov
pop
fxch
dec
inc
gs
repnz
js
mov
push
push
ret
int
fsts
inc
push
xchg
jb
push
lret
mov
lods
lahf
xor
adc
mov
or
adc
in
popf
das
jno
repnz
in
sub
jecxz
test
pop
popf
pop
add
push
dec
mov
dec
jmp
ss
out
add
or
dec
popa
adc
fldt
stos
add
push
xor
lcall
pop
dec
mov
mov
test
xchg
adc
jb
mov
addb
shll
xchg
xchg
sub
push
sub
and
cli
jb
sub
add
call
popa
outsl
jmp
push
xchg
aaa
std
movsb
lea
cmp
shlb
jb
inc
add
fs
sub
xor
sahf
sbb
adc
das
dec
xchg
xchg
xchg
dec
into
cmpl
pop
dec
or
sti
jmp
dec
icebp
jg
mov
jle
loopne
cmp
dec
pop
jg
jbe
adc
and
cmc
sbb
mov
jecxz
aaa
pop
sbb
jl
in
pop
ss
cli
fucom
int
pop
dec
inc
push
xor
xchg
xlat
pusha
sarl
pushf
xchg
cmpsl
dec
pop
pop
xchg
push
test
scas
shll
cmp
and
mov
dec
mov
adc
xor
xlat
cmpb
arpl
dec
dec
cli
mov
rcll
mov
hlt
add
aad
jns
xchg
fstps
sub
rcl
mov
jmp
mov
leave
cmp
jnp
fmul
lods
bound
inc
fcompl
stos
add
je
lods
sti
push
insl
movsb
test
mov
pushl
mov
dec
mov
jno
lods
mov
inc
inc
lea
enter
cmp
lods
fildl
push
cmp
pop
xchg
add
inc
push
push
das
pop
movsb
outsb
mov
cmpsb
mov
and
cmp
push
repnz
or
sbb
dec
and
shll
loopne
mov
inc
xor
lahf
ffreep
aam
or
outsb
out
push
repz
iret
jbe
cmp
sub
pop
jle
inc
gs
test
cmp
ja
jns
lcall
bound
jae
popf
jp
cmp
into
stos
dec
pop
adcl
outsb
adc
or
clc
lea
mov
les
mov
insl
push
adc
or
ja
in
adc
pop
inc
fcompl
and
inc
or
popf
and
fisubl
ret
fdivrl
adc
and
ljmp
dec
or
cmp
jno
sub
xchg
pop
ljmp
rclb
fcomi
lods
test
dec
dec
xchg
lea
cmpsb
xchg
dec
test
cmc
enter
fstl
add
mov
mov
xor
mov
call
xorb
shrl
pusha
xor
fwait
mov
je
mov
iret
in
adc
xor
jns
adc
hlt
push
inc
add
and
sahf
mov
pusha
cmp
inc
lock
jae
dec
mov
xchg
test
sub
and
mov
call
es
fsts
lods
cwtl
lods
cli
loope
push
pusha
add
aad
mov
cs
jecxz
mov
or
xchg
add
sbb
jnp
leave
sub
and
nop
imul
jnp
mov
mov
sub
fnsave
cmp
leave
jno
leave
pop
and
mov
sarb
mov
mov
outsb
out
mov
sub
divb
cli
sbb
leave
sub
and
and
push
sub
sub
sbb
sub
out
cld
divb
test
add
jnp
ret
lds
lods
andl
clc
ds
lret
lock
test
addr16
pop
inc
mov
jnp
movsb
mov
repnz
mov
lock
mov
xor
add
mov
out
lock
xchg
push
mov
outsb
and
xchg
dec
cli
ja
lock
insb
mov
dec
int3
iret
cmp
scas
dec
xor
adc
mov
sahf
jmp
add
orb
in
lock
les
mov
in
cpuid
sub
loop
inc
sub
lods
insl
dec
mov
jb
in
mov
add
loope
and
pusha
mov
mov
scas
lods
lcall
cvtps2pd
jp
in
jno
rorl
lds
std
jb
in
and
je
sub
ret
sbb
mov
cmpsl
jp
xchg
or
aas
mov
mov
filds
add
mov
mov
shl
in
testl
xor
push
or
sbb
mov
pop
inc
test
dec
pop
push
dec
jnp
lock
sub
or
mov
push
sub
int3
add
jno
push
subb
imul
dec
xchg
push
mov
and
pop
gs
inc
pushf
adc
dec
cltd
testl
test
stos
cld
test
or
fldl
lock
lret
and
insl
adc
inc
iret
dec
pop
gs
lcall
in
dec
xor
movsl
jecxz
adc
testl
pop
scas
push
aad
idiv
loope
mov
out
jae
dec
sbbb
xor
mov
and
sub
dec
icebp
dec
sbb
xor
pop
dec
xchg
or
jecxz
loopne
lock
lock
sbb
fsubrs
jmp
and
fisttpl
or
inc
and
les
mov
push
mov
mov
adc
add
cmp
adc
jmp
jmp
push
popw
scas
fs
jae
lds
icebp
xchg
gs
push
stc
mov
shrl
cld
inc
hlt
setg
push
sub
int
and
or
cmp
xor
outsl
stc
xchg
xlat
mov
jns
jb
or
imul
or
outsl
sarl
pop
fxch
or
push
incl
xchg
fists
es
aas
sub
pop
and
adc
mov
or
jnp
fmul
cmp
insb
jge
pop
fstps
cmp
sub
and
push
rolb
add
enter
xchg
aaa
push
inc
sar
test
clc
out
add
jae
test
cwtl
cmc
icebp
test
xor
pop
stos
jg
dec
jns
push
and
sub
cmp
pop
loopne
pop
mov
int3
cmpb
pushf
sub
mov
adc
xchg
imul
dec
repz
in
shlb
fiaddl
inc
int
popa
jle
lods
into
cmpl
mov
sbb
aas
mov
sbbl
fcmovnb
ficoms
das
mov
movsl
fdivl
fidivrs
and
fxch
push
mov
popa
add
xchg
or
push
sub
fimull
in
and
add
mov
mov
test
mov
xor
mov
sub
pop
fdiv
pop
movsb
outsb
pushf
xchg
push
les
or
in
pop
jno
sti
inc
movsl
sbb
movsl
cmpsl
inc
popa
mov
xchg
iret
inc
xchg
fs
ss
push
mov
push
sbb
mov
arpl
dec
pop
push
out
sti
arpl
sbb
in
aad
xchg
mov
sub
les
mull
enter
mov
insl
psrlq
mov
mov
cli
mov
jns
lock
push
push
mov
mov
fsubl
add
mov
sarb
call
lcall
leave
lods
jle
and
xchg
push
xor
std
push
lret
lahf
sbb
cld
ret
jno
jle
sbb
push
es
int
jo
dec
pusha
movsl
push
dec
into
and
stc
in
jae
cwtl
cwtl
movsb
scas
ljmp
push
inc
lock
repz
out
push
ljmp
inc
out
notb
add
dec
outsl
aaa
cmp
jns
pop
fisubrs
lods
sub
iret
lahf
dec
mull
lock
fs
push
and
cltd
sub
js
rcr
sysexit
cmpsb
xlat
mov
mov
sti
push
pop
push
daa
inc
pushf
pop
iret
mov
ljmp
lock
jns
and
or
test
mov
and
fwait
mov
xchg
mov
or
out
push
int3
or
out
dec
cltd
shrl
cli
ds
and
adc
push
sub
dec
inc
and
decb
add
fwait
xchg
fidivrs
stos
mov
sub
test
mov
inc
imul
nop
push
mov
fidivs
decb
jnp
inc
sbb
mov
xchg
cwtl
jbe
add
arpl
fadds
gs
xchg
jno
pusha
lahf
in
and
cmp
fbstp
in
cmp
popf
jno
push
lcall
cmp
sub
mov
mov
std
out
jns
jb
xor
fstpt
xchg
pop
mov
push
repz
movsb
mov
jle
lcall
pusha
shll
add
in
inc
jge
sub
xor
jnp
jge
lret
out
outsb
movsl
mov
divl
sbb
movsl
dec
or
xor
dec
xchg
shlb
repnz
test
arpl
inc
or
push
and
pop
pop
sub
es
stc
mov
mov
jne
fnsave
add
inc
cmpsb
mov
push
jl
cli
in
mov
dec
mov
jecxz
sbb
mov
fxch
mov
dec
pushf
rol
jae
stos
movsl
adc
push
loope
mov
add
out
popf
pop
into
inc
sbb
rolb
cmpsl
mov
adc
and
mov
or
ret
imul
orb
insl
pop
out
out
out
jle
mov
adc
aaa
repz
or
outsb
cwtl
xor
xorl
mov
hlt
gs
inc
mov
wbinvd
lock
insb
lret
jmp
les
xchg
mov
pop
xchg
sahf
adc
jmp
xchg
out
jne
neg
repnz
jo
push
xor
lock
push
xor
stos
or
xchg
dec
dec
cmc
aas
sub
rcrl
lahf
outsb
out
add
fdivs
xchg
mov
in
lahf
and
xor
adc
das
push
rorb
push
cmc
cmc
and
jae
xchg
cld
call
cmp
imul
pop
pop
inc
jns
mov
loope
or
pop
nopl
cld
shrl
xchg
pop
xor
out
test
fs
sbb
dec
rcrb
mov
xchg
repz
loopne
cli
lea
or
lods
adc
gs
push
mov
call
push
sahf
out
loopne
pop
aaa
int
dec
push
mov
lret
and
insl
in
jbe
inc
mull
mov
push
into
pop
and
xchg
test
pop
pusha
xor
inc
clc
pop
push
sub
pop
js
callw
push
mov
loope
pop
std
jg
cld
jmp
pop
inc
sahf
lret
and
xchg
popf
test
jmp
sub
ja
call
mov
fs
cmp
and
test
xchg
xchg
subb
lcall
cli
shll
es
or
ret
sub
int3
sub
jmp
in
es
fsubrp
jl
ret
sti
das
adc
mov
push
cmp
sbb
add
or
xchg
icebp
fists
xorb
clc
xchg
out
insl
push
cmc
iret
mov
rcl
cmp
push
jmp
cmp
mov
je
xchg
mov
and
ljmp
fisttps
xor
dec
lods
dec
cmc
xchg
shlb
sbb
inc
call
jle
or
mov
movsl
sub
adc
lahf
aaa
mov
jne
outsb
mov
cs
ja
add
push
xor
lock
push
pop
push
fstpl
and
or
mov
inc
in
sub
xorb
sub
cmp
xor
negl
mov
fstl
sub
mov
popf
jae
rep
into
rcl
cli
lds
jl
add
fwait
or
adc
mov
movsl
inc
aam
incb
xchg
fdivl
cmc
lods
add
aad
push
adc
les
sub
adc
push
mov
lahf
xchg
call
fidivrl
jmp
out
les
subb
lret
fldt
and
xchg
rolb
out
cwtl
dec
jge
push
ficoml
mov
out
rcrb
mov
mov
xor
pop
aas
nop
sbb
sub
outsb
aas
int
or
pop
test
data16
mov
fnstsw
push
and
and
cwtl
and
push
cmp
xor
lret
and
xor
dec
xlat
test
lcall
and
hlt
jo
in
rolb
and
push
push
jae
mov
inc
jb
jo
adc
jge
insl
jg
dec
dec
test
push
add
adc
addl
rolb
nop
insl
fnstenv
push
mov
xchg
out
cmpsb
je
or
addl
rolb
adc
test
movsb
mov
push
or
dec
or
in
add
pop
xchg
xchg
sub
or
add
sub
dec
fstp
fwait
cmp
cld
test
push
outsl
fs
and
ss
shll
js
mov
mov
lahf
lea
mov
xor
jnp
pop
inc
sbb
push
mov
in
xchg
std
sub
push
push
repnz
push
fxtract
sbb
inc
stos
jecxz
aad
sbb
jle
fs
and
in
mov
pusha
rcrl
cmc
dec
lret
mov
dec
loope
stos
push
push
cmp
jo
pop
jp
jno
lods
jg
bound
cltd
imul
repnz
ljmp
jne
dec
or
xorb
lret
or
add
adc
gs
into
lret
insb
lds
inc
aas
insb
rclb
sbb
cmpsb
movsb
mov
add
inc
shll
pop
shlb
enter
add
dec
ret
or
ljmp
adc
cmp
stos
call
imull
js
mov
jns
push
call
das
daa
xor
mov
mov
adc
lds
fldt
adc
push
push
test
sbb
lock
or
lret
int3
clc
push
notl
push
clc
or
mov
jge
imul
mov
popa
sbb
arpl
jge
subb
out
nop
aam
mov
jl
movsl
xor
sub
xchg
inc
add
lock
call
js
aam
out
idivb
mov
pop
lahf
cmp
gs
in
hlt
cmpsl
sub
ds
push
mov
loopne
pop
movsb
popa
dec
fdivs
and
mov
into
fwait
sub
aaa
xchg
pop
sbb
lret
xlat
dec
dec
sbb
fsts
call
incb
or
sti
xchg
and
adc
mov
loop
xchg
outsb
ret
and
pop
dec
nop
andl
fwait
mov
xchg
pop
addr16
icebp
decb
cmp
scas
inc
adc
ja
jbe
ffreep
xchg
sub
test
fs
push
lds
xor
roll
nop
mov
inc
movsb
dec
mov
pop
and
adc
xchg
int3
in
into
xchg
push
dec
mov
les
xlat
inc
das
lds
cmpsb
daa
cli
xor
xor
loop
mov
dec
xor
mov
mov
or
inc
out
or
xchg
push
cmp
in
inc
mov
or
lret
lret
das
aaa
daa
mov
sbb
jmp
rcr
adc
dec
mov
and
xlat
int3
js
fistps
pusha
lret
dec
and
dec
outsb
lahf
cmp
push
enter
mov
dec
xchg
aas
ret
testb
xor
or
iret
pop
cmp
aaa
fcmovnu
cmp
dec
sbb
or
lret
sarl
fcoml
sbb
imul
inc
lret
mov
sbb
scas
js
movsb
loopne
mov
push
xchg
jne
shr
lcall
cmp
sbb
sbb
fmull
jmp
scas
cmpsb
imul
cltd
cmpxchg
pop
popf
inc
jmp
mov
inc
lcall
inc
adc
mov
adc
mov
mov
xchg
dec
add
imul
adc
pop
mov
jne
mov
movsl
and
stc
jno
lahf
jmp
pop
cmpl
sub
mov
pop
loop
repz
mov
dec
daa
sub
ss
ret
and
dec
repnz
xchg
mov
dec
aad
flds
pop
mov
xchg
stc
arpl
mov
insb
enter
xchg
ret
sbb
int3
sub
fwait
js
insl
stos
xchg
dec
sti
repnz
sbb
adc
sti
pop
inc
mov
mov
in
sti
sbb
push
lock
fistps
cmp
lea
inc
add
test
lds
shrl
iret
js
jae
syscall
data16
lods
xor
push
mov
push
xchg
in
fucomip
mov
push
popa
bswap
decl
ret
fadd
sbb
test
gs
xchg
repnz
out
inc
test
mov
gs
aam
data16
mov
xor
lahf
mov
xchg
aam
icebp
or
imul
dec
ljmp
or
dec
push
mov
dec
fmuls
mov
jnp
ret
push
pop
aam
add
out
lret
psubd
sti
daa
lock
or
adc
or
enter
rolb
push
int3
adc
inc
lods
inc
mov
fstpt
mov
das
xchg
mov
movsb
ja
into
fdivrl
and
or
divb
or
push
sarl
adc
add
jns
setp
in
add
jbe
inc
fidivs
sbb
lret
sub
pop
addb
push
mov
bound
lods
push
mov
sub
nop
test
fisubrl
sbb
lods
inc
sub
std
stos
pop
cmp
mov
fldl
dec
je
shrb
cld
aas
adc
orl
sbb
xchg
or
fnstcw
jle
lods
sbb
insl
push
pop
aad
cltd
jnp
mov
sub
out
push
shll
repnz
mov
push
mov
daa
push
ds
aas
mov
mov
sub
or
cmpsb
aam
push
call
leave
pop
cld
clc
sub
clc
sub
mov
add
into
scas
lret
sub
cmp
xchg
scas
and
lahf
lea
dec
fisubrs
fstpt
sbb
subb
sbb
imul
aad
daa
pushf
mov
enter
sbb
cmpsl
fwait
lds
cmp
dec
dec
jne
pop
insl
xor
pop
push
sbb
aas
inc
cmpsl
mov
mov
pop
cmp
in
add
dec
mov
fstp
imul
mov
push
xchg
sbb
imul
mov
dec
jo
mov
fs
lock
ljmp
aaa
dec
sbb
pop
xor
enter
popa
mov
lods
in
push
in
jmp
imulb
int3
lcall
sarb
fs
pusha
rorl
inc
sub
mov
dec
mov
sbb
and
mov
xchg
cmp
scas
and
mov
pop
mov
mov
sbb
arpl
adc
sub
inc
push
je
sub
cltd
enter
fcoml
movsl
or
pop
pop
push
mov
mov
push
sub
imul
cld
xchg
pop
dec
std
test
imulb
mov
dec
repnz
mov
mov
js
jle
xchg
cld
decl
mov
mov
fidivrl
jne
sub
mov
push
lock
pop
test
mov
push
ja
sti
sbb
cmpsl
sbb
or
in
xor
in
loopne
ror
push
loop
or
ljmp
sbb
mov
push
movsl
mov
xchg
mov
cmc
and
cmpsl
cmp
push
data16
popf
stc
in
push
lret
les
fimull
sub
cmp
xor
jmp
imul
add
sarb
and
or
aam
xor
fstl
sbb
scas
mov
lds
add
jo
pinsrw
and
mov
mov
mov
mov
call
in
cmpb
in
adc
mov
jecxz
push
shll
clc
sbb
cmp
and
loop
mov
in
add
negl
fidivrl
fldt
das
pop
sbb
sbb
popf
xor
mov
data16
sub
movaps
int3
lods
loop
sbb
sbb
pop
xchg
xor
cmp
mov
sahf
mov
ds
cmp
dec
mov
fldenv
xchg
cmc
push
and
cs
adc
pop
out
pop
or
push
mov
add
adc
je
iret
inc
cmpl
add
jp
ss
push
jg
cwtl
jmp
jae,pn
add
mov
ret
inc
jl
adc
mov
outsl
jle
push
mov
shll
jno
mov
pushf
mov
mov
lret
das
in
popf
mov
mov
xchg
es
jae
mov
xor
push
insb
inc
fisubrs
cmpsb
or
mov
add
inc
es
cmpsb
pushf
sub
rorl
in
cltd
cwtl
xchg
cs
popa
jns
and
fndisi(8087
mov
out
dec
lret
sbb
scas
or
add
lcall
nop
in
fwait
mov
sub
adc
int
adc
lea
sbb
jl
loope
xchg
adc
hlt
in
cmp
aas
or
xchg
sbb
inc
test
adc
inc
lods
push
add
es
es
sub
in
fs
pop
or
cmc
shrl
pop
pop
or
pop
daa
movsb
jge
xor
jns
xchg
aad
and
shrw
jle
dec
pop
jg
cmc
or
daa
push
pop
pop
mov
ror
adc
xor
loope
xor
outsb
fcoms
pop
test
ret
sub
into
int
jg
negb
jecxz
mov
cmp
cwtl
mov
pop
mov
loop
in
and
aas
lret
sub
adc
mov
roll
shlb
adc
push
xchg
mov
out
push
fbld
dec
dec
mov
inc
mov
insl
movsb
mov
movsl
sbb
scas
icebp
fsubs
mov
jne
cmp
scas
adc
into
push
repnz
mov
in
ficompl
pop
fidivrl
into
dec
mov
or
cmp
jge
mov
xlat
addr16
mov
aad
jg
xchg
jno
add
inc
lock
repz
sbb
es
push
popa
cmc
pushf
mov
enter
push
push
test
in
push
sti
mov
and
sbb
dec
rcrb
ficompl
xor
or
xor
cmp
xchg
pop
lods
inc
mov
cmpsb
dec
push
sub
jle
inc
mov
push
pop
lcall
xchg
pusha
lcall
xchg
jns
fdivr
scas
pop
ss
xchg
mov
dec
iret
cmpsb
cmpb
adc
int
sub
adc
fcom
leave
dec
mov
stos
int3
or
push
loop
and
add
out
and
adc
cmp
int
ja
xor
and
orb
inc
cmp
adc
xchg
cmp
fwait
out
pop
adc
lahf
push
cmp
add
movsb
pop
fwait
xchg
fisubs
movsb
lahf
les
push
out
sub
sbb
incb
jecxz
scas
mov
ja
push
sbb
mov
push
xchg
repz
std
jecxz
mov
xchg
sarl
inc
or
sbb
mov
ds
arpl
rol
jge
push
lcall
lret
mov
push
call
or
inc
fwait
sub
out
outsl
lcall
aam
pusha
andb
inc
sub
or
js
mov
sub
sbb
xor
shlb
mov
repz
dec
nop
push
clc
jecxz
hlt
out
pop
xor
mov
add
out
jmp
xor
jg
int3
jp
xchg
scas
arpl
dec
or
std
leave
adc
gs
jbe
inc
adc
jmp
fidivl
loopne
sub
pop
adc
and
jge
pop
and
addl
out
sub
mov
dec
into
loopne
test
int3
pop
and
int3
push
pop
ret
ljmp
int
push
xchg
out
popf
imul
sub
je
jbe
roll
inc
sub
pop
pop
movsl
jecxz
add
sub
push
movsl
push
xchg
iret
and
push
adc
jmp
aam
mov
adc
lock
mov
pop
adc
repz
ljmp
xchg
mov
hlt
xchg
cli
movsb
cmpsl
lea
pusha
icebp
cs
lret
out
mov
sbb
cmp
pop
movsb
inc
hlt
inc
push
outsb
and
and
cmp
fsts
ret
push
aad
xlat
push
fsubl
mov
insb
ds
xchg
repz
add
xchg
pushf
lahf
sbb
jbe
pop
jp
jg
bound
loop
and
das
movsb
je
ja
test
mov
ljmp
addr16
jmp
xor
dec
add
mov
mov
sub
mov
inc
cmovns
sbb
paddw
mov
pop
xchg
xor
xchg
les
pushw
jns
das
sbb
and
xor
fwait
aaa
add
push
into
movsl
adc
icebp
mov
mov
sbb
pop
adcl
in
stos
jecxz
lcall
add
push
fs
lret
cmp
push
mov
pop
inc
sub
lret
sahf
loopne,pt
loop
iret
div
pusha
xchg
clc
jnp
dec
sub
test
jns
inc
xchg
add
push
movsl
adc
ja
lcall
ror
jecxz
pop
sub
ds
xor
es
lods
add
leave
in
jne
das
lds
cli
dec
dec
jmp
inc
sbb
negb
mov
xchg
rclb
pop
add
addl
mov
sub
inc
loop
add
inc
cmp
pop
sbb
push
subl
imul
cmpsl
lret
and
cwtl
xchg
or
push
mov
jl
int3
or
ja
sbb
aas
rcl
cld
notl
jle
lcall
mov
jbe
adc
cmpsl
xorb
mov
mov
shl
inc
stc
insb
xor
outsl
lret
out
mov
xor
jne
out
in
scas
nop
out
adcb
or
push
push
loop
mov
out
cltd
divb
cld
inc
push
dec
xchg
into
mov
lods
scas
inc
data16
xchg
xchg
mov
sbb
mov
jb
dec
popf
and
mov
add
pop
sub
push
xor
icebp
es
xchg
nop
cld
cmp
outsb
sbb
iret
mov
push
mov
mov
addr16
inc
cmp
loop
stos
pop
ret
or
negl
test
cmc
fists
jns
stos
ret
ja
mov
test
adc
or
adc
cmc
add
push
sbb
aas
loop
cmpsl
aam
push
cwtl
jno
mull
je
or
cmp
jecxz
pop
sub
lea
or
and
out
inc
push
pushf
xor
add
mov
xchg
out
pop
push
lahf
stc
lods
push
dec
xlat
incb
pusha
push
cmpl
inc
ds
pop
gs
enter
jle
mov
xchg
pusha
mov
pop
push
in
jne
call
cmpsb
call
jb
test
push
inc
call
sub
and
rol
testl
mov
lahf
in
fwait
mov
inc
pop
pop
push
push
inc
xchg
xchg
lea
pop
fimull
imul
push
dec
mov
or
call
jno
jl
dec
fdivrl
rclb
add
push
flds
movsl
inc
sti
addb
out
in
clc
jle
scas
or
xchg
fs
mov
mov
adc
insb
stc
mov
inc
shlb
fcomi
aam
inc
mov
aaa
mov
jp
test
jmp
xchg
sbb
push
lds
hlt
jae
adc
inc
sbbb
push
add
in
push
pop
stc
int3
xchg
pusha
aad
mov
das
jle
ficoms
ficoml
push
jg
shlb
fisubrs
jecxz
out
adc
mov
out
loopne
sbbb
pop
decb
mov
add
sbb
ja
dec
iret
mov
lods
cmpsb
xor
and
popf
jmp
cmp
dec
hlt
add
rcll
pop
into
fbld
push
bound
mov
fwait
pusha
in
enter
and
push
outsb
mov
test
lret
jno
lods
pop
out
inc
aas
iret
in
cmp
shlb
push
push
push
and
je
adc
lret
xor
addr16
cld
addr16
ja
cmp
loopne
xchg
mov
in
cmp
or
xlat
outsl
repz
mov
inc
daa
addr16
fsts
lds
lods
test
dec
and
jbe
pop
push
idivb
es
mov
or
std
ret
popa
mov
xor
je
adc
pushf
fmuls
leave
and
mov
enter
lret
sub
push
into
in
and
arpl
stc
mov
xchg
scas
roll
and
jg
jo
addr16
in
dec
cli
in
stos
aas
push
pop
push
jle
rorl
shlb
dec
xor
int3
ror
cs
ljmp
repnz
or
out
shr
mov
cmp
fcoml
rcl
test
cmp
hlt
sahf
aam
sub
seta
iret
cli
fbld
ret
repz
sbb
and
scas
or
jno
aaa
popf
sub
in
in
pop
cmpsl
icebp
fisttpl
adc
cmp
sub
les
xlat
pop
lahf
adc
fsubrl
xor
iret
push
xchg
test
xchg
lds
lret
fstpl
xlat
dec
sub
and
push
xchg
xchg
jb
in
stos
xor
mov
bound
sbb
or
insb
pushf
pop
dec
sbb
int
sub
cli
and
cmp
or
pop
jne
jb
fstpl
leave
dec
incl
ret
imul
and
aad
jge
rol
mov
jae
pop
hlt
rcl
jle
jae
add
mov
fsubrs
jmp
ret
outsb
sub
fcmovb
out
pop
scas
push
and
sbbb
push
rcrb
or
adc
dec
fsubs
fnstsw
mov
push
out
push
pop
fcompl
jae
xchg
lock
pop
popa
mov
add
ret
outsl
dec
lret
mov
shlb
and
int
mov
das
decl
test
or
lret
or
push
and
mov
jns
or
loope
daa
iret
pop
mov
or
bswap
test
sbb
aas
leave
pop
adc
mov
outsl
out
pop
mov
or
orl
jl
adc
mov
xabort
scas
sub
dec
add
and
add
mov
push
jle
mov
pop
cmp
int
sub
int3
loopne
xor
xor
sub
dec
cmpsb
jo
fs
aas
leave
adc
sub
and
ficoms
xor
dec
out
cmp
popf
f2xm1
clc
jg
push
in
stos
xchg
inc
out
xor
and
sub
popf
dec
push
lods
iret
out
jbe
les
stc
jl
add
bound
lock
dec
xchg
fcoml
fs
adc
xchg
add
sbb
sti
cmp
aam
fcoml
or
jae
incb
add
jae
lcall
xchg
ret
jg
stc
push
cmp
mov
pop
jp
xorl
aaa
dec
mov
ja
sbb
ljmp
and
adc
inc
lret
xor
aad
jecxz
dec
nop
push
sbb
int
std
cmpb
inc
int3
cmpsl
or
mov
rep
xchg
loopne
cmp
dec
xlat
sbb
cmpsb
fnsave
fsub
cmc
xor
cltd
xor
add
scas
inc
daa
sbb
int3
addr16
scas
out
loope
js
lahf
jno
cwtl
sbb
faddl
mov
xor
jge
test
xchg
sahf
rorb
add
inc
inc
sbb
sbb
in
fcomip
push
test
jmp
enter
mov
cmpsb
sbb
loope
jmp
fidivrl
jp
dec
sti
sbb
cli
mov
inc
shll
cli
pop
cmpsl
fnstsw
add
add
adc
pop
int3
insl
imul
push
shrb
mov
cmp
mov
movb
push
rcrl
sbb
iret
call
add
sbb
pop
fwait
roll
push
or
add
mov
scas
frstor
add
repz
rclb
pop
inc
cld
adcb
fwait
cmp
cli
lcall
loopne
jmp
loope
lds
mov
les
mov
mov
pop
xchg
out
dec
std
int
call
pushf
pop
push
int3
pusha
mov
aas
adc
movsb
int3
test
dec
pop
add
jo
dec
push
std
jno
mov
out
add
pop
and
add
jo
xor
xchg
add
enterw
or
mov
xchg
popf
pop
cmp
rcll
sub
xchg
jecxz
dec
jp
daa
sub
push
cmp
pop
leave
dec
inc
mov
je
sarb
scas
aam
imul
lock
xchg
mov
icebp
neg
mov
inc
xor
aaa
mov
xchg
je
dec
sub
jb
cmp
cmpsb
aam
push
cmp
shlb
lret
dec
test
jmp
clc
xor
push
pop
out
scas
fcompl
outsl
mov
in
pop
pop
shr
mov
ljmp
lds
and
and
xor
ds
fs
ja
lds
frstor
pop
lods
dec
in
cld
add
mov
lcall
push
add
xchg
js
inc
sub
inc
sub
pmaxub
mov
adc
divb
jmp
gs
scas
pushf
jg
out
ja
or
inc
xorl
into
jno
cmpsb
add
dec
call
in
lods
mov
aaa
dec
loop
adc
sbb
mov
sub
mov
ss
jbe
outsb
pop
icebp
jmp
sub
movsb
xchg
ja
push
repz
mov
cwtl
sbb
out
ljmp
repz
lea
lock
icebp
and
xchg
scas
xchg
adc
jecxz
inc
imul
addr16
int
mov
out
sub
or
mov
jmp
dec
jb
mov
jmp
out
sbb
jmp
sbb
push
lret
mov
and
jae
popf
pushf
jge
mov
iret
lea
test
mov
call
mov
sbb
cmp
add
mov
cs
ss
orl
andl
pop
pop
lods
nop
leave
push
mov
ja
loopne
sbb
push
loop
mov
pop
stos
xchg
xor
or
loope
xchg
mov
sub
daa
mov
loop
mov
aaa
lcall
loopne
outsb
inc
sub
inc
hlt
orb
push
xor
pop
gs
imul
push
outsb
fnstenv
mov
fstpt
add
data16
add
inc
js
outsb
inc
cmpsb
pop
pop
fildll
clc
mov
cmpsl
into
pop
push
in
xchg
jge
xchg
mov
call
add
or
jno
or
movsl
mov
mov
or
data16
cmp
fildll
arpl
hlt
clc
addr16
xchg
pop
bswap
test
ds
mov
jnp
test
adc
fadds
lods
pushf
add
cmp
lret
inc
ds
rcr
dec
int
imull
es
addr16
pushf
popa
lcall
out
sub
mov
outsl
mov
jmp
mov
mov
in
js
mov
pop
xor
lret
push
mov
jae
cmpsb
pop
mov
repnz
rcl
movsl
xor
sarl
andb
sub
dec
push
or
out
sarl
fsubl
in
mov
roll
loop
fwait
mov
invd
test
cmpsb
ja
cmp
pop
out
cmp
lcall
mov
roll
xor
inc
ds
subb
adc
inc
in
mov
pop
pop
cs
mov
lds
adc
dec
fcmovnu
iret
push
mov
jb
sbb
push
lcall
cmpsl
jp
push
jnp
adc
nop
addr16
outsb
mov
jge
cmp
jecxz
rorl
cmpsb
aas
inc
or
ret
outsb
enter
adc
xchg
dec
inc
js
xor
mov
stc
test
xchg
add
pop
dec
pop
pop
jl
pop
cmp
popf
jmp
lret
push
sbb
fdivrl
std
js
test
ljmp
xchg
rclb
cli
mov
add
xchg
scas
movsb
js
mov
test
pop
fwait
mov
inc
jo
out
aam
mov
ret
sub
xchg
mov
scas
mov
std
fsubrp
ret
movsl
xlat
pop
mov
push
dec
and
out
pop
out
addl
cli
push
aas
sti
jp
gs
divb
add
les
or
inc
jge
insb
inc
enter
sub
xchg
lahf
sbb
dec
js
or
jmp
mov
das
xor
insl
lret
lea
repnz
jmp
insb
stc
sbb
inc
cli
xchg
jmp
lahf
xor
loop
inc
sbb
jae
insl
mov
cmp
cltd
pop
jno
push
jbe
sar
pop
aam
pusha
daa
fwait
mov
mov
add
add
rclb
loope
add
scas
mov
sarl
sbb
mov
xor
add
arpl
in
dec
jle
sub
mov
aas
sbb
popa
xor
sbb
fcos
dec
scas
imul
and
xlat
sahf
ljmp
push
stc
xchg
push
mov
out
repz
jle
scas
je
in
xchg
loopne
xchg
loope
push
dec
push
repz
clc
frndint
cmpsl
cltd
lods
fsub
icebp
mov
clc
fwait
cli
push
push
fwait
mov
xor
adc
dec
fcomip
push
in
and
or
test
add
loopne
cmp
mov
push
std
jne
xlat
dec
add
or
pop
push
mov
push
xchg
data16
cmp
push
push
sub
adc
loope
pushf
adc
imul
scas
push
fldt
inc
inc
cmp
cmp
add
std
rol
or
add
ja
rol
pop
jae
sub
pop
cmp
mov
idivb
gs
test
js
xor
daa
add
rorb
pop
and
pusha
int
dec
hlt
loop
push
lds
xchg
test
lea
xor
aad
pop
mov
loopne
lods
in
mov
and
xchg
faddl
push
sub
lahf
xchg
andb
push
aas
push
enter
add
cli
test
xchg
push
test
pushf
ss
inc
les
pop
and
adc
dec
mov
mov
rorl
sbb
jbe
xchg
jbe
out
sbb
fidivrs
lret
mov
xchg
cmpsl
mov
dec
mov
lock
push
outsl
lcall
bound
movsl
std
ror
loope
loopne
sbb
mov
test
jns
out
cli
push
scas
hlt
add
lock
sti
daa
lcall
pop
nop
add
in
call
mov
and
mov
ds
pop
scas
loopne
cmp
mov
push
out
mov
cs
and
push
add
je
sub
cmp
cs
fcomip
mov
xchg
jb
fsts
lods
data16
sbb
in
nop
ljmp
inc
adc
cmp
repnz
xor
mov
xor
pop
push
xchg
stos
mov
addb
cmp
add
in
out
sbb
push
sbb
iret
std
mov
aaa
dec
mov
inc
loopne
jb
lds
push
cwtl
or
mov
js
lahf
adc
or
jne
mov
jne
popa
int
adc
mov
scas
mov
cmpsl
scas
pop
add
push
mov
xchg
cmp
mov
jnp
inc
xchg
lret
pushl
xor
sbb
stos
fwait
mov
mov
in
dec
mov
cmpsl
mov
jge
hlt
lock
sti
adc
xchg
insb
movsl
scas
mov
xchg
test
mov
jmp
fidivrs
loop
add
jecxz
push
aaa
xchg
popf
testl
lods
outsl
cld
add
scas
das
xor
add
in
hlt
inc
cmpl
pushl
clc
xchg
test
mov
dec
cli
inc
mov
shl
outsl
cmpsb
and
xchg
fdivs
add
repnz
push
sarb
cmp
in
fstl
pop
jo
or
sbb
subl
out
cmp
dec
rcrb
xchg
dec
scas
fmull
out
xor
pop
out
jle
sbb
adc
mov
out
ja
mov
arpl
fistps
ret
inc
inc
jbe
pop
outsl
dec
outsb
orb
inc
mov
add
daa
mov
adc
xor
mov
paddw
mov
imul
int3
mov
call
outsb
mov
xlat
adc
pop
pop
cmp
mov
adc
sti
jmp
je
aad
shrb
or
daa
add
add
push
jg
popf
mov
mov
rcll
pop
int
push
test
enter
addr16
pop
push
in
movsb
adc
sub
pop
aaa
push
lret
push
inc
push
xchg
dec
ja
outsl
lds
and
lock
adc
sub
in
es
add
test
in
imul
mov
loopne
jnp
add
push
repnz
jns
pop
leave
inc
dec
cmpsl
out
adcb
repz
adc
jle
jbe
inc
icebp
out
dec
sbbl
stos
imul
loopne
dec
dec
ljmp
clc
mov
inc
pop
cltd
pop
in
pop
xchg
add
bound
pop
inc
cmp
sub
pop
jne
jnp
mov
mov
push
in
cmp
fdivs
dec
ss
es
add
scas
aaa
adc
movl
scas
lret
cld
and
and
imul
pop
mov
xor
fdivl
pop
call
enter
mov
test
cwtl
addr16
andl
mov
adc
lcall
mov
popa
loopne
mov
inc
sbb
adc
ds
push
jns
and
js
pop
mov
inc
insl
lret
and
mov
jecxz
enter
push
jp
xchg
xor
flds
sub
insl
fidivrl
push
int3
or
pop
push
cmp
xor
es
shr
pusha
lea
daa
push
nop
insl
movsl
mov
xchg
dec
push
mov
icebp
xor
imul
outsl
and
enter
pop
loopne
sahf
imul
fwait
dec
pop
cmp
pop
push
adc
mov
sub
aad
lcall
push
movsl
xor
popa
mov
in
or
sbb
inc
cmp
push
nop
sub
inc
jne
mov
xchg
bound
psadbw
add
fnstsw
cmpsl
jno
sbb
mov
aam
and
xchg
adc
dec
pusha
jns
dec
pop
pop
rorl
lcall
push
cwtl
test
cmp
jo
gs
sbb
ret
cmp
fildll
out
jne
mov
movsb
mov
jmp
scas
aas
cmp
dec
mov
popa
outsb
mov
cmpsl
pop
pop
dec
xor
pop
sbb
push
bound
jecxz
imul
xchg
filds
sahf
out
or
xor
add
xchg
jmp
cltd
arpl
jl
iret
xchg
mov
lods
add
xchg
cmp
clc
das
sbb
jne
cmp
cwtl
and
pop
jge
mov
dec
sub
add
rorb
cmp
mov
lahf
or
in
cmp
nop
add
lcall
imul
lods
out
mull
mov
arpl
imul
jne
jle
cwtl
sub
cld
push
adc
inc
je
sub
lret
outsb
mov
sub
or
sub
adc
inc
gs
sub
shl
jp
fimull
out
and
shr
inc
push
xchg
mov
adc
popf
ud0
dec
out
and
bound
push
push
push
jg
add
adc
fmuls
and
add
out
inc
data16
rcr
mov
aas
sub
test
insb
xor
jecxz
xchg
jb
add
sub
push
ret
cmp
pop
mov
mov
jecxz
popf
icebp
popa
mov
in
jg
push
or
cltd
sbb
jnp
shlb
cwtl
lods
ret
add
hlt
sbb
into
mov
dec
lds
idiv
xchg
popf
aad
insb
add
shl
movsl
inc
inc
shrl
sub
ret
mov
mov
mov
cmp
aas
push
cs
push
leave
push
loop
fisubs
lea
ja
xchg
sub
ret
in
test
mov
push
pop
sub
sahf
stos
adc
mov
push
sub
mov
in
filds
cmpsb
pop
jo
pop
inc
and
add
rcll
fwait
subb
scas
xchg
fldt
fcompl
fs
jo
loop
adc
shll
jns
sub
fiadds
jo
mov
orl
add
lcall
int
push
adc
ret
and
inc
icebp
das
add
push
sub
daa
sbb
int
push
or
out
jecxz
ret
adc
loop
pop
ljmp
jmp
addr16
inc
jge
mov
mov
aaa
jo
mov
sub
jb
mov
sbb
cmp
jl
dec
test
pop
rcrl
push
pop
gs
jae
imul
out
mov
mov
aas
sbb
jge
mov
and
insl
push
or
loope
insb
jb
in
lods
mov
xchg
fiaddl
nop
mov
push
xchg
pop
push
das
xchg
sub
xor
push
xchg
test
insb
cmp
or
mov
dec
pop
mov
push
push
loop
push
jb
mov
mov
xchg
in
testl
mov
push
in
bound
inc
push
popf
fcmovne
jl
loop
rclb
xchg
or
sbbl
push
ret
addl
loopne
sbb
sarb
mov
cltd
jnp
push
gs
test
and
pop
mov
pop
lods
mov
mov
mov
mov
dec
sub
rclb
in
pop
pop
adc
add
fnsave
push
dec
jmp
jp
movsb
jae
cmp
and
mov
or
adc
sbb
test
jge
jnp
stc
mov
mov
push
in
ret
leave
jns
pop
nop
inc
or
sbb
cmp
lret
and
std
insb
cmp
sahf
fcomi
add
div
inc
pusha
push
xchg
fs
xchg
or
outsl
and
add
add
xor
xor
xor
sub
mov
pop
imul
sub
lret
pushf
pop
cmpsl
jle
jbe
or
push
dec
outsb
stc
int
sbb
hlt
push
dec
es
mov
mov
pusha
xchg
jmp
push
pop
pop
out
pop
and
clc
dec
pop
je
xchg
pop
xchg
mov
jg
loop
bound
mov
cmp
mov
fstl
fimull
es
xchg
mov
pop
sbb
xchg
push
test
fwait
insl
sbb
vmwrite
and
push
dec
mov
sub
adc
aad
pushf
mov
leave
mov
outsl
adc
fiadds
cld
mov
and
jne
mov
scas
cmp
adc
mov
sub
aam
outsl
addr16
cmc
cld
out
xor
jnp
xchg
mov
int3
pop
imul
int3
icebp
mov
jge
sub
ljmp
rcrl
out
andb
imul
cmp
int3
and
inc
push
repz
fbld
push
das
adc
xor
add
inc
sub
popa
push
sub
adc
fmuls
pop
mov
pop
ss
aad
mov
mov
inc
mov
clc
cmc
pop
js
fwait
iret
popa
daa
xor
xchg
lods
adc
adc
mov
and
je
into
stos
dec
ret
out
or
mov
lods
cmp
movsb
shlb
insl
xlat
mov
mov
lods
add
hlt
xchg
pop
popf
dec
inc
adc
jp
iret
push
adc
lock
mov
das
bound
loopne
shll
or
das
jg
sbb
in
les
inc
in
test
cmp
mov
in
mov
sahf
pushf
mov
das
xchg
imul
bswap
in
or
jg
fs
xorl
lods
imul
xor
adc
out
cmp
int
ljmp
xlat
fidivs
adc
adc
in
shll
xor
jp
fimuls
mov
jo
dec
out
inc
xchg
mov
add
cmp
inc
xlat
test
mov
mov
stc
js
ret
sbb
push
dec
das
scas
push
adc
push
jne
lods
int
mov
jecxz
das
dec
add
xor
inc
dec
push
adc
add
fisubrl
cmp
jl
mov
inc
dec
mov
loopne
aas
sub
decl
int3
outsb
js
rclb
mov
jns
int
arpl
and
addr16
insw
test
pop
mov
rcl
push
push
fcomps
mov
ljmp
ret
movsb
fildll
adc
dec
popf
daa
mov
pop
push
push
incl
inc
xor
int3
jle
mov
xlat
sub
pop
ror
dec
xchg
cmp
or
cmpl
push
dec
rcrl
das
sbb
popf
cli
or
adcb
or
shrb
stos
xor
xchg
fcoml
mov
push
jo
jmp
add
test
popf
jnp
jecxz
mov
push
arpl
jg
cmp
jl
movsb
xchg
lock
stos
test
add
cmp
das
decb
push
mov
mov
mov
enter
mov
add
stos
mov
jg
sbb
out
shrd
andl
lock
sti
and
pop
mov
xchg
int
push
xchg
mov
call
es
fsub
jp
mov
add
int
xor
mov
scas
addr16
push
faddl
mov
aam
and
out
jecxz
or
clc
stc
ficoms
loop
pushf
repnz
out
cmp
mov
frstor
cmp
push
loopne
cmp
jb
mov
inc
cmp
cmp
int3
jb
xlat
mov
pop
inc
xchg
out
add
repnz
jbe
mov
jnp
add
out
push
lds
stos
cmp
ljmp
movsb
dec
jl
jae
mov
xor
add
leave
scas
call
pop
rcll
outsb
fwait
mov
into
notb
jle
push
popa
stc
pushf
mov
mov
jge
mov
mov
out
outsl
out
dec
scas
aad
ret
js
test
mov
popf
ret
out
add
cs
ret
adc
movsl
dec
rorl
mov
jge
mov
shrl
mov
test
add
push
or
adc
inc
inc
jnp
and
lret
clc
out
rolb
jbe
jl
cmp
add
jnp
lahf
xchg
es
mov
das
test
lahf
lcall
push
ficomps
or
dec
pusha
sub
push
mov
scas
mov
jns
lret
lea
aas
mov
iret
sti
add
call
xchg
xchg
bound
iret
pushf
cmpb
push
imul
mov
mov
xchg
imul
dec
ljmp
in
inc
inc
jnp
arpl
dec
adc
push
jmp
cmc
add
fsubrl
xor
push
cmc
jmp
or
inc
and
addr16
lods
or
mov
nop
test
frstor
cmp
movb
add
sub
jbe
bound
xchg
cmp
shll
mov
icebp
pop
xchg
jge
pusha
mov
mov
out
das
add
int
int3
add
addr16
mov
loop
jb
jl
jns
inc
add
rcrb
xor
cmp
mov
xor
rcl
push
std
cltd
dec
adc
dec
adc
popf
xorb
push
imul
adc
mov
pop
test
and
je
dec
mov
cmp
xor
cmc
in
sbb
orb
lods
in
in
xchg
nop
aad
out
lcall
hlt
out
dec
push
sysexit
and
aas
cmc
fdivl
sbb
aaa
mul
sbb
push
insl
prefetchw
stc
and
movsb
inc
lea
cmpsb
inc
gs
and
fwait
out
sarb
call
sti
enter
push
in
sub
pop
loopne
push
inc
inc
and
add
int
and
cmpsl
pop
jno
insl
or
cltd
imul
les
bound
insl
outsb
js
cs
mov
sub
repnz
nopl
mov
adc
or
insb
jecxz
lock
jl
orl
int
leave
je
sub
sub
mov
sub
js
jge
test
pop
sbb
gs
mov
add
add
std
in
gs
add
mov
leave
in
pop
sti
inc
loop
repz
pushl
mov
call
or
pop
mov
daa
cld
addr16
mov
jno
jno
int3
andb
lock
jne
stos
sbb
lods
or
out
ret
jmp
and
mov
jg
push
jl
sbb
xor
jg
pop
int
xchg
aas
mov
les
adc
sti
imul
mov
std
push
push
out
push
pop
push
mov
push
ficompl
gs
xor
xchg
aas
add
pop
sbb
xchg
mulb
aad
ljmp
and
jnp
push
xchg
mov
inc
xor
scas
or
jnp
pop
arpl
and
push
nop
stos
addr16
repz
xchg
fldl
inc
pop
movzbl
mov
movsb
aam
aaa
push
mov
push
out
lahf
add
xchg
or
sbb
mov
sahf
dec
into
dec
add
scas
inc
add
sahf
testl
push
push
lock
lret
mov
push
xor
rolb
jbe
xchg
mov
xor
adc
sbb
inc
adc
daa
ss
mov
fldenv
xchg
mov
jb
lods
jo
push
cld
lods
int
xchg
jb
mov
frstor
or
scas
lret
int3
adc
lock
cld
mov
inc
in
imul
adc
push
mov
mov
jmp
pop
rcrb
ja
sub
push
pop
pop
es
mov
push
pop
mov
out
xor
inc
lods
pusha
push
sahf
mov
adc
sub
push
sbb
pop
jne
sbb
mov
dec
cwtl
xor
pop
and
cmc
inc
sbb
inc
sbb
repz
xchg
shlb
outsl
xchg
test
jns
mov
sub
push
pop
lock
cli
pop
rcrb
imul
add
in
ja
stos
and
push
dec
fldl2e
mov
dec
jo
sub
and
jne
out
adc
lock
pop
aam
xchg
test
dec
fwait
out
mov
sbb
mov
jne
inc
rep
inc
jl
mov
adc
out
popf
inc
mov
mov
gs
imul
add
inc
mov
push
push
cld
push
or
cli
xor
sbbl
cmc
sbb
xchg
xlat
xchg
sbb
mov
pop
aad
repz
jle
gs
push
sbb
shrl
loopne
aas
addr16
addb
dec
incl
into
xor
push
test
mov
ds
negl
xlat
xorl
aaa
loop
jno
test
dec
inc
outsb
sbb
dec
adc
scas
sub
inc
outsl
adc
push
lock
xor
jo
jb
aaa
and
dec
xor
nop
incb
aam
imul
add
jmp
add
and
jo
outsb
add
cmpsb
fwait
in
mov
jns
aad
pop
mov
jmp
pop
lret
dec
enter
jp
pop
sub
orl
daa
lods
xor
xchg
mov
add
add
xchg
testl
ret
stc
movsl
add
test
push
push
add
jo
cmp
adc
mov
jg
push
ds
imul
fwait
lds
pushl
negl
inc
jb
pop
sub
push
and
insl
out
pop
xor
mov
or
add
cltd
repz
and
mov
push
xchg
pop
nop
out
sub
add
inc
jno
out
enter
cwtl
sarl
jp
popa
adc
aas
lock
mov
push
iret
decb
cmp
data16
cmp
loop
xor
lds
push
clc
insl
add
dec
into
sbbb
ficompl
xchg
mov
xchg
jl
mov
xor
xor
dec
mov
mov
loop
aas
cwtl
mov
add
addl
push
cmpb
inc
ja
int
test
int
test
jo
pop
jns
shrl
xchg
scas
mov
pop
jb
xor
push
sub
lcall
cmpsb
jo
xlat
hlt
cli
lcall
out
cltd
addr16
jge
dec
mov
ficoms
scas
ja
xchg
ss
popf
adc
repnz
icebp
inc
adc
mov
xchg
push
xor
fidivs
in
daa
pushf
mov
or
std
jl
movsl
fld
pop
pusha
sbb
jmp
insb
push
ss
rcrb
dec
shll
daa
mov
repz
cmp
aad
push
lcall
fldt
jo
lret
pop
adc
sub
xchg
xchg
add
mov
mov
jle
lea
or
push
xor
sub
iret
or
lea
cs
or
dec
xlat
xor
add
or
lret
push
mov
pop
arpl
in
stc
scas
inc
les
add
jns
dec
mov
es
sub
scas
insl
push
xchg
sub
push
jo
sub
sahf
jl
lods
lea
sub
sub
inc
mov
mov
ja
cmp
and
or
lock
cld
push
int3
mov
push
mov
mov
adcl
cmpsl
pusha
rclb
rcrl
inc
out
inc
sbb
xlat
sub
jmp
mov
cmp
mov
lds
clc
repz
int3
mov
sbb
lea
xor
push
sahf
xor
sub
aas
aaa
pop
ljmp
out
cs
push
in
into
bound
dec
cmc
mov
movsl
or
xchg
fisubrs
jae
loop
cmpsl
sbb
pop
xchg
out
add
mov
or
iret
mov
sub
mov
add
fcoms
jb
dec
iret
push
push
jg
mov
inc
lcall
pop
sub
dec
inc
test
test
push
and
inc
and
mov
xor
ret
lea
xor
mov
mov
sub
pop
mov
mov
ss
or
push
cwtl
adcl
dec
fwait
mov
test
sbb
ret
cltd
mov
sbb
sub
push
jns
aad
dec
jp,pn
scas
mov
jecxz
repnz
imull
adc
push
xor
mov
mov
mov
pop
sbb
and
mov
inc
add
inc
xchg
pop
mov
or
push
pop
adc
out
imul
mov
fisubrs
arpl
aas
ficompl
pop
mov
lcall
fidivrl
jne
rolb
fsubrs
sbb
pop
and
fsubrs
dec
shlb
pop
push
xchg
out
sar
scas
pop
mov
push
add
pop
aaa
cmpsb
push
xchg
into
inc
push
sbb
stc
mov
in
jbe
adc
in
ljmp
cld
xor
jmp
inc
xor
iret
filds
fimull
mov
pop
cmp
cmp
cmp
lods
mov
add
daa
mov
fisubs
dec
in
icebp
outsb
pop
in
jae
mov
int
inc
mov
loopne
cli
or
call
in
sub
xor
cli
mov
sbb
xchg
push
pop
pop
adcl
sbb
mov
pop
dec
ljmp
int
rcr
xor
mov
push
xchg
fcompl
push
test
push
push
out
adc
or
xor
jb
or
pushf
inc
push
and
cmpsb
mov
inc
in
mov
dec
repz
sub
sarb
cmp
jp
xor
in
mov
filds
mov
rorb
push
add
sub
jg
hlt
jp
sub
jb
repnz
in
test
xor
popa
pop
arpl
xchg
pushf
dec
mov
pop
cmpsb
jmp
fcmovu
ror
sbb
into
push
imul
jbe
out
sub
jne
daa
jg
jle
outsl
xor
ret
jge
xor
jne
adcb
jmp
dec
jno
sub
mov
outsb
jg
pushl
test
lods
xor
bound
or
push
jmp
aam
pushf
jnp
jne
daa
or
fucomip
mov
shlb
fsubs
pusha
rcr
enter
and
mov
push
push
or
hlt
mov
fdivrs
push
lea
push
ds
sub
lahf
call
cmp
pop
sbb
pushf
fwait
ret
lret
cmpsb
cmpsl
jae
fdivl
mov
adc
add
jmp
aaa
call
in
dec
out
cmp
cmpsb
cmp
xchg
movl
js
dec
aaa
pop
cs
sbb
push
int
xchg
add
std
div
and
push
jg
jle
sub
adc
lret
sub
test
xor
cmp
ja
and
test
jae
cmp
inc
test
jle
fidivl
addr16
fildll
cmp
je
mov
outsl
xchg
int
and
cmp
idiv
jne
mov
fimuls
mov
sub
clc
xchg
mov
pop
inc
mov
inc
mov
popf
outsl
ffree
cltd
pop
fcoms
jb
xchg
stos
fs
jnp
pop
js
aaa
test
mov
aas
xor
js
int
je
pop
vcvttps2dq
lret
int3
test
cmc
sbb
aas
cmp
mov
adc
shll
imul
ret
mov
mov
in
pushf
push
dec
mov
push
xor
loope
testl
add
lock
or
hlt
cld
imul
adc
adc
aam
add
ficompl
ret
gs
dec
aas
or
sbb
gs
pop
std
testl
call
aam
sarl
into
and
repz
jg
push
loope
lods
pushf
test
mov
fsubs
cmp
sbb
mov
add
jnp
sbb
push
enter
and
iret
fst
imul
add
inc
fidivs
stos
in
push
dec
loopne
and
in
xchg
mov
lret
push
mov
sub
or
sbbl
icebp
out
imul
lods
cld
jnp
jl
xchg
and
dec
in
inc
outsb
jnp
cmp
push
push
leave
inc
mov
or
pop
and
sub
repnz
movsb
mov
fadd
stc
int3
dec
inc
fs
insb
xor
push
dec
sahf
mov
push
shlb
ds
pop
pusha
stos
push
adc
fstpt
outsl
xchg
push
xor
js
mov
pop
loop
cmc
jnp
xor
inc
test
rcrb
fwait
mov
sbb
out
out
cs
xor
xor
outsl
fs
call
in
dec
jo
push
mov
inc
lods
negl
pop
adc
cli
xchg
or
xor
shll
shrb
movsb
sub
mov
stos
mov
pop
jl
cmp
aaa
sarl
out
lcall
leave
pop
mov
clc
mov
roll
xchg
imul
fmuls
loope
mov
dec
or
mov
dec
ror
cmp
and
mov
and
xor
adc
xor
or
lahf
sarb
sbb
adcl
dec
filds
lds
std
add
fwait
sub
dec
dec
and
cmpb
or
push
sbb
bound
aas
in
jge
sbbb
xor
or
mov
in
data16
jmp
lea
lret
icebp
rorl
mov
cmpsb
lds
xchg
mov
loop
dec
arpl
xor
jecxz
bound
add
fwait
xchg
jno
fcoml
mov
adc
pop
mov
in
rorl
push
mov
ss
add
les
inc
sub
test
jge
fbstp
mov
add
xchg
jae
mov
cmp
sbb
lret
dec
call
mov
gs
mov
push
and
dec
lds
mov
shr
sbb
sub
xor
push
jle
mov
imul
sub
les
outsb
rcr
push
out
test
jbe
mov
cmpb
and
xor
stc
push
mov
pop
fidivl
mov
sbb
repnz
leave
je
imul
ljmp
je
out
into
cwtl
hlt
xor
adc
cmp
cmp
cs
or
arpl
test
dec
shrl
xor
mov
clc
mov
cmpsl
into
fcmovnu
in
jne
mov
sahf
aam
roll
xchg
jecxz
in
mov
gs
lods
loope
outsl
mov
add
dec
push
or
mov
outsb
divb
imulb
mov
std
ficomps
out
adc
mov
out
adc
movsb
loopne
test
and
flds
mov
call
pop
call
jge
pop
fadds
lcall
mov
mov
add
add
sub
jmp
xchg
or
and
xchg
fisttps
sti
pop
mov
jnp
std
ret
sbb
fstps
jns
push
pop
mov
leave
mov
push
adc
pop
popf
test
ret
mov
insb
cmp
lds
cmp
sub
aad
addb
daa
fstpt
ss
push
sbb
add
add
adc
lcall
and
out
adc
dec
test
push
sub
loope
adc
into
cmpl
sahf
ret
test
sbb
sbb
add
push
outsl
sti
int
frstor
movsb
dec
xchg
in
jg
movsl
bound
scas
xchg
data16
dec
pushf
inc
bnd
pop
cmp
std
das
cmpsl
cmc
and
jae
inc
cli
popa
sbb
xchg
pushf
sub
ja
stc
add
jecxz
push
jno
in
xchg
ds
je
jo
or
loop
pop
xchg
sbb
test
repnz
jnp
jae
ret
nop
sbb
dec
stos
and
call
or
icebp
icebp
stos
cmpsb
push
lea
fildll
int
push
or
repnz
aad
arpl
pop
push
xchg
insl
inc
out
std
arpl
sub
loop
and
pop
or
adcb
mov
cs
icebp
test
pop
ss
mov
fdivrp
sahf
push
test
test
inc
mov
push
rorb
or
mov
pushl
add
mov
adc
outsb
int
notb
movsbl
adc
daa
pop
lahf
jb
adc
inc
xchg
xchg
sbb
rolb
mov
xchg
xchg
test
mov
loope
mov
push
in
js
push
sub
xor
mov
imul
pusha
add
lret
aas
ror
int3
jbe
pop
outsl
ja
movsl
cmp
cmpsl
fucomp
insl
inc
mov
lahf
push
nop
adc
inc
cmp
pop
pop
pop
cltd
fwait
pop
pop
push
iret
lahf
fadd
push
movb
arpl
loope
jbe
xchg
imul
or
xor
faddl
xor
xor
or
rolb
aaa
fwait
and
gs
lods
push
test
popf
mov
scas
fucomip
adc
xchg
scas
or
jno
les
mov
incb
int3
outsb
les
int
int3
xchg
dec
outsl
sub
lcall
xor
arpl
and
repnz
add
shl
mov
repnz
push
or
ret
lret
lahf
cs
and
imul
cltd
imul
clc
xor
pop
mov
inc
es
sbb
adc
ja
lea
dec
mov
test
xor
movsb
incl
sub
sub
fstps
and
pop
jae
pushf
inc
adc
enter
lds
ljmp
lret
or
push
insl
sub
dec
gs
mov
call
add
add
cmp
mov
call
xor
pop
push
lock
sahf
cmp
scas
stc
sbb
pop
mov
jle
cmp
test
je
outsl
or
into
lea
push
adc
fidivl
or
cbtw
rorl
rol
or
or
sub
cltd
mov
jmp
mov
jecxz
cmp
rcrl
fld1
mov
push
mov
rcrb
jo
xchg
cmpsl
lods
mov
add
movl
cmpsb
shlb
roll
and
add
sub
dec
jo,pt
out
push
ret
push
ss
push
xchg
inc
decb
mov
push
lods
jbe
adc
je
fstpt
push
scas
int3
aad
push
dec
adc
outsl
cmp
sub
add
jno
push
mov
cli
cltd
test
mov
movb
repz
subb
movsb
xor
les
clc
jge
xorps
shlb
call
xor
push
sub
dec
aad
dec
push
aam
mov
stc
adc
les
or
cwtl
mov
outsl
or
sub
pop
xor
add
popa
test
or
loope
xor
mov
out
fisubrs
xor
mov
push
mov
sbb
test
mov
cmpsl
lret
jo
arpl
mov
sbbb
imul
stos
jmp
jmp
ljmp
cmp
nop
mov
addr16
sub
pop
sub
int
insb
test
dec
xchg
adc
mov
dec
nop
aas
push
dec
icebp
inc
icebp
mov
pop
mov
imul
xchg
aas
push
add
in
xchg
sbb
pop
popf
xorl
add
and
jb
sub
xchg
add
mov
mov
jg
rcrb
outsb
ds
bound
cmp
jge
fs
adc
pop
lret
or
pop
imul
sbb
or
mov
cmpsb
sbb
fldt
mov
ret
jo
gs
std
push
insl
stos
testl
jge
jg
mov
inc
add
inc
clc
mov
xchg
jmp
pop
mov
add
repnz
xor
xor
jns
push
add
or
das
push
xchg
xchg
in
sub
cmc
inc
inc
repnz
mov
leave
pmaxsw
inc
decl
or
les
inc
dec
pop
aad
and
adc
rcl
incl
and
sbb
push
mov
insb
lds
mov
push
stos
fmul
lods
lret
dec
jmp
sbb
into
int3
adc
das
cmp
shll
mov
inc
add
cmpsb
in
scas
sti
sub
mov
mov
jecxz
xchg
adc
cli
jne
and
jle
jne
mov
mov
insl
xchg
and
flds
lds
int3
movsl
jno
mov
in
push
cmc
std
pusha
ljmp
mov
inc
js
mov
xor
rcrl
sub
pusha
and
or
repnz
movsl
lds
icebp
jge
lock
lods
push
arpl
roll
and
dec
mov
inc
sahf
adc
cmpsl
adc
divl
mov
inc
mov
lds
scas
fsts
outsb
stc
pop
dec
leave
inc
mov
fidivrl
repnz
or
xor
dec
and
roll
imul
movsb
dec
sub
cmp
int
aad
lods
arpl
xchg
into
sub
mov
imul
add
call
mov
mov
daa
aaa
loope
pusha
idivl
push
subl
addl
cmpsl
pop
aad
sahf
mov
sub
cmc
stos
mul
repnz
mov
popf
jmp
es
adc
xor
sbb
sub
push
inc
push
mov
aad
imulb
xchg
loopne
sub
jne
xor
or
sbb
imul
fcmove
test
push
rorl
enter
mov
nop
xchg
out
dec
pop
popl
push
lock
or
xor
sbb
mov
adc
call
lcall
enter
add
shrl
pop
push
scas
test
lea
mov
mov
loop
add
add
call
movsl
sub
sbb
flds
mov
push
icebp
dec
rolb
std
adc
pop
xchg
lret
and
cmpsb
cmp
mov
cmovae
pushf
test
dec
sub
dec
pop
add
loop
pop
divl
lods
jns
dec
push
add
ss
mov
jmp
xor
sub
mov
xchg
xor
cmc
adc
test
es
dec
xor
repz
adc
ja
sbb
negl
ds
adc
arpl
or
out
add
lods
push
aad
pop
add
sub
add
push
clc
nop
jnp
sbb
nop
cwtl
xchg
roll
cmp
loop
dec
movsb
push
out
adc
mov
mov
xlat
subb
inc
pusha
sbb
insl
inc
jle
faddl
cltd
loop
pop
adc
jnp
xchg
lds
aas
in
or
pop
ss
mov
outsl
fsts
subl
cmp
and
mov
add
xchg
xor
psubusw
and
paddusb
stc
movb
aaa
inc
das
cmp
inc
jecxz
mov
icebp
mov
or
or
xchg
mov
cmpsl
ds
cwtl
xchg
rep
or
dec
icebp
adc
adc
dec
jae
push
fmuls
mov
and
jl
push
movsb
in
mov
ret
mov
mov
cltd
cmpsl
mov
repnz
es
pop
xor
repz
nop
cli
popf
or
sti
movsb
xchg
inc
aaa
fstl
out
pop
sbb
cmpsb
pop
xchg
sbbl
mov
cmp
icebp
xchg
nop
xchg
xlat
testl
push
mull
aam
call
adc
dec
pushf
push
sti
aam
daa
mull
sbb
into
lahf
and
mov
add
nop
and
pop
cmp
xchg
lds
out
mov
std
repz
mov
inc
lods
xor
loope
scas
lods
adc
sar
je
shll
cwtl
imul
sbb
stos
sub
insb
sbb
outsb
js
xor
sub
xlat
fwait
push
xor
pmaddwd
cmpsl
cmc
stc
faddp
jbe
jl
icebp
cwtl
arpl
cld
dec
jo
in
push
inc
mov
and
mov
mov
xor
adc
in
int3
push
in
and
mov
pusha
lods
jmp
dec
outsb
push
fsubl
fstps
ja
push
lcall
inc
std
cmp
mov
enter
sarb
lods
stos
stos
aam
jmp
adc
mov
sahf
cld
fs
cmp
enter
dec
imul
enter
jle
push
mov
xchg
and
mov
sahf
cmc
scas
jl
add
mov
cld
push
mov
cmp
cmp
mov
in
aad
inc
mov
lods
out
out
leave
and
xchg
push
sbb
xor
push
fcomp
sti
fimuls
or
mov
insl
adc
addb
push
shll
push
inc
cmc
shlb
orb
pusha
sub
pop
adc
fidivrs
ret
sub
dec
add
mov
adc
stc
cmp
ljmp
jle
popf
push
xor
jge
mov
jne
mov
test
loopne
xchg
call
xchg
adc
inc
mov
inc
jmp
scas
mov
inc
scas
cmpb
popl
mov
mov
in
out
or
jnp
shlb
xchg
mul
clc
mov
pop
cwtl
push
or
subl
mov
and
add
aaa
xor
arpl
xor
imull
imul
in
push
pop
push
shr
subl
aas
fwait
mov
mov
xchg
inc
cmc
lods
cmc
add
and
mov
add
std
lret
push
sti
jmp
stos
push
shrb
jge
std
lcall
ss
mov
repnz
mov
push
aam
lahf
mov
in
cmp
stc
movsb
rolb
addr16
nop
ljmp
xor
rclb
xchg
rcr
sbb
adc
mov
dec
int3
mov
icebp
add
or
adc
xchg
push
xor
gs
fwait
rcrl
and
jle
icebp
lcall
mov
pop
mov
sbb
in
push
popf
decl
or
jecxz
mov
stc
mov
ljmp
mov
cmp
adc
gs
cmp
sub
dec
sbb
arpl
pop
sub
pushf
enter
or
or
xchg
pop
gs
mov
and
or
pop
test
loop
push
data16
add
xchg
pop
fisubrs
pop
outsl
fwait
or
lods
sbb
push
fcomi
icebp
adc
pusha
test
popa
dec
jnp
jmp
loope
sub
pop
les
ss
cmc
xchg
dec
stc
imul
jmp
not
inc
dec
inc
sub
or
iret
js
icebp
cmp
adc
fs
jae
xchg
push
ljmp
add
or
xor
repz
ljmp
outsl
xchg
dec
out
sub
sbb
push
adc
sbb
xor
and
inc
arpl
inc
xchg
push
cmpsb
nop
or
add
inc
sub
dec
cmpsb
movsb
push
xchg
or
inc
and
fdivrp
push
test
int
pop
pop
pop
dec
shll
adc
jge
pop
adc
divl
sub
jae
fdivrs
popa
movsl
mov
inc
aas
scas
inc
adc
nop
negb
rcll
cmp
push
gs
loope
loope
sbb
in
test
pop
xchg
pop
out
push
movsl
inc
loope
xor
xchg
mov
mov
add
pop
xor
mov
ret
fs
and
inc
mov
cmp
inc
das
jb
jle
std
mov
mov
faddl
out
sub
jecxz
mov
or
sbb
movsl
and
or
and
rclb
xchg
out
sahf
in
or
lds
fnstsw
lods
fldt
shlb
pop
mov
imul
inc
fcmovu
cli
jp
ja
jbe
jo
xchg
jmp
sub
je
mov
pop
push
rcr
orl
pop
and
stos
jg
imul
mov
and
mov
rorb
inc
jmp
ds
pop
push
cmp
mov
cli
mulb
mov
stc
push
xor
arpl
fidivrs
mov
loope
mov
hlt
cmp
shr
pop
jns
dec
xorl
iret
sbb
mov
mov
divb
jg
mov
fs
push
mov
test
mov
push
cmp
sub
insb
or
aas
sub
pop
jbe
rcl
mov
mov
xchg
inc
cmpb
test
inc
xor
leave
add
bound
fs
jb
jle
push
pop
xchg
dec
jae
movsl
mov
jne
inc
or
xchg
jecxz
stos
es
sbb
das
adc
adc
jge
fstl
push
mov
mov
arpl
popa
out
dec
mov
jmp
into
scas
popl
and
in
pop
iret
fists
add
fwait
pop
xor
loop
mov
push
orl
stos
insb
idiv
mov
popa
stc
imul
xchg
fsubl
jno
xor
push
xchg
dec
icebp
int
jge
orl
lahf
cmp
push
inc
repnz
add
leave
adc
adc
je
mov
dec
pop
push
push
xlat
aaa
xor
cmp
jg
push
loopne
popf
inc
imul
repz
icebp
imul
push
clc
xchg
push
call
pop
sti
xchg
mov
mov
out
jmp
shll
faddl
test
outsl
or
std
in
jno
pop
mov
and
ljmp
add
or
xor
push
mov
aad
xchg
int
sub
sahf
dec
jae
adc
add
add
adc
pusha
ret
jo
lds
push
sahf
popa
leave
into
rcrl
jnp
lods
shll
psrld
insb
push
fnstcw
jecxz
jp
sarl
cltd
notb
aam
nop
cmp
pop
xor
or
pop
push
mov
dec
add
int3
in
rcrl
popf
push
stos
xchg
decl
shlb
sub
in
or
cmp
mov
stos
stos
push
add
add
xor
out
lods
andb
jnp
cmpsb
adc
out
mov
bound
or
mov
int
dec
lods
or
shrl
cmp
ja
in
add
or
add
push
loop
and
sub
ret
mov
gs
dec
loopne
test
push
gs
mov
jge
repnz
and
add
and
lods
or
loope
add
les
push
clc
aas
mov
mov
push
dec
je
jns
xchg
push
notb
dec
dec
aam
push
lods
pop
inc
je
sub
or
dec
jg
lret
cmp
push
push
mov
movl
jecxz
and
cmp
fisttps
and
jae
mul
clc
ljmp
push
xchg
in
push
or
pop
push
idiv
push
xor
out
and
mov
add
loopne
sub
dec
jp
mov
clc
cmp
insl
push
das
loop
jge
loope
fwait
ss
xchg
incb
push
imul
dec
jmp
mov
cmp
xlat
pop
jae
loop
dec
mov
add
xchg
cwtl
jae
cwtl
push
sbb
or
adc
jge
dec
mov
push
je
clc
sub
out
insl
mov
bound
jmp
xor
mov
cltd
mov
mov
add
push
sbb
xchg
arpl
inc
in
in
fbld
int
popf
ds
adc
es
mov
jno
lods
jmp
cmp
mov
sahf
hlt
test
dec
add
mov
and
or
xor
xor
jbe
scas
fiadds
int
fsubs
test
inc
push
mov
leave
pusha
int
dec
aam
xor
sub
pop
cmp
negl
pop
mov
fstpt
and
addb
pushf
std
out
sahf
movl
into
mov
and
push
xor
push
jp
movsl
jb
adc
pop
push
cmpsl
in
add
stos
dec
pop
xorl
test
fs
fwait
mov
jns
dec
sti
mov
mov
dec
lcall
es
cwtl
xchg
and
push
mov
inc
sbb
addr16
and
pop
imul
mov
cmp
dec
mov
pushf
sahf
and
in
aaa
inc
push
and
ret
xor
fists
push
push
fldcw
xor
orl
je
and
inc
sahf
out
xchg
ljmp
gs
xchg
repnz
fucom
sub
sub
out
test
push
mov
mov
sub
in
ljmp
and
jnp
dec
sbb
gs
into
jnp
add
and
push
clc
cmc
mov
and
xchg
scas
mov
mov
outsl
dec
push
sbb
out
insb
adc
imul
pop
sbb
xchg
ss
mov
sub
loope
test
orb
jmp
pusha
mov
jne
push
sub
imul
outsb
aad
dec
jl
jp
ret
sbb
icebp
jnp
jb
adc
or
add
out
aam
ljmp
inc
daa
das
lahf
pop
mov
cmp
in
in
cmp
stos
mov
andb
lods
push
fistps
das
mov
pop
push
and
adcb
popa
sub
jg
mov
cwtl
cmc
pusha
jle
xor
add
and
jl
and
dec
jae
ret
jns
adc
mov
pop
inc
inc
insl
mov
call
stos
mov
scas
insl
cmpl
add
or
aam
push
pop
xchg
mov
js
jo
out
hlt
data16
adc
repnz
xor
xchg
add
popa
sti
push
add
cmp
cwtl
popa
xlat
inc
ret
or
popa
nop
cmp
shll
mov
push
cmp
or
mov
shrl
cmp
das
dec
and
aaa
dec
jno
dec
sub
push
dec
adc
fiadds
js
cmc
lret
jge
mov
lcall
add
enter
rcll
popa
and
push
repnz
test
clc
sbb
xchg
sbb
addr16
dec
bsf
inc
shrb
lahf
lock
and
adc
and
jle
cwtl
hlt
fstpt
mov
pop
cli
shrl
shl
mov
dec
testb
jle
hlt
lret
out
adc
fidivl
and
cmp
mov
and
test
jno
jns
inc
sbb
adc
movl
xlat
sbb
imul
call
and
mov
mov
sbb
adc
lret
lret
dec
stos
pop
mov
data16
fisubs
fsubrl
loopne
add
mov
rcl
or
adc
push
shrb
scas
fnstsw
mov
push
sbb
and
ja
xchg
out
setbe
and
scas
mov
fnstsw
or
frstor
jecxz
jge
push
inc
cmp
fs
inc
nop
pop
xchg
push
es
push
stc
enter
pusha
leave
fsubs
leave
add
jge
dec
push
mov
nop
jg
std
inc
stos
cmp
jae
and
stos
mov
and
aaa
push
mov
cmpsb
fwait
loope
subb
stos
lds
lds
xchg
push
or
pop
in
ret
pushf
fs
outsl
inc
xchg
jnp
pop
add
jbe
mov
add
xor
mov
adc
adc
gs
je
filds
dec
sub
pop
test
push
jns
lret
or
or
mov
jbe
cmp
jmp
jmp
popf
xchg
sbb
jle
push
mov
cmpl
xor
das
repnz
lods
mov
inc
lods
push
pop
mov
jns
add
or
call
cmpsb
push
push
aam
pop
cmpsl
jnp
mov
int3
ljmp
inc
jno
cmp
sahf
pusha
xlat
add
jns
paddsb
rcr
arpl
adc
and
xchg
inc
adc
push
std
in
out
data16
add
add
push
aam
int3
rcrl
and
addr16
jg
adc
rorl
jb
mul
testb
jo
jnp
lods
push
push
pop
push
jae
pop
popa
ds
add
lret
cs
jle
enter
bound
jo
cmpsl
inc
push
notb
push
pop
mov
sar
fisubs
xor
in
test
jp
or
dec
xchg
roll
pop
sub
push
sbb
lea
sub
xchg
sar
mov
mov
or
pop
dec
dec
lret
ficomps
push
mov
fwait
or
adc
mov
push
sbb
push
xor
mov
dec
cli
mov
xlat
and
mov
lcall
bound
xor
aam
and
push
call
imul
jge
mov
sub
pushf
daa
out
pusha
and
cmp
std
in
andb
mov
mov
mov
or
mov
jae
fsubrp
mov
inc
push
mov
orl
sub
jns
dec
int3
orb
lret
movsb
paddq
or
ret
dec
movsl
das
ret
cmpsl
aas
or
xor
push
push
xor
jno
fdivs
adc
enter
xor
xor
movsb
xchg
adc
inc
clc
out
xor
push
sbb
fdivs
xlat
lret
jle
out
or
dec
mov
mov
and
loopne
add
inc
xchg
inc
in
and
js
mov
dec
nop
adc
push
mov
mov
addr16
cli
mov
xlat
stc
aas
into
add
pop
fisttpl
jg
pop
ss
xchg
mov
adc
push
lahf
enter
add
inc
mov
xchg
sbb
push
out
mov
clc
dec
test
or
cmp
aam
cmc
push
or
dec
mov
mov
shlb
test
push
test
lods
sbb
mov
dec
neg
icebp
out
adc
adc
sahf
push
sub
out
addl
xchg
ljmp
das
ss
aas
jp
out
and
addr16
mov
add
nop
and
push
push
inc
dec
mov
lret
pop
jns
sarb
or
popa
repz
mov
pop
xlat
lahf
les
inc
sub
cmp
int3
pop
mov
dec
mov
shrl
jg
add
inc
sub
jp
dec
and
adc
aad
inc
pop
sub
jo
loopne
stos
or
subl
push
pop
addr16
pushf
push
pop
sub
inc
inc
nop
inc
cmc
jecxz
mov
and
imul
push
cmp
repnz
cmp
jg
mov
pop
jne
out
pop
adc
lret
je,pn
xor
leave
xchg
xchg
pop
inc
idivl
js
aaa
lods
imul
sbb
lea
lahf
push
movsb
fwait
jl
jmp
sub
pop
xchg
push
cld
or
or
mov
aaa
push
mov
in
data16
or
sbb
cmp
movsl
push
mov
mov
mov
pop
push
mov
xchg
popa
mov
xor
sub
jmp
bound
scas
les
and
xor
psubb
aas
fiaddl
arpl
sahf
stos
jne
ret
jg
or
xor
xorb
jb
sbb
adc
inc
mov
mov
outsb
in
mov
adc
sub
cmc
xor
mov
movsl
mov
in
mov
dec
xor
lods
pop
jmp
rcr
mov
jo
enter
fstp
sahf
iret
add
mov
aam
fnsave
test
xchg
mov
mov
pop
jl
dec
sub
add
icebp
sbb
dec
out
lea
xor
add
pusha
pop
lods
push
xchg
jmp
push
mov
cli
clc
sti
mov
pop
xchg
lret
sbb
sbb
loopne
insl
or
and
shrb
push
cwtl
leave
pop
imul
xchg
jp
sub
fwait
je
xchg
sbb
mov
push
jne
push
cltd
scas
ret
add
mov
jmp
out
es
mov
in
xchg
mov
or
push
popa
adc
mov
enter
je
mov
stos
rcr
aaa
int3
jbe
imul
cltd
pop
mov
mov
sbb
imul
adc
xchg
leave
hlt
push
aaa
dec
repnz
mov
jo
pop
mov
mov
dec
push
and
xor
mov
inc
jg,pn
jns
adc
push
jo
imul
in
pop
aas
inc
or
fsubrl
mov
aas
in
adc
stos
jle
push
leave
xchg
jns
ljmp
cmpsb
or
cwtl
clc
cmpsb
inc
sbb
fcom
inc
shlb
int3
mov
inc
inc
jbe
mov
addr16
test
clc
sti
lahf
sub
movsb
es
lods
int
test
lahf
and
xchg
or
sbb
sub
test
xor
push
xor
mov
call
shll
sub
add
icebp
cmp
mov
jae
lock
push
mov
cmp
fbstp
aam
xor
mov
arpl
jmp
dec
inc
lahf
ja
lcall
test
xchg
add
rcrb
cmp
mov
enter
and
push
lret
ret
popa
mov
movsb
or
repnz
jl
shlb
jecxz
sbb
ds
out
jns
mov
jecxz
leave
push
jb
jle
fcmovnu
add
mov
push
jl
push
test
idivb
fistpll
push
push
xchg
lcall
mov
ljmp
or
mov
rcrb
push
xor
add
mov
and
or
mov
insl
push
inc
jle
lods
lret
cmp
xor
and
mov
adcl
enter
jns
repnz
inc
xor
add
out
shrb
xchg
adc
out
jae
lret
push
jns
dec
fistpll
mov
mov
xor
shlb
or
test
cmpsb
sbb
mov
mov
fcmovne
xchg
mov
dec
inc
enter
sti
push
pop
mov
sbb
mov
adc
sbb
push
dec
mov
mov
pop
incl
xor
testl
lods
and
lds
jecxz
mov
movsl
in
call
fs
add
mov
mov
sti
pop
call
add
add
inc
xor
lea
pusha
inc
das
test
xor
xlat
mov
sti
sbb
mov
cmp
lahf
dec
rorb
mov
dec
cli
dec
push
es
xchg
outsl
xchg
test
adc
mov
test
pop
push
mov
pop
inc
hlt
out
sar
mov
imul
arpl
xor
adc
std
into
inc
lods
sub
data16
js
cld
fists
xor
icebp
aaa
cwtl
push
add
push
aam
and
ror
arpl
ret
mov
insl
int3
sub
add
xor
jecxz
xor
inc
fdivrs
cmp
fildll
pushf
pop
bound
mov
xor
lret
pop
xor
lret
out
popf
cli
xchg
sbb
cli
movl
add
idivl
and
fistpll
cmp
repnz
cmc
push
mov
or
mov
insb
xchg
fisttps
mov
rclb
cmpsl
ds
mov
icebp
cltd
test
cmp
and
push
xor
cmp
dec
pop
or
dec
sti
dec
inc
sub
adc
scas
mov
out
loop
ret
outsb
jnp
into
outsb
push
xchg
fisubrs
or
sbb
int3
push
shrb
xchg
je
mov
inc
add
les
nop
in
sub
mov
mov
mov
mov
decb
pop
jle,pt
in
dec
push
fstpt
dec
push
int
fnstsw
dec
lods
push
pop
xchg
aas
push
push
add
and
jo
jnp
scas
pop
mov
subb
sub
out
add
and
add
push
cwtl
es
icebp
dec
out
gs
cld
mov
add
mov
in
cmp
sahf
arpl
rol
mov
addl
mov
jae
dec
inc
push
fcmovnb
movsb
cld
or
mov
sbb
pop
cld
cld
ss
dec
cltd
js
js
negl
stos
pop
arpl
fs
sbb
jge
sti
mov
cld
cltd
jne
insl
sub
inc
xchg
popf
cld
mov
mov
sub
xchg
mov
add
xor
daa
sbb
mov
sub
or
xchg
outsb
mov
cmpsl
jmp
repz
cmp
mov
xlat
push
leave
test
push
sub
stos
adc
dec
ret
enter
pop
inc
cli
jp
push
ljmp
jnp
cmc
call
repnz
inc
inc
xchg
shlb
cmp
xor
pop
pop
mov
into
cmp
sbb
inc
repnz
shrb
call
add
test
sti
outsb
mov
push
sub
mov
cwtl
mov
repnz
sub
push
pop
addr16
jbe
sarb
push
lods
lret
add
in
mov
xor
mov
dec
dec
cwtl
sbb
popa
push
mov
xchg
adc
addr16
xchg
jmp
cmpsb
es
cmc
je
loopne
jp
push
and
mov
sub
outsb
arpl
or
lods
addr16
clc
add
dec
loope
push
fwait
xor
jmp
mov
and
dec
or
inc
insb
mov
outsb
adc
sub
sbb
call
call
mov
push
xor
and
loope
cmp
pop
orl
dec
cmp
mov
roll
loopne
mov
ret
cmovbe
and
dec
scas
push
aaa
mov
leave
cmpsl
push
sbb
ja
or
repnz
insb
aas
pop
mov
addr16
add
jge
sarl
sub
sub
pop
cld
mov
pushf
fwait
push
mov
jle
mov
and
lea
in
jae
or
push
imull
repz
xchg
cmp
push
outsb
mov
push
add
leave
xor
jbe
sti
xchg
and
loopne
ds
aaa
dec
lahf
add
xor
int3
imul
les
clc
inc
jl
adc
je
or
and
jne
inc
jns
dec
outsl
scas
movsb
lret
sub
mov
adc
ja
inc
jb
and
cld
xchg
arpl
jnp
insl
inc
in
cmpsb
pop
xor
xchg
jl
sahf
int3
bound
pop
adc
xchg
test
inc
sub
and
mov
mov
sti
mov
lcall
in
imul
xor
leave
rcl
jnp
out
cltd
test
std
cld
es
xchg
ss
cmc
fdivr
adc
dec
adc
adc
loop
out
adc
pop
mov
push
fcoms
or
xchg
and
push
fadds
enter
int
xlat
jbe
imul
loop
call
add
data16
cmc
sub
lods
jmp
int3
dec
cmc
decb
inc
mov
adc
jle
dec
out
pop
mov
pop
cmpsl
cmp
adc
adc
mov
xlat
mov
shlb
imul
ror
adc
mov
lcall
add
in
sub
xor
dec
pop
cmp
fxch
cmp
and
test
call
adc
js
cmp
outsl
movsb
loop
add
push
fwait
add
fs
adc
fidivrl
push
into
ficoms
cmp
in
sbb
mov
lret
adc
mov
xchg
outsb
js
inc
xchg
nop
xchg
push
cs
cmp
push
add
add
mov
fiaddl
int
pop
addr16
xchg
or
mov
fcomps
adc
adc
cmc
push
pusha
test
mov
xchg
cmpsl
sti
addb
mov
jl
cmpsb
ss
add
inc
jle
inc
mov
add
sbb
xchg
or
ja
add
push
or
js
lods
aam
je
add
out
pop
stos
inc
pusha
lret
pop
pop
jbe
adc
cwtl
xlat
ja
int
push
pop
jecxz
push
testl
push
adc
sbb
enter
mov
loopne
mov
clc
inc
out
dec
mov
popf
mov
cmp
loop
sub
dec
xor
inc
mov
popa
or
add
jmp
es
loopne
clc
jp
movsl
xchg
mov
mov
fsts
xor
xchg
mov
scas
xor
mov
pop
es
mov
adc
in
nop
or
mov
mov
rcrb
pop
stc
adc
mov
negl
fsubl
shll
in
insb
mov
pop
inc
lret
sub
rorb
jb
dec
decb
and
movsl
inc
lcall
push
loope
cmp
or
xchg
sarl
and
das
adc
and
test
aaa
jl
popf
jp
outsb
push
jp
ja
xor
adcb
mov
cmp
sarb
adc
repnz
jmp
lods
ss
add
jmp
xor
add
ljmp
sbb
push
sub
les
pusha
jo
mov
popf
mov
mov
sarl
loop
mov
lock
add
aas
inc
ror
sub
jg
daa
out
call
test
nop
out
loop
inc
sub
mov
pop
mov
cltd
in
add
mov
insb
pop
lcall
xchg
int
dec
es
inc
lods
insl
dec
and
in
mov
pop
sub
cmp
push
mov
adcl
cmp
dec
daa
mov
mov
jp
fldl
movsb
and
jp
hlt
inc
in
inc
pop
loope
sub
and
or
in
sbbb
out
fucomp
sub
lods
test
xor
inc
mov
adc
aam
jle
dec
jbe
jle
push
jne
lcall
cmpsl
push
les
call
and
ret
add
ucomiss
adc
dec
scas
pop
stc
and
enter
add
sbb
out
fucomi
je
push
out
fnsave
or
fiadds
nop
addl
bound
lods
push
lcall
xor
and
mov
or
xchg
inc
add
mov
jbe
mov
icebp
mov
or
add
sub
pavgb
push
push
sbb
xchg
jbe
inc
mov
subb
pop
mov
cmp
push
add
sbb
push
mov
push
pop
sbb
jb
mov
jno
mov
push
sub
shll
adcb
hlt
xchg
andb
sub
popa
shr
je
and
dec
cmp
aaa
out
fdivrl
add
mov
dec
xchg
adc
hlt
loope
insl
hlt
adc
cmp
or
lods
lock
imul
xchg
ljmp
hlt
or
adc
and
lea
jp
jge
xchg
sbb
ret
movsb
fs
dec
subl
ret
insl
fs
jg
adc
and
jl
inc
insb
rorl
insb
imul
lock
shl
imull
adc
mov
jg
insb
xchg
ljmp
push
pop
pop
add
sti
sbbb
add
jl
aaa
push
jb
inc
test
xor
jg
jne
sub
ret
out
mov
xchg
stc
sbb
xchg
inc
push
lret
pop
mov
cs
gs
xchg
lods
cmp
cwtl
add
movsb
jae
jae
mov
pop
dec
dec
aam
xor
aam
and
xor
push
jle
orl
nop
jle
ljmp
inc
in
mov
mov
out
out
out
push
pop
mov
cmp
in
jmp
jb
sbb
pop
sub
sub
and
mov
sub
mov
movsl
mov
movsb
aaa
fld
sub
xchg
clc
inc
mov
jns
inc
std
sub
mov
movsb
sbb
mov
inc
pop
shrb
je
and
cwtl
jle
das
cs
daa
dec
sahf
cwtl
gs
out
add
xor
adc
push
cwtl
adc
movsb
cwtl
jns
cs
fists
pop
add
lcall
sbb
add
dec
insl
xor
mov
jbe
cmp
adc
push
and
push
push
inc
push
jae
outsl
push
pop
jp
jge
pop
shl
xchg
notl
scas
orl
sbb
es
icebp
in
icebp
sbbl
xlat
push
pop
mov
jnp
nop
cmp
or
push
aad
and
insb
into
inc
pop
fcoms
andb
fstl
xchg
loop
xor
mov
jmp
loope
imul
fstps
and
xchg
test
out
es
xor
fadd
xor
mov
push
shl
mov
outsl
lcall
sub
dec
rclb
cltd
dec
xchg
into
ljmp
xor
adc
movsl
inc
mov
mov
adc
inc
leave
movsb
jne
sub
adcl
andl
jo
nop
iret
cli
adc
xor
sbb
push
adc
jl
mov
pop
push
insb
cld
out
pop
jl
outsl
imul
cli
jg
push
data16
dec
inc
movsb
push
mov
neg
push
jecxz
pop
ljmp
inc
jbe
inc
xor
push
pop
or
add
stos
scas
and
leave
sub
push
adc
sbb
mov
lcall
addr16
stc
mov
dec
sub
or
mov
mov
aad
cwtl
add
fs
enter
lods
dec
and
dec
nop
dec
stos
sub
mov
sti
ljmp
shr
ficompl
inc
sbb
push
push
dec
loop
jge
je
in
daa
lods
loopne
repnz
mov
mov
inc
stc
fsubrl
pop
daa
mov
movsl
icebp
inc
imul
js
add
inc
push
adc
cmp
fdivs
and
test
out
xchg
leave
xor
pop
addr16
lea
insb
enter
dec
imul
lret
xchg
xchg
stos
addr16
pushf
rorb
push
xchg
mov
pop
or
add
xchg
mov
iret
push
sbb
fildl
pop
xor
dec
pop
dec
or
adc
clc
ljmp
and
push
push
cs
mov
dec
mov
or
push
inc
mov
inc
insb
imul
xchg
and
filds
out
mov
pop
xor
out
mov
outsl
mov
les
mov
push
mov
and
xor
sarb
adc
push
lret
sbb
test
jp
jno
mov
je
push
fnsave
lcall
out
out
in
dec
in
outsb
loop
sbb
stos
inc
stos
sub
repz
jmp
sbb
mov
cmp
into
push
cli
jmp
clc
jno
bound
es
iret
jl
sub
test
pop
popa
pop
dec
mov
loop
and
sti
dec
pop
out
mov
outsl
popf
and
ret
mov
movsb
inc
mov
mov
aad
lea
push
into
or
ja
stos
adc
sarb
push
xchg
das
cs
repz
fucom
or
gs
mov
fbstp
fnsave
xchg
and
shll
cmpsb
cmpl
iret
cmp
movsb
add
add
add
mov
pop
push
fs
inc
out
mov
cmc
pop
push
cmp
ja
sub
jge
lahf
stc
cmp
inc
push
rcrb
nop
dec
movsl
imul
stos
lahf
adc
jp
and
jbe
jmp
fstps
arpl
adc
les
push
mov
out
add
stc
and
adc
outsb
and
mov
loopne
dec
sub
pop
push
into
fsub
loop
xor
push
ljmp
pushf
jp
mov
out
xor
mov
jl
sub
jle
mov
push
pop
pop
int3
mov
push
pop
mov
loopne
dec
jns
xchg
shll
testb
mov
pop
xchg
xchg
fistpl
push
xchg
test
stos
push
dec
flds
outsl
push
pop
lret
jns
cs
js
cmpsb
xor
inc
cmpsl
mov
add
or
push
aad
jbe
jle
icebp
mov
lret
out
iret
orb
cld
mov
icebp
sbb
dec
and
or
add
fistpll
mov
int3
and
jno
ljmp
sbb
imul
bound
lahf
add
mov
jge
repnz
sbb
or
stc
jecxz
icebp
jbe
dec
dec
or
jge
inc
adc
popa
xor
movsl
xchg
cld
hlt
sub
arpl
xchg
mov
mov
ret
xchg
mov
mov
or
aam
xor
dec
or
xor
fwait
mov
dec
fldenv
xchg
imul
push
dec
les
pushf
pop
adc
xchg
js
and
ljmp
pusha
testb
dec
fcmove
cmpsl
sub
scas
jg
cmp
clts
and
stos
cwtl
add
mov
or
pop
mov
push
es
push
sahf
adc
adc
xor
jb
bound
fisubl
fbld
scas
in
rcrl
hlt
adc
aas
jns
and
add
dec
xchg
pop
and
out
cmp
jo
xchg
iret
adcb
inc
dec
sbb
cmc
mov
fistpl
or
rcll
xchg
push
fwait
jb
mov
es
adc
xchg
push
pushf
jno
mov
dec
mov
xchg
dec
xchg
add
push
sbb
loope
fisttps
dec
aam
cmp
jb
add
icebp
hlt
mov
in
movsl
lock
pop
repnz
pop
jae
and
add
inc
inc
add
adc
mov
out
xchg
pop
cmpl
xor
sarl
cmp
sarl
fidivrl
push
pop
jne
xorb
pop
cmp
sub
out
test
mov
dec
jae
push
mov
fidivrl
arpl
jmp
pop
data16
mov
dec
xor
jp
popa
pop
neg
and
sbb
and
or
out
call
push
cli
push
imul
xchg
push
in
fisubl
mov
jno
pop
push
sub
rcrl
fadds
lds
adc
dec
sub
shl
or
lret
adc
push
iret
lcall
jnp
cmp
les
andb
jmp
ret
neg
out
inc
loopne
lods
rclb
ja
lret
or
pop
in
cmp
rcr
shr
jb
sub
cs
cli
rolb
inc
into
mov
fsts
lret
mov
mov
leave
mov
mov
int
dec
fucom
aad
push
add
negl
mov
xor
cmp
stos
and
lret
jmp
inc
mov
inc
mov
inc
mov
into
cmc
sbb
push
mov
xor
inc
cmp
jb
pusha
pusha
push
mov
repnz
push
jl
test
subb
pusha
sub
inc
mov
leave
adc
dec
jp
leave
jl
push
inc
rclb
decl
push
mov
jl
test
add
jmp
xchg
sbb
push
ret
sti
or
sub
jae
mov
nop
nop
fiaddl
fucomp
mov
mov
mov
fmulp
or
cmpsl
and
bound
rorb
jbe
xchg
or
sub
jl
push
adc
das
mov
shlb
inc
mov
aam
pop
es
jno
push
test
faddl
add
nop
or
adc
sbb
sti
inc
dec
adc
in
cmp
sub
imul
jl
and
jecxz
out
jbe
xchg
dec
sub
and
and
mov
mov
enter
xchg
int
in
fsubs
lret
ret
mov
pop
outsb
xor
pop
popf
pop
adc
xlat
or
inc
push
xor
lcall
and
and
idivb
pusha
lds
mov
inc
mov
lods
inc
pop
jbe
adc
pop
add
push
push
push
loope
pop
adc
loope
adc
sub
insl
test
jae
xor
sbb
movsb
ret
and
aad
push
hlt
shrl
xor
jbe
mov
popf
fwait
xchg
test
lock
int3
mov
adc
dec
and
push
mov
test
out
out
rcll
call
xlat
test
adc
or
mov
stos
add
sbb
aad
cmp
sbbb
mov
ljmp
xlat
arpl
mov
and
dec
mov
ds
push
jnp
push
inc
imul
push
cmp
mov
sti
clc
lret
mov
loop
sahf
dec
lahf
test
mov
inc
aaa
jmp
mov
adc
outsb
xchg
cmp
mov
mov
mov
sbb
and
mov
inc
pop
adc
dec
bound
cmp
push
cmp
ss
mov
mov
jne
jp
scas
cmpsb
add
out
inc
xchg
int3
loope
pop
scas
xor
mov
mov
scas
mov
mov
mov
xchg
imul
pop
imul
sub
mov
cltd
popf
xchg
adc
dec
inc
ret
ja
mov
mov
dec
shlb
stc
xchg
jg
pop
sti
and
lret
inc
xchg
sub
mov
push
out
cmp
lods
in
cmp
push
repz
mov
sbb
sub
or
jp
mov
leave
movsl
imul
into
in
pushf
inc
xchg
popa
mov
nop
sti
cmp
mov
stos
sbb
cmp
dec
ja
aad
outsb
lea
rcr
lcall
mov
mov
and
jo
dec
icebp
or
cwtl
inc
mov
stc
and
in
icebp
dec
mov
lods
dec
fwait
movsl
mov
xchg
dec
jno
add
xchg
xor
lea
shlb
jmp
mov
inc
or
push
paddq
iret
add
push
mov
push
jbe
add
dec
js
pinsrw
mov
mov
es
ror
fmulp
lds
je
ss
jb
xchg
jmp
or
lods
jl
mov
cs
cli
pushf
mov
add
sub
pop
push
movsb
lea
rcrb
fists
or
or
clc
push
lods
xchg
cmp
das
lahf
shl
inc
sarb
dec
cwtl
lret
add
imul
inc
enter
scas
movsb
dec
repz
mov
jmp
and
pop
cld
cld
add
fisttpl
adc
insl
inc
mov
out
aad
int
xchg
mov
pop
xor
cmp
sub
loop
mov
mov
fldt
add
sar
frstor
sbb
pop
fcmovb
jl
fidivrl
push
pusha
enter
mov
in
cld
dec
daa
test
sub
xchg
fwait
jg
mov
out
test
fstl
or
add
sbb
cmpsl
aas
loope,pt
leave
setge
jb
inc
ret
mov
loope,pt
push
shlb
test
loop
cmpsl
and
cli
movsb
and
je
cltd
cs
adc
jecxz
shrl
dec
pop
les
scas
sub
aam
and
les
dec
jbe
frstor
inc
cmpsl
or
add
xor
push
dec
inc
jp
and
mov
movsb
xor
movsb
mov
inc
sets
test
push
mov
orb
mov
xchg
incl
lcall
hlt
inc
cmpsb
push
add
movsl
dec
enter
lahf
and
ljmp
pop
pusha
jmp
mov
jb
inc
sbb
or
lahf
aad
push
xchg
sbb
lods
sub
cmp
in
mov
mov
dec
pop
enter
sub
rcrb
cld
push
sub
stc
mov
add
jle
or
jne
push
out
test
ss
xchg
mov
idivl
mov
stos
adc
es
imul
rorb
sub
lret
mov
addl
rorb
add
popa
dec
and
pop
xor
cli
xchg
pop
mov
mov
rcrl
sub
inc
pushf
cmp
popf
into
das
mov
lods
cli
movsl
ret
cmp
or
push
xchg
lret
mov
in
fwait
push
jg
test
jg
lahf
or
lret
mov
xlat
ret
ficoms
inc
jle
repz
mov
inc
adc
mov
sub
cli
call
push
lcall
std
dec
add
xchg
sbb
xor
imulb
sbb
inc
stc
dec
sub
mov
xor
mov
popa
add
adc
call
gs
cmpsl
pusha
or
hlt
inc
jne
das
leave
mov
ficompl
sub
pop
inc
mov
subb
fdivrl
loop
jb
dec
inc
enter
mov
or
outsb
mov
xor
mov
mov
dec
loopne
push
jbe
in
shl
pop
incl
adc
pushf
mov
out
and
jecxz
adcl
test
je
jmp
ret
pop
arpl
xor
pop
imul
in
les
adc
mov
jmp
mov
hlt
xchg
inc
out
fs
xor
push
mov
pusha
scas
lahf
cmp
cmc
jg
in
and
jb
dec
mov
sbb
and
outsl
dec
or
mov
std
aas
repnz
test
lods
mov
cmp
loope
aaa
daa
mov
scas
push
dec
inc
sub
adc
push
jnp
push
ja
jecxz
xchg
jne
ja
inc
mov
lods
jle
pop
shr
lods
repnz
mov
cld
mov
xchg
popw
cmp
stos
outsb
mov
icebp
mov
pusha
outsl
movsl
test
mov
adc
mov
loope
sti
das
or
daa
mov
push
jge
icebp
jb
icebp
iret
mov
addb
add
out
dec
cs
aas
push
and
inc
mov
pop
stc
mov
jmp
out
mov
hlt
sti
mov
or
ljmp
cmpb
dec
les
adc
inc
das
push
lock
and
cltd
jg
add
imul
ret
out
or
and
dec
cli
in
sub
and
fcoml
insb
stos
add
scas
sti
or
fs
xor
mov
repz
mov
mov
sbb
dec
mov
xor
lcall
inc
mov
xor
and
push
cmp
lods
mov
push
add
jg
xor
dec
dec
xchg
dec
rcl
hlt
xor
mov
xor
rol
mov
out
mov
adcl
call
adc
into
adc
cmp
pop
add
test
xchg
ss
cmp
incb
rcl
sub
push
subb
push
popl
in
lds
movsb
popf
dec
sub
mov
lea
jno
jge
push
mov
adc
dec
cmp
push
add
lds
pop
adc
mov
daa
dec
push
xchg
jl
in
cmpsl
mov
cmc
mov
pop
bound
repnz
lods
push
daa
adc
fwait
mov
mov
fdivrl
mov
sub
scas
insb
dec
fwait
lds
leave
cmc
sbb
std
and
mov
bswap
push
rcrb
cwtl
adc
leave
mov
lods
insl
aad
adc
inc
push
sbb
dec
xchg
adc
out
mov
mov
addr16
loopne
mov
xor
fptan
dec
fldenv
div
dec
cmp
adcb
or
aad
ret
test
sarl
mov
push
or
lock
xor
and
pop
enter
sub
jecxz
mov
sub
mov
push
dec
jl
in
cmpsl
add
cli
cltd
jp
add
addb
jl
mov
pop
sub
negl
inc
jle
outsl
mov
jo
dec
lods
jle
jp
loope
scas
add
loopne,pn
bound
shrb
dec
dec
daa
push
testb
lock
sub
adc
rorl
enter
mov
mov
out
filds
sbb
or
imul
cmp
outsl
outsl
mov
loope
test
sbb
insl
ret
add
inc
repnz
shrl
cli
jo
incb
into
ds
cmp
xchg
sti
add
mov
popa
hlt
mov
test
add
andb
or
insb
mov
pop
stos
cmp
xor
imul
add
nop
inc
dec
mov
mov
shrb
xchg
pop
push
test
rcl
jp
dec
jno
ret
xor
or
out
jmp
xchg
jne
aaa
fwait
add
jbe
fnsave
addr16
dec
push
std
fnstcw
push
push
aam
out
xchg
push
sub
cmc
lcall
out
sti
out
subb
xor
int3
push
stc
and
xor
add
cmpl
mov
sub
shl
fs
dec
les
xchg
jmp
inc
push
insl
icebp
decl
std
fcompl
in
pop
data16
mov
mov
popf
add
add
enter
inc
cmp
and
ss
stos
inc
mov
cmpsb
in
lock
cmc
dec
inc
into
icebp
lahf
mov
jle
fiadds
push
fs
test
mov
cmp
push
inc
popf
repz
int3
push
scas
testb
inc
add
adc
fisubrs
jo
mov
sti
mov
in
xor
and
into
mov
sbb
stos
lret
and
xor
lods
add
lods
adc
jmp
inc
ret
pop
fwait
scas
pop
mov
insl
lods
jge
xlat
mov
les
outsl
enter
lods
dec
sub
mov
stos
inc
mov
popf
bt
push
insl
mov
hlt
xchg
invd
sbb
push
scas
addl
and
test
xor
loop
out
int
inc
cmpl
outsb
mov
mov
ja
lahf
jg
sub
cmpsl
xlat
lret
push
dec
or
sbb
mov
jb
insb
mov
dec
imul
xchg
aas
jbe
mov
mov
ljmp
jmp
mov
hlt
aam
inc
xchg
paddb
jne
leave
xor
sbb
jp
mov
or
sbb
mov
aam
xor
iret
adc
cmpsb
sub
dec
cmpsb
sub
jp
push
pop
sub
lahf
call
cmp
and
mov
enter
lock
ret
mov
and
xor
push
jno
xchg
mov
xchg
pop
sbb
insb
in
ja
leave
lret
stos
inc
xor
sub
inc
punpckldq
leave
sbb
jne
add
adc
fmuls
and
xchg
dec
adc
inc
icebp
mov
ret
pop
mov
mov
push
mov
inc
sbb
iret
push
push
cmc
outsb
test
fidivrl
in
push
gs
push
jno
sub
mov
inc
xor
imul
xchg
inc
cmp
sarl
aaa
mov
mov
jg
or
inc
in
stc
xor
insl
popf
push
lock
stos
testb
jns
movsb
imul
pop
hlt
aas
jecxz
sahf
jge
jmp
xchg
and
cmp
xor
dec
pop
push
jns
mov
mov
cli
adc
in
mov
jo
popa
mov
data16
out
dec
xchg
jae
jne
cmp
sahf
sub
and
mov
mov
ud0
shl
mov
out
jmp
fcoms
ret
pop
jmp
push
std
pop
stos
push
xlat
push
sbb
int
lret
outsb
es
in
jbe
ret
xchg
and
push
xchg
add
lret
sbb
shrb
inc
pop
mov
ljmp
or
das
int3
cmp
test
push
test
mov
mov
mov
mov
arpl
dec
and
push
arpl
xor
add
shrb
mov
sub
push
lods
mov
lods
scas
mov
cmp
or
rcl
ret
ret
into
negb
cmp
aas
or
pop
mov
push
movsl
push
test
dec
adc
incb
sti
adc
dec
sub
lcall
sbb
sub
out
stc
lea
mov
mov
or
add
cld
lods
cmp
xchg
dec
pop
cmpsl
pop
jle
jmp
in
and
sbb
fcoms
mov
test
cmp
enter
xchg
jmp
mov
cmp
add
stos
or
pop
stc
bnd
add
notl
mov
push
das
dec
shl
mov
cmp
mov
fisubl
xchg
jecxz
mov
lds
js
and
out
sub
inc
dec
cmp
sbb
or
js
jl
mov
pop
addl
mov
test
jecxz
xor
jb
out
jecxz
xor
and
mov
adc
loopne
fldl
sti
adc
fs
pop
into
push
call
jns
pop
xchg
inc
push
rorl
outsl
iret
imul
in
pop
xchg
or
sarb
fisubl
movsb
mov
sub
lods
cmp
ljmp
and
inc
cmp
jecxz
inc
fiadds
sti
jmp
std
mov
test
xchg
mov
clc
xchg
jb
stc
int3
and
jo
sahf
js
lcall
call
adc
cmp
mov
xor
cmpb
adc
insb
js
dec
shl
je
push
sbb
or
cld
sub
aaa
or
pushw
adc
stos
xor
mov
xchg
iret
sub
cmpsb
dec
out
push
xchg
dec
fucomp
xchg
pop
xchg
neg
outsl
int3
or
pop
in
fstpt
dec
mov
rcrl
insl
lods
fisubs
pop
adc
shrl
pop
mov
xchg
addl
xor
jl
outsl
testb
mov
stc
push
xor
sbb
xor
dec
call
jo
inc
mov
cmp
dec
outsl
xchg
inc
mov
sub
movsl
dec
mov
les
outsb
sbb
xchg
mov
das
data16
cmpsl
cmpsl
jb
jecxz
iretw
loopne
or
or
ffreep
push
add
sub
push
sbb
div
push
mov
adc
push
fst
imul
jle
sub
std
stc
out
lahf
movsl
mov
test
dec
mov
mov
sahf
mov
inc
xor
out
jge
mov
fs
lret
sbb
dec
sbb
std
dec
adc
pusha
sub
fadds
jmp
movsl
shlb
xchg
movsl
sub
cmpsb
mov
or
lods
pop
push
jmp
sbb
les
fcom
and
repnz
fcos
loop
xchg
pop
ret
jo
lods
das
or
imul
pop
sbb
dec
mov
sbb
add
and
fidivl
pop
movsb
xchg
shll
push
add
adc
adc
pop
jmp
cld
inc
movsl
inc
cs
ret
ss
in
push
pusha
inc
popa
cmp
out
xor
ss
mov
and
frstor
shrb
lods
cmp
pop
test
icebp
stos
add
jecxz
outsl
adc
aad
adc
adc
or
int3
in
xchg
shlb
mov
pushf
mov
frstor
jb
mov
orb
inc
push
in
push
sbb
xchg
add
fidivs
in
imul
outsl
jmp
fcmovne
mov
das
imul
mov
popa
data16
mov
imul
xchg
mov
adc
adc
sub
ret
push
and
sub
sbb
mov
addr16
inc
inc
push
push
insb
jae
or
push
movsl
cmc
and
or
dec
std
stos
sbb
adc
int3
pushf
pop
dec
cld
test
and
bound
xor
mov
in
fucomp
aad
jno
imul
mov
pop
mov
je
repnz
mov
mov
sbb
push
andb
movsb
in
xorl
rol
add
jle
pop
pop
fwait
out
pop
aas
iret
push
out
test
aaa
xchg
mov
cwtl
jge
je
mov
xchg
cli
mov
test
mov
je
ja
jo
repz
or
cmpsb
mov
jmp
or
add
add
add
add
aas
add
pop
add
adc
adc
cmp
add
inc
ljmp
add
add
addb
add
sbb
clc
push
fmul
inc
add
pop
pop
add
loopne
add
xor
add
mov
