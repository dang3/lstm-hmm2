jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
nop
inc
add
or
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
test
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
mov
std
leave
adc
add
nop
add
dec
std
leave
adc
mov
std
leave
adc
add
cwtl
add
jo
leave
adc
mov
std
leave
adc
add
mov
add
cmp
mov
add
test
int3
adc
add
add
std
leave
adc
add
mov
int3
adc
add
int3
pop
mov
std
leave
adc
add
rolb
dec
adc
cmp
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
lahf
inc
add
cmp
pushf
inc
add
cmp
mov
add
mov
mov
add
push
call
pop
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
push
call
mov
int
mov
movsl
pop
ret
add
in
aad
mov
popa
fxch
add
add
mov
xchg
add
mov
test
cld
add
shl
add
lahf
pop
add
fdivrs
xchg
add
add
add
jp
mov
push
add
add
mulb
add
ja
add
cmc
add
pushf
add
pop
out
mov
xlat
jbe
add
add
jge
add
add
fstp
add
fcomps
int
add
cwtl
jle
jo
add
push
test
add
out
add
add
add
mov
add
rolb
fnstcw
add
add
sar
mov
icebp
icebp
push
push
scas
add
add
add
jbe
jp
lods
add
mov
in
fistpl
add
movsl
add
push
mov
add
push
push
push
push
push
call
add
cmpsl
add
add
and
mov
add
mov
mov
stc
jns
stos
push
jae
jmp
jno
testb
pop
push
add
add
subl
add
mov
xlat
add
loopne
push
xlat
add
ret
lods
pusha
pushf
loope
test
add
add
clc
mov
mov
adc
inc
cld
add
add
popl
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
icebp
jo
add
clc
rolb
jne
push
add
lahf
add
mov
mov
mov
mov
flds
jge
add
fsubrs
add
xchg
add
mov
jo
aam
push
out
je
add
shrb
xchg
jl
add
add
lds
xchg
jecxz
mov
mov
add
xchg
mov
aam
bound
pop
push
push
push
call
jo
add
lods
mov
cli
pop
add
loopne
add
push
mov
insb
std
add
add
xlat
imul
ja
cmpsl
mov
mov
pushf
add
les
mov
add
push
pop
insb
mov
add
lahf
fcomip
add
mov
lea
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsb
sarb
mov
insb
add
add
add
add
add
movsl
add
rolb
jl
notb
orl
pop
int
add
scas
push
xchg
lods
add
add
clc
loope
movsl
push
test
add
add
add
add
fwait
out
jb
add
lcall
add
sbb
lods
cmp
add
push
lea
push
lea
push
lea
push
push
push
push
call
add
test
mov
mov
add
lds
mov
icebp
imul
add
rcr
add
xchg
je
add
pop
jb
add
arpl
in
jge
push
add
add
add
xchg
lock
repnz
add
cwtl
add
lcall
add
add
mov
pop
mov
add
mov
addr16
add
cmpsb
shll
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
call
jbe
mov
iret
mov
loop
leavew
imul
fmuls
add
in
pusha
fildl
insb
add
mov
add
loope
stos
add
enter
leave
push
pop
fcoms
push
pop
int3
add
mov
int3
imul
add
test
pushf
mov
and
and
jmp
push
lea
push
push
push
push
push
push
call
add
shll
rol
add
sarl
add
add
add
xchg
add
icebp
add
add
hlt
add
add
hlt
fsubrs
arpl
mov
push
imul
add
rcr
fstp
add
mov
add
add
push
jae
ja
add
mov
xor
add
pop
ret
mov
mov
push
push
push
lea
push
push
call
movsb
add
in
add
jmp
leave
add
in
cmpsb
negl
push
sti
jmp
xchg
repnz
enter
popa
xchg
add
add
mov
add
add
add
add
add
lcall
out
add
popf
pop
nop
mov
jbe
pop
mov
add
test
pusha
icebp
add
add
mov
lea
pop
add
add
push
push
lea
push
push
push
push
lea
push
call
test
mov
movw
pop
into
ja
imul
add
add
jns
aam
std
add
pushf
add
out
lea
outsl
rcr
movsb
mov
addl
loope
add
out
add
out
gs
pusha
mov
test
cmc
mov
add
add
fdivrs
mov
jmp
iret
mov
out
repnz
add
jp
xorb
pop
add
mov
push
push
push
lea
push
push
call
jnp
mov
jns
add
push
add
lea
mov
sarb
pop
ja
jbe
pop
fucom
fs
push
testb
pop
add
mov
xchg
je
add
in
add
imul
push
add
xchg
xchg
add
out
add
flds
add
add
scas
scas
hlt
add
pop
xor
push
push
push
push
lea
push
lea
push
call
lock
add
fildl
push
jb
add
add
mov
pop
ljmp
jne
lret
add
xchg
mov
add
icebp
mov
aam
in
push
out
xchg
fiaddl
cltd
pop
test
jb
add
fnstcw
add
add
mov
lret
ljmp
in
add
add
jl
add
fmull
les
add
push
lea
push
call
addb
add
push
cmc
pop
outsl
add
repnz
push
lds
test
add
lcall
add
add
cmpsl
andl
mov
add
xlat
add
add
xorb
clc
add
cli
cmc
add
lret
clc
loop
add
mov
add
mov
cld
push
add
aam
mull
lds
les
inc
in
push
lea
push
push
call
add
jbe
popa
add
add
add
int3
add
std
test
add
add
jne
add
jno
mov
add
add
popf
insb
les
out
mov
add
pop
add
pop
sti
add
add
mov
mov
add
add
add
gs
les
push
aam
fnsave
enter
jl
mov
in
mov
int3
lea
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
call
pop
add
add
pushf
add
add
add
add
jl
cld
add
bound
scas
add
cld
fwait
sti
push
push
add
add
orl
mov
test
jnp
aad
mov
scas
addb
scas
cmpsb
add
add
movsb
add
add
lods
xlat
popaw
xchg
shlb
scas
iret
ror
into
add
into
push
jns
push
add
pop
add
ficompl
and
mov
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
push
in
add
jno
stc
lods
data16
add
ljmp
call
add
ja
add
ret
addr16
or
mov
cltd
aad
xchg
cmc
add
mov
push
in
mov
mov
add
mov
movsb
add
pop
pop
push
xchg
push
mov
jb
rolb
pop
mov
leave
stc
bnd
popa
and
xor
push
push
push
lea
push
push
push
push
call
ljmp
add
loop
mov
add
fisubs
add
ret
add
mov
mov
add
add
push
add
push
pop
fstpt
stos
stc
pop
push
cld
jns
icebp
add
cli
add
add
add
lret
outsl
fcmove
push
add
xchg
add
add
scas
and
add
add
sahf
test
mov
lea
pop
add
push
push
ror
lea
xor
ror
push
or
inc
add
sub
not
pop
add
pop
push
push
push
call
pop
in
add
into
push
ror
mov
add
xchg
add
add
xchg
loop
jp
aad
push
fstps
fwait
jp
repnz
add
add
out
mov
add
add
jo
lret
jb
mov
add
out
mov
cld
popf
add
add
iret
popa
add
add
in
add
jo
cmpsl
add
fiadds
push
add
lea
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
push
call
in
add
add
sahf
mov
jge
pop
aam
fbstp
into
xlat
pop
shlb
stos
push
fldl
push
aam
add
add
pop
stos
fiaddl
pop
loop
add
push
add
xchg
push
out
leave
enter
add
mov
call
out
mov
test
mov
add
pop
add
mov
lea
pop
mov
movl
lea
push
push
call
add
add
mov
aam
xorb
xchg
add
lock
ja
add
push
out
add
sti
jmp
loopne
xchg
mov
out
scas
js
push
lret
mov
add
push
mov
roll
jb
add
jle
ja
add
add
arpl
mov
push
mov
add
rorb
leave
add
add
mov
lea
pop
push
push
push
call
xchg
add
incb
out
jo
xchg
xchg
jb
add
push
scas
out
add
add
xchg
add
lret
jmp
lds
pop
outsl
cld
test
out
add
mov
scas
add
xlat
fisubs
mov
fldenv
push
fadds
push
push
push
add
add
xchg
add
rcrb
scas
rorb
pop
pushl
push
push
push
push
lea
push
call
pop
add
add
scas
test
xchg
pop
hlt
cld
add
add
push
xchg
add
add
mov
add
add
add
push
hlt
ljmp
push
loop
jo
call
add
add
push
filds
shlb
add
fcmovu
mov
cli
xchg
lods
add
add
push
lock
add
pop
add
cmpsb
leave
add
add
pop
cwtl
mov
lea
pop
pushl
call
pushl
push
push
push
push
push
push
call
repnz
mov
mov
scas
mov
add
add
mov
add
mov
lret
into
add
add
add
jne
add
loopne
pop
in
jae
out
add
add
orl
fwait
jo
add
into
add
add
nop
add
add
xchg
add
mov
xchg
rolb
push
jnp
jne
add
push
add
jecxz
add
mov
lea
pop
pushl
call
push
push
add
ror
push
or
not
add
xor
shl
rol
sub
xor
lea
pop
sub
sub
inc
dec
pop
push
push
push
call
add
add
jbe
add
fld1
add
cmpsb
push
lahf
mov
test
add
add
add
out
nop
hlt
popf
add
cwtl
pop
add
stos
add
add
xchg
lahf
push
pushf
ror
add
int3
xchg
mov
xchg
add
add
repnz
mov
add
cwtl
popf
add
add
cltd
add
add
hlt
lcall
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
add
iret
jns
ja
into
iret
add
rolb
testb
imul
add
in
test
cmpsb
mov
fnstcw
add
popa
sti
popa
add
add
les
add
add
ljmp
add
test
add
shr
mov
add
imul
add
sti
mov
lea
pop
call
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
fs
ja
jl
lahf
lods
filds
mov
add
pop
add
mov
adcl
test
add
add
scas
push
lahf
add
add
lds
rolb
out
std
movl
add
add
loope
jno
xchg
imul
sahf
stc
mov
addb
push
jnp
lret
add
out
jp
je
arpl
mov
sub
inc
push
push
shr
not
lea
push
or
inc
add
not
sub
dec
inc
dec
pop
sub
rol
pop
push
push
call
add
imul
repnz
lds
decb
scas
popa
pop
jno
cmpsb
ror
into
push
mov
add
add
addb
add
add
int
jmp
add
add
add
add
add
test
loop
scas
icebp
aad
add
add
add
xchg
add
mov
xchg
xchg
mov
fldz
faddl
ja
mov
pop
push
push
call
push
lea
push
call
rclb
mov
ja
mov
sbb
xchg
add
ljmp
cltd
mov
add
lcall
sub
mov
add
pop
addb
add
add
in
add
xchg
pop
add
add
mov
add
icebp
add
mov
add
add
scas
mov
mov
lea
pop
mov
push
push
push
push
call
pop
push
push
addl
aam
pop
add
add
add
ret
add
ret
lods
mov
add
lcall
jl
jp
filds
movsl
pop
xchg
std
add
cmpsl
add
mov
stc
pushf
add
add
div
mov
loope
add
add
mov
add
popf
ficoms
add
out
cld
movsl
test
enter
add
add
fimuls
pop
push
push
lea
push
push
push
push
push
push
push
call
pusha
add
jae
testl
scas
add
add
jmp
push
add
mov
add
mov
popa
mov
imul
testb
mov
push
movsl
add
add
stc
add
add
roll
add
add
scas
add
add
test
fiadds
lea
jp
add
cwtl
fildl
test
pushf
pop
repnz
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
push
call
mov
jns
test
fsts
subl
push
mov
cwtl
push
stc
jae
add
add
mov
jbe
shll
mov
add
add
add
add
leave
pushf
add
mov
add
add
add
negb
mov
in
lds
add
pop
push
fiaddl
mov
rolb
add
add
pop
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
push
call
add
subb
add
mov
lods
add
incb
mov
movsb
add
in
pop
notb
xchg
mov
add
add
add
pop
add
pop
roll
cwtl
xchg
filds
insb
ficomps
nop
add
pop
lea
ror
lahf
add
jecxz
add
loope
pop
xorb
add
mov
lea
pop
mov
xor
push
push
push
call
add
lret
add
add
mov
add
xchg
xchg
add
add
cmpsb
push
stc
in
insb
mov
push
testl
push
push
add
jecxz
ja
fisubrs
add
out
fiadds
add
push
add
add
add
add
add
fsub
fwait
rorb
pop
add
push
mov
push
push
push
push
push
push
push
push
push
call
clc
data16
mov
add
leave
lahf
imul
push
add
je
add
add
loop
pop
adcb
pop
add
add
add
push
add
mov
add
add
xchg
movl
add
push
push
jne
into
test
and
push
push
add
loope
lahf
add
test
movsb
add
mov
add
push
add
mov
fmull
add
push
lea
push
push
push
push
call
ret
lea
test
enter
push
in
stos
mov
add
mov
sarb
add
add
out
addl
je
add
add
jnp
add
add
lret
add
cli
jle
add
push
mov
jge
popl
addb
add
add
mov
les
in
hlt
lea
pop
add
push
push
call
push
lods
jmp
add
add
add
push
test
insb
mov
add
movsl
add
add
add
mov
add
pop
out
fidivs
rcrb
popa
into
add
push
add
push
movsl
add
add
mov
push
add
lcall
push
in
add
xchg
add
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
push
out
add
jns
test
add
test
mov
jb
out
popa
add
add
push
out
add
jp
addr16
add
xchg
cmpsb
add
ror
les
add
popf
mov
test
mov
add
add
jle
add
pop
add
add
mov
add
mov
sub
push
push
lea
push
push
push
push
push
call
add
out
popa
mov
cld
add
in
add
push
push
jno
mov
stos
movsb
loop
lahf
arpl
xlat
pop
icebp
add
cmpsl
imul
add
iret
add
add
add
push
add
add
add
jmp
cli
stos
xchg
xchg
sar
add
jnp
mov
mov
jae
push
jl
jb
in
andb
mov
lea
pop
mov
xor
push
push
push
push
push
call
add
cmp
int3
add
add
pop
stos
mov
nop
add
add
sti
add
jns
movsb
in
shl
add
add
loopne
arpl
enter
mov
fldl
mov
in
pop
roll
add
testb
dec
mov
add
pop
pop
pop
ja
into
cli
add
add
add
pop
push
mov
push
push
lea
push
call
add
add
add
add
pop
mov
insb
cld
add
sti
add
lret
add
js
add
add
add
add
mov
add
scas
lea
fiadds
popa
fiadds
add
add
mov
mov
add
fadds
pop
pushf
mov
add
xchg
insb
add
enter
out
imul
add
jge
add
pop
add
jge
mov
lea
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
jb
mov
pop
xchg
pop
add
jns
add
mov
leave
add
notb
fnstenv
std
ret
mov
add
jmp
lock
pop
mov
js
add
pop
add
mov
rcll
lods
mov
add
sti
add
push
lahf
in
mov
add
xchg
xchg
in
pop
add
add
jne
cwtl
mov
lea
pop
add
push
lea
push
push
push
push
push
push
call
out
add
sti
into
add
aad
jl
mov
add
mov
add
push
add
add
mov
incb
jbe
cwtl
int3
pushf
pop
add
mull
lods
movsb
movsl
add
add
add
hlt
add
movsb
add
jmp
in
mov
clc
add
push
pusha
imul
addr16
sub
push
push
push
lea
push
push
push
push
push
push
call
lea
mov
add
add
xlat
stos
add
add
mov
add
xlat
faddl
xchg
add
int3
mov
mov
xchg
out
in
je
mov
add
lds
subb
add
jge
jmp
jmp
add
pusha
in
jl
stos
mov
lea
pop
pop
rep
push
push
push
push
push
push
push
push
push
call
add
add
add
add
data16
mov
add
jae
lea
add
add
push
push
xchg
add
add
add
jb
leave
add
push
stc
arpl
xchg
add
add
outsl
out
add
jle
test
add
mov
jle
pop
out
jb
push
add
sahf
pop
mov
lea
pop
pop
mov
push
lea
push
call
add
add
add
aam
stos
xchg
in
add
add
ficoml
jle
faddl
int3
mov
push
add
call
rolb
mov
lcall
mov
add
std
add
test
xchg
mov
mov
add
lds
pop
add
add
scas
mov
lea
pop
add
add
push
push
lea
push
push
call
clc
incb
add
nop
add
add
add
add
in
add
push
pop
mov
add
fs
incb
test
add
jmp
jmp
jno
pop
lret
scas
pop
add
popf
test
add
add
mov
add
popa
mov
add
ret
add
jb
rolb
add
add
add
mov
lea
pop
add
push
push
call
add
jecxz
pop
add
add
rolb
out
push
mov
movb
mov
lds
add
add
add
mov
popa
mov
push
stos
out
mov
lea
push
add
push
mov
add
add
les
pop
mov
data16
add
add
mov
add
mov
lea
pop
mov
push
push
push
push
call
clc
add
cli
imul
add
add
add
add
xchg
jecxz
add
mov
loopne
fldcw
mov
mov
popa
add
cmp
mov
push
cmc
je
add
test
add
xchg
bound
xchg
mov
iret
ficoms
add
xchg
add
stos
add
xchg
add
mov
mov
test
add
rcl
mov
add
lea
pop
xor
push
push
push
push
push
push
push
call
js
lret
jno
add
mov
imulb
add
mov
add
add
filds
add
add
popa
pop
mov
ret
jbe
add
jl
add
notl
popf
shll
pop
ficoml
jne
add
imul
cmpb
shr
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
pop
mov
out
pop
fadds
fidivrl
xchg
mov
add
popa
in
roll
xchg
xlat
xchg
cwtl
add
cli
pop
add
mov
test
add
add
jns
lret
add
roll
add
jo
mov
pop
add
flds
add
mov
jge
pop
in
add
mov
add
mov
lea
pop
mov
xor
push
lea
push
push
push
call
add
mov
hlt
pushf
sti
push
bound
movb
mov
loop
add
push
jle
loop
pusha
push
lret
add
call
jo
add
lcall
add
mov
test
call
jecxz
pop
add
add
add
mov
jne
add
xchg
add
add
out
std
mov
clc
add
je
cld
lea
pop
mov
push
push
push
call
add
jno
test
add
iret
movl
add
add
mov
std
add
add
shll
add
lahf
xchg
pop
add
add
enter
add
sar
subl
sub
add
mov
push
mov
add
cmpsb
mov
add
fadds
aad
mov
movsl
push
add
or
or
push
push
push
lea
push
lea
push
call
mov
mov
add
push
xchg
cwtl
xchg
add
mov
mov
add
add
aad
add
add
mov
add
stos
scas
add
mov
add
mov
addr16
test
add
add
add
add
popa
shll
jmp
push
add
jb
pop
add
add
jmp
add
add
int3
lea
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
mov
fidivl
add
into
addr16
ret
cwtl
aam
xchg
sahf
addl
lods
pusha
add
popa
sahf
add
mov
loopne
in
nop
cmc
add
in
addl
nop
mov
add
push
add
xchg
ret
mov
hlt
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
call
jbe
test
add
add
add
add
aam
jne
cltd
add
std
xchg
mov
add
addl
add
pop
add
add
repnz
imul
mov
int3
lahf
incb
scas
add
lret
add
stc
add
add
mov
add
arpl
add
add
hlt
lea
pop
add
push
lea
push
push
call
cltd
add
les
jno
std
mov
je
add
jnp
add
add
cwtl
fst
int
mov
leave
fs
jbe
rolb
add
lret
ror
add
add
jnp
add
pusha
add
add
lret
add
mov
add
add
add
add
add
repnz
mov
lea
pop
mov
push
push
sub
push
and
add
ror
not
sub
add
shr
pop
shl
pop
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
pop
pop
faddl
mov
rcll
scas
mov
lret
jnp
add
add
add
mov
pushf
add
out
push
stos
pop
xor
add
lret
add
add
mov
add
arpl
mov
incb
add
lcall
jecxz
mov
andb
push
jae
xchg
mov
pop
jno
push
out
arpl
jecxz
add
and
pushl
call
push
lea
push
lea
push
call
add
mov
aam
add
add
add
add
fwait
jbe
fs
out
lahf
pop
pop
nop
add
loop
add
add
ljmp
in
xchg
add
rcrl
push
mov
add
mov
jb
add
fdivp
add
add
jb
add
add
mov
lea
pop
push
push
push
sub
shr
add
push
or
not
add
rol
sub
inc
pop
dec
shr
pop
push
lea
push
push
lea
push
push
push
push
call
jae
call
xchg
movsb
add
mov
mov
icebp
add
add
add
add
in
xchg
nop
add
mov
add
add
add
ljmp
ja
mov
add
mov
add
mov
mov
mov
fidivrl
add
add
fs
add
rorl
pop
push
push
push
lea
push
push
call
rolb
into
jnp
jb
push
mov
stc
test
hlt
add
push
jle
add
add
pop
jo
xchg
add
pop
add
lods
push
imul
add
loop
leave
addb
jne
push
cmc
jno
stos
add
add
add
lea
add
int3
popf
xchg
insb
popf
addr16
pusha
lahf
pop
add
mov
add
pop
in
jmp
xchg
add
add
pop
call
push
lea
push
push
push
call
pop
add
add
add
jae
sti
icebp
sahf
add
jmp
cwtl
ror
addl
loopne
iret
xlat
in
xchg
add
jmp
imul
fadd
roll
addl
add
add
push
mov
add
lods
shl
add
xchg
pop
in
add
cld
stos
rolb
add
rcl
pop
mov
add
push
add
add
jp
add
mov
lea
pop
mov
push
push
add
lea
pop
push
mov
push
lea
push
lea
push
call
fdivrs
add
add
out
js
mov
mov
xchg
int3
repnz
stos
add
mov
pop
add
sar
repnz
xchg
add
jae
mov
add
loopne
add
add
add
cwtl
faddl
movb
mov
add
add
icebp
add
stc
add
fmull
pop
in
ret
add
add
push
push
push
lea
push
push
lea
push
push
call
add
outsl
add
mov
flds
add
arpl
cmpsl
jle
add
xchg
add
js
add
add
mov
jmp
negb
ja
lahf
sbbb
imul
imul
add
shlb
into
fildl
imul
pop
add
lret
add
ficompl
add
fstpt
mov
push
pushf
cmc
xlat
enter
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
lea
push
call
add
mov
add
cmc
add
jbe
add
add
pop
mov
test
cld
jle
ja
add
xchg
add
jns
mov
add
add
add
add
add
add
add
in
fnstenv
les
add
pop
add
mov
add
mov
addr16
add
add
cmc
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
sahf
shrb
mov
sbbl
std
xchg
add
add
mov
jne
add
add
bound
insb
add
push
icebp
add
lret
push
out
add
lds
pop
bound
add
jge
mov
popl
push
lea
add
xchg
jmp
add
add
add
js
add
rolb
add
lret
les
xor
push
push
push
push
push
push
push
call
add
filds
incb
add
add
add
sub
leave
push
sarl
bound
add
hlt
jnp
push
add
addb
xchg
push
addl
add
jb
out
ja
mov
mov
popf
xchg
cmc
mov
mov
jl
outsl
fiadds
out
leave
lret
add
add
fcmovne
lcall
movsl
add
stc
add
jb
add
xchg
add
mov
lea
pop
add
push
push
call
xchg
add
fxam
xchg
mov
cld
mov
add
add
imulb
jne
add
add
add
cltd
out
add
add
add
leave
cli
mov
lds
orb
mov
scas
mov
test
mov
mov
add
mov
test
add
gs
icebp
add
outsl
add
push
lods
mov
in
pop
add
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
popf
add
into
jns
fisubs
add
pusha
lds
stos
fldcw
shl
add
stc
xchg
xchg
scas
add
mov
mov
in
fildl
add
in
shll
mov
xchg
iret
add
add
push
test
add
add
mov
cmpsl
mov
add
add
hlt
lea
pop
mov
push
push
push
push
push
push
push
push
call
add
jmp
lods
mov
add
fiaddl
add
push
add
add
lods
xchg
mov
mov
lock
les
add
mov
add
add
add
pop
aad
mov
ljmp
add
mov
cmpsl
add
fsubl
ja
loopne
add
add
add
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
jno
add
ja
stos
in
faddl
push
add
mov
add
add
add
shll
lahf
lcall
mov
mov
in
add
stos
mov
movl
out
add
les
add
stos
jmp
call
add
xlat
pop
add
mov
add
add
out
add
jno
xorb
hlt
lea
pop
add
push
push
push
push
push
push
push
call
add
add
into
add
add
add
fadds
mov
sahf
add
addr16
pop
add
xchg
add
into
xchg
mov
mov
add
loope
add
popf
lods
movsl
mov
add
add
push
jne
fnsave
add
add
rolb
xchg
bound
outsl
add
xchg
rolb
popa
add
mov
lahf
shll
out
add
pop
add
push
xor
ror
pop
pop
mov
xor
push
shr
shr
ror
not
pop
rep
push
lea
push
push
push
lea
push
lea
push
push
push
call
roll
scas
popf
add
out
nop
out
add
add
test
add
push
pop
popf
add
mov
bound
int3
pop
add
mov
push
add
push
data16
mulb
fildll
add
add
add
outsl
pusha
add
add
pop
push
imull
faddl
mov
les
mov
in
add
add
add
cld
lea
pop
mov
xor
push
lea
push
push
push
call
rclb
add
cmpsl
add
movsb
mov
add
add
pop
jne
jae
add
add
xchg
int
jns
adc
movsl
mov
add
mov
add
sub
pop
cwtl
add
add
lds
add
add
stos
add
add
stos
add
add
add
lds
jle
int3
ljmp
jnp
ror
xchg
add
lea
pop
or
je
push
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
push
call
lds
je
popf
add
add
push
lahf
repnz
std
popf
add
test
add
add
pop
test
add
push
jge
mov
gs
movsl
add
into
add
add
jmp
add
pop
pop
mov
pushf
mov
movsb
mov
add
xchg
fs
xchg
icebp
push
mov
push
cwtl
push
add
sarb
mov
scas
push
fstl
les
push
xor
shll
bound
add
out
add
out
pop
add
clc
add
mov
pop
pop
xchg
outsl
mov
xchg
loop
movsb
add
jl
add
out
jne
xlat
lret
arpl
shll
add
test
out
add
xlat
adcb
xlat
xchg
add
add
add
cwtl
cli
add
sbbl
mul
add
add
add
pusha
or
adc
push
lea
push
call
lcall
push
add
shl
add
clc
add
into
add
fadds
add
xchg
mov
fdivs
mov
add
push
scas
add
push
push
ret
lahf
lret
add
add
jnp
add
add
addl
add
add
ljmp
sbb
add
pop
add
add
push
push
push
call
add
add
mov
add
add
pop
push
add
pop
add
add
add
push
mov
pop
add
add
push
out
jmp
add
cwtl
lock
mov
in
test
addb
pop
iret
add
add
cwtl
loopne
add
in
cmpsl
mov
add
int3
add
pop
add
push
mov
push
push
push
push
push
push
push
push
call
add
testl
test
pop
sahf
stc
add
add
add
add
scas
andb
push
jno
enter
add
add
add
add
mov
testb
add
jbe
js
add
xchg
movsb
out
icebp
add
add
push
add
add
jecxz
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
call
add
mov
pop
je
js
mov
in
add
in
jns
int
faddl
fldl
add
add
add
mov
pop
fadds
xchg
jne
jmp
cmc
loope
mov
gs
add
add
add
std
outsl
ret
push
xchg
in
cwtl
add
push
pop
add
iret
add
xchg
jnp
mov
mov
mov
lea
pop
add
push
dec
pop
add
push
rol
pop
pop
push
lea
push
call
adc
je
add
add
scas
lea
call
mov
cwtl
addr16
add
add
enter
lods
in
incb
sarl
add
lahf
mov
xchg
push
ret
push
mov
mov
clc
add
push
mov
jae
xchg
mov
std
mov
or
movsb
push
sub
shr
pop
mov
xor
push
sub
xor
lea
pop
or
je
mov
add
push
push
lea
push
push
push
push
lea
push
push
call
scas
lods
add
test
add
movsl
jns
lea
add
movsb
add
add
add
add
add
add
add
je
lds
add
add
movsb
mov
add
iret
add
int3
add
add
pop
jecxz
xorb
icebp
add
mov
add
add
int3
add
pop
lods
pushf
mov
add
push
mov
add
add
pop
add
rep
pop
push
push
inc
push
or
not
add
add
sub
add
xor
lea
sub
pop
inc
inc
rol
ror
pop
push
xor
lea
shl
pop
pop
push
sub
add
shl
sub
pop
mov
push
pop
mov
push
lea
push
call
add
xchg
add
addb
add
cli
add
add
fdivs
add
data16
lahf
mov
add
add
movl
fcom
mov
add
add
cmpsl
mov
add
jmp
add
mov
pusha
add
xchg
ljmp
mov
int3
add
mov
mov
in
mov
in
add
popa
or
inc
and
push
rol
add
shr
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
add
cwtl
arpl
lret
push
sahf
mov
add
shlb
add
add
icebp
mov
add
out
cmc
repnz
add
lods
mov
add
ljmp
add
mov
pop
in
add
les
add
add
addl
xchg
aam
bound
push
push
shl
add
lea
inc
pop
mov
push
push
lea
push
push
lea
push
push
push
call
out
xchg
mov
push
add
add
mov
add
pop
leave
add
jo
test
jmp
add
jns
add
push
push
pusha
mov
icebp
iret
add
rcrl
out
jl
add
add
add
call
in
xchg
add
add
add
add
add
add
repnz
jnp
add
add
pop
pop
add
stc
int3
out
mov
lea
pop
add
push
push
push
push
push
lea
push
lea
push
call
mov
shrl
add
subb
jb
outsl
lcall
add
mov
lock
je
cmpsb
add
jp
pop
addr16
xchg
add
push
add
xlat
lahf
lret
add
mov
stc
mov
cmpsb
push
int3
loope
sti
sahf
jo
add
add
int
mov
fiaddl
ret
add
rol
addb
jne
add
add
pop
push
push
push
push
push
push
push
lea
push
call
fimuls
hlt
or
mov
aam
add
add
loop
add
je
add
movsl
jae
gs
mov
jb
mov
add
test
add
xchg
mov
data16
add
bound
nop
add
add
mov
test
xchg
add
fiaddl
mov
add
pop
stc
enter
mov
lea
pop
mov
pop
push
push
push
lea
push
push
push
push
push
push
call
add
jbe
add
imul
add
lret
mov
add
add
push
add
add
fucomp
add
mov
add
add
add
add
add
add
scas
icebp
clc
add
or
pushf
pop
rclb
add
add
add
std
popf
add
loopne
aad
lcall
jns
pop
shl
in
into
shrl
lds
and
pop
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
popa
xchg
fstl
scas
sahf
lea
sahf
mov
xchg
add
enter
js
roll
cwtl
add
in
mov
stc
add
out
add
jne
jmp
loope
add
add
add
pop
add
add
add
add
incb
add
add
add
add
aam
add
add
add
add
and
leave
push
lea
pop
ret
push
mov
push
shl
sub
pop
add
push
push
push
lea
push
push
call
in
add
add
notl
add
add
mov
add
pop
lock
push
push
out
add
insb
fstp
push
sahf
mov
add
add
aad
add
add
rolb
lahf
add
call
fldl
fiaddl
arpl
add
call
jle
mov
mov
mov
imul
nop
add
ret
lea
pop
push
push
push
push
shr
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
add
xchg
leave
lcall
roll
lods
call
int
add
fists
fst
arpl
mov
add
add
xchg
add
add
add
stos
mov
add
add
cld
add
jmp
add
mov
ljmp
flds
mov
and
movl
push
inc
sub
sub
add
pop
addl
test
je
mov
push
push
push
push
call
add
shrb
add
add
add
add
xchg
int3
std
add
mov
mov
add
xchg
jmp
add
add
xchg
add
lods
incb
pop
add
loope
fistpl
add
add
add
mov
lds
mov
mov
add
mov
imul
repnz
xchg
in
test
jmp
add
fmuls
pop
pop
pop
push
push
lea
push
push
push
push
call
jge
xchg
je
pop
add
or
add
into
add
add
out
cltd
add
add
add
add
jns
pop
aam
xchg
mov
cmc
xorl
push
out
add
push
add
stc
cmpb
into
insb
push
hlt
gs
out
xchg
add
mov
add
mov
add
lock
mov
cld
lea
pop
pop
push
push
push
push
push
lea
push
call
mov
clc
xchg
fdivs
add
add
mov
cwtl
add
stc
mov
frstor
jp
mov
mov
lods
mov
out
mov
iret
pop
add
push
mov
lds
int
mov
jle
add
out
scas
push
add
add
in
add
pushf
add
add
xchg
mov
add
divb
mov
lea
pop
pop
leave
ret
push
lea
push
lea
push
push
push
push
push
push
call
mov
lock
pop
add
jae
push
add
add
jmp
stos
mov
shrb
mov
add
movsb
add
xchg
add
add
mov
popf
add
jnp
movsl
movsb
lcall
add
shlb
std
clc
add
add
mov
add
add
mov
aad
mov
add
out
add
pop
push
mov
push
push
push
push
push
push
push
call
cmpsl
add
popf
idivl
jecxz
add
add
loop
mov
out
cli
pop
add
in
cli
add
add
add
add
cltd
add
popf
add
data16
jecxz
add
add
mov
shl
add
xchg
add
add
add
stos
jb
out
iret
add
sti
scas
out
ror
xchg
add
jmp
addl
lea
pop
add
push
push
push
push
lea
push
call
push
cmpsb
add
in
fcom
push
in
add
add
out
movsl
push
cld
push
add
push
lds
add
add
out
outsl
iret
sti
movsl
mov
mov
pop
pop
add
not
mov
movsb
add
rolb
cmpsb
xchg
add
arpl
mov
add
pop
add
rolb
add
mov
ljmp
mov
pop
lcall
push
push
push
push
lea
lea
pop
push
push
pop
testl
addl
push
push
push
call
add
add
add
pushf
mov
add
pop
icebp
pop
add
mov
loopne
push
lea
scas
icebp
sar
add
add
in
test
add
loop
mov
xchg
bound
ljmp
xchg
add
sti
loop
add
iret
movl
add
add
add
insb
push
rolb
mov
imul
xchg
rorl
call
mov
push
inc
sub
inc
pop
pushl
push
sub
sub
sub
add
pop
push
push
lea
shl
pop
push
call
cmpl
jne
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
jbe
add
jnp
mov
enter
mov
add
aad
add
imul
fisubl
push
filds
add
add
xchg
stos
add
xlat
mov
add
add
add
mov
add
loope
push
pop
add
mov
mov
add
and
pop
pop
push
sub
add
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
test
lret
add
add
ret
pop
add
out
lret
add
add
add
test
push
xchg
add
stc
add
js
add
add
add
xchg
add
mov
movsb
in
into
aad
jo
aam
lods
add
fiadds
mov
xchg
xchg
out
push
add
add
add
pop
pop
push
push
push
lea
push
push
lea
push
call
add
add
cltd
sbbb
pushf
add
jo
mov
add
mov
popa
jp
fadds
jae
add
add
mov
out
add
jmp
add
data16
andb
xchg
jle
rolb
mov
mov
pushf
add
aam
push
push
enter
jecxz
xchg
popa
fcmovb
call
rcrb
fdivrl
add
nop
add
int3
lea
pop
leave
ret
push
push
lea
push
push
call
mov
add
add
jmp
pushf
mov
add
pop
add
add
mov
movsl
add
lret
scas
add
loopne
add
int
add
shr
add
mov
test
loop
mov
lret
gs
scas
sti
mov
xchg
add
add
leave
mov
shll
data16
loopne
int3
mov
add
mov
mov
adc
mov
push
sub
ror
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
loopne
add
add
fcom
add
pop
mov
add
add
add
jmp
shlb
mov
add
xchg
add
pushf
push
jl
add
cmpsl
mov
cmpsl
out
loop
mov
sti
les
fwait
aam
add
add
xchg
add
add
add
add
add
clc
je
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
mov
std
out
add
ljmp
pusha
mov
test
data16
jne
test
popa
scas
cmpsb
add
loop
add
pushf
add
cli
add
iret
mov
mov
pushf
testl
add
add
add
jno
cld
cld
movsb
add
stc
add
add
jb
jb
call
add
enter
add
mov
gs
stos
add
push
into
mov
lea
pop
push
push
push
lea
push
push
push
push
push
call
lds
icebp
cmpsb
pushf
lea
call
mov
test
add
jns
mov
add
add
add
add
xchg
ljmp
add
data16
mov
add
add
iret
add
pop
pop
add
fst
add
rorb
call
add
int3
lea
pop
push
push
pop
push
push
push
push
push
push
call
aam
mov
pop
in
popf
xchg
icebp
push
add
add
add
add
fildl
lret
jecxz
mov
je
add
mov
mov
aam
jp
addb
scas
push
add
add
jp
jecxz
jbe
add
add
fsub
ficomps
scas
add
stos
pushf
movsb
push
cli
add
lods
ficompl
add
mov
lea
pop
movl
push
push
push
push
push
push
call
add
add
jecxz
xchg
add
lods
push
fiaddl
add
icebp
mov
loop
add
add
add
je
imul
jecxz
mov
mov
add
loop
lods
push
std
cmc
insb
repnz
mov
int
mov
add
fidivs
roll
lea
pop
push
call
push
push
push
push
push
push
push
push
push
push
push
call
add
push
and
pop
out
add
hlt
mov
jno
out
pop
add
add
fiadds
jge
fsts
out
add
add
iret
add
imul
xchg
loop
add
add
pop
mov
jae
iret
les
add
movb
scas
add
add
xchg
out
out
hlt
lds
into
lcall
imul
lods
mov
rol
xchg
xchg
lea
add
int
add
mov
lea
pop
call
push
shr
shl
add
pop
subl
cmpl
jne
push
lea
push
push
call
add
add
add
add
mov
test
icebp
jns
add
mov
iret
jl
add
data16
mov
mov
leave
test
jge
shr
add
mov
xorb
push
lock
add
lods
cld
xchg
aad
ret
add
leave
cwtl
rolb
add
add
add
mov
mov
mov
lea
pop
pop
pop
push
push
lea
push
push
lea
push
call
cli
mov
add
rcll
mov
add
out
aad
add
add
add
xorb
mov
add
mov
mov
add
movb
add
lcall
std
xor
add
add
add
xchg
add
add
ffreep
add
pop
pop
pop
push
sub
pop
leave
ret
push
sub
ror
rol
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jnp
stos
add
add
lods
add
push
add
jno
mov
add
cld
pop
sarb
jle
add
add
imul
add
add
hlt
add
out
into
mov
fwait
fs
add
add
add
pop
add
mov
mov
lds
mov
decb
pop
mov
add
push
xor
pop
push
push
push
push
push
call
test
add
add
push
cmpsb
add
xchg
add
rolb
cwtl
add
mov
cmpsb
je
iret
add
add
mov
add
jnp
out
add
aad
mov
xchg
jle
pop
mov
xchg
add
jb
jb
add
add
add
test
add
add
add
cmc
push
add
js
mov
jecxz
fiaddl
add
pusha
or
push
push
shr
sub
add
dec
pop
push
push
xor
not
pop
mov
push
lea
push
push
call
mov
mov
cld
add
xorb
mov
insb
scas
add
add
mov
push
int
add
add
add
call
add
push
enter
add
xchg
mov
xchg
scas
push
pop
add
add
sti
add
in
add
in
add
add
add
add
pop
icebp
mov
add
add
mov
lea
pop
lea
push
lea
push
push
lea
push
lea
push
push
call
add
test
add
outsl
lods
add
mov
add
roll
stos
add
add
add
mov
add
add
add
add
in
faddl
add
lret
stc
mov
add
add
test
icebp
mov
xchg
add
push
icebp
loopne
flds
push
add
jnp
add
pusha
add
pop
add
mov
popa
fiadds
mov
sti
add
test
add
shlb
lcall
pop
sub
mov
shr
push
dec
inc
add
pop
add
mov
mov
push
lea
pop
add
add
mov
push
lea
push
lea
push
push
push
push
push
call
mov
jp
add
add
imul
mov
add
imul
pop
imul
add
mov
add
int3
jae
mov
mov
movsb
jl
test
add
add
add
addb
les
jb
out
add
push
add
insb
test
add
add
add
ret
scas
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
mov
sti
pop
pushf
mov
add
pop
movsl
pusha
mov
pop
add
add
add
pop
pop
add
lret
push
add
add
fldl
lret
xchg
add
fnstcw
add
ret
lock
loope
lea
aad
add
add
xlat
loope
add
cmc
test
mov
pop
cmp
jne
push
add
shr
shl
add
pop
cmp
jne
push
push
push
call
fiaddl
imul
jecxz
xlat
addb
add
fdivs
in
add
add
jb
fbld
add
scas
add
xchg
lahf
cmc
scas
bnd
add
scas
xchg
jae
cmpsl
stos
mov
addl
call
pop
add
add
lret
jno
add
jge
popf
insb
add
data16
lahf
push
divb
mov
pop
add
popa
or
mov
movl
push
lea
add
lea
pop
jmp
push
rol
lea
not
pop
mov
push
ror
pop
mov
sub
jne
push
lea
push
push
push
call
add
jae
add
add
push
addb
aam
add
enter
in
rcrl
sti
push
add
push
cmpsl
faddl
outsl
ljmp
mov
add
stos
enter
add
add
out
cli
add
add
jle
mov
cli
add
add
add
add
mov
lea
pop
mov
push
dec
add
pop
movl
push
push
push
push
lea
push
push
lea
push
call
imul
jne
roll
add
pusha
pop
mov
lods
add
enter
add
test
mov
xchg
pop
add
add
add
insb
mov
add
mov
loop
jge
add
mov
mov
xchg
add
add
sti
pop
popf
jae
mov
mov
sahf
jmp
lods
sti
jl
imul
sbb
jmp
push
xor
sub
sub
pop
mov
push
push
push
push
push
lea
push
call
popf
cld
xchg
add
faddl
pop
add
mov
aad
addb
addl
add
popa
nop
add
add
fadds
mov
add
jecxz
push
add
addr16
fsubrp
ret
pop
mov
jns
add
loopne
jae
shl
fnstenv
out
in
ret
sar
cltd
fisttpl
lahf
rol
cmpsb
mov
sbb
nop
mov
add
push
lea
push
lea
push
push
push
push
call
ror
mov
add
xchg
jecxz
aam
jl
aad
in
add
add
xchg
xchg
enter
add
jle
in
jge
leave
shl
test
push
nop
sti
lret
loope
iret
lret
je
cli
add
push
add
mov
nop
lret
jle
jle
out
in
pop
pusha
je
mov
lea
pop
cmp
jne
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
push
jnp
mov
jbe
add
xlat
add
mov
addb
add
outsl
fs
xchg
add
add
mov
ret
test
add
shl
add
cmpsl
add
cltd
mov
add
icebp
xchg
incb
add
add
add
roll
xchg
jmp
mov
push
imul
pusha
sub
inc
adc
add
add
add
xor
push
lea
push
push
call
xchg
add
add
flds
add
add
xchg
add
roll
mov
ja
data16
enter
cmpsl
add
mov
jo
out
js
fsts
add
add
in
jge
pop
in
push
add
add
cwtl
in
arpl
out
add
testb
les
pop
jmp
mov
push
not
lea
shr
ror
pop
cmpw
jne
push
push
lea
push
push
call
add
add
flds
add
add
add
aam
add
jnp
je
add
mov
xchg
add
pushf
push
popf
jl
add
add
arpl
enter
test
outsl
std
add
add
add
cmpsb
push
lock
popl
in
push
add
cli
cltd
fiaddl
cmc
cli
add
add
push
push
mov
leave
add
hlt
fadds
std
into
add
stos
mov
pop
mov
push
xor
add
pop
movl
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
push
add
testl
mov
push
pop
add
add
out
ret
lds
out
add
bound
pop
cwtl
mov
add
add
fwait
int
add
mov
mov
mov
add
add
subb
jle
fidivrs
mov
add
fmull
leave
or
add
xor
add
push
push
push
call
movb
in
add
popf
call
add
bound
call
add
out
add
jp
add
fistpl
lds
add
xchg
add
stos
add
jge
add
add
stos
cmp
add
mov
add
add
repnz
add
out
cmpsl
les
lret
test
cld
aam
int3
lea
pop
pop
mov
push
lea
push
push
push
push
call
sbbl
add
mov
add
loop
add
xchg
ffree
cli
jle
lods
add
movsl
add
add
int3
enter
stos
in
loopne
addb
add
push
add
loope
movl
idivb
je
jl
mov
add
scas
arpl
fildl
add
rcr
jno
int3
addl
mov
mov
movsl
mov
mov
lea
pop
mov
mov
push
push
sub
sub
push
sub
add
ror
sub
not
pop
shl
dec
pop
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
test
movsb
aad
add
data16
add
sti
push
add
add
push
sar
sarb
ljmp
push
mov
add
jp
rcrl
mov
fldl
pop
add
add
incb
in
popl
add
jmp
pop
mov
add
sbb
movsb
mov
add
add
repnz
add
add
pop
push
call
push
push
push
call
add
xchg
add
pop
fadds
shrb
sti
fadds
mov
add
mov
ljmp
lds
mov
mov
xchg
cmc
jo
je
add
mov
add
sar
mov
test
pusha
mov
iret
cli
add
in
add
add
fdivs
add
add
push
add
add
aad
popa
jo
jnp
add
xchg
add
test
xchg
mov
lea
pop
cmpl
je
push
push
shr
sub
push
or
inc
add
xor
sub
xor
add
pop
not
pop
push
push
push
push
push
push
push
call
js
jmp
add
ja
add
aam
add
fnsave
pop
add
les
ret
xchg
add
cltd
add
add
sti
add
add
add
jb
add
icebp
add
pushf
add
popa
gs
add
popf
mov
add
lock
lahf
mov
lea
pop
push
call
push
shl
xor
sub
pop
cmpl
je
push
push
xor
sub
rol
add
push
and
add
add
add
dec
shr
sub
sub
pop
shr
pop
push
push
ror
inc
sub
pop
call
push
push
lea
push
push
push
call
push
add
fisttps
add
jno
shl
add
pop
jl
jmp
add
push
add
add
push
add
out
add
mov
mov
add
add
add
xchg
mov
push
add
ljmp
jge
add
add
push
mov
add
add
pop
cmpl
je
push
push
sub
shl
xor
push
push
pop
add
sub
sub
sub
inc
sub
dec
pop
inc
add
pop
push
shl
sub
add
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
rolb
add
addb
add
xor
movsb
push
add
mov
aad
add
add
add
int3
mov
call
fiadds
add
mov
add
add
add
out
jge
sbb
pop
add
add
stos
in
stos
movsb
add
add
mov
mov
lea
pop
call
cmpl
je
push
push
dec
ror
rol
push
or
not
add
add
sub
shr
sub
inc
shl
lea
inc
pop
sub
xor
sub
pop
push
lea
push
lea
push
call
les
hlt
xchg
add
jmp
add
ja
je
jle
mov
mov
add
add
xchg
movsb
mov
add
jo
cli
add
les
mov
add
orb
mov
add
imul
mov
add
jecxz
add
add
add
push
mov
lea
pop
push
call
cmpl
je
push
push
lea
sub
xor
dec
push
sub
add
lea
add
sub
shr
dec
add
pop
not
shr
pop
push
push
call
mov
clc
jle
add
add
add
jae
xlat
mov
add
push
testl
test
imul
add
add
ret
pop
repnz
add
add
add
lods
add
add
add
jo
add
add
jb
xchg
add
out
add
xchg
fmul
fldt
into
adcb
clc
sti
add
pop
push
call
cmpl
je
push
push
ror
dec
add
push
push
pop
add
ror
sub
lea
pop
dec
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
stc
add
cwtl
add
push
mov
mov
add
mov
xchg
add
mov
push
add
xchg
leave
into
cltd
cmpsl
fs
add
xchg
subl
cmc
icebp
add
shll
add
test
xchg
mov
push
popf
loopne
add
add
mov
icebp
add
pop
push
push
add
add
pop
call
push
rol
dec
rol
pop
cmpl
je
push
push
not
not
push
push
pop
add
shr
add
inc
sub
add
sub
pop
sub
rol
pop
push
push
lea
push
push
push
lea
push
push
call
addb
add
mov
mov
stc
add
add
mov
cld
sahf
xchg
add
vpslld
add
add
test
cld
add
add
mov
add
mov
mov
arpl
pusha
add
test
xchg
pop
stc
jbe
data16
add
add
add
pop
push
call
push
inc
pop
cmpl
je
push
push
add
lea
sub
add
push
sub
add
sub
xor
lea
sub
pop
xor
ror
add
pop
push
inc
pop
push
call
cmpl
je
push
push
not
sub
ror
push
or
not
add
lea
sub
shr
lea
not
xor
pop
dec
shl
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
icebp
mov
scas
enter
repnz
add
push
jp
add
outsl
push
add
roll
notl
xchg
loop
add
call
pop
add
add
add
add
add
push
data16
add
add
add
flds
add
std
push
add
jnp
fs
pop
sti
lods
stos
ljmp
add
add
add
xchg
popf
in
add
mov
lea
pop
push
call
cmpl
je
push
push
xor
rol
xor
lea
push
sub
add
add
not
sub
dec
pop
sub
add
pop
push
push
push
push
push
call
add
je
mov
pop
add
mov
roll
add
mov
add
jbe
add
addl
push
pop
filds
mov
add
mov
mov
fsubrl
scas
cmpsl
cltd
add
add
rcr
repnz
ja
xchg
jns
mov
add
add
add
fadd
scas
ja
data16
adc
push
push
push
push
push
push
push
call
mov
fldcw
add
mull
push
mov
pop
jmp
xchg
add
xchg
add
lds
add
add
jle
int
mov
mov
xchg
test
add
int
add
add
add
jno
add
in
in
add
add
add
lea
pop
call
cmpl
je
push
push
dec
push
push
pop
add
ror
inc
rol
sub
inc
rol
pop
pop
push
xor
pop
push
call
push
sub
inc
pop
cmpl
je
push
push
add
add
push
push
pop
add
inc
xor
sub
sub
pop
shr
shr
pop
push
push
call
pop
add
jmp
jmp
ljmp
cmpsb
push
mov
mov
add
test
fistps
out
jae
add
aam
jp
test
add
mov
add
shll
xchg
movsb
stos
hlt
xchg
add
xchg
cmpsb
fdivr
in
cmpl
fimuls
fwait
pop
add
cmc
mov
lea
pop
push
call
cmpl
jne
push
inc
rol
ror
pop
mov
movl
jmp
push
push
push
push
lea
push
lea
push
call
add
test
mov
push
ret
add
add
push
jp
incb
xchg
push
add
xchg
outsl
outsl
cld
cmpsb
add
xchg
stos
add
add
jno
add
mov
andb
add
add
lahf
addb
pop
incb
add
cmpsb
add
lock
aad
lods
add
add
add
add
add
xchg
add
push
jns
aam
jp
lods
mov
lea
pop
xor
push
push
push
lea
push
call
jo
ret
add
test
add
xchg
pop
pusha
jmp
pushf
add
add
add
push
jne
add
add
shlb
cld
mov
imul
add
mov
lahf
xchg
iret
sahf
testl
scas
je
add
mov
cwtl
add
add
neg
mov
outsl
add
add
xchg
lds
mov
hlt
lea
pop
pop
pop
pop
push
pop
pop
leave
push
push
push
push
call
bound
add
scas
add
add
add
jl
push
les
add
add
jae
xchg
mov
imul
mov
add
add
stc
mov
fwait
addl
add
jbe
add
jb
add
add
add
movsb
lods
add
add
in
add
push
add
popl
data16
add
fstpl
push
out
gs
add
test
mov
lea
pop
ret
push
mov
push
lea
add
lea
pop
add
cmpl
jne
push
push
sub
push
push
pop
add
shr
sub
xor
add
add
pop
dec
pop
push
push
push
push
lea
push
push
push
push
push
call
add
imul
sahf
pusha
add
int
mov
int3
mov
mov
add
add
mov
add
mov
popf
test
stos
mov
push
add
push
mov
loop
push
jmp
add
mov
xchg
testl
add
outsl
add
add
xchg
mov
add
add
mov
les
jne
push
shr
pop
call
push
add
pop
push
push
add
sub
pop
call
push
xor
pop
jmp
cmpl
je
push
push
lea
push
push
lea
push
lea
push
call
lods
in
into
mov
js
cmpsb
lods
fstps
popf
cmpsl
add
add
add
add
add
mov
add
scas
call
mov
add
pop
mov
xchg
add
fwait
mov
pop
out
jnp
aad
add
xorb
add
jno
add
data16
sti
mov
add
pop
add
fwait
add
add
outsl
add
add
hlt
lea
pop
cmpl
jne
push
push
push
push
lea
push
call
mov
arpl
mov
jmp
add
stc
fs
add
out
add
add
xchg
lods
xchg
add
jae
push
scas
add
ret
cli
shl
pop
mov
jno
add
add
fnstenv
mov
arpl
add
lods
test
add
push
add
add
enter
les
fnstenv
push
mov
lea
pop
leave
push
xor
pop
add
push
not
pop
pop
pop
pop
push
add
inc
ror
pop
pop
push
sub
not
sub
pop
leave
add
ret
push
push
push
push
lea
push
push
push
call
jns
push
mov
add
add
add
loop
les
add
add
clc
cmpb
mov
out
out
xchg
cltd
add
test
add
mov
push
faddl
mov
jmp
add
add
fiaddl
std
rolb
add
add
cwtl
add
add
sbb
jmp
push
rol
sub
lea
pop
cmpl
jne
push
push
add
inc
push
xor
add
lea
sub
sub
add
rol
ror
pop
dec
pop
push
push
lea
push
push
push
push
push
call
push
add
ret
push
fadds
lock
fwait
jmp
ret
push
add
add
add
jo
add
insb
data16
add
mov
divl
repnz
enter
add
mov
mov
pop
xchg
push
aam
rolb
call
add
je
add
mov
lea
pop
pushl
call
push
push
sub
pop
call
jmp
cmpl
jne
push
add
add
inc
pop
mov
push
push
push
call
in
mov
mov
fsubrl
push
scas
xlat
lock
lods
mov
jns
pop
lea
add
add
in
int3
push
xchg
xchg
xchg
je
add
les
add
add
add
roll
lret
add
mov
add
test
outsl
add
clc
add
lcall
pusha
or
mov
jmp
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
scas
mov
call
call
add
mov
aam
aad
add
lcall
add
fiaddl
pop
add
add
jb
add
in
add
addb
add
add
push
popa
call
outsl
ret
cwtl
add
movsl
scas
add
add
jmp
data16
mov
popa
sub
pop
push
add
shr
pop
dec
jne
call
jmp
push
sub
pop
call
push
push
add
lea
add
push
and
add
sub
shr
sub
shl
lea
pop
sub
add
xor
pop
push
add
pop
pushl
push
push
push
push
push
push
push
lea
push
call
xchg
add
in
add
add
add
ja
add
add
lcall
mov
ja
sti
xchg
add
add
cltd
mov
test
lea
add
add
add
add
mov
in
push
add
xlat
arpl
xchg
add
js
add
popf
aam
scas
add
add
jae
ja
add
add
mov
lea
pop
call
push
call
push
ror
sub
shl
pop
mov
lea
push
push
shr
rol
push
sub
add
dec
add
sub
add
shl
pop
xor
pop
push
push
push
push
push
call
add
add
cmpsb
push
rcrl
add
add
scas
mov
mov
jb
flds
xchg
add
mov
add
add
add
mov
test
movsb
add
mov
pop
add
std
test
jecxz
add
jmp
add
add
jns
fwait
push
test
stos
jo
add
pop
pushl
push
lea
add
pop
call
push
push
pop
call
push
push
ror
add
rol
add
push
or
not
add
not
rol
lea
sub
sub
add
rol
pop
ror
pop
pushl
push
lea
rol
pop
call
call
push
ror
sub
shr
pop
mov
lea
push
push
not
shr
rol
xor
push
xor
add
shl
shr
ror
add
sub
rol
sub
shl
pop
lea
rol
pop
push
dec
shr
inc
pop
pushl
push
xor
lea
sub
pop
call
push
pop
lea
push
push
push
push
push
push
push
push
call
add
je
pusha
add
add
mov
in
xchg
movsb
push
add
add
out
add
jge
ja
out
cmpsb
add
cld
add
push
jmp
fstp
lret
add
in
shlb
add
sbb
add
je
add
add
add
add
add
add
add
add
popa
mov
xchg
fwait
add
pusha
add
pop
sahf
pop
add
cld
lea
pop
push
pushl
push
push
rol
sub
sub
shr
push
and
add
add
sub
add
pop
shl
add
inc
sub
pop
push
push
push
push
push
call
leave
add
fwait
xchg
fdivr
mov
add
add
push
jmp
xchg
scas
add
je
add
bound
movsl
cmc
shll
add
jmp
call
add
add
add
add
rcrb
roll
popl
add
add
mov
sarb
add
mov
flds
fstpt
pop
push
call
push
push
add
push
sub
add
rol
add
sub
sub
xor
not
pop
pop
push
push
lea
push
push
push
lea
push
call
lret
add
outsl
add
add
add
add
lret
push
sarb
stos
jmp
pop
jle
mov
movl
push
cli
add
mov
cli
add
loopne
add
pop
aam
add
add
xchg
fptan
add
add
add
add
rolb
iret
addb
les
jne
push
push
push
push
push
push
push
call
mov
pop
jae
notl
shrb
add
mov
add
aam
cmpsb
jbe
lahf
mov
mov
add
clc
add
jns
add
roll
add
cli
mov
add
add
add
jb
pushf
add
push
lods
cmpsb
mov
add
add
roll
mov
lea
pop
call
push
push
lea
push
lea
push
lea
push
call
out
jo
add
cmc
add
insb
mov
jno
xchg
add
xchg
add
lock
add
mov
add
sahf
add
arpl
sbbl
jbe
add
add
ljmp
add
add
add
jl
pop
mov
stos
push
xchg
xchg
aam
mov
nop
fidivrl
add
add
xchg
mov
lea
pop
push
push
push
lea
push
lea
push
push
call
movsb
cld
add
push
add
pusha
add
add
add
pop
add
add
xchg
push
enter
jge
push
lea
add
stos
call
fwait
int3
add
arpl
data16
add
add
add
add
pop
add
shl
bound
in
rolb
xchg
ljmp
jecxz
add
popa
jl
les
shrb
ss
mov
inc
add
dec
push
or
inc
add
add
sub
lea
rol
shr
ror
pop
sub
inc
pop
push
push
push
call
mov
push
roll
add
add
add
jnp
mov
sahf
loop
add
sahf
loopne
and
loop
cmpsl
cli
add
not
sbb
add
add
add
add
add
mov
mov
jp
clc
add
add
mov
push
pushf
add
mov
lea
pop
pushl
push
ror
add
pop
call
call
push
push
push
lea
push
push
call
cmpsb
stc
nop
add
cmp
jecxz
jae
lock
add
movb
add
jne
stos
add
insb
jno
jge
mov
mov
je
add
add
add
je
enter
add
push
add
ja
cmpsl
add
mov
cmpl
add
popf
scas
lods
clc
add
add
add
add
arpl
jmp
pushl
push
ror
inc
pop
mov
jmp
push
push
add
push
and
add
sub
sub
inc
pop
rol
inc
pop
push
add
pop
pushl
push
push
call
add
mov
into
add
add
call
int
xlat
int3
add
enter
cltd
jge
mov
je
lcall
cld
mov
mov
icebp
mov
add
movsl
add
pop
jno
add
je
nop
push
mov
icebp
add
add
pop
pusha
xchg
push
int3
lea
pop
call
push
sub
dec
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
addl
imull
jb
mov
cmpl
mov
mov
mov
stos
add
add
add
add
mov
mov
add
jge
loopne
xchg
in
mov
mov
bound
fiaddl
test
add
add
jle
add
stos
mov
jo
roll
add
mov
mov
mov
lea
pop
call
push
push
push
or
inc
add
sub
inc
pop
rol
inc
add
xor
pop
push
lea
push
lea
push
call
add
jno
add
mov
add
scas
add
add
add
add
mov
xchg
mov
add
add
push
lds
mov
add
push
cltd
push
int3
add
jno
add
mov
add
add
pop
pop
add
cmc
mov
insb
into
mov
lock
add
push
mov
aam
bound
pushl
call
push
ror
shr
ror
pop
push
push
push
push
push
push
call
mov
add
add
add
sti
jmp
js
bound
add
fidivrs
mov
cmc
addr16
add
add
ljmp
add
mov
xlat
add
add
int3
sar
add
add
hlt
cwtl
add
add
add
lret
add
add
insb
mov
lea
pop
call
leave
add
push
pop
pop
push
add
add
add
pop
pop
push
shl
lea
xor
pop
pop
pop
leave
push
push
push
push
call
mov
cmpb
bound
mov
cltd
add
subl
xchg
shll
into
add
out
mov
mov
add
mov
jl
roll
add
ret
mov
stos
add
xchg
mov
mov
scas
add
call
add
add
fimuls
xchg
mov
pop
add
fsubl
mov
lea
pop
add
ret
leave
push
lea
push
push
push
lea
push
push
lea
push
call
addl
add
pop
int
add
add
add
in
xlat
pushf
cmpsl
nop
add
add
mov
add
pop
addl
add
loopne
mov
mov
jae
movsl
testb
add
jle
icebp
gs
add
fdivp
fiaddl
add
je
add
add
test
iret
add
add
aad
aam
jecxz
jae
int3
lea
pop
ret
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jge
movsl
jle
out
les
mov
push
mov
add
test
pop
add
lret
jb
filds
scas
sti
push
add
add
outsl
les
pop
fdiv
mov
add
ljmp
add
add
add
insb
mov
add
add
push
imul
data16
mov
mov
mov
faddl
test
out
push
add
pop
push
push
add
dec
pop
mov
cmpl
jne
mov
push
lea
push
push
push
push
push
lea
push
call
pop
add
add
jge
mov
add
add
out
add
jle
or
in
cmpsb
popf
push
mov
add
lock
add
mov
add
add
jnp
push
in
add
lods
jecxz
add
add
out
insb
add
add
in
stc
xchg
in
in
fisttps
pop
jmp
mov
and
push
push
push
push
push
push
push
lea
push
push
call
pop
pop
incb
add
mov
add
pop
add
add
mov
add
js
je
stc
add
xchg
add
mov
add
test
andb
add
jne
add
call
gs
mov
add
add
rcrl
loopne
mov
jne
sarl
mov
addr16
xor
xor
add
push
not
shl
pop
xor
dec
sub
push
push
push
push
push
push
call
fcoms
add
testb
andl
add
add
xchg
add
add
add
movb
push
cmpsl
mov
xchg
fxch
push
testb
lea
mov
add
xchg
push
add
std
lret
cmc
add
add
test
loop
add
jmp
add
movsl
test
push
cwtl
push
push
mov
lret
add
negl
push
stc
cltd
fs
lea
pop
jmp
push
push
lea
push
push
push
push
push
push
push
push
call
add
push
iret
rolb
add
pushf
jmp
lods
add
add
add
ja
les
pop
fiaddl
jbe
xchg
mov
mov
xchg
test
jbe
loopne
mov
aam
andl
add
mov
jno
outsl
push
insb
bound
xchg
enter
add
fmuls
pop
sub
push
lea
push
push
push
push
push
call
add
add
add
add
add
add
nop
cmc
pusha
add
push
xchg
add
jb
mov
push
add
stos
jae
pushf
lods
imul
add
add
mov
jnp
enter
pop
jl
add
add
mov
lock
mov
clc
add
lods
add
xchg
add
add
mov
loope
add
bound
pop
pushl
pop
push
ror
inc
add
pop
sub
cmp
jne
push
not
add
dec
pop
mov
push
push
call
add
add
add
lret
jae
add
rcrl
loopne
add
add
add
pop
fsubp
lods
add
xchg
add
add
add
add
fwait
add
loope
fldcw
ja
add
adcl
add
shrb
enter
out
add
add
add
mov
pusha
or
dec
cmp
ror
not
inc
add
pop
sub
push
pop
mov
shr
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
shll
xchg
add
les
add
add
rcl
add
shlb
rolb
stos
mov
jle
pop
bound
cwtl
nop
arpl
pop
add
add
aad
add
add
add
arpl
add
aad
add
add
enter
sar
add
shlb
add
add
mov
add
mov
lea
pop
sub
pushl
pop
push
shl
pop
shr
and
sub
push
add
add
pop
cmp
jne
leave
ret
push
ror
add
add
sub
pop
push
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
aam
hlt
mov
data16
lret
add
add
jbe
add
add
add
mov
enter
loope
movsb
lods
xchg
add
add
fwait
add
data16
add
mov
add
je
xchg
pop
push
into
mov
push
bound
add
popf
cmpsb
mov
stos
in
js
mov
out
jbe
push
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
lahf
cwtl
mov
lahf
lcall
jge
pop
add
add
add
push
add
mov
add
bound
add
lock
loopne
add
mov
lds
mov
lahf
add
jbe
scas
into
insb
adcl
add
add
mov
test
pop
push
push
lea
sub
rol
pop
push
push
push
push
push
call
add
repnz
add
add
add
add
mov
add
add
add
addb
add
lcall
fldl
jecxz
add
lcall
add
mov
sahf
add
cli
push
fsubrl
add
add
add
add
mov
in
jne
popl
add
mov
fcmovnbe
jbe
notb
faddp
push
mov
lea
pop
push
mov
push
lea
push
push
push
push
call
add
add
popa
push
pop
push
mov
add
xchg
add
add
addr16
add
add
add
shrl
js
add
jae
in
jecxz
repnz
test
loopne
shrb
mov
icebp
add
pusha
mov
fadds
lea
cltd
add
bound
add
fmull
mov
add
leave
xchg
xchg
add
stc
leave
add
scas
add
add
add
adc
lea
sub
push
push
lea
push
push
call
cmp
mov
std
loope
jecxz
add
jmp
push
imul
add
add
shlb
add
into
cwtl
pushf
add
jae
insb
mov
jbe
cld
add
add
mov
mov
fadds
call
add
out
in
mov
add
mov
popf
movsl
add
test
add
add
pop
mov
pop
mov
shr
push
lea
push
push
push
push
lea
push
push
push
call
add
in
add
cwtl
out
add
cld
sub
lock
mov
div
lock
xlat
push
je
add
int
hlt
gs
cmpsb
mov
add
hlt
lods
add
add
loope
rolb
in
clc
fiadds
mov
mov
add
js
fiaddl
add
mov
add
jb
pop
test
out
push
add
add
pop
add
mov
add
push
lea
push
push
push
call
mov
add
xchg
pop
jmp
add
add
test
mov
add
lret
jp
scas
add
stos
add
add
sahf
add
in
add
add
add
add
add
push
cwtl
jecxz
mov
add
test
jp
add
add
loope
add
std
add
stos
fstp
mov
lea
pop
mov
add
xor
push
inc
sub
pop
mov
push
xor
xor
pop
and
push
shl
pop
call
add
cmp
je
push
add
dec
shl
inc
pop
add
cmpl
jne
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
sahf
jle
mov
mov
add
mov
ja
into
hlt
leave
mov
jmp
add
cld
add
test
add
add
aad
cmpsl
std
xchg
add
enter
mov
mov
add
xchg
add
add
add
les
cmc
jb
add
mov
lea
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
call
add
mov
jne
std
add
jecxz
loopne
lea
test
ret
add
icebp
push
rcll
pushf
testb
out
add
add
je
mov
mov
pop
cld
mov
scas
pop
iret
sti
mov
mov
lahf
push
add
iret
js
fbld
xchg
add
flds
add
push
mov
std
add
lea
pop
pop
push
shl
sub
sub
sub
pop
pop
pop
leave
push
pop
ret
mov
push
push
push
push
push
lea
push
push
push
call
pop
icebp
mov
mov
mov
add
add
add
arpl
loop
out
add
add
popa
jae
fidivrs
in
add
cmc
add
repnz
int
add
and
clc
lds
add
shl
add
add
jmp
std
repnz
fildl
add
int3
lea
pop
add
push
add
pop
push
push
lea
inc
pop
push
pop
pop
push
rol
pop
mov
push
call
push
lea
push
push
push
call
push
mov
add
push
add
out
enter
jne
test
jl
add
add
mov
add
mov
add
push
add
mov
ret
add
add
lds
add
cmpsb
add
les
mov
add
add
lret
add
cwtl
pop
jo
mov
add
pop
sahf
add
outsl
clc
addr16
lea
pop
xor
push
lea
push
lea
push
push
call
jae
pushf
add
std
add
add
fsubl
sahf
add
add
push
add
add
add
add
aam
rolb
push
jnp
int
add
add
mov
add
add
shl
mov
add
jnp
jne
add
mov
cld
lea
pop
pop
pop
pop
push
add
pop
pop
pop
push
push
call
mov
add
insb
iret
loope
mov
movsb
jge
xchg
mov
mov
outsl
cli
add
lock
outsl
add
add
ljmp
mov
cmpsl
mov
jno
mov
jmp
shl
mov
add
add
imul
push
xlat
add
add
add
into
mov
push
add
bound
pop
leave
ret
push
add
pop
push
push
push
push
push
push
lea
push
lea
push
call
cmc
pop
arpl
popf
add
ljmp
andl
aad
test
add
out
cmc
add
cli
popa
clc
mov
cltd
in
stos
enter
mov
lahf
rolb
mov
push
push
add
imul
cltd
sar
add
rolb
push
add
add
add
xchg
mov
mov
xchg
add
data16
mov
push
add
sub
pop
add
push
not
shl
pop
push
push
push
sub
shr
pop
push
push
mov
push
dec
ror
sub
pop
push
push
push
push
push
push
push
call
add
add
mov
pop
pusha
iret
add
mov
add
mov
addb
cmc
iret
addl
add
pop
mov
add
add
enter
rcrl
add
mov
add
imul
xlat
add
ja
aad
add
add
fidivrl
movsb
add
add
add
add
mov
int3
lea
pop
pop
lea
push
push
lea
push
push
push
call
add
jne
add
mov
fucomip
push
add
jno
add
stc
add
mov
cmpsb
xchg
xchg
lock
fwait
add
add
out
add
jnp
movsb
xchg
pop
cmpsl
pushf
xchg
rolb
add
add
js
add
add
add
add
xchg
bound
lea
mov
add
mov
mov
imul
jnp
fld
add
pop
sub
mov
push
dec
shr
shl
rol
pop
shr
add
mov
push
not
pop
add
pushl
popl
push
inc
shr
pop
mov
push
push
push
push
push
push
call
add
add
leave
vpavgb
mov
sahf
mov
add
fwait
pop
add
add
add
shrl
add
out
mov
rcll
movl
scas
add
xchg
add
aad
scas
add
loop
add
cld
pop
add
add
bound
pop
add
xor
push
xor
not
ror
pop
lea
push
push
lea
push
push
push
call
shrb
add
mov
pop
addr16
add
jecxz
xlat
pusha
add
testl
add
pushf
ljmp
add
fstpt
mov
shl
add
ja
add
call
lret
xchg
add
cwtl
movsb
push
add
leave
add
in
add
mov
fsubrs
jp
mov
lea
pop
mov
add
xor
push
not
add
pop
call
push
rol
rol
xor
pop
add
push
dec
xor
pop
nop
push
not
sub
shl
pop
nop
push
lea
push
push
push
lea
push
push
push
push
push
call
cltd
push
stc
add
add
add
mov
stc
push
out
je
xchg
roll
xchg
mov
mov
call
add
add
jmp
push
add
add
mov
add
fstl
push
lret
fldl
into
add
test
addr16
add
add
jnp
cmpsl
add
cwtl
jne
add
faddl
lock
add
cld
mov
hlt
lea
pop
cmp
je
nop
push
lea
push
push
push
lea
push
call
mov
mov
mov
xchg
sbbb
mov
call
testb
add
add
andl
add
imul
scas
lods
add
add
add
mov
popf
add
add
cltd
add
add
loop
stos
add
jp
je
lahf
loopne
fabs
add
pushf
int3
add
in
cld
lea
pop
nop
inc
push
push
push
lea
push
push
push
push
call
test
add
add
add
stc
stos
add
add
nop
add
pop
mov
outsl
add
add
clc
lea
rolb
add
add
add
in
pop
add
xchg
enter
lret
rorb
data16
add
push
add
and
icebp
sahf
icebp
add
mov
rorb
pop
nop
push
lea
push
call
outsl
add
data16
pop
int3
int
je
bound
add
add
add
add
jmp
add
add
fiaddl
popf
int
pusha
bound
mov
test
add
jns
js
pop
add
add
add
mov
add
add
pop
ja
xchg
in
add
lahf
add
add
outsl
add
add
std
add
xchg
mov
adc
add
pop
nop
cmp
jb
push
push
push
lea
push
push
push
call
add
cmpl
scas
add
mov
mov
test
add
movl
pop
add
add
sti
add
add
push
add
jno
add
add
add
push
iret
sahf
xchg
ja
mov
pop
lods
add
mov
add
xchg
push
mov
lcall
add
jns
out
mov
lea
pop
xor
push
xor
not
shr
pop
jmp
push
dec
pop
mov
push
lea
push
call
data16
fldl
enter
int3
add
push
add
mov
lds
cwtl
add
hlt
fstps
add
ja
add
add
ljmp
add
in
add
add
cwtl
stos
aad
call
jnp
add
idivb
pop
add
cwtl
lods
add
stc
mov
rcrl
bound
jl
movsl
jle
mov
imul
in
add
mov
lea
pop
add
movzwl
push
push
call
add
iret
add
mov
insb
add
fistpll
add
repnz
jle
add
push
leave
push
add
add
stos
data16
add
addb
cmpsl
xchg
ljmp
xchg
les
test
sti
mov
into
add
add
popl
add
add
push
ja
add
add
mov
lahf
pop
test
imul
out
int3
lea
pop
mov
push
add
rol
ror
pop
add
mov
xor
push
sub
add
ror
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
mov
add
aam
jmp
add
mov
pop
addr16
add
scas
cmpsl
push
roll
pop
pop
add
push
pop
add
add
pop
stc
mov
fxch
leave
add
add
add
divl
lea
add
push
data16
movsl
cmpsl
iret
sahf
push
jne
imul
add
add
add
lea
pop
shl
push
push
push
push
push
push
push
push
push
call
add
add
jmp
add
in
fidivl
add
push
jmp
push
mov
loope
add
rolb
add
stc
std
lahf
jge
in
add
add
je
addr16
mov
call
mov
testl
add
add
xchg
jb
add
push
mov
add
push
xchg
lret
fcmovnb
jmp
hlt
lea
pop
xor
push
push
lea
push
push
push
push
lea
push
call
add
mov
lea
test
cli
sti
outsl
push
add
in
mov
in
add
jge
outsl
mov
rcrb
add
add
mov
add
shl
push
add
jno
je
jecxz
les
xchg
popa
loop
add
mov
add
mov
pusha
add
add
xchg
xchg
add
movsl
int
add
add
add
add
pop
shl
push
lea
push
push
push
push
push
push
call
jnp
jmp
push
add
add
add
xchg
mov
add
mov
push
lds
add
push
add
jae
rcr
ret
rolb
scas
mov
jmp
add
repnz
xchg
pop
cmpsb
add
cltd
ljmp
clc
rolb
leave
nop
cmc
icebp
aad
add
mov
add
mov
mov
loop
cmpsl
mov
int3
lea
pop
xor
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
add
popa
add
int3
pop
into
add
mov
add
mov
add
into
fiaddl
mov
mov
add
add
clc
add
fld
add
pop
aad
imul
mov
mov
add
neg
jle
push
add
add
pop
shl
push
inc
add
rol
pop
xor
push
push
push
lea
push
lea
push
call
mov
arpl
add
add
jo
mov
test
add
imul
ja
mov
test
add
cmc
fs
pop
cwtl
sti
std
xchg
add
cli
std
push
add
lds
roll
add
add
add
incb
xchg
ret
mov
pop
mov
push
xchg
mov
rclb
add
jp
add
add
movsl
gs
ja
add
mov
lea
pop
mov
push
push
push
push
lea
push
call
shlb
jle
fs
jmp
add
mov
add
pop
add
lods
push
jne
add
lret
add
in
lods
add
clc
loope
div
gs
flds
add
add
bound
add
jbe
loop
mov
mov
add
add
gs
mov
pop
test
add
mov
lea
pop
add
push
add
add
lea
pop
pop
push
add
lea
dec
pop
pop
push
lea
push
call
add
sti
add
mulb
push
add
int3
sahf
add
out
mov
mov
mov
sti
testb
cli
cmc
mov
add
push
jp
js
lods
repnz
pop
sarl
add
mov
mov
in
loope
jbe
add
lods
loopne
pop
add
scas
add
subl
pop
movsb
add
imul
add
pop
pop
pop
push
pop
leave
ret
push
push
push
push
push
call
in
add
add
in
jmp
add
push
add
add
add
add
add
add
lea
mov
icebp
pushf
cmc
cmpsl
add
lods
add
cli
add
push
mov
add
push
test
cmpsl
xchg
rolb
mov
fists
jo
mov
nop
lahf
andl
add
leave
add
add
add
push
add
fcom
int3
movl
pusha
adc
in
push
sub
pop
push
push
push
pop
push
push
mov
push
sub
pop
mov
push
rol
add
pop
mov
test
je
mov
push
push
lea
push
lea
push
call
iret
jle
cmc
fs
pushf
add
add
into
add
add
add
xchg
add
add
cmpsb
add
push
push
add
add
lahf
les
hlt
fmul
add
add
add
add
shr
mov
mov
mov
add
stos
add
add
mov
cld
shrb
add
add
jecxz
lods
jne
add
add
adc
testb
ret
add
adc
push
push
lea
push
push
call
jge
add
mov
add
clc
lods
xchg
add
push
add
jbe
add
add
add
push
add
pusha
add
jge
add
loopne
ljmp
jl
jecxz
add
xchg
add
ljmp
add
loopne
ja
add
mov
lcall
fwait
add
pop
mov
push
not
pop
mov
push
add
pop
mov
inc
cmp
je
push
add
pop
test
je
push
add
shl
not
not
pop
mov
push
inc
pop
inc
cmp
je
test
jne
push
add
dec
add
pop
xor
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
add
fwait
jge
add
mov
loope
mov
mov
push
add
xchg
cmpsl
cld
add
je
add
add
scas
sub
imull
mov
lahf
loope
lahf
add
add
add
mov
stos
bound
fisubrs
cld
in
push
test
jb
scas
call
mov
add
xchg
fwait
add
mov
add
les
mov
in
aam
bound
pop
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
lds
add
fsubrl
add
cmpsl
mov
mov
mov
arpl
mov
mov
ja
loopne
pusha
mov
add
add
enter
xchg
ja
mov
add
out
xchg
insb
mov
add
cwtl
in
add
cmc
jmp
iret
loopne
mov
jne
stos
jne
add
add
fsubs
jl
pop
mov
push
int3
add
mov
lea
pop
ret
push
not
xor
pop
mov
push
push
push
push
call
add
xchg
in
push
add
fnstsw
xchg
lods
push
add
push
xchg
add
nop
mov
add
mov
into
add
movb
cmpsb
add
pop
bound
mov
mov
add
mov
rcrl
popf
cmpsl
add
addb
arpl
movsl
scas
mov
fiadds
mov
add
fsubs
add
std
in
add
mov
mov
lea
pop
inc
push
add
not
pop
cmp
jne
push
dec
pop
lea
push
pop
mov
test
je
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
shlb
mov
in
std
add
fdivl
mov
out
in
lret
mov
lock
xacquire
mov
lock
fmuls
mov
imul
add
add
fisubrl
pop
add
rcr
add
xchg
add
clc
push
insb
add
jge
add
mov
lea
pop
mov
push
push
lea
push
call
add
add
mov
lea
add
jb
mov
add
add
push
push
pop
push
enter
imul
mov
je
add
add
lds
faddl
mov
aam
add
lods
mov
int
jns
add
add
mov
loop
into
xchg
aam
mov
lea
pop
add
cmp
jne
push
shr
pop
mov
test
je
push
push
call
jae
mov
add
xchg
in
xchg
scas
mov
add
cmpsb
add
mov
add
mov
insb
add
pop
mov
mov
add
add
jbe
mov
add
divb
add
jl
std
add
sbbb
add
sub
loope
add
rolb
add
mov
add
fldt
cld
lea
pop
mov
push
xor
sub
xor
pop
add
cmp
je
jmp
push
lea
add
sub
pop
xor
pop
pop
push
lea
pop
pop
push
push
push
push
push
push
push
push
push
push
call
flds
pop
add
push
add
add
lret
mov
into
pop
stc
add
jge
call
push
add
ret
mov
jmp
pop
stc
mov
add
add
leave
ljmp
sahf
addr16
nop
add
add
pop
add
add
jmp
clc
imul
imul
jo
add
xlat
js
pop
add
mov
lea
pop
pop
push
push
call
add
stc
add
add
add
add
out
add
add
add
fstps
add
add
mov
jns
enter
ja
clc
jb
not
fstps
scas
sahf
imul
add
gs
mov
add
rolb
add
mov
mov
add
out
xchg
cmc
add
add
add
lds
pop
clc
add
mov
lea
pop
leave
push
push
lea
push
push
lea
push
push
push
push
call
data16
in
cld
in
ja
movsl
imul
push
push
add
fwait
popa
add
mov
repnz
test
add
add
add
add
pop
out
xchg
mov
mov
mov
add
jb
add
fiadds
pusha
outsl
pop
add
mov
add
add
add
jge
add
fildll
xchg
add
mov
lea
pop
ret
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
aam
add
add
add
in
add
xorl
add
mov
rol
xchg
xlat
les
pop
je
add
mov
add
mov
int
push
cli
xchg
add
into
scas
fcoml
add
jmp
lret
xorl
add
mov
mov
add
add
mov
lea
pop
lea
push
sub
shl
pop
pop
push
ror
not
pop
pop
push
not
sub
pop
pop
push
pop
pop
leave
ret
push
push
lea
push
push
lea
push
push
push
push
call
jno
fchs
subl
add
add
mov
add
add
stc
add
stc
pop
push
add
lock
add
mov
add
add
mov
add
add
jae
add
xchg
xchg
add
add
scas
jp
add
add
fwait
loope
add
jns
push
add
data16
push
lea
push
push
push
lea
push
call
mov
add
add
jecxz
add
pop
add
jae
add
mov
add
movl
add
imul
pop
mov
jb
mov
add
jns
jmp
cmpsl
add
lret
icebp
add
add
fs
lods
iret
fstpt
jne
jne
add
cli
mov
xchg
int3
add
popf
rcr
xchg
hlt
in
rorl
pop
pop
pop
pop
push
ror
not
dec
dec
pop
pop
leave
ret
push
sub
pop
rol
push
sub
shr
shl
pop
rol
xor
inc
push
lea
push
push
push
push
lea
push
push
call
add
add
add
fbld
pop
add
mov
add
std
cmpsl
add
add
ret
add
push
add
push
mov
push
loop
pop
xlat
push
cmc
pop
clc
andl
add
pop
mov
out
add
fs
add
add
push
stos
add
push
add
mov
scas
xchg
icebp
mov
add
add
add
iret
lods
add
rorb
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
push
mov
sti
mov
mov
sti
movsb
loope
sti
int3
in
sti
in
mov
sti
movsb
sub
sti
fcoml
sti
lahf
mov
repz
xor
jge
and
xchg
cmp
scas
cmp
xchg
dec
in
mov
cltd
sti
jg
sub
fcmovu
pop
adc
adc
je
xor
inc
fwait
mov
mov
jae
mov
sbbl
push
stos
loopne
mov
jl
ret
ja
mov
test
fdivl
pushf
cmpsl
es
imul
enter
das
and
lret
jp
mov
cmp
mov
nop
pop
adcb
pushf
lds
and
nop
repz
mov
mov
inc
sti
ret
std
ja
mov
xchg
loopne
xorl
push
int3
or
jmp
jmp
push
pop
popf
mov
xchg
mov
cmp
shlb
jbe
cld
xchg
inc
xchg
iret
mov
push
popf
mov
mov
mov
div
pushf
fidivrs
ret
mov
pop
loop
ja
in
mov
inc
pop
and
loopne
mov
je
out
xor
and
stos
and
repnz
test
and
stc
arpl
mov
xor
mov
lahf
test
test
stos
shlb
mov
xor
pushf
cmpsb
das
dec
test
cmp
mov
mov
jle
sub
inc
aas
lahf
aam
xchg
pop
bnd
cwtl
fcmovnb
and
push
xchg
lahf
out
popf
cwtl
mov
out
imul
aam
xchg
push
arpl
push
push
and
sbb
jecxz
push
push
jns
or
mov
inc
fwait
inc
out
push
in
adc
stos
inc
std
mov
push
sbb
mov
rol
jecxz
rol
add
and
addr16
movsb
stos
insl
ljmp
dec
pop
fistpll
rclb
inc
cs
dec
xor
pop
repnz
dec
dec
and
stos
cmpsb
mov
inc
arpl
aam
lret
addr16
in
or
clc
mov
dec
jae
enter
fldl
mov
mov
cmp
sub
xchg
int3
mov
or
xchg
or
gs
rorb
cmc
ljmp
cmp
clc
sbb
mov
xchg
cltd
test
insl
dec
cmp
es
mov
jo
mov
adc
iret
adc
pop
dec
inc
fimuls
scas
out
out
test
mov
outsb
sbbb
dec
test
mov
rolb
jmp
sub
dec
loope
sub
add
fstps
out
adc
xor
cmp
loope
sbb
jno
jle
mov
lret
xchg
add
dec
mov
repnz
push
sbb
je
sub
fs
cs
mov
mov
pop
imul
or
cltd
mov
inc
inc
divb
testb
sbb
in
pop
adc
cmp
ret
movsl
xchg
mov
jae
adc
pushf
mov
xorl
dec
mov
xchg
push
sub
insl
jb
or
jp
xchg
inc
jg
push
sub
in
sbb
insb
sbb
dec
sbb
repnz
cmp
insb
add
sub
jp
fs
mov
mov
mov
loopne
sub
nop
decl
pop
outsl
inc
into
es
push
je
cwtl
jmp
cmp
push
mov
loope
fmul
das
dec
adc
mov
out
mov
jge
data16
xorl
jb
in
nop
pop
sahf
test
shll
ss
jae
jns
add
or
push
iret
push
aad
cmpsb
inc
test
xlat
in
jno
pop
sbb
imul
sti
in
sbb
repnz
lock
iret
sub
mov
out
inc
pushf
cmp
pop
adc
inc
outsb
mov
cwtl
pusha
push
and
jbe
fisubrl
sub
push
testl
mov
lcall
outsb
cmp
mov
movsb
inc
cltd
cmp
mov
fsubl
pop
out
mov
lcall
test
jge
cltd
jle
push
outsb
jp
xchg
mov
jge
cmp
cltd
cmpsb
cmp
iret
mov
shrb
jl
jnp
mov
push
push
mov
ret
sbb
lahf
and
adc
imul
clc
sub
scas
pop
and
mov
in
mov
mov
dec
pop
dec
xor
out
mov
sub
adc
mov
push
cmp
cmp
repz
mov
ds
psubsb
std
pop
pushf
mov
mov
jge
mov
nop
mov
pop
add
imul
outsb
pop
pop
pushf
lock
movsl
xor
xor
ja
movsb
adc
mov
xor
cmp
adc
bswap
mov
in
pop
xchg
jmp
xchg
aas
sub
repz
dec
jbe
out
je
pushf
out
fsub
scas
or
lahf
mov
push
mov
pop
inc
add
clc
mov
jne
adc
jl
push
pop
push
cmp
mov
cmpb
mov
std
sub
xor
mov
fisttpl
cltd
sub
or
stos
cmp
pop
mov
xchg
ljmp
icebp
push
fiaddl
lock
scas
xchg
xchg
lods
cmp
pop
pop
inc
arpl
out
xchg
and
inc
add
out
or
inc
lret
shr
sub
mov
aaa
cmpsl
add
xor
and
jl
mov
lret
pop
sarl
das
adc
dec
xchg
sub
fcoms
pop
add
movsb
imul
mov
ret
shlb
ret
xchg
imul
xchg
ds
cli
xchg
clc
push
outsb
movsl
imul
lods
jnp
pop
xor
fnsave
sub
cmp
ret
imul
inc
xchg
mov
rep
mov
cltd
mov
mov
or
icebp
fidivs
imul
or
ret
jnp
cmp
pushf
add
or
push
jno
dec
cmpsl
popa
jne
das
rcrb
add
jne
paddb
lods
sbb
mov
mov
mov
lods
xchg
lods
cmp
push
bound
jmp
out
pop
cmp
and
lods
sbb
mov
adc
mov
divb
and
int
sbb
sbb
xchg
xchg
ss
add
mov
insl
test
lods
rcll
add
sub
jmp
dec
int
pop
sbb
adc
mov
pop
cmpsl
and
mov
xor
xchg
or
fists
mov
jp
ret
push
push
pushf
ljmp
pop
or
pop
jne
insl
dec
inc
loope
ljmp
rcl
hlt
scas
add
jl
lods
out
jne
push
lahf
mov
out
jbe
cmp
mov
mov
test
insl
sbb
stos
insl
cmp
addr16
lods
fsubr
lcall
fbstp
adc
fwait
call
sahf
ds
cs
jnp
mov
jnp
dec
jnp
jl
jae
les
imul
mov
adc
in
es
jmp
inc
pop
adc
adc
xor
loop
mov
ret
adc
cmpb
pop
inc
inc
rcrb
sub
adc
in
xor
cmp
jp
and
dec
lret
aaa
add
mov
out
dec
xor
or
insb
push
in
dec
xor
xchg
mov
sbb
fdivs
in
inc
mov
inc
mov
adc
fcom
and
pop
mov
add
mov
add
inc
mov
mov
pusha
sti
or
xor
mov
ret
inc
fmull
loope
sbb
dec
inc
xlat
pop
loopne
inc
cmpsl
add
and
loop
sub
xorb
push
adc
lret
out
incb
call
cmpsl
push
cli
add
and
stos
cli
add
sbb
hlt
adc
cmpsb
in
out
rcrl
sbb
testl
dec
jle
decb
fidivl
lods
gs
adc
mov
test
xchg
dec
repz
in
movsb
mov
aam
mov
fists
cwtl
mov
xor
xor
repnz
scas
mov
rsm
negb
fnstenv
imulb
mov
push
dec
fiadds
sbb
loop
clc
fcoms
dec
out
pop
aaa
xchg
mov
lcall
sub
jecxz
adc
in
lods
inc
sarb
hlt
and
adc
movsb
and
push
mov
mov
fisttpl
push
pushf
sbb
sbb
dec
int
mov
pushf
push
sub
or
xor
inc
inc
pop
rcrl
mov
lods
cmp
dec
adc
repz
fmuls
pop
pcmpgtw
in
mov
sub
mov
sbb
cmc
sub
lret
jecxz
sbb
lahf
es
xor
je
arpl
ret
lret
jp
inc
lds
xchg
push
shl
mov
outsb
je
push
lret
sub
xor
or
seta
idivb
scas
add
xchg
xor
or
and
cltd
dec
cmpsl
in
push
stos
mov
fbld
dec
lcall
dec
fwait
pop
mov
bnd
out
sbb
lahf
insl
and
lock
pusha
insl
pop
insb
pop
dec
out
loope
loopne
add
lods
mov
shlb
enter
adc
sub
iret
add
pushf
pusha
mov
add
xor
mov
das
push
fsubs
arpl
lret
hlt
insl
and
lods
push
nop
jmp
lock
in
call
lods
xchg
add
shll
mov
jmp
push
or
dec
jmp
cmp
imul
mov
inc
sbb
fwait
leave
imul
mov
repnz
xchg
adc
enter
adc
icebp
xchg
loop
sbb
mov
out
sarb
xor
sbb
xor
pop
jp
int3
sub
adc
mov
add
shl
xchg
mov
aam
mov
shr
pop
jmp
xchg
psubb
add
xor
loop
sub
daa
xor
imul
cmp
iret
mov
and
mov
pop
adc
sub
dec
imul
pop
sti
or
and
adc
push
decb
fiadds
mov
sbb
test
je,pn
sbb
div
add
rclb
stos
sbb
xchg
or
in
divps
jo
inc
lds
js
cmpb
sub
jbe
push
mov
add
jmp
dec
jle
ljmp
inc
icebp
inc
jg
lock
les
loopne
outsl
loop
adc
xchg
add
dec
lret
push
mov
jnp
pop
jge
push
enter
mov
xor
mov
or
xchg
call
add
add
lahf
mov
leave
cwtl
jb
mov
mov
adc
push
cmp
je
pop
popf
mov
repz
and
and
fmuls
or
sbb
stos
mov
adc
pop
mov
inc
js
int3
arpl
mov
xor
inc
xchg
jp
push
or
pop
or
lcall
xchg
arpl
cmp
push
mov
mov
xor
mov
test
insb
pop
or
sub
out
fisttpl
mov
mov
lahf
sbb
stc
or
mov
cld
jb
stos
cltd
daa
dec
loope
and
lcall
inc
movsb
sbb
out
ds
lcall
int3
fildl
inc
fistpll
pop
popf
arpl
out
add
pop
sbb
dec
les
add
test
bound
sub
pop
fs
daa
mov
adc
in
jne
sbb
push
sahf
xchg
mov
mov
xchg
mov
mov
inc
xor
cmc
and
add
push
icebp
cmpsb
dec
sti
hlt
dec
push
ja
or
je
cmp
inc
vcvttpd2dqy
and
sub
sub
hlt
adc
sbb
adcl
test
call
lock
pop
loop
fistps
and
mov
add
sub
lds
mov
out
fwait
sti
cmp
movsb
push
inc
ss
mov
mov
lock
mov
inc
cmp
push
and
pop
xor
mov
daa
xchg
roll
in
js
dec
fldcw
ss
adc
inc
mov
popa
dec
pop
lods
mov
dec
mov
or
dec
mov
data16
sbb
push
sbb
daa
das
enter
test
mov
mov
loopne
ss
dec
mov
in
xchg
add
sub
sbb
out
repnz
adc
pop
xchg
xchg
or
cmp
repz
dec
inc
jbe
inc
lods
add
out
xor
mov
mov
popf
xchg
outsb
jmp
jbe
imul
xchg
and
jo
out
sub
pop
aad
pop
or
sahf
sub
fisubrs
int3
dec
xchg
mov
xor
nop
data16
test
push
xor
insl
cmc
test
dec
fs
and
filds
cld
out
add
dec
ss
clc
push
ret
mov
or
and
insl
stos
xchg
adc
sti
cmp
arpl
mov
inc
adcb
xchg
fadd
aam
sbb
mov
iret
scas
or
jns
pop
int3
mov
je
sbb
call
ficoml
push
out
push
pop
shll
jnp
xchg
add
mov
push
loope
or
rol
movsl
sbb
xor
add
inc
sbb
and
adc
ret
sub
cmp
fnsave
loopne
icebp
inc
es
loopne
push
ljmp
ja
lock
sbb
dec
movsl
mov
sub
lods
sbb
push
push
mov
push
cmc
ficoml
xor
adc
inc
mov
cld
xorb
andl
lcall
fsubl
mov
xchg
nop
lock
test
pusha
sub
pusha
inc
enter
idivl
cmp
mov
xchg
popf
fists
out
xchg
adc
and
sbb
jp
clc
movsb
ds
ljmp
xchg
push
pop
iret
push
cmpsl
insb
sbb
push
movsb
cmp
push
rclb
xor
xor
lret
inc
repz
imull
pop
mov
pop
sub
cmc
sub
sub
mov
rcrl
xlat
ds
sbb
in
sbb
pop
mov
cld
inc
lahf
sub
out
jmp
es
mov
adc
orl
mov
insb
leave
int3
lds
pop
push
sbb
cld
add
sti
test
or
in
lods
add
add
xchg
test
cmc
mov
mov
mov
pop
jo
and
mov
sub
jecxz
mov
push
pusha
outsl
fucomp
cmpsb
test
jl
pop
xchg
shl
rorb
sub
cmp
cmp
out
jge
sub
jbe
xchg
dec
adc
mov
mov
neg
dec
inc
test
or
call
adc
jo
clc
dec
mov
cs
dec
and
inc
dec
mov
shll
cmpsb
xchg
mov
mov
mov
sbb
adc
mov
mov
dec
lods
mov
push
sbb
sub
call
call
inc
sbb
pop
bnd
and
jl
iret
rcrb
aaa
jno
mov
lret
adc
insb
int
into
mov
les
mov
mov
fdivs
test
inc
push
bound
rcl
cmc
mov
pop
mov
sti
add
xor
jmp
push
pop
jmp
popf
mov
mov
aam
fs
sub
or
mov
sbb
jno
stc
cmp
cmp
mov
lret
adcl
mov
dec
mov
subl
mov
pop
xchg
lret
mov
pop
into
nop
dec
popa
shrb
pop
jmp
jle
or
cld
lret
lret
xchg
and
sbb
jp
cmp
xor
je
mov
mov
mov
sbb
icebp
subl
insl
rcll
enter
cmpsb
or
mov
sub
inc
pusha
lods
repnz
cs
iret
leave
add
ret
mov
or
dec
ds
jge
subb
push
inc
outsl
xor
call
push
push
aaa
mov
dec
pop
in
cmpsl
dec
mov
sub
dec
jmp
es
dec
gs
fldcw
popa
leave
dec
popa
sarb
lcall
xchg
insl
sbb
jecxz
dec
and
mov
and
sti
push
bound
repz
inc
fistpl
xchg
ret
jno
lahf
sub
cmp
popa
pushf
cmpsl
inc
in
fsts
call
cld
pop
sbb
lods
mov
jae
in
pop
jns
incb
push
lcall
and
outsl
fiaddl
rclb
adc
lret
lahf
inc
xchg
mov
repnz
mov
into
stc
movsl
cmp
aas
stc
testl
stos
pusha
out
movb
mov
jae
cmp
mov
sbb
pushf
jne
pushf
lea
xor
mov
mov
mov
or
mov
fstl
leave
out
dec
nop
aaa
nop
stc
test
enter
push
mov
divl
xlat
rcl
ret
or
ficoms
lret
std
dec
cmp
xchg
and
fscale
xchg
arpl
or
inc
pop
movl
or
movsb
adc
and
mov
test
lds
sub
jge
sbb
pop
andl
sbb
inc
leave
in
aas
repnz
rorb
mov
lcall
mov
mov
in
or
add
inc
scas
stc
cld
pop
or
dec
jbe
xor
sbb
adc
lret
add
push
int
mov
mov
fisttps
ss
stos
and
in
and
sbb
loop
pop
stos
xchg
stos
dec
insb
jns
lea
xor
sti
inc
adc
sub
mov
das
loope
jg
lahf
and
dec
and
int3
repnz
mov
mov
sub
xchg
arpl
jno
test
sub
mov
push
ja
insb
xchg
add
popf
mov
shll
push
cmpb
xor
xchg
pushf
nop
mov
imul
test
cs
call
loope
xchg
lret
sbb
je
mov
sub
push
jg
insb
rcr
lret
test
inc
jg
jae
dec
push
pop
sub
ds
sahf
iret
xor
or
jl
push
push
cmp
iret
leave
pop
sub
and
sbb
inc
nop
bound
std
lcall
aaa
dec
rcr
filds
aaa
push
aam
stc
pushf
mov
fildll
lcall
pusha
stos
push
mov
fsubl
sbb
adc
sub
aad
mov
cmc
ss
push
push
lea
mov
inc
and
sbb
stc
push
inc
test
shrl
lods
leave
daa
int
sub
or
cwtl
es
in
shll
out
ja
int3
in
xchg
int3
popa
xchg
jno
sub
notb
popf
or
push
mov
lea
lock
loope
or
stos
sub
mov
out
movsb
mov
mov
mov
test
and
fucom
pushf
push
mov
sub
xchg
and
dec
jno
in
das
cs
and
inc
mov
gs
push
out
sub
pop
data16
mov
sti
stos
cmpl
call
sub
sar
shrb
mov
std
inc
repnz
mov
cmp
fstps
nop
xchg
dec
push
nop
jg
lods
movsl
int3
sub
push
in
stos
pop
pop
je
push
ror
xor
enter
test
pushf
lods
daa
scas
mov
push
daa
gs
lret
push
sti
adc
sti
mov
cmp
dec
scas
jnp
movsb
push
xchg
adc
push
rorb
pop
and
mov
adc
cli
cmp
popa
rclb
stc
pop
inc
in
cmc
pop
mov
lea
add
jg
aas
daa
imul
movsb
leave
xor
and
shrb
pop
lret
xchg
outsl
movsb
add
std
mov
pop
fcmovnu
lea
mov
leave
and
pop
out
push
push
test
sub
cmpsb
gs
inc
jae
cmp
jb
jo
scas
pop
dec
jl
setp
inc
sbb
shr
mov
repnz
leave
or
xchg
mov
push
jnp
or
les
adc
pop
movsb
ret
icebp
fldl
es
or
shll
imul
pusha
mov
das
add
jae
insb
jmp
stos
mov
enter
dec
xor
inc
push
push
cmpl
and
pop
test
fdivr
in
xor
dec
fstl
cmp
test
mov
lcall
int
xor
push
adc
xchg
inc
xchg
cmp
stos
pop
jnp
int
fildl
sub
push
sbb
xchg
xchg
adc
in
or
and
mov
pop
insb
adc
ljmp
sub
insl
sub
not
roll
adc
addr16
inc
inc
inc
jmp
add
jle
fstpt
pop
lods
cmp
ljmp
dec
aas
dec
xchg
imul
scas
sub
dec
or
jo
and
cmp
sub
inc
lods
sbb
aaa
popa
gs
xor
mov
push
push
mov
outsl
push
mov
inc
and
and
fs
gs
mov
dec
insb
dec
inc
stc
lds
cs
lret
mov
imul
iret
pop
jle
xor
cwtl
popf
xor
mov
jge
into
rcrb
mov
lcall
insl
fisubs
int
fcoms
lock
mov
popa
in
std
in
mov
mov
cli
mov
icebp
popa
mov
xchg
mov
xchg
and
fiadds
adc
dec
inc
lret
pushf
jmp
lcall
inc
pop
and
dec
sub
icebp
xchg
cmp
mov
jmp
gs
loopne
cmpl
or
jne
test
in
mov
in
dec
cld
cld
mov
cs
rorb
test
add
push
add
loop
loopne
iret
shlb
sti
jns
out
push
idiv
hlt
mov
inc
pop
and
stos
test
mov
dec
jecxz
mov
lods
xchg
mov
xchg
fwait
push
enter
mov
loop
aaa
out
in
inc
cmp
ss
loopne
js
stc
andl
pop
fs
inc
cld
sbb
js
dec
int3
lret
cli
icebp
in
cmp
pop
add
add
add
insl
or
shrl
fisttpll
push
jo
adc
enter
mov
fldt
rorb
les
mov
mov
icebp
dec
jno
outsl
in
lea
sub
xor
ret
mov
cmp
inc
out
sub
sub
in
push
mov
pop
push
pop
mov
jno
mov
xor
xchg
pop
dec
push
insl
call
lock
movsb
inc
repz
xor
lahf
push
insl
hlt
xor
sub
sahf
movsl
adc
pop
cmpb
rcl
pop
xchg
popf
mov
mov
loop
or
add
pushf
add
leave
pop
xor
cmp
inc
mov
stc
jb
sub
jg
adc
xor
pop
movaps
mov
fnsave
cmp
mov
orl
mov
add
stc
fldenv
cwtl
mov
inc
cli
push
fldcw
jbe
pop
add
jg
jne
inc
push
repnz
pop
cmp
and
jg
sarl
mov
adc
insl
loope
rcl
sbb
gs
jae
cwtl
scas
xor
fldenv
add
stos
adc
imul
adc
push
cmc
imul
out
call
std
push
mov
fidivrs
jp
and
fstl
ljmp
cmp
sub
or
cmp
loope
popa
pushf
add
xor
and
push
cmc
cs
loope
int3
cmp
int3
imul
int3
xor
mov
mov
or
mov
imul
xor
in
pop
xor
mov
mov
cwtl
sarl
xlat
xchg
icebp
mov
or
rclb
stos
sbb
push
clc
push
ja
addr16
sbb
jp
or
pusha
dec
sub
je
mov
adc
mov
pop
scas
adc
push
dec
outsb
jo
jno
iret
sarb
sbb
dec
movsl
dec
das
cmc
sub
cmc
stc
clc
jmp
jne
std
jo
xchg
rep
mov
ret
mov
xchg
sbb
dec
mov
pusha
mov
cmp
inc
out
iret
pop
add
mov
dec
jmp
icebp
cmc
in
scas
and
adc
mov
dec
adc
dec
cs
mov
mov
sbb
sub
outsl
cmp
push
xchg
jns
push
mov
xchg
jecxz
out
jmp
sub
sub
fwait
cmp
es
jae
jge
pushf
mov
popa
mov
jg
mov
shlb
and
pop
jecxz
cmp
push
rcll
mov
ja
xchg
mov
or
adc
out
mov
jl
out
inc
mov
xchg
in
add
mov
mov
sub
out
inc
xchg
ds
es
pop
jp
pop
clc
push
cmp
mov
call
sbb
repnz
out
push
in
xor
inc
dec
std
lock
pop
xor
mov
pop
insb
cmp
push
pop
dec
js
push
test
inc
mov
jp
jp
mov
push
pop
ret
lcall
pop
sbb
fstpl
dec
jns
cmp
cmp
mov
add
addr16
in
lret
lea
add
push
hlt
xor
test
push
loop
add
xchg
loop
push
jb
std
mov
adc
bound
push
add
push
enter
add
push
inc
cld
push
cmpl
jae
sti
int3
adc
fstpl
mov
xchg
sbb
pop
push
mov
mov
pop
ljmp
loope
outsb
rorl
and
popa
mov
fwait
loop
adc
pop
test
cs
push
mov
hlt
sti
pop
aaa
jno
jg
sbb
lcall
add
sub
xchg
cmp
cltd
sbb
xor
ljmp
fs
aad
outsb
adc
jae
loope
ja
cs
pop
inc
dec
inc
pop
test
cmp
shrl
loop
imul
aas
pop
add
adc
mov
pop
sub
pop
call
dec
fsubrs
mov
popa
clc
in
ret
jp
dec
push
aas
push
xchg
jbe
imul
sub
repnz
fsubrl
lret
filds
mov
lcall
push
push
jle
out
mov
xchg
dec
cmp
or
inc
gs
cmpsb
test
adc
cmc
rcrl
jmp
loope
inc
icebp
pop
lret
mov
scas
lock
scas
dec
outsl
test
imul
add
or
push
mov
out
cmp
push
outsl
mov
movsl
adc
push
cmp
movsb
xor
ss
in
and
jne
jnp
xchg
repz
aaa
and
mov
and
dec
sbbl
fbld
divl
and
jl
outsl
and
orb
add
sbb
insl
pop
hlt
int
mov
ja
aaa
pop
cmp
kmovb
lret
arpl
repz
adc
push
jb
subl
hlt
inc
jae
mov
adc
jno
faddp
ret
push
fnsave
in
jl
add
test
bound
lahf
ss
cmpsb
or
xchg
rep
loope
cmp
xchg
cld
clc
mov
sub
pop
test
lock
outsw
adc
insb
jnp
xor
jno
inc
out
in
arpl
addr16
aad
sbb
popf
mov
in
in
and
cmp
push
xchg
push
lcall
clc
insl
jg
mov
inc
sub
mov
test
push
xor
xor
hlt
sbb
push
rcll
cmp
xor
and
xchg
cmp
shr
sbbl
movsb
sbb
mov
pop
push
cmpsb
xor
lods
pushf
out
ret
pop
scas
cmc
mov
rcr
mov
test
daa
or
push
into
cmc
fucomi
lret
push
stc
xor
fwait
ror
mov
mov
je
mov
paddq
dec
or
push
and
outsl
in
mov
addb
xor
xor
push
rol
mov
fs
pop
out
fwait
out
jb
cmpsb
lods
std
jg
movsl
bound
jae
inc
and
xchg
fcomps
movsb
xchg
xor
pop
mov
loopne
andb
sahf
sub
jbe
outsl
and
jp
les
sbb
stc
xlat
movsl
pop
insl
les
in
movsb
int
and
push
mov
pop
aam
in
add
xchg
lods
ja
mov
call
arpl
mov
mov
xchg
ds
sti
in
pop
fidivs
pop
xlat
cmc
lret
pop
stos
push
hlt
or
xor
mov
arpl
or
mov
dec
fs
idiv
out
jno
push
xor
lcall
rcrl
stos
ds
jge
pop
mov
test
cwtl
clc
xor
add
inc
das
mov
fstpl
sub
adc
inc
dec
xor
cmpsb
outsl
dec
jb
cmp
push
sti
test
and
fprem1
cmp
jl
cmp
jp
dec
int
add
es
jg
loope
adc
das
xchg
jmp
insl
fldcw
xchg
pop
add
mov
popf
shr
lahf
cwtl
jecxz
je
mov
pop
ret
push
stos
lods
mov
test
out
pop
and
scas
and
adc
iret
nop
filds
cmp
mov
icebp
sub
pop
fnstenv
daa
out
dec
lods
sar
lods
imul
mov
es
sub
shl
sbb
mov
jno
adc
mov
jb
movsl
xor
mov
adc
cmp
sbb
or
shlb
popf
sahf
or
push
push
pushf
mov
mov
je
mov
sbb
icebp
js
push
xchg
xorl
inc
std
aam
sub
lret
jne
cs
cmp
mov
mov
ret
daa
daa
xor
sub
add
xchg
pop
push
movsb
cmp
lea
pusha
negl
mov
icebp
mov
adcl
xchg
sarl
je
fstpt
adc
into
loope
test
sbb
scas
fisubrs
xchg
aad
int
or
idiv
ja
push
or
imul
xor
sbb
cmp
xor
je
in
or
cmp
add
in
iret
or
lret
push
mov
aas
xchg
into
arpl
xchg
leave
cwtl
jle
mov
popf
push
push
inc
ret
mov
xchg
dec
mov
leave
jno
sti
fldcw
shrl
sbbb
ror
int
adcl
sbb
cmpsl
sub
test
lret
sub
pop
mov
mov
lcall
iret
inc
add
arpl
adc
jle
inc
push
mov
cmp
add
jmp
adc
push
lret
mov
adc
sbb
push
xchg
inc
or
cs
mov
mov
sub
adc
cmp
lahf
inc
sub
dec
xlat
cmp
mov
jg
mov
inc
inc
or
fcmovbe
movsl
loop
and
out
mov
cmp
pop
jb
or
wbinvd
jl
inc
jp
add
and
pop
and
mov
fwait
les
and
in
jne
inc
sub
sbb
dec
decb
xchg
or
mov
sub
cmp
fimull
mov
ss
sub
ret
sbb
incb
mov
ja
test
cmp
in
hlt
sub
iret
sub
sahf
xchg
mov
dec
mov
sbb
mov
repnz
jmp
cwtl
adc
jmp
cmp
cmp
push
add
pop
outsl
cmp
dec
jno
sahf
cmp
pop
int
stc
repz
iret
fildl
pop
adc
mov
clc
xchg
call
jl
or
adc
cmp
sbb
push
les
sub
subb
mov
lods
jno
sub
aam
add
lods
icebp
inc
jnp
out
stos
sti
jb
inc
mov
adc
fbstp
sahf
pandn
pop
xor
inc
inc
mov
inc
push
aaa
out
jne
cmp
ja
and
loope
in
fwait
jp
testb
dec
lcall
and
mov
in
mov
mull
adc
cs
adc
in
push
jb
fld1
sbb
ret
out
inc
add
fwait
adc
dec
cltd
dec
jns
addw
jne
imul
pop
push
jnp
popf
sub
pop
cmp
pop
sbb
out
shr
push
or
mov
pop
frstor
inc
aaa
fsubrs
mov
fwait
ja
les
push
dec
cld
push
push
stos
sbb
mov
in
in
repz
fimull
pop
sub
adc
dec
xchg
pop
jecxz
sub
sbb
std
and
shll
cmpsl
in
push
fs
mov
pop
push
fstpl
hlt
mov
fldt
sbb
shlb
add
insb
cmp
pop
xor
mov
pop
xchg
mov
les
jbe
insl
pusha
jg
push
mov
fsubp
loop
das
push
sti
add
mov
ss
cmc
stos
add
int
xchg
out
jno
cmpsl
hlt
cmp
cmp
mov
fildl
dec
inc
xor
and
mov
stos
adc
insb
cmc
pushw
loop
xor
mov
pushf
cs
push
aas
dec
jne
push
mov
arpl
push
mov
pop
clc
xchg
insl
pop
dec
dec
scas
dec
cltd
loop
dec
jb
das
mov
les
push
inc
sub
dec
rcrl
daa
mov
or
pop
es
lods
mov
add
pop
inc
scas
les
movsb
loope
jne
scas
push
enter
out
adc
icebp
ljmpw
mov
adc
movsl
xlat
mov
outsl
inc
dec
faddl
add
out
hlt
mov
cmp
inc
popa
jnp
or
or
pop
adc
outsb
push
shr
lock
sbb
mov
mov
pop
lret
insl
popf
mov
mov
sti
jb
clc
ret
scas
and
je
sarb
fistl
inc
jecxz
inc
in
push
xchg
jb
daa
std
cltd
jp
cs
jo
int
cmp
aaa
and
lock
sub
or
imul
push
shl
inc
cmp
cmp
fisttpll
out
int3
adc
xchg
push
std
and
cmp
mov
mov
lahf
fnsave
es
xchg
push
jne
loopne
inc
push
pop
test
xchg
mov
push
dec
dec
mov
call
and
adcl
pop
scas
das
push
adc
cmpsb
mull
movsl
enter
push
xchg
add
xchg
mov
packuswb
and
and
repnz
lds
leave
in
mov
mov
xor
and
fstps
push
xor
mov
sbb
jne
data16
jne
push
push
or
or
fwait
mov
xor
adc
lds
push
jp
lahf
je
pop
mov
sub
arpl
or
pop
test
filds
push
cli
lahf
aam
add
ret
stos
repnz
les
imul
mov
pop
mov
iret
jbe
dec
mov
sub
jno
icebp
fucomip
adcb
shl
ljmp
icebp
push
cltd
enter
nop
hlt
dec
push
cmp
ds
xchg
sbb
cmp
popa
mov
flds
les
lods
sub
popa
stc
hlt
cmp
cmp
data16
mov
jno
cmp
jo
and
popa
jge
popf
xorl
cmp
inc
popf
jle
lds
jnp
and
psrlq
inc
les
inc
push
iret
out
loop
jbe
jns
cwtl
fstpl
and
lcall
or
xor
inc
mov
icebp
cmpb
xchg
dec
sbb
cmc
cwtl
xor
popa
cmpsb
mov
mov
xchg
outsl
xor
in
rcl
repnz
mov
inc
push
test
mov
mov
bound
mov
outsb
jmp
fnstcw
pop
aam
sbb
data16
mov
mov
stos
ret
pop
iret
mov
sbb
imul
pop
ret
aam
add
and
fsubrs
jne
cld
mov
cmp
es
test
adc
ss
dec
xchg
rcrl
xchg
xor
pusha
or
push
push
and
out
mov
repz
in
test
ret
adc
xor
jbe
push
inc
addr16
dec
clc
daa
dec
aaa
sbb
mov
inc
popa
mov
gs
out
or
jo
fwait
cmp
aas
in
cli
push
mov
insb
xchg
sbb
push
mov
add
jecxz
sbb
rcll
cmpsb
cmp
decl
jns
adc
and
adc
mov
adc
push
dec
push
test
and
jbe
inc
push
push
jne
mov
dec
fisubrs
xlat
adcl
jmp
fldcw
mov
cmc
outsb
mov
inc
or
mov
dec
int
cli
jne
xor
cli
lds
sub
jp
mov
outsb
xchg
std
out
cmpsl
sar
adc
popf
jmp
sub
les
pop
adc
cmp
dec
imul
cmpsl
mov
inc
cmp
xchg
icebp
pop
loop
nop
ja
in
lret
scas
pop
inc
dec
dec
in
outsb
mov
adc
or
push
rolb
mov
sub
pop
imul
js
sbb
test
mov
add
adc
cltd
add
push
aad
test
fs
cwtl
aaa
pop
test
xchg
scas
into
sub
dec
leave
bound
sbb
stc
push
jns
xorb
lcall
mov
sahf
outsb
jg
jbe
pop
add
push
add
adc
les
int3
stos
rolb
mov
xchg
outsl
jl
jno
mov
cli
gs
inc
cld
out
in
jne
addr16
sbb
mov
roll
cmp
xchg
mov
iret
dec
dec
adc
sub
and
cmpsb
add
sahf
ret
out
cwtl
mov
dec
hlt
lock
push
mov
pushf
jbe
jg
lahf
and
lahf
and
pop
in
push
inc
add
inc
popa
ss
scas
mov
decb
out
clc
daa
pop
cmp
fwait
mov
mov
cmpsb
pushf
cmp
cltd
std
xchg
sbbb
inc
addr16
aaa
shrb
push
imul
add
pop
cmp
jl
xchg
mov
arpl
or
pop
nop
xchg
idiv
in
jno
hlt
loopne
aam
movsb
sti
das
cmp
mov
xor
int3
push
dec
push
xchg
popf
out
pop
adc
aad
jge
icebp
inc
popa
cvtps2pi
scas
cld
adc
xchg
fwait
inc
rol
pop
hlt
scas
mov
jle
iret
mov
lods
mov
mov
repz
mov
mov
int
loope
dec
and
aaa
mov
mov
pushf
inc
xchg
sub
out
xchg
mov
cmp
in
xchg
sti
movl
push
mov
adc
rcrl
mov
mov
push
andb
inc
nop
test
adc
cli
or
hlt
aas
loop
inc
add
adc
fcoml
and
push
mov
das
or
pop
inc
add
jnp
clc
mov
fcom
lret
js
out
hlt
addr16
mov
scas
pop
push
movsl
jmp
or
pop
sbb
cli
ljmp
mov
bound
pop
mov
call
push
push
in
cmp
add
shr
hlt
popf
mov
adc
add
mov
and
rcll
jmp
mov
cli
pop
fcmovu
loope
mov
mov
rolb
and
inc
test
sahf
in
insl
sbb
int3
jmp
add
mov
jmp
call
xlat
xlat
scas
xchg
push
mov
lahf
je
jbe
jmp
jecxz
xor
sub
sbb
cs
repz
in
out
jmp
cltd
pushf
repz
inc
push
std
repz
push
stos
fstps
pop
imul
mov
out
lret
mov
pop
cmp
sahf
in
test
add
imul
dec
jns
pop
clc
movl
mov
test
jae
stc
sbb
push
ds
pop
test
adc
mov
or
xor
mov
rcrb
aam
pusha
lret
enter
xchg
mov
push
test
scas
lret
push
mov
sti
enter
push
in
add
pop
pop
jbe
rorb
adcl
mov
push
lds
ss
mov
outsl
dec
ret
testb
popa
push
mov
xlat
mov
je
mov
dec
jnp
out
jno
sbb
fldpi
push
mov
sti
add
push
dec
or
idiv
stos
add
dec
mov
fwait
push
cld
clc
push
fistpl
lea
aad
aas
xor
sub
sbb
jp
divb
push
xor
mov
cmp
in
push
jb
in
jecxz
or
inc
mov
inc
sbb
inc
push
in
test
cmp
push
mov
xchg
aad
in
pop
sbb
push
jnp
lcall
push
and
push
inc
aas
popf
and
dec
or
xlat
adc
pop
call
iret
or
outsb
inc
ret
leave
jae
sarl
sub
pop
lods
cmc
pop
out
inc
push
pop
lods
popa
jmp
stos
lock
push
sub
xchg
lods
cmc
lock
rorb
pop
or
xchg
cld
faddl
test
aas
data16
mov
jne
cmp
popf
cld
adc
xchg
mov
test
insl
movsb
inc
inc
sub
dec
xor
and
sbb
loope
jecxz
or
rorl
pop
ret
xchg
ja
lock
fnstsw
stos
imul
add
into
dec
movsl
jbe
cmp
aam
pop
shlb
sbb
xor
xchg
js
cmp
andb
push
add
xor
sub
mull
dec
std
jno
push
out
ror
sti
push
fs
ljmp
lahf
sbbb
sbb
push
mov
nop
mov
mov
fildl
lcall
mov
iret
inc
nop
in
mov
loop
lahf
and
std
dec
push
cmp
mov
cmpsl
sbb
sbb
cltd
rorl
add
out
cld
jmp
or
leave
imul
push
adcb
sub
xor
cli
outsb
insb
ret
and
mov
jns
jbe
lds
cli
push
xchg
pop
mov
popa
ja
sbb
xor
addr16
inc
sbb
mov
inc
xchg
cltd
and
or
xor
xchg
jne
out
xchg
jb
insl
lods
push
dec
orl
jecxz
adc
mov
xor
push
std
jge
pop
mov
out
xchg
cmp
or
ljmp
in
pop
lds
push
sar
or
int
cmp
mov
jo
mov
in
push
dec
sub
mov
loope
icebp
pop
cmpsb
adc
pop
scas
in
lock
xor
inc
loopne
pop
arpl
mov
mov
add
mov
aas
outsl
mov
xlat
mov
dec
in
inc
xor
in
data16
rcrl
mov
sub
mov
push
test
insb
icebp
adc
jg
xchg
xchg
mov
mulb
xchg
lods
push
add
or
rcr
dec
inc
imul
mov
lods
or
and
add
pop
sub
inc
aad
dec
lahf
xor
inc
mov
pop
lret
cld
lret
pop
pop
dec
cmc
and
stos
jge
xor
popa
jb
and
out
cmpsb
add
js
jae
push
fucom
negl
xchg
icebp
jmp
mov
cltd
xchg
inc
imul
cmp
push
lret
gs
mov
aaa
xlat
das
mov
adc
mov
xchg
dec
insl
repnz
mov
cld
mov
xchg
push
cmp
mov
scas
xor
aas
cmp
movsl
xor
mov
repnz
cwtl
mov
mov
les
arpl
lods
or
cmp
or
xchg
shlb
add
in
mov
and
xchg
shl
fwait
mov
xchg
xchg
cmp
jnp
dec
jg
add
sub
out
mov
jge
fimuls
or
adc
inc
enter
rcr
fsubr
push
cmp
pusha
and
push
dec
or
push
or
test
add
addr16
jo
and
jmp
fs
mov
scas
mov
popf
jmp
inc
cmp
mov
inc
shrb
stc
int3
mov
cld
cmpsl
jne
aas
in
clc
fiaddl
adc
imul
popf
jnp
dec
add
inc
mov
cld
adc
negb
cltd
adc
fcomp
fmuls
push
dec
jle
jb
lds
pop
aas
xor
enter
push
call
cld
pop
cmp
or
std
xchg
jmp
push
adc
sub
push
fistl
sbb
cmp
fldcw
test
jl
ja
cli
js
lock
mov
fisubrl
divb
icebp
aam
call
jae
das
mov
pop
loop
in
leave
push
adc
lods
or
sbb
roll
cmp
fildll
jno
mov
outsl
lret
xchg
cmp
stos
inc
daa
fwait
movsl
push
repz
std
dec
repz
jo
mov
sub
jne
hlt
std
xchg
insl
cwtl
stos
xor
push
cld
stc
jns
sbb
or
push
add
xchg
test
mov
push
sub
into
jp
jbe
test
bound
hlt
sub
push
xor
stos
jbe
dec
lock
sbb
int
push
call
cwtl
xor
jmp
mov
dec
call
insl
mov
and
lret
aad
push
pusha
fstpt
je
add
std
les
inc
subb
xor
and
imul
xchg
sbb
int3
scas
lods
jecxz
ret
jno
xchg
shl
mov
push
pop
jp
inc
pop
sti
cs
mov
lds
mov
sub
ja
sub
hlt
pusha
ss
iret
mov
pop
adc
movsl
jne
push
jns
rcrl
wbinvd
dec
ja
pusha
int3
sbb
sahf
mov
jg
rcr
iret
pop
addb
ss
sbb
call
ljmp
test
popf
xor
or
mov
clc
int3
cmp
mov
mov
cli
mov
pop
es
ds
sbb
inc
inc
mov
push
mov
aam
cmp
test
inc
lcall
test
insl
js
mov
sub
or
jnp
mov
mov
pop
sbb
rcrl
insl
xor
add
and
aaa
sub
mov
cmpsl
push
jle
pop
cmp
mov
rcrb
xchg
pop
inc
add
rcll
xorl
mov
int3
jo
lcall
xor
dec
inc
sbb
mov
dec
pushf
lea
lods
mov
sub
test
or
test
jae
test
sub
add
sarl
repnz
inc
xor
loopne
dec
push
out
jge
rolb
cli
adc
enter
cmp
xchg
ret
xor
pop
push
sti
mov
push
ds
mov
push
pop
xchg
loopne
insb
adc
leave
xchg
sahf
xchg
jae
mov
push
data16
out
mov
addr16
pop
sub
fldenv
lods
or
push
xorb
xorb
daa
cwtl
cmp
cltd
lods
or
mov
xchg
aam
xchg
les
jnp
inc
inc
add
ficoms
xor
movsb
push
mov
test
pop
test
fwait
mov
repz
ss
notb
std
stos
mov
lcall
lret
sahf
aas
out
mov
out
fwait
xchg
cmp
push
rcll
or
dec
shrb
mov
dec
adc
test
push
pop
mov
mov
fs
flds
cltd
mov
cli
cs
push
dec
mov
je
sbb
inc
xor
daa
out
mov
aam
and
inc
mov
jno
cmp
mov
mov
stc
push
add
push
pop
xchg
pop
jp
cli
or
jo
ret
les
sahf
sub
sub
jg
push
dec
sbb
shll
push
push
and
ret
sbb
jmp
scas
aas
hlt
push
pop
dec
push
aad
aas
popf
mov
negb
es
push
hlt
jns
push
push
out
sti
mov
mov
std
inc
decl
mov
fsubrl
cmp
xor
fs
imul
insl
push
std
nop
mov
inc
push
inc
mov
or
cld
fwait
or
dec
stc
mov
cmp
mov
cwtl
xchg
sub
jne
push
fstpt
dec
add
insb
pop
jno
push
xorl
mov
js
mov
sti
fwait
cmpsb
fsub
js
dec
push
pop
push
out
xchg
adc
decl
movsl
mov
cmp
in
inc
or
scas
int
fisubl
inc
or
mov
push
out
mov
adc
sbb
adc
mov
jge
mov
or
xor
cli
jno
cltd
jle
xor
sbb
pop
sar
cwtl
arpl
jmp
mov
sub
inc
pop
cs
xchg
adc
aaa
inc
cmp
inc
out
cwtl
testb
cmp
aas
imul
xchg
jg
daa
mov
sbb
ficoml
insb
jle
pop
lods
jmp
fldenv
mov
loopne
das
mov
les
push
push
pushf
les
shll
aad
movsl
repz
iret
iret
xor
lcall
inc
xchg
xchg
mov
sub
mov
jo
repnz
xor
jnp
jl
in
pop
jno
mov
xchg
sub
push
or
cmp
jp
ja
jle
mov
inc
outsb
js
idivl
arpl
add
jbe
cmp
mov
mov
loop
out
repnz
push
out
xor
mov
mov
jo
mov
or
pop
js
dec
stc
lret
or
dec
jns
int
insb
pop
push
pop
in
call
popa
out
sub
sbb
inc
gs
arpl
stos
sub
ds
push
lods
shl
mov
mov
mov
dec
adc
push
enter
cli
inc
es
mov
push
stc
pop
test
fsubr
cmc
jns
push
outsb
movsl
or
and
pop
xor
xlat
inc
movsb
stos
pusha
enter
push
in
xchg
push
inc
inc
aas
inc
mov
clc
mov
ja
mov
in
xor
push
lret
and
test
mov
inc
lcall
nop
cld
fidivrl
shlb
inc
xor
ss
dec
insb
jno
cli
xlat
sbb
jmp
add
test
fstpl
push
mov
imul
mov
aas
stc
cmp
shlb
pop
notb
lret
pop
add
mov
lock
jno
int
imul
popf
lea
jo
loop
push
test
add
sbb
add
movsb
loop
sub
in
or
cltd
xlat
arpl
mov
push
xchg
mov
out
sub
lods
xor
xor
and
fwait
inc
cmp
pop
mov
inc
icebp
fidivs
cmp
outsb
es
aaa
and
jnp
fidivs
outsb
cmpl
sub
sub
mov
cmpsb
sti
mov
orb
pushf
out
sub
sbb
pushf
addb
sub
pop
jl
pop
mov
adc
and
cmp
loope
mov
sub
fcompl
and
into
mov
mov
mov
ret
sbb
push
sub
insb
add
scas
in
pop
or
ret
daa
xor
dec
inc
sarb
out
or
addr16
fimull
ret
ljmp
cmp
sbb
jmp
xchg
mov
or
cs
std
jae
mov
push
sub
mov
adc
test
push
inc
into
mov
pop
ret
add
dec
xchg
pop
lds
and
inc
mov
xchg
imul
aas
mov
adc
add
mov
das
jnp
mov
jecxz
shll
out
outsb
and
out
cmc
push
dec
leave
sub
repz
jns
jle
aas
push
jp
jae
pop
addb
test
adc
je
bound
cmp
sbb
jnp
stc
pop
xor
cmp
lret
xchg
pop
jmp
addl
jo
push
jle
mov
dec
mov
jno
dec
xlat
mov
addl
xor
and
cmp
sti
and
dec
xchg
lods
adc
lret
test
ret
push
sub
push
repnz
sbb
in
pop
pop
nop
jne
sub
mov
sub
pop
cmp
in
inc
test
out
jo
rclb
scas
inc
or
bndstx
push
ja
test
addr16
icebp
mov
xchg
inc
and
push
pop
xorb
push
cmp
aam
adc
xchg
lods
mov
add
addl
mov
icebp
xor
or
inc
jg
push
bound
cld
insl
inc
pop
insl
in
mov
in
outsb
imul
data16
sahf
add
add
mov
dec
fidivrs
rcl
xchg
dec
xor
lods
push
hlt
pusha
add
flds
ja
shll
pop
std
mov
mov
bound
cmp
jbe
mov
pop
xchg
mov
test
inc
ficompl
cmp
out
pop
sub
jp
ja
aaa
add
push
cmpsl
sbb
mov
push
cld
ret
and
mov
orl
loopne
or
xchg
pusha
inc
dec
les
adc
or
outsb
sbb
cs
leave
sbb
jg
adc
cmp
cmp
cmpsl
ficompl
push
mov
adcl
pop
in
jne
inc
movsl
mov
or
rcll
fst
add
or
and
iret
or
pop
scas
push
adc
inc
movntps
addr16
dec
mov
shrb
rorl
aam
xlat
movl
xchg
push
loopne
mull
pop
push
dec
into
pop
xlat
fldl
mov
cltd
inc
pop
cmp
div
mov
cmp
sarb
pop
shlb
pop
cld
cld
mov
std
pop
pop
or
loop
mov
cmpsl
push
jg
dec
div
repz
fwait
xor
jmp
cmp
jmp
mov
xor
in
pushf
dec
inc
or
icebp
mov
adc
ror
xchg
adc
jge
xor
mov
mov
push
mov
enter
mov
pusha
jge
addr16
notb
jb
pusha
stos
adc
xor
add
in
lcall
sub
mov
sub
xor
mov
sbb
jge
inc
mov
and
pushl
jne
dec
inc
add
subl
inc
adc
mov
sbb
jo
sarb
mov
cli
lret
mov
push
push
add
mov
lock
sbb
movsb
fwait
dec
cmc
daa
inc
addr16
add
aam
or
leave
insl
out
decl
mov
fnstcw
bound
mov
push
cld
cli
pop
jmp
bound
jb
inc
shl
xor
sahf
call
in
sbb
jns
pusha
inc
mov
fistpl
or
xchg
das
xchg
jne
mov
cmpsb
jbe
push
mov
push
fdivs
out
stos
jecxz
mov
xchg
mov
orb
push
sbb
es
cmpsl
sbb
pop
or
pop
mov
push
cmpsb
cwtl
std
push
push
adc
out
into
and
add
into
xor
js
std
mov
shrb
scas
pop
cmpsl
testl
cwtl
arpl
mov
je
cld
rol
dec
lcall
lods
jg
outsb
push
or
cmp
jl
fsubs
dec
outsb
negl
xorb
ret
fwait
js
jns,pn
pop
xchg
mov
shll
jge
jne
sub
pop
push
adc
pop
cs
pop
scas
ja
aaa
add
mov
xor
into
clc
movsl
lea
imul
bswap
inc
dec
aam
mov
movsb
inc
mov
mov
in
cmp
and
insb
xlat
and
push
sbb
loopne
sbb
push
mov
sub
sahf
repz
out
pop
rorl
pop
pusha
mov
mov
and
mov
xor
lret
jge
mov
int
mov
mov
out
push
pop
mov
jo
iret
and
sub
and
jno
sub
lcall
shrl
outsb
cmpsl
pushf
std
push
push
and
dec
pop
lea
or
out
out
movsl
sub
sbb
push
push
pop
and
sbb
imul
dec
and
stos
mov
mov
arpl
movsl
xchg
xor
cwtl
add
pusha
mov
das
jge
les
mov
out
jnp
sbb
fistps
bound
cmp
repz
std
ret
iret
xchg
fimuls
pop
mov
leave
push
mov
aaa
test
cmp
int3
xchg
pop
mov
clc
fsubrp
jecxz
dec
stos
in
out
xor
mov
dec
sarl
ds
in
cmp
adc
jae
aad
jb
scas
cmp
jnp
lret
ss
outsl
pop
lock
sbb
inc
std
add
and
xchg
push
shll
stos
jae
mov
add
stos
cmp
mov
in
mov
mov
pop
adc
xlat
cmp
inc
sbb
es
pop
mov
fsub
test
int
push
repz
mov
pushf
push
push
push
imul
aaa
insl
jbe
in
flds
fnsave
pop
repz
test
aaa
pop
xchg
adc
fisttps
mov
jae
jge
je
adcl
cmp
sbb
mov
pop
lret
out
xchg
call
xlat
test
mov
enter
cs
movsb
std
dec
ja
les
add
pand
ret
jnp
cmpb
mov
decb
sub
idiv
mov
out
add
xchg
fucomi
cmp
nop
and
fisubrl
cld
fisubrs
adc
pop
fldt
xchg
pop
mov
mov
pop
lods
outsb
xchg
pop
fscale
cwtl
rcrb
stc
xor
ja
pop
into
push
xor
das
xor
lea
dec
mov
and
sti
jnp
pop
jle
fidivrl
and
shrl
sub
int
mov
jmp
inc
or
add
cmp
adc
imul
fdivrs
jge
push
and
inc
lahf
mov
loop
jecxz
ds
and
insb
dec
inc
push
jae
aam
sbb
popa
adc
adc
or
xor
mov
repnz
lret
pop
fdivr
and
or
dec
pop
sahf
add
cmp
sbb
cmc
leave
cmp
in
mov
dec
push
shl
testl
fwait
pop
pop
sub
mov
cmp
lea
cli
popa
fiaddl
call
imul
sbbb
pop
xor
push
loop
outsb
cmp
mov
jge
push
fistl
jle
inc
inc
mov
dec
jns
mov
mov
lret
int3
mov
scas
pop
cwtl
jae
inc
xchg
shrb
mov
mov
fbld
or
xchg
orl
dec
pop
fiaddl
inc
sahf
pmaddwd
subb
add
jmp
dec
sbb
and
pushf
das
test
pop
loope
hlt
je
lock
and
push
mov
sub
push
jnp
es
pop
cmpsb
int
ja
pop
roll
xchg
dec
fnsave
cmpsb
mov
out
xor
push
push
std
fdivrl
jl
aam
and
sbbb
xchg
pop
hlt
mulb
adc
sarl
push
js
aaa
and
bound
cmpsb
fnstcw
dec
or
jg
daa
cli
sahf
or
and
pushf
pop
test
sub
lods
dec
mov
push
bound
fcompl
adc
sbb
in
cmp
in
xor
jmp
cli
mov
jp
fs
and
cli
ljmp
mov
jbe
cmp
mov
and
imul
test
nop
add
and
or
push
mov
lea
pop
nop
add
mov
dec
insl
movsb
jae
or
loop
push
cmp
rorl
pusha
jmp
inc
or
fnstenv
popf
insb
mov
lret
xchg
repz
jb
xchg
inc
int
add
ds
push
mov
aaa
ss
pop
adc
jae
orl
into
mov
daa
rolb
adc
inc
test
in
int
imul
movsl
mov
shll
push
or
adc
pop
xor
jmp
cmp
test
fisttpl
mov
filds
push
push
mov
js
dec
xchg
sbb
jmp
dec
test
ss
mov
cmp
cmpsb
sbb
cld
sub
icebp
cmpsl
and
and
push
pop
clc
mov
out
dec
pop
cs
in
jns
daa
push
dec
rcr
popf
mov
push
movsl
add
scas
aas
jge
adc
dec
lods
roll
xchg
push
loope
xchg
stos
scas
jg
repnz
add
sti
jg
xor
push
stos
aas
or
pop
loopne
imul
rcr
rolb
subb
pop
adc
subl
cmpsb
mov
enter
dec
mov
add
inc
and
pop
sbb
sbb
jge
mov
fbstp
sub
test
add
test
fwait
outsb
adcl
repz
dec
aam
aas
test
sbb
insl
sbb
adc
xlat
push
jp
ljmp
pop
fbstp
mov
dec
fldcw
aam
lcall
test
cwtl
fldenv
mov
cmp
insb
sbb
sub
test
add
push
pop
test
movb
jo
pop
out
icebp
xor
jl
push
hlt
adc
pop
push
xchg
loop
pop
movsl
mov
xchg
in
lret
mov
xchg
jne
int
sbb
dec
add
sti
and
bnd
inc
out
iret
movsl
add
fists
rcll
mov
js
dec
mov
or
jnp
cmp
stos
sub
jg
xchg
push
push
dec
pop
cld
dec
pop
popl
push
cmp
fwait
xchg
lea
faddl
int3
loope
sub
aad
cli
mov
sub
gs
jecxz
outsb
and
jbe
int3
xor
insb
dec
jmp
stos
cli
dec
out
paddq
xlat
and
addr16
jmp
push
xlat
mov
subb
pop
lahf
sahf
imul
xchg
aam
add
cmc
or
xor
add
pop
cwtl
pop
jp
sbb
xlat
add
add
jns
or
das
cmpb
hlt
mov
add
loope
xchg
fadds
dec
dec
sbb
mov
loop
add
jecxz
dec
xor
fsubrp
adc
sbb
sub
addr16
out
push
mov
lea
repnz
add
adc
std
out
and
insl
jecxz
mov
pop
cld
popa
mov
call
cmp
es
adc
je
mov
pop
lods
lahf
add
es
je
icebp
xlat
adc
jbe
jb
sbbb
fsubrs
mov
adc
shrb
cmpsb
movsb
jp
jne
mov
push
and
lods
loopne
inc
adc
mov
xchg
push
add
push
andl
fnstcw
push
sub
inc
std
imull
push
push
rcl
out
sbb
das
std
dec
fldenv
test
jo
pop
push
mov
xor
std
call
sahf
pop
add
dec
fwait
sbb
pop
cmp
in
cmpsl
mov
scas
mov
leave
pmaxsw
loop
xchg
and
push
dec
add
frndint
inc
clc
cmc
push
or
fwait
mov
adc
cmpsl
nop
jecxz
lea
xlat
adc
or
jmp
xchg
sarl
mov
movsl
push
and
jg
pop
adc
or
inc
ja
stos
lcall
or
or
push
daa
mov
aam
shrl
pop
les
sarl
stos
shlb
mov
aam
lahf
stos
in
fmulp
rolb
stos
sbb
aad
popa
xchg
int
push
mov
or
ss
mov
rolb
je
xor
mov
pop
mov
fmul
xor
mov
xchg
dec
data16
mov
pop
arpl
cmp
xor
fs
jae
sbb
jb
xor
inc
out
popa
jge
cmpsl
and
pushf
xor
neg
push
aaa
sbb
mov
sbb
lea
lods
mov
leave
repz
xchg
cli
push
mov
ret
xor
push
cs
adc
popf
dec
das
adc
es
mov
dec
jnp
cld
and
arpl
leave
popf
mov
fistpll
sti
mov
sub
pushf
arpl
sbb
pop
mov
adc
popf
jns
mov
pushf
add
mov
iret
clc
std
mov
addr16
jno
mov
pop
insb
mov
pop
pop
pop
adc
mov
dec
push
push
push
or
sbbb
lods
es
jb
sub
mov
lock
pushf
jle
testb
pop
mov
sub
sbb
xor
aas
jo
enter
inc
fildl
in
xor
lock
pop
aaa
dec
rclb
cmpsb
into
xchg
mov
xchg
mov
icebp
ds
std
arpl
push
pushf
sub
cmp
sbb
gs
lock
pop
popa
mov
sub
cmp
add
xor
cld
pop
sub
push
mov
sub
lock
rcrb
mov
push
stos
or
cmpsb
outsl
aaa
ss
mov
sbb
push
push
inc
cmp
pushf
pop
mov
int3
cld
lock
out
cmp
stos
lock
cmp
subb
data16
stos
icebp
adc
adc
lea
push
push
cmpsb
push
data16
push
pop
cmpsl
sbb
xchg
pop
sbb
and
sub
arpl
xlat
lods
xor
dec
sub
shll
data16
adc
push
inc
push
jnp
pop
inc
mov
stos
mov
mov
pop
push
adc
test
stc
arpl
test
adc
adc
mov
jge
xchg
ret
test
pushf
dec
stc
fsts
xlat
jb
xchg
loopne
jp
sbb
dec
mov
jge
call
pop
das
or
cmpsl
lock
ss
dec
sub
fldenv
pop
scas
pushf
add
or
fmuls
mov
or
out
clc
sahf
mov
mov
and
jmp
xchg
xlat
mov
dec
test
push
jge
jo
mov
and
jl
int
or
or
ds
jg
push
fidivrs
das
xor
das
mov
fsubrl
lcall
sub
scas
call
jg
cwtl
xor
or
jbe
repz
js
cmpsb
bound
popf
cmc
jp
mov
and
outsl
outsb
faddl
stos
inc
cmpsb
pop
outsl
ret
xor
xchg
jb
mov
adcb
scas
out
or
adcb
cld
push
mov
sahf
push
xchg
fcmovne
cmp
fstl
pop
insl
push
and
inc
push
fnstenv
adc
sub
jns
pop
out
and
fwait
xchg
mov
fmull
dec
pop
dec
inc
mov
aad
inc
in
icebp
push
xchg
push
ss
test
rorl
mov
and
fsts
ljmp
xchg
sbb
cmp
jl
mov
mov
aad
fs
jge
xchg
dec
les
inc
fwait
mov
cmp
xor
sbb
xchg
adc
push
xchg
adc
repnz
pop
movsb
jbe
push
xchg
jno
push
repnz
loop
sbb
shr
inc
mov
lret
jp
mov
in
add
lahf
mov
sbbb
sbb
fs
mov
mov
rcll
sub
jmp
sub
addl
pop
jns
ljmp
nop
xchg
pmulhuw
outsl
imul
xor
add
pop
lods
movsb
scas
sahf
ja
inc
and
test
xor
pop
pop
test
sbb
mov
cmp
jns
pop
mov
jmp
lods
adc
inc
mov
orl
push
movsb
add
in
out
sbb
out
adc
jnp
jge
dec
repnz
ret
stos
sbb
fs
dec
mov
mov
fs
sbb
and
xchg
sbb
insl
ret
xor
lret
dec
jge
sub
inc
push
sbb
cmpsb
xchg
lock
shll
xchg
sub
in
enter
xchg
mov
je
insl
push
mov
mov
roll
jns
xchg
movsb
aam
xchg
pop
push
pop
jb
push
jmp
sub
jge
mov
inc
mov
adc
lds
or
mov
test
jg
test
cmp
popa
rclb
sbb
jp
push
mov
jg
jecxz
jmp
sbb
shll
xchg
enter
jmp
mov
xor
or
loop
add
in
push
cmc
int3
push
dec
inc
scas
sbb
mov
and
xor
adc
cmp
lcall
outsl
push
or
rcr
loopne
cs
cmp
push
cli
and
xor
out
add
hlt
fwait
push
mov
mov
lock
mov
add
dec
xor
xor
stos
push
sar
jecxz
call
in
shlb
mov
push
xchg
jne
xchg
cmpl
notl
adc
inc
call
pop
xchg
rclb
inc
leave
xor
mov
inc
push
push
sahf
cmp
jmp
cmpsb
pop
mov
sti
inc
xor
lods
lods
into
adc
adc
xchg
mov
movsb
ret
aad
mov
mov
jge
fcmovnu
push
cmpsl
pop
push
pcmpgtb
mov
ja
jne
push
mov
loope
lcall
add
inc
dec
mov
cmc
and
add
repnz
push
dec
jle
pop
in
add
pop
or
lcall
testl
aas
adc
in
shrl
pop
or
mov
xchg
cmpsb
xchg
dec
clc
insl
or
inc
sub
in
cmp
stos
xlat
mov
mov
fdivr
dec
cmpsl
stos
lods
imul
cmpsb
add
fdecstp
xor
mov
es
sbb
add
xor
or
mov
sbbl
inc
push
cwtl
dec
insb
xor
enter
cmp
sbb
mov
dec
test
nop
fcmovnu
sbb
pop
stc
arpl
iret
xor
add
or
or
push
inc
es
cmc
roll
outsb
in
xor
sbb
adc
fisubrl
movl
or
cwtl
cmp
rcrb
or
mov
cmp
pusha
int3
mov
es
mov
fidivrs
test
lret
add
add
idivl
pop
das
in
imul
add
push
and
shrl
iret
and
int3
out
js
xor
shlb
and
xor
repz
fcompl
mov
cmp
jae
icebp
sbb
sub
or
sbb
push
repnz
subb
xor
pop
shrb
es
stos
outsl
lds
mov
add
or
push
pop
mov
stos
and
push
xchg
cmp
or
jo
pusha
push
mov
cli
lahf
imul
dec
movsl
rcrl
xchg
nop
add
test
mov
lock
mov
pop
or
fadds
adcl
imul
pushf
xchg
stos
dec
push
adc
jnp
cmp
push
or
inc
fstpt
sub
rol
daa
push
popf
sbb
lods
test
mov
push
xchg
jno
fcompl
add
pop
jp
sub
and
mov
xor
mov
xchg
iret
cmp
test
fs
pop
sbb
mov
fcmovnbe
pop
dec
sbb
or
sub
sub
in
dec
in
scas
fisttpl
add
dec
add
mov
xor
out
and
fistl
jb
dec
int3
adc
cmpb
mov
mov
insb
adc
pop
pop
in
aaa
or
jae
aam
sub
pop
loopne
add
insl
call
stos
sub
outsl
inc
mov
insl
xchg
movsl
mov
cltd
fwait
in
pop
cmpsl
mov
stos
movsb
int3
dec
cmpsl
push
clc
lahf
xor
jo
insb
movsl
mov
js
pop
push
ljmp
out
mov
mov
mov
dec
inc
les
daa
mov
sub
xlat
cmp
sub
jmp
and
aaa
mov
mov
xchg
shrl
ljmp
clc
imulb
dec
aam
pushf
scas
int3
test
sti
jle
jge
lock
jb
and
sbb
cmp
nop
movsl
stc
jns
push
in
cmp
daa
inc
rorl
xorb
cmp
jb
add
sbbb
das
aas
cli
lea
test
jae
outsl
or
pop
adc
jl
movsb
fisubl
sbb
dec
push
cmp
iret
pop
pop
insb
sbb
xchg
push
cmp
sahf
jb
xchg
or
andb
faddp
and
xor
jmp
aaa
inc
xchg
out
cmp
mov
shll
lea
std
bound
fmuls
je
enter
lcall
xchg
andl
jnp
andb
ficoml
dec
test
mov
inc
and
push
xor
cmp
or
adc
adc
push
jnp
std
xlat
xlat
iret
movsl
les
pop
mov
out
and
adc
lods
jmp
mov
rorl
cmpsb
mov
xor
add
clc
ret
test
test
mov
iret
stos
fisttpll
xor
inc
lret
jns
out
cli
insl
dec
jg
mov
sub
inc
pop
out
cmp
out
mov
mov
fisttpll
jecxz
pop
movsl
jno
xor
pusha
enter
mov
fsubrl
cwtl
sub
xchg
cli
and
mov
push
jg
push
fidivl
sub
test
push
xchg
pop
loop
sbb
movsb
sbb
fstl
dec
mov
sbb
ficoms
xor
in
mov
mov
dec
add
or
mov
loop
out
bound
sbb
mov
sbb
sbb
dec
xor
mov
push
outsb
mov
es
ja
adc
in
jle
in
mov
aas
jns
decw
mov
repz
inc
dec
push
xchg
aaa
stos
sbb
out
sbb
sub
lcall
and
add
xchg
or
jnp
sub
popf
fsts
cmp
enter
divb
xchg
add
jno
nop
popf
pop
sub
jno
fistl
mov
arpl
std
into
fucomip
jne
and
pop
inc
enter
popa
fcomip
je
mov
sub
or
inc
jno
pop
rcrl
inc
fs
pop
xchg
stos
stos
fidivrl
push
cmp
stos
movl
cld
dec
pop
imul
jo
lock
sub
fstl
pop
add
xchg
add
and
sbb
shl
fwait
stos
sbb
rcrb
mov
nop
cmp
imul
xchg
shlb
mov
cli
sub
xchg
xchg
loopne
push
pop
leave
jmp
test
pop
addr16
add
or
inc
push
stc
xchg
pop
lret
add
push
je
aaa
test
cmp
testl
cmp
dec
xchg
xchg
pop
pop
in
adc
or
cwtl
imul
test
jmp
mov
sub
cmpb
dec
in
in
cld
popf
icebp
out
jge
fisubl
fsubrl
inc
mov
dec
ret
fldcw
aaa
cmp
jnp
dec
icebp
and
xchg
pop
lcall
jmp
scas
aam
mov
inc
fucomip
arpl
xlat
mov
in
add
mov
popa
out
sub
adc
dec
icebp
imul
mov
inc
or
adc
ss
or
clc
mov
mov
xchg
push
inc
cld
test
scas
push
dec
dec
xor
jbe
inc
leave
pop
adc
shrl
and
ljmp
jne
imul
sti
push
outsl
cld
xchg
sbb
nop
mov
arpl
pop
inc
das
jb
hlt
mov
mov
mov
fbstp
int3
push
sub
adc
pop
mov
pop
push
mov
sbb
ffree
imul
push
popa
jp
mov
loope
mov
mov
sbb
sub
hlt
jns
test
cwtl
push
or
or
dec
test
dec
sub
cmc
push
inc
addr16
pop
sbb
xor
sbbb
mov
pop
mov
jle
xchg
and
fwait
xorl
mov
mov
mov
sub
pop
lret
cltd
mov
xchg
ja
add
sub
lret
mov
dec
fisubl
in
add
xchg
push
ss
hlt
pushf
push
mov
je
ss
cmp
lret
inc
xchg
dec
movsl
xor
stos
jno
pop
sub
pusha
into
divb
sbb
mov
aam
mov
sub
mov
cs
shll
mov
scas
fsubp
jecxz
scas
add
popf
or
jp
mov
lahf
es
out
cld
jae
pop
jg
and
push
or
mov
xlat
mov
scas
int
pop
and
mov
cmpl
iret
in
test
or
adc
jo
xor
dec
sahf
test
and
in
data16
iret
mov
sti
lcall
push
xor
fistl
call
test
xor
dec
mov
fdivl
sbb
test
mov
aaa
xor
cmp
shrl
cmp
sahf
rol
xor
sahf
rcll
cmp
test
in
mov
popa
inc
jecxz
cmpsb
sbb
cmp
add
int
inc
imul
int
push
mov
add
cli
jecxz
mov
ret
push
fwait
movsb
pop
in
and
movsl
jnp
sub
pop
sbb
jge
xchg
stc
sahf
stc
icebp
xchg
arpl
outsl
or
inc
inc
adc
add
mov
jbe
ret
jno
jns
out
mov
and
jnp
and
mov
xchg
sub
movsl
fisttpl
insb
ss
shl
ja
ljmp
xchg
out
add
inc
scas
dec
add
or
ds
scas
xchg
adcb
imul
out
jae
shll
les
jmp
or
sub
mov
cmp
mov
ret
mov
pop
mov
and
jnp
lods
testb
pop
push
jae
test
xchg
cmp
icebp
jmp
bound
pop
inc
dec
and
aam
notl
cmp
dec
pop
mov
ss
imul
mov
pop
repnz
cmpsb
ret
ljmp
pop
sub
xchg
jnp
sahf
jle
push
jnp
and
fistpl
xchg
inc
adc
mov
jge
sbb
mov
out
rorl
dec
xchg
ljmp
daa
dec
inc
inc
inc
rclb
push
fcoml
les
lahf
ljmp
int
push
jb
xchg
scas
arpl
fcoms
cmpsl
pop
xor
imul
mov
mov
push
loope
mov
mov
sbb
movsl
mov
fwait
push
push
nop
mov
pop
imul
orb
mov
ret
jnp
jle
hlt
jo
jg
adcb
jle
dec
fnstenv
push
call
int
xor
repnz
mov
cmp
stc
push
dec
repz
ja
incb
les
mov
mov
mov
popa
mov
pushf
aam
sub
in
jno
mov
and
push
xor
mov
dec
inc
add
std
pop
stos
insb
jo
inc
xlat
xor
mov
jnp
iret
imul
mov
jne
ffreep
mov
sbb
push
and
add
cwtl
cltd
enter
add
and
sahf
dec
adc
les
jl
cwtl
js
sahf
test
rcll
mov
fcom
push
cmovs
or
scas
dec
js
into
mov
mov
push
lea
pusha
xor
lods
fldenv
mov
inc
lock
pop
adc
addb
mov
loop
out
adc
or
jecxz
push
popa
lock
lods
push
xor
cmp
xlat
mov
imul
xchg
mov
jnp
fs
fwait
pusha
pop
pushl
mov
imul
mov
lret
loop
inc
xchg
xor
shl
mul
dec
loopne
dec
xchg
sbb
mov
stos
ss
subb
cs
enter
xchg
and
inc
test
jo
add
mov
mov
xchg
mov
add
inc
test
in
out
inc
aaa
stos
leave
mov
jp
mov
cld
je
call
in
movsl
ror
jbe
push
sahf
das
loop
out
lahf
adc
jmp
cs
loop
dec
pop
sub
push
inc
inc
cld
mov
pop
dec
sub
and
fisttps
imul
mov
test
fdivl
insb
or
pop
sub
lods
aad
dec
gs
xchg
clc
js
fistpll
cli
data16
pushf
inc
test
push
or
jmp
push
andb
leave
dec
mov
dec
int
sub
xor
jo
jl
adc
pop
push
cs
mov
sbb
cwtl
lahf
or
nop
cmp
add
repnz
pop
lret
mov
push
sbb
sbb
lods
jecxz
push
enter
ljmp
mov
jmp
inc
xchg
ljmp
xchg
sub
aad
or
add
inc
mov
mov
andb
mov
push
imul
int
jmp
xor
sub
mov
cmc
in
mov
lds
and
jmp
popa
sub
int3
out
test
dec
adc
movsl
rorl
push
xor
push
lret
fs
loope
outsw
or
add
cmp
or
xchg
ljmp
aam
jb
test
aam
aas
mov
mov
out
mov
mov
dec
mov
es
fstp
push
or
insl
out
and
dec
mov
jle
sbb
jg
pusha
push
addb
xchg
lret
test
push
out
lods
cmp
outsb
pop
push
and
or
test
sbb
push
mov
and
push
pop
cmp
int
lret
aas
adc
fucomi
cld
mov
pop
lret
shl
das
jmp
xor
and
dec
jge
jl
add
mov
jge
xchg
sbb
push
adc
adc
sbb
ljmp
lea
or
pop
cli
rorl
mov
xchg
xchg
jbe
out
cmp
mov
loopne
aaa
ds
dec
dec
das
adc
lahf
into
xor
sbb
shlb
adc
jb
add
std
ljmp
fistl
pop
or
xchg
test
stos
aad
ror
push
adc
xor
cmp
push
test
sub
lret
inc
jb
test
add
jns
ja
mov
out
stc
movb
jle
stc
ss
pop
xchg
pusha
test
mov
cs
lock
fs
test
push
in
push
cmp
xchg
je
repnz
mov
outsl
js
xchg
hlt
fists
pop
in
push
ret
push
cmp
or
mov
dec
lcall
lahf
clc
movsb
lret
inc
dec
inc
out
pop
mov
or
xor
incb
adc
dec
popa
popf
lea
and
mov
inc
push
mov
mov
mov
cwtl
add
push
stos
pop
and
ret
cmp
push
inc
sub
arpl
sub
xlat
xchg
loope
popa
aam
repnz
xor
xor
call
aad
pop
cmpsb
pop
push
test
mov
sbb
in
js
mov
pop
loopne
hlt
test
out
add
test
pop
mov
stos
dec
mov
sbb
jb
fwait
loope
xchg
test
in
test
jge
add
js
push
dec
cmp
nop
xchg
sbb
inc
into
bound
clc
jp
inc
sbb
dec
pop
add
push
insl
jns
insb
sub
xchg
stos
lods
push
cmp
stos
insl
mov
push
rorb
add
dec
hlt
ds
mov
pop
sbb
mov
aas
xchg
mov
add
dec
jae
add
stos
std
adc
outsb
inc
rorl
mov
inc
mov
sbb
pop
jmp
lea
push
mov
lods
in
aaa
push
outsb
adc
push
divb
sub
test
and
or
adc
push
das
mov
push
mov
lea
ret
shll
cmp
das
incb
or
mov
enter
mov
int3
add
cmp
mov
xchg
xchg
rcl
test
jle
mov
aaa
sub
gs
inc
ds
leave
sub
ljmp
mov
stos
and
or
dec
add
jne
out
shlb
in
fcoml
sbb
or
xchg
clc
in
fisubrs
outsl
inc
mov
lock
xchg
xchg
nop
ret
pop
jmp
addr16
lahf
mov
push
dec
push
push
pop
shl
jg
in
push
mov
inc
lahf
sti
insb
cmc
pop
sarl
push
shlb
dec
mov
cltd
aam
push
mov
add
or
sarb
mov
cmpsl
push
ret
xchg
xor
xchg
jne
loope
movsb
test
pushf
jae
xlat
jbe
mov
mov
push
fstpl
or
fadds
test
popf
add
pop
leave
adc
dec
mov
fnstcw
test
mov
dec
xor
fdiv
add
sub
pushf
fs
jl
mov
aam
inc
lods
repz
push
cmp
inc
mov
jns
push
add
fmulp
lcall
push
push
js
sti
pop
cld
add
test
push
pop
hlt
sbb
loopne
int3
ror
push
ljmp
les
pop
test
xor
mov
loopne
aad
jp
lock
aam
je
rcll
xlat
clc
push
lock
mov
or
and
mov
mov
std
into
adc
ja
mov
sub
dec
or
sbb
push
lret
pop
mov
ljmp
lods
dec
push
cmc
pop
jo
xchg
pop
sbb
xor
inc
add
and
jns
jmp
xchg
popf
dec
dec
subl
cld
rorb
jg
int
aad
mov
mov
cwtl
maxps
leave
xchg
sbb
rol
movsb
push
cmp
insl
sub
jg
add
popa
mov
add
cmp
or
imul
mov
cmpsb
in
call
xchg
call
jo
add
push
cmp
mov
xor
outsl
push
movsl
dec
mov
or
and
addr16
cmp
cmp
mov
dec
adc
xchg
test
push
andl
nop
dec
iret
ja
push
adc
add
adc
dec
js
adcl
pop
nop
jne
imul
mov
push
scas
in
sbb
add
js
and
enter
in
mov
adc
ret
push
in
add
mov
hlt
and
lret
jno
and
loop
loopne
inc
push
mov
loop
aam
nop
fsubl
pushf
xchg
fwait
add
lea
mov
adc
fidivrs
push
in
jg
jnp
sub
jle
push
mov
stos
notb
aam
pop
mov
repnz
cltd
in
fwait
sub
das
stos
mov
jecxz
adc
ljmp
cmp
mov
cmp
xchg
lock
cmp
sub
sub
add
mov
cmp
mov
call
mov
pop
leave
fisttps
repnz
add
cmp
cmc
dec
sub
cwtl
daa
jmp
jb
and
sbb
imul
enter
es
std
fwait
ss
or
les
test
ljmp
mov
scas
xorl
mov
add
lcall
sub
xor
inc
jecxz
xchg
cmpsb
push
inc
icebp
fcomps
mov
sbb
jo
jo
stos
sahf
mov
stos
push
in
loopne
test
xchg
cmp
cmpsb
add
pop
imul
repz
cmp
mov
addr16
lcall
mov
mov
jae
lret
or
bnd
jnp
aad
push
push
pop
notb
aas
sti
xchg
jne
jne
out
out
sub
xchg
int3
fimuls
lea
push
xchg
xchg
xchg
pop
xlat
pop
shll
rdpmc
or
movsb
loop
or
mov
out
out
dec
jb
inc
xor
xchg
scas
mov
ret
jb
sbb
in
js
ret
dec
sub
mov
mov
jbe
jns
cld
daa
push
xor
mov
mov
flds
fwait
push
xorl
in
notb
mov
lods
inc
add
cmovae
mov
fstpt
push
lea
repz
xchg
xchg
jl
icebp
sbb
mov
xchg
mov
out
repnz
xchg
fldl2t
fisubrl
sub
sti
or
stc
mov
icebp
icebp
xor
aaa
sub
pop
mov
test
stc
js
or
rcrb
and
lret
pushl
jbe
inc
jne
cmc
inc
sahf
repz
ja
outsb
ret
cli
shr
cmp
inc
xor
lahf
std
sahf
cmp
aas
fwait
loopne
mov
cltd
inc
and
inc
pop
xchg
loop
mov
or
fsubrs
pop
mov
pop
lods
pusha
lods
jne
dec
fcomps
pop
int
push
ror
cmp
mov
cwtl
xor
lret
pop
xchg
dec
or
pop
inc
cmpb
adc
sar
in
fcoml
test
daa
add
in
jo
adc
xor
dec
and
lock
call
or
scas
jecxz
sbb
jg
pop
xorb
push
mov
jno
scas
nop
pop
adc
repnz
mov
mov
test
dec
mov
ss
jnp
mov
aad
testl
repnz
popf
sahf
jmp
add
cmp
rol
scas
in
mov
mov
clc
pop
into
ljmp
pop
lahf
adc
mov
ljmp
scas
xchg
rol
mov
push
mov
ret
and
inc
les
cmp
add
fdivl
adc
int3
cmp
mov
jne
ds
fldcw
push
test
test
fwait
sbb
dec
movsl
sub
add
mov
add
jae
mov
xchg
dec
adc
mov
lahf
cld
ljmp
pop
iret
pop
inc
inc
call
or
cmpl
sbb
or
pop
out
rcr
nop
out
roll
and
and
fisubrs
and
aam
pop
notb
jle
or
repz
fyl2x
xchg
mov
lret
inc
mov
push
xor
mov
cmp
mov
mov
outsb
dec
or
mov
arpl
negl
es
pop
fsub
pcmpgtd
jecxz
xchg
mov
pop
pop
setp
aaa
adc
insb
xor
repz
cltd
repnz
jg
xor
loop
push
cmp
stos
pop
imul
jl
inc
mov
clc
sahf
xor
jg
adc
cld
lret
mov
fldenv
cs
cmp
cmc
pop
addr16
ret
movsl
lcall
inc
cmpsb
outsb
pop
pusha
test
mov
lret
adc
pop
cmc
jle
call
xchg
outsl
cltd
sti
mov
and
fstpl
int3
inc
inc
dec
mov
mov
stos
mov
not
jle
sbb
mov
add
in
jecxz
movsl
pop
xor
pop
pop
aas
adc
mov
xchg
jl
js
subl
aas
fstpt
fimuls
push
ljmp
clc
fistl
sar
adc
stos
cwtl
lret
jnp
mov
cwtl
clc
in
sub
cmp
mov
stos
or
sbb
and
and
aas
aas
mov
dec
push
jle
mov
repz
adc
in
sti
inc
in
mov
sub
pop
icebp
jmp
xor
into
push
fnsave
pop
popf
aaa
or
repz
out
rclb
push
decb
pop
pop
iret
lea
push
pop
in
cli
jne
nop
adcl
xchg
lods
addr16
pushf
mov
vxorpd
mov
loop
add
stc
movsb
pop
inc
jne
mov
and
fcoml
loop
insb
jg
jb
shl
push
cmp
pop
cmp
popf
jle
mov
xor
cmp
clc
jno
repnz
arpl
push
xchg
fnstenv
mov
addr16
adc
insl
in
call
push
lret
or
into
mov
or
mov
add
fs
pop
dec
movsl
repnz
push
jns
jmp
nop
fldt
xor
jge
das
je
into
or
cmp
add
push
rolb
lods
lahf
loope
std
pop
mov
mov
inc
jl
mov
sti
pop
inc
sti
jp
sub
xor
aaa
cltd
fwait
cli
jo
icebp
xchg
and
jb
cmc
xchg
lods
adc
xchg
mov
or
aam
pop
jo
popa
mov
test
das
mov
sub
pop
dec
jns
pop
insl
out
mov
in
clc
icebp
stos
push
jp
punpckhdq
sbb
push
repnz
loopne
xor
or
fistl
and
out
in
fwait
jnp
cli
push
jae
push
mov
or
jo
pop
or
or
cltd
ret
push
addr16
jg
scas
ror
lds
stos
cmpsb
xchg
scas
mov
push
in
or
lock
or
adc
rcrl
out
scas
xor
bound
aaa
lods
aam
jg
adc
outsl
or
shl
in
xchg
imul
out
lret
js
mov
popa
outsb
lods
pop
fisttpl
xor
sahf
cmp
addb
cmc
sarb
mov
mov
imul
clc
cltd
pop
scas
mov
push
nop
int3
jl
push
daa
mov
ljmp
aad
cmc
das
subb
pop
xlat
xchg
xchg
inc
add
inc
or
fnsave
mov
aam
mov
out
movsl
xorb
popa
scas
es
ret
aam
mov
jge
test
xor
cmp
mov
and
fsub
jp
ret
popa
mov
push
int3
dec
cmp
add
sub
mov
rcrl
nop
dec
xchg
adc
xor
call
or
sub
movsb
shlb
jp
data16
loopne
filds
rcll
pusha
push
stc
mov
xchg
enter
fs
clc
xor
fistpll
cmpsb
in
syscall
cmp
outsl
xchg
fs
add
addr16
lods
pop
rcl
or
imul
push
andl
leave
xlat
or
daa
movsb
test
pushf
xchg
mov
fldl
lcall
adcl
aad
mov
mov
sbb
fdivs
pop
test
xlat
imul
jbe
push
push
sub
and
lods
inc
int
das
and
push
dec
outsl
lcall
mov
and
or
add
leave
fwait
movsb
ret
stos
mov
or
push
xlat
test
xchg
lea
mov
fwait
mov
daa
adc
dec
sti
pop
mov
shrl
sahf
pop
lret
xchg
gs
aaa
push
xor
fiadds
cmpb
outsb
insb
je
dec
mov
cltd
popa
aam
in
stc
hlt
pop
dec
xchg
nop
popa
mov
orl
fcompl
sbb
fidivrl
shl
cmp
pop
xchg
mov
icebp
adc
and
sahf
insl
scas
sarl
push
or
mov
addr16
imul
push
mov
adc
jmp
data16
cmpsl
sub
cmpsb
movsb
add
jbe
and
inc
dec
scas
movsl
addl
in
jnp
cld
lea
stos
jmp
add
outsb
jne
pop
mov
cmp
inc
push
jp
les
and
jns
rolb
pop
and
dec
sbb
xor
shll
bnd
jbe
cltd
mov
mov
xor
sub
jl
add
xchg
movsb
in
xchg
out
or
mov
push
cmc
mov
bound
js
outsb
pop
in
mov
negb
sub
inc
ja
xchg
mov
and
jmp
mov
jns
cld
xlat
pop
mov
stc
js
imul
dec
or
gs
jp
das
cmpsl
iret
adc
mul
outsl
orl
and
add
pop
mov
loop
mov
js
lret
cmp
stos
jmp
fisttps
xchg
jmp
std
jo
push
and
nop
clc
stos
inc
mov
test
jle
xchg
sub
xor
push
imul
mov
jmp
out
inc
xchg
cmp
lds
int
cli
pop
inc
cli
cmp
data16
imul
dec
sbb
sahf
push
pop
jp
cld
mov
push
adc
mov
mov
cli
std
nop
xchg
jg
mov
notb
mov
or
leave
push
call
mov
cwtl
pop
mov
push
rorb
cs
jge
fs
js
and
mov
xchg
xor
xchg
or
sub
leave
adc
xor
rcr
and
pop
adc
ja
ret
imul
bound
jne
repz
dec
loope
push
cmp
cmp
push
sbb
mov
jecxz
inc
addl
lret
mov
inc
cmpsl
xlat
jl
ljmp
lock
imul
pop
push
sub
inc
rcrb
call
push
add
jnp
jecxz
jns
jnp
lods
xchg
jge
popa
or
inc
push
aaa
fistpll
repz
cld
aas
mov
sub
jmp
popa
dec
sbb
out
insl
rclb
cmp
mov
pop
dec
adc
fnstcw
jno
mov
fimuls
in
mov
xor
cmp
ja
movsl
mov
mov
mul
ret
idiv
mov
jb
dec
push
lcall
sbb
fwait
stos
rcll
add
pop
ljmp
lea
mov
pop
icebp
xchg
sbb
push
mov
push
out
repnz
jl
mov
xchg
insb
xor
les
mov
int3
int3
dec
jle
mov
xor
cmpsl
in
adc
push
aas
fpatan
bound
rcrl
xor
arpl
iret
mov
test
inc
inc
push
in
test
rolb
fs
les
or
or
ret
mov
pop
sahf
out
icebp
outsl
ret
xchg
push
sub
stos
scas
sub
jecxz
dec
pop
and
cmp
imul
psrld
or
fcmove
mov
aaa
test
stos
arpl
jnp
fstpt
mov
push
incb
into
insl
push
lea
pop
rcr
inc
hlt
xchg
xchg
mov
pop
push
xor
sbbl
adc
popf
push
gs
popa
inc
hlt
pop
mov
adc
leave
mov
imul
stc
sub
std
pusha
fistpll
or
xchg
push
cmp
stos
xchg
jbe
xchg
mov
out
pop
pop
out
fsubs
add
and
sub
scas
and
pop
lods
mov
gs
sbb
inc
repnz
loope
mov
icebp
jg
jp
popf
push
ret
xor
out
int
repnz
add
pop
or
leave
sbb
sbb
dec
push
or
xchg
dec
in
aaa
test
loope
jb
push
xchg
jb
inc
rorb
cmp
mov
xchg
jp
test
rcr
mov
mov
das
ljmp
ss
lahf
push
add
pop
scas
pop
ret
dec
lahf
out
cltd
incb
outsb
fstps
pop
push
jge
and
mov
loop
jmp
fsubs
test
xor
sbb
push
pushf
dec
adc
xor
loopne
out
sub
test
fidivrs
sub
and
or
cld
push
inc
and
adc
outsl
sbb
inc
adcb
sbb
sbb
mov
xlat
in
aaa
xchg
in
aad
xor
and
movsb
jnp
sbb
daa
jl
cmp
cli
mov
mov
add
out
xchg
dec
cmpsb
adc
pop
xor
and
sbb
fs
xchg
jnp
or
inc
pop
clc
aaa
jno
mov
xchg
jb
cmp
push
mov
sub
iret
mov
shlb
test
push
xor
adcb
fld
dec
std
dec
gs
out
mov
ret
popf
lahf
mov
jnp
mov
lret
xchg
fsubrp
iret
cld
repnz
sub
cmpsl
push
decb
cmp
aas
mov
xor
insb
jg
dec
leave
sbbb
aad
and
mov
loopne
dec
fninit
les
push
jp
push
data16
and
rolb
xor
data16
xchg
dec
inc
mov
ja
cmp
mov
dec
dec
push
mov
icebp
shrb
ds
cmp
int
jecxz
rcl
icebp
mov
mov
or
pushf
in
in
mov
ret
mov
sub
pop
xchg
test
paddusw
push
adc
push
cltd
imul
adc
movsl
cmp
dec
mov
inc
iret
or
mov
lahf
inc
sub
pop
aas
iret
dec
ret
jl
jecxz
aaa
dec
sbb
fstl
aam
stc
out
cmc
lds
cs
fnstcw
in
sbb
rcll
repnz
xor
rcr
push
rol
adc
fidivl
mov
xor
into
xchg
cs
shlb
mov
jle
repnz
dec
js
push
sbb
cmpsb
ficoms
pop
std
lret
rcrl
dec
push
sub
pop
ss
or
leave
and
les
push
mov
imul
inc
outsl
mov
imulb
mov
pop
ficomps
dec
mov
mov
inc
sti
dec
adc
out
mov
xor
xchg
jmp
add
into
ja
enter
lea
into
icebp
jecxz
jb
pop
adc
sub
xchg
dec
xor
leave
adc
dec
dec
and
dec
sbbb
inc
and
adc
sbb
es
xor
ss
push
bound
pop
jg
mov
xorb
mov
imul
inc
xchg
ss
fnstcw
sbb
mov
cmovg
test
adc
imul
jg
into
lret
hlt
mov
or
jge
mov
inc
subl
fld
dec
and
aaa
mov
lock
xor
mov
xchg
outsl
push
jge
imul
add
dec
fcompl
outsl
sbb
iret
and
roll
pop
out
mov
mov
clc
test
or
popl
in
test
icebp
repnz
cltd
ljmp
stos
and
and
stos
mov
mov
mov
sbb
xchg
mov
sti
push
sbb
push
ds
rcr
fldenv
jnp
shlb
mov
adc
push
loope
mov
into
addb
test
cvttps2pi
shrl
mov
and
mov
iret
pop
test
in
dec
pop
pop
jge
pop
sarb
gs
adc
or
add
sub
sbb
popa
lock
ds
loopne
push
cmp
scas
ljmp
pop
push
adc
and
mov
call
insl
shll
pushf
sub
aas
cltd
ret
cwtl
fmuls
out
mov
cmp
add
mov
fs
ss
sarl
and
loop
outsl
or
dec
push
mov
pop
adc
mov
xchg
in
or
sub
insl
test
cli
mov
leave
cmpb
xor
jno
mov
sbb
xor
iret
push
push
mov
or
sbb
sbbb
jnp
adc
adc
in
cmp
daa
jbe
or
mov
repz
in
push
jg
cmpsb
or
dec
sbb
jecxz
dec
inc
sbb
push
es
pushf
pusha
lret
xchg
add
andl
loopne
mov
mov
into
ret
jg
dec
jo
cmp
sbb
sbb
push
ror
dec
maxps
adcb
arpl
repnz
test
imul
test
gs
dec
sbb
push
xchg
pop
out
das
js
xchg
dec
enter
inc
xor
pop
xchg
pop
test
add
fldenv
cmc
xlat
out
scas
js
notb
test
lods
je
sbb
bswap
xchg
into
sbb
int3
xor
je
sahf
add
aas
testl
xor
pop
movsb
mov
adc
sub
je
cmpl
and
sub
imul
data16
sub
out
movsb
fs
mov
test
sub
call
out
enter
movb
hlt
setne
add
int3
sub
push
faddl
mov
sub
mov
lock
and
pop
jbe
addr16
dec
or
stos
fidivl
push
sbb
add
lods
inc
in
or
cmp
pop
shr
sbb
movsb
in
int
cmp
sbb
jmp
mov
fisubrl
scas
mov
hlt
out
and
inc
jp
lahf
jnp
adc
jmp
or
outsl
imul
fstpt
jle
xor
xchg
sub
jbe
or
scas
lock
fldt
dec
scas
cld
subb
sbb
subb
xor
mov
stc
dec
in
mov
stos
sbb
pop
cmp
pop
jns
add
push
stos
mov
push
popf
mov
js
rcr
imul
loopne
mov
mov
lods
sub
mov
mov
mov
movsl
xchg
int
sub
out
cli
lret
and
aas
cmpsb
mov
les
push
or
and
mov
push
and
inc
popa
push
fwait
ljmp
lds
fnstsw
pop
les
push
ljmp
cwtl
mov
and
out
inc
jnp
sub
fnsave
in
cmp
push
fsubl
aad
jle
repnz
or
sahf
dec
and
pop
setg
or
or
mov
sub
std
mov
xor
scas
les
mov
sahf
mov
negb
sahf
hlt
in
and
ja
out
and
test
inc
movsl
pop
jnp
pop
cmp
imul
sbb
cmpsb
jns
das
pushf
test
inc
fldcw
subl
push
dec
pop
test
inc
xchg
or
pushf
xchg
idiv
ret
cmpsl
lret
lahf
adc
adc
rcrb
shr
in
adc
pop
or
pop
cmpl
pop
dec
rcll
daa
iret
es
mov
push
xor
jp
iret
push
fwait
outsb
aaa
push
xor
adcb
adc
and
sbb
sub
and
mov
inc
pop
xchg
sub
jp
jl
jecxz
mov
arpl
pop
sub
cmp
and
test
push
fld1
cld
inc
pusha
adc
mov
js
adc
fst
leave
gs
or
adc
and
cs
popf
push
mov
ljmp
mov
mov
sahf
outsl
or
cmp
fistl
ja
dec
inc
pop
adc
arpl
stc
testl
dec
push
sbb
jmp
mov
or
xchg
int
repz
inc
xor
aad
inc
cmp
mov
adc
movsb
mov
dec
mov
inc
neg
hlt
fwait
notb
orb
push
negl
and
imulb
lods
movsl
adc
and
sub
push
arpl
mov
inc
push
xchg
mov
test
loop
lds
out
andl
sarl
jno
lret
inc
es
mov
dec
stos
inc
je
push
testl
cmc
mov
adc
outsb
mov
dec
lods
imul
or
add
sbb
jo
push
dec
inc
mov
mov
das
inc
ljmp
sbb
repz
jg
cmp
xchg
outsl
rcrb
ret
xor
pusha
lea
xor
jmp
push
lahf
jo
sbb
je
repz
xor
nop
inc
sbb
fiaddl
and
inc
and
sbb
and
imul
xchg
inc
dec
sub
cli
movsl
addr16
out
push
adc
push
jg
sahf
cmp
cmp
in
inc
ds
mov
insb
into
and
mov
ffree
addr16
dec
in
push
ds
mov
bound
and
sub
scas
mov
orl
xchg
ss
push
cmp
mov
test
dec
out
add
push
aas
leave
les
or
jmp
popa
pusha
xchg
sub
mov
add
icebp
add
lods
push
scas
xor
inc
out
or
inc
daa
push
out
out
aam
pop
fsts
lret
iret
lds
or
sbb
les
scas
in
pop
dec
inc
iret
fcoml
mov
mov
sahf
outsb
cmp
sahf
sarl
repnz
mov
mov
jbe
jecxz
jmp
ja
mov
lret
fsub
jl
xor
inc
adc
movsl
push
jg
aaa
stc
jl
out
or
out
cmp
popa
mov
orl
xor
pop
lods
pushf
fcmovnu
jne
pop
outsl
in
jmp
mov
mov
push
test
xor
sub
ret
scas
and
rorl
fwait
int3
lcall
ret
xor
add
nop
pop
mov
aam
jecxz
mov
scas
loop
jne
popa
sarl
gs
cli
sti
ss
mov
lock
dec
xor
push
add
mov
or
jo
dec
jmp
mov
mov
fldenv
push
loop
fldcw
inc
jne
negl
lods
xor
xchg
pop
test
stc
sahf
jl
mov
pushf
and
fisubs
inc
insl
scas
cli
mov
dec
ret
ljmp
test
pop
lods
ficoml
addr16
jb
push
sub
or
add
jp,pt
mov
out
data16
push
mov
xor
out
mov
lods
popa
mov
daa
ja
pushf
jmp
fsubrl
inc
scas
or
pop
enter
out
mov
cmpl
lahf
xchg
sbb
add
test
adc
mov
mov
fnsave
inc
pop
mov
mov
pop
arpl
mov
test
enter
add
sub
xor
fwait
aam
cmc
inc
lahf
outsb
push
adc
and
sub
lds
call
jg
mov
cs
cmp
push
or
roll
out
cld
add
into
imulb
lgs
shr
icebp
sub
sbb
push
mov
push
sarl
xor
add
pop
scas
ret
inc
and
mov
pop
mov
insb
pop
xchg
xorl
pop
mov
xchg
incb
mov
jo
popa
lret
out
dec
lods
in
adc
and
insb
dec
sub
adc
or
inc
jg
jg
sbb
dec
and
xchg
in
pop
mov
and
xchg
push
jg
xor
mov
xchg
inc
and
hlt
sub
aas
stos
insl
and
rcrl
xor
sahf
mov
jno
xchg
inc
and
jmp
or
lea
repnz
rcll
adc
pop
out
or
in
adcb
mov
xchg
sbb
imul
enter
sbb
xor
mov
xchg
sarl
and
jae
sbb
mov
fimull
push
cs
push
daa
sub
in
subb
and
sti
push
loopne
pop
movl
int3
mov
inc
subl
xchg
out
push
cmp
dec
aad
xor
pop
imul
xor
fwait
push
mov
push
sbb
nop
mull
fimuls
mov
sub
cli
mov
or
sahf
out
add
inc
mov
sbb
add
sbb
stos
cmp
mov
mov
test
xor
in
add
push
out
lods
jne
inc
lds
ret
frstor
or
cmp
pop
outsl
sbb
inc
leave
jo
sub
jbe
or
cmp
enter
sbb
adc
inc
jmp
mov
sub
cltd
in
xlat
jecxz
sub
into
std
ret
pushf
lods
clc
into
jmp
les
cmp
pop
mov
aam
cmp
sbb
repz
mov
mov
or
xchg
cmp
test
dec
bound
mov
mov
mov
cmp
rcrb
std
or
xor
insb
mov
sbb
mov
nop
push
int3
jnp
rorl
lds
popa
scas
push
xchg
ret
mov
fs
repz
and
mov
push
or
fildll
sub
push
nop
jo
insl
shld
jecxz
mov
sbbl
fbstp
or
inc
mov
xchg
icebp
mov
push
loope
dec
loopne
lahf
xor
repnz
data16
aam
sbb
mov
xchg
push
pop
dec
pop
pop
mov
stc
or
sub
repz
bound
out
sbb
lcall
mov
inc
jns
jns
iret
dec
outsb
shr
lret
lcall
rcrl
rcl
sbb
hlt
mov
clc
loopne
fwait
push
gs
adc
imul
sti
xchg
add
adc
mov
hlt
mov
mov
sub
pop
add
mov
dec
adc
shl
stc
dec
sub
fidivrs
test
lcall
das
mov
pusha
fildl
repz
jne
dec
dec
inc
dec
int
rolb
outsb
stc
mov
ret
stos
adc
and
fwait
push
pushf
fwait
sub
or
inc
jg
cmp
fstp
push
cmp
or
into
add
in
and
mov
ljmp
jg
xor
fisttps
pop
movsb
adc
mov
hlt
in
lods
test
ss
and
add
mov
sbb
cmpsb
pop
sahf
mov
outsl
out
insl
add
inc
and
outsb
dec
mov
add
or
ja
mov
adc
das
imul
mov
mov
push
orl
push
lcall
imul
into
jo
test
insb
daa
dec
xlat
push
push
mov
cltd
push
pop
sub
leave
pop
and
cmp
cmp
sbb
leave
mov
test
ja
or
mov
cmp
mov
xorps
inc
mov
call
mov
pop
dec
int3
subl
mov
lods
jae
sti
in
dec
pop
in
jb
push
cmp
lock
rorb
mov
xor
inc
cmovle
popa
or
xor
push
push
js
sar
scas
jb
jmp
stos
cltd
mov
sub
aaa
sbb
dec
aad
fistpll
xchg
mov
push
mov
dec
mov
sub
cld
ret
add
pop
shll
lret
out
lret
add
jbe
fstl
xchg
stos
lret
divb
lret
xchg
fmull
sub
leave
xchg
ret
or
push
mov
jge
jo
xor
xchg
pop
lea
pop
imul
cmp
adcl
into
or
dec
lock
pushf
dec
and
movntq
mov
inc
out
inc
push
sbb
cmpsl
inc
subb
push
je
dec
adc
xchg
dec
mov
jge
stos
enter
fists
jne
js
pop
dec
out
mov
adc
rcll
push
pop
leave
push
mov
and
and
dec
addb
out
and
sbb
add
mov
fsubr
push
jno
and
jle
repnz
cmp
xchg
dec
sbb
rorl
stos
lret
lock
xlat
iret
bound
mov
dec
pop
int3
lods
xor
daa
scas
stc
pushf
pop
jmp
adc
fcmovb
les
jo
aam
fcmove
icebp
and
loope
das
les
rclb
sahf
xor
in
popa
test
aad
daa
ret
push
roll
adc
cmp
sbb
popa
fimull
arpl
mov
jp
sar
cld
div
pop
js
repnz
push
mov
sub
pop
mov
push
ds
jp
jne
rolb
dec
push
out
cmc
jmp
pusha
jae
or
adc
inc
and
add
lret
push
add
lret
dec
cmpsl
cltd
ret
xorl
lds
xor
and
addr16
mov
loope
popa
fdivrs
sub
int
mov
push
push
aam
in
sti
cmp
and
adc
es
sbb
jle
cs
loop
and
push
mov
icebp
xchg
or
mov
aad
cmp
aaa
inc
xor
xchg
loopne
pop
dec
mov
and
and
fs
mov
inc
mov
add
cld
test
jae
pop
push
mov
mov
loopne
pop
xor
sbb
daa
or
stc
sti
or
inc
decb
sahf
pop
es
xor
into
into
or
add
bound
mov
aaa
dec
aas
fdivrs
call
adc
les
ss
clc
cmp
test
sub
push
jp
lret
adc
loope
cmpsb
push
or
or
fsubr
sahf
inc
cs
jne
nop
adc
notb
jg
xchg
mov
fadds
adc
cwtl
fisttpl
mov
lahf
enter
adc
mov
mov
mov
pop
jge
lds
out
cld
inc
jg
fidivl
test
loop
loopne
decb
in
int3
jns
stos
stos
and
orl
cmc
lret
test
out
in
movsl
aam
imul
push
scas
mov
hlt
clc
or
add
pop
inc
sub
loope,pt
fwait
xor
aad
sub
adc
popl
cmp
fwait
mov
adc
shl
push
adc
adc
inc
imul
inc
xor
not
xchg
cmpsb
push
jnp
or
lret
sub
int
sub
stc
add
scas
jp
or
add
mov
test
rcr
inc
faddl
shrl
cmpsb
xor
imul
data16
jne
cltd
xchg
sub
das
aad
jl
push
sbb
aaa
popa
int3
shr
xor
mov
mov
inc
cmpsb
mov
div
xchg
movsb
xchg
jmp
in
hlt
and
jnp
xorl
call
push
bound
dec
sbb
sbb
mov
cld
test
orb
leave
mov
add
insl
dec
push
jp
dec
cwtl
sbb
cs
jp
jmp
lret
or
or
xchg
fistpl
dec
push
orb
adc
mov
add
sub
popf
ret
imul
aaa
mov
sbb
inc
pop
imul
daa
rcr
aam
fwait
and
xor
aas
push
mov
jl
pop
or
push
cmp
inc
sahf
ja
adc
lods
cmp
mov
xor
andb
mov
mov
std
cmpsb
push
into
iret
dec
pop
jns
cmp
ss
or
dec
roll
sub
call
mov
cmp
mov
dec
sbb
ret
cltd
cmp
push
sbb
pop
xchg
fistpll
xchg
jl
adc
in
jg
push
mov
add
dec
adc
rorl
nop
out
int3
cltd
fstps
aas
jg
fstpt
jle
xchg
xor
inc
and
push
out
fldenv
das
adc
add
jmp
mov
stos
out
mov
aas
out
push
nop
clc
mov
and
clc
push
push
test
jl
in
inc
mov
mov
pushf
ficoml
xchg
pop
shll
xchg
repz
sti
outsb
jne
adc
sub
lahf
jle
lret
adc
xchg
dec
sbb
jp
inc
mov
aaa
mov
mov
ja
repnz
gs
xchg
push
xchg
jo
mov
in
hlt
add
in
dec
std
test
or
xor
or
adc
cltd
in
lods
jecxz
lahf
test
stos
divl
dec
pop
loop
out
mov
dec
or
add
mov
scas
lahf
add
inc
jno
mov
push
mov
jb
dec
outsb
push
mov
shl
cwtl
mov
jae
popa
cmpsb
imul
cld
cmp
leave
pop
lcall
adc
pop
out
arpl
inc
and
out
pop
push
pop
inc
cs
dec
sbb
add
push
lods
pop
push
aas
mov
inc
int3
loope
addr16
push
cmp
and
jb
inc
jno
inc
and
jbe
pop
leave
icebp
ret
and
ja
lods
fmull
mov
icebp
in
pusha
icebp
dec
jns
je
dec
sarl
dec
mov
stos
cs
dec
pusha
test
jo
stos
mov
xchg
push
cmp
loope
jg
ss
pop
adc
xchg
push
rorl
dec
addr16
lahf
xor
addb
insb
div
out
add
push
lock
mov
inc
push
sbb
lret
mov
std
scas
jl
outsl
mov
mov
loop
inc
mov
sub
int
dec
out
enter
insl
movsl
mov
rcrl
mov
test
int
sahf
cmp
jmp
xor
pop
ds
scas
adc
adc
sbb
fildl
cmp
xor
es
jns
xor
xor
shll
ret
add
push
cmc
data16
lods
push
repz
pop
ljmp
add
cli
cmp
cmp
inc
les
call
push
inc
xchg
les
mov
in
push
add
in
xchg
cmp
jae
dec
cmc
lods
cwtl
call
fcomps
in
cmp
pusha
dec
jle
test
jg
out
out
add
notl
or
add
cmp
test
sbb
or
dec
call
mov
inc
xchg
lahf
testb
popa
loopne
dec
xchg
mov
and
mov
les
mov
out
leave
dec
jge
adc
cli
out
mov
add
or
repnz
insl
and
int
mov
xchg
dec
out
hlt
adc
cmc
cs
out
pop
test
test
cmp
mov
push
rcrl
pop
and
xchg
mov
mov
xchg
mov
ja
adc
sub
pushf
jge
hlt
call
out
pop
ljmp
imul
pop
pop
nop
pop
inc
cltd
lods
cltd
lahf
pop
xchg
mov
dec
pop
jmp
dec
pop
ja
inc
clc
adc
outsl
cld
add
adc
push
test
or
pop
movl
adc
xchg
fs
xchg
mov
rcl
xor
outsl
push
cmp
arpl
xor
aam
or
sbb
clc
mov
xchg
cld
push
xorb
movsl
unpckhps
push
mov
sti
cmp
mov
gs
mov
loop
pushf
sub
sbb
jns
ds
or
xor
outsb
dec
xchg
mov
sbb
mov
sub
or
ficoms
pop
sti
add
push
loop
lds
fsub
dec
aaa
ret
xchg
adc
leave
and
inc
jle
lock
xchg
loope
adc
adc
test
in
lcall
test
lcall
es
push
aaa
mov
jge
lds
cmc
shr
push
mov
test
mov
out
push
fsubr
mov
dec
sub
and
add
or
mov
test
into
jecxz
jne
and
xor
lahf
outsl
imul
sti
lea
inc
std
add
retw
outsl
fildl
sub
scas
jae
cli
insb
js
or
insl
clc
cltd
mov
sarb
sahf
loope
repz
inc
loopne
js
jae
add
enter
jge
add
dec
cld
lcall
jecxz
rcll
scas
inc
jle
repz
jns
out
cmpsl
jb
enter
jns
jecxz
addr16
xchg
shl
xchg
push
fcompl
repz
xchg
xor
es
stos
mov
or
lods
stos
test
scas
push
fs
push
sti
mov
sbb
cmp
push
mov
inc
cld
mov
inc
rol
iret
mov
scas
pop
sbb
mov
rcr
and
inc
xlat
xchg
decl
movsl
in
push
movsb
dec
mov
arpl
sub
fistps
cli
aam
or
mov
mov
in
inc
or
cli
fwait
cmp
pop
xorb
iret
arpl
jbe
shl
cmc
cmpsl
mov
mov
mov
mov
mov
cmp
popf
insb
xchg
shlb
fdivrs
clc
fsub
fwait
je
sbb
aad
fmul
icebp
popa
int
dec
jb
lret
lret
dec
repnz
jne
lds
scas
jno
icebp
push
movlps
std
scas
imul
adc
dec
xchg
fwait
mov
sub
stos
sub
push
int3
pop
bound
jb
mov
fldl
add
lock
fldcw
jp
push
je
pop
sub
cmp
jle
lret
sub
addr16
mov
mov
mov
fdivs
shrl
pop
xchg
dec
adc
popa
enter
push
ret
sub
mov
rorl
jp
and
mov
hlt
dec
ret
into
iret
mov
add
rol
mov
clc
insl
jb
loope
pop
addr16
sbb
adc
ja
xchg
sahf
in
int
push
scas
add
xor
mov
repz
bound
dec
rcrl
cli
pop
loope
pop
adcb
adc
filds
lret
outsb
add
sbb
jne
ficoms
shrb
jae
shr
icebp
int
mov
popf
xchg
dec
add
pop
jecxz
or
fs
pop
in
lods
popa
jno
pop
mov
clc
std
inc
lea
jo
jne
add
in
jns
pop
mov
sub
loope
pop
xor
mov
sbb
ja
mov
int3
push
push
mov
sti
fistl
test
aas
mov
and
daa
xor
mov
sbb
or
flds
ja
es
mov
sbb
int3
sub
adc
bound
push
fadds
xor
repz
dec
sub
testb
int3
or
jg
pop
roll
adc
loop
aas
mov
mov
outsl
lods
aad
pop
fidivs
sbb
push
scas
push
jl
test
push
jb
movsl
shrb
mov
dec
push
out
int
pop
adc
sar
xor
popf
mov
jecxz
mov
std
xchg
and
cld
adc
sahf
insw
lods
pop
inc
xchg
mov
and
or
add
adc
push
mov
jnp
cmpsl
xor
cmp
test
pop
xchg
js
push
jl
cwtl
hlt
stos
dec
mov
aam
les
mov
push
cmpsl
xor
mov
imul
adcb
notb
imull
movsl
inc
inc
cli
clc
add
hlt
inc
push
orl
ret
push
mov
fnstsw
jb
xchg
mov
lret
mov
mov
cli
mov
inc
jae
jmp
push
push
and
or
push
cli
mov
inc
mov
dec
sub
adc
jp
ss
insl
sub
daa
mov
lods
outsb
push
dec
outsl
push
mov
xor
ss
cltd
mov
sbb
mov
les
mov
inc
inc
inc
adc
daa
pop
in
call
ret
jmp
fadds
fisubrs
out
cmp
inc
sub
in
leave
loopne
scas
cmpl
adc
push
out
insl
test
addb
cmp
push
les
ret
fdivl
mov
add
repnz
inc
fcoms
xchg
in
fs
insb
movsb
out
mov
mov
shlb
rorl
sbb
push
out
mov
cmp
fisubrl
push
jno
aad
adc
adc
mov
xor
repz
je
scas
fidivs
outsl
and
dec
mov
and
cmp
sahf
out
sahf
popa
mov
cmp
shrl
mov
pop
sbb
les
adc
sbb
mov
add
add
notb
jmp
xor
fldl
sub
ret
or
xchg
stos
pop
popl
jb
into
in
out
test
add
andb
gs
movsb
sahf
dec
mov
jne
fsubs
jbe
sub
mov
sbb
or
dec
adc
loop
pushf
and
lret
push
aaa
pop
insb
imul
adc
pop
xor
movsl
das
jmp
or
xchg
cld
jp
push
dec
cmpsl
inc
dec
subl
outsb
out
cmp
das
cltd
in
shlb
sbb
pop
xor
push
mov
mov
pop
jo
push
add
cwtl
pop
mov
daa
xor
dec
mov
jl
or
push
das
aam
push
pop
push
fidivs
mov
out
jmp
lret
mov
mov
inc
inc
lret
adc
outsb
arpl
lds
test
jnp
mov
xchg
sbb
out
loop
push
ds
mov
mov
jnp
negl
iret
fbstp
mov
in
je
inc
jp
xchg
and
cwtl
mov
stos
fstl
lea
out
hlt
adc
out
sbb
cmp
pop
pop
into
arpl
movsb
out
or
movsb
sar
insl
pop
outsb
add
dec
iret
ljmp
lret
int3
lcall
and
xor
mov
out
lea
dec
into
adc
ss
and
mov
clc
inc
or
and
leave
sub
and
jne
sbb
movsb
fidivl
dec
sti
mov
push
fcmovu
lock
xor
sub
mov
cli
in
or
cmp
out
xchg
imul
push
es
jle
and
or
mov
pop
xchg
pop
faddl
sub
jl
stc
inc
mov
movsb
mov
xchg
or
shlb
and
in
fcomp
dec
cmp
das
push
mov
testl
and
jb
pop
aad
mov
or
lret
imul
in
push
mov
mov
mov
int3
je
push
mov
mov
aaa
out
test
adc
jns
popf
adc
fldcw
stc
jnp
add
pop
pop
adc
pop
push
lret
xor
stos
es
add
cs
je
mov
shll
in
inc
fistl
pop
pop
mov
cmp
mov
cld
inc
inc
xchg
fs
das
xor
das
pop
adc
mov
xchg
mov
test
shlw
xor
dec
mov
and
xor
in
cltd
pop
xor
mov
adc
sbb
sbb
jne
sub
push
or
out
loope
jle
xchg
mov
xchg
sbb
mov
lcall
mov
mov
pop
cmpsl
cs
jmp
mov
sub
pop
pop
push
mov
stos
pop
mov
mov
into
push
jp
popf
fistps
mov
loope
jle
insl
aaa
scas
test
push
rolb
sbb
jo
lock
mov
push
ljmp
inc
nop
sarb
arpl
adc
push
imul
pushf
cmp
xchg
loopne
add
mov
es
push
orb
pusha
mov
imull
fisubs
jnp
push
out
fldt
mov
or
pushf
xor
jmp
adc
inc
fcoml
push
pmaxub
shl
or
orl
fwait
test
dec
push
negl
sti
push
sbb
or
cld
jge
out
adc
popa
jp
lahf
sbb
cs
and
sub
sbb
shlb
sahf
scas
popa
sbb
outsl
and
jb
je
out
mov
in
and
jmp
push
in
mov
stos
fs
push
cld
cmp
mov
pop
push
test
pop
xor
iret
xor
cmp
in
push
aaa
mov
xchg
lock
push
mov
mov
std
lret
adc
add
cmp
cmpsl
adc
dec
add
ds
mov
ja
xchg
dec
imul
cmp
movsb
cmp
xchg
xlat
jge
inc
push
cmp
sbb
push
add
mov
and
sub
loope
cli
dec
nop
int3
xchg
fildll
stos
inc
fdivrs
out
fisttpl
push
scas
repnz
in
shl
fmulp
jge
scas
jmp
sbb
testb
mov
pop
movsb
scas
jnp
inc
arpl
in
mov
test
sbb
add
sub
mov
test
xchg
push
mov
push
mov
xchg
dec
nop
cld
movsl
or
sahf
and
in
sbb
loope
test
mov
jnp
jge
test
test
add
pusha
push
dec
out
dec
jae
inc
movsb
cmp
mov
jbe
sub
ret
jb
pop
push
inc
sbb
fisttps
xchg
cmp
lcall
mov
and
test
cmp
cld
mov
pop
std
ret
pop
outsl
inc
sub
xchg
ss
leave
mov
popa
and
insb
lret
inc
xchg
inc
jno
xchg
add
jmp
out
cmc
dec
push
inc
lcall
mov
in
hlt
sbb
xorb
movsb
bound
dec
jae
rorl
fcomp
outsl
xor
jno
inc
pop
mov
push
dec
pusha
mov
lcall
cmp
pop
in
lods
mov
gs
lahf
dec
push
stos
ret
inc
fcmovb
je
mov
out
mov
dec
pop
xchg
mov
sbb
push
fwait
xor
lods
lret
imul
push
imul
cmp
sub
mov
mov
enter
popa
mov
jp
xchg
mov
sub
addr16
std
or
cmc
sub
mov
aam
push
test
paddsw
outsb
push
jle
dec
rclw
push
dec
xchg
cmp
add
pop
imul
mov
leave
add
mov
data16
sbb
loop
rcrb
test
dec
jecxz
addr16
xchg
adc
nop
xor
push
pop
add
inc
lods
imul
insb
mov
loop
push
mov
xchg
iret
les
imul
imul
or
cmpsl
shl
sub
addb
jb
repnz
data16
iret
mov
xor
sub
decb
imul
or
ret
daa
lcall
xor
push
std
stos
dec
xor
testl
pop
add
movsb
mov
push
or
inc
mov
mov
cmpsl
out
adc
clc
cld
insb
aaa
fsub
mov
add
inc
cli
pop
in
stos
inc
mov
inc
jb
mov
and
fsubrp
xor
mov
inc
popf
test
sbb
fiadds
inc
lret
in
cmp
or
adc
das
adc
int3
mov
gs
stos
pop
repz
xor
stos
push
mov
cmp
lock
sti
or
pusha
jecxz
cmp
sub
jne
push
sbb
clc
sub
mov
inc
lods
dec
jbe
or
push
lret
jg
xor
cli
pusha
xor
scas
jb
push
lods
cli
fstpt
cmp
xor
xchg
dec
imul
jle
dec
inc
icebp
cmpsb
pop
and
xchg
sub
adc
repnz
dec
test
lahf
daa
cmpsl
dec
mov
sub
mov
mov
push
or
icebp
call
bound
add
or
movsl
cmp
inc
cmp
xchg
xlat
sbb
mov
into
out
mov
jmp
ret
or
inc
pop
push
push
loop
mov
out
fst
mov
xchg
adc
sub
clc
int
into
xor
add
cltd
sub
subb
inc
inc
sub
jae
das
jle
data16
push
and
rcrl
hlt
fimull
ljmp
test
pop
nop
jg
das
fiaddl
xor
cmp
bound
mov
movsb
xchg
adc
rorl
inc
clc
mov
dec
jg
jo
xchg
xor
xchg
fsubrs
mov
sub
bound
in
and
or
and
sahf
pusha
pushf
outsl
xchg
dec
lahf
clc
lret
fidivrl
pop
icebp
inc
lret
cmp
pop
push
xchg
scas
dec
das
sub
adc
sub
inc
sbb
stc
sahf
push
int
test
jno
stc
in
cmpsb
fmuls
aam
mov
mov
xor
sqrtps
out
enter
xchg
cwtl
dec
fs
pop
rcll
int
and
je
push
pop
mov
mov
and
daa
test
push
push
mov
stos
xchg
ret
call
insb
call
xchg
out
adc
or
out
cmp
pop
mov
rclb
xor
jl
movsl
pusha
sub
adcb
fstpt
jno
fisttpll
into
jmp
mov
ja
testl
mov
nop
inc
cmp
shlb
sub
xchg
xchg
iret
mov
sbb
xchg
iret
mov
xchg
pop
push
ss
jno
push
enter
test
jae
lods
or
hlt
aam
rcrb
out
sbb
mov
xor
pop
sbb
aad
push
lock
adcb
in
jmp
pop
inc
out
shrb
shlb
jecxz
sbb
xchg
sub
or
sbb
mov
sub
subl
push
in
jno
xchg
mov
repz
aas
xor
mov
inc
insb
sbb
dec
std
clc
lds
dec
add
xchg
orb
imul
es
roll
pop
pop
jecxz
mov
dec
shrb
leave
jbe
xorb
mov
adc
and
in
popf
and
ss
add
mov
rorl
lock
cmc
out
push
lds
cmp
adc
pop
adc
mov
stos
cli
adc
xchg
fnstsw
cmp
divb
ss
push
cld
add
ds
hlt
ss
sbb
adc
cmpsb
and
pop
inc
push
inc
bnd
dec
pop
in
ss
or
arpl
cmc
xlat
icebp
mov
loopne
daa
and
cmpb
sahf
in
mov
or
jnp
aam
adc
pop
mov
and
xor
push
lods
sub
inc
cs
pop
fisubrl
mov
ss
inc
fwait
jecxz
fcomi
and
xchg
sub
cmc
mov
add
aaa
cmp
lret
fsubs
fistpl
movsl
mov
jne
push
lods
int3
clc
shrb
dec
or
outsb
or
inc
shr
imul
mov
xchg
subb
xchg
in
cli
dec
cmpb
scas
xor
mov
dec
pushf
pop
scas
push
xor
stc
outsb
dec
mov
idiv
dec
daa
xor
jge
sbb
xor
and
cmp
mov
movsl
jl
pushf
or
and
hlt
cmpsb
inc
pop
in
cmp
pop
sbb
xchg
adc
std
movsl
js
xchg
push
dec
rcrb
testl
mov
or
lret
pop
insl
int
inc
test
jbe
jmp
jns
aaa
dec
ss
dec
mov
sbb
das
lods
rolb
pop
xor
roll
dec
push
in
mov
cmpsl
pop
cmp
adc
cwtl
les
mov
inc
ret
and
in
leave
insl
in
xchg
mov
adc
aaa
and
dec
int3
inc
push
dec
call
mov
inc
mov
cmp
inc
dec
xchg
jl
out
push
test
xchg
inc
in
sub
ret
jo
mov
js
cmc
inc
sarl
scas
xor
jecxz
jmp
out
xor
cmpsb
into
ret
cmp
xchg
test
inc
push
inc
cmpb
inc
pushf
pop
call
shll
neg
int3
outsl
daa
test
aad
rclb
inc
add
int3
sbbl
dec
out
gs
and
pop
hlt
jb
sbb
insb
mov
and
sbb
jecxz
sbb
or
or
rorb
or
mov
por
lahf
shl
pop
loop
imul
in
lds
mov
push
pop
fsts
pop
and
or
je
fdivrs
pop
inc
mov
test
gs
fwait
push
jns
je
in
jo
adc
mov
jg
push
aaa
push
mov
rorl
mov
xor
mov
cmc
lret
shl
mov
push
rclb
mov
mov
test
cwtl
shrb
push
push
jl
mov
out
push
or
jae
arpl
xor
or
nop
aad
mov
xor
je
mov
out
mov
iret
ss
dec
jbe
scas
int3
sub
sub
imul
lods
dec
ljmp
jg
mov
cs
push
or
xchg
mov
jno
cmpsl
push
cld
jbe
orb
fldenv
jns
or
fstpt
ja
mov
roll
fldenv
inc
in
inc
scas
into
nop
push
incb
fdivrs
popa
fs
xchg
sahf
push
lahf
mulb
mov
xchg
scas
sbb
icebp
sbb
xorl
pop
add
mov
lods
xor
mov
or
jb
lret
and
adc
or
xor
jb
push
ror
mov
cli
daa
arpl
lods
push
jo
add
adc
insl
loop
push
jne
pop
fmul
cmp
lock
sti
bound
cmpsb
sbb
aaa
inc
jb
fdivrl
ret
test
mulb
pop
movsb
push
adc
stos
leave
pushf
loop
out
push
inc
jnp
inc
mov
jecxz
bound
cmpsl
jp
push
mov
mov
jle
push
pop
test
cmp
push
or
fldenv
mov
fwait
push
inc
sub
imul
lcall
sti
rorb
insb
sbb
mov
fucomi
mov
andb
insb
mov
lods
lods
push
and
mov
loope
icebp
fstpt
mov
jecxz
cmpb
enter
pop
lea
dec
repz
cmpsl
lock
xor
mov
jne
inc
push
jmp
mov
adc
shlb
cltd
sbb
push
and
lock
mov
cmp
sahf
xchg
or
daa
orb
clc
pop
dec
and
repz
lods
xor
repnz
aaa
imul
in
dec
mov
dec
loopew
das
mov
xchg
xor
into
inc
mov
jl
inc
jmp
mov
mov
xor
jecxz,pt
or
cmc
mov
sahf
insb
xchg
je
sub
out
gs
xor
movsb
movsl
push
sub
ret
scas
xor
pop
xor
jmp
aam
push
in
fwait
into
and
outsl
out
sbb
cwtl
dec
mov
pop
cmc
lcall
test
shrl
repnz
pop
jno
mov
sbb
push
push
addr16
jmp
cwtl
inc
or
sbb
xor
pop
sysexit
and
add
test
testl
ss
cmp
lock
dec
mov
push
sbb
add
or
sbb
loopne
pop
xor
push
or
add
cmp
adc
sub
test
xor
stos
out
aas
cli
push
pusha
and
mov
mov
in
pop
sub
push
jg
subb
add
cmp
test
inc
sahf
and
adc
mov
adc
call
lock
nop
roll
xchg
push
mov
fsts
mov
arpl
rolb
out
pop
scas
mov
test
sbb
push
int3
jns
fsubl
sub
add
into
das
repnz
and
test
pop
shr
ret
inc
stc
icebp
jle
int3
pushl
mov
int3
xor
stc
jne
add
add
les
sbb
push
movsl
mov
sbb
fxch
es
mov
popf
inc
loop
or
int3
jbe
test
leave
push
and
mov
xor
daa
test
push
jecxz
and
pop
repnz
and
je
cmp
mov
sub
xchg
mov
fwait
mov
sub
out
mov
mov
sbb
nop
popf
pop
leave
lret
xlat
lods
cmp
out
enter
fdivrl
pushf
in
inc
ret
imul
mov
hlt
inc
push
or
sub
pop
xchg
test
leave
xchg
xchg
jmp
jo
bound
pop
addb
sbb
repnz
mov
mov
jae
xchg
lret
shr
cwtl
xchg
rolb
jae
or
adc
mov
mov
cmpsb
outsb
inc
and
lock
repz
in
fsub
fsubrs
in
inc
and
daa
mov
sbb
xor
rcll
push
cmp
mov
pop
xor
aas
out
popa
xor
sbb
adc
or
lods
mov
mov
push
mov
rcrl
xchg
and
fsubrl
dec
cmp
cmp
lret
orl
mov
push
imul
ret
lods
mov
xchg
cmpsl
cmpsl
mov
push
loopne
pop
sbb
push
sbbl
add
xor
sbb
or
xchg
rol
divb
add
xchg
mov
lods
xor
mov
pushf
sbb
movsl
leave
pusha
clc
dec
dec
filds
out
adc
int3
pop
je
cmpsl
ljmp
add
stos
xchg
inc
push
pop
out
hlt
jl
cmpps
jecxz
jmp
inc
stos
add
lock
fistpll
stos
fiaddl
bswap
jmp
pop
lahf
dec
xchg
fs
add
xchg
mov
cmp
jg
fisttpl
jge
xor
mov
in
out
inc
add
xor
ljmp
or
fidivrs
jae
xchg
imul
mov
in
or
cmp
jns
lock
lods
pop
cmpsb
scas
xchg
insl
xlat
testb
movsl
lret
mov
test
sub
clc
call
mov
insb
addr16
xlat
loop
add
jle
pop
push
cld
sbb
loop
xlat
inc
roll
stc
or
outsl
jp
cmc
xor
aad
inc
pand
push
and
sbb
jge
popa
push
pop
lea
mov
sarl
cmp
push
add
xchg
add
mov
add
mov
sbb
fwait
cwtl
sbb
loope
inc
xor
mov
rorb
sahf
inc
roll
movsl
mov
out
pop
push
into
inc
aas
jne
push
sti
xchg
test
icebp
ror
jge
fidivrl
ret
shll
sbb
mov
add
call
sbb
loop
mov
cmpsl
sbb
insb
fld
cmp
mov
pop
subb
call
stos
xchg
insl
push
pop
test
xor
fcomps
adc
pop
ja
jg
lock
pop
incl
into
and
and
sub
fstpt
add
mov
scas
into
jnp
xor
std
adc
hlt
cld
shl
mov
je
add
mov
add
aaa
sub
lahf
loop
imull
inc
fdivr
mov
pop
pop
arpl
ret
lahf
daa
cmp
fldenv
mov
xlat
std
dec
or
xchg
cmpsl
push
mov
dec
mov
sarl
mov
popf
push
fcoml
jmp
cmp
stos
push
arpl
pop
dec
sbb
mov
mov
fcomps
popa
sub
sbb
mov
call
leave
gs
lret
stos
stos
ja
and
adc
xlat
fisttpll
jns
pop
imull
insl
xchg
div
int
xchg
movsb
mov
push
cs
test
sbb
cld
push
cld
test
loop
push
sub
mov
xsavec
push
pushf
fildll
bound
mov
dec
es
dec
out
jae
ja
xlat
mov
cli
xchg
insb
xor
lahf
cltd
mov
popa
or
ss
out
lret
jmp
mov
es
lock
or
pop
push
nop
mov
or
or
stos
jp
fstpt
dec
rorb
sub
nop
sahf
and
jmp
adc
fs
lcall
sub
pop
jmp
inc
rorb
push
add
jecxz
leave
xchg
out
hlt
jge
and
adc
mov
and
mov
xchg
clc
xor
sbb
ss
or
int
iret
cmp
mov
mov
cmc
test
in
or
fs
and
xchg
imul
dec
xor
sub
jne
test
mov
leave
jle
or
in
xchg
negl
xchg
cmpsb
pop
pusha
xchg
or
clc
cli
fisubs
jge
das
jge
or
cli
or
jl
ljmp
xchg
popf
movsl
outsl
lock
mov
sbb
jno
sahf
cmp
ret
bound
add
inc
std
mov
mov
stos
in
lods
daa
xor
dec
mov
sub
aaa
pop
and
xchg
leave
icebp
test
clc
lods
add
dec
sbb
je
dec
stos
add
pusha
stc
adc
cmp
sahf
dec
outsl
cmp
scas
sbb
sub
aas
movsb
adc
inc
arpl
ljmp
sub
js
xor
cltd
xor
mov
out
xchg
dec
inc
andb
lods
jmp
scas
out
ljmp
sahf
rdpmc
mov
mov
repnz
adc
mov
mov
test
xor
mov
mov
cmpsl
roll
sarl
dec
out
data16
jns
jb
dec
mov
and
mov
fsub
sub
in
jl
stos
bound
sbb
fs
dec
push
daa
leave
mov
call
icebp
loope
xchg
dec
sub
push
inc
scas
push
shll
outsl
outsl
jl
adc
adc
lret
adc
or
notb
jae
lods
push
mov
icebp
push
inc
mov
dec
dec
movsl
mov
xchg
clc
test
add
popa
test
push
fcoml
out
mov
shrl
ret
mov
dec
out
popa
int
bound
dec
pop
movsb
mov
lahf
aaa
sub
lcall
test
jecxz
mov
je
fildl
mov
cmpsb
into
sti
jno
sub
leave
pushf
mov
mov
jns
dec
imul
loope
dec
xchg
push
ret
jne
adc
imul
push
jge
outsb
adc
dec
sbb
fistl
loop
loope
std
lret
or
sub
repnz
mov
cmpsb
fiaddl
dec
clc
call
repz
add
mov
je
or
jmp
mov
fmuls
sub
into
cmpb
mov
adc
dec
out
push
jns
push
push
les
adc
stc
jno
jne
je
fs
sub
imul
jne
xor
clc
jmp
xor
xchg
das
push
mov
sbb
jmp
and
out
andb
push
adc
incl
jle
call
call
or
lock
mov
notl
mov
cmp
scas
mov
mov
and
push
ret
jle
lea
repz
add
push
aaa
lahf
sub
jne
xchg
lock
adc
imul
mov
push
cmp
add
mov
cmpsb
push
lods
test
or
xchg
ja
in
mov
pop
jmp
xor
data16
mov
rclb
rcr
in
jns
ljmp
int
ss
jl
dec
sahf
cld
add
int3
push
das
adc
fistpl
inc
xchg
call
jo
ja
lret
push
add
mov
js
inc
cmc
scas
insb
add
lods
and
aad
pop
push
inc
xchg
sub
push
or
clc
cmc
es
xchg
fnsave
cmp
aas
mov
fimuls
mov
jmp
hlt
enter
pusha
push
and
ret
sub
cmp
sub
push
pop
mov
jmp
aas
xchg
xor
mov
push
out
lock
push
dec
pop
cs
or
xchg
arpl
pop
pop
stos
lds
je
xlat
ss
xchg
jle
push
mov
sbb
xchg
jno
cmp
mov
and
cmp
dec
in
add
push
adc
pop
or
das
jno
cld
mov
and
pop
inc
and
xor
lret
xor
mov
shrb
scas
repnz
cmpsl
mov
push
mov
and
cmpsb
not
and
fwait
pop
in
nop
mov
daa
out
stos
in
divl
nop
mov
pop
xlat
iret
adc
icebp
jp
push
hlt
out
mov
shl
jns
es
pop
push
in
xor
pop
scas
ret
cmp
jg
jecxz
xor
jecxz
adc
fldenv
test
movd
notl
and
call
mov
fidivs
push
movsl
loopne
or
pop
sbb
stos
jecxz
xchg
add
pusha
mov
xchg
lock
test
cs
mov
mov
loope
movsl
sbb
sahf
aad
push
loopne
stc
ja
push
rolb
push
popa
imul
add
mov
pop
mov
push
jg
jo
ret
xor
cmp
out
lock
das
jnp
mov
sub
lds
dec
sti
hlt
add
aas
inc
mov
and
int3
inc
arpl
pop
xor
or
inc
in
dec
pmaddwd
sbb
fsts
jo
xlat
xchg
jmp
pop
enter
xor
lods
cmc
in
mov
xchg
pop
out
cs
fs
pop
jo
cs
rorl
test
sbb
sahf
push
xor
imul
stc
xor
hlt
lods
stos
dec
jnp
sbb
sbb
in
xor
lea
iret
jg
dec
out
filds
push
sbb
out
mov
and
mov
std
push
pusha
shrl
xor
lcall
cmp
jmp
lods
xchg
out
inc
gs
popf
mov
aam
cld
mov
mov
es
fldenv
mov
shrb
inc
xlat
in
jl
inc
lods
retw
shlb
mov
insb
ret
pop
js
jmp
xchg
xchg
mov
pop
jnp
xlat
cmp
sbb
cmp
cmpb
sub
rorl
pop
and
mov
shl
jle
jno
rorb
pop
cltd
push
int
add
mov
adc
rcr
fsubs
int3
inc
adc
jp
in
pop
popf
add
outsb
mov
mov
xchg
into
mov
adc
outsl
xchg
mov
xchg
insb
push
mov
sahf
lds
jle
xchg
pop
aam
arpl
aam
xchg
dec
leave
adc
inc
inc
lahf
nop
loop
sbb
mov
sub
fwait
cwtl
mov
and
jl
and
jmp
mov
inc
push
cmp
cmp
pop
aad
xlat
pop
sbb
xor
fsubl
iret
push
and
sub
dec
pushf
add
push
mov
sub
in
cmc
sub
daa
enter
push
enter
out
iret
xchg
cmpb
mov
cmp
or
das
sbb
push
lret
inc
fldt
or
jl
into
jae
sub
iret
sub
cmp
out
cmpsb
pop
and
icebp
mov
adc
mov
movsb
adc
mov
dec
sub
inc
inc
rolb
nop
es
jnp
cwtl
ret
fldcw
jl
int
inc
add
sbb
xor
fs
int3
mov
mov
or
cld
call
jl
subl
mov
mov
lods
cltd
jno
push
addr16
sbb
inc
decb
pusha
pop
insl
jbe
popa
hlt
mov
jp
pop
mov
cmp
daa
sbb
psrld
xchg
nop
jno
fstps
in
add
outsb
push
cmp
out
insl
aaa
rcrb
inc
ret
in
and
mov
cli
add
mov
inc
popa
dec
test
pop
sub
push
mov
or
inc
sbb
sarl
hlt
inc
push
inc
popf
test
rorb
jmp
les
inc
dec
jl
adc
mov
push
adc
sti
cwtl
mull
mov
jb
ds
scas
sbb
pop
sarl
nop
out
int
cmp
and
mov
shrb
int3
mov
dec
in
mov
push
in
test
mov
push
movsl
xor
cmp
dec
je
dec
push
inc
add
dec
sahf
sub
dec
xchg
adc
imul
leave
mov
lcall
adcl
movsb
ret
xchg
mov
or
pop
mov
pop
pop
aaa
rolb
insl
fnsave
sbb
mov
js
outsb
mov
mov
jg
push
xchg
repnz
mov
clc
ja
insb
sbb
and
dec
stc
cmp
lods
add
xchg
popf
sub
movsl
jg
cmc
and
xlat
rclb
pop
adc
inc
loop
pushf
fcomp
test
pop
inc
push
pop
sbb
inc
lea
test
cmp
jo
xchg
sub
sbb
mov
mov
out
mov
dec
sbb
sbb
std
pop
imul
aam
in
cmc
std
dec
outsl
mov
or
pop
sub
gs
jmp
mov
les
mov
fmulp
sub
ljmp
pop
insl
mov
push
xlat
out
jns
sbb
sub
sti
loope
xchg
bound
and
out
ljmp
pusha
mov
dec
mov
jo
jbe,pn
and
imul
jecxz
adc
hlt
adc
push
fnsave
stos
aam
test
shll
cmp
mov
cmpsb
gs
or
sub
in
or
mov
nop
inc
cwtl
push
mov
sub
dec
std
jne,pt
xor
inc
or
movsb
pusha
jmp
imul
idiv
inc
icebp
and
lahf
shrl
adc
dec
fcmovb
iret
loope
sti
inc
jne
xorl
push
push
jp
int
adc
xchg
jnp
jg
ss
leave
push
push
jle
stc
arpl
jno
fcomps
call
nop
xchg
enter
push
add
push
add
and
and
in
pop
mov
int
mov
mov
sbb
mov
cmpsb
push
in
loopne
jne
jb
sbb
fwait
cmp
xor
lcall
fwait
cmp
mov
cmp
pop
mov
or
leave
jns
movsb
mov
sbb
xchg
out
addr16
sarb
mov
loopne
xlat
adc
xchg
popf
sbb
sbb
int
stos
out
psubsb
mov
inc
shr
adc
js
mov
inc
inc
pushf
push
xchg
jecxz
adc
aaa
repnz
and
pop
adc
cmp
bound
int3
jb
ljmp
mov
popf
call
scas
xor
shl
fwait
loopne
popa
mov
dec
dec
aas
notl
and
add
jge
pop
xor
ljmp
mov
cmpb
and
pusha
jmp
mov
mov
mov
lret
dec
ficompl
iret
push
and
sub
leave
iret
dec
adc
idivl
std
fcoml
pop
cmp
mulb
jb
out
xorl
pop
insb
aas
inc
popa
or
inc
mov
test
imul
push
or
hlt
dec
jb
icebp
subl
jnp
pushf
cld
or
jmp
mov
pop
fsubl
pop
add
adc
mov
inc
pop
dec
cmc
xchg
sbb
push
nop/reserved
dec
cli
lock
out
jb
aaa
push
fldcw
pop
andb
test
aaa
repz
cmp
fmuls
out
insl
push
xor
sar
push
mov
movsb
aad
sub
mov
pop
jmp
ljmp
add
imull
mov
jge
mov
into
sub
daa
xchg
outsl
dec
jns
jp
adc
jle
test
cmp
push
jecxz
adc
nop
pop
jnp
fcmovb
jg
inc
loop
fcoml
mov
xlat
mov
in
mov
imul
jae
dec
test
sub
xchg
in
add
data16
mov
mov
push
jmp
lods
ret
inc
lret
nop
out
or
inc
popf
inc
push
mov
je
pusha
jo
rcrl
aam
inc
scas
push
mov
iret
out
xor
arpl
xlat
pop
lods
icebp
and
sub
add
or
pop
jmp
std
sub
xor
mov
xor
imul
push
out
cmc
pop
and
pop
stos
dec
and
xlat
daa
mov
movl
cmpsb
das
xor
mov
jo
dec
xchg
mov
jl,pt
mov
dec
fmul
sbb
call
pop
test
mov
dec
or
mov
fdivs
fisubrs
in
pop
imul
add
cmp
ret
jl
fsubrl
aam
xor
cltd
xor
enter
sub
lea
pop
imul
pop
test
shrb
and
sbbl
jl
pop
call
pop
stc
mov
sbb
adcb
pop
pop
mov
mov
out
out
mov
icebp
push
sub
mov
lcall
add
mov
ljmp
adc
xchg
in
sbbl
push
push
push
int3
fistps
and
xchg
sub
repz
jns
pusha
xchg
test
dec
push
mov
dec
cli
mov
stos
add
dec
or
in
mov
cwtl
inc
adc
jl
or
pusha
dec
mov
imul
lahf
std
lock
mov
lea
movsl
stos
or
lods
mov
jbe
add
push
cmp
adc
rcrb
jo
scas
sub
pop
cs
movsl
push
stc
fimull
push
mov
xor
loope
sub
iret
xor
stos
lahf
aas
and
shll
jbe
pop
int3
push
stos
dec
jae
xor
test
add
cs
cwtl
mov
mov
lcall
test
cmp
or
xchg
test
push
fsubl
xor
xor
jecxz
data16
lcall
inc
jns
jecxz
push
fucomi
nop
mov
inc
sbb
outsb
std
add
in
dec
ret
lods
add
out
lock
push
xor
mov
jnp
mov
pusha
pusha
mov
imull
mov
mov
imul
adc
addr16
and
mov
push
ljmp
xchg
push
pop
adc
sub
mov
xor
sbb
popa
xchg
sub
cmpsl
sub
dec
mov
pop
inc
cmpb
into
repnz
push
decl
test
jecxz
test
inc
pop
fcompl
ja
or
dec
pop
mov
sarl
dec
jmp
rclb
addr16
rcrl
cmp
mov
ret
mov
dec
into
sub
lcall
scas
xor
or
and
sbb
nop
fwait
outsb
xor
cmp
cmp
or
in
loopne
xchg
jb
add
test
test
mov
mov
fadd
xchg
stos
notl
pop
lret
nop
xor
pusha
pop
lock
xchg
mov
push
test
jns
xor
test
addr16
mov
cmp
pop
xor
pop
pusha
jge
cmp
push
ds
mov
stos
jno
daa
jle
or
push
fildl
test
les
xchg
fcom
sub
fisttps
inc
sti
mov
rolb
shll
or
in
incb
or
les
adc
push
imul
jno
add
ds
sbb
cmp
dec
mov
add
push
push
cmpsl
mov
push
imul
inc
lea
push
mov
mov
aas
cli
ret
test
mov
push
pop
xchg
pop
scas
xchg
loope
fbld
mov
icebp
sbb
push
fwait
push
xlat
adc
aam
inc
mov
fwait
adc
jmp
mov
push
fnsave
xor
push
push
in
das
jle
insl
sub
pop
loope
repz
inc
int
addr16
sbb
scas
dec
mov
aam
jmp
xor
gs
mov
and
xsha256
cmpsb
push
sub
mov
imul
loopne
data16
in
fmuls
scas
xchg
outsl
adc
adc
mov
sub
mov
dec
sub
xor
push
mov
notl
mov
stos
adc
mov
fnstsw
pop
shrl
push
sbb
mov
into
fsubr
int3
inc
insb
ret
sti
xchg
or
cmpsb
scas
loop
push
xor
mov
or
dec
aad
ds
decb
sbb
cmp
and
and
out
aam
subl
nop
ljmp
dec
mov
stos
adc
dec
fsts
fs
filds
daa
or
jge
cltd
lcall
inc
leave
and
sbb
sbb
inc
or
jne
int
cmpsb
or
inc
mov
clc
stos
and
dec
push
adc
test
mov
inc
dec
aam
lock
pop
lods
pop
lock
cmc
mov
hlt
loopne
shlb
jmp
rcrb
mov
scas
leave
fs
sti
aaa
pop
mov
iret
outsl
push
dec
mov
lock
and
clc
sahf
cli
jns
imul
incb
stos
mov
stos
fidivrs
dec
mov
jae
push
ljmp
inc
pop
mov
lock
lahf
nop
test
aas
xchg
popf
pop
je
mov
into
mov
nop
pop
mov
pop
popf
divb
sbb
fcoms
pop
fsts
dec
lds
shlb
in
test
aas
cmp
addr16
repz
dec
ds
and
mov
pusha
hlt
mov
pop
cmp
ret
lret
cli
add
in
dec
insb
int3
sbb
adc
negl
ret
lret
in
ret
cmp
xchg
sub
mov
push
pushf
push
pop
cs
decb
out
repz
loope
movsl
xchg
adc
push
fwait
mov
cmc
cld
lods
inc
dec
push
or
xor
push
dec
jae
mov
mov
js
add
outsl
cmp
mov
jg
pop
and
int
mov
gs
dec
jle
repnz
in
test
mov
mov
fisttps
dec
imul
popa
mov
jp
push
xor
rcrl
xchg
mov
adc
cmc
neg
sbb
inc
enter
sub
inc
jecxz
push
repnz
xchg
adcb
and
adc
popf
mov
xchg
filds
jb
shlb
add
lret
cwtl
shlb
sbb
das
xchg
and
in
pop
and
xchg
enter
mov
jmp
mov
icebp
lahf
pushf
inc
adcl
data16
cld
xchg
mov
loope
lds
mov
mov
sarl
mov
cmp
xchg
test
xchg
push
imul
insl
inc
mov
repnz
adc
test
repz
in
jecxz
jo
push
xlat
and
xchg
mov
bnd
push
fs
ficompl
mov
lea
pop
or
loopne
pop
inc
and
insb
into
movsl
pop
add
cs
cld
cwtl
jne
lock
and
sbb
stc
fs
mov
popf
lret
cmovae
add
jmp
fimuls
pop
sti
das
adc
pop
or
mov
push
scas
sub
adc
push
add
pop
xchg
xchg
in
xor
sub
mov
mov
sub
mov
mov
lea
xor
xchg
jg
add
sbb
adc
inc
inc
aaa
jb
add
pop
pop
roll
addb
std
mov
aaa
test
cmp
inc
and
or
xor
scas
xchg
xchg
and
jno
std
cmpsl
mov
cmp
gs
sub
sbb
in
jl
adc
jp
cli
testb
imul
mov
mov
mov
pop
shlb
xchg
jno
mov
ret
adc
dec
out
mov
insl
push
mov
into
out
or
add
leave
pop
mov
scas
mov
loope
cmp
xlat
sub
xchg
inc
lcall
pushf
mov
lcall
stc
fidivs
sbbb
pop
push
fildll
mov
daa
jo
popa
sbb
push
orl
cmp
mov
mov
or
jae
mov
inc
pushf
fcoml
rcrb
sbb
and
int3
cmp
das
jnp
push
ret
movsl
mov
adc
int3
cmpsb
mov
ret
jns
dec
ljmp
push
gs
stos
outsb
sub
pop
mov
fisubrs
outsl
out
popl
jmp
sub
xchg
push
fisttpl
sbb
cli
mov
xchg
lcall
fistl
out
jno
xlat
sti
mov
jbe
in
xchg
gs
mov
in
jae
xchg
pop
out
cli
les
ss
push
repnz
mov
rclb
loop
pushf
aas
daa
mov
stc
rcll
push
popf
arpl
mov
adcb
jmp
jg
test
aad
pushf
or
cmp
pop
dec
or
aam
out
loope
outsl
movsb
xor
fisubrs
mov
jb
dec
or
pop
test
insb
pop
test
cmc
pop
out
call
cmp
inc
adcb
xor
adc
cmpsb
shll
in
pop
out
scas
repnz
into
cwtl
dec
mov
pop
test
out
cmc
lea
lret
xchg
out
mov
jbe
repz
pop
scas
lcall
nop
out
data16
inc
jnp
fs
xor
dec
aad
sbb
jge
add
nop
and
mov
ds
adc
or
xchg
and
test
shll
movsb
mov
cmp
lret
nop
iret
lea
cs
xlat
sbb
in
jecxz
fimull
mov
fistps
leave
notb
push
sahf
mov
clc
imull
xchg
ret
pop
ret
mov
or
insl
cld
push
mov
and
mov
je
lods
add
cld
dec
aad
shll
addr16
in
js
or
loopne
repnz
in
xchg
push
sarb
and
mov
stos
enter
ret
or
and
push
sbb
sbbb
into
std
pop
mov
lret
or
insb
nop
out
ficompl
gs
push
sub
xchg
cmp
jne
lods
and
push
sbb
lret
jl
hlt
jge
inc
add
aaa
cltd
add
ja
mov
cmp
std
jne
loope
sahf
mov
sub
jb
imul
push
int
pop
gs
push
pop
scas
mov
div
test
repz
push
adc
fldl
popa
cmpsb
ds
mov
and
pop
inc
repnz
jb
out
and
call
xchg
ficoms
xor
pop
dec
rcrb
gs
cmpsl
mov
fistps
push
mov
fucom
cmc
xchg
push
les
mov
mov
clc
aad
jmp
cmpsl
sub
lret
pop
out
cmp
je
and
fldcw
pushf
lods
daa
outsl
adc
pop
sti
xchg
aam
jno
adc
and
aaa
xor
xlat
int
cmp
out
dec
cmp
in
mov
and
pop
or
mov
cmp
or
mov
inc
jae
js
mov
push
mov
mov
cltd
xchg
stos
cmp
repz
fs
icebp
and
add
sahf
rol
das
sub
inc
inc
add
push
adc
fs
movsl
mulb
inc
sub
sbb
arpl
punpckldq
push
cmp
push
clc
push
push
movsl
ss
dec
pop
mov
iret
repz
dec
lahf
mov
mov
test
mov
jnp
gs
aaa
subb
adc
mov
andps
dec
adc
sbb
pop
cld
inc
sahf
xchg
enter
inc
rcrl
and
adc
jo
test
aas
lcall
test
mov
lcall
loopne
les
popa
cmpsl
cs
stc
jo
adc
cmpsb
mov
jmp
psrld
lret
incb
iret
xor
cwtl
movsb
mov
mov
mov
jmp
dec
stos
aas
jg
lahf
mov
dec
jnp
lds
jo
into
outsb
push
pop
mov
pop
mov
xchg
das
and
xchg
loope
sar
leave
dec
ret
dec
les
aaa
adc
sahf
sub
jmp
push
lcall
and
mov
xchg
mov
dec
addr16
mov
mov
mov
jle
imul
push
jno
daa
sbb
adc
and
push
or
mov
lcall
push
cli
xchg
faddl
xchg
xor
add
cmp
outsb
or
dec
aaa
mov
insb
andl
dec
mov
lret
dec
mov
dec
sub
xchg
push
cmp
mulb
outsb
clc
fimuls
jl
sbb
loop
mov
imul
mov
and
fists
in
fimull
enter
cmp
add
mov
mov
or
add
lods
pop
lret
xor
sbbl
nop
jg
mov
xor
dec
stos
push
jae
leave
aad
mov
fwait
test
rolb
in
sbb
adc
mov
adc
inc
stc
mov
aad
mov
xchg
mov
addr16
and
mov
nop
pop
lods
and
mov
sub
add
mov
jae
pusha
adc
repz
cwtl
repnz
in
daa
lahf
test
add
in
enter
test
mov
mov
push
dec
inc
outsb
icebp
decb
fdivrs
mov
push
in
inc
insb
fdivs
packssdw
mov
in
test
push
inc
adc
and
and
cmpsl
mov
les
pop
clc
push
ret
jae
rcl
cmp
cmpsl
fcompl
add
sub
xor
aaa
aam
mov
pop
jle
cmc
adc
mov
xchg
and
inc
ret
outsl
xchg
push
cmp
sahf
cltd
imul
push
cmp
adc
mov
pop
dec
inc
fistpll
push
or
pop
scas
aaa
call
mov
mov
mov
outsb
jl
into
aas
push
or
mov
push
push
sarb
mov
mov
xchg
or
mov
jle
pop
pop
ljmp
fucomi
rol
jmp
or
repz
in
jo
rorb
inc
xor
test
sbb
add
xchg
nop/reserved
clc
out
mov
sub
pop
aad
shrb
dec
sub
sbb
lods
push
jns
loop
outsb
cwtl
mov
cld
pop
add
jnp
add
fnstsw
mov
jo
sbb
jns
mov
popl
es
cmp
and
shlb
xchg
test
jmp
nop
testb
xor
rcrb
push
push
mov
popf
push
or
rclb
jecxz
popa
add
int
mov
add
xor
adc
add
nop
xor
shld
lret
cs
add
icebp
dec
add
cmpsl
adc
push
mov
test
add
push
mov
jl
inc
fiaddl
jnp
jmp
aad
sub
xchg
test
push
test
scas
cmpsb
out
imul
scas
mov
pop
addr16
cmp
jecxz
test
jecxz
repnz
xor
arpl
sarb
cmp
mov
mov
leave
cltd
xor
in
in
jle
insl
jmp
jb
add
lret
sub
sub
dec
pushf
xchg
arpl
aas
push
xor
push
in
adc
aam
inc
mov
mov
jmp
mov
rcr
enter
add
push
or
push
cmp
int3
pop
int
imul
das
ss
outsb
lods
mov
mov
xor
imul
jnp
ret
sbb
lods
mov
leave
nop
jbe
in
movsb
inc
cmpsl
dec
stos
xor
dec
jge
in
cmpl
xchg
loopne
mov
push
push
fwait
lock
aad
insb
or
test
or
js
pop
faddl
adc
sbb
add
mov
inc
repz
fldl
scas
imul
movsb
lcall
rorl
jne
mov
aam
add
adc
mov
xchg
sti
fadds
cmp
movsl
pop
les
cmpl
and
arpl
out
xchg
add
pop
or
jg
out
mov
add
stc
sbb
cwtl
call
lock
lcall
insb
xchg
dec
xchg
mov
sub
jno
ja
loope
dec
mov
cmp
dec
mov
ljmp
fwait
gs
stc
jbe
mov
jg
jo
mov
sub
dec
pop
adc
aad
ds
cltd
mov
imul
sahf
int
inc
sbb
cmp
mov
icebp
movsl
jae
aad
out
push
lret
test
xor
sub
outsl
push
mov
cmp
cmp
addr16
push
mov
repz
dec
bound
pop
imul
push
and
fistpl
mov
in
dec
in
loop
int3
cmc
repz
cvtps2pd
test
test
nop
mov
lods
mov
out
bound
pusha
js
shlb
cmp
cmpsb
fistpll
mov
add
jno
loope
xlat
das
rcrb
in
arpl
push
mov
push
mov
orl
adc
mov
xor
fcmovu
hlt
jns
jbe
push
out
mov
addl
dec
ja
push
mov
mov
ficompl
xlat
sbb
fistl
push
xor
adc
or
pop
cmp
jmp
pop
cltd
scas
cli
push
jno
fdivrs
repnz
push
cmpb
xor
sbb
sbb
andnps
mov
add
ss
or
call
and
inc
sti
hlt
rcll
cmc
aaa
sub
popa
jg
inc
mov
pop
aas
rcl
insb
sub
xchg
pushf
cmp
rorb
adc
xlat
inc
movsl
lea
mov
mov
scas
into
mov
push
or
jmp
cmp
mov
stc
push
les
stos
xchg
mov
clc
or
test
icebp
cli
aad
shlb
sbb
test
dec
add
push
add
hlt
adc
mov
sbb
ficomps
dec
mov
cmp
shlb
cld
enter
pop
push
lea
mov
adc
mov
ss
cltd
inc
cmc
shll
es
sahf
cmp
dec
aas
xor
pop
int3
das
ja
es
loop
fldl
repz
gs
je
xchg
jg
mov
push
in
push
xchg
dec
mov
inc
out
mov
xchg
inc
sub
add
jo
jmp
cmp
cmc
pop
fsqrt
sub
testl
push
outsb
xor
push
dec
aad
lea
dec
mov
xor
fcoml
testl
jbe
je
lret
scas
addl
fisttpl
cli
or
inc
cmpsb
das
adc
incl
cmp
adc
inc
lock
test
pop
das
movsb
fisubrs
les
mov
sbb
dec
sub
clc
int
aam
sub
push
sub
lea
push
adc
outsb
mov
cmp
push
add
jbe
adc
push
sub
divl
xchg
and
imul
mov
jge
mov
push
in
pop
test
popf
mov
push
push
ss
mov
adc
js
pop
popf
mov
push
cmp
adc
imul
je
pop
push
push
data16
rclb
fidivrs
xor
inc
mov
inc
rorl
orb
xchg
cs
idivb
sub
jbe
arpl
inc
mov
scas
test
stos
mov
mov
repnz
enter
js
sbb
adc
bound
imul
jb,pt
movsb
or
pop
sbb
cmp
dec
jb
outsb
aad
pushw
mov
push
cmp
sub
bound
jns
ss
std
out
mov
sub
lods
add
add
adcb
iret
pop
push
out
ret
inc
sub
aam
add
dec
movsl
sub
add
insl
mov
jb
cmc
mov
into
sub
cmp
data16
pop
jecxz
cmp
mov
out
push
scas
push
sti
fstp
mov
or
pop
outsb
movsb
jns
xlat
sbb
dec
scas
cli
dec
sbb
xor
icebp
adc
sbb
ds
popf
jb
jno
and
inc
dec
jg
pushf
xor
in
mov
arpl
mov
inc
jl
jge
jmp
adc
cmp
sub
jmp
subb
or
and
mov
sbb
push
fldl
pop
xchg
jae
fistps
xchg
fistpll
addb
xor
fwait
or
leave
mov
or
aam
movsl
mov
or
shrl
inc
in
test
loope
lock
shrl
fnstcw
jne
dec
mov
loop
sub
push
add
and
mov
loop
jl
push
and
out
test
je
test
cmp
dec
or
xchg
xor
popf
sub
jecxz
rcrl
pop
outsl
inc
loopne
clc
mov
insl
push
or
mov
mov
add
push
add
or
sbb
shrl
and
dec
xchg
sahf
push
arpl
mov
loope
sbb
jne
and
repnz
filds
mov
stc
jbe
mov
std
imul
mov
inc
or
loopne
mov
leave
add
inc
cwtl
test
outsb
mov
ds
mov
lds
test
adc
sbb
inc
jno
cmpsb
mov
mov
lret
push
fs
cmp
dec
inc
bound
jge
loope
out
test
pushf
sub
js
lcall
stos
mov
mov
or
lcall
mov
or
or
in
imul
pinsrw
cld
in
sub
pop
cmpsb
push
std
jg
add
outsl
les
mov
imul
pop
push
mov
fstpt
cld
jo
icebp
add
lret
xor
loopne
xor
shl
in
js
adc
fdivrl
push
mov
mulb
sbb
xchg
mov
js
insl
pop
pop
or
xorl
dec
sub
push
shl
or
pop
cmp
int3
jnp
dec
jb
push
popf
test
movsb
mov
push
pop
sbb
sbb
insl
push
push
add
mov
mov
jbe
sub
push
or
sbb
hlt
or
xchg
lds
sbb
iret
push
ret
std
std
sbb
stos
mov
push
hlt
add
sbb
mov
mov
sarb
out
and
ljmp
pop
in
and
inc
test
xchg
sbb
xchg
fcomi
sahf
aam
andb
popf
lcall
sub
add
orl
adc
imul
or
aam
adc
adc
test
mov
xor
mov
adcl
clc
cmpsb
push
lret
add
mov
xor
push
mov
out
cltd
ds
scas
scas
fistpl
cmp
outsb
in
inc
cmp
push
lahf
fstps
mov
cmpsb
push
pop
mov
ret
filds
push
sub
movnti
xchg
cmp
pop
imul
arpl
fldcw
in
popa
or
lods
dec
lods
cwtl
sub
jl
pop
inc
or
sti
ror
loopne
sarl
mov
jmp
setne
lods
or
adc
pop
call
subb
push
or
add
in
pop
shlb
das
rclb
add
ljmp
pop
xor
xor
mov
pop
insb
sbb
sub
fsts
in
push
adc
and
pop
out
sbb
ds
sbb
dec
cmp
adc
loope
iret
out
mov
scas
addb
push
pop
mov
fwait
add
loopne
lret
pusha
cmp
sbb
sub
xchg
popf
imul
lea
inc
popf
xorb
repnz
ret
adc
pop
pop
add
jge
pop
xchg
or
popf
outsl
pop
ret
adc
aam
mov
push
cmp
mulb
xchg
push
cmc
jno
inc
jne
mov
cmpsb
xchg
aaa
lcall
mov
fsubrs
sbb
cltd
inc
fdivrs
mov
ljmp
into
aad
scas
xchg
mov
sti
sub
mov
pop
pop
je
lods
adc
stos
gs
sub
repnz
inc
pop
push
push
xchg
push
push
rol
divb
cmpsl
lret
push
adc
adc
pop
mov
stos
xchg
cmpsl
dec
mov
adc
sbb
scas
ljmp
test
push
or
cmp
fisttpl
xchg
jge
inc
cmpb
movsb
int
in
xor
addr16
add
and
adc
ficoms
pop
xlat
cmp
outsb
in
or
mov
mov
push
movsb
loop
xlat
push
clc
add
pop
outsl
leave
xor
and
out
cs
ds
adc
sbb
out
inc
sub
dec
in
inc
pop
mov
ret
cmp
pusha
inc
vphaddwd
or
faddl
jb
cwtl
mov
lcall
and
jge
xor
lret
mov
int
in
out
push
xchg
xor
adc
hlt
adc
pop
rcl
cli
mov
mov
or
test
xchg
adc
in
xchg
stos
lret
fisttpll
repz
push
or
arpl
add
cmpsl
aas
leave
cmpsb
push
mov
mov
push
lock
rcrb
sahf
mov
xor
arpl
cltd
testb
out
sbb
xchg
fiadds
imul
fcmove
add
mov
jae
adc
jno
pop
xchg
adc
negl
lret
fisttps
clc
iret
adc
dec
and
ljmp
mov
cs
jl
push
stos
outsl
and
push
in
cmc
pop
sub
pop
and
iret
ja
stc
pop
mov
jge
aad
add
push
pop
cmp
xor
imul
icebp
inc
js
adc
cs
mov
mov
jmp
jb
lcall
pusha
mov
jb
push
jae
push
add
mov
outsl
inc
sbb
lret
xor
lds
push
jge
test
lahf
sub
cmp
mov
movsb
and
movsl
push
and
test
shl
sbbb
jae
fldcw
addr16
pop
dec
out
repnz
imul
dec
loopne
fstpt
outsb
leave
dec
lock
inc
push
insl
shlb
dec
loop
adc
mov
cwtl
call
sti
dec
pop
fists
sbb
dec
xor
in
pushf
in
enter
ljmp
scas
leave
imul
mov
out
iret
mov
fxch
out
stos
sbb
fcmovnu
cmc
orb
and
scas
mov
inc
jns
cli
mov
insl
sbb
aam
test
cmpsb
daa
cld
int3
push
and
cwtl
cmp
or
mov
ja
stos
aaa
dec
push
int
sub
push
outsb
imul
je
cli
sbb
push
sub
sbb
inc
xor
ljmp
jne
aas
mov
js
ret
inc
jecxz
dec
sbbl
cli
mov
ret
jge
dec
cmc
jne
mov
xchg
ss
jp
pop
xor
add
adc
push
add
xor
add
loopne
jmp
mov
ret
sub
jb
jg
and
loope
and
adc
or
mov
jns
sub
fldcw
js
jnp
mov
sti
lods
jns
test
sar
jle
push
xchg
dec
mov
xlat
adc
mov
int3
pusha
xor
pushf
fucomp
sbb
adc
sub
test
sbb
popa
arpl
dec
aam
add
in
popa
sub
dec
and
cld
mov
enter
dec
data16
adc
je
shl
xor
mov
fnstenv
int3
dec
push
inc
out
and
ret
xchg
pop
jbe
jo
ret
test
mov
stc
cwtl
cmp
std
outsl
addr16
popa
inc
adc
jl
frstor
and
push
and
add
std
orb
sub
mov
cltd
xchg
shrl
aam
xor
mov
aaa
push
test
inc
cmc
mov
inc
out
in
inc
mov
push
and
hlt
sub
push
jnp
stc
mov
sub
pop
int3
into
adc
call
pop
pop
push
jl
addr16
cmp
sub
dec
loopne
lds
imul
popa
fcompl
pop
ret
xor
fmuls
aad
fnstsw
push
push
scas
jae
cmp
pop
inc
sti
mov
adcb
arpl
inc
pop
cmpsb
sbb
mov
test
cs
sub
xchg
adc
mov
lock
test
lods
pop
jno
stc
insl
int3
mov
cmp
cltd
and
jl
push
subl
jno
fdiv
push
adc
jecxz
fsts
in
cli
jg
dec
rol
add
mov
add
xchg
mov
dec
in
pop
cmp
xor
movsb
in
and
jbe
jg
push
push
ja
mov
pop
mov
movsb
mov
aam
and
cs
out
sub
xchg
fs
outsb
mov
jnp
cmp
into
and
es
inc
dec
or
adcb
pop
jo
xor
dec
and
push
mov
jle
call
push
pop
xlat
jecxz
mov
test
ljmp
adc
pushf
push
mov
and
lea
insl
test
lods
sbb
xchg
jecxz
xchg
mov
xchg
inc
add
cmp
add
lahf
mov
jnp
mov
testb
call
lcall
or
mov
inc
or
stc
inc
push
mov
mov
hlt
outsb
mov
inc
or
mov
pop
and
xor
int3
mov
addr16
mov
cld
repnz
out
sti
xchg
dec
mov
sbb
mov
aas
cmp
jmp
cmp
imul
or
fs
fstpt
pop
cld
pop
sub
xor
mov
pop
push
pop
jbe
mov
lahf
pop
adc
repnz
fsts
cmp
in
lea
push
fldl2e
add
movsl
mov
jmp
cmp
cld
sbb
movsl
in
int
pusha
outsl
adc
movsb
adc
nop
in
add
pop
insb
ret
xchg
push
mov
out
adc
insb
aaa
xor
mov
ljmp
jg
scas
push
and
es
inc
addb
mov
fildll
cmp
mov
mov
push
jle
sbb
pop
in
inc
pop
test
out
sub
scas
das
xchg
repnz
pusha
and
pop
jne
sbb
mov
imul
bound
adc
inc
pushf
jb
cmpsb
xchg
rolb
pusha
sub
lret
jno
inc
pop
js
out
int
or
jmp
out
inc
mov
and
imul
xor
cmp
loopne
lcall
imul
enter
and
shll
mov
add
xchg
push
pop
test
lret
into
fisttpll
mov
fdivp
dec
shll
rorl
jno
push
sbb
pop
or
rep
and
xlat
mov
pop
adc
xchg
pop
aam
out
inc
test
dec
or
fisttpl
inc
and
add
or
inc
xchg
mov
and
nopl
fldenv
repnz
xchg
stos
fbld
pop
mov
and
cmp
pop
fbld
mov
popa
sbb
pop
fidivs
xchg
ffreep
fcomp
and
js
inc
lock
cmp
outsl
add
lret
nop
dec
push
dec
fs
les
mov
push
inc
inc
and
dec
and
pop
inc
stos
sbb
sbb
and
xorl
mov
inc
ss
inc
or
inc
orb
addl
xlat
cmp
mov
mov
inc
push
popa
roll
mov
add
enter
das
imul
fnstcw
adc
pop
sub
jg
pop
into
sti
fcomi
imul
mov
and
shrb
add
mov
mov
adc
mov
dec
lock
and
jb,pn
pop
xor
jp
aaa
mov
imul
pop
cmp
aas
push
cmc
sub
jno
dec
pop
dec
outsl
lahf
aas
loope
jmp
cmc
cld
mov
fldt
ss
mov
jg
jnp
adc
daa
lods
sahf
jg
aam
int3
pop
jb
roll
inc
nop
bound
inc
pop
loop
cltd
add
dec
rol
mov
jne
cmp
test
pop
and
sbb
mov
push
jo
pop
adc
dec
sbb
inc
cmp
xchg
loop
ss
push
sub
inc
call
mov
stos
pop
push
mov
lods
adc
and
repz
fcoms
je
xchg
adc
cmp
dec
arpl
fdivl
xor
sub
repz
xlat
mov
jno
xor
outsb
mov
xor
pop
mov
jecxz
in
lea
mov
adc
mov
push
dec
pop
mov
fs
clc
data16
xor
and
in
inc
mov
ds
mov
inc
pop
icebp
lret
cmp
rcrb
or
sub
ss
ds
roll
push
popa
out
and
push
imul
aas
fsubrp
sub
fildl
fmuls
jmp
pushf
std
pop
shlb
adcl
cmc
mov
xor
jle
movsl
shl
jmp
orl
cmpsl
loop
xorl
xchg
stc
ds
cld
stos
or
dec
insb
jecxz
jmp
cmp
sub
lea
adc
inc
jmp
and
fwait
dec
xor
outsl
lahf
push
cld
mov
dec
push
ret
push
stos
inc
fisttpl
movsb
jb
sbb
push
and
into
mov
mov
insl
out
inc
aaa
pop
xorb
cwtl
cmp
sub
xchg
adc
imul
dec
dec
not
xor
shrl
sarl
mov
daa
in
dec
jmp
inc
add
mov
aas
fisubrs
mov
pop
push
sub
and
sub
arpl
cmpsb
es
aas
es
sbb
ret
push
arpl
jmp
stc
pop
adc
test
pop
mov
jle
xor
push
nop
sbb
pop
in
xorb
sub
sub
rolb
cltd
mov
and
js
ljmp
ds
mov
cmpsl
outsl
or
pusha
jnp
mov
and
adc
cmp
pop
fdivr
adc
xor
or
int3
lret
add
sbb
lret
xor
std
cmp
pop
popf
xlat
pop
bound
cmc
les
pop
and
inc
imul
mov
aad
xchg
cmp
jnp
into
jo
cltd
sbb
jbe
std
jmp
cld
scas
mov
mov
mov
cmp
nop
sahf
ret
and
and
xchg
mov
pop
xor
add
xchg
xchg
lock
dec
jp
and
inc
push
gs
adc
dec
addr16
inc
ds
bound
leave
sub
int3
shll
adc
xchg
push
stc
pop
cwtl
fisubs
test
lahf
mov
mov
xchg
cmpsl
xchg
testl
mov
sub
adc
icebp
iret
sub
adcb
pop
mov
inc
mov
out
jne
xchg
dec
addb
fmulp
ret
jnp
add
inc
cmpsl
fsubl
dec
shll
xchg
jns
or
lods
sub
sbb
leave
pop
js
add
popa
mov
mov
repnz
fsubs
mov
jns
sbb
pop
aad
sub
or
xor
mov
ljmp
cli
dec
rclb
xchg
stos
jl
shl
lahf
xor
sbb
pushf
stc
inc
cmpsb
cmpsl
enter
inc
shrb
xchg
insl
push
das
adc
lahf
push
ds
lea
xchg
push
fldt
out
mov
imul
cmpsb
xchg
mov
fnstsw
mov
jmp
mov
test
sbb
jecxz
push
in
scas
jl
push
mov
out
inc
popa
or
ja
mov
hlt
inc
jbe
insl
cmpb
daa
jmp
ss
pop
mov
push
int3
dec
cld
daa
cmp
nop
pop
movsl
xchg
fmull
loope
add
imul
and
sbb
fstps
and
push
test
stos
jge
lods
cltd
adc
inc
lcall
lahf
test
out
sahf
xor
jbe
cwtl
mov
call
aam
icebp
dec
pop
push
jo
call
andl
jno
dec
push
fbstp
sub
stos
into
fimull
fldcw
icebp
dec
outsb
inc
ret
mov
outsl
out
icebp
or
sbb
sub
hlt
aam
sub
test
sbb
pop
arpl
pop
or
filds
repnz
in
mov
jl
pop
in
push
sub
pushf
aad
fwait
dec
jo
cmpsb
dec
sbb
push
add
ret
inc
mov
notb
xor
aas
dec
arpl
int3
cmpsl
divps
inc
adc
sub
sti
mov
jnp
adc
adc
mov
xchg
push
mov
push
inc
mov
pusha
out
sub
imul
push
ret
mov
sub
lret
and
pop
mov
jbe
inc
push
xchg
andb
xor
jge
mov
cld
push
or
dec
mov
shrl
cmp
addl
mull
mov
clc
and
adc
mov
jbe
cltd
out
cltd
xor
mov
mov
iret
jno
inc
xchg
lods
int3
pop
sbb
fiadds
mov
ss
pop
jo
mov
inc
pushf
and
and
ljmp
push
cmp
popa
add
push
test
in
mov
jno
nop
test
push
mov
add
mov
popf
mul
idivb
push
push
icebp
cmp
add
jae
mov
fiaddl
mov
test
fnstenv
mov
sub
adc
call
lret
jmp
scas
push
jne
ret
xor
or
int3
mov
int
fsubs
mov
sbb
loopne
ja
in
outsb
or
push
or
xchg
imulb
out
shr
pop
adc
push
repz
sub
test
shr
icebp
pusha
cld
xor
cmp
adc
mov
jno
or
adc
sub
adc
adc
dec
adc
mov
jne
inc
mov
dec
adc
jno
mull
adc
test
cmpsl
sti
aad
lcall
inc
insb
mov
jo
sub
sahf
push
stc
pop
sbb
out
aaa
dec
mov
add
in
lea
cmpsb
inc
fcomps
sub
and
xor
lret
mov
mov
push
test
loope
ljmp
and
adc
xor
adc
cmp
xor
dec
call
add
adc
in
shlb
jl
scas
pop
pop
inc
mov
add
pop
xchg
inc
sbb
xchg
test
push
sbb
cmpsl
sbb
popf
pop
xor
mov
xor
daa
pop
mov
adcb
movsb
or
mov
mov
adc
idivl
or
add
inc
push
in
cld
pop
in
or
aam
jmp
adc
arpl
xchg
xchg
push
push
stc
and
push
pop
push
ljmp
mov
xorb
add
jp
ret
and
push
sbb
sbb
cmp
scas
pop
push
push
out
test
cmp
in
les
cltd
adc
and
ja
dec
or
les
mov
sub
mov
xor
push
lret
lahf
rorl
jmp
sbb
mov
pop
dec
xchg
mov
and
mov
pop
cmp
pop
xchg
pop
and
fbstp
in
pop
scas
sti
pop
test
dec
xchg
inc
push
push
cmp
mov
xor
cmp
movsb
mov
push
push
mov
lods
lret
jae
cmp
xchg
dec
outsl
inc
add
xor
jb
xlat
mov
pop
and
xchg
int3
cmp
push
mov
inc
and
mov
dec
and
pop
pop
jmp
int
sub
push
stos
push
notl
jns
adc
test
lahf
pop
jno
ss
idiv
int
fnstenv
pop
xchg
inc
and
jno
rclb
inc
out
and
ret
enter
mov
inc
xchg
or
adc
inc
cmp
xchg
inc
out
mov
dec
cmpsl
dec
sti
fwait
stos
xor
lds
xor
cmc
jns
inc
push
sbb
jle
or
repnz
add
xorb
xchg
sahf
rclb
sub
inc
lea
subb
adc
lods
les
rcrb
add
jge
fucomip
das
push
mov
inc
dec
mov
pop
fsubp
pop
cli
mov
mov
mov
clc
int
loope
xor
mov
inc
push
sbb
repnz
js
insl
xor
mov
mov
xlat
loopne
sbb
cmpsl
nop
fmuls
movsb
shlb
scas
add
jo
pop
mov
ffree
add
dec
bound
testl
stc
sbb
sbb
inc
pop
aas
jne
mov
or
pop
outsl
dec
xchg
test
push
stos
mov
inc
sub
sbb
pop
pushf
fwait
rcll
aas
stos
cltd
fcmovne
sub
and
jno
ret
push
pop
and
mov
xor
pop
push
xor
and
js
emms
scas
jns
arpl
jg
xchg
mov
test
leave
inc
cmp
ja
xchg
sub
arpl
mov
xor
pop
fidivl
xor
leave
in
dec
add
imul
add
lds
pop
adc
dec
jmp
scas
test
mov
loop
dec
imul
shlb
setb
push
jge
into
fstps
into
in
cmpsl
and
jg
outsl
pop
out
push
lahf
arpl
sbb
pop
iret
jo
xchg
ja
adc
mov
sbb
mov
pop
xor
push
cwtl
dec
and
out
outsl
fcmovne
aad
fisttpl
cmpsb
xchg
jbe
incl
stos
rcrl
js
gs
add
pop
test
int
mov
push
inc
arpl
push
fsubrs
addl
ficompl
fwait
cmp
push
cwtl
jp
xor
aaa
dec
sub
cmc
adcl
dec
xchg
ret
sub
ret
rol
es
mov
xor
cmp
sub
push
loop
cmp
mov
or
iret
arpl
out
mov
loope
pop
xchg
fnstenv
loopne
fldcw
hlt
adc
arpl
into
jae
fstps
jne
mulb
mov
sbb
mov
pop
flds
cmpsl
ret
push
jno
cltd
sbb
dec
sarb
lds
pop
dec
mov
movsl
push
popa
aad
stc
mov
pop
test
test
inc
sbb
mov
jne
mov
sub
pop
add
lods
jle
es
dec
inc
sub
mov
mov
dec
ja
gs
enter
stc
jp
and
mov
aas
out
loop
js
mov
addb
out
cld
scas
lret
loop
add
cld
inc
xchg
pushf
jl
add
mov
or
inc
shlb
shl
pop
ja
rorb
xor
in
push
mov
xor
nop
in
gs
dec
jbe
mov
dec
out
pop
pusha
jp
jns
pop
push
jg
sub
insb
xchg
sbb
ljmp
and
pop
xchg
rdmsr
je
ret
stc
adc
int
ret
or
mov
int3
jge
hlt
popl
mov
pop
std
loope
ret
adc
loop
cmp
inc
call
lock
mov
lcall
loop
inc
int3
int3
adc
in
jecxz
xor
push
loop
lea
push
sub
test
inc
mov
xor
paddsb
fwait
sbb
dec
sbb
dec
cwtl
jge
mov
xchg
adc
jge
push
ljmp
addr16
xchg
xchg
in
leave
xchg
sub
add
lret
stc
sub
push
dec
cmp
xor
into
jb
jne
int
xchg
fwait
lahf
scas
cld
mov
stos
pushl
cmp
lods
cmp
and
cmc
dec
pop
cmpsb
imul
and
addr16
push
or
pusha
dec
sub
sub
push
xchg
test
cmpsl
push
mov
ljmp
mov
daa
repz
cmc
xor
mov
test
adc
in
ficoms
mul
jl
xor
std
cltd
mov
bound
push
jno
adc
mov
mov
cmc
mov
test
leave
dec
mov
add
test
cs
jmp
notl
cmp
ljmp
das
test
push
sub
movsl
fdivr
cwtl
or
add
add
test
jmp
push
jge
mov
xchg
pop
aad
fimuls
mov
dec
push
jmp
push
out
and
mov
pusha
and
jnp
xor
mov
sub
dec
push
movsl
dec
js
sub
jne
pop
shlb
mov
bound
cmpsl
popf
cmp
adc
or
inc
lahf
mov
dec
pushf
jae
jbe
jae
or
popa
cmpsl
rorl
xor
mov
subl
call
sti
pop
ror
cltd
cmp
sbb
jmp
lock
pop
fsubrs
mov
mov
mov
mov
imul
je
jmp
insl
push
xchg
ja
cmc
pop
jl
loop
and
pop
pop
pop
mov
add
cmp
rcll
mov
add
bound
mov
push
xchg
push
ja
sbbb
daa
push
push
cmp
mov
push
shlb
xchg
inc
cmpsl
adc
cmp
inc
ds
pop
lahf
fwait
int3
sahf
adc
mov
xchg
jo
jg
call
ret
xor
and
aam
add
out
dec
jo
adcl
sub
dec
lahf
int3
xchg
pop
test
and
cmc
bswap
sbb
mov
lods
and
mov
arpl
sahf
jbe
sti
pop
mov
and
mov
mov
or
es
je
mov
cmp
int3
scas
xlat
cmpsl
sahf
adc
pop
cmc
arpl
js
mov
fsub
mov
stos
nop
cwtl
int3
and
cmpsl
pop
jae
popf
adc
popa
lods
dec
ljmp
lret
rolb
mov
mov
xor
je
imul
inc
shlb
xchg
sar
add
sub
push
adcb
test
jae
sahf
xlat
sub
add
pop
adc
pop
mov
ds
adc
pop
stos
sbb
adc
les
mov
ret
xor
repz
lock
push
and
mov
sbb
cmpb
ss
lods
jbe
lds
imul
aaa
popa
push
jnp
cmp
cmpl
pushf
jbe
pop
aam
out
in
mov
dec
sbb
mov
jnp
or
aas
fldcw
rcl
jns
jecxz
mov
or
push
push
enter
and
in
lea
sbb
test
aad
push
adc
call
push
cli
cmp
pop
scas
cmp
mov
lret
das
js
adc
inc
repz
test
mov
and
je
xor
cmp
mov
push
loop
mov
test
addr16
sub
mov
xor
add
es
mov
clc
movsl
test
pop
popf
inc
rol
sbb
inc
shrb
or
mov
and
or
pop
subl
and
pop
adc
rcll
push
sub
lds
ret
rcrb
push
loop
sub
cwtl
sub
adc
sbb
js
scas
sti
sbb
add
or
movsb
push
fiadds
filds
adc
int3
jbe
inc
mov
roll
jne
fistl
negb
pop
in
lea
or
mov
add
outsl
fs
imul
lret
enter
add
lods
aas
xor
ret
dec
cmpsl
xor
cwtl
test
dec
repnz
push
xchg
popf
into
frstor
push
or
cltd
push
mov
shr
loop
mov
shll
xchg
ficoml
movsb
or
sub
insl
mov
push
into
mov
ret
les
mov
xor
jno
stos
pusha
mov
jg
lret
mov
inc
jns
stos
stos
lea
icebp
adc
push
or
push
xchg
jae
shr
cmp
jae
in
int
mov
sub
das
xchg
dec
outsl
in
push
in
ljmp
outsb
pop
mov
aad
je
and
push
xor
shrb
pop
scas
inc
nop
sbbb
dec
dec
xor
test
or
jns
sbb
aas
cli
pop
sbb
ss
jge
imul
jmp
icebp
test
xchg
outsl
sub
add
outsb
cltd
clc
arpl
scas
push
repz
dec
ret
bnd
mov
and
xor
push
outsb
jg
addr16
sub
sbb
dec
ljmp
push
inc
dec
stos
sti
movsb
xor
pop
stos
push
sub
mov
stos
das
lret
dec
pushf
loopne
push
cmpsb
aaa
gs
cli
scas
arpl
addb
push
call
cmp
cmp
jno
imul
xor
xchg
dec
push
jle
jecxz
inc
cmpsl
bound
fstps
xchg
xchg
and
scas
shll
aaa
xchg
mov
jmp
je
insl
sub
dec
pushf
jge
das
inc
adc
pushf
mov
push
push
scas
push
xchg
ja
sti
aad
jmp
sbb
imul
sbb
pop
mov
sbb
out
popf
jae
jo
xor
ds
jno
into
pop
movsb
mov
pop
add
xor
movsb
cmp
mov
pop
add
cmpsb
out
cltd
gs
push
add
fmulp
cmp
dec
aam
cmp
dec
fsub
xchg
xlat
sar
nop
out
or
and
mov
aas
mov
aam
lret
shl
mov
push
fdiv
ja
lods
mov
out
jne
xchg
sahf
or
repz
mov
adc
call
movsl
in
out
test
cwtl
pop
cmc
push
cmp
movsb
pop
mov
mov
sub
stos
cmp
enter
rcrb
pushf
sub
inc
mov
aaa
js
jmp
inc
lea
iret
jne
insl
xchg
mov
fldl
outsb
aad
nop
jle
int3
and
add
xor
push
mov
ror
imul
or
shrl
cmp
and
cltd
into
push
mov
jmp
push
and
sbb
mov
sar
lret
mov
rolb
xbegin
leave
push
in
mov
cli
or
push
or
cwtd
or
andb
ret
mov
mov
jle
bound
mov
jg
mov
mov
fadds
leave
andl
lock
dec
jecxz
pop
cvttps2pi
sahf
cmc
aam
sarl
mov
stos
mov
pop
mov
mov
rcrb
mov
add
xchg
stos
rorl
lea
pop
jmp
stos
loopne
lea
test
mov
xor
into
mov
mov
cmc
in
mov
cmp
imul
adc
sti
fsubrl
lods
xchg
mov
mov
xchg
xor
xor
movsl
pop
int3
mov
add
aas
mov
test
mov
sub
scas
fistl
inc
xor
mov
lret
pop
mov
out
pop
popa
dec
fistps
outsb
push
push
push
arpl
movsb
das
dec
sbb
out
jns
pop
push
and
pop
enter
imul
cmpsl
fcoml
andb
pop
xchg
arpl
call
jae
sti
fsub
aam
add
pop
rol
into
shl
mov
data16
mov
fwait
mov
stos
adc
aam
cmpsl
fisttps
nop
cli
es
xlat
mov
ss
mov
ja
push
inc
cs
popa
loopne
jmp
jl
aas
int3
sbb
xchg
xor
or
pop
mov
xchg
inc
pop
lods
xchg
je
sbb
mov
loope
inc
cmpsl
pop
fidivl
in
mov
inc
xchg
stos
cmp
icebp
push
pop
es
mov
pushf
dec
xor
inc
jl
cmpsl
or
fs
stos
gs
pop
or
or
mov
jae
inc
stos
shrb
rep
fwait
in
cli
pop
aam
roll
lahf
cmp
sti
mov
iret
lsl
xchg
mov
popa
cmovno
scas
insl
data16
sbb
xor
xchg
aaa
adc
lock
lahf
lret
sbb
sub
pop
jmp
push
mov
push
hlt
pop
and
popl
lods
push
fistpll
mov
out
xorl
lock
loop
jno
mov
sbb
xchg
jle
add
imul
mov
push
popa
inc
cld
dec
lds
dec
inc
div
clts
jecxz
push
and
out
jbe
aas
shl
les
adc
inc
inc
into
jae
imul
in
aad
mov
xchg
je
sahf
inc
ficoms
pop
loope
cmp
or
xor
mov
sub
pushf
mov
pusha
push
or
cli
js
div
test
sbb
mov
imul
movsl
in
inc
incl
sbb
inc
xor
adc
cmp
add
aam
jb
inc
movsb
pop
adcb
loope
ret
mov
loopne
lock
or
fsubp
loope
jns
insb
lods
and
xor
cmp
jle
popf
inc
aad
xchg
or
xor
push
pop
std
dec
jae
sahf
dec
add
push
fiadds
cmp
lahf
mov
cmp
dec
stc
push
jle
sahf
test
and
ds
mov
mov
enter
scas
enter
clc
pop
xchg
movsl
fnstcw
add
pushf
sbb
in
test
xchg
js
pushf
filds
cmp
pop
into
mov
xchg
or
ffreep
mov
xlat
in
push
xchg
fisubrs
out
adc
dec
dec
pop
xor
xchg
xchg
dec
insb
int
icebp
or
aam
ret
push
sub
scas
cmc
jg
xchg
mov
cmp
xchg
xchg
dec
aad
cmp
xchg
jns
lods
in
mov
sbb
cltd
add
push
imul
leave
lea
insb
int3
gs
mov
cmp
cmp
push
dec
cld
sahf
out
xor
aaa
in
add
xor
sbb
and
daa
mov
cmp
loop
popa
lea
lret
xchg
rclb
scas
dec
push
sub
xor
pop
dec
fstps
rcrl
mov
addr16
nop
cmp
dec
push
jbe
push
xchg
and
inc
sbb
test
adc
xlat
testb
cmp
pop
call
jp
dec
cmp
adc
mov
jle
cltd
popa
hlt
stos
addb
lock
push
mov
pop
je
jp
dec
cwtl
lea
xchg
push
lcall
mov
jmp
add
and
jne
jns
inc
and
sbb
fmuls
stos
push
stos
outsl
sbb
scas
jne
sub
mov
jmp
repz
pop
fstpt
roll
xchg
xor
in
repz
test
cmp
or
and
aad
mov
jo
in
fmull
ds
sub
aam
stc
mov
popl
dec
push
xor
or
and
add
mov
aam
or
andl
ret
jb
hlt
cmp
loope
jle
cmc
aad
mov
ja
inc
push
fidivl
mov
fidivl
cmpsl
mov
stos
cmp
pop
ret
aad
mov
in
sbb
imul
js
insb
lock
push
call
orl
insl
mov
pop
push
imul
push
mov
leave
adc
icebp
or
ret
nop
sti
call
ja
dec
lods
mov
jmp
in
jmp
mov
imul
icebp
pop
push
xchg
dec
popf
popa
mov
push
mov
dec
pop
hlt
sub
les
ror
lods
jnp
data16
jle
add
testb
sbb
lahf
cwtl
cmp
mov
das
or
adc
mov
pop
ss
test
fstl
mov
push
jns
sub
jb
mov
movsb
int
pop
ficompl
aas
push
push
jecxz
xor
movsl
cmp
ss
push
cmpsl
repz
insl
aas
mov
inc
sbb
das
ds
cmc
adc
or
push
mov
in
xor
mov
inc
aad
inc
pop
mov
and
stos
cld
push
cltd
xor
clc
loope
leave
bound
shrb
pop
jl
dec
mov
xchg
inc
mov
or
aaa
sub
push
stos
inc
mov
or
add
xor
mov
out
outsb
pop
in
pop
dec
ss
push
pop
frstor
add
data16
dec
pop
pop
ds
push
aad
ljmp
pop
mov
rcrl
sbb
jge
loope
inc
jecxz
xorl
adc
inc
pop
mov
imul
jg
push
xchg
out
sbb
pop
xor
adc
pusha
stc
test
sbb
js
xor
dec
int3
push
dec
fsubrs
icebp
jne
mov
inc
or
addb
mov
or
je,pt
les
inc
sbb
mov
hlt
jno
pop
into
in
mov
movsl
push
xor
jge
push
adc
fiadds
test
push
cs
ss
mov
test
sahf
add
fcomps
sub
pushf
sbb
or
mov
orl
inc
imul
scas
dec
fwait
into
xchg
adcb
loopne
mov
dec
adc
stos
xor
push
out
mov
cmp
hlt
jno
and
mov
lods
push
movsb
mov
xchg
push
adc
shrl
xor
jg
sbbl
int3
lret
push
iret
mov
ror
lret
test
mov
xchg
flds
inc
push
adcl
aas
mov
mov
cmpb
lcall
sbb
inc
dec
scas
sub
mov
adc
iret
mov
loope
icebp
mov
je
in
jp
push
adc
mov
lahf
lret
stos
clc
inc
pop
decl
xlat
test
push
test
lods
outsb
addb
or
adc
add
xchg
and
push
lret
jb
aas
imul
andb
das
xchg
sarb
ret
inc
loop
adc
aam
or
out
mov
cmpsb
add
hlt
fsubrl
outsl
ror
sbb
dec
shll
sbb
mov
je
cwtl
and
rorl
or
mov
mov
adc
stos
push
cli
js
movd
and
in
mov
cmp
cmpsl
fwait
not
shr
cltd
jmp
mov
rorb
xchg
lcall
ja
inc
mov
and
pop
cld
mov
adc
rcll
js
mov
jg
enter
inc
out
push
mov
push
mov
cltd
mov
sbb
test
sub
rcrl
mov
adc
jge
cmp
adc
mov
or
cmp
inc
addb
out
and
or
push
jmp
pushf
jnp
mov
sub
mov
mov
lods
test
push
insb
xor
pop
sub
mov
roll
and
nop
out
lcall
mov
daa
mov
sbb
jecxz
sbb
insl
outsl
or
popa
push
mov
jl
mov
dec
cmp
clts
mov
pop
and
push
imul
jb
jp
sbb
dec
inc
dec
int3
cli
hlt
cmpl
es
sbb
push
test
les
pop
popa
pop
inc
les
ret
jmp
fldenv
clc
cmp
sub
pop
inc
inc
adc
jne
lock
adc
adc
xorl
in
lret
mov
jne
sub
ret
mov
mov
mov
arpl
mov
or
mov
xlat
pop
pop
mov
sub
sub
jo
mov
fcompl
push
inc
hlt
cli
out
aaa
xchg
sub
aad
mov
out
data16
cmp
daa
icebp
enter
inc
push
cmp
lods
outsl
dec
mov
mov
addl
dec
adc
repz
out
mov
pop
cmp
xor
cmc
lds
cmp
lock
inc
pop
lcall
hlt
std
ds
and
aas
stc
inc
push
sub
outsb
cltd
stos
mov
cmc
mov
mov
push
and
mov
sbb
pusha
fidivl
and
jns
adc
mov
imul
xchg
cli
adc
sahf
and
aad
push
inc
or
or
fiaddl
clc
aas
push
imul
scas
fldt
push
sti
cmpsl
jb
dec
loope
dec
je
iret
mov
and
cmc
mov
and
daa
hlt
out
int3
xchg
dec
pop
cmp
lcall
rorb
sub
movsb
bound
sbbb
dec
popf
xor
int3
inc
push
or
lcall
mov
dec
fiaddl
cmp
ss
inc
inc
insl
jp
lods
dec
fs
es
cmp
mov
mov
inc
xor
sub
jnp
pusha
sub
bound
lahf
jmp
jl
leave
shrl
popf
in
cs
jmp
pop
mov
or
sub
fs
push
imul
faddl
daa
push
aam
xchg
cmpl
mov
mov
jns
lret
cmp
sahf
fcompl
adcb
filds
aas
std
or
bound
cwtl
add
stos
add
outsl
jbe
lock
ss
call
xor
pop
in
jno
cmc
cmp
mov
adc
xor
mov
push
imulb
sbb
pop
popa
scas
int3
adc
push
sti
cwtl
loop
sub
imul
std
add
or
outsl
sahf
cmp
mov
pop
ljmp
mov
es
aad
push
mov
xor
fisubrs
pop
into
or
and
les
mov
fnstsw
jae
out
sbb
cli
mov
pop
movsl
jecxz
mov
rolb
xlat
and
bound
push
rcrb
lea
inc
imul
push
js
push
and
mov
and
add
insb
and
xchg
in
stc
enter
sub
mov
jo
adc
sti
sbb
popa
movsl
stos
and
bound
or
or
pusha
cmp
xchg
lods
or
or
xchg
xor
bound
out
out
jmp
dec
mov
mov
cld
ficoms
push
ret
je
add
lahf
mov
testl
addb
rclb
sbb
fisubrl
in
adc
jmp
nop
pop
aam
xchg
ljmp
les
xor
pop
xlat
or
sub
outsb
jbe
jle
adc
sub
and
aas
add
stos
inc
aad
in
loopne
mov
movsb
jmp
push
sub
jns
jge
mov
mov
pop
clc
enter
mov
dec
inc
sbb
xchg
sbbb
test
adc
int3
jns
jae
scas
mov
fistl
ret
int
insl
dec
jne
push
rolb
mov
std
adc
dec
movsl
xorb
fs
lds
xchg
push
in
push
mov
daa
ja
call
dec
fimull
adc
push
cltd
pop
pop
sub
out
cmc
add
cmp
test
outsl
outsl
bswap
test
sarb
in
test
adc
xor
lods
idivb
jb
mov
lock
std
jle
in
scas
mov
jmp
jecxz
jno,pn
fsin
jg
mov
add
mov
mov
cmp
sbbb
lahf
shl
insb
addr16
sub
adc
mov
jns
pop
xor
sbb
addr16
insl
fs
fisubrl
dec
shrl
js
add
cmp
sbb
cmp
aad
ds
jg
xor
ljmp
sub
pop
lea
inc
std
push
das
ds
pop
lods
inc
in
mov
ja
inc
sub
xchg
pop
inc
add
ror
inc
push
inc
ficoms
mov
mov
jp
inc
lock
mov
sub
push
jae
or
push
xchg
scas
push
shll
unpckhps
pop
sahf
pusha
push
cli
cs
imul
sarl
dec
or
xchg
fnstcw
ret
jl
rclb
inc
bound
repnz
jp
in
lcall
int3
jno
out
mov
jns
mov
dec
jno
and
fists
push
mov
add
mov
gs
pop
mov
jmp
jne
andb
sub
out
lods
sbb
iret
adc
aaa
pop
imul
inc
inc
test
cmp
or
call
mov
lods
lret
dec
push
fimuls
arpl
add
mov
dec
jns
jl
push
push
pop
mov
inc
insl
adc
mov
mov
pushf
andl
mov
adc
inc
test
pop
rorl
xorb
jb
xchg
int3
es
fwait
or
lea
fcoml
fcoms
lahf
mov
mov
and
mov
lock
pop
inc
ret
sub
xchg
inc
or
jb
inc
jle
outsl
daa
repnz
sub
push
stos
inc
ret
es
test
je
jmp
bound
call
loop
push
loop
or
repnz
ret
icebp
mov
insl
mov
ds
push
mov
jge
popaw
or
pop
mov
aaa
cmpsb
out
ret
jecxz
jecxz
repnz
jae
sub
add
xor
xor
inc
arpl
push
sub
rorl
inc
jns
or
mov
inc
sub
cld
aas
sbb
aaa
xchg
jg
xchg
pop
sub
xor
fnstsw
push
lret
mov
or
lods
or
push
scas
mov
arpl
and
mov
es
mov
cltd
int3
fbld
movsb
add
lock
pop
dec
cld
xchg
adc
fdivr
or
pop
mov
jbe
lret
repnz
mov
jb
gs
jno
xorb
lret
out
rcll
push
push
jmp
js
test
push
add
ds
or
imul
and
fdiv
test
lods
cmc
in
inc
add
mov
flds
sub
mov
imul
mov
call
adc
mov
xor
inc
cmpsb
aam
aaa
int
adc
mov
neg
or
les
js
dec
xor
cmc
pop
repz
mov
jnp
xchg
jle
outsl
scas
mov
push
push
xor
or
aas
sub
aad
je
hlt
jl
pop
pop
push
std
sub
sub
mov
xlat
xchg
ljmp
mov
idiv
cs
clc
dec
sbb
adc
xchg
xor
loope
clc
das
push
sbb
in
xchg
cmp
jnp
xor
daa
or
lds
fistps
mov
pop
test
in
ffree
inc
shrl
or
aad
cmpsb
inc
mov
fiadds
movsl
out
xchg
adc
aaa
pop
aam
dec
xchg
adc
jb
aas
nop
mov
jecxz
xchg
mov
insl
mov
push
leave
lea
mov
pushf
das
and
sbbl
mov
adcl
scas
add
jo
fcoms
sub
xchg
inc
xchg
in
data16
dec
pop
ja
sbb
pusha
cmp
imulb
push
fistpll
fwait
mov
cltd
or
loope
test
cmpl
dec
mov
adc
les
jbe
push
fs
xchg
add
leave
or
jp
pop
mov
pop
roll
fldl
cmp
add
adc
out
int3
sbb
xchg
pusha
je
dec
test
outsb
movsl
xor
mov
cmpsb
pop
dec
pop
seto
jns
call
enter
sbb
mov
push
movsl
push
pop
add
pop
sbb
shll
cmp
push
ret
or
into
pop
cmp
pop
lea
loope
mov
movsb
jb
xchg
adc
fldt
pop
cmpsb
push
arpl
mov
cmc
mov
out
jmp
fisttps
je
pop
stc
pusha
ds
lock
cltd
imul
sti
add
cmp
mov
ret
clc
popa
mov
aas
popf
ljmp
cmp
negb
jg
dec
ret
and
je
je
sub
mov
imul
mov
out
pop
pop
fcomip
cltd
push
dec
into
js
loope
xchg
push
frstor
sub
dec
pop
into
lret
pop
inc
cmp
adc
jnp
or
mov
clc
cmp
sbb
pop
aad
mov
pusha
jnp
pop
or
adc
jae
loopne
adc
sbb
sbb
cmpsl
cmp
jae
xor
lods
or
testl
shll
xor
dec
adc
xchg
lea
xchg
dec
pop
test
sub
add
insl
pusha
cld
or
sar
mov
in
out
ds
mov
or
mov
jmp
xchg
lcall
mov
fdivrl
outsb
insb
pop
ds
xor
pop
adc
jecxz
inc
cmp
data16
xor
xchg
sub
push
push
push
jns
adcl
dec
lret
adc
adc
mov
fldenv
jnp
sbb
push
xchg
or
nop
inc
xor
iret
or
imul
cwtl
mov
jle
jb
aad
mov
sub
xor
icebp
call
xchg
mov
insl
mov
leave
inc
mov
in
and
dec
repz
test
push
pop
fcomps
lods
pushf
stc
jge
jle
pop
pop
mov
outsl
nop
mov
or
daa
repz
insl
add
mov
rol
popa
leave
pop
ffree
or
stos
mov
jl
pop
pop
imul
xchg
jg
mov
mov
int
jno
jmp
lds
fdivr
xlat
loopne
aam
or
arpl
out
push
sub
and
sahf
cmc
sti
dec
int
mov
fbstp
xchg
icebp
xchg
testb
movsb
test
push
mov
mov
mov
ljmp
ss
push
mov
mov
pcmpgtb
mov
jmp
jecxz
push
cmp
or
and
jl
mov
inc
inc
push
sbb
and
scas
inc
mov
xchg
lods
adc
and
lods
push
pop
jns
or
pop
push
sbb
test
loopne
fs
dec
inc
inc
sbb
dec
ret
gs
es
clc
shll
or
and
outsl
scas
jno
pop
es
lock
lods
mov
push
loopne
or
rol
mov
mov
jge
lcall
aad
icebp
or
pushf
dec
or
push
mov
loopne
imul
pop
mov
js
icebp
sub
push
daa
test
call
pop
fisubrl
stos
arpl
pop
xchg
fimuls
popf
or
push
dec
or
sbb
icebp
mov
insl
mov
mov
push
push
xor
cmp
or
xchg
fstps
mov
push
push
scas
clc
fdivp
gs
or
sbb
insb
sub
adc
jb
shrb
ja
je
mov
xchg
sub
rclb
or
pop
push
push
or
cmp
into
lock
scas
gs
bound
rcrl
mov
or
cmp
data16
out
nop
mov
and
mov
subb
xchg
aaa
mov
enter
sub
and
or
mov
lds
ret
add
cwtl
xor
xchg
or
push
sti
pop
in
test
jmp
push
add
or
dec
push
test
mull
les
test
fistps
pop
cltd
and
shrl
push
movsb
mov
and
xchg
jecxz
or
jb
lock
or
or
mov
arpl
sub
cld
outsl
in
sub
lods
xchg
xchg
push
imul
or
movsb
mov
or
mov
inc
sbb
xchg
mov
shlb
push
movb
add
mov
xchg
rclb
sub
adc
xchg
pusha
outsl
pop
mov
out
and
lcall
sbb
in
pop
pusha
cli
je
dec
pop
dec
in
mov
or
dec
lds
sbb
movl
ffree
push
scas
sub
popf
js
mov
and
push
addr16
cmp
pusha
imul
sbb
sbb
ljmp
outsl
adc
mov
fstps
out
es
mov
mov
push
sub
lock
lahf
repnz
cmp
pushf
test
repz
xlat
inc
xchg
adc
jecxz
xchg
cltd
cmpsl
push
testb
or
test
xchg
sub
rcrl
dec
pop
push
push
shrb
pop
inc
push
pushf
mov
push
jne
adc
and
shl
mov
dec
pop
jae
push
dec
outsl
jg
daa
mov
int3
in
hlt
cld
cmp
push
mov
repnz
scas
pop
rcll
cmp
mov
shrb
rorl
xchg
mov
xchg
outsl
push
xor
insl
push
lea
pushf
mov
sahf
jb
lret
in
pop
add
mov
and
icebp
mov
pop
pushl
pop
outsb
je
and
mov
testl
push
loopne
cmp
out
pop
inc
push
inc
mov
and
mov
mov
mov
mov
loopne
pusha
push
pop
sub
jecxz
xor
mov
sbb
jno
xlat
std
ret
adc
add
fdivrp
mov
rcrb
stos
aad
push
mov
fistpll
pushl
mov
jnp
inc
ret
lock
xor
out
sti
incl
sbb
pop
dec
sbb
aad
cli
mov
cwtl
orl
inc
adc
and
and
cmc
add
popa
fildll
push
into
rclb
pop
jge
addr16
dec
stc
push
ds
add
mov
lock
mov
cmpsl
push
xor
pop
fsubs
add
mov
and
mov
shrb
popf
xchg
or
ja
mov
cwtl
std
test
lds
les
das
mov
in
cmpb
sbb
dec
adc
mov
ljmp
mov
rcrl
xchg
jmp
push
xchg
add
test
outsl
hlt
or
jecxz
push
imul
jo
stc
or
mov
arpl
roll
pop
test
add
cltd
lahf
loop
mov
mov
nop
jp
ret
stc
push
jno
out
mov
xchg
cmp
pop
lods
sarb
jg
scas
jns
leave
and
lahf
in
aaa
jo
xchg
fisttps
xchg
repnz
lods
sub
mov
dec
ja
mov
shll
mov
jb
sbb
imul
sub
flds
int3
in
fwait
out
loopne
cmc
push
arpl
icebp
mov
xor
out
inc
mov
pusha
jmp
mov
shr
data16
cmp
lret
aas
cwtl
or
mov
mov
pop
repnz
pop
popa
jns
jnp
push
insw
mov
fistps
out
test
inc
in
pop
scas
mov
jnp
mov
jbe
cmp
add
dec
xor
int3
test
mov
test
movsl
pop
push
adcl
mov
inc
fsts
pop
test
outsb
in
push
gs
lds
lcall
data16
mov
inc
jbe
pop
cmc
mov
add
inc
sarl
aaa
xchg
arpl
ljmp
dec
outsl
inc
pop
stc
popa
cmp
mov
mov
movsl
jp
test
mov
inc
stos
mov
xor
cli
lods
ret
ss
out
cs
jp
adc
ljmp
and
mov
insb
lods
cmpsb
cmc
fwait
test
add
cltd
sub
or
mov
or
bound
or
push
jl
push
std
fdivrs
sbb
roll
out
push
adc
inc
cmpsl
fcmovb
inc
sbb
xchg
jge
mov
add
cmpsl
lret
lds
sahf
mov
mov
dec
jb
dec
or
inc
adc
cli
sbb
sub
insb
sub
push
fwait
pop
jge
jle
shll
and
aaa
ds
or
push
scas
ret
insl
pop
cmp
jecxz
mov
into
mov
pop
rorb
sub
jno
int3
jbe
stos
jns
lret
jl
movsb
inc
push
pop
jnp
aam
data16
lods
imul
cld
cmp
lea
iret
jge
push
jne
gs
push
xor
sub
ds
cmp
pop
pop
jp
mov
cmp
jne
std
aad
or
inc
stc
dec
imul
push
cld
mov
dec
je
mov
push
outsl
push
fdivrs
sub
adc
add
nop
or
es
fbld
inc
insl
dec
lock
push
jge
push
sub
add
push
mov
mov
mov
push
lods
push
rorb
pop
mov
pop
dec
push
cmp
shlb
aam
pop
mov
stos
jle
dec
xlat
dec
adc
scas
push
movsb
jl
sbb
mov
pop
in
out
stos
lods
cmp
shlb
jb
pop
scas
es
out
fstps
out
add
mov
imul
pop
adc
ds
jmp
xchg
ret
sub
cltd
outsb
sub
fildll
mov
pop
xchg
inc
jmp
mov
pop
movsb
and
imul
out
insl
sbb
mov
out
mov
xchg
fs
pop
mov
data16
aad
inc
movsb
daa
imul
outsl
or
cmp
cmpsb
in
add
les
in
mov
mov
jg
lahf
mov
lods
or
sbb
fdivrl
mov
and
sahf
cmpsb
mov
add
not
xor
mov
jmp
popa
out
pusha
adc
sbb
xorb
ja
mov
mov
mov
push
inc
push
adc
sbb
adc
and
push
push
shl
push
int
cmpsl
shlb
enter
popa
rcl
dec
dec
data16
pop
fs
insl
fstps
loope
aaa
mov
ret
hlt
fcoms
dec
sti
clc
mov
adcb
xorb
push
or
sahf
lods
xchg
adc
xor
and
sarl
or
add
xor
jnp
xor
lahf
cltd
lcall
jnp
js
sti
mov
push
out
dec
into
in
cmp
push
jl
call
push
or
out
mov
ja
icebp
and
pop
loopne
mov
pusha
mov
mov
fs
pop
mov
sub
adc
pop
je
jg
sbb
cmp
and
or
cmp
jmp
enter
and
cmp
adc
jne
fadd
dec
loop
cmp
imul
sub
mov
push
pop
and
mov
sbb
fdivl
movsl
lret
repz
test
push
sub
push
mov
lds
loopne
and
and
push
adc
mov
loop
outsb
xchg
das
xchg
jmp
pop
loop
mov
jl
push
add
pop
add
pop
add
xor
or
mull
adc
cmc
negb
mov
pop
cmp
add
insb
push
xchg
mov
iret
imul
cltd
push
or
rorl
lahf
push
and
adc
hlt
pop
cld
ja
sbb
divl
inc
mov
subl
lcall
xor
popa
imul
and
add
mov
mov
adcb
lea
movsl
js
cmp
pop
or
pop
sbb
dec
lret
call
xor
out
jo
iret
sub
insl
enter
sub
call
insb
pop
cmp
mov
pop
push
mov
arpl
aad
stos
rcrl
sub
je
push
mov
aad
xchg
add
popa
adc
js
cwtl
fisubs
mov
inc
insl
hlt
mov
push
das
sbb
ja
mov
and
imul
xor
arpl
or
lds
xor
fidivl
js
cmp
add
jl
pop
xchg
adc
out
xchg
pop
xchg
out
push
test
push
pop
in
cmp
int
jns
in
add
mov
xor
out
outsb
imul
cmp
lret
push
ja
je
hlt
loope
sbb
xchg
popa
fwait
push
in
pop
lea
mov
ja
out
iret
sub
pushf
iret
sbb
dec
xchg
push
les
testb
arpl
pop
jmp
pop
sub
outsb
testb
xchg
mov
and
js
shld
sarb
jge
in
cmp
je
test
jge
cmp
or
ret
outsb
ja
lret
jns
mov
pop
popf
xor
jo
or
pop
xor
xchg
lcall
test
out
and
cmp
push
dec
dec
inc
sub
stc
sbb
xchg
and
in
push
inc
dec
outsl
and
mov
popa
add
mov
cmp
ror
jecxz
mov
sub
pop
sub
and
cmp
push
mov
inc
out
push
stos
in
xorl
cwtl
dec
in
pop
fistpll
ja
cld
cld
rcr
mov
aaa
enter
jo
inc
andl
push
stc
cmp
lods
sbb
adc
iret
inc
xor
ret
rorb
insb
orb
push
sahf
ja
or
arpl
xchg
jb
jp
fisubrs
and
push
ss
inc
shrb
xchg
shrb
iret
loope
popa
lods
fsubr
and
scas
jmp
lcall
popa
js
and
sub
aad
nop
sbb
sahf
subb
out
and
ljmp
push
mov
cmp
nop
fnstcw
popa
add
lods
inc
jne
adc
mov
popf
mov
adc
push
loop
cmp
stos
adc
add
nop
insl
cs
adc
xor
adc
mov
int3
cmpsl
and
lret
mov
hlt
sbb
mov
hlt
mov
insl
lock
pop
pusha
inc
cmpsl
push
outsl
movsl
push
leave
sbb
and
loop
daa
ljmp
xor
movsl
cmp
cmp
nop
out
sub
lret
mov
pusha
mov
inc
sub
sbb
call
in
adc
lcall
and
and
pop
add
pop
pop
lret
fmull
mov
inc
sub
jmp
fsts
mov
mov
sub
daa
nop
pop
movsb
mov
or
jle
cld
jg
dec
pop
hlt
lcall
dec
cli
cld
in
inc
or
mov
arpl
outsl
aas
dec
pop
iret
fstpt
outsb
xchg
pop
fnsave
and
and
cmp
mov
dec
fcomps
sti
and
movsl
imul
xchg
add
repnz
std
aas
xor
les
push
push
push
mov
pop
cmp
dec
add
jbe
lahf
sub
mov
adc
pushf
arpl
xor
enter
mov
inc
and
lods
test
enter
xor
mov
popf
cmpsb
or
xor
sbb
insb
aad
negl
xor
push
mov
fiaddl
or
icebp
loopne
mov
adc
sub
lock
outsb
and
popa
push
mov
push
pop
imul
adc
cmp
pop
inc
sbb
push
pop
jnp
cwtl
lods
mov
sbb
jl
jg
inc
sub
add
add
std
or
add
mov
loopne
mov
adc
aaa
sar
sahf
mov
loop
lds
ret
out
fadd
mov
les
mov
pop
fisttpl
fnsave
inc
test
inc
arpl
imul
pop
repz
shlb
jb
jae
mov
fisubrs
lock
push
subl
jecxz
push
jle
xchg
cmp
stc
or
jmp
push
xchg
nop
mov
icebp
inc
ret
iret
add
push
push
inc
cmp
dec
daa
fwait
sub
pusha
and
pop
les
add
pop
push
fisttpl
sti
xchg
sbb
xchg
sub
out
adc
cwtl
lret
das
les
ja
jnp
pop
add
inc
popf
jo
int
pop
in
dec
mov
mov
out
adc
out
subl
fwait
jecxz
xor
and
add
cmp
mov
js
fisubs
mov
mov
lret
adc
sahf
push
cltd
mov
or
inc
in
icebp
xchg
rcrl
mov
sbb
loope
data16
fneni(8087
daa
mov
add
and
int
sbb
clc
mov
dec
jno
test
outsl
cmpsl
push
popf
jle
test
insb
negb
pusha
or
xor
inc
pop
test
sub
mov
push
mov
sbb
rcll
and
repz
mov
lods
lea
jp
test
adc
repnz
popf
out
fwait
and
and
mov
leave
out
pop
push
jl
aam
adc
mov
xchg
movsl
jae
call
popf
or
push
cmp
pop
adc
xor
sti
enter
inc
inc
push
scas
and
adc
sbb
lret
fstpt
lahf
jne
inc
mov
xor
add
dec
cli
les
in
lret
add
xor
enter
je
out
repnz
jno
mov
jne
daa
outsl
lret
ss
push
push
aaa
sub
mov
jns
mov
es
pop
je
xor
adc
cli
lods
arpl
push
jg
add
dec
sbbb
jecxz
pop
bound
xchg
ds
jecxz
fs
add
test
lret
adc
push
dec
addr16
dec
int3
add
mov
sbb
sete
enter
sub
sbb
jb
dec
and
insl
mov
pushf
push
fisttpll
test
sbb
mov
add
lret
cmp
mov
pop
sbb
adc
xlat
outsb
and
inc
mov
lea
enter
aam
add
movsb
mov
mov
outsb
xchg
repz
idivl
xor
xchg
imul
in
cmp
add
jb
rcrb
add
sahf
cmp
mov
in
sbb
jecxz
push
lods
lret
mov
push
adc
or
push
mov
addr16
nop
mov
ja
mov
inc
xchg
jne
mov
rolb
push
fs
mov
pop
int
xlat
pop
stc
xchg
xor
sbbl
popa
popa
xor
or
movb
mov
push
dec
aas
mov
add
ss
aad
adc
sahf
fldl
pop
call
jno
fstl
scas
inc
testl
ds
je
inc
popf
test
movsl
cmpsb
pop
jp
int3
aaa
out
in
mov
dec
xor
dec
sub
call
mov
sub
ljmp
sahf
lret
cmc
cwtl
sbbl
cmp
inc
pop
pop
sub
push
jmp
shrl
nop
xchg
and
notl
ljmp
xchg
cwtl
dec
movsb
ret
mov
data16
xor
enter
and
pop
outsl
sub
jb
roll
hlt
dec
or
dec
lods
test
push
or
std
xchg
dec
pop
lods
data16
or
dec
mov
lret
push
scas
notb
cmp
ljmp
mov
testl
dec
lock
push
push
or
inc
mov
xchg
inc
daa
in
adc
or
jge,pn
imul
ret
mov
sbb
inc
sub
rolb
cli
and
sbb
bound
jne
mov
xor
nop
sahf
stc
mov
daa
sub
stc
mov
mov
jne
xor
fisubs
push
and
sbb
add
xlat
xchg
cltd
sub
mov
sar
mov
int3
xchg
leave
popa
popl
cmp
mov
sti
scas
xor
pop
movb
dec
xchg
test
jo
loopne
lock
outsb
cmp
mov
jae
or
sub
cmp
out
sbb
enter
addr16
cmpsl
ficomps
in
and
xor
xchg
fdivrl
dec
inc
xor
inc
fs
mov
faddl
stos
xchg
pop
pop
aaa
mov
aas
sbb
popa
loope
xchg
cmp
jns
cwtl
inc
inc
sub
test
xchg
and
push
push
int
dec
shll
push
push
cli
lds
leave
popa
xor
push
stos
lahf
mov
dec
lret
iret
sbb
out
stc
in
int3
mov
dec
xchg
dec
adc
mov
mov
jle
sbb
popf
mov
test
not
in
mov
dec
fists
pop
sbb
jge
sbb
js
or
cmp
leave
xchg
mov
mov
insl
sub
adcl
push
inc
or
pop
or
movsl
fnstenv
enter
xor
sahf
push
leave
or
xchg
mov
hlt
into
or
push
inc
fildll
pop
mov
subl
inc
jno
lcall
int
and
xor
xchg
filds
jge
and
jg
cwtl
int3
fsubrp
fstps
ret
in
jne
inc
xor
insb
xchg
imul
adc
icebp
rcl
inc
pop
pop
aaa
imul
xchg
dec
dec
pop
xor
cmp
mov
enter
adc
stos
cmp
inc
pop
loope
test
repnz
fcoms
clc
and
cltd
mov
xchg
jg
cmpl
fs
or
adc
icebp
cmp
cli
mov
mov
pop
out
add
push
ss
cltd
or
jecxz
push
xchg
sub
push
popa
into
adc
jnp
and
ficoml
mov
push
cmp
sub
jnp
push
imul
mov
mov
mov
jp
sar
add
cmp
aam
fdiv
xchg
or
mov
push
daa
sub
out
fdivrl
jp
addr16
inc
mov
xchg
and
mov
jge
jnp
ljmp
lcall
xchg
mov
add
shld
mov
sub
sar
ljmp
mov
dec
sub
lcall
lret
mov
xor
sbb
mov
int
pop
lret
cmpsb
cwtl
xchg
test
js
mov
add
sarb
shrl
add
sub
push
dec
out
lods
cmp
sub
cmp
push
movsl
mov
and
mov
inc
pop
mull
iret
fwait
mov
test
sub
or
push
ret
aaa
test
int3
ja
les
cmpb
lahf
cld
test
shl
pop
inc
ja
xchg
mov
sbb
cmp
aas
fsubr
sbb
mov
jo
or
push
xchg
jbe
imul
ljmp
repnz
xor
and
push
loope
in
inc
and
and
dec
and
test
or
outsb
repz
pop
add
dec
cwtl
ljmp
add
aam
sbb
out
cmp
ljmp
mov
cld
mov
test
adc
in
jle
cmpsl
frstor
adc
out
add
mov
push
cmp
push
adc
rdtsc
inc
mov
fbld
imul
xchg
inc
dec
xor
mov
dec
pop
xchg
dec
sbb
inc
jp
iret
hlt
insb
inc
or
cmp
jne
rolb
and
movsb
aas
incl
adc
xor
rcl
test
div
es
dec
xor
aad
dec
xchg
pop
imul
xor
xchg
test
ja
mov
insb
jo
js
mov
adc
imul
xor
fisubrl
cs
mov
scas
mov
pop
fdivrl
and
jae
lock
shl
test
pop
dec
cmpsb
cli
inc
adc
mov
ret
mov
inc
cmp
sbb
jle
add
les
movb
jmp
clc
hlt
adc
xor
push
cmp
lret
xchg
lret
mov
in
add
shll
xchg
mul
ss
jmp
and
xorb
jbe
xchg
pop
fsts
or
push
cmp
mov
subps
jl
pop
inc
scas
adc
jg
decb
outsl
test
cmpsb
lods
daa
fmull
sub
lret
arpl
cmp
mov
andb
or
mov
and
xor
mov
push
call
sbbl
mov
stos
inc
jg
inc
test
mov
pop
jb
cmc
idivl
test
out
pop
jecxz
daa
pop
cmpsb
nop
movb
shlb
mov
int3
dec
mov
addr16
shlb
mov
sub
pusha
jb
cmp
cmp
lret
fwait
sub
adc
ficomps
in
jmp
je
push
adc
ds
mov
mul
mov
pop
imul
sub
fsts
sub
sbb
xor
cld
popf
mov
pop
clc
jae
adc
sub
mov
fldl
rcrl
or
xchg
mov
mov
shlb
xor
mov
adc
aaa
icebp
enter
pop
lods
cmp
mov
lea
add
mov
mov
ret
loope
pusha
push
add
xor
sbbb
sub
add
jns
push
in
mov
pushf
push
stos
jge
lods
push
scas
dec
es
adc
nop
inc
fucomi
into
add
ljmp
and
cmp
cmc
inc
push
or
sbb
ret
mov
scas
test
pop
or
mov
frstor
mov
rcl
stc
cmp
in
adc
jae
mov
add
add
ret
mov
shlb
repz
rcrl
sub
or
js
add
push
xor
mov
jno
add
xchg
cmpsw
push
xchg
clc
jns
add
lds
sub
and
xor
test
daa
push
xchg
in
and
xchg
flds
aad
imul
inc
cmc
cli
xchg
outsb
mov
addr16
or
popl
fistpl
sub
jle
or
das
mov
mov
or
fwait
popa
leave
dec
outsb
sbb
lea
mov
fcmove
or
mov
cmp
hlt
fwait
shll
cmpsl
leave
fnsave
int3
pop
hlt
popf
cmp
pop
jnp
mov
push
adc
pop
leave
push
mov
sbb
pop
pop
stos
pop
lds
popf
fiaddl
add
repz
repz
mov
xlat
test
and
xor
cmpsb
or
add
cmp
psubsb
ljmp
jl
outsl
fildl
inc
arpl
fs
and
mov
ret
and
cmpsb
scas
mov
sbb
mov
xchg
dec
mov
add
pushf
inc
dec
out
and
aad
fucomi
jl
or
call
fdivrs
push
fidivl
data16
mov
lcall
adc
aam
add
dec
lahf
adcl
mov
daa
add
xchg
pop
jecxz
lock
fidivrl
push
into
mov
out
push
stos
ret
sub
mov
mov
and
js
pop
ficoms
aad
push
xor
dec
sbb
mov
xor
push
sbb
ret
jae
cmc
pop
fdiv
xchg
cld
ret
cld
out
aas
and
shll
dec
mov
pop
or
dec
addl
xchg
mov
xor
fiaddl
cmp
int
jecxz
inc
add
mov
mov
scas
cltd
shlb
mov
jno
pop
jp
add
pop
movsb
dec
or
cmp
jnp
xchg
cltd
dec
shl
xchg
xchg
dec
jnp
xor
cmp
aas
test
aam
cld
arpl
jmp
outsl
mov
mov
test
adc
push
subl
jne
outsl
imul
push
popa
and
sbb
xor
inc
test
push
mov
xchg
stos
dec
push
jg
or
sbb
ja
mov
imul
cmp
in
push
fwait
mov
pushf
push
push
xchg
leave
in
xor
ret
div
rorb
sbb
mov
out
rorb
imul
push
out
pop
and
jle
std
jnp
push
in
jne
add
mov
in
loope
mov
js
into
fdivp
lahf
mov
movsb
cmpsb
outsl
ss
ljmp
adc
js
addl
mov
push
into
out
jnp
subb
or
xor
inc
mov
ss
xchg
sub
xchg
sbb
cmpl
dec
cwtl
lods
daa
dec
push
xor
pop
cmp
lahf
jmp
call
mov
mov
dec
imul
adc
mov
test
arpl
dec
movsb
xor
mov
shl
pushf
pop
cmp
dec
and
repz
mov
bnd
mov
push
jbe
mov
ljmp
sbb
cld
popa
movsb
cmp
bound
jg
aam
divb
out
dec
mov
js
sbb
decl
test
xchg
or
lahf
rclb
loope
leave
lods
out
jbe
jbe
xchg
mov
test
adc
popf
adc
push
sbb
fnstenv
daa
dec
pop
cmc
test
add
inc
rcrl
push
cmp
push
ja
mov
imul
fwait
jmp
fisttpll
push
ja
adc
std
cmpsl
nop
push
add
in
xchg
jb
dec
in
jge
cltd
dec
jmp
ljmp
outsb
xchg
cmp
and
es
fdiv
pop
test
sub
jb
cmp
xchg
mov
repnz
testl
inc
pop
mov
mov
aaa
xor
and
fdivrl
push
push
add
sbbb
cmp
shlb
xlat
adc
pop
xchg
out
xchg
mov
into
popf
mov
pop
adc
jne
iret
popf
add
xor
aam
mov
cld
or
and
lock
mov
aam
ss
mov
push
cs
mov
into
jp
lret
mov
sub
mov
dec
push
or
sub
pop
and
mov
roll
add
in
fistps
mov
popf
jno
adc
rcrb
cli
repnz
inc
inc
fisttps
mov
repnz
idivl
dec
out
cmpsb
sub
fcmovnu
out
pushf
mov
mov
pop
xlat
dec
mov
aas
xchg
jnp
outsl
fisubl
lret
pop
faddl
call
js
cmp
clc
push
idivl
lcall
adc
and
mov
mov
xchg
pusha
insb
mov
and
xor
add
or
in
push
jbe
movsb
loop
decl
cwtl
adc
lods
mov
cmp
add
pop
cmpsl
jmp
push
mov
jp
xor
jno
dec
inc
and
sub
ss
loopne
popa
xchg
inc
sahf
sub
sub
or
incl
ljmp
push
and
cli
pop
pusha
and
in
xchg
ljmp
movaps
repnz
or
dec
ja
xchg
mov
mov
cmp
add
jbe
cmp
cmp
repz
les
fsub
mov
cmp
dec
lock
jnp
mov
cltd
xor
xchg
icebp
sbbb
cmp
pop
mov
repnz
mov
fistpl
adc
rolb
rorl
push
outsl
addr16
pop
xchg
push
pusha
jg
pop
scas
inc
xchg
int
inc
cs
addr16
cld
sub
push
inc
mov
testl
rcl
aam
mov
inc
xchg
pop
outsb
push
sub
in
stos
cmp
mov
ljmp
mov
and
fcomp
push
lret
dec
or
movb
testl
jns
arpl
sbb
add
lahf
ret
jo
icebp
outsl
shrl
ds
popf
inc
popf
jge
sbb
test
and
insb
inc
in
or
aad
jecxz
test
pop
push
mov
inc
jg
in
push
lcallw
pop
or
jecxz
sbb
insb
out
shl
sbb
mov
sub
add
xchg
flds
sahf
cmc
ja
iret
fsubrl
mov
jb
js
pop
mov
ret
scas
les
lret
dec
push
out
xor
and
test
push
dec
sbb
popf
dec
fildl
sti
inc
cmp
xor
es
adc
pop
loopne
addr16
pop
ljmp
loopne
cmp
clc
sarl
sarl
mov
in
xor
ss
je
imul
cli
sub
push
rcrb
adc
adc
mov
push
jmp
pop
ds
pop
fiaddl
popa
scas
jno
mov
pop
in
int
jo
xchg
add
push
loopne
mov
mov
je
pusha
inc
mov
lods
pop
xorb
fs
mov
dec
testb
xor
movsl
xlat
imul
arpl
jmp
or
xchg
shrl
and
js
xchg
fwait
push
fsubrs
or
out
clc
xchg
mov
xchg
adc
into
shll
push
dec
ja
and
dec
daa
ljmp
aam
fldt
jle
xchg
js
push
fimull
mov
xchg
outsb
repnz
push
or
in
icebp
cld
or
jmp
fmull
sub
fcomps
and
mov
ret
jns
dec
les
and
jb
jo
je
into
adc
inc
mov
lret
pushf
mov
xor
call
and
test
inc
enter
push
xor
inc
test
sbb
cmp
mov
jmp
push
and
lea
into
cmp
hlt
jmp
stc
cmp
lds
lock
ljmp
mov
enter
shl
dec
jecxz
repnz
mov
ret
cmp
ret
std
shrb
xorl
and
adc
sbb
jnp
inc
pop
jne
ds
lea
aad
aas
mov
cmpsl
xlat
lds
fwait
xchg
loop
adc
jns
jg
daa
mov
pop
movsb
add
addr16
dec
ret
jae
sbb
mov
pop
adc
or
sbb
es
xchg
dec
stc
add
in
jae
adc
leave
call
or
sub
gs
outsb
dec
jp
mov
inc
shll
adc
dec
adc
cmpsl
divl
cmp
sub
sahf
sbb
fstpt
stc
push
push
enter
dec
push
inc
sub
cmpsb
xor
js
mov
xchg
push
mov
roll
or
cmp
fnsave
insb
stos
mov
call
mov
sarl
jg
mov
dec
xor
incb
enter
jge
out
addr16
cmp
enter
dec
addr16
aaa
rolb
sarl
movsb
pushf
filds
push
sub
fdivs
addb
aam
in
or
dec
fldenv
out
in
pushf
push
adc
mov
sti
push
loop
dec
insb
hlt
ljmp
fcompl
out
xor
and
mov
mov
stos
scas
sub
xor
in
xchg
jge
pop
out
pop
lea
and
pop
lods
dec
sbb
lret
and
add
sahf
insb
mov
test
loop
pop
ljmp
xchg
adc
fdivs
sub
sub
test
icebp
add
stos
dec
adc
xchg
sub
stos
sbb
out
mov
add
fiaddl
jb
push
mov
push
mov
cwtl
cmpsb
lods
out
mov
outsl
and
mov
xor
mov
nop
add
fnsave
xlat
push
xchg
fldcw
xor
dec
xchg
lret
imul
xor
repz
scas
xor
mov
mov
pop
cmp
pop
icebp
ljmp
sub
jp
out
mov
shll
add
movsl
clc
lret
popf
shrl
push
imul
ret
sub
xor
rorl
imul
out
inc
cltd
mov
add
sub
test
loop
inc
adc
xor
arpl
or
aaa
mov
loop
or
loop
faddl
mov
ljmp
pop
mov
icebp
enter
cmp
mov
xor
pop
imul
add
sbb
cmp
dec
jle
js
popf
ss
lea
mov
adc
mov
and
int3
insb
pop
pop
rol
stos
inc
rolb
mov
ja
cli
js
and
push
cmp
cmpsl
dec
fldcw
jne
adc
stc
or
mov
sbb
mov
cmpsb
mov
mov
lret
inc
in
mov
repz
shlb
mov
stc
sub
push
jecxz
mov
push
imul
addb
pop
jmp
dec
fadd
stc
push
out
sbb
jp
scas
mov
adc
pop
cltd
ror
imul
jbe
or
push
mov
nop
xchg
int
bound
xor
xchg
test
ud2
push
aam
dec
mov
lahf
call
xor
mov
lds
jb
test
lods
cmp
cmc
xchg
jnp
lock
jmp
out
sub
jo
adc
xor
jmp
push
scas
inc
cmc
dec
mov
stc
sub
ss
pop
repz
fwait
cmp
cmp
mov
stc
sub
aaa
stos
fs
loopne
test
lods
outsb
fsts
mov
fbld
lahf
jg
sbb
jmp
xchg
adc
out
out
out
sub
in
sti
in
cmpsl
jp
lds
je
shll
push
push
in
sub
pop
and
pop
dec
adc
jp
daa
jae
out
sbb
ss
sub
xor
pop
push
xor
cmp
movsb
ret
cltd
mov
dec
add
sub
call
mov
aad
jb
nop
mov
xchg
pop
ret
inc
fdivs
shlb
mov
lds
fstpt
gs
out
mov
cs
hlt
test
adc
dec
xor
mov
in
lahf
daa
add
in
push
mov
imull
pop
adc
xchg
pop
xor
imul
pop
mov
dec
mov
roll
pop
loop
rcrl
lahf
or
inc
pop
mov
movswl
mov
popf
or
inc
push
insb
sbb
pop
pop
mov
shll
adc
jne
int3
es
mov
or
mov
daa
mov
scas
jmp
test
cld
cld
and
adc
or
enter
mov
shrb
push
cld
inc
ljmp
push
mov
mov
jnp
lcall
or
pop
gs
ja
add
cltd
sbb
js
pop
sub
fisttpl
xchg
jg
adc
pusha
sbbb
xchg
test
sbb
or
and
jb
sub
pop
and
mov
loopne
lcall
xor
jmp
jns
in
add
jg
pop
push
lcall
insl
adc
xchg
or
adc
cmp
imul
je
mov
cld
hlt
sbb
test
aaa
stos
pusha
roll
mov
cmp
loope
imul
cmp
aas
pop
mov
cmc
ffreep
jbe,pt
pop
adc
dec
ret
xchg
nop
out
cmp
xor
dec
nop
pop
jbe
test
mov
inc
scas
or
push
add
leave
das
lods
cmp
mov
fisttpll
mov
das
xchg
push
ljmp
in
dec
pop
and
push
fisttpl
dec
outsb
bound
pop
push
ror
xchg
in
add
lds
mov
aaa
add
imul
loopne
push
mov
movsb
test
pop
jns
shll
pop
and
fstps
push
xchg
frstor
lods
pop
jmp
cltd
sbb
mov
stos
push
test
sub
or
outsb
arpl
pusha
adc
fsubrs
shl
and
xor
in
mov
jno
jns
test
push
mov
or
inc
mov
mov
scas
ret
jne
xchg
jns
push
jae
add
pop
arpl
xor
or
das
fcomps
je
push
push
lret
repnz
push
fimuls
mov
mov
jg
xchg
and
test
mov
sahf
xchg
out
xchg
mov
pop
sti
mov
mov
jb
popa
push
sbb
pop
paddw
dec
sahf
ret
outsl
sarl
inc
sbb
fsubr
xor
jb
ret
iret
add
hlt
push
inc
clc
xchg
adc
adc
adc
loopne
cmp
inc
adc
pop
enter
jno
jg
stc
jge
jns
movb
mull
lock
arpl
pop
mov
lret
add
xlat
xlat
cmp
mov
cmp
sbb
xchg
or
sub
inc
xor
mov
xor
and
or
cltd
and
out
mov
ficompl
out
movsl
in
fs
pop
aaa
mull
push
sbb
movsb
cwtl
or
push
mov
ret
and
jmp
adc
mov
in
cmp
ds
or
jle
cmc
sahf
xlat
sbb
xchg
sbb
imul
and
ds
pop
bound
out
ja
movsl
inc
iret
jge
sarb
ja
daa
fldt
cs
mov
lret
xchg
call
lret
jmp
xor
in
adc
mov
cmp
inc
dec
add
inc
loopne
sti
xchg
mov
adcl
mov
scas
xor
push
test
loopne
pop
sti
xchg
mov
hlt
pushf
lods
mulb
das
xchg
data16
xchg
lds
aaa
xor
or
inc
fisttps
or
fidivrs
inc
aaa
inc
mov
inc
lods
inc
out
nop
mov
pop
jle
shrb
xlat
aas
xchg
push
mov
sub
inc
sub
push
enter
and
pop
mov
test
aaa
xlat
mov
repnz
js
cltd
pop
and
fs
out
add
push
and
out
xor
mov
movsb
lret
pop
xor
adc
fiadds
int3
movsl
push
aad
psrad
xor
nopl
inc
clc
xchg
sbbb
repz
xor
sbb
repnz
lret
adc
data16
mov
pop
daa
arpl
push
cmp
mov
lods
fsubrl
push
ficompl
addr16
sahf
adc
stos
hlt
aaa
push
sub
xor
push
hlt
decl
pop
xchg
shlb
mov
insb
cmpsb
sbb
pusha
mov
or
jecxz
mov
adc
mov
in
add
dec
jbe
movsl
adc
mulb
in
ret
neg
fwait
divb
and
xchg
test
repz
or
adc
shufps
jnp
sbb
xchg
mov
and
mov
into
scas
push
sbb
sbb
xor
inc
adc
daa
enter
cmp
int
pop
dec
mov
push
in
jecxz
js
mov
dec
aad
adcl
out
mov
cmp
mov
inc
ljmp
pusha
mov
mov
or
ja
sahf
sti
in
rorl
jp
leave
lods
sub
or
lds
out
xchg
js
sbbb
pop
jmp
jecxz
imul
jmp
mov
or
adc
and
in
loopne
mov
mov
dec
in
xor
jno
lods
ficompl
pop
clc
dec
rcrb
daa
sbb
jnp
xor
add
test
dec
sub
jno
cmp
fcomp
mov
sbb
insl
jg
gs
add
inc
add
add
insb
mov
mov
xchg
fwait
dec
sub
ficoms
fbstp
mov
insb
push
shld
shll
test
lock
cmpsl
adc
mov
incb
dec
sub
aaa
jae
cmp
loop
xorb
xor
lret
inc
push
push
popa
aam
lods
das
xor
cmc
dec
cmp
roll
adc
jns
pop
imulb
add
mov
loope
daa
cmp
clc
in
stc
test
lock
mov
stos
cmp
inc
fwait
sbb
dec
xchg
ret
cs
xorb
enter
cld
lock
dec
mov
mov
orl
cmp
js
aam
adcl
icebp
and
shrb
cli
popa
inc
inc
sub
mov
jne
mov
and
and
or
lock
das
popa
cmp
sahf
xchg
push
repnz
jl
jl
sub
mov
sub
mov
pop
jae
rcll
les
mov
sbb
sbb
cli
ljmp
jbe
pusha
fcmove
pop
inc
push
cmp
fneni(8087
hlt
fmul
push
cs
mov
fwait
adc
lods
out
mov
mov
push
inc
sbb
hlt
mov
mov
loop
lret
mov
ljmp
stos
repnz
outsl
or
cltd
sti
dec
movswl
cmp
add
adc
into
xchg
test
mov
and
or
adc
loopne
int
sahf
lret
or
out
jbe
mov
inc
jo
repnz
or
cmpb
outsb
push
xchg
mov
es
cld
adc
and
push
and
mov
loopne
aas
xor
stos
sub
inc
scas
repz
sbb
mov
movsb
test
repnz
and
hlt
std
mov
scas
add
add
pop
jb
push
jns
pop
out
outsb
jle
nop
xchg
sahf
sbb
lock
leave
mov
mov
lods
imul
out
and
sub
lods
loopne
fnstenv
dec
fwait
sbb
xchg
sbb
mov
push
cli
and
xchg
hlt
sub
jl
add
sub
xchg
imulb
je
sti
or
add
cli
xchg
pop
jb
cli
bound
dec
jl
pop
xchg
push
sbb
movsb
xor
mov
stc
pop
push
adc
mov
out
inc
sbb
sub
jle
sub
test
push
cmp
mov
mov
outsl
and
mov
inc
orl
daa
xchg
in
icebp
and
and
jp
rorb
scas
or
decl
mov
push
push
das
xchg
test
jge
mov
sub
pop
cli
mov
jecxz
mov
data16
frstor
lahf
xor
xchg
fdivrp
adc
test
mov
xor
or
jae
mov
xchg
jne
push
xchg
mov
pop
pop
in
add
insb
sahf
add
bound
mov
jg
mov
dec
popf
adc
icebp
mov
bound
insb
xor
fwait
dec
lock
loope
loope
leave
fst
andl
inc
xor
mov
sti
cmp
inc
enter
mov
div
lret
fdiv
inc
xor
js
fcmovnbe
imul
cmpsb
mov
test
ja
leave
mov
xor
icebp
shld
pop
dec
and
or
mov
cmp
into
lea
pop
inc
movb
scas
mov
andb
divl
adc
outsl
insl
test
pop
hlt
mov
adc
lock
sub
enter
aaa
lds
sub
out
pop
sub
scas
and
xor
or
loop
sarl
les
jecxz
test
cmp
jecxz
inc
insl
cwtl
sub
jle
dec
cmpl
adc
add
mov
cmp
test
xor
dec
out
aaa
and
stos
pusha
pop
sub
mov
adc
xchg
push
das
adc
xlat
cmp
stos
clc
loopne
fld
xchg
outsl
pop
add
xor
or
mov
and
enter
fidivl
inc
mov
test
or
subb
xor
cmpl
cmpsb
outsb
push
shlb
call
inc
je
push
jns
aam
add
sbb
movsl
inc
fadds
push
mov
lahf
sbb
mov
scas
xchg
ds
outsb
adc
and
test
push
test
add
xor
repnz
jmp
jb
cmp
stos
or
mov
mov
dec
adc
inc
push
push
xchg
push
pop
cld
aas
addr16
push
mov
scas
jmp
dec
xchg
cwtl
sub
arpl
push
call
add
or
xchg
dec
in
mov
add
ja
dec
sti
jl
les
jno
lds
sub
data16
aaa
jge
pop
adc
jnp
push
adc
jle
sti
or
fnstcw
aad
sahf
lods
push
and
mov
mov
sti
dec
stc
mov
jno
cmp
js
adcb
aam
dec
addr16
cmp
aas
push
xchg
adc
or
fldenv
stos
adc
ret
xorl
mov
mov
dec
inc
sar
pop
icebp
dec
out
fdivs
cmpsl
adc
push
xorb
lds
inc
cmp
push
cmp
or
les
ljmpw
or
popf
xchg
mov
jmp
push
sbb
in
pop
or
mov
pop
dec
in
popf
mov
movsl
icebp
rorb
insl
push
int
repz
inc
cmp
push
and
xchg
mov
mov
daa
loope
sbb
jle
sbb
sbb
icebp
mov
inc
adc
fsubr
test
jns
ljmp
mov
aaa
jne
sbb
loopne
cmc
cwtl
xor
roll
lret
mov
das
mov
fidivs
das
xor
dec
movsl
dec
jl
lcall
lahf
outsb
repnz
movsb
ds
xlat
out
mov
scas
push
in
in
xchg
mov
iret
sub
jle
inc
jae
arpl
or
cmp
xchg
bound
jnp
icebp
repnz
jmp
jno
lock
test
cmp
cmc
sbb
into
jge
and
fsubp
insb
std
dec
ret
loope
daa
out
push
test
xor
les
pop
xlat
adc
jnp
ret
fmuls
nop
cmp
cmp
pop
push
out
scas
mov
mov
outsb
sub
testb
nop
rcll
or
jns
daa
push
cmp
cmpsl
inc
fs
jg
js
add
lahf
mov
and
inc
or
xchg
outsl
mov
ret
cvtps2pi
inc
js
pop
dec
sbb
dec
pop
mov
sbb
aam
fistpl
pop
or
jle
adc
xchg
xor
pop
fwait
xchg
push
add
mov
mov
test
lcall
ja
fwait
inc
pop
mov
inc
mov
jecxz
inc
mov
fsubrs
fcomi
out
out
ljmp
dec
xchg
or
cmp
cmp
push
into
xor
mov
push
xor
dec
adc
outsl
aad
inc
int
in
ss
cmpsb
add
push
fwait
incl
dec
push
dec
dec
fwait
xchg
sti
xor
jmp
add
and
mov
mov
pop
out
imul
out
insb
pop
push
pop
sub
jmp
rorb
xchg
mov
repz
popa
pop
clc
mov
arpl
lret
xlat
and
sub
pusha
sbb
sbb
call
pop
xchg
pop
adc
or
pop
out
jno
lcall
pop
cltd
aas
sub
std
mov
fiadds
cltd
mov
cli
mov
test
fstpl
inc
pop
push
jmp
xchg
je
repz
pop
movsb
xchg
xchg
loopne
mov
test
aam
sbb
imul
mov
sub
sub
enter
aam
mov
add
jo
lcall
loope
xchg
jno
xor
adcl
and
dec
lods
pop
sub
imul
push
out
clc
fwait
push
xor
pop
out
cmp
mov
in
js
rclb
fisubrs
mov
out
insb
pop
mov
cmp
sub
dec
xchg
imul
mov
outsb
adc
dec
xchg
nop
fdivs
jne
sbb
ljmp
sub
cltd
mov
push
push
mov
push
adc
xor
outsb
mov
inc
cmp
into
xchg
sbb
ljmp
jnp
xor
adc
aas
popf
or
mov
in
inc
or
cmp
std
mov
push
pop
sub
fs
clc
imul
cmpsb
dec
movsl
xorl
dec
repz
les
add
call
stos
pop
mov
leave
lret
pop
mov
mov
lret
cmp
dec
or
sub
push
add
push
mov
xor
push
xorl
lret
dec
test
mov
push
incb
lcall
lea
rol
sti
mov
add
cli
inc
and
xchg
push
xor
adc
js
lods
mov
aas
movsl
arpl
jns
pop
test
add
pop
push
dec
push
imulb
insl
xorb
hlt
xorb
inc
scas
repnz
mov
fstl
stos
mov
push
push
insb
mov
sbb
push
ror
mov
lret
addr16
clc
xchg
lods
fcoms
mov
iret
out
bnd
lgs
or
xchg
test
mov
cli
lret
andl
scas
lods
lahf
xor
out
mov
insl
movl
xchg
mov
and
cs
mov
sub
adc
pop
mov
jp
adc
rolb
and
jbe
cmc
bound
insb
mov
mov
xchg
mov
push
push
shlb
dec
cmp
mov
or
mov
mov
leave
aam
jmp
shll
cmp
and
mov
and
and
jl
leave
cmp
pushf
out
push
inc
jl
lods
lock
mulb
push
out
dec
and
in
mov
cwtl
jle
cmp
pop
insl
adc
aam
stos
or
adc
add
pop
cmpsl
lds
ljmp
add
mov
add
dec
mov
das
adc
andl
inc
sbb
jb
icebp
lea
lahf
sahf
repnz
pop
push
push
insb
push
pop
lock
mov
mov
popf
dec
fists
dec
jmp
mov
lcall
rorl
xchg
lods
inc
cmpsl
lahf
lahf
xor
loopne
cmp
fnstcw
mov
movsl
outsb
mov
ds
shr
rolb
adc
lret
lods
or
pop
cwtl
sub
or
mov
push
int3
lock
lds
or
lret
outsb
cmp
xor
inc
cmc
cmp
repz
and
xchg
inc
int
adc
sbb
cs
imul
stos
mov
sbb
dec
add
pop
cmpsl
js
push
xchg
imul
int3
dec
in
sub
incl
mov
mov
lods
inc
lods
mov
repnz
dec
add
insb
insl
loop
push
add
pusha
shlb
cmp
clc
inc
aas
addr16
add
jo
rclb
inc
es
dec
loope
sahf
das
or
inc
sbb
andb
pop
pop
ja
xor
and
shl
stos
mov
sbb
call
xor
fadds
mov
jbe
jmp
mov
popa
out
in
sub
cmp
xchg
popa
test
push
hlt
jge
mov
push
jns
test
mov
dec
jcxz
pusha
aaa
cmc
mov
mov
cmp
fyl2xp1
dec
inc
gs
cmp
lods
fdivrl
out
iret
xor
cmp
push
jo
xor
lret
das
aam
adc
adc
repz
cmp
test
jne
bound
ja
mov
in
pop
sub
cmp
in
mov
pop
cltd
and
dec
test
sti
xlat
das
out
add
sbb
aad
mov
add
jns
xor
xchg
mov
insl
xchg
jns
inc
jne
xor
in
lds
fstpt
inc
mov
repnz
xchg
jle
in
shl
leave
jno
lods
mov
xchg
loop
mov
ljmp
cmp
sti
lods
lahf
insl
iret
xor
and
sub
xchg
sti
orl
icebp
xlat
dec
call
jnp
cmpsl
imul
xor
sbb
lcall
loop
xchg
adc
in
sbb
sbbb
test
pop
jecxz
mov
hlt
loope
mov
lcall
mov
inc
arpl
idiv
sbb
fwait
out
ds
sub
push
dec
in
and
arpl
fstps
xor
lea
xor
xchg
and
dec
sub
pop
adc
jb
cmpsl
out
xchg
das
sti
pop
pop
mov
or
xlat
outsl
lret
lds
cmpsb
or
sbb
in
scas
push
in
mov
jnp
mov
jmp
comiss
addr16
mov
xchg
mov
xchg
sbb
adc
sti
mov
ds
jp
outsb
xchg
sub
movsl
mov
rcr
ficoms
ljmp
in
mov
add
stos
repnz
cmp
cmp
leave
adc
mov
pop
es
insb
sub
fiadds
cmp
clc
sub
test
and
mov
sbb
jmp
hlt
test
js
sub
aaa
push
mov
movsb
xchg
popf
int
push
jbe,pn
test
ds
shrl
test
xchg
mov
sub
stos
mov
popf
push
aad
pop
es
shrl
fwait
add
enter
ds
push
cli
jb
mov
push
inc
clc
rol
aaa
mov
xlat
pop
out
sub
inc
xchg
push
xchg
out
fisubrl
or
or
xor
push
xor
lret
adc
sub
pushf
sbb
leave
mov
inc
pusha
xchg
outsb
inc
dec
cmp
loop
popa
lods
mov
movsb
sbb
lret
data16
cmc
emms
xchg
cld
mov
jo
pop
inc
adc
xchg
lock
test
aad
push
mov
ret
insb
stos
jns
push
dec
fcomip
call
out
scas
js
dec
pop
pop
or
pop
and
mov
jmp
cmp
cmpsb
and
xchg
cmpsl
sbb
bound
sub
xor
mov
and
ds
adc
add
mov
xor
mov
mov
das
xor
pop
xchg
mov
or
fimuls
cmp
or
movsl
std
cmp
fwait
dec
lret
mov
stos
jge
and
and
int3
test
aam
rolb
arpl
dec
xor
or
xchg
ja
imul
pop
push
lahf
daa
or
jmp
ljmp
idivl
cmpsb
and
inc
sahf
mov
out
pushf
out
pop
ret
xor
sub
in
in
or
pop
mov
dec
imul
movsb
xlat
ljmp
leave
mov
out
cwtl
scas
xor
dec
jecxz
das
and
scas
fcoml
test
jg
sti
loope
bound
xor
scas
stos
cmp
iret
adcb
push
mov
bound
and
mov
xor
incb
fadd
or
add
jno
cmpsb
out
inc
mov
fiadds
int
repnz
mov
push
test
sbb
add
push
push
and
push
push
aaa
xor
cmp
aad
xchg
push
mov
push
imul
jbe
test
loope
and
jnp
add
loop
arpl
loopne
dec
sub
sbb
out
jae
in
mov
into
cs
stos
adc
pop
or
subl
scas
or
mov
adc
sbb
sbb
sub
xor
jnp
xchg
push
aad
movsb
or
push
pushf
jae
jns
movsl
or
cmp
mov
dec
sbb
mov
push
fmull
inc
sub
negl
fisttpl
mov
pop
movsb
pop
ss
push
dec
xchg
fdivs
test
pop
enter
shl
outsl
lret
icebp
jge
addb
cmp
add
scas
mov
outsb
jbe
xor
fldt
cmp
int3
mov
push
cmp
add
mov
in
cmc
aaa
test
cmp
aaa
aaa
pop
imul
pop
jle
in
test
int
mov
xchg
lods
dec
es
nop
sbb
out
in
and
popf
ss
mov
mov
pop
andl
add
or
mov
out
mov
jb
or
int
cmp
pop
enter
outsb
lds
in
mov
mov
pop
xchg
inc
adc
sbb
imul
scas
jle
pop
arpl
xchg
xlat
insb
adc
sbb
repz
fwait
xor
ljmp
push
dec
dec
sbb
pushf
dec
pop
jecxz
add
push
daa
push
push
sbb
xor
stos
rcr
jns
loopne
je
pusha
dec
fcoms
inc
add
and
sbbl
and
xchg
aad
sbb
adc
fldt
xorb
mov
inc
cmp
inc
add
sti
jge
and
sbb
fists
imull
shl
clc
movsl
mov
mov
push
or
fisubs
es
xchg
cmp
orb
fnstenv
pop
lret
pop
sbb
sub
outsb
sub
cmp
dec
mov
cli
pop
sbb
pusha
aam
mov
mov
imulb
and
cmp
je
leave
and
xor
lea
pusha
xchg
mov
mov
or
or
cmpb
or
jmp
adc
jmp
rcl
cmp
push
jl
cmc
dec
in
into
gs
imul
push
sbb
gs
mov
jle
adc
jb
xlat
sti
mov
pop
jno
arpl
ss
cmpsb
jge
xchg
rcl
mov
sti
sarb
enter
and
sub
fists
cmc
inc
and
lcall
roll
pop
xchg
inc
mov
shll
pop
xor
ret
mov
add
insb
mov
and
out
repz
xor
fs
cmp
cmp
dec
out
inc
shl
sbb
scas
mov
jl
test
std
shlb
gs
sbb
lcall
sbb
and
jl
xchg
xchg
shr
and
and
mov
inc
test
movsb
test
pop
je
dec
pop
out
sub
lret
jnp
aas
sbb
std
fld
mov
mov
mov
fs
xchg
lcall
jge
sbb
xor
push
mov
dec
fiadds
dec
mov
bound
mov
movsl
inc
jbe
adcb
andl
push
push
lea
xchg
data16
test
jg
mov
mov
sub
adc
enter
iret
pop
push
out
in
outsb
fstps
imul
lcall
add
lock
xor
filds
repnz
test
je
sahf
adc
in
xchg
lret
mov
add
insl
mov
mov
fwait
fs
jg
mov
mov
test
aas
lahf
inc
je
lock
sbbl
push
inc
mov
or
adc
dec
shrl
lret
es
out
dec
ret
sub
sahf
inc
or
xor
aaa
call
ror
imul
addl
jge
insl
jbe
idivb
sti
mov
subb
shrb
mov
arpl
pop
jnp
lods
aas
xchg
mov
data16
ficompl
mov
stos
lock
aaa
lods
inc
rorl
mov
pop
es
pop
data16
insb
jp
mov
xrelease
je
insb
orl
ss
mov
mov
aaa
jp
lock
sahf
cmp
or
pop
les
xor
in
cltd
dec
dec
jns
movsl
and
inc
cmp
push
jge
pop
jle
pop
sbb
cld
enter
dec
pop
mov
fidivrs
mov
xor
mov
jge
jb
rcrl
int
daa
mov
jmp
mov
lcall
jae
pushf
int
add
les
jne
jbe
test
stos
sbb
ret
cld
loope
stos
add
mov
js
sbb
xor
mov
faddp
mov
mov
js
mov
clc
xor
pop
or
jo
outsb
cmp
imul
imul
mov
fwait
push
lods
insb
sub
aam
stos
mov
push
add
mov
push
dec
clc
xchg
cmp
mov
loope
mov
jne
scas
js
xchg
aam
lods
adc
and
inc
sbb
mov
dec
popf
and
leave
es
xchg
sahf
dec
addb
and
int3
sub
repnz
lret
cmp
dec
sbb
push
sbb
xor
jmp
out
hlt
or
shrl
leave
testb
mov
ja
iret
pushf
aad
dec
iret
jbe
dec
jbe
outsb
fiaddl
mov
mov
pop
mov
sub
in
sbbl
inc
mov
clc
nop
pop
xchg
push
in
mov
adc
rcrl
inc
push
adc
sbb
xchg
add
push
add
xor
and
rcrb
dec
subb
jo
sbbb
mov
mov
mov
movsb
prefetchnta
cmp
int
outsb
loop
mov
loopne
dec
pmaxub
inc
and
sahf
imul
jmp
mov
sbb
pushf
int3
adc
jb
pop
pop
sbb
push
aam
dec
test
stos
sub
es
sbb
std
fdivp
iret
cmp
add
dec
aad
jne
out
adcl
pop
sbb
ror
pusha
scas
sbb
sbb
ja
movsl
fcmovnbe
xor
xchg
in
ret
push
adc
icebp
pop
adc
mov
cmpsl
mov
fildll
sti
xchg
roll
adc
sbb
sub
jnp
fsts
xchg
or
lret
push
jmp
xchg
push
xor
add
xorb
int3
and
pop
fidivs
fstps
scas
cmp
adc
xchg
mov
sti
sbb
adc
mov
sub
in
fidivrl
dec
cmp
or
out
cs
ficoml
ret
rolb
and
popf
test
imull
push
or
push
sub
and
cltd
sub
sub
mov
nop
mov
scas
enter
ret
pop
sbb
popa
std
xchg
pop
fisubrs
jecxz
subl
mov
ja
stos
pop
sub
xlat
mov
pop
enter
call
pushf
cmp
xchg
lods
or
push
aas
jmp
jle
lds
mov
mov
call
sbb
mov
adc
xchg
push
mov
adc
shlb
stos
fisubl
adc
sub
movsl
pop
shll
aaa
sub
inc
mov
mov
insb
dec
mov
dec
push
flds
in
add
mov
mov
cs
xacquire
xchg
test
and
lods
sbb
insl
mov
mov
push
mov
cwtl
mov
adc
mov
and
push
stc
testl
adc
imul
sarl
outsl
mov
lret
and
mov
daa
jl
or
sub
add
bound
jns
test
fstpt
shll
mov
fsubp
sbb
inc
push
aaa
je
popa
stos
ds
imul
inc
lock
rorb
dec
jmp
ret
iret
sub
sub
push
fdivrs
pop
mov
mov
add
cltd
push
orb
xor
je
fistpll
not
in
cmp
cmp
in
sbb
and
xor
pushf
add
in
mov
sbb
aam
push
pusha
push
push
lock
ss
xlat
leave
fbstp
dec
fimuls
mov
aam
adc
lahf
daa
jns
jp
xor
mov
call
lret
xchg
std
mov
daa
adc
test
cmpb
ret
cmp
mov
out
sbb
push
and
push
pop
push
dec
rclb
or
ja
cmc
and
dec
or
sahf
scas
aam
stos
mov
jle
loopne
push
lock
lret
stos
testb
pop
aaa
xchg
xorl
aas
movsb
sbb
inc
sub
stos
xchg
mov
jecxz
push
movl
lcall
and
xchg
mov
add
fsubs
and
fstps
mov
inc
add
imul
and
and
shlb
popa
outsl
add
mov
mov
xor
loop
or
jecxz
mov
out
xor
bound
dec
mov
outsb
sarb
loopne
out
mov
mov
inc
mov
push
pop
enter
mov
jne
ljmp
push
arpl
fstenv
iret
xchg
test
cmp
aad
push
push
fisubs
into
push
cbtw
mov
mov
sub
fs
pop
ror
pop
pop
xchg
ret
fs
pop
rclb
jp
adc
jbe
or
xor
sub
sysret
mov
pop
jns
adc
cmp
fsubs
les
fldenv
xor
mov
call
mov
loop
pop
pop
or
push
xor
outsl
scas
cld
outsb
xchg
adc
int
mov
push
cld
cli
mov
mov
aas
pusha
jg
mov
fxtract
push
mov
out
pop
push
mov
mov
sbb
adc
outsb
xchg
cmp
pop
xchg
cmpxchg
lret
mov
ret
push
mov
add
sahf
or
mov
mov
mov
mov
lods
cmp
pop
pop
xor
hlt
jmp
sub
lret
and
lods
jp
nop
mov
insl
daa
xchg
test
jg
xchg
ret
clc
mov
mov
push
dec
jb
dec
int
pop
push
and
dec
add
js
jo
adc
adc
arpl
dec
push
shll
mov
cs
adc
mov
sbb
xor
pop
sbb
popf
mov
inc
leave
mov
pop
or
push
xchg
push
mov
sbbb
sub
or
jle
aaa
repz
imul
and
jo
jmp
lods
iret
sub
mov
push
push
iret
out
inc
je
and
mov
pop
lods
mov
shlb
lcall
loopne
push
aaa
push
sbbl
xchg
aam
push
mulb
xor
sbb
xchg
dec
or
or
mov
lret
add
loop
jp
mov
fdivp
cltd
hlt
es
lock
ljmp
or
push
mov
dec
dec
jg
outsl
cmpsl
loop
nop
sbb
sarb
hlt
mov
inc
mov
fcom
lods
adc
add
add
loop
hlt
adc
xor
mov
push
inc
outsl
jg
add
js
incl
xchg
test
lahf
sti
xchg
shll
add
jecxz
cmpsl
xchg
cmpsb
dec
js
out
xlat
inc
sbb
dec
in
sub
sarb
mov
mov
dec
and
imul
jo
push
mov
jno
dec
sbbl
xchg
or
loope
hlt
pushl
rclb
scas
rcrb
push
pop
mov
cmpsl
jl
cmp
loope
arpl
mov
cmpsl
int
inc
cltd
cli
jmp
push
adc
inc
icebp
cmp
mov
pop
mov
mov
or
movsl
jno
cmp
cmp
sbb
xchg
test
repz
btc
stos
xchg
inc
cld
push
push
cmc
mov
mov
shlb
push
mov
cltd
or
and
inc
pop
push
pop
ret
lcall
mov
lcall
adc
jmp
pop
addr16
jecxz
mov
jg
out
or
mov
push
push
push
jae
jmp
xlat
mov
sbb
adc
test
je
or
adc
mov
inc
cmpsb
sbb
or
add
mov
cmp
pushf
or
xchg
adc
cmp
imul
pusha
fstp
int
mov
cmp
test
or
jns
andl
dec
fisttpll
shlb
in
mov
icebp
fnstcw
mov
xlat
iret
les
icebp
stos
mov
daa
adc
dec
hlt
jb
adc
add
int3
ds
and
mov
shlb
adc
or
or
adc
outsb
mov
jo
mov
aaa
mov
pop
dec
cmpsl
int
ret
and
mov
xchg
jbe
jmp
push
leave
xchg
push
fadds
inc
jmp
rcrl
and
xlat
push
xchg
sbb
test
mov
out
das
push
ja
loop
pop
shll
icebp
cmpsb
push
test
xlat
mov
or
pop
mov
lcall
and
pop
pop
adc
inc
ficomps
jbe
fs
loop
mov
jmp
inc
les
xchg
push
or
mov
xchg
mov
and
imul
scas
popa
outsl
dec
iret
push
xchg
pusha
jl
cmc
push
xchg
jo
lcall
popf
sub
push
test
mov
lods
pushf
das
jmp
cmp
arpl
fildl
pop
inc
ret
adcl
sbb
xchg
jne
scas
adc
fimull
test
out
ret
aas
jge
jno
loop
pop
gs
sarb
fimuls
mov
push
cmp
dec
hlt
push
inc
lahf
lahf
mov
sub
stc
jo
rclb
int
mov
and
xchg
xchg
sbb
sub
sbb
inc
jmp
pop
mov
imul
int3
test
adc
push
popf
adc
cmp
ret
fdivrs
clc
ja
lods
inc
cld
imul
fnsave
fimull
mov
sbb
mov
mov
or
in
mov
das
jns
mov
mov
cs
or
mov
sbbb
mov
pop
or
sbb
lret
lret
pop
mov
inc
xor
xor
pop
mov
test
int
clc
or
lods
insb
mov
outsb
into
loop
cmp
nop
dec
cmpsl
add
icebp
rcrb
sub
cld
aad
inc
mov
fs
fists
fsub
adc
jae
testl
and
cld
adc
adc
push
aam
sbb
lea
or
int3
add
lahf
loope
and
idivl
fdivrl
jns,pt
mov
int3
xor
sub
pop
rcl
push
mov
mov
inc
mov
sub
push
mov
inc
out
mov
mov
movsl
test
scas
mov
sbb
lea
sbb
lea
jo
movl
mov
dec
ds
popa
pop
repz
cld
loopw
scas
add
push
lods
push
jge
loope
mov
iret
std
test
xchg
or
jae
cmpsl
lahf
mov
jae
mov
out
push
mov
jo
shll
mov
cmp
xor
aas
pop
sbb
sub
push
hlt
scas
test
std
pop
jmp
add
jb
sub
mov
push
cli
sbbl
insl
std
xlat
lock
xlat
cmp
sub
cmp
add
lcall
roll
push
mov
sbb
repnz
and
das
add
orl
adc
jae
sub
cld
xchg
pop
cli
push
cmp
mov
sbb
aad
in
outsl
clc
movsl
xor
out
aad
ja
jb
xchg
pop
mov
fwait
sub
cmp
cmpsl
fwait
loop
test
push
jo
jo
negl
std
lahf
dec
lcall
sbb
adc
lret
in
mov
data16
mov
imul
jg
sbb
xorl
push
push
adc
leave
lret
sub
dec
jno
cmpsb
cwtl
shrl
out
loope
and
pcmpeqw
aas
jne
pusha
jns
fwait
dec
mov
xchg
xchg
pop
mov
int3
xorl
sbb
fwait
pop
int
shll
and
adc
cmp
icebp
imul
sbb
stc
xor
cmp
jno
aaa
rcr
sub
mov
imul
inc
add
bound
insl
push
inc
ret
repz
lea
sub
add
xor
xor
or
xor
xchg
dec
lods
out
or
jo
mov
inc
in
mov
and
int3
sbb
sbb
ds
sbbb
sub
loop
hlt
dec
fisubrl
mov
pusha
gs
out
lods
aam
push
mov
sbb
nop
mov
inc
jbe
lahf
out
cmp
pop
scas
push
js
mov
rolb
sti
jp
cmc
xchg
push
shrb
cs
jo
fcmovnbe
mov
cmc
adc
sbb
in
aam
xor
lahf
inc
jnp
stc
pop
mov
cltd
loopne
adc
ffreep
ret
cmp
cmp
lds
out
scas
xor
mov
mov
int
cs
cmp
ss
or
in
cmpsl
mov
ja
sahf
sub
fwait
dec
mov
dec
inc
jmp
jb
mov
aas
fs
into
cmpsb
sbb
sbb
push
adc
mov
xor
std
xchg
mov
jecxz
stc
das
xchg
and
rorl
sub
das
sbb
in
mov
inc
sbb
push
jl
fwait
movl
ss
pop
ret
pop
aad
out
mov
and
es
add
pop
add
dec
loop
xchg
jo
push
sub
add
xchg
ret
stc
dec
sbb
xlat
lcall
insl
mov
add
inc
xchg
lods
out
sbb
sbb
sbb
and
stc
sbb
cmp
mov
rcll
push
int3
mov
data16
pop
insb
sbb
imul
test
aam
sahf
loopne
push
cmp
je
mov
lods
and
inc
jp
sbb
test
pusha
cmp
add
sbb
in
call
push
xor
dec
divb
cmpsb
rorl
ficompl
outsb
pop
push
ljmp
add
out
icebp
pop
or
push
insb
pop
insl
jge
inc
dec
push
sub
js
push
inc
xlat
sbb
adc
jae
sub
jl
out
test
and
imul
mov
pop
and
imul
shl
mov
cmpl
cmpsb
xlat
jne
insl
rcll
movsl
xor
push
out
mov
test
test
bound
fidivrl
in
mov
mov
gs
xor
add
dec
cmp
jle
fistpll
cld
in
dec
stos
dec
add
scas
and
pop
sarb
cmp
test
pop
clc
testl
mov
cli
xor
cmp
js
and
sub
mov
jle
addl
outsb
jge
mov
cmp
push
sub
mov
jmp
and
mov
mov
and
test
leave
inc
pop
movsb
mov
and
call
sub
xor
jecxz
pop
inc
sbb
mov
js
push
inc
fldcw
pushf
aad
cwtl
pop
adc
cltd
je
rclb
push
into
or
cmc
cld
and
pop
mov
xlat
cli
mov
mov
gs
pusha
mov
mov
adc
movsl
js
repz
in
or
jbe
mov
adc
lahf
pop
xchg
fadd
sbb
stos
lods
sbb
mov
dec
lds
daa
test
les
adc
mov
xchg
aaa
mov
movsl
rcrb
pop
jno
js
shrl
jg
cmc
ljmp
mov
dec
loope
test
ss
and
mov
pop
jne
adcl
xor
pushf
jbe
push
ljmp
sub
mov
sbb
and
adc
stos
mov
dec
mov
lcall
repz
stc
pushf
outsb
jb
imul
adc
push
inc
mov
mov
push
mov
jl
fsubl
rorb
dec
pop
jmp
scas
ja
jns
int
mul
iret
rcll
iret
orl
fwait
xlat
mov
pop
mov
cmp
cltd
mov
outsb
aam
and
push
pop
lock
mov
or
sbb
mov
jae
pusha
aas
roll
pop
leave
dec
push
stc
dec
sbb
std
or
aas
xlat
inc
jno
xchg
into
jae
ror
pop
leave
out
lods
icebp
fmulp
or
loope
out
mov
jecxz
js
jle
lods
fadd
mov
dec
fiadds
out
leave
fwait
xchg
mov
push
je
cltd
mov
push
loop
xchg
int3
mov
xor
ds
or
loop
adc
jmp
in
pop
sub
or
jnp
mov
pop
fwait
loopne
inc
ss
lahf
clc
insl
outsb
or
movsl
leave
insl
movl
inc
arpl
imul
xchg
je
push
push
subl
fdivr
clc
jl
or
sub
sub
xchg
je
and
icebp
stos
shll
jp
sbb
out
sbb
mov
xor
into
dec
je
sbb
and
jl
leave
pop
stc
scas
hlt
push
dec
or
loopne
out
jbe
test
and
divl
mov
popf
in
out
xorl
cmc
push
adc
dec
mov
and
sub
cmp
adc
inc
testl
jne
fprem
inc
les
pusha
jnp
scas
fistl
int
cmpl
mov
cmp
rclb
daa
xchg
adc
add
popf
lods
jmp
test
inc
jb
cmp
stos
aaa
hlt
sbb
adc
pop
popa
in
data16
push
lahf
fdivr
jbe
std
add
loop
adc
sbb
ret
lret
clc
fxch
shlb
mov
adc
push
cmp
pop
test
fisubrl
adc
cmpsb
push
jne
sub
xchg
cmpsl
aas
mov
nop
jo
mov
adc
and
fstp
lret
fwait
icebp
fs
addb
andb
int
mov
xchg
sbb
jo
xlat
adc
add
sbb
sbb
jbe
test
jl
fisubl
sbb
pop
insb
cmc
jnp
mov
jb
nop
popf
add
mov
leave
scas
xor
lret
jne
pusha
nop
adc
fnstcw
add
insb
pop
sub
faddl
mov
sub
incb
or
repz
xchg
dec
mov
add
add
aam
cmp
cmpsl
push
mov
and
jle
out
test
repz
pushf
sahf
pop
hlt
adcb
popa
int
pusha
int
rcrb
push
add
inc
popf
lret
or
push
sarl
and
xchg
lock
fstpl
jb
jg
sbb
or
ret
movsl
mov
cs
in
lret
mov
out
jno
mov
scas
dec
pop
ret
stc
dec
add
enter
adc
dec
jne
insl
lcall
push
out
xchg
flds
adc
add
cmp
popf
push
mov
insb
and
rcll
fstpl
push
or
shlb
sarl
aam
aam
mov
aad
jmp
and
mov
sbb
push
shrl
repnz
mov
cmc
xor
cwtl
daa
test
aam
movsl
and
sbb
mov
jno
dec
inc
adc
sub
pushf
jb
pop
cmp
movsl
xchg
xchg
imul
adc
aam
ljmp
hlt
fwait
icebp
test
ja
or
and
mov
lahf
arpl
jns
aaa
or
icebp
pop
xor
imul
xchg
jne
push
push
jl
aaa
mov
subl
imulb
stos
addr16
inc
sub
cmp
or
out
dec
shr
lods
ss
add
out
push
std
cmp
arpl
mov
das
pop
rol
das
jl
popf
das
scas
xor
call
or
sub
dec
push
inc
inc
dec
psubd
shl
mov
loop
outsb
sti
cmc
mov
mov
jle
ret
stos
repz
aad
push
add
loopne
fistpl
es
sbb
ffreep
data16
shr
mov
lahf
jg
cmpsl
xlat
mov
lods
mov
and
push
shll
rcr
fldl
jmp
out
ja
mov
or
out
adc
sub
or
int
ljmp
movsb
mov
in
and
jmp
and
in
popa
pop
out
int
mov
sbb
dec
sub
jl
jge
jns
test
push
or
out
sub
inc
test
test
jbe
xor
xchg
add
ja
fwait
mov
mov
fmull
imull
dec
sub
lods
dec
cmpsb
sub
and
outsb
inc
je
jbe
add
add
mov
xor
push
add
test
mov
adc
cmp
mov
fcmovnu
inc
xlat
sbbl
mov
dec
pop
inc
pop
lcall
xchg
dec
sub
lock
es
mov
xchg
stos
jecxz
add
setg
test
into
inc
rol
add
and
sahf
jle
lock
test
pop
mov
cmc
dec
pop
jecxz
rol
pop
notb
je
outsb
leave
mov
push
xchg
xor
std
ss
mov
adc
das
push
mov
pusha
stos
outsb
jge
insb
stc
aas
shlb
dec
cmpl
add
pop
or
int
mov
jge
cmp
in
push
xchg
mov
or
js
or
dec
cltd
and
mov
lcall
mov
jle
dec
das
fcmovb
stos
out
cmp
dec
das
in
add
js
fbstp
test
stos
pop
fsubrs
rorl
or
pusha
cmovl
outsl
mov
inc
mov
push
aam
or
sub
out
daa
mov
adc
mov
and
cmp
notb
nop
inc
cwtl
ja
enter
add
pop
xchg
jae
daa
sbb
aam
mov
iret
cld
xor
fcomps
jecxz
add
cld
mov
pop
inc
test
mov
sarl
dec
imul
addr16
jb
daa
dec
aam
mov
sbb
inc
fisttpll
lret
push
shll
lcall
xor
aas
fstl
cmp
test
test
mov
pop
shlb
xchg
scas
or
sub
imul
cmp
lret
lret
xor
insb
inc
add
dec
ss
push
ljmp
pop
dec
rorb
dec
mov
sub
pop
xor
test
jno
cmpsb
cmpsb
mov
mov
xchg
push
rcrb
xchg
shlb
leave
inc
cmp
xor
pusha
or
dec
iret
mov
or
sbb
or
ljmp
negb
popf
mov
mov
jae
ja
sub
decb
ds
and
iret
sub
pop
push
pop
sarl
outsl
pusha
call
lret
jno
mov
mov
mov
pushf
dec
mov
xor
popf
add
xchg
push
out
xor
pushf
inc
div
adc
add
movmskps
pop
loop
cmc
movsb
lret
mov
sbb
daa
pop
test
fdivs
out
fistpl
imul
sub
lcall
loopne
adc
lods
je
cli
gs
mov
push
or
lods
lcall
test
dec
imul
inc
push
enter
pop
sbb
sahf
inc
ds
sub
cmc
sti
xchg
and
rcll
scas
shlb
lahf
xchg
mov
sub
leave
popf
mov
push
jge
stos
jns
xorl
divl
addr16
mov
or
test
flds
mov
ljmp
hlt
sbb
clc
test
aas
bound
sub
dec
pop
jl
mov
lods
shlb
adc
and
sub
mov
xchg
mov
dec
mov
sbb
ds
xchg
jecxz
insl
jbe
fwait
lock
dec
jle
xor
int3
adc
jmp
adc
sbb
jae
or
adc
outsl
lret
aas
sahf
fs
add
das
sbb
in
pop
clc
mov
pop
sbb
fiadds
cmc
adc
gs
xchg
clc
notl
sbb
test
dec
inc
inc
aad
in
lods
add
gs
sbb
jle
bound
push
decl
dec
sbb
jbe
es
in
mov
xchg
in
sbb
incb
cmp
outsb
iret
adc
lret
xchg
dec
outsb
mov
loop
pop
scas
shr
in
mov
out
jmp
xchg
push
sbb
pop
insl
pop
hlt
popa
jmp
popl
adc
sti
fnsave
mov
imul
pusha
or
adc
lock
or
mov
dec
int3
cs
pop
fnstenv
xchg
in
dec
das
repz
cmp
std
mov
fildl
int
arpl
in
jmp
les
fnstcw
fidivrs
jg
push
sbbb
sub
mov
outsl
loop,pt
movsb
mov
dec
sbbb
fs
xchg
fcmovnu
loope
lea
add
add
inc
xor
adc
sar
mov
inc
push
addr16
sbb
mov
lea
insl
add
lahf
jecxz
scas
nop
loopne
and
loop
xchg
gs
jb
lds
mov
mov
xchg
les
mov
cmp
push
imul
sahf
lahf
xor
ja
leave
mov
xchg
xor
dec
aaa
push
shl
dec
out
popa
dec
or
loope
fucomi
mov
inc
not
jns
lods
es
xor
push
fwait
gs
std
xchg
xchg
xchg
push
stos
pop
dec
fimull
xor
loop
clc
inc
mov
sbb
ss
je
mov
arpl
subb
aam
aam
cmp
jle
xchg
pop
jle
add
sub
into
mov
xchg
cmp
cmp
jl
or
in
mov
into
js
repz
mov
test
shrb
pop
dec
wrmsr
dec
fiaddl
mov
push
pop
lcall
gs
or
pushf
xchg
leave
adc
xchg
out
mov
out
jno
mov
mov
and
int
jo
aas
incb
stos
les
into
imul
shlb
jne
mov
insb
aad
lcall
cmp
pop
rorb
ljmp
mov
js
and
jnp
jg
jns
jns
das
dec
inc
popf
js
mov
cmp
repz
pushl
xchg
push
pop
test
ja
ja
xchg
cmp
stos
in
add
test
cmpsb
mov
fwait
loopne
push
rorb
in
inc
inc
mov
daa
imul
mov
outsb
cld
add
scas
jnp
mov
test
inc
stos
cmc
ss
pop
ljmp
aas
mov
out
std
cmp
or
push
out
repz
ret
sahf
pop
call
in
imul
cmp
scas
call
mov
ret
jecxz
jle
sti
insb
dec
ss
arpl
lahf
arpl
jns
scas
mov
loop
mov
or
jns
xor
xchg
addl
stos
sub
mov
jmp
movsb
xor
mov
adc
addr16
outsb
and
pushf
mov
jb
cld
cwtl
and
mov
loopne
scas
inc
sbb
or
mov
test
and
xor
jge
fmuls
sub
lret
fildll
or
mov
pop
fimull
mov
mov
xchg
out
mov
mov
sub
xchg
cmp
mov
adc
aas
xchg
in
jg
std
scas
fstpt
push
fdivrl
shll
dec
popa
and
std
jp
sbb
sub
push
jo
or
xchg
lds
sub
lret
arpl
cmp
rolb
rolb
cmpl
xchg
dec
inc
push
cmpsb
mov
mov
mov
imul
jmp
movsl
xchg
or
into
cwtl
xor
neg
int3
sub
dec
and
mov
jae
push
mov
dec
pop
adc
lods
nop
xor
dec
out
stos
test
adc
loopne
inc
lds
xchg
and
pop
cmp
lock
pop
push
sub
sbb
pushf
orl
cmp
testb
call
push
mov
leave
cld
sub
push
mov
pop
adc
add
in
or
enter
xchg
and
movsb
ds
jl
das
jae
cmp
pop
xor
sbb
incl
jb
jl
xchg
outsb
sub
add
push
inc
inc
icebp
sbb
pop
fcompp
sub
lret
dec
push
mov
stc
mov
mov
and
xchg
lret
jb
push
in
inc
fstl
adc
outsl
mov
movq
mov
or
idivl
loopne
xor
sub
hlt
jnp
cli
outsl
negb
js
xchg
enter
add
sub
sbb
aam
add
pop
stos
ss
or
pop
jmp
pop
lea
mov
mov
sbb
push
xor
push
ret
push
mov
add
pusha
xor
int
jb
loopne
lcall
mov
sub
xchg
jp
jmp
into
icebp
add
xchg
scas
fldenv
loope
mov
cmp
loope
push
adc
fsubl
or
inc
inc
ficompl
loope
jns
int3
dec
and
pop
pop
call
out
add
shrl
push
push
repnz
stos
push
and
inc
loop
fistl
pop
int3
daa
and
xor
stc
xchg
scas
mov
daa
and
xlat
inc
sti
jbe
push
add
adc
ljmp
xor
inc
lret
imulb
xchg
stc
outsl
repz
adc
sub
pop
and
loope
mov
lss
push
mov
imul
das
imul
pop
push
frstor
daa
pop
adc
mov
mov
jne
fcomps
insb
and
pop
push
imul
into
jmp
adc
pop
mov
push
aad
sub
outsl
xlat
icebp
dec
clc
leave
pushf
js
sub
push
xchg
dec
aam
and
cltd
cmp
dec
xchg
jb
cmp
pushf
aaa
cmp
fwait
sbb
or
or
jno
rorl
xor
lahf
lret
mov
sbb
loop
jg
jmp
pop
xchg
icebp
inc
sbb
inc
iret
dec
loopne
fcmovbe
add
orb
out
push
dec
sbb
lret
xchg
xchg
push
inc
gs
add
in
xchg
push
mov
fdivrl
cs
inc
xchg
mov
or
mov
lds
xor
negl
std
cmc
into
jb
mov
dec
lret
jge
push
dec
push
lock
scas
das
adc
xchg
jnp
push
or
inc
scas
xchg
cmp
sub
lods
jno
add
push
cmpsl
imul
mov
mov
nop
rcll
pusha
jge
or
pusha
jge
jmp
mov
mov
leave
jp
cmp
dec
dec
or
lds
je
xor
sub
test
fmul
adc
cmp
adc
jae
xor
ret
pop
mov
sub
jecxz
shlb
cs
fisubl
shrb
mov
add
clc
addl
mov
cmp
insl
ljmp
jae
sub
mov
mov
repz
add
dec
arpl
lret
mov
test
cmpsl
inc
xchg
push
or
cmp
sbb
inc
push
enter
test
hlt
jnp
sbb
cld
insb
test
lret
xor
lret
cmp
pop
fimull
or
xlat
aaa
push
lret
jo
gs
push
jmp
add
popf
mov
dec
xchg
jg
pop
fldl2t
push
mov
mov
das
into
scas
pop
cmp
push
push
and
jns
gs
arpl
pop
mov
mov
fdivrp
adc
fucom
leave
in
pop
mov
adc
mov
or
xlat
push
lea
popa
mov
pushf
jae
pop
mov
push
adc
out
mov
loop
dec
test
mov
mov
adc
je
mov
imull
sub
lock
cmp
imul
mov
or
clc
mov
add
pop
pop
lret
ljmp
or
mov
jle
push
daa
push
addb
or
push
subl
mov
sbb
inc
push
jmp
jo
sub
mov
sub
rcl
mov
pop
add
push
cmp
mov
pushf
stos
mov
pop
xchg
adc
loop
jl
mov
xor
or
out
xor
xchg
hlt
out
ja
dec
or
xor
xor
jg
dec
test
add
add
call
sbb
xlat
inc
insb
les
add
push
mov
jg
or
loope
mov
mov
inc
fsubl
lcall
ljmp
sub
xor
cmp
test
ljmp
inc
mov
fwait
cmovae
imul
push
sub
fiaddl
pop
xor
and
jp
fs
mov
repz
cmp
sub
dec
jb
and
cmp
ret
daa
mov
ds
dec
lock
dec
xchg
lahf
ds
pop
dec
stc
sbb
lret
inc
and
imul
dec
popf
inc
xchg
test
pop
add
cmp
fdivrl
inc
adc
div
inc
enter
xchg
out
stos
jb
jge
mov
cmp
sub
into
mov
mov
sbb
jecxz
mov
xchg
mov
and
xlat
mov
xchg
andnps
xchg
xchg
rol
in
pop
in
xor
dec
sbb
sub
jno
jle
sbb
push
test
lods
pop
gs
or
sub
and
cmp
dec
inc
jbe
es
xchg
repz
cld
mov
andb
xorb
lock
sub
cli
stc
or
xchg
and
cmp
sub
andb
jno
into
das
xor
iret
pop
or
mov
or
fldenv
outsb
aas
ds
lods
inc
fs
xchg
sbb
xchg
pop
pop
mov
xor
jnp
xchg
fyl2x
outsl
ljmp
xor
adc
cmp
inc
fdivl
lcall
loope
mov
out
addr16
adc
push
push
pop
int3
movb
pop
jmp
mov
jge
ret
ljmp
jo
inc
repnz
cmpsl
mov
mov
mov
push
add
mov
jnp
xchg
jb
scas
stc
mov
lods
xor
shrl
aam
out
inc
xchg
push
adc
insb
xchg
jb
adc
sub
fmul
imul
jge
test
cmp
jae
cmp
outsb
orb
jno
scas
cli
ljmp
cmp
mov
adc
pop
lods
aaa
xor
int
cld
mov
mov
insw
jb
mov
add
stos
jns
in
push
movsl
shr
das
mov
mov
insb
add
xchg
xchg
jne
or
and
in
jecxz
xchg
pop
sbb
pop
mov
xchg
testb
dec
loopne
out
insb
notb
icebp
cltd
stos
mov
insl
pop
jmp
jecxz
int
hlt
outsl
jno
cmp
in
testl
sub
or
jge
cmpsb
cmp
mov
push
andl
mov
repnz
mov
fidivrs
push
pop
jecxz
sbb
les
push
bound
xchg
lret
insb
fs
fdivrs
out
jge
xlat
lret
mov
nop
inc
pop
or
leave
and
rcrb
repnz
mov
stos
sub
int
cmpsb
ror
sarl
adc
mov
add
fisttps
sub
in
ret
xchg
imul
dec
inc
cwtl
inc
stc
adc
mov
cmp
arpl
xchg
rol
and
add
repnz
push
test
cltd
push
fstpl
inc
inc
mov
in
js
mov
rcr
repz
xor
xor
push
pop
xchg
inc
leave
jnp
int3
xchg
xor
xchg
push
or
jo
mov
cli
shl
add
pop
pop
insb
in
mov
pushf
adc
xor
pop
repz
sbb
dec
je
add
xchg
lret
sub
test
scas
jmp
cmp
aam
mov
jae
pop
lret
mov
mov
test
es
mov
adc
nop
pushf
push
xlat
mov
jno
out
add
mov
xchg
cmc
std
or
dec
xor
inc
aas
jle
adc
dec
inc
pushf
js
cli
outsb
jb
push
pop
adc
gs
fldenv
push
fsubl
lahf
and
out
mov
mov
cli
sbb
or
push
push
cmpsl
xor
test
jae
inc
icebp
js
mov
fs
inc
movd
test
popf
addl
dec
push
fcomps
inc
pop
stc
xor
xlat
sbb
add
mov
push
xchg
ljmp
mov
je
dec
xor
sbb
mov
sahf
mov
jbe
cwtl
dec
inc
cmpsl
push
jnp
cwtl
rolb
scas
ds
outsl
push
jge
daa
push
dec
roll
movsl
lahf
ss
cmp
push
dec
imul
xchg
and
sbb
and
clc
pop
js
add
and
sahf
xlat
enter
repnz
inc
cli
adc
scas
xor
arpl
lds
lods
sbb
cmp
clc
push
scas
mov
mov
dec
in
shlb
loop
cmp
mov
push
ja
sub
in
jb
inc
gs
and
add
movsb
inc
jne
insl
adc
outsb
es
in
lret
mov
insl
pop
push
movsb
in
lcall
xchg
and
dec
jns
jae
dec
dec
cmp
lods
push
mov
js
mov
lahf
push
loope
sar
or
in
pop
xlat
pop
test
daa
dec
loop
xchg
cmp
mov
test
or
mov
dec
lcall
pop
xor
pusha
out
in
aaa
loopne
std
mov
enter
push
insb
rcr
adc
iret
mov
push
sbb
outsb
filds
or
ss
subl
mov
mov
movsl
and
mov
add
jns
xchg
shlb
fdivs
dec
jno
cld
mov
lds
lahf
paddusb
test
xchg
pop
fistpl
sbb
ret
in
icebp
loope
cmc
icebp
iret
mov
xlat
and
imul
ss
fs
punpckhdq
push
aad
inc
mov
push
test
mov
ret
insl
int
les
call
scas
pop
pop
fs
pop
decb
stc
in
sar
add
xchg
mov
and
dec
adc
pushf
movsl
sub
imul
or
push
mov
addb
adc
mov
in
fstpl
xchg
popf
sbb
scas
and
mov
ljmp
inc
std
clc
ficomps
jmp
inc
icebp
xchg
cli
jmp
adc
mov
iret
jle
adc
jmp
stc
std
or
dec
cwtl
sti
push
cmp
ficoms
and
lods
dec
xchg
mov
xor
xchg
pop
stos
add
cmp
jl
in
and
dec
jb
push
repnz
push
mov
sti
mov
xchg
out
push
pop
rcl
jo
dec
clc
cli
in
xchg
fsubp
pop
sub
push
cwtl
jl
dec
sbb
mov
jg
cmp
shlb
scas
mov
xorb
ds
ret
imul
mov
nop
push
mov
mov
pop
add
mov
add
popf
ljmp
arpl
pop
inc
and
loopne
fwait
roll
rorb
sbb
dec
sarl
ficoms
xorl
jmp
sbb
jmp
dec
mov
out
popf
mov
in
jecxz
dec
mov
rorl
inc
add
sar
aaa
xlat
inc
cmp
vmwrite
push
sbb
stos
lahf
lds
adc
or
cmpsl
loop
lcall
pop
add
nop
mov
push
jbe
add
fs
lret
andb
test
and
ja
xchg
pusha
int
out
sub
lock
loop
repz
rclb
shll
push
fidivl
in
movb
call
jl
lcall
leave
lock
inc
mov
stc
ret
stc
rcrl
in
inc
in
sub
bound
stc
movsl
xor
sahf
cmpsl
or
js
xor
lret
test
cmp
inc
data16
pop
xchg
cmp
sti
fdivrl
mov
cmp
push
cli
inc
stos
jne
mov
in
loopne
idivb
outsl
test
movsl
repnz
fucomp
or
mov
movsl
sbb
and
push
popf
adcl
test
cmp
arpl
nop
sbb
fadds
add
jg
addr16
adc
out
sub
push
or
testl
movsl
push
out
cmp
mov
lea
or
stc
cli
jg
scas
in
push
repz
and
enter
cmpsb
adc
repnz
jbe
aam
shl
jo
sbb
or
test
xchg
fldenv
or
sahf
clc
test
