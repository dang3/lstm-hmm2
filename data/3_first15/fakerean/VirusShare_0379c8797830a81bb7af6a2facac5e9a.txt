sbb
add
mov
cmpsb
mov
js
pop
les
mov
lea
je
inc
scas
addr16
shrb
xlat
or
dec
aam
in
push
jbe
jbe
inc
enter
imul
jae
loop
cmp
jg
stos
inc
inc
sbb
xor
outsl
jmp
movsb
sbb
fisubrl
aad
mov
mov
cmc
fistpl
addb
pop
nop
push
mov
xchg
dec
into
sar
fdivrl
loope
test
add
and
adc
test
jg
push
aam
pop
cmpsb
add
fcmovnb
mov
xchg
es
out
lock
shl
sbb
ret
mov
fcmovu
bound
and
adc
add
xor
xchg
lret
jge
movsl
xchg
popf
cld
add
mov
inc
das
mov
rorb
ret
xor
cli
push
jnp
jl
mov
cld
mov
mov
popa
out
mov
call
orl
pusha
daa
dec
es
mov
fstpt
xlat
push
repz
dec
mov
into
inc
jg
pop
icebp
xchg
cmpsb
add
cmp
enter
xchg
dec
jo
mul
push
cmp
mov
pop
mov
dec
push
inc
clc
dec
popa
out
adc
gs
stc
es
imul
inc
icebp
stc
jne
jno
fistps
push
sbb
xor
mov
out
test
sarb
insl
ss
out
jmp
scas
out
push
or
jns
pusha
les
scas
inc
push
and
js
pop
cltd
shlb
mov
scas
mov
pop
and
mov
cmpsl
sbb
das
repz
in
xchg
aam
push
addr16
or
std
mov
iret
imul
push
mov
or
pop
aas
jnp
add
push
xor
pop
sbb
mov
xchg
sarb
out
js
popa
mov
push
negb
shlb
sbb
mov
rorl
dec
jnp
loopne
pop
cmp
mov
insl
sbb
ret
pop
mov
inc
and
ret
jecxz
dec
adc
push
addr16
bound
aad
insl
lcall
xchg
push
fs
dec
mov
mov
popf
mov
xor
adc
pop
cld
std
fwait
mov
ret
add
movsb
lea
mov
sub
pusha
jl
jge
jecxz
sub
sbb
jmp
lea
lcall
andl
jbe
mov
jno
inc
sbb
mov
dec
fs
pop
push
les
aaa
outsl
arpl
xor
shlb
ja
jbe
or
or
outsl
sbb
lods
adc
mov
cld
lods
imul
inc
std
inc
imul
repnz
js
push
leave
add
sub
cwtl
push
jp
mov
push
loop
sbb
mov
movups
cmp
mov
fistpl
imul
mov
add
push
dec
fsubl
aas
push
packssdw
push
jl
dec
jg
push
xchg
decl
mov
mov
xchg
pop
mov
sahf
out
bound
cmpsl
aas
or
sub
cmpsl
mov
test
xchg
popf
jae
or
or
insb
sarb
jnp
jae
lea
sahf
roll
iret
fwait
das
aad
cmp
push
data16
lea
js
fwait
dec
nop
cmpsb
dec
imul
insb
lods
xorl
pop
jbe
pop
inc
subl
inc
movsl
inc
push
mov
add
insl
stos
fwait
out
imul
sub
cmpsl
adcb
popa
jbe
dec
mov
push
mov
dec
adc
jmp
jne
cli
mov
xor
mov
ja
dec
mov
dec
or
xchg
mov
and
pop
dec
pop
jl
cmpsl
add
fistl
faddl
sbb
incl
fnstenv
xchg
fs
fiaddl
dec
inc
leave
lods
sbb
mov
or
gs
mov
dec
inc
es
scas
aas
rclb
stc
adc
lret
aam
jb
jge
rclb
fdivs
stc
sbb
mov
pushf
addb
pop
add
xchg
push
cmpsb
xchg
sub
mov
sbb
insl
scas
push
push
pop
push
loop
mov
or
jo
test
popf
jg
xchg
pop
imulb
aad
or
inc
and
or
fidivl
lret
fs
pop
inc
es
jne
xchg
loop
push
aas
adc
push
icebp
pusha
iret
sub
bound
outsb
popf
ss
dec
adc
and
xor
rol
fwait
or
fwait
out
mov
push
jl
push
out
sbb
jb
cmp
add
loope
cs
push
inc
ror
fnstsw
inc
icebp
aam
sub
popw
into
loope
or
outsl
call
xchg
imul
imul
dec
ret
adc
mov
inc
push
hlt
js
ss
pop
cmp
addr16
mov
sahf
adc
mov
mov
loope
mov
jne
out
int3
and
mov
sub
xchg
add
test
test
lds
andb
push
sub
hlt
ss
scas
dec
fdivs
ss
aaa
xchg
lret
rdpmc
mov
into
inc
loop
stc
mov
pop
test
ret
cld
mov
popf
push
insl
mov
cwtl
imul
sub
and
stos
mov
cmpsl
in
clc
or
add
xlat
pop
pushf
daa
in
sti
add
xchg
mov
ja
int
insl
dec
test
jae
repz
sbb
sti
push
sbb
cld
stos
sub
or
adc
or
jmp
je
mov
out
aam
fwait
ds
add
add
cmc
es
mov
adc
int3
call
fnstenv
fidivl
inc
movsl
in
test
add
mov
push
push
insb
ljmp
mov
inc
mov
mov
or
mov
lret
sub
inc
mov
ljmp
clc
mov
xchg
stos
mov
inc
xorl
shl
pop
sbb
push
int3
jbe
or
xor
inc
inc
add
adc
insl
add
mov
and
pop
je
fistpl
sti
imul
xor
mov
es
push
xchg
push
jo
sub
js
cmc
add
push
add
fwait
lock
sub
fdivrs
push
bound
fisubs
jno
pop
insb
sbb
dec
out
jb
mov
mov
xchg
mov
pop
adc
fmul
mov
mov
dec
sbb
or
adc
lret
cmp
je
sub
and
push
fbld
pop
in
call
adc
adc
push
mul
int
adc
mov
mov
dec
scas
mov
fcoms
es
test
or
pop
cmc
es
notb
fidivl
push
push
fidivrl
fcompl
imul
push
lods
xor
adc
adc
shll
mov
push
iret
sbb
and
stos
pop
mov
cwtl
outsb
mov
test
mov
dec
or
xor
orb
push
sub
adc
mov
dec
aas
xor
mov
jo
inc
je,pn
add
lret
mov
cs
dec
rcrl
repnz
lcall
and
fcoml
cmp
int
push
int3
add
xchg
xchg
jg
outsb
fimull
scas
lods
shll
xchg
out
sbbb
adc
push
adc
lahf
rol
rolb
shrl
push
jmp
scas
jno
xchg
sbb
rcrl
stc
data16
inc
adc
sbb
fisttpll
adc
cwtl
ret
dec
lock
mov
mov
int3
pop
jecxz
xchg
pusha
xchg
mov
in
pop
pop
ret
jg
xor
mov
loope
mov
fstl
sub
push
aam
fcmovnu
push
lods
dec
cli
dec
pushf
stos
inc
lcall
out
xlat
cmp
pop
test
loop
sbb
pop
popf
arpl
aaa
dec
and
adc
push
or
stos
mov
iret
inc
xchg
xor
pop
jnp
pushf
adc
popf
adc
ljmp
cmc
loopne
pusha
mov
movsl
mov
negl
pop
sbb
int
insb
or
jecxz
pop
int3
mov
or
sbb
js
push
mov
pop
xchg
cmp
mov
push
cmp
pop
mov
test
mov
and
cmp
add
scas
xchg
in
pop
icebp
sbb
enter
cld
xor
cltd
int
sti
mov
repz
mov
fwait
xchg
leave
test
lahf
mov
cltd
inc
xchg
imul
xorl
push
xchg
xchg
pop
mul
pop
das
test
pop
sub
xchg
ja
and
adc
xor
xor
cmpsl
adc
daa
adc
cld
mov
cmp
mov
insl
shl
and
test
jnp
test
or
dec
stos
loopne
cmp
or
cmp
push
xchg
push
daa
sub
xchg
stos
mov
cmpsl
mov
dec
cs
sub
xor
enter
nop
jmp
sbb
cwtl
mov
data16
test
fistl
out
xchg
fistpll
mov
mov
add
test
mov
vminsd
add
jecxz
pop
lea
xor
bound
out
push
test
int
xchg
push
add
mov
add
cltd
pop
pop
push
cmpsl
mov
das
push
clc
pusha
jmp
dec
jmp
sub
das
jl
mov
mov
roll
and
iret
push
add
dec
sahf
lods
mov
in
ds
xchg
mov
enter
push
aaa
mov
arpl
fs
mov
push
mov
mov
leave
jne
andl
mov
mov
lcall
jne
sbb
cmp
xabort
or
lods
mov
inc
loope
ja
mov
lods
or
adcl
jmp
imul
mov
push
jecxz
hlt
and
mov
xor
je
push
sub
jne
and
push
inc
pop
lahf
xchg
cmp
ret
jns
outsl
xor
mov
push
mov
ret
mov
cmp
rolb
dec
mov
xchg
movsb
test
lcall
xchg
jnp
test
fdivs
hlt
repz
xchg
sub
filds
or
cmpsb
lods
sbb
fsubl
popa
flds
push
mov
xor
sbb
cmp
enter
or
xor
test
mov
push
sbb
push
roll
jae
and
pop
inc
clc
jmp
and
add
jns
pop
lcall
addr16
sti
dec
addr16
inc
jp
fcmovbe
imul
dec
add
xchg
jno
mov
or
dec
mov
sbb
filds
sub
dec
stc
dec
or
clc
popf
lods
jmp
nop
push
add
sbb
rorl
js
xor
add
xor
lds
jb
ficompl
scas
popa
aas
in
arpl
mov
test
sbb
xchg
and
pop
dec
and
sbbb
fs
push
scas
cmp
or
sub
mov
arpl
imul
pop
dec
mov
inc
mulb
and
popf
popa
out
popa
push
add
aas
rorb
andl
mov
mov
in
in
out
mov
pop
cwtl
roll
sbb
lcall
es
arpl
cmp
add
ss
or
ss
inc
in
jp
negb
jl
xlat
fistpl
jmp
jp
cmc
cld
popf
mov
inc
into
inc
mov
int3
cwtl
push
mov
mov
je
fcmove
pop
xorl
js
mov
clc
mov
dec
pop
and
jp
pop
inc
stos
add
sub
add
movsbl
push
imul
lods
mov
xchg
xor
out
pop
lods
inc
adc
scas
popa
add
or
test
push
push
loop
jg
xor
adcb
cmp
decb
movsb
mov
add
mov
andb
mov
test
mov
dec
scas
push
or
ret
in
sub
repz
add
mov
xchg
enter
icebp
icebp
jne
lods
test
or
pop
scas
cmp
mov
inc
scas
jle
mov
mov
push
decb
bound
push
icebp
jns
cmp
pop
rclb
insl
movsb
xchg
icebp
sbb
jne
aas
xorl
jmp
loopne
mov
je
inc
or
pop
std
push
ja
pop
add
mov
loop
repz
in
mov
sub
popf
in
push
fdivs
sbb
fdivrs
sahf
aad
fwait
pop
inc
les
cmp
fadds
xchg
arpl
and
adcl
fildll
adc
lahf
inc
enter
hlt
ret
lahf
xchg
insb
fcmovb
adc
in
pop
mov
mov
pop
rclb
addl
daa
sbb
icebp
loop
jge
dec
outsb
push
inc
or
sbb
in
pop
add
pushf
sti
mov
cli
jge
cmp
xor
cltd
scas
mov
cmp
jns
inc
fidivrs
mov
stc
and
mov
cmp
call
xchg
lock
lods
bound
add
andb
push
dec
arpl
sbb
push
dec
inc
movsl
mov
rorl
insb
mov
in
xor
stos
inc
enter
outsl
mov
sbb
mov
mov
js
inc
jbe
mov
adc
ret
lret
push
adc
je
dec
push
pop
sub
or
insb
mov
push
pop
adc
cli
fsubs
daa
xlat
sub
add
sub
cmp
add
inc
push
loope
je
sar
stos
repnz
and
test
fisttpl
sbb
jp
inc
mov
xchg
add
das
popl
inc
inc
xor
aas
dec
adc
fisubl
aam
add
cltd
int3
cld
pop
out
hlt
movsl
adc
sub
cli
mov
pop
cld
hlt
sti
inc
cltd
cmpsl
dec
out
lea
aam
mov
repz
add
mov
out
push
je
mov
sub
outsl
dec
arpl
shll
paddb
xchg
cwtl
mov
mov
inc
add
subb
sub
adc
or
in
push
push
sub
mov
jg
mov
ret
call
mov
inc
adc
mov
pop
stc
mov
jb
pop
ret
push
or
xor
and
sahf
xor
fnstcw
lcall
jl
push
or
jecxz
nop
and
add
jne
test
sub
push
fcmovbe
test
rcll
xor
loop
cmp
inc
cmp
sbb
push
arpl
push
in
insl
adc
sbbl
mov
inc
inc
aaa
jle
je,pt
bound
cmpsb
jge
push
shll
nop
sbbl
mov
addb
fiaddl
push
in
sahf
and
int3
push
out
adcl
std
adcb
xor
push
cmp
mov
and
adc
lcall
pushf
mov
cmpsl
out
js
filds
jae
loope
loop
xchg
cltd
repz
imul
fildll
out
push
sub
adc
cmp
mov
adc
repz
push
cmp
outsl
test
mov
mov
jg
xchg
mov
xchg
or
cs
xor
cmp
repnz
sub
cmp
lcall
push
inc
inc
ret
imulb
pop
outsb
push
jne
fisubl
xchg
hlt
ret
hlt
push
inc
mov
fwait
cmp
inc
cs
xlat
inc
inc
mov
test
lcall
lock
cmp
pop
jne
or
mov
pop
enter
pop
scas
outsb
sahf
stos
repnz
cltd
test
loopne
int
add
lock
out
add
xchg
outsl
fsubrp
divl
call
mov
jb
mov
cmp
mov
and
cmp
imul
cmpsl
jge
movsb
iret
fimuls
stos
mov
or
sbb
push
loop
inc
mov
cmp
repnz
inc
cmp
xchg
xor
pop
add
mov
cmc
dec
mov
mov
sti
push
shll
add
scas
adc
jo
loopne
jnp
push
inc
ret
lock
cmp
mov
imul
sub
es
add
adc
adc
inc
cmp
cmp
jp
xchg
loope
dec
or
fldl
sbb
jnp
inc
adc
mov
shl
mov
imul
cmp
lds
repnz
movl
mov
lds
and
push
xchg
pop
cld
pop
popa
shlb
push
push
repnz
cwtl
imul
pop
mov
pop
jb
leave
pushf
in
sbb
xor
inc
jbe
adc
movsb
pop
lcall
dec
cmp
int
lret
pop
out
mov
lods
insb
jl
adc
cwtl
outsl
inc
cmp
jb
in
ja
jmp
sbb
mov
pop
sbb
mov
xor
shlb
sarb
mov
sarb
xchg
in
adc
rcll
daa
mov
push
sub
stos
mov
cmp
or
cmp
sbb
int
mov
inc
call
scas
jle
mov
sbbb
lcall
pop
mov
scas
aas
sub
inc
vcvtdq2ps
and
dec
lcall
pop
out
scas
cmc
lcall
cmp
inc
int
js
push
lret
mov
data16
pusha
jge
cltd
xor
and
mov
aas
popf
outsb
out
lcall
mov
out
inc
push
push
xchg
aam
ja
or
lea
mov
int3
push
adc
jbe
rcrb
mov
xchg
add
fbstp
call
cmp
insb
inc
jg
add
or
add
popa
dec
push
inc
inc
gs
call
cmp
data16
sub
test
out
ja
mov
das
js
mov
xor
test
notrack
dec
cmpsb
les
mov
xchg
dec
adc
cmpsl
xchg
sbb
iret
and
cmp
dec
test
mov
dec
sub
fiadds
les
jecxz
and
jae
jmp
mov
ljmp
push
clc
add
shll
cmc
xchg
sub
dec
mov
and
xor
add
and
aaa
repnz
imul
es
popf
mov
xchg
inc
pop
jg
ljmp
mov
enter
mov
pushf
aam
pop
cmpsl
mov
xchg
negl
sbb
jno
or
or
imull
or
cmpsl
mov
dec
push
pop
cmpsb
mov
js
daa
and
inc
mov
xor
popa
xor
jb
fneni(8087
mov
clc
rcr
sub
std
cld
jmp
inc
xor
jg
icebp
icebp
flds
adc
mov
in
push
cltd
jmp
cli
test
xor
popa
mov
lahf
shlb
dec
ds
sub
dec
push
insb
xor
test
push
add
push
cmp
test
push
loop
mov
dec
lods
dec
adc
jmp
cmpsb
mov
mov
stos
repz
andl
jg
addr16
xchg
xchg
ror
into
movsl
inc
out
push
mov
inc
adc
and
push
fwait
jge
pop
sarl
or
push
jmp
call
pop
jbe
inc
in
mov
lea
dec
mov
sub
cmp
cmp
inc
subb
and
daa
imul
adc
jnp
call
add
in
inc
loop
daa
daa
sub
jb
cmc
cld
bound
xchg
mov
movsl
pop
cmpsl
dec
mov
jecxz
popa
mov
push
sbb
mov
repnz
pop
pop
and
push
pop
lret
out
out
xchg
call
xlat
adc
ret
out
cmp
test
fs
movsl
adc
add
mov
cmp
cld
nop
cmp
sub
dec
xlat
test
sub
sub
nop
add
pusha
inc
inc
out
sbb
imul
push
in
xor
lret
push
gs
add
and
mov
jne
push
insb
mov
xchg
push
ss
int3
inc
fstpl
out
xchg
into
inc
test
inc
das
or
sti
jno
shlb
fcmovnbe
lds
leave
push
out
adc
or
fwait
mov
inc
lods
jp
lret
push
ljmp
jns
gs
or
jmp
jo
out
lret
daa
pusha
in
test
es
xchg
test
lds
mov
xchg
popf
rolb
pop
fmuls
xor
adc
inc
ss
and
lea
xor
mov
inc
cmc
ja
ljmp
imul
pop
or
andl
pop
je
imul
adc
xchg
enter
testb
pushl
rorb
add
pop
mov
cmpl
ds
cmpsl
lods
jecxz
mov
mov
or
shll
adc
jae
push
xchg
in
sub
fimuls
cmpsl
pop
push
dec
sbb
push
push
or
mov
fistpll
cs
mov
jmp
movsb
sbb
aad
cs
int3
xchg
sbb
jg
xchg
mov
aam
jle
enter
cltd
mov
cmp
inc
mov
es
pop
cltd
mov
popf
test
sbb
xor
cmc
jns
das
jo
iret
push
jmp
cwtl
sbb
outsb
call
sub
icebp
sti
inc
cmp
pop
push
push
fdivrs
push
ja
sbb
push
pusha
add
out
xlat
jne
mov
dec
fisubrs
cmpb
push
push
xor
or
inc
sarb
cmpl
fiadds
arpl
into
lret
pop
mov
add
xchg
or
add
movsb
mov
mov
mov
add
jg
test
shll
sub
mov
jo
loope
lahf
add
mov
push
enter
jbe
push
outsb
xchg
lods
xchg
dec
jg
mov
lods
dec
insl
xchg
test
dec
mov
fisubl
mov
xchg
rclb
adc
xchg
in
mov
das
dec
dec
cmp
mov
sbb
sub
je
sti
sti
or
push
sbb
sti
pop
stc
mov
mov
jne
adc
scas
sahf
pop
loopne
fsubs
es
dec
outsl
out
jle
mov
mov
pop
stos
shl
xor
cmpb
int
pop
mov
xor
call
fisttps
negl
dec
push
mov
int
cwtl
aam
jge
add
popa
dec
int
dec
or
test
add
push
dec
pop
add
jle
mov
in
jb
push
add
push
xchg
dec
sahf
les
pushf
pushf
movsl
add
mov
in
je
push
push
sbbb
push
cmpsl
jle
and
lods
repnz
pushf
fbld
dec
in
xchg
adc
cltd
lcall
jle
test
pop
push
pop
jge
arpl
test
cmp
es
jmp
or
test
cmp
inc
nop
push
sub
adc
jle
sub
enter
imul
fcmovnu
ds
test
mov
pcmpeqw
cwtl
aad
gs
aaa
jbe
lods
rcrl
inc
jns
sbb
xchg
or
push
xor
mov
lcall
pop
jb
cwtl
push
xor
push
fxch
inc
cmpsb
mov
inc
shlb
in
sbb
inc
fadds
mov
lret
jge
dec
pop
push
add
shrb
das
dec
push
or
ja
pop
push
cli
je
jbe
xchg
rclb
fwait
out
push
and
testb
xchg
sahf
push
add
xchg
mov
shll
add
je
in
push
icebp
sar
lret
add
push
loopne
iret
inc
mov
jmp
rcll
outsl
jne
jb
push
pop
cmpps
in
test
ja
cmc
xchg
inc
adc
fstps
testl
aam
jl
adcl
nop
imul
add
test
sahf
push
and
movsb
fstpt
xchg
and
ss
xchg
jae
fcmove
push
pop
push
dec
jae
adcb
dec
xor
sub
adc
push
jo
inc
lret
adc
dec
or
cwtl
mov
jl
add
push
mov
popa
movsb
inc
inc
inc
in
xor
jo
jo
pop
push
pop
ja
pop
scas
add
imul
pop
gs
cmc
in
dec
sub
lea
jnp
and
test
lods
out
aas
push
xor
mov
stc
sbbb
in
ja
jmp
or
sub
stc
add
mov
mov
and
sub
icebp
stos
insb
ljmp
adc
mov
adc
sub
loope
dec
cmpb
fwait
movsb
xchg
ds
rolb
add
mov
or
shr
outsb
xchg
insl
and
mov
xor
pop
push
hlt
ret
xor
sub
mov
test
or
clc
xchg
ficoml
popf
cmp
cmpsl
mov
into
pop
cmpsb
sbb
fdivrs
mov
jns
out
es
es
ds
dec
mov
or
js
xor
out
inc
iret
dec
ss
mov
nop
in
add
mov
rorb
loop
mov
orl
xor
lock
sub
nop
outsb
mov
pop
popa
push
out
pusha
lods
movb
lcall
lret
mov
ds
mov
shlb
out
shr
aad
insb
xchg
ds
sbb
insl
insl
cmp
ror
and
pushl
push
cmpsl
and
dec
imul
addr16
and
or
jle
sub
push
or
xor
in
pop
mov
les
out
dec
arpl
popa
je
mov
mov
movsl
push
mov
sbb
xchg
or
mov
mov
dec
push
mov
cmp
cwtl
pop
jns
pop
dec
je
inc
outsb
and
test
cld
xchg
xchg
push
add
dec
daa
jb
lea
les
js
jne
frstor
push
or
mov
sub
out
push
push
sbbb
icebp
inc
insb
push
fnstsw
lods
outsb
filds
inc
sub
push
adc
cltd
cmp
incl
lods
and
pop
iret
xlat
iret
sbb
aaa
test
mov
ja
les
dec
daa
push
mov
xchg
js
daa
mov
xchg
movsl
ja
jl
sub
rcll
test
jne
mov
sbb
inc
sar
js
dec
mov
inc
xchg
mov
movsl
adcl
and
fldt
cs
cmp
xor
mov
daa
xor
or
jnp
cmpsb
out
push
fcompl
dec
in
jp
or
xchg
rcrb
call
and
jne
ljmp
mov
pop
popf
aam
fs
add
xchg
shrb
xchg
out
js
mov
sub
stos
push
sub
xchg
xor
inc
mov
fstps
mov
lds
loop
add
sbb
sbb
loope
stos
fstpt
push
loopne
inc
inc
sbb
pop
lahf
pop
stc
test
clc
mov
cwtl
cmpb
lods
or
popf
popf
repnz
outsl
shl
mov
mov
scas
mov
lret
mov
mov
jp
daa
xor
xchg
stos
rorb
sbb
mov
cmp
lret
lods
shr
xchg
lea
push
mov
in
inc
pop
call
sbb
mov
addb
stos
dec
lahf
mov
cmpsb
add
mov
sbb
ss
fnstsw
es
stc
pop
fcoms
push
sub
push
into
int3
hlt
dec
fisttpl
js
pop
in
jnp
pop
sbb
ficoms
pop
or
int
jmp
outsl
jmp
jmp
mov
mov
mov
aas
out
cmp
jnp
pop
cld
test
push
sldt
fcomip
or
pusha
jno
mov
jne
out
inc
push
adc
push
mov
or
cld
jle
data16
lahf
add
lods
out
mov
vpmuludq
cmp
or
add
out
movsl
fsubrs
mov
fs
out
inc
and
lods
dec
pop
cmc
or
adc
fmull
cmpl
push
cmp
adc
sti
movsb
dec
mov
mov
outsl
fstpl
test
outsl
insb
xor
int
and
dec
cltd
and
sbb
pop
push
jmp
in
cmc
pop
or
test
and
aam
aad
jb
jl
out
inc
outsb
jp
mov
enter
add
and
mov
fdivr
lds
or
xor
es
addr16
inc
push
mov
pusha
xchg
pop
sub
push
and
and
or
inc
sub
scas
cmp
rdtsc
push
adc
test
lret
xor
je
dec
loop
and
jecxz
mov
inc
and
loopne
js
test
jb
jmp
fsts
mov
nop
lcall
hlt
and
inc
sbb
movsb
sbb
andb
add
fcmove
xor
and
mov
dec
cmp
outsb
ret
sbb
into
int
push
out
dec
xor
inc
lock
xchg
and
and
gs
mov
jne
into
clc
mov
push
in
ret
adc
lcall
jp
lock
adc
or
sti
add
xchg
and
mov
mov
jmp
repz
pop
jge
clc
lret
fs
scas
call
mov
ret
inc
xor
fldz
das
clc
xchg
push
in
sbb
mov
cmp
add
add
lods
sbb
jecxz
insl
push
test
cmpb
stc
push
fdivl
sbb
jle
fs
push
neg
xchg
out
dec
pop
adc
adc
cwtl
std
pop
and
pop
jae
sbb
outsl
repnz
jmp
sub
dec
pop
xchg
jb
sets
fs
imul
mov
fsubl
data16
mov
add
add
fmuls
mov
mov
test
mov
out
or
leave
adc
mov
jecxz
lcall
pop
repnz
outsb
inc
shrb
sahf
mov
xchg
push
add
lea
flds
ss
das
dec
call
lcall
cmp
decl
popf
push
or
xchg
cwtl
gs
sub
int
add
gs
mov
adc
cmpsb
faddl
mov
jnp
mov
in
adc
daa
cli
inc
mov
shrl
stos
sbb
xor
inc
fdivl
fdiv
into
lds
xor
inc
iret
lock
xor
or
bsr
xchg
fstpt
icebp
in
xor
dec
jns
in
test
mov
pop
out
repnz
mov
aas
fildl
add
enter
js
inc
je
les
cltd
cmp
outsl
push
or
add
pop
out
jecxz
mov
mov
out
push
or
addl
inc
mov
repz
testb
popa
sbb
mulb
aas
shll
push
ret
push
jb
out
mov
imul
inc
jl
sub
mov
and
mov
je
data16
sub
push
clc
mov
mov
pop
add
cmp
mov
loop
das
jmp
cmp
andl
lret
cmpsb
int3
stc
and
and
or
mov
dec
pusha
mov
mov
push
jne
inc
movsb
mov
cltd
scas
and
int3
inc
hlt
hlt
xchg
jb
sbb
lods
bound
adc
mov
and
and
lret
bound
xchg
mov
xchg
std
ds
call
sub
and
xchg
inc
push
mov
add
xchg
clc
wrmsr
push
add
fnstsw
lcall
mov
and
scas
and
pop
xor
rcl
loopne
daa
mov
inc
and
cltd
inc
out
orl
lcall
in
repnz
ficompl
mov
xchg
mov
add
xchg
or
cmp
and
pop
and
fwait
mov
mov
inc
xor
jmp
adc
int3
movswl
inc
mov
mov
jl
pop
cmp
into
lea
push
jns
cltd
shlb
and
lret
pop
in
mov
call
mov
mov
imul
addb
jns
dec
shlb
sub
xor
push
das
xchg
sti
sub
xchg
jge
hlt
stos
test
jo
push
sbb
sub
daa
inc
dec
adc
rorb
sti
and
and
lahf
cmpb
addr16
pop
cld
incl
lods
fidivrl
lcall
adc
sahf
xchg
push
inc
pop
ja
or
mov
test
mov
sub
sbb
pop
push
sti
aad
xor
in
das
and
add
aad
sub
mov
push
sub
arpl
sub
and
and
inc
cwtl
mov
shll
cli
leave
xchg
sub
in
or
and
enter
aad
les
xchg
inc
add
test
aaa
sub
out
lcall
cmpsl
out
sub
sti
push
or
in
pop
outsb
push
push
aas
jae
cmp
cmp
inc
sbb
and
xor
add
jb
xchg
out
or
aam
mov
mov
pop
inc
inc
sub
ss
jno
adc
mov
cmp
ljmp
fucomi
mov
push
sbb
jl
loope
push
add
jl,pt
stos
fldcw
lahf
popf
test
xlat
bound
dec
movsb
lret
lret
add
rcrl
mov
lods
decb
push
rcr
out
sarb
lds
loope
mov
cld
jb
aas
jle
push
pop
push
xor
loope
xchg
je
out
stos
jnp
xorl
dec
stos
data16
lods
xor
pop
jmp
pop
jnp
sbb
cmp
xor
xchg
jg
das
bound
and
stos
out
pop
pop
bound
jb
sub
dec
out
inc
push
mov
rcrl
xchg
sub
push
or
fistl
aaa
mov
insb
xchg
add
push
xor
dec
lret
cld
popf
dec
lret
mov
into
enter
into
jno
jno
mov
dec
movsl
mov
cmp
cs
cmpsl
xor
rcr
push
fstpt
cmpsl
xor
cli
mov
mov
sarl
movzbl
push
lock
shrl
xchg
enter
xlat
mov
xor
test
js
cld
js
nop
push
loope
inc
fidivl
jp
sti
adc
xchg
xlat
clc
xchg
adc
jb
mov
jecxz
cmp
jb
adc
and
pop
ja
imul
lock
xor
sar
stos
cmpsb
push
mov
stos
aas
fs
mov
push
xlat
rcr
adc
pop
das
sub
dec
divl
adc
mov
pop
mov
and
and
sub
les
insb
js
xchg
cmpsb
lods
xor
stos
adc
mov
ficomps
outsb
pop
inc
stos
out
jl,pn
cs
add
xchg
jne
imul
jle
adc
test
mov
dec
mov
ja
xchg
fsub
aas
outsb
repz
dec
sub
push
sub
xchg
and
push
mov
xlat
test
cmpsl
lea
mov
repz
xchg
fdivp
inc
or
jle
xchg
popf
js
push
shll
mov
mov
cmovp
xchg
movsl
jp
lea
push
jmp
jge
out
vcvtpd2ps
pop
pop
lods
sub
mov
inc
mov
arpl
xchg
mov
mov
sbb
xchg
sahf
idiv
mov
repz
rorb
dec
das
or
inc
in
mov
push
mov
push
jecxz
jb
fistl
pop
pop
aaa
imul
and
xchg
loop
inc
js
test
pop
std
push
cltd
out
idivb
leave
dec
je
inc
aam
loopne
pop
pop
xlat
push
mov
add
dec
jo
jmp
push
cli
movsl
out
jmp
and
in
pop
shlb
add
cli
scas
test
std
mov
xchg
jo
imul
scas
lret
or
mov
aam
xchg
imul
mov
loope
ret
and
jmp
pop
push
testl
and
dec
leave
inc
into
add
adc
and
push
or
cmpsl
scas
incb
or
jp
subb
fists
or
mov
cs
aas
fstps
inc
push
xchg
es
lret
lret
sbb
in
sbb
xchg
repnz
popf
js
mov
int3
enter
jae
xchg
dec
std
addl
shll
sub
pusha
imul
cltd
mov
push
imul
xorl
cs
movsb
aam
xchg
xor
lcall
in
xchg
sbb
push
sahf
and
cli
ds
or
pop
cmpsb
adc
nop
sahf
scas
ja,pn
pop
and
xlat
xchg
add
lret
mov
pop
add
add
call
imul
daa
ss
nop
sub
mov
aaa
jl
adc
jecxz
cmp
push
cmp
pop
les
mov
cmp
mov
and
lahf
sbb
add
push
clc
cmp
cmp
jmp
jno
push
inc
iret
je
cwtl
mov
ja
xchg
clc
sahf
inc
pushl
fsubrs
xchg
test
sarl
push
mov
mov
in
mov
mov
and
mov
mov
mov
in
push
inc
xor
inc
out
jp
in
fmuls
push
sub
call
jae
fstpt
test
pop
xor
xor
shl
cltd
sbb
lock
popf
mov
mov
add
movsl
shlb
dec
aam
pop
imul
dec
sahf
add
cmp
jl
ljmp
mov
mov
xchg
pop
push
outsl
mov
subb
sub
push
cltd
inc
mov
outsl
int3
jns
addr16
cmp
adc
jo
jae
xor
lahf
out
mov
push
mov
pop
cs
out
adc
data16
lcall
fcoms
xchg
or
and
mov
and
aas
and
int3
xchg
jge
mov
loop
mov
jnp
icebp
jb
pop
sbb
and
ret
int3
fmull
mov
or
fsubrs
xchg
int3
into
lcall
fsubr
xchg
push
aad
sub
ljmp
loopne
push
mov
insb
enter
outsb
mov
sub
imul
adc
mov
imulb
bound
dec
testl
add
imull
movsb
ljmp
ja
mov
xor
inc
inc
xchg
loop
loope
dec
cmc
pop
dec
mov
es
sub
and
add
daa
test
mov
insb
daa
fimull
scas
mov
jmp
out
cmpl
int
push
inc
mov
jae
adc
and
js
outsl
sub
jae
lahf
and
jmp
xchg
cmp
pop
dec
push
xchg
sbb
xchg
test
xlat
inc
and
in
mov
adc
or
lods
cmp
stos
cmp
stc
mov
xchg
xchg
outsb
enter
pop
xchg
xor
push
pop
mov
pop
inc
outsl
cmp
xor
sbb
mov
inc
pop
bound
clc
fcmovbe
push
inc
das
or
sbb
cmpsb
adc
adc
inc
sbb
imul
mov
xchg
enter
cld
and
mov
std
das
popa
rclb
repnz
mov
cld
sbb
pop
adc
enter
jecxz
call
mov
push
xor
mov
mov
cld
pop
xchg
loope
clc
aam
sbb
js
inc
add
pop
jg
pop
pop
in
test
sub
pop
and
rolb
aas
aas
pmullw
mov
jne
adc
js
pop
daa
jb
xchg
pop
xor
xor
outsl
pop
inc
cld
dec
lods
xchg
jmp
and
leave
mov
push
cmp
and
xlat
fnstsw
fsubs
jecxz
pop
push
push
rcrl
fwait
xchg
inc
pushf
lret
loopne
aad
adc
jg
mov
add
xchg
push
int
cmp
repnz
test
inc
pop
ret
sbb
es
mov
out
out
enter
je
movsl
mov
inc
out
dec
cli
push
fdivs
xor
clc
pop
mov
mov
lods
int
sbb
out
call
fnstsw
in
test
mov
push
popa
mov
cmpsl
in
mov
cmpsl
dec
jbe
mov
dec
sbb
add
fst
mov
push
jns
popa
inc
xchg
imul
mov
xchg
push
adc
and
test
pop
nop
je
push
and
es
mov
dec
aaa
jnp
in
loopne
daa
jb
and
aad
mov
push
mov
aad
or
js
packsswb
cld
jle
cmc
lods
or
daa
mov
xor
add
jne
lret
mov
loopne
ljmp
movsl
lcall
mov
dec
or
test
jbe
cli
mov
mov
dec
xchg
incb
leave
cmp
adc
dec
adc
cld
pop
lea
lock
call
dec
pop
das
outsb
leave
iret
aaa
mov
mov
dec
mov
inc
sbb
out
jno
sbb
jbe
adc
jae
fstps
xchg
sahf
xor
and
mov
push
cmp
sbb
mov
push
sub
mov
sub
pop
rolb
sub
xchg
mov
arpl
and
xor
adc
push
js
test
ret
shr
enter
sub
int
mov
rol
mov
adc
icebp
pop
mov
insl
cmp
add
fistps
pop
mov
pop
push
repz
xchg
inc
push
shlb
jae
push
andl
stc
frstor
fwait
pop
push
sbb
pop
test
rol
xchg
nop
stc
shrl
xchg
pushf
mov
shll
jmp
jnp
jge
pop
mov
cmpsl
and
mov
addr16
dec
jno
xor
or
sub
loope
mov
add
mov
movsb
add
shlb
aam
jp
mov
mov
and
adc
xchg
shll
inc
les
mov
stc
outsb
xorb
test
movb
lock
daa
subl
int
aam
inc
xor
adc
dec
aad
sbb
mov
adc
movb
and
lods
iret
sub
cmp
je
pop
repnz
stos
inc
stos
cld
sbb
gs
add
inc
or
cmp
push
mov
pusha
out
sbb
dec
icebp
in
or
xchg
das
scas
jmp
imul
sub
mov
pop
sti
push
mov
jl
mov
lods
out
sbb
popa
outsb
clc
adc
into
data16
leave
imul
iret
fisubl
les
push
dec
push
cmp
sbb
adc
adc
mov
das
andb
xchg
mov
or
push
push
mov
jnp
imul
lahf
stos
jb
or
cmp
dec
push
xchg
fiaddl
test
and
imul
in
jge
std
add
sub
dec
test
jp
rorl
insb
jmp
les
mov
jno
push
aaa
sub
push
popf
add
mov
mov
cmp
mov
add
das
pop
sahf
hlt
xchg
mov
xlat
icebp
inc
imul
inc
or
lahf
mov
jle
out
xchg
outsl
or
in
je
xchg
push
cmp
push
aas
lret
cmp
pop
test
or
sbb
jecxz
pusha
out
jg
fwait
or
add
sbb
adc
bound
loope
jp
jg
inc
mov
add
cmp
and
push
loop
adc
mov
int3
push
pop
sub
jl
lcall
imul
mov
aaa
xchg
jb
loope
xchg
shl
pushf
pop
fs
sub
sarb
pushf
and
mov
or
inc
into
jmp
fneni(8087
xor
pop
pop
leave
pop
push
add
cmc
aad
push
mov
out
lahf
push
imul
shrl
jl
test
sub
dec
xor
xor
test
sbb
in
inc
pop
push
cltd
pop
sbb
mov
mov
stos
inc
repnz
mov
hlt
sti
insl
out
test
test
sbb
lea
je
iret
push
imul
pop
sub
rolb
sub
in
mov
adc
jmp
outsb
sub
xchg
dec
sbbb
mov
jns
jl
ja
icebp
test
pop
pusha
pop
dec
dec
stos
sbb
fsts
xchg
xchg
mov
inc
stc
enter
push
push
enter
mov
mov
cltd
and
mov
in
mov
mov
sub
pop
mov
inc
stc
out
xchg
int3
add
mov
push
ret
nop
ds
ds
fld1
adc
inc
xchg
push
pop
mov
jnp
idivl
or
xchg
xchg
add
jb
mov
jg
rcrb
dec
mov
syscall
adc
pop
aas
add
or
mov
jae
ficoml
add
add
xchg
pop
mov
cwtl
jmp
xchg
sub
scas
cld
scas
test
xor
mov
cmp
int
int
xchg
sub
in
add
mov
in
or
mov
pop
jne
jp
jg
popf
xchg
jne
xchg
arpl
aad
daa
movsb
in
and
xor
cmp
rclb
scas
jg
out
and
or
fsubrs
enter
stc
nop
notl
jns
repz
push
jl
xor
or
and
xchg
in
and
push
jle
cmpsb
cmp
mov
dec
fidivrs
lods
push
lods
lock
outsl
pushf
push
xchg
push
dec
shr
shrb
and
push
loop
jp
ret
stos
subb
push
aaa
adc
fistpl
inc
arpl
pop
sbb
jb
pop
push
stos
sub
hlt
or
lcall
subb
dec
rorb
gs
fstpl
mov
mov
cmp
sub
movsl
push
or
xchg
mov
aam
and
loope
loop
xor
xor
xchg
popf
jle
in
xchg
xor
pushf
push
sub
fisubrs
ljmp
daa
sub
pop
cmp
mov
push
sub
mov
imul
jge
scas
sub
movsb
loope
gs
fs
int3
adc
in
or
xchg
pop
mov
std
mov
inc
cltd
push
mov
add
and
mov
iret
pop
mov
adc
dec
add
inc
dec
lret
sub
mov
stos
popa
das
xchg
push
rorb
xor
pop
mov
push
popf
mov
loopne
daa
jp
push
rcll
iret
daa
mov
jmp
aad
and
stos
sub
movsb
aas
sbb
xor
out
in
das
insb
hlt
dec
dec
test
adc
add
inc
ret
sub
enter
cmp
insl
adc
mov
outsb
pop
lcall
outsb
imul
xor
add
sub
loope
mov
adc
mov
lods
int3
mov
in
sbb
inc
and
int
and
lods
xlat
adc
std
xor
adc
push
inc
mov
out
lock
xchg
icebp
loope
js
lret
jne
dec
imul
push
and
inc
fsubs
jae
aam
cmpsl
inc
cmp
and
sahf
sarl
push
inc
inc
mov
inc
push
outsb
sub
sub
test
test
das
js
adc
mov
sahf
pop
pop
stos
mov
sar
adc
mov
mov
fs
cmp
pop
out
sbb
xor
xor
mov
ss
flds
pop
jmp
lret
sar
enter
leave
int
gs
add
mov
mov
dec
push
aad
adc
sub
lahf
shl
addr16
xor
dec
shr
xchg
dec
xlat
push
or
and
and
shll
push
sbb
xchg
sahf
push
adc
scas
push
cmp
mov
bound
or
std
sbb
pop
shrl
shrl
imul
aaa
and
in
scas
push
and
outsl
lea
ds
imul
lret
imul
jle
jns
loopne
cmp
push
ljmp
push
dec
lcall
and
std
cld
jecxz
sub
mov
push
dec
inc
inc
bnd
loopne
shlb
mov
lea
fs
dec
rorl
faddl
mov
sbb
cmc
int
sub
cmc
aad
cmp
jge
mov
jae
push
scas
repnz
mov
movsb
mov
mov
pop
xor
pop
inc
adcl
mov
je
movsl
xchg
sub
or
pushf
add
lock
dec
push
jo
movsl
out
mov
and
les
pushf
cmp
sub
jae
mov
sub
repz
imul
mov
in
jae
hlt
popa
loopne
pop
test
mov
outsl
pop
xchg
cli
popa
stc
lods
push
add
out
sub
nop
fdivr
xor
or
pop
xchg
add
fcomps
stos
jl
push
pop
jnp
mov
and
shll
mov
add
pusha
push
lods
popf
add
or
pop
push
bound
sahf
outsb
mov
out
and
sub
mov
out
mov
in
aas
pop
xlat
inc
pop
mov
push
mov
nop
mov
mov
xchg
jno
imul
lcall
pop
in
mov
xchg
shlb
pop
and
mov
inc
dec
je
mov
jbe
adc
sbb
push
xor
sub
push
add
dec
pop
fiaddl
fadds
dec
mov
dec
xchg
sbb
inc
sbb
loop
mov
mov
stos
bound
cmp
sbb
arpl
add
sub
sub
mov
add
xchg
push
gs
add
repz
bound
cmp
cwtl
dec
cmp
mov
inc
pop
sub
out
sbb
dec
cltd
scas
int
aas
insb
add
imul
mov
inc
mov
jge
dec
shl
ror
xchg
loope
lret
xor
and
fnstsw
cmp
mov
arpl
jne
cmc
xchg
je
dec
int
jns
movsb
in
stc
cmp
arpl
sahf
inc
cs
imul
jne
ds
int3
ja
popf
sub
dec
leave
insb
xor
or
mov
stos
mov
pop
adc
repz
bound
sub
mov
mov
cmp
lods
repnz
enter
loope
adc
pop
pop
gs
movsl
ds
rcl
and
mov
mov
adc
es
push
mov
jmp
pop
mov
or
testl
aad
inc
mov
sub
adc
pop
pop
and
out
cmp
jge
ds
xor
sub
pop
mov
arpl
jl
outsb
pusha
dec
push
and
adcb
mov
mov
sbbl
and
push
aaa
pusha
jp
out
enter
push
jns
push
mov
add
inc
cmpsl
ror
clc
js
aaa
pop
sbb
mov
repnz
mov
cld
stos
leave
lods
shlb
sub
pop
rorl
aad
inc
test
push
scas
cs
or
aaa
lods
sbb
pusha
mov
dec
add
cli
inc
xor
jmp
mov
add
sub
cs
aad
cld
mov
pop
pop
push
sub
mov
icebp
lock
push
inc
test
inc
cld
mov
xor
push
rorl
incl
sbb
dec
sub
jns
inc
adc
das
lahf
mov
enter
fstl
adc
shlb
adc
xchg
out
mov
adc
cwtl
xchg
out
sub
iret
cwtl
mov
sti
gs
int3
clc
jle
xchg
shr
pop
jle
lea
aad
pop
shll
fld
ja
inc
or
incb
push
mov
pop
mov
pop
jo
dec
mov
out
sub
std
xor
cmpsl
loope
mov
dec
lret
std
movsb
in
pop
pop
fsubr
mov
xor
adc
stos
dec
nop
add
adc
out
or
add
mov
push
cmp
sub
sbb
out
stos
xor
jne
sub
mov
pop
loop,pt
int
mov
pusha
jmp
push
jbe
ret
dec
dec
and
cmp
xor
jl
inc
fs
pop
cmp
push
aaa
mov
mov
rcrl
in
hlt
mov
xor
sbb
insb
scas
mov
lahf
inc
add
ss
pop
dec
add
cwtl
jge
dec
iret
pop
dec
iret
addr16
repz
xchg
sub
pop
jo
sbb
movsl
push
or
cmp
push
jbe
mov
les
sbb
pushf
sbb
rorb
mov
push
cmp
mov
imul
repz
mov
test
jp
arpl
test
fsincos
sbb
mov
aam
mov
mov
jne
ljmp
fsubr
and
imul
fistps
out
xlat
pusha
movsl
xlat
sarb
mov
out
cwtl
shlb
jne
pop
insb
and
jns
js
in
pop
xlat
out
jb
sahf
pop
add
dec
arpl
inc
add
cmp
jge
loope
cli
inc
jo
cli
mull
adc
aam
fdivl
jbe
mov
xlat
adc
movsb
sti
test
pop
jnp
push
or
out
arpl
sub
ja
scas
mov
loop
cmp
xchg
in
inc
mov
xchg
lods
xor
faddl
xchg
fcoms
test
sarl
sbb
mov
add
xchg
gs
jbe
cmp
cmpsb
test
and
sub
out
pop
dec
sbb
dec
and
subb
pop
ja
ror
pop
xorl
xor
push
mov
lock
dec
stos
pop
dec
xchg
sbb
sbb
xchg
push
mov
sahf
jbe
rorl
sub
and
push
and
iret
rdtsc
xor
ret
pop
dec
ficoml
into
insl
pop
sarl
enter
or
adc
fiadds
cmp
pop
xor
xrelease
add
imul
add
daa
or
adc
xchg
loop
addr16
fdivr
jge
je
jo
push
dec
mov
dec
in
std
dec
into
int
add
mov
dec
cmp
fdivr
popa
inc
pop
inc
cmpsl
fwait
lea
dec
nop
das
cmp
pop
orl
adc
fists
shrb
mov
dec
fs
mov
stos
xor
or
and
mov
stc
or
xchg
mov
mov
pop
lock
loop
leave
and
lret
lcall
test
popa
or
sub
inc
test
inc
test
insb
adc
movsl
popf
pop
ja
sti
dec
mov
dec
fmull
out
jae
inc
sbb
cmc
pop
push
mov
outsl
lret
inc
fistpl
jg
lods
jp
mov
jle
aas
sbb
insb
adc
aaa
aas
into
out
mov
cltd
jnp
xchg
push
cmp
jb
xor
insl
mov
xchg
sub
mov
push
inc
enter
jns
imul
sbb
fsubrl
push
mov
out
gs
pop
push
add
mov
lahf
shrl
mov
loope
lret
sub
repz
jecxz
or
push
mov
popa
ret
mov
cwtl
cmc
jecxz
in
enter
mov
aad
adc
xchg
lods
fs
xor
icebp
imul
sbbb
and
repnz
imul
ljmp
aam
dec
xor
mov
and
iret
orb
jg
pop
icebp
cs
scas
mov
adc
push
repz
fwait
jo
test
stos
pop
or
lods
stos
jg
out
mov
sarl
jbe
xchg
xorl
cmp
mov
ret
loopne
xor
dec
imul
push
xor
jo
push
int3
icebp
loopne
sbb
add
inc
fmuls
and
mov
arpl
loope
inc
in
pushf
stos
cmpsl
push
cwtl
mov
sahf
pushf
out
aaa
xchg
jl
xchg
push
fisubrl
mov
and
mov
push
call
lods
pop
aaa
pop
insb
sti
push
insb
clc
dec
dec
dec
out
out
mov
call
sbb
or
mov
pop
dec
xchg
cmp
imul
sbb
jb
push
aaa
push
std
lods
ret
mov
dec
leave
adc
out
test
cmpsb
adc
adc
fsubrs
pop
addr16
shlb
mov
in
sub
in
cmpsb
test
stos
push
sub
bound
aam
in
cmp
call
xchg
cltd
sahf
sarl
push
inc
xor
cmpsb
or
dec
sub
mov
lods
stc
push
stc
inc
mov
into
int
add
addr16
insb
sbb
fsubr
jge
addr16
dec
mov
mov
lret
inc
fbstp
ds
dec
jg
pop
into
mov
pushf
mov
shr
ja
aas
nop
imul
stos
test
iret
call
xchg
lcall
jno
pusha
scas
aam
pop
cmp
lahf
mov
imul
adc
jg
out
clc
cltd
mov
pop
hlt
push
mov
repz
pop
jnp
sub
pop
fnstenv
jmp
add
test
sbb
xlat
xor
cmp
lock
mov
push
cmp
cwtl
enter
adcb
subps
add
mov
pop
or
icebp
sub
out
or
xchg
sub
xchg
push
jb
dec
imul
fcmovne
ret
mov
test
cmp
dec
jg
hlt
pop
mov
ret
add
mov
sub
movsb
jb
xor
push
cmp
pop
fnstsw
jae
or
stos
imul
shlb
cltd
fnstcw
loope
xchg
fists
and
cmp
rcr
test
pop
clc
fisubrs
cmp
cmp
pop
lcall
push
push
aad
sar
inc
sbb
sarb
ljmp
shrl
adc
mov
out
pop
xchg
lret
int
outsl
dec
adc
test
loopne
xlat
leave
int3
push
mov
push
idivl
ljmp
and
icebp
lret
or
cld
out
ret
mov
or
cld
adc
popl
lret
cmp
adcl
lcall
stos
ret
pop
imul
and
sbb
ret
dec
gs
xchg
cs
jbe
jno
dec
mov
push
cld
stc
cmp
push
dec
or
pop
mov
js
out
adc
rcrl
ds
xchg
aad
daa
pop
cmpsb
and
lret
js
push
js
pop
cltd
fsubrs
icebp
xchg
add
insb
lods
mov
cmc
lds
adc
dec
mov
hlt
rcl
aas
cmp
jl
jb
dec
pop
outsl
pop
ds
fsubrs
adc
mov
cmp
cmp
dec
jns
jmp
ret
jo
sbbb
jb
fsubrp
add
cmp
stc
in
add
inc
xor
ret
xor
or
xchg
sbb
popa
repz
cmp
adc
sub
jge
push
mov
rcl
nopl
stc
loop
mov
push
popf
mov
pop
sub
mov
mov
cmp
mov
into
leave
mov
sub
sbb
xor
pavgb
mov
mov
cltd
cltd
jns
inc
movsb
out
jo
aad
sub
mov
pop
test
popa
xchg
pushf
test
sub
or
pop
out
sub
xor
pop
push
insl
add
xchg
mov
pop
and
lods
sbb
inc
pop
cmp
sub
cld
pop
sbb
mov
push
mov
xchg
mov
dec
out
pop
adc
xor
xchg
daa
mov
lds
dec
add
ja
pop
loop
xchg
pop
inc
das
pop
pop
aam
dec
out
jl
mov
pop
add
sbb
das
sub
mov
mov
push
ss
or
adcl
push
xor
xchg
imull
sbb
cwtl
mov
ljmp
rcl
jns
mov
push
sub
dec
das
mov
xorb
pop
pop
mov
lock
cmp
push
jecxz
and
mov
pop
fcoms
addr16
push
sbb
cmp
int
fldt
adc
jp
and
add
push
adc
dec
out
loop
xor
movsl
pop
mov
cld
out
xorb
sub
xchg
insb
fildl
shrb
stc
cmp
test
xor
adc
dec
adc
mov
push
sti
pop
mov
mov
rcll
push
jmp
mov
pop
mov
arpl
xchg
fldlg2
add
out
or
js
mov
or
popa
adc
mov
ja
dec
fldt
out
push
test
dec
aad
inc
lds
sbb
cwtl
ds
mov
dec
or
pushl
fistl
mov
test
int3
lds
mov
pushf
nop
add
loop
daa
dec
adcl
cmp
xchg
mov
js
mov
cmpsl
inc
cmp
push
and
scas
mov
cmp
mov
jmp
adcl
daa
insb
test
stos
mov
mov
aas
adc
pop
je
push
and
inc
icebp
test
xor
inc
mov
fdiv
mov
imul
mov
mov
fisttps
xchg
int3
iret
and
jl
sub
push
sbb
mov
inc
pusha
repz
sahf
or
fs
mov
lcall
sub
cltd
orb
inc
je
stos
gs
xchg
cwtl
dec
clc
jle
mov
sbb
or
nop
cs
lea
es
iret
dec
arpl
ror
pop
push
insb
stos
mul
jmp
xor
and
cmp
push
mov
movsb
es
test
and
push
xor
mov
je
lds
mov
scas
dec
jae
xchg
dec
insb
mov
lret
inc
mov
add
add
adc
test
xchg
stos
insl
lods
addr16
pop
cmpl
out
andl
jge
jmp
add
jbe
cmpsb
xor
xchg
iret
test
mov
imul
sbb
int
add
out
push
mov
add
add
out
movsb
lcall
sbb
jb
decl
ret
mov
mov
sub
mov
dec
mov
mov
enter
adc
mov
xchg
je
mov
stos
mov
and
push
pop
lcall
xchg
lret
mov
jbe
inc
adc
movsb
hlt
add
adc
sbb
mov
dec
sub
sub
in
ljmp
and
rorb
cs
push
hlt
daa
sahf
dec
push
push
adcl
repnz
ja
mov
test
jle
cli
stos
jbe
enter
stos
mov
adc
jle
mov
dec
mov
lea
adc
scas
jp
insb
or
or
jmp
scas
jno
jbe
mov
es
ja
sbb
or
mov
out
rclb
jne
inc
cmpsl
cmpsl
dec
adc
lea
cmpsl
or
cmc
push
jbe
cli
sbb
insl
bound
dec
imul
or
pop
mov
ret
xchg
inc
es
sbb
adc
gs
ds
stc
cs
stc
loope
mov
push
push
dec
and
sbb
loopne
into
inc
pusha
mov
fcomps
andl
dec
pushf
pushf
sub
cmp
dec
adc
mull
pop
cld
daa
cli
test
pusha
xchg
shrl
test
out
rol
jo
dec
test
inc
mov
xor
xor
icebp
sarl
push
dec
mov
leave
sbb
pop
xchg
bound
jge
js
shl
ljmp
notb
testl
mov
out
sti
cmp
cmp
sub
mov
inc
jp
xchg
cmp
cli
xor
mov
fabs
stos
stos
fucomp
cmp
pop
imull
cmpsb
push
or
and
cmp
cli
leave
adc
idiv
inc
mov
jmp
push
in
mov
add
cmp
mov
mov
adc
cli
sbb
inc
jnp
notb
add
notb
add
add
dec
pop
add
push
mov
test
and
sahf
adc
dec
push
fcoml
push
pop
rolb
aad
lret
insb
ret
mov
cli
xor
push
loopne
in
and
push
add
xor
xor
mov
add
inc
test
pop
adcl
xchg
dec
push
jp
cmpsb
pusha
pop
jae
and
insb
jecxz
sub
cs
push
int3
lds
dec
or
repnz
enter
mov
cmpsb
xchg
inc
test
jmp
jne
mov
push
inc
add
dec
in
dec
mov
xor
mov
cmpb
iret
pop
mov
inc
push
aad
stos
lcall
ret
leave
stc
sbb
clc
sbb
pop
pusha
imul
add
mov
mov
inc
das
call
or
movsb
cmp
xor
or
xor
cmc
add
movsl
cmp
mov
dec
pop
sahf
in
inc
push
shlb
jle
lea
or
test
aaa
mov
mov
test
out
mov
sbb
push
inc
inc
and
mov
popf
fucomi
pop
repnz
xor
aaa
dec
add
adc
ljmp
cmp
adc
cmp
cmpb
call
jae
cmpsl
adc
vunpckhps
mov
cmpsl
adc
int3
popf
mov
data16
into
fidivrl
adc
popl
and
push
sbb
adc
lea
adcl
mull
or
movsl
cmpl
dec
and
mov
insl
mov
cltd
insl
clc
fisubl
enter
push
sub
cld
dec
sub
mov
repz
sub
xchg
ret
loope,pn
mov
jge
mov
sub
xor
inc
les
std
jae
inc
mov
gs
sbb
dec
fldl
orl
imul
push
add
test
push
mov
shll
aad
jle
setg
loope
push
gs
ljmp
dec
lods
mov
adc
fadd
xchg
jo
test
fimull
mov
adc
mov
push
jmp
inc
sbb
mov
pusha
or
ss
add
lods
cmpsb
mov
mov
repz
test
inc
pop
ja
cld
andb
adc
pop
leave
mov
pop
or
test
imul
xchg
push
mov
pop
and
sbb
les
lea
ja
lock
inc
out
gs
mov
xorb
mov
cmpsb
bound
pop
jno
jg
inc
xchg
mov
or
arpl
cmp
mov
cmpsl
inc
jae
mov
inc
ret
out
inc
mov
and
ret
mov
push
sti
js
shrb
and
rcrl
cs
mov
ja
xchg
loope
sbb
inc
push
xor
jnp
in
jae
fistpll
adc
jo
outsl
cmp
jg
mov
sub
nop
shll
clc
dec
les
pop
dec
test
mov
cmp
insl
xchg
call
sub
xchg
add
cmpsl
out
inc
cs
or
repnz
pop
push
jb
mov
ret
lds
out
sub
hlt
test
inc
aam
push
lds
add
xchg
test
aas
xor
jnp
add
fwait
mov
and
inc
fucomi
adc
outsl
mov
cmp
jge
mov
in
xchg
mov
repnz
addr16
call
inc
push
push
xchg
paddw
jo
lods
and
cld
sub
inc
test
push
popa
in
pushf
mov
cmp
push
pop
add
popf
in
dec
sub
sarb
fdivrl
or
pop
pop
add
adc
inc
mov
jne
jb
push
xchg
imul
aam
adc
cmpsb
out
and
push
or
fdivs
xor
mov
add
sub
icebp
aas
ljmp
xchg
push
pop
sub
cli
inc
add
stos
push
stos
ror
insl
decl
or
mov
xor
sbb
jne
bound
push
std
xor
dec
jecxz
out
and
insl
fadd
call
and
add
leave
or
mov
std
sub
out
xabort
push
inc
push
sbbb
mov
xchg
scas
aam
mov
js
mov
sub
nop
fistpll
push
sub
iret
mov
cwtl
cmp
fwait
scas
lods
mov
or
cli
xchg
push
lods
push
dec
dec
arpl
and
divb
or
cmp
mov
roll
aas
dec
pop
lahf
cmp
and
aam
mov
lcall
push
aam
loope
test
aaa
push
inc
int
inc
daa
cmpsb
fistl
dec
mulb
pop
negb
fcmovne
stc
pop
jge
dec
jns
es
or
push
cmp
cmp
xlat
mov
xchg
mov
mov
pushf
dec
in
inc
int3
mov
mov
cli
lahf
push
pop
sbb
mov
pop
aaa
adc
pop
lock
xchg
and
scas
sti
xchg
scas
fdivrs
in
fcomip
jns
lahf
sub
cld
les
cmpsl
sahf
cli
rcll
aad
mov
dec
mov
dec
lods
std
sbb
xchg
stos
add
ljmp
push
loopne
lds
or
push
pop
pop
and
test
mov
scas
loop
mov
subl
int3
mov
mov
iret
dec
jae
and
stos
add
negb
adc
mov
push
xchg
nop
shlb
ljmp
mov
gs
xchg
in
pop
icebp
cmpb
jp
fldl
ficoml
je
sti
mov
data16
aad
sub
pop
add
mov
ljmp
xor
push
xor
mov
pop
pop
cmp
add
in
idivb
or
or
cmp
push
jg
fdivrl
ss
ja
rcrb
int
faddp
cs
shlb
addb
jo
pop
daa
and
and
jmp
fnstsw
fadd
push
sub
sub
fistpll
fnstsw
sbb
sbb
stos
jecxz
jns
pop
or
sub
mov
push
imul
movsl
scas
push
icebp
or
das
shll
push
js
xchg
imul
xor
and
adc
cli
lret
call
les
inc
les
jnp
loop
inc
fimuls
dec
xchg
cmc
xor
push
pop
jge
fdiv
cmp
pop
lods
cmp
pusha
mov
mov
mov
mov
int
cld
push
pushf
jle
jl
into
and
cmp
or
loopne
out
out
push
gs
dec
cmpsb
dec
filds
sbbl
jno
mov
inc
jno
push
dec
cmp
invd
mov
insb
jg
repz
mov
movsl
out
jp
xchg
ja
cwtl
dec
sbb
popa
lahf
into
or
mov
pop
ljmp
int3
push
mov
xor
insl
jae
in
insb
push
inc
mov
shlb
imul
inc
pop
mov
inc
or
push
iret
add
out
mov
add
adc
push
pop
jmp
lret
insl
push
xchg
fwait
pop
adc
xor
ja
pop
cli
sub
xor
adc
dec
jmp
jg
sbb
mov
push
inc
mov
fstpt
xor
push
mov
sbb
push
cmp
pop
xor
mov
xor
push
loop
mov
test
mov
pop
jg
fisubl
jbe
mov
jnp
jmp
imul
xor
cmpb
adc
iret
push
or
imul
pop
mov
pop
mov
cld
adc
inc
into
jnp
cwtl
imul
out
loopne
xor
int3
xchg
mov
push
bound
loop
jle
mov
lods
cmpsl
jle
test
lods
and
jbe
mov
les
mov
dec
addr16
adcl
mov
xchg
cmp
sbb
mov
or
out
add
cmpsb
js
jb
daa
arpl
fwait
dec
movl
popf
push
jbe
sti
push
sbb
or
enter
cmp
ret
fsts
ljmp
cld
jg,pt
sub
loopne
jne
xchg
int
popf
cmp
int
in
dec
ljmp
push
ss
pop
lods
push
mov
and
test
fs
rclb
mov
ror
and
mov
sbb
jle
pop
pop
out
unpcklps
sbb
sub
jne
mov
push
jno
mov
mov
jg
push
iret
xchg
popa
push
xor
out
or
xor
test
mov
cmp
insb
ja
jg
xor
fdivs
test
pop
push
cld
stos
popa
xlat
pop
inc
lcall
cmp
rclb
ja
cmp
inc
jns
frstor
les
shlb
jae
rorb
lea
cltd
test
test
push
test
adc
jl
push
lcall
add
cmpsb
mov
lret
sbb
in
xchg
xchg
sub
or
seta
jge
ja
jo
cmp
mov
stos
hlt
mov
mov
push
or
pushf
in
enter
pop
inc
add
sub
test
addr16
mov
aad
mov
pop
dec
mov
aad
in
or
scas
push
je
sub
aam
sub
xor
aam
mov
dec
xchg
sub
pusha
loope
ja
xchg
mov
leave
scas
xchg
jl
loopne
cmp
sub
inc
and
aaa
dec
cmp
mov
or
out
aaa
cmp
mov
xchg
sbb
pop
dec
aas
sub
adc
adc
and
add
mov
outsb
clc
mov
pop
pushf
lods
xchg
sbb
dec
sti
fsubl
movsb
rol
lods
cmp
fcoml
sahf
jecxz
andb
jbe
scas
dec
xor
stc
andb
ret
les
mov
lds
jo
mov
cmc
sarl
cmc
mov
fwait
adc
add
mov
mov
sti
push
mov
out
aas
pushf
je
lret
sub
aam
inc
hlt
xor
add
es
lret
icebp
lret
sub
dec
aaa
repz
bound
xor
out
and
jmp
pop
mov
adcb
xchg
jecxz
xchg
jecxz
pushf
adc
leave
add
arpl
das
or
push
lods
lret
scas
mov
dec
or
outsl
rclb
clc
push
test
push
mov
sub
fidivrs
rcrb
or
xchg
mov
fdivs
hlt
jl
sub
pop
nop
dec
cltd
daa
decb
cmp
imulb
jecxz
jo
fmulp
jnp
inc
or
outsb
mov
cmp
push
add
cmpl
iret
or
jecxz
push
xor
jp
dec
mulb
cmp
aad
stos
push
or
pop
int3
icebp
nop
pop
jg
int3
xlat
mov
cmp
push
inc
mov
xor
call
xchg
rcrl
pop
and
shrb
add
ret
xchg
add
hlt
bound
test
lea
jns
xor
cmp
jae
adc
in
shll
sbb
ljmp
and
mov
repnz
loopne
out
outsl
jae
adc
sbb
int3
loope
xor
pop
cmp
movsl
stos
mov
jns
push
pop
mov
imul
jnp
inc
mov
add
cli
xor
test
repz
orb
test
jl
cld
xlat
mov
mov
loope
pop
xchg
imul
sub
xor
inc
xchg
or
movsl
icebp
ret
and
mov
dec
dec
cmp
insb
pop
mov
insb
popa
xchg
in
sub
jns
incl
inc
cmc
adc
mov
xor
dec
inc
lret
pop
jne
jne
or
xchg
pop
adc
or
and
outsb
dec
imul
adc
or
xor
jnp
adc
stos
pop
adc
dec
mov
cwtl
fldt
mov
inc
sti
cmp
sub
js
sub
nop
outsl
sbb
dec
push
outsl
int
pop
iret
mov
cmp
add
jmp
aaa
add
xor
xchg
pop
fsubp
iret
add
out
jmp
insl
pusha
ret
cs
outsl
inc
or
aad
sahf
sbb
sbb
fsubrl
mov
adc
iret
imul
jae
lds
scas
ficoms
icebp
outsl
xor
addr16
out
jg
enter
mov
lret
lret
outsl
stc
xchg
vmulsd
clc
xchg
lret
and
adc
or
rcl
pusha
sub
sub
cmp
test
rclb
addr16
popl
cmp
imul
dec
mov
add
loopne
fisubs
cmp
xor
rcrb
insb
les
or
lea
xchg
adc
pop
add
sub
stos
adc
cmc
rolb
loope
sbb
pop
push
fs
pop
mov
xchg
testl
jns
je
je
push
push
fs
xor
mov
loop
jge
jb
out
sub
pop
movsl
aam
or
test
jmp
push
sahf
mov
insb
mov
notl
lcall
fstps
repnz
enter
inc
je
mov
je
mov
push
mov
dec
scas
lcall
xchg
push
lods
and
mov
icebp
adcl
xchg
orb
mov
sub
xchg
sbb
fsubr
mov
mov
sub
dec
mov
int
aam
in
inc
push
loop
cld
mov
icebp
dec
addr16
sbb
xchg
add
pop
aam
insb
aam
or
xchg
sbb
cmpsl
add
or
mov
test
mov
push
loop
push
xor
sbb
add
xchg
movsl
xchg
jb
movsl
bound
addr16
pop
iret
out
scas
jb
sbb
jae
mov
push
sub
inc
adc
seto
mov
mov
call
mov
imul
std
in
insb
xor
sarl
mov
mov
stc
pop
or
loop
xchg
add
xchg
shlb
xchg
fs
outsb
pop
xchg
in
loop
shll
jbe
sub
test
mov
fldln2
mov
fsubs
jno
push
cld
iret
daa
or
outsb
sbb
mov
sbb
in
adc
jnp
pop
leave
iret
or
jne
adc
push
push
icebp
rclb
faddl
mov
pop
addr16
cmp
push
aam
adc
xchg
test
insl
mov
arpl
sub
pusha
jb
out
jae
popf
test
mov
or
pop
in
mov
xchg
dec
jmp
and
insb
rcr
push
adc
ret
adc
dec
pop
jae
cmpsl
cwtl
in
jmp
inc
and
fidivs
adc
out
pop
jns
repz
dec
shll
iret
cmp
jbe
mov
xor
xor
ja
dec
cs
in
jne
xchg
push
add
mov
daa
pop
jae
imulb
xor
adc
push
xor
mov
out
cwtl
mov
jbe
mov
mov
mov
add
sahf
jge
mov
xor
jp
dec
shlb
outsl
daa
notl
mov
lock
cs
and
mov
mov
shrl
stos
pusha
push
mov
push
xor
test
ret
cs
inc
inc
pop
mov
cs
push
xlat
leave
outsb
fwait
cmp
mov
add
shlb
and
inc
lds
ss
or
aas
mov
pop
fsubrs
push
ja
pop
cmp
adc
mov
jge
dec
cltd
ljmp
push
mov
pop
test
sub
pop
mov
sub
push
sbb
xor
mov
xchg
imul
lock
adc
pop
repnz
sbb
sub
cmp
movsl
inc
sbb
xchg
adc
or
test
push
movsb
outsl
out
repnz
mov
je
add
cmp
fidivrl
loop
cwtl
fld
addl
arpl
fsubs
sub
js
loop
imulb
or
jecxz
jnp
int
mov
add
insl
in
cmp
cmp
lea
dec
stos
adc
popa
and
imul
mov
dec
cmc
dec
mov
dec
mov
sub
in
add
sbb
out
mov
outsl
push
iret
and
push
jge
adc
fdivrs
jp
pop
mov
mov
lsl
mov
jl
test
or
xchg
or
daa
mov
xchg
iret
pusha
push
inc
cld
jl
lret
cmp
hlt
es
out
xor
mov
jne
mov
cmp
or
xchg
loope
or
ja
push
mov
cmpsb
lret
int3
dec
lret
loop
ret
and
and
sti
repz
dec
jecxz
xor
jae
pop
sbb
andb
xchg
in
pop
pop
test
aam
sub
mov
dec
shll
cmp
cmp
add
jp
es
mov
rcr
sub
fisubl
iret
int
cmpsb
xorb
push
sbbl
inc
lock
cmpsl
mov
cmc
mov
aaa
jle
dec
pop
popf
mov
lods
arpl
mov
ficoml
lcall
out
in
mov
xor
imulb
mov
dec
jns
xchg
clc
aad
out
or
cmp
pushl
or
popf
xlat
sbb
movsl
dec
idivb
stos
sbb
aas
sbb
ret
pop
xor
adc
icebp
iret
loopne
nop
negb
rorl
addr16
push
inc
out
jbe,pt
je
je
js
int
dec
iret
enter
and
push
xchg
and
clc
mov
mov
mov
scas
sbb
int
in
xchg
fwait
cmpl
mov
cs
mov
pop
int3
in
popf
fmuls
stos
int
push
add
xor
js
pushf
inc
loopne
js
jge
lret
xor
cmp
je
sbb
ret
sbb
into
push
push
in
aas
lret
or
cmp
mov
mov
leave
xchg
imul
inc
mov
daa
or
rcrl
pop
ljmp
pusha
hlt
mul
in
dec
sbb
lock
mov
add
fnstenv
xor
pushf
jle
nop
ret
int
enter
cld
loopne
push
inc
sub
sbb
pop
mov
outsl
stc
in
into
pop
cltd
mov
lods
cmp
cltd
mov
cmc
xor
test
addr16
add
inc
mov
shrb
adc
inc
aad
inc
sub
fmul
mov
sti
test
dec
or
repnz
imul
jb
outsl
cwtl
cltd
xorl
pop
xchg
lds
inc
push
rcrb
or
mov
fisttpll
outsb
lret
imul
rcrl
pop
sbb
ud2
and
out
push
cld
push
fadds
add
cmp
push
sub
mov
pop
popl
lret
cld
bswap
sbb
clc
cmpsw
inc
xchg
dec
mov
mov
dec
jmp
fnstcw
xorl
cmp
fcoms
fstps
jbe
loope
cmp
es
test
loop
mov
addr16
sbb
push
cmc
lds
int3
xadd
pop
pop
data16
cmpsb
jbe
dec
addr16
bound
pushf
lret
addr16
push
inc
xchg
test
rcl
daa
test
bound
pop
dec
in
pusha
out
test
dec
bound
cmp
fwait
aas
jp
sbb
mov
movsb
loope
cmc
xchg
ljmp
mov
lret
cs
push
push
pop
inc
push
imul
sub
mov
and
iret
addr16
push
pop
xlat
pop
pop
andl
outsl
fisubrl
push
jns
push
imulb
mov
mov
orb
in
int
xlat
enter
sbb
mov
mov
iret
add
sub
outsb
mov
loopne
push
test
out
icebp
and
ret
rclb
sarl
pusha
push
sbb
mov
push
imul
adc
mov
into
stos
mov
test
inc
pop
aam
push
xchg
ds
sub
fld
jne
sub
xchg
add
nop
mov
jl
or
int
lahf
aas
in
mov
fimuls
dec
cmp
mov
jecxz
sbb
push
test
and
shrl
cmpsl
scas
into
xor
pop
bound
out
fisttpl
push
inc
inc
push
mov
pminub
sub
call
cs
in
pusha
adc
popa
or
cli
movsl
cmp
jmp
inc
push
sbb
mov
dec
and
inc
lods
cli
stos
shlb
insl
jb
add
lea
mov
ljmp
add
add
jecxz
daa
in
cmpb
ja
pop
movsb
jno
outsl
sub
dec
gs
mov
es
sub
or
cs
fidivs
push
mov
pop
out
xchg
movq
mov
cmp
daa
inc
subb
adc
in
scas
call
insl
test
test
adc
mov
adc
sbb
in
pop
mov
ret
imul
addr16
sub
and
inc
or
push
ss
sub
push
cmp
mov
leave
inc
and
lsl
inc
or
and
jne
xorl
lds
xchg
aam
mov
jge
lea
leave
out
inc
sub
orl
cmp
loop
scas
icebp
jbe
and
and
pop
add
cltd
pop
stc
ja
mov
adc
aas
cltd
xchg
sub
sahf
xchg
jmp
cmpsb
insb
movsb
jno
lahf
xor
or
int3
cmpb
movsl
pusha
and
stos
push
inc
fnstenv
ljmp
fwait
push
fldcw
mov
add
mov
retw
dec
scas
adc
mov
jge
cld
leave
xlat
dec
cmp
sub
adc
sbb
jnp
mov
pop
cld
cmp
addl
mov
jb
xor
add
or
imul
or
dec
mov
xor
sub
or
cmp
icebp
outsb
test
cmp
dec
ds
das
push
pushf
inc
ror
ror
jmp
mov
ljmp
loope
jg
dec
pop
ss
test
inc
das
shrl
gs
shll
pop
push
popa
mov
call
fs
out
push
ret
popa
dec
hlt
fdivrl
inc
pop
in
and
jo
and
inc
or
lods
fwait
xor
or
and
cmp
mov
enter
sbb
and
test
pop
xor
add
pop
fucomip
enter
inc
mov
push
jo
lcall
fiadds
jmp
pop
sbb
lret
sbb
stc
and
sub
fcoml
mov
mov
in
and
and
fs
jl
mov
fs
mov
hlt
add
xlat
push
cmp
repnz
fimuls
clc
scas
fidivrl
ds
xchg
xchg
mov
adc
jp
jle
fmuls
insl
repnz
das
push
xchg
mov
dec
sbbl
jbe
bound
pop
sub
or
and
test
sbb
push
cmpsl
outsb
stos
mov
mov
fwait
lods
jb
mov
or
dec
cmp
pop
lcall
push
or
xchg
pushl
scas
rorl
mov
dec
sbb
sub
mov
inc
iret
mov
pusha
arpl
stc
clc
daa
lock
aaa
jne
outsl
or
hlt
mov
out
or
aaa
and
mov
and
test
das
fnstcw
mov
js
cmpsb
mov
pop
sub
pop
call
hlt
xor
pop
outsl
xchg
sub
daa
inc
ret
fmull
push
jbe
enter
xchg
and
mov
mov
movsl
jmp
xchg
xor
imul
jge
aad
push
aam
movsl
push
cmpsb
cmp
aaa
dec
imul
sbbb
sub
shrl
cwtl
sbb
add
adc
roll
testl
je
clc
imul
repnz
fnstenv
ret
sub
cmp
and
mov
es
jl
mov
dec
lret
jp
sbb
mov
insb
pop
jle
xchg
add
inc
mov
das
mov
cltd
jle
repz
pop
xchg
je
mov
jo
les
mov
aad
push
iret
lea
pop
jecxz
cmp
mov
outsl
cmp
mov
mov
arpl
jg
xor
loope
or
enter
movsb
xor
sub
cmp
mov
ror
cmpsl
enter
cmpsl
and
adc
stc
sti
out
push
lods
jp
dec
popa
push
mov
pusha
cmp
jns
push
dec
jl
mov
popa
mov
xor
cmp
or
addr16
dec
in
stos
repnz
inc
jp
jge
xchg
insl
cld
xchg
sahf
testl
sub
dec
dec
mov
mov
and
in
inc
sbb
or
mov
mov
loope
sub
shlw
jne
mov
push
add
jae
in
add
daa
repz
or
cmpsb
xchg
push
sbb
cs
mov
aam
dec
cmpsl
movsl
xchg
pop
push
das
adc
fs
xchg
aam
add
or
jnp
sbb
mov
roll
mov
fcomps
ret
jno
ret
jns
jne
shl
and
lcall
inc
xchg
jb
loopnew
lcall
lret
sbb
dec
bound
mov
pushf
jl
push
xor
push
mov
test
push
mov
add
or
sbbl
enter
add
in
pop
scas
cld
xor
movsl
rorb
pushf
sbb
std
mov
jg
sub
mov
mov
adc
lahf
fcoms
or
xor
dec
xor
jle
ret
lea
loope
cmp
cmc
cmpsb
int
arpl
dec
loop
adc
dec
fnstsw
out
adc
in
inc
mov
mov
pop
jl
ljmp
mov
sub
dec
sub
push
aas
inc
mov
pop
inc
lret
cmpsl
sub
mov
inc
loopne
repnz
inc
add
scas
mov
mov
out
orb
movsb
xchg
pop
dec
xchg
cmp
sub
adc
shll
adc
jbe
fmul
pop
lods
add
mov
call
jae
or
xchg
xor
dec
pop
jg
and
or
clc
xchg
shrl
shll
lret
jae
stc
push
loop
mov
or
push
scas
imul
xor
dec
jg
jbe
int
and
icebp
xor
adc
mov
mulb
fwait
leave
inc
gs
out
cld
push
or
and
mov
push
int3
jnp
mov
jmp
cmpsl
lods
nop
notb
fsub
mov
jns
jecxz
cmp
js
cmpsb
cltd
ljmp
xchg
pop
fistl
jp
pop
cli
push
out
int
cli
dec
mov
jnp
adc
mov
dec
sbb
enter
jbe
loopne
popa
add
cmp
fmuls
pop
rcl
jp
sub
addr16
sarl
aaa
test
xchg
sub
add
cmp
out
mov
cmc
dec
adc
adc
xchg
ret
std
mov
test
xchg
sub
in
ret
call
xchg
mov
pushf
xchg
sbb
xor
fsubrs
out
loop
cltd
mov
leave
jmp
adc
imul
mov
xor
andl
test
out
gs
cld
jbe
adc
push
jecxz
in
mov
test
ret
sbb
pushf
mov
aaa
stc
push
adc
xchg
fucomp
outsl
xchg
mov
aas
jge
sbb
mov
test
xor
outsl
into
adc
stc
icebp
sub
ret
repz
cmp
test
xchg
inc
imul
hlt
adc
jmp
inc
adc
ljmp
pop
fistpll
test
dec
jge
sub
pop
std
jecxz
jl
push
mov
dec
mov
xchg
fwait
sub
adc
cmp
andl
stc
std
fldl
int
lcall
cmp
js
in
std
inc
jno
push
scas
adc
cltd
dec
dec
mov
adc
mov
ds
push
subl
es
adc
in
je
jmp
lcall
mov
push
inc
clc
cmp
fiaddl
out
fwait
jns
adc
call
sub
ljmp
in
ret
test
xchg
pop
pop
out
dec
xor
xor
fistps
fwait
je
sub
add
sbb
xchg
shl
jae
js
and
rorb
in
dec
incl
inc
fneni(8087
add
pop
nop
push
cmp
pop
test
popa
cmp
push
mov
mov
in
mov
cli
and
repz
jnp
and
imul
inc
fmul
popf
fdivrs
mov
fwait
jo
xor
scas
mov
mov
and
test
lahf
ja
cmp
xchg
xor
sarb
rcr
mov
sub
leave
popf
fiaddl
sub
adc
lock
jl
xor
scas
or
aam
push
jecxz
dec
sbb
je
cwtl
push
cmp
inc
jne
movsl
jae
popa
mov
fsubrs
cmp
add
mov
negl
into
adc
icebp
jae
pop
aam
andb
inc
mov
sbb
mov
add
int
lret
rcrb
dec
lods
cwtl
test
jl,pn
shlb
fldenv
mov
test
mov
jmp
fmull
xor
pop
in
mov
lahf
sbb
push
scas
and
inc
mov
enter
and
orl
fidivl
dec
cld
mov
out
ret
pop
cmpsb
jns
std
testl
push
and
xor
lcall
inc
inc
jae
or
pop
push
aaa
jl
cmp
loopne
xor
cmpsb
scas
sbb
in
ja
pop
shr
cmpb
inc
pop
hlt
jl
lock
outsb
ja
or
cmpsb
or
aas
cmp
pushf
xchg
pusha
xor
stos
sub
mov
adc
fcmovnb
mov
stos
mov
scas
xchg
lock
mov
adc
and
push
mov
jbe
cltd
inc
sbb
push
cli
dec
shl
mov
inc
lret
loop
popa
xchg
subl
lcall
leave
bound
xor
push
mov
lods
sub
rcl
dec
sbb
ds
adc
pop
inc
jnp
lds
call
fstpl
inc
into
jl
clc
cld
push
std
in
loope
and
xor
and
adc
sar
cmpsl
add
loop
push
sti
add
inc
jp
je
or
call
xchg
icebp
movsl
add
xor
je
call
gs
shll
imul
cmp
mov
and
sbb
push
mov
loop
js
ret
es
jne
push
and
jae
lock
mov
pop
repz
push
add
xor
lret
xchg
fistps
mov
in
test
enter
jo
jecxz
mov
push
pop
mov
pop
and
inc
outsl
sub
pop
pop
mov
movsb
xor
fldl
in
jne
jl
pop
mov
out
pop
push
add
mov
and
sahf
loop
adc
sbb
xor
ror
cwtl
and
movb
cmp
leave
ds
stc
sbbl
mov
push
cli
inc
repz
ds
pop
mov
movb
mov
sti
cs
icebp
std
lds
filds
test
sub
push
fs
jge
jbe
shrl
xchg
in
leave
push
sub
test
cli
iret
arpl
aad
int3
sub
sbb
mov
push
iret
ljmp
xchg
ds
pop
jl
fcmovbe
pop
pop
mov
popa
adc
mov
push
and
rcrb
insb
dec
sub
dec
mov
popa
mov
jle
aad
dec
loop
cmp
in
mov
sbb
sub
pop
dec
mov
ret
cmp
in
sub
rclb
fwait
or
pop
cmp
xor
call
ror
dec
lods
loopne
in
ds
test
int3
jl
nop
hlt
push
hlt
insl
mov
out
or
xor
nop
lock
and
dec
js
cltd
sub
dec
mov
mov
popa
jbe
inc
xchg
cmp
add
jns
mov
ret
in
sti
in
insl
or
dec
fwait
jae
lock
sbb
sbb
sub
or
sahf
pop
mov
imul
ficoml
xchg
xchg
int3
mov
andb
cmc
cmp
sbb
jecxz
inc
stc
xchg
mov
into
mov
repnz
sub
push
cmp
xor
xorl
hlt
adc
dec
xchg
dec
jecxz
cli
sbb
outsl
jmp
mov
xchg
fdivs
sbb
jne
cmpsl
jle
shlb
ret
andl
jae
xchg
xor
mov
dec
mov
and
sti
imul
mov
mov
adc
xchg
pop
cmp
mov
rcrb
mov
inc
out
push
out
divl
lahf
outsb
jecxz
pushf
aaa
sub
dec
mov
scas
adc
inc
outsb
ja
push
adc
jmp
sbb
xchg
add
inc
test
ljmp
fidivl
push
jno
cmc
ret
mov
clc
jmp
or
dec
test
scas
sbb
bound
ljmp
outsb
xor
inc
sbb
jbe
std
pop
pop
inc
jns
adc
pop
or
into
push
and
mov
sbb
lds
sub
fimuls
les
mov
aas
sub
stos
xor
lcall
inc
cmp
pushf
cmp
es
mov
or
pop
aas
jle
or
aam
push
popa
or
std
lock
adc
pop
xchg
sub
jno
shlb
icebp
inc
dec
or
aas
cmc
lods
imul
pop
rcrl
and
repnz
mov
cmp
scas
or
or
xchg
shr
mov
pop
shrl
push
lret
data16
inc
out
pushf
xchg
pushf
test
stc
dec
xchg
sbb
mov
jb
jne
ljmp
aaa
jle
movsl
movsb
ljmp
sub
and
jle
sub
int3
fsubrp
push
loopne
out
mov
sbb
sahf
inc
cmpsb
cmp
mov
pop
push
jns
add
xchg
in
lea
push
adc
aas
data16
inc
call
in
inc
adc
pusha
sti
xor
subl
xchg
fistpll
inc
push
adc
repnz
add
jns
mov
std
mov
ret
jp
jmp
adc
out
cmp
pushf
or
leave
outsl
lods
pushf
jl
hlt
mov
ficompl
xchg
pushf
adc
iret
enter
push
or
mov
std
push
adcl
mov
sub
faddl
fisubrl
fidivrl
leave
mov
popf
aad
gs
pop
lds
push
mov
loopne
and
dec
sub
jmp
sbb
out
push
les
arpl
adc
push
push
imul
stc
in
sbbb
mov
jle
sbb
enter
sbb
int3
lret
movsl
add
jecxz
and
in
mov
xchg
mov
imul
pop
mov
xchg
in
leave
push
addl
xchg
in
test
jle
pop
xor
hlt
pop
loope
dec
xlat
ds
cs
push
data16
dec
sti
mov
insl
dec
cmp
push
ljmp
addr16
ja
jl
cmp
jb
and
outsl
aaa
scas
mov
xchg
add
jb
cmp
mov
vpsllw
and
out
das
std
xchg
mov
xor
xchg
mull
aaa
inc
fcoml
push
sbb
sbb
test
pop
iret
jbe
lea
fisubrs
hlt
adc
mov
ret
icebp
aaa
sbb
xchg
dec
adc
or
jp
adc
scas
leave
in
lods
out
push
cwtl
adc
inc
mov
fistpll
mov
clc
aaa
aad
sarl
xchg
mov
dec
mov
lods
push
mov
nop
subl
or
xorb
scas
rolb
xchg
out
push
dec
adc
sbb
lods
jp
sahf
fistpll
adc
add
call
lret
sbb
xchg
xchg
lret
insl
loop
jns
inc
mov
dec
xchg
in
jnp
cmpsb
mov
adc
add
ret
inc
lret
movsl
lahf
mov
add
or
mov
ror
and
insl
or
push
jge
mov
fmull
jno
cmpsb
or
int3
stc
mov
movsb
jecxz
in
test
adc
sub
mov
sbb
add
mov
les
pop
and
sti
sub
lods
push
js
popf
aam
xchg
push
out
in
xchg
shl
cmpsb
insb
ja
lcall
out
fcmovne
adc
cmp
mov
jmp
and
push
xchg
lods
scas
dec
cmp
out
xchg
gs
scas
scas
rol
loop
lds
or
pop
hlt
xchg
xchg
sbb
in
add
fyl2xp1
insb
dec
sbb
cmp
xchg
jno
movsb
xor
mov
jecxz
dec
jge
xchg
sub
jp
test
mov
cmp
xor
lret
lds
pop
int
sub
mov
pushf
clc
jne
lret
out
inc
vmread
jae
add
xorl
dec
jmp
outsl
popa
mov
stc
hlt
mov
xchg
adc
in
lahf
shlb
xchg
out
daa
cmp
sub
mov
jmp
jnp
bound
push
insb
push
dec
pushf
xchg
ljmp
add
mov
sub
jns
xor
jge
test
imul
fadd
std
ja
fbstp
pop
imul
pop
mov
or
lods
dec
faddl
lret
fldenv
inc
dec
mov
nop
inc
inc
mov
int3
inc
sbb
push
jl
mov
mov
mov
sub
inc
mov
mov
addr16
lods
mov
jno
sub
into
arpl
sbb
andb
add
repnz
scas
xchg
cltd
mov
add
lahf
clc
cmp
xchg
aad
insb
pop
outsb
jg
pushf
outsl
ret
push
xchg
in
shll
and
or
mov
mov
cltd
movsl
scas
sub
in
mov
sbb
cmpsl
out
fdivr
push
loopne
push
gs
sbb
ja
in
jle
ret
xor
out
faddl
iret
push
push
or
sbb
dec
mov
in
pop
hlt
dec
dec
or
repz
arpl
jnp
lods
insb
fildll
out
mov
movsl
mov
scas
cmpxchg
insb
cmovb
test
fincstp
push
imul
adc
xchg
xor
push
popf
push
jmp
in
in
sub
pop
fstps
int
jl
inc
out
ret
rclb
mov
adc
dec
ljmp
jo
xchg
test
and
push
sahf
cmpb
mov
mov
sub
sub
sti
sub
jle
mov
add
jbe
mov
fcomps
movsb
dec
test
int3
xor
xor
mov
dec
clc
mov
cs
movsb
adc
lds
mov
mov
jge
inc
jnp
push
cld
loop
sbb
mov
lock
sub
mov
sbb
mov
inc
push
popa
imul
push
mov
jl
mov
aas
iret
adc
popa
sarl
inc
sub
inc
stc
xor
lcall
mov
incl
mov
xchg
mov
lret
arpl
into
jl
push
loop
dec
mov
clc
fsubl
fcoml
or
ret
test
imul
xor
mov
insl
sti
cmp
lahf
xchg
jbe
xor
inc
pushf
fdivr
sarl
jmp
and
adcl
popa
jbe
jne
out
out
push
jmp
clc
add
or
jno
out
sahf
scas
mov
xchg
inc
in
pushf
cmp
outsb
out
jae
sub
movsl
pop
movsb
out
mov
push
sub
mov
ret
loop
lds
arpl
add
jmp
xlat
cmpl
shlb
dec
and
pusha
mov
out
push
icebp
dec
popa
cmp
pushf
xchg
arpl
mov
push
mov
or
xchg
xchg
cmpsb
jbe
cmpl
stos
add
xchg
xchg
jmp
sbb
scas
lds
js
adc
and
stos
xchg
xor
mov
mov
repz
mov
pop
ljmp
cmp
shlb
push
je
or
xchg
or
imul
in
xchg
jno
dec
jl
xchg
inc
mov
ja
repnz
pop
lods
rcrl
inc
adc
xchg
ljmp
ficoml
cwtd
fstpl
or
bound
mov
adc
loope
jge
pop
xchg
arpl
sbb
test
xchg
mov
mov
data16
fdivs
cmpsb
lds
xchg
sub
lods
int3
fdivrs
push
pop
rorb
pushf
mov
mov
in
rcrl
pushf
mov
xor
test
mov
std
jbe
mov
xor
pop
popf
jg
jg
mov
jecxz
sub
add
lahf
lods
arpl
xchg
hlt
pop
xor
out
stc
out
neg
mov
cs
sbb
dec
fmull
mov
popa
xchg
lea
imul
sub
in
dec
popa
movsb
outsl
sar
and
jmp
xchg
shrb
jo
hlt
push
adc
cmp
xchg
call
pop
xorl
std
je
mov
adc
sbb
cmp
push
insl
sub
shlb
push
sub
xchg
xchg
mov
push
inc
ljmp
lret
imul
js
mov
push
dec
and
push
push
dec
mov
push
xchg
out
in
je
shl
dec
dec
jno
pop
push
cwtl
insb
shl
mov
cmp
in
and
arpl
add
pop
dec
inc
pop
jns
push
scas
xor
jecxz
lods
push
lea
pop
in
inc
sbb
out
dec
rcrb
fistpl
outsb
add
lcall
mov
int3
mov
mov
sub
lret
pop
arpl
mov
inc
testb
test
mov
es
ficoms
test
mov
mov
mov
sub
sahf
mov
sub
vpinsrw
shll
push
shlb
dec
push
sub
sbb
fbld
dec
fstl
imul
ljmp
loope
mov
cltd
mov
push
push
inc
es
cmp
cmp
pop
jmp
popf
cmp
cld
out
mov
imul
push
stos
sub
mov
daa
sub
push
push
lods
cltd
ret
dec
fwait
call
xorb
cwtl
adc
cmc
pop
jmp
scas
sub
inc
notl
xor
push
fldcw
out
das
pop
sbb
pop
push
incb
xor
xor
in
out
dec
shlb
sub
shll
cld
enter
data16
pop
mov
jge
pop
insl
enter
std
dec
inc
mov
jb
cmpsl
jge
imul
inc
ror
mov
jb
out
int3
fdivrl
xor
inc
inc
test
int3
jp
adc
cmc
xchg
test
mov
or
add
lea
out
xor
imul
test
mov
test
mov
pop
mov
lret
repz
push
jmp
dec
jne
lret
test
ss
mov
stc
inc
fldenv
push
pusha
int
insl
movb
push
pop
push
inc
jge
mov
push
push
mov
xchg
or
lock
adc
int3
cmp
or
cmp
pushf
int3
push
iret
and
jnp
ret
sbb
push
pop
cmp
iret
sti
jo
fs
js
iret
jb
mov
mov
sahf
sub
xchg
mov
divb
lret
sbb
cmp
fisttpll
jne
jecxz
jno
cmp
popf
mov
mov
sbb
out
jno
fidivrl
imul
cwtl
add
ja
push
or
and
adc
call
movsl
add
lret
jp
adc
push
in
std
push
jo
sub
int3
std
ja
cmpsb
inc
cmpl
repz
push
push
adc
xor
xchg
push
cld
dec
lods
and
push
shr
lds
jg
test
fidivrs
pushf
cmp
not
adcb
sbb
int3
xor
pop
or
arpl
adc
shrb
stos
negl
inc
cltd
aam
pop
aas
lret
aam
rorb
inc
sub
sbb
lcall
pop
in
pop
mov
inc
push
xchg
es
lret
loop
pop
jo
sub
push
shrl
jp
dec
and
ljmp
in
add
fidivs
adc
adc
adc
mov
cmpsb
jg
mov
sub
lea
pusha
add
vpmulhw
pusha
and
lods
repnz
fistps
test
loop
rclb
loope
cmp
test
jno
push
lods
out
hlt
imul
push
iret
and
mov
or
cmp
jecxz
sub
mov
adcl
mov
imull
dec
push
out
cwtl
push
mov
dec
pop
pop
mov
or
test
dec
fdivp
test
movsb
pop
xchg
loopne
sub
leave
cmp
push
lods
sub
pop
mov
jnp
andb
add
push
inc
std
jmp
cwtl
mov
out
xchg
push
gs
jb
cmpsb
cmp
fdivs
movsb
pop
icebp
roll
xor
daa
fs
add
pop
cmova
adcl
addr16
dec
jno
lret
inc
fnstsw
insl
mov
xchg
mov
xchg
mov
sub
add
push
hlt
add
push
push
idivl
fildl
add
rcll
mov
stos
dec
jl
leave
adc
mov
int
clc
mov
adc
stos
adc
mov
ss
dec
mov
jne
call
mov
cmp
push
dec
mov
pop
xor
popa
cmp
sbb
call
ljmp
fnsave
lcall
sub
mov
jmp
push
add
mov
lret
jae
xchg
sub
jnp
ss
xlat
repnz
push
jecxz
nop
aaa
fcomps
jmp
pushl
cltd
insb
or
pop
sbb
cmp
or
mov
jb
mov
enter
es
xchg
std
lea
xchg
popa
cmp
lods
pop
mov
pop
leave
fs
lahf
fsubl
sub
mov
fmuls
ljmp
push
mov
push
dec
jnp
ret
dec
and
jle
inc
pop
push
stc
xchg
dec
bound
cmpb
cmc
insl
aad
pusha
ret
lea
popf
in
shrb
mov
mov
test
rorl
push
in
scas
jmp
test
dec
fsubrl
adc
scas
pop
out
data16
xor
orl
ljmp
xchg
fsubl
mov
sbb
dec
push
pop
test
stos
adc
xchg
je
push
mov
xchg
icebp
adc
xchg
fnstsw
sub
sar
pop
cwtl
aad
das
cmp
mov
mov
sbb
mov
xor
lock
jecxz
xchg
test
mov
mov
add
jae
in
mov
jecxz
or
movsl
fwait
xor
xchg
jl
ror
out
xlat
notl
in
rclb
push
hlt
rcl
test
addr16
pop
std
arpl
lea
inc
sbb
scas
mov
scas
sbb
fnsave
cld
clc
adcl
pop
sarb
and
pop
clc
mov
dec
js
insl
sub
or
int3
mov
jb
cmp
fwait
cli
nop
pop
pop
pop
loopne
stos
clc
cmpsb
add
dec
add
mov
adc
daa
aam
dec
or
mov
test
adc
dec
xor
sub
cmc
xor
cld
adcl
test
adc
cmc
sub
push
jg
xor
out
negb
lea
push
push
loopne
add
jo
xor
add
jb
xor
xor
add
cmc
jmp
inc
aaa
xchg
sbb
mov
mov
shll
sbb
dec
punpckhwd
fiaddl
mov
sub
cmc
loope
outsl
xchg
rcrb
cmp
add
and
jno
or
mov
mov
adc
add
jecxz
in
shr
mov
dec
sub
aad
sbb
ret
xchg
sahf
adc
cmp
test
in
mov
int
add
repnz
pop
mov
fmull
jmp
stc
mov
or
pusha
mov
add
data16
imul
push
movsl
cmp
and
adc
lock
mov
scas
imul
pushf
push
xchg
xlat
xchg
out
fsubl
xor
mov
mov
lcall
inc
icebp
aas
xchg
daa
sub
lods
scas
jno
mov
jl
aas
ss
sbb
test
into
enter
mov
loop
mov
pop
imul
cmp
mov
fcompl
ja
add
sub
mov
pop
pop
or
outsb
inc
or
mov
and
mov
pop
rep
scas
mov
push
sub
outsl
push
cmp
dec
ret
dec
jecxz
jmp
push
ficompl
sbb
iret
dec
or
xchg
ret
inc
es
xor
mov
xor
cmp
mov
out
jge
xor
fwait
repnz
lods
arpl
jbe
repz
stos
sbb
or
js
mov
xor
dec
stos
sbb
ss
int
push
ljmp
inc
lret
add
das
mov
sbb
lcall
add
subl
aad
das
jae
pop
cmpb
fwait
fnstsw
enter
adc
add
stc
push
loop
ds
inc
ja
cmp
popa
sbb
adc
loop
js
jnp
jecxz
and
rorb
mov
xlat
insl
aad
push
imul
push
sub
push
pop
es
clc
cmp
fisubrs
mov
shll
repnz
lea
stos
adc
ficoml
add
test
cmp
iret
push
mov
cmp
xchg
mov
mov
push
sbb
jle
into
cld
in
popa
out
cmp
cmp
insb
out
mov
cltd
jg
push
and
iret
out
mov
adc
pop
rcrb
addr16
call
outsb
in
out
push
hlt
mov
mov
fldt
and
test
je
xchg
mov
add
xchg
jecxz
cmpsl
inc
cmpsb
jg
xchg
jl
mov
out
or
inc
cmp
cmp
push
into
push
jmp
add
cmp
adc
mov
loopne
push
add
lahf
add
push
adc
pop
lcall
xor
hlt
inc
test
mov
and
sbb
adc
aaa
xor
push
gs
imul
cmpl
adc
loopne
sub
jo
and
fdivrl
lock
pop
movsl
lret
dec
bound
adc
mov
les
dec
jnp
mov
sbb
dec
pop
pushf
loop
fdivrs
xchg
xor
xchg
mov
popa
jno
popa
outsl
imul
nop
xchg
sbbl
mov
inc
add
inc
pushf
sbb
aaa
das
jge
lods
fnstenv
cmp
outsl
lods
mov
push
rcll
cltd
fwait
fs
shll
movsl
mov
or
push
cli
rorb
jmp
in
insb
lcall
sub
jae
xchg
or
and
test
cmp
enter
ja
mov
es
cmp
xor
cmp
sti
mov
ficoml
xchg
and
mov
ret
sub
lds
imul
leave
pop
imul
sbb
jl
fwait
test
fmuls
xor
inc
cwtl
mov
daa
fcomps
cld
dec
out
neg
mov
popa
push
int3
fisttpll
xor
or
adc
lea
test
mov
jo
adc
mov
movsl
outsb
sbb
jge
inc
cmp
or
jl
push
mov
imulb
adc
stos
cmp
out
inc
lods
xchg
mov
cmpsb
pop
fdivrs
pushl
pop
mov
and
scas
out
clc
add
fdivrs
cmp
test
ret
inc
ja
test
shll
add
in
pop
imulb
rcrl
add
fucompp
mov
and
std
insl
push
push
or
scas
and
ficomps
in
scas
sub
clc
push
sbb
and
mov
mov
rcl
pop
add
cmp
sbb
mov
xchg
imul
push
icebp
popf
daa
or
mov
push
push
add
mov
add
push
fwait
push
andl
sbbb
test
inc
xlat
or
data16
push
test
mov
sub
mov
xchg
xchg
lea
jns
push
jecxz
jge
push
inc
int
mov
in
sub
ljmp
andb
subl
dec
shrl
jmp
insl
pop
cmp
daa
es
fildl
pop
xor
aaa
inc
jns
ds
push
sbb
push
sbb
pop
mov
mov
fstpt
jge
xchg
sub
es
xchg
mov
insb
sbb
lock
add
cmp
adc
mov
push
or
xor
jb
ss
cli
sub
push
pop
mov
clc
jo
es
shrb
cltd
in
loopne
sub
mov
dec
sub
push
roll
adc
or
stc
mov
rol
jae
cltd
cld
movsl
push
fistl
arpl
or
jle
add
stos
mov
es
in
stc
movsb
and
xchg
shrl
xchg
pop
nop
sahf
fcompl
jno
insl
std
jp
into
mov
dec
pop
ret
xor
int
xchg
sahf
xor
sti
out
out
or
icebp
xchg
dec
bswap
lret
lock
stc
lret
sub
sub
fucomi
inc
popf
sub
jecxz
andl
outsl
or
pop
or
inc
fstps
cltd
lret
sbb
bound
clc
into
xchg
lods
sbb
fdivrs
sarl
pushw
jbe
xchg
rcrb
push
aaa
insl
inc
pop
xorl
gs
mov
mov
movsb
sub
mov
cmp
jno
addr16
cmp
mull
stc
repnz
cld
aam
mov
nop
push
outsl
cmp
sub
pushf
into
mov
test
shrb
inc
enter
push
xchg
mov
cmp
and
icebp
cmpsb
add
xchg
pop
ja
xor
std
aad
jne
cmovae
aaa
shlb
mov
sbbl
insb
inc
test
fldt
pop
and
sub
dec
dec
push
mov
mov
push
addl
pop
sbb
mov
scas
dec
lock
sub
cmpsl
popa
inc
jle
imul
xchg
xor
in
xor
inc
pushf
sub
add
hlt
loopne
pop
jmp
adc
adc
jge
xchg
data16
test
bound
sbb
mov
push
mov
js
cli
add
out
xlat
pop
jo
hlt
jecxz
lea
dec
dec
sarb
fbstp
dec
repz
dec
lea
dec
add
mov
push
test
insl
test
lock
stos
xchg
cmpsb
aas
xchg
out
mov
sbb
adc
orl
cmp
ret
addr16
mov
adcb
icebp
sub
int3
dec
data16
xchg
sbb
cmp
push
lcall
mov
adc
dec
fwait
icebp
push
push
sbb
lods
cmp
cmp
add
pushl
push
repnz
cmp
push
mov
mov
inc
sahf
fdivrl
sbb
mov
mov
lock
xlat
mov
cld
add
mov
cmpb
xor
psubq
or
and
negb
sbb
dec
adc
xchg
sub
loope
addb
mov
xchg
inc
jnp
xchg
lods
neg
lods
adc
cmp
cmp
leave
ss
in
cmp
lcall
ljmp
xchg
lahf
stos
xchg
pop
mov
scas
jo
and
fs
inc
adc
cltd
and
jle
bound
mov
cmp
out
cs
ds
test
movsb
or
repnz
ljmp
int
dec
lret
mov
adc
cmp
in
sbb
add
in
push
jecxz
iret
xor
rorl
movsl
out
add
ror
inc
js
sub
and
shl
and
insb
mov
mov
lret
pop
sbb
je
pop
enter
je
xchg
pop
sbb
cmp
inc
dec
mov
inc
mov
xchg
sbb
clc
push
sbb
fsubl
out
insl
or
or
jne
add
mov
xchg
mov
shrb
pop
movsl
cmp
ss
or
sub
add
fistl
mov
lea
jmp
fistl
dec
movsl
inc
mov
lret
mov
lcall
mov
cmpb
sub
adc
test
frstor
sbb
adc
or
inc
mov
mov
sbb
ljmp
jge
pop
negb
call
ja
lahf
inc
test
inc
add
xor
sub
or
or
lcall
sbb
mov
popa
sarb
mov
jo
xor
inc
hlt
push
fwait
mov
sub
sub
pop
mov
xor
bswap
xchg
sbb
adc
mov
loop
sbb
outsb
cmp
sbbb
xchg
pop
into
and
mov
leave
test
mov
scas
mov
aam
popa
shll
sahf
sar
jne
xchg
lods
pop
push
push
jmp
mov
adc
js
mov
push
pop
cmp
loope
and
in
es
pop
insl
add
pop
pushf
fdiv
or
and
jae
and
cmp
les
jne
fwait
js
or
pusha
and
xorl
jg
movsl
mov
lods
push
mov
fidivl
ds
sub
and
sarl
shl
jnp
cmpsb
pop
aas
das
ret
into
in
fdivr
inc
movsl
add
adc
mov
xchg
pop
pop
mov
push
jmp
jmp
jmp
add
lock
mov
pop
popf
mov
insl
nop
mov
mov
mov
in
les
push
js
fsts
shl
xor
xchg
mov
xchg
adc
popf
xchg
or
mov
cld
jns
mov
outsl
ja
and
sbb
adcl
aaa
xchg
mov
mov
mov
sub
cmp
mov
je
nop
std
mov
dec
cmp
mov
imul
jae
les
cmp
mov
addr16
rcrb
lds
jmp
jmp
jp
cwtl
adc
icebp
mov
dec
and
notl
pop
adc
xchg
add
ret
sahf
sub
xchg
mov
mov
insb
ja
aam
pop
xor
lahf
lods
jle
pop
in
push
add
or
ljmp
aas
mov
shrl
or
mov
in
sub
mov
jp,pt
cltd
mov
ljmp
xor
lds
pop
inc
mov
add
inc
xor
cmpsl
dec
mov
inc
and
nop
and
mov
jns
and
mov
fildl
push
add
pop
jmp
pop
sarb
js
jbe
mov
fmull
sbb
xlat
pop
dec
dec
mov
push
sbb
popf
aad
call
sub
arpl
push
js
enter
in
jnp
lds
aam
push
mov
xor
dec
or
jl
mov
sub
dec
inc
jp
mov
mov
adc
in
pusha
cmp
xchg
in
ret
scas
femms
addl
xor
sbb
sbb
leave
push
les
sbb
and
mov
push
adc
and
xchg
outsb
mov
xchg
ljmp
jg
stos
inc
sub
sub
int
movsl
lods
sarb
xor
sarb
mov
lock
mov
loop
cmc
inc
aam
movl
sub
sub
cli
jne
loope
in
stos
inc
scas
fwait
shrb
pop
mov
aad
nop
adc
push
pop
repz
mov
xchg
repz
push
push
sub
ret
inc
aas
sbb
addr16
scas
in
xchg
or
lock
fstpl
jb
dec
pusha
pop
xchg
and
cmpb
pop
fisttpll
cmpsl
imul
jne
and
in
test
mov
inc
adc
dec
inc
sbb
and
mov
jne
dec
stc
and
lea
lock
add
xchg
add
rol
rolb
aaa
xor
mov
out
in
add
inc
fdiv
sbb
repnz
cmp
fs
sbb
jb
bound
mov
lods
movsb
push
sub
pusha
mov
sbb
adc
shlb
pop
sub
subb
rol
stos
ljmpw
push
xchg
or
movb
inc
and
arpl
ftst
das
pushf
inc
adc
xor
mov
xor
jnp
jecxz
std
pop
shrl
aam
xor
test
shll
daa
and
ljmp
pop
pop
std
mov
add
jno
adcb
pop
or
jae
fwait
lea
test
mov
sbb
aad
in
jmp
xor
std
sbb
mov
jp
cmp
push
out
push
dec
fisttpll
repz
out
sarb
ds
aas
jmp
popf
movsl
cmp
jp
sbbb
jge
popa
fistps
inc
adc
add
cmp
dec
lock
aaa
das
rorl
inc
push
into
push
mov
xor
and
mov
cltd
notl
addr16
aam
nop
jl
js
stos
aaa
xchg
dec
mov
mov
pop
cmp
push
inc
or
mov
call
push
lret
cmp
addr16
decb
dec
jle
in
sub
push
push
sbb
push
stos
lea
frstor
fdivs
jno
and
jge
lcall
xchg
aas
inc
cwtl
mov
xchg
and
outsl
orb
int3
cmp
fistpl
xchg
fsts
pop
cli
enter
movsl
mov
mov
outsb
cltd
lahf
inc
pop
cmp
fdivl
push
bound
and
add
leave
xor
sub
xchg
cmp
sbb
sbbb
ss
or
or
lret
push
scas
inc
mov
mov
scas
stos
lods
pop
loope
fcomps
aaa
push
mov
jge
dec
mov
icebp
or
out
mov
and
sub
je
mov
add
loopne
bswap
negl
mov
xor
movsl
adc
xor
shl
in
xchg
mov
push
sbb
idivl
call
add
and
push
jge
push
shl
mov
pop
or
mov
mov
sub
cmpsb
mov
or
sub
mov
mov
adc
les
xchg
cmp
jg
inc
inc
jb
inc
jns
push
add
insb
daa
xchg
cmp
sub
inc
pop
mov
jg
movsb
sub
xchg
cmp
xor
sbb
push
push
es
add
out
and
aas
mov
adc
pushf
mov
adc
mov
fs
and
aaa
push
mov
jae
aam
jge
lret
jg
bound
mov
test
movsl
imul
cs
and
sahf
loopne
outsl
adc
aam
mov
push
scas
outsl
sbbb
adc
mov
aaa
insl
addr16
lds
nop
mov
addr16
lods
or
inc
mov
daa
cwtl
cmp
repnz
in
jle
sub
icebp
fcomi
adc
subl
in
rol
cmp
in
mov
add
or
pop
nop
lods
lods
in
pop
mov
add
mov
dec
mov
xlat
push
cmovle
adc
and
cli
mov
adc
dec
sub
lret
js
sbb
cmpsb
and
sbbl
lea
ret
jp
in
fcmovnbe
and
leave
es
das
mov
dec
pop
xor
and
dec
dec
cmp
lahf
sbb
into
push
lahf
or
fsub
xor
mov
rol
xor
ret
fmulp
cli
sbb
xlat
jmp
faddl
cltd
jecxz
inc
mov
xchg
loop
pop
add
xchg
jg
lock
mov
pop
repz
out
mov
mov
in
jecxz
xchg
cmp
mov
pop
jmp
bound
cmpsl
push
mov
jmp
ret
cwtl
sub
adc
lds
xchg
sub
and
dec
movsb
mov
aad
mov
stos
divb
pop
mov
pop
pop
subps
mov
mov
ja
cmp
clc
xchg
jb
jle
xor
inc
sub
jl
aas
and
enter
push
fidivrl
jbe
mov
outsl
cmp
and
das
in
push
out
xchg
dec
push
movsl
add
dec
inc
adc
lds
fwait
movl
and
inc
addr16
jmp
ret
mov
aad
jb
push
sbb
stos
ja
mov
in
clc
push
lods
sub
sub
push
fldt
leave
jns
xchg
movsl
pop
call
fisubl
fldt
mov
shrb
inc
xadd
in
movsb
movsb
cmp
jge
push
nop
rorl
xchg
fdivrp
pop
push
pop
sub
mov
cmp
and
add
loopne
and
cmp
sbb
lcall
push
jecxz
lock
xor
arpl
inc
cli
pop
xchg
dec
sahf
stos
dec
clc
dec
sub
rclb
jnp
lret
xchg
pusha
jb
jno
cwtl
xchg
leave
push
push
imul
shll
ret
lods
jmp
in
cmp
jp
fidivrl
sbb
xchg
xchg
xchg
mov
push
loope
jo
fimuls
push
es
xchg
push
mov
outsb
xor
movsl
sbb
fs
sub
or
mov
enter
outsl
cld
sbb
or
icebp
js
xlat
pop
lock
jbe
jle
xor
loop
sub
add
add
test
sub
xor
mov
inc
rcr
cli
insb
xor
int
int3
jo
mov
pop
push
addl
mov
aaa
xorb
ficoml
xor
push
bound
clc
dec
cltd
sub
arpl
ret
adc
push
cwtl
lret
mov
test
and
mov
call
scas
mov
inc
call
push
scas
or
cmp
cmp
pop
lret
out
inc
sub
push
outsb
les
dec
lds
loopne
lock
into
ss
cmp
xor
add
cwtl
scas
or
mov
movsl
dec
or
dec
lods
mov
mov
call
adc
stos
repz
mov
jns
jnp
aaa
popf
jb
push
subb
in
xchg
dec
sub
dec
pop
fnsave
xchg
mov
stc
stos
sub
inc
sbb
test
inc
sub
mov
adcl
push
dec
repz
lahf
push
repnz
mov
js
out
jmp
popa
xor
mov
jl
mov
mov
ljmp
lea
push
pavgb
jnp
sbb
xor
pop
jb
dec
xor
cmp
popa
je
sub
aad
mov
sub
rcll
and
and
xchg
push
ds
jg
out
lret
and
pop
or
scas
in
dec
clc
in
fbld
int3
into
dec
jge
fsubp
push
xchg
mov
inc
dec
repnz
jle,pt
cmp
inc
adc
sub
mov
cmp
xor
pop
push
pop
call
pop
icebp
sub
nop
shrl
scas
loope
or
icebp
sbb
add
adc
and
jle
xlat
jbe
mov
rorb
loope
dec
popa
cmpsl
pushf
divl
lock
insl
push
add
mull
fidivl
mov
mov
mov
inc
sbb
dec
js
adc
and
cmp
xchg
aam
out
imul
divb
arpl
ss
jl
or
jp
call
cwtl
and
adc
repz
dec
push
sahf
cld
adc
cmp
cmpb
cs
mov
pop
inc
aas
adc
jg
jecxz
insb
popf
pushl
pop
xor
call
xor
mov
inc
daa
stos
cmp
pop
movsb
bound
push
incl
lods
iret
fwait
inc
jb
jbe
and
xchg
cli
sub
mov
inc
xor
push
ror
repnz
or
mov
pop
lret
xor
or
loopne
and
xchg
mov
sbb
repnz
sbb
scas
das
add
les
mov
mov
inc
push
loop
dec
jns
dec
loope
dec
jmp
outsb
sbb
fdivr
sti
in
cld
mulb
sbb
mov
inc
jecxz
mov
adc
push
lret
xor
and
jmp
test
mov
jecxz
xchg
cmpsb
pusha
mov
mov
xlat
mov
test
inc
add
add
outsl
enter
push
mov
orl
pop
std
and
pop
ljmp
test
insb
push
xchg
pop
lock
rol
lock
inc
nop
sub
add
pop
stos
pop
out
arpl
mov
aad
or
cmpsl
sahf
cmp
aad
and
lahf
add
mov
xor
xchg
push
mov
push
stos
fwait
pop
xchg
ss
xchg
cmpsb
imul
cmpl
mov
inc
mov
mov
stos
sarb
ds
mov
testb
or
xor
push
call
ds
stos
push
stos
test
mov
int3
adc
call
jae
sbb
enter
xchg
cmp
lds
or
es
mov
enter
outsl
jp
aas
aas
cmpb
loopne
int3
and
cmpsl
push
inc
mov
cmp
hlt
sarl
aad
jmp
mov
mov
out
sbb
or
adc
lret
cmpsl
das
out
sarl
push
aaa
and
dec
shlb
mov
imul
dec
inc
popf
push
loop
mov
test
andb
and
pop
icebp
adc
out
outsl
lds
stos
pop
dec
js
imul
ja
mov
or
ret
lods
and
xchg
xchg
mov
test
xchg
in
jne
and
pop
pusha
fdiv
push
cs
ret
adc
in
add
and
mov
sbb
insb
lds
cli
loopne
mov
lahf
idiv
and
sub
or
call
fldenv
cltd
push
inc
mov
ss
cld
loop
push
into
enter
js
jo
pushf
jmp
js
shll
adc
dec
mov
inc
pop
stos
sub
xchg
xchg
push
xor
add
fnstcw
mov
jmp
and
or
xchg
add
dec
test
rclb
icebp
ja
js
lea
mov
mov
pop
stc
data16
hlt
jo
pop
mov
test
pusha
leave
cli
sbb
inc
test
cmp
and
insb
ja
dec
popa
loopne
and
jae
data16
mov
xchg
sbb
in
mov
iret
cmpsb
mov
push
fnstsw
cmpsb
push
sub
daa
popf
xchg
dec
mov
inc
jae
pop
mov
pop
add
pop
testl
cmp
add
and
dec
in
xchg
lahf
jbe
andl
fistpl
sbb
sbb
pop
lea
js
cwtl
and
aas
sbb
and
cmp
pusha
insb
outsl
mov
or
in
inc
cltd
hlt
mov
cmp
sbb
stos
cmp
mov
lods
push
lods
cmp
dec
add
stc
pop
jp
gs
mov
adc
mov
mov
cmp
mov
mov
mov
cld
mov
cmp
mov
pop
jmp
add
es
imul
xchg
mov
sbb
dec
xor
inc
and
dec
and
shr
pop
mov
sbb
mov
dec
cmp
test
inc
pushl
aaa
imul
dec
push
dec
dec
xchg
pop
mov
jg
mov
neg
xor
mov
adc
in
pop
dec
dec
adc
out
mov
mov
sub
ja
ss
clc
jo
jp
add
cmp
mov
add
inc
jmp
xchg
dec
das
inc
pop
adc
jno
lret
mov
arpl
mov
mov
cs
scas
bound
inc
fidivrl
neg
inc
scas
xchg
xor
ds
dec
sub
cwtl
sub
dec
adc
insb
sbb
shr
adc
dec
cltd
mov
in
dec
sub
push
inc
mov
in
push
or
and
ljmp
sub
adc
lcall
fcompl
add
shlb
adc
mov
mov
call
inc
out
mov
xor
je
or
sub
out
ds
ljmp
sbb
shrb
negb
xchg
fsubp
pop
adc
sub
jnp
push
and
cmc
add
adc
rcrb
jge
sbb
ja
push
sub
or
lret
arpl
and
pop
inc
icebp
mov
pop
rorl
mov
rclb
jb
sbb
xchg
mov
dec
clc
sahf
xchg
pop
or
ja
and
jne
js
out
pop
repz
pushf
mov
push
mov
stos
lods
adc
cmp
stos
movsl
aas
orb
sbb
push
and
loop
adc
mov
inc
add
cltd
push
test
test
fisubl
pop
xchg
das
push
pop
pop
mov
push
cmpsl
popa
sub
dec
mov
lds
bound
mov
mov
cs
pop
mov
out
pop
jnp
and
push
aas
cmp
push
jecxz
repnz
xor
jno
enter
jmp
rcrl
pop
mov
sbb
test
or
xchg
jl
sbb
movsb
lret
gs
push
in
mov
and
or
pop
sub
fldt
ss
daa
xor
call
cld
cld
and
adc
sub
mov
jae
in
pop
jle
and
jge
or
lock
add
mov
xchg
out
out
inc
cwtl
xchg
test
enter
inc
pop
mov
mov
outsl
test
testl
es
movsl
addr16
pop
imul
jno
movsb
mov
sbb
or
push
gs
push
into
std
out
mov
addr16
mov
inc
adc
sub
lret
push
adc
fstpl
jp
xor
push
andl
test
mov
dec
push
or
cltd
and
jne
jne
rclb
inc
sbb
mov
cmp
adc
pop
loop
popf
lods
cltd
lea
sub
inc
imul
rcrb
adc
addr16
pop
in
cmpsb
push
inc
xorb
out
add
mov
inc
test
push
ret
js
jns
mov
adc
fiadds
lock
lahf
jg
int
xchg
movsl
sahf
lahf
adc
mov
cmc
movsb
mov
xchg
and
int
notl
sbb
cmp
arpl
push
pop
daa
sub
mov
add
jl
cmp
jp
mov
cmp
icebp
arpl
jne
cli
dec
lahf
pop
or
sub
lcall
mov
pushf
mov
jno
and
ror
add
sub
jo
inc
lds
pop
jge
sub
js
mov
ljmp
push
inc
dec
js
mov
sbb
inc
inc
mov
movsb
orb
dec
pop
roll
or
xchg
aad
iret
sbb
arpl
in
mov
sbb
ss
pop
pushf
in
insb
fwait
pop
mov
dec
ja
mov
jl
mov
lcall
mov
das
pop
pusha
testb
mov
aaa
xor
aas
adc
arpl
lret
gs
out
data16
lock
addr16
in
add
jnp
cmp
adc
mov
cmp
xchg
inc
inc
cli
pop
mov
push
rcrl
mov
push
clc
sub
cmc
cmp
lock
data16
sbb
out
and
sub
in
mov
addl
mov
inc
xor
sbb
inc
int
enter
call
xchg
ss
cmp
fnstenv
scas
aas
cmc
clc
fstpl
cmpsl
push
jl
xchg
add
xor
pop
jb
sub
and
ja
pusha
xchg
mov
jb
or
nop
mov
jp
movsb
sub
out
cld
mov
addl
rcrl
adc
addl
imul
mov
dec
jge
adc
xchg
jmp
and
in
mov
jae
test
xchg
dec
push
rcrb
inc
lds
cmc
cmp
rcll
lahf
add
les
or
dec
imul
dec
out
sbb
fldl
push
lcall
mov
sub
mov
inc
in
dec
cld
imul
mov
test
stc
popf
out
fst
sub
ja
fisubl
fwait
mov
mov
pop
pop
shr
mov
or
xor
shll
push
inc
ljmp
and
xor
push
sbb
test
pop
cmc
loope
hlt
fsubr
and
mov
pop
ftst
repnz
out
hlt
sbb
push
jl
and
cmp
or
sub
jmp
push
jmp
xor
add
aad
lahf
mov
ss
push
insb
jns
call
in
dec
push
adc
std
out
mov
sbb
mov
inc
aam
jg
jmp
push
imulb
xlat
xchg
data16
sbb
stos
mov
sub
mov
dec
mov
mov
mov
ds
inc
dec
mov
adc
cmp
lret
add
cld
outsb
test
and
add
ficoms
stos
leave
add
mov
orl
mov
mov
dec
pop
mov
arpl
addb
testb
int
cmpsb
jns
xor
mov
pop
and
popa
xor
fsubrs
and
std
ss
lcall
xor
pop
xchg
imul
lods
push
fisubl
repnz
adc
or
push
dec
and
clc
stos
inc
loope
or
test
nop
pop
inc
push
lods
mov
popf
xchg
xchg
les
aaa
std
subb
rcl
int3
dec
lock
lret
lds
push
mov
pop
shll
sti
loop
bound
out
and
sar
mov
scas
xchg
cmp
in
fsts
mov
movsb
sbb
mov
mov
mov
nop
mov
jecxz
addr16
and
cwtl
stc
or
ss
pop
pop
popa
jb
mov
aad
dec
pop
popa
in
bound
ret
mov
cmp
push
jbe
push
ret
xchg
popa
je
xlat
scas
xor
clc
cwtl
jp
pop
cwtl
test
fucomi
mov
mov
dec
mov
test
int3
fildll
mov
mov
push
push
addr16
and
outsl
or
mov
push
cmpsb
mov
out
bound
lcall
das
lcall
std
daa
imul
icebp
push
jno
cli
outsl
movsb
or
mul
lret
and
or
pop
sub
xor
lea
pop
add
or
bound
dec
or
sbb
jo
xor
repnz
inc
or
loope
fstl
cmp
lahf
movsl
aaa
leave
imul
sbb
fnsave
mov
jnp
jb
mov
sub
arpl
repz
lock
clc
sbb
jle
popf
lret
and
dec
push
mov
add
xor
mov
stc
daa
imul
ret
sbb
inc
roll
push
lahf
mov
int
int3
adc
andl
negb
int
push
mov
stc
lea
sub
cmpl
inc
or
sub
or
ljmp
pushf
arpl
sahf
jnp
jl
jg
pop
into
cs
pop
cmpsb
dec
dec
dec
pushf
add
and
ja
cs
or
dec
int3
mov
leave
sbb
xchg
ljmp
cmp
push
mov
out
subb
push
stc
fwait
xor
stos
and
adc
je
icebp
outsl
aad
jecxz
pushf
push
stc
jnp
popfw
rcrl
adc
repnz
js
pushf
dec
xchg
repnz
adc
imul
std
or
dec
out
jg
mov
imul
mov
mov
dec
ljmp
and
daa
aad
xchg
xchg
je
in
test
lds
fs
fimuls
sahf
jmp
or
out
push
mov
inc
rol
ret
sbb
ljmp
pusha
xor
mov
cmp
mov
xlat
lcall
or
dec
inc
aas
nop
mov
out
sbb
outsl
stos
mov
adc
jle
xchg
push
imul
das
sahf
xor
movsl
inc
enter
popa
push
icebp
test
mov
jne
inc
andb
push
test
xchg
leave
pop
pop
js
and
mov
sbb
mov
out
jp
fisttpl
popa
pop
jbe
mov
pop
sahf
inc
jge
and
ret
inc
xor
sub
jge
inc
es
data16
add
insb
push
cvtps2pd
mov
cmpsb
sub
add
mov
mov
wrmsr
push
xor
addr16
push
xchg
leave
cli
mov
add
push
or
insb
dec
mov
mov
movb
gs
ljmp
cwtl
jp
imul
sbb
pushf
jns
sbb
mov
shrl
insb
or
test
mov
adc
fisubrs
sub
xchg
int
ret
or
and
or
mov
shl
xlat
std
arpl
fistpll
je
rcrl
push
aad
out
jl
push
sub
inc
pop
dec
incb
dec
lock
mov
xor
rcrb
lahf
dec
inc
mov
xchg
aaa
cmp
pop
mov
pop
int
punpckhbw
clc
xor
jae
mov
push
cmc
jle
cmp
dec
push
or
push
sub
push
mov
jns
and
push
movsb
sub
in
xor
pop
fcompl
sbb
mov
repnz
add
push
stos
add
push
cmp
loope
lahf
clc
in
xor
adc
xor
insl
xchg
cmp
aas
inc
sbb
sbb
sti
hlt
popf
scas
push
mov
xchg
mov
pushf
and
fbld
lahf
xor
lcall
cmp
popf
mov
cltd
out
jns
mov
imul
pusha
mov
aad
sub
insb
popf
push
jns
jge
mov
lcall
inc
fdivrs
mov
inc
inc
dec
sahf
mov
or
sbb
cwtl
add
xchg
jecxz
mov
sbb
inc
and
mull
mov
lea
fnstcw
adc
mov
int
inc
cmp
and
jbe
lahf
xor
imul
mov
ret
xor
and
sbbb
andb
out
lcall
insb
scas
inc
jnp
inc
sbb
clc
push
pop
sbb
idivb
loopne
or
loopne
xlat
sti
sbb
fcmovnb
imul
push
test
leave
ljmp
or
sbb
out
out
dec
aam
dec
movlhps
mov
stc
loop
pop
inc
inc
mov
cmp
addr16
scas
dec
ja
jne
pop
cmp
sbb
movsl
pop
sbb
and
loopne
jge
popf
cmpsb
in
movsl
lods
add
push
inc
sub
mov
dec
scas
hlt
mov
or
bound
sub
fadds
xor
xchg
sbb
mov
hlt
sub
dec
mov
mov
mov
stos
pop
cltd
data16
push
lahf
cwtl
outsb
inc
dec
popf
mov
add
dec
jb
out
jp
jp
or
dec
add
data16
push
std
fcmovnbe
mov
outsb
and
mov
mov
mov
cli
pushf
mov
addr16
sub
push
push
das
push
popa
imul
jl
lock
pop
xchg
fmuls
scas
gs
add
xor
les
ljmp
sub
or
outsb
insl
jp
cmp
cmp
fsubrl
lods
addr16
shll
mov
into
std
pop
ffreep
adc
fsub
hlt
or
stc
jge
and
push
fsincos
addl
loope
jle
push
cmp
push
pop
mov
into
adc
stos
pop
xchg
repz
scas
mov
jle
pop
push
mov
std
push
inc
lods
xchg
jne
cmc
pusha
mov
push
push
mov
pop
pushf
sarb
imul
repz
inc
fsub
or
inc
or
rcr
mov
cmpsl
mov
sub
aam
sub
inc
adc
lds
call
aas
mov
mov
lahf
sub
mov
call
inc
movsb
ja
loop
add
and
adc
pop
pop
jle
in
mov
mov
repnz
int3
dec
mov
fiadds
fdivs
call
stc
adc
push
insl
sbb
loope
inc
es
xchg
pop
cmp
arpl
inc
aaa
dec
add
push
mov
aas
mov
cmp
aas
fs
xchg
ficoml
inc
mov
pop
pusha
fwait
stos
into
cwtl
jbe
int3
aaa
xchg
mov
dec
flds
andl
push
xchg
sbb
adc
xlat
xchg
arpl
out
or
sbb
nop
inc
daa
push
sub
shrb
push
out
ja
and
jg
and
mov
arpl
cmp
and
shll
icebp
out
ret
movsl
xor
pop
js
xor
xchg
shrl
lea
cmpsl
sbb
lret
adc
pusha
mov
fisubl
cld
cwtl
movsb
add
mov
xchg
shrb
or
nop
sbb
mov
call
lds
shrl
mov
or
insl
out
stos
lods
cmp
in
cld
in
leave
mov
pop
jno
jmp
sti
sub
test
adc
aam
fisubl
adc
mov
mov
es
mov
mov
sub
call
mov
fidivrl
mov
ljmp
mov
sub
and
xor
dec
cmc
cli
mov
fstl
out
aaa
sbb
repnz
movswl
repz
sub
rclb
dec
mov
aad
mov
jae
jne
inc
imul
push
xchg
mov
push
out
lret
fs
inc
push
adc
dec
fs
in
iret
mov
shl
cmp
push
mov
adc
lods
fdivrl
xlat
addl
imul
sbbb
js
bound
sbb
scas
lret
fbstp
jp
ret
out
inc
pop
fmuls
aad
enter
test
sub
xchg
push
adcb
mov
xorl
and
cmp
sub
pusha
mov
flds
cmpsl
dec
cmpb
mov
ret
popa
adcl
xchg
jns,pt
in
mov
out
in
mov
or
jae,pn
cld
cld
pop
mov
or
adc
jnp
cld
aad
scas
lret
xchg
cwtl
mov
lods
ljmp
and
push
test
adc
inc
and
popf
or
cmpsl
aas
and
cld
shl
jnp
mov
jno
test
cmp
jp
mov
push
stc
hlt
mov
dec
or
nop
js
inc
xor
pop
gs
mov
fisttpll
test
ljmp
pop
sub
mov
pushf
mov
ss
fptan
jae
lods
xchg
das
add
ficompl
in
movsb
mov
mov
mov
imul
xchg
inc
cmp
mov
mov
adc
or
ja
jne
adc
adc
std
in
push
push
push
cmp
clc
add
jl
xchg
sub
jb
repnz
jmp
mov
or
push
ja
push
test
mov
scas
xor
outsl
dec
xchg
sbb
mov
xor
ss
push
cmpsl
popa
cs
and
in
arpl
push
mov
mov
psllw
ds
insl
mov
adc
std
adc
js
lods
inc
pushf
adc
lcall
lock
dec
stc
dec
movsl
cmp
inc
iret
cmp
and
inc
push
mov
jge
cld
xor
or
rolb
sub
dec
out
inc
and
imul
int3
hlt
popa
push
stos
out
and
test
xorl
outsl
pop
test
mov
in
and
jl
aad
mov
lds
lods
jbe
or
pop
jo
fistps
pop
jns
xchg
jbe,pt
mov
xchg
inc
jecxz
jae
outsl
fwait
incl
rorl
adc
test
jge
jnp
push
xor
jmp
or
aam
mov
cld
xor
pmulhw
bound
add
push
es
rcl
fcmovne
ss
shl
stos
test
inc
jnp
xor
lcall
sub
rcll
or
cmpsl
push
cs
push
cwtl
jne
pop
mov
aas
sbb
out
mov
mov
or
sbb
insl
outsb
pop
and
inc
push
mov
leave
xchg
aam
mov
mov
lahf
cwtl
jmp
aam
cmpsb
jnp
push
js
cld
mov
adc
sbb
ds
popf
out
mov
rcll
cmp
idivl
mov
hlt
pusha
jae
and
and
sub
inc
in
dec
arpl
leave
mov
imul
stos
lahf
addl
pop
leave
int3
dec
sub
cmpsl
dec
unpcklps
push
int3
xor
notl
mov
jge
add
pop
stos
xchg
lcall
rolb
push
mov
dec
add
cmp
mov
push
push
adc
jmp
cmpsb
cmc
test
arpl
fidivrs
push
in
push
pop
pop
mov
and
mov
sbb
jae
in
in
sti
cltd
adc
sbb
xor
push
pop
push
scas
or
out
icebp
cwtl
add
or
popf
jg
sti
testb
pusha
and
cld
orl
push
popf
and
cmp
pop
or
adc
jle
or
inc
xchg
sub
fstps
add
std
cld
repnz
cmp
mov
cmpsl
bndstx
cmpl
sbb
gs
cmpsl
mov
sbb
cmc
call
sbb
fisttpl
inc
xlat
lahf
jbe
andb
mov
in
push
nop
xchg
ja
mov
sbb
fldenv
testl
dec
add
push
xlat
adc
in
dec
ljmp
aaa
xchg
test
int3
enter
xchg
inc
mov
inc
push
pop
idiv
pop
loop
push
dec
push
aas
dec
pop
mov
cli
adc
lods
insl
jl
aad
gs
pop
movsl
int3
jl
lods
mov
inc
dec
dec
outsb
fiaddl
xor
imul
xor
and
sbb
sub
xor
jge
enter
les
outsb
jp
mov
adc
fbld
arpl
jae
jmp
mov
push
aam
mov
push
cs
aam
xchg
add
pop
stos
xchg
and
pop
jl
mov
cld
pop
stc
les
push
lock
dec
shll
adc
repz
adc
push
adcb
mov
xor
jbe
rcrl
pop
sub
push
je
jae
pushf
iret
push
mov
dec
inc
pop
xchg
mov
fisttps
cmp
pop
inc
rolb
cli
mov
add
cmp
or
and
popa
push
add
loopne
shlb
xchg
jge
add
lret
sahf
mov
dec
xchg
rcll
hlt
imul
add
and
in
imul
scas
ja
jnp
mov
lret
aam
in
mov
gs
inc
fistps
push
in
loopne
lahf
pop
hlt
fcmovne
ficoms
aaa
mov
push
pop
jp
adc
int
movsb
inc
movsb
fcmove
fucompp
iret
mov
push
cmc
aaa
call
sbb
xchg
inc
adc
arpl
inc
pop
and
pop
jg
add
mov
ret
ret
into
mov
fwait
rorb
fwait
jmp
jb
outsb
jb
fcomp
flds
fnstsw
sub
mov
enter
pop
testl
clc
ss
mov
int3
out
gs
add
imul
push
xchg
mov
sub
sahf
mov
jg
jmp
add
jmp
popf
mov
push
fisttpl
hlt
mov
movsl
pop
inc
inc
sahf
xchg
mov
jno
sarb
idivl
and
imul
cmpsl
mov
or
xor
sub
jnp
outsb
ret
jl
adc
aam
pop
jp
mov
or
stos
loopne
inc
jae
jle
cld
pop
adc
mov
xchg
pop
pop
aam
in
sub
dec
and
addr16
and
hlt
dec
nop
xor
xor
test
dec
lods
loopne
iret
iret
lea
jbe
xor
push
nop
cmp
andl
mov
mov
jp
push
ret
push
jg
jg
aaa
testl
repnz
cmpsl
jnp
hlt
lock
or
adc
xchg
push
mov
xorb
aaa
mov
mov
rcrl
pop
notb
je
dec
imul
aas
ds
jmp
outsl
lods
adc
sti
mul
push
fwait
add
cmp
stc
cmp
cltd
adc
ds
xor
in
loop
push
xor
mov
add
xor
pop
lcall
mov
adc
push
push
scas
loopne
mov
sub
lods
xor
sarl
lods
mov
jo
inc
adc
or
inc
sahf
mov
imul
adc
cmc
mov
adcb
mov
sar
push
fwait
cs
inc
decl
push
mov
cltd
pop
add
mov
or
nop
xor
inc
imul
std
inc
pop
stc
shll
xchg
repz
out
jns
xchg
xchg
mov
xchg
pop
repnz
push
lret
popa
jno
xchg
jnp
xlat
leave
and
js
xchg
cmp
jmp
cmpsl
jnp
stos
addr16
sub
divb
test
cmp
into
xor
add
lea
out
mov
fisttpl
lods
inc
cmpsb
lock
test
sbb
ret
push
pop
pop
arpl
xor
fwait
sub
xchg
cmp
pushf
punpckhwd
sub
aas
sbb
push
and
jo
sub
mov
and
ss
cmp
jnp
adcb
test
lret
add
lret
push
jb
sub
push
xchg
mov
lds
bound
adc
inc
xor
lahf
push
pusha
stos
scas
push
xchg
or
push
pusha
add
push
xchg
outsl
sub
daa
lea
jp
ss
shlb
xchg
cmp
es
xor
push
jne
inc
mov
push
cmpsb
hlt
jl
add
sub
push
int
fimull
inc
xchg
lret
hlt
jge
and
pop
flds
lcall
pop
push
pop
jl
dec
dec
std
std
ret
imul
add
in
repz
pusha
test
loop
xor
lahf
call
ret
stos
and
push
pop
aas
lock
inc
add
sub
ret
lea
mov
xor
call
lcall
add
jbe
fsubl
push
int3
and
test
xchg
xchg
jmp
push
jbe
aaa
mov
or
dec
push
xchg
sbb
pop
in
adc
push
iret
mov
xchg
mov
push
insl
data16
dec
popf
sub
jo
pushf
shll
add
push
imul
jno
jnp
movsl
jl
int
cmp
adc
ljmp
or
sbb
sbb
imul
dec
scas
test
shrl
cmpsb
mov
fmuls
dec
cld
fcoms
aam
ds
pop
adc
iret
insb
movsl
cs
inc
loope
mov
jmp
cs
xor
decl
add
out
pop
push
rclb
in
mov
adc
out
lahf
jle
movsb
lods
adc
add
jge
out
int3
inc
shrb
sbb
jecxz
leave
loop
aas
inc
xor
cmp
jnp
fstps
stc
push
pop
popfw
cmpsl
repz
hlt
push
ljmp
jge
jae
pop
dec
jmp
push
cmc
icebp
movsb
dec
mov
mov
add
or
pop
je
int3
int
jmp
mov
arpl
cmp
dec
dec
push
nop
or
movsl
cmp
mov
mov
or
lock
scas
test
jmp
xlat
scas
mov
cli
in
pop
out
cltd
lods
add
xchg
inc
out
sbb
adc
aad
gs
stc
inc
sarl
mov
scas
mov
push
rorb
jbe
arpl
call
inc
daa
outsl
sub
adc
mov
inc
sub
jo
pop
sbb
ret
mov
es
lret
into
mov
dec
push
addl
mov
dec
xchg
je
xlat
mov
repz
daa
or
xchg
jno
push
out
cmp
leave
add
xchg
ja
lahf
popf
hlt
xchg
aas
inc
push
jmp
in
cmp
mov
insl
dec
je
mov
xchg
pop
push
inc
fistpl
xor
cwtl
lret
cmc
outsb
addl
jbe
test
fiadds
rclb
popf
mov
adc
or
adc
ljmp
loop
xchg
pop
imull
xlat
cld
adc
js
mov
data16
stc
dec
dec
jge
cmpsl
mov
cmp
dec
loop
pop
rcrl
cmp
out
clc
xor
mov
mov
jl
push
dec
sub
scas
pusha
cmp
adcb
sti
lret
dec
cmp
int3
ja
imul
test
clc
mov
popa
fcomps
push
sti
sahf
cmc
adc
rorb
nop
push
xchg
pop
sar
in
sarl
out
aas
or
mov
dec
add
popf
aam
int3
jl
fstps
and
jp
inc
dec
js
rcrl
shll
push
and
push
sub
xchg
cmc
popa
aad
cmp
insl
je
sbb
inc
push
sub
cmc
dec
stos
xchg
iret
sub
mov
xor
or
lods
mov
ss
mov
mov
andl
inc
shlb
sub
loope
add
cmp
mov
mull
cmp
jo
cmp
ja
adc
in
test
in
mov
js
outsl
loop
mov
aas
mov
inc
jbe
cmp
cs
outsl
pop
mov
dec
push
xchg
mov
push
adc
push
repz
outsl
jge
mov
shll
pushf
sbb
or
aas
xor
cld
leave
add
shl
mulb
cmpl
jnp
cmpsb
cld
ljmp
fidivrs
pop
cmc
std
and
or
adc
inc
sbb
pushf
inc
scas
or
xchg
fwait
pop
fs
or
push
xchg
xchg
adc
setb
stos
bound
mov
arpl
es
pop
es
pop
fbld
test
jmp
fsub
dec
mov
inc
jle
fsubrs
sbb
sbb
mov
mov
xchg
mov
outsb
nop
adc
into
cs
addl
fstpl
xor
ret
scas
or
cmpsb
fmul
fistpl
mov
and
add
mov
int3
sbb
pop
sbb
sub
cmp
out
inc
insb
mov
inc
sub
in
or
pop
and
das
and
in
mov
dec
or
nop
lods
cli
jb
inc
and
enter
es
mov
fisttps
and
sbb
leave
add
xchg
in
js
out
inc
push
mov
imul
cltd
pop
ret
mov
lahf
outsl
cmc
call
mov
dec
cmpsb
push
cmc
mov
mov
push
mov
imul
adc
iret
aad
dec
or
cmp
aas
faddl
sub
inc
mov
shrb
imul
ret
push
rclb
and
add
xor
imul
adc
xchg
or
fmulp
popa
hlt
cmc
push
imul
lret
add
cmp
mov
add
stos
cwtl
add
stos
adc
and
in
mov
xchg
jmp
mov
jmp
dec
sahf
lea
dec
xchg
into
shll
jmp
add
mov
push
aaa
mov
int
mov
push
jo
data16
jne
pop
pop
imul
pushf
push
xadd
push
xor
mov
or
jp
mov
stos
xor
jae
fwait
je
icebp
mov
xchg
sbb
ds
into
push
je
push
dec
das
xchg
jp
dec
ret
outsl
icebp
push
pop
ja
cli
test
lret
test
and
lret
sbb
mov
sub
push
adc
dec
pop
test
nop
and
lods
jle
sbb
xor
sbb
cmp
aam
insb
fmuls
jmp
xchg
dec
lods
movsl
cmp
data16
sbb
jle
pushf
adc
cmpsb
mov
pop
dec
movl
fwait
cmp
jb
lahf
push
xchg
loop
shrb
fidivrl
add
gs
roll
ja
lcall
xchg
sub
in
mov
out
aam
adc
mov
lcall
mov
enter
fstl
push
inc
xchg
xchg
inc
imul
xchg
cmp
xor
lods
dec
out
push
dec
andl
mov
rorl
sbb
sub
jne
lds
xchg
ret
loopne
pop
xor
xor
pop
xor
lahf
lock
sti
insl
mov
push
addl
gs
ret
gs
add
shll
iret
pop
inc
xchg
lret
fs
or
mov
mov
cltd
sub
jae
sbb
xchg
lds
adc
inc
imulb
jmp
outsb
cwtl
test
lock
jbe
rcrb
pop
mov
xchg
xchg
add
iret
popa
sub
adc
mov
or
stos
inc
adc
lret
xchg
dec
std
daa
push
inc
push
and
sub
in
lock
into
mov
and
cmp
scas
es
bound
ret
sub
sti
mov
jne
outsl
mov
out
imull
daa
out
sbbl
hlt
xchg
inc
jo
shrb
push
stc
cmp
das
sbb
and
out
push
xchg
ret
xor
inc
mov
push
cmp
jnp
dec
dec
clc
lret
icebp
lahf
cmpl
push
inc
mov
sbb
cmpsb
popa
jo
nop
notl
adc
push
ss
adc
addr16
movsl
imul
bnd
mul
addr16
es
lods
dec
push
inc
or
movsb
xchg
xor
pop
sub
push
lea
cmp
push
aad
fnsave
mov
fcomps
clc
mov
popf
lahf
shl
mov
aad
push
lods
and
xor
add
pop
mov
aad
ret
sbb
cmpsl
ret
ror
push
jmp
aaa
rolb
ss
dec
in
and
inc
js
mov
outsb
adc
sarb
mov
xchg
imul
in
mov
push
xchg
cmp
cmp
push
lods
mov
xor
dec
push
xorl
fsts
push
adc
adc
sbbb
push
jl
jae
mov
mov
sub
hlt
out
mov
dec
push
xchg
mov
loope
sbb
jb
dec
rep
test
dec
cmp
lock
cmp
incb
mov
outsl
in
sub
mov
add
mov
cli
adc
jae
push
add
gs
lahf
lds
push
push
insb
out
xchg
clc
mov
cs
mov
push
repz
mov
add
popf
dec
outsl
mov
movsb
xlat
in
dec
lock
in
loop
shl
push
push
sbb
int3
cmp
inc
jle
stos
je
rol
sub
dec
dec
lock
adc
dec
mov
and
xor
xorl
push
icebp
xchg
sbb
imul
fildl
xchg
mov
pushf
daa
in
cmpsl
jmp
jae
ds
adc
pop
lods
pop
into
xor
in
cmp
lret
xchg
mov
cmp
jbe
pop
leave
mov
cmp
sbb
test
icebp
sahf
or
repz
push
lods
fisubl
in
push
cltd
pop
add
inc
push
cwtl
adc
cmpsb
xor
enter
mov
roll
adc
pop
adc
lock
mov
test
sbb
xchg
jnp
aaa
scas
jno
adc
pop
into
dec
icebp
inc
insl
inc
imul
or
or
mov
jns
pop
data16
adcb
xor
aas
and
fsubp
xorb
aas
mov
push
ss
int3
rorl
push
sti
inc
xor
pop
add
add
cmp
mov
or
xor
insl
testb
xchg
insb
mov
sub
push
cwtl
inc
cli
xor
out
mov
add
sbbb
mov
repz
inc
scas
ds
cmpsb
test
roll
mov
dec
xchg
stc
ret
ja
jns
adc
pop
test
mov
lcall
and
cltd
cld
inc
jmp
das
cmpsb
bound
push
dec
lods
lds
jae
jnp
mov
iret
cmp
inc
jno
in
lcall
jge
pop
cld
lods
pop
jle
stc
push
or
nop
dec
sbb
fnstsw
icebp
xor
aam
xor
das
dec
xchg
movsb
outsb
test
ss
sbb
mov
mov
rorb
add
std
push
xor
rclb
shlb
xor
inc
pop
std
loope
out
and
adc
mov
cmp
jmp
lret
mov
mov
sub
add
sarb
loope
mov
je
test
cmpsb
sbb
mov
sbb
add
repnz
add
dec
jbe
sbb
sbb
push
push
push
xchg
test
push
inc
dec
ss
aaa
cmpsb
jmp
push
or
pop
filds
lods
add
mov
xlat
aaa
gs
push
mov
pop
cmp
fdivrl
movsl
test
pusha
cmpsl
cld
xchg
sahf
xchg
popa
cmpsb
pop
repz
pop
into
std
adc
dec
mov
and
ljmp
pop
pusha
or
icebp
xchg
lea
push
sbb
popf
add
add
ret
mov
xor
lods
test
sbb
std
cli
pop
inc
mov
mov
mov
in
test
in
pop
cmpsl
or
lret
cmc
cltd
inc
in
cmpsl
aam
scas
adc
xor
push
xchg
dec
inc
and
xchg
fwait
mov
mov
adc
test
cltd
mov
push
mov
push
dec
lds
notl
arpl
test
cmp
icebp
and
adc
push
das
hlt
xor
stos
les
je
into
mov
in
aaa
mov
push
pushf
sbb
imul
jns
lret
ljmp
dec
insb
push
cwtl
lret
add
inc
xchg
je
and
xor
lret
xchg
js
insb
ja
test
add
jae
inc
std
insb
jae
fisttpl
mov
aad
dec
lea
lock
mov
mov
add
add
push
jno
jge
adc
mov
in
xor
dec
adc
test
fistpll
cmp
aam
jns
and
dec
pop
xor
fcmovnu
aas
xchg
pop
shrb
dec
or
or
inc
sbb
xor
inc
pusha
sub
cli
xor
scas
cltd
fstpt
lret
xchg
repnz
fcomi
fsubl
ljmp
push
xor
ret
inc
in
sub
cld
and
movsb
xchg
das
sbb
jecxz
xor
jns
add
add
cmp
push
int3
jb
dec
mov
and
jle
lds
push
xchg
pop
pushf
aad
sar
pop
jae
sbb
cmpsl
jmp
and
int
sub
andl
pop
shll
data16
sbb
push
rorl
lods
call
xchg
push
adc
adc
jge
cmp
std
inc
repnz
or
inc
or
pop
cmpsl
push
repnz
rcl
mov
ljmp
dec
push
test
movsb
sbb
cmp
outsl
mov
xchg
in
and
in
xchg
gs
xor
nop
mov
out
push
adc
fsubr
adc
cmp
jp
shl
movsl
mov
jmp
push
cs
cmp
mov
mov
cld
cmp
inc
mov
lahf
or
loopne
int3
addr16
push
imulb
or
ss
and
out
push
int3
or
jl
mov
popa
mov
push
jno
xchg
xor
sarl
into
jmp
lea
or
mov
push
out
mulb
push
xchg
shll
cmp
into
or
push
popa
jmp
or
out
inc
xor
dec
adc
out
lds
je
es
ffree
mov
dec
lods
jp
push
push
jecxz
adc
mov
outsl
add
mov
cmc
dec
mov
adc
loopne
cltd
pop
inc
push
fidivl
adc
dec
dec
ret
sarb
lock
sbb
in
gs
sbb
into
aas
inc
pop
es
test
xor
scas
ret
insl
and
push
mov
std
ret
cmpsl
sub
cmp
xchg
xchg
mov
push
xchg
jb
jno
mov
push
xor
push
loopne
jmp
out
xchg
mov
addr16
xchg
sbb
pop
sub
ret
jb
push
subl
cmpsl
dec
ljmp
ja
enter
test
mov
leave
pop
loopne
adc
cmp
fisttps
dec
dec
mov
lock
cmpsb
lds
arpl
push
pop
xchg
ret
sbb
inc
mov
daa
lea
pushf
fidivrl
mov
cmp
pop
sbb
iret
fstps
and
rcrl
aas
sub
cwtl
aad
in
dec
cltd
idivb
cli
notb
xor
mov
scas
pop
mov
mov
mov
lds
adc
xchg
mov
fsubrs
or
jne
push
sbb
cli
data16
test
sbb
cltd
xor
adc
xchg
jns
test
ss
jp
or
adc
adc
in
nop
sbb
or
les
in
or
sbb
jg
cmc
and
sbb
inc
mov
cmc
subb
fdivs
loopne
jle
mov
mov
loope
inc
cmp
js
loop
jae
push
insl
push
or
mov
cwtl
mov
fnstcw
jmp
mov
jg
xor
add
cltd
jnp
mov
inc
dec
insb
das
push
cmp
ja,pt
scas
sub
push
and
roll
jecxz
ss
cwtl
loopne
jno
popa
push
fbstp
cmc
mov
popf
push
aaa
fsts
dec
shrl
pop
and
adc
rclb
jmp
jle
aad
test
data16
jns
xchg
mov
sbb
pushf
cmp
jbe
mov
fsubrs
stos
sub
fisubs
mov
paddusw
cmp
add
push
mov
enter
cmp
sbbb
mov
sbb
sahf
dec
jge
inc
mov
scas
or
sbb
loopne
test
fildl
cmp
inc
into
push
call
addb
movsb
xchg
ret
les
movsl
push
ljmp
addr16
cwtl
add
mov
mov
inc
jo
and
push
es
push
dec
mov
mov
shlb
inc
lods
insb
cld
xchg
push
xchg
adc
int
into
pop
mov
inc
pop
js
in
in
je
mov
bnd
inc
inc
sti
ret
cld
rcr
in
mov
jg
push
adc
adc
pop
pop
call
mov
out
xchg
mov
or
mov
mov
push
and
in
jns
jecxz
mov
push
leave
stos
xchg
fisubs
jge
loope
sub
or
test
fistps
add
inc
mov
lea
pop
cmc
xchg
loopne
xor
int3
and
test
mov
sbb
pop
dec
jmp
mov
int
cmp
adc
arpl
mov
jp
aam
mov
inc
xchg
pushw
out
mov
cmp
lea
inc
push
and
and
pop
mov
mov
mov
cmp
lds
fcom
adc
and
or
stos
jns
lods
fmuls
and
mov
dec
mov
and
pop
subb
ja
or
push
int3
dec
push
hlt
or
add
fisubl
add
rcr
subl
lea
adc
roll
xchg
pushf
add
push
jmp
and
jp,pt
add
push
adc
fimull
push
xchg
sbb
mov
inc
jmp
cmp
fldt
and
pop
fisubs
cmpsb
mov
ds
outsb
je
arpl
jmp
aad
or
cltd
sub
dec
cli
mov
jnp
cld
mov
cmp
rcrb
xchg
scas
sub
inc
push
ret
daa
dec
fsts
xchg
fsts
test
xor
add
lea
xor
in
shr
xor
mov
fsub
cmp
pop
arpl
and
ret
jge
loop
lock
add
push
addr16
js
fisttpll
jno
push
dec
stc
push
xchg
pop
dec
xlat
cmpsb
sub
or
xchg
cmp
xor
ficoml
daa
pop
arpl
fcmovbe
clc
cld
lea
sbb
xor
add
imulb
lds
cmc
mov
jge
orb
lret
add
lods
imul
inc
outsl
int
rolb
and
into
add
call
dec
fsubr
sahf
xchg
lock
or
adc
data16
push
dec
cmpsl
or
adc
loope
scas
scas
out
sbb
mov
add
xor
repz
add
jp
cmp
test
addr16
jae
push
dec
fimull
jns
imul
loop
scas
sbb
xlat
in
and
xchg
seta
xor
out
in
mov
mov
mov
xchg
pop
test
and
aad
sti
add
mov
lds
aam
lock
pop
leave
inc
push
dec
je
or
enter
out
inc
mov
xor
jbe
sbbb
or
sbb
sub
sub
data16
out
push
std
cmp
sub
and
pop
push
xor
or
xchg
aam
out
jecxz
sub
or
js
dec
es
cmp
pop
leave
xor
inc
xor
sahf
jl
mov
fprem1
cmpsl
repnz
test
xor
bound
sub
push
or
popf
in
fsubrl
mov
mov
inc
ret
leave
aam
rorl
jnp
scas
xchg
or
sahf
les
mov
out
idivl
ret
loope
inc
mov
cmp
dec
mov
xchg
mov
les
lock
and
jnp
jns
xchg
stc
dec
les
jmp
lcall
pop
fmull
jns
sti
push
imul
aaa
lods
mov
std
jmp
push
xchg
les
fucom
fs
or
mov
lahf
in
xorl
js
imul
lods
sub
mov
mov
js
xor
inc
jns
iret
fwait
imul
in
movsb
or
nop
addl
fs
inc
mov
jbe
popa
and
push
scas
and
movsl
daa
push
ss
outsl
xchg
inc
mov
rcrl
xchg
xor
cmpsl
cmc
lds
cmp
out
add
add
mov
add
push
mov
test
add
jno
sbb
cwtl
jae
add
xlat
add
xor
movsl
inc
mov
dec
lock
lcall
pop
js
sbb
test
inc
les
ljmp
es
leave
hlt
out
xor
or
jb
enter
ljmp
orl
dec
push
adc
jmp
pop
xor
pop
pop
out
cwtl
jle
push
js
push
sub
leave
pop
add
or
out
jecxz
mov
or
or
sbb
inc
jbe
icebp
sub
mov
jge
cmp
mov
sbb
testl
rcrb
xchg
and
dec
sub
jo
dec
mov
push
pop
sub
jge
out
jb
xlat
bound
fnstsw
pop
arpl
in
dec
pop
data16
lods
xor
scas
inc
fcoml
jge
scas
jne
xor
cli
mov
add
mov
andb
aas
mov
xor
jge
xchg
xchg
sub
lock
loopne
cmc
sub
dec
mov
push
mov
shrd
sub
arpl
push
xchg
ds
fdivrs
push
test
adc
jle
xchg
ret
xor
mov
mov
xlat
lcall
inc
pop
add
pusha
adcb
sbb
add
scas
and
insb
jmp
add
inc
pop
or
mov
push
sahf
leave
push
xchg
pop
or
shlb
es
pusha
lahf
loope
lret
pop
xorb
mov
daa
push
sbb
jge
cmp
push
mov
iret
and
and
inc
xchg
rolb
xchg
mov
pop
pushw
fdivrp
out
fldl
lret
add
loope
popa
xchg
cmp
mov
clc
leave
push
pop
mov
jl
inc
daa
movsb
test
out
ret
push
cmpsl
sbb
mov
lea
jnp
cli
and
lods
arpl
mov
fsubrs
mov
add
push
cmpsb
push
clc
mov
inc
out
pop
xchg
imul
mov
jo
xchg
adc
adc
cmpsb
jno
jae
enter
sti
push
mov
push
mov
mov
dec
mov
movsb
imul
call
enter
add
push
cld
push
fiaddl
inc
popf
jns
xor
and
and
cmovbe
imul
mov
cmpsl
enter
fistl
xchg
dec
mov
jne
popa
aas
sub
mov
stos
outsb
sub
mov
adc
add
pop
xlat
out
pop
leave
xor
cs
pop
pop
adc
jnp
inc
pop
stc
xchg
lds
push
mov
nop
test
xchg
jp
dec
insb
dec
sbb
scas
dec
pop
adc
push
push
out
push
insb
dec
jb,pn
loope
push
movd
in
in
js
fnstenv
arpl
jo
aaa
js
xchg
lret
mov
in
rcll
fcomps
repnz
in
nop
inc
hlt
insb
sub
loop
xor
mov
mov
outsl
pop
jmp
adc
or
pop
dec
loope
xchg
jg
push
xchg
frstpm(287
lahf
aam
shl
fs
in
xor
loop
lret
dec
js
pop
addr16
mov
in
lods
popa
push
sbb
lret
add
add
bound
jmp
in
and
mov
mov
cmp
mov
outsb
xor
xchg
sbb
call
dec
xor
jmp
mov
or
pop
in
lods
addr16
sbbl
pop
aas
dec
jle
push
cwtl
jnp
pop
mov
mov
or
push
popf
in
push
add
adc
mov
pop
mov
mov
or
adcb
pop
arpl
push
pop
xor
fcomps
out
cmp
cmp
scas
add
and
xchg
insl
enter
add
add
xlat
mov
fmull
stos
addr16
fldcw
cmp
dec
imul
sub
out
mov
and
and
jns
outsb
mov
cmpsb
and
pop
inc
xor
sbb
xchg
push
adc
int
lods
cmc
push
push
bound
adc
xchg
or
cltd
loope
mov
ja
test
into
push
or
enter
nop
clc
sbb
mov
sbb
pop
repz
push
pop
lock
xchg
mov
stos
pop
lods
jl
sub
dec
push
call
je
flds
sti
fistl
sbb
sub
sbb
push
ds
loopne
or
and
in
ss
cmp
mov
orb
and
push
xchg
ja
ljmp
fildll
outsb
jecxz
fsub
and
sbb
jp
es
sub
xor
loope
inc
pop
xor
sbb
push
adc
mov
lock
xor
imul
mov
fstps
ljmp
or
sub
fcomps
push
cmp
in
add
lds
fsubrl
or
inc
lret
movsb
push
cmp
aam
pushf
popl
pop
push
push
pop
sub
adc
mov
adc
inc
xor
adc
daa
cmc
repz
jno
cld
inc
sub
lea
push
adc
pop
inc
mov
jle
out
cmp
cmp
test
inc
cmp
pop
lods
push
subb
scas
loopne
mov
mov
push
repnz
pop
jmp
ret
call
inc
jnp
add
ret
lock
repnz
push
sub
xchg
mov
sbb
adc
popf
pusha
jae
sahf
pop
pushf
adc
push
xor
pop
sub
mov
sbb
sub
es
xchg
dec
mov
aam
xchg
mov
lahf
repz
jp
insb
mov
jne
notl
mov
decl
and
lock
sbb
push
sbb
sub
fstps
testl
nop
dec
mov
pop
jo
xchg
jle
push
loop
in
lea
mov
out
xchg
add
jbe
xor
push
xorb
imul
sub
rorl
adc
xchg
fildl
test
push
cld
sbb
jae
pop
and
scas
cli
gs
and
sti
sbb
mov
jb
movsl
pusha
jmp
push
cmp
adc
aas
clc
lret
repnz
fstps
push
adc
or
push
fwait
xor
fbstp
out
lods
ljmp
cmp
ljmp
roll
popf
out
xor
pop
dec
das
mov
cmp
jnp
pusha
sub
inc
pop
mov
pusha
mov
in
test
cwtl
push
push
fildl
cwtl
incb
imulb
dec
pop
xchg
iret
bound
or
xchg
fisubl
or
pop
or
adc
scas
daa
sub
nop
mov
dec
xchg
dec
adc
sahf
outsl
lahf
inc
daa
push
ss
adc
stos
popf
cld
and
push
loop
in
dec
cli
rol
outsl
ror
faddl
movsl
fs
mov
adc
imul
xchg
clc
test
je
push
adc
iret
pop
and
xchg
outsl
scas
ss
mov
jg
in
pop
loop
inc
lret
push
jmp
orb
je
push
cs
sub
sbb
sbb
jg
daa
scas
cmp
inc
test
gs
mov
pop
dec
stos
out
sahf
fistpl
xchg
mov
sbbb
xor
addr16
and
fwait
mov
shl
jle
mov
pop
mov
ds
sbb
pop
arpl
pop
nop
xchg
mov
mov
pop
inc
and
sbb
in
dec
jecxz
scas
loopne
dec
les
sbb
xchg
push
popa
subl
and
fildll
addr16
xlat
imul
or
mov
shlb
jp
aam
bnd
testl
sbb
ret
sahf
add
inc
or
add
cmp
int
push
or
repz
dec
lea
adc
mov
cmp
ss
add
lret
inc
int
stc
pop
pop
loopne
mov
dec
cli
lret
ljmp
or
xchg
rcr
fisubl
fisubs
stos
movsb
push
mov
into
scas
pop
loop
lds
and
xchg
out
add
imul
ds
or
cmp
mov
inc
cmp
popf
icebp
jmp
jnp
and
dec
xchg
lods
movsb
or
icebp
lea
aam
xor
mov
idivb
into
sub
adc
subb
xchg
shll
xor
scas
jno
dec
fbld
jge
imul
lret
mov
fbld
add
and
das
mov
adc
test
pop
inc
mov
push
fiaddl
xor
sbb
inc
in
sbb
add
andl
loop
mov
xor
pop
test
aas
insb
xchg
cmpsb
xchg
lcall
test
sub
pusha
jge
fimuls
mov
jo
mov
adc
pop
sub
sahf
sbbl
add
pop
sbb
jbe
shlb
test
lock
pop
fistpll
mov
sbb
sub
out
pop
lds
stc
in
je
jle
in
and
roll
xchg
in
mov
or
ret
divb
adcl
inc
push
aas
pop
insb
jecxz
and
dec
pop
push
or
loopne
xor
push
mov
mov
push
int
inc
dec
jmp
lret
jmp
add
xor
clc
loope
stc
xor
cs
dec
in
dec
cltd
loope
adc
fwait
mov
ja
mov
sub
cmp
faddl
bound
ljmp
fbld
pop
in
mov
jne
rorb
jb
push
cmpsl
nop
mov
jp
adc
hlt
ss
loop
in
int
sub
stos
mov
xchg
dec
stc
ret
jl
lds
add
sub
mov
fs
jne
loopne
sbb
pop
push
insb
mov
call
sub
cmp
adc
das
inc
test
mov
loopne
adc
lcall
mov
inc
arpl
in
add
adc
outsb
pop
push
dec
ja
jno
push
std
dec
push
insl
out
arpl
test
lods
xchg
and
push
lods
pop
mov
fwait
mov
push
in
addr16
popa
gs
mov
gs
ss
xchg
lock
cmp
movsb
cmpl
mov
testl
mov
test
mov
mov
popa
fcompl
sub
cltd
into
mov
jne
mov
mov
lds
iret
mov
mov
outsl
add
jge
roll
mov
xor
imul
or
into
test
add
leave
adc
cmp
xor
jo
xor
dec
int
mov
call
mov
mov
xor
stos
je
xchg
pop
xchg
fldcw
sbb
xor
mov
ljmp
mov
cli
dec
xorb
sbb
fistpll
in
or
stos
mov
sti
stc
shrl
push
and
or
cld
in
aas
xchg
mov
call
clc
cmp
call
jg
push
faddp
sub
mov
test
out
xchg
rorl
sub
cmpsl
and
rcr
mov
aas
or
pop
push
mov
sub
cmp
and
sub
pop
mov
pop
jno
dec
sti
clc
cld
roll
cmpsb
mov
mov
jge
pushf
mov
add
inc
xor
mov
dec
mov
stos
loope
aaa
fldcw
mov
mov
sub
mov
mov
or
js
aam
sub
jp
lret
mov
jle
mov
jg
push
xchg
xchg
je
dec
push
pop
or
push
mov
fdivs
dec
adc
sbb
push
das
pop
jmp
and
mov
sub
xchg
movsb
add
xchg
mov
lahf
xchg
stc
int
jp
std
cmc
js
inc
je
loop
sub
sub
jle
jle
and
pop
xchg
or
push
aad
fcompl
sahf
in
ljmp
pop
mov
sub
js
pop
out
pushf
push
sub
sub
inc
lcall
mov
xchg
mov
movsl
push
mov
out
ret
cmpsl
rcll
sbb
push
mov
jecxz
xorl
cwtl
cmp
add
mov
pop
sbb
loopne
sahf
sbb
or
or
adc
loopne
jmp
adc
sarl
icebp
push
int3
push
mov
les
add
and
mov
movsb
out
fldt
cli
mov
stc
testl
mov
lahf
or
pop
pop
lea
hlt
in
stos
icebp
cmp
scas
add
jp
movsb
and
sub
fwait
movsb
pop
mov
repz
jecxz
pop
sbb
fisubl
push
or
int
mov
fs
sbb
inc
addr16
lock
movsb
test
and
fsub
das
xchg
sbb
xchg
loopne
pusha
lret
nop
mov
push
jecxz
jae
sbb
xchg
aas
jmp
push
faddl
mov
addr16
mov
or
jno
je
add
jns
lret
mov
or
sti
push
rcrb
and
add
ljmp
hlt
shlb
es
or
dec
imul
jb
pop
cmc
dec
add
lock
mov
test
lock
pushaw
mov
daa
sbb
mov
pop
mov
pop
pop
test
iret
pop
sahf
push
int3
ror
mov
dec
xchg
jp
pop
sub
cwtl
inc
xchg
rorl
les
int3
cmp
arpl
xchg
adc
mov
aad
xchg
mov
rcrb
js
popf
lds
dec
pop
pop
jno
insb
je
pop
pop
out
xlat
daa
xorl
dec
sub
fsubs
dec
test
mov
push
ja
jmp
adc
xor
enter
nop
mov
mull
jae
popf
ret
rorl
frstor
xchg
push
lret
and
sub
push
std
lea
scas
push
sbb
mov
fimull
dec
xchg
inc
shlb
dec
movsl
faddl
popf
push
arpl
pusha
push
pop
pop
ljmp
pop
ja
fsubs
adc
sbb
push
lods
cmp
sbb
or
sub
pushf
wbinvd
push
mov
lods
stos
xor
aaa
mov
imul
into
add
es
inc
fistps
cmp
mov
js
movsl
or
cmp
ljmp
cld
add
cwtl
outsb
imul
push
mov
movsl
inc
inc
adc
sbb
out
jg
lea
sbb
into
jecxz
sbb
rorl
icebp
pop
mov
insl
fs
xchg
std
sbb
add
not
js
push
popa
div
fmuls
jnp
inc
insb
push
adc
sbb
cmp
ds
xchg
xor
out
adc
pop
pop
push
push
fs
insl
xchg
or
mov
imul
cmc
adc
sbb
sub
pop
movsl
push
push
push
shrb
addr16
add
push
and
pop
xor
push
aam
and
sbb
nop
mov
in
lcall
ja
int3
fcmovnb
cmp
or
inc
dec
mov
sarl
or
and
stos
fdivrs
jae
lock
js
sub
dec
cwtl
jb
in
sub
imul
hlt
cmp
push
mov
es
or
adc
popf
sub
jne
rcrb
and
jbe
cmp
pop
cltd
xor
loop
ss
adc
vmwrite
call
add
lods
jl
fldl
xchg
sbb
inc
push
cmp
inc
repnz
xchg
push
frstor
in
or
ficoms
push
mov
daa
arpl
or
out
xchg
add
aas
sbb
les
lret
adc
xor
xchg
into
rolb
jmp
cmp
daa
or
cltd
pop
sub
push
sahf
cmpsl
out
jp
sub
sbb
icebp
pop
subb
pop
mov
jnp
in
fldl
out
xchg
lret
dec
add
adc
or
shlb
mov
loopne
jo
addr16
stos
adc
imul
push
mov
mov
out
xor
dec
fadds
negb
push
shl
test
js
mov
incl
cmp
repz
pop
roll
mov
in
xchg
cwtl
repnz
xor
lret
into
int
fcmovnb
loope
adc
mov
pop
in
push
mov
stos
xchg
arpl
push
leave
dec
and
inc
pop
push
mov
mov
add
jmp
loopne
add
jns
jp
xchg
iret
ds
in
and
repz
lods
cmp
inc
pop
mov
movsl
mov
sub
mov
xor
outsb
test
dec
mov
fsub
push
cltd
loop
dec
jnp
dec
je
mov
jmp
je
ficomps
and
xor
jae
xchg
push
js
cmc
scas
outsb
dec
vpor
cmp
neg
stos
or
notb
aaa
or
and
jb
fdivr
push
adc
sarb
cs
es
mov
lret
sbb
mov
shrl
mov
dec
sbb
xor
fs
or
push
sub
in
xor
sub
out
loope
mov
cmp
arpl
push
ljmp
fsts
xchg
iret
mov
loop
mov
mov
or
outsb
xchg
leave
pop
stc
ss
cmc
or
aaa
fcmove
mov
pop
mov
imul
mov
fidivrl
xchg
mov
or
mov
sbb
jbe
jmp
adc
arpl
in
popf
aas
sub
stc
and
xor
rcl
add
imul
inc
mov
or
divb
das
add
outsb
cmpsl
repnz
xor
cmpb
jne
ffreep
fisubrs
mov
mov
jmp
xchg
push
cld
movsl
fs
xor
in
sbb
icebp
pop
dec
inc
fcoml
pop
mov
xchg
and
xor
addr16
push
xchg
xor
cmpsb
jb
in
add
pop
xchg
jg
sub
add
inc
into
lahf
fcomps
sub
or
scas
xchg
cmc
mov
jmp
in
hlt
nop
xchg
out
inc
pop
notb
xchg
cmc
bnd
sbb
sbb
push
push
nop
jne
pop
or
aas
jae
jge
and
sbbl
or
rol
cwtl
lods
jge
movsb
pop
push
lds
out
in
adcl
mov
loopne
jae
mov
js
jge
pop
fs
dec
daa
mov
mul
dec
add
pushl
lcall
lahf
mov
hlt
cltd
loop
test
sbb
add
arpl
mov
pop
imul
sub
sbb
inc
in
cmpsb
or
inc
nop
rcll
push
mov
jmp
pusha
cmpsl
pop
jnp
push
inc
call
sbb
outsb
leave
cmpsb
cmc
adc
fstps
xlat
in
idivl
and
shrb
or
jmp
iret
shll
test
fwait
movsl
sbb
jg
test
fdivrs
mov
mov
jge
int3
data16
xchg
pop
repnz
sub
std
mov
mov
push
aaa
imul
ljmp
mov
sub
movsl
loop
dec
ja
rclb
add
or
shlb
outsb
cli
or
fs
pop
not
jle
addr16
aas
rcll
sbb
pop
xor
jmp
xlat
pusha
lahf
xchg
xchg
xor
jecxz
les
and
adc
pop
jmp
dec
call
xchg
subb
mov
push
ja
out
xor
gs
push
in
mov
mov
push
shl
push
adc
fcmovu
fnsave
addr16
rolb
iret
andb
lahf
int
repnz
push
test
jne
jnp
inc
or
dec
js
test
jno
pop
hlt
not
popa
mov
mov
addr16
jp
jl
adc
push
push
xchg
and
sti
scas
sbb
sbb
bound
int
fadds
inc
insl
hlt
cmc
cmc
mov
or
xor
scas
mov
pop
dec
cmc
push
mov
sub
lret
inc
mov
and
mov
mov
pop
fmul
cltd
xor
push
cmpsl
or
gs
jp
pop
push
xor
inc
pushl
imulb
dec
jb
jl
pop
or
clc
orl
cmp
arpl
and
daa
sbb
popf
mov
repz
dec
cmp
or
xor
pop
jp
pop
adcl
sbb
lds
sub
inc
clc
sar
insb
test
pop
test
mov
pop
adc
mov
xor
stc
test
shl
adc
insb
xor
and
test
mov
ljmp
or
push
inc
lret
adc
jbe
bnd
sbb
loope
cmp
sbb
loop
mov
pop
cmc
sbb
inc
mov
inc
enter
out
adc
std
push
dec
lock
jge
mov
das
rclb
outsb
pop
inc
adc
add
rol
jecxz
pop
in
add
stos
mov
lcall
mov
fsubs
mov
push
jl
fcmovb
lds
sbb
mov
cmp
mov
shrl
icebp
mov
xlat
fisttpl
sbb
fcmovbe
divb
int3
repz
fstps
mov
das
jae
pop
xor
jno
pop
lock
lods
or
xchg
push
scas
mov
repnz
sub
inc
sub
loop
sahf
iret
mov
imulb
and
hlt
lret
movsl
jns
js
popa
sbb
mov
out
es
jns
js
test
mov
dec
or
mov
mov
cld
lods
sub
int
shrb
fs
rclb
push
mov
inc
das
xchg
lods
movsl
or
inc
filds
adc
mov
jb
les
repnz
test
mov
xor
and
jecxz
or
or
cltd
fimull
push
dec
push
movsb
cmpsl
mov
sbb
leave
roll
cmp
orb
leave
adc
aas
out
mov
shrl
mov
adc
xor
popa
testb
dec
pop
das
into
aas
adc
into
mov
repz
iret
fildll
arpl
cwtl
mov
arpl
push
mov
sub
mov
mov
push
mov
jg
and
pop
je
add
rcll
addb
clc
loopne
fucomip
aad
sub
call
xchg
jmp
xor
shrl
xor
mov
adc
xchg
mov
loop
movsl
or
out
lea
xor
push
imul
push
rorl
mov
push
cmp
addr16
mov
fdivs
mov
xor
test
mov
mov
cmc
fildll
frstor
insl
bound
cld
inc
out
ljmp
loop
lock
iret
jle
aas
movsl
sbb
lret
mov
inc
jns
jo
sub
incb
lods
lods
iret
mov
rorb
push
data16
stos
jmp
test
jne
sbbb
rorb
aas
adc
clc
push
push
jb
out
add
pop
sub
cmp
inc
addb
or
inc
jecxz
imul
enter
mov
cmpsl
adc
arpl
fs
push
out
test
imul
jbe
mov
or
cmp
sub
sbbl
xor
fisttps
fadds
ljmp
xor
xchg
hlt
jbe
and
popa
pop
fisubl
pop
insb
pop
lcall
xchg
lcall
dec
sbb
dec
imul
jne
cli
sbb
mov
dec
sbb
xor
or
negb
int
loopne
mov
jne
dec
and
mov
jp
sub
xchg
jae
and
and
ss
mov
cmc
fstp
clc
je
xchg
lods
jle
mov
add
adc
and
add
int
xor
dec
imul
sti
jmp
aas
inc
rclb
aas
pop
nop
push
sarb
out
sbbl
ret
and
xchg
push
add
push
pop
js
add
sub
pop
pop
lods
in
sbb
mov
dec
subb
pop
dec
pushf
ret
and
into
fstpt
lret
out
sbb
nop
fld
pop
imul
es
fldenv
out
hlt
or
xor
lcall
adc
add
shll
add
bound
lcall
bound
push
gs
out
call
push
mulb
push
mov
lea
jl
je
xor
sbb
push
aaa
mov
scas
inc
js
or
in
or
subl
pusha
pop
xchg
std
ja
out
inc
and
add
dec
cmc
jp
mov
inc
cli
pop
les
pop
inc
or
fwait
or
xchg
push
dec
inc
test
div
fsubrs
popf
int
notl
popf
mov
jp
mov
adc
jge
jp
push
orb
cli
mov
imulb
outsb
cmp
jnp
fiadds
mov
out
incl
lahf
mov
inc
repnz
xor
out
iret
and
add
xor
imul
sbb
inc
and
mov
out
pop
je
sbb
and
test
fstl
out
cwtl
xchg
lret
mov
hlt
scas
add
leave
inc
std
ficomps
hlt
pop
push
lret
pop
mov
nop
rclb
pop
adc
mov
sub
bswap
push
and
rcll
std
xorl
imul
sub
test
mov
test
push
or
pop
jae
xchg
sub
push
mov
sbb
mov
push
mov
pop
roll
cmp
dec
das
adc
ret
repnz
iret
loope
out
jns
push
add
inc
xchg
mov
jge
lds
sbb
jp
mov
jne
mov
test
mulb
imul
push
movsb
sub
and
push
stos
fildl
push
jns
shlb
ja
hlt
pop
jns
mov
mov
incl
loop
mov
por
sarb
lea
mov
outsb
aad
sbb
xchg
je
sti
xor
mov
push
in
xor
sbb
inc
mov
jp
loope
lcall
jecxz
in
icebp
arpl
bound
fs
lcall
inc
int3
shrl
popa
jecxz
int
fisubl
es
xchg
cld
scas
ret
cmp
lret
les
pop
cmp
sub
xor
int
jecxz
arpl
push
xchg
push
aam
daa
in
and
sarb
ss
leave
loope
clc
jb
add
shlb
icebp
mov
push
ja
ds
pop
mov
cld
xor
xchg
repz
fistpl
cwtl
jg
sbb
sub
xor
imul
loope
test
inc
fcmovnb
sub
mov
cmpl
divl
lock
sub
in
js
fnstcw
sub
sbb
ret
push
loop
outsb
xchg
pushf
mov
int3
orl
leave
push
loope
pop
mov
mov
ljmp
repnz
fcmovnbe
enter
xor
int3
add
adc
or
leave
dec
jb
outsl
or
enter
loope
mov
movsl
test
jl
mov
nop
sbb
cs
adc
xor
push
pop
and
adc
mov
enter
sbb
leave
pop
xchg
mov
mov
les
je
rcl
jno
mov
mov
add
movsb
in
mov
inc
popf
sbb
rolb
xchg
pusha
fs
js
fsubl
nop
cwtl
pop
aas
out
or
cmp
and
stos
sbb
push
addl
xor
cmpsb
push
pop
or
popf
push
pop
sahf
jp
xor
mov
sbb
inc
enter
aas
or
pop
pop
movsl
adc
clc
movsb
xchg
and
outsl
lods
xlat
lds
mov
or
add
iret
fyl2x
cmp
mov
icebp
mov
das
cmpsb
in
cmc
cmp
in
mov
imul
inc
repnz
mov
out
or
stos
pop
je
adc
cmp
dec
xor
add
pop
popa
leave
xor
push
call
jo
inc
mov
jo
push
stos
cmpb
or
out
xchg
jne
es
xchg
mov
jno
out
repnz
pushf
rorb
int3
bound
rcrb
mov
xor
fdivr
popf
mov
movsb
mov
bound
repz
pop
hlt
jle
sbb
sti
adc
xor
mov
push
mov
add
sbb
in
mov
andl
js
mov
cwtl
fwait
test
mov
mov
add
outsb
mov
sub
jl
into
mov
shrb
in
es
jns
outsl
pop
push
mov
push
and
sbb
outsb
pop
fisubl
push
xorb
lods
and
stc
mov
dec
push
xchg
jge
call
out
ficompl
xor
xor
leave
mov
adc
sbb
xchg
int
inc
jg
pop
outsl
out
lods
push
jae
imul
imul
cmc
das
movsl
or
mov
lods
and
pop
jg
add
insb
push
push
dec
bound
sbb
fbld
int
hlt
shll
cs
inc
and
out
push
arpl
cmp
nop
cmp
and
cltd
add
stos
in
cmc
adc
rolb
out
push
xor
and
jno
xchg
adc
mov
cmpsl
in
push
xor
mov
push
push
pop
sbb
pop
cltd
xor
fs
std
loope
loope
aas
icebp
or
cmp
enter
mov
mov
cmpsb
out
aaa
pop
cmp
out
shlb
mov
out
mov
shll
fcmovbe
cmp
stos
pop
jp
ror
dec
lahf
sbb
cmpsl
fldcw
mov
dec
push
sbb
popf
xor
sarl
cmpb
adc
jmp
and
aad
filds
mov
ss
xchg
xchg
loop
stos
mov
push
repz
jmp
neg
movsl
rcrl
jmp
mov
insb
sbb
out
pop
cwtl
or
xor
lcall
lcall
faddl
xor
mov
cmp
or
negl
inc
sbb
and
repnz
in
scas
push
loop
popf
enter
mov
push
cs
pop
aas
cmp
pop
enter
fwait
in
ret
ds
xor
and
cmovne
pusha
imul
mov
bound
stc
dec
das
inc
subl
cmp
sub
lods
cmc
sub
sbb
lret
mov
ljmp
or
jb
pop
dec
dec
lods
pop
mov
stos
icebp
cmp
push
mov
insl
ds
nop
xchg
icebp
stos
ss
cmpsb
sbb
mov
and
or
xchg
scas
and
fxch
aaa
xchg
out
aaa
rol
push
sub
outsb
les
bound
std
cmp
dec
add
cmp
test
pop
stc
lock
inc
mov
lock
push
xlat
lods
jo
push
lea
sbb
or
sbbl
mov
mov
jno
std
jno
mov
insl
addb
ret
cltd
lods
call
add
orb
outsl
imul
sti
jnp
iret
cmpsb
stos
fdivrp
adc
mov
mov
jmp
test
pop
loop
call
xchg
in
and
sub
adc
test
add
xchg
and
cld
and
rcrl
cmp
call
fcoml
sbb
jae
pop
inc
jb
loope
xchg
pop
cld
jnp
inc
pop
inc
mov
xchg
insb
or
xor
mov
pop
aad
xor
jl
jecxz
mov
push
iret
testb
sbb
pushf
inc
in
pop
jo
movsl
inc
lods
inc
in
lret
push
mov
xchg
pop
xchg
into
insl
pusha
dec
mov
adc
cld
adc
xchg
sub
inc
jne
in
aam
push
xchg
subl
and
icebp
hlt
dec
insl
arpl
add
mov
push
cmc
inc
imul
sbb
out
sbb
jne
dec
iret
fwait
ret
cmp
jg
xchg
pop
xchg
movsb
mov
je
lahf
les
sbb
idivl
dec
into
fdivrs
out
enter
adc
out
add
sti
sub
test
jo
lea
pop
push
test
inc
shll
sbb
popf
lahf
add
iret
int3
ret
mov
dec
rclb
jmp
daa
cmc
inc
xorl
push
addr16
scas
add
or
mov
sbb
into
xor
repnz
fdivrs
hlt
push
int
sahf
in
ljmp
adc
flds
mov
test
or
or
sbb
xlat
int
mov
sbb
in
or
sub
mov
mov
jb
xchg
pusha
pusha
rolb
sub
jnp
xor
andl
jecxz
loop
test
out
addl
test
data16
cwtl
stos
sbb
sub
ret
jo
jp
ja
add
add
adc
decb
cmp
xor
inc
arpl
lds
mov
mov
fdivr
mov
ljmp
leave
dec
test
lock
add
insl
fstl
xchg
aas
xchg
inc
or
inc
mov
mov
fmull
cmpsb
xchg
or
xchg
xor
movsb
adc
or
xchg
bound
incb
jbe
popa
les
pushf
cltd
pop
add
hlt
sbb
xor
jns
out
dec
mov
fmuls
pop
shr
pop
mov
outsl
iret
ja
cwtl
stos
sahf
mov
and
pop
out
notb
into
out
adc
push
jg
testb
fildl
add
ret
insl
jo
icebp
scas
adc
scas
ja
dec
xchg
fwait
mov
adc
push
rorl
sbbb
pushf
shll
mov
jnp
or
mov
push
andb
je
lret
fs
pop
dec
outsl
subb
mov
incl
insl
shll
stc
fs
cmp
adc
aaa
fstps
loopne
rolb
pop
out
sti
data16
cmpsb
cmp
loope
ds
pop
bound
out
sub
mov
imull
cltd
push
insb
test
out
daa
push
or
sarl
into
mov
push
data16
imul
mov
fs
dec
push
dec
xchg
lret
cmc
in
addr16
fs
lss
loope
into
out
inc
add
inc
ja
and
cmp
push
mov
pusha
and
jne
jns
mov
bound
in
cmpsb
ljmp
adc
xchg
es
ret
cltd
je
sti
aad
out
out
daa
sub
loop
xchg
into
cmp
add
mov
sub
xor
icebp
and
into
enter
test
mov
dec
xchg
or
adc
push
fcomps
push
out
jo
popf
adc
cmp
cltd
sarb
out
jl
fwait
cwtl
add
mov
repnz
cmp
iret
inc
popa
dec
push
xchg
idivl
and
mov
lea
pop
mov
fs
sbb
add
and
mov
sti
cwtl
ds
mov
rcrl
movsl
jmp
lret
cld
xchg
or
cmp
cmp
cmp
add
hlt
into
insl
ljmp
add
sahf
nop
xchg
inc
mov
and
test
notb
aas
inc
shrl
outsl
jmp
pop
xor
insl
ds
mov
scas
js
outsb
jmp
jg
inc
push
adc
imul
fistpl
ss
lret
jecxz
adc
scas
mov
xor
test
adc
mov
shll
pop
js
dec
pop
ret
dec
dec
daa
out
add
ret
push
or
nop
inc
popf
pop
add
pop
aas
adc
cltd
mov
pop
pop
mov
add
in
sahf
cmpb
jbe
mov
pop
jnp
fs
ljmp
xchg
movsb
sarl
movsb
sbb
xor
mov
cmp
mov
inc
mov
or
por
add
loop
outsl
int3
icebp
mov
push
pop
pop
push
dec
mov
cmp
jle
or
and
xor
in
negl
push
xchg
pop
rolb
inc
xorb
test
outsb
fcompl
popa
ror
popf
mov
hlt
and
or
outsl
test
mov
in
ficompl
and
std
fnstsw
loop
jle
ja
jmp
xchg
xchg
sbb
imul
dec
inc
mov
sbb
orb
pop
out
mov
leave
int3
imul
loop
push
cmp
mov
sub
or
shll
bound
popf
fwait
lea
scas
xchg
xchg
sbb
cmp
sbb
push
jo
ds
rolb
and
imul
sub
pop
jmp
ret
inc
test
mov
cmpsb
xlat
sub
test
int
pusha
pop
clc
mov
mov
shll
inc
jecxz
or
stc
insl
lea
popa
hlt
cs
je
fistps
stos
repnz
dec
jno
push
jl
inc
out
mov
test
rcrl
fdivr
test
scas
or
lret
rcr
es
xor
push
xchg
mov
addl
mov
adc
mov
ja
mov
xor
mov
repnz
xchg
outsb
std
rol
sbb
cmp
jno
jnp
or
daa
adc
lods
pop
push
cmp
mov
push
and
test
rclb
sbb
clc
mov
es
imul
jbe
das
fs
decb
cmp
push
filds
hlt
dec
pop
lods
mov
push
gs
jl
push
mov
fstpl
mov
test
mov
pop
adc
gs
dec
aam
adc
repnz
pop
xchg
xor
jae
mov
sub
js
lods
leave
stc
mov
dec
mov
ja
xlat
shll
pop
fmulp
test
inc
mov
dec
pop
and
into
inc
cvtdq2ps
subb
test
adc
jmp
aam
xchg
xor
dec
mov
xchg
cli
xchg
dec
nop
fistl
jno
cmpsb
add
pop
cmp
push
fs
inc
cs
lret
pop
scas
cltd
dec
sbb
mov
retw
insb
lods
pop
mov
jns
inc
adc
mov
add
int3
and
mov
mov
mov
sbb
xor
push
inc
lret
fcoml
mov
sbb
out
mov
lahf
lret
sarb
jae
clc
cli
mov
out
xchg
mov
ljmp
test
sub
mov
movb
xor
push
jecxz
cmp
mov
sbb
jp
mov
push
jne
lret
inc
idiv
jl
mov
adc
and
or
sub
jbe
imul
mov
cmp
sbb
lret
fucomip
test
dec
sub
pop
ss
push
prefetcht0
push
mov
or
sub
pusha
adc
hlt
jp
scas
adc
inc
jnp
inc
mov
outsb
mov
addr16
cmp
test
js
fistpll
cmp
insl
cmp
inc
dec
adc
jns
into
subl
adc
mov
scas
jl
mov
mov
leave
adc
aam
std
sbb
jp
pop
xlat
lock
and
cmp
mov
hlt
jl
pop
sbb
lods
insl
add
sbb
or
push
inc
jg
hlt
xlat
sar
popa
insl
loope
mov
and
cmp
mov
lret
roll
out
pop
adc
addr16
add
mov
push
adc
addl
jne
nop
test
mov
sbb
xor
test
or
hlt
inc
adc
lea
lea
aaa
dec
push
int3
push
loope
imul
xor
mov
aam
rcrb
movsl
mov
in
rclb
xchg
mov
inc
push
sub
add
add
add
fs
and
push
lock
scas
cmpb
or
push
out
repnz
leave
xor
test
dec
or
jg
pop
arpl
push
repz
mov
push
enter
aam
inc
sub
jecxz
pop
and
sub
inc
push
sbb
push
sub
dec
int
adc
sub
pop
jmp
out
add
inc
js
lods
sub
cmp
ret
or
xchg
imul
lds
les
sbb
cmc
dec
mov
pop
sub
in
je
pop
xlat
mov
xchg
lods
dec
add
sub
inc
mov
jnp
push
into
rorl
lds
lret
leave
fwait
lahf
sahf
push
sbb
je
ja
test
inc
mov
enter
push
mov
cmp
int3
pop
fldenv
bound
sub
mov
xchg
repnz
inc
mov
adc
test
inc
pop
pop
int3
mov
cmp
call
fistl
in
mov
pop
out
jno
mov
push
loopne
call
addr16
adc
test
lahf
and
nop
xchg
stc
ret
mov
jb
or
mov
push
sbb
push
pusha
inc
add
iret
mov
add
jl
sbb
mov
lods
clc
int3
cwtl
mov
sub
jo
cli
cld
pushf
std
and
inc
pusha
and
aad
std
sti
imul
jg
fwait
xchg
int
xlat
dec
xchg
bound
xor
jo
incl
jmp
jle
and
jmp
mov
xchg
ljmp
aad
push
mov
fidivs
repnz
mov
cmpsl
int3
jne
adc
mov
dec
loope
insl
or
movsb
pop
xchg
insl
xor
cli
xchg
shrb
cmp
lea
jno
clc
dec
dec
fwait
lock
enter
stos
pop
fs
mov
xor
jle
iret
lcall
call
ret
mov
inc
les
loop
out
mov
leave
dec
cmp
cmp
cwtl
repnz
push
inc
jno
push
daa
xchg
mov
outsl
mov
or
mov
xchg
push
orb
xchg
xorb
outsb
sbb
mov
pop
jmp
addr16
adc
cmpsl
or
jbe
insb
cmpsb
dec
fadd
sub
in
sub
adc
add
cmp
add
testl
push
jp
xchg
and
cmp
mov
jecxz
push
mov
popf
xor
push
jnp
addr16
mov
push
sub
sub
cmp
aam
fiadds
rolb
fldcw
loope
dec
dec
jmp
dec
addr16
mov
mov
dec
sbb
add
js
loope
arpl
xor
xchg
dec
fdivrl
mov
add
xchg
stc
xor
add
pushf
mov
iret
pop
jmp
fs
add
setae
insb
and
daa
xchg
inc
jno
mov
pop
xchg
js
mov
jne
adc
jnp
test
mov
mov
cmp
mov
fcompl
sarl
xor
jmp
pop
dec
mov
mov
adcl
imul
leave
cmpsb
inc
rorl
add
lods
flds
stos
and
mov
pop
pop
xlat
int
push
push
cld
dec
lret
notl
pushf
mov
enter
iret
xor
sbb
adc
xor
sub
or
test
xchg
in
js
out
mov
add
xchg
lea
cltd
sbb
ds
shrl
xchg
xor
mov
mov
jno
mov
pop
mov
int
and
add
and
hlt
bound
sahf
inc
sub
es
leave
push
std
ss
loopne
lods
mov
ds
pop
scas
pop
stos
sbb
sub
inc
cld
insl
shrl
nop
flds
add
xchg
adc
fidivs
test
and
lods
cmp
xor
ljmp
pop
lea
dec
cmpsl
mov
cmp
mov
adc
aad
xor
cmp
cmp
xchg
mov
xor
enter
out
int
mov
or
in
mulb
sub
push
or
add
pop
jge
mov
lret
movb
add
mov
cmp
add
lret
and
pop
jb
cltd
pushf
push
pop
jnp
fldt
into
repz
mov
mov
movsl
pop
into
lret
pusha
adc
ficompl
jecxz
pusha
movsb
inc
jmp
lahf
jp
sbb
and
push
push
cmp
lahf
stc
pop
div
pop
lods
rcr
or
mov
jbe
push
push
jnp
icebp
or
fcoms
sbb
aaa
mov
add
aad
adc
jl
sub
dec
and
push
dec
mov
push
add
xor
push
pop
loop,pn
daa
ror
push
insl
dec
dec
add
repnz
out
and
pop
shl
or
jmp
push
add
xchg
std
push
sti
pop
xchg
enter
cmpsb
sub
insl
push
sbb
roll
dec
sbb
xchg
cmp
arpl
aad
xor
cmp
aam
mov
enter
ljmp
adc
adc
push
repz
icebp
dec
push
mov
cmp
add
inc
mov
std
punpckhbw
push
rclb
xlat
lahf
shlb
push
push
test
sbb
sbb
add
or
cmc
jmp
popf
push
fnsave
add
popa
jne
mov
das
subl
xchg
add
ds
in
mov
or
out
add
xchg
test
mov
scas
jne
pop
insb
jae
xor
aad
pop
clc
mov
or
add
faddp
out
add
mov
out
roll
rorb
jo
inc
pop
fidivrl
pop
mov
rorl
adc
inc
adc
rcrb
xchg
adc
add
push
pop
cld
popf
fdiv
jl
xchg
hlt
movsb
mov
add
cmp
push
fildll
das
pop
jecxz
mov
pop
icebp
adc
sbb
cmp
jne
inc
sbb
mov
adc
mov
cltd
cwtl
int3
pop
sub
incb
test
lret
mov
lds
in
ret
xchg
xchg
pop
and
xlat
sub
sahf
mov
cmpsb
lock
add
or
jmp
mov
mov
cmpsl
shll
jecxz
lock
or
add
xchg
fwait
lahf
rcll
jb
ljmp
dec
insb
scas
in
clc
or
inc
add
stos
xchg
sub
mov
sbb
add
icebp
fs
lods
inc
fnstsw
testl
and
xor
sbb
sub
pop
xor
or
lret
and
push
stos
in
pop
dec
mov
je
or
call
push
imul
dec
fidivrs
mov
inc
aad
mov
push
dec
sti
cmp
pop
or
cli
aam
push
fcompl
xlat
mov
push
push
jno
dec
scas
mov
mov
inc
jle
in
jnp
cmp
mov
sub
mov
imul
push
and
jo
sti
sbb
cvtps2pd
sahf
push
or
mov
je
rcll
inc
push
faddl
test
inc
test
ljmp
insb
fcomps
or
insl
xor
popa
inc
adc
rcrb
int
in
sar
outsb
inc
addb
pop
loope
jl
mov
cmpsl
sub
xchg
push
mov
adc
nop
cmp
mov
jno
sub
pop
sbb
xor
mov
fnstcw
add
sub
out
daa
jge
dec
cmp
fadd
std
sbb
movsb
or
rorl
cmp
adc
les
lahf
mov
lcall
jns
stos
xchg
or
test
pop
and
lods
lret
pushf
or
push
mov
mov
das
cmpsl
and
lods
or
push
ss
subl
push
push
or
clc
adc
outsl
rcl
mov
aad
sbb
sub
pop
imul
sti
shrb
inc
into
push
jns
push
push
jae
enter
stos
into
pop
out
or
inc
cmp
popf
xlat
in
pop
inc
adc
cmc
xchg
mov
pop
aas
leave
enter
mov
in
int3
call
repnz
aad
pop
mov
sbb
lock
aaa
sbb
add
sahf
stos
xchg
mov
int
cmpl
mov
pop
dec
xchg
jmp
adc
loop
out
xchg
add
sbb
inc
pop
gs
push
dec
xor
mov
dec
fsubp
mov
mov
orl
or
cmpb
cmp
xor
fldcw
sub
sub
jle
inc
insb
cltd
xchg
jns
rorl
mov
or
sahf
jecxz
push
rcrb
lds
sbb
pop
xchg
mov
xlat
cmpsl
outsb
int
xor
pop
mov
sub
mov
and
inc
std
mov
mov
call
xchg
sahf
jbe
repnz
insb
pusha
add
fiadds
in
push
ss
and
sahf
add
insb
fisttpl
pop
fs
adc
shrl
addb
aam
lods
mov
jmp
shrl
xor
addl
push
mov
loop
add
jg
cmp
jbe
cmp
lahf
inc
and
or
pop
dec
xchg
xor
pop
fwait
and
imul
inc
int3
push
call
les
mov
gs
es
pop
sbb
mov
loop
and
ljmp
mov
xor
jl
inc
or
push
sub
dec
aaa
cmpsb
cmp
pop
or
mov
out
jmp
sti
test
jae
jecxz
out
decb
push
add
and
or
add
mov
lods
dec
add
mov
stos
inc
push
rorb
and
aam
inc
jg
shrl
mov
aam
rcr
popa
enter
ja
inc
les
pop
stc
xor
testl
adc
je
cmp
repz
mov
inc
sarb
popf
icebp
pop
jle
fs
cmp
mov
cmc
push
into
or
xchg
cvtps2pi
popf
leave
testl
dec
pop
mov
inc
in
in
in
sub
in
mov
push
cmc
fildl
enter
pop
dec
aaa
incb
aas
inc
mov
in
dec
enter
dec
les
push
inc
mov
testb
adc
mov
mov
push
push
les
fldl
fld
inc
imul
lret
add
imul
push
push
add
push
or
in
dec
push
cmp
cmpsb
jl
jne
push
jp
mov
or
lods
sarb
xor
and
ret
xchg
mov
pop
inc
mov
movsl
pop
sbb
insl
jnp
mov
jmp
jecxz
cmp
loopne
push
jg
inc
sbb
iret
out
lods
pop
and
aas
jle
or
shll
into
cmp
ljmp
mov
outsb
add
xchg
popa
or
xchg
sbb
test
movsb
jnp
cwtl
test
fdivrs
pop
fldl
nop
xor
roll
repz
xor
call
jns
adc
rcr
enter
ljmp
mov
add
add
call
adc
lcall
popf
hlt
icebp
lcall
cli
in
mov
sub
cmp
mov
lahf
addl
xor
dec
lret
addr16
fwait
mov
pop
dec
mov
cs
fmull
clc
mov
in
pusha
jmp
roll
lret
lock
push
mov
movsb
mov
push
jge
push
lds
je
mull
sub
cmpsb
fnstsw
int
and
jb
sub
push
fidivrs
insb
lahf
fs
dec
in
call
add
pusha
pusha
mov
out
mov
pop
hlt
xor
ret
push
in
stc
daa
outsl
inc
fistps
orb
add
nop
dec
dec
call
mov
mov
dec
fs
movsl
sub
lret
add
enter
sbb
std
sbb
xchg
movl
orl
jmp
inc
push
or
bound
inc
cmc
pop
mov
sarb
shlb
lea
imul
inc
ret
push
ret
sub
lds
inc
pop
inc
fbld
xor
adc
lcall
jno
and
std
mov
test
int3
divl
and
xchg
adc
push
dec
fwait
repnz
push
adc
ss
sub
fdivrs
scas
mov
cltd
mov
xchg
negl
mov
pop
or
push
mov
add
xchg
cmp
add
mov
aaa
inc
fcmovbe
aam
mov
je
lret
inc
inc
xchg
mov
and
lret
mov
inc
xor
fwait
jne
cmpsb
in
jp
push
mov
lahf
add
sub
cmp
bound
lods
jp
jmp
sti
sar
insb
or
loope
jmp
lods
sbbb
lods
mov
out
mov
sbb
sbb
inc
popf
xchg
hlt
ja
sahf
jae
ljmp
shrb
and
cmp
sbb
sub
lock
movsb
mov
subl
mov
mov
adc
mov
in
sbbl
cmpsb
ljmp
fdivs
imul
pop
sub
cld
out
pop
push
cmpb
ds
testl
and
xchg
push
push
mov
ja
fnstenv
fcompl
rclb
mov
es
icebp
sbb
dec
lds
mov
cmp
loop
xor
xor
js
bound
test
insb
loopne
push
dec
adc
sbb
xlat
jbe
vaddpd
imul
js
lea
cwtl
mov
dec
dec
jnp
mov
repz
in
lds
out
pusha
and
lcall
inc
lret
jns
sbb
js
cwtl
push
add
cs
or
nop
xlat
mov
ss
sbb
inc
cmpsb
inc
xor
jecxz
jae
hlt
xchg
push
popf
or
xchg
pop
mov
cmpsb
sahf
clc
out
iret
mov
inc
mov
push
decl
sbb
push
push
fbld
jb
or
mov
call
into
add
xchg
insb
hlt
xchg
cmp
popa
addb
test
bound
fistpl
xor
outsb
adc
mov
lcall
or
push
loopne
or
stos
insb
cmpsl
jg
clc
js
sub
sub
call
and
pop
adc
jl
outsl
fsub
jae
sub
or
jle
outsl
outsb
sub
and
dec
push
sahf
mov
shll
push
push
dec
cmovs
jbe
or
add
js
icebp
push
aas
sbb
cld
dec
pop
mov
fs
mov
jge
pop
dec
or
push
ret
mov
jns
dec
cmp
push
fsts
fldcw
add
test
mov
push
push
add
int
or
pop
xor
mov
imul
shlb
pop
xor
fs
sub
std
lods
cltd
pop
pushf
push
stos
sbb
push
out
xchg
test
xchg
sahf
rcrb
shll
ror
adc
mov
cmp
arpl
or
lods
negb
mov
pop
cs
cli
jmp
push
pop
jb
fiaddl
inc
mov
xchg
mov
pop
cmc
mov
pop
sbb
mov
add
mov
hlt
sub
mov
js
out
add
imul
or
cmp
fistps
cmp
push
adc
cmpb
xchg
lahf
jbe
js
clc
mov
ds
mov
mov
fcmovbe
incb
cmpsb
mov
cmpsl
and
push
dec
sub
cmc
loope
jnp
fcompl
loop
pop
sbb
pop
cmp
lods
push
mov
xchg
inc
xor
sbb
mov
outsb
int
inc
out
mov
std
jno
scas
push
imulb
cmp
jno
les
ret
mov
js
sbb
daa
insb
xorb
cmp
cmp
test
xor
int3
cltd
cmc
cwtl
mov
data16
cmpl
hlt
lret
adc
add
mov
or
jnp
adc
loope
cld
add
addr16
std
leave
jo
jbe
dec
mov
lock
sti
cmp
aas
sbb
inc
xchg
nop
lret
std
mov
pop
out
insl
add
loope
sbb
cli
lret
into
push
or
movsl
xchg
pop
mov
cld
sbb
and
pop
bnd
hlt
inc
sbb
xchg
jbe
push
cmc
outsb
mov
mov
jnp
pop
jmp
loop
fdiv
negb
test
icebp
cmpsb
fs
cld
test
pop
push
mov
xlat
repz
gs
push
cmp
ja
mov
xor
or
adc
inc
cld
rcll
lods
imul
lret
mov
shrb
mov
das
jns
pop
push
sbb
mov
aad
jl
lahf
nop
das
lds
jge
xchg
idivb
and
lahf
pop
arpl
int3
push
adc
xor
sub
cltd
icebp
jbe
fcoml
xchg
jbe
mov
mov
jle
pushf
add
inc
enter
leave
xor
or
push
add
dec
iret
pop
add
mov
int
movsb
and
add
cs
mov
fistpl
addr16
cs
sub
std
add
cmp
fistpll
mov
jns
cmp
adc
fisttpl
cld
hlt
sbb
scas
stos
sahf
out
cwtl
dec
int
fs
or
lods
stos
das
stos
daa
cld
fwait
ja
cmp
mov
xchg
arpl
mov
dec
mov
or
cmc
es
mov
aas
sbb
clc
xchg
cmp
mov
xor
xor
adc
inc
mov
cmp
daa
pop
lock
xor
and
jge
loop
jg
pop
mov
push
fsubrs
dec
test
movzbl
or
cli
arpl
or
mov
push
fcoms
data16
mov
ret
fldt
aaa
push
test
push
test
inc
pop
mov
out
je
mov
outsb
pop
fisubs
lea
out
outsl
xchg
mov
cld
xor
jbe
pop
jbe
xchg
sub
andb
inc
test
aad
and
inc
mov
enter
mov
sbb
pop
aad
or
inc
inc
repz
mov
lods
repnz
sbb
adc
arpl
pop
orb
icebp
neg
repz
push
in
or
xor
cmc
pusha
bound
push
imul
repz
ret
cwtl
pop
sbb
inc
lds
pusha
adc
pop
andb
xchg
ljmp
lock
mov
pop
iret
jp
clc
cmpb
pop
ss
sar
adc
ds
inc
xchg
aad
cmp
inc
mov
shrl
in
aas
dec
stos
add
ja
mov
les
or
stos
sbb
add
in
xchg
jmp
cld
mov
pop
rclb
or
push
ljmp
test
and
jno
pop
and
mov
out
mov
int
push
mov
lds
addb
cltd
ret
repz
inc
xor
inc
cmp
jecxz
cmc
xlat
pop
cmp
shll
mov
dec
ret
jl
call
cmp
push
dec
rorl
int3
and
jne
fcmovne
push
sbb
add
mov
jns
out
cltd
sub
inc
out
push
sbb
add
push
jmp
fidivrs
ds
ret
jo
test
mov
int
sahf
inc
fwait
xor
inc
lods
cmp
int
cmp
loop
xchg
jmp
pop
aaa
or
fcompl
cmp
dec
jge
out
sub
add
fwait
bound
cmp
mov
jb
outsb
ds
lret
push
lea
inc
aad
insl
mov
lret
hlt
cmp
adc
imul
and
inc
jbe
mov
mov
inc
test
sub
arpl
outsl
int
xor
mov
test
xlat
cmp
je
jge
inc
or
cltd
repz
cmp
mov
sub
shll
aam
lret
movb
sar
xor
mov
inc
mov
pop
mov
mov
mov
lock
insb
dec
loop
aas
mov
into
cli
xchg
push
xchg
stos
add
mov
xchg
mov
ficoms
sbb
mov
jb
jmp
mov
xor
lea
mov
push
push
inc
stc
mov
pushl
call
test
outsl
aad
pop
adc
movsb
int3
cmc
fidivl
and
das
mov
popa
xor
sub
lock
mov
je
pop
scas
xchg
jnp
pop
jno
pop
mov
or
or
jge
and
jo
push
imul
fs
test
sti
add
fsubrl
lods
cmpsl
popa
xor
pusha
xchg
mov
in
push
fistps
inc
pop
shll
movsl
xchg
je
lret
mov
xor
mov
mov
pop
jle
add
or
cld
mov
aad
cmp
iret
stos
subb
xchg
push
scas
add
ljmp
adcb
fsub
cli
ljmp
inc
stc
pop
sub
jnp
push
daa
mov
push
mov
xorl
mov
rorl
popf
int
cs
pop
sbb
ret
jb
enter
fildl
jmp
sub
psubd
test
lahf
xchg
inc
mov
test
mov
addr16
fwait
and
pop
inc
imul
in
aam
or
lock
loopne
mov
xchg
pop
sub
fsubs
inc
mov
insl
xor
adc
push
out
mov
xor
loopne,pn
mov
pop
lret
daa
lods
cltd
mov
or
adc
push
ret
rclb
inc
adc
inc
cmpb
sub
in
push
mov
es
xchg
test
push
in
loope
sub
adc
sub
sahf
dec
pop
adc
stos
shlb
cld
call
xchg
pop
and
jne
test
sub
mov
pop
add
js
lea
xchg
jl
fistl
mov
mov
decb
js
cs
fistps
xor
add
orl
test
test
fstl
add
mov
jp
push
jne
adc
sub
dec
xchg
cmpb
and
xlat
mov
ret
call
ds
decb
clc
cs
lret
loop
sub
push
mov
adc
sbbl
jb
sbb
push
push
pop
nop
mov
call
xchg
dec
inc
scas
or
mov
inc
xchg
jno
lods
adcb
push
jg
xchg
mov
in
sbb
je
jnp
mov
stos
xchg
jmp
les
sbb
movsl
movsw
ret
jecxz
xchg
sbb
scas
jge
adc
dec
or
nop
into
sub
mov
push
leave
call
sbb
aaa
dec
xchg
shll
and
gs
dec
sbb
lea
push
subb
aam
lret
jp
mov
in
ret
stc
sub
pop
pop
je
add
and
test
add
call
imul
daa
jl
lret
push
dec
lahf
outsb
ret
push
xchg
subl
jbe
jle
and
mov
mov
add
sbb
popf
int3
rorb
xchg
xchg
out
jb
fcomps
pop
xor
ret
or
loop
sub
ljmp
stc
jl
push
leave
xor
mov
sar
nop
add
jno
lcall
nop
jnp
or
fnsave
test
pop
daa
dec
push
adc
leave
push
xor
cmpl
movsb
xor
in
sbb
or
sub
adcl
pop
sti
test
jge
pop
sbb
mov
mov
dec
sub
mov
fdivr
lock
ret
xor
push
hlt
inc
and
jne
sub
mov
shr
call
add
test
mov
xchg
leave
mov
push
sbb
or
sbb
cmp
out
xchg
push
xchg
into
push
xadd
push
mov
xchg
pop
add
std
push
push
dec
adc
pop
sbb
loopne
xchg
xchg
mov
dec
out
jne
jb
das
xchg
pop
or
mov
cmp
cmp
cs
popf
adc
mov
dec
mov
in
jl
loop
cs
or
mov
fcmove
cld
ret
icebp
xchg
xor
enter
ds
fmull
jmp
es
adc
cmpsl
mov
pushf
repnz
iret
popa
mov
sbb
xor
fcomps
bound
je
xor
or
iret
arpl
pop
add
push
fcomps
adcl
bound
mov
jp
xorb
xlat
nop
jbe
sbbb
dec
inc
scas
les
jp
std
mov
es
es
xchg
pop
add
ja
repnz
mov
das
cmc
ret
jo
sub
btcl
outsb
xor
test
xchg
mov
cltd
jmp
mov
int3
mov
inc
mov
int
aad
aam
andb
jl
repz
es
push
cmc
vfrczpd
and
ss
movsl
jp
stos
jnp
int3
add
jb
xlat
jecxz
jle
in
in
pop
lock
scas
jae
cli
sub
aaa
in
cs
jl
cltd
pop
divl
sbb
movsl
shl
push
movsl
fwait
insl
jl
or
out
xor
imul
cmp
jbe
sbb
mov
add
and
sbb
outsl
andl
or
movsb
lods
shrl
sub
inc
fs
mov
dec
rolb
mov
gs
sti
das
fstl
xor
add
fisubrl
pusha
mov
xchg
cmp
add
insl
movsbl
push
ret
and
mov
adc
sub
outsb
mov
xchg
xchg
mov
testb
mov
mov
lcall
mov
mov
iret
push
xchg
inc
jne
jmp
stos
push
cmp
movsb
pop
movsl
or
inc
les
clc
and
mov
pop
hlt
lods
jge
outsb
add
frstor
fisubl
sti
or
insb
jp
jb
arpl
dec
rorl
adc
lahf
jns
ds
sub
dec
pusha
push
ret
lods
jno
push
inc
or
push
pop
icebp
das
jp
mov
scas
xchg
jmp
mov
popf
mov
push
scas
sbb
inc
or
enter
loopne
les
shrb
lds
int3
mov
mov
test
imul
es
xor
pop
dec
mov
arpl
pop
mov
xor
mov
scas
mov
or
push
sbb
mov
mov
cmpsb
sbb
sbb
push
xor
push
dec
rcll
jl
lret
outsl
out
pusha
pop
xlat
aad
push
sbb
fs
jg
mov
roll
mov
xor
pop
jnp
push
xchg
ret
pop
xchg
std
lret
out
push
adc
insl
jae
and
pop
call
and
je
jle
pushf
sahf
xchg
xor
cli
add
aad
jne
jmp
add
mov
sbb
cmp
push
clc
hlt
push
inc
cmp
lods
jnp
push
sub
dec
cli
jg
lret
or
xor
outsb
dec
sub
add
dec
pop
dec
lahf
dec
or
in
cmp
in
repnz
icebp
pop
xchg
and
popf
xchg
mov
cli
fdiv
arpl
scas
fmull
jp
mov
push
sbb
sbb
jns
mov
loope
roll
push
data16
movsl
mov
or
xorl
repz
mov
adc
mov
mov
dec
mov
mov
dec
fisubl
mov
xchg
cld
cmc
inc
cmp
scas
adc
shr
dec
push
add
test
xor
push
sbb
pop
imul
pop
add
clc
jg
or
scas
imul
out
mov
jmp
cmc
ds
and
fstpt
cli
xor
adc
popf
in
or
dec
pop
jne
nop
js
aaa
inc
icebp
mov
lcall
loop
sub
insl
xor
mov
mov
fcmovbe
xchg
cmpsl
push
jno
jno
mov
and
push
adc
jge
cli
adcb
mov
cmp
pop
inc
pop
loopne
pushf
adc
push
add
dec
call
jg
inc
mov
ret
inc
mov
mov
push
or
sub
or
cmp
icebp
mov
imul
fiadds
add
divl
jg
test
das
inc
cmp
dec
movsl
dec
or
pop
sahf
jne
sub
repz
aaa
insb
scas
jle
dec
cmp
sbb
push
popl
mov
repz
push
movsb
adc
or
js
dec
shrb
popa
andl
out
mov
mov
pop
cmp
test
ja
shrl
cmc
pushf
aaa
mov
xchg
iret
cmp
inc
sbb
mov
data16
lret
shlb
cld
lret
hlt
adc
shrl
adcb
hlt
add
adc
enter
pop
mov
jle
mov
cmp
popa
lock
sbb
jne
out
and
repz
xor
es
sti
lret
jp
daa
pusha
out
lods
pop
rcll
mov
arpl
mov
push
dec
pop
int
inc
and
mov
fists
xchg
cmpsl
out
push
jne
push
out
mull
add
rcr
push
dec
or
insl
gs
mov
sub
cwtl
jns
incb
aad
shrb
jne
sbb
xor
in
cld
jp
push
or
sub
xor
sbb
mov
mov
adc
or
cmpsl
push
outsb
in
pop
jbe
and
jmp
inc
lcall
jb
dec
mov
pop
inc
movsl
mov
add
pop
ljmp
into
idivl
pop
addr16
add
mov
test
icebp
dec
inc
adc
dec
jo
mov
bound
lcall
sahf
cmp
repz
mov
jp
sub
push
push
or
sub
mov
inc
mov
sbb
fsts
lea
fiaddl
add
stos
pop
and
in
insb
nop
loope
in
mov
push
cld
mov
mov
loopne
hlt
lea
or
push
repz
dec
inc
sub
popa
fistpl
cmpl
ja
inc
ret
bswap
arpl
sub
jns
repz
aam
jmp
mov
xor
loop
leave
loop
push
mov
cmp
jecxz
lret
dec
lcall
xor
add
jg
inc
movsl
xchg
insl
movsl
push
jge
fdivr
ret
mov
and
xor
cwtl
mov
pop
dec
gs
add
inc
iret
push
scas
imulb
jo
dec
into
push
jno
inc
or
mov
push
jecxz
aam
dec
jmp
sub
mov
cmpsb
sbb
jne
jb
xor
repz
out
orl
pop
out
jae
push
lods
fmull
lcall
inc
sub
es
xlat
les
and
xchg
jbe
inc
ds
aad
dec
push
rclb
adc
stos
push
cli
inc
cmp
out
xor
aad
int
outsb
gs
pop
insb
lock
aam
jno
mov
add
loopne
jmp
mov
sub
mov
lods
stos
inc
add
push
add
mov
roll
dec
mov
cmpsb
cmp
int
mov
cmp
push
add
mov
mov
push
adcl
adc
and
jnp
outsb
or
cmc
test
jge
jno
in
jl
jecxz
inc
daa
fnsave
lods
cwtl
xor
nop
pop
ret
adc
call
or
test
push
mov
adc
cmp
push
rcrb
mov
adc
add
mov
lahf
inc
clc
shrb
adc
mov
add
in
subb
cmpsl
pop
xor
sub
es
mov
push
cmp
rclb
imul
lds
cmp
jnp
and
push
out
or
nop
jae
lock
push
fimuls
add
es
ja
sbb
lods
jge
inc
out
pop
fimull
and
and
shll
in
inc
fcoms
jns
cltd
lret
xor
enter
popa
jle,pt
clc
outsl
sarb
lods
fsubrs
mov
mov
aam
lods
push
mov
iret
aas
cmpsl
inc
push
pop
inc
insl
mov
add
mov
mov
ljmp
xor
inc
dec
js
ficoms
mov
xchg
push
in
dec
lret
les
test
rep
push
mov
test
xchg
daa
and
push
mov
rolb
jnp
sbb
mov
insl
add
and
pop
and
xor
lret
aam
push
pusha
rorb
pop
nop
dec
rolb
js
pop
ret
add
push
int3
inc
outsb
testb
push
std
or
pop
cli
test
sub
pop
into
mov
insb
push
std
iret
jne
push
ja
adc
jge
inc
shlb
lods
and
and
adc
mov
out
roll
inc
xor
setnp
pop
dec
mov
jo
cwtl
or
popf
mov
and
ficoms
mov
rclb
cmp
mov
ja
dec
outsb
ljmp
shrl
dec
ret
repnz
push
rcrb
and
or
cs
dec
push
jle
je
das
fs
pop
addr16
sub
in
insl
mov
xchg
jnp
cmpl
outsl
sbb
rcrl
stos
mov
push
std
jmp
mov
pop
repnz
jae
inc
cmpsl
push
jge
add
mov
inc
lods
orb
je
dec
and
push
fdivs
int3
jne
int3
aas
mov
xor
ljmp
push
inc
push
push
jp
inc
loope
sub
mov
fs
jecxz
int
ljmp
adc
cmp
mov
adcl
cwtl
movsb
adc
call
cmp
push
rdtsc
das
cld
push
divl
sahf
lea
subl
fdivrp
pop
or
fisttpll
fiadds
lret
int3
in
je
mov
mov
jmp
fisttpl
xor
cmpl
xor
or
cmp
ret
sbb
out
fs
mov
adcb
movsl
addr16
scas
xor
mov
xor
idiv
jl
pop
fisubrl
or
mov
dec
sbb
xor
mov
cmp
fs
pop
add
xor
pop
pop
lds
cmp
inc
fildll
jmp
xor
mov
repz
xchg
jmp
mov
xor
outsl
ffreep
push
in
add
movsl
push
outsl
shlb
jo
loop
fwait
scas
dec
cmc
daa
xor
jg
leave
pop
pop
repz
xchg
add
mov
pop
jle
cmpsb
ret
test
sahf
sub
js
fidivs
push
xorb
push
pop
mov
push
jbe
loope
or
popf
adc
pop
pop
adc
rorl
pop
adc
int3
into
dec
loope
adc
xor
out
arpl
inc
ret
lods
xchg
lods
xchg
push
jecxz
add
jae
int
xchg
shl
fmuls
pop
mov
aaa
mov
cltd
mov
add
bswap
sbb
cmovbe
adc
test
or
mov
pop
lds
inc
jge
je
in
xchg
lock
call
xchg
addr16
pop
xchg
push
pop
dec
out
fldl
inc
addl
shr
jg
inc
mov
call
cmpsb
push
es
jmp
and
or
aam
cltd
hlt
pop
cmp
and
and
insl
sub
xor
sar
jle
movsl
xchg
mov
mov
push
mov
cmp
test
lea
ret
jle
fstpt
les
in
cmp
push
or
pop
out
sub
sbb
shlb
cmp
int
lea
inc
subb
scas
hlt
sub
jbe
sbb
jmp
lret
sub
dec
xchg
jl
dec
lock
jecxz
sub
pop
int3
pusha
xor
gs
fs
or
cmp
orb
sub
xor
push
out
mov
clc
je
fldcw
inc
pop
adc
mov
mov
inc
add
cmp
xor
push
test
adc
loop
sahf
jg
cmp
insl
pop
inc
mov
mov
lea
jbe
insb
nop
pushf
gs
test
insb
jg
adc
mov
jo
adc
pop
scas
les
mov
mov
mov
test
fsubl
cs
enter
loop
cmp
jae
mov
and
jl
lret
arpl
stos
jbe
or
jmp
mov
mov
jb
or
int
mov
dec
pop
and
mov
adc
sub
out
inc
fwait
pop
jne
add
mov
fists
and
jmp
andl
pop
daa
out
inc
push
popa
loope
test
arpl
push
mov
fwait
dec
mov
lret
push
loop
lret
mov
cmpb
rol
xchg
ja
mov
popl
sbbl
scas
in
and
pop
jp
es
loop
cmp
push
mov
into
adc
in
mov
inc
ja
fiadds
inc
pop
dec
lret
sub
ret
dec
pop
fdivs
cli
push
nop
clc
dec
test
or
jle
mov
dec
stos
cmpsb
or
rclb
pop
icebp
add
jbe
jle
or
cwtl
movsl
jns
scas
scas
xchg
movsl
or
clc
xchg
pop
cmp
repnz
cwtl
mov
fmull
leave
xchg
mov
dec
sbb
xor
mov
push
push
push
xchg
mov
daa
pop
jge
add
in
jmp
daa
lods
bound
loop
cmp
mov
pop
addr16
cmp
xlat
jecxz
xlat
mov
jmp
and
lret
inc
inc
mov
inc
insb
sti
dec
push
sahf
into
cltd
xchg
jno
repnz
pop
mov
test
pushf
xor
mov
mov
ficomps
fbld
fwait
testb
int3
ret
sub
mov
imul
or
loope
ja
xchg
xchg
rcrb
shl
jo
push
xor
rcr
inc
test
push
repnz
and
repnz
and
jl
pop
sub
mov
jp
jmp
sbb
inc
jp
inc
test
adc
adc
cmp
or
in
push
testl
xor
push
insb
lcall
pop
movsb
mov
mov
push
in
jno
cltd
imul
les
sub
popf
cmp
clc
push
arpl
pop
add
jns
in
out
imul
gs
and
xor
mov
pop
adc
sahf
loop
in
mov
inc
add
aas
dec
add
xchg
adc
pop
rorl
xor
pop
out
add
mov
aad
mov
pop
or
mov
test
jne
adc
fstps
fsts
ficoms
lcall
fadd
or
dec
push
sbb
jnp
or
sahf
adc
mov
push
adcl
push
popf
or
jmp
into
inc
test
loope
test
mov
cwtl
cmpl
fiaddl
xor
xor
cmpl
mov
and
xchg
or
sbb
lcall
ljmp
mov
pushf
adc
pushf
stos
cmpb
test
jge
lcall
sub
dec
and
xor
insb
push
es
lds
out
sahf
sahf
or
js
int3
call
push
dec
addb
imul
xchg
cli
and
ret
adc
subl
and
aaa
cwtl
jo
es
js
xor
mov
cs
xchg
notl
xor
mov
mov
je
imul
out
popf
dec
aas
xor
push
shrl
shll
mov
bound
and
sbb
in
xchg
fsubs
stc
jbe
mov
push
pusha
xchg
dec
std
sub
cwtl
jae
sbb
pushf
out
les
mov
jle
inc
xchg
repnz
cmp
sub
push
jae
sub
xor
jmp
add
out
sbb
xchg
lods
push
inc
fildl
bound
mov
dec
sub
pop
outsb
fucom
bound
dec
test
sbb
fucomi
outsl
das
aad
xchg
mov
pop
inc
ja
ror
xchg
xchg
inc
js
or
pusha
cmp
sahf
and
sahf
and
mov
xor
push
mov
lahf
into
sub
cli
ret
mov
dec
mov
rorl
in
and
in
ljmp
jl
and
or
loope,pt
lods
jb
sub
in
out
mov
xchg
dec
push
lods
test
out
out
pop
test
idivb
cltd
fdivl
subb
call
movsb
int
jl
inc
popf
dec
das
push
mov
pop
ret
cmc
dec
ljmp
xchg
push
movsl
xchg
and
xchg
or
incb
mov
push
lds
lret
xchg
dec
fsubs
test
sub
lcall
add
push
sbb
jno
jge
outsb
or
pop
test
inc
int
jp
inc
mov
insb
mov
mov
aas
dec
ja
mov
and
pop
pushf
rorb
adc
ret
out
das
jp
jl
sub
std
cwtl
repnz
or
stos
xchg
int3
ret
out
movsb
lahf
lcall
rcr
or
mov
out
adc
idivl
test
add
fldpi
mov
and
rclb
or
jg
pop
mov
stos
fistpl
cmpsb
jl
cli
sbb
daa
and
dec
add
dec
hlt
stc
mov
insl
jmp
sub
sub
or
insb
sahf
sub
std
ja
xchg
xor
cmpsb
xor
mov
daa
fs
cmp
leave
sub
push
pop
cli
push
ljmp
mov
in
jno
inc
xor
inc
inc
push
jecxz
fs
inc
sub
orl
pop
and
shlb
mov
popf
popf
mov
lahf
mov
add
movsl
dec
paddusw
inc
adc
mov
shrb
pop
mov
pusha
mov
sbb
xor
in
fnsetpm(287
or
and
cld
insb
mov
pop
clc
pop
test
cmp
adc
xchg
pop
or
jmp
int
push
pop
jecxz
mov
sbb
leave
popf
push
xchg
mov
or
push
xor
icebp
xchg
les
add
sub
add
xlat
mov
cmpsl
test
pusha
notl
stc
xchg
lahf
sbb
sti
jg
dec
and
cmp
push
inc
icebp
pop
lods
dec
andb
cwtl
fbstp
fmull
mov
jle
dec
push
inc
mov
mov
imul
aas
sbb
ljmp
shr
dec
fisttps
jg
adc
jmp
pop
lods
adc
dec
hlt
jge
add
addb
jns
je
in
test
icebp
icebp
fisttpll
mov
negl
or
mov
arpl
fnsave
push
inc
inc
fimull
push
ror
roll
push
test
sbb
in
lock
sbb
sub
lds
fadd
mov
fwait
xor
call
add
into
jmp
xchg
subb
xor
add
cmp
or
call
dec
or
sbb
jnp
cltd
out
jns
bnd
movsl
cltd
aam
pop
loopne
cmpsb
in
test
add
inc
leave
test
movsl
push
inc
lock
idivl
ja
mov
sbb
inc
insb
pop
int3
jle
jle
cmp
andl
mov
rcr
pusha
neg
subl
or
xchg
std
aas
pop
mov
xor
rcrl
lret
add
test
dec
xchg
adc
bound
mov
jb
cltd
rolb
add
div
fcoms
jno
fistpll
push
fsubrl
cmc
adc
es
mov
mov
adc
fsubr
fldenv
dec
cmc
outsl
pushf
sarb
rorb
lods
cmp
and
mov
pop
pop
jae
sbb
pop
dec
jg
push
addr16
out
fwait
imul
leave
outsl
leave
xchg
sti
nop
mov
jecxz
std
data16
xchg
push
mov
mov
cltd
outsb
pop
lods
sub
and
mov
test
in
fists
lock
in
and
cmpsl
ficomps
std
fdecstp
imul
cmp
sbb
mov
inc
inc
pop
lock
mov
pop
sub
cmp
mov
mov
dec
jg
or
inc
jmp
xor
adc
cwtl
mov
dec
pop
jle
out
jl
mov
cmove
ss
sbb
lahf
and
clc
push
test
pop
cmpsb
aaa
mov
popa
xlat
inc
hlt
pop
sbb
add
adc
fs
xchg
scas
subb
jp
cwtl
or
jns
xor
dec
leave
lret
push
dec
push
xchg
xchg
xlat
and
dec
push
pop
scas
mov
xchg
sbb
call
mov
pop
mov
pop
push
fidivrs
jns
imul
mov
xor
mov
int
cmp
int
and
sahf
in
fldcw
outsl
insl
sbb
xchg
xor
mov
jge
repz
mov
xchg
out
sub
lahf
stos
pop
sbb
cmp
and
and
mov
xchg
mov
mov
mov
push
jge
je
scas
inc
push
sbb
repz
jnp
dec
jge
shlb
adc
dec
int
push
scas
xchg
aad
jecxz
and
pop
and
into
lret
or
sub
pop
pop
xchg
adc
roll
repnz
jo
bound
inc
fildl
inc
popa
xor
inc
and
cld
hlt
and
test
stos
pushf
int
xor
sbb
cld
sub
mov
cmp
shrb
push
es
or
in
xlat
pop
cmp
inc
dec
push
dec
sahf
jns
les
bnd
pop
cld
mov
jnp
loopne
cmp
xchg
notb
adc
roll
add
daa
sar
dec
addr16
adc
data16
xchg
mov
mov
call
icebp
push
mov
dec
loop
fistps
ljmp
xor
mov
test
data16
push
test
sti
nop
pop
pop
adc
clc
lea
iret
inc
jae
int
das
mov
sahf
mov
and
pop
cmp
jecxz
out
jmp
and
imul
mov
inc
cmc
popa
push
xor
jae
sbb
es
mov
jmp
and
inc
push
add
xchg
mov
mov
jl
jmp
jge
jnp
lds
loop
bnd
push
int
cmp
cmp
in
fdivrs
lods
sbb
lods
mov
jbe
outsl
shr
lea
cmp
hlt
cmp
push
insb
cmp
xchg
jne
mov
sbb
shlb
dec
daa
movsl
adc
sbb
mov
repnz
lcall
mov
dec
jp
cmp
push
push
rcrl
adc
ficoml
push
addb
imul
lock
pop
insl
pop
daa
jecxz
dec
es
pusha
inc
loopne
outsb
cmpsl
push
stc
ds
loope
fucomi
ss
jne
cmp
or
das
sbb
mov
inc
inc
out
int3
sub
rcrb
dec
hlt
cmp
je
leave
sub
mov
cmpsb
xor
adc
pop
pop
add
dec
sahf
ss
jp
lods
sub
lcall
fimuls
add
into
cwtl
add
pop
pop
loop
cmpsb
xchg
push
cmp
aas
push
cmpl
ret
pop
jp
inc
pop
pusha
dec
jbe
int
push
sub
fwait
lret
movsl
imul
pusha
push
jl
icebp
ljmp
xor
pop
jmp
push
movsl
lds
fstp
cltd
rclb
jmp
xadd
ret
inc
inc
mov
loopne
push
xchg
sbb
std
xchg
int
fldt
add
jmp
mov
test
pop
and
test
sub
mov
aaa
adc
mov
xchg
inc
movsb
stc
sti
dec
sub
push
test
dec
push
ret
xlat
or
stc
pushf
dec
pop
or
fcompl
xchg
enter
cmp
cmp
int3
hlt
into
push
mov
xchg
fildll
jns
leave
sub
leave
out
dec
je
test
pusha
stos
jne
mov
mov
xchg
out
test
ret
cmpsl
jge
mov
inc
mov
push
or
dec
mov
test
sarb
dec
sbb
mov
dec
inc
pop
lahf
dec
ja
jno
in
mov
dec
xchg
push
mov
dec
pop
and
aad
xor
mov
mov
lcall
adc
jae
or
das
lds
lods
inc
jge
orb
lock
or
orl
in
push
daa
ds
popf
xor
ret
mov
dec
dec
test
jno
mov
daa
movb
test
jge
mov
es
inc
jbe
clc
inc
lcall
out
decb
stos
idivb
decb
out
ja
push
xchg
in
push
mov
dec
xlat
adc
cmp
or
jno
push
ret
jns
jmp
dec
fnstsw
out
popl
stos
mov
push
xlat
cs
dec
pushf
pop
test
or
jbe
rol
ret
or
movsb
fcmovnb
cwtl
xchg
dec
subb
outsb
clc
inc
add
leave
js
jge
and
gs
jl
mov
fldl
jb
xchg
inc
int
testl
add
push
pop
pop
loop
and
mov
movsb
ret
xchg
lods
out
mov
push
js
lcall
jg
test
inc
in
cwtl
add
pop
ja
lock
adc
dec
mov
mov
outsb
in
cmp
mov
dec
rcl
mov
rcrb
mov
xchg
int3
mov
mov
popf
popa
pop
push
lret
push
push
pop
std
adc
and
mov
mov
jg
mov
arpl
push
out
dec
daa
xchg
mov
test
out
das
jnp
test
mov
and
push
inc
outsb
cwtl
in
push
mov
dec
xor
cmp
loope
mov
in
cmpb
xchg
repnz
cmp
ret
aaa
mov
loope
pushf
or
cmp
dec
in
mov
mov
mov
xor
outsl
rorl
outsb
or
dec
fsubrs
pop
cld
dec
lcall
pop
sbb
scas
sub
or
sbb
int
in
xorl
insl
jl
cmp
pop
cli
or
inc
aad
mov
popf
movsl
inc
jb
mov
loop
push
xor
arpl
cmp
xchg
add
or
mov
shll
mov
test
outsb
mov
or
mov
and
cmp
outsl
out
dec
pop
stc
mov
inc
jbe
mov
mov
outsl
sbb
mov
push
mov
enter
and
popf
lahf
leave
adc
inc
shrl
sub
call
insb
je
mov
cmp
mov
pop
out
jno
jne
jmp
sarl
bound
inc
mov
sarl
loop
popa
shrl
ljmp
jge
fdivrl
jecxz
aaa
lea
mov
dec
xorl
in
push
xchg
sub
lods
adc
int3
loopne
adc
inc
sbb
js
jns
xor
push
cmpsb
push
stos
mov
js
maxps
into
xchg
inc
pushf
pop
cmp
xchg
push
es
nop
inc
jae
stos
jmp
cmp
dec
nop
xchg
std
jbe
xlat
or
movsb
jp
jmp
addl
hlt
scas
test
sub
ret
jno
movsl
lds
mov
lea
sbb
mov
outsl
xchg
sarb
ficomps
inc
js
cmp
adc
xor
or
mov
xchg
or
pop
sub
sub
push
jl
xchg
jns
jbe
cmp
inc
in
fs
dec
adc
xchg
push
pop
in
xchg
add
mov
pop
int3
into
add
xor
xchg
push
xor
adc
push
and
mov
dec
inc
mov
in
lret
lods
ficomps
lds
push
ret
inc
popa
lods
mov
push
add
push
jnp
mov
push
jp
dec
mov
leavew
outsb
inc
dec
xchg
inc
ds
pop
roll
cmc
pop
jbe
cltd
mov
jb
mov
imul
mov
jp
push
sub
mov
pop
in
pop
adc
inc
adc
jp,pt
inc
lcall
inc
not
loop
add
arpl
daa
test
push
std
jg
push
call
ds
das
cwtl
icebp
cltd
fimuls
lds
sub
jno
mov
sub
inc
nop
jae
lret
in
xor
push
add
adc
mov
pusha
inc
push
sti
fsubs
adc
mov
xchg
imul
adc
shll
sbb
dec
arpl
mov
mov
ja
cltd
les
inc
add
repz
add
inc
insl
mov
lcall
inc
push
pop
push
out
jge
xchg
pusha
fisubrs
loopne
inc
std
popa
mov
movsb
mov
xchg
pop
mov
adc
lcall
mov
pop
xlat
mulb
rolb
mov
sub
imul
and
int
pop
push
push
inc
mov
add
cltd
in
pop
dec
push
fwait
inc
les
add
jnp
pop
faddl
inc
or
mov
outsb
scas
push
mov
or
sub
jp
adc
stos
mov
lahf
movsl
adc
hlt
repz
mov
inc
test
sahf
adc
jl
sbb
rcrl
jg
cmp
pop
dec
nop
test
sbbb
clc
adc
jmp
pop
push
stos
clc
nop
mov
xchg
and
pushf
mov
pop
xchg
decl
jmp
push
cmp
dec
sahf
loope
aas
push
inc
inc
aam
pop
mov
test
mov
add
aas
outsl
and
mov
xchg
fucomp
sub
stc
in
pop
test
and
mov
imul
outsb
mov
testl
jbe
dec
xchg
or
ljmp
mov
je
test
scas
int
sbb
adc
out
into
sti
sbb
ds
scas
insb
ja
mov
in
xchg
lods
lods
and
add
movsb
or
int3
adc
pop
pop
les
std
rcr
pop
es
jg
mov
sub
inc
xor
inc
inc
in
inc
jmp
fstpl
mov
insl
cmp
xor
test
gs
lret
data16
iret
test
gs
jg
sub
mov
and
jl
mov
mov
jecxz
out
xor
loopne
jb
xchg
fpatan
push
fadds
jl
dec
ljmp
inc
dec
jnp
dec
stos
stos
cmp
mov
push
mov
jnp
mov
fmul
test
in
test
fwait
pushf
inc
jns
fistl
in
test
mov
jl
mov
sub
or
jnp
rcll
and
xchg
sbb
jl
jle
cli
sbb
popf
ljmp
mov
and
add
and
es
sub
lcall
push
mov
mov
sbb
jl
rorl
mov
negl
out
daa
out
push
mov
dec
pushf
scas
arpl
fisttpll
test
or
pusha
dec
push
push
out
xor
sahf
adc
dec
repnz
lods
clc
idivl
in
fs
popf
add
push
out
jb
imul
into
andb
lds
shlb
test
sbb
pop
pusha
and
inc
sub
jge
std
shrl
testl
lods
stos
ljmp
call
dec
mul
aas
jae
dec
rorl
icebp
and
jae
mov
inc
dec
jge
inc
out
add
inc
push
cltd
push
mov
test
dec
inc
ja
jle
adc
mov
push
dec
ret
out
les
popf
mov
mov
jns
adc
mov
fcmovu
or
pop
xlat
sbb
mov
rcr
les
mov
stos
push
adc
and
push
fimuls
xchg
aaa
inc
pop
lahf
xchg
or
add
mov
jbe
incl
sbb
sti
jne
scas
cmp
adc
push
pop
cmp
loopne
sbb
xchg
push
xor
out
ds
scas
lret
ret
fs
sahf
adc
add
popa
data16
add
pop
or
roll
inc
mov
je
cmp
dec
out
lds
stc
sbb
cmp
pop
push
js
pop
mov
push
and
rol
js
push
bound
or
mov
cmp
jp
xorb
cmp
cld
xchg
or
fdivr
mov
mov
mov
mov
sub
jmp
xchg
cmpsb
mov
jle
jae
dec
jecxz
and
fisttps
mov
inc
stc
mov
mov
js
lahf
mov
fs
mov
mov
sub
fs
sub
mov
mov
jb
lea
jbe
loopne
lods
adc
ss
lret
jae
enter
movsb
xor
lcall
or
loopne
dec
mov
outsb
mov
mov
sbb
xor
mov
jnp
fmul
dec
movsl
dec
inc
mov
jge
repz
fidivrs
mov
jmp
shrl
arpl
adcb
add
popa
call
jns
pop
mov
mov
and
je
mov
dec
fisubl
push
push
pop
mov
movsl
ret
dec
and
pop
mov
or
push
dec
mov
shrb
sar
gs
push
test
pop
xchg
sub
sbb
mov
sbbb
jge
sbb
fdivrs
push
mov
jb
out
jecxz
and
jmp
nop
mov
into
aam
add
rorl
bound
mull
inc
aad
repz
mov
jnp
ficompl
pop
aas
iret
std
in
rcll
adc
cli
push
daa
rolb
insl
dec
das
insl
and
fstpt
std
dec
and
ljmp
push
and
push
pushf
adc
push
push
dec
fstpt
pop
xchg
int3
adc
mov
jne
push
sbb
and
xor
dec
repz
mov
xchg
popf
call
jb
dec
out
dec
inc
cmp
enter
push
and
sbb
dec
addr16
add
std
rolb
mov
mov
popf
push
scas
into
push
std
push
data16
lcall
out
push
push
sarl
shl
mov
dec
int
or
cli
mov
insl
xchg
insl
add
pop
dec
mov
mov
mov
mov
outsb
out
or
pop
daa
into
mov
add
mov
fnstcw
adc
addl
fwait
leave
mov
push
or
leave
sbb
pop
dec
mov
movsl
xchg
xor
inc
gs
jne
sub
jno
movsl
jnp
xchg
cmp
dec
xchg
and
packssdw
mov
mov
dec
inc
mov
repz
out
xor
jno
jo
lea
xchg
mov
enter
adc
push
xchg
std
insb
inc
jns
sbb
or
addr16
in
in
inc
ljmp
sbb
lcall
pusha
jbe
and
das
hlt
mov
fdivr
push
cmp
bound
js
xchg
out
icebp
mov
mov
sub
leave
mov
dec
data16
xor
aaa
mov
sbb
push
loop
icebp
in
test
outsb
std
test
cli
rorl
mov
scas
stos
mov
in
xor
inc
cmc
xchg
mov
popa
iret
xchg
jmp
mov
in
xor
addr16
aam
daa
pushf
sarb
int
flds
sti
mov
bound
pop
iret
dec
int3
cld
sbb
aas
sub
inc
pop
mov
push
and
out
addb
sbb
shlb
cmp
add
pop
stos
push
push
outsl
rol
fldl
cmpsb
imul
xor
xchg
inc
mov
pushf
adc
mov
test
cmp
xchg
std
cmpsl
enter
push
xchg
inc
not
mov
dec
ds
test
test
testl
das
ljmp
cmp
gs
cmp
sahf
test
mov
in
mov
sbb
jp
testl
push
sti
cmp
das
mov
in
xchg
popf
dec
rorl
mov
xchg
sbb
in
pop
or
pop
fcoms
out
stos
cli
inc
fldenv
lds
cmc
iret
inc
add
out
xchg
in
ljmp
in
rclb
adc
adc
xor
jb
ds
xor
add
cmpsb
adc
add
mov
stc
sub
mov
jge
test
adc
enter
mov
mov
pop
lret
out
lret
adc
cld
je
cli
aad
andb
sarl
in
dec
scas
mov
xor
mov
jmp
in
out
pop
mov
sbb
mov
data16
out
cwtl
nop
lods
dec
call
out
int
mov
in
mov
mov
xchg
out
adcl
jns
add
mov
dec
dec
mov
ret
mov
add
out
inc
mov
push
cld
stos
fiadds
mov
lret
jae
out
int
scas
mov
lret
das
popf
cmp
shll
leave
or
sub
int
out
mov
and
shll
mov
repz
xchg
repz
add
push
xchg
stos
mov
cs
mov
xchg
xchg
movsl
pop
dec
cld
bound
adc
xchg
ljmp
lret
or
add
pop
jge
pop
mov
xor
push
sub
push
mov
and
mov
adc
fnstenv
add
cli
negb
or
bound
mov
lcall
xchg
jb
add
xchg
mov
sahf
cld
jg
jge
aas
mov
mov
pop
cmp
jbe
loopne
pop
or
sahf
and
or
scas
cmp
movsl
lods
andl
icebp
add
lcall
adc
fs
cmp
sbb
mov
fwait
test
dec
pop
nop
gs
xor
fisttps
testb
mov
or
fidivrl
std
imull
mov
leave
pusha
popa
jl
lahf
push
jg
and
jae
fsubrl
xadd
icebp
mov
in
mov
repnz
lret
mov
nop
leave
and
sub
push
and
mov
push
mov
jb
add
mov
loopne
dec
clc
aad
jg
dec
cmp
xorl
push
cmp
nop
or
popf
hlt
nop
mov
push
fmuls
mov
mov
flds
lahf
bound
pop
mov
pop
mov
xor
pop
dec
and
dec
pop
push
push
lods
xchg
in
lea
add
mov
xor
adcl
jle
jns,pn
addr16
mov
rorb
adc
jecxz
into
dec
test
sbb
lret
icebp
dec
leave
dec
xchg
sbb
jmp
stos
mov
mull
xchg
push
mov
in
out
mov
imul
mov
aaa
sbb
mov
aad
push
dec
push
xchg
sti
push
mov
and
mov
add
lcall
inc
cmc
mov
jb
xor
movsl
fnsave
cmp
jge
jo
xorl
push
loope
inc
xlat
movsb
out
push
sbbl
xor
push
loop
dec
jmp
repz
or
cwtl
pop
pop
rol
addr16
add
mov
mov
repz
adc
adc
test
test
sbb
inc
lcall
pop
clc
cmp
or
aam
popfw
jne
cwtl
and
cld
int
movb
lahf
ret
leave
test
ficoms
add
test
lret
pop
inc
ds
sub
inc
test
rolb
push
aam
flds
push
fisubs
xor
adc
mov
fdivrp
dec
sub
int3
fstps
pop
lods
fcom
mov
pusha
test
adc
or
loope
scas
pop
nop
cmpsl
mov
repz
fstps
in
inc
push
sbb
mov
mov
cmp
sbb
sub
cmp
mov
xor
jb
ret
dec
sub
jns
mov
jb
cli
cmp
add
ret
sarl
jnp
imul
push
add
cmp
jb
add
aad
fcoms
ja
gs
pop
xchg
dec
sti
sub
sbb
inc
lea
orl
pop
xor
cvtss2si
cmp
aas
in
mov
icebp
mov
aas
mov
lods
out
lds
jo
ret
cmp
mov
lret
and
pushf
iret
push
fsubs
jbe
xchg
sti
cld
repnz
int3
cmp
icebp
xlat
pop
inc
aam
int
aad
xchg
push
in
or
mov
xchg
add
pop
jno
xor
rclb
mov
adc
and
push
and
arpl
xor
jae,pt
xor
or
insl
popa
and
sub
mov
pusha
fbstp
in
data16
jp
mov
mov
repz
push
mov
jecxz
or
ret
jmp
out
add
pop
stos
and
test
xor
or
sub
jbe
aam
mov
lock
imul
xchg
jno
sbb
aas
rcr
jmp
push
stos
mov
sbb
jne
ljmp
mov
data16
arpl
imul
adcl
cli
sarl
mov
pop
lret
jo
push
jne
xchg
xchg
or
mov
pop
lret
pop
push
mov
dec
popf
sbb
jne
es
cli
adc
enter
sub
stos
mov
bound
jmp
insl
adc
repnz
cs
jo
aas
test
dec
xchg
xor
data16
sub
inc
pop
or
ljmp
fldcw
scas
fisttpl
andl
dec
push
lea
mov
mov
scas
adc
jmp
imul
test
fbstp
outsb
shrb
mov
je
pop
inc
rcl
dec
sbb
out
test
mov
stos
lds
adc
xchg
cltd
mov
and
lahf
pop
push
fbld
lret
mov
mov
adc
mov
aas
xchg
adc
pop
or
lret
inc
cmp
and
add
inc
inc
ja
sub
call
sahf
lods
add
mov
rcrw
out
bswap
mov
mov
test
fldt
xor
add
scas
xor
cmp
sarl
jl
fadd
xor
enter
push
xchg
fdivrs
cwtl
adc
movsb
int
xchg
cwtl
xchg
mov
js
mov
es
mov
cmp
xor
faddl
fadds
or
add
je
es
fs
fcomps
push
cld
mov
test
data16
fisttps
dec
bound
cld
sub
xorl
dec
push
mov
lods
pop
mov
add
hlt
push
add
stc
in
into
pop
add
xchg
mov
ja
stos
pop
push
pop
lret
push
loope
inc
es
jbe
mov
lret
mov
mov
fimull
js
add
sbb
jl
lret
aad
int3
ret
out
das
out
or
push
pop
punpckhwd
sub
mov
fs
andb
mov
or
gs
cwtl
inc
sbb
jbe
inc
xchg
xchg
fstl
sahf
add
cmpb
cmpsl
fisubl
xor
js
adc
rcr
push
shrl
dec
cmp
dec
dec
andl
mov
add
ret
and
lret
cmp
jmp
aam
movsl
push
ds
xor
fstps
sarb
xchg
and
sbb
sbb
pop
js
and
xchg
std
repz
sbb
dec
push
cltd
cmp
push
push
dec
cmpsb
int3
mov
cmp
outsl
cmp
pop
xor
popl
incl
sub
push
and
push
mov
or
mov
pop
lcall
add
push
std
sub
lcall
sub
push
xor
fucomi
xor
xchg
jbe
jg
call
push
push
xor
ficoml
push
or
in
mov
sbb
shr
cld
sub
in
push
mov
jl
mov
push
ds
fdivrs
cli
adc
test
jb
imul
idiv
roll
sub
out
sub
test
xor
insb
xchg
aad
data16
movsl
sbb
xor
repnz
push
lret
adc
outsl
ds
cli
idiv
std
das
mov
in
xchg
sahf
mov
loopne
shl
push
lock
cmp
jmp
and
ret
add
push
rcr
add
mov
jecxz
inc
clc
jae
mov
mov
inc
stos
inc
push
shlb
dec
and
scas
mov
xor
rcrb
call
mov
cld
cmp
mov
cmpsb
outsl
adc
cmp
cmp
sbb
jmp
lods
int3
mov
mov
stc
cltd
xor
pop
jge
sub
incl
sub
sahf
sbb
jae
lcall
stos
sbb
test
outsl
inc
mov
sub
in
in
jae
cmpsl
fstpt
add
dec
or
clts
jg
and
jle
nop
dec
jmp
dec
int3
mov
js
call
inc
mov
xor
cmpsl
mov
insb
dec
lret
push
push
xchg
loope
aaa
sub
and
dec
add
xchg
push
and
lods
and
and
jno
arpl
cmpsb
mov
xorb
jb
mov
add
and
imul
je
lea
ret
inc
int
int3
xchg
stc
push
or
pop
inc
mov
lds
rcrl
push
inc
xchg
jb
sub
sub
sub
mov
lds
loopne
fwait
rcr
and
ds
dec
idivb
iret
outsb
jecxz
ret
imul
sub
pop
dec
pop
aaa
xchg
pop
movsb
icebp
ds
and
mov
cld
es
xor
jmp
fsubl
sub
outsb
fucomi
rolb
pusha
cmp
xchg
push
cmp
in
cwtl
dec
dec
notb
sbb
push
lods
add
dec
ret
mov
std
out
mov
movsl
jo
aaa
mov
or
sti
popa
jg
in
cmp
stos
cmpsb
loope
imul
fiadds
xlat
shll
xlat
mov
int
lods
loopne
push
adc
mov
pop
sbb
push
bound
push
mov
andl
jg
xor
jle,pn
rcrl
push
in
mov
sub
cmpsb
lock
xor
push
shlb
fdivrl
xchg
out
jge
repz
mov
xor
popf
sar
pop
push
icebp
mov
orl
fwait
add
jp
aad
sub
jmp
repnz
std
jns
pop
ret
xor
js
add
sub
mov
pop
add
std
dec
add
in
aad
or
and
aad
fildll
sahf
addr16
jne
imul
insb
in
jmp
sbbl
fwait
ret
mov
pushf
cs
jne
inc
stc
add
iret
mov
dec
imul
sbb
mov
cmp
push
test
jg
mov
decl
loope
decb
push
cmpsl
jno
add
xchg
sub
mov
out
push
es
mov
mov
cmpsb
negl
data16
adc
addr16
fldenv
mov
popf
lea
mov
push
sbb
sbb
dec
dec
sbb
xlat
xor
clc
mov
daa
push
dec
inc
push
inc
add
addl
stc
xor
lret
add
dec
fildl
xor
or
es
ficompl
fdivs
add
out
es
out
cmp
mov
adc
aam
roll
jecxz
add
mov
repnz
mov
lret
sub
movsb
lea
ja
add
js
lds
inc
push
repnz
dec
mov
mov
daa
and
insl
jecxz
outsl
sub
sub
shrb
arpl
jo
fsubs
add
pop
pusha
repz
xchg
loop
add
ficomps
lret
inc
xchg
rorb
sbb
or
cmp
lcall
std
imul
push
pop
jo
adc
div
pop
push
into
or
jno
cmc
sub
imul
repnz
ljmp
leave
pop
mov
cwtl
sbb
addr16
pop
xchg
cltd
fwait
outsb
scas
sub
outsb
pop
mov
mov
call
dec
mov
ret
roll
call
mov
js
fldenv
jge
or
or
ret
mov
push
add
cmp
jne
pop
pop
fucompp
xchg
adc
inc
sub
mov
add
mov
cmp
das
lahf
cmp
jge
adc
cmp
std
add
fcmovnbe
inc
sti
ljmp
or
mov
jmp
jecxz
int
cli
pusha
or
add
dec
or
subb
mov
cmpsb
loop
ret
or
cmpsb
cmp
mov
jb
and
dec
pop
mov
loope,pt
xchg
lds
jmp
addl
leave
jnp
cmp
std
fsubr
and
aam
aad
jns
rorw
sub
fs
rcl
fwait
lods
push
aaa
leave
fiadds
movsl
push
xchg
pop
daa
mov
mov
std
fiaddl
pop
movsl
lcall
cmp
xchg
cltd
xchg
xchg
mov
test
mov
mov
mov
pushf
lea
mov
cld
xchg
shrl
in
dec
repz
xor
mov
repnz
inc
sbb
add
mov
and
dec
jo
mov
mov
mov
std
lret
movhps
sbb
adc
lock
addr16
les
js
je
push
xchg
daa
mov
fldl2t
arpl
xchg
fwait
dec
bound
lret
jnp
sbb
loope
jo
xor
pusha
inc
add
iret
cs
mov
jge
sub
jg
mov
imul
test
orl
sti
ljmp
insl
test
insl
aam
pop
cld
xchg
filds
inc
fcmovbe
xchg
mov
add
sub
idivb
cs
es
mov
lods
hlt
pop
cwtl
cmp
mov
xor
sti
in
cmp
and
mov
adcb
mov
call
mov
popa
rcl
in
xchg
insl
push
js
lock
cmpsl
push
or
in
or
dec
adcb
iret
jns
shlb
jmp
dec
or
cmp
adc
adc
fildl
int3
xchg
sarb
scas
fs
data16
inc
mov
lret
je
sahf
xlat
xchg
jae
xchg
and
divl
and
xor
aas
push
mov
test
mov
mov
bound
adc
stos
stc
jno
jle
rcl
std
call
mov
lret
inc
aad
cmp
bound
push
popa
sub
sub
lods
pushf
fsubr
jb
inc
push
push
adc
ret
inc
cmp
sarb
scas
inc
addb
push
push
gs
loop
mov
sub
and
lea
and
push
ja
ss
leave
ljmp
push
inc
cmp
test
cmp
inc
mov
test
or
test
fadds
imul
pop
into
cmp
cli
pop
mov
xor
jns
out
add
jmp
xor
or
sbb
adc
jno
jo
stos
pop
jne
imul
mov
xor
hlt
rclb
sub
mov
das
xorl
lods
cmp
aaa
and
int3
enter
mov
mov
addl
lock
les
notb
xchg
cmpl
sahf
mov
arpl
xchg
ficomps
hlt
pop
xor
mov
test
xchg
sbb
gs
pushf
pop
or
dec
sbb
shll
fidivrl
out
dec
jecxz
in
outsb
jp
cmp
mov
xor
jno
mov
pop
cmp
fisubrs
movsb
leave
xchg
sbb
xchg
inc
push
repnz
filds
dec
mov
fwait
lcall
jp
std
sub
fstpl
js
mov
sbb
stos
mov
or
daa
add
cwtl
and
ret
jo
fcoml
int
daa
cmpsb
test
cmp
scas
mov
jbe
pop
cwtl
push
es
pushf
dec
add
and
xor
cmc
movsb
push
xchg
mov
add
lret
addr16
add
jmp
rclb
pop
jb
xchg
jl
sarl
rolb
outsb
jge
out
int3
cmp
mov
sub
test
fists
insl
jbe
test
cmpl
add
sbb
push
mov
mov
mov
cltd
fstpt
out
in
cmp
mov
jp
pop
addb
pop
mov
cmpsb
in
fdivrl
xor
sbb
push
jbe
addr16
jge
mov
jle
dec
lock
mov
add
clc
fwait
pop
mov
mov
notb
pop
adc
cli
pusha
inc
test
mov
or
mov
lds
out
sub
push
cltd
mov
int3
ja
pop
in
iret
adc
es
idivb
xchg
iret
add
fisubrs
mov
xorl
popa
adc
lock
outsb
jne
and
mov
int
jg
adc
fptan
dec
rorb
jbe
ficoms
in
int3
outsl
sbb
cltd
sub
repnz
xchg
cltd
data16
insb
out
jne
rclb
inc
sub
sti
into
sbb
mov
mov
inc
addr16
shrl
or
data16
addr16
out
out
rorl
and
mov
iret
iret
incb
dec
jle
sub
lods
arpl
aad
jb
xor
jmp
jmp
mov
divb
cs
jne
pop
sub
and
mov
push
cmpb
test
pop
nop
imull
or
es
in
push
test
mov
fisubrl
pop
push
lret
mov
hlt
inc
pop
xchg
aad
outsl
mov
mov
andl
xorb
xor
mov
dec
leave
xor
push
xchg
aaa
out
jg
insb
mov
loope
adc
xor
rclb
stos
int3
inc
std
jbe
inc
jno
xchg
cmp
or
aaa
jb,pn
popf
repnz
sbb
call
jne
loop
popf
out
movswl
jmp
ret
add
fnstenv
out
stos
pop
xor
test
dec
int3
aaa
mov
pushf
gs
dec
or
sbb
ret
adc
fidivrl
mov
ds
out
lods
pop
xchg
icebp
fdivr
mov
pop
mov
mov
pusha
leave
sbb
push
leave
mov
and
arpl
push
lea
out
dec
and
pop
mov
xor
inc
cli
fistpll
mov
mov
ret
das
pop
push
mov
fsubs
and
adc
mov
pop
xor
add
add
stos
push
stc
push
int
aaa
adc
arpl
and
out
sbb
es
test
inc
sbb
xchg
xor
pop
lcall
pushf
scas
jne
xchg
lock
clc
jbe
out
mov
aam
out
data16
and
andb
scas
xor
add
cli
mov
pop
das
add
or
fs
enter
or
pop
adc
jmp
push
cmp
jmp
enter
movsl
jp
adc
aaa
ret
inc
outsl
jl
cwtl
xor
repz
jnp
xchg
pop
xchg
shll
inc
sub
cmp
inc
fildl
cs
xchg
mov
or
dec
jg
jge
out
ss
xchg
je
mov
or
popa
mov
jnp
mov
inc
cli
inc
xchg
adc
pop
sbb
addb
popa
pushf
mov
xor
mov
pop
mov
push
xchg
push
rorb
add
mov
sub
push
pop
mov
imul
into
sbb
insl
mov
fwait
pop
lds
out
xor
sub
cmp
rorl
or
sbb
mov
in
fisubrl
mov
xor
push
mov
dec
pop
pop
pop
es
stc
mov
mov
mov
in
sbb
sub
sbb
inc
xlat
daa
cltd
insl
dec
out
or
jecxz
lret
cs
mov
shr
dec
mov
jecxz
adc
sbb
or
movsb
push
add
ret
jbe
nop
inc
in
jl
and
xor
push
cmp
cmc
xor
addb
mov
movsl
ja
xchg
fdivs
inc
or
sti
lcall
xchg
push
dec
lahf
lods
mov
test
jns
pushf
out
adc
js
fldt
je
inc
cmpl
push
aam
mov
mov
icebp
mov
adc
les
movsl
and
jne
shll
mov
cmp
mov
cmp
sbb
push
push
pop
rclb
pop
dec
dec
mov
nop
inc
sbb
cmp
loope
sub
dec
fisubrs
fistps
fdivl
push
jge
jg
jp
and
inc
inc
pop
mov
clc
xchg
jl
fwait
mov
sbb
outsl
sbb
cmc
in
int
mov
lahf
sahf
push
push
pop
xchg
outsb
insb
and
add
inc
clc
pop
sbb
or
test
cld
cmp
mov
jo
pop
mov
or
cmp
adc
sarl
repz
cwtl
orb
mov
clc
mov
dec
sarb
push
decl
cmpsl
loop
int
pop
mov
and
shlb
sub
push
loop
rcrl
inc
lahf
testl
fisttpll
lret
movsb
inc
mov
dec
and
lods
xor
cmp
sbb
mov
mov
lcall
lds
sarl
aaa
adc
inc
addr16
pop
test
les
jb
mov
push
mov
jge
cmpsl
dec
mov
ret
jbe
or
mov
test
push
sbb
cmp
pop
nop
sub
mov
push
and
test
mov
push
sbb
xor
cmpl
push
insb
sbb
fadd
sub
add
mov
cmp
stos
data16
sbb
inc
rcll
jno
dec
jnp
aam
cld
aaa
cmp
nop
daa
lock
outsl
jb
cmp
fisttps
in
repnz
cmpsb
sbb
lods
lea
pop
rolb
mov
and
gs
adc
mov
arpl
xchg
test
mov
xchg
addr16
mov
jb
fcompl
or
stc
dec
add
test
popa
mov
leave
stos
aaa
int3
faddl
mov
push
hlt
pop
lahf
aad
sbb
xlat
add
and
stos
pop
inc
pushf
icebp
nop
xchg
sub
fisubs
inc
dec
mov
xchg
ret
xchg
sar
int3
fistpl
mov
sbb
adc
pop
and
lret
fsubrs
das
pop
std
ss
cmpsl
jg
daa
out
into
mov
shl
lods
into
pop
lods
add
cmp
add
xchg
mov
movsl
out
xor
shll
push
jge
mov
cmp
pop
jp
mov
jo
and
enter
dec
or
sbb
xchg
xor
adc
cmp
jl
fadd
popl
mov
xchg
mov
cmp
push
inc
fwait
out
pop
notb
test
adcl
cmp
jae
fisubrs
sub
arpl
loopne
mov
repnz
mov
jecxz
fld
sahf
call
adc
inc
cmpsb
and
fcomps
push
xchg
das
jmp
sbb
mov
aaa
mov
inc
mov
cmp
mov
or
fistl
jbe
xchg
mov
push
mov
mov
xlat
adc
inc
dec
es
mov
and
out
imul
dec
and
lods
jle
arpl
adc
xor
fcmovne
sub
frstor
fistps
xchg
pop
jecxz
xchg
push
lods
lret
jae
aam
call
shll
iret
loope
fsubs
lret
pop
andb
aaa
sahf
push
cmp
push
sbbl
sbb
fstl
or
dec
bound
jge
dec
ret
insb
inc
jl
xchg
mov
pop
js
cmp
mov
gs
or
mov
pop
mov
lods
and
xchg
nop
jg
xor
dec
pop
mov
shll
into
dec
std
or
testb
dec
cmp
xchg
add
test
sbbb
jbe
test
in
bound
nop
jbe
push
addr16
test
pusha
mov
push
js
add
ficoms
adc
mov
sarl
cmp
fs
mov
mov
lods
iret
xor
bound
pop
mov
iret
cmpsb
mov
jl
sahf
and
mov
cmp
jecxz
pusha
lods
sbbb
lea
hlt
add
jmp
imul
xchg
pop
cmp
mov
shlb
fwait
add
pop
pop
pusha
negb
jmp
jae
cmovns
cld
jg
in
mov
loopne
mov
mov
sbb
sbb
and
or
or
test
cmp
es
xchg
cmpsl
js
xchg
dec
dec
sbb
mov
mov
lcall
ja
mov
fdivrl
mov
add
dec
pop
push
imul
xchg
fwait
lea
test
dec
pop
call
jecxz
out
outsl
mov
push
mov
sbb
jne
xchg
test
out
fbstp
in
add
nop
cmc
cs
mov
jno
arpl
inc
mov
addr16
push
dec
daa
push
sti
xchg
test
fld
pop
adcl
xor
sarl
data16
clc
pop
cmp
hlt
int
push
shl
sbb
xchg
dec
xor
fcmovb
mov
adc
stc
push
mov
cmp
fildl
push
fisubrs
adc
loope
inc
lcall
xor
mov
in
mov
mov
faddp
pop
lcall
push
xor
std
repz
jecxz
out
in
inc
aam
pop
adc
insl
dec
dec
cli
testl
and
aad
mov
mov
lret
cld
bound
jmp
add
gs
inc
pop
pop
sbb
xchg
cli
int3
clc
mov
inc
mov
jge
int3
int3
adc
lods
or
xchg
push
dec
ret
sub
dec
jnp
or
jp
cld
mov
or
mov
xchg
pop
testl
sbb
xor
push
dec
xchg
push
pushf
mov
dec
out
sbb
jb
mov
sub
andb
leave
mov
push
dec
inc
add
sbb
dec
dec
push
lods
ret
sbb
data16
shll
aam
rclb
lret
pop
out
jg
icebp
cld
insl
xor
sub
int3
movsl
push
frstor
pusha
cmp
pop
pusha
mov
adc
push
cmpsb
pop
scas
mov
jae
or
fldenv
sub
aad
or
cmp
outsl
xchg
cmpsb
shrb
icebp
insb
push
jmp
rol
repz
mov
loope
pusha
arpl
push
push
aaa
push
dec
jle
pop
dec
jp
mov
push
popf
cmpsb
jns
or
ret
pop
cwtl
cmp
jle
hlt
xchg
mov
lods
roll
pop
fidivrl
cmp
sbb
add
dec
pop
sarb
daa
pop
loop
in
jge
mov
aam
adc
jo
inc
call
je
nop
leave
out
movsl
movsb
das
cmc
mov
jns
mov
int
ret
and
std
cli
aaa
jp
push
rcrl
jae
mov
in
dec
xor
and
mov
test
mov
sbb
das
sbb
ficomps
cmp
sti
mov
push
std
dec
push
sub
push
dec
inc
shlb
mov
cmp
pop
mov
inc
sub
mov
mov
xor
add
stos
cmpsl
ret
mov
push
fidivrs
adc
rorb
push
cmp
mov
push
jle
cmp
verr
cmp
lds
push
sub
jno
test
jb
pop
push
fisubrl
loop
repz
add
scas
push
dec
loopne
pop
lods
and
xchg
inc
xor
pushf
sbb
cs
test
out
cmp
leave
shll
jns
shl
mov
adc
ljmp
sbb
jb
pop
int3
daa
dec
cmc
push
out
dec
and
pop
in
dec
ret
jnp
xor
and
mov
and
mov
pop
mov
jmp
inc
inc
pop
aad
mov
mov
lret
push
mov
push
push
inc
add
cmp
dec
cmp
cmpsb
lret
cltd
js
iret
cli
aam
sbb
or
push
pop
pop
shrl
add
push
sbb
mov
jno
call
mov
subl
or
lret
aaa
lret
rol
fcmovbe
in
fdivrp
icebp
push
mov
cld
in
ret
jno
js
mov
mov
pop
xlat
arpl
sbb
cli
subb
test
mov
jmp
popf
add
add
xor
xor
int
mov
aaa
xchg
jns
sub
loopne
sub
mov
imul
mov
or
test
lock
xchg
pop
test
pop
dec
lods
cmp
push
mov
jmp
popf
push
xchg
shl
out
push
jecxz
adcl
adc
pusha
decl
xor
dec
pop
mov
rolb
dec
outsb
cmp
push
pusha
ljmp
into
mov
cmpsl
cmc
mov
in
sub
les
xchg
jae
repnz
in
stos
inc
inc
xor
pushf
and
arpl
sbb
adc
dec
out
outsb
jae
mov
ficompl
xchg
lods
mov
cmp
lahf
lds
add
pop
hlt
push
mov
jnp
mov
loopne
clc
adc
out
pop
cmp
sbb
sbb
cmc
sbb
xor
sub
leave
fldl
hlt
outsl
and
jge
sti
mov
negb
push
add
jne
sbb
xchg
bound
rorl
ss
popl
xor
aas
int3
dec
ljmp
arpl
xchg
rclb
es
sub
adc
sbb
arpl
xchg
jae
ljmp
nop
out
sub
push
mov
jg
push
mov
stos
pop
inc
in
or
pop
fistl
adc
mov
ljmp
cmpsl
fxch
add
js
in
or
sub
clc
lret
fldcw
jno
nop
sahf
test
or
test
mov
stc
mov
cmp
xchg
sbb
push
dec
das
std
bnd
stos
dec
into
sub
cli
sub
sbb
mov
push
mov
inc
mov
adc
adc
cmpsb
dec
in
stos
push
mov
aad
loope
push
pop
mov
jns
mov
cmp
scas
inc
mov
mov
push
int
sbb
repz
sbb
mov
faddl
in
into
mov
into
lods
pop
adc
shr
pop
add
xchg
out
push
inc
mov
pop
cmp
jge
dec
sbb
mov
into
ljmp
pusha
popf
mov
inc
mov
sbb
jno
dec
lcall
mov
inc
pop
shll
add
mov
stc
jle
jnp
jmp
ficomps
mov
sub
mov
cwtl
sbb
push
push
arpl
add
push
loopne
fistpl
mov
dec
lret
inc
fists
mov
mov
popa
dec
or
rclb
fcomip
outsb
jg
shrb
sub
in
cmp
xor
jnp
sti
mov
mov
inc
shrl
arpl
movsl
fdivrs
jmp
in
out
hlt
outsl
push
aam
int
mov
cmpsb
in
push
xchg
mov
sti
addr16
cmp
cmp
xor
adc
rorl
das
sti
push
call
sub
je
roll
das
pop
lods
lcall
push
jns
add
fwait
jne
in
mov
in
jle
lahf
cmp
arpl
mov
sbb
dec
flds
cmp
pop
jo
jp
jnp
or
mov
cmp
push
scas
xor
add
add
mov
test
adc
jo
lret
mov
sbb
dec
sbb
jp
fdivr
nop
sub
ret
scas
and
jp
aad
shl
ljmp
pop
cmp
inc
pop
nop
iret
cmp
dec
mov
mov
cmc
int
add
das
aas
fidivrs
mov
cmp
mov
fsubs
cmpsl
add
jge
sub
xor
iret
and
scas
sub
adc
cmp
mov
scas
cli
sbb
popa
push
add
or
pusha
cmpsb
jg
mov
cwtl
jnp
jmp
fcomps
scas
cwtl
andb
cmp
js
mov
mov
das
nop
or
in
cltd
xor
cmpsb
or
and
adc
aas
xor
lcall
popf
pushf
aam
mov
adc
cmp
jmp
xor
sub
ds
or
xchg
pop
mov
jle
push
mov
mov
jno
xor
sub
sahf
in
fs
mov
xor
je
movl
jle
adc
mov
push
data16
sbb
ror
adc
mov
fisubl
jl
cmp
loopne
imul
xchg
cltd
inc
aad
mov
in
xlat
out
push
jns
jmp
out
cwtl
insb
pusha
inc
mov
sbb
fisttpl
add
lcall
test
fstpt
mov
and
ljmp
jmp
push
mov
loop
inc
out
daa
subl
sub
xor
ljmp
cmp
js
and
pop
mov
xchg
fdivrs
inc
nop
mov
ds
popa
adc
jb
pusha
pop
cltd
mov
mov
cmpsb
cli
mov
jo
loop
sbb
sbb
sub
mov
mov
mov
fs
lret
pop
mov
mov
push
ret
xlat
xlat
imul
lahf
sub
and
mov
dec
or
mov
addr16
mov
in
les
clc
inc
or
pop
retw
dec
mov
pop
xchg
xchg
scas
jle
lcall
arpl
pusha
push
cmpsl
loope
mov
arpl
xor
and
or
mov
sbb
inc
add
cmp
je
lahf
sub
push
pop
and
stc
fs
lea
push
lds
nop
repz
add
and
fldt
jbe
or
jne
mov
jle
sbb
mov
push
sbb
and
pop
cmp
cs
cmpsb
push
in
xchg
mov
js
les
ja
lcall
add
or
mov
shl
xchg
or
xchg
or
or
test
jmp
cmc
dec
call
dec
cmpsb
pop
ds
enter
ljmp
sbb
jnp
lret
cmpsl
mov
push
jle
dec
xchg
lods
outsl
xor
ret
add
mov
int
dec
push
cmp
pop
inc
xchg
or
add
cwtl
icebp
arpl
loopne
rcll
mov
mov
mov
sub
cltd
or
and
lcall
sub
test
push
scas
mov
push
jns
outsl
push
ficoms
js
dec
push
push
jp
lahf
les
icebp
xor
cwtl
sbb
mov
mov
ror
mov
out
add
xchg
out
mov
push
ja
sub
in
inc
dec
mov
ficoms
daa
std
imul
incl
adc
xchg
rorl
add
aam
ljmp
and
mov
arpl
dec
and
mov
mov
lods
xor
inc
int3
adc
test
cmp
roll
jmp
push
mul
push
mov
inc
shl
push
loop
por
mov
in
or
jne
push
and
test
cmpsb
mov
sub
int3
addr16
lcall
pop
stc
sub
mov
leave
push
mov
cli
sbbb
push
push
xchg
xor
pop
popf
fimuls
fstl
lahf
push
testb
mov
shll
sub
mov
pop
leave
sti
jg
or
cwtl
jl
dec
inc
dec
mov
mov
roll
icebp
adc
add
stos
adc
dec
and
in
mov
movsb
jbe
xchg
movsb
push
stc
ja
mov
in
dec
mov
and
add
lds
and
fimull
jecxz
fwait
cmp
mov
fs
out
mov
jecxz
cmp
jecxz
sub
push
outsb
inc
push
fs
adc
ds
adc
dec
insl
lods
lds
add
jae
adcb
mov
dec
nop
pop
std
icebp
pop
or
and
inc
dec
mov
in
cs
mov
jbe
cmpsl
bound
bound
std
and
and
jb
insl
sbb
ds
test
cld
outsl
sbb
mov
andb
fadds
push
fs
push
jmp
dec
sub
pop
das
fwait
repz
test
pop
adc
push
sti
mov
push
aaa
xchg
sbb
xchg
in
cltd
shrb
pusha
filds
sub
lcall
cld
add
xor
test
and
andb
adc
pop
xor
sbb
cmp
test
std
sbb
fisttps
movsl
in
xchg
aas
outsl
sub
inc
and
insl
push
push
mov
pop
push
bound
les
sbb
sbbl
jo
jns
test
mov
pusha
or
mov
dec
push
xor
shrb
sub
inc
mov
cltd
xchg
xlat
loopne
sbb
adc
pop
aas
cmp
jno
sub
push
mov
xor
mov
test
lea
jmp
aam
in
pop
jg
or
mov
rcrb
notl
jl
adc
bound
xchg
cmp
adc
orl
cltd
xchg
mov
iret
leave
jnp
sbb
std
shl
or
pop
outsl
inc
stos
mov
cmpsb
mov
arpl
mov
pop
mov
pop
jbe
daa
adc
push
xchg
adc
add
push
jmp
push
adc
adc
aam
mov
out
xchg
mov
js
sbb
and
xchg
cmp
les
cmp
sub
iret
test
aad
decl
pop
clc
shlb
sub
filds
mov
jbe
sbb
and
or
xchg
inc
movsl
ss
push
test
mov
cli
inc
movsb
or
mov
push
rol
cmp
lods
leave
repnz
mov
mov
loop
pop
dec
add
cltd
push
std
inc
push
add
icebp
jne
cmp
jge
or
mov
std
sub
popf
mov
popf
jg
movsl
sub
push
test
push
addl
jo
fcmovne
add
call
xor
push
jmp
je
in
xchg
dec
mov
jae
push
pop
inc
cmp
push
adc
scas
adc
xchg
and
xchg
inc
mov
or
and
adc
and
push
out
pop
inc
xchg
jg
mov
div
push
xor
push
orl
pop
xchg
inc
pop
push
mov
in
or
imul
test
fs
stos
icebp
push
fidivs
or
xchg
fistpl
xchg
lds
sub
std
pushf
sbb
addr16
les
cmpsl
pushl
and
dec
and
das
clc
sub
test
cmp
in
cmpl
std
sub
fstpl
add
mov
xor
insb
xchg
dec
ljmp
ret
inc
add
cmp
cmp
jae
pushf
cwtl
sub
mov
dec
push
fadds
push
jmp
mov
mov
xor
sahf
mov
sub
fstl
in
mov
inc
push
shrb
daa
pop
stos
lcall
outsl
lea
or
jne
ss
pop
sti
pop
sub
adc
bnd
push
imul
fdivrs
inc
test
mov
xchg
pop
fs
sub
das
loop
xchg
xchg
sahf
mov
cmpsb
xchg
inc
cmp
dec
iret
clc
cld
nop
pop
dec
call
ljmp
aas
fisubrs
js
rcr
push
js
xchg
fcomi
movsb
jmp
insb
or
sti
fisttpll
cmp
incl
in
gs
push
jmp
mov
test
mov
xor
bnd
mov
iret
push
mov
ja
xlat
test
je
imul
cmpsl
sbb
imul
test
xchg
imul
jp
in
xor
incb
data16
das
cld
lret
and
stos
fwait
dec
add
mov
xchg
call
mov
add
leave
sbb
mov
imul
jmp
sbb
decb
inc
xor
xor
pop
fsubrp
push
cmc
jp
mov
xchg
push
lea
cmc
inc
faddp
sub
fwait
xor
jl
jb
pop
lods
out
fmul
dec
js
inc
std
test
jno
pushf
pop
shll
stc
push
pop
dec
aas
mov
fwait
roll
push
into
pop
and
int3
int3
dec
sub
mov
jbe
loope
iret
cli
clc
mov
mov
and
in
mov
mov
mov
iret
pop
stos
lds
sti
lods
cmp
shl
mov
pop
outsb
js
ja
dec
test
in
mov
mov
jbe
sti
sub
jo
adcb
push
test
sub
jge
mov
stos
mov
mov
sub
int3
das
dec
xchg
push
out
push
pusha
and
lock
in
mov
das
inc
loope
arpl
outsb
mov
enter
shl
sub
ret
mov
add
stos
cs
out
jae
mov
cmp
sub
jmp
call
shlb
ret
and
and
fcomps
ljmp
and
pusha
xchg
mov
push
dec
inc
mulb
push
mov
adcb
outsl
out
sbbl
andl
pop
icebp
push
or
inc
jno
add
dec
jecxz
pusha
xchg
cltd
pop
int3
xchg
push
ss
pop
jp
fildll
mov
xchg
inc
lret
movsb
clc
dec
stos
mov
ret
lahf
stos
idiv
adc
sbb
es
push
push
cmpsb
pop
std
pop
add
sbb
out
inc
lret
cmp
loopne
popa
pushf
out
movsl
jp
mov
inc
inc
push
xchg
push
push
paddb
je
cmp
mov
or
in
out
adc
add
sub
jle
xchg
std
scas
aam
rcr
or
lea
stos
mov
push
test
push
sub
push
mov
or
ds
shrb
cmp
add
cmpl
pop
je
cld
add
loope
mov
mov
adc
imul
fsubl
xchg
cmp
mov
push
test
xchg
std
ret
inc
std
cmp
mov
mov
call
xor
outsb
movsb
addr16
sub
sub
inc
and
push
jne
mov
sbb
bnd
stos
les
movsb
repnz
in
jae
inc
mov
pop
into
ja
pop
es
push
mull
xchg
pop
lds
adc
cmp
dec
inc
adc
jbe
push
adc
std
hlt
fdivr
stos
sar
xchg
mov
sbb
scas
ds
add
es
rcll
data16
sbb
ss
call
pop
divl
aad
mov
mov
shrl
cmpl
xchg
mov
ss
pop
sahf
adc
sbb
jle
xor
xchg
out
js
into
add
insl
jl
mov
sbb
xor
cmp
fidivl
pop
jge
cmp
mov
cmpsl
pop
push
mov
ficomps
sbb
std
push
push
xor
inc
and
push
push
xchg
add
lret
inc
inc
dec
arpl
stos
add
xchg
sub
mov
mov
out
dec
xchg
addr16
jg
sbb
inc
ror
shll
data16
addr16
inc
nop
xchg
mov
gs
dec
jns
sbb
outsb
orl
jmp
popa
test
mov
cmp
pusha
daa
pop
js
shlb
jae
mov
xchg
pusha
es
push
sbb
movsl
addb
insb
in
inc
es
add
lret
and
popa
inc
fwait
icebp
jmp
mov
xlat
xchg
in
pop
adc
das
add
enter
clc
push
jg
push
xor
cmpsl
add
jb
or
mov
xor
out
sbb
adc
out
es
popf
out
rcr
pop
out
sbb
xor
movsl
dec
out
negl
cs
jp
mov
push
js
push
lods
loope
rclb
sub
cld
orl
xchg
inc
mov
sarb
into
in
into
fdivl
mov
rorl
pop
call
xchg
mov
adc
int3
push
dec
and
xor
jb
aad
fisubl
dec
pop
jge
ret
clc
adc
adcb
xor
adc
rcll
lods
in
push
xchg
leave
test
mov
das
dec
rorb
cmp
mov
fldcw
inc
aad
leave
out
int
jmp
cli
cmc
popf
lcall
dec
hlt
inc
repz
and
popf
sbb
xor
dec
scas
fiaddl
cmpsl
mov
push
mov
add
mov
adc
sbb
popf
inc
and
aaa
add
xorl
popf
dec
movsl
or
fsubs
or
sub
jp
jbe
sbb
mov
jge
lret
lahf
and
mov
push
add
sti
punpckldq
mov
mov
pop
out
jbe
sub
les
push
jb
icebp
shrb
xlat
leave
sub
leave
inc
xchg
add
jge
shrb
pusha
loop
sub
inc
pop
cmp
add
out
mov
push
out
dec
jns
xor
data16
mov
dec
imul
call
scas
cmp
addb
jg
je
push
mov
inc
lds
ljmp
jecxz
and
cmp
xchg
shl
mov
scas
cmp
pop
bound
jg
inc
mov
and
icebp
out
mov
adc
inc
fimull
arpl
push
repnz
cmp
cmp
adc
xor
int
push
ror
mov
adcb
cmpsl
mov
dec
fwait
jbe
cwtl
xchg
push
push
sub
fnstcw
sbb
and
movsl
notl
jecxz
lret
cltd
sub
and
test
push
adc
xchg
cli
fstpt
mov
jns
xor
frstor
jno
push
fimull
notb
ret
std
out
jl
ret
jl
fcomip
insl
inc
addr16
lahf
pop
xor
fs
in
std
lods
jo
scas
mov
jne
out
and
test
dec
sbb
aad
outsl
mov
and
les
das
pop
cmp
popf
cmc
add
scas
sub
xor
push
inc
dec
pusha
cmp
js
add
add
dec
stos
fdivr
pusha
lea
call
pop
mov
adc
xor
jp
and
sarl
incb
add
out
push
dec
adc
aas
dec
jge
inc
jl
sbb
cmpl
mov
dec
lret
out
cmc
pop
jecxz
popa
xchg
mov
jge
add
mov
call
jne
ja
leave
jnp
xchg
enter
cmp
fwait
mov
aam
iret
add
cmp
sbb
sbbl
xchg
nop
cwtl
cwtl
mov
add
mov
and
iret
mov
cli
sarb
xchg
insl
outsb
inc
addb
lret
ret
jge
inc
ss
mov
cmp
mov
insb
in
aam
xchg
adc
cwtl
xchg
std
jmp
repnz
mov
push
mov
or
jne
mov
pop
sahf
mov
push
jmp
movsl
lea
push
xor
lret
cwtl
hlt
mov
popf
push
in
inc
mov
mov
sub
popf
negb
lahf
sub
sarb
or
dec
or
push
sbb
cmp
es
mov
mov
mov
imulb
ror
nop
std
push
pop
sahf
push
roll
push
sarl
pop
lds
push
add
jb
aad
outsl
incb
stc
add
int3
iret
popl
dec
fidivrl
push
jle
cld
inc
ss
sbb
mov
cmpsb
outsb
fisttpll
std
iret
into
cmp
pop
jecxz
push
xor
test
bound
add
sbb
cmp
iret
adc
mov
jne
xchg
xchg
test
push
mov
int3
scas
std
fisubs
scas
xchg
aas
test
xor
add
je
mov
dec
xchg
xchg
aaa
aas
push
dec
xor
dec
lods
jge
insl
cltd
xor
sbb
cmpsl
cltd
lods
lock
arpl
rolb
jg
mov
outsb
inc
and
out
xchg
movsl
mov
loope
push
or
jbe
test
pop
add
insl
jecxz
cmp
dec
repnz
xor
fildl
mov
or
loope
cld
in
je
sahf
mov
fistps
xchg
or
inc
out
jge
js
or
adc
mov
xchg
push
mov
add
mov
push
fstpt
xor
sbbl
cmp
addr16
test
cwtl
push
rcll
xchg
scas
cld
xor
aam
lock
cmp
and
lea
flds
or
add
shrl
fldcw
jne
inc
push
adc
enter
xor
pop
push
push
fdivr
orl
xor
add
icebp
jns
in
dec
popl
movsb
cs
xlat
push
clc
cs
fistl
repnz
cmpsb
push
iret
jbe
cmpsl
mov
dec
inc
rorb
mov
push
push
jbe
push
scas
daa
nop
stos
mov
sbb
ja
jbe
hlt
dec
in
add
scas
add
add
or
scas
adc
jmp
test
ret
jg
pop
call
sub
sub
add
out
lahf
xchg
ja
or
or
cli
and
inc
mov
xor
or
mov
aad
leave
ljmp
dec
lods
pop
sti
ljmp
stos
repnz
jl
mov
jecxz
mov
in
inc
shrl
je
test
push
push
test
xor
popf
mov
inc
jmp
xchg
sarb
icebp
test
mov
rol
in
mov
stc
add
inc
push
xchg
dec
mov
xorl
testl
nop
mov
add
and
ret
movsl
cmp
mov
mov
loopne
or
mov
enter
mov
aam
mov
inc
mov
cltd
mov
test
push
cmp
xor
cwtl
clc
inc
test
iret
and
in
add
dec
movhps
ljmp
mov
sbb
mov
push
fidivrs
inc
mov
pop
xor
in
lahf
cmc
xchg
movsb
sbb
cmp
add
fcoms
mov
leave
aas
pop
fldcw
sarl
xchg
xorl
fadds
sub
inc
pop
cmc
sbb
cmc
mov
sbb
dec
int3
lods
add
xchg
cs
mov
push
pmaxub
jno
jecxz
test
stc
loop
movsl
mov
es
mov
into
fcmovb
rolb
push
in
sub
mov
jns
jecxz
cmpsl
cmc
sbb
leave
mov
sbb
sub
call
lods
mov
and
call
out
jge
stos
repz
imul
dec
xchg
cwtl
shl
cs
mov
mov
xchg
ja
xchg
sahf
stos
pop
cli
rolb
fidivl
jl
inc
arpl
inc
push
sub
mov
mov
arpl
pop
pop
notb
sub
or
xor
sbb
test
pop
mov
stos
adc
hlt
into
aam
xchg
imul
add
movsb
xlat
push
inc
add
lods
movsb
jp
lret
aad
loopne
adc
sahf
mov
adc
pop
mov
mov
sti
in
push
lds
enter
mov
mov
jge
leave
mov
mov
sub
sbb
in
inc
mov
arpl
xchg
dec
mov
testb
iret
sub
push
push
aad
mov
add
pop
cmp
out
subb
sbb
out
ret
pusha
push
push
lret
add
aad
pop
lods
inc
jno
jge
enter
stos
mov
xchg
push
fcmovnb
cmp
add
lret
xor
mov
jp
jmp
lds
push
loopne
pop
mov
cmp
fnstcw
sub
or
pop
push
sub
insb
mov
push
repz
sub
sti
fstps
icebp
popf
ret
pop
jae
es
and
cmp
mov
sub
inc
inc
xchg
cmp
inc
shlb
and
xlat
ret
daa
sub
sbb
lea
outsl
inc
inc
pop
test
pop
mov
insl
xor
cld
sbb
jg
inc
add
cmpsl
cmpsb
pop
lock
pop
sbb
aaa
inc
sbb
inc
and
out
mov
xchg
add
movb
div
outsb
mov
mov
mov
mov
mov
mov
mov
or
jno
mov
scas
fcmovbe
fsubs
and
or
clc
adc
ljmp
pusha
adc
adc
xchg
bound
pop
mov
add
jns
in
xchg
and
jg
push
shl
or
cmp
lret
xchg
aaa
inc
cmp
adc
out
cmp
scas
lret
cmp
lods
jecxz
ja
jmp
xor
xlat
daa
jmp
out
dec
outsb
imul
adc
jnp
mov
sbb
stc
shll
decb
push
sub
xchg
das
hlt
int
pusha
or
xchg
data16
push
lods
sbb
clc
cli
into
test
out
xorl
arpl
xchg
jae
fs
add
cmp
hlt
cmp
aaa
sbb
mov
sub
call
es
dec
sbb
push
mov
pcmpgtw
adc
pusha
lods
lds
dec
add
loop
cmc
dec
pushf
pop
es
cmpsl
bound
mov
jb
insb
mov
sub
cmpsl
negb
push
sbb
mov
jno
sub
insb
mov
inc
xchg
gs
dec
fldenv
sbb
rcrb
lret
xchg
and
xlat
adc
ss
mov
mov
leave
dec
pop
addl
lahf
bound
fiadds
adc
outsl
inc
jo
filds
outsb
sub
jnp
push
jle
push
add
inc
pop
cmpsb
fcomp
push
cmpsl
loop
int
pusha
lret
insb
loopne
lret
jmp
pusha
movsb
mov
mov
mov
mov
jbe
fidivs
inc
push
mov
xlat
outsb
sub
jge
aas
inc
dec
enter
push
pop
and
lret
leave
scas
loope
cwtl
test
std
inc
or
fbstp
cmp
pop
xchg
mov
mov
jno
mov
push
add
fbld
push
pop
ja
mov
add
fcomi
and
push
enter
sbb
mov
jg
in
shlb
and
dec
or
mulb
jmp
mov
pop
in
sbb
fidivrs
mov
loop
sbb
inc
and
mov
ret
dec
or
stos
fildll
mov
int3
incl
stos
loopne
and
or
test
test
xor
mov
in
clc
mov
aad
cmpsb
stos
ficoml
cmpl
pop
and
cwtl
stos
xchg
sub
nop
nop
and
iret
cmpsl
int3
adc
jb
idiv
dec
into
or
cwtl
mov
inc
fwait
in
ja
ret
jae
outsl
pop
shlb
jmp
popf
pop
xchg
jmp
shl
arpl
mov
jmp
lock
outsb
outsb
mov
leave
jle
dec
fsub
cwtl
add
rcl
ss
pop
nop
cld
or
pop
out
jae
xor
test
cmp
enter
fs
mov
jno
addr16
cld
arpl
jbe
loope
iret
or
inc
dec
je
movsb
dec
push
adc
test
repz
push
test
leave
mov
lds
in
jecxz
fucomip
xor
mov
mov
xor
int
mov
imul
out
adcl
push
mov
sub
xchg
pop
dec
inc
pop
out
mull
add
xchg
sub
mov
pop
aas
xlat
mov
dec
mov
scas
or
mov
fnstsw
scas
mov
cmp
jmp
fisttpl
imull
pop
push
js
testl
fnstsw
mov
push
in
mov
lock
sbb
xchg
pop
cmp
sahf
push
lret
inc
pop
popf
rcll
jge
or
pop
in
and
sbb
jg
sub
inc
popf
jo
jnp
loope
sbbb
xchg
lret
emms
xchg
out
movsl
dec
dec
xor
xchg
decb
adc
sbb
mov
mov
bound
in
inc
jno
mov
pop
imul
add
mov
push
jns
das
sub
dec
sti
mov
or
add
cmp
adcb
adc
fwait
jp
aam
push
in
cmc
jecxz
push
cmp
fwait
mov
dec
sub
lcall
push
test
cmp
and
xchg
mov
push
push
std
xchg
das
mov
sbb
sbb
cmc
ret
iret
mov
aad
aas
js
sbb
sarl
push
call
stos
pop
cltd
xchg
and
xchg
xchg
xchg
bound
testb
daa
les
jne
add
dec
mov
jns
xor
sbb
fsts
imul
add
imul
mov
adc
or
insb
das
cmp
imul
cltd
stos
adc
fs
fnsave
ret
inc
addl
jno
ds
in
bound
fucom
std
repz
xor
jae
inc
mov
pop
sarl
mov
fwait
and
insb
mov
mov
xor
fwait
xchg
mov
pop
shl
sub
fxch
push
std
movsl
repnz
mov
and
xchg
adc
aad
stos
pop
movsl
outsl
aas
jns
and
inc
pop
mov
jns
and
xchg
je
push
xchg
cmp
or
mov
inc
or
jbe
push
sbb
jnp
xchg
inc
pop
mov
cmp
jae
mov
pop
cltd
inc
rorb
xor
mov
mov
sbb
jl
aaa
scas
out
mov
push
jge
scas
add
insl
sarb
scas
mov
mov
pop
sub
pop
sbb
jne
dec
or
mov
xchg
adc
pop
push
ret
sbb
ret
cmpb
out
or
bound
jg
fisubrl
hlt
sbb
push
mov
outsb
fwait
pop
jmp
sub
push
xor
adc
dec
rcrb
sbb
cmp
in
add
jl
push
cli
push
push
mov
cwtl
std
xchg
push
push
dec
rcrb
sub
mov
mov
sub
loopne
dec
push
in
aam
inc
and
mov
xor
ja
and
lea
mov
add
insb
sahf
xchg
ds
adc
sbb
icebp
aaa
hlt
aam
or
pop
sub
sbb
aas
cmp
fcoms
test
cwtl
popf
ja
mov
xor
pop
xchg
xor
push
sbbl
ficompl
sub
mov
loope
mov
outsl
xor
xchg
stc
pop
addr16
push
bound
xor
sub
out
roll
das
adc
sub
pushf
inc
jns
pushf
adc
sti
cmp
push
js
push
adc
out
adc
mov
inc
pop
lea
xor
sbb
test
lea
fdivs
or
or
adc
int
loop
inc
outsb
lds
adc
jno
sbb
sub
addb
sub
pop
stos
cli
sarl
xchg
cmp
cld
and
repnz
pop
xchg
jmp
das
mov
cltd
mov
cmp
and
xor
inc
inc
cmp
dec
lock
jb
cmp
aaa
outsb
fcomip
jge
cmpsb
push
scas
adc
jbe
aad
jo
call
addr16
lret
xchg
adcl
std
pusha
jo,pt
mov
pop
xor
outsb
mov
push
scas
out
call
inc
dec
xor
mov
mov
jno
sub
sub
test
popa
inc
out
or
xchg
aam
int
in
mov
mov
movsl
pop
rol
push
pop
jmp
dec
inc
or
inc
fwait
pusha
and
mov
subl
adc
insl
push
pop
adc
xor
xor
aad
rorl
daa
imul
push
or
imul
and
jge
mov
ret
mov
inc
aam
imul
or
call
mov
xor
cmp
push
jecxz
push
push
ja
pop
adc
mov
pop
push
sub
dec
xchg
pop
mov
lods
loop
pop
ja
addr16
addb
jmp
push
loope
daa
cmp
shlb
mov
jg
sbb
call
jl
adcb
orb
cmc
fistpll
push
jg
aam
fisubrl
cmp
push
mov
loopne
frstor
sub
xchg
mov
repnz
inc
out
mov
add
push
out
test
cmpsb
popaw
jmp
les
fs
orb
cmp
ljmp
ret
xor
adc
ret
cmp
into
mov
mov
pop
jb
leave
data16
ljmp
dec
pop
pop
cli
mov
cmp
cmp
pop
lods
insb
jbe
cmp
jp
stc
fldcw
cld
mov
sbb
repz
orl
sub
push
push
clc
punpcklwd
call
and
cmp
jp
jnp
sub
aas
jg
fwait
push
nop
shlb
enter
cwtl
dec
push
and
addr16
out
loope
es
mov
icebp
mov
imul
pop
inc
idivb
and
dec
aas
cmp
mov
mov
xchg
popf
clc
in
adc
jb
sub
push
jge
scas
mov
mov
shlb
sbb
pop
mov
mov
cmp
and
dec
mov
call
pusha
xlat
ss
dec
lcall
push
mov
mov
pop
inc
cltd
mov
jmp
lret
inc
dec
dec
rcrb
jge
hlt
aam
stos
lcall
and
movsl
mov
inc
pop
sbb
mov
jo
popa
mov
push
testb
or
pushf
es
pop
mov
notl
ret
cmp
jp
popa
xchg
mov
ret
mov
pop
pushf
ret
xor
outsw
clc
pushf
jae
dec
mov
pop
adc
lock
cmpsb
cli
out
std
push
mov
imul
sbb
into
aaa
int
in
cmpsl
test
cltd
and
mov
push
cmovne
jne
jg
mov
mov
aad
cmp
inc
mov
decl
add
sbb
or
mov
es
rcll
and
cmp
xorl
xchg
out
les
cmpl
mov
cmc
mov
mov
mov
lods
inc
scas
xchg
cmp
mov
inc
push
cltd
push
icebp
fwait
mov
fsubrs
adc
push
aam
imul
enter
data16
ficoms
jno
nop
sbb
cld
repnz
xor
dec
sub
mov
add
loopne
sbb
gs
xor
and
das
ds
xor
sbb
ja
loope
cli
sub
je
lods
cltd
sub
shlb
pop
pop
xor
pop
mov
mov
idiv
pop
push
sbb
popf
pop
mov
pcmpeqw
sub
mov
dec
push
lods
inc
and
xor
add
inc
cld
jbe
push
lret
cmp
adc
lds
or
mov
nop
mov
outsl
lea
leave
pop
outsb
pop
les
cmp
mov
push
xchg
loop
and
mov
xchg
jns
aaa
sbbb
or
xchg
cwtl
lock
adc
scas
gs
cmp
out
cltd
repz
mov
cmp
mov
cltd
mov
sub
jns
and
subb
lcall
cld
add
fdivrl
ja
mov
mov
mov
pop
push
push
lock
cld
dec
jns
jl
xorl
jno
push
sti
rcrb
xor
cli
cli
push
adc
jp
repnz
sbb
jb
fsts
das
mov
mov
jl
fisubs
add
pushf
mov
das
sahf
jl
mov
cmp
incb
mov
rclb
inc
arpl
es
mov
add
mov
sbb
xchg
xsha256
cmpsb
jp
in
and
movsb
pop
add
push
push
repnz
int3
push
add
sub
mov
and
mov
push
adc
inc
adc
lods
add
or
xchg
xchg
cmpsl
pop
mov
jge
push
outsb
sbb
dec
cld
arpl
mov
mov
mov
xchg
dec
ljmp
lret
repnz
repnz
hlt
xor
insl
cltd
add
and
cmp
xchg
mov
xor
add
xchg
mov
push
cmp
pushf
xor
adc
test
cmp
mov
and
notl
jae
negl
stc
test
mull
lret
jecxz
hlt
inc
adc
lock
data16
inc
stc
mov
pop
gs
fs
jns
jmp
add
cmpsb
scas
testb
dec
adc
and
sbb
mov
cmpsb
stos
add
fisubs
sbb
mov
iret
jge
mov
hlt
lods
mov
sub
in
fsubrl
es
mov
je
xchg
dec
cmpsl
mov
mov
and
subl
sbb
cmpsb
sub
dec
out
out
imulb
xor
or
sets
jge
cli
ret
repz
sahf
fiaddl
stos
adc
insb
adc
ret
aaa
imulb
jnp
and
lea
dec
mov
adc
dec
nop
inc
in
mov
stos
dec
in
mov
mov
xchg
sbb
and
popf
dec
inc
stos
or
and
es
add
and
lcall
mov
aaa
pop
push
std
addr16
shr
xor
imul
std
push
cli
pop
cmp
dec
leave
fmul
xchg
pop
push
jae
cmp
int
or
push
sub
add
sbb
aaa
cs
push
lret
xchg
mov
cmp
in
add
fcompl
aas
aaa
cmpsl
push
sub
rorl
nop
insb
mov
xchg
data16
pop
cld
incb
movsl
or
into
into
outsb
jne
lea
lock
mov
dec
ds
fsubs
push
outsb
jle
aas
je
scas
cmp
xchg
xor
jecxz
push
arpl
out
adc
in
aas
sub
call
mov
nop
and
gs
sub
adc
jecxz
xchg
mov
scas
mov
mov
in
pop
leave
mov
jecxz
mov
jmp
mov
add
fidivs
dec
push
jmp
pop
cld
inc
push
imul
dec
fsts
andl
xor
pop
aam
xor
ja
cmp
sarb
jo
rclb
mov
dec
aam
out
xor
sbb
jb
lcall
xchg
stos
xchg
into
loopne
jle
xor
fstps
jns
sahf
loop
mov
or
push
sub
cmc
in
cmpb
scas
adc
cwtl
negb
sbb
and
add
jp
xchg
lea
aaa
cmp
dec
or
lea
xor
loopne
mov
cmp
jle
lret
mov
orl
pop
fwait
cmpsl
rcll
test
je
loopne
test
sahf
sub
enter
inc
out
adc
lods
mov
push
mov
jmp
loopne
gs
sub
rorl
scas
rorb
pop
ret
mov
or
mov
add
popa
popa
push
mov
cwtl
fwait
lcall
push
rcr
shll
out
sub
vandnpd
cmp
mov
call
inc
bound
pushf
sbb
repz
cmpsb
cmpsl
xchg
mov
add
xchg
pop
dec
or
in
or
repnz
pop
ljmp
fldz
decb
jl
dec
dec
mov
dec
cmpsl
sub
aaa
push
or
push
scas
pop
and
mov
enter
out
fcomi
shrl
mov
fcompl
dec
inc
xchg
cmp
aam
xor
lret
add
mov
sahf
cld
fldenv
pop
test
dec
ss
lret
rorl
clc
hlt
mov
dec
pop
jae
mov
cltd
stos
sub
lods
data16
pop
push
aas
aaa
lods
mov
imul
repz
std
scas
or
pop
orl
js
stc
fwait
jp
outsb
stos
data16
fldl
pop
pop
addr16
or
jmp
push
outsb
jne
pop
loope
mov
lds
movsl
cmp
cwtl
nop
add
xor
push
loop,pn
jle
sbb
push
jle
shl
pop
inc
dec
ret
or
push
addl
ret
xchg
lds
mov
xchg
cmpsl
ja
jno
call
push
je
lods
aaa
mov
or
in
fildl
inc
sbb
scas
push
dec
sbb
sub
pop
or
cmp
mov
je
fwait
mov
adc
ja
or
xchg
cmp
push
push
push
mov
inc
adc
fs
xchg
mov
in
mov
inc
sti
lods
stos
iret
out
inc
xor
mov
mulb
inc
xor
sti
enter
repz
jb
mov
in
pop
loopne
scas
aad
jmp
add
in
test
and
fisubs
mov
adc
repz
cltd
push
add
in
sub
xor
lds
stos
push
inc
push
pop
mov
popa
mov
sub
inc
pusha
enter
in
adc
xchg
es
outsl
cs
sbb
jb
sti
enter
test
ja
xchg
aas
shrb
int
hlt
cmp
adc
scas
lock
movsl
stos
mov
loop
xor
and
outsl
jns
out
loopne
fnsave
and
je
push
fistpl
inc
rorl
push
sbb
xchg
movsl
hlt
push
mov
aas
in
cmpsb
mov
xor
popf
add
dec
xchg
xchg
repnz
lret
mov
mov
cmp
mov
add
loope
movsl
dec
inc
inc
push
movsl
sbb
data16
xor
das
jae
iret
loope
and
inc
push
push
pop
push
sub
movsl
lea
cmpsl
pop
or
sub
mov
aas
cmc
push
je
jg
inc
xor
mov
cmpsb
clc
inc
ror
push
sbb
mov
in
ret
jbe
jmp
cwtl
cmp
sbb
add
cmp
lcall
out
mov
xchg
test
lcall
shll
rcrb
pshufw
cld
subb
adc
adc
jp
lcall
outsb
mov
sub
mov
and
rcll
xor
push
and
nop
xchg
lods
movsb
mov
mov
jle
mov
mov
xchg
shlb
inc
pushf
mov
sbb
or
ficomps
mov
lret
addb
sbb
dec
jmp
jecxz
fwait
adcb
sbb
adc
mov
clc
push
cmpsl
inc
jne
xor
lods
jae
shlb
rolb
mov
mov
in
dec
push
insb
rcrb
int
pop
mov
push
les
test
mov
iret
arpl
inc
jno
xchg
mov
sahf
fdivs
sub
cmc
scas
call
add
cmp
push
sub
fs
add
fdivrp
fimuls
cs
pop
imulb
loop
arpl
divb
lock
jae
dec
and
in
icebp
cmp
dec
sbb
mov
adc
andb
mov
jmp
fmull
xchg
cmp
push
into
repnz
mov
adc
jecxz
not
in
inc
mov
subb
dec
pop
outsb
push
cmp
lahf
jge
pop
les
xchg
dec
enter
cmp
cmp
arpl
inc
cmp
mov
xchg
xor
mov
or
mov
pop
clc
mov
pushf
ret
lcall
sbb
or
shll
fiadds
adc
inc
xchg
mov
dec
in
mov
leave
adc
insb
aas
cmp
outsb
inc
pop
mov
int
fldt
adc
inc
mov
jo
ljmp
ljmp
pushf
inc
and
xor
xchg
bound
mov
inc
stos
sub
adc
pop
icebp
lret
mov
xor
jg
arpl
mov
push
das
fcmovnu
adc
in
push
push
dec
dec
in
cmpb
pushf
lods
clc
mov
mov
enter
aas
out
inc
pusha
cltd
xlat
mov
xor
sub
mov
nop
decb
call
add
rcr
mov
dec
jmp
push
cs
xor
inc
fiaddl
jno
or
into
and
cmp
nop
out
or
aam
mov
xor
sti
jl
int3
cmpsb
andb
push
or
jmp
inc
loope,pn
stc
cmp
shr
mov
data16
sub
mov
popf
aas
xor
adc
dec
insl
mov
jo
gs
ror
sbb
mov
outsb
test
jo
shlb
addr16
in
movsb
aaa
xchg
arpl
push
push
adc
lock
adc
aaa
lds
mov
xchg
xchg
xor
push
cmp
iret
lods
fwait
push
pop
shl
dec
sbb
or
jo
jp
mov
add
pop
ds
shlb
mov
sub
cmpsl
dec
aaa
fisttpl
imul
pusha
mov
sub
mov
in
mov
mov
mov
jbe
mov
outsl
xor
jmp
xchg
dec
sbb
dec
in
dec
push
inc
pop
out
inc
mov
inc
cmpsb
dec
aas
dec
shll
cltd
xchg
add
jle
ret
push
push
lods
sahf
pop
xor
rclb
add
mov
jo
lock
add
mov
xor
movsb
fstp
repnz
and
jnp
cld
mov
jo
jl
aam
jmp
pop
imul
enter
pop
lods
pop
repnz
push
lods
xlat
inc
mov
or
jae
mov
mov
inc
pop
arpl
push
inc
sub
inc
mov
fisubrl
jmp
push
mov
or
aam
dec
lret
push
jmp
push
cld
repnz
out
jg
outsl
movsl
push
cmp
inc
xchg
jge
inc
mov
jmp
dec
xor
pop
adc
sbb
lds
mov
dec
xchg
int
ret
push
test
out
mov
clc
fwait
or
lods
fsubs
pop
cltd
mov
and
ljmp
sub
or
dec
xor
loopne
arpl
dec
movsb
pop
lods
fstp
aad
test
insb
mov
mov
stos
das
scas
push
cmc
jno
daa
shl
pop
pop
sub
xchg
gs
fsubrs
cmp
push
loop
adc
push
out
add
mov
in
cltd
mov
fs
mov
sub
push
cmp
push
lock
xlat
lods
iret
out
jbe
mov
cmp
cmpb
inc
jp
mov
push
test
sub
in
imul
xor
dec
adc
mov
rep
or
or
sub
adc
scas
filds
inc
sbb
jae
lret
fisubs
testl
or
fucom
add
lret
or
das
jnp
xchg
or
inc
add
add
sub
mov
inc
fdivl
mov
push
bound
ds
repnz
mov
loopne
add
sub
push
lds
lret
mov
push
xchg
in
jbe
inc
push
xor
into
int3
mov
push
in
xchg
sbb
out
test
xor
imul
pop
ficoml
frstor
out
lret
imul
pop
sahf
outsl
jne
pop
shl
dec
js
add
mov
push
std
dec
pop
or
xchg
jmp
mov
or
jns
cmc
adc
xor
xchg
jb,pt
mov
das
xor
mov
push
push
std
inc
or
mov
das
ret
adc
fcoml
in
xchg
orb
sbb
test
mov
imul
adc
mov
jp
cli
cs
leave
dec
paddusw
scas
push
mov
loopne
test
dec
lock
pop
or
lcall
and
lret
and
sarb
out
add
inc
fisttpl
mov
xlat
out
dec
or
movsl
pushf
fbld
push
pop
jge
pushf
cmp
jle
and
add
mov
sbb
jg
rcrb
ss
jp
jl
rcrl
out
test
jae
add
out
sbb
add
daa
das
stc
loope
test
inc
loopne
mov
lcall
jg
std
mov
aad
adc
adc
test
iret
ret
into
xchg
xor
sub
mov
push
je
and
push
add
shlb
orb
mov
xchg
inc
xchg
jnp
gs
in
push
ret
mov
adcl
dec
repnz
mov
pop
dec
scas
push
pop
dec
add
push
dec
or
stos
xchg
dec
enter
roll
and
mov
jecxz
lock
push
aaa
idivb
mov
fwait
sahf
pop
and
jg
pop
xlat
cmp
sub
sbb
mov
insb
xor
pusha
repnz
push
push
popa
mov
or
test
mov
movsb
test
push
jae
mov
add
adc
sub
icebp
int
push
out
fdivrs
inc
add
cmp
test
fdivrl
mov
sbb
cmp
adc
stos
outsb
fsubrl
mov
and
rolb
sbb
arpl
shll
sub
jno
pop
stos
daa
ret
inc
test
fimuls
lods
and
jmp
jno
rcrb
fcmovnb
dec
lea
pop
or
or
sub
adc
lahf
insl
mov
clc
out
cmp
and
imul
push
inc
pop
outsl
jg
jecxz
xchg
and
pop
push
lock
mov
hlt
push
or
cltd
mov
adc
ret
into
out
xchg
mov
and
xchg
out
cmp
push
jmp
xor
jnp
jge
pop
jl
xchg
inc
fcmovb
pop
adc
mov
cmpsl
lret
adc
nop
inc
xor
rcll
push
mov
rorb
lret
fcmovu
and
cs
cmpsb
loopne
loopne
mov
sub
mov
cmp
cmpb
out
aaa
lods
xor
pop
pop
es
lret
sbb
cmpsl
cmpsl
outsb
jnp
stc
sub
xor
push
imul
les
fucomp
lea
mov
push
mov
mov
jo
js
imul
mov
sti
insb
mov
pushf
push
jnp
pop
aad
mov
fisubrl
ret
insb
xor
push
lahf
inc
stos
hlt
cmp
xchg
leave
inc
std
int3
mov
push
jno
jo
xor
or
jle
inc
popa
adc
inc
or
pop
sbb
ja
or
push
jmp
push
push
mov
inc
xor
aas
jno
fisttps
cmc
iret
jge
daa
cmpl
mov
loop
out
sub
pusha
notb
sub
addr16
fidivs
es
cmpsb
adc
imul
sahf
xchg
daa
sbb
cmpsb
add
loopne
mov
jb
ffree
lret
mov
add
movsb
jecxz
in
mov
inc
sub
sub
cmp
imul
jns
mov
outsl
cmpsb
jge
imul
sbb
push
push
pop
lahf
out
rcrl
out
shll
shlb
cmp
test
ds
cld
and
mov
mov
inc
aaa
iret
mov
sti
sub
push
push
imul
insl
mov
adc
xor
nop
not
sub
out
xor
js
aaa
mov
cmp
ret
jbe
jb
mov
rorl
pusha
mov
js
add
dec
mov
mov
rcrb
and
ja
ret
hlt
shlb
in
push
clc
jnp
push
adc
jmp
xchg
pop
imul
lods
iret
in
rcrl
iret
sarl
pop
jae
loop
pop
push
push
rcll
in
jne
inc
loop
sub
bound
mov
adc
mov
xchg
jno
lock
and
fwait
xor
cmc
movsb
sub
fmul
mov
inc
mov
adc
mov
int3
jle
push
pushf
test
mov
inc
mov
repnz
mov
adc
adcb
test
out
mov
sbb
and
cmp
sbb
and
mov
or
sbb
cmc
fstpl
and
adc
pop
test
std
popa
xchg
out
subl
loop
cmp
fbstp
sahf
aad
pushf
stc
mov
and
or
mov
adcl
dec
mov
push
daa
or
inc
mov
mov
push
xchg
stos
pop
xchg
bound
push
mov
mov
push
pop
out
xlat
inc
subl
cmp
incb
push
jbe
push
jl
mov
mov
pop
push
and
je
js
pop
xorl
or
xchg
ljmp
mov
sbb
sti
aam
sub
mov
sbb
jg
negl
data16
sub
sub
cli
addr16
setnp
cmp
lds
pop
sub
adc
sbb
loopne
fs
mov
inc
inc
daa
int
sub
mov
mov
and
cmp
cld
xor
popa
and
call
push
and
test
cmp
mov
mov
popa
pop
mov
or
testb
outsl
stc
loope
or
aam
into
cmp
imul
fmuls
push
jbe
adc
arpl
jmp
outsl
and
scas
push
jle
call
sub
jg
push
outsl
pop
mov
sub
sarb
subb
mov
sub
mov
packssdw
pop
clc
inc
cld
movsl
sbb
adc
outsb
sbb
inc
int
shl
sub
xchg
fldenv
jg
aad
push
jl
test
arpl
js
leave
sbb
pop
outsb
cmpsl
mov
roll
clc
mov
pusha
xor
pop
lock
or
ret
sbb
lods
test
mov
jns
imul
mov
inc
mov
adc
xor
fiadds
jns
inc
loope
mov
popf
popa
test
mull
or
fsub
rclb
scas
mov
lret
les
aas
or
mov
and
lret
and
mov
movsb
adc
pop
js
cmp
sti
out
or
mov
and
push
push
ffree
mov
push
dec
xchg
test
lahf
add
mov
mov
call
les
push
cmc
jecxz
loope
jbe
sbb
mov
push
scas
push
movsl
mov
pusha
pop
dec
xchg
jmp
mov
add
mov
sub
lds
lods
es
test
xor
and
sub
out
shll
insl
rep
push
int
xchg
in
xor
out
movsb
arpl
mov
daa
xor
in
mov
xor
ficomps
jbe
pop
cld
dec
cmpsl
ret
add
ret
adc
in
ljmp
mov
out
sbb
insb
cmpsl
and
xchg
test
dec
inc
and
sbb
pop
nop
inc
cmpsl
mov
fnstcw
xor
mov
mov
popf
negl
int
jle
inc
mov
mov
dec
aaa
jle
lods
mov
pop
cmp
sbb
outsl
fwait
arpl
mov
mov
and
cwtl
add
insb
jns
pop
loop
into
inc
cmp
inc
cmpsb
je
xchg
jle
mov
push
in
adc
and
hlt
jae
inc
cli
sahf
adc
loopne
or
lea
inc
les
fildll
jae
or
bound
movsb
iret
into
insb
mov
push
popf
rcr
mov
xchg
mov
stos
sti
or
testl
fsubr
jg
xchg
sub
cmp
inc
outsb
inc
push
xor
dec
arpl
push
jno
fistpl
xorl
icebp
in
mov
imul
outsb
cwtl
mov
jo
inc
push
jecxz
or
or
loopne
mov
cmp
sahf
pop
in
pop
jo
mov
cmpsb
mov
int
pop
in
fimull
xchg
mov
cmpsb
mov
jb
inc
jle
xchg
xchg
sbb
int
and
xchg
int3
or
pmulhuw
ret
outsb
add
xchg
xor
gs
inc
out
xchg
and
xor
push
push
pop
testb
scas
dec
sbb
test
ror
push
arpl
cwtl
idivl
dec
xlat
mov
incb
icebp
loop
cld
ljmp
in
mov
mov
adc
ss
shll
stc
aaa
cmp
and
sbb
lods
movsl
xchg
lock
cmp
shlb
xor
push
dec
mov
pop
lret
outsb
fwait
xchg
loope
pop
adc
les
push
mov
push
movsl
test
mov
stos
leave
test
push
and
subl
sbb
pop
pop
sbb
mov
mov
aam
push
dec
les
pop
cmp
mov
fdivrs
je
cmpsl
test
mov
ds
add
repnz
faddl
int3
xchg
out
mov
daa
sub
lea
and
pushf
cmp
popf
sub
call
mov
inc
ss
or
sub
dec
jmp
dec
lret
sub
mov
cltd
ror
negb
adcb
sub
inc
sub
scas
stos
cmp
and
daa
in
movsl
aad
cwtl
jge
imul
mov
push
mov
cmp
fwait
stc
mov
push
and
cltd
out
adc
mov
adc
xor
pop
pop
je
or
fildl
xor
mov
mov
outsl
push
mov
push
mov
sub
cmp
push
inc
roll
stos
out
sahf
pop
fbstp
loope
test
ret
scas
scas
pop
enter
cmp
mov
test
inc
je
pop
in
lods
int
aad
inc
jp
in
int
stos
shl
xlat
or
xchg
sub
push
cmpb
rorb
pop
loop
sub
imul
pop
call
pop
in
cmpsb
fsubrl
mov
icebp
pop
push
aaa
imul
mov
ja
mov
jb
jmp
or
ret
pop
pop
shlb
inc
lock
into
pushf
sbb
pop
inc
mov
mov
and
pop
add
sahf
in
push
inc
pushf
jmp
test
aas
int
out
mov
xor
sbb
mov
adc
add
or
dec
xor
or
dec
adc
fmuls
pop
scas
dec
mov
sub
adc
xlat
pop
or
jle
and
cmp
mov
dec
scas
push
arpl
out
xchg
lahf
dec
pushf
inc
aam
loope
sbb
mov
sub
inc
cli
xor
nop
mov
jl
pop
or
dec
int
add
shl
add
xchg
jmp
jge
push
adc
push
mov
orl
pusha
fstpt
cmp
push
adc
dec
jns
jle
arpl
sbb
and
pop
insb
popl
ror
lock
sbb
or
aad
push
jne
lods
imul
test
dec
rcl
pop
or
xacquire
inc
inc
es
jmp
mov
fbstp
dec
dec
loop
mov
and
pop
pop
enter
add
jl
sbb
dec
push
dec
out
mov
adc
lock
xor
das
dec
test
inc
jno
mov
out
dec
pushf
cmpsl
cmpsl
int3
cmc
push
cmpsb
push
fisttpl
insb
pop
jbe
les
xlat
or
in
or
push
movsb
sub
mov
mov
adc
leave
fs
lock
out
inc
out
out
fistpl
sti
xor
stos
adc
mov
xor
adc
lret
push
xchg
dec
les
push
test
stos
sbb
jge
mov
adc
mov
rcrl
xchg
adc
lea
cs
imul
inc
loopne
mov
pop
orl
flds
in
test
pop
lock
jp
les
cld
dec
add
mov
ret
xchg
cltd
loopne
push
out
bound
xor
cmc
xchg
cltd
mov
mov
pop
sbb
xor
and
xchg
mov
xor
sub
jno
jg
sti
dec
popf
cmc
jp
jnp
aad
in
and
cmp
cmp
leave
imul
push
cwtl
mov
outsl
dec
xor
mov
out
jmp
ljmp
int
jns
push
outsb
mov
ss
xchg
popf
xchg
scas
es
or
aaa
cmpl
in
shrb
push
push
movsl
jge
ss
shrl
jo
addr16
aam
stos
loopne
aaa
lds
stos
xor
and
push
dec
lds
inc
shll
and
push
and
je
inc
in
lds
xlat
xor
inc
mov
xor
push
fistps
fistps
sbb
mov
jmp
cmp
sbb
mov
or
cwtl
stc
pop
sub
push
xor
and
mov
outsb
dec
lahf
insl
or
iret
notb
push
in
jb
cmp
mov
jecxz
lds
jbe
dec
das
mov
cmp
imul
and
push
xchg
jl
xchg
cmc
sbb
mov
mov
cmp
push
mov
test
sub
inc
stc
dec
push
ljmp
mov
or
dec
test
int3
dec
jmp
jg
cmp
repz
adc
or
mov
scas
orl
or
fists
push
mov
out
xor
sub
dec
pop
test
xchg
mov
add
push
orb
imul
lret
mov
popa
call
sbb
pop
mov
jg
cltd
push
jae
lahf
ret
or
mov
xor
xchg
cwtl
sub
add
fidivs
dec
xchg
lods
adc
loope
pushf
enter
pop
outsb
xchg
mov
ja
sbb
movsb
dec
cmpsl
rol
add
xchg
mov
mull
push
sbb
jne
pop
in
cmp
dec
iret
xchg
sbb
insb
mov
jmp
dec
push
fidivrs
mov
xchg
adc
pop
xchg
hlt
mov
pop
outsl
jns
push
lcall
lahf
roll
out
sub
dec
gs
in
sbb
in
jne
das
jo
pop
add
js
gs
inc
adc
out
xor
push
hlt
sarb
movsb
jne
adc
jmp
jbe
cli
rorb
jne
or
fsts
test
inc
sahf
xchg
cmp
imul
mov
mov
repnz
fidivl
push
cmp
mov
dec
repz
adc
jno
lds
sbb
push
lret
mov
cmp
mov
mov
cmc
leave
and
xor
popa
mov
xorb
cld
and
xchg
sub
lock
push
loop
fcmovb
sbbl
shrb
add
lea
popf
pop
mov
xlat
mov
inc
std
out
add
stos
sbb
pop
push
andl
xchg
adc
lret
hlt
and
data16
sbb
add
lcall
orl
outsb
bound
mov
aas
leave
or
cmp
or
sub
mov
cmpsb
or
imul
orb
dec
pop
cmpsl
add
addb
inc
push
imul
fimuls
mov
pop
mov
push
fdivl
or
push
push
inc
and
mov
add
xchg
hlt
daa
shl
jae
hlt
pop
sbbb
popa
pop
sub
and
inc
fstpl
xchg
in
ficomps
movsl
ss
inc
daa
and
push
sbb
clc
push
add
cmp
or
inc
inc
and
ret
arpl
push
jnp
outsb
sub
push
in
stos
popf
adc
mov
or
mov
cmp
mov
xor
mov
inc
loop
mov
jb
sub
jecxz
add
jecxz
jmp
sbb
aaa
and
rcrb
fistps
cmpsl
mov
lock
fdivl
lahf
insl
dec
lea
dec
cmp
pop
sub
xchg
adc
jmp
mov
pop
je
cmpsl
xchg
push
cmpsb
xchg
fists
imul
outsb
stos
cmpsl
movsl
xor
cmp
jecxz
xor
xor
sub
mov
mov
popl
es
sub
fists
js
in
mov
into
ret
out
lock
repnz
cmp
dec
movsl
pop
jns
pop
js
mov
icebp
add
mov
and
push
in
sbb
sub
add
jp
dec
stc
jb
pop
sbb
mov
pop
cmp
cmpsb
clc
clc
fisubl
and
sbb
popf
inc
test
adc
and
int3
mov
les
cld
popf
xor
lock
scas
push
dec
mov
adc
pop
and
out
pop
outsl
inc
repz
in
lcall
mov
lahf
std
dec
mov
fwait
mov
mov
mov
pop
sub
mov
or
setns
xchg
es
xchg
jbe
fcomps
pushl
push
mov
test
loop
dec
test
or
stc
pop
push
and
lock
daa
adc
lock
sbb
jl
imul
or
aaa
xor
repz
mov
jmp
push
outsb
pop
cmp
orl
dec
outsb
pop
mov
or
adc
add
fimuls
mov
push
pusha
add
xor
pop
jge
push
jg
mov
pop
sbbl
dec
shll
jmp
sbb
ja
push
inc
push
inc
in
pop
mov
test
cli
jnp
jp
or
daa
ljmp
flds
repnz
xorl
sbb
mov
xchg
add
fidivrl
jo
add
cwtl
std
mov
adc
pop
dec
les
push
adc
lock
in
adc
outsb
hlt
adc
pop
sbb
jmp
and
adc
or
inc
add
outsl
ret
xchg
lods
adc
and
jecxz
or
pop
adc
ljmp
out
int3
mov
sub
out
mov
sub
add
mov
cmc
add
iret
cmp
fs
adc
outsl
fwait
mov
aad
push
add
loop
lcall
and
and
xchg
cmc
divb
xchg
sti
mov
negl
push
xor
data16
cmp
cmpsl
push
push
es
sub
push
jbe
sbb
jnp
push
xchg
mov
add
insl
or
ja
in
mov
xlat
mov
pop
and
add
sub
and
enter
sbb
or
sbb
fcompl
mov
popf
fs
andb
jp
ljmp
push
lock
push
sbb
xchg
lret
shll
jl
shl
dec
pop
shll
and
mov
lret
mov
cwtl
fabs
ljmp
mov
dec
pushf
out
pop
inc
push
jmp
mov
sub
mov
pop
pop
pop
in
xchg
pop
xor
lock
outsb
mov
lock
fwait
jno
inc
mull
mov
out
mov
call
cmovbe
fstl
rcll
js
cmp
mov
mov
jecxz
loop,pn
xorl
sub
push
enter
sti
scas
or
scas
in
push
adc
push
mov
testb
loope
cmp
call
dec
mov
sbb
or
dec
and
xchg
stos
out
sarl
xor
jnp
shlb
pop
mov
iret
and
leave
mov
stos
xchg
pop
xor
xchg
jp
imul
xchg
jl
mov
mov
jne
ss
fs
imul
xchg
inc
popf
inc
sbb
xorb
lahf
leave
or
repnz
pop
test
loopne
out
cmp
into
sub
push
inc
sub
mov
out
lods
pop
jnp
aaa
adc
cli
iret
add
lods
jo
jne
mov
jp
movsl
lret
pop
sub
jge
cld
xorl
xchg
scas
add
out
adc
pop
mov
rcrl
xor
push
cmc
fwait
push
xchg
jge
cmp
inc
test
inc
xchg
mov
inc
icebp
cwtl
cmpsb
lcall
adc
pop
mov
xchg
jge
rcrb
cmp
sub
inc
stos
daa
add
xchg
jne
or
xchg
andb
outsb
xor
icebp
inc
adc
call
inc
std
loop
jge
stos
dec
push
jp
lock
mov
inc
fwait
negb
arpl
shlb
scas
insb
aaa
sub
aam
aad
push
lret
cmp
push
icebp
jecxz
mov
movl
inc
push
sbb
pop
dec
cmc
cmp
cmp
add
inc
icebp
and
sbb
dec
sub
or
pushf
inc
jp
das
stos
inc
nop
mov
sub
arpl
add
mov
mov
mov
sub
pop
cld
sbb
leave
aad
xor
scas
std
adc
adc
dec
push
in
mov
add
lcall
mov
mulb
jns
cltd
loope
fildl
push
jo
inc
scas
stos
std
mov
nop
xor
fsubrs
xor
ficomps
outsl
xchg
adc
ja
mov
cmp
lea
fisttpl
mov
loope
sbb
aaa
push
pop
pop
push
sar
gs
pop
jl
push
test
xor
loopne
int3
rcrb
dec
cmp
mov
repnz
test
es
fs
in
sbb
mov
and
into
adc
mov
or
jb
xlat
cmp
adc
rolb
push
sub
ss
es
push
pop
lcall
ja
in
or
dec
jns
int
fisubs
and
xor
mov
and
inc
int
sub
popa
add
xchg
nop
xlat
adcb
jp
and
into
pop
cmc
call
inc
out
gs
out
cwtl
aas
in
xchg
jbe
xor
mov
icebp
fimull
mov
das
enter
out
inc
dec
inc
jns
or
or
pop
cs
es
xor
icebp
xchg
shlb
sbb
fstl
stos
pop
pop
xorl
mov
arpl
fisttpll
leave
push
mov
ss
xchg
mov
and
cmp
cli
ljmp
dec
movsl
sbb
xchg
pop
xchg
ja
aam
and
and
mov
test
out
mov
sbb
test
sbb
rcrl
and
sub
dec
int3
daa
sub
push
ret
adc
and
out
outsb
ds
cmpsb
mov
dec
imul
push
rep
adc
jle
daa
and
dec
fs
divb
sbb
js
and
or
cli
mov
and
mov
mov
daa
cmp
add
mov
movsl
clc
jmp
mov
pop
pusha
add
cltd
push
je
cmp
fsubr
imul
sahf
imul
lret
pop
cwtl
cmpsb
enter
xor
push
xor
insb
popf
sub
test
clc
sbb
lods
movsb
xchg
pop
push
mov
mov
pop
imul
out
addr16
adc
sbb
mov
daa
mov
cmp
pusha
mov
mov
or
jne
sahf
aas
add
mov
cld
popa
xchg
lret
in
sbb
notb
inc
sub
div
adc
cmp
inc
push
sub
lret
push
clc
icebp
lock
push
movsb
in
jecxz
int3
add
jns
in
popf
test
movsb
jg
dec
pop
pop
das
in
out
fs
cli
roll
icebp
fistps
push
xlat
lods
inc
in
jnp
in
dec
push
insb
popf
out
leave
je
jl
outsb
cwtl
rorb
out
and
sub
ljmp
mov
inc
and
out
cli
int3
jbe
dec
fwait
add
bnd
aad
pop
cmpsb
and
mov
or
pop
stos
mov
add
add
add
push
push
outsb
or
stos
cmpsl
xchg
xchg
add
ja
iret
pop
lret
es
out
jae
andl
mov
add
out
dec
mov
loop
ja
mul
das
sbb
dec
ficoms
or
out
xor
jns
stos
lea
xchg
mov
negl
cmp
insb
or
test
dec
xchg
cmpb
cmp
inc
mov
jg
je
or
iret
mov
sub
mov
push
ljmp
pop
sub
mov
push
dec
cld
movb
lock
xchg
pusha
jo
lret
rcrl
lock
sub
andl
lds
out
int3
adc
mov
inc
adc
mov
aad
and
and
xor
lods
xchg
lods
dec
xor
add
dec
dec
cmp
shl
rcr
xor
aaa
jge
repz
loop
pop
lds
pop
jl
rolb
jp
and
ljmp
adc
mov
sub
out
lock
xchg
daa
in
push
mov
mov
pop
lahf
push
call
das
icebp
xor
mov
subl
cmpsl
mov
push
and
adc
bound
data16
sbb
repz
ds
mov
cmp
shr
mov
rolb
int
scas
mov
lods
stc
jecxz
mov
mov
call
sbb
lods
cmp
arpl
jno
sbb
add
push
add
mov
push
xchg
pop
sbb
fs
mov
rclb
xor
addr16
xchg
cmp
cmp
or
jecxz
int3
testl
push
addl
push
insb
test
mov
adc
jmp
cmpsl
jge
mov
shl
test
in
mov
ret
dec
dec
or
pop
pop
jne
push
mov
lods
aas
lret
pop
inc
add
sarl
lods
into
pop
test
aas
bound
mov
clc
pop
ds
dec
mov
or
pop
mov
mov
jp
push
add
jg
and
inc
sub
dec
repz
mov
test
je
push
mov
mov
and
and
loop
dec
nop
rcrl
imul
mov
mov
popf
sbb
nop
pop
sarl
mov
fisttpll
push
mov
inc
xchg
dec
lds
sti
nop
cld
lods
lods
adc
jmp
xchg
les
push
xchg
sbb
push
jae
push
mov
sbb
sub
push
fisubrs
adc
js
jno
insl
mov
mov
imul
xchg
repz
daa
cmpsl
inc
mov
lds
xchg
pop
rclb
cmp
inc
sbb
inc
addr16
xor
popa
push
jg
lcall
aad
sti
in
int
mov
add
or
pop
movsb
mov
mov
adc
inc
fimull
mov
jl
jb
insl
or
sahf
and
fwait
rcrb
fwait
xor
sub
stos
inc
es
xchg
sbb
push
adcl
add
xchg
mov
fmull
fstps
pop
inc
jne
pop
test
outsb
and
push
cwtl
push
aas
test
jl,pn
mov
insl
push
push
mov
data16
jne
cmp
or
add
xchg
icebp
inc
bound
pop
push
dec
mov
lock
faddl
adc
outsb
stc
stos
shlb
pop
je
cmp
dec
cmp
jp
or
sbb
ds
imul
adc
lcall
add
sti
xor
lea
shl
aaa
bound
sub
stc
imul
mov
mov
mov
push
ret
xacquire
mov
xor
jl
loop
mov
jbe
iret
pop
nop
xchg
mov
mov
dec
add
mov
mov
pop
cmp
leave
xor
pop
ret
xchg
pop
mov
dec
out
out
xor
cmp
and
int
xchg
int3
pop
cmpsl
in
mov
imul
or
jp
pop
scas
jp
shrl
fadd
test
mov
fwait
cld
dec
sete
xor
mov
pop
jae
cmpsl
cmp
jbe
out
inc
in
rcll
xlat
divb
mov
fsubp
cmp
push
adc
mov
add
fidivrl
and
mov
sub
adc
pop
jecxz
inc
test
adc
push
cmp
fistl
jecxz
or
xor
push
or
adc
in
dec
xlat
sbbb
cmp
in
pushf
insb
sub
mov
ds
xchg
xor
jecxz
data16
movsb
cmpsl
test
mov
dec
sub
jmp
jns
inc
push
jecxz
cli
add
bound
cmp
lcall
pop
jb
xchg
fucomip
or
xchg
mov
adc
fcomps
inc
icebp
stc
cld
gs
xor
lds
out
lock
sbb
aad
push
rcl
scas
adc
xchg
jns
xchg
test
pop
push
iret
jbe
cmc
ficomps
pushf
call
xchg
mov
rclb
push
scas
in
xor
dec
and
popf
push
inc
mov
inc
es
xor
arpl
mov
jbe
popa
xchg
push
in
cli
aad
sbb
dec
addr16
cmp
lret
pop
sbb
and
xor
outsb
fwait
mov
pop
cmp
sahf
push
jg
mov
xor
inc
rolb
leave
and
repz
scas
pusha
push
cmpsl
and
data16
mov
sbb
shlb
push
or
push
sbb
lods
out
test
inc
gs
lret
sub
pop
xchg
lea
jnp
sbb
ja
push
mov
addr16
mov
call
push
iret
mov
mov
addl
in
insb
push
mov
call
js
scas
jno
imulb
shrl
mov
ljmp
mov
insl
sbb
icebp
adc
addb
mov
dec
hlt
daa
mov
inc
xlat
andl
push
xchg
dec
lds
xchg
imul
call
test
adc
clc
pop
lret
xchg
push
pop
cmp
es
inc
xchg
negl
rorl
jp
idivb
mov
test
pop
iret
clc
dec
aaa
stos
push
add
add
dec
adc
xchg
pushf
push
loope
lods
xor
dec
sbb
lea
xor
add
bound
sub
call
fadd
testb
aam
repnz
test
arpl
ds
and
cwtl
or
push
lock
pop
rcrl
dec
dec
imul
inc
mov
push
adc
adc
xor
aam
sbb
sub
push
aaa
scas
subl
dec
adc
call
stos
or
gs
lret
cwtl
jl
fs
fcoml
insb
fs
imul
out
sbb
scas
adc
inc
movsb
jbe
pop
rcr
addb
xor
lds
push
mov
mov
ss
fbstp
pusha
lret
ds
mov
and
lcallw
dec
cmc
lret
jns
push
mov
outsb
cmpsb
dec
push
js
sub
shll
negl
icebp
das
mov
in
dec
inc
cmp
dec
out
outsl
aaa
adc
lea
pop
jbe
jg
add
sub
stos
sbb
cltd
mov
adc
ljmp
stos
jbe
out
inc
loope
jp
hlt
fldl
jmp
in
ret
pop
fbstp
test
xor
ret
sti
ret
xchg
pusha
cmp
nop
test
jmp
das
sti
sub
mov
pop
sbb
push
push
lret
nop
les
push
mov
popf
cmp
dec
outsl
sub
jge
dec
cli
and
mov
pop
and
mov
scas
mov
dec
imul
dec
loope
aas
xor
in
adc
out
mov
sub
mov
sbb
subb
or
ret
test
cs
sbb
mov
jne
fcompl
cmpsl
rclb
in
lcall
sti
andb
not
fmulp
fdivrl
jl
out
in
or
out
sub
inc
iret
shlb
jmp
inc
and
in
addr16
mov
mov
xchg
mov
pop
std
aaa
inc
clc
sbb
adc
loope
fdivp
mov
clts
jecxz
loopne
cmp
pop
pop
movsb
testl
ds
in
and
addr16
or
ds
push
gs
out
push
rcr
daa
in
mov
dec
dec
or
push
clc
gs
pop
fs
xchg
pushf
fildll
jb
out
mov
xor
das
fnsave
and
xorl
cmp
mov
sbb
fldpi
pshufw
cmpsl
sub
inc
data16
dec
daa
mov
mov
mov
xor
int
mov
imul
cmpsb
sub
hlt
int3
mov
or
sbb
mov
adc
jecxz
mov
test
fisubrl
ret
inc
ret
adc
lock
xor
or
push
sbb
fwait
inc
xchg
xchg
lds
and
mov
test
stos
add
cmp
sub
adc
aam
and
lcall
mov
mov
movsl
test
push
insb
dec
pop
mulb
loop
repnz
push
jmp
imul
pop
into
mov
xchg
cmpsb
sbb
mov
mov
pop
inc
mov
movsl
dec
test
cmp
mov
xchg
jp
cmc
cmp
jge
imul
aad
scas
pop
dec
dec
imul
pop
idivl
std
sub
lods
jmp
faddl
add
les
mov
mov
arpl
jbe
mov
aaa
repz
mov
sbb
sub
mov
cmp
lcall
cmp
adc
xor
out
dec
adc
xchg
cmp
add
push
insb
cmp
fisubs
sub
mov
scas
pop
sub
mov
test
pop
mov
rclb
pop
inc
adc
test
push
add
stc
inc
mov
cs
dec
cltd
cmp
xor
lahf
xor
ds
jmp
jmp
add
repnz
sbb
xchg
push
arpl
mov
or
sbb
push
mov
mov
sub
in
daa
test
dec
adc
jge
loope
jae
sti
insl
les
js
mov
push
arpl
shll
fdecstp
pop
out
negl
call
aaa
xchg
sub
xor
iret
sbb
jg
mov
adc
fldenv
mov
adcb
shll
out
in
fldcw
mov
xor
std
xchg
pusha
cmc
mov
scas
scas
daa
pop
hlt
add
push
inc
hlt
sti
repz
scas
xorl
sub
lcall
popf
clc
sti
imul
addl
lock
lcall
jns
mov
pusha
xchg
sub
mov
or
inc
inc
je
popf
jl
arpl
pop
dec
insb
push
mov
lds
or
jo
cmp
mov
mov
pop
or
jecxz
mov
icebp
cmc
cmpsl
push
repnz
ret
lcall
fucomi
std
add
jno
test
mov
lds
inc
jno
xor
ret
pop
fildll
jbe
pop
jecxz
ret
xor
cmpsl
pop
pop
std
rolb
call
jnp
inc
sbb
ljmp
or
cmp
pop
add
mov
js
xchg
fsubrp
xor
add
push
sub
repz
inc
loop
cmpsb
lods
or
push
fsubrs
test
cltd
inc
pushf
sub
fstl
adc
loopne
sub
inc
xchg
xchg
cmp
clc
int
jge
sbb
ror
cmp
leave
cmpsb
add
xchg
pop
xor
xlat
ret
in
mov
xor
mov
jle
and
cmp
fisubrl
mov
or
push
insb
les
lahf
mov
jo
cmp
mov
loopne
test
jmp
dec
loopne,pn
inc
pop
mov
mov
out
movsb
clc
push
into
stc
inc
out
cmp
sub
inc
mov
pop
add
push
cmp
xor
lret
arpl
scas
xchg
xor
cmp
lods
push
or
insb
insl
nop
jecxz
dec
adc
sub
pusha
push
jmp
xchg
or
mov
mov
and
mov
cmpl
cmp
insl
sbb
mov
testl
popf
cmp
sti
je
stos
or
fldl
bound
and
cmp
xor
xor
cmp
sbb
imul
jg
ret
popf
fisubs
sub
push
xor
mov
mov
or
add
inc
test
sarb
iret
daa
dec
pop
push
xor
int
das
push
cli
xchg
fs
stc
dec
popa
imul
pusha
pop
pop
popl
push
mov
add
mov
in
js
std
insl
popa
pop
icebp
in
test
adc
pop
sub
jns
xchg
mov
pop
sub
mov
dec
in
xor
push
sub
push
lea
fwait
jbe
sub
in
and
ds
jmp
jae
iret
push
loopne
stc
xor
clc
add
dec
push
and
test
mov
xchg
subl
xchg
add
push
add
mov
cmp
ret
lods
pop
cmpsl
inc
sub
maskmovq
testl
sbb
sahf
dec
dec
in
std
inc
mulb
xchg
fidivrs
inc
xchg
xor
mov
shl
push
push
xor
sub
out
rolb
out
push
dec
aaa
dec
loop
pop
adc
add
mov
sbb
inc
add
and
loope
push
pop
add
out
or
push
add
pop
in
push
xlat
adc
pushf
sbb
pop
int3
in
jecxz
pop
outsl
sub
lods
xor
jg
les
or
fists
pop
or
iret
popa
mov
mov
popf
adc
fidivs
push
xchg
lock
cmp
add
loope
inc
iret
mov
add
mov
enter
jge
ds
cmp
pop
mov
movsb
mov
sub
cmpsb
mov
es
push
in
fs
andl
jne
rcr
std
ret
and
es
shrb
setb
adc
fmull
xchg
sub
pop
cmp
pop
xchg
lret
cmc
mov
aaa
dec
inc
mov
aam
and
std
xchg
xor
in
jle
leave
fldcw
js
mov
jae
inc
lock
push
std
lods
push
adc
cli
leave
and
rcrb
adc
or
dec
ljmp
push
and
lret
push
fwait
mov
loopne
movsl
sub
mov
adc
mov
mov
rol
xor
mov
test
xor
fstps
inc
pop
jge
stos
popf
lret
mov
test
sahf
pop
sbb
adc
dec
sub
lret
pusha
push
dec
pushw
mov
add
mov
loopne
xchg
cwtl
jnp
ret
loope
shrb
in
int3
in
sub
mov
dec
jns
into
int
cld
fisubs
xor
xchg
jp
xlat
cld
shll
aad
mov
enter
cmp
insl
pop
jl
sbb
pop
dec
mov
sbb
es
in
adc
imul
idiv
mov
jle
idivl
mov
cmp
pop
pop
repz
shrl
rcll
lcall
xchg
pop
je
fdivr
jae
test
pushf
fidivrs
mov
std
sub
pusha
inc
add
sbb
xchg
addr16
shl
xchg
test
jns
mov
pop
or
xchg
pusha
divb
popa
lods
pushf
adc
mov
sbb
out
mov
subl
stos
cs
in
sub
test
cmpsl
adc
adc
mov
or
add
pop
mov
mov
loopne
sahf
mov
jbe
andb
or
inc
mov
lods
and
call
inc
add
adc
and
sbb
dec
mov
inc
adc
fisubrl
enter
and
mov
cmp
dec
sub
das
sbb
inc
jbe
jmp
push
mov
test
pop
jl
clc
daa
cwtl
cmpsl
push
inc
pushf
gs
adc
sub
jno
popf
cmp
cmp
lods
enter
sub
dec
xchg
adc
dec
arpl
sub
jb
dec
lds
mov
add
pop
dec
insl
imul
rorl
sub
jns
mov
push
cmp
test
sub
sbb
imul
dec
into
push
jge
movsb
pop
pop
adc
dec
adc
jle
js
jle
add
xchg
aad
cmp
xor
dec
pop
cwtl
rcll
mov
mov
adc
add
push
mov
mov
add
cld
jo
pop
jecxz
outsb
fisttpll
outsl
lods
iret
dec
dec
std
addr16
scas
movsl
int
jecxz
fwait
add
add
movb
mov
sti
xlat
sbb
inc
cli
inc
js
jns
and
jg
jne
mov
loopne
mov
js
pop
lods
mov
mov
loope
cltd
mov
xor
arpl
sub
sbb
mov
outsl
shrl
shll
cs
cmovs
ret
mov
ss
fcomp
push
daa
leave
shll
mov
cmpsl
insl
cmp
cmp
mov
inc
dec
aam
xchg
xchg
jae
cmp
dec
in
popa
push
insl
jo
mov
sub
push
stos
mov
inc
pop
lds
scas
jge
mov
dec
out
daa
cmpsb
in
jo
pop
add
repz
xchg
stos
pop
repnz
sub
aaa
out
or
or
fbstp
test
pop
xor
push
out
mov
mov
pop
mov
or
xor
inc
xor
adcl
pushl
loopne
xchg
and
mov
xor
sbb
dec
cmpsl
xchg
ret
mov
movsl
push
sbb
call
jb
lods
mov
xor
cwtl
inc
and
push
jbe
out
mov
add
rol
nop
push
mov
jg
xor
scas
pop
loop
sub
xchg
ret
mov
pop
xor
cltd
pushf
xchg
jmp
int
scas
arpl
sbb
cmp
pop
into
or
xchg
sarl
cltd
add
cltd
lods
test
fsubrl
jno
int
lds
push
pop
dec
popa
xchg
shll
push
dec
pusha
push
jmp
jp
or
outsl
sub
imul
mov
mov
fnstcw
ljmp
pop
and
hlt
aas
test
jge
xor
aas
mov
ficoms
ds
xchg
into
addr16
xor
and
or
out
mov
std
mov
mov
xchg
mov
test
mov
xchg
out
xchg
and
and
jg
loop
iret
push
xor
mov
cld
enter
sub
inc
in
push
xchg
popf
in
lods
cmp
outsb
sar
jg
lods
outsl
out
mov
js
push
pop
lods
sub
insl
add
cmp
and
sbb
enter
adc
fsubl
out
xor
dec
dec
ljmp
or
lret
or
and
imul
cs
inc
push
xor
mov
aas
add
or
push
das
pop
push
fstpt
push
lcall
push
mov
fdivr
push
fs
int
jne
mov
in
ds
repnz
pop
mov
cwtl
aad
les
cmp
fisubrs
mov
add
pop
push
addr16
rorl
pop
sub
les
imulb
ss
mov
and
xlat
push
or
mov
movsl
mov
test
movsl
std
mov
js
xor
mov
mov
fimull
mov
add
shll
mov
add
xchg
ret
xor
aas
lods
xor
jne
sub
push
dec
push
dec
push
lea
lods
pop
dec
mov
daa
adcb
int
cwtl
jg
sbb
inc
mov
stos
inc
cltd
lcall
ja
faddl
pop
or
sar
pop
and
push
jns
gs
sub
cmc
xchg
mov
jbe
icebp
mov
in
cmpsl
cs
sarb
out
xor
xchg
popf
fdivrl
pop
cs
mov
pop
cmpsb
jo
jl
je
jnp
cmp
jb
mov
jle
dec
xor
das
mov
jge
mov
xor
into
mov
and
fwait
out
fcmovnb
or
jo
popf
ret
pop
enter
not
inc
daa
mov
cmp
out
cs
inc
jmp
lds
cmp
mov
dec
mov
jno
mov
xlat
push
ja
popf
shll
sbb
jecxz
inc
pusha
lahf
pusha
cmp
lret
enter
and
push
xor
jbe
xor
mov
and
xor
inc
adc
mov
push
mov
pop
push
mov
sbb
sub
and
test
pop
movsb
arpl
pop
dec
fcompl
mov
dec
clc
mov
push
testb
add
adc
insb
sbb
mov
sub
sbb
add
lret
stc
shll
pop
mov
xchg
add
insb
mov
xchg
mov
mov
popf
loop
lcall
sbb
push
pop
bound
pop
jl
outsb
sbb
iret
jo
mov
fstl
les
jbe
mov
loope
adc
mov
pop
dec
pop
scas
cmp
xor
jg
pop
leave
enter
gs
cld
clc
out
jmp
mov
int3
test
dec
movsb
pop
inc
jmp
inc
aad
pop
fidivl
jbe
xchg
popf
cli
loope
outsb
add
mov
and
adc
addl
outsb
mov
adc
xorl
mov
sbb
cwtl
mov
and
nop
xchg
push
add
jg
add
jnp
aam
add
imul
pop
fmull
idiv
shrl
lea
jnp
shlb
out
repnz
scas
lods
in
lahf
mov
inc
jmp
jo
fwait
aad
sbb
and
cli
inc
mov
xchg
aad
pop
les
fdivr
ret
mov
xor
xchg
xor
sti
das
or
xchg
out
loopne
je
dec
jecxz
les
out
jl
das
push
mov
aam
cwtl
fcoml
loopne
jbe
insb
add
mov
popa
add
xchg
fdivrl
push
dec
ficoml
add
xor
sbb
cwtl
pop
mov
sub
in
fldenv
push
and
sahf
in
loop
push
sub
pushf
lods
inc
and
sbb
mov
xor
imul
jns
pop
out
nop
push
pop
fsubl
arpl
sub
movsb
gs
insl
out
rolb
and
addr16
mov
jmp
aam
mov
add
jbe
push
nop
leave
sub
aam
sbb
mov
and
dec
jbe
jmp
cwtl
push
push
pop
cs
les
sub
push
push
lods
add
jmp
subl
mov
or
jecxz
std
dec
add
movsl
adc
and
jae
fsub
sbb
pop
jl
or
cmpsl
fdivrs
inc
cmp
cmp
int3
rol
inc
cmc
icebp
aam
outsl
mov
push
cmpsl
stos
mov
inc
ret
sti
out
add
idivl
in
xor
clc
div
xorl
and
jns
lahf
jbe
movsl
mov
out
je
rorb
cwtl
sub
lock
loope
test
out
or
cmpsl
pop
aam
test
imul
fisttpl
pushf
xor
lods
mov
pop
cmp
or
sarb
push
mov
xchg
cvttps2pi
cmc
mov
add
add
into
lcall
mov
push
sbb
sbb
push
popl
fildll
je
call
dec
repz
mov
mov
lock
call
adc
add
cltd
add
mov
insl
mov
std
in
mov
daa
insb
adc
sbb
daa
jo
sahf
mov
outsl
rorb
ja
mov
rcll
and
jb
mov
sbb
rcrl
sbb
test
faddp
stos
bound
ds
popf
scas
lock
imul
pusha
push
jge
rol
mov
int3
and
repz
rol
add
bound
cmp
pop
ret
jle
pop
cmp
dec
xor
iret
loope
imul
iret
pop
jae
fistps
inc
sbbb
insb
lahf
push
das
push
adc
xlat
and
out
dec
in
xchg
les
cltd
fwait
xor
aaa
popa
push
xor
push
leave
add
sub
push
mov
cld
cmpsb
cmp
pop
test
xchg
push
int
or
or
push
dec
inc
pushf
dec
cmp
clc
pop
sahf
stc
addl
lahf
mov
dec
repz
xlat
fsts
lds
pop
sbb
test
pop
dec
in
inc
ficoms
movsb
imul
outsl
std
cs
lods
push
nop
adc
or
loopne
mov
and
inc
pop
fisttpll
inc
xchg
test
mov
fistps
xchg
adc
pop
and
jbe
test
addl
in
fisttpll
jecxz
shll
data16
loopne
mov
and
or
add
pushf
rolb
jnp
dec
sbb
lea
mov
aad
fisubrl
xchg
add
pop
adc
or
xor
ja
loopne
cmp
push
out
sub
dec
xchg
and
sbb
or
test
xchg
dec
stos
add
pop
enter
call
push
popa
iret
scas
scas
jecxz
cmp
adc
mov
push
daa
scas
sub
push
dec
xchg
pop
pop
xor
jge
lds
imul
xchg
adc
stos
mov
adc
push
mov
xlat
mov
sbb
sub
lea
sahf
loop
xlat
fiadds
mov
xlat
jmp
std
push
iret
into
pop
sub
xchg
push
inc
dec
out
in
lods
das
xchg
es
mov
sbb
shlb
cli
dec
and
jp
scas
pusha
inc
andb
jle
or
dec
push
xchg
cmp
sbb
ja
int
in
in
and
mov
in
mov
std
je
cmp
sbb
into
cli
cmc
sub
stos
leave
hlt
sbb
cmp
dec
and
jno
xchg
ret
aas
jbe
dec
loop
dec
rorb
stos
nop
js
push
jp
xlat
pop
jge
mov
push
cmc
stos
mov
xchg
out
mov
xchg
pop
add
pop
push
xchg
dec
scas
dec
dec
mov
jo
jns
stos
jge
or
push
and
adc
loop
je
inc
ljmp
arpl
mov
pop
jl
dec
xchg
and
pusha
out
outsl
pop
inc
push
mov
mov
mov
push
clc
or
repz
cwtl
cli
and
mov
sub
push
inc
scas
push
sub
or
repz
jbe
mov
xchg
in
movl
lds
es
pop
iret
bound
jne
lods
xchg
mov
movsb
mov
mov
xor
std
add
sub
sbb
addr16
mov
xor
adc
lret
xchg
push
cld
es
add
in
mov
mov
mov
ficoms
sub
dec
xor
mov
or
jbe
hlt
scas
out
fmuls
mov
ljmp
dec
ret
mov
or
int
xor
in
jecxz
sbb
sahf
ret
inc
addl
mov
mov
jg
daa
xlat
pop
outsb
cwtl
sub
cmp
dec
lret
dec
sub
push
stc
sbb
push
add
adc
dec
subl
xor
js
out
int
fisttpll
cltd
mov
mov
ja
mov
nop
xchg
adc
xor
xorps
ljmp
dec
and
pop
daa
insl
fimuls
mov
jno
mov
cltd
push
mov
mov
movsl
div
aad
xor
repnz
les
faddl
pop
or
mov
fs
xor
outsl
fldenv
sbb
dec
xor
sub
iret
inc
mov
sarl
xor
data16
rolb
sub
pop
ds
daa
or
jo
mov
dec
outsl
dec
and
icebp
ficoml
lcall
test
cld
aad
xchg
add
mov
popl
test
nop
sbb
mov
cmpsb
in
mov
mov
into
pop
insb
mov
sbb
lods
dec
push
inc
clc
dec
js
std
fwait
dec
test
mov
cmpsb
dec
jnp
mov
xorb
das
cmp
lret
pop
cmp
imul
jne
ss
sbb
adc
mov
popf
inc
jmp
lods
lock
insb
mov
cwtl
dec
pushf
or
aad
test
mov
mov
aam
jae
in
icebp
inc
jg
mov
sub
sub
cmp
loope
ret
mov
pop
adc
dec
mov
repz
loopne
daa
jge
inc
jnp
jmp
pop
sbb
or
fwait
hlt
andb
cltd
enter
hlt
or
mov
jle
lea
icebp
pop
jmp
adc
jmp
push
sbb
or
inc
push
xlat
mov
bound
dec
or
fadd
pop
fldcw
insl
imul
cmp
dec
sbb
push
inc
lock
or
inc
pusha
mov
pop
push
adc
mov
aaa
arpl
out
std
bound
sub
hlt
aam
push
jl
inc
jecxz
push
push
add
loop
repz
fistl
imul
sbb
cs
pop
les
aad
fidivl
mov
mov
cmp
xor
push
add
aaa
loopne
lcall
aad
fistpll
xchg
loope
or
into
jp
jns
mov
xchg
lods
dec
mov
sbb
inc
lock
jnp
fisubrs
sarb
test
sub
sub
jge
push
dec
clc
arpl
decb
mov
fistpl
sbb
xor
jge
dec
mov
das
je
es
in
ds
data16
sarl
lds
daa
xchg
dec
cmp
pop
movsl
push
push
out
sub
inc
sub
adc
mov
sbbl
pop
push
jo
adc
popa
imul
jno
cmpsb
ret
sub
adc
movsl
movsb
outsb
jle
pop
out
daa
fiaddl
or
adc
ja
inc
mov
xor
and
push
adc
pop
mov
adc
add
repz
les
stc
and
adc
shlb
xchg
inc
or
outsb
inc
pop
dec
cmp
lock
lock
shrb
dec
enter
shlb
repnz
push
jle
and
and
push
add
jns
hlt
or
fwait
arpl
dec
inc
insl
test
popa
movsb
push
mov
out
lods
push
sbb
mulb
pushf
cmc
dec
xchg
pop
dec
stos
ret
or
lret
mov
and
leave
outsb
xor
cmp
jns
fsts
das
call
xor
push
call
rorb
jl
out
test
inc
xchg
jecxz
add
lahf
add
nop
mov
loop
push
pop
mov
inc
inc
inc
mov
dec
cld
mov
test
xchg
add
inc
ret
cld
push
jecxz
jg
lcall
xor
pop
int
std
scas
in
xchg
rcrb
xor
pusha
cwtl
mulb
adc
jnp
fdivs
jb
push
jno
movsb
mov
clc
adc
cmp
lods
sti
in
pop
jl
out
sub
ja
or
daa
leave
aas
and
cmp
lds
inc
cmpsb
mov
xchg
pop
loopne
loop
mov
ljmp
pusha
sbb
int
push
and
es
push
leave
loope
xchg
cmpb
repz
xor
xor
adc
in
leave
sbb
jbe
xlat
inc
cmpb
in
enter
hlt
push
pushf
out
popa
and
mov
push
inc
aad
inc
shrb
push
testb
ret
mov
inc
mov
inc
out
xor
mov
mov
rorb
fldcw
leave
xchg
leave
leave
out
mov
add
adc
mov
xchg
repnz
inc
inc
int
lret
dec
subb
fstps
or
mov
and
jle
jo
xchg
movsb
mov
push
imul
pop
cmp
xchg
sahf
push
push
sub
sub
scas
lea
clc
mov
cmp
xchg
aaa
xor
icebp
test
bound
inc
adc
arpl
mov
popf
aam
pop
loopne
xchg
mov
xor
pop
lods
push
sub
sub
pop
cltd
mov
ds
mov
jecxz
mov
or
aaa
jmp
sub
mov
cwtl
js
mov
jg
lahf
add
mov
pop
mov
out
pop
insb
sub
xlat
sub
inc
jl
add
ds
hlt
ror
fsts
movsb
pop
rcrl
rep
sub
and
rcl
mov
lods
insl
jp
cmp
jge
inc
adc
lcall
int3
dec
lret
test
daa
xchg
je
jl
and
dec
es
mov
pop
aad
jle
roll
movsl
pop
cmpsl
sbb
mov
sub
fidivs
idivl
mov
and
pop
cwtl
push
mov
mov
sub
xchg
popa
nop
fs
mov
push
aam
xor
sub
push
cmp
sub
mov
cmc
sub
mov
movsl
mov
lock
xor
mov
std
scas
jle
jmp
jl
es
incb
int
loopne
inc
and
and
cmpl
mov
cmpsb
ss
push
scas
imul
and
pop
cwtl
mov
lret
adc
shlb
out
pusha
pop
and
sub
cli
loope
cmp
pop
fs
lcall
test
adc
and
push
xorb
mov
mov
jnp
jge
mov
pop
mov
lods
mov
xor
xchg
fndisi(8087
jb
pop
sahf
jg
push
mov
lret
xchg
mov
pusha
je
pop
add
sbbb
or
mov
ror
pusha
pop
mov
ljmp
repz
stc
cld
mov
ret
sub
mov
mov
push
sbb
sarl
xor
add
lret
jae
dec
xchg
outsb
mov
dec
bound
sub
pop
cmp
xchg
mov
mov
pushf
outsb
xlat
cwtl
jne
std
popa
mul
ds
sti
dec
insl
xchg
int
pop
out
pop
adc
sbb
push
or
fnsave
xor
cltd
inc
mov
xchg
push
sbb
cmpsb
inc
dec
enter
xchg
lea
and
shlb
mov
enter
xor
inc
or
adc
push
add
mov
push
sbb
fnstenv
in
mov
fimuls
ret
inc
inc
inc
dec
les
insb
jecxz
scas
stc
cmp
pushf
insl
pop
gs
xor
dec
dec
frstor
adc
inc
and
in
or
jnp
mov
cs
gs
fwait
jne
adc
adc
inc
mov
mov
lret
mov
bound
push
das
xchg
push
jmp
add
sub
aas
stos
shlb
lds
leave
in
mov
jb
stos
pop
mov
sbb
fsubrl
loopne
add
dec
insl
xor
aad
jp
mov
pusha
mov
sahf
adc
or
mov
push
inc
loop
dec
cltd
fisubrl
lods
xor
xchg
jnp
push
mov
mov
xorl
mov
and
pop
and
scas
jnp
dec
and
adc
mov
repz
xor
lahf
mov
xor
pop
cmp
push
fcomps
lret
mov
test
cmc
jg
sbb
mov
andl
push
push
xlat
out
jecxz
adc
fldl
mov
mov
jo
pusha
fisubrl
push
mov
or
out
xor
mov
mov
movsl
std
pop
pop
test
ficoml
sub
or
mov
or
je
dec
sub
loopne
sahf
bts
fmull
xor
or
in
divb
fisubl
jmp
or
xor
xor
dec
mov
orb
sub
loope
enter
cmpsl
imulb
les
clc
add
cs
dec
sub
push
push
in
xchg
outsb
mov
sahf
call
sub
std
xchg
comiss
jle
insb
iret
sbb
mov
shrl
arpl
jge
sub
cmpsl
push
inc
push
dec
outsb
test
lock
ds
scas
ret
repnz
mov
cmpsl
mov
stos
sbb
xchg
mov
mov
scas
jecxz
cltd
mov
add
cmp
xorl
aaa
repnz
scas
push
cmp
cli
dec
cmp
add
xor
xor
repnz
or
and
les
enter
adc
or
lods
mov
lcall
inc
mov
push
or
roll
pushf
inc
in
cmpsl
dec
in
sbb
jecxz
loope
push
sbb
inc
lcall
sub
jne
or
cmp
ret
fidivrs
out
aad
push
das
aad
add
test
dec
xor
ret
insl
mov
pop
jo
out
push
popa
pop
imul
xlat
and
mov
pop
dec
push
sub
fisttpl
pop
cmp
outsb
or
cmp
js
xchg
aam
pushf
cmpsl
dec
sub
mov
lret
scas
pop
cmpsb
aad
movsl
imul
xchg
shrl
icebp
aam
dec
cmpsb
adc
out
add
jl
push
adc
aad
cmp
and
mov
xchg
loope
dec
sbb
iret
sub
or
mov
add
dec
xor
data16
stc
xchg
jge
fnstenv
dec
int
jns
xor
sbb
jmp
push
push
push
sub
mov
xchg
inc
repnz
loope
pop
add
aaa
add
inc
call
pop
mulb
sub
shr
mov
jo
nop
adc
mov
dec
pop
mov
aad
xor
inc
aad
xchg
cmp
mov
mov
adc
pop
jmp
inc
xor
in
cwtl
push
mov
stos
xor
aas
outsl
dec
jb
mov
inc
mov
sub
dec
jns
pop
pop
adc
rcrl
ror
loop
leave
insb
pushf
jl
and
pop
pop
aas
mov
movsl
push
jmp
into
fisttpll
xchg
or
sbb
shlb
jle
incl
dec
hlt
repz
insl
mov
fildl
rcr
or
xor
clc
pop
xor
mov
imul
adc
mov
stc
out
sbb
mov
or
pop
cmpsb
dec
and
rcr
mov
mov
ret
pop
fs
pop
popa
xchg
dec
push
lds
and
jmp
imull
xchg
pop
arpl
jo
lret
lock
or
dec
cmpsl
adc
xor
aad
pop
lds
fisttps
popf
sti
mov
test
xorb
xchg
ljmp
xor
jle
adc
test
dec
sarb
cmp
inc
push
push
lods
sarl
ja
sbb
popa
lods
lds
xor
pop
iret
test
xchg
push
sbbl
andl
hlt
xor
int
inc
fdivp
adc
adc
fcomip
xor
rolb
call
stos
test
rol
fsub
xchg
test
xor
iret
mov
cmpsl
repz
sarl
mov
mov
pop
je
and
jmp
hlt
pusha
xchg
inc
sub
sahf
stos
loope
pop
stos
or
outsb
aaa
sub
cs
jge
add
fsubs
lds
loopne
cmpsl
fsts
jmp
stos
test
scas
cmp
stc
imul
test
cld
inc
mov
jmp
std
in
or
cmp
pop
lret
clc
sbbb
aas
xor
cmp
insl
sbb
and
jg
cmp
pop
pop
dec
dec
adc
sub
rcl
sbb
ffreep
popf
mov
int3
cmp
loop
popf
testb
xchg
movl
xor
cs
dec
fcmove
push
mov
pop
and
loopne
cmc
into
pushf
mov
leave
cmc
lret
mov
arpl
cltd
xchg
xlat
pop
inc
out
mov
adc
adc
pop
mov
xlat
jno
cwtl
in
daa
and
adc
sbb
jo
mov
or
adc
jnp
cmp
loopne
gs
xchg
lods
mov
xor
jl
sahf
xor
pop
jns
push
push
push
mov
clc
pop
xchg
scas
add
jb
fwait
test
rolb
mov
pop
and
push
jecxz
inc
sub
out
xor
fstpt
add
bound
cmp
outsl
jecxz
push
mov
xlat
lock
movsb
mov
or
loopne
mov
testb
mov
clc
fmull
mov
call
ja
rorl
lds
outsl
or
scas
js
das
movb
or
hlt
sub
pop
idivl
data16
xchg
and
or
aad
rclb
jae
andl
add
dec
into
aaa
mov
outsl
push
ljmp
ss
push
and
das
adc
ljmp
push
or
pop
ss
repnz
jo
sahf
imul
and
imul
xchg
pop
lret
cmp
sbb
inc
mov
cs
shll
aaa
add
out
mov
into
jno
mov
jmp
ror
test
mov
je
orl
push
push
inc
fstpl
lea
fisttps
push
push
ret
cld
out
std
mov
push
pop
or
lea
jl
jp
sub
jge
mov
mov
adc
sbb
les
inc
in
icebp
in
jnp
push
xor
sbb
push
divb
xor
sub
fs
ret
cmp
fsubl
dec
sbb
sbb
outsb
add
mov
fsubl
ret
test
mov
mov
adc
mov
fwait
out
push
adc
xor
or
sub
sahf
jae
lock
push
cmp
push
xor
mov
pop
cli
cmp
das
std
testb
push
mov
sbb
sti
adc
or
adc
repnz
mov
rolb
addl
je
sti
lahf
aam
loop
xchg
mov
sbb
inc
or
cmp
xchg
std
rol
cmpsl
dec
js
or
mov
and
imul
dec
xor
jo
push
aad
add
add
push
dec
sbb
pop
lods
push
cmpsl
es
mov
jns
int3
pop
push
fsubp
test
and
aaa
enter
cmp
outsl
incb
ret
in
fiaddl
shlb
sub
inc
dec
lock
sub
lahf
jg
cmp
mov
jg
aad
imul
pop
jne
add
in
jge
push
hlt
ret
adc
mov
sub
fiaddl
cmp
xor
mov
test
push
dec
movsl
xor
cmp
inc
push
fldcw
mov
sbb
pop
mov
mov
cltd
cmp
stc
enter
xor
inc
leave
jnp
outsb
out
mov
dec
cmp
andb
test
test
test
and
inc
dec
out
xchg
stos
pop
cmp
or
mov
pop
add
and
cwtl
in
fs
mov
mov
sbb
xchg
cmc
jmp
push
pop
push
in
movsb
jb
into
cmp
pop
pop
mov
pop
mov
jge
std
jg
dec
add
or
sub
or
mov
sub
pop
sbb
in
mov
out
dec
pop
repz
xchg
or
jae
xchg
fnsave
jo
and
pop
lods
pushf
sbb
jg
and
mov
loope
outsl
push
pop
mov
leave
push
jle
scas
cwtl
negl
sbb
outsb
sbb
notb
cmp
icebp
pop
jg
fnstsw
lock
push
imul
iret
pop
dec
lds
icebp
mov
inc
push
test
or
jl
popa
nop
jg
stos
jge
iret
adc
clc
mov
shll
push
stc
and
jns
cmp
stos
imul
lds
mov
or
dec
cmpsl
data16
xor
iret
dec
sub
bound
mov
xchg
mov
and
pop
out
roll
aad
std
push
mov
pop
das
daa
add
push
ficoml
lock
jb
sub
lahf
mov
sbb
dec
fisubl
in
sbb
cmp
cmp
std
push
xor
fwait
xor
push
mov
movsl
xchg
pop
test
mov
stc
loopne
mov
inc
fists
push
test
adc
adcb
mov
icebp
mov
sub
sub
sub
out
or
jle
out
sub
sub
cmpl
and
sbb
mov
mov
dec
or
add
icebp
inc
lcall
dec
inc
imul
add
out
ss
push
mov
in
dec
xor
out
push
inc
push
inc
popa
imul
sbb
loop
adc
inc
sbb
data16
jge
inc
shl
scas
or
aaa
cld
cmp
xor
dec
test
pop
iret
mov
inc
lahf
dec
dec
es
out
iret
xor
pushf
jbe
mov
mov
test
imul
add
or
add
sub
les
in
push
cmp
repz
faddl
xor
cmp
mov
cmpsl
loop
pop
adc
lretw
insl
sbb
cwtl
sbb
pop
je
es
pop
push
jnp
add
movsb
out
fisubl
dec
inc
test
adc
sub
dec
pop
cmp
lret
pusha
pushf
pop
push
xchg
cltd
xor
movsb
repz
test
xchg
fwait
out
gs
arpl
push
sbb
or
bound
stos
ljmp
arpl
cmp
pop
jne
outsb
aam
jl
loopne
mov
xor
mov
insl
xchg
jge
test
rcrb
pop
inc
es
aas
int3
add
fwait
sub
cmpsl
lahf
pop
xorb
add
mov
cmc
xchg
add
cmp
lea
aad
add
mov
popl
inc
addr16
mov
xchg
test
mov
push
in
mov
cli
xor
stos
enter
inc
adc
out
lea
je
leave
or
sti
lret
mov
cmp
add
popa
mov
outsb
mov
ficomps
cmp
adc
dec
mov
jg
xor
dec
scas
subb
xchg
add
and
test
adc
es
rol
stc
or
int
es
xlat
push
test
mov
icebp
push
and
jle
popa
mov
popa
roll
push
das
lcall
das
dec
and
adc
aaa
mov
xchg
jp
pop
aaa
mov
xor
incb
insb
je
fcoms
push
inc
or
addb
sub
adc
repnz
adc
into
jne
dec
mov
rcrb
test
jne
sbb
sub
pop
mov
add
push
out
and
or
pop
push
in
push
adc
xor
fcmovnb
jl
test
notb
xor
xor
sub
jae
sarl
add
jl
jp
inc
pop
cwtl
and
mov
scas
adc
mov
cmc
add
push
pop
and
out
es
addr16
mov
fbstp
cmp
jl
cmpsb
push
xchg
xchg
push
pop
sub
incb
aaa
cli
iret
xchg
fstpl
sbb
and
sbb
sub
std
jne
push
out
mov
push
inc
outsl
pop
aad
stc
fildll
rorl
sbb
aas
imul
mov
adcb
loopne
pop
fldcw
adc
enter
sub
push
jecxz
xchg
sub
test
push
add
mov
ja
cwtl
or
mov
test
stos
incl
push
test
jae
cmp
cmp
jecxz
cmpsb
push
movsl
shrl
dec
lock
xchg
pop
int3
dec
subl
int
mov
mov
subl
xor
shr
out
dec
das
and
imul
or
xchg
movsl
mov
mov
shrl
out
cmpsb
inc
or
mov
push
or
sahf
inc
adc
pop
roll
xchg
hlt
jae
xor
cmp
mov
xchg
jns
xchg
jecxz
aas
mov
mov
push
dec
dec
shrl
imul
mov
cmp
sbb
outsl
out
and
or
rep
mov
xor
mov
aad
xchg
aad
jbe
in
jbe
inc
adc
inc
mov
out
shl
jae
cmpl
ljmp
fstps
in
mov
sti
popw
lret
ret
xchg
in
or
mov
jbe
stc
mov
adc
adc
push
adc
fsts
shr
adcl
pop
dec
mov
je
push
xchg
lcall
aas
inc
lods
cmp
lahf
add
pop
pusha
or
adc
push
sub
dec
sub
cmp
mov
pop
mov
in
mov
push
cmc
lcall
in
inc
xchg
ud1
xchg
out
sti
loopne
mov
in
jmp
or
add
popa
sbb
jb
mov
and
js,pt
pop
inc
adc
jne
dec
or
push
outsl
inc
je
sbb
popa
mov
or
inc
int
sbb
test
jnp
adc
xor
push
mov
dec
iret
mov
jmp
xchg
lea
out
sbb
add
push
mov
out
iret
fisttps
cmp
in
jb
dec
add
pop
lds
lret
inc
js
push
jle
mov
or
jp
cs
push
and
cmpsb
jle
add
fldl
hlt
pusha
cmp
push
cmc
data16
lcall
add
mov
cmp
add
mov
rorb
iret
rorb
xchg
jge
nop
fwait
shrl
push
fcmovb
inc
push
int
std
out
xchg
dec
adcb
mov
lods
mov
or
push
add
movsl
pop
mov
push
cwtl
and
xor
scas
ret
jl
lea
xchg
test
jae
inc
rcrl
mov
jo
loop
jl
pop
sbb
popa
ret
push
pop
dec
mov
bound
das
and
pop
rolb
stc
and
pop
add
xchg
fldl
mov
add
imul
or
mov
js
stc
into
test
orb
mov
cmc
jp
adcl
cmp
or
push
dec
inc
and
lods
in
mov
pop
loope
adc
or
ret
nop
jmp
inc
xor
mov
inc
shrl
or
adc
frstor
mov
aaa
ds
mov
inc
mul
hlt
xchg
adcb
cs
popa
sbb
mov
mov
int3
das
arpl
or
bound
xor
cmp
fwait
fwait
cmp
add
xchg
int
jmp
add
lods
popa
push
fsts
cmpsl
sbb
sub
push
cvtdq2ps
ja
in
push
push
or
js
jecxz
mov
xchg
lea
fs
dec
pushf
gs
call
jl
mov
cli
pop
mov
cmp
js
cmpsb
in
sbb
mov
ds
arpl
jl,pt
sbb
in
xchg
pop
dec
orl
dec
movsb
rorb
cmp
mov
fcmovb
stc
popa
ror
hlt
lods
outsl
cmp
add
int3
lea
xchg
xchg
sar
mov
sbb
push
iret
xor
out
xor
jg
cli
mov
or
cmovno
dec
scas
xchg
dec
fisubrl
pop
pop
mov
data16
shl
mov
aaa
jnp
addr16
jno
je
dec
scas
testl
cmp
adc
popa
mov
jb
xchg
lret
push
pop
mov
ss
xor
adc
sarb
pop
mov
in
ret
inc
inc
sti
push
sub
sub
test
in
imul
jl
and
add
imul
cld
aaa
aas
jecxz
imul
stc
sar
and
adc
ljmp
jecxz
adc
xor
jbe
stos
adc
adc
ds
jmp
cli
xchg
ds
sub
stc
sbb
cmc
mov
nop
mov
lock
xchg
aaa
dec
jnp
jbe
sub
enter
jmp
scas
push
out
sub
jb
test
scas
or
sub
in
or
cmc
inc
mov
dec
int3
push
lods
pop
add
add
lods
hlt
xchg
adc
mov
jbe
and
fs
fwait
sbb
jbe
stc
test
hlt
and
adc
popa
nopl
and
cmpsb
vmovq
ds
dec
pop
lods
cmpsb
sub
cmp
mov
popa
sbb
into
push
pop
jge
mov
into
mov
ret
mov
aad
fs
add
clc
xchg
hlt
enter
hlt
adcb
std
xchg
ja
sti
add
adc
xchg
in
mov
pop
dec
ja
and
test
lcall
pop
outsb
xchg
or
or
loope
jae
or
mov
cmp
and
push
mov
or
lret
cmp
dec
lahf
and
add
int3
push
push
mov
push
repz
cmp
inc
lret
sub
mov
lret
push
icebp
inc
sbb
inc
xchg
loop
outsl
mov
ret
insl
lret
sbb
add
pusha
call
mov
das
push
jnp
dec
cmp
xchg
pop
stos
jg
pop
pop
aam
mov
mov
pop
aam
mov
pop
movsl
lcall
iret
sub
sti
rol
lahf
jge
push
jmp
out
shlb
cmp
and
inc
mov
imul
jmp
cmc
xorb
mov
outsl
int
fwait
add
fwait
mov
repnz
test
lahf
cld
lods
and
ret
sub
dec
pop
xchg
or
xchg
push
mov
mov
aam
mov
ficomps
mov
push
pushf
inc
out
mov
hlt
movsb
roll
pushf
mov
mov
lss
ret
and
lods
sbb
stc
pushf
out
xchg
stc
sub
ljmp
xchg
fdivl
out
mov
inc
cwtl
xchg
and
push
das
popf
xor
lcall
cmp
sti
inc
mov
stos
and
jmp
sbb
decb
push
lock
add
les
addr16
out
and
mov
hlt
scas
adc
fwait
and
mulb
push
push
push
stc
adc
fsts
mov
push
mov
inc
mov
pushf
out
daa
cmp
xor
jg
ja
lret
jl
and
dec
jl
sahf
inc
add
inc
lret
jb
das
cmc
icebp
dec
ljmp
and
cld
push
jmp
push
leave
add
adc
jbe
sub
jns
stc
and
mov
mov
dec
inc
adc
clc
sahf
jmp
sarl
das
repz
mov
ljmp
aaa
sar
inc
aas
push
xchg
into
mov
rcrl
cmpsl
fndisi(8087
inc
mov
ret
inc
xchg
pop
inc
jge
mov
sbb
xchg
jg
pushf
add
test
xchg
div
cmp
in
movsb
ja
scas
stos
mov
adc
sbb
xor
dec
add
inc
out
jo
jo
and
shrl
adc
ljmp
dec
in
xchg
mov
cmp
les
cli
cmp
loope
xchg
int3
outsb
pop
or
jns
mov
and
push
daa
mov
outsl
inc
inc
add
cld
mov
fsubl
push
pop
mov
pushf
jmp
lret
mov
pop
lret
and
ds
aaa
out
leave
xchg
xchg
mov
cwtl
mov
call
dec
adc
and
inc
and
jmp
lcall
adc
ret
clc
add
bound
rorl
out
les
push
dec
dec
dec
mov
out
push
fmuls
or
jmp
or
jle
jne
pop
pop
inc
add
jg
dec
xchg
adc
and
loope
pop
mov
shrb
fsubs
push
test
lret
cltd
jp
mov
popa
test
daa
aad
aaa
mov
imul
cmp
pop
sbbb
push
imul
cmp
rcrl
ror
cmpsb
inc
inc
sti
sbb
push
and
inc
cltd
mov
inc
pop
mov
leave
xchg
lods
xor
movb
adc
aaa
cmc
cli
rcl
mov
aaa
push
xchg
or
pop
xchg
outsb
es
push
in
scas
pushf
mov
or
ret
icebp
daa
pusha
xchg
cli
mov
repnz
insb
es
pop
adc
inc
cmp
insl
mov
jnp
and
jmp
int
or
fwait
test
leave
xchg
pop
clc
jb
arpl
pop
test
pusha
xchg
nop
sub
movsb
mov
cld
lret
jle
pop
in
cmp
jns
or
lock
mov
mov
repz
shl
or
and
lea
pop
aaa
sbb
mov
fwait
pop
mov
sahf
or
mov
aas
inc
scas
add
scas
orl
jb
fwait
mov
pop
in
xchg
xor
or
xchg
jnp
inc
fsubrp
lea
stos
shlb
out
jl
add
in
xor
aas
mov
xchg
inc
pop
lret
icebp
inc
jo
lock
adc
outsb
pop
xsha256
cmpsb
adc
aaa
mov
mov
mov
sub
insl
jmp
daa
push
lods
push
push
in
or
test
addr16
sub
pop
adc
mov
fists
xor
daa
ret
stc
and
jo
push
aad
subl
nop
enter
and
jecxz
dec
cmpsb
ficoms
cmp
bound
shl
inc
mov
mov
js
adc
popa
in
sub
ds
rorl
inc
stos
negb
in
fmuls
test
in
dec
iret
aas
push
adc
cmp
sub
jb
insl
mov
and
cmp
idivl
xor
push
gs
aaa
cld
push
insb
dec
push
fcmovnb
shll
jae
leave
imul
push
sbb
repz
in
mov
push
in
mov
fs
nop
and
iret
push
pop
xor
mov
cmpsl
sbb
adc
cmp
adcl
xchg
addr16
lods
push
call
push
pop
movsl
xor
lahf
insl
aas
popl
scas
sub
fwait
ljmp
jmp
loopne
outsb
and
inc
test
lock
or
int
adc
mov
mov
in
push
dec
inc
pop
inc
imul
outsb
ss
xor
and
imul
clc
cmp
popa
jb
aas
rep
dec
in
dec
pop
nop
inc
cmp
sub
js
xchg
rolb
or
xchg
mov
js
cmp
lock
jno
cltd
and
sbb
lock
adcl
pusha
fdivl
mov
cmp
pop
orl
mov
adc
out
mov
rcll
mov
shrl
ss
jl
pop
jnp
shlb
and
inc
mul
dec
sarb
out
sbb
xor
les
idiv
rcrb
mov
mov
or
imul
sub
icebp
jl
daa
fisubs
insb
jnp
mov
push
out
inc
out
jo
or
mov
jnp
sub
jecxz
fwait
mov
add
sbb
jnp
or
mov
dec
negb
sbb
jns
aad
dec
push
and
cmpsb
out
jbe
sbb
inc
popa
dec
lods
pop
mov
dec
into
cmp
inc
push
jns
jle
out
out
adc
es
leave
gs
cld
mov
stos
fwait
cmp
sti
push
inc
imul
outsb
pop
or
add
loope
pop
push
mov
jp
mov
cmpsb
out
ds
and
dec
mov
inc
mov
adc
cs
dec
scas
sub
cld
dec
push
pop
dec
mov
xchg
pop
sti
ret
shrb
clc
mov
pop
mov
insl
aad
pop
lods
rcrb
cmp
int3
std
cmp
fbstp
or
repz
add
lods
xchg
mov
pop
test
pop
inc
fists
xlat
imul
subl
repnz
sub
arpl
cwtl
fildl
or
lods
adc
mov
xor
imul
lods
movsb
std
ss
iret
cltd
pop
and
test
and
push
fdiv
call
xchg
loop
and
shlb
pop
cmp
pop
pop
fistps
push
sub
dec
or
dec
outsb
dec
out
repnz
test
icebp
inc
into
popl
xor
insb
cltd
fwait
dec
dec
push
fisttpll
repz
xchg
es
pop
mov
inc
push
or
jl
aaa
movsl
adc
lock
sbb
mov
js
aas
int3
into
mov
push
dec
fistps
lds
xor
jbe
outsb
xchg
sbb
adc
or
addl
fcmovne
lret
stos
push
add
or
test
insl
jg
mov
jns
out
cmp
ror
out
mov
jg
mov
bound
stc
dec
std
pop
mov
sbb
jle
out
sbb
and
jne
inc
mov
xorl
call
inc
das
cmp
test
shlb
mov
jbe
cltd
int3
out
push
push
test
cmpsb
adc
mov
fstpl
popa
mov
cld
icebp
sbb
mov
mov
pop
xor
pop
testb
jns
mov
data16
mov
int3
jbe
std
int
pop
lahf
inc
inc
fwait
daa
test
stos
push
jno
cmpsb
sub
dec
jg
cmpsb
mov
gs
inc
add
movsb
cwtl
data16
pop
sub
and
sbb
dec
mov
clc
out
xlat
or
das
jno
and
rol
sbb
pop
mov
std
jns
push
xchg
lea
cmpsb
inc
mov
add
in
pminub
jae
test
mov
insb
jne
mov
pop
xchg
aad
sbb
sbb
and
lock
ss
jb
int
jb
pusha
xor
fbstp
sub
ret
sbb
fneni(8087
cmp
mov
sbb
push
jl
push
jbe
mov
je
lods
jae
lods
lret
sub
dec
sti
push
cld
push
cmp
out
inc
repnz
dec
mov
dec
mov
xor
aad
jno
jl
sub
icebp
mov
cmpsl
int3
ret
sub
mov
pusha
movsb
in
and
ja
cmp
out
jns
push
mov
mov
fdivs
add
popf
das
pushf
push
loop
in
lret
adc
dec
sbb
in
testl
sub
jge
out
sti
and
loope
lods
push
cld
test
in
xor
icebp
jge
mov
sbb
mov
les
mov
xor
dec
cmpb
mov
xchg
sub
inc
push
cmp
lods
and
or
sbb
les
es
dec
scas
je
nop
sub
rorb
inc
xchg
or
inc
test
push
mov
mov
jmp
jg
out
and
ja
outsl
test
clc
mov
leave
mov
pop
es
adc
adc
sub
jae
fistl
insl
fnsave
sbb
push
int3
push
mov
aas
daa
mov
dec
mov
mov
sub
andl
and
dec
cmp
shll
inc
es
mov
pop
loop
dec
mov
ss
in
cmp
int
add
dec
cmp
push
rol
dec
shufps
das
imul
mov
add
pop
jb
shrb
jo
es
add
mov
or
inc
pop
jns
popf
lea
popf
xor
sahf
lret
mov
cmp
sbb
xchg
pop
mov
stos
sbb
rcrb
fdivrl
sub
addr16
or
notl
and
test
and
jns
arpl
sub
cmp
pop
adc
imulb
pushf
lea
sti
jge
pushf
rolb
test
aaa
ss
push
adcl
ja
pop
cmpsb
movsl
cmc
pop
xchg
xlat
test
inc
push
fmulp
into
push
add
test
fldt
xchg
not
add
adc
scas
ss
xchg
cmpsb
jae
insl
add
jo
xor
mov
aas
hlt
sbb
xchg
and
inc
sub
inc
jnp
test
xor
mov
sbb
jae
daa
aaa
dec
fisubrl
orl
out
add
pop
repnz
sarb
xchg
inc
jecxz
shrb
fisttpll
pop
fwait
cmpsb
mov
xchg
or
rorb
adc
and
sbb
in
jo
jmp
mov
jmp
test
xor
ret
inc
fwait
mov
js
jl
decb
inc
lods
scas
mov
pushf
or
sbb
cmc
mov
xchg
pop
cmp
ret
stos
clc
adcl
ljmp
push
mov
or
push
loop
clc
dec
and
push
bound
cmp
out
jl
inc
dec
cli
sarl
xor
xchg
or
inc
rolb
sbbl
jo
push
outsl
loop
add
sbb
add
adc
cmp
das
push
add
outsb
jne
pusha
cld
push
iret
out
adc
dec
cwtl
push
stos
ds
pop
add
cmp
sbb
xchg
cmp
pop
lods
push
fldenv
xor
mov
xchg
jnp
ficomps
xor
sub
cld
jmp
rolb
mov
mov
cmp
fldcw
push
les
test
iret
pop
push
out
std
mov
scas
xor
adc
sbb
mov
cwtl
sub
test
es
out
lahf
adc
mov
daa
jl
inc
or
popa
cltd
movsl
mov
push
and
xor
movsl
fidivl
ljmp
pop
loop
jns
mov
repnz
cmc
lret
insl
in
add
cmc
jns
xor
aam
mov
sub
sbb
aam
hlt
inc
lock
push
xchg
cs
pop
push
pop
xor
add
jae
dec
cmp
sbb
sub
xor
aad
pop
xor
xchg
mov
mov
fisttpl
paddb
jnp
out
ret
sub
jae
sub
jl
lods
dec
adc
pop
arpl
push
sarb
into
push
cmp
adc
ds
rcr
inc
xchg
test
sahf
xor
imul
add
mov
sbb
xchg
jp
movsb
fwait
int3
xor
dec
xchg
jno
out
lret
cmc
and
shll
int
push
mov
imul
shr
leave
daa
push
call
jb
jnp
adc
outsb
lds
dec
or
pop
outsb
add
and
xchg
or
mov
mov
movsb
adc
loope
jns
adc
jmp
mov
popf
shll
repz
adc
add
lcall
jnp
jg
sbb
pushf
call
mov
cmp
xor
sbb
mov
cmp
lea
mov
mov
xor
mov
adc
lds
mov
lret
inc
test
mov
lock
aad
out
mov
xlat
test
cs
inc
clc
cmp
xchg
push
lea
enter
sbb
adc
int
out
sub
xor
inc
ss
xchg
xchg
sbb
loopne
outsl
repnz
cmp
data16
and
or
mov
loopne
sbb
mov
sub
sbb
pop
es
es
xchg
daa
xchg
cltd
lahf
xlat
iret
fimull
aam
mov
pop
lret
lods
stos
jns
cs
je
addl
push
cmp
xchg
lahf
push
jp
xchg
sbb
mov
faddl
pop
das
mov
clts
aad
bound
testb
cli
lret
xor
pop
out
addr16
out
mov
loop
mov
adc
cmp
in
lahf
rcll
pop
repnz
inc
icebp
push
out
ljmp
call
sub
cmp
cmp
mov
lret
stos
lods
jp
inc
aaa
cmp
int3
stos
adc
mov
mov
clc
jbe
jge
iret
adc
jno,pt
repz
jmp
imul
cli
adc
mov
enter
pusha
xor
pop
repnz
aas
call
or
or
jle
push
ds
add
mov
or
and
mov
xor
dec
add
cmp
inc
push
pop
das
mov
notb
stos
repnz
cmc
jmp
mov
out
fisubl
mov
pop
dec
mov
call
dec
mov
rorb
push
dec
cmp
add
sub
xchg
mov
js
adc
test
cld
jnp
adc
mov
arpl
in
loopne
mov
dec
jae
jmp
dec
and
mov
inc
xchg
inc
rolb
xor
dec
jle
dec
clc
or
aam
testb
push
rol
je
fidivl
pop
xor
mov
lcall
pop
pop
loopne
push
mov
scas
sub
pop
mov
push
test
jl
popa
mov
xchg
std
xor
dec
inc
mov
push
mov
sti
data16
sub
mov
jbe
pop
sbb
je
enter
iret
xchg
push
mov
ja
leave
aas
mov
dec
pusha
sub
dec
and
cld
std
or
dec
clc
loop
and
fldt
lds
loop
push
gs
pop
fidivl
xchg
js
dec
adc
lret
inc
das
jle
and
dec
bound
sub
lcall
out
xchg
pushf
leave
negb
rcrb
leave
sahf
or
lods
ds
xor
imulb
lods
shrb
aad
inc
jmp
pop
sbb
out
mov
mov
sbb
jmp
mov
xor
inc
inc
inc
mov
pop
mov
hlt
add
sti
mov
sahf
dec
dec
scas
xchg
popf
or
imul
test
fbstp
push
test
dec
cltd
les
neg
push
clc
push
or
in
lds
dec
sub
aaa
push
mov
std
and
adc
adc
dec
sub
jbe
int3
cmc
or
hlt
inc
pusha
mov
ret
lret
sub
aad
int3
out
add
push
mov
pushf
imul
call
testb
cli
xchg
push
cmp
sbb
and
shll
test
inc
cmpsl
or
pusha
jo
cmovo
mov
and
adcl
lret
lods
and
push
cli
push
daa
pusha
mov
sub
sbb
es
enter
xlat
jge
mov
pop
scas
lock
out
ret
xchg
movsl
xlat
cmp
adc
dec
xchg
or
fwait
or
adc
cmp
xchg
scas
push
and
iret
mov
daa
movsb
cmp
stos
dec
sarb
mov
ja
mov
mov
cmp
test
mov
dec
xchg
in
pop
lds
psllw
xlat
push
mov
loopne
xchg
xchg
push
imul
lods
cmp
push
insb
clc
dec
jmp
inc
push
jmp
jne
xchg
aam
inc
repnz
adc
filds
fcoms
jge
inc
sbbl
pop
addr16
mov
sarl
outsb
add
mov
fdivrp
mov
xor
pop
add
sbb
cltd
fstpl
cmp
adc
push
stc
outsl
xchg
fildll
xchg
inc
mov
fwait
sbb
insb
or
rcl
push
inc
ret
jno
fcomps
int3
xchg
sarb
movsl
leave
jns
jnp
cmpsl
push
into
mov
nop
fsubrp
or
imul
adc
adc
and
pop
push
xlat
lret
cmc
stos
loop
clc
sbb
push
xlat
jp
sub
fcompl
data16
xchg
je
out
push
mov
fucompp
out
lock
lahf
lret
sub
dec
es
add
push
fisttpl
cltd
shl
cwtl
enter
in
adc
iret
cmp
aas
aam
cmp
mov
daa
movsl
adc
cmc
in
cmpb
data16
insl
jmp
xor
insb
fcoml
scas
xor
adc
daa
ds
and
push
aaa
divb
mov
or
and
aas
jle
cmp
into
mov
adc
pop
cmpsb
outsb
fnstsw
adc
and
das
mov
icebp
push
test
cmp
cmp
inc
cmpsb
mul
xor
pop
push
iret
sbb
cmp
rolb
pop
lcall
sahf
pop
mov
jns
call
xchg
lds
jge
xchg
add
in
mov
shll
mov
arpl
xor
or
mov
xor
dec
add
mov
sub
dec
xchg
add
ror
sub
cmc
das
cltd
dec
cwtl
ret
and
add
push
pop
je
push
mov
mov
pop
and
ret
jae
addb
pop
sbb
push
push
aam
cmp
dec
and
inc
adc
scas
adc
xor
xchg
es
stos
fcoms
mov
out
xlat
dec
xor
adc
push
cli
hlt
outsl
jns
inc
mov
ss
orb
test
lods
xchg
dec
sub
lret
mov
jns
aaa
lods
mov
inc
jne
adc
daa
out
inc
push
inc
lods
inc
pop
scas
and
sub
mov
and
push
cltd
enter
outsl
das
inc
femms
in
mov
cmp
or
lcall
pop
cmp
add
cmp
add
mov
bnd
dec
or
inc
xor
and
mov
push
sub
jae
insl
rclb
xor
inc
sub
popa
mov
insb
pop
pop
arpl
mov
ds
arpl
xchg
mov
sub
push
dec
imul
int
jl
adc
stos
and
std
inc
das
inc
out
xchg
sarl
pop
add
cmc
mov
addr16
jae
dec
dec
push
mov
pop
movsl
rolb
dec
mov
mov
popa
test
xor
adc
or
imul
xchg
mov
mov
dec
cltd
aaa
test
pop
xor
add
scas
fists
push
xor
sahf
xchg
fmull
mov
push
bound
pop
lds
xchg
pop
das
in
pop
sbb
xchg
adc
andps
loop
lahf
das
pop
ror
pusha
aam
cmp
mov
jae
test
jns
jmp
ret
push
jno
dec
jae
lret
or
arpl
cltd
inc
xchg
adc
xor
jl
lods
leave
out
ds
jne
push
push
pop
sti
lea
cmp
sarl
loope
stc
cmpsb
add
ret
dec
push
data16
cmpsb
or
xchg
push
sbb
rorb
mov
jb
and
push
push
jp
push
fidivl
scas
jb
inc
lcall
mov
pop
push
inc
mov
jl
dec
jae
xor
xchg
idiv
or
jp
test
xchg
mov
mov
inc
sbb
cmp
loopne
mov
ret
cmc
movsl
es
ret
jno
scas
and
lret
inc
jle
int
out
outsl
fimull
icebp
adc
add
mov
ficomps
jne
dec
aad
xor
out
xlat
and
cltd
dec
mov
cmc
cmp
adc
push
xor
pop
repz
mov
lahf
add
sbb
sbb
jo
or
sbb
add
sti
jne
mov
test
incb
fnsave
dec
lods
xor
pop
inc
xchg
in
clc
rcll
pop
notl
add
cld
stos
pop
fsubs
cld
push
out
adc
jg
addr16
pop
sub
push
jne
or
pop
sbb
test
and
frstor
mov
and
cwtl
in
lock
pop
sahf
push
js
push
scas
push
ret
loopne
xchg
aam
dec
ja
mov
lcall
mov
or
adc
add
aad
inc
xor
scas
in
xor
clc
aad
or
push
xchg
and
daa
pop
icebp
pop
jns
aaa
pop
scas
xor
insl
xor
jge
fnstsw
sahf
mov
mov
xor
test
ret
movsl
cltd
push
adcl
shr
pop
xchg
dec
jle
aam
stos
dec
sub
push
ds
or
adc
repz
inc
push
and
clc
adc
xorb
cmp
pop
sub
mov
mov
dec
xor
sub
and
xor
aam
dec
mov
lds
movsb
cmp
cld
sbb
jg
inc
out
mov
outsl
fwait
xchg
outsb
xor
call
test
sbb
scas
movsl
jae
jno
xchg
imul
ljmp
xchg
adc
std
stc
je
subb
adc
shlb
sbb
fs
ret
pop
and
sub
jle
movsl
nop
clc
jmp
mov
sbb
stos
js
mov
dec
cs
or
mov
push
mov
enter
xorb
sti
mov
enterw
stos
repz
dec
imul
ficoms
in
dec
dec
fimull
lea
and
sub
push
add
loope
out
push
addr16
sti
insb
imul
andl
mov
movsl
mov
push
shl
loopne
cmp
leave
or
jmp
dec
out
add
ja
sub
push
mov
cmp
shrl
mov
mov
push
cmp
push
fdivrs
adc
jbe
jp
add
rcrl
xchg
insb
cmp
cmpsl
test
fidivl
pop
lret
inc
jl
rclb
mul
daa
ljmp
xor
sti
scas
mov
std
xchg
jg
and
rcll
pop
push
mov
in
popf
xor
pop
jle
imul
dec
loope
into
add
rorl
lock
inc
sbb
mov
and
pop
adc
pop
cmp
out
sbb
cmpsl
sbb
out
ljmp
pop
lock
pop
mov
push
subb
int
fsubr
icebp
xor
adc
ja
imul
sbb
cwtl
int
push
cmpsb
and
das
fsubrl
ja
adc
js
push
push
or
or
jb
dec
push
add
xchg
sbb
mov
push
jne
cs
in
orb
aad
fwait
loopne
test
adc
call
fisttps
mov
call
jbe
push
jg
lahf
test
or
jg
pop
test
ret
add
sub
addb
lret
xchg
inc
jmp
jp
cmp
hlt
fisubs
call
dec
mov
jg
jb
mov
sbb
dec
addr16
cli
mov
les
xchg
lds
dec
pusha
mov
push
movsb
mov
adc
imul
push
pushf
xchg
outsl
popf
push
fs
in
lods
inc
inc
fisubs
int
and
hlt
jbe
cli
lcall
inc
mov
jg
test
loop
mov
push
scas
in
movsl
aas
fdiv
or
dec
sub
and
add
pop
xor
inc
pop
xchg
mov
mov
fiaddl
push
cmp
das
jl
stc
bound
fisubl
mov
mov
aad
xchg
jno,pn
in
push
insl
js
fildll
aas
testl
inc
and
shlb
pop
jnp
aas
rcrb
lahf
add
rclb
stc
or
gs
lds
xor
dec
jmp
outsl
pop
xor
fildll
sbb
sub
and
add
out
imul
test
pop
int
sub
shrb
add
cmpsl
push
loopne
imul
aad
dec
cmp
push
xchg
xor
mov
jnp
xchg
neg
test
rcrb
mull
paddb
sbb
ja
lods
fmulp
pop
mov
sbb
push
mov
outsb
pop
adc
loopne
rolb
subl
xchg
cld
and
outsb
js
into
stos
int
cs
nop
repnz
inc
lret
dec
int3
jmp
inc
xorl
mov
fdivrs
dec
cmp
cmp
ljmp
mov
insl
push
test
push
cs
outsl
jl
hlt
cwtl
pop
or
pusha
jge
xor
lods
push
jo
or
pop
or
mov
dec
lret
and
dec
mov
add
cmp
test
push
sub
clc
mov
xchg
sahf
or
dec
xchg
adc
mov
sbb
leave
nop
mov
lods
push
inc
scas
adc
add
inc
push
cli
push
andl
popa
push
cmp
mov
arpl
addb
sub
mov
dec
sbbl
loopne
xchg
cs
sub
stos
daa
xor
mov
dec
pop
ljmp
subl
das
xor
fidivl
ficoms
xor
int
jle
lds
jb
icebp
int
mov
xorl
dec
in
loop
ret
negb
cltd
bound
jmp
js
sbb
repnz
icebp
fnstcw
rcll
sti
sbb
testb
push
inc
jns
xchg
and
std
pop
loope
sbb
and
out
sbb
adc
sub
ja
sbb
rcll
cmpsl
aam
dec
cltd
jecxz
jns
pop
jl
inc
setp
mov
lods
rorb
add
pop
mov
aam
ret
scas
fsubl
mov
push
ja
push
add
and
mov
iret
dec
ret
fsubrs
jmp
or
push
into
std
pop
lock
dec
aas
int3
mulb
fdivrl
js
push
add
fcoms
fadds
push
adc
in
iret
lock
icebp
jo
lahf
inc
inc
rorl
push
lds
and
divb
mov
xchg
in
pop
jmp
rcll
fidivl
repnz
mov
rcrb
jecxz
enter
ss
inc
xchg
lds
push
adc
icebp
mov
push
or
iret
leave
test
jae
pop
idivl
scas
push
scas
jb
jmp
and
fistpll
aad
lea
push
adc
es
loope
sub
icebp
push
push
sbb
xor
sbb
mov
sbb
adc
cmp
cmp
stc
inc
fwait
addr16
call
sub
mov
push
repnz
repz
cmpsb
sarl
mov
dec
leave
ret
sub
loop
mov
mov
das
sub
je
xchg
jnp
repz
sbbl
inc
cmpsb
and
add
inc
aas
cltd
in
mov
cmpsl
dec
inc
aas
mov
loop
dec
mov
jg
xchg
into
faddl
in
cmpsb
stos
stos
mov
ss
push
mov
lds
inc
or
lock
rcl
jbe
mov
pop
cmc
jo
lock
aaa
out
mov
mov
and
fs
and
adc
out
inc
push
jp
stos
mov
xchg
mov
clc
mov
or
jge
out
sbb
pop
adc
in
testb
cmp
xor
mov
mov
mov
dec
icebp
lahf
inc
lret
mov
mov
dec
andb
xor
inc
lods
and
jns
ret
call
mov
or
or
fsubp
testl
lcall
pop
mov
jo
xlat
in
jmp
sbb
mov
jo
fwait
mov
xchg
and
and
sub
ja
xor
jb
sbb
and
cltd
out
inc
dec
jl
sbb
and
insl
dec
add
popa
mov
movsl
rcll
scas
inc
push
push
enter
scas
inc
leave
orb
jge
sbb
das
cmp
sbb
insb
pop
test
push
fsts
lret
bound
add
mov
pop
daa
popa
jb
shlb
sbb
repnz
out
push
lret
dec
cltd
fsub
mov
sbb
mov
jno
mov
jbe
add
jno
and
xchg
lds
xchg
out
rcrb
aad
jae
sbb
je
pusha
popf
lods
jecxz
lds
and
jge
jmp
sub
xchg
mov
outsb
inc
sarb
lcall
stos
dec
mov
dec
or
int3
xor
rorb
dec
std
repnz
jo
idivl
aam
cwtl
pop
xor
xchg
add
jg
les
imul
andb
xor
or
add
sbb
movsl
nop
icebp
pushf
fidivrl
dec
outsl
shl
shrb
cld
stos
pop
daa
aas
xchg
in
push
xchg
into
ja
cmp
mov
adc
push
popw
cs
cmc
out
dec
mov
xchg
test
adc
shl
iret
inc
dec
push
iret
pop
inc
mov
test
xchg
out
sarl
mov
aam
add
mov
mov
das
cmc
adc
movsb
fstl
movsb
and
sbb
ds
and
pop
dec
xchg
or
push
mov
push
fisttps
sbb
sbb
mov
loope
ret
xor
push
pop
cmp
movsb
in
push
fs
mov
es
pop
inc
std
sbb
mov
fs
fnstcw
jecxz
mov
push
push
bound
mov
mov
mov
mov
mov
mov
sti
jge
and
popa
test
cltd
fnsave
outsl
cmp
add
push
fbld
or
sbb
test
and
xchg
sbb
in
sbb
push
test
xor
imul
mov
stc
aad
cs
and
mov
orb
xchg
aam
xchg
mov
push
mov
lcall
fcomi
scas
dec
and
test
push
loope
adc
sbb
outsb
call
dec
imul
pop
adc
out
movsl
xor
sbb
icebp
outsb
push
ficoml
cmpsb
push
jl
xchg
insb
or
push
lods
jnp
scas
mov
negb
test
xor
aad
clc
in
lea
addr16
subl
or
loop
push
dec
mov
push
mov
je
jbe
in
sub
xchg
dec
std
notl
pop
orl
das
jae
test
sbb
cmp
popf
xor
jmp
mov
ja
popa
xor
int
mov
cmp
mov
cmp
pop
xor
stc
test
addb
jns
cmp
jecxz
scas
xor
lds
push
xchg
cmp
pushl
cmc
and
xlat
cwtl
pop
push
cli
ja
insb
xor
mov
cmp
mov
fdivr
cmp
or
sbb
sar
sub
jae
lcall
mov
test
pop
repnz
rolb
jb
stos
aad
push
dec
or
aaa
mov
xor
out
mov
popf
cmp
xor
mulb
rorb
addl
movsb
cld
out
cmpl
mov
loop
jl
xor
mov
push
cs
pop
mov
outsl
xchg
inc
xchg
and
jmp
dec
jmp
jnp
into
scas
popl
add
mov
ss
jns
rorl
xchg
shl
out
adc
leave
pop
inc
push
mov
dec
or
cmp
das
nop
pop
xorl
mov
and
add
and
jle
gs
jb
pop
or
mov
sbbl
fs
mov
loopne
aad
lret
stos
loope
shll
lods
pusha
call
jnp
xchg
sub
imul
loope
rcll
push
insl
ror
data16
call
xor
roll
shll
ja
push
jge
jns
dec
test
fiadds
out
pop
pop
jae
fmuls
or
icebp
sahf
xchg
loopne
pop
cltd
insb
adc
sub
jle
inc
iret
xchg
cmp
imul
ss
pushf
sbb
pop
int3
fcomps
mov
xor
dec
stos
loopne
dec
jns
test
aam
cmc
mov
into
mov
ljmp
in
ret
xchg
outsl
xchg
sub
mov
cmc
jae
in
popf
movsb
jge
test
pop
mov
leave
stc
mov
shrl
stos
push
push
imul
test
dec
in
mov
lds
inc
push
in
adc
rorb
jns
aad
sbb
push
and
xlat
sarl
fistps
or
pop
sarl
pop
cmp
leave
or
mov
fwait
addr16
out
and
rcll
push
out
outsl
mov
jo
enter
adc
ja
ret
cmp
adc
xchg
pop
adc
arpl
push
imul
out
pop
arpl
sub
hlt
fs
inc
dec
or
insl
sahf
arpl
jecxz
cmc
xchg
clc
and
xchg
jno
scas
mov
pop
inc
movsl
adc
cmc
lahf
and
jecxz
and
aaa
xor
pop
jp
pop
pop
push
jnp
ljmp
xor
mov
test
mov
dec
cmp
jnp
mov
sbb
xchg
notb
cwtl
mov
sbb
sub
stc
and
sub
rolb
movsb
ss
hlt
mov
aaa
data16
jno
daa
xchg
jp
rcl
mov
mov
int3
ficoms
and
test
xorl
sahf
push
sbb
hlt
or
mov
or
iret
fs
fcmovbe
push
inc
and
or
rorb
jns
cs
pop
sbb
adc
mov
jo
cmp
outsl
cmpsl
ficoms
movsl
jp
enter
bound
leave
mov
push
iret
mov
and
dec
push
dec
cltd
push
inc
sub
mov
fdivrp
push
stos
mov
test
mov
inc
fcoml
aam
jne
mov
cmp
xchg
mov
je
shr
test
mov
sbb
loopne
rcrb
inc
mov
popf
in
xchg
mov
push
xchg
ljmp
andb
sbb
fisttps
es
and
loopne
mov
pop
popf
push
mov
std
jl
push
push
js
cmp
push
push
xor
clc
and
mov
sbb
in
add
cmp
negb
mov
and
mov
je
insl
push
pop
cltd
ds
xchg
insb
or
ret
out
cld
iret
cld
sbb
rcrl
stos
sbbl
or
sbb
adc
and
jo
test
lcall
scas
pop
cld
fwait
dec
aaa
mov
xchg
push
stc
xchg
add
push
imul
rolb
mov
pop
mov
mov
dec
inc
scas
add
push
sbb
movsl
pop
and
sub
rcll
jns
mov
int3
test
inc
inc
ja
outsb
sub
insl
cmpsb
js
mov
cmp
nop
dec
pop
cmp
pusha
nop
dec
jge
fdiv
icebp
aas
mov
rcrb
in
fidivs
jne
mov
mov
sub
mov
adcb
movsb
add
dec
addl
shl
dec
inc
daa
je
push
xor
sub
dec
out
lods
ja
mov
or
mov
dec
sbb
sub
ret
cmp
les
add
mov
loopne
repnz
jg
xor
mov
xchg
ljmp
sbb
pop
xor
mov
in
add
inc
roll
sub
sbbb
sbb
jnp
inc
or
test
leave
shrl
xor
xchg
fwait
pop
xchg
cmp
inc
hlt
stc
sub
jmp
or
xchg
pop
push
ret
sbb
xor
xor
insb
sub
adc
lret
xchg
xchg
or
or
fsubl
iret
xchg
xlat
dec
inc
push
mov
mov
adc
sbb
dec
jns
aas
jge
xchg
or
dec
push
loope
sahf
das
aad
inc
popf
test
jp
mov
pop
adc
pop
sub
cltd
stos
cmp
fdivrs
or
cs
xor
push
xchg
pop
popa
adc
fcmovu
js
pop
and
jmp
mov
push
mov
cli
scas
ds
xchg
dec
mov
pop
mov
xor
jns
popa
mov
and
jo
popa
into
lock
nop
or
and
pop
and
jae
stc
jp
fisubl
xor
jecxz
mov
cmp
jno
push
push
or
loopne
addr16
jbe
pop
mov
in
jnp
cmp
shlb
sti
pop
pop
or
outsb
push
pop
push
ljmp
pushf
mov
mov
push
cli
and
mov
xor
xor
mov
sub
pusha
inc
mov
add
inc
or
cmp
movsl
push
pop
fsubl
push
fcomps
cwtl
in
xchg
mov
xchg
addr16
rcr
sub
pusha
ror
cs
mov
or
mull
pop
pop
sbb
mov
in
movb
mov
lock
lcall
add
cmpb
mov
test
out
mov
jne
dec
in
mov
in
dec
movsl
mov
and
push
outsl
jne
test
xchg
and
xchg
add
lds
pop
push
jb
xlat
ds
dec
imull
cmp
pop
push
lret
xor
outsb
xor
adc
movsb
iret
arpl
aam
or
pop
cmp
sub
jno
enter
xchg
arpl
rcrl
mov
push
test
imul
pop
sub
xchg
test
jp
jg
stos
loope
roll
add
add
icebp
dec
aam
insb
cmc
aad
ja
xchg
aas
xor
cmp
and
fs
add
popf
pusha
mov
inc
outsb
ja
mov
sbbl
aam
repnz
sbb
mov
push
pusha
adc
in
mov
sbbb
xchg
pop
in
cs
test
mov
insb
je
fdivrp
mov
sub
int
imull
es
push
xchg
sbb
jno
dec
xor
cmp
pop
inc
adcb
and
and
xchg
subl
sub
lods
jge
sbb
cld
mov
inc
rorl
paddsb
dec
pop
add
add
mov
push
jp
and
or
inc
xchg
add
ljmp
xor
jl
push
loop
inc
push
arpl
jp
cli
inc
add
daa
mov
sub
scas
roll
xchg
cli
mov
jns
or
fdivl
mov
lock
loope
mov
dec
cmc
ja
pop
in
arpl
mov
inc
adc
xchg
or
ds
xchg
dec
sti
inc
stc
dec
push
nop
out
mov
add
xchg
popa
fsub
jbe
xor
mov
xor
out
dec
insb
xchg
push
jmp
xor
rclb
or
push
dec
push
int3
sub
add
and
push
lods
or
les
push
adcb
mov
xor
fs
add
shl
iret
movsb
aas
inc
jg
mov
push
mov
int
orb
mov
inc
xchg
xorl
test
mov
imul
call
xor
mov
pop
jmp
sbb
jmp
pusha
or
pusha
dec
push
mov
inc
test
popa
aad
enter
fiadds
pop
enter
aas
push
pop
or
shll
inc
std
mov
jmp
insb
stos
arpl
mov
lea
push
mov
sub
adc
sbb
xor
xchg
test
dec
xor
xlat
adc
jmp
and
and
jo
mov
sbb
lcall
pop
out
inc
or
xor
aas
shrl
or
sub
pop
jnp
inc
mov
pop
loopne
rcll
decb
cmpsb
pushf
jno
mov
movsl
cmp
xchg
mov
or
xor
lods
repz
jns
mov
shlb
std
cltd
jb
ljmp
loopne
xchg
clc
jb
inc
sub
sub
repz
lahf
pop
inc
test
pop
xchg
fwait
inc
rcll
push
enter
imul
in
hlt
cmp
mov
lahf
xchg
in
mov
sub
cmp
sub
ret
lcall
jae
push
sbb
or
cmp
loopne
ss
hlt
dec
sub
pushw
loop
xchg
mov
mov
movsb
lods
sbb
cli
roll
sub
sbb
lret
int3
gs
fcoms
inc
xchg
sub
enter
daa
or
mov
loope
cmp
jmpw
mov
xor
movsl
hlt
cmpsb
in
shrl
jae
fisttpl
sub
mov
mov
push
xchg
xchg
xor
inc
xorl
sbb
jne
or
mov
mov
cld
outsl
aam
cmp
cmp
aam
push
xchg
mov
aas
xchg
push
aam
inc
xchg
test
mov
xchg
repnz
rorl
dec
js
mov
sbb
and
adc
je
and
mov
and
addb
cmp
aaa
cwtl
jge
sub
sbb
das
and
adc
testl
sub
inc
cmp
dec
mov
icebp
loope
out
fldcw
hlt
ret
jb
mov
mov
and
xchg
push
imul
lea
xchg
push
pop
pop
iret
inc
bnd
mov
mov
insb
nop
inc
cmp
out
sbb
out
inc
mov
xchg
cmp
mov
add
xchg
int3
dec
arpl
xchg
lds
scas
lds
in
std
out
lahf
push
orps
sub
ret
notl
repnz
out
xor
inc
or
push
test
xchg
stc
pop
jns
clc
mov
add
cmp
dec
cmp
ds
pop
adc
jg
pop
and
sub
imull
mov
std
dec
lcall
mov
insb
repnz
out
sub
and
imul
mov
fnstenv
mov
notl
jmp
xchg
fsubs
cwtl
and
sbb
xorl
fcom
rclb
mov
mov
inc
out
jg
jbe
aaa
jns
lret
jno
jo
scas
cmp
sbb
push
adc
in
je
jl
cmp
and
inc
mov
xor
aaa
push
xchg
xchg
js
jnp
xchg
mov
mov
cwtl
loopne
add
stos
mov
cmp
or
and
add
mov
subb
or
lahf
out
jmp
pop
inc
das
imul
cs
out
xor
ret
sbb
decb
je
inc
imul
mov
push
ds
inc
xor
scas
push
gs
sub
push
movsl
xchg
mov
cmp
jle
jnp
adc
orl
lods
rclb
aam
mov
call
rolb
out
and
pop
mov
cmc
nop
int3
cwtl
cmpsl
loopne
mov
sbb
in
inc
sbb
popf
mov
leave
hlt
mov
in
sbb
xchg
inc
push
sub
out
mov
push
stos
rorl
fistpl
popf
es
gs
fwait
inc
inc
and
push
dec
or
fsubl
insl
cmp
fs
cmp
push
in
shr
and
dec
adc
mov
bound
jl
stc
jne
and
je
jb
ds
pop
inc
std
inc
xor
insl
aad
adc
inc
fs
push
leave
loopne
lahf
xchg
mov
popa
gs
scas
int3
pushf
fld
cmc
out
pop
movsb
push
test
dec
adc
and
adc
sbb
xchg
icebp
fwait
or
cmc
outsl
into
jecxz
ret
mov
fidivrs
imul
xchg
in
jo
ja
push
and
flds
jne
inc
sbb
out
pusha
bound
mov
js
mov
push
adc
push
test
jae
xchg
fstps
mov
sahf
insl
jecxz
mov
xchg
dec
lea
int
pop
jb
adc
mov
sbb
js
ret
pop
cmp
ret
fwait
call
test
push
jns
push
loop
out
pop
mov
jecxz,pn
mov
loopne
adc
outsl
jp
lods
arpl
mov
shll
push
lahf
xor
inc
jle
jne
test
add
fwait
pop
inc
leave
sahf
push
test
addr16
xchg
stos
lahf
sbb
pminsw
or
shrb
pop
cld
push
mov
dec
aad
lock
jbe
xchg
push
iret
dec
cmc
rolb
jle
xor
pop
inc
mov
adc
add
cwtl
add
cmp
push
fmull
inc
push
repnz
jns
das
and
jns
fucom
cltd
dec
fstpl
mov
popf
call
fs
pop
das
scas
pop
inc
insb
jle
int3
push
xor
xor
dec
in
and
int3
cmp
hlt
inc
jo
js
sbb
mov
sub
lahf
mov
inc
sub
jno
sbb
xlat
adc
je
in
pop
lods
movsl
cmp
aad
dec
imul
adc
xorl
pusha
aaa
pop
xchg
pop
sbb
iret
inc
and
jbe
sub
adc
das
sbb
inc
dec
mov
inc
or
pop
cmc
cld
es
cmp
loope
ja
rcrb
lcall
push
xchg
sub
sahf
mov
ss
outsl
pop
jle
fs
lahf
jge
push
out
fwait
jns
mov
jle
jmp
mov
xchg
mov
jle
nop
mov
or
out
push
es
aad
xchg
sbb
mov
dec
loope
mov
lea
sub
rcrl
arpl
insb
rclb
insb
cmp
cwtl
fnstsw
sub
add
test
mov
in
test
dec
ret
sbb
sbb
push
mov
xor
ret
cs
pop
stc
push
xor
ret
push
enter
adc
or
and
xor
js
repz
push
in
jo
pop
and
aam
cmp
scas
jns
test
cmp
hlt
lret
jecxz
pop
inc
hlt
or
pop
into
push
mov
mov
adc
int3
inc
ja
xor
cmp
lea
insl
lret
test
outsl
adc
fmul
ja
dec
xchg
push
loopne
scas
pop
pop
stos
mull
mov
dec
js
cmpsl
xchg
add
rorl
inc
jge
jmp
sub
mov
sbb
dec
inc
jnp
push
push
mov
sti
rcrb
adc
lods
and
or
push
mov
push
outsb
loopne
pop
imul
push
inc
ljmp
nop
xor
out
leave
movsb
mov
push
mov
scas
arpl
pop
sbb
lahf
les
sbb
aaa
subl
cmp
xor
pop
xchg
daa
mov
sbb
xchg
mov
lods
inc
lcall
fiadds
xchg
push
aaa
fsts
cmc
jb
lcall
mov
jne
scas
inc
arpl
repnz
push
mov
scas
jp
mov
xchg
shll
xlat
test
loopne
pop
lcall
insl
pop
rcr
sub
aas
roll
adc
dec
xchg
int
mov
cmp
insl
js
clc
leave
jl
jl
pop
lock
fs
repz
lea
in
stos
cmpsb
push
test
in
cmpsb
and
xorl
push
jecxz
sbb
ljmp
test
xchg
xor
loope
xor
cli
test
or
je
icebp
and
arpl
clc
fmull
sub
into
and
adc
sub
addb
notb
ja
scas
pop
nop
sahf
lea
in
mov
fbstp
jecxz
dec
jl
xchg
or
rep
mov
push
add
aas
repz
std
rcrb
cmp
pop
cmp
inc
cmp
adc
pop
or
cmc
mov
icebp
cmp
pop
enter
stos
lods
push
outsl
dec
shrb
sti
jmp
xchg
and
and
divl
xchg
js
or
ret
std
test
test
push
cli
mov
cmp
inc
lcall
test
adc
outsl
fcmovb
dec
jl
in
or
cwtl
out
nop
push
cmp
jl
mov
scas
push
jo
les
jecxz
shrl
in
movsb
mov
jbe
adc
dec
cmp
sub
mov
mov
cmpsl
rclb
mov
insb
cltd
fld
popf
push
jmp
movsb
adc
push
pop
cmp
ds
xor
or
and
nop
adcb
push
cmp
pop
mov
sub
out
daa
outsb
cltd
xlat
inc
mov
adc
jg
repnz
mov
mov
cmpsb
jns
mov
lret
fmull
mov
scas
testl
adc
roll
pop
mov
insl
xchg
fwait
push
xchg
insb
pop
or
cmp
imul
add
pop
xchg
and
sbb
jl
call
sbb
lods
inc
hlt
dec
mov
lret
xchg
sbb
lock
jg
inc
jb
mov
mov
leave
enter
in
add
out
ret
jp
test
nop
movsb
in
sub
and
imull
clc
outsb
jge
jmp
fucomi
scas
loop
cmp
inc
in
test
push
ret
jo
push
sbb
pop
sahf
lods
lods
lret
jno
pop
ret
cmp
mov
adc
inc
xchg
adcl
pop
subb
aam
mov
cli
add
insl
out
imul
add
lret
call
subb
movsb
mov
xor
scas
xor
inc
shl
daa
and
fnstenv
xchg
mov
int
insl
xor
push
xchg
stos
xchg
push
jmp
aaa
lods
push
pop
out
jno
mov
mov
cmp
push
adc
stos
push
fldl
push
adc
leave
sbbl
mov
stc
mov
jle
fidivrs
dec
add
outsb
pop
add
call
in
test
cmp
ss
inc
in
fs
cltd
gs
push
pop
int3
es
push
mov
dec
cmp
lock
dec
ret
jle
fisubs
inc
je
dec
cmp
cmp
cmpsl
mov
fwait
stos
leave
imul
adc
lods
mov
sub
inc
test
or
inc
inc
pop
cmp
dec
jle
leave
aas
frstor
test
ds
int
sbb
pop
test
cltd
push
adc
ljmp
ss
dec
fistl
push
cwtl
sub
cmp
sbb
and
pop
push
mov
outsl
in
dec
lods
stos
dec
fildll
dec
adc
dec
imul
jnp
mov
mov
xor
jnp
ja
sub
lret
mov
xor
shll
pushf
ljmp
ficoml
popa
push
and
sub
push
inc
out
lods
jb
adc
das
cwtl
mov
mov
mov
pop
sub
xchg
jns
add
inc
stos
aad
push
sbb
data16
mov
test
or
jl
jg
popf
mov
jae
mov
inc
add
dec
orl
cmp
ret
cmp
clc
push
imul
outsl
lock
sub
add
bound
dec
dec
sbb
jnp
fstps
aaa
push
shll
sub
pop
jg
repnz
imul
aas
jecxz
out
fldcw
cmp
sbb
or
enter
dec
aam
ljmp
pop
pop
test
dec
pop
scas
bound
add
sub
push
lcall
ret
iret
ret
jb
icebp
push
sub
jmp
cli
xchg
jle
mov
stos
ss
shr
jle
jne
or
jge
js
xor
test
adc
add
je
and
icebp
xchg
pop
jmp
popa
jne
dec
str
dec
mov
cmp
cmovae
insb
jne
leave
fsubrs
lods
jmp
and
adc
je
xchg
dec
out
clc
imul
cmp
sub
int3
sbb
ja
dec
mov
es
xchg
push
pushf
push
test
repz
inc
adc
sbb
or
dec
cmpsl
loope
repnz
push
insb
xorl
sub
mov
push
mov
in
ljmp
fstps
in
push
xchg
and
data16
xchg
adc
not
mov
sbb
fstps
and
inc
xor
orb
add
inc
popa
fildll
lods
add
leave
mov
cwtl
mov
inc
inc
sbb
insl
dec
fisubrl
sarl
jg
cmp
mov
cltd
mov
lret
jmp
or
popa
add
ljmp
cmp
js,pn
loope
mov
push
jge
sbb
mov
fcoml
ret
test
lods
out
rolb
scas
mov
or
out
add
push
fucom
cli
and
test
xor
xor
cmp
or
popf
inc
sbb
inc
test
fldcw
mov
or
and
popa
mov
test
ficoml
mov
mov
int3
pop
dec
pushf
icebp
jl
cmc
mov
fs
pushf
lret
insl
push
dec
ja
stos
ss
jnp
push
aaa
jo
cmp
inc
pop
dec
mov
sbb
push
fldenv
xlat
popa
aaa
push
cli
and
adc
fcoml
pop
rolb
mov
xchg
and
pop
popf
push
and
jmp
xchg
fisttps
or
lahf
mov
repnz
ss
lcall
ljmp
je
movsl
mov
dec
sub
insl
push
xorb
mov
mov
lock
mov
movsl
cwtl
push
data16
outsb
push
add
dec
test
cli
cwtl
mov
cmp
xchg
add
jne
nop
pusha
pop
les
in
bswap
and
sbb
int
xor
jnp
mov
sbb
mov
nop
jge
and
fcomps
insl
call
adc
fmuls
stos
dec
sub
mov
test
addl
jmp
lods
js
jbe
or
imul
xchg
pop
jb
pop
pop
jecxz
mov
cld
jg
jp
lcall
sbb
jne
daa
fiadds
test
mov
inc
xor
inc
stos
jns
and
pop
jae
add
add
pusha
shrl
adc
add
xchg
out
dec
sbbb
xchg
dec
mov
shrl
push
into
lds
arpl
aas
xor
pop
and
pop
jnp
sub
jle
shrl
sub
and
roll
icebp
pop
and
add
nop
shlb
xchg
dec
repnz
test
lods
sbb
daa
cmpsl
fcmovb
sbb
ss
add
outsb
scas
ficompl
dec
out
cmc
fs
adc
cwtl
sub
or
cli
dec
xor
jnp
rclb
mov
mov
dec
stos
scas
adc
xchg
lcall
popa
push
adc
lds
jae
xor
leave
sub
nop
hlt
cmpsl
test
js
sahf
push
icebp
push
loope
aaa
fwait
lret
aas
dec
mov
or
rorl
mov
inc
dec
andl
icebp
dec
hlt
mov
mov
jecxz
aas
dec
insb
pop
or
insb
sbb
lret
sahf
das
adc
pop
and
push
mov
or
xchg
stos
mov
fidivrs
xor
mov
leave
rorb
notb
fimull
lret
sahf
gs
aaa
inc
add
iret
mov
lock
mov
sub
sbb
cmp
icebp
repz
xor
frstor
in
in
mov
subb
and
pop
xchg
pusha
outsl
adc
xchg
loop
out
sub
out
inc
ja
pop
test
call
ljmp
scas
mov
ret
cmp
cmc
enter
pop
sahf
lods
mov
inc
stc
fidivrs
add
push
jae
adc
dec
adc
cwtl
xlat
xor
lea
push
iret
pusha
popa
outsl
fisubl
fcomps
fisttps
rorl
in
ja
cmp
or
and
dec
fld
fildl
mov
out
jno
dec
jmp
inc
sub
adc
mov
mov
call
xchg
fstl
push
inc
idivb
inc
mov
push
adc
add
outsb
jl
dec
mov
adc
mov
arpl
pop
xlat
insl
xor
test
pushf
call
in
jecxz
lea
js
xor
cwtl
or
push
mov
push
loope
data16
ret
repnz
cld
data16
loop
fs
fsts
xchg
adc
gs
add
mov
call
jmp
ret
rcrb
jae
lcall
push
inc
sub
rcll
scas
pop
bound
test
mov
xchg
push
mov
int3
in
mov
ficoml
jmp
fwait
dec
addr16
shlb
cmp
je
mov
push
dec
inc
imul
lds
cmp
dec
cmpsb
sbb
jbe
cmp
call
mov
push
pop
cltd
push
fsubs
add
sub
pop
test
jns
sub
lret
addb
subl
and
jge
ret
or
inc
mov
das
in
mov
ljmp
sbb
cmp
jns
int3
call
push
repz
sarl
xor
fs
inc
pop
jg
dec
mov
jle,pt
jnp
loopne
dec
orl
fst
mov
sub
movsb
adc
lahf
addr16
test
push
and
sbb
std
sahf
sbb
mov
xchg
sbb
sbb
imul
sbb
xchg
inc
add
xorl
adc
lcall
pop
mov
std
stc
orb
xchg
repz
stc
add
out
xor
and
ss
arpl
decb
mov
mov
xor
repnz
mov
movb
test
inc
jbe
dec
sub
mov
adc
test
xor
dec
sub
pop
inc
mov
and
pop
iret
add
push
push
in
jmp
mov
cmp
stc
mov
xor
lods
inc
pushf
mov
xor
lods
cmp
cmc
rcl
mov
mov
clc
movsl
cmp
xor
cmpsb
sbb
cmp
mov
push
sub
cmp
imul
and
dec
xchg
sbb
add
dec
or
mov
inc
mov
adc
jnp
jne
int
rcll
ficompl
es
mov
mov
movsl
jp
sbb
cmc
rorb
adc
xchg
out
call
xor
pop
out
push
aam
ss
dec
mov
fdivl
lret
popa
inc
and
dec
movsl
cmc
dec
inc
cmc
lds
insb
rdtsc
pop
sbb
and
jp
mov
hlt
or
push
cwtl
jb
aam
mov
sbb
lds
xchg
sarl
in
jecxz
push
and
xchg
mov
xlat
cmpsl
ja
test
push
push
sub
or
add
ds
scas
jno
mov
push
xchg
add
in
or
push
ret
push
hlt
cmp
fs
movsl
out
mov
and
sub
xor
add
sub
test
ret
lret
stos
push
pop
mov
imul
dec
inc
add
fildl
lret
sbb
aad
loope
mov
jmp
ds
mov
fwait
int
cld
outsl
out
add
pop
pop
lret
insl
test
or
cltd
shrl
dec
mov
int
mov
and
enter
push
cmc
jne
sub
xchg
and
inc
mov
cmpsb
pop
xchg
add
daa
lock
stos
lcall
or
mov
popf
xor
and
subl
mov
mov
inc
push
sbb
shlb
gs
jle
add
mov
or
int3
cs
iret
jge
inc
mov
sbb
scas
add
pop
aad
xchg
shr
and
or
pop
call
insl
mov
out
mov
xor
mov
sub
dec
jnp
popf
mov
mov
lahf
sbb
add
mov
mov
sub
movsb
stc
xor
ficompl
add
xor
mov
sbb
cmp
xor
stos
sbb
sbb
scas
mov
inc
mov
mov
xchg
xchg
or
mov
icebp
jg
or
jl
push
inc
not
xchg
out
mov
out
push
das
push
add
out
lahf
mov
incl
and
push
jbe
mulb
or
ret
adc
int3
sub
inc
jnp
cmp
cmp
imul
sub
xor
adc
pop
xor
dec
inc
mov
shll
xchg
push
or
jo
call
stc
data16
je
jp
cmc
fcmovbe
push
pop
sub
cmpsb
ret
repz
dec
movsl
arpl
pop
sbb
xlat
ret
mov
push
xchg
or
adc
insb
aas
push
ljmp
les
add
lods
je
loope
jle
xchg
lock
push
lret
mov
mov
bnd
xor
adc
adc
ret
jns
mov
arpl
fstpt
jnp
push
sub
inc
insl
dec
pop
les
ss
push
rolb
inc
cmp
adc
jns
xchg
pop
lcall
mov
push
fimuls
and
test
push
push
sti
xor
insb
pushf
sub
sti
mov
test
jp
sbb
roll
mov
test
loopne
aas
subl
in
adc
data16
repz
push
or
lock
add
repz
cmc
jmp
pop
xorl
dec
scas
mov
cmpsw
sbb
mov
dec
fwait
pop
insb
and
fisubs
nop
and
out
adc
daa
cltd
cmpsl
ljmp
cmpsb
lea
call
fstl
cmp
cmp
adc
mov
mov
mov
ret
cmp
ret
fildl
pop
xor
mov
imul
dec
push
or
mov
icebp
decb
pop
mov
jmp
jns,pt
movsl
mov
imul
in
rcrl
adcb
mov
mov
leave
fildl
dec
adc
mov
xchg
mov
mov
sbbl
sbb
scas
cmp
jmp
or
scas
aam
cmp
pop
mov
into
movsb
lahf
out
bound
imul
or
inc
sbb
xor
in
mov
out
cltd
test
sbb
xor
test
loop
push
imul
out
dec
jl
pop
shlb
es
jbe
test
pop
jb,pt
sti
sbb
sub
mov
xor
ljmp
jmp
das
sbb
push
jmp
sub
jnp
sbbl
ja
leave
in
pusha
mov
hlt
or
xchg
adc
lods
and
push
imul
mov
in
push
shl
push
pop
push
jnp
sbb
ljmp
mov
mov
idivl
push
mov
xor
cltd
inc
orl
loop
or
jne
sbb
xor
es
shlb
jecxz
repnz
cmc
std
xor
out
pop
hlt
jo
cs
in
in
dec
push
popf
popa
xorl
test
mov
push
flds
out
sbb
enter
aam
xchg
ds
xchg
scas
das
les
add
inc
shll
or
shl
jno
mov
ja
in
rcl
outsb
test
stc
sbb
mov
jmp
dec
mov
inc
bound
or
out
jbe
adc
and
pop
stos
push
inc
xor
in
inc
mov
pushl
pop
inc
push
ficoms
jo
enter
inc
pop
jne
fwait
les
dec
and
push
test
add
rcrb
pop
aaa
pop
fwait
movsl
cs
test
dec
das
call
xor
mov
sbb
jne
xorb
jl
add
cs
dec
mov
dec
xchg
imul
inc
dec
hlt
loop
fsubl
inc
ret
pop
into
push
jbe
lods
imul
add
push
in
movsb
mov
pop
sbb
jle
push
inc
push
in
repz
shll
orl
push
xor
mov
hlt
data16
notl
push
call
dec
inc
adc
ss
lods
popf
fists
xchg
cs
dec
in
test
lods
inc
nop
in
les
daa
push
addb
dec
lock
adc
or
jp
stos
jmp
pushf
dec
ds
outsb
jae
test
cmp
sbb
jmp
insb
movsl
ja
xchg
cmpsl
subb
adc
push
adc
xor
shll
inc
aaa
push
sub
aad
mov
cmp
orps
add
adc
mov
sahf
sbb
add
jecxz
lods
dec
pop
mov
cwtl
sti
and
or
pop
addr16
stos
sub
insb
das
fildl
add
hlt
inc
pop
jl
add
cmp
or
mov
lret
and
push
pop
nop
in
ljmp
hlt
mov
cmpsb
jns
lret
pushf
fbstp
in
int
jmp
mov
fisttps
sub
xchg
outsb
push
sbbl
leave
push
sbb
and
les
loopne
in
or
je
cmp
pop
xchg
out
lods
stc
pop
scas
adc
ds
adc
cmpsl
icebp
inc
lret
inc
and
push
mov
iret
pop
or
loop
sbb
cltd
out
insl
out
adc
in
xchg
aas
push
mov
sarl
jns
xchg
xchg
jg
aam
repz
sub
xchg
ljmp
cmp
lods
inc
inc
cmp
movsl
stc
push
mov
fdiv
enter
xchg
pop
loopne
push
sub
in
jge
mov
test
xchg
aaa
dec
push
push
insl
js
dec
xchg
cmpsb
test
out
mov
adc
dec
jnp
mov
ss
xchg
fwait
or
and
into
std
out
aas
fnstcw
jne
ljmp
push
mov
xchg
lret
mov
sbb
or
leave
push
addr16
lcall
adc
or
fcomps
pop
or
and
enter
jge
dec
pop
pop
fisubl
scas
loop
push
sub
es
mov
inc
ret
pop
mov
rcr
cmp
adc
call
jmp
pop
push
cmp
sahf
outsb
sub
mov
mov
ret
push
adc
loop
adc
sub
push
popa
fiadds
addr16
lea
dec
or
pop
out
ror
test
xchg
mov
mov
xlat
jno
push
jle
or
enter
jmp
je
in
jb
sub
lods
jmp
xor
jp
mov
ds
mov
and
mov
lock
and
dec
ja
xor
mov
add
stos
decb
std
mov
adc
pushf
pusha
mov
add
hlt
adc
xchg
fsts
mov
adc
jmp
sub
xchg
int
fstpl
loop
scas
pop
mov
xchg
sub
ror
or
pushf
mov
ret
inc
mov
mov
sbb
hlt
jno
aam
into
add
loope
xchg
in
cmpsb
lods
loopne
jae
dec
add
cmp
int
aaa
add
sbb
fisubrs
push
dec
and
iret
push
xor
fbld
inc
dec
mov
jmp
lret
mov
mov
repnz
mov
push
roll
mov
push
adc
nop/reserved
dec
mov
clc
jo
mull
into
out
in
mov
sar
pop
data16
sbb
cmpsl
mov
ss
les
es
int3
inc
mov
mov
and
mov
cmpsb
jp
pop
insl
mov
pop
cmc
mov
repnz
loope
fstpl
call
stos
adcb
mov
and
mov
mov
and
and
ret
cmp
sti
icebp
inc
add
push
aam
fisubrs
and
das
not
xchg
mov
sbb
dec
loope
lcall
out
lret
fs
dec
jbe
jae
mov
or
push
mov
ficoml
outsb
sbb
outsb
ret
in
sub
imul
sbbl
imul
add
pushf
insl
cmp
mov
aam
rcll
call
mov
je
fists
sub
xchg
or
mov
movsl
test
xchg
sub
push
and
std
mov
sti
ret
stc
lods
xchg
jmp
mov
push
xchg
idiv
sub
mov
sbb
add
inc
stos
cmp
xchg
jmp
push
rcl
adc
mov
out
fstpl
xchg
adc
cmp
sub
mov
pop
jb
push
rorb
pusha
incb
mov
mov
cmp
xor
shll
push
aaa
jmp
lcall
xlat
push
aaa
mov
fnstcw
xor
and
pushf
and
or
outsb
xor
jnp
into
xchg
sti
fdiv
cli
fs
jl
and
aaa
shl
negb
shll
mov
push
add
iret
xchg
dec
xchg
out
filds
push
scas
fcompl
outsl
sub
aas
es
inc
fwait
inc
stc
test
hlt
mov
sub
xchg
adc
dec
outsb
ljmp
mov
add
inc
gs
movsl
adcl
jb
mov
add
mov
push
mov
cmp
adc
xchg
ret
addr16
add
dec
ss
sub
outsb
inc
mov
sub
repnz
std
fistpl
add
inc
adc
mov
lock
movl
clc
lret
jmp
mov
in
bound
dec
xchg
shll
testl
or
movsb
xchg
xor
dec
aaa
jne
xchg
lds
lcall
ja
mov
mov
mov
xlat
jle
outsb
adc
fnstsw
and
arpl
out
call
jg
xchg
mov
mov
pop
cs
mov
inc
ss
pop
jg
mov
sub
data16
rep
jp
pop
nop
xor
call
stos
test
jb
or
cmp
mov
out
and
in
cmpb
hlt
fwait
ret
add
js
mov
stc
and
sbb
xchg
lret
fs
xchg
jne
mov
pop
pusha
fisttpl
insb
sbb
or
sti
sbb
xchg
sbb
mov
mov
test
dec
sti
fiaddl
ljmp
mov
test
add
mov
filds
cmp
jae
ficoms
and
mov
cli
popf
flds
push
mov
and
pop
or
or
test
push
fcoms
xchg
add
push
std
aas
mov
lcall
jmp
xchg
pop
xchg
call
sbb
sub
jecxz
xorl
jnp
adc
mov
inc
dec
das
imul
mov
xor
cmpsb
push
mov
repz
test
scas
or
xorb
jne
push
loope
ret
jae
cwtl
fcomp
mov
and
int
jp
addl
mov
scas
or
inc
xchg
xor
xchg
mov
xchg
jo
and
in
jo
mov
jg
sbb
movb
push
xor
scas
outsl
sub
xor
sbb
mov
pop
addb
xor
lock
xchg
sti
add
int
and
add
std
cmp
lock
insb
fimull
pop
or
lcall
jle
jle
or
sti
repz
jb
push
mov
jbe
ret
loope
jecxz
nop
call
and
arpl
jnp
scas
addr16
fs
inc
xor
pop
rolb
sarl
xor
movsb
loop
in
inc
iret
repnz
push
test
xor
sbb
mov
and
lock
or
test
orl
xor
mov
sar
push
sub
sbb
mov
lods
mov
cmp
testb
pop
jnp
lret
mov
shll
mov
inc
pop
pop
imulb
in
iret
and
lret
jge
push
xor
jnp
push
stos
cmpsb
out
cwtl
aad
mov
xchg
push
nop
sbbb
mov
push
jecxz
daa
jb
jae
pop
adc
imul
inc
add
lret
outsl
movsl
mov
lods
mov
nop
jo
add
xchg
test
shlb
xlat
adc
lcall
sbbl
lret
bnd
jae
cmp
mov
call
icebp
dec
shr
mov
jge
inc
cmp
sbb
pop
cwtl
push
add
rcr
loop
aaa
test
mov
pop
sub
push
or
enter
mov
std
mov
lock
cmc
loope
test
pop
test
out
jne
mov
jbe
push
xlat
xchg
int
sbb
cmp
cmp
xchg
push
movb
or
cmp
cmp
movsl
movsb
out
outsl
cld
mov
push
addb
iret
adc
push
xchg
jg
xor
test
jge
inc
xchg
lret
dec
adc
imul
and
add
mov
jmp
cmp
add
jo
fcmovnb
fisubrl
cmp
pop
fcoml
push
ljmp
fisubs
pusha
jp
cmpsb
fmul
mov
testb
dec
scas
shlb
std
aam
aad
fidivs
pushf
fistpl
xor
lods
repnz
cli
fcomip
xchg
enter
cmc
notl
xchg
hlt
mov
inc
lea
mov
push
pop
lods
lret
lcall
mov
inc
movsl
jle
das
pop
in
cmp
xor
out
inc
fcoml
call
negb
aam
cwtl
shll
jo
dec
bound
fildll
mov
addr16
addr16
rorb
pop
jmp
mov
xor
movsb
push
adc
xchg
inc
mov
jecxz
into
ret
subl
or
jge
mov
pop
push
insb
aas
push
scas
dec
jge
jae
fadds
int3
shll
mov
stc
flds
xor
push
xor
xchg
ret
dec
pop
cld
and
lret
and
aaa
jne
rol
and
call
in
jp
fisttpll
sub
lea
and
and
mov
mov
ret
sub
mov
mov
xchg
mov
rolb
into
inc
jge
or
fstpt
push
xor
inc
adc
xor
nop
pusha
xchg
xchg
in
or
rclb
ret
cmp
subl
mov
daa
xchg
inc
or
sbb
cmp
popa
clc
mov
rcr
add
rcrl
mov
mov
inc
cmp
addl
jg
or
push
or
dec
fists
xor
sbb
push
mov
push
jl
loop
jg
out
out
add
lock
mov
idivb
loope
pop
xchg
pop
in
ljmp
inc
sbb
fs
push
cmp
jg
jae
into
call
sub
jecxz
jno
rcll
sub
xor
adc
js
push
lods
sub
or
jnp
jge
xor
lea
jo
mov
or
call
js
adcb
jns
pusha
and
cmp
mov
add
cmp
aas
fwait
mulb
xchg
jp
insl
icebp
leave
push
pop
push
xor
inc
movsb
adc
scas
and
cmp
iret
push
and
add
xlat
push
imul
sbb
xchg
inc
test
je
dec
outsl
adcb
clc
xor
cld
mov
in
cmp
sub
je
push
inc
dec
bnd
in
or
dec
gs
dec
js
inc
loop
cltd
cmpsl
cwtl
cli
movsl
pusha
gs
jae
jmp
sbb
sub
adc
data16
test
mov
fistpll
fisttpl
push
xchg
adc
xchg
push
enter
int
fbld
call
mov
or
xor
add
mov
enter
out
js
out
mov
add
push
ret
cmc
mov
xchg
jl
xchg
popf
push
sarb
add
ljmp
loopne
mov
jae
mov
arpl
sub
lds
xchg
jmp
insb
adc
inc
mov
lea
sub
mov
stos
and
ret
data16
outsl
movsl
daa
push
ss
insl
popf
adc
scas
rcrb
push
inc
cmp
pop
lods
arpl
dec
std
cld
dec
and
insb
nop
fcoml
push
jl
daa
movsb
ret
cmp
cmpb
inc
mov
pop
cmp
cld
cwtl
and
jp
jo
pop
xchg
mov
in
cmp
loopne
lods
movsb
xchg
jecxz
pusha
add
fcmovu
cld
push
daa
loopne
scas
cwtl
sarl
lods
push
aad
inc
sbb
push
inc
inc
aam
mov
cmp
mov
push
jae
icebp
xor
push
jb
test
pop
in
lahf
jno
mov
hlt
mov
xchg
sbb
xor
addr16
xor
movsl
dec
sbb
insl
inc
xor
xor
loop
mov
out
pop
loope
dec
cltd
xchg
out
push
dec
xchg
sbb
push
xchg
xchg
fcomip
add
xchg
adc
pop
pushf
arpl
pusha
ljmp
sarb
lahf
faddp
jecxz
mov
je
inc
lret
add
cli
sbb
ret
negl
stos
jb
shl
mov
jle
shrb
icebp
mov
lahf
mov
pop
or
out
lahf
test
sbb
lds
in
push
xchg
pop
fs
adc
sbb
test
adc
addr16
wrmsr
jbe
mov
cmc
mov
jae
adc
into
pop
bound
jb
hlt
dec
and
pop
test
sbb
ss
js
int3
push
ja
fldl
mov
adc
adc
pop
adc
mov
pop
sub
xchg
sub
lret
sarl
inc
dec
mov
xor
mov
cmc
movlps
or
cmp
xor
pop
cs
pop
test
ret
sti
adcb
push
enter
notb
mov
stc
xor
jmp
pop
icebp
xchg
pop
cmpsb
fucomp
jmp
outsl
mov
inc
popf
ret
loopne
scas
sub
mov
dec
push
idiv
add
nop
sbb
sbb
leave
clc
out
xchg
sahf
aad
icebp
push
call
sub
sti
adc
dec
sbb
adc
cmp
js
iret
dec
adc
push
push
pop
aam
fs
lods
cmp
movsl
or
stc
bound
dec
pop
add
insb
pop
mov
cmpsb
popa
xor
mov
push
loopne
das
push
rcrb
and
sti
dec
or
iret
lods
ds
stc
xchg
pop
scas
cs
xchg
cwtl
cwtl
mov
fiadds
test
fwait
imul
subl
and
pop
add
cmpb
sahf
cmc
mov
scas
lds
in
adc
ret
fs
nop
lock
clc
scas
pop
out
or
addr16
lret
inc
jl
adc
insb
sarb
xchg
inc
shll
imul
mov
pop
loop
nop
fsubrs
sbb
fadds
mov
pop
mov
mov
cltd
dec
push
inc
cmp
test
mov
pop
inc
lock
add
xor
push
jbe
jmp
or
mov
sbb
insb
int3
ss
sbb
rolb
mov
cmpsl
cmpsb
jbe
fisubrl
push
mov
or
leave
cmp
or
icebp
or
sbb
push
xchg
cltd
mov
ds
xchg
mov
xor
pop
ret
mov
mov
nop
leave
or
cmp
cmpsb
jnp
cmpsl
jge
xchg
pop
mov
xor
stos
dec
imul
flds
mov
or
cmp
or
jmp
jle
insb
jl
cmc
sub
into
add
push
sbb
lock
std
or
inc
mov
movsb
loopne
push
or
fildl
aam
les
pop
pop
xchg
jns
mov
fimull
jp
cmp
std
in
pop
adc
jmp
adc
push
insl
jae
jp
into
jae
pop
inc
lahf
or
xor
dec
dec
jl
rorl
aas
push
js
pop
sbb
push
fidivrl
lods
adc
inc
pushf
sbb
pop
test
sbb
xor
test
imul
pop
mov
cmp
mov
sub
aas
adc
test
jmp
shll
sahf
cli
adc
inc
mov
push
cmp
fcoml
out
inc
mov
or
xor
cli
xchg
stos
in
mov
aaa
fbld
ja
shlb
fcomps
xchg
rcll
int
add
or
outsl
inc
pop
lods
fcom
mov
push
iret
fiaddl
xchg
div
inc
arpl
pop
or
add
xchg
cli
sub
push
push
testb
sbb
add
je
inc
pop
jle
mov
insb
std
lods
xchg
xchg
iret
jno
ss
fiaddl
pop
out
jecxz
test
out
mov
pop
aam
xchg
and
addr16
sbb
loope
mov
sarb
aaa
xchg
push
lea
popa
mov
sbb
or
mov
pop
sub
das
cli
jb
pop
lods
mov
pop
push
mov
test
lods
cs
pop
or
loope
rcl
icebp
mov
or
cmp
std
addr16
stos
or
cmp
dec
or
je
int3
je
cmp
dec
mov
xor
hlt
fsts
dec
push
add
jl
mov
daa
or
data16
loop
into
add
add
cmpsb
mov
add
outsb
xchg
mov
add
and
inc
mov
outsl
cmc
xchg
jge
iret
adc
insb
mov
js
add
or
mov
inc
pop
pop
sub
or
push
adc
loope
adc
mov
loopne
sub
adc
shll
pop
stc
inc
dec
sbb
mov
jns
addr16
add
lcall
mov
push
imull
aaa
fnstsw
push
bound
cmp
push
sti
cs
add
outsb
pop
sbb
xor
movsbl
mov
test
fs
std
adc
xchg
adc
push
inc
push
ja
mov
out
das
xorb
cmp
inc
out
cmp
clc
fldcw
cs
or
inc
pop
inc
pop
inc
mov
dec
jb
jns
test
push
rclw
mov
pusha
rcl
imul
lahf
add
orb
and
bound
lds
aas
pop
cld
scas
out
aas
gs
iret
test
push
inc
daa
data16
inc
xchg
add
dec
seta
sub
out
outsb
inc
fidivrs
inc
mov
dec
cmpsb
lahf
ds
xchg
xchg
mov
out
pop
mov
sbb
test
adc
mov
adc
or
or
mov
push
xlat
out
xchg
icebp
xor
mov
pop
push
xchg
cmp
imul
into
jmp
loope
lahf
xchg
outsl
xor
lea
dec
and
out
out
xchg
pop
mov
cltd
pop
lcall
mov
les
dec
cmp
std
cs
lds
gs
sbb
push
and
sar
iret
setl
icebp
lea
sub
aas
leave
inc
xor
loope
push
mov
adc
xor
sbb
mov
jns
in
cmp
sbb
lods
enter
push
adc
xlat
xchg
xchg
cld
jb
cmpsl
ret
inc
xchg
icebp
xor
ds
mov
dec
testb
cmp
mov
push
sub
xor
notb
inc
fldenv
fimuls
or
pop
sar
scas
jl
cmc
push
daa
pop
pop
stos
inc
dec
pop
gs
notl
aas
shrl
cld
pop
jns
jns
sbb
ds
aas
push
jno
push
jno
mov
mov
and
addr16
fwait
scas
add
jg
inc
dec
mov
push
jle
push
es
leave
dec
fcmovnb
fsubrl
sub
in
inc
enter
cmc
orb
stos
push
push
pop
mov
sub
andb
sub
mov
ret
fidivs
imul
inc
jbe
mov
xor
inc
push
xchg
jne
sahf
jp
hlt
xchg
fcomps
or
arpl
fwait
pop
notb
xchg
cltd
in
cwtl
cmp
pop
hlt
out
mov
leave
js
movsb
jnp
leave
xor
daa
dec
arpl
fdiv
dec
inc
das
lods
mov
sub
sbb
or
cmp
xchg
out
or
jne
xchg
mov
xchg
and
add
sbb
fwait
outsb
pop
scas
sub
test
dec
mov
jbe
sub
push
cmp
in
jo
pop
stos
decl
fwait
jg
lods
shrb
aaa
push
dec
jno
popf
inc
insb
sahf
and
enter
into
es
and
sbb
xchg
sub
fadd
lahf
in
and
iret
jae
mov
ret
cmp
and
mov
or
mov
sub
jb
int3
icebp
push
movsb
dec
xchg
add
dec
lret
xchg
int3
in
jp
inc
mov
loopne
inc
sbb
pop
outsb
call
data16
inc
cli
push
shrb
test
ljmp
mov
aad
or
jns
sub
push
xor
fistps
jno
mov
dec
push
gs
popf
pop
adc
mov
adc
xor
cmc
sbb
mov
mov
or
adc
inc
lock
pusha
jp
inc
and
push
add
or
jnp
mov
jns
dec
jg
and
pop
cmpsb
xchg
lret
xlat
pop
pop
popa
add
and
mov
push
inc
fisubl
xor
shll
in
mov
xor
adc
cmp
push
pop
mov
mov
loop
out
andl
out
pushf
mov
xchg
push
mov
ss
std
lcall
mov
in
cwtl
jbe
fcmovnu
gs
daa
cli
xchg
cwtl
dec
jnp
sarl
jmp
cmp
pushf
imul
jp
imul
mov
cmpsl
iret
jo
hlt
into
sub
xor
lods
mov
inc
add
or
div
add
jecxz
pop
add
mov
incb
scas
inc
cmp
roll
cmp
mov
push
cmp
jno
inc
inc
dec
push
inc
adcl
stos
jle
push
scas
call
stos
or
adc
ficompl
mov
push
mov
enter
mov
xchg
shll
popa
cld
ret
outsl
jne
inc
push
xorl
mov
pusha
and
imul
mov
adc
push
shl
cmp
xlat
and
xchg
stc
out
or
js
mov
or
les
cmc
adc
dec
pop
push
mov
dec
in
fstpt
jbe
lret
in
jp
outsb
or
pop
test
aas
ret
dec
dec
cmp
jae
push
pusha
aam
idivb
out
jne
mov
gs
or
es
adc
xchg
shll
es
inc
call
hlt
test
arpl
mov
daa
fbld
pop
stc
out
lods
jmp
push
popf
mov
lret
insl
push
and
fs
sbb
xor
stc
push
pop
jnp
enter
and
aaa
sbb
jecxz
shlb
or
or
inc
jae
add
outsb
cs
mov
pop
movsb
mov
out
mov
rclb
hlt
xor
test
pop
loopne
sbb
adc
ljmp
dec
mov
imul
fcomps
test
xlat
push
push
stc
cwtl
dec
adc
stc
mov
dec
insb
cs
push
jmp
pop
pop
rcl
lcall
push
mov
mov
cmp
pop
xor
es
test
pop
out
lods
leave
cmp
add
out
adc
and
mov
push
adc
mov
mov
loopne
cltd
xchg
mov
scas
int3
add
cwtl
in
or
adc
stc
adc
ret
jecxz
push
lret
cmp
sbb
sti
sub
and
add
in
xor
push
int3
inc
insb
mov
mov
xor
movsl
cmc
pop
adc
mov
push
mov
cmp
in
mov
bnd
lds
ret
sub
add
lock
pop
pop
fcoml
and
add
dec
dec
cmp
clc
pop
mov
cmp
popf
pop
shlb
imul
adc
test
fwait
outsb
adc
xchg
test
sbb
mov
and
jne
fnstcw
inc
out
test
js
push
lret
adc
mov
jne
ja
in
pop
xor
push
cmp
push
mov
cmp
scas
test
leave
jmp
divl
out
lods
out
mov
rcl
les
jg
mov
pushf
lcall
rcrb
sub
movsb
leave
in
je
in
dec
ror
jb
jp
pop
into
aam
pusha
dec
mov
orl
jge
jb
xor
das
cmp
stos
cltd
push
cmpsb
pop
lods
pushf
xor
icebp
mov
add
inc
and
cmp
insb
add
std
pop
xchg
fidivs
and
push
faddp
mov
xchg
aam
fcmovnu
xchg
rcrb
pop
in
jg
jo
jb
lcall
test
jl
cmp
mov
shrb
cwtl
ror
pop
fsts
adc
in
aad
stos
mov
xor
mov
lahf
or
xchg
ret
jnp
jb
jl
outsl
xchg
xchg
mov
test
adc
js
clc
or
jb
mov
arpl
testb
push
mov
mov
sub
loope
jbe
lret
lret
or
lock
repnz
xor
or
xor
iret
and
add
xor
insb
push
adc
jae
inc
jge
sbb
pop
stos
sub
mov
jne
pushf
mov
call
xchg
xchg
in
add
cmp
cmpsb
adc
mov
cld
jne,pt
xchg
fs
xchg
inc
cmp
inc
cwtl
jp
shr
mov
shlb
popf
aam
dec
lock
xor
shr
jge
or
push
sbb
fcomps
pop
mov
popf
inc
jns
sbb
xor
repnz
add
or
jne
jns
inc
insl
cmp
test
lret
je
jmp
and
imul
mov
jp
filds
in
jle
test
les
mov
pop
adc
xlat
cmp
mov
dec
add
and
xchg
cmc
mov
and
pop
xchg
xlat
jg
mov
popf
gs
enter
sahf
push
dec
xor
iret
cmp
cmp
test
imul
addl
xor
cmp
rolb
add
test
mov
xchg
mov
xor
enter
add
into
int3
xor
fnstsw
mov
or
in
dec
subl
scas
cmc
xchg
cltd
inc
push
and
mov
aas
add
lds
inc
and
stos
xor
out
adc
fsubrs
dec
movsl
cmp
add
jmp
sub
mov
inc
jg
rcrl
cmpsb
mov
lods
repz
scas
fsts
mov
jne
fwait
mov
js
aaa
out
bound
push
cmp
addr16
lahf
imul
add
call
lret
or
addr16
cmp
rclb
inc
aad
jecxz
std
pusha
dec
push
lret
out
dec
dec
add
fwait
inc
fcomp
xchg
decl
xchg
ret
scas
int3
cmpb
shrb
push
xchg
lods
loop
add
pop
sbb
sbbl
inc
in
cs
scas
sbb
xor
lret
push
mov
loopne
je
test
in
rcrb
jmp
push
in
pop
adc
dec
xor
dec
inc
sub
ret
and
mov
sub
sub
out
jle
push
inc
and
sub
push
in
lret
jbe
fsubrl
xchg
or
xor
jp
test
insb
cli
lcall
rcrl
stc
je
inc
fstpt
in
orl
push
icebp
test
es
cmp
in
pop
push
inc
aad
out
shlb
leave
push
ljmp
movsl
and
jb
test
out
xor
inc
xchg
jne
fsubrl
daa
imul
and
shrl
jp
out
aas
mov
mov
sub
arpl
cmp
jge
lret
push
inc
sarl
pop
inc
sar
inc
cltd
mov
jne
mov
and
xlat
not
push
stc
sbb
xor
aad
pop
test
xchg
push
pop
lods
scas
cmp
insb
jecxz
push
xor
movlps
mov
jmp
iret
xorl
sbb
jo
scas
push
loopne
mov
jle
pop
adc
sarb
mov
mov
jge
push
fcmovnbe
pop
lret
es
mov
fs
jmp
mov
xchg
sbb
jmp
push
pop
int
cmp
jns
xchg
into
mov
pop
xor
cli
daa
aam
leave
sub
mov
mov
in
rcll
and
mov
push
xchg
sub
movsl
cmp
cmc
fsts
lods
cmp
mov
cmp
insl
repnz
mov
xor
mov
dec
add
xor
out
in
add
cmp
repnz
andl
pop
lods
and
mov
lea
xchg
stos
int
and
or
xchg
orl
mov
sahf
inc
int
dec
pop
repnz
and
mov
in
sub
stc
das
mov
fs
cmp
pop
mov
fdivs
jp
loop
mov
cli
inc
inc
ror
int
je
popa
es
jmp
and
and
push
leave
dec
jl
rol
es
sahf
inc
aas
ret
aas
cli
rcrl
sbb
pushf
pop
cmp
mov
xor
pop
pop
fldenv
mov
jecxz
lcall
jp
out
push
xor
inc
push
cmpsl
je
sbb
punpckhbw
xor
push
xchg
add
test
out
mov
mov
aaa
xchg
aad
data16
rcrl
jae
xor
stos
jo
out
xchg
inc
es
xchg
xor
pop
into
dec
rclb
cmp
and
ret
cmc
mov
mov
into
rorb
sti
add
mov
lret
mov
jecxz
js
jbe
mov
dec
sbb
xchg
and
inc
ret
and
fcmove
pop
scas
loope
adc
sahf
mov
inc
enter
mov
sbb
push
int3
ja
mov
push
or
add
rorl
push
sbb
pop
and
mov
dec
or
mov
xor
shlb
cmp
jl
aad
jg
pop
inc
hlt
arpl
repnz
popa
xor
xchg
std
repz
in
aaa
dec
popa
pop
xor
xlat
imul
mov
jnp
mov
ret
pop
xlat
lods
jbe
ds
jmp
je
lret
sub
xor
xor
xor
push
test
mov
ret
sub
ret
movsl
sub
jp
mov
outsb
je
pop
imul
pop
lea
mov
lods
or
xor
mov
cld
iret
scas
dec
addr16
inc
ficoms
std
jg
pop
pop
sbb
lods
xor
push
mov
sbb
and
addr16
mov
loope
lds
das
xor
xor
lcall
test
fwait
dec
mov
iret
jbe
fidivs
jg
adc
test
pop
sarl
mov
gs
cltd
dec
js
js
outsl
dec
jae
hlt
jbe
popa
xchg
mov
je
mov
xlat
push
sub
cltd
mov
int3
add
push
xor
cmp
jno
mov
mov
xchg
pop
je
dec
iret
jle
lock
xchg
pop
xlat
mov
push
nop
cmc
xchg
jae
xor
push
mov
mov
lock
unpcklps
enter
fistl
add
push
inc
outsl
repnz
cmpsl
bound
sbb
mov
sub
fwait
pop
clc
sbb
adc
and
mov
mov
push
mov
cld
add
pop
jecxz
or
inc
mov
aaa
jg
add
sub
xchg
cs
out
dec
orl
enter
daa
out
adc
and
in
xchg
leave
sbb
in
sti
jge
lret
enter
mov
daa
into
jmp
jmp
dec
push
sbbb
pop
jecxz
adc
inc
hlt
arpl
or
lea
inc
clc
out
insl
xor
das
mov
add
mov
xor
gs
test
sub
sti
mov
ja
inc
testl
and
stos
inc
out
shll
dec
sbb
adc
or
push
sbb
xchg
mov
fiaddl
mov
xor
adc
inc
fnstsw
sub
and
pop
jb
addr16
cmp
das
lock
xchg
loopne
ss
mov
adc
cwtl
repnz
cltd
fildl
enter
fidivrl
je
xchg
fadds
icebp
arpl
lea
fcomps
jbe
cmc
cmc
sub
adc
ds
pushf
call
sbb
mov
mov
jecxz
mov
adc
fistpl
stos
mov
jmp
cmp
pop
xchg
lods
jns
jae
sarl
sbb
xchg
lock
hlt
cmpsb
inc
test
mov
pop
cmc
add
repnz
xchg
pop
inc
cmovns
cmp
pop
cmp
mov
sub
sti
int3
push
jo
out
jp
and
pop
xchg
jmp
push
cld
roll
xchg
pop
out
addr16
stos
pop
repz
stos
dec
adc
jg
rclb
aam
shll
rcrb
adc
and
xchg
mov
stos
xchg
stos
mov
dec
int
fsubr
jno
int
mov
xabort
mov
dec
sbb
ret
sti
or
mov
addr16
mov
cmp
sub
dec
push
loope
mov
mov
bound
cmp
shl
jg
lods
inc
aad
jne
or
jno
imul
push
add
rcll
push
mov
out
fnstenv
xor
mov
push
adc
xchg
sbb
push
aas
pop
ljmp
or
xor
in
out
xchg
xor
adc
fcoms
aad
sub
rolb
push
lds
push
xor
push
pop
mov
rolb
subl
jb
xor
jbe
inc
shlb
sbb
icebp
push
mov
rcl
mov
shrb
xor
shr
fimull
jne
adc
xchg
in
adc
test
xchg
mov
ret
or
push
adc
sbb
jbe
pop
sbb
lea
xchg
outsl
int3
push
fsubs
mov
test
or
jae
es
jnp
sub
dec
pushl
repz
pop
cmpsb
mov
bound
shl
shll
xchg
fxch
pop
cld
add
push
pop
shll
cmp
fisubs
push
dec
mov
mov
cmp
test
push
daa
ficoml
or
fcomp
syscall
jp
pusha
mov
adc
inc
cmp
insl
int
ret
dec
push
popa
test
ss
fldcw
jl
inc
cmp
test
loopne
or
push
in
cmp
mov
shll
enter
adc
cmpsb
and
jecxz
add
rcrl
cld
es
xchg
sub
lcall
rcl
insl
dec
std
mov
adc
nop
mov
icebp
mov
cmpsb
add
mov
ds
jmp
inc
outsb
xchg
pop
pop
lods
dec
push
mov
adc
rcl
loopne
jne
jns
roll
push
xorb
int
stos
jecxz
out
test
enter
xor
adc
aad
out
aam
lret
repz
xchg
mov
sub
sub
push
pop
adc
mov
cmp
inc
fsts
arpl
mov
pop
jnp
adc
lret
and
ja
cmp
adc
cmp
and
jo
pop
mov
pop
pop
sbb
jecxz
jl
fwait
pop
insl
sbb
sub
xor
test
leave
lret
stc
repz
jg
loopne
mov
lea
push
pop
jp
adc
out
sub
lea
mov
xchg
cmpsb
pop
adc
fmull
fsubl
or
in
repnz
xor
fidivl
jmp
jne
loopne
pop
and
sub
adc
cmpsl
jecxz
stc
lret
arpl
fsubr
clc
adc
push
fdivs
and
out
pushf
or
jns
leave
adc
aam
in
push
adc
stos
jecxz,pt
jo
sub
dec
xchg
xchg
hlt
jmp
mov
in
push
or
cmp
xor
jp
lcall
push
or
inc
dec
sub
lea
jle
mov
orl
test
jb
fisttps
sahf
add
scas
pop
pop
push
jb
jmp
sbb
sbb
ljmp
xchg
mov
fwait
pop
push
ret
or
call
and
stos
std
or
fstpl
popf
int
shrl
xchg
test
pop
mov
imul
xor
xchg
inc
je
jno
ljmp
push
in
xor
cmp
mov
cmc
pop
adc
and
cmp
fs
movsl
aam
push
shrb
mov
in
ret
sbb
pop
adc
es
jecxz
inc
out
xor
rclb
push
sub
jge
push
movsb
addr16
jnp
mov
or
jl
adc
inc
rcl
xor
fnstenv
sbb
add
psllw
jb
and
add
lock
push
ss
add
mov
sbb
sub
push
cmpps
jo
push
mov
hlt
jns
xchg
gs
je
outsb
mov
shrl
cmp
adc
mov
mov
dec
sahf
movsl
sahf
popf
mov
xchg
or
or
push
pop
mov
test
or
inc
shlb
adc
mov
adc
loop
jmp
push
call
add
xor
sub
add
mov
cmp
js
bound
pop
sbb
rorb
sub
pop
iret
mov
jecxz
jmp
stc
and
pop
test
dec
push
jae
fs
jns
shl
mov
jecxz
cmp
xor
or
adc
push
mov
into
pop
push
aam
jl
and
add
je
adc
es
out
dec
mov
fidivrl
outsl
shl
inc
sbb
cmp
loopne
sbb
jle
xchg
sbb
data16
mov
mov
loope
nop
jb
sbb
es
jae
insl
insl
push
cmpsl
xor
add
mov
cmp
stos
sbb
xchg
orb
pop
sub
inc
adc
lahf
daa
mov
rorb
push
jle
push
xchg
data16
pop
fiaddl
pop
ja
pop
test
mov
push
jl
mov
push
push
mov
and
fs
out
lcall
push
or
mov
jg
mov
jbe
in
insl
dec
jecxz
push
lret
icebp
insl
mov
insb
mov
dec
xchg
movsb
push
movl
push
sub
xor
inc
loope
fnstcw
jbe
and
cmp
push
xor
mov
outsl
or
roll
mov
or
int3
fldt
jge
ret
jo
or
popa
lcall
dec
les
mov
xorb
repnz
repz
enter
mov
mov
cmc
fbstp
fsub
in
add
int
fs
pop
cli
rolb
adc
push
cltd
out
stc
hlt
fdivs
dec
add
cwtl
mov
sbb
mov
adc
lock
arpl
repz
xor
adc
lods
xor
pop
stc
fs
dec
stos
cmp
lret
ss
mov
dec
jp
test
or
adc
loope
fistps
ja
cmp
popf
dec
sub
cwtl
ss
or
lods
adc
mov
or
test
imul
sub
pop
add
xchg
and
cmp
out
push
stc
or
fdivl
subb
xadd
add
aam
jnp
mov
adc
pop
int
push
sub
stos
pop
mov
mov
ss
mov
push
arpl
sbb
out
cmc
fstl
scas
aad
loope
or
mov
pop
lock
adc
and
add
xlat
jne
mov
jo
or
and
imul
sbb
ret
xchg
jle
lahf
xchg
mov
insl
mov
test
les
mov
adc
popf
and
xchg
cmp
insb
imul
sub
adc
adc
xchg
nop
inc
sahf
rorb
xor
xchg
push
pushf
xor
cmc
repz
outsb
push
repnz
pop
hlt
mov
inc
adc
mov
js
imul
and
add
add
and
inc
cmpsb
add
mov
add
cmp
out
adc
adc
nop
xor
mov
test
push
adc
mov
mov
jl
popa
mov
shll
or
mov
dec
push
imulb
roll
cmc
adc
clc
push
cmpsb
or
and
flds
cmc
dec
push
xchg
push
cmpsb
jp
fldl
aad
call
fcoml
cmc
je
imul
add
lret
hlt
dec
jo
push
push
imul
aad
mov
dec
push
popf
mov
inc
dec
push
mov
bswap
in
xorb
xor
or
cmp
add
push
dec
jnp
dec
xchg
push
xorl
jb
movsb
xor
jg
jbe
fiadds
and
cmp
sub
adc
xor
xorl
sub
push
sbb
scas
stos
scas
shr
clc
je
fldcw
dec
sub
popa
aam
mov
into
mov
push
in
pushf
pop
jle
stos
cmpsb
lods
inc
cmp
and
fisubrs
les
ss
sbb
push
in
lret
sahf
jp
mov
mov
push
shr
jge
sbb
leave
or
sahf
mov
pop
jns
cltd
pop
xchg
jp
add
cmpsb
jl
mov
stos
insl
test
cli
adc
inc
js
fmul
push
xchg
cltd
jp
imul
sbb
sahf
iret
arpl
xchg
repz
insb
bound
mov
dec
rcr
and
sbb
cld
sti
mov
xchg
mov
imul
cltd
jno
jb
imulb
outsl
push
or
sbbb
mov
inc
fsubl
inc
mov
insb
dec
push
cwtl
jbe
sbb
or
leave
pop
imul
insl
outsb
inc
push
pop
nop
inc
in
mov
xchg
jb
loopne
rol
insl
cmp
fwait
fistl
jl
loope
cmp
out
stc
pop
insl
xchg
pop
pop
sbb
or
jno
push
add
cwtl
fsts
sti
repnz
xor
bt
inc
pop
push
xchg
adc
lock
inc
and
sub
xchg
jp
push
out
lods
add
and
push
mov
jne
cmpsl
clc
mov
adc
jg
or
sub
xchg
add
and
outsl
pop
adc
mov
push
hlt
sahf
xlat
mov
mov
outsb
sub
jno
lret
hlt
push
mov
dec
inc
je
sbb
lods
mov
outsl
int
into
loop
cmpsl
fs
fs
jmp
mov
ds
mov
adc
lcall
adc
mov
inc
out
fsubl
mov
imul
dec
addr16
fists
loop
pop
call
mov
mov
mov
lret
popa
fildl
push
cmp
xor
out
js
mov
cmp
aam
inc
das
inc
push
and
sub
jnp
jp
inc
popf
jnp
movsl
pop
mov
js
test
inc
int
mov
out
subb
or
inc
pushf
pop
jbe
push
add
iret
xchg
icebp
dec
cmp
clc
inc
pmaddwd
jbe
xchg
sbb
and
push
dec
mov
outsl
pop
cmpsl
dec
mov
repz
std
lea
push
daa
lret
std
cmp
or
fistpl
cmpsb
mov
jle
insl
pop
adc
dec
mov
pop
push
lcall
jns
insl
push
inc
jmp
mov
cmp
xor
jns
incl
and
or
or
scas
fnstsw
nop
jno
inc
nop
test
and
movl
iret
dec
mov
test
lahf
push
adc
mov
dec
adc
rcrb
add
ss
pop
adc
jge
call
add
mov
decl
and
outsl
ljmp
inc
je
popf
jp
out
cmp
mov
ficompl
rclb
pop
dec
adc
shr
add
test
ja
out
imul
popf
ja
adc
or
in
dec
fistl
out
fwait
test
mov
out
jae
mov
pop
pushf
jp
test
pop
pop
push
pop
sub
mov
push
jp
fnstenv
shll
xchg
and
out
pop
pop
mov
mov
je
and
pop
cwtl
aam
cmp
cld
cmpsb
in
es
xchg
xchg
stos
inc
ljmp
xor
push
mov
arpl
les
pushf
push
fldt
sbb
inc
aam
xchg
pop
les
mov
sub
xchg
or
mov
push
lods
lahf
psubsw
push
mulb
scas
xchg
sub
adc
dec
scas
mov
jb
int3
ja
mov
cmp
mov
adc
sbb
mov
mov
in
add
mov
lcall
cmpxchg
enter
fs
lcall
imulb
lea
xchg
pop
and
dec
pop
loope
idivl
repz
fdivp
push
cmp
xchg
insb
jmp
out
push
mov
or
push
jnp
xchg
adcl
lret
mov
mov
into
and
xlat
pop
jne
cmp
push
add
call
test
fildl
into
sbb
pop
cmp
add
fsts
push
pop
xor
repnz
data16
cltd
xchg
push
dec
or
mov
mov
movsb
loop
mov
add
push
lret
lock
sahf
sbb
adc
daa
ljmp
mov
or
xchg
inc
aaa
out
add
in
in
iret
ror
jle
nop
jmp
or
inc
mov
jmp
dec
and
es
mov
das
ret
mov
xor
sbb
dec
jecxz
and
cmp
adc
iret
ss
stc
fnsave
mov
push
sub
lret
out
mov
sbb
sbbb
cmp
inc
setno
test
loope
dec
adc
pop
xchg
mov
cmpsb
jae
sti
push
stos
inc
mov
mov
jmp
cld
xchg
negb
jp
shlb
xor
jl
mov
fisubs
cmp
aaa
cmc
mov
nop
xlat
add
fistl
jno
jg
sub
test
jle
std
jmp
jae
mov
pusha
xor
push
scas
mov
jbe
sub
mov
cmp
mov
arpl
xchg
rclb
ret
ret
hlt
lret
test
aas
in
cmp
lods
clc
jmp
pop
pusha
push
ljmp
pop
jg
movsl
jecxz
cmp
mov
enter
sbb
test
adc
test
add
outsl
sbb
ret
and
mov
sbb
push
repnz
scas
push
xchg
mov
xchg
or
sbb
push
mov
lods
add
adc
insl
test
pop
addl
lods
xor
psrad
inc
inc
inc
leave
mov
stos
lds
xor
add
gs
push
mov
lds
fisubs
and
cmpsl
sub
mov
adc
xor
dec
inc
mov
jno,pn
mov
lods
dec
test
lea
js
js
and
inc
js
cmpb
je
lahf
test
shlb
ljmp
decl
sbb
mov
int3
xchg
pop
fcomi
scas
or
cmpb
out
mov
je
mov
fnstenv
mov
cmc
popaw
jp
adc
imul
mov
ja
mov
jmp
mov
sub
push
adc
cmpsl
mov
jbe
mov
nop
fnsave
leave
jecxz
ss
push
and
push
mov
ds
sub
das
push
cmpsb
cld
int
pop
sahf
inc
into
imul
sar
mov
fsts
sub
pop
test
cwtl
cli
data16
aas
xorl
or
dec
push
jae
lods
insb
jo
scas
fcoml
rcll
push
lcall
ret
jl
push
adc
push
fldcw
jle
std
pop
cmp
repnz
inc
mov
dec
sbbb
shll
xchg
push
or
pop
repnz
pop
test
lods
dec
xchg
std
pop
dec
xchg
cmp
test
insb
push
iret
jae
iret
or
sub
dec
test
repnz
test
imul
mov
loop
cwtl
fstl
xchg
mov
xchg
lret
iret
jmp
int3
push
dec
pushf
push
xchg
fdivp
inc
shr
add
mov
or
cmp
cmpsl
xchg
jo
mov
lods
arpl
or
lret
js
in
lret
scas
mov
pop
insl
insl
in
in
or
aam
dec
arpl
fwait
scas
xchg
pushf
pop
pop
in
pop
xor
and
push
mov
and
mov
aas
push
pop
mov
jge
jmp
jno
je
into
and
ljmp
cmpsb
scas
hlt
pop
lods
mov
shll
popa
lods
jmp
fisubrs
js
pop
out
cwtl
lock
inc
lods
mov
jecxz
mov
scas
adc
jbe
movl
push
in
adc
and
xchg
inc
adc
jp
pop
dec
sub
movsb
mov
and
aad
cs
test
xchg
cmp
push
ss
or
and
lock
dec
stc
imul
lock
aas
dec
in
arpl
sub
inc
sub
inc
mov
ficoml
sub
pusha
and
jp
xchg
fs
mov
in
rcl
je
xchg
cwtl
in
add
push
js
xchg
mov
sbb
mov
mov
in
call
jno
push
sbb
mov
jno
adc
sar
outsb
inc
mov
mov
sahf
pop
jg
and
or
les
mov
fs
jnp
lcall
sub
sbb
ficoms
add
adc
xor
sahf
xchg
xchg
adc
mov
scas
jnp
cmp
cmp
mov
movsl
cld
cmp
mov
xor
xor
inc
push
cmpsw
into
lcall
aam
loop
leave
inc
adc
loop
inc
mov
addr16
inc
pop
inc
pusha
sbb
dec
cmc
cmc
lock
xchg
repnz
rorb
inc
or
je
iret
mov
push
imul
push
sbb
sub
mov
leave
je
and
clc
gs
sti
push
inc
ret
decl
repnz
dec
cmp
fistl
rorl
stos
shl
push
mov
sub
add
xor
fsubs
pop
push
sub
cmpsl
jge
cs
pop
scas
sub
movsb
outsl
adc
lds
xchg
enter
outsl
sub
jg
mov
sbb
mov
stc
lock
xor
call
int3
jns
xor
int3
repz
shl
jmp
int
mov
inc
or
or
fisubrl
push
fs
push
cltd
lods
cltd
add
stos
push
insl
mov
nop
enter
mov
nop
test
lcall
lcall
sbb
adc
testl
inc
out
jne
out
pop
insb
pusha
ret
aas
insb
stc
and
add
imulb
adc
push
call
imul
xor
xchg
xlat
xor
clc
dec
or
int
pop
shl
pushl
fdivrl
sbb
je
xchg
mov
mov
xchg
fsubrp
mov
in
push
test
xchg
sub
outsb
lods
sarb
negl
mov
out
cmpb
mov
mov
fwait
dec
jle
dec
adc
xor
popa
inc
iret
int
pusha
jo
xor
out
push
lret
stos
adc
jmp
sub
dec
push
jo
jbe
icebp
mov
scas
dec
adc
lcall
dec
fdivp
jecxz
daa
aad
pop
add
shlb
fs
stc
andb
pop
popf
inc
pop
sbb
or
jle
fisttpll
call
mov
lock
mov
std
imul
add
or
xlat
fldl
fsubrs
xchg
jbe
xor
sub
mov
mov
jo
cli
mov
mov
and
pop
ljmp
scas
stc
cs
aaa
scas
xor
jae
mov
mov
pop
jo
pop
int
mov
xchg
mov
sbb
std
mov
andl
xchg
divl
jmp
fadd
pop
incl
loop
rcr
popf
push
cmc
repz
pop
add
pop
hlt
mov
or
dec
fldl
mov
push
inc
shrl
in
nop
sub
jecxz
inc
mov
and
cmp
lcall
ljmp
push
adc
aad
push
rcrb
push
mov
sub
xor
xlat
jb
xchg
notb
fs
cmp
repz
daa
pop
sub
jg
jns
daa
nop
or
mov
js
das
xchg
addr16
mov
je
les
daa
or
in
sbb
mov
lods
sbb
xor
inc
lret
test
lret
cli
jp
pop
or
jmp
in
cwtl
movsb
sub
sub
lea
pusha
sbb
insl
mov
xor
push
inc
outsl
jle
lahf
lret
sbb
mov
jecxz
in
inc
pop
cmpb
sti
std
sbb
sbb
xchg
jnp
dec
push
pop
mov
stos
adc
std
add
adc
enter
daa
jns
insl
into
pop
jl
outsb
push
xchg
outsl
imul
call
mov
sbb
loop
or
mov
xchg
movsb
jp
in
mov
pop
cmp
adc
icebp
loop
out
dec
aas
pop
and
nop
dec
imul
add
lock
xchg
les
movsb
lods
mov
add
aad
cs
jecxz
cs
push
xlat
push
test
mov
dec
jg
xor
insb
sub
mov
xchg
mov
or
addr16
xor
popf
jmp
stc
dec
icebp
lods
cs
or
popf
in
mov
clc
cmp
xchg
addl
scas
test
cwtl
and
dec
mov
push
push
or
mov
xchg
ret
jmp
fsubrl
push
rol
cmp
enter
cmc
int3
or
into
bound
xchg
fwait
cmp
lock
test
clc
stc
aas
cmpsl
cmp
cmp
adc
xor
dec
fdivl
and
inc
xchg
mov
push
test
cmpsb
lds
out
xor
leave
push
add
cmc
add
std
jb
sub
xor
sub
xchg
pop
aaa
js
adc
xchg
cmp
sbb
imul
push
xor
stc
pop
sub
loop
inc
ficompl
pop
inc
jmp
dec
adc
pabsb
jno
pop
lock
call
xchg
test
adc
in
popf
pop
sbb
xor
mov
movsb
shrb
cmc
fdivl
cmp
pop
imul
pop
fwait
or
dec
ljmp
mov
gs
into
jbe
mulb
xchg
leave
fs
cmpsb
xchg
inc
add
pop
fistpll
mov
xor
mov
mov
retw
outsl
jne
add
fiaddl
fnstsw
out
bound
jno
jne
fimuls
fbld
push
leave
sbb
das
push
shlb
push
jne
cwtd
js
roll
addr16
dec
pop
rclb
aas
inc
jecxz
sbb
sbb
pop
loopne
imul
xchg
aam
and
insb
mov
adc
pusha
in
in
pop
in
cmc
nop
test
stos
insl
test
pop
push
lods
add
dec
mov
insl
movsl
pop
sbb
inc
cmp
dec
enter
push
in
pop
aas
inc
fwait
jle
and
jp
out
lret
mov
clc
xlat
xchg
jno
in
mov
loopne
outsl
jg
pop
inc
mov
mov
jbe
lahf
in
jbe
xchg
mov
xchg
sbb
pop
ljmp
sbb
mov
push
pop
mov
mov
jl
push
je
and
inc
es
add
or
mov
mov
add
std
sub
xchg
mov
jg
cmp
add
lods
fadds
or
push
test
sbb
push
mov
and
sub
jbe
test
rcll
adc
xchg
out
ret
dec
stos
pop
loope
add
inc
test
mov
mov
ds
pop
aam
xlat
dec
in
cli
pushl
lods
lcall
ds
movsl
xchg
xchg
and
popa
dec
xlat
ds
lds
ss
cmp
je
aas
or
sbb
aam
fiadds
imul
mov
jl
pusha
mov
ljmp
xchg
ds
aad
push
push
jl
push
and
dec
mov
mov
popf
pop
or
xor
pop
aaa
subb
aaa
cld
pop
arpl
fistpll
sar
ljmp
shrb
xchg
iret
out
mov
mov
popf
scas
fcomip
xchg
das
mov
hlt
or
cmp
je
test
inc
xor
in
lahf
iret
jbe
pop
add
std
xchg
xor
pop
std
cmc
bound
sub
pop
and
push
popf
push
pushf
and
xchg
stc
orb
pop
sbb
sbb
sub
loope
in
out
sub
stos
lret
add
xchg
fbstp
insb
add
leave
fcompl
test
in
mov
daa
sahf
out
mov
in
insl
cmovb
inc
push
int3
in
xor
nop
xor
pop
adc
inc
scas
jecxz
jno
adc
and
je
jne
xor
shll
je
mov
orb
stos
mov
out
xor
xchg
cmp
dec
push
pop
inc
mov
or
mul
mov
scas
stc
inc
aas
cmpsl
repnz
mov
sbb
mov
fistl
xlat
jo
inc
push
test
lods
repnz
pop
xchg
ja
or
ds
dec
and
sarl
scas
xchg
mov
sub
and
ficoml
dec
test
fwait
into
pop
int3
sbb
or
ret
test
hlt
hlt
sub
pop
insl
mov
mov
or
ret
add
int3
out
xor
adc
sti
mov
pop
mov
loop
jmp
or
mov
js
mov
ljmp
loope
cltd
fildll
xor
cwtl
mov
rorb
mov
loopne
decl
test
jg
mov
dec
sbbb
pop
push
adc
sbb
dec
fcompl
mov
loop
mov
aas
loope
inc
pushf
xchg
jbe
lcall
cmp
imull
cmpsb
pop
out
xchg
jmp
sub
bound
jge
in
aas
pop
cs
fnsave
push
jl
test
add
enter
in
add
insb
sbb
mov
pop
cmpsb
xor
sub
xor
mov
leave
test
push
and
mov
sub
xchg
mov
out
jecxz
stos
fdivrp
in
int
pop
out
adc
sub
xchg
add
fisttpll
sbb
mov
xchg
repz
in
xchg
stos
push
pop
and
stos
mov
outsb
jmp
add
jbe
in
out
xor
movq
stos
jmp
mov
mov
nop
dec
jns
imul
clc
ja
aam
not
test
scas
scas
loopne
shll
jl
mov
push
fsub
push
jno
jp
push
pusha
add
push
push
cwtl
lock
mov
mov
outsl
sti
push
push
movsl
cmpsb
pop
out
pop
cmpsb
and
mov
add
inc
loope
push
mov
scas
push
pop
lea
aam
lret
pusha
out
sbb
push
mov
mov
xor
jnp
pop
mov
dec
mov
push
inc
pop
dec
and
sub
cwtl
sbb
pop
adc
jne
push
add
jae
mov
xchg
cmpsb
push
or
mov
pop
lods
flds
xchg
pushf
push
lds
nop
in
test
mov
xor
add
mov
shl
data16
test
inc
lods
mov
pop
dec
adc
jnp
mov
push
jbe
mov
mov
adc
and
fs
std
jb
dec
dec
adc
aas
iret
sub
insl
ljmp
mov
mov
stos
inc
inc
mov
push
and
in
daa
mov
ss
out
fnstsw
mov
inc
and
ds
inc
in
or
out
and
insb
data16
das
jle
inc
test
push
ror
push
jecxz
mov
cld
shlb
xchg
arpl
cmp
out
and
xchg
cs
or
int
fwait
dec
ret
ja
sarb
jecxz
mov
bound
adc
dec
jle
and
lcall
or
test
push
lods
mov
mov
test
test
xchg
insl
adc
lcall
sub
jp
les
lcall
or
mov
jmp
aad
lahf
aaa
add
pop
dec
in
push
daa
fwait
pusha
roll
leave
and
inc
or
test
jmp
mov
pushf
sbb
and
lcall
push
pop
jbe
xor
push
xchg
gs
adc
xchg
daa
push
or
sub
sbb
insb
es
pushf
push
inc
insl
pusha
or
shlb
inc
insl
int
cli
jle
and
lret
pop
pop
pop
test
xchg
jb
mov
xchg
sub
roll
and
jecxz
lcall
pop
lock
imul
jae
jmp
popa
add
call
jns
mov
ret
sbb
sub
std
jl
cmp
ss
mov
movsl
jns
std
icebp
addb
dec
popa
pop
sahf
pop
das
test
clc
mov
notb
add
lret
fisttps
cltd
mov
jnp
mov
insb
lea
push
xchg
pop
xor
sbb
mov
orb
sbb
xchg
shlb
cmp
repnz
xchg
es
popa
rorl
push
cmp
cmp
add
push
int
inc
je
hlt
push
xchg
pop
sbb
and
ljmp
push
pop
fnstenv
adc
pop
pop
xor
lock
mov
out
gs
icebp
jmp
xchg
js
sti
cmp
call
into
sbb
aaa
in
cmp
int3
pop
add
into
dec
xchg
and
adc
mov
mov
inc
dec
out
cmpsl
lods
xchg
xor
pop
loope
es
cmp
push
std
lea
inc
fisttpl
and
sahf
xchg
in
cwtl
repnz
int3
jg
lret
cwtl
ljmp
movsl
popf
xor
jnp
andl
mov
or
faddp
out
or
out
sub
jbe
dec
shl
shl
add
jecxz
mov
andl
jle
adc
or
inc
out
idivl
push
pop
add
sbb
ret
or
and
add
cmp
pop
test
and
mov
adc
out
cltd
daa
aas
sbb
stos
sti
dec
leave
loopne
sbb
xchg
aas
sbb
jns
push
iret
loop
inc
xor
fstpl
cmp
iret
out
adc
mov
in
mov
add
pop
push
test
js
xor
fldenv
sub
shlb
add
out
jno
cmp
pop
cltd
pop
mov
and
or
loope
xchg
or
call
xor
aaa
bound
ret
jecxz
int3
arpl
cwtl
inc
or
sahf
xchg
shlb
add
dec
fnstsw
test
mov
cltd
sti
stos
mov
subl
mov
sti
mov
idivl
cltd
shrl
mov
push
out
scas
out
cmpsl
add
mov
cmpsb
mov
fsubp
in
adc
inc
js
fwait
in
shrb
mov
sbb
faddl
pop
sahf
data16
adcb
fnstenv
ljmp
xchg
add
xchg
pop
push
ja
inc
lods
shr
xchg
sbb
stos
sub
call
das
sub
aas
push
adc
sahf
push
cmpsb
testl
mov
ret
imul
adc
sbb
xor
adc
pop
push
popf
mov
lods
mov
mov
je
call
mov
and
jl
push
leave
pop
int3
mov
cltd
mov
mov
inc
sbb
in
cmpsl
mov
movsl
xor
sbb
cmpsl
cmp
cs
xor
push
add
pop
mov
mov
cmpsb
lret
in
pop
mov
xchg
aaa
xlat
mov
mov
iret
fldcw
adc
lahf
xchg
scas
and
cltd
shll
movsb
push
mov
and
xchg
jnp
into
push
inc
cmp
add
test
leave
push
bound
push
in
mov
rorb
dec
test
sbb
aas
leave
xchg
data16
repnz
mul
dec
pop
or
daa
xor
insl
inc
pop
mov
in
cli
xchg
xor
xchg
popa
aam
mov
rorl
mov
in
scas
push
and
stos
adcl
enter
not
sbb
hlt
mov
js
std
pop
mov
cmpl
pop
or
call
push
hlt
xor
mov
idivb
scas
xorps
mov
adc
push
negb
sarl
cmp
insl
iret
int3
push
outsb
inc
adc
aaa
arpl
arpl
dec
dec
sub
je
xor
stos
jmp
add
mov
psraw
lret
add
pop
jae
sbb
add
stc
gs
lods
popf
stc
or
dec
mov
sti
movsl
and
sbb
es
sahf
add
repnz
fiaddl
hlt
pusha
jne
rcrb
push
adc
push
jp
clc
fisttpl
cmp
lds
jle
push
out
loop
movsb
lods
lods
pop
pop
iret
add
pop
outsl
aaa
into
or
mov
ljmp
pop
add
adc
cmp
lea
xor
jmp
ds
iret
loopne
popl
scas
divl
xchg
aam
cli
shrl
pop
loopne
sub
adc
jle
sbb
xchg
in
fldl
incl
jecxz
test
mov
push
in
xor
stc
cmp
xchg
push
jmp
mov
push
jns
or
inc
loope
cltd
lret
aaa
arpl
test
cltd
jp
aad
mov
repz
dec
cld
cmp
ret
push
cmp
cli
mov
jns
testl
sub
push
adc
rcrl
sbb
add
mov
jl
gs
mov
jge
cli
shlb
mov
push
jb
dec
dec
in
mov
subb
out
xor
add
pushf
jmp
xchg
jl
les
lahf
mov
data16
negb
and
sbb
cmp
pop
fs
pop
jae
jl
push
sbb
stos
int
lods
push
jae
xor
or
pop
sbb
mov
les
cmp
in
sub
add
rclb
xor
ja
mov
pop
or
out
in
jecxz
in
mov
pop
mov
adc
pushw
jo
pop
iret
xchg
insb
cmp
push
shll
imul
lret
gs
andb
fsubs
lods
mov
push
jne
lock
xchg
dec
or
jg
cmc
push
jg
aad
dec
dec
mov
cmpsb
add
cmpsl
mov
cmpsb
es
iret
inc
xor
mov
lahf
sar
clc
enter
sti
cmp
outsb
enter
push
hlt
cltd
outsl
sbb
jle
int3
and
pop
xchg
lcall
push
mov
subl
mov
movsb
push
push
scas
test
inc
or
push
cmc
mov
lods
test
mov
jne
iret
pusha
cmp
shll
xor
repz
lods
push
out
push
fcomp
jae
out
pushf
repz
int3
pusha
es
aaa
sbb
xlat
jno
movsl
cmp
loope
inc
sbb
push
mov
mov
shlb
aaa
xlat
negl
jg
sbb
pusha
loopnew
dec
push
mov
data16
and
addb
adc
repz
ds
gs
inc
shrl
adc
popa
rcl
jmp
pop
cmp
repnz
loop
movsb
xor
in
lahf
stc
xchg
xchg
dec
sub
sbb
lds
and
mov
push
stos
imul
bound
cmp
stos
mov
popf
fisttps
mov
les
mov
jnp
jge
xor
mov
rclb
jg
andb
and
xor
mov
cwtl
cmp
mov
icebp
lds
jle
mov
push
inc
daa
cmp
das
insb
pop
rcll
push
mov
jb
mov
js
pop
std
ss
rcrl
xchg
sub
gs
stos
das
and
js
cmp
push
pop
fisubrl
into
push
iret
int
inc
mov
rolb
movsl
out
jnp
mov
sub
add
cwtl
stos
cmpsb
stos
mov
mov
sarl
movsb
dec
in
jae
pcmpeqd
jge
pop
iret
jge
outsb
add
cmpb
test
imul
test
gs
push
cmp
test
mov
int3
stos
mov
pop
pop
jne
xchg
seta
cmc
mov
in
xchg
jb
mov
jle
pushf
and
mov
pushf
push
insl
mov
data16
sbb
fsubrl
xchg
mov
pop
fidivrl
mov
sbb
mov
cmpsb
mov
mov
xor
and
adc
adc
mov
test
xchg
and
xchg
ret
pop
sbbl
stc
sahf
ja
adc
jb
frstor
fldenv
adc
pop
xor
cmp
inc
mov
inc
les
push
mov
xchg
lods
rolb
adc
repz
movsb
push
and
xor
jo
mov
cld
cwtl
and
jecxz
lret
xor
out
inc
pop
std
adc
push
pop
mov
or
cld
xchg
xchg
inc
push
mov
inc
rcl
jmp
movsb
mov
dec
adc
mov
pop
inc
push
rcl
adc
sbb
int
adc
in
iret
out
fistps
mov
pop
push
jle
cltd
loop
add
mov
jge
sbb
xor
xorl
lock
rclb
inc
sbb
pop
lock
loop
cli
cmp
mov
cmp
mov
mov
add
mov
push
adc
sub
dec
mov
sbb
dec
test
xor
cmp
movsb
push
mov
pop
insl
mov
loopne
mov
fiadds
scas
mov
sbb
pop
and
sub
pop
hlt
in
mov
add
pop
mov
mov
stos
inc
cmpl
xchg
imul
mov
lea
imul
and
pop
sbb
sub
je
add
ficomps
push
jbe
lcall
jg
push
imul
xor
mov
shl
sahf
jae
scas
push
sbb
and
pop
dec
stos
loop
es
cmpsl
dec
ja
pop
push
and
adc
jbe
pusha
popf
add
out
imul
mov
push
out
inc
mov
jne
lea
push
dec
push
push
pop
enter
and
mov
stos
dec
xor
addb
test
or
jns
jmp
or
subb
and
inc
and
aaa
mulb
les
sahf
jp
in
and
pop
xchg
inc
mov
and
lds
rclb
push
cmp
xchg
jns
dec
outsl
jns
enter
out
das
icebp
adc
out
mov
xor
sub
addr16
sbb
repnz
jno
scas
call
stc
xchg
cmp
lock
in
rcr
sbb
pop
jmp
jns
es
fiaddl
pop
movsl
and
dec
jo
fldcw
fnsave
or
testl
fs
out
cmp
loop
lea
xchg
sub
out
pop
movsl
jns
push
sbb
mov
and
stos
cmp
movsb
pop
lods
mov
push
sbb
imul
or
test
inc
pop
xor
stos
or
push
ljmp
lods
outsb
scas
xchg
sahf
adc
shlb
nop
jno
push
insl
sti
mov
inc
dec
push
xor
loope
xor
test
xor
cwtl
cmp
popa
inc
shlb
jmp
lock
inc
cs
xchg
mov
inc
cmp
add
cmp
daa
fninit
das
stc
xor
iret
jecxz
mov
inc
leave
popa
mov
cmc
dec
imull
in
cmp
mov
cmp
jns
leave
or
adc
shll
imul
mov
repnz
addb
mov
cmc
xchg
cmpsl
xchg
push
jg,pn
ss
push
mov
js
push
mov
pop
xchg
sub
mov
mov
les
loope
jne
cltd
lahf
repz
loop
jecxz
push
and
insl
jmp
mov
mov
ret
xor
jns
mov
jb
xor
std
mov
rorb
rorb
fcomps
adc
rcll
sahf
fsub
xchg
aad
mov
pop
push
add
jne
repz
push
lock
xchg
pop
push
es
lods
ds
aad
push
sahf
sbb
cmp
fbstp
dec
lock
notl
pop
sbb
inc
fimull
pushf
pop
inc
cmpsl
cmp
adc
xor
dec
out
or
adc
or
pop
daa
fs
push
and
sbb
scas
add
inc
daa
jl
cmpsl
mov
popf
or
outsb
xchg
popf
jmp
mov
mov
or
mov
das
stc
or
inc
call
add
mov
dec
lret
pop
push
scas
and
loope
xor
cmp
inc
xlat
mov
pop
mov
hlt
popa
roll
aam
dec
jbe
movsb
mov
movsl
jns
iret
mov
es
inc
loop
cmp
jo
loop
stos
and
gs
push
mov
mov
pop
sbb
ljmp
fists
add
insl
outsl
add
mov
sbb
mov
rcr
ljmp
je
mov
xor
lea
adc
jmp
test
mov
xor
inc
gs
mov
jmp
addr16
ja
lahf
dec
int3
fs
mov
stos
mov
mov
movsl
jo
mov
push
in
cmc
push
imulb
jno
cld
cmp
loopne
rcrl
sahf
ljmp
lds
jno
xchg
mov
sbb
mov
sub
sbb
insl
fdivrs
mov
push
push
mov
inc
xor
adc
insb
xor
jge
pop
mov
cmp
push
mov
enter
cltd
in
cmp
and
out
mov
rcrb
out
imulb
test
pop
xchg
mov
xchg
test
lods
pop
xchg
xor
test
pop
ret
or
add
addr16
enter
sti
mulb
and
inc
mov
dec
fnstenv
popa
negl
jb
bound
mov
into
jmp
sub
enter
call
cmp
cli
pop
fcoml
mov
shrb
nop
mov
movsb
xchg
inc
jmp
lds
add
repz
les
mov
push
and
lds
adc
xchg
push
dec
mov
jae
popf
mov
loop
xor
sbbl
int
popa
pusha
sbb
push
xchg
pushf
bnd
adc
mov
inc
loop
sub
in
das
pop
les
jecxz
fildll
das
cmp
mov
int
aaa
mov
inc
or
lock
out
mov
clc
loop
test
fdivrl
xor
cmp
fildl
xor
dec
loopne
jmp
lods
test
push
xor
push
rorb
mov
lret
xor
scas
test
or
mov
dec
cs
das
movsl
inc
push
cvtpi2ps
jnp
sarl
lea
test
ret
inc
negl
mov
ret
nop
movsb
scas
push
inc
mov
das
sbb
out
repz
sub
addr16
std
les
add
aam
inc
aad
je
fwait
inc
inc
imul
mov
xlat
popf
mov
inc
pusha
jns
and
cmp
pop
jle
cmp
ret
fisttpl
inc
jb
mov
mov
fucomp
cwtl
inc
ret
out
gs
shrl
pop
daa
ss
inc
cwtl
testb
ds
jo
mov
sub
cwtl
test
add
mov
xchg
pop
aaa
or
rcl
inc
lea
je
leave
fisubrl
mov
stos
xor
mov
loop
mov
ret
test
mov
call
rclb
mov
jae
sub
fs
pop
push
dec
pusha
xor
mov
out
pop
daa
add
jb
push
fbstp
lret
rcrl
ja
and
loopne
mov
lock
jp
arpl
jae
mov
dec
mov
and
mov
lock
sbb
jno
mov
inc
pop
fdivl
movsb
pop
xor
cmpsb
pusha
lcall
jbe
or
inc
cmp
mov
xchg
and
fs
rol
push
sub
loope
mov
mov
mov
add
pop
cmpsb
or
sbb
ficoms
ss
pop
cwtl
xchg
aam
jo
jo
pushf
int3
je
cmp
cwtl
or
pop
inc
jb
inc
lds
mov
xchg
pop
pop
dec
mov
xor
mov
loop
out
sbb
loopne
mov
and
out
adc
add
mov
jne
fnstenv
aad
test
jne
fstp
sub
hlt
lds
lods
pop
dec
repz
leave
aad
fisttps
adc
lods
insl
scas
fwait
xor
cmc
jecxz
dec
stos
int
rcr
inc
push
sub
iret
cmpsl
or
in
out
sub
xchg
in
dec
out
push
je
sbb
pop
mov
sub
or
movsl
sbb
lret
mov
repnz
pop
pop
jae
cmc
xchg
movsb
mov
stos
pop
daa
inc
loopne
test
imul
push
xor
imul
stos
arpl
mov
mov
sub
out
jecxz
ret
xorl
ret
mov
add
cs
inc
xchg
jo
push
push
and
std
pusha
push
mov
add
inc
and
repz
out
imull
cmp
mov
push
dec
out
ljmp
enter
test
cmp
sbb
negl
adc
in
daa
push
add
and
xchg
inc
sub
outsb
jg
inc
jmp
pop
inc
loopne
fcoms
insb
test
out
jmp
jp
loop
dec
cmp
cmpsb
dec
mov
cmp
dec
sub
xchg
mov
push
or
jbe
lcall
push
or
out
outsl
call
pop
cmp
in
mov
mov
imul
pushf
call
lret
xchg
pop
std
addr16
movsl
stc
xchg
push
xchg
mov
adc
gs
push
mov
sbb
mov
fsubrs
sub
push
clc
inc
nop
in
imul
xchg
pop
pop
scas
shlb
adc
scas
dec
enter
adc
jns
pop
shlb
or
xor
rorl
loope
mov
in
pop
adc
mov
cmpsl
add
ss
and
xor
jnp
fwait
cmpsb
jne
pop
fsubr
lret
jb
xchg
int
and
outsl
movsl
xchg
mov
es
inc
lods
sbb
mov
lods
aaa
pusha
push
test
push
and
adcl
sahf
movsb
test
jle
mov
mov
adc
cmp
gs
loopne
pop
cmp
inc
cmp
hlt
mov
pusha
stos
mov
jmp
sar
sbb
or
sbb
cmp
push
mov
insl
fcomps
jmp
cli
scas
out
sub
dec
ret
sub
outsb
cmp
jne
pop
push
je
lock
out
add
out
cmpsl
mov
mov
mov
push
clc
mov
sbb
ficomps
cld
test
cwtl
cmp
das
xchg
lock
jecxz
lods
leave
popa
push
and
movsl
and
push
nop
jmp
cmp
outsl
inc
in
xchg
shrl
inc
dec
sbb
arpl
sbb
cmp
lcall
xchg
cs
cmp
lods
lods
jp
dec
pushf
dec
in
inc
push
sti
or
cwtl
insl
push
mov
sbb
fwait
push
insl
test
and
aam
adc
mov
pop
dec
test
lret
fisubrl
cmp
clc
mov
sti
ds
pop
daa
push
sbb
imul
add
adc
ja
je
fldl
or
outsb
mov
movsl
jle
pop
or
outsb
imul
rolb
add
jo
push
sub
sbb
or
inc
dec
push
xchg
sahf
es
inc
ss
mov
shll
imul
add
xchg
jl
insl
mov
inc
insb
xor
fnstenv
cmp
inc
test
sbbl
pop
fucomi
incl
fistpll
mov
sub
sub
add
mov
cmp
pop
aad
inc
scas
daa
pushf
iret
add
insb
push
inc
jnp
jl
hlt
ljmp
pop
inc
in
cmc
adc
sti
addr16
xlat
js
scas
mov
jecxz
mov
daa
fwait
fwait
das
adc
insb
test
mov
dec
or
imul
stos
mov
cmp
ret
push
pop
and
stos
mov
out
dec
push
inc
leave
dec
mov
lret
imull
sbb
fwait
int
jge
mov
xor
mov
clc
cs
shlb
imul
adc
jge
sbb
cmp
or
adc
mov
mov
sub
bound
inc
js
cltd
aaa
xor
shll
mov
idiv
inc
imul
or
xchg
pop
or
mov
adc
test
push
xchg
out
in
or
nop
pop
sbb
fcmovbe
pop
cld
subl
fs
outsl
loope
mov
iret
lods
mov
mov
arpl
scas
dec
push
fstpt
cmp
lods
mov
and
or
cmpsb
jp
dec
lods
add
incl
xchg
lret
sbb
xchg
dec
lret
rcll
cltd
jge
inc
stc
dec
lock
sub
cmp
cmp
mov
pushf
lods
push
enter
imul
mov
dec
mov
cmp
mov
jecxz
daa
jmp
js
aaa
lret
adc
pop
add
mov
outsb
jecxz
in
ret
mov
pop
jne
pop
test
out
sub
sub
push
add
aam
inc
aaa
cmc
mov
mov
sub
push
dec
mull
lret
test
mov
add
cwtl
pop
mov
in
push
arpl
jne
jno
jnp
daa
shlb
xor
mov
inc
xchg
std
push
fs
pop
push
lcall
flds
push
push
outsb
repnz
jmp
ja
jg
dec
push
loopne
cmc
cmp
in
aam
push
mov
jne
insb
orl
and
int3
fimull
add
insl
jae
xchg
pop
adc
arpl
les
pop
les
push
and
and
fdivrl
jbe
sub
movsb
mov
push
dec
jmp
jo
pushf
outsl
fbld
insb
mov
imul
adc
xchg
mov
std
sub
or
mov
jne
clc
sub
mov
lock
mov
fwait
jns
mov
es
dec
jo
ss
xchg
lret
push
mov
fst
jmp
and
fisubs
xchg
icebp
xor
int
push
push
jecxz
lcall
insl
adc
jbe
mov
fmull
push
mov
sub
pop
jns
mov
sbb
sti
or
push
cmp
push
and
adc
sub
inc
adcl
into
gs
or
inc
in
and
push
dec
mov
cmp
pop
das
xor
fildll
dec
adc
mov
lret
push
ret
stos
popa
aas
push
cmp
push
bound
xchg
inc
mov
js
lea
fstpt
test
cmpsb
pop
pop
test
int3
jb
je
hlt
pop
std
xchg
repz
sub
cmp
mov
into
mov
or
pop
sbb
push
inc
repz
or
je
sub
insl
mov
xchg
mov
cs
jg,pt
ret
or
jne
ja
or
or
test
mov
ret
xchg
pop
add
xchg
sahf
call
pop
out
mov
repz
add
jbe
xchg
and
xchg
mov
adc
ljmp
dec
jl
sbb
fcmovne
call
fisubrl
mov
push
jl
ret
outsl
xchg
inc
push
inc
dec
jno
divb
repnz
mov
insb
fsubl
out
lods
mov
jb
into
out
dec
jo
mov
and
jmp
inc
out
pop
nop
in
popa
pop
rcrl
cmp
adc
cli
sahf
inc
adc
rcrb
inc
and
pushf
icebp
enter
cmp
sbb
rcrb
mul
clc
add
xchg
cmp
mov
mov
and
shl
fisubl
mov
jbe
popf
or
adc
sbb
or
cwtl
gs
pop
fisttpl
fwait
inc
fbstp
xchg
add
sbb
lods
cwtl
nop
fstp
shl
retw
pushf
sbb
mov
lock
hlt
or
lret
idivb
xor
shll
jge
sub
popa
pop
scas
dec
mov
fs
inc
ja
adc
pop
xchg
adc
daa
sub
jae
hlt
mov
es
fists
mov
mov
dec
add
aam
push
pop
pop
mov
or
lret
sbb
sub
add
fistpl
add
push
mov
test
jmp
addr16
mov
dec
inc
mov
xchg
jg
push
test
jne
or
inc
icebp
or
xor
roll
sbb
or
pusha
add
or
jo
call
lds
cmpsl
ficomps
mov
scas
loope
sti
int
fisubs
fsubs
test
mov
jecxz
mov
cs
xor
jae
arpl
pop
mov
inc
mov
xchg
cmpsb
cmp
cwtl
and
sub
mov
jae
sub
add
filds
inc
outsb
repz
jg
popa
cmp
and
outsl
sub
rol
sbb
jle
test
and
dec
push
hlt
sbb
xchg
jno
mov
ss
sbbl
jb
sub
aad
pop
fwait
ja
add
out
ss
sub
xor
bound
imul
xor
fwait
adc
and
aaa
ja
xchg
loopne
sub
in
push
lret
add
or
sbb
stos
add
fcomp
xchg
popaw
mov
or
jbe
shlb
cli
push
lock
mov
add
mov
sbb
cmp
fsubrs
xchg
cmp
int3
dec
inc
mov
cmp
sarl
arpl
fs
mov
popf
sbb
adc
cmpsl
cmp
decb
cmpsl
or
imul
loopne
fisttpll
test
pop
pop
orb
inc
imul
or
pop
push
cli
push
cmp
and
sbb
call
sub
mov
push
and
popa
push
mov
push
fcomip
jbe
loop
repz
sub
xchg
gs
dec
call
pop
out
sbb
movsb
xlat
sbb
lret
push
dec
test
or
jno
jo
ret
cmp
mov
mov
test
mov
dec
push
cs
mov
push
mov
jmp
ds
xchg
orb
jg
sub
insl
sbb
mov
rolb
loopne
sub
fsubp
out
das
sub
push
cmpsb
cmp
cmc
jbe
add
push
mov
pop
hlt
in
ret
dec
xchg
mov
fcoms
cmpb
jns
push
mov
xor
jno
cmp
adc
test
jne
cmp
loop
adc
fwait
pop
repnz
hlt
stos
and
jno
pushf
cmp
fists
icebp
stos
dec
push
lds
js
dec
sbb
stos
cmp
aaa
mov
inc
add
mov
ss
repnz
stos
cmpsb
push
or
sbb
dec
adc
jo
add
push
mov
loop
pop
das
stos
stos
in
xchg
add
inc
int3
mov
cmp
loopne,pn
sub
sub
pop
test
xor
std
imul
les
and
stc
add
cmp
jmp
mov
rcr
mov
sub
mov
test
and
xlat
xchg
out
mov
mov
add
popf
nop
xchg
fwait
push
pop
push
clc
add
mov
in
mov
sbb
jmp
lods
push
inc
inc
mov
imul
testb
movsl
jae
into
lods
pop
out
adc
sub
inc
xor
jo
xchg
fisubrs
test
imul
rcrb
ds
mov
mov
aas
inc
repz
sti
add
sub
lret
push
nop
jno
es
popf
imul
mov
xor
hlt
push
inc
lahf
out
aad
imul
pushf
jge
mov
scas
or
cmp
ret
mov
loop
hlt
test
pop
lds
or
rorb
fwait
out
stos
jmp
mov
aaa
pop
cmp
pop
outsb
aaa
pushf
push
cmp
inc
xchg
cwtl
cmp
repz
inc
pop
cld
sbb
icebp
lods
lret
andl
bnd
mov
cmpsb
mov
rol
jne
adc
jg
and
xor
jno
stos
mov
out
adc
incl
outsb
push
mov
in
es
es
or
jge
add
xor
inc
push
ljmp
xor
shll
push
mov
jnp
mov
lahf
push
mov
xchg
jbe
outsb
arpl
sti
push
insb
mov
jmp
int
stos
movsb
fwait
or
push
out
sub
outsl
push
insb
lock
nop
add
in
fnstcw
jge
stos
and
lahf
xor
out
xchg
mov
in
adc
inc
in
mov
insb
insl
aam
sbb
bound
pop
fiaddl
loopne
jno
stc
dec
gs
stos
test
lds
into
lods
loope
scas
xor
inc
mov
ljmp
pop
out
mov
pop
jb
fsubrp
hlt
xchg
xchg
in
pop
mov
xchg
or
xor
int3
aas
imul
movsl
cli
fisttps
sub
mov
fwait
and
pop
or
xchg
call
xchg
stc
adc
ret
imul
mov
in
push
arpl
xchg
inc
mov
addr16
pop
ret
xor
add
adc
pop
and
xor
sub
fdivrl
jge
mov
out
nop
adc
clc
or
cmpsl
bound
add
mov
sub
xchg
sbb
dec
sbb
test
cmp
loope
mov
sbb
pushf
dec
lret
dec
loope
mov
xor
inc
xor
jns
xchg
outsl
sbb
mov
loopne
sub
cwtl
dec
push
pushf
cwtl
push
mov
jo
push
xor
mov
xchg
fbld
fldl
enter
test
xor
popf
outsl
aam
hlt
lea
inc
xchg
ffree
sub
mov
jne
fldenv
les
mov
ds
clc
pop
cwtl
push
mov
adc
fiaddl
pop
aaa
ljmp
xchg
mov
jmp
call
mov
push
data16
and
dec
jg
gs
ret
mov
sub
enter
clc
pop
xlat
add
lea
dec
adc
pop
pop
addr16
xor
stos
scas
mov
pushl
and
lods
dec
add
add
jns
adc
in
adc
shr
test
cmp
mov
mov
sbb
clc
jl
xor
or
sub
and
jmp
aas
loop
push
push
and
jae
jno
lcall
xchg
dec
jne
sbb
in
mov
sub
aad
clc
pop
in
lahf
pop
pop
mov
or
mov
add
jmp
dec
loop
mov
rorl
stc
sub
repnz
lret
pop
mov
mov
mov
int
data16
inc
dec
jecxz
lcall
daa
repnz
adc
add
push
lods
cpuid
xchg
incl
cli
sahf
lock
lds
ljmp
lret
fs
pop
and
and
popa
std
mov
fwait
mov
sbb
add
pushf
outsb
mov
iret
mov
dec
dec
pop
fxch
rep
mov
pushf
inc
jne
outsb
adc
or
jmp
pop
popf
repnz
mov
mov
cmp
xchg
sbb
out
dec
decb
pop
sub
cmc
popf
in
in
lret
je
lcall
dec
shlb
and
shr
jo
jg
push
jmp
xor
lods
inc
xchg
shrl
xlat
xor
push
sarb
and
adc
and
cli
jo
push
cmp
push
stos
ss
aas
jp
decl
sbb
test
inc
scas
push
dec
cwtl
int3
arpl
pop
mov
sahf
pop
cmpsb
icebp
imul
mov
xor
out
test
adc
insl
push
mov
xchg
sbb
xchg
xor
mull
ja
mov
xor
cli
inc
hlt
inc
xchg
mov
inc
or
pop
push
stos
jno
inc
aam
jb
addb
inc
pop
jl
and
ds
inc
mov
cld
js
loopne
sbb
or
fwait
jns
cli
push
mov
jle
add
mov
xchg
xchg
jge
sub
xchg
jp
sbb
cwtl
pushf
out
jl
dec
push
jns
xor
add
arpl
test
jo
mov
jae
jl
jmp
cmp
inc
cltd
fwait
sub
mov
push
mov
aaa
insl
pop
or
sbb
adc
das
loopne
outsb
sbb
jp
push
fs
push
in
fucom
fstps
mov
rcrl
xlat
sub
jbe
scas
push
xchg
pushw
sub
inc
ja
lods
mov
pop
or
jo
mov
sub
ja
das
push
pusha
out
dec
ficomps
mov
sub
xor
das
jmp
mov
int3
hlt
call
pop
mov
pusha
or
cmpsl
lahf
push
nop
sarb
adc
ljmp
scas
xchg
mov
int
inc
mov
test
dec
jae
test
test
call
mov
testl
aaa
fs
and
jne
js
ljmp
sbb
xchg
add
cmp
sub
iret
fsubrp
push
sahf
sub
push
cmp
and
adcl
icebp
gs
filds
movsl
jnp
adc
cmp
pushf
xchg
sub
sub
test
sbb
popf
jg
and
mov
lock
adc
mov
decb
popf
int3
mov
stos
mov
cltd
pop
ljmp
daa
adc
jg
mov
mov
loope
push
xchg
lods
or
popa
sti
outsl
nop
add
test
push
push
int3
fs
nop
jno
jmp
jge
aam
aas
sbb
stos
repnz
and
out
sub
aaa
adc
call
movsb
mov
mov
shrl
pop
sub
div
fcom
sarl
imul
or
mov
and
pushf
leave
stc
add
out
popf
jb
fbld
int
addr16
and
xchg
xchg
xchg
bound
lahf
sub
lret
out
xlat
iret
aaa
dec
jo
pop
js
test
data16
push
mov
les
and
les
int3
pop
pusha
das
mov
daa
in
and
lret
push
push
rclb
roll
movsl
adc
movsb
int3
inc
je
inc
jecxz
loop
test
sub
cmp
jno
bnd
dec
xchg
repz
pop
mov
lock
fistps
fs
loope
cwtl
pop
rol
push
aam
insl
sarl
push
pusha
xor
std
sub
sub
mov
pop
push
mov
sti
adcb
aam
imul
mov
xchg
out
imul
imul
ss
mov
jmp
outsb
mov
movl
test
test
or
in
dec
and
add
add
mov
push
dec
xchg
les
add
lods
jg
xchg
int
jne
cmp
mov
outsl
sti
adc
outsb
sbb
mov
and
pop
mov
add
rolb
push
lret
mov
imulb
inc
jecxz
out
push
mov
or
lcall
pop
ret
repnz
call
add
aam
jp
jp
mov
adc
push
fdivs
es
inc
jmp
lods
push
sti
push
sbb
or
adc
adc
sub
or
sti
dec
mov
cld
push
cmp
mov
cmp
sarl
loope
nop
loope
xchg
add
faddl
scas
mov
popa
daa
daa
movsl
mov
mov
fmuls
cmp
adc
jnp
lahf
in
out
add
push
inc
pop
sbb
nop
dec
icebp
pop
xor
stos
jg
scas
rol
xor
xchg
stos
push
jne
sti
imul
cld
cwtl
mov
test
outsl
xlat
sahf
sahf
loopne
ret
addr16
arpl
jmp
icebp
mov
add
cmp
aas
xchg
xlat
hlt
adc
sub
pop
loope
mov
sti
cmp
pop
sub
loopne
clc
subb
dec
pop
sbb
ss
pop
pushl
pop
xor
test
mov
mov
push
dec
pop
push
lock
add
or
adc
icebp
push
and
clc
iret
inc
mov
xchg
mov
ret
jb
push
mov
cli
test
mov
outsl
int
loope
test
push
xor
or
outsl
lods
arpl
push
mov
mov
cs
sahf
cwtl
out
in
repz
mov
js
or
movsb
cmp
lret
rclb
mov
in
loopne
add
pop
push
adc
xchg
sbb
xchg
fldt
shlb
dec
dec
pop
and
ret
sbb
loop
std
lds
or
or
cs
cmp
js
sbb
jl
inc
rclb
scas
mov
jle
cmp
adc
inc
inc
int
in
sbb
insl
cmc
inc
ljmp
dec
lock
jb
xlat
cmp
insl
dec
imul
movsb
add
and
jbe
dec
call
sub
dec
push
or
push
mov
jnp
insl
jns
sub
cmp
stc
lds
sbb
pop
js
daa
std
inc
icebp
mov
jae
outsb
jmp
or
push
xor
xor
ss
mov
ja
mov
popa
cwtl
or
cltd
lret
imull
ficomps
jb
push
test
jl
imul
lods
inc
push
test
push
or
insb
dec
iret
xorl
mov
in
mov
and
js
insb
add
sub
adc
pushf
aas
insl
pop
sbb
pop
pop
test
push
mov
test
in
inc
adc
rorl
xor
cmp
enter
cmc
or
mov
pop
or
dec
push
ljmp
xchg
adc
ret
mov
outsl
subb
add
inc
adc
mov
nop
mov
and
push
inc
mov
mov
std
popf
mov
mov
jecxz
push
rcr
das
push
add
add
xor
aad
pop
and
xor
mov
push
push
mov
mov
ds
jmp
push
inc
pop
sbb
pop
cmp
mov
in
jno
inc
adc
dec
sbb
sbb
inc
or
push
mov
cmp
out
or
test
lret
shl
mov
dec
lods
and
aaa
add
rcrb
sti
or
les
inc
fwait
lock
inc
hlt
xchg
mov
pushl
pushf
test
mov
xchg
jmp
xor
cmp
es
adcb
pop
jns
shlb
lcall
sbb
ljmp
or
and
cmp
rcrb
inc
xchg
add
inc
aam
and
clc
add
into
mov
xchg
or
sbb
inc
add
jae
popf
decb
out
stc
cmp
lock
cmpsl
std
test
mov
pop
cmc
cld
jnp
shrb
mov
cmpb
jnp
mov
and
mov
jbe
int3
fisttps
mov
pusha
aam
repz
fcmovnu
ljmp
andb
in
pop
pop
cltd
lods
dec
shlb
divb
outsl
movsb
loop
pop
test
ret
adc
xor
mov
sbb
xor
testl
mov
sub
push
xor
mov
js
fidivl
out
popf
xchg
repz
stc
popf
fstl
xor
mov
cmp
lea
dec
jne
mov
mov
xchg
fsub
and
xor
scas
inc
movsl
cmp
push
lds
out
or
xor
pop
in
loope
mov
outsl
out
sub
pop
sub
cltd
pusha
mov
mov
clc
lcall
pop
sub
pop
cli
push
jmp
mov
sbb
pop
fwait
jecxz
stos
ss
sbb
test
mov
jae
dec
xchg
sbb
lcall
into
or
or
hlt
mov
fwait
stc
jae
sbb
push
dec
push
daa
xchg
ljmp
shll
mov
mov
push
fbld
adcl
xchg
push
xor
stc
clc
into
hlt
mov
xchg
pop
inc
lret
cmpsl
xor
loope
or
lods
sbb
adc
int
mov
fdivl
dec
or
lahf
mov
orb
rcrl
leave
or
cwtl
mov
xor
sub
sub
nop
fsubrl
push
ror
mov
lahf
lea
out
adc
pop
sub
aas
and
fidivl
xchg
cld
frstor
bound
add
scas
mov
loopne
xchg
lret
test
in
pop
push
add
mov
xchg
mov
std
xchg
sbb
lock
decb
jp
loopne
sarl
cmp
xchg
push
pop
es
arpl
fwait
lods
mov
mov
adcb
xor
push
test
shlb
jae
cmp
and
xor
xor
subb
xor
mov
dec
mov
pop
pop
or
rcr
stc
icebp
pop
test
inc
adc
ds
xor
sub
push
mov
inc
adc
aaa
ret
cmc
sbb
mov
ss
pop
test
jle
jle
mov
nop
leave
cvtps2pd
sub
fwait
daa
rclb
jbe
add
in
jl
popf
mov
lret
sbb
xlat
fadd
setle
lahf
cmpsl
jbe
jo
scas
scas
inc
popl
push
and
sbb
xor
lcall
jmp
outsb
aas
or
stos
out
jne
cmp
mov
rcll
inc
stos
sub
xor
cltd
pop
fcmovnbe
roll
popa
dec
mov
pop
int
jge
aam
mov
or
push
ret
cmp
mov
out
les
inc
lods
mov
vandnpd
adc
inc
jno
out
pop
or
cmp
imul
out
jl
jns
je
add
call
std
sbb
mov
stc
xor
sbb
and
rolb
pop
mov
out
ljmp
cwtl
push
adc
jecxz
aaa
push
mov
mov
dec
jbe
inc
pop
std
fcompl
jge
mov
fucomi
negl
push
push
mov
outsb
stos
std
loopne
mov
dec
mov
sbb
push
lret
idivl
pop
les
rcrl
repnz
movsb
rcll
inc
or
lods
insl
paddsw
mov
cli
jl
scas
push
and
sarb
push
fld
test
mov
cmp
mov
fwait
push
xrelease
std
aaa
fstps
and
inc
jmp
jo
adc
pop
lods
jne
pop
mov
ret
imul
nop
stc
dec
ds
push
popa
jp
addb
or
scas
fmuls
rorb
mov
and
popa
mov
call
fmul
mov
sbb
mov
adc
in
pusha
mov
push
xchg
popf
jno
push
fildll
ljmp
dec
mov
sbb
ret
mov
cltd
out
stos
push
cmpsb
mov
icebp
lods
cmpsb
adc
enter
push
sbb
mov
mov
push
xchg
aad
dec
rorl
imul
xchg
cwtl
push
addr16
jnp
cmp
sbb
pop
js
mov
mov
andb
adc
rcr
mov
cmp
push
jp
ror
jne
fisubrl
mov
popf
mov
xor
repz
movsb
outsb
jge
mov
mov
insb
fisubrs
cli
push
movb
popf
inc
push
jo
adcb
push
and
push
inc
xchg
jp
cli
push
xchg
push
addr16
push
rorb
mov
mov
push
outsb
mov
xchg
dec
hlt
test
call
adc
pop
std
orl
sbb
jbe
jae
mov
mov
arpl
repnz
mov
outsl
pushf
sbb
pushl
pop
add
mov
in
sub
or
jne
js
ss
arpl
or
aaa
cwtl
cmp
hlt
jb
push
mov
jmp
ret
xchg
andb
lret
nop
lods
cmp
fildl
rcrl
adc
jb
ljmp
mov
popa
jecxz
mov
dec
sbb
jae
dec
pop
cwtl
cmp
cmpsl
inc
or
shr
dec
mov
fnstsw
sbb
int3
jbe
outsb
inc
cmc
xor
mov
stos
fcoml
aas
clc
pop
adc
mov
outsb
or
movsb
in
mov
loopne
push
xchg
or
xchg
xchg
inc
jmp
pop
rcr
or
mov
inc
xchg
cli
jae
push
popa
pusha
push
adc
outsl
clc
sbb
stos
inc
mov
or
aad
arpl
mov
push
mov
pop
add
sub
aad
in
xchg
ret
stos
add
ljmp
jae
adc
mull
add
mov
fisubrl
dec
sarl
das
imul
pop
pop
jg
and
fbld
iret
loopne
rolb
push
mov
mov
sub
fistpll
stos
movsb
lods
shr
adc
add
loope
icebp
lods
pop
aad
clc
add
jnp
in
and
xchg
xor
movsl
lea
jno
add
push
xor
push
cmp
jl
or
or
and
lcall
xor
inc
push
ror
outsl
xchg
and
sub
out
rolb
test
rorl
sahf
add
adc
pop
lock
xchg
xchg
push
push
push
out
bnd
in
int
mov
nop
jle,pt
ja
popa
sub
jae
and
push
adc
jb
ror
xor
cmp
xchg
imul
data16
lea
addr16
add
mov
mov
out
mov
addr16
ret
insb
std
adc
dec
jl
lret
repnz
pop
mov
mov
repz
xor
test
into
divps
das
das
sub
mov
test
test
dec
gs
int
arpl
int
or
add
insb
sbb
mov
jge
xchg
out
in
inc
arpl
jge
or
js
sub
sub
inc
outsb
enter
or
adc
outsl
scas
shl
and
adcb
ret
fnsave
sbb
negb
adc
and
iret
test
dec
leave
icebp
mov
sub
addr16
add
cmp
xor
data16
std
ljmp
outsl
pusha
ret
mov
fisubrs
dec
xchg
dec
rorl
add
outsb
int3
mov
cmc
dec
cmp
xchg
in
pop
xchg
push
jmp
mov
cmp
adc
out
xchg
mov
jbe
pusha
dec
pop
sarb
popa
mull
test
and
leave
aaa
mov
rorl
fcomps
sbb
add
das
jp
ss
pop
or
aas
rorl
enter
cmpsl
mov
jb
mov
aad
jge
sti
je
xchg
enter
sbb
in
incb
xchg
sub
sbb
or
movsb
jbe
ljmp
mov
inc
adc
mov
icebp
mov
andl
pop
cmp
adc
jmp
mov
pop
adc
mov
dec
stc
lods
repnz
cmp
out
test
sti
xor
sub
mov
pop
xor
loope
loope
xchg
or
pop
push
adc
fdivrl
push
outsl
mov
or
jl
xor
inc
and
in
mov
add
pop
nop
ror
pop
test
push
xor
xchg
stc
dec
shrl
fsubl
pop
testl
ret
in
sub
int
and
jbe
daa
int3
mov
inc
adc
fdivs
sub
outsl
fisubl
cltd
cmpsl
movsl
inc
sbb
lea
push
fxch
cmp
ss
sahf
xor
mov
adc
lea
imul
out
les
test
in
call
jg
pop
jo
call
inc
mov
das
push
dec
loope
pop
cli
pop
jl
cltd
fdivl
stc
int
xor
mov
dec
adcl
push
daa
xchg
repz
stc
pop
ljmp
fwait
int3
out
mov
hlt
or
add
inc
mov
or
cmp
jge
fninit
push
daa
xor
inc
scas
lea
push
or
scas
push
dec
xor
cwtd
cmp
cmc
push
sub
push
pop
cmp
mov
ret
loope
decb
jmp
fcomip
xor
lock
xchg
rcll
inc
inc
push
mov
xor
xchg
cwtl
and
fbstp
bound
frstor
adc
sub
aas
push
push
in
insb
sbb
cmp
jecxz
movsl
sbb
pop
cmpsb
mov
mov
repnz
icebp
adc
sub
fs
es
ret
mov
and
aad
cmp
push
cwtl
movsb
mov
jl
mov
xchg
loope
mov
pop
xor
std
add
xchg
jae
fucomip
aaa
pusha
sbb
outsb
fwait
lcall
pushf
clc
push
dec
push
mov
add
xchg
lds
cli
jmp
rcl
mov
out
adc
sub
adc
mov
subb
sar
sub
push
mov
mov
mov
dec
mov
xor
imul
adc
aam
push
out
daa
xor
cmp
sbb
jo
daa
daa
loope
popf
rcll
das
adc
adc
das
jns
mov
popf
pushf
fbld
jnp,pn
or
jo
cwtl
das
adc
push
push
cmpsb
je
fisttpll
js
mov
xor
mov
xor
mov
loopne
aas
inc
push
out
cmp
test
jge
sbbl
lds
adcl
rcrl
adc
lahf
ds
dec
dec
ss
and
mov
test
andb
sub
xor
popf
add
les
mov
sbb
mov
jmp
movsl
cwtl
repnz
fbld
push
dec
into
lahf
fstl
fistpl
mov
cmc
in
ja
rcrl
pop
loopne
or
jecxz
sbb
mov
jo
fidivrl
out
pop
jmp
test
ss
mov
fcompl
mov
pop
inc
mov
dec
enter
lret
dec
xor
stos
pop
xor
ret
xor
in
outsl
sbb
shl
lahf
xlat
push
sub
inc
adc
scas
inc
jb
pop
test
out
push
pop
ja
fiaddl
adc
imul
push
pop
jecxz
das
in
fiadds
movsl
sbb
sub
xchg
sahf
mov
clc
mov
das
loope
xchg
icebp
push
fs
mov
jp
cmp
adc
xchg
mov
sub
add
rolb
mov
mov
lods
add
jne
mov
mov
ljmp
and
or
jecxz
add
lods
pop
int
es
les
jle
cwtl
test
push
inc
fildll
pop
xchg
dec
test
inc
lods
out
test
cmp
psraw
or
sbb
lods
xchg
repnz
fwait
cmpsl
sub
xlat
lods
cltd
fidivl
mov
push
rcrl
xor
mov
gs
sbb
int3
xchg
add
xor
test
cltd
loope
mov
inc
jmp
out
add
mov
sbb
dec
sarb
test
xchg
add
cmp
sub
sub
mov
or
stc
push
and
push
inc
xorl
sbb
addr16
mov
pop
push
leave
sub
jno
hlt
jbe
lock
and
sti
ret
or
and
icebp
pop
mov
jno
inc
dec
sub
aad
pop
jmp
call
inc
addr16
mov
add
sub
mov
jno
mov
les
pusha
push
fistl
rcr
aam
xor
js
or
push
fwait
and
lods
inc
sub
cmp
xchg
sbb
mov
orb
xor
incb
add
fisubs
mov
popa
iret
jg
dec
imul
xchg
lret
mov
add
in
and
sbb
lods
ret
nop
lock
push
adc
push
jns
jp
shll
cmp
mov
sbb
or
mov
jne
pop
fsubr
leave
mov
mov
or
icebp
and
add
mov
in
add
adc
or
gs
sub
mov
rclb
fistpl
enter
in
lods
sub
and
cmp
repnz
cmp
pop
cmpsl
xchg
lret
imul
cmp
and
push
loop
popa
pop
addr16
inc
jp
insl
xor
out
sbb
lahf
xlat
xchg
cmpsl
adc
adc
xchg
sub
sbb
les
popf
xchg
fwait
xor
test
in
mov
and
pop
scas
cmc
rcll
sbb
mov
nop
rorb
clc
cmp
cli
ret
add
mov
arpl
push
clc
sbb
repz
out
jb
loope
add
shl
negl
mov
and
mov
lahf
mov
xchg
xchg
mov
dec
ljmp
sbb
mov
and
dec
sbb
or
mov
push
xchg
js
cmp
daa
fdivrl
test
lahf
into
mov
cmp
mov
popa
pop
jecxz
ja
mov
in
or
int
xchg
bound
cmp
lret
add
adc
and
mov
adc
mov
cmp
mov
imul
testl
xor
fcomps
insb
and
jnp
inc
insl
shll
andl
and
or
stc
out
rorb
sbb
lahf
out
dec
mov
nop
mov
mov
cmpsl
jle
faddp
push
rolb
test
sbb
and
in
jne
push
and
and
cmp
push
mov
mov
xchg
xor
jg
mov
cmpl
pop
jecxz
xchg
test
jae
cmpsl
idivl
xchg
jl
out
ss
out
mov
mov
jmp
lock
cmpsb
repz
add
cmp
cwtl
faddp
das
xor
gs
test
xchg
mov
push
xor
inc
cmp
jnp
aam
adc
or
xor
cltd
mov
popa
push
sar
mulb
dec
add
enter
cmpsl
sbb
add
fidivrl
jae
out
mov
xchg
inc
xor
pop
inc
arpl
inc
stos
stos
inc
mul
pusha
jl
addb
jnp
daa
add
lds
push
inc
lret
mov
pop
dec
jecxz
xor
dec
popf
pop
ret
inc
sbb
cwtl
mov
test
sbb
inc
sbbl
xor
gs
cmp
push
popa
pop
adc
mov
and
aad
adcl
pop
adc
stc
pop
push
adc
jle
jg
icebp
xchg
mov
int3
decb
dec
jne
or
negl
xor
or
sahf
adc
xchg
loope
sub
mov
dec
jno
in
xor
add
js
out
iret
sbb
ja
dec
shll
lods
dec
cmp
fmuls
sbb
pushl
mov
cmpsl
in
xchg
or
aaa
pop
cmpsl
inc
push
mov
into
and
out
movsb
mov
inc
in
lahf
aad
and
dec
pop
jne
test
or
xor
in
mov
mov
ret
adc
fldcw
in
ds
lock
mov
xchg
decl
or
lods
sub
movsl
mov
mov
imul
sub
or
mov
xorb
cltd
adc
sbb
jecxz
mov
ret
ficomps
sbb
xchg
jecxz
inc
cmc
int3
sub
jle
push
adc
pop
push
out
pop
ds
sbb
rcrl
cmc
adc
lret
jge
imul
pushf
int3
pop
ret
cmp
aaa
js
lahf
pusha
out
sbb
jg
shl
adc
dec
push
shrb
repnz
adc
push
shlb
testb
fisttpl
mov
outsl
cmp
ljmp
pop
xorb
cmpsb
xchg
repz
pcmpeqb
test
mov
stc
pop
lods
pop
or
mov
outsl
cli
push
sbb
xchg
jge
xor
or
insl
push
jnp
add
cmp
adc
lcall
int3
fstl
adc
inc
push
das
mov
aaa
rorb
pop
dec
inc
xor
mov
lds
jmp
fbld
and
xor
mov
cwtl
push
and
cmpsl
insb
xchg
mov
fsubl
jo
pop
cmpsb
xor
test
cmp
inc
or
jg
mov
push
sahf
push
subl
push
lods
mov
in
into
ja
mov
cld
mov
dec
or
jbe
and
adc
mov
sbb
ja
mov
enter
mov
mov
cmp
into
fs
pop
jno
mov
repz
xchg
shlb
pop
push
rcrl
inc
nop
movsb
inc
aas
out
in
subl
mov
addr16
xor
cmp
push
nop
mov
adc
sbb
push
sub
out
rcrl
fwait
mov
pop
or
jo
icebp
mov
sub
popa
mov
or
xchg
cmp
lock
sbb
jge
push
inc
sbb
pusha
aam
xor
xchg
fidivs
mov
testl
hlt
pop
add
ret
cmc
adc
inc
dec
adc
lret
into
ds
int
and
stos
jle
cmp
sub
out
sbb
sbb
das
std
js
pop
loop
imul
xorb
lods
lods
mov
xor
and
enter
xchg
push
sar
outsl
mov
scas
loop
mov
sbb
jmp
add
pop
gs
in
mov
mulb
adc
dec
and
scas
cld
fistl
lds
aaa
ja
cmpsb
push
into
xor
add
addr16
dec
push
cli
mov
push
icebp
clc
adc
nop
pusha
aam
test
daa
inc
push
adc
fcompl
insl
sahf
add
mov
sub
xor
pop
xchg
test
push
jo
push
idivl
aad
clc
loopne
ljmp
ror
popl
loopne
and
ljmp
ja
mov
cmp
pop
in
aad
pop
sahf
gs
rcrb
divl
xchg
rorl
stc
cli
ret
bswap
dec
je
ss
jecxz
leave
add
test
in
cmp
mov
add
test
xor
nop
push
push
in
mov
adc
iret
rclb
xlat
int
das
adc
movl
aam
pop
ss
push
mov
mov
mov
cs
sub
dec
adc
aaa
leave
cmp
xchg
mov
cs
insb
and
mov
push
test
adcb
mov
mov
rclb
lcall
shl
fistpl
stos
xlat
cmpsb
push
cmc
jmp
lcall
mov
je
roll
xlat
imul
loope
jae
cltd
imul
cmpsl
test
push
jno
inc
mov
outsl
jne
push
xchg
mov
mov
mov
shrl
dec
movb
mov
cmpsl
hlt
mov
cmp
lods
push
pop
push
ds
xchg
xchg
or
cmpsl
das
pop
mov
cltd
lcall
mov
xor
sbb
loop
test
enter
push
cld
pop
jb
lret
cmp
cs
mov
mov
lock
sbb
dec
bound
test
pop
mov
popa
adc
fsubrs
pop
loop
neg
pop
mov
lea
ret
pop
jge
je
femms
movsl
add
mov
add
outsl
arpl
sbb
push
fwait
stc
cmp
sbb
jg
mov
inc
push
js
inc
xor
imulb
divb
arpl
cwtl
jle
sub
cmc
arpl
xchg
idivl
adc
or
stos
cli
mov
out
jle
xchg
or
and
adc
hlt
add
push
in
inc
cmp
or
xorb
cmp
insb
and
ficoml
jo
and
mov
adc
fistpl
adc
mov
push
adc
subl
aaa
sub
push
inc
jmp
cmp
cmc
inc
adc
pop
pop
dec
xchg
push
push
fwait
or
dec
and
pop
por
cltd
xchg
mov
mov
in
shlb
jle
pop
xchg
cmpsb
push
ljmp
into
inc
xchg
jns
adc
mov
push
fbld
subl
xchg
movsb
fcmovb
shll
jo
pop
mov
adc
ljmp
push
jb
mov
xor
out
xchg
pop
les
movsb
xor
outsb
push
es
sbb
inc
aas
xchg
lds
sbb
jmp
xchg
roll
sahf
push
pop
fists
rcrl
jb
jno
mov
arpl
fisubrl
jle
dec
call
xchg
push
std
xchg
sbbb
xor
or
data16
and
or
jl
rolb
pop
idivl
cmp
sub
pop
mov
outsb
adc
inc
shlb
cli
pop
mov
outsl
inc
inc
clc
mov
mov
mov
add
pop
inc
cs
push
push
shr
dec
jle
movsl
aam
xor
adc
jg
arpl
inc
aam
xchg
sbb
gs
loop
sub
xchg
cmpsl
jl
test
andl
mov
jo
loop
ja
pop
ja
push
inc
ret
push
mov
mov
mov
pusha
push
push
rclb
pop
pop
mov
ljmp
in
lret
cltd
cmp
push
pop
cli
je
stc
cmp
arpl
leave
inc
xchg
das
rcrl
loop
pop
cwtl
sbb
ds
mov
xchg
stos
and
cmpsl
sbb
jo
push
pop
mov
in
push
and
stc
and
call
dec
jns
mov
jno
les
sub
loopne
call
sub
fimuls
jp
loop
cltd
out
dec
stos
inc
addr16
inc
add
xor
arpl
sti
mov
les
push
daa
je
jno
add
push
lods
divl
test
jl
push
mov
and
adc
xor
mov
sbb
inc
mov
mov
add
adc
push
sub
lods
push
push
out
add
xchg
loopne
sub
ja
cld
rolb
pop
mov
dec
mov
cmp
mov
les
orb
ficompl
mov
push
adc
adc
jae
pop
pushl
pop
pop
outsl
stos
xor
fnstcw
scas
adc
int
mov
mov
xchg
mov
pop
cmc
mov
add
push
enter
push
lods
push
in
js
dec
push
fwait
dec
mov
out
mov
jg
cmpsb
out
or
xor
cmpl
mov
mov
fisubs
adc
lcall
mov
lock
jle
enter
mov
cwtl
lods
or
cmpsb
rcl
push
pop
push
sarb
cwtl
or
scas
test
mov
push
sahf
mov
and
repnz
data16
mov
adc
pop
test
shll
push
mov
pop
mov
lret
pop
das
pop
xor
out
push
sub
sbb
fmul
cmp
test
jge
dec
add
push
add
fdivp
jmp
dec
push
clc
dec
fwait
mov
push
mov
push
rcrb
lea
jg
int
sbb
call
fldenv
sub
xchg
mov
xor
fdivs
mov
xor
ja
mov
test
fwait
push
sahf
shrl
inc
fildl
cmpb
jnp
mov
push
and
movsl
xlat
lcall
lds
mov
adc
mov
testl
mov
xchg
icebp
adc
add
lods
test
cld
popa
lods
insl
call
jge
cmp
mov
xor
pushf
fildl
insl
lret
fcomps
add
inc
je
push
pop
cwtl
adc
adc
inc
mov
mov
cli
ret
push
xor
xchg
outsb
mov
adc
fsubrs
jnp
jae
sbb
je
sub
sbb
dec
adc
mov
xchg
lods
faddl
mov
daa
xorl
dec
mov
jo
out
fdivs
add
cmpsl
sahf
xchg
imul
lods
ret
sbb
mov
cmc
inc
mov
mov
mov
ss
call
jp
cmp
stos
lret
add
loopne
js
inc
xlat
pop
lods
loopne
adcb
cld
pop
je
push
add
cmpsb
pop
cmp
loop
andl
sub
das
es
xor
pop
test
add
ja
je
sub
or
mov
testb
lret
sbb
pushf
insb
xor
jbe
mov
pushf
mov
lea
add
adc
pop
lods
jl
cld
pop
sub
dec
xor
jecxz
mov
push
mov
decb
jbe
dec
cld
xchg
in
cmp
jo
popf
jg
jae
sbb
sbb
cltd
ljmp
pop
cmp
ds
int3
jmp
xchg
push
dec
loop
or
mov
subl
sbb
pop
xchg
jecxz
inc
aad
pop
cmp
push
jmp
jnp
sub
int
fwait
mov
fs
lahf
ss
imul
rolb
frstor
shrl
adc
test
dec
es
imul
inc
sarl
mov
movsw
cs
mov
cli
scas
pop
gs
popa
xchg
mov
addr16
imul
fs
cmp
rorl
movsl
pusha
dec
stos
sub
cmpsl
fdivr
jmp
jg
mov
aam
scas
and
repnz
lcall
pop
lahf
addr16
xchg
shrl
ds
ds
cwtl
and
mulb
lcall
sub
hlt
push
xchg
in
xchg
xor
daa
inc
inc
gs
out
add
mov
cltd
inc
and
sbb
lds
pushf
in
or
in
sub
pusha
je
mov
mov
xor
notl
cld
dec
mov
in
int
movsb
jb
mov
movsl
xorb
push
jle
sub
add
xor
sahf
pushf
pop
sub
cmp
jae
mov
fwait
mov
mov
fnsave
clc
xchg
sub
sub
popa
mov
cli
dec
mov
ret
icebp
sub
mov
arpl
sbb
sub
rcr
add
icebp
repz
popf
movsl
sub
cmpsb
sbb
xor
and
ja
mov
or
lret
fwait
cmp
pop
scas
jg
inc
lret
cmp
movsl
subb
mov
xchg
iret
shlb
je
mov
icebp
mov
loope
and
addb
fdiv
dec
mov
xchg
mov
cmp
out
and
push
jge
loopne
adc
daa
jbe
sub
lcall
mov
nop
out
in
insb
stc
xchg
neg
pusha
or
xlat
lods
jp
mov
push
loopne
lock
pop
lahf
add
lahf
and
andl
test
sahf
jae
ds
loop
jno
jmp
xchg
mov
fistl
add
mov
scas
fdivl
insb
or
je
inc
adc
fnstcw
into
test
add
and
nop
sub
and
cmp
xor
aas
dec
fs
insl
mov
popa
das
sbb
cmpsb
das
call
sbb
xchg
fmull
mov
mov
mov
jp
xchg
loope
mov
pop
cltd
sti
fisttpll
daa
sub
dec
xor
add
and
pop
mov
sti
fimull
mov
jge
popa
addb
popa
pushf
dec
add
sahf
icebp
dec
dec
mov
xor
lea
out
jns
lcall
in
pop
and
sbb
in
dec
dec
imul
mov
std
and
dec
jle
mov
mov
pop
idivb
test
jae
and
dec
inc
pop
fwait
add
stc
xchg
in
or
loop
pop
outsl
test
jns
mov
sbb
dec
lods
test
mov
cmp
cmp
cwtl
addr16
mov
pop
sub
scas
sbb
in
push
inc
mov
and
adc
js
ss
data16
repz
ss
pop
jp
jmp
iret
and
mov
xor
movsb
pushf
les
std
imul
mov
out
push
jo
sarl
or
mov
sti
js
mov
xor
add
jno
ljmp
jg
and
dec
in
int
daa
les
fsubrs
push
sti
or
orl
popf
jnp
jp
adc
std
pop
push
lods
repz
xchg
in
lret
push
test
es
inc
push
xorb
lret
mov
ud2
sub
push
in
push
xor
mov
mov
fstpl
jl
pop
hlt
cmpsb
das
xchg
call
inc
mov
pop
jge
pop
jecxz
in
hlt
enter
adc
xchg
add
jo
cmpsl
sar
push
push
sub
dec
ss
jg
insb
jecxz
and
sbb
addr16
xor
sbb
testb
inc
jle
sbb
xchg
call
sub
lahf
dec
movb
mov
pop
sub
outsl
shll
fistl
popf
xchg
mov
dec
sbb
and
fwait
ret
jne
cs
in
into
add
mov
xchg
jno
bound
push
cmpsl
faddl
dec
inc
mov
cmp
test
les
xor
sub
xor
inc
lea
jns
jne
sarb
sbb
and
cmp
mov
sub
ds
jle
repnz
pop
scas
or
jl
push
hlt
pop
push
sbb
jle
push
dec
mov
mov
jecxz
xchg
sbb
pushf
lds
in
mov
mov
sbb
repz
in
fnstenv
inc
lret
mov
inc
ret
mov
lret
xchg
sub
stc
and
ret
std
fs
lds
iret
push
lea
jnp
std
inc
pop
cli
lods
jmp
scas
mov
sti
adc
jle
dec
test
lcall
addl
call
fsub
jnp
inc
shll
push
lahf
xchg
testb
repz
ret
inc
dec
push
cld
sub
lahf
jg
dec
pop
adc
xor
jae
inc
fisubrs
fidivs
sbb
adc
push
and
idivb
mov
lcall
ljmp
cs
mov
pop
ret
pusha
fcoms
xor
dec
lret
in
pop
fstpl
mov
ja
andb
ficoms
mov
iret
gs
xorl
call
inc
shrl
jne
out
int3
adc
inc
sub
and
pop
mov
cmpsl
ljmp
out
aaa
mov
pop
out
lods
js
or
and
mov
movsl
xor
pop
xchg
mov
cmp
imul
incb
repnz
scas
lds
add
xor
inc
push
hlt
inc
imul
inc
dec
daa
cmp
xchg
daa
shlb
sbb
mov
sub
inc
push
inc
imul
adc
hlt
fimuls
test
jg
sub
pop
add
popf
and
std
dec
int
icebp
stos
lcall
adc
repnz
adc
jbe
das
fidivl
jle
mov
and
pop
scas
sub
xchg
dec
cmpsl
int3
outsl
inc
inc
sbb
jl
out
xor
xchg
jae
in
jb
test
aam
cmp
xor
test
inc
mov
cli
sbb
xor
xor
sub
pop
push
adc
sub
sahf
push
pop
xchg
out
cltd
sbb
js
jbe
add
dec
stos
ucomiss
ss
cmc
lods
xchg
dec
sbb
mov
hlt
int3
mov
das
sar
jl
outsb
xor
sbb
or
add
pop
xor
lods
mov
int
jl
aam
add
out
cmp
push
in
lock
pop
or
fidivl
pop
dec
inc
and
adc
pop
sbb
icebp
daa
mov
xor
loope
add
push
ss
in
imull
mov
in
lahf
test
push
in
cmp
jno
loope
push
dec
int
pusha
push
into
popf
jbe
outsl
add
orl
ss
inc
aam
pop
xchg
negl
inc
popf
imul
mov
sbb
or
lret
cmp
inc
mov
into
daa
fistpl
sti
outsl
fxch
lahf
fistl
stos
into
mov
sbb
xchg
icebp
repnz
mov
shll
push
call
cli
mov
hlt
ret
outsb
inc
lods
mov
outsb
dec
ret
jns
push
and
int
push
xor
int
add
sbb
pop
aaa
cmp
je
jp
cltd
pop
int
jmp
scas
les
std
addb
or
jne
es
or
cmpsl
xor
lds
cmp
jbe
movsb
sbb
xchg
popf
push
lea
testl
inc
mov
in
sti
xchg
aad
or
in
rolb
pop
loop
mov
mov
mov
mov
xor
inc
icebp
pop
mov
call
rcrb
in
arpl
mov
imul
fcmovu
lods
xor
mov
out
mov
or
imul
push
fdivl
pop
movsb
dec
mov
adc
mov
cmp
mov
sbb
test
add
insb
lret
pusha
addb
xchg
mov
inc
cmp
mov
cmpsb
or
push
jle
out
std
dec
cs
es
xchg
into
pop
jl
push
cmpsb
imul
scas
jns
pop
les
sti
mull
jecxz
popa
mov
into
add
outsb
or
and
int
jnp
mov
test
outsl
inc
ret
push
mull
sub
push
mov
mov
in
mov
push
sub
lods
test
jae
ret
outsb
add
fcomps
outsb
into
outsb
in
mov
xchg
shrb
jae
shlb
or
das
jae
push
xor
rorb
pop
pop
jno
pop
push
out
ret
mov
iret
js
loop
icebp
mov
sbb
jbe
pop
les
xchg
in
into
enter
jg
pop
lret
mov
pusha
sbb
push
and
mov
xor
iret
cli
add
ficomps
dec
and
inc
js
shr
setbe
cmp
mov
pop
and
out
in
sub
cwtl
incb
test
inc
mov
dec
mov
insb
sbb
les
push
pop
loope
mov
push
inc
push
aad
xchg
shll
decb
adc
test
sbb
iret
jmp
fnop
lret
repz
or
lret
or
xlat
bnd
add
sub
imul
hlt
xor
inc
xchg
mov
inc
in
or
fsubp
out
pop
xor
mov
sbb
popf
mov
sub
and
jge
dec
loope
mov
cld
mov
mov
sarl
out
mov
mov
test
cmp
ja
push
inc
bound
daa
pushw
pop
pop
adc
push
mov
and
xor
cli
dec
lea
imul
nop
xchg
adc
jnp
sbb
enter
xchg
xchg
pop
push
test
xor
or
mov
pop
lcall
fistpl
cld
std
add
xor
add
adc
mov
jbe
mov
fucom
loope
bound
lea
or
pushf
jge
mov
cmpsl
xchg
addr16
aaa
sub
outsl
leave
adc
das
or
push
and
push
xorl
cmp
ret
and
pop
clc
test
rcrb
stc
adc
add
in
aad
test
test
enter
adc
iret
cmpsb
in
jb
outsb
jmp
ret
xchg
ret
rorb
sbb
shlb
fwait
mov
pop
push
xchg
mov
cmp
insb
fwait
mov
loopne
mov
push
insb
inc
test
adc
mov
sub
mov
shlb
add
outsb
add
imul
xchg
cmp
jb
jns
in
fimuls
test
pop
dec
daa
fcoms
hlt
in
repnz
pushl
call
pop
mov
cmp
mov
movsl
xchg
or
jo
xchg
repnz
mov
or
or
fcomp
aam
mov
in
cmpsb
aad
out
pop
test
insb
sahf
mov
adc
loope
pop
out
cmp
scas
adc
sbb
dec
lea
decl
jne
sbb
and
adc
push
add
movsl
jg
in
mov
psubusb
jmp
out
addr16
shlb
pop
push
andl
adc
cmp
or
pop
outsl
idivl
dec
cmc
testl
or
jae
insb
bound
decb
aas
dec
sbb
aas
loopne
push
aam
subb
jle
cmpsl
scas
jae
adc
icebp
dec
lahf
sub
mov
jp
adc
mov
hlt
xor
xor
dec
adc
gs
adc
dec
aaa
cmp
xchg
neg
movsb
inc
adc
cmc
mov
adc
cmp
ret
les
aaa
mov
dec
mov
and
loope
test
pop
dec
aas
xchg
sti
aam
ds
inc
pop
mov
and
or
clc
push
or
xor
push
add
pusha
pop
inc
xchg
inc
in
stos
push
ds
fbld
push
sbb
call
jnp
lret
jp
mov
and
test
mov
stc
sub
ljmp
cltd
cmp
mov
lock
aam
sub
testl
je
test
xchg
int
sub
daa
aaa
jmp
into
loop
cmpsb
and
pop
sub
js
icebp
ret
int3
inc
xchg
dec
lret
aad
sub
scas
dec
xor
mov
dec
sbb
mov
sbb
subb
lods
scas
pop
out
daa
fucomi
in
jns
xchg
insb
insl
lret
add
xchg
cmp
fwait
repz
add
lcall
and
inc
insl
aaa
mov
in
add
lods
or
in
insb
pop
mov
and
push
fildll
dec
dec
hlt
negb
pop
inc
mov
cmp
pop
test
ror
repz
es
out
mov
sbb
cmpsl
lock
adc
xor
mov
xor
out
dec
jg
clc
inc
sub
repnz
xlat
negb
mov
int3
cmp
or
push
por
jmp
push
xchg
sbb
stos
add
or
mov
fdivrs
cltd
jl
xor
mov
pop
add
jns
xor
repz
dec
inc
stc
stc
in
xchg
popl
xor
inc
push
xchg
jns
insb
and
movsb
dec
scas
jecxz
inc
push
mov
pop
add
mov
mov
add
ds
fmul
in
scas
sbb
sub
in
mov
mov
sbb
enter
xchg
or
sbb
sub
xchg
xor
ss
je
inc
pop
popf
push
push
test
mov
jo
inc
and
and
jle
jo
lret
mov
or
sub
pop
mov
jae
int
sahf
cmpsl
sub
sbb
xchg
cld
push
loop
xor
lods
cli
das
mov
clc
dec
add
jg
jo
or
leave
scas
rclb
cmc
in
or
xchg
sbb
dec
mov
shlb
movsl
loope
sub
insb
nop
push
lods
or
pushl
rorl
sub
lock
gs
repz
push
lahf
jg
cli
jae
fimull
fistps
into
xor
icebp
loopne
pushf
adc
xlat
pop
fs
outsl
pop
push
into
enter
lods
push
pop
icebp
popa
addr16
mov
sahf
lock
hlt
fsts
jmp
popa
mov
call
je
aas
ret
dec
test
pop
popf
popf
mov
in
scas
cmp
in
push
ljmp
pop
pop
adc
mov
push
adc
mov
je
add
stos
jb
pop
daa
jno
pusha
pop
lods
cmp
pop
pop
cmc
shlb
mov
push
ficoms
add
hlt
adc
les
icebp
and
jns
and
mov
repnz
jae
stos
daa
mov
sarb
mov
cmpsb
cmp
mov
sbb
test
push
aam
and
push
arpl
jge
jne
xchg
mov
sub
ljmp
fs
scas
cmp
dec
roll
in
icebp
movsl
js
and
lock
mov
jo
cmp
cmp
inc
push
call
jae
int
mov
cmpsb
push
cmpb
fs
enter
pushf
or
jle
mov
fcoms
and
prefetch
xchg
mov
pop
fnstcw
cs
pop
scas
add
subb
pop
xor
ds
in
lret
outsl
gs
clc
insl
or
data16
jecxz
ret
and
jnp
jmp
xor
add
shl
sub
clc
add
cld
stos
jmp
in
push
push
inc
push
jl
lret
mov
popf
ljmp
or
and
call
sub
cld
cmpsl
push
and
and
add
pop
lds
mov
sub
xor
jbe,pt
jb
arpl
mov
cld
jo
test
or
sbb
mov
fs
xor
pushf
testb
imul
mov
aam
lret
push
mov
sti
scas
pop
mov
dec
mov
mov
sub
mov
cmp
jae
and
movsb
xchg
clc
pop
add
sbb
jg
mov
pop
mov
in
es
mov
insl
mov
lods
hlt
shll
addl
lret
shrl
dec
xchg
mov
xchg
repz
in
inc
fs
mov
subb
push
jo
adc
and
dec
mov
aad
pop
cmc
movswl
clc
inc
jmp
sbb
add
call
inc
mov
mov
sbb
xchg
pop
fsubrl
test
ja
lods
mov
sbb
xlat
mov
dec
cwtl
cmp
jle
jmp
sti
movsl
xchg
addl
pop
adc
xchg
inc
jne
fisttpl
mov
insb
pop
inc
ss
test
test
mov
add
lret
pop
pop
bound
xchg
dec
add
in
inc
hlt
movsl
out
xchg
shrb
mov
mov
shlb
mov
mov
loope
aam
cli
xor
stos
frstor
ror
dec
adc
repnz
push
mov
fwait
xlat
cld
push
push
and
xchg
jb
lcall
gs
pop
xlat
dec
mov
in
sbb
mov
sti
popf
or
mov
popf
xchg
sub
pop
push
xor
orl
sub
outsl
inc
or
jle
movl
shl
out
int
popf
pop
pop
cld
sbb
mov
out
in
mov
fbld
clc
filds
mov
les
loope
clc
xor
jno
orb
sub
stos
std
cmpb
mov
fsubrp
add
dec
leave
and
not
adc
ror
orl
push
jne
xchg
imul
lods
gs
lock
and
or
xor
mov
sbb
outsl
pop
mov
mov
xchg
je
inc
out
xchg
push
xor
out
stc
sbbl
in
inc
loope
ss
xor
pop
xor
out
fildl
in
jns
imul
pop
pop
into
ficompl
popf
xchg
mov
ja
scas
xchg
fs
adc
xchg
imul
mov
dec
mov
popf
int
call
popf
loopne
adc
call
test
imul
lcall
adc
imul
inc
mov
jo
mov
andl
lods
loopne
xchg
sbb
testl
add
xor
sbb
scas
mov
std
jecxz
xchg
cwtl
push
ret
inc
aam
xlat
or
int3
pusha
mov
adc
shr
rclb
jecxz
ljmp
cmpsl
das
fldl
cmpsl
into
test
iret
enter
ds
sahf
ja
jl
mov
cmp
or
das
cmp
mov
out
mov
xor
xchg
out
fstpl
push
or
bound
scas
or
and
out
xchg
mov
cmp
pop
pop
mov
jmp
loopne
leave
cmp
jg
cld
xchg
nop
push
xchg
gs
dec
mov
cmpb
sub
xor
ja
leave
push
mov
xchg
mov
jle
stos
fstpt
aaa
pop
popa
mov
mov
mov
movsb
lock
push
dec
lret
pop
push
inc
hlt
jg
lahf
mov
add
imulb
mov
loopne
or
lahf
xor
lcall
adc
aad
jb
pop
sub
add
data16
je
in
mov
mov
mov
jae
cmc
adc
sahf
mov
insl
inc
sub
inc
popf
inc
orps
mov
fildll
xor
sub
es
xchg
xchg
bound
mov
out
sub
dec
cmp
dec
pop
lea
xor
cmp
and
aas
fs
or
jmp
das
or
mov
lods
xchg
pop
imul
call
fs
iret
push
sub
inc
test
pop
fdivr
popf
jle
inc
adc
and
gs
mov
cmpsl
repnz
push
aad
mov
aas
push
xor
pop
icebp
cmp
lret
test
pop
shlb
mov
dec
fwait
gs
xor
popa
shl
jb
and
sub
gs
outsb
pop
dec
pop
cmp
jp
mov
jb
push
and
cmc
jno
pop
and
mov
ljmp
cltd
fcompl
dec
mov
pop
movsb
jne
sbb
popa
call
mov
push
jnp
mov
dec
mov
sarl
cs
cld
stc
lea
js
iret
dec
ret
or
test
std
and
std
or
and
repz
add
incb
ror
jp
call
or
pop
ds
stos
or
sbbl
outsb
jp
gs
ds
mov
xchg
iret
sub
jbe
sub
mov
insb
mov
rorl
hlt
sub
mov
adc
pop
stos
arpl
sub
inc
loopne
inc
in
movsl
lods
or
xor
cmp
xor
mov
pop
mov
rorl
fsubp
lret
inc
mov
adc
jb
dec
mov
mov
push
loop
cs
sub
test
inc
sbb
sub
fistpl
jmp
sti
out
dec
addr16
int
or
mov
rclb
push
sbb
enter
pop
jge
lret
imul
mov
mov
xlat
pop
add
insl
cmpsl
aam
popa
dec
movsb
shr
aaa
mov
rorl
out
sub
test
leave
mov
sbb
rcrb
inc
mov
lds
stc
cli
xchg
pop
rolb
ret
add
mov
xchg
icebp
add
cmp
sub
stos
or
and
fcomps
dec
jno
test
xchg
sub
scas
jecxz
add
add
adcb
xchg
add
mov
stos
cmpsb
cli
or
shrb
scas
testl
xor
jp
cwtl
dec
inc
mov
fldenv
rorl
ss
push
push
mov
mov
cmp
sub
fsubr
and
ret
lret
shrb
mov
dec
pop
jle
xor
adc
scas
cmpsl
ret
mov
pop
pop
mov
bswap
dec
cltd
cmp
push
nop
lods
out
sti
pushf
and
or
cmp
add
or
iret
push
js
lods
fs
fxch
mov
pop
xlat
add
add
mov
stos
mov
inc
lcall
adc
scas
ss
pop
call
pop
loop
cmpsl
or
cmp
lock
ret
cmp
in
test
jae
pop
sub
imul
and
jne
icebp
or
push
xorb
sub
int
sbb
and
ret
sub
shlb
cmp
stos
cwtl
addl
sub
addr16
cmp
rclb
in
lahf
out
sub
iret
mov
adc
scas
les
das
xor
ja
dec
push
and
jmp
outsl
rcrl
inc
aam
nop
sub
cltd
insb
jae
pop
inc
jo
sub
mov
fstps
pop
ret
mov
loope
mov
push
dec
pavgw
dec
pop
shlb
rcr
sbb
aas
or
mov
pop
push
in
cmp
cltd
jl
mov
sti
jl
mov
mov
int3
scas
stos
xor
ss
cmpsb
push
adc
add
add
ljmp
repnz
sbb
xchg
rcr
or
out
sbb
push
adc
decb
mov
faddp
data16
mov
adc
adcl
jl
and
popl
scas
jb
jle
js
add
sarb
dec
std
mov
mov
sbb
add
sub
add
fcoml
fs
aas
lods
lea
mov
sbb
movb
xor
fistl
push
push
nop
pop
mov
mov
repnz
aas
mov
in
sub
and
dec
std
fs
sahf
mov
fmull
in
flds
push
sbb
fwait
sub
jmp
stc
loopne
sbb
in
push
jge
scas
add
pop
aam
or
push
jno
fs
aam
xchg
fildl
stos
xor
and
les
sub
pop
or
stos
sbb
pushf
sahf
adc
loopne
add
or
enter
out
ret
cwtl
ds
call
repnz
dec
ficoml
pop
icebp
pop
ret
add
insb
or
std
adc
fwait
mov
sahf
test
sub
outsl
rolb
cli
pop
dec
arpl
add
or
mov
push
cmp
mov
inc
adc
ss
adc
sbb
push
push
fiadds
arpl
loope
mov
cmpsb
cmp
mov
and
sub
sti
rcrl
flds
xor
icebp
mov
add
cmp
movsb
out
add
maskmovq
mull
jbe
adc
repnz
add
int3
and
mov
jb
stc
and
sbb
imul
sbb
or
sub
cmpsl
mov
xchg
xchg
out
push
psubsb
js
push
inc
movsb
aam
mov
xchg
int3
xor
test
mov
xchg
fcmovu
sbb
mov
int3
jns
xchg
sbb
fldt
inc
mov
cmpl
cmc
inc
xchg
cmpsl
sarl
arpl
dec
lret
in
popa
lret
sbb
add
aad
hlt
push
pop
adc
push
sbb
jmp
lahf
mov
mov
outsl
les
fistpl
push
push
mov
enter
mov
mov
sahf
xor
flds
jl
popa
sbb
lcall
cwtl
movsl
repz
adc
imul
or
push
out
push
stos
pop
dec
adc
dec
sbb
arpl
dec
bound
xchg
fisubrl
cltd
adc
pop
adc
xchg
lea
pop
popf
cli
fs
xchg
pop
adc
adc
ret
xchg
and
js
in
push
and
mov
jno
mov
mov
pop
in
sbb
scas
mov
repz
out
icebp
jns
ds
push
pop
mov
mov
sub
std
loope
cmp
or
shrb
hlt
je
jno
mov
shll
sbb
inc
inc
jne
or
imul
test
lods
cwtl
xchg
and
sub
hlt
and
ret
movsb
inc
inc
mov
out
std
mov
lcall
jge
cmp
push
mov
inc
out
sub
lret
sbb
add
inc
inc
in
pop
mov
cmp
sub
sbbl
sbbb
lret
test
mov
dec
js
inc
rolb
lahf
out
aaa
mov
xchg
lret
ljmp
out
push
nop
int3
adc
iret
xor
mov
pusha
jbe
push
mov
je
pop
sbb
push
push
push
pop
test
ds
sbb
iret
daa
shrl
es
jmp
sar
or
scas
mov
scas
test
fdivrl
pop
movsl
repz
xchg
popa
mov
shrb
adc
xchg
fcompl
jmp
stc
das
icebp
push
pop
sub
mov
scas
add
stos
lods
test
das
pop
push
sub
add
aas
ficomps
lret
aas
cld
daa
icebp
lcall
movsl
xlat
push
adc
lret
sbb
jge
lods
push
popf
cli
mov
push
gs
adc
mov
daa
movl
push
in
mov
jne
inc
or
xchg
lock
or
mov
enter
mov
loope
gs
lods
xor
dec
fisubrl
out
mov
xlat
inc
sub
and
add
roll
in
and
sarl
jmp
and
sub
or
push
dec
sbb
pop
dec
insb
int3
and
cmp
test
dec
aam
rorl
shlb
mov
stc
and
and
or
mov
adc
bound
mov
xchg
gs
loop
dec
jb
je
nop
xchg
mov
cmpsl
loopne
xchg
sub
insb
cmp
imul
sub
push
mov
mov
movsb
push
xchg
scas
mov
test
dec
push
dec
aad
fistpl
xchg
mov
rcll
sub
cld
icebp
subl
inc
icebp
cwtl
sbb
xchg
sbb
ret
mov
fwait
or
sub
test
shlb
dec
push
js
mov
dec
jbe
arpl
mov
enter
fwait
and
mov
jbe
hlt
sub
les
ja
mov
arpl
or
mov
sub
cli
mov
mov
jae
push
stos
loop
mov
insb
cmpl
es
xor
bound
fmuls
push
addr16
jp
andl
sbb
xor
inc
add
negb
js
sbb
repz
xorb
test
pop
scas
lock
in
fcoml
sub
cltd
into
and
lahf
ucomiss
mov
fsubrs
adc
xchg
pop
ljmp
and
cmc
arpl
test
cltd
repz
gs
mov
pop
mov
repnz
pop
cwtl
adc
clc
fs
mov
fcoml
or
pop
mov
lcall
sub
mov
movsb
les
popa
dec
xchg
sti
hlt
xor
imul
inc
xchg
repz
in
mov
stc
or
rolb
jecxz
in
mov
sti
into
shrb
mov
cmp
cltd
bound
inc
xlat
sbb
push
outsb
mov
jmp
pop
adc
xor
or
jnp
ror
jmp
rcll
cmp
icebp
sub
pop
jge
jno
pop
adc
xor
jno
leave
ja
dec
iret
pop
or
stos
lods
imul
cmpsb
or
add
ret
jbe
xchg
mov
or
je
mov
sbb
cmp
cmp
icebp
jns
add
incl
shl
aad
push
arpl
pop
pushf
movsl
faddl
xchg
inc
push
pop
lret
pop
movsl
rolb
loopne
test
jo
mov
aaa
jo
movsb
cs
add
cmp
and
jmp
leave
fs
xchg
testl
ss
push
mov
repz
ret
cmc
mov
push
mov
push
je
es
xchg
imul
fistl
lret
push
inc
scas
jmp
inc
addr16
mov
mov
pushf
iret
mov
add
inc
call
sarb
cmpsb
stos
lret
sub
mov
fmul
sbb
dec
pop
or
ljmp
fwait
dec
flds
roll
insl
jne
imul
cmpsl
out
adc
xchg
pop
mov
fwait
iret
add
push
cmpsl
sbb
lds
mov
cmp
in
xchg
enter
testl
sub
mov
pop
or
call
push
xlat
dec
jmp
rcrl
sbb
test
repz
sbb
xchg
mov
cmpb
scas
arpl
push
mov
adc
enter
jp
out
mov
or
adc
add
mov
and
mov
popf
jp,pt
les
sbbl
inc
push
test
test
xchg
pop
adc
outsl
lret
cld
addr16
std
cmp
mov
pop
jae
les
scas
shll
and
adc
push
mov
fdiv
inc
dec
out
insb
ret
btc
dec
shll
mov
mov
jo
fldcw
dec
jg
rorb
repz
sbb
push
fcomip
out
and
cmp
dec
sub
add
fwait
xchg
rolb
ja
push
pmaxsw
jbe
andl
fs
setle
mov
sbb
stos
dec
sub
bound
out
and
je
mov
fdivrl
popf
xor
leave
lds
jb
mull
jp
cmpsb
jecxz
and
dec
inc
imul
sub
cli
fisttps
mov
fsubrl
cmp
xor
pop
rcr
pop
or
imul
xchg
int
inc
cmc
mov
ret
loope
ss
in
mov
inc
cmp
cs
fdivr
dec
js
push
mov
orb
pop
in
mov
jl
xchg
subl
js
mov
jae
mov
inc
mov
adc
jbe
sub
and
and
mov
or
xchg
push
xor
outsl
ja
sbb
and
test
jp
mov
pop
sub
xchg
out
sti
outsb
inc
mov
add
sbb
sbb
or
or
leave
cmpsb
rclb
test
fwait
mov
push
nop
fsts
les
imul
pop
mov
push
xchg
addr16
xchg
dec
mov
jmp
mov
xor
arpl
shll
pop
cwtl
lcall
cmpsb
mov
xor
popa
and
div
dec
dec
push
pop
scas
sbb
mov
push
iret
imul
and
ret
inc
dec
repz
or
mov
imul
aas
and
jbe
sub
jecxz
cmp
pop
cmpsb
popf
cs
in
xchg
inc
into
gs
cld
ds
imul
or
sbb
mov
mull
and
mov
jecxz
lret
and
shlb
pop
jmp
pop
cmpsb
mov
mov
sbb
jecxz
fstpt
icebp
push
adc
dec
repnz
cmp
jb
rclb
scas
jns
je
xchg
negl
sti
icebp
ret
xlat
cmpsb
push
sbb
int3
icebp
mov
xchg
and
jp
shlb
test
sbb
repnz
push
dec
aam
and
cmp
in
filds
cmpsl
jge
lods
aad
or
fcompl
lock
xchg
stos
addb
pop
xchg
push
test
jnp
pop
int3
cld
bound
inc
out
jl
lret
push
sub
jle
mov
add
lcall
jbe
in
or
movsl
cltd
mov
pop
hlt
int
aaa
int
push
push
xor
xlat
rorl
dec
repnz
fstpl
pop
bound
mov
lret
lods
mov
scas
pop
lret
les
lahf
and
mov
sbb
sbb
xor
sub
cmpsb
pop
orb
jg
in
cmp
ja
add
aas
xchg
sub
cltd
and
fwait
pop
sbbb
sbb
rorb
ja
rorl
leave
stc
daa
mov
add
mov
mov
sahf
xchg
bound
lret
test
inc
mov
and
add
mov
push
pop
stos
add
in
pop
mov
mov
out
jmp
jg
jne
jnp
pusha
das
mov
inc
icebp
fisubs
testb
add
jecxz
or
xorl
xchg
inc
je
pushf
fsub
xchg
mov
mov
pop
ljmp
aas
push
lret
int3
xor
pop
data16
scas
iret
pop
and
ds
jle
or
insl
mov
or
add
int
or
cmp
fidivrs
pushf
cmp
push
mov
add
cmc
bound
lcall
lea
test
aad
jmp
stos
mov
and
adc
push
or
pop
loop
sbb
push
sarl
test
xchg
loop
out
or
nop
loope
dec
cld
pushf
mov
adc
lds
and
adcb
mov
int3
cltd
data16
dec
out
rolb
daa
jae
lret
adc
outsb
dec
stos
mov
lahf
or
out
mov
dec
xor
push
sbb
out
jle
divl
sub
movsb
jle
inc
stc
mov
aas
cmp
shrd
mov
or
fcoms
push
out
fstps
xchg
or
xchg
leave
mov
jl
jg
fwait
mov
out
add
stc
adc
mov
inc
or
fnstcw
jp
pop
mov
sub
movsb
inc
xor
push
mov
jbe
push
test
ret
inc
movsb
or
adc
cmp
mov
mov
push
and
addr16
mov
push
or
jbe
iret
push
mov
xchg
push
jns
adc
push
xor
sbb
sbb
add
xchg
xor
stos
js
lahf
fwait
adc
sahf
push
sahf
psrlw
outsb
out
int3
and
adc
pop
mov
mov
jbe
jo
icebp
push
mov
call
dec
jae
in
sti
or
stos
ja
xor
xorl
mov
or
and
rorl
cs
jle
lods
popf
push
pop
stos
sub
insb
xchg
dec
int3
mov
add
repz
mov
add
and
cmpsb
mov
rolb
xchg
pop
ficoms
repz
std
xchg
adc
loop
test
add
cmpsl
loopne
pop
sbb
aad
fisubs
mov
jnp
dec
and
mov
and
xchg
pop
lods
jns
dec
aad
addr16
xchg
pop
std
jg
mov
sbb
xor
jge
getsec
insl
insb
pusha
sub
mov
adc
mov
jbe
lahf
mov
and
scas
mov
inc
xchg
jge
jmp
jmp
ljmp
xor
enter
pop
insl
mov
pop
aas
jg
xor
or
jmp
push
outsb
rcr
xlat
cmc
push
push
add
les
push
int
push
mov
jmp
mov
pushf
dec
lds
clc
xchg
scas
out
scas
insb
addl
fwait
push
cmp
pushf
dec
sbb
and
jmp
cld
das
shrb
test
dec
push
testl
sbb
cmc
lret
dec
pop
clc
enter
rolb
mov
insl
cs
mov
dec
cmp
mov
inc
pop
mov
loope
in
pop
pop
repz
imul
cld
mov
outsl
cli
push
scas
mov
aaa
filds
cmc
outsl
loop
pop
in
xor
push
rcll
mov
adcl
pop
inc
and
cmpsb
fs
lods
rcl
call
stos
adcb
mov
inc
jmp
mov
insb
in
xchg
outsb
dec
sub
pushf
fdivrs
xchg
iret
adc
mov
es
aad
adc
ds
lds
mov
or
lods
add
push
or
mov
vunpckhps
scas
addr16
scas
inc
cltd
dec
iret
push
in
loope
or
xchg
imul
out
inc
sub
inc
lods
std
mov
sahf
stos
jp
sar
inc
add
xchg
nop
test
xchg
jo
rol
and
mov
and
test
addl
inc
add
call
xchg
adc
sti
in
mov
aad
adc
into
popa
in
test
mov
xlat
cli
inc
and
dec
xchg
rcrb
enter
push
push
std
stos
into
movsb
shlb
lret
out
mov
mov
xor
or
repz
aad
xchg
cwtl
cli
jecxz
sub
jns
out
adc
aas
dec
sbb
mov
xchg
push
jbe
mov
jnp
inc
push
jne
xchg
or
xor
xor
lcall
sbb
mov
aaa
mov
xor
cs
jne
cld
test
inc
xchg
ds
fs
lds
xchg
dec
pop
inc
and
daa
cmp
rcrb
ret
mov
call
test
sbb
add
jmp
hlt
fldl
jle
xor
sbb
push
aad
dec
xchg
test
jmp
jns
lds
and
loope
jp
jmp
push
and
cmp
jle
sarl
loop
pop
xor
sahf
and
gs
mov
mov
xchg
pop
gs
add
cwtl
adc
sub
or
bound
and
xor
in
cmp
adc
scas
std
cld
xlat
in
inc
push
and
fsts
orl
cmpb
lret
cmpb
mov
je
lock
daa
pushf
push
lock
inc
test
orb
pushf
jle
insl
sti
xor
out
mov
enter
test
sub
cld
testb
in
repnz
xor
subl
jne
bound
pop
push
push
sti
xchg
mov
mov
dec
sub
dec
js
hlt
call
sub
addr16
ljmp
movsb
sbb
imul
mov
and
sbb
loopne
jge
dec
outsl
mov
fistpll
push
and
sub
cs
shrl
roll
clc
pop
cld
push
dec
icebp
sbb
mov
xlat
jle
aas
add
in
and
add
sahf
std
stos
ss
mov
and
shrl
cmpsl
xor
paddsb
pop
xchg
repz
adc
adc
adc
pop
mov
leave
xor
subl
movsb
insl
sbb
ss
decl
ja
cmp
mov
sbb
push
insb
popf
out
daa
out
mov
mov
cltd
jae
xor
ljmp
push
mov
lds
call
aas
sbb
push
dec
inc
ficoml
push
mov
xor
nop
mov
sahf
add
out
scas
leave
inc
sbb
fistps
lret
lods
push
mov
lret
aas
loope
adc
mulps
push
adc
loopne
cmp
dec
mov
adc
test
jmp
or
shlb
andb
jg
xchg
jl
mov
fwait
mov
jae
mov
sub
popf
lahf
mov
jbe
clc
lds
dec
out
stos
xor
icebp
je
mov
ret
nop
add
adc
clc
pusha
push
je
popa
out
xor
sub
shl
aam
sub
cli
add
add
xchg
loopne
dec
aam
out
pusha
in
and
outsl
insl
cwtl
test
fstps
les
stc
inc
incb
sbb
xlat
jmp
push
scas
mov
std
or
pusha
aad
repnz
arpl
add
add
je
negb
mov
jl
imul
mov
and
sbb
push
leave
mov
cmp
mov
rorl
adc
cmp
sub
in
enter
lds
add
pop
xchg
mov
orb
into
jb
jns
nop
call
leave
les
push
cli
aam
mov
jg
pop
aaa
sub
sub
jle
test
stos
leavew
jp
sub
outsb
dec
pop
in
stos
mov
lret
sbb
adc
adc
sbb
int3
cmp
test
incb
add
push
insl
rcl
jae
sti
or
stc
mov
hlt
lahf
test
leave
jp
in
push
das
icebp
clc
mov
inc
mov
add
enter
push
repnz
cwtl
andl
mov
inc
xchg
xabort
push
int3
push
push
stos
jbe
inc
notl
icebp
xchg
aad
pushf
pusha
aas
into
ror
push
pop
xor
or
adc
fcom
push
or
pop
mov
adc
xor
cmp
xchg
pop
sti
mov
push
pusha
jle
sub
add
xchg
jno
hlt
cmp
test
outsb
sbb
dec
inc
inc
pusha
or
lret
aas
or
pop
push
mov
mov
fwait
ret
out
pushf
sbb
mov
mov
ds
in
repnz
btr
xor
add
inc
pushf
cld
and
adc
sub
dec
mov
add
jp
mov
popa
add
imul
cmp
scas
push
xchg
popa
ss
mov
nop
movsl
fcmovnbe
mov
cmp
cmp
and
adc
inc
clc
jecxz
mov
and
add
jmp
out
insb
dec
lock
enter
inc
in
scas
and
in
mov
dec
outsb
lock
mov
mov
fildll
call
mov
aad
add
aam
sbb
sti
inc
mov
fdivrs
pop
testl
mov
or
xchg
push
cmp
test
icebp
push
jne
popw
adc
shrl
movsb
test
test
mov
addb
xchg
mov
test
movsb
sbb
pop
fldcw
sbb
les
and
push
push
lret
js
adc
stos
add
mov
adc
or
subb
rcll
xor
add
or
jmp
daa
ret
mov
int
pop
int3
mov
lods
cmp
dec
mov
inc
adcl
adc
movsb
inc
outsb
mov
js
repnz
or
stc
cwtl
push
inc
stos
sbb
out
sbb
cmp
pop
xchg
add
imul
in
aas
icebp
dec
pop
pop
sub
cld
sub
mov
out
lcall
ja
ds
mov
mov
mov
xchg
lds
dec
repz
insl
js
adc
fisubrs
push
cmp
or
fwait
or
and
inc
inc
jne
and
rclb
je
in
or
shlb
mov
out
or
mov
push
popf
andl
mov
push
lahf
lret
in
jle
js
or
dec
in
arpl
in
add
sbbl
sub
popf
pop
cmp
cmp
imul
or
clc
setl
andb
mov
cmpsl
push
dec
mov
and
inc
adc
sbb
std
xor
sub
loope
sub
mov
icebp
sub
ret
ret
clc
pop
loope
mov
sub
addr16
xchg
imul
in
push
fildll
test
push
jp
mov
mov
lret
stc
in
in
mov
xchg
scas
out
sbbb
add
int3
and
mov
mov
push
dec
into
outsb
jle
dec
mov
jle
inc
and
mov
dec
jmp
push
and
or
mov
imul
lsl
shrb
xchg
xor
aam
jb
jno
aam
sub
stos
shl
jno
adc
iret
and
push
aaa
xor
sub
sbb
mov
xor
sub
fsub
pop
cltd
sub
jb
nop
mov
pop
jne
and
jo
and
inc
adc
or
push
sti
jne
pusha
lret
fadds
loopne
xlat
aad
shr
add
push
dec
fistps
cmpsb
stos
cmp
add
insb
std
test
push
mov
xchg
mov
mov
cmp
mov
xor
xor
dec
xor
and
and
mov
dec
inc
pop
xchg
push
pop
and
jae
sub
lea
add
inc
dec
xchg
roll
ljmp
jle
sti
cmp
cli
push
pop
dec
repz
inc
pop
hlt
and
jns
jecxz
inc
and
enter
and
jno
aam
rclb
sbb
cmpb
paddd
pop
cmpsl
or
lret
inc
mov
sbb
fisubl
cmpsl
imul
push
xchg
xchg
fstpt
call
inc
mov
cld
ljmp
jns
inc
or
adc
dec
ss
dec
push
inc
dec
and
mov
jno
mov
mov
pause
out
or
xchg
aad
imul
fwait
cmpsl
loope
xor
mov
inc
sub
xor
cmpsl
pop
sbb
cmp
and
push
insb
mov
cli
push
test
js
adc
rclb
jne
es
in
dec
jle
lahf
dec
and
divb
popa
dec
push
cmpl
in
pop
ja
pop
jo
jle
popa
sub
aam
jmp
jg
fiadds
lds
push
mov
fstpl
movsb
jb
stc
dec
mov
xor
add
ret
lahf
stos
push
insb
imul
dec
test
xor
loopne
popl
mov
movsb
pop
cld
add
adc
stos
mov
push
fnsave
xchg
setge
and
jno
adc
inc
mov
addl
loope
filds
xcrypt-cfb
cmpsl
popa
nop
lock
mov
lea
lods
fmull
clc
cli
cmp
lods
ret
mov
sbb
add
sub
lahf
push
incl
pop
push
aaa
dec
aaa
daa
mov
jmp
and
and
add
pusha
sbb
fwait
sahf
jnp
ror
jnp
push
scas
cmc
scas
lock
enter
xor
arpl
jns
xor
shlb
lcall
and
addr16
jno
imul
repnz
out
pop
daa
sub
xor
jge
dec
iret
cld
std
xchg
nop
mov
mov
outsb
mov
out
ja
or
sbb
mov
sbb
stc
mov
ja
imull
dec
cmp
cmp
inc
mov
les
adc
jg
incb
xor
imul
xlat
stos
jcxz
push
jecxz
mov
mov
jmp
movsl
movl
dec
in
add
movsb
call
xor
xor
cmp
push
jmp
pop
mov
mov
jl
push
push
das
or
cmp
add
cs
cli
mov
cmp
insl
jae
push
pushf
add
pop
pop
or
jno
mov
test
lods
dec
pop
and
xchg
add
sar
sbb
clc
out
popa
jg
cmp
aam
pop
cmpsb
jb
mov
cmp
xchg
lea
inc
cs
pop
and
shll
lea
sub
jno
sub
jnp
xchg
xchg
mov
push
push
test
mov
sbb
mov
inc
sbb
sub
int3
sbb
xor
leave
pop
stos
lods
fiaddl
pushf
sbb
dec
into
xor
jb
lahf
xchg
push
inc
out
jo
arpl
not
out
mov
bound
pop
mov
mov
sar
push
inc
push
ss
cmp
popl
icebp
gs
mov
mov
inc
or
addl
mov
cwtl
in
adc
xor
or
push
lret
nop
xchg
in
xor
test
or
xor
test
loopne
add
aaa
jg
leave
gs
bnd
in
sbb
push
std
pop
ret
cltd
inc
push
adc
mov
cmp
int
outsb
cmp
scas
adcb
dec
pop
add
outsb
pop
jnp
cld
mov
mov
xor
movl
test
pop
fsubrs
scas
sbb
xor
popa
cmp
rcll
or
arpl
das
ret
xor
jne
jbe
out
xor
cmp
mov
testb
mov
lcall
cmpsl
sbb
outsl
mov
and
fs
push
jns
mov
mov
dec
adc
outsb
push
cmp
scas
cmp
mov
int
cmpsl
imul
sbb
fidivs
cmp
pmaxub
sub
mov
mov
lret
insb
and
fidivrs
lea
xchg
in
lods
push
aaa
pop
sub
mov
les
dec
push
je
sub
xor
test
orl
loopne
or
mov
dec
in
add
mov
cmp
mov
mov
sub
sbb
sub
pop
jne
pop
bound
mov
shll
rcll
vmwrite
sti
aam
mov
mov
push
shr
or
xor
and
xchg
sbb
fst
inc
lock
adc
ljmp
pop
and
lods
mov
sub
dec
add
push
inc
mov
sub
sarb
je
dec
std
repz
fisubrl
cmpsl
addr16
inc
mov
push
pop
mov
jge
jns
push
out
fstpl
fmull
insb
into
jmp
aad
add
mov
pop
into
jns
jno
popa
or
stos
test
ss
ret
loope
xor
push
xor
sub
sbb
push
dec
or
scas
dec
push
or
stos
jp
dec
jnp
and
leave
mov
mov
stc
xchg
out
repz
or
shll
iret
cmp
jnp
ret
repnz
leave
fildll
mov
sbb
inc
xchg
mov
push
int3
or
mov
add
pop
fwait
fs
mov
aad
lods
les
jbe
aad
lods
mov
or
jl
cmp
or
xchg
dec
add
cmp
icebp
loop
sub
sbb
mov
jle
fisubrs
push
mov
insl
je
push
addr16
movsl
xchg
ret
shlb
dec
and
data16
cmpsl
mov
icebp
and
ds
adc
jbe
inc
add
std
inc
pop
pop
ret
cld
lahf
imul
ss
orw
dec
and
je
pop
rorl
cmp
es
or
neg
push
popa
mov
or
pop
jo
xor
mov
lahf
in
outsl
ds
gs
lods
insb
pop
in
repz
iret
and
int
lods
and
xor
mov
xor
xchg
mov
fldl
push
and
fs
jne
lock
jb
jle
adc
pop
popa
icebp
push
xor
aaa
mov
and
push
push
inc
xchg
das
sahf
push
cmc
jmp
aam
mov
inc
add
mov
xchg
and
fcomps
mov
test
repz
sub
add
lcall
cmpl
pop
inc
mov
push
cmp
insb
jp
push
sub
mov
lret
lret
sbb
and
or
rorb
mov
inc
cmc
sahf
adc
test
lds
mov
ret
fsubl
fidivrl
sub
dec
lock
mov
pushl
or
aad
and
call
aaa
and
loopne
test
jmp
lods
jo
lahf
adc
hlt
fimuls
rorb
mov
cmpsl
cwtl
pop
pop
fdivrl
jns
aam
ss
mov
xor
jae
pop
aas
repnz
sbb
mov
dec
mov
cli
push
in
int
mov
xor
jns
jne
and
aam
cmp
leave
dec
adc
add
mov
push
jp
inc
mov
xor
stc
fstps
lock
and
push
hlt
cmp
int3
xchg
in
xor
add
lods
xor
xchg
mov
sbb
call
xchg
pop
or
sbb
movsl
pop
xchg
push
mov
jb
xchg
mov
add
dec
inc
inc
lret
mov
insl
push
std
lea
test
pop
shrb
xchg
pop
cmpsb
or
pop
mov
sbb
jne
cmp
xorl
lods
or
mov
arpl
dec
je
sarb
or
cld
insl
loop
aaa
push
sub
inc
inc
out
imul
mov
xchg
cmp
mov
push
mov
insl
aam
or
test
in
mov
inc
xchg
je
mov
hlt
sbb
adc
mov
outsl
out
aad
mov
mov
jmp
jbe
movsl
rorl
dec
es
cmp
cwtl
cmp
pop
dec
inc
mov
cltd
adc
mov
sub
pop
jmp
cmp
sub
push
jns
outsb
and
enter
and
cmp
inc
lock
test
push
and
add
pop
mov
add
xlat
jae
rcrl
push
dec
dec
jae
ret
pop
sbb
nop
sbb
cmpsl
lret
repz
push
ds
dec
inc
add
fmuls
cli
add
loop
in
pop
sub
jmp
inc
cs
imul
pop
popf
sub
mov
push
ret
pop
and
push
inc
cmp
jge
sarw
push
fsubs
hlt
std
add
loop
pusha
dec
dec
sbb
pop
outsb
std
rcr
jp
cli
adc
ja
int
inc
push
cmp
xor
mov
inc
push
call
in
sub
insb
dec
mov
mov
test
mov
mov
dec
cmp
inc
mov
mov
or
push
pop
jb
bound
pop
mov
mov
mov
cmp
ljmp
aad
mov
pop
xchg
addb
xlat
xchg
or
sbb
inc
mov
movsl
movsb
test
xchg
pop
in
sbb
adc
cmp
add
jge
lcall
or
pop
repnz
push
mov
push
sub
add
push
jbe
jb
test
fsubp
lret
leave
lods
flds
sahf
push
mov
mov
sbb
jne
mov
pushf
pop
ret
pushf
pop
sub
sbb
inc
and
xlat
dec
aam
sub
loop
ret
les
fwait
mov
cs
icebp
fimuls
pop
shlb
pop
aad
push
pop
dec
fldt
enter
xchg
in
dec
cmpsb
insl
int
mov
dec
xor
jo
mov
mov
mov
and
cpuid
push
xor
test
cwtl
cld
jae
arpl
rcrl
movsl
push
mov
cli
iret
sbb
mov
xlat
icebp
divps
or
dec
clc
inc
pop
mov
sub
jle
out
jns
mov
and
sbb
lret
int
jecxz
mov
test
lds
ret
jecxz
fbstp
fists
mov
sub
inc
inc
adc
or
and
scas
in
icebp
adc
inc
xchg
jmp
into
ljmp
and
jg
cmp
packsswb
shll
decb
sbb
add
fldl
mov
cmp
jle
xchg
fldlg2
xchg
mov
div
dec
cmp
pusha
negl
jle
xchg
sub
push
cmp
lock
rorb
xlat
out
jmp
sub
jle
mov
stc
pop
add
inc
nop
and
mov
cmp
inc
cmp
add
xchg
addr16
push
mov
arpl
popf
xor
scas
mov
fildl
inc
cmp
jp
xchg
aam
sahf
in
test
fbld
in
in
pop
add
sbb
adc
mov
addb
mov
loopne
test
add
sbb
and
insl
mov
push
dec
inc
ljmp
adc
test
pusha
enter
std
sub
inc
xor
lahf
outsl
bound
push
cmp
and
hlt
sbb
or
ljmp
xor
into
mov
push
fsubs
cmc
dec
scas
adc
cwtl
jb
sahf
lret
jb
mov
popf
jl
xchg
adc
xchg
pop
aas
cmp
mov
lods
mov
cmp
mov
add
jnp
das
in
pop
cld
add
mov
icebp
cmp
in
and
xchg
imul
pop
add
scas
leave
lcall
mov
scas
pusha
pop
pop
push
adc
mov
cld
jne
icebp
adc
mov
lret
addr16
xor
out
inc
pop
push
cmp
mov
xor
arpl
mov
lahf
dec
out
push
lods
stc
jge
inc
outsl
ret
ror
into
mov
add
mov
or
xor
push
mov
pop
les
mov
mov
fcompl
out
cld
test
sahf
nop
and
std
dec
out
and
pop
pop
sbb
mov
jnp
cmp
xor
push
mov
repnz
jmp
popa
push
pop
lea
jbe
fldl
push
ficoms
push
ljmp
jmp
lods
subb
sbb
loope
in
or
pop
sbb
lods
and
inc
pop
cwtl
out
pop
jl
in
dec
push
mov
ret
cmc
rol
in
dec
cmp
dec
cwtl
add
lea
call
push
push
jle
fstl
fistps
or
test
jbe
sbb
sbb
mov
inc
sbb
adc
mov
lock
sbb
xchg
pusha
cmp
fwait
dec
jl
out
adc
push
mov
adc
cmp
jnp
adc
mov
in
call
icebp
popa
xor
nop
pop
cmp
jne
ja
add
dec
pop
sub
and
cmc
ficompl
decl
pop
mov
dec
xor
repz
idivb
into
fsubl
insb
mov
jnp
mov
or
mov
ljmp
orb
and
cmp
lods
add
inc
mov
fbld
adc
inc
mov
cmp
or
adc
mov
inc
push
add
iret
push
gs
dec
push
sbb
mov
adc
repz
mov
push
clc
loopne
movsl
mov
sbb
sub
jp
xor
pop
inc
cmp
lret
cld
fiaddl
aam
sub
inc
test
fcmovnu
ss
xchg
lock
xor
mov
test
fsubrs
push
mov
fmul
es
clc
mov
and
call
outsb
gs
sbb
xchg
push
adc
addr16
and
sarb
mov
sub
fdivrl
in
pop
push
shlb
mov
jmp
inc
add
lahf
aad
fs
dec
fs
gs
aad
aam
loop
mov
nop
add
xchg
cmpsb
inc
rcll
test
daa
pop
lods
imul
and
rorl
lret
stos
popf
add
int
in
xor
xor
sahf
ds
lea
test
cltd
fadd
fstl
jmp
sti
in
outsl
lods
lods
daa
dec
add
cli
mov
pop
mov
add
ljmp
sub
or
rolb
cli
xor
dec
lret
cli
sti
movsb
push
lds
mov
cs
out
incb
popf
jg
mov
mov
js
fsubr
sti
adc
testb
xor
mov
push
sbb
gs
mov
mov
xlat
mov
push
call
pop
add
add
sub
scas
arpl
lock
sti
and
call
push
outsl
dec
cld
push
xor
jbe
test
in
lock
lret
jle
adcl
mov
inc
or
addr16
mov
inc
insl
mov
addr16
mov
adc
scas
mov
xchg
cwtl
xchg
outsl
sbbl
jbe
outsl
add
imul
xor
cltd
xor
test
aas
leave
adc
lret
add
cmp
mov
sub
in
mov
add
std
sub
sub
jnp
sub
or
cmc
out
mov
or
mov
rcl
adc
addr16
sub
jg
jb
dec
stos
in
fldt
xchg
mov
movsl
dec
lds
push
lret
jnp
inc
xchg
rorb
add
daa
cmp
adc
push
aaa
xchg
orl
pop
xchg
in
and
je
cltd
mov
sbb
popa
jmp
sub
adc
inc
cmpsl
pop
mov
add
mov
jns
shrb
ss
lret
xor
mov
out
testl
movsl
test
pushf
fisubrl
dec
xor
adc
dec
pop
and
addr16
adc
addr16
stos
xchg
mov
aas
push
add
out
je
test
adc
or
lods
insl
push
sbb
xor
mov
jae
pop
lds
sbbb
xor
cmp
in
adc
or
adc
mov
push
test
xor
mov
push
push
int3
cld
push
in
pop
rorb
inc
pop
test
mov
xchg
bound
pop
clc
push
sbb
pop
scas
ja
vmovq
pop
lds
call
push
push
lods
mov
cmp
add
inc
sbb
mov
fldenv
adc
mov
cmp
mov
fstpt
outsl
jbe
fbld
dec
rclb
ret
sub
test
dec
xchg
call
jns
lds
das
push
adc
sahf
jb
clc
cmpsl
dec
test
mov
xchg
test
out
jbe
mov
or
loopne
stc
test
mov
fsubrl
and
lds
psubusw
mov
xor
dec
cwtl
dec
cmp
ss
loope
ljmp
int
cmp
pop
and
ds
js
addb
enter
lds
mov
xchg
sub
sbb
movsl
je
gs
sahf
popa
mov
mov
push
outsb
xchg
adc
fstl
mov
push
xor
stc
sti
nop
sbbl
jae
rcll
jmp
stos
shll
mov
adc
push
fstl
push
xor
mov
insb
mov
push
jle
push
pusha
lods
push
jmp
loop
mov
insl
push
dec
mov
stos
dec
nop
pop
mov
sbb
repz
and
pop
ja
sbb
push
icebp
leave
js
stc
inc
rcr
rclb
mov
les
inc
stos
das
or
outsb
rolb
mov
or
mov
xor
shll
out
popf
jbe
shlb
dec
cmp
test
aas
sub
test
cmp
and
fwait
ja
add
add
arpl
dec
or
mov
int
les
sti
pop
cmp
or
ja
and
and
aaa
out
sbb
mov
or
orl
push
imul
mov
ret
jne
push
out
cmovl
popf
sti
js
pop
cmpsb
xchg
xor
pop
clc
hlt
mov
mov
mov
xchg
mov
lods
clc
adc
addb
outsl
lock
jg
cmp
sbb
imul
sub
cs
mov
mov
fdivs
jb
test
xor
movsb
pop
gs
inc
into
daa
mov
in
pop
rcrl
jmp
je
sub
mov
jecxz
stos
add
js
adc
inc
clc
fmul
and
mov
jns
inc
pushf
jge
inc
inc
jmp
test
adc
aas
lret
mov
or
repnz
jbe
push
fwait
daa
jl
jmp
fs
push
stos
cmpsl
cli
mov
imul
xor
fcomps
jb
pusha
imul
mov
jbe
mov
pop
mov
imul
inc
cltd
jl
pop
mov
movzwl
push
jmp
push
and
fs
iret
jecxz
mov
xchg
push
aaa
cmp
cmp
mov
cltd
cwtl
or
int3
mov
or
shl
push
aaa
outsl
in
cmp
lret
xor
outsl
cmp
fwait
pop
adc
ret
cmp
mov
sbb
movsl
inc
xchg
out
scas
stc
xlat
xchg
mov
sbb
ficomps
and
pop
lret
push
dec
jecxz
mov
mov
mov
das
sub
test
test
push
int
or
sub
insb
jecxz
popa
mov
dec
push
aaa
push
push
les
cmp
popa
xor
mov
mov
push
movsb
notl
in
jle
jnp
daa
out
push
jnp
mov
jne
xor
adc
int
mov
out
fstpt
lret
add
lretw
in
mov
pop
sbbl
scas
aam
dec
fs
jo
or
ficoml
push
xor
nop
imul
xchg
pop
jg
mov
xchg
je
sbb
inc
je
mov
jp
lock
cmc
sbb
aad
decl
fs
icebp
mov
stos
leave
pop
mov
pushf
mov
scas
sahf
or
inc
rolb
dec
push
repz
out
push
mov
and
pop
fistpl
push
push
dec
jae
and
test
mov
insb
xor
popa
inc
pop
pop
popa
imul
aaa
cwtl
imul
addr16
fs
mov
outsl
pop
sub
push
loopne
push
iret
mov
add
xor
movsl
jno
or
ret
xor
lds
inc
dec
mov
push
mov
mov
lcall
es
sub
lock
inc
xchg
adc
cltd
xor
dec
bound
adc
dec
dec
call
shr
sub
mov
clc
std
stc
pop
xchg
and
jg
aaa
enter
enter
rcr
mov
jbe
xor
mov
fists
or
add
dec
cmp
sbb
inc
xchg
ja
cmp
jg
popl
and
in
fldenv
test
adc
int3
popa
or
negl
mov
cld
aam
jno
pop
stos
imul
xor
data16
sbb
and
cmpb
fdivrs
out
pushf
stos
ds
xlat
ret
fwait
mov
popa
lret
pop
cmp
outsb
push
pop
dec
push
mov
mov
inc
jl
and
gs
dec
jns
jnp
lock
and
or
mov
mov
out
cmpsb
jbe
pop
cmc
mulb
adc
jmp
loope
lret
pushf
cmpl
fcmovu
or
repnz
xchg
cld
xor
push
shrl
add
mov
mov
icebp
daa
sub
xchg
js
js
sbb
mov
cmp
xor
mov
enter
jne
and
arpl
pop
and
add
hlt
pusha
fidivrs
sub
mov
les
mov
cmp
lods
push
lea
imul
and
pop
mov
imul
imul
loop
lcall
ret
adcb
xchg
pop
insl
jo
dec
cmp
sub
adc
rcr
push
adc
dec
testl
cmp
js
sbb
add
popa
mov
dec
push
imul
in
adc
mov
sub
cmp
fildll
shlb
insl
cmp
pop
in
adc
idivl
fmuls
mov
mov
or
sub
mov
and
sti
imul
inc
data16
push
xor
jp
or
roll
mov
push
repz
rolb
scas
xor
out
push
pop
lcall
ffree
cmp
mulb
rcrl
xlat
inc
in
ret
lds
cmp
mov
add
mov
fistl
lds
outsl
out
mov
jnp
mov
push
outsb
inc
fwait
ror
pop
stc
popf
xchg
enter
sub
or
stos
mov
fiaddl
fstpt
shl
test
pop
outsl
push
xor
stc
cmp
mov
xchg
mov
sarl
mov
pushf
lods
mull
int
mov
sbb
add
js
cmp
mov
sub
lret
iret
leave
push
movsl
xchg
xchg
mov
bound
sub
pop
sub
jno
neg
ja
push
enter
shlb
cmp
cli
mulb
imul
in
fnsave
jbe
lcall
mov
lea
mov
lret
jge
hlt
dec
mov
inc
cld
jno
jl
lods
mov
aam
push
pushf
jg
pop
push
scas
mov
lahf
add
pop
push
insl
addr16
pop
mov
pusha
jge
fdivrs
pop
jbe
stos
or
dec
out
test
sqrtps
iret
mov
push
mov
and
mov
push
push
mov
cmp
hlt
lcall
dec
xor
pop
jmp
or
dec
jns
rorl
pop
mov
aad
mov
rcll
stc
push
js
push
mov
jl
fistps
movsb
dec
jae
fidivrs
and
sti
xlat
sahf
push
cmp
cmc
sub
and
push
out
sub
xchg
mov
mov
movsl
mov
sbb
cmpsb
xor
xor
shrl
mov
lahf
mov
mov
mov
sbb
adc
inc
stos
testb
and
cmp
loope
sahf
cld
pop
jo
ljmp
addr16
mov
adc
addr16
mov
xor
push
xchg
jae
jge
sub
mov
enter
out
test
dec
out
add
inc
pusha
sbb
insb
ja
ljmp
mov
loop
pushf
fldcw
shll
adc
sub
jl
add
mov
cltd
mov
xlat
outsb
js
xchg
jae
push
jmp
jo
xor
sar
dec
cli
out
sub
aas
je
cltd
xchg
cmp
daa
outsl
pop
addr16
mov
hlt
jo
mov
xor
sbb
cmp
test
mov
shlb
jae
iret
sarb
inc
fdivs
leave
shrl
push
lret
lock
xor
pop
loopne
je
movsl
mov
jb
cs
imul
mov
scas
cld
mov
adc
jecxz
clc
pop
xchg
fsubrs
or
push
mov
aam
test
testl
lret
push
gs
and
sub
jg
je
sub
sub
jge
mov
loopne
and
std
jb
leave
adc
sub
fsubrs
les
xlat
fwait
inc
dec
or
or
adc
or
dec
adcl
int
xchg
lock
mov
hlt
sub
xchg
xor
sub
sub
sbb
sbb
mov
pop
loope
adc
arpl
mov
daa
pop
shll
cltd
lcall
add
iret
daa
dec
and
xchg
push
pop
sub
adc
push
pop
xchg
notl
push
iret
push
push
dec
ds
mov
cmp
jl
fadds
stos
xchg
fisttps
das
push
cmpsb
stos
mov
lea
sub
mov
hlt
adc
push
sub
movsl
pop
in
pop
mov
into
xor
sub
daa
pandn
adc
cmp
icebp
dec
in
mov
sub
mov
stc
aaa
int
add
enter
push
inc
arpl
popa
sbb
clc
xchg
or
xlat
int
insb
test
test
push
and
stos
jecxz
push
xor
ja
imul
mov
cld
mov
xor
fincstp
adc
xchg
popf
rorb
stos
xchg
ret
ljmp
stos
sahf
popf
iret
into
jmp
into
js
gs
or
aas
jmp
fbstp
int
sbb
cmp
pop
into
ret
fadds
push
xor
dec
and
adc
dec
or
pop
sbb
xor
cs
fs
pop
jbe
dec
add
push
pop
in
or
cld
pop
test
add
fidivs
fiadds
push
mov
add
sahf
push
nop
cmp
test
fwait
daa
rcrl
sahf
push
scas
lock
aas
mov
push
cmpsb
cmp
cmp
jno
mov
jle
add
aam
outsl
cmpsb
popa
popf
mov
jp
shll
mov
sarl
mov
inc
pminsw
es
int
pop
call
push
xor
adc
mov
and
adc
int3
in
std
and
inc
fmul
aaa
xor
lcall
mov
xchg
popf
icebp
cmp
push
adc
ljmp
leave
push
push
mov
int3
scas
fwait
mov
xchg
cmp
push
push
sahf
daa
movsb
inc
mov
int3
cmc
cmpsb
sbb
ret
add
lea
push
cmpsb
jmp
adc
dec
pop
xor
outsl
insb
sti
pusha
je
add
cltd
roll
mov
jmp
cmpsb
dec
jp
rorb
mov
cmp
cltd
scas
jne
mov
mov
sbb
cmp
xchg
xchg
xchg
out
ret
pop
fs
push
cltd
and
pop
cmp
inc
cmp
call
xor
pop
adc
mov
cmp
push
pop
cmpsl
outsb
movsb
push
lds
mov
sarl
and
push
repz
adc
les
cmp
jnp
cmp
jno
xlat
jnp
xor
sub
mov
xchg
pop
mov
cmc
jae
push
xorb
xchg
push
mov
and
push
shrl
pop
pusha
pop
sub
xor
sbb
lods
lahf
hlt
jno
mov
add
mov
push
push
outsb
push
mov
pop
mov
xor
in
daa
rorl
mov
jbe
mov
test
or
aas
nop
fldenv
mov
pop
and
sub
pop
sub
pop
mov
cmpsl
pop
adc
int
mov
xor
push
movsl
sahf
push
std
in
mov
shll
sub
jp
iret
in
sbb
mov
adc
jne
enter
clc
inc
inc
dec
pop
pop
nop
test
cmp
icebp
nop
push
mov
push
adc
xor
jge
js
dec
out
daa
cmpsb
pop
mov
dec
pop
and
mov
jmp
jp
pop
out
sbb
stos
add
add
and
adc
mov
imul
in
add
ret
aaa
mov
pusha
xchg
xor
lock
imul
or
je
aaa
sarb
mov
sub
les
mov
jge
jbe
jmp
lret
dec
sbb
sub
into
add
or
dec
xchg
jecxz
xchg
fwait
push
push
lods
incl
sbb
testl
mov
aad
dec
pop
lret
xor
xor
cmp
fiadds
xchg
or
xchg
fdivrl
insb
and
and
pop
lea
ret
push
mov
call
mov
pop
fdivrp
pop
xchg
pop
lock
ljmp
xchg
mov
push
add
loope
pop
rclb
call
mov
js
jo
inc
adc
cmp
fwait
sub
jle
jmp
sbb
mov
mov
pop
out
test
aad
push
cmpsb
jge
sub
jecxz
je
inc
fs
push
in
or
cwtl
addb
mov
or
sbb
lds
add
push
sti
outsb
and
jno
xor
movsb
inc
inc
shr
aad
dec
arpl
cwtl
sarl
inc
sbbl
std
enter
das
jecxz
outsb
icebp
dec
cmp
add
mov
adc
xchg
dec
pop
add
das
xor
mov
mov
dec
fcoms
fisubrs
lret
jo
mov
jmp
push
jmp
or
inc
test
push
mov
inc
pop
jmp
fcmovbe
sbb
pop
dec
fldcw
xor
sbb
add
push
mov
sub
pop
cmp
xor
fidivl
incb
inc
push
mov
mov
sbb
aaa
sti
icebp
cli
cmpb
and
shll
dec
jo
push
lret
test
scas
mov
mov
and
push
test
hlt
div
fcmove
cmpsb
jge
aam
gs
sub
fisubrl
push
decb
mov
lods
cmp
cmp
popa
stc
dec
sub
xlat
icebp
cltd
xchg
jge
push
in
fldl
pop
into
xor
loope
fucomi
inc
jge
stos
fsin
daa
mov
or
or
jae
popa
pop
adc
adcl
jnp
dec
mov
mov
shr
dec
in
movsl
cmp
test
fnstcw
scas
xchg
sub
inc
js
lcall
mov
fcompl
add
stos
jb
push
xor
imul
test
or
scas
dec
mov
and
xchg
lds
jecxz
mov
push
sbb
xchg
fidivl
ficoms
shl
mov
add
nop
cmp
dec
mov
sub
rorl
shlb
stos
mov
inc
xchg
sbb
dec
xor
pushf
insl
jmp
dec
test
daa
movsl
and
shll
int
in
arpl
and
and
out
adc
inc
imul
mov
adc
push
or
xchg
xchg
movsb
shrb
xchg
test
fsub
jl
stc
inc
jp
sbb
in
arpl
pop
jnp
lds
lods
mov
add
jo
in
loop
or
roll
adc
inc
xor
scas
jmp
mov
out
xchg
int
adc
jle
push
add
mov
xchg
lahf
mov
pop
aad
sahf
mov
fwait
lahf
fbstp
fisubrl
das
mov
push
adc
mov
cli
inc
mov
popf
sbb
call
mov
lods
mov
iret
in
ds
sub
addr16
cld
lods
lcall
pop
dec
in
leave
sahf
mov
nop
xchg
pushf
pop
sub
stc
fadd
mov
stos
test
pop
into
ret
cmpsb
xchg
insb
inc
pop
mov
daa
enter
sti
or
cmp
lea
pop
sbb
daa
jmp
inc
dec
jns
push
fwait
jl
xchg
leave
shll
dec
aam
mov
jle
adc
sbb
mov
lcall
insb
mov
cs
push
and
test
std
cmp
lret
outsl
loop
loop
mov
mov
outsb
xor
jecxz
and
mov
mov
or
and
addl
sub
sub
or
adc
sub
ret
inc
inc
popf
inc
add
ja
bound
dec
pop
pop
fptan
icebp
je
repnz
movsl
add
push
dec
popf
cltd
pop
jmp
xor
push
mov
adc
das
adc
pushl
pop
xchg
mov
mov
push
js
dec
mov
rclb
and
or
jne
imull
xchg
pop
scas
popa
cmp
pop
stc
cmpsl
adc
lret
sti
imul
push
xchg
xchg
push
push
movsl
lods
sub
imul
add
loopne
dec
cmp
fwait
xchg
pop
push
test
lahf
pop
push
dec
int
xchg
inc
repnz
lea
mov
int3
cmp
aad
add
inc
pop
jmp
lods
stc
add
fisttpll
insl
lcall
sbb
inc
scas
and
leave
mov
cmc
xorb
mov
jge
fcompl
out
or
cmp
sbb
and
fisttpll
sub
movsb
jbe
lds
stc
iret
insl
inc
cmpsb
in
pop
mov
lahf
lea
sub
ja
insl
daa
xchg
orb
mov
fimull
inc
arpl
fs
jmp
pushf
lods
mov
pop
scas
out
inc
stos
xor
scas
les
adc
std
aas
jne
xor
adcb
test
jp
shlb
inc
scas
in
inc
and
ljmp
stc
in
shrl
xchg
mov
jno
out
sbb
fucomip
dec
mov
into
cld
clc
cmp
fisubrs
pop
les
cmp
js
cmp
push
mov
fcmove
jnp
call
rcrl
rclb
mov
out
ja
and
lds
mov
add
adc
sbbb
cmpsl
xor
repz
lods
out
sarb
xchg
out
or
sahf
xchg
loop
lock
push
sub
js
loop
sar
push
pop
pop
lahf
loope
mull
pop
push
sbb
cwtl
pop
adc
cmp
pop
cmp
push
fadds
mov
cmc
xchg
enter
and
lds
pusha
jp
xchg
pop
sbb
cmpsb
or
jae
jle
fidivl
mov
movsb
add
insl
pop
mov
push
mov
pop
mov
mov
icebp
mov
add
pop
xor
fs
repnz
and
dec
mov
and
loopne
xchg
mov
mov
int3
jg
imul
imul
fnstcw
mov
sbb
jo
movsl
push
jno
sbb
out
push
jmp
test
add
inc
mov
and
push
sub
xchg
cmp
daa
cmpl
push
add
les
and
cltd
cli
jg
scas
xchg
fldcw
test
jp
out
sub
push
loop
jl
dec
daa
loop
mov
pop
mov
sahf
dec
and
popa
mov
sub
addr16
repz
cmp
mov
pop
cmpl
lock
gs
pusha
inc
or
pushf
imul
outsb
pusha
pop
mov
jb
insb
push
mov
movsl
xchg
imul
jg
sub
loopne
hlt
incl
into
aas
bound
lds
xchg
mov
jo
fisubrs
dec
mov
mov
xchg
idivl
pushf
pushf
stos
xchg
and
inc
loop
xchg
sbb
xor
call
das
push
pusha
cld
arpl
mov
sub
imul
mov
fwait
ret
pusha
pop
enter
sub
push
sahf
cltd
dec
repnz
leave
cmp
inc
leave
ret
lock
mov
cmc
jl
roll
ret
adc
test
xor
pushf
add
js
lcall
das
fwait
adc
sbb
mov
push
jle
scas
mulps
lret
popa
fadds
ret
ret
dec
cmc
sub
push
pop
faddl
cmp
mov
jnp
fdivrs
dec
sbb
insl
scas
push
mov
jno
daa
ja
mov
shlb
adc
push
pop
loopne
popf
mov
pop
repnz
pop
mov
inc
pop
mov
jge
and
jecxz
mull
dec
xor
nop
mov
mov
mov
popa
aam
pop
jbe
sub
mov
xchg
das
imul
mov
out
lock
repnz
ds
scas
adc
lcall
hlt
sti
repz
cmp
push
sbb
cmpsl
push
fnstcw
test
or
pop
rcr
pusha
decb
dec
inc
mov
sbb
mov
ret
leave
adc
inc
dec
fnsave
rorb
mov
inc
into
out
out
pushf
sbb
push
lods
mov
mov
jne
xor
daa
into
mov
jmp
bound
mov
cmp
in
jl
sub
mov
rcll
int3
stos
lds
addr16
mov
stos
dec
adc
add
inc
jae
stc
sbb
xchg
fwait
outsb
xchg
jo
sub
aam
or
jne
pop
pop
nop
scas
pop
stos
push
xchg
dec
dec
mov
push
loop
push
pusha
lcall
sbb
cmp
xchg
das
xor
rcll
imul
sbb
mov
test
je
inc
mov
aad
or
xchg
pushf
mov
add
adc
xchg
imul
neg
jecxz
push
and
lods
xchg
shrl
mov
test
push
lret
bnd
stc
je
mov
nop
mov
and
pop
adc
mov
jmp
test
clc
lods
mov
push
inc
push
les
insb
or
inc
bound
out
jo
and
insl
mov
pop
repz
out
or
leave
or
jnp
ja
pop
stos
mov
jo
cs
cmpsl
arpl
cmp
movsl
mov
in
push
test
dec
mov
fcoms
push
sub
daa
mov
aad
jg
inc
inc
stc
mov
sbb
or
fchs
jnp
dec
sbb
jne
ficoml
rcrb
and
mov
mov
insb
stc
out
pusha
cmp
int3
cli
cli
add
dec
out
and
add
fsubl
idivl
out
ja
xchg
mov
and
mov
pop
push
adc
inc
out
push
cmpb
call
push
outsb
mov
lret
addl
mov
ret
pop
scas
popa
sub
add
xchg
fldcw
rclb
pop
sub
pop
pop
cli
sub
push
fstps
mov
mov
xchg
dec
jns
xchg
mov
sub
push
mov
pop
insl
sbb
add
dec
pop
pop
scas
aas
testl
mov
sbb
pop
xchg
push
pop
ror
or
nop
sahf
stos
push
mov
jl
mov
out
fcomps
call
mov
dec
cmp
or
subl
aad
and
adc
lcall
fcoml
xchg
pop
push
or
pop
mov
mov
inc
sbb
pushf
int3
out
icebp
in
insl
adc
add
nop
ss
lret
mov
xor
mov
decb
mov
cs
lock
xlat
pop
fwait
insl
sub
jmp
sub
lods
mov
outsb
pop
mov
push
inc
push
testb
cmpsl
xchg
sahf
jns
popa
dec
insl
push
fdivl
movsl
aaa
adc
and
mov
ja
adc
rcll
dec
cmp
cmpsb
adc
daa
in
push
cmpsl
xchg
jge
dec
add
das
mov
lods
mov
inc
mov
xchg
sahf
bound
push
inc
in
mull
dec
jmp
adcb
sbb
iret
inc
xor
shr
mov
jno
movsb
push
sub
andb
jnp
idivl
mov
scas
fstpt
pop
inc
push
sbb
out
sbbl
lahf
mov
in
insl
ret
gs
addl
sbb
push
mov
jg
adcl
xchg
mov
repz
sub
hlt
mov
enter
mov
add
mov
popa
cld
push
mov
cmp
clc
ss
push
pop
mov
jle
or
out
mov
fildll
pop
pop
lds
xchg
mov
push
sbbb
xor
inc
jp
call
outsb
cmp
out
addr16
je
cltd
push
push
sbb
sub
cli
test
rcrl
mov
sbb
cld
ja
and
icebp
mov
test
pushf
outsl
testb
inc
xchg
push
subb
stos
push
clc
insl
cli
push
inc
pop
aaa
das
mov
cli
push
sub
rol
fisubs
cmp
jmp
push
fidivrl
test
outsl
cmpsb
pmulhuw
mov
xchg
jg
add
xorl
dec
sub
mov
cmp
jnp
jo
push
add
mov
sbb
mov
adc
mov
out
add
and
es
push
inc
dec
test
stc
adc
add
dec
inc
jno
ret
scas
out
push
or
lret
or
fmul
leave
or
cld
repz
andb
fsubrp
jnp
mov
fcomps
adc
jbe
mov
gs
popf
and
stc
cmp
ret
fcomps
mov
leave
xchg
dec
psubd
inc
test
dec
std
jnp
mov
mov
addb
pusha
std
xor
adc
icebp
and
cmp
je
jle
push
inc
xor
dec
aaa
mov
aad
repz
push
call
fnsetpm(287
or
push
aaa
test
sti
or
arpl
cmp
add
rcr
cmp
repz
pusha
sub
xbegin
cmp
push
addr16
mull
call
adc
mov
pop
es
hlt
and
aad
shrl
xchg
mov
imul
test
test
jae
sub
cmpsl
int3
or
lcall
mov
adc
or
dec
jae
inc
pushf
pop
popf
movsb
mov
movsl
aaa
mov
and
gs
lods
stos
inc
mov
mov
bound
lret
orl
cwtl
push
or
mov
dec
mov
mov
ljmp
adc
jb
pop
and
inc
pop
mov
jg
repnz
loopne
sbb
dec
pusha
pusha
jmp
jb
fcompl
mov
or
iret
push
arpl
add
jns
add
inc
imul
add
cmpl
outsb
or
pop
das
pop
jae
sbb
jnp
fstps
and
stc
mov
mov
mov
pop
pop
sub
xchg
test
mov
fadd
aam
mov
xchg
jmp
or
jbe
sbb
in
loop
roll
adc
push
scas
lods
inc
test
pop
sub
sub
xchg
inc
xchg
xchg
ret
dec
cmpsl
xor
fbld
dec
jae
push
ret
shlb
jmp
mull
dec
int
in
add
pop
mov
pop
bound
std
jns
icebp
jo
or
movsb
insb
clc
xlat
jl
hlt
or
adc
push
cmp
je
sub
add
loope
xchg
xchg
ljmp
jmp
mov
inc
ss
ret
lea
or
loope
call
push
sti
in
pop
fisttpl
test
inc
xchg
sbb
call
adc
inc
stos
or
out
mov
aaa
mov
mov
out
nop
inc
or
es
cmc
in
and
dec
rcrl
dec
and
and
pop
cmpsb
aaa
hlt
daa
vrsqrtps
es
mov
ja
popw
push
loopne
test
repz
mov
lcall
adcb
jp
pop
dec
sbb
adc
into
mov
imul
ret
push
push
ja
mov
shr
inc
adc
push
or
fst
and
in
push
stos
pop
cmp
push
hlt
xor
inc
adc
testl
shlb
sbb
js
xor
ret
loopne
or
aad
mov
sub
push
cmc
sbb
jnp
push
dec
icebp
stos
mov
jmp
int
daa
mov
and
sub
bound
cwtl
fsts
and
mov
cmp
stos
test
mov
xor
lea
bound
add
jge
sbb
mov
cmovb
pop
sahf
jl
les
mov
lods
frstor
pop
xchg
lods
mov
je
ret
inc
push
inc
or
mov
or
sub
mov
and
lahf
push
or
sbb
xor
jecxz
cmpsb
int
cmp
cmp
adc
clc
add
push
xchg
aam
or
mov
mov
xchg
mov
sar
pop
lret
dec
xor
cmp
icebp
sbb
push
int3
stos
or
jmp
cmc
out
push
or
mov
dec
mov
mov
dec
or
mov
add
mov
lahf
sub
test
lds
mov
jnp
lret
movsb
aas
jae
mov
inc
scas
sbb
mov
sub
in
movsl
arpl
cmpsb
jg
sub
adc
xor
cmp
xchg
rcrb
shl
or
mov
shrl
nop
imul
pusha
adc
stc
fsubl
xchg
mov
sub
out
shlb
dec
inc
lods
loopne
movsb
bound
or
mov
jecxz
call
addr16
inc
mov
ja
xchg
aaa
maxps
sbb
aam
lods
ret
cli
sbb
clc
push
mov
mov
loop
mov
mov
aam
lret
dec
in
lcall
mov
aad
xchg
pop
fwait
cmp
outsl
adc
shl
out
adc
and
xchg
fnstenv
adc
push
xchg
cmp
ds
xchg
mov
push
push
mov
js
scas
lret
gs
loop
sbb
lea
mov
cmp
mov
mov
cltd
stos
inc
movsl
ret
adc
sub
push
movsl
dec
mov
pop
mov
jae
inc
popa
mov
or
xlat
repz
rclb
mov
icebp
dec
jmp
lock
cmp
push
aam
bound
scas
pop
sbb
inc
out
popf
mov
fbstp
mov
xor
adcb
sahf
sbb
xor
sbb
addr16
xchg
xchg
sahf
sub
outsb
adc
outsl
stos
or
cmp
xchg
rcr
add
mov
jns
pop
mov
xchg
jno
cmp
mov
mov
lds
push
xor
cmp
push
cli
insl
and
jecxz
sahf
movsb
mov
inc
sbb
inc
mov
aam
pop
dec
dec
popa
jbe
lret
push
mov
and
jl
jmp
xchg
fs
pop
mov
lret
mov
sub
mov
pushf
lods
mov
pop
xor
xor
fnstenv
inc
sub
popf
jp
jnp
imulb
sarl
xchg
in
popf
mov
in
sbb
scas
pop
cwtl
idivl
sub
mov
lods
add
in
cld
hlt
dec
cwtl
icebp
bound
mov
jnp
or
inc
cltd
mov
push
xchg
into
mov
push
leave
jl
cs
lock
or
out
loop
add
ret
outsb
dec
mov
or
fxch
outsb
aas
pcmpgtw
mov
xor
sub
mov
and
add
add
pop
pop
ja
ret
enter
enter
adc
iret
cmc
sub
out
jle
or
lock
dec
stos
dec
or
in
pop
imul
cld
add
or
dec
movsb
push
sbb
mov
repnz
bnd
xlat
sbb
add
aam
cmp
pop
push
scas
iret
pop
out
inc
test
loopne
or
add
call
lods
in
loop
pop
imul
mov
mov
insl
decl
add
cld
aas
mov
jno
loopne
into
dec
jnp
hlt
cli
stos
ds
push
mov
adc
shrb
cvtps2pd
repz
pop
inc
out
xor
data16
push
push
mov
mov
push
jl
in
repnz
sti
mov
mov
scas
cmp
pop
shlb
xor
or
sahf
fisubrl
xchg
js
add
pusha
fsubl
fdivl
mov
jo
mov
leave
jp
inc
xchg
push
clc
mov
repnz
data16
ljmp
je
aam
cmpl
sub
pushaw
push
jle
push
outsl
sarl
mov
sub
and
sbbl
int
movsb
xchg
mov
xchg
inc
leave
rclb
jbe
inc
sar
cmp
push
jmp
xchg
mov
insl
or
push
xchg
adc
sbb
mov
xor
adc
jle
repnz
data16
mov
xchg
mov
push
lret
dec
xlat
rcrl
ret
leave
sti
xchg
cs
das
adc
sub
sbb
movsb
mov
shl
insl
shrb
subl
lahf
mov
ja
push
jmp
cmp
push
jl
jno
adc
sbb
cwtl
jbe
mov
jp
push
mov
adc
dec
sub
xor
mov
lret
mov
cmpsb
dec
pusha
js
mov
orl
out
fldenv
lcall
mov
popa
testb
out
and
pop
mov
mov
addb
js
sbb
je
sub
cwtl
cmpl
cs
ljmp
sub
aaa
inc
test
lret
addr16
es
bound
inc
icebp
add
arpl
test
or
shlb
sub
mov
pushf
mov
add
sti
pop
push
or
je
push
inc
aas
loope
xor
insb
ja
and
data16
gs
bound
inc
je
mov
mov
xchg
shl
stos
mov
dec
in
aam
add
sub
les
adc
mov
xchg
arpl
cmc
cmpsl
popf
sbb
cmpsl
daa
push
les
cld
cmp
sbb
rcr
loopne
sbb
addb
sub
mov
push
push
nop
lods
iret
arpl
pop
scas
jnp
mov
in
or
scas
inc
mov
popa
add
popa
or
inc
out
ja
pop
fisubs
inc
fnsave
and
cmc
push
add
aad
sbbl
fs
fnstsw
inc
and
cmp
mov
or
and
shll
mov
out
fxam
dec
popf
mov
or
js
ret
xor
mov
push
cwtl
shl
adc
scas
pop
mov
arpl
imul
cmp
dec
dec
mov
jnp
cli
lret
into
icebp
aam
inc
mov
dec
std
cmp
cmpsb
cmp
xor
cmp
jo
aaa
pop
int
jge
repnz
popa
cmp
and
lret
fisttpl
sarl
pushf
arpl
jbe
addl
mov
scas
jne
pop
jecxz
cmp
call
or
xorl
sub
xorb
xor
sti
cmp
into
jp
jbe
cmp
sar
cmpsb
rclb
in
in
push
rolb
in
pop
jl
std
dec
stos
add
mov
fdivs
xlat
stc
adcl
sbb
fdivl
pushf
xchg
xchg
fwait
cmp
nop
xchg
gs
push
movsl
gs
sub
sbb
push
daa
test
in
repnz
lods
fidivs
push
dec
repnz
cmp
in
outsb
push
rorw
jne
mov
pop
ss
sub
inc
out
jns
lods
aam
daa
mov
repz
roll
dec
int3
sub
popf
aaa
inc
mov
mov
mov
xchg
sbb
test
test
pop
mov
push
lahf
adc
jbe
aas
jle
shr
repnz
pop
dec
sbb
popf
push
scas
mov
dec
out
jns
scas
test
pop
ds
jmp
stos
pop
xchg
adc
pop
iret
in
and
add
inc
insl
sbb
mov
sbb
scas
push
into
or
push
mov
jl
mov
mov
inc
add
frndint
dec
or
mov
stos
sub
das
arpl
in
sbb
out
mov
dec
test
adc
sub
push
mov
fstl
sub
dec
scas
sbb
dec
popa
mov
int
out
mov
sbb
into
js
and
mov
mov
into
jl
js
pop
ja
adc
or
cmpsb
inc
jbe
in
mov
pop
push
fsub
mov
loopne
in
dec
jp
add
jecxz
aam
sbb
je
pusha
les
jmp
dec
lods
xchg
and
or
sti
mov
mov
lock
xchg
dec
xchg
sbb
dec
pop
orl
in
lahf
stc
out
mov
inc
sub
mov
xchg
mov
out
push
insl
lds
mul
xchg
outsb
or
add
cli
loopne
pop
lock
add
jmp
jae
in
adc
add
neg
sbb
ds
cmc
pusha
and
in
clc
in
dec
cmp
mov
outsb
pop
xchg
adc
pushf
inc
xchg
and
cmp
and
mov
lea
aam
into
ljmp
sbb
stos
and
mov
faddl
cmp
jle
lcall
jl
pop
cld
fsubs
mov
push
pop
mov
pop
sahf
mov
or
cmpb
insb
notb
ja
dec
mov
or
cs
mov
sbb
push
xchg
stos
gs
dec
gs
xchg
dec
insb
add
pop
loope
test
loope
adc
add
mov
inc
adc
fsubr
dec
aam
mov
out
enter
sahf
rcl
adc
dec
in
cwtl
das
push
aaa
aas
popf
push
and
loop
mov
cmc
ret
push
mov
xor
les
xor
and
push
xor
faddl
mov
lahf
sub
mov
add
int3
jnp
pop
sub
cltd
dec
movsl
cmp
add
aam
sbb
add
in
mov
ret
dec
ja
and
hlt
mov
xchg
push
xchg
xchg
xor
pusha
cmpsl
js
lea
jp
out
lods
shll
call
mov
push
test
inc
mov
ss
pop
test
pop
mov
scas
and
and
jge
test
pop
mov
inc
addl
xchg
add
cmp
xor
lock
nop
jae
insb
bound
data16
in
test
push
xchg
mov
in
dec
lods
lock
outsl
xchg
sub
dec
sti
adcl
sbb
dec
sbb
leave
ljmp
clc
mov
xor
syscall
sbb
out
rcr
adc
das
stc
push
daa
lods
outsb
mov
xchg
popf
sbb
sbb
addr16
pop
cmpb
push
nop
xorb
mov
addr16
dec
insb
ret
pop
xor
sbb
loopne
aad
imul
std
mov
sbb
movsl
cmp
dec
dec
inc
das
ss
cli
jmp
movsl
pusha
push
mov
imul
inc
mov
btr
xchg
xor
in
imul
xchg
jl
int3
sub
xor
call
push
pushf
sahf
cs
cmc
push
and
xlat
mov
rorl
push
dec
ja
mull
or
inc
out
fxch
out
ss
cld
cmp
pop
mov
imul
or
sbb
es
dec
enter
rclb
hlt
roll
jecxz
dec
cmp
divl
xchg
adc
mov
sarl
adc
jbe
inc
cmp
push
inc
cld
fidivrs
js
inc
in
sbb
movaps
daa
mov
sbb
cmp
jae
mov
and
add
pusha
mov
rcr
cmp
inc
movsl
or
mov
xor
mov
jge
outsl
and
icebp
fst
xchg
dec
outsl
xor
xchg
sub
pushf
mov
xchg
mov
int3
lahf
fiadds
in
test
enter
jl
test
dec
xor
xchg
mov
insb
test
shrl
inc
mov
xor
jecxz
sbb
cmpsl
addb
xorl
test
sahf
push
daa
xlat
push
sbb
xchg
pop
jb
sti
loope
pop
mov
mov
adc
sbb
push
push
xor
pop
add
shr
push
push
out
insl
shrb
push
stos
loopne
cmpsb
outsb
adc
scas
jmp
mov
andl
clc
xor
ficoml
mov
sub
mov
scas
push
adc
jnp
cmp
les
dec
jmp
sbb
lods
dec
loopne
push
sbb
adc
jae
ljmp
or
ds
adc
hlt
xor
test
mov
sbb
popa
popa
lret
pop
cli
mov
and
negb
cmp
popf
pusha
jbe
inc
inc
jbe
aas
pop
inc
hlt
mov
lock
fldcw
add
cmp
andl
cltd
push
mov
push
adc
jae
lock
or
dec
dec
fdiv
adc
mov
jns
adc
jne
jmp
mov
push
aaa
xchg
and
mov
inc
lret
adc
sbb
ljmp
shl
shll
cmpsb
inc
je
dec
shlb
fstp
iret
arpl
lea
sbb
scas
xchg
sub
inc
imul
mov
adc
sub
ss
pop
inc
inc
mov
jns
inc
xor
mov
inc
stos
subps
lods
test
call
inc
jmp
dec
dec
or
lods
aaa
sbb
adc
lret
sti
stc
dec
mov
in
pop
inc
adc
mov
and
and
adc
cltd
roll
push
imul
mov
mov
dec
ficomps
jae
jmp
push
adc
add
adc
adc
xchg
jl
lahf
push
xlat
aas
ljmp
sar
add
hlt
pop
add
jne
fwait
jl
push
pop
pusha
cld
ljmp
push
or
or
lcall
mov
not
lock
pushf
sarb
dec
shrb
mov
lods
test
aad
xchg
hlt
aas
mov
jmp
xchg
xor
mov
adc
aad
sbb
pop
jo
dec
mov
hlt
loop
adc
hlt
push
sahf
sub
out
sbb
sbb
push
push
add
in
inc
rolb
test
xchg
dec
cmp
lods
mov
mov
mov
mov
adc
into
xor
sbb
bound
lods
cmpsl
lods
add
test
inc
lds
adcb
adc
ss
faddl
xchg
movswl
dec
jae
push
xchg
mov
mov
into
mov
cmp
jnp
out
add
loopne
js
sti
inc
stc
ret
fldl
cmpsb
sbb
notb
or
push
cmc
repz
add
push
sub
sbb
xchg
loopne
js
sub
push
push
jmp
mov
and
mov
mov
arpl
dec
pop
dec
jp
mov
cmc
sub
arpl
push
xor
mov
stos
sbb
rorb
les
std
test
mov
lret
fs
rorl
mov
fs
orl
push
add
in
xchg
ficompl
push
mov
or
jge
pop
imul
ss
hlt
pop
pop
lea
and
or
pop
dec
lods
in
cmpsl
in
sbb
xor
mov
ss
pop
dec
test
xchg
sbb
out
fldt
ds
std
sbb
add
pop
xor
sub
inc
jae
xchg
xor
and
xchg
test
int3
pop
push
push
icebp
clc
jbe
es
aad
aam
cmp
and
jl
and
mov
sbb
push
jmp
out
mov
movsl
push
mov
xchg
mov
sbb
mov
outsb
xchg
rcrb
mov
test
imul
jae
mov
add
test
push
dec
push
sbb
or
mov
lds
push
xor
std
ror
test
cmp
rcll
pop
sbb
repnz
in
jge
xchg
shl
inc
gs
icebp
jne
lods
sub
jmp
mov
addb
and
sub
sub
xchg
xor
dec
in
and
cwtl
loope
jecxz
cltd
dec
cltd
lods
xchg
mov
inc
mov
sbb
jno
popf
repz
push
test
sbb
stos
sbb
outsl
imul
pop
add
test
aam
shr
aam
loope
push
xchg
cmp
imul
in
sbb
in
repnz
outsb
js
xor
adc
xor
fsubs
xchg
in
ds
or
mov
ss
sbbb
mov
jecxz
adc
repz
mov
cmp
movsb
cs
mov
lea
mov
or
pop
ds
ds
xchg
cmovnp
les
push
dec
adc
and
cmp
test
inc
daa
scas
ret
and
pop
lea
fcmovnbe
pop
cmp
lods
mov
js
push
dec
ljmp
fwait
pop
ja
stos
test
in
pop
xchg
movsb
outsb
sbb
mov
cltd
sub
and
fdiv
cwtl
sbb
pop
fisubs
pop
pop
jmp
dec
pushf
cmp
sub
stc
xchg
ret
push
call
sarb
inc
xchg
lea
pop
orb
mov
xchg
mov
sub
out
sub
and
popf
xor
mov
cmpsb
leave
jmp
xor
cs
mov
cmc
test
sbb
pop
mov
pop
inc
adc
mov
adc
in
je
or
xchg
or
dec
dec
call
push
dec
clc
or
fwait
or
loopne
or
sti
push
pop
jp
mov
cmp
stos
xchg
lods
inc
dec
or
dec
inc
and
sarb
roll
cs
adc
xor
ret
mov
cmp
push
inc
movsb
push
addl
repnz
sbbl
out
sub
mov
mov
es
stc
dec
mov
sbb
mov
aaa
ficoms
test
imul
pop
push
pop
popf
std
imul
add
sbb
mov
roll
jns
dec
jb
cmp
in
sub
dec
pop
enter
cs
push
and
inc
outsb
js
add
pusha
int
loope
push
mov
in
mov
add
testb
repz
out
popf
subl
mov
fistpl
rcl
cli
out
into
xchg
nop
fs
addr16
ljmp
cmp
and
rclb
faddl
mov
xor
les
jecxz
mov
loope
scas
outsl
fcompp
xchg
fldenv
test
cmc
sbbb
mov
add
mov
adc
imul
jbe
hlt
int
and
test
sub
xchg
mov
jge
dec
out
jae
dec
imul
push
pop
xor
adc
pop
mov
popf
inc
push
mov
popf
dec
mov
ds
lahf
jbe
fcmovnbe
push
outsb
and
les
xor
fsubrl
or
cmp
bound
and
dec
mov
sub
mov
imul
in
push
jns
mov
out
inc
incb
dec
push
int
daa
sub
sahf
iret
fnstcw
lahf
xor
dec
in
mov
fistpll
push
xchg
pop
push
inc
repz
into
xchg
fwait
loope
mov
inc
std
int
cwtl
popf
inc
cltd
pop
sahf
and
fwait
pop
call
inc
scas
xchg
sbb
inc
xchg
push
ja
lret
xlat
xor
insb
imul
dec
inc
cmpsl
mov
sub
pop
repnz
mov
sub
add
or
push
lds
test
movsb
mov
cmc
fldl
mov
push
or
inc
push
cmc
inc
movlps
fstps
add
and
push
into
leave
fstp
cmc
popa
mov
push
je
pop
add
movsb
lahf
and
adc
xchg
sub
xchg
je
ds
lret
adc
pop
xchg
mov
std
jbe
jg
in
dec
xor
dec
popf
inc
hlt
xlat
push
lock
leave
lea
xchg
dec
cmpsb
in
or
jecxz
sbb
mov
mull
mov
dec
xchg
sahf
loop
clc
jo
stc
in
sub
mov
dec
call
fdivrl
and
push
xchg
cmp
mov
adc
sbb
adc
sti
xor
ja
dec
add
sub
lods
and
iret
push
bound
sti
lret
ja
xchg
dec
adc
inc
jno
js
int3
ljmp
xor
pop
push
movsb
cltd
pop
lahf
jle
adc
push
xchg
fimull
jb
std
inc
or
xchg
test
sar
pop
jp
popa
cld
insl
xchg
ljmp
dec
insl
scas
dec
ja
imul
push
leave
nop
das
ficompl
inc
or
cld
lods
cmp
xchg
inc
sbbl
sub
jmp
sbb
and
mov
lock
sbb
imul
adc
xlat
mov
in
push
fsubr
fcoml
aaa
fdivr
mov
cltd
xchg
push
cmpsb
mov
clc
cmp
add
xor
lds
test
imul
adc
shlb
mov
lea
dec
xor
xlat
push
mov
outsb
pop
lret
clc
enter
fwait
popa
inc
insb
pop
inc
cmpsb
cmp
fisttpll
sbb
fwait
out
cmp
dec
xchg
out
pop
pop
out
addr16
mov
outsb
or
sub
je
dec
mov
add
adc
add
imul
push
lods
lret
fisubs
shrb
mov
popf
fs
movsb
xchg
cmp
fwait
xchg
enter
jns
lahf
popa
jo
jmp
stc
jb
xor
and
daa
dec
sahf
test
icebp
adc
adc
imul
lret
cmpsl
cmc
push
cmpsb
mov
mov
shrb
or
imul
pop
mov
dec
pop
sbbl
xchg
icebp
loope
idiv
pop
inc
lea
push
fldt
ss
scas
test
sbb
lahf
xorl
adc
cmpsl
dec
xchg
cmc
sub
jge
pop
add
movsb
push
xchg
hlt
add
dec
jl
mov
dec
subl
pop
push
and
mov
mov
jle
mov
cmp
out
aam
xchg
aad
ret
imul
rcl
jo
loope
fimull
mov
outsb
mov
ss
call
into
cmc
push
mov
stos
add
sub
insl
fisttps
test
push
shlb
dec
sbb
dec
bound
in
and
or
subb
jmp
leave
subl
xchg
sbb
ficomps
enter
adc
outsl
out
adc
cmc
repnz
stc
sub
mov
lods
aas
push
or
pop
sub
stos
jecxz
adc
xlat
movsb
add
add
mov
popf
lods
xchg
mov
dec
movsl
lahf
mov
pop
cmp
lods
iret
ret
scas
inc
jmp
adc
sbb
stos
sarb
xchg
dec
test
mov
loopne
cmp
cmp
sbb
loopne
rclb
or
das
cli
jmp
fcompl
mov
dec
inc
cld
mov
dec
out
loopne
data16
inc
lods
loop
xchg
nop
add
mov
push
mov
xor
jae
mov
jp
cli
imul
push
int3
lock
xchg
icebp
mov
repz
add
jecxz
xor
dec
dec
inc
xchg
pusha
outsb
or
xchg
sbb
push
in
add
add
mov
cmp
cmpsl
push
das
pop
add
scas
pop
pop
mov
mov
adc
mov
gs
inc
stos
cmp
sbb
lret
cmp
stc
dec
sbb
or
scas
sbb
jo
insl
inc
xlat
ja
arpl
or
inc
test
setp
loope
xor
lods
lret
sbb
xor
and
pop
inc
or
adc
xchg
es
lea
push
mov
into
xor
mov
and
dec
sbb
jl
dec
arpl
or
xlat
andb
pop
or
push
cmp
aas
lock
inc
fsubr
roll
ficoml
mov
add
and
mov
test
xchg
into
int
movsb
ljmp
add
push
out
xor
out
jne
or
push
sbb
insb
sub
jp
daa
jecxz
inc
or
mov
adc
inc
jno
jl
sub
and
or
rorl
push
mov
fwait
pop
movsb
stc
popf
jnp
add
and
jecxz
inc
inc
loop
cmp
pusha
xor
cmc
sbbb
pop
push
jbe
sarl
fldt
pop
daa
gs
rsm
into
insb
stc
or
cmp
mov
lods
xchg
push
xchg
mov
iret
imul
push
add
mov
inc
pop
in
cwtl
push
outsb
repz
mov
mov
pop
inc
sub
and
pop
aad
ja
xorl
dec
lret
fwait
loope
jns
dec
imul
call
test
outsb
pushf
mov
push
daa
mov
and
lahf
mov
lcall
xchg
es
testb
hlt
mov
and
push
int
in
rol
and
inc
fmul
or
repnz
das
icebp
sbb
bound
shlb
or
mov
fcmove
jno
ljmp
sub
filds
daa
negb
pop
aam
ret
push
roll
mov
lea
xchg
sub
pop
repz
leave
dec
xlat
rcrl
or
xlat
out
test
adc
pushf
aad
sub
cmp
xor
jo
dec
push
sahf
std
test
and
pop
xor
pop
mov
lds
mov
sahf
or
inc
fistpll
arpl
cmpsb
in
rcr
mov
dec
iret
mov
and
sbb
inc
test
jno
notb
aad
push
shll
push
and
arpl
push
ds
push
dec
xor
push
add
or
and
aaa
jp
js
fadd
add
popf
xor
sub
insb
dec
rcll
sbb
scas
stos
adc
lret
stc
xor
leave
ds
paddw
fbstp
jae
xor
cld
arpl
mov
test
cmpsb
lods
adc
ret
test
or
psubusw
mov
or
sti
ficoms
mov
pusha
sub
mov
xchg
or
and
push
fists
ret
xchg
or
pushf
pop
jnp
lds
mul
and
inc
rcrl
push
ljmp
mov
std
daa
fldenv
lret
pop
jo
insb
into
loope
aad
clc
mov
fadds
inc
sarb
add
push
aad
or
aaa
mov
lock
or
test
mov
xor
das
cltd
inc
popa
popl
jnp
stos
ror
xchg
push
loope
cmp
cmp
jecxz
sti
and
mov
mov
adc
cmpsl
sbb
sti
dec
cwtl
mov
adc
in
insl
cmp
xchg
or
sbb
mov
ds
cmpsb
rorb
dec
inc
cmp
jmp
fstpt
mov
es
loop
pushf
mov
push
or
popf
fcmovnbe
fs
pop
inc
cmp
pop
pop
popa
lods
pop
mov
out
mov
cld
bound
test
outsb
jnp
insb
cld
mov
iret
movsl
cmc
subb
cmp
iret
mov
inc
sti
loope
jae
popa
sahf
orl
mov
push
jnp
outsl
sub
xchg
stos
and
inc
pop
push
pop
insb
mov
pop
jg
gs
cld
js
pop
out
add
cmpsl
inc
sub
and
jae
inc
loope
in
pop
repz
arpl
ror
inc
or
cmp
int3
or
arpl
mov
mov
test
push
jnp
xor
loop
cltd
sbb
mov
fwait
cmpsb
xor
out
pop
jbe
or
mov
or
mov
sar
out
je
ljmp
jae
xchg
xchg
addb
jmp
sti
mov
mov
lock
pop
jne
xchg
jecxz
addb
bound
repnz
test
adc
mov
lds
jle
in
ja
lahf
movsl
fwait
push
xor
push
and
ja
xchg
mov
loope
cmovno
fldz
inc
dec
jno
icebp
add
jno
sbb
fs
fnstsw
jne
js
or
je
lods
jge
lock
stos
aad
subl
adc
xchg
out
psubsb
sarl
push
loop
xchg
sbb
xchg
jnp
cmp
mov
rclb
test
imul
jb
aaa
arpl
in
leave
cmpsb
mov
dec
sub
daa
dec
lods
dec
or
fdivrs
add
mov
push
push
jnp
inc
push
repnz
pusha
imul
push
negb
push
or
int
popf
push
stos
movsl
aas
enter
xchg
repz
arpl
mov
xchg
aas
lods
sub
insb
stos
sbb
ret
leave
fstps
add
dec
fwait
std
lock
sbb
add
push
repz
popf
lcall
xchg
cmpsl
push
mov
pop
int3
neg
mov
pop
inc
push
cmp
cmpsb
add
popa
xchg
je
repnz
shl
scas
cmpsl
lcall
mov
mov
dec
xchg
subb
outsl
inc
xchg
sbbl
mov
aaa
data16
pop
les
fnstsw
ror
nop
aaa
in
pop
pop
adcb
das
push
lahf
jae
sbb
mov
fisubl
out
push
mov
daa
int3
adc
add
les
cmpsl
xor
pusha
shrb
jns
les
mov
lret
and
into
fcoml
std
stos
movaps
pop
push
outsl
call
cmpsl
sti
mov
inc
mov
scas
fisubl
sbb
mov
jg
xchg
sub
test
jge
pop
shl
pushl
test
mov
mov
mov
cmp
ret
js
xor
xchg
leave
sbb
xchg
fucom
aas
dec
add
insl
fs
mov
mov
rcll
stos
outsl
jmp
mov
loop
int
lret
adc
jl
push
test
push
cmp
pop
cmp
inc
push
dec
lds
shlb
fdiv
mov
cmp
lret
movb
push
in
jecxz
cmp
inc
and
xchg
xor
out
fwait
das
imul
pushf
fisttpll
pop
xchg
outsl
adcl
pop
jae
adc
inc
ds
stc
adc
imul
xchg
scas
push
xchg
lds
dec
inc
ja
lret
pusha
push
push
hlt
mov
mov
inc
mov
loop
pop
sub
call
pop
nopl
pop
sbb
inc
out
adc
xchg
popa
cmp
or
cld
stos
stos
adc
xchg
aam
xor
push
out
test
dec
mov
aaa
mov
xor
pop
fldcw
pop
lret
iret
cwtl
fs
cs
fcmovne
dec
xor
pop
fs
fstpt
daa
imul
xchg
movl
test
sbb
aad
push
je
cmp
pushf
xchg
add
inc
lods
push
mov
fistpl
dec
push
mov
imul
fs
fmul
addr16
popf
enter
les
mov
mov
push
xorl
jbe
cmp
ret
enter
cli
test
test
push
xorb
adc
ficomps
xchg
iret
sbb
cmpsb
xchg
and
cmp
movsb
xchg
xor
mov
jge
in
jge
xchg
hlt
or
dec
sbb
xchg
scas
cs
adcl
pop
cmp
pop
or
loope
shrb
add
arpl
call
nop
sub
or
jmp
cmpsl
stos
jmp
inc
fsubrl
imul
fnstcw
ja
repz
les
push
lods
jns,pn
js
jns
push
aad
xor
rcrl
mov
aam
mov
jbe
mov
fs
mov
push
ficoms
dec
jmp
adc
leave
cltd
pop
mov
jp
fidivrl
xchg
inc
pop
add
rol
inc
fcmovne
push
xor
push
rol
dec
lods
scas
add
mov
nop
fcmovnu
add
lcall
notb
scas
pushf
sbb
dec
js
fidivl
xchg
jns
fidivrl
jbe
testb
sbb
outsl
push
mov
test
jae
push
aaa
in
mov
std
test
repz
jmp
das
sub
mov
movsl
and
imul
loop
inc
movb
incl
add
inc
jmp
mov
inc
dec
mov
or
mov
sti
xchg
inc
movsb
sbb
out
inc
pop
mov
xor
pop
or
dec
inc
clc
imul
sahf
fsts
dec
add
dec
mov
sub
fdivl
pop
nop
dec
mov
pop
fwait
nop
aaa
dec
cltd
das
aam
mov
mov
mov
mov
mov
std
xchg
xlat
sbb
cmp
xor
into
xlat
jecxz
pop
xchg
mov
je
xchg
cltd
dec
cli
xchg
shlb
add
and
xchg
mov
sbbb
in
add
lods
cmp
pop
loop
pop
jle
in
push
and
push
mov
mov
ja
jmp
arpl
lret
ret
std
sahf
aam
and
ds
call
shll
rclb
ficoms
push
rclb
jp
dec
loope
and
mov
in
push
add
out
xchg
les
test
xor
ss
jl
lea
fidivs
ficoml
jmp
cltd
scas
adc
inc
or
adc
fldcw
sub
icebp
add
pop
add
inc
das
sbb
repz
jbe
push
jb
hlt
cwtl
dec
jb
mov
mov
test
pop
fisubs
insl
test
call
sbb
data16
out
xor
cld
mov
sbb
out
pop
sahf
out
xchg
inc
scas
mov
mov
inc
and
adc
cmp
test
mov
pop
mov
mov
pop
inc
pushf
push
push
std
test
addr16
lcall
imul
fwait
ss
and
sahf
test
mov
push
cs
outsb
movsl
mov
cltd
xchg
mov
inc
jae
xor
ss
pushf
lahf
lret
push
inc
mov
sub
mov
xlat
cmp
roll
fcoml
adc
cmpsl
movsl
fmuls
inc
sbb
mov
sub
push
push
add
xor
mov
mov
lods
mov
ja
push
outsl
or
xchg
xchg
hlt
test
lods
shrb
mov
cmp
jo
jae
xor
xor
test
push
ljmp
popa
push
test
xchg
push
mov
cmpsb
sbb
and
add
loop
aas
jne
xor
mov
jge
fldt
sahf
adc
push
repz
adc
dec
sbb
and
mov
lret
lods
ljmp
push
out
dec
sarl
xchg
jne
shlb
test
loope
nop
add
sti
cmp
mov
or
sub
adc
jb
outsl
sbb
and
mulb
xchg
imul
xchg
movsb
push
adc
or
mov
sar
mov
rcrl
dec
or
outsl
and
call
fst
shl
jle
sbb
les
into
add
mov
pop
jmp
mov
addr16
out
stos
ret
inc
xchg
bound
sbb
pop
scas
adc
sbb
mov
test
repz
jl
xor
sbb
bound
push
stos
ljmp
push
ret
cmp
shlb
cmp
push
int
sub
subb
push
mov
loopne
inc
inc
xlat
cs
inc
pop
pop
dec
in
lock
in
cmp
negl
mov
jbe
add
sti
popa
inc
xchg
test
adc
je
out
or
fs
dec
les
or
xchg
jnp
mov
lock
lods
pusha
andb
sub
xchg
faddl
mov
xor
push
leave
add
sbb
rorl
pop
and
dec
sbb
repz
clc
dec
sub
je
push
mov
dec
cmc
dec
fwait
dec
xchg
iret
lods
in
rorl
idivb
mov
es
clc
push
pop
bound
mov
fnstsw
adc
xor
or
adc
inc
mov
push
pop
push
insl
add
mov
lods
adc
mov
ret
mov
inc
pushf
mov
push
popf
mov
outsb
sub
repnz
outsl
aas
mov
cmp
aaa
inc
mov
inc
fsubl
call
pop
aas
es
lea
call
lret
out
leave
lret
push
sahf
mov
hlt
je
pop
fisttps
lret
dec
imul
ficoml
xchg
les
push
add
or
das
notl
mov
sub
bound
lock
shll
mov
cmpsb
xchg
shl
pop
fscale
cs
ljmp
pop
mov
xor
repnz
or
jb
and
andb
pop
ljmp
mov
pushf
and
int
pop
mov
dec
stos
add
sbb
adc
into
sbb
or
mov
jo
adc
mov
mov
add
stc
mov
push
stc
in
adc
std
jae
cmp
test
jbe
test
and
out
push
in
scas
xchg
fstl
inc
inc
fistpl
xor
cmp
pop
jbe
and
mov
icebp
pop
mov
out
or
das
and
dec
xchg
cmp
fcomps
mov
dec
ss
jo
inc
push
pusha
mov
jae
pop
dec
test
and
jb
in
inc
lcall
jp
aad
stos
gs
adc
mov
mov
mov
pop
inc
mov
xor
cmc
mov
test
mov
out
out
loop
subb
lea
add
xor
fwait
jns
imul
dec
int
in
lea
pusha
cmc
call
fcomi
test
bnd
jae
add
decl
fst
iret
xor
daa
popf
aam
cmpb
test
shll
push
call
fisubl
inc
or
jl
in
mov
and
mov
and
xchg
insl
xchg
inc
xchg
push
stos
out
mov
cmp
clc
push
cmpsb
fisubl
lods
out
lret
lcall
iret
sbb
xchg
leave
cmpsl
mov
mov
mov
inc
xchg
cltd
xchg
xchg
int
push
iret
push
or
call
andb
test
and
mov
cmpl
push
jmp
xchg
mov
nop
and
push
cmc
adcw
xor
push
sub
int
popa
pop
daa
and
jae
jle
test
fdivrs
faddp
push
lcall
or
jne
sbb
into
cld
pcmpgtd
push
lods
and
loopne
rcrw
jns
mov
mov
or
imul
ss
mov
aaa
push
pop
pop
dec
add
cmp
jns
lahf
andb
rclb
ss
std
dec
mov
fisttps
mov
nop
arpl
in
shll
roll
lret
add
nop
xor
jg
sbb
hlt
lods
sub
mov
sti
xchg
int
or
jns
pop
pop
xor
inc
sbb
pop
icebp
jle
inc
xchg
lods
mov
cmp
inc
cmp
lea
xlat
sahf
aaa
arpl
stos
pop
lds
rclb
dec
scas
sbb
jle
cwtl
loop
mov
inc
iret
hlt
sbb
push
aaa
arpl
mov
mov
jmp
push
pop
cltd
data16
js
mov
adc
orb
mov
or
cwtl
sahf
mov
call
bound
and
cmpsl
pop
jl
aad
repz
fiadds
enter
shlb
out
sub
rcrb
test
shlb
mov
mov
mov
loop
rcr
or
mov
jnp
ss
shlb
sbb
or
test
icebp
xchg
lods
xacquire
in
mov
ss
scas
add
xor
pop
dec
mov
cld
and
outsl
sub
adc
popf
pop
inc
decl
dec
and
and
clc
jl
cmpl
fldz
repz
std
or
aas
or
aas
outsb
cmp
push
flds
leave
loope
rorb
jg
and
adc
jno
pop
sti
sub
mov
jnp
push
imul
fnstenv
outsl
ffreep
jae
jb
stos
mov
and
add
sbb
andl
movsl
dec
lods
imul
or
loope
cmp
rcrb
xchg
dec
repnz
xchg
in
push
fmull
divb
imul
push
cmp
xor
nop
jae
scas
pop
scas
test
lahf
cmp
imul
adc
test
dec
aas
pop
cs
insb
push
mov
popf
jmp
xchg
fidivrl
and
inc
inc
inc
sub
loopne
mov
andps
mov
jp
imul
stos
push
les
or
dec
rorb
inc
inc
outsb
cmp
je
orl
testb
mov
add
mov
cvtpi2ps
xor
or
fwait
stos
xor
inc
add
addr16
inc
fsubl
push
ja
adc
aaa
mov
push
pop
mov
push
mov
fstp
push
inc
cmc
stos
dec
xor
pop
push
or
push
lock
and
xchg
xchg
push
sub
sub
dec
jmp
rcll
ja
in
arpl
adc
aas
mov
ljmp
sbb
pop
lods
pop
push
dec
pop
push
dec
int
add
add
imul
iret
push
fwait
cs
or
xchg
ds
outsl
add
lock
enter
add
ja
adc
adc
popa
ds
fucomp
dec
and
xchg
sbb
shlb
test
cmp
sub
shll
addr16
rcl
arpl
imul
push
scas
sahf
xor
xchg
add
ja
cltd
sub
cmpsl
or
hlt
mov
mov
dec
cli
cmp
jp
enter
test
inc
dec
popf
subb
xchg
cli
cmp
mov
sti
sub
sub
pop
dec
or
mov
fwait
sbb
push
push
mov
pop
cld
aas
ficomps
pop
xor
outsb
adc
mov
xor
shr
adc
aaa
mov
popf
or
cmp
push
or
nop
lock
aaa
jmp
or
test
mov
or
lea
fldt
add
jle
es
pop
mov
mov
ljmp
mov
mov
mov
inc
fsts
mov
push
adc
ret
lea
xor
icebp
mov
movsb
loopne
out
outsl
jbe
ja
push
lea
pop
or
jb
rcrb
out
enter
or
negl
pop
shl
in
adc
sbb
xor
push
repnz
in
sbb
cmp
dec
sub
and
or
ficoml
test
adc
mov
aaa
sbb
jge
and
sarb
xor
les
ret
inc
movsl
push
nop
mov
sbb
cmp
jns
xorb
jae
sbb
imul
sarb
out
imul
adc
xchg
out
int
mov
push
mov
fcompl
dec
mov
imull
sbb
clc
aaa
insl
pop
pop
adc
lds
pop
fidivl
repnz
sbb
rcrl
inc
or
or
push
mov
cli
xor
xlat
xor
mov
xor
mov
lahf
sub
sub
xchg
cmpsb
xchg
rorb
inc
inc
push
xchg
aad
std
sub
sub
or
and
sub
adcb
loopne
nop
mov
jne
mov
push
cmp
pusha
jecxz
aad
or
shl
test
into
sbb
xchg
sub
pushf
lret
iret
movsb
les
add
je
sub
cmc
inc
out
sbb
jbe
cmc
std
inc
pop
jbe
cmpsb
test
rcrb
rorl
and
fidivrs
push
loop
mov
mov
frstor
in
sub
int3
pop
xchg
inc
and
push
pop
or
into
leave
popf
aad
test
cli
dec
test
jmp
push
push
jbe
fwait
testb
rcrb
stos
shl
sahf
ret
jae
cmp
cmp
loop
fildll
outsb
test
sbb
xor
out
adc
xchg
or
js
xor
repnz
addr16
pop
addr16
mov
or
xchg
mov
xor
sub
scas
pop
xor
mov
dec
iret
iret
fwait
cmp
xor
add
sahf
jmp
je
push
cmpsl
test
mov
dec
push
sbb
mov
cmpsb
jae
pushf
mov
jle
incl
test
jno
shlb
enter
gs
push
pop
lods
adc
jmp
insb
adc
and
push
or
xor
push
movsl
cmp
imul
cltd
in
roll
out
shll
test
gs
cmp
enter
pop
loop
pop
jbe
jg
stos
mov
and
leave
jmp
jge
sub
sub
enter
gs
cld
scas
add
push
ja
add
dec
ja
stos
dec
xor
and
movsl
pop
ret
inc
cli
int3
xlat
and
push
aaa
pop
adc
js
mov
daa
lock
or
inc
fs
adc
scas
repnz
add
pop
aad
xor
pop
ret
pop
jg
push
ljmp
enter
inc
mov
daa
cmp
mov
lods
rcrl
xchg
and
adc
sbb
iret
je
mov
stos
ret
inc
push
loope
fs
in
xor
cmp
shlb
fstpl
inc
adc
xor
std
dec
push
sub
inc
pop
mov
jno
rcll
pusha
dec
dec
fwait
add
add
sarl
pop
jg
xchg
sbb
js
xchg
mov
pop
das
icebp
sub
out
fnstsw
push
shll
orl
add
cmpsb
or
mov
pop
sbb
jo
xlat
dec
adc
push
jne
and
add
andl
into
jp
js
xchg
xchg
jns
pop
xorb
les
jecxz
pop
mov
out
mov
cs
push
sub
mov
leave
mov
ljmp
or
mov
ret
or
push
push
mov
incl
sahf
mov
aaa
int
xor
cmp
pop
ret
mov
fidivs
mov
push
fnsave
int
test
push
pop
pop
inc
xlat
negb
lock
sub
hlt
push
inc
out
testb
sbb
mov
pop
decb
leave
movsl
out
mov
jmp
je
repz
mov
pushf
sub
sbb
aas
daa
lods
pop
out
add
add
js
push
cwtl
dec
in
outsb
mov
pop
push
xchg
lret
hlt
sub
push
cmp
pop
pop
push
addr16
ljmp
mov
clc
xlat
dec
fcoms
xchg
test
repz
ret
icebp
in
push
call
in
xor
xorb
inc
push
shll
add
lahf
xor
inc
push
jno
inc
shrl
repz
jne
fdivs
rol
std
repnz
jg
cmp
aas
mov
test
je
ds
daa
repz
mov
shl
fcoml
inc
xor
dec
push
dec
fists
jae
cmp
mov
cmp
adc
push
mov
sub
subl
pop
int
add
xor
aas
inc
arpl
jb
sbb
adc
jecxz
sbb
jnp
inc
inc
add
push
push
add
subl
xchg
xchg
popa
jnp
aam
jbe
not
jp
sbb
ret
cmp
fimuls
mov
lahf
cmp
sub
mov
pushf
mov
arpl
in
push
adc
ljmp
jae
dec
leave
mov
imul
popf
xor
std
insb
mov
lea
mov
xchg
push
xchg
mov
xchg
sahf
mov
std
jnp
sar
shlb
jno
fsub
ss
or
push
push
fsubs
stos
pop
lods
in
push
and
xor
push
pop
jbe
rcrl
cli
fs
jb
cmp
ds
arpl
pop
shr
adc
xlat
dec
cmp
lahf
and
and
xchg
leave
mov
mov
add
fidivs
clc
mov
ret
inc
sahf
pop
inc
lods
popa
mov
in
cs
sub
cmc
sbb
mov
adc
pop
pop
mov
es
aas
push
pop
fnstsw
jns
cwtl
xlat
stc
add
push
aaa
add
fldcw
ficomps
bnd
push
and
xlat
push
dec
mov
push
inc
xchg
insl
pop
movsl
clc
cmp
es
imul
inc
and
mov
orl
dec
push
into
jmp
mov
negl
push
fdivrl
pop
xchg
jmp
jmp
lcall
pop
test
dec
pop
nop
inc
cmp
js
and
in
cwtl
pop
cmp
lods
inc
outsl
jg
loope
sub
vmovdqu
into
push
mov
cmpsl
pop
xor
call
loopne
sbb
repnz
orl
jo
adc
imul
std
mov
repnz
jg
sbb
pop
fidivl
lahf
pushf
or
and
push
daa
jmp
pop
fmull
test
push
fisubrs
push
xchg
adc
mov
and
sbb
mov
adc
scas
push
mov
mov
popf
scas
jle
lods
push
push
cmp
or
dec
lcall
xor
rcll
pop
add
les
xor
mov
fildll
test
mov
cli
and
xchg
and
ja
xor
sbb
jns
xor
jle
sbb
xchg
jno
dec
mov
lcall
and
adc
add
aam
push
leave
jno
fcompl
stc
jl
jno
mov
stos
fisubrl
push
das
sahf
mov
inc
pop
push
pushf
push
add
lea
mov
mov
cmp
xchg
push
sti
inc
aam
xchg
in
outsl
fdivrs
std
pop
xor
sahf
es
int
push
mov
out
sbb
or
inc
inc
mov
push
push
pushf
pop
lret
into
or
xor
loope
jl
pop
adc
je
or
fwait
imul
in
ja
mov
jmp
in
xor
mov
mov
in
out
cmc
inc
jg
push
retw
data16
sbb
xchg
bound
jmp
stc
je
push
inc
dec
mov
sti
mov
fsubr
and
rcr
repnz
xabort
les
and
imul
popf
das
xor
sub
leave
mov
loop
and
cld
popa
std
inc
cmp
adc
test
mov
or
stos
idivb
pop
sbbb
popa
jp
ja
mov
cmp
pop
inc
scas
in
ret
sub
jl
inc
xchg
out
hlt
adc
inc
jge
xchg
out
mov
inc
add
or
sub
lahf
inc
xor
dec
std
aas
inc
pop
or
cli
xchg
out
cld
push
ja
repz
inc
int3
and
push
mov
imul
jo
dec
mov
insl
xchg
sbb
or
lods
ds
jp
cltd
cld
andl
mov
cmp
imul
mov
push
mov
int
ds
imul
xor
cs
dec
and
mov
loop
in
add
test
cmpsl
aaa
lret
push
dec
xchg
cli
mov
push
clc
sahf
popa
mov
out
out
cmpsl
add
mov
xchg
pusha
push
pop
jne
in
mov
mov
jns
dec
mov
jbe
fwait
iret
rcll
ljmp
xor
pop
xor
mov
outsl
pop
inc
xchg
mov
imul
shlb
clc
aad
jnp
fisubrs
lcall
bound
jne
pop
cmp
adc
mov
loope
ret
mov
pop
insb
pop
mov
inc
fcmovb
push
push
push
popa
fwait
repnz
js
mov
cmp
int
faddl
inc
and
jecxz
adc
cli
imul
xor
and
bnd
pop
adc
push
push
int
sarb
jg
imul
push
fbld
aam
lcall
mov
or
stos
inc
cli
and
sbb
loope
mov
retw
movl
jns
into
enter
call
push
movsb
sub
lahf
loopne
cs
adc
inc
sub
ret
ja
rcrb
outsb
stos
cli
cmp
cwtl
inc
pop
test
inc
adc
nop
adc
out
fldenv
andb
cmp
xchg
in
mov
and
push
jg
ret
clc
cltd
dec
divb
inc
mov
mov
cmp
sub
sub
mov
lret
fsubrl
xor
cmpsb
pusha
inc
es
xchg
stc
dec
dec
lcall
and
jne
sbb
leave
or
call
mov
xor
adc
lret
lods
jg
mov
lret
rolb
push
sbb
and
sub
mov
xchg
jmpw
sub
rorl
fs
lahf
add
sub
bound
sbb
dec
push
push
push
insl
int
adc
sub
jg
popf
jecxz
xor
ficomps
jl
sub
lret
mov
push
scas
xchg
mov
cwtl
xor
xor
sbb
mov
lret
dec
and
jbe
fcomip
mov
mov
and
ds
out
loop
add
mov
and
add
imul
imul
adc
dec
and
jbe
mov
or
ds
pop
sub
aam
rcrb
adc
adc
bound
mov
add
ret
adc
xor
test
int
xor
lods
orb
fcomps
jo
jns
call
push
jo
xchg
lret
out
pop
add
lods
cmpsl
mov
stc
fidivl
and
movsl
das
and
sbb
clc
and
arpl
xchg
in
test
ret
adc
bound
push
cs
add
mov
mov
mov
lds
add
lret
mov
pop
mov
movsb
in
adc
mov
xor
mov
outsb
in
out
mov
inc
cmc
mov
scas
xchg
pop
js
push
call
test
cmp
aad
dec
scas
sbb
pop
and
add
mov
fisubs
lea
jnp
push
popa
imull
sbb
xchg
test
daa
mov
cmpsl
lods
inc
mov
int3
pop
mov
xchg
leave
pusha
fwait
cmpsb
jecxz
or
xor
jge
inc
or
cld
inc
icebp
jmp
cltd
mov
std
sti
mov
dec
outsl
jns
and
jp
sub
mov
mov
jno
cmp
xchg
mov
les
xor
add
inc
int3
loop
and
adc
shll
leave
xor
xorb
jg
es
sub
fbstp
negb
mov
mov
lods
push
rcr
lds
push
mov
pop
mov
shlb
stos
cmp
dec
xchg
mov
sbb
int
mov
mov
lea
js
inc
cmp
cmpl
jb
and
and
inc
popf
mov
push
jae
push
div
nop
clc
add
push
cwtl
mov
iret
dec
popf
lret
pop
fldt
out
mov
cmp
jecxz
jbe
adcb
sarl
adc
push
jae
scas
xlat
lahf
sbb
int3
cmp
insl
xor
xchg
add
cmp
imul
das
cbtw
std
mov
pop
jo
jnp
push
ljmp
int3
or
sbb
jo
add
imul
std
sbb
sub
pop
lock
mov
pop
call
mov
jne
mov
xor
dec
jbe
lahf
inc
fbstp
addr16
mov
aaa
push
or
or
aad
mov
aas
sar
xchg
add
inc
cmp
dec
inc
sub
loop
sarl
and
xor
inc
hlt
jb
fistpl
lahf
dec
xor
xorl
or
adc
jle
push
pop
jns
jg
retw
outsl
push
xchg
hlt
sbb
mov
cld
mov
mov
sub
cs
push
test
sbb
scas
mov
pusha
sbb
mov
mov
ret
orl
movsl
pop
sub
xor
pop
aaa
dec
jp
fmulp
je
das
xor
popf
dec
shl
fistl
xor
fsubr
and
inc
testl
jno
jmp
idivl
mov
push
insl
sbb
sahf
inc
xchg
fmulp
rclb
fldenv
mov
jge
jmp
inc
sub
pop
xchg
mov
add
and
aas
mov
mov
fnstsw
mov
ret
fimull
stos
mov
pop
adc
in
lret
lahf
dec
js
fdivs
sbb
cmc
pop
js
mov
add
es
icebp
fwait
push
arpl
out
pop
gs
adcb
pushf
js
mov
dec
js
pusha
inc
mov
mov
push
lret
xor
jbe
mov
inc
add
jno
fsubrs
jmp
mov
jns
inc
aad
pusha
jge
add
add
jecxz
mov
adc
mov
movsb
dec
fcomip
mov
insl
cmpsb
pop
xor
inc
hlt
addb
ds
dec
mov
and
cmc
cmpb
rolb
insl
xchg
and
call
inc
cmp
mov
dec
inc
mov
mov
inc
loope
sbb
into
cmp
push
sub
mov
inc
out
mov
rolb
push
or
mov
mov
imul
aaa
inc
loope
rcrb
pop
cmp
adcl
cmp
sbb
sub
lcall
sti
test
mov
add
push
sub
cmp
push
jl
jg
mov
inc
inc
push
fiadds
fwait
or
repz
cltd
aas
lea
push
adc
inc
mov
ds
xchg
xor
daa
or
pop
loop
je
mov
mov
inc
rcl
fwait
adc
mov
ret
or
jo
cmp
pop
dec
push
mov
mov
sbb
sahf
sti
imul
in
fdivrs
call
jle
mov
or
dec
lods
imul
dec
nop
dec
push
leave
in
dec
fldcw
stos
jbe
or
cmpl
or
xor
fisubrl
aad
roll
push
jecxz
push
lock
mov
js
sti
sub
mov
sub
lds
jp
bound
cmp
pop
lds
in
cmpsb
stos
add
push
dec
inc
xor
or
pop
aaa
lods
sbb
andl
cli
insl
int
movsl
cmc
mov
cltd
mov
jmp
roll
sub
add
dec
in
push
adc
call
push
arpl
dec
cltd
or
nop
push
inc
dec
popf
rcrb
hlt
rorb
popf
jns
jl
mov
pusha
mov
in
sub
jno
sti
adc
inc
jae
jnp,pt
dec
cmpsb
add
enter
and
mov
cltd
orb
sbb
xchg
aad
mov
pop
nop
inc
ss
stc
enter
adc
or
dec
pop
bound
je
add
mov
nop
pushf
add
push
shlb
in
push
icebp
dec
icebp
dec
mov
cmp
cmpsb
mov
outsb
or
inc
inc
push
mov
dec
insl
lcall
hlt
jp
add
adc
push
imul
adc
pusha
in
dec
push
stc
add
or
ffreep
std
add
shrb
push
loopne
add
daa
int
cld
xchg
mov
dec
fsts
les
fbld
addr16
pusha
mov
or
neg
or
aam
fadds
pop
mov
incb
push
int
aam
fildll
stos
fnsave
in
lcall
mov
daa
pop
pop
mov
sub
push
sar
into
adc
mov
movsl
inc
cmc
pop
into
jg
cmp
mov
fs
js
mov
jl
sub
rolb
jge
hlt
inc
pushf
aas
je
jb
mov
cmc
push
nop
sub
push
xchg
and
in
pushl
cli
jns
ss
leave
jmp
movsb
aam
in
or
jae
lods
cwtl
sbb
rorl
fldt
mov
shll
ret
pop
movsl
adc
pop
jmp
jno
fldcw
and
jb
jmp
mov
fnstsw
pop
sub
and
sub
cs
fidivs
mov
pop
jnp
outsl
sti
jmp
push
add
sbb
jns
cmpsb
inc
roll
iret
lods
addr16
pop
out
cmp
add
sbb
cmpsl
or
mov
sbb
sbb
test
push
mov
sub
ror
push
je
popf
pop
aad
rcl
in
gs
ja
clc
out
dec
sub
pop
pop
iret
mov
adcb
lods
pop
pop
nop
aaa
dec
je,pt
popa
cwtl
add
cmp
inc
lea
call
call
and
adc
cltd
idivb
in
xor
add
xor
pop
sub
js
jo
mov
mov
dec
sub
pop
cmp
xor
adc
in
rclb
add
fildl
std
clc
in
ljmp
js
xor
xchg
jno
mov
xor
push
ja
enter
cmovnp
icebp
dec
push
lcall
or
jnp
mov
jge
xchg
xchg
popa
jl
dec
insb
add
aam
sbb
xor
mov
lds
or
lock
jl
lahf
je
push
stos
inc
push
pop
xchg
and
jo
ds
add
aad
repnz
adc
push
cmpsb
dec
lret
jo
mov
in
out
vshufps
push
incb
insb
mov
lret
cmp
xor
movsb
ljmp
fnstenv
int
dec
out
imul
mov
aaa
arpl
dec
sbb
in
or
xor
aaa
inc
gs
out
xchg
cmc
dec
cmpsb
fmulp
fsubl
std
jecxz
or
loop
cmp
jno
mov
push
xor
add
adc
cmpsl
pop
and
sbb
push
jnp
adc
pop
gs
mov
shr
ret
insl
xlat
xchg
inc
imul
loopne
rcl
nop
xor
sbb
and
mov
jb
mulb
js
movsl
xlat
imul
inc
xchg
xor
pop
sub
ret
aam
loopne
cmp
mov
jmp
xchg
dec
jmp
mov
lahf
daa
icebp
push
dec
aad
xor
mov
inc
iret
jnp
frstor
jae
in
andb
xlat
jo
daa
xchg
and
jo
mov
add
jo
mov
bound
das
add
daa
in
or
insl
xor
push
lret
push
jl
lahf
cmp
mov
lods
pusha
int3
adc
sbb
outsl
push
push
outsl
scas
mov
cmpsb
mov
rcll
addb
cmp
or
or
stc
js
jne
nop
push
les
dec
cli
ja
push
outsl
fcom
dec
adc
dec
push
loop
aad
rcll
je
adc
test
stos
ds
inc
or
out
inc
stos
repnz
push
insb
push
rcrb
int3
inc
cltd
lret
mov
push
sbb
pushf
roll
fs
xor
in
mov
mov
or
test
inc
mov
push
jp
jmp
divb
and
test
mov
sub
mov
dec
aas
lea
lahf
sbb
fsubrl
mov
outsb
dec
stos
shrl
repz
aad
call
pushf
ds
xor
mov
jo
mov
mov
leave
xchg
cltd
add
enter
cmp
stos
das
cmc
push
mov
inc
add
mov
mov
mov
inc
nop
xchg
pop
sahf
jge
mov
repz
add
jno
jne
xchg
jle
cmp
negb
lret
dec
mov
xchg
inc
and
daa
lods
stc
sub
rolb
pop
adc
ret
notb
xchg
stc
outsb
push
sar
fwait
inc
test
inc
push
cmpsl
mov
and
pushf
push
push
mov
add
mov
ljmp
pop
inc
shl
andl
iret
in
ljmp
sbb
xor
ljmp
ret
loop
pop
pusha
mov
jb
xor
dec
jp
aad
mov
lahf
xchg
fsub
mov
push
lea
or
scas
je
adc
adc
flds
or
inc
mov
iret
imul
lock
cmc
xchg
sub
sahf
les
lds
rolb
mov
dec
xchg
mov
sbbl
fidivrl
in
cmpsb
mov
test
stos
into
mov
pushf
push
gs
adc
outsl
stos
jg
fmul
xchg
loope
xor
adc
inc
ret
push
rorl
stc
mov
inc
movsl
loop
aas
sub
xchg
push
popl
dec
push
jmp
cltd
add
stos
sub
xchg
jmp
sbbl
or
inc
add
jl
or
sub
xchg
scas
jg
fcomp
xchg
or
je
push
ret
inc
push
cmp
add
adc
lcall
dec
mov
mov
ss
sahf
ljmp
roll
jmp
ljmp
leave
imull
fmull
sub
aaa
loope
cmp
xchg
cli
inc
in
push
adc
iret
cmp
xchg
push
cvtdq2ps
mov
jo
jg
push
xchg
mov
xlat
ljmp
mov
push
pop
in
jb
ljmp
lods
push
and
cmp
rcll
negb
add
pop
inc
cmp
push
lcall
addb
add
nop
adc
ss
fwait
mov
sbb
push
cmp
cmpsl
test
push
cs
ds
in
pushf
xchg
push
sbb
or
sahf
sbb
mov
push
and
cld
cmc
push
imul
inc
jo
sub
bound
xchg
cmpsb
shll
ljmp
push
xchg
xchg
mov
mov
add
pop
loop
push
scas
mov
lods
test
call
add
in
repnz
leave
inc
xchg
pop
adc
sbb
inc
adc
pop
push
push
push
xorb
out
fisubrs
mov
xor
push
push
jns
ds
test
in
outsl
out
pop
and
sbb
clc
in
pop
xchg
mov
xchg
cmp
pop
sti
xor
xor
stos
adc
push
test
mov
out
jge
cmp
outsl
stc
cwtl
or
fsts
and
push
push
pop
aas
lret
adc
lods
ja
inc
stc
test
cmpl
cwtl
hlt
add
push
data16
cmpsb
orl
fldl
imul
sub
sbb
jb
xor
loopne
sub
insl
ja
adc
add
push
rcl
xchg
pusha
xor
jmp
inc
lock
lods
sbb
jp
clc
push
pop
out
xchg
ja
mov
in
sub
mov
sbb
xchg
aad
fcmovne
idiv
mov
addb
jno
push
dec
xor
imul
nop
xor
andl
enter
push
pop
or
dec
imul
xchg
xchg
sub
and
push
xchg
cmp
dec
jnp
sbb
cmpsb
push
cld
popf
inc
test
fs
daa
daa
in
fisubrs
cld
inc
or
int3
mov
pop
inc
xchg
sub
aas
or
arpl
jbe
lods
mov
sub
ret
aam
or
jle
xchg
mov
inc
jb
nop
jecxz
jae
rcr
pop
dec
ss
daa
andb
mov
pop
mov
xchg
jae
pop
cmp
imul
test
in
adc
stos
jmp
pop
mov
pusha
pop
jge
aas
or
dec
mov
in
in
sub
rcrb
pop
cs
aam
adc
pop
dec
cmc
pop
xor
mov
ljmp
popa
std
cs
int3
sbb
dec
stos
pop
xor
mov
xor
imul
mov
adc
rorl
iret
pop
pusha
adc
or
outsl
xchg
mov
jno
repz
dec
or
jb
mov
outsl
mov
loopne
std
lods
pop
xor
push
in
jmp
pusha
cmp
sbb
cmp
out
add
ljmp
movsb
cmc
out
les
mov
aaa
lret
fsubs
sbb
pop
fs
pop
lahf
lahf
in
sub
mov
imul
cwtl
mov
int3
jns
xchg
push
cmpsb
cmp
inc
out
mov
mov
mov
xchg
fidivs
jne
into
adc
aam
cmc
jo
je
sbb
or
push
in
lahf
sbb
mov
jl
aad
xchg
test
mov
test
call
nop
xor
adc
fwait
popf
sarl
mov
popf
incl
pushf
aaa
pop
push
int3
in
push
sub
in
iret
xor
orl
cmp
and
inc
int
inc
or
cmp
and
movsb
jg
aam
sub
movsl
xorl
rolb
mov
cmc
fsts
movsl
bound
movsb
mov
es
inc
xchg
shll
test
fildl
dec
out
mov
flds
jle
daa
sbb
aam
lods
mov
pop
sbb
enter
xchg
adc
xchg
pop
sub
xor
in
cmpsb
dec
fistps
ja
and
test
xchg
cmp
push
push
nop
sub
jge
push
sub
mov
push
fidivrl
jnp
cltd
bound
movl
and
popf
jl
cmp
idivb
js
pop
mov
mov
iret
sbb
aaa
idiv
je
and
daa
in
ds
and
lea
adc
jb
mov
pop
mov
and
sub
ret
jecxz
mov
out
out
outsl
or
mov
fsub
pop
mov
mov
or
mov
xlat
and
pop
ds
push
jnp
cmp
arpl
loopne
hlt
mov
mov
cmpsb
aam
sbb
rcll
dec
add
stos
adc
and
cltd
lret
pop
xchg
imul
dec
repnz
push
std
adc
shl
nop
push
add
pop
pop
outsb
sub
jae
fsubs
adc
push
dec
scas
and
mov
cli
and
inc
pusha
loop
push
in
mov
lcall
mov
decl
fldl2e
mov
pop
repnz
inc
inc
cli
test
movsb
sbb
pop
lods
mov
fs
aaa
icebp
jle
cmp
dec
pop
sub
mov
mov
inc
pop
dec
rorb
jb
out
insl
ja
xchg
xlat
aad
pop
xchg
cld
cli
out
adc
sbb
cli
outsl
fmull
mov
xor
lds
or
inc
push
outsb
repnz
outsl
inc
add
xor
les
mov
adc
cs
or
clc
jns
sti
mov
aas
arpl
jl
pop
sub
orl
inc
mov
lock
or
std
mov
in
insb
stos
sarl
mov
clc
jns
inc
call
enter
pop
pop
xor
and
xchg
js
pop
add
sub
xchg
shlb
in
mov
mov
add
lds
xchg
xchg
sbb
mov
out
and
movsb
clc
orl
mov
xchg
test
inc
adc
sub
or
fwait
ret
sub
fsubl
push
cmp
push
jo
ss
stc
loop
aad
jmp
loopne
cmp
das
xchg
inc
imul
mov
int
xchg
cmp
mov
fimuls
mov
out
loop
insb
mov
add
add
cli
pop
call
fdivrs
insb
push
lods
ret
pop
roll
fs
dec
mov
dec
aaa
dec
dec
ss
clc
cltd
pop
mov
ss
cmp
add
mov
mov
cmp
push
and
xchg
repnz
push
sbb
cmp
or
mov
mov
lods
xchg
add
jb
mov
mov
sbb
adc
sbbl
sub
std
or
xor
xchg
and
sub
and
mov
pop
xchg
test
dec
pop
cmc
test
inc
aaa
pop
or
jp
mov
daa
xor
or
cli
adcb
jnp
pop
fs
jle
xchg
jne
dec
inc
das
mov
shll
jle
inc
adc
pop
jle
testl
lock
cmpsl
out
push
orl
sbbb
pop
xor
push
xchg
xchg
push
dec
pop
lahf
xlat
adc
sti
bound
subl
insl
sub
add
xor
jae
out
aam
sub
inc
and
jp
adc
fldcw
roll
int
lret
mov
dec
pop
popf
aaa
fiaddl
mov
jg
push
sbb
add
insb
or
iret
cli
aaa
inc
add
or
fistpl
push
fmuls
movsb
cmp
jb
push
push
aam
mov
add
fdivrs
cli
jmp
pop
and
dec
nop
mov
repz
pop
push
leave
xchg
add
into
jl
loop
scas
loop
or
cmpsb
cmp
jae
xor
push
push
cmp
out
add
cld
dec
mov
lret
bound
add
push
int
sub
ds
js
push
stos
mov
mov
add
int
rcrl
dec
lret
mov
fmuls
or
mov
xchg
aad
aam
pop
scas
sbb
dec
sub
adc
rcl
loope
enter
inc
aas
imul
leave
mov
ficoms
sbb
xchg
lret
adc
jle
lcall
push
fmull
divb
sbb
sub
jns
sub
jb
add
lcall
xchg
shll
pop
lods
xlat
test
mov
inc
mov
ljmp
sub
mov
lock
mov
pop
xlat
mov
pop
dec
aaa
in
pop
addr16
add
and
rol
daa
arpl
pop
ret
inc
and
aas
ficomps
sub
sub
sub
out
mov
dec
cmp
jno
inc
fists
jge
cmpsb
jns
cli
mull
das
test
mov
adc
sub
add
fwait
mov
aam
lods
and
jl
daa
out
xchg
lock
and
imul
or
mov
fstp
jmp
aad
xchg
cmc
push
arpl
dec
mov
scas
call
or
jle
popf
mov
lret
pushl
js
test
lahf
pop
nop
icebp
loop
cmpl
clc
ljmp
pop
cwtl
test
pop
out
or
arpl
mov
jmp
mov
xchg
das
dec
lret
stos
sub
pop
push
addl
mov
push
scas
jmp
mov
jl
out
jb
xchg
flds
loop
lret
mov
inc
mov
dec
jns
clc
fidivs
or
lds
jb
outsb
jbe
inc
inc
es
aas
add
lahf
fildl
and
add
cmp
ror
ds
cwtl
in
jp
popw
jg
lret
mov
and
sbb
icebp
adc
arpl
cmp
stos
mov
xchg
mov
dec
pop
divl
outsl
test
xchg
xor
gs
lcall
sub
jmp
add
outsl
stc
xchg
lea
or
insb
inc
pop
add
lcall
enter
arpl
mov
fdivp
pop
iret
ja
ds
cmp
arpl
aad
jle
mov
pop
lods
cmpsb
adc
loope
orl
loope
enter
pop
je
sub
mov
mov
mov
push
mov
cmp
int3
popa
dec
mov
or
dec
fstpt
xor
push
jmp
cli
lahf
sti
cmp
or
fidivrl
iretw
enter
lcall
and
xor
mov
sbb
arpl
bound
imul
loope
push
mov
cwtl
jmp
sbb
into
or
popf
cmc
in
fwait
cmp
hlt
js
push
xor
filds
je
pop
test
or
mov
push
int3
cli
repz
loop
inc
mov
pushf
dec
add
mov
rol
test
insb
loop
aad
xchg
test
out
jmp
out
lea
adc
in
std
sarb
fnsave
pop
dec
dec
das
push
pop
sahf
xor
pop
rcrb
or
sti
sti
and
sbbl
mov
mov
ss
loop
inc
ljmp
test
push
xor
roll
sub
stos
sti
mov
adc
sbb
pop
pop
stos
outsl
adc
jb
in
inc
in
mov
imul
jl
mov
inc
addr16
xchg
push
jne
rcrb
xchg
sti
scas
sbb
mov
enter
lcall
in
les
xchg
int
or
lods
aam
pop
getsec
dec
push
or
sub
add
dec
sub
xchg
jns
jbe
in
repnz
loop
lods
fsubrl
iret
jnp
lock
nop
xlat
dec
je
push
nop
mov
lds
lock
aad
mov
sahf
pop
pop
call
adc
or
push
shr
or
adc
shlb
push
std
test
jns
pop
jne
add
sub
out
movsb
push
cltd
sub
mov
and
push
cmp
out
sub
das
mov
addb
add
icebp
rcl
adc
inc
pop
inc
pop
push
pop
loope
jle
shll
loope
mov
sbb
les
sub
ret
insl
popa
call
pushf
add
call
jle
jmp
scas
data16
cmp
gs
xchg
dec
aaa
rcrl
scas
inc
inc
daa
fidivrs
xor
sbb
cmpsl
pop
push
inc
cmp
mov
pusha
mov
or
cmp
jge
stc
iret
mov
mov
loop
scas
jns
in
mov
inc
mov
mov
cmp
cmpsl
leave
test
xchg
xchg
mov
subl
in
and
inc
add
aam
shrd
loope
and
ds
jns
f2xm1
xchg
pop
lret
insl
and
jo
outsl
jne
jo
ja
orb
lret
dec
add
push
cmc
test
xchg
cmp
test
jno
andw
pop
call
sahf
cmpsl
adc
sbb
aam
rclb
xor
adc
jle
and
adc
in
xlat
out
cld
aad
pop
mov
adc
add
outsb
pop
adcl
push
fwait
inc
shl
adc
dec
roll
loope
and
pusha
or
aaa
std
or
push
ja
sub
push
jns
fiadds
mov
pop
pop
insl
ds
adc
nop
jo
xorb
mov
and
add
xchg
mov
je
or
mov
cmpsl
stc
pop
data16
cli
add
cmp
addr16
mov
loop
iret
and
repz
mov
sub
pushf
sub
in
xorl
popf
idivb
jmp
xchg
push
sbb
lret
inc
xor
sbb
iret
xor
add
and
sub
or
sbb
push
pop
mov
ds
dec
push
push
sub
push
in
js
mov
js
jb
cld
lret
lock
pop
pop
jp
dec
or
fwait
ret
outsb
add
xchg
stc
pusha
cld
out
sbb
testb
ja
adc
pop
pop
lds
push
outsb
and
mov
sub
aaa
add
xchg
aaa
or
mov
cmp
mov
leave
adcb
pop
push
xchg
sub
mov
jmp
mov
dec
shl
in
adc
and
cmp
int3
bound
lcall
add
lahf
push
mov
push
adc
lds
aas
mov
sbb
aad
mov
pop
push
cltd
sub
mov
mov
pop
pushf
and
push
adc
dec
lock
mov
xlat
leave
popf
sbb
outsl
gs
loopne
xor
std
push
les
push
imul
mov
push
shr
jbe
xor
pop
pusha
loope
sub
push
xor
daa
lods
and
enter
in
lcall
int3
popf
fstpl
add
pop
mov
jmp
lret
out
mov
jp
push
inc
mov
ss
sub
cmp
insb
bound
mov
xor
sub
aas
loope
loopne
jp
inc
aaa
xchg
ret
aam
das
sub
das
xchg
pushf
cmp
add
cmp
xchg
jne
dec
test
lds
xchg
lock
ljmp
mov
hlt
fs
xchg
insl
cmp
std
clc
iret
out
fs
sub
in
addr16
inc
add
push
outsl
push
xchg
add
dec
test
stc
hlt
fistl
sahf
mov
movsb
or
xlat
xlat
jne
sub
test
test
movsl
dec
jmp
mov
sub
rcrl
pop
or
and
cmpsl
mov
cmp
push
dec
or
xor
scas
les
inc
sarb
sar
cmp
add
push
dec
sbb
mov
mov
inc
jl
push
cmp
mov
je
inc
sub
negl
addb
mov
ficoms
jbe
and
push
lret
ret
hlt
aaa
dec
push
jo,pn
pop
adc
inc
fisttpl
repz
push
jbe
push
mov
ds
or
mov
cmc
lret
jmp
aaa
mov
fstpl
pushf
dec
aaa
nop
xlat
mov
test
sub
cmp
mov
or
or
sbb
leave
inc
popf
jg
jmp
out
xchg
in
imul
loope
xchg
cmpsl
add
sub
repnz
hlt
sahf
clc
fnstsw
pop
xlat
xchg
and
add
mov
adcb
mov
arpl
fsts
sub
ror
pop
xchg
rcrl
lock
sti
and
xchg
hlt
jns
lret
std
scas
rcrl
stos
fs
stc
mov
mov
out
adc
lahf
mov
pop
adc
mov
stos
movsl
mov
inc
mov
push
jmp
and
and
popa
mov
cmp
push
rcr
fcomp
pop
pop
pop
cmpsl
pop
ds
push
dec
subl
push
cmp
mov
or
adc
aas
movsl
xchg
out
rol
adc
movsl
xor
lds
out
pop
shll
test
pop
push
icebp
rcrb
sub
sbb
pop
inc
push
dec
jns
dec
xlat
inc
mov
orl
mov
sub
and
mov
insl
in
ljmp
push
cmp
scas
dec
notl
mov
mov
in
dec
cwtl
jns
cld
dec
sbb
mov
sub
les
loope
push
lds
mov
rorb
shll
add
fidivl
xchg
add
out
and
dec
jl
pusha
addb
push
sub
cmp
or
mov
stos
mov
fwait
in
dec
mov
inc
jns
jge
inc
inc
inc
sar
dec
xchg
out
std
je
in
jg
int3
lret
and
aam
dec
mov
cld
xchg
push
inc
test
subl
rol
push
cld
ljmp
pushf
xchg
push
mov
in
sub
imul
fisubl
test
cmp
in
das
pop
les
mov
loop
sub
sahf
inc
pop
enter
cmc
call
sub
lahf
mov
mov
jmp
loope
mov
push
stos
jnp
bound
mov
pop
mov
mov
inc
push
cltd
or
outsl
daa
pop
neg
or
sbb
cmpsb
inc
scas
in
roll
mov
inc
jno
enter
xlat
loopne
cmpsb
mov
inc
or
ja
popa
dec
push
xchg
sub
leave
aaa
pop
cmp
add
xlat
imul
add
lock
mov
mov
sub
stos
push
mov
mov
ds
cmp
mov
mov
fistl
lahf
mov
lahf
test
inc
aam
pop
push
lcall
enter
sbb
adc
mov
jecxz
mov
add
mov
mov
test
cmc
movups
cmp
mov
mov
and
jo
repz
mov
mov
cld
sbb
loop
pop
mov
icebp
call
inc
ret
inc
ret
sub
pop
outsl
xor
test
loope
lock
or
out
cwtl
jle
adc
dec
dec
ljmp
xor
dec
add
stos
and
lcall
imul
rcrb
dec
xchg
or
rcll
lods
sbb
in
sti
les
movsl
sahf
gs
pop
aam
lds
pop
aam
lahf
loope
in
lods
mov
mov
adc
hlt
push
jnp
aas
cmp
mov
xchg
adc
insb
mov
xchg
mov
pop
hlt
mov
and
aaa
add
negl
and
hlt
arpl
mov
hlt
lret
icebp
pop
je
inc
inc
fistl
xchg
enter
push
add
mov
scas
mov
sub
jne
sti
cmp
cmp
mov
mov
in
mov
pop
lcall
xlat
out
dec
pusha
xor
add
in
push
stc
outsb
pop
inc
and
clc
ljmp
pop
cmp
xchg
jmp
fnstenv
xchg
leave
pop
sbb
push
popf
ds
xor
add
icebp
loop,pt
pop
cmp
xchg
mov
jmp
fs
aaa
daa
fidivrs
jecxz
test
xchg
cmpsb
xchg
jle
pop
pop
dec
sbb
xchg
xchg
aas
dec
inc
sahf
sahf
incl
clc
jnp
push
out
lret
cmp
pop
add
adc
jl
loopne
pop
xchg
shr
ficompl
ret
adc
imul
jnp
push
repnz
xor
lahf
jns
mov
adc
in
fcoms
mov
aam
cli
enter
mov
adcl
movsb
and
fs
sbb
fisubs
add
sub
fstpl
and
mov
mov
hlt
ja
ret
xor
dec
ds
pop
mov
test
call
dec
sbb
scas
push
leave
push
inc
ret
pop
sub
add
cli
lods
sub
cld
mov
dec
jb
mov
out
push
insb
loope
lret
in
lcall
push
dec
dec
mov
call
sub
and
pop
cmp
and
lret
pop
sub
int3
and
in
ja
stos
dec
out
pop
inc
fwait
das
cmp
sub
int
jno
jb
aam
jle
cmp
push
ficomps
inc
loopne
xchg
dec
sub
into
push
and
scas
xchg
lock
shrb
fdivr
int
loopne
cmp
cmc
dec
add
push
add
test
dec
xchg
pop
aam
pushf
imul
inc
and
mov
adc
inc
xor
mov
sar
leave
aad
int
cmpsb
sahf
adc
add
mov
fstpl
jbe
fisubrs
jp
add
and
bndstx
mov
loope
mov
mov
inc
popa
fwait
and
bound
xchg
pop
rcrb
idivl
mov
jbe
push
cmc
sbb
mov
inc
and
fistpl
xor
cmpsl
mov
mov
repz
ds
jne
add
push
inc
sub
mov
lea
push
aad
or
cli
imul
test
daa
mov
ja
push
or
jns
lods
clc
pop
movsb
clc
gs
jne
test
xor
movsb
mov
adc
adc
fwait
fwait
outsb
lds
imul
rcll
push
dec
push
fistpl
aas
or
aad
xlat
imul
dec
jecxz,pt
mov
mov
loopne
dec
jo
jle
jge
pop
mov
loopne
test
aam
mov
add
add
jns
cmpsl
jb
popa
mov
lret
adc
dec
rcl
push
cld
jp
inc
mov
jl
gs
or
in
mov
int3
xor
mov
lock
add
movsl
fsts
pop
lock
shll
xlat
push
push
and
pushf
imul
dec
lahf
adc
enter
jmp
sbbb
ljmp
out
dec
aam
js
mov
inc
push
fimuls
in
lea
mov
stc
sbb
adc
push
mov
mov
push
mov
aad
pop
ljmp
testb
pop
fwait
jecxz
inc
adc
sub
add
shll
mov
jecxz
inc
ds
push
jbe
cli
cs
mov
fstp
pop
mov
sub
pop
jbe
ds
mov
and
jno
mov
xor
stos
push
inc
sbb
fbld
es
stc
mov
sub
punpckldq
mov
mov
sbb
cmp
lds
mov
mulb
sbb
xor
ret
xchg
js
xor
scas
ja
js
aas
ficoml
pop
out
push
out
adc
mov
ret
xor
sub
lds
xchg
adc
ja
dec
mov
dec
icebp
add
movsb
pop
pop
ja
adc
cld
bound
int3
pop
and
sub
mov
das
add
testl
mulb
repnz
icebp
scas
fcomip
xchg
enter
test
ret
cmp
jo
jo
dec
call
sbb
aaa
clc
sbbb
mov
dec
lcall
cld
push
or
movsl
repz
or
jg
adc
shr
sbb
xor
jg
dec
jmp
mov
iret
xor
jno
xchg
jl
and
paddusw
push
andb
and
mov
testl
icebp
movsb
mov
cwtl
movsb
out
aas
jns
add
cmp
insb
fbld
pop
mov
pop
mov
repnz
push
or
cmp
cmp
xor
push
sub
cltd
mov
xchg
add
xor
cmpsl
adc
fcomip
adc
sbb
push
mov
popa
fwait
add
fstps
pop
aaa
pop
xchg
loopne
mov
pop
movsb
add
ja
sub
pop
lods
inc
jecxz
test
les
add
out
jns
push
lahf
mov
mov
sbb
xor
shlb
xrstor
cmpsl
pushl
sub
xchg
jns,pn
scas
dec
das
or
sahf
cmp
dec
in
push
add
jae
shl
or
lret
ret
sbb
jae
or
fidivl
pop
enter
rcl
repz
sub
dec
or
push
mov
sub
inc
jae
lea
fiaddl
inc
or
negl
inc
pop
dec
sbbl
movsb
mov
adc
pop
imul
lods
cmp
push
inc
xor
ja
or
std
mov
mov
push
push
bound
push
rcrb
inc
scas
xor
stc
or
sub
adc
into
dec
add
insb
xor
enter
adc
adc
clc
cmpsl
push
ljmp
addl
repz
call
and
ret
sub
push
sub
pop
and
fs
mov
push
xchg
push
mov
idivl
cmpsl
xchg
mov
stos
pop
rclb
cmp
xchg
jno
push
jecxz
pop
dec
out
pop
rolb
add
and
push
jno
sbb
or
or
out
icebp
and
and
mov
jl
cmp
jge
xlat
cmpsl
xchg
mov
sbb
movsb
test
in
or
push
jmp
test
shll
and
cs
mov
and
mov
lods
inc
ds
sahf
insl
mov
pop
push
cs
sbb
xchg
or
test
cmp
push
je
sahf
jbe
les
mov
mov
imull
ljmp
sbb
ds
cmp
sbb
stc
pop
cs
add
cs
push
leave
sti
inc
das
jns
in
push
test
jp
cmp
cmpsb
dec
shr
jle
jge
pop
repnz
or
jp
cld
push
or
fisubl
lds
clc
pop
stos
xor
lahf
add
cmp
push
mov
jo
mov
and
pusha
pop
cmpsb
out
xor
aas
lret
inc
shll
stc
movsb
imul
aaa
addr16
aas
jg
cmpsl
in
aad
in
fimull
sbb
dec
cmc
cld
jmp
push
sub
fs
jae
mov
mov
xorl
mov
jg
adc
lock
lret
xchg
inc
inc
mov
out
out
subb
dec
adc
mov
push
jp
stc
jmp
xchg
and
cltd
pusha
lret
inc
aas
stos
out
outsb
push
lods
jmp
subb
dec
call
rorb
push
xorl
mov
jg
inc
cmc
mov
popf
imul
jl
mov
bound
cmp
aam
cs
sub
pop
sub
sub
imul
inc
into
mov
roll
popf
inc
cli
push
push
pop
push
mov
mov
test
in
sbb
adc
add
jb
in
adc
scas
jo
out
or
dec
jns
cmpsl
mov
movsl
xchg
fisubs
sarb
ficomps
xchg
mov
rorb
rcrl
nop
loop
gs
xchg
add
call
lods
mov
aam
fiadds
hlt
repnz
andl
cmp
ficompl
xchg
cmpsl
xchg
incb
stc
inc
dec
loop
mov
cmpsb
lods
jno
add
mov
or
fisubl
mov
add
jge
push
dec
adc
push
andb
inc
and
adc
adc
movsl
ret
cmp
inc
jg
or
push
rorb
push
iret
mov
push
adc
dec
xor
es
jb
push
adc
fsubrl
into
push
out
out
outsl
xor
out
pop
lcall
sbb
sub
adc
mov
arpl
sbbl
bound
jbe
es
push
gs
and
add
jnp
add
test
arpl
mov
cmpsl
inc
rcrl
pop
jmp
aas
fsubrp
mov
sub
sub
sub
jne
sbb
mov
addl
push
mov
arpl
mov
scas
mov
sub
mov
mov
jl
sti
sbb
das
adc
and
fcmovu
xlat
push
stos
lds
mov
jl
dec
push
js
mov
xor
dec
call
pop
inc
test
out
and
addr16
pop
sbb
xchg
in
mov
cmc
pause
inc
icebp
inc
mov
leave
mov
aad
lahf
mov
fldcw
jo
scas
outsl
xor
cmp
push
xor
ljmp
jmp
pop
rcll
add
add
xchg
push
jnp
and
pop
sub
cwtl
repz
sub
cltd
outsb
inc
fwait
mov
pop
mov
push
sbbb
mov
push
mov
test
mov
and
iret
add
inc
xor
cltd
sti
jp
stos
call
xchg
inc
clc
xchg
xor
jmp
das
ficoml
pop
cld
es
ret
int
add
outsl
add
add
aas
mov
jnp
inc
xchg
sub
sbb
xchg
lods
push
jae
mov
cltd
mov
iret
jbe
addr16
lahf
pop
jmp
movsl
mov
lcall
xor
fists
jecxz
xchg
sub
stc
dec
rorb
aad
cmp
cmp
fists
inc
lcall
pop
fcomip
adc
imul
cltd
cmp
cld
imul
push
je
pusha
pop
testb
fimull
je
adcb
pushf
pushf
sahf
inc
cld
sti
pop
adc
outsl
sbb
push
loopne
lds
xchg
sti
push
out
dec
jecxz
test
clc
jbe
sbb
mov
xchg
nop
pop
cld
cmp
cli
lea
mov
jbe
push
adc
icebp
mov
fstl
lcall
rorb
mov
in
sbb
add
mov
and
mov
inc
mov
cmp
repnz
jno
or
xchg
addr16
xor
jmp
out
fwait
mov
jp
or
add
xor
inc
jp
inc
jl
jo
sti
loope
into
pop
movsb
mov
dec
push
into
stos
mov
cld
xor
inc
xchg
pop
in
sub
or
rorb
add
decw
orl
push
mov
dec
xchg
mov
popa
push
mov
sub
add
sub
mov
dec
in
xchg
loopne
cs
mov
ret
outsb
sbb
xor
cmp
and
jb
jno
and
movsl
rclb
cmp
or
bnd
insb
inc
cli
cmp
mov
sbb
inc
jge
pop
xlat
outsb
lret
inc
add
test
inc
mov
loopne
call
pop
jb
data16
push
lcall
cmp
jo
xlat
popf
pushf
je
mov
cmpsb
lahf
jnp
jg
or
pusha
mov
and
das
outsl
rolb
xchg
test
ja
or
xchg
leave
iret
xchg
loope
lds
xor
sbb
ljmp
int3
push
leave
mov
cmp
mov
jo
sub
aas
jae
pavgb
es
out
sahf
xchg
dec
mov
iret
in
hlt
dec
mov
push
pop
mov
and
xchg
or
jo
call
stos
push
jae
cmpl
mov
push
jl
xchg
inc
fimuls
insl
aam
mov
loopne
lea
int3
ljmp
iret
sub
repz
sti
jge
movl
sbb
mov
std
pushf
fcoms
pop
in
cmp
cmp
inc
jo
test
push
add
pop
cmp
mov
imul
les
dec
xchg
add
add
stc
xor
jmp
xchg
arpl
out
or
pop
inc
dec
fcompp
mov
push
outsl
cmp
call
push
rclb
cmp
das
mov
mov
cmp
and
nop
cltd
pop
dec
or
sti
jo
insl
and
jns
mov
adc
adc
xchg
sbb
add
roll
lcall
sub
mov
mov
add
jno
aas
test
aam
or
or
repnz
add
out
addr16
add
cmpsl
cmp
xchg
je
xchg
sub
and
cs
xor
leave
outsl
jp
push
pop
cmp
push
adc
sar
frstor
imul
and
sub
xor
push
xor
pop
stc
clc
xchg
cmp
pushf
pusha
jmp
add
sbb
popa
pop
pop
sub
push
pop
testl
ss
stos
sahf
leave
jge
sbb
xchg
sub
fucomip
aas
jnp
dec
pop
fsubs
mov
subl
jge
cmp
int
divl
and
cs
mov
sub
mov
in
test
int3
js
jle
aam
call
adc
xchg
rcrb
adc
subb
add
and
mov
push
cwtl
mov
pusha
pop
loop
and
jecxz
xchg
mov
fists
xchg
or
push
idivl
test
les
movsb
mov
std
cmp
and
mov
add
lret
mov
ljmp
mov
mov
xchg
xor
in
cmp
sbb
or
inc
loop
faddp
fdiv
enter
rolb
xor
sub
mov
rsqrtps
fsub
dec
mov
xchg
mov
shlb
push
mov
out
sub
xchg
repnz
push
hlt
popa
cli
sub
cmp
mulb
das
mov
inc
int
outsl
out
lret
movsl
jns
xlat
mov
in
add
xchg
xor
xlat
push
popa
in
imul
bound
push
jmp
sbb
inc
push
cmp
inc
and
jp
outsl
icebp
mov
loop
imul
in
aaa
mov
in
lret
test
fstpl
dec
sub
testl
xchg
enter
add
mov
in
xchg
mov
mov
fdecstp
xor
and
filds
mov
fimuls
jp
jecxz
xchg
sbb
lock
push
in
push
mov
lods
imul
push
xlat
lds
adc
addr16
cmc
dec
sahf
adc
cmp
xlat
sub
dec
sbb
call
std
jecxz
mov
aad
xchg
xor
dec
cwtl
mov
jbe
jne
mov
cmpsb
push
or
loopne
in
and
enter
pop
mov
stos
mov
adc
js
cmp
xor
adcb
push
xor
xchg
repnz
aas
pop
and
test
cmc
pop
fisttpl
xchg
dec
cmp
mov
mov
test
insb
movb
out
jle
xor
sbbb
popf
pop
test
jo
pop
das
loope
sub
xor
test
daa
dec
pop
dec
push
pop
mov
mov
jb
mov
push
sbb
rorb
in
sbb
mov
inc
jmp
cmpb
inc
push
outsl
or
mov
pop
xchg
push
repz
pop
cmc
add
js
addr16
aam
popf
jle
adc
into
lods
push
sbbb
pop
ret
jmp
fdivrs
sbb
gs
fsubr
sub
adc
in
pop
je
xchg
add
push
lret
sub
push
mov
lret
jge
bound
cmc
add
dec
mov
mov
push
incb
fst
movsb
or
cwtl
into
fildll
mov
test
push
sarl
push
adc
mov
push
sub
mov
nop
jg
lret
cmc
jae
dec
jmp
lret
das
mov
jmp
add
mov
out
cmp
aas
sub
cmp
jle
lret
xchg
fstps
inc
and
mov
fcomps
or
xor
icebp
cmp
idiv
and
hlt
xchg
xchg
xor
mov
sbb
sub
jbe
cmpsl
pushf
mov
jg
push
jp
inc
aas
pop
icebp
stos
pop
xchg
add
std
dec
jbe
mov
shll
subb
popa
add
adc
out
nop
mov
loop
lock
in
and
fldcw
bound
push
jge
loop
cwtl
outsb
inc
xchg
movsl
aas
push
test
adc
lods
mov
ss
dec
push
or
mov
subb
and
inc
and
jbe
xchg
dec
fnstcw
ret
rorb
ja
push
mov
push
pop
pushf
cli
out
imul
push
mov
lds
sbb
popa
jle
sbb
test
mov
daa
icebp
int
inc
add
adc
dec
popa
enter
mov
xor
xchg
cmp
mov
rcr
orb
mov
inc
pop
cmp
mov
pop
cwtl
xchg
lea
filds
adc
mov
mov
andb
imul
out
outsb
movsl
es
ret
faddl
mov
jle
shr
cmpsb
mull
mov
inc
jnp
inc
push
pop
pop
aad
imul
add
push
and
push
scas
jnp
pop
dec
ret
adc
fildl
jb
in
pop
std
cmp
jae
dec
inc
cmc
repnz
jge
mov
add
xchg
inc
nop
movsb
xchg
cmc
and
inc
shrb
push
mov
mov
jecxz
sbb
sub
inc
cmp
xor
daa
popf
rcrb
lods
push
stos
add
into
cmc
out
mov
mov
xchg
cltd
ud1
leave
fdivrl
subb
lea
pop
repnz
jg
adc
sub
mov
inc
pop
inc
loope
cs
pop
leave
pop
aas
or
test
les
lock
mov
aaa
mov
inc
test
fnstsw
fmull
mov
dec
scas
mov
negl
int3
cmp
mov
push
repz
iret
mov
pop
dec
ss
jb
pop
and
aad
jnp
add
int3
cwtl
sti
cmp
addr16
iret
adc
cld
mov
xchg
pop
add
jl
xchg
outsb
sub
mov
and
mov
cmp
cmp
jle
in
out
jmp
pop
xor
mov
cltd
mov
incb
pop
mov
ret
mov
in
inc
and
or
sbb
test
inc
in
mov
inc
loope
xor
cltd
mov
push
outsl
mov
inc
mov
xchg
sbb
pop
notb
lret
scas
jae
push
adc
cmp
pop
jne
mov
cmp
pop
inc
jmp
push
mov
fxch
cmp
cmp
push
add
stos
popf
jg
data16
or
adc
mov
jo
aas
mov
xor
push
loope
stos
xchg
sub
sti
jbe
ja
xor
cmpsb
cmp
inc
or
pop
cmp
jne
mov
repnz
mov
xchg
mov
push
inc
in
push
ret
jno
ret
mov
imul
inc
in
mov
or
jae
enter
in
shl
mov
xchg
cmp
int
lahf
jae
add
pop
mov
jno
sub
push
cmp
dec
loope
dec
cwtl
sub
repnz
lcall
aas
lcall
cld
aas
pop
out
jns
pextrw
or
andb
pop
cli
je
mov
int3
dec
pop
pop
and
push
out
aas
xor
dec
cmp
mov
cs
ljmp
xchg
into
sbb
das
add
cs
push
jns
inc
in
lret
mov
or
bound
std
mov
fwait
push
stc
and
scas
jo
and
stos
fs
adc
loopne,pt
jnp
cli
pop
sub
fldcw
aam
sub
cli
repnz
push
jecxz
mov
or
stos
sub
jb
fiadds
jmp
lahf
cwtl
push
mov
adc
mov
jb
aas
ffree
xchg
cld
mov
dec
lcall
insb
pop
ret
aam
mov
ljmp
or
mov
or
test
data16
popa
loop
rcr
call
push
sbb
ret
fistps
inc
inc
jb
push
sti
jg
and
stos
cltd
cld
mov
and
lcall
imul
jg
insl
cmp
sbb
jmp
arpl
leave
js
in
mov
test
pop
lock
loop
sarl
pop
mov
ret
push
pusha
inc
jne
aas
sub
cld
adc
mov
int
aad
lods
and
or
and
js
sbb
fimuls
in
and
ljmp
lcall
lahf
daa
stos
in
xchg
stos
popf
ret
aaa
sbb
cmpsb
in
popa
xor
pop
pop
dec
and
fs
aaa
lds
xor
push
jg
in
pop
gs
push
es
mov
movsb
mov
in
dec
cmpsb
mov
jl
or
sbb
adc
push
or
pop
int
cmp
imul
inc
dec
lret
nop
pushf
push
xlat
pop
out
jl
jge
xchg
in
push
jecxz
xchg
dec
and
xchg
cmp
and
std
imul
cmp
in
sbb
frstor
sahf
inc
out
mov
stos
dec
idivb
pop
cmp
mov
aaa
mov
cmp
fisubs
adc
icebp
jo
movsl
jp
loopne
sbb
add
sbb
xchg
in
adcb
jecxz
mov
and
jo
or
fcoms
imul
cltd
add
push
sub
xchg
gs
xor
incl
push
testl
add
loope
cld
test
push
dec
fiadds
pop
enter
shrl
or
das
mov
xor
xchg
push
sti
js
imul
outsb
mov
adc
not
adc
mov
push
inc
roll
jns
es
lahf
inc
cmp
das
pop
xor
cmpsb
iret
xchg
rcl
inc
xchg
nop
adcb
mov
mov
xchg
adc
mov
out
andl
jl
imul
inc
dec
jecxz
inc
and
dec
push
ret
bound
or
inc
and
xor
push
or
jb
sbb
dec
push
dec
jl
testl
cli
xchg
in
movsb
lods
or
pushf
xor
daa
fs
or
xchg
push
lods
sub
fstpt
in
cmc
mov
xor
fisttps
rorl
test
icebp
mov
mov
push
xchg
hlt
fildll
aam
mov
sub
nop
mov
int
enter
lods
notl
jmp
push
mov
xchg
in
adc
sarl
pop
cmp
mov
xor
push
mov
xchg
iret
popa
sbb
or
pop
ss
inc
xorl
imul
fwait
pop
sbb
or
notb
cmp
xor
adc
push
mov
mov
push
mov
enter
imul
test
pop
push
pop
adc
lret
adc
lret
pop
jg
ds
pop
popw
movsl
stos
inc
mov
insl
push
je
inc
out
mov
cmp
imul
shrl
xchg
or
loopne
incl
sub
mov
stc
ja
dec
les
mov
mov
cwtl
loope
aaa
sarb
pop
push
aas
inc
inc
xchg
in
mov
iret
inc
lock
sub
mov
iret
iret
ja
push
sbb
arpl
adc
adc
pop
dec
sub
into
sub
pushf
cmp
inc
sti
cmp
in
jg
fists
sbb
jno
bnd
cld
sub
loopne
in
out
mov
ljmp
sub
inc
push
cltd
mov
test
sub
mov
adc
out
add
ja
cmp
jle
mov
push
ljmp
push
pushf
call
mov
jecxz
daa
ja
pop
shlb
lods
test
loope
cli
inc
xchg
sahf
shll
insl
imul
xchg
mov
in
mov
or
cmp
sbb
jnp
cwtl
pushf
adc
mov
adc
pop
and
add
test
scas
jns
in
xchg
movsb
or
rcrb
add
stos
repz
mov
int3
out
xchg
data16
outsl
ljmp
stc
adc
pop
xor
cmp
push
loopne
pop
xor
jl
pop
mov
pop
daa
popf
into
popa
ret
cmpsb
adc
mov
gs
pop
dec
movsb
adc
es
test
inc
jo
mov
xor
mov
pop
jbe
mov
test
sub
je
inc
push
push
cmp
dec
inc
sarl
or
loope
add
fildll
jb
ss
jg
sbb
out
inc
xor
jo
mov
pop
mov
mov
das
adc
aaa
jb
pop
nop
fwait
mov
inc
xor
jl
cmp
add
sahf
movsl
ss
or
push
adc
jo
es
call
mov
into
pushl
and
lcall
xchg
jmp
inc
xchg
mov
sbb
mov
jo
out
dec
mov
mov
or
loope
or
shrb
lcall
pop
lods
add
movsb
icebp
loop
pop
out
ljmp
lcall
mov
call
lcall
cmpl
xchg
stos
lods
ret
inc
add
or
aad
mov
jnp
outsb
xchg
imul
fbstp
bound
fimull
imul
insb
lret
sub
push
popa
in
dec
add
cld
lds
or
jne
ret
sub
mov
lret
out
imul
mov
mov
lcall
in
in
cmp
xor
test
sbb
push
adc
sub
add
dec
imul
jge
xchg
in
mov
sub
push
lds
add
into
xor
cmp
lds
mov
cmpsl
dec
cltd
sub
cmp
sahf
stos
shrl
filds
xchg
add
adc
dec
or
imul
daa
mov
adc
or
cmp
ljmp
jmp
gs
dec
xchg
repz
outsl
jecxz
adc
sub
clc
jp
or
pop
fiadds
or
sti
rcrl
and
popa
sub
sbb
adc
cmp
inc
inc
xchg
xchg
inc
out
imul
sub
mov
shl
fmuls
fmul
jae
pop
sub
push
aaa
push
cmpl
out
test
push
sahf
fildl
movsl
mov
cmp
ljmp
fbstp
movsl
and
mov
cmc
pop
pop
leave
pop
push
movsl
es
cmovb
xchg
xchg
in
data16
or
fildll
enter
xlat
sbb
cmc
fsubl
mov
sub
pop
shll
jle
mov
ljmp
lock
xchg
pop
insb
bound
arpl
add
pop
lods
imul
pop
add
push
mov
or
add
mov
cmp
lret
scas
jmp
mov
mov
out
leave
fcomi
int3
in
cmp
jno
repnz
mov
je
mov
lcall
arpl
rorl
mov
push
divb
lcall
mov
int
int
adc
call
sti
ret
xor
jnp
popf
out
inc
out
data16
das
enter
adc
jl
movsl
inc
in
push
pop
scas
insb
ljmp
xorl
jmp
ds
fistps
jecxz
sub
xchg
lea
imul
mov
mov
mov
mov
into
jecxz
cmp
in
mov
fdivrs
mov
cmpsb
mov
lods
mov
out
pop
dec
xchg
cmp
ljmp
push
jp
pop
mov
mov
mov
adc
inc
or
xchg
stos
sub
jmp
jo
fists
shrw
push
addr16
mov
and
cmp
adcb
push
imulb
pop
and
addr16
push
fmuls
add
rcrl
mov
lret
add
arpl
icebp
jp
pop
in
movsb
jl
pop
in
in
out
mov
rclb
xchg
cli
add
test
add
out
xor
mov
xchg
jge
enter
stos
popf
inc
xor
mul
push
btcl
mov
cs
bound
dec
lahf
test
js
xor
mov
aaa
dec
arpl
std
jnp
cli
and
or
pop
cmp
stos
movsl
sub
push
dec
mov
stos
mov
cmp
out
lcall
cwtl
nop
jecxz
stos
loope
lcall
lcall
inc
popf
shll
bound
rcll
cmp
pop
ss
jle
and
adc
ss
sti
fisubs
mov
stos
popa
xorb
dec
push
jae
jbe
cld
sbb
pop
xchg
insl
push
push
shll
xor
loopne
mull
jns
mov
sbb
sub
mov
xchg
jb
aas
dec
cmp
sbb
xor
insb
dec
out
lea
cmpsb
inc
hlt
div
mov
mov
jge
jp
cmp
pusha
xor
hlt
in
adc
out
mov
repz
or
and
enter
jl
leave
xorb
movsb
aad
dec
cld
notl
imul
cmc
cmp
imul
lock
mov
nop
dec
sub
fs
icebp
aam
adcl
mov
add
add
sbb
scas
jne
inc
push
jnp
jnp
loopne
aaa
or
out
idivl
dec
push
push
and
pop
pop
out
mov
sbb
sbb
or
cmp
mov
dec
enter
cltd
cmpsb
into
sbb
and
and
daa
nop
arpl
xchg
into
out
pop
call
ret
fwait
pop
add
lcall
sbbl
data16
sub
push
cmc
push
in
mov
pop
fmull
lret
out
in
pushf
rolb
test
fnstenv
push
jle
aad
add
jne
push
inc
xor
scas
mov
ret
xor
stos
sbb
or
mov
xchg
sarb
cmpsl
lods
sbb
ss
movsw
jae
xor
lods
adc
or
push
mov
fildl
lods
and
fisttpll
insb
inc
ficoms
popa
int
pushl
xchg
xor
or
xchg
clc
aas
sub
mov
in
stos
jno
pop
test
sub
shlb
adc
ja
scas
mov
xor
mov
mov
or
push
jl
lret
cs
xlat
pop
fsubl
inc
sbbl
in
cwtl
jno
or
sbb
xchg
in
xchg
inc
xor
inc
lods
push
inc
sbb
aas
lret
adc
flds
xor
mov
dec
push
sbbl
lcall
jbe,pn
mov
adc
xbegin
add
inc
imul
dec
lea
pop
mov
xor
inc
daa
shlb
dec
cmp
aaa
imul
lahf
shll
aad
jp
dec
jae
outsl
out
out
jmp
sub
xchg
cmpb
pop
je
sbb
mov
or
mov
mov
inc
fldt
sbb
roll
xor
sub
bound
add
adc
iret
loope
test
mov
cli
cmc
pop
or
int3
loope
out
or
mov
outsb
andb
push
notl
jo
jl
insl
outsb
lret
fsubrl
mov
rcrb
push
into
xchg
dec
dec
mov
sbb
fld1
in
fxch
jp
cmp
aas
pusha
push
dec
es
lods
and
jnp
data16
xor
iret
inc
ret
shlb
fcoms
nop
nop
or
pop
mov
push
testl
es
mov
xchg
adc
fists
xor
sub
mov
inc
xchg
cmp
jae
ret
mov
int3
popf
sub
pop
xor
arpl
sub
lods
sub
xor
push
cltd
outsl
lea
outsb
lods
ljmp
in
push
dec
sub
cltd
mov
xchg
pop
add
cmp
and
sbb
insb
jbe
in
lods
imul
xchg
movsl
ja
popa
jno
aad
push
fistpll
lods
mov
inc
pop
sbb
push
lds
mov
mov
mov
dec
dec
and
fwait
loop
int3
xor
nop
push
push
js
pop
leave
mov
shlb
arpl
push
jecxz
adc
mov
rclb
xchg
rclb
xchg
sbb
mov
push
push
or
xchg
jmp
dec
std
xchg
mov
inc
div
mov
and
insl
inc
sbb
shr
adc
cmp
ds
push
adcl
icebp
push
jge
add
push
jns
bound
and
stc
gs
pop
dec
roll
addr16
fimull
in
xor
or
mov
cltd
outsl
push
jmp
push
dec
out
add
fsubr
pusha
mov
jae
lret
jg
cmpsl
and
aad
es
sahf
push
adc
fs
pop
push
ret
jl
mov
fdivs
aad
mov
rolb
pop
pusha
add
dec
sub
cwtl
mov
mov
dec
sbb
aad
mov
inc
fmull
dec
dec
and
push
das
cs
outsl
stos
push
xchg
cs
mov
mov
or
cmp
pop
adc
sbb
int
sbb
repnz
mov
adc
push
dec
clts
aas
cmpsb
or
mov
push
imul
cmpsb
lea
inc
xor
je
outsb
dec
call
rol
push
mov
sahf
pusha
jmp
sarb
inc
pop
push
xchg
and
pop
and
iret
add
sbb
jg
and
cltd
xchg
fidivrs
push
leave
xchg
jge
pop
lods
loopne
or
push
lds
pop
push
mov
mov
aas
xor
out
rolb
or
adc
pop
push
movsl
xor
loop
bound
into
divb
adc
pop
mov
repz
das
sub
push
add
sbb
loopne
xor
sahf
js
test
sbb
mov
or
push
shll
loope
test
cmpsl
ret
je
es
cmc
gs
aaa
cmpb
pop
mov
jg
andb
sbb
inc
pop
mov
in
sbb
xchg
push
and
and
xorb
mov
pushf
push
add
mov
and
push
imul
or
clc
imul
pop
mov
fnstsw
daa
dec
push
es
pusha
sbb
inc
mov
adc
mov
mov
mov
lock
add
sahf
out
or
int3
fistpl
inc
sahf
add
cmp
lea
mov
dec
leave
sbb
push
mov
xchg
stos
jne
dec
and
aad
in
mov
inc
or
ja
std
or
jb
pop
loope
jp
sub
adc
jmp
mov
fisubs
fstpt
lea
mov
int
add
loope
cmp
mov
add
pop
dec
call
push
std
pop
inc
je
gs
aaa
dec
bound
dec
or
xchg
cli
mov
add
dec
cmpsb
or
ss
push
stos
adc
ret
jae
mov
mov
aaa
push
adc
adc
fs
setp
pop
sbb
pop
int3
lods
repz
sbb
or
lods
mov
pop
pop
xor
int
cmp
dec
loop
fs
inc
mov
or
popf
ss
cmc
std
in
push
add
andl
adc
mov
int
jne
cmp
insb
or
sbb
jne
fldt
jg
pop
dec
or
mov
pop
adc
jbe
sbb
gs
lea
idiv
xor
jg
enter
sbb
dec
adc
or
stos
movsl
sbb
loope
sbb
inc
cmp
sahf
test
cs
pop
jae
sbbl
add
rorb
sbb
fistpll
shll
xor
and
arpl
jmp
rcll
pusha
xor
jmp
roll
insb
fcmovnu
adc
lcall
pushf
jbe
dec
mov
mov
ja
repnz
and
xor
mov
adc
test
push
xchg
repz
mov
or
fcomps
dec
xchg
fcoms
pop
repz
mov
pop
iret
or
dec
or
jo
mov
into
and
sbb
jbe
lcall
ljmp
add
cmp
test
rcrb
jp
xchg
xchg
insb
loop
and
imul
jmp
aaa
adc
mov
fcmovbe
or
cmp
fsub
or
mov
rorb
add
xor
icebp
out
jns
test
push
jge
sbb
mov
icebp
bound
call
cmpsl
and
fstp
aaa
mov
andl
mov
inc
sub
das
notb
jae
adc
pop
insl
pop
jnp
mov
adcl
jo
and
jno
mov
inc
mov
cwtl
add
push
aam
daa
mov
add
cmp
push
lahf
cmc
cwtl
mov
cwtl
pop
xchg
xchg
popa
into
xor
push
xlat
fists
fiaddl
not
fwait
mov
stos
aas
xorl
mov
andb
imul
sbb
call
add
cmpsb
push
idivb
mov
inc
pop
jg
cltd
jecxz
sub
ret
fcompp
inc
sub
mov
cmp
mov
clc
les
lock
pop
test
f2xm1
xchg
fsubs
push
test
orl
jmp
into
push
dec
mov
cmp
lcall
jge
mov
fwait
dec
inc
push
or
and
stos
lea
int
or
pop
mov
pop
dec
icebp
dec
or
fs
jl
xlat
dec
fsts
or
insb
mov
add
adc
loop
mov
adc
call
and
inc
jno
imul
incb
jmp
push
push
repz
rclb
or
or
fsubrs
std
push
xor
cmp
inc
fucomi
daa
xor
jmp
inc
mulb
sub
mov
out
inc
mov
inc
fsub
rclb
fbld
mov
jnp
fdivrs
repnz
xchg
in
lods
js
aas
mov
mov
xor
mov
pop
xor
cmp
mov
scas
mov
sbb
out
add
inc
ret
and
out
push
sbb
push
mov
pop
into
es
and
push
leave
fs
hlt
ret
dec
imul
mov
dec
cmp
push
das
mov
and
push
sub
ja
mov
shlb
test
and
pop
add
inc
mov
sbb
mov
aam
fimull
mov
movsb
push
cli
adc
inc
mov
inc
add
test
test
mov
xchg
cwtl
xchg
outsb
loopne
adc
movlps
enter
dec
iret
jp
mov
xchg
push
xor
mov
lock
mov
decb
movsl
push
pop
xchg
mov
loopne
icebp
push
jns
repnz
ret
sub
test
repz
addr16
hlt
and
jne
pop
lods
scas
gs
inc
fst
and
popa
in
mov
dec
jb
out
cmp
testb
aam
push
setl
sub
sub
adc
repnz
repnz
adc
lea
popf
stos
mov
out
or
sbb
mov
in
push
insb
rorb
mov
in
sahf
std
pop
sub
leave
mov
mov
add
in
or
or
mov
div
rolb
int
and
and
and
pop
int3
lea
das
bound
jbe
dec
hlt
lods
dec
loope
lods
js
ja
pop
outsb
sbb
mov
addr16
inc
jbe
and
jae
aad
std
xchg
xchg
loopne
mov
inc
mov
sbb
aad
jb
cltd
cmp
jecxz
dec
lods
outsb
pop
icebp
hlt
and
in
fsubrl
stos
inc
lock
sub
adc
xchg
push
shr
lods
test
shrb
mov
mov
sub
das
pop
xor
cmpsb
inc
je
insb
add
ja
lret
sub
ljmp
xchg
rolb
jns
xchg
mov
sbb
jmp
xadd
and
sbb
mov
sti
push
mov
adc
jo
ret
imull
inc
outsb
mov
sahf
iret
add
icebp
xchg
mov
lock
ss
pop
xchg
bound
xchg
cltd
cli
adc
pop
or
push
pop
decl
fidivl
pop
pop
mov
cmc
jg
hlt
jo
dec
ret
xor
cs
inc
stos
jns
cmpsb
cltd
cmpl
dec
sbb
adc
jb
inc
add
mov
xchg
xchg
mov
fidivs
and
pushf
xor
mov
dec
sbb
pop
mov
dec
add
pop
cli
sar
decb
sub
out
add
push
leave
pushf
fcmovne
and
incl
call
loopne
inc
jno
std
sub
repz
adc
mov
pop
nop
mov
out
mov
lret
sar
push
prefetcht0
notl
ret
lahf
movsl
jle
int
cmp
out
jnp
ficomps
or
add
mov
push
rcll
mov
lock
aad
adc
mov
or
dec
imul
mov
arpl
sub
sbb
dec
out
adc
inc
mov
repz
jb
test
sbb
subb
xor
dec
jge
push
out
popa
shrb
imull
or
add
out
add
cmp
fld
pushl
adc
pop
imul
sub
lds
inc
mov
bound
xlat
ret
aas
mov
ret
xchg
aad
cmpb
xor
scas
mov
aam
movsl
adc
jge
or
in
mov
imul
ffree
xchg
mov
jmp
push
stos
jbe
pop
push
icebp
pop
pop
cmp
icebp
mov
cmp
mov
fsubrp
xchg
or
cltd
xor
movsl
sti
nop
fisubrs
cmp
loope
cmp
test
popf
inc
mov
enter
out
mov
test
les
fmull
loop
cld
imul
push
sub
daa
lock
rcll
lret
loop
mov
mov
adcb
push
cmp
and
std
push
pop
ja
popf
jmp
jge
mov
lahf
push
mov
push
add
and
iret
push
imul
pop
jl
mov
cmp
mov
mov
pop
leave
dec
aam
scas
mov
sbb
cld
push
mov
xlat
hlt
add
jb
or
xchg
pop
push
xor
adc
fsts
push
mov
out
loop
mov
in
mov
inc
imul
int
inc
xchg
mov
sbb
lahf
push
out
or
xor
mov
mov
push
test
ret
pop
into
push
jb
adc
pop
sbb
dec
cltd
xor
icebp
pop
pop
test
push
xor
xor
xchg
and
fidivrl
les
aam
push
aaa
popa
mov
clc
mov
mov
pop
test
ficompl
push
cld
push
inc
lods
add
les
in
adc
push
dec
sub
inc
stc
mov
push
sahf
push
inc
xor
and
mov
jg
add
test
adc
daa
push
jl
xor
add
in
dec
in
push
pusha
ja
pmullw
or
pop
pop
sub
data16
mov
test
cmp
lret
lret
cltd
push
stc
inc
push
mov
cmp
dec
pop
popa
xchg
xor
adc
sub
or
lods
jecxz
fwait
dec
out
mov
push
sub
cmp
lods
inc
popf
jae
dec
cs
xor
hlt
ja
mov
cli
cmpb
ljmp
cmp
test
lds
mov
or
aad
cmp
popa
pop
dec
dec
fdiv
ds
xchg
jg
fucomp
mov
lds
inc
pop
xor
push
scas
dec
adc
dec
jle
inc
pop
xchg
push
ficoml
and
int3
js
and
dec
aaa
lods
into
xor
mov
test
inc
into
dec
movsl
ljmp
in
call
mov
in
stc
lods
ljmp
sbb
adc
icebp
xor
dec
inc
fdivrl
push
jmp
loop
test
cld
clc
sahf
add
push
cld
or
sub
mov
or
fs
out
inc
pop
fwait
loopne
mov
lods
sbb
dec
out
fnstsw
inc
je
out
dec
loopne
xor
cmpsl
push
ss
push
and
sbb
mov
imul
push
mov
lods
fbstp
xor
jae
sbb
cld
rcrl
mov
adc
mov
lock
lods
imul
ret
ret
xor
jae
fmuls
mov
xchg
sbb
jae
pop
arpl
inc
pop
scas
cmp
xor
dec
pop
push
lcall
lret
pop
mov
lret
adc
mov
lret
pop
cmp
pusha
scas
addl
mov
repz
lret
add
jge
daa
movsl
xor
pop
jbe
in
add
dec
add
xchg
lods
xor
mov
adc
je
inc
imul
pop
jmp
inc
jp
nopl
fisubrl
stos
xchg
cmp
xchg
repz
push
repnz
adc
bts
ds
cwtl
cmc
mov
push
enter
jp
mov
test
outsl
jg
sub
sarl
cmp
jo
loope
fxch
outsb
mov
insl
syscall
into
push
mov
lret
shlb
cmc
and
mov
das
loop
daa
dec
push
xlat
fiaddl
mov
pushf
cld
xchg
inc
clc
cmp
dec
sub
jnp
inc
or
lret
mov
rcll
jnp
xchg
sbb
push
pop
adcb
arpl
cmp
mov
pop
dec
ficompl
lds
aad
mov
cwtl
pusha
andb
call
lods
inc
cmc
add
dec
out
mov
stc
aaa
and
mov
ficompl
repz
aas
imul
fs
lcall
xor
sbb
xor
bound
int3
sbb
sarb
inc
or
cmp
fists
inc
fcompl
nop
leave
jmp
pop
stos
mov
outsl
push
mov
add
aad
lret
imul
into
insl
mov
mov
pop
cli
lret
lret
sbb
shlb
not
and
pop
jne
rcl
mov
push
fcomps
inc
jge
sbb
pop
push
inc
mov
push
shr
lahf
xor
mov
lds
sub
jo
in
or
and
popf
nop
aaa
rol
popa
jp,pt
push
xchg
mov
push
push
mov
es
test
pop
outsl
ds
iret
or
sbb
dec
in
jbe
cwtl
push
push
xchg
pop
dec
mov
negl
push
adc
mov
push
and
icebp
pop
dec
cmp
movsl
insb
dec
adc
rcll
xchg
or
sub
sahf
add
rcrb
push
push
adc
int3
int3
mov
jno
es
test
scas
jecxz
xorb
pop
mov
neg
xorl
fisubs
std
inc
jecxz
push
stc
cmpsl
sub
mov
lahf
pop
cmp
inc
mov
sub
enter
and
add
and
add
movsb
jmp
pop
cmpsb
mov
das
fmull
cmp
das
jg
pop
and
dec
arpl
mov
cmp
jb
movsb
dec
xor
and
pop
xlat
xor
pop
mov
and
adc
mov
stos
dec
push
jnp
push
push
ss
lods
or
mov
mov
inc
leavew
test
hlt
pop
xchg
adc
jnp
imul
mov
inc
dec
push
cltd
push
jp
and
sbb
adc
sti
dec
and
inc
xchg
sbb
push
fucompp
imul
mov
mov
xor
sbb
and
mov
pop
popf
mov
mov
jae
xchg
mov
repnz
sbb
pop
mov
push
jno
pop
lret
mov
test
ret
and
sbb
xlat
je
mov
imul
dec
sub
pusha
in
jmp
ja
ret
mov
outsb
cmp
cmp
xchg
insl
clc
adc
jle
addr16
xor
push
outsb
push
mov
orl
ja
jge
fidivl
xor
aad
cmpsl
enter
pop
leave
push
jne
test
orb
lds
scas
jg
cmp
and
out
mov
call
dec
nop
cwtl
xlat
lea
push
push
push
loope
adc
mov
fcmovu
mov
rcrb
out
rcll
xchg
push
sub
out
xchg
jmp
rorl
xor
lods
xchg
xchg
sahf
dec
jmp
inc
insb
aaa
xor
dec
push
fisttpl
xor
and
xchg
in
repz
cmp
pop
lock
jnp
stos
scas
in
icebp
push
xchg
cmp
or
fistl
test
adc
push
je
xchg
xchg
mov
fs
push
or
adc
jbe
xor
popf
out
and
sub
gs
cmp
fldcw
loopne
inc
cmp
pmaxsw
xor
hlt
jl
jnp
fdivp
inc
subb
and
inc
leave
inc
mov
fdivr
xchg
and
int
rol
add
mov
sti
sub
push
pusha
cmp
xchg
mov
testl
adc
loopne
mov
and
pop
and
xor
lret
int
nop
pop
pop
inc
add
and
push
mov
ljmp
or
adc
cld
les
cli
mov
inc
mov
dec
xor
inc
mov
repnz
sbb
daa
mov
mov
add
jns
incl
or
imul
dec
jg
jnp
push
sub
dec
sbb
sahf
dec
and
fs
sub
lock
mov
test
mov
in
out
mov
mov
and
aas
adc
xchg
aas
mov
iret
lcall
clc
es
jmp
jbe
mov
hlt
jecxz
lods
cmp
push
lea
faddp
stos
aas
pop
pop
jmp
sub
xor
loope
dec
jns
and
pop
les
addl
mov
sbbb
aaa
dec
loopne
push
sub
cld
in
ja
dec
punpckhwd
rcrl
and
out
mov
jmp
stos
ljmp
fsts
data16
arpl
push
out
mov
jne
sbb
sub
dec
cmp
cmp
je
sbb
mov
jno
dec
adc
adc
mov
cltd
aad
repnz
mov
imulb
or
ror
pop
call
add
mov
dec
shlb
jl
fsubl
test
sbb
xchg
xchg
inc
ret
add
pop
dec
dec
sub
addr16
popf
sub
cmpsb
inc
dec
filds
xor
orl
jmp
mov
xor
mov
movsl
xchg
xchg
or
fadds
xor
mov
push
cs
mov
imul
cli
aaa
jge
fnsave
mov
xorl
add
mov
mov
push
add
in
out
mov
xor
dec
js
movsl
es
ret
xor
clc
inc
cmpsl
mov
sbb
outsb
ret
xor
mov
pop
out
icebp
lret
cmpsl
stos
inc
mov
movl
addr16
stc
mov
push
sahf
testl
jle
xchg
xor
repnz
fisubrs
popf
ret
mov
stc
and
cmp
xor
jno
or
lret
sbb
cmpsl
pop
sub
mov
lods
dec
fs
pop
pusha
in
xchg
fbld
aad
pop
jnp
sub
in
in
lahf
imul
sub
mov
pusha
lea
mov
mov
jecxz
sbb
sbb
cmp
add
mov
xor
je
cmp
dec
js
mov
mov
xor
outsb
jno
cwtl
or
leave
ficompl
jae
dec
pop
mov
cmc
mov
cmp
cmpsb
stc
xor
push
leave
lds
sbb
xchg
cmc
adc
xchg
dec
daa
mov
pop
cmpsb
popf
lods
outsb
or
cmp
jnp
clc
jp
popf
sub
shlb
adc
insl
lcall
clc
xor
inc
out
test
sbb
inc
and
ljmp
rcll
and
leave
fadds
lahf
mov
or
loopne
xor
inc
inc
cwtl
test
andb
ret
dec
jns
jo
sbb
xor
xlat
cmp
xchg
movsb
aad
jbe
jno
add
sub
pusha
jmp
jp
add
outsb
jl
pop
es
imul
movb
sahf
mov
xor
ret
and
cmpsb
pushf
jne
divl
push
sti
call
cmp
jle
jbe
xchg
into
push
sub
push
cmp
adc
test
in
mov
mov
mulps
mov
adc
or
cmpsl
dec
movntq
movsb
movsb
lcall
rcrl
insl
jno
fildll
in
test
insb
mov
push
sbb
mov
sbb
cmp
cltd
push
ret
jo
testb
out
shll
mov
daa
ret
mov
and
mov
bound
mull
or
jecxz
adc
xchg
inc
rorb
mov
stos
test
in
aad
xor
cmp
test
loopne
push
out
inc
cmpsl
push
mov
out
incb
xor
fs
cmp
jl
fiadds
mov
arpl
rclb
test
xchg
adc
cmc
mov
test
ds
sub
inc
stc
js
or
sub
adc
pop
add
rcll
add
loopne
inc
je
fcmove
andl
push
popf
aaa
xchg
cmp
lcall
inc
jnp
addb
enter
imul
je
push
and
push
sbb
in
pop
mov
pop
push
es
jp
ficoms
xchg
mov
pop
gs
test
add
cmp
cmp
dec
cmp
mov
clc
lods
push
and
mov
inc
push
adc
cmp
leave
jb
insb
push
or
cmpsl
addr16
push
aam
sub
pop
sub
call
ja
adc
je
stc
inc
mov
jae
and
es
ss
paddsw
std
add
mov
ret
and
push
jl
mov
add
cmp
cmp
call
aad
sbb
mov
and
pushf
lret
sub
scas
pop
loop
dec
xchg
lock
xor
inc
aad
xor
in
mov
mov
cmpl
jno
inc
xor
cld
mov
imul
and
mov
xor
cmp
imul
or
scas
pop
sbb
imul
adcl
xor
dec
push
data16
cltd
out
pop
mov
loop
mov
cmpsb
and
test
scas
leave
pop
cmp
aam
adc
fwait
dec
xlat
bound
push
in
out
jl
ret
mov
in
inc
add
addr16
mov
ficoml
clc
out
and
ret
imul
cmc
fldl
mov
fs
jp
add
out
xchg
pop
leave
popa
cmpsl
in
jp
gs
mov
adc
mov
jb
fbstp
fsqrt
push
outsb
push
mov
mov
mov
xchg
ret
rolb
xor
sub
adc
clc
adc
loope
rcll
in
cmc
or
lahf
outsl
adc
mov
imul
jno
sub
xchg
addb
sbb
or
mov
inc
xor
lret
add
call
mov
add
push
xor
inc
pop
push
aas
or
xchg
iret
mov
popa
inc
fsubs
sbb
ja
xorl
cmp
fdivrl
divl
loop
cmp
jmp
int3
and
or
lds
add
mull
stc
dec
pop
mov
repnz
jne
mov
xchg
mov
mov
dec
in
add
xchg
cld
or
add
and
cmp
bound
pop
bound
faddl
mov
push
jbe
cmp
xchg
cmp
cmp
push
dec
cmp
aad
xchg
sub
sbb
pop
sbb
in
int3
pusha
sbb
lods
cmp
shl
daa
mov
push
pop
jp
cmp
subl
add
dec
test
inc
pop
aas
xchg
stc
sub
push
or
jbe
por
stos
data16
cmpsl
push
xor
xchg
lcall
push
int
roll
mov
and
adc
dec
inc
cld
mov
pop
pop
mov
shll
sbbl
popf
outsb
movsl
rcr
dec
shr
aaa
ss
mov
sub
push
lret
idivl
cmp
fists
pop
or
mov
mov
outsb
dec
mov
js
adc
sub
aad
cmpsb
mov
fdivs
mov
test
sub
das
pop
imul
add
jb
addr16
rcll
push
cmp
scas
fimull
mov
push
adcb
add
cmp
out
fcmovne
sti
xchg
cld
in
aam
iret
pop
and
jmp
ss
je
or
in
mov
loop
dec
gs
mov
pop
out
mov
xchg
xor
pop
push
and
aad
rclb
lea
lret
js
mov
mov
cwtl
push
outsl
pushf
ljmp
xchg
lahf
stc
in
push
fninit
je
mov
aas
dec
jg
jmp
jecxz
clc
outsl
push
mov
and
adc
cmpsb
adc
inc
push
mov
lcall
roll
jge
sarb
xchg
mov
mov
aas
mov
lods
lcall
push
nop
addr16
shlb
outsb
push
xchg
sbb
inc
ret
push
insb
xor
pop
jl
test
fnsave
inc
cmpsb
lret
add
cs
xor
int
into
sti
cmp
add
inc
addr16
loope
dec
incl
jmp
lds
lahf
pop
mov
and
mov
adc
push
addr16
test
pop
out
or
loopne
jae
pop
xchg
sbb
sbb
ret
shlb
bound
add
inc
and
call
scas
inc
int
out
mov
rcrb
mov
sahf
cwtl
add
idivl
outsb
jae
div
dec
cmp
push
inc
mov
inc
jmp
ds
and
mov
jl
cld
lahf
mov
mov
push
scas
repz
outsb
popa
xor
xchg
mov
test
add
cmp
push
mov
xor
inc
stc
jmp
pusha
aaa
fistl
pop
jbe
fsubrl
sbb
popf
cld
xchg
loope
mov
lods
inc
mov
ljmp
inc
jecxz
mov
push
mov
inc
mov
out
push
and
mov
inc
shrb
sbbb
fcoms
addr16
and
lret
fcompl
fwait
scas
jne
inc
and
inc
push
enter
in
std
or
inc
jl
push
rcrl
clc
push
fnstenv
imul
nop
jo
pushl
sbb
sub
nop
fidivs
icebp
out
lret
jno
je
push
test
out
push
out
ret
sub
or
popf
repnz
roll
push
in
aam
pop
loopne
dec
ljmp
bound
pop
and
push
xor
push
push
jnp
les
sbb
jo
jl
jo
call
mov
xchg
iret
imul
stc
xor
and
loopne
lcall
outsb
or
pop
lcall
adc
stos
dec
sub
sbb
fcmovu
lods
scas
fadds
cmpsb
mov
sbb
pop
cmp
adc
outsl
icebp
add
cltd
mov
imul
add
xor
and
mov
sub
pop
mov
mov
cmp
movsl
fistps
enter
mov
rclb
insb
mov
jb
fwait
xor
imul
sbb
or
das
ret
loope
xchg
movsl
push
aam
outsb
or
test
loopne
enter
sub
mov
push
psubq
and
adc
push
outsl
fcmovbe
lret
pop
leave
pusha
fisubrs
stc
jo
inc
adc
fcoml
movsl
push
mov
cmp
mov
mov
fmul
mov
mov
dec
xchg
jg
mov
cmp
sbb
or
add
xchg
sbb
shr
and
jne
cmp
jecxz
jns
icebp
mov
imul
outsb
clc
jne
arpl
push
js
or
fnstenv
or
cwtl
pop
dec
cli
dec
push
sbb
idivb
mov
sti
mov
ljmp
jnp
mov
pop
add
pop
out
shll
sbb
out
mov
jecxz
mov
push
loopne
push
arpl
and
scas
sbb
xor
or
iret
xor
jmp
push
cmpsl
push
in
ja
lea
mov
mov
xlat
mov
roll
int3
mov
in
stc
mov
inc
shll
add
in
jmp
push
mov
adc
addb
lods
sbb
inc
pushf
push
pop
dec
aaa
in
cmpsb
xchg
jno
and
xchg
jae
jae
fiaddl
popa
xorps
rcl
push
xor
xchg
xchg
fwait
jno
enter
call
sub
in
lods
xchg
test
dec
xchg
scas
fisubl
jmp
lret
adcb
jbe
in
add
sub
xchg
xchg
call
jmp
mov
mov
repz
and
outsl
inc
push
gs
std
push
jns
xlat
sub
cmc
and
stc
movsb
fs
xchg
push
int3
cmp
popa
cmpsb
sbb
clc
sbb
fimull
jns
cld
xor
cmc
aam
dec
fidivrs
test
cld
xchg
mov
mov
cmp
outsl
sub
sub
dec
fisubrs
hlt
pop
imul
cmp
fcmovnu
iret
cld
pop
push
push
cmp
jp
lret
cmp
lret
mov
mov
jb
aam
fisubrl
mov
inc
test
jb
ret
jb
es
add
ja
sbb
or
mov
std
daa
fidivrs
movb
mov
out
push
ja
insb
sbb
mov
loopne
shlb
insb
adc
push
xor
add
out
mov
dec
popa
in
daa
add
ret
hlt
sarl
xor
cmp
subb
mov
insl
push
or
stc
enter
call
mov
pop
loop
rcll
push
adcw
pop
dec
cmpsl
std
in
flds
jmp
out
lret
mov
rcrb
xchg
shll
add
pop
cmpsb
mov
jg
fadds
in
mov
shll
cmp
dec
mov
mov
movsl
mov
icebp
cmpsl
sarl
jp
pop
dec
repnz
daa
in
pop
ss
jl
negl
push
lds
dec
dec
mov
gs
fldcw
sbb
cmpxchg
push
sbb
mov
scas
int
out
push
mov
pop
sbb
add
jge
jnp
or
scas
orb
push
and
icebp
mov
pop
pop
fs
sub
lahf
testb
pushf
push
adc
movsl
stos
je
xchg
insb
imul
add
punpckhdq
gs
sbb
mov
cwtl
subl
fimuls
or
or
jp
dec
lretw
scas
push
hlt
test
dec
outsb
outsb
mov
sub
mov
stc
and
mov
dec
inc
xor
bound
push
test
in
daa
sub
mov
or
inc
mov
fidivrl
adc
push
out
adc
xchg
js
int3
sub
out
jo
sbb
dec
gs
cmpsl
fisubrs
int3
sbb
les
pop
pop
sbb
adc
lahf
dec
mov
pushf
repnz
jl
xchg
into
push
xchg
xor
popa
jge
rclb
popa
std
movsl
pop
fwait
mov
pop
mov
leave
push
je
insl
cmp
inc
in
mov
push
int
inc
mov
fstps
mov
dec
gs
sbb
shll
movsb
icebp
pop
adc
xor
fidivrl
aad
rcrb
sub
inc
or
lahf
mov
mov
sarl
lret
mov
aam
fildll
movsb
icebp
jp
jo
cltd
aaa
mov
jno
movsb
xlat
mov
and
add
mov
enter
mov
rcl
push
imul
push
xchg
push
add
cli
or
loop
out
cmp
mov
mov
clc
adc
mov
stc
inc
jns
and
jmp
push
loop
xchg
ret
inc
sbb
out
or
mov
push
sub
or
out
cli
xchg
or
push
mov
in
scas
out
push
xchg
dec
mov
and
xchg
std
xorl
jns
adc
outsl
xchg
push
push
fucomp
xchg
dec
dec
cli
xor
in
push
movsb
adc
jp
push
jmp
sub
clc
shrb
inc
loop
sub
stos
and
jecxz
jne
cld
and
mov
in
mov
xchg
xchg
je
dec
xor
cmp
pop
inc
adc
lods
sbb
into
les
pusha
pop
fistl
or
cmp
or
mov
cli
mov
sub
shrb
sbb
lods
jg
fs
cmp
mov
sbb
add
repz
push
add
xor
cmp
fwait
mov
xchg
push
or
lret
cmp
adc
sbb
lods
scas
movsb
aam
sbb
cmp
add
cmp
andb
sub
mul
mov
fcoml
sbb
sub
jb
or
out
push
cmc
sub
sahf
mov
xchg
sbb
jg
lock
push
into
jg
mov
inc
dec
std
sahf
pusha
stos
lret
mov
js
rolb
mov
aam
inc
insl
jmp
push
mov
sbb
imul
je
fisttps
and
cmp
or
int
flds
cli
int3
dec
mov
rcl
cld
xchg
cmpsb
jns
adc
and
fxch
add
lret
jb
xor
repz
sti
les
ds
bswap
mov
fnstcw
or
mov
mov
xor
imul
les
ljmp
inc
sbb
xchg
js
xchg
push
push
jmp
fdivs
sbb
fisubrl
je
js
dec
jp
sub
sub
push
sub
inc
and
adc
ljmp
loop
rolb
loop
roll
imul
repnz
push
mov
push
xor
and
sub
sbb
push
cmovae
lock
aam
pop
push
jmp
rorb
cmc
es
cmp
add
sahf
fwait
dec
xchg
jnp
cltd
insl
inc
pop
xchg
push
inc
mov
cmpsl
add
adc
sahf
ja
out
in
xchg
in
or
xchg
push
jno
mov
pop
adc
lock
popf
xor
std
loopne
sub
in
icebp
and
jb
in
mov
sbb
pop
mov
sarb
pop
pop
popa
or
int3
fimull
xchg
nop
fs
es
sub
cmp
dec
sub
add
lahf
movsl
xor
scas
das
dec
icebp
or
dec
cmp
add
mov
pop
mov
orb
add
xorb
cmpl
push
into
stc
adc
inc
popa
or
rcrl
dec
jp
sbb
bound
shll
insl
jge
and
shlb
pop
mov
push
xor
out
cmp
cmpsb
sbb
push
aam
or
lret
xchg
sub
adc
jb
stos
jge
push
and
mov
popa
es
lea
int3
data16
shlb
scas
insb
add
push
loope
addl
mov
enter
xor
lret
mov
cltd
sbbl
in
lahf
les
mov
xchg
dec
imul
add
add
adc
xor
adc
jno
xor
or
or
or
clc
mov
call
pop
sarl
movsl
xor
andl
fnstsw
cmpb
push
push
push
js
aaa
mov
sub
nop
test
lahf
pop
sti
mov
inc
ds
lahf
daa
jns
xor
cmc
fildll
mov
std
inc
cmc
fdivrl
pop
stc
inc
xor
clc
repnz
and
sti
call
and
rol
cmp
jecxz
xchg
pop
enter
adcl
sbb
sub
jge
stos
add
push
repz
fildl
clc
add
sbb
sub
stos
add
pop
gs
stos
lret
xchg
mov
xor
dec
test
fbstp
call
add
push
push
adc
pop
mov
pop
push
pop
and
lahf
jbe
popf
aam
sti
push
sbb
cmp
and
and
icebp
lock
jne
mov
sub
mov
test
pusha
pop
je
jno
inc
pop
daa
negl
cltd
orl
insb
add
pop
inc
mov
jb
testl
mov
and
test
and
repz
ds
xor
xchg
mov
mov
mov
mov
lret
pop
imul
insb
push
dec
push
movsl
xchg
icebp
stc
lcall
loopne
add
cwtl
lret
jl
push
lret
xlat
cmp
pop
and
dec
cwtl
sub
loopne
mov
mov
clc
sahf
adc
mov
je
ss
pop
inc
shlb
push
push
push
pop
data16
leave
nop
xorl
out
pop
test
lret
aas
or
add
div
sti
add
bound
xbegin
test
xor
xor
xor
and
ret
push
imul
jnp
pop
mov
add
mov
mov
push
int
adc
ret
xlat
icebp
lea
iret
sbb
push
int
pop
clc
push
push
aaa
mov
and
pop
outsl
subl
cltd
js
push
fdivrl
sub
rcr
rcll
add
cmc
sbb
shlb
inc
sbb
or
push
xor
rcrb
sbb
and
pop
mull
cs
xchg
shl
mov
popl
loopne
andps
test
mov
cmp
enter
sub
pop
stos
ret
inc
or
ret
cs
xchg
fbstp
sti
mov
push
jnp
out
aad
pop
or
pop
xchg
cmp
lock
mov
pandn
leave
in
mov
mov
iret
jns
pop
or
mov
cmc
es
rolb
or
dec
pop
pop
inc
shr
mov
je
dec
pushf
ljmp
mov
testl
aaa
cmp
sub
xchg
push
and
pop
imul
jg
mov
scas
das
hlt
sub
sahf
movsl
push
les
rcl
aam
ret
pop
testb
pop
rcl
sahf
push
imul
fwait
mov
imul
rcrb
aad
add
loop
push
add
es
in
jecxz
out
mov
stos
cmp
dec
cmpsb
loop
stos
xlat
or
aaa
repz
test
mul
and
add
arpl
adc
ja
sub
inc
js
pop
je
imull
xchg
adc
lret
sub
iret
sti
mov
inc
add
cli
scas
mov
iret
inc
outsl
inc
lock
or
dec
loop
sbb
jle
bound
dec
adc
cmp
push
pushf
cmpsl
repz
xchg
jno
adc
sbb
inc
pop
insl
movsl
mov
push
adc
adc
imul
mov
push
sub
jb
cmp
push
fstl
out
push
add
mov
lods
clc
lret
or
lea
mov
in
rcl
sub
sti
xchg
inc
fildll
inc
lock
sub
inc
mov
addl
fnsave
ror
stc
fcomps
subb
insb
dec
lods
mov
leave
ss
lods
push
xchg
movsl
sti
mov
gs
and
adc
shl
push
pop
popf
push
xor
mov
fisttpl
out
xlat
jp
sbb
xchg
lcallw
push
xor
jmp
inc
mov
das
lds
jle
into
pop
jne
or
inc
aas
jnp
les
shrb
mov
ret
inc
mov
xor
shlb
fwait
sahf
fs
fldt
jp
mov
inc
adc
mov
pop
sbb
inc
cmp
mov
jge
sti
push
push
pop
mov
jae
arpl
incl
out
out
subl
inc
jne
int3
clc
in
mov
inc
les
ret
push
mov
ret
inc
loop
icebp
loopne
pushf
int3
xlat
add
jecxz
push
popa
nop
nop
out
in
out
ficoms
insb
arpl
lock
xor
pusha
es
or
xor
shll
pop
or
loop
and
lcall
popa
push
aad
cmp
push
mov
cli
fiaddl
inc
adc
push
fstpl
sbb
jb
fcomps
cmpsb
jno
pop
flds
andl
call
into
test
xchg
cmp
imulb
pop
popf
arpl
and
test
int
adc
daa
xchg
cmpl
loop
shlb
std
aam
call
imul
dec
xchg
insl
push
dec
test
shrl
frstor
incl
inc
xlat
sub
push
jnp
fildl
mov
mov
inc
cmpsb
ja
andb
push
les
push
sbb
outsb
xor
lcall
repz
mov
dec
sbb
pop
or
cmp
jl
sub
sub
std
cmp
in
xchg
fmuls
lds
dec
cmp
push
enter
jb
jp
sub
divl
pop
lds
add
and
fwait
cmc
arpl
cmp
jns
xor
shll
inc
dec
scas
call
outsl
rcr
xchg
sbb
push
sbb
frstor
mov
je
pop
or
xchg
dec
popa
xlat
xor
fistl
or
pop
cli
stos
pop
pop
sub
add
dec
xchg
ret
cmpsl
rorb
sbb
out
xor
rcrb
mov
mov
cmp
adc
sbb
mov
das
push
add
out
inc
cmp
mov
rcr
andnps
inc
add
xor
test
pop
outsl
push
cmc
xchg
jmp
jmp
hlt
scas
xor
mov
dec
rorb
pop
ja
ret
test
mov
test
mov
out
or
mov
dec
ficoml
aam
adc
jp
inc
or
adc
test
push
rolb
or
pop
xorb
icebp
or
dec
shrl
ljmp
int3
sarb
inc
sub
sbb
arpl
ja
mov
and
adc
test
repz
cmp
in
decb
shr
dec
xor
clc
mov
sub
pop
js
scas
ja
mov
jge
jg
stc
xor
push
mov
pop
cmp
push
fs
add
rorb
movsl
cwtl
or
inc
movsl
mov
sbb
stos
jnp
pop
dec
js
xor
stc
sub
cs
inc
inc
jb
clc
jae
inc
cwtl
ds
cmc
or
out
arpl
inc
mov
jo
jge
sbb
jb
push
test
fsubrs
pop
jb
dec
je
cltd
mov
xor
jae
int3
jl
fcmovbe
cmp
mov
sub
xchg
sbb
or
lret
inc
movb
repz
fcoms
fs
push
lret
daa
pop
rcrb
movb
mov
lea
lods
sarb
lods
in
adc
or
mov
cmp
jge
inc
mov
aam
pop
mov
ljmp
and
in
jmp
fsubl
or
aad
notl
mov
scas
xchg
outsb
dec
dec
jb
ret
mov
call
out
aad
sub
data16
out
adc
push
xor
xchg
add
jno
lea
add
xor
mov
lret
xchg
jl
mov
test
test
sub
and
sub
in
xor
jb
pop
pusha
mov
sub
mov
imul
dec
push
sub
jg
mov
jnp
lea
jmp
outsb
fcoms
lahf
out
xchg
pop
jp
xchg
xchg
or
xor
ret
inc
cmp
xor
xchg
in
nop
sub
filds
testl
test
cltd
out
fldcw
dec
lret
add
movsb
mov
in
cli
dec
xor
push
pop
inc
mov
dec
mov
or
xchg
add
xchg
in
push
out
sti
mov
ss
xor
pusha
pop
cmp
sub
out
pop
mov
lahf
push
mov
ljmp
test
jmp
nop
xchg
jecxz
cmp
jb
mov
out
rcl
sarb
stos
pop
movsl
cltd
lret
fmul
js
popf
lock
sbbb
cmpsl
imul
jl
pop
mov
cmp
pop
pop
push
and
or
jns,pn
mov
andl
lods
inc
mov
and
dec
mov
inc
adc
inc
out
xchg
jae
roll
or
loopne
addr16
sub
ret
sbb
fsubs
add
andl
xchg
push
addl
test
hlt
aam
fcomi
cmpb
jno
ljmp
jl
push
and
xor
stos
add
in
mov
adc
popa
dec
fnclex
ljmp
and
fstps
push
cltd
adc
jecxz
scas
clc
sbb
or
cmovl
call
ss
pop
push
fchs
call
sbb
pop
stos
lret
clc
pop
jo
pushf
push
lret
mov
push
inc
mov
jnp
adc
inc
mov
out
push
aam
or
xchg
dec
adc
add
cmpsl
sbb
push
es
or
and
cmp
cmp
xor
scas
lea
cli
push
pop
cmp
ja
and
jl
int3
mov
subb
or
imul
push
mov
sbb
cltd
movsl
dec
out
outsb
jno
push
aam
je
pop
dec
mov
sbb
aaa
push
xchg
out
mov
imul
arpl
out
mov
push
fnsave
outsb
jno
push
cmpsb
sbb
cmp
out
inc
shll
gs
nop
movsb
movsl
lea
mov
inc
repz
cltd
out
repz
jo
aad
cs
int3
scas
fcoms
stc
icebp
pop
fdivrl
push
or
mov
xchg
push
lahf
pop
jp
jae
or
jecxz
ret
aad
push
shl
pushf
inc
jbe
lods
gs
ss
pop
test
mov
fsubrs
ljmp
add
ret
sub
or
test
rcr
sub
cmp
nop
inc
xor
xchg
mov
jb
pushf
popa
fistpll
or
dec
in
fcmovnbe
inc
and
in
aam
clc
scas
xchg
cmp
out
adc
cmp
push
jmp
sub
aas
arpl
sbb
js
jle
cmpsl
push
mov
clc
xchg
es
xchg
add
int
cwtl
dec
adc
xchg
outsb
lods
stos
ret
adc
lret
out
mov
fbld
mov
cmp
sub
push
adc
add
lcall
mov
jbe
push
mov
ds
cmp
dec
loopne
jle
mov
pop
lcall
xor
loop
sub
data16
in
rcr
push
mov
fisubrl
movsl
pop
imul
or
pop
bound
xchg
xor
xor
mov
push
movsl
fldt
xor
xchg
in
dec
push
pop
cmpsb
daa
pop
sbb
out
imul
jno
cmp
pop
cmp
sub
int
adc
push
in
sbb
sahf
out
int
sbb
add
test
test
int
fstl
push
ret
adc
xor
mov
aas
push
inc
add
ss
insb
int
xor
xor
xchg
sbb
mov
lret
jne
jns
sbb
stos
sub
cmp
push
push
lds
add
jo
fbstp
jnp
pop
sbb
out
xchg
jp
push
pop
fwait
inc
inc
jns
sbb
jge
pushf
scas
ret
movsl
jae
and
xor
cmpsb
jo
cmp
inc
divl
stos
ret
mov
sbb
movsb
pop
pop
cmp
dec
mov
das
stos
dec
jle
sbb
add
xchg
add
adc
fadd
cwtl
rcrb
inc
sub
xchg
shl
xchg
scas
mov
xor
pop
lea
test
mov
das
insl
add
xlat
jb
mov
jecxz
jle
cmp
sbb
hlt
sbb
push
and
cmpsl
add
mov
popa
fwait
daa
int3
dec
aaa
lcall
inc
mov
decb
inc
outsl
repnz
dec
add
push
mov
mov
test
lahf
jb
xchg
jo
pop
sbb
xchg
scas
cmp
fwait
mov
cmp
int3
mov
mov
and
cmp
in
add
insb
cmc
inc
sbb
adc
popa
fs
jle
nop
push
bound
add
insl
or
addb
or
stos
fs
push
fsubr
enter
loope
hlt
lret
jnp
fimuls
aaa
mov
xchg
std
pop
jmp
xchg
sub
adc
mov
test
bnd
bound
pop
jb
add
push
enter
es
fidivs
scas
ja
mov
fwait
cmp
pop
stos
pop
mov
lds
ret
lahf
sub
ret
dec
mov
and
sub
movl
pop
loope
or
sbb
inc
lahf
mov
rcrb
das
xor
cwtl
jb
cmp
out
pop
cltd
cs
push
jge
outsl
push
inc
xlat
sbb
xor
pushf
outsb
out
enter
cmp
or
mov
add
sbb
mov
cmovle
das
stc
aam
mov
jle
lcall
push
je
shr
push
pop
lods
xorl
rorb
push
movsl
xchg
loope
std
nop
inc
hlt
jp
stc
xchg
insb
xchg
xor
lds
jnp
push
pop
or
fisttpll
mov
xor
imul
cld
out
adc
cs
add
popa
mov
cmp
jno
cmp
jne
aaa
insl
and
lea
prefetcht0
fsubl
adc
mov
notb
mov
inc
cmp
jg
pushf
mov
mov
out
pop
and
nop
stos
lahf
in
mov
jecxz
roll
xchg
fwait
cmpsb
rol
sub
repz
ficoml
jecxz
dec
xor
in
mov
shrb
movsl
ror
or
lods
cmp
scas
mov
data16
dec
test
cwtl
xchg
out
cmp
or
movsl
in
push
in
lea
xlat
int3
sti
ret
or
mov
rorb
test
sbb
lock
or
test
mov
mov
mov
addr16
or
xchg
sbbb
popa
movsb
add
test
sub
push
xchg
lods
xlat
repz
aas
pop
cmpb
inc
add
shr
and
push
cmp
dec
jmp
push
add
sti
sbb
dec
aad
push
imul
mov
hlt
stc
cmp
push
sti
mov
mov
pushf
xchg
insl
pop
les
outsb
xor
adc
xchg
xorl
sti
adcl
mov
insl
jns
mov
jl
fistps
sub
testl
cli
leave
movl
in
icebp
hlt
ret
jno
cltd
mov
cld
cmp
fs
outsl
test
mov
dec
dec
popa
and
imul
sbb
mov
pop
jae
pushf
inc
sti
rcrb
aas
out
stos
mov
push
sub
inc
pop
loop
sti
sub
cmp
in
mov
mov
mov
es
dec
dec
arpl
sti
xchg
mov
or
out
imul
roll
insl
mov
loope
jbe
imul
ret
jle
cmp
mov
or
ret
addr16
xor
popa
ret
pop
pop
sbb
pop
lcall
xor
xor
iret
rclb
xor
loopne
mov
sub
sbb
or
data16
ret
clc
xchg
jl
xlat
js
cmp
push
jnp
push
lahf
push
andb
pop
notb
adc
stc
outsl
int3
popf
icebp
je
insb
ljmp
popf
push
testl
add
mov
icebp
xor
adc
aam
jne
xor
add
xchg
inc
ljmp
xor
in
mov
lods
mov
push
mov
imul
cmpsl
push
rcl
mov
dec
int
imul
test
int
imul
cmp
shr
add
int3
jmp
inc
push
int
ds
out
xchg
shr
or
push
push
sbb
cmp
pop
out
jp
lock
jle
sbb
xor
jno
mov
or
pop
sahf
icebp
mov
dec
lret
mov
lret
pop
adc
stos
mov
lea
mov
push
shl
ds
fs
inc
fstl
push
jp
mov
and
or
imul
fildll
aam
mov
fistl
and
repz
jg
push
or
or
lcall
mov
sbb
mov
icebp
cli
scas
jmp
fwait
data16
ljmp
gs
cmp
add
aaa
jo
popa
pop
mov
xchg
and
push
cmp
std
outsl
ret
xchg
insb
mov
push
or
jb
push
jmp
mov
lret
lods
dec
mov
cmc
sub
xchg
push
test
movsl
or
sub
or
jns
mov
int3
xlat
mov
xchg
sbb
jmp
stos
xchg
mov
mov
sub
lea
int3
test
ljmp
jle
jl
pop
lcall
sbb
jg
data16
and
mov
push
xchg
out
jl
and
test
xchg
orl
loopne
pop
adc
mov
inc
scas
sbb
test
sub
lcall
imul
inc
mov
shr
mov
jmp
stos
mov
jns
fsubl
iret
jle
stos
out
sub
arpl
xchg
sbb
clc
lcall
pop
cmp
ret
sbb
dec
cld
sub
lret
inc
inc
aaa
int3
jno
mov
pusha
es
rolb
dec
lret
repz
out
pop
sbb
mov
add
push
adc
pushf
jno
ds
roll
testb
and
jnp
call
mov
pop
inc
jge
push
jp
inc
fs
stc
add
jb
inc
in
clc
fists
aaa
loop
or
cmp
xchg
nopl
aam
popf
xchg
mov
insl
mov
mov
in
ret
fnsave
inc
mov
repz
faddl
sub
xor
mov
cmp
loopne
xchg
cld
sub
add
lahf
loopne
rcrb
push
lods
inc
xor
stc
mov
data16
out
jle
push
incl
push
dec
aaa
cmp
or
sub
iret
shr
sbb
cmc
pop
or
aam
xchg
xor
ret
mov
add
bound
in
cmpsl
jmp
mov
adc
cmp
subl
cmp
leave
xchg
push
mov
mov
mov
mov
inc
mov
jne
scas
sub
mov
fdivr
test
mov
pop
jge
and
cmp
call
adcl
jp
jae
mov
add
loop
mov
jo
ds
pop
ja
les
out
pop
xor
mov
mov
dec
popf
sbb
sti
fsubr
adc
loope
fstps
imul
mov
push
mov
jnp
aad
mov
adcl
popf
insl
or
push
in
cwtl
jne
mov
sti
shlb
mov
popf
pop
nop
scas
movsl
mov
add
pop
xorl
sbb
cmpsb
or
sub
rcl
fwait
cltd
std
mov
in
incb
out
nop
shl
or
addl
inc
in
xor
xchg
jl
mov
out
adc
enter
cmp
pop
scas
sub
ss
jmp
stos
sbb
xchg
and
loop
mov
cmc
cmp
xorl
add
jnp
js
addr16
aam
fildll
lret
add
add
pop
sub
imul
or
xor
dec
cs
mov
lahf
loope
lea
dec
fsubs
add
mov
jg
mov
inc
imul
xchg
pop
icebp
imul
cmpsl
pushl
iret
lret
ss
cltd
test
pop
sbb
dec
xor
or
cltd
data16
fsubrl
jp
or
out
cld
movsb
xor
lds
inc
insl
add
andl
hlt
inc
lret
das
pop
in
cmp
lahf
imul
xchg
rclb
mov
ret
mov
out
arpl
sarl
and
lcall
rol
dec
cmpsl
mov
adc
inc
dec
cltd
xorb
lahf
and
push
cmp
mov
jmp
lea
pop
repz
xor
cmp
add
xchg
and
insb
ficoms
add
adc
data16
fwait
enter
mov
push
pop
mov
xor
push
adc
inc
dec
mov
hlt
jnp
bound
inc
je
fmulp
bnd
ljmp
out
sqrtps
xor
push
enter
dec
pusha
or
rcrl
pop
in
cwtl
sti
scas
into
xchg
test
xchg
sub
or
dec
fimuls
mov
mov
pop
push
cmp
push
adc
or
mov
xchg
dec
push
lret
rcr
jg
int
xchg
mov
movsb
leave
test
inc
add
inc
fiaddl
adc
dec
enter
cmp
pop
sahf
shll
and
mov
mov
ret
mov
cld
dec
mov
outsl
push
xor
xchg
fmull
pop
add
inc
std
mov
xchg
push
mov
addl
in
mov
adc
xor
jg
fwait
int3
inc
pushf
mov
fdivl
cmpsb
out
loope
sbbb
adcb
sbb
sub
push
and
mov
adc
mov
xchg
jge
and
push
sbbl
fs
jbe
mov
cmp
inc
jae
dec
movsb
xchg
cs
sub
push
insb
xchg
mov
or
sti
cwtl
inc
insb
dec
or
adc
std
fidivrl
jns
adc
mov
add
aaa
inc
mov
and
mov
in
add
pushf
aam
hlt
fiadds
jbe
sub
ret
sub
jnp
sarl
stos
sub
popl
cmp
mov
pop
jne
ret
fsubrl
push
out
pop
push
sbb
cs
into
xlat
cld
lds
pop
jle
adc
xchg
insb
or
out
mov
inc
mov
cld
hlt
faddp
adc
xchg
adc
mov
xchg
imul
pop
jecxz
cmp
sbb
popf
or
je
dec
inc
cltd
xor
jmp
or
lods
cmp
lahf
shlb
add
jecxz
ds
leave
jp
or
cwtl
aaa
aaa
jle
leave
dec
adc
jecxz
sub
inc
or
pop
sub
adc
or
cmp
out
push
aas
inc
adc
cmp
xor
pop
scas
pop
and
mov
jno
pop
dec
movsb
sub
jle
xor
push
xchg
adc
xorl
ja
repz
out
mov
push
dec
hlt
ror
jg
fidivrl
inc
rcrb
xchg
xor
in
adc
jl
outsb
jbe
mov
or
xchg
dec
sub
and
jno
sarl
push
xor
in
cltd
add
sti
hlt
daa
push
and
std
js
pop
pop
gs
add
cmp
ljmp
das
pop
loope
icebp
inc
je
ror
xor
jne
stos
pop
lods
dec
inc
pusha
jno
subb
or
sub
insb
and
jnp
push
fisttpll
push
addr16
cmc
or
mov
imull
adc
pushf
popa
mov
fstps
loopne
pop
cltd
dec
hlt
jne
insb
sbb
les
fsubrs
incb
inc
jo
jge
mov
sbb
fs
scas
test
push
sahf
pop
adc
cwtl
xor
or
push
push
jmp
fsubl
add
clc
addb
mov
out
popf
fcmovne
daa
mov
and
pop
mov
addr16
mov
shrl
aaa
lret
jl
add
orl
insb
jmp
aad
or
rolb
out
movsb
in
mov
adc
jae
push
subl
leave
aas
in
out
shrl
out
lea
outsb
out
mov
cmp
cmp
lahf
mov
js
nop
pop
pop
cmp
ds
fisubl
stc
dec
and
ja
pop
jmp
lods
xchg
pop
push
or
or
jne
mov
test
or
jno
lahf
cmc
pop
aam
sbb
add
fwait
lret
xchg
jae
xchg
jbe
and
mov
popa
testl
imul
mov
xchg
aaa
shrl
sub
mov
rcrl
dec
jg
andl
pop
aam
adc
cld
jno
aaa
int
or
les
ja
ss
scas
adc
ljmp
addr16
test
jnp
mov
sub
xor
dec
xchg
mov
rorl
or
jmp
iret
je
stc
lds
mov
or
cltd
leave
inc
or
push
dec
adcb
pop
xor
inc
lcall
cmp
lret
jns
inc
nop
pop
inc
imul
push
pop
mov
sub
lret
fs
ss
cmp
insb
lock
xchg
jae
daa
sub
int3
mov
pop
pop
adc
sub
adc
rol
sbb
cmovs
imul
and
pop
loope
sti
rcl
loope
or
and
cmpsl
mov
jae
mov
outsl
rorb
ficoml
jg
pop
in
aad
push
mov
dec
jmp
scas
xor
mov
sbb
repz
mov
pop
push
cltd
popf
add
fistpll
ljmp
cmp
push
lods
jle
arpl
lcall
mov
mov
sbbl
dec
inc
and
mov
arpl
aad
lret
int3
mov
enter
lods
mov
pop
pop
and
outsl
mov
dec
jmp
aam
mov
xor
xor
xchg
dec
jg
add
jns
inc
js
jns
cld
fistpl
add
adc
push
mov
jle
cmp
xchg
or
jp
xchg
or
mov
pop
sbb
repz
mov
out
xor
mov
push
gs
rcrl
in
lods
adc
xchg
data16
je
jecxz
in
insl
sarl
and
cmp
inc
adc
ljmp
dec
jb
into
test
pop
rorl
mov
scas
cmp
mov
sub
mov
push
dec
mov
addr16
jl
mov
sbb
rcrb
inc
test
das
jg
lods
movsb
add
data16
shl
mov
xchg
dec
xlat
scas
sbb
push
lahf
cmpsb
addl
push
jl
sub
mov
lret
test
mov
or
xchg
ret
lcall
stc
lret
or
xor
jnp
inc
rclb
mov
xor
mov
mov
xchg
not
lds
addr16
xchg
int
dec
or
mov
ds
or
pop
xor
sbb
out
and
sbb
inc
popa
imul
inc
dec
jns
mov
jne
fs
push
push
mov
sbb
test
xor
loop
andb
shrl
je
mov
dec
cmp
movsl
nop
dec
sub
iret
js
mov
daa
push
jb
lods
mov
ss
and
mov
rcrl
idivb
daa
lods
or
outsl
das
cmp
sbb
push
cmp
sbb
cmpps
testl
outsl
push
lret
xchg
test
push
xor
sbbl
pushw
xor
daa
xor
or
mov
data16
scas
lock
adc
add
aam
lret
mov
pusha
sbb
jae
fsubrs
ret
add
xlat
push
cmp
pop
inc
imul
and
cld
sub
nop
arpl
or
fstps
aam
test
cmp
cld
push
dec
xchg
int3
inc
adc
out
mov
sub
jns
out
push
cltd
push
jg
xor
jecxz
inc
insl
ljmp
fists
dec
test
lock
mov
sbb
lahf
lea
scas
jb
push
in
jp
shl
ja
ficompl
push
cmp
cltd
inc
or
jge
mov
sub
movsl
jno
mov
add
inc
jecxz
inc
add
imul
iret
aam
js
addl
data16
cmpsb
js
cmp
shll
sub
std
push
lret
scas
cmp
dec
notl
loop
cwtl
inc
or
dec
leave
shll
cmp
fmuls
mov
data16
mov
mov
and
in
out
shufps
inc
xor
rcll
enter
cmp
jnp
mov
xorl
jno
mov
test
inc
test
leave
jecxz
add
js
xor
in
ss
add
or
fwait
imul
or
xchg
inc
jae
and
pop
dec
lahf
out
repnz
dec
jmp
inc
stos
mov
test
mov
push
xchg
sbb
mov
push
daa
mov
popa
adc
jae
mov
adc
ret
mov
xchg
xor
sbb
hlt
andb
cmp
loop
dec
adc
or
filds
dec
inc
mov
popa
pop
fstl
and
pop
push
dec
int
add
test
test
outsl
mov
setnp
sahf
mov
fstpt
jge
dec
rclb
pushf
jb
test
mov
mov
pop
dec
or
aaa
sbb
mov
lcall
test
sarb
lock
sub
out
push
xlat
dec
pop
mov
mov
xlat
push
stc
repnz
xor
push
imul
sahf
mov
push
push
adc
dec
jnp
mov
pop
imul
push
and
add
jnp
adc
das
push
adc
jns
inc
clc
stc
fildl
mov
outsl
xor
lahf
iret
add
icebp
aaa
testb
push
fnstsw
and
sti
xchg
mov
int
pop
dec
xchg
add
inc
test
int
xor
mov
fiaddl
cli
stc
cmc
stos
adc
inc
repnz
mov
push
nop
je
mov
push
push
mov
jg
sti
in
sub
xlat
sbb
pop
push
pop
jge
inc
imul
mov
popf
rep
xor
into
jne
sub
ljmp
ror
stc
aam
mov
pop
fistps
int3
or
mov
insb
sbb
adc
ficoml
adc
das
out
xchg
or
mov
inc
mov
stos
mov
push
test
xchg
mov
mov
adc
test
sub
jnp
lret
sbb
xor
cmpsb
cmp
movsl
mov
fsubrp
pop
sub
nop
mov
mov
out
aas
ds
xchg
mov
fs
icebp
xor
addr16
je
repnz
inc
lret
pop
cmpsl
rorl
cmp
push
popa
sbb
mov
int
outsb
xor
add
inc
orb
subb
jbe
enter
and
call
mov
inc
push
jl
sub
dec
add
adc
ljmp
adc
fwait
stc
push
jno
ss
xor
ja
push
add
jae
popf
pop
jne
pop
add
xchg
mov
sbb
cmpsl
fsubrs
jp
mov
xor
jno
ja
stc
cmp
mov
inc
pop
cmpsl
mov
ret
cmp
push
stos
rcr
mov
ret
cmc
fcomps
push
cmp
fisubs
aad
movsl
fdivr
cmp
movsb
daa
insl
xor
mov
aas
add
mov
dec
pop
cmp
xlat
xchg
or
pushf
mov
cltd
int3
fimuls
mov
notl
movsb
stos
cmp
jo
std
or
mov
or
dec
pop
shll
cltd
lret
bound
addr16
push
mov
insb
cmpsl
mov
inc
movswl
cmp
cmp
dec
sbb
inc
xor
inc
pop
pop
test
sub
mov
arpl
addl
insb
shr
pop
stos
popa
test
shl
dec
inc
add
pop
and
mov
movsb
mov
enter
cmp
ret
and
mov
imul
adc
sti
in
dec
pop
out
into
cld
dec
fldt
std
mov
mov
insl
je
mov
cmpsb
lock
outsb
call
push
ds
enter
adcl
mov
fisttpll
inc
mov
adc
inc
xor
jp
pop
adc
int3
nop
movsl
bound
dec
jbe
call
mov
iret
add
lods
xchg
std
mov
outsl
ret
aaa
out
xchg
sub
cmp
bound
mov
mov
les
push
xor
push
pop
add
es
outsb
push
mov
inc
ret
jp
push
fs
or
imul
mov
ficomps
int
sub
inc
sub
in
out
xor
es
mov
incl
sub
or
sub
jmp
cmp
lret
cmp
sub
xor
xchg
loop
sub
notb
and
jb
ret
cmc
and
push
xchg
cmp
mov
out
gs
push
push
fsubr
hlt
in
repz
push
or
out
xchg
jo
insl
jp
pop
jbe
cmpsb
dec
jmp
xlat
xlat
pop
pop
cmp
pop
jp
fdivrp
fcmovbe
test
movsb
and
out
repz
daa
std
add
clc
push
subl
adc
clc
xor
jo
sub
ret
mov
out
mov
insl
daa
icebp
jnp
lret
pop
sahf
ds
sti
push
cmpsb
ja
insl
push
movsl
xchg
and
imul
cmc
add
divl
push
lcall
sub
mov
cmp
in
pop
jecxz
int
jl
inc
inc
jl
pop
cmp
popa
adc
cmp
test
js
decb
shl
iret
mov
mov
xchg
xchg
cltd
cltd
dec
adc
pop
lahf
mov
jae
sbb
movsl
add
mov
mov
enter
adc
int
pushf
jecxz
icebp
and
shll
push
push
push
outsb
jb
pop
icebp
iret
dec
lret
xchg
cmpsb
jp
sub
insb
mov
dec
xchg
filds
push
dec
or
add
mov
push
lahf
cmp
aaa
aas
in
ss
xor
mov
outsb
sub
mov
cmp
inc
test
xor
inc
push
cmp
inc
loop
ja
hlt
rorb
or
and
sbb
shll
test
repnz
and
out
or
stos
xchg
divl
mov
outsl
xchg
cld
fstl
lods
cmp
cmp
testl
cmc
ds
xchg
cwtl
mov
call
and
add
inc
xor
movsl
test
jl
pop
sub
jecxz
imul
adc
xlat
cltd
mov
xrelease
ljmp
jle
andl
mov
fsubs
pop
jmp
or
sbb
aam
ret
xchg
pop
cmpl
inc
lret
into
and
mov
pop
jnp
subb
aaa
or
andl
je
lahf
les
jbe
imul
cmpsb
mov
pop
cmpsl
ret
push
or
shrb
push
xchg
gs
mov
sub
sbb
into
dec
cwtl
push
test
mov
push
in
loopne
jno
nop
mov
das
outsl
mov
push
push
add
outsb
push
int3
xlat
pop
sub
fistl
int3
push
fistps
stc
test
add
or
dec
jb
jnp
add
mov
and
icebp
leave
inc
mov
mov
hlt
xchg
cmc
adc
stos
adc
int3
adc
mov
call
sbb
std
imul
and
sub
sarl
aad
lea
cwtl
xchg
sbb
out
mov
jg
pushf
pop
mov
sbb
pop
push
sbb
sub
jae
mov
shlb
mov
mov
inc
arpl
add
push
shl
inc
movsb
rclb
sbb
xchg
out
adc
hlt
cmpb
xor
and
sbb
add
or
jecxz
int
movb
xchg
push
mov
stc
loopne
loop
inc
data16
jns
movsl
mov
sub
mov
hlt
xor
int
push
js
negl
xchg
push
imul
jae
xor
cli
lds
cld
stos
scas
cli
rolb
not
mov
mov
mov
pop
sub
test
idiv
adc
in
loop
loop
dec
lock
pop
fnsave
sbbl
sub
dec
inc
mov
fsubrl
mov
add
or
fcoms
ljmp
mov
jb
and
and
sahf
leave
aad
pop
add
js
test
cmc
xor
inc
out
jns
fidivl
popf
and
stos
or
xchg
fwait
out
repnz
and
xor
mov
jle
add
sbb
mov
rclb
xchg
mov
inc
mov
inc
fdivrp
pusha
jne
dec
fidivl
outsl
ja
out
sub
push
push
pop
and
push
pop
mov
pop
test
add
out
rorb
cs
pusha
sarl
and
gs
sbb
pop
push
adc
cmp
sub
fwait
mov
sub
enter
sub
jle
pop
inc
push
cmpsl
or
daa
insl
and
mov
cmp
adc
cmpb
sub
dec
xor
sarb
inc
stos
es
jno
into
mov
outsb
dec
xchg
push
xor
bound
push
mov
sub
shrl
or
ljmp
mov
stc
lahf
jae
out
lahf
repz
aas
lcall
adc
lods
jno
out
push
or
xchg
aas
movsl
negb
aam
cmp
xlat
fcoms
jne
stos
jp
xchg
dec
das
xchg
mov
loope
movsb
rolb
idivb
sbb
jmp
cmpsl
scas
dec
and
sahf
and
lahf
in
int3
repz
test
out
loop
push
adc
xchg
xchg
jge
icebp
pop
jmp
insl
sahf
aam
int3
or
mov
mov
pop
outsb
aas
mov
insb
mov
mov
popa
fcoml
std
in
decl
sbb
inc
mov
dec
sub
std
pop
and
mov
stos
stc
lods
shrb
mov
sbb
adc
add
nop
sbb
xor
movsl
iret
xor
pop
movsb
int
outsl
lret
outsb
outsl
xorl
jb
pop
sub
pusha
or
fbstp
mov
mov
sub
cltd
stos
xchg
insb
push
mov
iret
mov
mov
push
mov
add
subl
inc
pop
cmpsl
into
jp
dec
les
or
dec
pop
daa
out
popa
jae
pop
jl
sbb
es
divb
addb
xor
std
cmp
and
imul
jmp
inc
fnstenv
xor
dec
adc
mov
iret
jo
sbb
cwtl
sub
mov
mov
pop
jo
das
call
adc
ds
dec
imul
shll
test
jle
mov
jbe
repnz
shl
ret
scas
out
push
aas
jp
push
mov
fwait
cmp
mov
pusha
sub
push
xor
sahf
jne
push
rorl
stos
ja
push
fsubs
sarb
in
adc
inc
dec
inc
and
sti
leave
or
out
add
shl
mov
xchg
fucom
cmp
gs
repz
movsb
jge
xor
pop
jnp
cmc
ror
sbb
test
pop
andl
sub
cmp
mov
leave
adc
fisubrs
pop
test
lea
inc
adc
adcb
mov
xchg
test
dec
mov
inc
test
mov
jmp
push
pusha
ror
push
jo
jl
daa
out
outsb
xlat
cmpsb
icebp
popf
inc
jno
sub
test
add
mov
imul
sub
xor
push
pop
dec
mov
mov
pop
cmpl
adc
add
enter
rcll
insl
pop
dec
scas
sub
push
xchg
adc
xchg
add
shr
jnp
ret
pop
jns
pop
shrl
icebp
pop
xor
scas
hlt
mov
cmpsl
test
gs
test
ja
mov
xchg
push
dec
int
addr16
aaa
iret
out
imul
sbb
call
enter
iret
push
je
ud0
and
or
jp
sti
cs
xchg
stc
clc
test
adc
sti
jno
sub
mov
mov
mov
fdiv
push
into
fwait
sbb
lea
pop
or
sub
and
jmp
mov
lock
inc
sti
popf
push
pusha
adc
pop
addr16
out
mov
stos
mov
mov
imul
je
ja
pop
push
jle
fadd
adc
cltd
mov
dec
pop
push
cld
in
leave
int3
jbe
mov
mov
xchg
fsubr
out
negl
movsb
adc
js
and
and
xchg
sahf
setb
movsb
jmp
fstpt
cli
or
inc
fistpll
push
dec
leave
pop
mov
cmp
adc
and
in
repz
jmp
repz
xchg
xchg
adc
gs
imul
mov
mov
aaa
sbb
aaa
dec
jnp
loop
sbb
push
fwait
int3
shrb
neg
fsin
sbbb
mov
cmpsl
adc
xchg
pop
xor
xorl
xor
dec
into
and
data16
jle
sub
insl
lock
imul
popa
in
fisubrs
push
adc
and
jnp
data16
lock
pop
cld
push
xchg
aas
dec
test
lcall
sub
xor
mov
fdivs
shrb
insb
sti
dec
jns
mov
cmp
xchg
pop
popf
loopne
stc
mov
xchg
xchg
or
pop
mov
scas
fwait
ret
sti
loopne
and
xchg
dec
mov
add
and
out
add
ficoms
clc
imul
das
mov
stc
por
shl
cmp
dec
cmpb
in
mov
mov
jmp
outsl
xor
pop
mov
or
lock
test
xlat
push
and
mov
ljmp
mov
pop
in
pop
jmp
bound
sbb
popa
jae
lret
outsl
call
xor
test
clc
xor
sub
push
push
cs
adc
cmp
cmp
pop
sub
out
push
loopne
rcl
sub
xchg
daa
pop
mov
in
inc
sarl
sbb
push
lea
cwtl
cwtl
out
inc
xor
mov
sbb
icebp
ret
pop
adc
push
dec
inc
repz
push
sub
jbe
cltd
sbb
bound
inc
xchg
enter
mov
inc
jle
mov
mov
mov
mov
cli
xor
rcrl
arpl
sar
pop
shl
jbe
out
adc
mov
lods
hlt
arpl
inc
fcmovne
inc
pop
mov
out
fldt
mov
pop
fs
sub
inc
dec
insb
test
bound
mov
inc
insl
mov
ljmp
mov
fiadds
xor
xchg
lahf
add
imul
sbb
dec
jg
inc
cmp
xlat
adc
xor
push
and
fistl
in
lahf
test
inc
sbbb
lods
push
sub
popf
sub
xor
movsb
aaa
lods
mov
jl
jmp
xor
pop
mov
sarl
xchg
loope
push
mov
ss
fcompl
mov
mov
xor
dec
and
pop
std
inc
sub
int3
dec
push
test
lret
out
sahf
lock
je
push
push
ja
jb
mov
jp
aas
jle
iret
lret
mov
fisubrl
jbe
cmp
mov
aas
sub
mov
push
ret
push
pop
push
rclb
rcll
pop
adc
mov
cmp
pop
in
repz
add
pop
jbe
and
aam
addr16
mov
in
loop
lods
cmp
jo
repz
iret
mov
sbb
sub
and
clc
pop
or
icebp
push
imul
add
adc
xor
mov
jp
je
mov
xor
loopne
mov
int3
movsl
xchg
test
xchg
sbb
scas
sbb
mov
shlb
shlb
bound
aad
sarl
jg
inc
jle
fcompl
xchg
jb
adc
and
bnd
js
xchg
inc
outsb
pop
cmp
jns
and
and
int3
ds
cwtl
inc
shr
jb
add
cwtl
rcr
xor
scas
sub
sarl
sbb
out
movsb
pop
test
pop
in
mov
scas
pop
and
adc
lret
mov
push
pop
push
mov
outsl
push
and
aaa
mov
in
add
mov
call
out
xchg
mov
fmull
cmp
adc
add
mov
lret
mov
movsb
adc
jmp
repz
pusha
sbb
push
je
xlat
popf
leave
movsb
xorl
pop
dec
popf
jne
cwtl
xchg
cmp
push
inc
adc
xor
cmp
daa
add
cmp
mov
xor
sbb
addr16
lods
jecxz
mov
mov
inc
xor
stc
out
cmpsl
mov
test
aas
mov
paddd
shrl
push
lock
out
lcall
push
lcall
adc
mov
test
in
push
add
inc
out
adc
mov
rolb
or
lock
pop
pop
popa
ds
popl
or
out
ds
adc
xchg
pop
adc
xor
adc
shrl
inc
leave
mov
and
jns
adc
sbb
sbb
out
mov
and
arpl
lcall
and
mov
scas
cmp
adc
insl
lret
cmc
xor
dec
clc
popf
clc
jecxz
sub
notl
mov
mov
adc
jo
divb
into
repz
or
sub
movsb
lds
xlat
cmpsb
mov
lods
xlat
lcall
stc
jmp
fstp
cld
sub
daa
aas
mov
or
adc
bnd
fwait
and
outsb
imull
das
insl
mov
negb
pop
mov
xchg
lret
adc
sbb
call
and
mov
cs
xchg
dec
out
ljmp
xor
adc
mov
xor
sbb
inc
das
push
in
nop
sub
mov
pop
addr16
cld
mov
addr16
js
sub
call
addr16
dec
mov
cmp
cli
leave
push
dec
test
popa
roll
fwait
fs
xor
cwtl
scas
add
into
aaa
mov
mov
adc
dec
mov
aas
shll
xchg
mov
scas
and
jp
fistl
pushf
stc
xlat
push
fmulp
or
xor
push
loope,pt
add
bound
inc
outsl
fwait
jmp
in
sbb
imul
int3
lea
addr16
adc
loope
insb
clc
jno
inc
in
jle
cmpl
sbb
clc
fistps
iret
mov
sbb
call
rep
dec
cwtl
in
inc
inc
stos
mov
nop
lret
or
dec
push
shl
mov
lahf
mov
ss
mov
out
mov
test
push
cmp
pop
or
sbb
mov
imul
or
and
loope
mov
xor
adc
cmp
pop
les
pop
out
sbb
test
jbe
inc
pop
pop
lds
ffree
fnsave
xchg
outsb
sbb
nop
adc
ret
imul
fs
adc
add
sub
outsb
lods
pop
rorb
iret
add
and
mov
ret
in
fwait
jg
sub
movnti
adc
push
test
mov
mov
dec
int
test
mov
std
lahf
clc
popf
mov
out
andl
hlt
in
test
decl
mov
fsubrl
and
mov
std
push
shrb
leave
aam
xor
ret
jbe
scas
or
loope
outsl
movsl
add
inc
sti
push
imul
lret
mov
faddl
mov
mov
add
cmp
cmp
push
pop
mov
and
and
inc
out
jle
out
jo
adc
mov
sub
jne
es
xor
dec
sarb
xchg
dec
inc
pop
in
data16
int
jno
mov
mov
or
cmpsb
icebp
repz
push
mov
pop
popf
jb
in
push
iret
movsl
jle
sbb
cmpsb
inc
push
insb
pop
js
xchg
adc
iret
inc
and
adc
in
sub
cmp
jecxz
cwtl
roll
pop
jp
int
imul
in
sahf
mov
pusha
data16
inc
call
in
pop
and
inc
aaa
sub
mov
in
mov
ret
jmp
scas
lods
mov
xchg
scas
std
xor
es
inc
bound
jno
sub
jmp
test
lret
sub
mov
sub
sub
int
flds
mov
testl
adc
pusha
and
inc
mov
sub
push
dec
hlt
rorb
mov
imul
mov
rcll
into
and
cmp
mov
pop
mov
out
movsl
shll
dec
jp
enter
push
vrsqrtps
andb
sub
xchg
repnz
push
call
jmp
in
inc
les
movsl
jmp
scas
add
sti
cld
je
shll
push
add
lods
in
dec
imulb
fdivr
push
jo
mov
jp
insb
cmpl
test
cmpb
dec
mov
fstl
outsl
push
nop
cmp
mov
call
pusha
xor
fidivl
mov
sarb
inc
or
js
xorb
cltd
pop
cmpsb
daa
dec
cmp
andl
push
and
mov
jae
lret
sbb
pop
push
xchg
lods
popf
mov
adc
pop
stc
sub
mov
fnstsw
test
lods
and
in
pop
adc
icebp
ret
aam
and
or
push
xchg
mov
pushf
imul
push
mov
aad
stos
or
mov
sub
aaa
cli
add
push
data16
loop
or
cmp
dec
push
call
xchg
mov
out
ja
dec
dec
push
jae,pn
lahf
push
cmp
movl
enter
push
adc
mov
aas
leave
dec
stos
push
xchg
or
stc
daa
icebp
push
clc
int3
dec
lret
fmuls
cmp
cmp
mov
mov
ret
je
lahf
push
pop
mov
add
stc
pop
mov
jecxz
gs
lahf
mul
sub
mov
out
fabs
in
push
fsubr
pop
mov
mov
mov
and
cmp
je
out
inc
and
add
inc
xchg
inc
mov
in
cmpsl
test
arpl
loop
inc
leave
mov
dec
mov
pop
pop
ja
mov
pop
push
mov
jbe
rorl
pop
mov
aad
and
and
mov
mov
lret
adc
xchg
je
sub
das
jp
push
addr16
add
add
xchg
mov
cvtps2pi
pop
pop
test
rcrb
mov
sub
sub
and
mov
test
imul
pusha
stos
add
cmp
lods
jno
imul
inc
and
xor
jg
mov
test
adc
jno
xchg
popf
push
push
jae
jo
xor
test
insb
jns
inc
fildll
cld
hlt
jbe
mov
js
mov
cmp
cmp
sahf
aam
mov
adc
imul
shlb
aas
cmpb
sbb
jg
jp
mov
bound
sub
das
dec
sti
fstpl
leave
fimuls
jp
fidivrs
sub
jb
jb
mov
xor
cmp
jns
outsb
es
dec
loop
int
pop
leave
inc
adcl
sbb
sbb
pop
add
std
cwtl
imul
xchg
xor
popa
xchg
dec
inc
inc
jg
pop
jle
and
xor
mov
das
pop
xchg
adcb
outsl
xchg
movsb
aas
iret
mov
dec
push
inc
icebp
les
inc
jae
lds
nop
mov
movsl
fcom
mov
push
adc
and
rcll
fwait
pop
sbb
pop
lahf
inc
pop
js
fwait
push
int
pop
frndint
jmp
cltd
fwait
test
repnz
lret
dec
sbb
aaa
fbstp
push
stos
in
xor
enter
pop
jmp
mov
or
pushf
fidivs
pop
out
add
bound
jle
adc
push
popa
fs
pop
or
push
fisubrs
inc
push
movsb
jbe
test
xor
je
pusha
xor
test
xor
mov
dec
rcrb
mov
jmp
push
push
call
pop
fisttpll
bound
mov
xchg
daa
dec
jo
xchg
lods
push
int
movsb
lret
and
ret
and
cwtl
cmp
inc
and
pop
test
ja
aad
push
mov
push
pop
pop
sbb
int
add
and
push
gs
cmp
mov
fwait
jecxz
ficompl
scas
inc
mov
mov
mov
repnz
sbb
pop
mov
rcrb
mov
xchg
dec
test
cmp
add
call
les
clc
and
fildl
clc
mov
mov
xor
xchg
int
fildll
lea
pop
sub
xorl
mov
es
push
ja
add
jp
pushf
inc
inc
sarb
mov
sub
dec
push
and
mov
cltd
jg
pop
or
lret
cwtl
frstor
adc
dec
pushl
and
cmp
jne
or
idivl
shll
fisttpl
xchg
jae
jp
sahf
scas
add
jno
outsb
push
xchg
into
fdivl
pop
push
and
xor
jnp
inc
xor
fsub
dec
sarb
xorb
or
lcall
and
pop
pushl
out
push
cmc
je
jecxz
xor
and
out
pop
mov
dec
cmp
xor
push
stc
add
lret
fcmovb
pop
aaa
insb
cmp
cli
ror
mov
mov
push
pusha
or
idivl
dec
jle
imul
test
nop
add
xor
add
and
push
pop
jb
enter
fmuls
ds
das
lods
scas
hlt
cmpsl
cld
jno
inc
lock
xor
xor
and
mov
add
push
or
jl
xchg
call
inc
adc
push
and
push
jge
mov
jns
pop
mov
popa
aaa
inc
sub
ret
cmp
scas
mov
mov
scas
aam
rorl
cld
pop
mov
cltd
or
lods
fiadds
inc
je
push
rcrb
int3
adc
out
xchg
out
inc
pop
or
fwait
inc
je
push
es
lea
mov
jl,pn
sahf
adc
add
pop
mov
mov
sbb
pop
fdivs
jmp
jmp
push
cmp
and
push
jno
cmpsl
or
out
pop
inc
es
xchg
pop
outsl
and
dec
jne
fsubs
lods
add
imul
pusha
addr16
mov
mov
popa
shrl
outsl
fs
pushf
repnz
add
sub
add
arpl
fisubrl
sbb
cmpsb
into
xorl
mov
or
test
push
mov
cmc
sbbl
add
cmp
pop
mov
or
inc
ds
adc
bound
add
jmp
cmp
imul
movsb
mov
cli
test
pop
lock
dec
jge
and
and
les
or
icebp
fisubs
cmpb
fistpll
mov
fcmovu
push
and
shlb
sub
pop
pop
sub
sbbb
adc
mov
mov
rcrl
lods
dec
scas
dec
out
jp
xor
sbb
sub
ljmp
jg
stc
test
add
sbb
fsubp
adc
bound
xor
decl
mov
mov
popl
mov
test
aas
inc
push
inc
fldenv
dec
sbb
xchg
out
sub
fcom
xchg
sahf
jp
dec
push
lea
testl
outsl
andl
clc
cmc
and
subl
cmpsl
int
mov
inc
cmp
cmpsl
data16
push
testl
jnp
pop
mov
push
mov
gs
movsb
popa
loope
xchg
pop
mov
dec
fwait
add
stos
jle
mov
lock
sub
jnp
mov
xchg
fsubr
jns
addr16
jle
jne
in
mov
pusha
aam
orb
daa
inc
push
mov
addr16
and
shl
mov
sahf
mov
push
fisubs
cmpsl
add
adc
inc
scas
mov
pop
sub
xor
inc
fildll
mov
sub
mov
or
sbb
push
ficoml
or
sbb
inc
sub
outsb
fsubrl
fsubrs
adc
pslld
int
pusha
or
lods
push
mov
adc
aas
mov
push
out
mov
jnp
mov
hlt
lcall
outsb
cmp
faddl
push
push
and
es
inc
cmp
mov
out
aaa
leave
push
push
ljmp
adc
ja
rcr
push
in
adc
sti
call
xor
jae
data16
cmc
push
pop
loope
xlat
mul
xor
push
mov
bound
pop
bound
clc
test
jb
pop
adc
mov
xchg
rdtsc
arpl
cmp
sbb
xchg
xchg
sahf
inc
jl
add
clc
idivl
insb
scas
loop
mov
inc
imul
mov
leave
inc
inc
push
push
dec
test
pop
out
loope
div
jno
fnsave
jb
imul
push
rclb
rorb
stc
loope
outsl
mov
mov
pop
cmpb
std
xor
add
ljmp
dec
inc
push
js
xor
mov
xlat
outsb
mov
cmp
sarl
test
mov
jne
sti
sub
lods
ds
xchg
sub
dec
outsl
in
rcr
mov
inc
pop
test
inc
into
fcmovne
mov
jno
icebp
imul
pop
mov
loop
pop
mov
aam
test
or
or
lret
cmpsl
cmpsl
pop
aad
js
in
mov
push
inc
mov
cs
mov
notb
and
into
mov
test
lret
roll
jge
push
cmp
aad
cmpsb
iret
mov
idivl
imul
repnz
cmp
inc
push
push
popf
pop
jns
jns
mov
int
enterw
js
jg
jge
mov
or
push
fwait
daa
xchg
shll
js
mov
or
jge
cmp
cld
add
and
mov
and
inc
pop
jbe
bound
inc
push
dec
xchg
repz
fwait
imul
push
out
cmp
fs
aaa
stos
sub
sbb
mov
rcrl
les
mov
cmp
jecxz
inc
push
rolb
insl
js
or
sub
in
sti
xchg
sbb
bound
ret
sti
mov
pop
cmp
push
ds
mov
dec
out
or
loope
test
gs
cmp
xchg
shll
xor
js
imul
cld
arpl
or
rorl
adc
push
ja
stc
jne
push
negl
sub
ss
in
inc
adc
movsl
push
xlat
mov
jo
sahf
cli
cmp
jge
mov
xor
mov
jb
add
sahf
shll
sub
fadds
inc
sbb
je
dec
and
insl
das
daa
ljmp
fucom
cli
fiadds
pop
je
mov
jne
pop
daa
out
mov
clc
jae
and
or
add
in
and
sub
nop
jle
cmp
mov
lcall
shrl
lods
push
add
pop
dec
dec
aam
mov
fsubs
aad
push
push
lcall
cmp
dec
dec
xchg
int
dec
pop
insb
clc
xor
cmp
aam
jl
fimull
xchg
xor
cwtl
push
and
push
inc
cmpb
jmp
mov
fdivs
push
je
imul
fidivl
push
xlat
xchg
loopne
jb
add
gs
inc
mov
pushf
out
add
cmp
inc
test
mov
shrl
pop
jle
xchg
out
adc
and
mov
call
insl
inc
shlb
and
outsb
aam
nop
arpl
mov
dec
adc
adcb
lock
lea
loop
push
lods
jae
rorl
sbb
jne
jecxz
rorb
addr16
stc
jbe
pop
in
adc
adc
mov
push
nop
adc
xchg
jg
xchg
call
or
jo
iret
fwait
cmp
out
sbb
popf
inc
stos
or
or
jecxz
insl
mov
sub
adc
mov
sbb
int
stc
sbb
shrb
pop
or
sbb
inc
into
mov
arpl
jmp
imull
sub
mov
jo
mov
add
mov
loop
dec
inc
loope
sub
negl
rcr
adc
mov
adc
mov
push
push
mov
adc
or
push
jmp
dec
mov
and
in
outsb
mov
cwtl
fidivs
test
in
outsb
jne
das
addb
xchg
or
movb
sub
je
dec
hlt
stc
mov
inc
jnp
lea
inc
add
push
test
pop
pushf
xchg
xchg
sub
into
std
out
clc
into
and
cmp
lods
lret
mov
lods
push
jo
int3
mov
mov
push
fldenv
jbe
adc
inc
in
sub
jl
sbb
js
out
in
jmp
push
mov
mov
push
push
notl
std
nop
mov
arpl
das
xchg
rcr
int
cmp
mov
shr
mov
aaa
inc
data16
cmp
jle
ds
andb
js
shrl
fsubrl
cmc
inc
mov
pop
xchg
mov
stc
inc
test
arpl
aad
push
adc
jae
jo
sbb
rol
jns
pop
xor
add
loopne
pop
scas
push
xchg
pop
orl
std
or
push
out
addr16
pop
xchg
imul
and
call
in
movsb
test
xchg
aaa
cmpsl
imul
dec
ret
mov
gs
jmp
sarb
filds
aas
sbb
fidivl
push
xor
jle
lds
and
cmp
mov
push
pop
push
cmpsl
push
fcompl
test
cmp
dec
cmp
sarl
jmp
divl
int3
aaa
imul
inc
sbb
das
sbb
pop
mov
gs
mov
cmp
adc
icebp
ficomps
add
and
inc
pop
mov
dec
or
dec
mov
adc
je
retw
xchg
mov
cmp
pop
aad
mov
fistps
ljmp
addl
sbb
ficoms
adc
dec
addr16
lds
gs
repnz
sbb
dec
mov
dec
jg
outsb
imul
ficoml
pop
iret
cmp
and
and
xchg
mov
repnz
enter
inc
lds
mov
lret
test
cmp
jb
sub
cmc
xor
pop
xor
out
xor
fldenv
dec
push
outsb
add
lods
psrld
data16
dec
jo
xchg
enter
jbe
repnz
jnp
icebp
andl
shll
push
sub
mov
movsb
and
mov
rol
addb
out
or
xchg
dec
lds
dec
mov
cs
repz
cpuid
sbb
ss
fisubrs
int3
sub
xchg
push
jne
mov
cmp
inc
pop
sub
xchg
sub
test
fsubrl
jb
cltd
xlat
cmc
sbb
pop
filds
add
sbb
or
push
mov
cltd
aam
xor
xchg
adc
jmp
mov
sub
cmp
cmpsb
sub
loopne
sbb
xor
loop
lahf
dec
dec
test
mov
or
test
jb
mov
call
es
mov
add
icebp
aad
iret
push
push
sub
out
push
out
or
insb
ljmp
adc
push
scas
dec
jg
popl
dec
push
pop
rcrl
ljmp
pop
xor
dec
jo
in
pop
cld
aam
pop
pop
repz
les
pop
mov
pop
xchg
jecxz
jae
sbbb
lret
in
dec
cmp
shlb
mov
push
cld
cmpl
adc
nopl
cmp
enter
mov
jns
or
leave
add
jae
xorl
lds
in
mov
les
ret
lret
mov
add
adc
dec
inc
jnp
pop
push
in
mov
or
mov
push
cmp
ljmp
les
pop
sarl
in
psubusw
inc
mov
push
out
mov
and
jg
push
and
sbb
and
insb
or
pop
repnz
mov
xor
lahf
ds
arpl
jge
into
jle
or
gs
orl
push
arpl
lds
aam
sahf
adc
addb
out
jecxz
and
cld
push
push
add
out
inc
cmpsb
sub
xchg
js
and
adc
aaa
shll
sub
or
jp
shlb
cmp
aad
and
and
pushf
xor
cs
out
pop
sbb
sub
rol
fistpll
lock
sbb
jg
sbb
repz
test
int
push
inc
mov
cli
add
mov
push
xlat
xor
xchg
inc
divl
jmp
sarl
lret
cmpsl
sbb
cmp
inc
frstor
xchg
push
jle
dec
in
sub
aam
cmpsl
leave
cmovo
leave
movsb
mov
cli
mov
stos
stc
pusha
icebp
popa
cmp
cmpsb
inc
ret
pop
and
mov
add
fs
sbb
popf
ret
push
cwtl
cmp
xchg
nop
aam
dec
push
sub
pop
divl
and
movsl
icebp
push
int3
mov
hlt
pop
push
xor
insb
xchg
test
mov
popl
mov
out
jmp
loopne
fldl
dec
mov
mov
movsb
insb
insl
adc
sub
and
mov
xlat
imul
int
insl
sbb
mov
sahf
mov
insb
jns
xchg
xchg
aaa
lea
pop
ficompl
mov
std
rcl
aad
cmp
cmp
into
pop
popf
dec
and
xor
adc
out
repnz
mov
xchg
imul
adc
or
int
lods
push
xchg
movsl
enter
test
add
enter
gs
mov
xchg
xor
xchg
mov
mov
add
testl
and
scas
sub
sub
mov
adc
icebp
inc
sub
jns
js
cmpb
scas
or
inc
cmp
cmp
mov
push
test
jmp
or
popa
push
jns
stos
mov
addr16
sbb
mov
sub
mov
sbb
jmp
imulb
test
push
hlt
push
lret
or
mov
mov
mov
push
and
in
mov
add
test
negl
xchg
mov
test
xor
scas
lret
mov
fcmove
jge
and
lods
sbb
jle
xchg
cld
adc
stc
pushf
jno
cmp
inc
test
mov
fidivrl
sub
dec
and
inc
pop
xchg
repz
add
jecxz
add
or
data16
xor
cmpsb
ret
mov
stos
ja
in
mov
ffree
xchg
aam
inc
data16
repnz
ret
cmpsb
add
or
aad
mov
inc
pop
call
aas
ljmp
add
sti
add
sarb
dec
xlat
sti
mov
addr16
pushf
lea
movsl
jbe
jae
clc
adc
lds
mov
push
aas
data16
lds
mov
cmp
lock
std
or
scas
enter
xchg
xchg
add
xlat
cs
pop
movsb
cmp
mov
add
movsl
push
xchg
inc
out
mov
sbb
pop
xchg
int3
push
inc
push
jb
mov
sbb
jecxz
or
cmp
rcrb
cli
fwait
xor
clc
clc
jbe
sbb
movsb
das
pop
mov
in
cmpsb
mov
jecxz
aad
lcall
push
mov
push
jo
push
push
movsb
shll
mov
and
punpckhbw
frstor
mov
xchg
loopne
dec
incb
int3
cmp
ja
bound
adc
leave
cs
push
lods
mov
sbb
or
imul
test
add
xchg
inc
jbe
stos
and
hlt
stc
lahf
xchg
push
or
std
xchg
and
jp
jp
dec
das
xor
sub
repnz
xor
insl
xchg
out
mov
aas
jns
push
jns
xlat
or
mov
mov
fsubrs
jo
shlb
fcos
cmp
std
ret
insl
jg
or
pop
les
add
cmp
add
es
cmc
aas
loopne
dec
gs
fsts
xchg
xchg
mov
pop
jge
add
mov
xchg
lahf
and
sti
add
dec
testb
xor
fstp
pop
call
in
push
cmp
addr16
out
shl
aam
cli
or
sub
nop
pusha
fstl
dec
dec
sarb
fwait
cli
xchg
push
shlb
and
fldcw
adc
add
stc
pop
js
repnz
mov
fucomp
shlb
and
out
push
fs
inc
cmp
push
sub
xchg
insb
sub
and
mov
push
xchg
xchg
out
enter
and
mov
dec
nop
jmp
out
or
and
out
pop
xchg
xchg
xchg
imull
hlt
aam
in
xchg
sahf
cmp
mov
jne
repz
push
dec
gs
icebp
lock
jns
adc
add
xlat
mov
mov
ds
decl
das
les
lods
or
ret
ret
bound
cltd
mov
sbbb
imul
xchg
and
ss
push
fsubrl
adc
sbb
push
xchg
dec
mov
cmpsl
nop
aaa
or
adc
icebp
jge
add
loope
std
pop
cmpsl
out
sti
dec
pop
cmp
aaa
jae
mov
jge
mov
jnp
xchg
mov
orb
mov
pop
ss
icebp
mov
mov
cmp
shrl
leave
out
sahf
daa
xchg
lods
cmp
mov
repz
sub
lret
sub
mov
hlt
add
sub
repnz
mov
test
mov
mov
dec
les
testl
popa
std
in
mov
fadds
stc
mov
test
mov
inc
jl
cltd
mov
cmp
jb
pusha
jbe
dec
pop
mov
psubw
lahf
shlb
out
sub
test
movsb
inc
push
push
stos
data16
cwtl
shrb
stos
or
mov
in
pop
fbld
mov
fsubrs
lea
das
mov
enter
call
xchg
or
or
add
xchg
dec
pushf
push
xchg
jmp
shl
insb
rol
in
pop
push
fcompl
xor
ds
movsl
icebp
arpl
mov
test
xchg
jg
dec
jg
inc
cld
sbb
pusha
or
pushf
fs
jecxz
cmc
lods
jae
sbb
inc
mov
jb
push
push
sbb
or
nop
push
lcall
jbe
pushf
jae
xchg
xor
xchg
rolb
mov
sahf
mov
xor
je
xchg
mov
loop
cli
and
mov
cltd
pop
insb
xlat
and
std
cmp
fnstcw
lret
adc
push
arpl
pop
jge
push
jle
repz
and
lock
loopne
pop
out
mov
and
push
pop
and
push
dec
std
add
addb
dec
repnz
sahf
clc
insb
adc
mov
outsb
out
mov
or
add
lahf
imul
xchg
aaa
mov
cld
xchg
cmpsb
jge
loopne
mov
xor
divb
mov
adc
cmp
add
dec
bound
lock
lods
or
push
popf
inc
popa
mov
and
cs
jge
push
cmpsl
es
outsl
enter
pushf
pop
test
dec
mov
loopne
lea
cmpsb
scas
mov
lcall
cmpb
mov
inc
pop
or
mov
fwait
pop
mov
test
push
or
fildl
into
adc
cmc
in
inc
or
ds
dec
ds
and
xchg
mov
out
js
loop
imul
dec
mov
or
cli
in
in
call
out
xchg
push
ss
or
clc
add
bound
sbb
and
scas
repz
xchg
das
xor
sti
xchg
or
in
fs
andl
das
aad
xor
add
fwait
mov
adc
mov
mov
and
pop
in
jb
insb
push
aaa
mov
add
pop
cld
lahf
sub
mov
fsubrl
rclb
dec
push
jnp
push
arpl
fnstcw
out
ja
and
pop
jbe
imul
insb
mov
sbb
mov
add
adc
adc
test
inc
jle
lahf
adc
lret
mov
and
movhps
mov
xchg
mov
mov
std
sbb
or
add
repnz
adc
mov
std
repnz
mov
mov
movsb
mov
mov
or
sahf
and
mov
dec
xchg
or
adc
push
cmc
testb
cld
nop
test
clc
bound
jno
jmp
arpl
jb
jns
pop
in
cmp
sub
cld
sbb
and
cmp
loop
jo
fdivrl
faddl
push
jns
pop
jecxz
jae
imul
fwait
or
leave
iret
popf
bound
shl
xchg
sbbb
mov
dec
pushf
push
jge
xor
mov
or
in
repz
xlat
xchg
dec
loope
cmp
fs
dec
jmp
shlb
aas
xlat
sahf
ljmp
sub
fistpll
ja
shl
fs
add
push
out
xor
xchg
in
mov
and
cmp
cltd
insb
mov
mov
pop
xor
in
and
inc
mov
popf
notl
adc
dec
mov
add
push
push
sub
dec
gs
fdivr
aad
int3
jb
les
fdivrl
or
rcl
ret
sti
xchg
jp
xchg
shl
pop
and
push
js
adc
jb
ret
or
xor
jge
imul
inc
sub
pop
imul
dec
and
jl
shl
pop
or
test
xorl
sub
pop
jbe
add
inc
gs
push
ret
iret
sub
insl
pop
xchg
add
and
ss
scas
jnp
nop
mov
pop
add
jmp
cmpsb
call
frstor
aaa
pusha
mov
mov
dec
mov
xchg
push
aaa
inc
and
jmp
pop
or
fs
in
pusha
cs
sub
push
or
or
or
mov
mov
dec
sub
stc
mov
nop
sbbb
xchg
ret
sub
push
mov
fwait
idivb
popa
pop
lea
aas
in
in
sub
dec
aaa
out
scas
cmp
incb
pop
xchg
fsubrp
jo
sbb
data16
ret
movsl
sbb
jp
bound
jb
movsl
jb
mov
out
ds
adc
push
pusha
mov
lahf
xchg
jecxz
add
cmp
cmp
jae
aas
push
xchg
xchg
or
fwait
inc
int
xchg
mov
aas
sub
push
arpl
xor
lds
andb
scas
inc
lock
cmp
popa
inc
cmp
out
ljmp
outsl
xchg
out
lea
jg
add
mov
imul
sub
cmp
xor
xchg
mov
jnp
pop
or
or
ds
fsubp
jmp
push
movq
testl
aas
lahf
mov
fcmovnbe
out
xchg
fbstp
mov
test
int
sbb
mov
ljmp
jno
jmp
mov
ret
sbbl
cmp
mov
leave
inc
adcl
fs
aam
leave
sar
jl
pop
xchg
rcr
sbb
loopne
sbb
cmp
jae
pop
arpl
movsl
call
and
mov
pop
mov
call
mov
aam
xor
shrb
pop
push
gs
push
sbb
lcall
lds
dec
cltd
cmp
push
sbb
sbb
imull
dec
movsl
nop
shr
outsl
add
pop
test
cwtl
js
into
mov
hlt
hlt
aas
cmp
adc
mov
jbe
test
std
fldl
dec
pop
push
push
add
add
adc
push
mov
int
mov
sub
fnstenv
and
xchg
mov
setle
in
and
mov
sbb
xor
xchg
mov
sarb
arpl
movsb
cwtl
cmp
xlat
shl
dec
fisttpll
ss
xor
addr16
mov
cltd
leave
cmp
test
arpl
jnp
fwait
jl
pop
or
imul
sub
fsts
in
jle
mov
xchg
mov
and
gs
leave
hlt
addr16
jl
in
outsb
pop
jle
loope
aad
dec
push
ficoms
rcrb
rclb
sbb
movsb
mov
sbb
inc
lahf
cmp
xchg
cmp
mov
les
movsb
shll
adc
pop
int
sbb
cmc
cmpsl
rcr
pop
adc
dec
test
push
jmp
mov
xchg
push
inc
mov
adc
iret
pop
popa
dec
lods
add
and
lods
mov
adc
adc
movsb
pusha
xchg
jle
cld
aas
fnstenv
rcll
ds
cld
loop
cmpsb
mov
arpl
xor
cmc
movsb
sbb
push
xchg
mov
mov
sbb
jp
mov
fldenv
scas
and
sbb
xchg
xchg
add
movsl
arpl
and
js
dec
xchg
shlb
jl
out
fsubrl
add
imul
push
loop
hlt
xchg
push
xchg
sub
mov
push
and
out
push
rolb
inc
insb
xor
cmp
xchg
leave
mov
dec
lahf
pop
cltd
fwait
xchg
jns
adc
stos
jp
in
repnz
lea
pop
mov
push
cmp
bound
rclb
sbb
dec
pop
mov
and
push
xchg
rcrb
xor
mov
inc
leave
sub
jge
lret
in
test
xchg
sub
aam
jp
push
inc
mov
xchg
repz
xchg
dec
pop
push
lods
leave
nop
mov
adc
sub
push
pop
push
movsb
xor
es
mov
sbb
les
call
xorl
jmp
sub
xor
mov
nop
mov
xchg
add
push
int3
jnp
out
les
xchg
jne
stos
inc
inc
shr
mov
add
mov
fsts
ja
cmp
movsl
mov
mov
and
inc
fs
push
jmp
jge
lret
mov
fwait
scas
add
push
jmp
test
xchg
mov
lcall
add
jg
std
repz
mov
rcrb
cmpsl
loope
or
pop
dec
jmp
sbbb
and
sub
jp
jmp
push
xchg
sub
adc
mov
test
xchg
incw
lds
push
push
loop
push
pop
cmp
and
push
shr
add
data16
lock
repnz
fimull
push
pop
lods
sbb
push
adc
adc
testb
mov
insb
call
xchg
pop
lcall
test
cs
loopne
sbb
roll
push
shlb
pop
bound
paddusw
add
call
in
inc
and
push
imul
add
clc
std
bound
push
mov
mov
push
ret
insb
fcmovnu
sarl
adc
and
push
push
inc
pop
dec
jb
fldenv
lods
sub
leave
in
test
push
leave
je
adc
mov
cltd
dec
push
das
test
push
xor
outsl
push
scas
inc
mov
stos
pop
push
sub
out
fidivrs
cmp
insl
or
in
sti
add
leave
jp
lcall
sbb
insb
pop
xchg
pop
dec
sub
mov
aad
insb
cmpsb
fsts
xchg
push
sbb
pop
jecxz
or
rcll
and
add
jno
pop
pop
pop
adc
sub
mov
xchg
scas
xor
jno
xorps
dec
daa
xchg
inc
lds
data16
fidivrs
xor
orl
push
inc
pop
ret
vcmpgtsd
mov
mov
adcb
sub
push
inc
loope
xor
xchg
insb
movsb
pop
jno
mov
lahf
jne
sahf
ds
pop
pop
lods
sub
mov
mov
inc
pop
in
xor
rcr
sarb
divl
cmc
cltd
xchg
or
mov
sbb
sbb
mov
mov
adc
fmuls
xchg
push
jmp
adcl
push
mov
lcall
mov
cmp
in
add
jb
es
scas
dec
test
mov
mov
stos
cmp
stc
pop
popa
movb
shl
loop
jns
and
inc
add
push
lret
lock
cs
push
sahf
mov
add
jo
add
mov
adc
dec
push
rorl
jne
fwait
mov
jmpw
or
xchg
dec
mov
or
xchg
fwait
es
addr16
mov
adc
cmp
fmuls
jle
pop
jne
pop
arpl
call
inc
mov
std
arpl
push
mov
push
xchg
ds
mov
loopne
adc
dec
int
pop
adc
jno
pop
in
mov
jne
in
push
xlat
ret
and
out
ret
cmovg
clts
mov
pop
aad
shrb
addr16
jnp
fisubrs
hlt
iret
push
les
and
out
or
lahf
add
lds
ficoml
and
stc
scas
repz
adc
hlt
adc
ror
xchg
cmpsb
jg
testl
jbe
clc
cli
sub
dec
mov
outsl
jmp
shlb
icebp
add
aad
rep
jge
adc
movsb
adc
lods
fwait
pop
pop
dec
pop
mov
adc
rcll
or
jg
mov
cltd
xlat
xchg
movsb
or
inc
in
pop
jmp
push
mov
inc
or
cmp
dec
jmp
sarb
and
lahf
ss
inc
fsubrs
jecxz
leave
leave
sbb
call
sbb
add
int3
dec
mov
cmc
fimuls
pop
push
jle
nop
inc
aad
sbb
popl
jno
inc
lods
push
icebp
adc
in
pop
ljmp
pop
call
in
push
push
out
and
sub
fwait
scas
addb
pop
and
inc
xchg
pop
std
adc
dec
push
aas
mov
std
aam
ss
iret
adc
sarb
sbbl
mov
fisubl
push
arpl
mov
loopne
mov
mov
jle
add
mov
xorb
mov
pushl
shrb
jle
mov
pop
imul
or
jecxz
jbe
mov
jmp
pusha
push
sub
sahf
push
orl
jle
pushf
ds
adc
rorb
pop
scas
mov
xlat
hlt
sbb
or
inc
int
mov
hlt
enter
inc
mov
addr16
roll
out
data16
sub
jo
js
repnz
sub
sbbl
jne
xchg
out
sbb
sbb
cmpsl
cmp
mov
daa
inc
add
mov
or
mov
xchg
leave
mov
xlat
pusha
icebp
sti
jns
mov
ficoms
aaa
cmp
movsl
and
xor
rorl
mov
jnp
cmp
xlat
mov
enter
inc
and
roll
push
mov
fisubrs
xor
cmp
repnz
decl
rolb
mov
push
in
std
and
rorb
cmp
ret
xor
adc
rcll
mov
gs
rol
das
inc
dec
imul
push
fs
xchg
cmp
add
pop
mov
pop
dec
lods
jg
pop
ret
adc
cmpsb
sbb
push
outsb
push
enter
stos
clc
sbb
adc
in
test
add
xlat
mov
mov
aam
icebp
ret
xchg
add
fldl
push
sub
xlat
aas
into
and
add
lods
cmp
mov
decl
mov
mov
mov
xor
test
cmp
mov
jnp
arpl
cmpl
loopne
jb
inc
shlb
scas
stos
mov
cmpl
adc
inc
add
les
fsubr
jno
xchg
and
test
push
je
jge
adc
aaa
fs
mov
sub
call
addb
popa
push
icebp
ljmp
data16
fmuls
aam
ds
cmp
lret
rcrb
int
insb
scas
jno
insb
sbb
cld
psraw
loope
mov
cmp
outsl
lea
adc
pop
pop
jecxz
enter
bound
jp
repnz
loope
or
or
adc
cli
pop
scas
jbe
push
int
or
mov
mov
rcll
sbb
inc
or
lahf
pop
and
dec
jecxz
stos
or
or
add
inc
adc
or
or
ja
andb
cli
cs
inc
inc
xchg
sub
in
dec
int
sbb
add
xchg
popf
pop
add
cmp
lahf
je
sbb
js
fsubrp
arpl
sbb
test
and
inc
xchg
add
jbe
sahf
xchg
mov
lods
lea
repnz
sbb
ds
mov
cmpsb
add
je
pop
pop
and
cmp
mov
pop
hlt
inc
insb
pop
xchg
sbb
movsl
push
loopne
or
scas
insl
mov
push
jmp
dec
faddl
xchg
jne
lods
and
xchg
es
fstpl
addr16
mov
dec
and
mov
sbb
cmpsb
movsl
adc
xchg
dec
adc
push
jae
cld
jae
flds
ja
add
ds
jb
and
sarb
mov
mov
mov
jno
loope
adc
xor
shl
fadds
mov
adc
pushf
jo
mov
push
mov
inc
dec
es
call
jns
loope
sub
aaa
jnp
in
addr16
ljmp
fdivrl
push
enter
sar
imul
sub
int
inc
pop
shrb
push
repnz
sbb
fdivrp
icebp
arpl
rcl
push
fs
dec
mov
data16
popl
mov
add
dec
outsl
pop
fistpll
jae
inc
ret
lea
cmpsl
sbb
lock
loop
int
inc
out
stc
mov
jo
xchg
mov
sub
mov
pop
jnp
out
repnz
mov
cmpsb
xchg
fwait
sub
mov
insb
ret
jg
jl
and
loop
add
xor
pop
inc
and
out
into
mov
ficoml
xor
rcl
clc
jmp
mov
push
and
outsl
pop
sahf
sbb
jge
das
mov
cmpsb
aad
xchg
test
daa
cmp
daa
sub
iret
int
jnp
lock
inc
sbb
push
fsubrs
mov
adc
pop
popa
pop
push
xorl
dec
aas
mov
jmp
roll
inc
sub
mov
mov
push
test
insl
ret
insl
popa
jo
fwait
pop
pop
roll
test
or
fisubrl
mov
jb
je
sub
inc
les
cmp
aas
andb
push
mov
mov
dec
mov
fcmovnb
outsb
lcall
in
arpl
sub
mov
stos
push
xlat
in
cmp
push
xchg
les
fiadds
xor
fwait
mov
stos
cmp
into
cmpb
dec
enter
loop
pop
loope
lock
jns
clc
jge
pop
jg
jl
jecxz
adc
dec
or
pop
popl
iret
cmpsl
jae
and
fstpl
testb
in
sti
xchg
scas
insb
ret
jecxz
cs
pop
mov
mov
mov
test
inc
jp
mov
call
xchg
rolb
iret
rep
cmpsb
aaa
fs
js
sbb
mov
jae
fwait
lea
cltd
pop
cmp
fildl
xor
ljmp
pop
pop
aaa
mov
loope
or
mov
dec
gs
mov
add
dec
test
int
add
std
add
mov
cld
sub
movsb
and
repz
xchg
pop
push
pop
sub
sbb
and
out
inc
jge
daa
mov
mov
mov
adc
xor
jnp
push
iret
xlat
jae
add
and
jmp
dec
mov
push
pusha
xor
mov
and
rolb
mov
lret
jmp
fidivl
push
push
sub
sub
mov
push
dec
stc
inc
push
sub
data16
inc
dec
lcall
add
iretw
xlat
mov
push
inc
cmp
inc
push
sub
xchg
and
cmpsl
sbb
cmc
faddp
lods
in
in
mov
jb
inc
pop
add
push
popf
xor
fcompl
adc
dec
cmpsl
pop
mov
dec
lea
jp
cli
inc
test
dec
rcr
inc
pusha
fucomip
das
cwtl
std
inc
pop
fs
jmp
out
sbb
test
and
je
dec
xchg
lds
stc
cmc
xchg
add
cmp
out
ret
xlat
call
sub
sti
icebp
sub
gs
mov
jno
fldt
xchg
out
fwait
lods
std
push
inc
inc
dec
popf
push
sub
add
or
lret
mov
lods
pusha
sbb
or
pop
or
addb
addr16
push
cmpsl
mov
xchg
es
or
in
mov
mov
push
sbb
xchg
outsb
fildll
outsl
mov
dec
mov
cli
mov
push
aaa
fnsave
mov
jae
insl
insb
inc
push
jg
sbb
xchg
and
bswap
int
or
and
fnstenv
adc
mov
inc
xor
add
mov
adc
sbb
ljmp
out
mov
or
ret
inc
std
std
push
aam
mov
pop
stc
jne
dec
push
and
imul
cmpsl
hlt
mov
sub
cwtl
lret
ljmp
popa
sbb
imul
fbstp
push
xor
cmp
gs
jne
or
xor
sbb
ret
pop
xor
jo
push
mov
push
loop
pop
cmp
sbb
sub
fisttpl
jge
mov
fiaddl
jmp
gs
or
and
movsl
jo
inc
test
inc
incb
movsb
pusha
pop
shrb
sub
fisubrl
adc
call
lods
roll
add
mov
mov
push
das
mov
pop
je
int
call
loop
call
outsl
add
push
inc
lea
repnz
add
pop
cmc
cld
sub
das
sub
jo
repz
fnstcw
fwait
ret
out
mov
xor
aad
mov
mov
xlat
scas
fwait
sbb
jae
sbb
xchg
mov
stc
push
dec
repz
insl
aas
cwtl
sbb
dec
test
les
cwtl
sub
ja
dec
dec
int3
stos
xor
sub
push
ds
popa
subb
xor
loope
ss
ja
aad
stos
sub
fwait
mov
frstor
mov
adc
xor
stos
mov
clc
mov
mov
sbb
les
add
out
sub
jl
int3
ja
icebp
dec
sbb
cld
mov
ret
movsl
lret
ja
hlt
in
pop
in
gs
fisttps
movsb
add
inc
dec
or
sbbl
cli
pusha
dec
enter
cmp
mov
push
and
loope
xchg
icebp
cmp
ret
push
mov
pop
or
mov
test
pop
fists
sbb
cmp
std
fwait
rcll
mov
lods
push
add
lds
mov
pop
and
fsts
mov
aad
cltd
sarl
add
sub
fsubrs
fwait
pop
hlt
dec
dec
and
ja
lods
ja
out
gs
xchg
mov
cmp
or
int3
mov
inc
fucomp
pop
jge
inc
ret
ds
mov
rolb
push
mov
cltd
sbb
mov
stos
sti
mov
inc
xor
and
ffreep
aad
mov
movsb
sbb
int3
dec
frstpm(287
dec
outsb
fsubrl
xor
stc
enter
cmpsb
jns
mov
and
adc
int
cld
sti
scas
dec
mov
add
xor
xchg
mov
out
ljmp
std
dec
lods
dec
movsl
mov
in
and
xor
testb
push
xor
jnp
sub
popa
cltd
outsl
stc
sbb
in
gs
jmp
xor
into
outsl
aam
dec
dec
inc
sbb
sub
cmp
jl
dec
lea
test
and
fistpll
outsl
addr16
int
xchg
mov
jnp
xlat
push
test
pop
jmp
and
outsl
stos
xor
push
sbb
mov
lock
je
je
addr16
scas
lea
repz
jnp
inc
push
jecxz
and
mov
arpl
fisttps
arpl
loopne
or
push
cmp
stos
arpl
sbb
xchg
cmp
gs
push
xor
jbe
mov
jnp
inc
jg
pop
sbb
jl
cltd
insb
notb
mov
inc
mov
mov
mov
sub
sbb
test
sti
fcoms
cwtl
push
fadd
loope
call
jb
rorb
xchg
outsl
popf
in
mov
insl
fsubrl
ret
cmp
scas
add
movsl
inc
stos
jb
les
mov
mov
inc
push
mov
mov
cli
iret
test
dec
inc
mov
or
pop
adc
aas
cmp
xchg
out
scas
scas
jns
mov
mov
stos
mov
push
lods
das
lahf
stos
sub
mov
out
loope
pop
ja
xchg
mov
pop
sbb
adc
dec
scas
frstor
jns
test
out
inc
in
xlat
sub
lds
lds
jns
cmpsl
fsts
movsl
push
cmpsl
or
loop
lock
jle
addr16
iret
into
and
jmp
mov
es
or
pusha
jae
cwtl
jno
sbb
sbb
sbb
call
dec
lahf
add
popa
popf
push
daa
pop
xchg
push
cmp
fistpll
imul
xchg
sahf
mov
cmp
cmpsb
mov
lea
adc
ja
call
adc
add
mov
stos
add
jmp
xlat
lea
xchg
inc
inc
cmpl
and
and
mov
add
loope
jmp
aad
les
jbe
mov
mov
loopne
movsb
xchg
or
mov
js
fstl
push
or
mov
mov
sub
dec
dec
clc
and
dec
add
addl
xor
mov
shll
pushf
jecxz
jbe
sbb
cld
push
cltd
iret
mov
sbb
push
stos
pop
add
add
call
mov
out
jae
clc
mov
pushf
clc
jge,pn
or
pop
push
sub
xor
pop
push
icebp
mov
and
movsb
add
inc
in
mov
push
cmpsl
mov
lret
hlt
iret
xchg
test
xlat
test
in
sbb
mov
outsl
push
adc
or
xchg
dec
clc
inc
jne
pop
js
into
cltd
push
inc
mov
aas
pusha
and
adc
adc
xchg
pop
fldenv
call
cmp
mov
mov
scas
mov
mov
jg
sub
mov
xor
jmp
icebp
outsl
xchg
xor
inc
mov
mov
ret
jmp
jno
push
outsb
adc
sub
iret
ret
out
enter
rcll
in
pushl
push
xchg
data16
loop
sub
xchg
pop
adc
js
push
push
outsb
mov
testb
or
stos
les
xlat
daa
mov
out
push
jb
and
mov
jns
roll
insb
xor
jmp
lret
rorl
ss
adc
dec
pusha
add
aas
in
and
sub
inc
aaa
arpl
jge
hlt
dec
call
cmp
dec
mov
mov
xchg
fildl
xor
ds
scas
xchg
shl
xchg
adc
cmpl
fstl
xchg
jb
jp
aad
hlt
hlt
cld
jb
ss
dec
mov
jle
stos
out
sarb
mov
mov
jmp
je
mov
mov
xchg
jno
adc
cmpsl
sbb
sbb
push
sbb
cltd
sbb
push
nop
pop
stos
imul
pusha
inc
test
lahf
push
adc
scas
popf
fcomip
loop
jnp,pn
out
loopne,pn
pop
push
sarb
mov
inc
jb
mov
or
test
mov
fbld
cmc
into
fists
add
mov
ficomps
jmp
push
test
js
cmp
sub
fidivrl
sbb
fcomps
pop
push
inc
mov
in
jns
sub
clc
out
repnz
dec
sti
and
mov
test
dec
mov
sbb
in
iret
xchg
ja
xchg
jnp
adc
pop
lds
fimuls
adc
mov
mov
les
mov
fbld
sub
sbb
jnp
push
addr16
pop
je
or
jmp
and
fisubl
popf
out
jno
adc
dec
push
in
faddl
pop
iret
jns
add
sbb
xor
addr16
fmulp
adc
jp
test
or
shlb
or
xchg
mov
int3
push
xor
outsb
or
iret
xchg
outsb
repnz
xor
out
addr16
dec
push
int
pusha
fildll
sbbl
mulps
jp
jp
cltd
mov
in
sbb
xchg
xchg
jge
lret
xchg
scas
leave
or
jne
cli
fsubl
stc
adc
sub
ljmp
loop
cs
jge
sar
cmp
filds
sbb
mov
add
inc
lret
insl
inc
xchg
cli
and
loope
je
mov
int
enter
mov
sahf
mov
nop
inc
aad
mov
inc
sbb
lret
add
mov
iret
in
daa
jb
fs
jp
jns
lods
mov
aam
fadd
add
pop
enter
mov
adc
cs
hlt
sti
push
mov
loop
incl
repnz
pop
test
shrb
xor
out
imul
je
in
mov
xchg
lret
lret
push
jle
dec
pop
fmul
int3
lds
sub
mov
add
mov
mov
fsubrl
dec
fidivrs
push
scas
test
in
xchg
jno
call
nop
arpl
adc
ja
add
fwait
ret
cs
aas
insl
imul
xor
daa
or
push
and
push
push
ja
dec
pop
aas
fs
push
adc
dec
dec
adc
fistps
inc
sbb
int
mov
dec
cmp
stc
rorb
std
mov
repnz
mov
leave
or
jnp
inc
mov
stos
int3
setns
xor
push
mov
ljmp
mov
lret
inc
shlb
mov
mov
xchg
dec
inc
sub
and
jmp
sub
xchg
js
adc
push
sub
fisubrs
jge
push
andl
pop
adc
inc
lods
out
inc
dec
mov
mov
ljmp
fildll
fildl
cli
cmp
loopne
aaa
imull
and
mov
in
sahf
mov
adc
cmp
scas
mov
add
inc
mov
sub
jle
sub
mov
lock
xor
mov
cli
pop
mov
in
dec
lret
mov
rolb
pusha
xor
neg
dec
dec
jge
inc
aad
insl
imulb
mov
push
inc
and
daa
out
es
jg
push
std
in
jge
sub
out
fstpt
outsl
dec
js
pop
js
sub
mov
push
inc
insb
adc
cmp
cmp
dec
mov
fldl
push
mov
movsl
sarb
xor
loop
sti
shld
mov
cmp
xchg
add
faddp
loopne
lds
cltd
test
bound
ljmp
sub
divl
mov
sub
mov
scas
pop
stc
xor
sti
es
pop
sub
push
sbb
cltd
sub
cmp
fsts
adcb
sbb
and
mov
pcmpeqb
pop
adcl
test
pop
fdivrs
dec
and
mov
dec
pop
or
imul
xor
xor
jecxz
mov
mov
sub
stos
and
nop
mov
mov
inc
popa
and
ficomps
rcll
rol
xchg
or
mov
hlt
test
icebp
inc
pop
sahf
scas
out
push
mov
ss
fsubl
pop
test
mov
mov
push
pop
inc
sub
push
cwtl
andb
sub
cmp
jno
cmp
gs
sbb
pop
loop
sahf
imul
jo
push
lods
mov
das
mov
gs
incl
js
push
dec
movsb
int
jns
mov
mov
shll
cwtl
cmc
xlat
mov
jl
cmp
mov
repnz
inc
mov
fistps
cmp
sti
push
cmp
loop
std
cmp
xor
mov
arpl
hlt
test
mov
jmp
xor
iret
jns
and
gs
jge
mov
lods
inc
inc
add
mov
mov
mov
push
cmp
push
or
jecxz
jle
popf
test
sbb
sub
sbb
or
shl
push
shrb
xchg
icebp
aad
nop
pusha
out
xchg
jmp
push
loopne
ret
ret
rcrb
in
out
mov
notb
mov
and
inc
jne
js
sub
sub
push
adc
aad
les
sbb
out
das
xchg
push
inc
arpl
jmp
repz
in
push
mov
cwtl
jo
mov
inc
stc
mov
les
popl
mov
cltd
push
sub
cmpsl
rolb
lret
jae
sahf
adc
push
xchg
leave
mov
pop
jns
stc
push
xchg
dec
jns
dec
in
ss
cmc
sbb
xor
fs
scas
ffreep
popa
rcrb
pop
and
int
or
inc
push
jne
inc
pop
dec
sub
sar
test
ret
or
cmc
jmp
icebp
leave
fstpl
push
pop
dec
or
inc
push
push
shlb
sbb
xor
cmp
dec
xchg
xchg
pop
or
adc
es
cmp
aas
cmp
dec
sbb
mov
stos
out
inc
push
roll
ret
bound
jns
imul
jmp
ror
lods
push
add
mov
es
pop
out
mov
roll
ss
popa
push
mov
gs
mov
test
xchg
out
cmp
mov
mov
cli
popa
dec
enter
fdivs
pop
mov
stos
jle
sbb
sbb
push
lods
or
jne
mov
out
loopne
pop
iret
stos
pop
push
mov
lret
xor
loope
xchg
in
jne
xchg
std
ja
and
push
jp
ds
adc
lock
or
in
int
pop
loop
sbb
or
push
or
stc
insb
rcr
js
adc
or
push
sbb
mov
jo
sbb
inc
gs
popa
jno
xor
jle
loope
push
pop
ret
shlb
sbb
enter
mov
out
shll
mov
rcrb
sbb
mov
fnstcw
add
loop
push
mov
sub
in
push
xchg
inc
jp
mov
ret
inc
out
cmp
mov
xor
pop
push
add
sbb
mov
mov
sti
cmc
enter
mov
add
outsl
xchg
jb
testl
dec
sbb
ss
clc
add
fsubrl
cmpsb
shr
mov
push
adc
mov
call
cmp
cs
popf
popf
inc
xor
jmp
cwtl
xor
jecxz
imul
xor
sbb
es
inc
lock
rolb
arpl
xor
roll
mov
push
adcl
stos
inc
cmc
fnsave
adc
ja
ret
jp
loop
jp
xor
pop
mov
sub
sub
es
in
lret
cmp
sbb
test
or
jo
jecxz
repnz
loope
push
xchg
sub
push
sbb
data16
inc
pop
cmp
push
outsb
inc
dec
adc
cltd
stos
dec
xchg
mov
jp
pop
int
xchg
mov
jno
mov
imul
fimuls
paddsb
and
sbb
test
fsubrp
addl
sbb
jmp
cmp
cmpsb
push
popf
cwtl
ret
push
xchg
inc
jecxz
or
xchg
cmpl
lcall
xchg
lahf
gs
fwait
pop
int
jns
loopne
inc
push
dec
mov
data16
divl
cmpsb
sbb
icebp
and
inc
sub
xor
sahf
push
pushf
mov
xchg
jg
cmpb
xchg
cmp
clc
push
pop
fnstenv
mov
cmp
stos
cltd
push
nop
sahf
sub
pop
push
mov
or
xor
inc
pop
stos
inc
icebp
push
shr
cmp
orl
insb
add
je
ljmp
add
push
repnz
imul
outsb
dec
and
sti
and
xchg
lret
push
push
push
dec
inc
xchg
pop
leave
in
and
mov
add
adc
in
mov
xor
push
scas
insl
nop
ss
lock
leave
cmp
adc
loop
das
push
inc
add
inc
dec
jl
xor
movsl
xor
mov
stc
cmp
push
xchg
jp
push
jp
sbb
or
js
add
mov
fiadds
ljmp
loop
out
mov
add
mov
cs
mov
rcrl
sbb
mov
mov
inc
mov
xor
into
push
push
aaa
outsl
fadds
shrb
je
sub
pop
pop
jle
xchg
mov
lcall
and
lods
outsb
sub
sbb
mov
push
mov
lret
jmp
stos
pop
stc
movsl
add
nop
dec
mov
or
push
and
push
jb
ja
stos
push
push
mov
jno
nop
hlt
repz
in
xchg
cmpsl
arpl
daa
cld
bndstx
jae
inc
or
cli
sbb
repz
aam
pop
dec
arpl
jno
mov
jl
xor
cmpps
sbbl
dec
mov
addr16
jo
adcb
xchg
jnp
into
jbe
iret
scas
inc
mov
sarl
sub
bnd
fadds
xchg
cltd
sub
jbe
lcall
mov
movsl
xchg
sarl
cs
inc
cld
loop
cmpsb
jo
dec
lahf
ss
cmp
and
adc
and
inc
mov
sti
enter
in
into
cmc
popa
dec
ja
fwait
inc
sbb
push
mov
scas
sub
call
xchg
addr16
lret
pop
sub
pop
push
js
xchg
daa
dec
xlat
sub
sbb
pop
rcll
xor
hlt
jge
dec
jl
gs
xor
addr16
xchg
loope
push
fwait
and
push
pop
sahf
push
jae
scas
ljmp
std
lods
xorb
rclb
dec
dec
mov
ret
xor
gs
and
push
ja
fldcw
shl
cmc
rolb
std
xchg
mov
cwtl
nop
movsb
shll
mov
or
mov
std
sub
cmpb
arpl
jno
clc
mov
imul
inc
shl
outsb
mov
rcrl
jae
pop
xchg
lds
dec
outsb
aaa
cmc
loop
push
bound
je
leave
sub
cli
mov
inc
aas
xor
call
daa
fadds
sbb
and
aad
into
cld
adc
push
nop
lods
mov
lcall
lds
jo
and
cs
movsl
and
jne
cmp
jg
adc
xchg
mov
fisubrs
cld
pop
cli
dec
mov
mov
jg
enter
jae
pop
xchg
pop
dec
in
ss
std
rcll
fsubp
jmp
mov
xchg
mov
movsl
pop
nop
cmp
ret
lcall
test
add
into
xchg
loop
sbbb
lret
outsl
jg
mov
xchg
dec
je
cmpsb
lret
movsl
xchg
xchg
sbb
andl
xchg
push
lahf
xchg
pop
jae
stos
fadd
fs
adc
or
push
in
hlt
xchg
pop
xor
loopne
test
scas
xor
inc
push
and
outsl
xor
clc
xor
push
sub
icebp
daa
lods
rcpps
dec
fwait
sbb
inc
repz
pop
sub
aam
lahf
popf
and
and
push
or
in
dec
daa
or
xor
dec
int3
mov
mov
pop
repz
sbb
outsb
fstp
push
mov
jge
out
addr16
mov
sar
xlat
addb
xchg
pop
cli
jecxz
xorl
mov
pusha
repz
in
out
add
imul
fcoml
xchg
shlb
dec
jge
out
aaa
mov
aam
fldt
in
mov
mov
inc
inc
hlt
vpmulhuw
cltd
xchg
push
sbb
dec
xor
sti
ds
and
dec
xchg
add
sbb
inc
lods
imull
push
push
aas
xchg
aaa
mov
mov
push
std
inc
sbb
or
bound
sti
insl
pop
xor
push
lret
fidivrs
xchg
pop
sbbb
inc
stos
sahf
aad
cmp
sub
cwtl
jno
sbb
push
sbb
jbe
push
test
xchg
je
flds
xchg
pop
sbb
cmpsl
mov
cmp
scas
or
jo
mov
and
mov
scas
mov
daa
adc
mov
sub
mov
inc
xor
or
sub
rcr
in
mov
cwtl
cltd
dec
cmp
xchg
cmp
jg
add
stos
xor
call
in
cmpl
or
es
mov
test
mov
daa
or
add
imul
nop
cmpsl
dec
cmpsb
test
inc
scas
sarl
mov
cmc
in
adc
cmp
cmp
nop
dec
and
sbb
xchg
aad
aad
inc
imul
dec
and
inc
pushf
ss
adc
lock
dec
stos
movsb
in
stos
shll
cmp
out
jmp
sbb
out
push
test
test
in
push
loopne
mov
out
dec
push
je
xor
adc
mov
sub
xor
flds
mov
sbb
jno
inc
dec
xchg
push
inc
sbb
sbb
xchg
jle
dec
enter
jo
dec
sub
std
push
xor
rcrb
mov
pop
enter
xchg
pmullw
outsb
lock
mov
push
add
xchg
pop
dec
pop
cli
frstor
int
fidivs
notl
mov
jp
fs
cmp
sarl
mov
lcall
sub
dec
mov
xor
mov
jno
jnp
shrl
in
and
push
lds
inc
cld
and
dec
pop
or
mov
mov
push
scas
dec
in
cmp
push
push
add
aad
ljmp
test
dec
aam
push
gs
in
daa
mov
jne
fiaddl
int
fwait
das
fsts
push
sub
add
push
push
mov
loop
aam
jmp
daa
aad
sub
jno
adc
sbb
cmp
imul
mov
ljmp
mov
ss
movsb
mov
mov
int
inc
mov
dec
or
aam
pusha
pop
sbb
pslld
ljmp
adc
xor
jb
lods
shrb
fs
out
mov
mov
push
mov
lahf
in
cld
xchg
push
push
out
push
int
adc
int3
shl
lret
inc
and
add
adc
or
mov
outsb
dec
inc
xchg
dec
clc
pop
rolb
insl
add
cmpsl
mov
aaa
aam
or
add
addr16
in
push
les
test
inc
xchg
cmpl
fisubl
fdivs
bnd
jno
pop
sub
loope
adc
sti
rorl
xchg
fcoms
rcrb
imull
push
mov
mov
icebp
sub
push
adc
test
cmpsb
mov
mov
jge
addb
inc
and
sub
and
lock
mov
inc
mov
inc
fsubs
js
jno
and
mov
jp
and
daa
push
adc
adc
test
pop
test
xchg
aam
push
sbb
ficompl
mov
cmovbe
cltd
pop
pushf
pop
jbe
aaa
outsb
std
rclb
insb
sbb
pop
add
enter
pop
in
cmp
sub
addr16
mov
jecxz
dec
sbb
push
lret
aaa
sub
mov
push
fcompl
test
mov
jb
jb
inc
push
dec
xor
mov
jg
pop
addb
call
in
outsl
pop
cs
cmpsl
in
aaa
jo
cmp
xchg
xchg
xor
push
add
dec
sub
and
fisttpll
lds
stos
gs
aas
lods
inc
sub
scas
mov
push
scas
cwtl
sbbb
lret
xlat
out
ret
inc
addb
and
pop
jne
lods
sbb
lods
dec
jb
inc
jbe
adc
in
jne
pushf
sub
cmp
cmc
outsl
pop
movsl
out
cmp
orb
lret
inc
adc
sbb
pop
and
jo
es
sti
dec
xchg
mov
sub
mov
pop
popa
dec
sub
jmp
add
xor
mov
pop
pop
cmpsl
jge
insb
mov
or
fildl
cli
adc
jmp
jl
cmpb
sub
jnp
jp
adc
sarb
xchg
mov
and
cli
jmp
add
or
lods
cmp
xor
adc
mov
call
push
fadds
ss
adc
fdivr
ja
fidivrs
hlt
cmpsb
sbb
adc
inc
nop
inc
mov
push
push
stc
addb
sub
enter
cwtl
mov
out
inc
nop
popf
loope
jge
xchg
add
dec
out
pop
jmp
into
ss
add
or
jp
dec
mov
push
and
loopne
shrb
ret
sbb
xchg
sti
es
ljmp
jne
mov
mov
mov
bound
mov
pop
cmp
lds
sub
sahf
push
es
adc
push
repz
jo
jle
push
scas
push
sub
xchg
std
addr16
push
sbb
imul
and
jnp
xor
mov
lret
and
cld
adc
les
push
mov
and
lods
notl
push
scas
lret
jmp
pop
out
stos
lods
ret
dec
fcoml
pop
loope
xor
cmpsb
xchg
and
rcrl
fidivrl
inc
hlt
movsl
add
push
lcall
data16
mov
cmp
jno
xor
js
xor
int
xchg
fs
push
test
sub
xor
stc
push
xchg
push
shll
dec
stc
and
fisubrl
add
sti
lret
movsb
in
hlt
cmp
cli
int3
adc
inc
sub
fnsave
add
pop
lret
sbb
nop
je
pop
sbb
mov
das
fiadds
jle
ljmp
jmp
add
cmc
fwait
push
je
stos
jl
and
jae
loop
mov
xor
or
fs
subb
movsl
in
mov
sub
stc
je
cltd
xor
filds
jg
cmp
repz
fstl
pop
jae
sbb
jno
sub
std
xchg
add
sbb
cs
jne
inc
cmp
add
jnp
gs
jae
pop
xchg
lcall
pushf
xor
rcrl
cmp
xchg
ret
mov
pop
mov
sub
subl
test
lods
sub
sub
or
xchg
jle
and
mov
dec
out
test
jp
sbb
out
mov
cmp
repz
stos
and
pop
cmp
jp
dec
mov
pmulhuw
out
adc
or
leave
ljmp
out
pop
xor
loope
push
xchg
call
sub
jae
sub
push
pop
jp
pop
xor
lods
fwait
jp
sub
insb
add
je
sbbl
mov
pop
outsb
sbb
rcll
sbbl
lods
outsl
mov
mov
shrb
leave
clc
int
scas
or
iret
jecxz
leave
sbb
and
or
push
jmp
dec
mov
and
mov
xchg
hlt
and
imul
jns
addb
lahf
jns
sub
cmp
push
je
mov
test
inc
lods
idivb
jge
sbb
xor
sbbl
xchg
addl
test
sub
and
jge
inc
repz
in
cmp
jge
rorb
les
jns
xchg
sub
adcl
lcall
add
cmp
rclb
les
insl
mov
add
xor
cmp
sub
movsb
pop
in
add
hlt
xchg
stc
or
fwait
dec
ljmp
dec
icebp
ja
cmpsl
sbb
add
in
ds
cmpsb
pop
lock
fwait
adc
pusha
mov
scas
leave
stos
xchg
out
pop
add
fmuls
and
test
stos
fwait
xor
in
jbe
scas
push
in
shll
cmpsl
ja
jge
lret
and
out
and
or
inc
jle
inc
out
push
loopne
mov
aas
sub
inc
ljmp
icebp
mov
jmp
in
inc
addb
inc
or
sub
insb
shll
iret
jo
mov
lcall
fidivrs
sbb
mov
out
cmp
daa
sbb
xor
fwait
jne
push
mov
push
or
xor
add
stos
sti
pop
jae
jl
xlat
jmp
lock
push
pop
fcoms
xor
dec
pop
cli
dec
inc
jl
int
imul
in
push
and
mov
fwait
aad
fs
jle
jmp
fnstenv
frstor
pop
roll
cmp
inc
adc
ret
add
into
sbb
test
add
aad
dec
repnz
jcxz
jne
imul
add
mov
mov
sbb
push
andl
scas
fucomip
pop
out
imul
insb
mov
out
mov
add
mov
imul
enter
shll
sbb
jle
test
rcrb
sbb
invd
dec
and
push
iret
add
and
xchg
imul
pop
pop
or
mov
pop
jne
jg
out
dec
data16
enter
jl
lret
aad
cmpsb
mov
dec
imul
in
lret
movsl
jno
sub
add
and
mov
fsubr
sub
sub
push
or
mov
pop
inc
insl
arpl
dec
rcrb
in
cmp
cld
jne
sbb
pop
jecxz
fnsave
dec
ret
push
jle
out
xchg
lcall
xchg
cli
push
mov
mov
pop
test
dec
jno
jo
out
pop
pop
inc
mov
jae
fidivl
or
inc
mov
shll
adc
aaa
sub
push
lret
into
mov
lret
push
shrb
dec
fwait
push
sahf
or
loope
mov
add
push
mov
lods
pop
fisubrl
stc
aad
xchg
fstl
push
cli
lods
mov
xchg
pop
mov
test
pop
cmp
test
jbe
or
cmp
imul
ds
or
aam
lret
cmc
cmpsb
pop
cld
add
mov
or
pusha
inc
pop
lret
out
pusha
lds
cld
movsb
ss
pusha
add
and
mov
lock
push
inc
out
push
lea
add
inc
cmpsb
subb
dec
out
aas
mov
mov
jl
adc
hlt
sbb
push
push
sub
imul
mov
dec
pop
pop
jp
daa
movsb
lods
sbb
mov
loopne
shl
ss
in
inc
sahf
jmp
stos
cld
leave
popa
cmp
mov
add
adc
pop
mov
cmp
loop
push
inc
and
out
jae
bound
ret
lcall
mov
xchg
push
shlb
push
movsb
dec
leave
adc
cmp
mov
insb
daa
xchg
js
jns
insb
ret
pop
sub
xor
and
jp
fs
std
push
popa
jbe
test
push
mov
sarl
mov
aam
dec
retw
call
es
xchg
cmc
jno
das
lds
int3
repz
stc
insb
stos
mov
push
push
mov
mov
popf
sbb
pop
adc
jle
xor
mov
aaa
xchg
and
outsb
nop
inc
out
or
daa
insl
sahf
sub
add
sbb
adc
pop
add
pop
mov
enter
pop
sub
cmpsb
sbb
loop
or
or
lahf
adc
pusha
and
mov
daa
mov
test
lock
and
leave
hlt
popa
jno
xor
sbb
mov
cmpl
dec
dec
cmp
loope
push
add
lock
in
out
mov
or
jno
mov
inc
outsb
pusha
mov
imul
inc
sub
pusha
lcall
hlt
push
add
lcall
push
lret
sahf
popa
bound
js
mov
loopne
out
dec
je
mov
out
out
ret
cltd
divl
push
adc
adc
or
pop
mov
cmc
stos
mov
jns
push
sub
cmp
mulb
lods
and
in
pop
aaa
pop
cmc
add
imul
jmp
fdivr
cmpsb
sarb
sub
pop
sub
inc
add
sub
cltd
xchg
and
lret
cltd
in
imul
add
xchg
and
lahf
into
mov
mov
jp
es
pop
rorb
out
dec
icebp
in
xchg
pop
std
inc
ds
test
shl
xchg
lock
sbb
ds
ror
stos
inc
jae
pop
stos
pop
dec
insb
loopne
in
sbb
push
pop
pop
sbb
mul
in
mov
hlt
fwait
mov
inc
mov
pop
fildll
fcmovne
test
test
xchg
imull
mov
stos
je
int
mov
sub
sub
add
cmp
mov
adc
insl
pop
ljmp
xor
aas
sub
dec
aas
push
shlb
inc
fisubl
push
push
jne
leave
nop
jg
mov
call
aam
repnz
lcall
imul
adc
mov
xchg
and
add
xor
adc
dec
cmp
movsb
out
call
xchg
mull
mov
movsl
test
pop
inc
std
outsb
adc
rcll
pop
loop
add
dec
insl
std
scas
mov
push
jae
jne
cmp
aam
push
iret
int3
xor
stos
mov
cmp
cmp
fiaddl
out
xchg
aas
cmp
sbb
imul
enter
mov
lods
imul
test
cld
loop
mov
aas
nop
push
xchg
xchg
and
push
inc
cmp
test
popa
lahf
repz
dec
negb
insl
push
mov
ds
ljmp
pop
xorb
jp
leave
xlat
push
adc
repz
test
arpl
nop
js
or
pusha
adc
inc
pop
insl
ret
mov
mov
lea
mov
in
pop
mov
stos
stc
shrl
lahf
test
jecxz
jo
or
sarl
fisubs
leave
cmp
pop
shl
icebp
pop
fisubrs
not
test
std
push
lret
pushf
inc
jb
leave
rol
in
and
mov
xchg
push
xor
cld
or
sbb
loop
xlat
out
pushw
insb
in
add
mov
mov
jecxz
ret
dec
int
xchg
dec
sub
cli
jl
sbb
nop
lcall
sub
repnz
fwait
mov
clc
adc
jge
dec
jno
mov
add
shrl
roll
aam
xor
or
test
leave
jle
and
std
jl
xchg
jae
sub
push
inc
xchg
xchg
aas
mov
imul
nop
shrb
sbb
sub
movsl
and
add
stc
push
adc
stos
mov
in
ror
loopne
fldenv
shrl
push
out
subb
xorl
outsb
outsl
or
fmulp
mov
mov
mov
sub
xchg
ljmp
cmp
in
sub
dec
mov
xchg
and
call
jl
daa
mov
inc
fmulp
sub
mov
in
fiaddl
sbb
cmp
sbb
and
and
push
sub
in
pop
sub
scas
cmp
loop
sub
in
mov
jl
icebp
out
inc
fnstcw
or
decb
adc
fstpt
dec
fwait
mov
xchg
cmc
repz
sub
inc
test
shll
and
lds
mov
cld
lsl
stos
popa
movsb
pop
jg
pop
popf
sub
nop
and
mov
xor
rcll
nop
popf
outsl
pushf
add
sahf
popf
and
ja
test
fnstcw
movsb
or
cmpsl
or
dec
push
mov
dec
xlat
mov
mov
mov
xchg
inc
insb
sub
pop
gs
loop
pop
push
mov
out
xchg
fisttps
scas
jecxz
ficompl
push
mov
sbbb
inc
xchg
push
dec
sbb
sbb
xor
mov
int3
mov
mov
cli
jb
add
adc
icebp
push
icebp
shlb
in
cmp
mov
and
or
adc
mov
test
sub
outsl
and
stos
jecxz
xlat
add
and
rorl
cmp
add
jp
sti
dec
dec
mov
mov
cmc
pushf
push
hlt
lods
jne
cmp
sahf
pop
aas
jno
xchg
jp
adc
je
jnp
pop
adc
jo
mov
pop
mov
ja
sbb
cltd
mov
pop
outsl
jg
ss
push
fldl
or
xor
xchg
mov
scas
add
xor
sti
cmc
jl
sbb
jmp
and
inc
push
std
std
xor
add
xchg
ror
push
mov
nop
dec
fmul
and
sti
pop
les
pusha
jno
daa
test
pop
dec
cmp
movsb
mov
mov
cmp
adcl
pop
sbb
adc
or
xchg
pushf
lods
dec
jg
pop
sub
ret
cmp
lcall
or
or
mov
das
pop
lcall
stos
loope
xchg
cld
repz
xor
cmp
jae
dec
iret
push
mov
add
dec
out
jns
pop
xchg
in
dec
mov
clc
out
push
test
cmp
push
scas
out
or
cmp
fldl
imul
dec
pop
mov
push
lea
and
bound
jno
cs
push
rcll
pop
and
sti
mov
ss
add
out
cmpxchg
add
stc
jbe
cmp
add
hlt
cmp
cmp
mov
pop
sbb
xchg
sti
push
movsb
or
jg
dec
add
pop
pop
arpl
out
add
push
mov
lahf
add
loope
and
int
jb
shlb
add
dec
and
roll
inc
pop
orb
js
sbb
cs
rcl
gs
mov
outsb
xchg
push
mov
adc
sub
inc
inc
fsubp
or
fsub
or
jl
xchg
mov
mov
inc
push
movsb
mov
and
or
cltd
into
sub
test
sub
push
faddl
mov
xor
jns
or
mov
xchg
pop
pop
pop
outsb
clc
mov
fisubl
out
mov
add
aad
test
push
rol
xlat
sub
sti
jns,pt
cmp
push
mov
push
dec
cmp
out
jecxz
cmc
daa
and
jb
ds
leave
test
into
pop
pushf
jns
push
or
xor
push
inc
pushf
sbbb
dec
out
sbb
adc
aad
cmpsl
movsb
leave
push
xchg
and
les
test
mov
into
psllw
shll
xor
or
push
add
add
stc
imul
imul
je
inc
mov
inc
add
aas
sub
divl
ljmp
outsb
out
push
mov
mov
jge
out
movsb
push
cmpsl
push
and
lock
fs
roll
nop
xor
jecxz
pop
dec
std
jb
dec
packuswb
and
dec
mov
ds
pop
adc
xor
rcrb
cwtl
stos
andb
mov
out
aad
fisubrl
je
ret
pop
sahf
and
fdivr
sub
jle
sbb
rcll
lea
adc
push
cmp
push
mov
xchg
cmp
sub
pop
xchg
mov
push
pop
adc
and
fnsaves
stos
inc
leave
sub
or
push
pop
outsb
cmp
xor
xchg
in
popf
push
andb
stos
jb
stos
jecxz
jle
push
je
inc
sub
in
jle
sbb
dec
subl
add
fbld
sbb
das
shl
addr16
fldl
inc
xchg
nop
jl
fwait
push
movsl
mov
mov
push
mov
in
aam
and
adc
xchg
in
enter
imul
divb
push
mov
mov
clc
dec
clc
dec
lret
mov
pop
push
lahf
xor
and
and
xchg
mov
fwait
push
ja
fisubrs
leave
xor
bound
pushl
cmp
mov
inc
bound
test
pop
mov
sahf
xchg
dec
in
xor
test
ss
xchg
mov
aam
xchg
ja
jbe
cmp
sub
mov
sti
mov
imul
outsl
mov
xor
negl
out
fimull
insl
lret
xor
movsl
mov
orl
test
scas
xchg
in
mov
sbb
scas
sbb
cli
xor
mov
cmp
insl
or
lahf
addl
cmp
mov
and
cmp
adc
das
jecxz
or
mov
das
xchg
adc
sbb
mov
cmp
mull
in
or
xor
lcall
cld
pusha
sbbl
dec
or
xor
ds
inc
push
pop
xlat
pop
out
mov
push
clc
mov
add
mov
arpl
popf
pushf
orb
xchg
fdivrl
bound
inc
fs
cs
push
sub
call
popa
icebp
lret
cwtl
xor
and
shll
ljmp
jecxz
test
xor
fs
addr16
jmp
clc
or
add
lds
test
xchg
aam
pop
popf
pop
pop
pop
movsb
inc
cmc
and
out
xor
subl
adc
jnp
int3
adc
out
insl
inc
iret
test
mov
mov
xchg
pop
xlat
lret
xlat
mov
pop
test
outsl
xor
pushf
xor
sahf
outsb
cmp
jae
ret
xor
aam
subb
or
mov
mov
out
sub
sub
jge
dec
push
arpl
xchg
test
out
add
xchg
movsb
mov
push
aad
sbb
addps
pop
ret
aad
mov
pop
pusha
inc
call
or
aam
clc
push
pop
sub
cmp
mov
jno
jge
dec
insl
xchg
cmpsb
push
mov
int
push
int3
jae
cmp
lds
in
je
xchg
xchg
and
leave
mov
push
outsb
das
or
fdiv
aaa
sub
xchg
icebp
xchg
ret
xchg
aaa
pop
jb
scas
xchg
cmp
or
xchg
jecxz
jge
pusha
pop
jne
dec
stos
and
cmp
es
adc
xorb
adc
test
sti
xchg
jp
in
push
add
xlat
mov
addr16
mov
sti
add
xchg
outsb
das
adc
sub
aaa
call
xchg
mov
jbe
jnp
sub
test
inc
pop
loop
bound
dec
loope
or
or
out
pusha
push
cmp
or
stos
sub
mov
jp
push
addl
repnz
stos
xchg
push
sbb
ret
mov
mov
sbb
mov
ds
sbb
fisttps
icebp
or
xor
xlat
cbtw
xchg
cwtl
out
adc
add
scas
sti
dec
sbb
insl
data16
mov
mov
out
mov
das
xor
inc
push
mov
push
in
and
xor
xchg
in
in
pop
xchg
sub
mov
out
xlat
inc
mov
mov
sbb
cmp
add
and
in
pop
ffree
ds
and
fsts
push
popf
inc
mov
cmpsb
mov
out
cs
out
or
insl
insb
mov
xchg
and
sbb
xchg
out
in
xchg
loopne
mov
cld
nop
test
jnp
sbb
decl
push
inc
sub
xor
nop
cld
mov
mov
std
cmpb
out
aad
sbb
mov
jnp
mov
xchg
test
call
pavgb
dec
mov
push
xor
scas
push
aad
dec
sti
adc
jl
cwtl
mov
mov
repz
lcall
sahf
shll
lcall
lods
push
mov
jae
es
shlb
and
sub
jae
pop
mov
lea
jbe
xchg
testb
pop
loope
cmp
jo
rcrb
rcll
loop
inc
adc
adc
shll
sahf
xchg
ret
sbb
imul
or
clc
xchg
mov
call
stc
int3
jo
mov
and
scas
push
xor
lods
mull
cmp
mov
push
jg
mov
cmpsb
cwtl
mov
xor
sbb
loop
xor
xlat
fidivl
sbb
xor
das
lock
xlat
cmpsl
roll
xchg
xor
xor
js
jmp
pusha
jnp
orb
sbb
inc
cli
cwtl
test
and
sbb
pop
jge
outsl
xchg
mov
imul
ficoms
adc
jns
rorb
cld
pushf
lret
repz
popa
xchg
pop
int
sarl
pop
shll
adc
xor
idivl
mov
push
cmp
in
push
in
sbbl
aas
cmp
mov
xchg
mov
dec
pop
decb
insl
and
arpl
dec
xor
push
adc
iret
cmpsl
arpl
nop
sub
out
pop
mov
lods
movsb
and
push
lcall
movsb
bnd
sub
cmp
ret
sub
adc
shll
cs
xchg
ret
aas
clc
pop
cmpsl
repz
sbb
out
adc
test
hlt
push
mov
sub
subl
call
and
pop
mov
cwtl
popf
sbb
cld
dec
imul
mov
mov
inc
clc
stc
dec
push
push
ja
nop
or
stc
xchg
rclb
jecxz
push
rcr
jmp
ss
rcl
add
sbb
cmp
mov
xchg
cmc
insl
ljmp
push
rcrb
test
push
cmpsl
mov
popa
xor
movsb
je
xor
std
int3
lea
mov
stos
inc
mov
pop
dec
repz
pop
sub
jle
loope
and
gs
cmp
ret
xorb
xor
inc
push
dec
int
xor
pop
xorl
add
dec
inc
fcmovnbe
ret
cmp
push
adc
int
enter
clc
xlat
mov
imul
rcll
aad
and
xchg
vcvtss2sd
pop
call
das
push
sbb
loope
daa
sbb
pop
mov
lret
inc
push
and
mov
mov
icebp
std
jae
pop
or
stc
dec
mov
xlat
iret
cli
cmp
ret
stos
sbb
pop
jmp
ret
daa
adc
push
sbb
mov
xchg
addr16
fisubl
sbb
int3
sbb
xchg
in
jp
iret
fiadds
out
sub
scas
mov
ret
dec
mov
cmp
dec
fs
data16
dec
adcb
xor
int3
call
mov
mov
cmpsl
lods
or
inc
inc
mov
adc
repz
xchg
xchg
sbb
and
pop
data16
dec
in
mov
dec
sbbl
push
mov
jle
scas
lcall
cmp
push
add
xor
out
outsb
bound
out
es
movsb
fstps
inc
fistl
shl
movsl
xchg
jp
jno
sbb
sub
mov
popa
jo
enter
clc
add
scas
inc
aaa
int3
fldl
data16
fsub
lahf
sbb
lahf
js
xchg
roll
js
stos
pop
xchg
sti
addl
insl
ja
dec
xlat
out
fmull
dec
cmc
sbb
ret
mov
out
movsb
shll
lcall
movsl
cmp
fldenv
jns
cmp
imul
xchg
jecxz
mov
push
movb
loopne
inc
mov
fmulp
sbb
jp
cmp
inc
dec
fmulp
pop
out
sub
lahf
leave
or
int
jno
push
mov
fwait
mov
and
dec
jb
fwait
xor
int3
inc
lea
sbbb
cmpsl
loopne
clc
or
dec
shll
in
mov
pop
sbb
or
jo
push
inc
sub
stos
dec
shlb
imul
or
js
dec
or
jmp
std
shll
enter
adc
sahf
jb
outsl
cmp
imul
out
push
xlat
jl
xor
fists
test
xchg
loopne
jb
cmp
and
movsb
aad
pop
pop
jecxz
mov
std
mov
out
dec
adc
into
cmp
aaa
aad
xchg
xor
hlt
and
shrb
imul
stos
xchg
mov
cwtl
loope
fcmovbe
ret
imulb
mov
sub
pop
nop
adc
xchg
jns
cmc
pusha
xchg
mov
mov
inc
aas
mov
test
xor
add
sbb
inc
add
jl
mov
pusha
rolb
mov
cmpsl
movsb
xlat
cmc
sub
lock
pop
ljmp
dec
pushf
shrl
xchg
mov
push
and
fchs
mov
movsb
imul
test
das
popf
push
pop
push
scas
out
out
jo
xchg
sub
inc
add
mov
mov
arpl
and
lcall
push
adc
dec
icebp
xchg
je
jns
add
dec
inc
imulb
sbb
xor
xor
iret
cmp
xchg
roll
imul
mov
nop
and
sub
vunpcklps
shl
sbb
jmp
imulb
or
fsubrl
jecxz
lods
push
insl
scas
sahf
push
fcmovnu
test
movsb
cmp
inc
push
mov
daa
mov
or
loopne
lock
push
push
mov
push
push
cmp
adc
mov
dec
lods
repz
sub
and
adc
jecxz
data16
leave
loope
pusha
mov
rcrl
clc
sbb
fidivrs
mov
gs
mov
test
or
and
shll
lea
adc
sarb
pop
push
mov
mov
test
xchg
dec
jp,pt
mov
mov
ds
das
push
dec
add
sbb
push
fs
test
rcrb
pop
cli
data16
fs
sub
pop
mov
xchg
adc
pop
fcoms
pop
imul
jmp
jne
jb
or
imul
data16
lods
mov
adc
xrelease
xchg
in
sub
pop
pop
mov
mov
popf
daa
or
push
mov
insl
add
xchg
push
inc
orl
iret
dec
xchg
jge
cmp
pop
push
insb
adc
in
jmp
push
xchg
sub
in
mov
mov
hlt
xor
mov
sarl
rorb
test
inc
push
xchg
add
xchg
add
in
incl
fiadds
pop
imulb
inc
jge
fcompl
adc
andb
adc
sub
imul
iret
and
sarb
fwait
mov
mov
data16
loopne
pusha
cmp
pop
dec
insb
out
cli
sub
dec
ret
insl
shll
mov
jb
ds
xchg
adc
and
mov
ret
or
testl
imul
loope
mov
sub
inc
sti
xor
call
sahf
push
xchg
dec
js
push
fldt
aam
fs
add
lods
dec
sub
js
jmp
mov
pop
pop
adcb
ds
add
jae
inc
cmpl
iret
sub
adcl
mov
inc
ja
add
mov
int3
xor
cmp
enter
cmp
insl
and
mov
sbb
sarb
or
cmp
sbb
and
mov
fisttpl
xlat
shll
sbb
cmp
lods
popf
shll
int3
inc
ret
mov
in
mov
mov
xchg
xchg
pop
jb
cmc
out
insl
aam
jle
xchg
adc
mov
les
xchg
ja
inc
push
cmc
lret
popf
fildll
scas
add
aaa
mov
stc
movsb
mov
cld
mov
push
jmp
mov
aaa
adc
ret
testl
xor
sarb
pop
int
sub
push
loop
push
xor
fistps
mov
incb
or
das
mov
xor
mov
add
pop
out
rolb
pop
testb
fisttpll
leave
push
ds
xchg
sbb
cltd
mov
jb
jge
inc
sbb
pop
pop
dec
pushf
push
and
in
mov
mov
push
jp
cmp
jbe
lret
in
xchg
int3
inc
add
or
icebp
and
nop
mov
dec
cmpsl
xor
xor
fldl2t
in
aad
mov
adc
pop
sub
insl
test
add
rcl
push
mov
adc
dec
loopne
mov
xchg
ret
push
ret
cmp
adc
std
mov
xor
ret
mov
push
fs
in
call
sbb
jge
jp
testl
jno
repz
gs
push
fs
out
mov
mov
jg
rolb
jns
movl
lods
dec
xchg
cwtl
scas
stos
and
push
aas
sarl
cs
mov
pop
fidivl
xchg
aad
cmpb
lea
sub
popf
cmpsb
xor
xchg
scas
or
hlt
cwtl
sbb
push
aas
inc
incl
js
mov
pop
or
pushl
out
mov
sub
fdivrs
jp
xor
add
das
daa
xor
movsl
dec
pop
dec
jg
mov
sbb
push
mov
xor
cwtl
push
js
push
sbb
stc
ljmp
add
sbb
leave
ds
movsl
aaa
loopne
sbb
loop
and
xor
movsb
leave
lock
lret
scas
dec
aas
mov
xor
add
rorb
and
adc
xlat
dec
pop
fucom
add
jae
je
push
adc
fcompl
jle
xchg
loope
inc
or
xor
imull
sub
addl
or
and
cmp
cmp
scas
add
mov
lock
jge
adc
divb
or
xchg
aam
nop
cmp
cs
sub
xor
decb
movsb
stc
mov
sub
xchg
inc
fstpt
cmp
add
cmp
loope
out
sbb
test
pop
dec
leave
dec
push
cmp
out
or
lods
push
xchg
push
lcall
add
cld
lds
cmp
aam
std
insb
loope
inc
incl
pop
outsl
xor
inc
das
rclb
xchg
pop
mov
sahf
pop
adc
xchg
inc
sahf
sbb
and
std
xchg
in
lret
mov
push
cltd
push
sti
fdivs
sub
ljmp
pusha
fstpt
push
outsl
call
inc
movsl
fimull
inc
sub
cmp
addr16
cmp
jo
mov
data16
mov
sbb
imul
and
out
lret
sti
popf
dec
pushf
and
cmp
pushf
negb
aas
aam
jmp
idivl
arpl
fwait
push
lds
add
xlat
dec
mov
inc
fsubrl
imull
mov
sbb
mov
pop
shll
jmp
gs
push
push
sbb
lea
sbb
jge
test
popf
push
add
sbb
or
cli
scas
xchg
aaa
sub
icebp
push
pop
int
call
dec
jb
push
mov
jb
pop
adc
push
cwtl
sbb
or
test
adc
in
xchg
sub
push
addl
push
jno
mov
mov
mov
scas
shl
lret
call
notl
test
pop
clc
lock
xchg
xor
out
fldenv
push
repnz
stos
aas
sbb
sbb
dec
outsl
mov
inc
movsb
scas
pop
movsl
xchg
lds
mov
das
fwait
xchg
ss
ficoml
leave
inc
ds
loop
in
xchg
or
in
pop
cltd
inc
dec
push
and
pop
ret
out
mov
fsub
adc
stos
cmp
dec
outsb
jb
adc
mov
sti
movsb
inc
or
int3
stc
or
loopne
xor
das
dec
data16
mov
mov
dec
ret
and
mov
push
cld
push
sbb
pop
jnp
jl
inc
test
shlb
gs
shufps
jg
sub
repz
mov
jbe
shlb
inc
sub
ret
leave
inc
ja
test
jmp
jb
and
les
les
in
xchg
iret
mov
sbb
mov
fwait
insl
arpl
movsb
inc
xchg
sti
out
pop
hlt
adc
ret
push
sub
xchg
jmp
and
and
popa
decl
jle
in
push
sbbl
dec
flds
pop
cmpsl
in
repnz
insb
xchg
mov
lcall
cmpsl
mov
jp
cli
jnp
movsl
dec
cld
adc
mov
aaa
xor
out
dec
sub
dec
push
xchg
subl
lock
mov
xchg
out
arpl
sbb
fidivl
mov
cmp
jno
insl
push
lods
dec
xchg
mov
movsb
xchg
adc
dec
jl
jle
movsl
push
xor
cmp
test
jp
xor
mov
and
jl
push
adc
inc
shl
fimull
inc
adc
adc
sti
nop
cmp
loope
push
lock
lds
mov
rolb
cmp
and
mov
jo
mov
shrl
cli
pop
lods
xchg
ret
and
lret
jno
shlb
cmp
mov
push
in
add
into
and
mov
test
mov
jg
jle
fadds
pop
ja
mov
stos
cwtl
and
fidivrl
test
sub
mov
jmp
dec
pop
out
cmp
sti
fsubs
out
pop
arpl
iret
dec
mov
jmp
adc
mov
adc
in
add
adcl
lock
adc
xor
mov
cmc
xchg
daa
jecxz
xorl
insb
adc
sub
push
sbb
insb
cmc
out
les
jbe
lret
cmpsb
or
and
fidivrl
jns
dec
cld
pop
jmp
lcall
mov
std
ret
lcall
mov
pushf
test
or
fstl
adc
xor
xorl
jo
sahf
mov
pop
dec
jb
mov
adc
cmp
test
test
cwtl
loop
sti
sahf
scas
xchg
adcb
call
and
cmpsb
adc
cli
jge
push
test
cld
pusha
stos
in
cld
outsl
lock
jae
push
into
iret
inc
popf
mov
cmpsb
dec
dec
rclb
ret
in
hlt
dec
xor
stc
insw
out
dec
adc
pop
mulb
in
adc
pop
cmove
in
data16
repz
movsl
mov
inc
xor
adc
repz
int3
xchg
mov
mov
dec
sarb
stos
and
adc
stc
sbb
dec
fsubrs
js
adc
shlb
jno
mov
sub
hlt
add
inc
es
push
dec
xchg
jb
pop
icebp
shrb
out
aas
testb
scas
dec
fs
xor
dec
sar
push
jbe
clc
mov
jne
ficomps
insb
fisubrs
and
dec
imul
add
mov
jo
out
push
scas
adc
jns
and
cld
dec
push
jp
stc
lea
pop
add
mov
push
das
push
popf
xchg
aas
inc
fsubl
pushf
mov
mov
lods
mov
push
dec
mov
dec
push
addr16
adc
xor
loope
jae
imulb
push
adc
push
and
sbb
stos
inc
pop
loope
fwait
xor
dec
push
push
mov
mov
cltd
rcr
cmp
sub
or
fldcw
lea
pushf
cmpsl
mov
ficoms
insb
mov
mov
in
jnp
push
ret
push
or
arpl
or
dec
lret
shlb
inc
scas
rol
sub
mov
dec
xchg
jnp
lea
mov
mov
stc
imul
fidivl
insl
jg
neg
rclb
shr
lahf
out
hlt
imul
mov
jne
mulb
mov
aam
iret
push
fimull
lea
dec
cmp
and
ror
cmc
pop
lea
sbb
ret
fs
inc
addr16
xchg
adc
lods
mov
xlat
dec
test
shl
cltd
pusha
test
out
into
xchg
xlat
pop
shrb
imul
adc
lds
into
jg,pt
fsubrs
js
fstpt
rcrl
pop
push
popa
mov
adc
loopne
mov
mov
lods
sub
dec
cli
pop
mov
cmc
data16
inc
jno
pop
inc
sbb
loope
adc
cmc
test
aaa
out
lea
jne
lea
and
jns
jae
dec
dec
pop
mov
adc
pop
adcl
xchg
mov
add
and
sbb
mov
test
sub
adc
pop
aam
fadds
pop
test
lods
cs
sbb
push
inc
dec
xor
adc
retw
ja
xchg
dec
gs
mov
loope
js
jb
movsl
xor
adc
inc
out
and
ja
addr16
cmp
lods
xor
out
cli
int
sti
fwait
sub
ror
dec
cmp
push
lcall
mov
sahf
in
lods
lret
dec
loope
inc
cli
ja
lret
orl
repnz
in
pusha
add
cld
divl
lods
mov
xlat
lods
xchg
loope
ret
pop
int3
ss
ljmp
test
mov
and
jno
sbb
aas
pop
sub
fdivs
repz
and
mov
cmp
or
pop
fisttps
sub
or
jae
pusha
enter
ror
mov
mov
mov
lret
lds
dec
cltd
or
imul
je
sub
push
dec
pop
and
xor
inc
js
lods
enter
stos
scas
movsb
xchg
mov
mov
cltd
jp
mov
mov
icebp
pop
sahf
push
std
les
bound
mov
mov
inc
add
test
add
mov
push
nop
std
dec
aam
inc
inc
imul
push
xor
enter
lock
dec
push
cmpl
mov
sbb
jle
xchg
vpshufhw
std
outsb
iret
sti
frstor
pusha
jbe
inc
xor
and
insl
js
mov
mov
hlt
test
test
aas
pushf
pop
sub
pop
outsb
fisttpll
gs
out
dec
adc
lcall
inc
stos
mov
in
jno
in
les
negl
mov
nop
addb
lcall
rorb
loope
sub
ret
push
jae
xor
pushf
lock
xchg
inc
mov
mov
sub
jg
push
ljmp
movsb
in
int3
mov
arpl
jns
lahf
stc
repnz
or
ja
jae
jbe
push
lret
adc
mov
sbb
xor
pop
cli
adc
or
sub
adc
lret
ret
mov
je
sbb
aad
and
test
cwtl
pop
stc
int3
jecxz
jae
inc
in
pop
aam
fistps
sbb
ja
cmp
leave
enter
cmp
divl
and
arpl
cmpsb
mov
or
daa
dec
ja
sub
xchg
hlt
ficompl
or
mov
mov
xchg
incb
mov
xchg
xchg
movsb
das
pop
xchg
mov
addr16
mov
and
je
test
out
dec
xchg
je
push
add
jne
in
fwait
nop
mov
mov
push
xor
shrl
fucomp
into
jg
adcl
push
xchg
fsubrl
sub
ret
jnp
ret
das
dec
cs
push
add
insl
and
out
xchg
stc
scas
rcll
dec
mov
shrl
pop
loopne
out
lods
mov
pushw
push
ret
xchg
mov
imul
lock
cmc
ret
rcll
popa
xchg
mov
mov
in
mov
les
mov
nop
jl
jnp
inc
pop
psraw
xchg
cmovns
push
popf
addr16
stos
or
pop
rcrb
out
mov
mov
mov
imul
mov
and
push
xor
mov
movsb
sub
popa
jge
loop
andb
les
mov
lcall
sarl
fisttpll
aaa
mov
daa
loopne
sbb
add
add
jnp
nop
dec
push
mov
or
cmp
call
add
sti
pop
rcrl
lcall
fisubl
inc
gs
add
in
add
test
stc
jae
dec
dec
xchg
lret
icebp
mov
test
std
je
jmp
ss
pop
cltd
dec
and
sarb
data16
push
or
mov
test
sub
sti
test
sbb
mov
pop
imul
jecxz
or
jo
ljmp
lds
stos
arpl
jnp
jns
dec
or
pop
bound
mov
arpl
push
fcoml
mov
push
es
fcoms
shl
xor
mov
out
mov
push
daa
lahf
cmp
shll
fs
or
lret
ss
fcmovnb
imul
jnp
push
pop
sbb
aad
fneni(8087
and
ret
jne
pop
imul
cmp
pusha
pop
add
mov
int
jecxz
inc
xlat
pop
popa
push
xchg
loope
insl
popa
push
mov
fstpl
aad
mov
lcall
das
jno
movsb
add
sbbl
xchg
mov
xchg
push
inc
test
push
cmp
stos
push
inc
xor
sbb
fbld
in
dec
scas
dec
lea
ret
or
cltd
andl
lcall
out
hlt
lcall
in
movsl
int
cmp
js
push
push
stos
inc
adc
test
ror
add
lock
pop
imul
cmc
jecxz
mov
or
mov
sbb
and
movsl
xchg
addb
inc
scas
je
jne
push
or
sbb
and
xchg
aas
sahf
sub
and
xchg
push
dec
xchg
nop
fldl
aas
pusha
lcall
sbb
fldenv
xlat
sub
mov
subl
js
mov
xchg
aam
jno
cmpsl
inc
jb
cmp
in
test
cld
push
adc
outsl
sbb
xchg
setne
jne
in
mov
xor
addb
sbb
pop
fbstp
data16
pushf
dec
add
lods
push
lods
adc
fdivl
es
lret
popf
mov
jnp
sub
iret
ret
jno
mov
mov
loopne
cmp
stc
add
sub
push
mov
clc
aad
or
add
xor
dec
cmpsb
jg
inc
negb
adc
push
out
rcll
xorl
pop
test
shl
push
jne
inc
push
ret
xchg
addr16
mov
inc
imul
sub
test
push
pop
mov
pop
dec
loope
lahf
jmp
lret
push
mov
loopne
js
and
ret
jb
cmpsl
and
jge
xor
mov
lcall
jbe
popf
xchg
leave
jb
xor
cmc
andb
inc
out
jle
add
inc
sub
sub
adc
mov
mov
add
repnz
jecxz
sahf
test
adc
pop
cld
das
iret
mov
xor
icebp
pusha
or
sub
mov
mov
iret
and
mov
mov
cli
mov
mov
daa
push
aas
lock
fdivrs
data16
fistps
les
push
icebp
xchg
in
in
mov
mov
pop
cmc
push
test
js
imul
push
push
xchg
test
or
iret
out
mov
adc
push
pop
ficompl
xor
jnp
xchg
out
popa
js
in
addb
aaa
mov
cmp
cmp
pop
sbb
push
jp
adc
arpl
lret
movsb
xabort
xor
lret
test
add
cltd
jg
mov
sbb
jno
fdivp
roll
pop
ds
dec
or
pushf
or
ljmp
adc
lods
ret
jmp
sub
je
dec
pop
or
push
mov
fdivrs
mov
jmp
in
js
repnz
ret
push
stc
adc
jg
pop
dec
or
pop
sar
mov
out
mov
icebp
shl
pop
jnp
iret
nop
or
xorl
fiaddl
jae
and
jbe
mov
xchg
jnp
lods
test
mov
ljmp
xchg
fs
inc
or
xor
out
stc
fists
icebp
fmuls
or
cld
lock
cld
fdivrs
into
mov
mov
fstl
and
cmp
fsts
jbe
xchg
outsb
ds
loop
scas
add
rcrl
inc
orl
jmp
mov
mov
icebp
sub
jmp
f2xm1
and
gs
inc
lret
inc
orb
push
sahf
or
inc
out
jb
inc
leave
add
push
mov
push
cmc
in
lret
es
pop
mov
outsb
pop
mov
jg
ja
test
in
xchg
scas
fsubp
pop
mov
jle
jp
xor
test
aad
subps
add
xor
fdivs
push
mov
lds
pushf
cltd
push
ja
pop
xchg
out
mov
or
push
jo
pop
jmp
push
lret
jle
push
mov
inc
pusha
or
fidivrl
mov
sahf
fnstsw
cmpsb
das
push
shll
xchg
pushf
mov
or
add
stos
push
inc
pop
push
shrl
ds
sub
out
jb
imul
add
push
cli
or
dec
jne
repz
ja
jno
pop
xchg
clc
jl
int3
jo
negb
cmpsb
clc
sbb
adc
in
cmp
leave
cwtl
or
rorb
dec
mov
xchg
insb
outsb
lahf
sar
cltd
ja
push
push
dec
ret
mov
das
cld
hlt
xchg
pop
fld
sahf
ljmp
mov
lods
sarl
iret
lcall
mov
ss
xchg
popa
int
stc
jg
pop
fnsave
clc
sbb
subb
or
pushf
imul
xchg
repz
mov
mov
adc
cmc
push
aaa
xor
pop
sti
test
mov
lret
adc
mov
mov
je,pn
and
mov
jp
cmc
mov
out
decb
xor
and
out
sub
loopne
dec
adc
sbb
repnz
mov
repz
mov
das
push
push
rol
adc
and
push
or
lea
daa
sbb
mov
and
outsb
xchg
repz
xor
mov
dec
dec
sbb
in
imul
das
sub
lods
movsl
jmp
mov
push
movsb
mov
xchg
or
aam
mov
jge
mov
mov
insl
jno
movsl
and
cmc
jnp
fnstsw
mov
push
pop
in
inc
jl
js
int
sbb
inc
mov
add
sbb
dec
inc
lods
push
sti
ret
scas
or
push
adc
or
shlb
cmp
xor
insb
jl
xor
and
xchg
pop
mov
jge
dec
mov
add
call
mov
jle
outsl
dec
sub
cs
pushf
repz
cmpsl
repz
sub
fsts
fadds
popa
xrelease
imul
mov
sbb
xchg
jnp
data16
call
ljmp
fdivr
dec
test
ret
add
xchg
movsb
or
aad
mov
push
into
mov
mov
pushl
addr16
jmp
xor
les
dec
cli
sbb
bound
push
xchg
mov
popf
sub
mov
dec
xchg
mov
bound
pop
pop
adc
mov
xchg
je
test
jp
popa
adc
dec
adc
mov
inc
cmc
out
adc
cmp
sahf
ds
test
cmp
or
xchg
es
add
xchg
push
clc
xchg
in
push
adc
sahf
push
mov
jnp
rcl
cltd
sbb
xor
inc
sub
mov
iret
add
mov
iret
sub
add
push
jb
xor
adc
das
inc
pop
xor
sahf
dec
repnz
lahf
inc
lods
add
icebp
hlt
sub
movsl
outsb
popa
lock
push
lahf
jae
lods
outsb
add
idiv
mov
sub
or
negb
push
mov
ja
sahf
out
add
ret
mov
lea
mov
dec
sbb
push
cmc
sub
in
cmpb
jb
and
pop
das
or
xchg
mov
xor
jno
ret
pop
sub
inc
push
or
or
adc
inc
inc
test
jle
mov
adc
mov
cld
push
push
dec
jge
repnz
dec
cmpsb
in
add
jmp
cmc
add
mov
xchg
mov
push
inc
push
dec
mov
les
aam
adc
mov
cmp
jge
push
stos
xchg
cmp
in
test
imul
mov
orl
jle
jbe
shll
inc
mov
pushf
cwtl
inc
push
out
jnp,pn
lock
popf
subl
add
jo
jns
icebp
sbb
mov
push
and
sbb
mov
lods
add
jecxz
shl
shll
shll
inc
test
xchg
je
mov
xor
fisubs
mov
adc
sarl
test
mov
es
lock
jmp
sti
push
movsb
ret
adc
fwait
loope
es
push
in
jecxz
jmp
dec
ret
jno
std
or
cmp
or
in
std
and
xor
repz
jecxz
jmp
stc
or
aaa
lods
or
leave
popa
int3
out
xor
push
xchg
adc
lcall
idivl
mov
jge
lds
fsubr
out
cltd
dec
pop
cmp
pop
flds
ja
scas
cld
cmp
mov
sub
cmp
decl
sub
xor
dec
jb
ja
jg
pushf
je
or
iret
push
out
cmp
repz
ror
inc
jae
orl
xchg
ficompl
movsb
and
sarl
dec
out
repnz
xor
sbb
mov
jge
das
or
clc
adc
mov
mov
arpl
push
push
jge
popf
push
sub
jp
scas
inc
test
cmpsb
shrb
push
sub
sbb
push
aad
cli
xor
mov
ja
pop
out
nop
dec
add
xchg
out
jp
mov
jo
mov
out
jb
adc
dec
fwait
xor
lret
mov
adc
stos
sbbl
push
into
fidivrl
arpl
fdivrs
add
inc
push
imul
repnz
xchg
outsl
push
push
aad
cwtl
dec
fisttpl
fsubrs
mov
xlat
pop
addr16
mov
inc
lahf
push
aam
pop
das
ljmp
movsb
insl
iret
mov
lcall
jbe
pop
aas
call
insl
xchg
xchg
mov
test
mov
inc
addr16
xchg
mov
xchg
mov
pop
jae
cmp
cmp
pop
pop
adc
cmp
clc
imulb
out
pusha
dec
adc
insl
xor
jge
in
mov
lret
sbb
mov
rcrb
cmp
sbb
cmp
mov
scas
cmp
inc
xchg
ja
fistl
clc
lahf
inc
imul
or
test
pop
js
dec
xor
sbb
fists
push
rolb
in
or
inc
test
addl
repz
lods
lds
xchg
movsl
in
push
stc
adc
pop
clc
lods
jmp
jne
inc
loopne
and
mov
pop
or
aas
cli
inc
push
cmp
pop
neg
mov
test
iret
jnp
push
lods
add
xorl
imul
cwtl
and
stc
adc
cmc
cmc
das
adc
out
mov
imul
lret
stos
movsb
icebp
sbb
mov
aas
jecxz
push
popl
or
lahf
sarl
mov
jl
leave
adc
out
shrd
out
jge
mov
or
add
inc
out
int3
aam
iret
insl
jmp
bndldx
cs
test
xor
addl
adc
loope
push
mov
adc
cld
cmpsb
sbb
imul
gs
shll
call
enter
daa
aaa
out
mov
xchg
cwtl
jne
add
loop
mov
push
sbb
je
cmpb
push
fmull
sti
mov
es
lcall
jle
jne
js
xchg
pushf
mov
jns
xchg
pop
pop
decl
push
fdivs
and
inc
mov
pushl
mov
insb
scas
dec
sbb
filds
jge
out
dec
daa
ljmp
mov
dec
stos
or
aas
popf
sub
es
nop
sahf
add
out
ret
lea
sub
ficoms
jmp
inc
stos
push
xor
aad
outsb
outsl
leave
es
push
incl
pop
sbb
ficoml
ficompl
cmpsb
in
bound
or
outsb
push
out
xor
lods
inc
lods
jp
xchg
sarl
adc
cmp
xor
and
mov
push
ljmp
sbb
repz
dec
gs
test
inc
mov
xor
mov
lahf
jge
movsb
xor
add
addl
mov
nop
jns
daa
mov
cltd
push
sub
movsb
push
cwtl
mov
jg
mov
fstpl
movl
xor
cmp
dec
add
jno
jp
ja
fidivrs
add
adc
mov
pushl
stos
leave
push
jge
mov
sbb
xchg
or
lock
andl
push
xlat
add
hlt
adc
push
add
insl
pop
outsl
in
xchg
dec
lret
sbb
adc
or
cmp
movsl
push
pop
sbb
push
push
xlat
inc
pop
popf
daa
push
push
or
std
enter
add
cmpl
icebp
aas
sub
push
int
or
arpl
mov
arpl
int3
or
mov
cmp
and
xchg
xchg
enter
jl
sbbb
push
insl
mov
loopne
divl
mov
lock
arpl
aaa
push
psrad
loopne
push
jne
mov
xor
xorb
enter
adc
daa
mov
xchg
xchg
aad
imul
sbbb
in
loopne
pop
xchg
scas
cld
lret
aaa
sbb
loop
xor
cli
sbb
fiadds
jl
aam
push
rcl
jae
nop
push
cli
and
insl
outsl
push
or
les
xchg
shrl
push
add
sbb
stc
jns
shll
push
dec
js
sbb
aad
add
call
pop
push
sarl
pop
stos
les
sbb
pop
cmp
pop
jo
in
and
mov
int3
cmpl
imul
loop
xchg
adc
pop
out
repnz
jne
or
lods
jmp
push
mov
push
lea
sub
inc
adc
lds
test
aaa
scas
out
mov
out
cs
jb
pop
stos
mov
adc
loop
sbb
add
test
xlat
pop
dec
ds
push
cmp
arpl
ljmp
fmull
fdivl
sub
mov
cmp
xor
or
jbe
repz
dec
sub
test
push
xor
fcoml
mov
push
xor
test
scas
scas
mov
push
mov
icebp
jle
dec
or
push
sub
rcrb
dec
inc
dec
push
jns
out
sbb
fsub
fsubl
lea
dec
xchg
dec
mov
mov
sub
lea
cmp
fistl
or
lcall
push
dec
icebp
push
fwait
mul
in
arpl
cmp
outsb
into
imul
out
popl
mov
lock
adc
pop
lahf
testl
jns
cmp
pop
into
pop
mov
ret
mov
out
push
mov
mov
aaa
fcmove
lods
in
out
popa
adc
into
sbb
fwait
push
jo
xchg
fisubrs
inc
or
pushf
cmp
cmp
bound
cmp
xchg
popa
lahf
negb
xchg
cmc
inc
and
aam
or
test
std
ret
mov
dec
cmp
sub
adc
fidivl
adc
dec
es
xchg
xor
sbb
mov
fstl
into
inc
mov
aam
mov
cmp
xlat
pop
out
adc
pop
int
inc
mov
jno
popa
xchg
cli
test
jmp
mov
mov
sbb
jmp
jmp
ss
xchg
inc
mov
mov
sub
dec
es
mov
decb
xrelease
out
inc
pop
pushf
push
push
sub
fistps
push
lods
inc
es
pop
mov
cs
cmpsb
dec
arpl
int
test
mov
dec
add
pusha
pop
jmp
dec
sahf
jae
add
pop
sbb
or
dec
adc
mov
mov
scas
js
sbb
fidivrs
adc
lahf
or
push
xor
call
gs
std
aam
leave
pop
pop
xchg
movsb
xor
arpl
dec
adc
test
sbb
popa
test
and
pusha
add
rorl
pop
orl
pop
jmp
daa
push
lds
pop
jmp
push
adc
adcl
lret
decl
insl
shll
ljmp
mov
faddl
sbb
movsb
cmp
inc
cmp
mov
popf
jno
testb
mov
cmpsl
and
scas
jns
add
es
imul
dec
jns
mov
pop
inc
mov
adc
lods
dec
mov
jae
pop
xor
cmp
push
in
mov
shrl
cmpsl
icebp
in
jae
nop
mov
jecxz
movsl
jl
xor
mov
cli
mov
rclb
lret
jae
mov
pop
or
enter
lret
jns
insl
inc
cmc
inc
mov
arpl
push
in
ljmp
test
mov
loopne
ret
mov
mov
data16
cmpsl
in
aaa
shr
mov
sbb
xchg
test
or
jbe
mov
add
pop
mulb
dec
dec
cmc
add
adc
dec
push
incl
push
sbb
and
repz
pusha
aam
loop
mov
int3
push
leave
cmp
mov
ss
test
leave
iret
jl
add
cwtl
add
sbb
je
outsl
dec
out
sub
cwtl
xlat
and
add
or
add
jne
std
pop
into
cmp
scas
mov
clc
mov
add
pop
lret
cmc
xor
jns
jno
or
inc
cmp
sbb
or
test
lea
cmpsb
shl
cmpsl
outsb
xchg
and
add
jo
loopne
xchg
dec
jne
out
and
push
push
cli
jmp
sbb
mov
adc
fdivl
mov
and
pop
ss
pop
or
sahf
int3
xchg
fsubr
lds
sbbb
pusha
test
mov
xchg
rcll
rclb
fs
adc
adc
jp
push
push
outsb
fcomps
jle
cli
imul
ret
xor
push
das
ror
test
imul
stc
add
inc
leave
push
movsl
pop
push
push
mov
std
loopne
or
push
or
sbb
pushf
push
jle
test
xor
out
add
insl
test
push
push
add
js
pop
add
lahf
cmp
rcll
mov
mov
push
outsb
xlat
adc
sbb
mov
cwtl
xchg
orb
lea
fs
fucomp
gs
in
je
jno
add
jge
pop
scas
adc
mov
push
dec
dec
cli
sbb
pop
pop
sbb
xor
xchg
testb
cmp
cmp
mov
test
repz
hlt
dec
inc
bound
cmp
push
push
add
adc
sbb
pop
pop
mov
inc
roll
roll
enter
pop
sbb
xchg
scas
scas
push
mov
pop
aad
lds
inc
and
inc
sbb
add
cmpsb
push
cltd
bnd
sbb
sahf
mov
add
in
inc
jp
push
dec
insb
push
sub
push
popa
sub
jg
sahf
loop
aam
push
divb
dec
in
mov
pop
pushf
arpl
lock
ss
jo
sub
adc
in
and
jne
and
pop
insl
sub
xor
push
pop
push
lret
sbb
loopne
xchg
ret
sbb
sbb
imul
fcomp
add
sub
shll
pusha
xlat
les
test
sub
cmpsb
ljmp
mov
scas
adc
push
clc
sub
jne
lods
int3
jne
aad
out
iret
sbb
mov
add
xlat
push
test
ljmp
pop
in
stos
cli
ds
gs
sub
sub
jecxz
hlt
popf
das
pushf
mov
mov
dec
mov
jge
loope
dec
push
inc
inc
ficoms
add
xorb
stos
xchg
mov
into
push
push
push
hlt
push
mov
outsl
fnstsw
popf
mov
sub
mov
test
dec
or
pop
hlt
sub
lods
movsl
xor
es
test
xchg
ss
add
loop
adc
mov
lea
push
push
dec
hlt
repnz
push
or
rcll
xor
loopne
mov
push
call
push
aas
and
mov
ret
sub
dec
and
pop
or
je
and
in
push
movsl
in
mov
aaa
ja
dec
adc
js
jo
cmp
js
mov
sbb
outsl
xchg
xor
sub
inc
cmp
jb
and
mov
and
xchg
xor
cmp
jmp
add
push
xchg
add
pushf
insl
dec
insb
and
pop
jmp
ja
sbb
mov
sub
testb
gs
cmpsb
es
in
je
in
sbb
dec
std
lock
xlat
lahf
pop
jecxz
xor
aad
lods
je
push
and
outsb
pusha
enter
decb
in
sub
jle
adc
adc
fsub
lea
aad
xchg
sbb
cmpsl
movsb
pop
pop
lods
in
cmc
fdiv
or
adc
push
xor
popf
mov
dec
add
sbb
fs
cmp
imul
fstps
or
mov
fdivs
mov
inc
mov
cmpsb
sti
sub
out
push
dec
loopne
sub
std
sbb
test
jle
notb
mov
fisubrs
cmp
push
jmp
pusha
push
jmp
cli
lret
outsl
into
inc
roll
andb
lea
push
aaa
lock
loope
mov
mov
cwtl
adc
xchg
fistps
scas
xchg
cmpsl
inc
sbb
bound
jle
sbbb
addr16
push
mov
leave
inc
leave
push
das
adc
mov
jbe
aas
in
popa
lods
jb
cmp
jo
or
stos
clc
dec
in
sbb
stc
jae
sub
pop
mov
ljmp
sarb
es
add
push
clc
push
cltd
push
jmp
jmp
jge
adcl
add
insb
jo
icebp
dec
int3
in
mov
ss
xchg
insb
add
data16
adcl
cmpsl
loope
sub
dec
mov
dec
mov
or
mov
call
cli
add
push
jnp
mov
cmc
or
push
add
int3
frstor
mov
outsl
jmp
and
rcrb
jno
mov
je
shlb
enter
ret
mov
pop
mov
cmp
ss
stos
aam
jl
mov
int3
fisubs
xchg
jp
mov
ds
pusha
add
xchg
lea
adc
cmpsl
insl
addr16
mov
mov
fisttpll
or
aam
push
push
mov
mov
test
cli
test
lahf
repz
cmpsb
jl
cmpsl
sbb
lods
out
ret
icebp
stos
pop
and
xor
loopne
addr16
or
and
push
sbbb
xor
ljmp
mulb
dec
fistpll
iret
mov
mov
xchg
aas
out
cs
jns
decb
fadds
fucom
mov
mov
or
aad
fsubrs
push
addl
ret
xchg
mov
xchg
fstp
and
scas
ficompl
sbb
cli
mov
or
fcoml
loop
orl
and
out
dec
fstpt
stc
push
js
rcl
jmp
sahf
xchg
and
aad
pushf
cmp
xchg
cmc
mov
test
add
pop
mov
outsl
loopne
pop
fldcw
pop
shlb
mov
sub
iret
ret
ljmp
mov
lock
xchg
popf
outsl
dec
xchg
or
out
mov
add
jecxz
in
pop
out
in
jbe
cli
dec
cmp
push
mov
cmp
sti
mov
jns
xor
cwtl
rcrb
mov
int
pushf
fbld
fiadds
mov
stos
outsb
sbb
ret
nop
imul
rcrb
adc
ja
sub
mov
xor
cmp
mov
inc
rorb
imul
pop
push
gs
inc
insb
pop
push
push
out
xchg
cwtl
inc
sbb
pop
movsb
loop
xchg
pusha
mov
jge
mov
fwait
inc
orb
icebp
in
call
mov
push
fstl
sub
dec
cmc
movsl
lcall
sub
imul
mov
addr16
cmp
insl
lods
fldenv
cmc
inc
test
test
jbe
out
popf
sbb
cmp
or
lods
dec
dec
add
cli
mov
cmp
popf
insl
ds
andb
and
jo,pn
push
jnp
inc
imul
inc
pop
xor
add
addr16
fwait
push
mul
rolb
push
fsubrs
xlat
sbb
adc
les
add
shrb
int3
ljmp
or
and
mov
or
mov
arpl
xchg
scas
test
sbb
fwait
sahf
mov
xchg
mov
dec
and
bound
lret
lds
jnp
std
hlt
xor
and
fcomi
lea
jecxz
loop
and
mov
mov
cmc
pop
adc
push
xor
mov
add
lret
jle
outsl
xor
mov
jo
push
dec
adc
cmp
push
lret
xorb
adcb
sub
pop
and
imul
sbb
negl
aam
push
xchg
sub
imul
or
sub
imulb
shll
pop
imul
mov
lea
xchg
mov
and
mov
xor
out
sbb
pop
hlt
fbld
dec
pop
mov
mov
mov
out
xor
std
jns
add
sub
ret
jl
hlt
mov
stos
das
sub
mov
mov
mov
or
mov
mov
push
inc
adc
hlt
out
ja
scas
sub
pusha
mov
mov
mov
enter
dec
iret
and
jge
fucomp
int
ds
xchg
stos
sub
fsubl
mov
sarb
int
pop
push
mov
sub
cmp
mov
sbb
and
outsb
xor
shll
popa
xchg
cmp
pop
scas
xor
insb
lcall
dec
mov
pop
dec
jl
jno
fildll
fnstsw
sarb
xchg
push
call
aaa
jo
mov
popa
dec
out
int3
mov
lret
ret
inc
jecxz
repnz
mov
inc
jbe
push
jne
xchg
in
and
or
jno
pop
cmp
cwtl
fcmovbe
pusha
jge
insb
aaa
fsubrl
dec
shlb
xchg
int3
popf
add
jmp
aam
pusha
inc
notb
sti
jns
sbb
adc
mov
push
neg
fs
or
clc
jnp
push
inc
fmull
jmp
popf
loope
ret
cmpsb
leave
out
xchg
ja
xchg
dec
mov
mov
pop
sbb
mov
subl
xchg
inc
jp
sahf
push
mov
xchg
and
sub
pop
pop
mov
mov
adc
loop
adc
sbb
mov
jmp
mov
fistpll
and
fsubl
sahf
mov
jns
mov
rolb
js
insl
mov
je,pn
sbb
add
push
add
add
push
iret
cltd
aaa
stos
fstpl
inc
mov
in
jno
inc
aam
aas
jecxz
inc
xchg
data16
push
popa
insb
mov
js
xorb
out
mov
xchg
shll
cmpsl
into
mov
add
movsl
movsb
jge
sub
aad
inc
mov
clc
loope
mov
jp
fsub
fwait
ret
loop
xor
dec
xchg
jo
fwait
popf
mov
gs
push
jo
or
test
pop
popf
hlt
cmpb
cmp
sub
stc
xchg
pop
out
outsl
push
repnz
leave
mov
cmpsl
insl
insb
adc
mov
insl
imul
and
jecxz
sbb
insl
add
clc
ss
in
push
jne
jb
push
lret
arpl
dec
and
cltd
or
fmul
insb
xorb
imul
icebp
inc
out
mov
add
or
sahf
xor
icebp
cmp
xchg
lock
jno
test
cs
addb
push
cs
xchg
mov
insb
loopne
in
iret
or
mov
movsl
xor
push
pop
aam
icebp
into
xchg
loopne
mov
pop
inc
cmpsb
int
adc
fsubs
mov
or
repz
jb
outsb
fsubrs
in
dec
jmp
in
lahf
add
mov
or
das
int3
cmpsb
int3
ljmp
add
jmp
cs
std
dec
mov
pop
push
mov
push
mov
cmp
int
popf
adc
xchg
cwtl
sub
inc
out
push
sbb
xor
lods
jnp
loopne
or
or
pop
dec
mov
xor
cmpl
jge
jle
mov
flds
pop
or
cld
in
inc
fs
push
adc
push
push
nop
xor
mov
imul
jg
pop
outsb
nop
pop
mov
insl
jne
pop
data16
mov
lock
xchg
push
hlt
cmp
test
sbb
xor
mov
inc
js
or
push
add
mov
jns
std
loop
mov
orb
jns
std
mov
movsb
inc
mov
lahf
or
push
addr16
out
cli
lock
xchg
or
test
push
add
mov
cmp
sahf
inc
sbbl
ja
stos
cwtl
ljmp
cs
lahf
dec
js
jmp
in
mov
jae
lds
es
icebp
pop
in
nop
ss
ret
mov
or
or
mov
fisttpl
popf
lds
aad
loop
add
push
iret
into
imul
lret
sbb
pop
insl
out
clc
or
mov
inc
jb
aaa
popa
dec
pop
lds
adc
jne
mov
pop
mov
mov
dec
xor
and
dec
sbb
ja
mov
in
mov
arpl
mov
jns
shrb
imul
scas
mov
imul
or
aaa
fcmovbe
mov
pop
push
xor
jle
cmc
rorl
mov
and
cmpsl
sar
lahf
adc
out
fidivs
mov
sub
inc
mov
push
xchg
js
mov
sbb
ds
push
lcall
imul
sahf
adc
lods
cmp
repnz
imul
enter
rorb
lahf
sub
push
pop
add
ret
fistpl
fcmovu
and
pop
jne
adc
and
add
mov
stos
repnz
stos
pop
push
cmp
push
lods
xchg
xchg
lcall
enter
adc
mov
inc
mov
repz
scas
stos
out
jp
repnz
dec
test
sub
inc
adc
mov
mov
adc
ret
pop
cmp
push
mov
fs
mov
sub
add
lock
mov
mov
add
pop
mov
ja
xchg
push
xor
inc
adc
aad
addr16
push
movsl
mov
cmp
cmpsl
lret
rolb
test
sub
jg
sub
idivl
fcmovb
sbb
aam
lcall
add
add
mov
xchg
inc
push
fldl
xchg
clc
add
stos
xchg
sub
mov
hlt
clc
or
sbb
cmpsb
adc
push
cmc
out
out
cwtl
dec
shrl
lret
int
sti
inc
test
sbb
clc
pcmpgtb
test
xchg
sbb
bound
dec
mov
aad
jl
xorb
insb
and
lret
pop
xchg
and
div
repnz
sub
lods
cmpsb
ret
fsubrs
bound
mov
sub
sbb
repz
pusha
jmp
dec
jo
fildll
jge
dec
pop
cmp
out
mov
js
pop
lret
add
and
dec
outsl
enter
push
add
cmc
call
and
dec
js
mov
push
adc
lock
pop
xor
lahf
xchg
lret
pop
ret
and
mov
dec
sahf
je
push
add
and
ficomps
int
pop
and
mov
xor
dec
std
lea
jns
pusha
xchg
jae
cmp
imul
insl
les
adc
pop
outsb
lcall
sbb
hlt
sub
dec
std
enter
aas
sub
mov
pop
mov
sub
push
stc
insl
int3
sbb
adc
rorb
push
fdivrl
sub
xchg
mov
int
lods
inc
stos
insb
scas
mov
lret
add
cltd
int3
or
push
push
andl
add
xchg
lods
sub
sbb
xor
jbe
icebp
or
test
scas
loope
adc
inc
adcb
pop
pop
jecxz
jnp
lcall
jb
mov
mov
pop
jnp
insb
sti
mov
dec
inc
push
mov
pop
pop
pusha
gs
cmp
aad
cld
cmc
fimull
dec
xchg
mov
lods
jp
mov
xchg
jae
sbb
repnz
pushf
sub
cld
cmp
mov
in
mov
and
mov
rcrl
mov
jg
cld
adc
stos
sub
jo
dec
out
clc
int3
lahf
and
test
jo
xchg
mov
in
push
data16
pusha
loopne
lock
repz
mov
and
xchg
push
nop
xchg
mov
jae
add
xor
stos
stos
scas
pushf
test
ret
aas
mov
or
in
mov
push
lods
int
out
adc
ror
aad
and
push
das
xor
xor
and
add
mov
leave
insl
fsubl
or
inc
popa
hlt
jmp
in
xchg
dec
nop
popf
mov
aas
mov
test
or
or
xchg
sub
mov
xchg
cmc
in
movsl
push
sbbb
mov
cwtl
mov
dec
mov
mov
das
sbb
sub
push
dec
jns
cs
sahf
mov
push
push
cmp
cmpsl
cmpsl
and
mov
xor
pop
out
mov
push
outsb
xchg
pop
sbb
adcl
mov
adc
jae
int
push
std
sub
inc
repz
pop
cmpsb
cmpb
mov
gs
jne
mov
sub
xchg
or
stos
ja
pop
dec
mov
inc
mov
or
pusha
ss
push
mov
pop
test
outsl
outsl
shll
idivb
lods
mov
out
inc
dec
push
das
ficoms
scas
xor
or
subl
lods
pop
sub
xchg
or
ljmp
stos
mov
cmpsl
xchg
push
xchg
pop
ds
push
lcall
stos
xchg
stc
inc
ja
xchg
imul
sub
xor
push
sub
jge
push
pusha
test
xchg
in
xchg
loopne
pop
jmp
shrl
popf
imul
ds
cmp
and
cmp
dec
sub
cmp
pop
int3
jecxz
fwait
stc
lods
mov
push
or
add
mov
gs
push
cmp
push
jo
fisubrl
or
lods
dec
push
lahf
outsb
adc
push
divl
fadds
fsts
push
xlat
pop
cwtl
sti
push
xor
out
aaa
and
repnz
jb
push
test
inc
mov
loopne
out
das
jp
outsl
mov
push
movsb
call
push
or
es
icebp
ret
mov
sti
cmpsl
cmp
fsincos
jbe
add
pop
push
cwtl
adc
cmp
loopne
push
mov
ret
adc
mov
repz
subb
inc
sbb
jge
sub
shll
sahf
pop
imul
fwait
or
dec
cld
mov
ds
inc
cltd
adc
add
fisttpl
add
jno
pop
sub
mov
out
ljmp
adc
adc
icebp
push
shlb
inc
repz
dec
pop
push
ja
loope
inc
xor
pop
or
inc
pop
dec
gs
les
fcompl
insl
sbb
inc
mov
adc
xchg
mov
inc
add
lcall
loop
nop
inc
mov
and
and
inc
movsl
mov
orl
leave
loope
sub
xchg
xchg
sbb
jmp
movsl
or
push
js
lock
out
push
mov
ljmp
pushf
out
jae
cmp
jmp
lret
xchg
ljmp
rorb
fldcw
sbb
mov
add
add
xor
push
cltd
sub
ret
call
or
sub
xchg
fimuls
aad
inc
cmp
enter
sub
add
mov
pop
pop
jno
pushf
sub
jne
adc
dec
shrl
cmp
pushf
iret
add
dec
add
lcall
xor
popf
dec
sub
test
mov
insw
stc
xor
daa
dec
sbb
push
add
ret
mov
stos
ret
xor
ljmp
into
fwait
push
mov
jle
rolb
fdivr
xor
add
add
sub
mov
sbb
dec
clc
into
movsb
inc
push
xchg
sub
int3
xor
cli
das
xchg
leave
out
dec
cmp
pop
rclb
ret
mulb
add
mov
or
sbb
in
adc
xchg
es
mov
pop
out
cmp
lret
push
pop
bound
xor
popa
sarl
cltd
test
jecxz
push
lds
ja
inc
rcrb
shll
das
movsb
jl
cltd
xchg
jmp
and
in
loope
mov
dec
je
scas
adc
mov
inc
add
je
movsb
aaa
hlt
mov
mov
xor
mov
mov
sub
pop
je
insl
inc
sbb
rcrb
scas
xchg
loopne
sbb
pop
roll
mov
mov
rcl
push
mov
mov
scas
div
repz
or
jno
xchg
test
sbb
fisubl
mov
addr16
mov
scas
add
xchg
and
lock
stos
xor
pop
xchg
sub
sbb
or
iret
int
aam
stos
cli
mov
push
cmp
imul
lods
sub
mov
arpl
enter
mov
xor
sbb
mov
mov
xchg
push
shr
stc
enter
ret
cmpl
jno
mull
mov
lret
jg
sbbl
int
rcr
xchg
mov
addr16
es
or
xor
cmpb
mov
pop
sub
pop
adc
negl
enter
or
pop
pop
int
mov
dec
jbe
mov
dec
add
mov
mov
xor
push
mov
xor
or
inc
pop
cmc
xchg
mov
cltd
fcmovbe
mov
ljmp
add
test
movsb
outsb
cmc
mov
test
xor
mov
jo
fwait
dec
push
mov
out
mov
jge
cmpsb
sub
inc
mov
int3
data16
popa
ss
mov
cltd
mov
in
and
mov
inc
and
aam
pop
or
xor
lret
sahf
daa
xchg
sub
jmp
push
popa
sub
jecxz
pop
cs
adc
aam
hlt
cmp
fbstp
pop
js
and
addr16
bound
sbb
fwait
pop
lods
lods
int
inc
pop
test
arpl
and
imul
repnz
cmp
lret
lcall
sbbb
push
repnz
push
mov
icebp
xor
xchg
int3
mov
daa
bound
dec
sbb
into
lods
dec
pop
fs
into
test
sti
or
sbb
fwait
in
lds
inc
lret
push
das
ss
mov
jo
insb
int3
mov
lret
mov
mov
sarb
sub
test
mov
lahf
rorl
push
subb
test
xor
incl
inc
push
testb
push
and
adc
jmp
sbb
enter
fwait
das
sbb
mov
ljmp
cmp
xor
repnz
inc
stc
sub
xchg
xchg
sbb
call
testb
mov
int3
inc
or
and
mov
xor
mov
push
sub
inc
lods
push
mov
and
int
ljmp
pop
ja
cmp
mov
push
pop
lock
adc
push
sub
in
daa
add
inc
imul
leave
dec
dec
adc
jo
push
dec
dec
arpl
int
lea
hlt
jp
sbb
lds
sbb
adc
xor
hlt
push
add
bound
mov
add
jb
lret
add
push
jl
scas
cld
mov
fucomip
pushf
movsb
xor
andl
int
popf
sti
adc
pushf
das
dec
ss
rcll
mov
adc
popa
pushf
and
iret
aam
jne
dec
pop
lock
es
jle
shrl
scas
add
mov
jg
sub
adc
xor
iret
cli
dec
lahf
in
mov
int
out
mov
mov
push
pop
int
add
pop
cltd
lret
cmp
and
push
clc
pop
out
jae
jmp
add
inc
lahf
mov
lock
or
adcl
outsl
icebp
es
add
push
in
aad
cmp
push
scas
stc
mov
and
pop
push
rorb
cmp
ds
lret
cmpsl
outsb
mov
lods
repnz
je
outsb
popa
lods
shr
test
xor
or
pusha
or
ficoms
bound
sti
daa
push
out
aad
xchg
dec
fstpt
xor
out
jge
mov
adc
rorl
in
aad
sarb
test
add
push
loop
cmp
es
mov
push
xor
jne
scas
lea
cmpb
cltd
rcrb
dec
cmc
dec
adc
xchg
xchg
clc
les
jb
scas
and
test
aaa
pushf
jae
jp
ljmp
cs
xchg
test
mov
gs
jae
aam
dec
repnz
dec
roll
ja
roll
insl
mov
mov
sbb
mov
jmp
jmp
frstor
inc
dec
int
lret
into
and
popa
lret
adc
dec
shl
loopne
int
ret
pop
icebp
je
cmc
jns
bound
clc
xchg
ljmp
rol
out
adc
inc
lods
sub
loopne
jle
jno
sub
mov
cs
gs
jmp
mov
cmpsb
mov
loopne
add
cli
sbb
xchg
cli
rcrl
add
clc
pop
jg
push
push
dec
outsb
xchg
push
xchg
cwtl
xchg
and
dec
sbb
xchg
sub
dec
frstor
jnp
out
es
shrb
cs
not
adc
stc
inc
fwait
xchg
dec
dec
adcl
mov
jg
jle
test
push
jb
jnp
leave
mov
and
imul
jb
jno
andl
adc
out
imul
pop
pop
add
mov
ljmp
addb
imulb
sub
fistl
cmpsb
inc
mov
test
add
out
out
gs
es
scas
push
repz
shlb
nop
xor
mov
xchg
and
xchg
fs
je
push
adc
sub
mov
movsl
int
les
or
xchg
fmuls
shlb
es
adc
call
or
push
cwtl
mov
leavew
stos
hlt
aaa
sbb
mov
mov
xchg
out
jo
cmpsl
or
js
jl
inc
sub
mov
cmpsl
jne
mov
jae
xor
aas
mov
pop
pop
repz
sub
dec
or
pop
out
cwtl
outsl
dec
jmp
aad
hlt
clc
xorl
pop
mov
fisubl
call
leave
lods
mov
xlat
mov
jo
shl
insb
mov
xor
add
idivb
mov
sbb
push
xchg
vpunpckldq
push
mov
inc
aad
in
test
sub
sub
cmp
popf
inc
into
inc
push
pop
xchg
leave
shl
push
mov
add
xchg
fildll
idivl
mov
enter
jg
imul
or
popa
lods
pop
or
icebp
mov
mov
pop
xchg
inc
lret
sbb
loopew
mov
test
popf
ljmp
pop
ret
fadds
cltd
xchg
cltd
dec
enter
jl
mov
jbe
sbb
sub
xchg
outsb
inc
fistpll
outsb
sbb
cmp
orb
fistl
push
addb
mov
aam
test
rorb
aam
fmuls
add
pop
insl
cmp
xchg
xlat
sub
xor
rorb
push
xchg
rolb
xlat
add
mov
pop
mov
ja
fsubl
bound
mov
or
mov
or
xchg
xchg
popf
mov
cltd
std
mov
fisttpll
xor
jecxz
cmp
idivb
push
icebp
jbe
shrl
adc
popf
in
sbb
in
jmp
lret
xor
call
push
outsl
xchg
jb
jns
lods
test
add
jmp
mov
fwait
ss
fprem
push
mov
inc
ja
pop
xchg
pop
and
daa
xor
xlat
dec
dec
pop
jo
pop
cltd
idivl
cmp
fwait
and
aad
push
in
inc
or
int
push
dec
mov
imulb
push
loope
lahf
popa
cltd
sub
fisubrs
pop
jmp
hlt
addr16
xchg
lcall
mov
fcomps
cmp
cmp
pop
imul
ja
mov
pop
xchg
mov
dec
js
lcall
dec
sbb
mov
loop
jl
cmp
jecxz
testl
sbb
clc
xchg
push
mov
loop
or
iret
aad
lret
fstps
stc
and
repz
fsubr
xlat
or
mov
mov
nop
sbb
outsl
mov
cltd
cmp
inc
fistpll
jno
pop
sbb
add
rorl
subl
daa
jmp
push
sub
push
xchg
cmc
pushf
mov
sbb
sub
push
inc
sbb
cltd
ja
mov
jl
mov
jmp
inc
adc
arpl
cld
int3
ret
cmpsb
shl
inc
loopne
cmp
mov
gs
xchg
ficoml
cli
jp
lea
pop
sbb
or
adc
je
lahf
add
sarb
mov
mov
adc
jae
cld
or
gs
inc
test
mov
lret
out
jecxz
adc
mov
lods
add
call
sub
add
inc
sbb
movsl
loop
sbb
push
aas
inc
or
in
mov
xchg
sub
fisttpll
std
cmp
dec
outsl
hlt
lcall
stos
lahf
imul
mov
sbb
cmp
or
lcall
and
mov
clc
fdivrl
fldcw
xor
loop
jno
loopne
xchg
icebp
xor
jge
mov
jbe
into
jmp
imul
shlb
daa
cmp
inc
fdivrs
in
lods
sub
movaps
fnstsw
push
sbb
mov
adcl
outsb
fsubrl
fbstp
sub
into
lret
js
xchg
fildll
out
xchg
and
sbb
mov
insb
cld
pop
mov
mov
and
fwait
dec
sbb
cmpsb
jecxz
das
pop
loope
ja
cmp
cmp
aad
nop
sub
pop
movsl
cltd
or
add
cmpsb
mov
icebp
nop
mov
repnz
decl
cmc
lods
ds
push
divb
js
sub
sbb
rorl
arpl
and
and
loopne
and
scas
mov
dec
sub
xor
push
push
inc
and
pop
aad
pop
inc
mov
mov
cltd
fstl
xor
pop
jb
dec
push
mov
jo
pop
mov
das
stc
lahf
xlat
mov
lea
xchg
fs
xor
test
pop
sahf
jae
add
or
test
or
imul
adc
and
and
push
sarb
jp
adc
mov
push
arpl
hlt
loopne
cli
mov
out
jb
sarl
xchg
jp
aad
add
hlt
xchg
fwait
mov
pop
pop
push
outsl
es
and
arpl
loopne
cmpb
mov
pop
aam
and
jg
mov
roll
jb
lret
push
xchg
xchg
imull
mov
inc
int
cmp
sti
add
jne
ds
cmpsb
shll
xchg
test
stc
mov
push
pop
pop
ljmp
and
lds
add
sti
in
xlat
scas
lcall
push
mov
dec
lea
cmp
mov
mov
test
sub
xchg
gs
pop
leave
out
jl
or
loope
outsl
sbb
push
movb
push
imul
or
mov
repnz
popf
push
rcll
enter
movl
ljmp
imul
xchg
shlb
pop
inc
inc
out
lock
ror
sbb
test
and
jno
inc
fcoml
les
and
into
data16
inc
lock
fcmovbe
cmp
pushf
cmp
inc
pop
dec
mov
cmp
sub
or
xor
cmp
pop
adc
lods
pop
cmp
pop
aaa
sub
sub
lock
xchg
sub
lock
shl
lret
fbld
push
jge
mov
xor
jo
pop
xchg
or
dec
popa
push
cwtl
xchg
popa
aad
icebp
les
and
cmpl
addr16
and
xchg
stc
shrb
sub
jmp
pop
outsl
mov
push
dec
jmp
jge
es
scas
mov
lock
ret
and
fcompl
cmpb
mov
adc
adcl
fs
lahf
inc
xor
and
incl
das
cld
fmuls
fxch
mov
insl
arpl
fisubrl
add
mov
stc
sarb
push
and
mov
xlat
sbb
imul
sbb
add
and
sub
xor
mov
pop
sti
inc
xchg
cmp
stos
ret
enter
sub
rsqrtps
push
sbb
pop
adc
sub
push
fisubrl
cmp
in
mov
test
fsubrp
aas
mov
inc
adcl
shll
stos
jle
into
rcrb
insb
adc
fsub
sub
outsb
mov
aas
or
nop
mov
adc
add
inc
jp
fnstsw
inc
and
les
pop
and
fs
adc
daa
or
jmp
out
loop
ret
sbb
mov
imul
cltd
aaa
sbb
loopne
xchg
add
ja
leave
addr16
test
data16
lret
jl
imul
cmp
movswl
push
mov
or
jmp
and
xchg
je
std
outsl
pop
or
mov
jmp
cmc
popa
scas
cmp
sbb
or
lea
movsl
mov
arpl
push
push
popf
outsl
insl
or
cwtl
mov
test
cld
push
jns
shrb
sub
shlb
pushf
aaa
arpl
jg
ja
ja
outsb
inc
mov
lea
mov
inc
sti
cwtd
cmp
in
push
mov
mov
mov
mov
loopne
sbb
adc
mov
sub
repz
and
in
or
inc
nop
mov
arpl
out
mov
ja
adc
gs
add
clc
or
sbb
popa
xor
mov
es
and
cmpb
popf
xchg
cli
xchg
out
repz
ret
test
cmp
mov
adc
neg
mov
inc
pushf
dec
or
nop
aad
pop
add
cmp
div
jp
inc
cmp
xchg
out
cmp
mov
rorb
fiadds
scas
mov
mov
or
push
or
dec
xorl
xor
xchg
frstor
mov
mov
fsubs
xor
mov
loopne
cmp
push
sbb
shll
and
sahf
ja
adc
jmp
xor
mov
repnz
dec
push
cmp
std
ss
fistps
scas
xchg
mov
inc
mov
xor
dec
jbe
cmp
mov
popl
cmc
add
or
and
push
and
add
repnz
lds
arpl
lahf
mov
fstpl
sub
ret
cltd
cld
add
xchg
fs
pop
push
in
sbb
clc
push
adc
fwait
icebp
clc
divb
rcrl
mov
adc
pop
sbb
mov
xchg
inc
cmp
cltd
data16
test
jmp
popl
mov
xchg
insb
incl
sbb
ficompl
sbb
fisttpll
int3
mov
mov
mov
pop
sarb
scas
or
cmp
cmp
fisubs
and
lret
jbe
rol
xchg
dec
and
sbb
scas
xchg
std
sub
mov
xchg
repz
aas
pop
xor
pop
lret
pop
xchg
neg
in
dec
subl
mov
in
pop
dec
inc
popf
push
test
inc
out
in
arpl
jecxz
pop
in
es
std
jl
cmc
scas
xorb
and
xor
into
lds
int
sbb
adc
push
jne
cwtl
pop
bound
adc
mov
jmp
fbstp
mov
xchg
stos
fcoml
notb
out
jle
addl
cwtl
xor
rorb
cmp
cmp
xor
mov
call
insb
dec
mov
ret
dec
ss
out
push
mov
iret
add
xchg
fisubrs
int
push
fiaddl
popf
push
sub
xchg
and
jae
pop
inc
cmp
sahf
sbb
hlt
js
jb
into
test
loopne
push
rcll
xchg
test
jb
or
aaa
xchg
stos
dec
jecxz
into
leave
push
and
or
dec
cmp
hlt
jo
jl
xchg
mov
cli
pop
lcall
add
pop
mov
mov
jmp
mov
fwait
dec
out
adc
push
aaa
cli
push
nop
cmp
adc
add
mov
rcll
add
push
pop
cmp
push
popa
stos
push
adc
adc
mov
pusha
push
insb
negb
lds
jbe
mov
or
leave
xchg
xchg
test
sbb
mov
or
pop
inc
jne
out
mov
pop
call
xlat
and
xchg
dec
movl
cmp
rorb
aaa
cltd
test
ljmp
shrl
xlat
cmp
jl
insl
fnstenv
cld
pop
lds
mov
test
fucomip
shrb
neg
jmp
mov
out
xchg
movsl
or
add
pop
jae
aad
roll
lret
cmp
or
add
inc
pushf
mov
ret
sub
xchg
jmp
xor
icebp
mov
add
cli
fisttps
inc
scas
ljmp
pop
inc
add
pop
and
mov
idivb
sbb
lea
lahf
orl
mov
test
push
in
clc
mov
push
mov
out
addw
sub
and
insl
inc
ret
or
sbb
arpl
clc
pop
and
test
fadds
xor
mov
js
clc
shrl
notb
fistl
movsl
jne
cmpsb
dec
fldl
jbe
mov
pop
mov
push
push
subl
int3
inc
push
aas
xor
inc
fadds
pop
clc
data16
xchg
pop
sbb
mov
mov
outsl
daa
mov
sub
test
mov
fwait
mov
loope
jae
lret
popf
jo
add
dec
fistpl
xchg
cld
or
sti
and
psllq
les
jb
int
fsub
inc
out
adc
mov
mov
pop
out
enter
testb
adc
push
cmpsb
sahf
sbb
add
movsl
sub
ja
je
ficomps
sub
adc
dec
test
cld
loopne
scas
push
jecxz
mov
inc
xor
mov
je
mov
idivb
cmc
stos
es
into
push
push
jg
data16
push
xlat
xchg
mov
xlat
clc
mov
jecxz
or
sub
pop
push
pop
add
adc
enter
pop
mov
cmp
and
and
xchg
xor
jne
mov
pop
div
cld
cmp
fnsave
ja
and
sub
or
es
mov
or
outsb
adc
jo
mov
dec
and
dec
mov
jne
add
test
test
repnz
jb
add
mov
push
or
cmpsl
and
push
push
dec
push
pop
xor
ss
mov
lods
insb
cld
push
and
out
int
out
repz
cltd
scas
in
inc
in
push
clc
dec
push
jns
dec
xchg
lahf
dec
jecxz
lea
push
fwait
jnp
insb
xor
aaa
les
sub
divb
adc
add
out
cmpsb
or
cmp
xchg
sub
gs
pop
nop
roll
shlb
add
repnz
data16
pop
jge
xor
lcall
mov
sub
roll
loopne
cmc
and
je
iret
stos
xor
rcrb
cmpsl
adc
inc
mov
testb
cli
cmpsl
inc
filds
ss
addl
fimull
adc
lret
cmpsl
cmp
mov
mov
mov
test
cmp
or
jp
sub
adc
arpl
mov
cmp
pop
bound
push
cmpsb
in
test
xor
arpl
dec
xchg
dec
and
xchg
shrb
mov
mov
ds
mov
pushf
out
mov
push
mov
pop
sbb
in
loopne
adc
sbb
sarb
mov
mov
pop
es
cwtl
into
mov
sbb
sbb
sbb
out
xor
andb
xor
xchg
movsl
sub
sahf
mov
and
mov
mov
sub
aaa
jmp
pusha
xchg
cli
sub
lods
add
fs
sahf
aaa
nop
lods
imul
dec
xor
mov
sarb
je
mov
xchg
jne
add
jge
pop
push
push
out
mov
adc
clc
jp
repz
orb
shlb
fwait
add
mov
mov
cmpsl
add
and
stos
subb
push
jmp
cmpsl
ret
and
mov
pusha
movsl
sub
fldcw
xor
mov
out
cltd
xor
add
push
add
inc
dec
mov
loopne
pop
loopne
cld
sub
mov
or
push
or
mov
xor
jge
sbb
loopne
iret
jb
rcr
jmp
out
pop
sub
push
out
push
lods
xor
xor
add
stos
xor
mov
pop
loop
test
fldcw
mov
adc
mov
inc
cmpsb
lea
aad
push
sbb
jg
mov
or
jl
loopne
jae
add
outsl
xor
aaa
imul
fs
pop
loop
dec
mov
leave
stc
adc
xor
fcmovbe
cmp
mov
in
adc
ljmp
sbb
adc
mov
cltd
bound
mov
test
add
shlb
add
add
lea
xchg
push
xor
cmp
orb
jb
push
and
mov
cmp
inc
inc
mov
data16
and
outsb
cmc
mov
repz
mov
jmp
adc
sbb
push
sbb
and
jne
mov
add
dec
imul
mov
add
mov
lahf
movsl
arpl
in
cmpsb
and
adc
pop
mov
pop
or
jns
shrl
and
in
andl
pop
sub
or
out
add
jmp
pop
push
inc
adc
mov
out
cltd
mov
fwait
adc
push
sqrtps
fidivrs
addr16
mov
movl
repz
cli
pop
les
clc
add
test
mov
addb
lods
inc
push
test
cmp
loope
sbb
adc
incb
mov
lds
daa
movb
inc
inc
add
bnd
bound
cmc
lret
mov
jo
cmp
inc
movsb
loope
push
sti
js
cwtl
jb
popa
dec
lock
arpl
in
and
lret
sub
out
sbb
fbld
adc
inc
xor
mov
sar
in
dec
xor
daa
movsl
mov
out
mov
dec
sbb
add
int
mov
mov
jnp
lods
mov
or
xchg
cld
mov
xor
sub
pop
outsl
push
xor
shr
or
lret
iret
fisubrl
xchg
dec
insb
push
mov
cmp
dec
lret
adc
mov
mov
lods
fimuls
leave
jb
mov
mov
repnz
subl
cli
js
jae
cmc
cltd
cmpsl
icebp
loop
fwait
adcl
ret
pop
rcll
jge
xchg
aaa
cmpsl
pop
inc
cmp
mov
repz
xchg
and
test
sub
pop
enter
repnz
and
test
ss
or
addl
jb
mov
lock
mov
jbe
add
insl
ret
pop
mov
pop
fnstenv
scas
call
daa
fmuls
lds
dec
adc
push
cmp
mov
aam
mov
jns
inc
mov
or
jne
xchg
mov
dec
and
test
and
dec
icebp
dec
inc
out
arpl
jo
xor
vzeroupper
mov
mov
outsl
or
pop
repnz
out
and
inc
lods
cmp
out
movsb
mov
xlat
push
into
arpl
ficoml
je
mov
sub
pop
sbb
adc
stos
je
mov
repz
fisubrs
filds
pop
popf
xchg
dec
out
or
xchg
adc
push
jle
add
jg
add
push
lds
mov
fsts
outsb
cld
xor
clc
in
int3
pop
in
or
cmpxchg
xchg
sbb
cmc
cmp
xchg
and
cli
add
daa
jle
ss
flds
add
sbb
pushf
cwtl
jmp
mov
rorl
ret
mov
push
xchg
adc
jo
sub
jl
and
pop
mov
inc
es
add
add
mov
int
inc
pop
inc
ss
sbb
mov
mov
rcrl
jle
jo
enter
repnz
mov
cld
adc
mov
add
and
jg
xchg
mov
adc
push
lods
outsb
rcrl
push
mov
add
aad
sub
out
dec
rcrb
imul
sub
push
jge
fisttpl
fdivs
mov
loop
xchg
jl
xchg
fmuls
and
iret
jo
mov
in
jg
cmp
adc
xor
loop
or
fmul
rcll
jo
mov
cmpsl
inc
scas
dec
inc
sbb
xor
out
sub
pop
xor
dec
pop
repz
jmp
dec
dec
cmp
push
mov
ja
adc
mov
mov
pop
adc
ds
imull
jge
sti
push
inc
cmp
mov
push
push
xchg
or
sub
xor
outsl
inc
shlb
test
push
jo
fisubrs
ret
pop
fs
popa
fisubs
mov
fmuls
mov
or
fwait
cmp
sub
repz
add
je
insb
testb
pushf
xlat
xchg
cmp
in
sbb
data16
or
jmp
xchg
add
jl
inc
out
mov
mov
rorl
add
pop
rolb
cmp
inc
ficompl
sbb
cwtl
jbe
shr
or
and
or
rclb
daa
in
insl
xchg
sub
sti
add
int
jbe
mov
and
cmp
dec
and
into
dec
hlt
call
mov
imul
mov
jg
xchg
int
ret
xchg
dec
rorl
fsubrl
jb
add
lret
cmp
jns
addr16
cmp
jno
mov
subl
jg
push
jae
mov
ret
mov
js
xor
test
shrb
jge
mov
adc
dec
aam
and
std
or
jo
add
inc
cmpsb
cmp
and
clc
in
cmp
cmc
es
lds
ds
xor
mov
popa
call
xchg
in
fadds
xlat
nop
insl
sub
pop
ret
stc
lock
div
sbb
ret
das
xchg
clc
or
popl
mov
jmp
mov
mov
out
mov
push
pushf
lret
mov
and
jl
jecxz
repz
fcomi
mov
lock
lahf
pop
jns
aaa
pop
sbb
and
xlat
fs
movsb
mov
sbb
dec
std
sub
out
mov
cltd
sub
leave
insl
xchg
or
or
call
jae
mov
sbb
cli
lds
add
and
jb
enter
std
lods
mov
loope
xchg
and
push
out
cmp
inc
cmp
push
outsb
adc
push
hlt
loop
stos
pusha
lods
inc
ss
jg
ret
or
loop
adc
fisubrs
add
test
sub
test
out
jl
xchg
rcrb
cmp
mov
sub
jnp
mov
cs
jae
hlt
and
fwait
xchg
sahf
push
daa
xor
icebp
lret
cmp
push
in
jmp
lea
test
inc
cmpsl
test
mov
mov
mov
ret
cmp
or
jecxz
pop
loope
gs
push
stos
in
push
sbb
dec
mov
aaa
pop
adc
lcall
cmp
pop
mov
int
mov
push
jle
jnp
inc
or
outsl
jge
push
negl
mov
inc
jmp
mov
mov
movsl
js
mov
inc
andl
dec
gs
out
mov
cwtl
xchg
jmp
leave
loope
mov
fidivs
loop
xchg
mov
and
jbe
and
icebp
adc
ffreep
pushf
adc
ds
mov
jmp
or
dec
call
repnz
fdivrp
in
fdiv
std
vprotd
js
stos
inc
mov
flds
scas
pop
add
sub
imul
int3
andb
mov
cmp
movsb
flds
add
jl
cmc
cmpb
and
pop
insl
pop
push
les
pop
fwait
icebp
adc
fidivs
fneni(8087
leave
pop
xchg
fdivr
inc
stc
mov
bound
dec
cmpsl
sub
sub
fdivrp
xchg
pop
push
daa
shll
add
jmp
imul
test
repz
jmp
push
mov
dec
xchg
fistps
orb
test
pushf
mov
adc
mov
mov
gs
jmp
fidivl
stos
sbb
shll
in
jo
mov
sbb
mov
mov
jg
lahf
jo
out
pop
outsl
xchg
lods
xchg
mov
mov
adc
cmp
int
andl
dec
pop
movsb
sbb
add
mov
imul
shll
rolb
push
in
or
scas
lahf
push
out
jmp
sbb
jp
ds
cmp
inc
pop
mov
mov
adc
popa
xchg
outsl
stc
mov
or
xor
jl
pop
jnp
mov
lds
jl
test
inc
mov
cmpsl
pop
xor
insl
test
test
mov
sarl
dec
mov
or
fistpll
mov
stos
sbb
popa
or
pop
push
test
cmp
fdivrs
xor
fwait
popf
adc
cs
pop
repz
and
mov
aaa
mov
or
xchg
arpl
jge
popa
cli
pop
adc
out
pushf
and
loopne
nop
es
xchg
pop
xchg
rcrl
cmp
xor
mov
aam
jg
mov
ss
popa
cmp
mov
xchg
leave
stos
inc
dec
mov
subl
xor
push
dec
jecxz
jnp
xchg
cmpsb
cmp
aam
sub
adc
fidivl
sbb
icebp
arpl
mov
xor
test
fidivl
cld
mov
fst
inc
test
icebp
dec
inc
sbb
push
stc
popa
sti
aaa
sbb
xchg
dec
insl
adc
mov
pop
push
or
adc
rolb
inc
ja
adc
call
xor
mov
cli
mov
or
push
pop
mov
inc
das
sti
insl
pop
dec
xchg
sbb
and
das
inc
loop
sbbb
xor
pop
jo
add
ja
add
and
mov
jo
mulb
mov
lods
xor
or
pop
dec
pop
es
int
pop
fisttps
std
pop
das
push
fcomps
test
jns
pop
mov
imul
push
fcoms
adc
xchg
ret
sahf
mov
popa
es
in
mov
out
pop
leave
insl
ljmp
and
push
loope
outsb
or
pop
in
icebp
inc
mov
rorl
xchg
pop
sbb
bound
jg
push
mov
data16
fwait
adcl
aaa
add
lods
xlat
popf
sbb
mov
xor
popa
sti
lods
loop
xchg
xchg
mov
cmpsl
jno
cmp
data16
xchg
fisubl
xchg
je
imul
iret
popa
mov
add
shll
pusha
scas
je
ljmp
out
push
inc
jmp
stos
fs
mov
mov
lds
sbb
mov
jecxz
mov
pop
in
iret
cmp
mov
sub
mov
scas
mov
cmp
xorb
or
push
dec
faddl
es
mov
sub
aaa
jecxz
sti
jmp
inc
outsl
adc
dec
jmp
fs
lock
addps
inc
outsl
jns
hlt
fs
dec
fs
xchg
push
and
lea
incb
pop
add
fcompl
sbb
ficoml
push
sbb
rclb
push
rolb
jnp
bound
mov
movsl
je
add
fmul
ret
mov
inc
cmpsb
adc
fimuls
in
shlb
in
inc
cmp
jb
dec
cmp
das
jbe
inc
loope
leave
enter
jge
sub
mov
in
xchg
scas
scas
dec
xor
fisubl
into
fildll
clc
frstor
jbe
lea
repnz
sbb
fdivrs
dec
pop
add
mov
xchg
daa
fcompp
xor
jae
inc
mov
stc
sub
and
sbb
add
dec
popa
stos
cmp
in
mov
iret
pop
mov
mov
mov
out
sarb
testb
cmpsl
lea
shrb
dec
fidivrl
add
lcall
mov
popf
imul
js
sub
movsl
dec
aad
pop
test
cmc
jnp
lret
or
pop
jo
jl
call
lret
sub
pop
cli
mov
repz
cld
mov
dec
cli
les
mov
cmp
add
add
jno
sub
or
sbb
adc
insl
sbb
out
mov
je
ret
adc
jo
lahf
and
dec
aas
fcoml
outsb
mov
aam
aad
imul
xor
mov
fwait
xor
fcomp
je
inc
sahf
jge
data16
adc
fidivrs
adc
gs
arpl
add
mov
or
das
xchg
andl
lret
and
push
sbb
ds
mov
inc
popf
adc
sbb
adc
and
or
insb
sahf
add
sub
orb
scas
roll
in
pop
cmp
xorb
pop
sbb
adc
rcrl
inc
repz
adc
adc
push
das
sub
xor
jno
repnz
cmpsl
push
sbb
nop
xor
leave
fisttpll
loop
or
pop
and
and
pop
xor
ret
cmp
xchg
add
sbb
cmp
mov
ljmp
cmp
and
pop
mov
lods
xchg
mov
sub
adc
iret
dec
out
xchg
mov
mov
jge
ljmp
sbb
jne
mov
mov
dec
lret
xchg
xchg
lods
lret
xchg
iret
fiaddl
cli
jb
rol
pop
xchg
sti
mov
dec
pop
or
cmp
mov
push
mov
fs
fwait
loope
dec
push
sub
pushf
sahf
jno
mov
imul
rcrb
fwait
enter
imul
push
enter
jo
adc
cmpb
iret
enter
inc
fistpl
adc
mov
shrl
jl
leave
fwait
pop
sbb
inc
repnz
testb
loope
jl
scas
push
jo
jp
pop
inc
pop
pop
std
popa
mov
out
shr
lods
hlt
sbb
lret
dec
push
in
bound
jb
sub
mov
fwait
sbb
xchg
andb
notb
adcb
lret
jne
addr16
and
adc
sbb
mov
ljmp
push
loope
cmpl
movsl
add
daa
add
jbe
test
in
outsb
push
xor
ret
scas
test
cld
jle
lret
xchg
cmpsl
push
or
xchg
sbb
popl
lea
es
mov
mov
imul
ss
arpl
les
or
mov
mov
pop
sbb
gs
lods
inc
js
push
lcall
and
in
mov
pop
test
adc
inc
aaa
lret
jge
pusha
cli
aaa
dec
pop
mov
sbb
repnz
xchg
cmp
mov
and
cmpsb
out
adc
imul
in
xchg
mov
inc
xchg
xchg
sub
out
dec
xchg
push
mov
imull
sbb
push
shlb
add
in
stos
mov
and
roll
adc
call
cmp
popa
cmp
xchg
std
add
sub
or
cld
rcl
test
jg
mov
fistpl
adc
push
add
clc
or
sbb
dec
imul
dec
es
mov
ja
sub
sub
fwait
clc
lret
jne
pushf
icebp
int
sbbl
dec
sub
aad
scas
xor
inc
or
jg
daa
adc
out
out
xlat
cwtl
push
cmp
shll
push
xorl
push
dec
movsb
jae
test
dec
add
jmp
sbbb
lods
ljmp
xor
out
jg
addr16
or
orb
and
pop
insb
adc
sub
add
lret
or
jns
call
cmp
scas
inc
sbb
lods
sub
icebp
scas
adc
hlt
xchg
dec
sbb
les
sub
adc
insl
out
aam
dec
dec
xorl
sub
add
test
adc
inc
add
and
cwtl
or
dec
lea
pusha
cmp
and
pop
pop
das
sarb
jmp
push
and
push
into
sub
ljmp
jmp
mov
test
shlb
push
cltd
fisubrs
jae
sbb
std
push
pushf
sub
inc
adc
xchg
test
sbb
or
es
fsubl
inc
xchg
sbb
enter
or
call
neg
rol
jmp
mov
cmp
test
in
mov
sbb
aas
inc
or
xchg
pop
cmp
jecxz
mov
add
les
nop
sub
inc
loopne
inc
daa
pop
inc
fucom
aam
dec
xchg
dec
in
leave
jbe
scas
cli
jmp
mov
ret
pushf
ja
out
into
cltd
das
inc
loope
inc
pusha
push
sub
roll
mov
fisttpll
icebp
fidivrs
add
pop
xor
sub
sbb
inc
cs
adc
sub
mov
mov
icebp
mov
dec
fmuls
call
fistps
mov
rcll
mov
pop
push
and
xchg
pop
cmp
test
adc
sub
jb
into
iret
or
fstpt
cmpsl
shrl
lret
cmp
and
inc
lock
lds
movsb
pop
bnd
mov
or
jle
ss
dec
sbbb
mov
mov
cmp
pop
jl
lds
inc
mov
iret
sahf
adc
movl
mov
bound
xchg
outsb
fmuls
cmc
add
push
out
leave
push
and
fimull
xchg
insl
dec
fistl
xchg
por
inc
stos
shl
cmpb
repnz
lret
int3
add
lods
in
mov
js
hlt
or
and
fucomp
je
pop
add
dec
fs
int3
jo
mov
mov
mov
adc
mov
xchg
ss
aaa
fnstsw
shr
sub
pop
xchg
push
pusha
in
dec
sub
inc
adc
add
shll
adc
push
adc
loopne
mov
push
dec
popf
fidivrs
fildl
pop
mov
imul
das
push
inc
dec
pop
pop
fcmovbe
orl
jo
dec
xor
in
lock
and
insl
clc
fstpl
add
repz
jmp
jmp
mov
iret
fidivs
enter
ljmp
mov
test
hlt
loop
xor
dec
fdivs
mov
add
mov
mov
setg
or
xchg
cld
inc
push
jge
cltd
stos
inc
shlb
mull
push
call
and
mov
arpl
cltd
mov
xor
or
aad
call
xor
mov
dec
into
aam
adc
ss
adcb
mov
sbb
repnz
popa
cmp
cmpsb
sub
mov
mov
jne
jge
das
jmp
adc
inc
jnp
sbb
hlt
gs
in
push
and
repz
push
cmp
mov
loope
dec
dec
push
and
xor
mov
xchg
aam
xchg
pop
sub
sub
into
iret
js
sbb
jns
lods
iret
adc
pop
clc
sbb
push
mov
mov
mov
clc
loopne
mov
xchg
outsl
sbb
sub
sti
mov
push
push
into
loopne
lret
lea
add
fbstp
cmp
lock
clc
xchg
mov
in
xchg
jge
es
dec
and
mov
mov
pop
rorl
in
ss
in
mov
ret
mov
push
push
insb
lea
js
jge
fsubs
add
movsb
pop
jno
mov
add
dec
push
lcall
incb
and
lret
sbb
inc
fwait
cld
dec
push
data16
inc
xchg
dec
fisttpl
cmpsl
mov
mov
and
mov
dec
pop
fs
out
insb
xchg
lods
std
insl
mov
cld
push
mov
aam
mov
fistpl
out
imul
fcompl
jb
orb
scas
cmp
jmp
and
rol
jno
jne
loopne
dec
push
pop
sarb
mov
cld
addr16
jns
cpuid
mov
push
cmpsb
mov
sahf
pop
ds
jl
stc
fildl
sub
lahf
pop
hlt
inc
loopne
push
adc
and
jnp
sbb
out
movsb
push
mov
jl
subl
shrl
das
loop
pop
and
xor
jmp
repz
dec
and
jmp
sub
mov
jecxz
mov
sub
test
jmp
push
dec
xchg
or
adc
lcall
test
in
push
cmp
ds
lret
cmp
cmc
mov
cli
sbb
push
sbb
addb
les
into
mov
in
and
mov
movsb
mov
ds
jge
pop
clc
sub
je
mov
call
hlt
test
fadds
ror
ja
pop
fnstsw
addr16
inc
rorl
add
xchg
cmc
push
jne
add
lds
xlat
push
imul
add
sti
jmp
and
inc
movsl
sti
pushl
dec
xchg
sub
daa
cmp
or
sub
lea
adc
aad
test
push
xchg
mov
jo
mov
sbbb
rorl
jl
popf
mov
mov
icebp
jns
out
js
mov
adc
xor
std
lret
out
push
lahf
jnp
jbe
xor
pop
ret
pop
mov
fsubs
adc
push
iret
mov
and
or
sbb
ja
stc
daa
push
repz
fsubrp
arpl
mov
jnp
mov
mov
js
cltd
arpl
test
or
jb
popa
inc
shll
jo
lret
xchg
jnp
push
int3
ror
arpl
xchg
gs
test
jnp
mov
cmp
pop
push
xchg
and
xchg
push
aas
popa
das
and
aas
sbb
hlt
push
pop
jp
ficompl
stc
cmp
push
dec
loop
jge
int
das
mov
pop
pop
pop
push
and
sbb
cld
cmc
sbb
push
and
pop
mov
jmp
mov
and
jl
jb
shlb
int
pop
mov
cmpsl
mov
mov
loop
out
lods
push
add
notb
adc
into
lods
inc
orb
aas
xor
cmc
insb
push
out
mov
ficompl
cmpsl
in
idivl
xor
cs
leave
es
fwait
sbb
sbb
inc
push
push
leave
lea
test
fsubrs
lods
xor
adc
xchg
jb
fldenv
leave
jp
sbb
xchg
pop
fldenv
daa
ljmp
jno
out
imul
jno
mov
cmp
in
ljmp
adc
jg
sahf
xorl
shr
das
rolb
pop
scas
jbe
push
sahf
inc
mov
inc
fildl
cmp
jp
mov
add
out
cmpsl
mov
and
sub
mov
repnz
dec
addr16
mov
dec
cld
jne
lret
popw
mov
jecxz
aas
subl
sub
mov
sbb
loop
xor
push
and
movl
sub
orb
jmp
into
xchg
pop
and
inc
lods
cmp
sub
and
fdivl
mov
push
mov
or
xchg
out
fs
mov
push
adc
test
mov
pusha
xor
mov
jae
inc
ja
dec
fisttps
mov
dec
je
cltd
jecxz
hlt
jno
jns
xlat
mov
inc
out
or
idivb
sahf
addl
push
lret
pop
adc
repnz
sub
rclb
pop
testb
dec
es
and
xor
dec
and
lcall
ljmp
jmp
xorl
xchg
pop
mov
cmpsb
xor
mov
aaa
aam
mov
rcr
or
fs
data16
adc
gs
jne
je
subb
dec
fisubrl
push
aam
jge
pop
fiadds
clc
push
test
fwait
xorb
popf
mov
cli
xchg
insl
inc
dec
sbb
outsb
pop
push
pop
dec
data16
int3
push
cmpsb
or
ret
test
leave
adc
loope
sub
ds
lret
clc
cmpsl
push
rorb
mov
cli
mov
jo
dec
jmp
mov
mov
sti
mov
push
sarb
mov
push
push
or
sub
pop
pop
aas
fisttpll
shll
cmp
push
fsubp
into
xchg
and
dec
and
filds
or
push
inc
mov
dec
and
mov
movsb
jl
xor
lock
in
pop
dec
mov
pop
mov
adc
je
adc
sahf
test
loop
cmp
push
ljmp
xchg
int3
jns
mov
xor
cld
cmp
clc
mov
jb
test
es
cmc
mov
push
xlat
orb
xor
lcall
push
and
dec
inc
mov
cmp
mov
push
dec
shll
jns
mov
outsb
or
mov
bound
sub
int
pop
jmp
aam
pop
test
pop
js
scas
xor
mov
rorl
loop
out
mov
pop
dec
add
push
xchg
cltd
xor
outsb
add
sbb
add
xchg
call
mov
cmpsl
lret
jo
add
ljmp
mov
das
fiadds
add
in
in
sti
mov
dec
dec
sbb
xchg
dec
mov
jo
jg
movsb
lods
lods
push
mov
in
jp
cwtl
les
mov
imul
jne
mov
ret
fstpl
sti
xor
cltd
push
sbb
lahf
and
rcrb
xor
mov
aam
fbstp
mov
push
icebp
xchg
mov
mov
or
push
sbb
push
fcmovb
ret
lret
fildll
mov
out
jne
outsb
shrb
cmc
xor
or
loop
mov
add
sbb
int3
rorl
jecxz
and
mov
xchg
push
push
int3
sbb
ror
mov
pop
jp
pop
mov
in
shrb
inc
dec
push
inc
dec
jnp
mov
add
jge
mov
or
or
ljmp
and
push
sub
fsubr
out
outsl
movsb
or
mul
xor
mov
int3
add
push
or
xor
sub
sbb
cli
push
xorl
jns
leave
fdivrs
clc
fdivrp
aad
lcall
or
adc
in
add
les
movsb
push
mov
arpl
jg
popa
fmuls
imul
lods
or
or
xchg
dec
pop
mov
sbb
jne
es
jne
add
icebp
push
cmc
adc
cmc
rolb
andl
or
ret
cltd
movsl
dec
subb
mov
push
inc
adc
xchg
stc
popa
xor
negl
mov
mov
cmp
push
cmpsb
lds
push
mov
push
je
pop
out
or
js
test
pop
out
sbb
out
ret
out
mov
mov
jl
lahf
and
sbb
and
ss
cmp
loope
icebp
push
shlb
mov
mov
or
xchg
or
pop
push
dec
test
lea
and
fistpll
add
je
adc
push
add
push
xchg
jb
pop
jmp
mov
icebp
lcall
lret
sarb
push
mov
inc
inc
cmp
and
and
dec
cmpsl
xchg
inc
cld
popf
pop
jne
fcoms
mov
mov
jl
int
pop
mov
jnp
stc
std
stc
jge
xor
or
js
call
sbb
pop
push
push
mov
leave
jg
aad
cwtl
adcl
insb
imul
fwait
repnz
mov
push
insl
pop
pop
arpl
fsubl
or
lds
add
repz
xchg
mov
in
bound
jns
and
fwait
dec
pmulhuw
ret
pop
std
cltd
mov
test
push
pop
mov
mov
dec
icebp
data16
pop
iret
push
inc
lods
into
cwtl
leave
cs
inc
mov
fsubl
fsubl
mov
pop
mov
cmpsb
inc
dec
iret
nop
mov
push
addr16
push
mov
stos
xor
shll
lods
push
mov
add
scas
jnp
or
repz
xor
sub
mov
adc
mov
pop
sbbl
adc
in
xchg
adc
out
aaa
ljmp
hlt
mov
jno
pop
pusha
adc
pop
pop
xor
mov
pop
mov
push
fiaddl
out
testb
adcl
std
mov
out
cmp
test
mov
loop
dec
insb
xchg
fcompl
inc
test
xchg
pop
shrb
pop
cmp
in
push
mov
jno
cmpsb
and
cwtl
pop
imul
push
cwtl
and
dec
sbb
push
mov
mov
pop
ljmp
mov
jne
inc
pushw
jmp
jg
xchg
call
jmp
or
mov
or
out
mov
pusha
mov
dec
cmp
add
add
sub
cld
cli
repnz
push
in
inc
xorb
pop
mov
and
out
or
mov
mov
hlt
add
hlt
addr16
jbe
jne
inc
lret
and
mov
test
fsts
jnp
scas
pushf
sti
or
add
lret
jp
fsubp
adc
sbbl
push
adc
outsl
cmp
test
lea
jns
ja
nop
push
clc
push
shrb
ja,pn
xchg
das
lods
loop
and
mov
shll
jno
fs
push
pop
bound
jle
mov
pusha
aad
xor
cmpb
mov
xchg
popa
outsl
push
adc
pushf
jne
in
jle
les
jo
enter
mov
fcomps
and
dec
push
push
fimull
mov
shlb
dec
mov
fcmovbe
xchg
notb
mov
out
notb
adc
int
adc
in
repnz
pop
clc
cmp
fs
and
cmpsb
adc
mov
add
lret
ret
scas
iret
or
cmpl
ljmp
fyl2xp1
es
jmp
and
jo
inc
stc
cld
sub
jge
jne
jbe
into
leave
xchg
push
xor
push
or
mov
out
sub
lret
out
enter
filds
cmpsb
pop
jno
mov
sbb
inc
lret
push
stos
sub
sbb
popa
pop
cltd
xor
in
and
cmp
or
and
jmp
pushf
or
cmp
cs
add
mov
push
pop
stc
lahf
push
imul
sahf
jg
cmpsl
in
cmp
test
pop
mov
and
and
inc
pusha
out
pop
cmp
jae
rclb
sbb
lcall
cmc
add
pop
mov
aaa
or
daa
std
or
jno
lea
shl
stos
or
stc
jae,pn
mov
insb
pop
dec
mov
fsubp
cmp
adc
fwait
push
test
jmp
push
arpl
scas
in
push
xlat
out
loop
hlt
stos
sbb
mov
xor
push
dec
cltd
loopne
stos
clc
mov
and
and
sbb
outsl
int3
dec
jb
sbbl
xor
push
sbb
imul
addr16
pop
jp
fimuls
test
icebp
stos
fcomps
lahf
mov
pop
push
push
push
jne
jle
out
ret
addr16
adc
pop
aaa
xchg
imul
lret
pop
in
mov
fs
ficompl
subl
lods
dec
jecxz
cmp
mov
push
in
stc
js
sub
push
mov
sub
mov
dec
cmpb
mov
test
aad
fs
imul
sbb
fwait
lea
mov
add
das
ret
nop
lods
jbe
push
mov
inc
push
sbb
in
sub
or
pop
or
and
jecxz
jae
fisttpll
enter
xchg
cmpsl
pop
std
cmpb
rorl
cli
cli
andl
gs
les
imul
ss
leave
dec
enter
jno
test
xchg
fwait
repnz
jge
ret
sbb
mov
movsb
jmp
mov
inc
gs
in
js
int3
iret
shrl
cmpsl
lret
cmpb
fisubrl
cmpsl
shlb
outsb
cmp
pop
pop
fimull
scas
out
xor
or
repnz
mov
enter
and
in
mov
ret
ja
mov
lret
subl
add
and
lret
adc
nop
mov
addr16
dec
mov
mov
mul
mov
xchg
call
enter
or
and
dec
push
mov
outsl
xchg
jg
or
lret
adc
mov
inc
mov
jp
leave
dec
lock
dec
fsubl
jmp
mov
les
into
pop
bound
ljmp
cmp
adc
jne
movb
sub
add
lret
dec
push
push
xchg
cs
mulb
cltd
lret
imul
or
call
nop
cmpsl
xchg
cmp
fisttpl
inc
clc
movsb
push
out
push
inc
add
mov
rolb
pop
xchg
insb
lret
xor
gs
test
push
pop
cli
fisubrl
push
imul
in
popf
mov
sub
clc
outsl
xor
dec
or
pop
adc
enter
mov
test
push
push
inc
inc
cs
inc
out
add
or
adc
out
loopne
dec
sub
sbb
and
in
dec
jae
fcoml
bound
cmp
insb
int3
lcall
and
insb
or
rol
scas
dec
mov
int3
dec
fcomps
les
lods
fildl
in
out
test
lds
fld
push
daa
out
sahf
cltd
push
mov
cmp
insl
in
out
sub
xchg
pop
fstl
idivl
xchg
xchg
or
repnz
jo
loop
lods
sbb
xchg
pop
aas
pop
mov
adc
push
out
pop
xchg
roll
or
cs
xchg
inc
jo
jle
lret
icebp
gs
push
jge
stos
xchg
mov
fwait
inc
sbb
insl
enter
mov
cmp
sbb
sti
mov
pusha
sub
test
dec
enter
cmp
lea
rorb
pop
into
jg
mov
scas
addr16
mov
int3
pusha
pop
jecxz
push
mov
jg
push
xchg
idivb
les
or
cwtl
sub
mov
movsb
cld
sub
pop
push
jbe
cmp
dec
fisttpll
testb
fildl
cmpsl
sbb
adc
cs
mov
shrl
cld
xchg
mov
loopne
int
das
inc
aad
cmp
jns
mov
imul
mov
sbb
jge
jb
stos
xchg
shll
not
and
insb
js
std
aas
xor
or
data16
lock
pop
pop
jg
lods
pop
and
pop
lahf
or
mov
rcll
xor
sub
fwait
in
mov
iret
or
mov
stos
loope
call
scas
pop
mov
aam
and
inc
insl
movsb
flds
or
imul
jp
nop
cld
mov
push
push
xchg
and
aas
call
lods
fmulp
inc
test
popa
push
fwait
xlat
or
stc
dec
and
pop
test
insb
pop
sbb
int3
loope
mov
imul
add
dec
bound
scas
movntq
xchg
adc
les
std
jb
movsb
lods
outsl
insl
scas
sub
mov
lea
clc
out
xor
push
sub
adc
mov
les
mov
mov
pop
lock
inc
inc
add
add
call
and
push
sub
xchg
pop
pop
lcall
fldt
in
arpl
in
xchg
mov
dec
xor
in
push
std
es
dec
mov
andl
push
ficoml
adc
outsb
sti
jno
mov
xchg
pusha
bnd
int3
jecxz
shlb
mov
jg
pop
ss
ret
jg
inc
xchg
fiaddl
sbb
xlat
mov
mov
stc
imul
popa
mov
aas
loopne
dec
cmpsb
insb
and
lock
xchg
icebp
dec
cs
xchg
sbb
mov
mov
push
dec
lock
enter
cwtl
mov
stc
lods
bound
mov
rorb
outsl
sbb
mov
dec
cmpsb
add
ret
insl
stos
lock
das
jge
xchg
pop
mov
add
enter
push
push
push
or
cld
loop
xor
xor
shrl
jmp
in
add
cmpl
fbstp
inc
add
in
das
loope
sub
insb
ficoml
shrb
push
jae
leave
movsl
xor
gs
jns
mov
sbb
push
push
mov
cmpsl
dec
clc
outsl
stc
dec
mov
dec
shll
xchg
mov
pop
and
pop
add
shlb
sbb
popw
je
ljmp
dec
add
idivl
xchg
mull
mov
xor
dec
jae
subl
ja
gs
je
test
rcr
xor
sahf
cmc
mov
inc
jbe
imul
test
jl
cmp
push
mov
mov
and
aad
jp
add
sbb
jl
or
imul
cmp
sub
test
mov
jp
aad
mov
push
push
mov
lea
sbb
adc
and
fs
jmp
mov
pop
jecxz
out
hlt
loopne
and
adc
mov
xchg
pop
pop
push
push
and
jp
leave
sarb
incb
jl
push
loope
dec
mov
sbbl
add
cmpsl
cmp
mov
jp
push
pop
fnstsw
sbb
dec
test
xor
or
jno
mov
ja
std
cmc
jg
cli
mov
or
adc
std
rorl
mov
loopne
clc
dec
push
pop
xor
xchg
shll
or
lret
mov
or
notb
mulb
into
and
xor
out
inc
xchg
dec
mov
fucom
in
xor
arpl
add
pushf
shlb
lret
insl
mov
and
xchg
and
into
add
leave
ss
push
test
pop
and
push
je
sbb
cmp
adc
xchg
pop
xor
movsl
sbb
pop
jbe
cmpsb
adc
cmp
mov
arpl
jecxz
xchg
inc
shrl
shll
jb
xor
xchg
out
add
cmpsl
cmp
ss
dec
pop
pushf
fbstp
daa
in
scas
aad
jno
or
sahf
adc
jle
cmp
mov
xchg
mov
mov
sbb
lcall
mov
ja
cpuid
iret
adc
or
testl
mov
loop
and
notl
sbb
xor
loopne
jae
jecxz
gs
divb
call
pop
pop
mov
aaa
mov
jnp
jl
mov
xchg
inc
xchg
add
and
sti
and
addr16
lock
push
ja
dec
loope
inc
test
leave
out
dec
sub
cmpsb
in
sbb
imul
shlb
rorl
push
jmp
add
fprem1
mov
cld
or
in
stos
mov
fwait
inc
loopne
and
lret
lods
scas
mov
xor
pop
rcll
lea
aaa
insl
jnp
or
andb
xor
jns
popa
in
inc
sti
nop
jecxz
mov
inc
fmull
fnstcw
pop
les
inc
test
jne
shlb
or
and
and
jmp
mov
arpl
sub
mov
mov
and
cwtl
xor
fwait
sbbb
fldcw
and
xchg
push
into
setl
add
rolb
popa
add
mov
cmp
mov
dec
sti
mov
sub
cld
dec
call
sub
outsb
lfs
xchg
pop
and
fildll
sbb
mov
sti
sub
mov
pop
arpl
mov
js
aad
das
sbb
sub
push
adc
add
push
test
loope
xor
xor
mov
xor
test
xor
popa
daa
je
popa
pop
mov
xor
and
mov
leave
in
push
test
inc
mov
negb
jb
nop
sar
leave
and
es
fstps
pushf
push
dec
and
popa
jg
or
incl
or
push
pop
jnp
and
mov
das
inc
pop
call
iret
sahf
dec
sbb
lock
out
lret
mov
cmpsb
iret
mov
add
xor
ror
ss
dec
sub
enter
mov
fistpl
movl
or
ss
in
and
icebp
aam
and
and
mov
dec
pop
neg
idivl
mov
xor
or
rclb
dec
jmp
jo
pop
push
scas
and
jp
idivb
jle
out
movsl
movsb
cmp
xchg
cwtl
cmp
mov
imul
sub
inc
movsb
out
cmp
je
mov
js
inc
sub
cmp
pop
fistpll
scas
sbb
mov
pop
dec
daa
push
negb
cmp
mov
cld
pusha
xchg
cmp
popf
push
ret
adc
mov
push
xor
sbb
insl
mov
into
les
dec
xor
nop
sub
mov
xor
cmc
inc
sub
jb
and
xor
stos
mov
outsl
add
popa
loope
pop
out
lcall
mov
and
push
and
rolb
mulw
sbb
pop
std
adcl
in
test
int
shrl
sbb
movsl
cmp
push
fisubrl
push
out
push
adc
cmpsb
push
jmp
sbb
mov
enter
pop
or
push
hlt
xlat
out
sahf
cli
cmp
pop
fisubrl
pop
sbbl
fisubrs
cmp
xchg
xor
jns
int
xchg
and
sub
sbb
adc
adc
rclb
push
cmp
and
loop
push
and
mov
dec
push
jne
icebp
mov
ret
jl
lcall
or
lds
hlt
sub
movsb
fdivs
repz
mov
mov
adc
sbb
int3
and
pop
ja
frstor
mov
lds
pop
in
clc
cs
test
jbe
test
sbb
push
push
push
sbb
pushf
mov
inc
push
lods
sub
add
mov
dec
or
mov
mov
push
or
gs
sbb
insl
push
mov
xchg
jmp
into
pop
sub
rcr
dec
movsb
fwait
cli
lahf
movsb
out
add
adc
xor
sub
idiv
lds
jl
cmpl
push
mov
mov
hlt
cmpsl
ret
loop
stos
cltd
addr16
dec
sub
xchg
aam
xor
cmp
pop
mov
sahf
mov
jl
inc
ret
mov
mov
in
imul
dec
xchg
push
sub
pop
pop
xchg
into
std
out
jb
scas
cwtl
sahf
out
xor
adc
int3
mov
in
dec
jp
test
ss
ja
inc
test
cmp
gs
adc
cmc
and
cld
mov
shl
cmpsl
int3
lods
test
sub
cs
or
jge
shlb
push
xchg
xchg
mov
test
mov
or
add
dec
cmp
mov
les
stc
addr16
aam
adc
jle
push
adc
repnz
sbb
xor
aas
dec
mov
sub
popa
xchg
inc
mov
pop
pop
cmp
out
ja
mov
mov
es
push
imul
jae
or
mov
mov
jae
cli
js
les
fcmovnb
rcrl
push
mov
lods
adc
dec
rcll
mov
jp
xchg
add
lret
sub
pop
sub
fscale
mov
mov
ret
and
pop
sbb
sarl
cmp
and
or
inc
inc
push
and
xchg
repnz
inc
sub
mov
ljmp
pop
fs
repnz
add
cmpsb
aaa
push
push
je
pusha
push
iret
lods
outsl
push
test
hlt
dec
cmpsb
or
pop
xor
add
test
pop
jnp
daa
aaa
cwtl
inc
lea
dec
sub
and
popf
dec
pop
shlb
test
cmp
in
cmp
add
and
cwtl
fs
mov
dec
jle
test
mov
mov
jo
enter
test
loopne
inc
xchg
cmp
inc
add
inc
mov
ficoms
push
xor
cli
icebp
push
dec
lcall
test
xchg
push
adc
rorl
aas
xchg
mov
mov
mov
fistps
mov
data16
push
xchg
push
or
lods
jp
icebp
adc
mov
adc
xchg
and
jmp
ss
and
int3
dec
pushf
cmp
idivb
movsb
iret
sbb
mov
mov
fcoml
int3
mov
lret
sub
shlb
jns
jns
cmp
into
inc
xchg
jg
fidivrs
xchg
sub
loopne
outsb
sbb
fmul
add
into
cltd
and
xchg
cmovno
pop
loop
int3
movsl
out
push
nop
inc
aas
adc
dec
js
inc
xchg
dec
stc
call
xchg
xchg
jg
lahf
cs
add
es
sub
cmpsb
cmp
adc
adc
inc
sub
xor
sub
popa
cld
xlat
je
pop
shlb
sub
test
push
dec
push
addr16
inc
mov
repnz
lds
xor
mov
vpsubusb
fsubrp
out
pop
jae
mov
stos
sahf
cmp
xor
movsl
cmp
ja
jge
inc
insb
fwait
push
adc
outsb
add
stc
inc
jl
arpl
ja
mov
adc
inc
fs
jl
shrb
mov
mov
mov
inc
repz
pop
inc
pop
mov
and
adc
faddp
test
inc
lcall
mov
iret
xor
xchg
jns
pop
mov
jle
adc
and
ja
dec
or
pop
aam
data16
cld
test
out
shl
sti
cmp
sti
enter
pop
sbbb
mov
fists
or
popf
es
pop
sbbb
das
imul
mov
out
mov
in
push
xor
stos
mov
test
cmp
jns
push
jmp
cmp
pop
adc
add
cli
push
ljmp
mov
adc
call
cmp
mov
nop
mov
or
inc
in
push
ss
arpl
add
orb
mov
subl
ja
push
dec
loop
lock
xor
dec
sahf
xor
dec
sub
dec
fstl
test
add
mov
add
lahf
jae
aas
test
lea
dec
sar
dec
fs
push
adc
or
out
mov
mov
andb
xchg
fimull
and
popf
dec
iret
mov
or
dec
cmpsb
repz
xor
ja
push
lods
lds
inc
out
or
dec
movsl
xchg
movsl
lea
or
in
jle
adc
cwtl
push
or
jp
bswap
sbb
cltd
repz
stos
xchg
xor
ds
insl
lods
int3
sub
sbb
sbb
jo
xchg
les
jge
popa
mov
sbb
sahf
xor
or
jne
call
imulb
cmp
in
sbbb
leave
pop
repnz
filds
pop
mov
xlat
or
scas
aam
sti
sbb
mov
out
or
jne
sub
inc
test
pop
fldl
in
inc
jne
inc
mov
cmp
xchg
test
mov
adc
mov
dec
xorb
lret
aas
in
mov
out
scas
pop
pusha
pushf
mov
popa
test
jl
push
xlat
push
mov
lods
rcrb
shlb
mov
sahf
xor
push
push
mov
sub
mov
xchg
insl
pop
pusha
inc
imul
push
mov
or
adc
or
js
adc
imul
xchg
in
out
pushf
cmp
aas
es
push
cld
xor
int3
jecxz
stos
pop
sbb
mov
jp
in
iret
sub
in
cmpsb
dec
repnz
divb
fsubr
sarb
dec
xchg
xchg
xchg
push
aaa
fstps
xor
insb
jno
addr16
mov
pop
hlt
pop
pop
sub
js
xor
in
cmc
sbb
or
jmp
pop
mov
xchg
cltd
mov
loopne
lds
hlt
int
push
push
stc
jmp
pop
clc
adc
ljmp
cld
mov
cmpsl
bound
out
mov
push
mov
jecxz
xor
push
mov
mov
stos
sbb
enter
js
or
pop
mov
pusha
cmpsb
mov
cmp
xor
sti
jbe
xor
sub
pop
sti
adc
xchg
sti
jnp
lds
outsb
in
cmp
outsb
lods
xor
add
pushl
pop
andl
pop
mov
in
pop
out
adc
inc
loop
lods
pop
daa
inc
push
hlt
roll
mov
cmp
xchg
jo
dec
mov
jnp
hlt
sub
imul
insl
stos
sub
mov
imul
jg
lcall
loop
pop
push
dec
pop
test
addr16
xor
ds
push
or
sub
mov
xor
push
push
stc
lret
push
sahf
leave
pop
rolb
push
xor
daa
dec
dec
bnd
xchg
inc
imul
sbb
imul
xor
mov
icebp
ret
push
cmp
sbb
repz
mov
xor
sbb
pop
inc
inc
jb
push
icebp
push
out
jecxz
aas
jp
mov
and
adc
dec
jle
mov
xchg
xchg
negl
enter
cmp
dec
add
mov
mov
cmpl
or
ds
fdivrs
dec
outsb
andl
inc
or
mov
dec
sub
and
in
out
inc
inc
xchg
and
sub
insl
xlat
adc
daa
sub
xchg
jecxz
cwtl
pop
es
outsb
xchg
adcl
dec
push
outsl
mov
adc
mov
jmp
dec
cmp
imul
je
mov
push
and
add
gs
push
daa
sahf
pop
sbb
push
jbe
inc
scas
fcomi
jp
cmp
sub
cmc
fmul
pushf
pop
mov
aad
popa
push
push
scas
neg
enter
jae
fnstcw
int
jge
sub
fdivs
out
ficoml
lret
outsb
mov
in
lret
dec
neg
sahf
fimull
inc
jle
icebp
test
jmp
adc
pop
adc
push
sbb
adc
sbb
insl
jmp
gs
pop
jns
sti
sub
nop
fwait
sbb
inc
or
mov
inc
cs
jmp
loopne
in
mov
fstpt
test
adc
pop
sbb
mov
fildl
and
and
pop
into
mov
in
fnstsw
jb
cld
pop
lods
insb
mov
aam
dec
pusha
and
mov
dec
cld
insb
jl
or
mov
adc
lcall
xor
divl
push
adc
out
inc
int3
jno
sbb
aad
loop
aad
notb
or
mov
mov
outsl
adc
test
add
in
fs
cmp
mov
mull
mov
pushf
mov
jbe
std
jecxz
movsb
rcrb
or
cmpsl
shrb
cmp
push
lahf
daa
inc
iret
notb
xlat
add
mov
std
xorl
nop
shlb
daa
iret
push
mov
int3
pop
out
adc
repnz
mov
jmp
or
clc
clc
divl
es
push
jne
adc
bound
add
cmp
bound
insl
xchg
arpl
das
fistpll
mov
pop
decl
bound
aaa
insl
in
gs
aas
lret
jle
xor
mov
mov
ficompl
add
mov
test
les
xchg
mov
push
jo
sub
lahf
lods
roll
jmp
mov
inc
cmc
pop
add
adc
leave
sbb
lcall
stos
shl
gs
and
sub
stc
cmp
dec
cmp
loop
ds
and
iret
imul
xor
mov
sbb
mov
in
mov
mov
jo
xchg
repnz
pop
lidtl
cli
mov
and
jnp
pushf
sbbl
lcall
inc
mov
fwait
mov
pop
test
inc
jle
mov
push
enter
fistpll
pushf
jmp
loop
pop
das
ds
std
mov
lahf
popf
cwtl
ret
add
rcrb
stos
int
dec
fnstsw
mov
imull
fisubl
add
aaa
out
and
xchg
jno
scas
les
add
lods
mov
popl
adc
mov
sarl
adc
dec
sti
xor
ret
xchg
xchg
mov
mov
jge
dec
loope
pop
add
add
test
dec
xor
ret
lods
int3
sti
pop
icebp
jle
mov
dec
add
xchg
mov
arpl
push
stc
mov
test
sbb
push
add
in
jnp
roll
stc
inc
push
lods
pop
cmp
testl
cli
outsl
scas
mov
clc
pop
nop
jp
pop
js
xor
and
adcl
iret
push
pop
andl
mov
rol
dec
push
lock
mov
sbb
mov
xchg
rol
xorb
bound
xor
aas
adc
lret
cmp
nop
stos
adc
adc
mov
sub
shrb
cwtl
pop
pop
xchg
cmpsb
jg
or
and
jo
pop
mov
and
pop
push
push
or
aaa
jb
xor
push
daa
in
ss
cs
push
addb
imul
jo
sbb
push
lcall
cmc
xor
std
xchg
xchg
push
xchg
test
test
jmp
lea
daa
or
xlat
mov
or
mov
xchg
xor
je
mov
bound
pop
add
sub
paddb
sbb
bound
out
sub
dec
or
lods
ss
xor
pop
lcall
repnz
stos
pop
sub
mov
push
ljmp
jae
push
adc
iret
cs
aam
xchg
pusha
and
leave
cli
int3
pop
std
xlat
sub
xlat
lock
out
mov
lds
lret
jo
fs
jns
divl
clc
pop
neg
popa
pushf
scas
jnp
sbb
xor
aad
push
pop
dec
or
inc
mov
mov
pop
faddl
imul
in
lcall
pusha
mov
dec
mov
mov
insb
cmp
jb
add
cltd
out
jmp
adc
fsub
in
in
and
pop
and
in
insl
xchg
imul
add
and
scas
sbbl
loopne
sbb
sbbl
mov
pop
cmp
jecxz
lret
xchg
shrb
arpl
xchg
pop
sub
stc
pop
mov
adc
hlt
xchg
subl
ds
sbb
stc
stc
int
sub
jb
jns
mov
ss
shlb
or
mov
xlat
movl
cmp
inc
xor
insl
cmp
add
std
movsb
inc
adc
iret
pop
stos
fstp
mov
mov
call
sbb
add
in
shl
pop
aas
and
cmpsl
cmp
jbe,pn
lock
fs
bound
sub
adc
dec
lcall
fidivrs
mov
mov
add
sahf
insb
dec
cmp
mov
add
mov
pop
dec
jp
fdivl
xor
popa
ret
sti
loopne
push
push
mov
add
jg
push
adc
push
push
adcl
lods
pop
or
mov
mov
cmp
xchg
loope
daa
pop
pusha
pushf
aaa
add
cwtl
pop
pop
and
aas
imul
adc
adc
in
shl
pop
or
andb
rcrb
mov
movsl
arpl
lret
repz
lods
xchg
cmp
sbb
outsb
in
ret
mov
mov
xorl
push
dec
dec
outsb
mov
mov
mov
fcmovne
dec
int3
call
movsb
cmp
shlb
mov
divb
cli
mov
mov
or
xor
daa
repnz
je
push
outsl
mov
xlat
dec
jb
adc
sub
push
xchg
mov
out
jmp
inc
fcomp
clc
loop
testl
xor
int3
push
inc
adc
ret
mulb
and
rolb
adcl
out
out
orb
or
xchg
and
jo
lret
jg
jae
movsl
jecxz
pop
inc
and
adc
daa
and
mov
jno
sub
pop
imulb
mov
adc
lea
mov
pop
or
scas
jmp
loop
mov
cmp
mov
sbb
std
xor
sub
lret
ds
pop
xlat
pop
outsb
aas
popa
push
fisubrs
movsb
jl
push
pop
xor
hlt
ret
aam
xlat
mov
add
jmp
jb
fidivs
xchg
frstor
loopne
dec
sub
push
mov
xlat
enter
movsw
dec
loop
cmc
cmp
dec
mov
mov
cmpsl
test
sbb
mov
int3
xchg
fwait
test
popa
stc
add
xor
sbb
ss
inc
das
pusha
dec
notb
stos
pushf
mov
or
loope,pt
push
push
stc
mov
enter
or
add
mov
lock
cmp
or
rcl
pop
mov
mov
adc
adc
hlt
jnp
inc
pop
mov
pop
jg
push
jg
fdivrl
stos
mov
inc
push
mov
sahf
xor
out
fneni(8087
xchg
push
lcall
out
mov
jl
mov
mov
cli
cmpsb
icebp
in
inc
dec
dec
push
lret
mov
cld
cs
and
dec
popf
and
pop
mov
gs
xchg
cld
mov
xchg
aad
add
subl
jne
arpl
repz
mov
ds
xchg
sarb
xor
lahf
call
dec
xor
shll
cwtl
int3
pop
xchg
inc
fnstcw
dec
inc
cmp
mov
inc
repz
xor
cmc
repnz
mov
xor
dec
stos
push
jl
jge
mov
test
iret
sbb
xor
fadd
es
xchg
mov
push
cli
idivl
pcmpgtw
push
push
cli
inc
movsb
cmp
sbb
add
frstor
das
movsb
jge
cmp
xor
fsub
push
int
pop
arpl
lea
jbe
shlb
cmp
roll
xor
and
fcmovu
pop
add
mov
in
or
stc
mov
cwtl
add
xchg
inc
push
into
adc
lods
outsl
mov
sub
imul
outsl
push
je
sbb
imul
test
addr16
iret
rcll
mov
mov
cwtl
pop
cli
xchg
adc
cmp
add
cmpsl
out
fildl
shrl
cmp
inc
nop
push
xor
data16
and
inc
jb
mov
pop
movsl
mov
sub
push
or
movsl
xor
clc
adcb
je
mov
stos
pop
xor
inc
pop
les
add
into
push
adc
xchg
push
cmp
loopne
mov
mov
mov
cmpb
shrl
rorb
cld
push
pusha
push
fsubr
iret
xchg
and
add
int3
fnstenv
add
inc
cs
insl
lea
jp
push
push
push
je
jmp
test
and
jns
jecxz
and
jmp
lods
lcall
fdivrl
ror
shrl
jbe
and
mov
pop
xor
daa
dec
cmpsl
test
call
jo,pt
push
add
sti
rorl
lahf
inc
inc
test
test
mov
push
dec
xchg
jmp
roll
data16
or
movups
cmc
inc
repnz
dec
dec
lcall
lcall
xchg
jmp
inc
or
push
and
pop
xchg
cmc
add
xchg
jb
push
lods
cmp
dec
add
pop
add
pusha
xchg
aam
inc
jne
fldl2t
into
sub
jns
xchg
sbb
sub
mov
xor
mov
mov
add
les
jbe
sbb
xchg
sub
adc
scas
xchg
hlt
mov
sub
out
sahf
inc
sahf
cmp
jg
push
gs
lcall
add
ss
outsb
mov
inc
popf
int
clc
leave
mov
mov
fwait
xchg
int3
scas
adc
int
addl
add
jmpw
add
out
mov
push
push
xchg
xchg
cs
and
cld
das
mov
pushf
shll
pop
pop
outsl
xchg
loope
popa
dec
jno
ret
insb
ret
jae
out
mov
jb
push
daa
call
rclb
jecxz
jmp
add
mov
add
and
cmp
insb
cld
and
idivl
icebp
dec
dec
aas
xor
adc
cmp
dec
gs
adc
pop
xchg
es
fld
mov
push
add
ljmp
lods
fisttpl
pop
notl
out
sti
inc
leave
mov
cmp
iret
pop
adc
pop
test
loopne
scas
pusha
dec
aas
aad
nop
mov
mov
maxps
xchg
cltd
in
ret
mov
or
cmp
inc
aad
sub
fdivs
cmpsl
int
xchg
cmp
adc
inc
push
int3
mov
pop
xor
ds
jmp
xchg
movsl
push
push
add
adc
or
out
or
or
or
or
lret
daa
dec
mov
test
clc
pop
dec
mov
mov
loop
mov
cmpsb
mov
xchg
mov
sub
aas
mov
mov
icebp
faddl
cmp
mov
fldlg2
mov
movsl
xchg
sub
adcl
enter
aaa
push
out
sbb
rcll
xchg
insl
xor
loope
cmp
movsl
jp
in
jg
pop
adc
ljmp
push
inc
mov
mov
std
or
stc
xchg
in
mov
mov
mov
jbe
fidivl
popa
out
lahf
inc
inc
loop
and
or
add
shlb
mov
inc
cli
adc
pop
mov
or
sahf
out
lock
test
mov
stos
int
add
pop
and
out
or
dec
adc
cltd
inc
adc
xchg
adc
subb
aas
je
aam
xchg
movb
inc
ret
dec
stos
xor
xchg
pop
push
dec
jns
mov
dec
call
test
cwtl
or
fsubs
adc
jg
in
jmp
xchg
int3
mov
inc
or
fadds
mov
xchg
mov
stc
xchg
arpl
push
loope
in
shl
inc
cmp
pop
xchg
or
mov
mov
int
iret
cltd
pop
push
scas
in
mov
mov
pop
repz
or
pop
jnp
or
mov
cmp
js
sbb
cmpsb
adc
scas
mov
mov
xchg
lahf
sub
movsb
adc
loop
mov
jle
movsl
xor
xchg
sub
shll
inc
mov
mov
aad
test
add
sbb
and
jne
pop
add
sarb
adc
add
das
dec
cmp
ss
pop
push
and
and
insl
rorl
repnz
pop
sub
mov
clc
mov
mov
out
sbb
aas
movsl
icebp
adc
cltd
inc
xchg
clc
mov
push
lods
out
cmpl
push
dec
cmp
lods
lds
lods
add
leave
mov
rol
sbb
lods
int
push
xchg
ret
js
nop
int
aas
xchg
xchg
adc
jns
and
dec
jl
xlat
stos
sbb
pop
sub
fstps
xor
xor
mov
fxch
jp
fwait
add
cltd
jo
inc
pop
mov
xchg
icebp
cmp
mov
or
and
push
ficoml
ret
test
mov
xchg
cmp
push
popf
jno
cmpsl
pop
data16
pop
push
loope
mov
xor
in
pushf
enter
inc
and
xchg
loope
loope
push
shl
dec
cld
jno
and
jno
mov
lret
add
mov
daa
mov
xchg
insl
imul
jg
jg
xchg
dec
xchg
mov
push
popf
in
adc
clc
cmp
es
xlat
push
jae
ret
adc
loop
inc
jo
jmp
dec
add
das
loopne
mov
dec
movsl
or
xor
fdivr
fs
test
inc
xor
mov
mov
pop
and
mov
jb
mov
cmp
xor
aam
test
into
add
mov
xor
movsb
pop
jl
mov
flds
jl
xchg
mov
mov
fwait
cmp
mov
inc
into
sbb
daa
lahf
mov
jg
fs
test
mov
roll
mov
dec
mov
add
mov
adc
mov
clc
pop
icebp
iret
nop
and
test
scas
xor
push
cmpsl
lcall
sub
in
push
sub
add
dec
adc
adc
stos
and
dec
std
aaa
jmp
loopne
mov
or
xorl
pop
enter
add
sbb
mov
add
adc
jge
out
sub
lea
insb
ja
lahf
repz
aas
loop
in
inc
and
cmpsb
mov
jmp
and
gs
cmp
ret
fldenv
inc
ss
xor
and
push
loop
mov
cltd
or
xlat
adc
jne
jnp
mov
mov
add
test
out
mov
mov
xchg
lea
ret
repz
fsubrl
cmp
fdivrp
adcb
mov
fidivs
sub
jg
jns
lcall
mov
movsl
pop
adc
loop
jge
dec
out
daa
iret
sbb
push
mov
popa
pop
mov
ficomps
push
fs
rcrl
mov
insb
mov
mov
iret
cmp
inc
movsb
repz
mov
xchg
adc
in
sub
gs
roll
adc
int
sub
in
fnstenv
pop
mov
movlps
out
cmp
gs
mov
pushf
rclb
sbb
lea
and
add
xor
lds
ljmp
mov
push
jb
or
mov
push
cmp
pop
mov
add
jnp
into
xor
fcmovnu
sbb
rclb
dec
inc
ss
mov
and
cli
push
push
xor
icebp
pop
xchg
subb
add
inc
pushf
mov
xor
rcll
dec
cmp
jecxz
add
or
cmp
adc
imul
push
and
out
jp
mov
mov
loop
fdivp
jo
jbe
lret
fcmovbe
in
or
test
popf
push
aad
outsl
aaa
dec
adc
pop
repnz
add
outsb
sbb
stos
pusha
adc
jns
pop
pop
mov
clc
fmuls
fistl
call
movl
and
mov
mov
in
sbb
fsubrl
xchg
push
xor
fsub
imul
repnz
xchg
xchg
mov
in
dec
pusha
pop
arpl
mov
adc
js
iret
dec
push
stos
in
and
sub
mov
or
inc
add
imull
sar
push
sub
pop
adc
ret
pop
mov
stc
mov
mov
xchg
pop
jl
mov
sbb
xchg
cmpsl
mov
fbld
ret
jmp
or
addb
cmp
gs
pop
popa
mov
mov
and
rol
out
outsl
outsb
push
ljmp
repnz
popa
add
or
sbb
test
ret
imul
je
dec
out
pop
test
loop
rorl
push
out
push
insl
adc
testb
sbb
mov
stos
testl
xchg
lcall
jne
test
out
cmp
jp
out
gs
dec
mov
vpslld
dec
cmpsb
stc
xchg
je
das
dec
and
mov
mov
sub
movsb
adcb
push
pop
repz
mov
adc
clc
negb
lret
lock
into
xor
mov
and
cmp
pusha
insb
out
sub
sti
mov
aaa
ljmp
jle
cmp
bound
int3
jno
pop
ss
dec
add
orb
inc
movsl
mov
dec
int
xlat
inc
pushf
xchg
outsb
xchg
mov
sbb
sbb
mov
rcll
dec
adc
std
lods
aam
mov
push
loop
and
sbb
mov
cld
jmp
fimuls
mov
push
stc
fldcw
js
fldpi
jp
push
xor
in
add
sbb
add
and
pop
ja
lock
sub
fmuls
fsts
mov
mov
push
sub
pop
push
push
cld
das
sub
sbb
mov
dec
jo
lds
les
cli
and
add
mov
push
stos
dec
jnp
addr16
jmp
rcll
xchg
mov
jb
adc
cmpsb
push
outsl
loope
fisttpl
xchg
pop
mov
or
and
aam
int3
pop
mov
aam
ficoml
cli
lock
push
pushf
push
jmp
xor
cs
cli
push
xor
mov
mov
imul
pop
sbb
inc
lahf
lret
into
and
jbe
cmpl
addr16
pop
in
imull
loope
mov
mov
fdivrp
bound
divl
stos
jne
pop
sbb
fisubl
loop
in
fsubs
test
push
or
pusha
cmc
test
pop
xchg
loope
movhps
sbb
sub
inc
or
out
jle
sub
push
inc
xchg
mov
jecxz
mov
rorb
mov
mov
jbe
or
lret
repz
add
enter
out
aas
xchg
sub
xchg
dec
and
cmp
stos
arpl
adc
fidivs
mov
push
clc
stos
rclb
or
mov
sbb
popf
movsl
mov
dec
sub
in
dec
outsb
adc
into
sbb
movl
fidivl
int3
cmp
mov
shl
fists
daa
dec
sub
in
adc
cmc
pushl
jl
pop
outsb
imul
mov
leave
push
push
iret
shlb
lahf
bound
sbb
les
cwtl
sarb
jle
xchg
cmp
int
ja
push
int
xchg
pop
pop
and
xchg
leave
scas
mov
add
jg
inc
orl
roll
mov
mov
shll
push
dec
fsts
xchg
mov
shrb
and
adc
gs
stos
outsl
shll
or
jbe
xchg
xor
lahf
es
in
pop
and
fwait
dec
dec
cmp
sbb
lds
pop
mov
inc
push
push
cmp
mov
dec
push
je
jp
mov
mov
or
pop
mov
push
sbb
or
sbb
xchg
fs
sub
add
clc
mov
push
je
xlat
in
and
sub
sbb
pusha
cmpsb
cmp
sbbl
push
cs
xchg
sbb
test
int
in
dec
insl
movsl
lods
test
cmp
adc
or
or
mov
mov
pop
mov
into
outsl
add
dec
scas
test
popa
jne
call
jno
jecxz
cmp
out
sbb
dec
mov
call
adc
outsl
stos
xor
dec
ror
mov
in
outsb
pop
mov
cmp
or
adc
aam
pop
stos
add
jb
clc
insb
enter
lea
arpl
cmp
ljmp
je
rcr
pminub
insb
leave
jmp
mov
mov
push
push
dec
aas
in
movsl
aas
fucompp
sahf
js
fwait
dec
xchg
aam
cli
xorl
xlat
jge
push
nop
ds
cmp
sahf
mov
arpl
iret
push
and
xor
sub
cmc
rcrl
xchg
arpl
jl
notb
rcrb
mov
mov
dec
add
fidivrs
xchg
stos
sub
das
add
sub
mov
lcall
pop
cmp
cmp
out
dec
cmc
dec
aas
jns
xor
dec
xchg
sub
fs
cmp
test
mov
cmc
cltd
fsubr
push
inc
dec
dec
shr
out
repz
add
lret
out
fld1
add
dec
fstpt
mov
pop
or
adcl
sub
movsl
adc
shll
and
adc
dec
mov
push
sahf
mov
xchg
mov
pop
ja
roll
je
cmp
or
add
mov
jae
xchg
sbb
push
int3
push
imul
pop
out
imul
adc
dec
iret
mov
push
in
mov
imulb
lds
test
lret
mov
pop
shll
ss
fisubrl
mov
push
test
bound
cmp
or
imul
fdivl
in
cli
mov
out
leave
adc
sti
imul
mov
push
sarl
jns
add
adc
cwtl
adc
aaa
mov
lret
sub
in
rol
xor
mov
iret
mov
jo
xchg
mov
dec
stos
sahf
filds
xor
mov
test
sub
mov
mov
mov
jb
jecxz
cmpsb
fidivs
inc
inc
jo
cmpsl
pop
jge
cltd
pop
orl
enter
sarb
cmp
leave
or
out
pop
push
sub
push
jl
push
or
dec
push
fmuls
insl
icebp
inc
and
mov
arpl
insl
and
sub
pextrw
imul
inc
repnz
push
inc
lds
ror
push
fcmovnbe
lock
clc
mul
stos
hlt
mov
popa
repnz
mov
adc
cltd
add
vpcmov
add
sbb
in
mov
jo
mov
movsb
jmp
pusha
mov
push
repz
mov
outsl
loopne
and
cmpsl
stos
add
imul
add
ret
leave
push
ljmp
sub
testb
and
addr16
popf
frstor
add
push
cmpsl
imulb
rorb
fbstp
or
imul
lock
mov
enter
pop
fistpll
mov
jb
jo
mov
mov
je
cmpsb
lcall
jl
mov
xor
adc
inc
mov
xor
das
jge
loopne
mov
or
out
test
icebp
mov
dec
inc
push
repz
outsb
fbld
mov
dec
out
test
addr16
push
leave
cmpsb
mov
jnp
js
mov
cmp
in
sarb
loopne
imul
cs
cmp
mov
in
lods
stc
stos
push
adc
andb
adc
mov
fwait
pop
imul
push
dec
clc
pop
psubsb
jno
push
outsb
pop
inc
stos
stos
ss
mov
pusha
idiv
cmp
lods
cmc
dec
cmp
loop
pusha
lds
mov
in
xor
mov
pop
lret
push
mov
mov
scas
mov
push
dec
iret
stc
movsl
push
test
or
in
lods
inc
das
inc
sbb
cmp
add
mov
push
xor
cltd
adc
adc
mov
fs
fimull
inc
mov
pop
mov
ljmp
shl
dec
int
divl
fistl
sarl
push
cwtl
cmp
rep
hlt
movsb
shlb
xor
xchg
loope
cs
jae
daa
into
clc
outsb
adcb
and
icebp
movsl
xchg
aam
aas
mov
popw
js
add
cmp
xor
in
repz
pop
push
mov
lods
in
push
pop
mov
mov
pop
sarl
rol
sub
push
je
push
mov
jle
pusha
loop
fbstp
ss
fdivrs
jg
mov
mov
xor
push
ja
jge
adc
out
sbb
xchg
sub
inc
cmpsl
inc
mov
imul
push
ret
test
iret
xor
stc
popa
mov
fwait
add
fldt
sub
mov
or
test
push
fcmovu
jp
fwait
test
jg
fdivl
jp
insl
out
jo
pop
std
js
fs
mov
fdivrl
fwait
inc
mov
fildll
xchg
mov
mov
dec
sub
or
shlb
sbb
push
jbe
pop
push
fisttpll
add
and
mov
out
or
decb
js
loop
out
insb
sbb
lods
fdivrs
gs
push
mov
jecxz
fisubrl
adc
sbb
mov
pop
aad
push
sbb
out
lahf
adc
loop
jbe
sbb
out
sub
jnp
stos
mov
xchg
sub
cmp
pusha
sbb
scas
cmp
rcrb
add
pminub
arpl
sahf
jl
enter
stos
pop
ljmp
jo
xchg
ljmp
pop
cmpsb
push
popf
nop
jo
sbb
stc
enter
or
data16
xlat
lock
sub
sbb
push
mov
inc
es
sub
leave
das
push
test
test
outsb
lds
shl
jns
xor
ret
push
xchg
xor
pop
mov
mov
loope
add
ds
repz
xchg
scas
push
xchg
inc
lds
cmpsb
ljmp
mov
cmp
notb
lods
lods
xchg
out
out
lock
adc
test
out
imul
inc
dec
ffree
outsb
dec
loop
cmpsl
iret
mov
or
jle
push
push
repz
cmp
pop
in
and
sbb
sub
fs
lcall
add
iret
xor
ret
push
jecxz
cs
movsl
jg
cwtl
cmp
mov
in
jmp
sbb
enter
jnp
or
mov
lods
pop
cwtl
popf
ficoms
xchg
mov
fcmovnu
inc
and
sti
xor
inc
in
data16
inc
and
fisubs
mov
insl
int3
mov
jmp
mul
mov
sbb
or
mov
mov
mov
fmull
test
mov
jl
jg
pusha
lret
or
mov
frstor
pusha
mov
mov
aad
sarl
mov
cmc
and
mov
and
popl
lock
jg
mov
mov
mov
adc
jae
fbld
pop
sub
push
sbb
sti
pop
mov
icebp
adc
add
or
lret
jp
xchg
in
jnp
xchg
loopne
in
sub
dec
sbb
jb
xchg
pop
out
jmp
adc
xor
sub
jle
push
outsb
cmp
adc
addl
idivl
outsb
aam
mov
mov
pop
pop
pop
repz
jle
adc
inc
pop
push
loope
add
jmp
dec
add
cli
and
js
mov
cmp
pushf
bound
jo
cld
inc
mov
or
flds
inc
int
shll
mov
repnz
dec
pop
jmp
ficompl
in
loop
sbb
fisttps
xchg
testl
cmpsl
lcall
rcr
stc
add
jp
push
sub
test
scas
and
les
aam
test
jns
push
jp
push
adc
add
push
rcrb
in
jns
inc
cmp
pop
ret
stos
push
mov
out
fiaddl
test
inc
push
shlb
lcall
mov
call
aaa
lahf
loope
stos
mov
out
sub
shlb
daa
cmpsl
mov
lahf
inc
rclb
sub
in
push
jb
imulb
mov
xor
add
jecxz
mov
loop
filds
popf
lods
mov
inc
in
mov
or
push
xchg
bound
mov
lods
invd
xor
mov
xchg
outsl
and
push
mov
outsb
jae
aas
imul
cmc
jo
cmp
loop
xor
mov
addr16
adc
adc
gs
in
sub
sbb
jnp
data16
lock
iret
cmpsb
loop
mov
shrb
or
pop
insb
popa
test
add
test
stos
jl
cmp
dec
add
dec
xchg
jnp
push
imul
dec
sub
add
pop
inc
lds
xor
imul
push
or
and
adc
loop
sti
sub
jnp
add
jno
fidivl
outsl
cmc
mov
cmp
mov
or
cmpsl
ja
cmpsb
cmp
es
adc
dec
pop
xchg
mov
insl
jecxz
sub
imul
xor
idivl
shlb
imul
test
arpl
das
sti
test
cmc
test
and
jb
ljmp
inc
sbb
lods
ss
loope
rorb
sub
into
repz
pusha
sar
je
fcoml
enter
lods
ret
push
enter
wrmsr
scas
push
dec
mov
lahf
in
iret
add
lock
push
add
mov
lret
xor
cmpsl
inc
cmpsl
fisubrs
icebp
pop
xor
pop
daa
or
or
xchg
loopne
hlt
test
scas
or
loope
dec
inc
scas
pop
stc
push
push
and
push
and
and
sub
inc
shl
xchg
mov
jge
out
in
mov
xchg
in
imul
cmp
jae
sti
test
movsb
jg
ret
and
jne
or
xchg
bound
imul
push
js
mov
test
inc
imul
stos
dec
imulb
mov
sbb
scas
sub
aas
and
jne
inc
add
sub
jl
fistpl
xor
dec
mov
push
cmp
cmc
add
jmpw
out
or
push
sbb
je
xchg
rorb
sub
push
and
jno
push
lea
push
pop
out
add
ret
lock
pop
into
ret
push
adc
add
mov
dec
jg
imull
loopne
add
inc
mov
pop
cmp
aam
es
push
sbb
adc
inc
das
cli
sub
cmp
in
test
ret
daa
add
stc
lret
jnp
mov
mov
pop
cmp
mov
dec
or
stc
jbe
lea
push
mov
sbb
add
mov
sub
dec
jmp
enter
xchg
fs
pop
xor
mov
mov
aam
and
repz
loopne
test
push
or
insb
je
mov
add
jbe
dec
bound
xor
mov
inc
mov
push
mov
xchg
mov
add
jl
sahf
xor
js
test
loop
lahf
repnz
inc
xchg
mov
adc
sahf
std
outsb
lock
pop
inc
push
jne
push
add
fwait
imul
mov
xchg
mov
xchg
int
push
mov
hlt
repz
push
rorb
es
jmp
add
mov
stos
lods
imul
std
xchg
push
addr16
loopne
xor
xchg
dec
lods
ret
stc
sbb
pop
lods
mov
mov
sub
push
mov
loope
adc
roll
cmpsl
insl
icebp
or
int
sbb
std
psadbw
adc
ja
or
xchg
lods
sub
loope
addr16
pop
or
cmp
xlat
xchg
dec
mov
out
ja
iret
lods
int3
inc
xchg
cmp
or
fwait
inc
cmp
pop
jbe
in
jae
fwait
xlat
jmp
push
and
into
mov
outsl
xor
jne
stc
int
test
add
gs
out
adc
sub
pop
iret
in
ljmp
inc
mov
rclb
push
insl
xor
lods
jl
jns
popf
xor
fildl
hlt
sub
inc
add
jns
mov
mov
and
sbb
pop
outsl
popa
sub
xor
add
mov
push
std
cmp
or
mov
vpaddw
imul
dec
and
das
push
jne
dec
or
sbb
std
arpl
or
lods
shll
stc
xor
lret
add
aad
data16
js
xor
and
imul
cmp
and
mov
movsl
outsl
mov
lret
rcrl
or
mov
dec
dec
mov
mov
cmp
test
mov
fldenv
jle
mov
pop
aad
jno
or
pop
and
mov
lock
mov
add
test
xor
ljmp
sbb
shlb
dec
adc
dec
mov
cmpb
and
mov
sbb
loope
fisttpl
stc
into
outsb
fnsave
arpl
push
aam
sbb
cmp
inc
push
ss
ds
daa
ljmp
pop
inc
jne
mov
dec
jno
jle
sub
cs
push
mov
lea
test
int
jae
dec
dec
inc
mov
orl
xchg
aaa
mov
push
loop
jg
xchg
lcall
out
xor
das
sub
popa
lods
scas
pop
jecxz
dec
xor
lods
mov
gs
fwait
and
mov
xor
loop
fwait
and
sub
iret
jecxz
push
jnp
add
sub
jnp
xchg
dec
out
aam
pop
and
lahf
faddl
pop
jle
ss
aas
mull
loopne
xor
push
lea
pop
mov
imul
lret
ret
fldcw
iret
cmpsl
mov
outsb
push
adc
pushf
and
push
aas
scas
test
push
mov
push
aad
aad
jns
mov
loope
int3
jne
in
pop
jno
test
cmc
inc
stos
mov
jae
and
std
jecxz
xor
cld
jns
lea
adc
je
test
pop
test
popf
pop
cmp
out
and
sub
mov
cmp
dec
lds
xor
inc
jns
lahf
xor
jl
push
mov
outsl
leave
dec
add
inc
pop
xor
xor
mov
das
mov
push
push
cmp
mov
in
or
mov
in
push
rcrl
out
data16
and
movsl
mov
dec
push
sbb
dec
dec
adc
sub
ret
das
popa
or
cmp
ret
aas
jmp
add
mov
adcl
xchg
adc
decb
push
mov
subl
or
push
add
fimuls
push
lods
cmp
xor
insl
mov
pop
clc
fbld
imul
shr
mov
test
inc
mov
xchg
sub
sti
push
pop
or
sbb
loop
ljmp
mov
popa
call
and
enter
lods
mov
pop
xchg
hlt
xor
loopne
xchg
mov
mov
sarl
sub
jno
sub
aad
lcall
std
inc
xchg
pop
int3
push
fmull
mov
mov
hlt
mov
and
out
loopne
pop
or
dec
dec
sub
dec
mov
jnp
divb
ja
clc
cmp
insl
into
add
jb
adc
and
mov
mov
inc
add
and
lret
ds
popf
mov
or
aad
mov
adc
mov
adc
xor
repnz
push
pop
daa
mov
les
pop
and
sub
fwait
mov
jmp
outsb
push
inc
testl
popa
daa
lret
aad
test
sbb
cltd
in
adc
fdivl
ja
std
movb
pop
push
rcrl
inc
inc
sub
and
andb
pop
test
add
push
mov
std
sbb
add
pop
push
adc
test
pushf
aad
out
jecxz
push
out
call
lahf
sub
sbb
subb
fwait
imul
pop
mov
outsb
xor
push
int
xchg
mov
dec
outsl
mov
mov
push
or
test
xor
gs
repz
lods
mov
in
icebp
rcr
cwtl
xor
xchg
mov
jecxz
xor
je
sub
clc
adc
test
mov
jno
xorl
jbe
fnstenv
mov
sub
push
loop
nop
loopne
fucomip
cli
add
cmp
sub
add
ss
mov
or
xor
cmc
mov
sub
push
aam
test
mov
and
stos
loope
lds
or
jns
mov
push
int
sbb
jmp
pop
repnz
nop
sbb
push
sbb
pushaw
push
bound
rdmsr
inc
lods
xor
push
mov
or
mov
adcl
rcrb
ljmp
arpl
jns
mov
lods
imul
data16
push
jg
in
cwtl
cs
ljmp
clc
cmp
insb
rol
aaa
in
push
dec
or
push
mov
lcall
adc
xchg
dec
mov
ja
lret
ficomps
xor
les
mov
aas
lods
and
inc
push
cs
or
lcall
arpl
xor
lcall
jmp
cli
movl
jns
xor
push
aaa
dec
jb
or
cmp
fsubr
mov
ss
aam
and
xchg
inc
sbb
pusha
mov
scas
fdivs
lods
ficomps
mov
test
lods
inc
pusha
outsl
stos
xchg
add
cld
jecxz
rcrb
sbb
mov
xchg
jnp
mov
cmpsb
cmp
push
and
push
pop
inc
fistpll
jno
das
and
adc
repz
push
push
fidivrs
xchg
add
vshufps
out
in
mov
repnz
push
inc
jmp
add
push
pop
push
adc
cld
and
xchg
xchg
adc
ret
cmp
add
mov
sbb
ljmp
lahf
fstpt
xor
fbstp
push
test
mov
sbb
lea
cld
xor
cmp
sub
pop
rorl
xchg
adc
xlat
adc
jle
jmp
sti
out
stc
addr16
pop
mov
sbb
dec
sub
lods
mov
ret
cmp
addb
bound
loop
cmp
int
mov
pop
hlt
rcrb
and
jnp
pop
ss
lock
add
daa
sbb
in
push
leave
fsubl
in
hlt
repz
test
lea
sbb
dec
daa
cmp
unpcklps
adc
es
adc
es
scas
fldcw
push
repnz
sub
sahf
gs
pushf
jnp
mov
insl
pop
mov
ja
ret
xchg
pop
inc
test
cwtl
xor
or
adc
push
push
jbe
inc
push
dec
lock
out
inc
and
jmp
mov
lret
ds
mov
or
xor
rclb
or
adc
cmc
addr16
in
adc
das
xor
jo
xor
cmp
out
add
movsb
adc
sbb
repz
hlt
xchg
nop
mulb
fnstsw
je
cmc
pop
lcall
jo
clc
or
in
inc
mov
cmp
std
mov
mov
and
bnd
push
dec
sub
cmpsb
rcll
jb
outsb
xor
jbe
inc
hlt
pop
das
daa
call
fcompl
mov
jns
cmp
popa
jae
fs
bound
ret
rcrl
aas
aaa
push
inc
cs
mov
xchg
mov
test
and
mov
scas
outsb
das
enter
or
or
xchg
jl
je
jmp
aaa
jnp
jg
rorl
xchg
shrl
scas
add
mov
adc
mov
xor
test
xchg
mov
popa
xor
xchg
mov
push
jle
rclb
add
bswap
insl
sub
mov
fisttpl
cmp
lods
sbb
pop
shll
mov
push
int
dec
cld
inc
cmc
insb
aaa
and
arpl
insl
or
stos
adc
mov
adc
gs
cmp
mov
jecxz
inc
cs
es
out
imul
and
add
dec
out
leave
cmp
es
push
ret
or
insb
add
jbe
rorl
mov
daa
mov
or
pop
adc
je
pop
pop
mov
test
jg
add
jp,pn
mov
cmp
sub
cltd
hlt
push
add
loopne
icebp
movsb
inc
xor
imul
ljmp
sbbb
xchg
repnz
shlb
ds
out
jno
xor
bnd
aaa
les
mov
jge
nop
imul
movsl
dec
and
mov
add
jp
mov
pop
pop
or
xchg
shll
push
hlt
push
or
js
xor
lds
xchg
xchg
mov
cmp
jmp
mov
mov
mov
and
xchg
cmc
xor
cmp
std
jg
push
test
shll
jb
mov
cli
test
jne
subb
xor
movsb
std
cmp
mov
shll
sarl
cmpsb
mov
jge
cmpb
sub
pop
lods
sahf
das
push
jmp
inc
xor
in
cmpsb
xor
dec
mov
jnp
mov
or
pop
adc
ffree
out
enter
sbb
lahf
ret
push
dec
cltd
cmovle
call
clc
scas
push
jnp
add
repz
ret
push
push
gs
daa
mov
push
out
movsl
js
lret
je
sbb
jle
cmp
dec
lds
cwtl
xor
sbb
and
daa
out
dec
sahf
mov
pop
mov
mov
aas
int
cmp
mov
adc
jg
jb
inc
je
cmp
fnstsw
jl
pop
lret
jge
xchg
lret
push
cmc
and
push
cmp
leave
add
push
shlb
fwait
imul
jb
fcomi
mov
push
xor
cmp
and
xchg
rcrl
mov
rolb
push
iret
inc
sti
jb
add
dec
sbb
call
push
fcmovu
xor
pusha
fistps
repz
hlt
pop
mov
pop
adc
sahf
and
dec
push
sub
dec
sub
in
mov
pusha
or
pop
clc
or
pop
adc
jecxz
stc
push
ss
lcall
xor
jbe
repz
clc
out
push
xchg
mov
mov
add
arpl
out
fs
sbb
jp
mov
or
loopne
or
xchg
lahf
add
push
jmp
sub
std
mov
mov
rorb
push
jbe
dec
cmp
mov
inc
cmp
aaa
lcall
in
and
jo
test
xchg
mov
xor
out
xchg
mov
ss
cmp
push
enter
lock
push
movsb
cmp
push
stos
inc
test
pop
mov
push
insb
mov
stc
icebp
adcb
add
rcl
shlb
inc
inc
inc
mov
inc
arpl
push
mov
adc
inc
dec
cmc
enter
cmp
inc
push
out
push
push
insl
pop
out
push
mov
adc
test
or
mov
xchg
fwait
ss
scas
sbb
sahf
mov
test
mov
imul
out
leave
mov
call
sub
mov
xor
imul
pop
sub
outsl
in
imul
pop
mov
mov
jecxz
mov
pop
stos
adc
fnstenv
xor
jmp
ljmp
or
push
out
fsubr
xchg
nop
dec
lods
sub
fwait
cli
lret
shlb
loope
xchg
mov
adc
mov
mov
cmpsl
sti
int3
push
out
mov
out
push
xor
cld
stos
scas
adc
push
sub
sahf
cli
dec
dec
and
fidivrl
cmp
nop
dec
adc
mov
test
ja
xchg
stos
push
mov
popf
xchg
addl
inc
mov
xor
inc
clc
repnz
ret
lock
lret
test
or
mov
les
adc
int3
std
outsb
stos
stos
mov
xlat
lock
xlat
dec
mov
push
dec
das
mov
push
fldl
sbb
in
cmpsl
sub
addl
out
out
pop
sahf
ds
in
cmp
pushf
lds
sub
xor
pop
xchg
imul
inc
inc
lods
sti
and
fs
fdivrs
push
sub
push
inc
dec
mov
and
sbb
je
gs
insl
repnz
ret
jmp
jge
push
lahf
mov
sbb
or
adc
and
hlt
aam
sbb
cmp
bound
js
scas
std
es
jo
imul
les
testb
cmp
loope
inc
popl
sahf
mov
adc
jns
imul
in
cmp
jmp
cli
je
xlat
dec
lea
push
data16
subb
jle
lcall
mov
and
into
sbb
mov
mov
jg
imul
jl
int3
data16
dec
xchg
popa
xor
sub
adc
mov
mov
jns
pop
cmp
mov
mov
add
and
repnz
adc
bound
cmp
pop
lahf
in
add
repz
call
aad
jo
mov
addl
jge
sbb
fs
push
mov
lcall
jle
movsl
int
jecxz
mov
dec
cmp
adc
adc
pop
jge
jecxz
out
cmp
ret
push
hlt
push
xchg
jecxz
call
jbe
add
leave
xor
sub
gs
jno
sbb
xor
mov
add
lods
fistps
stc
inc
std
push
das
cmpsb
or
in
lret
pop
jl
mov
dec
mov
pop
enter
mov
pusha
mov
sbb
daa
faddl
add
jmp
xor
cmp
into
icebp
pop
pop
rorb
out
or
mov
and
and
mov
add
mov
mov
pop
or
ljmp
insb
test
stc
mov
outsb
mov
test
jo
test
mov
ficoml
pop
pusha
xor
sub
repnz
cltd
fbstp
or
jb
cmpsl
aam
rorl
mov
test
pop
pop
lea
pop
adc
cld
or
rcl
ficomps
cmp
in
mov
leave
mov
mov
push
xlat
jle
inc
mov
jmp
scas
xor
mov
push
insl
dec
scas
mov
jb
dec
loopne
xchg
ljmp
rcrb
cld
dec
sbb
sub
xlat
xchg
insl
dec
mov
lock
sub
push
scas
ds
nop
push
sub
shrl
mov
add
fsubr
xor
pop
cli
ret
xor
adc
leave
lahf
shl
fimull
repnz
cmp
push
fwait
out
adc
popf
divl
or
mov
cmp
jle
inc
push
es
sub
out
mov
cmp
lret
xchg
adc
mov
out
cmpsl
stc
fcoml
xchg
daa
sub
pop
xor
mov
pop
jp
bound
jmp
fcoml
lcall
cli
fisttpll
fidivs
adc
inc
cmp
lods
jg
bnd
fnstenv
xorb
ret
and
jp
test
pop
mov
mov
and
jmp
add
movsb
inc
push
or
data16
cmp
in
es
repz
xchg
dec
ds
divb
push
outsb
dec
and
and
cltd
cvttps2pi
bound
push
pusha
out
enter
inc
pushf
jno
pop
leave
adc
jmp
sbb
mov
xchg
inc
cmp
ds
andl
pushf
icebp
bound
rcll
bound
insb
lahf
jns
adc
ja
out
sub
pop
mov
icebp
adc
add
mov
sub
jnp
jle
loopne
jmp
xor
pop
nop
xor
push
sub
xor
popa
mov
xchg
sbb
mov
mov
inc
rcll
movsb
inc
mov
dec
dec
mov
push
mov
insl
push
mov
adc
xchg
mov
or
cmpsb
mov
push
lahf
test
inc
xchg
in
jne
jg
std
sbb
cld
pop
nop
rcll
mov
cli
sbbl
jp
and
xchg
pop
pusha
gs
sbb
movsl
push
clc
xchg
in
out
mov
dec
outsl
add
enter
sti
into
out
mov
scas
mov
cmc
sti
pop
push
lods
ljmp
arpl
addr16
imul
add
xchg
and
push
cmp
mov
jl
out
mov
out
popf
int
cli
enter
scas
insl
or
and
and
ss
imul
ret
shrl
out
xchg
mov
inc
mov
mov
sub
pop
popl
lea
mov
out
movsb
fsubrl
sbb
fbstp
push
in
cs
xor
jno
stc
dec
in
ficoms
test
sti
scas
sub
cs
mov
cmp
movsb
jae
cmpsl
mov
jbe
das
add
push
adc
fsts
je
shlb
inc
inc
hlt
je
jno
sub
mov
and
add
lahf
pop
sub
outsl
arpl
mov
adc
pushf
dec
dec
data16
lods
xchg
push
aam
clc
cmp
or
pop
insb
sbb
xor
sbb
inc
pop
jle
inc
cmp
xchg
and
insb
pop
outsl
and
enter
mov
inc
popa
lea
or
lods
jbe
sub
fadds
test
pop
sbb
push
pop
mov
sahf
ret
push
test
jno
and
dec
sub
mov
sub
hlt
fimuls
aas
leave
jmp
rolb
scas
dec
inc
jmp
outsl
jmp
add
sahf
lds
sbb
leave
sti
cwtl
pop
add
dec
jmp
dec
lock
fsubs
jecxz
outsb
xchg
jmp
movsb
gs
inc
bound
enter
dec
int3
lcall
les
pop
out
inc
sub
sub
outsl
add
and
popa
mov
or
dec
nop
lods
ffreep
test
leave
inc
dec
iret
xor
xchg
mov
xor
adc
addr16
and
js
in
jecxz
cmp
mov
aam
pop
stos
enter
imulb
std
test
or
rcll
adc
cmp
out
xchg
pop
or
ds
jecxz
cli
dec
adc
lret
and
mov
sbb
or
mov
repnz
sub
add
out
inc
or
mov
loopne
mov
int
mov
push
push
push
data16
leave
pop
cmc
jmp
push
das
daa
or
adcl
mov
test
dec
sbb
das
pop
push
lds
cmp
leave
es
jns
dec
pop
add
into
push
mov
dec
pop
mov
mov
fimull
insl
dec
sar
cmp
xchg
inc
sub
pop
and
add
push
mov
sub
add
inc
add
ret
gs
stc
xchg
add
out
inc
inc
test
notb
addr16
mov
inc
movsl
add
pop
mov
fwait
nop
dec
adc
enter
xor
jo
inc
jbe
lods
pop
xlat
into
jge
xorb
fimull
fimull
test
jmp
jmp
and
jecxz
push
movsb
mov
lret
and
add
sub
popa
shll
out
pushf
in
lea
push
xor
lcall
sbb
test
out
pop
mov
dec
mov
pushf
icebp
pusha
and
pop
and
out
shrl
in
push
cmpsl
js
or
add
pop
sub
rolb
repnz
jge
ret
das
fnstenv
xchg
cmp
loop
sub
cmp
arpl
jae
xor
hlt
adc
xchg
movsl
out
inc
cli
jnp
incb
enter
std
loope
gs
movsl
pop
lret
movsl
mov
push
sub
adc
xchg
mov
lods
inc
pop
jnp
mov
mov
adc
popa
xchg
dec
mov
movsl
icebp
cmp
outsl
cmp
jb
or
shll
mov
imull
sub
inc
dec
and
popa
xchg
and
out
mov
add
pushf
cmp
ljmp
inc
dec
in
mov
bound
loope
jo
push
ret
lock
jmp
mov
xchg
add
jb
and
fdiv
sbb
testl
sbb
je
mov
push
jmp
push
gs
mov
cmp
sub
push
inc
inc
in
stos
enter
comiss
xlat
cmpb
fldln2
xor
imul
and
movsb
gs
add
lahf
arpl
add
sbb
xor
jmp
arpl
jne
sub
mov
pop
jge
xor
dec
test
call
mov
inc
bound
jnp
xor
out
pop
inc
and
push
adc
lcall
lret
jp
subl
xlat
es
shll
test
adc
and
in
out
cmp
sub
push
push
cli
xor
arpl
mov
xor
xor
mov
mov
dec
dec
or
mov
bound
rolb
rorb
fildl
sahf
je
inc
cs
sbb
push
ret
mov
and
dec
adcb
jl
add
xlat
sbb
cmpsl
push
xor
lods
outsb
popa
dec
shll
aam
dec
push
mov
fsub
add
stos
sub
add
push
mov
or
lahf
in
lods
sub
xchg
into
lea
or
xchg
jp
push
aad
fstl
xor
push
push
push
test
dec
mov
xchg
add
ljmp
and
test
and
dec
push
xor
xor
fcoms
fwait
inc
cmpb
imul
push
fcompl
gs
loop
rorl
arpl
filds
inc
movsb
insl
fildl
cs
fldl
and
shll
and
cmpsl
push
pushf
jl
jl
push
mov
push
sub
pusha
fs
jnp
mov
sahf
cmp
dec
sbb
insl
mov
adc
pop
test
sti
push
sub
and
mov
jnp
ret
je
pop
pop
cli
cmp
mov
mov
fidivrs
jnp
lea
mov
jmp
cmp
popf
test
inc
in
mov
out
or
adc
jns
or
push
pop
push
ljmp
filds
xchg
jle
xor
jmp
pop
fidivrl
and
push
adc
mov
fiaddl
inc
mov
js
mulb
lcall
jle
cmp
lcall
dec
sub
lods
pop
mov
rorb
xchg
leave
or
dec
dec
mov
add
mov
insl
dec
dec
test
iret
sub
sbb
loope
inc
xchg
test
jge
cmp
sub
sub
iret
outsl
inc
add
mov
cltd
popf
or
popf
ja
jg
lret
mov
cmp
daa
mov
ljmp
inc
sub
mov
imul
mov
cmpsb
mov
loop
out
adc
jb
add
and
inc
or
aas
pusha
push
adc
or
push
test
mov
imul
lods
lret
xchg
into
imul
mov
clc
pop
push
pop
inc
xor
fwait
dec
dec
xchg
ret
inc
adc
push
jg
jl
mov
sbb
cmp
push
in
cmpsb
lret
and
stc
push
mov
rclb
fstpl
pop
call
dec
xchg
cli
movsl
repnz
mov
or
loopne
mov
lahf
dec
mov
out
adc
inc
mov
cltd
out
cmc
sbb
lret
test
jne
sbb
mov
mov
push
arpl
jno
push
and
dec
cwtl
sub
inc
filds
insl
dec
adc
jns
bound
das
hlt
adc
mov
inc
pop
into
faddl
push
push
and
fs
adc
push
testb
sbb
mov
mov
aad
dec
xchg
cmp
pusha
jbe
fidivl
lahf
xor
int
lea
and
insl
enter
xchg
cmp
inc
mov
pushl
cmpsb
movsl
out
xor
inc
push
mov
lahf
and
aas
inc
mov
or
lcall
fsubs
fisubs
and
clc
loop
ja
sub
stos
sub
incl
in
sub
les
insb
cmp
fwait
xchg
pusha
adc
cltd
dec
mov
cwtl
pusha
ficompl
push
aad
xchg
xor
lods
sub
fsubrl
movsl
cmp
iret
mulb
out
cmp
push
or
pop
insb
push
mov
jmp
jge
jle
or
inc
and
cmp
xlat
inc
arpl
sbb
mov
pushf
fstps
ljmp
and
repnz
xchg
pop
shrb
or
test
jne
push
cs
xchg
adc
ret
out
das
mov
call
fnstsw
es
gs
jge
sbb
enter
inc
nop
pmaxsw
iret
ret
jbe
mov
fstl
sub
mov
and
mov
mull
sahf
int
jbe
cli
or
dec
mov
adc
mov
push
sub
inc
jmp
scas
add
iret
xlat
mov
cmp
lods
imul
ret
hlt
enter
fwait
in
stos
mov
test
cli
xor
mov
into
push
pop
or
add
lret
fmuls
int
divb
xchg
sbb
and
test
pop
mov
dec
call
movsl
jbe
rcrb
or
dec
inc
insb
ret
jo
push
push
sub
rcl
inc
and
sbb
lret
xor
out
sbb
ret
jae
scas
into
pop
push
push
dec
cmp
dec
fidivs
jg
movsb
add
add
mov
adc
int
pusha
fadd
scas
jb
loopne
mov
pop
movsb
push
mov
lahf
stos
pop
fadds
mov
stos
and
out
adc
mov
mov
repz
jl
aad
pop
mov
mov
stc
popl
les
sbb
fistpll
push
popf
fs
incb
dec
jmp
shll
mov
mov
data16
or
shlb
xchg
push
popf
push
or
sub
fstps
imul
jg
and
push
dec
xor
xor
jmp
popf
dec
lods
cmpsl
call
push
lock
insl
cs
jmp
hlt
movsl
faddl
repz
jmp
jl
adc
jle
shlb
fnstcw
or
mov
movsb
xlat
dec
aaa
push
dec
push
lds
aaa
cmp
sbb
jge
int3
dec
repnz
xchg
or
jae
xchg
test
lock
cmp
add
pop
dec
xor
notb
lock
jo
fnstenv
ljmp
pop
outsb
in
adc
mov
ret
mov
adc
out
addr16
push
inc
cmp
outsl
aas
cmp
ljmp
mov
outsl
rcl
jno
xchg
or
mov
and
push
lret
pop
loope
push
mov
aam
rcll
int3
xlat
dec
test
sbb
xor
rorb
fisubrs
sahf
push
adc
popf
ret
lods
push
icebp
inc
mov
jbe
shr
jb
mov
or
or
test
pop
mov
jo
jns
movsl
push
lock
ljmp
icebp
sahf
loope
inc
adc
sbb
jmp
or
mov
fimull
mov
ret
mov
add
sub
sub
push
or
cmp
inc
or
mov
jae
in
cs
sub
add
lret
sbb
outsb
lods
daa
fst
mov
mov
lods
sub
loope
test
jmp
sti
pop
pop
mov
aam
push
int3
pop
test
mov
adc
out
nop
cmp
pop
aad
mov
jle
mov
sub
pusha
and
pop
or
jo
and
stos
test
cmc
lahf
push
dec
lods
movsb
xchg
pop
cmp
add
call
out
fwait
dec
pusha
lret
sti
lea
out
imul
mov
sub
ret
frstor
push
and
mov
subb
dec
arpl
xor
ficoms
push
mov
add
icebp
mov
cmc
jb
jbe
ret
bound
xchg
mov
sub
push
add
repnz
hlt
fwait
cmc
mov
mov
imul
xchg
ja
mov
sub
xor
sub
mov
cmc
repz
pop
std
xchg
mov
cmp
xchg
pop
push
fwait
mov
lret
mov
or
in
mov
mov
xchg
and
xchg
sbb
pop
dec
mov
xor
gs
repz
xor
jno
movsl
jns
orw
sub
xor
insb
lods
push
dec
imul
adc
mov
in
call
lds
and
and
insl
int3
scas
ret
fildl
scas
in
jns
mov
orb
jno
les
int3
xlat
push
andl
and
push
jne
mov
cmp
dec
arpl
neg
dec
shrb
add
xlat
sbb
fst
push
xchg
scas
in
sub
push
push
ss
das
je
add
cmp
push
jnp
inc
push
xchg
mov
push
and
jmp
mov
lea
test
adcb
popf
push
sbb
push
stos
dec
push
push
add
in
fisttpl
mov
gs
fimuls
dec
data16
gs
sub
imul
out
sub
aas
sahf
push
lock
bound
out
xchg
cld
pusha
pop
cmp
fmuls
jg
inc
push
mov
ret
stos
or
push
push
nop
popf
jle
inc
call
or
dec
test
imul
clc
xchg
rcll
or
bound
mov
cmp
les
pop
std
stos
out
out
leave
imul
aad
outsl
std
and
pop
outsl
prefetchw
stos
movsl
inc
add
out
rorl
stos
aam
jne
jns
pop
imul
addl
pop
or
pushf
mov
sahf
sarb
je
mov
in
or
movsl
std
xor
inc
inc
adc
and
push
pop
jg
decb
or
mov
and
mov
icebp
insb
mov
insl
scas
xchg
cmp
sbb
mov
je
arpl
sti
xchg
dec
jecxz
pop
ret
cmp
adc
cmpsl
cmp
in
lret
push
hlt
mov
dec
imul
cmp
mov
mov
popa
adc
mov
jl
mov
sub
inc
dec
adc
sub
cmpsl
add
subl
sub
mov
xor
inc
xchg
aad
scas
mov
ret
ss
sarl
pop
cmp
jp
push
xchg
xchg
cli
ljmp
xorl
mov
pop
adc
push
loop
ljmp
xchg
and
popf
andl
repnz
jb
push
xchg
cli
enter
mov
mov
bound
sbb
sti
and
push
push
mov
mov
sbb
xchg
jnp
inc
mov
jecxz
movsl
dec
das
orl
push
mov
add
xchg
outsl
mov
mov
xchg
lods
cwtl
lds
cld
xchg
or
stc
addb
xor
cmp
mov
inc
fldenv
or
xlat
cmpsl
add
xchg
xchg
inc
lret
push
jg
sbb
mov
ljmp
xor
ljmp
jge
sbb
mov
shrl
ss
push
leave
dec
xor
pop
jg
add
and
leave
pop
push
hlt
sbb
xor
lret
icebp
cmpb
pop
cmc
dec
sub
lcall
push
or
scas
scas
adc
psubq
lods
or
sub
push
jns
insl
jmp
mov
wrmsr
lahf
and
fbld
jecxz
outsb
notl
mov
dec
push
dec
adc
repnz
lret
lahf
xchg
jae
cmp
lds
imul
in
sbb
fwait
or
or
decb
cmp
insl
mov
lahf
aaa
and
into
out
jb
nop
js
cltd
mov
xor
jmp
pop
int3
xchg
ljmp
and
push
les
sbb
nop
xchg
sub
dec
cmp
lret
dec
cmpsb
cmp
ret
mov
icebp
xchg
pop
mov
aam
cmp
jno
hlt
fcoml
dec
fsub
sub
mov
sti
push
cmc
std
and
or
rorl
xor
movsl
mov
bound
push
cmp
repnz
shlb
std
mov
push
mov
scas
lods
or
inc
insl
int
loope
test
push
jmp
testb
push
mov
jl
mov
lods
inc
fisttpll
ret
fistpll
push
repnz
call
test
xor
fdivl
mov
xor
sub
jo
test
test
pop
iret
dec
pop
push
and
push
cld
test
sbb
enter
hlt
sbb
jge
xor
inc
mov
in
adc
dec
data16
add
xor
xchg
pop
leave
inc
xor
js
lods
cld
push
test
jne
push
mov
pop
cmpsl
mov
lds
addr16
pop
jmp
mov
mov
sub
pop
sbb
loopne,pt
test
inc
dec
movsl
jp
inc
push
sub
inc
jmp
outsb
test
xchg
push
and
shlb
xchg
insl
sub
repnz
pop
jecxz
mov
jp
mov
mov
ljmp
pop
dec
popf
sbb
sub
mov
and
jb
sbb
mov
lret
adc
jne
in
mov
jmp
push
push
sub
imulb
pop
mov
in
lea
testl
gs
sbb
addb
movsl
mov
mov
bound
or
fisubs
in
aad
dec
std
inc
inc
mov
ss
fstpl
cli
bound
fldenv
dec
dec
lret
mov
insb
lods
outsl
negl
mov
lods
pop
ja,pn
fdivs
sbb
fnstsw
jg
pusha
jmp
outsl
cld
into
dec
xchg
adc
popf
aas
add
push
movsl
xchg
fsubrs
sub
out
xchg
ja
adc
in
lcall
bound
movsl
xor
movsb
outsb
cmp
inc
std
xlat
and
push
std
dec
push
xchg
xchg
or
dec
call
sub
pop
xchg
mov
outsb
in
ds
mov
mov
jg
rol
pusha
sarb
pop
sub
jl
mov
ds
test
xorb
pop
jge
pop
and
lds
push
pop
cmp
shll
mov
and
push
shll
aaa
jno
add
mov
fistpll
ja
push
inc
cmpsl
sbb
adc
iret
das
push
push
jb
loopne
loope
hlt
les
jge
adc
mov
test
pop
aaa
int
sub
ret
mov
insl
movsl
fmulp
xor
dec
loopne
call
add
or
sarl
fwait
in
jl
loopne
ret
add
dec
inc
xor
or
xchg
adc
jne
addr16
adc
pusha
or
xchg
jnp
dec
adc
adc
push
leave
mov
mov
outsb
fnstenv
or
push
or
gs
mulb
sub
and
inc
and
cmp
or
clc
dec
sbb
or
pop
mov
daa
fcomps
ss
insl
jl
iret
and
xlat
mov
and
sub
dec
or
repz
adc
bound
ret
imul
push
insb
add
shrb
inc
outsl
inc
stc
clc
jmp
call
dec
jle
les
lds
jge
mov
out
xchg
cld
dec
jo
sbbl
rcrl
xor
ret
mov
call
ljmp
mov
push
xchg
xorl
mov
inc
adc
loopne
data16
out
lret
imul
push
arpl
lock
sub
mov
xor
inc
test
subl
mov
bound
sub
vmovhps
jns
pop
xchg
daa
sbb
cmp
xchg
mov
push
push
mov
jns
sahf
dec
mov
fcmovnb
dec
ficoms
mov
cmp
call
arpl
mov
mov
dec
inc
out
fdivl
inc
mov
rcl
xchg
sbb
cmc
rol
pop
popa
sbb
lock
inc
int3
mulb
mov
mov
sub
pop
dec
in
jno
pop
test
cmpsl
in
test
jbe
push
repnz
pushf
mov
outsl
add
mov
xor
add
cmp
and
sub
push
sbb
pusha
jle
jmp
push
pop
ss
dec
mov
sbb
js
xchg
cli
xor
mov
mov
repnz
inc
movsl
and
dec
fdivs
jbe
pop
in
mov
addr16
sub
add
fiadds
jne
arpl
out
pop
cmp
lods
jnp
xchg
xor
jbe
call
insb
inc
stos
call
fidivs
sbb
or
mov
ret
loope
push
mov
clc
jl
jmp
or
jmp
and
into
cmpsb
setne
pop
fiaddl
mov
inc
fisttps
push
xchg
call
mov
push
mov
sub
lods
sub
xchg
shl
or
std
pop
lock
inc
test
enter
jl
or
xchg
movsb
sti
xchg
mov
sbb
daa
sbb
xor
mov
or
inc
call
add
and
dec
mov
es
sub
sar
jl
mov
fdivs
mov
add
xor
pop
movsl
mov
iret
push
sbb
imul
rorl
or
xor
mov
jb
add
cmp
sub
rcrl
xor
xor
cmp
pop
mov
mov
xchg
lea
mov
mov
leave
or
aaa
xor
and
sub
or
icebp
xor
les
and
cmpsb
cmpsb
xorb
mov
mov
test
mov
pop
jmp
jae
mov
fcoms
pop
adc
inc
or
rcl
arpl
in
rcll
jo
mov
in
adc
es
cmp
andb
xor
ret
out
pop
sbb
mov
add
stos
popf
mov
int3
imul
mov
cmpb
popa
sub
cmp
xor
dec
shrb
adc
loop
sub
js
movsl
stc
add
xor
sub
xor
sti
cmp
cmp
or
mov
es
and
sbb
inc
jle
xor
inc
dec
mov
and
test
outsl
inc
dec
jo
jae
mov
test
and
sub
jb
addr16
scas
jbe
clc
dec
sbb
loopne
int3
adc
arpl
out
in
pop
xchg
jbe
rorl
mov
jne
mov
cmp
je
or
add
test
loope
pop
cmpsb
push
in
mov
test
jb
leave
mov
sahf
arpl
jne
xor
adc
jmp
or
cmp
mov
xchg
jnp
je
aaa
or
ja
adc
pop
jge
push
je
adc
sahf
mov
or
push
andb
push
rcrb
icebp
mov
mov
xchg
xor
inc
push
sub
jne
or
sahf
push
pop
loop,pt
out
imul
xchg
mov
pop
inc
sarb
dec
out
aas
ljmp
jecxz
or
mov
add
and
cmp
rol
adc
cmp
mov
mov
push
sub
sarb
jae
xchg
mov
xchg
dec
aad
data16
pop
addr16
mov
jmp
arpl
mov
cmc
imul
push
pusha
scas
and
popa
test
jecxz
jae
loop
jp
stos
mov
xchg
je
jnp
jno
les
xor
int
cmc
pop
daa
sahf
fs
add
inc
pop
mov
jge
push
notl
dec
jl
cmp
lods
pop
inc
call
mov
fs
call
adc
add
cmp
pusha
dec
test
push
in
in
jb
mov
jge
das
cmpsl
mov
int
jp
xor
push
std
push
xor
sub
mov
mov
sbb
add
aad
aam
sbb
dec
dec
and
ljmp
sub
adc
push
mov
jae
add
fbld
pop
cltd
scas
pop
jmp
mov
cmpsb
cmp
add
jmp
inc
call
push
or
xor
movsb
jle
aam
shrb
xchg
testl
das
cmp
jo
push
inc
xor
cmp
or
fwait
loop
push
ds
xchg
cmp
mov
cmp
mov
pop
aaa
push
inc
cwtl
mov
xor
inc
mov
aaa
sub
push
jge
je
fisubrl
das
xor
jnp
mov
cmp
xlat
and
insb
mov
pop
sub
gs
sbb
mov
push
movsl
adc
aaa
cli
shlb
in
ret
or
imulb
imul
and
ss
rorb
jbe
adc
mov
fdivrs
push
cwtl
add
jns
inc
add
mov
inc
inc
arpl
pop
mov
mov
fwait
sbb
pushf
xchg
xchg
cli
sbb
jle
add
ret
divb
mov
lods
mov
stc
imull
lret
adc
call
cltd
push
inc
push
sbb
adc
hlt
and
push
movsb
fsts
or
pop
mov
outsl
jno
or
xchg
out
addl
push
mov
outsl
out
xor
imul
shrl
xor
sti
loopne
pop
addr16
jne
movsl
mov
add
pop
mov
jb
enter
aaa
bound
mov
sarl
popl
sub
or
fdivr
fs
popf
mov
sbb
and
xchg
mov
inc
and
into
icebp
mov
imul
insl
mov
jmp
aaa
or
jge
shl
cli
sbb
scas
pushl
mov
push
jge
into
addr16
adc
push
sarb
ss
jg,pt
mov
xor
dec
leave
ja
push
out
lds
lret
ss
push
xor
mov
test
in
adc
aaa
in
add
push
ss
fcomip
leave
stos
inc
les
andb
test
gs
sub
ds
mov
mov
icebp
in
bound
jg
pop
inc
pop
mov
mov
sub
or
movsb
push
and
cmc
test
dec
leave
mov
xchg
into
cmpsl
push
fisubl
mov
lcall
test
leave
repz
dec
sbb
adc
scas
mov
punpcklbw
adc
das
jb
cmpsl
and
fidivrl
jne
insb
jo
jecxz
push
lock
ljmp
push
dec
add
popf
inc
shll
gs
jno
mov
xor
mov
repnz
fdivl
data16
mov
out
fwait
and
out
sub
out
ja
cltd
push
out
cli
xor
add
and
mov
js
and
dec
or
gs
scas
cmp
push
adc
enter
pop
mov
mov
pop
fmul
xor
fucomip
mov
jge
sub
or
inc
fstpt
stos
fstpt
push
aas
sub
jmp
lahf
insb
cmp
les
inc
jg
in
stc
gs
cmpsl
mov
pop
cmp
mov
push
and
xor
adc
mov
xchg
jge
mov
jle
push
or
clc
mov
cmpsl
cmc
sub
out
mov
lds
mov
sbb
inc
das
sub
cmpsb
lea
jp
xchg
mov
xchg
test
mov
xor
xor
xchg
sub
dec
or
movsl
mov
mov
push
sub
mov
mov
fld
mov
cmp
cmp
xchg
cs
imul
mov
sar
mov
loopne
xor
out
xor
pop
insl
push
std
in
xchg
xchg
push
ficompl
lds
push
andb
and
xchg
dec
jl
sbb
mov
fcompl
loope
xchg
shl
jmp
fdivr
xchg
mov
inc
xor
add
jne
fs
jno
aas
pop
popl
sub
repnz
add
orb
xor
ljmp
push
xor
cmp
mov
dec
sub
sti
xor
mov
mov
pop
xchg
inc
cmpsl
cs
sahf
adc
sahf
inc
cmc
xor
jp
stos
loopne
pop
test
jae
into
jo
sub
fwait
ljmp
and
adc
and
add
nop
xor
jne
call
ret
stc
popa
inc
mov
stc
pop
mov
push
leave
jecxz
lods
rcll
sahf
jnp
or
das
das
adc
loopne
add
popf
stc
negl
fdivs
nop
mov
push
lcall
test
mov
cli
cmc
xor
add
popf
bound
inc
mov
cmp
push
lods
sub
test
or
sub
fldcw
ja
sub
pop
mov
test
aas
and
lea
enter
xchg
jp
rcrb
sahf
xchg
scas
pop
movsl
sbb
ds
mov
mov
popa
cltd
mov
xor
mov
and
scas
fld
dec
flds
lock
out
movl
adc
shr
cmc
test
cld
xor
out
jp
mov
bound
ret
mov
mov
adc
pop
out
ss
sbb
or
popa
pop
push
sub
xchg
mov
ret
nop
dec
or
cmp
push
lods
popa
xor
outsl
inc
xchg
pop
aaa
lahf
movsl
mov
jne
das
cmp
ljmp
js
xor
sub
mov
pushf
mov
mov
cmpsb
shl
ljmp
loop
fsubr
add
sbb
outsb
inc
addb
mov
and
push
jo
cltd
mov
and
xchg
pushf
sbb
sbb
lcall
lods
lret
dec
mov
mov
mov
push
ss
mov
ljmp
or
lods
stos
lock
insb
xor
shl
ss
sbb
sbb
inc
dec
mov
mov
and
jle
adc
hlt
adc
mov
sbb
sahf
andl
push
cltd
or
arpl
std
je
iret
mov
pop
test
mov
stos
adc
mov
rol
cwtl
je
aaa
adc
mov
cmpsb
and
out
xchg
push
test
xchg
or
lods
xor
hlt
call
test
or
roll
dec
sbb
sub
fs
out
daa
jle
lea
les
push
mov
cmp
repnz
jae
sbb
xor
sbb
or
inc
mov
sub
rolb
lret
les
xor
jnp
in
sbb
insb
scas
shlb
pop
jbe
test
cmc
mov
rcrb
aam
sti
sbb
in
sub
cmpsb
sub
sbb
add
adc
sub
inc
aas
ret
mov
fbstp
shlb
int3
push
sbb
mov
lret
inc
add
pop
icebp
mov
scas
mov
mov
mov
cmpsb
xchg
xchg
xchg
pop
mov
push
sbb
fisubrs
popf
mov
mov
pop
rolw
stos
sbb
jns
js
rorl
fisubs
call
xchg
outsb
jno
not
lods
xchg
iret
xchg
sbb
xor
imul
adc
repnz
adc
push
push
aad
fmull
pop
xor
xchg
rorl
xor
and
push
jmp
scas
mov
jmp
xchg
adc
setl
adc
stc
outsb
dec
sub
mov
and
lea
mov
repz
gs
push
bound
aaa
inc
mov
xchg
jecxz
movsl
and
repnz
aas
adc
sub
pop
or
jg
push
xchg
push
or
adc
sbbb
das
push
jge
loopne
sbb
fs
rclb
sarl
dec
jmp
push
insb
jns
leave
subl
pop
pop
mov
push
clc
and
dec
jp
daa
shl
sbb
mov
and
test
cs
jp
popa
ficompl
fcompl
mov
aaa
push
dec
ds
mov
xchg
mov
and
inc
test
pop
and
imul
cmp
arpl
sbb
sub
xor
mov
push
and
adc
xchg
out
add
dec
adc
and
sbb
imul
cwtl
sub
fnstenv
loope
cli
mov
xor
into
pop
cmp
mov
addb
cmpsb
or
mov
sub
jmp
in
out
cs
icebp
cmp
xchg
push
and
std
rolb
gs
sbb
add
dec
dec
inc
testl
dec
adc
jno
sub
push
lea
mov
decb
dec
pop
sbb
sbb
clc
cmp
push
aad
push
data16
ficompl
aaa
mov
call
popa
inc
push
fwait
imul
inc
scas
dec
mov
cmp
pop
cmp
hlt
daa
jns
pushl
les
imul
add
push
movb
loope
mov
sbb
fisubrl
cli
push
or
and
in
adc
dec
testl
or
insl
pop
cmp
inc
mov
aas
cmp
das
out
ljmp
repz
jae
add
imul
xor
sbb
xchg
pop
mov
bound
ljmp
mov
pop
xchg
ds
inc
mov
or
lock
imul
jno
mov
jno
xchg
loop
or
lock
shlb
shll
mov
lcall
jns
data16
jmp
imulb
lcall
enter
push
scas
push
test
mov
cmpsb
pop
pop
pop
jbe
inc
dec
cmp
out
out
repnz
xchg
inc
jmp
inc
aam
dec
or
test
repnz
stc
xor
mov
scas
gs
sbb
mov
cmp
fcomip
lods
leave
push
adc
sub
sbb
out
shll
inc
mov
mov
mov
sub
data16
int
mov
and
xchg
or
mov
loopne
adc
and
or
mov
jecxz
rcrw
sbb
jge
adc
into
add
negb
shll
dec
sub
cmpsl
dec
jg
sbb
arpl
inc
dec
repnz
inc
sbb
ss
aam
push
add
xchg
and
pop
lcall
int
fcompl
bound
inc
xchg
in
jg
aas
lock
jae
cld
inc
mov
imul
call
imul
cmc
inc
add
mov
ret
les
adc
xor
add
out
xorb
and
lcall
mov
loop
xlat
sub
cmpsb
inc
pushf
xorb
jo
cmp
cmpsb
jbe
sbb
fwait
jb
mov
inc
push
shrb
mov
rorl
mov
lods
lahf
pop
scas
movsl
fidivs
insl
and
mov
stos
lods
ds
xchg
adc
or
sbb
sub
into
push
jo
or
enter
cs
repz
jp
cmp
inc
xor
lcall
jb
ljmp
in
loopne
xchg
jmp
ret
insb
jl
cmp
add
es
sar
push
sub
lock
jge
or
shll
nop
mov
and
add
imul
xcrypt-ofb
cmpsl
test
cmpsl
sbb
adc
push
cld
jg
pusha
or
in
mov
xchg
mov
cmpsl
push
lods
mov
xchg
cld
push
out
or
fdivrl
arpl
xor
repz
pop
sbb
dec
push
into
pusha
mov
adc
fiadds
add
loop
add
add
dec
mov
and
add
add
ret
aad
jecxz
jo
cld
divb
sbb
rcrb
cmp
lock
cmp
aaa
inc
mov
mov
xor
mov
mov
in
jbe
dec
or
loopne
stos
inc
stos
fsubrp
jno
iret
ja
mov
fsubs
ficoms
add
fstpt
cmpsl
sbb
cltd
sbb
push
sbb
add
push
cmc
xor
jnp
push
add
int
sbb
adc
add
add
mov
pop
lret
xor
loope
xsha1
cmpsb
lret
inc
jl
jle
pusha
sub
inc
cmp
daa
xor
and
ret
or
fwait
mov
mov
call
cmpsb
or
jne
sub
popa
xlat
dec
popa
pop
cmpsb
sbb
add
xchg
scas
lea
nop
push
imul
ret
shll
mov
popf
lock
stos
aas
test
ljmp
and
ljmp
sbb
fwait
jle
mov
sbb
and
hlt
push
mov
xor
cmp
dec
add
fistl
xlat
sub
insl
outsb
cltd
dec
mov
xchg
test
icebp
mov
js
dec
jne
adc
clc
mov
pusha
pop
cld
loope
or
out
imul
cmpsl
mov
xor
push
pop
xchg
push
les
fadd
int
int3
ss
xor
jno
ds
shll
sub
fildl
int
call
jo
sbb
addr16
mov
das
xchg
mov
fstpt
je
imul
xor
lock
loop
orb
cs
and
jp
cmc
into
int3
fisttpll
shrb
xor
xchg
inc
xchg
pop
fimull
xor
aad
pop
add
data16
scas
std
mov
cmpsb
out
insb
pushf
hlt
mov
dec
data16
lcall
popf
add
or
sbb
cli
movsl
inc
rorl
sub
xor
dec
mov
and
jecxz
push
inc
cmp
cmp
pop
mov
inc
jecxz
adcl
scas
in
or
fistl
xchg
pusha
sub
repnz
movsl
les
xor
rcr
push
mov
in
or
fisttpl
pop
dec
jl
fcomps
lock
inc
sbb
and
test
push
sub
and
adc
sub
int3
xchg
mov
xchg
and
inc
add
xchg
pushf
imul
inc
mov
shll
sub
lret
and
mov
rcll
sarl
loopne
fmull
movsb
dec
lock
dec
dec
sbb
outsb
ficompl
out
lods
test
sbb
sarb
sub
repz
jo
lret
dec
pop
mov
stos
aas
shrb
mov
aam
scas
scas
dec
xchg
push
daa
movsb
leave
push
aam
arpl
or
jmp
mov
jno
xor
sbb
and
mov
jge
into
loopne
repnz
pop
in
and
jmp
call
cmpsb
mov
int3
out
cmp
adc
mov
imul
jp
push
lds
mov
ljmp
cltd
je
mov
fstl
daa
mov
repnz
xchg
jnp
iret
mov
add
jb
pushf
lahf
xor
call
cltd
xorb
and
lahf
mov
mov
mov
pop
cs
xor
pop
cmp
out
inc
std
cmp
lcall
bound
adc
cmp
sub
cmp
add
cld
lock
out
mov
pop
cmc
cld
out
add
or
mov
addr16
bound
sub
popf
test
aas
das
cmp
fsubrp
mov
mov
in
push
pop
adcb
outsb
xor
dec
inc
xor
out
out
dec
jle
cmp
je
loopne
repz
xor
idivl
and
mov
mov
imul
fwait
mov
test
push
dec
mov
push
xor
aam
mov
push
call
mov
pop
cltd
ljmp
sub
iret
inc
cmpl
rclb
push
cmpsl
scas
jbe
pop
out
adc
testl
test
sti
out
daa
jo
push
fcompl
mov
and
jns
push
insl
jg
adc
and
or
movsb
sub
add
inc
mov
or
jp
xchg
mov
shrb
jo
lret
push
leave
push
pop
dec
cmp
inc
add
cwtl
imull
sbb
push
mov
loopne
mov
cmc
fs
popa
push
je
lds
je
pop
les
out
jle
aad
pop
shr
jbe
cmc
mov
fs
lock
loopne
and
movsb
push
into
loope
inc
or
adcb
or
lods
jmp
ja
mov
cmp
insb
and
std
mov
sub
cld
aaa
pusha
mov
scas
push
jge
xchg
mov
cld
jp
and
jg
xor
pop
mov
cmc
push
fwait
mov
xchg
cmpsl
fsub
fs
xchg
outsb
or
imul
and
cmp
adc
shll
inc
fnstsw
sbbb
lock
cmpsl
push
dec
push
mov
cmp
mov
shll
dec
or
dec
jecxz
loopne
lds
data16
jns
push
mov
mov
or
xchg
out
push
mov
frstor
mov
cld
cmp
out
das
shrl
iret
push
xchg
mov
dec
jo
movsl
push
dec
repz
jg
sbb
mov
lahf
pop
ss
pop
xor
sbb
rol
lret
lock
std
aaa
jmp
jecxz
cmc
dec
mov
pop
out
lods
adc
pop
out
adc
shl
xchg
das
enter
add
pop
cld
sbb
jae
adc
test
pop
loop
pusha
insl
cmpsb
inc
gs
cmp
mov
sbb
daa
mov
es
adc
mov
andb
into
add
in
popw
and
movsb
addr16
dec
pusha
lods
mov
ljmp
and
sbb
add
inc
out
jb
xchg
cmp
cmp
push
sbbb
jnp
ja
lods
sub
enter
sbb
test
mov
sahf
cmc
mov
mov
lahf
cld
jecxz
cmpsl
subb
xor
push
and
push
fcompl
push
lods
lret
daa
aad
jno
in
mov
in
xchg
mov
pop
mov
scas
xchg
sub
and
movsl
rclb
mov
mov
insb
cwtl
lds
subb
arpl
repz
outsb
out
add
mov
push
movl
lock
add
cwtl
or
fisttpll
imul
jmp
xchg
xchg
mov
adc
repz
cs
mov
lret
cmpsl
and
add
sub
test
mov
dec
mov
xor
rclb
jle
push
push
lcall
mov
mov
inc
jmp
cwtl
xchg
loopne,pt
adc
sbb
cmp
inc
pop
hlt
pop
mov
ds
dec
scas
mov
jns
xchg
adc
cmp
inc
rcr
insl
into
test
or
das
adc
sti
sbb
daa
sahf
pop
test
adc
add
fadd
in
fidivrl
outsl
mov
cmpsl
sbb
cmc
add
mov
inc
xor
push
dec
mov
cmp
mov
insl
sbb
insl
out
inc
dec
and
push
xchg
js
adc
inc
adc
idivb
sbb
push
jb
clc
lds
mov
pop
jl
jo
int3
lock
mov
sarl
xchg
subl
inc
in
push
push
or
jmp
xchg
or
aam
or
and
xor
pop
test
push
mov
aaa
outsl
nop
and
adc
fdivs
pusha
pop
xor
mov
fsubrs
inc
and
push
sub
cmp
sub
lock
push
cmp
gs
in
jo
out
pushf
sub
lcall
movsb
movsb
pop
add
cmp
xchg
push
jo
dec
mov
loopne
push
cs
aaa
mov
jp
sbb
sbb
mov
mul
sbb
fcoms
sub
sub
cltd
ret
addr16
fwait
mov
test
push
fimuls
pop
inc
push
mov
or
adc
sarl
jg
neg
test
dec
ss
lds
inc
int
cmp
or
in
sbb
xlat
movsb
scas
scas
or
adc
xchg
adc
scas
out
hlt
jno
lea
ss
int3
and
es
jmp
dec
xorl
shr
mov
add
xchg
add
movsl
adc
mov
stc
test
movsl
xchg
xchg
cmp
or
jbe
push
or
jne
jmp
jp
pop
pusha
pop
clc
mov
stos
pop
enter
xchg
stos
add
inc
fisubrs
idivb
sti
jmp
lds
push
movl
lcall
xchg
cld
into
mov
and
lea
xor
imul
test
jl
mov
mov
std
std
ljmp
jnp
ss
repz
lret
in
jo
adc
movsb
dec
mov
scas
add
add
pop
and
adc
dec
xorb
test
mov
mov
xchg
sub
js
in
adc
sbb
test
in
jmp
repz
jp
cmp
ja
repz
sbb
mov
pusha
and
xchg
adc
cmp
mov
das
cld
pop
cwtl
cwtl
scas
adc
add
in
scas
fsubl
or
jae
jb
xor
lahf
das
mov
and
out
dec
cmp
jno
dec
daa
xchg
int
stos
xor
std
mov
xor
jp
mov
add
cmp
lcall
push
ljmp
rolb
jno,pt
mov
add
imul
jle
ja
ljmp
sub
xor
inc
scas
imull
in
jno
cmp
loope,pn
cltd
mov
lahf
or
jne
xchg
xor
adc
adc
out
push
imul
call
cmpsb
into
cltd
dec
sti
fs
xlat
sbb
stos
jmp
insb
mov
dec
scas
shlb
mov
sbb
sub
out
lret
clc
xor
mov
jne
mov
xor
xchg
jo
outsl
dec
xchg
xor
add
xchg
jecxz
sbb
adc
shrl
push
gs
je
xorl
aad
mov
clc
pushf
adcl
jns
jge
push
mov
push
loope
scas
imul
pop
sub
aaa
mov
lahf
cmc
sub
push
in
xchg
cmp
les
js
out
idivl
outsb
cmp
sub
loop
leave
sbb
loop
call
aad
pop
div
inc
mov
and
loop
decb
es
dec
insl
shll
out
cli
jecxz
in
aas
int
imul
popw
jno
jge
or
add
sbb
pop
imul
rcr
ret
xchg
fwait
not
jle
cli
mov
jb
repnz
mov
mov
orb
sbb
or
out
jge
sbb
dec
cld
or
push
in
push
push
mov
gs
aam
adc
jge
movsb
repnz
dec
jae
jae
iret
xor
mov
add
mov
mov
mov
xor
lcall
cli
test
das
cmp
jno
mov
call
jmp
out
mov
aad
fnstsw
mov
xchg
ret
loop
test
or
hlt
xchg
or
outsl
mov
adc
jg
mov
test
mov
lahf
xor
xchg
gs
and
inc
push
je
push
ja
outsb
mov
repnz
rcl
xlat
les
leave
cmp
sbb
pop
mov
insl
or
sbb
cmp
out
mov
or
pop
pextrw
aaa
and
jae
test
push
xor
mov
cmp
sub
inc
out
movsl
fcompl
jbe
jp
xor
push
or
xchg
mov
bound
rorb
push
jmp
xor
sub
xchg
dec
and
stos
inc
cld
dec
mov
push
mov
pop
fldl
adc
mov
scas
or
jmp
xlat
mov
xchg
push
cmc
and
and
mov
add
out
mov
popf
stos
insl
dec
mov
mov
mov
fs
or
or
imul
sti
adc
mov
outsb
pop
jo
and
mov
fcmovu
test
aas
xor
daa
in
xchg
cmp
out
nop
cltd
mulb
xor
add
aaa
outsb
pop
dec
ja
xchg
scas
xchg
in
sbb
mov
pop
sbb
inc
push
sbb
mov
cmp
cmp
mov
cmp
into
mov
xchg
and
dec
and
repz
push
jb
or
cli
or
push
rol
push
jnp
adc
cmp
pushf
bnd
test
push
out
in
add
pop
push
dec
cmp
mov
mov
push
xchg
and
in
mov
sbb
shlb
pop
aam
fucomi
mov
dec
xor
inc
dec
pop
pop
ja
jo
aas
andl
pop
pop
sti
xchg
push
add
jae
hlt
jae
lea
mov
cmc
test
jne
mov
fldcw
sbb
inc
int
je
in
js
sbb
fs
dec
sbb
cmpsl
adc
xchg
push
xchg
xchg
sbbb
jbe
insl
rol
or
clc
scas
cwtl
jno
es
xor
push
les
pop
xchg
mov
shll
pop
addb
push
or
jge
lock
dec
jb
ja
outsl
or
xor
lock
dec
mov
and
out
xchg
xchg
in
outsb
pop
mov
imul
xchg
push
and
std
xor
lds
sub
fisttpll
test
setne
mov
xor
cmpsl
pop
fadds
stos
inc
fucomip
enter
cmc
mov
add
repz
sbb
xchg
fmuls
mov
cmp
push
pop
and
repz
shl
xchg
push
out
or
xchg
add
xchg
pusha
sarb
add
fisttps
push
jge
shlb
xchg
in
and
adc
mov
addr16
and
andb
out
inc
int
fcompl
xor
rol
fsts
jns
gs
cld
inc
inc
xor
andb
loopne
cmp
mov
and
jo
gs
icebp
pop
sarb
xchg
insb
fwait
maskmovq
idivl
and
add
testb
cmp
mov
cmpsb
xor
mov
and
xchg
es
imul
or
pop
stos
mov
outsb
call
pop
setb
sub
in
imul
mov
dec
ja
js
xor
mov
in
mov
push
sbb
inc
sahf
mov
or
out
in
pop
sbb
push
out
fwait
cmp
pop
hlt
out
shl
out
and
jmp
cmpsl
addb
ds
cmc
push
imul
mov
or
out
ret
fcomps
jmp
std
xchg
sbb
out
lcall
fsts
insb
insl
dec
pavgb
cld
out
lods
js
mov
lret
pop
int
mov
scas
gs
insb
xchg
jl
shll
pop
dec
or
mov
or
and
stos
and
shll
jl
int
repz
ror
jns
fistpll
push
jp
xchg
xchg
jb
mov
pop
pop
jl
clc
call
sbb
add
mov
pop
call
fs
lcall
loope
in
add
ret
adc
aad
call
mov
xor
into
fisubrl
mov
dec
xchg
push
pushf
pop
sbb
xchg
inc
jnp,pt
xchg
es
and
mov
sbb
fcoml
fistpl
adcl
push
mov
xor
jmp
xchg
xlat
cmp
daa
arpl
or
iret
into
xor
inc
aad
push
ret
shlb
fwait
jns
gs
sub
test
cmp
cmp
push
les
cwtl
rorl
in
dec
out
push
dec
cs
push
and
and
test
mov
cmc
insb
roll
xor
pop
sahf
push
icebp
mov
addr16
inc
xchg
test
mov
cmc
ljmp
icebp
inc
adc
hlt
aad
add
push
dec
test
dec
mov
xchg
mov
iret
cld
jne
pop
je
mov
aam
xchg
jo
push
xchg
stc
mov
sarb
dec
mov
add
push
push
mov
inc
or
fsubr
leave
mov
mov
inc
stos
push
and
ds
fwait
push
push
std
adc
jae
mov
imull
test
and
hlt
fwait
sub
and
in
xlat
mov
pop
inc
push
popf
lea
test
cmc
jl
and
cmpsl
cmp
movsb
jns
xor
lret
outsb
pop
jae
mov
lea
adc
pop
insb
cmp
push
aam
pop
mov
dec
imul
scas
push
push
dec
push
xchg
adc
and
jecxz
fisubl
mov
movsl
loop
out
imul
cltd
push
xor
stc
push
fdivl
mov
and
inc
imul
es
roll
xchg
or
sbb
out
fucomip
cs
lret
mov
jl
inc
push
ret
mov
shl
adc
jecxz
mov
insb
roll
cmpl
int
aaa
push
test
push
cmp
xor
inc
shrl
push
enter
ja
push
inc
sbb
jo
mov
stos
inc
mov
cwtl
push
adc
xor
int
call
pop
xor
insl
xor
mov
mov
leave
xchg
aaa
in
mov
pop
mov
push
enter
int3
test
call
iret
mov
mov
dec
dec
push
lahf
push
test
adcl
mov
pop
mov
in
mov
jl
call
dec
xor
pop
sti
push
jle
sbb
gs
movsl
or
xchg
sub
ss
test
sbb
mov
sub
je
sti
fiadds
sub
fcmovnu
push
cmp
sub
jecxz
loope
cmpb
jmp
pop
xchg
mov
push
inc
scas
sar
or
adc
mov
jns
and
add
ds
sub
lret
cmpl
fisubrl
jbe
pop
cmp
mov
imull
ja
shll
fwait
imul
cltd
xchg
mov
out
adc
sub
mov
xor
adc
add
push
mov
jle
xor
andb
dec
cmp
add
xor
or
gs
inc
push
popf
cmpsb
push
jo
or
sbb
stos
mov
mov
cltd
mov
xchg
nop
mov
js
outsb
bound
fs
push
pop
sub
imul
jb
test
fcmovnbe
cwtl
dec
int
push
mov
dec
pop
test
jg
loope
mov
lahf
and
pop
add
ret
aas
mov
mov
mov
int3
inc
jg
jb
xchg
sbb
dec
into
pop
jne
pop
sub
dec
loope
xchg
mov
fcmove
ret
xchg
roll
xchg
jno
inc
sub
cmc
rolb
sub
fists
pop
jnp
int
inc
inc
mov
data16
add
call
gs
push
loop
push
push
lds
cmp
arpl
loope
pop
push
enter
push
popf
fisttps
xor
dec
imul
movsb
lods
loop
and
lret
hlt
ljmp
push
das
sti
call
xchg
std
stos
lods
mov
loope
jg
cmp
addr16
ret
push
orl
add
lcall
and
xlat
jae
mov
or
lods
xor
cmp
arpl
sar
dec
push
outsl
out
ljmp
and
sbb
jnp
lret
pop
adc
je
cltd
mov
jne
lret
fwait
aam
imul
lret
sbb
shl
xorl
xchg
hlt
push
dec
repnz
cmp
pop
xor
jno
mov
notb
andb
ljmp
loope
xchg
dec
xchg
push
or
jo
push
data16
xor
into
push
dec
shll
aaa
inc
pop
xor
mov
sbb
ljmp
divl
in
pop
inc
mov
mov
outsl
cltd
mov
xchg
mull
xchg
pusha
push
scas
int
adc
mov
movsl
sbb
cmp
dec
movsb
hlt
jns
pop
push
xchg
aaa
insb
pop
repz
inc
cld
call
ret
out
push
dec
dec
sub
dec
sbbl
mov
mov
outsl
pop
cmovle
inc
shlb
data16
in
sbb
test
sub
fisubs
ffreep
jmp
cmp
fwait
repnz
mov
ds
or
nop
mov
and
or
jbe
push
or
cmc
ljmp
pop
mov
popa
std
ret
add
push
cmp
std
addr16
shrl
stc
inc
mov
adc
stc
aas
stos
or
add
sysenter
push
dec
push
sub
add
cwtl
fnstsw
stc
out
fstl
inc
int3
xchg
pop
push
or
dec
add
lahf
add
fadd
jle
xor
adc
insb
push
mov
in
mov
sub
out
mov
sub
popa
and
mov
mov
ret
test
dec
idivb
and
fwait
mov
adc
push
jecxz
adc
xor
movsl
jle
cmp
nop
mov
mov
add
mov
mov
into
fsubrp
xor
lock
push
lds
cmp
inc
xchg
in
lods
and
add
icebp
and
jo
mov
mov
pop
adc
lret
aad
repz
sub
xchg
cmpsl
inc
jmp
idivb
xlat
jbe
inc
push
out
stos
je
gs
mov
mov
mov
and
cmpsb
arpl
fimuls
cmp
movzwl
push
jmp
rcr
pop
push
push
jno
dec
cmp
mov
mov
cld
adc
sub
pop
pop
fisubl
or
fiaddl
test
xchg
dec
jle
add
cli
je
scas
cmp
addl
inc
inc
pop
shrl
scas
lret
bound
sub
cmp
faddl
lret
inc
xorl
mov
pop
aad
add
repz
xlat
shr
sbb
rcl
and
pop
jl
cmp
outsl
pop
icebp
xor
icebp
in
mov
mov
inc
mov
dec
mov
repnz
movsb
dec
clc
push
aaa
loope
addr16
lret
pop
lcall
iret
gs
push
xchg
xor
call
add
or
xor
mov
cld
mov
adc
jbe
cmc
cmp
sbb
imull
incb
push
adc
xchg
add
add
ja
pusha
and
add
dec
xor
dec
testl
insb
and
inc
shll
cmp
and
or
gs
mov
add
in
pop
jo
cmp
fisubs
int
aaa
jle
lods
dec
pop
add
push
mov
push
mov
push
mov
inc
mov
imul
sbb
test
test
outsl
cld
insl
xor
sbb
add
cmpb
cmpsl
cmp
pop
sub
cmc
call
dec
pop
test
movsb
scas
lcall
in
std
push
mov
add
and
imul
dec
xor
mov
jp
push
ja
adcl
enter
pop
mov
sbb
jl
test
stos
cs
sub
scas
mov
rolb
mov
subb
cmc
lock
jno
notb
pop
push
pop
dec
stos
and
pusha
cmp
cmpsl
or
add
call
add
repnz
pop
inc
retw
jle
data16
mov
push
fs
out
xchg
inc
cli
cli
or
daa
test
mov
mov
xlat
idivb
xchg
lcall
pop
fmuls
leave
sub
repz
pop
in
sub
pop
jmp
ljmp
xchg
hlt
dec
loop
mov
push
fadd
push
add
mov
adc
or
lahf
mov
imul
pop
mov
add
testb
pop
push
cmp
test
bound
xor
or
adc
or
cld
pop
sbb
mov
push
mov
negb
jp
pop
dec
cld
push
mov
outsb
daa
xchg
mov
pop
sahf
push
lret
rcrb
and
scas
adc
adc
fmull
push
movsl
jp
add
push
rorb
addr16
mov
into
xchg
ret
loop
popa
ja
cmp
aaa
mov
popa
repnz
lret
xor
adc
mov
pop
inc
xchg
push
aad
or
push
pop
lret
xor
sbb
jbe
cmpsl
inc
mov
decl
rcrb
cs
rcl
out
mov
stos
and
outsb
mov
mov
adc
mov
js
lods
cmp
popl
sub
push
add
popf
push
aam
sarb
dec
sub
fisttps
dec
add
out
mov
add
and
fwait
pop
int
inc
fs
xor
imul
loop
loop
shll
dec
or
je
int3
pop
jg
data16
and
outsb
add
dec
ja
imull
adc
dec
loop
cmp
test
in
in
jl
push
in
dec
fs
xor
jg
fsub
enter
mov
sbb
jno
mov
pop
aaa
inc
push
mov
lea
xor
flds
push
test
dec
outsl
jge
mov
out
jecxz
fistps
sbb
xchg
push
scas
add
ljmp
in
rcr
loopne
loopne
push
xchg
aad
add
scas
testl
sbb
xchg
mov
jp
add
cmp
sub
xchg
cmp
dec
pop
inc
inc
test
inc
pushf
fadds
cmp
outsl
xor
mov
test
pop
push
cmp
mov
test
mov
test
xchg
push
stos
btc
add
int
das
mov
je
gs
mov
sbb
dec
popa
sbb
shll
iret
inc
jnp
xlat
sbb
mov
pusha
or
movsl
insb
and
lahf
or
cmpsl
jecxz
add
bound
movsl
jle
xor
shl
fsubr
je
dec
out
cmp
dec
cmpsb
outsb
stos
push
adc
dec
jo
xchg
inc
lret
fsubs
or
jmp
icebp
test
mov
sbb
inc
enter
punpckhwd
dec
jns
add
test
sarl
lods
inc
push
pop
fidivs
add
in
add
incb
bound
into
xchg
push
add
mov
cwtl
test
or
sbb
xchg
shrl
mov
push
and
and
xchg
pop
adc
pop
popf
or
mov
mov
dec
je
jns
pop
adc
xor
or
insb
mov
addl
cs
incb
xorl
sbb
test
cmpsl
jnp
cltd
xlat
les
pusha
leave
roll
call
add
nop
push
mov
ja
cmp
jns
sub
add
call
or
lock
lahf
jns
mov
dec
inc
mov
or
dec
cs
push
shl
sub
cmp
sub
aad
mov
ja
push
mov
fs
push
andl
lret
pop
push
jecxz
ljmp
sub
push
or
imul
roll
cmp
insb
push
adc
pop
call
fstpl
lea
mov
into
mov
pop
cmpsl
rorb
shrl
or
jecxz
jae
movsl
push
test
in
xor
mov
xchg
dec
push
mov
lds
add
mov
cli
adc
cmpsl
xor
xchg
push
mov
rorb
outsl
add
pop
cmp
push
mov
cmp
arpl
mov
or
pop
dec
pop
adc
cmp
push
sub
es
cltd
jnp
aas
push
push
fisubl
sub
test
mov
test
into
jmp
int
int3
scas
dec
jne
adc
pop
ds
subb
add
pop
jbe
out
fldz
pop
push
outsl
pop
pop
jle
dec
mov
jno
lea
outsl
jmp
fsubs
test
push
in
xchg
sbb
push
pop
xchg
push
sbb
dec
xor
lea
andb
nop
in
push
or
jae
test
pop
mov
cmp
cld
inc
pop
jp
es
jbe
repnz
inc
xchg
outsb
mov
addr16
cmpsb
cmp
lret
lods
ja
adc
repnz
lcall
xor
mov
inc
popa
pop
mov
out
fstpl
out
imul
ficomps
pop
add
inc
ss
in
mov
push
and
pusha
shll
sub
icebp
push
popf
sbb
fidivl
sbb
testl
mov
iret
dec
nop
push
lods
clc
add
int3
das
push
jecxz
cmpl
faddl
dec
sub
mov
sbb
leave
insb
repnz
loopne
fidivrs
xchg
ja
shll
dec
mov
int
mov
pusha
inc
xchg
dec
sub
in
in
out
jl
cmp
mov
stos
add
dec
xchg
rorb
mov
rorl
cltd
inc
dec
xchg
jge
imul
aaa
xor
test
jg
fmuls
pop
or
jg
jecxz
ret
xchg
mov
orb
pop
xor
cmp
dec
push
push
mov
xor
dec
dec
mov
pop
cli
push
repz
jg
jbe
pop
js
mov
mov
pop
in
mov
rcl
xchg
adcb
gs
fisubrs
inc
mov
cmpsl
push
scas
shlb
ds
dec
jge
mov
adc
push
push
mov
mov
dec
adc
cmp
pop
jge
and
dec
bndstx
pop
add
fs
ja
dec
out
dec
push
push
stos
jns
out
inc
test
sub
fnstcw
push
push
dec
xchg
outsb
mov
pop
adc
mov
outsb
adc
push
in
or
inc
fisttpll
pop
jp
pusha
sbb
out
lea
pop
mov
in
jg
insl
in
enter
or
xchg
mov
cwtl
imulb
jo
lcall
fistps
xchg
nop
dec
adc
sub
push
and
mov
outsl
iret
pop
aaa
pop
movsl
sbb
cld
dec
dec
in
cli
add
sti
outsl
aam
sub
push
push
mov
cmc
in
push
fsubl
aas
aas
ja
leave
jmp
adc
aam
icebp
in
pop
and
leave
int3
outsb
adc
mov
mov
push
mov
xor
push
dec
inc
addb
add
ret
loopne
fisttpll
fstps
xchg
in
lret
lret
cli
xor
in
std
push
addr16
imul
mov
adc
sub
imul
push
jae
xor
jmp
add
insl
std
dec
dec
sub
fdivs
shr
push
jnp
inc
add
div
pop
adc
or
das
xor
push
xchg
stos
and
jnp
jmp
push
fs
add
or
lcall
lahf
mov
les
pop
pop
lods
arpl
imul
sub
ret
psrad
mov
and
mov
insb
je
mov
bound
imul
dec
mov
gs
add
mov
jge
xchg
xor
push
pop
or
insb
cwtl
cmpsb
test
insb
dec
push
mov
scas
popf
push
pop
gs
adc
dec
flds
sub
aas
fcomp
nop
in
cmp
xchg
enter
in
xor
inc
jbe
inc
aaa
sub
cmp
inc
repnz
ficomps
gs
sahf
sqrtps
jp
fs
fildl
arpl
stc
daa
add
xor
mov
je
dec
pop
sub
sub
cmpl
ljmp
push
mov
in
mov
push
pushf
jnp
jae
mov
stos
jp
je
xchg
shlb
xlat
aas
sarb
push
cmp
mov
jmp
xor
pop
icebp
std
mov
imul
std
inc
stos
pusha
push
dec
idiv
cmpsb
ret
jle
mov
lret
cmp
push
lret
and
fs
stos
gs
aam
leave
fistpl
in
aad
xchg
sub
mov
jp
sbbl
rclb
cmpsb
movlps
adc
pushf
outsb
jge
adc
cmpsl
outsb
sub
jno
sub
mov
ds
std
dec
mov
gs
and
sbb
sbb
dec
pop
push
inc
imul
adc
mov
notb
into
mov
lret
and
xor
add
xlat
popf
push
aaa
inc
ret
and
sub
pop
lcall
xchg
cltd
jo
xchg
cmpsb
stos
xchg
aas
jl
mov
ja
loopne
inc
ja
dec
add
add
scas
iret
xor
cmp
scas
test
popf
lock
xlat
jg
adc
add
pop
pop
push
or
insb
push
insb
push
dec
mov
les
jle
pop
xchg
ljmp
xchg
arpl
lahf
xlat
push
sub
stos
ds
cmp
ret
cmp
sahf
mov
push
insb
pop
dec
scas
popa
in
cmp
repz
rolb
das
mov
mov
mov
dec
inc
pop
cmp
adc
xchg
mov
inc
and
push
cmpsl
pusha
or
test
add
inc
lcall
jge
jecxz
mov
or
sbb
xchg
xchg
fwait
outsl
cld
cwtl
lahf
ret
cli
add
jmp
sbb
gs
repnz
mov
gs
or
xorl
les
mov
pop
loopne
popf
das
push
inc
sbb
xchg
daa
cmp
push
movsl
push
or
adc
mov
pop
in
test
mov
xor
and
xor
lret
and
mov
faddl
aam
mov
xchg
push
into
lret
mov
inc
cmp
lahf
xchg
lock
dec
jl
xlat
cmc
fcomps
aad
loopne
adcl
adc
mov
sub
test
int3
and
neg
out
sbb
sbb
mov
or
aas
and
xor
sub
mov
andl
jnp
lock
xchg
dec
push
lods
mov
popa
adc
inc
xor
cmp
mov
xor
adc
scas
gs
xchg
ja
enter
cmp
push
arpl
stos
lcall
or
je
and
sbb
inc
sbb
pushf
push
rcrb
add
xchg
gs
mov
push
push
cmpsb
cwtl
imul
or
inc
je
push
pop
sub
mov
fadds
cs
inc
inc
mov
pop
aas
movlhps
out
dec
das
push
mov
sub
repnz
pushf
cmpsl
dec
and
ret
adc
dec
inc
imul
call
or
add
sub
inc
jno
dec
dec
cmp
mov
loop
notb
pushf
adc
in
mov
cs
icebp
or
jo
movsb
cmovb
add
inc
jecxz
movsb
stc
dec
ret
push
or
mov
jmp
xor
jae
cld
xchg
cmp
cmp
xor
mov
add
cmpsl
gs
movsb
das
and
lret
scas
mov
jnp
pop
and
sbb
stos
cmp
dec
xor
ret
pop
mov
call
push
into
lods
insb
or
add
fdivrp
ds
mov
insb
xchg
or
or
mov
adcl
dec
scas
cmp
lods
outsl
push
popf
adc
xchg
loop
aad
mov
xor
lret
stos
stc
cmp
cmp
jp
sub
inc
push
cmpsb
sub
jge
into
xchg
or
mov
mov
sarb
jg
cmpsl
test
or
push
xor
mov
loopne
mov
js
mov
je
ret
scas
xor
cmpsl
rolb
jo
ja
repz
mov
movsl
test
sarb
enter
in
es
push
adc
or
fwait
je
add
add
push
xchg
cmpsl
iret
mov
scas
push
das
mov
stos
xchg
push
xor
adc
stc
mov
jg
ficomps
dec
sub
sti
jge
aad
dec
int3
inc
lret
dec
nop
jle
testb
pop
stos
push
jg
mov
inc
icebp
jnp
jge
movsb
idivl
nop
nop
inc
outsl
jns
inc
jb
pop
cmpl
fidivl
cmp
lock
aad
ljmp
or
clc
shrl
fcmovnb
scas
mov
xchg
mov
inc
or
cmpsl
mov
movsl
sbb
xorb
jl
cmp
mov
push
jbe
loopne
test
js
stos
in
mov
and
xchg
mov
cmp
mov
jne
sahf
sub
lcall
jne
xchg
fs
call
sbb
test
movsl
and
pop
mov
inc
ja
lret
pop
dec
jl
and
pusha
mov
push
fistpl
cmpsl
fisubrl
jo
pop
inc
pop
and
js
pop
adc
mov
sub
lods
jno
in
repz
rclb
mov
ljmp
mov
and
or
in
ret
push
movsb
or
jmp
cs
jmp
cmp
popf
add
push
ja
jns
test
stos
and
sub
out
or
andb
insb
lds
cmp
xchg
es
cltd
lret
dec
ret
call
movb
mov
lods
sub
mov
test
icebp
int
mov
adc
aaa
mov
sbb
jge
cld
sub
inc
cmp
sahf
pop
jae
in
sub
jb
mov
and
xchg
fistpll
movsb
add
xchg
or
push
repnz
mov
jmp
std
jo
add
push
insl
push
jne
fisubrs
insb
add
subb
and
loope
mov
inc
inc
sbb
pop
je
jns
jae
in
jbe
sti
sbb
dec
les
stos
push
adc
lea
jmp
iret
xchg
xchg
mov
adc
adc
cmp
aaa
or
pusha
adc
rcll
sub
stos
or
cmp
mov
nop
clc
jnp
and
repnz
into
inc
inc
in
adcb
mov
sub
icebp
sbb
or
mov
dec
pop
aad
jp
shr
push
jnp
pushf
sub
inc
idiv
call
adc
and
pop
vunpckhps
jp
xchg
ljmp
inc
dec
aaa
shll
xchg
loope
hlt
and
lds
and
dec
mov
xlat
lret
or
push
lock
add
icebp
stos
lea
enter
aas
shrl
out
aam
dec
jae
lret
orb
mov
les
and
sub
and
pop
lea
pop
in
and
dec
loopne
mov
lods
cmpsb
fsubs
into
in
fcomi
and
inc
js
outsl
test
add
cwtl
dec
mov
outsl
into
xchg
push
adc
xchg
jo
inc
scas
inc
pushf
andb
bound
and
mov
std
push
repz
push
mov
in
xchg
das
or
lds
addr16
arpl
ret
cld
xor
lods
pop
movsl
dec
stos
jae
addr16
pop
pop
mov
sbb
pop
pop
outsb
lret
lods
and
fstl
divb
sahf
push
mov
sub
andl
push
xor
leave
jle
imul
or
jo
mov
cmp
subb
fisubrs
xchg
xchg
or
mov
lods
xor
jne
enter
popa
jne
scas
mov
pop
shrl
ret
sbb
dec
enter
jecxz
mov
mov
add
popl
inc
in
dec
pop
dec
xor
cmp
xor
es
fisttps
sbb
adc
iret
mov
fwait
jnp
add
pop
inc
lret
dec
xor
mov
icebp
popa
scas
stos
in
in
and
mov
data16
ret
ffreep
sbb
cmp
mov
add
gs
fists
out
and
repz
insb
cmp
call
xor
ret
rolb
mov
lahf
subb
cs
or
and
xchg
pop
rcrl
popa
or
hlt
imul
cld
sbb
mov
sub
iret
push
jl
pop
xlat
push
andl
or
jb
or
jle
push
shlb
xor
and
and
xchg
shrb
mov
xchg
cmpl
xchg
push
mov
jecxz
mov
sub
mov
mov
push
nop
inc
pop
jl
test
pop
imul
mov
rclb
gs
into
aam
outsl
test
and
out
bound
push
arpl
call
popf
dec
sub
push
xor
lods
repz
mov
jmp
inc
sbb
fmuls
sar
xor
jbe
pop
loope
mov
jne
push
pop
sub
jmp
loopne
nopl
sbbb
mov
mov
jnp
dec
sbb
out
std
fcoms
arpl
andb
outsb
popf
cmpb
outsl
sbb
sub
addr16
mov
mov
pusha
push
test
les
mov
icebp
icebp
dec
mov
notb
repz
jne
pop
pop
or
inc
ja
jb
mov
icebp
aaa
cmp
pop
sbb
dec
rol
push
movsb
cmpl
sub
xchg
xlat
jb
push
sub
lods
add
push
and
mov
cmp
xchg
push
movsl
inc
mov
push
dec
jno
cmc
push
shlb
clc
and
sub
fmull
mov
stos
push
insl
cmp
out
js
mov
ja
popf
in
ret
pop
movsb
int
loopne
pop
mov
ficomps
test
mov
mov
adc
or
lcall
je
test
popf
popf
cwtl
jg
fucom
inc
add
sahf
pop
imul
or
xchg
out
cmpsl
dec
sbb
and
push
pop
out
mov
insl
rcl
lret
xchg
pop
adc
inc
je
mov
aaa
sbb
cmpb
aaa
push
inc
shll
xlat
lods
mov
add
pop
sub
lods
lret
xor
xchg
mov
mov
mov
dec
divb
sbb
push
and
pop
rolb
mov
ljmp
pop
mov
rolb
insl
jae
fdivs
loop
cmpsl
cmp
mul
or
sahf
xor
int
mov
loopne
mov
int
adc
jo
scas
pop
sbb
adc
fnstenv
jecxz
aaa
pop
cmpsl
or
loop
lods
sub
shlb
movb
mov
inc
mov
mov
xchg
or
lahf
insl
xchg
xchg
lret
jp
stos
xor
mov
hlt
add
jg,pn
inc
cs
xchg
push
out
inc
insb
xchg
xchg
clc
jp
push
sbb
jno
push
adc
dec
sti
test
mov
ds
cmp
mov
cmpsl
push
cmp
sarb
dec
js
and
push
js
fisttpl
mov
add
dec
addr16
mov
pop
rorw
loope
inc
shll
lods
fiadds
movsb
xchg
or
out
sbb
jne,pn
xchg
negb
sub
pop
jmp
pusha
inc
fst
std
pushf
or
push
mov
aaa
mov
mov
leave
sahf
dec
mov
pop
xor
dec
hlt
cli
pop
dec
sahf
and
add
lahf
jo
pushf
cmp
push
fnstcw
js
pop
repz
mov
in
repnz
jne
lea
ds
mov
xor
inc
cmc
xchg
repz
sbb
adc
cltd
cmp
mov
ficoml
mov
cmp
loop
sbb
aam
pop
cltd
add
cmc
rclb
imulb
ds
es
xor
inc
mov
arpl
mov
mov
inc
sbb
sub
xor
movsl
les
cmp
je
jnp
test
and
pop
into
xchg
push
int
inc
std
mov
jae
repnz
stos
jbe
xlat
xchg
mov
pop
rorl
inc
sub
dec
mov
mov
fidivrs
add
loope
pop
lret
lahf
cli
xchg
push
or
insb
inc
test
js
fistpl
mov
lret
hlt
sti
add
dec
xor
xor
enter
and
xchg
mov
adc
push
lea
inc
xchg
stos
xlat
addr16
xchg
aas
inc
sahf
jge
xchg
cmp
shrb
inc
push
add
scas
fs
cmpsb
outsb
xchg
cmc
loope
xor
xchg
cmp
icebp
imul
push
sahf
outsb
addr16
sbb
mov
popf
xlat
in
in
cmovns
fidivl
push
pop
or
fmulp
push
sbb
cmp
cmpsb
jo
pop
sbb
ror
scas
xor
insb
fldenv
enter
adc
cmp
mov
cmc
lcall
rorb
xor
insb
aad
rcll
outsb
cmc
mov
fs
shll
xlat
cltd
xchg
sub
sbb
mov
out
mov
test
sbb
mulb
or
add
pop
fstpt
das
mov
xor
loop
mov
stos
scas
cmc
add
inc
aad
jns
jb
lock
frstor
insb
xor
xchg
mov
repz
add
mov
lret
ss
lods
in
ror
push
repz
orb
adc
push
add
mov
mov
mov
stc
xor
cmp
add
or
aaa
lods
loopne
adc
mov
xor
pop
pop
les
movsb
out
daa
mul
mov
xor
loopne
jp
mov
or
pop
add
sarb
pusha
sub
test
fimuls
dec
cld
lcall
mov
test
xchg
mov
add
sti
imul
mov
mov
ror
push
andb
pop
lods
sbb
inc
mov
stc
xor
mov
pop
jnp
lods
push
sub
aam
sub
add
mov
es
adc
mov
push
std
mov
fistpl
cmc
test
test
and
push
testl
out
mov
bound
call
push
fwait
imul
mov
adc
and
push
pop
das
mov
adc
mov
jp
xlat
es
pop
add
loopne
jnp
subb
imul
xchg
cmp
jge
inc
das
scas
dec
je
pop
mov
push
mull
cmpsl
fstps
addr16
push
sbb
jbe
push
mov
dec
push
lret
dec
cmp
add
mov
sub
pop
aaa
fcompl
icebp
dec
xchg
mov
pop
add
and
adcb
adc
arpl
scas
mov
and
in
xchg
in
mov
in
data16
lcall
dec
xor
mov
mov
jns
jbe
or
cmp
or
ret
sbb
inc
arpl
dec
mov
mov
cmpsl
xchg
dec
sbb
out
js
mov
cmp
and
xor
xchg
mov
or
mov
lret
stos
dec
pop
fisubrl
or
je
inc
mov
lret
jmp
insb
mov
scas
xor
mov
mov
mov
sti
ss
inc
push
jecxz
mov
sbb
hlt
cmpsb
inc
sahf
push
jl
sbb
rcl
mov
fwait
xlat
and
mov
jae
push
fucomp
cmpsb
stos
mov
in
test
xor
pop
test
mov
sub
pop
jge
loope
lods
xorb
inc
addl
push
or
out
adc
sub
ss
mov
aam
repz
mov
cmpsb
or
mov
int3
push
pop
insl
add
jg
cmp
sbb
mov
pop
addr16
xorl
pop
sub
adc
mov
dec
lret
mov
outsb
xchg
push
dec
lods
sbb
or
inc
adc
sahf
xor
inc
push
ljmp
je
in
movsb
repnz
nop
push
mov
aam
popa
int3
dec
push
leave
sbb
movsb
fidivs
inc
lock
adc
jne
out
and
dec
popa
es
test
cmp
scas
bound
xchg
in
dec
shlb
mov
push
clc
dec
pop
xor
pop
sub
repz
xchg
fisttpl
bound
jg
or
push
test
cmp
sbb
lock
aaa
or
mov
ret
push
into
mov
mov
jo
test
xchg
mov
lds
or
outsb
push
sahf
inc
sbb
test
insb
arpl
jae
xor
mov
mov
data16
push
jb
orl
xor
addr16
nop
test
addr16
in
add
mov
inc
insl
inc
push
xorb
iret
xchg
cmp
xchg
cmp
pop
jge
enter
adc
pop
lahf
loope
lret
fwait
int3
xor
cltd
add
jp
or
stos
imul
pop
sbb
rcrl
clc
sbb
push
jp
es
dec
dec
push
and
xchg
data16
int
leave
and
clc
scas
stos
sub
adc
push
int
pop
imul
mov
repz
imul
jp
push
fisubl
ret
add
or
gs
ss
sub
imul
in
test
fstpl
dec
jbe
in
mov
clc
jns
rorl
fwait
cltd
mov
hlt
adc
out
fs
inc
movsb
mov
cwtl
pop
scas
es
and
jae
dec
jb
jg
jae
and
ds
xlat
adc
ret
loopne
call
push
cs
imul
les
cmpl
cwtl
in
push
mov
pop
adc
xlat
pop
stos
and
and
cmpsb
pusha
sub
and
aaa
xchg
iret
mov
mov
push
dec
dec
mov
xor
mov
push
pop
scas
mov
jp
mov
ret
sahf
fs
jns
cmp
mov
xchg
sub
add
scas
fsubrs
test
jge
les
in
xchg
sub
jmp
push
push
push
aad
dec
popa
cli
arpl
lcall
testb
push
or
ret
mov
sbb
xor
xchg
cs
mov
xcrypt-cbc
cmpsl
xchg
mov
jbe
push
cmp
addb
into
aam
cmp
pushf
adc
jne
mov
ljmp
lcall
cld
mov
scas
mov
ret
xchg
jge
sbb
clc
mov
xchg
cmpsb
push
mov
rol
movsl
inc
mov
popa
xchg
push
xchg
mov
jecxz
pop
aad
test
aas
xchg
dec
pop
jae
adc
shlb
sub
ja
xchg
int
rcr
int
daa
loop
stc
pop
xchg
cmp
sbb
fwait
sbb
push
or
cmpsl
out
mov
test
add
push
stos
jg
std
mov
and
fdivs
adc
pop
aaa
mov
sub
xor
mov
test
push
in
cmp
add
stos
push
pop
loop
scas
sbb
push
es
pusha
movlhps
push
sbb
pop
push
scas
pushl
shl
adc
pop
les
aam
shlb
imul
dec
xchg
adc
add
sbb
cmc
sbbb
test
scas
xchg
mov
mov
adc
iret
test
clc
and
cmpsb
fisubrs
movsl
dec
popf
adc
mov
aaa
adc
sub
ret
xchg
fnstsw
mov
and
cmp
mov
pop
js
arpl
pop
cltd
lds
mov
push
aaa
in
dec
push
jle
jbe
scas
stos
test
xor
push
and
lds
push
lods
sbb
mov
fimuls
and
mov
or
jp
jns
push
int
pop
int
and
push
fcomps
nop
gs
sbb
fs
cmp
mov
push
rcll
gs
outsl
mov
and
mov
mov
adc
jecxz
pop
xor
das
cs
mov
mov
jecxz
orl
jo
fmul
push
fdivrl
xor
or
mov
jb
adc
jle
test
jns
push
leave
jmp
neg
fistpl
cmp
sahf
dec
or
or
push
inc
xor
jbe
sbb
dec
ljmp
cltd
jo
mov
in
hlt
fs
xor
mov
xchg
pop
aad
insb
xchg
aas
data16
xor
and
mov
ret
or
or
add
dec
movsl
aam
ret
cs
dec
cltd
mov
flds
sub
pusha
push
push
and
push
push
gs
xchg
fdivl
das
and
loop
daa
addr16
mov
fstpl
xchg
inc
adc
jmp
and
fadd
xchg
loopne
pop
mov
mov
add
jle
cmc
or
insl
nop
cld
dec
int3
popf
lock
cmpl
aam
push
or
lods
test
xchg
testl
jno
cmpsl
and
nop
sbb
pop
daa
mov
push
xchg
sub
roll
das
xor
or
mov
mov
fistpl
in
lods
dec
ja
out
in
stc
bound
pop
push
mov
sti
jp
lods
lcall
add
dec
aam
repnz
jo
cmp
sarb
outsb
int3
lahf
mov
repz
xchg
aad
in
testb
xchg
dec
scas
xchg
adc
jb
enter
add
inc
cmp
shl
andb
xor
ds
popa
negl
mov
repnz
mov
fnstenv
popf
aas
mov
rcrb
xchg
xchg
sub
jbe
je
mov
subb
mov
push
in
lahf
inc
fwait
push
pop
aam
in
shll
sub
cmp
and
icebp
mov
jg
ret
xor
lret
ret
sub
sbb
lods
cmpsb
jmp
scas
pop
mov
inc
pop
inc
stos
ds
mov
cmpl
xchg
popf
inc
mov
jnp
pop
das
fcoms
lock
popa
std
push
shlb
sbb
fcoml
adc
mov
mov
pop
int
push
jl
pop
jbe
je
and
and
int
imul
cld
test
mov
test
lock
icebp
fcompl
push
cmpsl
adc
lea
dec
call
jmp
lods
push
lods
xor
sub
inc
adc
movl
mov
lea
sbb
aaa
pop
dec
sbb
pop
sub
lahf
lahf
xor
cmc
xorb
xor
push
lahf
xor
pushf
lock
dec
outsl
rcll
adc
add
sbb
adc
push
shl
stos
xchg
cmp
cmp
add
test
jp
mov
or
hlt
notl
jns
adc
call
cwtl
xchg
mov
and
movsl
cmp
mov
call
xor
inc
lcall
cmp
aaa
popa
arpl
test
mov
mov
push
lods
dec
daa
scas
ja
shr
std
mov
adc
aas
mov
das
adc
out
in
sti
pop
aam
inc
ljmp
je
outsb
ffreep
outsb
mov
dec
push
push
xlat
movsl
insl
or
out
imul
sahf
cli
jmp
inc
scas
pop
inc
lahf
imul
push
test
testl
push
imul
and
lcall
hlt
bound
mov
push
dec
sub
lds
aaa
mov
rcl
and
orb
push
enter
push
fidivs
ljmp
mov
cmp
xchg
pop
leave
jnp
stos
pop
jl
mov
jp
xchg
cmp
jne
data16
int
mov
sub
push
repnz
xchg
jge
inc
xor
mov
nop
fistpll
adc
repz
xor
adc
mov
or
lock
adc
lcall
fisttpl
xchg
fisttpl
shrb
shll
mov
fdivs
pushf
and
xor
pop
sbb
xor
inc
mov
cmp
ja
xlat
imul
sub
or
es
sub
stos
stos
cmp
xor
push
or
mov
call
mov
mov
mov
aam
inc
mov
or
push
daa
repz
xor
fs
pop
xchg
mov
in
jp
test
lret
fstps
sub
xchg
out
mov
inc
xchg
in
jmp
and
push
lods
shrb
fs
and
xor
leave
bound
mov
fwait
sbb
add
pop
lods
sbb
test
test
clc
push
in
loope
jae
fdivs
pop
mov
xor
stos
push
insl
jmp
pushf
mov
fstpl
or
dec
or
mov
push
jb
xor
jl
popaw
dec
test
pop
cltd
cmp
out
pop
sbb
inc
mov
adcb
std
push
fs
pushf
push
adc
dec
mov
pop
sbb
xchg
mov
or
or
in
jecxz
insb
sbb
insl
xor
mov
cmp
mov
dec
sbb
mov
pop
aad
and
and
xor
imul
sub
lds
lds
inc
push
mov
rcrb
mov
pop
mov
into
testb
fmuls
xor
mov
sbb
gs
cmpsb
xchg
bound
jecxz
fbld
pop
ds
dec
in
xchg
jno
mov
call
test
sub
incb
sbb
divl
jecxz
iret
sub
and
outsl
or
pop
rclb
xlat
adc
fcomps
sbb
dec
jae
sub
cmp
orl
mov
ret
mov
imul
mov
jne,pn
or
xchg
jb
sbb
jge
push
lock
sbb
mov
push
les
pusha
mov
das
cltd
push
xchg
sub
xchg
cld
jno
test
ja
dec
push
jb
testl
leave
jb
fs
xor
arpl
cmp
adc
lock
fisubs
and
mov
xor
std
mov
fs
sub
sub
jle
xlat
test
push
and
dec
dec
loope
jmp
and
leave
mov
jns
test
fwait
inc
jns
je
popa
mov
push
loope
cmp
ds
adc
test
pcmpeqd
mov
pop
movsl
dec
cmp
mov
or
fwait
testb
lock
jmp
jg
enter
mov
mov
cmp
ss
in
imul
jg
je
iret
jns
test
imul
scas
jecxz
xchg
es
fs
push
jno
ret
sub
add
mov
sbb
cmp
and
xchg
fldenv
cmp
jb
dec
mov
cmp
xchg
xchg
dec
fcoms
das
pop
mov
xchg
jecxz
sbb
cltd
xchg
test
inc
dec
in
sbb
xor
xchg
mov
jno
cltd
pop
je
cs
push
dec
and
cmp
in
pop
cmp
xor
xor
add
in
push
sbb
rorb
cmp
cmc
and
mov
push
fidivl
dec
subb
add
push
pop
addr16
rol
mov
loope
aam
ret
cmp
cmp
into
fcomps
mov
insl
xchg
or
jae
fiaddl
inc
mov
add
push
int3
xor
mov
xor
outsl
push
mov
insl
cmp
call
mov
pop
aaa
cs
sbb
fcoml
stos
stc
cmp
hlt
sbb
es
dec
cmp
cmpl
cli
push
in
jecxz
mov
push
and
das
arpl
repz
mov
or
aad
lods
add
xchg
mov
ret
ret
xchg
adcl
xchg
shrb
lock
arpl
mov
js
aam
fs
cli
daa
cmpsb
insb
loopne
in
cwtl
mov
jb
add
enter
cltd
push
push
jmp
inc
or
sub
xchg
jnp
nop
decb
ret
mov
adc
fsubl
iret
daa
add
ljmp
mov
xor
loop
or
sahf
xchg
mov
push
popf
bound
ds
pop
sbb
lock
or
sbb
cmovns
pusha
and
addr16
hlt
cmp
aad
jo
xchg
jnp
mov
jp
sti
int3
cmp
imul
repnz
add
adc
imul
nop
shrb
movsb
lea
inc
add
arpl
add
inc
xchg
in
loope
or
pop
cmc
adc
push
ja
mov
inc
sbb
cmpsb
and
mov
rorl
arpl
out
xor
pop
jecxz
rcrb
sbb
adc
outsl
pop
rcll
sub
int3
sub
or
sub
cmpb
lahf
cltd
pop
fiadds
cmc
add
xchg
mov
ret
iret
es
pop
leave
xchg
jb
out
lock
in
lods
dec
popa
adc
clc
imul
in
nop
jae
sbb
jecxz
out
pop
imul
pusha
andl
cltd
mov
out
rorl
pop
jp
scas
xchg
movsl
nop
outsl
jns
xchg
mov
mov
aas
xorl
mov
pop
out
popf
sbb
sub
adc
jns
out
test
mov
cmp
push
idivb
adcb
push
fistl
loopne
jnp
sub
rcpps
daa
popa
subb
daa
scas
jno
repnz
pop
and
and
rclb
pusha
repnz
les
and
adc
pop
push
test
cmpsb
rolb
cmp
pop
pop
and
cmp
loopne
dec
mov
out
add
xor
out
sub
shlb
pop
pop
push
addl
pop
lcall
nop
add
xor
and
dec
adc
sub
icebp
into
push
cld
add
pop
cltd
push
or
divb
push
enter
inc
push
mov
hlt
lahf
xchg
out
cmc
aam
ret
notl
int
lret
dec
stos
aad
sbb
mov
out
jnp
xor
xor
mov
pop
shrl
sbb
stos
mov
and
out
std
iret
rcrl
popf
add
sbb
dec
bound
pop
mov
cwtl
jmp
loope
fwait
fwait
jae
arpl
dec
stos
js
loop
add
aaa
repnz
sbb
arpl
dec
in
stos
out
lock
stos
fcomps
loope
adc
cmp
les
es
adc
and
rorl
adc
xchg
pop
push
pop
adc
sbb
cmpsb
ss
mov
int3
addr16
test
and
mov
ss
nop
cmpsb
xchg
clc
fcomip
or
add
mov
or
sbb
xchg
sbb
cmp
jg
repz
inc
sub
xor
out
mov
shl
lods
push
fdivl
ret
push
dec
adc
in
cwtl
sbb
jge
xor
add
and
push
cmpsl
sub
aad
fistps
xchg
hlt
out
jne
ss
sub
outsl
mov
adc
mov
call
jmp
xchg
es
jbe
sysret
xchg
repnz
es
ret
stos
in
imul
pop
mull
dec
xor
or
inc
xor
jg
jnp
xchg
mov
xlat
imul
ss
sub
les
orl
mov
roll
pop
mov
sbb
fnstenv
mov
insb
aaa
xchg
jno
lds
mov
push
add
mov
into
shrb
xchg
mov
jle
jmp
les
out
aam
hlt
cli
push
push
mov
lcall
pop
inc
in
inc
xchg
rcrb
outsl
fistpll
mov
out
mov
cwtl
hlt
cld
jo
icebp
xor
fneni(8087
and
jo
adc
out
movb
mov
push
js
dec
mov
cmp
add
jg
mov
leave
dec
xchg
test
jno
out
mov
loope
inc
cmp
or
pop
jns
iret
addb
adcb
int3
or
movl
push
movsl
inc
fisubl
repnz
push
mov
fpatan
imul
sub
in
mov
xor
or
sub
jmp
mov
jb
lahf
xchg
xor
orb
bound
mov
jecxz
pusha
inc
in
movsb
pop
call
and
ficomps
jbe
cmp
inc
movsl
cmpb
leave
add
mov
das
jo
mov
jle
add
pop
xor
pushf
test
mov
sub
ds
scas
jmp
fsts
mov
jae
fmull
ja
int
xor
mov
inc
or
dec
jno
out
xchg
inc
jle
jns
cmp
jno
imul
ja
out
jb
dec
cwtl
hlt
dec
adc
cmp
add
dec
loop
xorb
xchg
xchg
xchg
mov
fnsave
cli
fwait
repnz
repnz
pop
pop
dec
inc
mov
es
incb
lds
cmp
dec
jne
roll
insl
jl
addr16
pop
or
filds
dec
inc
mov
popa
xchg
out
xor
stc
loopne
dec
pop
inc
jecxz
mov
mov
xchg
loopne
inc
or
les
rcl
cmp
enter
dec
adc
leave
mov
ret
pop
adc
or
fcoml
cld
fwait
es
rcr
pmaddwd
pop
push
cmc
popa
insb
outsb
test
test
mov
jbe
xor
jb
cmp
jp
sbb
ret
sahf
pop
xchg
mov
popa
aaa
dec
xchg
aas
movsb
sbb
inc
lahf
pop
mov
in
mov
out
pusha
outsl
xchg
sub
addr16
mov
ret
jl
mov
cli
xchg
or
call
test
cmpsb
test
shrd
leave
mov
movsb
jne
sbb
test
dec
dec
push
push
ja
jbe
sbb
lds
ljmp
push
out
mov
ss
push
sbb
jb
mov
je
jns
mov
data16
pop
cli
insl
daa
cmpb
or
inc
push
hlt
cmp
sub
mov
dec
xchg
dec
mov
mov
mov
jnp
mov
jno
dec
inc
add
lods
xor
test
add
fsubs
test
fiaddl
je
jne
call
into
pop
shll
dec
pop
lcall
xor
and
ja
sbb
in
sub
mov
aad
adc
cmp
movsb
cmp
pop
pop
add
mov
mov
fstl
push
push
or
int3
test
lods
fwait
add
cld
repz
mov
jl
pop
jmp
mov
mov
fistl
adc
sbb
xor
stos
xorl
xor
ds
pop
dec
aad
inc
out
loopne
loope
fsubs
je
mov
mov
pusha
movsb
testb
outsb
cmp
mov
loopne
sbb
pop
mov
adc
mov
fidivl
outsb
aas
push
jbe
inc
or
repnz
mov
jp
jo
rclb
or
adc
out
dec
add
in
dec
insl
inc
loopne
daa
and
mov
lcall
pop
sahf
mov
xorl
mov
mov
int
push
mov
adc
jle
insl
stos
add
mov
lcall
repnz
inc
mov
jne
cs
dec
repnz
test
adcb
mov
jge
into
inc
das
lds
aas
imulb
and
aad
pop
jle
nop
ss
enter
sub
mov
add
fstl
repnz
scas
xchg
add
fs
jbe
popf
pushf
lret
js
cmp
iret
xchg
jo
addb
lock
cmp
fisttpll
dec
push
xor
enter
cmp
jl
cmp
cmpsb
sahf
add
jge
xchg
pop
dec
bound
add
les
xor
inc
mov
jl
or
mov
xchg
shll
add
dec
dec
push
adc
push
in
pop
stos
scas
inc
add
fimull
mov
nop
lahf
jcxz
sub
stc
int
scas
in
mov
pop
insb
sub
pop
push
incb
js
inc
xchg
lds
mov
rorb
jnp
jae
xchg
jmp
cmp
into
pop
pushf
xchg
sub
mov
call
mov
xchg
and
mov
test
mov
leave
movsl
cltd
xor
repz
call
sar
bound
and
aad
or
xor
loope
xor
lahf
push
sbb
xlat
sar
movl
sbb
cs
jne
mov
pop
jge
inc
mov
xchg
cmp
cmp
pop
fucom
ja
ds
fs
daa
aas
push
jae
nop
setno
das
shll
dec
push
mov
jmp
leave
or
pop
icebp
insb
nop
notl
call
leave
push
dec
rcrb
ret
pusha
sti
mov
add
jo
adc
leave
cs
jecxz
and
in
or
and
adc
fsubs
push
cmc
jmp
dec
push
mov
ja
lcall
pop
dec
pop
lahf
aaa
sub
or
adc
arpl
cmp
gs
fs
xor
or
arpl
fs
mov
pop
lret
shrb
hlt
sbb
mov
dec
arpl
movsb
jl
test
jae
cwtl
rol
push
or
dec
imul
or
iret
or
insb
in
pop
test
sbb
sub
iret
lret
out
add
and
inc
fidivs
dec
hlt
mulps
add
loopne
xchg
mov
gs
mov
lods
push
lock
orl
push
arpl
ja
dec
stc
gs
fcmovnbe
and
xlat
cmc
stos
mov
and
inc
jo
jle
std
inc
jle
pop
cli
push
jg
lret
arpl
dec
sbb
and
push
xor
jae
imul
mov
enter
xor
adc
nop
cmc
mov
fmull
mov
cmp
aad
loopne
aas
inc
xchg
ret
call
shrb
aad
jnp
add
pop
add
xchg
xlat
xor
xor
call
or
ss
fcompl
ficompl
xlat
test
sbb
adc
adc
in
jp
sub
pop
imulb
es
cmp
lock
jg
jnp
push
mov
les
pop
xor
push
in
decb
mov
mov
xchg
adc
lods
fwait
sub
testb
xchg
imull
dec
adc
and
rcr
test
hlt
aaa
lret
push
inc
pop
and
pop
push
out
fwait
popf
leave
inc
mov
roll
inc
sub
or
adc
mov
and
ret
push
add
std
and
out
push
dec
rorl
int
xor
and
dec
add
in
xchg
jnp
push
clc
push
faddl
ret
insl
sbb
sbb
in
or
mov
mov
inc
xchg
and
mov
rcrl
test
mov
push
dec
cmpsl
jbe
sub
repnz
rolb
dec
out
out
das
sub
jl
sbb
pop
int
leave
int3
xorb
gs
clc
adc
mov
mov
sbb
lret
jne
push
loopne
pop
outsb
shll
ja
cmpsl
sbb
pop
pop
out
push
outsl
sbb
mov
into
rcrl
test
jp
out
fcoms
mov
iret
add
sbb
add
mov
ljmp
inc
movsl
or
scas
jns
or
pushl
xorl
js
cld
push
mov
popf
inc
cmp
gs
popf
push
repz
ljmp
adc
pop
ficoms
sub
inc
clc
scas
mov
mov
xor
xor
mov
xchg
out
jecxz
xlat
inc
sbb
inc
test
add
adc
bound
sbb
or
push
sub
cli
imul
movsl
sbbb
sub
mov
adc
dec
popa
aad
sbb
cmpsb
sbb
inc
mov
ds
leave
popa
push
nop
jl,pt
daa
hlt
call
adc
lods
mov
jbe
sub
cmp
notb
mov
add
fldt
ljmp
push
aaa
into
cmp
fdivs
adcb
lahf
add
cwtl
mov
and
push
stc
ret
cli
insb
jg
das
cmpsl
mov
popa
es
jp
ja
sbb
inc
mov
je
sub
inc
mov
clc
jae
jmp
xchg
jecxz
jp
inc
mov
lret
push
xchg
push
jmp
dec
stos
xchg
jge
add
sbb
or
or
pop
scas
jmp
int3
gs
pop
fwait
and
pop
arpl
aam
xor
hlt
and
sarl
ds
fisubrl
pop
rolb
or
shrl
out
xor
push
jnp
push
in
lea
cmp
stc
sbb
rcr
cltd
mov
mov
imul
mov
xor
jmp
lret
outsb
cld
in
fs
jae
xchg
mov
push
int3
loope
mov
cwtl
daa
insb
jae
test
mov
xchg
fimuls
fs
fcoms
cmp
push
sbb
test
pusha
in
popa
pop
sti
mov
arpl
mov
jmp
mov
jle
inc
xorb
enter
out
jge
pop
ljmp
jae
push
repz
cmp
int3
into
mov
lret
addl
outsl
mov
in
mov
inc
mov
push
push
in
inc
scas
pop
adc
or
outsb
mov
xor
sub
xor
mov
add
jmp
fists
in
popf
or
mov
and
fisubrs
fstps
pop
push
add
xor
imul
or
lret
add
jmp
or
or
daa
push
jns
xchg
cmpsb
sub
xchg
icebp
push
mov
das
into
int3
lea
and
xchg
out
adc
lods
xchg
adc
jb
movsb
andl
push
push
daa
pop
xor
shrb
sahf
sub
jle
or
sbb
cmp
xchg
sub
lahf
loope
dec
push
imul
test
mov
fnstenv
mov
xlat
imul
enter
xchg
mov
aas
in
lcall
ja
add
loope
lods
std
sub
dec
xor
xor
jae
hlt
inc
push
jne
mov
pushf
pop
push
out
fistpl
test
mov
adc
add
movsl
lock
roll
cmp
jae
lods
adc
inc
outsb
enter
dec
add
loope
jecxz
mov
outsl
pop
outsl
lret
xchg
sub
lret
je
pop
xchg
in
mov
lcall
pusha
mov
sbb
fnsave
mov
mov
bound
mov
pop
xor
pop
int
sub
sbb
fdivrp
sub
adc
movsb
jge
lcall
cmp
xor
rorl
adc
hlt
insl
fs
test
enter
lcall
lea
sbb
jl
fs
out
sbbb
sbb
fs
cmp
inc
mov
test
jmp
mov
scas
cwtl
pop
or
inc
sar
lret
out
cmp
out
adc
fwait
add
dec
pop
insb
pop
cmp
ds
adc
jns
xlat
pop
dec
enter
dec
sbb
push
push
push
popf
xor
adc
sub
lods
push
mov
mov
fs
add
or
or
repz
test
mov
add
enter
jns
cmp
std
mov
insl
or
aam
mov
xchg
add
inc
cmp
jnp
mov
out
nop
cmp
jo
inc
xlat
aam
jno
lcall
add
pushf
ja
not
loope
fs
ss
std
sarb
xor
popf
popa
cltd
lods
push
out
xor
sbbl
fs
lods
inc
int3
test
sbb
pop
push
xchg
and
int3
push
jne
xor
xchg
and
adc
pop
sbb
ja
mov
pusha
adc
loop
jo
add
pop
scas
stc
scas
sbb
inc
fisubrs
mov
out
loope,pt
lea
push
push
inc
js
xor
rcll
iret
leave
clc
sub
fwait
xor
mov
xchg
subl
mov
xchg
jbe
es
cmp
jmp
into
adc
xchg
xor
popa
xor
fbstp
bound
std
adc
outsl
movsb
push
pop
in
ss
test
xor
xor
push
mov
adc
js
lock
mov
and
fwait
popf
fldcw
pop
or
cld
divl
ljmp
mov
mov
clc
or
lds
mov
xchg
jb
jnp
add
mov
out
test
adc
cwtl
std
test
dec
ss
mov
movsb
iret
or
jo
popf
pop
dec
outsl
xor
adc
sub
pop
mov
jb
adc
aaa
jmp
cmp
lods
mov
out
js
push
push
lret
rcl
pop
inc
cmc
sti
inc
lds
int
dec
adc
mov
inc
mov
hlt
mov
aas
inc
lock
push
pop
lahf
pop
lret
xor
inc
out
push
adc
adc
into
push
push
mov
rcrl
shll
lcall
mov
cmpb
icebp
cltd
es
add
inc
imul
shr
xchg
cmp
int
xlat
sti
call
push
repnz
xchg
gs
aaa
dec
inc
sbb
push
push
aas
sahf
imul
dec
fsubrl
pop
fcomps
and
xor
adc
jns
inc
mov
jbe
testb
test
mov
adc
jno
add
inc
push
xor
popf
aam
mov
pop
test
iret
shl
leave
jg
mov
andl
adc
bound
lea
es
push
out
orl
cwtl
mov
scas
int3
lods
mov
inc
rorl
ret
out
sub
lret
mov
movsl
or
neg
cmp
mov
loopne
push
test
aam
rcl
popf
fwait
xlat
pop
cmp
inc
cmp
jp
cmp
push
gs
xchg
dec
shlb
inc
push
mov
dec
sahf
adc
lods
ljmp
lock
mov
insb
rcl
inc
xchg
cmp
movsl
xor
shr
and
stos
inc
sbb
roll
push
insb
imul
xlat
and
pop
adc
mov
stos
mov
mov
xchg
dec
ficoms
push
sub
shlb
inc
jo
mov
in
jecxz
loope
and
loop
inc
cmp
jmp
jo
add
imul
int
mov
cmp
rclb
adc
jns
incl
mov
add
fsubrl
jo
dec
addb
mov
sub
pop
repz
jl
lea
out
test
cmpsb
mov
xor
rcrb
cmp
cmp
ret
div
shll
ss
test
imul
dec
frstor
test
pop
sbb
mov
jb
decb
mov
mov
xorb
inc
and
fwait
inc
push
in
adc
fsts
push
idiv
bound
mov
test
mov
aam
xor
push
push
and
sub
icebp
jecxz
and
aad
pop
or
add
ret
lahf
cmp
notb
dec
fcmovnu
inc
add
and
push
mov
sbb
sti
push
ficompl
lcall
negb
dec
negb
and
pop
mov
cmpsl
push
add
stos
dec
aad
rorl
sahf
int3
pop
mov
hlt
mov
test
push
push
dec
ret
push
shrl
mov
ds
or
inc
cltd
mov
clc
idivb
mov
mov
pop
fidivs
push
xor
push
fsubp
mov
stos
add
sub
jnp
or
fstpt
adc
jmp
pop
and
std
adcl
xchg
add
repz
xor
sub
pop
cs
cmp
rcll
bound
mov
xor
sub
xlat
xchg
mov
jle
xor
mov
lds
or
cmpsb
jl
jnp
xlat
sub
sbb
mov
sub
push
ret
roll
cld
js
push
aaa
cmp
enter
hlt
jns
mov
call
cmc
inc
ss
into
loop
dec
mov
dec
sub
xor
xchg
or
cs
roll
sahf
cmp
push
or
imul
mov
fdivl
mov
push
or
or
push
and
mov
fwait
push
das
faddp
xchg
mov
and
add
pop
scas
cmpsb
scas
lahf
loopne
pop
xchg
into
in
lea
jecxz
testb
and
ss
jbe
pop
pusha
insb
in
ffreep
mov
es
repz
insl
pusha
adc
jecxz
lds
outsl
movsb
addl
insl
int
and
cmp
pop
pop
jno
or
xchg
cmpsb
insl
jg
mov
jle
pop
mov
and
jle
cmp
and
loope
fnstenv
into
xchg
test
or
ljmp
nop
add
or
cli
loopne
push
iret
pop
fdiv
in
popa
jns
hlt
inc
std
adc
int3
inc
dec
cmpsb
mov
scas
push
sub
jne
insl
inc
jecxz
sub
je
jno
fiadds
clc
and
jb
insl
inc
cmp
call
mov
dec
jmp
inc
stos
inc
repz
popa
test
inc
clc
lea
jl
ret
adc
or
mov
add
dec
dec
add
or
adc
or
inc
mov
cmp
inc
fisttps
mov
xchg
xchg
lods
pop
dec
mov
fwait
adc
xchg
mov
popf
and
dec
dec
movsl
or
sti
sub
adc
sbb
fnstenv
inc
xor
mov
roll
cmp
push
push
rorb
scas
xchg
mov
add
add
sti
xor
cmovno
ret
and
or
mov
or
mulb
daa
jg
add
je
inc
shlb
js
cmp
aam
sub
adc
lret
push
xlat
inc
dec
xor
ljmp
push
xchg
push
mov
mov
dec
gs
imul
mov
int3
xchg
jno
sbb
fwait
stos
jns
jno
push
fs
mov
inc
outsb
and
cmpsl
popa
aam
gs
pop
sub
stos
roll
fistl
cld
jb
mov
pop
test
pop
jmp
rcrb
mov
lcall
stos
mov
fcompl
pop
sub
and
clc
push
lea
mov
std
in
cmp
iret
mov
mov
in
ja
jbe
add
imul
lret
push
jle
movsl
insb
sbb
mov
ljmp
negb
xchg
mov
rcrb
mov
lret
aam
add
cmp
sbb
sbbl
or
jb
adc
cmp
adcl
pop
mov
xlat
sub
cmp
mov
cwtl
pop
out
pop
pop
sbb
sub
test
jecxz
lock
repnz
push
mov
inc
lock
xchg
lods
rcll
adc
sbb
adc
cmc
stos
jns
movsb
lock
lcall
scas
cmpsb
test
pop
inc
std
das
dec
mov
push
cwtl
ficoml
pop
adc
jge
inc
sub
cmp
fisubl
jge
xlat
pop
xchg
es
lret
rcrl
in
add
mov
pop
insl
int3
jge
jnp
or
clc
and
rcr
aam
sbb
cltd
pop
lods
into
or
sub
adc
adc
push
in
stos
stos
mov
push
adc
ret
add
xlat
sub
sti
mov
mov
pop
push
popa
jno
call
mov
mov
fstl
push
in
cwtl
push
dec
sbb
lods
movsb
adc
or
fldl2t
sub
sub
notl
lahf
push
enter
dec
pushf
add
cmp
or
dec
scas
decb
dec
loope
stos
jns
pop
shl
jmp
filds
adc
push
inc
mov
mov
enter
nopl
sub
jae
cmp
js
sub
icebp
aad
ja
nop
ljmp
ffreep
and
es
ds
xor
sahf
in
xor
in
xor
push
sbb
xor
sbb
int3
dec
xchg
pop
pop
sub
fstl
in
addb
dec
push
push
hlt
cmc
out
add
ja
inc
out
cmp
or
jle
or
cmp
mov
pop
cmpl
adcb
leave
shr
push
jb
call
xor
push
mov
sahf
mov
outsb
sbb
negb
mov
mov
lret
dec
shlb
in
fnsave
lea
dec
ret
lods
xchg
test
ja
iret
or
lock
mov
mov
ret
out
jmp
stos
push
cs
mov
sub
loope
sbb
std
rolb
mov
imul
dec
outsb
sbb
mov
xchg
or
cmpsb
mov
loope
mov
xchg
sub
pop
imul
xchg
stos
fnstsw
gs
rclb
orb
sub
fiadds
pop
sub
xchg
sbb
xchg
loope
cmp
jo
sbb
popa
bnd
push
adc
pop
push
pop
lock
into
clc
cwtl
jge
inc
mov
ret
cmpsl
decl
outsl
inc
xlat
xchg
repnz
les
cmpsb
lock
stos
pop
dec
std
leave
mov
adc
adc
pop
lods
in
sbb
mov
shr
and
sbb
sub
shll
shll
mov
pop
xchg
cltd
add
stc
xor
adc
jns
mov
cwtl
pop
sbb
or
psubusw
enter
sbb
outsl
cmp
and
aaa
mov
xor
inc
sbb
or
imul
imul
stc
and
std
insb
scas
into
aaa
fbstp
stos
imul
xor
add
push
dec
in
les
je
mov
cmc
and
push
iret
dec
clc
sub
loope
test
jno,pt
push
pop
dec
cmp
lahf
sarl
or
mov
adc
mov
or
lods
subl
int3
outsl
std
add
orl
pop
adc
mov
mov
popf
scas
inc
stos
cmp
mov
test
lods
add
sbb
lahf
icebp
mov
sub
not
push
aas
inc
pusha
or
stos
mov
dec
jmp
mov
popl
add
repnz
add
adc
daa
mov
jle
mov
jns
push
push
pop
push
in
shl
lock
dec
xchg
inc
cmp
push
mov
sub
mov
sub
movsl
xchg
and
das
xchg
inc
mov
je
xor
mov
js
and
jb
cmp
fimuls
dec
adc
sbb
lods
cmc
in
mov
push
int3
mov
xchg
push
orl
out
gs
out
stc
pop
dec
rcrb
pop
xchg
cwtl
pop
jae
cmp
xlat
notb
xor
dec
or
xchg
jg
int3
aad
icebp
jl
in
fcomip
mov
adc
or
sbb
mov
add
xchg
mov
fwait
xlat
dec
xorb
cwtl
gs
ret
jnp
stos
inc
mov
das
fiaddl
lahf
xchg
xchg
inc
add
test
mov
test
lods
hlt
fstl
repnz
xor
or
mov
das
test
pop
je
into
push
xchg
pop
pop
pop
mov
cmc
xchg
hlt
mov
dec
mov
mov
aas
pop
push
mov
cltd
imull
or
jbe
mov
jne
lret
fbstp
mov
loop
cmpsl
sbb
fstl
add
mov
inc
mov
push
sub
fbld
push
xchg
push
mov
enter
out
scas
jbe
cmp
push
dec
pop
add
ds
scas
sarb
and
in
mov
mov
mov
and
movsb
or
jg
cmp
scas
inc
push
mov
inc
call
jle
xchg
cmp
frstor
cmp
jo
cwtl
inc
dec
rcl
ljmp
adc
into
mov
clc
das
shl
xor
dec
cmp
repnz
inc
cmp
pop
cwtl
insb
or
mov
data16
stc
out
cmp
cli
pop
mov
adc
sbb
or
into
jbe
jmp
xor
inc
xor
fcoml
idivb
cmpsb
fimull
or
jecxz
neg
aaa
int
mov
adc
popa
fcmovne
cmp
scas
stc
push
and
pushf
mov
aad
shr
xor
jb
stc
mov
pop
sahf
push
push
jne
mov
iret
and
leave
sub
pop
jae
outsb
cmpsl
popf
sub
adc
dec
scas
pop
cmpsb
icebp
jns
lea
je
sub
mov
jae
or
in
sti
aaa
dec
daa
pop
dec
and
iret
mov
jmp
fiaddl
jecxz
push
cmp
mov
adc
or
mov
jp
mov
imul
mov
hlt
clc
xor
loope
pop
dec
sahf
push
mov
xchg
push
iret
push
mov
sub
inc
xor
ret
xchg
jb
divl
les
stos
mov
push
adc
xor
lret
xchg
cwtl
mov
mov
mov
stc
or
add
or
or
cmp
sub
dec
test
mov
and
in
icebp
add
incl
je
xor
jb
add
test
cmpsb
ja
scas
loope
imul
mov
mov
and
insl
mov
jne
push
loop
stos
rcrl
ret
mov
out
xor
outsb
dec
das
gs
mov
iret
out
ficoml
and
mov
xchg
test
negb
or
stc
sahf
lock
jne
and
je
mov
add
jnp
cmp
add
xchg
aad
into
sysret
mov
cmp
stc
lret
inc
xchg
xchg
mov
dec
sub
jp
dec
clc
dec
cwtl
call
jne
cli
mov
or
pop
imul
scas
xorb
fdivs
ret
aaa
sub
mov
push
js
xchg
icebp
insb
ja
sahf
push
imul
jecxz
stc
sbb
push
sbb
ficomps
and
pop
mov
jg
stos
and
out
push
xor
mov
inc
repz
scas
cmp
inc
jmp
out
push
adc
cmpl
ror
test
int
clc
inc
cld
pop
adc
daa
mov
in
jp
lods
sbb
lods
dec
loop
inc
or
stos
rcrb
adc
xchg
jb
fldenv
add
call
push
sbb
popa
popa
sbb
xchg
stos
in
inc
fsubp
jmp
test
pop
sbb
subb
xchg
filds
xor
adc
dec
mov
sbb
mov
in
js
pushf
lods
mov
and
sbb
jmp
fldcw
mov
sbb
dec
mov
in
js
loope
enter
and
adc
repnz
mov
js
mov
and
cli
or
bound
loopne
les
or
xor
imulb
sbb
xchg
add
mov
dec
sub
mov
or
ror
lds
jecxz
movsl
push
pop
lds
fldenv
repz
fs
imul
xor
pop
cs
adc
sub
repnz
mov
mov
cmp
cmpsl
out
jle
imul
mov
shl
repz
xor
cs
call
mov
jmp
icebp
adc
test
sub
popf
mov
out
cmpsl
loope
xchg
adc
outsb
mov
jbe
aam
dec
push
sub
into
inc
gs
mov
mov
or
push
mov
adc
lds
popf
mov
lcall
and
jnp
push
nop
insb
in
hlt
xor
shrb
add
xchg
fwait
push
sub
enter
fs
sub
or
sub
mov
enter
push
push
sti
xchg
add
fsubrp
pop
aad
cmpsl
pop
mov
cld
lcall
mov
inc
add
addl
in
xchg
cmp
int
jnp
clc
pop
movsl
adc
mov
sahf
mov
xor
test
enter
fists
sar
das
das
aam
or
leave
test
call
fistl
leave
outsl
xor
nop
and
sub
mov
lods
sub
mov
loopne
sbb
inc
aam
add
xchg
pop
pusha
fisubrs
lea
push
jno
div
adc
bound
dec
cwtl
addr16
mov
pusha
aas
xchg
jno
push
leave
xchg
cs
xchg
fwait
out
roll
cld
ret
into
aas
scas
push
jmp
popf
scas
dec
inc
hlt
cmp
test
add
push
jle
push
xor
sbb
push
sub
push
movsb
jno
adc
stos
jl
or
adc
aaa
repz
xchg
in
add
jo
or
jne
sub
test
mov
mov
ret
stos
push
stos
imulb
out
dec
test
xchg
outsb
test
js
mov
outsl
xor
push
iret
jmp
and
loop
jb
and
cs
iret
pop
mov
add
sub
push
pusha
push
out
outsb
ja
out
jno
es
int
jmp
cli
out
arpl
int
aam
imul
add
fwait
sub
fildl
outsb
int
jbe
jno
mov
aam
cmp
jg
mov
dec
add
bnd
mov
scas
dec
addl
xchg
mov
jnp
clc
dec
addr16
jecxz
out
ret
scas
jl
pop
push
and
and
cltd
gs
aam
sbb
adc
cltd
shll
or
jp
xor
mov
mov
pop
xchg
sbbl
movsl
imul
mov
sbb
hlt
movsb
push
sub
icebp
lahf
rcrl
fisubs
out
inc
in
pop
popa
stc
ds
mov
xchg
push
es
push
xchg
cltd
aad
add
mov
xchg
xchg
test
es
jmp
jne
jnp
jg,pt
pop
mov
push
add
ds
jp
data16
aam
std
xor
mov
ja
mov
leave
mov
mov
enter
out
mov
out
fisubl
test
lahf
mov
cmp
mov
or
inc
imul
iret
outsl
shl
xchg
xorb
icebp
inc
or
rclb
cs
push
xor
mov
mov
fiaddl
adc
mov
rol
fnclex
aaa
stc
pop
add
lahf
testb
sub
shll
shll
sub
sub
sbb
jmp
cmp
cmp
cmp
sti
mov
inc
pop
movsl
dec
push
push
ficompl
jle
sti
mov
mov
xor
in
inc
imulb
mov
mov
xor
mov
pop
mov
int3
dec
push
push
fs
sbb
mov
fisttps
sbb
jae
loope
mov
pop
mov
in
push
lgs
in
push
mov
inc
ret
jnp
add
testl
inc
or
jno
add
pop
sbb
pop
add
fiaddl
adc
push
or
sbb
loopne
jle
pop
jmp
push
dec
sbb
inc
dec
cmpsb
inc
xor
push
clc
aad
iret
loopne
enter
fs
mov
loope
lcall
cmp
imul
inc
insb
in
lcall
shll
dec
sahf
dec
cmpb
inc
inc
and
cmp
vfmaddps
scas
insb
cmp
mov
xchg
mov
fcom
dec
into
popa
or
cmpsl
mov
clc
iret
test
int3
test
fisttpll
pushf
clc
adc
pop
loope
jge
inc
mov
ja
dec
lds
out
cmp
lea
fldl
fmuls
aam
ja
inc
push
popa
pop
pop
sbb
inc
aaa
ja
cmp
and
test
ljmp
cmp
push
adc
or
cltd
fld
lods
push
in
mov
cs
mov
hlt
call
mov
mov
push
cmp
mov
inc
inc
pop
push
xchg
mov
sub
cmp
imull
rcll
adc
fistps
and
sbbl
in
adcl
cmp
add
js
inc
aad
adc
insb
push
mov
mov
dec
cmp
dec
jno
and
sti
fimuls
repnz
and
fdivl
in
jl
xor
outsl
imul
add
movaps
mov
inc
aam
jnp
cld
sbb
sub
push
jecxz
cwtl
push
xchg
or
adc
inc
cmc
mov
mov
out
leave
xor
outsb
pushf
imul
pop
cmpsl
arpl
sub
xor
or
mov
sti
test
pop
mov
sub
pop
insb
push
mov
sbb
sub
insb
imul
movsl
je
jbe
dec
stos
mov
mov
inc
dec
fwait
das
sbb
inc
xchg
test
addr16
movsb
stos
ret
loope
inc
xor
lds
pop
inc
or
outsl
dec
inc
lret
mov
xchg
pop
xchg
ds
xchg
lods
outsl
movsb
xchg
sarl
mov
insb
and
insl
inc
xor
insb
das
repnz
ret
xchg
icebp
in
and
push
arpl
and
leave
push
popa
pop
and
stos
pop
pop
addb
jmp
lods
out
pushf
push
dec
cmp
sub
jle
gs
lds
test
cmp
mov
js
ret
xchg
cmp
adc
xchg
jnp
imulb
cmp
int
andl
fnstsw
sub
inc
test
lret
fdivrs
ss
clc
mov
mov
imul
adcb
outsl
jmp
mov
jecxz
insb
and
push
jo
xor
mov
push
inc
lret
nop
ja
sbb
movsl
mov
and
cmpsl
sbb
addb
push
jns
dec
jnp
push
aad
mov
mov
pop
cltd
xchg
dec
push
testl
xchg
movsb
cltd
push
cmp
sub
bound
fsub
xor
push
pusha
pusha
mov
mov
mov
ficompl
ds
fstps
lahf
push
pop
jnp
jne
packssdw
repz
cltd
lods
sub
cwtl
iret
in
pop
das
test
sbb
aam
mov
shll
mov
push
mov
flds
push
pushl
fsub
jecxz
cmp
sar
rorl
sub
adc
and
in
adc
outsl
and
imul
inc
rcr
les
push
int3
mov
pop
dec
call
mov
les
popa
xor
dec
ret
xlat
sbb
cli
rcr
imul
cmp
add
or
dec
ret
fwait
and
mov
shlb
xor
sbbb
icebp
mov
out
filds
or
pop
lods
insb
lahf
cmp
jae
mov
push
inc
adc
jne
loope
xchg
lods
loopne
add
cmpsb
mov
sbb
stos
decb
adc
mov
and
dec
aaa
in
mov
or
lret
mov
fstpl
adc
push
cmp
mov
pop
out
mov
fwait
xor
cmc
test
and
mov
stc
cmp
hlt
inc
or
out
push
or
ffree
cmp
dec
push
mov
imul
test
mov
add
aad
lds
pop
adc
mov
sbb
or
add
inc
pop
movsl
iret
adc
sbb
aas
stc
out
or
subb
jb
sbb
xchg
dec
fisubl
adc
mov
sarl
fwait
aad
inc
mov
loop
mov
xor
xchg
mov
push
dec
pop
mov
shl
dec
cmp
dec
lcall
add
scas
mov
subb
sbbb
pop
xchg
adc
ja
adc
xchg
std
jmp
ret
mov
icebp
mov
sub
or
fiadds
out
cmp
pop
inc
cmp
xchg
cwtl
push
stc
mov
jnp
loopne
or
mov
cli
cmpl
inc
pop
and
not
mov
mov
stos
xchg
jge
fnstcw
pop
push
jbe
subb
popf
pop
and
and
mov
or
adc
nop
push
pusha
adc
movsl
jmp
cmc
mov
insb
pop
cmp
addb
add
cmp
add
mov
ljmp
arpl
mov
fstl
test
outsb
push
stos
mov
out
pop
mov
lods
les
data16
and
out
add
dec
cld
sub
sub
or
cmc
leave
cmp
push
xor
mov
nop
icebp
push
inc
lahf
sub
lods
push
or
mov
mov
dec
test
push
lock
vpmadcswd
lds
test
loope
out
sahf
jle
or
ret
test
outsb
sub
jmp
imul
fisttps
mov
xchg
imul
and
inc
pop
cmp
inc
mov
dec
push
xchg
fisubl
testl
imul
mov
into
pop
xor
divb
dec
or
jne
and
shrb
cltd
loop
aas
sbb
xlat
push
lds
test
or
push
test
sar
inc
enter
cmpsl
dec
mov
and
cmp
imul
fstps
and
fs
call
popf
adc
jnp
leave
adc
adc
add
lods
add
mov
fiadds
arpl
shl
mov
xchg
mov
jno
xchg
neg
rcl
mov
jecxz
push
es
xor
iret
and
nop
imul
cwtl
pop
loopne
cmpsb
pop
xchg
inc
sub
inc
arpl
adc
xorl
jno
mov
push
cmp
xorb
adc
xchg
pop
mov
outsb
sarb
scas
pop
repnz
sub
cmp
sbb
in
mov
and
dec
movsb
clc
cmp
sub
xchg
adcb
dec
mov
jb
mov
dec
or
jecxz
fcoml
cmp
adc
pop
sti
ss
popf
fdivrl
sbb
xor
inc
jle
test
mov
push
xchg
push
sbbl
pop
adc
scas
mov
in
sbb
xor
adc
add
data16
pop
loope
sbb
in
xchg
sahf
jno
jne
push
insb
popl
pop
les
jecxz
dec
inc
aas
pop
sub
popl
or
sbb
mov
cmpsl
jecxz
aaa
into
add
dec
leave
cmp
pop
jns
or
adc
and
cmpsl
fistpl
dec
mov
cmp
outsb
idivb
mov
sbb
xchg
lods
int
jl
popf
sbb
dec
mull
mov
cmpsb
movsb
mov
or
lock
cwtl
xor
xadd
lret
stos
ret
stos
popf
push
xchg
in
movsl
xor
push
sbb
into
out
popf
subb
cltd
add
cmp
xchg
jne
mov
pop
xorb
mov
pop
enter
scas
fwait
or
test
inc
ret
repz
xorl
add
cmc
pop
push
xlat
repnz
andl
mov
insb
lods
ja
or
imul
pop
cmp
lods
popf
es
xor
jg
and
out
bound
addr16
pop
push
fcomps
xchg
mov
sub
or
leave
lret
cmpsb
int3
mov
and
mov
lcall
xchg
fsubrl
repz
or
jecxz
jge
ja
movsb
ljmp
pop
es
mov
inc
jle
mov
fdivl
dec
andb
inc
cmpsb
sub
int3
cmp
lea
into
mov
xchg
sbbl
inc
loopne
lret
mov
je
jl
addb
rorl
xor
mov
in
in
mov
adc
imul
push
xor
mov
and
lea
sahf
and
idivl
jb
push
loope
int
mov
rcl
mov
xchg
and
add
mov
adc
lock
cmp
xchg
lock
mov
xor
jle
std
jo
stos
leave
sub
and
adc
imul
xchg
out
in
jo
jnp
insb
push
dec
add
or
in
sub
adcb
repz
jle
nop
jb
push
jle
shl
push
ja
mov
lahf
jp
inc
mov
or
push
xchg
dec
std
lds
test
dec
sbb
cmp
sub
nop
jge
repz
addl
ret
pushf
dec
push
repnz
push
push
sub
mov
dec
jl
divl
fdivs
lahf
cmp
mov
and
rcll
mov
cwtl
dec
lcall
les
into
jg
fwait
sbb
add
push
or
sub
jecxz
add
sub
shl
sbb
addr16
push
pop
cli
mov
or
divl
in
sar
pop
mov
repz
jo
stc
or
out
jge
in
jnp
lds
test
test
les
sahf
leave
jecxz
cltd
push
out
sub
inc
shrl
pop
out
data16
push
pusha
adc
cld
jae
popa
fisttps
sbb
in
repnz
push
xlat
sbb
aas
stos
adc
mov
inc
jl
push
mov
test
or
mulb
xchg
addr16
clc
mov
mov
andps
jle,pt
addr16
arpl
push
decl
mov
test
cwtl
push
mov
rcll
mov
addb
xlat
sub
clc
fdiv
inc
sub
mov
xchg
loopne
jp
sub
mov
enter
fcomi
pushf
pop
add
addr16
mov
jo
push
stos
xor
pop
adc
jg
decb
and
aaa
call
lods
jne
push
stc
xlat
shl
out
mov
cld
out
aas
dec
jle
insb
push
out
insb
das
outsb
sbb
jp
std
pminub
daa
test
xchg
sub
rcrl
or
std
mov
iret
xchg
in
incl
iret
je
cli
stos
sub
mov
inc
daa
lret
pop
fldt
fildl
loop
push
mov
aaa
ficoms
dec
imul
in
hlt
ja
cmp
shlb
inc
or
dec
loope
int3
jbe
subb
lods
inc
or
xor
pop
jg
out
enter
dec
out
hlt
jl
sbb
data16
out
fcomps
jo
mov
sbb
js
mov
mov
daa
push
es
inc
adc
jp
sub
stc
sbb
test
push
sbb
mov
roll
imul
ret
ret
xor
jle
push
mov
hlt
sbb
ja
push
and
inc
mov
lret
inc
mov
push
xchg
movsb
loop
data16
adc
mov
cwtl
pusha
inc
popf
mov
addr16
mov
push
in
adc
push
dec
jle
lds
pop
xchg
xchg
sbb
sti
xchg
adc
inc
push
inc
push
inc
rorl
cmpsl
cmp
or
pop
lahf
ljmp
cmp
push
imulb
xor
add
adc
inc
iret
das
ljmp
push
sub
out
mov
adcl
dec
jne
inc
out
mov
cmp
fincstp
sbb
mov
push
ret
adc
jb
mov
test
sub
or
ds
inc
push
xchg
leave
mov
and
and
test
hlt
jp
mov
mov
adc
dec
and
mov
pop
mov
aaa
loopne
cmp
out
fadds
sbb
and
lret
daa
push
lret
int
add
cld
dec
push
dec
mov
aad
mov
in
and
mov
lods
sbb
push
fildl
sbb
mov
popa
loop
insb
and
jle
test
xor
pop
xor
test
mov
add
or
push
inc
adc
lahf
mov
inc
fs
rclb
jp
insb
dec
sbb
or
push
adc
and
inc
push
pop
movsl
xchg
std
dec
ss
mov
mov
push
stos
pusha
cltd
pop
fistpl
xor
xor
int
mov
popa
jmp
movsb
ss
lahf
or
inc
sub
mov
cmp
dec
lock
jmp
and
add
call
lahf
getsec
aad
sub
jns
mov
leave
jae
jb
add
test
cs
lret
push
pop
sub
das
rclb
jge
push
dec
cmp
cld
out
mov
lock
mov
cmc
andb
pushf
sub
mov
sbb
mov
xor
xchg
sub
mov
sub
rcrb
shll
dec
push
push
cmp
cmp
loope
scas
xor
fcomps
xlat
outsb
xor
and
icebp
pop
popa
add
mov
cltd
dec
pop
jge
shrb
loop
js
ss
xchg
lret
sahf
pushf
pop
and
sub
jmp
test
dec
xchg
fimuls
scas
cmpb
cmpsl
insl
lahf
popf
arpl
xor
add
outsl
jle
out
repz
cmp
xor
aas
ret
or
in
movsl
insb
push
inc
ljmp
sbb
jnp
repz
pop
mov
pop
das
mov
sbb
jns
sbb
clc
call
mov
shlb
repz
jno
add
pop
hlt
insb
pushl
xor
test
pop
out
pushl
cmpsl
push
test
pushf
mov
ds
jecxz
movsb
cwtl
repz
and
fnstenv
in
cmp
popa
test
test
mov
pop
imul
loop
rsqrtps
ds
adc
pop
int
pop
mov
pop
jg
fs
not
lahf
das
in
pop
dec
cld
mov
cld
mov
cmp
rcrb
jl
and
fnstcw
inc
mov
and
jle
lcall
mov
insb
shl
xchg
shll
add
in
popf
adc
pinsrw
dec
fmuls
add
cs
js,pt
cmp
repz
xchg
and
adc
sbb
out
fnstsw
pop
and
mov
sbb
iret
mov
outsb
cmp
imull
cmp
out
hlt
ljmp
add
sub
lcall
pop
mov
mov
jmp
outsl
outsl
ret
cmc
jmp
and
jmp
mov
sbb
hlt
sbb
sbb
mov
jbe
das
jmp
cmpsb
pop
push
and
sti
sub
xchg
rol
movsb
loop
mov
inc
ja
loopne
xor
jbe
mov
or
push
inc
xchg
ret
jno
sub
je
jo
ljmp
imul
pop
repz
pop
mov
shl
pop
xchg
mov
lcall
rolb
in
das
sub
pop
lock
enter
mov
lcall
sbbl
insb
fcompl
jecxz
cmp
das
lods
jl
push
nop
addl
test
adc
mov
cmp
pop
jne
insl
push
fucom
pop
jg
repnz
cli
sbb
jno
shlb
sbb
pop
fdivs
mov
mov
lods
cmpsb
dec
stos
shlb
xchg
mov
jno
enter
lods
fsubrs
xor
movsl
int
shr
mov
adc
jne
lahf
stos
mov
vpsubsw
lds
insl
push
ja
into
das
push
jo
jecxz
sti
rclb
ja
popf
pushf
jne
xchg
sbb
das
shll
aam
add
push
daa
push
rolb
es
mov
ficoms
outsl
sub
mov
or
push
stos
jg
imul
into
sbb
pop
push
es
jns
mov
xchg
cld
jnp
mov
fdivrl
inc
jmp
popf
cs
testl
hlt
pop
mov
sub
outsb
call
aam
in
movsb
in
lahf
es
ds
rcrl
in
push
cmpsl
leave
rclb
xor
add
movsl
add
add
movsl
or
ljmp
push
lahf
xchg
out
std
push
fsin
xchg
lret
xor
in
shll
mov
jmp
xor
add
testl
subb
aaa
mov
dec
fwait
stos
ret
sbb
test
inc
add
sub
jne
sarl
loope
in
mov
aaa
push
clc
daa
lret
xchg
push
mov
cmc
push
pusha
mov
mov
cmc
cmp
test
inc
icebp
or
stos
lret
pop
loop
jno
scas
xor
popa
fs
mov
imulb
mov
or
mov
aaa
cmp
arpl
mov
insl
jne
jnp
fwait
lcall
xchg
sbbl
jbe
and
pusha
aaa
movsb
sub
in
icebp
insb
rcrb
push
sub
mov
and
lods
dec
and
sub
ret
div
popf
sbb
mov
data16
sub
cmp
dec
adc
push
jg
sub
xchg
stc
js
rcrl
sub
lret
mov
xor
ja
cmp
dec
imul
mov
pop
fbstp
push
cmp
lea
xor
dec
mov
lret
test
add
jb
lret
mov
call
lret
cmp
in
dec
pop
ret
es
and
nop
iret
mov
lcall
outsl
inc
jp
rcll
xchg
in
in
not
mov
jmp
jb
das
add
ficoms
jle
rcl
adc
ss
add
clc
js
cs
fisttpll
or
test
addl
clc
int
jge
sub
cltd
aas
push
lea
adc
loop
lcall
repz
lahf
jle
leave
xchg
xchg
jo
repz
jae
cmc
ss
mov
adc
outsl
test
clc
repnz
cmp
test
add
push
lock
jno
test
mul
std
or
jae
fmul
call
inc
je
inc
mov
mul
mov
pop
xchg
or
arpl
adc
fmull
cmp
fwait
push
mov
mov
adc
dec
jge
fxch
jecxz
pushf
lahf
cli
inc
xchg
mov
jnp
je
adc
clc
iret
sbb
mov
push
sub
adc
test
adc
ret
insl
test
dec
out
ficoms
cli
mov
rorl
inc
xor
xlat
xchg
dec
stc
popf
cli
arpl
repz
xchg
xchg
mov
cmc
rolb
stc
gs
into
lcall
jae
inc
das
adc
ret
ss
outsb
xchg
aam
mov
sbb
xlat
or
pop
sub
jl
xchg
lret
outsb
loope
iret
xor
xchg
js
push
mov
sar
dec
xor
xchg
clc
xor
je
adc
test
out
adc
xchg
ljmp
gs
js
cld
movsl
xor
popf
rorb
push
sti
les
popf
xlat
xchg
xor
inc
sub
pop
or
in
push
add
push
pop
movsb
sbb
adc
xchg
popa
inc
sbb
inc
dec
fbld
adc
scas
stos
sbb
imul
lods
xchg
imul
inc
dec
lods
mov
out
cmp
xor
cmpsl
cmp
iret
jbe
jmp
mov
and
mov
xchg
jbe
adc
jo
scas
and
hlt
cs
cwtl
pop
xchg
dec
lds
or
dec
inc
adc
movsl
xor
popf
inc
sbb
arpl
scas
out
pop
xchg
mov
add
add
adc
ja
shl
sarb
repz
lahf
insl
popf
loope
dec
jle
mov
xchg
in
jb
cmp
or
mov
or
push
inc
movsl
repnz
nop
lods
lahf
jno
sbb
fidivl
jnp
inc
xchg
pop
mov
lahf
out
sti
xchg
jne
sub
dec
mov
das
data16
cwtl
je
sub
test
lahf
dec
mov
sbb
scas
and
dec
mov
fwait
cmp
cmp
sbb
push
inc
inc
mov
dec
ljmp
jne
sbb
jg
outsb
lock
cmp
insb
xchg
aas
int
jae
dec
push
movsl
xchg
aas
sahf
push
dec
test
xchg
aaa
lahf
mov
push
jmp
shlb
push
and
pop
inc
movsb
or
dec
mov
add
test
cmpsl
out
mov
jns
out
sti
sbb
dec
sbbb
andb
stos
int3
sub
sbb
push
out
cmpsb
lret
push
fldcw
bsr
jp
std
sub
int3
insb
xor
and
or
fwait
ljmp
insb
inc
call
dec
push
jecxz
push
call
xchg
mov
and
out
pop
mov
cmpl
mov
test
sbb
pop
or
sbb
scas
push
neg
lea
shr
xchg
popa
mov
push
cmpsb
popa
sbb
hlt
adc
cmp
push
cld
adc
xor
pop
mov
pop
fstpl
mov
xchg
cmp
and
shll
sub
in
inc
pop
xor
lock
inc
inc
or
dec
cld
add
rclb
ret
inc
jae
out
leave
test
jns
cmp
mov
int3
test
mov
ret
insl
stc
adc
arpl
pop
nop
loope
neg
inc
inc
xchg
add
dec
or
repnz
test
mov
push
lock
movsl
sti
fisttpll
cs
lods
les
outsb
or
in
iret
aaa
mov
or
and
dec
ss
sbb
adc
or
inc
adc
mov
sbb
test
ljmp
cmp
test
add
imulb
jge
sbb
dec
cmpsl
movsb
mov
les
popf
mov
and
or
mov
mov
sbb
bound
fistpl
ret
insb
call
dec
pop
adc
jnp
int
lahf
and
cmp
mov
rorb
jg
in
rcll
popa
push
xor
bound
les
lret
icebp
mov
push
inc
xchg
ret
mov
fdivl
out
pop
sbb
test
aaa
lret
jge
ss
lret
xlat
out
ret
hlt
add
in
xchg
out
in
mov
and
jge
push
inc
sub
sar
mov
cmp
dec
rcr
aaa
push
adc
rorb
push
sbb
and
push
dec
jne
cmp
mov
adc
and
sti
loope
push
jo
lods
pop
and
xor
ds
xchg
mov
or
sub
fists
push
pushf
enter
stc
and
js
movl
xchg
imul
or
test
test
enter
mov
cmp
mov
xchg
movsl
and
sub
sbb
and
sub
gs
mov
addb
lret
iret
rcl
scas
enter
cmc
xchg
rol
cmp
stos
sbb
mov
outsl
punpckldq
fcmovne
pop
add
mov
push
cmp
xchg
xor
mov
ret
outsl
xchg
xchg
xor
fnsave
or
leave
loope
inc
jne
cmp
idiv
mov
or
push
cmc
in
and
out
sti
fcompl
in
insl
addr16
push
pop
push
inc
jb
xor
out
and
in
test
cmp
jbe
mov
inc
stc
jp
lret
xchg
cmp
outsb
cmp
iret
lods
sbb
or
dec
and
inc
cli
dec
stos
adc
sarl
inc
dec
movsb
aas
adc
ss
outsb
pop
leave
push
fimuls
sub
shlb
inc
lods
int
cli
mov
inc
jne
pop
add
imul
xor
insb
xchg
hlt
je
jo
mov
mov
push
and
ljmp
xchg
lds
cmp
jno
imulb
mov
mov
and
push
js
adc
push
pop
pushf
cli
adcb
pop
arpl
sbb
je
mov
in
ja
mov
lods
inc
add
imul
jno
addr16
mov
push
cmp
xchg
mov
call
mov
pop
push
loopne
dec
push
leave
mov
jle
mov
cmp
js
cpuid
xchg
les
jge
int3
sub
mov
jg
sbb
jns
jns
outsb
sbb
push
xchg
lcall
mov
push
mov
andl
sub
mov
sti
xchg
jne
or
pop
jmp
sub
out
push
pop
ja
movsb
mov
sub
push
stos
mov
into
xor
and
mov
rolb
adc
rolb
pusha
lahf
rorb
ret
dec
rolb
add
ficoms
repz
scas
dec
adc
imul
mov
test
sub
add
dec
inc
call
cmc
jl
pop
aas
dec
mov
add
push
pop
or
add
push
push
ss
mov
xor
inc
xchg
cmp
lret
and
aaa
sub
scas
dec
push
jge
hlt
pop
pop
movsl
mov
push
repz
xchg
jge
out
aad
and
xor
push
bound
pushf
adc
pop
fcom
push
push
mov
imul
scas
mov
bound
nop
cmpsb
inc
sub
cmp
dec
mov
dec
mov
movsl
pop
jmp
cmpsb
in
aaa
fnsave
pop
xchg
mov
push
push
mov
cmpsl
jecxz
in
inc
jp
ret
lcall
xchg
aad
shrb
fwait
and
lret
lcall
loop
aam
push
add
rolb
nop
fs
sbb
pop
out
aaa
mov
call
jl
cmp
insl
mov
pop
add
in
lret
lret
addr16
push
xor
dec
ret
ljmp
mov
cmp
test
js
xor
test
dec
push
std
loope
sub
movb
adc
ret
test
fwait
insl
jns
add
test
jne
inc
xchg
data16
xchg
pop
mov
mov
push
jne
pop
hlt
and
ret
push
scas
mov
pop
or
or
xor
adcb
ljmp
xor
mov
inc
cmc
push
push
or
add
movsb
lret
out
sub
or
sbb
lret
xchg
and
dec
dec
aam
mov
imul
nop
into
cmp
dec
ds
sub
push
pop
outsl
test
xchg
pop
sub
lret
sub
out
sub
push
xor
xor
ret
jb
xchg
inc
jmp
or
je
int3
out
ret
inc
mov
xor
into
sub
pop
adc
mov
add
addb
or
pushf
outsb
pop
dec
sbb
shrl
pop
mov
les
cmp
xor
sub
cmp
lods
out
ret
ljmp
sbb
push
and
inc
pop
int
sub
daa
push
inc
fimull
ret
aaa
xchg
inc
cmp
shrl
sti
xor
cmp
mov
shrb
adc
addb
xchg
pop
mov
lcall
imul
push
or
or
test
mov
sub
js
loopne
push
xacquire
stos
xor
xor
iret
scas
dec
sahf
sahf
mov
mov
push
int
xor
dec
inc
leave
repz
mov
pop
push
popa
addr16
repz
cmpsb
popl
pusha
xor
mov
sbb
push
test
repz
or
cli
les
shll
pop
push
cmpsb
arpl
pop
or
stos
push
xlat
pusha
push
dec
aaa
aas
pop
pop
mov
cld
adc
mov
cmp
mov
imul
mov
aam
iret
push
movsl
js
movsl
outsb
int
push
add
stos
jle
cmc
cli
adc
mov
add
in
cs
ds
add
rcrb
dec
jnp
out
cmp
inc
jecxz
cli
pop
loop
or
movsb
sbb
cmpsb
xchg
test
fstl
jae
add
adcl
pushf
pop
ja
sbb
je
loope
pop
push
sbb
mov
mov
push
pushf
cmp
xchg
mov
mov
dec
mov
or
out
cmp
xchg
repz
pop
inc
mov
ss
inc
int3
pop
mov
orb
pop
push
add
pushf
jbe
push
xor
jge
dec
push
jmp
cmp
jmp
inc
cli
sub
push
jmp
jl
jno
pushf
add
xchg
dec
jg
lods
jmp
lods
mov
xor
push
mov
loopne
fst
shrb
push
lods
mov
mov
ffreep
push
popf
stc
in
sub
mov
out
lds
repnz
sti
icebp
jo
ret
iret
shl
mov
pusha
out
sub
push
inc
inc
lock
imull
aad
mov
push
dec
sahf
pop
inc
test
fs
adc
subl
lea
fdivrl
lahf
mov
xchg
addr16
insl
jmp
dec
pop
iret
insl
in
cmp
or
jne
mov
stos
mov
jo
aaa
cltd
jecxz
push
iret
add
push
push
xlat
pop
add
add
pop
sti
xchg
mov
popa
aaa
pusha
or
jg
push
push
jb
aaa
andl
cld
sub
into
out
sahf
mov
iret
inc
mov
sub
pop
out
mov
mov
mov
adc
aad
sbb
sub
xor
pop
and
pop
jns
fildl
stc
xchg
mov
cmp
or
hlt
push
jbe
lea
cwtl
adc
aad
gs
sti
push
sahf
mov
push
mov
inc
pusha
inc
test
inc
enter
inc
movsb
and
sbb
movsb
test
sbbb
push
int3
pop
into
leave
add
fsubs
push
sub
lcall
cmpsb
lock
mov
sbb
pop
pop
fcoms
xchg
xor
cmp
push
dec
cwtl
je
stos
inc
lock
mov
jmp
mov
fcmovb
mov
out
sub
mov
pop
dec
in
xchg
sbb
sub
mov
push
push
jae
les
mov
pop
pop
or
dec
jecxz
lret
notl
and
ljmp
adc
aas
push
mov
mov
lods
sbb
test
std
push
sarl
jns
mov
int
push
movsb
xor
push
jecxz
push
pop
int3
pop
add
ja
push
clc
enter
pop
xor
xchg
aad
arpl
mov
push
inc
fs
inc
lcall
popf
sbb
xor
inc
mul
adc
xchg
loope
add
sbbb
adc
insl
jge
mul
fsubrl
adc
rcrl
pop
mov
mov
add
lcall
fcomi
xchg
dec
or
and
jge
adc
lret
xchg
mov
jns
jo
sbb
arpl
fsubrs
lcall
scas
je
or
inc
jg
iret
pop
xchg
dec
ss
lods
in
xchg
mov
or
jge
in
push
xor
xchg
xor
xchg
addr16
xor
dec
pusha
aaa
inc
mov
repz
test
dec
xchg
push
and
push
pusha
push
jmp
xor
es
cmpsl
cmp
adc
pop
or
pop
dec
mov
jns
mov
or
dec
cli
scas
and
push
or
dec
mov
jne
les
or
fnstcw
jno
and
jo
and
jmp
sub
xchg
push
sbb
decb
movl
mov
mov
pop
or
jo
lods
dec
xor
or
push
push
pop
movsb
add
push
pop
mov
cmp
pop
outsb
mov
stc
into
push
popa
jl
mov
push
int3
mov
iret
les
stos
jae
sub
repz
jmp
movsb
icebp
cwtl
mov
bound
adc
jo
lcall
jp
mov
lretw
pop
pushl
loop
sub
mov
xor
cmp
pop
xchg
sbb
sbb
popa
faddl
sbb
idivl
ljmp
movsb
jns
xor
xchg
outsl
mov
adc
push
jge
mov
repz
inc
in
xchg
cmpsl
or
xchg
mov
out
or
fneni(8087
out
cwtl
sbb
notb
cld
scas
sti
mov
and
lahf
mov
loopne
rcll
imul
adc
arpl
push
clc
out
test
or
stos
das
lds
xor
jp
jne
hlt
add
fwait
inc
into
rep
xorb
cld
iret
orl
dec
and
adc
sbb
mov
mov
push
mov
cmp
inc
push
scas
dec
mov
in
insl
sar
xchg
jmp
pop
mov
add
inc
push
jo
mov
pop
add
dec
insl
ret
xchg
mov
dec
cltd
cltd
es
add
sti
push
in
sarl
jecxz
in
mov
xor
hlt
or
test
jle
jb
les
mov
jmp
cmp
push
jno
cmpb
enter
test
sti
faddl
repz
out
push
icebp
adc
pop
loop
insl
xor
pop
aad
jmp
jmp
imul
stos
inc
test
inc
mov
cs
data16
sub
popf
iret
inc
pop
leave
aas
pop
jnp
stc
or
push
and
sbb
inc
bound
mov
cwtl
sbb
std
scas
ja
cmp
sbb
ret
out
xchg
cmp
cmp
sub
hlt
outsb
frstor
daa
into
scas
push
aaa
daa
adc
mov
and
push
lcall
out
lds
fldl
jecxz
je
or
cmpsb
int3
fldenv
xor
out
pop
call
jg
xchg
mov
mov
inc
int
sbb
jg
cmp
test
outsb
jl
sub
clc
and
insl
inc
xlat
mov
and
ror
mov
imul
mov
sbb
xor
test
lcall
jg
xor
popl
aaa
mov
add
jp
out
xchg
ljmp
out
inc
pop
out
lret
call
jp
or
out
pop
lods
dec
xor
mov
imul
sbb
pop
cs
jns,pn
add
xchg
sahf
xchg
push
subb
pop
sbb
popa
mov
mov
fidivrl
arpl
or
pop
xchg
cmpsl
daa
clc
sub
loope
icebp
insl
add
stc
std
jb
aaa
pop
pop
add
push
cs
xor
les
dec
inc
aaa
and
call
or
push
sahf
inc
mov
pop
mov
xchg
outsl
out
sti
scas
mov
dec
add
leave
inc
cmc
dec
xor
pusha
jg
insb
cmc
inc
xchg
mov
stos
xchg
jno
test
inc
or
les
ds
sbb
mov
movsl
pop
adc
ret
add
add
pop
fs
push
popa
lds
aad
push
and
mov
movsb
arpl
fistl
adc
cli
cltd
in
je
int3
mov
decb
fnstenv
int3
push
das
insb
roll
bound
jne
psubusb
dec
call
rcl
cli
or
inc
sub
adc
adc
xchg
xchg
inc
test
sbb
mov
stos
pop
pop
push
lods
xor
dec
insl
xor
ds
jmp
mov
fstpl
xor
fs
sti
inc
rcrb
push
mov
sysenter
stos
inc
push
cmp
fsts
sbb
push
xchg
dec
dec
movsb
xchg
jp
sti
jae
xor
lock
out
mov
jl
push
and
rol
push
adc
xor
divb
add
add
aad
mov
sub
push
jne
test
mov
dec
jnp
arpl
mov
adc
fcomps
jecxz
dec
ret
jns
loop
bound
stc
jp
pop
sahf
iret
add
cmc
aas
sbb
cltd
into
and
loope
fidivl
cmp
push
adc
mov
push
fwait
scas
mov
xchg
inc
push
mov
adc
jmp
outsl
lods
xchg
push
clc
and
icebp
xor
push
xlat
in
pop
dec
sarb
inc
imul
pop
cltd
ret
outsl
dec
shll
data16
dec
pop
in
int
mov
filds
test
je
dec
xchg
es
sbb
scas
push
ljmp
mov
sub
in
xchg
fs
push
repz
in
cmp
fs
pop
jge
push
mov
popf
mov
lds
or
fildl
add
iret
mov
sbb
xchg
pop
test
sbb
daa
jp
xchg
popf
lock
roll
lds
dec
dec
dec
pushf
xchg
pop
mov
decl
dec
or
jo
adc
xchg
clc
add
jb
cwtl
in
jle
test
outsl
adc
mov
jp
pop
lcall
sub
in
xor
addb
pusha
lea
cmp
enter
or
scas
cmp
push
hlt
xchg
jns
jne
popa
lcall
fbstp
mov
cld
aad
es
les
cmp
packuswb
lret
xchg
jmp
and
loop
mov
int3
xchg
dec
mov
cwtl
imul
gs
cwtl
add
mov
jmp
mov
shlb
push
int3
xchg
fsubs
dec
and
jmp
insl
inc
mov
jmp
jo
ds
mov
mov
adc
loopne
xor
push
fwait
or
inc
ss
dec
and
out
sbb
ficompl
xor
add
cmpsl
sahf
ret
out
cs
push
sub
adc
mov
ror
aam
push
lahf
sbb
push
aas
pop
cmc
xchg
sbb
xchg
roll
insb
mov
nop
xor
xchg
jp
sbb
loopne
cwtl
inc
push
addr16
mov
lret
xor
mov
inc
xchg
or
xchg
pusha
sub
sbb
cmp
lret
push
into
dec
xchg
cltd
stos
add
mov
inc
adc
mov
pop
push
enter
pop
dec
pop
adc
adc
je
jae
ret
adc
push
scas
gs
sbb
ret
in
cmp
jmp
inc
loop
loope
jl
jmp
push
cmpsb
or
sub
sahf
daa
leave
shl
push
rep
cwtl
sub
lock
inc
push
flds
aaa
pop
xor
stc
in
data16
add
lods
sbb
mov
add
mov
inc
mov
mov
pushf
jmp
mov
mov
mov
ret
ret
jmp
ret
aaa
jne
push
cmc
jle
inc
xor
lcall
ja
lods
call
aad
dec
mov
sbb
lods
aas
jp
stc
addb
andl
pop
lods
dec
repnz
push
inc
adc
lods
adc
fdivl
or
mov
test
push
xchg
data16
jae
jno
popf
cli
sbb
xchg
mov
sbb
jbe
test
xchg
fisubs
mov
sub
popf
stos
ret
aam
adc
push
rcrb
inc
xchg
pop
push
popa
pusha
sbb
pop
fucomi
ficoml
xchg
sbb
mov
add
mov
sbb
int3
rcrb
lahf
mov
sub
cltd
add
jecxz
aad
dec
pop
jle
rcrl
jge
scas
roll
loop
or
sub
enter
pushf
lsl
push
cli
sbb
fistps
cmpsl
xor
inc
test
addb
adc
pop
inc
xchg
xchg
push
jns
icebp
xchg
jo
push
inc
les
cmp
cmp
out
call
in
sti
cmpl
mov
or
notl
mov
aas
flds
das
cmp
or
addl
sti
fists
loopne
aam
rcll
xchg
xor
or
mov
pop
das
add
or
in
arpl
inc
and
adc
or
xchg
jnp
jl
iret
mov
xchg
popa
out
cmp
mov
mov
out
xadd
lcall
addr16
icebp
out
fsubrs
mov
movsl
mov
dec
daa
ljmp
cmp
sbb
loope
popa
xchg
or
rcrl
stos
in
or
xlat
cwtl
popa
jecxz
sahf
inc
pop
mov
cmp
cmp
xchg
popf
push
ja
lods
rorl
jne
dec
xchg
aaa
in
sbb
sti
ljmp
adc
lods
pop
jle
xor
push
ret
rclb
mov
jp
je
mov
pop
sbb
jnp
mov
and
add
insb
bound
pop
fwait
cli
adc
jno
cmp
add
fildll
push
push
in
push
imul
sub
cli
mov
movl
lods
dec
mov
pop
pop
pushf
js
icebp
imul
sbb
scas
leave
cmp
outsl
in
lahf
adc
pop
insb
fbstp
subl
pop
xor
pop
in
add
jb
xor
pop
mov
pusha
pop
ja
sub
sub
add
sub
in
sub
out
sub
pop
add
popf
popa
jnp
adc
dec
in
jae
sbb
js
or
popa
stc
xchg
push
outsb
xor
sarl
scas
loopne
mov
test
fs
sbbl
mov
dec
ds
cmp
in
in
inc
pop
mov
mov
cli
xchg
sub
outsb
sub
shr
cs
lahf
cmp
mov
repz
into
jle
adc
dec
push
std
mov
sbbl
aas
jmp
push
nop
js
lods
not
inc
neg
sarb
inc
xlat
mov
inc
rcrb
cli
cmp
mov
or
orb
mov
sub
lahf
ret
xchg
sub
ret
add
cvtdq2ps
xchg
mov
shll
imul
xlat
jle
or
rcll
repnz
jne
jg
xor
jae
testl
mov
cltd
mov
nop
ljmp
pop
xchg
sub
sbb
inc
lahf
or
repnz
xchg
mov
fildll
fstl
scas
push
jl
addr16
pop
mov
xchg
repnz
pop
jmp
cltd
insb
or
ret
js
pop
push
jns
pop
inc
push
cmp
shlb
jge
dec
jmp
and
pop
mov
aad
out
push
inc
push
repz
or
pusha
dec
dec
scas
pushf
add
jns
sbb
sub
adc
popa
push
std
dec
xlat
push
into
jnp
test
mov
ljmp
cwtl
push
push
cmp
gs
hlt
or
xchg
mov
cmc
jnp
or
test
xor
gs
lret
xchg
jmp
iret
adc
aad
gs
adc
cli
xchg
pop
mov
iret
push
sbb
jl
sub
addr16
stos
and
push
push
lods
subb
xchg
popa
mov
enter
adcb
neg
dec
aas
in
and
pop
dec
xor
push
in
sub
add
outsl
gs
mov
inc
jno
push
lods
mov
dec
cld
pop
and
or
adc
cmpsb
rorb
or
xor
roll
mov
and
or
push
xchg
push
and
sbb
pushw
xchg
cmpsl
scas
xchg
dec
popl
mov
push
jno
xchg
jg
dec
or
in
pop
or
xchg
dec
or
fwait
sub
jno
mov
fs
inc
sub
pminub
enter
cmp
push
push
xchg
lds
ss
dec
adc
pop
bound
push
cmc
sbb
jg
mov
xor
loopne
lock
pop
jnp
fistl
xlat
ffreep
or
popf
les
out
mov
pop
inc
mov
dec
repz
pushf
aam
jns
mov
aas
fsubrs
inc
aaa
stos
dec
pusha
call
out
popf
shll
pop
fdivl
decl
repz
mov
inc
xchg
fnsave
insb
lock
stos
rol
shll
test
pushl
addr16
mov
jae
bnd
push
pop
cmp
lret
sbb
xchg
mov
sbb
add
cmp
adc
lods
mov
lock
insb
mov
test
xchg
sbb
cmp
mov
test
inc
stos
je
aas
bound
and
fcomp
cmp
out
or
repz
sub
dec
dec
fldt
pop
pusha
xchg
cli
xchg
sub
loope
cmp
sub
loopne
stos
or
pop
int3
out
je
sbb
dec
addr16
scas
sub
jbe
repnz
push
insl
pop
xor
aas
loopne
movsb
push
mov
cld
push
push
or
cmc
and
scas
pop
jbe
lret
or
insl
pusha
es
ret
pop
cltd
push
call
mov
aaa
add
out
in
sbb
xchg
or
shl
xor
sbb
add
rcl
push
pop
jns
xchg
pop
cmp
out
out
lss
xchg
jge
mov
cmpsl
jecxz
sbb
mov
ds
aam
rcrl
mov
cmp
lea
push
sbb
aam
jbe
loope
mov
push
mov
sbb
into
test
test
int3
fs
jnp
add
cs
adcl
outsl
dec
push
fnsave
imull
adc
add
push
cli
andl
icebp
outsb
lret
xchg
int
and
outsl
scas
sahf
mov
inc
enter
data16
cmp
shlb
dec
sar
pop
jnp
lds
shll
popa
jo
repnz
or
add
stos
push
push
mov
cld
jecxz
push
add
imul
cld
aam
sahf
cmp
xor
inc
cmc
gs
mov
jle
call
int
fwait
pop
jnp
int3
es
add
jle
movsb
aad
lea
mov
sub
fldcw
loope
and
pop
ljmp
jg
sbb
sahf
or
ss
push
aad
mov
adc
sub
jns
dec
mov
insl
xchg
ja
aas
mov
rdmsr
add
push
cli
pop
enter
lahf
sub
pop
cmp
push
cld
jne
aam
or
mov
push
insl
out
cwtl
mov
outsl
lret
adc
xor
sub
sbb
push
cmc
shl
ret
add
cmc
pop
cmp
mov
lea
jge
mov
dec
mov
push
cli
testb
insl
iret
mov
or
call
xor
xor
inc
fldt
repnz
mov
pop
cmp
or
push
adc
mov
dec
and
dec
push
mov
int3
out
xchg
push
pop
stos
adc
int
dec
xor
mov
in
dec
cltd
ret
sbb
adc
cmp
cmp
adc
mov
push
insl
cmp
mov
ljmp
jb
lret
push
mov
repz
inc
cmp
xchg
insl
lahf
pop
sti
out
shlb
jmp
ror
hlt
outsb
popa
les
sbb
mov
jmp
js
mov
filds
lods
lods
jnp
fisubrs
cli
push
rcr
in
aaa
out
insb
jecxz
mov
out
fwait
dec
push
notl
dec
mov
or
addr16
stc
outsl
inc
pop
test
in
cmc
sub
out
mov
jae
or
push
pop
push
mov
bound
pop
or
and
mov
test
adc
sbb
fdivs
xchg
in
in
xor
pop
dec
addl
cmp
lahf
jmp
xchg
and
adc
dec
out
fidivrl
sbb
sar
lahf
js
mov
fwait
jnp
ja
pusha
lret
push
clc
imul
mov
add
ds
jne
add
out
enter
movb
fisubl
jb
aaa
jmp
jp
sub
aaa
xor
inc
repnz
lods
icebp
stos
mov
mov
pusha
sbb
jg
pop
mov
ljmp
es
mov
push
pop
push
jecxz
mov
dec
dec
jbe
test
and
and
insl
adc
mov
mov
ljmp
jecxz
add
dec
or
cwtl
add
fwait
jns
cmp
sub
xor
sub
mov
call
ja
stos
arpl
push
add
jno
bound
sbb
pop
lret
inc
mov
xchg
cmc
incb
adc
jns
push
pop
fdivr
stc
movq2dq
test
add
cmpsb
add
sarl
jecxz
and
cmc
mov
mov
fcmovbe
arpl
and
and
jge
jne
jae
loop
sub
sub
shll
adcl
sbb
mov
or
push
lcall
testl
jns
xor
arpl
add
cmp
ss
mov
and
nop
scas
xor
es
in
aas
mov
add
xchg
pop
lea
cli
cmp
mov
fsubl
ljmp
xchg
roll
in
and
dec
aas
es
lock
aad
sub
mov
xor
daa
pop
gs
xchg
fbstp
adc
in
popf
cltd
jge
cmpsl
xchg
xor
lret
sbb
inc
sub
js
pavgb
sbb
lds
xchg
mov
dec
push
rorl
sbb
sub
cmpsl
fidivrs
mov
mov
cmp
inc
inc
repnz
ds
jbe
mov
sbb
divl
nop
jmp
adc
inc
dec
xchg
xor
rep
stos
fcmovnbe
and
add
xchg
cltd
iret
mov
aam
inc
out
dec
test
movsb
cmpsl
mov
js
jge
idivb
outsl
or
bound
sarb
mov
and
pusha
hlt
dec
sub
sbb
add
orb
mov
sub
scas
fwait
roll
repz
dec
mov
add
sub
adc
lret
xor
dec
inc
mov
mov
fcomps
inc
stos
cmpsl
add
mov
push
push
dec
jnp
cmp
push
xchg
imul
testl
and
test
sub
xchg
inc
fisttps
dec
sbb
cmp
aas
pop
xor
xor
in
sub
pop
pop
mov
xchg
loop
dec
and
popf
iret
pop
dec
or
pushf
wrmsr
lret
jl
xchg
push
aas
pop
or
push
mov
loopne
xchg
inc
lcall
iret
push
das
int3
fldl
push
push
test
xchg
scas
and
cmp
adc
lea
aad
scas
sbb
xor
movsb
mov
push
xchg
pop
pop
jb
sahf
cltd
add
inc
arpl
push
xor
adc
or
sbb
xor
inc
push
adc
testb
data16
fadd
loope
aam
incb
xchg
cmp
xchg
sub
lea
fbstp
push
or
dec
test
or
jno
les
incb
cltd
cld
sahf
std
jp
stos
adc
daa
cs
mov
js
xchg
pop
iret
push
pushl
mov
addr16
repnz
js
sub
out
lock
dec
jecxz
adc
cmovne
out
or
rclb
xor
push
push
cmpsb
outsl
lret
dec
aaa
push
mov
fisubrs
cs
jnp
out
pop
pop
dec
push
pop
jmp
dec
push
popa
test
push
pop
mov
pop
cwtl
cwtl
mov
in
dec
mov
pusha
mov
aam
filds
idivl
data16
dec
movsl
xchg
outsl
jae
lcall
xchg
out
mov
aaa
ds
dec
pusha
push
sub
pop
mov
enter
sub
shl
fnstsw
mov
inc
test
pop
dec
lods
call
popa
inc
or
jb
xor
pop
lods
xchg
jae
mov
mov
push
xor
adc
movsl
enter
mov
pusha
adc
fsubrs
add
loope
cmp
movhps
movsb
cmp
inc
aaa
ja
out
xchg
icebp
ret
testl
cmp
or
rorl
outsb
xor
mov
mov
into
jns
nop
inc
repz
pop
jne
xchg
cmp
push
out
mov
inc
inc
fdivrl
sahf
inc
pop
mov
divl
mov
sbb
and
cli
stos
jp
test
push
pop
arpl
mov
and
loop
pushf
push
je
sahf
pop
lods
jg
decl
ds
loopne
sub
xchg
enter
loop
or
add
inc
lret
cmp
sbb
int
or
imulb
jne
dec
lock
shr
dec
mov
sub
push
jl
pop
cmpsl
and
movsb
cmpsb
mov
loop
loop
pop
roll
sbb
pop
int
jle
and
insl
les
mov
sub
lods
scas
mov
repnz
xor
dec
scas
out
inc
dec
out
sbb
dec
jmp
mov
xor
push
mov
lret
adc
icebp
enter
lret
js
rcr
jp
jge
sar
cmp
pop
lods
movsb
lds
lock
mov
xor
xor
addr16
lods
xor
cmp
jecxz
lea
loop
fwait
cld
loop
hlt
inc
dec
or
mov
cmpsb
jge
cmp
add
movsl
data16
xchg
int
in
xlat
jmp
pop
adc
inc
inc
mov
push
cld
out
icebp
cmpsl
cli
pop
pop
dec
js
in
lods
and
mov
outsb
out
incl
and
jl
jno
sub
rcrl
sbbl
sbb
push
dec
and
jle
daa
cmp
insb
cmp
add
std
pop
sarl
aad
movsb
jecxz
mov
mov
aaa
je
mov
out
movsl
jns
std
xor
mov
xor
adc
xor
sub
rorb
data16
movsl
sbb
fistpll
clc
hlt
frstor
gs
mov
aad
scas
inc
dec
imul
sbb
call
stos
lock
sub
mov
inc
add
mov
adc
ja
movsb
push
cmc
inc
mov
sarb
push
sarl
mov
and
push
pusha
fstp
lret
addr16
jecxz
jge
xchg
and
adc
mov
idivl
pushf
fistpl
sub
xor
fildl
adcb
fcoms
in
mov
mov
inc
inc
je
and
out
mov
and
stos
inc
pop
fcom
and
sarl
fbld
jmp
inc
jg
inc
dec
xchg
or
mov
jecxz
movsl
pop
mov
jns
adc
inc
push
clc
and
ret
mov
dec
cmp
icebp
out
aas
cltd
movsb
xchg
loopne
mov
loop
cs
call
mov
mov
sbb
test
mov
mov
push
enter
jne
sub
stos
shr
xchg
stc
loop
stos
and
mov
mov
jbe
addr16
cmp
leave
dec
xlat
das
xchg
fsubr
xchg
imul
jmp
sti
cmc
addr16
test
xchg
hlt
add
mov
xchg
fcomps
pop
inc
inc
scas
mul
nop
call
push
movsb
cmp
and
int3
push
and
inc
call
js
jo
mov
push
or
mov
mov
addr16
movsl
jmp
inc
das
pushf
lods
ret
xor
mov
int
mov
in
stos
inc
callw
cmpsl
lds
cs
cmp
or
pop
and
xlat
out
dec
orb
jge
ljmp
rorl
xlat
sbb
xlat
lea
stos
or
bswap
dec
popa
xor
jno
or
in
in
js
xchg
sub
or
lahf
inc
popa
pushl
inc
movsl
shrl
mov
push
jp
mov
cld
mov
cmp
mov
sbb
inc
jge
jg
xrelease
gs
jecxz
cs
sub
lcall
push
inc
pop
xchg
shlb
iret
cmpsb
addl
cmpl
lea
call
lahf
mov
mov
divl
in
out
out
inc
rcrb
out
stos
lret
je
sub
call
pop
adc
push
fcmovnb
lret
xchg
mov
sbb
aaa
enter
inc
add
xchg
pop
scas
and
push
sbb
int
xor
sbb
and
push
fisubs
and
dec
jns
push
jge
xor
adc
mov
cwtl
jne
int3
mov
add
lcall
dec
out
movsb
mov
hlt
mov
or
xchg
cmp
cmpb
push
js
xor
ds
pop
into
imul
mov
xor
sub
out
inc
imul
and
xchg
int3
in
push
mov
push
cmp
sbb
aam
push
mov
cmp
and
dec
inc
mov
add
fnstenv
repz
int3
das
sbb
push
insb
or
pop
clc
push
sub
mov
jecxz
jae
mov
or
and
jnp
or
push
cmp
push
out
adc
mov
and
dec
cli
push
cmpsl
push
in
insl
cmp
das
mov
adc
jge
jmp
cmp
ficomps
gs
lea
shr
mov
and
rolb
sbb
xchg
xlat
xchg
jge
lods
mov
shlb
faddl
xchg
insb
xor
or
ss
js
idiv
mov
jbe
cmp
insb
test
hlt
or
mov
xor
cld
mov
xor
js
pop
inc
pop
cwtl
fisubrl
cmpsb
or
stc
cmp
mov
jmp
mov
dec
adc
adc
push
push
popf
pop
adc
jb
pop
mov
cltd
adc
inc
aas
sub
aad
adc
sub
or
stc
pusha
add
or
push
out
cmp
sub
ja
add
sbb
jbe
shrb
jmp
adc
cmp
aas
xchg
sub
inc
outsb
scas
jecxz
adc
int
xchg
ss
addr16
add
dec
pop
mov
test
ds
out
lahf
mov
push
rep
lods
aad
push
push
scas
loopne
add
adcb
imul
jne
xor
sbb
cmpsb
js
ret
je
addr16
shlb
mov
pop
cmp
push
ds
xor
or
repz
aaa
mov
dec
sub
cmp
nop
roll
pop
iret
pop
xor
push
insl
or
xor
fists
inc
xlat
dec
mov
xor
inc
ljmp
repz
in
jmp
sbb
sbb
loope
neg
in
sub
insl
push
jecxz
scas
cld
push
mov
push
adc
sbb
mov
mov
outsb
sar
push
dec
cmp
mov
add
xchg
test
inc
mov
mov
notb
mov
aaa
xchg
dec
aaa
les
pusha
cmp
mov
push
push
dec
adc
mov
icebp
ret
mov
cld
mov
rcr
jns
shrb
lock
lea
jae
dec
jl
jb
jl
into
addl
andl
jp
and
xor
scas
adc
loope
scas
mov
mov
push
psrlw
cld
test
test
pop
jnp
stos
pop
pop
push
xchg
mov
xchg
in
xor
imul
mov
add
dec
ljmp
or
ljmp
and
jecxz
or
sbb
cltd
stc
aas
mov
stos
mov
adc
scas
sbb
ret
mov
or
pop
pop
cmp
fiadds
outsl
sub
sbb
inc
das
adc
or
testb
pop
sub
cmc
xlat
nop
xchg
les
push
jecxz
sti
rcl
push
fdivr
cld
sub
mov
pop
inc
mov
xor
and
cwtl
out
frstor
stc
add
push
test
add
xchg
repnz
xor
outsb
xchg
xor
or
jb
sbb
popf
jbe
outsb
push
sahf
bound
dec
subl
scas
cmpsb
adc
fstpt
frstor
jne
mov
sub
fnsave
pop
xor
sub
jno
dec
pop
pusha
cmc
mov
pop
adc
inc
or
lret
mov
lcall
das
fisubl
data16
icebp
js
ljmp
fwait
imul
sbb
ret
fdivs
xlat
enter
mov
jmp
xchg
enter
mov
mov
xchg
mov
mov
aam
insb
inc
or
push
je
test
imul
ret
mov
inc
pop
dec
dec
sub
and
jge
xor
pop
cs
jmp
div
xchg
daa
xchg
call
xor
add
or
adc
inc
cmc
pop
sub
dec
rcrb
sub
push
das
sub
mov
pop
mov
cmp
adc
cmp
leave
xchg
pushf
add
int
out
adc
dec
add
ret
xor
inc
sub
lret
sub
and
pop
test
sahf
aaa
adc
pop
stos
popa
lcall
dec
xor
int3
dec
pop
jecxz
daa
mov
cs
lods
dec
rcrb
cmp
testb
sbb
xor
int3
mov
add
leave
pop
movsl
movsl
lea
pushf
loope
and
mov
lret
jl
cmp
das
lret
xor
imul
sub
shlb
cmp
sbb
jnp
ffree
add
sub
fisubs
pop
insl
or
imul
shrb
xor
out
scas
sbbl
sarb
jae
scas
mov
cmp
mov
ja
cs
add
mov
and
mov
test
out
mov
inc
pop
xor
push
bound
mov
jae
orb
mov
ss
adc
sarl
adc
dec
and
icebp
lods
or
sub
xor
add
mov
adc
mov
lcall
inc
outsb
or
pop
inc
jno
and
jecxz
push
mov
jecxz
orl
stc
dec
push
push
mov
frstor
cmp
clc
xchg
xchg
call
jle
mov
daa
mov
xchg
sub
xor
pop
lahf
lret
insb
sbb
mov
pop
add
pop
nopl
xor
xchg
cmp
or
das
adc
push
cli
fsub
dec
cmp
enter
jg
cmpsl
xchg
dec
add
sbb
lret
addr16
test
popf
andb
les
ss
jle
adcl
or
jp
out
or
sahf
ss
cld
test
push
sub
fdivr
sbb
sbb
es
xor
test
and
push
pushw
sub
and
ds
addr16
and
push
pop
and
aaa
aam
lahf
lcall
xor
adc
roll
pop
mov
sti
lcall
addr16
les
dec
ljmp
gs
daa
sub
cmpsl
sbb
push
ret
xchg
gs
loop
mov
lds
xchg
jns
das
sbb
pop
xchg
push
and
clc
xorb
scas
mov
inc
lahf
pop
loopne
pop
pop
je
push
push
lahf
ret
sbb
imul
aam
jns
bound
inc
jae
call
adc
idivl
xchg
fmuls
adc
jnp
decl
dec
icebp
mov
jne,pn
adc
outsb
jle
mov
dec
shl
jo
fcoms
dec
dec
aaa
jl
repnz
push
xchg
and
lahf
insb
out
inc
in
jp
push
movsl
lcall
mov
cmp
cwtl
pop
pop
add
xor
sahf
fstpl
in
sub
lock
sbb
jmp
imul
xchg
xor
push
test
adc
into
xchg
shll
fwait
aam
cmpsb
js
into
xchg
lea
ds
lea
std
or
mov
cmpsl
dec
push
lcall
add
push
pop
ds
pusha
or
jae
cmp
lods
push
xor
mov
aaa
pop
ljmp
mov
jne
push
mov
push
cmp
mov
mov
stos
push
fs
addr16
add
add
lcall
add
cwtl
icebp
pop
push
xchg
inc
mov
jae
in
out
mov
test
adc
fucomip
test
add
mov
dec
pop
inc
loopne
cmp
add
mov
popa
std
dec
pop
daa
mov
enter
gs
jge
push
sbb
pop
jge
insl
outsl
jne
rol
int
push
inc
andl
fld
xor
aaa
insl
dec
push
sar
ret
stos
fmuls
cs
cmp
cmc
fnstenv
pop
mov
cmp
fwait
cli
ficoml
cwtl
xchg
cs
cmpsb
xchg
out
xchg
dec
test
jns
cmc
adc
add
inc
mov
loopne
xchg
sub
lret
ficompl
mov
or
ficomps
xor
cmpsl
pop
unpckhps
rcll
cmpsb
xor
xchg
jp
or
jg
mov
adc
enter
cmpsl
or
mov
jmp
imul
adc
mov
stc
leave
cmp
out
cwtl
and
sub
cltd
xorb
adc
rolb
int
cmp
leave
subb
fildl
cmp
pushf
cmp
inc
aam
xor
sbb
mov
addr16
repnz
addr16
dec
xchg
xor
mov
pop
inc
mov
mov
push
movsb
jmp
ret
xchg
mov
or
lods
mov
fdivp
scas
bound
repnz
cmp
push
xlat
dec
add
jmp
mov
sbb
outsl
bound
out
lcall
sahf
test
and
jmp
repnz
mov
hlt
push
mov
ret
arpl
mov
lahf
ljmp
or
xor
xchg
in
outsb
cmp
and
rol
rol
pop
adcb
and
pusha
out
pusha
sub
lret
paddd
lret
in
clc
call
in
lret
fidivl
push
dec
sub
and
push
fxch
gs
xor
mov
push
inc
sbb
push
inc
sub
inc
push
lret
imulb
jge
sbb
rolb
pop
jecxz
pusha
pop
pop
jns
mov
clc
push
inc
lahf
pop
cmp
div
pop
push
adc
cltd
or
inc
inc
push
or
adc
mov
adc
mov
mov
or
mov
aaa
fisubl
pop
xchg
fisubl
sti
hlt
push
clc
adc
lods
int3
out
rolb
or
cltd
and
push
jmp
movsl
jns
adc
inc
mov
mov
ret
xchg
adc
pop
adc
fs
inc
aam
adc
fxch
mov
add
test
xlat
push
pop
insl
sbb
out
xor
adc
daa
pop
pop
loope
ss
inc
pop
mov
idivl
adc
fimuls
dec
jl
mov
adc
test
push
sbb
mov
test
xchg
sbb
lods
mov
xor
sarl
add
fwait
cmp
addr16
mov
data16
pop
mov
push
or
mov
add
or
pop
loopne
push
dec
shlb
mov
jg
cmpsb
out
cmpb
adc
loopne
ja
sub
pop
dec
or
mov
cmpsb
imul
fcmove
push
js
rcr
or
xchg
and
add
out
pop
push
sahf
aam
fistpll
dec
stos
in
das
rcrb
mov
adc
insl
ja
lret
push
mov
push
andb
cmp
add
sub
loope
cmpsb
or
ss
scas
insb
or
sub
inc
test
xor
seto
clc
push
mov
lods
loope
dec
out
dec
addr16
push
jl
call
pusha
mov
outsl
mov
push
sbb
and
daa
insb
push
test
mov
xor
out
jnp
sarb
jb
mov
mov
bound
jl
mov
mov
inc
in
in
cli
fistpl
lahf
jne
shll
cwtl
pop
pop
jge
flds
xchg
cmp
cmpsl
inc
pop
scas
jle
int3
and
mov
and
add
jmp
in
mov
aas
push
test
jg
xor
pop
push
cld
mov
or
xchg
xchg
or
add
aaa
mov
sbb
or
sbb
mov
adc
push
xchg
pop
mulb
adc
out
pushf
std
pop
outsb
push
movsl
cwtl
mov
cli
dec
pop
lods
pop
je
inc
aam
mov
cmp
sti
out
mov
add
test
push
movsb
mov
insb
sub
int
enter
divl
xlat
imul
es
mov
outsl
xlat
mov
xorb
pop
pop
mov
addr16
xchg
adc
ret
sub
ret
shll
cmc
mov
fsubrl
fisttpll
fdivr
mov
sbb
fsubl
rorl
stc
push
jmp
mov
call
dec
adc
gs
insl
clc
sbb
inc
cld
mov
aas
mov
pusha
mov
fwait
jae
out
sub
mov
stos
inc
lret
scas
xor
jo
cld
cwtl
mov
mov
subl
in
mov
dec
pusha
lock
dec
outsb
jl
out
cwtl
adc
push
test
jmp
dec
xchg
cld
adc
lahf
jae
fcomp
nop
dec
dec
xchg
inc
xchg
in
inc
or
mov
mov
jns
out
sub
ficompl
add
pushf
test
sub
cmp
imul
and
xlat
jnp
jo
es
jp
push
pop
mov
xor
and
inc
xchg
sub
repz
mov
pop
outsb
std
mov
aas
sahf
cmp
push
jmp
sbb
scas
pop
cmp
and
and
mov
insl
and
incl
loop
jmp
push
xor
leave
dec
push
inc
mov
inc
and
dec
shrl
loop
sbb
lretw
mov
int3
js
xchg
xchg
es
lahf
pop
jo
test
xchg
out
test
push
idiv
subl
test
cmp
mov
inc
js
in
pop
cmp
mov
push
insl
mov
cli
and
mov
fst
xchg
pop
add
daa
out
in
jl
pushf
pop
sbb
out
out
subb
enter
rolb
in
sub
or
std
xabort
push
aaa
aam
cmp
mov
push
lods
jle
scas
xchg
nop
push
push
push
ja
pop
aad
and
xor
jg
sbb
test
idiv
push
push
sbb
dec
jo
and
adc
notb
ds
rorb
dec
add
mov
dec
out
clc
jmp
mov
sub
mov
pusha
movsb
test
cmpsl
inc
jb
pop
adc
aam
test
pusha
mov
lods
inc
subb
add
gs
les
fwait
js
lret
cmpsb
inc
inc
enter
pop
push
cmp
outsl
pusha
push
lret
xor
mov
sbb
sti
dec
push
ret
andb
add
add
dec
fmuls
mov
andb
outsb
aam
adc
add
jbe
lret
gs
jnp
ret
sahf
jb
or
mov
jae
xor
iret
jo
insb
ljmp
inc
sbb
es
xchg
sahf
and
sar
xor
xchg
add
inc
sbb
xchg
cmpsb
outsb
sbb
insb
jo
cwtl
add
jb
in
mov
jae
test
nop
les
inc
push
jne
jmp
arpl
pop
ret
jns
mov
repz
push
outsb
mov
push
sub
adc
sub
addr16
fwait
rol
lret
add
cltd
outsb
mov
test
jae
inc
fiaddl
mov
adc
xchg
xchg
lods
mov
or
push
or
add
pop
mov
sub
dec
sub
cmp
push
mov
xor
jno
mov
loop
icebp
fstps
addl
cltd
mov
mov
add
jge
lahf
inc
xchg
aaa
jae
ja
shlb
mov
or
xchg
mov
ret
sbb
cmp
jge
icebp
jge
mov
mov
sarl
jmp
jno
inc
sbb
pop
push
jp
aad
pop
jne
jns
out
repz
aad
in
loope
jae
test
mov
mov
jmp
mov
jg
jb
ja
nop
xor
js
jo
xor
fcomps
movsl
xor
fld
in
jnp
xchg
push
pop
cmpsb
imul
xor
nop
imul
lea
insl
xchg
mov
pop
lahf
mov
and
imul
fsubs
or
imul
mov
sub
adc
and
pop
lret
dec
xor
mov
cmp
inc
jmp
clc
jle
cmpsb
dec
incb
pop
test
adc
outsb
aam
and
or
add
pusha
pop
mov
rcll
sub
inc
out
sbb
popa
out
dec
ror
xor
lds
mov
jl
je
mov
jne
and
jns
cmp
mov
hlt
sahf
mov
ret
dec
xchg
xor
sbb
rorl
jne
iret
fsubs
jae
sbb
rolb
and
jo
icebp
and
out
lcall
xchg
ss
loope
add
mov
fdivrl
dec
adc
ds
mov
aaa
pop
das
cmp
adc
loope
pop
mov
inc
aad
daa
in
sbb
jns
cmp
faddl
mov
pop
dec
mov
adc
push
pushf
fsub
stc
xlat
xor
push
fstpt
pop
cmp
jg
insb
add
mov
dec
dec
and
pop
or
ja
sbb
push
xchg
test
sbbl
stos
ret
mov
lds
sbb
in
insl
stos
jmp
enter
mov
fs
pop
mov
decl
test
push
or
addr16
mov
push
lock
out
pop
pop
sbb
jnp
imul
addr16
or
insb
add
test
or
inc
mov
pop
add
and
add
pop
loop
cmp
sub
jmp
xor
add
nop
cli
sub
pop
shll
into
fstps
dec
and
add
add
aas
mov
push
test
clc
add
je
cmp
lahf
imul
jp
mov
nop
int
in
hlt
lcall
or
add
stos
fldl
sbb
pop
dec
mov
xchg
and
add
mov
pop
pop
inc
jno
pop
push
in
pop
mov
insl
xlat
and
mov
and
cmp
push
add
clc
mov
enter
popa
or
cmpb
lea
or
popf
arpl
enter
jmp
xor
std
inc
push
ljmp
lahf
adc
xor
clc
in
dec
xor
jmp
dec
jb
lods
and
cmp
jnp
out
sub
bound
leave
and
xchg
pop
push
and
mov
in
pop
hlt
popf
aad
lret
sbb
adc
adc
in
je
mov
mov
cmc
sub
stos
mov
xlat
cld
push
inc
dec
adc
sbb
add
out
pop
mov
push
jno
test
inc
fistpl
stc
xor
lods
stos
aad
xchg
pop
sbb
ss
add
pop
lahf
sub
fs
mov
divl
dec
std
mov
push
pop
xchg
shrl
ret
cld
push
push
lcall
mov
shll
shll
popa
jmp
bts
mov
xchg
jo
pop
xchg
pop
daa
mov
jge
add
test
mov
xchg
shlb
orl
push
daa
dec
pushf
pop
fstpl
ret
cmp
lds
xchg
or
mov
mov
sub
add
pop
jns
pop
pop
xchg
cs
pop
sub
enter
jne
shll
dec
repnz
pop
cmpsb
mov
or
cld
pop
cmpsb
add
lret
xchg
cltd
hlt
and
pop
adc
subl
xor
jb
pop
mov
ret
cmp
in
xchg
push
pop
fsin
jmp
movsb
jecxz
das
pop
jg
lahf
lret
loopne
lahf
lcall
dec
sub
fistps
das
daa
out
dec
mov
push
or
mov
or
pop
cmp
mov
push
repz
push
outsl
fbld
pusha
sbb
and
mov
push
adc
fists
cmp
popa
ret
loope
adc
mov
push
mov
sti
xchg
sub
push
mov
and
jb
aaa
jns
mov
push
ds
sbb
sub
lcall
fisubrl
add
xorl
insb
and
aad
xchg
orb
cmp
xlat
or
add
je
adc
imul
cmp
jbe
pop
cmpsb
sub
lret
push
outsl
aaa
cmp
push
test
daa
push
sbb
add
imul
or
int3
pushf
inc
lds
cmc
loopne
shrl
inc
cmp
pop
pop
fcomps
and
idivl
xchg
mov
lahf
icebp
pop
mov
inc
fisttps
xor
and
lods
test
je
inc
das
pusha
out
pop
insl
sub
push
fisubrs
mov
loope
int
sbb
enter
rcl
mov
xor
mov
adc
rcl
aaa
jecxz
mov
cmp
in
rcrl
pop
imul
ljmp
mov
xchg
test
mov
rcrb
mov
mov
add
xchg
dec
js
or
into
inc
pop
inc
in
jb
cltd
aam
mov
jnp
adc
ljmp
jns
jecxz
addr16
xchg
test
lock
in
je
out
fs
adc
out
adc
xor
jg
rcrb
mov
aas
mov
divb
jns
cmp
addb
mov
mov
cwtl
mov
xchg
mov
imul
gs
xchg
sbb
cltd
push
sbb
cwtl
rol
push
inc
rorb
mov
cmp
lock
xor
pop
lods
jne
push
jno
fsts
aaa
data16
pusha
or
pop
xor
fcoml
loope
fstps
inc
fbld
leave
sbb
mov
push
movsb
repnz
push
mov
cmp
cld
enter
jg
sbb
dec
xor
test
out
jo
cmpsb
cltd
and
cs
or
mov
jmp
sbb
jmp
pop
adc
jne
loope
cli
movsl
add
mov
mov
inc
or
mov
popf
shr
loopne
popa
jp
sub
movsw
sub
aad
sub
push
jne
xchg
adc
mov
std
test
int3
mov
adc
iret
jno
jl
and
mov
push
mov
pop
mov
dec
cmpsb
mov
fs
in
push
adc
cmp
lea
call
or
das
cmc
pop
sbb
jmp
nop
xor
inc
shl
stc
call
push
sub
add
fists
jg
sbbl
xchg
push
push
xchg
add
inc
mov
xchg
inc
cmp
test
jmp
mov
mov
mov
daa
test
int3
ljmp
mov
cmp
leave
out
mov
mov
or
xorl
mov
daa
shll
sub
int3
pushf
stos
mov
jno
insl
lea
mov
fbstp
out
rcll
add
imul
loope
testl
xlat
cmpsb
ja
daa
aaa
stos
cwtl
inc
loopne
js
jns
rol
push
dec
rolb
imul
cli
popf
inc
orl
fcoml
out
and
jae
mov
push
jae
or
push
sub
mov
pop
xchg
jno
or
jbe
pushf
pop
jle
mov
out
mov
mov
inc
pop
mov
jne
ror
or
dec
pop
inc
mov
cmpsb
outsl
xchg
into
repz
mov
in
push
or
jle
push
and
leave
std
int3
repnz
push
push
mov
cmc
fildl
jo
data16
out
int
mov
mov
mov
pop
movsb
inc
movsl
xchg
ds
cld
ljmp
fcomi
mov
dec
push
aad
and
and
xor
push
scas
or
in
mov
dec
jmp
scas
jp
jbe
insl
or
add
stos
es
rolb
or
adc
fdivrs
test
mov
xor
dec
out
xchg
pop
in
jbe
pop
test
test
or
add
adcl
adc
and
jl
mov
add
repnz
jo
sub
xchg
ret
mov
test
sti
jecxz
sbb
mov
jne
insb
push
and
lret
adc
dec
pop
sub
adc
fbstp
mov
cwtl
cltd
adc
inc
lods
push
aad
xor
icebp
cmp
sub
sysret
mov
test
mov
inc
leave
jmp
and
jmp
add
outsl
adc
lret
pop
xchg
int3
rcrl
mov
sbbl
mov
ljmp
xlat
push
xchg
cmpsl
popf
hlt
and
and
mov
and
sub
imul
out
ret
add
jg
mov
movl
add
mov
mov
mov
cli
dec
adc
dec
mov
jb
fmul
gs
adcb
push
mov
and
pop
pop
lcall
aad
inc
test
imul
enter
push
or
pop
pop
ficoms
add
adc
mov
cwtl
mov
lds
xor
cmp
xor
int3
inc
pop
aas
call
sbb
pop
push
push
or
loopne
adc
mov
sbb
jl
adc
cmpsl
loope
aad
push
mov
cmp
add
and
pop
and
jns
test
sbb
mov
in
out
fsubs
shl
scas
in
cld
or
es
inc
cli
in
xchg
data16
mov
pop
cmp
gs
mov
cmp
jae
sbb
outsb
xchg
imul
rclb
dec
stos
push
repnz
cmpsb
sub
jnp
sahf
lods
cmp
xor
sub
sub
subl
sub
dec
sub
pop
mov
inc
clc
or
fs
cld
in
das
insb
lret
shrl
cli
mov
cmp
cmpsb
and
mov
push
adc
aam
into
cmp
addr16
clc
data16
jne
inc
icebp
xor
stc
cld
bnd
jno
js
cwtl
test
push
leave
imul
mov
xchg
das
sub
dec
cmc
out
aad
cmpl
or
mov
into
pop
mov
jnp
ljmp
test
leave
and
push
xor
dec
sbb
cmc
xchg
jno
mov
out
imul
fstpt
pop
fistpl
out
mov
scas
cmp
loope
sub
iret
mov
mov
pop
xlat
cmpsb
cs
shr
inc
cwtl
lret
and
hlt
mov
add
mov
cmp
repnz
shl
add
dec
cmpsb
mov
push
jmp
lcall
dec
int3
movsb
insb
sbb
mov
mov
das
add
pop
jns
xchg
inc
dec
into
or
repz
lock
add
push
fsubr
and
push
mov
lahf
pop
pushf
lods
mov
mov
stc
or
das
mov
sbb
movsb
frstor
mov
xchg
in
std
loope
push
jp
add
xor
imull
icebp
das
inc
loopne
and
inc
jge
out
subl
inc
pop
and
fistps
adc
out
pop
loopne
popa
lods
stos
push
push
addr16
imul
cwtl
mov
in
test
andb
push
aam
out
jno
ret
or
out
into
jno
xchg
pop
iret
icebp
setp
mov
out
or
fcmovu
rcrl
jp
outsb
xor
test
addr16
inc
inc
das
shlb
orb
in
testl
xor
insb
pusha
xor
arpl
test
mov
sbb
cmpsl
mov
aas
int
addr16
inc
push
or
inc
out
and
sbb
mov
or
push
sbb
xor
ja
lret
mov
mov
cmpsb
inc
loopne
sub
inc
lret
jg
shlb
cmp
push
pop
fcoml
cmp
addb
movsl
mov
arpl
mov
arpl
and
bound
mov
push
xor
loop
mov
lahf
aaa
aad
jo
jge
mov
jmp
sub
popa
pop
hlt
out
cmpsl
mov
pop
adc
divl
adc
pop
mov
jno
les
inc
lcall
inc
in
jl
imul
cmpb
xor
int3
adc
lret
push
addl
sbb
cmp
inc
jnp
xor
cmpb
cmp
adcl
ficomps
lret
rcl
int
mov
cltd
mov
xor
xor
fisubrs
jp
les
inc
sbb
sbb
dec
ljmp
ja
push
or
aad
mov
mov
sub
dec
sub
xchg
add
and
pop
dec
cmc
fmulp
cmp
cltd
mov
test
xchg
call
stos
gs
mov
adc
cmpsl
cmp
into
sahf
inc
adc
fstl
mov
leave
in
mov
inc
movsl
push
stc
aas
sub
rcrl
sub
dec
jb
sbb
adc
imul
cmp
xchg
cwtl
dec
mov
mov
mov
mov
fstl
inc
jno
jb
out
mov
js
pusha
fyl2xp1
sub
mov
les
adc
cmp
movsl
lcall
add
nop
lcall
push
inc
fs
push
movsb
push
std
pop
fisubrl
shll
and
dec
mov
or
mov
jb
cmpsl
lds
push
out
nop
out
adcl
lret
mov
lahf
cmpsb
push
push
push
iret
sbb
add
hlt
fisubrs
clc
push
mov
sbb
mov
sub
and
ds
into
lret
xchg
shrl
xchg
loop
cmp
push
cld
pop
cltd
pusha
and
hlt
xchg
xchg
add
push
cmp
in
mov
xchg
shlb
les
repnz
jno
andb
ret
mov
adc
inc
imul
xor
sub
mov
adc
push
fwait
bnd
lea
xor
int3
outsb
insl
or
xbegin
lods
imul
roll
xchg
rol
scas
cmp
subl
fiaddl
add
addr16
jns
rep
mov
data16
jbe
and
cmp
fs
add
mov
and
xchg
rcrb
shrl
xchg
pop
mov
xchg
add
inc
es
ja
out
xchg
lret
fistps
in
das
cwtl
inc
sub
lret
cmc
mov
adc
call
push
sub
xlat
pop
inc
lret
xor
dec
fisubl
sub
cmp
leave
lock
cmp
stos
mov
cs
ss
pop
inc
stos
outsb
pop
adc
mov
xchg
mov
loope
aas
cmp
test
sub
adc
ret
push
insl
sti
push
pop
xchg
lahf
jb
test
xchg
add
dec
stc
and
dec
pop
push
pop
add
dec
test
xor
sti
mov
aam
mov
icebp
adc
dec
sbbb
add
xchg
sar
cs
fistpll
loope
jnp
daa
mov
and
fistpl
lock
or
inc
pop
jge
mov
mov
cltd
ja
mov
repnz
and
mov
sti
cld
xor
mov
push
cmp
cmp
lods
jns
jo
adc
sbb
lock
outsl
aad
ljmp
sub
dec
stos
call
dec
push
mov
mov
rolb
gs
inc
push
arpl
cmpsl
xchg
dec
inc
jmp
add
jmp
pusha
mov
movsb
sub
bound
jae
movl
dec
in
or
mov
adc
xchg
int3
ret
push
in
mov
pushf
aas
inc
xchg
inc
shl
dec
mov
xchg
xor
aaa
popa
jb
adc
mov
iret
std
inc
jmp
incb
aad
add
pushw
lret
cmpsb
data16
dec
aam
dec
inc
mov
int
or
sbb
daa
dec
outsl
jp
fcomps
cmp
push
xor
cltd
push
rolb
repnz
or
cli
insb
out
out
sub
jb
push
jg
ficomps
enter
pop
push
cmp
cmp
lods
imul
sbb
jmp
or
popf
and
in
popf
mov
push
push
jns
fstps
or
sbb
mov
inc
sbb
imul
or
cmp
mov
mov
pop
jbe
sub
and
lds
ss
or
in
pushf
add
subb
jae
in
pop
sbb
lret
movsl
pop
push
dec
sahf
lock
inc
jge
inc
inc
arpl
fwait
sarb
or
roll
inc
dec
or
das
fisttpll
adc
or
inc
push
cmpsb
sbb
dec
out
fstps
mov
dec
lahf
adc
xor
mov
dec
shlb
add
or
aas
mov
dec
dec
and
hlt
push
adc
cltd
call
inc
icebp
test
aam
in
mov
es
and
or
cmp
mov
hlt
pusha
jle
lea
inc
pop
push
xor
fsub
pop
sbb
xchg
mov
mov
mov
xor
xchg
pmaxub
sbb
add
icebp
and
inc
in
adc
lods
dec
stc
mov
test
repz
notl
movsl
daa
movsb
pop
movsl
pop
aam
jecxz
cmp
push
cli
sub
pusha
add
ds
jmp
mov
push
nop
ss
fdivrp
imul
in
aaa
mov
cwtl
ret
pop
ret
or
fwait
push
sub
and
lahf
pusha
repnz
mov
dec
xchg
sub
sub
pushf
mov
shrb
adc
sbb
ljmp
js
adc
fdivs
pushf
jp
notb
sbb
pop
or
cmpsl
sbbl
mov
jecxz
xchg
mov
cmpsl
das
daa
xchg
mov
in
xor
dec
mov
and
cwtl
or
or
push
pop
pop
out
aam
push
lahf
pushf
out
pop
nop
cmp
shlb
pusha
les
pop
cli
adc
into
push
repnz
or
pop
iret
push
dec
mov
push
xor
ljmp
cmp
cmp
dec
lea
sbb
jg
movsb
mov
mov
inc
xor
ljmp
xor
mov
sbb
xchg
mov
aad
incl
dec
icebp
cwtl
mov
mov
subb
add
sti
nopl
daa
xor
data16
lds
lcall
xchg
shrb
leave
xor
sbb
call
ja
mov
mov
scas
mov
das
xchg
ja
add
inc
mov
jp
mov
fldenv
xchg
pushf
sbb
dec
xchg
fimull
pushf
sub
mov
jns
sbb
popa
lret
int
scas
push
notb
adc
pop
cmp
cmpsl
push
jb
popf
out
les
mov
jb
sub
out
xchg
hlt
sbb
fnstsw
push
insb
loope,pn
stos
call
cmp
in
cwtl
ljmp
insb
lcall
outsb
stos
stos
rcrl
aaa
fsubrl
xchg
pushl
dec
add
mov
mov
pop
loopne
xchg
pop
stos
data16
dec
fdivp
mov
in
movsb
sbb
mov
mov
pop
rolb
adcl
in
cmp
lret
fldlg2
xchg
jmp
add
add
sahf
xlat
sbb
std
movb
pop
sbb
or
xchg
rclb
ja
scas
add
pop
mov
popf
mov
cltd
sar
mov
xor
jg
sub
jbe
jle
fdivl
push
and
call
icebp
fs
arpl
iret
lret
outsl
pop
loopne
mov
or
test
sub
jne
or
mov
mov
out
cmp
push
aam
mov
gs
cmpsl
outsl
lea
gs
pop
or
xor
lret
xor
or
sub
add
mov
fmull
fsubrl
ret
in
fwait
aam
movsb
ficoms
in
gs
cmpsb
lods
sub
orb
std
sub
stc
int
ret
nop
repnz
sub
adc
jmp
es
cmc
inc
pop
add
xchg
das
mov
and
cmp
fisttps
fidivrs
mov
iret
popf
das
jmp
ja
xor
inc
fldl
push
or
push
sub
outsl
fcomip
pop
jo
les
dec
int3
sbb
mov
lds
push
xor
jp
dec
push
cmp
fldl
scas
leave
fwait
popf
jo
dec
push
mov
repz
data16
and
scas
fcomip
mov
or
lods
je
fiaddl
push
jmp
sbbb
sti
icebp
cmp
lea
pop
cltd
ss
bound
pop
lret
xor
push
xor
leave
lahf
xor
xadd
in
cwtl
ljmp
cmp
sub
adc
rolb
dec
mov
sbb
gs
or
xor
lret
jecxz
ud1
jns
pop
gs
repz
inc
dec
jmp
lss
js
call
mov
enter
ljmp
cmp
es
jnp
jle
jle
lea
in
adc
adc
fwait
jo
stos
jno
fxch
arpl
and
std
fwait
rorb
jb
jecxz
das
dec
lea
inc
xchg
or
mov
add
cmp
fnstenv
addr16
pop
push
sbb
adc
repnz
add
xchg
dec
jbe
pop
enter
and
fsubrs
icebp
or
pop
call
iret
bound
pop
sahf
loop
jle
aaa
stos
outsb
hlt
subl
mov
sbb
pop
or
aaa
pop
ljmp
pop
inc
dec
loope
push
xchg
and
ja
or
loopne
sbb
movl
aad
lea
or
and
aam
pop
adc
lods
mov
add
pop
xchg
clc
into
stos
xor
pop
mov
pop
je
fists
cmp
cli
pop
ret
movsl
ds
cmp
cmp
shll
neg
xor
je
into
into
gs
test
es
adcl
and
xchg
add
rorb
mov
sub
fiadds
popa
xor
in
inc
popf
adc
in
stos
je
insb
sbb
adc
aas
loopne
inc
mov
sub
cmc
cs
shlb
in
jmp
test
inc
ret
xor
inc
mov
jnp
loop
cltd
test
out
das
pop
cmp
in
sub
shll
xchg
test
jae
stos
int3
repnz
insl
pop
int3
and
mov
sub
out
and
std
or
push
enter
mov
dec
mov
mov
je
fdivp
bound
out
lods
inc
sti
lods
push
fadd
adc
arpl
lds
out
push
pop
jge
subl
sbb
loop
cmp
pop
jg
lahf
push
add
push
adc
and
push
cmp
sub
inc
xchg
xor
xor
pushf
mov
inc
pop
mov
add
aas
scas
lds
lret
out
popa
jo
test
arpl
sahf
testl
inc
es
data16
int3
test
push
lock
mov
lods
aad
pop
mov
inc
repz
outsb
movsb
test
mov
push
test
mov
jg
push
ljmp
sub
je
mov
imull
addr16
jae
shll
fisubl
cmpsb
outsb
push
ret
aad
out
jl
xor
cli
xchg
xchg
mov
stos
int3
inc
push
pop
mov
and
jnp
dec
jge
loopne
cld
outsb
mov
cmpsl
xchg
sbb
jle
xchg
mov
pop
push
addr16
je
cmpsb
fwait
push
fwait
stos
dec
enter
loopne
iret
pop
push
out
lock
mov
sbb
add
sub
dec
sub
jl
lret
sub
fwait
test
push
push
lret
and
cmp
cmpb
in
arpl
sub
jge
add
decb
pop
lret
je
pop
xor
mov
cs
fisubrs
repnz
mov
aad
scas
data16
fdivs
lret
fcomp
das
xchg
pop
into
dec
jbe
jnp
mov
mov
lea
adc
mov
sarb
xchg
ljmp
rcr
lret
inc
jno
roll
inc
mov
pop
pop
cld
mov
add
les
fnstcw
sahf
add
pop
and
notb
inc
xchg
ss
mov
sbb
or
dec
push
pop
push
lods
push
dec
sub
stos
int3
xor
in
or
inc
pop
in
ja
repnz
jmp
std
insb
mov
jecxz
or
stos
sub
movsb
out
adc
scas
int3
je
sub
addr16
adc
xor
gs
vsqrtps
int
scas
cmp
push
jbe
aad
dec
xlat
subl
aaa
push
orl
mov
mov
adc
pusha
repz
sub
pop
cmp
sahf
mov
add
lods
xlat
push
push
jbe
xor
imul
or
out
pop
inc
and
push
lock
push
mov
fldcw
push
adc
cmp
rcll
enter
jno
pusha
sbb
mov
insl
aas
ja
mov
test
cmp
arpl
add
out
pop
push
stc
sahf
mov
bound
jno
push
lods
je
leave
popf
jnp
fldcw
es
push
cmc
jns
fcoml
cli
jo
pusha
and
aaa
jo
aad
pop
dec
mov
sub
movsb
mov
xchg
cmp
pop
addr16
push
dec
mov
jmp
nop
std
add
stos
add
mov
adc
xchg
inc
add
sbb
shlb
ret
lahf
outsb
mov
push
or
xor
mov
jmp
dec
adc
sbb
xor
int3
push
mov
and
test
pop
imul
jecxz
bound
push
sarb
pop
fnsave
sbb
hlt
jle
sub
add
out
mov
int3
dec
cmp
mov
cmp
call
aaa
es
dec
mov
sbb
fdivl
push
push
add
inc
jo
pop
popf
sbb
push
lahf
or
cmp
jl
frstor
mov
shlb
loopne
pop
dec
loopne
xchg
es
aad
ret
sub
imul
shrl
shr
mov
sbb
xchg
adc
in
xor
and
push
out
shlb
pusha
jge
cs
mov
mov
imul
cmc
popl
and
jecxz
xor
inc
dec
pop
lods
enter
xorl
cmpsl
test
pusha
cld
cs
loop
or
fidivrl
sbb
add
xor
sub
ja
arpl
jo
push
clc
cmp
roll
adc
arpl
sub
xor
jle
ds
inc
imul
out
leave
cmp
mov
stos
subb
jl
pop
daa
xchg
lock
xor
adc
repz
int
fs
cmp
adc
pop
mov
nop
sbb
xor
mov
cmp
mov
insb
ja
in
dec
pop
lods
add
add
addr16
jno
sbb
in
es
xchg
pop
xchg
xchg
mov
add
div
lds
jns
ja
hlt
pop
and
sub
flds
movsl
lret
je
xchg
inc
aaa
xor
pop
mov
add
neg
sahf
cmpsb
xchg
sbb
lock
sbb
aam
mov
std
or
add
test
ss
sbbb
lea
popa
stc
imul
push
fwait
aad
or
mov
into
cli
sbb
arpl
xchg
hlt
imul
mov
cmp
mov
pop
setg
jb
sub
scas
stos
or
pop
cmp
inc
jnp
sbb
das
cmp
lock
cmpsb
mov
xor
pop
int3
sbb
add
jg
jge
test
jle
dec
ja
push
dec
push
cmp
push
fdivs
rol
pop
pop
mov
fs
mov
lcall
pop
fs
aad
call
add
jp
cmp
dec
cld
lods
mov
pop
and
popf
xbegin
cs
les
pop
sahf
mov
test
inc
mov
sbb
fdivrs
add
loop
push
push
mov
xchg
cmp
out
sahf
aaa
dec
pop
testl
inc
mov
test
push
test
cmp
pop
pop
and
push
jne
cmp
push
popa
repz
aad
stos
sub
pop
mov
push
xchg
mov
push
add
stos
call
shlb
jae
mov
sbb
in
sub
and
clc
cld
pop
out
mov
mov
jecxz
mov
cltd
xchg
and
add
and
mov
hlt
fcomip
hlt
lret
and
hlt
dec
sbb
xchg
inc
push
stos
and
xchg
push
frstor
mov
and
inc
repnz
push
aas
pop
mov
cmp
mov
jns
xor
gs
add
lds
cwtl
pop
push
mov
arpl
pop
mov
out
ret
cwtl
xchg
test
add
stc
aam
xchg
fcoms
lock
xchg
mov
or
test
or
jl
ret
pop
ret
sub
ficomps
es
xor
mov
andl
into
push
dec
adc
mov
pop
and
addr16
adcl
pop
jo
adc
push
das
and
push
lahf
jecxz
loop
jp
pusha
push
sub
cmp
mov
ret
add
fst
inc
iret
les
pop
pop
mov
mov
mulb
add
adc
fbstp
fcmovnu
jne
shlb
rcr
jae
filds
xlat
mov
pop
rcrl
sub
jo
or
mov
stc
mov
cmp
fmulp
xchg
xchg
dec
cmp
jp
aas
pop
inc
sub
mul
insl
mov
push
pop
xchg
xor
xor
and
mov
inc
xchg
lret
sub
dec
rcrb
mov
ret
outsb
insl
mov
imul
xor
nop
cmp
dec
in
push
ret
dec
imul
adc
pop
nop
push
test
ja
out
pop
pop
push
and
fsts
hlt
mov
push
call
into
sahf
and
and
inc
enter
pop
lret
sub
out
popa
lods
mov
mov
mov
int3
pusha
jns
nop
movsb
mov
cld
lods
sbb
pop
lods
sub
xor
jmp
mov
fwait
pushf
xchg
push
lods
mov
xor
adc
mov
data16
cmpsl
arpl
test
ficomps
dec
call
int3
ficomps
adc
inc
fstl
pop
push
xor
adc
call
cmp
fnsave
xor
rorb
out
push
mov
lods
out
mov
and
test
shl
in
pop
imul
mov
xor
or
sar
lds
push
aaa
push
xchg
sbb
and
mov
fst
lock
mov
dec
and
cltd
cmp
push
rolb
sti
ljmp
xor
std
movb
fcoml
add
mov
orl
sbb
xchg
ja
inc
add
pushf
mov
sub
std
hlt
nop
call
mov
insb
inc
aam
push
stos
sbb
not
mov
xor
movl
sub
das
xchg
ret
in
sti
push
sbb
xchg
xor
fbld
xchg
cltd
jbe
inc
xor
jae
xchg
ljmp
orb
movsb
xor
pop
outsb
pushf
jns
add
mov
pop
cmpsl
cwtl
rcr
loope
imul
sub
lods
jecxz
inc
jae
jle
sub
cld
pop
or
xor
sub
cmp
inc
push
jecxz
mov
mov
fwait
dec
mov
pop
imul
lock
and
repnz
insb
push
xchg
dec
dec
dec
iret
push
mov
mov
push
add
movsb
pop
jns
lcall
leave
add
xchg
icebp
repnz
push
add
out
inc
and
mov
cwtl
sbb
push
inc
shl
xchg
push
dec
sub
mov
test
and
add
fldt
je
inc
scas
push
scas
adc
out
inc
mov
lret
inc
aam
jnp
cmp
xor
ffreep
lea
jmp
inc
das
sub
jge
xlat
ja
popa
and
xchg
mov
jbe
mov
pop
cmp
sbb
loopne
popf
mov
mov
and
dec
pop
shl
int
js
pop
leave
dec
or
jg
mov
repnz
xor
fistpll
pop
pop
xchg
mov
cmp
mov
stos
jmp
sub
rcll
dec
sbbl
jnp
scas
ja
push
das
xchg
push
loop
pop
rorl
rorl
in
mov
cmp
or
xchg
add
notl
leave
mov
mov
insb
push
pop
imul
addr16
cmp
pop
sbb
push
shl
jl
and
jecxz
scas
xchg
lcall
popa
mov
fstpt
add
xchg
mov
xor
js
lods
lret
out
mov
inc
insb
shr
mov
std
or
popl
movsb
sub
pop
lret
sub
dec
repz
inc
inc
mov
push
enter
dec
push
xor
sub
test
or
loop
inc
add
mov
mov
xchg
mov
sbb
jo
sbb
ret
lret
add
pop
lcall
and
loopne
test
mov
ltr
les
or
les
inc
out
adc
adc
pop
outsl
xchg
sbb
bound
jno
mov
ret
push
adc
ret
and
jno
mov
dec
cmp
sub
add
xchg
sbb
lret
or
pusha
pop
add
lock
lret
push
iret
sub
loop
mov
mov
adc
mov
mov
and
addb
fimull
imul
sbb
jecxz
pop
mov
push
cld
test
iret
ljmp
daa
mov
cld
kmovw
pusha
sub
push
adc
sub
ror
mov
popf
xchg
mov
mov
lcall
lret
pop
ret
outsl
imul
imul
sbb
stos
lret
sbb
pop
or
jne
pushaw
sarl
push
bound
les
int
daa
mov
adc
mov
dec
mov
jnp
pop
inc
int3
sbb
lcall
rcr
sbb
test
jo
cltd
je
ret
bound
jp
dec
notl
sahf
scas
jmp
fstps
pop
or
pop
add
and
stc
mov
in
jae
jno
fsubs
mov
lods
push
pop
inc
lahf
xchg
or
push
xchg
adc
ret
mov
pushf
in
adc
sbb
fiadds
push
loopne
inc
out
nop
cli
push
in
adc
jno
pop
shlb
shr
sub
popf
jns
stos
jmp
dec
aas
in
pop
pop
jae
pop
ljmp
xor
mov
cmpsl
and
or
fistl
or
out
and
mov
fcomps
mov
insb
push
mov
push
mov
or
je
shr
xchg
mov
lds
js
dec
mov
inc
add
mov
loope
jno
imul
mov
lods
mov
fidivrl
mov
rolb
cmp
fdivrs
mov
adc
dec
out
std
call
cli
sar
and
mov
cmp
mov
lea
lret
ds
aam
mov
clc
jae
insl
sub
aam
sbb
mov
jecxz
iret
fcmovnb
inc
cmpsl
iret
xchg
and
dec
cli
in
xchg
add
fdivs
dec
movsb
and
dec
mov
out
push
in
or
mul
inc
mov
rcr
or
mov
push
xorl
aaa
push
jo
push
push
cmp
out
cltd
dec
test
inc
jns
in
aad
hlt
adc
pop
mov
mov
filds
out
xchg
add
xlat
adc
out
addr16
sbb
pop
fildll
pop
je
mov
data16
insb
cltd
inc
bound
lcall
out
mov
popa
and
ret
and
outsl
iret
sbb
popa
push
sub
mov
out
or
pop
pop
xchg
push
push
jge
mov
lods
or
mov
fucom
and
cli
jl
add
xor
lock
stos
or
cmc
popa
imul
test
cmp
bound
bound
push
mov
mov
pop
lods
jecxz
pop
mov
jecxz
jae
and
lods
pcmpeqd
mov
dec
int
lea
jmp
pop
movhps
push
negl
ljmp
lods
add
adc
cmp
sarl
cmp
and
notl
jl
ja
sbb
aas
and
adc
jbe
das
cmp
hlt
rolb
jmp
loope
push
mov
mov
lods
test
cmp
mov
imulb
add
push
xchg
test
cli
daa
cld
or
push
fnstsw
dec
scas
xor
xchg
roll
or
pop
xchg
lds
int
js
pop
mov
ficomps
cmpsb
cmp
mov
cli
enter
imul
cld
hlt
enter
add
lcall
bound
js
sahf
sub
sbb
shl
or
ja
fisubrs
jno
loope
xlat
cs
sbb
inc
js
pop
mov
xchg
inc
adc
inc
sbb
outsb
sbb
pushf
notl
mov
adc
sbb
dec
dec
add
fsubrs
jmp
out
sub
ret
or
or
xchg
int3
push
sbb
sub
lds
fisubs
mov
dec
fsubrs
pop
adc
pop
arpl
xchg
or
mov
icebp
mov
test
mov
into
jl
imul
mov
xchg
in
mov
push
setg
jmp
adcb
pop
cs
call
ljmp
movsb
xor
add
dec
fmull
xchg
mov
jmp
sub
push
iret
sbb
add
arpl
imul
add
mov
mov
test
xchg
mov
push
pop
mov
mov
push
ret
add
push
pushf
mov
push
dec
mov
sti
xor
add
out
dec
push
mov
shl
in
jne
and
mov
mov
add
inc
push
gs
mov
xlat
lahf
push
push
sti
cmpl
mov
inc
test
cmp
adcb
or
popf
xchg
gs
sarb
dec
adc
jnp
imul
sarb
enter
mov
cli
loope
jo
push
cmp
jmp
imull
adc
jge
inc
and
ljmp
push
pop
and
ret
pop
fucomp
idiv
sub
das
sbbl
outsl
and
outsl
out
fdivrl
data16
or
mov
stc
inc
pop
por
sub
pop
sbb
add
lds
das
dec
xchg
sub
out
jecxz
sub
pop
dec
mov
mov
div
mov
mov
cmpsl
jo
rcll
mov
inc
xor
loopne
test
lret
mov
fisubs
dec
pushf
cmp
cwtl
fimuls
inc
or
mov
pop
gs
mov
gs
out
mov
scas
sbb
or
inc
rol
es
int3
xor
cmp
int3
sub
sbb
lds
lods
sbb
adc
loopne
adc
int
cmp
aad
test
cmp
mov
and
pop
test
jg
clc
divl
adc
rolw
les
aad
stc
int3
imul
fsubrs
cmp
fwait
and
arpl
mov
pop
clc
nop
fwait
ret
insb
sub
mov
data16
addb
inc
dec
arpl
pop
cmp
aaa
add
pusha
xor
push
int3
pop
mov
test
sub
mov
loope
stos
leave
aad
pop
inc
xor
jecxz
loopne
xchg
jle
mov
lahf
sbb
dec
outsl
loopne
dec
sbb
mov
adc
gs
daa
mov
fdivrl
jb
lock
sti
out
xlat
in
lret
add
leave
popa
icebp
xor
iret
jno
outsl
lods
cwtl
xchg
jp
out
movsb
sub
fisttps
test
mov
stc
imul
push
adc
sarb
in
ljmp
shlb
jge
dec
mov
pushf
cli
rcrl
add
push
mov
inc
adc
and
adc
add
xchg
mov
outsb
lods
insb
orb
add
push
dec
stc
xchg
imul
test
rolb
stos
icebp
inc
sub
jmp
mov
movsl
fstp
test
cld
xlat
pop
cs
inc
jp
inc
and
icebp
into
and
and
adc
test
dec
stos
mov
popa
and
and
imul
sti
in
cs
adc
int3
test
push
lret
mov
dec
xchg
dec
push
lods
push
pop
in
lcall
testl
in
enter
pop
inc
imul
ret
fsubl
fldln2
imul
clc
pusha
in
cmp
or
sbb
in
xor
enter
repnz
xchg
mov
sub
and
xchg
jo
lock
dec
sub
sbb
rcrl
bound
jecxz
adc
aaa
lods
jecxz
insl
imul
inc
enter
pop
add
pushl
arpl
pop
push
jge
hlt
cmp
cmp
add
push
cmpsb
push
push
ret
pop
imul
inc
mov
jmp
cmp
aas
xor
mov
aad
gs
xchg
in
mov
adc
aam
pop
xchg
mov
add
inc
imul
jns
add
push
icebp
cmp
xor
or
jle
lods
es
mov
fcmovnbe
int
cld
cmp
test
mov
iret
je
movsl
sbb
inc
xchg
test
dec
rorb
stc
addr16
insb
ret
jge
pop
cwtl
and
sahf
dec
filds
lar
and
mov
clc
or
lcall
out
jl
mov
jne
rorl
les
mov
jge
test
push
jmp
cld
in
inc
cld
push
movsl
out
popf
mov
push
sbb
jecxz
shlb
arpl
addb
popf
xor
jb
mov
call
xor
cmp
out
in
int
scas
mov
sbb
cld
sub
jmp
push
jb
jl
push
movsb
int
mov
popa
jnp
or
jecxz
mov
sbb
clc
clc
es
mov
sbb
pop
sub
cmpsb
sahf
dec
sbb
lret
or
test
sbb
dec
inc
adc
or
jmp
inc
pusha
sub
cmpsb
sub
outsb
ret
inc
call
stc
xchg
inc
mov
and
add
gs
popf
add
xor
pop
outsb
add
pop
stos
jnp
int
mov
pushf
ja
dec
xchg
repz
pop
pop
imulb
jbe
inc
aaa
out
inc
jg
adc
pop
lods
adc
sbb
ljmp
aas
repz
icebp
push
jae
scas
jae
sbb
sub
iret
jmp
add
inc
ret
imul
mov
test
out
mov
mov
jno
sahf
push
sub
adc
cmp
pop
sarb
in
lahf
xor
push
sbb
cltd
fdivrl
pop
jl
mov
sub
adc
add
mov
mov
test
cwtl
repz
sahf
ljmp
push
aam
jo
pop
mov
dec
rcll
test
mov
insl
mov
add
repnz
out
stos
push
xchg
sbb
ret
lods
mov
popa
jecxz
mov
and
add
loop
push
scas
jmp
neg
lcall
lea
xchg
loope
push
mov
lcall
ja
js
jmp
pushf
xorb
and
or
rcll
lea
add
cmp
xchg
mov
push
lcall
push
lods
rol
or
sbb
push
scas
sub
leave
mov
jo
dec
add
and
mov
loope
shrl
fistl
jae
sbb
sahf
ficomps
jge
mov
cmp
loop
aam
popf
imul
push
cmpsl
sub
dec
jno
cmp
push
stc
fistpl
adc
stos
or
lods
cmp
push
xor
repnz
in
pop
in
push
and
add
push
add
push
loope
fdivp
dec
mov
dec
les
int
ss
push
mov
add
inc
fucom
scas
mov
xor
xchg
push
or
or
mov
jmp
imul
add
mov
mov
cmp
pop
mov
loope
and
lahf
mov
jae
mov
inc
cmpsl
mov
enter
data16
adc
mov
jne
push
and
xor
dec
loopne
pusha
pop
aas
add
pop
aad
jp
push
lock
sub
rep
and
add
cmpsl
in
mov
cmpsw
addr16
mov
pop
push
mov
shll
cs
scas
mov
mov
stos
scas
scas
addr16
pusha
test
pop
popa
ds
fdivs
jg
mov
push
int
mov
xchg
sbb
or
test
rorl
cmpsl
sbb
lea
push
data16
out
push
mov
insl
fnstsw
jae
lds
and
pop
jb
hlt
jmp
mov
fcmovnbe
push
out
pause
int3
mov
fstpl
jle
fcoml
push
sub
inc
pop
fistl
xchg
xchg
in
sarl
insb
cmp
dec
testb
notl
imul
and
daa
dec
mov
enter
das
adc
orl
pop
scas
mov
mov
xchg
bnd
sbb
pop
sub
jns
sahf
mov
xchg
pop
mov
jecxz
out
fcomps
ss
adc
imul
pop
or
adc
and
nop
lods
fwait
push
mov
mov
jmp
mov
push
xchg
shr
sti
es
jl
insb
aas
lds
ja
stc
fists
frstpm(287
jg
xchg
add
stos
repnz
jo
and
fistl
cld
inc
jo
or
popf
inc
addr16
dec
push
in
or
mov
out
ds
xor
scas
push
mov
xchg
aas
rcrl
insb
std
adc
movsb
lds
push
mov
test
jbe
mov
push
sbb
test
sub
cwtl
gs
jno
pop
pop
mov
stos
ds
stc
pop
repnz
push
sub
jle
xor
cli
mov
xor
dec
jmp
test
insb
stos
lea
add
gs
xor
rcrb
and
test
mov
sarb
lret
cmc
outsb
out
mov
mov
jmp
fildll
cmovge
pusha
xchg
aam
aam
sahf
pushf
xchg
jnp
iret
mov
ds
loop
or
push
movsb
lcall
xor
je
addl
jge
adc
add
dec
jbe
xor
in
inc
mov
mov
xchg
mov
push
and
adc
jno
pop
jecxz
push
adc
cmpsl
add
mov
adc
add
lret
add
add
mov
loop
loop
mov
cmp
sbb
add
pushf
ds
loop
js
fcmovnb
and
ljmp
les
inc
call
popf
dec
idivb
stos
mov
loope
cs
sub
sbb
adc
cmpsl
fildl
scas
pop
in
fsubs
gs
loop
push
fstpl
xlat
and
fcoms
cmp
stc
ljmp
mov
mov
and
sub
les
xchg
mov
out
xor
aam
pop
dec
xor
loop
cltd
stos
pop
adcl
shlb
repnz
mov
push
data16
pusha
icebp
pop
into
push
mov
ja
and
xor
jge
inc
xor
mov
xor
sbb
or
in
jge
mov
fidivrs
sub
jecxz
xchg
jo
xchg
ss
scas
ret
sbbb
test
jnp
mov
inc
ficomps
add
push
and
add
iret
sbb
aaa
jnp
sahf
test
mov
out
push
xchg
and
or
xchg
fdivs
stos
mov
shl
jnp
cltd
or
add
fidivrl
jnp
pop
lret
jecxz
add
out
imul
adc
push
xchg
and
cmp
dec
lods
out
add
xchg
jle
filds
fbstp
ja
xor
scas
out
gs
inc
xchg
lret
lea
rolb
call
into
sub
sahf
add
jle
ficompl
jnp
iret
sub
lds
xchg
cli
pop
bound
aam
push
xlat
cmc
adc
data16
loope
out
xor
jb
jno
lret
dec
sbb
cmp
mov
xor
mov
sbb
icebp
mov
in
nop
lea
sti
test
addr16
repnz
xchg
jno
outsl
imull
rcll
jmp
push
std
mov
fs
push
jmp
das
outsl
pop
mov
lock
cwtl
aaa
scas
fs
xor
enter
cmpl
loope
roll
fldenv
xchg
push
hlt
gs
icebp
clc
pop
jne
dec
int
cwtl
pop
jp
mov
push
jle
inc
out
push
inc
push
in
stc
push
mov
dec
adcb
xor
mov
and
aad
xor
repnz
push
test
imul
fcompl
mov
push
xchg
jae
movsl
gs
aas
pushf
leave
adc
mov
loop
nop
add
insb
sbb
dec
pop
sbb
loop
mov
inc
push
add
or
cmp
imull
sub
pushf
jg
push
loopne
xchg
xchg
mov
aam
ljmp
xor
push
orl
push
mov
unpckhps
jnp
jecxz
jae
pusha
aam
loop
fdivr
lcall
adc
dec
pop
repnz
cmp
dec
mov
dec
iret
mov
shrl
aaa
or
xchg
mov
mov
sbb
sub
jbe
push
adc
cwtl
je
mov
add
mov
scas
cmp
leave
mov
mov
add
je
lods
cmp
mov
sub
jnp
dec
mov
hlt
in
les
idivl
xor
mov
xchg
test
jnp
push
repz
push
jno
add
sbbb
cmp
sbb
dec
or
popf
cli
and
and
shll
popf
pop
jp
mov
movsb
cmp
pop
mov
clc
lods
push
mov
cmp
je
enter
mov
sub
lcall
mov
dec
jmp
sub
es
in
nop
sub
inc
add
fwait
jge
pop
sbb
xor
xor
in
mov
inc
cmp
js
cmp
sub
jne
pop
dec
sub
jge
lea
das
sub
mov
jnp
mov
stos
pop
pop
ja
test
es
cmpsb
mov
shlb
iret
mov
aad
dec
addr16
cmp
inc
fstpl
pop
repz
cmp
lea
xor
aaa
in
aaa
fistps
pusha
fxch
loop
icebp
add
mov
xor
mov
xor
bt
aas
xor
xor
das
ds
popf
pusha
xor
arpl
nop
mov
dec
push
mov
lods
lea
fisubs
lret
xor
repz
pop
push
cmp
cmp
sub
fwait
push
sti
sbb
out
cmp
inc
mov
scas
and
dec
aad
xor
and
outsb
fildl
stc
rol
cwtl
xor
and
dec
xchg
push
imul
mov
andb
mov
and
mov
lods
inc
lret
in
ror
add
gs
adcl
repnz
data16
mov
iret
xorl
rol
jne
jb
sub
mov
mulb
es
movsb
xor
sub
cmp
rorl
or
add
xchg
xchg
out
dec
xor
xchg
cmpl
stos
adc
and
loopne
jbe
mov
push
sahf
dec
cmp
das
jo
mov
repnz
and
adc
roll
sti
xor
push
xlat
xor
push
add
sub
les
pop
jg
sub
or
mov
cmc
faddl
pop
clc
js
scas
push
push
lea
sub
inc
mov
pop
xchg
popa
adc
mov
cmc
cmpsl
sub
cltd
inc
mov
pusha
xorb
pop
adc
mov
rcll
stos
jge
lret
adc
in
or
addr16
add
sar
fldl
add
dec
call
mov
jp
flds
scas
nop
imull
rclb
cli
lock
push
loopne
mov
and
push
push
fists
fcmovnbe
lea
inc
sbb
daa
jnp
mov
scas
lea
push
fwait
out
lcall
sub
lea
dec
mov
shlb
mov
es
or
add
fs
sbb
mov
mov
nop
fwait
jmp
xor
lods
adc
dec
mov
bound
idivb
rcll
sbb
loope
clc
sahf
clc
or
mov
subb
adc
xor
enter
hlt
shrb
inc
adc
pop
ljmp
sti
mov
or
bound
dec
sbb
scas
cmp
mov
fstl
and
orl
shrl
sti
les
mov
inc
mov
lods
mov
dec
fsubrl
mov
test
inc
or
int3
sub
pop
ljmp
outsb
sarl
push
lahf
dec
je
xlat
dec
or
fistl
xor
test
jo
mov
rcrb
sbb
mov
xchg
inc
sbb
ret
loopne
push
dec
and
mov
jp
xchg
xor
or
mov
roll
fadds
ja
shll
sub
sub
add
mov
clc
mov
push
cmp
pushf
mov
fcmovnb
adc
in
xchg
ja
xor
bound
dec
pop
out
int3
inc
fcmovnb
orl
in
mov
cmpsl
xor
into
neg
xor
in
repz
dec
jne
andb
dec
push
inc
add
dec
out
enter
scas
data16
jbe
and
jo
pop
lock
inc
and
rolb
adc
rcr
fcoms
mov
clc
jmp
jo
xor
sahf
xchg
and
jp
ljmp
jno
cmp
aam
ja
jle
loope
dec
mov
cmp
inc
adc
cmp
adc
pop
cmpsb
sub
cld
inc
add
lahf
outsl
mov
stc
add
test
pop
dec
adc
cmp
int
loope
mov
imul
sbb
jbe
mov
xlat
stc
mov
mov
inc
inc
jp
mov
jecxz
sti
add
cmp
js
imul
jge
xchg
or
adc
rcrb
int3
les
xchg
in
daa
mov
jmp
gs
out
scas
cmc
sub
pop
mov
ljmp
pop
lahf
jp
or
push
dec
pop
cmp
push
insb
pop
insb
and
flds
and
mov
icebp
fs
sub
ret
jo
popa
popa
mov
xchg
mov
movsb
inc
mov
divl
cmp
js
mov
fmul
adc
sbb
push
mov
adc
mov
stos
sbb
push
pop
sub
into
mov
pop
pop
xchg
pusha
sbb
add
add
lock
test
out
dec
mov
add
test
enter
hlt
push
out
add
sahf
push
stos
push
mov
inc
js
jl
mov
enter
test
data16
xchg
inc
ds
cmpsl
jnp
rclb
xor
or
adc
iret
add
cld
sbb
jle
clc
lcall
inc
testb
mov
out
fmul
inc
hlt
mov
sub
test
pop
cmc
ret
jnp
pop
ja
adc
in
shl
inc
aam
pop
mov
xor
xchg
cmp
sub
push
inc
and
arpl
mov
mov
pop
out
xlat
pop
bound
cld
mov
test
lds
int
mov
insl
sti
jge
rcrb
scas
push
inc
push
out
add
mov
dec
jl
js
xchg
push
cmp
popf
pop
sbb
insb
sub
test
loope
xor
popf
test
addr16
adc
xor
mov
or
sub
stc
adc
and
inc
inc
push
mov
sub
mov
faddl
inc
sahf
and
mov
int3
xor
int3
and
pop
sar
jae
lds
or
fs
adc
dec
pop
call
cwtl
jns
inc
xchg
mov
mov
dec
cmp
imul
mov
sbbl
mov
clc
sub
mov
lret
xchg
in
and
lret
shrb
into
adc
jno
dec
decb
decb
fnsetpm(287
cmpsb
cltd
cmp
push
lret
int
pusha
cmp
xchg
adc
movsb
jl
std
and
jecxz
adc
stc
das
ja
mov
mov
ljmp
cmp
push
sbb
add
xorl
int3
addl
clc
and
aam
jmp
test
in
pop
mov
xchg
jb
push
pop
outsb
inc
pop
lahf
in
sarl
cld
jnp
shlb
dec
mov
sub
movsw
push
and
mov
cmpsb
and
sbb
mov
xor
rolb
and
outsb
int3
insl
icebp
sub
in
mov
adc
ja
cld
sahf
mov
sbb
fdivrl
mov
mov
lds
inc
int3
jg
xchg
jecxz
mov
mov
jge
jge
sbb
nop
or
mov
add
inc
mov
int3
jg
sbb
ret
mov
pop
sub
inc
push
sar
adc
mov
ret
ja
subb
mov
push
cli
jno
sub
push
inc
sti
xchg
mov
icebp
aam
sti
ja
faddl
out
ret
mov
aad
xor
pusha
jl
jmp
pusha
xchg
adc
imul
jnp
data16
cmp
imul
push
je
or
push
ret
lcall
push
sub
fwait
sub
xchg
incb
push
inc
push
je
inc
xchg
lds
scas
mov
ret
add
push
jne
xor
xchg
ret
cmp
in
add
jmp
cmp
xchg
stos
aam
pop
scas
dec
arpl
fldt
cmpsl
jnp
sbb
inc
dec
aas
loop
insb
adc
jl
ret
xor
mov
mov
sbb
mov
or
mov
iret
lret
lahf
mov
mov
icebp
adc
mov
mov
int
cmc
cmp
fucomp
out
jge
xor
push
push
lock
jns
pop
push
je
shrb
push
js
xchg
sbb
add
dec
push
bound
jle
sub
push
add
fs
aaa
leave
les
jnp
push
xor
shll
sti
sbb
jne
or
ds
je
adc
sub
or
imul
test
or
or
sub
sti
iret
jno
popf
popf
mov
or
clc
push
cmp
add
loopne
std
fdivl
push
add
lahf
sbb
mov
outsb
cwtl
dec
aam
fldenv
in
out
lds
mov
jns
push
cld
and
lret
mov
dec
pop
mov
dec
push
sub
sbb
and
inc
xchg
ss
mov
inc
aad
roll
lock
dec
shlb
add
stc
jp
sbb
add
scas
fistl
cmp
sbb
les
test
sbb
xchg
adc
pop
pop
or
jp
dec
and
mov
addr16
daa
push
cmpsb
in
adc
add
lret
loopne
or
ficompl
std
xchg
xor
aas
mov
adc
stos
insb
or
dec
dec
cmp
popa
js
pusha
dec
test
mov
xlat
inc
xlat
test
cmpb
lret
jmp
pop
popa
dec
and
in
add
and
add
cli
sarl
mov
inc
mov
sub
pop
outsb
movsb
fs
scas
sarb
jmp
push
aad
ja
cmpsl
cmpsb
call
scas
es
ret
aam
lcall
xor
in
inc
dec
loope
negl
int
cld
lock
pop
and
and
fs
mov
pop
imul
push
jge
arpl
push
loope
push
outsb
movsb
xor
in
xchg
daa
xchg
loop
mov
ret
in
pop
in
cltd
adc
gs
lret
das
jg
push
lea
das
xchg
inc
mov
jno
cld
adc
negb
shll
fstl
mov
and
loop
xor
cmp
aaa
pop
xchg
cmp
add
or
sub
cmp
add
xor
clc
cmp
or
jl
imul
in
push
adc
iret
shll
xorl
jp
cmp
movlps
jmp
mov
adc
repz
clc
jecxz
dec
insb
jecxz
idiv
popf
call
sub
inc
hlt
popa
push
jg
out
cmp
jo
adc
stos
aas
mov
lret
jns
movsl
rcll
mov
xlat
sar
rol
lahf
jle
and
xlat
inc
nop
mov
popf
pusha
push
ja
out
shll
sub
mov
sbb
jecxz
sub
or
in
mov
lods
add
adc
mov
pop
rcrl
cmp
mov
cmp
stos
dec
mov
or
mov
mov
fs
jecxz
stos
adc
jg
mov
fildl
fwait
ret
or
mov
jns
fsubrl
xchg
xor
mov
mov
xchg
or
sbb
jecxz
mov
ss
push
and
dec
rcll
pop
xor
adc
scas
out
mov
add
mov
sub
clc
mov
sbb
inc
psubusb
and
shlb
jnp
inc
mov
mov
aaa
xor
in
jl
orb
fwait
jmp
mov
inc
test
test
pop
push
fists
push
pop
push
leave
xchg
push
test
in
nop
cmp
or
bswap
sarb
jg
inc
ret
cmp
and
cltd
jp
cmpsb
dec
clc
sbb
xchg
inc
adc
xor
pusha
inc
cmpb
aad
int3
fildll
inc
aas
insb
inc
sub
dec
sub
fsts
fs
pop
mov
divb
push
stos
test
lret
jae
les
sahf
sbbl
sbb
xchg
test
bound
push
andl
stc
mov
lods
mov
std
mov
pop
pop
xchg
mov
inc
sub
in
cmp
out
popa
sub
cmp
push
ret
out
sub
outsl
push
push
dec
out
movsl
push
lcall
and
sub
jmp
ret
test
sub
ss
sub
cmpsb
inc
fcmove
pop
push
xchg
push
xchg
cmpsl
and
jno
aad
mov
mov
xor
dec
in
jle
in
xor
sbb
mov
ret
mov
rol
mov
and
das
sti
stos
xlat
fimuls
inc
clc
in
jle
mov
mov
sbb
jg
xchg
test
les
sub
ss
in
push
lods
pop
cwtl
sbb
xor
mov
xchg
mov
sbb
sbb
js
nop
or
xchg
or
push
jle
mov
sbb
mov
in
jo
adc
pop
xchg
insl
push
sbb
cs
insb
sbb
pop
cmpsl
push
shll
fsubl
ljmp
or
jo
dec
or
fs
rclb
movsl
sbb
je
add
int3
test
and
addr16
sbb
int3
sub
repnz
fsts
cld
insb
pop
push
ja
sub
pop
mov
faddp
push
jle
push
jge
adc
xchg
lcall
add
lcall
daa
and
xchg
loopne
add
test
adc
cltd
fsubs
mull
or
cmp
in
jns
and
imul
in
int
mov
jl
adc
out
mov
je
in
xlat
mull
cmp
and
jmp
rcrl
imul
in
or
imul
sub
je
cmp
cmp
loope
jecxz
or
push
dec
scas
cld
sub
into
jnp
movsl
adc
mov
jmp
aam
adc
mov
cmpsl
inc
mov
xor
xor
jne
pop
test
xchg
or
and
aaa
call
inc
pop
aaa
sub
push
add
ret
movsl
dec
cltd
cs
jmp
adc
jmp
orb
jg
and
call
mov
xchg
xchg
and
or
mov
inc
fsubr
int3
in
repnz
adc
lcall
out
jg
push
cmp
xchg
mov
xor
mov
xchg
das
pop
sahf
sub
loope
mov
fwait
push
jo
jae
jmp
int
scas
or
divl
inc
cltd
ljmp
mov
dec
scas
jne
push
sbb
mov
stos
adc
add
jecxz
dec
insb
out
mov
in
test
xchg
stc
or
sbb
jmp
outsl
sbb
ljmp
inc
push
out
push
pop
insl
mov
outsb
dec
dec
lret
inc
loop
mov
daa
std
push
hlt
add
pop
inc
push
pop
outsl
mov
lahf
inc
test
pop
add
sub
cmp
lret
push
mov
xchg
adc
lea
fmul
sbbb
mov
inc
mov
dec
dec
mov
in
push
mov
nop
pop
cmc
jns
cmp
cmc
inc
ret
mov
popf
jno
movsb
jge
scas
loopne
jnp
add
sbb
ret
aas
ficoms
popa
jnp
jbe
out
jae
pop
cmp
pusha
dec
adc
push
xchg
push
and
mov
adc
shrl
movl
sub
ja
out
insl
add
addr16
cli
ss
outsl
out
mov
outsl
mov
lock
imul
dec
sbb
scas
xchg
scas
mov
data16
psubsb
out
out
and
inc
mov
mov
push
std
and
aas
mov
adc
or
mov
das
lcall
shl
xchg
mov
movsb
loopne
scas
sbb
je
jne
push
js
sahf
insb
aam
lea
jle
out
adc
pusha
test
les
es
arpl
xchg
hlt
stos
xchg
lea
jae
insl
mov
lahf
pop
and
xor
scas
push
xchg
test
cld
mov
cmpsl
mov
mov
loop
fbld
pop
mov
leave
bound
cmp
bound
mov
in
pop
inc
jp
aad
push
jle
sub
xor
mov
idivl
insl
ss
or
test
cwtl
push
subb
ja
jne
pushf
push
mov
lret
push
imul
add
jge
inc
dec
int
or
inc
cwtl
out
test
jae
sti
fsub
inc
jbe
loopne
repz
cmp
cltd
nop
sbb
inc
sub
push
enter
fwait
adc
js
in
cmpsb
add
sbb
les
push
loop
pusha
add
push
jmp
clc
sbb
add
inc
sbb
jl
cmp
fldenv
sbb
subl
lods
add
lahf
pop
jno
cmpsb
psubb
xor
xchg
push
pushf
or
inc
in
mov
jge
dec
jmp
rcrb
fisubl
inc
call
inc
jno
movsb
dec
pop
xchg
hlt
movsb
repnz
repnz
or
inc
std
insl
dec
shlb
push
cmp
or
push
out
negl
cmc
aam
popa
iret
lock
mov
pop
cli
cmpsb
mov
xchg
push
gs
jmp
cltd
inc
fstpl
shrb
insb
popa
mov
ss
arpl
pop
xor
push
xor
and
fisubl
and
mov
scas
lret
lcall
in
fisttpl
shrb
js
jge
push
mov
xor
push
call
push
sti
rolb
int3
shll
roll
adc
popa
dec
sbb
cltd
mov
push
mov
sbb
ds
jbe
popf
sbb
mov
dec
and
inc
loop
daa
and
jo
cmp
xchg
add
clc
adc
adc
mov
adc
mov
xchg
std
loop
xor
testb
gs
adc
mov
notb
jmp
subl
mov
jg
inc
fstps
loope
roll
mov
mov
rcr
dec
out
std
popa
mov
movb
incb
cmp
add
mov
fdivrs
push
mov
adc
loop
jo
std
mov
out
cs
jle
mov
sub
xchg
in
test
mov
fildl
mov
cmp
clc
iret
or
es
dec
inc
fcmovu
adc
xchg
lcall
fdiv
dec
loop
pop
je
adc
in
adc
mov
and
and
stos
push
inc
mov
push
cmpsb
jge
std
mov
mov
ret
pop
sub
aas
sbb
aad
cmpsb
mov
cmp
test
repz
jo
sub
or
rorl
into
mov
imul
or
mov
inc
mov
into
lcall
subb
mov
es
jmp
fs
int
stc
cmp
or
je
push
sub
ljmp
dec
dec
or
mov
jle
adc
sbb
mov
push
push
les
xor
sbb
rorb
push
loopne
jbe
outsl
shll
cmc
push
inc
jbe
call
mov
and
es
push
mov
or
xlat
push
mov
in
and
int3
cmc
idivl
insl
or
cmp
cmp
cmp
add
push
mov
and
fisubs
dec
imul
clc
cmp
cmp
popaw
outsl
push
mov
add
jp
push
test
mov
mov
arpl
sbb
int3
or
insb
rolb
lea
icebp
mov
cmp
mov
loope
shll
or
and
std
add
mov
mov
lea
cmp
and
movsb
dec
jnp
xlat
push
mov
mov
cltd
and
outsb
cmp
je
lcall
rcrl
mov
lock
jle
jo
in
lahf
das
jp
cwtl
jnp
mov
cmp
xchg
ljmp
iret
aam
test
xorb
sub
in
loopne
pop
xchg
popa
into
popf
and
lcall
cmpsb
pop
ja
fldt
mov
aaa
push
sbb
js
pushf
jae
dec
or
jb
call
movsb
xchg
inc
fiaddl
jg,pn
roll
rorl
add
pushf
cmpsl
and
in
test
insb
mov
jno
test
repnz
or
inc
jo
xor
iret
mov
cwtl
add
ss
jle
cmp
cmp
mov
jmp
push
out
xchg
fwait
movl
in
outsl
inc
fsts
pop
cmc
mov
data16
lret
xchg
inc
lret
stos
cmpl
jo
mov
cli
push
clc
sbbb
fiadds
mov
pop
inc
mov
jno
inc
push
xor
movsb
jge
xor
pop
sub
dec
fs
cmpsb
unpcklps
movsl
mov
int3
pop
sti
push
push
sbb
std
fs
arpl
mov
lods
in
cmc
nop
push
push
dec
push
ja
in
gs
cmp
mov
aas
sarb
push
iret
shll
daa
daa
cmpsb
adc
je
out
iret
adc
das
cmp
mov
jle
cwtl
cli
inc
dec
push
sbb
repz
jg
pop
dec
xchg
xchg
mov
sbb
fldcw
cmp
cmpsl
fldl
das
aam
dec
pusha
sbb
adc
sub
cmp
hlt
inc
lock
lahf
xchg
popf
bound
lods
nop
int3
mov
fsubrl
in
dec
rorb
xor
cwtl
ss
popf
imul
mov
jp
lret
add
fiadds
shll
fcoms
stos
cmpl
rolb
or
pop
bound
inc
jge
inc
jge
push
and
sub
dec
xchg
popf
jecxz
dec
aas
jecxz
rcrb
cmp
jp
sbb
jns
mov
sub
cmp
jmp
andl
call
and
xlat
lods
in
push
cli
fdivrl
incl
xchg
arpl
jbe
scas
cld
mov
push
subb
outsl
jmp
outsl
imul
and
je
cmp
lods
push
adc
roll
sub
lods
cwtl
ret
ss
jl
outsl
int
fldenv
mov
adc
clc
shl
push
js
shlb
jmp
pop
push
dec
push
lods
jle
dec
or
out
ljmp
pop
cmc
int3
pop
sub
ftst
dec
pop
mov
push
leave
imulb
out
bound
jns
loope
loope
in
int
es
push
cmp
dec
push
jg
fadds
pop
jl
sub
in
test
sub
mov
je
mov
pop
rolb
nop
iret
mov
jno
sub
push
mov
jb
cmp
mov
stc
in
inc
and
stos
pop
fcoms
sub
lret
pop
push
push
inc
lds
in
jmp
mov
push
gs
and
aaa
mov
mov
std
dec
cwtl
fmulp
mov
or
fstl
jg
adc
mov
adc
pop
pusha
jno
je
pop
lock
out
jp
mov
push
push
push
xchg
push
pop
int3
pop
js
mov
das
fs
out
mov
pop
mov
xor
ss
js
scas
cld
sti
adc
adc
jne
hlt
inc
div
and
insb
cmp
repz
je
lret
mov
pop
sbb
push
jle
ret
xchg
cmc
and
mov
sbb
jbe
xchg
mov
into
fwait
or
pop
icebp
jbe
int
out
enter
data16
addb
mov
mov
sbb
cmpsb
aaa
jecxz
lods
adc
inc
std
mov
dec
in
add
dec
cld
jns
adc
loope
xor
insb
pop
ljmp
rclb
out
jge
jge
adc
mulb
es
jae
pushf
sub
dec
in
fadds
cltd
cmp
loope
jbe
int3
out
fstpt
jae
addr16
imul
cmp
jmp
xor
mov
pop
shlb
add
pop
xchg
push
dec
and
adc
insb
adc
inc
inc
add
pop
test
ss
ja
sar
add
jne
out
into
mov
jne
outsl
xor
sbb
pop
push
arpl
int3
and
xchg
flds
jo
iret
dec
xchg
loope
stos
ja
mov
mov
test
lods
in
or
lods
mov
das
inc
xor
pushf
insl
imul
in
add
jne
pop
jno
pop
lret
jl
jge
std
addr16
mov
jl
mov
pcmpeqd
mov
lods
in
std
dec
or
cmp
scas
fisttpl
bound
scas
pop
adc
cmp
stos
and
scas
add
sahf
mov
nop
cmp
hlt
mov
loop
pop
and
jmp
shl
cmp
push
loope
xor
fistpll
mov
inc
push
addr16
mov
pop
mov
add
leave
das
rcrl
nop
lcall
ss
rol
jbe
sbb
pop
ds
ficomps
cld
xor
inc
test
push
mov
mov
pop
adc
adcb
mov
icebp
dec
cli
mov
leave
hlt
stos
inc
push
cld
add
je
pop
mov
push
stos
mov
nop
mov
mov
pop
inc
xchg
mov
mov
or
xchg
enter
insb
mov
jno
imul
aaa
repnz
inc
xorl
aaa
xchg
jge
je
and
lret
xlat
hlt
add
sub
mov
in
mov
sbb
ja
fidivl
imul
dec
adc
add
mov
cmpsb
jmp
fwait
mov
jb
jg
sub
and
call
xor
push
clc
or
mov
xchg
xor
mov
nop
shlb
push
stc
jge
sub
jo
mov
inc
or
scas
mov
imul
cmp
xchg
ret
push
inc
scas
xchg
adc
roll
out
xor
and
out
mov
pop
and
xchg
push
push
stc
jg
in
or
loop
push
add
pop
gs
andb
test
add
popa
popa
sarb
sub
mov
xchg
outsl
mov
inc
dec
pop
cs
add
inc
push
ds
pop
mov
xchg
add
mov
pop
mov
imull
pop
mov
hlt
xchg
push
popf
lods
test
xor
inc
jg
jp
out
xchg
dec
sbb
jg
inc
or
rcrb
loop
push
xchg
or
and
mov
sbb
fldenv
mov
inc
repnz
dec
outsl
xor
fldcw
xchg
popa
sti
sbb
icebp
or
imul
pushf
inc
cmpsl
jg
in
and
stc
btsl
sbb
sbb
pop
btc
cmp
pop
cmp
cmp
lahf
scas
divl
and
loop
adc
hlt
pop
movsl
sub
dec
mov
fsubl
cmp
adc
mov
cli
jp
outsb
out
outsb
test
inc
inc
xchg
jecxz
leave
add
mov
inc
add
dec
fbld
and
stos
ss
push
nop
xlat
frstor
mov
arpl
fwait
mov
mov
or
loope
sbb
mov
inc
hlt
fldenv
das
popa
js
lea
outsl
mov
fs
fistpll
cmp
ss
sti
idivl
insb
clc
jno
enter
push
and
enter
cmpsb
or
mov
test
popa
out
push
pop
dec
mov
cli
push
shll
insl
pop
fs
add
adc
cli
jbe
jge
jne
dec
adc
xchg
mov
aad
jmp
retw
push
stos
int
push
inc
fcomps
push
xchg
or
daa
cmp
jns
sahf
mov
sbb
mov
jp
xchg
shrb
or
sarb
adc
scas
cmp
das
lret
mov
repnz
mov
jne
les
std
test
les
adc
sbb
iret
mov
data16
repnz
sbb
in
mull
cmp
adc
sbb
shl
insl
xchg
fnstsw
xor
xchg
scas
or
and
mov
mov
add
inc
sub
lock
pop
dec
add
add
fs
push
adc
push
add
hlt
jle
xchg
sbb
arpl
inc
fs
int
mov
xchg
xchg
add
cwtl
stos
mov
loop
psubusw
push
xchg
sub
aad
outsb
orb
pop
test
scas
lds
cmpsb
sub
rcr
adcb
andl
mov
push
jp
or
lock
push
mov
jl
adc
roll
mov
das
addr16
jg
inc
lret
or
cmp
sbb
cmp
mov
das
sub
popf
pop
enter
rclb
jae
lea
xchg
dec
insl
adc
and
xor
inc
pop
mov
push
or
fiadds
mov
sub
aam
test
ja
lcall
mov
imul
pop
mov
cli
int
and
inc
mov
adc
les
popa
xchg
in
mov
xor
jp
cs
lods
mov
mov
out
imul
jbe
xchg
rclb
xchg
fldl
inc
aaa
fnstenv
addb
adc
fcmovnb
jmp
or
mov
jae
dec
mov
mov
adc
ja
bound
inc
and
fsub
je
aam
leave
les
dec
sbb
inc
dec
push
ss
aad
mov
sbb
hlt
pop
jno
and
stos
xor
add
and
mov
cwtl
scas
or
pop
cmp
xchg
jmp
test
xchg
iret
xor
popf
in
jmp
mov
xor
jns
pop
int
dec
jle
or
cmc
enter
fildl
fistpl
mov
pop
lods
mov
aam
inc
test
pushf
gs
or
cmpsb
loope
lods
fwait
es
les
sbb
rorl
pop
imul
cmp
rolb
xlat
je
cmc
jp
out
push
mov
movsb
adc
test
push
or
insb
push
and
arpl
popf
leave
push
into
inc
in
movsl
add
jecxz
repnz
popf
add
movsb
jl
test
divb
xchg
ret
aam
aad
push
cmpsl
add
sbb
sbb
aad
cmp
push
loope
lods
mov
cli
mov
mov
adc
xchg
jns
inc
push
and
mov
loopne
lock
rcll
enter
mov
fs
mov
iret
cli
or
sub
int3
pop
lahf
push
sbb
stc
jno
das
cmpb
xchg
mov
pop
daa
out
ja
enter
sahf
outsl
dec
nop
push
xor
lahf
fwait
jo,pn
mov
mov
adc
cmp
movsb
movsb
enter
cmp
mov
out
xor
ja
push
jne
shrb
cmpsb
das
movsl
pop
jg
loop
mov
ret
jecxz
testl
or
les
jecxz
add
outsl
mov
in
jo
mov
lcall
mov
addb
mov
push
mov
sub
fs
aad
dec
popa
popf
sbb
movsl
aad
mov
or
ss
mov
lds
pushf
insl
test
cmc
mov
lds
lods
or
fucomi
test
mov
sub
jns
pushf
clc
jge
divb
mov
sbb
push
sbb
mov
jno
int3
testb
mov
sbb
inc
fwait
subl
sti
jns
into
shlb
leave
hlt
dec
push
frstor
xor
cwtl
aam
mov
mov
aam
pop
sub
shlb
xchg
pop
xor
aaa
xchg
std
lods
es
push
cmp
fisttps
test
test
or
fs
adc
cs
lea
push
dec
leave
adc
sbb
jns
cltd
or
dec
jg
cmp
stos
insb
lcall
dec
popf
mov
test
pop
or
fs
dec
cmp
bound
lahf
pushf
and
add
iret
pop
mov
fcmovne
mov
cmp
test
xor
mov
stos
loopne
lods
push
jns,pt
dec
xor
xor
fwait
mov
adc
cld
imul
push
fs
mov
je
jg
xchg
lds
lret
jecxz
andb
into
sub
mov
push
jb
jb
ficoml
adc
xor
imul
mov
mov
push
push
mov
mov
sbb
loopne
mov
test
dec
xor
xor
push
fwait
testl
add
and
cli
ret
out
mov
mov
clc
outsl
ret
lds
lds
mov
lods
insl
mov
sub
pop
mov
lret
shll
movaps
or
mov
imul
or
dec
jbe
sbb
inc
mov
lds
and
loope
sarl
sub
out
clc
int
pushf
xchg
mov
or
js
sub
loope
aaa
or
pop
dec
mov
adc
pop
jmp
mov
jne
push
dec
xor
dec
pop
fcmovbe
add
int3
das
add
js
push
push
inc
pop
enter
add
repz
sub
fdivrs
imul
js
test
xchg
das
js
jb
push
sbb
mov
ret
adc
mov
sbb
jp
stc
cmp
dec
insb
lods
jl
insl
pop
inc
insb
icebp
dec
mov
push
or
test
daa
daa
mov
lds
into
add
mov
jo
imul
int3
push
ret
aad
rcrl
xor
mov
add
movsw
insb
in
lods
jbe
jb
incb
shll
enter
jo
lock
adc
adc
ret
sbb
insb
add
das
fwait
lds
sbb
xchg
add
pop
jl
xchg
testl
mov
sub
adc
ja
mov
mov
adc
test
mov
stc
outsb
int3
mov
push
mov
push
ret
cmp
push
add
mov
sahf
inc
movsl
pop
daa
adc
lods
dec
out
subl
fisubs
pop
xchg
icebp
and
inc
imulb
sbb
jl
xchg
nop
xchg
jl
data16
scas
push
push
or
adc
and
and
adc
sub
bnd
addr16
sbb
mov
leave
xor
xorb
push
mov
out
cwtl
js
xchg
push
pop
adc
adc
cmpsl
lret
cmp
pop
into
mov
pop
add
stos
int
aas
inc
fwait
or
aad
sarb
movsb
imul
lcall
cmp
pop
cmpsb
jae
xor
ret
dec
xor
adc
jno
in
into
call
mov
pop
fildll
shll
out
pop
enter
mov
ret
and
sbb
es
loope
sti
xchg
test
xor
shl
loope
mov
pop
popf
xor
jp
rcrb
cmp
dec
shll
icebp
mov
pop
dec
pop
inc
aas
and
in
inc
xchg
hlt
mov
cltd
mov
inc
fsubl
mov
and
xchg
int
jnp
nop
cmp
push
ss
adcl
rolb
fstps
test
cmp
ja
test
push
xor
mov
sahf
fs
cmpsl
mov
cwtl
xchg
xchg
cltd
lcall
loope
lea
aad
jns
repz
lock
xlat
pop
mov
cmp
xor
jo
fwait
or
inc
mov
pop
pop
dec
das
sbb
mov
inc
outsb
push
jmp
pop
insb
pop
loope
jae
jb
nop
mov
into
jg
cld
in
cld
cmpsl
in
fcomps
adc
test
mov
ss
hlt
pop
aam
jbe
mov
movsb
lcall
in
push
lahf
and
dec
subl
mov
jne
imul
and
in
popa
pop
outsl
mov
push
fs
jmp
xchg
sub
pop
jb
std
inc
adc
xchg
fs
pop
imul
mov
js
inc
or
loop
in
fstpt
cltd
lret
ljmp
fidivs
sub
pop
orl
popf
out
daa
adc
mov
add
xor
cmpb
fsubp
push
loope
fisubl
inc
or
scas
mov
je
stc
sbb
in
lods
push
and
scas
add
js
xor
adc
fisubl
mov
cld
test
inc
adc
test
inc
es
push
sbbl
data16
aas
and
mov
mov
jo
movl
jl
and
movsl
mov
mov
imul
push
add
sub
jmp
rcrb
rcll
lock
aad
mov
cmp
push
sbb
and
dec
sahf
adc
dec
push
lret
and
lea
add
mov
dec
adc
adc
fildl
xorb
insl
int
lret
in
mov
dec
es
pop
outsl
inc
mov
jmp
add
ror
mov
lods
push
dec
lock
loopne
push
sbb
mov
mov
lcall
out
dec
repnz
adc
mov
loopne
dec
loop
inc
aam
shrl
xor
adc
repz
mov
aas
insl
sbb
add
inc
leave
and
sar
not
imul
lcall
insb
adcl
rcrl
xchg
addr16
sbb
out
cwtl
outsl
or
mov
inc
fidivs
adc
jo
in
bound
lock
push
in
stos
xchg
aaa
adc
and
sbb
push
shrl
pop
xorl
sbb
inc
cmpb
aaa
in
sbb
jp
or
int3
push
ljmp
xor
hlt
sbb
cli
aam
lods
xchg
or
idiv
jmp
pop
mov
inc
inc
in
push
mov
push
mov
rcrl
sub
mov
mov
cmpsb
xor
in
fwait
pop
sbb
xchg
lock
add
lcall
mov
cld
loopne
cmpsl
ret
mov
lock
subl
jbe
seta
dec
sbbl
push
mov
mov
mov
cmp
mov
push
out
out
xor
popa
outsb
dec
jecxz
mov
pop
test
sbb
rep
pop
daa
xor
addb
xchg
daa
repnz
xchg
inc
or
loop
out
adc
fnop
rorb
mov
dec
xchg
rorl
pop
scas
pop
nop
inc
stos
mov
movsl
cmpsl
add
repz
mov
dec
pop
mov
push
sahf
pop
or
lods
std
dec
and
fsubrs
or
and
pop
fisubl
push
ss
inc
lret
inc
lods
ss
mov
sarb
in
aam
outsb
mov
jmp
or
add
sbb
mov
inc
cld
xor
insb
sbb
adc
test
leave
sbb
in
adc
sarb
popf
loopne
xlat
push
jbe
aad
jp
push
addr16
cmpsl
mov
bnd
dec
dec
or
mov
cld
mov
mov
push
dec
lahf
fwait
xlat
insb
pop
xchg
lock
pop
mov
mov
cs
pop
mov
fcomps
cmpb
push
ja
fisttpll
jns
xchg
cmp
and
cmp
jno
mov
pop
stc
sub
add
jne
xor
scas
ja
outsb
jbe
xchg
xor
arpl
insl
cli
jae
xor
or
stc
dec
pop
hlt
xor
shll
push
dec
shl
hlt
pusha
sarl
mov
fwait
cmp
negb
lock
push
scas
add
cmp
adc
adc
sbb
cli
mov
mov
push
dec
in
ss
int
popf
and
sbb
mov
fwait
call
sbb
adc
mov
dec
push
lret
push
xchg
or
fisttpl
inc
mov
aad
add
add
xor
xchg
xchg
mov
inc
rcrl
cli
xchg
sbbl
clc
insb
adc
xlat
cmpsl
inc
ret
mov
loopne
xlat
add
ja
mov
leave
ss
add
shrl
adc
movsb
inc
pusha
int3
push
xor
imul
jg
fdivrp
push
and
cmpsb
pushf
jl
add
and
jne
cmp
push
pop
mov
mov
idiv
aaa
loop
pop
enter
loop
lcall
mov
push
das
mov
sub
les
xor
sub
xor
jne
jno
xchg
dec
and
subl
push
jp
inc
mov
addr16
leave
push
repnz
mov
mov
stos
jg
adc
or
cmp
leave
mov
fs
push
movsb
dec
pushf
bound
ret
mov
xchg
pop
stos
test
test
movsb
push
aad
jnp
pop
movsb
loopne
xor
cld
inc
mov
xchg
les
imul
sarl
cmp
ja
jnp
pop
hlt
cmp
xor
dec
mov
fildl
cmp
mov
in
cwtl
je
dec
mov
push
sbb
into
jge
out
mov
mov
cmp
cmp
loopne
sbb
inc
or
mov
xchg
cmp
inc
mov
and
inc
arpl
lahf
fwait
rcrb
in
scas
dec
ret
sub
shr
icebp
dec
fld
rcrb
and
jbe
xchg
mov
popa
mov
inc
xor
aaa
cmc
or
cmp
xchg
into
or
cli
pop
push
stos
mov
shrb
fdivr
rol
mov
aam
call
arpl
stos
int3
jns
cmp
mov
mov
and
iret
push
mov
add
pop
ss
add
movsb
xor
rcrl
addl
mov
mov
and
inc
mov
cmp
push
xor
aas
test
pop
mov
fdivr
fdivrs
cmp
neg
adc
inc
scas
mov
rcrb
xchg
imul
lret
cwtl
xchg
xchg
push
or
adc
push
dec
adc
jno
in
mov
mov
in
jle
pop
insl
aam
fadd
jbe
mov
ret
add
push
jb
push
icebp
hlt
or
xor
sub
push
xor
pop
xor
in
dec
dec
sbb
dec
xor
push
pusha
xor
mov
aaa
mov
fisttps
mov
push
xchg
pop
dec
test
scas
xor
ljmp
es
aaa
sahf
mov
lods
fwait
dec
shrb
pop
mov
inc
xchg
pop
iret
out
push
push
movsl
in
jmp
dec
jb
fiadds
or
cmp
add
xchg
xchg
jge
cmp
pop
das
xchg
push
adc
dec
nopl
inc
or
lock
pop
sahf
pusha
sub
aas
xor
xchg
fdivrl
mov
push
dec
jnp
decl
in
jae
sti
fwait
pusha
fdivp
cli
push
mov
jl
test
pop
cmp
dec
imul
sbb
test
jns
pop
insb
imul
pop
and
add
out
or
sub
cwtl
repz
pop
mov
inc
fadds
fildll
mov
xchg
lds
push
cltd
and
test
movswl
popa
ss
xchg
adcl
das
mov
cmp
out
mov
xchg
cmpsb
push
fisttps
push
mov
leave
adc
xor
imul
or
iret
inc
iret
cld
in
filds
adc
dec
je
stos
in
je
movsl
jp
roll
clc
arpl
sbb
pop
cwtl
sub
ror
mov
fadds
movsb
mov
dec
sbb
ja,pn
adc
es
xlat
jae
clc
aaa
cmc
nop
popa
dec
pop
stc
movb
out
hlt
loope
hlt
push
cmp
xlat
and
add
xchg
lahf
pusha
xor
inc
stos
lea
stos
add
call
dec
sbb
push
mov
mov
rcll
pushf
mov
and
stos
jmp
shr
jnp
inc
sti
mov
arpl
fwait
nop
gs
insb
pop
ret
in
mov
cld
lcall
jl
dec
notb
inc
mov
sub
ljmp
and
jp
mov
loopne
jo
stos
mov
pop
addr16
ja
out
jp
and
xchg
cli
sbb
and
out
mov
arpl
int
int
addb
mov
jmp
mov
mov
pushfw
cmp
xchg
addl
divl
notb
insb
aam
mov
and
push
and
mov
call
jno
xor
lret
not
cmpb
data16
popa
push
in
mov
push
cmp
xchg
fstp
gs
shll
push
cmp
cltd
mov
inc
xor
rcr
push
jle
pop
out
adc
xor
test
in
sbb
pop
xor
mov
aas
sbb
push
test
rorl
mov
hlt
cs
adc
push
cltd
fs
das
push
insl
lret
and
xor
add
and
xlat
mov
sub
fs
fstps
sti
jl
dec
sub
push
mov
pop
dec
and
and
repnz
fwait
jne
jge
adc
ret
mov
icebp
testl
pop
sub
movsl
mov
sbb
dec
mov
cmp
mov
pusha
stos
shll
jns
jmp
mov
sub
cmp
lret
xor
cli
pop
test
movb
aad
jae
xchg
testb
xor
sbb
inc
xor
rcl
test
xlat
and
add
push
mov
mov
cmp
pop
xchg
cmp
push
mov
jle
sbb
leave
mov
lret
call
fucomi
adc
fwait
pusha
js
push
push
mov
loopne
call
je
sbb
adc
popa
out
loopne
xor
test
aas
mov
and
lea
mov
movsb
dec
filds
mov
push
das
xchg
in
ffreep
cld
fsubs
std
mov
repz
cmp
and
mov
xchg
int
push
addl
es
sbb
mov
dec
aaa
jecxz
pop
fdivl
popl
insb
sti
jae
cmp
cmp
pop
inc
call
sub
and
lock
sub
pusha
xor
aaa
cli
jmp
pslld
pop
inc
repz
test
int
sti
pop
mov
hlt
loope
push
push
jle
jno
fdiv
mov
cmc
repnz
xlat
or
xor
inc
and
cmp
sbb
cli
and
mov
jp
sbb
mov
mov
in
cmp
mov
ret
mov
mov
cmc
sbbb
dec
stos
mov
mov
hlt
aas
call
in
in
shll
push
ss
aas
hlt
pushl
movl
jbe
sub
or
imul
outsb
bnd
xor
ds
inc
dec
push
lret
cmc
daa
cmpsb
mov
sti
pop
in
sbb
xor
xchg
pop
jo
hlt
ljmp
cltd
fisttps
dec
inc
js
ret
adc
int
mov
and
xchg
fs
mov
cmp
mov
adc
push
out
insb
std
sbb
push
test
in
enter
test
pop
sbb
sub
push
mov
sbb
and
out
bsf
repz
int
psrlw
xor
pop
cmp
cmp
mov
sub
aaa
ss
add
mov
movsb
cmovns
loopne
mov
push
imul
or
xor
push
arpl
fisttps
push
pop
imul
shll
fst
push
in
or
and
test
pop
movsl
and
xchg
pop
xchg
cmp
vpmulhw
adc
subb
into
aam
popf
mov
sahf
icebp
inc
mov
add
mov
scas
mov
ljmp
mov
sbb
jo
movb
clc
or
imul
mov
fstps
call
lock
enter
mov
xor
xor
sub
push
test
pop
sti
inc
mov
cld
aaa
in
sbb
pop
dec
xor
sub
bound
enter
mov
ret
shll
and
inc
imul
fstps
dec
lahf
les
pop
mov
stos
mov
cltd
cli
jnp
movsl
and
repnz
sub
sbb
xchg
frstor
je
sub
ljmp
mov
cmpsl
pop
push
out
jb
js
loopne
dec
jae
mov
scas
mul
fldenv
fdivr
inc
sbb
dec
shrb
divl
nop
ret
aad
scas
jg
xlat
cmp
ja
cwtl
leave
push
nop
leave
lds
sbb
sbb
push
and
out
adc
jo
adc
and
push
push
mov
in
cli
pop
in
jne
dec
rcll
dec
mov
popf
inc
ja
or
js
repz
shr
aam
arpl
mov
js
scas
inc
fldenv
xor
push
cmpsl
aaa
push
sahf
incb
lds
push
jmp
outsl
ret
sbb
mov
push
adc
mov
and
mov
in
cmp
gs
imul
popf
in
pop
push
mov
mov
ss
xchg
mov
inc
mov
loop
inc
int3
lock
sbb
cmp
cmpsb
lea
lods
jle
cld
insl
insl
sbb
jle
pop
xchg
push
in
aas
mov
shrl
bnd
push
mov
push
outsl
push
push
fistpl
pop
jno
daa
out
push
and
js
loopne
push
jg
lret
vpavgb
aad
out
fldl
ss
adc
dec
inc
cmp
adc
dec
mov
int3
push
adc
jae
popa
sbb
jp
xchg
ret
jne
or
push
pushf
out
mov
add
and
mov
test
repnz
idivb
das
mov
rolb
mov
sbb
addr16
adc
daa
mov
jmp
repz
sbb
lret
jb
fildll
cmp
and
xchg
lock
and
in
cmp
lock
data16
out
mov
lret
pushf
cmp
mov
out
jmp
outsb
push
add
sbb
aad
adcb
rorb
mov
mov
pusha
inc
xchg
cld
mov
sub
loope
lret
frstor
adc
sbb
pop
cltd
fisubrs
es
or
das
stos
loope
inc
lcall
mov
push
fcomi
push
mov
lcall
xchg
out
lock
into
aaa
mov
mov
clc
shll
std
sub
fs
loopne
aad
in
cli
pop
mov
sbb
addr16
mov
sub
jns
xchg
test
push
xlat
scas
stc
pop
jp
fistpl
sub
and
ret
data16
adc
adc
imul
adc
push
inc
stos
cmpsb
dec
sbb
pop
cs
cmpl
inc
jmp
inc
jns
mov
pop
mov
cmp
dec
out
mov
ds
fdivr
movsl
inc
pop
xor
mov
repnz
or
fs
andl
or
push
or
pop
xor
cld
jmp
lcall
mov
xor
not
adc
aad
sbb
add
cmp
xchg
mov
cli
fs
cmpsb
dec
mov
pop
fsubr
push
inc
stos
jp
fldl
pusha
inc
loop
and
jecxz
int3
jns
xchg
jp
cwtl
jb
jno
mov
and
outsb
and
xor
and
mov
and
lea
mov
push
enter
dec
pop
inc
jg
and
inc
jecxz
sub
xchg
jecxz
fdivrl
test
mov
mov
enter
sub
cmp
adc
mov
lock
in
aad
jp
sbb
inc
fxch
lahf
inc
adc
jb
xchg
inc
add
daa
inc
cmpsl
mov
ds
scas
mov
dec
addr16
mov
lods
leave
and
testb
stos
pop
testb
insl
imul
jle
pop
fldcw
aaa
aaa
push
call
fucomp
bound
ret
fcompl
sbb
call
insb
fildl
out
lea
fiadds
dec
xchg
cli
loope
ljmp
inc
int
loope
pop
adcb
lret
mov
inc
mov
push
cmp
inc
fwait
adcb
pop
je
mov
push
xchg
and
in
aas
dec
push
xor
out
xor
push
repz
push
stos
and
xchg
xchg
sbb
pop
mov
xor
or
daa
push
imul
ret
cmp
int
mov
xchg
sub
sbb
cmp
in
cmp
je
lret
dec
aaa
add
add
inc
push
mov
ficompl
cs
es
push
sub
test
push
stc
inc
mov
push
mov
cmp
mov
das
add
mov
popf
enter
test
bound
add
mov
das
cmpsb
xchg
das
test
scas
test
lock
hlt
hlt
sbb
mov
addl
adc
orl
test
lahf
and
popf
inc
movsl
sub
stc
xor
dec
imul
pop
jecxz
data16
mull
dec
jo
jmp
adc
mov
and
dec
push
mov
rorl
jo
shlb
imul
sbb
pop
scas
xor
loopne
pop
mov
fildl
mov
insb
scas
add
push
inc
jge
pushf
xor
repz
sub
and
jns
mov
rolb
fcompl
das
jnp
icebp
cmp
xchg
mov
jecxz
or
pushf
stos
jae
jo
push
push
push
sub
rol
jl
sbb
mov
rclb
pop
xchg
xchg
pop
and
insl
xor
pop
and
inc
icebp
inc
ficompl
lcall
pop
out
je
xor
ss
inc
inc
push
out
fs
popf
out
aaa
adc
fisubl
push
dec
loopne
ljmp
mov
and
push
cwtl
out
cli
and
popf
xor
mov
push
fnstenv
dec
jg
xchg
push
xorb
gs
push
sti
inc
popa
loopne
into
lret
nop
stc
popf
jg
mov
mov
ljmp
push
test
sbb
rorl
xor
cmp
roll
aad
mov
xorl
daa
fisubl
mov
pushf
add
sub
int3
sub
dec
mov
lahf
xchg
shll
mov
jge
jnp
and
adc
mov
push
sub
addr16
push
repnz
std
xchg
push
pop
pop
jno
xchg
outsl
mov
mov
sar
rcr
mull
stc
push
dec
push
adc
rcrb
test
ljmp
mov
pop
fsubrl
mov
mov
fadds
mov
inc
fcompl
xlat
adc
clc
and
xor
xchg
xor
jae
mov
adc
stos
aas
lahf
shll
lods
xchg
mov
jns
negb
repz
inc
aam
push
push
popf
sbb
mov
mov
inc
mov
add
xchg
cli
cld
lea
mov
jo
sbb
inc
lods
imul
neg
test
jne
or
mov
xlat
adc
inc
xor
loop
jbe
pop
pop
imul
pusha
and
adcb
add
and
fadds
gs
fcoms
imul
and
mov
adc
mov
xor
jmp
rorb
xchg
sub
cmpsl
dec
mov
data16
shr
add
test
cmc
mov
jb
cld
jmp
das
push
adc
cmp
xor
push
aaa
xchg
imul
lds
pop
lret
aad
es
fsubs
imul
xchg
sbb
add
and
push
les
dec
pop
imull
cmpl
xchg
fdivrl
mov
loop
movsl
adc
movsb
rorb
xchg
lea
jl
mov
stos
sub
imulb
dec
add
inc
loop
in
cltd
push
dec
push
fistpl
jo
ficoml
test
xlat
cli
pop
xchg
mov
xor
pop
and
push
insb
test
push
test
scas
jmp
into
scas
pop
inc
loop
xchg
cltd
push
arpl
mov
lock
and
push
xchg
and
cli
xchg
gs
mov
jns
pop
mov
in
jo
or
dec
cmp
and
add
nop
sub
inc
pop
pusha
pop
icebp
and
mov
mov
repz
subl
out
mov
and
sub
dec
jmp
xor
into
xchg
out
sahf
das
xchg
sahf
cwtl
leave
mov
stos
cs
in
aas
iret
fisttpll
das
push
mov
xchg
jmp
inc
jp
iret
adc
sbb
sbb
mov
mov
xchg
jle
adc
xchg
xchg
inc
fisttpll
sub
stos
push
xchg
xchg
cmpl
push
mov
cli
adc
cmpsl
out
scas
enter
mov
enter
mov
loope
ret
lods
rolb
out
xlat
int3
cmpsl
xchg
in
push
je
jecxz
and
cltd
push
or
stc
insb
movsl
or
inc
inc
lock
mov
xor
jecxz
lock
orb
push
ffree
fdivl
dec
jae
insb
lahf
add
insb
repz
adc
or
jne
mov
adc
lret
adc
inc
jge
repnz
mov
inc
or
fstl
jge
push
out
push
lret
lahf
cmp
popl
sub
faddl
mov
loope
fwait
je
daa
xchg
popa
popf
daa
xor
ror
in
fdivrl
inc
sub
outsb
imul
cmc
js
popf
sahf
outsb
push
xchg
daa
testb
lret
sahf
or
mov
stos
xlat
lret
xchg
mov
loope
sub
pop
js
cmp
sbb
mov
sbb
jle
mov
sbb
adc
xchg
scas
outsl
sbb
xchg
ret
std
adc
mull
mov
sbb
loop
in
xor
fbld
lahf
jmp
or
loope
shll
inc
mov
dec
lcall
cmp
jecxz
into
and
outsb
mov
addl
jl
iret
ret
adc
popa
loopne
add
jecxz
inc
bound
add
leave
or
sti
fdivr
xchg
lcall
cmc
test
sahf
dec
mov
sub
cmp
rcll
jge
lret
notl
and
pop
dec
into
nop
mov
push
mov
mov
cmp
cmpsb
hlt
inc
movsb
adc
adc
lret
push
scas
pop
rclb
adc
aas
jo
jns
pushf
hlt
les
xchg
imul
sub
mov
pusha
popf
push
or
dec
push
dec
rcl
movsb
push
jl
pop
fnstsw
jl
push
mov
push
int
and
ds
jo
lods
push
mov
xchg
iret
mov
xchg
or
sbb
out
mov
add
dec
ret
mov
push
or
scas
add
repnz
or
cmp
outsl
push
push
cmp
xchg
pop
mov
pop
pusha
adc
adc
mov
aaa
js
xchg
inc
imul
jp
bound
idivb
pop
lcall
mov
scas
cmp
mov
sub
pusha
loope
pop
adc
enter
mov
lods
ss
mov
xchg
push
mov
jb
mov
insl
mov
add
push
in
test
nop
lahf
imul
inc
mov
dec
mov
lahf
fisttpll
pop
pop
dec
cmp
mov
mov
lret
addr16
mov
mov
jge
pop
inc
inc
jge
out
push
mov
mov
fidivrl
push
mov
adc
in
cld
xor
mov
test
adc
xchg
cld
push
in
mov
enter
test
das
cli
test
in
pop
repz
and
mov
adc
les
pop
cmp
cld
xchg
mov
sbb
insl
pop
mov
mov
dec
aaa
lock
aaa
hlt
roll
mov
pop
filds
and
loope
jecxz
sbb
loopne
push
xor
push
loopne
jbe
or
loopne
ds
jne
sbb
rorb
or
adc
inc
cmc
fisttpl
in
dec
out
andb
ljmp
stc
mov
inc
ret
mov
fwait
mov
inc
add
lret
pop
je
cld
jmp
dec
pop
xlat
xchg
xchg
jge
push
popf
out
dec
leave
ret
cmpsl
inc
cmp
arpl
daa
cs
ret
jmp
jg
andb
shlb
lods
in
pop
imul
mov
mov
push
sbb
push
vzeroupper
std
gs
mov
jne
jae
push
xchg
arpl
ljmp
pop
into
inc
aas
hlt
scas
aad
dec
aam
je
icebp
fsubr
mov
xchg
xchg
pop
jp
dec
or
hlt
in
popa
call
stos
stos
adc
push
in
inc
jbe
cmp
fsubs
aad
sti
adc
icebp
push
and
push
pop
and
inc
sbb
lcall
cmc
push
adc
mov
or
imul
pop
cmpsl
outsl
jecxz
add
sbb
mull
add
xor
es
shr
push
dec
dec
mov
lods
pop
sbb
loope
xor
test
jo
fwait
pop
inc
xchg
xchg
ss
cmp
inc
sahf
jmp
ret
mov
fcmovnu
xchg
orb
jns
lock
shrl
movsl
fwait
std
dec
sbb
popf
sub
push
nop
jnp
fnsave
sbb
pop
mov
cmp
outsb
mov
lods
inc
sbb
xchg
cmovo
dec
in
mov
xchg
dec
call
mov
pusha
pop
gs
or
adc
mov
dec
mov
ja
adc
push
movsl
ja
cli
mov
fcoml
cmp
call
mov
outsb
aaa
call
int
movsb
push
sub
ds
pop
and
out
popa
aam
and
mov
ds
jp
cvttps2pi
sahf
jae
inc
sub
daa
int
pushf
ss
ss
jno
mov
inc
in
mov
shr
loope
popa
movsl
inc
inc
rclb
mov
cmpsb
insb
or
faddl
push
add
dec
fldl
mov
in
mov
dec
pushf
inc
pop
mov
enter
or
lret
aad
call
mov
call
orb
cmp
je
adc
mov
aad
jbe
push
mov
cmpsb
pop
and
mov
aas
or
call
loopne
adc
xchg
push
dec
sbb
repz
add
lock
insl
cmp
jl
sbb
incl
inc
icebp
jno
aam
mov
pop
cli
lret
sbb
repz
xlat
and
push
out
and
jno
cmp
mov
pop
jbe
jb
mov
cmp
mov
cmp
shlb
lods
movsl
mov
inc
mov
cli
lret
jb
fs
es
mov
mov
xchg
and
data16
add
pop
clc
sti
decl
fldt
sub
and
xchg
sub
mov
fcmovnb
jo
icebp
jl
sahf
popf
mov
pop
lods
popa
stos
testb
push
jnp
loop
mov
and
sub
out
popf
loope
pop
add
pop
roll
inc
pop
dec
push
sub
sbb
dec
pop
mov
jle
aam
popa
inc
mov
inc
push
pop
adc
or
push
lret
addb
push
push
mov
lret
lds
sub
imul
and
xchg
pop
stos
daa
adc
dec
addb
jnp
inc
mov
inc
ja
mov
and
xor
adc
add
cmc
shrl
iret
and
push
cmp
jnp
aad
cli
fiaddl
leave
mov
nop
out
or
pop
lds
popf
sbb
test
cmp
mov
push
mov
test
cmp
dec
sti
jle
mov
sub
cld
mov
push
dec
xor
pop
test
insb
mov
subb
mov
arpl
adc
mov
lcall
arpl
pushf
pushf
fs
mov
and
ffree
sbb
push
or
sub
lahf
xor
jns
orb
fdivs
jecxz
arpl
fsubs
or
icebp
fcomp
sbb
xor
nop
hlt
push
in
or
inc
mov
loop
cwtl
js
push
loopne
add
mov
add
adc
outsb
dec
pop
and
sbb
das
mov
add
or
das
pushf
out
faddl
push
xchg
push
ficomps
or
and
cmc
xlat
out
push
pushf
jmp
sub
sub
push
call
sbb
or
arpl
pop
cmp
and
fsubrl
adc
inc
mov
xchg
and
lret
add
xchg
js
or
pop
mov
std
sub
dec
or
jb
jbe
dec
mov
mov
add
into
mov
or
rcr
mov
add
fnsave
lcall
dec
jne
jno
sub
jp
cld
inc
shlb
js
bound
sub
jge
mov
dec
rorl
add
jge
sub
and
and
push
inc
cmp
pop
cs
jb
xchg
dec
stos
add
sub
sbb
rcrl
jmp
test
mov
lcall
inc
xor
or
imul
test
les
lret
outsl
xchg
mov
mov
add
xor
test
xchg
loope
jmp
push
xchg
adc
outsl
mov
xlat
neg
mov
pop
pop
pop
sub
jl
idiv
nop
and
imull
stc
xor
sbb
dec
std
xchg
jnp
subl
xor
idivl
mov
jne
insl
sub
enter
add
popa
inc
mov
cmp
jns
ret
xor
xor
dec
and
icebp
add
pop
pop
cmp
cmp
or
pop
mov
negl
lds
mov
pop
aas
and
push
fbstp
xor
inc
lods
out
in
cld
inc
and
push
out
push
sbb
adc
and
dec
dec
jg
xchg
aaa
das
lret
fnstenv
sbb
dec
lds
mov
fsubrl
jge
sti
es
lret
add
sub
nopl
cmp
xchg
add
xchg
mov
mov
or
cmpsl
pop
cld
mov
cmp
shl
or
mov
push
add
dec
push
jae
xchg
xor
ljmp
inc
dec
imul
stos
loopne
movsb
cli
inc
push
out
test
lahf
imul
xor
xchg
fnsave
dec
sbb
lods
in
jecxz
es
fiaddl
sub
imul
fs
repnz
stos
jg
mov
mov
or
inc
jns
jl
dec
add
loopne
add
cli
int3
outsl
aas
bound
in
cmp
jbe
pop
and
je
inc
pop
ljmp
cwtl
lcall
test
inc
mov
into
lds
or
in
pop
mov
stos
mov
xchg
mov
jnp
cld
mov
jo
pop
lret
mov
adc
jns
mov
fwait
inc
dec
mov
int
les
pop
daa
mov
pusha
movsb
and
imul
enter
lret
push
loope
repnz
inc
shrl
sar
rcr
ljmp
dec
sub
faddl
xchg
aam
jbe
mov
cwtl
inc
xchg
cmp
jbe
adc
ss
cmp
mov
std
mov
jp
scas
arpl
mov
es
dec
mov
mov
roll
xchg
das
ss
shrd
notl
insl
mov
fdivrl
icebp
insb
iret
add
inc
sarb
ss
pop
loopne
fcoml
cmp
cmp
das
iret
mov
and
push
les
sbb
cltd
xchg
loop
jns
mov
mov
insb
jecxz
adc
popf
adc
fnstenv
sub
das
cmp
fnstsw
mov
xchg
jmp
cmp
sbb
int
in
stos
push
add
jg
dec
sub
leave
pop
adc
loopne
js
sar
push
pop
inc
addr16
std
test
mov
dec
testl
mov
dec
pop
dec
push
xor
jbe
jmp
mov
ret
mov
data16
pushf
mov
jno
lahf
nop
jae
or
xchg
adc
xchg
adc
mov
push
shll
lret
mov
jno
xchg
xchg
test
insb
es
push
cmp
cli
data16
xor
out
lret
loop
mov
add
inc
cmp
into
and
sub
push
sbb
out
mov
mov
movsb
out
push
add
and
mov
lahf
movsb
adc
xchg
ret
sbb
add
test
pushf
shrb
add
jb
xlat
dec
imull
xor
js
xorb
adc
neg
jbe
data16
aad
div
cltd
imul
arpl
dec
psubq
xchg
pop
popa
jne
xor
ret
repnz
je
or
sbb
js
in
pop
cld
sbb
stc
dec
outsl
pusha
je
pop
fimull
out
push
into
scas
scas
imul
inc
mov
movswl
add
bound
aad
jp
je
mov
imul
dec
xchg
dec
cwtl
adc
sub
lods
popa
mov
test
sbb
jns
add
jb
sbb
jne
mov
add
pop
fnsave
mov
dec
lods
mov
imul
out
sbb
cmp
pop
shll
dec
sub
sub
cwtl
fmull
sbb
jns
insb
push
cmp
mov
mov
pop
and
aam
mov
jbe
out
outsb
vmwrite
std
inc
hlt
rclb
cwtl
xor
gs
xchg
in
nop
ljmp
test
or
insb
and
push
pop
nop
or
push
mov
pop
int3
jns
jmp
testb
mov
out
pusha
sbb
sbb
daa
repz
test
push
subl
cmp
cltd
icebp
sbb
pop
push
pop
fmulp
cwtl
inc
sub
inc
sbb
pop
jb
imull
adc
iret
fwait
pop
push
mov
xchg
push
mov
cmp
jecxz
mov
fcomps
jnp
xchg
mov
cmp
mov
lods
push
mov
stc
add
imul
lods
jge
jge
or
push
das
ret
sbb
jno
cli
pop
in
popf
xchg
xchg
push
and
pop
mov
sub
mov
fcmovbe
mov
xlat
lret
sbb
outsl
and
mov
mov
inc
shlb
xor
movsb
pop
hlt
pop
adc
add
imul
fisubrl
aad
sub
movsb
pop
bnd
js
ljmp
test
jnp
int
jne
pop
pop
mov
test
pop
rcrl
xchg
movsl
test
jae
leave
mov
push
push
push
sti
push
pop
ja
cmp
sub
movb
fnsave
cmp
dec
clc
addr16
or
sbb
lahf
rorb
pop
adcl
dec
sub
jo
outsb
xchg
pop
popf
jp
aam
inc
pop
jns
or
or
push
mov
in
sti
cmpsl
shrb
or
cmp
rcrl
push
sub
adc
data16
mov
fisttps
lret
fidivrl
inc
add
stc
int3
cmp
and
mov
test
out
js
mov
xchg
rclb
out
cmp
faddp
adc
popf
es
adc
mov
mov
cwtl
pop
sti
scas
and
popa
jbe
out
int3
xor
int3
mov
xchg
inc
js
mov
ud0
testb
ja
bound
xchg
lcall
jp
int3
loop
push
dec
aam
mov
inc
std
and
cmp
div
mov
adc
or
mov
hlt
hlt
and
adcl
xor
xchg
adc
or
dec
iret
cmp
adc
cmpsl
mov
mov
mov
and
add
shll
testb
scas
pop
lret
or
or
jne
test
push
dec
mov
inc
in
daa
sub
jne
push
das
xor
and
add
aam
imul
int3
add
mov
into
lods
xchg
xchg
sub
ljmp
in
aad
jb
inc
add
jle
adc
movsl
movsl
jle
inc
jnp
sahf
ljmp
mov
out
int3
dec
push
mov
frstor
mov
out
call
into
jno
pushf
xor
pop
push
add
scas
scas
repz
cmc
adc
lea
lods
xchg
iret
aad
js
sbb
mov
or
popf
lods
xor
shlb
test
movsl
pusha
jne
xchg
xchg
xchg
call
xchg
xchg
mov
movsb
repnz
rcll
jae
sbb
das
frstor
cmp
lods
sbb
jge
call
dec
psubb
out
cld
lds
ret
test
lea
and
inc
mov
orb
and
into
mov
aaa
pop
je
js
sub
loopne
cmp
push
into
dec
pusha
mov
test
imull
dec
iret
das
push
cli
ja
js
mov
int3
icebp
imul
cli
inc
repz
iret
dec
cmp
sub
add
scas
push
setl
vxorpd
loope
cld
and
mov
sar
mov
ficoms
pop
add
dec
insl
pop
sti
es
add
pop
popf
mov
hlt
fisubrl
lahf
cmp
pop
xor
cmpsb
lds
out
call
iret
adc
add
cmp
ret
xchg
cmpsb
ss
and
test
cmp
xor
xor
rorl
lret
testl
jg
cs
sahf
sbb
inc
test
jns
shll
outsl
shll
imul
and
dec
mov
cmc
scas
popa
dec
inc
sub
pop
xchg
add
pop
cmpsb
scas
pop
ljmp
cmp
jg
gs
enter
add
push
adc
jbe
inc
mov
inc
xchg
pop
dec
inc
mov
add
bound
movsb
minps
rol
popf
clc
mov
cs
pop
movb
dec
cltd
xchg
nop
sbb
cmpsl
and
es
adc
hlt
dec
and
test
pop
int
jmp
fcmovbe
cmp
jmp
repnz
es
or
xor
dec
repz
ja
jb
push
pusha
lods
dec
push
sub
pop
lret
outsb
dec
lock
jge
adc
fdivrl
pop
mov
mov
js
dec
es
push
and
out
repz
jl
cmp
repnz
movl
popf
cmc
imul
xchg
imull
sub
inc
sbb
lods
sub
and
out
orl
lcall
rorl
or
addr16
jl
xor
cmp
pop
sbb
mov
push
nop
cmp
and
orb
loope
sti
sti
add
mov
jne
ja
push
outsb
xor
dec
mov
insl
xor
call
and
out
notl
int3
idiv
outsb
shll
out
int
addr16
test
mov
pop
pop
jo
sub
and
sbb
sbb
cmp
inc
push
fstps
hlt
jmp
mov
in
int
andl
testl
sahf
jle
add
xchg
popf
pop
mov
push
fidivrl
das
sub
push
rcll
mov
in
sti
fimull
out
jo
cmpsl
iret
push
icebp
in
inc
mov
adc
mov
addr16
mov
cltd
pop
scas
fimull
out
xor
fwait
sbb
and
xchg
sub
fistpl
repnz
daa
imulb
and
popf
pop
inc
dec
test
push
aam
ds
jno
fildl
xor
push
daa
dec
ficoms
xor
jo
cmp
iret
pop
jne
inc
xor
hlt
mov
lcall
xchg
mov
dec
jmp
add
lcall
push
testb
dec
pop
in
jns
mov
add
pop
aam
lea
sbb
ja
xchg
inc
fdiv
cltd
outsb
mov
imul
movsb
aam
insl
je
cmp
lods
lds
mov
call
mov
mov
adcl
add
lcall
add
xor
shlb
lret
popf
out
cs
in
or
andl
jb
sbb
sub
ficompl
adcl
adcb
pushf
sub
fldt
aam
roll
jb
adc
aaa
ret
mov
lret
mov
hlt
lcall
arpl
dec
mov
push
xchg
and
lret
jecxz
pop
ljmp
adc
pop
xor
push
loope
add
fs
std
movsl
sarl
xchg
mov
clc
pop
pop
es
fsubr
push
and
incl
sub
add
mov
inc
in
cli
sub
jne
push
test
push
inc
adc
fidivrl
xor
cli
shll
xchg
mov
adc
repnz
filds
push
xlat
fxam
mov
lahf
mov
addr16
jmp
jge
enterw
mov
jbe
push
stc
adc
ljmp
mov
sub
in
and
leave
inc
js
mov
iret
pop
mov
cltd
sbbl
mov
inc
sbb
lds
js
clc
and
bound
xor
jne
rolb
pop
les
into
fs
jae
loopne
subl
push
mov
int3
ficompl
mov
push
and
or
mov
test
mov
scas
cli
xor
pushf
nop
jb
int3
xchg
ficomps
push
jge
shlb
push
sbb
xor
mov
cmp
lock
test
xchg
cmp
sbb
rorl
stc
xchg
push
std
bnd
cmp
int
push
cs
sbb
inc
lea
rcr
cli
ds
mov
mov
loop
mov
lcall
adc
mov
adc
fisubrs
xlat
aas
push
call
inc
push
dec
mov
scas
adc
pop
int
mov
stos
add
arpl
mov
jl
sti
cmp
out
loope
loopne
test
xor
inc
jl
push
sbb
push
movsl
jmp
shr
mulb
push
ret
adc
push
adc
test
lock
add
adcl
mov
mov
xor
daa
mov
ja
sub
loopne
movsb
and
adc
lahf
movb
or
ret
inc
lahf
jp
lret
dec
xchg
insb
inc
pop
clc
mov
test
push
mov
int
and
out
jl
xchg
repnz
aaa
std
pop
mov
and
xor
outsl
insb
mov
add
je
das
or
test
jl
popf
push
cld
mov
popf
sub
sarl
testl
mov
shll
std
sti
mov
jb
inc
xor
sbb
bound
lahf
sbb
mov
ds
das
cmp
cld
and
xor
mov
aas
mov
in
mov
repnz
or
subl
push
test
push
loop
loopne
add
test
jns
mov
outsb
or
aaa
xor
sbb
xchg
and
daa
cli
jmp
mov
loopne
popf
aad
jne
decl
popf
and
fwait
rcr
or
rclb
decb
cmp
fisttpll
stos
jnp
and
leave
jmp
fbstp
adc
repnz
ror
or
xchg
testl
push
ficompl
subb
loope
mov
mov
std
and
and
outsb
cli
xchg
mov
repz
pop
lcall
xchg
inc
out
fisubrl
out
pop
pop
cmp
clc
dec
sbb
lods
sub
xchg
lds
in
and
pop
mov
push
mov
adc
pop
test
loopne
fdivl
inc
sub
dec
xchg
push
inc
adc
lods
dec
xchg
aaa
mov
jmp
out
mov
arpl
mov
imul
xor
fidivs
and
jo
out
jns
adc
or
ds
mov
test
je
ror
in
repnz
cld
push
gs
fbld
aam
sub
adc
movsb
mov
jl
adc
push
int
push
lods
bound
mov
insl
and
pop
popl
xchg
push
mov
cld
xchg
pusha
clc
xlat
lods
xorl
cmp
jne
xchg
lods
fbld
movsb
sub
sub
jle
ret
mov
outsl
sbb
pusha
fldl
ficompl
sub
mov
loop
sarl
sub
lods
and
cmpsl
jecxz
pushf
sub
cli
adcl
popa
mov
inc
out
das
mov
xchg
dec
cmp
xor
and
mov
or
cmc
mov
adc
popa
xor
or
stos
sbb
ja
iret
std
jns
adc
or
or
jne
push
push
inc
sub
xchg
std
jg
jecxz
jmp
pop
add
jl
fsub
stos
outsb
gs
and
inc
xchg
cli
xchg
lods
negb
fs
fstl
fstpl
enter
ror
sub
push
dec
fildl
stc
ret
sub
push
imul
sub
nop
fnsave
pushf
cmp
push
lcall
ret
inc
or
and
sub
push
ror
and
sbb
sbb
and
adc
mov
mov
xor
daa
push
ljmp
jmp
hlt
out
inc
xchg
iret
data16
cmp
cmpsl
in
lods
icebp
mov
lret
outsb
dec
outsb
repz
jle
fidivs
push
cmp
filds
into
add
test
push
inc
mov
scas
sub
out
push
movsb
inc
add
rcr
push
push
or
js
xor
out
add
dec
sti
xchg
mov
add
and
xchg
inc
aad
or
mov
sub
test
in
mov
sbb
pop
in
stc
lea
ja
jp
jae
sti
pop
pop
pop
mov
cmp
mov
addr16
insb
cwtl
push
pop
mov
into
fcmove
jnp
test
js
mov
inc
xchg
sti
pop
xor
mov
add
cmp
mov
mov
sub
mov
data16
mov
outsb
sti
mov
jmp
repz
and
jo
pop
sub
test
mov
mov
mov
ficompl
xor
imul
cld
sub
ljmp
mov
dec
dec
testl
out
mov
rorl
lods
xchg
xchg
jmp
sub
pusha
dec
add
and
mov
leave
jle
jecxz
cmp
add
cli
inc
adc
jge
sbb
jecxz
add
lods
push
mov
sub
popf
sbbl
std
aam
jno
aam
fsubp
mov
cmp
cmp
das
mov
das
cmp
fbld
rcll
xor
rorl
sub
js
inc
mov
adc
pop
test
sbb
cmpsl
push
jb
sti
pushf
pop
arpl
push
lahf
iret
sub
push
sub
xchg
xor
mov
imul
mov
push
sub
popa
std
test
into
aam
jne
aaa
stos
pushf
cmp
in
les
es
dec
xor
es
int
jnp
add
or
lret
repnz
mov
icebp
stos
popf
push
push
mov
gs
imul
shlb
mov
nop
jle
push
and
inc
dec
sub
xlat
mov
popf
rclb
test
dec
mov
test
cmp
bnd
xchg
cmp
mov
push
cmp
fs
sbb
sbb
shrb
inc
out
iret
push
dec
mov
sub
xchg
sub
jo
jnp
rorl
mov
mov
mov
inc
lcall
addr16
xchg
xchg
ds
mov
rclb
sbb
dec
adc
mov
test
ret
jp
push
and
xchg
scas
imul
std
hlt
stos
cli
sbb
outsl
pop
icebp
sub
ficoml
mov
pop
push
jns
cmp
lahf
mov
pop
ret
inc
add
mov
andl
xchg
popf
repz
icebp
jle
and
mov
int3
sub
sub
movsb
lret
cmp
pop
out
lret
mov
or
push
jmp
data16
stc
insl
jno
adc
pop
jg
sti
cmp
iret
lcall
lods
jno
loop
pop
das
jns
xor
cmp
sbb
mov
pushf
es
adc
lcall
loop
mov
mov
outsb
out
xchg
dec
inc
outsb
shll
into
movsb
and
mov
xor
inc
mov
int
xor
iret
inc
loope
mov
cmp
fcoml
stos
repz
flds
loopne
fs
mov
loope
rcrl
lock
xchg
dec
in
js
mov
sub
test
mov
push
ret
stos
inc
mov
dec
ss
test
fs
test
and
sbb
sbb
mull
shrl
xchg
push
cld
mov
xchg
xor
js
dec
ds
sub
jl
lahf
cmp
imul
mov
or
loop
inc
fcompl
mov
dec
call
cmp
clc
or
arpl
cmp
jge
xchg
jmp
dec
std
ret
and
ja
mov
mov
pusha
or
cmp
fstpl
xchg
je
mov
out
mov
xor
fdivs
out
loopne
iret
les
inc
outsl
add
outsb
sarl
ds
ds
rcll
fwait
test
push
mov
jecxz
insb
mov
daa
dec
pop
test
dec
dec
jp
loop
inc
push
int3
mov
xchg
pop
dec
xchg
sarl
outsb
jl
mov
and
xor
sub
xchg
clc
int3
mov
fisttpl
mov
icebp
pop
dec
adc
or
rcr
push
add
pop
push
loopne
jl
pop
inc
jecxz
jmp
ss
int3
jno
inc
jmp
loop
dec
fisubl
inc
fisttpll
sub
mov
xor
aaa
dec
mov
ror
jg
mov
or
in
cmp
rcll
fisttpl
jnp
add
rcrb
imul
dec
ret
test
iret
xchg
cmp
pop
dec
popf
jno
icebp
lock
mov
fidivrl
jo
push
adc
cmp
jp
push
idiv
xchg
inc
mov
and
out
sub
rcl
jno
shl
popl
out
js
testb
fwait
rclb
push
daa
xor
fadd
cmp
cld
adc
ss
test
xor
adc
sbb
rorb
lods
js
sahf
mov
cltd
aad
outsb
and
ret
das
into
je
mov
sub
sbb
aam
fidivrl
push
inc
movsl
test
je
inc
xchg
dec
pop
bswap
sbb
je
or
in
pop
jecxz
and
add
cmp
jmp
mov
or
out
cmc
and
sbb
out
mov
sub
mov
dec
fdivl
loop
mov
iret
mov
movsb
pop
addr16
mov
sbb
in
or
sbb
enter
cltd
sbb
mov
es
cs
push
mov
int3
repz
jno
jbe
cltd
adc
push
ss
data16
loop
xor
sub
jae
mov
pop
stos
xchg
dec
dec
sbb
mov
lds
lcall
movsb
or
popa
adc
and
jg
pop
ret
mov
scas
and
in
and
mov
sub
sub
xchg
push
jbe
inc
into
test
xlat
repz
adc
stc
add
imul
loope
add
adcl
xchg
test
or
mov
dec
lcall
jmp
aad
xchg
add
bound
jo
fyl2x
dec
pop
adc
clc
push
add
adc
hlt
enter
mov
das
or
popa
out
lret
adc
inc
sbb
popa
test
stos
mov
add
mov
scas
lock
cmp
addl
lods
insl
test
push
jmp
stos
cmc
insb
pop
jnp
sti
stc
push
and
push
arpl
iret
rclb
jno
pop
sub
and
movsl
dec
ljmp
sbb
outsl
mov
xor
pop
fidivrs
or
sahf
xor
rcll
cmpb
mov
ret
push
sbb
shrl
inc
dec
pop
cmp
or
dec
lahf
outsb
pop
pop
mov
iret
jb
jne
loopne
loop
movsl
incb
xchg
in
repz
outsb
cmp
cmpxchg
in
adc
mov
jo
mov
jne
add
test
rorl
fisttpll
data16
push
jne
mov
or
fcoms
cmp
xor
lods
std
js
push
and
mov
push
jmp
test
cmpsl
aas
or
jecxz
ss
sarl
push
mov
shrb
xor
jae
sbb
jo
in
imul
and
lcall
mov
push
adc
cld
das
adc
out
add
scas
ljmp
jmp
jo
push
push
sbb
dec
lret
lret
push
dec
repz
shrl
shrb
out
cld
shrl
loope
roll
cmp
pop
sbbl
adc
sbb
int
ss
pop
cli
push
pop
mov
adc
sbb
daa
jns
aad
and
hlt
mov
mov
mov
nop
movsb
loop
xor
mov
stos
mov
and
mov
adc
and
mov
addl
xchg
and
pop
or
je
aas
cmp
xchg
repnz
xor
movsl
cltd
xor
inc
push
sub
out
shlb
sbb
dec
inc
das
add
ret
scas
addr16
jnp
enter
shll
rcrb
rclb
inc
repnz
pushf
add
sub
aam
jno
mov
imul
in
fsubp
pop
daa
in
stos
mov
mov
es
pushf
lea
add
push
xlat
add
pop
xchg
js
mov
nop
jp
scas
pop
xchg
jg
dec
nop
push
cmp
pop
and
arpl
add
ja
pop
add
push
mov
lds
mov
add
jb
in
mov
movsb
ljmp
call
and
into
xchg
inc
or
popl
mov
movsb
hlt
inc
or
ffreep
arpl
mov
mov
xchg
push
sbb
lock
sub
xchg
mov
dec
hlt
xor
cmp
fiadds
or
pop
and
rcll
push
adc
repz
sub
inc
scas
mov
add
jp
mov
sti
jno
add
or
inc
in
lret
test
pop
cmpsl
lahf
adc
xor
adc
dec
rorl
jg
inc
mov
lcall
dec
in
rolb
and
dec
fidivl
sbb
jno
insl
iret
mov
pop
jmp
flds
or
fisttpl
cld
inc
mov
fadd
cltd
test
movsb
scas
icebp
sbb
clc
push
mov
and
lds
xor
dec
adc
dec
aaa
dec
out
cmpsb
into
mov
pop
fdivrs
add
decl
and
adc
add
loope
xor
xor
stos
outsl
lods
out
cmc
xchg
into
pop
mov
push
jno
jae
sub
in
idivb
pusha
jp
clc
pop
shll
in
sbb
aaa
mov
dec
mov
push
cmp
jge
push
adc
movsl
cmp
test
call
ret
push
daa
lret
andnps
es
hlt
pusha
cltd
xchg
test
dec
imul
fcoms
shlb
out
cmp
scas
or
jns
test
dec
das
movl
and
fxam
pusha
fistpll
lea
jbe
cmp
inc
jno
add
pop
lds
cltd
std
ds
pop
je
push
imul
in
cmc
aaa
fwait
jle
pop
mov
pop
out
sbb
aas
xlat
xchg
iret
mov
dec
out
mov
hlt
dec
add
and
pop
gs
jecxz
mov
outsl
jp
dec
mov
push
loope
fs
push
xor
cmc
repnz
pop
mov
mov
jbe
leave
xchg
sub
adc
sbb
inc
cs
push
imul
pop
cld
stos
add
adc
lods
pusha
jae
inc
cwtl
xchg
jge
je
pop
fwait
sarl
rcrb
dec
icebp
xchg
les
fnstsw
icebp
jmp
jbe
sti
or
add
in
pushf
pop
fisubl
jp
add
ret
loopne
test
loop
jle
sub
aas
push
xor
jle
xchg
subl
push
xchg
pusha
jmp
pop
negl
popf
cmc
mov
es
cmp
lahf
test
das
popa
shll
inc
test
mov
push
jge
lahf
cmc
inc
pop
xchg
bound
ret
pop
es
jns
adc
je
xor
or
push
jmp
jb
jg
add
fidivrl
rcrb
adc
lods
imul
ljmp
enter
xchg
jae
lds
adc
lds
inc
outsl
int3
ds
orl
jp
jae
inc
addb
out
inc
cmp
jecxz
loopne
cmpsl
add
mov
repz
sub
pop
mov
inc
in
cmpsb
dec
and
out
sub
dec
fildll
mov
shrb
pushf
ljmp
fsubp
fimuls
shrl
lret
xchg
xor
push
mov
mov
out
cld
jae
push
sbb
fwait
das
add
insb
inc
jnp
mov
sub
sbb
lods
sbb
inc
pop
out
push
xchg
loope
dec
fnstsw
mov
mov
mov
sbb
nop
and
fdivrp
mov
incb
int3
push
and
cli
mov
inc
pop
loop
jle
push
jmp
add
or
xchg
cltd
push
js
and
add
mov
out
mov
and
lods
pushl
cwtl
stos
cmc
pop
and
dec
mov
sbb
pop
push
iret
lahf
rclb
dec
push
pusha
pop
popa
js
insl
add
adc
ficoms
mov
cmp
xchg
popf
js
pop
aas
rcrb
test
es
lahf
add
or
push
cmp
sbb
scas
or
inc
ds
ljmp
dec
cwtl
jo
imul
inc
mov
shrl
dec
sahf
out
cmpsl
xchg
sub
shrb
aam
push
cmp
ret
mov
push
jge
xor
jno
outsb
leave
mov
dec
mov
jne
or
xor
movsl
hlt
stos
fs
dec
daa
and
xlat
sahf
dec
call
fs
fucomip
jle
pop
lods
in
xor
shlb
push
daa
call
jne
cmpsl
xchg
push
push
xchg
addr16
mov
notb
lcall
pop
jmp
mov
mov
mov
push
rorb
fs
outsl
fistps
push
lcall
cmp
cwtl
popf
cmp
cmp
mov
jg
cs
add
fstpt
adc
inc
movsb
lea
lcall
fcoms
or
inc
hlt
stos
cmp
out
add
xchg
popa
mov
xor
pop
in
loope
mov
push
fcomps
mov
push
daa
aam
sub
fmulp
int3
sub
mov
clc
sbbl
mov
pop
inc
in
frstor
xchg
mov
sti
ret
push
jl
imul
sbb
les
or
dec
loope
ret
inc
test
fnstenv
data16
mov
popf
dec
pushl
fiadds
inc
testb
mov
mov
xor
int
bound
std
pop
repz
pop
mull
filds
dec
mov
ljmp
mov
jmp
fistpll
mov
lret
xor
fs
pop
stos
enter
mov
or
xor
xor
or
xchg
pop
push
enter
xor
mov
jne
xchg
sub
lds
mov
adc
jae
dec
push
xlat
testb
test
adc
jmp
out
adc
inc
mov
popf
mov
clc
cmc
pop
aam
popa
js,pn
pop
andl
dec
enter
cwtl
mov
lds
jns
flds
cli
aad
clc
adc
nop
popf
pop
pop
and
inc
out
mov
pop
pop
int3
mul
add
arpl
xchg
xor
jno
leave
test
adc
imul
dec
adc
sub
int
push
add
mov
popa
xchg
push
jb
push
shll
cmp
je
fwait
pop
and
in
or
or
xchg
leave
fbstp
mov
mov
popa
inc
xor
sbb
sbb
ja
or
fidivrs
or
jae
lret
push
jg
jo
clc
adcl
push
add
cvtps2pd
clc
mov
inc
add
daa
and
testb
pop
xadd
and
daa
dec
fadds
mov
xlat
cmp
and
mov
cs
jo
xor
test
ljmp
mov
xchg
loop
pop
addr16
leave
sti
addr16
in
stos
mov
dec
cmpl
push
fidivrl
adc
mov
or
js
add
pop
adcl
and
es
mov
insl
jne
jae
jae
movsl
fwait
lret
mov
jne
push
sbb
ret
int
pushf
jbe
pop
into
and
movsb
mov
sti
sbb
or
addr16
bound
cmp
lds
push
push
push
mov
imul
clc
fidivrs
loop
xchg
push
jae
or
xchg
adc
mov
pushf
or
les
push
insl
loopne
dec
stos
jne
cmp
inc
jmp
lret
int3
stc
mov
and
inc
mov
xor
movsl
std
js
leave
jg
jmp
shll
and
sub
xorl
inc
call
jb
adc
pushf
xchg
gs
int3
jb
jg
rorl
cld
mov
dec
sub
jns
popf
fdivs
add
fistps
xchg
mov
pop
rcpps
xchg
js
cwtl
pop
scas
imul
push
scas
push
sub
call
in
call
out
cmp
dec
and
xchg
mov
push
fildll
repz
or
nop
cltd
push
aaa
ja
add
loopne
cmc
jmp
fs
ud1
popa
adc
mov
inc
fxtract
lahf
lahf
scas
pop
orb
into
and
dec
mov
add
mov
negb
lret
inc
cmpsb
push
enter
mov
push
int
jo
jns
sarb
sarb
jne
andl
cs
aaa
dec
mov
mov
jl
mov
mov
jns
xor
push
fcmove
xchg
shlb
das
aam
cmp
jmp
mov
scas
pop
add
xchg
or
jl
sub
repz
sub
inc
js
jbe
ljmp
hlt
icebp
mov
and
popa
cwtl
dec
lret
push
iret
outsl
cwtl
lcall
mov
call
ljmp
lods
std
add
push
add
pop
xor
or
js
inc
jmp
inc
pop
aaa
add
jb
repnz
pop
hlt
dec
lret
notb
out
ss
fnstenv
js
adc
aaa
mov
leave
dec
push
negb
mov
jno
rcll
in
or
xchg
popa
xor
xor
or
mov
push
push
fistl
scas
sub
adc
dec
daa
jo
hlt
jmp
es
inc
pop
adc
mov
jecxz
fcmovb
cltd
inc
fcompl
out
das
pop
fidivrl
pop
aaa
jnp
jns
mov
fistpll
mov
sbb
sub
xchg
push
pop
inc
mov
xchg
inc
movsb
add
jge
mov
mov
and
sub
push
or
mov
push
icebp
pop
js
iret
subb
arpl
pop
sub
mov
or
ret
pop
sbb
scas
mov
xchg
sub
repnz
rol
and
add
xchg
jmp
jl
add
imul
xor
fdivrp
cmpsb
out
sub
push
nop
xorl
and
push
fwait
mov
jae
cld
mov
addb
inc
lret
xor
je
fiadds
and
and
jg
sub
daa
jmp
sti
into
fs
js
pop
push
hlt
add
jg
add
jo
cmp
mov
mov
int
in
cmp
xor
clc
lock
add
test
mov
jp
das
xchg
mov
js
ss
mov
adc
cld
xchg
inc
cwtl
dec
sub
or
ficompl
pop
mov
cmp
out
or
inc
fs
or
popa
push
add
fmull
jecxz
fwait
mov
dec
mov
or
adc
pop
out
mov
mov
cmp
jle
xchg
jge
stos
pop
test
jbe
mov
cmpsb
popa
sub
pusha
and
nop
sahf
in
jo
xor
ljmp
cmp
mov
stc
cmpsb
shlb
fwait
test
jb
cld
mov
cmc
and
pushf
pusha
add
adc
cmp
sbb
adc
test
scas
jbe
notl
jecxz
ret
pop
sbb
nop
mov
mov
mov
cmp
jmp
cmp
je
adc
imul
xor
cld
ds
ljmp
addb
mov
add
lea
pusha
mov
dec
pushl
shll
test
mov
jmp
pop
pusha
xlat
stc
test
push
push
or
fmull
mull
call
mov
and
dec
add
xor
arpl
mov
mov
out
mov
push
or
push
flds
mov
dec
xor
sar
mov
mov
je
jno
xchg
in
add
mov
pop
dec
repz
gs
and
push
inc
test
repz
pop
push
test
adc
mov
jo
sub
lods
push
push
inc
rcll
add
scas
jo
iret
adc
jb
adc
das
add
push
sbb
lret
mov
sub
ret
mov
sar
mov
push
mov
mov
inc
inc
cld
adc
jne
fbstp
ret
adc
rcll
out
lret
xchg
pop
scas
inc
lret
or
mov
sbb
fdivrl
sti
add
cmc
push
dec
movsl
aam
bound
ja
xor
inc
decb
pusha
mov
repz
xchg
loopne
or
jmp
std
fsubrl
fbld
xchg
adc
pushf
stc
add
cmp
jbe
fcomip
jbe
jb
cld
push
pop
cmp
inc
fmuls
jnp
and
ret
xor
lds
add
cmpsb
sbb
push
mov
adc
push
movb
lods
jmp
mov
sub
xor
lods
jge
sbb
inc
lea
outsb
stos
js
xchg
push
incl
pop
inc
push
ret
outsl
rclb
mov
repnz
push
pop
in
mov
xor
and
inc
lahf
push
adc
sarl
mov
sub
mov
insl
mov
push
mov
xor
xchg
movsb
sub
mov
call
xchg
std
jecxz
movsl
je
movsb
xchg
mov
add
popa
aas
cmp
testl
shlb
lea
popf
push
insl
outsb
testb
shrb
xchg
add
divl
cltd
test
inc
lret
enter
cs
test
and
out
popa
dec
subl
jbe
cmp
pop
inc
imull
or
xlat
or
mov
sti
add
imul
dec
dec
in
mov
mov
ficomps
inc
lret
inc
adc
mov
inc
aas
rorb
rclb
or
icebp
cli
dec
or
add
sbb
outsb
jecxz
ret
xchg
or
jae
cmp
sub
mov
pop
xchg
test
in
push
or
sti
repz
shlb
cmp
shll
and
sub
mov
xor
data16
shll
lret
sub
xlat
repnz
les
or
loope
daa
arpl
sbb
cwtl
mov
xchg
pop
push
test
fstps
cmp
pop
rol
rcrl
in
lahf
cmp
mov
outsb
in
and
je
in
out
jb
cmp
xchg
dec
sub
or
adc
inc
sbb
or
in
adc
in
jno
sahf
cli
stc
pushf
sti
int3
loope
mov
sbb
imul
jge
inc
out
push
pusha
dec
pop
cmc
inc
in
hlt
jno
sbb
add
lret
xchg
add
loopne
in
sarl
push
mov
sarl
sub
dec
aaa
in
dec
iret
push
lret
iret
pop
xchg
jl
dec
insl
out
insl
sahf
fdivrl
cmp
jmp
orl
cld
cmc
pop
mov
shlb
mov
std
jle
push
jno
lahf
xchg
xor
mov
cmc
repnz
sbb
sub
sub
out
icebp
sbb
pop
inc
lods
sbb
xorps
jb
je
fs
xchg
test
imul
mov
out
xchg
cmpl
lds
sbb
lcall
decl
testl
jnp
mov
push
pushf
jbe
and
push
cmpsb
out
rcrb
xchg
mov
lds
cmc
lret
cld
es
push
sub
mov
and
pop
mov
imul
mov
mov
jecxz
pop
cmpl
cmpb
jb
cmp
and
and
jg
xor
push
pop
push
adc
scas
sti
test
movsl
pushf
std
add
and
cmpsb
movb
rolb
sub
out
cli
addr16
cmp
push
shll
mov
aas
stc
inc
mov
pop
movb
aad
out
mov
mov
ficomps
cld
mov
sbb
dec
cmp
ja
mov
sti
mov
pushf
fistps
aad
stos
adc
xor
push
and
outsl
lret
add
sti
iret
mov
inc
dec
pop
cli
xor
nop
mov
fadds
mov
adc
mov
or
jae
sub
mov
movsb
and
or
mov
jns
or
dec
loopne
push
xor
mov
xchg
scas
cmp
in
inc
jg
mov
jle
dec
mov
xlat
inc
sahf
testb
sbb
cmp
xor
clc
jnp
mov
lds
inc
flds
sub
fst
xchg
inc
mov
mov
adc
mul
push
test
or
in
xor
push
push
lret
and
jecxz
mov
bound
xchg
arpl
jge
xchg
xor
rcrl
out
movsl
cmpb
lcall
into
stos
iret
add
xor
xchg
mov
or
add
shrl
inc
pop
add
cld
sbb
ss
inc
mov
test
mov
inc
imul
fbstp
sbb
push
mov
out
sbb
ret
sub
dec
sub
mov
dec
push
xchg
mov
lcall
sahf
add
aas
mov
lea
lcall
insb
cmp
les
mov
xchg
bound
mov
push
mov
imul
inc
pop
sbb
sbb
or
cmovge
pop
push
sub
pop
es
and
scas
aaa
inc
fimuls
jl
mov
mov
jnp
negb
fstpl
jae
js
and
movsl
sbb
cmp
ret
fisttpl
push
outsl
jg
jns
fdivrl
fisubs
push
rol
pop
rcll
insl
or
mov
add
scas
mov
cmp
inc
jle
dec
jae
cmpsb
ror
cltd
movsl
lods
xlat
jns
or
out
mov
pop
lods
or
adc
daa
cli
xor
int
pop
popf
sbb
mov
mov
out
fdivs
stc
fimull
fsubrp
mov
jne
jmp
dec
pop
mov
mov
xorb
aaa
xor
cmpl
xlat
inc
lods
add
cltd
dec
cmp
push
push
outsb
pop
aam
xor
add
inc
mov
mov
fstpl
jb
pushf
xchg
sbb
adc
in
in
pop
fbld
adc
test
cmc
jb
jne
push
rcr
pop
sub
push
imul
movsb
jo
scas
pop
pop
add
pop
fidivl
lret
das
jno
push
dec
ljmp
push
sahf
xchg
and
sub
pushf
fwait
and
inc
aam
sbb
lcall
lea
int
test
or
pslld
jg
xor
inc
add
pop
cmp
push
out
push
scas
mov
sub
movzwl
or
add
js
jmp
sub
xchg
ja
xchg
roll
data16
stos
dec
outsb
cs
push
shrl
pop
jecxz
testb
les
lahf
jecxz
mov
xor
cltd
sub
mov
sarl
inc
dec
outsb
cmp
add
add
mov
add
xor
push
daa
pop
hlt
sbbb
divb
shll
dec
rcll
lcall
in
stos
push
push
xor
out
into
insb
std
xor
sbb
push
mov
xchg
or
mov
sbb
test
pop
inc
test
jg
stc
pop
and
push
pop
pop
mov
and
cld
sti
add
pop
mov
mov
jns
xchg
into
mov
pusha
jp
pop
sbb
fisttps
cmp
out
out
and
jbe
mov
push
push
jle
mov
lahf
xchg
push
xchg
pop
mov
imul
sysexit
mov
stc
or
mov
dec
push
clc
in
aas
or
ret
dec
mov
ljmp
cmpb
or
test
gs
nop
cmp
lret
repnz
call
xchg
test
hlt
push
loop
inc
xchg
test
pop
mov
dec
sub
jae
pop
mov
out
into
mov
fwait
cmp
scas
inc
jnp
shr
cmpsb
data16
and
insb
mov
ret
xchg
stos
jnp
outsb
fcoml
mov
and
out
test
lcall
sbb
dec
es
add
cmp
pop
lcall
test
dec
sub
les
repz
test
int
adc
test
in
pushf
loope
push
fcom
mov
mov
lahf
pop
xchg
mov
in
pop
or
push
mov
insb
loop
sti
aaa
mov
sbb
sbb
repnz
xchg
pop
dec
les
lea
in
adc
lret
les
stos
mov
loop
nop
ds
lods
add
out
dec
and
sub
add
loopne
add
xchg
xor
pop
and
ds
ficoml
dec
mov
push
sub
pop
xchg
push
jbe
inc
sbb
xchg
mov
lock
cld
jle
xchg
jp
loopne
mov
test
adc
lret
mov
out
ss
into
out
mov
inc
movsl
pusha
xchg
jge
or
insb
lock
mov
and
sub
arpl
mov
cmpsb
and
xor
aas
push
into
fmul
jmp
insl
fisubl
push
xchg
xor
imul
dec
mov
scas
into
test
adc
mov
shll
ret
sub
cmpsb
mov
fimull
test
ss
cmpsl
or
xchg
pop
pusha
leave
call
repnz
loope
or
leave
loope
mov
push
xchg
aad
push
dec
adc
loop
in
lret
movsl
notl
xchg
cmp
popf
push
cwtl
outsl
js
jbe
rorb
and
push
es
dec
xchg
sub
add
pop
push
nop
fldcw
scas
leave
rorl
mov
mov
xor
xor
cmpsl
mov
testl
rclb
mov
ljmp
pop
test
arpl
bound
fcmovbe
inc
mov
ds
adc
popl
mov
jge
fs
les
adc
dec
cmc
fcom
aad
jbe
lea
pop
shrl
aaa
add
push
cwtl
xchg
repz
das
lret
and
loope
repnz
leave
xor
jb
mov
jge
push
xor
shrb
push
mov
stc
das
iret
add
or
adc
out
mov
hlt
cmp
push
out
mov
mov
fnstenv
cmp
sub
push
xabort
shrb
dec
mov
or
inc
dec
lods
mov
cmp
daa
lods
jmp
adc
fldcw
push
icebp
sub
pop
mov
pop
adc
sub
shlb
lds
inc
mov
mov
add
and
pop
or
inc
xchg
pop
mov
movsl
scas
inc
outsb
xchg
div
mov
rcll
push
pop
sbb
and
mov
mov
int3
sbb
adcl
js
imul
fsts
xchg
sti
cmp
roll
sbb
xchg
fdivrs
loopne
jne
lret
lret
push
sbb
aam
push
fisubs
xchg
in
mov
xchg
icebp
xor
mov
enter
popa
scas
or
sub
push
insb
xchg
inc
cld
repz
enter
in
scas
pusha
cmpb
daa
shlb
pop
aaa
push
loop
add
daa
leave
mov
sti
das
or
sub
push
imul
scas
hlt
jmp
push
cmpb
movsl
movl
int
pop
mov
lods
cltd
lods
sbb
xchg
mov
add
nop
rcrl
inc
sbb
cmp
mov
sti
aaa
mov
sarl
lahf
test
outsl
out
data16
stos
mov
inc
or
sub
xor
mov
call
jecxz
adc
and
push
pop
ja
dec
cmc
add
clc
cld
jle
imul
jo
in
sti
dec
cmp
inc
fwait
pop
out
loope
arpl
mov
gs
fcomi
jecxz
test
push
int3
sub
pop
xor
repnz
xor
jo
test
in
mov
mov
aas
inc
fcompl
xchg
push
cmc
lcall
out
cld
movsb
mov
aad
mov
scas
mul
jg
outsb
xchg
push
int
pushl
dec
xchg
stc
and
les
das
stos
mov
mov
or
gs
add
popa
add
imul
or
sbb
mov
inc
add
jbe
add
inc
jbe
ret
insb
mov
shl
inc
lret
addb
rep
fists
test
jb
lock
ss
pusha
adc
or
pop
mov
or
adc
mov
mov
inc
mov
lret
or
lcall
sbb
and
arpl
xchg
add
xchg
dec
lcall
inc
lds
pop
stos
lods
loop
dec
into
mov
popa
dec
outsb
ret
cmp
les
notl
sub
fidivl
in
xor
xor
cwtl
aas
dec
data16
inc
adc
jnp
or
mov
in
push
and
jp
aas
push
dec
push
aas
pop
jb
dec
xor
test
gs
insb
push
fmuls
xor
pop
cmp
lock
cmp
adc
in
sbb
hlt
xor
push
rcrb
cmpsl
dec
pop
sbb
mov
add
pop
das
out
dec
xchg
add
mov
pop
in
cmp
addr16
fcmovnbe
int3
sbb
aad
bound
insl
push
rorl
jge
and
pop
scas
cld
push
dec
cwtl
sbb
cmovo
cmpsl
fidivrl
sub
lret
lea
in
dec
push
xor
sbb
ss
mov
std
addr16
xchg
sbb
mov
in
scas
ds
xchg
mov
xlat
and
inc
fwait
aaa
cmc
in
inc
cmc
mov
inc
mov
movsl
popa
sub
xchg
in
or
mov
mov
mov
stc
scas
and
adc
xor
sub
and
adc
jbe
out
pop
mov
mov
and
loopne
mov
mov
jbe
cltd
or
fidivrl
scas
std
test
fidivl
insl
cmp
sbb
mov
inc
mov
les
cltd
mov
aaa
and
insl
add
fnstcw
fcompl
push
jmp
xor
icebp
xchg
pop
xor
xchg
xor
and
cmc
idiv
sbb
dec
mov
jnp
inc
pushf
shll
stos
outsb
clc
scas
xchg
mov
jbe
shlb
mov
mov
lret
xlat
push
sbb
shlb
mov
shrl
or
push
aad
imul
lds
ret
movsb
pushf
int3
mov
loope
xor
leave
loope
out
mov
dec
jp
dec
dec
ss
ret
ret
xor
jp
push
bound
std
stc
aam
or
arpl
cmpsb
jne
adc
add
push
imul
test
cmpsl
jns
and
sbb
lock
scas
inc
out
mov
xchg
mov
xor
ret
stos
cmp
jmp
cld
jle
add
add
cmpsb
sahf
or
jle
repnz
popa
mov
into
fwait
aas
mov
scas
and
adc
or
cmc
int3
loope
adc
lret
pop
pop
jb
and
daa
adc
adc
negl
sub
in
std
xchg
icebp
push
xchg
sub
sub
and
outsb
div
aam
sub
inc
outsb
in
imulb
mov
cmp
push
sub
pop
lret
mov
daa
cli
addr16
pop
out
repz
pop
dec
nop
jne
push
in
or
out
mov
jb
xor
mov
sbb
xchg
mull
out
jle
int
dec
iret
sub
or
xchg
gs
push
fsub
adc
adc
aad
lods
adc
jmp
pop
pop
repz
xchg
sbb
cmp
sahf
add
std
mov
call
cmp
lret
nop
xchg
inc
movsl
pop
inc
push
adcb
jnp
cld
push
cld
add
clc
mov
xor
std
fs
paddsb
sbb
aad
lods
mov
cltd
repz
and
cbtw
stos
xchg
call
into
fldcw
mov
jp
cmp
adc
movsb
add
in
and
and
popa
add
ss
or
adc
lock
cmp
test
xchg
push
dec
test
pop
in
xchg
movsl
adc
aas
inc
cmp
adc
lods
sbb
add
jns
jae
rcl
mov
or
mov
mov
idivl
mov
and
mov
sbb
xor
jbe
push
or
mull
insb
icebp
lods
jp
mov
rcll
inc
rorl
out
imul
sbb
idivl
fsubrs
jno
dec
sub
pop
and
int3
stos
pop
out
pop
jbe
cmp
lea
cmp
sbb
leave
std
repz
mov
gs
jnp
sub
subl
data16
xchg
push
sub
pop
add
scas
jmp
into
popf
sbb
jmp
xchg
add
add
insl
pop
aaa
jnp
mov
cmp
adc
xchg
xlat
inc
clc
into
add
xor
inc
push
ljmp
ret
xchg
sub
xor
in
hlt
mov
insl
getsec
insl
loop
loopne
repnz
hlt
pusha
inc
xchg
data16
xor
les
xchg
xchg
jle
ja
pop
scas
add
mov
jge
aas
jmp
daa
pop
sbb
jmp
roll
or
icebp
cmp
mov
cmpb
xchg
mov
test
mov
enter
adc
bound
adc
push
mov
pusha
stos
rcll
adc
addr16
mov
pop
rcr
cmp
inc
loopne
das
jl
sbb
xchg
outsl
mov
dec
pop
lock
pop
cs
inc
aam
push
inc
or
mov
xor
lods
xor
leave
cwtl
es
mov
mov
adc
adc
clc
fcomi
jno
les
das
pop
es
push
sub
mov
mov
les
xchg
rol
orl
lods
inc
xchg
ds
push
in
inc
mov
in
mov
push
gs
add
inc
or
xlat
sub
jb
int
das
inc
jae
mov
or
cwtl
andl
jbe
test
shll
adc
sbb
mov
test
test
or
movsl
ficoml
pop
xchg
lcall
hlt
dec
mov
jne
roll
popf
sub
iret
out
ja
out
push
sub
not
push
push
inc
mov
fs
mov
mov
adc
mov
shlb
aaa
negl
jle
sub
add
pop
orl
mov
stc
pop
enter
aad
dec
push
mov
adc
std
jno
aas
out
cmp
add
int
clc
pop
movsl
push
pop
cmp
and
std
mov
mov
jns
pop
mov
mov
out
adc
mov
or
fcompl
jle
push
call
xchg
pop
in
ret
ret
mov
sub
inc
and
in
ret
push
cltd
out
fldt
int
cwtl
cltd
insb
hlt
pop
and
xchg
stc
imulb
vcvtps2pd
mov
jbe
daa
hlt
idiv
aas
ret
repnz
jae
stc
jp
sub
fnstsw
mov
xor
xlat
inc
in
cwtl
inc
cmpsl
test
jnp
test
js
out
xchg
xor
outsb
stc
pop
mov
cmp
xor
xchg
mov
js
mov
sub
and
fsubl
mov
push
data16
push
imul
hlt
insl
adc
fisttps
add
mov
inc
adc
leave
pop
and
dec
negl
xlat
lahf
inc
lds
add
loopne
jne
outsb
mov
xchg
ljmp
adcl
inc
loope
push
gs
lea
inc
orl
movsb
mov
adc
dec
popf
jno
loopne
paddd
stos
inc
jge
popf
into
addb
inc
mov
cmp
pop
sbb
push
fxch
or
sbb
test
js
xlat
div
adc
cmp
xor
pop
mov
imul
cmpsl
inc
cld
test
jb
negl
jnp
adc
sbb
jecxz
aad
mov
pushf
cli
aad
sar
aaa
pop
mov
xchg
jnp
daa
jne
stos
push
jg
loop
xor
mov
iret
xlat
dec
rclb
lret
push
and
leave
sbb
je
jne
add
popa
js
lea
mov
fidivs
jl
mov
rcrb
pop
jno
dec
inc
repz
push
clc
mov
fsubrs
les
mov
xchg
lea
or
fstpl
jb
push
pop
sub
mov
int3
gs
arpl
jno
negl
push
dec
add
xchg
in
movsl
fsubrs
sub
ret
mov
adc
in
rcll
mov
add
or
cmp
inc
dec
and
pop
pop
fadds
insl
addr16
outsb
mov
push
adc
or
mov
push
sbb
stos
mov
mov
sbb
add
sahf
mov
fsubl
jl
pop
mov
push
inc
mov
scas
aad
pop
push
xchg
mov
cmc
adc
push
mov
sub
rorl
push
fs
imul
fs
jl
dec
mov
incl
or
pop
adc
adc
ret
lret
mov
fcoms
in
cli
adc
adc
jl
repz
out
mov
into
addr16
lods
fsubp
stc
cmp
jne
mov
enter
scas
adc
push
lret
fistpl
xchg
mov
fwait
dec
jb
jl
or
cmpsb
jecxz
movsl
mov
and
add
scas
sub
mov
gs
jecxz
mov
repnz
jecxz
push
lods
jle
mov
movsb
push
aam
mov
cmp
shlb
in
inc
dec
sahf
sarl
mov
cmp
pusha
add
xchg
sbb
cld
aad
adc
pushf
sbbl
mov
xchg
aam
xchg
push
roll
mov
pop
and
sub
mov
sub
cmp
fnsave
mov
inc
jmp
fadds
fnstsw
jl
enter
mov
or
and
cmpsl
or
or
jns
sub
and
xchg
dec
jmp
jnp
popa
int
mov
enter
sahf
ss
aad
roll
add
push
call
repz
aaa
fiaddl
xchg
and
loope
ror
or
adc
es
jecxz
dec
inc
mov
jmp
mov
sub
or
pop
push
mov
cli
or
lods
pop
cmc
push
sbb
jne
mov
daa
js
lahf
dec
sbb
jne
xchg
js
jbe
outsb
test
ss
sub
aas
roll
lods
or
xor
xchg
xchg
mov
push
dec
test
add
scas
jp
leave
jne
jae
loop
jmp
pop
rcr
and
adc
aam
adc
lcall
push
pop
sbb
jecxz
jmp
ds
adc
pop
mov
js
lods
inc
push
mov
mov
jg
insb
push
cmp
inc
fwait
cmp
or
pop
nop
xchg
shr
and
jbe
xchg
in
es
push
xor
outsl
push
dec
mov
sub
xchg
loope
mov
movsl
rcll
pop
mov
xor
imul
lock
imul
dec
int
inc
or
jb
cmp
xchg
lods
je
addr16
push
sbb
xor
inc
push
xor
mov
jmp
aas
stos
push
aas
xor
stos
aam
mov
fldln2
and
cmpsb
pusha
clc
pop
test
push
sbb
xchg
movb
fnstenv
into
pop
inc
jl
repnz
jg
mov
loop
fsub
xchg
fistl
mov
xchg
xchg
sahf
jae
stos
mov
andb
shlb
sub
insl
lock
inc
and
jo
mov
mov
pop
jl
test
lds
mov
nop
jmp
iret
pop
mov
and
jg
lock
lret
inc
pusha
mov
mov
cli
in
dec
inc
sbb
mov
mov
into
mov
hlt
mov
out
adcl
ret
test
js
xchg
rclb
inc
mov
mov
push
std
imulb
std
idivb
ror
xchg
pop
xchg
jmp
jmp
pushf
leave
sbb
or
daa
jecxz
ljmp
iret
adc
stc
dec
or
fadds
xchg
call
dec
xchg
fadds
lea
sbb
cmp
add
in
and
jb
fsubs
sbb
jo
dec
xchg
es
test
int3
xor
ficoms
pop
inc
lret
sbb
out
dec
mov
jno
mov
test
sub
mov
xchg
ja
cld
and
jp
rorb
das
sub
insb
jns
mov
rcrb
mov
push
dec
inc
fwait
pop
popl
or
inc
pushf
mov
xor
xlat
std
jecxz
stos
cmp
xchg
data16
jns
jg
je
cmpsl
jbe
not
add
test
test
mov
inc
pop
xor
pop
xor
ja
mov
lea
test
xor
cmpsb
xchg
sbb
dec
cmp
aam
push
int3
or
rcl
stc
mov
xor
xor
icebp
aad
stc
cs
test
ljmp
scas
dec
and
mov
pop
hlt
insb
shll
ret
adc
cmp
push
push
sahf
mov
cmp
stc
adcl
arpl
into
sbb
bound
mov
pop
rolb
mov
aam
push
insl
cmp
data16
pop
pop
jle
in
out
mov
cmp
mov
dec
mov
mov
cmp
rcll
addb
dec
ficomps
movsl
mov
fisubs
in
les
punpckldq
insb
movsl
stc
sbb
rcrl
mov
jne
mov
fcmovu
sub
nop
push
or
stos
add
cmp
push
jp
xor
pop
mov
inc
in
cmp
outsl
movsl
mov
ja
pusha
pusha
fists
jbe
pop
sbb
add
or
popa
mov
pop
push
xchg
mov
addr16
inc
icebp
pop
pop
iret
subb
add
inc
jmp
jp
fucomip
out
xor
adc
sbb
push
jo
push
pop
movsl
shr
push
roll
adc
cmc
and
pop
dec
pop
in
cmp
cmpsb
inc
inc
xor
mov
mov
lcall
jg
rcll
lret
mov
push
dec
neg
and
mov
mov
repnz
mov
fldenv
jne
fisttpll
add
cwtl
repz
mov
rcll
hlt
leave
cmp
or
lods
dec
and
inc
scas
dec
push
repnz
sbb
in
inc
lret
stos
xor
jle
int
dec
pusha
xchg
mov
xor
loop
inc
push
or
mov
cmp
lock
fcmovu
ss
fmull
js
and
xor
bound
add
stc
mov
nop
out
mov
sub
js
sbb
les
xor
out
add
jg
cld
sub
outsb
in
adc
and
pop
mov
cltd
add
lcall
add
stos
shll
das
aad
fists
sbb
xor
in
or
mov
lcall
repz
push
sub
rolb
cs
push
push
inc
in
mov
imul
sub
or
pop
rcr
aad
mov
sbb
mov
mov
add
gs
jno
sahf
mov
xor
rcrl
push
xchg
jp
push
divl
dec
jle
sbb
imul
or
shrb
mov
sbb
int
rorl
push
mov
cmp
and
lock
inc
cmpsl
loopne
and
sbb
lcall
aas
cmp
pop
mov
scas
lods
xor
outsb
subb
cltd
fsubrl
inc
add
testl
jne
ret
and
push
jge
push
xchg
push
aaa
int3
xchg
cmp
jb
mov
jl
jge
sub
add
cld
xor
sarb
clc
lret
loop
hlt
lock
orb
das
ret
idivl
fdivl
mov
lods
xchg
dec
push
pop
sub
jo
int
sub
xor
in
es
and
push
push
cmp
sub
cmpsl
inc
shrb
mov
pop
iret
gs
mov
cmp
stos
insb
mov
sub
inc
inc
daa
xchg
dec
scas
testl
xchg
mov
lea
into
sub
addl
loopne
fisubs
pop
mov
pop
dec
test
ds
dec
pop
xor
cmp
addb
clc
ds
icebp
out
or
xlat
xlat
pop
test
add
pop
jp
rcrb
out
xchg
test
stc
cld
es
lods
jne
addr16
addb
daa
push
bound
sub
loopne
jp
pop
sbb
es
loop
sti
inc
jmp
fwait
jb
lea
and
arpl
adc
inc
pop
in
pusha
adcl
mov
das
lods
adc
jmp
scas
jo
adc
iret
arpl
push
arpl
outsl
pop
mov
jnp
add
inc
ja
add
jmp
sub
loop
xlat
cmpsb
mov
loop
negl
mov
imul
les
leave
cmc
int
mov
scas
cwtl
and
out
aam
subl
fnstsw
lret
mov
lret
add
xchg
out
outsb
popa
cli
imul
fmuls
movb
in
sub
scas
sbb
push
cs
mov
mov
aas
in
push
loop
jmp
fwait
xor
push
lods
outsl
jle
fldenv
adc
inc
orb
xchg
or
lods
fucomi
in
push
dec
mov
adc
push
and
and
sbb
xlat
and
pop
push
inc
cmpsl
insb
test
adc
sub
or
mov
imul
jo
test
jno
mov
cli
std
mov
insl
bound
fsubs
mov
xchg
bound
xchg
cs
cmp
sub
sbb
mov
mov
and
xchg
jno
mov
jp
arpl
rdmsr
movsb
mov
add
sub
testb
filds
pop
dec
push
cmp
lret
sub
sub
imul
xor
hlt
xchg
sub
sub
jns
icebp
add
mov
ficomps
inc
or
sbb
aam
sbb
loopne
shlb
mov
push
jmp
arpl
fidivl
mov
sbb
sub
ds
xor
mov
cvttps2pi
bound
or
sti
rclb
jle
jae
xchg
xchg
dec
sbb
fsub
xor
mov
mov
push
jmp
popf
scas
lock
jl
and
lds
inc
mov
pop
jnp
push
mov
aam
lods
or
push
mov
cmp
mov
inc
sbb
add
rcrl
dec
xchg
adc
push
jle
mov
sarb
push
sbb
pop
dec
iret
xor
out
jecxz
rclb
ljmp
adc
ret
and
push
sbb
fldt
fcompl
push
mov
xchg
jne
jb
popf
loope
xchg
jl
inc
dec
xor
popf
xor
cmp
test
xor
data16
push
in
mov
dec
sub
imul
inc
push
in
add
insb
mov
or
movsl
pop
xchg
push
adc
aaa
es
dec
sbb
add
hlt
dec
out
fwait
pop
lea
add
adc
subb
cmp
ja
xorb
mulb
inc
dec
scas
mov
jb
push
and
jg
cmp
data16
aas
das
sub
add
test
xor
rcl
ffreep
outsb
push
aam
stc
mov
mov
cld
pop
cld
xchg
test
and
sbb
ret
jmp
pushf
test
mov
xor
dec
push
int3
push
jo
cmpsl
cmpsl
push
ljmp
cs
pop
test
push
fldenv
imul
andb
jmp
pop
xchg
push
in
test
pop
cmp
lahf
enter
cmp
xor
outsb
icebp
dec
popl
push
dec
sbb
movb
ret
jecxz
pop
or
cmp
xchg
testb
das
popa
and
or
push
subl
lret
in
pop
sub
jl
das
aas
pop
mov
shll
mov
js
pop
push
shll
aas
push
lret
xor
sti
hlt
xchg
fsubr
jae
sbb
outsl
fidivrs
hlt
jecxz
jbe
push
daa
inc
xchg
jno
sbb
divb
push
ljmp
mov
xor
mov
xor
mov
bound
in
dec
popf
jbe
cmpsl
pop
imul
mov
adc
xor
mov
std
das
cmpsb
shll
orl
in
leave
fisubrl
and
add
mov
jge
adc
in
test
loopne
cmp
mov
lods
jg
inc
repnz
mov
sub
sti
imul
jae
push
aam
jnp
adc
mov
pop
mov
jle
ljmp
cltd
cmpsb
jmp
cmc
xor
push
dec
or
scas
sbb
div
jecxz
xor
pusha
jecxz
stos
in
xorl
out
out
fadds
repz
sbb
clc
mov
insb
and
sub
lret
das
cmp
insb
sbb
jle
js
div
pop
xor
mov
pusha
divl
lcall
sub
sbb
inc
scas
out
pop
pop
jne
or
push
add
frstor
sbb
inc
call
sbb
jae
cmp
in
out
addr16
jne
sbb
push
jae
push
inc
cltd
fcompl
cmp
test
stc
sahf
or
jo
int3
xlat
cld
testl
in
aam
xchg
sbb
add
add
rorb
inc
push
fmull
testb
mov
stc
xlat
push
mov
sub
mov
and
popa
jae
dec
add
mov
and
sbb
pop
jae
inc
dec
ss
jle
loope
cs
pop
jbe
push
ss
scas
test
mov
sbb
sbb
sti
shl
popf
pop
test
xor
xorb
pop
xchg
or
call
scas
push
ss
jle
gs
or
jns
jns
push
mov
push
cwtl
inc
in
sti
mov
sbb
iret
add
ret
mov
std
adc
cmp
xchg
pop
ret
dec
adc
stos
arpl
xchg
pushf
mov
inc
incl
in
jae
push
mov
pop
loopne
adc
cmpsl
pushf
stc
loop
jno
loop
mov
ss
cltd
xchg
iret
pop
in
xchg
adc
out
xor
jb
fldcw
push
sub
aaa
mov
ds
in
push
int3
aad
xchg
sub
cmpsb
and
inc
or
fldt
into
fsubl
jle
and
test
or
jns
divl
mov
xor
mov
inc
insl
negl
inc
xchg
ds
mov
or
jl
mov
test
mov
jb
add
adcl
push
and
and
bswap
sbb
adc
inc
rclb
mov
pop
mov
movsb
cmp
lock
rcrb
fwait
jge
pop
scas
mov
jge
addr16
mov
jle
inc
mov
outsl
shl
cmp
pop
fidivrs
cmp
cmp
popf
push
jbe
dec
cld
or
fsubrp
aam
loope
sbb
jns
jecxz
add
push
pop
or
in
int3
jmp
fmul
mov
xchg
xchg
dec
adc
sub
fidivl
sub
cmp
or
push
adc
or
call
or
dec
movsb
jnp
push
dec
out
jecxz
and
lcall
inc
sti
sub
lret
mov
int
push
sub
mov
pop
dec
pushf
popf
movsb
sub
stos
and
push
clc
cmp
rolb
decl
mov
pop
cmp
adc
gs
lret
mov
aas
xchg
mov
enter
jbe
pop
clc
xlat
mov
sti
and
xchg
test
cmovb
fs
movsl
repnz
ds
faddl
fnsave
pop
jge
xchg
mov
add
mov
sub
sarl
outsb
mov
xor
hlt
mov
insb
mov
hlt
sahf
pop
or
std
xchg
push
js
lret
imul
loopne
adc
daa
cwtl
cmp
xchg
xchg
sbb
imull
in
imul
sub
sbb
push
ds
push
nop
xor
jne
fsubs
addb
fisubrl
cmp
movsb
inc
mov
std
add
sub
xorb
dec
pop
int3
cmpsb
dec
insb
push
add
scas
test
pushaw
jmp
test
popf
rol
fadds
mov
mov
push
or
mov
or
ss
das
xchg
jae
jl
sahf
mov
pop
insb
add
pop
popf
xlat
and
mov
mov
adcb
clc
iret
jno
mov
push
jnp
adc
fsubrs
lods
fisubl
add
mov
icebp
or
dec
pushf
in
test
add
mov
push
rclb
xchg
xchg
mov
loope
mov
sbbb
mov
cmpb
lahf
jg
scas
xor
repz
xor
jae
xor
cmp
fbstp
and
mov
into
pop
imul
mov
or
gs
leave
lahf
in
pushf
xchg
mov
shrl
jmp
sbb
loopne
movb
push
jb
pop
sbb
ljmp
test
mov
insb
and
int3
shrl
mov
shr
jno
stos
movsl
ss
pop
lcall
push
or
iret
mov
sbb
mov
ds
cli
cmpsb
xchg
int
rep
fcomip
and
dec
cmp
clc
xchg
dec
cmp
jmp
aaa
sbb
sub
xlat
push
stc
adc
mov
add
arpl
or
ja
xchg
fnsave
in
test
or
clc
movb
mov
outsb
lea
fimull
fs
movsl
push
imul
out
jl
pop
filds
lret
ret
imul
sub
repz
lods
idiv
bound
push
test
scas
xchg
pop
mov
push
sahf
scas
flds
shrl
and
dec
pop
pop
mov
test
cld
xchg
popf
sbb
ror
test
in
popa
mov
scas
cwtl
sbb
cli
lret
adc
cli
cli
cmp
cli
jns
js
cmp
mov
popa
outsl
adcl
ds
mov
arpl
movsb
sub
je
or
jecxz
hlt
mov
fistpll
imul
sbb
inc
rcl
dec
cmpsl
insb
fs
incb
fistpl
jb
pop
sub
jbe
cltd
movl
sbb
mov
in
sbb
sub
fs
aaa
add
xor
pop
pushf
js
pop
test
fprem
xchg
lods
jne
es
add
jle
cmpsb
loop
push
push
roll
dec
lock
nop
fisubl
pop
mov
sar
dec
in
into
test
das
cs
cmp
jno
sub
xor
sbb
sbb
adc
jp
mov
mov
outsl
and
lea
jecxz
cwtl
popf
ud2
mov
jmp
lret
xor
hlt
add
push
jl
adc
dec
cltd
int
test
mov
outsb
cmp
arpl
mov
lea
repnz
sbb
add
scas
lea
fs
and
icebp
stos
movsl
push
xchg
jb
nop
adc
rcll
sub
pushf
aas
xchg
aad
fisubrs
sub
jae
sbb
lock
arpl
xor
mov
imul
xchg
push
jecxz
cli
or
xchg
ja
sbb
mov
and
fwait
fisttpl
adc
test
pop
cld
shrb
pinsrw
adc
push
mov
inc
test
repnz
fdivp
cltd
pop
mov
stos
mov
or
scas
mov
jmp
das
mov
adc
out
out
xchg
or
lcall
adc
or
jae
gs
rorl
test
xor
neg
popa
js
jl
movsl
bound
ja
aad
sahf
pushw
test
cmp
jp
popf
test
cmp
cs
inc
imul
popa
push
ret
mov
and
fsub
sub
pop
pop
inc
sbbb
out
inc
cmp
mov
add
jg
jae
lret
push
in
adc
sti
and
cmpb
mov
jae
inc
jns
push
aas
negl
xlat
lock
test
dec
cmp
pop
es
inc
push
and
mov
maskmovq
mull
lods
and
fdivl
test
bound
mov
enter
mov
mov
jge
lret
inc
push
cmp
lods
xor
aam
xor
ja
jb
pop
xchg
xchg
jle
or
cmp
ss
rolb
jecxz
lock
and
pop
into
push
int
and
hlt
push
insb
add
xlat
not
out
scas
or
fisubl
adc
es
fildll
sahf
dec
adc
scas
les
jnp
call
in
pop
cmp
pop
ja
aas
popl
sbb
xchg
mov
jp
pop
arpl
mov
inc
les
out
ja
mov
pop
ret
sbb
jo
leave
push
fldcw
jmp
xchg
cltd
mov
inc
aas
shlb
xor
and
xchg
mov
clc
inc
mov
lds
jmp
inc
push
or
fwait
adc
mov
jmp
rcrl
push
in
loope
mov
add
lods
jns
mov
das
sbb
jmp
pushf
xchg
push
xchg
pop
push
or
pop
sub
out
push
xor
or
mov
insl
pop
ret
sub
jecxz
mov
push
jno
add
dec
lock
mov
out
mov
sbb
pop
mov
push
jg
ja
sahf
les
xchg
imul
leave
mov
imul
ret
call
push
ja
xchg
inc
push
xor
push
fisubs
cmp
lret
push
lds
cmpsl
mov
inc
fstl
sbb
dec
ss
cld
jno
add
xchg
fimull
mov
adc
out
xor
sbb
or
jnp
jnp
aas
jnp
cmp
adc
int
and
das
cmpsb
inc
add
mov
test
pop
int
mov
js
pop
mov
or
jl
call
lret
cs
pop
mov
test
mulb
gs
xor
sar
xchg
and
cmpsl
pop
sarb
dec
out
sti
cld
mov
stos
jmp
insb
test
insl
push
xor
arpl
in
out
xchg
jns
je
pop
call
ljmp
lods
add
xchg
call
scas
add
iret
es
mov
int3
inc
dec
dec
aaa
jg
or
jb
lock
lds
roll
stos
insl
test
push
adc
add
sub
adc
jo
inc
jmp
scas
mov
sbb
aaa
pop
xchg
push
cmpsb
stos
cwtl
and
out
ret
mov
stc
jns
xchg
cld
xor
fdiv
inc
sbb
mov
push
mov
push
addr16
mov
add
pop
push
mov
aad
sbb
roll
mov
adc
aaa
inc
fsubl
iret
cmp
les
sbbb
dec
hlt
insb
push
cwtl
pop
add
or
fildll
out
cmpsb
repz
adc
out
or
xor
jns
imul
mov
xor
enter
fisttpl
setne
and
push
sub
push
sbb
inc
add
mov
int3
nop
and
repz
adc
clc
mov
push
shrb
pop
push
jl
push
jle
pop
pop
mov
js
push
bound
pop
cld
or
sub
scas
dec
test
jp
cmpsl
xlat
out
out
xor
mov
add
pop
ja
mov
push
sub
sub
jne
ret
pop
sbb
xorb
xor
and
jb
jne
and
call
dec
cs
jb
das
das
jb
hlt
imul
xor
push
stc
into
arpl
popa
cmp
loopne
push
xor
adc
xor
mov
aaa
roll
sti
cmp
add
adc
js
push
outsb
jo
roll
and
repnz
or
lea
adc
mov
push
out
out
stc
ljmp
sti
add
or
mov
pop
lock
sub
sub
pop
xchg
xlat
add
mov
jmp
shrl
mov
jp
xorl
push
xor
fs
stos
fstps
sub
aad
dec
cs
cs
add
fs
cwtl
mov
jp
xchg
or
mov
movsl
cltd
jecxz
xchg
and
mov
test
gs
das
mov
xchg
cmp
jl
jl
adc
shr
sti
xchg
push
std
insl
jl
dec
fisttpl
mov
mov
cmp
or
pop
cli
push
push
cmp
xlat
push
in
arpl
or
sub
sbb
sub
push
in
sti
loopne
daa
imul
and
lea
fistl
loop
cmp
mov
jnp
sbb
fisttpl
cmp
or
ret
sarl
xchg
mov
and
fiaddl
mov
fs
xlat
xor
push
fdivrs
jp
adc
jb
shlb
mov
mov
add
outsb
and
xchg
fcoms
stc
pop
aaa
and
scas
sbb
jle
nop
and
lods
fxam
mov
push
and
xchg
paddq
inc
loope
sbb
and
xchg
jp
or
push
fwait
pop
add
sbb
inc
sub
inc
jae
cmc
adcb
lret
mov
cmpsl
dec
mov
adc
shrb
sti
insb
out
add
repz
ss
pop
xor
or
ss
lcall
inc
sbb
add
fnstcw
addr16
or
in
push
jnp
sahf
push
inc
xchg
loope
stos
mov
out
addr16
dec
mov
mov
into
insb
test
jbe
push
mov
hlt
mov
or
ljmp
jmp
dec
movb
pop
xchg
sahf
loope
sbb
adc
lods
xchg
xchg
dec
popa
xor
out
inc
cmp
mov
push
or
pop
rcll
jl
lds
mov
mov
lods
cmp
lds
push
mov
jb
neg
pop
std
mov
insl
push
push
rclb
lret
enter
mov
add
shrb
clc
mov
mov
nop
test
daa
bound
nop
add
mov
dec
inc
xchg
push
push
jg
xor
out
cli
ja
mov
cmpsl
push
push
lret
jo
leave
jge
cltd
adc
test
push
jae
repz
or
dec
sarl
xchg
lret
add
pop
mov
jp
faddl
pop
enter
in
outsl
dec
fcompl
mov
push
ja
pop
fbld
dec
dec
cmpsb
or
in
dec
in
aad
xchg
jge
inc
sub
mov
xor
scas
stos
add
movsl
lods
xor
sbb
mov
ret
nop
push
lods
jno
outsl
pop
out
inc
mov
mov
cs
and
leave
cmpsl
insl
fs
inc
inc
dec
xchg
imul
fucomp
aaa
push
ss
ja,pn
add
sti
adc
inc
cmp
sbb
xor
out
mov
inc
adc
iret
inc
mov
ret
inc
push
sbb
ret
jg
pop
pusha
aad
pop
leave
sub
aaa
lret
xchg
popf
inc
insb
fsubl
or
sub
dec
xor
xchg
pop
mov
repnz
lods
ja
rcrl
lods
add
sbb
mov
leave
push
cmp
xchg
xor
loop
jno
jg
lahf
adcb
mov
mov
fisttpl
pop
jge
pop
lahf
mov
inc
pusha
mov
cmp
mov
sub
cld
iret
jecxz
stos
stc
setns
loope
lcall
call
xchg
test
mov
mov
adc
lock
cld
jo
mov
stc
or
sub
mov
mov
xchg
inc
dec
cs
xor
je
inc
jge
jne
mov
xor
mov
movsl
xchg
lock
sti
scas
mov
jne
add
fsubrs
movsl
movsb
into
jns
das
iret
xor
addb
inc
jl
sbb
imul
pop
sahf
sbb
pop
sub
int
mov
shll
jo
fwait
inc
xor
xchg
scas
clc
lock
repz
in
ss
mov
hlt
jae
int3
push
inc
das
sub
icebp
ret
mov
stos
stos
icebp
ds
fwait
popf
stos
or
into
lods
or
notb
jmp
xchg
pop
cs
addr16
shrl
les
mov
xor
xchg
sti
mov
jmp
std
cwtl
dec
scas
in
jno
sbb
sbb
je
sti
cld
jp
mov
cmpb
fidivrl
loopne
xor
and
sub
lock
in
or
cs
pop
aaa
leave
cld
cmp
jecxz
cmp
rcl
into
or
mov
cmpsl
mov
sysret
mov
sbb
inc
iret
or
and
cwtl
out
stos
dec
out
and
xchg
xor
fisttpl
lock
push
test
inc
push
and
mov
inc
xchg
lods
int3
jno
sbb
inc
das
pop
lods
popf
pop
fwait
inc
inc
imul
lret
mov
movsl
inc
jg
ds
mov
cmpsb
mov
movsl
lods
mov
out
xchg
fstl
jae
popa
jecxz
lret
push
sarl
jns
jp
data16
add
and
into
out
dec
in
push
inc
add
jb
inc
aam
out
push
jge
pop
sub
loop
adc
push
xlat
jg
aam
sbb
mov
add
xchg
outsl
jle
mov
and
adc
lea
shll
xchg
push
scas
xchg
add
and
push
or
inc
pop
fldcw
jp
das
orl
mov
mov
insb
mov
mov
nop
cmp
into
jg
icebp
aas
js
adc
in
fabs
jecxz
addr16
incl
insb
pop
and
cmpsb
std
hlt
imul
xor
imul
in
add
lea
scas
xorl
mov
ja
mov
cmp
shrl
xchg
and
adc
sarb
aas
push
mov
rolb
fsub
int3
add
fists
mov
fdivl
adc
test
mov
push
pop
cmc
fcmovbe
mov
sub
dec
aad
xchg
leave
push
insl
stos
sub
adcl
push
bnd
lods
lock
push
xchg
sub
loopne
mov
test
or
jmp
inc
dec
mov
ficoml
inc
jl
shll
push
fdivp
out
inc
call
scas
sbb
test
shlb
movsl
fcom
test
push
pop
cmpsb
mov
loope
popa
pop
xlat
jbe
es
call
sbb
jns
test
and
cld
ret
mov
mov
mov
mov
cmpsb
rcl
jmp
push
fstp
ds
movsl
sti
sarl
mov
mov
insb
jge
adc
sub
mov
in
mov
hlt
andb
movsb
push
faddl
fcompl
push
das
sub
pop
adc
push
add
ljmp
movl
stos
jmp
push
aam
dec
mov
adc
fwait
iret
jbe
cmp
pop
push
or
xor
cmpb
pop
mov
pop
test
pop
mov
and
inc
fidivs
lock
out
lea
fwait
jo
pop
mov
lret
outsb
sub
lret
fs
sbb
std
rep
push
cmp
inc
dec
push
dec
fidivrl
xor
jnp
add
mov
je
into
sbb
mov
xchg
nop
stos
push
shlb
movsb
push
mov
aas
cli
inc
test
mov
xor
cmp
push
pop
xlat
pop
popf
inc
inc
or
adc
mov
out
dec
inc
imul
adc
dec
popf
dec
fsubl
xchg
addr16
fsubrl
mov
jbe
lret
call
ret
xchg
cmp
into
btc
mov
pop
jg
stc
cwtl
in
sahf
pop
jg
stos
adc
or
std
dec
xchg
icebp
jmp
xor
call
fidivs
mov
sbb
mov
add
xor
xchg
push
add
outsb
daa
inc
mov
pop
adc
test
sub
daa
stos
inc
repz
lret
popf
js
subb
loop
aas
cmovge
mov
push
mov
es
repnz
cs
inc
xchg
push
aam
stc
dec
clc
inc
sti
xlat
cld
or
call
dec
push
jge
dec
mov
test
fidivl
leave
mov
xor
cmpsb
pop
mov
lea
xchg
xchg
xchg
and
or
mov
cwtl
js
mov
mov
hlt
mov
jb
sbb
js
daa
cltd
and
fs
sbb
mov
dec
js
out
xchg
jae
pop
testb
sub
loope
loope
xchg
in
sbb
and
cmc
loope
dec
jns
xchg
popa
cmp
lret
mov
clc
push
scas
and
push
fldt
inc
xchg
inc
sbb
cltd
jle
sbb
pop
inc
imul
mov
xlat
push
cmpsb
call
in
in
aam
jecxz
mov
stos
in
pop
pop
enter
mov
push
repz
dec
addr16
enter
outsb
xchg
aas
add
clc
sbb
mov
jle
add
jnp
mov
push
jo
xor
adc
call
dec
mov
jp
pop
xchg
arpl
push
mov
in
inc
sbb
sbb
out
es
in
pop
fcomps
fildl
hlt
inc
ja
adc
fisubrl
push
hlt
dec
jp
cmp
jp
repz
sub
pop
fdivs
ljmp
pop
jmp
push
outsl
sub
fists
sbb
cwtl
inc
push
mov
cli
sbb
cmc
mov
outsb
pop
pop
ljmp
or
mull
inc
mov
stos
push
sti
imul
push
or
repz
mov
push
mov
shlb
pop
fwait
mov
jo
sub
dec
cmp
ds
xchg
jmp
pop
jl
shlb
roll
mov
popa
repz
dec
adc
or
mov
mov
rclb
xchg
jle
imul
inc
mov
pushf
add
or
pop
loope
iret
pop
clc
cmp
sub
mov
xor
add
cmp
jnp
sahf
pop
not
push
xchg
sbbl
iret
sbb
cld
in
fdivrs
int3
pop
mov
or
pop
xor
lcall
pop
inc
test
clc
out
movsb
aam
xor
sbb
lret
mov
dec
inc
mov
cmc
adc
or
pop
aaa
sbb
xorb
jle
xchg
sbb
fisubrs
je
inc
and
xor
seto
sbb
or
xchg
aam
popa
movsl
xchg
inc
mov
orb
xchg
cmp
fistpl
aas
xor
jno
out
mov
inc
jp
dec
adc
xchg
out
xor
or
sub
bound
cmp
xor
lret
ret
addr16
push
lods
addb
outsl
cs
and
adc
inc
popf
in
fldl
xchg
inc
jo
inc
xorl
aaa
movsl
mov
jg
inc
inc
add
and
test
mov
mul
jl
addr16
out
fmul
xchg
les
xchg
shr
lock
fisubrs
ds
cmc
daa
imul
mov
jo
mov
out
pop
imul
cmp
imul
in
fiaddl
add
lret
or
test
in
and
cmp
and
cmpsb
bnd
sub
sbb
cmp
fsubrl
lds
aas
enter
sub
lcall
pop
daa
ret
shll
enter
xor
xor
imul
sbb
mov
mov
inc
enter
je
xchg
or
and
xchg
sub
int3
jno
in
out
ficomps
push
out
and
xor
cs
or
test
andb
cmp
add
lea
xchg
push
mov
mov
xchg
stos
sbb
aam
in
dec
arpl
fadds
dec
in
jne
adc
repz
cld
sahf
repz
push
daa
pushl
pop
dec
in
in
pop
es
cld
adc
inc
std
jg
inc
pop
fnstenv
xchg
mov
dec
xlat
pop
hlt
dec
test
aas
call
xchg
sub
add
mov
ja
std
test
enter
cmp
sub
xor
lods
push
cmpsl
sub
adc
outsl
mov
push
insl
xor
push
dec
fidivl
arpl
out
mov
pushf
sub
std
mov
das
aas
stos
add
push
and
js
lock
lods
fwait
jae
mov
aam
ds
ror
xor
movsl
jmp
xchg
jmp
cmpsl
in
nop
xchg
jnp
mov
sub
dec
cmc
insl
inc
dec
pop
shrl
pop
or
popf
enter
jbe
mov
mov
inc
xor
adc
push
iret
add
shll
jge
mov
and
xchg
cmp
lods
push
mov
mov
lds
shrb
std
std
xchg
mov
jg
jae
cmp
rolb
int
cmc
mov
adc
lea
jne
cmp
pop
sahf
daa
pop
adc
aas
adc
dec
mov
xchg
jg
xchg
jecxz
jne
outsl
pop
cmp
inc
inc
cmpb
pop
or
cld
pop
pop
scas
cmpb
inc
or
les
orl
jecxz
fidivs
jecxz
mov
mov
jnp
bound
mov
movntq
out
fstpt
loop
pop
inc
cmp
and
stos
mov
jmp
xchg
pusha
js
mov
test
push
fbld
test
jne
daa
cmp
in
push
mov
xor
out
outsb
iretw
xor
cwtl
mull
js
inc
out
pop
sti
stos
xchg
mov
pop
add
fstpt
shll
loopne
aas
and
jbe
dec
ljmp
ficoml
push
mov
lods
push
repz
dec
push
adc
or
jecxz
jo
add
data16
fs
xchg
push
mov
or
xchg
pop
push
jmp
mov
add
mov
imul
shrb
xor
mov
idivb
push
xor
xor
movsb
cld
int
push
dec
mov
mov
inc
mov
fstpl
fstpl
rclb
and
mov
xor
mov
cmc
xchg
jecxz
loope
lret
cmp
mov
int
jae
cmpsb
sar
cmpsl
xchg
push
mov
mov
push
outsb
xchg
push
or
ss
negl
shrb
lods
or
cmc
shll
cmp
sbb
out
inc
js
xchg
hlt
aas
inc
shrl
in
fcoml
imul
cmpsb
test
jne
adc
aas
scas
in
mov
pop
bound
repz
lea
ljmp
xorb
repz
jecxz
push
rcll
add
dec
pop
cld
jns
test
lds
dec
inc
pop
cmp
ror
push
pusha
bound
push
or
lods
sub
ja
or
lcall
pop
cmp
mov
cmp
and
pop
xchg
sbb
imul
fdivr
insb
ret
cwtl
jbe
and
ret
jbe
sbb
fadds
mov
call
pop
fs
add
pushf
adc
push
rorb
push
xchg
jg
dec
mov
jge
dec
push
jae
cmp
dec
sbb
xor
mov
and
cmp
out
outsb
cmp
mov
ret
dec
push
into
inc
jl
mov
int
ljmp
mov
popf
mov
mov
push
insb
das
call
dec
shr
ds
das
or
push
or
xor
cwtl
adc
sbb
xchg
lods
adc
adc
push
sub
dec
into
ds
add
in
fstl
adc
loop
mov
dec
into
addl
or
aas
jg
mov
add
push
pop
leave
dec
mov
mov
loop
shl
mov
adc
fdivr
imul
outsb
mov
xchg
mov
pop
mov
sti
test
test
mov
enter
inc
add
test
mov
das
shrb
mov
and
je
dec
popf
mov
and
xchg
mov
or
fldenv
cwtl
daa
pop
idivb
xchg
fwait
mov
mov
fmulp
imul
loop
aaa
int3
rcr
das
call
pop
sbb
jb
ljmp
outsb
scas
int3
xor
lock
repnz
adc
xor
test
push
ret
sbb
out
lcall
xchg
cld
orl
push
cmpsl
loop
lcall
call
fldt
or
inc
inc
stos
out
out
or
hlt
xchg
imul
and
mov
push
rorb
sub
stc
out
mov
insl
fcmovnu
mov
push
lods
movl
rcl
cld
xor
xchg
and
leave
mov
fstp
cwtl
push
and
jge
or
mov
jae
push
xor
mov
int3
fnstenv
adc
enter
data16
cmp
mov
or
or
push
adc
xlat
adc
mov
dec
test
xor
neg
test
insb
add
in
enter
jl
mov
fwait
cltd
aaa
mov
pop
sbb
data16
inc
push
sbb
xor
push
pop
orl
jle
lahf
ret
sub
jns
lods
pop
outsl
cmc
lea
xor
jne
movsb
popa
sbb
cmpsl
or
sub
loop
imul
jbe
icebp
iret
push
test
inc
lsl
cwtl
or
push
ret
add
lea
mov
daa
adc
xchg
testb
sub
fwait
mov
pop
xchg
lret
test
ret
std
test
jb
aas
xchg
or
ret
add
cmpsb
jmp
inc
sbb
clc
xchg
mov
xlat
divb
dec
cmpsb
mov
jle
shl
test
mov
dec
mov
fstpl
jle
inc
rcl
iret
push
icebp
test
movsl
call
or
sbb
and
lcall
aam
popa
jle
dec
xor
jbe
mov
push
ja
xchg
mov
in
xor
cltd
add
sbb
xlat
jmp
adc
xchg
leave
sbb
aad
pushf
loop
xchg
xor
ljmp
shr
lcall
ret
les
pop
inc
fisubrs
call
or
mov
test
mov
mov
hlt
xchg
call
mov
mov
pop
pusha
mov
das
pop
or
adc
push
stos
movsl
ljmp
int3
inc
or
int3
enter
lock
sbb
test
inc
dec
cld
mov
lds
lods
icebp
fs
sti
xchg
xchg
imul
xchg
aad
xor
hlt
mov
cmpsb
lods
adc
xchg
clc
xor
mov
mov
test
jmp
sbb
movsl
adc
insl
mov
pop
adcl
andl
sub
pop
sub
mov
in
cmp
scas
aad
sahf
sbb
loop
mov
out
xchg
or
mov
gs
mov
gs
cmp
jbe
cwtl
mov
ret
sbb
movsl
insl
pop
jbe
insb
fdivr
fdiv
dec
pop
nop
and
dec
jl
test
ja
aam
jbe
mov
or
insb
in
pusha
int
xor
int3
push
xchg
adc
stos
insl
mov
lret
and
add
ret
mov
addr16
or
es
sbb
cld
mov
xor
sub
das
sub
add
ficompl
mov
pushf
mov
out
dec
lret
inc
mov
mov
loopne
xchg
pop
lock
lret
mov
dec
pop
mov
add
mov
sub
shll
push
jo
sub
xchg
lods
sbbl
negb
aaa
je
std
cmpsb
mov
cld
sbb
frstor
or
cmpsb
fwait
push
jmp
or
notl
ror
add
sbb
jge
and
hlt
jne
lcall
mov
mov
int
push
inc
loopne
sub
cli
mov
sahf
pop
notb
mov
dec
fildl
adc
mov
out
jp
mov
xchg
cwtl
cld
xchg
xor
out
xchg
jo
push
call
test
in
xchg
stos
mov
mov
nop
mov
dec
push
mov
hlt
cmpsl
sub
test
ja
inc
test
outsl
pop
add
outsb
pop
fxam
push
sahf
in
dec
leave
mov
imul
xchg
ja
cmpsb
bound
lods
pop
xchg
scas
mov
mov
pushf
inc
mov
pop
pop
bound
lret
aaa
mov
xor
faddl
or
inc
mov
mov
scas
and
mov
jae
push
cmpsb
and
fidivs
repz
int3
xchg
xchg
and
lea
ja
pop
push
js
push
repnz
daa
push
push
sub
call
mov
pop
cltd
mov
test
mov
or
andl
mov
add
jl
stos
sub
or
mov
mov
push
cmp
cmp
mov
add
icebp
lods
jns
in
xchg
xchg
push
dec
pop
arpl
add
js
push
mov
push
movsb
loopne
add
jg
add
cltd
sub
ss
xchg
or
imul
cmp
add
call
mov
mulb
push
outsl
ljmp
fcomp
xchg
jns
mulb
or
sub
insb
pop
jmp
stc
imul
pop
and
jl
pmaddwd
push
push
or
xchg
pop
mov
push
xchg
repnz
xor
sarb
push
leave
sti
daa
scas
aaa
les
jl
pop
lcall
mov
jmp
jecxz
mov
insb
jo
scas
dec
xor
cmp
movsb
out
pop
lahf
test
mov
ret
cmc
mov
lahf
inc
inc
cmpsl
and
pop
mov
xor
std
hlt
pop
dec
test
lret
insl
push
mov
or
jp
push
mov
sbb
xchg
test
xchg
push
cmpsl
mov
out
push
mov
mov
testb
mov
and
aam
popa
jmp
fwait
add
mov
xchg
sahf
jg
aam
dec
or
dec
push
push
xchg
pop
add
jle
sahf
xor
lods
mov
sbb
xchg
adcl
mov
test
push
out
pop
roll
cmp
adc
cmp
fstps
adc
loop
and
xchg
bswap
xlat
push
pop
cmp
inc
inc
mov
je
insb
stos
inc
cli
or
out
fstps
push
mov
jnp
cli
popf
dec
pop
popf
adc
dec
add
subl
filds
testl
ljmp
je,pt
je
repnz
call
jb
mov
cmc
pusha
mov
mov
xchg
mov
and
not
subb
push
test
cmpsb
jo
cmpsb
outsl
loope
shlb
jnp
mov
incb
xor
adc
pushf
push
gs
in
mov
sbb
je
addl
mov
sub
clc
pop
in
aad
xchg
insb
sbb
pop
movsb
add
sbb
movsb
imul
cmp
insb
movsb
inc
addl
repz
fistpl
sub
pop
cmp
or
arpl
push
xor
bound
out
jl
int
pushf
push
fsubl
test
push
hlt
mov
scas
aad
incl
sbb
and
mov
xor
aam
jns
mov
js
or
movsl
xor
repnz
mov
sub
fiaddl
add
lock
dec
scas
cwtl
insb
cltd
mov
mov
or
test
sbb
mov
and
add
insl
mov
stos
push
test
leave
mov
aas
sti
fists
xor
andl
jle
add
mov
cmpsl
aam
xchg
mov
mov
push
dec
aaa
mov
fidivrl
lcall
add
push
movsb
adc
out
adc
insb
xchg
dec
sub
add
mov
pmaxsw
lahf
fists
lcall
and
loope
inc
fdivl
shll
repnz
inc
dec
mov
inc
inc
nop
adc
mov
xchg
sti
adc
imulb
enter
cwtl
shlb
xor
mov
mov
mov
sbb
test
icebp
inc
aas
cmc
gs
push
sub
ret
outsl
stos
popa
iret
xchg
inc
adc
out
sbb
dec
push
imul
xchg
mov
test
outsb
pop
enter
into
mov
jge
divb
ds
loop
xchg
nop
sub
lret
sbb
std
adc
fsubl
and
jnp
and
lcall
xchg
decb
xchg
outsl
bound
nop
cmp
js
dec
jno
dec
fistl
push
mov
dec
jns
pop
imul
adc
mov
xlat
xlat
mov
fwait
xor
imul
and
dec
inc
add
ljmp
mov
roll
jecxz
cmp
aam
iret
cmc
pop
cltd
push
cmp
push
out
cmp
xor
shrb
int3
jl
sub
test
incl
fildll
and
je
les
popf
test
inc
pop
xchg
pop
in
mov
cmp
pop
test
and
aaa
mov
arpl
jge
inc
cmp
cmpb
cld
adcb
push
jle
mov
add
cmp
and
in
jb
push
jo
pushl
push
out
push
aas
mov
loop
enter
push
lds
call
sub
mov
mov
push
ss
and
iret
pop
pop
test
cltd
sub
jmp
loop
sbb
imul
outsb
fiaddl
std
add
xchg
ret
add
sahf
scas
mov
mull
sub
fildll
mov
pop
jne
cmp
pushw
cli
mov
in
cld
stos
lret
aam
jle
push
cmp
pop
prefetch
xor
dec
or
ds
jmp
inc
rcrb
push
and
in
ficoml
add
sahf
cmpl
test
xchg
pop
sub
and
sahf
jne
cwtl
sub
add
inc
lods
jnp
fs
loope
fs
add
in
insl
mov
sbb
jo
add
addr16
inc
std
cmc
jp
fs
dec
push
es
leave
popa
mov
dec
es
shll
mov
ja
mov
xor
mov
in
rcrb
add
loope
push
mov
jmp
mov
pop
mov
jecxz
mov
jnp
in
cmc
ja
pushl
xor
jg
and
and
adc
push
inc
inc
sti
xor
ds
fwait
cmp
or
push
cmp
xchg
jle
and
fld
sub
pop
xchg
repz
aad
outsb
testb
mov
xor
pusha
mov
cmpsl
push
jae
ljmp
nop
scas
iret
loop
add
scas
stos
push
int
aaa
pop
shlb
dec
dec
out
and
rcrl
nop
rcrl
pop
enter
xchg
lods
pop
sbb
pop
ja
push
jg
cmp
js
fisubs
xchg
cmp
xchg
xor
es
fisttpll
pop
pop
in
xor
dec
cmp
cmp
inc
sarb
ficomps
mov
aad
lret
dec
popa
ret
pop
jne
loopne
cmpsl
jge
fs
pop
cmpsl
insb
sarb
sbb
or
dec
pop
mov
push
fs
or
dec
mov
pop
sbbb
mov
pop
bound
pop
dec
mov
mov
push
dec
and
std
xchg
daa
popf
movsb
jo
mov
aam
call
adc
pusha
in
sti
jge
stos
mov
push
dec
push
mov
xorb
pusha
sarl
loopne
jo
pop
pop
fnstcw
loopne
xchg
mov
jl
or
cmp
or
cmc
test
pop
push
mov
repnz
jne
adc
shll
sub
mov
add
jmp
rclb
fdivs
mov
sahf
push
or
push
int3
jmp
xchg
mov
in
rcl
sub
mov
repz
xor
std
sub
and
dec
dec
mov
add
adc
and
add
sub
addl
ret
repz
push
and
insb
inc
jnp
shl
or
ret
mov
push
popf
imulb
or
shrb
adc
cmp
dec
aas
lahf
test
inc
nop
xchg
pop
sub
pop
and
shl
lret
mov
mov
jl
aad
imul
xchg
lock
cmp
lods
cli
lea
push
mov
cld
cmpsl
icebp
sub
pop
and
fisttpl
push
clc
sub
dec
lret
xlat
into
pop
xchg
push
fptan
pop
pushf
push
int
mov
mov
push
sub
adc
in
jp
ret
les
hlt
or
inc
js
cmpb
and
adc
jge
pop
jecxz
mov
test
repz
rol
mov
out
ret
xchg
pop
push
insl
lahf
std
movsb
sbb
dec
inc
fiadds
rclb
pushf
hlt
mov
mov
clc
ret
fcoms
lahf
icebp
fldl
repnz
stc
stos
out
push
lgdtl
xchg
stos
xchg
jb
call
out
mov
es
imul
shll
pop
xor
repz
push
stos
jnp
fnsetpm(287
repnz
sbb
sbb
pop
jge
dec
out
rolb
call
hlt
ret
mov
sbb
mov
scas
addr16
cli
movsl
orl
cmp
mov
xchg
add
mov
mov
das
imul
push
stos
bound
cmc
std
fisttps
test
popa
rclb
push
shl
cli
sub
in
bswap
pop
adc
xchg
sub
xor
xor
inc
xchg
xor
push
pop
add
insb
mov
jl
push
es
push
hlt
into
pop
pushf
out
dec
cmp
jae
test
mov
aad
mov
jo
dec
jp
add
pop
inc
iret
xchg
je
pushf
dec
sbb
aam
daa
push
rcrb
dec
sbb
dec
push
ret
test
mov
mov
sub
mov
xor
ds
xchg
xchg
mov
hlt
jo
jecxz
inc
mov
pop
push
out
add
pop
mov
daa
jnp
and
jge
ret
test
arpl
outsb
jne
push
enter
addr16
sub
subb
jno
push
sahf
or
xchg
fwait
push
or
or
or
pusha
insb
push
iret
jl
mov
imul
mov
mov
lock
pop
cmp
push
jo
push
push
movsl
mov
ficompl
mov
gs
pop
or
clc
out
in
in
neg
popf
loop
daa
lds
or
loopne
pusha
cmp
xchg
mov
sbb
cmp
hlt
adc
add
loope
push
mov
nop
fldenv
pop
cmp
aas
outsl
sbb
std
pop
or
lods
pop
loope
cmp
jge
scas
inc
fimuls
vpcmpgtb
dec
popa
xchg
pop
xchg
out
movsb
mov
push
sub
popa
inc
adc
in
rorl
mov
test
cld
fdivrs
sub
xchg
jp
lret
and
dec
bound
repz
call
xor
test
mov
xlat
icebp
pop
add
or
test
sub
insl
sbb
pop
sahf
fs
je
dec
add
jnp
inc
fldcw
inc
xor
sub
or
push
cmp
das
sti
jecxz
lods
fisubs
scas
lods
sub
in
gs
icebp
das
inc
jp
jp
xchg
sahf
gs
lods
cmpsb
shlb
sub
mov
fldenv
inc
sbb
inc
push
je
push
mov
fdivp
push
fisubs
ds
jns
das
cmp
adc
push
sti
pop
mov
mov
lret
dec
in
sbb
das
ret
cmp
jecxz
mov
addr16
dec
xchg
or
mov
lret
aas
sub
icebp
pop
sub
pop
popl
icebp
ds
outsb
insl
inc
or
cs
xchg
and
pop
xchg
cli
rolb
cmpsl
and
mov
outsb
mov
and
pusha
xchg
leave
dec
cmc
pop
mov
jns
pop
push
sub
out
movups
lcall
inc
mov
gs
cmp
cmp
icebp
mov
ret
jno
imul
xor
adc
roll
xchg
mov
jmp
imul
outsb
push
rcl
push
scas
cmp
or
adc
mov
pop
mov
ds
testb
mov
outsl
push
movsl
lcall
push
pop
in
add
mov
and
rolb
cmp
mov
movsb
jb
fstl
or
or
sbb
or
in
mov
int
pop
fstpt
mov
add
bound
call
cmc
dec
outsl
mov
fldl
pop
dec
mov
cltd
push
adc
ret
mov
mov
mov
jnp
mov
loop
sub
movsl
test
cmp
add
xlat
cmp
and
mov
stc
ror
xchg
into
mov
hlt
cwtl
jnp
xchg
daa
mov
inc
jmp
addr16
std
dec
jl
mov
cli
xor
test
cmp
inc
test
mov
jno
jp
xor
fsts
lret
dec
cmp
pop
je
imul
push
int3
inc
mov
jge
cwtl
xchg
xchg
les
or
dec
div
sbb
lods
cmp
inc
cmp
test
lcall
mov
mov
xchg
xchg
stc
addr16
lret
sub
mov
aaa
int3
xchg
popa
sbb
lods
pop
cmpsb
rcrl
loope
test
mov
lcallw
mov
jb
adc
out
fdivrl
and
aad
or
repz
and
add
dec
pop
push
int
out
or
and
fldcw
outsb
in
xchg
or
cltd
pop
add
lods
push
icebp
xor
loopne
fwait
mov
sbb
inc
clc
pop
les
loop
out
insb
sub
ficompl
insl
arpl
movsb
add
addr16
testb
inc
add
mov
stos
push
push
loop
or
sub
in
push
or
dec
push
sbb
dec
test
ljmp
imul
fnstcw
push
outsl
lods
cmpb
loop
out
movsb
dec
aaa
mov
iret
shlb
xchg
mov
hlt
cmp
mov
and
push
push
cwtl
leave
lcall
pop
mov
out
ret
xchg
dec
cwtl
pop
add
push
aam
in
or
hlt
push
dec
cmovno
dec
test
sub
bound
sbb
mov
dec
sub
mov
dec
aad
dec
stos
test
shrb
cmpsb
mov
pop
jmp
cs
jnp
xchg
cmp
mov
cwtl
jns
jns
or
xchg
loop
popf
sbbl
push
mov
mov
xchg
fcomip
jge
dec
addr16
sbb
jno
mov
dec
fistpll
push
mov
dec
jno
pushf
cmp
adc
jb
imul
add
and
jae
clc
insl
mov
xor
leave
jecxz
jmp
xchg
lock
mov
dec
or
shlb
cmp
fcom
or
inc
xor
roll
push
adc
and
adc
out
dec
fimuls
mov
popf
inc
aas
inc
push
jb
rol
lods
mov
hlt
cltd
mov
jge
sarl
lea
and
out
push
in
jp
daa
mov
add
jmp
mov
dec
imul
addr16
push
mov
outsb
push
inc
mov
sbb
test
aas
pusha
aad
push
je
sahf
mov
shlb
mov
int
jne
mov
jmp
movsb
repnz
out
in
and
ljmp
push
mov
inc
lock
fs
lret
adc
mov
jle
ret
jne
jmp
sub
int
lea
add
dec
cltd
mov
adc
divb
push
mov
lret
stos
enter
es
pop
mov
mov
jmp
inc
xchg
inc
shlb
sub
movsl
pop
mov
push
mov
sbb
jo
fdivrs
idiv
fwait
sbb
pop
je
cmp
popf
popf
cmp
jmp
scas
dec
int
mov
add
sub
inc
dec
frstor
pushf
mov
popf
and
ljmp
add
pop
mov
sahf
pushf
hlt
xchg
inc
or
cli
cmp
push
sarl
mov
pop
std
cmp
inc
mov
jno
cmp
faddl
sub
xchg
add
xchg
inc
loopne
es
mov
sbb
mov
cwtl
add
dec
add
fucomp
jecxz
lret
cld
cmp
cmp
hlt
es
out
insl
pop
inc
call
arpl
sbb
into
inc
scas
fs
aad
outsl
pop
push
test
lock
fildll
mov
aam
jl
dec
movsl
jle
push
les
lahf
xlat
pop
ja
cmp
rclb
shll
adc
addb
mov
ss
mov
dec
dec
ret
movsb
aas
push
std
push
test
xor
add
repz
je
push
xchg
mov
fcoms
pop
test
mov
stos
dec
jle
jge
add
jp
outsl
xor
push
call
in
stos
fwait
xchg
rcr
dec
int
add
ror
pop
cmp
push
lods
mov
mov
xor
adc
sub
mov
push
fwait
mov
pop
xchg
daa
mov
cmp
loope
gs
mov
dec
mov
jae
mov
mov
loop
sub
stc
add
dec
and
call
add
mov
mov
mulb
xor
sbb
inc
add
loopne
pop
cltd
loop
aas
jnp
mov
or
outsb
jp
loopne
pop
adc
outsb
icebp
or
mov
shlb
fs
xchg
xchg
xchg
es
pop
test
gs
mov
clc
mov
fsubrl
sbb
xor
xchg
scas
lahf
sub
cld
fnsave
ret
mov
cltd
ja
lds
orb
push
xor
in
jno
daa
push
or
jecxz
mov
push
adc
mov
jle
push
push
mov
mov
and
int3
cli
sub
mov
mov
fcomps
das
mov
add
sub
sbb
sbb
iret
jmp
out
xchg
lock
fucompp
es
popa
dec
jno
stc
mov
jecxz
inc
jo
test
int
bound
insl
or
push
scas
addr16
imul
dec
pop
pop
mov
mov
pop
shl
push
jmp
mov
push
dec
pop
jno
ss
out
jno
pop
jne
mov
jno
jbe
push
mov
addr16
daa
jb
push
mov
negb
pusha
and
mov
mov
pop
dec
movsb
mov
push
mov
lret
mov
cwtl
xor
xchg
jb
xchg
int3
pushl
icebp
in
addr16
mov
inc
mov
dec
fcomps
or
sti
movsl
mov
scas
or
rcrb
dec
dec
cmp
out
iret
out
lds
sbb
sbb
ja
pop
cli
xor
lahf
insl
dec
jns
mov
jns
lcall
and
jne
rcrl
sub
jle
je
mov
push
test
in
shll
jns
mov
add
sbb
mov
shll
push
pop
mov
scas
fcomip
xchg
insb
sbb
dec
pop
mov
inc
or
xchg
add
shl
and
aaa
rorl
fdivp
jns
sbb
icebp
mov
and
inc
cld
pushf
imul
sub
push
sub
mov
imull
out
les
loop
gs
inc
aam
in
jno
arpl
call
test
shl
mov
rcrl
or
push
jg
bound
and
mov
add
jmp
shrb
or
cltd
push
int
xchg
mov
add
into
pop
imul
pop
fwait
rorb
or
out
sahf
test
rcrb
les
enter
jge
xchg
and
out
pop
loopne
stos
int
test
xchg
popa
test
outsl
dec
ljmp
icebp
test
xchg
mov
add
lcall
in
gs
cmpsb
sub
jo
add
lods
popa
lds
stc
out
mov
test
mov
or
and
mov
pop
hlt
xlat
rorl
inc
cmp
addr16
fdivr
loop
pop
push
enter
mov
pusha
xor
lods
jg
iret
mov
mov
jg
testb
push
xor
fdivrs
fs
mov
bnd
cld
loop
stos
sbb
mov
jo
std
inc
push
and
test
popa
dec
jo
bound
stc
xor
mov
enter
mov
xchg
ror
push
stc
sahf
or
rorb
pop
or
sbb
shlb
ret
add
pop
test
cmp
je
repnz
dec
pop
adc
sub
mov
or
push
jg
xchg
lret
popa
xchg
movsl
ret
pop
cmp
test
js
add
in
sub
jnp
push
iret
push
mov
fnsave
push
aam
mov
and
out
outsb
fs
mov
jae
mov
test
mov
push
imulb
adc
and
inc
nop
mov
inc
dec
and
test
loop
add
sub
or
movsb
xor
jae
stos
sti
repnz
mov
stos
test
fs
mov
dec
sub
imul
popa
or
ficoms
jmp
push
inc
cli
inc
ret
sti
cmp
mov
test
sub
mov
push
pop
xchg
dec
mov
adc
call
push
push
in
xor
jp
enter
fistpl
and
dec
pushf
ret
insl
insb
adc
mov
nop
stc
into
icebp
inc
out
aaa
test
lock
data16
inc
pusha
push
jmp
ret
enter
mov
lret
jnp
pop
mov
scas
sahf
int3
pop
push
push
xchg
mov
std
jnp
or
lods
cmp
mov
mov
sbb
sub
arpl
clc
fst
inc
mov
leave
enter
inc
mov
iret
int3
dec
jmp
and
xchg
bound
and
shl
mov
jae
mov
pop
mov
andl
rcrl
je
sub
push
cli
int
lds
pushf
mov
cld
in
jno
rorb
std
and
mov
ficoml
xchg
cli
loope
pop
out
popa
cmc
xchg
xorl
jmp
test
pop
nop
push
mov
push
push
sar
ror
js
incb
mov
mov
movsl
pop
ret
data16
rcrb
dec
addr16
dec
sarb
rorb
push
sbb
loop
fstl
stos
dec
mov
in
sub
pop
in
std
test
pop
out
cltd
mov
clc
aas
stos
arpl
mov
pop
sbb
dec
andb
push
fs
aaa
in
add
or
jmp
sti
jg
cmp
or
jecxz
dec
movsb
xor
and
xor
hlt
inc
xchg
jp
bound
and
mov
push
adc
loope
or
add
push
stos
shrb
jecxz
pop
pop
sbb
xchg
or
sbb
push
inc
push
ss
jnp
aas
lods
add
int3
or
cltd
xor
sub
xor
xor
pushf
mov
scas
mov
pop
xor
pusha
pop
jae
mov
inc
jo
movsb
mov
xchg
fs
adc
movsl
adc
lds
mov
pop
lock
and
add
mov
test
pop
lret
pop
scas
push
push
addr16
aam
pop
shrl
pop
mov
fstps
xor
fnstenv
xchg
cmp
cmc
pop
xchg
jbe
lahf
rorl
cmp
mov
mov
pop
sbb
xchg
pusha
imul
jmp
and
push
jp
data16
repnz
lahf
stos
cs
testl
popf
enter
fcoml
aam
xchg
xor
pop
bswap
cmc
insl
xchg
xchg
sahf
andl
push
dec
lods
fcoml
icebp
jns
fsubr
xor
push
jbe
push
lcall
ret
and
stc
mov
loopne
lods
or
insl
cmpsb
inc
and
sbb
sahf
aad
add
outsb
xchg
lock
mov
and
aam
dec
into
pop
push
mov
test
sub
sbb
or
shl
or
add
fwait
aad
sub
test
sahf
jne
pop
xchg
xchg
in
mov
dec
dec
outsb
enter
or
inc
es
insl
lods
mov
push
fcomps
shlb
cs
cmc
or
cltd
ljmp
add
jle
dec
push
icebp
push
test
jne
and
mov
xchg
sbb
gs
decl
mov
xor
insb
es
stos
fld
dec
lret
mov
jb
adc
push
mov
decl
xor
xlat
ja
mov
sbb
clc
dec
push
sbb
outsb
cmp
vdivps
popf
lock
loopne
xchg
cmp
add
fstpl
fcoml
test
jno
xchg
pop
xor
cld
xchg
outsl
fadds
loope
call
orb
call
push
out
out
jnp
mov
leave
mov
adc
dec
movsl
pusha
mov
push
jp
jb
insl
cmp
push
stos
and
or
es
lahf
fsubs
lretw
adc
sub
xor
sbb
lret
mov
add
imulb
cld
ds
ret
dec
aas
out
jo
jb
adc
lods
mov
pop
push
jge
jo
stos
and
pop
std
addl
imul
sbb
lret
scas
cmp
inc
add
inc
mov
jp
or
rcll
cli
sbb
and
mov
mov
and
pop
pop
mov
insl
imul
js
jle
mov
je
fsubs
mov
mov
sbb
jbe
lock
dec
or
push
cmpl
movaps
jbe
sbb
imul
inc
lret
mov
pop
test
fisttpll
and
xor
rol
test
shl
lods
std
aad
negl
cs
lock
loope
adc
mov
std
cltd
or
inc
xchg
dec
pop
adc
push
xor
dec
lcall
mov
imul
stos
cmc
outsl
test
lret
repnz
out
jbe
xor
loop
ljmp
testl
xchg
andb
pushf
popf
push
inc
cli
popf
or
imul
cli
frstor
fs
fdivrs
jmp
mov
sbb
shrl
call
repz
ja
sub
xorl
push
dec
test
add
out
pop
add
cs
fdivr
mov
lea
mov
adc
outsl
enter
lret
xchg
insb
sub
nop
mov
pop
int
xorb
ret
inc
adc
mov
sub
push
shlb
pop
xor
dec
mov
dec
testb
sbb
mov
daa
sbb
jno
out
cmp
sbb
cmp
aad
sub
mov
push
inc
out
mull
imull
mov
arpl
pop
and
dec
test
push
sahf
pop
and
decb
xor
sub
aas
jb
cwtl
or
and
adc
fsubs
xchg
sub
mov
dec
cmpsl
xlat
mov
shrl
mov
cmp
inc
push
pop
push
mov
pusha
mov
xor
out
jle
imul
sbb
mov
pop
mov
subb
sub
sub
inc
add
add
pop
mov
inc
xchg
jmp
in
jb
sysenter
adc
dec
pop
push
adc
xchg
es
push
pop
inc
mov
sahf
mov
mov
cs
xchg
iret
mov
mov
and
icebp
lock
xchg
lock
test
add
adc
mov
and
and
shll
xor
fmuls
aam
dec
adcl
repnz
in
jns
js
stos
fxam
add
daa
jmp
mov
jbe
fmuls
xor
lcall
inc
xchg
inc
test
pop
mov
cmp
pop
test
fistps
xlat
push
andl
mov
xchg
pop
pop
enter
jecxz
xor
mov
and
jle
nop
push
and
xchg
arpl
lock
mov
popa
mov
sar
sub
jmp
jl
xchg
cs
add
fstl
popf
pop
call
lahf
movsb
dec
shr
mov
leave
adc
adc
cli
or
shrl
mov
in
pop
in
mov
cs
adc
or
out
mov
jb
mov
int
or
xchg
outsl
mov
pop
push
out
pop
cli
jno
es
out
mov
pushf
inc
sbb
std
and
push
iret
or
fwait
dec
fwait
shlb
jbe
fistps
popf
fcoms
cmpsb
xor
mov
je
mov
and
daa
dec
fwait
lret
xchg
sbb
and
stos
inc
cwtl
sti
mov
mov
jb
push
lret
pop
sub
lret
push
pop
mov
sbb
popa
cmp
inc
mov
fstp
adc
mov
mov
jge
enter
iret
mov
xlat
test
lret
mov
push
insb
dec
inc
into
and
mov
adc
lret
adc
inc
lret
inc
and
test
pop
aaa
sub
aad
add
fnstcw
sub
enter
jmp
aad
mov
out
xorb
lret
jge
shrb
mov
les
aam
xchg
adc
repz
jbe
sub
xor
jg
xchg
add
fs
jg
pop
outsb
in
add
pop
push
mov
push
pushl
hlt
mov
data16
fstps
xchg
incl
in
cmpsl
sbb
inc
mov
cltd
mov
out
ficoms
lock
xor
jle
sub
pop
inc
fs
int
and
cwtl
jbe
xlat
inc
add
aaa
data16
add
movsl
je
gs
addr16
inc
jb
test
in
jmp
jle
int3
rolb
xchg
mov
push
sub
dec
inc
pop
cltd
movsl
mov
jne
sub
lea
into
ja
inc
rclb
and
shrl
lods
push
xlat
cmp
mov
pop
call
xchg
add
pop
mov
movsb
test
into
mov
mov
pusha
fs
jl
fidivrs
adc
arpl
stos
imul
xchg
adc
jecxz
sub
outsb
rclb
mov
and
repnz
mov
mov
xchg
and
sbb
inc
mov
sahf
outsl
mov
pop
call
sbb
xor
jo
lea
int
mov
sbb
jno
pushf
or
mov
mov
mov
iret
hlt
and
call
pop
insl
loop
or
push
daa
mov
daa
xchg
gs
sub
mov
xor
sti
cmp
dec
inc
dec
popa
sti
xor
dec
sbb
cmp
pop
and
sub
daa
adc
xor
cmp
xchg
faddl
cwtl
cli
push
shll
dec
fidivs
insb
dec
ds
pop
mov
push
dec
mov
cmp
in
dec
jns
lock
and
leave
cli
loop
fadd
sub
sbb
mov
test
in
rcll
imul
in
pop
rcrl
arpl
mov
and
loope
adc
inc
mov
shll
insb
mov
das
cmp
fildl
outsb
jecxz
inc
insl
mov
push
mov
fisubrs
push
sarb
outsl
and
std
push
jns
push
inc
xor
jl
and
add
mov
ror
add
lret
xchg
dec
or
loope
add
adc
pop
mov
mov
mov
ds
jae
sub
mov
or
mov
adc
adc
mov
xor
mov
imul
repz
adc
pop
stos
aaa
fisubl
in
and
lret
aaa
lahf
cmc
ucomiss
sahf
xchg
ret
add
or
fnstcw
inc
pushf
pop
rolb
scas
cmpsb
cmc
inc
lret
push
out
sub
loope
xchg
sub
xchg
mulb
push
je
fstpl
jne
jno
jnp
cld
push
icebp
sbb
cmp
out
leave
hlt
out
stc
cmp
call
in
and
jl
xchg
enter
or
iret
daa
test
pop
rcrb
dec
andl
jbe
cmp
cwtl
and
jbe
aad
xchg
aam
mov
push
je
push
inc
dec
shlb
cmp
std
xor
pop
lds
fcompl
adc
pushf
ret
inc
outsb
xchg
jb
push
cmpsl
mov
lcall
or
inc
or
pushl
mov
outsb
lahf
push
sbb
push
das
hlt
and
fnsave
sub
jno
hlt
rcl
pop
repz
call
loopne
sbb
xor
out
adc
or
sub
fsubrl
adc
movsl
das
pop
aam
hlt
sahf
xchg
mov
mov
prefetch
sarb
pusha
cmp
call
in
in
inc
stos
dec
movsb
pop
ja
mov
ljmp
mov
cli
xchg
fwait
jae
cs
leave
aas
pop
nop
aaa
or
adc
mov
je
add
inc
push
stos
inc
mov
mov
ror
add
insb
inc
hlt
xchg
je
dec
test
dec
adc
int3
sbb
in
mov
mov
pop
in
xor
arpl
shl
test
pop
xor
stc
pop
jns
and
out
in
into
adc
rcrb
incl
insl
pushf
pop
add
mov
or
aam
jae
cwtl
scas
push
mov
mov
mov
adc
xor
and
ror
xor
clc
lahf
loop
sbb
nop
cld
sbb
sti
mov
cld
std
cmp
mov
sub
outsl
add
ret
xchg
xlat
dec
daa
sahf
or
adc
pushl
sbb
lret
int3
and
cmp
insl
scas
xor
ljmp
sarb
rol
sub
inc
push
sbb
gs
and
sub
sub
dec
cmp
xor
xchg
pop
loopne
mov
mov
mov
inc
add
push
das
pop
cld
push
jge
adcb
add
dec
inc
out
rcl
xorb
cmp
mov
sub
mov
xor
jns
xor
in
adcb
push
inc
or
mov
fld
push
push
mov
cmp
pop
stos
in
fwait
gs
nop
call
mov
test
jge
pop
ja
ds
cmpsl
fiadds
jns
mov
sahf
iret
loopne
mov
adc
stos
enter
ja
dec
fdiv
ljmp
jecxz
bound
xor
xchg
push
xor
mov
fcompl
cmp
xor
int3
mov
pop
iret
cmp
fcmovbe
sahf
cs
mov
mov
das
lods
scas
rclb
leave
aas
lcall
add
lahf
jne
xor
stc
mov
jo
xor
rcll
inc
mov
repnz
jg
fisttps
mov
mov
or
popl
mov
xor
sbb
mov
cmp
push
xchg
push
rolb
dec
xchg
fsubrs
in
insb
loope
in
xchg
add
sbb
scas
out
loop
jne
es
repnz
mov
cmp
cmp
push
pop
sub
xchg
in
fisttpl
mov
lahf
test
adc
aam
stc
xchg
xchg
daa
push
sbb
jge
fldt
cmp
fmull
xor
or
jg
lret
mov
jge
mov
mov
ja
pop
cmp
test
pcmpgtb
fcomps
xchg
xchg
mov
and
dec
icebp
nop
pushf
mov
fstps
mov
adc
mov
ljmp
lock
push
popf
cmpb
dec
xchg
ja
repnz
xor
mov
jecxz
jo
push
lcall
push
push
subl
ja
add
push
xchg
stos
add
sub
ret
ss
add
sub
notl
sbbb
jmp
inc
mov
inc
loopne
rclb
adc
test
inc
xchg
push
fmulp
xor
push
stos
mov
lahf
in
push
jbe
popf
js
rclb
test
sbbb
adc
dec
push
outsb
aam
std
dec
xchg
mov
sub
movsl
mov
xchg
data16
dec
icebp
dec
cmpsl
or
xchg
xor
mov
sarb
fnstsw
fdiv
dec
mov
push
js
dec
pop
movsl
mov
push
jo
iret
js
and
cmc
gs
push
jno
iret
pop
sbb
test
mov
xchg
mov
or
icebp
pop
xor
movsb
mov
mov
fucom
lods
lods
cmp
mov
push
pop
cltd
insb
out
loop
add
lcall
mov
sub
sbb
mov
lods
pop
inc
pop
jb
fsts
lea
fnstenv
add
push
std
fisubl
mov
je
pushf
push
mov
jae
pop
sti
xlat
out
sti
pop
xor
sub
loop
mov
jmp
cmc
inc
stos
xlat
rcll
cmp
test
ja
adc
cmpps
fsubs
out
hlt
and
jne
stos
mov
mov
or
in
lcall
sub
push
xor
jmp
lahf
and
mov
push
cmpb
xchg
jecxz
mov
push
inc
mov
imul
subps
cwtl
mov
lods
pop
cmpl
xor
leave
push
xchg
adc
pop
mov
fnsave
out
push
fwait
ja
pop
pop
inc
xchg
fwait
sub
cwtl
shrb
test
adc
xchg
stc
push
push
mov
push
test
imul
or
cmc
shll
pop
movsb
jbe
push
lret
xlat
ffree
mov
nop
jo
xchg
ficoml
movsb
mov
dec
sbb
lds
rorl
fcmove
xchg
insl
fbstp
or
mov
nop
icebp
xchg
add
push
mov
jo
fisubl
adc
sbb
xchg
jno
ja
popa
push
aaa
fucom
mov
addl
cld
stos
into
push
dec
and
sub
and
xchg
push
mov
push
jge
lcall
xor
add
xchg
es
mov
jp
cmp
lods
adc
dec
cmpsb
das
ficoml
std
cmpsl
movsb
pop
insb
mov
mov
mov
pop
mov
and
divl
lea
mov
aas
and
fidivs
bound
into
dec
or
mov
inc
call
scas
xchg
outsb
mov
sbb
and
xor
push
fdiv
cltd
mov
movsb
je
xor
dec
faddp
sbb
and
pop
add
adc
cmp
pushf
xor
fwait
imul
mov
pop
inc
or
jle
cmp
fidivrl
cld
fs
xor
mov
pop
imul
lds
inc
out
lods
cli
inc
xlat
aas
jns
ficoml
xchg
sub
and
push
ja
loop
push
cwtl
lock
leave
xor
enter
lds
push
bound
xchg
cwtl
xor
lret
sbbb
leave
push
xor
arpl
pop
adc
pop
mov
cltd
enter
dec
repnz
shl
cmp
inc
cmpsl
sub
and
mov
sbbb
subl
xor
dec
out
jo
pop
add
push
lcall
or
cmp
jmp
jns
stc
mov
xor
loopne
cmpsb
push
test
stc
dec
cmpsb
inc
in
pop
mov
xor
cmp
in
mov
je
setl
pop
xor
add
adc
fsubrl
sti
mov
pop
pop
daa
stos
lods
mov
clc
push
add
add
and
movsl
scas
insb
imul
aam
pop
divl
or
mov
sbb
arpl
fistl
and
popl
inc
shll
out
mov
idivb
jo
negb
or
sbb
add
sub
or
cmp
or
rcrb
adc
inc
cmc
mov
adc
adc
mov
mov
enter
sub
push
ret
mov
add
pop
mov
test
test
xor
test
jne
mov
hlt
or
ds
ljmp
push
sbb
add
or
es
xor
rcr
mov
sub
add
shlb
rcrl
fcoms
in
xor
jecxz
shrb
add
inc
push
hlt
hlt
mov
daa
popf
and
cmp
inc
test
or
add
mov
sbb
lret
mov
mov
nop
aad
push
imul
xchg
sbbb
sub
mov
push
insl
shl
fidivrs
sbb
jmp
xlat
into
push
das
and
ss
ret
adc
fistpll
xchg
cmp
cmp
mov
add
mov
jmp
imul
ret
jae
leave
pop
pop
enter
adc
jnp
cmpb
test
fs
xchg
pop
iret
cmp
jg
rorl
push
aam
add
adc
call
loopne
inc
inc
jnp
add
xchg
sbb
mov
ljmp
jmp
fnsave
test
sbb
pop
mov
mov
sub
cltd
add
or
test
pop
movsl
fsubl
fildl
ret
data16
xchg
out
jecxz
enter
sub
inc
or
lret
insl
xor
cmp
leave
xor
arpl
push
cs
test
addb
push
or
loop
xor
fsubr
inc
sub
movsb
xchg
repnz
jbe
test
sbb
clc
and
pop
inc
push
jnp
mov
jno
cmp
sahf
sbb
xor
test
mov
mov
mov
add
lea
sti
icebp
dec
push
cmpsb
loopne
ret
xlat
addr16
lea
mov
add
add
insb
mov
add
cmp
mov
mov
and
mov
inc
pop
popa
jmp
test
pop
mov
sahf
xchg
jnp
into
mov
add
ffree
inc
hlt
inc
shrb
cltd
add
or
push
mov
out
sbb
arpl
arpl
in
pushf
mov
add
mov
push
aaa
mov
loope
or
mov
push
enter
jp
loope
jl
and
outsb
in
scas
jecxz
mov
cmpsl
cmp
stos
das
hlt
test
call
mov
outsb
cmpsl
stc
adc
lods
xchg
xchg
daa
dec
xor
mov
dec
stos
push
xor
in
lret
sti
ljmp
and
pop
out
aas
pop
rcll
dec
inc
dec
xchg
xor
mov
pop
lock
test
sub
mov
ja
outsb
pop
movsb
fisttpll
rolb
ficoms
fisubl
aad
push
pushf
scas
stc
mov
sti
fnstsw
popa
dec
mov
fwait
arpl
nop
insb
adc
mov
jns
xor
nop
cli
mov
lds
in
mov
into
movsb
out
add
pop
cmpl
vmovdqu
loope
or
inc
aaa
push
pop
and
or
sub
adc
mov
cmp
test
mov
call
xchg
inc
cmpsb
cmp
mov
pop
and
lods
lods
lock
in
outsb
sbb
rclb
jno
loopne
inc
scas
rolb
sar
sbb
dec
ret
iret
push
add
outsb
xor
ret
cmpsl
cltd
outsb
lods
push
pop
stos
xchg
loopne
adc
test
shr
sbb
or
outsb
data16
fnsave
fildll
inc
stc
in
push
pop
fldenv
jno
adc
stc
aas
sub
jnp
push
add
mov
idiv
or
pop
add
movsb
or
xchg
mov
xchg
adcl
int
adc
push
aaa
mov
pop
pop
or
bound
shrb
std
into
and
pop
test
out
leave
jge
ja
hlt
lock
clc
lret
call
je
jb
mov
imul
sub
or
fs
mov
lret
mov
addl
dec
lcall
call
push
popf
lock
jne
mov
jmp
cmp
push
repnz
stos
and
lods
push
mov
call
mov
shlb
mov
inc
xor
ljmp
stc
jmp
out
add
xchg
jb
in
sbb
cmc
inc
jno,pn
lods
cmpsb
in
mov
xchg
fldl
jns
push
cmp
in
enter
pop
and
rorl
mov
insl
adc
in
pop
sahf
sbb
out
mov
xchg
xchg
insl
scas
mov
pushf
fidivl
lock
mov
daa
jns
jo
lock
or
rcll
pop
in
jg
rcll
sub
add
jge
push
jne
cmp
mov
daa
mov
mov
sbb
imul
andl
mov
pop
pop
mov
xchg
sbb
dec
mov
int3
pop
mov
xchg
dec
inc
repnz
in
mov
pop
xchg
add
mov
xchg
cmpsb
je
in
mov
inc
sbb
outsl
out
notl
ficompl
jb
imul
mov
sbb
test
int
aas
outsl
js
sti
ret
mov
mov
stos
inc
push
pop
mov
and
out
jb
clc
icebp
and
imul
cmpsl
ret
jmp
inc
jns
je
mov
xlat
leave
int
cmp
inc
cwtl
adc
fs
and
lcall
mov
cmp
addl
pop
xlat
mov
clc
jne
daa
popa
mov
imul
lods
xchg
inc
stos
inc
scas
cmp
jae
aas
sub
sbb
add
inc
adc
aaa
xor
stos
mov
test
sub
leave
cmp
repnz
shlb
addr16
pop
sbb
lds
sahf
add
jne
mov
jl
sub
add
gs
aaa
push
lock
and
repz
pop
push
add
popa
adcb
mov
and
or
xor
dec
dec
popf
fsubrl
cmp
aas
mov
fs
gs
sbb
std
inc
ret
shrb
cmp
mov
ret
rcr
push
xchg
mov
call
push
shll
ljmp
xchg
outsb
inc
ljmp
lock
ror
in
icebp
js
xchg
iret
fwait
jmp
cwtl
add
mov
inc
mov
addr16
xor
push
repz
mov
jge
jmp
adc
mov
mov
repz
lcall
xor
ret
adc
sbb
jb
fstpl
adcb
lods
mov
cmp
int
and
push
adc
push
mov
cs
js
cmp
jne
sbb
loopne
and
add
xchg
inc
sbb
iret
adc
sti
imul
stc
fsts
fisttps
pop
mov
cltd
fmulp
mov
lret
enter
mov
xor
mov
and
sbbb
std
shlb
aad
xchg
in
sbbb
out
js
in
pop
es
mov
lods
pop
lcall
test
stos
sbb
loop
mov
scas
inc
jmp
scas
cmp
lods
out
aas
jle
lods
xchg
cmp
mov
js
mulb
test
leave
cwtl
add
cli
pushf
icebp
sbb
or
add
push
push
xchg
cltd
lock
adc
sbb
into
pop
or
in
es
mov
lret
data16
lds
mov
mov
mov
xchg
inc
cmp
pop
lock
xchg
rcr
pop
mov
lods
jnp
rol
xchg
adc
shlb
xor
add
sbb
scas
xchg
popl
insb
or
mov
hlt
and
jns
and
add
cmp
xchg
sub
mov
pop
ret
inc
das
pop
ljmp
mov
loope
dec
push
bound
inc
cmc
outsb
fisubl
shll
dec
sub
int3
push
or
iret
xlat
and
mov
pop
daa
orb
add
push
hlt
adc
pop
pop
arpl
pop
cmp
adc
xchg
push
add
les
inc
sbb
pop
nop
and
add
xchg
pop
sbbb
adc
mov
push
cmpsl
sbb
sub
rolb
outsl
mov
repz
jae
popf
popa
dec
mov
adc
jmp
xchg
call
add
loop
fs
push
cltd
mov
cmp
add
or
push
popf
fisubrl
pop
das
test
out
jo
out
repz
loop
rorb
stc
push
arpl
ret
and
and
add
pushf
into
cmp
repnz
fs
shrl
ds
or
pop
ljmpw
push
arpl
dec
inc
popf
jge
popa
sahf
mov
push
xor
imul
daa
cld
imul
mov
repnz
mov
jl
nop
mov
inc
cmp
pop
jg
in
mov
inc
les
mov
ja
cmc
or
adc
and
sbb
push
insb
push
dec
mov
pop
mov
push
repz
push
cmp
daa
mov
fmul
adc
xchg
sbb
out
push
imul
roll
lret
push
sbb
fwait
lret
fistps
lods
pop
sar
js
adc
sbb
pop
xor
mov
in
sub
adc
lds
aas
roll
js
push
repz
add
adc
lds
lea
int
xchg
ds
and
inc
dec
scas
jno
lods
out
add
mov
and
mov
push
fisttpll
cmp
cmpsl
jne
jns
dec
jecxz
push
sub
or
lret
xlat
or
into
xchg
clc
pop
out
cmc
es
and
movsb
adc
and
push
add
dec
and
gs
xchg
rclb
xorl
sar
loope
iret
fisttpl
inc
jmp
test
inc
or
sbb
inc
cmp
sbb
jns
adc
mov
test
adc
sbb
sbb
ret
out
dec
mov
out
mov
ret
repnz
in
jnp
cmpsb
adc
or
push
ss
insb
cmp
push
aaa
aaa
jmp
insb
sub
xchg
mov
sub
lds
jbe
jle
loopne
mov
mov
shlb
stc
jo
sub
mov
mov
cwtl
mov
mov
push
or
int
xor
test
ret
xor
mov
fisttps
pop
mov
icebp
aam
test
aam
inc
cmpsl
jecxz
sti
movsl
in
in
inc
push
mov
int
jmp
scas
push
sti
fstps
fsts
inc
ret
xchg
loop
outsb
ret
sbb
insb
push
clc
addr16
push
out
test
gs
lock
sub
and
fcoms
adc
pop
jne
mov
cmp
icebp
int
rol
pusha
test
fstpl
stos
cwtl
pushf
mov
cmp
stos
add
adc
jp
or
or
push
stos
adc
xchg
notl
xor
rcr
pop
mov
scas
add
add
and
dec
shl
push
in
faddl
insb
mov
loop
xor
xchg
add
shl
and
jmp
xchg
fldenv
out
int3
in
mov
pop
lock
pop
iret
adc
cmp
jno
repnz
stos
mov
xchg
leave
sbb
adc
pop
imul
bsf
adc
mov
sub
push
popa
test
js
scas
jle
mov
adc
inc
sbb
jmp
push
iret
push
ret
sub
stos
xor
loop
mov
or
test
sbb
aad
out
stos
mov
enter
cs
xchg
jle
pop
popf
je
test
aas
mov
leave
iret
popa
cld
fnstcw
sbb
in
sbb
sub
sub
jge
jae
sbb
xchg
jmp
or
sub
rcl
hlt
xchg
imul
ljmp
frstor
mov
jns
cmp
popf
mov
lds
or
xchg
mov
aam
adc
test
push
mov
test
or
movsb
inc
popa
inc
pop
xor
adcb
loope
inc
bound
sbb
mov
push
lock
pop
adc
das
xchg
loop
add
xchg
xchg
add
rolb
jb
shlb
imul
jmp
insl
out
aas
sbb
xor
mov
and
jns
jmp
pop
in
test
addl
inc
inc
xchg
mov
lock
scas
out
addr16
ja
mov
and
ss
xchg
icebp
mov
incb
out
jge
jo
xor
push
and
das
jecxz
push
cli
lcall
dec
adc
add
pop
pusha
sbb
mov
test
mov
sbb
jo
sub
or
or
mov
in
out
ljmp
scas
shlb
xor
leave
aad
xchg
xchg
aas
orb
and
shl
lret
out
push
repnz
xchg
pop
jae
mov
sarl
std
cmp
dec
test
xor
pop
loopne
popl
mov
mov
scas
jb
jo
pop
outsb
mov
jb
daa
adc
xlat
fdivr
mov
call
stos
and
sbb
push
and
call
or
lds
out
fidivrl
add
nop
pop
pop
hlt
sbb
test
adc
dec
cmc
adc
cmp
fptan
mov
stos
jle
jns
and
cmp
shrl
stos
sbb
out
cmp
dec
repnz
jecxz
xlat
ja
outsb
cmp
add
jp
enter
mov
loopne
lcall
in
outsl
pushl
inc
and
iret
inc
fidivrl
mov
and
sbb
aad
jbe
data16
loopne
out
adc
divl
xor
std
mov
jmp
leave
sbb
jl
test
inc
push
enter
pop
jg
mov
in
std
mov
data16
push
inc
call
shll
sub
and
push
popa
test
jg
loop
aad
es
adc
xor
mov
add
aam
cwtl
inc
mov
adc
cltd
popf
sarl
fists
mov
sbb
inc
cld
inc
dec
push
inc
jae
movsl
mov
push
imul
scas
mov
rcl
cwtl
fidivl
ja
xchg
das
lods
into
mov
xlat
cltd
jbe
test
xchg
pop
jg
stos
xchg
inc
mov
rcrl
lods
daa
loope
icebp
inc
adc
lds
mov
call
jmp
mov
push
and
call
push
adc
mov
xchg
outsb
rcll
sbb
rcll
adc
push
mov
dec
ret
pop
fdivrl
xchg
icebp
sub
cmpsw
sbb
cmpsl
movsb
pushf
push
and
out
push
testl
imull
pop
fisttpl
cmp
ljmp
ss
test
cmpsl
out
lea
mov
xchg
std
leave
fsub
or
int
jmp
and
add
shrb
neg
adc
lds
pop
xchg
inc
stos
outsl
std
adc
movl
aaa
fisttpl
sub
dec
in
push
jo
popf
cmpsl
cmp
mov
inc
xchg
outsl
jb
or
jle
cs
push
pop
fmull
push
jmp
cwtl
dec
loope
fidivl
insb
adc
mov
mov
shrb
adc
arpl
sub
mov
das
cmp
cmpsl
and
pop
sub
jb
inc
je
inc
lock
mov
popf
pop
fcomps
xchg
jle
adc
xor
loope
add
adc
sub
or
push
daa
push
rcr
inc
pushf
or
movl
mov
push
or
cld
stc
ret
aas
cs
pop
pop
js
scas
stc
hlt
pop
push
xor
in
jle
ficomps
jle
jmp
mov
ljmp
sti
movl
notb
flds
out
fwait
pop
ficoml
sub
mov
mov
in
sarl
cmovs
xor
rcr
mov
push
arpl
test
xor
push
js
mov
cs
adc
pop
mov
das
mov
inc
add
inc
jnp
pushf
push
insb
cmp
outsb
sub
addr16
imul
and
sbb
or
jg
push
pop
xor
add
imul
pop
push
push
jbe
addb
mov
push
loope
outsl
nop
dec
in
push
cmp
cmp
push
xor
je
test
cs
mov
inc
and
cld
xor
mov
mov
aam
in
ljmp
fcoms
push
push
pop
lods
jb
loope
popf
out
ds
ret
xor
int3
xor
stos
and
pushf
leave
lret
pop
or
popf
outsb
imul
sub
lock
sub
pop
out
test
and
push
xchg
int3
mov
adc
adc
je
test
movsl
inc
push
xchg
clc
or
movsl
out
repz
hlt
aaa
cmp
pop
or
nop
stos
dec
sub
add
adc
int
popf
rcll
jb
jge
aad
popf
mov
jp
adc
jl
push
xchg
or
outsl
xchg
loope
jb
cltd
bound
or
loope
mov
dec
imul
pop
in
pop
adc
adc
sbb
or
xlat
cli
cltd
jo
sub
mov
imul
movsl
jecxz
push
xchg
shrb
dec
mov
push
adc
push
cltd
and
loop
pop
adc
xor
iret
inc
daa
icebp
fwait
xchg
adc
out
jbe
das
sub
cmp
or
sar
sbb
add
dec
stos
adc
xchg
xchg
inc
lods
dec
pop
stc
xchg
cld
pop
push
js
push
jno
outsl
mov
dec
pop
push
arpl
dec
imul
add
and
inc
fnsave
fmull
cli
jmp
stc
dec
jae
lret
sti
stos
jmp
mov
sar
out
mov
aam
adcl
enter
outsb
daa
xor
mov
dec
rorb
lods
mov
pop
xchg
jmp
je
pop
add
lods
sub
fwait
subl
dec
jge
mov
lds
fistpl
mov
loop
shlb
out
test
or
inc
aas
dec
xor
sub
xchg
adc
pop
mov
lea
cmpsb
cmc
jns
cld
xor
cmpsb
sbb
scas
jns
aad
iret
ds
leave
cmp
icebp
insl
sub
push
add
test
inc
dec
add
pusha
dec
or
pop
lock
je
mov
rcrb
jge
pop
lods
push
repnz
lret
scas
xor
cs
pop
push
xchg
dec
cmp
sbb
cmp
mov
cmp
mov
outsl
call
fnstsw
mov
and
sub
in
test
push
mov
or
in
sti
enter
push
jno
xchg
cmpsl
std
faddl
xchg
lods
stos
cli
mov
add
mov
pop
pop
push
stos
push
adc
outsl
fwait
push
xchg
inc
sub
rorb
push
mov
repz
into
jne
sub
or
popf
scas
iret
dec
arpl
fwait
ljmp
push
ja
insb
cwtl
lea
sub
pushf
in
in
into
jg
cmp
push
stc
in
xchg
call
shll
sub
out
mov
into
aam
adc
rclb
aad
enter
dec
mov
lcall
xlat
sbb
dec
vpshaq
add
push
fldt
pop
stc
xor
loop
mov
xor
aas
mov
das
testl
sub
mov
pop
out
lcall
cmpb
jecxz
int
iret
cmp
and
das
loopne
sbb
mov
out
inc
pxor
adc
out
mov
or
lret
sub
adc
test
cli
xor
in
jnp
xchg
sub
pop
ljmp
dec
ret
add
test
jne
or
xchg
inc
xchg
mov
and
orl
dec
cwtl
cmp
fstp
jo
cwtl
xor
push
sbb
pop
adc
cmc
adc
out
inc
mov
fnstenv
and
jle
and
mov
mov
sbb
lods
pop
cwtl
adc
stc
mov
in
aaa
fsts
jno
test
loope
xor
aam
push
outsl
and
gs
dec
xor
test
inc
cmc
mov
popa
outsb
mov
out
enter
or
imul
mov
pop
std
sub
mov
xchg
fisubl
push
inc
xchg
or
das
dec
mov
jno
scas
sub
es
adc
xchg
jne,pn
sbb
add
clc
sbb
rcrl
mov
mov
lret
push
dec
jbe
psllq
pop
cmpsl
mov
lods
cwtl
std
jl
sub
scas
sub
cmp
add
xor
sub
inc
inc
loop
sti
inc
and
or
push
leave
int3
push
jle
dec
scas
arpl
iret
xchg
mov
in
jb
repnz
inc
mov
xchg
leave
movsb
rcrl
or
mov
cmp
sub
addr16
and
sub
xchg
mov
mov
fistpl
mov
add
add
pusha
adc
xor
mov
subl
es
lods
xchg
aam
xchg
cs
cmpsl
dec
scas
fwait
stc
sbb
fsubrl
add
xchg
sahf
inc
xor
or
or
mov
scas
das
adc
xchg
lcall
push
inc
mov
in
popa
je
xchg
push
pop
xor
or
adc
jno
fnstenv
cmc
ret
inc
lock
insb
leave
pop
pop
or
mov
pop
mov
repz
pushf
repz
in
mov
jp
cmpsl
dec
xchg
pop
insl
aas
ret
mov
jmp
mov
out
jne
push
shr
dec
cmp
orl
repnz
sbb
addr16
decb
jo
pusha
mov
sbb
imul
imul
mov
inc
ficoml
cld
xor
mov
ret
and
int3
fistpl
int
lret
jae
in
lods
ss
pop
ret
or
jmp
xor
ja
sbb
inc
pop
xor
mov
xchg
int3
inc
pop
mov
repz
jnp
jecxz
je
xchg
enter
adc
std
std
sbb
mov
mov
nop
call
push
mov
sbb
lea
mov
repz
dec
xchg
das
lds
scas
mov
les
test
adc
mov
cltd
frstpm(287
lret
mov
inc
xor
je
sub
out
jle
nop
xchg
movsl
or
dec
clc
outsl
pop
mov
ljmp
mov
push
addb
jae
sub
lahf
sbb
push
movsb
fldl
or
inc
test
rcr
scas
imul
or
in
push
add
cmp
test
in
fistl
sar
fcmovbe
iret
shll
loope
sbb
mov
push
mov
cmp
hlt
cs
incl
shll
cmp
xor
pusha
and
and
lret
xchg
pop
mov
inc
loopne
loope
aad
mov
movsb
ja
shrl
rcrb
and
imul
loop
outsb
jne
or
lds
xlat
test
dec
lret
pop
xor
test
rcrl
imul
jle
cmp
xor
xchg
popa
hlt
shr
enter
out
dec
es
popa
and
ret
addr16
sub
add
and
pusha
daa
xchg
push
mov
push
xor
xchg
sahf
lret
mov
aas
push
mov
jg
xor
scas
jae
add
fcompl
xchg
lret
jnp
in
cwtl
mov
jecxz
in
ds
cmp
testb
jb
mov
mov
test
mov
mov
jecxz
std
sub
jg
inc
jp
add
or
into
mov
divl
dec
push
in
mov
ljmp
pop
fs
lret
mov
je
leave
mov
in
inc
aaa
jnp
sbb
sbb
movhps
data16
std
shrl
aad
adc
cmp
sub
iret
std
pop
sti
dec
jne
dec
pusha
inc
push
lret
mov
data16
aas
inc
xor
repz
mov
ljmp
sbb
dec
in
std
testl
adc
jle
in
ja
lock
jne
lods
aaa
mov
inc
pusha
mov
scas
fdivrp
stos
mov
int
loope
sbb
pop
xchg
fcmovnu
shr
mov
movsb
dec
mov
xchg
cmpsl
xchg
popf
lods
mov
daa
xchg
test
sbb
loop
mov
jno
je
and
imul
pop
iret
push
fs
out
push
sbb
repz
sti
sub
mov
mov
fcoms
pop
jb
sbb
xchg
aam
les
sub
sbb
into
xor
imul
inc
xor
and
dec
sbb
xchg
xchg
dec
xor
mov
xor
out
les
jne
ds
pusha
movsl
push
inc
inc
inc
shr
hlt
fnstsw
xor
adc
idivb
into
cmp
xlat
imul
pop
sbb
jo
pop
movl
mov
sub
dec
push
aaa
jle
aam
pop
mov
xor
repnz
mov
push
dec
mov
mov
cltd
pop
dec
xor
add
mov
dec
notb
push
jp
adc
in
pop
xor
lret
xchg
lret
fwait
imul
loop
dec
inc
insb
adc
pop
mov
lock
xor
mov
addr16
add
iret
cwtl
dec
lds
enter
sahf
in
call
in
cmpsl
sbb
lret
stos
and
jne
js
nop
inc
es
fwait
rclb
jb
mov
inc
add
mov
in
popa
cmpsb
clc
xor
mov
mov
fsts
push
popf
daa
in
push
add
addl
stos
push
clc
stc
sti
outsb
jl
adc
push
lahf
add
sbb
popa
push
addb
test
out
movsb
adc
mov
fbstp
dec
dec
rorb
cld
mov
adc
push
jo
enter
sbb
push
push
imul
arpl
stc
fimull
loope
inc
nop
es
movsb
stos
fdivs
scas
jge
rorb
and
shll
cmpsb
cltd
loope
inc
mov
sub
nop
fstl
push
popa
mov
push
fiaddl
mov
push
mov
es
ret
jge
insl
and
ljmp
vblendmps
jo
addr16
dec
je
dec
push
dec
sti
iret
jno,pt
int
lods
add
xor
addl
test
dec
aas
outsl
fwait
and
into
pop
mov
lock
cltd
fstps
es
sbb
iret
jbe
xchg
inc
xor
rcr
aad
out
push
push
mov
mov
xchg
mov
cltd
movsl
out
pop
and
mov
sub
jns
sahf
lret
dec
xor
mov
and
add
push
rolb
cmp
mov
repz
push
xorb
es
out
daa
inc
lahf
and
insb
jl
cltd
mov
scas
aad
xor
add
test
pop
outsb
cmp
add
rorb
or
xor
ja
cwtl
mov
jl
pop
xor
fisttpl
arpl
mov
enter
jmp
orps
sub
mov
repnz
stos
stos
loop
in
mov
int3
jne
mov
aas
add
and
loop
mov
outsb
arpl
movsb
add
lea
mov
in
mov
rclb
call
inc
mov
sbb
sbbl
mov
ficoml
js
cmp
cmp
jp
scas
push
and
xchg
adcb
sbb
pop
inc
xchg
sub
cmp
daa
fistpll
out
js
sub
cmp
in
jmp
xor
mov
push
mov
add
jb
xlat
inc
sub
sub
xchg
dec
roll
fsts
fs
sbb
sti
or
pop
pop
inc
aas
je
add
push
or
outsl
lds
pop
rorb
iret
int
cmp
xchg
mov
out
add
sbb
or
je
pop
in
add
mov
imul
mov
cli
mov
sbb
lahf
mov
cs
adc
jge
push
jbe
push
jl
sbb
push
int
sub
mov
sbb
ficoml
or
ss
imul
movsl
push
dec
es
mov
sub
aad
popa
dec
in
scas
cmp
sbb
mov
movsb
push
out
nopl
pop
out
lcall
cmc
mov
dec
push
or
dec
jecxz
jo
iret
ljmp
jecxz
test
mov
mov
jp
scas
xor
dec
popf
movb
cmp
out
sti
mov
jnp,pt
int3
pop
dec
or
jno
xchg
shll
jae
cmc
rorb
repnz
or
cmpsb
test
mov
shll
pop
add
add
sbb
or
movsb
orl
insb
mov
xor
mov
pushf
ljmp
mov
daa
mov
ss
dec
loopne
lahf
adc
add
pusha
xchg
sub
cmp
dec
cmp
aas
arpl
aam
lods
loopne
fnstcw
push
pop
cltd
add
or
add
in
cmpsl
or
hlt
push
rorl
in
adc
dec
xor
addr16
adc
jg
cs
cmpsb
push
mov
dec
je
mov
in
fimuls
out
mov
daa
pushf
dec
push
push
mov
mov
jns
mov
rcr
adc
es
sbb
add
pop
sarl
jge
and
mov
adc
xchg
loop
jo
pop
repz
mov
xlat
out
outsl
jl
dec
xor
push
dec
xor
cld
aas
mov
loopne
loopne
xchg
mov
jmp
fdivrl
out
xchg
sub
mov
jnp
mov
mov
jno
pushf
xor
loop
into
stos
ret
nop
mov
dec
lahf
or
pusha
ffree
test
xchg
popf
push
dec
cmp
add
sub
sub
mov
aas
fs
lret
std
jbe
idivl
jno
ja
push
jle
xchg
mov
lock
stos
stc
push
jnp
pop
dec
xchg
aas
inc
xor
out
shrb
and
cmpsl
jg
sub
adc
add
dec
pop
test
mov
call
xchg
in
sbb
push
mov
iret
into
mov
pop
cli
dec
jle
stos
or
mov
ret
inc
sarb
xchg
mov
sbb
outsb
movl
xchg
int3
scas
aas
lret
lahf
fisttpl
mov
insb
aam
xlat
jle
aaa
cmpsl
xor
lcall
scas
lods
xor
inc
shrl
ret
inc
sub
test
jb
add
xor
das
mov
mov
mov
lcall
pop
outsb
jo
out
lock
cmp
push
xchg
push
arpl
mov
dec
push
inc
pop
pop
cmp
mov
addr16
jmp
out
mov
xor
sub
mov
scas
int
jns
mov
loope
xchg
xchg
lret
xlat
lods
test
or
fnstcw
mov
dec
dec
rcrb
push
and
push
mov
mov
test
pop
sti
mov
pushl
sarb
jle
xor
sbb
xchg
push
mov
xchg
je
in
sub
ds
xchg
insb
xor
pop
out
xor
sub
test
mov
gs
cld
lret
lret
sahf
jae
push
sub
or
adc
pushf
lcall
push
in
mov
icebp
xor
scas
lcall
xchg
in
aad
pop
lock
mov
mov
mov
bnd
lcall
fisubl
jmp
insl
ja
mov
out
test
mov
pop
rclb
lock
aam
mov
mov
iret
fwait
cwtl
add
cwtl
test
sarb
rcr
mov
leave
or
inc
xor
xchg
movsl
andl
cli
jle
adc
mov
popf
ret
insb
xorl
cld
insl
int3
cmpsl
andb
mov
mov
sub
jbe
fisubrs
mov
xbegin
fsubrl
scas
bound
cwtl
sub
std
cmpsb
adcl
int
pop
lahf
nop
sbbb
mov
aaa
inc
pop
dec
movaps
mov
jbe
mov
mov
jmp
xchg
lcall
jg
dec
xor
test
fwait
jge
mov
nop
mov
jnp
xchg
out
mov
lods
and
adc
mov
push
int
mov
inc
icebp
fcomp
ret
sbb
push
lods
cmp
xor
fmuls
ds
mov
jb
test
das
jb
std
cmp
es
testl
push
hlt
adc
adc
adc
mov
decl
fildll
aam
dec
adc
xchg
mov
test
mov
push
ret
xchg
mov
add
jge
nop
push
fnstsw
and
or
jecxz
xlat
mov
popf
xchg
repz
lret
push
fs
orl
sbb
test
popf
scas
lods
push
loop
add
push
roll
es
dec
xchg
repnz
cld
pop
jecxz
loope
lods
out
xor
adc
pop
jge
push
cmp
les
outsl
cmp
and
pop
pop
sub
cmpsb
dec
sbb
or
add
xor
jbe
dec
negb
dec
mov
and
lods
rcrl
or
cmp
jle
pop
test
inc
xchg
mov
push
jge
iret
into
xor
aas
test
out
mov
fbstp
cmp
cli
adc
pop
add
in
in
xor
adc
xor
jg
fwait
ret
cmp
mov
mov
xor
roll
sub
add
sub
xchg
cmp
mov
add
mov
lahf
sbb
or
jae
mov
xchg
push
jo
add
jmp
jo
jmp
stc
dec
dec
nop
pop
cmpsb
dec
nop
inc
cmpsl
repz
daa
nop
sti
mov
inc
jbe
dec
mov
sub
push
mov
call
or
add
insl
lods
ljmp
push
push
pop
addr16
jmp
sbb
movsl
movsl
add
and
scas
daa
push
into
pushf
xor
rclb
cwtl
mov
xor
clc
jp
in
or
inc
add
jns
int
or
ss
xor
xchg
mov
cmp
mov
mov
inc
aaa
sti
cmp
mov
xor
adc
push
push
aad
inc
loope
mov
inc
iret
test
pushf
fs
sub
rorb
adc
dec
dec
push
jae
hlt
mov
ret
sub
cmp
mov
popf
xchg
jmp
je
inc
bound
pop
jmp
jae
cmp
fldl
pop
les
cs
pop
dec
cwtl
mov
and
cwtl
xchg
cmp
bound
push
jge
jno
outsb
or
jbe
mov
insb
fsubr
push
mov
movsb
cmp
lods
in
or
mov
adc
cmp
push
cmp
jno
sarb
test
movsl
movsb
clc
sub
jbe
pop
mov
pop
in
xchg
inc
daa
dec
xor
dec
fs
adc
jmp
add
xchg
popf
xor
orl
sbb
insb
inc
xchg
dec
mulb
mov
dec
sbb
sub
test
and
xor
das
push
xchg
sbb
adc
lret
daa
flds
push
inc
imul
xchg
adc
sbb
cmp
sbb
jle
rorl
data16
mov
jns
add
out
fdivrl
hlt
decb
cmpb
ljmp
sarb
std
std
pop
pop
in
and
sbb
pop
jo
pop
mov
xor
cli
xchg
xchg
mov
movsb
xor
std
cmc
loope
or
dec
inc
pushf
clc
mov
or
inc
ret
dec
scas
repnz
cmpsb
xlat
fwait
clc
pop
aaa
outsl
aaa
jp
inc
mov
mov
pop
cmp
lcall
push
rclb
in
pop
out
jl
adc
mov
repz
outsl
jl
pusha
test
scas
dec
jle
lods
mov
lods
mov
dec
cmpxchg
inc
or
fistl
clc
inc
lcall
aaa
push
fs
dec
push
xor
divb
add
xchg
or
icebp
jo
fsubrs
pop
push
stos
pop
movsl
push
mov
sub
shrb
cmc
clc
adc
pop
fcoml
les
cmpsb
outsl
in
xor
test
push
repnz
mov
ljmp
mov
adc
add
in
jp
adc
inc
shl
dec
loop
add
jnp
in
sub
mov
cmp
xchg
stos
rcll
xor
outsl
int3
in
scas
les
mov
and
pop
es
pop
jecxz
scas
jmp
inc
out
test
inc
or
idivb
mov
pop
aad
adc
jle
xor
inc
adc
ficoml
outsb
dec
push
sarl
add
mov
or
dec
out
jae
mov
pop
in
rep
sbb
fiadds
jg
aas
jge
xor
dec
stos
mov
pop
mov
cmp
mov
in
sub
out
sbb
mov
inc
dec
clc
push
inc
fs
add
imul
fisttps
push
or
mov
jno
push
adcl
jmp
pop
sti
push
add
cmp
inc
jecxz
dec
cmp
loopne
mov
pusha
js
cmc
repnz
cmp
or
iret
imul
cmp
dec
inc
or
add
xchg
push
sbb
jg
scas
push
mov
lahf
add
mov
pop
add
pop
mov
lea
and
daa
fisttpl
and
outsl
in
mov
out
lcall
add
pop
xlat
mov
fs
es
ss
cmc
mov
push
cmp
sub
ss
in
mov
mov
sub
adc
push
cmpb
inc
inc
cmp
cmc
add
sti
in
xchg
call
push
movsb
push
jo
fadds
lea
dec
lcall
lock
lcall
inc
out
mov
js
xchg
pushf
test
mov
inc
daa
ret
xchg
lret
push
in
nop
aaa
scas
ret
cwtl
mov
mov
andb
insb
ljmp
and
jge
sbb
mov
repnz
dec
mov
sbb
dec
mov
adc
pop
insb
inc
out
popf
int3
cmpsb
add
bound
pushf
ret
call
insl
lcall
mov
dec
dec
or
pop
push
stos
jb
dec
icebp
repnz
jg
and
out
clc
enter
fimull
loope
push
cmp
push
add
jg
xor
cli
pop
mov
loop
ss
xor
push
mov
adc
icebp
mov
aas
cltd
xor
pop
enter
pop
add
addb
lcall
stos
adc
les
fildll
pop
fcoml
push
ja
jg
faddl
call
cmpsb
in
loope
jecxz
xchg
add
sbb
fistl
pusha
sub
js
aaa
decb
aas
mov
cmpsb
testl
pop
mov
clc
je
vptest
into
xor
jno
loope
and
sti
dec
stos
pop
xchg
add
popa
mov
xchg
daa
je
call
adc
jo
mov
sbb
out
test
sub
inc
push
dec
jo
xchg
jns
mov
mov
cltd
lea
adc
out
out
mov
mov
mov
dec
cmp
push
cli
inc
and
push
mov
js
popa
movsl
nop
cltd
push
xor
lcall
outsl
imul
pop
icebp
pop
ljmp
out
mov
stc
cmpsb
cmp
push
sti
outsl
in
mov
nop
sbb
shlb
movsl
mov
and
mov
pop
int
flds
or
jae
insb
clc
and
movsb
xchg
fidivl
ljmp
cld
adc
mov
sbb
jge
sub
pusha
push
mov
hlt
fnstcw
test
mov
ret
sub
adc
mov
pop
add
sbb
xlat
out
mov
inc
fsubs
mov
jg
cmc
fdivl
jge
xchg
aas
cmp
xchg
pushf
pop
xlat
dec
insb
aad
imul
push
jecxz
cmp
cld
fs
lahf
lret
jmp
inc
mov
lahf
mov
cs
adc
cli
fdivrs
sbb
in
mov
and
sub
jg
pop
or
adc
sub
arpl
jg
aaa
inc
dec
insl
mov
mov
mov
push
icebp
ljmp
das
add
xchg
and
repz
movsl
sub
lcall
cs
pop
inc
xorb
lods
cli
and
cli
rorl
shll
cmp
xchg
leave
in
and
rcll
in
jmp
jo
bound
adc
je
inc
divb
bound
outsb
pop
jns
outsl
add
imul
addr16
mov
rorl
mov
dec
inc
mov
add
add
loop
pushf
jl
shlb
push
lods
and
repz
ret
mov
scas
nop
orb
mov
xor
push
xchg
lcall
sarb
and
enter
push
xchg
shlb
push
imul
sub
outsl
sub
fisttpl
jmp
push
cmp
pop
test
dec
cmp
adcl
cmp
test
cli
cwtl
repnz
jle
test
dec
fninit
test
xchg
fildll
or
repz
xchg
jne
xchg
mov
cmp
enter
adc
jno
es
jecxz
into
mov
xlat
push
push
pop
pushf
shlb
into
inc
jae
mov
and
mov
iret
and
add
sbb
adc
enter
sub
inc
es
popf
pushf
sub
xor
adc
clc
lea
xchg
fisubrs
ret
inc
mov
adc
stos
xor
stos
fidivrl
sub
jne
lret
add
movsl
test
sub
fsub
xchg
mov
insb
and
stos
add
sbb
repnz
pop
das
rcll
inc
ret
pop
test
sub
int
lret
aad
xor
sub
out
mov
bound
test
outsb
inc
mov
ds
mov
push
inc
int3
ljmp
jg
adc
mov
xor
xlat
pop
or
xchg
jl
jns,pn
or
and
fimull
xchg
mov
in
pushaw
push
dec
ljmp
movsb
call
lret
mov
sbb
test
xor
rclb
lret
nop
lret
cld
fs
xchg
scas
dec
mov
arpl
push
adc
insb
or
jbe
test
and
dec
xor
stos
sub
lods
add
rolb
jl
push
bound
ja
rcrl
adc
cmp
dec
stos
dec
or
pushf
sub
cmp
lock
sbbl
lds
mov
and
aam
push
daa
inc
sbb
jmp
xor
cmpsl
loopne
mov
mov
out
dec
mov
movsl
push
hlt
adc
nop
sbb
add
fmul
xchg
loopne
stos
orl
loope
lahf
pop
mov
out
pop
insb
dec
pop
cmp
lret
or
cmp
out
call
xchg
lcall
and
popa
and
dec
and
or
or
push
xlat
test
xor
out
fmuls
mov
xor
adc
xchg
sbbl
xor
push
dec
push
lcall
call
sbb
or
jge
repz
xchg
movsb
repnz
aam
int3
out
addl
out
cmpsl
loop
test
push
and
inc
pop
sbb
push
jg
mov
and
cwtl
xchg
nop
test
test
push
dec
push
out
mov
leave
dec
cmp
iret
push
es
add
aas
ficomps
xor
mov
bound
add
or
int3
add
push
sbb
add
xor
jmp
sbb
sub
and
mov
pop
cmp
pop
pop
xchg
mov
sub
lods
fsubr
lcall
xchg
dec
inc
mov
and
aas
aad
rcll
andl
pop
sbb
pop
int3
shr
rcrl
cmp
xchg
dec
movsl
sar
sub
bound
xorl
add
addr16
fimuls
xchg
fs
push
leave
movsb
ss
mov
mov
pop
stc
xor
and
daa
cs
nop
inc
mov
dec
mov
div
fs
push
push
test
xor
pop
cli
adcl
xchg
test
rcrb
ret
sarb
sub
loopne
sub
cld
dec
cmp
out
jb
movsb
lahf
jg
les
mov
pop
dec
push
nop
jg
rcrb
push
or
add
sub
notl
popa
sbb
xchg
stos
outsl
inc
cmpsb
scas
cltd
dec
cld
jne
bound
mov
aaa
clc
loopne
mov
rorl
lods
stos
leave
out
pop
mov
adc
rcrb
mov
xchg
xchg
ds
xchg
adc
leave
shr
fwait
adc
aad
adc
cmp
xchg
lret
xor
push
xor
jne
stos
int3
inc
jo
dec
cmp
jecxz
cli
ja
pusha
andb
jmp
lods
push
xchg
insl
in
dec
sahf
rclb
sub
nop
testl
and
xor
push
popa
mov
adc
sbb
xchg
push
fisttpll
out
shl
test
leave
iret
pusha
nop
mov
cli
mov
repz
sbbb
movsl
xchg
and
or
icebp
test
xor
aas
sbb
outsl
in
jmp
xchg
mov
lds
lock
sub
inc
shll
das
sub
stos
nop
adc
lock
loope
and
ja
or
jge
adc
mov
cmp
popw
rol
adc
hlt
cmp
mov
dec
loopne
jno
fsubl
xor
mov
xchg
jbe
rolb
dec
jno
add
enter
adc
lret
movb
mov
lea
add
mov
add
movsb
inc
sub
cmp
dec
xchg
inc
mov
sbb
in
test
mov
sarb
fildl
pusha
incb
jp
daa
mov
xchg
push
mov
push
mov
pusha
das
iret
xchg
xor
push
xchg
cli
inc
add
xlat
cs
shrl
inc
xor
outsb
cs
mov
pmulhuw
lods
sti
push
jp
dec
and
push
test
dec
sbb
mov
sub
gs
ret
pop
cltd
aad
push
sbb
pushf
sub
lea
scas
ret
out
mov
xchg
stc
dec
cmp
enter
or
or
pop
loopne
fistps
and
xchg
icebp
jp
nop
lods
push
in
sub
jle
mov
push
jecxz
sub
lods
sbb
push
and
test
adc
pop
jo
in
bound
pushf
pusha
cs
stos
mov
movsl
out
repnz
shlb
enter
adc
inc
xchg
popf
inc
pop
into
adc
mov
dec
lret
dec
dec
int3
push
dec
jns
aad
imul
mov
mov
fdivp
adc
xor
mov
cmp
push
push
cmp
pop
int
out
cmp
jge
pop
pop
xchg
movb
scas
mov
pusha
cmp
push
add
jecxz
bound
shl
push
pop
sub
icebp
mov
pop
lret
int
pop
out
repz
test
cmpl
sub
jbe
pop
push
cmp
leave
jl
nop
xchg
jmp
adc
and
in
or
pusha
in
out
lds
mov
push
sbb
push
and
or
adc
div
jp
pop
mov
jb
dec
inc
and
cwtl
test
pusha
push
cmpsb
inc
cmp
lcall
enter
test
pcmpgtw
arpl
xchg
mov
ja
xchg
lcall
dec
mov
out
cwtl
and
mov
pop
push
sbb
stos
je
lods
test
dec
add
out
jne
dec
mov
sub
jmp
sti
test
call
outsb
mov
dec
jo
cmp
inc
fnstenv
cmc
cmp
test
lahf
repz
popf
cmc
xor
cltd
cltd
aam
bound
add
adc
adc
mov
dec
pop
ja
out
andb
cwtl
jmp
call
cmp
sub
out
ficoml
loopne
cmp
aas
push
or
mov
fs
push
data16
lret
dec
lret
insb
mov
jge
push
sti
outsb
cmp
je
rcr
mov
in
and
push
pop
cmp
jle
enter
out
mov
ret
dec
fwait
mov
push
push
inc
sbb
movsb
pop
push
lcall
push
push
sub
lret
add
out
loopne
inc
test
jge
aad
int3
cld
xlat
out
or
push
pusha
add
bound
lds
orb
jb
fistps
lock
jo
push
jmp
ret
sahf
and
out
lahf
sahf
insb
jmp
cld
jmp
ja
ret
add
popf
mov
popa
jl
adc
cmpsl
xchg
ljmp
push
pop
test
pop
lods
xor
test
lret
sub
dec
xor
adc
and
dec
mov
lock
jae
jge
fbld
ret
ss
mov
repz
xchg
push
push
in
cmp
mov
jl
sub
push
scas
add
mov
loop
cs
xchg
dec
xor
aaa
mov
aas
fidivs
inc
adc
and
shl
sbbb
mov
xchg
push
adcb
scas
iret
xor
mov
fucomi
push
sub
push
mov
shlb
mov
add
cmp
jmp
mov
sbb
jl
cld
in
in
cld
imul
jmp
xchg
popf
in
or
mov
sti
test
jae
jbe
adc
loop
leave
mov
movsb
mov
in
xchg
ja
add
pop
pusha
inc
stc
push
inc
jecxz
mov
push
jns
imul
lods
cmc
inc
inc
xor
jle
ret
cwtl
mov
or
jo
mov
lcall
test
es
fwait
lret
pop
xchg
test
mov
push
into
mov
sahf
add
cmp
xchg
inc
repnz
add
pop
out
jle
fidivl
jno
jge
dec
pop
pop
test
mov
enter
sbb
cmpsb
int
movsl
imul
loop
or
pop
lods
xchg
imul
lock
mov
inc
jb
ja
add
ss
adc
jne
adc
gs
mov
movl
lods
out
sahf
mov
xchg
fcomp
pop
inc
dec
sbb
jmp
xchg
lahf
dec
xor
mov
ljmp
jg
add
into
xor
int
loope
cmpsb
int
push
ja
push
jmp
mov
in
das
jl
adc
xchg
lods
or
lahf
or
hlt
xor
scas
xor
popa
mov
mov
xlat
stos
loopne
push
stos
or
cltd
jno
mov
push
xor
cmp
shll
ret
mov
adc
cmp
loopne
imul
or
fwait
jg
jb
jp
shlb
push
dec
xchg
ss
or
ljmp
cmp
cmp
pop
test
lea
testb
daa
imul
leave
or
sbb
shll
mov
dec
mov
adc
movsl
cmpsb
mov
std
sti
in
jne,pn
outsb
pop
xchg
dec
adc
sub
sti
mov
divl
add
xor
mulb
adc
or
mov
pop
sti
outsl
lcall
mov
sbb
fldenv
push
mov
push
int3
dec
out
aas
sub
adc
jecxz
cmp
mov
sbbl
in
movsl
mov
cltd
cmpsl
cmp
cmp
cltd
dec
jge
sbb
xrelease
mov
xor
adc
pushf
aaa
xor
pop
cmpsb
xor
call
pop
loope
xchg
movsb
fldenv
mov
pop
gs
divb
jnp
popf
and
pop
dec
jae
daa
adc
sahf
pop
mov
push
jmp
mov
inc
das
push
bound
xlat
test
pop
mov
mov
movsl
push
and
cwtl
push
stos
test
pop
push
out
xchg
jp
push
xchg
lock
sbb
or
lahf
out
dec
movsl
cmp
sbb
mov
mov
mov
mov
cs
xor
std
push
push
cmp
loopne
aas
mov
test
mov
jo
xor
sub
cli
cmpsl
jae
std
ljmp
pop
pop
inc
mov
or
stos
lcall
mov
out
ret
cwtl
xorb
dec
push
aas
sub
mov
and
dec
push
xchg
or
dec
inc
xor
loop
scas
out
xchg
addr16
outsb
dec
jnp
xchg
mov
bound
xorb
and
jo
outsb
das
lods
mov
cmp
gs
in
test
push
and
cld
push
lods
xchg
ficoms
je
push
outsl
loop
pop
test
pop
xor
push
jae
roll
test
iret
sub
dec
les
mov
dec
insl
les
dec
repz
fs
out
imul
fxch
and
lcall
jp
sub
out
push
cs
jmp
or
test
pop
out
jp
mov
fucomi
into
mov
in
or
jo
daa
pop
mov
dec
pop
inc
or
fcomps
and
jne
mov
mov
das
sti
out
mov
add
outsl
jecxz
mov
out
jnp
cmpsl
cmp
aaa
sub
leave
jb
icebp
popa
mov
rcrb
xrelease
lds
divl
sub
pop
inc
mov
push
lahf
push
scas
iret
addr16
mov
lret
ficomps
cmpsl
xor
lods
insl
out
data16
insb
inc
adc
dec
jae
xchg
mov
xchg
xchg
mov
mov
sarb
aaa
sti
dec
cmp
nopl
out
inc
out
add
js
xchg
repnz
pusha
mov
inc
and
gs
adc
sbb
hlt
push
push
ja
cmp
fldt
push
cmp
test
mov
mov
dec
insb
mov
or
lods
arpl
aad
fldl
enter
push
xor
jns
insl
pop
daa
insl
data16
icebp
mov
and
mov
mul
pop
or
movsl
dec
ret
and
insl
lret
jl
mov
into
xchg
dec
lock
mov
fistpll
rcll
aad
test
aam
mov
mov
nop
cmp
cmc
sub
mov
mov
push
adc
sbb
icebp
testb
arpl
mov
jno
mov
icebp
adc
pushf
cmpb
fs
push
inc
pop
cli
fucomp
inc
into
adc
sbb
inc
arpl
clc
test
popf
or
testb
sbb
hlt
loop,pt
xor
test
insb
adc
lret
xor
and
add
xchg
cmpsb
repz
scas
mov
jg
or
lahf
pop
cmp
mov
sub
jb
mov
cmp
mov
mov
and
outsl
cmpl
push
out
inc
xchg
mov
mov
push
and
push
shll
jb
add
jae
inc
popa
or
and
lods
xchg
inc
mov
rdtsc
test
imul
mov
pop
pop
cmp
bndldx
rclb
fldenv
mov
push
xor
hlt
jmp
xchg
add
mov
jno
sub
cmp
mov
movsb
je
jne
movsl
daa
pop
sti
add
ret
stos
aas
jp
pop
inc
popa
xchg
dec
inc
inc
int3
cltd
and
mov
add
test
pop
adc
imul
jecxz
rcll
stc
dec
imul
sbb
into
mov
or
std
cmp
outsl
fwait
pop
push
scas
adc
sbb
nop
sub
daa
jge
and
jno
mov
mov
adc
sbb
mov
imul
fstp
sub
mov
sbb
into
cmpsl
dec
hlt
mov
mov
and
xchg
pop
and
cmp
sbb
mov
mov
fs
cmp
mov
pop
add
daa
enter
jb
jmp
std
jecxz
sbb
movsb
gs
dec
adc
push
stos
negl
and
dec
cmpsb
js
loope
inc
gs
or
adc
push
movsl
pop
xchg
mov
inc
out
or
adc
dec
outsl
popa
js
sbb
cs
mov
das
and
popf
notl
xor
aaa
out
jbe
xlat
sbb
pop
jmp
pop
mov
loope
or
insb
inc
pop
es
pop
sub
mov
add
mov
cld
cmp
xor
shll
sbb
and
mov
sub
lds
inc
xchg
ja
xchg
negl
test
aaa
jbe
and
out
in
ja
or
dec
aad
pop
call
jl
out
sti
dec
push
sbb
push
leave
sbb
cli
xor
adc
cmpsb
xor
dec
mov
jmp
adc
jge
jp
xchg
xchg
xchg
mov
cmp
fiaddl
mov
mov
xchg
inc
ror
dec
lods
sbb
stos
sub
rolb
adc
enter
and
sbb
pop
jecxz
fstpl
mov
pop
inc
test
popa
mov
shll
sahf
inc
adcb
sub
mov
sub
xor
mov
add
push
loop
icebp
mov
inc
jb
test
rclb
lock
adc
fisubrs
mov
stc
jp
add
test
cltd
lea
mov
pop
in
cld
push
xchg
sbb
mov
movsb
adc
imul
hlt
cmp
pop
cmp
xchg
clc
add
imul
mul
testb
out
sub
insl
xchg
imul
inc
lods
mov
int
in
cld
sub
mov
leave
push
mov
jecxz
test
dec
outsb
fcoml
jae
inc
and
push
sub
dec
mov
icebp
fs
and
and
adc
pop
push
ret
mov
jne
aam
pop
or
int
jno
adc
cmp
stos
jl
jl
iret
dec
sub
cmpsb
or
pop
jbe
cs
mov
dec
sbb
cmp
leave
cmpsb
mov
xor
jb
repz
xchg
mov
dec
push
ror
fimuls
andb
mov
xchg
fisttps
dec
dec
addl
inc
in
sub
in
inc
xor
or
test
or
sub
repz
sbb
jnp
jns
clc
pop
sarl
and
adc
jb
ss
rcrb
fldl
mov
insl
xor
jae
out
dec
in
repz
cmp
std
pop
adc
mov
cmp
repnz
adc
shll
adc
jge
iret
mov
cmpb
loope
pop
out
shlb
daa
vmwrite
rol
add
roll
rcll
xor
inc
das
sbb
mov
lret
arpl
dec
and
sarl
pop
lret
mov
jl
jge
sub
aaa
mov
aad
aad
call
jmp
pusha
sbb
mov
jbe
jmp
xor
sti
cmp
mov
mov
or
inc
cmp
cmp
adc
aad
repz
popa
mov
adc
xchg
outsl
mov
repnz
xchg
shl
outsl
cmpsb
mov
sbbl
dec
or
lods
pop
adc
cmp
push
pushl
icebp
jg
push
setp
aaa
mov
inc
rclb
inc
push
xchg
cmp
in
dec
and
adc
inc
jmp
jb
loopne
rclb
mov
mov
mov
ja
cmpsb
iret
mov
mov
enter
or
push
push
dec
shlb
mov
add
ss
adc
or
popf
stos
in
lahf
incb
push
js
repnz
leave
popf
aam
popa
adc
cmp
lock
mov
mov
sub
or
mov
imul
cmp
xchg
getsec
lds
xlat
mov
jne
mov
sbb
sub
fldl
jae
je
mov
sbb
hlt
and
xor
mov
or
stos
push
lahf
mov
jns
mov
int
pop
add
testl
xchg
push
xchg
push
outsb
xchg
push
push
xor
xor
shr
push
or
lret
bnd
jo
push
fcoms
dec
faddl
es
into
mov
ljmp
fwait
cmp
sub
repnz
lods
inc
sub
pop
popa
cld
gs
inc
mov
lods
notl
pop
scas
dec
xchg
pop
mov
xor
inc
lea
test
pop
ds
mov
jns
xorl
jmp
in
xchg
inc
xchg
leave
pop
and
jmp
cs
movsb
outsl
mov
int3
lock
cmp
mov
sbb
jmp
scas
dec
sbbb
cmp
lret
jnp
adc
pop
mov
sub
cmp
jnp
stc
mov
pop
mov
push
jp
push
push
inc
sub
out
adc
stos
jmp
enter
idivb
add
loop
mov
addr16
jle
or
outsl
sbb
std
incb
stos
filds
scas
hlt
xchg
dec
mov
push
add
stos
or
mov
bound
jecxz
or
fwait
stos
int3
dec
aam
mov
dec
cld
hlt
movsb
or
mov
mov
sub
outsb
dec
adc
xchg
add
pop
jne
jbe
icebp
mov
dec
xor
cmpsl
xchg
or
clc
sbb
aam
push
add
in
pop
push
bound
std
adc
sub
test
cli
movsl
inc
and
mov
mov
outsb
clc
mov
inc
push
cwtl
sarb
and
stos
dec
and
out
push
addr16
add
fisubs
or
aas
mov
adc
outsb
test
mov
fld
inc
gs
pop
cmpsl
insb
jns
out
inc
stos
xchg
xor
jge
jl
inc
mov
inc
dec
test
incb
das
mov
mov
cmc
fnstenv
pop
push
imul
mov
mov
sti
xchg
mov
out
and
insb
or
pop
pop
push
pop
sub
mov
fucomi
int3
lea
leave
ds
lods
movsl
mov
sahf
push
test
or
rcrl
cmp
int3
fcmovnu
imul
mov
je
inc
xchg
mov
enter
mov
cld
and
mov
dec
test
pop
dec
dec
mov
pop
or
es
xchg
xchg
pop
lea
test
mov
jp
inc
in
sbb
add
push
push
rorl
add
fwait
cld
out
jnp
and
aad
add
add
or
ret
add
adc
push
fnstcw
xor
fisubl
in
lcall
pop
jp
jnp
sbb
popf
mov
imul
sbb
inc
sub
aad
imulb
ficoml
push
and
dec
mov
adc
push
sbb
xorl
fdivrp
ja
out
pop
popf
mov
mov
sbb
dec
fbld
or
out
daa
mov
roll
lock
ret
lods
fisttps
enter
pop
in
cltd
addr16
xchg
gs
and
shl
aas
pop
mov
mov
jno
jp
in
daa
lods
fisubrs
mov
inc
mov
cld
mov
out
mov
cmp
pop
inc
mov
push
mov
mov
and
push
sbb
cmp
jo
subb
jp
push
xchg
pop
mov
test
fwait
pop
daa
add
sub
call
inc
rorb
ljmp
jp
aad
mov
xor
inc
mov
std
sbb
imul
call
fidivrs
ja
pushf
xchg
ret
nop
or
out
cmp
xchg
dec
mov
into
jnp
push
pop
in
cltd
mov
shl
std
cmp
mov
jb
rcll
push
mov
sub
dec
mov
and
shrd
pop
loopne
ficompl
leave
imul
dec
adc
jle,pt
mov
mov
rcrl
xchg
push
jl
sbb
and
mov
jecxz
pop
fldz
adc
jbe
and
fiaddl
orb
pop
fisubs
mov
stc
jcxz
das
inc
into
cwtl
push
fwait
sbb
mov
xchg
xlat
fisubs
mov
in
mov
call
int
push
sarb
mov
mov
adc
fbld
stos
aam
test
imul
cld
std
out
mov
cwtl
nop
mov
aas
sti
mov
pop
dec
xor
cmp
je
repz
fcompl
test
xchg
adc
xchg
and
fbstp
mov
xchg
or
cltd
pop
test
packuswb
movsb
xchg
in
push
ljmp
outsl
lods
daa
push
mov
lret
rcl
mov
cli
push
punpckldq
mov
adc
je
jg
adc
in
lods
cmp
insb
push
mov
push
les
jbe
shlb
enter
jl
sbb
or
out
aam
push
adc
insb
shl
hlt
push
jl
in
mov
adc
jae
cld
test
and
cmp
daa
xor
and
push
dec
insl
mov
sub
xor
lea
repz
xchg
sbb
adc
sbb
mov
mov
cld
and
push
add
adcl
jbe
add
cmpsl
jmp
movsl
jle
cmp
pop
add
orl
lret
dec
adc
pushl
repz
aad
js
addr16
ret
push
call
andb
mov
dec
jns
mov
xchg
jb
rolb
in
sub
mov
or
shll
xchg
lods
cli
stos
add
in
inc
stos
push
push
cwtl
inc
orl
or
mov
lds
push
cmpb
cltd
insl
mov
lods
pop
xor
cmp
sub
inc
mov
push
sub
lea
test
cwtl
cs
xchg
ja
or
repz
in
aas
or
mov
xchg
lods
ror
add
cmp
mov
pop
popa
das
lret
xchg
cmp
jmp
cmp
sti
insl
pop
ss
ja
fcoml
and
cli
jmp
push
cld
pop
jb
nop
lret
xor
cmp
test
ljmp
loopne
adc
int3
jae
sbb
popf
rol
stc
dec
movsl
or
xor
and
fnstenv
or
repz
ljmp
outsb
cmp
cmpl
jnp
test
ret
xor
xchg
pop
dec
es
repz
dec
fistps
bound
cmp
cmp
xorb
out
add
nop
data16
mov
lret
cmp
cmp
iret
test
ss
xchg
adc
daa
in
ljmp
pusha
loopne
insb
xchg
int3
mov
push
jge
cwtl
movsl
push
or
sbb
mov
or
arpl
dec
jno
xchg
push
ljmp
lods
cltd
push
or
orl
xchg
and
or
cmp
ficoml
or
popa
dec
jmp
in
popa
repnz
andl
jae
mov
and
and
add
inc
cmp
test
idivw
inc
and
call
stc
jmp
cmc
pop
lcall
sub
call
xchg
jle
mov
add
shrb
fwait
les
loop
jl
cltd
insb
mov
arpl
das
add
jg
jl
lret
mov
pop
lock
adc
imul
movb
cmp
inc
and
mov
fbstp
xor
xchg
outsb
xor
lcall
repnz
pop
js
test
aad
xchg
pop
daa
addr16
pop
movsl
imul
or
sbb
fwait
ds
jnp
jg
and
jnp
ret
or
dec
sbb
insl
inc
xchg
lcall
add
sahf
cmp
pop
dec
lret
fbstp
adc
mov
adc
mov
adc
mov
imul
int3
in
jmp
ret
loope
popl
mull
add
xor
add
sub
cmovne
push
xchg
cmpsb
loop
hlt
add
sti
pushf
and
cmc
fdivrs
stos
repz
movsl
jecxz
lcall
and
shld
das
xchg
push
ret
jl
sub
insl
push
es
out
scas
das
dec
sbb
in
and
pop
xor
sbb
push
jnp
push
push
push
add
arpl
cmpsb
dec
inc
xchg
dec
sub
in
push
sbb
lock
jle
jle
insl
bound
push
or
scas
enter
sbb
testl
dec
stos
cli
inc
push
pop
shr
imul
fisttpl
mov
leave
mov
add
pop
fsubp
out
xchg
pop
call
jnp
addb
jge
shlb
adc
cmp
fsubrs
jl
add
jbe
or
ljmp
mov
add
xchg
popa
in
popf
mov
arpl
pop
dec
cmpsl
dec
int3
pushf
enter
cmp
mov
mov
div
cld
push
rorb
push
cmp
inc
stos
jnp
jns
outsb
fisubl
xor
push
data16
test
mov
arpl
ret
orl
cmp
fs
out
ret
jmp
add
push
inc
and
pushf
in
mov
push
loopne
rcll
popf
fsts
sbb
add
negl
inc
mov
pop
loope
xor
jge
cmpsl
popf
rcl
nop
jo
adc
push
lods
and
loopne
pop
and
push
sub
std
outsl
in
cmpsb
cltd
or
lret
inc
xor
aaa
fcmove
aaa
gs
loope
jp
addl
sahf
and
arpl
cs
mov
xchg
iret
push
mov
mov
pop
cli
aaa
mov
fsubrp
add
cmpsb
sub
orb
and
xor
popf
lahf
push
jo
or
cmpsb
imul
and
mov
push
cmpsl
ret
aaa
jle
dec
and
cmpsl
cli
in
sbb
or
mov
push
dec
cmp
jnp
push
das
cld
inc
pop
loopne
inc
inc
jo
xlat
and
push
das
xor
dec
loope
fcompl
fdivrl
nop
jg
lock
imull
add
imul
jmp
decl
test
inc
lret
mov
mov
sti
test
pop
movsb
inc
push
jb
push
dec
jecxz
sbbl
aaa
and
mov
cmc
popa
xchg
push
popa
outsl
int
std
mov
or
pop
jmp
add
leave
jge
dec
mov
test
sbb
les
in
cli
xchg
mov
mov
or
xor
sbb
fisubl
and
rcrb
pop
adc
outsb
add
jno
lea
std
aaa
pop
cltd
pop
rorl
shlb
xchg
xchg
cli
jmp
cmpsb
sub
ja
mov
fadds
dec
jl
iret
sbb
shlb
aaa
insb
push
clc
std
mov
std
aas
jns
inc
push
test
iret
pop
mov
sub
push
cwtl
sbb
cmp
fldz
shll
mov
addr16
xchg
sbb
aaa
mov
repnz
mov
fmul
icebp
enter
fst
enter
xchg
jle
cmp
sub
into
cmpsl
sub
data16
into
lret
and
mov
psrlw
roll
into
roll
jbe
jnp
xchg
popa
xor
negl
jge
mov
jne
add
mul
jne
ds
push
mov
mov
push
or
loop
adc
stos
pop
add
int3
xorl
mov
add
or
xchg
inc
mov
ja
add
mov
incl
rolb
mov
dec
out
int3
clc
jle
dec
outsl
popa
stos
mov
lcall
dec
jnp
repz
mov
js
pop
pop
iret
sarb
in
adc
testl
lods
or
add
aaa
xchg
lods
push
add
mov
mov
mov
adc
in
scas
mov
in
jne
add
push
mov
push
aaa
adc
imull
gs
shll
enter
cltd
cmc
add
and
je
fnsave
das
dec
hlt
scas
icebp
shrb
loope
pop
insb
popa
mov
subl
push
xchg
rorl
addr16
out
mov
aas
cld
dec
xchg
xor
mov
fdivs
and
scas
ja
mov
mov
mov
clc
sub
lods
inc
adc
loopne
adc
outsb
add
or
sbb
test
push
jb
popa
push
push
jo
push
cmp
in
xchg
out
fcomp
je
jo
fiaddl
adc
mov
inc
cmp
add
sbb
dec
mov
shr
mov
pop
in
jl
inc
xchg
jo
xchg
movsl
lahf
das
and
and
outsb
sub
mov
hlt
sbb
mov
sbb
repnz
lea
fcmovnbe
pop
jmp
insb
hlt
and
xor
sub
inc
stos
sub
pop
fisttpl
rol
scas
adc
adc
fisubl
mov
jp
dec
repz
pop
test
adc
aaa
mov
adc
lea
xor
stos
popa
pop
sysexit
shrb
inc
js
inc
inc
xchg
xchg
imul
in
and
adc
daa
cltd
inc
fwait
mov
hlt
adcl
or
dec
inc
pop
test
pushf
dec
add
xchg
sarb
jp
loop
jge
inc
xchg
cmp
imul
fistpll
frstpm(287
rcrl
mov
stc
faddp
cs
in
lds
add
or
xchg
inc
movl
push
dec
insl
sub
stc
jnp
xchg
push
insl
mov
ret
fwait
push
add
mov
aas
inc
cmp
pop
inc
xor
add
and
loope
lret
fdivl
fldt
in
iret
jle
pop
outsb
pop
scas
add
in
mov
xchg
cmpsl
clc
mov
jns
sub
out
in
cmc
cmp
jecxz
arpl
jbe
test
je
push
mov
jno
xlat
loop
sub
add
es
int
cwtl
out
mov
xor
push
xchg
dec
lods
ficoms
jae
mov
sub
dec
nopl
pushf
cwtl
jp
clc
cmc
jle
mov
pop
aam
add
insb
std
and
out
sbb
mov
inc
and
gs
mov
popa
pop
mov
or
repnz
les
push
test
xor
andb
push
inc
enter
dec
sub
shrl
popf
sub
pop
lret
jnp
rcrb
add
repz
push
sbb
iret
mov
rcll
test
mov
adc
fwait
inc
dec
sub
mov
xor
out
loope
fimuls
push
jg
xchg
push
imul
adc
add
lock
out
and
cs
sarb
cmpsb
inc
inc
mov
add
lret
addb
pop
push
vmread
out
lods
out
mov
adc
cmp
adc
pop
enter
push
data16
ljmp
xchg
shl
mov
mulb
out
xchg
mov
sub
jg
jg
jge
jnp
xor
jecxz
decb
or
xchg
in
mov
inc
daa
popf
psubusw
dec
lahf
sbb
jnp
movzwl
mov
fxch
mov
dec
mov
out
jno
adc
dec
aad
jge
test
out
leave
ja
jge
push
fimuls
iret
rorl
call
or
aad
test
sub
jno
inc
sub
fstpt
lret
hlt
xor
push
int
jno
lret
mov
xchg
xchg
out
pop
call
cmpsb
inc
mov
pop
test
xchg
aas
jb
xchg
outsl
rcr
insb
mov
mov
les
pop
cld
insb
push
xor
xor
or
addr16
sahf
adc
test
sub
aam
push
fisubrl
pop
stc
arpl
and
mov
mov
fs
adc
out
xor
mov
test
push
or
cmc
inc
mov
call
jo
and
mov
cs
rclb
cmp
fcmovne
mov
xor
call
sub
xchg
xchg
sti
daa
mov
sub
insb
jns
mov
dec
cmpsl
movsb
test
ds
push
push
inc
xchg
or
xor
push
aas
ljmp
loope
sahf
fwait
push
enter
in
adc
out
push
push
push
ja
imul
and
xor
add
ljmp
xchg
inc
adc
jg
stos
js
sub
cli
push
test
mov
ljmp
xchg
lcall
bound
fldl
jp
and
insb
dec
xchg
mov
cltd
ret
enter
js
lock
shrl
fstps
shll
insl
rcll
fucomp
lock
adc
mov
add
push
test
xchg
ss
mov
aas
test
xchg
or
jne
dec
int3
fildll
xchg
mov
ret
shrb
xchg
mov
iret
mov
sub
orb
stos
xlat
mov
pop
or
cltd
mov
outsb
ds
sbb
xchg
mov
jle
pop
jbe
int3
in
scas
inc
sub
jno
jle
dec
nop
adc
jecxz
fs
mov
jl
das
jge
and
test
dec
sbb
pusha
loopne
push
dec
shll
sub
jo
mov
pusha
xor
add
xor
testb
add
jbe
mov
push
adc
sub
inc
xchg
push
mov
je
rcrl
out
adc
test
add
loopne
stos
loop
sub
add
or
jns
cld
into
mov
push
cmp
mov
jns
mov
in
pop
loope
stc
jbe
neg
mov
in
data16
enter
dec
mov
add
or
dec
movsl
cmpsl
outsb
and
dec
inc
adc
mov
jne
cli
jl
imul
mov
lret
mov
dec
mov
xchg
repnz
mov
js,pt
clc
mov
sbb
fistl
xor
xor
adc
addr16
loope
xor
dec
testl
roll
loop
mov
sbb
shlb
icebp
js
mov
insb
nop
outsb
mov
inc
mov
pop
aam
add
sbb
ror
clc
mov
arpl
xor
enter
cli
mov
jmp
pop
sub
stos
out
jmp
sub
mov
fcom
inc
xor
adc
aam
sub
cmp
and
cmp
cltd
inc
mov
mov
arpl
mov
repnz
pop
and
cmp
sub
cltd
test
push
lret
outsl
dec
subl
fldcw
cmpsl
stos
mov
imulb
jl
mov
sub
adc
es
pop
adc
xchg
out
aad
into
mov
add
sti
les
xlat
mov
push
adc
dec
fcomps
inc
call
jmp
mov
xchg
into
pop
adcl
das
jl
fwait
sahf
mov
fs
stos
mov
add
cmp
les
call
fdivl
lds
fidivl
add
cld
or
jnp
lods
ss
bound
dec
dec
mov
repnz
sub
and
icebp
ret
add
imul
nop
dec
stos
aad
add
adc
leave
cmp
mov
inc
movsl
add
xchg
leave
or
aas
xor
jb
test
arpl
pusha
and
out
xchg
call
mov
or
in
add
adc
hlt
or
add
push
ret
jns
pop
ds
sub
dec
mov
fistpl
mov
xchg
rolb
xor
hlt
out
jp
loop
popa
arpl
sbb
mov
scas
sub
es
adc
movsb
lahf
nop
push
pop
jno
push
std
jle
add
sub
sbb
lea
xchg
and
cmc
fxch
xor
push
and
test
inc
lds
rdmsr
clc
mov
pop
mov
shll
or
add
inc
ret
mov
adc
mov
popa
inc
decl
mov
imul
movsb
add
adc
sarl
loopne
add
lret
inc
fwait
mov
xor
iret
js
movsb
jecxz
andl
mov
sub
mov
push
lret
in
addl
jae
sti
movsb
mov
int
divb
rolb
icebp
sahf
test
pop
sarl
sbb
mov
sub
dec
lock
test
add
cs
pop
mov
mov
incl
dec
aad
push
sbb
or
push
add
lret
xor
xchg
scas
jp
or
idivb
test
popa
test
mov
fsubs
add
pop
and
sub
jno
in
shrb
cmp
outsl
sarb
jl
movsl
mov
into
and
popa
mov
es
lahf
mov
cmp
xchg
mov
test
hlt
hlt
push
cmp
inc
cli
jno
pop
in
add
mov
dec
inc
fisubrs
push
inc
push
mov
call
movsb
fildl
mov
cmp
sub
stc
je
repnz
shll
adcb
push
out
movsb
mov
jge
loope
rcrb
mov
add
loope
push
lcall
or
shrb
sbb
clc
fs
adc
icebp
aaa
shl
add
dec
std
out
std
lds
in
adc
cld
push
dec
lahf
push
inc
daa
mul
movsb
ljmp
aad
out
dec
jno
mov
cli
sub
pop
push
adc
gs
mov
cmp
sub
xor
mov
fs
xorl
js
call
sub
pop
mov
incb
xor
mov
dec
jmp
jbe
fidivs
sti
loopne
sbb
inc
push
leave
and
pop
xor
adc
mov
mov
pop
lea
bound
jbe
xchg
out
inc
hlt
lds
ret
loope
cmp
lods
xchg
mov
insb
aam
js
mov
add
add
outsl
repnz
dec
or
or
mov
pop
sbb
mov
jp
and
test
aas
cmp
mov
push
mov
xor
icebp
filds
push
xor
jnp
sti
outsb
sbb
and
imul
adc
js
fidivl
push
jecxz
fldl
subl
js
or
mov
mov
add
ret
mov
repz
gs
mov
jbe
push
andb
pop
mov
dec
cmp
jbe
push
xor
pusha
mov
jg
repnz
jnp
sub
cmp
das
icebp
mov
sbb
pop
push
sahf
inc
movb
lcall
jbe
sbb
jae
ljmp
jns
nop
xor
jmp
pop
int
push
fists
das
dec
cli
pop
test
insl
xchg
orb
or
jnp
test
ret
stos
out
or
inc
fcompl
sbbb
dec
out
inc
xor
cmpsb
test
jle
movsb
or
sbb
mov
insl
popl
jp
inc
gs
mov
test
lea
mov
sbb
or
aas
mov
aas
inc
repz
out
repnz
sahf
and
insb
mov
fisttpll
ret
adc
rorb
jnp
lods
cmp
inc
dec
sub
and
cmp
jae
ror
addl
aad
sti
cwtl
sahf
out
jns
mov
lret
lods
inc
cmp
pop
and
pop
mov
cmp
lock
mov
jnp
push
scas
dec
sub
imul
addr16
iret
push
xor
mov
and
lahf
rolb
fldl
push
sbb
inc
movsb
jne
mov
add
cmp
push
jecxz
cmc
enter
cmp
push
cs
cld
addr16
pop
pop
aad
xchg
imul
mov
orl
add
adc
test
enter
jae
push
out
stc
mov
jne
jnp
loope
mov
and
xor
outsl
cmp
jg
add
dec
outsl
cmc
je
mov
sbb
imul
mov
lret
aas
xchg
cmp
and
mov
lods
in
mov
int
mov
and
cmp
mov
or
shlb
fldl
or
fcoml
and
arpl
cmp
jmp
push
inc
xor
es
popl
push
jl
jg
pusha
cmp
mov
shl
and
outsl
jnp
dec
sti
mov
cltd
dec
xchg
or
clc
mov
repz
in
cld
test
or
insb
imul
adc
mov
sbb
cmp
pushf
lods
aam
mov
ficomps
adc
in
mov
inc
stos
sub
and
dec
pop
pop
push
mov
add
daa
adc
sub
in
mov
out
cli
inc
cmp
sbb
iret
sub
addr16
sbb
nop
int3
mov
jne
mov
data16
jecxz
movsb
lock
inc
sbb
dec
xchg
arpl
and
jl
test
lock
ja
and
cmp
nop
push
and
xlat
xchg
mov
mov
cmp
gs
out
dec
divl
fcomps
cmp
sbb
xorl
adc
dec
test
repnz
cmc
fsubr
test
and
pop
mov
and
andb
sub
dec
xchg
andb
push
clc
adc
mov
mov
in
in
rorl
rclb
xchg
popa
add
fwait
sub
call
sub
and
inc
xchg
rclb
ret
sbb
xchg
pop
enter
inc
pop
jge
mov
lea
int3
rcrl
jno
jp
rorl
bound
divb
movsb
stos
xor
jl
xchg
cmp
jae
sub
pop
or
push
rclb
clc
popa
out
iret
sti
cwtl
test
cmpb
popf
test
dec
repz
testl
dec
test
mov
pop
stc
xor
js
or
jecxz
popf
cmp
cmp
frndint
pop
mov
cld
out
es
negl
lcall
lds
mov
inc
or
ret
rcrl
sub
and
inc
and
shll
xorb
nop
xchg
mov
adc
fstps
jg
sub
push
pop
add
frstor
sbb
ljmp
arpl
ret
loop
mov
rol
push
sbb
jge
xchg
dec
daa
xor
dec
popf
sbb
xchg
fcomps
push
ljmp
insb
out
repnz
inc
xchg
jmp
and
std
stc
fisubrs
shlb
jge
push
mov
inc
divb
out
pop
push
fucomi
push
std
mov
push
lahf
sub
sahf
divb
add
js
ss
push
mov
mov
push
or
roll
adc
jmp
xorb
sarl
enter
xchg
mov
jns
xor
iret
out
inc
inc
mov
add
jp
lods
and
cmpsl
cmpsb
ja
cmp
mov
inc
nop
sbb
mov
into
mov
and
cmp
jle
inc
fmul
shlb
push
sbb
mov
arpl
ret
les
fnstsw
cli
mov
inc
test
push
sbb
mov
addr16
xchg
mov
lods
mov
jbe
sub
jl
pop
mov
lcall
xchg
inc
add
imul
and
mov
sbb
jmp
cmpsl
dec
cmp
stc
insb
adc
or
push
mov
add
add
add
cs
mov
or
lock
lcall
adcl
mov
lock
push
jl,pn
movsb
pop
jne
cmp
lahf
jge
lret
mov
mov
loop
leave
rcr
dec
int3
repz
in
clc
and
mov
or
pop
lret
pop
cmp
out
loopne
adc
inc
xchg
push
clc
xor
adc
inc
mov
cmp
loop
add
mov
cmpsl
or
repnz
push
testb
shlb
jge
and
pop
sub
sub
add
ja
cmp
test
in
arpl
sahf
popf
or
jo
xchg
notb
int
in
or
or
pop
jecxz
push
ret
mov
dec
lock
loope
push
mov
repz
adc
xlat
je
push
int
sbb
adc
stc
xchg
in
sbb
xchg
sbb
sbb
jnp
mov
push
add
movsl
test
movsl
ret
xchg
test
pop
lahf
lods
mov
movsb
loope
push
jns
pop
sarb
or
sub
jmp
scas
sti
pop
mov
jp
mov
inc
mov
inc
jne
ljmp
xchg
punpckhbw
aam
push
add
insl
mov
rcrl
std
rclb
jge
inc
enter
testl
mov
int3
dec
ja,pn
xorb
jmp
mov
test
push
out
jo
xchg
push
inc
lods
mov
sbb
js
lret
jp
decb
or
mov
nop
mov
xchg
mov
and
cmp
sub
in
sub
lods
or
and
mov
aam
addb
jmp
xor
mov
xor
xchg
mov
jmp
inc
mov
sub
in
mov
or
xlat
and
sub
pop
mov
mov
ror
jmp
mov
sub
stos
test
or
xor
sbb
nop
mov
out
mov
mov
push
out
dec
mov
stc
jl
inc
ss
xchg
je
daa
cmpsb
mov
cwtl
das
xchg
shlb
adc
cmpsl
popa
mov
add
cltd
cmpsb
arpl
mov
lock
fwait
dec
sbb
outsl
imull
insb
add
fmull
mov
std
int3
cmp
adc
leave
and
pop
dec
shrl
mov
xor
mov
test
pop
stc
repnz
andl
cld
inc
mov
cmp
sbbb
or
test
inc
mov
and
dec
push
push
push
xor
lds
and
xchg
movsb
cwtl
movsl
pop
loopne
movsb
and
or
out
je
test
lret
xor
xor
sbb
bound
or
push
sub
sarl
dec
adc
mov
imul
or
mov
jo
cmpl
dec
test
push
cmp
xchg
scas
sti
dec
sarb
std
sub
add
jno
jnp
pushf
movsb
cmp
das
or
lcall
adc
push
mov
test
mov
out
loop
sub
dec
loope
pop
push
stos
inc
or
adc
sbb
xchg
jecxz
adc
push
popa
call
leave
enter
push
push
out
les
je
rclb
fstp
xor
fs
mov
test
dec
cmpsb
push
subl
mov
fsts
cmp
ds
add
adcb
fistpl
out
arpl
mov
scas
gs
ficoms
outsb
xchg
mov
std
fwait
mov
int3
pop
sahf
fsts
xchg
ds
pusha
cmc
push
scas
cmpsb
pop
sbb
push
divb
test
jne
icebp
mov
leave
cmpb
mov
mov
cwtl
in
daa
lods
fsts
inc
idivl
popf
push
dec
cmp
inc
jo
outsl
sbb
xchg
hlt
insb
in
inc
mov
test
inc
out
fiaddl
in
in
fs
imulb
cmp
sbb
push
dec
dec
mov
iret
in
jg
ret
jo
stos
add
shl
jae
mov
pop
jle
xor
inc
sub
cs
rorl
insl
or
jne
or
jmp
xchg
movsb
pop
lock
imul
aad
negb
lret
sti
mov
das
mov
jae
sbb
out
jae
jo
outsl
push
or
add
inc
fdivl
sub
and
lret
jle
add
adcl
daa
add
mov
insl
jle
cmc
sahf
xchg
testl
je
icebp
mov
pop
push
lea
jno
addr16
out
fiadds
pop
mov
sahf
cmp
movsb
mov
fldl
pop
cmpsb
cmp
fcmovnb
pushl
aas
pop
lds
xchg
mov
arpl
fs
sub
out
fstpt
adc
popf
push
mov
pop
roll
xor
sbb
mov
scas
pop
cmpsl
rclb
aaa
in
sahf
xorb
das
movsl
sbb
imul
lret
aas
mov
dec
sbb
pop
cmp
cmp
push
xlat
pusha
or
cmp
xchg
adc
xchg
cmp
or
sbb
xor
lcall
pop
in
cmovle
fists
and
mov
adc
sub
lcall
pop
cmp
mov
mov
nop
divl
jge
pop
mov
mov
adc
fcmovu
push
mov
xchg
push
cmpl
add
mov
movsl
mov
aaa
scas
push
int
js
imul
mov
scas
dec
scas
cmc
inc
arpl
out
rolb
daa
pop
movsl
aam
repnz
or
or
jae
pop
shr
ss
xchg
js
cmp
repnz
inc
mov
xchg
mov
add
xlat
inc
add
das
xor
mov
dec
push
dec
lock
jge
ret
lock
xchg
jae
mov
mov
lea
xchg
push
mov
and
jae
repz
bound
xchg
je
cmp
adc
mov
jge
xor
jbe
movsl
loopne
fbstp
int3
sbb
sub
arpl
leave
mov
subl
lock
dec
mov
cmp
cmp
frstor
mov
adc
lock
jge
push
jp
js
ret
jg
add
in
insl
loope
stos
lret
dec
push
ficoms
lds
sub
call
sub
scas
push
mov
push
sub
jno
out
or
sahf
jbe
mov
xchg
and
scas
cmp
testb
in
imul
xchg
outsl
jg
les
xchg
scas
lahf
das
jp
scas
xor
mov
in
add
fwait
adc
leave
pop
int
daa
sub
popa
daa
mov
push
out
cld
scas
loop
cmpsl
gs
xchg
int3
mov
out
push
enter
adc
mov
pcmpgtd
repz
inc
mov
ljmp
pop
add
aas
push
pop
pop
inc
lock
sbb
push
movsb
repz
sub
add
cmp
mov
pop
ficoml
mov
jp
out
mov
clc
sahf
jns
cs
pop
je
dec
aad
js
push
imul
mov
push
adc
xchg
and
lea
loopne
icebp
add
sbb
mov
repz
mov
out
add
fwait
test
movsl
pop
nop
das
add
jmp
andb
jb
icebp
push
fidivrs
lds
xlat
dec
in
daa
cmp
sbb
repnz
xor
add
notl
xchg
or
aas
xchg
ret
jg
sub
lods
cmp
dec
pop
shrl
je
data16
sub
cmpsl
mov
adc
ja
pop
mov
inc
sub
rcll
mov
push
adc
sbb
dec
stc
and
repnz
push
xchg
pop
imul
in
mov
mov
popa
pop
adc
xchg
and
repz
sbb
repz
movsb
imul
push
fwait
adc
iret
jmp
jl
mov
add
insl
sub
sbb
pop
pop
jmp
add
cmp
lods
lea
pop
push
mov
in
add
pushf
fsts
xchg
push
dec
or
dec
jb
mov
mov
and
mov
out
xchg
cmp
cmp
cld
sti
lods
outsl
jb
xchg
int3
aad
mov
test
xor
adc
jp
mov
inc
outsb
lock
fcompl
int
adc
cwtl
sbb
rcrl
insl
stos
out
fadd
cmc
mov
stc
and
scas
adc
lods
cs
faddl
int
stos
movsl
sub
xchg
aam
xchg
lods
jns
test
test
pop
mov
jns
fstp
punpckhdq
mov
stc
xchg
movsb
cmc
fucomi
ret
mov
jecxz
jp
add
lds
seto
cltd
addl
sub
hlt
inc
xor
bound
mov
and
jl
fs
jbe
cmc
iret
jmp
sbb
filds
mov
push
sbb
sbb
dec
insl
dec
mov
ret
add
jle
dec
fistl
and
sti
and
jbe
push
scas
fcoml
add
inc
push
xlat
cli
cmpsb
in
pop
or
add
and
mov
mov
cmp
and
rolb
sti
mov
dec
inc
and
add
rorb
mov
push
ret
hlt
call
dec
lahf
xchg
fisttps
jg
mov
mov
cmp
lods
pusha
iret
fcompl
mov
xor
cmp
add
je
iret
push
shl
fldl
dec
cld
sub
ds
sub
test
cmp
push
push
add
cmp
in
and
pop
js
sbb
call
add
ret
icebp
mov
xor
sahf
call
and
mov
test
ja
jns
sub
inc
mov
test
mov
inc
push
cltd
pushf
iret
ljmp
fsubp
lcall
dec
ret
mov
sub
pop
adc
into
push
inc
iret
xor
orl
out
pop
pop
jnp
cmp
cmpsb
mov
xchg
in
inc
push
xchg
xchg
xor
xlat
add
lea
sub
or
add
ja
push
sarb
stos
jp
push
sub
pusha
pop
in
fwait
mov
xchg
mov
cmp
push
das
mov
pop
mov
lea
das
notb
inc
out
shrb
or
leave
lret
jp
xchg
push
fidivrs
gs
call
iret
sub
out
xchg
jg
dec
rorb
aaa
jns
popa
push
mov
out
jno
adc
add
dec
push
shlb
add
pop
cli
push
or
push
hlt
inc
adc
daa
jae
ret
movsb
lods
mov
jo
dec
sbb
movsl
dec
and
in
lods
std
out
or
mov
addl
aad
sub
loope
iret
js
xor
into
clc
sahf
mov
repnz
pop
sub
divl
sar
iret
mov
xchg
jecxz
dec
inc
ja
adc
mov
aas
and
adc
fs
hlt
popf
lahf
mov
mov
add
push
xlat
add
xor
shlb
leave
dec
ret
jbe
push
sub
sahf
jp
xor
testl
je
ja
ja
loope
ja
xor
gs
push
and
mov
xchg
mov
add
push
pop
xor
pushf
iret
xchg
xchg
addb
xor
test
insl
xchg
and
fiadds
mov
and
sarb
lret
scas
add
or
shlb
pop
fstpl
dec
pop
mov
test
inc
dec
test
imul
outsb
pop
push
or
dec
in
or
ja
aas
push
adc
cmp
loop
jmp
push
ljmp
jg
push
sub
push
decl
divb
and
daa
lret
popf
popa
dec
imul
insl
insb
mov
mov
push
jnp
mov
adc
aaa
inc
test
or
xor
pop
lcall
scas
pop
inc
inc
test
xor
or
push
push
out
pop
dec
out
push
xor
out
or
jmp
flds
pushf
stos
adc
push
and
push
insb
sbb
mov
aas
nop
pop
movsb
push
mov
pop
mov
pop
pop
pop
and
mov
xor
mov
xor
sbb
jmp
or
cli
push
mov
call
loopne
mov
jmp
sub
push
dec
and
stc
mov
je
into
imul
adc
sbb
mov
push
and
rcl
sbb
jg
es
stc
sub
cmp
mov
lea
aas
leave
xor
loope
mov
add
or
andl
cmovp
mov
jnp
and
repnz
mov
test
bound
pusha
testb
loopne
pop
sub
cmpsl
inc
es
lods
es
sahf
test
loop
mov
mov
aas
and
and
dec
in
dec
adcl
movsb
mov
mov
mov
pop
das
out
out
or
sub
xchg
hlt
aam
cmp
and
and
lods
xor
pop
pop
pop
movsl
sbb
mov
test
inc
dec
xor
xchg
lea
iret
rolb
aaa
fwait
loopne
mov
ss
jp
mov
mov
lods
inc
cwtl
daa
aas
xchg
pushl
adc
mov
out
bound
jge
mov
push
dec
shll
das
or
adc
xchg
test
cli
jo
and
xchg
push
cmp
jbe
clc
or
xchg
aad
ss
pop
add
adc
mov
inc
mov
adc
fucom
std
cmp
cs
and
es
sbb
lcall
ss
js
sub
out
aad
sbb
in
jle
push
xchg
jns
int
xchg
or
dec
jmp
pavgw
mov
aad
jl
mov
jns
fisttps
je
adc
rcrb
mov
xor
mov
mov
add
and
push
mov
jp
cs
daa
leave
aaa
roll
push
mov
lds
rcll
sub
mov
xchg
jb
mov
cmp
inc
xchg
mov
lock
mov
sahf
push
clc
stc
mov
lret
mov
ret
sarl
mov
std
xor
mov
jno
into
mov
sbb
pop
jo
int3
cld
or
pop
cli
sub
cwtl
repnz
push
ss
ja
popa
mov
push
ret
hlt
js
xor
add
and
mov
mov
ja
hlt
push
fs
and
cmp
movsb
scas
or
insl
outsb
inc
pop
inc
jp
adc
ljmp
inc
mov
sub
icebp
outsl
push
push
pop
ss
jle
pop
orl
cmp
jne
add
push
jmp
out
repz
or
dec
xchg
jbe
adc
aad
dec
lcall
mov
jo
xchg
pop
scas
mov
xor
pop
mov
sbb
std
mov
pusha
jb
filds
loope
mov
and
push
cld
mov
lret
aad
in
push
test
cmpsb
adc
mov
sbb
sbb
jl
pusha
test
dec
add
push
std
mov
cmpsb
sbb
pop
adc
loopne
mov
std
jmp
repnz
imul
scas
arpl
pop
dec
aaa
int3
test
push
jo
jne
lret
ds
call
mov
fimull
mov
pushf
sub
imul
mov
jmp
lea
cmp
in
push
pop
loop
outsb
add
adc
push
jp
cmp
fcoms
jl,pt
jecxz
jb
inc
cmpsb
fucomi
pop
xchg
test
adc
ja
jge
mov
ret
fwait
cld
lds
scas
mov
pop
pushw
imul
jne
xchg
out
pop
xor
mov
sub
adc
hlt
or
mov
xor
cltd
push
ss
test
ja
inc
mov
add
call
mov
xor
scas
aam
ja
out
bound
xchg
mov
xchg
push
in
aaa
dec
pop
push
jmp
jno
js
out
mov
shll
ja
dec
xor
les
add
out
adc
sti
shr
loopne
daa
hlt
sub
test
ljmp
lret
or
mov
fsubr
jmp
mov
mov
lret
mov
sbbb
mov
add
loope
jb
cld
mov
jl
data16
mov
cmpsl
movsb
in
leave
push
lret
pusha
xor
adc
ss
xchg
pop
cltd
je
addr16
fnsave
inc
add
out
pushf
test
sub
sarb
push
and
mov
sbbb
cltd
cltd
and
es
mov
xchg
adc
pop
cltd
decb
subb
mov
ret
mov
or
sti
xchg
sar
pushf
jl
fcomip
sarl
jge
push
insb
jp
cmc
mov
fwait
adc
adc
aas
dec
call
push
rcr
cs
lods
sbb
adc
inc
loopne
sub
dec
sti
leave
push
cmpsl
mov
mov
add
scas
jb
cmp
lcall
rcrb
jmp
mov
mov
pop
out
sub
add
sub
adc
call
das
rorl
imul
mov
shll
rcl
mov
int3
inc
xchg
subb
cmp
pusha
test
cmp
cmp
dec
push
clc
scas
cmp
subl
lea
les
or
scas
rcr
pop
push
inc
xor
ret
cmpb
into
in
popf
xchg
lods
or
dec
jne
cmp
popf
fsubl
imul
ret
out
push
and
push
scas
call
insl
out
cltd
inc
imul
adc
inc
out
mov
adc
or
push
nop
xchg
arpl
fcomps
cmp
xchg
pop
or
xchg
aaa
insb
pop
lcall
popa
mov
ljmp
push
frstor
pmullw
aas
outsl
mov
aad
jle
fsubrl
lods
aad
in
fs
pop
mov
nop
mov
jno
sub
jge
aas
push
cmp
clc
mov
js
rorb
and
push
scas
data16
cmpl
add
aam
or
scas
rcr
xor
push
jg
outsb
pop
imul
sub
leave
and
mov
aas
test
cld
mov
loope
xchg
aad
mov
in
ret
test
std
test
push
cmp
add
mov
movsl
iret
xchg
test
out
les
ljmp
mov
dec
xchg
bound
push
add
jecxz
movsb
sbb
pop
adc
arpl
jmp
and
mov
imul
fxch
outsb
repz
xor
push
mov
inc
pushf
stc
arpl
cmp
cmc
adc
aad
clc
aas
lods
pop
ljmp
loop
cmpsb
inc
loopne
shll
and
dec
pop
xor
inc
jl
mov
aam
add
jns
addr16
call
and
sub
sahf
xor
cwtl
sbb
jo
insl
jbe
jp
jle
pop
iret
cmc
das
jge
sti
pusha
scas
ret
std
lcall
mov
mov
lret
cltd
mov
jae
xchg
nop
insl
xor
jnp
testl
push
push
out
lock
pop
icebp
pop
jnp
xchg
jb
cs
js
inc
xor
mov
daa
mov
repnz
mov
loopne
jmp
inc
pop
lret
pusha
adc
sbb
cmp
mov
jbe
insl
and
clc
clc
add
repnz
vhsubpd
lds
dec
mov
cmpsl
push
int
stc
jge
lret
repnz
fldcw
ds
pop
out
mov
sahf
sbb
repz
push
cmpsb
xchg
stc
mov
rorb
cmpsl
lock
rcll
out
xchg
in
xlat
add
pop
loop
mov
movsb
xchg
ja
lcall
cmp
nop
enter
popf
insb
cmp
stc
and
xchg
sbb
es
jae
fiadds
xchg
fildll
leave
sahf
std
push
mov
ljmp
xor
inc
lds
push
imul
testl
es
cmp
cmp
mov
lock
sub
lock
pop
mov
dec
pop
cli
add
out
jae
cmp
ljmp
mov
hlt
lods
insb
and
dec
xor
jg
aad
aas
push
jno
mov
cld
pop
and
les
fwait
sbb
xchg
dec
xchg
sbb
sub
inc
ds
or
in
mov
mov
jb
ss
dec
adc
mov
sbb
fsubl
bsr
mov
xor
add
daa
inc
fs
ljmp
fists
scas
jge
sub
xlat
push
rolb
fwait
cmp
xor
enter
sbb
pop
dec
movsl
cmp
cli
or
sub
stos
xor
enter
pop
pop
pop
fsts
mov
xor
rorl
test
xorl
inc
xchg
jnp
aas
sar
sar
pop
popa
inc
test
popf
test
lods
sbb
cmp
sub
mov
xor
stc
sbb
or
or
lcall
pusha
addr16
cmp
in
jle
aaa
mov
les
push
xchg
mov
cmp
jnp
sub
sti
add
in
jb
in
sbb
xchg
aaa
sti
inc
jp
pop
push
pop
out
jge
xlat
fiaddl
fildll
std
jecxz
inc
cwtl
mov
lret
imul
shl
adc
popa
cmovne
roll
stc
shlb
inc
pop
pop
mov
or
popf
inc
cmp
lock
mov
out
cld
mov
ljmp
pushf
fisttpll
fdiv
sub
push
sbb
lcall
mov
xchg
mov
adc
imulb
repz
mov
push
push
dec
scas
xor
pushl
inc
xchg
test
clc
jecxz
imul
rclb
mov
or
mov
aam
jge
dec
std
dec
hlt
lcall
ret
inc
aaa
int3
pop
adcl
inc
loop
cmpsl
iret
dec
imul
mov
xlat
ss
push
and
test
rcl
adc
out
lds
lahf
nop
adc
mov
xor
xor
or
scas
jge
lods
stos
pop
imul
enter
int
pop
mov
adc
mov
in
and
movsl
add
xchg
iret
and
or
ret
mov
pushf
mov
movsl
in
push
xchg
dec
pop
jecxz
mov
xchg
loop
adc
mov
call
das
sbb
fistps
test
pop
fsqrt
push
clc
jnp
add
dec
loop
pop
dec
cltd
mov
sub
js
xchg
push
push
sub
mov
rorb
sbb
sub
cmc
xor
sub
test
add
gs
shrb
mov
ljmp
rorl
inc
test
jb
sbbb
push
and
shrb
adc
cs
es
xchg
mov
fdivrp
adc
in
mov
aad
mov
ret
fnstsw
ljmp
fisttpll
push
fwait
loopne
and
cmp
dec
fsts
icebp
int3
dec
cs
punpckhbw
sti
mov
sub
jg
push
fidivs
fidivl
pop
gs
or
adc
add
mov
mov
and
iret
mov
test
cltd
xchg
rorb
mov
sbb
dec
cltd
adc
mov
shll
push
cmp
stos
dec
js
out
jb
mov
fs
mov
cmp
dec
dec
ficoms
xchg
cmp
je
rcll
jmp
outsb
inc
repnz
add
outsl
outsb
add
aam
and
das
push
loope
scas
nop
mov
aaa
push
das
mov
cmp
shrb
inc
mov
pop
insb
sbb
jge
rclb
ss
mov
jb
lret
pusha
cmp
jbe
mov
addb
add
rolb
lods
dec
ss
push
test
movsb
add
aam
pop
sbb
mov
jp
xchg
pop
sub
jae
xchg
push
jmp
pop
pop
mov
lret
inc
aaa
outsb
dec
repz
dec
inc
mov
clc
and
clc
shl
lods
xchg
dec
mov
inc
dec
jge
pop
orb
stos
mov
mov
mov
daa
rorb
pop
pop
lods
dec
mov
cmovnp
inc
pop
mov
fisubrl
xchg
fcom
dec
and
adc
les
test
sti
sbb
xor
xor
mov
or
lret
sahf
data16
jno
imul
shrb
ss
sub
jle
dec
int3
mov
or
gs
adc
movsb
inc
popa
rorl
loopne
data16
adc
xchg
sub
jp
jle
dec
aad
xor
add
clc
add
mov
rolb
cltd
inc
mov
mov
xchg
inc
mov
sbb
mov
mov
into
stos
sub
mov
cltd
mov
jbe
mov
pop
mov
aam
lahf
or
out
add
dec
xor
cmp
movsb
mov
aas
loope
mov
sub
cwtl
cmp
add
out
pop
cmp
mov
and
rclb
insl
adc
mov
dec
jmp
adc
dec
dec
aaa
scas
sub
mov
xchg
loope
cld
mov
sub
cld
outsb
adc
out
pop
rorl
int3
ret
sarb
je
adc
js
pushf
repz
lods
push
iret
and
in
imull
fidivrs
push
fwait
sub
sbbl
jns
mov
xchg
mov
xchg
cmc
jbe
xchg
sub
ror
cmp
mov
cmp
jne
es
orl
repz
std
mov
adc
cmpsb
movl
stos
xchg
lret
add
inc
push
xor
jmp
jb
xchg
push
movsl
sub
cmp
sbb
xor
xchg
cwtl
pusha
jg
adc
or
repz
fsubrl
in
shll
pop
inc
push
push
cmpsb
xchg
dec
call
dec
mov
adc
push
or
sbbl
jb
xchg
in
cmc
push
jle
or
jl
jmp
mov
mov
in
dec
fistpl
mov
lods
push
in
mov
jmp
xor
inc
dec
fimuls
leave
std
mov
dec
sub
out
out
mov
mov
and
sub
bound
cwtl
push
or
in
mov
mov
dec
aad
pop
cmc
fsubr
xchg
sti
test
test
aas
in
xor
and
cmp
cmp
push
sub
ljmp
shll
push
data16
hlt
and
je
fs
xchg
hlt
mov
je
je
test
jbe
test
inc
adc
push
mov
addb
lds
ret
testl
dec
cmp
pop
sbb
lds
sub
and
or
sub
push
add
out
loope
sbb
mov
mov
push
data16
ret
ljmp
addl
fisubs
xor
cmc
jmp
in
sub
pop
rcll
pavgb
gs
testb
movsb
dec
insb
sbb
mov
outsb
andl
in
inc
xchg
jge
dec
sub
or
cmpb
cwtl
inc
jae
popf
push
pop
cmp
jmp
shlb
aam
popf
jmp
mov
jae
add
lods
bound
mov
sbb
stc
fiadds
loop
xor
hlt
push
lods
test
movb
out
lcall
pop
inc
push
pop
loope
arpl
xchg
cli
adc
pop
sub
es
inc
hlt
lret
pop
sti
pop
ja
adc
xchg
mov
dec
mov
aaa
jbe
dec
mov
fmuls
dec
nop
jl
and
pop
fldt
mov
out
cwtl
pop
or
pusha
and
or
and
adc
div
cmpl
stos
lret
adc
cltd
imul
enter
jle
mov
int3
jns
bsf
cmp
adc
lods
jne
orl
filds
cmp
ret
pop
mov
push
lcall
js
gs
adc
inc
shlb
and
cmc
add
mov
leave
add
das
pop
mov
daa
sarb
adc
jbe
adc
dec
mov
xchg
stos
in
xor
scas
adc
cmpb
mov
enter
jns
insl
mov
jge
bnd
mov
inc
inc
mov
shrl
scas
in
fists
imul
in
jno
movsb
dec
xchg
xchg
lods
mov
push
jns
jno
stc
push
scas
mov
cmp
jg
push
jmp
test
push
aad
inc
movsl
inc
fsubr
loopne
push
in
mov
loope
xchg
test
dec
lds
ror
shl
mov
add
addl
xlat
or
inc
inc
scas
shrl
mov
ret
sbb
pop
cli
lss
lret
dec
fsts
adc
in
loopne
and
arpl
push
cli
pushf
das
sbb
daa
mov
nop
inc
mov
xchg
idivb
sub
pop
xorw
enter
out
xor
cmc
aam
adc
jbe
in
daa
or
xchg
cmp
or
imul
lds
push
xor
ret
jl
fisttpl
decl
jl
insb
lret
mov
clc
pop
rclb
push
sub
nop
js
jnp
add
test
push
adc
dec
pushf
pushf
mov
sub
sub
and
sbb
cmp
fsubr
xorl
add
xchg
test
xlat
xor
and
es
pop
outsl
ja
mov
test
push
fs
push
fnsave
mov
insb
nop
pop
popf
mov
sub
jnp
mov
or
insb
pop
test
leave
repz
inc
mov
jae
jg
sub
sbb
ljmp
mov
ret
stos
xchg
lock
xlat
insb
stc
aaa
push
fs
push
and
mov
mov
mov
or
fdivl
ss
xor
mov
xchg
lea
cmp
je
mov
adc
ja
pop
arpl
cmp
xchg
dec
fnstcw
fcompl
pop
jo
jbe
jo
jnp
mov
sarl
push
out
lahf
sbb
inc
sub
leave
or
decb
ss
inc
sub
xor
mov
jns
jp
mov
jae
or
ss
or
push
rcll
lods
push
ret
cmpb
or
pop
icebp
push
loop
fldt
add
test
movsl
fs
loope
and
test
mov
xchg
es
ss
mov
imul
test
dec
insl
cmp
pushf
pop
and
pop
lret
je
push
sub
xchg
inc
sub
inc
popa
mov
jecxz
xchg
jg
aad
sahf
add
adcb
cmp
dec
pusha
cmp
imul
dec
cmp
sub
arpl
sbb
les
cs
and
mov
mov
sub
addr16
test
repz
push
in
cs
cmp
shll
and
out
out
aaa
xor
test
add
sub
shr
inc
mov
push
pop
cmpsl
cmp
cmp
pop
in
pop
int
mov
movsb
cld
mov
push
sti
jp
aas
jb
test
sub
pop
inc
fstpl
fcmovnb
cmc
push
out
dec
mov
cmp
mov
dec
fsubs
fidivrl
es
mov
dec
cmp
xchg
add
mov
lods
jecxz
pop
push
dec
jge
add
std
pop
jbe
mov
and
aam
or
test
pop
stos
sub
stos
shlb
mov
or
aas
push
cmc
and
sbb
stos
jle
mov
xlat
or
push
inc
loope
lcall
inc
ja
fdivrl
shrl
push
bound
xchg
movsl
lahf
lods
js
mov
int
sbb
pop
pop
jl
inc
aad
cmp
lret
add
iret
add
scas
lds
xlat
filds
push
xchg
loop
dec
mov
fidivrl
lahf
test
xor
dec
rcrl
dec
mov
je
add
ret
daa
jl
add
push
mov
dec
cmc
adc
mov
xchg
jg
iret
pop
pop
enter
cld
xchg
cmp
mov
gs
outsb
ret
mov
cmp
xlat
or
scas
outsl
sbb
inc
bound
mov
mov
shll
test
sbb
push
xchg
lahf
cltd
icebp
pop
pop
out
mov
pop
rcrb
jne
fwait
lods
xchg
sub
es
push
xchg
sub
mov
loope
cmp
aas
test
lcall
xchg
out
imul
or
dec
and
pop
jg
mov
or
push
and
cs
inc
inc
jp
and
cmp
push
in
ljmp
xchg
fisubrs
aad
out
sbb
neg
push
mov
xlat
xor
xor
pushf
popf
push
gs
pop
cmc
push
xchg
cmc
and
fimuls
cmpl
sub
das
mov
lret
pop
std
sarl
pop
or
pop
sub
fidivrl
push
mov
movsb
pop
xchg
es
mov
jnp
negb
dec
xchg
mov
icebp
ror
iret
jbe
push
cltd
or
lock
std
cltd
out
mov
push
mov
into
ljmp
into
cmp
push
sbb
or
rol
inc
lret
mov
cs
sub
sar
sbb
outsl
inc
in
mov
or
push
inc
sbb
popf
lcall
or
adc
sbb
dec
sbb
xor
mov
enter
popf
jg
sub
call
inc
test
popf
cmp
push
popf
aas
add
loop
popa
jecxz
out
mov
daa
mov
jge
out
aam
mov
mov
es
pop
adc
pop
xchg
lods
jno
rorb
mov
cmp
jbe
pop
push
je
outsb
jbe
pop
cmp
pop
xchg
loope
and
or
clc
jno
cmp
adc
lea
lret
inc
sub
xchg
imul
cmc
push
pop
popf
negl
addr16
mov
insl
jmp
push
repz
arpl
in
leave
pop
gs
sarl
stos
push
cli
aad
pop
mov
cs
sbb
pop
lods
inc
insl
mov
cwtl
xchg
dec
fwait
roll
push
xchg
sub
sub
mov
das
add
sbb
pop
mov
data16
cmp
js
les
rcrl
rcrb
dec
push
adc
nop
mov
xchg
sbb
cmc
jp
mov
pop
push
in
dec
add
nop
xchg
data16
inc
push
pop
sbb
ja
jl
fbld
fnsave
rep
lret
jg
pop
mov
sub
sub
push
jp
ss
jg
stc
add
cmp
lret
or
sub
inc
stos
jae
idivb
mov
imulb
sbb
pop
adc
cli
pop
mov
or
jle
mov
xchg
push
cli
mov
sub
mov
fsubs
sub
add
pusha
push
jns
negb
movsb
gs
inc
gs
nop
xlat
xor
mov
les
ljmp
sub
mov
cmp
inc
pusha
inc
dec
dec
mov
pop
sbb
out
out
les
and
test
sub
mov
and
adc
jbe
pushf
arpl
out
lcall
mov
push
lock
gs
clc
and
xor
rol
imul
and
push
inc
fiaddl
and
aaa
inc
pop
mov
push
jae
insb
jb
xchg
cmp
repnz
hlt
xorl
push
stos
test
das
pop
fs
push
sbb
cmp
orb
ret
ss
imul
dec
and
loopne
inc
sbb
push
mov
movsb
dec
loope
shrl
arpl
adc
inc
fucomp
rcl
jecxz
or
mov
iret
mov
cmp
out
mov
fwait
out
jp
dec
adc
dec
mov
clc
push
mov
add
sbb
mov
stos
lods
and
dec
lds
adc
mov
sbb
pop
push
dec
jge
xchg
xor
into
add
pop
lods
negl
xchg
dec
or
pusha
push
push
lret
loope
adc
in
sbb
push
popa
inc
mov
jo
cltd
pop
push
mov
inc
fwait
jge
inc
std
inc
cmp
and
xchg
sarb
pop
das
mov
mov
mov
cmp
sbb
in
mov
movsl
aaa
push
fildll
movsb
jns
pop
jb
addr16
inc
inc
pop
inc
out
fadds
add
sbb
ret
arpl
mov
enter
adc
pop
loop
jg
add
int
dec
test
xor
xchg
popf
or
fdivrl
ljmp
pop
xor
dec
std
jg
out
mov
xchg
sbbl
sbb
push
add
das
hlt
add
and
xchg
mov
js
inc
inc
mov
pop
rcll
pop
add
cmp
cmp
mov
enter
mov
pop
or
lret
push
push
push
adc
les
sahf
lret
repz
jecxz
fists
data16
sbb
idivl
pop
test
jbe
mov
mov
call
test
xchg
divb
adc
jnp
fisubrs
sbb
pop
mov
dec
test
jnp
push
stc
add
sub
sub
ds
pop
std
pusha
push
xor
fsubp
stc
mov
inc
dec
icebp
dec
xchg
mov
gs
xor
aam
pop
repnz
mov
push
xchg
dec
cwtl
lahf
xchg
roll
aas
ffreep
xor
jbe
cld
daa
sub
paddsb
jo
shrl
cld
cs
jmp
ja
stos
in
inc
cvtpi2ps
jbe
dec
pop
push
inc
or
pop
mov
dec
add
push
movsb
clc
and
mul
repz
xor
shlb
roll
push
cmp
lret
mov
out
and
inc
mov
adc
xor
js
sbb
std
xchg
dec
jno
bound
or
iret
mov
xchg
popf
lahf
pop
sub
cmp
shll
inc
idivl
shll
pop
inc
hlt
je
add
sub
push
aaa
jbe
and
int3
inc
push
aaa
sbb
popa
mov
call
aas
pop
rcrb
lds
js,pt
call
ret
mov
adc
orb
mov
loopne
lods
aaa
mov
jbe
mov
sbb
pop
loope
lret
int
stos
je
dec
int
sub
popa
hlt
aaa
scas
mov
xchg
xchg
outsb
mov
mov
lds
and
pop
inc
mov
push
add
scas
jb
cltd
mulb
shrb
cs
in
or
pop
test
push
rol
xor
loopne
or
cmpsl
enter
loopne
int3
popa
icebp
sub
clc
rep
mov
dec
jp
repnz
mov
adc
cmp
mov
or
dec
xor
mov
adc
sub
push
stos
sbb
mov
std
jns
enter
push
xchg
idivl
push
sub
jnp
mov
xchg
pusha
mov
pushf
cmp
mov
f2xm1
bound
mov
pop
mov
out
in
mov
pop
imul
xor
xchg
scas
pushl
pushf
out
cmp
or
stos
pop
in
fsubrs
pop
test
arpl
jmp
or
hlt
mov
dec
and
js
fbstp
arpl
mov
lea
jno
xor
subb
lock
ret
lods
jo
and
or
gs
jge
pushf
ja
xchg
js
sbb
or
sbb
imul
adc
push
xlat
xorl
lds
mov
jnp
push
addl
inc
js
cltd
nop
cmp
mov
clc
imul
mov
cmp
std
nop
mov
sar
call
push
pushf
mov
push
sub
jg
xchg
add
aas
dec
or
jno
stos
or
sbb
int
popa
sub
pop
and
repnz
inc
test
dec
cmp
and
lret
add
testb
cli
enter
loopne
push
mov
push
adc
xchg
call
inc
bound
jae
enter
push
insl
jno
jae
sbb
in
push
std
nop
xchg
xchg
repnz
out
jo
dec
lcall
xchg
insl
mov
jo
lret
lock
dec
adc
loop
rorb
shlb
loope
cmpsb
push
call
nop
mov
add
std
int
fcomps
mov
xchg
insl
loope
iret
mov
lret
jg
cltd
test
icebp
loopne
sbb
mov
push
pop
scas
mov
xchg
or
pusha
push
jnp
adc
lods
stos
add
push
inc
scas
inc
xlat
je
push
mov
jmp
add
imul
stc
test
pop
enter
cmpb
xchg
push
scas
stos
mov
rclb
xor
mov
or
out
or
push
cs
xchg
cmpl
jno
pop
cmp
or
das
jge
mov
jp
mov
addr16
out
mov
dec
adc
int3
retw
pusha
adc
pop
repnz
flds
sbb
lcall
jb
cwtl
andl
lea
stos
lea
push
lret
xchg
sub
add
mov
pop
sbb
dec
in
int
inc
std
dec
jb
ds
xlat
ja
ss
in
loopne
inc
mov
sahf
jle
xchg
out
cmovb
cmp
movb
mov
out
fwait
adc
rcrb
push
dec
adc
scas
push
add
cld
push
xor
jecxz
sbb
or
xor
loop
push
mov
push
sub
push
sub
push
push
loopne
loope
fwait
and
add
adc
add
pop
lea
or
push
push
stos
add
test
leave
js
cmpsb
xor
clc
rorb
cmpsl
out
inc
sub
pop
or
mov
insb
arpl
push
cwtl
mov
or
add
les
idivl
in
imul
loope
cmp
bound
addr16
shll
in
push
iret
sbb
add
adc
notb
shlb
cld
sbb
loop
scas
and
or
add
pop
lods
pusha
aad
loopne
mov
pop
adc
bound
xchg
xlat
dec
mov
mov
cmp
loope
and
popf
mov
fmull
dec
icebp
push
roll
rorl
mov
loopne
sti
mov
mov
imul
ja
int
mov
dec
jnp
push
or
imul
pop
push
add
pop
pop
dec
outsb
add
sarb
xchg
xchg
mov
outsl
push
pushf
js
and
out
sbb
leave
or
stc
mov
push
mov
or
or
push
jge
stos
mov
lds
cld
sbb
mov
and
cmp
jecxz
inc
pop
pop
ljmp
add
loopne
test
repnz
xor
out
or
jo
xchg
in
stos
or
cld
add
mov
repnz
xor
cmp
mov
repnz
neg
cli
jnp
xor
mov
mov
sbb
add
and
mov
int3
imul
push
mov
push
icebp
cmpsl
jno
shrb
sarb
stc
std
inc
int
rorb
in
mov
cmp
dec
adc
mov
cmp
in
lock
movq
xchg
add
daa
xchg
mov
xchg
push
inc
pop
stos
lcall
ja
popa
sub
xchg
xchg
in
arpl
cli
dec
and
sbb
mov
and
aas
xchg
xor
pop
pop
add
cmp
mov
shrl
inc
repnz
cwtl
imul
mov
test
cmpsb
jmp
xchg
shll
xchg
sub
das
push
sbb
adc
and
mov
adc
enter
mov
jb
mov
test
cld
pop
xchg
jno
and
pop
add
pop
pop
ljmp
outsl
xor
outsb
dec
push
lds
lock
aaa
xor
mov
xchg
mov
es
leave
jb
daa
aaa
push
jmp
jp
push
inc
test
fiaddl
pop
sub
xor
push
gs
mov
cli
inc
cltd
les
xchg
mov
pop
dec
shll
push
mov
aam
and
addr16
std
mov
gs
adc
push
in
aad
daa
xchg
insl
pop
sbb
mov
pop
mov
int3
nop
xor
pop
ret
mov
fs
adc
fisttpll
sub
adc
pop
jo
and
popa
out
out
adc
jge
mov
popf
dec
cmp
inc
or
adc
out
dec
inc
mov
sbbb
cmp
leave
je
int
dec
test
rolb
rorl
pushf
push
and
fsubs
cltd
loope
insl
stos
mov
fdivl
pop
sbb
mov
push
xor
mov
mov
icebp
jb
pop
ss
mov
adc
repz
sub
push
jecxz
lock
lds
cmp
andb
test
into
xchg
outsb
pop
jno
fists
mov
add
ds
jns
sub
cmp
out
jp
cmc
and
cltd
pop
out
int
push
adc
pusha
int
frstor
dec
pushf
cltd
popf
pushf
inc
rcrl
jb
lea
mov
test
pop
sbb
xchg
add
daa
xor
clc
or
fsubrl
rcrb
fidivl
jne
enter
fwait
dec
dec
add
mov
insl
inc
out
and
mov
sbb
dec
out
mov
iret
xchg
cmp
xor
lods
sar
and
into
and
jmp
jp
sbb
bound
fstl
push
pop
repz
sub
jno
inc
pusha
mov
push
daa
and
sbb
cmpsb
out
cmp
jge
xchg
lods
push
sahf
rorl
into
or
test
push
dec
dec
pop
inc
inc
outsl
popa
pop
in
add
mov
adc
fiaddl
aaa
cmp
loop
xchg
loope
test
filds
cmp
mov
pop
and
jo
lods
or
test
into
mov
icebp
add
aaa
fiadds
jge
in
pusha
call
pop
mov
sbb
ret
in
xchg
and
mov
adcb
sub
push
fwait
int3
loope
xor
mov
dec
int3
jnp
dec
mov
adc
push
mov
stos
push
lock
sar
add
sbb
push
xor
mov
popa
jecxz
cmpsb
lea
jo
inc
fadds
push
add
fwait
xchg
mov
stos
aam
sahf
dec
mov
je
in
jne
test
jmp
out
push
and
and
orl
inc
outsl
inc
mov
ds
mov
fsts
mov
add
mov
cmp
mov
in
ja
push
sub
cltd
push
sti
mov
lock
pop
adc
js
xchg
clc
xchg
xchg
inc
lahf
out
cmpsb
inc
jmp
repnz
dec
mov
xor
sub
leave
dec
addl
sbb
inc
out
insl
mov
mov
xchg
int3
pop
push
lret
xor
jnp
mov
add
or
out
testl
jo
jns
repz
pop
push
lods
in
out
xlat
adc
jb
ds
addr16
push
hlt
imul
add
dec
mov
int3
imul
and
pop
sub
mov
dec
sbb
jmp
sbb
push
mov
or
push
icebp
add
sbb
inc
add
push
out
or
push
mov
xor
adc
jns
pop
test
rcrl
out
fwait
xchg
xor
cld
clc
cmp
xchg
lods
xchg
jg
nop
xor
xchg
xorb
pushf
or
inc
pop
mov
out
leave
divb
mov
sahf
cmp
sub
xor
mov
dec
mov
mov
scas
pop
xchg
cmp
adc
cmpsb
in
stc
xchg
adc
sbb
sub
leave
fwait
push
mov
les
pop
mov
xorl
aaa
xor
popf
inc
ret
or
insl
mov
or
push
std
js
iret
mov
repz
lea
mov
xor
pop
jmp
out
bnd
xor
imul
pop
jecxz
inc
jae
pop
pop
loop
enter
pop
stos
cmpsb
mov
dec
aad
sub
sbb
fsubl
jecxz
xchg
les
pop
repz
insb
inc
pop
xchg
loope
cmp
dec
popa
outsb
sti
add
add
nop
inc
pop
stos
jne
push
dec
mov
xchg
repz
add
test
test
push
mov
mov
xor
jb
data16
adc
cmpsb
clc
mov
rcr
dec
pop
sarl
stos
mov
cld
mov
mov
flds
or
aaa
cmpsl
sbb
ret
xor
jns
mov
imul
call
sbb
push
enter
lret
xorl
inc
stos
mov
dec
roll
aaa
xchg
out
dec
imull
fistps
xchg
loopne
and
mov
mov
cwtl
lret
jle
stos
loopne
or
jle
cmpsb
enter
out
xchg
movsb
arpl
adc
mov
push
and
out
cmp
jae
fdivs
inc
push
jnp
mov
ss
cmpsl
jle
int
lock
int3
mov
mov
fstl
and
in
hlt
adc
divl
sbb
les
xchg
mov
cmp
scas
mov
ficoms
pop
in
popa
mov
mov
jl
lods
cwtl
lock
push
xor
sbb
loope
cs
arpl
mov
faddl
bound
lcall
mov
push
push
lcall
mov
mov
pop
sarl
mov
push
lahf
test
pop
xchg
cmpsl
push
sbb
jbe
jno
xchg
leave
aad
jle
fcompl
push
imull
into
inc
xor
into
jns
movsl
push
pop
cld
add
pop
imul
fcmovnb
bound
test
lock
incb
dec
jb
lock
sbb
jae
pop
adc
inc
adc
cltd
jb
cmp
fadd
sub
jge
in
push
push
inc
popa
frstor
dec
shlb
jae
xchg
imul
aad
fidivrs
dec
lahf
imull
lods
bound
cmp
jbe
xchg
test
insb
sbb
cmp
jns
mov
pop
pop
scas
pop
jae
imul
cmp
add
push
jns
push
cli
push
mov
nop
xor
cmp
rcl
xchg
setge
push
mov
icebp
ja
dec
lods
cmp
in
jo
push
cli
rclb
fs
test
icebp
push
xchg
jo
ret
les
sbb
lret
jmp
inc
popa
add
adc
mov
adc
or
js
pop
mov
jl
mov
jns
add
lret
sbb
pop
mov
daa
mov
push
mov
jnp
jmp
scas
jmp
leave
mov
cmp
sub
xchg
push
daa
cld
das
sub
mov
lahf
mov
xchg
scas
inc
test
out
out
inc
jg
push
call
sbb
add
repnz
pop
ja
jne
fidivs
jns
ret
xchg
pop
das
mov
mov
mov
pushf
dec
cmpsb
iret
lret
lock
push
push
jmp
or
fsubrl
push
jo
movsb
cmp
xchg
push
fidivrs
pop
sbb
dec
movsl
pop
mov
pusha
mov
sub
push
mov
lods
push
imul
cmp
mov
lcall
into
lahf
popa
dec
sahf
insl
orb
in
ss
out
leave
xchg
pop
sbb
add
and
inc
lahf
lods
aas
loope
lcall
outsb
adc
lea
lods
sbbl
push
dec
adc
sbb
js
xor
cltd
inc
xor
test
push
leave
add
xchg
mov
push
mov
adc
outsl
push
add
or
dec
inc
cmp
subl
sahf
cwtl
xor
xor
push
popf
in
les
repz
test
pushw
jg
mov
add
jae
sti
ljmp
int3
xor
inc
sbb
mov
or
and
add
sarb
pusha
pop
pop
or
fnstsw
lahf
lret
mov
pop
add
cmp
aas
add
jge
incb
jge
cld
lret
sub
rcll
sbb
push
leave
cmp
push
leave
adc
lcall
mov
add
inc
scas
sub
and
jbe
mov
jb
dec
in
xchg
loopne
and
out
pop
mov
push
sub
mov
leave
push
mov
mov
nop
lret
js
stc
lret
push
loope
icebp
out
shl
mov
les
pop
cmp
dec
jecxz
cmp
in
scas
mov
sarb
daa
mov
pop
adc
lods
dec
mov
inc
hlt
rclb
int3
cmp
mov
fs
mov
fstpt
inc
cld
sub
cmc
popf
push
icebp
shrl
mov
movsl
movsl
movb
mov
inc
xchg
push
imul
mov
mov
mov
outsb
or
fsubrs
in
sub
xchg
add
add
pop
add
aam
mov
out
xor
mov
xchg
push
push
inc
cwtl
dec
sahf
pop
rorb
adc
aas
sbb
rcl
jp
xor
aaa
test
stos
mov
es
rorb
xchg
mov
aaa
pop
nop
lds
xor
pop
idiv
dec
mov
cmp
dec
jge
shr
mov
hlt
mov
mov
add
out
test
test
fidivrl
add
pop
cmpsl
pop
out
inc
rcrl
sahf
lahf
stos
adc
lret
and
and
jae
ja
ja
scas
push
shlb
xor
imul
jnp
push
mov
xor
adc
das
fdiv
scas
scas
out
dec
scas
xor
fstpl
in
add
sbb
test
lock
mov
movsl
adc
sbb
cltd
jp
push
rol
xchg
movsb
mov
pushf
js
cmp
insb
xchg
mov
ret
dec
inc
jae
mov
pop
mov
cmc
pop
push
push
mov
sbb
sub
incl
dec
insl
pop
dec
mov
bound
int3
fdivr
add
lods
lea
pusha
xchg
lahf
test
leave
call
mov
sbb
cmp
push
jecxz
xor
ficoml
int
mov
notl
xor
xchg
dec
das
insb
dec
and
aas
dec
mov
jo
pop
andl
add
xchg
sbb
lret
sub
inc
inc
adc
fidivrl
jmp
push
push
hlt
popf
add
std
adc
pop
jle
adc
jg
mov
lahf
in
xlat
outsl
roll
cs
fnstenv
or
sub
sub
jl
insw
and
sbb
test
jl
push
jb
mov
mov
xor
inc
not
xor
mov
ret
in
sub
cmp
jno
les
out
dec
sub
outsb
mov
or
pop
cli
popa
inc
cltd
aaa
test
inc
aad
call
cmp
rcrl
mov
ficompl
mov
fisttpll
in
mov
cmp
aas
das
push
scas
in
add
fwait
testl
jmp
ljmp
imull
mov
int
das
pop
and
and
mov
dec
in
divl
xlat
cmpsb
mov
and
hlt
mov
out
pop
and
jmp
mov
cld
xchg
xchg
adc
inc
sub
push
sbb
adc
in
mov
mov
cmpsb
pop
jno
mov
roll
pop
jmp
jo
shll
loope
leave
push
push
std
mov
enter
or
jge
scas
loopne
and
imul
shll
pop
iret
jmp
ret
jecxz
gs
or
cld
nop
jbe
dec
inc
divl
add
int
inc
and
rolb
jae
fisubs
dec
lock
mov
lods
xor
adcl
cltd
orb
cmp
push
jl
pop
decl
lods
and
cli
sub
xchg
arpl
incb
aaa
call
dec
adc
or
shlb
pop
add
adc
xor
or
int3
mov
inc
cmpb
and
push
daa
adc
mov
int3
ljmp
cwtl
popf
and
gs
sahf
lock
loop
add
jge
xorb
aam
lcall
mov
mov
mov
push
xor
pop
mov
xor
fs
stos
jns
xor
jae
rolb
test
adc
cmpsb
mov
mov
cmp
and
movsb
or
out
jns
in
lods
test
repnz
mov
jg
jle
sbb
incb
and
in
pop
repnz
sub
dec
adc
into
insb
xorb
int
pop
ficoml
xor
clc
mov
lret
or
jg
mov
mov
ficoml
sbb
mulb
cmp
out
dec
push
loopne
lret
mov
mov
push
inc
jp
jb
ds
inc
jbe
popa
sub
mov
pop
and
shrl
mov
pusha
mov
jno
mov
adc
addr16
sbb
scas
sub
lds
scas
push
aaa
call
popf
test
stos
cmc
loope
xchg
xchg
and
dec
stos
mov
mov
jmp
adc
pop
dec
add
mov
outsl
scas
jns
fistl
lods
aad
bound
adc
push
sub
sub
andb
out
push
aad
or
mov
mov
cli
mov
jns
lock
ds
push
decb
inc
lock
mov
call
or
adc
leave
xor
subb
nop
in
push
push
orl
cld
push
lods
das
dec
cmp
lds
lret
div
out
orb
ljmp
cmp
notl
mov
sub
lret
leave
push
cmp
cmc
inc
pop
out
mov
ds
or
test
mov
lret
iret
je
inc
orb
dec
mov
push
inc
loope
cmc
cwtl
mov
clc
sub
jno
ret
jmp
cmc
push
enter
pop
push
jnp
mov
mov
mov
pop
sub
gs
push
sti
test
inc
repz
sarb
push
ror
jae
es
jle
jo
cmp
or
aaa
push
inc
jnp
pop
push
cltd
std
cmp
fwait
cs
mov
push
mov
cmp
fcomps
cli
das
rcrl
fstpl
dec
lock
repnz
mov
jbe
or
dec
test
aam
lahf
sbb
adc
test
fldenv
sbb
idivl
hlt
in
lcall
lret
pop
sbb
lods
cmc
sar
nop
cld
inc
push
jmp
mov
add
pop
jb
and
jb
sahf
rol
pop
ficoml
sbb
inc
outsb
adc
lods
jl
sti
xor
xor
jg
imul
adc
dec
int
inc
sbb
jecxz
inc
mov
stos
add
inc
sti
insb
push
jb
and
pop
push
xor
xor
inc
mov
divl
xor
lock
std
dec
pop
inc
cmp
add
sub
pop
jnp
add
jle
xlat
int
cmp
leave
xchg
xor
neg
fbld
jo
jge
push
ror
push
repz
cmp
loope
aaa
mov
mov
inc
gs
imul
das
adc
hlt
mov
sub
outsb
pop
add
push
or
mov
cli
cld
inc
ja
xchg
nop
jg
add
fadds
push
jmp
shl
aas
mov
push
inc
ja
and
notl
jnp
scas
ljmp
ror
and
test
adc
xor
iret
daa
or
out
es
lods
loope
xor
imul
or
arpl
adc
jl
push
lahf
push
out
mov
aad
mov
out
cltd
fs
clc
jns
sysenter
ret
jae
pop
mov
mov
mov
dec
jb
rcll
mov
fiaddl
out
aaa
roll
and
mov
in
sahf
jecxz
sahf
cmp
pop
and
jo
fs
lret
mov
mov
xor
and
mov
cmpsb
ret
icebp
cmc
leave
cmp
xchg
sbb
into
aaa
out
lahf
out
mov
stos
mov
push
sub
dec
lods
mov
lea
in
mov
mov
movsb
add
sbb
dec
jnp
inc
push
out
out
es
mov
add
orb
jge
icebp
xor
sub
rcll
lock
sub
cli
movsl
test
fwait
subl
rclb
cwtl
mov
add
inc
pop
jno
add
sbb
sub
add
scas
xor
inc
dec
or
addr16
xchg
xor
or
add
push
andl
inc
jno
mov
add
inc
aam
add
call
pop
add
pop
jo
inc
push
shrb
cmp
jne
popw
movsl
leave
cmpsl
sbb
test
jbe
sahf
push
mov
xlat
mov
mov
and
jg
lret
cmpsb
xchg
sti
ret
mov
inc
roll
lret
adc
cld
test
je
xor
fisttps
adc
jl
dec
jae
pop
mov
or
sbb
arpl
cmp
loope
mov
jecxz
pop
jne
cmp
cltd
jl
lahf
and
es
xor
or
in
or
dec
aas
sub
fsts
jge
and
pop
ljmp
push
filds
add
adc
cwtl
jecxz
pushf
fcmovnb
mov
sub
outsb
icebp
mov
stc
mov
sbb
fstl
insl
push
or
pusha
or
pop
cmpsl
sbb
push
in
orb
cmpxchg
adc
jae
adc
push
mov
xor
cmp
inc
dec
testb
xchg
gs
pop
inc
pop
add
mov
lcall
sbb
das
jmp
daa
mov
cmc
xor
pop
scas
loopne
hlt
cs
ljmp
subb
cwtl
movsl
popf
push
add
out
stc
lods
mov
lods
sbb
push
or
pop
movsb
jmp
out
pop
movl
ret
in
mov
pslld
jg
addl
das
icebp
fcompl
pop
xchg
adcl
jg
js
loope
push
mov
mov
cmp
and
add
ret
xchg
loopne
out
sbb
xor
inc
std
ret
icebp
dec
adcl
push
clc
daa
aas
and
ret
xor
dec
iret
std
push
or
out
je
repz
mov
mov
test
mov
push
inc
mov
cmpb
pusha
push
orl
loope
pop
pop
add
movsl
dec
dec
pusha
mov
rolb
int
xor
js
or
emms
push
inc
xchg
sti
rclb
adc
cmpsb
or
lods
hlt
popf
aas
lcall
movsl
stc
movsb
ds
fisubl
lret
insl
sbb
js
xchg
add
or
aaa
shrl
push
std
mov
jnp
adc
jns
jae
inc
pop
xchg
hlt
setns
mov
sbb
sub
add
jle
and
cmp
cmp
cmpsl
addr16
orl
test
out
js
inc
ficomps
out
jp
jnp
cmp
cs
push
xchg
jl
sub
out
fwait
add
int3
shl
in
daa
cli
xchg
sbb
sbb
es
push
cli
inc
xcrypt-ecb
cmpsl
push
popf
mov
scas
clc
je
inc
sbb
sahf
adc
test
js
cltd
cmpsl
aas
pop
mov
stc
xchg
iret
dec
gs
push
jg
xor
movsb
cmp
shrb
int3
addr16
cmpsl
jo
cltd
jle
inc
mov
fcmovnb
lods
hlt
cs
jnp
fdivl
ret
xchg
mov
mov
push
call
sub
into
and
lods
das
cmp
popf
imul
dec
mov
mov
loopne
sbb
sbb
out
outsb
and
scas
imul
cmp
jp
inc
push
hlt
in
mov
push
lds
inc
xor
push
lcall
xchg
rcll
lcall
test
pop
mov
sahf
sti
mov
mov
movsl
fsub
mov
ds
fcmovne
add
stc
std
outsl
scas
leave
adc
mov
sbb
push
fcomp
iret
dec
stos
in
xor
iret
das
lods
jns
xchg
icebp
sahf
mov
pop
sub
fisubrs
out
mov
push
pop
iret
popf
xor
pop
inc
test
cli
aas
jmp
mov
jnp
jne
les
mov
test
cmp
add
push
sarb
push
test
adc
arpl
fdivl
lods
sbb
or
xchg
nop
or
out
lahf
inc
and
xlat
rcr
mov
loop
jecxz
stos
cmp
jp
pop
clc
stos
das
xchg
fmull
mov
mov
in
data16
cmp
mov
jmp
add
js
iret
mov
and
adc
mov
cmpb
test
in
icebp
cli
mov
jne
je
sar
adc
add
xchg
mov
int3
push
push
cld
clc
xchg
push
pusha
repnz
popf
xchg
movsl
adc
sbb
cmc
add
enter
daa
inc
fisttpll
inc
pop
sub
fwait
stos
push
pop
push
in
sbb
mov
lds
jecxz
mov
outsb
ljmp
lret
cmp
cmp
mov
out
scas
addb
jg
outsl
mov
iret
pushl
pop
imul
sti
data16
push
outsb
and
nop
push
mov
inc
mov
add
mov
push
adc
xchg
ss
test
es
push
clc
shrb
cmp
mov
dec
loopne
cmp
out
push
bound
stos
popf
das
mov
pop
bound
xchg
cltd
cld
jl
imul
mov
loopne
mov
and
je
sbb
ret
cmpb
sbb
fs
scas
test
inc
mov
je
inc
inc
push
adc
push
push
dec
roll
xchg
dec
insb
std
scas
out
cwtl
mov
ret
aam
fistpll
in
stos
xor
loop
mov
dec
mov
arpl
test
in
xchg
mov
cmp
xor
xchg
add
ret
inc
xorb
or
push
rol
lret
jecxz
std
arpl
jmp
jbe
ja
mov
xor
push
movsb
imul
jg
mov
shll
fsubr
data16
xchg
xchg
jp
ret
outsb
faddp
aad
xor
and
into
movsl
push
lods
inc
jae
lods
sbb
sbb
adc
and
mov
push
iret
inc
and
rcrb
dec
mov
cwtl
outsb
ss
mov
lea
fisttpll
mov
cmp
jno
xor
inc
test
pop
repnz
adc
and
scas
hlt
or
mov
popa
insl
fsubs
sbb
adc
push
in
push
scas
mov
dec
dec
sbb
bound
in
xor
test
bound
jle
jnp
sub
lret
movq
or
lods
push
ss
iret
push
push
xor
test
rorb
fldl
pushf
insl
inc
mov
xor
and
jge
push
mov
push
ret
cmp
dec
push
xchg
mov
ja
filds
cmp
sahf
push
aad
shlb
sub
mov
xchg
incl
cmpl
das
cmp
stc
les
pop
xchg
mov
js
lret
and
sub
idiv
add
xor
mov
aam
fsub
movsl
out
test
jne
cmpsb
sbb
or
cs
rclb
mov
aad
test
sbb
inc
push
sarb
xchg
mov
lock
push
cmp
out
ja
lea
movsb
mov
jl
fdivl
sbb
popf
movsb
mov
adc
test
mov
filds
stos
mov
dec
hlt
xlat
stc
int
out
dec
insl
ljmp
scas
mov
adc
inc
push
or
ss
adc
inc
push
jg
leave
adc
push
scas
cli
gs
movsb
stc
inc
inc
shlb
test
dec
add
jae
xchg
cmp
mov
mov
cli
cmp
ds
cmpsb
test
inc
shl
sbb
sbb
and
jp
outsb
movsl
test
pop
es
mov
push
loopne
inc
pop
mov
les
or
sub
cmpsb
sahf
sbb
rclb
xchg
out
adc
jp
retw
lret
pop
jmp
xor
or
outsl
outsb
inc
fwait
aam
shl
shrl
mov
loopne
adc
add
les
pop
repz
iret
in
sarb
fldenv
xor
mov
or
fcomi
negl
dec
dec
jbe
dec
lcall
xor
incl
inc
jnp
stos
inc
shlb
xor
push
into
adc
popf
imul
fiaddl
das
rcrb
pop
lret
sub
sti
sbbl
xor
sarb
jns
jns
stos
sub
stc
pop
dec
cmp
mov
cmp
stos
das
fbld
testl
insl
sub
pop
aaa
into
xchg
popf
ljmp
jg
pop
pop
push
mov
mov
pop
xchg
ret
or
or
and
cmc
testl
shl
movsl
pop
lock
mov
leave
ret
adc
add
push
fiadds
pop
mov
pop
cmp
jb
addb
adc
sbb
xorl
test
jmp
mov
jno
add
cmp
or
mov
jge
xchg
lret
mov
ret
mov
add
pop
mov
int
mov
sub
das
pop
lahf
jg
add
insl
jg
dec
shlb
adc
pop
push
in
pop
mov
sub
dec
dec
xor
notl
movsl
mov
xchg
test
andb
jmp
pop
push
pop
bound
in
lds
in
loop
inc
out
pop
cmp
lcall
push
xchg
into
mov
movb
scas
inc
inc
lret
jne
in
les
cmpsb
adc
fidivs
in
das
fidivs
stc
add
imul
jecxz
test
mov
push
mov
ja
push
add
int
dec
cwtl
sub
test
fistpll
hlt
lods
ds
ret
dec
imul
les
add
loopne
bound
movsb
bound
cmc
call
movsb
mov
push
int3
outsb
adc
repz
inc
sets
mov
adcb
push
pop
inc
test
xor
mov
push
cmp
scas
shrb
arpl
dec
jle
lcall
enter
cmp
pop
xchg
sbb
and
cld
xchg
lret
call
cmpsl
push
xchg
inc
jns
sti
mov
add
imul
int
hlt
mov
loop
repz
jns
flds
pop
add
dec
push
out
mov
out
push
pop
imul
mov
inc
je
mov
adc
repz
sbb
ds
pop
pop
xchg
or
xchg
push
shll
int
add
insb
dec
push
insl
pop
mov
fdivs
gs
jb
push
scas
data16
mov
mov
insl
out
push
scas
popa
mov
sahf
sbb
int3
or
arpl
scas
jecxz
xorb
cmp
sbb
jnp
add
cli
cli
mov
and
sub
icebp
mov
pop
movsl
or
out
adc
cmp
and
xchg
mov
adc
jmp
jg
adc
sbb
xor
or
movsb
fldcw
sahf
jge
ja
pusha
pop
movsb
jle
dec
hlt
adc
fisttpl
outsl
sub
pushf
int3
mov
and
xor
jno
sbb
xchg
mov
shlb
loopne
pusha
add
xchg
mov
add
xlat
pop
jno
popf
leave
shrb
pusha
popf
inc
push
pop
cmpl
xchg
cmp
ds
pop
mov
jp
test
add
or
rorb
test
adc
sbb
push
pop
in
in
mov
cmc
scas
jecxz
sub
arpl
jae
call
or
stos
inc
add
or
push
into
or
in
bound
rcll
repz
fsubrl
add
push
mov
stos
js
enter
pop
push
call
cmp
aas
sub
mov
out
repz
ja
mov
dec
xchg
or
adc
popf
repnz
popa
out
jno
fs
repz
sbb
iret
lret
xchg
cltd
sbb
pop
cmp
adc
and
sub
push
add
pop
pop
popf
or
pushf
outsl
dec
ds
sub
sahf
imul
shr
adc
xchg
hlt
jb
daa
int3
pop
sbb
insl
mov
push
xchg
data16
jecxz
repnz
je,pt
out
or
and
popl
push
loopne
int3
pusha
xchg
xchg
bnd
inc
xchg
ds
sub
test
ljmp
and
mov
stos
jnp
xchg
icebp
xchg
ficoms
sysret
adc
lds
pop
inc
jp
sub
adc
mov
adc
fmulp
xor
cli
call
jno
or
pop
inc
ds
test
cmp
push
adc
pop
ss
sub
jo
js
mov
ret
outsl
sub
out
imul
rorb
pusha
cld
enter
inc
stos
loop
inc
lods
push
xor
out
jle
js
mov
sbb
clc
pop
aad
xor
jnp
repz
rcrl
addr16
mov
out
pushf
enter
inc
or
scas
lods
mov
and
xor
and
push
push
jle
xor
jno
xchg
push
and
add
fisubs
inc
in
sub
addr16
adc
jecxz
pushf
pop
lret
jo
sub
mov
scas
ds
jb
adc
or
pusha
ljmp
test
mov
push
xor
sub
jo
and
inc
lods
dec
lods
lods
push
mov
adc
pop
sbb
imul
mov
push
shlb
fs
lret
out
dec
pop
test
cltd
imul
call
test
loope
add
add
loop
mov
pop
xor
pop
push
mov
push
sti
fisubrl
cmp
ret
rorl
jo
sub
push
sub
ret
sbb
add
pop
loop
pushf
hlt
mov
adc
fcmovne
dec
jb,pt
adc
iret
xchg
mov
sarb
sub
sbb
inc
test
rcrl
imul
xchg
pop
in
bound
push
out
xor
jle
pop
pop
dec
xchg
xchg
leave
clc
pop
jmp
pusha
adc
cmp
inc
pop
sahf
loopne
sub
add
xor
pusha
mov
dec
adc
mov
xor
mov
sub
mov
push
mov
nop
mov
out
test
and
insb
ljmp
mov
dec
ret
lods
das
adc
pop
hlt
add
movb
insb
sub
or
div
push
inc
loope
push
adc
pop
cmpsb
jb
cmp
jp
sti
inc
mov
lods
fisubs
jo
out
inc
iret
push
jmp
cwtl
mov
test
and
sub
jb
xor
xchg
mov
sbb
mov
insl
int
inc
rcl
mov
jb
iret
popl
mov
popa
jp
sbb
lea
mov
pusha
std
loop
mov
aam
repz
imul
push
xor
dec
cld
sbb
xor
in
mov
xor
and
cmc
pushw
xchg
scas
dec
sbb
test
lock
add
dec
aas
mov
pusha
ficoms
xchg
mov
jmp
xor
xchg
pop
push
jp
cmp
lret
mov
test
mov
pause
or
xchg
gs
cmp
sahf
mov
dec
lahf
loope
das
in
add
jl
cmpsb
xor
icebp
mov
inc
jecxz
test
int3
or
pop
mov
imull
fidivrs
inc
adc
fidivs
scas
lds
stos
mov
dec
pop
jmp
cmp
fcom
movsl
mov
insl
mov
sub
loope
and
mov
insl
pushf
mov
fnstsw
int3
jbe
stos
dec
scas
repnz
add
mov
jno
imul
adc
ljmp
and
cwtl
pop
ffree
lcall
inc
les
xorb
mov
push
mov
pop
xchg
mov
lahf
popl
and
dec
jb
sbb
lcall
lea
or
push
push
insl
xor
fadds
stc
aaa
jle
clc
aam
jnp
outsb
aad
sbb
adc
or
aam
or
pop
mov
cmp
jp
cmp
sbb
jns
or
out
cmpsb
std
data16
cmp
in
into
sti
int
adcl
jle
fisubl
test
xchg
fisubrs
and
sub
mov
cmp
dec
das
fs
mov
insl
dec
test
mov
movsb
sbb
push
cmp
js
test
push
stc
cmp
push
dec
sbb
mov
sbb
test
mov
push
mull
in
pop
out
gs
imul
jmp
or
push
in
stos
shll
push
pop
xor
jbe
scas
stos
in
lea
insb
mov
lock
sub
out
bound
into
fnsave
lahf
scas
popa
and
test
daa
push
mov
fs
sub
xchg
aas
lahf
mov
shll
sbb
pop
adc
cmp
shr
sahf
xlat
sub
mov
test
mov
sbb
cmova
sub
push
mov
dec
sbb
mov
into
dec
divb
das
sbb
sbb
repz
adc
cmc
mov
inc
xchg
repz
out
aas
call
adc
pop
fbld
lret
scas
cmpsb
jp
movsl
jle
mov
push
int3
out
insl
mov
loop
dec
test
sbb
dec
xor
and
scas
push
ror
or
xchg
jb
mov
lea
mov
adc
lods
outsb
test
mov
dec
mov
pop
je
movsl
out
ds
and
loop
jmp
xchg
loopne
dec
adc
mov
pop
popa
and
dec
add
ret
fsubrs
stc
push
adc
push
sub
pop
shll
shll
sti
outsl
push
pop
outsl
jg
mov
xor
or
cmp
jns
fstl
data16
xlat
inc
ret
negb
xor
xor
ss
das
push
dec
push
dec
jecxz
outsb
mov
mov
xchg
outsb
les
shll
fwait
shl
push
icebp
aas
sub
xchg
or
dec
cmp
jle
jg
pusha
in
and
push
movsb
out
and
imul
jns
out
lea
dec
cmp
lods
imul
add
fcmovbe
pop
out
rclb
fwait
mov
in
scas
outsl
rcl
lahf
gs
cwtl
mov
xlat
jns
test
pop
int3
bound
and
push
add
and
push
inc
icebp
mov
mov
nop
outsb
fiadds
movsb
or
push
inc
inc
sbb
mov
cmp
push
or
int
and
dec
xchg
add
mov
cmp
jmp
cmp
sahf
dec
cmpsl
sub
je
loopne
mov
sub
jmp
clc
inc
in
or
mov
sarb
sub
pushf
sarb
xchg
fmull
sbb
push
or
mov
icebp
hlt
js
xchg
incb
dec
pop
xchg
push
sub
and
sub
xorb
dec
jae
mov
clc
cmp
xchg
xor
mov
bound
add
and
andl
mov
jge
sbb
xchg
test
xchg
je
cmpsl
xor
aad
dec
movsb
mov
and
or
xlat
repnz
cmc
cmpsl
push
inc
pop
sti
mov
pusha
addl
jecxz
add
or
movsl
loope
inc
xchg
mov
sub
fcmovbe
adc
das
or
xchg
pop
popw
mov
add
outsl
sbb
repz
cmc
inc
and
mov
call
adc
xor
jo
loop
adc
das
lock
pop
loop
scas
add
cmp
mov
jne
push
add
cmp
stos
mov
mov
popf
push
mov
pop
xchg
in
inc
adc
and
jp
in
add
push
jecxz
pop
xlat
call
sub
or
jg
stos
outsb
add
xor
movsb
sub
cli
orb
lahf
sbb
mov
lret
test
mov
pop
lret
andl
pushf
mov
or
push
cmp
xor
xor
mov
sub
jb
xchg
jecxz
fdiv
in
mov
push
add
test
pushf
pop
cmp
dec
pusha
repz
xor
stc
jl
cmpsl
popf
add
orl
shlb
insl
cmp
and
lcall
not
mov
cld
or
in
cmp
push
lods
cs
mov
dec
inc
mov
sub
xchg
incl
sub
adc
pushf
push
test
mov
dec
fmul
pop
daa
cli
sub
mov
dec
lea
scas
pop
push
out
pushl
push
rcrb
fdivs
mov
les
popf
inc
stos
sbb
mov
ljmp
daa
jg
les
mov
xchg
pushf
pop
inc
arpl
cmp
xchg
adc
cmp
mov
mov
call
cwtl
add
cmp
aam
insl
scas
insl
jge
data16
and
movsb
cmp
xor
scas
sub
shrl
shll
std
shll
cmp
sbb
inc
jo
test
xor
xchg
adc
adcb
inc
test
dec
idiv
push
pushf
pusha
nop
mov
push
dec
ljmp
xchg
orl
sbb
shll
dec
imul
adc
jg
cld
push
or
addr16
sbb
push
xchg
imul
pop
sub
add
mov
les
test
jnp
adc
mov
mov
pop
fcompl
xor
cltd
stos
shlb
fstpt
dec
movsl
test
bound
loopne
sti
fcoms
loopne
dec
mov
add
clc
mov
shr
xor
push
cmp
aaa
insb
orl
mov
jae
adc
or
aas
cs
dec
into
addl
adc
push
sbb
insl
xchg
jge
xor
rolb
inc
rcl
mov
xor
daa
jb
dec
nop
std
fidivrs
addr16
int
fdivr
or
decb
cli
scas
in
lods
adc
cmpsb
scas
rclb
mov
mov
cli
and
mov
and
mov
sbb
push
movsl
sbb
inc
les
xchg
add
fistps
xor
aam
std
sub
loopne
ret
std
cmpsb
hlt
sub
or
push
pop
cld
add
xchg
stos
push
and
shlb
out
add
push
call
ret
jbe
inc
repnz
mov
in
mov
xor
adc
fs
cmp
push
pop
or
dec
or
push
stos
xlat
inc
popa
inc
or
negb
aam
add
test
ja
jae
dec
orl
mov
mov
jb
adc
addl
add
pop
jle
sbb
push
es
jno
xchg
rolb
cld
sbb
sub
subb
jne
xchg
arpl
lods
insl
incl
and
mov
push
enter
ja
sbb
ljmp
imul
daa
fs
sbbb
xchg
pop
movsl
pusha
imul
in
push
pop
or
rorl
outsl
sbb
jp
sarb
inc
push
xlat
outsb
test
fstl
pop
int
scas
scas
aam
add
and
lret
out
mov
cmpsb
in
mov
mov
jecxz
jne
adc
out
mov
inc
sti
adc
and
std
cltd
pop
stos
leave
stos
aas
xchg
fwait
pop
xchg
or
aad
mov
inc
adc
enter
cs
push
push
jmp
and
jo
cmpb
push
cmc
aas
xor
mov
outsl
fwait
xor
flds
ret
insl
ret
adc
adc
push
cmp
pop
mov
push
in
arpl
clc
pushf
sbb
lods
arpl
mov
daa
loope
out
pop
repz
lea
xor
or
xchg
arpl
xor
ficompl
cld
fidivl
fdivrs
int
clc
xor
inc
mov
jmp
out
xchg
inc
or
sub
stos
mov
pop
je
mov
push
sbb
inc
dec
inc
mov
stos
in
mov
add
xchg
pusha
pop
stos
mov
push
dec
sar
xchg
dec
cmp
sub
clc
and
add
fdivp
lcall
push
sbb
shrl
cmp
aaa
xor
test
shrb
mov
sti
add
daa
lret
lods
mov
sbb
cli
stos
fildl
pop
insb
out
js
inc
add
push
cmpsb
pop
out
das
mov
push
add
data16
shlb
gs
call
into
cwtl
sub
in
clc
stc
push
mov
pop
jle
sbb
mov
movsl
dec
dec
loope
inc
lahf
pop
decb
scas
pop
inc
jo
rcrl
sub
mov
addr16
adcl
jg
fs
xchg
call
je
adc
pusha
pop
or
cltd
je
xchg
xchg
jl
mov
shr
mov
or
mov
int3
xor
movsb
dec
pop
ja
ljmp
mov
scas
mov
jb
fisttps
and
fisubs
aam
push
pusha
negl
add
add
dec
sub
cmp
mov
insb
mov
or
rcl
mov
dec
fcomi
iret
mov
or
cs
xlat
nop
testl
mov
rcll
lahf
enter
mov
aaa
and
pop
fcoml
or
push
cmp
push
test
imul
dec
test
out
pushf
and
lods
test
or
lods
sti
and
mov
lret
movsl
sti
rcrb
fisttps
sub
notb
jb
cmp
imul
daa
inc
or
pop
cmp
sahf
enter
insl
sbb
daa
xlat
stos
je
mov
into
add
cld
out
js
out
les
mov
outsl
movb
jl
lods
aam
inc
jne
jl
pop
xor
lods
cltd
pop
sbb
fnstenv
imul
fucomp
lods
jne
inc
inc
dec
add
cmp
and
jae
fldenv
mov
imul
aad
adc
jae
xchg
adc
jb
cmp
int
xchg
xchg
cmp
cmp
int
scas
mov
fwait
cmp
lahf
dec
lret
es
push
add
lret
and
jp
dec
inc
add
dec
sahf
jno
inc
aad
or
mov
pop
mov
mov
addr16
jmp
adc
xchg
or
or
dec
outsb
xor
cmpsl
subl
jbe
push
hlt
hlt
cmpsl
les
scas
or
xchg
jmp
sarl
je
push
jb
sub
pop
aaa
ficompl
inc
cmpsl
mov
es
mov
mov
and
mov
aad
and
scas
sub
imul
out
push
pop
pusha
mov
sti
insb
sbb
mov
shll
sbb
sarl
pop
xor
in
pop
dec
sbb
pop
mov
mov
push
cld
jp
addl
jns
lret
inc
fadds
jmp
movsb
jnp
push
pop
rcrb
in
or
call
scas
sbb
inc
inc
testb
sub
cltd
lds
mov
sbb
dec
sti
imul
bnd
fucom
into
xchg
daa
repz
ljmp
ss
movsl
and
andb
pop
lds
repz
xchg
stc
clc
mov
in
push
in
and
lods
jmp
mov
sarb
in
lret
iret
sbb
cmc
push
add
pop
jmp
and
std
in
shlb
in
mov
cwtl
pop
mov
and
dec
outsb
fmulp
jecxz
inc
sbb
push
pop
in
dec
ja
cwtl
xor
sub
xor
sbb
jp
sarl
add
data16
dec
jnp
jnp
pusha
sbb
in
push
cmc
out
xor
scas
and
pushf
xchg
or
fdivrs
push
xchg
pusha
dec
xchg
imul
cld
or
iret
pop
rcr
lret
imul
sbb
popf
testb
jg
push
xorb
or
add
sbb
js
inc
pushf
cmp
frstpm(287
arpl
movzwl
call
and
sbb
int3
xchg
add
mov
jbe
out
cli
jo
or
clc
jmp
inc
sub
xor
fsts
push
push
and
jne
jecxz
arpl
mov
xor
xor
dec
loopne
push
inc
out
adc
push
mov
push
xchg
in
inc
sbb
dec
cld
scas
mov
notb
rorb
sahf
in
sub
mov
aad
rorl
cmp
mov
repnz
pop
xchg
mov
fnstsw
aam
mov
cld
jmp
and
aas
pop
dec
aam
or
mov
fadds
mov
lock
pop
call
aam
sub
dec
lret
or
sbb
call
in
or
gs
loope
cmc
or
addr16
cwtl
int
mov
repnz
cmpsl
xchg
xor
sbb
loop
mov
add
leave
and
divb
inc
mov
lock
adc
jae
cmpsb
jne
sti
dec
mov
sbbl
dec
stos
es
fdivp
xchg
or
arpl
fwait
and
and
in
sbb
dec
xor
jp
jo
jl
mov
ret
inc
in
jnp
movsb
xchg
jbe
popa
shrb
js
es
outsl
or
in
sti
jns
pushf
sbb
inc
push
iret
mov
mov
fcoms
scas
jae
jo
iret
iret
cmc
shlb
or
inc
mov
shll
jmp
fisubs
cmc
out
xor
jnp
pusha
xchg
gs
dec
xchg
pusha
leave
sub
add
adc
pop
lock
mov
imulb
or
lahf
cmp
in
int
in
pop
sahf
jo
cmpsb
dec
sub
popa
inc
leave
shll
cmp
xchg
ss
cmpsb
pop
mov
adc
cmpsb
mov
fbstp
mov
cmp
push
adc
loopne
cmp
dec
lea
inc
js
push
pop
mov
mov
sarb
mov
mov
sti
ja
jbe
fistps
loop
push
dec
inc
and
add
sbb
leave
push
or
lods
insl
ss
arpl
daa
mov
and
xchg
es
fdivs
out
jle
push
repnz
and
jb
add
push
xor
add
mov
movsb
jae
mov
in
pop
cmp
mov
add
popf
movsb
and
dec
pop
jae
or
fdivl
mov
mov
and
lds
imul
wrmsr
lods
mov
inc
mov
aad
jo
scas
xchg
lcall
mov
cld
dec
adc
lret
mov
xor
push
pop
test
dec
pop
push
bound
xor
fcomps
addl
adc
test
mov
xchg
xchg
popa
iret
lods
jecxz
popf
pop
fimull
movb
in
imul
xchg
and
je,pt
sbb
es
sub
mov
loop
lds
bound
mov
aam
mov
add
mov
pop
aaa
dec
jo
mov
inc
push
ja
icebp
pop
mov
ds
mov
mov
xchg
test
iret
mov
out
daa
clc
pop
mov
mov
scas
iret
gs
mov
mov
fcoml
outsb
mov
sbb
imul
lods
cmc
inc
jae
xchg
mov
js
in
in
test
mov
inc
adc
mov
push
sub
sub
push
cmp
or
add
ficomps
sbb
leave
jge
leave
mov
repnz
pusha
dec
pop
pop
jno
xchg
push
sub
push
adc
mov
or
fsubrs
lea
imul
ss
pop
cli
xchg
ret
aad
popa
jns
scas
sti
mov
jle
aaa
cmp
cmc
cmpsb
jb
mov
popa
in
xchg
aam
mov
cmc
cmc
arpl
loope
and
jl
shlb
aam
test
cmc
mov
ror
int
sub
and
jmp
pop
jg
lds
push
add
cmp
aaa
or
cmpsl
in
inc
adc
cs
dec
pop
pushf
cmpsb
out
dec
hlt
dec
loope
mov
pop
adc
pop
sahf
int
push
loop
xchg
jmp
rclb
sub
loope
insl
scas
mov
ret
inc
xor
aas
jle
dec
iret
mov
push
mov
jg
outsl
roll
xor
mov
dec
push
insl
std
mov
adc
outsl
stc
xchg
mov
pop
add
in
add
ja
dec
pop
loop
xor
aad
jle
adcb
sub
or
jb
lret
test
sbb
mov
push
aas
mov
jle
xchg
ljmp
dec
jbe
aas
lea
cmp
and
fldenv
or
jcxz
or
inc
xchg
adc
adc
jge
ficoms
mov
inc
adc
scas
push
sub
loopne
add
jnp
mov
lods
sarl
dec
bound
sub
jno
add
and
addr16
pop
enter
mov
jo
mov
lock
push
cs
sbb
pusha
ja
ss
push
mov
pop
mov
sbb
movsb
ret
adc
sbb
mov
jmp
pop
pop
fadd
sbbb
test
dec
out
test
out
movsl
inc
arpl
stc
cmp
daa
frstor
mov
sbb
mov
scas
cmc
lret
push
in
mov
mov
cltd
jne
movl
test
inc
repz
daa
jne
jg
popa
mov
pop
loop
and
cmpsb
mov
fmul
jb
aas
adcl
rcrb
sbb
mov
popf
add
jp
jge
fwait
out
add
mov
and
repz
repz
dec
mov
sub
adc
lret
sarl
aad
lahf
lods
popa
mov
mov
shll
idivl
out
data16
out
int3
push
pushf
lock
adc
inc
pushf
arpl
js
xchg
into
cmp
mov
inc
jno
stc
mov
jmp
pop
stc
inc
adc
adc
psubd
and
fcmovu
daa
stc
pop
jl
xchg
fmull
dec
xchg
add
xchg
ret
les
shr
out
cltd
sub
sahf
dec
mov
cmp
call
mov
inc
sahf
xchg
fcmove
add
jg
aaa
cltd
bnd
sub
and
rorb
mov
lds
jns
clc
mov
xchg
gs
insl
and
push
lret
dec
xor
push
cmp
mov
mov
shl
inc
ljmp
out
ds
aaa
lock
fiadds
loope
ficoms
inc
cmpsb
ret
sub
sarb
movsl
rorl
mov
cmpsb
cs
je
mov
mov
int
jne
sbb
jge
in
push
mov
jb
leave
repnz
roll
pop
sahf
test
jno
push
push
leave
sbb
mov
xor
push
cmc
dec
int3
cmpsb
xor
push
jbe
xlat
loop
stos
in
xchg
and
push
jp
cmp
mov
andb
mov
mull
mov
pushw
adc
pop
negb
push
insl
jnp
pop
mov
add
cmpb
ss
nop
into
pop
js
jns
or
jo
lret
adc
cli
in
mov
xor
push
fldt
enter
ret
xchg
add
loopne
xor
mov
mov
outsb
out
mov
repz
test
pop
jbe
icebp
or
in
add
in
jmp
rol
mov
mov
ds
jecxz
ret
int
subb
call
aas
jbe
out
xor
mov
lock
lcall
lret
clc
push
push
fs
sbbl
dec
in
cmc
mov
inc
pop
inc
in
aad
jmp
and
addl
and
mov
jmp
push
cmpsb
or
jae
ja
push
ljmp
jl
push
pop
mov
mov
jo
adc
int3
test
dec
push
test
lea
adc
icebp
xchg
or
adc
imul
das
pop
inc
mov
sub
lahf
imul
inc
mov
sbb
dec
popa
shrb
push
addr16
fdivp
jecxz
ret
adc
mov
cmp
cltd
ds
jl
mov
xchg
inc
out
lahf
or
andl
push
popf
xor
cmp
xlat
repnz
imul
cmp
ds
pop
add
pop
mov
pop
insl
pop
xor
sub
inc
insb
mov
cmp
mov
inc
sbb
pop
xor
jecxz
xor
cmp
ret
cmp
jbe
jl
lahf
je
dec
mov
roll
scas
mov
jmp
jo
js
push
into
sbb
faddl
mov
stc
fisubs
mov
jae
sbb
fisubl
imul
sbbb
outsb
sub
or
inc
divb
add
pushf
dec
add
xchg
sub
pop
shll
loope
dec
popa
movsl
in
jmp
or
add
lds
popf
mov
xor
cmpb
scas
ss
negb
pop
mov
cmpsl
xchg
popf
cmp
sbb
inc
sbbl
inc
dec
dec
fxch
and
add
fists
dec
xor
push
call
jecxz
pop
imul
ret
push
mov
xchg
jp
addr16
mulps
cmp
rol
stos
or
aaa
cmpsb
stos
mov
insb
inc
sbb
repnz
sahf
add
fisubs
dec
negb
outsl
mov
call
sub
cmp
mov
dec
sub
mov
ret
insl
es
sub
fdivl
lods
pushf
sbb
pop
push
adc
insl
mov
mov
and
cmp
adc
jle
push
xchg
leave
add
loopne
pop
dec
mov
push
and
dec
aad
jb
or
aaa
ss
xor
and
fcmove
inc
scas
pop
adc
in
loop
cs
scas
xchg
sti
and
aas
mov
sub
sahf
mov
mov
add
mov
pop
insl
adcb
or
std
pop
fs
test
out
sbb
or
stc
push
pop
mov
xlat
jns
das
pop
push
stc
aas
test
loopne
popf
aaa
nop
jne
mov
mov
leave
dec
or
add
call
lods
add
add
add
mov
fstl
adc
mov
push
insl
and
xchg
fsubl
pushf
cld
mov
push
mov
les
das
pop
xchg
int
aad
pop
and
mov
and
pusha
dec
mov
shll
add
shl
adc
outsb
add
shl
in
rcll
out
in
jmp
xchg
out
cld
pop
mov
inc
xor
or
mov
movl
int3
divl
and
adc
and
pop
pop
xor
mov
and
lcall
sub
mov
mov
loope
insl
imul
cmpsb
sbb
mov
jecxz
shll
scas
sbb
mov
and
jo
inc
sub
les
pop
and
jp
or
jbe
call
pop
adc
loope
dec
and
cwtl
aam
loop
stos
adc
rol
outsb
shl
dec
ror
mov
lods
cltd
sub
popa
sbb
je
divb
sub
inc
int3
and
push
jl
add
int
cmp
adc
mov
fcoml
out
jl
push
in
pop
bound
adc
pop
jmp
adc
clc
aas
jb
cmp
fwait
xor
das
repz
add
pop
je
mov
enter
iret
pushf
xchg
xor
cmp
and
jp
cmp
adc
fistl
xor
mov
mov
out
iret
loope
mov
sahf
pop
add
cld
xchg
loope
sub
cld
cwtl
decl
rorb
pop
int
jbe
and
mov
fidivl
int3
cmpsb
cmc
loopne
pop
test
xchg
jmp
mov
xchg
add
lods
pop
sti
cmp
push
lods
pop
push
lods
aas
jle
mov
push
insl
sbb
cmc
scas
pop
movsl
sbb
sbb
sbb
jmp
mov
push
mov
add
call
hlt
pop
hlt
adc
js
push
xchg
scas
jb
insb
mov
lcall
popf
icebp
xor
repnz
xorl
idivl
jns
cmp
int3
test
fbstp
stos
sbb
and
out
xor
mov
or
icebp
pop
dec
sbb
jo
lods
xorl
inc
pop
sbb
jne
jbe
push
sub
xchg
xlat
in
lock
adc
mov
jge
jo
repz
fnstcw
cmp
popa
ss
imulb
inc
lock
and
call
add
fisubl
xchg
fmuls
mulb
sub
cmp
dec
lea
jo
xor
sbb
pop
test
add
and
ret
in
int
mov
iret
movl
jbe
lea
ljmp
push
cmp
outsl
imul
jge
mov
xorb
out
jbe
dec
scas
lds
mov
sub
xchg
cltd
and
shlb
lahf
repnz
jne
les
push
test
cmpsb
pop
cmpsb
enter
stos
inc
xor
add
cld
jp
push
mov
pop
test
test
add
clc
push
inc
in
daa
lahf
stos
jge
ffree
pop
inc
mov
clc
insl
cli
lds
sub
leave
lcall
aaa
aam
insl
xor
pop
jecxz
jecxz
pop
test
iret
mov
outsb
mov
xor
out
and
xchg
aaa
mov
nop
test
out
in
cmp
dec
adc
pushf
outsl
fdivrs
js
add
add
jnp
pushf
cmp
mov
test
arpl
jmp
push
loope
push
adc
inc
jg
sbb
sub
popa
dec
divl
fsubs
xor
push
jl
lret
mov
and
loopne
add
imul
mov
xchg
movsl
icebp
sti
jne
adc
sbb
adc
imul
dec
push
pop
add
cmp
xchg
push
inc
shrl
sub
mov
rorb
sub
test
icebp
and
stos
jecxz
or
jns
mov
xchg
int
cmpsb
popf
sub
repnz
sub
jnp
es
pop
sub
lea
test
cmpsl
fildl
aad
mov
xchg
lds
cmp
xor
add
mov
jne
cwtl
bound
add
arpl
imul
mov
lds
bnd
adc
fucomip
mov
leave
fstpt
aaa
leave
mov
scas
cmpsl
mov
jno
daa
dec
std
cmpsb
iret
cli
cli
cmpb
xchg
jns
rorl
shlb
mov
in
xchg
mull
adc
add
jae
inc
into
fldl2e
imul
in
ret
add
fidivl
lock
outsb
addr16
sahf
mov
mov
sub
xchg
daa
scas
fs
in
cmc
xlat
pushf
push
shll
mov
ds
jecxz
mov
in
cmp
or
xlat
and
adc
pop
aad
incb
push
adc
mov
adc
mov
xchg
pop
xchg
into
jp
jno
sub
mov
push
mov
push
dec
mov
cmp
decl
notb
popf
cmp
in
or
pop
jbe
lods
or
jecxz
dec
stos
je
scas
in
nop
cld
ds
push
ss
and
inc
adc
inc
mov
int
outsl
pop
mov
shrb
xchg
push
mov
das
pop
mov
mov
shlb
xchg
sbb
shrb
pop
gs
cli
cmp
movsb
sub
xor
and
jo
or
dec
fsubrs
rolb
pop
lds
xor
sub
add
pop
xchg
mov
mov
cmp
test
movsl
pop
in
scas
lcall
sti
mov
push
out
adc
sub
push
rcrl
mov
jb
test
sub
xchg
mov
adc
mov
lds
jo
or
in
test
inc
adc
pop
xor
and
rcl
pop
mov
xchg
adc
mov
shlb
addl
lods
in
into
xchg
fcmovb
leave
jbe
lods
in
jbe
xlat
inc
sbb
imul
in
inc
out
leave
sti
fs
outsb
xchg
mov
push
es
mov
imulb
xorl
or
mov
xchg
lcall
shll
dec
mov
cld
popa
test
mov
jle
jbe
jecxz
mov
pop
pop
cmp
les
mov
loopne
mov
sub
mov
pop
and
mov
cltd
mov
push
flds
xlat
cmp
pop
pavgw
std
xor
mov
dec
rcrl
mov
int
adc
shlb
push
nop
mov
pusha
sub
les
dec
hlt
in
inc
inc
dec
mov
test
movsb
mov
xchg
pushf
stos
insb
mov
sub
fstpt
insl
es
int3
pop
test
mov
mov
mov
loope
sbb
jnp
adc
push
and
jle
push
xor
sub
adcb
test
adc
aas
push
pop
std
cmp
cmpsb
add
sti
sbb
lahf
mov
pop
faddl
enter
rclb
lods
loopne
dec
aad
in
mov
sub
sbb
jl
mov
jnp
in
or
jp
mov
xchg
lcall
and
enter
add
mov
or
decl
loope
or
sahf
or
dec
cmpsb
jns
call
mov
stos
push
imul
add
stos
mov
push
cs
jo
addr16
stos
imul
push
imul
jl
pop
pop
or
fistl
call
mov
xchg
ffreep
push
inc
pop
lcall
in
fistpl
mov
in
pop
xchg
xchg
adc
lods
mov
push
arpl
fisttpll
into
mov
mov
sbb
mov
popf
jg
mov
les
push
jp
dec
jae
cli
sub
pop
fcoml
adc
adc
test
sbb
into
xor
lock
mov
push
fwait
adc
cmp
cmpsb
mov
mov
mov
pop
jp
dec
mov
jne
inc
notb
cmp
jb
int3
dec
inc
addb
adc
push
jle
dec
ret
dec
loopne
adc
sbb
inc
xor
cwtl
mov
stos
inc
cmp
push
mov
mov
mov
jae
sub
fcmovne
aaa
push
test
sbb
jne
lock
repz
mov
sub
cmp
cs
sub
xor
mov
popl
and
mov
xor
mov
mov
inc
and
inc
ds
scas
xchg
imulb
and
stc
icebp
cltd
pop
incl
sub
sub
xor
inc
aaa
or
push
pop
push
pop
cmp
aam
add
fdivrp
cmp
jge
add
sub
jp
add
fdivrs
xchg
adc
dec
xchg
mov
sbb
mov
or
fiaddl
int
mov
ljmp
pop
test
jne
and
jnp
xchg
ret
cltd
xchg
sub
outsb
pop
sbb
jg
sbb
cltd
cmp
push
mov
ret
jg
add
lock
add
imul
imul
in
imul
ds
das
mov
cmpb
fcomp
dec
mov
mov
cltd
adc
js
fwait
xor
jecxz
pop
cmp
das
cmp
pop
mov
imulb
push
lret
popa
negl
mov
iret
movsb
pushl
lea
repz
lds
icebp
lea
test
jo
scas
shlb
cmp
repnz
out
sub
push
ficoml
jl
xor
xchg
or
pop
cmp
push
popa
sub
rorb
dec
cmpsb
popf
andl
aam
or
fdivrs
mov
testb
inc
inc
movsl
jg
in
mov
add
add
aam
sbb
in
inc
cmp
jae
call
mov
mov
pop
popf
xchg
add
cld
leave
inc
dec
cmp
outsl
xchg
jae
and
jl
adc
sarl
mov
mov
push
imul
cmp
push
xor
cmp
rcll
jmp
out
shll
loop
pop
arpl
imul
pop
sbb
pop
push
jae
dec
lret
les
jbe
pop
fisubrl
push
scas
push
mov
jle
adcb
or
mov
pop
cld
add
mov
jnp
loopne
mov
pop
out
dec
fbstp
pop
decl
or
cmpsl
mov
enter
mov
or
ja
adc
mov
push
pop
mov
pop
loope
pusha
push
inc
and
adc
add
jns
lock
inc
jge
leave
inc
repnz
push
movb
and
call
loopne
imul
cmp
mov
and
jns
getsec
xchg
push
push
push
ljmp
mov
sub
jbe,pn
icebp
sbb
stos
sub
sub
bound
test
cmp
cmc
add
adc
pop
ds
jecxz
ja
sub
jp
outsb
shl
pop
mov
scas
mov
fstps
sahf
fadds
dec
outsl
mov
or
inc
pop
out
lcall
push
gs
inc
rolb
in
std
cmp
jbe
pop
repnz
lods
push
leave
jbe
bound
mov
jnp
repz
push
mov
iret
cmpsl
stc
push
sti
imul
movsl
jmp
fsubp
cs
mov
in
xlat
adc
push
pop
stos
les
cld
jno
cltd
mov
cmp
mov
lods
pop
jnp
loope
es
ja
jae
dec
jns
js
sub
inc
aad
jno
sbb
or
push
jae
mov
push
ljmp
push
jo
sti
xchg
insl
popa
xor
jmp
mov
add
push
shlb
and
sbb
daa
push
add
sub
fdivrl
dec
bound
xchg
dec
mov
insb
mov
hlt
aaa
xor
in
repz
push
mov
fstps
lods
insb
loope
cld
pop
int3
sbbl
imul
mov
cli
cs
mov
mov
adc
inc
test
addr16
rorb
cmp
mov
insb
fisttpl
out
je
sti
imull
pushf
clc
sub
push
ja
and
sbb
adc
dec
and
adc
xchg
cmp
add
lahf
shrb
jns
push
or
adc
das
mov
mov
insb
mov
cwtl
jns
pop
int3
adc
jne
fsqrt
ljmp
mov
mov
mov
and
dec
push
add
or
sub
push
pop
xor
sub
movb
jns
mov
js
inc
dec
sahf
cs
es
push
jmp
jae
cmc
lret
mov
push
add
les
adc
ret
adcl
jle
aaa
xor
pop
and
dec
and
push
or
dec
xchg
and
sub
rolb
sarl
dec
cmp
pusha
inc
inc
scas
bswap
pop
fildll
xchg
lahf
sbb
xor
andb
jle
xchg
cmpsl
jno
lahf
push
rcrb
mov
outsb
jae
icebp
xorl
out
test
lock
mov
xchg
jbe
out
shl
sbb
push
or
dec
mov
sbb
lahf
dec
das
sub
fs
push
sbb
xor
loopne
mov
push
rcl
rclb
adc
and
das
enter
addl
pop
ror
push
nop
cmp
test
movsb
mov
mov
adc
inc
mov
pop
jmp
mov
adc
imul
nop
pop
mov
dec
jno
fwait
cmp
jbe
push
sub
enter
mov
popa
jp
arpl
rcrl
test
mov
jp
icebp
sub
leave
icebp
test
push
pushf
ficoml
push
shll
jae
data16
sub
xor
jb
dec
aam
jp
pop
int
dec
std
fcomi
inc
or
out
insb
stos
data16
dec
aad
das
adc
rolb
mov
std
jp
xchg
fdivrl
lret
mov
mov
sbb
test
rorb
addr16
leave
fs
aad
and
mov
pop
inc
push
cmc
sub
out
loopne
pusha
push
sub
ss
cmpsb
and
test
iret
icebp
mov
adc
mull
enter
push
pop
inc
mov
mov
push
mov
mov
sub
xor
int3
inc
loope
adcl
sub
or
sahf
or
mov
cwtl
jb
inc
add
pop
pusha
inc
push
loope
subl
fsubl
clc
xor
push
or
mov
cmpl
or
push
mov
mov
ljmp
test
add
push
adc
push
push
and
test
shlb
movsl
sub
aad
add
divl
pop
pop
cs
sub
lret
fisttpll
je
std
orb
jbe
jo
aaa
pop
jecxz
mov
lods
sbb
mov
pop
sbb
mov
push
dec
push
sub
rclb
js
aas
fxch
ret
out
pop
lahf
push
pop
dec
int3
and
xchg
fsubr
fsubs
fsubrl
sar
ljmp
hlt
out
push
inc
sub
lret
pop
aaa
movl
int3
pop
dec
inc
pushf
add
pop
cltd
pop
cld
jne
xchg
mov
adc
xorl
repz
scas
jle
dec
sbb
ljmp
out
mov
sbb
jae
push
stos
adc
xchg
mov
fidivl
jge
shll
cmp
mov
jl
pop
xor
xor
out
mov
inc
test
daa
ret
sub
adc
dec
xchg
call
fst
xchg
cld
std
xchg
mov
iret
daa
or
add
jecxz
clc
jne
jae
test
push
push
mov
jnp
hlt
push
mov
loop
jns
lock
adcb
aad
leave
ja
into
lds
inc
leave
jnp
dec
in
xchg
scas
push
icebp
std
sub
mov
xchg
and
leave
loop
sti
xor
pop
xor
push
cmpl
les
or
lock
sarb
popa
popf
push
daa
test
inc
jo
imul
mov
jle
xor
mov
pop
decl
gs
push
push
mov
mov
fs
xchg
mov
xchg
cmp
test
je
fdivl
xchg
and
cmp
addr16
in
and
or
int
out
jbe
pop
insb
cmp
mov
push
out
jae
fwait
push
psubsw
repz
aad
jle
sbb
std
subb
aam
mov
or
ds
xor
sbb
icebp
dec
cwtl
lock
adc
scas
scas
or
adc
pop
pop
adc
loopne
clc
adc
mov
xor
mov
and
enter
xchg
fprem
out
or
movsl
xorb
cmp
es
xor
in
sub
and
leave
xor
fnstsw
mov
iret
out
mov
jns
stc
lods
mov
aam
ds
jle
sbb
dec
mov
lock
jns
add
sbb
jbe
mov
dec
aam
cli
cmp
ja
lea
mov
sbb
jns
xor
mov
xchg
loop
dec
pop
cltd
test
mov
inc
nop
int
das
add
dec
lods
pop
arpl
insb
adc
add
jmp
in
dec
gs
ds
xchg
insb
aam
popl
pop
mov
aas
andl
dec
out
ficompl
test
mov
ss
jnp
adc
dec
mov
gs
inc
inc
xchg
adc
push
aam
nop
cltd
sti
sbb
sbb
lds
sbb
push
push
cmpsb
cltd
andl
pop
push
das
ljmp
nop
push
out
fdivp
jno
mov
test
jle
or
inc
repz
mulb
push
popa
push
rcrb
sbbb
cmp
jecxz
mov
fwait
scas
and
int3
sub
inc
std
js
push
jecxz
lcall
lcall
fisubrs
icebp
xchg
in
sbb
imull
adc
sbb
dec
sti
movsb
push
outsb
shr
and
fisttps
mov
sub
mov
or
aas
jge
mov
insl
sar
std
jns
lret
and
dec
push
and
pop
rcrb
lret
dec
in
jecxz
test
rcrl
push
push
pop
jl
sbb
adc
push
or
mov
adc
lea
pusha
movsl
inc
mov
icebp
std
xor
ds
jp
jne
fistpll
dec
jecxz
dec
fnstsw
mov
add
je
cmp
mov
mov
lret
js
jg
inc
xchg
xchg
jecxz
jecxz
dec
mov
aam
add
pushf
fiadds
jo
lods
xchg
stos
push
add
xchg
loope
or
adc
daa
loope
sbb
daa
pop
nop
dec
js
jmp
mov
idiv
mov
jno
pop
inc
mov
movb
add
adc
pop
dec
adc
lret
mov
into
outsb
mov
xor
ljmp
sub
test
aaa
xchg
out
sar
sahf
fwait
xchg
ret
push
or
jnp
lahf
ficomps
flds
cld
cmc
test
lods
lcall
popa
cmp
nop
push
imul
pop
in
pop
testl
cmc
jmp
mov
cmp
flds
fstpt
mov
or
pop
fsubrl
and
outsl
int3
call
mov
sbb
sbb
mov
scas
xchg
stc
andl
int3
sbb
outsl
nop
cmp
jecxz
mov
data16
sbb
pushf
xchg
mov
inc
in
test
sbb
inc
aad
in
in
fcmovnbe
lods
stos
adc
mov
sub
xchg
lcall
cmc
pop
repz
outsb
sbb
das
cmp
jl
or
jb
sbb
pop
xchg
cmp
stc
leave
xor
lahf
pop
mov
jge
jle
sub
mov
inc
loope
ror
add
pushf
mov
jnp
or
and
cwtl
aad
sub
jecxz
shl
push
adc
fwait
lds
stc
dec
adc
sub
cld
mov
push
imul
popa
outsl
dec
ss
and
hlt
fstl
movsb
movsb
jp
mov
out
mov
cmp
data16
out
repz
out
xor
outsl
cmc
into
xor
data16
mov
scas
cmc
clc
clc
aad
mov
gs
imul
loop
std
push
fiadds
sub
xchg
sub
lret
inc
and
mov
xlat
push
sbb
addr16
sarb
push
dec
shll
or
iret
jne
mov
stos
push
add
inc
pop
add
cmpsl
sti
ljmp
orl
in
shll
lahf
dec
pop
mov
push
mov
pusha
inc
mov
sub
xchg
jnp
aam
jge
cli
popf
cld
pushf
jp
push
xor
dec
jg
repnz
outsl
ss
or
push
jecxz
cmpl
sarl
pop
out
fcomps
or
mov
mov
or
adc
pop
rcr
inc
mov
insl
mov
jl
lcall
cmp
adc
jmp
jg
mov
int3
movsl
cltd
je
fisttpll
push
icebp
das
fcmovnu
cmp
push
sbb
inc
fucomi
dec
push
xchg
in
push
aad
xchg
xchg
jmp
clc
xor
aam
insl
jns
add
aam
int
ret
push
and
mov
adc
mov
jbe
inc
cmp
insl
jae
push
add
orl
testb
add
mov
xor
leave
cli
add
es
pushf
dec
stc
js
fdivrs
mov
jle
mov
dec
call
sub
enter
rcll
dec
push
cmp
inc
xor
cld
adc
data16
jg
movsl
jbe
xchg
sub
fdiv
mov
cmp
notl
ficoms
scas
cmc
push
mov
fwait
insb
xor
push
sub
popf
out
pop
jo
mov
insl
mov
scas
sbb
cmp
pop
xor
inc
or
dec
iret
int3
xor
fmuls
scas
cltd
push
xor
xchg
cmp
in
cmc
jge
mov
jmp
rcrl
sub
adc
sbbl
jns
push
or
dec
pop
stos
sub
mov
push
lods
popa
xchg
in
aaa
fscale
imul
dec
fscale
dec
and
cli
loope
pop
in
mov
sbb
push
insl
xchg
stos
pop
add
stos
cmpsl
pmovmskb
sarl
and
lahf
inc
pusha
cld
sub
mov
adc
xor
fidivrs
inc
cld
call
test
inc
jne
mov
or
out
xchg
push
leave
inc
stc
filds
imul
repnz
push
jp
testl
push
lods
and
ficoml
mov
mov
dec
or
cmp
imul
and
sub
test
into
and
sub
in
ljmp
clc
iret
je
movsb
lahf
mov
jne
push
test
das
push
mov
pop
in
in
mov
cltd
adc
sub
cmp
xor
mov
push
inc
out
ja
movsb
add
adc
and
push
adc
push
xor
dec
jl
shlb
stc
lock
pusha
insl
push
sub
jno
in
leave
push
ds
call
jecxz
cmp
faddl
jge
sub
mov
popf
lods
pusha
sub
mov
cltd
rcrb
adc
jo
shlb
and
jle
cmp
xchg
mov
or
call
popf
dec
test
cs
cmp
je
jmp
or
stos
pop
js
mov
andl
stos
repnz
push
cmpsl
fisubrs
mov
out
cmp
push
je
sti
jo
push
lods
into
sub
les
pop
dec
lock
dec
mov
jmp
jo
jge
nop
mov
aam
scas
and
repnz
dec
pop
xchg
fstps
inc
rcrb
sub
or
test
push
mov
add
out
cmpsl
and
xchg
jne
push
cmp
insl
sti
jle
cs
inc
daa
jmp
test
mov
add
sub
sub
addr16
imul
decl
daa
push
js
xor
enter
mov
xchg
push
mov
mov
outsl
and
dec
mov
imul
xchg
hlt
xchg
js
mov
adc
std
sub
adc
les
fildll
push
rorb
mov
inc
test
push
iret
imul
push
insl
stos
xchg
out
xor
jmp
mov
sub
jnp
mov
pop
sub
repz
sbb
mov
jecxz
outsb
dec
es
and
adc
ja
fnsave
dec
es
pop
negl
mov
add
lods
ret
loop
les
cmpsb
lret
fildl
sbbb
shl
cmp
jb
or
mov
out
imul
mov
lods
mov
xchg
cmc
jge
sbb
insb
mov
add
cmpsb
or
jg
sahf
aam
nop
push
sbb
push
ja
mov
mov
test
inc
insl
mov
cltd
notl
push
mov
pop
push
out
fisubrl
pusha
mov
inc
sbb
inc
mov
lods
imul
dec
imul
scas
aad
sahf
inc
stos
ds
nop
fs
push
adc
dec
mov
xchg
adc
popf
or
push
mov
push
call
shll
and
cli
ds
xchg
pop
cmpsl
dec
cmp
inc
cmp
movsl
lret
xor
sbb
mov
mov
frstpm(287
jecxz
inc
xor
pop
mov
lret
dec
mov
shrb
add
sbb
adc
push
adc
popa
outsb
xchg
mov
test
jp
lret
xor
cli
gs
inc
mov
and
dec
push
je
pop
or
nop
imul
sbb
ror
arpl
int
daa
fs
sbb
int3
loop
or
mov
mov
inc
mov
pop
inc
or
pop
or
jle
bound
adcb
add
jns
test
cmc
add
test
and
in
jne
adc
xchg
insl
sbb
pop
add
sbb
aas
fwait
push
sub
loopne
mov
adc
fs
fnsave
push
std
rolb
mov
sub
push
shlb
xchg
pop
cmp
lcallw
sbb
xor
fcoms
iret
add
test
aas
nop
push
add
xchg
and
pop
loopne
ljmp
cli
xchg
lds
mov
test
insb
test
les
stos
das
adc
mov
push
or
and
mov
jecxz
ljmp
push
pop
cmpsl
and
xor
mov
push
lea
rorb
add
pop
inc
outsl
push
mov
lret
sub
add
sub
pop
les
add
mov
iret
sub
fdivrs
mov
in
mov
jno
lcall
sar
mov
and
push
mov
push
divb
cmp
mov
push
addr16
scas
data16
pop
mov
jge
mov
xchg
jno
cmpsb
imul
xchg
mov
xchg
fcoms
jb
mov
or
faddl
pop
rcll
clc
outsb
ds
ljmp
or
jns
add
inc
mov
jns
push
push
dec
sahf
add
pop
xchg
js
jno
cmp
sub
jg
and
subb
bound
adc
push
or
xchg
enter
sub
test
sub
mov
sub
sub
jl
mov
jge
pop
cltd
jns
or
jle
cmp
fidivrs
add
dec
mov
ss
dec
popf
xchg
sbb
add
adc
testb
inc
js
or
jecxz
xor
pop
sarb
jle
jp
jge
fcompl
fwait
subb
jae
xchg
test
inc
pop
and
mov
and
xchg
movsl
xchg
inc
sub
xchg
ret
mov
xchg
sbb
inc
out
inc
test
mov
push
negb
test
push
jg
mov
jp
jns
repz
in
loope
jnp,pn
xchg
loop
dec
je
pushf
iret
add
inc
test
cmp
in
lock
cwtl
mov
nop
and
mov
push
lahf
mov
out
sbb
aad
mov
or
cmp
std
aaa
jp
pop
mov
inc
aam
xchg
jae
jae
dec
ljmp
scas
xchg
jecxz
sbbl
loop
xor
or
mov
adc
fwait
stos
jo
iret
dec
xchg
jg
xor
fdivrp
stc
pushf
ret
mov
cmp
add
push
pop
inc
lock
into
scas
sub
mov
addr16
shlb
jo
mov
mov
ja
inc
inc
movsb
nop
push
aam
mov
sbb
mov
pop
mov
popa
call
popf
outsl
ret
and
daa
out
mov
dec
jp
das
push
movsb
or
incl
in
mov
movsl
push
dec
addb
int3
rorb
clc
nop
inc
sbb
jo
je
push
dec
fidivs
dec
or
xchg
mov
add
cmpsl
add
add
xor
xlat
xchg
out
inc
test
push
pop
fnsave
lds
cmp
jle
dec
mov
shlb
pop
cli
mov
rol
jl
or
fsubs
mov
incb
lret
xchg
add
aas
cmp
and
or
loop
mov
sti
cmp
ror
fistl
push
in
dec
imul
shll
adc
sahf
pop
xchg
outsl
jns
dec
lods
cmp
lods
loop
xor
mov
lcall
cmp
out
rclb
sarb
stos
es
xchg
mov
mov
sub
aam
loop
sub
ja
push
divb
xor
mov
xchg
das
mov
clc
cvtpi2ps
pusha
pop
orl
fdiv
dec
sbb
icebp
ljmp
ljmp
in
lock
insb
fs
hlt
mov
lea
xor
sti
enter
mov
cmp
xor
xchg
popa
push
and
mov
pop
and
and
mov
inc
jbe
add
inc
ljmp
adc
das
das
dec
xchg
and
popa
sub
adc
aas
pop
pushf
xor
push
dec
push
mov
sub
sbb
and
imul
stos
fdivrl
adc
xchg
pop
dec
daa
mov
jb
inc
in
jnp
xchg
adc
in
push
aad
sub
add
xchg
adc
outsl
cmp
push
mov
jno
in
sahf
adc
loope
inc
and
imul
mov
cmp
imul
push
decl
or
je
imul
stos
or
pop
mov
mov
imul
push
mov
push
push
jo
scas
pop
fs
sbbl
jns
inc
in
add
fisubrl
mov
lods
test
movsl
xor
movsb
sub
daa
fildll
mov
xchg
add
icebp
ss
pop
cmpsb
ds
das
popf
sub
push
xchg
sub
or
fs
subl
adc
xor
lea
jne
les
push
add
sbb
flds
insl
jg
imulb
push
popf
arpl
gs
xchg
or
test
in
adc
lea
pop
dec
scas
lcall
pop
push
adc
adc
into
or
mov
adc
and
test
mov
hlt
fwait
mov
add
jecxz
add
jge
mov
ret
jne
test
sub
ss
das
fsts
aas
push
fbstp
enter
mov
hlt
jg
imulb
xor
shrb
pop
mov
gs
outsb
lods
pop
insl
mov
push
loopne
dec
daa
nop
pushf
loop
test
in
adc
movsb
xchg
sbb
jmp
jno
mull
pop
sahf
mulb
jl
out
imull
cmp
popf
lea
xchg
stos
and
push
popf
test
fwait
jb
loope
push
dec
mov
js
xor
dec
jne
push
pushf
mov
lods
push
xor
stc
subl
pop
jo
popa
jae
xor
jnp
add
xchg
xor
add
movsb
jl
repz
fidivl
aas
adc
inc
bound
out
test
adc
push
shll
jae
xor
int
testb
out
cmp
cld
sub
jno
mov
arpl
lahf
push
ja
stos
jae
push
nop
ret
cmp
dec
adc
mov
dec
lea
xchg
mov
mov
inc
xchg
pop
sbbb
fwait
or
jp
jbe
cmpl
lea
daa
mov
std
xchg
mov
pop
in
sbb
mov
xchg
insb
lret
test
cmpsl
push
aam
dec
addr16
inc
nop
sahf
cltd
clc
xor
or
jmp
mov
xor
and
fs
mov
jmp
cltd
cmp
inc
mov
or
idivl
jp
and
mov
push
call
pusha
scas
pop
push
fldl
push
jne
movsb
divl
jno
lcall
ret
pop
and
or
push
shlb
mov
jmp
adc
mov
fistps
xchg
sbb
adc
mov
xor
sub
popf
sub
divl
mov
es
cmp
mov
lcall
cltd
mov
cwtl
and
ficompl
movups
scas
jle
fnstenv
aad
mov
jle
movsl
adc
test
ftst
ja
fstl
idivl
pop
mov
hlt
ret
fwait
inc
push
orl
loopne
repz
sti
jnp
and
pop
in
adc
popa
loope
mov
roll
jmp
jae
jecxz
and
imul
aam
cmp
aad
rol
mov
ret
add
add
pop
xor
mov
js
mov
arpl
mov
xchg
adcl
sti
ret
push
scas
pusha
imul
and
add
sub
out
mov
or
dec
icebp
scas
inc
or
jo
int
fistpll
test
push
out
inc
jbe
xchg
aad
aaa
shlb
imul
jl
jne
std
push
lcall
addr16
ljmp
std
sub
adcb
jp,pn
lret
sbb
or
hlt
jle
out
lahf
jg
add
push
stos
dec
xor
adc
mov
jmp
add
lods
mov
inc
mov
add
jb
mov
or
fldl
mov
pop
cli
pushf
mov
leave
daa
jb
jbe
aas
outsb
test
je
jg
jbe
mov
jg
mov
or
xchg
jg
rol
insl
push
pop
mov
mov
bound
loop
shrl
in
mov
cs
mov
in
scas
mov
cld
hlt
pop
mov
pusha
fdivrp
int3
jnp
pop
xchg
pop
imul
or
xchg
mov
fildl
lds
jmp
mov
ret
lahf
mov
addb
sbb
and
dec
cmp
ret
stos
outsb
je,pn
mov
push
mov
sbb
repnz
jmp
or
insb
fchs
mov
repz
inc
stos
push
insl
ss
adc
cmp
pop
psraw
jnp
xor
inc
rorb
mov
aaa
cmpsb
out
rcr
mov
jnp
fcoms
mov
lods
xor
inc
xchg
lret
daa
push
or
fdivr
movsb
les
lcall
xchg
ret
mov
bound
repnz
rorb
push
lcall
inc
ret
movsl
fs
inc
mov
and
aad
mov
cmp
sub
sti
add
popf
xchg
in
aaa
jge
shll
mov
pop
push
push
dec
sbb
pop
mov
mov
insl
pop
cmp
cmp
cld
stos
test
jb
clc
test
ljmp
cmp
sub
negl
inc
adc
pushf
mov
in
outsl
pop
mov
leave
dec
mov
cwtl
lcall
stos
call
mov
mov
adc
popf
shrl
or
push
add
mov
pusha
imul
testl
jg
icebp
jno
lea
jecxz
in
push
cmp
sarl
cmp
mov
push
xchg
xchg
sbb
divb
xor
hlt
into
hlt
mov
or
mov
scas
mov
mov
lret
sub
pusha
xor
jp
cli
rcrl
ds
add
or
jp
cmp
leave
xor
testb
pop
mov
mov
inc
pushf
lods
dec
into
insl
popa
mov
shrb
sub
cmp
int3
and
xchg
xchg
mov
mov
div
dec
cltd
clc
push
out
inc
movsb
jbe
leave
in
repz
add
push
sbb
imul
leave
fmuls
push
sub
sub
hlt
and
pop
stos
scas
xor
in
aaa
cmpsl
add
mov
rclb
nop
movsl
xchg
out
add
mov
into
jmp
div
jp
sahf
pop
push
mov
cli
jl
inc
add
mov
lret
clc
pop
push
outsl
add
xor
movsb
gs
cmp
and
enter
jg
aad
push
inc
push
jmp
daa
movsl
xor
pushf
leave
cltd
jmp
mov
call
cltd
out
inc
and
push
dec
call
adc
int3
lret
xchg
or
dec
and
call
stos
push
enter
jge
stos
jmp
pusha
out
jle
mov
xor
inc
xchg
fsubl
sbb
push
pop
aad
mov
cmpsl
bound
stos
js
xlat
cli
sbb
into
push
xchg
sub
insb
add
outsl
mov
pushf
outsl
xchg
fsubl
mov
imul
insb
int3
aad
and
jns
dec
sub
test
mulb
xchg
jbe
sahf
sub
insb
xor
xchg
add
mov
inc
and
pushf
lahf
xor
adc
std
sub
xchg
nop
gs
stos
inc
mov
and
idivb
inc
push
jbe
andb
aaa
add
pop
into
sbb
jbe
fldl
cmp
adc
mov
sti
jo
rolb
mov
xchg
sub
mov
inc
jnp
adc
jp
and
js
sbb
fstps
pushl
mov
jns
mov
jecxz
ret
int3
shll
cmp
add
jl
add
add
jno
jne
mov
dec
sahf
mov
xchg
loopne
das
push
arpl
sub
cmpsb
fwait
and
js
fxch
xor
mulb
in
mov
in
popa
scas
out
mov
mov
mov
std
xchg
das
mov
js
lea
xor
pop
adc
outsl
lods
or
cmpsl
add
cwtl
test
in
or
cmp
lods
fwait
rorb
jp
shll
idivl
mov
imul
jne
imul
movsb
nop
inc
mov
outsl
mov
mov
out
pop
mov
test
or
xor
adc
pop
sti
mov
pop
xchg
addb
inc
mov
sub
call
rolb
int3
pop
sbb
jb
shrb
mov
mov
movsl
sub
in
mov
lret
scas
stos
mov
dec
in
adc
fdivs
xchg
and
add
push
or
in
adc
addr16
sbb
outsl
in
cwtl
fiaddl
xchg
add
test
enter
sub
iret
fsubr
cmp
adc
inc
lock
cmp
fcomp
je
jl
inc
push
jecxz
cmpl
or
add
cmp
adc
push
push
mov
icebp
mov
lock
mov
jg
mov
pushf
iret
or
cli
inc
inc
fistpl
mov
push
call
in
cmp
out
cmp
xchg
and
pop
mov
outsb
rcrl
dec
add
add
sub
push
inc
insl
fdivs
jns
mov
sarl
push
sti
pop
mov
clc
pop
and
or
push
es
fwait
cmp
push
xchg
cli
cmpsb
cmpb
in
lcall
stos
xor
add
add
sub
xor
xor
cmc
sub
pop
mov
sub
jbe
push
mov
sbb
ss
out
or
push
jge
mov
push
cmpsb
jnp
xlat
push
movntps
push
mov
and
mov
arpl
rorl
mov
adc
loopne
push
outsl
loop
or
in
pop
fcomps
mov
in
or
jecxz
dec
adc
aad
je
xchg
popf
loop
mov
cmp
stos
bound
push
fcmovu
xchg
cs
das
lock
outsl
xlat
cltd
xor
inc
outsl
sahf
mov
pop
mov
jo
sub
or
stc
xor
jle
push
and
pop
xor
insl
ret
mov
xor
mov
repz
mov
test
push
jnp
jnp
xchg
push
shll
js
lahf
mov
jmp
cmc
inc
repnz
outsb
lods
push
outsb
popa
dec
push
lea
jns
leave
popa
imul
mov
mov
push
and
xchg
push
jne
lds
mov
inc
imul
popl
push
dec
out
adc
imul
sahf
mov
jp
inc
lahf
int3
insl
fwait
and
fadds
add
mov
sub
scas
lock
dec
test
push
pop
adc
push
and
mov
roll
mov
lods
in
in
ljmp
pop
cmp
sub
or
and
in
mov
loope
xor
jns
dec
add
popf
push
out
rdmsr
jmp
or
xchg
popl
dec
pushf
dec
cmpsb
mulb
sarl
mov
dec
push
push
fcompl
sbb
adc
repnz
pop
push
jno
push
cmp
insl
jg
mov
loopne
or
in
in
mov
out
jno
lods
push
or
jo
cmpsl
jle
sub
es
xchg
sbb
adc
cmpsl
mov
sahf
dec
loope
adc
adcb
aas
outsb
shlb
es
jge
hlt
inc
fldl
les
repnz
push
imul
xor
mov
cmpsb
mov
add
lahf
cmpl
sub
or
push
js
test
fldl
dec
jge
sbb
pop
and
outsb
mov
xchg
iret
loop
mov
jmp
scas
jbe
dec
and
cld
scas
imul
test
mov
ret
push
aas
sbb
in
adc
insl
insb
xor
shrb
and
lea
ss
cwtl
stc
and
sbb
pop
mov
jno
fs
fsub
pop
in
aam
mov
xlat
aaa
sbb
les
mov
int
mov
movsb
addb
mov
mov
adc
addr16
imul
arpl
add
jnp
test
mov
sti
shr
in
aas
rcl
ror
jl
test
cmp
movsb
out
dec
jp
lods
dec
push
shlb
fisubrl
cmp
mov
cmp
outsl
mov
pop
cmp
pushf
xor
pop
in
mov
adc
mov
orb
stos
repnz
mov
sub
xchg
jne
mov
cmp
leave
sub
popf
cmp
out
in
adc
mov
fildl
cs
lds
in
or
mov
jne
scas
jl
movsb
or
mov
mulb
cmp
ficompl
or
mov
mov
mov
dec
push
loop
lea
aam
mov
iret
fidivs
lods
cmp
mov
or
adc
jns
pusha
test
jns
js
test
cmp
hlt
push
cmp
lds
pop
xchg
dec
sbb
jge
mov
dec
cld
insb
xchg
movsb
adc
push
xchg
pop
ficoms
call
xor
sub
dec
jp
pop
imull
pop
sub
aad
add
arpl
mov
and
cmpsb
mov
pop
add
stos
or
out
fucomi
cmpsl
jb
aaa
sbb
inc
in
inc
xor
inc
in
dec
sbb
fs
mov
insl
pop
adcl
out
add
lods
imul
and
or
fistps
in
pop
pcmpgtw
mov
sahf
lret
sub
imul
adc
jl
add
sub
test
iret
push
sbb
popf
ss
inc
das
dec
mov
push
mov
lods
ret
inc
jl
jno
push
cmpsl
adc
call
push
imul
cmp
jbe
scas
jbe
push
mov
pop
rcr
mov
add
ret
mov
jg
pop
xlat
xor
add
sub
cmp
mov
mov
sub
dec
xchg
and
jg
pusha
aad
icebp
cmp
inc
fildl
pop
push
dec
add
sub
dec
movsb
jle
pushf
or
mov
dec
dec
jb
shrl
pop
mov
iret
or
mov
adc
out
pusha
clc
cli
mov
and
bound
mov
inc
mov
scas
call
shll
sbb
ljmp
add
or
mov
incl
shl
out
daa
lret
xor
ret
sbb
imul
scas
clc
sub
fildll
fwait
xor
push
mov
gs
dec
out
icebp
mov
into
push
cmp
aaa
push
mov
adc
loopne
push
dec
int3
push
cmp
pop
sbb
or
or
sub
push
mov
pop
adc
xchg
and
jno
sbb
add
and
fcmovbe
outsl
mov
or
inc
push
rcrb
adc
mov
sar
addr16
aas
add
xorb
lods
inc
mov
enter
sbb
push
mov
fisubrs
push
fimuls
pop
push
test
lods
xor
sahf
mov
inc
daa
xlat
pusha
sub
popf
repz
insb
inc
aam
into
push
aas
hlt
cltd
or
repnz
icebp
and
in
inc
dec
sbb
shr
or
imul
push
and
cmp
ss
fnstcw
shll
js
lock
pushf
imul
dec
imul
adc
xchg
sub
mov
arpl
lock
aad
jne
in
cmp
jns
mov
xchg
insb
or
mov
push
jbe
xor
adc
sbb
or
and
pop
lcall
xor
mov
in
test
mov
fstpl
aam
jb
in
xor
out
mov
mov
xor
jl
mov
subl
mov
cmpsl
std
les
pop
lds
push
add
fsubl
pushf
push
mov
int
jl
filds
add
mov
xlat
sub
mov
aam
lds
sub
mov
dec
loope
cld
add
jecxz
in
lcall
pop
out
cmp
nop
sbb
adc
inc
test
and
push
push
xchg
add
test
sbb
pop
pusha
push
jbe
jp
and
adc
leave
lods
addr16
std
cmp
pop
addr16
call
test
test
fisubl
shll
decl
adc
push
dec
out
dec
hlt
push
gs
stc
xlat
sbb
inc
xor
stos
lret
jb
fistl
push
sbb
xchg
xor
mov
adc
sarb
out
fucomi
cmp
mov
cltd
inc
dec
jp
jge
std
pop
inc
push
dec
sbb
out
movsl
insb
mov
lds
gs
adc
inc
mov
outsb
inc
or
iret
add
xchg
or
dec
mov
xor
cld
dec
push
and
cs
jb
fldenv
or
pop
inc
aad
push
cmc
mov
in
into
arpl
xor
flds
sbb
aam
lods
push
fisubrs
inc
fisubs
xor
cmovge
lahf
mov
xor
in
cmp
and
test
cmp
bound
lcall
sarb
gs
push
xchg
jl
push
mov
add
xchg
sbb
mov
adc
insb
and
lock
ret
mov
and
mov
out
dec
lods
lock
test
xchg
xor
inc
test
in
sbb
ds
mov
xor
adc
je
sbb
xor
loop
in
mov
loop
scas
outsb
imul
in
sub
iret
out
cmpsl
dec
data16
ret
add
xchg
pop
xor
lret
aad
pop
je
jb
in
enter
test
out
out
ds
jg
jne
icebp
jge
adc
or
sbb
ret
scas
test
stc
dec
jl
fs
rolb
sub
or
hlt
push
sbb
pop
imul
mov
xchg
push
pop
ljmp
das
mov
jo
mov
xchg
das
les
enter
xchg
lret
insl
xchg
cmp
push
mov
jp
sub
lods
or
lods
js
bound
clc
loop
jmp
cmpsb
cwtl
mov
sub
lods
pop
sbb
movsb
add
jbe
fdivrl
lock
adc
jmp
push
std
shl
pushf
xchg
sub
mov
mov
fistl
xchg
scas
cmp
mov
pop
adc
outsb
xor
mov
scas
add
addl
cli
call
out
cli
adc
in
out
sub
fcomip
push
xor
sub
into
push
mov
movswl
pop
fcomps
pusha
loope
test
and
or
mov
xor
mov
inc
push
xor
sub
and
push
rorl
jbe
int
call
adcb
sub
es
dec
mov
add
test
imul
pusha
es
fbld
insb
loope
push
into
xchg
push
icebp
adc
mov
cmp
jg
std
add
inc
add
mov
fildll
add
inc
mov
data16
addr16
pop
movsb
push
jno
fisubrl
fidivs
jl
sbb
aam
arpl
pop
loop
mov
test
xor
pushf
jo
jae
cli
ds
add
mov
fyl2xp1
jnp
popf
ret
push
shrb
and
mov
std
dec
jbe
push
dec
pop
fs
mov
fwait
mov
scas
jbe
icebp
xchg
cld
push
lods
mov
shll
add
imul
in
cmp
das
test
stos
push
test
mov
in
dec
mov
andb
jl
jge
xchg
outsl
sti
repz
adc
mov
adc
rcrb
lret
xor
inc
cmpsl
sahf
sub
js
mov
adc
jmp
xchg
and
and
add
dec
xchg
pop
cmp
shll
gs
frstor
inc
sbb
lods
addr16
data16
scas
cmc
pop
jl
cs
jle
cmp
mov
inc
popf
sub
lret
sbb
addr16
in
neg
and
ja
daa
sub
sub
add
mov
jge
and
aam
test
enter
ret
scas
mov
mov
out
mov
mov
stos
ficompl
shll
or
test
cmp
into
addr16
movsb
insl
int
test
sub
in
fs
push
imul
call
adc
cmp
xor
push
sbbl
pop
mov
cmpsb
push
or
cwtl
sub
mov
pop
cmp
repz
xchg
cmpsl
push
fadds
add
add
daa
in
jecxz
leave
popf
fstpl
pop
push
push
fidivrl
loope
loop
sbb
mov
jg
sar
xchg
imul
push
shrl
cwtl
sub
add
cmpl
add
scas
addl
test
ss
sbb
sbb
jmp
lock
sub
adc
mov
jp
xchg
into
hlt
loope
ret
scas
ja
cmc
mov
iret
adc
lret
lcall
fidivs
add
dec
add
jbe
in
fmuls
or
inc
lahf
test
mov
xchg
int
out
mov
test
call
test
rcrl
or
lods
repnz
frstor
pop
nop
pusha
daa
sbb
test
xor
add
insl
dec
mov
adc
ret
push
rcl
out
xlat
imul
cltd
cmp
jecxz
xor
rcrb
push
fwait
aaa
pop
lock
mov
cmp
inc
shl
mov
cmp
xchg
push
fnstsw
pop
xor
mov
enter
into
sbb
pop
xchg
in
push
xchg
popf
mov
mov
jne
clc
pop
hlt
sbb
sub
fsubrs
fdivl
dec
sbb
aad
dec
es
js
jge
pushf
jg
fdivrl
cmpsl
fldcw
and
adc
push
cld
xor
push
sbb
fisttps
jle
ficompl
cmpl
lahf
mov
add
int
mov
and
inc
push
lret
push
sub
mov
sbb
cmp
les
pop
in
popa
aam
sub
icebp
jb
mov
je
sbb
repnz
insl
cs
add
fldt
dec
xor
pop
add
leave
dec
cli
cmpsl
fiaddl
sub
lret
mov
pop
sub
stos
stc
dec
lret
mov
adc
dec
pop
jge
insl
sbb
mov
mov
xchg
jmp
jo
mov
scas
mov
pusha
aam
jne
in
fisubrs
cmpsb
lods
push
inc
xchg
out
movsl
loopne
into
jne
clc
aas
js
pop
ds
cltd
xchg
mov
fcmovu
xchg
add
scas
mov
dec
sbb
outsl
imul
call
rolb
cmp
or
lcall
xchg
dec
js
mov
xor
lods
jge
inc
jae
cld
bound
jnp
pop
fs
popa
stos
in
cmc
push
mov
rorb
jge
push
dec
push
jno
or
adc
add
push
xchg
and
ficoml
sbb
insb
jl
ds
xchg
cld
adc
or
movsb
gs
cmp
mov
lds
adc
xchg
lods
pop
push
mov
out
cmp
into
sbb
in
ret
and
daa
clc
xchg
jg
inc
xor
sbb
adc
adc
aas
insl
int3
out
sub
pop
cld
ljmp
and
push
xchg
xchg
jg
jno
dec
cmp
cmp
mov
mov
jge
pop
arpl
test
inc
loopne
popa
xor
dec
lahf
or
int3
sub
adc
jge
inc
mov
out
test
pop
dec
lds
sbb
adc
setnp
daa
inc
scas
mov
jnp
int3
gs
cmp
push
jecxz
adc
inc
pop
sti
mov
sub
loope
fstl
sbb
mov
mov
fs
arpl
add
cmc
ja
jo
faddp
insb
pushl
jae
dec
lret
out
mov
or
sbb
dec
push
lret
pop
jmp
xchg
push
scas
pop
push
mov
dec
out
and
mov
addb
repz
cmp
repnz
mov
or
mov
pop
mov
aas
add
in
leave
cli
xor
adc
movsl
cli
jo
mov
cltd
or
repnz
js
mov
or
pop
ret
adc
xlat
or
rcll
xchg
sub
repz
mov
ret
enter
mov
or
xor
dec
pop
out
sbb
stc
jle
lcall
daa
mov
xchg
or
inc
or
push
in
cmp
lahf
inc
inc
fs
lret
loopne
inc
enter
shll
mov
sbb
in
pop
jo
out
jmp
in
and
fdivrl
aas
mov
jmp
sub
clc
dec
fadd
movsl
sbb
test
mov
and
lock
push
mov
aad
out
adc
add
sbb
xor
pop
xor
call
popa
mov
cmp
push
and
xor
cli
xchg
xchg
je
mov
movsb
pop
cli
mov
testb
adc
pop
mov
adc
xchg
daa
mov
add
jmp
out
add
push
hlt
test
pushf
mov
jns
pop
imul
add
dec
or
jmp
pop
mov
mov
mov
call
mov
fwait
xchg
push
repz
push
sti
sub
fld
in
cmc
dec
xchg
jnp
cwtl
and
jnp
sbb
js
imul
and
call
jae
pop
push
mov
push
sub
leave
aaa
pop
popa
hlt
mov
mov
add
stc
xor
inc
sbb
jge
loop
popf
add
iret
pop
pushf
outsb
push
lret
add
jmp
outsb
mov
stos
leave
jge
roll
xor
imul
cs
adc
and
xor
mov
add
xchg
push
mov
test
jns
popf
push
in
adc
xorl
sub
ret
and
shll
test
sbb
mov
fwait
pop
xchg
dec
xchg
push
lret
ss
xor
daa
xor
mov
ret
int3
in
xchg
mov
cmp
xchg
out
mov
jl
cmpsl
fs
jae
movb
xchg
mov
push
mov
dec
inc
xor
xchg
dec
stos
aam
or
xor
push
icebp
popa
dec
cmpsl
ret
ret
sti
pushf
mov
cli
pop
mov
icebp
mov
inc
ja
rcll
inc
dec
daa
xchg
scas
xor
stc
push
dec
push
push
pop
push
movsb
mov
movsl
add
sbb
adc
mov
jmp
jno
test
sbb
mov
stos
push
inc
push
push
fucom
inc
shlb
xchg
sub
inc
sub
jge
dec
sbb
mov
mov
icebp
jle
add
dec
stc
repnz
sbb
cmp
gs
stc
pop
xor
pop
fists
and
pop
testl
ret
mov
out
lods
lea
jle
mov
pop
popa
mov
ficoms
mov
adc
jmp
xor
fbstp
out
add
and
das
push
andb
cli
mov
dec
pop
out
or
pcmpeqw
insb
leave
insb
mov
mov
sbbl
push
dec
dec
sub
out
or
pop
std
lock
lods
fsubrl
ljmp
stos
out
adc
add
push
divl
xor
mov
lret
aaa
inc
push
stos
or
mov
mov
insb
xchg
ds
pop
xlat
jae
sub
sbb
jle
and
cmp
cwtl
out
push
das
test
push
mov
movsb
xchg
rorl
pop
push
mov
xchg
test
loop
mov
push
cmp
jae
test
stos
repz
cli
test
dec
int3
test
xchg
addr16
jl
dec
inc
in
fcmovu
cmc
ret
inc
out
xchg
add
push
xchg
sub
lahf
movsb
mov
ret
inc
sub
lock
mov
cmpsl
xchg
gs
fnstsw
mov
popa
dec
mov
xchg
add
in
ss
pop
in
ljmp
jecxz
fidivrs
push
jno
xchg
or
ds
rcr
outsl
stc
movsl
jmp
sbb
and
icebp
insl
dec
push
test
xor
lahf
xchg
sub
push
mov
sub
inc
lods
out
push
clc
hlt
push
mov
fwait
jne
xchg
add
xchg
add
cmp
test
es
cmc
inc
pop
test
bndstx
mov
call
call
cmp
stos
push
mov
cmp
cmpsb
sub
cmp
repnz
aam
ficompl
iret
int
push
imul
adc
adc
mov
shll
lods
fxch
push
lds
fidivs
sub
sub
cltd
cmp
cmp
outsb
dec
push
pusha
out
dec
cmp
shlb
cmpsb
pop
dec
xchg
add
pop
jbe
and
pop
xchg
repnz
push
enter
fcoms
imul
sbb
pop
xchg
repnz
das
pop
xchg
inc
fcmovnb
push
pop
repz
sub
scas
inc
jnp
and
pop
and
adc
scas
xchg
pusha
pusha
mov
or
aam
rorb
push
jmp
fst
clc
mov
pusha
fucomp
fcmove
dec
not
lret
scas
dec
pushf
cli
and
pop
xchg
mov
vpaddsw
inc
sub
dec
pop
xchg
fucomi
pop
out
push
jne
jp
lahf
xor
and
mov
ret
int3
jp
mov
and
adc
mull
or
sbb
xchg
jae
mov
imul
add
sbb
and
div
mov
fldt
orb
cmp
push
xchg
sbb
dec
xchg
ja
sub
pop
mov
ds
xchg
mov
fildll
dec
inc
xor
scas
setno
daa
dec
mov
mov
add
or
addr16
fs
xchg
scas
pop
call
loop
inc
xchg
out
data16
push
in
addr16
js
xchg
mulb
or
ffree
jecxz
dec
idivl
jno
jns
dec
adc
cmp
fcoms
icebp
sub
push
add
and
mov
lret
pop
daa
iret
arpl
mov
pusha
shr
lods
subl
enter
push
xor
xlat
subl
out
cwtl
nop
mov
adc
pop
mov
sbb
out
or
movl
pop
test
enter
inc
mov
repnz
icebp
pop
in
push
push
out
pop
mov
cltd
or
pop
pop
xchg
bound
pop
cwtl
push
stos
icebp
inc
lahf
rclb
and
imul
sar
xor
sahf
xor
fcomps
clc
movsb
mov
push
into
and
dec
cld
pop
push
jmp
jb
mov
fld
mov
mov
cld
int
notl
sbb
cmp
adc
jo,pt
jmp
rcrl
add
cmp
popa
cmp
out
movzbl
fistps
cmpsl
pop
in
mov
ljmp
pop
or
mov
or
sub
imul
je
add
fcomps
inc
int3
pop
pop
inc
in
inc
mov
adc
dec
mov
and
adc
or
xor
push
orb
bound
das
add
dec
mull
or
ds
push
fwait
enter
je
xchg
fucompp
and
in
int3
sub
jl
scas
pushf
fsubrs
int
fimuls
xor
adc
mov
pop
insl
ror
xor
ss
repnz
ror
xor
xor
jae
cmc
inc
fsubl
sub
call
sub
stos
adcl
xor
mov
into
gs
mov
mov
negl
cmp
data16
iret
xchg
icebp
and
lret
orl
sbb
mov
scas
and
add
sub
push
cmpsb
cs
cld
cmp
pusha
push
push
xor
cli
scas
cmp
dec
fxch
out
sub
pop
xor
loopne
inc
stc
xor
xor
push
out
sbb
out
ret
pop
cmc
bound
js
es
test
xchg
adc
pushf
and
push
jmp
ljmp
mov
xor
cmp
push
fsubl
rcl
mov
cmpsb
pop
in
clc
rol
jne
push
outsb
jnp
xorl
ret
and
dec
inc
jae
hlt
pusha
stc
add
insb
pop
pop
and
shll
mov
sub
testl
stos
fsts
scas
sbb
shr
mov
outsl
push
cmp
cwtl
inc
xchg
pop
xchg
push
fs
cld
cmp
sbb
ret
cld
flds
es
add
scas
stos
jb
testl
imul
pop
pusha
les
aam
test
adc
fdivl
dec
stos
jnp
lahf
mov
daa
jns
out
aas
cld
mov
cltd
jle
jp
popa
jp
icebp
cli
in
aam
and
in
mov
jo
mov
pusha
mov
int3
and
cltd
ljmp
addb
rcl
mov
cmp
inc
in
ljmp
sub
test
in
fiadds
cli
loop
ret
mov
push
ljmp
mov
or
sarl
stos
movsb
insl
cmpsb
sbb
dec
int3
jno
inc
test
dec
movsl
out
cmp
jmp
mov
push
inc
xchg
push
inc
arpl
scas
mov
into
vxorps
adc
adc
push
and
mov
jb
mov
push
jge
sbb
push
jp
in
enter
mov
fdivrl
mov
insl
add
xor
mov
loop
xor
cld
ret
mov
or
sub
xlat
pusha
shll
or
xchg
xor
mov
jle
xchg
push
sahf
fwait
pop
mov
jnp
lods
lret
lea
cwtl
and
jg
pop
dec
cmpsb
mov
mov
xlat
addr16
or
test
nop
mov
pop
sub
inc
add
fstpt
scas
test
icebp
or
stos
pop
pop
xor
nop
dec
mov
popf
daa
mov
lret
in
or
push
mov
insl
jl
mov
mov
adc
flds
and
sbb
lahf
mov
out
or
adc
shrb
jnp
pop
mov
lcall
cmp
xor
dec
mov
jge
and
xor
scas
cmp
and
mov
add
pop
or
push
faddl
mov
movsl
leave
xchg
xchg
ds
add
mov
ds
repnz
movsl
sti
xchg
xchg
cld
aam
bound
daa
test
lds
popf
xor
pusha
cli
popa
notl
jle
aad
xchg
dec
or
sbb
nop
xor
xchg
dec
outsl
es
rorl
das
sub
sahf
inc
ret
jbe,pt
stos
xchg
and
lret
rclb
ffree
dec
xchg
outsb
jge
mov
in
mov
jae
gs
sbb
call
jae
dec
mov
int3
mov
adc
clc
jecxz
cmp
sahf
fisttpl
add
aad
add
out
icebp
out
subl
inc
sub
add
jecxz
pop
scas
ja
fwait
arpl
mov
stos
xchg
push
inc
scas
stos
loop
lret
dec
dec
pop
addb
lds
fistl
cltd
test
sub
ret
loopne
hlt
cs
xor
shll
sub
xor
push
and
and
inc
xchg
jne
xchg
mov
fdivrl
xchg
mov
inc
or
adc
pop
outsl
orw
mov
jmp
mov
imul
mov
mov
int3
xchg
ss
jo
and
fdivr
or
outsb
mov
mov
mov
dec
dec
fwait
testb
test
mov
push
in
mov
lods
int
testl
out
dec
jb
mov
out
out
cmp
sbb
dec
mov
gs
cli
cmp
mov
mov
pushf
add
popa
jecxz
in
les
push
scas
push
clc
ror
push
push
pop
pop
cmpl
mov
in
cmpsl
in
je
push
mov
sbb
jl
repnz
pcmpgtw
outsb
pop
and
cwtl
mov
jg
jp
movsb
fadds
std
fsubs
pop
mov
adc
fwait
std
sub
cmp
xlat
pop
lods
mov
mov
fisubs
mov
jno
mov
push
scas
mov
js
int3
cmp
pop
and
lcall
daa
hlt
sbb
loopne
inc
add
jb
inc
outsl
pop
fwait
jmp
push
ficoms
inc
push
inc
add
jg
jge
push
test
subl
pushf
inc
outsb
push
jnp
popf
fcoms
fcomp
jae
fcoms
cmp
mov
sub
in
pop
roll
fidivrl
pop
mov
adc
shl
enter
xor
lret
cmp
cmpsb
mov
lret
mov
fildll
and
dec
pop
cmp
jl
dec
add
stos
rcrl
or
ljmp
leave
jo
xchg
sbb
cmp
lcall
cmp
or
jg
mov
jg
ljmp
leave
mull
push
lods
leave
jmp
jnp
and
dec
jg
sub
stc
mov
lods
pop
and
clc
in
es
add
mov
xorb
hlt
ds
out
bound
mov
jle
cmovnp
fwait
xchg
xchg
pop
int
xlat
adc
lods
mov
jge
sarl
das
sbb
outsb
ja
mov
insl
or
sahf
lahf
jl
add
xchg
fcoms
fidivrs
pop
ds
fs
aaa
into
lret
pop
cltd
dec
cmp
inc
in
test
jno
fidivl
xor
sub
mov
insb
cmp
xchg
insl
xor
mov
lcall
aam
mov
or
jge
pop
mov
nop
dec
pop
int
cwtl
xchg
int
sbbb
add
and
data16
cmp
cmp
sbb
mov
insl
mov
test
outsb
adc
repz
add
sub
or
out
push
pop
mov
je
sbb
xchg
jae
xchg
mov
mov
inc
ret
test
push
sbb
xor
into
repz
xchg
mov
push
test
push
mov
and
popa
addr16
rol
rcrb
hlt
pop
add
push
dec
test
enter
cwtl
pop
pop
jmp
inc
insb
loopne
movsb
mov
stos
mov
mov
adc
ja
loope
xchg
push
or
call
mov
xchg
mov
in
xchg
in
sub
mov
mov
int
xor
ret
adc
jb
in
iret
dec
mov
jp
cmp
jno
jns
mov
repnz
mov
inc
rep
inc
repnz
push
mov
push
lret
sub
mov
call
dec
mov
xchg
daa
mov
push
pop
movsb
test
scas
xor
loopne
lahf
les
ror
sub
jge
test
ljmp
add
or
dec
fdiv
mov
or
outsb
push
fsubrs
adc
lahf
ljmp
filds
insl
cwtl
fwait
in
mov
into
inc
jp
rorb
dec
stc
inc
dec
mov
jp
mov
test
sub
jne
add
pusha
in
in
and
mov
dec
pop
dec
add
jns
and
inc
jne
je
sub
out
mov
cli
sbbl
rclb
pushl
bound
inc
and
jbe
rorb
out
push
jo
cmp
xchg
and
push
jle
jmp
aaa
push
loopne
hlt
mov
subl
pop
sub
mov
sbb
jae
and
push
das
jo
xchg
stos
imul
jb
cwtl
fcom
cli
subb
pop
push
cli
into
mov
adc
mov
add
push
pop
shlb
fldcw
hlt
push
ja
aad
or
push
out
dec
shrb
test
inc
sbb
cmp
cmp
movb
cmpl
mov
popa
into
cmp
enter
cs
jae
sbb
in
push
mov
mov
or
idivl
out
mov
or
lret
jbe
jge
or
adc
and
out
lock
mov
jl
mov
and
jp
int
mov
sbb
mov
in
push
std
rcll
stos
imull
cmp
sub
fs
mov
push
aad
dec
clc
fisubrs
fdivs
ja
scas
fsubs
test
xlat
in
sti
stc
sbb
xchg
jo
push
or
mov
repz
jp
mov
adc
mov
movsb
ljmp
testb
addr16
test
push
sbb
mov
push
rcrl
gs
enter
pop
dec
cli
or
ret
in
repz
mov
inc
int3
addr16
loopne
repnz
jnp
lret
outsb
enter
ret
sbb
std
push
mov
lret
pop
aad
jnp
outsl
fs
mov
fstp
ss
in
dec
xor
test
xchg
fmul
inc
push
repnz
push
jecxz
orb
pushl
xlat
lret
adc
sub
jge
cltd
aam
pop
mov
sahf
in
int
mov
sar
lret
imul
addr16
xor
pop
adc
jle
xchg
jmp
test
or
mov
push
cmp
popl
add
inc
adc
sti
aas
iret
dec
mov
jno
or
adc
push
rorb
leave
fnsave
adc
or
pop
push
mov
cltd
and
jl
pop
pop
shlb
jbe
pop
hlt
mov
sbb
pop
lahf
js
repnz
sub
loop
dec
dec
dec
aas
loop
test
dec
lret
mov
ds
out
xor
cmpsb
cmovp
xchg
and
xor
bound
mov
cmc
jl
sbb
jno
mov
test
std
mov
repz
lea
in
dec
push
mov
pop
and
push
fcomp
arpl
inc
popa
shlb
leave
ja
mov
mov
push
mov
push
mov
arpl
fidivrl
out
and
cmp
xor
faddl
jb
sub
inc
addr16
xchg
sbb
jmp
adc
popa
sbb
cmp
ljmp
es
sub
mov
mov
add
pop
mov
mov
es
jbe
xor
pop
je
adc
movsb
dec
sbbb
sbb
xlat
xchg
and
popa
and
mov
daa
dec
xlat
sbb
push
dec
cmc
jecxz
inc
dec
rorl
mov
jae
fcoms
nop
inc
mov
movb
push
jno
cmp
xchg
xchg
cmpsl
mov
ss
xchg
arpl
xor
xor
loop
icebp
mov
pcmpgtb
les
clc
pop
repnz
and
out
or
subl
adc
sbbb
cmc
jp
rolb
into
je
and
leave
lcall
push
sub
xchg
xchg
ret
mov
sbb
dec
fmull
aas
push
and
add
push
mov
mov
imul
push
popa
pop
add
inc
arpl
sbb
notb
sbb
xchg
sbb
aam
dec
mov
adc
push
jae
and
mov
cmpsb
push
int
test
in
das
imul
ljmp
pop
aam
shl
idiv
xlat
mov
aam
in
jbe
xor
imul
xchg
jnp
inc
sub
faddl
or
add
insb
andl
push
xor
mov
adc
test
out
aam
fs
xchg
mov
add
jge
cli
and
pop
mov
out
lahf
adc
mov
les
or
mov
mov
clc
dec
xor
inc
paddusw
sbb
ja
std
mov
lock
addr16
mov
movsb
adc
jb
cmpb
fmull
cwtl
xchg
inc
repz
xor
inc
and
das
sbb
rcrl
dec
sbb
xchg
ss
notl
inc
mov
ljmp
jge
repnz
mov
js
ret
dec
testl
fmull
fildl
sub
out
xchg
push
dec
sahf
inc
imul
dec
leave
pop
mov
insl
add
mov
adc
rcrl
cmp
repnz
cmpsb
add
fcoms
repnz
and
aas
insl
dec
jmp
test
jnp
pop
pop
push
es
adc
mov
push
movsb
sti
push
out
lea
insl
inc
inc
out
ljmp
daa
stos
es
pop
imulb
andl
or
cmc
mov
jne
inc
xor
mov
rorb
fsub
cmp
xlat
inc
sti
in
clc
lret
test
in
fcmovb
xchg
rorl
add
jge
xor
sti
das
dec
stos
rcrb
dec
dec
cmp
inc
ds
mov
sahf
bound
or
int
in
aad
rcll
ja
lea
push
mov
add
insl
cli
lcall
test
mov
dec
push
loop
cli
pop
sub
add
pop
mov
mov
or
fwait
pop
mull
add
roll
cltd
aaa
xchg
adc
cmp
xchg
xchg
scas
mov
mov
out
mov
sbb
cmp
out
sbb
popf
adc
cmpsb
outsl
or
lods
xor
push
std
sarl
ret
std
ds
push
xor
int3
jg
mov
dec
mov
and
jno
ja
imul
jae
jno
movl
mov
das
ret
fmull
xlat
and
adc
push
adc
out
arpl
pop
jecxz
stos
neg
push
out
mov
mov
faddp
mov
lods
shlb
stos
int
into
pop
sarb
xor
loopne
nop
cmp
or
pop
jge
cmp
inc
popf
imul
jb
mov
call
fcomps
xchg
mov
mov
sbb
mov
inc
std
popa
andb
aaa
test
aam
addr16
push
imul
xchg
push
inc
imul
fsubl
loopne
sub
popf
fisttpl
sbb
enter
pop
mov
cmpsb
cltd
iret
leave
out
loop
cmpsb
lds
sbb
rcrl
jbe
ljmp
dec
jnp
jecxz
and
test
andl
aaa
aas
xor
pop
popf
daa
push
ffreep
push
fadd
sbb
in
mov
mov
repz
pop
out
push
addl
mov
pop
dec
mov
push
jg
outsb
sahf
lret
dec
xchg
lock
out
sbb
inc
pop
pop
pop
push
dec
pop
cmp
add
in
mov
aad
and
dec
push
pop
iret
xchg
ss
ljmp
subb
sub
and
out
test
add
mov
or
add
pop
ja
xor
popa
insb
ljmp
stos
xor
sbb
push
mov
nop
and
in
imul
xor
cmc
cs
cmp
mov
sbb
inc
push
inc
loopne
xchg
pop
out
push
fld
enter
jl
or
sbb
push
addr16
hlt
sbb
sbb
mov
add
xchg
data16
push
sub
movb
inc
or
xor
adc
sbb
lcall
add
push
inc
je
sbb
mov
pushf
in
push
xlat
fisubrl
andl
inc
fists
out
jge
push
jno
ljmp
cmp
push
xchg
xor
ds
stc
jae
sar
sbb
js
sbb
leave
jno
dec
xchg
cmp
js
daa
jns
mov
mov
inc
subl
dec
push
pushf
mov
ds
adcb
les
pop
sub
jbe
cmp
test
gs
cli
imull
and
inc
jnp
mov
frstor
xchg
sub
mov
sub
out
inc
xchg
jecxz
shll
mov
mov
es
or
xchg
and
cwtl
mov
test
dec
xor
mov
xchg
xchg
add
fisttps
adc
outsl
or
cli
dec
fcmovnbe
and
mov
or
roll
jnp
sub
xlat
mov
sbb
negb
pop
test
imul
fcoml
out
and
pop
pop
je
xchg
ss
outsl
pop
sbb
jl
or
jl
in
aam
sbb
outsl
pop
adc
mov
loop
push
ja
xor
in
pop
fimuls
mov
inc
push
movsb
inc
shll
pop
inc
scas
imul
dec
or
pusha
mov
cmp
dec
into
mov
or
aaa
ja
xor
sbb
xchg
jmp
ret
push
cmp
fdivrl
in
lds
adc
jne
popa
jne
adc
int3
ret
imul
sbb
mov
add
adc
pop
shrl
dec
or
mov
dec
mov
cli
mov
loopne
push
xor
arpl
jge
pop
shrl
in
xorb
clc
leave
enter
jge
dec
movsl
inc
nop
jecxz
or
sbb
jno
push
jle
jmp
into
push
sbb
cwtl
repnz
dec
cmp
sub
add
jnp
sbb
mov
jmp
xor
xchg
mov
lret
inc
xchg
popa
xchg
and
fldt
xor
inc
inc
push
xchg
ss
mov
filds
fiadds
imulb
stc
xchg
fld
sti
push
mov
jmp
and
mov
aaa
pop
push
push
xchg
pop
sarb
mov
jo
inc
and
lret
dec
movsb
ret
es
mov
xchg
popf
xor
movsl
lret
jecxz
sub
mov
repz
push
inc
xchg
push
sarb
into
mov
outsl
jae
out
sahf
lret
adc
mov
out
adc
adc
xchg
mov
xor
aaa
xchg
cld
sub
aaa
jecxz
mov
flds
in
daa
into
push
sub
pop
aam
jl
loopne
fnstenv
or
jge
in
inc
addr16
mov
adc
jb
repz
xor
mov
aam
jl
das
jo
test
icebp
dec
scas
aaa
xchg
pop
mov
pop
scas
dec
push
add
cmc
lods
shrl
scas
aas
sarb
jo
cmp
sub
gs
stc
adc
mov
adc
dec
lahf
and
pop
xchg
in
in
movsb
xchg
jle
mov
dec
inc
sub
push
push
xorb
or
push
test
jbe
clc
ret
movsl
outsb
imul
aas
incb
push
lcall
cmp
add
pusha
mov
inc
in
mov
ficoms
je
fsubrl
ss
pop
stos
push
push
xchg
add
ja,pn
xor
cli
aad
movb
add
outsl
enter
rcrb
cmp
pushf
add
push
call
xchg
rcll
scas
movsl
nop
pop
dec
jnp
pushf
outsb
dec
fs
sub
bound
out
inc
adc
jl
jb
dec
mov
gs
jle
insb
popf
popa
xor
rcll
mov
push
pop
add
icebp
imul
or
fbld
out
xchg
subl
aaa
pop
sbb
iret
pop
or
int3
popa
fwait
popf
mov
inc
pop
inc
cmp
cmp
push
mov
xor
movsb
jmp
scas
addr16
fsub
hlt
inc
fcom
mov
sbb
pop
sbb
ror
inc
mov
push
stos
or
outsl
out
ljmp
or
cmp
push
insl
cli
sub
leave
je
mov
jecxz
sbb
push
leave
cmpl
mov
xor
ds
outsl
xchg
mov
add
and
mov
in
mov
inc
and
jecxz
sub
pop
test
fwait
sub
insl
xchg
sbb
stc
jl
jecxz
mov
mov
sub
es
enter
jmp
push
pop
push
scas
cmc
xchg
insl
push
adc
jecxz
or
ljmp
icebp
pop
adcl
push
xchg
cmpsl
xor
in
shrl
inc
jnp
pop
xor
iret
cwtl
xlat
jnp
mov
dec
test
cmp
addl
stos
mov
jecxz
pop
push
test
stc
loope
and
movsb
int3
dec
mov
mov
loopne
mov
js
pop
or
je
sbb
sub
sbb
ljmp
popf
push
cltd
clc
in
decb
nop
inc
aad
aas
mov
popa
jne
inc
sbbl
mov
jp
xchg
lret
or
ret
mov
dec
shl
cmpsl
mull
sub
sbb
push
es
and
shrb
mov
gs
test
xor
fdivrl
cmp
stos
das
or
popf
dec
jg
pop
adc
stos
in
pop
adc
sub
in
xor
jge
repz
insl
jnp
loope
dec
cli
add
leave
cli
xor
imul
and
cmp
sub
cmp
push
jno
lods
js
sub
mov
push
out
pusha
or
push
imul
popl
rcll
lcall
sbb
cltd
pop
mov
sbb
adc
popa
pop
clc
add
cmpsb
lods
das
mov
in
rorb
mov
movsl
mov
mulb
and
fildl
jp,pt
pop
mov
jb
in
adc
inc
je
or
idivl
lcall
pushf
imul
xchg
fwait
mov
subl
mov
pop
push
sahf
cld
inc
out
ret
repnz
mov
inc
pop
fmul
jge
popl
insl
mov
rcrb
push
lods
mov
testl
sbb
xchg
xchg
jns
xor
pop
jo
pop
push
test
cs
pop
ret
scas
jnp
or
add
jecxz
xor
and
sub
int3
dec
push
xchg
daa
mov
int
fsubs
xchg
pop
push
scas
imul
pop
pop
rcl
jb
pop
bound
loopne
or
rolb
inc
inc
cmpsl
cmpsb
pop
sub
mov
arpl
dec
jl
push
imul
mov
cmovle
rol
sbb
inc
or
add
jb
loope
xchg
or
cwtl
test
push
cli
test
aam
xlat
scas
and
dec
in
pop
ret
mov
lea
lds
add
daa
and
test
cmp
fistpl
adc
aas
dec
into
repz
mov
cmp
fwait
push
dec
lock
sbb
adcl
les
ljmp
repnz
xor
dec
adc
ljmp
inc
loop
enter
shlb
mov
cs
mov
outsb
mov
adc
ds
push
xor
dec
xchg
je
pop
cmp
in
arpl
mov
mov
cmp
dec
ret
mov
pop
xor
gs
in
scas
mov
dec
jnp
lret
aam
test
sbb
fcom
arpl
mov
xchg
pop
xchg
cmpsb
test
mov
test
sub
xor
xor
mov
lods
sbb
imul
out
inc
mov
aaa
add
cli
pop
jnp
aam
jg
push
dec
arpl
stos
cmp
out
xor
in
ftst
ficoml
cmp
in
sub
aam
jbe
mov
popa
ret
popa
lea
jbe
ffreep
int3
xchg
addl
dec
adc
loopne
cmp
adc
in
test
rol
xchg
scas
dec
add
mov
cwtl
shll
lahf
jmp
bnd
imulb
cltd
out
clc
inc
lahf
pop
enter
mov
cmp
adc
and
lcall
jb
mov
mov
pop
shll
lret
sbb
js
sbb
test
xchg
sub
dec
inc
cmp
pusha
adc
mov
roll
call
mov
sub
dec
loopne
sub
pop
or
into
or
pop
mov
adc
rorl
cmp
adc
cmpsb
in
lods
dec
sbb
cs
movsl
and
or
push
xlat
lds
notb
sbb
adc
push
lret
sbb
pop
aad
mov
test
mov
or
insb
cmpsl
pusha
mov
rolb
xor
jecxz
mov
inc
sub
lods
sbb
fs
mov
adc
jne
add
inc
cmp
add
pop
inc
mov
scas
xor
mov
add
arpl
pop
push
push
mov
popf
shl
xorl
inc
rcll
adc
hlt
cwtl
aaa
and
jg
sbb
dec
pushf
fimull
xlat
movsb
or
push
or
push
xchg
mov
mov
mov
pop
push
pop
xor
orb
out
subl
call
mov
inc
bnd
mov
cwtl
pop
and
fldt
sbb
test
cmp
xchg
int
mov
movsl
pop
stos
call
inc
ja
mov
inc
icebp
mov
dec
dec
fidivrl
push
cwtl
jmp
and
inc
mov
pop
mov
lods
and
mov
sub
mov
and
add
mov
or
hlt
scas
mov
dec
scas
cmp
es
movb
icebp
jbe
cmp
pop
mov
jmp
lods
fldcw
rcrl
loopne
imul
adcb
dec
jbe,pn
stos
add
sub
cmp
sub
orb
cmp
mulb
cltd
xchg
fisubl
sbbb
loope
sub
je
lock
jecxz
test
or
sar
insl
int3
hlt
test
out
push
pop
popf
shll
adc
fwait
lea
clc
stos
addr16
addr16
pop
jb
and
outsb
pop
dec
cwtl
lahf
cmpsl
cmp
je
lcall
stos
hlt
fisubrl
mov
aad
xchg
insb
mov
dec
imull
test
outsl
pop
pop
and
in
pop
mov
sub
iret
std
sarl
pop
orl
cmp
fsubs
mov
xchg
sub
cmp
gs
adc
out
lret
inc
ja
rorl
insb
jnp
ret
outsb
stos
insl
mov
mov
jmp
jl
nop
test
push
push
xor
pop
test
sbb
stc
mov
xchg
adc
testl
imul
scas
sahf
stc
loopne
dec
jle
bound
lahf
aas
insl
push
jno
aam
xor
sar
scas
in
inc
xorl
sub
aad
cmp
in
xchg
mov
xlat
in
or
push
inc
scas
std
add
mov
movsb
xchg
push
pop
pop
popl
jbe
pop
pop
cs
scas
adc
popf
mov
pop
cs
sahf
or
cld
push
inc
lret
or
or
mov
jl
push
insl
dec
xor
rolb
int3
out
add
subb
shl
fs
cld
cs
stos
sbb
mov
sub
lods
dec
pop
ret
add
outsb
adcb
andb
mov
jp
dec
mov
mov
push
mov
mov
sub
aas
enter
sarb
mov
pop
pop
xchg
out
sub
loope
js
pcmpgtd
mov
jl
mov
mov
clc
mov
sub
adc
or
in
mov
into
pop
dec
push
sbb
sbb
cmp
push
inc
repnz
test
daa
cs
imul
adc
sbbb
pushf
mov
loop
out
mov
pop
jp
dec
mov
lahf
jnp
xchg
sti
shrb
jl
dec
out
mov
into
cmp
pop
pop
sar
and
das
inc
pop
in
adcb
mov
loope,pt
loop
adc
pop
stc
mov
cmp
inc
or
mov
imul
arpl
icebp
les
fwait
movsl
dec
ret
jno
jle
pop
ds
das
popa
inc
pop
mov
pop
push
jmp
mov
add
movb
lds
lcall
pop
test
add
pop
into
cmc
into
or
sub
xor
fldl
lock
sub
fidivs
jecxz
dec
mov
in
add
test
aaa
aad
xchg
mov
movsl
jmp
mov
movb
ret
xchg
in
in
ud2
insb
lods
sub
or
and
adc
inc
fsubs
fstps
movsl
aas
mov
loop
sub
ss
aam
mov
mov
test
mov
add
cmp
mov
loope
xlat
and
xchg
sbb
jp
insl
mov
sub
fwait
and
xor
mov
lods
jne
jp
push
int
fsubs
add
jecxz
fisubl
cmpsb
daa
repnz
push
imul
cld
cmp
loopne
fmull
cmp
out
sub
pop
scas
sub
dec
das
jae
test
sbb
pop
test
jb
int3
lods
aas
adc
xlat
mov
int
notl
dec
inc
movl
outsl
in
imul
jo
ljmp
sub
popf
xchg
xchg
or
push
add
cmc
xor
inc
push
mov
xor
insb
stos
movsb
repnz
inc
adc
jbe
leave
mov
mov
rcll
cwtl
rcll
ret
leave
mov
mov
loop
dec
xchg
fcompl
icebp
xor
movsb
and
mov
inc
arpl
mov
sbb
cmp
jl
pop
scas
ficoml
or
jns
test
into
movb
movsb
or
test
loopne
cmp
jnp
arpl
cld
and
xchg
or
adc
sbb
jbe
push
sub
mov
lahf
fisubrs
sti
jl
cmp
aas
ret
and
lods
test
popf
mov
mov
push
jg
mov
push
inc
lahf
ret
pop
sahf
cli
jne
in
xacquire
adc
popf
ss
mov
out
std
xchg
push
aad
pop
add
sbb
test
push
cmp
xchg
push
lret
js
cmp
xlat
clc
mov
repnz
jo
dec
push
into
mov
add
inc
push
dec
jb
sbb
pop
pop
lea
xor
mov
inc
sub
cld
ds
cmpsb
das
cmpl
fiadds
scas
ds
in
jle
movsb
mov
adc
enter
inc
or
push
mov
push
out
xchg
xor
lret
mull
sbbl
mov
stos
lahf
js
inc
aad
jl
adc
xchg
mov
pushf
push
or
filds
mov
mov
stc
in
das
out
jge
push
or
hlt
loope
nop
out
repz
cmp
popf
cmp
scas
mov
xchg
cmp
jmp
sub
cwtl
push
pop
dec
cmc
xchg
aad
inc
stos
leave
mov
xor
jmp
lea
lret
add
dec
mov
loopne
mov
daa
sub
shlb
sbb
stos
cwtl
int3
js
and
mov
ret
xchg
jl
or
dec
sahf
sub
sbb
cld
cmpsl
sub
mov
xchg
stc
lret
bound
lcall
das
loope
fnstsw
test
xor
pop
or
push
sub
lock
les
sub
rcll
cmp
mov
idiv
xchg
cmp
push
xchg
lock
push
xchg
sub
pop
mov
out
mov
sub
sub
mov
push
mov
mov
jp
mov
add
je
imul
lret
xchg
push
bound
test
jg
mov
xchg
push
movsl
js
adc
imul
jns
repz
popa
lcallw
dec
in
xchg
cmp
cmp
mov
aaa
andl
and
push
loopne
mov
lahf
fsubp
mov
jnp
dec
call
and
cmp
repz
outsl
mov
clc
shrb
xchg
jbe
add
sbb
push
xchg
dec
adc
pushf
in
call
orb
dec
pop
shll
mov
bound
sub
lahf
mov
xchg
ss
xor
in
leave
dec
sahf
mov
les
xlat
inc
iret
mov
lods
xchg
in
loop
or
lret
movsb
out
jns
dec
ret
ss
add
std
pop
mov
popf
cmp
jns
jae
cmp
out
xor
je
ja
lds
mov
ficoml
mov
sub
pop
cmc
stos
add
aad
ds
pminsw
sbb
cmp
mov
sbb
dec
imulb
dec
add
ret
sbb
sbb
inc
test
push
push
pop
jns
mov
outsl
mov
mov
lods
pop
pushl
adc
adc
adc
sbb
pop
in
stos
in
mov
cmp
or
pop
adc
mov
sub
sbb
mov
orb
add
iret
xchg
pusha
aad
jo
sbb
aaa
lods
mov
movsl
orb
jge
scas
mov
sbb
shll
aas
xor
pusha
add
test
mov
pop
xlat
inc
sub
pop
inc
ss
jns
in
setns
push
imul
adc
mov
outsb
cmpsb
xlat
jg
xchg
je
pop
mov
sbb
and
adc
enter
cltd
js
xlat
pushf
add
jl
xor
imul
add
out
mov
shlb
jge
push
icebp
add
testl
shll
dec
fdivrp
mov
sti
icebp
rolb
fnstcw
sub
xchg
out
xchg
mull
mov
aam
bound
push
leave
fwait
sbb
sbb
add
push
mov
dec
and
push
cmp
into
pop
adc
adc
ret
mov
mov
inc
loopne
dec
sub
in
xchg
dec
mov
incb
cltd
or
sub
mov
cmc
or
pop
mov
movb
mov
mov
scas
arpl
jge
movsb
add
mov
iret
loope
mov
test
sbb
pushf
loopne
adc
pop
jmp
aas
xor
jo
push
pop
cli
sbb
pop
or
fs
frstor
aam
aad
inc
sub
push
scas
daa
inc
scas
loop
addr16
and
cmp
inc
inc
pop
sarb
cltd
int3
fnsave
mov
les
jp
fwait
add
inc
adc
push
lret
add
arpl
mov
adc
stc
sub
pusha
dec
cwtl
xorl
xchg
mov
ljmp
cmpl
xchg
jne
push
les
repnz
nop
lret
or
fwait
mov
jg
mov
inc
mov
cld
xchg
leave
mov
adc
mov
insl
test
sbb
push
scas
cmpsl
mov
popf
int3
jbe
icebp
das
mov
sub
mov
loop
out
or
cltd
loop
stos
pop
xchg
imul
push
push
test
mov
sahf
pop
andb
mov
adc
cmc
fs
stc
and
mov
sub
or
and
adc
aam
int
loop
outsb
inc
lods
push
pop
or
sti
mov
ret
adc
or
xor
xor
cmp
adc
jnp
jnp
fsubrp
lock
lea
pop
adc
adc
mov
mov
imul
icebp
pusha
or
push
scas
push
lods
xor
inc
clc
clc
popf
push
bound
mov
mov
add
sub
mov
sar
sti
push
cltd
xlat
inc
sbb
mov
lret
arpl
or
loopne
imul
add
sub
jo
lcall
and
sub
add
add
xchg
push
cs
sub
ljmp
adc
xchg
jp
in
rcrb
dec
mov
repnz
test
lea
cmp
movsl
mov
aas
fwait
xchg
enter
jl
push
xchg
or
dec
mov
push
test
daa
dec
cmp
pop
insl
or
cmp
or
fnstenv
adc
mov
test
adc
pop
dec
dec
mov
imul
sbb
mov
dec
movsl
xor
aam
push
inc
jl
jecxz
es
out
push
fdivs
adc
mov
or
mov
xchg
lock
enter
mov
shll
into
enter
jle
ret
test
push
mov
jge
loope
xor
and
pushf
in
arpl
std
adc
leave
ja
lea
sub
subb
fs
xchg
nop
xor
pop
ret
fisubl
lahf
pop
cmp
pop
push
enter
cmp
scas
test
mov
push
jge
inc
cmp
mov
push
inc
cmp
cmpsl
jl
fwait
les
imul
mov
push
jns
or
dec
jle
pushf
sbb
rorb
loopne
add
push
sub
xor
jmp
xor
pop
lock
jge
inc
xor
faddl
pusha
mov
andl
mov
sub
fs
push
stos
popf
inc
push
into
inc
mov
cmpsb
stos
mov
dec
dec
mov
sub
push
mov
lea
cltd
inc
xchg
test
push
dec
mov
stc
lea
adc
loop
or
sbb
adc
pop
add
pop
shll
fldl
stc
dec
insl
cmpb
push
movsb
ljmp
rcll
movsl
aas
sub
or
cmp
repnz
stos
dec
aad
lret
addr16
pop
enter
and
mov
mov
ret
ljmp
es
mov
bound
jge
loopne
subb
mov
xchg
pop
xor
aad
inc
inc
aam
pop
imul
dec
sbb
mov
pusha
loopne
fsubrs
xchg
jge
mov
jecxz
loope
movsl
inc
js
pop
cs
xchg
pop
dec
sahf
sbb
or
call
jae
je
or
aas
mov
xchg
divl
cwtl
cmp
rorl
xchg
adc
jmp
mov
pusha
imul
bound
cmp
mull
lret
push
ret
inc
add
in
mov
scas
push
and
pop
mov
jae
mov
ret
in
inc
or
shr
gs
sti
repz
fiadds
js
push
xor
bts
jbe
aas
outsb
rcrl
enter
adc
out
cli
add
or
stos
pop
mov
mov
add
cwtl
inc
or
out
imul
cwtl
cmpsb
loop
mov
popf
fiaddl
sub
push
xchg
or
and
out
imul
xchg
jp
cmc
or
mov
pop
test
cmp
daa
test
mov
leave
push
mov
mov
rcl
jl
daa
cmp
inc
sub
xchg
fldcw
fistps
pop
pop
ja
fs
jo
cmpsl
into
in
fneni(8087
insb
lret
mov
ljmp
dec
jno
test
sahf
cs
mov
pop
mov
test
mov
int3
fst
xchg
and
xchg
ss
loopne
aad
ficoms
movsb
out
push
push
scas
pop
scas
push
out
stos
mov
sti
arpl
xor
cmp
aad
pop
fiadds
adc
outsb
adc
fistpl
call
cmp
hlt
mov
fldcw
fwait
pusha
add
sub
jnp
repnz
add
sbb
psrlw
sub
test
cmp
fiadds
mov
ja
push
cs
pop
shlb
mov
adc
loopne
loopne
stos
ret
enter
mov
in
cmp
dec
xor
out
fildl
es
sbb
inc
fwait
stos
xor
fcomp
cs
dec
push
pop
sub
mov
stos
cmp
hlt
loop
in
cmp
insb
add
jle
xlat
xor
fmul
mov
dec
mov
jae
dec
adcb
mov
add
add
xchg
sbb
icebp
in
fmull
inc
gs
sti
sbb
dec
lds
pop
pop
adc
js
xlat
pop
jg
notb
mov
ds
xor
in
cmpsb
insl
xchg
mov
adc
and
popf
leave
add
jo
cmp
cwtl
nop
orl
xor
in
add
add
les
xchg
fnstsw
pop
rclb
xor
and
test
sbb
bnd
dec
fnsave
out
sbb
sbbb
movsb
mov
pop
mov
mov
and
fsts
jle
sub
mov
sbb
push
fmul
in
aad
jg
les
lahf
data16
fsubp
or
xor
xchg
fimuls
loope
add
cwtl
lahf
mov
repnz
mov
rorb
adc
and
popa
or
add
xor
test
xchg
aas
pop
cwtl
test
inc
testl
dec
cmpsl
adc
scas
sub
push
fldenv
sbb
fbld
pop
inc
pop
mov
cwtl
sbb
aaa
lods
and
jne
pop
mov
iret
xchg
jmp
cltd
pop
loope
jg
aas
jle
pop
mov
out
adc
shll
into
movsb
bound
aas
adc
sbb
push
sbb
and
push
sahf
mov
jnp
jne
fisubrl
jecxz
out
fsubrl
jo
mov
mov
mov
cmp
mov
mov
aam
test
cmpsb
sbb
lods
push
dec
cmpsl
insl
rcrl
dec
stos
clc
or
or
aam
stos
pop
loope
into
cmp
imul
popf
into
in
add
loope
cmp
mov
jmp
xor
add
adc
mov
mov
push
repnz
out
and
jg
jle
xor
jne
dec
or
sbb
jle
inc
dec
ljmp
jge
sbb
fs
xchg
push
jo
stos
testl
test
test
adc
fistl
pop
xor
push
and
jecxz
pop
push
inc
lods
inc
jne
popa
jne
mov
mov
mov
hlt
ja
or
out
shlb
scas
adc
push
and
cmc
jle
and
popf
sbb
jmp
mov
lea
test
popa
add
loope
shlb
dec
aas
sbb
jns
jns
jae
and
movb
add
lock
mov
push
add
mov
loope
xchg
int
lods
mov
sarb
adc
mov
ss
push
das
mov
ljmp
xor
call
pop
addr16
dec
fwait
add
adc
dec
xlat
jmp
sahf
imulb
xor
jnp
rcr
fld
jb
mov
jle
icebp
icebp
int3
sbb
jl
and
cli
dec
xor
dec
ret
xor
out
push
in
inc
xor
cmp
sub
mov
mov
sbb
es
mov
rcrl
movsl
push
or
bound
in
or
sub
mov
testb
cmp
adc
jne
dec
roll
cmp
ficoml
in
mov
mov
adc
ja
push
sub
push
cwtl
mov
mov
js
mov
imul
xchg
pop
lods
jae
add
sbb
cmp
xchg
sub
inc
addr16
stos
mov
fs
xor
inc
push
sbb
xchg
jmp
pop
out
xor
and
inc
repz
sti
mov
adc
and
inc
and
in
jo
bound
or
scas
jnp
test
fstl
fnsave
mov
es
xchg
sbb
out
std
in
dec
notl
andl
cmc
repnz
add
cmpsb
rcrb
adc
xchg
movsl
mov
in
hlt
jmp
push
mov
and
push
lea
push
adc
sub
rcl
mov
icebp
in
and
cmp
mov
pop
mov
mov
sbb
stc
or
and
out
lock
cmp
sub
subb
aaa
lret
fwait
adc
add
and
fxch
sub
negl
clc
mov
fnstsw
mov
mov
jo
lea
pushl
xlat
lcall
add
pop
rcr
adc
or
cli
ds
cmp
test
xlat
lds
mov
xor
adc
xor
pop
xor
dec
xor
mov
sbb
shrl
jg
dec
xchg
andb
ja
inc
add
stc
fsubrs
and
lret
mov
sbb
subl
imul
lock
das
leave
popa
mov
jp
loope
mov
mov
addr16
outsl
push
dec
xchg
or
push
pop
scas
dec
jge
sub
sahf
cs
test
mov
sub
repnz
xchg
enter
jge
sbb
mov
data16
mov
std
adc
inc
dec
ljmp
xor
mov
inc
or
aad
mov
fwait
js
or
into
sti
mov
std
sub
jns
and
call
cmp
mov
int
leave
movsb
scas
push
shlb
lcall
fbld
mov
xor
outsl
shlb
out
inc
mov
jg
out
in
and
adc
xchg
por
mov
pop
pop
sub
test
movsl
icebp
sub
push
in
add
adc
push
inc
cmp
loop
out
cmp
test
inc
xchg
inc
loopne
out
inc
cmp
mov
out
fnstcw
mov
sbb
loope
das
rcll
ljmp
pushf
adc
add
lock
scas
mov
jg
pusha
cmpsl
pop
push
popa
fstps
cmp
cmp
mov
idivl
jbe
loope
lcall
pop
and
aaa
pop
insb
hlt
inc
popf
xlat
dec
mov
push
inc
mov
repz
jg
dec
mov
jle
popa
rcll
cwtl
cltd
mov
pop
enter
and
out
jb
jmp
jb
mov
add
push
add
push
dec
push
pop
inc
ficoml
inc
mov
ret
sbb
pop
loopne
popf
roll
mov
xor
sub
xchg
fisttpll
fmulp
lods
jmp
pop
xchg
shr
nop
rcr
and
in
mov
ds
repnz
ret
inc
dec
lea
fnstenv
inc
loop
xor
xorl
adc
lock
addr16
bound
and
inc
cmp
les
dec
arpl
es
incl
push
mov
sbb
aaa
mov
jp
jno
movsl
movb
inc
orl
mov
pop
xor
fwait
loop
clc
cmp
dec
icebp
bswap
les
dec
add
and
iret
push
or
pop
jmp
fdivr
outsb
out
pop
es
cmp
mulb
rorl
inc
xchg
inc
test
and
ficoml
das
lret
bound
ja
repz
push
jl
lds
arpl
and
jnp
movsb
test
jo
push
adc
xor
pop
xlat
dec
push
jmp
aad
das
ret
sti
xchg
xchg
sub
sbb
pop
shll
ret
fdivs
pop
push
push
and
mov
jmp
jo
push
jnp
fcom
into
add
stc
mov
flds
ret
das
jle
clc
inc
call
cmpsl
icebp
iret
inc
jecxz
loope
out
push
xchg
lea
jg
add
dec
xchg
mov
mov
incl
fidivrs
adc
lods
cmp
or
xor
mov
push
xchg
mov
push
cmc
stos
mov
fildl
das
xchg
and
and
neg
test
xchg
or
xchg
aas
jbe
jmp
push
pop
jno
ja
fcmovu
mov
adc
lahf
shrb
or
sub
lods
cmp
cltd
mov
jl
and
mov
sub
sbb
push
mov
jo
stos
or
dec
xor
lret
sub
in
cmp
lods
push
push
loopne
movsl
or
jmp
mov
sbb
inc
push
fldl
dec
movsl
xchg
rol
cld
sub
lods
push
inc
out
xchg
add
decl
xor
sbb
faddl
dec
mov
lock
add
mov
jmp
fidivl
sbb
test
cmpsl
mov
inc
aam
scas
lds
inc
shl
add
into
fscale
sub
pop
outsl
mov
notb
filds
jo
stos
cmpsl
sub
adcl
cli
xchg
pop
mov
sbb
mov
adc
frstor
cmp
xorl
scas
fiadds
es
xor
xor
loop
sub
pop
pop
jp
or
fnstcw
adc
cmp
mov
stos
xchg
jne
dec
cltd
pop
and
and
push
jp
dec
idivb
push
mov
xchg
inc
lahf
lahf
es
or
sub
pusha
add
jge
mov
stos
test
or
sub
cmc
xor
cmc
jb
lea
or
sbb
mov
xor
push
cmp
clc
bound
xor
mov
cli
clc
pop
push
sbb
xor
pop
sbb
sarb
add
popf
pop
or
xlat
adc
das
mov
ds
fnstcw
iret
mov
jle
mov
out
push
stos
jb
push
je
lods
inc
mov
pop
push
xlat
mov
or
jl
cmp
push
shr
cld
nop
sahf
int
or
insl
and
xchg
outsb
fmul
push
cltd
jge
lcall
mov
in
xor
mov
into
cmp
inc
popa
sti
xchg
xor
mov
ljmp
ljmp
pop
rorl
push
lcall
cmp
cmpl
fs
pusha
or
lret
shrl
jl
jmp
mov
mov
aaa
push
xchg
pop
inc
adc
loopne
xchg
xor
jecxz
jecxz
or
das
nop
adc
pop
and
mov
sbb
mov
loopne
fldl
stos
bound
cmp
dec
sub
outsb
cmp
loope
imul
bound
adc
xor
outsb
mov
lcall
xchg
jnp
jmp
cmpsl
pushf
xor
jne
or
into
data16
out
sbb
cmp
outsb
cltd
xchg
xchg
mov
xor
ss
cmp
daa
out
testl
mov
jo
sbb
pop
mov
mov
or
jo
jl
das
cltd
popf
sub
jle
mov
ja
and
cld
das
std
pop
mov
mov
jbe
push
cld
das
aaa
xlat
jge
movsl
sti
sub
sub
jbe
mov
dec
popf
scas
test
pushf
aaa
jo
jge
mov
mov
and
xchg
fsubrl
cmpsb
dec
nop
inc
sbb
test
cmp
jno
pop
shr
xchg
aam
dec
mov
lods
push
jge
and
roll
inc
outsb
push
jbe
mov
addr16
mov
outsl
sub
lods
pop
mov
ret
cmpl
stc
movsb
inc
push
int
pushf
push
adc
mov
into
cmp
push
mov
nop
push
lea
iret
adc
js
sbb
stos
mov
mov
mov
into
jmp
je
mov
jle
xor
aad
scas
dec
fdivs
es
fmulp
outsl
push
dec
cmp
dec
mov
mov
cmp
sbb
inc
jle
in
es
out
dec
sbb
inc
imul
push
scas
cli
rolb
stc
jae
sub
adcb
dec
and
xchg
jp
call
jmp
lock
test
aaa
mov
jl
out
pop
pop
fdivr
dec
sbb
daa
subl
pop
popa
pop
ds
cmpsb
mov
test
sub
push
lds
int
scas
mov
imul
movsl
and
into
fisubrs
pop
adc
dec
pop
arpl
stos
inc
push
test
fst
bound
adc
inc
cmpsb
sahf
sti
sbbb
data16
incb
adc
or
xor
lea
int3
fs
or
addr16
test
and
test
loope
sbb
scas
pop
fbstp
andb
jge
ret
mov
sub
shl
xor
mov
dec
push
std
jo
xor
xchg
adc
jecxz
gs
and
jmp
mov
insl
out
cmpsl
sub
and
sub
xor
pop
or
stos
mov
in
ret
pop
adc
pop
dec
js
cmp
stos
adc
outsl
mov
jne
pop
out
sbb
fdivr
pop
rcll
push
adc
push
push
dec
test
movsl
add
pusha
lahf
outsl
xor
ja
fcomps
adc
pusha
sbb
sub
popf
orb
mov
cli
clc
xlat
das
loope
js
andnps
fsubl
jb
pop
pusha
or
enter
pop
repz
sbb
inc
loope
or
repnz
jns
mov
and
sbb
dec
rclb
test
xor
mov
xchg
fadds
ja
jns
pop
mov
pop
jns
test
xlat
ja
cwtl
push
or
or
loop
xor
aaa
lahf
rol
popf
inc
mov
push
fwait
mov
mov
cmp
mov
ss
mov
jmp
sbb
dec
fisttps
and
adc
fcompp
add
dec
inc
outsl
in
xor
xor
and
fimuls
mov
cmp
xlat
cltd
sbb
jmp
mov
mov
jb
std
push
sub
cmpsl
dec
mov
shrl
scas
fs
daa
push
test
es
jnp
popa
mov
loope
shll
pusha
xorb
mov
cmpsb
outsl
jno
imul
push
das
aaa
nop
adc
pop
mov
ds
sbb
jno
sahf
mov
xor
cmp
in
das
inc
push
mov
adc
addr16
pushf
mov
std
jns
lock
out
cmp
pop
roll
lods
ret
push
fdivp
jb
jl
dec
jmp
cmp
test
cmpsl
sbb
cmp
rorb
test
sub
mov
push
cmp
jmp
push
xchg
hlt
out
das
cmpsb
jmp
xor
cmp
pusha
sub
sub
cmpb
insl
cmp
out
add
fucomi
ret
fimull
push
sbb
push
xlat
fdivrl
nop
jnp
xadd
mov
cmp
jge
mov
addb
mov
xor
xchg
push
adc
shll
imul
inc
pop
jns
sbb
lds
sarl
adc
add
mov
dec
jge
mov
cmc
divb
push
mov
daa
add
dec
aas
sbb
fsubs
in
xchg
fisttps
jp
insb
and
pop
adc
add
pushl
and
pop
addb
fisttps
xlat
adc
xor
sub
push
xchg
cmp
mov
pop
jns
jne
jno
cmpsl
xor
dec
inc
push
xor
out
je
push
mov
mov
je
cwtl
ret
jecxz
mov
xchg
notl
xor
lret
clc
lret
xchg
gs
pop
cmp
fnstsw
push
ds
jmp
pop
mov
aas
mov
outsb
imulb
inc
movl
inc
js
sub
movsl
and
push
into
fwait
mov
xchg
cltd
pop
cmp
rorb
incb
push
xor
pop
clc
jo
stc
ficompl
and
add
cmc
mov
outsl
out
into
mov
mov
jge
pop
cld
fadds
mov
repnz
add
pop
lods
loopne
int
lretw
ja
jnp
into
jecxz
fistps
stos
mov
cmp
push
sbb
nop
into
xchg
add
inc
mov
xchg
sti
sbb
pop
inc
add
scas
jbe
jecxz
sysret
or
sub
imul
cmp
cmp
push
sub
negb
mov
xchg
repnz
testb
mov
pop
icebp
mov
lock
scas
lods
or
mov
test
pusha
loopne
shll
fdivs
gs
data16
add
mov
adc
shlb
popa
insl
imull
and
cmp
repnz
adc
jae
jb
add
call
mov
jl
imul
sub
andl
mov
jg
cmp
fidivs
shrb
aad
lret
pushf
outsl
mov
mov
xor
mov
enter
fst
scas
jnp
cwtl
adc
cmp
jp
mov
pop
fdivrs
sub
or
inc
jno
mov
cld
roll
cmp
push
xchg
cld
mov
mov
xor
mov
ja
pop
sarb
xchg
mov
ljmp
jns
xor
pop
iret
push
or
xchg
sbbb
jbe
daa
out
dec
ret
jo
cmp
aad
popa
in
dec
push
cmpsb
outsb
aaa
das
xor
pop
loopne
decl
and
cmp
add
in
pop
mov
and
jl
mov
daa
dec
adc
or
test
add
jno
adc
subps
jge
scas
loope
dec
mov
sub
aad
jp
inc
movsl
xor
mov
outsl
outsb
mov
cmp
jecxz
push
stc
push
jge
cltd
outsb
insb
adcl
cmp
and
aaa
jge
pop
jb
add
fcmovnb
sub
adc
jo
or
les
jmp
xchg
inc
xchg
mov
mov
fildl
inc
adcb
btc
dec
jno
sbb
call
jbe,pn
jae
xor
jae
push
aaa
pop
push
sub
jns
mov
xchg
mov
lcall
add
mov
scas
ficompl
or
dec
mov
xor
cmpsl
dec
push
in
inc
sbb
testb
push
fbstp
fwait
sbb
dec
pop
lods
divb
mov
sarl
mov
lret
aaa
lea
pop
icebp
jg
jo
inc
and
mov
xchg
push
xchg
mov
lahf
jno
popl
jp
shrb
dec
inc
aaa
dec
pop
sub
add
or
adc
fiaddl
push
rcll
test
push
mov
mov
dec
js
movsb
adc
cmp
sbb
ret
jbe
or
shll
addr16
cltd
inc
mov
iret
mov
adc
jl
jo
fisttpll
adc
movsb
jle
inc
and
fstp
and
leave
mov
inc
movsl
iret
cmp
cmp
xor
pop
push
xchg
jmp
popl
orb
add
add
and
pop
orl
in
add
sbb
xlat
pusha
lea
inc
test
loopne
rolb
movsl
jne
inc
pusha
iret
sahf
dec
shlb
sub
movsl
xor
stos
dec
mov
sarl
stc
pop
popa
inc
xchg
adc
test
scas
dec
bnd
sbb
mov
fldcw
mov
in
jmp
pushf
popa
jo
push
in
xchg
fsubl
mov
inc
pusha
jbe
js
pop
sub
adcl
mulb
hlt
stos
leave
push
or
pop
lret
xchg
jp
cmpsb
cwtl
push
out
xor
cli
jg
push
or
sub
sub
cmpsb
or
adc
push
inc
repz
sbb
jp
bound
mov
jnp
ss
das
js
jb
fadds
repnz
mov
inc
and
mov
imul
fcom
sti
addr16
or
sub
stos
xchg
sarb
pusha
inc
cmp
jne
imul
lods
aas
fstpl
addl
sub
hlt
and
enter
cmp
pop
out
movsb
daa
adcb
push
ret
sub
mov
sub
xchg
imul
mov
add
in
mov
stos
adc
les
ficomps
mov
cmp
sub
insb
jne
add
ja
jns
out
jb
call
notb
cmp
pop
bound
push
push
repnz
es
and
scas
pop
outsb
movsb
mov
out
cmp
out
and
jecxz
cmp
shrb
shlb
and
or
lea
mov
jns
and
leave
loopne
xchg
fsubrl
jns
sbb
into
xor
insl
push
ss
inc
jmp
xchg
cmpsb
aaa
push
and
xor
xchg
and
dec
in
fprem
rclb
and
inc
ret
and
inc
jle
mov
adc
push
xchg
xchg
stos
repnz
sbb
mov
jnp
mov
pop
aaa
or
xchg
mov
loop
loope
nop
push
into
lret
ret
adc
inc
sub
mov
mov
fcomp
scas
cmc
lahf
inc
adc
call
sbb
int
adc
add
nop
mov
aas
cmc
pop
ljmp
enter
ss
lods
stc
test
rcr
ja
jbe
test
mov
dec
aaa
fdiv
cmpsl
jbe
repnz
repnz
scas
add
shlb
repnz
rclb
mov
jp
movsl
dec
pop
dec
cli
test
adc
shl
jb
cwtl
rcrl
mov
je
in
push
and
fnstsw
xor
inc
aam
push
push
push
into
std
dec
aad
cmc
dec
loope
fstl
add
cs
push
cmpsl
in
inc
xor
insl
cli
xlat
in
insl
idiv
push
fyl2x
inc
mov
ja
add
dec
imul
xchg
xchg
ret
sahf
nop
sub
mov
sub
int
roll
ds
fpatan
ss
xchg
jecxz
int3
add
sub
repz
mov
xor
pop
push
rorl
ljmp
push
dec
ja
insb
fbstp
add
sti
push
inc
cmc
xchg
mov
jne
mov
lea
sub
in
or
xor
mov
mov
adc
stc
mov
inc
sbb
mov
movsl
mov
sti
fdivrs
and
cld
movl
cmp
xchg
enter
enter
xor
scas
test
enter
xchg
push
sub
fmull
aaa
lock
push
filds
jecxz
pop
add
stos
lods
popf
inc
int3
movsb
and
ljmp
aas
push
movsl
bound
mov
pusha
hlt
sbb
xchg
add
lods
dec
inc
cs
lahf
popf
inc
fsts
add
mov
shlb
sbb
fsubrl
into
loop
mov
jg
xchg
pop
fcomi
scas
lods
outsl
test
push
dec
or
lods
movsb
cmp
xchg
stc
mov
cmp
int
inc
rolb
fbld
adc
push
outsl
and
jnp
pop
mov
iret
inc
js
rclb
pushf
sub
jb
pop
int
jl
cmp
mov
leave
mov
jmp
sub
fnsave
call
sbb
sub
mov
lods
or
aam
xor
dec
xchg
not
xchg
mov
pop
movsl
lret
jns
jge
inc
inc
cmp
jns
and
lods
mov
jne
pop
xchg
dec
xor
ret
outsl
lods
and
sbb
pop
mov
clc
les
mov
fcmovb
cmpsb
aam
std
and
popa
shll
push
xchg
dec
pop
mov
es
out
push
sub
fstl
mov
mov
pop
add
daa
add
stos
xchg
shll
sbb
fsqrt
sbb
imul
pop
mov
je
insb
mov
and
rclb
adc
xchg
jne
addr16
dec
mov
and
out
aas
push
and
mov
inc
repnz
jns
scas
sub
insb
inc
lret
cmp
lock
ss
testb
mov
stos
call
fisttpl
pop
test
and
dec
push
xor
out
adc
inc
enter
ret
into
push
cwtl
cmpsb
mov
mov
xlat
loopne
xor
frstor
mov
lds
mov
mov
jns
or
scas
js
in
mov
lea
xchg
bound
xor
mov
sarb
sbb
push
cmp
inc
sbb
mov
shlb
or
inc
popa
add
inc
xorb
loopne
jae
dec
xchg
es
mov
or
push
lcall
pushf
aaa
push
pusha
pop
push
mov
push
xchg
or
lcall
cmp
mov
mov
popa
call
loope
push
jecxz
mov
adc
mov
jae
xor
rclb
pusha
popf
fcomi
inc
loopne
lcall
dec
pop
pusha
ljmp
fstpl
sbb
adc
or
sti
out
js
ficompl
mov
testl
movb
sahf
xchg
cli
mov
inc
inc
pop
mov
sub
js
loope
ret
pop
jl
mov
xchg
hlt
push
cld
inc
and
lods
arpl
add
push
out
push
pop
or
test
insb
mov
arpl
mov
and
or
jge
or
lahf
fcoml
shll
dec
mov
push
xlat
icebp
int
imul
out
movsl
jno
pop
std
xor
movsl
adc
mov
inc
inc
sahf
movsb
in
mov
jbe
jbe
aad
insl
cmc
jl
fnsave
mov
and
push
mov
sahf
and
test
push
lods
adc
mov
dec
outsb
xorb
lcall
stos
cs
xchg
pusha
lea
cmp
outsb
hlt
add
sbb
xchg
mov
test
clc
adc
popl
add
in
sbb
jo
mov
adc
pusha
call
xlat
sbb
das
clc
lods
out
in
outsb
pop
cmp
add
imul
imul
jbe
jo
xor
mov
imul
hlt
mov
hlt
and
push
fisubl
and
add
mov
and
aaa
or
fsubl
mov
sub
dec
lret
xchg
in
adc
int3
jae
xchg
mov
inc
rolb
aad
and
dec
inc
aam
mov
fstl
stos
fldenv
addr16
pop
ror
xor
push
mov
push
out
pop
xor
mov
dec
push
mov
scas
hlt
stc
mov
and
arpl
pop
mov
imull
andl
sub
neg
and
int3
push
je
adc
pop
cmp
add
imul
dec
jp
sub
mov
cld
dec
ficomps
xor
lcall
jb
cmp
push
out
out
dec
add
mov
xchg
dec
cmp
xchg
dec
jg
gs
push
xchg
push
xor
leave
iret
aam
mov
jae
outsb
jmp
jo
or
pop
xchg
xchg
add
cmp
int3
inc
outsl
mov
xorb
aad
ds
jns
orb
enter
inc
xor
mov
std
test
add
mov
in
aas
mov
mov
xchg
stos
orl
lods
dec
inc
mov
movsl
and
add
lods
std
adc
inc
and
jmp
cmpl
or
inc
cwtl
xchg
dec
cmp
arpl
subb
cld
into
out
dec
enter
sbb
cltd
int
inc
divb
mov
test
jae
lret
mov
mov
add
in
adc
sahf
jno
lods
or
xchg
jns
mov
push
ja
pop
or
mov
cltd
mov
sub
inc
fwait
insb
ljmp
push
jg
filds
daa
fisubrs
add
popw
sbb
pusha
cmpsb
inc
ret
mov
fidivrl
jp
sub
cmp
cmp
jp
xor
mov
dec
pop
xchg
mov
xlat
call
ret
add
iret
sbb
ja
movsb
iret
rcll
or
imulb
inc
imul
add
in
repnz
ja
dec
aaa
lea
mov
mov
push
xor
js
xor
dec
sarb
lods
sub
imul
xchg
and
mov
adc
mov
scas
icebp
inc
or
repz
cmpsl
pop
ret
arpl
sub
mov
and
test
cs
jmp
xor
mov
inc
add
nop
mov
sub
loopne
or
cmp
mov
mov
adc
in
add
pop
clc
sbb
inc
loope
sbb
cmp
mulb
adc
int3
pusha
or
nop
jmp
cmp
sbb
addr16
inc
xchg
cmpb
test
insb
arpl
je
xchg
sarb
push
movsl
loopne
movsl
fwait
pop
fnstcw
stos
jnp
das
pushl
call
push
jbe
dec
jge
inc
das
or
pushf
test
cmp
pop
call
mov
xor
fprem1
into
test
jo
cmp
das
leave
dec
mov
movsb
clc
lock
loopne
pushf
inc
mov
test
push
out
repnz
xlat
lret
fldcw
adc
jecxz
xchg
pop
jns
test
les
sub
lret
jbe
out
dec
xchg
mov
mov
or
repnz
xchg
mov
sub
repz
lea
or
adc
fsubr
jge
cmp
push
sarb
movsb
out
setns
cmp
in
mov
gs
ds
adc
mov
fidivl
scas
push
cmp
mov
shld
shrl
leave
in
xchg
psraw
hlt
aam
mov
in
in
pusha
cmp
fst
pop
lahf
lahf
and
lret
push
aam
je
mov
arpl
aaa
mov
sbb
jl
and
rcrb
cmp
sbb
cmpsb
out
mov
das
fldz
pop
mov
add
cs
loope
adc
sbb
rorl
mov
inc
ret
push
fidivrl
iret
sbb
jg
mov
mov
pop
stos
sbb
movsl
in
movsb
outsl
mov
sbb
add
sbb
pop
xchg
add
int3
jno
pop
pop
loopne
aad
cmp
jp
sbb
cwtl
xchg
je
movl
push
vunpckhps
int
cld
incb
inc
pop
push
cltd
jg
cmc
je
mov
jge
repz
sub
stc
rclb
cmp
adc
jmp
movsb
cmp
insl
lds
std
mov
xor
cmp
cmp
jbe
dec
aad
mov
mov
inc
addb
sub
shlb
push
mov
ror
rolb
mov
lret
rcl
xchg
xchg
jp
mov
xlat
idiv
sub
or
neg
inc
jnp
test
or
or
jl
sbb
out
pop
mov
gs
repz
sub
jmp
gs
sbb
push
mov
in
rolb
sahf
sub
pop
dec
add
int3
ss
mov
mov
cmp
pop
cmp
aam
and
cwtl
ss
inc
aas
mov
jl
push
or
in
add
mov
stos
or
mov
stos
pop
adc
or
or
leave
adc
jb
call
cmp
xor
xchg
shl
in
xlat
in
testl
sbb
push
jo,pn
insl
xchg
out
movsb
mov
xchg
loope
les
test
pop
cmp
aas
xchg
cmp
xchg
jnp
icebp
cvtps2pi
in
out
cwtl
mov
push
pop
push
divl
mov
push
cmp
mov
into
push
paddusb
sub
insl
push
and
sbb
adc
cmpsl
or
loop
mov
dec
es
jne
mov
mov
cmp
ffree
arpl
mov
rorl
imul
mov
fisttpll
aaa
sahf
dec
aas
clc
mov
cld
sub
jo
ja
gs
imul
pop
dec
pushf
and
sbb
cli
fcoml
data16
arpl
push
sbb
adc
daa
cmc
iret
repnz
andb
pop
clc
mov
pop
fs
inc
xchg
inc
in
jmp
or
jns
xchg
daa
int3
imul
aas
inc
and
xchg
lret
pop
push
addl
out
jns
mov
rcll
xorb
iret
loop
jns
cld
aas
or
sti
movsl
fdiv
mov
cld
nop
repnz
icebp
push
or
les
loopne
clc
mov
mov
lahf
shl
adc
mov
sub
inc
add
mov
pop
std
outsb
ljmp
cli
lahf
push
push
ss
shrl
sbb
add
rclb
adc
mov
pop
jge,pn
testl
pop
dec
xor
insb
dec
mov
or
adc
enter
ss
pop
rcl
stc
or
mov
mov
mov
into
clc
adc
out
mov
xchg
or
in
add
repnz
mov
inc
xor
into
dec
fs
test
sarl
add
lret
loopne
cmp
push
in
xchg
mov
mov
fcomp
popa
lods
mov
dec
pop
and
test
js
inc
popa
lret
push
mov
sbb
sub
lahf
xor
cmpsl
aaa
jo
push
int
xlat
mov
in
inc
fisubl
cmpsl
mov
popa
pop
inc
fwait
jne
cmp
mov
cltd
incl
in
into
ret
pop
rcrl
mov
dec
outsl
pop
sbb
shlb
outsb
sub
in
xlat
es
push
cld
dec
jle
jmp
cmp
pop
popa
jl
mov
or
cmp
ss
lods
out
and
nop
push
pop
xchg
bnd
mov
pop
shrb
xchg
js
dec
inc
les
repnz
scas
js
lret
mul
mov
mov
ja
cmp
dec
adc
lret
loop
lock
cmp
or
sbb
lock
out
in
mov
mov
fiaddl
xor
mov
jno
loope
ret
inc
xor
mov
call
mov
mov
stos
push
scas
pop
xchg
hlt
movsl
aas
sbb
xchg
jg
mov
jno
push
loop
pushf
das
xchg
push
lods
repnz
arpl
ljmp
icebp
sti
fwait
mov
add
fisttps
es
xchg
or
sub
add
daa
out
leave
xchg
es
mov
jl
mov
push
pop
mov
xor
push
out
dec
pop
js
out
sbb
push
mov
mov
aam
jo
fiaddl
call
mov
jno
insb
rcll
push
repnz
cmp
xchg
out
mov
cld
adc
stos
sub
dec
lcall
mov
outsl
jns
bound
fsubr
je
pop
inc
push
mov
out
cmp
psrad
mov
inc
ss
sub
ljmp
fmulp
in
mov
add
sub
sahf
clc
xlat
xchg
mov
sbb
add
inc
push
xchg
cwtl
push
jle
push
sub
sbbb
sub
sub
subl
mov
in
outsl
pop
cmp
mov
mov
int3
and
nop
add
mov
int
inc
sahf
jno
cld
in
sbb
out
rolb
dec
mov
cwtl
add
push
daa
and
xor
cmp
xchg
xchg
jle
filds
outsl
inc
mov
cmp
mov
mov
aad
loopne
push
inc
adc
jge
sub
insl
sub
mov
dec
outsb
jne
inc
and
mov
cwtl
mov
cld
cld
addb
pushf
stc
loop
sahf
xlat
out
dec
fisttps
pop
sbb
mov
inc
inc
test
cwtl
lods
daa
xor
cmp
faddp
scas
out
jge
fucom
loop
sub
psadbw
push
push
mov
std
enter
xchg
jecxz
mov
mov
jg
mov
jmp
jmp
dec
std
mov
pushf
pop
movsl
jmp
push
test
inc
es
and
mov
xor
xor
add
subl
popf
push
cmp
add
sahf
jbe
add
jno
pusha
xor
cmpsl
fildl
pop
cmp
dec
cwtl
xchg
xchg
push
add
jmp
ds
into
es
bound
sbb
and
sbb
movsb
arpl
or
jecxz
pop
lods
cltd
ret
cs
out
and
dec
push
sbb
jp
mov
dec
shl
out
int
ds
ljmp
jle
pusha
push
lds
je
out
cmpsb
cmpsb
inc
push
ds
jl
cli
pop
sbb
jp
test
aad
adc
fnsave
push
mov
sub
xchg
sti
dec
lahf
jmp
push
or
bnd
jo
loop
movsb
ss
mov
jbe
mov
pusha
sub
ljmp
ja
mov
pop
sbb
sbb
scas
push
mov
pop
sbbl
adc
clc
mov
pushf
shlb
idiv
sub
ret
inc
jmp
sbb
xchg
push
cmp
push
leave
push
push
jbe
adc
stos
repnz
mov
clc
addr16
test
jle
adc
and
pop
ficomps
cmp
nopl
out
icebp
mov
ret
aam
push
inc
cmp
and
mov
xchg
insl
sbb
cmp
je
cmpl
jne
push
sub
or
jle
xchg
pop
lret
roll
mov
or
addl
mov
push
cmc
xor
xchg
and
mov
sti
fs
fdivrl
repz
mov
fmuls
push
mov
mov
jns
jb
popf
pop
dec
in
push
dec
add
leave
dec
jnp
push
mov
pop
mov
and
sahf
movhps
adc
inc
cmp
lea
xchg
jne
mov
sti
mov
bound
std
lds
mov
movsl
mov
inc
icebp
jne
jmp
pop
mov
scas
xchg
push
push
lock
or
mov
jp
out
pop
bound
lea
mov
add
in
jnp,pt
sub
jl
in
int3
shrd
add
pop
int
shll
imul
add
lods
cmc
inc
mov
xchg
xchg
sahf
xchg
add
sub
idivl
push
les
mov
inc
sbb
inc
icebp
hlt
jmp
ljmp
sbb
sub
jae
xlat
pop
mov
add
or
or
sbb
pop
int3
insl
pop
scas
test
fidivs
out
outsl
jne
mov
arpl
add
das
ljmp
cmp
dec
inc
jmp
adc
jbe
and
xor
jne
sub
adc
adc
jmp
popf
lods
sbb
sbb
mov
and
dec
and
mov
xor
popa
lret
fiaddl
popa
sub
cmp
jl
push
adc
mov
ror
fdivs
pop
aaa
cmp
push
mov
lds
jnp
xchg
xchg
pusha
push
inc
es
inc
pop
push
dec
xchg
fstps
jmp
lds
or
sbb
jmp
icebp
xchg
ret
push
inc
sub
pusha
test
incl
jecxz
idivb
cli
imul
mov
inc
std
push
jge
cs
cmp
sbb
jle
sub
xchg
mov
and
rcll
roll
inc
add
xor
aam
fs
mov
out
stos
lea
pop
aad
or
adc
bound
sub
notb
or
xor
xlat
sti
mov
adcb
xor
das
push
mov
in
xchg
insb
fildll
push
sub
mov
pop
outsb
out
xchg
f2xm1
jl
sub
scas
xor
push
and
fstps
loop
pop
lock
aaa
popf
push
sub
xlat
cld
mov
push
cs
std
adcb
fimull
fisttpll
lcall
mov
pop
sub
push
push
in
movsl
scas
cmp
jmp
test
ss
or
mov
inc
lcall
cmp
xor
js
inc
in
adc
mov
xchg
xor
sbb
into
add
mov
adc
call
cmp
mov
jno
popl
test
xchg
fsubs
stc
in
ljmp
cmp
push
cmp
fildll
adc
xchg
mov
ficompl
adc
dec
popa
frstor
stos
xor
mov
mov
inc
push
stos
pop
dec
and
pop
jl
call
xor
mov
call
xchg
enter
sti
push
mov
in
movsl
jnp
jno
xchg
pop
sub
call
or
xor
decl
fnstsw
mov
sub
xchg
fcmovnu
ja
mov
movsb
daa
popl
push
mov
lods
mov
pushl
mov
sahf
in
sbb
lea
icebp
xchg
shlb
ret
fsubl
bound
imul
xchg
hlt
js
adc
push
fnstsw
dec
iret
xchg
push
dec
pop
cli
add
fildl
push
or
cmp
rcrb
sti
shr
dec
enter
out
lahf
mov
xchg
cltd
sarb
inc
bound
sar
sub
adc
lods
cmp
pop
mov
test
jnp
popa
mov
dec
jnp
cli
add
adc
aad
inc
xchg
mov
movsl
mov
out
out
sbb
sbb
enter
std
into
les
push
scas
ds
add
pop
aaa
es
sub
loop
lods
sbb
ljmp
out
leave
outsl
mov
rolb
mov
cmp
cmp
test
adc
gs
lret
aam
and
divl
js
and
repnz
inc
popf
fsts
cmp
pop
xlat
sbb
push
push
adc
movsl
data16
sarb
cwtl
je
and
pop
xchg
fildl
xchg
in
adc
add
xor
pushf
adc
loopne
pop
insb
and
and
or
test
mov
cmc
jne
mov
ret
lahf
mov
mov
adc
xchg
ljmp
shlb
push
cs
leave
dec
data16
lret
pop
sub
sahf
inc
dec
shrb
mov
push
in
lods
add
mov
sbb
jmp
mov
mov
lea
pop
mov
inc
sbb
ret
in
mov
dec
pop
inc
or
dec
cmp
mov
mov
shll
pop
repnz
gs
and
scas
lds
int3
mov
jns
daa
rolb
xchg
jg
mov
sbb
idivb
outsb
mov
mov
dec
adc
arpl
pop
push
pop
sbb
in
out
sub
fwait
xchg
sbb
leave
jno
dec
xchg
cmpsl
dec
inc
mov
sbb
pop
loop
cld
cmp
mov
and
ds
pop
fistps
adc
adc
icebp
aaa
jb
jbe
push
clc
mov
adc
les
out
sub
rcrb
inc
mov
bound
dec
cmp
test
fwait
daa
nop
pop
js
scas
and
das
xor
insb
daa
lods
xchg
or
xchg
or
out
ljmp
or
aam
inc
sub
icebp
stos
pop
jl
rcl
cwtl
sbb
pop
pop
fucomip
das
jb
jle
ljmp
popf
xor
repz
push
lret
add
or
mov
test
mov
mov
scas
adc
jmp
int
dec
mov
ja
fbld
stc
in
popl
sub
rcll
out
cli
icebp
popa
rcrl
dec
dec
sbb
mov
mov
mov
test
imul
cltd
enter
jmp
or
sbb
inc
sbb
les
jb
leave
aam
jp
and
cwtl
repz
popa
mov
nop
add
frndint
mov
out
inc
arpl
dec
jae
sub
sti
jmp
sahf
out
aas
xchg
in
mov
test
adc
xor
int3
iret
icebp
out
pop
xchg
jge
sbb
push
js
adc
es
dec
call
adcl
push
push
cli
sbb
and
pop
jmp
pop
pusha
insl
jb
fdivp
jmp
lea
mov
mov
xchg
into
jnp
mov
mov
mov
xor
lcall
inc
pop
lea
dec
mov
pop
aad
fcmovnbe
adc
cmpsb
ss
ds
insb
jns
cmp
out
lret
cmp
cmp
mov
lds
lods
or
dec
sbb
aam
pop
push
mov
push
inc
repz
xor
adc
dec
loopne
ret
nop
mov
pop
outsb
sarl
bound
xchg
cmc
in
insb
mov
jmp
jnp
push
or
insl
mov
fwait
xchg
mov
adc
pop
jnp
insl
jle
xchg
in
sub
in
jle
xchg
mov
jp
mov
or
adc
dec
fildl
inc
push
push
sbb
jecxz
jbe
xor
cmp
aam
sub
mov
scas
mov
cmp
leave
inc
and
pop
jo
out
dec
mov
add
push
pop
or
into
ret
push
xchg
dec
nop
push
fucom
incb
pop
cmp
add
pushf
mov
mov
ret
fstpt
les
inc
test
push
pop
dec
adcb
sub
in
inc
pop
mov
cltd
aaa
movsl
inc
fisttpll
lods
xor
mov
mov
mov
test
movsb
xchg
push
cmp
pop
sar
xchg
cltd
sub
sub
inc
sub
mov
adc
pop
jns
pop
js
in
xor
sub
inc
add
and
pop
lods
xor
fwait
mov
add
pop
pop
ljmp
int3
sbb
shll
xchg
adc
pop
ja
fwait
push
mov
cld
jg
jnp
je
imul
scas
cmp
push
cltd
add
pop
sub
pop
sub
xchg
inc
lahf
sbb
cld
and
mul
mov
pop
xor
xchg
sbb
mov
sub
popa
mov
push
popa
xchg
imul
xchg
push
leave
and
sub
mov
cmpsl
mov
in
xlat
les
mov
mov
mov
fcmovbe
and
or
mov
add
aad
dec
or
mov
cmp
packsswb
xchg
jge
cmp
sbb
xchg
cmp
negl
insb
inc
rclb
xor
js
mov
imul
fnstsw
push
inc
in
xchg
notl
das
repz
mov
movsb
mov
xchg
dec
loopne
ret
shll
push
in
insl
pusha
add
ljmp
push
mov
xchg
loope
aas
test
lds
xchg
pop
sbb
das
inc
xchg
pop
stos
pop
push
xchg
push
sbb
lods
out
lods
xchg
jmp
and
loopne
inc
lds
mov
ljmp
pop
push
sub
sti
popa
fisubrl
sbb
dec
xor
jno
cmp
jne
mov
or
fldcw
mov
in
mov
mov
pop
mov
jg
mov
sbb
movsl
mov
dec
sbb
jbe
test
adc
int
outsl
mov
ss
fcmovu
push
sub
dec
sbbl
shrb
mov
xor
mov
es
out
idivb
jb
stos
pop
adc
icebp
or
jb
cmp
scas
mov
xchg
xor
adc
dec
jo
adc
shll
xchg
and
mov
fisttpl
push
jecxz
sbb
cmpsb
push
test
insb
xchg
pop
clc
mov
stc
cmp
adc
popa
mov
push
push
js
movsb
fmull
mov
push
into
dec
cmpsb
pop
leave
pop
jp
cld
popf
arpl
out
in
imul
aaa
pop
jecxz
add
sti
daa
js
test
mov
inc
lahf
mov
xor
outsl
mov
jb
dec
lret
sbb
mov
aaa
mov
out
pop
push
adc
nop
cmp
push
rcll
jns
outsl
ljmp
pop
or
add
rorl
sbb
pop
sub
inc
mov
adc
xor
imul
push
dec
jge
push
and
outsl
inc
ja
outsl
ljmp
cmpsb
dec
xchg
bound
pop
push
xor
cmp
mov
loop
cld
aad
push
inc
mov
mov
addr16
outsb
test
ret
xor
xor
jecxz
jmp
sub
aad
pop
or
sti
cmc
or
ja
lret
aad
mov
js
repz
ja
hlt
cmp
cwtl
and
sub
xor
sub
cmp
lods
test
xchg
sub
rcrl
pop
xchg
insb
dec
jnp
cld
cmp
stos
fmull
in
mov
cmpsb
adc
sub
push
cmp
sbb
fists
jge
test
js
psrad
or
and
inc
jae
and
xchg
loope
enter
inc
stos
and
ljmp
lods
repnz
out
aaa
jecxz
dec
call
imul
add
pop
es
ljmp
xor
sbb
or
hlt
jno
popa
rcl
test
inc
fdivrl
punpckldq
inc
xchg
sub
outsb
les
sbb
outsl
sub
outsb
dec
sub
orb
loopne
xor
outsl
test
inc
push
into
jne
cltd
mov
push
push
cld
test
ret
in
mov
or
adc
push
sub
or
jbe
fucomp
push
jp
inc
pop
fldcw
orb
in
mov
adc
lea
inc
jb
push
sub
aam
mov
push
cmp
icebp
fs
xchg
loopne
js
std
cs
fwait
jp
inc
sub
mov
fldt
xor
rclb
sub
xor
imul
mov
sbb
hlt
pushf
mov
test
pop
dec
imul
sar
or
and
ficomps
les
xor
repz
inc
mov
mov
add
lods
imull
out
fdivs
sahf
inc
xor
jns
mov
data16
add
xor
fbld
cli
and
mov
test
inc
aaa
clc
sti
es
push
xchg
loope,pt
inc
push
sub
adc
mov
popf
js
loop
mov
pop
lret
pop
lret
imul
sbb
imul
mov
mov
mov
popf
and
movsb
out
mov
outsb
adc
mov
addl
xchg
fistpll
popf
pusha
pushf
or
sbb
inc
mov
dec
leave
and
loop
and
dec
push
inc
and
sbb
fldenv
or
cmp
mov
lret
pop
inc
in
aaa
jns
ret
pop
out
mov
sub
sarl
pusha
or
fimull
xchg
sub
xor
cmp
sar
inc
pop
add
int3
add
adc
sbb
cwtl
pop
or
pop
idivl
and
push
xlat
fcmove
mov
cmp
push
or
rcrb
mov
cmc
xacquire
ljmp
loope
iret
adc
adc
pop
push
jb
sbbb
shrl
dec
aaa
ljmp
fstps
jne
sbb
fld
pusha
push
mov
aad
int
mov
inc
dec
add
mov
push
mov
std
jmp
je
fisubl
dec
lds
fimull
jo
scas
repz
dec
xchg
cmpsl
mov
cwtl
mov
adc
ret
push
je
pusha
or
call
test
mov
js
jge
and
xchg
xchg
jbe
pop
xchg
add
call
adc
sti
xchg
cmp
mov
push
push
dec
and
jb
loop
mov
sub
es
sarl
jl
jg
test
push
xchg
cltd
cmpl
mov
mov
xchg
in
scas
dec
out
mov
negl
icebp
xor
cmp
test
cs
pop
mov
shrb
mov
xchg
pusha
adc
insb
mov
outsb
ret
jl
and
mov
pop
adc
mov
pop
pop
inc
insl
pushf
and
dec
jecxz
cs
xor
jne
cs
into
cwtl
xchg
lcall
push
lea
inc
movsb
lahf
lods
out
mov
cmp
mov
adc
mov
and
fidivrl
leave
fimull
mov
shrb
jl
lcall
push
mov
hlt
inc
cmp
xchg
out
scas
subl
adc
lock
out
pop
loopne
sbb
or
loopne
cvtdq2ps
ret
jns
push
push
sub
pop
sbb
cmp
inc
in
enter
cmpsl
pop
jl
outsb
es
sbb
or
das
rorb
pusha
cmp
inc
mov
pop
popa
mov
sbb
mov
push
xchg
das
pop
aad
popa
ret
cmp
mov
jo
push
adcl
inc
sbb
in
in
data16
orl
fnstcw
mov
and
push
jle,pn
cwtl
inc
push
jnp
xor
jecxz
dec
movsl
iret
stc
xchg
fs
sub
and
cmpsl
or
pop
pop
push
mov
mov
cwtl
pop
outsb
decl
pusha
xchg
fdivl
in
lret
iret
bound
mov
mov
in
or
fcmovb
jge
shl
sbb
imulb
jne
into
addr16
sahf
shl
rcl
mov
into
retw
shll
comiss
fadds
sub
sub
imul
in
xor
xchg
mov
hlt
nop
lods
lea
push
insb
xchg
jp
shll
and
loope
fs
scas
dec
jb
das
sbb
xor
jnp
or
sbb
ljmp
movsb
mov
or
xor
aam
adc
movsl
push
jae
js
std
andl
outsb
or
pop
jae
movsb
daa
pop
mov
clc
xchg
mov
jp
fstps
cmc
cmpsl
mov
idiv
push
or
lods
dec
fcmovne
scas
xlat
push
faddl
std
popf
lret
sub
xor
into
cmp
loope
jo
xchg
imul
cwtl
cmp
in
icebp
xchg
adc
mov
push
fdivr
std
jge
test
int3
fwait
adc
push
cld
or
jmp
mov
mov
repz
mov
sub
movsb
ror
scas
cmp
fistl
cmc
cmp
sub
outsb
dec
adc
xchg
inc
loopne
jb
inc
add
sub
hlt
xlat
inc
sarb
pop
mov
cmp
fisubs
and
lods
pop
sbb
jl
xor
call
rcll
jbe
insl
xor
pusha
daa
dec
pushf
mov
in
add
mov
xor
adc
xor
inc
js
adc
mov
adc
shrb
sets
inc
or
pop
sbb
pop
push
jge
hlt
icebp
cmp
ljmp
addr16
pop
arpl
in
jmp
movsl
repz
cmp
mov
jns
lcall
cmp
jg
in
repnz
lea
sbb
ret
mov
fstl
xchg
rclb
inc
or
ljmp
xchg
and
stos
pop
fwait
mov
pop
les
aad
inc
je
jae
inc
push
xchg
rorl
jmp
andb
adc
pop
mov
mov
pop
fldcw
out
idiv
xchg
adc
js
sub
inc
pop
mov
mov
stos
cs
test
test
sbb
stc
jne
inc
cmp
adc
aad
cld
xchg
cmp
ret
sahf
and
mov
adc
sbb
mov
lds
test
jecxz
ss
outsb
sub
scas
inc
icebp
ja
jmp
mov
insb
hlt
lods
push
push
sbb
repz
xchg
lcall
outsb
xor
mov
push
jge
subl
and
lods
cmp
inc
pop
ss
bound
sbbl
scas
scas
je
cmp
sahf
stos
iret
push
ret
add
push
scas
xor
stos
mov
out
xchg
push
pop
imulb
movsb
orl
in
imul
loopne
or
add
cmp
je
mov
ja
push
outsb
or
add
std
pop
lock
sub
mov
loopne
stos
pop
mov
inc
scas
push
lcall
ljmp
enter
adc
dec
js
adc
xchg
shlb
sub
xchg
jmp
sbb
push
test
push
fwait
popf
lods
jb
and
xchg
es
push
out
mov
cmp
push
jge
ds
ficoms
or
adc
and
xor
pushf
mov
cmp
imull
outsl
add
push
dec
sub
cmp
sarl
pop
adc
je
lahf
mov
and
int3
pop
sbb
fdivl
fstpl
and
inc
repnz
xchg
rorb
stos
sti
movsl
ret
lock
pop
das
jbe
adcb
and
jp
pushf
xchg
sub
add
jecxz
pusha
or
scas
jmp
jns
and
mov
movsl
xor
inc
jp
and
fbstp
in
pop
mov
cmp
mov
test
cmc
push
loop
fsub
mov
push
inc
mov
in
mov
mov
subb
aaa
addb
ret
stc
add
gs
clc
xor
iret
inc
fnstsw
lret
pop
jp
ljmp
inc
add
test
ds
rcl
xor
inc
pop
and
xor
cmp
mov
sbb
xchg
test
jl
lock
andl
lea
out
mov
aam
loop
es
mov
pop
andl
fnsave
adc
fidivs
jmp
jae
jle
and
popa
popa
xorl
lcall
enter
inc
aam
pop
ret
lds
lods
ss
mov
insb
inc
jno
jae
movsl
call
dec
shll
inc
pop
adc
push
sbb
ja
ret
adc
aam
jno
mov
cltd
repnz
xor
cs
or
pop
repz
cmp
outsl
xlat
jbe
push
daa
mov
cltd
lea
jle
sub
sbb
cmp
pop
xlat
xchg
repz
or
aad
dec
loopne
mov
das
addr16
jnp
xlat
mov
adc
cs
push
and
fisubrl
sub
es
inc
add
shl
add
call
cli
mov
gs
mov
jno
std
push
es
push
pop
out
sahf
jl
or
sub
and
push
test
xchg
xchg
inc
xchg
cmp
stos
and
jmp
decl
arpl
xor
or
loop
and
imul
lea
inc
adc
pop
push
inc
fcoml
arpl
jp
xchg
ss
dec
std
fwait
pop
mov
or
jmp
clc
test
mov
cmp
cmpsl
out
sub
call
insl
sub
inc
in
clc
pop
insb
rcrb
sahf
xchg
subl
loope
mov
inc
add
dec
pop
lods
in
js
dec
cmpsl
pop
sub
xchg
and
and
cli
push
or
cmp
jp
xchg
lock
dec
mov
xchg
shll
mov
jns
lock
and
out
dec
pop
popf
push
sbb
in
sbb
push
insb
int
jp
lcall
aaa
jo
add
cmp
shll
xlat
push
aad
sub
xor
or
aam
inc
in
das
xchg
xchg
add
xchg
hlt
hlt
outsl
in
or
push
leave
lods
pop
lock
cmpsl
scas
frstor
insb
xor
imul
and
lcall
pushf
mov
and
test
imul
mov
neg
iret
mov
cwtl
into
fistps
or
mov
outsb
in
xchg
ret
mov
push
jle
add
sbb
pop
add
xor
subl
cmp
push
jmp
dec
imul
xlat
aad
jg
and
cmp
lcall
ss
mov
mov
cmpsl
shrb
movsl
dec
mov
jmp
icebp
call
cmp
mov
push
push
jno
addr16
movsl
bndstx
xor
shll
ret
cmpsl
jb
movl
clc
inc
pusha
lea
movsb
xor
pop
pusha
sub
aas
push
div
out
test
cmp
adc
loopne
aam
jns
sub
jno
imul
cld
rorb
xchg
jecxz
push
test
repnz
lret
adc
in
aam
sbb
imul
add
sbb
orl
or
or
mov
aad
mull
cmpsb
cld
cmp
sbb
shlb
pop
dec
outsl
add
test
in
das
lock
cmc
jne
lock
shlb
adc
gs
fwait
in
cmpsb
lahf
xchg
les
lahf
into
das
mov
xchg
lods
jb
test
jbe
inc
stos
scas
cld
mov
fbld
xor
popa
aam
enter
xor
jbe
inc
sub
mov
adc
sub
lds
fmuls
push
push
cmp
ret
mov
dec
outsl
add
scas
push
xchg
jb
xorb
cmc
jae
push
mov
mov
loop
cmc
xchg
pop
jo
mov
insl
mov
adcl
sbb
fcoml
mov
inc
in
cmpsl
pop
fidivrl
clc
add
fldcw
enter
lret
aaa
cwtl
ds
lea
lea
lahf
call
insl
or
rcll
dec
lea
lret
test
ret
cmpsl
rorl
dec
mov
xchg
out
aas
mov
aas
sbb
stos
loop
ja
insb
aad
dec
cmp
add
pop
xchg
fsubr
dec
enter
cmovne
inc
nop
aaa
sub
xor
xchg
sbb
push
in
push
sbb
lods
loop
ret
clc
lahf
mov
push
inc
insb
push
repz
fidivrs
jge
mull
gs
mov
pop
fsub
pop
or
les
inc
lret
std
add
test
pop
mov
icebp
addr16
mov
call
adc
iret
mov
in
pop
xchg
scas
push
insb
sub
and
push
stos
lods
jl
mov
sbb
arpl
ds
ljmp
inc
lods
adc
sub
fsubrs
mov
dec
mov
fildl
pop
sbb
std
push
mov
mov
ds
inc
dec
add
ljmp
xchg
jl
cld
add
fnstcw
int
sti
cmp
add
insl
test
or
mov
sub
xchg
push
sti
jl
lahf
fwait
stc
aaa
inc
pop
outsl
sbb
mov
pop
adc
jns
jl
sub
lcall
fisubl
jbe
add
out
insl
stc
and
lret
and
jg
xchg
jnp
xchg
xchg
enter
in
jne
scas
or
mov
dec
cmc
jae
ja
shl
ror
xchg
dec
push
repnz
inc
jae
hlt
jae
inc
int
and
xchg
dec
and
push
out
inc
sub
mov
cmp
mov
mov
sarl
roll
mov
mov
xor
sub
out
pop
mov
xchg
enter
rcrb
sub
cwtl
test
fwait
sbb
mov
mov
shlb
lret
dec
incb
ficomps
adc
xlat
sub
fs
insb
pop
add
fists
or
clc
xor
mov
xor
pop
mov
sbb
sub
mov
mov
mov
adc
push
dec
aad
faddl
mov
push
lods
inc
aaa
push
cmp
popa
mov
bound
sbb
enter
in
lock
movsl
lcall
out
fisubs
cmpsb
jp
and
xchg
fsubs
mov
jns
leave
mov
daa
jno
shll
daa
pop
push
push
mov
adc
inc
mov
les
jge
jnp
cmp
imul
push
pop
jns
xchg
mov
dec
mov
out
gs
daa
cmc
mov
cmp
nop
lcall
sub
ljmp
mov
rcrb
dec
in
cmp
jae
cmpsb
ds
pop
test
adc
jb
popa
xchg
mov
inc
pop
out
lret
movsl
fwait
aas
inc
jmp
shrb
mov
push
pop
push
repz
push
push
outsb
outsb
and
movsl
mov
dec
outsb
shlb
rcl
sbb
rol
pop
lret
sbb
xchg
mov
sub
fimull
mov
jg
mov
cli
mov
scas
sub
and
dec
cmpsl
shlb
xchg
mov
sbb
mov
jbe
and
add
std
ret
fsubrl
popa
insl
xchg
out
dec
adc
stos
scas
xchg
fistpl
leave
fimull
adc
push
sbb
insl
je
int
mov
mov
stos
fsubp
jno
repnz
mov
mov
dec
pop
and
cmp
xchg
add
inc
out
cmp
adc
mov
pop
fcomi
dec
data16
sbb
test
jmp
pusha
or
mov
jnp
xor
add
mov
cmp
subl
inc
mov
imull
mov
in
pop
setb
in
jecxz
xlat
cmp
call
mov
ret
rorl
mov
out
xorb
loop
test
push
hlt
xor
decb
mov
fwait
stos
stc
les
jge
add
divb
pop
dec
stos
lods
cmc
pop
push
hlt
shll
popf
icebp
inc
dec
and
decb
pop
push
aam
and
imul
fwait
mov
mov
cmp
cmp
or
aaa
repnz
clc
lods
sti
inc
inc
adc
repz
add
push
lods
loope
lods
int3
mov
rcr
ss
push
cmp
mov
or
inc
inc
dec
sbb
and
repnz
jb
cmp
mov
pop
jmp
ljmp
fs
xor
pop
push
arpl
push
xchg
leave
sbb
xchg
dec
rorl
cmp
sub
jmp
test
pop
lods
and
xor
in
jb
xor
mov
dec
mov
out
pop
aad
mov
pushl
xor
jecxz
adc
xor
mov
jbe
and
stos
inc
mov
mov
xor
sbb
fnstsw
dec
addl
and
dec
fisttps
pop
sbbb
cmp
mov
rcl
out
push
addb
pop
sti
test
repnz
jne
inc
pusha
push
and
mov
icebp
inc
jbe
and
push
mov
xor
pusha
mov
cmc
push
rorl
out
add
dec
adc
xor
mov
mov
rcl
leave
cs
rclb
movsl
ret
cmp
or
xlat
sub
jle
insl
jg
rclb
mov
in
into
add
cmp
cmp
sbb
rcr
jo
into
in
and
out
out
ja
es
mov
je
push
shll
lods
adc
xchg
test
mov
xlat
add
pop
gs
nop
test
push
cmp
cmp
pop
scas
inc
repnz
mov
dec
leave
adc
nop
xchg
adc
cld
sbb
jge
rcr
test
subps
jmp
xor
push
sbb
dec
clc
jne
rcrl
xchg
xor
les
cmc
sub
pop
jecxz,pn
cmp
cmp
ret
jnp
mov
repz
inc
xchg
adc
mov
fwait
adc
xchg
into
sub
xchg
sti
adcb
dec
shrl
sbb
popa
mov
push
loop
mov
outsb
and
add
and
int3
mov
mov
cltd
mov
shl
or
in
add
mov
jge
push
gs
jnp
xchg
add
pusha
into
pop
push
sbb
aaa
jnp
inc
loopne
sahf
movsl
inc
dec
popa
lea
xlat
movb
push
lcall
arpl
lcall
jb
gs
xor
ds
lds
push
push
aad
mov
xorb
in
lahf
lcall
mov
and
insl
sbb
stc
jg
push
fcomps
stos
inc
aas
stos
rol
pop
cli
ret
sub
mov
adc
dec
adc
push
mov
mov
inc
shlb
cmp
mov
pop
xor
test
push
adc
movsb
or
add
inc
sbbl
fimuls
inc
push
pop
shlb
fidivrs
loope
addr16
outsl
nop
sub
jmp
pop
pop
leave
jb
mulb
lods
les
in
scas
addb
fdivp
or
or
cmp
mov
pop
inc
jp
outsl
cmpsl
add
mov
sub
mov
xor
popa
mov
push
mov
pause
daa
insb
add
ret
sub
jno
dec
sbb
dec
pop
pop
insl
push
push
movsb
push
mov
pop
es
mov
in
jmp
decl
outsb
movsl
ljmp
in
sub
pusha
bound
mov
aaa
fistpll
and
adc
push
stos
fmull
inc
std
loope
push
test
test
fcomps
or
out
sbb
stc
nop
pop
dec
ret
xchg
and
sub
mov
test
jo
sub
jbe
fnstsw
and
xorb
imul
enter
or
pop
sbb
and
cltd
fstps
push
idivl
je
lods
or
int3
xchg
sarb
sub
iret
push
setno
xchg
int3
fs
mov
xor
sbbl
adc
cld
movsb
xor
pop
and
fisttpl
xchg
add
push
or
add
adc
mov
in
out
or
push
jge
stc
das
popf
test
stos
outsl
rorb
popa
std
stc
inc
in
cmp
push
les
xor
inc
cltd
lods
ret
fwait
jno
xchg
cmp
add
inc
and
mov
cmp
dec
mov
les
stos
cs
xchg
mov
or
mov
outsl
clc
inc
dec
dec
and
push
mov
pusha
pop
sti
dec
imul
mov
jle
incl
fcmove
dec
or
fnsave
cmc
sti
icebp
stos
das
imul
mov
ret
sti
push
ds
xchg
jne
aad
and
mov
repz
sbb
call
mov
xchg
out
xor
into
sub
cmp
movsb
jne
je
mov
jecxz
dec
notl
and
cs
add
data16
fdivl
pop
aad
jmp
lea
cmpsb
pushf
lock
fnsave
xor
insl
jne
rcrb
mov
stos
jg
cmp
call
addl
test
sbb
mov
inc
lds
repnz
xchg
hlt
out
hlt
mov
inc
rcll
push
xchg
dec
jmp
out
xlat
jp
dec
rcl
sahf
and
pop
lods
xor
dec
jo
jge
insb
pop
mov
lods
dec
ja
movsl
inc
cld
inc
mov
sti
loope
bnd
pop
gs
pop
in
divb
sbb
sbb
rclb
sub
shlb
out
mov
pop
jl
das
lock
in
mov
cmpsl
jne
cmp
xor
lods
sahf
or
popf
incb
sbb
xchg
pop
jmp
dec
cld
fwait
or
and
aam
in
insl
scas
xor
shll
dec
loope
xchg
or
dec
icebp
inc
lcall
fidivrs
cmp
jl
lock
or
mov
movsb
and
aaa
jnp
pop
sbb
add
mov
mov
mov
into
xchg
sub
cmpsl
testb
mov
out
mov
mov
mov
pop
mov
push
xor
xchg
adc
cmp
mov
xchg
pop
andb
movsb
loope
lret
enter
pop
ja
sbb
xor
fcomps
scas
jbe
test
imul
push
paddb
imul
inc
or
jmp
cmp
clc
shrb
and
mov
test
add
jp
gs
daa
movsw
movsb
imul
inc
loopne
jne
cli
push
jne
pop
sub
js
ja
xchg
scas
pusha
test
loopne
les
mov
sbb
mov
xor
jno
decl
insb
in
lods
mov
test
push
or
jno
or
js
clzero
push
push
gs
or
sub
int3
mov
leave
mov
int3
adc
dec
sbb
outsl
jg
fstl
dec
mov
in
or
rcll
lret
xor
adc
add
orl
rorl
test
mov
mov
jmp
push
mov
test
add
push
jbe
mov
pop
inc
insl
fxch
fcomip
sbb
push
cld
ret
ret
testl
imul
and
push
pop
out
inc
or
adc
add
sbbb
shrl
js
cli
fimuls
xchg
xor
adc
mov
dec
sbb
jns
jge
outsl
sbb
add
mov
nop
add
ja
fs
cmp
inc
xlat
bound
outsb
xor
rorb
push
lods
pushf
xor
push
sarb
mov
pop
inc
mov
push
mov
and
or
sahf
inc
adc
or
mov
pop
pop
xor
sub
inc
into
stos
cmp
movsb
je
incb
xchg
stos
cmp
mov
addr16
out
mov
inc
mov
shrb
rolb
rcl
xchg
pusha
or
movsl
mov
mov
dec
mov
lcall
jnp
mov
fcmove
jne
inc
clc
nop
mov
dec
in
scas
push
dec
mov
pop
pushaw
adc
mov
sbb
pop
bound
xchg
rclb
rcll
pop
inc
sbb
or
fmull
ret
dec
aam
jns
dec
pop
add
xchg
std
mov
inc
xchg
mov
fst
xor
and
push
jl
or
add
push
test
in
mov
icebp
leave
in
arpl
js
mov
dec
mov
imulb
aad
in
sbb
lret
xor
xchg
cltd
push
dec
repnz
out
pop
xchg
jl
aam
subb
stc
jg
adc
arpl
dec
mov
adc
dec
test
xor
sbb
fiadds
cmc
sar
hlt
xlat
mov
enter
inc
and
fnstsw
jno
out
mov
add
out
xchg
cmp
or
dec
xorb
add
fsubr
mov
push
jecxz
sbb
sub
popf
push
outsl
jbe
iret
das
and
cmc
mov
pop
and
or
sbb
ret
lods
xchg
scas
xor
cmpsb
push
mov
ja
push
outsl
inc
mov
mov
outsb
dec
push
xor
cmpsl
and
lahf
add
cmc
adc
add
xchg
mov
cltd
je
xor
xchg
inc
imul
jge
in
inc
into
mov
mov
push
sahf
inc
and
cmpsl
arpl
cmp
inc
sti
icebp
push
jno
fldcw
fldt
in
out
sbb
mov
imul
inc
in
push
cmp
inc
int3
dec
leave
sub
xchg
sub
mov
clc
mov
jne
testl
jecxz
push
cs
push
into
das
out
lret
sub
loop
inc
sub
mov
mov
xorb
lcall
leave
mov
into
push
xor
bswap
test
dec
inc
ret
ret
jg
push
iret
pop
sub
ljmp
rcrl
inc
daa
enter
les
arpl
movsb
add
and
push
jmp
xchg
ret
jns
mov
cmp
or
mov
xor
jbe
in
call
nop
jae
cmc
xchg
push
lahf
or
dec
lds
cmpsb
fstpl
pop
repnz
iret
push
add
cmp
cmc
pop
jp
shrl
test
mov
lret
xchg
push
jmp
popf
xchg
pop
insb
mov
popa
imul
sbb
inc
pushf
rcrb
inc
mov
add
in
imull
cmp
lahf
push
push
dec
adc
gs
fdivrl
pop
push
aaa
sbb
stc
jp
mov
pop
mov
aaa
jmp
loope
inc
or
jp
cmpl
dec
jge
nop
mov
scas
test
sbb
aas
popf
mov
sub
subl
std
fcomps
out
cmc
stos
repnz
sub
pop
push
jg
inc
or
lea
lahf
js
mov
mov
arpl
add
jecxz
movnti
push
jp
pop
out
add
fildl
test
rcll
lret
imul
in
clc
popf
push
xchg
rcrl
movsb
sub
das
lret
mov
add
cmp
mov
jmp
or
rep
nop
fwait
pop
cmp
int3
or
pusha
xor
xor
test
lods
in
cpuid
mov
mov
mov
cmp
pop
jns
je
xlat
dec
push
lock
gs
or
out
jns
push
into
fldt
pop
scas
push
imul
imul
and
pop
cwtl
or
jge
ret
push
fldl
xor
sbb
nop
cltd
arpl
mov
mov
pushf
notl
dec
fsubp
xchg
jmp
add
sub
or
and
xchg
stc
mov
jg
sbb
repnz
mov
dec
sbb
test
adc
mov
jecxz
dec
cmp
pop
jnp
jge
shrb
loop
mov
xor
into
in
cmp
fisubrs
mov
outsl
sbb
push
add
xor
mov
push
dec
call
pop
dec
sub
jp
xchg
mov
pusha
pop
mov
jge
mov
jmp
ror
and
adc
fs
push
in
push
mov
pop
std
push
mov
imul
int
inc
das
lcall
sahf
mov
sub
imul
jl
insb
push
ret
sub
cmp
in
shrb
iret
pop
xchg
incl
mov
xor
jne
jp
in
or
dec
repnz
aad
pop
push
push
jo
cltd
repz
clc
jne
ljmp
pusha
sar
out
daa
std
xchg
push
ret
push
repz
mov
loope
icebp
mov
pop
imul
push
mov
rcrl
dec
in
pop
scas
sarl
or
sub
daa
jae
icebp
movsb
adc
jns
xor
into
sarb
mov
sbb
jae
pop
sub
into
das
mov
cmc
pop
add
mov
jecxz
sahf
adc
addr16
in
add
push
adc
mov
push
mov
pop
lock
mov
sub
pop
in
sub
or
out
push
jbe
xchg
or
out
jnp
test
sbb
outsb
lock
xchg
xchg
lret
inc
pop
sti
jmp
jg
nop
pop
mov
ret
decl
cld
dec
aas
into
fsubrp
ljmp
outsb
xor
pop
sub
dec
adc
pop
dec
pop
xor
xor
xor
mov
mov
jb
sbb
sub
and
xchg
mov
popl
adc
add
jg
or
subb
mov
adc
jge
xor
pop
adc
js
das
jnp
sub
aad
mov
aad
sti
xor
or
rcll
and
lahf
sti
xchg
mov
pop
sti
popa
or
pop
adc
mov
dec
or
jp
int3
daa
mov
popf
mov
mov
pop
xor
jo
outsl
push
sub
or
icebp
push
cltd
mov
push
pushf
ja
mov
mov
cli
ret
stc
sbb
sbb
loop
add
mov
cbtw
jne
enter
inc
and
mov
inc
or
int3
push
dec
fists
cmp
cmp
data16
addr16
or
shr
mov
icebp
jg
into
mov
mov
or
cmc
rcll
mov
in
inc
lods
call
sub
inc
mov
pop
mov
sar
std
lret
inc
jge
jmp
and
sub
notb
adc
xchg
push
cmp
mov
popa
mov
out
repnz
xchg
cmpsb
popf
jle
mov
lahf
mov
jns
xchg
sbb
mov
ss
push
fldl2e
vpaddd
out
mov
inc
cmpsl
xlat
mov
movsl
fidivrs
cmp
jno
jae
or
jnp
neg
lods
jae
cmp
call
mov
dec
js
aas
jo
stc
lcall
test
insb
fistpl
jg
pop
adc
xchg
xchg
cwtl
stos
mov
fwait
and
and
jl
mov
imul
fistps
sahf
pavgw
out
lods
or
push
pop
daa
out
jl
cwtl
pop
ret
sbb
cmp
lds
or
pop
shrb
insl
lods
push
sbb
mov
xchg
mov
out
lods
push
test
cmpsb
mov
and
popa
or
sbb
and
stos
sub
cmp
or
rcr
popf
and
insl
cmp
repnz
pop
fildll
xchg
push
cmp
cmp
out
lret
mov
loopne
sahf
dec
mov
rol
ss
lods
mov
sub
sub
loop
inc
sub
cs
jl
rclb
repnz
int3
out
aam
dec
cmc
mov
aad
adc
scas
mov
in
mov
dec
adcb
pushf
loopne
loopne
into
jb
mov
repz
push
fidivrl
mov
fcoms
inc
sti
push
int
fs
pop
push
jns
adc
mov
lcall
inc
arpl
scas
test
push
fisubl
and
and
test
or
int
cmp
aad
mov
aad
pop
cli
mov
xchg
dec
orb
and
mov
jbe
pushf
or
sbb
cmp
ljmp
lock
call
push
xchg
lret
push
cld
cltd
out
insb
xor
xorl
stc
mov
xchg
or
mov
push
adc
dec
inc
push
pop
pop
out
jnp
data16
inc
mov
mov
mov
cmp
clc
pop
dec
cmp
dec
cli
jno
out
mov
lods
lods
cmp
jnp
es
leave
inc
and
sub
leave
mov
inc
int3
dec
sbb
cmpsb
jmp
into
aaa
jae
push
ja
xchg
pushf
test
pop
inc
scas
jbe
insb
ljmp
movb
xor
rorl
shlb
das
cmp
sub
shr
rorl
mov
insl
push
daa
xor
in
in
push
popa
mov
pushf
cwtl
add
leave
jb
inc
out
cmp
sub
cmpsl
sbb
pop
adc
js
imul
cwtl
jno
add
xor
mov
ret
push
addr16
sub
cmc
mov
cltd
pop
rcrb
or
jmp
jae
inc
mov
in
push
cmpsl
test
sub
push
repnz
dec
subl
dec
xor
sbb
notb
fadds
xor
push
mov
or
cmpsb
pop
sbb
in
ret
outsb
mov
add
jecxz
lods
lods
xchg
fisubs
mov
jmp
loope
push
std
jne
adc
loop
inc
mov
xor
addr16
pushf
into
mov
mov
nop
mov
push
jmp
or
out
or
pop
mov
pop
xor
scas
mov
add
and
int3
or
mov
jge
mov
mov
sarl
jae
add
stos
mov
jnp
inc
add
les
push
mov
insl
sbb
adc
std
outsb
mov
inc
ljmp
adc
test
xchg
ss
fnstsw
mov
cltd
fwait
inc
sbb
jno
ds
pop
out
loope
enter
hlt
pushf
cmp
jmp
mov
xchg
push
jns
xchg
adc
sti
jns
push
inc
xchg
out
int
or
nop
fisubrl
mov
in
jge
in
jno
fdivrs
imul
mov
lret
iret
outsb
cmpsl
arpl
add
dec
dec
popf
jo
fiadds
cmp
stos
pusha
push
push
enter
repnz
xor
pushf
imul
xchg
add
or
jno
add
push
and
add
cmpsl
xor
addl
xchg
out
and
jb
cmpb
dec
mov
sbb
mov
call
jecxz
mov
or
mov
jle
lds
add
lock
sti
push
dec
orb
add
sub
iret
pushf
mov
pop
daa
addr16
sub
sahf
jle
in
mov
xor
shlb
clc
or
fwait
mov
xor
pop
aad
xor
hlt
fs
adc
fmul
mov
sub
mov
xlat
lea
lahf
out
push
lods
jmp
loope
xor
stos
push
sbb
jl
cmp
sbb
add
popf
ljmp
daa
push
mov
xor
xor
adcl
call
pop
repz
enter
lock
mov
cmp
mov
out
cld
or
addr16
xor
adc
and
outsb
adc
push
outsb
add
loopne
or
and
pop
inc
in
mov
lret
or
mov
and
mov
lret
stos
and
into
sub
push
mov
ja
cld
adc
lahf
jg
mov
xlat
out
pop
sahf
sub
jmp
clc
aas
mov
pop
and
xchg
pushf
into
bound
cmp
xor
repz
inc
jns
ja
lcall
cwtl
loopne
xchg
jle
and
call
sahf
mov
mov
mov
test
gs
es
lock
sub
pop
and
clc
lret
inc
xlat
jmp
cmc
daa
add
aas
xor
js
push
push
adc
push
xor
mov
call
loope
push
mov
push
fmull
mov
cltd
shll
adc
aam
les
sbb
ret
call
in
bound
mov
mov
iret
sub
mov
mov
mov
push
jns
mov
fisubs
daa
icebp
es
gs
mov
dec
out
sub
xchg
js
stos
xchg
inc
es
loopne
icebp
pop
and
xor
cmp
dec
jecxz
clc
cmpb
push
loop
insb
pop
scas
sarb
dec
dec
lahf
out
sub
fldl
xchg
test
fs
xor
pop
bound
xchg
lret
mov
out
add
inc
cmp
daa
out
add
sbb
insl
sub
xor
mov
into
cmpl
rcr
mov
dec
push
pop
inc
sti
outsb
ret
lods
xor
sub
pop
mov
test
mov
fistpl
sbb
hlt
jecxz
pushf
div
ljmp
mov
xchg
in
test
xchg
sub
xor
sub
out
dec
push
cld
mov
or
adc
jle
lret
fcoms
mov
fwait
sub
pop
cltd
scas
movsb
repz
lahf
cs
pop
xchg
mov
lcall
ljmp
pop
push
jmp
nop
repz
hlt
insl
inc
push
je
addr16
xlat
xchg
xor
out
inc
mov
dec
in
inc
bound
adc
mov
jl
call
in
shrb
jne
xor
in
lods
das
popf
fistps
bound
adc
add
ds
dec
psubw
xor
or
in
in
mov
daa
clc
bound
adc
js
pop
cli
rcrl
and
pop
repz
test
out
fwait
and
or
sub
xchg
jne
bound
lret
adc
je
icebp
and
mov
gs
pusha
mov
inc
push
cmc
xor
lea
or
dec
cmp
pushl
test
jecxz
pop
push
xor
lahf
mov
jns
cld
int3
sub
jecxz
leave
stc
push
dec
push
cmp
icebp
popf
xor
add
mov
fbld
pop
insl
adc
cmp
jecxz
int
sbb
out
testb
stos
sti
and
sub
mov
loop
rcr
fisttps
jmp
sub
and
adc
outsb
loope
and
and
in
xchg
mov
cltd
xlat
or
cs
xor
bound
sub
mov
mov
std
sub
aam
je
or
or
and
cmp
mov
outsb
inc
and
shrb
mov
dec
sub
cmpsl
mov
fprem
xor
xchg
clc
popa
fimuls
dec
shl
dec
sbb
outsl
call
in
mov
sahf
fdivl
iret
fidivl
lcall
fldcw
or
fnsave
jge,pn
jo
loopne
fistpll
movq
aaa
xchg
stc
pop
mov
xchg
push
inc
inc
loope
imul
loope
fs
aas
xchg
or
pop
pop
add
rclb
out
push
lds
pop
outsb
das
js
sti
sar
mov
jo
rolb
jno
jnp
mov
std
xor
push
ret
scas
push
out
sti
push
cmp
into
jae
xchg
hlt
xchg
pop
shll
adc
addr16
scas
xchg
or
das
xchg
pushf
leave
dec
scas
sub
jne
aaa
mov
pop
ret
mov
mov
cmp
xchg
pusha
lock
lea
sub
arpl
out
mov
loop
imul
mov
sub
lods
leave
das
lahf
mov
or
push
arpl
mov
xor
in
jp
push
inc
xlat
loop
mov
fwait
push
iret
dec
add
dec
sub
inc
jae
fld
jo
shll
xor
pop
es
jno
ret
push
push
mov
fwait
test
imul
imull
and
dec
das
sbb
ficoml
lea
idivl
lock
test
dec
stc
push
dec
xchg
sbb
pop
pusha
in
pop
jp
jo
xchg
mov
sbb
fabs
arpl
incb
mov
ljmp
dec
insl
das
test
jnp
jns
mov
sbb
mov
test
add
mov
sub
xor
jp
lcall
push
xor
push
mov
arpl
adc
xchg
imul
addr16
jb
into
mov
pcmpgtw
cmp
and
jmp
daa
jg
jns
cli
mov
arpl
imul
imul
mov
fisttpll
jg
movsb
cltd
sub
and
jne
movsl
or
sbb
inc
lock
adc
xor
fidivrs
loop
jb
push
inc
cld
fldcw
stos
out
ds
mov
push
mov
adc
push
bound
hlt
das
mov
lahf
clc
xlat
cmpsb
subl
lret
lahf
movntq
aam
test
jge
pop
adc
test
mov
popf
call
mov
fcomps
inc
sar
and
in
sub
xchg
leave
bound
jp
add
in
loope
divl
mulb
push
fdivr
jle
ficoml
xlat
xor
js
xorb
push
mov
xor
sti
mov
dec
lahf
std
jge
shrb
jp
push
test
testl
mov
cltd
stc
adc
jecxz
inc
leave
pop
jmp
insb
das
mov
fstpl
test
cmp
xchg
mov
loop
lea
cs
fnstenv
cmp
cli
mov
xor
sahf
jb
cmp
mov
lods
ds
cmc
inc
movsl
test
fstpt
popf
push
jae
mov
mov
fdivrl
sbb
insl
in
and
mov
lret
shl
nop
mov
int3
inc
xor
xor
das
jnp
mov
fldcw
scas
sarb
adc
leave
rolb
inc
into
in
sbb
fidivs
cmp
mov
xchg
aas
mov
xchg
sbb
lock
push
sbb
xor
mulb
lds
popf
scas
movsb
mov
in
movsb
mov
js
mov
mov
push
add
test
jp
bsf
mov
xor
aaa
fwait
xorb
push
cmp
enter
cmp
aas
andb
dec
xchg
ret
lret
pop
xchg
mov
stos
sbb
jl
and
jg
pushf
xchg
or
mov
cmp
lret
push
push
test
xor
mov
ds
test
xchg
xor
xchg
les
ja
not
pusha
jg
push
add
pop
divb
mov
inc
inc
sbb
lock
scas
jle
arpl
inc
jecxz
gs
fs
das
mov
loopne
gs
into
cs
cmpsl
fwait
out
dec
aaa
xchg
push
mov
or
test
xchg
push
pushl
mov
xchg
repz
scas
inc
push
mov
jmp
out
rorl
es
mov
ret
cli
jp
push
repz
pop
lock
lcall
in
push
repnz
daa
mov
and
fwait
gs
sbb
mov
loope
pop
cmc
sub
jns
hlt
decb
mov
movsb
sub
cmp
scas
mov
mov
mov
ss
ucomiss
scas
and
push
test
rcrb
sub
insl
mov
jg
cmpsb
es
aad
dec
repz
fdiv
jl
loope
or
mov
cltd
inc
sub
addl
push
fwait
mov
test
mov
iret
push
inc
stc
push
add
jp
dec
call
enter
push
sarl
add
mov
mov
inc
icebp
mov
rclb
rdpmc
lds
pop
adc
movsl
enter
add
jnp
ret
mov
add
add
or
jnp
or
lds
inc
jns
pop
std
push
jmp
inc
mov
mov
insb
arpl
mov
dec
shrl
dec
out
adc
ret
push
subl
clc
mov
or
loop
push
mov
or
push
scas
shl
cmpsl
out
ret
imul
ss
in
mov
inc
inc
jmp
jmp
addl
mov
insl
je
popf
fistl
inc
xchg
pusha
sbb
mov
push
or
cmp
fidivl
jecxz
pop
fsubrs
loop
ljmp
mov
and
dec
in
mov
mov
loopne
je
lcall
inc
sub
cmpsb
mov
cmc
mov
cmp
outsl
xor
in
push
mov
xchg
inc
xchg
dec
stos
outsl
cmp
mov
mov
lea
std
pop
pop
sbb
mov
mov
cmpsl
push
push
js
stos
sub
cmp
imull
mov
filds
repz
stos
popa
mov
cmc
sbb
mov
test
sub
call
test
cwtl
shrb
mov
hlt
cmpsl
stos
cmpsl
jnp
inc
inc
and
sub
les
push
and
sbb
pusha
inc
mov
movsb
shl
cmp
lods
push
aad
loopne
fpatan
push
pop
jno
adc
xor
xor
cmp
inc
pop
das
lea
and
adc
cwtl
stos
dec
mov
test
or
and
cmp
xor
test
add
pop
mov
aad
int
sub
arpl
cmc
fwait
push
sub
and
in
adc
pop
es
lods
fsubrs
jae
fsubrl
in
lahf
aam
in
jp
iret
and
jbe
int
mov
sbb
cmovb
pop
js
push
ljmp
add
aas
dec
in
or
lock
add
hlt
leave
in
js
lahf
aam
push
sti
push
aad
xor
rcrb
pusha
daa
cld
in
jl
inc
shll
fbstp
mov
or
push
push
dec
or
repnz
pop
ss
mov
add
leave
sahf
pop
cmovl
arpl
sbb
stos
daa
pushf
pop
repnz
push
mov
inc
xchg
cmc
or
pop
repz
popa
xor
imulb
or
nop
mov
mov
sub
inc
mov
or
and
push
fcomip
adc
sbb
sub
cmpl
xchg
xor
loop
addr16
leave
int
daa
mov
aad
rorb
cld
sub
out
mov
cmp
sbb
add
lret
xchg
cltd
jle
push
jle
or
dec
or
cld
sub
iret
push
lcall
xchg
dec
pop
lret
xchg
jle
out
and
pop
or
test
xor
mov
rol
push
stos
jg
adc
jnp
loopne
xchg
xor
fnstcw
xchg
jg
es
xor
leave
push
mov
ds
imul
jp
add
push
jmp
mov
sbb
movsl
jle
jnp
pop
sbb
cld
xor
xor
sub
dec
pop
insl
rcrb
movsb
add
mov
mov
cmp
call
pop
mov
sahf
subb
cs
pushf
mov
ja
or
adc
shl
ret
scas
lods
push
pop
sub
push
jle
outsb
jl
hlt
aad
mov
loop
dec
sub
cmpsl
les
xchg
cs
std
rolb
pop
mov
add
dec
sbb
andb
fiadds
ss
es
xor
fwait
lret
jl
sub
sub
mov
pusha
ret
jo
jnp
scas
jae
push
dec
mov
ja
inc
mov
ficompl
xor
ljmp
test
and
shlb
jae
shrl
aas
xchg
mov
out
ljmp
popa
pop
aas
scas
cltd
shll
aam
lcall
aad
int
sti
mov
cmpsb
jno
ret
push
lods
pop
dec
inc
pop
dec
or
jmp
fmull
or
mov
mov
push
test
or
out
shrl
gs
add
rorl
sub
mov
fwait
xor
add
push
sub
test
mov
jae
loop
imul
ja
dec
adc
mov
jo
jmp
shl
js
test
dec
push
mov
mov
es
xor
cltd
cmp
mov
mov
mov
xor
fdivl
dec
sub
add
sub
mov
ljmp
mov
pop
outsb
imul
out
xlat
adc
mov
test
andb
push
hlt
outsl
sub
jae
pop
sbb
inc
and
aas
mov
xchg
push
pop
fdivrs
mul
add
lods
jecxz
out
push
pop
cmp
push
cmp
es
ds
adc
scas
cmpsb
inc
pop
aas
xorb
xor
xchg
leave
pushf
mov
dec
adc
mov
inc
sarb
sbb
pop
inc
pop
sub
mov
add
inc
jecxz
inc
je
scas
jecxz
xor
lcall
cli
mov
repnz
cli
outsl
filds
cmp
lods
mov
xor
imul
push
jns
ret
mov
ss
xchg
or
out
xchg
inc
fwait
jno
cmc
push
lods
jns
and
lahf
jne
push
pop
add
repz
das
int
cltd
xchg
int
mov
jle
or
test
adc
xchg
mov
fs
sbb
cli
cmp
mov
cmp
ret
xor
sbb
outsl
movl
cwtl
sbb
inc
mov
shll
inc
test
inc
adc
movsb
xchg
cltd
je
test
inc
movsl
xchg
push
mov
ja
test
xor
das
das
mov
sbb
test
push
cli
clc
call
loope
fistl
cmp
adc
add
bound
xchg
jns
divl
cld
sub
push
popf
sbbl
and
mov
dec
std
mov
out
shlb
and
push
dec
xchg
inc
jge
popa
stc
sub
cmp
fnstsw
sbb
pop
sbb
pop
mov
cmp
movl
pop
sbb
out
sbb
add
inc
ret
ljmp
daa
inc
mov
inc
mov
mov
cmpsl
pop
pop
mov
and
jns
mov
imul
ss
mov
add
and
mov
inc
decl
jg
and
push
inc
das
icebp
sahf
dec
push
stos
xchg
sbb
xlat
pusha
cmpsl
and
adc
and
jne
adc
jge
mov
sub
pop
sub
pop
sbb
stos
inc
dec
dec
pop
jnp
jg
dec
call
cmp
pop
aad
push
push
das
add
push
dec
jnp
shrb
mov
adc
cmp
shlb
jge
loopne
je
mov
daa
jb
divl
addb
dec
pcmpgtd
cmp
ds
dec
inc
jo
addr16
and
cmp
xchg
cmc
ljmp
int3
sub
jge
dec
cmpb
pop
mov
cwtl
and
add
div
adc
loope
scas
adcb
ret
sti
lods
mov
jbe
in
push
push
inc
xchg
dec
js
cs
shr
scas
sti
dec
fs
bound
fisubs
into
dec
sahf
pop
testb
pop
dec
sbb
pop
and
jl
pop
imul
mov
xlat
adc
push
out
mov
ja
mov
pop
les
mov
lock
add
aam
sub
cmc
in
pushf
popa
je
lea
adc
push
scas
shll
cmp
sub
rcrl
jb
in
sbb
dec
add
mov
clc
fucomi
cltd
les
push
gs
int3
push
repz
sbb
mov
adc
test
sbb
and
pusha
ds
int
lahf
popf
push
enter
xchg
enter
xor
ret
sbb
or
das
movsl
nop
inc
aam
daa
jp
movsl
imul
mov
dec
push
or
ret
rcl
insl
fisubrs
sbb
andl
xor
loopne
mov
insb
xor
sub
sti
sbb
les
pop
popf
jae
jnp
mov
les
adc
add
into
int
std
adc
lods
jb
sti
adc
fcoms
fmul
push
mov
pushf
or
add
shrl
or
mov
xchg
mov
std
outsb
fildl
test
aaa
and
aaa
stos
sbb
inc
cs
test
mov
arpl
adc
pop
mov
out
call
fs
push
xor
cmp
int3
push
addb
mov
mov
lahf
xchg
mov
push
xorb
fucom
cld
jo
daa
cltd
repnz
std
pop
shll
loop
scas
dec
adc
mov
mov
imul
es
xor
xlat
xchg
daa
cs
jp
out
out
or
push
rcrl
add
std
stos
mov
ret
dec
repnz
jg
es
jo
les
fcoml
and
je
insl
push
sbb
js
push
inc
scas
in
xor
es
mov
stos
test
mov
in
fs
mov
sbb
mov
dec
je
mov
jmp
xor
inc
popf
xchg
mov
jns
dec
sbb
dec
das
sbb
pop
jp
cld
inc
mov
js
inc
mov
mov
cwtl
lcall
xchg
xchg
sti
shll
mov
gs
sbb
adc
mov
adc
push
mov
je
fistl
jecxz
les
subb
loope
out
pop
xchg
jmp
fimull
out
push
mov
mov
jg
std
jg
fwait
or
addb
lds
sbb
adc
std
sbb
adc
lret
jge
push
mov
push
iret
lcall
pop
or
in
xor
shl
cmp
mov
movsb
add
mov
jle
jmp
daa
in
push
add
push
ljmp
imul
lahf
cmpsb
inc
and
call
repnz
sti
mov
push
rcr
or
imul
or
sbb
and
push
fucomip
lahf
sti
ljmp
js
mov
and
aam
pop
psrld
fnsave
and
outsb
or
inc
imul
mov
inc
cld
xchg
popf
imul
out
adc
in
sub
repnz
xor
mov
scas
mov
pop
lock
sti
inc
ret
xchg
js
rorb
fldt
rolb
xor
popa
push
push
mov
fdivrp
pop
int3
cmp
jp
sub
in
push
dec
cmp
adc
lcall
xor
sbb
mov
or
popf
inc
sbb
dec
push
cwtl
ret
xchg
xchg
out
jl
xor
insb
or
or
mov
xchg
pushf
arpl
aas
movsl
mov
xor
jp
add
inc
icebp
xor
inc
mov
mov
in
pop
push
cmpsb
fwait
call
call
icebp
out
xor
cmpsl
outsb
movsb
push
ret
aad
mov
in
sub
mov
push
xchg
mov
lcall
sbb
xorl
bound
xchg
in
sbb
fldcw
and
and
outsb
je
out
jnp
cmp
and
sti
nop
cmp
push
lcall
mov
cld
add
hlt
pop
add
xlat
sbb
mov
bound
outsb
mov
insl
cli
loop
out
and
push
lock
add
jne
test
sbb
jo
inc
pop
and
in
enter
mov
jge
rclb
bound
aad
jl
mov
fcomi
and
sub
ljmp
mov
lret
loope
push
je
lsl
pop
mov
dec
push
cmc
imul
mov
xor
inc
scas
sbb
adc
ret
cmp
aas
or
dec
push
mov
or
xor
pop
call
jmp
push
add
mov
lret
push
mov
fwait
shll
outsb
or
inc
add
mov
lahf
jo
mov
ret
push
xor
popf
jae
push
sub
sbb
mov
clc
xchg
sbb
xchg
call
pop
pop
adc
adc
repnz
loope
div
sbb
mov
dec
and
dec
pop
sbb
in
push
out
loopne
cmp
es
xchg
mov
push
rorb
cmpsb
int
imul
cmp
cmp
out
aaa
andb
in
mov
js
cmpsl
lahf
orl
je
jle
xor
jb
stos
inc
rorb
adc
stc
fisubrs
xor
insl
out
dec
xchg
ret
popf
call
sarl
sahf
addr16
sbb
pushf
gs
mov
popf
andl
cmpsl
out
xchg
pop
bound
adc
enter
mov
loope
xchg
or
mov
lea
int
pushf
imul
popf
popf
sahf
push
mov
nop
mov
insb
mov
andb
mov
and
mov
mov
mov
pop
dec
popf
sub
sub
mov
adc
insb
flds
cld
les
push
sub
xor
insb
xchg
pop
or
mov
shl
adc
and
aas
push
xchg
mov
mov
pop
add
jecxz
call
adc
push
sub
xchg
cmp
push
ret
lea
push
adc
andb
outsl
pop
loop
fisubrs
mov
sub
gs
iret
xor
jnp
push
add
arpl
and
jle
lds
cmp
sub
or
add
jp
ljmp
andnps
test
imul
out
jno
out
mov
int3
xchg
jbe
in
lea
test
std
ss
lods
add
bound
call
push
into
dec
add
adc
jle
sbb
sbb
scas
imul
and
cmc
cmp
ret
pop
clc
js
lods
cwtl
xchg
dec
sbb
cmp
pop
test
mov
and
or
testb
fs
mov
popa
in
enter
ss
or
cmp
or
cs
loope
das
pop
roll
jle
ret
jg
mov
sub
rorl
sub
in
insb
out
xchg
cs
mov
pop
lods
or
nop
and
imul
test
pop
adc
cs
ret
ljmp
jns
mov
adc
jb
aaa
pop
popf
cmpsl
in
push
mov
cli
mov
loope
in
sbb
inc
adc
pop
mov
in
xchg
cmp
lock
out
sbb
cmc
pop
xor
pop
daa
ret
push
sub
sub
call
inc
dec
mov
and
movsl
je
xor
scas
fwait
jae
sub
fnsave
jae
push
arpl
ja
aas
dec
mov
aad
dec
outsb
arpl
cmp
test
add
xor
pop
dec
adc
mov
sub
outsb
dec
das
sahf
jmp
ljmp
inc
sub
movsb
das
xor
or
mov
push
test
loopne
sbb
push
in
adc
mov
cwtl
hlt
ja
idivl
sbb
out
inc
jle
mov
test
out
stos
pop
outsb
loop
inc
fdivr
lds
imul
dec
jle
dec
orl
push
jecxz
push
adc
inc
cmp
xor
add
icebp
enter
sbb
sbb
adc
scas
fimull
and
pop
insb
lods
dec
cld
pop
cmpsb
fisubrs
cld
fisttpl
mov
xchg
mov
cmpsb
mov
pop
daa
addl
fcomip
mov
add
test
ret
orl
push
lods
cs
and
ret
testb
ds
dec
out
add
add
ret
pop
fdivl
jo
jb
mov
jmp
pop
lret
je
out
pop
sbb
xchg
les
lock
daa
or
inc
stos
xor
xchg
cmpsl
aad
dec
dec
inc
fs
xor
mov
push
dec
in
or
in
xor
dec
lods
cli
jg
add
aam
sti
lret
in
and
mov
rcrb
aaa
xor
add
jmp
shlb
out
xchg
pop
sbb
sbb
xor
out
fcmovb
je
sti
mov
in
popa
mov
orb
andb
lret
sti
stc
cmpl
jmp
xchg
mov
out
cmp
mov
fmull
mov
mov
int
xchg
mov
or
lods
jecxz
pop
mov
xor
add
stos
or
outsl
mov
vmread
pop
push
mov
fadds
and
pop
fisttpll
imul
inc
into
call
rclb
jg
xor
sub
out
les
xchg
daa
fisubrs
mov
bound
lods
out
movsl
lock
out
fsubl
dec
movsl
inc
pushf
or
shll
mov
popl
jb
add
scas
lret
xchg
das
dec
add
inc
sub
inc
pop
adc
xchg
ret
cltd
scas
push
mov
pop
popf
mov
adc
push
xchg
mov
push
fs
fcoms
fdiv
loopne
mov
cmp
addl
and
clc
lods
cwtl
jne
adc
or
jnp
test
outsb
nop
or
enter
mov
and
mov
and
rcrb
jno
xchg
xchg
leave
mov
les
scas
adc
and
shrl
pusha
imulb
push
test
sahf
mov
mov
dec
sahf
test
xchg
xlat
pop
in
push
popf
shll
lock
add
bswap
mov
push
out
loop
hlt
rorl
pop
xchg
es
xor
sbb
fcmove
test
rolb
in
call
lcall
inc
xchg
mov
sbb
mov
mov
call
ret
mov
push
test
jg
cwtl
xlat
add
push
push
mov
fsubrp
bound
mov
mov
push
cmp
repnz
cmpsb
xor
scas
mov
mov
sub
movsl
call
fsubrs
cmpb
sarl
je
cld
fstpl
js
push
xchg
mov
js
fucom
shl
jnp
enter
push
neg
cmpsb
das
xlat
jnp
push
adc
add
fildll
clc
cmp
sbb
mov
cmp
arpl
popa
sti
adc
jns
notb
sbb
xor
ljmp
xchg
sti
mov
pop
movsb
push
cmc
xorl
dec
cmp
mov
clc
into
dec
nop
adc
call
sbb
sub
push
int
adc
pop
sbb
add
xchg
or
adc
sbb
pop
cmp
arpl
cmp
adc
mov
inc
xchg
fstl
out
jmp
cmp
pusha
arpl
xchg
aam
in
out
dec
lds
pusha
jmp
fwait
mov
in
jmp
mov
or
in
sbb
out
rep
jb
shl
lea
imul
mov
inc
add
jno
xchg
mov
movsb
lahf
cmp
add
inc
mov
pop
lea
cwtl
push
movsb
xlat
inc
std
mov
stc
pop
inc
inc
push
push
clc
iret
ret
shlb
sub
jl
sub
mov
pushf
out
and
ficompl
dec
cmp
push
out
test
inc
dec
push
add
mov
cmpsb
mov
sub
mov
add
fistl
pop
ja
xchg
insl
or
dec
cld
int
data16
gs
pop
xor
adc
test
in
lcall
fidivrl
inc
lret
js
pop
add
ret
and
fadd
rcll
fisttpll
pop
add
push
sub
adc
and
add
mov
mov
add
int
jo
fstl
or
es
fwait
jg
nop
dec
jne
and
cltd
mov
aam
lcall
icebp
xchg
inc
movsb
lea
xchg
std
add
test
loopne
add
gs
test
enter
push
sub
and
mov
outsb
add
test
ds
sbb
outsb
sub
mov
push
shll
mov
adc
add
mov
inc
insl
sub
pop
push
cmpsb
std
xchg
ja
inc
inc
sbb
xchg
push
pop
ljmp
pop
ret
cmp
cmpsb
pop
ds
or
push
pop
loope
aad
add
les
mov
orb
aas
imul
sub
mov
popa
push
lar
xor
inc
push
jmp
or
fsub
stc
or
leave
outsb
repz
call
fimuls
cmc
xlat
jne
adc
jmp
lret
mov
insl
jg
test
jge
cmovp
in
leave
cmp
add
rolb
jl
dec
pop
lods
jnp
jmp
xchg
and
pop
pop
cli
mov
dec
lahf
xor
imul
cld
les
test
std
add
xchg
mov
scas
ljmp
push
nop
iret
sub
sbb
mov
lock
mov
icebp
and
push
cmp
imul
out
mov
push
cmp
test
addr16
or
out
ljmp
sbb
fisubrl
jmp
sub
adc
xchg
lea
lock
imul
sbb
xchg
pop
jmp
shlb
xchg
push
imul
mov
test
xchg
fistpll
insb
into
insl
enter
xor
pop
push
mov
dec
nop
cmpsb
jno
fcoml
stos
xor
movb
in
add
mov
movsb
jne
sub
or
test
dec
les
jo
lret
sbb
or
shlb
popa
pop
push
adc
clc
cld
xchg
pop
jns
popa
jmp
mov
bound
mov
repnz
sub
jmp
mov
push
jns
jns
mov
insl
mov
jge
std
repnz
and
inc
stos
pop
xchg
in
adc
cmp
xchg
lods
dec
add
and
jmp
mov
push
rclb
popf
mov
sti
imul
adcb
icebp
mov
add
repnz
xchg
xor
mov
bound
int3
shlb
in
or
push
pop
adc
sti
sub
xorl
jge
mov
ljmp
je
cmp
stos
and
xor
adc
shrb
push
push
jns
pop
mov
pop
pop
jnp
xor
jp
ret
lds
in
push
mov
out
imul
sub
mov
push
push
mov
nop
pusha
and
jnp
int
or
je
lds
popf
xchg
add
adc
aas
pop
out
sar
jg
into
adc
repz
shrl
scas
lahf
cmpsb
aaa
dec
dec
int3
js
adc
mov
mov
aaa
or
add
mov
mov
repnz
adcl
push
mov
mov
push
setbe
imul
out
icebp
scas
inc
sub
aaa
or
mov
cmp
jge
es
lods
ss
pop
aaa
dec
and
pop
pop
aad
mov
pop
mov
iret
sti
jmp
cmp
xchg
call
sbb
pop
shll
shrb
das
or
push
adc
jp
and
iret
jl
pop
out
xchg
mov
lahf
jl
addr16
test
cli
mov
daa
add
mov
cmc
in
ss
les
sbb
psrld
lret
dec
lods
jecxz
jge
pop
sahf
pop
mov
sarl
push
xorl
je
add
notb
mov
loopne
sub
out
jno
cld
mov
xor
cli
pusha
bound
dec
repz
fs
mov
ret
test
out
fldl
adc
movsl
pop
dec
test
icebp
xor
sub
out
xchg
push
adc
adc
adcb
or
ds
jge
mov
jnp
cmp
push
enter
cmp
xor
jle
add
mov
stos
sbb
pop
xor
mov
push
pushf
fsubs
fucomi
jae
or
fwait
cltd
out
mov
adc
inc
repz
push
or
mov
adc
pop
push
mov
dec
loop
pop
leave
mov
mov
mov
ret
xchg
scas
dec
stc
fs
mov
push
inc
or
xchg
jle
mov
xor
xchg
add
cmp
call
rorb
add
cmp
aad
mov
andl
insl
shl
int3
xchg
dec
lods
std
jecxz
test
push
sbb
xchg
outsb
lds
sub
in
xor
mov
mov
ret
out
pop
xchg
popf
and
test
sub
insl
xlat
cmp
sub
mov
pop
dec
int3
enter
xor
scas
jb
outsb
addr16
jg
pop
push
mov
jmp
or
sub
int
les
inc
dec
adc
jb
aaa
fmuls
outsl
aam
adc
cld
pop
mov
sbb
fisttps
lock
or
sub
mov
daa
faddl
pusha
or
mov
xchg
sub
dec
je
gs
movsl
push
scas
lock
loopne,pt
xchg
orl
popa
push
push
jno
js
inc
fs
mov
and
fildl
push
sub
lahf
pushf
mov
fxam
mov
xor
or
clc
adc
imul
mov
xchg
stos
mov
xor
es
imul
stos
fiaddl
mov
dec
mull
and
xor
lods
or
mov
int3
fidivl
dec
jle
cmpsb
mov
gs
mov
stos
lahf
jne
lret
cmp
cmpsl
xor
pop
mov
jg
loopne
sub
clc
adc
jb
pop
mov
je
add
js
push
inc
lods
test
pop
int3
push
repnz
bound
jle
aas
pop
pop
cmpsl
adc
aaa
adc
mov
sbb
add
mov
xor
rcr
jne
int
mov
iret
js
out
cmp
cltd
das
or
cmpsb
cs
test
iret
nop
loope
cmc
addl
cmp
adc
gs
xor
mov
cmc
arpl
push
loop
sub
push
dec
fbstp
or
mov
push
mov
push
cmpsb
push
and
xor
sub
sbb
adcb
push
xchg
jle
mov
push
mov
mov
popf
pop
aad
push
inc
sarl
dec
test
int3
out
jp
mov
dec
stc
push
add
and
outsb
arpl
add
fsubs
outsb
pop
dec
fcomps
push
sub
mov
pop
fimuls
xchg
mov
jl
cmp
jp
insl
cltd
mov
push
adc
imul
test
add
pop
gs
std
movsb
mov
in
or
jnp
aas
pop
popa
inc
and
outsb
in
xchg
mov
mov
inc
popa
ror
out
cmp
pushl
lahf
dec
stos
lods
push
pop
inc
imul
lods
dec
in
lds
and
lahf
dec
jmp
mov
std
cmpsb
xchg
fs
repz
and
dec
pop
loope
xlat
ljmp
xchg
sbb
sbb
adc
int
out
aas
lret
adc
pop
or
addr16
push
jge
popa
push
les
insb
imul
fisttpl
jmp
mov
adc
adc
sub
push
mov
jmp
jge
daa
lahf
sub
push
push
pop
jg
pop
push
xor
jae
xchg
sub
pop
pop
dec
cli
push
cltd
fstl
loop
insl
scas
lret
push
sarl
jle
push
pop
jnp
lahf
pop
adc
push
jmp
xchg
pushf
mov
fsubrs
adc
lcall
cmpsb
cli
mov
and
add
inc
xchg
mov
fcoms
lods
into
lret
daa
push
add
test
and
js
sahf
push
xchg
xor
mov
jb
cmc
add
mov
ds
xchg
push
out
jbe
mov
cmp
icebp
sarb
add
cmp
scas
push
add
inc
shlb
sub
ret
das
fnstsw
je
inc
sub
decb
das
orb
cmp
mov
pop
cld
stos
jmp
movsb
mov
movsl
cmp
xor
testb
negb
sub
dec
xor
adc
dec
pusha
and
ds
push
int3
inc
mov
stos
cmpl
jns
jg
xchg
scas
stc
repz
movsl
shr
inc
mov
insl
mov
push
pop
jno
imul
scas
in
xchg
into
cld
and
mov
leave
jno
cli
jns
les
or
mov
xchg
cmp
inc
pop
bound
push
jg
mov
mov
out
not
lods
loopne
mov
cmp
lret
jae
jns
dec
mov
mov
add
andl
mov
imul
cli
pop
push
movsb
xchg
mov
inc
xchg
adc
dec
mov
les
imul
int
mov
mov
aas
cmp
jnp
jno
jne
pop
lock
mov
pop
or
mov
jmp
fstpt
pop
xchg
fstps
iret
mov
imul
fistl
fcompl
in
dec
in
jnp
fdivl
inc
push
pushf
dec
std
push
shl
dec
jge
test
and
push
pushf
dec
stc
sub
call
jl
dec
insl
fnsave
pop
and
lcall
scas
insb
repz
cwtl
cmp
mov
imul
inc
call
inc
push
ds
sub
in
and
subb
lcall
ljmp
jle
and
scas
inc
ret
je
cmp
fcom
lea
stc
mov
flds
fstpt
es
inc
notl
cli
divb
enter
movsb
int
xchg
sub
ja
mov
push
popf
cli
xor
jg,pn
lret
int3
clc
data16
sahf
dec
push
and
addr16
xorb
insb
jne
xchg
outsb
movsl
xchg
mov
xchg
jecxz
jecxz
mov
sub
inc
bound
ja
adc
fistpl
rcr
mov
sbb
repnz
je
dec
aad
dec
mov
lret
enter
mov
in
pop
pop
test
shrl
xchg
enter
test
test
leave
lcall
test
mov
push
jge
dec
shll
cmp
mov
mov
out
mov
stos
adc
cmc
cmp
scas
lds
add
xor
data16
and
aam
cs
lea
rorl
stc
gs
jge
jae
cmp
sti
jg
mov
pop
clc
inc
out
popa
inc
movsb
orb
scas
mov
cld
daa
in
movsl
leave
push
dec
in
shlb
cmpsb
cmpsb
mov
and
sbb
std
cmp
inc
movsb
int
aas
data16
mov
jnp
stc
sbbl
call
jns
inc
pop
sti
stos
scas
add
cmp
scas
xor
push
in
push
jo
push
lods
fstl
dec
out
xchg
fimuls
ficompl
sbb
sbbb
pop
loope
in
ficompl
xchg
push
subl
jae
mov
sbb
jp
jle
movsl
mov
mov
cld
fdivr
sub
cmp
xor
and
or
jecxz
out
sarl
jbe
add
scas
cmp
popa
es
sbb
sti
jne
xchg
mov
in
fsub
mov
insb
testb
stos
add
in
out
mov
mov
scas
cmp
aas
es
inc
mov
push
cwtl
test
sub
push
es
addb
into
lods
in
imul
cmp
lcall
xchg
das
add
fsubrl
lahf
mov
push
jo
pop
adc
adc
lea
sbb
rcrb
pop
mov
fidivrl
cmp
or
push
test
test
adc
std
out
arpl
imul
pop
mov
xchg
mov
mov
testl
sbb
mov
xchg
mov
insb
jno
shr
push
repnz
outsb
pop
inc
insl
cmpl
ljmp
add
jo
jl
orl
pop
outsb
dec
sbb
lods
roll
repz
out
lret
mov
ret
cwtl
cwtl
cmp
push
sbb
mov
or
mov
mov
mov
dec
movsl
mulb
shrl
xchg
out
sbb
cmp
pop
xor
icebp
pop
xchg
iret
mov
outsb
dec
jno
or
and
ds
je
sti
pop
pusha
jbe
mov
mov
insb
jb
jae
xchg
xor
cli
cmp
push
mov
jle
mov
dec
pop
or
or
pop
data16
push
loopne
inc
dec
fs
sti
enter
push
sub
inc
push
cmp
subb
xor
sub
xor
jbe
lds
dec
push
outsb
fbstp
cld
shl
push
clc
xchg
lret
push
sti
jp
aad
jge
push
add
mov
test
xchg
into
scas
jne
jp
lret
aas
test
pop
clc
aas
jmp
movsl
or
test
aaa
cmpsb
fcmovne
sbb
add
repnz
sbb
xor
sbb
ficoms
or
mov
out
pusha
lods
push
test
jge
inc
or
int3
ficomps
enter
out
or
test
pop
sub
sbb
mov
and
fwait
jo
mov
aam
push
jmp
add
pushf
sbb
lods
sbb
mov
cld
cmpsl
testl
push
out
sbb
sbb
pop
cmpsb
xor
xor
xchg
popa
repz
icebp
sar
fcmovnb
mov
sbb
lock
repnz
in
mov
lret
cld
adc
lret
adc
fwait
cmp
fldl
cmc
enter
movsb
mov
cmp
fisttpl
je
mov
mov
push
or
ja
mov
xorb
xchg
add
mov
pop
inc
jns
addb
and
stos
mov
jecxz
adcb
fcomi
fiaddl
cwtl
jno
aaa
push
fwait
inc
pop
inc
cltd
test
mov
xor
mov
pop
lcall
jle
pushf
jle
adc
adc
std
popa
in
repnz
mov
daa
adc
arpl
mov
pop
pop
jg
sbb
ljmp
mov
lods
push
arpl
sub
inc
int3
jae
test
sbb
mov
loopne
dec
mov
jne
pop
lcall
leave
push
mov
push
pop
cwtl
xor
fwait
sbb
cmp
fwait
insl
and
arpl
add
pop
mov
adc
dec
sub
loope
outsl
pop
push
sbb
mov
out
cwtl
aad
popl
in
mov
stos
add
jbe
adc
loop
push
mov
cmp
mov
adc
jl
scas
xchg
mov
mov
or
or
inc
cmp
jno
inc
jb
inc
pop
subl
mov
je
orb
loop
or
add
es
cmp
and
cmc
mov
stc
adc
sbb
and
sbb
aam
add
xchg
cmpxchg
int3
cs
and
push
fidivl
mov
test
bound
mov
outsb
push
and
stos
sti
pop
push
jl
mov
add
daa
call
pop
clc
pushf
xchg
jmp
pop
adc
xchg
push
mov
mov
pop
filds
and
popa
pushf
lahf
out
pop
out
test
rcrb
and
xor
and
roll
movsl
dec
cs
js
adc
mov
int3
dec
aam
aas
gs
and
sqrtps
mov
and
rcrl
mov
ret
adcl
out
popa
adc
fwait
in
inc
in
test
pop
cmp
sub
movsb
ds
pop
imul
pop
pop
outsl
dec
fsubs
in
enter
push
outsl
scas
jae
cmp
xchg
cmp
cmp
movsb
jge
int
sub
dec
and
test
sarl
fiaddl
adc
mov
outsl
inc
imul
lahf
sbb
int3
jmp
jae
mov
pushf
push
mov
aad
pop
sbb
jge
sbb
mov
ret
mov
into
sbb
push
es
and
xor
mov
push
shlb
inc
movsb
mov
je
mov
clc
aaa
adc
mov
fsubrp
out
dec
cli
mov
arpl
out
mov
mov
arpl
sub
std
loope
xchg
mov
xchg
add
les
roll
mov
xchg
mov
mov
mov
cmc
addb
inc
mov
push
lret
jbe
or
mov
leave
cmp
movsl
and
mov
or
int
jne
mov
or
cmpsb
cld
mov
inc
jecxz
ret
mov
sbb
inc
add
cltd
ds
pusha
pop
xor
mov
sub
adc
fcoms
nopl
xor
daa
int
sbb
lret
lods
movsl
xchg
xchg
push
mov
dec
push
fisubrl
or
xchg
rcll
mov
jg
pop
fldenv
xchg
xor
mov
mov
ja
data16
aas
shlb
dec
notl
dec
sbb
loop
lock
adc
adc
pop
xor
push
or
and
or
dec
ja
xchg
ficoml
push
and
and
int
scas
jg
add
xchg
scas
addr16
iret
adc
add
rorl
fsts
je
stos
in
int
and
push
aam
fnstsw
fadds
shr
scas
and
sti
sbb
xor
sbb
sub
or
adc
sub
pop
dec
out
pop
jmp
and
lea
and
in
pusha
adc
push
stos
out
rorb
imul
aam
inc
jle
fcompl
in
fcompl
dec
or
push
cld
daa
bound
out
sahf
into
push
push
push
pop
stos
repnz
and
inc
mov
cmc
pushf
out
mov
std
mov
mov
jge
pop
fdivr
popl
push
mov
jnp
push
inc
push
fldl
mov
push
je
into
push
xchg
push
mov
sbb
dec
mov
rolb
loop
loop
push
jg
popa
push
shlb
xlat
xchg
mov
pop
mov
jle
push
mov
rcll
xlat
lcall
jnp
jp
notb
push
out
cmc
fcoms
out
push
push
dec
push
pop
or
jge
cmpsl
mov
sub
out
and
inc
pop
mov
sahf
rcll
fldenv
fwait
call
and
out
ret
mov
test
sbb
popf
lcall
fnsave
jecxz
push
mov
fwait
add
enter
mov
mov
mov
xchg
mov
push
ficoml
jns
enter
pushf
mov
mov
pushf
je
cld
cmc
fsts
jle
inc
push
lods
push
sub
adc
pop
adc
xchg
jmp
je
jmp
loop
sarb
xchg
jp
aam
mov
add
into
lods
pslld
dec
or
jl
cmp
sarl
push
sub
scas
pop
and
pop
nop
in
jbe
repz
jg
icebp
popf
mov
dec
icebp
cmp
pop
test
add
sarb
cmp
and
and
pop
cmp
shrl
je
push
push
clc
stos
movl
cltd
mov
out
imul
and
xchg
xor
shll
push
mov
dec
and
sahf
mov
mov
out
xchg
les
insl
lea
mov
cmpsl
mov
adc
shll
into
clc
icebp
subl
iret
int3
mov
sbb
dec
and
cmp
ds
insl
fwait
ljmp
shrb
iret
xor
test
cltd
shr
pop
dec
sub
imull
xchg
mov
jae
add
lret
outsb
mov
je
iret
jo
cli
into
popf
add
adc
inc
js
test
into
mov
mov
dec
sbb
jmp
dec
loop
cmp
hlt
jecxz
stos
mov
sub
cltd
mov
jl
add
push
stos
shlb
jl
jne
insl
ja
mov
cmp
aad
and
cwtl
repz
test
push
loope
lods
pop
sti
adc
loope
jb
stos
xchg
sahf
clc
outsl
mov
lahf
addr16
lds
sahf
add
rclb
ret
jmp
push
mov
mov
stc
enter
sbb
sbb
jnp
and
jle
stos
cmp
adc
pop
fidivrs
and
addr16
ret
std
loopne
mov
sahf
pop
pop
aad
adc
inc
dec
popf
xlat
mov
or
out
push
bound
test
mov
pop
xchg
sub
push
stos
jns
mov
or
shll
repz
mov
sahf
jecxz
push
mov
hlt
pop
lods
cltd
sbb
inc
stc
fs
sub
or
imul
add
sub
adc
cmp
imul
jp
roll
or
add
movsl
cmc
bound
and
test
and
stos
das
in
xchg
or
dec
out
jg
sub
mov
nop
gs
xor
ljmp
inc
mov
sub
push
dec
xchg
rcl
and
loope
inc
inc
rcrl
push
cmpl
aaa
pop
ret
and
or
add
adc
xor
and
lods
xor
push
xchg
fwait
loope
out
aaa
sub
xor
push
fwait
or
add
push
cs
movb
lods
or
stos
sub
pop
orl
xor
sub
dec
fwait
adc
mov
stos
sbb
sub
mov
pop
sub
fcomp
and
add
loopne
das
jl
xor
xor
imul
popf
xor
ljmp
jmp
fidivrl
aad
loopne
ljmp
sbb
lea
arpl
cld
mov
adc
push
dec
inc
mov
scas
inc
sahf
adcl
ficoml
cld
pop
jb
hlt
outsb
xchg
cmp
aam
jmp
cmp
aam
jmp
stos
dec
and
sub
pop
dec
push
adc
push
or
cwtl
js
and
xchg
xor
outsl
test
sub
dec
pop
jnp
clc
lcall
lret
mov
adcl
add
rcl
mov
mov
repz
and
xchg
ret
cld
pop
or
nop
pop
push
ds
xlat
hlt
leave
mov
dec
pop
sub
sar
pusha
or
xchg
scas
popl
adc
xor
clc
ds
sub
cwtl
aas
mov
and
addr16
lahf
dec
sbb
mov
xchg
mov
dec
sbb
push
int
daa
xchg
jle
jns
adc
ja
leave
sbb
loop
inc
jg
xor
loope
out
jae
xor
and
push
mov
cwtl
mov
addr16
aaa
ljmp
mov
movsl
jns
addb
mov
fs
lret
jge
cmp
push
jae
scas
push
pop
mov
or
mov
addr16
cltd
xor
nop
sub
iret
jno
push
mov
jmp
sbb
cmc
fwait
xchg
jb
out
add
mov
cmpsl
dec
insb
out
jl
push
xorb
sbb
mov
out
movsl
cmp
fadds
loopne
jmp
xor
out
sbb
mov
inc
mov
popf
fnstsw
dec
dec
in
push
push
cmp
int
aas
adc
mov
fidivl
dec
adc
arpl
sbb
xchg
inc
lock
push
jb
xorb
das
lock
subb
mov
dec
mov
fldl
aaa
sbbl
addb
cmc
add
call
int3
sub
jmp
inc
push
inc
fwait
cmpsb
cmp
sbb
fdivl
shll
fmul
fwait
push
lret
xchg
mov
mov
aas
in
sbb
out
iret
shlb
adc
stc
cwtl
subb
push
sub
lcall
and
dec
pop
sbb
das
stc
xchg
pop
adcb
cld
iret
popa
das
jl
dec
ja
shll
cmpsl
bsf
mov
lahf
out
aad
sub
jns
sbb
and
fcomi
mov
cmp
mov
cwtl
and
jnp
in
sub
fcompl
jae
cmp
cmp
add
adc
jge
lahf
mov
and
rcrl
das
pop
shlb
stos
iret
mov
loope
mov
jne
cmp
daa
cmp
xchg
xchg
and
stc
add
mov
mov
push
or
sbbb
inc
aam
adc
xor
ja
inc
dec
jo
pusha
push
icebp
fs
iret
mov
loope
cwtl
sbb
jecxz
sbb
xchg
iret
js
fbstp
add
lea
test
cs
dec
adc
xchg
loope
push
movlps
lds
movsl
adc
lods
sbb
shlb
ds
int
add
loope
pop
sbb
dec
fldl
lock
ljmp
call
ror
xor
ret
mov
and
sbb
adc
push
cmp
adc
xor
add
or
mov
sahf
out
out
pushl
cmp
cmpl
mov
xor
mov
add
mov
sbb
mov
daa
cmp
add
shll
xor
faddl
arpl
imul
gs
inc
test
jae
in
cmp
or
xor
lret
out
fistps
cmp
xchg
movsl
out
je
data16
mov
mov
in
xchg
nop
sbbl
mov
shll
and
test
pop
into
mov
inc
das
fildl
xchg
jne
test
or
mov
inc
je
insl
push
fdivrl
and
out
dec
xlat
xchg
aaa
idivb
nop
cmpsl
test
mov
divb
sahf
dec
movsl
jne
iret
mov
xchg
inc
pushf
int3
arpl
shrb
into
fistps
in
xor
xchg
sub
pop
sbb
loope
lods
lds
dec
cmp
cmpl
jb
clc
into
icebp
inc
push
inc
xor
push
push
test
sahf
int
fcmovnu
mov
push
call
push
xor
xchg
jbe
lods
sbb
or
lahf
mov
mov
hlt
push
cld
pushl
sub
outsb
mov
adc
andb
add
dec
mov
loop
std
push
push
mov
xchg
scas
insb
cmp
ss
mov
xor
jmp
insl
mov
jno
jo
jno
jae
mov
dec
xchg
out
nop
dec
push
mov
cmpsl
sbb
outsb
mov
jnp
ficompl
push
call
pop
sub
insb
fisubrl
andps
js
xchg
jge
out
bound
push
flds
iret
mov
push
pop
xchg
shl
pushf
ds
dec
xabort
jbe
int3
pop
fisubs
in
test
stc
popf
pop
and
add
fmul
sti
or
out
ret
sti
rcll
add
cmp
add
stos
adc
cwtl
bound
out
nop
add
sbbb
mov
clc
xchg
in
popf
sbb
push
lret
ret
jl
or
stc
repnz
movsb
xor
outsl
xor
xchg
imul
and
leave
int
xor
scas
or
push
cld
jbe
cmpsb
dec
stos
or
sti
sti
cmp
pop
adc
xor
xchg
imul
mov
add
add
mov
mov
cmp
mov
repnz
lahf
test
imul
inc
out
stc
dec
mov
in
inc
inc
dec
adc
jp,pn
jge
pop
jp
es
rcrl
movsl
movsl
lret
es
ss
pushl
fmuls
insl
fs
sbb
xchg
cltd
pop
mov
inc
insb
std
sbb
push
mov
in
push
sarl
mov
insl
mov
popf
in
roll
sbb
mov
xchg
rorb
jmp
cmp
push
fiadds
or
call
pop
xchg
mov
push
aam
aaa
jnp
dec
shrb
dec
sub
movsb
test
xor
mov
inc
or
mov
jns
enter
lea
xchg
mov
jp
enter
cmp
mov
xor
fidivrl
aas
xchg
cmp
mov
loopne
and
mov
in
call
mov
and
pop
ror
sbb
ror
ds
enter
notl
fnstcw
mov
popf
mov
xor
mov
fiaddl
and
lahf
adc
cmpl
imul
pop
add
test
fcom
iret
ss
jbe
adc
push
mov
adcb
popa
jl
push
pop
pop
test
ja
addb
mov
inc
insb
cs
or
femms
dec
xor
pushf
pop
mov
sub
jmp
add
int
movsl
inc
inc
inc
cmp
jns
mov
cmp
inc
push
leave
fdivr
aaa
inc
xchg
repz
out
mov
mov
or
push
cmp
std
scas
sub
push
popw
and
fistpll
testl
mov
or
pop
push
pusha
scas
into
jnp
out
ret
mov
jmp
xchg
lahf
out
cmp
and
ror
lods
lahf
xor
pop
inc
jo
xor
stc
dec
enter
add
aam
and
movsl
leave
jb
mov
repz
xchg
sbb
fistpl
jne
jecxz
pop
and
xchg
and
or
pop
rcrb
mov
movsl
mov
add
popa
sub
movsl
decb
call
xor
imul
cmp
dec
cmpsl
pop
cmp
cmp
int
sbb
mov
sbb
sahf
mov
lock
push
sahf
cmp
or
icebp
je
xor
movsb
call
mull
sub
sahf
add
addr16
pop
aas
mov
rorl
cmc
pop
dec
into
jecxz
shrb
int3
lods
mov
add
cmp
in
dec
out
mov
shl
aam
mov
inc
lds
xchg
push
testb
dec
mov
lahf
mov
jmp
dec
vorps
jg
add
pop
jnp
jge
push
movsb
and
mov
stos
mov
cmp
nop
inc
test
imul
pop
mov
es
mov
aaa
inc
inc
stc
xchg
and
xchg
add
jle
push
pop
lods
pop
test
mov
fidivs
ja
rcr
cmpsl
cli
inc
loop
add
fmull
les
add
and
hlt
dec
cmpsb
loop
scas
adc
imul
jnp
into
sub
xor
sub
xor
data16
ret
out
jg
mov
xchg
jl
out
pop
rcll
fstp
pop
mov
rcll
sub
aaa
pop
pusha
mov
sbb
imul
pop
and
outsl
xlat
clc
xchg
movl
jge
mov
stc
mov
aaa
loop,pn
ja
into
rep
aaa
dec
ret
fimuls
jl
adc
scas
and
dec
push
pop
outsl
loope
xchg
rorl
cmp
mov
repnz
push
pusha
add
fmull
push
adc
dec
or
test
test
fldcw
dec
cmp
pop
jns
mov
cmp
psubb
in
dec
sbb
lock
mov
inc
int3
mov
inc
push
cmp
adc
pushf
mov
es
outsb
scas
in
xchg
xor
gs
jle
test
inc
mov
test
cltd
dec
nop
push
and
sbb
imul
or
lret
call
lahf
cwtl
adc
in
xchg
xchg
test
pop
loope
imul
cmp
jmp
lods
push
mov
mov
insb
sbb
xor
cmp
adc
sub
inc
cmovge
lret
bound
sub
test
mov
sbb
jmp
jecxz
mov
mov
pusha
push
test
ret
mov
test
sub
mov
les
push
daa
push
and
aas
push
nop
inc
fisubs
iret
popf
xchg
cmpsl
fmul
lds
inc
outsl
xlat
sub
test
push
mov
xchg
mov
cltd
jle
mov
test
push
pusha
dec
clc
outsb
dec
inc
hlt
pop
insl
loopne
xor
jns
stc
or
jns
xchg
loop
xchg
push
stos
xchg
adc
inc
scas
stos
shrl
repnz
aaa
add
out
add
gs
cli
jge
cmpsl
aaa
push
je
mov
mov
stc
cmp
pop
jo
int3
push
pop
imul
popa
pusha
mov
nop
sbb
in
clc
and
mov
sbb
enter
repz
sbbl
push
jl,pt
daa
aaa
cmp
scas
fidivl
add
stc
dec
ret
xchg
aas
push
jmp
and
mov
in
add
add
pop
int3
dec
jl
out
xchg
xorl
pop
imul
lock
pop
ja
imull
test
inc
popf
pop
mov
jae
pop
jge
stc
add
and
sbb
mov
or
incl
adc
movsb
xor
insl
aas
sahf
pop
out
divb
out
push
mov
jp
mov
rcll
int3
scas
dec
xchg
or
xor
push
mov
or
pop
sub
in
xlat
push
and
test
inc
mov
add
inc
mov
inc
xchg
or
pop
xchg
decb
stc
ret
mov
mov
pop
push
inc
aas
xchg
jecxz
pop
icebp
js
cld
std
fs
enter
aam
mov
jno
push
loope
inc
jge
aaa
out
dec
lahf
rcll
outsb
dec
mov
push
icebp
out
sbb
mov
cmp
xor
iret
lret
pop
adc
xor
outsl
mov
out
dec
out
je,pn
and
pop
mov
xchg
mov
ss
pop
inc
pop
pop
mov
sub
pusha
bndstx
add
inc
pop
filds
jno
push
mov
das
popf
outsb
cmp
dec
jecxz
push
cli
jae
out
mov
out
mov
jmp
and
fimuls
cmc
iret
mov
repnz
pop
add
mov
dec
daa
mov
cmc
shll
lcall
lahf
les
push
lret
subl
mov
sub
pusha
mov
jno
pop
gs
fwait
adc
stos
lds
add
lcall
push
ret
push
sahf
pop
mov
mov
rcr
lock
das
rol
xlat
neg
cs
fucom
mov
jnp
cmpsl
sub
sbb
jle
lock
fwait
outsb
xor
test
xchg
rcl
loop
xor
lea
sbb
pop
mov
cmpsb
sub
mov
fdivl
sbb
popa
cs
ljmp
das
jb
int
dec
jle
xor
int3
add
add
fs
xor
xchg
movsl
and
cvtps2pd
xchg
mov
jnp
mov
int3
cmp
jne
cmc
dec
popa
pop
lea
push
push
jno
mov
jo
aas
or
lcall
pop
jns
xchg
add
pop
aam
mov
orb
insb
or
push
cld
lods
mov
ss
sbb
mov
sbb
jge
lods
out
cwtl
in
xchg
popf
mov
adcl
jns
pushf
mov
cmpsl
mov
adc
lcall
fsubs
xchg
enter
dec
dec
pusha
push
adc
out
into
mov
sub
out
jns
xchg
xlat
pop
enter
sarb
adc
jno
sarl
cli
popa
xchg
jno
addr16
pop
push
scas
andl
fisubs
int3
les
xchg
and
jbe
xchg
jae
fiadds
xlat
cmc
jno
into
sub
les
cmpsl
xchg
fisubl
add
jmp
shlb
daa
xchg
xor
dec
sbb
or
cmp
jge
into
arpl
xor
test
insl
pop
out
or
adc
stos
in
jb
pop
pushf
rorb
sbb
int
mov
iret
pop
sbb
add
inc
addr16
jl
in
out
dec
addr16
sub
dec
in
mov
sub
or
pop
mov
test
pop
and
std
dec
outsb
data16
dec
sub
jecxz
or
push
cli
and
lea
sub
or
cmp
lahf
jecxz
enter
nop
cli
ds
cmp
cli
ja
lock
inc
sub
das
sahf
jb
cmp
xchg
xlat
mov
lahf
aaa
xchg
or
js
pop
adc
xor
shlb
xor
dec
jne
mov
mov
push
adc
int3
out
mov
pusha
pop
add
xor
pop
mov
lods
lds
xchg
ds
clc
xor
mov
xor
test
inc
in
test
aas
add
cmp
mov
movsb
femms
call
test
mov
jae
fwait
movsb
pop
adc
jg
ss
ret
add
push
adc
repnz
outsb
lea
push
aaa
movsl
mov
movsl
push
add
scas
jmp
popf
clc
sbb
pusha
dec
imulb
sub
sbb
xor
movsb
and
insb
ja
scas
roll
xchg
rep
and
stc
mov
and
push
jo
dec
outsb
sahf
adc
out
dec
popf
cli
push
int3
xchg
push
xchg
orl
dec
xchg
lds
push
adc
gs
jmp
lret
icebp
mov
fdivp
or
push
mov
loopne
xor
sahf
insl
inc
xorl
add
sbb
inc
lods
daa
mov
repnz
dec
inc
scas
data16
popl
in
or
lahf
pop
add
dec
mov
enter
testl
fwait
mov
cmpsl
mov
mov
ss
push
cmp
mov
and
xor
sbbb
add
jg
aam
arpl
sub
dec
pop
mov
sti
out
jb
cmpb
and
fnstcw
dec
inc
into
das
xchg
jl
ret
inc
jae
std
add
mov
test
xor
dec
push
xchg
pop
shl
leave
jp
movsb
pop
push
cmpsl
in
push
mov
inc
in
in
mov
xchg
jmp
das
inc
inc
xchg
das
adc
cli
andl
mov
fistps
cltd
call
mov
or
in
push
nop
insb
dec
dec
pop
shrb
dec
movsl
pop
mov
cmpsl
mov
lahf
popl
flds
mov
sbb
movsb
lea
xor
aas
mov
orb
mov
lds
mov
std
push
adc
mov
stos
aas
push
lahf
insb
pop
cwtl
andl
jecxz
pop
jb
ret
orb
or
mov
sbb
stc
in
lods
mov
out
or
add
push
cmp
lret
fdivs
nop
scas
inc
mov
jp
jl
mov
xchg
add
pop
or
scas
pushf
mov
cli
mov
xor
in
jnp
stc
test
outsb
cmp
loop
mov
push
mov
outsb
add
lea
dec
push
kmovw
mov
xlat
daa
cmp
xchg
sar
jb
ret
jmp
stos
push
addr16
std
mov
pushf
pop
adc
repnz
and
add
sbb
scas
push
mov
stos
movsl
loope
inc
xor
jl
inc
mov
iret
fucomi
movsb
in
aad
cmp
or
hlt
fwait
sbb
dec
adc
or
jne
out
sbb
and
outsb
xor
push
out
mov
sub
xchg
stos
sub
inc
mov
jg
sahf
scas
push
fildl
mov
inc
mov
movsl
enter
out
icebp
imul
xchg
enter
stc
data16
pushf
les
adcl
or
xor
dec
hlt
out
fwait
dec
and
add
pushf
aas
inc
mov
mov
push
push
push
and
sbb
cmc
call
mov
sbb
int
insl
inc
mov
es
dec
popf
push
pop
xchg
jbe
stos
push
roll
fstpl
inc
jno
in
inc
jmp
inc
xorl
pop
lcall
mov
pop
jno
jns
mov
cli
fstl
or
xor
test
jne
lret
xchg
pop
stc
rcrb
dec
cmc
shr
loop
push
rcrb
addr16
cmpsl
add
dec
xor
popa
pop
jle
mov
loop
insl
testl
sub
xor
jnp
test
jle
add
adc
ss
rcrl
sub
sub
sahf
mov
adc
or
lods
sub
sub
xor
add
int
addr16
and
addl
cmp
loop
daa
ja
ds
jae
pop
stos
imul
andb
mov
sar
sub
xchg
and
test
xor
xor
pop
push
leavew
jl
popa
xor
push
aad
dec
mov
and
and
sbb
adc
aas
scas
das
fwait
pop
clc
clc
or
insl
pop
pop
mov
stos
movsl
andb
aam
xchg
mov
mov
ja
cltd
push
popa
sub
mov
adc
lret
cli
call
les
sub
out
dec
negl
ficompl
xchg
push
mov
gs
pushf
cmp
mov
insb
lods
out
mov
mov
scas
scas
add
call
push
int3
push
fldenv
add
mov
neg
mov
dec
jl
in
or
sbb
sub
lods
mov
fidivrs
cmpsb
fwait
pop
ret
in
iret
sub
cld
pop
xchg
sbb
dec
enter
add
mov
ja
jno
jl
lods
fnstsw
xor
test
ja
out
dec
fbld
xchg
mov
inc
sub
cmpsl
or
sarl
jl
out
repnz
outsb
cmp
shlb
sbb
pop
mov
outsb
xchg
cmp
scas
imul
jne
sbb
pop
pop
incb
dec
jae
insb
jmp
cli
push
mov
mov
adc
jbe
inc
cwtl
addl
fbld
and
mov
jae
mov
shr
cld
xchg
or
test
push
add
gs
dec
outsb
roll
sub
or
sbb
xchg
xchg
cltd
aad
loopne
inc
xlat
jb
int3
test
mov
pop
je
mov
dec
pop
flds
lcall
dec
dec
int3
ds
cmp
mov
mov
pop
imul
jo
arpl
add
stc
int
cs
repz
lock
jmp
lds
mov
jnp
dec
sub
pop
cld
outsl
cmp
lods
push
sti
adc
dec
pop
in
les
inc
mov
mov
mov
push
leavew
lods
cmp
mov
xchg
mov
mov
shll
dec
cmp
addr16
les
aas
scas
mov
ljmp
dec
ret
cmpsb
jne
adc
jno
clc
jp
test
daa
push
lcall
imul
test
push
and
daa
test
ret
mov
pop
sub
dec
lods
fs
xchg
repnz
dec
out
or
mov
movsl
inc
ljmp
cmp
xchg
mov
cltd
ljmp
sbb
or
in
push
ret
push
sti
dec
lret
aad
mov
jb
xchg
bound
or
xchg
jg
mov
stc
push
bound
out
arpl
insb
mov
movsl
or
dec
or
inc
je
xorb
rolb
jmp
push
fdivs
andb
js
out
mov
mov
inc
inc
in
xor
lret
xorl
insl
stc
and
inc
pop
pop
and
ret
sahf
pop
or
fstpt
in
jb
and
out
test
push
cmpsb
scas
shll
mov
ljmp
adc
cmc
sub
push
and
inc
mov
inc
icebp
out
pop
scas
add
imul
mov
dec
insb
jecxz
ljmp
push
mov
add
daa
fwait
insl
cmp
and
mov
dec
aas
and
xor
fcomp
std
or
mov
mov
pop
inc
mov
in
mov
adc
jnp
in
mov
cmpsl
nop
out
lea
out
inc
jg
xchg
xor
aam
sbb
dec
push
cld
xchg
push
xchg
jnp
lret
imul
insl
sbb
sbb
lcall
in
fbstp
push
sbb
imul
inc
iret
mov
nop
sub
out
adc
hlt
les
adc
jno
jge
jns
stc
iret
mov
shrl
sbb
fsqrt
xchg
jl
sub
pop
or
sahf
mov
bound
jp
mov
jae
inc
xor
or
sbb
andb
xlat
push
jg
xor
sbbb
or
hlt
or
or
repnz
ja
pop
or
xchg
addr16
pusha
loope
jne
sub
pop
mov
sub
mov
and
mov
cmpsl
dec
daa
adc
stos
adc
incb
daa
inc
or
push
push
iret
and
inc
mov
cmc
pushf
insb
aas
aaa
lds
fisubrs
jle
xor
in
xchg
stc
test
push
scas
push
inc
movsl
sub
orps
sbb
out
jle
shll
or
xor
adc
mov
inc
xchg
sub
or
sub
and
enter
dec
sarl
jl
std
insl
test
pop
mov
scas
pushf
push
cmp
ror
call
xor
jl
push
jo
push
push
notb
mov
add
repnz
fidivrs
fs
rclb
repnz
scas
aaa
dec
add
repnz
sbb
sahf
in
pop
jl
rorl
mov
das
push
sub
cmp
push
rorb
out
loope
mov
add
or
loop
adc
sbb
or
out
les
ds
nop
shrl
xchg
addr16
adc
jnp
ret
and
sarb
sub
jge
pusha
xchg
adc
jmp
in
ret
stos
dec
push
int
aad
fnstcw
cmp
pop
insb
gs
nop
dec
fwait
test
push
or
push
add
cli
scas
jp
cs
xlat
pop
insb
lea
fildll
sub
adc
js
and
daa
sub
mov
push
add
psllw
or
frstor
icebp
outsb
xchg
xchg
add
mov
popa
dec
and
and
push
inc
adc
mov
daa
loope
loop
stos
or
call
or
jmp
ss
ret
les
and
adc
loope
imul
call
jl
insl
icebp
inc
fsubl
fs
fcomps
add
rorl
rcrl
or
xchg
push
cmp
jmp
push
movsb
fistpll
call
imul
cmpl
lea
mov
mov
cmp
add
xchg
push
in
leave
andb
fwait
insl
js
fidivl
add
push
ret
pop
sbb
lods
mull
lcall
test
cli
push
sub
xor
popa
shrb
adc
adc
pop
jae
xchg
inc
fcom
insl
movsb
mov
rclb
inc
ja
push
cld
inc
gs
lea
cmp
stos
mov
iret
cmpsl
shrb
test
xor
push
xchg
sbb
mov
mov
mov
xor
add
mov
test
or
xor
int3
pop
sub
shll
pop
and
jmp
cmp
scas
imul
cmpb
ja
lret
pop
dec
jg
fs
push
adc
mov
fwait
out
repz
icebp
test
sub
imul
pop
dec
and
in
js
and
cmc
cmp
ficomps
jle
jge
and
jg
add
pop
repz
sub
mov
mov
stos
pop
dec
mov
cmp
adcb
scas
sbb
popf
mov
je
shl
sarb
cltd
imul
addr16
jg
fcmovu
add
lea
fisubrl
pop
fiaddl
loop
mov
push
dec
test
sbb
cmpsl
es
xchg
out
push
and
push
mov
cmc
xor
lret
xlat
push
imul
or
fidivl
nop
pop
pop
movsb
add
arpl
add
mov
sub
les
sbb
adc
lahf
pop
rcrl
addr16
jne
sub
adc
adcb
add
pop
cltd
ret
mov
imulb
rorl
jo
jl
add
negb
cmp
test
int
lds
fcompl
xor
xor
lcall
cld
xchg
cli
sub
das
hlt
out
xlat
cmp
mov
pop
sbb
mov
hlt
iret
int3
popf
arpl
adc
and
jnp
add
aas
mov
jmp
aad
mov
call
and
les
jp
dec
mov
inc
push
hlt
pushf
outsb
sbb
lret
lret
fstpl
data16
aas
jb
inc
and
mov
and
bound
mov
mov
ret
lret
loopne
or
sub
enter
sbb
jo
adc
mov
lahf
out
int
add
mov
sarb
jecxz
or
dec
fadd
out
or
add
call
jg
fadd
sub
pop
cli
fcompl
scas
pop
fs
int3
adc
pop
rcrb
push
jecxz
test
or
fdivrs
out
push
push
jb
shlb
outsb
imul
dec
mov
gs
rorl
idivl
repz
pop
sti
loopne
mov
add
jp
add
mov
inc
fadds
mov
mov
into
pop
in
nop
lret
pop
xor
mov
aaa
sbb
push
ds
loop
jmp
mov
adc
sbb
ja
xchg
or
add
iret
cltd
adc
inc
xor
mov
mov
sbbb
stos
sub
mov
pop
mov
jae
push
mov
das
xchg
test
in
testb
pushf
and
xor
ja
das
imul
dec
mov
ds
and
clc
fcoms
sub
lcall
or
outsb
xchg
das
gs
pop
mov
jno
or
mov
mov
test
adcl
pushf
dec
mov
xor
xchg
add
stc
xchg
pop
xlat
cmp
dec
xchg
mov
mov
lock
mov
cmp
out
lea
push
call
repz
push
in
sub
loop
fs
ficomps
pop
xchg
dec
sub
ds
jae
push
scas
inc
fdivrp
cmpsl
mov
push
mov
idivl
aad
and
xor
cmp
inc
cmp
pop
jl
pop
adc
mov
xchg
add
nop
push
scas
ds
inc
mov
xchg
lods
scas
inc
imul
push
mov
test
xor
sbbl
add
mov
jmp
sahf
push
inc
mov
insl
dec
stos
cld
jns
neg
mov
in
xchg
hlt
push
sti
aaa
cmp
jb
repnz
cmp
imul
aas
jno
enter
xchg
das
jl
in
push
aam
add
in
gs
adc
inc
xchg
xor
mov
add
daa
inc
push
lss
xlat
popl
loopne
or
lods
into
dec
mov
pop
mov
daa
dec
into
or
jo
repz
mov
jecxz
lds
jnp
adc
pop
mov
add
xchg
sti
mov
mov
outsb
mov
xchg
popa
lret
jb
cld
add
or
dec
push
test
mov
scas
mov
scas
repz
fildl
daa
jecxz
push
push
sbb
ret
mov
sub
add
inc
sahf
push
lcall
mov
push
testb
add
adc
pop
mov
inc
dec
nop
mov
lret
push
adc
lea
jne
cmp
pop
mov
popf
dec
add
hlt
fists
rclb
in
and
or
push
adc
fsts
test
lods
outsl
data16
xlat
loopne
xchg
dec
stc
sbb
adc
int3
cmp
mov
xor
cmpsb
xchg
fadds
sub
xchg
sarl
add
shlb
and
mov
push
push
cmc
mov
sub
fcos
dec
cld
mov
push
xchg
xchg
clc
cmp
pop
cmpsb
sub
data16
push
stc
mov
adc
add
rcl
fiadds
movsb
xchg
mov
mov
sbb
shrl
aas
fs
cmp
mov
movsl
push
subb
bound
pop
inc
ss
and
ss
je
cmpsl
rolw
data16
cltd
fdivp
shl
jp
mov
cmp
addr16
push
sbb
lahf
add
add
mov
out
pop
and
and
ja
push
cmpl
enter
loopne,pt
mov
xor
xchg
pushf
jae
xor
cmp
xchg
into
inc
mov
andl
into
dec
xor
adcb
sub
sub
aad
inc
jae
adc
or
cmp
dec
dec
mov
xlat
popf
add
popf
out
aas
add
mov
out
mov
jne
mov
xor
into
fldt
testl
out
fists
outsb
lods
cmp
push
scas
mov
popa
pop
sub
gs
mov
xchg
and
add
mov
jb
stc
jno
or
aad
jmp
ror
shll
pop
cmp
inc
out
inc
mov
stc
jnp
test
pop
popf
xchg
in
sbb
mov
jb
arpl
sti
pop
roll
push
out
cmp
sub
pop
enter
push
mov
and
mov
das
in
jne
nop
aam
testb
ret
rorl
pusha
cmp
jno
pop
fsubr
not
gs
rorb
cltd
xor
xchg
fs
fcmove
icebp
loop
popa
gs
dec
xor
mov
dec
or
push
or
es
in
sbb
xor
sub
mov
and
cmpsl
jo
enter
out
add
in
clc
movups
dec
fistps
test
mov
mov
pop
imul
lea
sub
xchg
aaa
ret
dec
cmp
js
in
cmpsl
xchg
or
popf
cmp
xchg
ds
cmc
scas
es
jne
pop
xor
push
bound
inc
faddl
mov
fcom
cli
xchg
roll
rclb
mov
mul
pushf
mov
push
adc
push
sarl
cmp
fisubl
cli
mov
mov
scas
mov
iret
jmp
push
stos
push
in
add
mov
mov
push
shlb
lods
mov
xor
cmpsl
cli
push
inc
sti
stos
mov
push
pusha
pushf
sbb
inc
lock
shlb
loope
icebp
dec
movb
rcl
shlb
daa
fcoml
push
aam
jns
jb
out
pop
les
cmpb
popa
out
fldcw
arpl
hlt
mov
push
xlat
mov
loope
jp
roll
lods
je
daa
cmp
mov
adcb
aad
ljmp
arpl
out
fnstcw
jmp
adc
mov
inc
mov
dec
in
pop
push
movsb
cmc
mov
xchg
lea
sbb
popa
xor
aaa
mov
sub
mov
popf
dec
and
mov
dec
mov
sar
mov
out
ljmp
and
psubw
jmp
jns
jmp
call
aam
fcmovu
push
test
dec
push
enter
insb
sbbl
pop
adc
sub
sub
and
push
lods
hlt
loope
ljmp
mov
and
sbb
sbb
mov
mov
bound
in
js
sbb
cmc
lcall
inc
shrl
fucomp
pop
fsubs
call
mov
shll
jle
stos
or
jno
lcall
mov
sub
sub
xor
jle
push
xor
jo
sbb
dec
outsb
jbe
rol
nop
rorl
cld
aas
lret
lret
jle
mov
mov
and
add
add
into
and
lods
xchg
or
sub
inc
outsl
in
mov
movsl
bound
pop
stos
pop
out
leave
push
push
and
add
sbb
maxps
add
jle
xchg
push
dec
cmpsl
push
cld
add
add
pop
into
loop
movsb
stos
scas
ror
mov
shll
cmp
push
push
sar
mov
iret
add
call
mov
scas
sbb
jne
repz
sub
mov
insb
sub
cld
push
add
out
aas
stos
cli
adcl
leave
sbb
push
lock
jge
out
divps
sbb
hlt
xchg
insb
mov
pop
dec
pop
stos
dec
div
scas
ss
fcmove
mov
mov
fsts
int3
jmp
dec
jno
pop
js
mov
loopne
movsl
xor
mov
and
push
loop
in
fwait
xchg
pop
jecxz
aam
pusha
xor
sub
dec
add
xchg
insl
data16
inc
mov
dec
xchg
loop
dec
leave
fdiv
sub
aam
fidivl
cmpsl
mov
mov
inc
xchg
mov
out
mov
jmp
aam
mov
rorb
cltd
jle
stos
lods
test
sub
inc
pop
aam
add
cmpsw
dec
lahf
lret
inc
imul
push
mov
leave
inc
lods
orl
addb
repz
xchg
inc
adc
aad
fistps
mov
jmp
ficoml
push
mov
bound
shrl
dec
pop
mov
std
out
call
xchg
add
movsb
mov
and
scas
sarl
push
fstpt
mov
dec
cmp
lcall
add
std
stos
rorl
popf
and
fwait
pop
fst
insb
or
add
insb
cmpsl
loope
and
sbb
jo
inc
shl
jmp
dec
lds
mov
mov
lods
or
es
mov
loop
xchg
add
jnp
jns
rcr
mov
jecxz
andb
mov
outsl
push
dec
cmpsl
call
jno
xor
sub
jno,pt
push
xchg
leave
test
cmpsb
rorl
jb
aaa
stos
dec
test
mov
dec
mov
dec
insl
mov
mov
sub
add
out
add
nop
shll
in
and
in
pushf
int3
push
mov
jne
stos
xchg
or
hlt
push
lods
adc
sahf
add
jns
xchg
ficoml
mov
fwait
scas
cmp
aaa
fdivs
inc
ret
popa
inc
call
movsl
inc
clc
pushf
fidivs
lret
ret
pop
rcll
and
lods
inc
popf
lret
xor
ret
mov
dec
mov
cltd
pop
mov
out
sub
or
pop
test
ret
xchg
push
repz
push
push
test
fmulp
ficompl
xor
cwtl
push
push
sub
scas
leave
add
jo
mov
adc
mov
add
rol
dec
cmp
sub
cmp
addr16
orl
mov
mov
int3
mov
cmp
jo
jne
add
xor
add
xchg
daa
sbb
gs
hlt
jp
adc
es
sub
or
divl
or
scas
jecxz
lods
jg
aam
xchg
pop
jae
lahf
fdivrl
frstor
push
std
xchg
sbb
add
out
jno
adc
inc
push
mov
ljmp
xchg
or
push
mov
add
xchg
gs
leave
xchg
in
mov
out
ja
cmp
push
mov
jmp
or
ds
xchg
ret
mov
mov
lods
push
adc
enter
inc
push
jnp
popf
lahf
or
mov
cltd
arpl
adc
mov
ficoml
popa
jle
pusha
scas
dec
push
xchg
shl
fcompl
pop
dec
fdivrs
xor
inc
mov
mov
jg
loop
rclb
pop
outsb
lret
xor
decb
xchg
jg
test
mov
adc
orl
xor
test
inc
jnp
scas
lea
sti
ret
ds
shll
sub
mov
lcall
shrb
mov
dec
mov
or
mov
nop
dec
push
dec
adc
sti
mov
popa
xchg
popf
enter
mov
add
mov
pop
mov
cmpsb
mov
mov
mov
test
std
jb
jl
adc
and
cmp
movsl
das
mov
rcll
xor
inc
fiaddl
mov
mov
cli
mov
inc
imul
imul
sti
jo
xchg
cmpsb
inc
xor
andl
cmpsb
adc
aad
outsb
outsl
into
xchg
out
jbe
lcall
xchg
mov
insb
lods
in
sbb
fisubrs
xchg
lds
lods
and
loop
cmp
aam
add
xchg
cmp
shl
mov
sbb
push
mov
dec
dec
pop
stos
enter
mov
mov
mov
or
das
inc
sahf
xor
loopne
push
je
adc
aad
popf
mov
xor
fadds
enter
mov
loope
ret
dec
in
jmp
lret
inc
pop
push
out
inc
fst
jnp
ss
lret
stos
loope
or
cltd
cmp
rcr
adc
xlat
and
test
jb
add
xor
add
scas
jmp
pop
jmp
mov
xchg
and
fimuls
push
xchg
insl
fistpll
pushf
fs
dec
jae
adc
sbb
fs
testl
int
call
mov
xorl
add
in
icebp
nop
dec
out
aad
xchg
xor
cmp
pusha
stc
popa
adc
rol
fwait
jno
test
stos
in
adc
lods
leave
cmpsb
aad
dec
aas
mov
gs
int3
push
test
dec
pshufw
loope
insl
mov
adc
cmc
test
std
cld
cld
cmp
mov
inc
lea
cmp
xor
scas
jle
fldt
into
shlb
lods
cmp
jmp
mov
cmp
ficoml
mov
jge
out
xor
inc
jg
ja
movb
je
mov
insl
xchg
or
xchg
out
out
jp
divl
ljmp
cld
cmc
cwtl
xchg
sub
insb
call
test
sahf
add
push
jne
int
sub
and
pop
in
jle
sbb
push
enter
push
sub
lock
sub
in
cmc
dec
hlt
or
sub
adc
xlat
mov
xchg
mov
rorb
adc
wbinvd
lods
aad
xlat
mov
loope
dec
or
push
dec
dec
int
jbe
jb
icebp
das
sub
xchg
mov
xchg
out
add
sub
mov
push
icebp
push
mov
sbb
jecxz
js
xor
add
in
mov
cmp
cli
arpl
mov
sub
push
cltd
shl
or
mov
inc
aam
daa
outsl
dec
sti
push
ds
xor
jp
xor
push
movsb
ficoml
icebp
lods
xor
push
and
dec
or
cmp
out
out
mov
in
cmp
mov
das
lock
add
je
xor
sub
mov
aas
cld
mov
aad
test
add
jge
xchg
dec
mov
dec
or
push
shr
in
jns
cmp
in
inc
stos
rorl
insl
xchg
push
mov
jmp
add
in
stc
sub
aam
mov
stc
scas
popa
and
outsb
scas
mov
or
outsl
cmpsl
sub
adc
sbb
loop
punpcklbw
jae
pop
sbb
shl
out
lods
adc
push
outsb
lea
test
nop
dec
sub
and
sub
xchg
jle
and
scas
sbbl
das
sub
sahf
outsl
push
clc
clc
cmpsl
fisttpl
icebp
jmp
es
mov
xorl
push
or
shrb
and
jno
lahf
cli
mov
jg
cltd
mov
scas
lock
xor
out
sbb
outsl
loopne
push
adc
inc
jae,pn
je
enter
cwtl
ja
iret
insl
fiadds
dec
lods
pop
ret
popf
adc
mov
add
xchg
mov
mov
ret
push
dec
mov
aad
cli
add
popa
std
xor
loopne
aad
inc
pop
mov
pop
pop
xchg
fdivs
cmp
push
pushl
mov
pushf
outsb
xchg
push
inc
push
xchg
clc
lahf
js
int3
inc
gs
cmp
fildl
pop
mov
and
insb
pop
movsl
adc
das
mov
jbe
addr16
inc
int
add
ret
sarb
sahf
lret
xlat
jle
aam
mulb
push
shll
mov
sahf
pop
cmp
leave
mov
pop
nop
scas
inc
es
mov
lea
adc
xlat
or
cmc
cwtl
push
pop
xchg
shlb
bnd
lods
cmp
ud2
mov
jns
push
add
mov
jp
ret
lcall
popa
dec
lret
scas
fidivl
lret
in
sbb
daa
pop
xchg
pushf
fwait
insb
pop
fmuls
subl
shlb
fldenv
rcrl
pop
dec
icebp
cmpb
xchg
addr16
lods
mov
lods
mov
shlb
iret
decb
scas
push
push
lahf
adc
test
xchg
scas
xchg
insb
arpl
clc
pop
fisubs
mov
mov
adc
sbb
icebp
xchg
insl
sub
shll
mov
repnz
loop
and
xor
jecxz
adc
dec
inc
pop
aas
push
lcall
repnz
notl
mov
sbb
aaa
xor
jbe
xchg
mov
push
jmp
lods
movsl
rolb
xor
inc
mov
movsb
pop
jb
xor
and
outsb
and
pushf
aam
movsb
or
or
icebp
mov
xchg
pusha
mov
fidivs
pusha
ret
mov
popa
into
or
xchg
int3
jne
iret
jb
or
mov
sti
push
fwait
pop
lret
daa
cmpsb
sbb
xchg
lea
sub
repnz
fldt
mov
xor
mul
push
gs
and
loopne
add
mov
in
in
xchg
dec
in
cmp
cmp
xor
sub
lcall
sbbl
psubb
xor
sub
scas
aad
sub
pushl
mov
pop
inc
sbb
dec
adc
andb
jno
mov
or
jmp
movsb
mov
addl
cmp
es
mov
jne
mov
and
out
popa
inc
cmpsl
sub
pop
and
addb
xchg
and
imul
dec
xor
pusha
and
sahf
fs
dec
into
stos
mov
out
cmpb
pop
inc
jns
pushf
adc
in
push
cmp
in
cmp
dec
rorb
sub
ljmp
es
jge
ljmp
fsubr
inc
test
xor
pop
call
mov
sbb
lcall
sahf
sbb
sub
in
jg
sub
cmp
cmpl
mov
xchg
aam
in
enter
idivb
push
lds
das
pop
adc
test
mov
cwtl
add
sarl
sbb
push
xchg
push
inc
pusha
or
or
out
mov
sbb
xchg
ds
mov
inc
fildll
sub
repnz
fwait
scas
inc
add
adc
xor
lcall
daa
add
or
movsl
in
aad
stc
loop
jb
and
les
lds
and
pop
jle
pop
es
mov
cmp
std
dec
pop
jbe
lcall
jg
mov
enter
scas
iret
fldenv
dec
aam
mov
sbb
stos
dec
xor
inc
dec
mov
dec
and
xchg
stos
xchg
pushf
or
lea
in
adc
jmp
adc
jge
pop
stos
xlat
inc
out
or
imul
les
testl
andl
icebp
pop
cltd
xchg
and
mov
jnp
fistps
dec
inc
mov
sbb
out
into
scas
cmp
mov
mov
jnp
shlb
mov
andl
insl
jbe
add
je
ss
sbb
sub
cmp
pop
call
div
mulb
and
stos
inc
cmp
icebp
push
int3
faddl
pushf
lcall
outsl
fwait
sarl
adc
mov
pop
jnp
xchg
movsb
cld
xor
jno
aaa
xor
les
jle
jmp
in
in
mov
mov
sub
je
xlat
das
sub
hlt
movsl
sub
mov
adc
xor
test
int
xor
jg
jno
mov
mov
int
int3
stos
data16
insl
imul
pop
pop
test
cmp
popa
jae
sar
xchg
out
dec
outsb
orl
cmc
add
dec
mov
sub
adc
aas
or
adc
mov
inc
sarb
jae
decl
jmp
mov
xor
mov
jg
rcrl
sbb
or
int3
mov
cwtl
sbb
das
inc
inc
mov
inc
or
mov
int3
fsts
sub
jno
dec
and
sarb
lds
repnz
rolb
sub
or
sub
sub
stos
push
repz
cmp
xor
sbb
cmpsb
mov
stos
pusha
inc
push
into
cltd
inc
sub
pop
sbb
aad
dec
jns
loopne
mov
ret
mov
jle
jne
adc
adc
pause
mov
mov
lahf
dec
ljmp
push
sar
inc
cmp
lret
inc
xchg
aad
jl
cmpsl
aas
push
addr16
pop
adc
in
paddusw
aad
pop
fldcw
outsl
push
ss
xor
sub
inc
in
addr16
dec
sub
clc
add
sarb
in
jl
jnp
lcall
jbe
or
cld
fnstsw
and
dec
jno
enter
xlat
cmp
xor
sbb
xor
xchg
jecxz
popf
dec
mov
fldenv
in
test
enter
les
sbb
movsb
repnz
mov
mov
repz
pop
jp
push
insb
sbbl
xor
fxch
jecxz
pop
sub
push
sub
mov
cmc
lahf
xchg
aad
cwtl
mov
push
popa
fwait
imul
fsts
shl
jmp
iret
outsl
out
or
or
xchg
shrl
clc
xchg
inc
ljmp
dec
pushf
dec
movsb
test
stc
out
into
pop
sbb
inc
jle
mov
push
jmp
inc
imul
inc
dec
in
sub
xor
pop
inc
pop
scas
jnp
mov
test
lret
and
bound
xchg
gs
js
ljmp
jl
push
mov
push
dec
aaa
sub
push
lods
push
mov
mov
mov
insl
xchg
xor
movsl
out
or
arpl
jl
lea
xchg
inc
out
pop
ret
cmp
push
fidivrs
in
test
add
dec
or
test
inc
cli
sbb
mov
xchg
cmpsb
and
outsl
mov
lahf
mov
add
mov
sbb
push
aas
jo
lret
mov
sub
push
mov
loop
fs
or
mov
mov
je
push
lods
fldenv
and
popf
std
xchg
sub
jge
lahf
mov
rolb
outsb
push
mov
scas
push
add
movsl
mov
cmp
iret
xchg
cwtl
dec
daa
cmp
jmp
or
cwtl
xor
fnstenv
es
pop
shll
mov
sub
fsubs
das
repnz
sbb
sbb
xchg
cltd
int3
andb
sahf
add
mov
psrad
cmp
hlt
mov
nop
sbb
sub
fstl
cmp
adc
gs
add
lcall
mov
xchg
mov
mov
outsw
jns
bound
scas
jnp
subl
sub
mov
ds
xchg
insl
mov
mov
and
pusha
mov
imul
std
xor
add
and
fistpll
push
cmpsb
out
bound
inc
and
nop
aaa
add
aaa
push
outsb
movsl
aad
loop
rcll
adc
adc
add
pand
clc
pop
dec
test
mov
dec
lcall
pop
sbb
dec
lods
mov
bts
mov
pop
sbb
mov
int
xchg
imul
rcll
fs
xor
push
mov
sub
inc
or
loopne
add
bound
je
cmp
rcr
in
inc
mov
adc
fdivrs
mov
push
adc
push
ja
pop
mov
jno
adc
adc
cltd
cmc
mov
stc
dec
xchg
flds
mov
inc
aam
insl
out
mov
cmp
out
cs
xchg
mov
xchg
lret
jno
das
xchg
test
mov
jns
test
sub
lret
aad
add
movsb
add
inc
pop
js
jg
std
xor
sbb
xlat
stc
insl
xchg
test
jmp
push
pusha
fwait
sbb
xor
subl
sbb
pop
and
stc
fistpll
daa
daa
jl
push
ja
xchg
inc
xor
sub
dec
jl
pop
jo
and
adcl
xorl
mov
sub
push
xchg
pusha
sbb
jns
mov
push
dec
push
jno
push
shrd
pop
stos
xorl
fiaddl
arpl
mov
fs
and
pop
test
fcmovnbe
idivb
les
sub
push
sbb
inc
pop
pop
sub
lock
mov
adc
ret
dec
loop
arpl
adc
dec
or
dec
js
xchg
cmp
addr16
es
lods
mov
in
or
jnp
in
or
pop
push
xchg
scas
orb
pop
enter
xor
bound
lcall
sub
pop
out
aad
aaa
sti
cmpsl
in
jecxz
ja
mov
fiaddl
jb
aaa
popf
les
inc
xor
mov
aam
sysenter
loope
add
fcmovu
jb
sti
xchg
and
insb
ret
mov
jno
ljmp
movsb
sub
shrb
lret
sbb
stc
cmc
jno
jae
jmp
cmpsl
dec
sub
aaa
fisttps
mov
scas
sbb
test
ja
sti
jns
fdivl
jmp
mov
jecxz
fdivr
xchg
ljmp
jge
dec
mov
jmp
mov
movsl
rolb
sahf
aaa
shlb
or
xchg
fisttpl
aad
push
subl
cmp
cs
mov
mov
dec
or
push
mov
clc
sbb
push
adc
fwait
jmp
repnz
gs
outsl
ret
xor
or
and
push
jl
lret
pop
adc
stos
mov
lea
out
inc
aad
andl
push
inc
jge
xchg
fsubrl
sbb
adc
pop
jne
cmc
sub
xchg
pop
push
es
xor
lods
icebp
push
outsb
int3
mov
or
dec
out
sbb
and
jp
lret
mov
cmpsb
dec
cmp
popa
dec
movb
fistl
push
sbb
mov
bound
jns
adc
mov
pop
es
enter
in
sbb
mov
jno
pop
ljmp
pop
rcl
gs
pushf
rcrl
je
lods
sub
out
add
and
iret
mov
ss
lcall
jle
add
aas
hlt
jge
sub
sub
test
mov
in
in
dec
loope
or
pop
imul
lods
and
test
imulb
jmp
sahf
and
xor
repz
mov
stos
adc
movsb
aam
xchg
fs
xor
jecxz
or
fsubrp
popa
cwtl
pop
or
or
push
dec
sbb
stos
sbb
jmp
ficoml
in
repnz
aad
dec
inc
lods
jb
mov
cwtl
sub
inc
ret
cltd
mov
ret
mov
fimuls
add
sbb
jecxz
dec
test
push
mov
pusha
mov
pop
out
dec
in
pop
leave
add
or
mov
jp
ficomps
xor
fdivrl
sbbb
js
sub
mov
adc
sbb
inc
hlt
stos
mov
mov
push
ror
and
sbb
daa
fdivp
push
int
and
loope
mov
mov
sbb
clc
dec
loope
dec
mov
xchg
imul
inc
xlat
jo
inc
pop
jle
cmp
add
push
mov
lcall
sub
push
jno
lret
test
dec
push
push
push
popa
das
dec
test
repnz
mov
lds
cmp
dec
outsb
cmpsl
into
push
sub
shl
adc
xchg
test
addr16
dec
inc
add
insb
adc
lret
test
push
loopne
mov
mov
mov
fs
xor
fdivs
movsl
mov
movsb
stos
cmp
mov
push
gs
into
popf
dec
pop
push
movsb
or
jo
loop
rorl
xchg
dec
dec
aad
cmp
xchg
pusha
aam
cmpb
repz
push
pop
jae
leave
jmp
aam
mov
cltd
xorl
sbb
or
rcrl
and
sbb
mov
ds
push
lea
pop
mov
cltd
mov
sbb
not
xlat
and
es
jbe
mov
xor
add
jns
mov
in
xor
sub
inc
xchg
pop
and
fdivr
fsubrs
arpl
push
jmp
cwtl
ljmp
leave
push
sub
rcll
cwtl
into
push
lea
stos
dec
pop
fldl
and
nop
xchg
ret
xor
inc
out
into
ja
jecxz
cli
fwait
ljmp
outsl
add
mov
pop
je,pn
insb
outsb
add
ds
cmp
call
mov
lea
dec
mov
sub
in
idiv
cs
xchg
sbb
sub
fwait
mov
xchg
ja
loop
jne
hlt
mov
dec
in
dec
adc
jl
dec
ds
or
mov
lret
xchg
inc
ret
lods
cmp
sbb
mov
adc
mov
jmp
inc
sbb
and
mov
stos
mov
mov
cmpsl
push
jbe
in
repnz
push
xchg
inc
cwtl
ljmp
push
mov
call
pop
xor
std
mov
lock
push
xchg
lea
sbb
jge
fnstcw
xor
jns
push
inc
into
mov
iret
sub
nop
into
inc
shll
aas
jo
lods
loop
dec
test
push
pop
out
movl
lds
jb
mov
ret
or
sub
inc
ljmp
inc
push
ret
scas
je
andl
mov
fwait
cmp
gs
mov
test
fs
hlt
jae
xchg
xchg
daa
add
xchg
mov
cmpsl
sub
pop
cmp
cmp
shl
jecxz
scas
jge
and
bound
ja
pop
insl
out
sub
enter
sub
sub
pop
inc
scas
out
push
mov
loop
outsb
sub
mov
into
mov
pop
rcll
inc
dec
arpl
pop
mov
shl
orl
mov
popf
sbb
cld
sahf
cmp
out
xchg
adc
int
hlt
dec
fwait
push
inc
jae
pop
jge
hlt
stc
cld
xor
sbb
pusha
pop
in
xchg
cmp
sti
sub
les
mov
xchg
cmp
or
or
jno
lods
mov
pop
and
daa
je
cmp
les
icebp
int
loopne
out
pop
push
bound
mulb
adc
jge
pusha
inc
dec
or
repz
leave
lcall
roll
pop
enter
cmpsl
push
lret
lds
orl
mov
repz
lods
in
fisubs
inc
cmc
sti
dec
add
mov
sbb
or
mov
xchg
pop
mov
gs
fucomp
mov
sti
es
jnp
push
aad
repnz
inc
pop
dec
mov
xor
mov
mov
ret
adc
or
gs
test
test
ljmp
pop
mov
add
ret
adc
inc
and
mov
or
pop
es
movsb
xor
jnp
dec
mov
jb
addr16
sbb
mov
adc
xor
mov
sbb
mov
out
mov
bound
xor
sub
push
xlat
dec
and
testl
pop
test
dec
dec
movsl
adc
fwait
pop
shlb
sbb
imul
sarl
pop
ret
ljmp
jo
inc
mov
sti
xor
sub
jge
add
lahf
mov
enter
fistpl
lea
sub
mov
mov
mov
decb
pop
loope
loopne
mov
push
scas
xchg
hlt
das
stos
jno
int
insb
cmp
out
push
fwait
pop
mov
repnz
push
or
xor
aad
push
rorb
or
mov
jmp
dec
in
dec
call
test
out
shl
mov
jge
pushf
xor
fdivl
rcll
lret
inc
dec
jl
mov
mov
or
popa
out
lcall
cmp
repz
scas
or
inc
jl
das
ret
push
xchg
add
aad
or
or
sbb
fistl
scas
cmp
mov
dec
gs
cmp
adc
lret
jae
inc
xor
pop
pop
rcrb
lahf
mov
not
jge
sub
pop
inc
jns
rol
outsl
and
push
aad
jne
enter
cli
add
mov
mov
inc
pop
jp
add
push
fisttpll
adc
xchg
or
fstpl
mov
xor
notb
dec
and
mov
pop
loopne
inc
mov
push
jmp
xor
inc
lock
cs
aaa
xor
mov
stc
cli
or
mov
add
push
cmp
test
mov
test
sbb
enter
mov
push
shll
pop
push
inc
es
jle
and
mov
out
adc
cmpsb
shll
sahf
mov
mov
cld
lock
aaa
insb
leave
fwait
insl
out
push
mov
das
dec
lahf
cmp
adcb
mov
mov
mov
jle
ljmp
xlat
xor
xor
jg
mov
or
cmp
test
jns
sub
outsl
mov
inc
or
dec
in
fwait
sbb
insb
sub
sti
xchg
mov
or
movsl
lret
inc
pop
imul
mov
xchg
xchg
push
mov
inc
jbe
jg
dec
popa
push
fistps
pop
cmp
fadds
out
xchg
pop
lods
filds
sub
xchg
push
sbb
cmp
sbb
out
add
push
jbe
es
pop
and
idivb
fcoms
mov
xor
dec
mov
je
xchg
idivb
push
jp
or
mov
and
pop
mov
push
xlat
sub
pop
dec
ror
cmpsb
push
fdiv
xor
jle
cmpsb
in
pop
lea
and
in
cmp
movsb
mov
sbb
shll
les
leave
scas
mov
push
dec
push
pop
ret
cmp
mov
adc
je
stc
mov
push
sbb
in
and
xor
decb
loop
sub
xor
jb
and
cli
out
pop
adc
fldl2e
jo
lahf
inc
sahf
sbb
xchg
xor
dec
hlt
inc
cltd
mov
jns
add
stos
rorb
sahf
add
or
sbb
cmp
fistpll
ret
stos
push
adc
dec
int
inc
stos
aad
shrb
push
jecxz
insb
in
pushf
pop
xchg
dec
add
hlt
sbb
lahf
mov
in
scas
pop
lcall
jb
das
shlb
jp
rcl
popf
repnz
adc
push
mov
jge
je
adcl
cmp
ljmp
sti
lods
das
sub
shll
jnp
sahf
pop
pop
in
fdivl
loopne
out
mov
pop
add
fdivrl
cltd
add
adc
push
cmpsb
xor
sbb
ret
adc
adc
mov
adc
mov
lods
hlt
mov
sbb
addr16
lret
subb
jg
movsl
sub
jmp
outsl
xor
mov
imull
dec
sti
xor
icebp
in
pop
fmulp
cmpsl
leave
jno
arpl
unpcklps
aas
incb
dec
push
int
in
jb
inc
cltd
pop
adcb
test
adc
mov
popf
mov
das
mov
addl
add
hlt
push
jb
mov
sahf
add
sub
mov
int
jne
popf
add
cmp
fcoms
fs
test
mov
fsts
shrb
bound
sub
fildl
xchg
leave
cmc
enter
shlb
sbb
cld
xor
cld
shld
lcall
pop
pop
gs
cs
dec
shrb
mull
pop
xchg
data16
in
fndisi(8087
shl
lahf
ja
out
or
push
jne
pop
cwtl
into
dec
xchg
stos
jo
and
mov
gs
cmp
outsb
stc
pop
shrb
shll
ds
sub
data16
xchg
mov
pop
lret
cmp
jl
test
push
fildll
pop
fcoms
sub
xor
cltd
xchg
jo
add
jl
jo
inc
xchg
popl
xchg
or
test
pop
or
out
js
aaa
inc
xchg
cmp
inc
sbb
shll
adc
arpl
adc
push
xchg
icebp
ja
mov
push
or
xchg
faddl
arpl
fsubl
mov
jmp
xchg
push
mov
test
mov
xor
mov
xchg
mov
mov
push
cmp
dec
pusha
cmp
cmp
je
mov
mov
dec
sti
jae
jg
cmpsl
dec
ja
cmp
icebp
data16
inc
arpl
lods
jbe
xor
lcall
jo
add
mov
testb
mov
in
lahf
jno
and
fistl
sbb
addr16
icebp
out
push
nop
ret
mov
add
ss
cmp
loope
jmp
loopne
inc
in
mov
or
adc
movaps
add
and
test
dec
sbb
fdivl
pusha
pushf
lret
nop
push
int
xlat
mov
pushf
rcll
xor
cs
or
shr
lea
fisubrl
ds
lea
jge
cmovno
hlt
popa
dec
jo
call
call
ret
pop
mov
stos
test
sbb
push
mov
add
dec
out
bound
lret
sub
test
push
xor
icebp
dec
ret
inc
adc
sub
inc
addb
mov
xchg
divl
mov
fwait
loop
fs
subb
push
cmp
cld
jo
ja
in
inc
and
nop
dec
icebp
mov
mov
ja
loopne
shl
and
inc
sub
lods
outsb
ds
aad
dec
push
cmc
loopne
sub
cmpsl
daa
sbb
jecxz
mov
sarb
lock
leave
scas
adc
into
add
mov
lahf
fildl
icebp
push
jecxz
mov
dec
xor
in
pop
arpl
xchg
sub
fwait
mov
insl
xor
sub
stos
loopne,pn
push
sub
fistps
fcoms
push
mov
fimuls
dec
cli
insl
les
nop
cmp
xor
ljmp
sbb
mov
in
jl
into
gs
push
cmpsl
and
sarb
pop
adc
hlt
out
cli
push
js
in
arpl
mov
outsl
int
mov
rolb
pop
pop
sti
jp
inc
cltd
and
inc
into
jnp
data16
or
sub
out
or
push
lret
sub
xor
pushf
adc
out
ret
or
lds
lret
cltd
xchg
into
cli
pushf
mov
les
xor
arpl
push
mov
jge
pop
dec
cld
inc
push
in
xor
inc
inc
lret
pop
jmp
xor
insl
or
sub
leave
mov
popa
jecxz
int
mov
push
sub
loopne
sub
cwtl
cmp
push
imul
or
ffree
and
xchg
mov
mov
or
jmp
pushf
dec
jge,pt
xor
pop
sub
mov
jecxz
jp
mov
cld
jnp
aas
fistpl
dec
mov
loopne
hlt
repz
mov
imul
lds
cld
cmp
negl
gs
loope
fiadds
adc
loope
mov
jno
outsl
mov
dec
lahf
sahf
cmp
mov
ds
test
sbb
sub
dec
clc
cmp
mov
rorl
mov
xchg
arpl
xor
les
cltd
sbb
inc
push
pop
xchg
aas
inc
sti
lea
in
mov
xchg
ljmp
mov
pusha
std
mov
out
test
enter
mulb
push
loopne
sbb
fdivl
or
ss
push
ljmp
xchg
pop
sub
add
or
xchg
cmp
sarl
mov
les
scas
adcb
sub
inc
aas
test
pop
jg
pop
int3
jl
push
jns
push
and
pusha
mov
call
sbb
push
popa
mov
dec
lea
sarl
fucomp
xor
and
dec
xchg
fsubl
lahf
adc
fs
fstpl
mov
jbe
cmpsb
push
subps
in
scas
pop
das
mov
or
or
fisttpll
hlt
int3
loopne
mov
adcl
aam
and
jp
bsr
adc
adc
push
xchg
pop
jl
fbld
movsl
scas
push
out
sbb
jge
push
xchg
dec
cltd
or
into
xchg
add
push
adc
jne
mov
pop
sbb
pop
pushf
xor
aam
mov
rcll
sbb
loop
cmp
or
cmc
or
cs
lods
jp
aaa
adc
mov
add
shl
mov
sub
and
jle
repz
mov
test
push
xchg
mov
cld
pusha
inc
inc
data16
jne
sbb
out
sub
aas
in
cwtl
std
xchg
add
dec
pop
cmp
mov
jns
xchg
lret
cmp
sub
sub
inc
push
leave
test
repnz
xchg
lcall
fsts
dec
insb
loopne
mov
pop
xchg
aad
adc
into
into
mov
rcrb
test
inc
aaa
cs
xchg
inc
cmp
cmp
mov
mov
xchg
ja
mov
adc
jmp
inc
fcmovnu
cmp
mov
inc
mov
cwtl
xor
sarb
fdivl
sbb
cmp
ss
push
add
push
jnp
jns
xor
in
jle
and
add
xchg
adc
iret
std
push
pop
jns
aad
stos
enter
int3
cmp
adc
rclb
popa
cmp
jnp
cmp
mov
cmp
js
jle
add
sub
out
rcll
mov
lea
xchg
scas
fistl
sub
std
pop
mov
int3
bound
push
rorb
push
aaa
mov
xor
inc
pop
popa
cltd
hlt
je
xlat
out
pop
xlat
data16
lods
cmp
fstp
int
and
fiadds
push
add
loope
pushf
jne
test
nop
push
enter
ljmp
in
les
imul
ret
sbb
mov
fisubl
mov
mov
not
in
xchg
jge
mov
push
mov
fadd
pop
hlt
sbb
shlb
xor
cmpsb
cltd
or
pop
pop
scas
insb
dec
frstor
pop
cli
mov
test
adc
or
sub
shlb
push
xbegin
roll
imul
fisttpll
and
pop
xlat
divb
or
es
xchg
sbb
ret
roll
dec
sub
or
jbe
and
push
jmp
in
add
pop
aam
sbb
shrb
pop
lock
rorl
shrb
dec
insl
pop
dec
popf
dec
fwait
jns
push
test
aam
lret
movsl
sub
gs
add
aad
jno
fisttps
xchg
and
cmp
fldt
sbb
arpl
pop
into
jp
mov
jb
mov
outsl
cmp
jno
sbb
cs
mov
push
out
movsl
ret
in
imul
sahf
xchg
jne
add
mov
insl
sbb
mov
jl
mov
pop
inc
push
push
mov
loope
cmp
hlt
xchg
and
jbe
jb
aam
jle
lret
aad
inc
sbb
test
arpl
jp
aad
in
cmp
fdivrs
dec
sub
mov
mull
mov
jmp
xchg
and
jns
lcall
sbb
scas
hlt
sbb
ficoms
pop
out
loopne
push
out
and
or
mov
subb
jle
jl
cmp
cmovg
nop
out
in
mov
or
add
mov
mov
xor
push
mov
mov
adc
rorb
add
ret
push
mov
xlat
test
js
inc
mov
pop
loop
fmuls
cmp
test
js
add
mov
pop
shrl
and
xrelease
mov
jnp
jbe
ds
lahf
movsl
push
or
xchg
jg
arpl
cs
sbb
adc
testb
push
out
push
inc
outsb
aad
fwait
sbb
daa
scas
mov
xchg
or
fs
push
and
gs
gs
stc
ss
insl
dec
jnp
push
ds
repnz
add
jne
cmp
xchg
fldenv
cld
mov
adc
jbe
aaa
ret
aas
repz
push
mov
inc
adc
push
test
repnz
sbb
fnstenv
mov
xchg
add
jl
push
jecxz
es
fnstenv
out
jnp
pop
mov
test
call
rcr
push
int3
mov
es
push
or
cmp
pop
iret
outsl
or
mov
mov
pop
stos
jl
loop
mov
xor
push
add
ds
jns
add
jno
movsl
sahf
jbe
xchg
imul
enter
mov
ja
inc
push
mov
add
push
les
or
or
jne
lds
subb
jp
push
dec
ret
mov
lret
scas
dec
lret
pop
inc
sub
add
mov
fisttps
outsb
insb
mov
push
jae
push
cs
pushf
dec
fnsave
outsl
loope
lcall
hlt
cmp
xor
rolb
rcrb
popa
leave
jns
jge
push
dec
adc
or
xchg
insl
scas
xchg
mov
mov
fildll
ror
adc
xchg
in
dec
cld
lahf
inc
mov
pusha
mov
js
int
cmp
popa
adc
adc
pop
mov
pop
cmp
mov
cmp
jle
loopne
push
negl
add
mov
test
in
cmpb
pop
cmc
xchg
push
popa
sbbl
cmp
mov
push
cld
test
fistps
and
cmpb
or
adc
and
imul
cmp
jg
xor
push
data16
lds
mov
aad
scas
xchg
shlb
fwait
out
adc
mov
mov
cmc
rcr
adc
loopne
es
sbb
sbb
jno
sahf
xchg
fisubrl
test
nop
ficoms
sti
xchg
dec
xchg
mov
sbb
sbb
stos
sbb
ljmp
add
adc
fildll
in
jmp
xchg
stos
pop
pop
imul
inc
int3
mov
mov
ret
andl
push
mov
stos
popl
dec
loope
stos
or
subl
mov
mov
xchg
popa
enter
stos
fistpll
xor
jnp
icebp
ljmp
xor
mov
and
adc
mov
fdivrl
test
inc
jnp
lods
jno
loopne
jecxz
aam
add
fldt
repnz
lock
and
cmpsl
jle
sbb
xchg
or
mov
popa
addr16
push
shrb
pusha
adc
js
add
mov
sarb
nop
or
cld
filds
psrld
out
pop
xor
inc
call
cmp
pop
out
lret
push
inc
mov
movb
rcll
mov
out
xor
mov
jb
cli
aaa
mov
cmp
xor
outsb
lret
and
push
aam
and
jge
mov
xor
loope
loopne
mov
test
fs
fdivrl
insb
xor
add
insl
mov
imul
jns
pop
stc
insl
lds
mov
push
or
dec
xor
lcall
mov
loopne
adc
pusha
cmc
mov
push
sub
in
test
sub
fmuls
imul
lods
mov
dec
fadds
decl
push
mov
or
push
mov
lret
movsb
xchg
in
imul
jae,pn
or
std
mov
sub
dec
enter
in
sbb
dec
xlat
out
scas
jae
loop
push
ljmp
xchg
out
into
pop
dec
xchg
test
cs
mov
xchg
jge
jae
sub
out
xor
mov
lret
inc
or
aas
ret
sarb
xchg
fwait
jmp
dec
les
in
push
ds
sub
dec
push
andl
add
test
addb
adc
xchg
scas
rclb
lret
dec
mov
outsb
mov
push
inc
jl
adc
push
sbb
push
movsl
sub
and
adc
fimull
std
push
icebp
stc
out
sbb
jmp
fwait
mov
ja
movsb
add
shlb
jmp
ja
adc
inc
push
roll
pushf
popa
jmp
cmp
into
add
cli
dec
mov
js
andb
mov
inc
shlb
mov
mov
cwtl
inc
jecxz
pop
ds
mov
lahf
xor
loop
outsl
sbb
cmp
jno
jge
pop
cmpsb
add
inc
mov
ret
jl
add
lods
mov
outsl
jae
roll
xchg
push
jle
mov
jae
push
cmp
js
movl
add
lods
sbb
popa
dec
push
xor
idivl
mov
pusha
xchg
pop
push
lcallw
push
cmp
push
outsl
dec
xlat
mov
add
aam
fwait
dec
push
aas
xchg
cmpsl
movsl
mov
insl
mov
lcall
int
fsts
cmp
jbe
iret
cmpsl
xor
stos
mov
add
jmp
daa
shl
inc
hlt
dec
out
out
xor
pop
push
and
xor
into
je
cld
sbb
inc
xchg
pop
in
lret
rcrb
xchg
jbe
ss
iret
jbe
xchg
dec
outsl
jl
jno
pop
xlat
pop
test
and
jp
mov
xor
fildll
in
gs
mov
jb
pop
loope
jnp
faddl
push
cmp
arpl
dec
sub
cmc
push
sarb
aas
lret
push
dec
imul
daa
ljmp
frstor
mov
push
mov
shrl
cmc
pop
push
dec
push
sub
gs
inc
adc
fwait
and
jle
sahf
lret
adc
pop
mov
loop
shrb
push
add
xchg
outsb
xor
fmuls
push
dec
inc
xchg
ss
pop
jmp
xor
or
jnp
sbb
mov
test
xchg
push
xchg
movsb
cmp
jae
mov
push
mov
push
cld
dec
dec
imul
mov
sub
cld
adc
aas
xor
subb
cltd
stc
daa
scas
movsl
lcall
or
repz
inc
mov
outsb
cmp
lock
xor
mov
ret
jns
lcall
lret
jo
push
fnstcw
into
int
xchg
rcrb
fstpl
xchg
ljmp
lret
mov
ljmp
jbe
dec
in
mov
jmp
cld
test
ljmp
inc
outsl
push
roll
sub
bound
cvtps2pd
xor
inc
idivl
mov
adc
arpl
ljmp
cmpsl
ret
scas
loop
adc
sub
and
out
cmp
push
jns
pop
lea
sbb
das
int
mov
pusha
mov
in
mov
jno
lahf
push
std
push
jmp
popa
repnz
fsubr
xor
fnstsw
cmc
lret
mov
push
push
lret
aaa
call
jb
pop
mov
xchg
mov
dec
cltd
gs
insl
lret
cmpsl
mov
stos
and
mov
jl
pushf
mov
lea
dec
jbe
and
enter
xchg
dec
jo
inc
mov
ds
jmp
aad
js
hlt
sub
mov
add
fisubs
ds
push
ss
inc
hlt
mov
movsl
xchg
sbb
push
push
orl
push
push
adc
xchg
inc
and
fnsave
xlat
jno
adcl
push
or
int
xchg
scas
cs
xor
lods
push
outsl
lods
fcoml
jle
sub
fsubl
dec
call
jnp
in
arpl
mov
sbb
pop
fcmovu
jb
pusha
fwait
dec
sub
and
mov
jle
or
mov
ficoms
jecxz
inc
push
inc
and
dec
xor
fcoml
not
add
in
cmp
mov
je
inc
std
lods
leave
push
mov
mov
pop
shrl
jne
xchg
adcl
mov
mov
fisubrs
mov
and
inc
xchg
or
scas
mov
cmc
jmp
adc
mov
dec
sub
xlat
lcall
fwait
push
aad
cmp
pop
mov
cmp
fisttpl
ja
adc
xor
dec
scas
xor
int
jmp
je
push
or
pop
mov
pop
mov
scas
xor
pop
fwait
loope
jne
cmp
scas
loopne
rclb
pop
movsl
cltd
addr16
and
rolb
pop
jecxz
negb
jp
bound
mov
xlat
push
jb
frstor
pop
mov
inc
add
shlb
out
and
out
sub
stc
fimuls
cmp
scas
xchg
lock
lcall
arpl
cmp
jb
ljmp
fsubrp
pop
fidivrl
dec
scas
lret
jne
stos
lcall
sub
fadd
loop
js
xlat
push
add
dec
addl
xor
sbb
dec
xor
lahf
pop
dec
push
cmp
pushf
sbb
mov
pop
xchg
aad
outsl
shrb
ljmp
stos
mov
add
add
and
sub
mov
xchg
adcl
daa
xchg
js
das
xchg
into
sub
jnp
pop
ret
dec
or
es
adc
mov
mov
mov
andl
jne
jbe
loop
push
int3
lock
into
sti
mov
jl
push
ljmp
or
jo
pop
mov
inc
pop
arpl
push
or
test
add
inc
ja
loopne
fcomps
jne
stc
leave
das
xchg
ret
test
insb
shll
addb
shll
jne
idivb
push
pop
daa
or
pop
ret
cmp
out
add
add
cmpsb
or
enter
adc
xlat
fsts
mov
xchg
pop
jecxz
xor
xchg
add
xchg
test
sbb
xor
loopne
mov
jno
mov
pop
push
pop
fwait
mov
filds
add
dec
dec
pop
loopne
xchg
nop
jb
push
and
mov
sbb
outsb
fwait
xor
pusha
cmp
sub
sbb
sahf
rclb
pop
dec
jo
jmp
sbb
callw
loop
and
arpl
adc
pop
mov
dec
jb
mov
add
sbb
mov
or
cmpsb
pop
out
cmp
std
cmp
mov
hlt
push
sub
sbb
ret
out
sbb
push
movsb
mov
aam
mov
repz
sub
mov
addr16
xchg
xchg
lea
in
sahf
dec
insb
inc
lret
jns
insb
mov
jl
out
test
xchg
ret
push
fsubs
pushf
jnp
xchg
js
test
scas
ds
jns
test
lret
xchg
dec
call
cmp
movsl
fwait
lods
and
mov
adc
and
sbb
mov
xchg
outsl
jle
sbb
orb
sub
lahf
lahf
into
pop
dec
xor
pop
out
fsubrp
sub
mov
pop
incl
push
repz
jmp
addl
fdivp
clc
iret
loopne
sub
sub
add
mov
sub
icebp
dec
push
inc
inc
dec
sbb
inc
pop
daa
push
inc
xor
adc
in
mov
jg
es
mov
shll
or
sub
test
repz
jge
popa
cmp
jge
clc
fwait
jmp
movsb
into
or
call
jl
mov
dec
fwait
js
lock
xchg
int3
ljmp
sbb
das
cs
xchg
pop
into
scas
pop
cltd
jo
add
mov
movsl
xlat
or
setl
imul
lods
in
call
inc
mov
push
cmp
jne
add
flds
push
hlt
pusha
movb
ds
push
pop
jge
pop
push
bound
mov
xchg
out
or
mov
mov
cmp
mov
in
and
cwtl
cmc
pop
int3
rclb
lret
mov
int
or
call
aaa
lods
xor
pop
push
pop
inc
imul
inc
xchg
mov
push
insb
movsl
cmpsb
out
push
jg
xchg
leave
push
fucomp
sub
jmp
rcl
push
xchg
push
enter
jne
roll
pop
inc
cmp
push
lret
aam
sub
pop
adc
pop
push
rcll
xchg
sub
fistpll
iret
les
fs
jo
cmp
push
mov
or
dec
pop
fildll
in
sti
ja
roll
lock
fisubrl
sbb
nopl
out
arpl
shl
push
cltd
call
xor
adc
sbb
movsb
pop
jl
popa
int3
mov
fldln2
pop
push
dec
push
mov
mov
outsl
dec
or
sub
and
push
ret
out
cli
cmc
sahf
in
adc
dec
push
ss
mov
add
movsl
add
jns
call
mov
and
jmp
cmp
pop
nop
daa
std
add
adc
fstl
ror
roll
inc
leave
jo
cltd
xor
roll
push
mov
sub
jg
movsb
mov
jae
jnp
xor
xchg
scas
int
mov
xchg
lods
sbb
aam
mov
ret
add
jecxz
adc
movsl
mulb
popf
sub
mov
fwait
andb
dec
jo
dec
or
ror
popf
jbe
jns
adc
jecxz
shlb
mov
imul
mov
xor
cs
les
adc
clc
in
jp
jnp
daa
mov
out
adc
push
in
movsl
sub
sahf
ret
and
shr
xchg
int
das
mov
aad
pushf
xchg
and
outsb
jne
pop
fmuls
std
inc
or
loopne
or
xchg
pop
test
push
mov
sub
push
lcall
cmp
cmp
cmc
sbb
mov
popa
mov
lock
and
fisttpl
mov
mov
inc
insl
jo
sub
mov
icebp
jns
sbb
mov
fsubl
pop
aaa
mov
xchg
fisubl
inc
jb
sub
or
inc
int3
jns
insl
pusha
lea
inc
adc
inc
out
repnz
xor
pop
gs
xchg
xchg
cmp
sarb
mov
sub
sub
test
push
mov
mul
lds
add
cmp
gs
pop
into
lahf
pop
xchg
adc
xchg
jnp
or
jns
fwait
stos
int3
jno
sarl
xlat
aam
adc
cmp
lret
cmp
mov
loop
ror
inc
sbb
imul
stos
insl
push
scas
mov
test
add
mov
add
test
div
shr
inc
mov
sub
decl
aam
cmp
test
push
pop
cli
repnz
jg
mov
cli
xor
lods
icebp
nop
mov
daa
lret
or
call
inc
mov
scas
inc
inc
andl
and
or
std
cld
daa
fists
pop
mov
jno
and
cld
shll
sbb
sbb
shll
mov
mov
jbe
test
outsb
test
adc
sub
push
popl
mov
pop
in
inc
pop
notb
sbb
and
mov
add
iret
sbb
mov
pop
int3
inc
insb
mov
pop
addr16
push
pop
movl
dec
mov
cmp
xchg
sub
cmp
outsb
add
subb
mov
sub
xchg
rorl
or
cmp
push
mov
or
dec
xchg
sub
nop
ja
shrl
movsl
bound
lcall
popa
jp
ss
dec
mov
sub
lock
movsb
sub
in
clc
orl
fiadds
xchg
jb
out
icebp
movsl
stos
dec
push
pop
cmc
mov
pop
inc
rorl
scas
nop
xchg
xor
lock
dec
or
and
cmp
aaa
dec
fidivs
mov
call
jno
sbb
push
mov
nop
and
test
popa
cmpsb
mov
aaa
xchg
lret
pop
int3
cwtl
lahf
int
cwtl
stos
dec
scas
jns
mov
cwtl
xchg
hlt
gs
xlat
ljmp
jge
lods
loope
cwtl
scas
jge
scas
mov
shll
in
cli
ret
ret
out
pop
mov
sbb
jo
xor
adc
mov
adc
popa
ds
push
mov
hlt
push
xorl
repz
test
btr
gs
es
je
mov
ja
and
push
xchg
mov
dec
mov
adc
sbb
jmp
js
outsl
xor
dec
cli
xlat
and
sub
iret
insb
pop
gs
ds
mov
sahf
push
xchg
insb
sarb
fs
inc
xor
mov
xorl
xor
xchg
sub
stc
cmp
inc
pop
jge
sbb
fcoms
mov
sbb
pop
icebp
cmp
adc
pop
pop
mov
push
xchg
addb
shl
mov
push
sbbb
mov
test
xchg
push
cmp
dec
fdivl
test
jns
movsb
ja
addr16
popf
jbe
inc
je
lahf
cli
mov
cmpsb
ret
sahf
pop
dec
mov
test
les
lds
mov
inc
test
int3
bnd
pop
inc
xor
cmp
in
pop
pushf
rcrb
lods
lret
adc
int
xor
mov
jg
lret
sub
lock
andb
pop
inc
loope
addb
dec
out
xor
popf
scas
mov
inc
cld
inc
sub
scas
mov
xchg
lods
or
dec
lods
inc
mov
or
mov
dec
inc
lcall
jecxz
cwtl
push
movsl
xor
call
fimull
mov
lds
add
push
stos
outsb
lret
jo
test
lods
loope
cmp
test
stc
or
movsb
test
xor
and
fnstenv
insl
clc
popa
pusha
fwait
cmp
arpl
addl
mov
jmp
add
sahf
dec
xchg
mov
adc
pop
mov
xchg
or
push
jae
cld
lret
jp
fs
push
std
lods
or
ficoml
or
mov
outsb
mov
nop
jl
pop
decb
popf
imul
pop
adc
or
int
xchg
sub
lcall
ret
fcomip
cwtl
jmp
cmpsl
sarb
jle
mov
in
push
rolb
jmp
pop
add
add
sub
je
pop
popf
decl
adc
mov
jmp
cmpsb
push
popl
sub
pop
sub
jmp
sahf
fistl
mov
lock
xor
xchg
rol
pop
mov
inc
sub
adc
push
mov
inc
xor
adc
pop
pop
test
loop
lods
mov
mov
dec
gs
add
sbb
mov
xchg
int
rcrl
sahf
jbe
mov
cmp
inc
push
push
out
pop
cltd
pop
aad
mov
sbbb
cmp
cmpsb
bound
xchg
push
ljmp
sub
xchg
cmp
cld
lock
xchg
add
xchg
cmp
xor
cmp
and
das
es
lcall
sbb
mov
int
dec
mov
inc
and
mov
test
xchg
adcb
dec
call
sub
popf
loop
adc
jae
cmp
sbb
icebp
lret
in
push
mov
mov
sbb
negb
mov
xchg
fsts
lods
or
and
popa
pop
lcall
outsl
cmc
rclb
mov
dec
dec
out
adc
push
and
mov
cmpsl
bound
in
pop
push
ret
arpl
je
or
arpl
xchg
es
pop
mov
stc
arpl
fstpt
aam
xchg
jge
jecxz
scas
test
out
cmp
mov
fldcw
test
xchg
orb
add
push
add
loopne
imul
cwtl
mov
sbb
jne
inc
mov
test
testb
xlat
js
lret
adc
clc
or
clc
cmp
bound
or
or
imul
mov
pop
push
dec
mov
sub
mov
pop
cmc
aaa
cmp
push
sub
cmpsb
adc
xlat
es
std
cli
aas
aas
sub
jg
sub
hlt
rcrl
xchg
mov
jp
int3
jge
dec
les
jp
insl
add
xor
cmpsl
das
dec
insl
imul
out
ret
mov
scas
data16
fldl
repnz
xchg
mov
pop
les
in
or
xor
movsl
mov
cmp
icebp
in
push
in
add
clc
repnz
call
repz
arpl
push
cmp
pushf
hlt
divb
dec
ja
cmp
sub
or
inc
ja
loope
dec
stc
mov
jl
jo
pop
sbb
movsb
push
push
xchg
aam
mov
sahf
sbb
cmpl
push
gs
push
shl
idivb
cmp
cmp
cmpsb
imul
cmc
cmp
lea
outsb
jmp
mov
call
xor
test
lods
mov
mov
fwait
enter
mov
mov
mov
jae
add
daa
shr
mov
inc
pop
mov
outsl
xor
xchg
rcrl
fwait
push
add
sbb
aad
jnp
out
xchg
pop
adc
and
inc
mov
push
dec
mov
out
push
xor
outsb
add
dec
sbb
loop
insb
in
fs
fildl
and
cmpl
fdiv
push
insb
mov
jne
int3
xor
mov
divb
ljmp
mov
stc
or
sbb
out
std
repnz
insb
add
lock
iret
xchg
adc
mov
imul
sbb
mov
adc
add
xor
sti
popf
sbb
xor
adc
sbbb
xor
jmp
fmull
test
jbe
stc
cmpsb
mov
in
xor
repz
stc
shrl
ds
dec
jae
fsubrs
imul
xor
into
xchg
jmp
outsb
lcall
inc
inc
xor
subb
cmp
in
sub
call
in
dec
or
pop
loope
mov
lods
gs
cltd
repnz
mov
lea
dec
mov
xor
lret
shrl
mov
adc
dec
arpl
sbb
xchg
xchg
pop
icebp
lret
mov
cwtl
jle
xor
call
dec
in
adc
push
pusha
inc
test
xchg
jo
push
and
dec
and
ret
jno
adc
loope
xchg
imull
lcall
std
sbb
xor
int
in
nop
lds
cmp
clc
mov
jmp
and
push
xchg
int3
vcvtsd2si
shll
fwait
or
xchg
dec
jb
mov
mov
aaa
sarb
sti
mov
pop
stc
lods
or
and
cwtl
cmpsb
push
adc
stos
jge
jno
mov
mov
ffreep
movsl
lahf
lock
cmpb
sbbb
in
xor
rorl
mov
dec
enter
rcrb
mov
mov
in
xorl
daa
jg
roll
xor
mov
pop
pop
lods
in
stc
fistl
sarl
add
and
arpl
sbb
cld
test
aad
sbb
mov
test
pop
and
xchg
out
in
fsubs
loop
cmp
push
ds
and
push
and
add
pushf
lahf
or
inc
js
jb
ja
andl
mov
js
test
mov
jle
lods
fiaddl
iret
inc
mul
inc
repnz
xor
bound
fidivrl
aaa
insl
rol
push
push
scas
sub
push
cmp
adc
jp
dec
mov
fstl
cmp
insb
loop
mov
xchg
cmc
repnz
jmp
aad
js
movsl
out
sbb
dec
mov
popf
fwait
jp
mov
fidivl
std
cmp
outsb
dec
mov
pushf
lds
xchg
orb
sub
dec
sub
test
adc
fst
and
jl
pop
or
addr16
iret
das
loopne
arpl
push
adc
repz
xor
lods
into
mov
cmpsb
adc
in
xchg
sbb
xor
in
xchg
jle
jp
mov
mov
xor
or
pop
js
cmp
adc
dec
sahf
inc
lcall
jmp
adc
dec
in
cmp
insl
movups
jp
and
sahf
div
cwtl
mov
mov
mov
into
in
jg
or
adc
out
cmp
mov
sbb
dec
xlat
pop
stos
out
jle
mov
sti
lods
sbbb
mov
xlat
fimuls
stos
pop
pop
scas
adc
push
outsl
push
cli
test
insl
scas
shlb
xor
std
leave
push
flds
push
inc
daa
clc
pop
dec
sahf
stos
cmp
xor
imul
pop
mov
scas
pop
dec
mov
jb
dec
jo
sub
cmp
scas
mov
sbb
add
cmp
mov
out
sub
cmp
mov
xor
cmpsl
ljmp
jecxz
adc
out
addr16
cmp
or
cmp
outsb
adc
add
jne
jle
out
fisubrs
int
loopne
fdivrp
daa
mov
sti
pop
int3
inc
jno
cmpsl
and
js
mov
imul
dec
ljmp
je
lret
popf
cmp
mov
mov
add
dec
cld
mov
ret
hlt
in
pusha
push
pop
lahf
movsl
and
shl
xchg
sbb
aas
hlt
push
push
mov
push
push
xchg
ret
adc
push
inc
aad
das
pushf
out
jo
int3
jmp
das
push
cs
jle
xchg
cmpsb
ljmp
sbb
cli
shrb
int3
movsb
or
int3
fwait
sbb
lea
sbb
mov
mov
mov
pop
aaa
insb
lods
adc
or
jg
call
jl
sub
shl
insb
es
ljmp
mov
mov
inc
mov
dec
ds
loop
jo
outsb
rorl
add
cmp
add
movsb
xchg
ja
pop
frstpm(287
mov
pop
outsl
hlt
or
mov
lahf
std
xor
nop
pop
aas
pop
pop
lds
push
adc
or
fisttpl
lfs
sub
mov
mov
mov
enter
sbb
pushf
fstpt
lods
cmc
nop
out
mov
push
movsl
jae
push
xchg
mov
and
cld
add
sbb
mov
inc
xlat
outsb
lea
daa
dec
mov
dec
out
repnz
stos
loopne
dec
mov
ss
xchg
aad
sub
decb
scas
test
fs
test
inc
aad
movsb
shll
frstor
mov
inc
out
test
jns
pop
jbe
or
dec
xchg
pop
sahf
xor
cli
leave
adc
dec
jmp
push
and
ds
lret
mov
cmp
inc
stos
data16
mov
or
push
inc
xor
dec
dec
push
push
xor
mov
data16
jb
lods
cmpsl
repnz
dec
lods
rorl
shlb
filds
mov
insl
pop
mov
mov
aaa
lret
xchg
sbb
mov
pop
int
sarb
lret
and
jno
cmc
jae
sub
pop
shr
nop
mov
fidivs
mov
sub
xchg
adc
mov
divb
inc
push
cwtl
test
xor
xchg
add
cs
cmpb
ss
les
inc
pop
xor
shl
ja
jo
mov
enter
out
sahf
push
cwtl
in
call
push
mov
inc
pop
sub
repnz
and
add
inc
es
dec
mov
in
add
cmp
xor
je
test
fsubs
sub
cmp
push
fistpl
dec
addr16
gs
and
fs
lods
add
gs
test
push
xor
lods
sbb
incl
pop
rcll
adc
push
or
nop
pop
pop
pop
cmp
pop
dec
and
dec
mov
mov
fisttpll
cwtl
insl
xor
fcomip
pop
ljmp
mov
shlb
je
mov
call
rcll
sti
fcmovnbe
push
aad
cli
push
data16
aad
addr16
fildll
dec
mov
into
imul
mov
icebp
jne
cmp
jnp
popf
mov
test
sahf
je
test
inc
sub
movsb
xor
test
xchg
loop
or
std
add
cs
add
push
jl
jns
jne
nop
push
cltd
int
imul
adc
jbe
add
roll
sub
loope
out
mov
jg
mov
mov
shrb
push
add
lcall
in
sbb
cwtl
mov
mov
cs
je
int
stos
popa
sub
mov
push
testl
or
push
push
das
sub
ljmp
ljmp
lods
jge
add
inc
popa
pop
xchg
rcll
je
dec
mov
mov
in
cmp
icebp
fcoml
mov
in
in
je
or
fwait
hlt
test
out
faddl
mov
in
add
lret
test
add
jg
leave
jge
das
fstps
adc
cmp
mov
push
or
std
aas
sbb
in
stc
bnd
dec
dec
inc
adc
mov
push
mov
aad
jns
js
mov
cmp
inc
xchg
jge
in
sbb
add
push
mov
fwait
scas
hlt
jg
push
out
movsb
cs
and
xchg
sub
inc
cmc
inc
push
clc
adc
insl
subb
or
and
adc
cwtl
stc
or
push
mov
icebp
test
mov
enter
lret
inc
xchg
out
lock
test
add
cmpsb
sub
mov
xchg
or
pop
ja
jl
pop
pop
loope
sub
mov
jo
fcoms
int3
int3
fisttpll
sub
push
jnp
hlt
loopne
in
cmp
scas
rcrl
xor
iret
pop
pop
repnz
clc
lods
dec
push
outsb
mov
pusha
and
es
and
inc
fiaddl
jmp
lea
pop
movsl
push
xchg
and
fisubrl
mov
in
shll
movsl
jns,pt
clc
push
mov
dec
cmpsb
xchg
push
fidivs
fistl
mov
test
scas
gs
push
add
adc
dec
xlat
adc
inc
mov
sub
lea
addr16
test
lret
mov
mov
es
dec
nop/reserved
add
xlat
js
jbe
push
adc
inc
call
bound
or
and
hlt
lods
inc
xchg
xchg
xor
in
imul
std
or
sbb
or
leave
fwait
mov
lret
add
xchg
push
jge
into
pop
adcb
scas
push
lds
lret
ret
icebp
or
adc
scas
pop
xlat
les
shll
popf
and
movsb
stos
xor
jge
pop
lods
push
popa
dec
inc
inc
cmp
daa
loopne
les
inc
dec
add
mov
jg
cmp
xchg
add
xor
ficomps
pop
call
jl
jge
movsl
xchg
and
mov
aad
jp
mov
aad
dec
jo
jo
stos
sbb
xchg
into
stos
xor
jmp
mul
rcl
sub
mov
lahf
sbbl
fiaddl
cld
and
mov
xchg
nop
scas
sar
test
jo,pt
imul
sub
fiaddl
dec
aam
mov
movsl
add
jmp
fsubrp
dec
in
or
subb
rcpps
js
push
stc
xchg
clc
scas
cwtl
in
sub
loope
dec
dec
or
push
xchg
icebp
cmp
pop
mov
pop
jl
pop
mov
jmp
insl
cmp
inc
jns
jge
test
cli
imul
out
stos
ffree
adc
push
mov
add
push
cwtl
in
sbb
xor
lods
xchg
lahf
scas
out
leave
mov
pop
mull
pop
mov
stos
adc
cmpsl
and
sahf
test
pop
inc
xor
aas
mov
pop
ljmp
cs
and
and
sub
test
sub
div
mov
add
test
mov
mov
std
sub
stc
sub
dec
sbb
sti
lcall
test
sub
jecxz
fisubs
inc
xchg
rcll
add
jo
aam
ja
in
pop
in
iret
les
dec
dec
cmp
mov
mov
imul
int
xor
xor
adc
jnp
imul
add
inc
sbb
cmc
mov
scas
dec
movsl
sub
cmpsl
pop
and
xor
cmpsb
add
out
in
test
sub
fs
and
test
fs
lret
mov
pop
adc
stc
jns
stos
ds
addb
data16
dec
push
jl
scas
fsubl
iret
lea
dec
or
jg
push
sub
jmp
repnz
data16
sbbl
test
addr16
in
mov
pop
jecxz
add
inc
add
pop
out
push
jo
or
push
arpl
or
cs
in
in
or
mov
mov
mov
cwtl
xorl
cmp
mov
cs
push
mov
sbb
xchg
push
add
popa
fs
inc
jge
or
push
cmpsl
cs
add
or
loop
insl
pop
add
xchg
mov
push
inc
xor
inc
mov
and
movsb
mov
lods
out
push
dec
bound
cmp
daa
repnz
loopne
and
out
leave
pop
or
loopne
cmp
aas
dec
cmp
ds
pop
insb
cwtl
mov
mov
jmp
stos
and
cmp
lds
dec
icebp
inc
jne
ljmp
lea
pop
cld
mov
xlat
jmp
jnp
insl
stos
das
push
push
rcrb
jl
pusha
sub
cwtl
jmp
mov
jg
cmp
out
fistl
inc
orb
cmp
cmc
cmp
adc
xchg
jmp
mov
cli
sti
ss
fnsave
push
inc
dec
rorl
mov
out
add
ljmp
and
add
scas
cmp
aaa
cmp
stc
adcb
mov
test
dec
push
fsts
das
sbb
add
pop
jge
push
mov
adc
push
pmaxub
imul
test
push
aam
shrb
xchg
jp
add
imul
pusha
xor
dec
je
ja
push
mov
mov
sahf
shr
addb
add
inc
js
add
dec
dec
fistps
jle
fld
imul
jno
and
cld
leave
or
add
push
mov
fcoms
mov
leave
jne
inc
sub
or
jp
into
loop
mov
in
lahf
movl
push
cltd
cmp
cltd
dec
std
push
push
mov
insl
push
cmp
mov
dec
divl
sub
add
fidivl
push
aad
fsubrl
push
mov
push
pop
sub
cmp
das
stos
dec
push
es
arpl
and
enter
mov
fsubs
mov
repz
and
rolb
loopne
movl
mov
out
in
mulb
push
pop
push
dec
pushf
add
mov
icebp
fcmovnbe
shl
clc
in
jl
aam
push
aam
dec
mov
mov
push
movsb
je
outsb
clc
cmp
cmp
imul
andl
fwait
arpl
cli
jmp
test
jns
mov
enter
or
cmc
aas
adcl
orl
push
negb
aaa
cmpsl
pop
je
cmp
mov
mov
and
aaa
mov
cmp
pop
mov
inc
out
lahf
cli
adc
mov
loope
add
and
lretw
dec
mov
pop
inc
add
xor
in
inc
mov
roll
call
push
cmp
jl
cvtpi2ps
movsl
or
sub
or
movsl
inc
cmp
xchg
jle
in
lea
xor
aam
popf
cmp
inc
dec
rorl
sbb
mov
mov
xlat
pop
cmp
cwtl
pop
lock
sub
push
mov
test
pusha
rcr
and
mov
lret
adc
enter
pop
mov
sbb
lock
lods
inc
loop
pop
enter
pop
or
repz
xchg
imul
int
xchg
ficoms
std
pop
leave
outsl
sub
inc
sbb
cmpsl
fsts
leave
pop
lds
pop
mov
mov
jno
cmpsl
out
xorb
sbb
test
sbb
xchg
pop
insl
sub
mov
inc
jmp
shlb
push
sbbb
push
jae
fs
pop
je
pop
ss
fisttpll
sub
mov
and
push
clc
xorb
fidivl
sbb
in
cmp
shll
pop
mov
mov
imul
fwait
or
loope
nop
push
push
sbb
aam
mov
mov
loopne
adcl
xor
cmpsl
icebp
push
fbld
pop
fldenv
outsl
aam
cmp
push
mov
pop
sub
movsl
inc
aam
inc
mov
clc
pop
je
addr16
into
pop
or
ss
sar
mov
les
mov
es
fcomip
pop
movsl
xchg
scas
lret
sub
aas
or
adc
out
inc
lcall
mov
and
pop
push
ds
add
mov
push
ljmp
pop
push
xorl
mov
add
mov
or
jmp
push
je
lock
pop
fs
ret
lock
jecxz
fldenv
ret
mov
dec
sbb
loop
fdivs
nop
loop
and
fs
jb
inc
or
outsl
loopne
gs
push
fimull
mov
shl
ss
sub
xchg
cmp
inc
es
out
inc
push
mov
iret
insb
xor
jg
xor
in
lret
out
xchg
ds
imul
add
sub
or
cmpsb
lret
add
or
cld
clc
push
jp
adc
mov
add
pop
jne
mov
mov
int3
push
or
add
pop
ja
arpl
sbb
inc
pop
or
int3
pop
mov
test
mov
mov
cs
pop
pusha
mov
dec
adcl
dec
repnz
mov
negl
xlat
pusha
pop
cmp
ss
push
fsubl
jmp
movsl
imull
pusha
and
lret
das
data16
popf
and
lods
xchg
sbb
je
cmc
insb
xchg
inc
imul
and
pop
inc
pop
cltd
stc
stos
cmp
ljmp
xorb
outsb
inc
xor
xchg
pop
xchg
lea
ss
inc
lods
repz
mov
cwtl
ficoms
out
dec
xor
pop
lahf
push
sbbl
xlat
stos
out
insb
mov
outsb
fcmovne
or
xchg
jno
in
lcall
addl
test
aad
iret
test
push
adc
lea
fstpl
sbb
pop
lahf
xchg
test
mov
push
xchg
shrl
enter
pop
jle
or
lods
sahf
loop
imul
fwait
movsl
or
mov
lcall
repz
push
add
mov
test
mov
mov
lea
mov
arpl
jne
fistpl
lds
add
add
fs
dec
bound
fcoms
jne
jecxz
movsb
jbe
aaa
or
daa
sbb
cwtl
push
nop
mov
add
iret
pop
ret
es
xchg
sbbl
les
js
xor
dec
int
leave
pop
sub
lcall
movsb
sub
sbb
notb
cltd
daa
repz
jl
push
xchg
negl
pusha
rorl
jp
into
in
inc
cli
push
mov
adc
fldcw
fnsave
insl
or
shrb
lahf
mov
repz
or
push
std
or
jno
mov
sbb
bound
enter
push
mov
in
les
addr16
jb
popf
jno
pop
movsb
and
pop
xchg
push
xchg
xor
or
js
popf
and
repnz
test
inc
repnz
repz
ss
push
dec
stc
sbb
lods
and
test
cwtl
notl
nop
dec
mov
jae
lock
psubsb
aas
add
fimull
xchg
mov
mov
sbb
aas
mov
cwtl
in
sbb
jae
lret
push
ja
pop
stc
lret
xchg
lods
mov
mov
out
stos
or
or
adc
ret
add
push
cmc
dec
fwait
xchg
repz
add
and
sub
in
into
or
test
fwait
int
sti
decl
mov
loope
lds
adc
out
cwtl
sub
and
push
repz
outsl
les
fstps
and
nop
popf
jl
shrb
jge
fistps
adc
adc
aaa
cmp
inc
fisubrl
dec
ret
sub
mov
scas
movsl
mov
mov
iret
mov
popa
int3
sahf
sub
xor
imul
lds
mov
data16
divb
jbe,pn
xchg
cmpsl
xchg
std
jecxz
scas
or
repnz
ds
pop
and
mov
inc
jne
mov
lds
out
jbe
push
scas
mov
out
sub
add
stc
jo
fwait
jp
negl
enter
push
jno
pop
adc
test
mov
dec
pop
jne
incl
sbb
dec
imul
repz
push
fsts
ficoms
mov
adc
mov
xchg
pop
test
rcrl
clc
int
bound
adcl
mov
xor
adc
loope
cld
and
fs
mov
add
nop
xchg
fbld
push
int
push
cld
negl
mov
fimull
mov
jbe
pop
jne
adc
testb
out
push
inc
add
inc
nop
push
lods
inc
fnsave
fwait
mov
mov
in
pop
std
cmp
push
ja
inc
lods
daa
cmpsl
push
dec
pop
cwtl
testl
hlt
frstor
and
ljmp
add
lods
pushf
enter
movsl
or
adc
in
inc
loopne
jl
mov
dec
lcall
test
clc
inc
jne
icebp
or
xor
lret
dec
jne
fcoms
lods
repz
and
mov
xchg
sub
and
aad
pop
ret
scas
dec
sub
test
inc
or
cmc
gs
aas
out
sarl
push
pop
mov
dec
sub
mov
fadds
fcoml
arpl
aad
lret
jbe
fistps
shlb
cmpsl
pushf
pushf
jmp
fsubrl
mov
sub
loop
jp
dec
ds
aam
pusha
and
xchg
enter
inc
push
or
imul
imul
xchg
lea
push
int3
push
imul
enter
fimull
loope
and
sub
or
out
mov
pop
and
mov
aas
push
push
ds
loop
add
imul
fcomi
jle
lods
inc
sub
sbb
ds
jns
mov
or
pop
lcall
je
push
push
test
xor
sbb
xor
das
or
xchg
pop
mov
rcr
gs
aas
popf
fnstenv
sub
fsubl
insb
jnp
mov
mov
cwtl
lea
adc
nop
fiaddl
fwait
sbb
roll
xor
rol
adcl
xor
cmpsl
mov
push
stc
enter
dec
adcb
push
lret
es
lcall
xor
xor
add
sub
mov
in
hlt
test
jae
stos
sahf
insl
inc
ljmp
adc
push
mov
inc
dec
inc
repz
push
imul
and
cli
jbe
gs
enter
mov
mov
cmp
test
add
fnsave
sbb
jge
outsl
add
push
mov
rcr
cmpsb
test
stos
push
repz
inc
loop
and
cltd
cmp
adc
fwait
test
inc
ds
pusha
mov
pusha
scas
es
or
idivb
daa
adc
lods
xlat
insl
lea
adc
orl
cwtl
faddl
sti
icebp
adc
aaa
or
out
sarb
mov
es
and
popf
sbb
loopne
hlt
push
insl
pop
mov
or
jo
std
clc
ret
cmc
xor
mov
lcall
aas
xor
das
enter
cmp
add
test
repnz
xor
sbb
test
je
add
jbe
aad
in
jbe
push
and
dec
mov
mov
mov
loop
or
and
cli
jecxz
imul
adc
mov
repnz
pop
jae
xor
repnz
mov
inc
push
push
mov
shlb
xchg
repnz
push
cs
jne
adc
cmp
cmp
idivl
push
mov
xor
cltd
mov
enter
prefetcht1
pop
scas
mov
adc
inc
mov
ret
daa
pushf
push
ss
mov
mov
or
pop
scas
fwait
jo
dec
push
sarb
xchg
pusha
fbstp
or
movsb
adc
xlat
push
xor
push
mov
fistl
in
mov
mov
jp,pn
push
sbb
outsl
popa
std
pop
xchg
loopne
ret
lret
popf
mov
jge
dec
daa
inc
stos
scas
rcrl
rcl
mov
xor
and
aaa
and
inc
loopne
adc
lock
ficomps
arpl
pusha
arpl
mov
popf
lret
daa
cli
inc
stos
jecxz
lcall
cltd
sub
iret
cmp
cmpl
lds
push
jnp
xchg
adc
jo
sub
xor
cmpsl
xor
das
add
mov
jmp
adc
insb
pushf
inc
mov
mov
sbb
or
sbb
mov
add
xchg
mov
in
jg
fs
fisubrl
cwtl
loop
sub
shl
arpl
jle
pushf
lret
adc
pop
sub
dec
xchg
loope
stos
out
movsb
adc
movaps
pop
lahf
inc
shl
mov
lods
and
sti
sub
add
mov
dec
and
repnz
pop
call
arpl
push
lret
outsb
adc
inc
test
data16
lods
mov
out
cmp
xchg
cmpsl
mov
lods
push
inc
inc
cmp
icebp
mov
lds
jnp
dec
fisttpl
mov
pop
and
repnz
mov
lret
push
or
mov
es
icebp
int3
addr16
stos
lahf
sysexit
push
aaa
xchg
jecxz
xor
push
testl
mov
push
push
stos
sub
test
addr16
xchg
xlat
push
or
sbb
add
les
inc
pop
cmp
xor
mov
bound
repz
int
sub
lods
jns
mov
mov
push
das
lods
jne
xor
or
cwtl
sbb
cmp
push
inc
popf
cld
adc
mov
mov
negl
pop
xchg
lret
push
outsl
push
or
stos
in
mov
out
stos
and
add
outsb
cmp
cs
push
adc
addr16
cld
ljmp
enter
in
inc
stos
mov
xor
and
adc
test
imul
dec
inc
sahf
js
fistpl
cwtl
stos
repz
sub
shlb
xlat
pop
leave
inc
cltd
lea
add
dec
das
dec
sub
and
std
sub
xchg
mov
jmp
mov
les
adc
pop
scas
pop
push
test
fcmovu
sub
aaa
mov
data16
push
mov
adcb
push
sub
lock
mov
mov
outsl
sub
ljmp
in
nop
fnstenv
cmc
aas
daa
cltd
jmp
mov
testb
push
std
aad
add
push
in
pop
lds
mov
sub
mov
xor
add
ja
fs
pop
fisttpll
pop
push
jg
jp
cs
out
mov
xor
loop
xchg
push
filds
push
mov
xorb
div
loop
and
xor
mov
sbb
ficomps
pop
sti
or
push
push
insb
mov
scas
and
cwtl
fbld
xor
imul
sti
inc
dec
mov
ljmp
mov
flds
clc
xchg
xor
mov
dec
jge
ret
aas
mov
dec
inc
out
je
inc
xchg
and
xor
mov
idivb
in
rcrl
sub
inc
add
ja
jmp
jecxz
frstor
in
mov
cmp
repz
sbb
sub
and
inc
xchg
mov
loope
icebp
cmc
sbb
rcll
and
das
int3
insl
add
popa
fisubrl
xchg
or
aad
ret
jle
mov
mov
jle
mov
loopne
lods
loopne
dec
sti
cmp
jecxz
inc
pop
dec
mov
lds
iret
add
into
adc
mov
fwait
insl
dec
aam
js
popf
fistps
xor
jmp
pusha
xor
push
add
push
fcmovnu
jo
dec
adc
imul
or
dec
daa
out
loopne
mov
fldcw
push
call
aam
sub
pop
movl
inc
scas
sbb
jne
loopne
data16
fisubrl
adc
push
mov
outsb
sbb
cltd
leave
rol
jnp
sub
sar
sahf
lea
test
pop
push
mov
add
mov
subl
mov
stos
stos
insl
fyl2x
lahf
es
cmc
aaa
mov
push
std
inc
sbb
dec
xor
cmpsl
cs
insl
sub
jno
mov
or
repnz
sub
xor
lret
cmp
out
lahf
in
cmp
jb
ret
lret
sbb
insb
mov
lahf
ret
lret
daa
dec
fs
jne
fsubrs
sbbl
inc
mov
aam
push
loope
fbstp
dec
je
mov
add
mov
sbb
outsb
dec
arpl
ljmp
jae
call
jp
mov
fmuls
sbb
sbb
aam
xor
outsb
fisttpl
jns
test
sbb
xchg
pop
pop
dec
dec
loope
or
adc
or
mov
sti
mulb
pop
rclb
sti
fcmovbe
xor
fs
push
xchg
sub
inc
lock
sbb
push
repz
inc
mov
add
inc
add
mov
cs
push
insl
aam
in
fidivrs
cmc
lock
sub
insb
mov
pop
sub
jae
and
inc
adcl
xor
outsl
sbb
jne
sbb
movsl
rcrb
pop
out
adc
bound
sub
and
test
jbe
aam
leave
out
or
fcmove
testl
cmp
adc
add
dec
cmp
mov
imul
mov
and
dec
mov
and
pop
std
jne
aas
mov
cmpb
sub
sub
hlt
add
mov
stos
dec
mov
jmp
sub
xchg
pop
iret
in
mov
adc
mov
movsl
mov
pop
clc
jo,pt
ret
mov
fwait
inc
mov
cmp
ljmp
mov
ret
cmp
xchg
nop
es
add
fmulp
int3
incb
hlt
inc
bnd
std
mov
pop
lea
int
sub
cmp
popa
out
js
lock
fldenv
repnz
insl
int3
mov
out
aam
dec
cs
jl
adc
pop
ds
xchg
pop
arpl
add
push
xchg
mov
popf
shlb
outsl
add
pop
aas
rorl
int
mov
adc
mov
jg
out
inc
imul
push
mov
stc
or
lds
mov
jl
pop
movsb
jl
jp
mov
mov
xchg
xorl
cmp
loopne
jno
addr16
sub
rolb
adc
pop
xor
dec
add
repz
sbbl
xchg
das
cmp
cwtl
sbb
mov
mov
adc
out
mov
or
xchg
jl
pushl
test
shlb
xor
and
es
jns
or
adc
mov
inc
push
xchg
jae
xchg
push
adc
jns
stos
xchg
push
jae
sbb
cmp
xchg
sbb
jmp
sub
cmpsl
mov
cmpsl
inc
in
in
lea
fs
adc
or
sbb
clc
mov
sahf
and
sbb
icebp
rcrb
mov
test
cmp
das
sarb
cs
dec
pop
or
jl
or
bnd
pop
mov
sbb
add
in
inc
dec
sarb
cmc
xchg
fincstp
fisttpl
das
mov
push
xchg
frstor
xchg
jne
mov
jge
imul
fs
leave
inc
aas
inc
push
addl
xor
mov
sub
in
push
pop
lds
or
loop
inc
ficoms
push
ja
es
push
mov
inc
and
les
lea
push
and
je
fisttpll
in
ret
popw
sub
inc
jo
jmp
mov
mov
popa
fstpt
scas
lcall
cmp
cwtl
xchg
pusha
or
push
lds
mov
cmpsb
insb
push
js
shll
push
xlat
jae
adc
aad
sbb
push
push
lock
mov
cmp
mov
ss
cli
imul
xchg
dec
jo
sub
inc
out
pop
dec
or
roll
mov
xchg
xor
inc
pop
aad
arpl
jge
mov
cwtl
mov
incl
repnz
xor
push
add
sub
lock
imul
pop
xor
mov
cmp
nop
popf
cmpsb
into
in
mov
aaa
pop
in
cmp
outsl
lret
fldcw
adc
icebp
jb
ljmp
addr16
hlt
in
fs
xchg
jle
popf
inc
pop
movsb
dec
push
cmc
mov
lea
inc
jo
out
mov
or
ror
aas
in
jns
xor
xchg
jo
popa
mov
call
loop
jmp
and
xchg
dec
cltd
push
pushf
fs
and
stos
push
push
sbb
repnz
sbb
in
dec
sub
aad
xchg
adc
dec
das
int3
inc
inc
cmp
push
mov
inc
mov
cmp
dec
repz
jg
xchg
xor
mov
ja
xor
filds
inc
mov
cmp
mov
lods
push
insb
xchg
pop
sti
and
dec
push
sub
xor
jmp
subl
dec
int3
cs
pop
stos
lock
cmpsl
add
notb
cmp
iret
adc
aad
mov
imul
aam
mov
fisttps
add
clc
cs
bound
hlt
testb
add
test
insl
cmp
dec
dec
pop
dec
inc
and
sub
insb
mov
sub
jle
cmp
sbb
lcall
push
stc
push
pop
dec
and
push
ret
mov
mov
scas
aaa
mov
in
testl
jge
jae
pop
inc
or
repz
jmp
and
test
leave
imul
or
gs
adc
imul
sub
aaa
inc
jnp
loopne
sbb
in
xchg
movsl
push
mov
and
sbb
insl
adc
aam
mov
ja
jb
inc
rcrl
inc
movsl
mov
call
fwait
pop
pop
pop
lock
push
jmp
negl
and
or
fiaddl
rcl
scas
lcall
jae
and
add
ret
push
int3
out
in
outsb
rcr
and
mov
sub
sub
fists
cmp
in
jge
xorl
clc
ss
push
mov
bnd
jge
pop
rcrl
std
arpl
loop
push
sbb
nop
mov
mov
out
fbstp
and
movsl
rcrl
out
mov
imul
or
mov
add
sbb
mov
cld
inc
ds
sbb
mov
pop
jl
xchg
test
dec
sti
mov
dec
and
push
dec
xchg
sub
and
fimuls
test
cltd
loopne
in
in
ret
mov
push
lds
cltd
or
rcl
test
pop
cmc
fs
cmpsl
sbb
mov
add
mov
iret
pop
mov
leave
sub
test
xchg
sarl
xor
shr
popa
mov
cld
or
sub
xlat
nop
jmp
xchg
jns
sub
in
cmpsl
pop
jle
jno
mov
pushf
sbb
data16
fwait
cmpsb
cli
clc
inc
es
shll
cmpsl
mov
fisttpl
jg
jmp
mov
xchg
or
push
and
or
xchg
xlat
adc
iret
push
loop
pop
sbb
mov
clc
lcall
push
pusha
push
out
movsb
icebp
jbe
inc
xchg
lods
outsb
pop
das
dec
mov
mov
lods
push
cmp
cmp
shll
cld
fucomp
imulb
adc
das
cmp
pop
or
outsl
pop
add
mov
xchg
xchg
sbb
lret
call
mov
lret
xchg
lea
sub
inc
and
cmp
mov
je
mov
out
call
sub
and
adc
xor
nop
repz
add
jb
lods
gs
mov
scas
jg
add
xchg
repz
lcall
mov
sbb
cltd
adcb
pop
loopne
movsb
adc
or
gs
testb
inc
fists
pop
fsubrs
jnp
adc
dec
fwait
dec
or
xchg
pop
xchg
lea
mov
lods
mov
loopne
bnd
jmp
sbb
cmp
inc
arpl
fsubrl
scas
cltd
in
decl
xor
or
push
adc
les
sbb
stos
sahf
and
xlat
xor
xor
and
pushf
mov
cmp
aam
xchg
aad
pop
inc
in
stc
and
aad
cmp
jl
addr16
inc
lods
inc
mov
adc
push
shl
fsubr
sbb
jae
and
je
fs
push
cmc
fmuls
rcrl
sub
outsl
sahf
pop
or
mov
add
enter
pop
xchg
xchg
ds
dec
mov
adc
adc
cmpsl
sbb
mov
sub
xchg
or
test
pusha
xor
dec
sub
inc
sbb
repnz
mov
js
mov
pop
sub
mov
cmp
lock
cld
pop
xchg
and
call
sbb
das
mov
inc
scas
jno
xchg
xor
rdpmc
xlat
fwait
into
push
mov
ja
sub
rcrl
enter
adc
and
jns
cmp
mov
mov
mov
mov
or
and
in
add
cli
leave
mov
sarb
sub
push
sub
orl
sub
mov
jno
dec
xor
xchg
mov
sahf
inc
stos
mov
cmp
gs
or
sub
xor
mov
xchg
call
leave
lret
notl
xchg
and
adc
mov
cs
aas
sbb
mov
jns
or
pop
mov
dec
lret
iret
xor
repnz
or
sahf
push
cmc
and
sub
and
inc
and
sub
dec
and
jle
mov
dec
add
in
popa
pop
jl
xor
inc
or
cmp
mov
mov
and
adcb
dec
or
xchg
mov
cmpsb
aas
jmp
push
and
arpl
loop
mov
mov
fnstcw
stos
mov
inc
push
xor
pop
or
pop
ds
iret
and
icebp
stc
xchg
push
xor
and
lds
popf
aas
fisttps
adc
and
mov
js
or
lcall
dec
jo
sub
scas
ljmp
adc
mov
push
mov
inc
mov
lods
inc
nopl
and
sbb
xchg
push
cmpsl
cli
pop
adc
cmp
dec
gs
push
fs
stos
notl
or
lock
push
sti
imul
push
cmc
sub
push
or
mov
fisubrl
jno
cmp
sbb
hlt
pop
xchg
movsl
inc
xchg
sub
xchg
hlt
in
call
stos
pop
mov
incl
aam
je
mov
add
or
sub
ss
in
adc
jmp
ret
aaa
cmp
xchg
and
out
roll
and
jae
jo
je
and
dec
mov
add
pop
hlt
or
scas
cmp
lods
jnp
movsb
mov
int3
ljmp
jg
sbb
or
test
xor
punpcklbw
add
mov
cs
orl
gs
add
mov
mov
stc
movsb
pusha
pusha
lret
aad
mov
aaa
pushf
cmp
lods
mov
jecxz
stos
loop
outsl
push
xchg
adc
jge
leave
xchg
js
sbb
add
dec
test
roll
lret
call
ljmp
adc
push
les
div
fcomp
movsb
outsl
or
ds
or
cmp
adc
fsave
push
mov
les
aas
fprem1
sbb
jb
sbbl
jno
incb
xor
ljmp
std
es
mov
testl
adc
adc
xor
push
aad
pop
mov
rcll
pushf
lcall
push
mov
loope
add
lret
cmpsb
sbb
adc
push
cmc
cpuid
sub
je
imul
or
js
sub
data16
in
push
outsl
cmp
sti
jmp
inc
xchg
xchg
rorb
aas
jb
dec
subl
call
fmul
scas
out
outsl
adc
shrb
orb
aaa
negb
mov
nop
add
jp
clc
hlt
mov
xchg
repnz
out
int
cmp
cmpb
nop
jae
adc
ret
stc
mov
insl
jne
push
ds
mov
adc
incb
mov
dec
fstpt
mov
loopne
aas
xor
pushf
je
jb
out
mov
dec
push
lahf
cmp
fsubs
aaa
stc
jno
jb
cmp
or
pop
bnd
push
sub
and
std
cmc
or
lret
fidivrl
sbb
lahf
and
pop
and
daa
dec
ja
dec
cmpsb
int3
xlat
pushf
testl
jmp
lret
fdivrl
jecxz
clc
imul
pop
std
push
xchg
push
loopne
xlat
pop
cmpsb
mov
adcl
setns
dec
push
sbb
or
pop
push
lock
mov
inc
mov
jnp
xchg
mov
cmpsl
aaa
data16
scas
mov
push
call
int
pop
cmp
lcall
std
push
pop
scas
push
push
push
adc
mov
and
mov
push
lret
dec
dec
movsbl
leave
push
dec
and
test
cmp
fcmovnbe
into
cmp
jmp
sbb
add
insb
cmc
out
ss
mov
push
jne
mov
pop
push
aad
mov
arpl
or
shll
ja
addr16
fcoml
ret
rorb
lahf
cmpsb
xor
gs
xchg
into
test
divl
adc
fnstcw
mov
mov
ss
bound
js
lahf
pushf
fcomps
push
fistps
pop
push
es
in
mov
inc
pop
cmp
dec
jae
mov
insl
mov
add
xchg
lock
cmp
mov
sti
lcall
into
mov
push
mov
outsb
popa
mov
jno
cmp
pop
adc
lahf
faddp
inc
shl
xor
inc
jmp
dec
out
outsl
icebp
lods
xchg
je
aas
push
add
ljmp
xchg
mov
dec
sbb
ljmp
mov
int3
mov
mov
mov
jae
cmp
push
mov
and
jae
mov
pop
mov
or
or
dec
cmp
sub
pop
mov
dec
fistps
pop
cmp
dec
pop
fucom
xchg
adc
fisttps
mov
lcall
push
loop
cs
loopne
sbb
push
mov
pop
lret
repz
dec
adc
jl
jge
gs
notb
and
flds
push
fwait
mov
icebp
fmul
sub
pop
lea
mov
or
les
inc
sub
pop
daa
daa
mov
dec
cmp
inc
mov
inc
sbb
fwait
cld
mov
dec
and
cmp
mov
add
mov
cmp
lods
dec
cmp
int3
inc
mov
pop
call
outsb
jle
in
lcall
xor
and
hlt
movsb
in
shlb
aam
sbb
xlat
flds
jl
push
mov
push
inc
push
iret
loope
test
nop
sti
sub
test
sub
pop
xchg
lods
jecxz
mov
pop
and
lret
push
imul
int3
inc
aas
xor
test
lret
stc
push
out
cld
cli
or
jecxz
cmpsl
mov
imul
cs
cmp
jns
push
sahf
jne
mov
push
repz
dec
filds
sbb
scas
inc
lods
insb
cmp
jae
pop
jmp
repnz
mul
out
out
lret
movsl
xor
dec
dec
ss
push
out
sbb
dec
mov
jns
mov
in
in
enter
adc
and
lret
imul
mov
movl
enter
xchg
out
in
dec
test
or
sbb
push
add
cwtl
or
std
push
add
mov
dec
add
fistps
std
pop
adc
test
dec
pushl
stos
in
pop
cli
scas
popf
mov
xor
in
mov
dec
dec
inc
lahf
xchg
adc
jo
fadd
inc
fwait
dec
cmpsl
pop
clc
scas
gs
mov
enter
icebp
in
pop
stos
rolb
mov
rorl
sti
mov
loopne
dec
test
mov
cmpsb
mov
xor
movq
jns
xchg
sub
aam
or
rcrb
cmp
std
sbb
sub
inc
pusha
mov
cmp
cmc
lret
pop
fbstp
rolb
popf
jb
push
gs
sbb
jno
push
cmpl
mov
cltd
ret
mov
jl
pop
jecxz
lea
mov
sbb
daa
lds
dec
fwait
ja
and
aas
mov
xlat
add
xchg
arpl
test
xchg
jecxz
sub
ljmp
loope
jnp
inc
or
pop
mov
xor
int
push
and
adc
or
fwait
xchg
sub
lcall
ret
leave
cld
test
xor
jae
mov
jl
dec
mov
xor
in
mov
stc
lcall
shlb
ja
cltd
ss
mov
in
pop
outsl
sbb
or
sbb
sub
lret
push
pop
sbb
les
push
outsb
cmp
push
push
jp
adc
sub
cmp
pop
mov
fisubl
ret
popa
cmp
jg
cmpsl
jg
push
xchg
pop
mov
cld
ret
dec
xor
inc
iret
aam
jg
jo
inc
loopne
sbb
out
fmul
cmpl
add
shl
bound
cs
out
leave
cwtl
imul
or
adc
ret
mov
inc
add
push
push
mov
cmp
add
inc
jp
cltd
repz
mov
dec
gs
divl
imul
cmp
shl
sbb
test
in
call
add
inc
jle
and
fisttpll
mov
or
jl
xchg
loopne
test
sbb
inc
fxam
jge
hlt
xor
pop
or
cmc
in
fisubrs
pop
xor
fucomp
dec
or
movsl
cmpsl
stos
lret
loop
aad
out
xor
cmpsl
ret
mov
addl
cli
negl
test
push
or
loopne
dec
mov
insl
mov
dec
push
jp
and
popa
ror
test
fdivrl
dec
adc
jns
mov
mov
int
xchg
jnp
dec
pop
fstps
ljmp
iret
add
mov
push
std
cmp
imul
xor
add
xchg
mov
push
test
loope
jnp
add
cmc
jno
sub
lods
jnp
shlb
test
or
add
outsb
add
cmp
idivb
daa
xchg
add
push
push
xor
into
aaa
add
jb
pop
mov
mov
cwtl
and
repz
stos
jns
and
fdivrs
insl
enter
shl
sub
fucomp
int3
sahf
mov
imul
int
aad
lret
jg
or
push
loope
jmp
stos
dec
inc
call
xor
leave
inc
push
sbb
repz
out
or
mov
xchg
or
xor
adc
aam
xor
gs
cmp
cmc
imul
mov
loop
inc
push
mov
adc
adc
push
gs
xchg
jmp
mov
push
std
cs
es
mov
mov
fimuls
out
popf
adc
mov
push
fs
jge
sbb
inc
and
insb
test
add
jl
lds
lods
pop
pop
data16
mov
decl
fldl
repnz
sbb
dec
adc
mov
inc
or
mov
lods
lock
xchg
out
dec
and
hlt
xorb
ret
es
jge
sbbb
clc
and
out
stc
sbb
and
out
daa
in
inc
sbb
cmp
sbb
dec
fsts
orb
jb
sub
lahf
clc
push
sub
push
sub
add
sub
fbstp
mov
cmp
mov
jb
mov
pop
test
xor
es
cld
subl
dec
jmp
movsb
in
in
mov
xchg
rolb
pop
push
mov
outsl
mov
pop
fistps
and
and
les
sbb
inc
out
mov
fmuls
push
stos
xchg
cli
jl
mov
xorb
cwtl
pusha
jp
ljmp
push
cmp
dec
decl
cmpsl
mov
stos
add
adc
lcall
inc
into
sub
inc
sub
bound
scas
test
std
xchg
pushf
bound
jg
xor
nop
cltd
test
and
jb
stc
pop
enter
cs
xchg
leave
out
jne
push
inc
insl
repnz
mov
push
repz
sbb
or
std
mov
lcall
test
out
xchg
push
inc
bound
cwtl
popa
push
inc
es
mov
inc
dec
xor
pop
stc
cld
pop
sub
dec
testb
inc
aam
inc
jp
adc
mov
mov
or
clc
pop
testl
addl
vcmpps
clc
jns
cmp
jbe
mov
push
rolb
sub
data16
mov
push
enter
call
xchg
cmp
nop
lahf
gs
sbb
leave
cwtl
lods
mov
jb
mov
mov
dec
stos
sbb
stc
mov
cs
pop
sub
cmovle
mov
test
push
add
push
and
lods
daa
push
rcrl
rorb
mov
cmp
clc
dec
mov
lret
loopne
inc
xor
xchg
mov
push
icebp
and
adc
push
pop
adcb
fsubl
cmp
int
jle
pop
xchg
pusha
lock
outsb
ds
int
fdiv
pop
sub
sbb
adc
es
ficompl
mov
or
inc
cmpb
repnz
testb
mov
jb
mov
in
je
adc
pop
adc
cli
cli
xchg
xor
mov
sub
push
fdivrl
das
addr16
pusha
mov
sbb
dec
pop
adc
add
fcos
mov
sahf
aam
lock
add
mov
aad
add
scas
inc
xor
inc
sbb
dec
add
mov
es
and
xor
cmp
or
sbb
jae
add
inc
dec
scas
pop
xor
sub
loopne
loopne
insb
pop
movsl
dec
in
and
loope
push
test
aas
clc
outsl
fsubrs
xchg
aaa
lods
push
mov
dec
push
stc
inc
push
mov
out
fsubs
lea
fisubl
in
adc
adc
stc
loop
cmp
jae
xchg
push
push
and
xchg
ret
jmp
ret
loope
xor
jecxz
xchg
jns
jg
mov
pop
es
aam
xchg
ja
inc
imul
lock
sti
stc
pop
jnp
in
pop
and
sti
sub
ret
addr16
subl
jecxz
inc
subb
clc
push
dec
in
xor
mulb
sahf
pop
je
and
aas
nop
or
out
loope
lock
add
jg
and
leave
add
sbb
stc
xor
sbb
xor
pop
push
mov
loope
add
mov
or
nop
pushf
imul
dec
mov
lods
test
xor
push
sbb
adcb
nop
sbb
mov
daa
cmpsl
sbbl
dec
cmp
dec
add
arpl
pop
pop
jae
notb
ds
pop
mov
dec
cmovbe
adc
jo
cmp
xor
cltd
mov
pop
add
arpl
sahf
bound
insb
xchg
and
mov
dec
dec
divb
sub
es
ljmp
or
sbb
mov
dec
mov
mov
outsb
addr16
mov
andnps
inc
arpl
into
inc
pop
mov
test
xchg
ljmp
mov
les
jge
stc
mov
inc
fmuls
mov
cmpsb
ret
ds
nop
subps
in
add
fistpl
pop
jl
hlt
sbb
inc
inc
and
push
pop
cmpsl
movsb
out
pop
imul
add
andl
pushf
cmpsb
mov
inc
push
ljmp
sbb
sbb
adc
xor
mov
roll
jo
fisubl
insl
dec
inc
jno
into
dec
mov
jae
jecxz
imul
pop
in
push
fistpll
cmp
faddl
adc
ret
mov
or
inc
outsl
test
bound
xchg
sub
imul
cmp
fstpl
lock
jnp
dec
mov
jp
push
xchg
cld
or
in
cltd
shl
ja
inc
mov
and
xchg
inc
ss
fld
or
adc
add
fildll
xchg
sub
lds
mov
arpl
fwait
insl
lahf
inc
push
cmpsb
push
push
pop
or
mov
sub
in
adcb
inc
dec
pusha
xchg
inc
or
mov
iret
cli
insl
dec
push
out
out
int
inc
aaa
sbb
jbe
jb
jl
sbb
jl
jbe
mov
test
push
dec
jmp
mov
out
rcl
or
iret
mov
idiv
mov
les
dec
jge
mov
sahf
stos
pop
in
fiadds
enter
xor
fdivrl
add
cwtl
pop
clc
push
push
mov
je
mov
push
inc
out
hlt
add
ret
push
mov
addb
mov
ret
cmp
rorl
mov
test
out
sub
jb
mov
cmp
loopne
pop
inc
pop
adcl
jnp
insb
fmuls
outsl
sti
sarl
jae
cmp
push
fwait
mov
add
shlb
xor
xchg
mov
cmpsb
adc
lods
mov
add
cwtl
into
js
ljmp
dec
out
jp
xor
outsb
adc
movsb
adc
movsl
xor
loop
js
mov
movsb
test
jns
or
inc
addl
push
mov
fidivrl
mov
pop
scas
aaa
fldcw
sti
inc
mov
mov
movsb
xchg
xchg
imul
mov
adc
icebp
push
rcl
mov
je
push
jg
lcall
jb
test
mov
inc
or
mov
mov
add
aad
sarb
ret
xchg
fistps
out
xor
in
dec
xor
sub
and
movsl
leave
fwait
mov
mov
shll
sbb
push
rcrb
out
sub
fstpt
jo
or
sub
pusha
daa
pop
mov
lods
iret
enter
xor
mov
xchg
add
sbb
stos
cmp
mov
adc
int
out
jae
xor
stos
popa
insb
inc
adc
sub
stos
sahf
inc
lcall
xor
inc
pop
inc
xchg
push
inc
insb
mov
popa
push
sbb
mov
mov
aad
insl
dec
imul
and
add
dec
enter
xor
pop
cmp
sbb
mov
test
imul
and
add
loope
test
jbe
xor
jp
cmp
sub
inc
pop
xor
xor
push
jmp
cmpl
jle
xchg
jno
dec
cmp
jae
stc
shrl
lcall
jecxz
out
je
pushw
test
inc
jns
inc
paddq
mov
mov
in
xchg
fcomps
ret
fsubrl
aas
push
push
notl
lcall
les
sarb
insb
aad
add
aad
xlat
jecxz
in
ss
insl
out
hlt
push
fwait
nop
push
paddb
xchg
or
or
fidivrs
pushf
iret
xchg
or
insl
and
lock
and
in
or
inc
sbb
stos
inc
mov
push
lds
xchg
dec
inc
mov
jmp
popa
imul
shll
fldenv
adc
outsb
sbb
cmp
sbb
into
or
shl
dec
inc
xor
and
pusha
push
jne
movsl
push
and
out
fmulp
dec
daa
xchg
xor
push
addb
lods
je
push
cmpsb
inc
mov
loope
daa
mov
jb
repnz
mov
cmc
inc
push
dec
push
int
fisttpl
push
sti
leave
cmp
adc
pop
and
roll
adc
mov
daa
in
js
jg
daa
inc
inc
jno
sbb
lds
adc
or
sub
pop
dec
jne
add
jp
cmp
leave
or
cwtl
mov
cwtl
nop
int3
fbld
xlat
pusha
mov
enter
call
adc
xor
subl
xor
daa
int3
xchg
mov
mov
mov
add
mov
push
adc
repz
test
xor
mov
xor
mov
cmp
ljmp
in
pop
and
enter
adc
hlt
cmpsl
add
mov
mov
xchg
loope
adc
mov
mov
ss
call
inc
push
ret
imul
ret
insl
mov
fstpt
jbe
or
sbb
mov
scas
xchg
and
arpl
cmp
cmpsl
insl
cmp
lret
dec
or
inc
or
lret
nop
add
mov
aad
fcmovne
loopne
dec
shl
lahf
icebp
adc
xchg
aad
imul
jne
inc
or
mov
ror
jge
add
cmp
mov
mov
mov
imul
push
push
add
stos
add
rol
lret
mov
jo
mov
xchg
inc
sbb
pop
cmp
je
cmc
rolb
cmp
sub
inc
loope
mov
outsl
mov
sarl
inc
or
pop
and
dec
out
or
filds
adc
lock
push
fadds
js
xchg
jmp
cmpsl
add
pop
out
inc
es
push
sbb
test
adc
push
or
popf
js
mov
or
pop
push
lods
push
movsl
and
rcll
cwtl
mov
out
cmovnp
pop
pop
push
xchg
push
mov
or
pop
shll
sbb
test
leave
jo
enter
rdpmc
das
shrb
cmp
fs
movsl
inc
inc
ljmp
xor
xchg
xchg
data16
cmp
fidivrl
lret
sub
sub
sbb
test
fwait
xor
lret
insl
insb
sub
in
shlb
adc
mov
pop
mov
ljmp
mov
movsl
pop
pop
call
shl
aad
or
movsb
sub
cmp
es
fidivrs
jecxz
hlt
push
jg
shl
enter
jb
imul
sbb
xor
jnp
adc
dec
dec
lret
lret
mov
mov
xchg
cmp
fs
push
stos
aaa
mov
mov
mov
ret
data16
cmpsb
and
sub
jbe
xor
xchg
push
mov
lds
ss
or
cltd
jg
int3
push
xor
orb
data16
mov
dec
div
inc
enter
dec
std
shrl
loope
mov
push
mov
cmp
jmp
add
imulb
mov
sub
adc
sbbl
shr
pop
lea
adc
out
sti
push
lcall
xchg
pop
xchg
ds
jnp
mov
xor
xchg
jmp
adc
jb
clc
xchg
in
test
test
jb
pusha
mov
les
push
cmp
loopne
and
aad
xor
adc
add
dec
ret
outsb
icebp
pop
repnz
mov
test
mov
loope
subl
cmpsb
int
popl
mov
or
imul
dec
dec
sub
and
std
in
lret
pop
mov
mov
or
es
or
aaa
enter
xchg
sub
adcb
fwait
push
lret
mov
sub
mov
movsb
pop
out
sbb
xchg
roll
notb
pop
addr16
xchg
mov
mov
xchg
or
mov
movsl
mov
vmovhps
mov
dec
pop
cmp
add
lret
decl
popa
pop
das
into
fstl
out
pop
icebp
push
pop
js
cmpsl
pop
in
and
mov
push
and
lahf
imul
jl
int3
mov
pop
mov
jge
sbb
jnp
aaa
sahf
mov
push
popf
xor
jnp
add
jg
jmp
sbb
xor
out
in
sub
insl
pop
dec
jmp
insb
loope
loop
pop
sbb
movsw
int3
fwait
or
jb
test
push
loop
stc
lods
test
lds
and
push
pop
mov
mov
dec
push
js
jmp
xchg
mov
jne
dec
sbb
imull
adc
cli
cmp
jg
fstp
fimuls
lahf
sub
xor
and
jbe
jecxz
aaa
popf
mov
fbld
outsb
or
std
mov
out
fwait
aas
cmp
out
ret
out
test
je
mov
movsb
lea
sbb
pop
jecxz
ss
or
jnp
out
ljmp
mov
jp
bnd
inc
pop
mov
cmpsb
cmp
dec
dec
sbb
add
add
shll
xchg
pop
popa
addr16
mov
test
pop
mov
negb
adc
lea
cmp
scas
aas
xchg
inc
sarb
call
insl
fwait
sbb
sbb
push
bound
call
leave
das
jle
gs
fsubrl
inc
flds
roll
aad
or
rorb
push
mov
dec
pusha
repnz
rcrl
dec
imul
pop
pop
and
or
insl
sbb
xor
lods
pusha
ja
stc
cltd
adc
cmpsb
pushf
loope
xchg
pop
cltd
adc
and
ret
lds
push
ret
sbb
lods
in
orl
mov
mov
jg
js
ljmp
inc
cmp
push
mov
js
cld
out
cltd
mov
and
mov
das
jg
scas
scas
test
xchg
lret
mov
das
or
icebp
or
mov
dec
sub
ljmp
xchg
pop
daa
das
js
xchg
push
mov
dec
xchg
fdivrs
pop
mov
and
dec
loop
imul
xor
fimull
mov
cmp
out
dec
mov
mov
out
xchg
mov
ret
jge
rcr
clc
jb
enter
cmp
shlb
mov
mov
fdivl
popf
cmpsb
jb
int
bound
les
pop
sub
loop
out
cld
pop
adc
xor
xor
in
pop
mov
add
je
pop
stos
mov
outsb
mov
mov
out
ja
xor
xchg
cwtl
int3
addr16
pop
xor
mov
xlat
sub
je
sbb
mov
xor
and
or
in
dec
fsubrs
mov
pop
xor
iret
mov
xor
xchg
cmpsl
enter
mov
jne
pop
mov
push
int3
xlat
fistps
fstl
in
fildl
rcrb
stos
push
ss
imul
cmp
push
idivb
ja
sbb
movsl
stc
mov
mov
push
adc
push
stos
xchg
in
mov
mov
inc
daa
daa
push
mov
sbb
pop
fidivl
lods
lahf
xor
xlat
fdiv
add
jb
in
xchg
push
sub
jmp
xor
add
int
adc
dec
xchg
ljmp
mov
dec
push
hlt
das
pop
cmp
sarb
xchg
pop
adc
fdivrl
fdivrp
out
sbb
lods
and
push
rolb
pop
scas
push
sar
adc
popf
lea
jb
stc
lret
stc
inc
add
push
xchg
xchg
jnp
sub
andb
mov
sub
jecxz
mov
lds
cli
aad
stc
xor
jg
pop
jecxz
sub
sbb
pop
or
mov
imul
push
mov
mov
outsl
jle
cmp
in
lcall
dec
push
mov
fnstenv
adc
lea
sbb
adc
pop
add
lcall
dec
dec
mov
out
or
aam
test
xor
ljmp
int3
push
out
mov
lea
xchg
out
push
xlat
and
bound
stos
sti
arpl
mov
lcall
cmp
jnp
xor
and
jmp
xor
adcl
faddl
and
dec
data16
lods
dec
cmp
push
inc
lret
xchg
imul
fiaddl
cmp
loope
jge
xchg
add
dec
pushl
popa
enter
out
cmp
shll
pop
lret
adc
or
test
imul
aad
out
mov
dec
mov
aas
lea
in
mov
mov
and
sub
adc
out
mov
xchg
daa
clc
outsb
sub
addl
sbb
insb
mov
filds
pusha
cld
orb
sbb
sub
mov
imul
pop
xor
jle
sbbl
mov
lods
nop
mov
es
jne
std
xchg
mul
jp
sbb
iret
int3
push
stos
in
sbb
ret
jg
data16
hlt
push
test
xor
rorl
mov
or
xchg
or
xchg
fstps
mov
mov
jg
sahf
and
pop
jb
outsb
out
out
push
or
test
mov
bound
lds
scas
inc
ss
movsb
inc
xor
push
loopne
loopne
ja
mov
imull
lock
sbb
xor
arpl
push
jg
jp
lret
adc
lds
pop
lds
inc
jns
lock
dec
ret
pop
mov
orl
inc
push
lcall
jecxz
sahf
push
shl
out
mov
scas
cwtl
push
xchg
jns
pop
pushf
xor
js
aas
andb
sub
pop
mov
push
ljmp
bound
dec
cmp
lock
sub
movsl
jmp
in
into
data16
mov
lahf
jmp
mov
and
dec
pop
insb
mov
cmp
mov
nop
mov
dec
ret
mov
add
loop
jp
sbb
mov
xchg
xor
sti
mov
cltd
sub
gs
fsubl
rcrb
pop
mov
cmc
adc
bound
sbb
addl
pop
ret
push
jecxz
push
xchg
ret
js
cmp
cli
pop
lret
jmp
shrl
movsb
inc
or
test
sub
sti
dec
addr16
pop
sbb
lcall
bound
out
push
sub
in
in
jle
addl
cmp
sub
push
gs
sbb
jmp
les
and
loopne
imul
fucomip
in
jns
cmpsb
adc
or
addb
mov
sbb
fsub
xor
mov
adc
into
cmpsb
dec
movsb
xchg
sub
inc
popa
je
push
push
push
sti
lret
push
fdivp
mov
in
out
or
jns
push
icebp
outsl
mov
pop
sub
inc
cwtl
push
and
adc
jp
imul
pushf
in
dec
ffree
inc
ja
nop
js
push
mov
cmp
xchg
sub
fwait
dec
add
ja
pop
dec
and
xchg
mov
iret
pop
or
int
imul
xor
lea
lret
mov
push
cwtl
out
lods
out
lcall
xor
call
xchg
push
arpl
or
lret
sbb
or
jge
sub
mov
xor
xchg
jl
pop
les
sti
je
in
repnz
clc
ds
aam
in
add
ss
jo
frstor
sub
cli
jo
das
ret
in
in
mov
add
add
fisubs
shrb
bound
sbb
aam
bndldx
cltd
jl,pt
xchg
inc
inc
lahf
pop
lock
jle
pop
ret
pop
sbb
cmp
push
in
cmpl
ret
jge
mov
test
fsubs
xor
dec
pop
fstl
mov
into
mov
push
pop
lds
aaa
stos
xchg
outsl
dec
bound
add
jge
add
jge
jmp
ss
sub
mov
inc
lahf
fdivrs
inc
mov
xor
push
push
inc
jo
mov
shlb
push
int3
enter
mov
add
push
into
js
push
sbb
aas
lds
lods
ss
and
sti
jmp
push
aam
push
and
hlt
adc
xchg
aam
adc
mov
dec
xchg
addl
cmpsl
pop
hlt
pop
xchg
inc
push
and
lret
cwtl
add
icebp
push
pop
mov
leave
enter
ds
jae
mov
pop
adc
adc
mov
jmp
sub
xchg
setle
stc
sub
popf
out
pop
sahf
lock
lahf
and
sub
les
cmp
mov
je
mov
dec
push
mov
mov
popa
idivb
dec
inc
setno
xchg
pop
push
mov
mov
fcmovb
sub
mov
dec
jp
pop
fisubl
and
sbb
sub
adc
lcall
jg
or
sahf
add
mov
mov
cwtl
into
mov
lret
adc
loop
push
sub
mov
sbb
movl
cmp
ljmp
cmp
add
pop
ds
dec
mov
pop
and
mov
out
xchg
inc
dec
outsb
repnz
push
and
mov
or
imul
jbe
ds
outsb
leave
dec
icebp
decb
repz
push
iret
push
ljmp
sub
data16
testb
xchg
lcall
clc
aaa
ret
jnp
imul
pop
mov
xchg
pop
sbb
xor
jo
ds
testb
sbb
sub
push
out
mov
dec
das
push
jne
fadd
lods
pop
xor
imul
sub
aam
in
icebp
shll
jnp
call
sub
repnz
fs
hlt
or
add
lcall
outsb
push
adc
rep
ds
mov
cmp
mov
xor
ljmp
test
stos
push
sbb
mov
jle
or
inc
and
lea
inc
cmp
pop
adc
adc
mov
loopne
mov
jl
cld
xor
lea
loope
sub
aad
xchg
test
and
enter
les
notb
ljmp
mov
mov
ljmp
jg
pop
push
sbb
mov
sbb
jne
das
jl
sub
lcall
pop
loop
sbb
enter
sti
rorb
aas
cmp
pop
mov
lret
jp
jecxz
or
movsb
in
push
and
push
jno
xor
es
sarb
pop
pop
jg
sbb
mov
int
mov
daa
add
sub
outsb
dec
xchg
pop
imul
leave
cmp
out
cld
in
or
out
scas
adc
not
dec
in
push
dec
scas
sub
lahf
dec
daa
or
jle
in
adc
or
not
sbb
pop
push
pusha
fwait
and
ret
je
movsl
bound
sbb
push
aam
cmc
add
pop
adc
in
out
sbb
adc
xchg
out
ret
shl
nop
mov
int
pop
daa
add
ret
notl
call
jbe
imul
pop
inc
add
xchg
xor
xchg
or
xchg
mov
pop
dec
pop
popa
mov
push
aas
in
shll
stc
jnp
pusha
or
rorb
push
push
bound
int
inc
mov
das
je
xor
sahf
insl
xchg
mov
push
sti
pop
subl
notb
dec
clc
test
push
mov
inc
stc
xchg
lea
clc
add
inc
jl
jmp
aad
mov
shll
divb
pop
mov
es
inc
out
inc
pop
sbb
repnz
mov
adc
mov
inc
cmp
cmp
cmp
call
pop
loopne
cmp
fcomps
out
fdiv
push
aas
and
in
mov
mov
mov
sbb
pop
insl
sbb
pop
sbb
mov
fcoml
mov
dec
lret
pop
mov
fwait
loope
mov
out
mov
pop
std
repnz
int
sbb
scas
xchg
xor
ja
dec
rorb
rcll
dec
std
inc
cmp
cmpsb
rorb
sbb
lcall
shl
cmp
fst
mov
mov
out
pop
aas
imul
jecxz
enter
push
push
xor
mov
cmpl
aaa
xchg
stos
test
xchg
sub
jo
xchg
movsl
sbb
ss
sbb
lahf
mov
pop
cmp
inc
mov
shll
jl
xor
xor
call
sub
mov
pop
pop
xor
rcr
outsb
repnz
dec
test
sarl
pop
xlat
dec
and
mov
movsl
in
adc
jae
jbe
sbb
stos
push
xchg
mov
cmc
or
fcoml
mov
jmp
loope
fnstenv
test
addr16
int3
inc
aad
xor
xor
mov
xchg
stos
jl
or
dec
push
jmp
popa
int
sbb
xor
loope
insl
mov
add
cmp
ret
fisubrs
mov
fsubs
andl
xor
dec
jnp
roll
repnz
push
sbb
mov
mov
push
repnz
and
mov
popa
pop
pop
popa
jmp
dec
insb
faddl
repz
jns
inc
sbb
push
xchg
mov
jb
add
int3
xchg
pop
mov
inc
inc
cmp
cmp
loope
loopne
int
and
gs
sub
sbb
mov
scas
xchg
add
push
add
lret
sarl
adc
xchg
jp
sbb
mov
push
xchg
mov
ds
jno
lret
sahf
xchg
out
and
inc
cli
jl
ss
fld
loope
aaa
shrb
inc
js
out
jae
test
outsl
mov
cmp
pop
mov
out
cmp
sub
movsl
or
into
outsl
jb
clc
sar
outsb
dec
add
fcoms
bound
test
pusha
ja
lahf
mov
mov
sbb
xchg
cmp
dec
loop
daa
ret
sbb
scas
je
xchg
sbb
mov
adc
fistl
iret
enter
jno
cwtl
xor
sub
add
xor
mov
mov
aam
mov
insb
xchg
xchg
sbb
or
xchg
das
jb
pop
cmp
push
and
push
aaa
je
dec
xchg
mov
adc
add
popf
mov
and
pop
mov
jne
adc
xor
dec
and
lahf
mov
aaa
test
mov
loope
stos
fstpl
jmp
ficoml
and
movsb
sub
inc
push
and
out
mov
shrb
cmp
mov
fs
mov
jecxz
hlt
jns
cmp
mov
jecxz
mov
stos
cmc
sahf
inc
jne
inc
test
shrb
icebp
nop
imul
out
sub
repnz
jl
cmp
mov
hlt
add
pop
pop
icebp
popa
sub
lahf
add
cmp
stos
lods
mov
adc
lods
sbb
xchg
xchg
xchg
std
clc
fisubs
add
dec
es
and
or
pop
mov
mov
jl
les
jl
and
dec
mov
bound
testb
test
popa
sub
adc
push
mov
mov
push
push
lock
mov
cld
fs
and
fisubs
jp
mov
iret
clc
cmp
inc
jae
mov
enter
outsl
xor
mov
jnp
mov
into
hlt
ljmp
mov
test
movsb
jno
in
mov
inc
sub
push
mov
xor
scas
pushf
pusha
push
mov
popf
fsubrs
cs
mov
push
cli
xchg
sub
sti
lods
inc
dec
repnz
add
push
scas
push
dec
cmp
cmp
imul
adc
inc
mov
sbb
mov
sub
push
in
shll
out
add
pop
lahf
shll
xchg
mov
ret
addr16
pop
subl
add
out
insl
mov
or
shr
and
or
insl
push
cmpl
data16
divb
adc
xor
ss
lret
mov
imul
fsts
push
pop
adc
jecxz
das
push
lock
cmpsl
cmpb
shl
cld
shr
xchg
aas
clc
inc
jecxz
adc
cmp
test
mov
jo
push
mov
inc
dec
push
mov
cmc
insb
sub
loopne
insl
fsubrl
icebp
add
in
and
push
or
xchg
xchg
addr16
invd
imulb
mov
adc
insl
std
mov
mov
xor
or
mov
mov
lahf
xchg
fimuls
mov
divl
fs
cmp
pusha
cmpsl
xor
adc
push
or
push
mov
add
out
add
test
dec
cmp
ljmp
push
aad
aam
push
mov
and
bound
daa
sub
hlt
jnp
mov
or
cwtl
cltd
adc
adc
cmp
adcb
cmp
subb
lds
in
mov
pop
and
push
mov
push
imul
sbb
jge
scas
push
xchg
sbb
enter
mov
not
fs
rolb
mov
rcll
enter
cltd
sub
sbb
push
jae
cs
fldenv
outsb
repnz
pop
sbb
lea
loope
popf
dec
pop
and
out
icebp
andl
and
jecxz
xor
loop
sbb
dec
cmp
shr
add
mov
lock
sub
cmp
fisubrl
push
pushf
push
repnz
xor
pop
cmpsl
jecxz
jb
or
mov
or
imul
addb
stos
and
sbb
pop
mov
xor
mov
cmp
inc
pop
mov
inc
fnsave
out
push
cmpsl
pop
imul
inc
loop
xchg
inc
mov
cmp
in
mulb
arpl
jmp
clc
and
outsb
out
inc
xchg
xchg
mov
cwtl
rcrl
push
add
outsl
dec
push
icebp
imul
jecxz
fildl
rolb
mov
sbb
pusha
movb
int3
dec
pop
cs
mov
jl
add
mov
repz
and
lcall
pushf
sub
sbb
inc
add
mov
movsb
nop
add
cmp
ds
cmc
dec
fsubrl
jns
ljmp
fmulp
jge
cmp
push
xor
jmp
or
xchg
jl
inc
cs
loop
adc
pop
sahf
arpl
in
aam
sbb
jecxz
and
adc
lds
adc
cmpsl
push
mov
in
in
fisubrs
mov
ljmp
dec
shl
popa
cwtl
push
and
call
hlt
sbb
dec
push
ficompl
or
repnz
push
loop
ljmp
dec
test
sti
lds
mov
adc
test
bound
cmp
cmp
pop
push
xlat
jg
movsb
mov
scas
in
imul
movsb
pop
or
ret
js
popf
std
fisubs
mov
sbb
pop
call
pop
dec
dec
mov
push
push
negl
add
xor
jb
add
jno
xlat
data16
fwait
jp
daa
js
sar
sbb
gs
sti
into
add
pop
out
sub
int
bound
pop
imul
sub
mov
or
mov
mov
mov
jl
fsubr
icebp
mov
push
data16
lret
push
and
lds
pop
and
add
test
ret
dec
pop
mov
rcll
adc
mov
push
inc
lock
nop
or
push
popa
cmc
xchg
pop
mov
mov
and
xchg
push
pushf
pushf
jae
or
dec
or
sub
or
adc
loopne
jmp
or
pop
or
cmp
cmpsb
add
call
inc
insb
add
jmp
sbb
frstor
add
pusha
lock
aaa
out
mov
xor
rcll
mov
imul
cmp
insb
jnp
out
cli
outsl
mov
add
sub
popf
sub
jae
imul
pop
xlat
or
add
popl
mov
push
pop
cmpb
jle
add
xor
xchg
cmpb
aad
out
mov
pop
hlt
fwait
repnz
lret
fcompl
in
dec
jo
cmpl
fsubs
out
je
movsl
push
cmp
add
mov
into
lret
inc
mov
sbb
repnz
inc
icebp
fwait
sbb
aad
pop
scas
in
sub
out
cmp
shl
sbb
mov
out
cmpsb
xor
push
roll
aad
xor
fcmovbe
shrl
idivl
into
sbb
stos
add
adcb
stos
mov
jbe
rcrb
mov
mov
sbb
iret
cmp
mov
push
or
mov
mov
lds
fwait
in
add
pop
add
sub
lods
ret
ret
and
mov
sbb
dec
scas
dec
mov
dec
add
push
test
mov
aas
scas
pop
xor
rorl
jne
mov
mov
dec
shufps
mov
xor
inc
shlb
sbb
inc
cld
xor
lret
sub
push
jae
and
fisttps
or
jp
mov
mov
shll
pop
xchg
adc
jo
fisttpll
daa
scas
and
lret
xchg
movb
or
cmpl
and
xchg
jbe
jae
aaa
jno
xchg
mov
push
pop
scas
cmp
gs
jmp
hlt
enter
push
sbb
icebp
mov
cmp
jge
stos
jno
mov
fstps
add
mov
mov
sbbl
push
jl
jno
add
js
aaa
shll
xor
mov
cmpsl
sub
add
inc
roll
sbb
andps
push
les
xchg
dec
sub
inc
push
idivb
fbld
fsub
in
mov
lods
pop
lret
loop
outsb
insl
push
mov
call
arpl
xor
rclb
dec
sbb
cmp
in
mov
dec
int
adc
jecxz
cmc
test
jne
mov
bnd
pop
mov
xchg
inc
inc
jbe
rcr
fisubrl
push
inc
test
int
mov
mov
sbb
xchg
mulb
lahf
and
mov
out
inc
out
sub
add
lahf
pop
inc
xchg
mov
dec
xor
mov
leave
jae
stos
leave
scas
dec
subl
fisttps
es
dec
sbb
sbb
sbb
cwtl
or
imul
cmp
leave
in
sarb
jge
sub
in
pop
int
fsubrs
add
aaa
rorl
orl
adc
sub
cmc
fwait
or
test
into
xchg
and
movsb
insb
fldenv
adc
into
push
cli
fsub
sbb
in
sbb
xor
pop
push
outsb
cmp
lret
lds
xchg
ffreep
stos
jecxz
jg
mov
int
inc
sbb
pop
cs
xchg
mov
dec
dec
jnp
scas
insb
cmc
cmp
insl
in
cltd
dec
je
add
dec
movsb
cmp
and
rorl
loop
add
inc
or
fsubr
insl
push
icebp
inc
pusha
cmc
in
jg
mov
mov
or
ret
push
andb
or
fs
out
gs
and
pop
sti
mov
push
jp
xlat
loopne
mov
xor
pop
lahf
mov
inc
pop
nop
insl
stc
push
ljmp
push
out
or
fdivrl
jns
js
push
push
cmp
inc
xchg
mov
mov
mov
loopne
sahf
and
adc
jle
inc
xor
pop
xor
or
push
js
sub
jo
ds
mov
scas
mov
mov
sbb
add
es
and
icebp
xchg
lahf
xchg
clc
mov
daa
jg
fs
inc
jns
stos
cltd
pop
insb
jno
pop
cld
in
cmp
cmpsl
cli
repnz
and
aam
jns
mov
lds
jo
push
cmp
adc
jg
add
jg
mov
jo
pop
fdivr
lcall
add
ss
jnp
push
jl
push
out
fistps
out
sahf
xchg
scas
andb
pop
fnstsw
jge
lahf
pop
mov
mov
jbe
js
mov
das
ja
sub
ret
push
pushf
orb
dec
dec
add
mov
das
adc
es
scas
jne
pop
xor
jns
sbb
pop
pop
mov
push
pop
sub
das
int3
mov
iret
xchg
aaa
push
cmp
xchg
test
fiaddl
xchg
sbb
jbe
sub
xor
and
xlat
out
lcall
jecxz
aaa
adc
xchg
sub
stos
dec
subb
out
jle
sti
xor
jno
insb
jns
ds
test
movswl
popl
xchg
inc
push
sahf
insb
fisttpll
or
xor
pop
cmp
aaa
jns
inc
lods
inc
sbb
les
inc
in
imul
mov
sbb
jl
cmp
add
mov
mov
xor
outsl
mov
mov
pop
fisttps
push
test
aad
cli
loopne
adc
les
int3
jmp
aad
mov
mov
imul
pop
dec
lahf
adc
pop
iret
repz
dec
jb
jle
test
dec
int3
jns
jbe
add
rep
pushf
mov
xlat
xchg
push
and
push
ja
inc
cmpsb
push
fsubl
fldcw
idivb
aas
je
es
int3
or
sbbb
or
ret
nop
scas
mov
xchg
movsb
or
sub
lcall
sbb
lods
shlb
xor
inc
or
mov
rcrl
push
xchg
push
lahf
jae
cwtl
fildll
fs
cmp
fsubs
fildll
mov
testl
push
xor
push
xchg
and
push
aam
sub
scas
xor
mov
rorb
rcr
mov
je
movsb
xchg
ret
and
mov
and
mov
xchg
daa
jmp
dec
lods
xchg
clc
clc
jnp
add
aaa
or
test
jnp
xchg
cmp
sub
loopne
rcll
pop
jg
xchg
and
lds
fsubr
mov
mov
dec
loop
mov
fs
insl
mov
fmul
jae
shl
scas
stos
out
clc
enter
enter
mov
cltd
or
loope
cmp
xlat
and
push
or
push
jle
pop
ret
cltd
xor
add
shrl
mov
cld
mov
loopne
pop
inc
fsubl
mov
and
lea
mov
addb
hlt
pop
or
call
cmp
into
ja
sbb
mov
or
addr16
fxch
xor
sub
icebp
in
cmc
mov
xor
cli
ds
les
inc
push
lcall
mov
es
test
push
pop
push
aas
insl
push
cmpsb
test
sub
subl
outsb
insl
sub
loope
cltd
ja
mov
xlat
xor
cmpsl
popa
out
pop
xor
mov
cmp
stc
mov
xchg
mov
lret
jp
add
inc
sarb
scas
xchg
mov
dec
pop
xor
pop
arpl
jne
sbb
cli
popf
pop
iret
mov
in
mov
repz
mov
add
fsubr
jmp
shrb
lods
ds
movq
sub
mov
xor
loope
lret
pop
cli
push
sub
adc
push
cmp
sarb
push
push
call
ret
jp
lcall
addr16
test
mov
cmp
gs
mov
jno
pop
daa
inc
pop
pop
dec
in
outsl
jne
xor
leave
jbe
inc
les
mov
stc
sbb
or
push
outsb
daa
mov
loopne
add
add
xchg
xlat
mov
je
lds
dec
ret
and
pusha
and
aas
lods
or
mov
xor
add
das
addb
adc
fcoml
xchg
and
fcmovnu
dec
jmp
inc
sbb
loopne
inc
or
mov
lods
filds
inc
mov
in
movsl
cs
cld
adcb
mov
incl
or
sbbl
in
cwtl
sahf
and
jae
lds
out
mov
mov
push
ss
imul
in
pop
or
pop
aam
iret
loope
xor
push
ja
adc
and
and
xchg
mov
in
jbe
es
or
xchg
cmp
ljmp
add
pop
cmp
jp
subl
xchg
push
jp
in
mov
inc
jae
inc
cmp
std
in
cmp
ret
frstor
lcall
ret
push
call
xchg
cmp
mov
jns
sbb
dec
cmp
and
push
push
rorl
mov
add
adc
adc
jecxz
push
fs
es
add
clc
or
sbb
jno
sbb
fiadds
sub
dec
push
adc
push
rolb
xchg
mov
addr16
sub
test
popf
push
or
or
sub
push
jmp
test
lock
int
xchg
loopne
xchg
arpl
and
push
push
cmp
arpl
lds
fwait
icebp
add
xchg
movsb
jns
inc
dec
sbb
cmp
xor
mov
hlt
lcall
addr16
fldcw
cmp
xchg
or
sub
sub
adc
cwtl
fisubs
jecxz
inc
sbb
in
loopne
sbb
mov
inc
sahf
nop
cld
and
sbb
je
pop
cmp
push
and
pop
lret
inc
test
xor
mov
fnstsw
fsubrl
je
shlb
dec
pop
cmp
xchg
pop
cld
jmp
adc
enter
arpl
sbb
ret
jge
mov
inc
std
test
sub
mov
dec
hlt
or
sub
pop
jle
pop
and
jnp
jmp
push
or
out
jbe
mov
inc
add
inc
call
call
pop
shrl
mov
sbb
push
sbb
dec
add
sub
pushf
repnz
dec
scas
ror
inc
lds
into
js
jmp
out
dec
ja
imul
sub
inc
cmp
ds
divb
aas
pop
inc
mov
push
daa
xchg
cld
xor
imul
jecxz
into
lods
mov
loop
ds
popl
adc
cmp
les
sub
jg
jb
into
or
push
fisubs
stos
pop
fnsave
nop
dec
cmp
adc
pop
pop
xlat
jo
adc
in
jne
cwtl
push
es
paddq
mov
outsb
in
insb
pusha
pop
pop
out
cmc
std
popa
rclb
out
push
fsubs
xor
les
ja
xor
fcomp
cmpsb
cmp
cmpsb
fucomi
es
add
lret
sbb
clc
xlat
fdiv
ja
dec
popa
add
movsl
fisubs
popa
movsb
mov
dec
push
pop
xorl
test
dec
es
xlat
cmp
cmpsl
dec
mov
mov
fcom
jge
lcall
fwait
mov
daa
in
sbb
jns
xor
push
or
jg
mov
ds
in
test
pop
out
gs
inc
xor
int
in
call
adc
and
fdivs
int
ret
lods
jb
daa
inc
fdivrs
insl
cli
into
insb
push
cmp
sbb
outsl
cli
in
insl
fidivl
add
cld
les
push
fbstp
mov
out
stos
outsb
rcll
xchg
mov
xchg
into
push
adc
addr16
xchg
jl
pop
sub
int
or
mov
xor
scas
dec
lret
mov
sub
jne
popf
and
xor
cwtl
lods
imulb
insl
bound
loopne
in
adc
sub
pop
ds
lods
insl
push
rorb
sbb
add
push
jp
xor
arpl
mov
cltd
test
adc
adc
ss
clc
fcmovbe
outsb
incl
call
movsb
addb
repnz
push
cs
mov
rolb
nop
loop
sbb
sbb
pop
stos
push
lods
adcl
out
inc
mov
data16
jbe
dec
cmpsl
push
jl
dec
mov
pop
pop
in
sub
in
into
fdiv
fidivrs
mov
lahf
pop
sbb
subb
jno
mov
icebp
mov
sbb
mov
sub
clc
aad
lods
and
jne
lahf
sub
push
pop
add
push
sti
push
mov
sub
mov
jns
das
cwtl
mov
and
xor
xchg
fidivs
sbb
pushf
jecxz
je
inc
adc
gs
mov
add
loope
outsl
add
lods
and
add
mov
popa
cmpsl
jns
sub
popa
push
sbb
enter
outsb
sub
inc
mov
cmp
mov
lods
jle
sbb
loopne
es
cltd
cltd
xor
mov
inc
shrl
movsb
inc
shlb
in
and
push
inc
addr16
pusha
iret
push
pop
mov
jno
adc
je
iret
jns
int3
jae
mov
jle
pop
add
adc
adc
add
fbld
out
xlat
lret
negb
or
ret
push
outsl
loop
loopne
lods
sub
mov
nop
add
adc
cmp
je
sub
adc
mov
or
loop
cltd
xor
mov
xchg
jb
cmpsb
sub
mov
data16
into
xchg
pop
inc
xchg
shlb
mov
call
add
fadds
arpl
int3
pop
xchg
inc
pop
dec
inc
popf
lods
repnz
fstl
mov
mov
or
mov
call
xchg
lods
hlt
xor
je
mov
lahf
cmp
es
out
pop
fisubrl
mov
or
pop
mov
cli
mov
ja
mov
xorl
std
mov
sub
jle
nop
outsl
imulb
sub
mov
mov
cmp
in
test
inc
mov
jmp
inc
scas
add
lods
mov
pop
sbb
test
testl
jge
cmp
push
and
mov
push
fbstp
sub
je
xchg
das
push
cwtl
test
adc
aaa
int
jmp
ret
cwtl
jle
mov
pop
mov
mov
rclb
cltd
fwait
daa
pop
aam
loopne
movsb
and
lds
cmc
sbb
inc
mov
fdivr
adcb
repnz
jmp
adc
aas
push
fwait
push
insb
insb
aas
sarl
hlt
aaa
je
adc
sub
icebp
dec
push
shl
inc
pop
adcl
cmp
sub
cmpsb
adc
loope
mov
mov
or
out
scas
shll
repnz
cmpsl
lds
test
gs
andb
repnz
movsl
insb
imul
and
adc
ficomps
pushf
sub
fstpt
jbe
lahf
push
les
mov
mov
lret
andl
repz
mov
test
jbe
lret
jecxz
jp
icebp
add
mov
add
jnp
iret
push
pop
dec
mov
inc
xchg
ds
pusha
push
or
ror
jp
popf
push
push
test
push
mov
jle
fimuls
add
loop
adc
subl
outsl
adc
fisubl
xlat
dec
push
iret
in
out
dec
std
repz
js
clc
cltd
push
loopne
aas
mov
inc
xlat
divb
adc
pop
and
das
daa
pop
bound
mov
je
rorl
and
mov
jmp
lock
pop
adc
mov
sub
leave
or
mov
inc
sub
lds
pop
inc
pop
inc
enter
mov
stc
inc
shl
dec
mov
loopne
js
das
pop
push
pop
stos
mov
repz
push
add
xor
xchg
xor
mov
dec
push
and
loope
fwait
and
lea
xchg
xlat
decl
dec
mov
test
mov
cmc
hlt
and
js
adc
pop
pause
add
push
jmp
xchg
mov
push
test
adcb
lds
dec
popa
insl
insl
popa
mov
jl
mov
fwait
sbb
mov
sbb
cmpsl
xor
std
cltd
jmp
movsl
pop
add
and
cmpsl
lods
mov
and
sub
jne
push
ret
jo
lret
or
mov
jle
call
pop
rclb
push
xor
jmp
pop
jle
cltd
fiaddl
sahf
stos
jns
negl
loop
adc
mov
vandps
sahf
jb
xlat
stos
stos
pusha
pop
mov
jle
xor
scas
fmuls
cmp
jns
jo
jg
ds
imul
std
cltd
shl
xor
sahf
addr16
jbe
aam
pop
and
sbb
lods
sbb
sbb
mov
sbb
fs
into
inc
cmp
adcb
pop
insl
ds
pushf
xchg
jg
out
lods
mov
adc
ret
sub
std
lret
mov
out
aas
iret
gs
jge
adc
shrl
inc
push
mov
sub
add
imul
inc
out
icebp
arpl
rcrb
shr
jo
insb
pushf
xlat
inc
rcll
arpl
jle
gs
pop
mov
push
or
arpl
out
sub
mov
mov
movsl
cmp
push
jecxz
popf
jb
in
mov
xchg
loope
mov
and
or
outsl
fnstenv
call
les
insb
popa
push
xchg
subl
xchg
insb
adc
mov
jge
pop
adc
insl
in
frstor
gs
cmc
dec
nop
xor
or
and
aad
push
mov
xor
jns
movsl
aam
push
jns
hlt
ja
jae
sbb
xchg
cld
jnp
je
aas
mov
and
sub
cmp
xchg
pop
stc
mov
ss
call
fcomps
mov
nop
lock
dec
out
idiv
ljmp
repz
fnstenv
dec
leave
test
movsb
nop
mov
fsubs
cs
add
mov
mov
mov
fisttpl
shll
es
jg
dec
test
stos
in
outsb
lret
fs
cli
pop
es
cmp
loop
jle
and
mov
loopne
in
repz
popa
adc
lahf
sbb
out
popa
mov
in
cwtl
dec
pop
dec
push
sub
lcall
adc
fdivl
add
jp
rorb
lods
sahf
xorl
add
mov
fwait
dec
lds
xchg
fdivrl
mov
inc
outsb
aad
xchg
sbb
jae
out
adc
cmpb
jle
dec
hlt
cmp
sub
push
pop
arpl
mov
push
xor
jmp
orl
in
call
pop
push
enter
ret
push
dec
jge
movsl
inc
sbb
jno
xchg
inc
fnstenv
sbb
mov
sub
sub
inc
shr
dec
cmp
inc
jmp
add
dec
push
jns
sub
lods
sub
cmpsb
out
scas
test
mov
push
pop
mov
inc
push
jg
adc
mov
xor
adc
nop
dec
push
adc
rcll
ljmp
add
and
fbld
mov
sbb
int
jmp
mov
or
popa
adc
pop
ja
mov
dec
pop
jno
jge
dec
jb
xlat
pushf
jo
mov
out
je
cvtpi2ps
add
arpl
sub
aaa
lcall
xchg
jecxz
enter
out
jecxz
pop
and
pop
je
in
andb
sbb
cmpsl
addr16
sub
add
shrb
jbe
int
add
decb
mov
or
pop
arpl
mov
test
cwtl
lods
roll
pop
push
jg
mov
popa
jae
aad
shrb
jo
stos
outsb
test
movsb
lcall
xchg
cmpsl
add
cmpsl
mov
push
sarl
std
lret
mov
adc
test
aas
test
add
adc
std
daa
jle
sbb
xlat
fiaddl
test
add
dec
lahf
call
jo
or
jg
pop
call
pushf
fists
jns
shlb
ret
movzwl
pop
adc
inc
inc
loop
fldcw
out
dec
adc
mov
ljmp
mov
movups
push
pop
and
sbb
fs
add
mov
mov
outsl
stos
je
dec
sbbl
mov
add
push
incb
ljmp
or
stc
out
sub
sbb
mull
pop
dec
js
in
xchg
add
push
add
sub
outsb
and
dec
repz
je
or
iret
movsb
outsl
shl
ret
aas
bnd
dec
sub
scas
push
out
dec
movsl
shll
pop
add
das
int3
fstpt
lods
lcall
xchg
cltd
mov
aaa
aaa
inc
mov
shrl
pop
in
test
test
je
pop
cmp
cli
and
leave
pop
mov
aad
std
xchg
lods
inc
repz
fwait
or
mov
stc
dec
adcb
test
pop
jge
xchg
cs
and
jnp
iret
mov
mov
lret
xchg
push
lods
xor
add
or
ror
lcall
and
mov
test
in
cmp
push
in
pop
xlat
add
jp
dec
lods
test
push
dec
lahf
jmp
aam
jle
ss
jle
shrb
fisttpll
pop
jnp
das
cmp
pop
xor
pop
cmp
cmpsb
cli
adc
sbbb
popf
sub
mov
es
jnp
lds
xlat
dec
adc
lods
pop
cmp
xchg
and
dec
cmp
out
push
bound
data16
inc
push
mov
gs
sbb
lds
mov
mov
lods
ret
scas
hlt
mov
or
movsb
dec
aam
adc
mov
xchg
stos
mov
mov
or
mov
bound
ret
fisttps
lds
cmpsb
and
or
add
adc
sbb
mov
jmp
xor
adc
test
cltd
pop
jp
popf
push
pop
psraw
jbe
jb
push
xor
imull
add
fcoms
aad
shlb
fildll
mov
cmpsl
dec
int
xor
jb
outsl
movsl
fidivrl
xchg
xor
sub
arpl
repz
xor
cmc
idivl
lods
cld
popf
dec
jecxz
repz
sbb
add
pop
push
mov
in
bound
cmp
push
xor
or
cmp
inc
jno
push
fistps
leave
ret
cmp
sbb
subl
add
test
repnz
js
incb
sub
stos
std
jecxz
or
cmp
or
imul
jmp
adc
lret
jle
mov
pop
hlt
sub
mov
fists
mov
push
call
and
scas
xchg
jbe
mov
jge
mov
xchg
lods
push
jmp
jb
pop
jmp
and
or
aaa
lcall
nop
popa
or
je
and
pop
arpl
sahf
sub
sahf
mov
xchg
mov
dec
adc
xchg
test
scas
rol
pop
mov
cwtl
xor
fs
pop
and
cmpsl
dec
pop
ljmp
cwtl
mov
ret
negl
std
mov
mov
inc
inc
sbb
xor
mov
movsl
cmp
add
loope
das
pop
test
cs
inc
dec
mov
push
test
repnz
fistl
ds
jno
jae
lret
push
jno
lods
xchg
movb
fldenv
rolb
cmpl
fstpl
push
mov
pop
sub
mov
mov
jae
ret
jecxz
fwait
pusha
out
lds
xor
mov
int
push
lahf
lods
cmp
push
and
sahf
and
sub
aaa
pop
push
fisubl
mov
fwait
out
mov
addl
test
mov
cmp
pop
mov
adc
mov
adcb
aas
push
cs
cld
adc
jb
in
fdivs
xchg
ds
cld
mov
jg
jno
in
out
aas
repnz
inc
push
mov
lahf
jmp
sbb
sahf
pusha
jp
decb
and
jns
scas
pop
mov
mov
cmp
inc
stc
loope
cmp
pusha
pusha
pushw
aam
sbb
add
inc
adcl
ljmpw
imul
mov
dec
call
in
push
dec
pop
addr16
mov
imul
pop
inc
push
aaa
push
inc
cmp
shlb
fstps
out
jno
imul
xlat
sti
xor
xchg
adc
outsl
lcall
jecxz
test
ffree
jmp
dec
popf
scas
shrb
jb
pushf
mov
popa
sub
dec
sub
leave
pop
cli
push
cmp
adc
outsl
push
sbb
scas
andl
push
and
add
rcrl
je
ljmp
stc
mov
icebp
fldt
xchg
mov
cld
mov
testl
mov
or
or
dec
fwait
aas
sysexit
aam
lahf
das
std
ds
addr16
mov
sti
push
adc
jle
mov
scas
pop
iret
and
push
xor
inc
sti
loopne
mov
leave
rcrl
adc
sbb
std
sub
sti
stos
cmp
adc
and
xor
jae
or
loopne
mov
in
aad
or
pop
call
fildl
iret
roll
dec
sarl
and
and
push
popf
js
fidivrs
sbb
pop
mov
imul
and
rcrb
jmp
cmp
nop
cmp
pop
cwtl
sub
jecxz
stc
adc
call
or
imul
dec
loope
xchg
jne
cmc
in
pop
aad
int
popf
ret
outsl
sbb
adc
jmp
xchg
or
shlb
repz
or
outsb
xlat
cli
dec
imul
inc
sahf
jl
or
test
lods
xchg
stos
je
iret
push
jns
rcl
sbb
add
fisubrs
lcall
gs
dec
sahf
push
mov
inc
xor
add
or
inc
mov
es
lcall
out
int3
je
push
jo
test
mov
lock
rcrb
or
mov
test
popa
cmp
jge
clc
pop
mov
dec
popf
mov
mov
call
sbbb
push
mov
test
xor
inc
push
sub
test
call
or
ret
sbb
mov
movsl
xor
ret
loope
cltd
lcallw
xor
icebp
invd
jbe
mov
or
mov
cmp
or
adc
les
stos
cwtl
add
dec
sub
repnz
xchg
push
daa
movsl
add
js
pop
mov
jl
cld
roll
cmp
mov
insb
lods
cli
dec
movl
sbbl
std
adcb
xchg
adc
sub
pusha
into
inc
andl
or
popa
add
shrb
adc
jg
add
arpl
jmp
movsl
mov
imul
pushf
xor
add
lock
push
clc
test
data16
mov
fs
call
cmpsb
and
sbb
sub
add
mov
mov
mov
loopne
outsb
fildl
push
repnz
out
push
jne
and
pop
nop
add
lret
call
gs
cli
les
push
pop
clc
push
and
fidivrl
mov
mov
cmp
hlt
dec
into
pushf
cmp
mov
cltd
mov
lcall
test
dec
add
scas
ret
aas
inc
xchg
ret
add
and
sbb
addl
imul
mov
adc
xor
stc
or
jb
ja
push
scas
pop
jp
push
dec
stos
divb
cs
lret
sub
or
enter
into
dec
push
mov
sbb
mov
xchg
add
fcompl
or
insb
add
jl
cmpsb
mov
and
hlt
ss
or
out
xor
xchg
sbb
sbb
and
fstps
cmp
cmc
mov
mov
pop
mov
clc
cmp
xlat
jl
and
sub
mov
cs
sti
mov
xchg
pop
and
pop
adc
popf
cmp
sahf
clc
mov
mov
mov
and
xor
dec
adc
cmpsb
shll
mov
test
lea
mov
rcl
mov
cmp
cmp
add
pushf
lods
roll
in
mov
jbe
imul
lods
pop
push
adc
out
mov
fxch
xor
push
test
mov
mov
jns
and
cmp
dec
adc
pusha
pop
mov
mov
std
inc
jp
ret
gs
stos
adc
test
push
ret
jnp
neg
xchg
movsl
lahf
das
cmp
sub
aad
push
sahf
mov
jmp
addr16
cmp
lret
out
out
popa
popf
push
push
das
gs
xor
test
jmp
and
inc
mov
jmp
leave
pop
sub
dec
cmpb
cltd
xchg
mov
dec
ret
pop
dec
push
inc
and
xchg
cmp
mov
xor
sbb
cmp
pop
rorb
jg
hlt
mov
cmp
push
jmp
in
mov
leave
shr
mov
loopne
aad
das
mov
mov
and
inc
lds
es
cmp
mov
in
lods
add
pop
ja
ror
incb
stos
imul
stos
mov
push
push
stos
stos
fsubrs
mull
test
pop
mov
shll
xlat
mov
cmp
loopne
fwait
mov
jecxz
incb
cwtl
mov
push
adc
lahf
mov
lds
rcll
add
cmp
inc
aaa
jo
xor
pushf
push
aaa
in
ja
ss
adc
out
call
mov
std
fbstp
mov
lahf
pop
loope
mov
jge
ss
jae
sbbl
cmp
ja
push
inc
cltd
xor
faddl
rcl
mov
sbb
orb
mov
pop
push
push
mov
movsb
cmpsl
inc
stos
insl
in
xlat
pop
addr16
dec
push
int
mov
lahf
iret
jle
sbb
fwait
push
mov
sbb
and
popf
xor
les
repz
sub
jl
mov
nopl
pushf
popa
subl
in
push
mov
xchg
add
data16
add
jmp
add
cmp
pushf
mov
clc
or
push
pop
repz
hlt
mov
roll
movsl
nop
adc
push
pushf
and
ds
nop
xlat
sub
xor
cmp
cmpsb
loopne
mov
jnp
icebp
hlt
loop
out
cli
lcall
jb
call
dec
ljmp
xchg
sub
incb
ret
mov
or
jnp
je
mov
add
dec
mov
out
fucompp
add
fwait
push
roll
and
xor
mov
in
in
notl
dec
pop
sbb
outsb
add
inc
bswap
mov
xchg
jge
dec
das
dec
sbb
mov
pusha
xchg
adc
push
fstpl
fwait
fs
mov
gs
mov
repnz
adc
dec
loope
or
pop
inc
xchg
mov
xchg
mov
cmp
xlat
test
test
aas
push
out
and
subl
loop
pop
cwtl
idivb
aad
hlt
sub
mov
adc
xchg
and
call
mov
lock
jl
stos
sahf
aad
ret
and
sbb
mov
aam
jno
mov
in
out
icebp
lea
jo
cmp
pop
push
sub
pop
mov
ret
ficoms
push
in
test
adc
inc
mov
dec
subb
cmp
test
es
icebp
adc
pop
testb
scas
xorps
insb
jmp
shrl
lods
popa
pop
mov
mov
cmp
in
fs
stos
inc
mov
fistpl
cmp
pop
mov
cmp
adc
adc
sub
not
adc
es
push
mov
pushf
fsubrp
or
sbbl
sarb
xchg
fstpl
movsb
adc
mov
ljmp
stos
fadd
inc
jp
push
imul
or
loope
inc
pop
xchg
movsb
pop
pop
jge
pop
inc
xlat
cmp
add
xchg
lods
pop
dec
add
lods
jb
loope
lock
cmp
fs
jno
or
call
sbb
cltd
sti
jl
lods
and
push
js
push
insb
frstor
xchg
jle
sbb
lods
jg
fwait
test
fsubr
sub
insb
xchg
xlat
lock
and
adc
jecxz
lds
pushl
int
outsl
lret
push
xor
rorl
dec
imul
sbb
imul
lret
into
xor
test
mov
sbb
sahf
pop
push
pop
stos
gs
movsb
test
jle
fwait
lock
popf
scas
mov
fnstenv
mov
adc
push
ljmp
push
loop
sub
or
mov
mov
mov
pop
jmp
mov
sbb
mov
je
ror
jl
cmp
out
jnp
aas
jge
pop
fldenv
fucomp
test
hlt
or
gs
or
rorb
out
jmp
mov
and
cltd
ss
pop
es
cmp
lea
xchg
dec
mov
repz
in
cmp
nop
jle
mov
add
jnp
divl
mov
xchg
push
push
mov
mov
das
or
bound
loope
jle
mov
adc
stc
in
mov
test
mov
mov
jbe
aam
cmp
push
incl
vmovapd
cmpb
sbb
lret
mov
lahf
adc
ret
sahf
xor
lcall
xorl
xlat
popa
pop
mov
std
or
push
cld
jne
ret
ja
les
pop
pop
add
repnz
movsl
out
jae
das
stos
lods
sarl
cmp
into
adc
cmpsl
outsb
mov
testb
jno
ret
xchg
inc
xor
nop
pop
out
rcll
das
out
mov
cltd
enter
cwtl
jb
loopne
or
jecxz
test
push
jle
scas
mov
test
lods
push
sub
fisttps
push
mov
adc
call
lds
repnz
add
cwtl
cmp
xchg
or
mov
cmp
fstpt
outsb
adc
sti
bnd
add
stos
mov
jecxz
xlat
xchg
test
cld
inc
jg
jg
data16
inc
mov
dec
push
aaa
or
in
cld
mov
fs
hlt
and
adc
pop
lods
pop
gs
stc
inc
push
jle
push
mov
daa
jns
gs
mov
das
pop
sbb
mov
pushf
pusha
push
inc
fadds
daa
or
add
outsb
pop
mov
mov
cmp
sti
pusha
pushf
fistps
add
ficompl
xchg
in
into
inc
fistpl
loop
mov
inc
and
call
adc
out
jae
and
xor
xor
push
cmp
movl
fsubs
pop
cli
pop
decb
or
push
dec
lcall
sahf
lock
xor
add
lods
push
fs
decl
std
shl
push
negl
lods
fnstsw
pushf
jo
stc
enter
ljmp
sbb
xchg
pop
xchg
or
sbb
sub
outsl
pushf
or
nop
pop
bnd
out
stos
movsb
add
fnstsw
scas
fsubl
push
xchg
jb
ljmp
push
lods
cmp
mov
and
inc
xor
inc
mov
daa
fwait
movsb
fwait
imull
dec
leave
lock
aas
arpl
mov
sub
fptan
mov
dec
fsts
push
mov
lods
xchg
push
adc
into
int3
mov
sbb
stos
stos
repz
or
je
outsl
ret
scas
sbb
nop
or
fldl
mov
inc
add
dec
in
pop
cmp
mov
mov
pop
cmpsl
rcrl
aad
mov
sbb
rorl
cmp
push
xchg
fstp
mov
push
xlat
pop
rcrl
cmp
lcall
jae
fstp
cs
ret
jle
icebp
push
fistpll
mov
out
push
loop
cmp
or
cltd
fcompl
adc
setle
mov
and
hlt
sarb
aad
leave
jg
xor
push
mov
ds
cmp
xchg
fisttps
pop
out
lods
cmc
cmp
lret
pop
loope
push
cmpsb
or
loopne
sahf
push
movsl
push
imul
into
sbb
dec
mov
out
aaa
bound
sbb
inc
aad
stos
or
push
jp
lret
mov
mov
imul
loope
outsb
xor
shl
mov
inc
jb
mov
mov
out
xor
push
adc
ror
out
xlat
adc
or
test
fiadds
push
sbb
xor
sti
mov
mov
cmp
adc
mov
or
cs
inc
push
fistpll
jl
push
jmp
repnz
jl
and
dec
cmpsb
sub
jmp
sbb
xchg
fucom
in
dec
push
jg
loope
xchg
pop
cmp
jns
fdivs
enter
lea
sbb
add
jge
daa
mov
enter
or
insb
aam
cmp
inc
xor
arpl
sub
movsl
in
push
sub
outsb
add
push
xchg
or
cltd
mov
lds
push
outsl
inc
push
mov
xchg
pop
shlb
pop
ja
mov
fstpt
adc
int
mov
or
arpl
sbb
cmp
jo
cmp
push
push
test
pop
les
xor
xor
sub
pushf
inc
cmc
std
lahf
les
js
std
xchg
mov
mov
dec
fdecstp
jge
sub
fstpl
push
testb
scas
xor
adc
cmpsb
icebp
jl
inc
cs
fldenv
xor
push
sbb
fucomp
and
sub
pop
xor
testl
add
inc
dec
push
fadd
cmp
pop
pop
imul
xchg
adc
popa
ljmp
adc
sbb
cs
pop
dec
or
out
fisubrl
lret
dec
mov
xchg
dec
js
mov
mov
xlat
fdivrp
or
mov
scas
jae
cmpsl
icebp
xchg
addr16
adc
mov
or
mov
mov
dec
push
test
outsb
fisubs
add
xor
shr
xchg
insb
loopne
cmp
je
jo
bound
ss
lret
addr16
stos
leave
jle
repz
aam
jb
push
pop
subps
lock
or
xchg
fsubrs
cmp
sbb
out
loopne
mov
imul
and
add
xchg
ret
lds
add
mov
push
sbb
add
mov
lods
scas
xchg
shll
pop
cli
pushl
xlat
add
lret
cli
clc
lea
subl
cmp
mov
adc
mov
mov
jae
bsf
fnstenv
int
imul
mov
push
adc
sarb
andb
call
cmp
jmp
ja
xchg
and
xchg
cltd
and
mov
mov
shl
mov
xor
dec
sub
in
xor
jle
pop
inc
enter
mov
loope
jno
add
jg
sub
rolb
push
fistpll
jecxz
imul
sti
aaa
cmp
fildl
sub
sbbb
xchg
sub
sbb
shll
stc
adc
cmp
pop
push
ret
cmp
or
mov
gs
sbb
pop
xchg
nop
cmp
or
pop
sbb
dec
inc
xor
xlat
or
ja
scas
loopne
mov
xor
in
jbe
xchg
jae
mov
pop
push
jecxz
bound
in
cmp
test
cs
movsb
jne
mov
cmp
pusha
mov
notl
push
jmp
mov
and
adc
out
mov
test
pop
dec
push
lds
in
pop
or
jbe
push
xor
push
inc
add
out
adc
xchg
cmp
outsl
sti
mov
aad
add
mov
fstps
das
stos
pop
adc
cwtl
ud1
ja
pop
aas
push
in
inc
fs
lods
repz
loope
shl
pop
cli
mov
jns
aaa
add
sub
add
rorl
jmp
shrl
xchg
sti
xor
arpl
xlat
mov
out
stc
or
fsubrp
fists
in
fimuls
cmp
jg
aam
cmp
inc
push
gs
xlat
fstpt
inc
mov
jne
sahf
loope
outsl
xchg
fcoml
mov
loope
mov
push
call
adc
push
pop
sbb
in
push
test
mov
js
js
movsl
test
je
cmp
jge
sbb
mov
push
mov
loop
xchg
pop
inc
ss
in
fisubs
dec
sbb
jno
mov
dec
mov
xchg
test
imul
mov
lret
xchg
incb
fldcw
movsl
push
insl
adc
fidivs
dec
xchg
cmc
mov
jbe
loopne
cmpsb
js
or
les
and
fbld
inc
roll
sahf
inc
out
mov
sahf
mov
push
test
int
adc
in
stos
sti
call
outsl
ret
push
jae
push
in
dec
clc
dec
arpl
test
or
arpl
xchg
flds
adc
mov
icebp
pop
sbb
xchg
loopne
fildl
cmp
or
scas
lret
and
mov
and
mov
pop
add
xor
dec
je
filds
aaa
jns
sbb
sub
lds
xchg
pop
andl
enter
hlt
mov
lahf
xor
ss
call
jmp
push
cld
cmp
insb
shrl
and
cmp
lods
adc
add
inc
dec
lods
adc
mov
pop
in
mov
push
dec
jl
cli
scas
or
pop
mov
mov
cltd
inc
inc
sar
pop
inc
and
lods
cmp
js
call
xchg
jg
adc
mov
mov
inc
addl
and
xlat
pop
sub
mov
mov
inc
adc
nop
xor
pop
rorb
ficoms
adc
pop
mov
sbb
sti
push
cwtl
mov
dec
movsb
pusha
mov
mov
ljmp
pop
jecxz
insb
pop
inc
subb
je
cs
inc
jae
movsb
mov
ret
loopne
lret
mov
and
imul
inc
xchg
out
pop
cmp
xchg
test
mov
push
lcall
in
cmp
mov
push
stos
jge
push
mov
xchg
outsb
xor
lcall
xchg
pand
pop
mov
push
cli
cld
movsb
dec
xchg
xor
sub
or
pop
out
stc
cmp
jmp
pop
cmp
sbb
xor
fbld
dec
cltd
cld
mov
cmpsb
test
sahf
adc
jne
mov
test
and
xor
aas
sti
in
dec
lods
ss
fistpl
mov
inc
jno
dec
lods
xchg
cmpsb
imul
add
pop
pop
xchg
xchg
mov
xchg
hlt
cs
xchg
ret
sbb
outsb
cmc
in
out
int
cmp
push
shl
xchg
mov
pop
mov
sarb
mov
loope
adc
inc
iret
mov
push
dec
in
xor
pushf
mov
cmc
pusha
sub
and
xchg
inc
mov
mov
in
sbb
stos
cmc
sub
lret
push
mov
mov
pop
sub
loope
ss
lds
push
cmp
mov
or
xchg
btr
inc
popf
stos
inc
out
pop
fiaddl
cmp
mov
mov
xor
lret
xchg
adc
and
jno
imul
aad
call
out
lret
dec
aad
mov
dec
inc
add
inc
idivl
cld
outsl
out
clc
shll
dec
add
mov
jb
out
cmc
ret
sahf
lods
dec
test
je
cli
mov
xchg
adc
out
je
inc
xchg
into
scas
jmp
addr16
jo
push
pushf
push
adc
cli
dec
push
dec
mov
cmpsb
pop
mov
arpl
stc
negl
mov
mov
nop
mov
imul
xlat
pop
sbb
jmp
vpaddb
mov
insl
filds
mov
cltd
jne
mov
mov
or
loop,pn
daa
js
bound
add
pop
xorb
ljmp
add
repz
stos
aaa
push
jmp
xchg
and
cmp
imul
mov
xlat
and
loope
jo
xchg
test
xchg
out
mov
adc
lea
into
outsl
or
jae
pop
rorl
or
push
mov
stc
fmuls
daa
xchg
or
in
sub
xor
push
bound
adc
inc
mov
in
and
mov
out
mov
shrb
adc
and
sub
adc
push
in
xchg
mov
xor
mov
and
fistpll
or
out
ss
xchg
into
cmp
xchg
cld
in
out
lock
icebp
stos
cmpb
push
inc
cmp
jge
test
xchg
mov
mov
inc
pop
sub
shrb
fwait
mulb
fs
dec
out
adc
lock
icebp
cs
sbb
jno
test
mov
ljmp
push
xchg
sbb
and
cmp
xor
pop
and
std
xorb
cmpsl
xlat
ror
mov
jae
jmp
fistpl
xor
jp
cmp
or
mov
mov
push
jae
sub
sbb
das
cld
ret
loop
or
xchg
inc
xor
xor
mov
adc
gs
jns
fldenv
pop
mov
add
insl
add
into
outsl
and
out
loop
sar
adc
aas
outsl
ficoml
mov
icebp
pop
inc
adc
pop
jno
or
aad
inc
imul
cld
xchg
push
in
jns
test
add
out
loop
inc
faddl
cltd
mov
jns
arpl
mov
mov
popa
movsb
aas
push
mov
lcall
xchg
fmull
push
push
cld
mov
lret
xchg
jno
cmp
dec
xorb
jmp
mov
jns
xchg
add
jne
ficoms
nop
lea
sbb
loope
cwtl
mov
stos
mov
mov
out
push
in
lret
lret
or
cld
mov
xchg
ss
rolb
sahf
cwtl
push
movsl
xor
lret
sbb
out
pushf
jne
jnp
and
and
mov
cs
push
pusha
mov
daa
fstpt
outsb
mov
pusha
xchg
out
lock
scas
and
cmpsl
enter
mov
mov
orl
loopne
movsb
or
sbb
loope
pusha
jmp
add
push
scas
mov
jnp
into
jnp
add
test
mov
shll
and
loop
cmpsl
xor
cmpb
scas
cmp
pop
xor
mov
cmpsb
in
add
fdivrs
add
aas
cs
cmp
mov
pop
inc
xlat
ret
jae
cmp
jnp
jl
stos
mov
adc
loopne
inc
add
mov
ficompl
jmp
sahf
fsubs
jecxz
shr
mov
adc
in
imul
mov
fst
test
xchg
xlat
dec
fucom
scas
mov
mov
adc
fistpll
cmp
xor
cltd
jnp
js
movsl
jne
sbb
pop
jno
cmpsl
pop
mov
cli
ficompl
add
push
add
cwtl
dec
mov
inc
sti
jnp
xorb
mov
mov
cmp
add
push
pop
push
daa
pop
mov
fists
repz
arpl
repnz
push
xchg
xor
cmpsl
xchg
jnp
sbb
fcmovnu
pop
add
mov
adc
sub
addr16
xlat
arpl
pop
in
mov
mov
sarb
push
push
aas
fs
and
mov
sub
ljmp
mov
or
sub
mov
inc
mov
sub
mull
inc
mov
in
sub
clc
push
sub
and
rcrl
leave
sub
jne
push
jnp
shl
mov
sbbl
add
or
mov
pop
xchg
addr16
or
es
mov
cmpl
sti
mov
push
sub
shrb
jge
or
lahf
std
mov
in
xor
cmp
je
mov
outsl
fcoml
jae
stos
push
scas
inc
dec
mov
push
cwtl
lods
push
push
pop
xchg
or
fiadds
lods
cli
or
xchg
pop
je
fninit
clc
out
pop
test
sbb
pop
push
mov
mov
xor
psubw
outsl
nop
fcmovbe
das
and
mov
cmp
orl
mov
inc
sub
fs
xchg
pop
pushf
adc
jo
mov
test
jae
mov
in
lds
mov
xchg
adc
inc
add
lea
and
mov
out
pop
scas
inc
mov
lods
ja
mov
in
insb
sub
call
push
cltd
dec
push
or
je
lock
jne
mov
push
adc
dec
lcallw
incb
xchg
out
pusha
mov
std
setnp
mov
cwtl
push
fidivl
push
out
int
push
xor
sbb
jle
int3
in
inc
vzeroupper
lret
push
jae
lret
add
xchg
mov
adc
dec
cs
notb
insl
xor
popf
mov
mov
test
daa
xchg
lods
sahf
mov
roll
adc
sub
loop
test
clc
pop
fisubl
mov
sti
into
pop
idivl
jb
cmp
fsubp
fcmove
pop
xor
or
pop
dec
aam
mov
iret
mov
push
mov
leave
cwtl
add
dec
inc
outsl
mov
mov
push
dec
cmpsl
push
cmp
cmpsl
mov
push
mov
mov
rcrl
cld
and
cmp
dec
xlat
ret
push
fcompl
call
or
mov
xchg
push
push
loop
int3
adc
push
outsl
mov
adc
aam
in
sbbb
mov
fs
or
call
mov
into
dec
xchg
test
and
cmc
pop
imul
jge
out
fcomi
sbb
pop
ja
jg
xorb
pusha
adc
loope
add
incb
in
pop
std
or
jg
dec
and
mov
push
adc
in
or
and
push
negl
icebp
icebp
leave
std
or
aas
int
ficoms
push
movsb
iret
dec
repz
mov
push
sti
push
stos
mov
and
add
and
mov
sahf
pop
push
mov
hlt
inc
sbb
cli
dec
sarb
test
pusha
cs
nop
or
rcr
fadds
leave
cs
ret
inc
jbe
lcall
ja
xor
or
rclb
lock
daa
jecxz
cmp
inc
sbb
cmc
cmpsb
and
iret
jbe
jecxz
push
sbb
aad
cmc
faddp
imul
shll
test
fsubs
mov
mov
or
rclb
enter
sbb
fldcw
cld
into
xchg
pop
out
cmp
repz
ja
loop
mov
or
cmp
mov
pop
insb
int3
in
int
sub
sbb
mov
or
call
popf
dec
dec
inc
or
xor
leave
daa
jo
cmp
in
cltd
mov
push
ja
cwtl
ljmp
test
andb
dec
mov
push
rcrb
ds
insb
pop
and
out
jle
cmp
ret
mov
mov
ret
stos
jo
insb
sub
ret
push
sbb
cltd
mov
fmul
stc
loope
mov
outsl
pop
pop
push
xchg
inc
sub
xor
jns
push
out
jb
loopne
ret
int3
cmp
fistpl
jecxz
cmc
mov
imul
push
or
push
xor
adc
dec
dec
inc
adc
xchg
xchg
fimuls
mov
repnz
test
cmp
aas
jns
or
inc
jns
pop
dec
dec
pusha
loope
push
dec
sbb
dec
sub
out
outsb
les
imul
ss
adc
or
push
in
shll
movzbl
lea
out
cli
jmp
clc
add
imulb
dec
adc
xor
mov
bnd
cmpsb
inc
pop
xchg
or
pop
or
push
sub
lods
and
cmp
in
mov
dec
push
xor
es
xchg
inc
jecxz
push
mov
test
ljmp
jo
out
push
adc
or
lea
mov
and
loop
enter
test
cmc
sbb
jecxz
lea
sub
mov
lret
cmc
or
std
add
lahf
stos
mov
push
movsb
loop
leave
rcl
outsb
test
add
les
je
test
and
mov
es
into
stc
push
fsubs
sub
dec
inc
ljmp
ja
mov
xlat
and
out
scas
and
cmp
ljmp
mov
push
sub
popl
cmp
add
or
ret
addr16
in
int3
and
jne
push
adc
iret
mov
sti
lods
or
jg
mov
mov
jae
sbb
sbb
out
jge
hlt
int
sbb
xlat
fldcw
xchg
push
out
add
xchg
jb
lds
in
aaa
xchg
cmc
test
cmp
add
push
test
mov
cmp
add
nop
pop
je
dec
jns
sub
mov
rcll
push
jp
jmp
jnp
out
or
enter
faddl
stos
mov
xchg
mov
jmp
iret
jns
push
les
addr16
mov
rcl
pop
movsl
jp
or
std
inc
fsubs
jle
push
pop
xor
lds
lret
in
test
test
xor
std
lahf
sbb
decl
and
pop
lods
xchg
cli
pop
mov
mov
jle
jns
xor
lods
mov
or
jae
lea
mov
cmpsb
pop
xor
lahf
adc
xchg
adc
mov
insl
iret
mov
mov
iret
out
outsb
adc
mov
adc
jmp
jl
addb
hlt
lods
ret
and
xchg
fldenv
mov
cmp
mov
mov
push
addr16
dec
loopne
push
je
shll
mov
je
andb
pop
jp
std
lock
push
lods
or
mov
ffree
out
lcall
mov
push
sti
adc
jl
mov
lcall
movsl
jle
push
scas
ss
jge
jae
mov
pop
lock
inc
sarb
cltd
je
xor
mov
pop
loopne
jae
ja
inc
fs
fcomps
in
add
dec
je
out
in
push
iret
in
cwtl
inc
loop
out
mov
repz
xor
pop
cwtl
addr16
cltd
pop
popa
pop
jae,pn
mov
test
cmp
sbb
mov
ja
jno
bound
in
movsb
xor
pop
repnz
shll
mov
xor
or
outsl
xor
push
push
inc
sub
pop
mov
call
push
fstps
jg
add
xor
loope
mov
adc
push
xchg
ficoml
mov
sub
jmp
mov
lcall
fisubl
dec
dec
cmpsl
mov
pop
je
and
mov
cmp
les
repnz
mov
mov
xchg
insl
mov
out
mov
lods
xorb
add
cmpsb
imul
inc
sub
aas
and
jb
out
lds
pop
xchg
dec
call
out
insb
int3
ret
xor
bt
pop
int3
adc
test
test
sbb
push
add
incl
push
push
lcall
ja
pop
sub
dec
sbb
cmp
sti
xchg
adc
and
adc
inc
ret
jle
fwait
aas
mov
mov
xchg
sbb
aas
sbb
sbb
call
or
xchg
mov
shrb
xor
jno
in
sub
jns
sbb
cmp
mov
into
xor
out
sti
mov
push
inc
pop
cmp
test
fdivr
xchg
stos
mov
sub
push
outsb
pushf
fdivs
aam
insb
negb
cmc
cwtl
rclb
test
lods
mov
xor
inc
cli
add
inc
xchg
cmp
mov
pop
or
fstpl
in
lea
add
cmp
loopne
push
or
out
jo
popf
aad
dec
in
mov
push
nop
inc
out
pusha
sub
adc
ficompl
sti
loope
mov
jmp
out
xor
notb
push
mov
or
sub
lcall
test
call
mov
pushf
scas
xor
orb
mov
bound
mov
sbb
into
mov
mov
and
dec
push
adc
ret
add
or
push
adc
jnp
sub
and
ja
push
test
cli
pop
and
out
push
sbb
movsl
pop
into
mov
fdivrs
aas
ret
push
cmp
outsl
sti
pop
dec
adc
mov
mov
shl
pop
mov
hlt
xor
pop
je
popf
sbb
xor
aaa
jbe
jne
jo
inc
xor
std
inc
add
repnz
inc
inc
lahf
xor
add
pop
adc
call
xchg
cltd
insl
xor
add
and
push
lods
jnp
lahf
or
aad
mov
push
mov
xlat
stos
sbb
cwtl
cmpsl
xor
lods
sbb
push
push
adc
mov
jne
sbb
inc
data16
jmp
mov
lods
and
sbb
stc
enter
jne
es
stc
mov
inc
cli
xor
add
adc
out
mov
dec
sub
ret
insl
rclb
mov
loopne
repnz
daa
les
cmc
push
clc
hlt
insl
lret
ljmp
sub
pushf
xchg
xchg
cwtl
inc
jge
adc
jo
dec
clc
fldcw
int3
cmpsb
loopne
int3
pop
js
fmul
sahf
sbbb
sahf
cmp
mov
push
fxch
add
test
fisubrs
fs
rol
xchg
sub
jo
out
mov
push
lret
xor
adc
and
inc
test
idivl
xor
test
call
and
lods
into
xor
stc
pop
inc
dec
ljmp
in
or
or
lea
aas
push
cmpsb
sahf
addb
jne
cwtl
or
inc
lock
fwait
sbb
rorb
and
cltd
adc
pop
adc
mov
push
cmp
mov
add
loopne
add
xchg
loop
sar
mov
test
pop
ljmp
jl
out
scas
lods
cmc
pop
pop
daa
inc
mov
imul
or
ds
sub
mov
hlt
jle
js
xorb
les
mov
movsb
fs
ret
fisubrl
push
sahf
mov
int3
popf
cmp
movsl
and
shll
imul
adc
inc
fmuls
cmp
inc
add
pop
push
mov
iret
mov
call
jecxz
adc
ds
xchg
popa
jg
inc
mov
sub
imul
push
pop
mov
out
xchg
mov
in
popf
cmpb
adc
or
mov
rorb
xor
and
xlat
faddl
movsb
movb
outsb
and
jae
pusha
push
jo
into
pop
jmp
adc
loop
mov
idivl
inc
addr16
xchg
stos
jmp
ds
jnp
shlb
lock
pop
cmpsb
shrb
fcoml
or
jns
mov
mov
stos
jl
jo
dec
ljmp
mov
bound
stos
jnp
and
incb
movbe
cmp
cld
pop
xchg
fwait
lret
dec
setle
icebp
mov
mov
inc
push
xor
daa
hlt
in
cmpsb
outsb
dec
ja
popf
sbb
jg
xor
push
shlb
pop
lock
mov
lcall
dec
push
mov
sbb
adc
call
jmp
out
dec
out
or
ret
push
sub
js
cmp
popa
sahf
in
nop
pop
aaa
sbb
sbb
outsb
fists
inc
mov
jns
rclb
fs
pusha
xchg
mov
push
fnsave
lods
clc
push
fidivrl
jp
aam
cmpsl
dec
mov
je
sub
stos
popf
icebp
mov
jmp
scas
sub
xor
xor
add
aas
shll
dec
movsl
xchg
push
mov
imul
sub
lock
mov
dec
xchg
or
sbbb
sarb
leave
imul
jne
inc
pop
icebp
inc
push
ss
stc
scas
ret
xchg
insl
call
insb
pop
push
mov
mov
lahf
push
inc
imul
jne
aas
mov
jecxz
lahf
xchg
jecxz
add
push
push
pop
aad
call
jmp
imul
fistl
jg
mov
mov
cmp
cmovg
or
push
add
lods
inc
leave
sub
xchg
repz
roll
pop
pop
aaa
out
insl
fstpl
pusha
lahf
inc
mov
inc
call
dec
ret
pop
mov
int3
dec
std
test
mov
add
mov
lret
aas
out
stos
aas
cmp
cmp
dec
insl
dec
or
lcall
pop
dec
cmp
in
sbb
sbb
mov
jns
mov
jno
je
jns
add
fistps
sbb
inc
shlb
and
orl
int3
fwait
cmp
mov
aas
ret
add
ja
dec
stc
call
mov
int
ret
lret
paddb
xor
lods
or
fldenv
add
popa
lea
js
mov
jnp
sub
xchg
cmp
mov
sbb
cli
and
inc
lahf
sbbb
rclb
mov
frstor
scas
fdivrp
popa
pop
rorb
insb
push
shll
cmpsb
add
sahf
mov
jo
push
std
shlb
add
pop
push
inc
rcll
daa
cmp
outsl
inc
and
mov
mov
jb
or
aas
ljmp
sbb
mov
ja
cmpsb
loop
icebp
nop
push
fsubrp
shrb
pop
loop
xor
sahf
pop
test
test
pop
outsb
scas
mov
xlat
and
cwtl
decl
movsb
iret
icebp
repnz
mov
repz
xchg
sbb
ret
nop
mov
sahf
pop
cmpsb
push
dec
icebp
repz
notb
in
ss
sub
aad
lea
cmp
dec
iret
iretw
xchg
mov
inc
test
sahf
pop
mov
mov
test
pop
dec
inc
sub
orb
sbb
xor
push
aas
and
mov
dec
dec
lods
mov
mov
hlt
outsl
cli
outsl
cmpsb
or
mov
sbb
jns
dec
mov
mov
fisttpll
out
xchg
or
std
push
mov
repz
xchg
jl
cmp
inc
mov
into
mov
mov
xchg
pop
cmp
je
aas
push
dec
xor
mov
int3
push
or
pop
pop
add
push
mov
std
jo
cmp
and
xrelease
pop
push
pop
js
dec
lcall
nop
or
pop
jb
dec
stos
pop
orl
jl
sub
scas
or
xchg
lret
outsb
xchg
jne
inc
testl
dec
ljmp
js
add
insb
repz
aad
mov
pop
ja
cmp
adc
jnp
mov
xchg
xchg
cmp
bound
je
mov
out
leave
test
inc
cmp
dec
sbb
adc
add
xor
std
dec
cli
push
aas
roll
inc
xchg
jmp
fcmovnb
sahf
sahf
pop
das
inc
inc
pop
xor
in
bound
inc
jg
clc
mov
out
bnd
dec
sbb
repz
in
aaa
push
xor
and
xchg
testb
das
dec
add
xor
stos
movsb
pop
pop
loope
add
mov
mov
popa
enter
sub
push
push
fcomps
scas
sub
mov
out
pop
sub
xor
mull
add
test
sub
repz
pop
inc
adc
lods
into
xchg
inc
mov
sub
push
aas
push
cmp
or
outsb
pop
mov
mov
fwait
or
test
cmp
push
ss
or
xor
jns
subl
adc
shl
cmc
mov
jecxz
inc
lods
les
adc
jo
pop
fcoms
xor
jmp
icebp
pushf
mov
add
xchg
mov
or
xchg
jg
jle
sti
mov
and
inc
mov
pmaxsw
stos
mov
and
jo
inc
pop
dec
lcall
enter
negl
adc
into
mov
lock
dec
outsl
sti
fcmove
rclb
out
inc
mov
je
out
add
les
popa
iret
jno
ficoml
mov
lods
sub
lock
and
es
mov
xorb
testb
xchg
or
xchg
sarl
cmp
insb
int
arpl
sub
lock
push
fidivrs
clc
pop
jnp
ret
testl
inc
jnp
cltd
xchg
loope
dec
push
inc
pop
fwait
leave
outsb
pop
lahf
out
fildll
push
mov
add
repnz
inc
cmc
jg
cmp
mov
pop
push
mov
cmp
inc
mov
neg
cmp
jbe
mov
stos
addb
mov
mov
jnp
inc
xchg
xchg
cmpsb
jae
mov
add
scas
pmaxub
or
imul
jbe
repnz
xlat
repnz
aaa
leave
mov
jmp
inc
pop
mov
inc
and
push
push
jb
cli
pop
and
js
adc
addb
lods
inc
xor
mull
dec
xlat
add
scas
xchg
outsb
pop
jb
mov
push
aaa
jmp
xchg
int
sub
ss
lahf
dec
sub
out
push
adc
jno
inc
cltd
adc
cli
jecxz
dec
adc
sub
popa
pop
jge,pn
rcrl
xor
scas
jmp
cmp
adc
rcrb
popf
mov
jae
mov
sbb
sti
lods
xchg
fwait
push
push
stos
aas
repnz
sub
rcl
pop
lods
jge
in
push
xchg
dec
outsb
xor
push
xchg
mov
ret
movb
ss
inc
fnstsw
fistl
push
fs
push
push
outsb
push
mov
inc
sub
mov
psrlq
mov
cmpl
jns
insb
mov
mov
adc
xchg
push
aas
imul
and
popf
jg
jp
inc
push
enter
adc
push
jge
fidivrl
or
jmp
popa
jnp
pop
jne
in
out
pop
je
or
mov
xor
add
cmp
fdivp
pop
xor
cmp
push
nop
lret
dec
inc
pusha
fsubrp
daa
fmul
push
in
mov
inc
aas
pop
push
bound
leave
hlt
sub
jge
adc
sbb
loop
or
js
out
jnp
adc
mov
test
add
lds
pop
sbb
cmp
insb
aas
bound
add
flds
sub
and
notb
and
stos
dec
sbb
out
jl
stos
cwtl
jne
push
bound
test
xchg
sub
data16
sbb
lods
sbb
int3
popa
popf
dec
and
cli
scas
test
popf
repz
cmp
mov
adc
jo
and
push
mov
and
cmp
in
sub
mov
mov
stos
scas
mov
sbb
pop
pushl
cld
add
cmp
mov
rorb
out
and
out
pop
jecxz
lcall
je
aad
in
dec
jmp
in
sbb
cmp
fsub
incl
aad
mov
bound
sub
addr16
adc
clc
jp
push
cwtl
mov
mov
test
push
arpl
push
jno
xchg
das
repnz
inc
mov
roll
dec
hlt
or
or
push
cmp
or
aad
xlat
cmp
repz
mov
xchg
fwait
jp
add
popa
fistpl
adc
mov
fnstenv
and
lea
xor
add
mov
dec
fcomps
loope
stos
stos
mov
dec
pop
sbb
or
xlat
enter
inc
add
lods
gs
mov
stos
dec
gs
jg
dec
mov
push
mov
rcl
add
and
xor
mov
or
and
je
dec
dec
test
hlt
fcomi
call
imul
pop
ljmp
enter
dec
stos
imul
push
popa
cmp
add
cwtl
xchg
cltd
cwtl
mov
mov
push
ret
addr16
push
push
insl
mov
and
lahf
mov
dec
jge
mov
jmp
and
gs
xchg
pop
mov
ja
shlb
or
lahf
xchg
outsb
adc
cmp
out
mov
das
sbb
pop
cld
sti
fwait
data16
loop
and
stos
adc
xchg
xor
cld
das
adc
fisubrs
aam
addr16
sub
dec
mov
ljmp
and
scas
fidivl
lea
je
pop
lea
jno
lock
ret
sbb
mov
scas
mov
mov
pop
lahf
add
push
mov
int3
daa
je
and
out
push
jnp
sub
and
cmp
push
dec
pop
push
or
in
loop
xor
xchg
xchg
rclb
push
mov
sub
aaa
cmp
jecxz
sbb
inc
aad
sahf
sub
sub
cmp
jnp,pt
stos
das
imul
sarl
adc
xor
out
imul
sahf
push
test
inc
xor
out
mov
mov
adc
adc
xlat
lds
mov
vpinsrw
jno
leave
aad
int
nop
stos
daa
xor
pop
out
outsb
stos
out
xchg
movsl
xor
xor
shrb
inc
cmpl
push
or
add
aad
decl
jo
adc
dec
xorb
movsb
popa
push
adc
cmp
clc
lods
jbe
add
cmp
pop
mov
scas
add
jae
dec
xor
xchg
jmp
sbb
lods
arpl
fnstsw
mov
pop
jo
xchg
int3
jb
in
pop
dec
outsl
inc
popa
mov
sbb
lds
int3
jmp
popa
mov
aaa
iret
jb
lret
ja
xor
je
aaa
jns
xchg
pop
inc
rcrb
cld
push
mov
lcall
clc
jne
inc
js
push
mov
pop
jno
pop
loopne
aaa
push
enter
mov
aaa
xchg
jae,pt
sbb
shll
or
inc
jb
sbb
pop
clc
int3
and
int
popa
repnz
psllw
cli
adc
aas
incl
inc
mov
in
mov
push
pop
aad
inc
ss
call
in
add
aas
mov
cmp
nop
xchg
imul
shll
repz
add
dec
add
cmova
sahf
sbb
imul
enter
adc
jnp
out
test
and
imul
sarl
call
mov
into
xchg
mov
ficomps
je
aad
pop
mov
add
dec
mov
push
xor
cltd
mov
sahf
sti
add
stos
dec
dec
xlat
clc
push
fwait
mov
ljmp
int
cmp
and
jae
shrb
mov
jmp
jle
scas
cmpsb
outsl
repz
mov
movsl
pop
cmp
lahf
sti
insb
mov
cmp
jle
test
cltd
or
stc
dec
pushf
aad
mov
fcomp
sbb
shll
pop
push
das
jmp
fcompp
insl
lods
push
nop
push
gs
cmp
popf
aas
add
sti
jno
jno
jne
insb
rorl
xor
leave
add
xor
push
add
movsb
dec
add
and
dec
mov
in
ljmp
jmp
pop
inc
orl
jne
cmp
xchg
xor
sub
lcall
sbb
jb
rcl
pop
dec
push
js
movsl
pusha
out
xchg
inc
scas
xchg
push
ja
inc
cmp
fcmovu
loopne
xchg
mov
dec
aam
sbb
push
xlat
stos
lret
cmc
jno
mov
xor
jae
ss
mov
push
ss
add
xchg
in
cli
movsl
cmp
xor
and
push
loop
mov
andl
add
sub
cmp
ret
or
sub
jnp
scas
orb
ds
lock
sahf
cmp
es
dec
fdivl
int3
fsubl
fcompl
xchg
mov
dec
loop
mov
sub
sbb
shr
jb
and
nop
popa
sbb
outsb
push
fidivs
repz
xor
hlt
je
lea
mov
fs
mov
clc
cs
sub
out
fdivr
in
test
xchg
out
out
div
cmp
mov
push
cmc
or
shrl
repz
stos
mulb
add
dec
pop
jle
jl
push
xor
and
inc
cmpsb
xlat
sub
data16
xchg
cmp
mov
pusha
dec
pop
fdiv
rcrl
add
dec
lds
jp
xor
xor
lret
cmp
pop
ss
cmp
lea
xchg
inc
in
je
pop
fmul
xor
or
sbb
jp
pop
mov
jo
and
fwait
insb
pop
push
pop
loope
mov
jae
inc
mov
enter
cmpsb
in
minps
mov
idiv
cmc
ret
stc
mulb
push
push
into
jno
insl
imul
daa
daa
mov
sbb
cmp
leave
dec
sbb
fstpt
xor
push
loope
repnz
mov
cmpsl
call
out
push
lret
jl
aas
jl
imul
lcall
mov
push
mov
addr16
aas
mov
push
cmp
add
sub
pop
xor
adc
push
xor
stos
icebp
add
xchg
jecxz
mul
arpl
outsl
cmp
pop
push
test
adc
xor
or
lds
mov
cli
repnz
outsl
pop
cmp
subb
pop
or
lock
dec
xchg
faddp
inc
cwtl
mov
cmp
dec
pop
xor
fsubs
cmpsb
sbb
loop
sub
jp
imul
loope
inc
jbe
fnsave
fbstp
in
dec
or
add
inc
sub
pop
sti
xchg
test
insb
shl
outsb
add
mov
mov
loopne
sbb
adc
js
mulb
and
repz
adc
and
cmp
mov
inc
push
aad
fucomip
jmp
dec
inc
mov
and
stc
mov
cmc
fadds
fs
dec
mov
repz
aam
sub
pop
mov
inc
jmp
lret
iret
ss
xchg
jp
xchg
shlb
fcompl
ds
movsl
adc
add
call
cld
or
ljmp
jns
lahf
dec
cmp
mov
push
jmp
clc
ret
xchg
or
test
data16
jge
jge
add
int3
scas
shlb
adc
stos
movsb
mov
cli
add
jg
and
mov
mov
cld
pop
icebp
ljmp
test
mov
xchg
sub
fsubs
outsb
test
push
test
add
into
lcall
push
jno
mov
leave
mov
add
sub
icebp
jno
fistl
jae
mov
cmpl
dec
int
or
and
pop
pusha
mov
enter
mov
shrl
cmp
mov
sbb
sbb
xor
ds
scas
lret
xor
inc
es
sarb
push
inc
pop
test
movsl
cs
mov
out
sub
dec
ds
test
push
jnp
cld
ja
in
and
xchg
xchg
enter
insl
or
jb
and
pop
cmpsb
inc
ss
rcll
sbb
sbb
movsb
test
xor
repz
dec
insb
leave
in
lret
push
roll
fldl
or
pop
mov
push
cmc
out
cmp
test
mov
lcall
adc
xchg
lea
mov
fldenv
and
aam
mov
mov
test
cli
sub
lret
sbb
mov
jecxz
aam
sub
mov
sub
maskmovq
notl
push
popa
xchg
mov
out
cmpb
sbb
test
loope
xor
fwait
jo
punpcklbw
xchg
cmp
inc
push
inc
mov
jae
push
enter
test
iret
sub
clc
jle
jl
jb
sbb
sbb
xor
ret
out
movsb
push
scas
adc
xor
xor
sub
xchg
mov
pop
lahf
out
out
and
push
push
pop
add
fisttpl
pop
mov
add
xor
cmpsl
and
decb
ds
xor
cmp
fwait
ret
sbb
mov
xchg
push
xchg
es
push
mov
mov
shlb
fisttpll
adc
enter
jns
mov
or
mov
lods
and
and
ret
clc
shrl
sub
lcall
push
pushf
jmp
gs
insl
dec
push
pop
add
xor
mov
outsb
mov
or
mov
inc
in
or
mov
hlt
pop
dec
push
je
push
call
push
cmp
fldenv
push
pop
xor
inc
insl
lret
adc
inc
fbld
push
or
mov
shlb
or
dec
lcall
push
cmp
add
fildll
jb
sbb
loop
stc
daa
test
add
inc
ja
adc
adc
pop
popa
xor
fiaddl
add
imul
mov
adc
ss
mov
out
das
mov
adc
mov
jns
fs
add
dec
adc
out
or
adc
into
xchg
cmc
xchg
out
sbb
adc
and
mov
lock
xchg
lds
jno
fldpi
mov
int3
inc
es
imul
dec
call
fildll
adc
add
dec
cmp
xchg
jl
icebp
dec
mov
push
dec
idivl
jbe
jb
push
sub
pop
movsb
stos
jno
stc
fwait
adc
sbb
inc
cli
std
in
pusha
xor
mov
dec
jl
decl
icebp
cmp
mov
inc
adc
aam
xchg
outsl
push
sub
shl
lods
cmova
aas
out
adc
and
xchg
sub
push
lock
adc
pop
sub
dec
call
fbstp
cmp
popa
mov
mov
shrl
outsb
mov
jb
ret
test
pusha
je
fsub
lods
inc
les
shrb
and
ret
mov
cmp
and
xchg
lds
popf
test
mov
or
xchg
sub
jmp
adc
mov
add
push
or
mov
jo
mov
loopne
xchg
je
fmuls
jns
xor
and
subb
xchg
add
int
cmp
mov
ljmp
iret
outsb
mov
pop
dec
pop
repz
dec
adc
sub
fisubs
pop
scas
lods
xor
cmp
sahf
pushf
cmc
lret
mov
sub
xor
cwtl
dec
sbb
mov
fldenv
jle
jg
imul
mov
lods
sti
out
insb
loopne
and
data16
fstpl
scas
cmpsl
push
test
cltd
in
clc
xor
aaa
jns
mov
add
in
lods
sbb
nop
pop
insb
test
sbb
out
cwtl
fwait
push
jbe
jne
aam
jl
aam
testb
inc
mov
mov
ljmp
popf
cmpb
mov
pop
jns
aad
push
loope
icebp
cwtl
mov
dec
mov
mov
sbb
sbb
cmp
adc
sbb
mov
cmp
int3
inc
sub
jle
xchg
push
dec
lret
mov
push
jmp
mov
out
addr16
cmp
adc
add
cmp
fistl
jno
daa
lahf
cmp
sub
cmp
arpl
sbb
lcall
jae
mov
xchg
es
je
inc
sbb
fiadds
nop
push
push
inc
daa
bsf
mov
push
xchg
in
pop
stos
repnz
lahf
stc
mov
push
stos
ljmp
xchg
outsb
cltd
mov
int3
and
aas
les
mov
aas
cwtl
mov
leave
sub
popa
sbb
or
movsb
insl
xor
push
dec
mov
pop
and
add
and
add
push
dec
mov
in
adc
mov
test
inc
add
in
movsb
and
push
loope
mov
jae
sub
cmpsl
pop
jns
in
jno
mov
or
cmp
shlb
rcrl
cmp
pusha
sub
inc
test
dec
in
stc
add
mov
shll
into
mov
push
cmp
and
mov
mov
insb
es
jp
int
iret
and
adc
mov
jae
jbe
pop
push
into
dec
sbb
repz
scas
or
xor
bound
pop
lret
rol
xor
and
inc
into
dec
lock
add
into
mov
jns
test
cmp
scas
sub
add
or
push
lret
cmpxchg
ja
cld
inc
jo
lret
scas
loop
xor
jl
ss
push
push
mov
les
ret
adc
cld
cmpsb
adc
add
cmc
pop
fcomps
mov
dec
inc
mov
rol
inc
sub
dec
add
icebp
add
push
sbb
inc
cld
das
or
test
sub
or
aaa
xor
xchg
pop
jnp
clc
dec
add
in
push
inc
sub
cmpb
mov
dec
mov
adc
outsl
out
push
jmp
xor
std
inc
mov
lods
mov
fnstsw
imul
jg
cmp
js
fmull
pop
xor
mov
mov
adc
jl
adc
xchg
dec
mov
in
pop
stos
ret
filds
inc
clc
sub
adc
or
addr16
xchg
dec
js
dec
xchg
ds
sahf
push
push
push
xchg
loopne
or
out
sbb
mov
or
inc
out
nop
mov
into
xor
inc
xchg
std
jle
xchg
push
or
das
mov
dec
cmp
test
xor
mov
and
loop
inc
cmp
insl
repnz
imul
push
dec
hlt
je
shlb
adc
jae
jle
filds
lahf
lret
loopne
mov
mov
dec
pusha
dec
out
in
je
repz
and
xchg
test
and
hlt
jg
sub
xchg
mov
mov
cli
test
fsubs
and
and
lock
pop
cld
out
adc
stc
outsl
mov
xchg
adc
mov
outsb
bound
into
hlt
lcall
shrl
hlt
sbb
jecxz
testb
or
cmp
xchg
ja
pop
lds
add
sub
push
add
and
or
repz
mov
xchg
insl
shlb
js
pop
jne
xchg
sub
movsl
or
out
sbb
xchg
mov
xchg
ja
add
outsb
cmp
pop
xlat
pop
add
add
add
popl
cmpsb
fs
ss
sub
pop
movsl
or
add
cmpsb
sbb
push
dec
mov
inc
jg
outsb
scas
dec
cwtl
ret
movsb
roll
push
inc
lds
pop
jae
xchg
arpl
inc
sub
lahf
add
jmp
jb
sahf
jae
ja
orl
pop
xbegin
jmp
adc
add
add
aaa
fs
inc
push
jl
jge
push
pop
andb
sar
xchg
xchg
insb
movnti
push
daa
dec
stos
adc
ds
iret
and
or
dec
jecxz
inc
push
insb
rcrb
sbb
adc
cmp
insl
fildll
mov
mov
adc
push
pusha
repnz
mov
add
inc
aad
pop
mov
xor
xor
aaa
bound
into
cltd
cmp
mov
pop
cmp
dec
dec
ds
sub
jl
ficoms
ds
add
xchg
jne
fs
mov
cmp
dec
adc
sub
ljmp
or
mov
sbb
sbb
push
mov
arpl
dec
cltd
enter
shlb
xchg
pop
jnp
xor
cwtl
pop
loop
xchg
xorps
in
lahf
and
push
xor
push
jae
fdiv
jnp
xchg
arpl
jae
loope
xchg
ja
dec
and
insb
std
aam
imul
push
pushl
push
xchg
out
addb
add
lds
xor
mov
sub
pop
fcomps
ds
and
sbb
mov
lods
sbb
mov
dec
insl
mov
push
push
xor
adc
mov
pop
xchg
test
sub
mov
in
insl
aad
lahf
and
mov
inc
mov
cmp
cmpsl
mov
or
adc
mov
iret
inc
jne
mov
sbb
inc
ret
add
fwait
xorb
push
bnd
pop
sahf
out
popf
and
or
mov
ret
outsl
push
cmc
insl
sub
jbe
mov
or
das
or
add
subl
xor
or
adc
add
inc
test
movsb
fistl
orl
popf
add
mov
loope
jb
add
scas
cltd
ljmp
pop
and
adc
rcrl
push
ss
cmp
adc
xor
push
jne
xor
loopne
sub
test
pop
adc
mov
push
jecxz
add
in
int
cltd
mov
iret
in
push
push
scas
sti
out
fs
mov
cmp
mov
sub
fsubs
imul
out
popa
cli
lods
popa
or
mov
stc
lea
jl
loopne
mov
loope
pop
sub
add
dec
sbbl
popf
adc
push
imul
js
in
push
addb
jp
inc
mov
int
cmpsb
jp
loopne
dec
call
jg
mov
pop
das
rclb
push
les
jo
adc
mov
jbe
sub
fs
rol
stos
xor
sti
fildll
jp
xor
mov
fcmovu
testl
in
sahf
shrb
inc
and
mov
push
sbb
jge
scas
mov
xchg
insb
scas
mov
mov
xor
xchg
or
lods
mov
mov
lods
mov
xorl
cwtl
jnp
ds
sub
xor
nop
idivb
icebp
sub
shr
into
and
xchg
insb
mov
push
jae
movb
xchg
outsb
data16
xchg
or
stc
sahf
ret
icebp
mov
ja
js
scas
push
insl
inc
push
or
sarl
mov
test
fdiv
push
jbe
in
push
xor
into
xor
push
push
arpl
rcrb
or
dec
rcll
aaa
lds
sarb
data16
ljmp
sbb
add
and
popa
xor
xchg
dec
mov
sbb
sub
push
int3
sahf
lcall
ret
lods
push
push
push
pop
and
mov
cmc
test
mov
and
mov
xlat
stos
jns
nop
cmc
data16
decl
jmp
lret
js
negl
cmp
ficoms
pop
addl
push
pop
call
xor
cmp
mov
jae
idivb
stos
je
add
dec
lods
sub
pop
int3
dec
mov
iret
push
ja
arpl
xchg
lret
ja
cli
call
inc
sbb
xlat
inc
xchg
daa
lret
dec
pop
pop
leave
fwait
xchg
xor
std
loop
fmul
data16
cld
xchg
and
into
data16
cwtl
adc
sub
ret
jae
xor
or
xlat
sbb
adc
mov
fwait
rorl
push
sbb
call
ret
stc
jb
sbb
cli
clc
insl
stc
in
sbb
push
loopne
jle
lock
cmp
sub
clc
pop
addl
jg
dec
sbb
pop
cmp
cwtl
in
into
push
mov
fs
push
add
aaa
fisubrl
jbe
pop
das
fs
out
cmp
jmp
lock
mov
mov
outsb
stos
push
lret
std
sub
fs
movsl
jecxz
int
push
fdiv
aam
fnstcw
xchg
fnstsw
sub
sahf
aaa
sbb
out
jnp
mov
mov
or
call
jns
pop
mov
das
cmpl
pop
scas
in
nop
push
jae
js
mov
pop
and
testb
xchg
jns
subb
pop
jnp
test
sbb
inc
xor
jl
aam
add
mov
lahf
pop
sub
adc
cltd
lcall
push
ja
orl
mov
push
or
pop
fmul
sub
inc
or
xchg
cwtl
mov
pop
mov
xchg
movsl
mov
ret
aas
fmul
mov
sti
xor
mov
mov
jnp
loope
je
rcl
xchg
jle
outsl
mov
sbb
ja
or
inc
aad
repnz
or
pop
jae
popa
jne
ret
pop
lret
push
jmp
jb
test
scas
inc
dec
mov
std
push
mov
mov
mov
sub
mov
pop
cmp
out
pop
sub
dec
sahf
mov
sub
mov
add
insb
fisttps
sarl
movsb
mov
pop
and
xchg
cwtl
jnp
cmpsb
loopne
and
leave
les
or
notb
pop
cmpsb
xchg
call
lock
xchg
lea
enter
popa
icebp
punpckldq
rclb
push
popf
shll
aaa
frstor
aad
gs
sbb
nop
inc
mov
stos
sbb
jg
sub
ds
test
mov
cmp
lcall
push
jnp
jmp
xchg
fbld
xor
lods
push
pop
and
sarl
or
lds
add
lods
mov
sbb
inc
xchg
mov
sbb
inc
mov
push
clc
pop
dec
inc
dec
xor
in
and
mov
jecxz
loop
lret
cmp
sub
inc
jb
or
add
arpl
push
mov
pushf
xchg
adc
push
fildl
daa
dec
es
insb
xor
leave
jnp
push
aaa
mov
jb
mov
sub
loope
inc
loopne
mov
xor
clc
xor
xor
sbb
loope
gs
mov
add
vaddsd
in
ret
adc
xor
push
xchg
push
push
leave
lods
sub
and
movsb
xchg
xor
sub
les
inc
pop
movsl
pop
adc
movsl
mov
sub
addr16
aam
ret
sbb
rcr
movsb
pushf
cmp
movsb
flds
cs
inc
mov
shr
mov
stc
sahf
push
rcll
cmp
fdivrp
jnp
cmpsb
and
or
loop
add
daa
or
adcb
pop
pop
loop
fistps
data16
xor
sbb
ds
xor
xor
sbb
mov
cmp
clc
or
adcl
sbb
ljmp
hlt
test
js
gs
xor
icebp
inc
xor
fwait
pop
xor
xlat
test
jo
scas
cmp
aas
and
lods
push
adc
sub
push
xor
sahf
out
lahf
dec
inc
pusha
adc
fs
leave
dec
shlb
ret
mov
sti
pop
xchg
mov
cmc
jmp
insl
pop
cltd
cmc
jae
sbb
ja
mov
fs
xlat
popf
dec
scas
cmpb
and
sub
into
mov
outsl
inc
push
jne
add
jno
ja
xchg
mov
jmp
and
push
faddl
notl
mov
jo
pop
sub
jp
fiaddl
in
jb
jge
ror
les
jp
mov
insb
ja
gs
cmc
dec
lahf
dec
ret
pop
lods
pop
lcall
or
stos
pop
or
loope
aaa
test
out
fwait
loopne
mov
insb
mov
mov
mov
sub
dec
jg
and
mov
mov
test
fwait
sbb
add
seto
sbb
cmpsl
push
cmp
add
loope
int
sbb
aad
aaa
cwtl
int3
leave
push
xchg
or
or
clc
aam
sbb
out
xor
inc
push
pop
push
sub
fstpl
push
call
filds
push
lret
add
ret
add
sbb
jns
pop
outsb
imul
out
mov
cs
mov
jmp
test
jge
xor
jae
stc
int3
test
or
insb
mov
jns
cmpb
leave
testb
jecxz
addr16
xchg
das
mov
mov
lahf
mov
fldl
loope
ret
imul
mov
shrl
jecxz,pn
inc
ljmp
lahf
and
pop
stc
imul
ret
pop
pop
insl
in
test
mov
mov
pop
jg,pn
adc
cmp
and
sub
into
jge
cmpb
addr16
sub
jo
cmc
adc
mov
insl
jns
sub
add
pop
daa
test
lcall
jge
or
cli
cmp
inc
jbe
dec
imul
loopne
mov
sbb
fucomi
add
pop
mov
mov
push
fiadds
les
mov
push
andl
mov
dec
adcl
add
data16
push
inc
sahf
les
pusha
lcall
fchs
adc
sbb
pop
and
int3
push
subb
and
fsubrs
mov
arpl
hlt
rcll
xor
shll
sbb
jl
add
dec
fcomp
mov
and
inc
or
push
in
and
xor
adc
pop
in
loope
and
call
into
dec
daa
testl
add
dec
jb
jae
lods
shlb
xchg
jb
imul
mov
push
sbb
push
pop
filds
loopne
ds
bound
imul
xor
mov
outsb
cltd
and
inc
daa
cld
sub
add
xchg
jge
add
movsb
xchg
pop
pop
mov
inc
mov
sar
cs
xchg
lret
outsl
cmp
mov
pushf
ss
mov
repnz
pushf
mov
sti
or
xor
mov
lahf
mov
mov
out
push
call
and
xchg
sbb
loope
mov
js
hlt
out
lret
mov
and
inc
fidivs
or
sbb
insl
dec
rcrb
xor
push
test
lods
mov
pop
xchg
adc
push
pop
push
mov
cltd
jg
lods
iret
gs
dec
cmp
jle
rep
cmpsb
sbb
dec
jle
pop
add
aaa
inc
or
jmp
adc
cmpsb
sub
xbegin
iret
or
scas
and
mov
inc
lods
into
push
stos
jne
pop
add
rcrb
cmp
dec
ds
jge
push
dec
pop
push
imul
dec
clc
and
add
jle
or
mov
or
out
icebp
es
dec
mov
mov
daa
dec
jp
pop
insb
or
dec
inc
mov
gs
sbbl
cmpsb
enter
insl
inc
mov
sbb
inc
cld
and
or
mov
arpl
daa
vmwrite
dec
cmp
cmp
iret
dec
jmp
shlb
pop
adc
xchg
scas
add
dec
mov
xchg
inc
mov
icebp
and
cmc
lcall
sbb
andl
jg
mull
sahf
bound
cmp
jge
loope
movsb
inc
pop
pop
xchg
cmp
in
jae
iret
xchg
xchg
sub
scas
insl
loope
push
jno
lea
push
insl
push
lcall
roll
test
lcall
in
dec
push
sub
rolb
nop
test
jnp
cmp
aam
sarb
and
sub
jne
mov
std
jl
outsb
jbe
into
mov
inc
insl
das
jle
and
cli
xor
or
fisubrl
cmp
add
pop
inc
adc
fsubr
xor
cltd
sbb
xor
xchg
xor
aas
cltd
or
xchg
dec
adc
int3
push
ds
dec
sub
mov
fsubrp
dec
add
sub
test
inc
sbb
cmp
sub
in
lods
xchg
xchg
cs
orb
mov
test
sbb
repnz
sbb
push
xlat
mov
xlat
mov
lcall
jge
leave
loop
pop
lret
mov
test
outsb
cli
lret
fcmovne
jl
mov
push
jmp
add
cltd
mov
sub
sbb
jo
movsb
lret
mov
aam
mov
and
popf
inc
icebp
push
sbb
fisubrs
and
mov
fistl
mov
jbe
adc
cld
and
shlb
pop
popa
dec
fdivrp
icebp
adc
stos
jbe
sbbb
pop
adc
or
movsb
fs
in
lods
fstpl
or
push
test
cmp
adc
cmp
pusha
rorb
adc
mov
lods
es
pop
movsb
xorb
repz
bound
sbb
mov
push
sub
push
aam
stc
int3
fcmovne
rolb
or
movsb
dec
and
adc
call
lea
sub
pushf
lods
push
xchg
mov
pushf
cmp
cmp
stc
add
mov
add
inc
mov
xor
fidivrs
icebp
mov
cmc
in
xchg
xchg
in
daa
push
pop
mov
fwait
aam
mov
mov
daa
out
or
mov
jo
push
mov
push
pushf
add
or
jb
aam
xchg
push
rcl
leave
cwtl
adc
in
xchg
sub
int
dec
jp
mov
and
adc
nop
in
jle
sub
pop
arpl
dec
xor
add
bound
popf
insl
xchg
mov
cmp
popa
pusha
movsb
fiadds
xor
and
push
push
sbb
addr16
out
data16
xchg
mov
cs
inc
jg
add
sbb
inc
jnp
jecxz
into
call
pop
xchg
inc
xchg
inc
and
xchg
outsb
sbbb
fldl
mov
mov
jecxz
ret
les
mov
mov
inc
pushf
fnstenv
jnp
sub
ror
pop
mov
cmpb
insl
or
adc
mov
stos
ret
push
inc
inc
idivb
loope
xchg
add
mov
xchg
mov
dec
mov
adc
jnp,pn
sub
xchg
inc
jmp
xchg
cmp
ja
and
rcrl
roll
sahf
test
ficoml
jo
mov
mov
ficoms
cs
nop
sub
sub
call
or
adc
mov
cmc
push
nop
mov
ret
pop
mov
cmp
cwtl
pop
mov
mov
dec
inc
pop
scas
pushf
push
daa
inc
mov
xchg
imul
cmpsl
inc
sub
mov
mov
addl
pop
add
mov
fsubrl
mov
push
js
lea
shll
push
js
je
pop
pop
or
dec
cmc
jnp
ret
sbb
scas
inc
push
xchg
or
or
es
cli
push
ss
pop
inc
ja
jecxz
mov
cmpsb
adcb
insb
adc
and
dec
xor
cs
xchg
sarl
aad
adc
testb
stos
scas
rorb
hlt
fwait
adc
pop
dec
jecxz
in
movsl
lahf
cltd
int3
pop
xor
shl
jne
xchg
xchg
jle
mov
mov
xor
jl
dec
clc
mov
push
sbb
cli
push
mov
add
inc
and
push
lock
cmp
mov
push
dec
outsl
sub
testb
mov
xor
cltd
xor
cmp
inc
hlt
mov
xchg
push
and
inc
or
out
cmp
jmp
inc
lea
mov
add
mov
jnp
and
or
xor
scas
and
rcll
rclb
inc
add
pop
sbb
cwtl
mov
hlt
cli
orb
push
xor
jno
cmp
decl
sbb
call
shlb
jge
xchg
push
enter
gs
out
lret
ja
dec
xor
jno
xchg
xchg
add
sbb
aas
mov
push
imul
je
xrelease
cmovno
inc
ficoml
jge
fiaddl
pop
and
insb
adc
dec
rol
sbb
rcr
idivb
xlat
int3
scas
xor
add
sbb
loopne
jg
jne
and
mov
pop
mov
aaa
jp
inc
dec
mov
add
rorl
cwtl
xor
mov
mov
cs
xor
push
mov
jge
add
cmpsb
xchg
mov
dec
mov
lret
inc
shrl
adc
cmc
loopne
jle
into
mov
shrd
xchg
aas
dec
fsts
xorb
nop
pop
cmp
fsubp
mov
stos
jb
add
lea
jae
xchg
or
xor
push
dec
cs
xchg
faddl
adc
or
lods
stc
enter
inc
mov
rcrb
outsl
cwtl
pop
push
out
arpl
fwait
icebp
popf
lret
xor
jle
faddl
mov
inc
cmp
pop
jmp
nop
xor
scas
loop
andb
sbb
jmp
pop
and
sti
push
jne
rcl
and
imul
dec
xchg
lods
xchg
test
in
add
imul
ret
das
mov
mov
add
loope
push
dec
xor
std
out
mov
fdivl
icebp
mov
icebp
and
mov
push
repz
inc
lret
fstp
fwait
sbb
out
mov
int
movsl
mov
cmp
fdivrs
mov
ret
neg
add
pop
call
mov
jmp
lea
out
mov
fimuls
xchg
pushf
jns
jecxz
rcrl
lock
jmp
adcl
add
cmpsb
dec
inc
inc
mov
mov
in
sub
sbb
clc
lods
cltd
shll
and
and
lcall
int
pop
pop
popf
je
xchg
insl
repz
jo
fidivrs
arpl
cmc
push
add
bound
add
scas
dec
push
mov
iret
and
mov
inc
sub
mov
cmp
test
mov
cltd
rcll
mov
fists
cs
pop
xchg
movsl
or
les
push
or
pushf
or
push
test
and
ror
jo
iret
sub
push
cltd
fcompl
xchg
in
cmpl
int3
mov
jae
hlt
mov
sbbl
add
xor
mov
movsl
inc
push
rorl
rcrb
add
dec
stos
shll
lahf
jp
or
ret
jno
jl
shll
mov
clc
pushf
cmp
mov
cmp
sub
sbb
fldl
and
fwait
and
mov
cld
and
cmp
pop
mov
pop
jg
or
mov
enter
cmp
out
lcall
sub
aas
outsb
dec
or
sbb
sahf
sti
ss
js
mov
push
idiv
ror
daa
ja
jge
aas
or
nop
or
stc
push
inc
fcmovnb
push
pop
adc
movsb
jb
into
dec
xchg
xchg
jg
push
sbb
cmp
jle
adc
cli
pop
and
loope
xor
cmpsl
push
fldenv
lods
sub
add
jp
inc
xchg
popa
cmp
jmp
mov
pop
mov
jecxz
out
mov
fcompl
inc
jle
data16
repz
dec
movl
enter
add
fwait
cmp
add
xchg
imul
add
dec
fwait
xchg
xor
and
addr16
inc
pusha
mov
sbb
pusha
mov
and
xchg
mov
out
add
sub
imul
aam
pop
js
out
cmc
and
mov
pop
push
pushf
fcmovnb
aas
mov
nop
mov
out
inc
pop
sti
roll
push
jmp
jns
mov
pop
xor
out
cmp
xor
fs
mov
mov
notb
popa
ds
add
rcl
pusha
cmp
ret
cmp
cmp
dec
pushf
fs
dec
repz
loope
adcl
or
ror
jl
sbb
lcall
imul
or
cmp
cwtl
inc
repnz
jns
cwtl
lcall
push
mov
ja
lret
in
lods
out
lods
das
mov
lret
mov
push
inc
dec
push
and
mov
fimuls
push
push
add
movsb
hlt
fsubrs
hlt
out
and
xchg
sti
fldt
dec
scas
mov
jg
add
dec
int
lret
repz
iret
pop
pop
inc
xor
cmc
mov
repz
adc
decl
sbb
in
sbb
cmp
ret
test
adc
fbld
push
cli
lea
jmp
xchg
lret
fisttpll
xchg
cmc
mov
xor
cmpb
aas
scas
mov
pushf
in
jp
mov
dec
pop
out
rcl
cmp
jecxz
xchg
inc
jbe
cmp
clc
inc
add
or
imul
cmp
sti
push
aad
call
nop
daa
movsl
dec
aaa
lea
cmp
fstpt
add
pop
pop
mov
inc
bound
das
pop
rcll
lods
inc
aam
rolb
leave
gs
outsl
lods
addr16
sub
pop
dec
out
or
loop
jp
into
sarb
out
cmp
xor
jle
lea
andb
jmp
jecxz
mov
mov
mov
js
or
imul
clc
jle
xor
inc
xchg
les
mov
stc
ret
outsb
cmpsb
sbbl
xor
dec
adc
pop
xor
add
dec
pop
cmp
repz
cmp
jecxz
xor
pop
push
ds
mov
xlat
jmp
out
jnp
inc
mov
sbb
hlt
rolb
aad
lret
sub
push
jmp
xchg
std
mov
movsb
subb
xchg
and
insb
test
pop
xor
repnz
imul
adc
movsl
mov
aam
cltd
cmpsl
inc
loopne
mov
data16
xor
push
and
pusha
pop
rcll
push
shlb
sub
push
dec
xlat
fstl
cmp
mov
lock
subb
test
cmp
stos
mov
fistps
sub
mov
jns
dec
cmp
stos
and
push
sar
push
xor
movsb
and
push
sbbl
add
dec
popa
mov
inc
push
mov
bound
lds
pop
jp
pop
push
mov
adc
lock
mov
lahf
cmp
fisubrl
adc
pop
ffree
jnp
sbb
adc
pop
xchg
add
loop
jg
lea
je
xchg
pop
out
cltd
out
shrb
clc
jge
pop
cmp
add
adc
xchg
lahf
inc
xchg
xor
inc
mov
fsubr
sbb
xor
sti
or
cmpsl
fidivrl
cld
dec
cli
push
sub
add
push
leave
cmp
es
push
aad
dec
jo
fs
scas
int3
clc
and
in
xchg
notb
cmp
push
dec
mov
jno
je
iret
fs
adc
mov
jno
push
jbe
inc
ror
ds
shll
fxch
cmp
pop
daa
cmc
insb
cs
in
inc
les
std
dec
iret
repz
cmp
mov
les
push
jbe
and
adc
mov
or
adc
inc
jmp
inc
fldenv
mov
sub
dec
xor
mov
mov
mov
mov
nop
inc
je
divl
jecxz
dec
dec
dec
mov
mov
pop
lea
lahf
cmp
xchg
mov
or
jno
ljmp
sbb
pusha
stc
and
jns
sbb
jge
and
inc
scas
jmp
in
jae
shr
add
push
leave
enter
lods
loopne
mov
push
dec
in
jp
mov
pop
push
insl
xchg
fs
test
mov
test
mov
push
mov
movsl
loop
jmp
repz
xchg
call
xchg
cmpsb
push
pop
or
aam
xor
sbb
test
leave
mov
and
mov
cs
sbb
mov
insb
ds
push
cmpsb
push
sahf
loope
stos
sarb
daa
cld
adcb
and
push
fadds
inc
fldl
ljmp
clc
mov
adc
pop
mov
test
fadd
lahf
testl
lahf
jl
add
mov
mov
jmp
into
jnp
lds
mov
bound
movsb
aas
mov
and
arpl
incb
or
xor
rcll
pop
enter
push
push
imul
cli
lahf
cmpl
jae
aaa
mov
xchg
and
pop
sbb
cwtl
pop
popf
pushf
xchg
dec
pop
movsl
mov
or
mov
xor
movsb
ret
xorl
sub
fdivr
fldl
cmp
imul
sbb
push
int3
dec
dec
sbb
outsl
sbb
add
pop
fcoms
sub
out
push
xchg
push
ret
dec
xor
fxch
out
aas
mov
inc
adc
jg
dec
xchg
xchg
fcmove
call
pop
int
fiadds
or
inc
in
cmpsl
je
dec
sbb
outsl
xchg
inc
mov
pusha
popa
or
jge
out
push
lods
push
push
push
inc
fs
pop
sbb
xchg
arpl
sahf
inc
rol
mov
lea
cltd
sahf
das
push
out
subl
jns
cmp
mov
popf
jecxz
jl
sbb
lret
xchg
fadds
mov
lret
scas
jle
fs
fildl
lock
aaa
push
xor
arpl
xor
outsl
add
mov
xlat
adc
std
insl
ds
aam
sub
or
pop
push
push
push
vmwrite
cltd
xor
mov
punpcklwd
sub
pop
cmc
push
sub
cwtl
inc
add
mov
sbb
insl
orb
adc
xchg
imul
xor
movb
inc
dec
or
adc
inc
fsubp
in
jb
add
xor
pusha
mov
dec
out
fstpl
out
inc
lret
shlb
scas
mov
icebp
mov
xor
lock
jo
inc
int
scas
test
sub
aam
pop
pop
lods
fidivrs
aas
insl
sarl
pop
clc
or
ja
fdivrs
in
daa
jle
clc
movb
fsubrl
jecxz
aas
aam
das
out
jle
lock
sbb
xor
xchg
sbb
sub
and
shll
addr16
scas
pop
rolb
xchg
pop
icebp
sbb
jnp
notb
sbb
subl
jp
xchg
out
sub
mov
scas
cmp
adc
aas
fwait
sbb
mov
xor
maskmovq
notl
push
cmc
jecxz
inc
insl
out
mov
inc
sbb
in
pop
cmp
leave
or
enter
mov
sub
and
pop
jns
or
int3
mov
andl
xchg
dec
cmp
pusha
or
in
insb
cmp
icebp
test
xor
outsb
add
cmc
cs
dec
mov
cmpsl
ud1
cmp
nop
hlt
inc
nop
adc
data16
in
or
es
mov
imul
jle
pop
dec
jle
adc
aaa
stos
divl
or
push
or
dec
or
xor
xor
addb
sahf
mov
and
sbb
fildll
test
xor
add
jp
pop
mov
sarl
hlt
jmp
mov
test
es
ljmp
dec
rorb
mov
or
dec
push
add
insb
inc
jo
inc
xor
out
icebp
xchg
mov
lds
pop
xchg
enter
xor
out
jae
xchg
mov
daa
mov
cmp
or
inc
rolb
lret
sbb
and
mov
stos
out
sub
cs
dec
and
push
push
mov
in
xchg
adc
lahf
leave
mov
adc
popa
xchg
sbb
mov
dec
jae
les
mov
sarb
push
lods
dec
movsb
negl
nop
add
cmp
or
dec
lret
insb
out
xchg
and
ss
imul
ss
dec
adc
aad
mov
insb
call
adc
cli
test
sbb
popa
jnp
mov
scas
lret
and
enter
mov
cli
roll
std
cld
insb
and
or
and
orb
mov
mov
add
push
push
std
mov
adc
daa
repnz
pop
xor
mov
xchg
pop
lcall
jbe
outsb
test
sbb
insb
mov
popf
cmp
xchg
sbb
pop
insl
daa
out
jge
pmulhw
or
sbb
loope
dec
push
das
xchg
je
ss
call
repnz
push
xchg
test
ret
xor
dec
dec
adc
aam
fmul
fists
mov
xchg
push
or
or
xor
or
mov
push
repnz
sbb
xchg
ljmp
mov
dec
adc
hlt
cli
pop
xor
adc
sub
stos
mov
lods
add
out
arpl
lahf
fcompl
imul
stc
fidivl
cld
sbb
jnp
mov
int
clc
scas
jne
sub
jge
pusha
clc
shlb
stc
inc
lods
sub
xor
sbb
mov
inc
cmp
cli
sub
cmpsb
sub
xlat
mov
mov
fwait
adc
dec
and
push
call
mov
push
inc
and
shlb
pop
xchg
lret
and
out
stos
cld
outsl
or
cmp
push
adc
test
loope
inc
lods
movsl
mov
in
xchg
dec
idivl
fstl
pop
std
sub
imulb
sub
sub
ret
jecxz
pushf
xchg
push
dec
out
mov
mov
sbbb
cmp
pushf
aad
stos
push
mov
enter
cmp
pushf
mov
orb
push
and
adc
mov
mov
push
popa
sahf
iret
jecxz
cs
lahf
outsb
sub
dec
inc
imul
and
cltd
adc
je
push
test
jno
mov
out
jnp
les
sbb
jo
stos
cs
sub
xchg
sbb
pusha
mov
es
stc
aam
or
jmp
cs
cwtl
and
cmp
dec
mov
jle
repz
cli
int
lock
mov
cmp
pop
dec
xchg
cmp
aam
ja
bound
iret
push
fidivrl
xchg
mov
jle
mov
pop
mov
sti
addr16
out
cmp
xor
mov
add
jo
shrb
xchg
sub
sub
mov
es
xchg
and
movsb
mov
xor
loop
sub
js
push
sahf
data16
fidivs
dec
notb
mov
inc
cltd
inc
jp
sbb
popa
mov
mov
ret
das
ret
rcrb
call
and
rcll
mov
loop
mov
fsubp
dec
mov
and
and
push
fwait
add
out
push
outsb
in
fucomp
mov
pop
out
mov
pop
mov
in
cmpsb
fnstcw
jmp
rcl
xchg
lock
jo
mov
jmp
loop
rcrl
push
leave
subb
int3
inc
mov
movsl
cmp
cld
out
xor
ss
stc
jge
sbb
pop
push
push
push
mov
int3
mov
call
fbld
out
xchg
in
cmp
adc
xchg
mov
xlat
js
stc
sbb
fldl
in
inc
push
sub
gs
mov
dec
ret
test
retw
dec
daa
push
shll
pop
ds
out
inc
popf
movsb
pop
rep
lods
ret
pop
xor
jo
sbb
les
stos
push
sub
aaa
cmp
das
push
ret
sub
mov
fcomps
cmc
aam
mov
inc
cmp
cmp
fnstsw
ja
fadds
jno
mov
xlat
pop
sub
mov
push
pop
push
pop
mov
jb
mov
fdivs
jo
cmp
shlb
loopne
movsl
pop
test
hlt
test
pop
lahf
xor
xor
jle
pop
repz
sbb
adc
sbb
xchg
push
bound
mov
in
pop
adc
decl
push
pushf
mov
sub
out
or
sbb
in
and
xchg
mov
xchg
add
rdpmc
add
das
xor
shlb
pop
loop
fdiv
out
sar
movsb
out
mov
push
xchg
jno
cmp
mov
in
add
ss
pop
cs
cmp
pop
jg
fmull
into
or
mov
sub
mov
dec
outsl
mov
mov
mov
push
jbe
test
sub
mov
cmpsl
bnd
out
movsl
mov
cld
and
adc
aas
jae
jl
cltd
sub
test
rorb
pop
aas
ja
lahf
pop
xchg
jae
jne
sub
sahf
lods
fmuls
xor
pop
and
lock
mov
mov
push
cltd
std
pusha
xchg
dec
std
dec
add
orb
add
xchg
leave
add
xchg
mul
daa
adc
fadd
js
push
es
hlt
mov
and
add
adc
xchg
repnz
pop
fwait
add
sbb
inc
xor
mov
adc
mov
pop
mov
xor
mov
out
xchg
in
jg
xchg
rclb
shrl
inc
or
sbbl
sub
lds
mov
xor
adc
fildl
pop
outsb
js
xor
dec
or
test
outsb
mov
out
cli
xchg
cvtpi2ps
add
scas
sub
mov
adc
jecxz
in
mov
mov
jl
lret
std
mov
rcrb
jp
jns
or
add
or
hlt
mov
out
call
das
loop
jo
mov
int3
dec
jmp
ucomiss
orb
daa
cmp
and
int
les
dec
or
or
or
mov
dec
ja
cmp
aas
mov
xchg
mov
cltd
add
ret
push
out
sub
scas
out
xor
push
pusha
mov
push
dec
aaa
ror
mov
jne
mov
mov
push
xlat
ja
leave
out
repz
hlt
ret
roll
imul
stc
xor
mov
fmulp
sbb
xchg
ljmp
inc
sub
ja
push
cmp
jns
testl
sti
mov
mov
xchg
mov
in
imul
mov
push
out
in
rcl
orb
jo
mov
std
pop
and
stos
mov
cmovbe
or
inc
ja
sbb
lahf
clc
pop
mov
mov
stc
in
add
aaa
inc
jo
mov
push
push
incb
shlb
adc
inc
loope
jbe
cmp
shlb
mov
lcall
in
mov
cld
and
ss
xchg
stc
lcall
mov
enter
cmpsb
mov
dec
add
cmp
pushf
movsbl
and
inc
push
and
lods
push
ja
clc
lahf
icebp
stc
add
mov
push
imul
xchg
mov
sub
inc
pop
rcl
das
dec
icebp
and
lcall
fdivp
daa
xor
add
mov
cs
add
lea
mov
mov
cmp
adc
mov
iret
repnz
jo
lret
push
fisttpll
sahf
test
int3
mov
int3
arpl
cmp
inc
insl
lods
pop
xorl
insl
scas
push
jle
pop
cld
aas
bswap
jmp
icebp
out
fs
insb
flds
pop
mov
hlt
dec
dec
push
arpl
rorb
push
mov
cmp
ja
scas
ret
jmp
jo
cmp
inc
je
scas
test
xchg
xchg
fldl
ss
adc
dec
out
dec
out
int
jge
xchg
dec
push
cli
rcrb
iret
add
sub
xchg
cmp
mov
sub
ds
dec
sbb
dec
ss
mov
add
pop
insb
mov
or
loop
pusha
loop
inc
outsl
inc
add
jmp
cmc
div
push
pusha
sub
loop
mov
lock
loope
and
xor
out
inc
cs
cmpsb
mov
divb
fs
cwtl
fmulp
or
or
sahf
bound
xor
ss
pushf
dec
aaa
sahf
movsl
jle
fisttpll
test
and
push
fildll
pop
and
dec
push
outsb
dec
jno
xor
mov
movsl
mov
hlt
clc
mov
adc
cmc
das
adc
jle
shll
push
shrl
push
cmp
sub
ficomps
xstore-rng
cmpsl
push
sub
test
imul
shlb
shrb
dec
xor
mov
test
adc
mov
and
jmp
cmc
and
ret
jge
fistpl
loope
ret
enter
push
pop
ja
orb
js
xor
outsb
xchg
jnp
out
loope
add
test
rorl
inc
ljmp
jne
icebp
add
lock
add
add
ds
push
js
lods
pop
cmp
sub
leave
and
sbb
call
mov
mov
bound
addb
dec
pop
fstpl
mov
sub
dec
dec
and
call
dec
mov
xchg
enter
int
mov
push
movsl
adc
adc
repz
sub
aas
repz
cmp
mov
dec
dec
ja
sub
sbbb
cmpsl
in
xchg
cltd
xchg
mov
push
orb
cmp
sub
pop
fdivs
or
addr16
cli
outsb
into
movsl
jb
mov
negl
pop
ret
popf
adc
cli
das
cltd
jne
jbe
test
fsubrp
add
ret
jne
mov
mov
in
dec
lcall
loopne
out
inc
data16
mov
mov
mov
inc
test
inc
aam
and
lret
mov
pop
aaa
pop
loop
test
fildll
cmp
adc
repz
pop
ret
mov
jb
mov
xchg
nop
cwtl
aaa
fiaddl
or
sbb
push
mov
jecxz
pop
xlat
or
add
add
jecxz
pop
mov
les
rcrb
loope
dec
enter
ret
and
mov
and
push
mov
fisttpl
insl
inc
bound
adc
loopne
rol
xchg
pop
sahf
mov
mov
and
stos
cmp
cmc
jne
andl
cltd
and
push
mov
xchg
sbb
jecxz
sub
flds
loop
andl
inc
stc
fcomps
jno
dec
inc
nop
decb
cwtl
xchg
or
inc
adc
loope
and
je
pop
sarl
mov
sub
lret
jne
dec
mov
xchg
xchg
icebp
push
rclb
add
inc
or
add
movsl
sbb
mov
cmpsb
in
xor
dec
push
xlat
or
or
std
push
push
shlb
popa
sbb
jp
mov
push
test
repz
loope
mov
aam
in
leave
loope
adc
test
dec
jp
jmp
in
and
jge
jo
inc
ds
out
mov
imul
fsubl
lret
std
xchg
imul
icebp
mov
add
push
sub
jae
repz
mov
adc
cmp
cmp
pop
aaa
jp
cmpsl
inc
lea
dec
lret
scas
pop
outsl
mov
sbb
sub
loope
push
cltd
bound
mov
mov
cwtl
das
mov
movsl
push
cmp
pop
pop
inc
xor
or
and
leave
jl
icebp
adc
into
push
push
test
loop
dec
sbb
push
pop
repz
mov
lcall
mov
cmp
cmp
xor
leave
mov
shl
xor
adc
jp
mov
addr16
cmc
pushf
sbb
insb
jg
loopne
sub
and
push
repz
and
push
scas
pop
movsb
dec
sbb
loope
cmp
jl
flds
insb
lret
sbb
mov
test
punpckhbw
in
sbb
push
cmp
andb
imul
mov
pop
mov
andl
jl
aad
cli
ja
je
mov
or
cmp
daa
orb
loopne
mov
das
fwait
jmp
sub
sub
cmp
jo
data16
sbb
subps
imul
mov
push
insl
scas
cmc
insl
pop
jnp
outsb
mov
xor
jge
push
test
cld
pop
mov
mov
loopne
out
ret
cmp
fisubs
mov
pushf
jae
push
push
rcr
fistps
inc
jle
out
cmpb
mov
aam
insb
mov
popf
repnz
cmp
inc
pop
xchg
jl
stos
lock
cmpsb
lahf
and
mov
and
push
xor
sub
outsb
jmp
or
call
mov
sti
cmp
std
xchg
mov
pop
out
add
mov
jb
fwait
push
push
xchg
inc
jg
push
sti
jno
stos
iret
loop
mov
in
jle
daa
mov
pop
fsts
adc
push
push
repz
sbb
xor
pusha
xor
es
mov
cltd
je
shrb
push
movsb
mov
mov
insl
popa
in
popa
inc
inc
int3
addb
xchg
faddl
stos
je
mov
mov
adc
pop
decl
push
idiv
mov
push
mov
cmp
push
jl
in
xor
cwtl
scas
fisttpl
jae
cwtl
aam
mov
sahf
or
pop
sbb
icebp
jp
push
xchg
fadd
mov
test
gs
mov
mov
negl
cmp
cmc
cmp
mov
lods
mov
outsb
sbbl
or
in
cmp
mov
mov
jle
rorb
pushf
cmpsl
sub
push
leave
or
or
imul
out
cmp
adc
xor
stos
and
add
xchg
idivb
jge
pop
xchg
scas
dec
rorl
cmp
adc
sbb
pop
add
aas
lods
ret
movsb
movsb
cmp
rorb
sbb
ja
fmuls
stc
xchg
sub
xchg
cmp
jb
mov
xlat
ror
cmp
rep
mov
mov
popf
out
cld
and
push
adc
fistpl
xor
popa
fwait
dec
mov
sbb
fimull
scas
push
add
insl
stc
test
push
push
ds
cmpsb
repnz
xor
jb
push
out
test
stos
loop
outsb
xchg
pop
inc
xor
push
popf
arpl
out
aaa
sub
call
je
xchg
in
leave
push
jb
jg
test
lahf
insl
sbb
push
cmc
inc
adc
push
iret
push
jg
arpl
mov
imul
xchg
mov
lret
cmc
mov
inc
je
inc
add
dec
or
insl
pop
gs
stos
sub
aam
insb
inc
xchg
out
mov
popa
mov
and
fs
sub
stos
aam
sti
std
cld
push
cmp
sbb
lock
nop
cmp
cmp
scas
nop
lret
std
loope
repnz
cmp
xlat
loopne
fscale
stos
mov
pop
shrb
cmp
xchg
icebp
push
inc
cmc
mov
insl
nop
lahf
jae
adc
adcl
cmp
js
xor
arpl
pop
leave
dec
jo
cwtl
push
push
jmp
sbb
cld
sub
add
aaa
leave
in
xchg
ss
jg
pop
imul
inc
cmc
test
adcl
sub
data16
jo
adc
subb
pop
mov
cmp
sub
sbb
xor
lea
mov
sbb
inc
popl
pop
lahf
sti
jb
mov
or
jo
dec
outsl
lock
pop
mov
int
xchg
jns
in
jp
mov
jns
ds
das
jmp
fildll
popf
fidivs
xchg
pop
imul
cmp
cmpsb
sub
daa
xchg
cmp
mov
jle
and
push
push
or
and
mov
add
repz
pop
adc
cmpsl
das
jo
repnz
jecxz
push
ja
shr
sar
ss
in
aam
stos
mov
dec
test
lahf
jle
adc
or
mov
lods
or
movsb
add
aam
fwait
mov
dec
fdivrs
and
leave
cmp
push
cmp
xor
dec
cmp
mov
je
inc
pushf
xor
sbb
bound
xchg
out
out
fisubs
loope
nop
mov
jg
dec
or
adc
pop
push
jno
cmpsb
rcrl
sbb
testl
es
push
xor
outsl
sbbl
adc
jl
sub
mov
dec
push
xor
fadds
add
mov
dec
aam
stos
jle
push
loop
jo
or
arpl
or
mov
xorl
xchg
in
push
imul
mov
sahf
lods
in
xchg
imul
mov
cmpsb
adc
mov
mov
in
scas
outsb
add
and
rclb
mov
adcb
sbb
dec
test
sbb
xchg
sbb
dec
mov
sub
lds
dec
or
fldt
mov
cltd
insb
hlt
adc
pop
cmp
in
mov
push
sbb
div
dec
iret
test
pop
movsb
inc
andb
and
adc
sub
jne
mov
xchg
mov
fsub
leave
cmpsb
jmp
mov
jecxz
outsb
ss
out
inc
daa
inc
dec
and
inc
jo
orb
lods
stos
test
add
stc
mov
rol
stc
pop
in
pop
inc
movsb
lods
xor
sub
jmp
add
and
cld
test
hlt
mov
dec
sti
aam
inc
addr16
test
sbb
rorb
int
movsb
stc
or
add
mov
mov
mov
daa
mov
out
jne
jbe
into
mov
inc
test
int3
loope
dec
mov
in
mov
popa
pushf
or
lock
aas
insb
xchg
fcmovb
pop
shll
pcmpeqw
idivl
cs
ds
push
mov
into
mov
repnz
xchg
cwtl
in
lcall
and
dec
or
inc
call
add
aaa
mov
cmp
lahf
xlat
lret
sub
popf
dec
enter
iret
lds
or
scas
xor
push
scas
jns
sub
mov
pop
lods
jmp
jmp
pushf
loop
sub
jae
cmp
or
mov
outsb
das
test
xor
inc
add
testl
repz
sti
sbbl
lock
adc
push
push
pop
test
loop
dec
aaa
pop
mov
xchg
fmuls
inc
sti
imul
cmp
insb
push
dec
mov
inc
inc
mov
mov
in
sarl
cmp
or
jge
icebp
imul
popa
cli
stc
jmp
adc
fcoms
loopne
adc
fwait
xchg
dec
dec
in
sub
sbb
addr16
in
loopne
cmpsl
es
out
xchg
cmp
mov
leave
mov
sub
jle
pop
gs
adc
stc
daa
enter
and
frstpm(287
lock
fadds
mov
mov
sbb
jb
xchg
into
sarb
cmp
cld
clc
out
fidivs
call
inc
loope
cmp
nop
leave
adc
or
xor
pop
adc
pusha
sbb
and
clc
push
pop
fadds
dec
or
push
negb
jecxz
pop
shrl
jns
insb
scas
scas
sbb
aad
dec
outsb
sub
add
imul
mov
out
fldcw
repnz
xor
cmp
insl
test
movsb
jp
sbb
xchg
and
xchg
pusha
jno
add
push
mov
pusha
cwtl
mov
lret
adc
dec
iret
fimull
xor
lahf
shll
push
mov
fwait
xor
testl
xchg
scas
ret
pop
outsb
jbe
pop
sahf
cmp
iret
inc
xor
fstpt
jnp
xchg
add
lods
shll
cmp
iret
stos
je
sub
xchg
xor
add
mov
xchg
ds
xchg
ds
es
xchg
jns
dec
push
xchg
mov
bound
push
pop
lcall
data16
cld
mul
push
xchg
repz
inc
or
movsb
pop
jne
sbb
xchg
sub
daa
adc
cmp
mov
and
and
pop
int
rolb
mov
imul
scas
popa
das
jmp
or
out
addb
shll
xchg
push
pop
flds
or
adc
test
test
mov
mov
in
mov
mov
mov
cwtl
ljmp
jae
or
inc
iret
mov
or
mulb
arpl
pop
fildl
nop
shlb
negb
lods
and
paddb
mov
frstor
insl
lahf
push
in
fcomp
inc
aas
imul
icebp
push
loop
sbb
push
test
xchg
sbb
mov
dec
enter
test
test
cwtl
fstpt
pusha
loop
dec
rep
mov
punpcklwd
mov
jne
icebp
imul
repz
call
adc
pusha
aas
mov
jbe
jae
in
fdivl
mov
sub
adc
aas
sbb
xchg
stos
push
sar
out
cli
movsl
hlt
mov
scas
les
sbb
push
cmp
outsb
inc
lods
lods
cmp
sbb
jns
insb
mov
notb
int3
cld
xchg
mov
test
insb
enter
stos
ja
lods
mov
mov
mov
movsl
insl
jmp
inc
sub
in
test
adc
pop
add
or
jge
inc
and
xchg
or
repnz
es
sahf
jns
gs
dec
add
xorl
pop
bound
imul
push
xchg
lea
repz
sub
inc
insb
mov
jno
sub
mov
or
xor
adc
lahf
testb
hlt
jb
popf
sub
fisubrs
push
popf
lods
sbb
mov
les
push
fdivl
scas
insl
in
xor
in
pop
sub
les
push
lds
and
jl
in
fstl
jp
mov
mov
cmp
sbb
push
jle
iret
xchg
test
sub
movsb
nop
jo
repz
jecxz
mov
push
cltd
inc
movsb
loope
popl
cmpsl
stos
testl
push
or
push
lds
mov
ret
dec
push
jle
xor
outsl
push
test
ret
repz
clc
stos
cmp
push
es
js
sbb
aaa
loope
add
dec
push
push
int
fwait
daa
inc
ss
sbb
lret
mov
or
add
jnp
xor
arpl
or
xor
cwtl
or
jle
or
xor
dec
and
in
mov
loopne
inc
mov
mov
xchg
mov
jo
lcall
repz
lods
jns
movsl
adc
mov
hlt
std
pop
or
jmp
ja
cld
sbb
je
repz
shrl
mov
push
fcomi
rcrl
rcr
loopne
lahf
loopne,pn
ltr
addr16
xlat
mov
mov
clc
mov
mov
out
jecxz
sti
int
mov
movsl
and
test
gs
enter
sub
fcmovbe
pop
repz
jns
push
lods
sub
ss
fistpll
sbb
inc
jg
xor
adc
lock
add
cli
je
out
lds
push
ljmp
pop
imul
add
test
dec
lret
decl
mov
shlb
push
popf
inc
stc
sub
and
xchg
sbb
lock
add
fnsave
cli
sti
pop
mov
mov
sbb
cltd
inc
fnstenv
out
xchg
mov
jb
add
into
dec
inc
shll
fs
leave
flds
lods
dec
xor
push
cli
jge
pop
movsl
xchg
xchg
sbb
mov
adc
cmp
pop
push
mov
in
xchg
push
inc
mov
mov
adc
ret
jmp
and
push
sub
adc
jle
sub
fimuls
and
inc
mov
adc
add
jb
movsb
shrl
cmpsl
inc
ljmp
push
inc
jbe
mov
mov
jle
fisttps
sub
in
xchg
shlb
jb
repz
filds
and
inc
adc
rorl
xor
fmull
pusha
outsb
fmull
and
push
cmpsl
adc
sub
stos
rcrb
sti
int3
cmp
into
leave
mov
sub
or
mov
les
in
mov
mov
fs
addr16
pop
push
lret
lock
test
lea
jg
mov
jp
addr16
out
xor
cld
mov
xchg
clc
mov
jl
imul
mov
fistpl
jae
pop
insb
out
push
cmp
inc
and
pop
clc
fdivrp
notb
xor
lahf
repz
xor
aaa
adc
push
push
push
jns
call
inc
mov
sub
cwtl
and
scas
xchg
or
dec
and
mov
mov
sub
adc
mov
adc
ret
jecxz
std
push
pushf
aad
outsb
push
lret
sarb
dec
adc
repnz
lret
and
cs
clc
int3
mov
sti
movl
jbe
repnz
dec
loopne
mov
mov
call
lods
push
add
mov
imul
add
cmc
mov
imul
sbb
rclb
cmp
cld
mov
ljmp
out
push
inc
sbb
sub
cld
mov
rcrl
mov
mov
push
stos
pop
xchg
pushf
and
pusha
mov
pushf
and
shlb
mov
mov
jg
mov
lock
insl
push
cltd
test
ljmp
in
pop
add
mov
xchg
jbe
pusha
int3
sbb
loop
lret
mov
insl
or
cld
mov
inc
es
enter
stos
das
adc
inc
mov
inc
out
mov
outsl
add
mov
stc
ret
mov
test
loop
dec
jnp
cli
aad
addl
fcomps
mov
icebp
lcall
clc
addr16
sub
jg
bound
cwtl
cmp
cmc
int3
jnp
add
ret
sarb
adc
and
adc
aas
or
push
daa
fsts
sbb
xor
jno
dec
add
or
jmp
sub
in
stos
adc
popa
pusha
jecxz
leave
test
bound
lds
sbb
jno
scas
xchg
loope
cltd
jae
ljmp
ljmp
movsl
dec
inc
addr16
pop
push
lcall
jae
mov
hlt
mov
or
aaa
adc
or
xor
inc
sub
push
outsl
scas
stc
ret
les
mov
mov
stc
and
test
insb
ss
rcr
int3
push
pop
sub
ror
mov
idiv
lds
stc
data16
and
push
cmp
out
ret
call
les
push
cmp
mov
xchg
cmp
inc
stc
push
pushfw
xchg
imul
cwtl
dec
leave
and
shl
aam
sub
gs
dec
mov
xchg
cmpsl
data16
out
cmpb
mov
cld
mov
data16
push
repz
sbb
xor
jno
imul
xlat
or
cmp
aaa
xor
jp
cmp
or
pop
outsb
mov
push
cmp
mov
mov
stos
inc
push
jle
or
out
push
je
sub
push
add
jae
lahf
repz
pusha
sub
fimull
dec
sbb
outsb
and
out
in
lcall
adc
mov
orb
xlat
mov
pushf
xlat
xor
cmp
clc
clc
cltd
mov
or
push
es
fldenv
jnp
and
xchg
push
ja
pop
leave
mov
popa
push
pop
push
sub
lods
mov
hlt
fcomps
insb
fwait
rolb
movsl
test
imul
jb
push
into
jmp
jecxz
xor
shlb
jle
iret
out
cmp
loope
ljmp
call
push
push
test
xchg
sarl
push
lcall
mov
lea
fcoms
cmpl
test
adc
dec
aas
jge
and
rol
mov
out
sbb
dec
push
insl
ja
test
push
daa
jno
lahf
loop
xlat
add
mov
inc
ds
mov
mov
lods
mov
fcomps
sbb
lock
lock
scas
mov
dec
fsubrl
loop
cmpsb
shl
mov
add
idiv
ds
add
gs
fiaddl
sub
mov
mov
mov
gs
out
test
pushf
and
bound
addr16
dec
insl
fwait
cltd
jmp
stc
push
lods
test
bound
adc
push
pop
xchg
aam
cmp
mov
add
pop
mov
clc
adc
aam
jnp
fstps
imulb
cld
data16
imul
jno
fnsave
push
cld
xor
mov
pushf
out
pop
mov
je
pop
and
add
sub
mov
push
adc
xchg
pusha
enter
jo
mov
sub
movsl
pop
and
cld
xchg
dec
ret
imul
push
mov
mov
stos
dec
imul
push
mov
mov
loop
add
testb
in
inc
shrb
pop
sbb
push
xor
xor
and
dec
add
jo
xchg
dec
xchg
lret
push
ret
lret
cmp
adc
pushf
jmp
sub
add
sub
dec
out
adc
inc
pop
bound
push
sub
int3
outsb
loopne
mov
test
xchg
and
jno
jge
stc
push
lock
cmp
push
inc
mov
pop
add
sarl
pop
inc
mov
inc
cmp
out
dec
sarl
std
add
in
push
ret
movl
enter
in
fisubrl
xchg
ret
add
mov
xor
inc
out
ret
mov
inc
in
inc
mov
std
lods
insb
stos
fwait
mov
inc
mov
loop
cmp
rcrb
cmc
fs
push
sbb
icebp
mov
inc
sarl
jnp
divl
fimuls
std
ja
dec
add
bound
ss
mov
or
jle
sub
scas
add
jge
fs
push
mov
sub
cmpsl
xor
dec
sbb
mov
lret
push
pushf
cmpsb
dec
sub
int
loope
fidivrs
flds
repz
inc
imul
jo
push
pop
call
test
icebp
mov
pop
imul
xchg
add
jnp
jnp
add
hlt
xchg
pop
lods
mov
and
out
cmpsb
or
sub
js,pt
aad
inc
sbbb
cmp
scas
xchg
cltd
pop
xor
and
mov
jae
pop
rorb
mov
out
dec
les
cmp
or
outsl
in
inc
sahf
jnp
mov
adc
xor
testb
ret
fisubrs
inc
sub
int3
stos
movsl
cmpsl
sti
push
inc
mov
icebp
aad
pop
mov
mulb
pop
xchg
aad
cmp
popa
sbb
sbb
push
ret
jge
faddp
filds
dec
insl
push
push
decb
or
and
cmp
lea
mov
lahf
xchg
or
dec
ja
fistl
cld
jl
loop
xor
jg
ret
faddl
dec
and
jp
fimuls
pop
sub
xor
psraw
fs
addr16
xor
mov
xchg
inc
adc
repnz
xlat
aas
cmp
call
lret
lea
mov
cmpsb
arpl
aad
ret
lea
and
mov
sbb
jl
add
fmuls
lea
les
jmp
inc
out
inc
fwait
xor
sub
arpl
dec
adc
mov
in
dec
pusha
ficoms
aad
push
jae
adcb
dec
pop
xor
adc
insb
xor
dec
or
stos
leave
inc
out
mov
dec
sub
xchg
ret
cmp
pop
flds
sahf
mov
ret
popf
cmp
add
cmp
cli
mov
vpsubusb
jle
sti
ds
clc
fsubl
icebp
rcll
jo
lret
std
xchg
aad
push
dec
lds
sub
sbb
jno
mov
cli
mov
mov
repnz
popf
jb
rol
es
sbb
mov
out
adc
cltd
test
pusha
es
or
sbb
shl
das
pop
test
mov
int
mov
pushf
jae
test
xlat
push
mov
cmp
dec
sub
out
and
sbb
jp
cmpxchg
mov
adc
sub
cli
pop
jmp
xchg
dec
xor
mov
mov
xchg
ret
sub
shll
or
in
incl
mov
sub
in
and
ja
in
xchg
xchg
leave
cmp
dec
pop
pop
call
ficompl
loope
xchg
incb
mov
mov
fistpll
mov
mov
arpl
inc
dec
fisubs
lods
pop
ret
ja
movsb
into
pusha
popa
lret
jo
cmp
mov
push
cmp
pusha
fistpl
pop
and
inc
mov
inc
inc
rep
ljmp
ror
test
sub
rcrl
adc
adc
xchg
add
dec
add
iret
dec
hlt
or
mov
push
insb
out
jp
dec
jnp
sub
adc
or
insb
nop
leave
repz
fimuls
xchg
push
or
inc
pop
mov
xchg
frstor
sbb
jne
psrlq
or
push
mov
fmull
jge
and
les
pop
aas
adc
int3
sub
lds
jp
fldl
daa
fs
mov
xchg
hlt
testb
mov
cmc
add
dec
mov
clc
loopne
xchg
mov
aam
adc
rorb
xchg
and
cwtl
xchg
cli
jecxz
jmp
push
testl
bound
orl
mov
nop
not
mov
sub
iret
inc
jmp
mov
pop
mov
adc
add
and
pop
adc
mov
outsb
mov
test
mov
jp
icebp
inc
ret
mov
sbbb
mov
add
mov
xor
pop
fbld
and
popf
adc
mov
push
jb
push
dec
and
cmc
mov
test
or
arpl
insb
and
fstpt
pop
movsb
in
pop
cmp
mov
xor
pop
jge
stos
inc
loope
sub
xor
cmpsb
inc
or
sbb
das
and
pop
mov
lods
in
push
xchg
movsl
cmpsl
shlb
out
jne
mov
mov
mov
xchg
test
ret
negb
xchg
push
sbb
xchg
mov
push
into
dec
iret
pop
repz
xchg
lea
call
sbb
stc
and
mov
push
loope
cmc
push
cmc
or
pop
loopne
jnp
stos
or
or
mov
insb
icebp
mov
test
sysret
mov
xchg
pusha
adc
mov
fld
jns
cmc
stos
decl
pop
jb
rcl
jnp
adc
push
xrelease
xor
mov
dec
ja
outsl
test
lods
std
movsl
sti
or
js
push
xchg
ss
jnp
pop
fmuls
or
or
enter
inc
push
xchg
into
sub
fimull
loope
sub
pusha
cmp
push
pop
mov
push
fdivr
and
in
and
lret
dec
pop
dec
mov
lret
into
rolb
sbb
inc
push
fsts
ret
loope
addr16
xor
jge
jecxz
jecxz
xor
sbb
mov
int3
stos
dec
dec
daa
cmpsb
mov
in
sub
push
mov
push
push
jl
into
and
adc
imul
cmp
mov
stos
xchg
sbb
ror
inc
mov
mov
jp
jb
fldcw
jecxz
xchg
push
adc
loop
inc
xor
cmpsl
rclb
mov
dec
pop
rclb
incl
daa
cmpsl
fisttpll
mov
mov
repz
jp
ss
adc
jl
js
rclb
clc
cmpsb
shlb
xor
adc
insl
aam
pop
and
inc
cmpsl
adc
cmp
daa
cs
pop
push
mov
mov
mov
or
and
call
dec
insl
test
mov
popl
and
loopne
idivl
aaa
add
outsl
int3
les
and
cmpsl
or
ret
cmp
pop
sbb
out
dec
sbb
mov
es
rorl
sbb
sub
push
fwait
and
fld
push
jg
jl
and
arpl
add
insl
xchg
pop
or
fidivrl
mov
lcall
adc
gs
cli
push
rcrb
mov
clc
push
sbb
push
js
data16
loope
mov
loope
sub
and
pop
push
stc
test
aad
add
mov
push
add
or
and
cmp
lcall
fstl
push
dec
xor
in
sbb
pop
push
lret
jmp
into
sarb
leave
test
xchg
fldl
data16
or
stos
hlt
jns
fisttps
cmp
out
dec
roll
movntq
jecxz
jo
add
orl
push
icebp
outsl
fidivl
sub
push
xchg
push
out
dec
in
dec
mov
in
pop
dec
cmc
cmc
jns
mov
sub
xor
pop
sarb
cltd
shrb
aaa
sbb
mov
je
mov
or
add
xchg
cmc
push
out
xchg
pop
sub
mov
inc
mov
mov
stos
pop
mov
cmp
mov
xor
lods
add
iret
int3
aaa
test
push
pop
sub
fisttpl
call
je
pop
icebp
sbb
sub
into
int3
movsb
jne
sbb
gs
pushf
add
repnz
mov
jae
dec
repnz
cli
push
pop
in
jl
xorb
add
xchg
ljmp
cwtl
push
lock
pop
dec
jnp
dec
mov
inc
or
les
lret
mov
je
mov
sub
cmp
xchg
dec
shlb
imul
cmp
cwtl
stos
loopne
scas
clc
push
sahf
lret
cmpsb
jo
jb
popa
push
xchg
mov
cmpsl
mov
loope
pop
xor
add
jno
pop
clc
idiv
adc
bound
xchg
sub
inc
jns
mov
sbb
push
push
xor
lods
scas
lds
jne
loop
xchg
dec
stos
stc
cltd
push
cmp
dec
mov
insb
jmp
ds
or
insl
sub
lret
add
icebp
and
rolb
test
xor
ret
mov
movsl
std
ret
jg
cmc
rorb
push
jnp
push
push
stc
aam
fs
mov
insl
mov
dec
or
mov
mov
mov
mov
push
stc
push
jb
mov
outsb
mov
add
outsb
out
int
xor
adc
inc
lock
push
loope
and
cmp
pop
push
sub
adc
sbb
push
and
mov
les
in
sub
int
add
push
into
rcrl
arpl
cmpsb
test
dec
jecxz
pop
add
and
cmc
leave
jge
cmp
je
xchg
rcrb
pop
je
repz
mov
push
shl
xor
fisttpl
sahf
inc
out
shlb
jmp
stos
cmp
movb
push
push
ds
inc
xor
xchg
cmp
addb
gs
cmp
add
xlat
stc
out
mov
jne
jno
lea
addb
sbb
cs
pop
add
sbb
fidivl
jl
shl
fsubp
mov
movsl
or
loopne
sbb
aad
xor
loopne
ja
mov
xchg
leave
hlt
cli
lds
aas
jp
testl
cli
into
push
js
inc
pop
je
stc
or
sbbl
adc
fstpl
mov
aam
loope
mov
es
add
popf
pushl
dec
sti
push
test
adcl
xor
fstl
pop
pop
ljmp
xchg
xlat
jg
and
add
jecxz
lods
mov
fidivs
imul
cmp
xchg
pop
sbb
pusha
shl
or
hlt
push
std
jle
pop
cwtl
stc
cmp
mov
adc
inc
clc
rcl
fcmovnb
flds
jge
xchg
fwait
mov
xchg
outsl
mov
ljmp
dec
mov
lods
mov
fucomi
stc
mov
sub
sub
sbb
lcall
fcomi
sub
cwtl
pop
test
ljmp
mov
inc
xor
test
ds
fwait
movsb
cli
das
add
or
pushf
stc
mov
mov
cmpsl
cmp
in
out
sub
add
out
movsl
add
lcall
sbb
sahf
jge
jg
sub
mov
test
jo
sub
aam
or
pop
jbe
mov
test
jno
pause
aaa
ja
sti
adc
mov
fs
sbb
outsb
sbb
cmp
mov
std
in
inc
jp
ret
inc
xchg
pop
inc
int
cltd
es
xor
loope
shlb
cmp
aad
cmp
mov
inc
pop
adc
movsl
xor
es
mov
enter
arpl
pop
push
pop
outsl
fldt
mov
xor
scas
fbstp
pop
push
loop
jg
loop
jecxz
mov
inc
dec
mov
fistpl
jne
dec
mov
in
pop
jp
cmp
mov
jae
adc
les
icebp
mov
add
jne
jns
cmp
jo
xchg
test
lds
mov
aad
mov
add
xchg
ja
sbb
adc
adc
xchg
or
mov
movsb
mov
mov
popa
test
cwtl
rol
jmp
xchg
cmpsl
incb
xor
lods
pop
repnz
mov
adc
xchg
mov
fldl2t
popf
and
into
ficoms
imul
stos
stos
daa
mov
enter
fistpl
push
xor
xor
inc
pop
xchg
cmpsb
dec
cmp
or
insl
stos
pop
jecxz
mov
fidivs
loope
fwait
adc
loopne
sub
inc
mov
incb
adc
rcrb
pop
push
aad
push
add
mov
xor
dec
xchg
sti
adc
pop
push
insb
sub
and
mov
push
aaa
insl
inc
rorl
rcll
or
jno
shll
popa
sbb
push
mov
in
pusha
jmp
jg
lahf
xor
push
cld
sahf
and
outsb
imul
in
inc
pop
cmpsb
out
sub
mov
in
movsl
or
add
std
jb
cmc
pop
cmp
das
push
enter
pop
imul
loop
add
mov
inc
outsl
sub
pop
jp
imul
pop
nop
test
cmp
cmp
pop
jecxz
pusha
mov
inc
mov
mov
mov
and
sub
aam
outsl
mov
ss
cli
or
cli
enter
es
out
xorb
jno
and
loop
popa
xchg
in
add
add
xchg
aam
fldenv
clc
mov
fsubr
dec
sub
pop
imul
or
dec
ss
mov
icebp
imul
cmp
jg
or
or
xor
insb
arpl
aas
or
push
bound
cmp
xor
icebp
stc
and
neg
adc
pop
test
out
aaa
jae
fsts
sub
lret
or
out
jnp
and
inc
xor
outsb
jge
outsl
cs
or
sub
repz
pusha
shll
les
dec
xchg
lock
sbb
cltd
or
adc
int3
imul
inc
pop
and
mov
icebp
imul
fdivrl
mov
xchg
push
sub
dec
jecxz
push
push
adc
jns
pushf
pop
jne
xchg
sarb
insl
sub
por
dec
inc
stc
ss
leave
pop
jle
lods
popa
xor
jle
mov
iret
in
loop
xor
mov
lret
pop
pop
mov
push
aas
clc
and
mov
loop
sub
xchg
inc
dec
sbb
repz
jge
rep
in
mov
cmpsb
mov
insl
lret
lret
cld
pop
int
ss
adc
les
mov
and
repz
sbb
push
sub
jae
xchg
fistps
cltd
push
icebp
imul
ss
pop
imul
rclb
in
sbb
mov
daa
xor
es
dec
sbb
shlb
aad
into
inc
imul
repnz
int3
jp
or
add
popf
fwait
mov
scas
cvttps2pi
push
dec
icebp
jg
scas
loop
addr16
ffreep
sbb
aas
xor
xchg
jns
mov
mov
mov
dec
xchg
fimull
pop
xor
ret
fmull
cmp
sub
xchg
add
cmp
inc
add
sbb
or
pop
ret
pop
jecxz
je
inc
cmp
outsl
mov
sbb
mov
mov
add
ret
loop
inc
xor
stc
mulb
cmp
clc
sbb
cwtl
into
lret
sub
cltd
jno
xor
sub
sti
popa
gs
push
insl
ja
xchg
cmp
mov
dec
incb
repz
mov
xor
jl
adc
dec
inc
sbb
pop
daa
sub
pop
sarb
pop
adc
in
popf
das
mov
das
and
loopne
cmp
arpl
mov
scas
dec
mov
in
mov
jns
pop
negb
dec
sub
repz
repnz
test
loop
popf
pop
out
imul
inc
pop
gs
call
or
mov
cmp
fldcw
daa
loope
sub
je
ret
xor
push
insl
sbb
xor
daa
jge
dec
inc
inc
and
test
loopne
mov
sarb
dec
jp
mov
fmuls
cmpsb
jbe
cmp
add
loopne
mov
sub
push
adc
lds
sti
outsb
leave
lods
icebp
xor
push
in
push
sub
jne
jne
jns
sub
pop
push
push
mov
add
mov
inc
jns
add
add
mov
aad
cltd
movsb
setl
push
out
stos
test
inc
mov
nop
jb
sbbl
scas
push
inc
ja
push
push
enter
std
adc
js
dec
addr16
rcrl
pop
pop
out
jae
fscale
test
mov
jnp
or
inc
insl
cmpsb
iret
sbb
add
and
shr
mov
cmc
pop
scas
cmp
stos
inc
aad
je
mov
dec
test
fstps
push
popl
test
loope
and
pop
mov
mov
pushf
roll
xlat
addb
inc
aam
pop
pop
arpl
repz
add
xchg
sbbl
insb
adc
bound
mov
add
fs
inc
dec
xor
orb
les
jl
rolb
sarl
std
daa
test
mov
out
loop
imul
pop
and
pop
dec
test
add
push
mov
jle
adc
or
lret
xchg
inc
sbb
mov
push
int
pop
js
xor
sub
cmpsl
jge
xlat
mov
inc
jno
aas
cld
xchg
pop
jnp
aaa
jnp
into
add
adc
cmp
ds
mov
psllq
dec
mov
jnp
push
push
lcall
outsb
and
sbb
mov
adcb
or
mov
xor
mov
or
and
hlt
or
cmc
rol
adc
sub
push
adc
pusha
hlt
push
sbb
fs
bound
pop
in
mov
mov
mov
sub
xchg
xlat
sbb
xor
xor
movsb
fidivrl
xchg
inc
sbb
pop
or
inc
lds
xchg
jmp
ja
cmp
pusha
or
mov
mov
mov
sahf
inc
add
jo
add
pusha
sub
fldt
or
push
mov
outsb
sbb
fidivrs
loop
jle
dec
cli
imul
pop
cmpsl
adc
je
pop
mov
in
pop
sbb
and
loope
fdivrl
mov
or
dec
imul
sbb
sbb
out
mov
insb
add
push
and
jge
loope
and
sbb
sbb
xor
mov
fistl
jg
dec
or
sbb
sbb
pop
test
sub
stos
and
dec
xchg
mov
sub
jae
mov
lea
or
inc
push
sbb
data16
adc
mov
and
aam
outsl
test
js
das
push
out
push
add
inc
sbb
add
fcmovnu
mov
stos
lock
sbb
icebp
and
test
js
lock
cmp
lea
test
xchg
xchg
and
push
and
add
enter
lahf
or
mov
int3
hlt
cmp
xor
and
push
insl
out
xchg
ret
dec
inc
sarl
les
movsl
std
aam
lret
inc
push
xor
arpl
push
sub
movsb
cmp
pop
inc
jns
xor
adc
cli
push
mov
push
xor
xchg
mov
rorb
popw
pop
cmpsl
pop
mov
inc
pop
imull
or
rcl
loope
xchg
or
cld
inc
pushf
cli
ds
sbb
xchg
cmpsb
cmpsb
and
jo
dec
movsb
pop
mov
add
je
add
xchg
shl
add
xorb
mov
sub
lea
add
cwtl
shrb
mov
adc
mov
lcall
int3
sbb
xorb
clc
sbb
adc
adc
sub
arpl
test
mov
jbe
arpl
push
or
nop
cmp
jecxz
push
pop
lods
pop
or
xchg
roll
or
dec
fistpl
xor
sub
out
addr16
sub
movsb
sbb
loopne
into
sbb
pop
xlat
iret
mov
sbb
pushf
data16
cli
pusha
jnp
sbbb
test
and
pop
add
pop
mov
jp
ljmp
adc
pop
sbbl
mov
xchg
shl
mov
fsubs
cwtl
scas
pop
sub
and
xchg
in
movsl
es
loopne
addr16
mov
pop
xor
adc
fnstcw
pop
ss
in
push
pop
popa
jns
or
push
sbb
jo
int3
xchg
mov
add
or
sahf
pop
cld
lods
or
mov
mov
cmpsb
sbb
xchg
shrb
sarb
jns
fistpl
movsb
aaa
nop
enter
inc
scas
cmp
popl
out
dec
cli
movsb
shr
rorb
fwait
sarb
sub
addb
stc
mov
imull
push
mov
inc
dec
out
out
clc
or
and
and
jecxz
inc
stos
xor
or
sti
fwait
fwait
mov
cmp
loopne
push
or
clc
dec
add
inc
sub
fsubrs
jbe
mov
call
inc
lods
sub
fists
cli
lret
jmp
sbb
out
xchg
dec
xor
pop
cmc
lock
xchg
or
stos
in
sarl
mov
sub
mov
add
sbb
inc
xchg
jbe
ss
test
pushf
insl
stos
shl
sbb
loope
shr
pop
loopne
icebp
jae
xor
rcl
or
testb
cmp
mov
push
push
mov
dec
mov
stos
stos
push
and
push
andb
sbb
sub
lret
fisubl
jmp
mov
xchg
xor
in
ret
testb
push
int3
fcmovu
fs
sub
sub
imul
xlat
cmp
iret
daa
fists
das
push
push
xchg
dec
ss
jb
cmpl
sbb
sti
dec
push
dec
and
mov
or
dec
cmpsl
out
or
loope
cltd
cmc
push
ss
or
stc
cmp
mov
enter
int
push
mov
dec
addl
test
push
bound
adc
adc
push
leave
sti
pop
adcb
sub
push
cmp
adc
or
scas
jb
sub
hlt
cli
jns
mov
shr
cmc
repz
xchg
arpl
mov
fsubrs
sbb
test
mov
in
arpl
cmpsl
ret
sbb
dec
cmpsb
add
mov
out
mov
cmpsb
xor
imul
jp
mov
in
push
cmp
js
shrl
sub
into
ficomps
lret
in
popf
mov
mov
push
mov
ljmp
jbe
ds
lcall
ficoml
adc
movsb
lret
in
out
aaa
dec
mov
pop
test
insl
test
in
mov
scas
frstor
out
fdivl
dec
les
bt
or
sub
fnstenv
ja
push
inc
inc
ja
cs
scas
add
out
sbbb
fs
aaa
das
jl
arpl
imul
imul
hlt
push
or
dec
jnp
and
hlt
aaa
dec
xlat
test
sub
push
push
or
icebp
inc
cmpsl
cmp
jl
push
pop
or
iret
fs
jle
imul
and
rcll
test
mov
push
pop
pop
sub
adc
pusha
dec
add
rolb
mov
jb
xchg
jp
inc
std
loope
sbb
and
mov
jl
int3
cmp
sub
out
and
or
mov
push
je
push
and
jecxz
les
fcmove
fadds
sar
imul
clc
jb
loope
hlt
sbb
and
jae
fsts
int
or
jae
fpatan
push
mov
add
jmp
fidivrl
clc
xchg
pop
inc
mov
rclb
shrl
add
sti
iret
jno
sbb
lock
pop
cld
test
jp
test
das
add
daa
sbb
xchg
scas
outsl
jb
push
or
jo
scas
test
mov
cmp
push
fistpl
test
pop
in
lcall
mov
jl
cmp
call
dec
push
pop
aaa
jnp
test
lods
call
call
into
dec
data16
mov
insb
outsl
mov
push
pop
lock
and
fcoml
icebp
jns
and
cmpsb
test
mov
mov
loop
add
add
fstpt
add
les
stos
nop/reserved
out
xchg
es
mov
mov
mov
lcall
in
mov
scas
adc
sbb
push
stc
out
push
cmp
xchg
xchg
stc
test
jl,pt
repz
push
jbe
and
mov
imul
xchg
cltd
sbb
dec
rclb
shll
mov
out
xchg
jge
xchg
pusha
jmp
xchg
sbb
jns
shlb
mov
pop
push
pop
lods
xor
icebp
pop
into
xchg
fisttps
ss
dec
out
jp
xchg
in
adc
adc
push
add
push
in
inc
dec
inc
or
pop
and
sbb
cmp
dec
push
push
jne
push
or
xor
ret
lret
cwtl
adc
fcmove
filds
fcmovb
xlat
pop
enter
fdivl
push
or
mov
fsubrl
jne
fisubl
dec
push
lahf
inc
scas
aas
pop
add
sahf
push
inc
dec
fildll
push
xchg
mov
push
lcall
pop
cmp
or
cmc
mov
mov
inc
xor
push
jp
pop
fdecstp
aaa
fld
dec
sbb
fdiv
add
aad
and
mov
lret
xchg
test
movsb
cmc
insb
pop
hlt
xor
mov
mov
in
jne
and
mov
imulb
popf
das
fcomi
cmpb
dec
popf
push
into
cmpb
add
fcmove
adc
movsl
ja
fstps
scas
imul
fwait
adc
hlt
push
and
pop
jae
ljmp
sbb
mov
dec
or
mov
push
inc
push
lock
or
lret
mov
xchg
movsb
leave
loopne
push
mov
ja
lods
test
lcall
jecxz
push
pop
dec
inc
inc
fadds
cmp
xchg
paddusw
dec
stc
imul
pusha
pushf
xor
add
pusha
inc
test
hlt
jbe
dec
ss
sub
sbb
cmp
jl
sub
xlat
iret
xlat
js
add
xlat
pop
mov
sub
inc
sbb
jne
lret
dec
and
pop
or
mov
insb
xchg
mov
imul
mov
jmp
call
les
fs
out
pop
mov
incb
cmp
cmp
mov
add
arpl
cmpsl
dec
jle
mov
in
inc
mov
loope
cmpsb
add
fisubrs
imul
push
mov
mov
outsl
jne
and
dec
call
aam
imul
sahf
clc
dec
adc
pop
mov
shl
popa
in
icebp
lods
pop
inc
adc
repz
inc
outsb
pop
aaa
hlt
adcb
push
ds
ret
sti
mov
pop
mov
into
push
mov
mov
mov
jns
fmuls
bound
in
mov
and
push
pmullw
pushf
cmp
adc
xor
nop
xor
xchg
lods
inc
int3
mov
adcl
adc
bound
ret
add
mov
xor
sbb
mov
jp
sbb
in
xchg
mov
or
shl
sbbl
std
sbb
add
and
shl
or
cmpsl
mov
and
dec
mov
ret
push
sti
mov
test
mov
dec
push
xchg
call
stos
mov
imul
shrl
pop
pusha
mov
insb
jmp
fadd
add
stos
mov
fidivs
xchg
push
pusha
je
mov
loope
xchg
push
mov
jbe
push
or
imul
aam
mov
sti
mov
imul
mov
jb
mov
lods
stos
mov
fwait
pop
js
sti
jge
push
inc
push
adc
hlt
cld
add
jno
std
or
cmp
push
in
aas
hlt
push
adc
push
lods
pushf
adc
xchg
ljmp
mov
jecxz
push
jecxz
push
ja
mov
ret
jp
sbb
cs
jge
mov
inc
enter
call
mov
and
jne
xor
fsubs
xchg
clc
mov
in
in
jns
xchg
arpl
out
fcmovnb
xor
test
jl
pop
xchg
xchg
std
dec
pop
add
outsl
cmpsb
cltd
sbb
sar
pushf
cmc
ret
pop
sbb
out
insb
int
add
mov
xchg
aaa
les
fistl
pop
xlat
pusha
aam
pop
mov
sub
cmpsl
movb
nop
test
inc
cmp
inc
sbb
outsl
jbe
addr16
adc
ficomps
das
jl
xor
fwait
inc
jbe
inc
jecxz
push
test
push
lds
cmp
dec
test
or
scas
insb
scas
jmp
mov
xchg
cmp
icebp
scas
adc
ss
cmp
stos
pushf
pop
mov
aas
aam
clc
popl
mov
sbb
mov
std
pushf
push
ljmp
jg
add
inc
enter
jne
xchg
orb
repz
xor
test
mov
jl
mov
dec
ljmp
aaa
mov
mov
or
aad
bound
push
aad
pop
jge
lret
adc
sahf
mov
push
call
xor
push
pop
xlat
jnp
mov
and
sbb
inc
stos
stc
lret
adc
add
mov
xchg
mov
cmp
add
dec
push
in
lods
xchg
and
jg
mov
test
mov
jno
mov
mov
dec
insb
repnz
imul
ja
inc
ret
push
lock
dec
push
lds
imul
ja
sbb
mov
hlt
jmp
sbb
push
pop
or
cmp
inc
ret
push
and
gs
jmp
pusha
ds
xchg
lahf
scas
imull
sub
add
add
push
mov
lods
jle
inc
stos
mov
fdivl
or
jge
adc
hlt
cmp
xchg
xchg
xor
lds
das
fdivl
movsl
xlat
ret
in
mov
jg
pop
cmovl
hlt
dec
stos
popa
cmpsb
xchg
out
pusha
dec
rcrb
jb
sub
mov
jmp
ret
movsl
xchg
pusha
xchg
loop
orb
rolb
test
insl
cmc
ljmp
bnd
aaa
lret
daa
add
jecxz
les
pusha
xchg
dec
pop
xchg
xor
dec
fimull
xor
dec
ja
pop
sub
pop
or
mov
movsb
adc
movsl
jmp
mov
lea
adc
jl
inc
or
mov
add
inc
fcoml
push
icebp
and
das
push
and
clc
repz
pop
sbb
mov
scas
pop
mov
push
fldenv
adc
sti
dec
shrb
mov
pop
sbb
pop
setg
xor
jno
in
jg
psubsw
sub
xor
enter
inc
nop
fmull
dec
inc
stc
dec
sahf
out
les
imul
cli
loope
std
push
push
cltd
mov
in
add
jno
pop
cmp
bound
pop
xor
das
movsl
inc
inc
cmp
push
and
mov
call
insb
adc
push
sti
pop
pop
in
pushl
sub
or
sub
jecxz
push
cmp
pop
jecxz
sahf
cwtl
push
mov
lret
sbb
and
jb
push
sbb
and
jno
jbe
jns
rolb
mov
add
mov
test
pop
test
inc
xchg
cmp
in
jne
adc
stc
out
mov
push
dec
xchg
arpl
xchg
movsb
sub
jp
and
fldenv
in
and
inc
aas
xor
or
cld
dec
sbb
xchg
jmp
xchg
push
sar
push
cltd
lahf
push
stos
mov
adc
lods
pop
pop
xchg
dec
pop
jo
les
fisttps
pop
pop
cltd
xchg
iret
adc
jg
push
shr
push
sub
sbb
xor
xor
push
push
shlb
mov
mov
aaa
and
mov
arpl
popf
and
cmp
bound
lock
and
mov
fidivrs
je
cli
and
insb
or
xchg
push
ret
mov
adc
mov
imul
jnp
mov
xor
lds
mov
enter
add
xor
and
sarb
jmp
pop
test
scas
jmp
psrld
cli
add
and
test
fsincos
imul
lea
add
jle
pop
pcmpeqw
inc
xor
shl
jne
insb
sbb
mov
xchg
jae
jmp
sbbb
mov
out
repz
push
clc
lret
push
fdivr
or
jl
jae
pushf
mov
adc
push
adc
adc
xchg
xchg
mov
clc
shrb
push
sahf
add
divb
bound
inc
cmpl
push
stos
lret
sahf
lret
into
pop
es
cs
xchg
insb
sbb
cmp
mov
jg
test
cmpsb
in
sbb
enter
sbb
push
mov
mov
jp
cwtl
xor
pop
jns
repz
cmpsb
arpl
test
adc
sbb
mov
out
adc
fsubr
jmp
push
js
repz
cmp
jo
insb
mov
popa
orb
jl
insb
xor
inc
or
push
and
fdivr
xchg
out
lea
adcb
xchg
sbb
adc
sbb
rolb
adc
das
push
pop
pop
cmp
mov
es
or
mov
mov
pushf
imul
sub
mov
aaa
mov
push
sbb
enter
xchg
mov
aad
clc
cwtl
cmpsl
es
data16
aam
div
sti
les
fisubs
xchg
aam
lret
loope
xor
sbb
out
push
xor
stos
inc
and
push
push
xor
aam
faddp
daa
inc
jnp
sahf
mov
imul
push
fisubrl
or
add
std
cmc
stos
lcall
push
xor
aaa
fdivrl
jecxz
in
xchg
cmp
mov
cli
mov
ss
inc
shl
test
jle
daa
jne
mov
mov
mov
xor
push
js
fs
outsb
sti
adc
xchg
ucomiss
imul
adc
xchg
iret
and
enter
lods
ret
push
ret
ljmp
add
sarb
jle
mov
dec
scas
pop
sbb
cltd
fucomip
lcall
mov
xor
adc
and
mov
stos
jge
mov
ret
arpl
outsb
fs
test
mov
and
aas
and
jns
and
ret
and
mov
outsl
frstor
cmpsb
jno
jo
add
push
movsb
fsub
test
outsl
fmuls
and
decl
jge
stos
icebp
aas
push
mov
mov
mov
repnz
cmpl
dec
inc
push
mov
mov
sbb
out
loop
scas
jae
sub
int3
inc
sbb
arpl
cli
pop
cs
inc
dec
mov
or
stc
and
jg
test
inc
mov
xchg
adc
mov
push
and
jae
test
xchg
subb
popf
aaa
pushf
jb,pt
insb
or
inc
add
mov
cmpsl
xchg
lret
lret
jecxz
clc
out
add
sti
jnp
lret
jle
pop
cld
out
stos
fidivrl
push
out
xor
das
add
adc
pop
mov
jg
enter
test
and
push
mov
lret
out
add
shrb
inc
xchg
mov
loopne
cli
push
lret
xchg
aaa
or
loopne
mov
push
out
flds
rolb
iret
cmc
fnstsw
fwait
cli
in
arpl
xchg
inc
inc
rcrb
mov
jle
dec
xor
mov
js
xlat
add
std
out
lcall
jbe
hlt
sbb
xor
mov
mov
popf
shll
fldl
jp
mov
ds
sbbb
imul
cmpsl
sub
int3
lret
or
jge
addb
mov
mov
fs
push
or
call
lret
mov
rcll
leave
fdiv
out
out
xor
mov
aaa
pop
dec
sbb
loopne
jmp
fstl
and
sbb
fdivrs
sub
movsl
and
pop
andb
jo
leave
test
inc
push
mov
sbb
jae
into
test
xchg
fldenv
sub
dec
push
add
or
jnp
arpl
pop
inc
rcr
or
pushf
xchg
sub
xor
sub
dec
aad
aad
add
lds
xchg
out
sahf
add
into
sbb
and
lcall
stos
call
xchg
bound
fnstenv
xchg
adc
cmp
mov
pusha
inc
mov
nop
xchg
pop
jae
ffree
lret
das
lea
mov
fistps
ret
test
mov
mov
out
sbbb
xchg
rorl
or
sbb
je
stos
movsl
dec
pop
imul
xchg
add
nop
inc
sub
push
fisttpl
lcall
addr16
lods
push
jb
pop
pop
mov
sbb
jecxz
cmpb
fdivrl
shrl
stos
loopne
or
or
aad
cmp
clc
enter
jp
sbb
sbb
daa
les
cli
arpl
test
lahf
or
mov
xlat
cmpsl
add
xchg
int
adc
in
mov
sbb
popa
sbb
imul
cmp
out
test
lods
xchg
or
out
test
icebp
add
add
dec
cld
dec
and
rclb
jge
daa
jb
adc
mov
dec
xorl
inc
ja
mov
sbb
sub
adc
test
pop
arpl
and
aas
fucomi
pop
or
adc
jecxz
mov
in
ret
dec
sub
call
stos
mov
jo
pop
jns
mov
jp
in
out
loope
dec
cwtl
jg
mov
sbb
outsb
out
aas
mov
lret
cmp
cmpsb
outsb
fnstcw
popa
notb
ljmp
jge
test
loop
cmp
out
js
es
xor
push
mov
mov
mov
xchg
loopne
bound
test
sub
rcrl
jle
cmp
stos
test
fstp
cwtl
dec
es
inc
xchg
xchg
mov
mov
xor
pop
mov
xchg
pop
sbb
test
jecxz
jmp
inc
mov
xor
ret
xor
add
inc
cmp
das
pop
imul
out
pop
imul
push
xchg
addr16
and
push
xchg
lret
add
adc
cltd
loop
jne
js
rcrb
cmp
rcrb
adc
pop
xchg
cmp
sbb
cwtl
lret
dec
xor
dec
pop
xchg
ljmp
test
scas
ror
clc
inc
fcoms
jg
mov
into
loope
sbb
test
xchg
test
cmp
fnstcw
cmp
inc
fwait
xchg
xchg
mov
lcall
decb
repz
mov
enter
or
jle
dec
ficompl
movsb
and
test
push
xor
pushf
arpl
adc
orb
nop
or
in
add
or
pop
fsubrs
mov
outsl
lods
mov
sub
int3
dec
jmpw
jbe
stos
jp
test
cwtl
cmp
loop
sub
stos
mov
repz
test
push
mov
xchg
fmulp
les
ss
xchg
jno
in
jmp
js
or
jno
fnstenv
lret
pop
push
test
inc
cs
adc
dec
xlat
jno
sub
xor
mov
cmp
pusha
jmp
pushf
clc
adc
sbb
pop
lds
mov
xor
rolb
stos
fcmovu
add
shll
stc
sarl
in
cs
xor
ror
hlt
or
ret
push
pop
pop
fistpll
add
sti
cmp
dec
mov
pop
rolb
dec
or
pop
mov
pop
sub
mov
push
xor
aad
inc
sbb
xor
iret
enter
mov
fdecstp
and
push
aam
cmp
or
xchg
lret
add
push
inc
les
sub
mov
push
mov
repnz
mov
mov
lsl
cwtl
movb
in
repz
push
adc
leave
inc
jo
idivb
test
out
call
xchg
andb
sbb
sub
fcomps
lock
adc
add
sub
mov
add
xsha1
cmpsb
mov
insl
push
dec
decb
repz
leave
or
cmp
push
inc
push
rorb
roll
push
dec
cli
sbb
popa
jne
in
subl
push
sub
mov
mov
mov
or
daa
inc
jae
mov
xchg
jb
xor
out
sbb
dec
rorw
imul
imul
ss
ret
enter
fimuls
imul
cmp
out
push
inc
cmp
ret
xor
adc
push
add
mov
mov
xchg
cmpsb
push
mov
cmp
popf
dec
jge
arpl
imul
jno
int
loopne
outsb
nop
ret
inc
pop
mov
xchg
call
cmpsb
arpl
incb
lock
fmulp
dec
push
inc
and
mov
push
inc
mov
lahf
outsb
jne
scas
mov
xchg
pop
adc
aas
lods
insl
data16
mov
das
stc
std
lahf
push
push
rcrl
xchg
jo
mov
mov
push
int
inc
pop
jp
mov
or
mov
mov
sbb
fildll
inc
rorl
mov
adc
xchg
sub
dec
arpl
lea
jns
push
fildl
ss
cmp
outsb
push
sbb
out
lock
fcmovne
sub
mov
in
and
loop
fcmovne
aad
push
sahf
xchg
lds
jno
fmuls
fsubl
and
mov
insl
nop
fcmovne
outsl
xchg
push
addl
decb
add
mov
sub
sbb
xchg
adcl
outsb
icebp
xor
setl
mov
pop
or
imul
lcall
insl
xor
push
mov
add
mov
add
in
push
test
js
clc
inc
test
cltd
imul
lcall
inc
push
add
dec
aas
in
xchg
sahf
fisubrs
pop
lods
pushf
mov
xchg
or
xchg
jns
pop
shr
addb
mov
or
fidivl
xor
int
cmp
imul
xlat
dec
movsl
xor
int3
inc
add
or
dec
jb
insb
dec
push
int
leave
inc
and
cwtl
push
pop
jmp
and
xchg
out
push
sbb
or
mov
imull
and
out
cmp
sti
and
adc
jecxz
stc
outsl
sub
shlb
or
aad
adc
ret
loopne
pop
movsb
sbb
cmp
call
xchg
xor
and
adc
shrl
xor
stos
xor
popf
sbb
loopne
popa
inc
add
cmc
cwtl
dec
out
lock
pop
pop
ret
push
xor
lods
aaa
xor
fimull
or
jns
dec
lahf
inc
rol
cmp
push
sti
repnz
cmovae
js
or
stos
mov
mov
shlb
dec
mov
xor
mov
nop
out
shlb
es
sub
dec
push
jnp
ja
mov
cmp
das
jns
movsl
xchg
jmp
movsb
inc
adc
in
adc
fildll
adc
and
std
iret
mov
xor
add
inc
cltd
jb
xchg
mov
xchg
insb
test
cmp
scas
jae
sbb
and
negl
mov
movsb
xchg
pushf
fisttps
int
andb
fisubrs
scas
movsl
fiaddl
fisubrs
mov
jge
xchg
add
inc
mov
sbb
push
jb
test
movsb
push
adc
test
xchg
jecxz
xor
jmp
roll
out
pusha
add
ds
jb
push
pop
pusha
xor
cs
inc
push
cmp
aaa
pop
repnz
inc
push
push
es
lods
mov
cmp
shl
or
push
xchg
dec
clc
sbbl
xchg
mov
sbb
push
mov
cwtl
fsubr
sbb
shll
jle
ljmp
mov
sub
xchg
das
rclb
rorb
jae
mov
arpl
aad
subb
push
or
addb
mov
not
test
js
push
addr16
lahf
mov
push
cmp
jmp
es
pop
add
pusha
xchg
out
loopne
adc
xchg
icebp
fs
jae
pop
sub
lcall
shlb
in
test
xchg
lcall
lcall
in
fmull
push
daa
shrb
jle
jae
mov
jb
dec
inc
fadd
adc
subl
lcall
xchg
popf
pop
loopne
mov
cwtl
ret
mov
pop
dec
mov
sbb
cmp
add
lcall
mov
cmp
lods
xor
adc
out
lods
xchg
mov
orl
pop
clc
std
sbb
cli
add
adc
mov
jbe
in
outsl
daa
popa
mov
inc
sahf
or
or
pop
mov
cld
fmull
inc
mov
aaa
mov
gs
push
rcrb
das
addr16
fbstp
mov
push
bndstx
test
aas
iret
dec
cmpsl
loopne
inc
in
pop
sub
xor
jge
bound
cmp
outsb
cs
push
sbb
std
mov
imul
iret
lods
cmp
outsl
cmp
and
mov
mov
sub
sbb
mov
pop
push
pop
sbb
std
or
cmp
mov
and
or
shrb
testb
ficomps
pushf
sub
xor
sub
mov
lds
push
xchg
add
roll
inc
xchg
jp
fdivrp
iret
sbb
inc
sti
jmp
ret
mov
popa
rolb
mov
sub
icebp
mov
cmpb
push
scas
hlt
sub
dec
out
or
or
xchg
push
sti
in
out
jne
aaa
std
cmpsb
iret
jnp
mov
or
jns
enter
fdivp
mov
dec
sub
sbb
inc
xchg
and
mov
mov
xor
inc
sbb
imul
cmp
rcrl
and
test
push
arpl
adcb
add
push
out
pop
test
or
and
loop
cld
push
or
and
sahf
push
lock
mov
cmp
ds
lret
add
mov
stos
les
mov
repnz
mov
mov
cmp
jno
xchg
mov
xchg
push
xchg
aam
iret
adc
stc
lods
xor
pop
push
gs
cmp
xor
add
and
add
xchg
mov
jne
movsb
lods
mov
in
push
pop
outsb
decl
ret
push
outsl
nop
cwtl
or
iret
jno
notb
dec
aam
cwtl
out
call
jle
adc
add
push
int3
insb
sub
adc
lret
jo
and
dec
add
xchg
mov
jne
xlat
aam
outsl
and
out
jp
mov
cmp
int3
aaa
jle
mov
cmpsb
stc
imul
push
inc
or
mov
dec
push
xchg
push
test
gs
pop
and
inc
movl
xor
add
leave
imul
push
xor
sub
xchg
aas
les
sahf
mov
negl
enter
test
stos
add
cmpsl
sar
ret
sub
xchg
xchg
cltd
dec
push
jg
pop
cmpsl
int
lret
sti
pop
xchg
sub
xchg
dec
faddl
fwait
shrb
mov
or
nop
cmp
scas
mov
iret
sub
sbb
xor
pop
mov
dec
push
cmp
stos
inc
je
pop
das
jnp
add
mov
dec
in
insb
add
add
test
xchg
clc
sar
and
subb
movsb
lahf
incb
idivl
pop
je
push
ljmp
fisubs
ja
pop
sub
movsb
test
int3
xchg
movsl
movsb
test
subl
pop
pop
sti
daa
adc
jg
or
sbb
fs
xor
push
lahf
mov
jecxz
pop
jl
daa
dec
roll
jo
dec
jg
loop
test
jne
jmp
cltd
xchg
mov
ret
leave
mov
jecxz
pop
mov
in
fnstenv
pop
ffree
pop
pop
pop
ficoms
xor
xorl
push
mov
arpl
xor
out
mov
inc
jno
aas
int3
inc
mov
sub
jp
xchg
push
xor
fcmovnbe
pop
sbb
xor
dec
cmp
dec
ds
ja
mov
xor
outsb
and
adc
gs
cs
mov
test
fnstenv
mov
lock
sbb
cwtl
aad
sub
inc
icebp
shlb
daa
xlat
mov
dec
in
jnp
pop
mov
mov
cs
mov
notb
mov
pop
sbb
push
sub
pop
call
or
cltd
pop
pop
xor
lods
insl
push
mov
dec
movsl
movsb
lcall
push
decl
movsl
mov
clc
sarb
js
xlat
pop
xchg
jecxz
stos
adc
dec
gs
push
push
test
shlb
mov
lods
ljmp
and
cmp
adc
rcrl
inc
mov
pop
aaa
mov
mov
xor
jno
mov
les
mov
add
loope
sti
adc
cmpsl
jae
aam
jg
daa
jge
jle
popa
inc
pop
lahf
pop
std
test
xchg
xor
dec
call
jns
jb
inc
xchg
cwtl
cmp
mov
pop
stos
pop
jle
ret
dec
adc
in
xchg
inc
adc
and
test
orl
inc
adc
pop
jecxz
sbb
or
cmp
adc
jg
inc
add
adc
fwait
pop
insl
mov
fbstp
sub
cmpl
or
in
lock
aaa
fcmovu
les
add
or
and
inc
mov
gs
cmp
mov
push
repz
ja
int
cmp
int
clc
lds
sub
adc
mov
dec
int3
imul
imull
cmp
push
mov
movsl
jl
mov
lds
mov
test
mov
bound
sub
mov
mov
fstpl
mov
aad
les
pop
push
sub
mov
lea
mov
mov
jl
add
push
jns
fldt
imul
lret
getsec
dec
mov
xor
mov
iret
fwait
out
xor
cmp
sub
addr16
test
cmpsl
aam
dec
icebp
mov
divb
xor
loop
je
pushf
arpl
lods
xchg
push
mov
push
and
stos
inc
pop
ret
add
push
xchg
dec
sbb
and
jle
shll
cmpsb
pop
test
movsb
cli
inc
insb
shll
xlat
shlb
push
ret
mov
mov
xor
jg
and
popa
scas
shufps
cmp
adc
xchg
adc
jae
repnz
pop
into
scas
cld
stos
mov
call
das
or
jle,pn
push
adc
in
inc
popf
sub
mov
cmc
in
lcall
adc
inc
fisttps
leavew
dec
fsubl
fstl
nop
rorl
push
ret
cli
mov
sti
mov
jns
push
sahf
lcall
inc
cltd
pushl
bound
cmp
scas
push
push
or
and
mov
sbbb
mov
dec
sub
adc
push
mov
sahf
cmpsl
push
lock
cmp
aam
jecxz
icebp
clc
mov
test
js
lcall
fildll
jmp
lods
xchg
bound
lret
pop
js
test
adc
mov
lea
mov
cwtl
jcxz
sub
pop
dec
push
shlb
bound
dec
push
jl
mov
out
out
cltd
jge
push
fs
mov
dec
xchg
mov
xlat
jg
clc
mov
cli
clc
into
push
mov
sbb
or
pop
mov
pushf
push
popa
jg
fmull
inc
aam
mov
push
rclb
add
sbb
aad
xchg
adc
lret
mov
add
sub
lods
out
into
dec
shr
lods
mov
popf
inc
cwtl
mov
stos
pop
shll
jecxz
mov
add
xchg
push
enter
cmp
popf
inc
dec
mov
jp
jbe
pushl
sub
adc
hlt
pop
rcrb
push
inc
pusha
decb
xchg
pop
into
mov
adc
jg
fmull
in
pop
xchg
outsb
pop
ja
pushf
pop
sbb
xlat
enter
push
insb
data16
mov
dec
mov
pop
cmc
mov
xchg
test
sub
call
and
les
addr16
fcmovne
fstl
jns
dec
ror
xor
and
cwtl
pushf
sub
cmp
mov
cmp
outsb
in
dec
jno
dec
popf
mov
adc
xor
outsb
push
daa
dec
sub
sarb
or
rcll
sqrtps
add
dec
or
rorl
pop
fisubrs
mov
into
stos
out
in
movsl
dec
sahf
push
inc
jp
ret
sub
inc
shl
test
push
pop
and
mov
mov
int3
jno
sarl
std
leave
ss
sbb
cmpsb
aas
aam
or
xchg
mov
or
or
xchg
fsub
add
in
inc
imul
lcall
pusha
pop
test
sub
movsb
xor
test
je
out
daa
push
xchg
push
jmp
pop
test
jg
xchg
push
mov
jb
sub
inc
pop
das
cmc
jmp
dec
loop
push
adc
dec
dec
pop
aas
fcompl
das
jg
sti
and
icebp
test
lahf
stos
xor
ss
shlb
or
mov
sub
icebp
icebp
add
sub
lret
or
fsubs
test
or
enter
sahf
push
sbb
out
push
add
xor
jo
cmp
pop
jno
sub
xor
fstpl
sbb
mov
pshufw
test
arpl
jns
cs
cmp
fcmove
xchg
mov
outsl
push
push
or
and
outsb
lods
jle
xlat
add
or
cmp
dec
xchg
ret
test
cmp
jne
sbb
ss
cli
test
repnz
and
cli
pop
mov
xchg
nop
stos
mov
negl
out
push
jp
dec
mov
adc
push
xchg
xlat
jg
add
jns
xor
mov
add
inc
cmp
jbe
and
mov
aaa
xchg
pop
cmpsb
loop
test
jbe
dec
xchg
cmpsl
sbb
mov
fisubl
xchg
icebp
call
popa
push
aam
pop
sub
inc
fwait
ja
xchg
mov
inc
and
xchg
push
sbb
fnstsw
and
or
adc
out
sub
fsts
sbb
add
push
xor
add
push
jns
pushf
push
xor
lret
mov
mov
inc
les
jp
scas
jp
pop
xor
cmp
test
jp
out
sub
ss
testb
in
dec
push
xchg
jb
xchg
sbb
outsb
dec
inc
repnz
js
push
xchg
sub
inc
push
xor
sar
jno
das
ret
xchg
fs
push
push
cmp
mov
mov
sub
and
xchg
dec
popf
lea
sbb
js
adc
lock
out
out
cmp
jecxz
pop
faddp
push
popa
sbb
dec
push
push
mov
mov
in
cwtl
jl
adc
sub
xor
mov
push
notb
xchg
sub
aam
jb
cmp
xlat
repz
addr16
jno
repz
pop
aad
arpl
ficompl
fiadds
xor
loop
push
or
lock
adc
jecxz
add
fwait
cmpsb
mov
cmpsb
lret
iret
or
sbb
dec
int3
xchg
mov
jmp
icebp
jo
adc
fnsave
or
add
inc
imulb
xchg
jb
mov
loop
inc
bndstx
cmc
fstps
jno
adc
cli
dec
scas
fwait
pop
clc
mov
and
int3
sub
test
sub
fildl
mov
adc
jmp
mov
ss
pop
fcoml
subb
setb
jle
cmpsl
xor
pop
dec
ja
sahf
movsb
and
js
lods
adc
out
jg
xor
sbb
inc
jno
pop
cmp
subb
stos
mov
fisttps
outsb
lret
mov
fs
push
in
add
add
xchg
mov
cmp
and
shll
jae
sti
outsb
stos
ss
les
mov
movsl
stc
shr
pop
jae
mov
in
iret
push
inc
enter
mov
fucomi
mov
inc
xchg
and
mov
push
outsb
pushf
inc
sbb
sbb
ret
fisttpl
ret
testb
push
sub
nop
rclb
xlat
into
andl
data16
inc
popf
sar
fdiv
incl
cmp
insb
inc
inc
scas
jecxz
mov
lahf
leave
shrd
jo
mov
cli
mov
je
out
mov
pop
pop
lea
nop
xchg
push
adc
mov
test
inc
fdivrs
fnstenv
fdivrl
cli
or
dec
add
je
in
inc
testl
les
stos
rcll
mov
push
dec
call
sub
and
and
mov
mov
add
movsb
test
xorl
add
mov
sti
out
add
pop
sahf
inc
mov
and
out
andb
cltd
jg
mov
pop
in
mov
adc
scas
mov
clc
cmc
icebp
push
and
lods
and
pop
fldl
in
adc
pop
imul
imulb
js
xor
cmpsl
arpl
enter
or
std
jge
xlat
outsb
arpl
in
xchg
shlb
shll
out
lods
xchg
mov
dec
and
sub
jecxz
mov
imul
adc
xor
js
mov
std
mov
incl
faddp
sbb
lods
rorb
sarl
jl
movsl
das
jnp
pop
clc
xor
popa
mov
pop
pop
cs
jl
out
xor
cmpsb
data16
push
stos
call
inc
and
les
popf
mov
inc
jmp
jne
push
xor
and
stc
cmpsb
dec
jl
dec
cmpl
cmp
mov
les
shll
enter
push
xchg
add
fs
adc
repnz
xchg
mov
aas
test
inc
jp
adc
mov
scas
sbb
loop
xchg
mov
ds
loope
repz
jl
imul
cmp
push
push
lods
shrb
sbb
test
adc
stos
out
mov
or
xchg
lods
add
fnstsw
pop
nop
pop
aam
ja
test
iret
aaa
pop
mov
int3
mov
popa
cmpsl
mov
or
das
arpl
push
sti
dec
xor
rolb
push
and
cld
mov
adc
cltd
add
xchg
stos
jo
dec
in
inc
fstl
inc
sbb
mov
out
push
and
jb
mov
adc
out
push
pop
and
mov
pop
fidivl
push
or
xchg
clc
jb
cld
adc
sar
push
mov
mov
jge
repnz
popf
pop
fwait
pop
sbb
scas
mov
cmpsl
aad
shrl
daa
in
push
leave
cwtl
jl
inc
inc
shlb
shl
mov
pop
mov
jmp
sbb
loopne
add
into
aad
fwait
add
filds
dec
sbb
icebp
cltd
inc
cli
pop
daa
stos
mov
cmp
enter
out
mov
push
jb
adc
xor
inc
mov
and
pop
push
inc
jp
ds
mov
push
xchg
xchg
sbb
sahf
lods
aas
pop
push
push
arpl
pusha
and
inc
xchg
test
cmp
pop
push
call
pop
aaa
in
dec
jle
in
lret
mov
fwait
pop
sub
stos
popa
imul
fistpl
dec
outsb
xchg
adc
insl
ret
dec
adc
push
push
mov
pop
mov
push
push
inc
xorb
in
call
mov
int
mov
add
ret
mov
jnp
pop
test
test
insb
nop
repnz
clc
insl
idivl
push
lahf
dec
stos
sub
mov
sub
sub
pop
insb
and
push
ror
push
aaa
xchg
mov
and
dec
fcomps
xchg
jecxz
std
pusha
ja
stc
leave
sub
das
add
jne
aam
lea
adcb
das
pop
xchg
dec
repz
dec
xor
shlb
add
jbe
xchg
xchg
movsb
inc
inc
test
push
adc
xchg
ljmp
cs
popf
sub
jo
inc
and
scas
imul
js
loop
out
jb
test
scas
jb
mov
aas
or
add
jns
pop
cmpsb
sbb
inc
insb
adc
xchg
push
mov
mov
add
sbb
enter
add
adc
push
cmp
add
outsl
cmp
bound
hlt
xchg
pusha
mov
movsb
repz
push
stos
add
xor
shrb
ret
rcll
gs
mov
mov
xchg
mov
and
or
dec
out
mov
and
sub
cltd
add
sbb
cmp
mov
sbb
dec
fildll
pushf
sub
pop
out
imul
std
sub
mov
push
sub
jmp
movsl
jne
sub
in
js
sbb
cmp
or
add
dec
adc
f2xm1
repnz
mov
out
imul
mov
push
cmp
loope
dec
adc
cmc
and
pusha
xor
sub
pmaxsw
sub
mov
les
sub
push
arpl
add
sub
popa
inc
xchg
insl
add
and
push
push
lcall
xor
push
in
test
or
sub
jns
out
push
repnz
test
imul
shll
jns
fdivrl
roll
fisubrs
ret
or
inc
fidivrl
subl
add
aas
inc
jmp
aaa
xchg
jbe
movsl
mov
pop
fwait
subb
sbbl
in
scas
jge
push
add
sti
pop
inc
dec
jne
mov
cmpsb
lea
mov
jl
inc
movsb
sub
bound
mov
ljmp
popf
shr
fst
icebp
enter
jle
and
movsb
fisubs
sarl
mov
adc
mov
inc
or
mov
pop
enter
mov
ficomps
inc
and
adc
jmp
ljmp
cmp
fistps
mov
jg
dec
leave
repz
mov
iret
loope
pusha
adc
cmp
pop
fwait
lret
inc
push
jns
decb
pop
sub
fwait
and
sub
or
and
es
jno
inc
xchg
push
inc
inc
cmp
dec
pop
mov
jne
in
lret
pop
cmp
rcl
mov
fimuls
inc
cmp
and
jg
jg
xchg
aam
fwait
dec
dec
leave
mov
subb
mov
jmp
adc
pop
loopne
mov
inc
or
jg
nop
movsl
into
add
dec
jbe,pt
subl
push
loop
mov
add
frstor
mov
sub
mov
shlb
shl
pop
xorb
push
lea
adc
sbb
jmp
cs
mov
push
repnz
cmp
std
jmp
xchg
push
jb
lcall
pop
sub
inc
push
xor
das
push
push
sub
jnp
adc
in
pusha
inc
lods
mov
push
ljmp
add
push
fidivl
es
cmp
dec
jecxz
loop
orl
lods
jle
mov
andb
enter
cmp
pop
loop
jecxz
shl
mov
pushf
pop
es
push
test
ret
pop
icebp
xchg
pusha
jno
aad
push
dec
or
jno
cmpsl
jae
cmp
push
lods
adc
outsb
sub
or
mov
add
jle
push
sub
cmp
fstp
or
ds
das
jg
cmpsl
cltd
inc
cmp
ss
loope
sub
rcrb
sbb
sub
pusha
nop
jno
dec
pop
test
rcll
sbb
test
xor
clc
xor
pop
mov
push
ret
sahf
cmp
mov
lcall
in
in
imul
cmpb
shll
outsb
push
cli
ja
mov
mov
jmp
out
popa
ret
inc
dec
loop
dec
xor
adc
adc
adcb
addb
das
ret
push
jmp
add
stc
pop
add
cmpsb
cltd
push
inc
ja
rcrl
leave
fildl
sti
fs
add
daa
sub
xor
insb
adc
data16
lcall
dec
movsb
cwtl
cmp
jp
xchg
fdivrs
pusha
dec
sbb
loope
sbb
aaa
dec
ss
popf
mov
repz
cmpsl
mov
out
scas
adc
popa
aaa
mov
sahf
adc
mov
fsubl
mov
fists
mov
leave
cs
rorl
lods
dec
mov
out
pushf
sub
ljmp
popa
mov
push
aaa
xchg
out
sbb
cmp
loop
fbld
lret
add
pop
lods
mov
xor
lods
sbb
fstpl
sbb
cmc
js
fs
repz
cmp
adc
les
test
dec
arpl
es
or
les
push
in
cltd
jne
icebp
sub
nop
push
mov
push
aam
data16
ret
aas
in
fldpi
in
fs
jae
cmp
and
mov
mov
mov
and
and
push
fwait
out
pop
mov
pop
stc
std
daa
xchg
sbb
loop
sub
mov
loope
xorl
pusha
gs
jae
loopne,pn
rorb
xchg
dec
aas
jle
leave
les
adc
pop
das
mov
sub
subb
lcall
fiaddl
mov
jne
mov
imul
gs
and
xchg
imulb
outsl
jl
and
mov
add
push
dec
mov
inc
push
sbb
lahf
push
mov
popf
push
dec
lods
pop
fwait
in
mov
int
dec
insl
dec
and
adcl
fwait
sbb
mov
add
sbb
pushf
sahf
push
rorb
mov
sar
mov
inc
cmpsb
ret
adc
dec
ja
xor
adc
in
xchg
pusha
mov
clc
mov
aaa
fwait
popf
jo
mov
cmpsb
mov
inc
enter
insb
jbe
subb
sbb
shll
pushf
adcl
arpl
ret
rol
push
mov
test
imul
xor
mov
dec
in
cmc
jecxz
test
vxorps
arpl
out
test
cmp
fbld
xchg
sub
sub
cmp
mov
pop
ret
nop
lods
cli
jg
gs
cmp
sahf
add
sub
fistpll
xlat
out
imul
push
ret
pop
mov
or
adc
outsl
std
scas
inc
lods
test
mov
mov
sub
pop
and
les
jmp
out
xor
xchg
and
movsl
mov
inc
pop
mov
mov
lods
mov
icebp
loop
aas
jg
adc
dec
lock
mov
shl
push
inc
mov
fmuls
cs
outsl
repnz
pop
dec
xchg
sub
cs
xchg
iret
adc
and
loope
int
fistpll
sbb
or
push
mov
adc
aam
xor
icebp
push
nop
sbb
scas
jle
int3
lods
xchg
repnz
xchg
test
aas
insb
loope
or
fstl
stc
cmp
mov
sub
xlat
rorl
jp
fstp
and
xchg
mov
xor
aad
xor
mov
in
jmp
mov
ret
jae
mov
mov
mov
imulb
sbb
pop
into
movsl
cmp
fcmovnu
daa
or
xchg
in
mov
fs
leave
insb
mov
and
push
adc
rcrb
inc
iret
lret
test
cmp
movsb
mov
cmpsb
adc
sahf
outsl
std
rorb
jbe
jnp
sub
push
mov
insb
xchg
std
popa
outsb
mov
pop
lret
test
pop
mov
repz
outsb
xchg
or
sub
hlt
rep
mov
orb
iret
iret
fimuls
jne
mov
mov
dec
jl
inc
fldt
sbb
jecxz
sub
paddusw
jg
scas
mov
sbb
imul
notl
mov
mov
and
mov
sahf
popa
push
fisubrl
inc
dec
scas
sub
add
les
iret
stos
imul
dec
xchg
in
sbb
filds
jecxz
xchg
hlt
lea
cmp
push
cltd
add
mov
mov
add
sar
pop
mov
add
rolb
in
daa
sbb
inc
ficoml
fwait
fwait
xchg
xchg
adc
mov
cli
subb
xor
dec
imul
and
out
mov
psrad
std
xorb
push
adc
sub
sub
std
mov
inc
sub
and
stc
mov
mov
mov
add
or
mov
ljmp
test
out
add
xor
ds
push
xor
insl
add
outsl
pop
cltd
movsl
fsts
jmp
xor
jnp
mov
add
dec
stos
sub
mov
lods
lahf
or
arpl
xor
cltd
mov
insl
jne
jb
adc
fiaddl
into
xor
adcb
and
mov
and
jmp
loop
std
or
fnstcw
cmp
icebp
add
or
or
das
nop
cld
stc
popa
arpl
inc
lock
aad
adc
notl
cmp
ss
inc
ret
jbe
pop
xchg
mov
mov
sar
add
cmp
aaa
outsl
xchg
je
ljmp
lods
out
mov
adc
outsl
pop
int3
inc
jnp
inc
pop
dec
sbbl
mov
xchg
loope
and
pop
jo
jge
add
popf
sub
add
mov
pop
lea
stos
sbb
lea
jo
mov
jp
cmp
ds
mov
cmp
inc
and
pop
out
icebp
push
sub
imul
add
aas
out
cltd
lods
sub
push
push
sbb
add
mov
push
jnp
cmc
and
aad
lret
dec
xchg
xchg
shrb
pop
int3
lcall
push
mov
lret
sub
ret
jnp
fildll
mov
out
setnp
cmpsl
lods
stc
cmp
xorl
fldl
and
sbb
int3
sbb
or
ret
and
push
pop
mov
in
outsl
adc
dec
fsts
jb
call
out
inc
add
cmp
mov
stos
fs
mov
loope
inc
jns
nop
repnz
fbstp
adc
fisttpll
test
inc
std
xchg
popa
fists
js
xor
out
imul
popa
sbb
mov
gs
std
adc
mov
mov
in
jle
mov
gs
es
aaa
mov
lds
xor
stos
outsl
das
imul
mov
push
les
adc
rorl
pop
inc
xor
sbb
cmpsb
mov
mov
and
fdivs
or
dec
pop
inc
mov
fsubr
jl
xchg
mov
xchg
cmp
push
push
mov
pusha
xlat
inc
out
movsl
cmpsb
ficoml
cmpsl
dec
lret
in
inc
lods
xchg
adc
icebp
adc
sbb
out
shl
nop
push
shll
or
push
push
jl
and
bnd
mov
shlb
ss
jg
or
mov
stos
mov
inc
arpl
jge
lock
dec
xor
into
call
push
out
repz
out
inc
or
jne
imul
popa
stos
add
adc
mov
adc
fs
inc
dec
or
dec
sub
mov
rcr
and
sub
lods
repnz
test
adc
mov
mov
xchg
rcll
ja
push
out
and
dec
pop
test
dec
into
cmpsl
inc
scas
out
mov
stc
mov
and
cmp
cmpsb
or
pop
mov
int
lret
or
mov
mov
mov
out
out
fwait
stos
sub
rol
cmpsb
sbb
and
sbb
sub
sub
mov
lods
mov
dec
jnp
pop
cmc
icebp
outsb
arpl
xor
fsubrs
push
cmp
mov
cmp
mov
iret
cmp
aam
es
fstl
and
or
and
rcr
mov
mov
outsb
mov
push
adc
adc
sub
fisttps
ss
fidivl
shrb
iret
sbb
sub
mov
lret
sti
xchg
pop
jp
add
scas
mov
mov
rcll
shlb
or
dec
leave
mov
sub
bound
sub
pop
stc
or
sahf
mov
in
in
scas
hlt
lret
daa
roll
mov
cmp
jp
mov
sub
push
mov
rorb
test
iret
arpl
and
inc
imul
movsb
in
je
and
scas
xlat
pop
and
aaa
cld
enter
dec
jmp
add
int
mov
ja
mov
mov
ret
jnp
hlt
jb
leave
aaa
xchg
mov
ret
sub
lods
add
cmp
test
mov
repnz
xchg
je
mov
loopne
pop
sbb
jo
aas
lcall
mov
dec
stc
mov
fwait
insl
push
out
es
lods
dec
outsl
cmp
gs
fsts
mov
movl
aas
mov
or
add
cmp
pop
js
in
pop
fldcw
sbb
inc
jnp
mov
ss
ret
js
stos
test
outsl
lret
pop
fsubp
pop
cli
dec
sub
stc
ja
add
mov
add
mov
push
pop
lods
lea
sahf
shll
sar
add
sbb
stc
repnz
dec
push
popa
push
sub
sub
mov
xchg
xchg
fdivs
xchg
jmp
sbb
push
out
lods
jge
sbb
push
cs
iret
lock
pop
and
rcl
push
and
iret
in
movsl
imul
pop
arpl
cli
repz
or
jae
xor
fisttpll
ror
or
data16
ja
jae
daa
pop
shll
andb
sbb
cmc
cltd
cmc
les
test
xchg
xchg
inc
sbb
popa
mov
adc
jge,pn
mov
in
mov
mov
add
pop
fs
scas
shlb
dec
movsl
sub
xchg
pop
mov
cmp
bound
cmpsb
test
int
xor
mov
sub
aam
inc
or
adc
and
iret
out
push
test
pushf
xor
test
scas
lret
xchg
dec
cmp
mov
jne
bound
ret
js
mov
and
mov
sub
dec
std
idivl
push
jmp
mov
sub
pop
clc
imul
nop
jge
inc
and
xor
sub
jns
push
das
sub
ljmp
dec
xor
divb
mov
fndisi(8087
mov
mov
add
xor
cwtl
fldt
cld
sub
xor
test
xchg
test
push
movsb
mov
mov
shrb
shll
and
icebp
pop
mov
push
cmpsl
sub
notb
jmp
xchg
add
fidivrs
jg
dec
pusha
loop
loopne
jae
push
or
xor
int3
add
shll
pop
aaa
incb
push
xchg
incb
push
pop
scas
arpl
and
xor
adcl
hlt
mov
mov
jno
inc
jbe
xchg
rcll
scas
mull
sbb
sub
mov
push
jg
loope
int
scas
les
cmpsb
out
mov
negb
cwtl
mov
sbb
popf
std
mov
jae
outsb
jl
fsubrs
out
inc
pop
in
pusha
cmp
pop
movb
icebp
fmull
dec
bound
lock
xchg
adc
jo
scas
jbe
jae
addr16
cmp
mov
adc
sub
testb
rcrb
pop
pop
pusha
jge
add
pop
adc
pusha
push
inc
jae
pop
cs
cli
jp
jle
in
test
jbe
out
sbb
lock
pop
out
pushf
subb
jmp
adc
in
push
cmp
addl
mov
push
push
dec
stos
jg
test
lods
or
popa
out
xchg
jle
popf
movsb
push
int3
xchg
inc
fidivs
mov
push
in
jne
inc
mov
mov
push
test
imulb
inc
mov
mov
imul
stc
imul
testl
pop
push
or
pop
pushf
cmpsb
stos
daa
sbb
in
out
bnd
test
insl
call
lds
and
les
mov
in
int
flds
das
jecxz
mov
rcrb
pop
fldenv
pop
cmp
mov
in
pop
mov
jo
filds
daa
stos
mov
shrl
cmp
rcll
xchg
pop
ljmp
or
push
lahf
cmp
sub
jnp
jne
mov
and
push
test
xor
in
movsl
mov
ret
movsl
ja
xlat
bound
push
in
enter
int
cmc
xor
mov
jle
push
mov
and
in
dec
movsb
lahf
or
adc
fdivs
aad
clc
test
jle
sbb
inc
je
sub
pop
fs
pop
jb
push
xchg
fcmove
xchg
adc
mov
jns
les
shrb
xchg
mov
sahf
sub
mov
cpuid
sub
lods
mov
mov
je
aam
dec
xchg
lcall
sbb
fwait
dec
lahf
ds
hlt
cmpsl
int
cmpsl
mov
testl
xchg
xchg
xchg
sub
stos
xchg
mov
mov
xchg
aam
loopew
inc
notb
ret
call
clc
popa
dec
fldenv
inc
inc
in
rorl
and
pop
icebp
push
loop
jnp
les
pop
sbb
and
and
loopne
imul
adc
inc
int
outsb
xor
or
and
or
mov
xor
jbe
sbb
sub
bound
imul
andnps
or
fstps
inc
stc
and
xor
jmp
gs
adc
repz
add
push
lcall
gs
lahf
inc
sbb
mov
ret
lds
in
pop
xor
out
and
bound
movsb
pop
stos
cli
jmp
rcrl
xchg
pop
inc
dec
dec
imul
xor
movsb
and
orl
jbe
push
fidivrl
lcall
fistl
fistpll
std
mov
subb
jno
test
and
js
xlat
mov
jmp
outsl
cmp
inc
push
or
pop
add
rcll
mov
jp
mov
xor
cmp
cmp
pop
icebp
std
add
xchg
cwtl
into
mov
sarb
scas
pushf
xor
es
adcl
insb
xchg
pop
dec
mov
inc
test
adcb
sub
cmc
into
nop
cwtl
pop
mov
mov
movsl
fmulp
out
mov
jp
push
dec
xchg
pop
out
nop
shrl
mov
test
or
clc
out
repz
arpl
xchg
or
in
sub
dec
jge
mov
xchg
mov
lea
lret
lods
fs
sbb
add
lret
cmp
xor
jg
gs
cmpsb
sub
mov
sbb
pop
or
sub
push
stos
jge
aad
cmp
test
mov
insb
mov
subl
xchg
dec
xchg
and
jmp
fnsave
xor
stc
mov
xor
xchg
sti
cmp
and
pop
or
mov
sahf
stc
mov
daa
pop
pusha
adc
insb
cmc
testb
sbb
xorb
fucomi
jmp
outsb
push
cli
xchg
jns
xchg
inc
cmc
jns
movsl
xchg
fadds
shr
notb
es
bnd
cmpsb
mov
and
cmpsb
cmp
jo
jnp
pop
dec
js
popl
stos
mov
xor
cmpsl
ja
pop
mov
inc
lods
xor
shl
fidivl
fs
xchg
cmp
imul
out
dec
push
cwtl
ja
stc
dec
sbb
js
push
dec
shrb
mov
dec
pop
imul
adc
xchg
pop
push
dec
add
xchg
outsl
xor
mov
and
sub
fdivl
dec
inc
xchg
enter
cmp
shll
aaa
jp
xchg
shrb
push
cmp
fscale
icebp
js
or
outsb
add
pop
or
pushf
rol
xor
xor
and
testl
inc
test
pop
hlt
mov
add
dec
sbb
xchg
or
cmp
mov
nop
xor
add
mov
jne
mov
test
pop
inc
jp
subl
inc
mov
int
jb
cltd
lret
push
mov
sbb
pop
je
nop
scas
rclb
mov
stos
call
mov
xchg
lcall
jbe
sbb
sub
jg
fildl
push
mov
xchg
xchg
dec
stos
ficomps
or
adc
aam
jns
leave
sub
or
stos
jg
ret
push
test
xchg
cs
ds
push
pop
cltd
call
out
adcb
dec
pop
jns
outsl
sub
repnz
sahf
cmp
xlat
leave
add
cmovno
sub
push
adc
aaa
jb
pop
mov
jns
cmpsb
mov
xor
clc
test
pop
sub
push
mov
sbb
int
sbb
test
rcrl
xchg
lret
js
push
or
ret
fs
jns
lock
test
sub
sahf
sti
jo
or
cwtl
mov
out
xchg
adc
pop
jo
cmp
fucomip
js
dec
cmpsl
mov
adc
loop
mov
mov
in
push
out
adc
cmp
jbe
pop
lahf
xor
inc
sub
mov
popa
add
xchg
jecxz
test
pop
stos
or
jecxz
jno
sub
xchg
jb
pop
mov
sbb
test
icebp
adc
dec
clc
bswap
jb
fnstcw
pop
roll
jae
dec
xlat
mov
lret
icebp
std
outsb
inc
mov
into
xchg
xchg
xchg
ds
lret
stc
out
adc
fildll
jg
rclb
rclb
repnz
aaa
in
jecxz
call
outsb
sub
adc
ret
dec
pop
and
xchg
mov
dec
movl
xor
jp
sub
mov
push
cmpsb
sbbl
mov
fistl
push
adc
mov
adc
jmp
and
incb
into
sbbl
outsb
dec
xlat
push
pusha
pop
jle
pop
cwtl
mov
pushf
mov
mov
push
pop
test
xor
cmpb
iret
xchg
int
xchg
and
push
pop
pop
jmp
pushf
out
add
test
adc
in
jno
movsb
fisubl
dec
xor
cmp
dec
movsl
push
pop
mov
sbb
pushf
pusha
mov
aas
xlat
loopne
xchg
bound
dec
in
sbb
inc
cmp
pop
into
jns
and
sub
subb
mov
xchg
insb
and
mov
test
or
jg
mov
rolb
jnp
add
popf
test
push
test
mov
daa
sbb
xchg
sarb
imul
mov
scas
pop
jg
or
fisubs
shll
jne
and
int3
pusha
adc
or
test
jl
xlat
rcrb
loope
adc
lret
adc
adc
lret
psubusb
fcompl
insl
lret
int3
sub
jnp
push
push
ljmp
dec
dec
cmc
dec
inc
adc
andl
dec
stc
outsl
ror
cmpsb
enter
lods
scas
sbbb
xor
outsb
rcrb
call
mov
pop
iret
jo
mov
dec
ja
stc
imul
xor
sbb
xor
lods
in
fidivrl
lds
out
cmp
ja
test
cmpsb
stos
jnp
inc
xchg
pop
popa
xchg
sub
icebp
mov
cltd
cmp
pusha
or
mov
pusha
mov
jge
pop
mov
and
pop
arpl
sbb
pop
incl
rcl
xchg
fldcw
in
sahf
mov
add
loopne
mov
stos
out
xchg
pop
jns
in
vprotd
dec
imul
mov
add
jo
jl
bound
test
add
adc
sbb
jne
jae
sbb
add
rcrl
pushf
xchg
iret
mov
mov
test
in
xchg
or
cmp
pop
ljmp
imul
cmp
inc
andl
mov
add
js
xor
enter
ret
mov
adc
jecxz
popa
or
stos
mov
rolb
mov
rcrb
xor
xchg
iret
jb
sbbb
and
jne
js
jmp
xchg
mov
lcall
pop
sti
mov
loope
add
and
divb
je
adc
cwtl
inc
add
cld
xor
sub
fcoms
or
or
orl
shlb
xchg
jl
cmp
jle
inc
dec
push
pusha
ljmp
movsb
sbbl
in
mov
adc
out
jae
in
shl
mov
sahf
dec
es
sub
push
pop
loop
decl
loopne
arpl
repz
add
nop
xor
int
cwtl
in
aaa
jecxz
ret
lret
sub
pop
sbb
mov
adc
mov
pop
cmc
inc
mov
out
cmp
rolb
dec
lea
in
xor
repz
jge
pushf
inc
lock
dec
js
fists
std
jnp
fwait
imul
dec
nop
inc
pop
mov
cld
in
adc
dec
xchg
mov
add
rep
dec
fs
in
rclb
mov
jnp
xor
add
imul
jns
push
jae
xchg
rorl
icebp
dec
test
xchg
add
push
add
or
out
imul
mov
sub
fstpl
loopne
lods
loope
jo
jle
outsb
lds
cmpsl
push
popf
push
aam
loop
sti
pusha
push
inc
mov
lahf
imul
cmc
adc
aaa
hlt
sbb
sti
imul
or
inc
jbe
repz
pusha
xchg
ljmp
mov
pop
movsl
in
xlat
add
ret
jmp
lock
ja
cmp
ja
pop
rcll
cwtl
outsl
pop
mov
sub
mov
sub
daa
jg
xchg
test
jns
jmp
sub
xlat
fsts
in
push
mov
adc
cmpl
mov
mov
pop
cs
cmp
stos
test
loop,pt
dec
xor
loop
inc
jmp
mov
add
cld
and
lds
stos
out
leave
xlat
sbb
dec
in
push
sub
mov
sbbb
and
xchg
dec
cmp
xchg
sbb
pop
stc
popl
jnp
jp
push
inc
rcrb
ss
inc
mov
xlat
pop
sbb
fdivl
mov
push
ret
pop
sub
mov
xchg
sbb
movsl
stos
and
mov
mov
mov
fs
js
fbstp
int3
inc
and
sbb
sarb
aaa
in
xor
in
push
filds
mov
sahf
popf
test
fidivs
mov
sub
jp
sbb
cmpsb
xor
push
je
sbb
adc
cmp
mov
mov
push
push
cli
imul
in
pop
mov
and
xor
pusha
xchg
loop
test
mov
sbb
inc
jle
aas
jbe
sbb
cmp
add
fisubs
fsubl
insl
push
cmc
notb
push
add
daa
push
dec
mov
jo
pop
seta
rcr
std
cli
xor
fmulp
cmp
jge
stos
xchg
ljmp
push
arpl
hlt
repz
lret
push
fsubp
push
js
jge
mov
testb
test
and
mov
push
repnz
and
in
adc
es
mov
outsb
xchg
xor
xchg
test
fwait
add
xor
inc
jno
sbb
popfw
mov
andnps
xchg
sbb
std
jbe
add
cs
xchg
push
ja
xor
sbb
cmpsb
cmp
jno
sub
cmpsl
pop
and
lcall
fistps
in
xorl
jle
cmp
jbe
out
cmpsb
add
sti
lods
fwait
or
in
xor
in
dec
repnz
lret
and
loopne
jecxz
sbb
push
nop
mov
dec
daa
paddb
test
inc
nop
fcoms
fstps
scas
mov
pop
jle
push
lcall
cmpsl
add
dec
and
int
jmp
jne
fstpt
lods
es
ret
nop
or
cli
sti
cld
sahf
mov
repnz
cmp
sub
pop
fldt
jecxz
push
xchg
clc
jnp
pop
aad
insl
neg
cli
stos
aad
scas
xchg
inc
inc
sub
les
sub
popa
ret
mov
in
sar
cmc
dec
xchg
stos
pop
jno
mov
clc
xlat
out
pop
fistpll
xchg
ror
jbe
inc
fldenv
mov
cmp
mov
jle
in
adc
test
cld
cmc
or
outsl
gs
lcall
or
aaa
fs
push
push
push
adc
xchg
lret
cmp
and
pop
testb
stos
imul
shrl
or
lock
jl
add
add
mov
in
out
jp
xadd
test
adc
mov
out
adc
mov
leave
dec
lret
repz
cmp
mov
fmuls
and
dec
cmp
xor
aam
or
fisttpl
add
hlt
pushf
dec
sub
push
roll
jmp
repz
xchg
scas
xchg
testb
fidivrl
mov
xchg
ds
dec
in
test
loop
pop
inc
ret
mov
pop
cmp
es
push
rolb
sub
scas
mov
xchg
jp
imul
jle
add
popf
cmp
mov
cli
mov
add
push
inc
aaa
pop
dec
push
fs
or
mov
jl
push
or
cmc
sub
inc
je
sysret
sub
divl
movsb
fildll
cmp
icebp
and
adc
cltd
xchg
stos
mov
inc
cld
sub
inc
add
pop
jle
in
pushf
and
jnp
push
sbb
inc
cmp
popf
scas
add
cmpsb
or
lea
and
cmc
fstpl
test
jecxz
sarl
loopne
inc
sub
push
into
sub
add
xchg
mov
inc
push
ds
xchg
imulb
pop
push
push
xor
push
movsl
aas
or
and
iret
mov
dec
cltd
pop
inc
sti
int3
leave
pop
test
jae
mov
add
xor
add
inc
inc
push
int3
cmc
jge
jns
pushf
or
jp
xor
out
insl
sbb
orl
add
sbb
imul
sub
adc
jmp
into
xchg
inc
imul
dec
push
xorb
sbb
and
xor
lcall
pop
and
xchg
mov
sarl
outsl
shrl
sbb
ljmp
movsl
dec
arpl
fistps
push
insl
je
hlt
mov
and
pop
jns
adc
ds
testl
les
cmp
mov
sbb
xchg
es
xchg
enter
xor
pusha
pop
ljmp
dec
aam
int
fiadds
adc
inc
push
push
and
or
mov
imul
jge
xor
push
sbb
or
push
mov
fistl
jp
xor
and
test
xor
mov
xchg
mov
sub
rcr
out
repz
int3
into
or
pusha
jbe
adc
sti
jns
and
jnp
shlb
in
les
inc
outsl
in
jb
or
or
and
cmp
mov
and
pop
arpl
es
lret
pushf
sub
mull
in
dec
fcmovu
mov
xchg
sarl
mov
pop
add
lods
cmp
fistl
scas
test
movsb
push
jns
popa
dec
addr16
insl
pusha
or
mov
add
movsb
out
inc
faddl
xor
scas
jmp
pop
inc
mov
push
jmp
and
out
sbb
test
cmpsb
loope
mov
std
sbbl
cli
sub
outsl
sbb
shl
sbb
mov
and
shl
arpl
xchg
mov
inc
inc
js
arpl
lds
or
insb
lods
pushf
repz
imul
cwtl
pop
push
jo
addr16
sub
pushf
ret
jno
jp
mov
sti
mov
jno
imul
mov
pop
mov
lea
mov
lock
add
ja
mov
dec
sbb
pop
sbb
push
lods
bound
stos
xchg
inc
xchg
mov
pop
outsl
std
es
dec
jbe
jg
adc
cmp
test
and
mov
push
xchg
inc
aam
iret
sbb
test
shrl
sub
jno
and
inc
xchg
sbb
inc
xor
lea
je
jbe
fnstenv
jne
mov
das
inc
inc
or
inc
ja
jae
add
jo
adc
xor
cmp
mov
imul
xor
cmc
mov
nop
or
push
push
test
xor
inc
rcrl
je
int3
out
fld
push
repz
jle
pop
mov
or
mov
jl
bound
out
aam
pop
inc
xor
divb
jg
ds
fcoml
dec
xlat
out
pop
ja
mov
testl
or
add
inc
shl
mov
ret
pushf
dec
cmp
insl
sub
test
pop
mov
int
pop
scas
sub
xor
sub
inc
add
xchg
decb
cmp
xor
fbstp
out
and
or
movsb
pop
sub
divl
push
cmc
push
and
xlat
bndstx
push
ret
pop
dec
lock
mov
sbb
adc
sbb
push
lret
pop
sbb
cmp
cmpl
mov
lds
sbb
mov
pop
adc
les
rol
inc
std
pop
mov
push
xchg
scas
dec
rorl
sbb
test
test
iret
jae
fsubl
mov
fildll
dec
ret
or
les
arpl
xchg
pusha
testb
repnz
pusha
inc
rorl
incb
mov
sbb
xchg
cwtl
mov
mov
xchg
cmp
int
fst
mov
jle
mov
pop
test
rcll
jne
mov
pop
fwait
adc
fldl
dec
test
inc
pushf
bound
repnz
push
int3
pop
mov
cwtl
faddl
jmp
test
movsl
fstpt
outsl
ljmp
aad
lds
xchg
or
lea
pop
mov
adc
mov
add
mov
arpl
int3
rorl
ljmp
outsb
enter
xor
mov
mov
lahf
movb
repz
out
fimull
mov
xor
push
mov
mull
jo
pop
fs
fisubrl
aaa
in
es
or
aas
jg
xchg
js
in
test
jp
lcall
fs
or
std
shl
sbb
sbb
jg
daa
mov
mov
aas
inc
into
jge
pusha
fwait
add
js
cmp
pushf
add
iret
adc
pop
test
mov
add
dec
mov
jne
popa
dec
stos
xchg
jle
pop
test
inc
loope
fldl
or
or
xchg
pop
sahf
cli
mov
lea
test
ret
iret
mov
sarb
pop
movsl
pop
insb
jb
pop
sbb
dec
inc
pop
xlat
das
outsl
out
mov
mov
mov
mov
lock
mov
pop
sbb
bound
mov
mov
sub
add
scas
inc
or
or
in
shrb
nop
inc
add
fs
jno
sub
xchg
jecxz
pop
in
lret
in
sti
mov
fnstsw
imulb
add
int
and
cwtl
mov
lahf
xorb
rol
jmp
aaa
sub
and
dec
stos
ret
cld
sbb
ret
fs
test
in
inc
clc
testl
scas
ds
cmp
leave
cmpsb
loop
and
nop
pop
pop
push
and
sub
xchg
nop
mov
cmp
or
jb
int3
test
dec
sbb
mov
loop
mov
jg
xchg
push
sub
ss
rcll
jbe
imul
push
dec
scas
jp
sahf
or
cwtl
fdivrs
adc
and
adc
and
mov
mov
dec
mov
fbld
insl
adc
in
xor
mov
and
aas
dec
test
lcall
or
and
fnstsw
pop
cltd
mov
in
cmp
add
insb
into
dec
pop
call
dec
mov
loop
and
gs
in
into
sbb
ret
call
dec
pop
mov
lahf
mov
jmp
jmp
mov
mov
inc
push
push
sbb
and
std
stc
in
fnstsw
inc
jp
jb
push
fdivrs
imul
sbb
push
movsb
jl
orb
shlb
cmp
leave
sahf
fsub
mov
push
adc
push
into
fbstp
jmp
addr16
fdivrp
in
push
pop
insl
loopne
nop
dec
dec
adc
adc
popa
fld
sbb
push
stos
sub
leave
out
and
add
popa
fisttpl
and
pop
adc
xchg
fdecstp
jg
add
jge
and
insb
mov
or
lahf
or
pop
mov
and
adc
push
loop
lds
add
mov
fistl
mov
xor
loopne
mov
shll
in
mov
inc
lret
xchg
gs
imul
je
add
mov
pop
xchg
xor
add
jns
popa
lret
icebp
dec
and
inc
cmp
ljmp
push
sub
jo
mov
add
sahf
jb
push
cmp
pop
clc
loop
xchg
push
jbe
loop
inc
int3
movsb
jge
or
mov
or
inc
xchg
stos
mov
mov
inc
or
aas
lock
orl
mov
test
ss
scas
sbb
jne
add
and
adc
xchg
loopne
or
ja
fdivrl
int
int3
inc
jmp
cmp
cpuid
arpl
push
adc
into
xorl
bound
fs
mov
cwtl
sub
adc
xchg
movsl
test
push
stos
mov
loop
push
xchg
out
push
sub
adc
js
xlat
mov
fdivrs
mov
mov
ret
enter
pushf
sbb
sub
add
jae
mov
mov
daa
fsubrp
dec
jle
iret
adc
or
les
loop
or
mov
iret
jns
mov
xor
pop
shrl
mov
rcr
ss
in
dec
cld
das
jmp
hlt
jno,pt
stc
repz
inc
pop
push
fsubr
add
sbb
cmp
sbb
add
xor
scas
sbb
mov
jns
scas
sbb
xor
cmpsl
mov
popf
mov
fs
dec
xor
push
fwait
add
rcrl
lret
jge
testl
pop
xor
in
mov
push
xchg
push
mov
scas
and
hlt
sbb
mov
iret
mov
lods
out
shrb
jno
dec
mov
faddl
clc
pop
fdivrs
jmp
test
push
push
add
and
sbb
mov
dec
xor
movb
loop
sub
scas
shlb
fwait
mov
xor
and
es
pop
aas
or
ret
lock
mov
sub
lods
mov
cli
icebp
xchg
xchg
fsubrl
xor
pop
int
test
ret
xor
jbe
cmp
pop
ror
lea
adc
cmp
rcrb
pop
mov
lret
cltd
jae
rcll
shr
xchg
ret
aaa
addl
fdivr
adc
cld
dec
inc
xchg
or
lahf
test
outsl
bound
lret
mov
xchg
mov
dec
scas
insl
jne
ds
bound
xor
inc
adc
lcall
stos
stc
sub
test
mov
xor
into
mov
xchg
pop
test
in
out
inc
stos
cltd
dec
inc
mov
out
push
fcoml
popf
negl
lcall
xor
fstl
jmp
mov
inc
xorb
sti
xchg
mov
call
in
mov
pop
rorb
mov
xor
pop
xor
push
lods
cmp
xchg
popa
xchg
mov
out
cmp
mov
les
addr16
and
add
jecxz
mov
sbb
in
insb
sub
push
add
lock
test
sub
test
mov
inc
and
lods
jae
pop
test
pushf
push
adc
dec
addb
or
mov
mov
fwait
add
aaa
adc
nop
mov
lret
cmpsb
fadd
loop
cmp
dec
inc
xor
sbb
jecxz
xchg
xor
in
test
add
push
cli
mov
lods
jo
ss
mov
cmp
jne
cli
incl
imul
ds
mov
sbb
push
pop
lds
jo
add
out
aad
adc
cwtl
rol
mov
pop
lret
mov
jmp
sub
lahf
inc
jno
lahf
xchg
int3
xchg
in
pop
mov
mov
push
jg
lock
adc
outsl
shrl
mov
idivl
push
jl
cmc
inc
pop
cwtl
aam
es
xchg
fwait
int
dec
aaa
into
cmc
xchg
and
repz
hlt
sbb
jno
mov
out
cld
int
fidivs
inc
arpl
xchg
punpckhwd
cmc
into
pop
aaa
mov
jecxz
inc
push
jl
orb
add
stos
fwait
leave
popf
sub
sbb
sbb
mov
rcrb
rolb
inc
cmc
mov
adcb
mov
mov
sbb
cld
mov
ret
inc
scas
pop
sti
pop
push
sub
pushf
jmp
and
mov
mov
jl
out
aas
in
adc
movsl
adc
push
in
lods
sub
ds
in
xor
subl
fidivrs
das
dec
dec
cmp
sarl
arpl
xchg
xchg
jmp
in
mov
mov
mov
fs
cwtl
xorl
mov
cmp
mov
adc
aas
xor
pushf
jmp
cmp
ss
sub
stc
lcall
pop
adc
jnp
movl
jo
xchg
sbb
pop
hlt
dec
jecxz
jne
sub
andb
or
fisubrs
xchg
lds
hlt
stos
mov
pop
cmp
jge
out
shlb
lea
mov
leave
lea
lods
js
mov
pop
sbb
pop
pop
sbbl
push
lock
cmp
or
jbe
mov
push
cli
xor
imul
sbb
popa
rcr
dec
dec
sub
jbe
adc
fs
ficoms
push
loope
loopne
push
jns
scas
outsl
adc
push
mov
push
js
pop
insl
daa
adc
or
xor
data16
imul
popl
dec
push
mov
enter
fwait
pop
mov
or
popf
adc
les
xor
sbb
jg
mov
xchg
jo
cmp
insb
or
and
push
jle
jmp
divl
cmp
jnp
addb
xor
push
sub
mov
dec
jp
cmc
imul
pop
fistpl
in
cmp
test
rorb
in
add
ss
fisubs
dec
fisubs
ljmp
sbb
lds
add
cmp
mov
leave
sub
cmc
sbb
ss
xor
shl
icebp
xchg
testb
xchg
jns
pop
stos
inc
jmp
xchg
in
inc
ja
sub
lea
push
lea
and
lds
clc
mov
loop
testl
outsl
test
mov
mov
cwtl
jne
mov
out
mov
movsl
push
gs
ss
xor
and
decb
cs
add
ds
in
inc
fwait
xor
jecxz
add
ja
jbe
std
sbb
xchg
push
or
in
mov
push
fsubs
scas
out
stc
insb
fsubl
jb
sub
loopne
dec
out
mov
popa
call
push
mov
jl
jne
je
cwtl
sbb
test
sbb
in
mov
cmpsb
mov
adc
and
test
mov
pop
sbb
pop
pusha
shr
mov
pop
mov
xchg
inc
scas
push
pop
mov
pop
ds
mov
fistl
das
pop
mov
push
stc
out
jg
and
and
fwait
add
cmpsl
insb
mov
inc
mov
sub
adc
cmpsb
cld
mov
mov
pop
mov
shll
pop
push
decb
pop
cmp
fwait
shrl
adc
push
jge
cli
fcmovnbe
xchg
fimull
sbb
outsb
int
div
inc
mov
mov
clc
fisttps
test
push
mov
and
mov
mov
mov
rol
test
jnp
cli
pop
xchg
push
iret
test
pop
repz
mov
ret
push
push
or
lahf
je
cmp
and
jbe
cmp
xchg
xor
mov
xchg
stos
lea
xchg
add
dec
lret
dec
in
xor
inc
adc
and
xor
inc
fsub
bound
and
into
jns
into
sbb
outsl
movsb
adc
xchg
jae
dec
mov
sub
es
mov
dec
xchg
jmp
add
fwait
jecxz
mov
xor
xor
dec
mov
mov
cli
imul
hlt
inc
or
adcl
mov
xor
inc
add
inc
pushf
andl
repz
mov
and
addr16
fwait
add
push
push
or
push
adc
mov
testb
sub
xchg
sbbb
outsb
add
in
cli
push
jle
jl
sub
mov
xor
mov
adc
jnp
xor
data16
test
inc
test
mov
loopne
jbe
movsl
inc
push
mov
roll
daa
add
lret
dec
and
mov
or
stos
dec
loopne
loop
lcall
dec
adc
aaa
xchg
inc
adc
push
or
sbb
ljmp
pusha
cmc
mov
mov
out
and
sbb
stos
mov
and
ljmp
gs
dec
mov
loope,pt
mov
jg
inc
jne
or
xor
cmp
cmp
mov
ss
dec
adc
into
test
pop
adc
or
ss
jp
lcall
pop
pop
cmovl
ds
leave
or
lds
pop
clc
dec
and
xor
imul
jns
mov
inc
adc
in
push
cmc
push
and
xor
jno
in
fwait
int
cmpsb
inc
bound
repz
adcb
test
mov
mov
jo
add
mov
int3
pop
or
repnz
bound
lahf
cld
aad
xor
outsl
lahf
sub
mov
adc
mov
incb
stos
in
and
adc
jmp
cmp
push
pop
mov
clc
push
mov
pop
add
out
ss
cld
xchg
shrb
pop
jp
xlat
in
shl
sub
cwtl
mov
test
and
daa
lds
and
jb
inc
faddl
cmp
cmp
cmp
pop
outsb
pop
out
pop
mov
or
rcrb
jecxz
stc
xor
mov
icebp
test
adc
not
push
sbb
mov
jo
and
fadds
ja
arpl
lods
xorb
dec
push
stos
shll
pop
lods
push
push
into
jb
stos
filds
mov
xor
sub
popf
add
inc
data16
xchg
gs
adc
push
in
test
sub
in
push
xchg
mov
jae
jnp
lods
imul
mov
dec
push
lds
push
pusha
in
sub
sbb
xor
repnz
popf
inc
fidivrl
fimuls
add
inc
aam
and
inc
test
sbb
pop
add
jno
jns
push
lret
xor
xor
cmp
popf
insl
pop
jo
and
stc
push
push
aas
cli
testl
ss
aaa
mov
adc
fucomi
xor
js
push
cmp
push
jg
mov
iret
into
inc
add
sarl
fdivs
incl
lret
add
cmpsl
xchg
inc
mov
push
in
mov
stc
mov
jae
iret
or
mov
pusha
hlt
lock
aaa
xor
cmpsb
stos
jmp
jg
mov
cmp
enter
test
sub
gs
aam
sbb
mov
lcall
sbb
rolb
pop
add
cmp
inc
fistl
sub
sti
xor
aaa
sub
xchg
shl
repz
adcl
mov
fxch
xchg
push
push
stos
repnz
aaa
sbb
mov
pop
jo
ds
adc
fs
pop
mov
jne
xlat
aam
adc
mov
cmpsb
rorb
xor
lods
jns
and
repz
mov
loope
mov
jge
in
push
and
cli
add
mov
add
adc
or
xchg
lcall
cmp
lods
repnz
mov
testl
cltd
ss
mov
jo
aas
cwtl
push
dec
adc
push
push
lock
jb
lods
mov
sub
test
cmp
push
jecxz
jo
ljmp
cmc
out
lds
aam
sbb
xor
xchg
inc
stos
push
sahf
pop
enter
stos
lock
mov
push
pop
movsb
cmp
insl
loope
mov
movsb
xor
jbe
jl
ret
fstl
sti
fwait
out
xchg
enter
cmp
sahf
push
mov
in
xchg
fsubs
mov
and
iret
cmp
and
mov
mov
mov
xchg
fcomp
sub
dec
sub
ja
lret
push
and
xchg
int3
fwait
push
mov
lea
cmp
cmpl
mov
in
and
loopne
das
fnstsw
das
out
add
adc
je
aam
rclb
and
dec
mov
push
stos
pop
jbe
jae
pusha
mov
adc
xchg
mov
cmp
sub
pushf
jnp
into
mov
sub
xor
pushf
roll
aad
push
xchg
vmwrite
xchg
mov
out
fldcw
daa
mov
in
add
dec
mov
inc
add
sbb
ficoml
sub
cmpl
adc
pop
cmpsl
es
ret
mov
pusha
in
mov
add
pop
push
std
push
jo
mov
inc
pop
pop
add
mov
sub
adc
rolb
inc
pop
mov
fs
addl
mov
pop
scas
sub
test
rcl
and
das
jl
mov
iret
dec
inc
sub
adc
and
ljmp
outsb
mov
js
mov
bound
sub
ja
insb
mov
xor
repnz
inc
lret
clc
loope
mov
jl
fnstenv
sbbl
rcrb
dec
sbb
fnstcw
pushf
addl
xor
je
xchg
dec
shll
xor
in
adcb
lret
out
pop
into
das
jno
mov
xchg
xor
fwait
sti
mov
inc
scas
inc
pop
xchg
mov
arpl
sub
iret
sub
add
jns
je
push
rolb
xchg
in
pop
mov
inc
mov
jecxz
stos
pop
xchg
sbb
mov
lret
aam
fldl
movsl
aad
inc
fs
sbbl
or
jg
bound
imul
push
xchg
push
stc
scas
fwait
xchg
jmp
into
out
cltd
stc
ljmp
xchg
cmp
movsl
lret
mov
mov
std
je
mov
orl
jae
adc
aaa
enter
ljmp
inc
mov
cmp
inc
mov
and
cld
jp
cwtl
rcrl
jns
dec
inc
lcall
ds
js
sti
cmp
hlt
icebp
sub
repnz
dec
rcrb
adc
stos
lea
loope
add
outsl
add
outsl
aas
clc
das
jle
repnz
xor
mov
pop
clc
push
adc
fistl
stc
inc
and
mov
jle
mov
inc
push
cltd
inc
mov
inc
pop
or
in
pop
fs
xchg
andb
inc
adc
ret
mov
and
insl
das
int3
mov
push
add
out
and
out
dec
and
dec
inc
jnp
inc
repz
outsb
inc
fstpl
test
or
pop
inc
ss
jno
rcr
cmp
into
xchg
pop
mov
sub
and
xchg
push
aad
rorb
push
mov
mov
rcr
rclb
xchg
in
movsb
jle
es
sarl
ret
xchg
pop
aas
inc
mov
inc
sbb
arpl
lods
repz
pusha
mov
jbe
shrl
add
out
sub
xor
xchg
cmc
pop
int3
pop
mov
push
repnz
fcmovnu
xchg
cmp
ljmp
ss
iret
shl
cmp
fisubrs
sahf
jnp
adc
cmc
jbe
sub
ja
data16
repnz
repnz
sub
sub
aaa
xor
jo
movsl
xor
xlat
cmpb
out
icebp
fdivrl
roll
test
adc
mov
add
and
push
jmp
mov
push
sbb
cld
and
sub
adc
pop
aam
mov
or
std
sbb
jecxz
push
sar
dec
cli
aaa
jg
hlt
lods
add
jge
sbb
movsl
pop
test
mov
in
rolb
inc
or
sbb
mov
enter
sbb
clc
lods
mov
push
push
std
inc
sbb
push
push
adc
fs
cmpsb
lock
pusha
subl
loopne
jmpw
in
popa
and
and
or
or
scas
pushf
jl
stos
add
adc
add
in
shrl
adc
cmpsb
in
stos
subb
xchg
add
in
add
add
jne
jnp
jbe
push
cmp
in
pop
decb
pushf
frstor
int3
jbe
mov
dec
cmp
es
push
xor
cs
and
lret
cmpsb
cmpsb
and
lods
push
xor
jl
ret
stos
xor
mov
pop
das
repz
in
ds
dec
mov
stos
dec
push
cltd
adc
mov
add
ret
lcall
mov
in
jne
lods
jo
jae
mov
dec
add
jbe
pushl
xchg
cmp
or
and
in
xchg
iret
outsl
dec
push
mov
mov
popf
int
mov
mov
repz
adc
pop
ds
jae
cmpsl
out
adc
pop
lahf
dec
and
inc
lods
ja
lret
add
and
xchg
xchg
sbb
loope
sbb
adc
ljmp
hlt
inc
mov
jg
aad
mov
cli
rolb
or
rcr
std
or
sti
les
aaa
cli
xchg
movb
test
pop
mov
pop
jl
das
push
xor
mov
divl
jae
shlb
ljmp
lahf
fiaddl
inc
repz
lahf
or
cmp
pop
stc
jo
jmp
fisttpll
inc
lea
add
xor
or
mov
mov
rcr
dec
dec
cmp
sub
out
pop
and
mov
test
sbb
in
cli
push
mov
and
inc
fsubl
test
inc
push
sbbl
lret
jle
mov
xchg
mov
bound
inc
jecxz
pop
push
loop
aaa
cmp
lods
sbb
mov
jnp
into
jp
dec
jp
and
inc
mov
push
pop
and
pop
lret
lret
and
push
hlt
cli
pusha
jmp
arpl
jae
dec
outsl
les
addb
std
push
ret
sbb
pop
lods
sahf
pop
adc
push
mov
sub
sarl
scas
jle
aaa
or
jnp
cmp
mov
add
fldlg2
xchg
pop
daa
push
push
sub
fisttps
lods
mov
test
xlat
stc
fsts
ds
orb
jae
cwtl
insb
cmpsl
icebp
rorb
imul
dec
stc
inc
inc
mov
mov
jb
cmp
jle
ljmp
mov
mov
add
aaa
ljmp
mov
push
jl
fldenv
xor
icebp
or
add
sarl
pop
insl
testl
mov
xlat
lea
js
imul
xchg
imul
xchg
in
out
pop
and
andb
cwtl
dec
cwtl
int3
mov
lds
mov
aam
js
ficompl
push
mov
nop
mov
and
into
xchg
pop
fwait
cmp
cli
adc
es
clc
xchg
jg
adcb
enter
push
xchg
jp
subl
pop
out
fsubrs
jp
and
mov
mov
push
andl
fidivrs
pop
movsl
cmc
sub
pop
xchg
aam
xchg
enter
cmp
add
dec
cmp
lea
push
jbe
mov
addb
or
pop
mov
or
mov
jno
sbb
cmpsb
es
repz
mov
pop
dec
cmp
mov
cmc
pusha
dec
dec
jp
dec
int
push
sbb
xchg
mov
stos
lret
adc
aam
shll
outsb
cmp
mov
adc
mov
mov
shl
mov
mov
pop
dec
lcall
movsb
pushf
jg
sub
iret
mov
mov
sbb
dec
xchg
push
and
gs
mov
xchg
outsb
xor
fwait
out
pop
fnsave
iret
andl
push
xor
mov
andl
es
imulb
add
cmp
ds
jns
dec
or
repz
mov
ret
sti
adc
into
mov
push
cmpsb
ss
fdivs
xchg
out
adc
aas
scas
sahf
add
pop
xlat
loop
pop
sti
call
cmc
fwait
clc
jmp
adc
mov
pop
outsb
sub
inc
mov
lock
add
das
cmp
negb
jne
add
or
sbb
mov
and
into
sbb
jp
inc
or
jp
dec
push
cmpsl
imul
xor
out
mov
mov
push
insl
test
cmp
das
mov
insl
out
push
fistpll
repnz
iret
cli
fildll
xchg
push
ret
fucomip
jo
bound
push
xchg
call
sub
repnz
ja
cmp
mov
test
out
or
es
xchg
fcompl
adc
or
int3
clc
movsb
mov
fisubrl
dec
mov
mov
pusha
aad
and
call
sub
add
adc
cmp
cmc
pushf
ret
popf
mov
pop
stos
ret
adc
popa
addl
fadds
cmp
mov
inc
outsb
aas
cmpsb
call
adc
mov
out
add
pop
or
jge
out
ret
jge
fs
je
test
movsb
mov
push
mov
adc
dec
out
xchg
lds
std
mov
push
xchg
and
out
lret
cwtl
add
clc
iret
mov
adc
fdivl
outsb
or
adc
sub
or
cwtl
mov
push
cmp
xor
cwtl
adc
repz
dec
xchg
or
cli
pop
out
fwait
stos
mov
lcall
lcall
mov
mov
jb
shlb
fmuls
lret
sub
xor
add
out
lock
popf
mov
icebp
pop
inc
push
xchg
outsl
xchg
idiv
mov
adc
test
add
test
pop
push
pop
and
cs
mov
sbb
test
or
fs
loopne
mov
add
jbe
sbb
movsb
shr
mov
add
aad
es
lds
mov
xchg
mov
mov
cmp
sahf
subb
lahf
in
adc
call
xor
xor
sarb
and
xchg
in
test
rclb
cmp
mov
icebp
repz
or
cwtl
pushf
sub
fcmovnu
or
push
sbbb
dec
cmp
xor
xchg
popa
dec
lock
test
ret
mov
lcall
gs
mov
mov
dec
inc
imul
test
xor
xor
dec
scas
push
xor
xchg
faddl
cwtl
ret
mov
sub
push
repz
xchg
lret
push
mov
andb
and
xchg
dec
daa
popa
and
js
cmc
mov
xor
cmp
aad
jl
jle
lds
add
test
mov
cs
mov
ret
xchg
sar
subb
cmpsl
ljmp
movsb
xchg
xor
cs
mov
adc
fildll
repnz
cmp
jo,pt
xchg
xor
inc
data16
cli
pop
xchg
mov
int3
aad
pop
fyl2x
icebp
mov
repz
mov
aad
and
pop
daa
mov
aam
in
mov
fildl
jl
scas
jg
xor
ficomps
push
fldt
push
pop
mov
jle
xchg
jp
pop
lods
mov
insb
repnz
pusha
fsubs
dec
adc
repnz
je
in
bound
inc
icebp
sub
sbb
icebp
loopne
mov
cmpsb
addr16
xchg
jge
arpl
in
cmp
cmp
fsts
and
xor
jle
inc
add
mov
loop
aad
cmp
mov
inc
xchg
fs
enter
or
in
pop
mov
cmpsb
pop
popa
jmp
inc
in
lea
leave
inc
xor
aaa
and
inc
ljmp
sbb
scas
out
andb
stos
or
mov
in
lock
je
sub
or
decb
and
inc
cltd
enter
sbb
jno
push
ljmp
int
lods
xchg
cmpsl
cmp
and
loope
xlat
jge
pop
pop
pop
pop
ja
mov
mov
xlat
popf
ljmp
xchg
cmpsb
fsts
lock
cmpsb
hlt
pop
outsl
or
jno
and
data16
out
rorl
mov
adc
cmp
ds
sub
push
push
ds
jmp
test
or
fchs
loopne
jmp
popl
aad
lahf
arpl
push
push
outsb
out
shl
and
mov
lods
mov
cmc
jp
mov
mov
sub
pop
inc
out
pop
push
or
xchg
mov
xchg
add
xor
xchg
rclb
add
lods
xchg
cltd
adc
ret
and
test
mov
dec
mov
inc
jecxz
cmp
insb
cmp
pop
cmp
cmp
sbb
add
jbe
test
inc
ja
in
rcrb
cmpxchg
xchg
dec
cmpsb
test
adc
into
mov
cmc
xchg
jbe
jns
xor
fucom
adc
xchg
subb
out
xor
adc
push
xor
dec
movl
scas
mov
out
cmp
aas
into
lret
mov
fistl
push
cmp
mov
mov
test
fildll
push
test
push
into
pop
aaa
xlat
mov
jno
enter
mov
aaa
jmp
push
in
xor
out
pop
call
jbe
clc
mov
daa
xor
int
xchg
stc
cltd
mov
sbb
test
push
fs
cs
shrb
mov
fdivrs
and
mov
stos
jmp
cmp
subb
lahf
fwait
popa
xor
jle
mov
inc
imul
cmpsb
not
enter
mov
mov
dec
cmp
shll
push
enter
pop
cmp
adc
jl
sti
lods
lret
mov
fbstp
xor
pushf
mov
push
int3
hlt
adc
rclb
shrb
fstps
aam
sbb
arpl
jno
mov
xlat
out
xchg
orl
repz
mov
jbe
adc
jge
clc
sti
ljmp
shll
popf
or
adc
jg
sub
stos
imul
arpl
fimull
and
cwtl
or
sub
fnstenv
mov
push
test
std
movsb
ficomps
scas
pop
roll
xchg
fsubl
aam
in
pop
mov
jbe
pop
ljmp
aam
adc
sub
nop
jae
inc
add
std
xchg
cmp
js
dec
and
adc
and
out
iret
fsubs
mov
popf
mov
jge
or
iret
or
js
in
subl
mov
sbb
xchg
sbb
shlb
lods
xchg
lea
cmp
sbb
lret
mov
test
fbld
sub
and
push
sahf
and
je
nop
cmp
push
pop
cmp
adc
pop
push
je
arpl
push
sarb
xchg
cmp
cmp
sbb
pop
enter
ror
aam
cmp
mov
loop
ret
pcmpeqw
mov
out
arpl
xor
sar
div
in
cmp
popf
cmpsl
test
cmpb
incl
lret
int
xor
lods
jp
xchg
test
cmp
out
shrl
lret
cmp
mov
inc
cmp
push
pop
stc
ja
out
mov
dec
mov
movsb
mov
dec
fabs
mov
xchg
push
and
andb
rclb
xchg
out
or
scas
jmp
cs
sbb
jmp
dec
inc
call
jo
cmp
push
adc
and
jns
sub
push
daa
sbbl
mov
rcrb
mov
lret
pop
dec
and
xchg
jg
mov
leave
clc
mov
cmpb
pop
jle
dec
xchg
sti
pop
mov
stos
test
push
addr16
push
rolb
and
repnz
xchg
and
outsb
push
mov
arpl
int3
lcall
hlt
cli
xchg
icebp
int
call
pusha
push
push
aas
outsl
bound
push
daa
mov
sub
jnp
push
repnz
fdivp
xor
inc
fdivs
xchg
cwtl
pop
mov
mov
mov
jmp
scas
mov
test
pop
jo
repnz
outsl
cmpl
pop
mov
dec
pushf
mov
ljmp
push
pop
mov
cmp
in
in
insb
xchg
popa
and
fwait
xchg
mov
mov
mov
push
sti
insb
add
pusha
cmp
sub
mov
push
adc
sbb
dec
lods
push
inc
adc
rorl
and
and
xlat
clc
scas
sub
rcll
inc
xchg
gs
loope
popl
jbe
or
cmpsl
or
adc
sbb
ss
or
cmp
sbb
hlt
loop
xor
xchg
adc
enter
es
push
sub
sbb
or
mov
rep
in
ret
mov
xlat
test
sbb
and
mov
imul
add
mov
mov
hlt
sbb
stos
or
add
pushf
sub
dec
test
addb
xor
fstpt
es
imul
dec
fidivs
fcompl
call
ds
cld
addl
out
je
outsl
mov
movsb
push
mov
fisubrs
rcrl
or
cmp
or
cld
mov
pushf
cmp
adc
inc
movsb
scas
and
shl
xchg
jae
mov
push
push
lret
test
jecxz
leave
sbb
in
mov
push
mov
cmp
xlat
dec
push
sti
jge
pop
outsl
push
imul
mov
and
loop
push
mov
adc
insb
ja
pushf
adc
jmp
sbb
ret
sbb
sub
mov
sbb
call
mov
sbb
sub
sbb
es
mov
cltd
sub
xor
jb
and
or
pop
adc
mov
movsb
xchg
jnp
scas
addl
mov
sbb
repnz
gs
push
je
pushf
cltd
xchg
push
filds
out
mull
test
cld
mov
push
push
push
mov
mov
xchg
dec
adc
repnz
dec
fiadds
out
andl
add
dec
push
popf
imul
sarb
loope
fwait
cmpsl
das
cli
sub
sbb
sbb
and
incb
cwtl
inc
xor
ret
clc
mov
out
mov
mov
jmp
sub
and
dec
out
dec
in
sbb
sub
or
enterw
mov
shll
roll
jecxz
jne
cmp
sub
xchg
or
dec
cmp
mov
in
ret
add
jns
mov
add
or
mov
enter
imul
insb
dec
or
mov
xor
popf
cmc
and
inc
insl
sbb
mov
jl
loope
out
adc
scas
movsb
rorb
loop
pop
mov
xor
add
or
aaa
mov
int
fidivs
popf
inc
int
in
or
cmp
fldenv
scas
cltd
outsl
shlb
les
fldl
push
or
ret
add
cmpsl
in
shll
dec
sbb
push
sub
or
loopne
lds
pop
push
lds
outsb
loopne
call
into
cmpsb
icebp
inc
push
into
and
fmull
sub
mov
mov
scas
out
lcall
cmp
sbb
aad
adc
popf
aas
js
or
mov
sbb
leave
fimull
jecxz
xchg
imul
lds
or
push
xchg
fidivrs
movsb
mov
mov
test
inc
pop
loopne
mov
mov
sbb
jno
in
clc
and
jb
push
jecxz
idivb
decl
add
mov
das
pop
sti
sbb
loop
sub
push
or
adc
ja
testl
mov
fistpll
dec
andl
icebp
test
jno
lret
pop
pop
and
mov
rorb
mov
xchg
jns
ficomps
ds
jge
je
or
push
idivl
inc
adc
cmp
pusha
stos
dec
pushf
out
das
push
mov
mov
clc
out
cmp
adc
arpl
jno
das
insb
fildl
out
add
subl
in
shlb
xchg
arpl
dec
mov
and
inc
or
cmp
add
sahf
aad
lret
sahf
iret
shlb
mov
mov
dec
xchg
xchg
sbb
push
dec
cmp
sub
pop
push
mov
pusha
pushf
pop
inc
mov
mov
fisttps
and
dec
ss
or
jnp,pt
and
sub
test
filds
and
and
int
mov
mov
add
shll
in
es
inc
bound
mov
out
inc
or
loope
inc
std
xor
mov
adc
jmp
rol
sub
out
xchg
aam
enter
or
pusha
insb
dec
bound
cmp
lahf
cltd
dec
in
ret
int
leave
fwait
dec
fisttpll
sbb
imul
push
xchg
cmpsl
pushw
xchg
mov
mov
fisttps
test
sub
adc
icebp
pushl
mov
arpl
push
or
mov
lods
and
xchg
mov
mov
xor
ljmp
xorb
mov
test
call
or
xor
insl
adc
xlat
mov
mov
sub
xor
out
inc
imul
inc
pusha
xor
inc
out
sub
cld
cs
iret
lods
xor
mov
pmaddwd
add
outsl
pusha
sub
mov
mov
popf
pop
fnstcw
xor
xchg
pop
aam
pop
jecxz
mov
nop
and
xlat
push
add
or
jl
xchg
dec
jae
mov
dec
movsb
push
sahf
cmc
jne
push
sbb
aaa
mov
loope
sahf
into
pop
mov
arpl
xchg
xchg
int3
add
sbb
push
pop
dec
leave
mov
mov
xchg
icebp
aas
stc
stc
clc
ret
mov
xchg
pusha
sbb
push
pop
mov
out
xlat
jo
in
cmp
push
dec
mov
in
adc
mov
cmp
mov
out
pop
or
shll
adc
ret
or
fucom
push
imul
pop
aas
rorb
icebp
stc
xlat
imul
cmpsb
mov
test
outsb
jg
enter
ret
xor
lea
jo
stos
push
adc
rorl
movsb
nop
fisttpll
xchg
movsb
or
js
mov
scas
push
add
cmpb
iret
cmpsb
pop
rorl
in
das
pop
mov
cwtl
pop
xchg
sub
mov
fcomip
jmp
push
stc
out
fisttpll
mov
movsb
xchg
sub
sbb
push
xchg
add
fisubrs
adc
incb
mov
fldenv
inc
imul
mulb
sahf
cs
loopne
add
out
cmp
repz
ja
out
push
xchg
mov
loop
fwait
sti
sbb
cmp
xorl
in
add
adc
lock
cmp
and
dec
add
mov
std
ret
cld
xor
lcall
push
push
xchg
or
sahf
imul
add
pop
inc
mov
and
enter
adc
pop
std
xchg
dec
out
ds
pusha
pop
push
fwait
adc
xchg
push
shlb
dec
cmp
lret
mov
mov
mov
add
lock
mov
icebp
aaa
shrb
fnstenv
fnstcw
adc
js
aam
adc
mov
test
dec
in
test
sub
popa
jns
popa
lods
add
shrb
call
loopne
sbb
add
lret
xor
mov
adc
fs
dec
shlb
dec
sub
cltd
ror
jmp
je
imul
jle
cmp
or
lcall
fwait
ret
sti
test
pop
roll
push
lods
test
adc
pop
jg
xchg
inc
push
aaa
dec
in
mov
adc
movl
push
jae
add
xor
cmp
adc
daa
pop
data16
ja
sub
stc
scas
push
and
add
cmc
mov
push
ret
inc
jo
inc
sbb
dec
into
dec
lcall
xor
cmp
lret
mov
xchg
and
das
mov
aas
jae
out
or
pop
rcrl
mov
xlat
push
mov
shlb
mov
into
fsubrl
je
mov
ljmp
lahf
pop
ds
pop
test
pop
imul
mov
push
and
scas
loopne
cli
movsb
arpl
sub
int3
mov
stos
push
enter
inc
xchg
jg
jl
cmp
mov
insb
fsubl
push
dec
mov
inc
je
sbb
pop
std
cmp
xchg
jge
jecxz
fstps
daa
xchg
push
arpl
ljmp
inc
xchg
pop
jmp
mov
loope
push
xchg
lret
fidivl
lock
pop
lret
mov
cmp
cmp
or
add
lahf
jo
push
jg
gs
push
les
aam
sbb
cmp
mov
es
push
mov
lret
xor
sbb
sarb
movsb
ret
jmp
jb
adc
dec
mov
xor
mov
cmp
je
cmp
and
push
adc
dec
test
pop
mov
jl
xor
test
ljmp
fstpl
pop
mov
cld
push
ja
daa
pop
xchg
add
mov
cmp
inc
inc
aas
outsb
mov
sub
sbb
aad
popa
mov
cmpl
pop
push
and
mov
in
mov
xor
data16
gs
sahf
mov
and
lock
cmovnp
adc
mov
scas
orb
xchg
mov
and
jns
shlb
sub
clc
push
jmp
xchg
xchg
repz
fdivrl
shlb
mov
ret
xor
push
pop
jp
scas
mov
mov
std
sub
adcl
fdivrs
dec
movswl
push
enter
cmpsb
shlb
lods
mov
sub
je
add
push
inc
sub
and
and
push
cs
icebp
mov
ffree
sub
insb
pop
mov
xor
test
sbb
loop
pop
push
sub
cmp
jo
jl
pop
out
aam
pop
notb
sub
xchg
sbb
fs
mov
inc
mov
jae
xchg
jge
or
movsb
mov
or
jg
lret
fwait
lcall
dec
sub
pop
addr16
clc
mov
mov
das
add
jle
inc
nop
jb
sub
arpl
cwtl
jge
inc
mov
out
leave
push
mov
jecxz
mov
test
cmp
push
in
cmp
daa
insb
sahf
jno
push
ret
dec
sbb
bound
mov
or
subb
mov
mov
dec
stos
mov
stos
test
imul
clc
jmp
mov
xor
xchg
pushf
xchg
idiv
pop
jmp
loopne
cld
mov
or
mov
sub
popa
bound
or
push
sahf
pop
lea
cs
arpl
pop
xchg
or
mov
lock
shlb
sub
inc
pop
adc
cmp
arpl
movsb
sub
cmp
mov
nop
push
jp
movb
loope
push
rcr
aam
ret
bound
in
or
data16
sbb
addl
and
cltd
cmpsl
lods
jbe
loopne
in
sub
cmc
dec
mov
inc
xor
mov
mov
imul
pop
arpl
dec
insb
pop
rcrl
insl
fiaddl
push
lahf
xor
adc
push
xlat
in
jle
jae
mov
sub
or
and
out
adc
popf
push
mov
das
mov
scas
xchg
jno
mov
rclb
leave
jne
repz
ss
je
pop
leave
aaa
pop
rcrb
out
inc
inc
pop
jecxz
jns
inc
cmp
rorb
push
pop
je
and
lds
scas
xor
rcrl
pop
inc
pop
dec
xor
sub
stos
cs
push
mov
mov
sub
outsb
jne
mov
cmpsb
mov
bound
test
es
fsubrl
cmp
inc
dec
mov
dec
mov
sub
stos
mov
sub
cltd
adc
sub
repnz
cmp
jecxz
dec
bswap
push
inc
dec
in
inc
cwtl
iret
es
mov
push
insb
or
cli
mov
xor
adc
mov
mov
sti
mov
das
xlat
stos
int3
adc
out
or
cmp
cmp
data16
sub
mov
insl
rcll
ds
divl
loope
insb
or
pushf
scas
xchg
pop
xchg
pusha
sub
add
in
xchg
xor
jno
mov
pop
popf
fdivr
insb
fwait
popa
sub
and
int3
inc
shll
icebp
cmp
data16
insb
dec
jg
shll
pop
or
inc
inc
cmpsl
mov
jmp
xor
mov
sub
dec
cmp
add
mov
jge
test
leave
filds
pusha
hlt
pop
pusha
xchg
sahf
mov
push
lahf
test
jae
pop
loope
sub
jmp
jmp
imul
push
stos
stos
mov
fists
mov
les
mov
sub
lea
pop
dec
fldt
std
jmp
out
sbb
cmp
daa
ret
add
mov
sbb
pop
hlt
rcrb
mov
adc
sub
adc
outsl
clc
push
adc
or
push
or
pop
lahf
fucomip
jecxz
rcrl
mov
push
mov
jmp
stc
rcrl
jnp
cmp
sbb
and
repz
dec
cmpl
pushf
clc
mov
ds
push
sbb
add
mov
mov
inc
ret
xor
test
inc
lods
xchg
sbb
fwait
pushf
xor
popf
sub
stos
mov
stos
or
mov
jl
add
or
xor
pop
mov
dec
clc
mov
loopne
arpl
inc
sub
dec
mov
in
push
add
dec
lahf
adc
xchg
fidivs
push
sub
pop
rcrl
js
lock
mov
xchg
arpl
loopne
add
pop
sti
cs
out
push
push
push
test
in
sbb
rcll
cmp
pop
pushf
out
sub
xorl
push
adc
inc
jo
stos
mov
dec
inc
xor
push
dec
mov
xor
mov
pop
mov
test
mov
out
enter
in
das
out
jmp
cmp
scas
fmull
in
cmpsb
ret
stos
aaa
dec
stc
cs
mov
xor
pushf
sbb
pusha
test
sub
push
add
mov
fdivrl
push
shrl
in
cmpsl
fs
xor
mov
xchg
loopne
mov
test
jo
inc
xchg
mov
xchg
push
xlat
and
and
lds
mov
loopne
negl
shrb
adc
xchg
dec
jecxz
jo
ficomps
into
orl
xchg
fdivrp
mov
fimuls
aad
fists
insb
sub
push
pop
sub
add
sub
divl
dec
orb
subl
push
jge
dec
int3
xchg
pop
pop
rorb
cmp
dec
in
in
sub
test
pop
add
test
test
adc
jns
insl
xor
sub
mov
lods
js
jmp
dec
ret
popa
enter
fldt
xor
call
int3
push
mov
add
shl
scas
mov
push
adc
cmp
int
and
pop
inc
imul
jecxz
lock
jns
push
cltd
cmp
fmuls
and
sbb
mov
inc
mov
loope
xchg
jne
pop
inc
dec
xor
push
xor
cmp
fwait
dec
or
push
dec
std
push
lret
loopne
or
dec
call
jp
jnp
leave
mov
dec
xor
outsb
fbstp
bound
orl
jns
rol
les
pushf
into
ljmp
mov
js
dec
cmpsb
mov
add
adc
fiadds
push
mov
xchg
movsl
push
lcall
cltd
dec
xchg
nop
int3
mov
cmp
rcl
mov
xchg
dec
dec
insb
sahf
push
fidivs
xor
jle
sbb
sti
inc
ljmp
divl
es
push
mov
xor
or
jae
push
or
imul
test
imul
cmp
imul
dec
jp
lods
ja
outsb
dec
das
push
xchg
xchg
inc
pop
lret
jle
push
mov
bound
sbb
jnp
xchg
mov
inc
aas
add
cmp
mov
ja
pushf
addr16
addl
xlat
mov
cs
out
rorb
outsl
xor
test
daa
mov
sub
push
lcall
sub
mov
decl
scas
negb
jns
arpl
sub
ret
mov
repz
xor
mov
sub
out
xor
rorb
inc
pop
jge
sbb
out
mov
loopne
or
mov
ret
push
gs
push
push
or
mov
lods
out
fildl
xor
adc
nop
add
pop
or
cmpl
jecxz
inc
jg
xchg
sbb
jl
jb
aas
adcb
dec
mov
aas
xchg
stc
xchg
sub
cli
lret
add
insl
dec
xor
icebp
cmp
cwtl
setl
sti
sbb
mov
imul
push
dec
and
sub
xchg
in
iret
mov
push
mov
fldcw
pop
mov
cmp
int3
sti
stos
xchg
int3
lea
pop
inc
adc
cmpsl
mov
out
bnd
xchg
xchg
das
out
lret
push
shlb
fwait
add
xchg
cmc
jmp
pop
sub
adc
cmp
mov
jnp
add
dec
loopne
mov
mov
cli
les
cli
lock
or
fidivs
mov
push
dec
jl
sbb
xlat
jle
fidivrl
mov
jg
loopne
inc
mov
and
rcll
and
jmp
out
mov
and
shll
dec
adc
cld
orl
cmp
dec
in
outsl
push
loopne
mov
sbbl
inc
popa
pop
icebp
mov
lcall
sbb
in
jp
jg
push
xor
movsb
mov
pop
pop
dec
push
js
mov
test
xchg
gs
ficoml
lods
mov
ljmp
loope
mov
lea
inc
pop
cmovle
lea
rclb
outsb
add
sbb
sub
shll
push
aad
cmp
aad
das
xor
xor
xorb
mov
test
into
enter
in
and
pushf
mov
and
cmp
push
arpl
xor
pop
cltd
push
gs
shl
icebp
xchg
clc
inc
ljmp
fcoml
in
xchg
inc
ds
arpl
aam
push
sbb
addr16
mov
sbb
cmp
pop
inc
push
cmc
enter
in
into
stc
adc
pushf
addr16
add
pop
jp
addr16
lock
mov
jns
xor
push
and
mov
sbb
cmp
xchg
imul
add
das
cld
xchg
lock
fstl
add
cmpsl
sbb
or
jp
mov
xadd
add
sbb
jns
mov
test
ret
xor
nop
xlat
dec
stos
outsb
dec
dec
pop
shrl
insl
popf
jp
push
inc
int3
push
push
sub
pop
cmc
addb
stos
inc
jae
imul
movsb
mov
add
mov
test
pop
adc
or
mov
mov
jbe
inc
xchg
mov
fs
int
dec
test
jno
cwtl
dec
les
nop
pop
inc
into
pop
push
inc
insl
or
es
add
mov
sbb
jmp
mov
jg
add
jl
sub
inc
mov
stc
push
dec
adc
inc
dec
cmp
xchg
daa
mov
xchg
push
mov
ljmp
imul
fs
loope
sbb
or
adcb
jno
cltd
adc
mov
xchg
mov
in
ret
jbe
pop
cli
dec
cmp
xor
add
aaa
push
mov
rorb
push
in
movsb
mov
push
out
inc
ss
int3
lret
aaa
ja
xor
mov
cmpsb
add
mov
subb
pop
outsb
push
push
fimull
in
mov
out
out
jno
ficoml
negl
repnz
push
les
push
mov
fdivr
push
dec
push
js
adc
cli
or
shlb
and
push
pop
and
and
std
mov
dec
adcb
push
inc
dec
testb
inc
mov
inc
push
mov
cld
mov
iret
jae
mov
fisttps
movsb
lahf
pop
enter
dec
scas
cmp
jo
mov
jbe
mov
loop
out
mov
cld
xor
mov
xchg
push
dec
lods
scas
into
in
push
jns
mov
pop
mov
stos
in
push
jg
add
xor
loopne
ds
or
dec
mov
outsl
insb
test
sub
test
fimull
mov
das
push
mov
in
mov
mov
in
lods
xor
sub
loopne
andb
hlt
and
lcall
insb
add
or
js
aad
and
pop
and
xor
add
orl
push
cmp
stc
rorb
add
sbb
xor
inc
mov
xchg
mov
sbb
movsb
ret
adc
ss
es
cmp
lea
xor
push
mov
rolb
sahf
dec
dec
mov
fmul
xchg
jle
xchg
push
adc
jmp
loop
pop
rcrl
insb
int3
das
push
fistl
mov
add
jg
js
pushf
clc
jg
inc
add
mov
xor
cmpsb
mov
out
sub
fisttpll
popa
adc
addr16
fcmovb
xchg
nop
sub
jecxz
mov
lcall
scas
dec
loop
mov
sbb
sarl
cmp
push
sahf
push
cmpsb
push
out
popa
call
pop
outsb
adc
test
pop
push
stos
addr16
and
sub
dec
fs
and
sbb
adc
xchg
jmp
sub
out
int3
cmpb
sbb
adc
jp
popa
test
cli
add
mov
sbb
and
push
fucomip
imul
cli
adc
mov
and
ret
repz
jbe
rol
pop
sbb
jmp
xor
divb
fistps
aam
adc
mov
jle
mov
jle
divl
push
hlt
inc
mov
lds
jg
inc
and
mov
inc
cmpl
push
adc
cmpsb
xchg
out
into
pop
mov
stc
sbb
jno
out
or
push
and
cld
rcr
sahf
loope
mov
sbb
lret
loopne
sbb
test
add
push
cmp
and
ret
icebp
jl
outsl
bound
push
mov
cmpl
inc
fstps
and
xor
pop
popf
in
mov
imull
test
dec
shll
divl
dec
push
jg
out
into
lea
xchg
fcomps
and
out
out
subb
jecxz
lcall
das
cmpsl
popa
mov
fwait
nop
fdivl
mov
xchg
jno
shrl
mov
push
mov
mov
pop
mov
pop
test
or
lods
pop
mov
mov
xchg
add
mov
test
jnp
add
sub
inc
push
cmp
inc
sbb
mov
movsl
ds
push
sub
sub
mov
adc
stos
cltd
mov
das
fildl
insb
lcall
insb
xchg
adc
adc
jno
push
push
cmp
test
aas
fcoms
mov
fisubrl
jg
mov
pushf
dec
mov
or
cltd
add
clc
dec
in
fcomip
rcl
call
and
and
xchg
xor
loope
xor
cld
add
mov
mov
inc
lds
push
dec
jle
pushf
push
ret
or
cmpsl
pop
movsl
scas
or
or
pusha
pop
out
fs
sub
jecxz
mov
xor
aas
adcl
mov
push
sub
cli
pop
imul
mov
mov
ret
mov
dec
dec
sbb
push
je
sbb
xlat
add
fwait
icebp
daa
or
std
and
mov
xchg
jne
fnstsw
scas
mov
icebp
sbb
mov
ret
cs
jbe
inc
popf
or
leave
fwait
je
pop
mov
outsb
out
shl
jb
enter
push
pop
push
addb
inc
push
leavew
dec
jp
dec
aad
addr16
in
fisttps
dec
pop
add
clc
decl
jbe
cmp
push
mov
mov
dec
fwait
dec
lret
imul
jge
add
push
imul
push
add
jbe
test
sbb
or
dec
loopne
dec
imul
xchg
cs
or
push
jbe
ficompl
stc
push
jg
repnz
das
cld
cmpsb
leave
adc
rclb
and
push
inc
out
add
lret
pop
xchg
rol
sbb
jge
add
cmc
jne
mov
repz
ds
mov
dec
and
adc
mov
push
fstpt
test
xor
fucomi
ds
bound
xchg
mov
pop
ficoml
pop
push
pop
inc
lock
pop
mov
mov
icebp
xor
lret
fwait
inc
bound
test
and
pop
adc
push
cmpl
dec
stos
pusha
push
out
rorb
lea
call
jb
adc
outsb
xor
xchg
movsb
in
das
fcoml
xchg
dec
cmc
int3
pop
ficoms
pop
cwtl
sbb
mov
mov
aaa
je
ret
adcb
add
ds
out
scas
adc
inc
out
loop
test
sbb
dec
movsl
ljmp
dec
jg
aaa
xchg
fnstenv
sbbb
cs
arpl
mov
pushf
sbb
lock
adcb
pop
sub
hlt
mov
mov
in
sti
sub
fnstsw
cltd
cmpsb
insb
sbb
shrb
int3
cmp
popf
mov
mov
adc
in
sahf
mov
call
or
sbb
sub
ja
mov
mov
pop
mov
inc
xchg
int
sub
and
pushf
imul
cmp
fstpt
stc
into
addr16
pop
ror
xrelease
sbb
fs
mov
push
mov
cmp
fsts
insb
mov
repz
mov
and
cli
adc
push
and
xchg
mov
in
mov
out
and
nop
mov
stc
adc
mov
sub
xchg
in
dec
scas
stc
rolb
mov
rolb
test
test
adc
arpl
scas
notb
cmpl
mov
and
mov
inc
not
sbb
setno
scas
mov
pop
daa
out
inc
je
mov
dec
rorl
aaa
mov
or
pushf
std
adc
xorl
xchg
aaa
push
sub
xchg
xchg
scas
call
shlb
test
xchg
mov
jb
loope
mov
shlb
add
pushf
push
xor
into
rcll
aas
leave
loope
movsl
pop
leave
fstpt
mov
mov
xchg
pop
or
shrb
scas
add
or
aaa
fcmovb
xchg
sub
jnp
sub
subl
movsl
fiaddl
ss
push
dec
adc
push
or
or
sub
ret
les
jp
adc
lret
mov
xor
add
xor
gs
jge
mov
int3
icebp
mov
cs
sub
inc
das
pop
out
into
je
stos
jae
inc
add
addr16
push
sahf
aas
lret
dec
lds
test
pop
pop
xor
and
add
je
and
clc
lret
rcrb
out
adc
dec
stos
sarb
xorl
mov
cmpsl
dec
sub
mov
inc
cmp
adc
rclb
or
imul
cmp
les
push
pushf
popf
dec
sub
cmp
cltd
sub
pop
in
pop
movsb
shrl
jae
loop
rorl
mov
in
push
and
dec
cmpsb
mov
fmull
cmp
xor
pop
mov
push
jmp
inc
popa
mov
cmc
lret
rorb
mov
mov
lds
pusha
lods
loop
jl
xor
sti
pop
xchg
inc
push
loopne
jecxz
mov
hlt
dec
div
stos
idiv
dec
loop
sti
aam
mov
dec
dec
or
push
xor
popa
pop
sar
ret
fdivrl
cmp
mov
xchg
test
and
repnz
adc
test
cs
dec
lds
xor
insl
lds
mov
push
scas
push
mov
nop
pop
inc
dec
dec
call
js
push
jmp
add
jecxz
aas
loope
cli
lods
lret
mov
pop
push
sub
xor
in
int3
mov
pushf
or
repz
imul
leave
xor
test
ss
inc
into
out
adc
push
hlt
ljmp
mov
xchg
sarl
add
hlt
sub
decl
mov
jp
lahf
cld
lea
xor
dec
and
pop
sub
daa
gs
lods
jle
cmp
or
aad
pop
pop
sub
jmp
sbb
dec
xchg
pop
cmp
je
je
inc
cmpb
std
outsb
mov
divb
fistps
inc
ret
aaa
xor
pop
jb
popa
or
lcall
ret
push
or
std
xchg
pushf
sub
sub
lods
stc
mov
inc
pushf
xor
sti
imul
cmp
in
int3
inc
das
out
push
loopne
std
ljmp
push
testb
and
or
shll
in
lahf
icebp
dec
rclb
vshufps
lret
or
xchg
push
mov
mov
adc
xchg
add
jle
xlat
and
dec
ja
inc
mov
cli
xor
xor
adc
ljmp
std
test
cmp
movsl
inc
call
pop
dec
shll
mov
xchg
in
xchg
sti
imul
imull
sub
inc
inc
sbb
sbb
xor
push
mov
push
sub
push
aas
sbbb
imul
fsubl
inc
mov
jle,pn
cmp
mov
loop
push
push
dec
xor
and
dec
jae
sbb
in
jne
das
orb
add
ret
pusha
mov
insb
mov
out
rcrl
iretw
sub
mov
pusha
fsts
mov
dec
inc
out
int3
mov
inc
inc
jle
stc
push
mov
into
mov
sar
imul
mov
or
mov
test
xlat
test
adc
sub
subl
dec
imul
shl
scas
sbb
xchg
mov
mov
cmp
rcrl
sti
aaa
mov
cmc
inc
xlat
leave
sahf
je
rcl
loop
out
mov
dec
dec
scas
adc
sbb
test
cmpsl
pop
jmp
pop
push
int3
aam
les
andl
push
loop
sub
ficoms
lods
jge
mov
xchg
xchg
xchg
push
out
out
jg
add
inc
jl
lea
daa
sub
popa
stos
cmpsb
in
les
mov
push
dec
sarb
fldl
jbe
inc
jle
or
xchg
das
adc
jp
pop
add
cli
add
dec
pop
push
mov
inc
pop
es
das
xor
lods
call
addr16
push
cltd
mov
ret
sub
xchg
hlt
shll
outsb
sub
fistpl
cmp
and
mov
in
mov
jmp
cmp
nop
lea
cmp
cmc
push
or
daa
adc
add
cmp
out
jnp
pop
addb
lahf
lret
into
jo
push
jbe
inc
inc
outsl
xchg
repnz
push
stc
sub
test
hlt
push
jmp
nop
push
lods
adc
mov
inc
add
sbb
xor
mov
pop
dec
add
les
out
sub
jne
shll
fstpt
fucomip
cmc
mov
das
jmp
movsl
mov
jmp
jmp
dec
inc
insl
jo
mov
or
ret
cli
xorb
push
inc
cmc
repnz
or
mov
fcoml
ret
test
jp
cwtl
push
inc
or
jmp
fs
jne
jmp
shll
xor
daa
dec
es
sti
out
dec
jbe
sub
decl
pop
jae
add
in
arpl
in
mov
adc
inc
shlb
cmp
pop
iret
loope
out
std
stc
mov
push
gs
callw
stos
into
cmp
cltd
inc
or
rorb
sub
and
or
arpl
cmovae
pop
dec
sbb
int3
in
dec
aad
sahf
call
imul
sbbb
xchg
adc
les
push
inc
movsb
mov
sub
cmpsb
ljmp
nop
rclb
pusha
lcall
push
test
push
mov
ja
mov
and
cmpsl
pusha
movd
mov
aas
pop
mov
mull
push
jl
outsb
frstor
cmp
in
fiaddl
adc
imulb
xchg
mov
or
notb
ds
sub
fildll
adc
or
push
jne
dec
adc
gs
xchg
jne
scas
cmpsl
mov
jl
lcall
lret
push
and
add
clc
popl
mov
pop
dec
out
sub
xchg
sbb
sbb
icebp
xchg
bound
mov
sbb
les
sbb
stos
int3
aam
fldl
mov
adc
mov
call
sbb
mov
lret
sbb
je
outsb
mov
or
fnstenv
in
mov
rclb
xchg
ljmp
jmp
mov
rcll
dec
call
and
out
jae
ret
andb
push
out
imul
mov
jno
or
aad
mov
in
jg
or
sbb
pop
test
je
pushf
aam
gs
mov
in
push
jbe
fiadds
pop
shll
pop
cmp
jle
test
inc
push
push
imul
cli
pop
inc
add
clc
dec
cld
jl
and
dec
cmp
jae
hlt
leave
sbb
cmp
and
cmp
ror
push
and
mov
outsl
jbe
and
jl
aam
sub
xor
xor
in
push
xlat
push
in
jns
pushf
or
cmp
das
sub
sub
mov
xchg
pop
mov
mov
out
lods
mov
popl
int
adc
mov
hlt
lcall
add
push
ret
fcompl
cmp
jne
xchg
mov
imul
xor
cmp
outsb
mov
xor
or
int3
push
stos
cld
in
mov
mov
jo
lahf
cmp
in
xor
lret
sbb
in
mull
jns
ljmp
rcrb
pop
lea
lods
pop
mov
in
xor
add
aam
lock
xor
sbb
stos
push
and
sub
pop
iret
inc
mov
arpl
or
addr16
aad
jp
sbb
mov
push
dec
sti
mov
scas
xor
push
pop
sahf
jae
flds
pop
idivb
lahf
inc
mov
pop
mov
dec
pop
lcall
mov
enter
lds
rorb
shrl
aam
dec
sti
adc
inc
sub
pop
and
es
pop
stc
inc
outsl
xorb
sbb
fdivrl
sbb
ds
pop
xlat
bound
adc
ss
xchg
aaa
xor
in
sbb
mov
sub
mov
int
fnop
jge
fiaddl
sub
hlt
test
leave
mov
test
dec
aas
inc
cwtl
in
fmull
mov
mov
cmp
xchg
outsb
mov
shll
adc
push
sahf
in
in
pushf
push
cmp
xor
mov
sbb
les
in
jbe
mov
mov
push
add
dec
mov
fistps
jo
insl
push
inc
push
fisubrs
dec
sti
hlt
mov
mov
ret
jmp
shlb
jb
jmp
fstl
cmp
mov
cmp
mov
push
dec
inc
in
push
test
push
xchg
mov
pop
outsb
jo
or
aam
leave
jp
dec
xor
jbe
movsb
cmp
jb
sbb
scas
movsb
bound
je
ret
sbb
mov
mov
cmp
xor
sub
pop
dec
pop
xchg
xorl
or
xchg
fmull
movsl
lods
adc
xor
fs
scas
push
xchg
iret
inc
mov
pop
sub
mov
sub
test
add
notl
cli
xor
idivb
enter
mov
jnp
cltd
mov
jmp
out
xor
mov
jno
and
add
ljmp
inc
cmp
dec
xor
inc
outsb
push
jecxz
sub
push
shr
dec
inc
jns
mov
mov
and
in
xchg
dec
push
aam
shlb
out
lret
xorl
lds
dec
fists
in
and
and
rcl
xchg
daa
or
xor
mov
jo
mov
jo
sbb
inc
push
xchg
aam
pop
push
push
xchg
pop
sti
cltd
stos
jne
or
cmc
inc
dec
mov
pop
mov
sub
scas
push
or
lods
idivl
pop
std
sub
pushf
xchg
mov
xchg
lods
js
cmp
inc
mov
sub
in
cli
aas
test
jb
inc
mov
dec
mov
repnz
mov
mov
mov
outsl
mov
mov
sbb
jno
fidivrl
outsl
sbb
mov
and
push
cmp
lds
jge
and
leave
int
xchg
lret
mov
push
addr16
loopne
ja
xor
xchg
in
add
xchg
add
ret
out
push
testl
cmc
xlat
mov
mov
sub
ret
das
lock
inc
std
jae
notb
and
push
pusha
scas
jg
sarb
xlat
jl
movsl
in
sbb
xchg
lea
push
jnp
pop
aaa
adc
jbe
aam
lcall
push
mov
leave
sbb
imul
jl
cmpsl
sahf
mov
jl
cmpsl
dec
repnz
leave
jp
sahf
test
xchg
xchg
popf
mov
xlat
push
arpl
or
mov
sbb
sub
add
fisubrs
sbbb
mov
xor
scas
int
xor
cwtl
lahf
xchg
push
ljmp
js
xchg
lahf
dec
jae
call
bound
pop
xchg
aam
mov
sbb
sbb
sbb
and
scas
stos
adc
push
fcomps
mov
lcall
pop
loopne
fs
inc
fwait
lock
sbb
sub
dec
cltd
adc
repz
imul
jge
sub
push
push
fisttpl
cmp
lcall
sbb
in
movsl
pop
inc
divb
std
scas
mov
cmp
cmpsb
loop
sub
sbb
aas
mov
mov
fs
xor
adc
cmpl
repnz
fwait
dec
ss
mov
scas
mov
lods
fdivrs
mov
fisttpl
cli
outsl
cld
mov
outsl
insl
cmp
mov
cwtl
push
cmp
jno
sbb
pop
scas
dec
test
roll
xchg
inc
mov
pop
sbb
cmp
jl
out
pop
xchg
sarb
mov
lret
call
add
pop
pop
mov
int
fbld
inc
dec
push
lret
jns
sbb
ljmp
fucomp
inc
add
inc
sbb
lea
push
les
add
adcb
jo
enter
adc
shrb
jp
push
out
jle
or
inc
and
xor
gs
aas
mov
xchg
fimuls
test
or
xchg
mov
xor
xor
xor
xchg
xchg
pop
ds
aas
insb
cmp
arpl
divb
dec
dec
dec
xlat
aas
outsl
jo
ret
sbb
push
push
or
gs
sbb
and
data16
jno
imul
and
add
aaa
in
cld
ja
dec
lock
adc
test
push
rorb
jmp
or
mov
stos
mov
cmp
dec
in
adc
pop
out
scas
pop
jne
rclb
je
mov
sbb
lcall
pusha
dec
mov
ffreep
sbb
cmc
mov
or
icebp
sti
out
jecxz
nop
bound
lea
insb
icebp
push
push
push
mov
push
lahf
out
and
incl
rcl
dec
icebp
or
int
ret
sbb
cltd
pop
mov
mov
cltd
cmpsb
sbb
pop
cwtl
push
fnstenv
sarl
push
loopne
xchg
xchg
jecxz,pn
in
add
push
push
arpl
xorb
mov
js
cmpsl
mov
xor
xor
std
xchg
cs
add
inc
fldl
inc
stc
bound
mov
lcall
stos
loope
xchg
fsub
jb
xchg
sub
sub
leave
jbe
push
cmp
les
sbb
and
cmp
sub
sub
stos
fadds
sub
inc
xchg
mov
mov
pusha
pop
push
xchg
xor
insb
xchg
sub
outsb
push
insl
xor
stos
mov
jg
xchg
inc
je
mov
sbbb
insl
xor
outsb
es
cmpb
lahf
popa
and
mov
das
dec
lret
les
jns
jns
hlt
clc
jecxz
cltd
pop
mov
idivb
fimuls
push
stos
lahf
sti
bound
push
loope
sbb
popa
mov
jae
in
ficoml
ds
add
cli
sub
xchg
les
clc
sub
addb
adc
mov
or
sub
shll
push
ja
jp
mov
push
notl
mov
mov
jle
pop
arpl
jp
std
cmp
and
shll
mov
jle
ja
mov
or
mov
inc
dec
sbb
jg
scas
iret
pop
cld
insl
cld
movsb
inc
movsl
jge
mov
jl
sbb
mov
lcall
fmuls
jge
ljmp
pop
cmp
mov
or
fldlg2
fnstenv
sub
xor
mov
mov
nop
cmpsl
or
push
push
pop
inc
mov
in
xor
lahf
mov
jp
mov
jo
loopne
jne
cmpsb
inc
pusha
add
push
xchg
mov
push
imul
cmpsb
add
bound
aam
or
jmp
loopne
jo
cltd
xor
mov
outsb
xchg
mov
sub
and
mov
jmp
fbld
aad
mov
ret
notl
data16
mov
dec
aas
scas
cmp
andl
fs
pop
mov
scas
xor
xchg
into
popa
loopne
mov
xchg
adc
add
test
adc
imul
lock
and
scas
pop
adc
cmpsl
call
pop
cwtl
jp
stos
popa
xor
sub
mov
pop
pop
jg
mov
pop
andb
ret
repnz
mov
mov
fadd
mov
aad
xchg
lock
sub
jnp
pop
and
inc
and
xchg
mull
inc
jp
lret
mov
aaa
jae
jle
loope
std
orl
icebp
call
ror
repnz
jne
sti
shl
mov
pop
std
sbb
mov
jns
xor
push
pusha
cmp
sub
pop
push
loope
out
mov
fiadds
fsubrp
das
jne
sahf
orb
test
mov
lahf
adc
xchg
stc
and
bnd
repnz
stos
mov
ja
cs
xchg
lods
mov
test
xor
adc
or
das
repz
and
jo,pt
sub
jle
fwait
cmp
jp
fdivl
adc
sti
push
leave
mov
inc
cmp
adc
lock
or
iret
ret
int
rclb
insl
insl
rcll
mov
mov
imulb
addr16
aaa
cmpb
lcall
inc
cmp
and
out
xlat
lods
add
adc
mov
push
mov
xchg
sub
ljmp
lea
mov
shrb
and
iret
lcall
sbb
fcomp
dec
or
ljmp
fcmovb
xlat
cmc
cmpsb
mov
pop
cmp
push
repnz
pop
fs
jl
xchg
adc
push
mov
fildl
mov
mov
jmp
inc
mov
stos
add
mov
push
mov
sti
ds
pop
hlt
pusha
push
mov
jo
push
into
pop
outsb
in
enter
popf
icebp
mov
enter
stc
sub
into
mov
pop
dec
xchg
js
std
loop
pop
dec
ds
sbb
push
lods
aaa
or
push
sar
inc
ljmp
movb
mov
ret
repz
xlat
scas
rolb
or
add
or
sub
jo
out
lcall
jns
dec
fstl
xor
sti
sub
sub
call
pop
test
cmp
add
lahf
and
mov
push
fbld
lahf
imul
push
mov
cmp
inc
popa
hlt
push
fsubrs
adc
adc
lea
sbb
jmp
cwtl
sbb
popa
mov
cmp
lahf
shr
lods
popa
lcall
fwait
add
add
and
push
ljmp
mov
les
jae
lret
dec
popf
and
jp
lods
lret
in
sbb
lea
jge
pop
or
out
cmp
mov
in
sbb
mov
mov
pop
push
out
shlb
jae
cmp
idivl
divb
cwtl
mov
movsl
sti
pop
enter
mov
jne
rcll
outsb
in
adc
imul
cmp
popf
sub
dec
loopne
pop
out
add
decl
cmp
sub
test
bound
pop
jbe
xlat
xlat
jecxz
jmp
add
and
mov
cmp
mov
test
scas
mov
add
add
pusha
lock
xchg
jmp
arpl
call
xchg
mov
xchg
sub
das
mov
mov
push
jne
sti
aaa
push
divb
and
jns
jl
mov
jg
xchg
cmp
ss
test
mov
clc
enter
test
sub
mov
push
add
in
int
sahf
int3
push
add
or
cmp
push
insb
movsl
stc
mov
xor
fadds
out
in
cld
adc
jge
cmp
push
jg
pop
cld
adc
mov
in
inc
bound
sbb
fisubl
cmpsb
cmp
in
in
mov
adc
movsl
idivl
push
ret
adc
add
inc
inc
or
shlb
mov
and
pop
cmp
lock
cmpb
adc
adc
pop
push
orl
push
mov
cmp
cmp
add
loopne
and
and
fcompl
roll
fwait
jo
push
nop
gs
cmp
jnp
add
mov
add
xor
push
adc
xor
push
es
add
xlat
divb
sbb
push
mov
int
xor
adc
sub
lock
adc
lret
xchg
mov
outsb
add
xchg
xchg
jle
lahf
scas
fs
mov
pop
lcall
es
xchg
fcoml
loop
incl
sahf
fnstcw
loop
mov
repnz
out
push
jne
cwtl
ljmp
cmpsb
sarb
popa
sub
cs
mov
cmpsl
dec
loopne
fadd
mov
cmc
je
adc
cs
mov
scas
ret
jns
andl
jmp
mov
jmp
lcall
cmp
nop
out
inc
ret
jge
sti
cmpsb
dec
sub
test
dec
shr
push
sbb
xor
mov
xchg
adc
fwait
or
inc
push
push
outsl
ja
das
jp
push
orb
in
stc
ds
lcall
aad
or
lret
push
dec
popa
or
adc
pushf
iret
jne
jp
sub
jmp
push
jmp
mov
pop
testl
or
cmp
jae
mov
mov
pusha
or
xchg
jmp
sub
in
movsb
and
lret
mov
dec
jmp
subl
out
inc
cmp
mov
cmp
jle
outsl
xor
dec
popa
sbb
dec
mov
xchg
insb
les
test
dec
pop
test
push
xor
jae
int
or
sub
push
or
cmp
ror
jg
and
pop
xchg
and
push
aam
nop
jbe
scas
fwait
or
enter
mov
lods
mov
loopne
aad
sub
dec
orb
out
in
mov
jmp
sub
fwait
bound
mov
pop
popa
xchg
fbstp
cmp
cmpsl
test
dec
lods
xorl
lcall
sub
out
push
lret
paddd
push
mov
sti
ds
xlat
jo
dec
or
sub
imul
xor
iret
and
gs
sub
jecxz
sub
xor
fmul
dec
xchg
mov
mov
rcr
xor
pushf
out
mov
enter
and
nop
and
repnz
xchg
cmp
adc
mov
outsb
jns
mov
xchg
sbb
pop
jmp
add
in
vandnps
xchg
or
loop
fbstp
lock
lods
adc
loop
jno
jp
rcrb
sti
repnz
jmp
xor
jne
mov
lahf
mov
lcall
dec
push
arpl
flds
rcrl
push
fists
ljmp
add
in
xchg
aad
pop
notb
das
inc
and
shl
sub
loopne
jbe
les
mov
roll
dec
lods
xchg
fsts
pop
push
js
fucomp
test
dec
inc
dec
icebp
push
pop
fisttpl
test
adc
sub
xchg
cmp
mov
mov
ret
lods
test
outsb
dec
popf
pop
jnp
scas
sub
and
push
cmc
int3
jp
mov
scas
ds
add
push
fistpl
cmp
and
and
adc
test
pop
pop
test
push
push
xor
sub
fwait
pop
cmc
mov
or
daa
pop
jmp
stc
repnz
push
mov
xor
and
push
rclb
aaa
cmpsb
sbb
mov
aas
inc
jg
popf
repz
inc
inc
sarl
xchg
pop
addl
std
push
sbb
sbb
mov
pop
shl
pushf
dec
dec
out
loope
jge
add
adc
mov
push
test
rclb
mov
cmp
sbb
push
mov
push
popa
push
out
in
pop
repnz
xor
in
lret
push
add
inc
out
push
push
rolb
adc
imul
sbb
mov
iret
jns
loopne
or
js
test
pop
ret
aaa
in
out
inc
dec
insl
mov
inc
cmp
or
xchg
lret
push
out
pusha
dec
out
add
xor
or
dec
sub
cwtl
imul
xor
add
popf
data16
sub
das
sahf
adc
push
dec
fsincos
cmc
push
mov
stos
mov
insb
jmp
fists
mov
dec
pop
xchg
loopne
inc
cmp
popa
pop
xor
xor
sbb
int3
add
incl
sbb
les
push
fadds
jb
xchg
jle
add
dec
and
pusha
xor
push
jne
add
and
out
test
lret
xor
mov
and
fildl
dec
test
and
inc
aas
rcrb
outsb
les
jo
push
mov
mov
jo
jmp
sub
adc
popf
iret
add
testb
add
xor
and
pusha
sbb
dec
scas
loopne
pop
jg
pop
fndisi(8087
mov
adc
out
xchg
mov
mov
out
fwait
movzwl
push
out
pop
inc
xchg
cmc
jae
scas
inc
insl
out
pop
cmpsl
shrb
jl
test
cli
call
or
aas
or
scas
popa
cmpsl
mov
push
call
cli
adc
lcall
cltd
ss
out
repz
sbb
mov
aaa
cld
and
les
jno
add
push
ja
mov
or
inc
mov
fstps
lret
dec
or
out
sbb
orb
in
inc
jp
outsl
sahf
aaa
ret
mov
mov
sub
divb
or
cs
nop
xor
xlat
hlt
out
aad
adc
and
pop
sbb
insl
imul
pop
mov
repz
frstor
push
std
faddl
lods
frstor
dec
cmpsl
adc
pop
ficomps
dec
mov
fldenv
push
pop
xor
stc
mov
inc
mov
sub
jb
xchg
push
cwtl
jmp
fnstcw
mov
cmp
adc
sbb
mov
mov
xchg
xchg
test
fdivl
js
cmpsb
lea
sub
lea
les
dec
dec
mov
dec
jecxz
xor
ret
aad
shlb
pop
out
mov
repz
shl
mov
icebp
mov
daa
xor
sub
adc
push
test
jmp
pop
pop
sbb
xlat
leave
add
scas
arpl
mov
dec
jne
or
jg
inc
xor
test
iret
jb
jb
xchg
addr16
dec
outsb
push
xchg
pop
outsl
in
cmpsl
movsl
lock
movl
mov
xchg
xchg
stos
es
nop
int3
mov
mov
ja
jp
outsl
into
mov
mov
fildll
daa
mov
dec
sahf
mov
fdivs
ret
fldenv
push
adcb
aad
cli
xlat
jb
jne,pn
aaa
leave
leave
mov
adc
push
hlt
sub
mov
test
ficoml
aad
int3
popa
popf
into
and
shl
dec
pop
pop
jmp
in
addb
in
sub
fmuls
js
sub
dec
or
pusha
adc
dec
mov
aad
lea
scas
inc
inc
scas
xchg
insl
ja
add
cmpsb
mov
sbb
jecxz
push
jl
out
aad
outsl
das
cmc
dec
jbe
out
xchg
cmp
cmp
mov
jp
das
outsb
out
rcrl
sub
mov
xchg
cmc
xchg
stos
and
ds
mov
insl
and
nop
jl
int3
sub
jg
xor
arpl
or
mov
ja
loope
orb
fistpl
lds
out
out
out
xor
add
lcall
lea
out
or
fnstsw
cwtl
clc
aas
ja
or
fdivrl
push
jmp
fisubs
daa
int3
dec
fcoms
mov
mov
inc
jmp
lods
movsb
insb
in
lock
stos
ja
mov
fs
cmpsl
cmpsl
push
fwait
scas
add
sub
mov
and
and
push
add
mov
out
xor
mov
std
mov
gs
add
fisubrs
add
inc
rol
jbe
vcvtss2si
popa
xor
dec
xor
aaa
pop
push
push
jno
pushf
movl
sarl
mov
xchg
sub
orl
xchg
rclb
out
cmpsb
push
outsb
xor
jl
int
clc
filds
test
cs
add
cmp
push
int3
sbb
jmp
popa
sub
dec
jbe
sahf
dec
pop
ret
incb
mov
iret
mov
ljmp
adcl
xchg
mov
popf
ret
loopne
push
jmp
sub
cmp
and
cmp
add
push
xchg
pop
pusha
sub
push
cmp
push
andl
aad
sub
fisubrs
xchg
fsubrs
insl
inc
scas
movsl
out
push
dec
and
pop
xchg
mov
stos
aas
lret
cli
xor
jnp
cmp
clc
out
push
pop
test
lods
stos
xor
leave
cmp
int
popa
lock
adc
out
push
fstps
out
inc
scas
dec
int3
pop
adc
rcrl
sti
xchg
idivb
cli
dec
cwtl
mov
int
leave
insl
and
add
sub
in
mov
adc
xor
sub
adc
push
mov
push
hlt
push
sbb
dec
cmp
push
jg
push
out
push
cmp
adc
sub
cmpsl
sub
loope
xchg
in
pop
sub
xchg
push
sub
jns
or
inc
sub
nop
mov
push
jno
lret
and
dec
push
cmp
aas
adc
stos
mov
sub
mov
std
sub
push
aad
add
outsb
js
lcall
ss
jns
and
lea
mov
incb
sub
xchg
loope
popf
jb
mov
out
mov
dec
xor
cli
imul
sub
dec
or
jo
test
mov
jmp
and
mov
iret
fistl
xchg
shll
pusha
fdivp
pop
sbb
rorb
pop
mov
mov
out
jbe
lds
push
push
xor
mov
popa
sbb
xchg
push
xchg
xor
fistpll
movsl
emms
and
lock
stos
mov
dec
jb
sub
push
scas
outsl
dec
push
aam
sbb
arpl
aam
xor
sbb
sbb
fdivrs
in
es
repnz
jg
pop
jmp
aas
xchg
push
in
jmp
jl
xor
adc
dec
sbb
and
mov
insb
mov
imul
mov
cmc
lret
inc
xchg
and
arpl
pop
mov
insb
mov
pop
pop
or
repnz
add
repnz
jp
int
pusha
clc
out
jecxz
jo
add
pop
xchg
scas
lods
push
enter
movsl
jecxz
dec
xor
gs
insb
ja
xorl
movsl
cltd
aaa
mov
add
jo
aaa
icebp
les
icebp
mov
push
insl
loope
cmp
lcall
je
mov
andb
das
cmp
mov
insl
jb
loope
sbb
out
mov
mov
xchg
xor
shl
adc
mov
mov
mov
aaa
addr16
scas
pop
icebp
push
repnz
lahf
xor
out
loopne
out
pop
and
push
decb
je
mov
aas
rorl
push
lcall
scas
pop
push
xchg
out
sahf
pop
rcl
sahf
fiaddl
push
movsl
xorl
adc
jno
ja
pushf
adc
sbb
sbb
outsb
les
sarl
lods
sbb
xchg
pop
iret
aaa
stos
mov
idivb
mov
fwait
das
shrb
out
fs
out
sbb
ljmp
push
add
pop
nop
xchg
imulb
xchg
xchg
jge
jbe
sub
out
cli
dec
mull
test
adc
mov
ret
jg
sub
ror
push
mov
negl
lret
or
inc
hlt
sbb
xor
mov
loope
in
les
dec
scas
mov
lret
mov
jle
js
int3
idivl
push
cmpsb
pop
jno
mov
repnz
lds
push
sti
xchg
dec
adc
stos
sub
cli
sub
leave
icebp
xor
cli
imul
loopne
outsb
les
cs
lret
adc
test
pop
adc
out
fs
shlb
jns
mov
jmp
jo
xor
aas
xor
mov
loope
leave
outsb
mov
dec
lods
loope
xchg
inc
mov
or
arpl
or
lcall
mov
ss
sbb
or
outsl
inc
dec
mov
mov
xchg
daa
les
cmp
sbb
mov
incb
xchg
adcb
pushf
or
pop
and
std
xchg
nop
jnp
movsb
cmp
into
or
mov
push
xchg
xor
push
xchg
nop
fwait
sbb
outsb
cmp
imul
or
add
insb
mov
loop
push
into
xlat
add
lea
mov
dec
inc
arpl
in
scas
iret
pusha
arpl
stos
pop
fwait
pop
and
dec
cs
jno
jmp
mov
js
testb
clc
fstl
cmc
ja
push
les
and
sbb
pop
sbbb
out
mov
pop
cmp
inc
sarb
dec
adc
mov
xchg
test
push
mov
sti
es
fistps
fsubrs
xchg
adc
and
cmp
sbb
ja
outsl
andb
inc
push
insl
pop
mov
fs
lret
pop
add
push
movsl
imul
stc
dec
cmc
aam
inc
push
cwtl
lock
inc
jecxz
aam
and
or
pop
or
insl
inc
push
fisttps
pop
testb
cmova
iret
leave
lret
pushf
rcll
xchg
mov
aam
pop
xor
push
je
stos
lock
adc
arpl
arpl
ss
and
loope
addr16
pop
dec
fiaddl
fstl
movsl
adc
sbb
iret
lahf
int
and
testl
xchg
add
sbb
aas
adc
cltd
xor
xor
imul
sbb
mov
repz
nop
repnz
adc
lds
js
cltd
jmp
push
lods
dec
pop
test
add
fsub
and
dec
mov
cmp
fnstcw
push
sub
data16
mov
es
and
inc
mov
add
sbb
xor
outsl
adc
aad
cs
cmpsl
or
enter
xchg
xor
out
scas
fistpl
lock
dec
out
in
iret
jns
jmp
pusha
popf
inc
cwtl
out
push
mov
add
and
mov
mov
cmc
in
test
adcb
shrb
sub
xor
sarl
push
inc
jne
fadd
lret
adc
in
jne
xor
outsl
push
je
sub
int3
cmp
outsb
jp
in
dec
ret
sub
sub
pop
fwait
mov
inc
xchg
fucomip
ljmp
dec
adc
fs
dec
cli
fs
out
imul
pop
in
or
popf
subl
orb
inc
lods
inc
shl
dec
push
stos
adc
pop
or
mov
scas
mov
lret
outsb
ja
cs
push
inc
les
or
lods
jle
loop,pn
les
mov
stos
push
mov
fmul
cmp
movsb
mov
xchg
push
add
fcompl
repnz
fidivl
outsb
cmp
scas
add
idivl
icebp
add
dec
ret
push
sub
inc
outsl
cmpsl
adcb
jno
sub
pop
inc
inc
jo
jl
xor
loope
jns
mov
es
rorl
xor
push
sti
ficomps
outsl
imul
and
inc
inc
adc
and
popf
sbb
hlt
mov
lcall
inc
xor
sbb
mov
fmull
sub
mov
mov
xor
mov
jnp
push
adcl
cmp
jle
add
xchg
xchg
mov
test
xor
add
std
rcl
xor
icebp
stos
adc
test
mov
mov
sub
cmp
aam
stos
cwtl
mov
fwait
jge
or
or
lea
xchg
stc
sub
dec
fstl
xchg
mov
outsl
aam
dec
dec
dec
xchg
in
test
dec
pop
stc
jne
push
push
daa
jle
sarb
mov
dec
fs
sub
out
add
mov
ret
mov
in
or
loop
outsb
lret
imul
sub
addb
xchg
loop
popa
adc
imul
int
ds
mov
sahf
mov
mov
mov
aad
imul
or
scas
jo
js
mov
xchg
xor
sub
out
frstor
nop
push
fwait
das
adc
fisttps
jno
push
mov
add
cld
jnp
xchg
jnp
inc
popa
in
call
pop
mov
push
out
nop
ret
adc
push
pop
adc
mov
jb
push
cmp
adc
out
popa
inc
xor
xor
div
inc
xor
ja
scas
xor
mov
andl
cmp
push
push
aam
cmpsb
inc
and
xor
or
jae
mov
cmpsl
mov
adc
mov
sub
add
dec
xor
adc
fiaddl
cmpsl
leave
sub
jne
mov
mov
add
xchg
mov
xlat
jg
push
jge
out
cmpsb
clc
negl
insl
fs
or
cmp
imul
lods
addr16
add
push
rorb
sarb
add
popa
cwtl
scas
sbb
mov
dec
rcl
aam
enter
movsl
fisubl
in
rcrb
ds
es
int3
jp
adc
cmc
idivb
inc
jno
jb
sub
xchg
xchg
xor
and
xor
test
xchg
add
imulb
cmp
mov
aaa
js
xchg
out
sub
andl
xchg
pop
fnstenv
lcall
cs
adc
push
push
sbb
mov
rcr
cmpsl
icebp
scas
popf
nop
mull
ficoms
in
pop
sbb
mov
movl
mov
lahf
xor
xor
sub
or
push
stos
es
push
inc
sub
add
imul
fdivrl
xor
outsb
push
int
data16
popa
fiadds
adc
jp
adc
fldt
out
ret
data16
rcl
pop
in
push
sub
mov
or
out
mov
shlb
jae
into
aad
push
test
stos
dec
out
in
adc
mov
cmp
jl
dec
mov
dec
lods
rclb
pop
sub
aaa
movsb
aaa
xor
ret
ds
out
out
inc
stos
in
add
and
mov
push
dec
jnp
push
push
xor
ret
mov
in
pop
push
ss
shrl
out
mov
repnz
daa
add
or
sub
pop
iret
push
dec
insb
sub
mov
push
pop
push
inc
inc
or
mov
push
loopne
jae
xchg
repz
ror
daa
sub
leave
sahf
pop
or
out
adc
cltd
push
in
push
inc
jno
cmc
sub
cs
fs
inc
mov
pop
or
loopne
and
rorl
lods
icebp
ret
loop
popf
bound
xor
mov
dec
adc
fbld
rorb
pop
nop
adc
xchg
cld
cmp
lret
pop
lods
jg
cmp
mov
into
cmpsb
cmp
fldt
add
and
mov
cld
dec
inc
pusha
xor
cmpsb
and
repz
xor
repnz
jne
push
imulb
je
mov
xor
cmp
pop
mov
push
out
jnp
fcoml
mov
mov
sub
mov
xlat
out
pop
dec
mov
loopne
cmp
dec
ljmp
pop
dec
inc
iret
lods
aam
ret
and
xchg
xchg
ds
fcomp
sahf
iret
sub
xchg
clc
xor
xchg
mov
push
sbb
inc
pop
test
dec
xchg
sub
movsb
pop
cmpsl
aaa
outsb
rcll
adc
mov
pop
aam
into
ljmp
cli
sub
jle
xchg
in
cmp
pop
add
add
fmull
and
and
mov
push
mov
ret
roll
mulb
pop
insl
lahf
jnp
mov
daa
iret
cli
fiaddl
xchg
insb
pop
pop
ljmp
push
std
call
pop
dec
sahf
ficoml
subl
pushf
cmp
outsl
pusha
fwait
cvtdq2ps
outsl
aad
setb
fstpl
adc
mov
or
inc
testb
adc
loope
test
and
or
aad
lcall
or
or
inc
js
xor
sahf
enter
pop
sbb
in
stos
cmp
ds
jbe
sbb
iret
xorb
dec
dec
sahf
imul
and
out
xchg
enter
lea
bound
fcoms
sbb
lret
mov
mov
bound
out
sub
divl
imul
mov
push
xor
xor
std
test
cmp
and
mov
jbe
lods
aad
mov
test
push
xlat
or
repz
shrb
dec
lcall
jns
int3
mov
dec
sub
test
adc
movsl
xor
aad
pop
pop
outsb
xor
inc
sub
sbb
cmp
mov
push
dec
shr
in
sti
aam
fstpt
pop
dec
lret
andl
xor
repz
cmp
mov
lea
fnstcw
push
push
and
xchg
out
fdivrl
cli
call
xchg
mov
mov
jne
shl
jae
iret
push
jg
push
repnz
std
mov
fucom
js
mov
jnp
lock
sub
mov
sub
in
cltd
sbb
mov
je
out
jmp
imul
loope
stc
ss
adc
int3
cwtl
push
pop
mov
js
xchg
std
aas
jp
inc
xchg
jo
dec
iret
les
xor
cli
cli
dec
xor
pop
mov
mov
xor
or
add
add
jmp
mov
push
jge
clc
lock
fcoml
jmp
cmp
leave
adc
xchg
xchg
call
jns
imul
pop
int3
or
test
out
mov
imul
and
lret
lods
sbb
fsub
sbb
push
std
pop
cmp
jp
hlt
lods
xchg
dec
pop
add
call
and
mov
les
rcrl
mov
xchg
or
shl
pop
and
xchg
ret
insb
sub
mov
fildll
jo
sahf
leave
jg
jp
cmp
xchg
add
ret
or
mov
sbb
orb
xacquire
adc
or
adc
adc
xchg
jecxz
inc
sbb
fsubr
jbe
mov
mov
sarl
lret
sub
cmp
pop
pop
sti
leave
roll
loopne
test
call
ljmp
xchg
push
sub
jl
dec
jae
adc
adc
sub
cmpsb
jno
aaa
call
loopne
push
dec
out
push
mov
testl
mov
mov
add
stos
adc
lds
sub
or
jle
xchg
and
imul
ret
lock
jmp
bound
into
or
fmul
aaa
add
inc
pinsrw
int3
inc
negl
pop
pop
dec
jp
jle
push
xchg
notl
sub
sahf
pop
in
jbe
js
clc
orl
jo
addr16
cmc
xchg
mov
fwait
cwtl
adc
xlat
push
add
and
mov
lcall
aas
pop
sub
repnz
and
cs
jno
sub
mov
call
cmp
jno
stos
add
imul
jge
addr16
js
fwait
inc
enter
mov
arpl
sbb
stc
out
loope
adc
xor
enter
jae
jno
ss
pop
fsubl
mov
sahf
pop
cltd
pop
xchg
aam
in
jl
test
push
cmp
leave
and
mov
scas
push
mov
andl
stos
mov
scas
push
inc
lret
lods
rcrl
xor
mov
mov
mov
dec
jo
cmpsl
inc
insb
mov
cwtl
dec
xchg
jg
jp
cmp
frstor
dec
scas
or
mov
inc
jp
pop
xlat
xor
imul
sbb
imul
sbb
inc
push
sbb
add
std
test
add
arpl
je
pop
and
xchg
pop
or
mov
push
shlb
daa
mov
mov
and
loop
inc
andl
xor
jp
push
inc
pop
push
mov
in
xchg
pop
pop
adc
insl
pop
orl
mov
fistps
pop
dec
orl
pop
int
icebp
cmpsb
in
nop
push
or
std
and
stos
into
lods
mov
jo
js
sahf
popa
fs
outsl
mov
sbb
int
mov
stos
jnp
cltd
rcrl
loope
xchg
call
dec
mov
sbb
stos
jecxz
adc
inc
stos
out
daa
or
mov
insb
insl
fmull
push
lock
mov
dec
test
pop
and
out
jne
mov
hlt
shlb
add
dec
add
add
sbb
jecxz
xchg
jg
movsb
jmp
dec
mov
or
xchg
div
dec
data16
or
lds
insl
inc
sub
add
dec
ret
sub
xchg
push
push
std
jg
jmp
lods
add
xchg
ja
xchg
daa
jmp
loopne
cmc
mov
xchg
xchg
adc
shrb
shl
fstpl
sub
divl
rep
pop
scas
dec
jae
inc
out
inc
sub
dec
js
adc
es
addr16
xchg
fiadds
jne
cli
xchg
jle
call
cld
repz
pop
fistps
adc
clc
mov
ret
pop
adc
mov
jne
mov
push
push
add
dec
or
add
dec
pop
or
out
lods
cmpb
sub
mov
shrb
inc
bound
roll
xor
mov
inc
mov
fcompl
mov
dec
mov
mov
enter
jg
cld
cmp
jle
cmc
dec
cmp
imulb
mov
clc
jmp
or
test
movsb
lretw
inc
push
cmpsb
ds
ret
int3
lret
pop
mov
loop
call
in
pop
rcrb
cmp
xchg
clc
inc
pushf
outsl
repz
mov
fdivl
pop
lods
inc
test
xchg
les
pop
into
mov
sub
dec
mov
sub
in
inc
leave
inc
cmp
inc
inc
mov
inc
test
cmpsl
mov
cmp
or
enter
jo
cmpsb
push
add
cs
lds
sub
mov
in
cs
pop
sbb
jne
lret
sub
add
push
mov
xchg
or
xlat
repnz
inc
int
inc
stos
lods
nop
xor
rorb
aas
dec
xchg
scas
sbb
loope
js
dec
ret
mov
mov
daa
aam
lods
ds
adc
test
xchg
cmpl
xor
into
sahf
cmp
hlt
pop
mov
sub
mov
insb
mov
push
push
pop
enter
sbbl
aaa
xor
mov
push
xor
xor
rorl
mov
adc
lock
mov
out
mov
jae
ficoml
xor
inc
push
push
sub
inc
arpl
push
mov
dec
call
outsb
mov
fprem1
or
insb
dec
rorb
push
cld
xchg
xchg
mov
scas
cmp
push
sub
push
inc
imul
xor
int
fstl
ret
sub
dec
lods
sub
jne
frndint
sub
push
mov
xchg
mov
jmp
xor
das
adc
roll
mov
sbb
enter
adc
inc
push
and
sub
aas
pop
mov
push
add
push
lods
mov
sub
dec
pop
call
push
add
lea
scas
mov
nop
adc
scas
repz
adc
sbbb
mov
in
mov
daa
lods
mov
sub
sub
out
xor
stos
iret
cltd
ljmp
lods
scas
xlat
pop
cmp
idiv
cli
lock
fwait
lahf
lret
sarb
push
imull
mov
lcall
and
enter
dec
dec
aad
rolb
lods
pop
ss
mov
stc
mov
invd
dec
add
add
mov
add
fstl
out
scas
add
mov
mov
test
adc
lods
cmp
lock
out
imul
dec
or
cmpsl
repz
fisttpll
cld
dec
stos
push
out
sub
dec
or
add
fldenv
adc
push
pop
shll
sbb
adc
rcrb
fcomip
sub
pop
xlat
xor
jp
add
sub
ds
les
jg
jmp
imul
cmpsb
mov
mov
jo
push
cmc
dec
popa
or
fsubrl
add
shl
pop
iret
cmp
push
and
roll
jb
popa
mov
sbb
movsb
xchg
adc
dec
jnp
add
bound
pop
pusha
dec
lds
in
or
mov
cmpb
pop
inc
jg
add
push
sbb
imul
ret
jo
lods
or
push
push
cld
inc
xchg
rclb
popl
lods
pusha
cmp
mov
iret
lcall
das
mov
shl
test
push
add
sbb
cltd
nop
mov
jbe
pop
jbe
subl
aaa
mov
in
shlb
adc
push
inc
stos
popa
mov
inc
shrb
add
xlat
xchg
push
shlb
rcr
in
fldt
mov
add
jmp
jge
xor
iret
cmp
or
pusha
pop
std
pop
mov
shl
xchg
mov
sub
loopne
xor
sub
add
dec
int3
lahf
test
loopne
gs
mov
adc
xor
testb
or
roll
imul
jb
outsb
leave
add
in
adc
imul
or
mov
mov
inc
test
mov
out
test
daa
outsl
mov
pop
loope
cmp
outsl
ss
lock
and
lahf
mov
leave
test
ret
adc
xlat
mov
jg
addl
scas
roll
sbb
pop
push
std
mov
or
je
mov
in
data16
nop
mov
jb
pop
jp
adc
dec
or
jmp
cmp
lret
stos
sbb
inc
subb
xor
sub
dec
xor
stos
test
xchg
lods
jmp
and
push
frstor
or
xor
xlat
fadd
scas
cmp
sub
push
pop
clc
xorl
mov
rorl
pop
and
push
movsb
je
push
adc
push
les
sub
adc
nop
fldcw
pop
in
mov
ja
cs
mov
xchg
xchg
pusha
jmp
mov
mov
mov
popf
xchg
lods
clc
mov
imul
xor
xor
mov
xor
insb
adc
cmpsb
leave
mov
sub
jmp
add
jmp
xor
mov
mov
ljmp
daa
mov
jp
mov
add
jg
push
jae
jge
dec
mov
cmp
xchg
mov
dec
push
mov
push
dec
scas
shrb
aam
push
or
inc
movsl
cmp
dec
mov
lods
xchg
pop
dec
xlat
xchg
ja
push
pop
mov
in
ljmp
cmp
arpl
mov
lcall
cs
iret
inc
xchg
ret
dec
popf
iret
sbb
loop
jns
sbb
dec
mov
pop
mov
dec
pop
sub
and
lret
mov
cmp
jnp
fisubrs
add
add
stos
mov
pop
push
mov
test
shll
pushf
or
jg
js
out
data16
stos
mov
jg
inc
roll
out
adc
pop
jno
mov
fcoml
jns
mov
jg
aaa
or
rol
insb
int3
dec
push
adc
add
cmp
clc
test
mov
dec
addr16
ror
dec
repnz
call
xchg
lret
stc
push
push
int
daa
push
add
adc
test
inc
xchg
rcl
ljmp
das
cli
loopne
les
inc
mov
lret
lcall
add
mov
jne
xchg
sbb
and
icebp
pop
fwait
cwtl
pop
jns
and
sbb
sub
mov
mov
sbb
mov
movsl
xor
push
std
or
inc
xor
add
mov
sbb
jnp
ret
push
pop
or
mov
mov
jbe
adc
lret
and
inc
push
dec
ja
dec
push
xchg
loop
dec
jp
decl
in
fcmovu
push
xor
rol
sub
fucomip
nop
pop
xchg
push
loope
outsb
sub
xchg
pop
inc
adc
cmp
shlb
stos
ror
adc
inc
and
push
addl
sub
dec
pop
pop
and
mov
dec
cmp
add
inc
fiadds
lock
sbb
mov
in
loopne
daa
shrd
in
mov
push
fistps
mov
push
fisubrs
adc
lock
or
xor
insb
xor
adc
bound
dec
imul
add
movsl
js
dec
add
jnp
jo
xchg
push
fistps
adcl
add
mov
cld
in
fidivs
je
inc
inc
mov
xor
mov
cltd
popa
cmpsl
mov
dec
mov
jmp
ss
sbb
cmp
outsb
jge
fs
addr16
pop
adc
xchg
mov
xchg
fnstcw
pop
and
sub
aaa
sub
push
xchg
xchg
pop
jns
mov
mov
sbb
cld
push
daa
nop
xchg
mov
mov
outsb
int3
pop
or
mov
inc
dec
out
cli
mov
scas
leave
repnz
and
jne
jecxz
xor
sbb
pop
jne
inc
push
xchg
imul
push
and
mov
icebp
cmpl
dec
sub
lock
push
in
in
mov
out
lret
push
aad
or
loopne
pop
out
jnp
mov
pop
inc
adc
les
int
mov
mov
call
or
ret
dec
lahf
mov
sbb
sbb
and
out
fs
cwtl
xchg
pop
add
dec
lret
lods
cwtl
sbb
xor
loop
jns
add
sub
mov
lds
rorl
jmp
in
push
scas
ja
or
cmp
mov
imul
jl
cmpsl
cli
test
inc
sbb
jno
jecxz
inc
cmp
jmp
push
xlat
and
clc
aad
shl
roll
mov
inc
lea
int
or
push
imulb
imul
add
gs
mov
sbb
ja,pn
dec
insb
dec
xlat
xchg
out
xor
mov
bound
sbb
ret
test
rorb
les
adcb
fisubrl
mov
sbb
sub
push
dec
cltd
stos
xor
add
arpl
mov
ljmp
sbb
cmpl
mov
mov
subps
mov
popa
jp
daa
insl
or
inc
ljmp
clc
xchg
xor
mov
mov
faddl
inc
xor
call
in
xchg
jnp
adc
sbb
dec
rcr
movsl
fyl2x
in
addl
push
test
adc
jae
sti
repnz
lahf
pop
cld
xor
xor
pop
xchg
pop
mov
add
lds
inc
push
inc
hlt
cmp
inc
aaa
js
xor
mov
pop
mov
mov
fidivrs
mov
cmp
mov
sbb
and
popf
out
ss
sahf
out
sbb
jmp
adc
push
gs
push
popf
xor
fimuls
lret
dec
js
xchg
jno
mov
pop
pop
jmp
cmp
pop
scas
cmp
es
xchg
test
gs
in
pop
add
inc
in
dec
jno
pop
sbb
repz
in
xlat
sbb
add
movsl
fisttps
andl
int
jne
int
adc
enter
outsb
push
lret
mov
xchg
fcomps
mov
sub
xor
inc
fistpll
mov
ss
ror
dec
insb
inc
outsb
push
pop
add
lods
sub
mov
mov
and
adc
sbb
jg
or
xchg
lock
inc
pop
or
lds
cmpsl
outsl
les
push
inc
push
mov
xlat
add
adcb
loop
push
sbb
jg
lahf
sub
cmp
mov
fsts
cmp
fistps
aad
pop
scas
std
or
pop
aam
dec
jmp
loope
cmp
ret
and
dec
push
aam
ret
insb
leave
inc
and
test
scas
ficoms
and
cltd
fstps
pop
lock
lcall
sub
jecxz
cld
jl
inc
imul
repz
or
mov
adc
cmpsb
xchg
and
and
dec
daa
call
inc
stos
push
mov
inc
fadds
jno
add
ljmp
test
outsb
daa
es
insl
xchg
call
jo
popf
lcall
cmpsl
pop
add
clc
cld
shrl
xchg
inc
inc
push
dec
xor
push
push
jno
push
xchg
pop
adc
int
scas
jnp
mov
xor
rcr
aam
xchg
mov
jb
pop
cwtl
mov
sbb
push
mov
cs
loope
sar
sbb
sbb
stos
or
loop
addr16
icebp
cmpsb
testl
and
lcall
ja
loope
pop
cwtl
adc
sarb
hlt
xor
aam
mov
push
pop
mov
rolb
mov
jcxz
jb
aad
ljmp
lods
cmp
clc
pop
xchg
jge
mulb
cmp
iret
imul
iret
popa
insl
or
fistpll
lds
or
xchg
and
push
aas
push
das
dec
cld
mov
stc
push
hlt
mov
scas
out
add
adc
jmp
pop
loop
xor
test
inc
sub
mov
lock
mov
mov
push
jp
ficoms
xor
pop
cwtl
xchg
xchg
pop
xchg
ljmp
fistl
mov
jno
pop
popf
popf
insb
std
lds
sub
lcall
enter
xlat
adc
add
outsb
movsl
mov
roll
mov
rcrl
mov
mov
adc
sahf
cld
shrb
adc
mov
push
fwait
inc
add
or
xor
inc
cli
jl
scas
ja
push
stos
sbb
mov
sbb
call
inc
push
ljmp
push
rorb
or
aad
inc
xchg
pop
mov
mov
mov
clc
mov
push
or
sub
cmp
aas
inc
test
dec
in
aaa
sub
jbe
jno
xchg
jecxz
xchg
pop
das
shll
sbb
sub
testb
movsb
inc
sub
mov
jl
mov
and
lea
xchg
sub
inc
adc
lds
dec
adc
aad
dec
sbb
dec
and
jle
inc
enter
pop
xchg
scas
lret
mov
xchg
pop
push
test
loopne
push
inc
std
inc
test
pushf
mov
rclb
mov
jl
dec
jle
sub
bound
mov
repz
sub
movsb
rclb
mov
in
test
dec
xchg
lea
lock
jle
sbb
push
adc
aad
add
movsl
jge
fsub
inc
orl
sahf
lret
mov
and
adc
cs
ds
lods
jo
sbb
jle
outsl
push
icebp
repz
cmp
addr16
xor
lcall
out
stos
jno
sub
push
movsl
or
hlt
xchg
gs
or
fwait
cmp
pusha
push
movl
mov
or
sbb
xor
test
icebp
mov
out
pusha
jg
or
cmpl
xor
es
adc
movb
mov
xchg
add
andl
mov
sub
ja
mov
add
jmp
enter
xor
stc
imul
and
jp
inc
les
popf
add
int
jbe
and
inc
scas
mov
cmp
pop
jae
or
fcoms
mov
fsubr
sub
stos
sub
sub
fs
mov
nop
adc
addl
sbb
push
jne
test
fimull
lcall
cmp
out
inc
stc
loopne
sub
cmp
dec
mov
mov
lcall
dec
jae
adc
dec
fcom
pushf
iret
lcall
cmp
into
pop
cmpsb
fdivp
clc
insl
mov
jne
fwait
aam
xchg
sbb
testl
fisubrl
out
daa
fnsave
outsb
pop
add
adc
aaa
frstor
sbb
es
data16
outsl
pop
pop
cltd
stos
pushf
insl
mov
inc
sbb
mov
pop
jecxz
pusha
stos
out
mov
rcrb
shrl
fdivrs
inc
jne
mov
dec
cmp
popf
mull
and
testb
dec
push
in
stc
cmp
dec
xchg
adc
test
adc
clc
into
xchg
insl
out
loop
ja
into
rcr
fwait
dec
push
xlat
mov
test
pop
scas
jno
dec
xor
repnz
fldt
lock
jo
sub
cmp
aaa
shl
push
popl
sub
xor
fdivs
hlt
loope
in
test
sub
sbb
test
adc
fwait
cmp
xor
adc
jne
sub
xchg
test
pop
mov
and
or
sbb
mov
dec
xchg
jns
xchg
adc
fisubs
fnstenv
inc
out
or
push
lods
xlat
sbbb
jo
fwait
cwtl
cmc
aam
scas
into
fistl
or
jp
aas
dec
test
xor
sub
lahf
bound
shl
xchg
fldcw
adcb
mov
cmpsb
shlb
outsl
fistps
pop
or
and
push
jae
stos
movsb
into
cmp
mov
pop
test
xchg
or
popa
sbb
pop
jmp
push
xor
in
pop
mov
enter
scas
enter
jle
jp
mov
or
int
notl
lods
mov
jne
leave
push
stc
ret
xor
and
lods
clc
das
cli
sti
cmp
mov
sub
jge
cli
add
popf
testl
jmp
sub
push
jno
sub
inc
js
pop
mov
xlat
pop
inc
mov
dec
loope
je
pop
pop
jge
fsubl
popf
push
or
sbbl
leave
mov
neg
popf
stos
sub
mov
xchg
fcoms
int3
pop
add
add
call
ds
pop
mov
shll
inc
push
pop
gs
movsb
int
or
rol
add
or
push
jb
mov
in
ja
js
sbb
or
das
test
jmp
cs
cmpsl
adcb
adc
jnp
repnz
mov
xchg
xchg
cmpsl
xor
mov
sbbl
aaa
cwtl
adc
xchg
aaa
aam
inc
xchg
jne
jns
push
cmp
iret
pop
mov
sub
leave
rcrl
push
adc
mov
lods
push
pusha
inc
scas
cs
pop
mov
ljmp
dec
jmp
mov
push
lret
ret
inc
fidivrl
cwtl
mov
mov
fpatan
mov
dec
jecxz
add
dec
inc
clc
or
test
sub
mov
js
hlt
mov
es
pop
loope
in
jns
sbb
inc
sarb
push
pop
pop
inc
sub
jnp
xor
pop
add
and
inc
sbbl
repz
mov
cld
jb
push
xor
ret
ret
push
fcomps
add
inc
scas
cmpsb
pop
insb
shlb
or
xor
aam
or
addr16
jb
cmpsl
negl
pop
and
inc
fstl
lret
pop
addr16
pop
or
dec
xor
out
daa
mov
test
nopl
les
test
notl
pop
add
push
lcall
or
mov
push
sbb
iret
adc
mov
inc
in
lahf
jb
inc
and
shlb
mov
cmp
shll
jge
cltd
insl
cmp
sub
std
and
rcrb
jo
sbb
out
lahf
xchg
push
mov
outsb
sub
sub
adc
sub
test
cwtl
xchg
adc
out
sub
sbb
mov
mov
scas
mov
add
mov
xor
subb
enter
in
sub
xor
cmpsl
cmp
jo
sbb
push
cs
dec
pop
mov
cmp
jno
push
repnz
fwait
xor
pop
mov
sbb
scas
addr16
cli
rorl
inc
repnz
push
pop
and
jp
jne
cmpb
incl
pop
cwtl
cltd
jns
xchg
insb
das
imul
mov
sbb
mov
rep
cmp
jns
xor
cmp
sub
loop
add
fs
xor
cmp
sbb
push
xchg
subl
call
sti
mov
add
jecxz
popf
fs
addb
xchg
sahf
fnstcw
out
outsl
and
jecxz
jp
sbb
sbb
ffree
jmp
jg
shlb
cmpb
es
pop
jge
cmp
jl
or
pop
jle
jb
iret
adc
sub
sbb
fldt
in
hlt
lahf
ljmp
loope
push
push
cmp
aam
into
push
scas
mov
pop
loop
push
xchg
push
sti
pop
push
ds
daa
shlb
fadds
push
xor
adc
in
stos
mov
pop
iret
cmp
fwait
or
stos
scas
push
inc
ret
sbb
lret
add
lea
or
fidivs
mov
leave
mov
pop
inc
push
jns
dec
outsl
lcall
pop
xorl
inc
pop
or
jns
scas
pop
push
mov
jg
or
xor
stos
movsl
mov
mov
call
pop
or
pop
test
das
mov
mov
xlat
jge
call
call
mov
dec
add
adc
enter
adc
or
mov
outsb
rcll
ja
out
cmpsl
lret
sbb
jne
inc
sub
test
inc
xor
jle
sub
sub
or
cwtl
jge
mov
inc
pop
cli
pop
xchg
sbb
mov
mov
rcrl
push
add
stc
aas
inc
sbb
jge
scas
aaa
inc
in
adc
in
fs
out
cmpsl
adc
popf
outsb
mov
dec
jp
lcall
js
cltd
or
pop
or
jne
das
ds
cld
fisubrl
dec
jge
pop
imul
push
inc
inc
and
add
out
pop
jbe
fcomps
jnp
aam
push
in
push
lcall
sahf
or
das
mov
pop
repz
popa
add
cmp
out
sbbl
mov
add
inc
sti
push
lret
nop
push
into
adc
loopne
arpl
add
int
mov
pop
or
icebp
ret
outsb
stc
xor
fcmovne
imul
or
cmp
dec
cmpsb
mov
jmp
push
test
arpl
addr16
aaa
push
ud0
loop
scas
outsl
pop
repnz
jbe
test
pop
sub
mov
sub
jecxz
push
pushf
push
jne
cs
jge
pop
testb
ss
xchg
les
mov
jne
ret
mov
and
daa
jmp
cmpl
mov
movsl
xchg
or
dec
mov
jge
aam
jbe
inc
mov
loope
xchg
out
cs
pop
xchg
icebp
mov
and
sbb
push
shll
adc
pop
dec
pop
mov
mov
jg
sub
scas
movsb
imul
adc
xchg
fnstsw
dec
cmpsb
fwait
jae
sub
rolb
adc
outsl
and
xlat
aad
pop
ret
repnz
imul
ja
pop
adc
jle
enter
lret
jo
push
mov
test
lret
sbb
icebp
adcl
push
jp
pop
icebp
push
test
das
incl
int
mov
jle
lock
and
cmpsb
and
xor
cltd
adcl
icebp
std
and
je
mov
jmp
popl
sub
pop
sub
mov
jno
sbb
shrl
and
je
ja
es
mov
mov
fstl
add
adc
addr16
mov
or
jbe
add
jbe
mov
add
cmpl
pop
sbb
pop
cmp
aam
jle
or
add
jecxz
inc
or
lock
sbb
lds
rorl
fisttps
or
repnz
nop
scas
clc
aad
mov
xor
xlat
test
call
push
xor
arpl
jo
xor
stc
sub
ret
pop
sbb
sub
push
enter
out
scas
push
aad
imul
mov
lods
cmp
dec
mov
mov
test
lea
mov
lret
hlt
mov
fwait
addl
incb
cmpsl
mov
data16
xchg
or
jns
iret
repnz
aaa
pop
sub
fwait
xlat
xorl
into
jo
dec
icebp
mov
xor
or
fisubs
js
cmp
inc
or
out
inc
ficompl
testb
leave
stos
pusha
push
dec
loopne
cmp
adc
mov
cmc
jge
jmp
mov
fstpt
std
jo
adc
cmp
xor
sub
push
inc
iret
adc
cmp
and
push
idivb
xchg
lret
pop
clc
ret
cwtl
pop
mov
mov
sub
sub
adc
xor
test
cmp
std
add
add
xchg
or
mov
sub
andb
orl
mov
rolb
ret
shll
mov
mov
aaa
lods
xchg
xchg
sbb
dec
cmp
scas
push
jmp
and
dec
adc
xor
push
dec
sahf
in
insl
roll
loopne
jmp
xchg
xor
fistl
and
xchg
xchg
jmp
lods
add
int3
cmp
inc
adc
lock
int3
xchg
sarl
insl
jne
xchg
mov
inc
cld
cmp
ljmp
cmc
push
daa
gs
arpl
xor
xor
pop
cmpsb
pop
es
lds
and
lahf
push
or
movsb
dec
leave
orb
fnstsw
mov
leave
adc
mov
cmp
in
sub
push
daa
xchg
pmulhw
out
cmc
push
sbb
mov
movsl
fcmove
xchg
cld
mov
push
sbb
dec
sahf
subb
cmp
xor
xchg
xchg
pushf
xchg
xor
mov
push
pushf
mov
adc
std
ror
xchg
or
into
cmpsl
push
inc
addr16
and
mov
rclb
xlat
mov
jmp
in
gs
xor
mov
subl
mov
cli
sbb
rorb
cmp
aad
dec
push
sbb
dec
mov
daa
and
jo
ljmp
mov
enter
mov
cld
gs
xchg
cmpsl
shrl
fdivrl
faddl
add
mov
cmp
out
xchg
mov
xor
cs
pushf
mov
mov
sub
cmp
clc
push
iret
clc
fwait
and
enter
pop
outsl
jo
jbe
sbb
cltd
jp
lock
repnz
sbb
les
push
mov
imul
jns
sbb
mov
xlat
mov
das
insb
inc
sub
mov
and
fisubl
loop
imul
daa
pop
pop
js
xor
sbb
cmp
aam
mov
xchg
mov
jmp
mov
pop
mov
cmp
je
push
daa
in
lods
aas
cli
jecxz
lret
test
sub
sahf
mov
xchg
filds
rcrl
sbb
pop
sbb
sti
orl
or
inc
fistps
xchg
xor
add
sub
or
cs
mulb
fsubrs
orl
test
stos
pop
scas
pop
and
in
sub
insl
adc
fs
sbb
out
repnz
enter
loop
xchg
iret
and
mov
pop
xor
gs
xor
pop
inc
jg
dec
cltd
ds
orb
out
mov
pushl
in
jae
arpl
shlb
fcoml
mov
dec
or
scas
ret
xchg
pusha
popf
ljmp
pop
jg
jcxz
xlat
jno
fldlg2
in
push
fs
int
xchg
leave
shrd
inc
add
sbb
sub
in
xor
pop
pop
ss
sbb
insl
inc
fwait
mov
jge
loop
lahf
mov
mov
mov
in
pop
mov
jbe
jbe
push
mov
ficompl
push
or
pop
push
divl
enter
rcll
adc
in
loopne
aas
add
jmp
mov
stos
jae
xchg
jne
jbe
xor
adc
push
sbb
lret
das
push
inc
das
ljmp
aas
inc
ds
push
aad
pop
sti
add
fstl
bound
dec
pop
jo
xlat
adc
leave
cltd
cmc
es
arpl
imul
jl
inc
jns
inc
fsubl
addr16
adc
mov
and
pop
jg
and
cmp
ljmp
inc
jo
out
outsl
rcr
pop
shrb
loope
fwait
and
rorb
pusha
mov
lret
jnp
imul
pop
mov
add
or
pop
mov
daa
addl
pop
outsb
add
adc
pop
rcrl
pop
int3
lods
aam
inc
fstpl
aam
mov
bound
mov
lret
push
cs
xchg
sbb
xor
inc
aaa
ret
in
lahf
add
rcrb
add
test
sbb
inc
repnz
dec
push
aad
test
daa
fsub
imul
cmc
in
cmp
out
inc
pushf
ja
jb
sub
mov
pop
sbb
ds
insl
sbb
inc
fsubrs
sbb
inc
xchg
out
in
pop
in
call
jle
xchg
out
inc
pop
xlat
imul
inc
fisttpll
mov
mov
stos
imul
push
and
pop
xchg
js
fidivl
popa
lds
mov
mov
push
push
mov
xor
pop
dec
jae
pop
insl
into
fsubl
mov
add
mov
sbb
call
cmp
mov
addb
andl
lock
testb
pop
int
imul
test
fimull
fadds
sbb
popa
lods
jg
gs
outsl
movsb
dec
jbe
shrl
add
mov
dec
pushf
pop
and
lret
pop
mov
rcl
cs
xor
xchg
out
gs
or
sbb
cli
inc
sbb
and
jae
insl
fistpl
and
mov
xor
out
lret
push
shlb
xor
ds
and
pop
fisubrs
dec
sub
aam
adc
sahf
arpl
xor
subb
sbb
lods
xor
out
mov
pop
dec
imul
cli
fcmove
shll
gs
stc
dec
pop
shlb
push
mov
jo
and
nop
fcom
les
jae
mov
sbb
jle
sub
adcl
mov
lea
add
and
ds
js
add
dec
fwait
mov
xchg
daa
outsl
pop
data16
movsl
inc
push
call
mov
outsl
push
lds
sbb
mov
pop
jae
shlb
idiv
in
je
stos
and
cmpsl
xor
ret
mov
xchg
add
mov
lods
and
lock
fs
mov
adc
enter
bound
into
add
xchg
and
and
xchg
cmpsl
fisubs
mov
in
pushf
adc
in
and
das
mov
xlat
mov
xchg
or
push
cmc
xor
sub
pusha
test
cwtl
aam
adc
jno
lock
xchg
icebp
cmpsb
inc
shrl
mov
fiadds
das
add
pop
push
testb
test
ss
mov
ret
cmp
add
lds
into
push
in
jbe
shlb
xchg
sahf
or
cmp
dec
movsb
jecxz
notb
fistl
inc
in
nop
jl
xchg
bound
imul
xchg
mov
cmpsb
bound
xor
push
popa
adc
in
add
sbb
sub
aaa
jne
sbb
dec
sub
cwtl
ret
scas
sub
je
add
push
mov
cmp
daa
sbb
cmc
dec
xchg
and
in
cmpsl
xor
call
scas
les
cltd
movsb
std
add
mov
mov
aam
jmp
call
inc
outsb
gs
and
add
data16
add
hlt
aad
push
popa
or
lahf
dec
sub
std
test
sahf
sbb
xor
adc
daa
xor
hlt
clc
xchg
push
dec
sub
or
jno
test
cmpsl
gs
fdivr
lret
mov
mov
ret
fiadds
sub
adc
addr16
dec
jmp
mov
jno
pop
mov
add
cltd
fisubrl
jmp
rclb
lds
sti
icebp
or
jg
outsl
or
popf
jle
push
or
mov
ror
lock
pop
adc
jp
mov
jmp
sub
adc
xor
repz
in
cmp
push
or
push
mov
imul
sub
pop
push
or
mov
sbb
fcomps
or
sub
xchg
into
lret
xor
mov
subb
pushf
xor
jl
orl
pushf
sub
andl
jl
add
inc
xor
push
xchg
mov
aas
push
stos
shr
cmpb
xchg
test
jne
popf
lea
inc
sub
xchg
stc
push
inc
popa
fldt
sub
lods
or
jae
insl
mov
daa
jle
movsb
test
xor
mov
aad
out
idiv
and
scas
and
jle
es
test
dec
jmp
loop
mov
mov
aaa
push
pop
rorb
cmpsl
sub
test
add
pop
cltd
fdivr
xchg
test
jmp
or
je
mov
mov
mov
jmp
testl
sub
stos
jbe
out
popf
fnsave
sbbl
insb
fisttps
mov
lds
xor
pop
inc
addr16
cmp
loopne
aad
sbb
aaa
cmpsb
pop
aam
push
push
aas
cmp
shrb
je
fsin
add
sbb
popa
mov
or
arpl
fabs
dec
cmpsb
adc
xchg
js
mov
dec
sahf
aas
scas
jns
mov
mov
ficoml
lret
xchg
xchg
out
push
dec
dec
jecxz
push
sbb
pop
movsl
ret
repnz
lds
inc
xchg
mov
mov
sbb
ss
iret
mov
xchg
push
cmpsb
xchg
or
loope
push
fiaddl
stc
lds
dec
push
sbb
push
lods
jg
sbb
sbbb
lahf
inc
push
ret
gs
in
js
dec
sub
jnp
test
ret
faddl
orl
mov
or
and
push
iret
jp
sub
or
and
xor
js
cmc
aam
out
out
push
push
push
clc
pop
rcr
testl
fbstp
aaa
mov
lcall
pop
fcoms
add
fs
out
lcall
xor
ficompl
sbb
mov
call
lretw
loop
dec
cmp
cli
lcall
pop
and
cmc
fisubs
mov
lret
jb
pop
and
mov
cmpb
iret
mov
insl
stc
aam
out
push
clc
jge
inc
jmp
divb
lret
lea
push
incl
call
test
sub
hlt
mov
sarl
fadd
ret
jno
arpl
fs
mov
addr16
dec
mov
test
jecxz
adc
push
aaa
movsb
xor
jmp
xchg
xchg
xor
mov
test
xlat
cmp
outsb
roll
int3
cmc
mov
push
cld
cmp
lret
call
sub
scas
loope
jp
cwtl
jbe
inc
sub
shrb
out
pop
add
iret
adc
adc
xchg
add
xchg
fbstp
pop
popf
sub
adc
loopne
call
lcall
cmc
ret
ret
pop
testl
in
ja
imul
shl
andl
lcall
dec
ret
jbe
mov
add
lods
jl
jne
or
sahf
xor
scas
and
mov
loop
std
cmpsb
lds
pop
adc
cmpl
fldt
mov
sar
add
addr16
cmpsl
leave
lcall
fucom
jmp
lret
testb
cmp
repz
cmp
cmpsl
idiv
les
movl
sbb
sbb
push
pop
sbb
mov
popa
fcomps
add
xor
shll
xchg
pminsw
int
pop
mov
pop
inc
dec
loopne
dec
mull
jno
loopne
push
cmp
mov
dec
nop
stos
gs
mov
std
shlb
add
mov
in
ljmp
in
cmp
test
jmp
test
dec
and
pop
mov
mov
xchg
scas
or
ss
add
fsubrl
push
mov
sub
clc
mov
pop
and
sbb
lods
push
dec
sti
mov
fldenv
push
mov
xor
or
pop
sbb
mov
dec
andl
iret
jl
cmpsb
cmp
fidivl
mov
xchg
push
out
adcb
inc
shlb
shrb
xchg
xor
add
inc
push
iret
xor
xchg
sbb
pop
loope
xor
lret
jno
or
push
cmp
popa
aas
lcall
mov
jb
into
pop
lds
test
or
fmulp
lcall
dec
add
subb
ffree
mov
mov
jbe
repz
ljmp
ljmp
mov
int3
mov
js
lds
pop
ret
and
aad
pop
and
sarb
mov
pop
dec
int
pop
shrl
push
enter
testb
mov
ljmp
in
xor
addl
jge
add
pop
adc
push
lods
xor
outsl
icebp
mov
aas
sbbl
dec
add
int3
testb
xor
jbe
adc
int3
or
cmp
mov
cmpsl
or
mov
jnp
into
ret
mov
dec
je
ja
mov
inc
pusha
jae
pop
fistpll
mov
movsl
add
pop
out
ja
bound
and
cmp
pop
insl
outsb
xchg
xor
test
mov
fidivrl
mov
push
xlat
adcb
inc
stos
inc
push
mov
aam
and
sti
mov
push
pop
data16
aam
idivb
push
mov
xor
loop
adc
mov
lods
xchg
xchg
fisubl
out
movsl
cmp
xor
cltd
and
sub
cmp
jo
int3
bound
fidivrl
xor
mov
stc
xchg
sarl
cmp
jne
mov
xor
mov
std
inc
adcl
sub
jg
sbbb
push
mov
mov
or
inc
mov
lea
pop
pop
mov
jecxz
push
jo
fsts
enter
adc
pop
push
fnstcw
pop
add
push
xor
jne
lahf
push
mov
mov
mov
pop
mov
push
xchg
cmpl
movsb
insl
daa
cmp
inc
dec
or
pop
jg
mov
sub
pusha
fidivrs
adc
out
inc
insl
push
pop
dec
mov
jp
insl
and
pushf
add
inc
pop
test
fidivs
push
fs
aas
data16
movsb
movsb
dec
dec
mov
sbb
xchg
add
pop
xor
idivl
sbb
ja
or
and
les
jp
jns
imul
jnp
out
pushf
pop
add
xchg
fsubr
cld
ret
sub
dec
pop
popa
scas
into
fstps
mov
enter
pop
mov
mov
sub
or
lods
int3
std
in
jns
or
mov
adc
pop
pusha
cld
in
jne
xor
dec
add
push
push
jmp
pop
mov
cmp
xor
or
mov
push
xchg
mov
mov
lret
and
xchg
pop
ljmp
jg
cmp
push
dec
test
pop
push
cmc
pusha
enter
add
adc
mov
ja
incl
bound
rcr
sub
or
cmpb
hlt
mov
jbe
test
pop
stos
or
in
loop
mov
mov
adc
sub
push
fwait
lods
cmp
mov
adc
seta
sti
ja
into
inc
pop
inc
inc
xchg
ret
mov
jnp
das
popf
repnz
xchg
mov
cmpsl
imul
icebp
iret
test
in
adc
xor
dec
inc
andb
hlt
mov
push
push
subl
fs
fs
sub
mov
mov
fcomi
hlt
fimull
repnz
jmp
or
stos
sti
sbb
movsl
dec
les
iret
inc
ljmp
xchg
or
sbb
sahf
xchg
dec
std
lahf
das
orb
lret
sub
dec
jae
push
push
rcrb
xor
xlat
xor
andb
push
or
jp
sarb
push
xchg
add
pop
xor
test
jmp
in
sbb
mov
mov
xchg
mov
iret
dec
outsl
gs
pop
push
xchg
or
inc
mov
adc
xchg
push
mov
test
push
icebp
enter
dec
mov
enter
dec
push
adc
sub
xlat
ret
out
shrb
testl
out
stc
sub
ljmp
adc
push
pop
idiv
lods
inc
sub
mov
inc
sbb
dec
add
daa
mov
mov
test
into
fs
pop
mov
sti
mov
insb
sub
aam
test
call
xlat
rorl
add
fsubl
or
or
mov
cli
mov
and
adc
scas
dec
into
add
dec
mov
mov
js
fdivrs
arpl
icebp
cmp
push
int3
mov
cmp
rorb
in
sbb
push
rcrb
inc
fcomps
mov
cld
ja
decb
movsl
lods
mov
cld
xchg
xor
pop
lea
out
stos
mov
or
push
jg
pushf
std
add
cmp
lret
fisubrs
ds
add
add
add
in
jmp
mov
das
jnp
add
xorl
jg
add
and
repz
pop
sub
and
or
icebp
sbb
lock
outsl
inc
jmp
inc
xor
push
sti
xchg
stos
movsl
inc
push
in
sbb
xchg
jb
fs
push
fwait
jae
sbb
pop
xchg
mov
sbb
stc
pop
bound
scas
or
push
pusha
xchg
lret
fwait
clc
push
and
sbb
daa
pusha
leave
push
outsl
fs
sarl
fistl
loop
call
int
mov
adc
inc
dec
push
sub
jg
jge
rcr
xchg
push
adc
mov
xor
scas
leave
cmpxchg
pop
push
pop
int3
repnz
repnz
int3
dec
scas
ljmp
shl
ja
mov
add
pop
arpl
leave
outsl
ficoml
push
ds
xchg
xchg
fistl
dec
jg
or
cmp
stc
mov
dec
out
cmovle
add
repnz
sub
jbe
adc
mov
mov
xchg
add
outsl
sbb
xor
jns
out
outsl
mov
cmp
movsb
daa
jl
mov
clc
cmp
or
cmp
call
add
pop
mov
movsb
pop
or
push
inc
inc
dec
add
int
in
pop
adc
adc
push
ss
mov
negb
xlat
sbb
jnp
push
jne
mov
fs
mov
jg
or
cmp
xor
js
push
mov
int
adc
push
insl
jns
xor
jge
jo
mov
ss
push
adc
dec
cmp
cmp
cmc
cmpsl
mov
test
imull
popa
sub
or
push
pop
jne
ficoms
sbb
jmp
xorb
call
jg
mov
jmp
sbb
pop
or
pop
cmpsl
insl
mov
ficoms
mov
jg
or
loopne
pop
test
xchg
outsb
sarl
jge
cwtl
cmp
adc
cmp
lds
test
adcl
sbb
das
ss
sub
sbb
push
push
sti
aas
push
inc
adc
or
jnp
repnz
dec
test
out
int
and
loopne
dec
push
mov
fldt
xlat
sbb
dec
xchg
int3
imul
cld
rcl
daa
pusha
daa
icebp
mov
and
xchg
daa
mov
stos
popf
mov
lcall
ja
add
adc
lods
dec
mov
jbe
int
cmp
in
xchg
cmc
cmp
test
pusha
dec
sti
xchg
mov
mov
xchg
adc
cli
addr16
mov
test
pop
imull
cltd
fcoms
lcall
leave
loop
popf
mov
mov
inc
je
test
xchg
loope
fbld
es
jae
insl
mov
mov
jbe
not
xchg
mov
and
xlat
sbb
mov
jmp
js
insb
lods
popf
enter
repnz
les
pop
scas
and
fcompl
inc
int
insb
aad
mov
push
pop
stc
push
sub
out
cli
jno
sub
sbb
nop
ret
sbb
frstor
mov
inc
adc
adc
test
ret
mov
rcr
outsb
mov
mov
fprem1
mov
in
idivb
pop
pop
add
es
subb
dec
es
jnp
fs
lea
rcrb
fcompl
push
push
loope
ficompl
cltd
mov
xchg
adc
jae
adc
in
push
movsb
lcall
dec
dec
mov
aad
adc
mov
xchg
mov
int
insl
loope
dec
int3
test
add
roll
or
jns
orb
inc
mov
jmp
leave
mov
aad
or
in
fcoms
mov
mov
mov
add
adc
rcrl
xchg
into
and
imul
xor
ffree
mov
sub
fadds
jle
int
cwtl
mov
lret
dec
sti
repz
jecxz
es
daa
jle
movsl
adc
mov
jns
inc
add
rclb
fwait
cli
pop
xchg
add
xchg
out
das
sahf
cmp
jb
nop
pop
cli
das
mov
adc
mov
rorb
push
bound
mov
inc
fdiv
or
jl
or
jbe
push
push
or
dec
lds
shrb
enter
adc
std
popf
cmpsb
rorb
fimull
sub
shlb
and
dec
push
scas
orl
lea
and
cmp
test
movsl
imul
ljmp
push
pop
cmp
mulb
cld
arpl
push
or
pop
push
inc
scas
mov
mov
adc
xchg
mov
daa
mov
test
sar
andb
lcall
pushaw
jl
les
jbe
push
leave
xor
dec
pop
mov
ret
out
rolb
jl
mov
cwtl
ud2
bound
test
push
sub
dec
mov
sbb
jo
jge
ret
cld
pop
jnp
mov
ss
push
or
test
test
jp
movsl
enter
into
adc
enter
test
jne
stos
stc
popf
jmp
and
fdiv
mov
loopne
mov
add
push
aad
cmpsl
pusha
leave
mov
pop
jp,pn
push
shl
lea
pop
xor
call
out
jns
mov
sbb
mov
test
scas
sbb
fldenv
fsubs
test
fs
adc
adc
pop
jo
dec
push
mov
pop
inc
and
stos
mov
inc
pop
ret
std
cmpsl
mov
sbb
sbb
mov
cmp
pop
aaa
lock
outsl
or
cmp
mov
lods
outsb
and
nop
je
xchg
jo
imul
jae
jb
les
fwait
movsl
jp
cmp
bound
pop
push
or
or
jo
cmpsl
xchg
mov
sbb
sbb
mov
pop
cmp
mov
mov
cmp
aaa
js
inc
aam
jb
mov
adc
push
lods
pop
mov
mov
pop
pop
mov
fcom
fidivl
es
jo
pop
fisubl
pop
decb
lret
sub
adc
cmp
cmp
dec
xlat
call
dec
sbb
cmpsb
fildll
icebp
jle
adc
sbb
sbbb
jle
rcrl
int3
push
adc
or
dec
xchg
ljmp
pop
pop
pop
mov
ja
in
xchg
xor
mov
xchg
push
add
xchg
ljmp
fldenv
out
mov
pusha
loope
dec
and
jmp
cmp
arpl
push
int3
or
mov
ljmp
lock
out
aam
add
xlat
clc
sbb
loopne
push
psraw
mov
cmp
inc
pop
stc
insb
xorl
adc
das
subl
dec
imul
loop
mov
jp
lods
mov
push
movsl
out
aad
sbb
clc
jge
outsb
pop
dec
cwtl
jge
sub
or
mov
inc
rcll
in
pushl
push
addl
inc
icebp
les
inc
xor
fdivrs
outsb
mov
mov
mov
bound
cmp
sub
push
fdivr
insl
test
mov
jmp
pop
cmpsl
cmp
aaa
call
inc
dec
xchg
jbe
int3
pop
cmpsl
mov
cmp
nop
dec
icebp
mov
xor
lods
movsb
iret
lcall
jl
jnp
push
push
inc
dec
and
pop
or
push
pusha
jo
ret
push
ja
aad
pop
scas
stos
dec
and
xor
int
arpl
adc
xor
jmp
clc
jns
insl
add
hlt
repnz
mov
add
push
mov
xchg
mov
cmp
jb
mov
inc
popa
push
imul
icebp
mov
push
mov
or
pop
pop
xchg
pop
test
push
js
pop
outsl
fs
bnd
addr16
outsb
bound
xor
cmc
dec
pop
loope
push
rcr
adc
test
sahf
icebp
pushl
pop
cmp
rcrl
mov
pop
out
sarb
or
push
or
stos
jnp
push
dec
arpl
int
add
cmp
dec
int
negl
repz
cmp
push
loop
fnstenv
divl
mov
jp
cmp
and
adc
ret
movsb
lea
hlt
jmp
js
int
push
xchg
cs
jp
mov
fistpl
sbb
fwait
in
sub
push
mov
mov
les
xor
mov
mov
push
and
or
sbb
dec
mov
lods
mov
xchg
bound
addl
inc
loope
jl
mov
push
arpl
ja
xor
fdivs
dec
pushf
push
stos
xor
ror
out
fnstcw
push
andb
inc
in
inc
cmp
mov
mov
mov
jmp
mov
pop
push
mov
xchg
cltd
mov
mov
aaa
dec
fstpt
push
adc
aas
hlt
and
movsl
inc
popl
mov
cmp
cs
aas
xchg
nop
sub
fisttps
push
mov
mov
pop
pop
sub
sbbl
sub
jb
aad
or
mov
inc
mul
imul
push
mov
pusha
push
add
filds
mov
pushf
orb
fbld
push
and
cmp
rcl
dec
cmpsl
mov
repz
lods
daa
imul
push
popa
mov
andnps
and
roll
sub
daa
inc
femms
sti
fstl
ss
sub
gs
mov
movsb
fisubrs
ljmp
mov
sarl
int3
or
mov
loope
testb
mov
in
sbbl
lret
xchg
xor
repz
out
sarl
jno
push
mov
movsl
adc
inc
jne
or
loopne
pushf
lahf
or
jbe
or
iret
or
mov
dec
insb
inc
sbb
push
inc
lock
add
adc
xor
out
cmpsb
movl
cld
daa
out
jno
out
or
or
popa
into
fldcw
cwtl
stos
push
lret
jns
inc
inc
pop
add
in
into
mov
dec
aas
out
call
mov
mov
lods
std
jb
cwtl
shl
xchg
stos
xchg
cld
cmp
mov
cmp
or
inc
in
xchg
inc
testb
xor
adc
sahf
sub
cli
mov
vpmacssww
mov
in
xchg
inc
jbe
inc
and
mov
std
push
cs
and
fcmovne
xchg
jbe
std
out
xchg
pop
inc
test
jno
cmp
push
jae
je
notl
adc
movsl
in
cltd
xor
dec
test
movsl
mov
and
cmp
xor
inc
cmp
popa
and
dec
jecxz
cmpsb
cmp
lds
push
or
insb
nop
fld
enter
mov
xchg
inc
and
insb
loopne
sub
sub
stos
iret
pop
dec
mov
repz
or
movsb
mov
push
mov
ss
push
cmp
sbb
icebp
add
jp
mov
pop
sub
mov
push
out
dec
pop
mov
ds
arpl
pusha
jae
cmp
push
sub
push
sahf
inc
bnd
in
imul
lret
mov
leave
popf
aaa
leave
lods
xor
dec
in
or
mov
mov
repz
subl
das
dec
mov
push
xor
mov
lods
push
es
mov
pop
ret
sti
test
les
outsb
jns
in
mov
jp
jge
sub
mov
inc
pop
dec
rcll
mov
call
test
lods
sbb
mov
dec
mov
adc
cmpsl
out
subl
dec
mov
lcall
and
push
fisttpll
xchg
movsb
mov
inc
ret
sub
andl
popa
push
loopne
lds
fsubrl
bound
dec
hlt
mov
or
call
pop
xor
ja
dec
subl
stos
cmp
or
inc
mov
mov
or
cld
mov
rol
out
pop
lds
inc
and
lahf
or
xor
push
push
std
sbb
inc
rcll
mov
cmp
or
cmpsb
xchg
cwtl
mov
xor
pop
pop
xchg
aaa
or
jns
cltd
in
cmpsb
xchg
test
sub
into
insl
sub
dec
test
fstp
xor
add
iret
ljmp
pop
jge
decb
jae
xor
cmpsb
mov
inc
mov
dec
repnz
jb
jmp
and
jg,pt
int
gs
in
sub
push
je
shlb
sbb
data16
sbb
pop
cmp
jo
push
and
hlt
mov
mov
cmpsl
pop
aaa
add
inc
jecxz
add
push
shll
cmpsl
pushf
lock
rorb
aam
xor
in
dec
dec
adc
out
ss
mov
andl
stc
int3
pop
aaa
jp
push
adc
push
cltd
sub
fwait
cmp
mov
mov
add
outsl
cwtl
inc
or
mov
aas
shll
es
dec
std
dec
cmp
dec
out
jge
push
fs
addr16
enter
push
jp
popf
ret
int3
mov
add
sub
push
mov
mov
jne
dec
and
in
gs
loope
add
dec
cmc
insl
lods
cmp
out
xchg
mov
stc
and
xor
jp
out
jns
aaa
adc
sahf
lods
cmpsb
sub
fadd
and
pop
cwtl
sbb
jo
push
mov
and
pop
jg
sbb
cwtl
mov
mov
and
arpl
or
xchg
outsb
pushw
cli
scas
push
mov
mov
out
into
shl
mov
mov
mov
pop
mov
pop
jno
fisubl
jnp
nop
lods
cmpsl
roll
sub
dec
xor
fwait
ja
sbb
shlb
notb
cmpsb
sub
in
movsl
sbbl
clc
xor
mov
inc
mov
in
movsb
pop
aaa
ficompl
mov
aas
pop
lret
mull
jbe
xlat
cmc
sub
out
clc
sbb
sti
dec
loope
rcr
into
or
xor
sub
mov
mov
jp
ret
cli
test
dec
xor
lahf
cmpsl
rcrb
imul
in
mov
mov
xor
outsb
mov
outsb
pusha
sti
cltd
fbld
lock
adcb
add
sahf
ret
xchg
aas
sbb
jne
mov
idivb
in
lcall
mov
push
in
imul
jle
lret
xor
push
or
mov
mov
or
aam
ret
test
ret
icebp
repnz
lds
pop
movsl
adc
test
shl
adc
mov
jnp
cmpsb
push
ss
xor
fs
arpl
cmpl
pop
outsl
gs
lods
push
inc
outsb
lea
mov
and
or
xchg
xchg
mov
lods
jl
hlt
push
dec
xchg
cmpb
into
lret
inc
cltd
ljmp
dec
jle
stos
xchg
xchg
pop
mov
push
outsb
push
jge
cltd
inc
add
mov
scas
fwait
in
mov
iret
fcoms
sub
scas
mov
sub
sub
outsb
fwait
jbe
xor
add
popa
aaa
mov
mov
les
fs
xchg
dec
sahf
aas
daa
mov
stos
adc
xor
int
inc
aas
mov
xchg
mov
sub
jge
fcoml
data16
sub
repz
adc
and
xchg
inc
mov
push
fs
mov
aad
out
loope
xchg
mov
inc
or
or
xchg
out
mov
idiv
icebp
movsb
int
mov
cmp
test
shrl
mov
sbb
pop
mov
sub
in
daa
mov
imul
mov
push
fstpt
add
fmull
cwtl
dec
sahf
adc
mov
out
test
jo
cwtl
add
ljmp
addr16
sub
stc
mov
xchg
jecxz
cmpsl
fisttps
aas
mov
adc
scas
insb
mov
inc
rcr
movsl
xchg
jae
scas
cs
jae
icebp
mov
orb
clc
stc
sbb
or
dec
sub
and
or
xchg
subl
pop
mov
adc
pop
enter
cmp
pop
leave
lcall
pop
dec
push
es
stos
hlt
pop
mov
cwtl
pop
cmp
xchg
dec
jl
inc
fiaddl
loopne
add
sbb
xchg
inc
xchg
push
scas
xchg
scas
das
mov
pop
mov
ret
enter
mov
lret
lods
pop
cmc
je
je
popa
cwtl
leave
leave
in
xlat
xor
mov
daa
and
push
adc
movsl
mov
pop
out
xchg
sti
std
xchg
xor
push
lds
and
or
mov
movsb
es
sbb
in
inc
stos
arpl
or
jo
lret
rcrl
cmpsl
xchg
and
cwtl
push
push
mov
add
hlt
adcb
pop
mov
dec
filds
stc
pop
addr16
xchg
lods
mov
sbb
jbe
adc
arpl
sti
pop
push
sub
into
mov
incl
or
xchg
push
pop
test
push
repnz
das
dec
push
jo
sub
insl
pop
fmull
cmp
mov
pop
xlat
int3
js
lods
or
mov
mov
popa
mov
movsl
push
ds
lahf
nop
movsb
and
mov
ljmp
bound
notl
jo
sub
vcvttps2dq
fdivs
out
sub
in
xchg
jecxz
or
sahf
imull
mov
jg
add
mov
add
divb
loope
shrb
push
sub
xchg
cmp
je
xchg
in
adc
hlt
popf
mov
cmp
std
adc
cs
and
xchg
pop
dec
shl
outsl
mov
mov
mov
sub
aaa
or
sub
mov
push
mov
movsb
xor
cld
or
loop
pop
jmp
neg
xchg
jo
inc
outsb
movsl
in
add
ficomps
hlt
icebp
int
popf
bound
sub
push
jo
test
je
cmp
sahf
or
mov
std
mov
adc
sub
fwait
insb
insb
stos
mov
dec
push
pop
inc
sbb
inc
in
enter
jg
adcl
sbb
and
pop
dec
lahf
push
xor
dec
clc
adc
int3
inc
xor
mov
inc
test
and
loop
cmp
mov
nop
in
xchg
iret
mov
scas
adcl
dec
or
add
jnp
push
movsl
adc
sbb
mov
popf
inc
xchg
call
std
mov
data16
push
fwait
add
sub
mov
adc
push
jmp
sbb
dec
pop
stos
sbb
add
pop
enter
push
scas
popa
inc
fs
cmpsb
push
test
inc
fdivrl
fnsave
xchg
test
mov
out
push
rcl
xor
in
jns
insb
pusha
rorb
and
cs
push
cld
clc
stc
pop
rclb
pop
pop
shrb
mov
hlt
mov
rep
fimull
sbb
sbb
sbb
xlat
and
insb
push
cltd
fucomip
std
sub
pop
mov
sub
jle
fiaddl
lcall
xor
push
cmc
jmp
mov
xlat
add
out
test
sbb
add
fidivrl
addr16
mov
imul
fbld
mov
clc
push
les
xor
mov
fnstenv
jne
jecxz
das
mov
jbe
pop
cwtl
incb
cmp
or
adc
xchg
imul
mov
movsb
xchg
out
sub
gs
mov
xchg
aas
pop
rorl
and
shll
ss
dec
rcr
xor
or
xchg
fistl
outsb
leave
test
aas
xlat
mov
lcall
nop
mov
pop
sub
data16
lahf
outsb
pop
cmp
idivl
jg
jne
mov
xor
aaa
data16
cmp
shr
xchg
mov
jl
addb
cmp
jae
push
or
aam
clc
lods
jnp
add
cmc
mov
jle
pop
xchg
inc
or
pop
fldz
adc
xchg
add
icebp
jg
jecxz
out
or
pop
fwait
andb
ja
jmp
jae
scas
out
cmp
mov
loop
dec
sahf
xchg
dec
loop
mov
and
insb
sti
jns
inc
mov
scas
int3
shr
mov
mov
mov
push
cmp
into
push
daa
mov
pop
cmp
mov
add
jl
sub
scas
in
xlat
nop
and
orl
mov
xor
ss
cmp
jnp
sub
push
stc
ret
mov
dec
insb
jno
sub
call
inc
cli
pop
mov
sahf
fcmovnb
dec
dec
and
inc
cld
add
aaa
dec
mov
mov
pop
push
rcpps
jge
mov
fsts
fldcw
in
test
dec
enter
fisubrs
cmp
inc
cmp
int
cmpsb
add
lds
leave
dec
and
pop
leave
ljmp
es
sub
cwtl
insl
and
in
adc
neg
fwait
sub
mov
jmp
stos
add
sbb
sahf
xor
or
xchg
cmp
pop
fimull
add
lret
loopne
addr16
in
mov
std
shrd
repnz
fcomps
jg
jge
ja
out
cli
cmp
icebp
rclb
adc
pusha
adc
dec
int3
push
sbb
shlb
cltd
or
clc
dec
in
cmc
or
push
shrl
mov
cmp
repz
stos
ret
sbb
jns
aaa
mov
add
sbb
into
test
in
dec
arpl
add
mov
rolb
cmp
cli
sub
mov
lods
mov
and
in
bnd
mov
sub
fadds
xchg
sub
lcall
mov
jmp
inc
sub
pop
mov
into
movsb
dec
sbbb
cmp
push
add
mov
sbbb
cmp
test
rep
enter
mov
or
enter
movsb
stos
mov
xchg
add
insb
fsubs
cmp
ljmp
pop
xchg
out
in
int3
in
mov
xchg
pop
sbb
push
jge
mov
xor
sub
adc
inc
sbb
test
xchg
notl
xchg
xlat
rep
sub
outsb
int3
or
iret
jb
dec
cltd
inc
push
adc
dec
or
adc
sbb
lock
data16
movsl
dec
sbb
cmpsl
xchg
push
pop
lods
pop
shll
push
shr
inc
icebp
mov
les
lods
out
ljmp
test
stc
aaa
lods
mov
mov
xor
movsb
cltd
xchg
ret
rorb
xchg
adc
sub
fs
mov
inc
in
loopne
inc
jno
inc
jns
bound
js
xlat
cmpsb
mov
mov
in
stc
jecxz
lds
sbb
ds
test
sbb
rclb
and
outsl
lret
insl
and
mov
gs
sub
popf
jae
rorl
adc
jns
xor
jge
and
leave
pusha
stos
push
nop
or
in
mov
roll
xor
dec
xchg
adc
inc
ljmp
pop
adc
sbb
pop
cltd
mov
in
icebp
test
sbb
lds
test
sub
xlat
mov
hlt
pop
and
lods
rclb
dec
add
aad
fsubr
fcoms
stos
jle
or
rclb
mov
int3
ret
adc
push
fs
or
insl
pop
jb
mov
cmp
xchg
test
or
insb
popf
sarb
test
mov
and
or
pop
adc
loop
mov
fwait
pop
and
pushf
aad
loope
imul
cmc
ficompl
mov
enter
adc
icebp
cmp
je
ret
inc
pusha
lahf
mov
jnp
ret
fptan
and
lds
sbb
lock
sbb
outsl
enter
xor
jne
mov
jae
aaa
mov
aas
cmp
in
aaa
jo
and
pop
movsl
jp
leave
test
mov
jecxz
jmp
aas
popf
or
ret
das
stos
xor
pop
pushf
mov
push
clc
jmp
sahf
pop
mov
aas
adc
pop
mov
inc
hlt
mov
int
xchg
test
and
sahf
sub
das
xchg
sub
in
add
lret
ja
cs
jno
push
adc
data16
mov
call
pop
bound
les
jns
ja
stc
mov
test
sub
mov
popa
rol
sbb
shl
sbb
adc
xchg
sbb
test
icebp
insb
je
je
xchg
pop
xor
pop
adc
pop
pop
in
loopnew
cli
push
xor
pop
test
cmpsb
pop
mov
mov
popf
enter
pop
lret
cmp
imul
sahf
push
test
sti
aaa
jmp
jl
xchg
xchg
mov
scas
pop
jge
lods
dec
xchg
data16
sbbl
fucom
aaa
das
mov
loope
mov
inc
js
sub
movsl
mov
and
cmp
arpl
cmp
sahf
sahf
push
dec
imulb
dec
lds
cmp
sbb
mov
cmp
fsincos
mov
adc
out
mov
outsl
mov
inc
icebp
stos
out
inc
repnz
fisubs
inc
addr16
mov
out
xor
lock
mov
lock
mov
in
dec
adc
ficoms
sub
pop
dec
xor
js
std
cmc
lea
mul
and
repz
in
daa
pop
fstpt
fistpll
dec
mov
cmp
xchg
shll
int
sub
fs
add
sub
pop
ljmp
dec
adc
lret
and
stc
out
xor
sub
mov
xchg
xor
bound
or
dec
or
inc
movsb
popa
adc
shrb
inc
popf
pop
or
or
roll
add
dec
cmpsb
loopne
jbe
add
sbb
jmp
imul
adcl
xchg
pop
sar
pop
ss
add
fcomps
adc
addl
movl
push
pusha
fwait
and
cmp
or
dec
mov
mov
jbe
dec
pop
xchg
aas
repnz
mov
clc
je
or
popa
xchg
xchg
cmp
xor
lea
loop
sbb
xor
lcall
add
sbb
pushf
xor
adc
cltd
adc
sarb
arpl
sti
xorl
gs
cmp
fidivs
jle
leave
test
jns
pusha
xchg
adc
loop
and
enter
jae
add
orb
dec
pusha
cld
sub
int3
mov
push
out
sub
rolb
mov
ret
mov
xchg
jmp
aad
adcl
pop
sbb
push
xor
sub
push
cmp
rcll
lods
sbb
aad
rcrl
call
ja
and
ficomps
rcrl
jne
dec
dec
push
cmpsb
jnp
xor
jg
mov
mov
call
lret
gs
rolb
clc
fwait
test
adc
jnp
and
xchg
insb
mov
testb
xchg
pop
repnz
shlb
test
pusha
shrl
test
outsl
add
pop
adc
cmpsl
adc
lods
cmp
leave
push
jbe
inc
dec
adc
mov
jmp
je
idivb
dec
jmp
pop
xlat
mov
sub
adc
xchg
push
cmpsb
outsb
jns
mov
push
stos
push
jno
sub
adc
mov
sub
or
pop
add
xchg
inc
idiv
dec
popa
jbe
inc
jle
inc
sbb
loopne
ja
add
cmc
mov
dec
ficoml
movsl
mov
adc
rclb
jecxz
aas
popf
mov
dec
push
xchg
jb
xor
mov
jo
loop
xchg
push
push
iret
lods
sbb
mov
inc
sub
pop
mov
add
cmpsb
mov
sub
loopne
mov
repz
xchg
loope
or
mov
push
push
ja
imul
fdivl
and
inc
lahf
mov
push
sub
hlt
rcll
aas
loope
pop
das
inc
fwait
sti
push
sbb
scas
xchg
or
cmp
mov
adcl
dec
ljmp
inc
lahf
mov
out
bound
test
push
or
add
mov
pop
pop
loopne
pop
orl
ficoml
lret
popf
lea
jne
push
pop
inc
cs
hlt
scas
mov
aam
push
fdivp
fcomps
inc
loop
insl
enter
hlt
or
lahf
sbb
or
mov
dec
int3
sbb
out
cmp
push
cmpsl
xor
imul
sbb
leave
mov
cmp
ljmp
outsb
inc
pop
mov
shll
pop
adcl
jns
inc
or
lahf
loope
push
push
ret
xor
mov
loope
mov
das
jb
ret
push
iret
xlat
mov
call
cmp
inc
xchg
int3
xchg
mov
jl
rcrb
stc
roll
pop
and
ja
nop
cli
xor
push
ret
cmp
jp
lods
sub
inc
mov
xchg
dec
xchg
pop
jl
pop
push
inc
add
cwtl
int
mov
mov
inc
sub
fcoml
scas
popa
cltd
cmp
cs
movsb
loopne
jle
pop
stos
add
adc
mov
adc
add
dec
movb
cli
dec
push
int3
jmp
xor
mov
fildll
dec
mov
push
mov
sbb
mov
jle,pn
cwtl
dec
movsb
sbb
aaa
mov
stos
scas
pop
jmp
and
jne
push
mov
mov
imul
mov
mov
in
fildl
push
scas
int3
fimull
outsl
xchg
movsb
cltd
sub
nop
stos
addr16
mov
stc
push
push
cwtl
sub
dec
shrl
imul
pop
test
inc
sbb
mov
and
adc
add
stos
xchg
pop
rclb
in
add
lock
ficomps
cmc
xchg
mov
call
dec
fld
xchg
loop
ficomps
mov
in
dec
pop
repnz
jp
jl
inc
jge
out
inc
mov
les
jmp
lahf
xor
sub
lds
sub
bnd
cmp
mov
aam
xchg
mov
push
add
mov
or
stc
sbb
jmp
xorb
sub
js
clc
stos
je
sub
imul
imul
sar
adc
sbbb
xchg
movsl
push
popf
xchg
mov
jns
loop
mov
dec
pop
push
inc
in
stos
xor
xchg
loop
outsl
int3
xchg
or
adc
lods
lahf
push
cmp
mov
idivb
imul
int
cmp
jae
inc
lea
sbb
out
xor
xchg
in
mov
adc
lods
ja
testb
xchg
mov
lods
cld
push
les
push
rcrl
mov
mov
jno
push
add
outsl
add
lahf
int3
sbb
mov
stc
jge
sub
xchg
pusha
jl
pop
jnp
out
xchg
hlt
jns
push
lods
jb
ret
and
loope
movsl
imul
mov
arpl
out
inc
xor
jg
mov
ret
dec
ds
mov
or
pop
dec
cmp
pusha
jns
loopne
sub
mov
sti
in
push
scas
and
iret
aam
push
pop
ret
xor
les
test
jbe
das
mov
pushl
sti
jbe
dec
dec
daa
out
mov
sub
add
ja
jp
dec
sub
addr16
arpl
sbb
mov
mov
and
jg
imull
dec
subl
inc
cmpsb
xchg
shlb
ds
push
cwtl
jmp
lahf
and
js
arpl
les
jbe
mov
repz
add
xorl
dec
push
pop
push
fildll
pop
ret
mov
test
xor
and
repz
testl
jno
sbb
jae
stos
lds
fsubrs
shll
xor
mov
aaa
inc
push
and
sbb
cmp
xor
adc
sbb
popa
jge
out
sub
or
popa
sbb
in
in
xchg
push
fwait
loope
call
xchg
pop
sub
cmp
and
xchg
bound
imul
mov
jne
inc
ss
pop
xchg
pop
xchg
cmc
test
jp
push
ja
mov
lods
jecxz
test
mov
bswap
sti
or
gs
add
mov
pushf
insb
mov
stos
dec
data16
xchg
cltd
push
xchg
xor
fdivl
push
dec
pop
fisttpl
pop
cld
adc
cs
cmp
pop
jo
add
sbb
pop
orb
inc
adc
add
adc
xchg
push
dec
xchg
repnz
in
sahf
enter
xchg
mov
imul
pop
outsb
xchg
lret
xchg
cmp
push
lahf
or
fadds
lahf
or
jge
push
popf
add
cmc
jmp
adc
xor
mov
popa
shl
mov
push
mov
mov
fnstcw
xor
xor
xchg
pop
shr
icebp
cmp
out
adc
xchg
add
je
repz
inc
stc
test
pop
loopne
aam
and
in
dec
not
outsb
les
ja
in
sub
xchg
divl
pop
push
rorb
jne
jo
aaa
mov
rorl
mov
cmpb
dec
mov
in
in
outsl
mov
lahf
push
add
dec
inc
mov
iret
jae
stos
and
aas
push
faddl
adc
mov
test
add
jnp
inc
bound
addr16
repz
cwtl
mov
adc
add
sub
fwait
dec
xchg
ljmp
popf
mov
mov
lds
xchg
clc
inc
loop
cmc
fidivl
mov
add
sub
xor
jb
adc
xor
xor
enter
ss
jno
mov
js
ljmp
push
or
push
arpl
inc
push
mov
fmuls
and
mov
insb
das
xor
and
call
xor
jo
mov
sbb
add
loop
adc
mov
mov
lock
xchg
push
pop
ret
sbbb
sti
fidivl
pop
loopne
hlt
pop
loopne
mov
or
andb
loopne
shlb
out
call
aas
xor
mov
xchg
mov
dec
or
pop
add
jg
fidivrl
ficomps
or
mov
xchg
xchg
mov
arpl
imul
push
bound
ficoml
xchg
adc
push
cwtl
add
into
inc
aam
cli
mov
adc
mov
imul
add
and
outsb
mov
dec
testb
sti
xchg
inc
sbb
fcoml
and
and
addr16
mov
popf
mov
pop
popa
jb
idivl
aad
es
sti
mov
jae
dec
imul
adc
pcmpgtd
mov
scas
aaa
dec
fdecstp
stos
cmp
fistps
repnz
mov
jp
cmp
loope
xchg
fcoms
cld
nop
push
xchg
lcall
mov
fisttps
add
loope
xchg
and
bound
dec
insb
outsl
gs
pop
jns
mov
mov
insb
mov
iret
and
popa
xlat
loopne
adc
cmp
mov
ret
fmull
imul
call
fmull
add
inc
aas
stc
and
adc
aas
jbe
xor
add
call
xchg
jo
and
das
jns
adcb
cs
cld
sbb
cwtl
xor
and
mov
in
sbbl
orb
mov
mov
shrb
fcompl
xor
adc
jb
cmp
mov
adc
dec
pop
jle
xchg
stos
push
hlt
push
mov
fxch
and
repnz
cld
mov
inc
or
pop
call
notl
sub
mov
jmp
jg
adc
mov
in
jns
push
lret
out
inc
add
imul
sbb
fildll
adc
pop
xor
cmp
test
lret
test
or
loop
aas
loopne
pusha
repnz
fcmovu
and
pop
mov
imul
sbb
mov
rcll
pop
jl
aad
pop
cmc
push
lock
shrl
fistl
test
fistl
push
js
in
mov
inc
inc
pop
or
push
sbb
ljmp
std
pop
push
jle
rorl
adc
std
and
aad
dec
jl
loopne
jae
xlat
or
flds
iret
cmpsb
mov
xor
cs
and
dec
enter
int
cld
enter
sbb
into
call
int3
xor
in
cs
xlat
push
shrl
mov
cmp
je
roll
pop
or
dec
rcr
js
mov
cltd
int3
sbb
mov
and
std
xchg
cltd
stc
fwait
inc
nop
sbb
or
mov
cmp
mov
subb
push
push
shl
jmp
lods
cmc
sbb
clc
inc
jo
sub
xchg
add
or
jmp
fnsave
or
fcoml
adc
mov
sbb
sub
filds
jbe
push
mov
xchg
mov
push
negb
add
add
insl
jl
test
xor
push
flds
imul
es
lret
mov
lcall
adc
in
loope
mov
inc
popf
fdivrs
je
test
dec
cwtl
in
inc
push
sub
js
imul
pop
test
mov
and
mov
stos
inc
adc
and
pusha
shlb
stc
repnz
sbb
hlt
inc
pusha
jne
sub
jmp
pop
and
popa
out
adc
lcall
and
pop
or
hlt
pop
xchg
dec
sbb
test
pop
mov
imul
and
pop
adc
lods
jae
icebp
add
push
lahf
mov
mov
imul
call
aas
sub
pop
sub
rcll
pop
rcrl
enter
sub
stos
pop
dec
push
ret
rorl
imul
dec
lods
cli
nopl
adc
adc
push
push
cmp
and
test
gs
pop
andb
fwait
xchg
loopne
and
inc
mov
mov
push
adc
pop
cltd
xchg
das
sbb
mov
sub
rcll
mov
mov
or
push
push
dec
dec
cmc
mov
xchg
cmp
push
ror
ja
sbb
xchg
dec
dec
xchg
sarb
into
adc
mov
dec
mov
pushf
xchg
popf
jge
aaa
cli
arpl
popa
inc
iret
mov
lret
insl
dec
sar
test
mov
fcompl
mov
mov
xchg
inc
scas
bound
inc
adc
lret
fcoml
mov
sbb
int
push
xchg
enter
xor
sbb
stos
jmp
push
pop
sub
movsl
or
orl
fnstenv
cld
rcrb
xor
add
xchg
sub
rorl
das
dec
mov
in
cmpl
add
and
mov
dec
adc
pop
adc
xchg
mov
mov
push
imul
out
sub
psrad
jmp
test
lcall
ror
sub
lods
repnz
in
inc
lret
push
sub
ja
aam
aaa
stos
ret
int3
sub
out
mov
mov
pop
push
lock
adc
add
xchg
out
ficomps
cld
and
imul
sbb
add
ljmp
jae
and
stc
aad
jo
shl
mov
icebp
jo
jno
stos
mov
and
sub
mov
xchg
cld
push
dec
mov
cld
cld
sbb
pop
jb
out
fsubr
xor
pushf
fucom
xchg
adc
mov
xor
dec
cmp
mov
xchg
cs
cmp
adc
cltd
mov
fs
movzwl
xchg
adc
pop
jp
aam
test
pop
mov
cmpsb
movsb
test
xor
push
mov
add
scas
mov
jo
add
mov
mov
mov
jb
repz
cltd
or
push
sbb
jno
cwtl
pop
inc
dec
and
js
pop
lock
incb
cmpl
arpl
lret
movsb
clc
xchg
xchg
sbb
int3
cmp
jg
inc
sti
cmp
dec
add
cmp
mov
mov
add
cmc
mov
mov
ss
push
and
and
call
rcll
mov
mov
jnp
stc
mov
inc
pmaddwd
out
dec
sub
das
aaa
mov
push
insb
data16
add
sub
out
push
shll
ret
inc
push
sti
loopw
fcompl
popf
jae
pop
fsubs
test
inc
insb
lods
pusha
call
mov
ret
imul
pop
inc
xchg
ficompl
mov
and
or
dec
mov
das
sub
sub
and
push
orl
mov
movsb
stos
in
test
das
add
hlt
jl
jbe
dec
or
repnz
push
stc
mov
pop
popa
maxps
sbbb
adc
xchg
mov
rclb
aam
insl
dec
or
xor
aas
cmp
pop
cltd
xor
testb
pop
pusha
sarl
ret
data16
push
pushf
sbb
cmpsl
popf
mov
rorl
lods
pusha
inc
sbb
cmp
popa
pop
sub
dec
lods
or
ss
loope
pop
adcb
rcrl
icebp
ficoml
ret
ret
inc
dec
mov
jp
aas
mov
add
or
add
xchg
cmpsb
shll
jae
sti
pop
sbb
jae
leave
push
sub
xorb
jle
adc
lahf
inc
mov
push
stc
and
shrl
or
mov
ds
pop
mov
pop
xor
sbb
adc
repz
add
sub
pop
pop
dec
in
mov
out
popa
xchg
sub
cmp
inc
add
inc
pop
cli
cmpsb
jmp
xor
dec
movsl
push
es
out
test
fbld
int
std
out
xchg
adc
mov
push
sub
push
pop
sbb
mov
fistpll
clc
dec
and
loope
jge
sti
imulb
movsbl
idivb
mov
and
fs
sarb
lcall
movsl
pop
or
cmpsb
sbb
lds
pop
sbb
push
pusha
dec
fmull
mov
in
in
scas
mov
xor
arpl
repz
xchg
push
jg
push
jne
cmp
cs
cmp
cmp
pop
or
push
mov
add
sub
or
sbb
adc
fwait
incb
sub
mov
dec
ss
lods
bound
jl
push
jo
xor
and
jne
xabort
xor
xchg
ds
ljmp
and
mov
xor
sbb
push
iret
push
dec
jp
fstps
mov
xor
inc
add
dec
push
clc
data16
dec
dec
sub
add
mov
xchg
lea
pop
jg
xlat
sub
adc
jae
mov
push
test
out
fmull
dec
repz
movsb
out
jp
fs
inc
push
xchg
inc
xchg
jmp
repnz
imul
popf
lcall
cmp
xchg
xchg
icebp
mov
jnp
std
fisubrl
xor
mov
push
lods
jb
sti
push
ret
mov
push
lds
push
xlat
or
cmp
int
jl
xchg
pop
sub
inc
scas
dec
push
lock
sub
and
daa
inc
xchg
scas
add
push
or
cmc
inc
mov
jecxz
push
addl
sub
in
adc
and
sbb
test
cs
dec
nop
jne
movsb
sub
ja
or
inc
sbb
push
data16
ljmp
cmpsl
add
inc
xchg
cs
hlt
sub
daa
mov
pop
cmp
adc
scas
inc
add
xchg
cltd
pop
or
stos
sbb
jo
daa
or
popa
aam
je
pop
repnz
repz
mov
add
sbb
mov
mov
jnp
add
xor
inc
addr16
sti
ds
push
or
insb
push
sub
inc
xchg
jnp
mov
ds
xchg
scas
je
out
sub
mov
mov
xchg
test
loope
adc
pushf
and
add
push
or
sub
inc
mov
cltd
dec
cld
test
popf
push
lea
jne
fisttpll
sub
insl
dec
dec
lahf
sub
dec
sbb
popf
mov
cmp
or
mov
dec
jbe
mov
test
dec
xor
daa
add
ss
adc
mov
adc
lahf
mov
jecxz
sbb
push
notl
add
loope
pusha
into
mov
jne
push
dec
sbb
enter
jnp
xchg
std
in
orl
xchg
les
mov
popf
cmc
add
xchg
ficoms
pop
push
mov
ret
out
mov
fwait
xchg
test
and
shr
push
inc
repz
and
jae
cmp
or
cmpl
add
adc
pop
divb
xor
push
xchg
jl
shr
fisubs
in
mov
cmpsb
mov
lock
sahf
lret
inc
push
aas
mov
jge
mov
mov
add
mov
push
fsubr
aam
sbb
pop
adc
sub
jne
imul
ret
or
jg
dec
shlb
dec
mov
je
in
pop
ljmp
pop
sbb
mov
mov
mov
mov
adc
lock
repnz
jecxz
mov
stc
jnp
dec
fsubrs
cmpsb
pusha
pop
imul
push
jns
inc
jno
mov
cmp
scas
mov
mov
xchg
ror
mov
xchg
cmp
in
sub
imul
insb
xlat
into
jae
popf
inc
testl
arpl
mov
mov
icebp
pop
std
dec
mov
enter
sbb
xchg
jmp
std
test
xchg
icebp
js
loop
and
sbb
lods
rcr
in
daa
or
hlt
xchg
dec
xchg
add
and
sub
pop
mov
push
xor
ret
or
dec
fistps
int3
mov
mov
loope
adc
jb
jmp
je
enter
in
or
stc
test
xchg
testb
ljmp
pop
xor
stos
mov
mov
add
ss
int
movsb
mov
adc
scas
incl
push
lret
test
xlat
mov
repz
and
jno
xlat
inc
jo
cmc
inc
add
push
pushl
and
push
mov
pcmpeqw
mov
mov
pop
inc
ds
push
pop
mov
cmp
cmp
arpl
or
cmpsb
or
jno
mov
and
or
mov
xchg
les
or
sbb
lock
inc
sub
arpl
inc
das
and
shrl
xchg
jnp
sarb
mov
jnp
scas
roll
sti
nop
pop
push
jl
sub
fsubr
sbb
inc
fcmovb
mov
lret
cld
enter
gs
ja
inc
dec
sbb
xchg
stos
fs
or
add
scas
js
inc
out
je
and
or
rolb
pop
dec
int
orb
xchg
and
in
stos
sub
icebp
push
imul
dec
out
insl
inc
icebp
rol
icebp
dec
std
mov
hlt
lahf
sub
mov
cs
push
mov
pop
addr16
imull
mov
cmp
fwait
js
mov
out
fnsave
mov
test
nop
lea
shr
pop
cmp
or
mov
dec
lods
adc
sub
pusha
test
test
mov
push
mov
aaa
mov
push
mov
sub
sbb
enter
push
test
adc
sbb
push
fwait
fwait
imul
inc
test
ss
xchg
es
leave
add
mov
lds
pop
or
fs
xchg
rolb
shrb
mov
mov
mov
inc
pop
fadds
sti
outsb
lret
inc
and
cwtl
dec
lcall
sbb
push
daa
xchg
mov
xchg
pop
js
mov
daa
lea
out
or
mov
adc
mov
mov
sbb
cmp
in
imul
outsb
xchg
sub
aas
jl
popf
insb
xor
mov
ljmp
jb
xchg
add
and
lock
dec
pop
stos
or
stos
clc
jb
inc
pop
pop
out
leave
test
push
jbe
mov
shrb
test
jns
out
bswap
jne
inc
cmc
xor
push
bnd
mov
and
adc
adc
pop
movsl
fildll
and
xchg
test
push
lods
mov
xor
es
xchg
xchg
cmp
dec
inc
cld
push
jecxz
fstpt
sub
mov
inc
ss
jmp
and
push
add
aam
xor
xchg
and
xchg
arpl
loope
js
cld
lret
loop
sbb
sbb
stc
mov
sbb
arpl
int
sub
inc
ret
dec
movsl
cmp
aaa
adc
idiv
or
add
scas
psadbw
movsb
mov
cmp
adc
cmp
mov
mov
jmp
jbe
outsl
or
and
or
lock
sub
xor
out
rolb
ror
das
cmp
outsl
inc
sbb
imul
inc
movsl
jns
adc
add
scas
cmc
mov
cmp
xor
mov
pop
cmp
jg
imul
push
imul
pop
or
adc
scas
xchg
pop
xchg
push
sbb
pop
or
movd
sub
sbb
adc
jo
cli
testl
mov
scas
adc
xchg
mov
ja
sub
rcll
adc
outsl
push
loopne
test
imul
mov
sub
pop
loopne
mov
mov
lock
mov
mov
inc
fdivrp
or
clc
jns
or
mov
adc
mov
mov
xor
mov
xor
ds
out
mov
mov
add
adc
ds
dec
mov
inc
sarb
or
jne
lcall
hlt
mov
fwait
xlat
mov
push
shr
sahf
xchg
adc
inc
addr16
mov
mov
je
int
popa
test
mov
sub
add
imull
subl
stos
xchg
jnp
push
and
in
push
data16
popa
and
das
aad
lods
sub
gs
cmp
mov
push
mov
cld
out
mov
mov
jmp
inc
sar
imul
movsl
test
dec
jecxz
sahf
mov
sbb
pop
cmp
movsb
pushf
je
jle
sarl
cmp
in
push
fcmovnu
push
sti
loope
mov
dec
fwait
jns
test
add
insl
push
inc
push
push
daa
roll
inc
pop
test
mov
push
xchg
adc
mov
or
movsb
mov
pushf
xor
divl
fwait
out
stc
stos
std
lods
fldenv
les
repnz
mov
loope
jnp
xor
sub
xor
rolb
lret
fs
lret
cwtl
and
xor
idivb
mov
insb
xchg
jno
xchg
jbe
jle
or
call
je
adcb
mov
nop
and
mov
fnsaves
adc
int3
cltd
lea
cld
jp
ror
push
jge
pop
lea
frstor
movsl
or
and
xchg
mov
adc
cmc
lahf
add
inc
push
je
xchg
inc
mov
jge
inc
xchg
rcrb
leave
mov
ficoms
push
adc
repnz
pop
push
push
cmpsl
sbb
js
fwait
sbb
lea
xchg
pop
mov
mov
pop
pop
fsubs
repz
mov
fdivrs
ret
xor
rcll
xchg
mov
add
insl
xor
outsb
das
adc
cltd
stos
xor
jle
lods
lds
cmp
xchg
hlt
aad
cmp
es
mov
and
fsubr
pop
cltd
xor
and
js
xchg
pop
repz
xor
jmp
dec
cmp
loopne
and
inc
or
add
mov
jge
cmpsb
ljmp
addr16
imul
test
sbb
iret
sbb
fsubr
or
pusha
cmova
push
mov
das
and
scas
sub
mov
mov
jbe
push
push
fnstenv
enter
leave
pop
xor
or
cmpsl
adc
adc
fisubrs
and
sub
push
sbb
mov
sub
xor
lds
mov
mov
js
fists
scas
push
mov
repnz
mov
jge
movsb
in
pop
xor
inc
push
sbb
in
cmc
mov
shlb
mov
aam
out
xchg
add
lock
addl
dec
jnp
dec
fidivs
jg
popa
xchg
in
adc
mov
mov
add
pop
jo
adc
sbb
shrl
insl
dec
aas
stc
xor
sbb
push
cmpsl
push
loopne
loopne
cmpsb
push
xchg
ja
test
incb
arpl
mov
jo
scas
inc
loopne
inc
lods
orb
sub
pop
inc
dec
push
and
cmp
daa
pushf
icebp
dec
in
or
scas
adc
lea
mov
add
cltd
ds
arpl
add
push
lea
jmp
shll
dec
jmp
cld
pop
std
jg
or
xchg
lods
cltd
jne
sbb
or
lret
add
lret
jns
imul
pop
stos
cld
mov
repnz
jnp
scas
imul
cmpsb
mov
mov
push
mov
sbb
mov
or
push
lret
pop
xchg
push
ret
add
jo
loop
insl
pop
fwait
mov
xchg
aas
mov
movsb
mov
loopne
dec
hlt
pop
sub
or
dec
std
push
mov
es
out
lahf
icebp
mov
cmp
out
push
cmpb
sub
das
pop
jl
shrb
xlat
inc
mov
or
dec
mov
pushf
je
ja
in
push
ficoms
jmp
xchg
xchg
inc
add
pusha
push
ficomps
push
lret
fsubrs
movsb
jg
imul
sub
in
inc
mov
inc
jecxz
test
sti
pop
das
iret
jo
dec
mov
out
and
shll
cs
out
push
inc
xor
pop
adc
stc
insl
lods
std
jle
dec
add
imul
iret
mov
push
idivl
adc
dec
fisubs
cmc
push
xchg
std
lret
push
or
out
add
cmp
or
imul
add
xchg
in
les
ror
jge
mov
inc
and
and
xor
in
pop
shll
into
pop
or
mov
cmc
inc
or
fwait
jae
mov
scas
adc
mov
clc
sub
and
sti
xor
inc
fs
push
xchg
ficoms
cli
adcb
mov
repz
hlt
hlt
push
mov
enter
dec
jle
pop
sahf
dec
add
push
pop
and
fwait
es
and
shl
cltd
repz
lcall
test
sub
inc
cltd
dec
mov
fnstsw
cld
or
aad
pop
mov
adc
inc
add
lcall
xor
add
jb
dec
xchg
arpl
jg
adc
lret
add
push
jmp
xor
fcmovbe
push
stos
dec
aaa
stos
fwait
pushf
lret
out
in
push
mov
mov
insb
ss
imul
mov
jb
lret
std
call
lods
pop
clc
fisttpl
lcall
outsb
insb
addr16
sbbb
insl
outsl
jge
push
inc
jnp
dec
push
cli
mov
ds
add
in
inc
mov
mov
pushf
mov
test
gs
ja
jbe
clc
loop
insl
nop
ret
push
shll
mov
test
xchg
mov
or
flds
out
fucomi
out
cmp
mov
add
lret
jb
jb
cmp
ret
pop
jle
fwait
mov
pop
cmc
lds
loope
fistpl
or
mov
and
xchg
cmp
ljmp
sbb
clc
into
mov
call
pop
lods
sub
push
imul
nop
stos
push
push
lods
das
mov
jecxz
xor
push
mov
adc
aaa
nop
popf
inc
mov
gs
or
jae
pop
mov
insl
aaa
push
or
dec
push
lock
jl
iret
mov
sti
mov
add
sbb
pop
pop
iret
or
push
inc
dec
and
ljmp
add
jl
popa
mov
les
test
inc
addb
cli
popf
lahf
sbb
aas
scas
xor
sbbb
popa
fiadds
sub
xchg
nop
std
repz
enter
addr16
pop
mov
xchg
cmp
gs
das
xchg
scas
repz
lea
sbb
adc
jbe
data16
xchg
dec
xchg
pop
pop
sahf
push
testl
mov
cmp
sahf
xor
jecxz
movsb
mov
cwtl
stc
loop
push
dec
push
lret
dec
xchg
lock
jecxz
sti
push
cmp
push
xor
mull
daa
sub
icebp
aam
mov
popw
pushf
dec
mov
lahf
jge
popa
repnz
and
or
sub
loope
das
push
stos
pop
add
push
je
sub
sbb
mov
repnz
dec
cwtl
lods
stos
sub
or
hlt
out
aad
ret
jbe
mov
pop
movsl
test
mov
xor
sbb
add
inc
jecxz
test
add
js
loop
push
clc
push
aas
xchg
fdiv
xchg
clc
jp
dec
pop
jmp
fidivl
mov
shll
mov
mov
mov
call
sahf
cwtl
pop
test
repz
arpl
mov
out
pop
or
cli
lds
push
in
pop
inc
decl
fbld
inc
test
xor
rclb
mov
xor
push
jl
sahf
inc
daa
add
mov
xor
pop
xchg
std
loopne
in
xchg
lods
xchg
xor
add
mov
popf
pop
sbb
rcr
fimuls
dec
cs
push
push
imul
sub
mov
add
push
dec
out
call
sub
cld
mov
scas
push
dec
mov
sub
int3
cvtdq2ps
cli
divl
push
mov
cmp
add
lock
pushf
jle
addr16
scas
lds
mov
push
inc
ljmp
mov
cmp
andl
ljmp
in
add
jo
add
cmpsb
imul
push
mov
jmp
xchg
data16
shrb
xorb
sub
and
add
jno
sbb
mov
mov
insl
push
cli
xchg
ljmp
orb
lahf
xorb
mov
sbb
nop
test
push
stos
pop
ret
jmp
sbb
xchg
fdivp
sbbb
and
enter
adc
xor
lock
mov
mov
ss
xor
lock
push
or
or
adc
mov
push
mov
arpl
repnz
divl
sbb
or
stc
daa
push
jmp
pop
and
xchg
add
mov
or
imul
pop
cmp
xchg
jecxz
xchg
sbb
mov
mov
notb
inc
outsl
or
out
xor
push
fcomp
xchg
rclb
in
sahf
sbb
inc
aas
adc
push
mov
leave
pop
mov
std
dec
pop
adc
mov
lahf
dec
mov
sub
out
mov
scas
sbb
aaa
test
jge
sahf
push
lock
cpuid
push
mov
ss
fnsave
je
xchg
xor
scas
imul
mov
imul
push
popf
sub
je
loopne
mov
sarl
into
jge
repnz
cmp
icebp
sti
jp
scas
mov
or
test
sub
int
ljmp
and
scas
lea
inc
shlb
add
xchg
icebp
jne
cmc
xlat
imulb
mov
jae
lahf
mov
push
int
inc
fsubs
jb
bound
ficoms
out
repnz
jno
in
jbe
lock
dec
and
mov
cli
je
pop
xchg
ja
pop
lds
aad
mov
xchg
cli
lret
cmp
lock
cwtl
mov
movsl
jp
mov
cmp
pop
fnsetpm(287
stc
push
fistpl
mov
iret
and
adc
mov
mov
mov
stc
xchg
adc
dec
adc
jge
scas
mov
xor
aas
test
fwait
pop
ljmp
mov
xor
jo
mov
mov
sbb
and
mov
cmp
cmp
fmuls
ja
adcb
adc
test
adcb
les
faddl
mov
push
imul
xlat
ret
push
fmuls
xchg
lahf
mov
mov
pop
and
push
stos
mov
cli
and
pop
bound
sub
loop
mov
jl
pop
sub
pop
push
mov
cmp
flds
test
jae
out
push
jp
jnp
xchg
sbb
cmc
xchg
jmp
stos
xchg
iret
and
nop
jp
sub
add
mov
std
ret
or
xchg
add
repz
jge
ret
xlat
add
mov
adc
mov
pusha
mov
sub
fwait
cmp
sbb
enter
mov
push
inc
clc
inc
addl
adc
fucomi
jmp
and
scas
cmp
jne
sahf
push
shl
fwait
cmc
lcall
dec
cmp
mov
xchg
es
shl
add
xor
lock
fcomp
repnz
jo
add
mov
mov
adc
aad
sar
sbb
and
fistpll
and
or
pushf
bound
ss
mov
sbb
cmpsb
fadd
xor
jno
push
mov
lock
pop
bound
jg
sub
out
xor
les
mov
js
lret
es
xor
sar
push
addr16
outsl
mov
cmp
imul
or
lea
les
icebp
jns
cmp
shr
mov
push
dec
or
outsl
jb
repnz
fisttps
mov
mov
subb
pop
call
scas
inc
clc
adc
scas
jmp
pushl
push
xchg
ljmp
push
xchg
and
popf
xor
push
xchg
dec
xchg
call
inc
push
lds
and
into
icebp
nop
xlat
or
jge
aad
cmp
cmc
mov
ficompl
int3
cwtl
xchg
xor
jle
fmuls
aad
loop
inc
pop
mov
and
push
jge
push
outsb
inc
mov
fstps
mov
xor
dec
xor
add
imul
mov
inc
stos
pop
mov
pusha
inc
mov
mov
sub
stos
mov
sbb
sbb
out
stc
insb
pusha
mov
leave
pop
in
aam
fmull
mov
fidivl
xor
adc
xor
sub
cmp
push
cmp
jecxz
testb
push
sub
sub
rcrb
xchg
maskmovq
imull
push
xor
ljmp
sbb
jl
es
fst
insb
pop
sbb
xor
stos
ds
aas
scas
loope
lods
sbb
bound
push
or
js
xor
jnp
out
push
cmp
jnp
cmp
mov
sub
jnp
sarb
or
decl
cmp
stos
dec
incb
fistpl
push
pop
sti
ret
lds
adc
push
lea
es
shr
xor
leave
xchg
es
sbb
out
cmp
xlat
arpl
js
cmpsb
xchg
lods
xchg
mov
mov
repnz
push
addl
mov
add
xchg
or
jb
pop
mov
ss
fisttps
cmp
rclb
and
push
mov
cmc
push
out
mov
popf
pop
std
rcl
test
and
dec
adc
cmp
addr16
mov
outsb
cmp
and
std
frstor
sahf
or
cli
scas
mov
or
pop
dec
stc
sub
insb
ljmp
xchg
sub
and
mov
cld
cmpb
and
dec
mov
fistpll
sarb
inc
jmp
in
out
mov
es
jne
movsb
in
push
mov
sbb
mov
dec
pop
ret
cmp
fsubrl
cmp
mov
jne
cwtl
std
int3
addr16
enter
adc
push
ja
fmuls
addr16
push
mov
pop
addb
mov
movsb
xchg
fisttpl
cmp
fs
loop
mov
xor
aaa
lock
xchg
scas
fildl
cwtl
stc
dec
ds
lods
das
xchg
stos
iret
jmp
das
push
jae
inc
xchg
mov
mov
clc
imul
add
mov
nop
mov
adc
mov
xor
mov
pop
test
adc
or
mov
out
push
test
pusha
ss
jno
loope
inc
jne
inc
adc
outsb
in
jo
sahf
and
rcll
sbb
sbb
repnz
jno
cmp
mov
mov
cmp
xchg
xchg
push
and
mov
jg
mov
sub
adcb
in
sub
imul
inc
and
outsl
mov
ljmp
push
lret
icebp
lods
mov
arpl
pop
clc
xchg
push
mov
test
mov
dec
lret
out
cmp
cmp
mov
pop
mov
dec
ds
js
jp
imul
je
sbb
mov
popl
push
adc
pop
or
dec
mov
je
mov
call
xor
cmpsb
xchg
lock
or
les
loop
sub
adcb
fstl
adc
ja
js
enter
jl
sub
push
sbbl
in
mov
adc
in
jae
mov
scas
cmp
sbb
imul
xorl
dec
xchg
shrl
nop
test
mov
lret
aaa
adcl
imul
loopne
xchg
add
aad
add
xor
sbbl
sti
and
filds
mov
arpl
mov
mov
pusha
dec
fadds
mov
in
sbb
inc
es
repnz
test
pop
std
mov
jle
sbb
fsubr
adc
test
mov
mov
jge
rcll
jmp
cmp
divb
popa
int
cmp
jae
xor
popf
jne
bound
cmp
popf
or
out
lds
mov
inc
sub
data16
sub
insl
loopne
cmc
push
cmp
cmpsl
idivb
je
or
add
mov
cmp
mov
mov
cwtl
or
adc
cwtl
adc
xor
orb
push
mov
xor
adc
inc
lcall
dec
lods
in
adc
sbb
out
or
nop
outsb
dec
pop
dec
inc
int
movsl
and
je
mov
insb
inc
movb
add
fstps
gs
inc
hlt
gs
jbe
test
imul
orb
sbb
and
push
lods
repnz
adc
mov
dec
rorb
repz
in
lret
push
mov
js
xorb
sbb
mov
lods
movsl
setl
ljmp
mov
pop
push
cltd
lea
pop
ljmp
fdivs
mov
xchg
idiv
mov
inc
shrb
mov
jnp
ja
mov
in
jmp
insl
mov
fdivl
int3
sub
push
add
jo
mov
lea
sbb
push
shll
push
jb
ds
lahf
mov
jnp
xchg
push
loop
jnp
mov
in
test
jno
lock
add
and
mov
xchg
cwtl
pop
call
add
rdpmc
xchg
mov
sub
inc
pusha
mov
lahf
xchg
cmp
decb
shlb
sahf
push
sub
xor
les
push
popf
and
or
jo
pusha
aas
push
jb
push
xchg
popa
rorb
xchg
outsb
xorl
or
ret
push
imul
fidivrs
jp
movsb
cmp
in
popf
shrl
push
jecxz
out
sub
movsl
mov
mov
sub
leave
stos
imul
xlat
adc
loopne
inc
sub
sub
daa
xlat
xchg
iret
aaa
sbb
andb
sub
fwait
xchg
cmp
push
xor
out
stos
add
jl
out
mov
arpl
sahf
fnsave
mov
and
cmp
js
stos
aas
jp
clc
xchg
insl
cld
xchg
xchg
push
jns
mov
test
loop
xor
shrl
mov
aaa
es
dec
push
pop
arpl
and
xchg
into
cmpsb
push
push
pop
xor
sub
imul
mov
lds
sar
out
jl
pop
fimull
push
sbb
add
fdivl
mov
cwtl
js
jo
das
cld
dec
inc
std
sahf
lea
and
sbb
jmp
cmpsl
and
inc
xlat
sbb
addb
daa
dec
add
dec
aam
fidivl
push
add
aaa
stos
shlb
fnstsw
pop
imul
loope
addr16
mov
sbb
ds
ror
jne
cmp
sub
xchg
xlat
xchg
ja
inc
outsl
sub
retw
outsl
mov
dec
push
jge
xchg
lea
les
cmp
cmpsl
lret
jecxz
xor
in
adc
sbb
out
mov
out
mov
in
push
aaa
sub
lea
mov
add
bound
and
pop
fmull
dec
and
inc
outsb
lods
lcall
inc
jp
pushf
loope
in
clc
fdivp
mov
enter
mov
fmul
bnd
lcall
cmp
test
sbb
stc
repz
jmp
fidivrl
adc
sbb
sahf
xchg
cli
mov
into
adc
xor
inc
xchg
jecxz
pop
or
mov
insl
jns
and
pop
aaa
in
push
sub
insl
int3
mov
xchg
sti
cmpsl
mov
inc
sbb
iret
decb
inc
xchg
add
cltd
or
les
adc
pop
fxch
mov
divl
test
in
out
pusha
jo
jl
imul
scas
andb
sar
leave
in
pop
arpl
fs
repz
xorb
nop
lcall
xchg
fs
mov
or
add
cmp
sti
sub
mov
pop
cmpsl
jge
push
xchg
nop
add
imul
daa
pop
cmp
sbb
adc
pop
ljmp
xchg
push
sbb
clc
ret
mov
pop
lret
cwtl
cld
cli
imul
jae
dec
sbbb
rcrl
in
or
inc
xchg
ljmp
xchg
mov
push
mov
ss
xor
jne
dec
xor
jmp
js
cmp
or
es
je
mov
dec
mov
repz
mov
pop
xor
aaa
js
mov
sahf
xchg
mov
icebp
xchg
aad
inc
dec
xchg
add
adc
sbb
mov
xchg
cwtl
xchg
sbb
daa
jmp
shll
mov
mov
imul
stos
out
adc
nop
pop
mov
or
js
jbe
add
test
std
cmp
jge
xor
push
adc
mov
push
push
loope
clc
inc
into
gs
js
and
jno
cmpl
jbe
cmp
rcrl
dec
ret
cmp
xchg
ss
inc
fiaddl
mov
or
adc
dec
sahf
xchg
aas
cli
push
push
mov
push
pop
fdivl
jecxz
xor
pop
mov
dec
test
or
sub
dec
ljmp
xor
push
jbe
fwait
mov
in
dec
lret
jae
cwtl
ret
xchg
push
push
shll
mov
push
push
scas
sarb
or
fiaddl
and
mov
pop
mov
in
cmc
cmp
and
repz
cmp
cmp
adc
bound
jle
repz
inc
in
inc
loopne
jae
aas
or
push
sub
cmp
aaa
mov
lods
mov
pop
imul
cwtl
sbb
adc
daa
inc
test
js
ss
jne
dec
lods
pusha
sbb
fnsave
aam
xchg
mov
mov
notl
fwait
test
xchg
std
cmp
push
add
push
xchg
les
mov
xchg
mov
int
dec
adc
add
inc
xchg
jno
mov
in
dec
outsb
shrl
aad
into
mov
lods
fnstcw
jmp
xchg
cwtl
pop
iret
xor
xchg
addb
pop
adc
notl
mov
mov
push
movlps
xchg
cmpsl
add
push
push
jecxz
pop
out
clc
js
dec
mov
int3
push
adc
pop
xchg
repnz
or
mov
inc
leave
and
jl
stc
movsb
cmp
mov
jg
mov
and
sahf
sarl
cmp
orb
arpl
test
push
addr16
rolb
in
mov
push
rep
push
sub
adc
sarl
xchg
mov
or
mov
or
ljmp
mov
inc
sub
pop
bound
inc
mov
fildll
ljmp
add
js
mov
outsl
movsb
pop
cmp
cmpsl
repz
cwtl
cmp
shll
jl
les
es
adc
cmp
aad
sbb
mov
mov
repnz
pushf
jge
adc
test
mov
nop
cmc
push
inc
test
in
ret
divb
pop
xor
out
mov
sbb
push
stos
into
xchg
sub
cltd
mov
roll
ja
xor
into
xlat
jg
xchg
pop
xchg
push
subl
test
pusha
sub
sti
dec
scas
push
lods
sbb
loop
and
jnp
push
inc
xchg
mov
mov
divb
jl
or
outsb
cmpb
ljmp
ds
subl
ds
cmp
ret
dec
cmpsb
xor
jns
aaa
or
mov
ret
push
cmc
cmpsl
mov
testl
movsl
enter
sbb
orb
jnp
popf
xor
data16
js
stos
ret
mov
and
stos
adc
sbb
test
les
cwtl
mov
pop
lahf
adcl
stos
mov
fmul
movb
xchg
inc
mov
dec
jecxz
clc
inc
jbe
adc
mov
xor
lret
movsb
out
imul
mov
shll
lods
jo
mov
add
insl
cmp
cmp
in
popf
xor
cmp
or
rcll
cmc
shr
dec
xchg
and
cmp
imul
orb
sub
mov
sbb
jns
xchg
adc
fdivrl
hlt
push
movsl
mov
adc
pop
push
in
sub
mov
aam
shl
not
sub
insb
nop
sbb
rclb
cld
push
dec
cmp
dec
sbb
mov
outsl
or
push
in
add
shll
xchg
addr16
xchg
sti
cmp
test
lret
dec
push
dec
mov
dec
dec
add
out
adc
ret
test
inc
push
jge
insb
ljmp
add
push
negl
leave
loopne
inc
xchg
movsb
ss
mov
mov
push
lods
mov
sbb
and
aam
movsl
sbb
jb
pop
in
xor
les
lret
or
and
mov
pop
fistps
in
gs
cmc
xlat
or
addr16
insb
out
je
mov
dec
push
orb
pop
in
int3
adc
lods
add
dec
cmp
cli
decb
out
mov
jns
add
cmp
stos
sbb
iret
sarb
out
pop
and
rolb
dec
fs
adc
xor
xlat
repz
and
std
xchg
jns
mov
jecxz
fstp
les
push
lds
dec
test
int
sub
mov
popa
dec
xchg
jno
pop
jns
jnp
push
cld
or
imul
push
jno
jp
inc
mov
loope
dec
arpl
es
dec
sbb
shrl
sbb
add
xorb
push
lret
js
aam
mov
mov
and
or
setnp
cli
sahf
push
jnp
or
pop
push
jmp
sbb
ljmp
movsb
insl
in
fildl
imul
mov
xorb
jnp
cmpsb
lods
push
icebp
stc
lcall
jl
mov
pop
std
fdivs
pop
cmc
pop
je
pop
jnp
or
es
or
sbb
push
jb
lcall
mov
pop
mov
imul
stos
push
lods
sub
movsl
sbb
fwait
jge
loop
shrb
xor
adc
sub
stos
sub
mov
shlb
or
jb
mov
jmp
pop
pcmpeqd
in
inc
ror
imul
ss
int
and
jmp
nop
xchg
mov
mov
test
call
jne
xor
jb
push
xor
fiadds
push
idiv
aas
xor
dec
sub
js
jae
iret
push
sbb
mov
lds
setle
pop
push
daa
daa
adc
xchg
addr16
pop
jns
xchg
repnz
cmc
xchg
jb
int3
xchg
pop
aad
inc
dec
sub
jne
jmp
push
pop
fwait
jnp
int3
cli
repnz
or
mov
ret
cmp
fstps
in
mov
test
stc
lret
cmp
jae
daa
pop
cmpsl
xor
xchg
xchg
jne
je
sbb
mov
push
push
mov
nop
jle
mov
and
cmp
out
fdivrs
aaa
adc
pop
pop
test
mov
ror
jo
xor
push
xor
xlat
sub
cmp
mov
sub
clc
fimuls
add
leave
mov
pop
adc
push
ds
aaa
popf
gs
bound
mov
lret
and
mov
in
xchg
dec
adc
stos
cli
dec
popa
aad
mov
mov
pushl
movsb
jb
or
pop
scas
fcompp
in
and
adc
rcrb
in
sbb
xor
enter
dec
mov
in
loope
ret
mov
mov
shlb
jbe
mov
inc
cwtl
mov
icebp
lock
jnp
jg
shlb
aad
jl
mov
sbb
mov
xchg
mov
shrb
pop
inc
push
mov
cmp
sub
and
jge
cmpsl
aam
push
adc
sbb
ja
push
xchg
mov
inc
xor
scas
jnp
roll
dec
outsl
jge
shl
or
mov
into
jmp
add
int
cmpb
sub
mov
pop
popf
and
mov
cwtl
mov
and
andl
int
es
pop
rcrl
insl
xor
dec
mov
adc
in
cmc
fstpl
sti
shl
sbb
dec
sub
loopne
sti
adc
out
or
aam
cmp
push
mov
dec
push
jmp
dec
rorl
or
inc
push
xlat
xor
lods
cmp
adc
aad
pop
lods
cmpsl
pop
sub
cmp
in
dec
xchg
jae
mov
mull
jno
xor
pushf
sti
lahf
rcll
ljmp
push
xchg
repnz
mov
sbb
dec
pop
in
rcrb
jmp
loopne
jns
jg
ljmp
icebp
je
ljmp
dec
sbb
fsubrs
jnp
cmp
push
or
push
xor
fstpl
dec
js
mov
jg
dec
nop
jbe
and
rcrl
xacquire
mov
cltd
push
mov
ja
ljmp
in
ljmp
jmp
and
sbbl
and
jb
xchg
roll
movsl
pop
jne
nop
scas
movsb
xor
dec
repnz
aaa
in
cmp
xchg
adc
lock
cmp
push
push
push
not
sub
fsubrp
test
xchg
in
mov
mov
push
push
lcall
inc
jae
sub
cmpsb
mov
xchg
loope
aaa
sbb
daa
lret
das
mov
ja
and
xchg
pop
test
add
loope
arpl
je
cmp
sbb
enter
mov
sbb
or
popa
sub
cld
cmpsb
into
adcb
add
xor
lcall
pushf
add
pop
aas
stos
mov
pop
imul
adc
xchg
mov
push
out
insb
scas
jnp
daa
mov
mov
insl
incl
lods
add
rcrb
fimull
jno
adc
mov
pop
cmp
imul
inc
aad
ja
xor
push
jge
adc
cmpsl
into
pcmpeqb
mov
jnp
push
stos
push
cmp
mov
lret
in
cmp
faddl
mov
adc
cmovle
mov
iret
push
dec
mov
outsb
int
arpl
push
mov
outsb
shl
mov
jg
mov
test
pop
mov
mov
or
jle
mov
ret
das
pop
popf
ret
cmpsl
daa
mov
hlt
push
mov
lret
jo
mov
jbe
shrl
and
in
aas
pushf
mov
and
sub
shrb
inc
jne
xlat
push
sub
sbb
mov
popf
pop
fwait
xchg
in
adc
mov
jp
test
rcrb
adc
fwait
dec
popa
lret
mov
push
ret
ljmp
cs
stc
xchg
mov
inc
fcoml
std
loop
adc
adc
push
or
ret
xlat
aam
or
pop
jl
jns
inc
jp
push
movsb
outsb
mov
lret
push
jbe
imul
daa
jecxz
xorl
jp
xor
pop
xchg
dec
loope
inc
cltd
int
jp
dec
inc
jb,pt
xchg
dec
mov
lcall
shr
mov
cli
int
int3
jecxz
mov
jmp
pushf
adc
push
push
fimuls
in
xchg
sub
and
scas
sbb
mov
imul
es
push
xchg
add
pop
bnd
mov
icebp
test
ja
jo
insb
fadds
xchg
test
adc
mov
fisttpll
xchg
popa
mov
bound
in
jne
mov
xor
xlat
and
mov
cld
pop
in
mov
shr
lds
imul
pushf
inc
faddl
pop
cmp
lea
cld
out
push
in
lret
pop
adc
fbstp
and
es
adc
xor
xchg
mov
jp
jne
xor
or
outsl
jb
stos
mov
cmpps
in
pop
inc
cmp
xlat
les
sbb
cmp
dec
aaa
rcl
jge
cmp
pop
mov
out
pop
ss
jnp
in
cmp
fcompl
and
inc
aam
xchg
xor
mov
inc
insl
test
push
adc
mov
dec
adcb
sub
mov
mov
test
xchg
movsl
mov
pop
push
iret
enter
enter
pushf
add
sahf
xchg
cmp
ja
add
inc
cwtl
mov
and
adc
mov
push
and
andb
xchg
jge
std
aaa
adc
cmp
repnz
pop
aaa
dec
sub
jmp
lods
gs
mov
jmp
sub
sti
push
ret
mov
xchg
sbb
test
out
shll
mov
out
dec
in
imul
mov
popa
test
lods
jecxz
ret
and
dec
arpl
daa
adc
xchg
mov
dec
xchg
mov
aas
out
fildll
pop
jne
mov
lods
mov
test
jmp
jp
mov
xor
testl
sbb
sbb
icebp
jmp
jne
fildll
adc
xchg
imul
dec
and
imul
push
out
insl
cwtl
inc
xchg
outsl
test
dec
inc
adc
lea
sub
in
sub
cmp
nop
loop
xor
aam
jmp
daa
imul
adc
pop
jns
and
pop
shrl
add
mov
fistps
cmp
xchg
jnp
out
std
fnop
add
dec
xchg
push
sub
and
aas
test
cltd
hlt
mov
and
jnp
dec
out
sbbb
mov
jo
mov
xor
aas
and
jle
cld
fsubs
inc
xchg
or
call
and
lahf
add
push
fnstsw
cwtl
xor
scas
mov
enter
cmp
mov
fucomip
or
dec
sub
mov
jne
mov
xchg
mov
ds
adc
mov
xchg
inc
shlb
test
stos
xor
mov
jo
push
or
rcrl
insl
pop
pop
lahf
scas
mov
nop
push
mov
in
dec
push
mov
push
pop
in
pop
adc
je
mov
cmpsl
mov
pop
pop
inc
mov
clc
int3
pop
imul
stc
aad
push
loope
je
xor
popf
pop
nop
loope
inc
jl
jo
push
inc
and
pop
cld
xchg
enter
insb
inc
movsl
push
cmc
add
mov
pop
xlat
imul
es
add
mov
xchg
mov
and
mov
mov
pop
adc
imul
repnz
cmp
popa
mov
pop
scas
cli
add
in
inc
test
mov
repz
sub
inc
mov
outsl
mov
and
rolb
dec
push
fnstsw
or
sahf
push
sbb
daa
repz
or
fstl
xchg
ret
dec
adc
mov
hlt
mov
iret
inc
outsl
punpckhbw
and
fwait
gs
push
aad
or
ret
push
ds
repz
leave
iret
aaa
jo
mov
nop
jl
and
cmp
push
iret
sub
aad
or
sub
sub
fdiv
ret
sti
pushl
dec
mov
mov
inc
jbe
js
mov
sarb
inc
adc
cltd
icebp
cmpl
test
imul
shll
jmp
push
mov
add
pop
icebp
cmpsb
jecxz
or
jmp
movb
lods
pop
cmp
cwtl
hlt
outsb
lods
out
cmp
lea
cmpsl
aaa
mov
lahf
fsubr
out
or
addr16
mov
repz
mov
pop
out
psllq
scas
leave
push
bound
or
aam
int
push
or
inc
xor
outsl
or
call
mov
out
jnp
sub
test
fcoml
adc
lds
fwait
jno
mov
fcompl
mov
inc
pop
mov
push
or
dec
pop
push
std
jns
jns
aam
add
clc
or
leave
out
pop
inc
sbb
out
das
scas
das
arpl
sbb
or
xchg
mov
push
mov
int3
leave
mov
dec
sbb
add
push
mov
ret
jbe
pop
mov
lcall
aam
lds
mov
push
lods
arpl
cmc
jp
repz
imul
clc
inc
push
mov
movsb
outsl
add
mov
gs
cmpsl
mov
jbe
push
mov
or
push
or
mov
mov
dec
pop
jp
test
add
xlat
mov
sbbl
xor
incb
mov
push
dec
mov
sub
mov
mov
out
pop
into
std
out
mov
pop
cmp
and
push
stos
clc
push
mov
aad
aaa
jnp
pop
dec
push
dec
lret
pop
jmp
test
cmp
push
loop
out
enter
pop
jne
outsb
dec
dec
int3
mov
push
mov
jbe
repz
nop
mov
sbb
movsb
call
sahf
push
cmp
add
inc
jl
adc
imulb
cmp
xlat
fwait
pop
hlt
pop
scas
cld
enter
xchg
jnp
sbb
fisubrl
push
movsb
mov
mov
jno
scas
add
lods
ss
or
hlt
out
mov
inc
sub
iret
imul
out
jns
jg
repnz
stos
xor
push
jnp
mov
adc
mov
sub
xor
mov
fcomp
dec
mov
and
dec
leave
shll
int
aas
push
popa
out
xchg
add
xchg
adc
xchg
sarl
inc
std
rcrl
in
mov
pop
xor
mov
push
movsb
xchg
cmpsb
mov
fists
lret
scas
jg
das
icebp
fadds
jg
notb
sbb
ss
add
and
sahf
xor
mov
jl
cmp
mov
mov
faddp
dec
sbb
mov
test
shrb
add
imul
mov
push
pushf
sub
add
push
lea
jo
or
xor
aaa
cmp
addb
mov
and
data16
sti
cmc
mov
mov
shrl
xor
jno
cltd
xchg
bound
inc
xor
in
mov
dec
test
adc
cmp
es
ret
ret
shll
loop
divl
pop
mov
popw
cmpsb
and
out
inc
out
incb
jmp
rclb
adc
mov
xchg
and
in
and
inc
movsl
adc
sub
scas
outsb
aaa
fwait
xor
clc
and
xlat
cltd
xchg
xchg
sub
in
shlb
xchg
stos
in
addr16
jle
das
add
dec
rclb
dec
xchg
dec
xchg
dec
cwtl
adc
or
jl
mov
or
mov
aas
fistpl
test
in
push
frstor
pop
jl
inc
adc
adcl
push
pop
fs
sub
mov
mov
and
shlb
rolb
dec
cmpsl
mov
mov
cmpb
scas
les
das
cld
out
xchg
adc
outsl
cwtl
or
imul
or
test
adc
sbb
fdivs
cltd
jno
xchg
jo
mov
sbb
cltd
mov
lds
mov
fdivrs
dec
fdivrs
lret
test
mov
mov
push
cmp
xor
cmp
mov
in
jb
push
lret
sti
push
sub
and
aas
cmp
mov
sub
incb
xchg
xor
mov
lods
dec
shrl
dec
repnz
insl
jbe
cmp
inc
inc
imul
arpl
adc
push
xchg
inc
out
cmp
mov
jo
cmpb
pop
dec
pop
xor
lret
loop
test
and
xor
dec
lret
xchg
fdivl
cwtl
jp
aad
add
aaa
jg
inc
ss
stos
jg
mov
cmp
sub
in
mov
imul
daa
mov
mov
pop
nop
xor
mov
xchg
repz
out
int
mov
cltd
testb
jne
mov
and
out
jg
movsl
arpl
data16
cs
push
dec
push
pop
dec
jns
fstp
stos
shr
cmp
and
sub
inc
inc
jge
mov
and
lock
inc
iret
ja
adc
jecxz
sbb
iret
loopne
jno
xor
cmp
mov
xchg
repnz
rcrb
mov
andl
or
mov
or
inc
scas
sti
xor
mov
cltd
or
test
in
imul
cmp
add
lods
push
sbb
mov
push
sti
lea
jg
ret
outsb
icebp
loope
pop
jmp
icebp
fisttpll
shr
cmp
scas
movsl
hlt
icebp
int3
arpl
popa
push
sbbb
xchg
outsb
int3
xor
arpl
test
lret
mov
jle
xlat
mov
andb
in
push
mov
pop
lret
xchg
int
xor
je
pusha
call
or
push
jb
cmpsb
into
adc
cmp
dec
mov
lcall
int
or
adc
les
adc
ret
mov
push
popa
sbb
push
repnz
test
inc
adc
mov
cmpsl
in
push
jo
fisttpll
fldenv
popa
fildl
cmp
movsb
jl
sbb
push
mov
and
aad
pop
jo
rcll
clc
pop
xchg
outsb
outsb
add
in
mov
hlt
sti
jle
mov
insb
xor
inc
stc
jg
mov
into
testl
or
outsl
hlt
pop
in
add
int
test
xchg
lahf
loope
mov
pusha
xchg
push
xor
cld
jecxz
cltd
mov
adc
popf
xchg
lock
decb
leave
xlat
jecxz
cwtl
hlt
inc
sbb
mov
mov
ss
ss
mov
and
sbb
mov
and
mov
pop
bound
adc
add
adc
add
xor
mov
mov
sbb
cld
sbb
pop
cmp
icebp
cli
scas
inc
leave
out
cltd
sbb
sub
movsb
lods
mov
scas
push
fdivs
xchg
ret
addb
lcall
dec
xchg
pop
outsl
mov
push
call
add
pusha
fildll
data16
inc
aaa
dec
enter
xor
pop
mov
add
ljmp
xchg
cmpsb
out
adc
push
mov
rcrb
pop
call
incb
imul
adc
push
enter
adc
add
scas
pop
movsb
push
jmp
pop
jle
cmp
fs
test
or
fidivs
addr16
cmpsb
mov
mov
adc
ja
mov
and
xchg
cmpsl
sbb
in
insl
stc
insb
pop
jle
inc
jns
leave
sub
jmp
adc
xor
dec
fwait
pop
add
rcrl
rclb
xchg
popfw
inc
out
and
xchg
fwait
lock
test
cs
mov
cmp
push
fwait
popa
insl
push
or
xchg
mov
sbb
mov
stos
addl
std
mov
adc
mov
mov
push
lds
xor
ret
imul
sub
inc
mov
push
adc
fdivl
fisubrs
lea
test
adc
jecxz
lea
int
push
rcrl
inc
pop
mov
imul
cltd
idivb
inc
bound
ds
and
cmp
jns
arpl
add
push
dec
rorl
rcrb
outsb
pop
dec
in
xor
notl
jp
and
in
imul
rolb
cs
orb
sbb
xchg
cmpsl
mov
into
vsubss
jbe
sub
outsl
testl
inc
and
cmp
or
sub
cmpsb
mov
sbb
movsl
sbb
fs
cmpsb
or
scas
shl
in
xchg
sbb
xchg
xlat
ss
pusha
in
outsb
or
notb
shld
stos
mov
xor
jb
lret
fdivl
mov
xor
jmp
lods
fsubrs
mov
into
adc
je
mov
pushf
jle
pop
mov
imul
enter
enter
cwtl
push
xchg
mov
shlb
js
rsm
xchg
mov
push
sbbb
std
and
pop
ret
push
inc
pop
sbb
cs
cmp
xlat
jae
adc
insl
in
cli
imull
imul
mov
mov
and
fisubrs
cmp
xchg
jg
dec
pop
dec
lahf
add
and
push
test
push
inc
jo
loopne
jns
inc
nop
sbb
lds
jl
cmpsl
leave
aaa
xchg
push
xor
pop
inc
mov
pop
xor
cld
mov
adc
insb
and
pusha
sub
or
push
pop
dec
orb
jl
movsl
mov
leave
lock
test
xchg
xor
loopne
sub
jg
xchg
int
fldcw
lods
sbb
movsb
xorl
imul
ljmp
div
ljmp
subl
push
lret
add
mov
cmc
int3
icebp
jnp
inc
and
jmp
xchg
jmp
push
mov
popa
stos
cmp
mov
or
lret
jo
fcmovne
or
add
push
xor
imul
into
arpl
dec
lds
es
push
pushf
out
divb
push
or
mov
das
pushf
xor
rclb
movsb
outsl
leave
test
xchg
hlt
in
xlat
or
lret
or
inc
popf
fs
test
cmp
daa
xor
imul
sbb
out
fwait
jl
sti
or
and
fbld
sub
inc
rcl
mov
mov
dec
in
dec
inc
lea
xor
push
fstl
arpl
dec
dec
or
loope
rorb
sarl
ja
data16
inc
cld
fnstsw
ret
roll
or
and
dec
cwtl
ret
in
dec
xchg
sbb
mov
rorl
pop
or
fistpll
dec
fsubrl
idivb
xor
push
cmp
sub
cmp
loope
ljmp
loop
out
lods
mov
fs
pop
push
subb
jg
movsl
scas
imul
inc
cmc
jbe
sar
cmovae
in
mov
lahf
test
mov
push
adc
push
sub
push
pop
mov
xor
popa
sub
test
inc
sti
xchg
mov
dec
inc
adc
pop
inc
pop
aaa
pop
aas
push
loopne
enter
addl
add
pop
sti
mov
inc
sub
lock
loope
mov
sahf
stc
faddl
stos
pusha
lret
leave
cli
xor
sbb
or
add
ljmp
sub
ds
fwait
int
clc
fiadds
mov
pop
movsl
pushf
cmc
mov
mov
xor
mov
xor
hlt
inc
lcall
sbb
mov
into
pop
lock
test
pop
mov
sahf
add
mov
push
int
mov
xchg
xor
jle
pushl
pop
xchg
rorb
fmull
xorb
sbb
nop
daa
sub
outsl
aam
das
xchg
or
aas
lret
cli
jl
leave
imul
cmp
sub
sub
adc
imul
inc
cltd
jns
sub
aas
cvtpi2ps
fisubs
cwtl
inc
or
test
sbb
fnstenv
outsb
cmp
mov
std
sbb
and
push
mov
mov
test
pop
ljmp
pop
adc
xchg
jecxz
dec
sbb
sub
mov
mov
xor
cmp
inc
lcall
mov
dec
mov
xchg
mov
cmc
mov
loopne
test
adc
push
adc
fisubs
outsb
pop
addr16
mov
stc
insb
pop
rcrl
mov
stos
lea
in
shlb
les
sti
sbb
cmp
sbb
fmul
pop
push
jle
bound
jno
adc
clc
loope
ja
shlb
pop
cmp
pmulhuw
loope
ss
inc
cmc
inc
enter
mov
cmp
mov
dec
js
mov
inc
push
pop
das
xchg
nop
mov
rcl
setl
outsb
repz
sbb
lock
xor
push
push
mov
cmp
mov
rcl
cmp
pusha
in
dec
ljmp
test
fsubl
outsl
mov
cmp
daa
xor
mov
mov
insl
sub
repz
push
mov
xor
adc
or
lahf
and
outsb
out
mov
jg
cmpl
out
or
fdivr
mov
ret
arpl
js
dec
in
data16
inc
orb
or
loopne
push
push
aas
pop
das
fsubrs
fsubrl
push
jmp
lret
xorps
fstps
push
rol
testl
movsl
xchg
pop
jne
inc
test
push
icebp
push
cwtl
sbb
push
fcoml
xchg
xchg
jo
rorb
xchg
xchg
ja
cli
aaa
outsl
dec
ds
movsb
sbb
popa
xchg
shrl
pop
or
jae
adc
movsb
mov
popf
mov
mov
cli
cli
pop
arpl
dec
dec
push
pushf
push
pop
sbb
or
adc
push
push
jne
ds
push
sti
rcll
pop
xchg
or
mov
dec
sub
sbb
cmpsl
fs
inc
mov
mov
pop
add
cmp
xchg
mov
xchg
mov
add
int3
test
ja
into
push
pop
dec
ret
xchg
aas
mov
pop
jno
pop
xor
bound
ret
aaa
insl
outsl
subl
stos
add
sarb
pop
lock
popw
sbb
lret
dec
lcall
and
je
cmp
cmp
test
adc
xor
xor
cmp
dec
mov
xchg
add
push
outsb
jge
xchg
stos
sbb
sahf
fdivl
mov
insb
pop
arpl
xchg
push
lahf
jnp
cmp
rolb
leave
inc
sub
enter
and
mov
jne
mov
pop
faddl
std
push
push
movsl
in
and
push
inc
pop
mov
cld
xchg
je
or
int3
mov
mov
mov
sub
mov
ss
insl
gs
nop
je
stc
sahf
les
pop
insl
lds
jno
enter
jg
loop
pop
lea
fdivr
and
and
test
pop
mov
mov
xchg
int
mov
rcll
bound
xchg
xchg
sub
arpl
dec
pop
jnp
xchg
cmp
pop
in
test
xor
out
inc
jge,pn
sahf
adc
and
mov
xchg
add
mov
xchg
sbb
sub
lcall
adc
sbb
jl
sub
inc
shl
jb
lret
int
and
in
xor
ret
push
adc
test
xor
push
xorl
outsb
addr16
sub
mov
sbb
inc
out
loope
ror
pop
dec
jle
sub
icebp
inc
cli
roll
lods
push
push
xor
out
cwtl
add
mov
push
fsubrl
cwtl
mov
repnz
or
imul
xlat
or
int3
scas
cmp
push
lahf
fists
xlat
out
pop
push
cli
push
cltd
or
leave
js
jo
ret
mov
das
pushf
inc
pop
cmp
adc
data16
xor
cmp
jl
sub
mov
mull
flds
ret
mov
mov
je
test
mov
add
test
into
imul
or
and
fisubrl
mov
cmc
icebp
das
dec
cli
sub
movsb
xor
cmp
and
shrb
adc
test
js
inc
aas
arpl
cld
repnz
cltd
cltd
pop
adc
cmp
sbb
idivb
push
adc
sbb
mov
scas
push
pop
or
in
out
sub
sbb
psrad
jmp
jecxz
leave
sbb
lods
loop
xchg
fxch
lods
roll
in
ret
jno
adcb
dec
add
dec
push
push
xor
jb
loopw
inc
xchg
mov
cltd
pop
jmp
in
mov
movsl
cmp
scas
jmp
or
mov
loop
push
jl
push
dec
cmp
stos
mov
push
mov
sub
std
jb
in
sub
insb
jp
cmc
mov
std
jecxz
andb
cmp
out
mov
pushf
pushf
cs
sbb
pop
out
pop
cmp
ss
enter
mov
fnstsw
cli
xchg
mov
hlt
cmp
mov
fsubl
push
pop
and
push
imul
lcall
cmp
sub
dec
gs
sbb
fcmovu
mov
movsl
shl
pop
and
inc
cmp
movb
adc
aas
insl
push
sub
gs
repz
flds
lods
cmp
cltd
imul
push
sub
out
mov
mov
xor
push
insl
lcall
and
repz
jmp
gs
outsl
int3
sub
sarb
push
xor
cmp
cmpl
jge
lahf
ds
enter
std
adc
xlat
cltd
enter
orl
mov
test
movsb
mov
push
ret
ja
test
aad
jg
xor
out
xor
sti
rorl
rcl
jmp
in
imul
ret
or
fs
insb
push
push
lock
decb
and
and
inc
xchg
dec
jne
int3
je
cmc
movsl
fwait
iret
movsb
xchg
dec
rorb
je
jp
add
scas
inc
nop
push
fldenv
jne
test
push
bound
scas
sbb
push
test
sub
inc
aad
divb
lds
xchg
lcall
add
cmp
outsl
fwait
das
jge
out
and
mov
mov
js
sub
pop
imul
int
bound
icebp
imul
jmp
mov
jge
in
test
loop
popf
add
xchg
roll
loop
fs
inc
jmp
lahf
icebp
jp
xor
gs
xchg
lds
xchg
in
ja
pop
mov
rdtsc
loop
mov
leave
mov
pusha
or
bound
mov
pop
dec
insl
imul
jne
inc
test
les
push
ficompl
mov
shlb
xchg
into
mov
xchg
es
pushf
or
cpuid
pop
bound
cmp
push
mov
dec
cmp
sbb
pop
and
pushf
into
push
push
in
xchg
dec
jmp
add
repz
out
sub
or
in
cmp
pop
lahf
mov
movsb
in
jns
ret
mov
adc
mov
cvttps2pi
cwtl
mov
pop
mov
push
inc
mov
and
ficompl
fldcw
mov
jp
push
cwtl
loope
divl
pop
and
scas
pop
dec
lret
call
out
lret
push
sub
enter
add
dec
or
out
lcall
xor
jbe
mov
andl
or
jbe
cs
jno
push
jno
jnp
stos
dec
dec
xor
aad
xor
mov
mov
dec
add
mov
mov
ror
maskmovq
negl
fisubl
mov
mov
mov
sahf
cmp
filds
dec
or
sub
js
jle
fs
sbb
cmp
xchg
or
outsb
mov
stos
pusha
out
movsl
cmp
xchg
das
dec
push
fidivrs
scas
pop
mov
loop
lds
add
jg
sahf
stc
jo
repz
movsb
popa
xchg
jmp
les
mov
xchg
pop
add
mov
push
pop
add
xchg
jns
xor
xchg
dec
or
cltd
sub
inc
into
ffree
call
movsl
mov
inc
loope
repnz
fs
roll
add
stos
jp
sbb
jmp
cmpsb
stos
push
daa
cmp
outsb
out
adc
xchg
xor
subb
mov
lods
and
inc
das
cwtl
outsb
push
cmpl
mov
lret
aam
lock
mov
sub
xor
fiaddl
mov
sbbb
push
sbb
push
mov
dec
test
add
ficompl
adcl
enter
cmp
pop
lahf
sbb
xchg
pushf
cltd
lret
mov
scas
ds
cmp
das
mov
mov
dec
scas
pop
data16
cld
out
nop
xor
xor
rorl
hlt
add
lret
stos
bound
push
jmp
adc
xor
xchg
mov
rol
cmp
imul
push
sbb
lods
inc
sub
inc
inc
ja
jo
test
pushf
or
das
lea
pusha
andl
push
in
fldcw
imul
sub
adc
dec
movl
pop
in
cmc
nop
clc
lock
les
jl
lcall
lahf
cwtl
xor
dec
mov
popf
jae
xor
cmp
or
push
dec
adc
inc
lods
push
jg
and
rdmsr
sub
inc
add
stos
les
cmpsb
and
jmp
inc
xor
push
mov
adc
out
sub
out
pop
repnz
in
fsts
push
dec
popf
and
inc
out
mov
ds
stc
loopne
out
rorl
mov
mov
fbld
add
dec
pop
pop
dec
pop
out
cmpsb
sbbl
xchg
inc
and
popa
outsb
mov
xchg
loopne
loop
jge
out
cmp
add
ret
or
sbbl
lret
add
mov
data16
test
push
pop
mov
mov
dec
xor
pop
add
jne
push
fstp
mov
xor
jge
stos
jo
popf
fsubr
mov
insl
jbe
sub
cmp
cmpsl
cmp
mov
rep
out
scas
xchg
push
push
xchg
push
pop
xor
cltd
in
adc
jno
mov
xor
scas
adc
test
push
cmpsl
adc
cmp
mov
pushf
adcl
jmp
jp
add
ljmp
xorl
or
test
xchg
flds
in
mov
arpl
mov
out
jnp
xchg
in
test
fsts
bound
dec
inc
clc
xchg
mov
loope
jmp
or
clc
push
jno
xchg
mov
push
fisubrs
mov
dec
cmpsb
jmp
push
test
xorl
in
cmp
mov
insb
xchg
sbb
leave
jnp
insl
in
jge
inc
into
xor
mov
lahf
mov
iret
cmp
mov
inc
push
mov
or
xor
nop
and
jg
or
push
rcrl
sub
dec
cmpsl
stos
adc
cli
sbb
je
mov
push
jns
mov
movsb
in
cmp
or
sub
out
je
incb
jmp
lock
push
cmp
cld
cmc
push
clc
xor
scas
mov
sbb
js
inc
lret
mov
fwait
sub
repnz
inc
and
inc
fldl
pop
jne
jne
jmp
inc
mov
add
add
inc
lret
pop
and
stc
ds
ss
add
jecxz
xchg
lods
cwtl
shr
sbb
xchg
cmp
mov
xor
fisttpl
ss
movsl
and
fsubs
repz
icebp
adc
es
mov
xchg
pop
shll
xor
sbb
jle
or
cmp
stos
mov
ficompl
stos
addl
mov
repnz
mov
inc
ss
jge
ljmp
idiv
xchg
push
cli
mov
and
stc
out
jl
int3
adc
lahf
or
aas
aad
push
mov
push
out
popf
xor
mov
cmp
pop
add
pop
ret
fcomip
mov
iret
mov
mov
jae
icebp
xor
cltd
ret
mov
and
or
clc
sbb
mov
jg
fldcw
sub
in
sbb
sbb
push
in
lods
roll
xchg
out
push
push
das
dec
cmp
push
or
jp
test
aad
ja
aaa
les
fisubrs
movsb
sub
sbb
outsb
call
sub
sub
sub
push
popa
cmpsb
popa
push
cwtl
and
and
inc
and
cld
sbb
pop
pop
jmp
cmpsl
imul
sbb
cmp
push
out
mov
ds
xchg
or
fisubs
mov
dec
push
mov
mov
cmp
dec
add
cmpb
mov
mov
lahf
roll
or
inc
mov
mov
jmp
cld
xor
fxch
inc
push
loopne
arpl
sarl
mov
js
cli
lock
std
lea
movsb
sub
and
adc
ljmp
jo
pop
data16
or
cmp
mov
mov
push
sub
sar
cltd
addb
add
insl
clc
call
mov
sub
jmp
sub
jae
loope
lret
movsl
push
pop
push
push
pusha
mov
mov
movb
sub
jbe
cmp
or
sbb
test
sahf
repnz
push
aaa
es
subb
dec
or
ja
jno
mov
mov
xchg
lock
cli
add
cltd
jo
cwtl
std
scas
xchg
and
aad
dec
out
repz
push
popa
add
push
ficompl
mov
sbb
lods
pop
ds
pop
and
movntq
je
inc
fmuls
cmp
cwtl
inc
or
push
imul
ret
scas
push
mov
push
movsb
mov
sub
xchg
dec
add
sbb
fisttpl
sbb
jp
cmp
ja
fwait
push
popf
sbb
cmp
jnp
lret
adc
sub
mov
jns
loope
hlt
popa
jmp
call
sbb
rolb
jnp
inc
xchg
jnp
mov
jp
sbb
into
mov
lret
std
iret
jne
jp
sub
jns
inc
cltd
sub
inc
xchg
iret
pusha
popa
cmp
ja
aam
cwtl
sti
and
xor
adc
and
push
cmpsb
mov
pop
sbb
sub
cmpsb
sbb
and
mov
movsl
mov
rolb
dec
clc
rolb
mov
lea
xor
adc
xchg
sbb
and
and
dec
fisttps
cltd
push
xchg
inc
mov
pop
in
daa
int3
pextrw
sub
cs
loop
mov
es
lea
mov
xor
dec
test
mov
mov
call
pop
les
add
xchg
mov
insl
add
mov
cld
repz
clc
push
push
shll
lods
les
inc
ja
push
arpl
or
push
sbb
insb
sarl
lds
clc
mov
push
xchg
or
and
and
sbb
iret
shrl
out
scas
cltd
cmp
add
es
fcoml
mov
xchg
push
jno
iret
inc
lds
push
cmp
cli
lds
sub
test
mov
dec
shll
fdivrl
iret
in
sub
cwtl
jl
mov
mov
stc
aam
mov
sbb
fldt
jge
pop
sbb
adc
out
out
sahf
inc
pop
or
inc
xchg
push
or
idivl
iret
cmpsl
cmp
rcrl
xor
lret
fdivrs
repnz
icebp
dec
and
mov
fwait
mov
cmpsb
fnstcw
push
jne
int
jae
cld
pop
lds
popf
mov
dec
mov
mov
sbb
push
push
mov
js
xor
dec
mov
xchg
icebp
pop
imulb
push
add
fsubrs
shrb
mov
imul
aaa
push
lcall
adcl
fisttps
and
in
add
jno
ja
jg
jp
outsb
jp
jnp
xor
dec
sbb
cld
push
les
pop
stos
mov
andl
cmp
xorl
mov
daa
xor
dec
mov
dec
leave
lods
cmp
or
loopne
test
scas
jbe
pop
fcmovnu
add
xchg
pop
push
clc
popf
push
xor
mov
ret
sbb
inc
mov
mov
rclb
pop
ja
mov
mov
jmp
pop
push
xchg
nop
imul
les
bound
adc
rolb
inc
cmpb
and
xchg
push
sbb
jae
or
or
dec
push
inc
pop
mov
add
add
push
incl
stc
inc
jle
pop
add
outsb
sbb
jmp
cld
and
push
jb
xchg
cmp
out
sub
mov
negl
adc
xchg
sub
notb
pop
mov
jle
lret
iret
or
pop
sti
dec
repz
inc
mov
push
xlat
xchg
sub
pusha
or
gs
xchg
es
cmp
gs
and
into
pop
mov
jno
mov
or
leave
sub
jns
enter
cmp
xor
sub
fs
int3
shlb
mov
pop
jg
mov
repz
jge
lcall
mov
xor
xor
aas
lods
inc
push
jne
aad
lods
jno
cmp
jecxz
and
outsb
data16
scas
out
sub
js
dec
inc
mov
and
loopne
cmp
xor
js
clc
aam
icebp
dec
xor
frstor
ss
inc
jb
jmp
nop
sub
cmp
sar
and
cmp
ljmp
xchg
dec
loop
mov
call
jns
int3
subb
fs
mov
aaa
pop
rcll
xor
mov
jg
sbbb
mov
aas
dec
in
shrl
popf
jo
fists
pop
push
les
jne
fwait
sti
jl,pt
frstor
dec
insb
int
mov
jge
jnp
mov
rclb
mov
inc
pushf
and
add
add
jo
ljmp
xchg
pop
and
out
cli
push
jno
outsb
repnz
cwtl
je
into
push
add
add
pop
add
push
cwtl
dec
inc
cmp
xor
loopne
pop
jmp
mov
pop
mov
fs
insl
mov
pop
inc
inc
and
stc
mov
test
stc
add
idivl
ret
and
mov
xlat
add
cmp
xlat
pop
fcomp
cmp
clc
dec
push
fidivrs
sahf
inc
outsl
dec
sarl
push
mov
sub
ret
ftst
js
outsb
popa
mov
in
pop
cmp
add
jp
scas
push
fnstcw
cmpsb
andps
movsb
add
das
xchg
fstpl
xor
test
sti
cmpsb
cmc
mov
sub
frndint
jp
stos
jmp
push
dec
sbbl
ss
sahf
sbb
in
int3
mov
xor
ja
repnz
and
dec
mov
push
cmp
out
mov
cmpsl
sbb
pop
xchg
and
out
push
mov
fwait
adc
push
bnd
test
pusha
or
jl
xor
mov
dec
icebp
push
inc
mov
sbb
imul
insb
pop
test
fwait
es
xchg
xor
stc
pop
stc
jbe
or
sub
sbb
cmp
fidivrl
dec
pop
negl
pusha
push
inc
mov
xlat
lods
lods
mov
lcall
stos
push
push
xchg
iret
iret
xchg
lahf
cmp
mov
pop
sbb
inc
jge
jle
into
mov
jge
pushf
cld
jae
jne
cmpl
jl
sete
inc
or
mov
push
repnz
je
adc
add
inc
push
ljmp
dec
nop
imul
mov
aaa
repnz
mov
jb
lods
sbb
mov
fidivs
stos
negb
andb
cli
jne
adc
popf
je
nop
aad
sbb
xchg
shll
cld
add
mov
or
sbb
into
and
cmp
jl
adc
or
jp
loope
jnp
pop
pop
mov
mov
mov
and
lret
mull
adc
shlb
ja
sti
ror
sbb
adc
arpl
jbe
cwtl
mov
rcrb
pop
icebp
sbb
movsb
bnd
mov
pop
scas
pop
sarw
cmpsl
jmp
mov
add
lea
scas
sub
lods
sub
gs
pop
fdivs
pusha
jmp
hlt
rcrb
shrl
jbe
add
jo
cmp
push
dec
push
fs
xchg
push
js
shlb
add
sbb
mov
mov
shl
pop
insl
xchg
push
cmp
addr16
dec
push
pusha
sbb
ret
mov
rclb
and
fildll
rorl
shrb
fidivrs
icebp
push
adc
popf
lods
and
inc
inc
xor
mov
jge
int3
imul
dec
fistpl
sbb
adc
mov
pushf
or
fsqrt
inc
jo,pn
sbb
mov
roll
movsb
mov
bound
scas
xchg
push
cmp
fwait
push
movl
lcall
xchg
cwtl
fs
movsl
xor
pop
flds
out
xor
mov
es
xor
jp
lds
push
cmp
pop
jo
dec
or
imul
pop
dec
out
outsl
pop
ficompl
test
pop
lahf
ret
insl
jge
dec
rorb
push
or
cwtl
jbe
jo
mov
out
cmpsb
push
and
mov
stc
add
int
cmp
decb
je
pop
push
lods
pop
fcmovnbe
adcb
adc
push
push
hlt
idiv
lea
cmp
mov
in
sub
jle
mov
fcoml
sti
mov
cld
insl
cltd
add
lret
and
fdivrs
ret
pushf
mov
lods
fcoml
mov
sub
rcl
add
jp
add
mov
jg
push
pop
adc
arpl
cld
mov
cmp
mov
fstpt
mov
push
mov
setne
test
rclb
lods
rcl
adc
xchg
jge
jge
aad
mov
lds
dec
dec
lds
xor
out
push
shrl
stc
xlat
test
ds
in
pop
sub
push
scas
add
inc
fimuls
xchg
enter
xchg
popf
pop
cmpsb
mov
int3
outsl
fistpll
inc
sbb
push
movsb
scas
xor
push
xor
lcall
out
idivb
std
jno
adc
dec
cmp
and
imull
sub
or
inc
xlat
jo
roll
enter
nopl
and
into
cmpl
add
mov
dec
hlt
inc
adc
push
or
and
rolb
test
outsb
add
dec
cli
outsb
push
pop
add
mov
jnp
vpcomd
jecxz
addb
sub
pop
clc
jmp
aad
rorl
jne
mov
jae
scas
push
fnstcw
push
divl
in
mov
leave
xorb
out
lcall
or
pop
push
fwait
adc
cmp
jle
mov
xchg
sbb
fildll
call
sarb
sarl
sub
int
test
loopne
cmpsb
xor
daa
sahf
pop
dec
fwait
add
movsl
in
mov
fimull
test
jo
lahf
sub
cmc
xor
and
mov
fstpt
or
nop
xor
pop
push
fildl
add
mov
ss
pop
test
push
leave
pop
sbb
insb
es
das
adc
pop
in
dec
or
sbb
fxch
aam
iret
test
decl
mov
mov
push
dec
mov
imul
repnz
and
sbb
rclb
in
test
dec
pusha
mov
imul
xchg
cmp
mov
sahf
sub
push
aam
mov
pop
sbb
pop
fnstenv
mov
xchg
jge
adc
push
mov
sahf
mov
inc
inc
dec
inc
push
lock
xchg
fwait
inc
and
lds
cmc
sbb
inc
add
mov
imul
or
and
cli
pushf
dec
add
inc
jae
sarb
lret
pop
test
jnp
xor
mov
divb
out
lods
inc
in
or
pop
ret
inc
loopne
imul
push
je
int
sub
fcomps
mov
cwtl
mov
xlat
mov
test
cmpl
dec
jecxz
xchg
rep
mov
mov
mov
add
aaa
jnp
push
bnd
push
inc
xor
divl
jno
jmp
pop
cmpl
and
mov
fmulp
enter
mov
test
and
xor
dec
cmp
push
adc
addb
xchg
jmp
sti
inc
mov
in
xchg
out
sbb
or
rcll
pop
out
daa
popf
lret
jl
loop
lcall
ret
fbld
mov
pop
jo
out
into
movsb
sbb
movsb
rol
popf
outsl
testl
inc
movsl
sub
mov
lods
icebp
sbb
js
lret
cmc
cli
xor
push
int
inc
dec
adc
mov
mov
aam
test
mov
popa
movsb
xor
inc
mov
fcoms
scas
insl
jbe
inc
pop
fnstcw
add
jnp
pop
dec
popf
test
fbld
push
enter
cmc
xlat
dec
add
push
pop
jmp
jne
inc
pop
xchg
xor
inc
fst
push
mov
test
mov
xor
push
mov
stos
lret
aam
sub
and
lods
pop
popa
pushf
bound
outsb
cld
jmp
call
lcall
insb
cmpsb
or
cmp
xor
mov
jmp
fwait
mov
lea
lods
popa
test
loopne
mov
dec
jmp
xor
or
leave
mov
mov
repnz
subl
and
add
jns
mov
in
ljmp
mov
das
mov
mov
mov
js
sub
jbe
inc
mov
pushf
in
ljmp
xchg
push
or
mov
and
sar
xchg
rorb
or
lret
and
dec
cmp
push
iret
popf
or
and
les
xchg
pop
ret
inc
ffree
xchg
fisubrs
shrb
dec
fistpl
int3
and
fwait
add
sbb
jg
inc
mov
mov
jb
inc
mov
das
ja
lret
stc
inc
iret
stc
in
jp
je
cld
fs
fucomi
inc
loop
pop
push
cmp
or
int
test
mov
bound
push
fisubrs
jp
stos
push
nop
jle
or
and
push
loop
dec
das
mov
add
inc
jae
sub
loopne
daa
mov
mov
dec
xor
fucomip
out
jecxz
xchg
sbb
sti
test
mov
xchg
std
cmp
push
loope
mov
or
cmp
inc
mov
cs
cmp
jle
lahf
cmp
roll
xchg
int
xor
cmp
cmpsb
pop
lahf
sbb
pop
or
sub
xor
inc
repnz
mov
fidivrl
mov
sbb
ljmp
add
repz
push
push
and
jo
inc
loopne
pusha
rcll
sbbl
loope
and
jns
jmp
jg
push
lret
mov
xlat
add
iret
cmp
push
or
xchg
flds
mov
notl
push
mov
aam
mov
adc
push
pop
repz
push
roll
dec
cmpsl
pop
hlt
inc
push
push
add
xor
lea
xor
xor
cli
jge
sbb
out
add
rclb
xor
in
mov
jae
cmpsl
xchg
sbb
xlat
push
fwait
sbb
movsl
jae
jg
out
popa
sub
push
orl
xchg
or
cmc
insl
push
inc
sub
popa
pusha
and
mov
jno
cmpsl
fdivrl
int
sub
mov
push
into
out
mov
mov
push
cmp
fldcw
shr
out
sub
adc
or
jp
mov
cmp
xor
into
fiadds
or
notl
xor
inc
or
push
sub
jge
das
ret
ljmp
cwtl
int
lods
jne
xor
adc
test
pop
inc
addl
push
test
xchg
mov
cmp
daa
mov
popf
cmp
loope
mov
xchg
sbb
xor
and
popa
xor
shrb
es
movsl
mov
fbld
lcall
dec
mov
test
bound
mov
sub
imul
cwtl
inc
sub
sub
xorl
cmp
sbb
jp
cmp
jl
adcb
daa
rclb
sub
pop
fsubrs
mov
jae
adc
push
xor
lret
stc
inc
or
out
cld
push
cmp
add
lcall
rorb
inc
jne
cmpsl
gs
fistpl
enter
xor
scas
gs
xchg
mov
cmp
nop
mov
add
cmp
mov
and
in
mov
aad
inc
push
jae
lods
fiaddl
inc
sbb
add
sbbl
int3
xchg
xchg
roll
jne
sbb
insl
fists
movsl
push
sub
pusha
inc
ja
push
inc
dec
cltd
push
adc
js
jb
sub
scas
mov
cmc
repnz
fildll
xor
mov
xchg
insl
or
mov
xchg
fdivl
pop
cmpl
cmp
in
loop
jns,pn
sti
xchg
push
fwait
cmpsb
push
ja
dec
out
xor
data16
sahf
dec
addr16
gs
push
sbb
inc
lahf
roll
sub
out
scas
popa
addb
in
fidivrs
mov
std
push
test
pop
ja
sbb
mov
leave
adc
inc
negl
in
cmpb
int
cmp
bound
clc
xchg
push
movsl
lds
lcall
arpl
push
xorl
cmc
das
dec
mov
cmc
movsl
mov
rorb
xor
hlt
ja
sbb
xchg
testw
pop
pop
es
cmp
jae
push
jbe
adc
sub
cmp
inc
cld
sbb
lods
loopne
xor
xchg
aam
add
aas
test
cwtl
pop
call
inc
stos
test
fwait
mov
cli
mov
pusha
nop
sub
lea
fdiv
ss
or
clc
fnstenv
cltd
stc
jp
xchg
mov
add
subb
divb
mov
mov
mov
jnp
jp
mov
mull
loope
hlt
cmp
mov
std
aaa
add
sti
xchg
jno
ja
outsb
cmpsl
mov
lahf
iret
cmp
lods
mov
push
jb
cmp
cmpsb
xchg
es
icebp
and
pop
dec
sub
std
mov
jmp
ret
push
sub
mov
shlb
ds
hlt
and
icebp
addr16
dec
add
pop
xor
mov
and
add
gs
cmpsb
test
in
jp
inc
add
dec
push
jg
test
ret
or
cmp
sbb
pop
orl
addb
add
pop
rclb
or
mov
jae
int
xchg
or
inc
jns
push
mov
in
or
jo
xchg
stos
xchg
test
ljmp
aas
jp
leave
insl
nop
fdivrs
and
rolb
pop
jp
lods
call
jno
pusha
push
in
nop
xchg
pop
cmp
imul
cld
jb
dec
orl
sbb
jmp
stos
test
cmpsl
ja
add
adc
push
fdivr
cmp
dec
adc
mov
popf
out
sahf
sbb
repnz
lcall
jno
jae
loopne
lods
insb
rorb
cmp
inc
fstl
mov
mov
xlat
push
movsl
add
fldt
mov
jl
sub
repnz
decb
arpl
push
pop
mov
sbb
insl
xor
jg
xchg
bound
outsb
and
out
pop
pusha
pop
int
push
sub
dec
mov
out
stos
or
inc
or
sbb
adc
xchg
fs
ss
dec
adc
daa
test
scas
rcl
xlat
and
imul
imulb
pop
inc
add
jo
push
dec
mov
mov
mov
adc
inc
pop
sub
fs
dec
mov
icebp
inc
subl
imul
lock
andb
repz
in
cmpsl
push
lods
adc
in
sbb
cmp
push
cmpl
pusha
ljmp
ljmp
cmp
add
jg
test
cmp
mov
ss
outsl
sbb
jo
jecxz
pop
mov
hlt
xchg
pop
mov
shll
jnp
xchg
cmp
add
shrl
pusha
mov
rclb
scas
adc
adc
test
jne
lcall
xchg
pop
dec
nop
jg
or
xor
idivl
xor
orb
lcall
jl
movsl
mov
mov
mov
jmp
adc
cmpsb
fisttpl
shlb
adc
in
pop
sub
scas
out
in
push
add
test
lahf
popf
or
jmp
cmp
push
data16
into
xor
fstl
cld
dec
jecxz
push
clc
ficompl
popf
dec
je
mov
push
repnz
inc
jecxz
notl
nop
push
loope
or
lret
xor
jnp
mov
mov
mov
fists
leave
sarl
int3
adc
std
mov
int3
test
inc
test
mov
cmpsb
cmp
xchg
in
int
stc
or
shlb
loop
push
jl
push
popa
fbstp
xchg
dec
mov
notb
adc
add
dec
and
in
cmp
sahf
lret
mov
xor
mov
pop
xor
mov
daa
push
mov
or
mov
pop
xchg
cmc
rcr
jae
xor
and
sub
mov
mov
loopne
xor
xchg
pop
repz
sbb
clc
popa
pop
and
mov
imul
ss
sbb
mov
out
ret
push
test
xor
or
sub
mov
pop
pop
cs
outsl
repnz
sub
cmp
push
mov
jg
cmp
sar
cltd
flds
aaa
sbb
mov
outsl
dec
mov
and
jg
cmp
std
arpl
jp
pop
jb,pt
mov
cmp
test
stos
push
clc
xchg
incl
daa
sahf
aas
insb
adc
adc
inc
stc
mov
and
int3
scas
psrad
lds
aas
dec
loop
jnp
inc
jns
add
mov
or
inc
arpl
dec
push
cmp
fstl
stos
test
adc
stos
mov
adc
push
stos
add
xor
or
mov
jecxz
addr16
fiaddl
out
nop
clc
lahf
loope
arpl
mov
repnz
lahf
shl
popf
dec
pop
in
gs
das
xor
mov
mov
pop
fdivr
in
jno
fisubrl
mov
xchg
mov
push
lock
xor
jnp
clc
mov
fbstp
bound
ljmp
sub
lret
pop
stc
adc
push
cli
dec
mov
sub
add
mov
rorl
cltd
imul
pop
int3
cmp
stc
daa
js
jg
ficoms
call
sbb
das
mov
pop
mov
push
mov
mov
adc
cmp
xchg
cmc
xchg
sub
arpl
mov
and
cs
xor
sbb
jge
lock
out
cwtl
and
push
mulb
mov
fdivrs
push
inc
sbb
in
loopne
push
dec
add
popf
outsl
mov
push
fstl
es
orl
sbb
cli
int3
aaa
cmp
rcl
push
out
sub
dec
loope
jcxz
xchg
push
lret
push
rolb
mov
aaa
mov
pop
icebp
pop
mov
pop
shrl
and
aam
mov
ja
and
push
les
push
mul
and
imul
inc
leave
test
lret
sbb
inc
cli
rcll
es
jne
xor
adc
jns
pextrw
insl
push
ss
roll
paddusb
xchg
adc
push
dec
add
inc
notl
ret
push
sbbl
movl
jb
add
fdiv
outsb
dec
stos
bound
sbb
enter
add
test
pop
xor
mov
pop
xchg
adc
inc
loopne
inc
or
daa
dec
mov
andl
mov
cld
sbbb
push
inc
sbb
addr16
aaa
mov
dec
pusha
subl
mov
inc
roll
add
and
movsb
test
xor
mov
mov
xor
sub
fwait
sub
jmp
jmp
and
pop
verw
cmpsl
xlat
and
cltd
dec
movsl
sub
pop
jmp
test
and
pop
in
repnz
add
push
ja
out
jecxz
rcll
jl
push
hlt
call
mov
stos
adc
cld
aad
or
iret
scas
int
sbb
pop
cmp
mov
gs
popa
outsb
shl
roll
xchg
or
inc
addr16
daa
aas
cmp
jae
mov
cmp
pop
dec
rorl
add
jne
ret
xor
sub
ds
adc
ret
jg
cmp
das
xchg
in
mov
clc
js
mov
fs
sarb
out
add
dec
mov
pop
inc
xchg
jmp
push
add
movsl
data16
add
test
mov
pop
sub
push
imul
out
mov
xor
dec
cmp
add
sub
pop
mov
test
mov
mov
movb
test
pop
cmpsb
cli
add
mov
outsl
jne
mov
test
iret
cmpl
jnp
push
lahf
rcrb
outsb
push
ficoms
jb
in
inc
xchg
icebp
dec
enter
pop
pop
nop
cmpsb
cs
cmpsl
jmp
mov
out
jns
fildl
mov
push
xor
mov
cwtl
hlt
les
test
push
iret
xchg
dec
jae
and
or
scas
mov
push
loope
pop
cmpsb
cmp
jae
sbb
xlat
push
or
repnz
adc
sbb
stos
pop
fnstenv
cmp
xchg
jp
mov
add
mov
rcl
mov
xchg
xchg
mov
mov
push
sahf
fsub
sub
aas
ljmp
push
rolb
jo
xor
cmc
and
ret
mov
xchg
mov
sub
sub
cli
in
pop
outsb
pop
stc
jl
jl
je
mov
cmp
cmpsl
pop
or
push
mov
xchg
ret
mov
or
dec
orl
lods
cmpsb
nop
pop
gs
pop
push
jne
bnd
fisubrl
ja
and
xor
pop
insl
iret
add
dec
cli
xor
pop
cmp
sub
and
int
xor
jns
pusha
loope
and
sbb
fisubs
mov
xor
cmp
mov
lea
mov
sbb
lods
lock
ds
loopne
pop
call
pop
ss
xor
mov
jne
fiadds
xchg
fsubr
inc
mov
jbe
insb
call
daa
enter
sbb
cld
jne
xorl
push
pop
cs
mov
inc
mov
outsb
stc
stc
push
cmp
fwait
jge
cmp
jo
notl
ss
repnz
clc
mov
movsl
sti
cltd
jbe
in
mov
cmp
insb
mov
lea
arpl
dec
and
mov
je
push
cmp
xor
daa
adc
rcrl
sub
icebp
out
cltd
sub
push
and
and
or
sahf
jecxz
cli
daa
int
cmc
jo
jle
mov
loopne
fsubrp
fs
mov
jp
mov
test
fbld
jle
stos
sarl
xor
jge
movsl
mov
hlt
fwait
hlt
push
mov
imul
out
mov
sbbb
out
mov
in
dec
aaa
out
xor
dec
out
push
das
dec
pop
inc
or
mov
inc
add
mov
sub
and
cmp
fldl
pusha
mov
mov
sub
orl
jmp
neg
sahf
mov
or
add
push
sahf
or
hlt
scas
fsub
nop
shr
mov
xor
xor
sahf
cwtl
dec
push
in
ds
adc
sbb
cltd
add
add
test
rorl
insl
fnstcw
icebp
sbb
cmp
mov
and
ss
add
aas
mov
mov
pop
mov
push
das
xchg
fs
aad
rorl
stc
sbb
xor
add
mov
and
out
sub
mov
sub
cmpsl
nop
push
xchg
xor
xchg
inc
es
in
sub
ds
mov
inc
mov
or
xchg
pop
pop
gs
icebp
lahf
out
loop
pop
fiadds
iret
shlb
push
aas
std
mov
ud2
mov
fidivrl
jl
xchg
cmp
mov
dec
lahf
daa
jmp
pusha
frstor
sub
ret
mov
mov
mov
cbtw
lahf
push
pop
ljmp
cli
jo
push
sbb
push
push
jl
mov
testl
dec
cwtl
inc
pop
jbe
rolb
jne
xor
mov
mov
pop
mov
mov
sbb
dec
shrl
rorb
add
pop
add
xchg
push
xor
xchg
pop
nop
lret
fwait
popf
test
insl
dec
jge
pop
mov
sub
aas
pop
xor
int3
std
cltd
icebp
filds
jl
xor
push
ss
cmpsb
dec
adc
stc
xor
mov
cli
cwtl
iret
mov
jge
dec
xchg
shrl
loop
pop
push
and
or
cmp
and
and
or
out
sub
xchg
stos
mov
js
idiv
fisubs
shlb
or
inc
jle
or
mov
aad
jbe
mov
pop
adc
add
mov
mov
nop
loope
mov
out
cld
add
mov
xchg
ret
add
popa
mov
add
mov
imul
cmp
int3
into
jbe
int3
push
jl
fwait
repnz
addb
adc
out
insl
testl
test
popf
hlt
js
popf
inc
xchg
icebp
pop
fcomps
bsr
imul
add
stos
fisubl
jnp
popf
arpl
popf
pop
fcom
shrb
aad
xadd
pop
int3
scas
mov
sub
inc
mov
lods
pop
in
ror
cmp
leave
xchg
subb
sbb
push
ror
mov
jbe
bswap
add
inc
or
in
mov
movsl
fisttpll
fsubrl
fsubrs
dec
mov
inc
push
dec
shlb
mov
mov
sbb
fidivl
outsb
add
jmp
cmp
dec
xchg
jecxz
mov
mov
xor
scas
push
cmp
jmp
sahf
aad
fisttps
fsubs
daa
mulb
pop
cmc
out
gs
add
stc
jae
shlb
mov
imul
jmp
shl
insb
fistpll
inc
xor
pop
mov
stc
mov
and
jno
xchg
inc
hlt
push
loop
xchg
addr16
roll
mov
pop
nop
sbb
fbstp
shrl
mov
sbb
enter
dec
sahf
and
jl
and
add
xchg
jp
push
push
daa
xor
dec
and
sub
sarb
je
ret
push
shlb
xchg
sbb
ljmp
push
xchg
cs
dec
lahf
jnp
ss
mov
jecxz
fstpt
test
leave
mov
in
lahf
push
lds
shrb
filds
pop
mov
popa
dec
mov
jns
sbb
dec
cmp
movsb
xor
dec
inc
cli
sub
call
aam
loopne
xchg
and
sbb
xor
xchg
xor
adc
cmp
sbb
cmpsl
out
inc
pop
mov
push
out
dec
imul
lahf
xor
mov
mov
adc
mov
push
xchg
adc
dec
xor
dec
arpl
in
inc
outsl
mov
cwtl
xor
test
cmpsb
ljmp
and
inc
push
repnz
movsb
addr16
rcrl
and
adc
lods
mov
cmp
mov
mov
mov
pop
dec
in
cmp
mov
jle
adc
pop
and
xchg
aam
out
addr16
push
scas
push
shl
add
or
pop
call
adc
mov
pop
xchg
fistpll
sbb
push
cmc
dec
and
repnz
push
loope
ljmp
daa
fistps
sub
hlt
sbb
or
pop
sbb
sub
sub
bound
xchg
mov
sahf
mov
insb
mov
test
mov
movsb
adc
call
push
out
xchg
jno
mov
and
adc
lods
jns
jmp
dec
and
jno
and
mov
inc
and
enter
adc
cmpsb
dec
dec
inc
adc
data16
insl
out
ret
repnz
lcall
pusha
cld
aad
mov
push
add
pusha
add
pop
mov
dec
push
sbb
mov
notb
sbb
lods
sub
mov
dec
and
sbb
adc
mov
test
repnz
out
ja
fucomp
adc
pop
mov
jne
and
or
cmp
push
mov
pop
mov
lcall
xchg
mov
sub
cli
imul
xor
rclb
fldenv
mov
js
add
adc
adc
push
movsb
push
bound
jo
mulb
push
sahf
xlat
and
sub
adc
inc
loope
pusha
rclb
mov
add
mov
xchg
inc
fs
aad
icebp
xlat
pop
mov
stos
xor
cmp
movsb
push
lret
imul
xchg
push
test
jmp
shlb
adc
test
xchg
dec
pop
push
adc
fdivl
inc
mov
and
sub
cmp
adc
jle
lds
out
outsl
sub
push
mov
scas
das
push
push
sub
add
ficoms
out
and
lcall
shlb
divb
or
push
jnp
mov
jmp
jae
jae
scas
pop
jne
dec
ljmp
pop
nop
daa
test
into
ds
insb
xchg
int
jp
dec
xor
add
mov
and
push
sub
out
imul
xchg
cltd
mov
xor
inc
testl
cmpsb
loopne
scas
pop
inc
and
add
stos
sbb
dec
adcl
inc
jo
xorb
jge
pop
pavgb
fiadds
mov
jnp
inc
jbe
sbb
sbb
mov
aad
ret
sbb
pushf
testb
movsb
dec
dec
push
push
mov
or
mov
sub
into
in
pop
scas
dec
and
into
imul
call
hlt
test
xchg
popa
fisttpl
sti
push
mov
jae
fwait
aad
jae
jle
xor
jmp
cmpsb
inc
or
add
adc
jg
stos
jb
es
sub
int3
in
out
repz
push
jb
cmp
aad
mov
rcrl
enter
sbb
push
jo
shlb
mov
sahf
shll
jbe
decl
in
bound
mov
inc
mov
test
xor
and
inc
mov
jne
repz
sarb
out
aas
dec
shll
xchg
jb
xchg
lods
ret
mov
pop
outsl
clc
lcall
or
xchg
inc
adc
insb
cld
push
mov
data16
xor
jmp
mov
add
arpl
dec
repz
mov
adcl
cmp
into
scas
jecxz
jo
cmp
rcll
cs
ljmp
pop
add
sbb
es
xor
add
inc
dec
dec
xchg
or
cli
mov
and
inc
in
inc
ret
sbb
or
dec
cmp
test
pop
shrl
insb
cmp
hlt
cmp
dec
cmp
shr
mov
lock
jecxz
push
or
or
cmpsb
into
gs
xlat
xchg
adc
rcr
shll
sbb
cmp
mov
dec
daa
outsl
add
adc
cmp
push
ds
aad
mov
pop
repz
enter
mov
js
xchg
add
and
loopne
mov
repnz
pushf
or
scas
lock
push
xorb
xor
out
jmp
vorps
in
outsl
xor
cmp
mov
inc
shr
daa
push
inc
dec
cmc
cmp
pop
mov
pop
pusha
in
xchg
mov
fisubrs
mov
mov
jmp
test
mov
push
mov
scas
jbe
or
in
jae
arpl
test
mov
adc
jne
int3
repz
or
inc
xchg
xor
aam
negl
inc
pop
pusha
mov
aad
cmp
out
sub
or
iret
jg
jne
xchg
inc
leave
sub
xchg
lock
pop
push
pop
xor
xor
xor
imul
mov
pop
dec
aaa
xor
xchg
aaa
cmp
lods
fsubrs
xchg
inc
int3
push
sbb
pop
xchg
pop
mov
cmpl
push
aas
std
in
in
adc
loop
lds
or
mov
in
adc
mov
inc
dec
and
xchg
dec
ds
mov
push
and
adc
push
pushf
shlb
lret
cmp
test
jg
add
cmp
push
loope
xchg
inc
outsl
push
xor
dec
xchg
ret
push
mov
and
xchg
arpl
loopne
inc
mov
loop
stos
stc
imul
pop
push
stc
add
ficoms
scas
divb
adc
and
push
push
and
push
add
mov
aaa
inc
cld
outsb
addb
clc
push
js
adc
mov
dec
jo
lret
mov
fwait
adc
push
cmpsb
and
jbe
dec
xchg
pop
xchg
mov
shll
pop
iret
xor
pop
mov
icebp
and
mov
pop
or
mov
sti
cmpsb
fwait
repz
cmp
movsl
iret
dec
loop
in
cwtl
xchg
clc
aaa
out
mov
pop
mov
jle
scas
mov
into
push
push
sub
inc
daa
lret
inc
jbe
bound
cmp
outsb
iret
pop
adc
pusha
and
pusha
mov
xchg
inc
call
imul
jp
dec
call
pop
xlat
jb
xchg
sbb
push
mov
pop
stc
outsb
aaa
and
push
sbb
cmpl
push
lret
inc
dec
adc
test
das
subl
test
aas
mov
je
fisttps
push
jp
dec
mov
fdivrl
sbb
lods
fidivrs
cltd
movsl
scas
divb
rcll
add
xor
mov
ret
inc
fcomp
xlat
scas
ret
mov
mov
cwtl
lcall
sub
mov
and
and
in
les
repnz
mov
and
add
dec
pop
rclb
jns
inc
dec
inc
pop
aaa
mov
jmp
jmp
add
bound
pop
dec
push
js
push
mov
add
cmp
ret
rcrl
cmpsb
pop
jns
xlat
leave
test
aam
add
imul
jmp
ficoml
xchg
push
pusha
in
fidivrl
mov
test
or
lea
adc
cwtl
cmp
add
cmp
xchg
hlt
xor
adc
inc
mov
jle
dec
aad
popf
and
mov
addl
add
adc
mov
inc
mov
ss
cmp
loopne
and
ja
rcl
cvttps2pi
rolb
or
faddl
lock
dec
xchg
testb
pop
pop
cld
inc
popa
cmp
jp
rcr
xchg
add
cmp
fcmovbe
fstpl
mov
and
adc
adc
ja
jge
sub
fmuls
rorb
mov
add
sarl
in
mov
jg
leave
lock
adc
fadds
lcall
ljmp
mov
lds
popf
jno
out
imul
jae
xchg
inc
mov
mov
ret
mov
leave
std
mov
cld
dec
cmp
add
inc
push
gs
lock
into
addr16
ljmp
data16
mov
imul
insl
push
adc
out
ja
sbb
popf
pushf
push
ret
dec
jnp
sub
add
int
and
sarb
pop
lods
inc
gs
push
or
dec
aaa
fisttpl
or
sbb
cld
mov
or
sub
jp
cltd
dec
xchg
mov
mov
in
and
sbb
cmp
cmp
xor
pushf
and
or
mov
lret
or
leave
aas
jg
xor
mov
pop
mov
mov
sub
xor
mov
div
sub
stc
cmp
xor
xchg
pop
mov
mov
jbe
mov
enter
xor
mov
ret
xor
fs
rcr
xchg
inc
mov
cmp
mov
movsl
hlt
and
ja
sub
shlb
sbb
mov
jae
jnp
sub
arpl
sbb
addr16
stc
adc
xchg
ljmp
andl
adc
les
mov
jmp
and
sub
mov
ret
lret
or
jge
pop
or
out
dec
add
xor
sarb
and
lea
aad
imul
cld
sbbl
repz
dec
int3
aas
and
inc
in
mov
bound
mov
dec
test
mov
sbb
cli
sub
xchg
mov
xlat
jmp
outsb
les
aas
xchg
mov
aad
sub
negl
stos
xchg
in
call
pop
movsb
sahf
aas
imul
mov
and
mov
loopne
mov
shlb
call
ds
loopne
in
test
xchg
aad
std
adc
filds
mov
cmp
mov
push
mov
jns
div
mov
push
leave
es
sub
xchg
daa
sbb
mov
pop
shrl
divl
adc
rorb
ljmp
dec
neg
in
sbb
int
fwait
fs
fnstcw
add
push
inc
std
mov
mov
inc
stos
inc
adc
mov
dec
xchg
cmp
mov
push
mov
int3
leave
into
into
mov
pusha
push
sbb
fidivl
dec
cmp
enter
jnp
test
pop
jecxz
jmp
sub
mov
mov
aas
sub
adc
add
rcll
mov
jb
es
je
je
mov
jmp
adc
mov
inc
adc
xchg
sub
cmp
shlb
jns
in
bound
xor
mov
out
or
repnz
mov
fildl
or
sub
jo
mov
push
mov
or
inc
push
enter
mov
or
fdivs
inc
jecxz
lcall
lcall
sbb
pop
pop
ja
cmp
addb
xchg
jge
lret
rcl
aam
cli
sahf
jl
popa
xlat
mov
icebp
dec
in
add
mov
mov
scas
cmc
cmpb
inc
push
mov
adc
mov
or
pop
and
fwait
push
jno
sahf
pop
sahf
push
or
mov
test
push
jmp
mov
frstor
ljmp
push
pop
add
add
cwtl
or
les
push
hlt
dec
and
jne
xor
aas
lds
cmp
push
sub
scas
movb
sub
scas
stos
fwait
inc
dec
or
jecxz
sbb
jne
sti
out
fwait
mov
inc
xchg
pop
inc
imul
add
mov
in
lret
jecxz
test
repz
add
jb
fisubs
lock
jo
popa
push
mov
repnz
pop
mov
wbinvd
std
push
fs
xlat
jno
mov
div
scas
cmpsb
cli
or
out
movsb
mov
ja
or
jnp
rcll
cmp
pop
sub
loopne
loope
loope
sarl
ss
jo
cmp
mov
adcb
iret
into
push
pop
inc
in
in
pop
stos
jle
stos
ret
movsl
jbe
jle
mull
rcrb
hlt
notl
inc
sub
loopne
xchg
push
sbb
bound
loop
cmp
aas
into
inc
das
aam
inc
jne
sbb
add
cmpsl
add
sub
stos
test
iret
aad
addb
in
pop
cmc
ret
mov
cmp
dec
push
sbb
jge
adc
xchg
jge
in
fisttps
add
int3
push
rcl
pop
or
push
mov
jmp
mov
inc
inc
lahf
adc
jae
xor
mov
push
outsl
pop
jge
popf
enter
out
negl
xchg
jge
adc
test
pushf
in
adc
subb
imul
or
stos
in
mov
clc
and
sub
mov
insb
push
sbb
inc
push
push
fwait
loopne
flds
scas
pop
loopne
loop
cs
sti
pop
pop
cmpsl
pop
movsb
xor
adc
push
sub
mov
test
ficompl
sbb
daa
inc
mov
fsub
mov
xor
push
sarl
add
ljmp
mov
mov
scas
xchg
aas
jae
mov
clc
ja
filds
and
mov
jp
xor
or
inc
adc
sarb
sbb
and
or
or
in
out
mov
push
jmp
arpl
and
adcb
inc
fsubrs
andb
repz
sbb
gs
ret
fsubrl
popa
jg
push
sti
cmp
pop
aad
push
jp
inc
lods
fsub
sbb
and
into
add
mov
sub
je
add
xchg
pop
xor
cltd
dec
fiadds
dec
cmp
aam
cmpsl
icebp
pop
js
bnd
push
sub
and
fucomip
xchg
mov
mov
insl
and
pusha
pop
xchg
bound
pop
dec
mov
pop
ljmp
dec
adc
iret
lret
pop
jp
pusha
cltd
int3
call
mov
das
in
in
pop
dec
aas
push
into
and
cli
inc
xchg
push
fmul
pop
add
in
pop
adc
icebp
adc
fistps
scas
adc
sub
jne
adc
ss
pushf
es
push
and
adc
jnp
push
xor
ja
push
push
gs
xor
pop
imul
lods
out
fsubl
adc
cmp
fisubl
mov
lds
cmp
ds
es
pushf
dec
push
test
js
pop
sub
test
or
xor
decb
lret
pop
pop
outsl
push
jbe
xchg
pop
ljmp
mov
push
aas
push
sub
xor
adc
pop
push
xor
push
add
jmp
xchg
pop
lahf
mov
add
pop
xor
decl
inc
sbb
xor
fistl
test
ficoml
es
sarl
mov
cs
push
add
ret
sub
and
xor
test
xchg
mov
push
ret
dec
test
and
outsb
pushf
mov
lcall
and
aaa
sbb
int3
jne
and
test
lods
hlt
xlat
xchg
gs
push
dec
leave
jl
fidivl
lahf
lock
mov
dec
mov
arpl
fcompl
pop
mov
mov
lcall
jl
sbb
ret
pop
outsb
mov
sbb
lods
decl
cmc
sub
pop
shrl
push
and
sub
in
rolb
cmpl
sbb
leave
dec
ret
sub
mov
push
adc
shlb
pop
scas
loop
daa
inc
and
shlb
in
addb
js
xor
out
inc
repz
mov
cmp
insl
clc
shrb
inc
lret
push
lahf
data16
pop
adc
push
add
dec
mov
repnz
add
sub
sarb
outsl
cmp
out
cmp
movsb
or
sbb
or
and
lcall
imul
xchg
push
mov
test
std
xchg
jnp
lock
push
sar
push
lret
rcrb
mov
shrl
mov
popf
jns
outsl
push
in
push
cmp
pop
mov
fisttpll
loop
push
cli
sbb
cmpsl
popa
dec
or
jmp
outsl
sar
int3
ss
mov
out
lcall
mov
fwait
xchg
push
fiadds
adc
jmp
dec
adc
int
cmp
adc
sub
sub
inc
stos
mov
jp
jo
scas
mov
xchg
adcl
push
sbb
loope
insl
pushf
and
or
in
jbe
fidivs
int
inc
test
dec
gs
nop
addr16
mov
jnp
cwtl
bound
jecxz
ljmp
xchg
es
lea
lret
lcall
lock
int3
repnz
imul
imul
add
inc
fisubrl
dec
test
push
cmpsl
cmp
add
mov
xor
xchg
arpl
adc
jb
pop
push
pop
sub
fdivs
pop
and
push
test
adc
repz
test
adc
cmp
dec
repnz
sub
jo
int
pop
or
dec
divb
xchg
push
sbbl
das
or
jle
push
sub
sarl
imulb
push
pop
inc
jbe
mov
inc
mov
rol
sub
dec
adc
push
ret
pop
shll
xchg
or
adc
dec
or
sbb
out
jb
ret
insb
inc
mov
mov
mov
cmpsl
and
outsb
aad
popf
add
sbb
jbe
and
jae
xchg
mov
dec
xor
mov
pop
test
dec
popf
or
rclb
mov
add
mov
ret
jg
sub
jae
pop
cmp
pop
jecxz
mov
daa
mov
call
iret
les
ljmp
ljmp
fbld
sbb
ja
pop
inc
pushf
test
sub
dec
inc
aad
dec
imul
filds
sub
lcall
xchg
xor
push
mov
jns
cmp
imul
fs
stc
jl
push
sbb
ret
mov
scas
pop
and
jle
out
cmp
mov
stos
inc
shrl
je
add
and
xchg
idiv
inc
mov
mov
xchg
mov
xchg
and
xchg
movsb
dec
pop
into
dec
xlat
xlat
ficompl
inc
mov
int
rsm
outsl
stc
fs
mull
addr16
inc
mov
inc
adc
in
lar
sub
sub
xchg
int3
sbb
xchg
pop
sub
lahf
jmp
jg
pop
mov
xchg
xor
in
int3
xchg
sub
xchg
and
mov
adcl
lea
adc
xor
xchg
lcall
loopne
cltd
sti
js
out
mov
xchg
mov
icebp
push
gs
nop
adc
mulb
call
cmp
sbb
push
fcomip
pop
xchg
xor
jbe
mov
add
inc
mov
jb
mov
sbb
arpl
or
insl
cld
out
stos
vcvtsd2ss
inc
adc
or
test
aad
addr16
mov
and
mov
and
mov
dec
call
adc
loop
in
lds
iret
mov
or
jle
sbb
aad
mov
add
cmp
and
inc
sbb
cmp
icebp
popf
sbbl
inc
jmp
fadd
imul
dec
sahf
add
fstpl
jo
dec
fcoml
lcall
ficoml
stc
adc
adc
push
int3
lds
insl
cwtl
ss
mov
jmp
rolb
out
cmovbe
cmpsb
sbb
mov
call
sbb
lods
pop
pop
popa
jecxz
dec
xor
mov
xchg
popf
fsubp
pop
pusha
bound
sub
cmp
scas
push
sbb
test
lods
stc
stc
scas
int
pop
sbb
dec
cmpsl
mov
mov
loope
js
adc
dec
fwait
ret
pop
cmpsb
gs
sti
mov
popf
call
mov
sbb
mov
adc
push
dec
cmpsb
mov
xchg
inc
outsl
cmp
push
and
mov
ds
out
mov
sbbl
mov
fadds
mov
add
movsb
mov
push
push
push
add
in
in
and
push
xor
cmp
xor
out
sub
arpl
push
xchg
dec
jmp
ret
push
jecxz
push
sbb
int3
push
lock
aam
or
xor
xor
arpl
out
add
ss
icebp
jg
and
test
inc
imul
cmpsb
adc
movsl
cmpl
xlat
ljmp
int3
ds
fwait
mov
sub
fimuls
aad
mov
lds
xchg
xchg
ljmp
sbb
xchg
and
dec
sahf
and
call
insb
mov
xor
fdivrs
pop
shlb
cmp
jne
xchg
mov
mov
jmp
jae
adc
test
fists
xchg
sbb
sti
mov
js
push
lods
cmpl
scas
pop
mull
adc
push
stc
mull
ss
daa
in
jb
xor
sbb
test
sbb
or
mov
aam
arpl
shl
jp
mov
push
mov
test
lahf
ljmp
xor
lods
fimuls
add
fwait
xor
dec
ja
inc
sbb
xchg
ds
pop
cmp
and
or
xchg
cltd
dec
adc
sbb
dec
scas
dec
mov
cmpsb
ja
fbstp
scas
lret
jl
jle
pop
push
arpl
lock
cli
pusha
test
rcr
outsb
inc
sbb
xchg
push
imull
insb
aam
fisubl
push
mov
mov
out
fmull
sbb
sub
mov
xor
pop
es
and
mov
sahf
inc
fsubrs
out
sub
inc
out
inc
cmp
dec
les
xchg
xchg
sbb
dec
jle
dec
pop
out
inc
std
aam
mov
roll
or
loop
ret
out
mov
jns
and
repnz
aas
scas
mov
mov
mov
sbb
mov
mov
test
dec
out
mov
mov
lds
jo
jmp
jbe
in
out
jns
stos
imul
jg
fimull
scas
mov
shr
adc
fwait
and
inc
test
jg
mov
aad
cs
cmp
pop
inc
movsl
lea
aas
pop
dec
mov
push
inc
sbb
loopne
xlat
hlt
mov
sbb
jb
sbb
mov
dec
inc
jmp
xchg
clc
aas
mov
popa
mov
pop
push
push
jae
sbb
mov
mov
in
inc
aam
addr16
lds
je
push
insl
push
inc
mov
cmpsb
push
and
test
cld
adc
addr16
inc
es
push
inc
xlat
inc
push
addr16
mov
push
lds
xlat
stos
imull
pop
call
mov
inc
and
push
orl
loope
fldl
lret
push
sbb
in
lret
or
ret
jne
add
jnp
aaa
mov
sub
daa
shlb
arpl
daa
stc
scas
cmp
mov
push
test
lea
xlat
push
cmpl
xor
cmp
repnz
sbb
out
cmc
and
fwait
push
mov
adc
shrb
dec
test
add
std
inc
xor
sbb
aaa
shl
mov
fiaddl
popa
hlt
mov
int
mov
incb
iret
push
hlt
or
cmp
out
jmp
scas
xlat
mov
movsb
inc
in
movsl
xchg
xchg
testb
push
daa
dec
or
xor
pop
fstl
aad
pusha
or
or
ret
in
iret
mov
data16
jecxz
aaa
or
lea
adc
leave
cmp
shll
aam
sbbb
mov
xor
adc
ja
xchg
dec
sbb
shrb
ja
popa
or
xchg
xchg
adc
decl
mov
pop
mov
data16
push
outsb
lods
fstpl
pop
mov
repnz
aad
lods
dec
mull
mov
sub
push
push
imul
mov
mov
pop
xor
jge
push
sarb
xlat
cs
sub
add
inc
xchg
jo
shlb
mov
in
xlat
ret
xchg
pop
add
cmp
push
xchg
pop
add
jg
jo
mov
xchg
and
shr
inc
test
xor
and
cltd
scas
stos
fisubs
fistl
movsb
mov
dec
notl
add
and
push
aad
scas
cwtl
dec
in
sbb
cwtl
mov
testb
adc
dec
aad
arpl
lods
aad
pop
jge
jne
inc
psrad
inc
outsb
mov
divl
cld
adc
pusha
stos
xchg
sbb
push
gs
add
sub
mov
stc
push
mov
jno
adc
lea
lret
lahf
jno
scas
std
inc
das
rorb
cmp
int3
mov
dec
sahf
or
cmpb
cmp
les
or
shll
das
push
jns
sbb
cmp
add
mov
mov
inc
lret
jl
adc
ja
mov
in
push
ret
xchg
push
xchg
movsb
cltd
bound
inc
cs
loopne
adc
pop
lahf
add
mov
es
add
inc
push
adc
in
adc
imul
and
sbb
ljmp
pop
outsl
pop
mov
lcall
fs
pop
stc
es
adc
or
addr16
aas
cmpsl
daa
sbb
stos
cwtl
popa
sahf
jns
fldcw
push
shll
inc
mov
lret
lods
mov
cs
ds
ss
pop
jbe
jecxz,pn
cltd
stos
mov
mov
jb
and
loope
sub
fisubrs
pop
push
cmpsl
hlt
in
insb
sbb
das
mov
pushf
jmp
add
std
daa
lret
xchg
sbb
sahf
jge
or
pop
icebp
sbb
mov
mov
pusha
repz
stos
inc
pop
pusha
ss
mov
dec
stos
or
sub
jbe
dec
clc
fdivs
add
mov
mov
dec
xor
rcll
les
nop
pop
cmp
mov
lahf
pop
dec
push
lods
fnstcw
sbb
imul
cmp
mov
push
repz
pop
jno
dec
xchg
rcrb
add
int3
xchg
mov
popa
sbb
jmp
je
pop
and
iret
fisubrs
repnz
imul
mov
xchg
pop
xorl
repnz
jmp
mov
bound
test
inc
rcl
adc
and
pop
inc
rclb
arpl
std
cs
xchg
adc
hlt
push
cmp
fimull
cmpsl
repnz
cld
sub
and
xchg
xlat
or
test
mov
lcall
shll
aaa
push
mov
xchg
sbb
push
arpl
mov
mov
cmp
cs
push
jno
outsl
xchg
sbb
repz
inc
lock
fs
pop
jo
mov
xchg
xchg
mov
out
rcll
lods
daa
std
mov
jecxz
ljmp
rolb
sbb
adc
and
or
inc
shrb
sbb
insl
add
mov
dec
addl
or
mov
scas
xlat
jns
mov
xchg
push
aam
iret
nop
das
outsb
mov
orl
add
and
adc
pop
imul
adc
mov
xchg
pop
loope
les
sti
cmpsl
adc
push
out
xor
insb
push
loopne
popf
jo
imul
andb
xor
or
dec
cmpsl
mov
addr16
mov
pop
and
ficoms
mov
push
pop
cmp
lcall
xorb
xorb
and
jnp
fs
jne
call
cmp
pop
addr16
mov
cltd
xchg
inc
xor
outsl
lret
loopne
arpl
jecxz
mov
scas
sub
push
hlt
jecxz
and
cmpb
test
and
mov
mov
test
sbbb
fistl
out
dec
inc
aad
push
lret
add
imul
inc
cmovp
jnp
cmp
bound
negb
rorb
enterw
jg
enter
or
imul
das
mov
dec
cmp
orb
lods
mov
sarl
call
push
in
mov
jo
movsb
add
mov
mov
cmp
push
mov
cli
push
fisubrs
or
ja
jmp
pop
mov
pop
mov
sub
push
or
je
mov
cmp
ljmp
imulb
jmp
ret
das
inc
nop
inc
addb
daa
stc
ss
outsl
aaa
data16
push
movsb
int
fisubl
mov
popa
aas
add
divl
xchg
clc
orb
jb
cmpsl
push
hlt
outsb
xchg
lods
xor
popa
mov
pusha
scas
clc
cmc
ret
xor
les
xor
test
mov
add
or
outsl
rcrw
adc
loope
add
stos
in
repz
xchg
lea
adc
lcall
iret
int
movsb
or
clc
add
sarb
std
stos
imul
cmp
sar
cmc
add
int3
addr16
ret
or
mov
xorl
sarb
cmp
rcr
mov
mov
jbe
sti
add
pop
dec
push
push
lods
xchg
inc
loop
push
inc
xor
xor
je
rclb
xor
xor
jecxz
xor
jg
das
xor
fstl
mov
lock
dec
mov
sub
out
idivb
popf
jns
les
and
xchg
ret
mov
repz
and
adc
jmp
cmp
add
gs
popf
mov
mov
inc
mov
fs
sub
dec
dec
cwtl
sbb
mov
iret
add
xchg
jecxz
inc
mov
sub
mov
mov
xchg
mov
mov
jecxz
pop
push
jae
xchg
xchg
scas
movsb
lahf
fdivrl
add
push
bound
daa
jle
sbb
shll
sub
call
popf
xor
adc
cmpsl
aaa
imul
nop
int
and
jo
adc
popa
stos
and
and
jnp
cmp
sarb
mov
or
adc
test
into
sub
inc
daa
jno
shrl
data16
inc
push
pop
scas
ljmp
jo
jge
lahf
icebp
sbb
subl
sbb
fidivs
or
mov
daa
mov
mov
xor
orl
mov
clc
lret
add
imul
ss
xchg
inc
das
dec
lret
mov
rorl
shlb
movsl
nop
sub
sbb
push
and
pop
data16
fnstcw
mov
inc
sbb
xchg
add
ficomps
cltd
dec
fadds
pop
repz
inc
jle
test
icebp
inc
into
cmp
push
dec
add
insl
jp
lock
and
push
out
lret
and
add
mov
xchg
and
sub
imul
lahf
out
mov
mov
data16
xor
inc
mov
lahf
sti
jle
test
add
and
xchg
scas
pop
push
shrl
adc
call
repnz
in
int3
fldt
jb
push
jne
out
xchg
adc
imul
jb
push
sub
push
fwait
adc
jecxz
and
mov
xchg
rcrl
ss
jg
add
movsb
inc
mov
dec
dec
push
mov
dec
mov
outsb
inc
lret
arpl
mov
cmc
sbb
enter
push
mov
mov
pop
bound
and
aad
cmp
negb
inc
repnz
xchg
daa
loope
and
rcrl
jge
scas
std
insl
enter
cmpsb
jo,pt
loop
mov
and
adc
outsb
mov
push
inc
fsubrs
cmp
and
lahf
insb
sub
es
mov
rolb
imul
sbb
inc
sbb
cmpsl
or
dec
and
lahf
lret
mov
cmpsb
mov
inc
sbb
push
js
stc
cmpsl
jb
dec
mov
notb
lock
int3
imul
cli
or
sub
icebp
mov
and
int3
inc
cmp
cs
sub
les
rcrb
push
das
lahf
cmp
fidivl
push
aas
aam
mov
test
aaa
enter
mov
jle
inc
pop
pop
dec
mov
daa
into
push
mov
xchg
lock
dec
fdivs
mov
pop
or
push
adc
addr16
xchg
lods
push
test
int3
xchg
mov
fcmovnu
std
popf
adc
adc
pop
mov
ja
pandn
push
or
out
pop
mov
mov
cld
pop
fistpl
pushf
add
adc
or
mov
xor
stos
cmp
ja
pushf
add
les
loope
jne
jmp
sub
fisttpll
push
and
push
mov
imul
addr16
cmp
push
jp
push
nop
cltd
push
mov
test
int3
adc
mov
pop
pop
outsb
in
shll
xchg
scas
mov
or
xor
xchg
pop
dec
cmpsb
loop
push
adcb
inc
out
jp
imul
int3
popa
daa
loopne
insl
mov
and
test
stc
mov
stos
pushf
icebp
lea
test
add
sub
call
add
cmp
das
push
jb
dec
out
pushf
int
int3
push
adc
cld
dec
inc
jle
nop
push
popa
lods
cmpsb
cmp
int
cltd
out
cmp
fs
cmp
push
or
adc
iret
dec
loope
cmp
adc
mov
idivl
jbe
push
rcrb
repz
jge
adc
adc
mov
fwait
jle
cmpb
shl
movsb
gs
adc
mov
rclb
idivl
dec
xchg
je
xor
xor
push
fistpll
pusha
sbb
test
jge
cmp
icebp
pusha
inc
rolb
mul
add
cli
repz
sbb
mov
lds
dec
jmp
or
add
add
int3
add
ret
xchg
out
pop
mov
add
sub
inc
cmp
icebp
out
adc
mov
cmc
sbb
dec
mov
mov
or
pop
cmp
or
mov
adc
jo
sahf
mov
mov
insl
sbb
jecxz
imul
rclb
decb
stos
sub
movsl
jns
pop
std
mov
sbb
inc
push
data16
xlat
fidivrs
in
scas
mov
inc
cmp
sub
data16
mov
add
std
inc
cmp
inc
mov
xchg
adc
je
cld
ret
inc
into
scas
adc
and
adc
cltd
or
fstps
xchg
jge
mov
jae
mov
scas
sub
cmp
sbb
enter
lds
mov
adc
mov
or
lcall
mov
xlat
cmc
mov
stos
pop
xchg
inc
vprotd
xchg
stc
loop
aaa
cmpb
mov
jns
fs
stos
cmp
cld
mov
pop
or
lds
or
das
insb
jp
push
and
cli
lret
jle
push
lret
popf
xchg
jp
xor
push
xor
and
pop
addr16
inc
lods
nop
flds
cld
and
pop
xor
cmp
xchg
negl
ja
sub
test
lret
fisttpl
lea
push
cld
loopne
bound
mov
shll
inc
ret
mov
js
outsl
iret
inc
scas
pop
hlt
xor
out
roll
push
into
sub
jne
ret
das
loope
push
imul
test
mov
into
pop
lret
test
loop
mov
and
pop
or
sub
or
and
dec
cmpsl
out
add
mov
lcall
dec
dec
push
es
sub
sti
sbb
scas
dec
repz
loopne
add
dec
divb
and
or
xchg
inc
push
std
push
clc
jecxz
jae
rcrl
mov
or
fsub
repnz
and
add
aas
js
cmpsb
lds
mov
pushf
pushf
xor
lods
add
jo
es
fdivl
xchg
lods
adc
js
sbb
xchg
stos
xor
push
in
lods
pop
not
repz
and
pop
mov
movl
int3
adc
lock
or
mov
adc
xlat
jns
arpl
enter
es
and
hlt
outsb
int3
mov
fsubrl
pusha
pop
xchg
mov
mov
xadd
pusha
add
sbb
cltd
jmp
scas
loope
nop
add
sbb
inc
test
dec
sub
mov
lcall
mov
repz
jnp
or
ror
mov
and
dec
scas
aad
mov
orl
enter
cmp
mov
arpl
in
in
pop
mov
inc
call
shlb
aad
sub
push
push
cmpsb
jo
enter
adc
rolb
sbb
pop
push
call
test
xchg
jb
leave
jl
lods
push
je
sub
leave
pop
scas
jnp
jmp
push
sar
jl
dec
jmp
scas
test
pusha
imul
stos
push
add
push
fwait
jns
outsl
pushf
leave
fdivr
in
int
inc
mov
add
sbb
xchg
dec
pop
push
pop
insl
or
in
mov
lds
dec
mov
add
test
into
and
sahf
mulb
fcomps
inc
in
mov
pop
or
jbe
negb
add
xorl
jg
pop
loope
loope
fbld
or
dec
push
lock
icebp
push
daa
sbb
push
insl
and
and
sbb
sti
adc
loopne
xchg
add
lret
cmp
xchg
pop
hlt
fcmovnu
aaa
or
lods
cmp
dec
rcrl
dec
mov
adc
fsub
dec
cli
rcl
mov
call
mov
popf
fdivl
or
clc
pushf
in
jmp
lds
xchg
cmp
add
jae
scas
call
loope
out
push
mov
mov
sti
xor
jne
mov
shrl
fbstp
test
sahf
pop
cmp
jnp
aam
sbb
pushl
adc
out
xchg
xor
clc
mov
jmp
mov
sub
jle
xchg
push
bound
or
and
mov
jb
jmp
divb
shll
fiadds
fstl
pop
xchg
or
xchg
pop
push
inc
jge
stc
repz
jnp
xorb
sti
imul
lret
inc
push
lods
xchg
pop
in
mov
lret
aas
into
adc
inc
mov
leave
sub
ficomps
jp
dec
pop
or
jbe
xchg
sub
xchg
jp
mov
sbb
sahf
sarb
or
loopne
ret
clc
or
pusha
add
pusha
dec
sbb
mov
mov
pusha
sbb
icebp
mov
and
ljmp
push
loopne
xchg
movsl
add
pop
push
xor
mov
sub
pop
out
je
outsb
fs
sub
inc
jmp
pop
cmp
mov
cmp
sub
bound
testl
sbb
pop
repnz
rolb
in
pop
ds
enter
or
inc
addb
jecxz
imulb
addl
pop
shll
jmp
aam
mov
imul
adc
cmc
xchg
sbb
or
mov
pop
sub
dec
fldt
cmp
mov
jno
dec
and
mov
stos
dec
mov
stos
pushf
stos
clc
stos
cmc
push
div
jnp
clc
xchg
iret
xchg
js
repz
inc
cmp
cmp
rcrl
jne
adc
lret
aas
popa
cmp
scas
enter
scas
fwait
pop
out
mov
dec
je
mov
popa
test
pop
sbb
mov
sub
test
mov
stos
adc
pop
mov
js
mov
into
jecxz
jns
repnz
push
mov
or
stos
xor
push
insl
jmp
repz
or
cmp
xchg
xlat
loop
cld
push
les
mov
cwtl
fadds
out
pop
leave
jbe
aam
xchg
sub
aam
mov
dec
mov
push
out
dec
loopne
mov
cli
mov
pop
icebp
mov
jg
ja
push
mov
xchg
sarl
push
fcmove
shlb
lock
in
call
adc
jmp
int
fisubs
cltd
scas
jbe
daa
cmp
and
outsb
lods
imul
pusha
push
loop
shlb
test
lds
rcrl
addb
and
das
push
sub
rcr
fmul
into
jnp
add
push
pop
sub
jecxz
rcrb
lds
add
mov
daa
sub
sbb
xchg
getsec
ret
mov
dec
sbb
sub
cmp
cmpsl
test
sub
das
adc
push
cs
test
push
aas
push
scas
loop
push
ds
ja
sarb
add
pop
stos
fsubl
in
pop
jno
outsl
fisttps
add
pop
add
mov
mov
and
movsl
mov
rcrb
mov
dec
mov
xor
xor
xor
gs
leave
scas
mov
into
cltd
adc
ljmp
loope
imul
icebp
add
lcall
pop
jmp
int
xchg
and
in
mov
add
inc
in
pop
insl
add
test
mov
push
mov
mov
pushfw
mov
pop
mov
pop
mov
or
add
sbb
jp
call
add
push
int
dec
nop
inc
daa
add
xchg
in
dec
sub
inc
mov
cmp
shr
jg
push
scas
cltd
out
int
cmp
jns
adc
js
cmp
sub
imul
sbb
and
push
cltd
ljmp
mov
adc
loopne
sar
sbb
xor
rep
scas
or
shll
lods
mov
and
out
arpl
outsb
push
mov
test
js
cmp
jg
mov
and
out
adc
push
daa
adc
mov
cmp
pop
push
and
inc
xchg
xchg
xchg
jae
inc
push
pop
lock
fimull
jmp
pusha
insb
jg
rolb
sbb
roll
popa
jecxz
pop
call
adc
arpl
cmp
aas
add
data16
fidivs
cmp
and
adc
adc
add
shlb
or
insl
outsl
arpl
mov
or
or
jmp
sbb
ja
aad
ret
fdivp
add
add
stos
clc
or
or
xor
cli
fs
fwait
rcl
push
cld
mov
jae
mov
pop
cmp
and
faddl
xchg
repz
pushf
int
push
cmp
sbb
or
jge
add
js
lods
xor
jg
jp
cli
dec
fwait
shr
dec
cmpsb
mov
and
je
and
sbb
imul
pop
int3
gs
subl
stos
in
rclb
mov
ljmp
inc
clc
sahf
scas
adc
dec
std
jnp
mov
mov
mov
les
cmpsb
loopne
sbb
adc
or
in
sbb
testl
jns
rorl
jg
adc
mov
cmpsb
jp
jno
in
cmc
ss
lods
mov
inc
pop
sbb
push
testb
mov
roll
adc
insb
and
and
jno
mov
mov
jno
dec
mov
jns
hlt
mov
fisttpl
fisubrs
bound
jne
mov
adc
jecxz
clc
ficompl
fs
cmc
xchg
mov
mov
lret
outsb
dec
sti
or
mov
cmpsb
push
xchg
test
cmp
cwtl
cmc
sahf
mov
adc
cmp
imul
xor
jne
mov
mov
hlt
rcrl
out
dec
add
ficomps
sbb
inc
xorl
daa
inc
sbb
jbe
jo
jmp
or
xchg
in
jbe
jne
pop
push
lock
enterw
rcll
in
out
inc
mov
dec
jae
imul
sub
out
sbb
leave
sarl
out
cltd
xchg
xchg
mov
push
cltd
adc
xor
mov
pop
loop
inc
cmp
les
mov
cmp
out
lods
fsubr
push
repnz
jno
lock
insb
mov
mov
shrl
xlat
inc
cmpsl
insb
mov
adc
sub
push
dec
cmp
movsl
fyl2xp1
xlat
adc
pop
sbb
imul
stos
adc
scas
inc
adc
out
out
ror
out
repz
loopne
sarb
movsb
enter
mov
pop
pop
pop
loop
jae
pop
dec
mov
clc
xchg
cmp
sarl
mov
mov
fwait
lods
pop
call
pusha
or
in
pop
idivl
add
out
and
jo
inc
std
mov
popf
je
lahf
jb
mov
cltd
pop
xchg
inc
fldt
add
in
pop
push
lahf
loop
lods
cmc
ja
push
cs
or
mov
cmp
inc
mov
notl
dec
add
lret
das
stc
gs
stos
inc
and
scas
pop
add
repnz
into
mov
dec
je
sub
lahf
fwait
data16
lret
icebp
cmp
inc
jno
jle
repnz
mov
fwait
aam
mov
xchg
mov
bswap
iret
and
arpl
scas
and
iret
mov
arpl
pop
sarb
cwtl
dec
cmp
dec
cltd
lret
add
pop
fadd
xchg
adc
or
es
lret
jne
pop
arpl
and
dec
cmp
cwtl
movl
mov
cmpsl
mov
or
loop
xchg
jl
xor
insb
or
push
stos
sti
iret
mov
mov
cmp
sbb
jp
negb
sbb
xlat
dec
cmp
ds
jns
jmp
insb
sub
ljmp
sbb
jl
pop
aas
lock
add
repz
push
cmp
sti
adc
sbb
mov
xchg
mov
add
push
jae
push
pop
sbb
adc
mov
call
ja
ret
or
pop
and
jp
je
mov
push
notl
push
xorl
xor
pop
xor
mov
jne
xchg
mov
pop
hlt
mov
imul
dec
and
jmp
xchg
mov
add
pop
xor
insb
adcl
mov
into
jae
test
adc
ret
int
xor
lea
shlb
daa
mov
rclb
icebp
mov
test
dec
push
fmull
cltd
sbb
or
xchg
icebp
adc
jg
ret
push
icebp
push
outsb
sahf
push
ret
and
ret
loop
cmpsb
mov
inc
in
and
mov
es
decb
lds
sbb
hlt
into
or
mov
rcll
add
lods
jge
clc
dec
shlb
jle
lods
pop
stos
rcl
int3
cld
cltd
adc
cmp
pop
in
mov
dec
mov
outsl
and
push
inc
cmpsb
out
sub
add
sub
sbb
mov
push
imul
int
xor
mov
mov
icebp
and
pop
dec
mov
bound
popa
fstl
shl
inc
lcall
in
push
inc
lret
sub
scas
sbb
add
int3
movb
jmp
or
mov
das
dec
shll
addr16
sub
repnz
inc
rorb
call
or
lcall
adc
imul
inc
pop
sub
cmp
or
push
push
mov
push
fsqrt
jno
lock
aam
dec
adc
js
xchg
fisubrl
dec
aaa
es
xchg
cmp
xor
test
outsl
pop
mov
jb
popa
orl
cmpsl
pusha
sub
lds
sbb
mov
hlt
sub
jg
xor
call
inc
adc
adc
mov
mov
addr16
push
jge
das
lods
dec
xor
mov
dec
je
arpl
test
mov
lock
loopne
out
mov
fisttps
dec
stos
std
cmp
ljmp
jge
cmp
pop
arpl
adcb
jecxz
fdivs
xchg
daa
out
pop
cltd
sarl
rorb
mov
ret
in
and
mov
jbe
dec
mov
sub
xchg
mov
rolb
mov
es
in
inc
cmc
add
or
arpl
xchg
pop
and
inc
into
xchg
push
inc
loop
xchg
ret
das
cmc
ja
sbb
rcrl
jno
mov
xchg
gs
shll
scas
lods
jo
mov
or
adc
cmp
cmp
sti
jle
mov
cmp
cld
movsl
or
jne
and
add
pop
xor
aaa
pop
jp
fdivrl
sub
xchg
push
adc
or
add
or
push
push
outsl
add
dec
sbb
jecxz
mov
mov
sahf
es
xchg
mov
leave
dec
xlat
jp
pop
ljmp
les
std
mov
nop
inc
cmp
xchg
movsb
loop
sbb
push
xlat
mov
jns
roll
fnsave
or
xchg
loop
subl
and
mov
xor
jge
cmp
ret
call
shlb
js
dec
or
xchg
aas
or
testb
mov
dec
jle
or
xor
inc
inc
out
std
daa
mov
cmp
mov
xchg
mov
aaa
aaa
xor
push
or
ja
dec
divb
mov
xchg
push
sar
subl
jne
xor
popa
rclb
jae
ret
fisubl
decl
pop
adc
sub
or
in
and
inc
notb
mov
dec
leave
pop
sarb
cmc
scas
xchg
pop
andb
pusha
fs
mov
gs
add
jg
jmp
lret
add
dec
ss
es
dec
dec
add
push
mov
dec
das
test
dec
scas
cli
xor
cmpsb
and
sub
jnp
gs
test
arpl
adc
cmp
ja
cmp
push
mov
ret
cmp
jnp
sub
and
mov
pop
sub
inc
ljmp
aaa
pop
push
adc
add
jp
xchg
into
pop
mov
dec
ds
orl
icebp
jbe
lds
leave
adc
jg
movups
xchg
xor
dec
std
mov
movsl
xor
mov
mov
push
scas
push
jl
adcb
std
dec
fstl
in
or
popw
push
mov
nop
sbb
decb
in
pop
push
dec
pushf
loop
mov
int
xchg
mov
ljmp
insb
mov
pop
fnstenv
loop
xor
mov
or
fnstenv
scas
dec
fcomps
push
fisubrl
push
gs
ret
inc
in
add
adc
in
not
mov
insl
je
pop
mov
jl
lahf
lock
int
sub
dec
int3
pushf
lahf
mov
mov
movsb
jg
stc
add
or
dec
pop
cmpb
jne
mov
int
int3
lock
fidivl
insl
cli
loop
insl
mov
outsl
sub
mov
inc
test
dec
adc
out
leave
cs
fstpl
dec
mov
jl
les
mov
ret
sarl
mov
mov
dec
fmuls
inc
test
add
or
sbb
in
push
out
sub
xor
mov
xchg
int
dec
ret
cs
and
xor
sahf
jb
das
addr16
cmp
andl
pop
movsb
movsb
insl
movsl
mov
scas
adc
in
andb
loopne
adc
sbb
stc
xor
inc
sbb
test
into
mov
faddl
lods
das
shl
nop
cld
cmp
push
jbe
incl
out
sbb
iret
ret
in
jo
call
jbe
inc
cli
shll
push
aam
js
sahf
aad
add
mov
mov
jo
shl
sti
cmp
mov
add
sub
jge
mov
cmp
jne
cmpsl
scas
pop
push
dec
cmpsl
sub
adc
adc
data16
test
jne
iret
repnz
rolb
pop
lods
lret
scas
into
mov
scas
mov
scas
or
sub
pop
rorl
adc
pop
and
dec
pop
lcall
addr16
jae
inc
and
lods
pop
ret
addw
cmp
sahf
xor
mov
std
imul
push
inc
push
jnp
xor
sahf
mov
xchg
cltd
xor
lds
add
lea
aaa
std
ljmp
call
adc
jns
out
push
pop
dec
jae
out
ds
xor
cmp
inc
jnp
cmp
push
mov
adc
pop
or
xchg
fsubrl
fiadds
adc
inc
stc
jecxz
pop
movsb
popa
es
fcmove
je
xchg
xor
dec
lret
and
adc
lret
mov
sbb
and
sbb
into
cltd
cmp
dec
cltd
mov
push
or
iret
sbb
push
inc
xlat
pop
jmp
sub
jb
cmp
icebp
outsb
pop
dec
mov
push
mov
xor
fwait
daa
imul
adc
fmull
gs
jb
ds
popa
lods
adc
or
cli
test
xchg
cwtl
cld
mov
add
cmp
xchg
push
xor
push
fisttpll
aad
push
loopne
jns
sub
test
xchg
clc
mov
dec
push
les
clc
fnstenv
mov
jge
push
fistpll
aam
jo
cmp
and
mov
or
adc
dec
xor
inc
decb
sbb
icebp
add
inc
mov
int3
mov
scas
adc
ss
pusha
nop
dec
int3
jg
ljmp
mov
aad
dec
imulb
loope
pop
add
mov
and
test
add
mov
rclb
lret
mov
ljmp
lahf
lea
adc
inc
addr16
subl
fbstp
pusha
and
cmp
movsb
leave
cltd
pop
add
fldl
and
stos
mov
movsl
movsl
outsb
ds
outsl
ss
out
push
add
pop
dec
lret
adc
mov
mov
and
js
data16
hlt
rcrb
xchg
jl
inc
dec
sbb
ud2
jo
pusha
leave
ret
pushf
add
scas
negb
xchg
add
lret
mov
cmp
test
xchg
enter
lods
add
dec
in
cmp
push
jno
shlb
sub
and
push
ds
sti
push
lret
mov
outsl
jno
or
sub
xor
call
inc
daa
cmp
rorb
fnsave
jb
add
pop
cmp
in
stos
flds
insb
jecxz
incl
or
or
out
leave
cs
ja
jno
pop
jb
jb
sub
gs
inc
les
outsl
jmp
sub
sub
inc
xor
movsb
xorl
sbb
sub
fsubrp
sub
lea
push
pop
daa
xchg
mov
leave
adc
mov
cmp
in
mov
or
fsubrl
cmpsb
push
movsb
lock
cmp
call
xlat
inc
xor
icebp
inc
inc
rcrb
xor
rcl
mov
or
mov
cmpsl
rol
lahf
mov
es
flds
pop
pop
ljmp
xchg
sbb
hlt
lret
cmp
dec
sub
add
pop
stos
xor
movsl
inc
data16
inc
mov
push
mov
pop
les
lret
xor
mov
jmp
test
jmp
cs
dec
aad
xchg
push
out
call
lock
xchg
sbb
mov
pavgw
imul
cmp
add
mov
add
in
sbb
push
jae
add
fbld
ret
ret
jae
push
in
or
out
pop
push
mov
mov
and
sbb
jmp
pop
dec
lods
pop
cli
gs
pop
outsl
or
flds
testl
rcrb
jnp
sub
mov
inc
mov
adc
jge
nop
and
push
sbbb
push
bound
dec
cmc
sub
mov
icebp
int
mov
mov
xchg
xchg
xor
not
sar
fwait
dec
mov
not
inc
loopne
xor
push
jmp
adc
std
xor
cmp
nop
outsl
jmp
fbstp
lahf
dec
xchg
adc
xor
cmp
in
cli
mov
add
xor
mov
push
cltd
or
push
gs
cmp
xchg
pop
in
lds
adc
jo
ds
jg
das
aad
xchg
inc
xchg
pop
dec
mov
sub
das
inc
arpl
lcall
jo
test
pop
rcr
add
mov
fcmovu
sbb
outsl
clc
sbb
int
aad
ret
dec
cmp
popf
fsubrl
push
stos
popf
and
and
lock
mov
inc
fdivrs
xchg
and
mov
sbb
fnstsw
xchg
leave
push
hlt
dec
cmpsb
add
ljmp
pop
imull
mov
xchg
push
mov
cmp
mov
into
sbb
cmp
push
add
sbb
mov
cmp
xor
mov
pop
leave
push
mov
shr
mov
or
pop
insb
cmpsb
xchg
loope
cli
sub
mov
xchg
cwtl
in
or
mov
jnp
imulb
push
pushf
subb
enter
fstpt
outsl
sub
xchg
jg
inc
add
stos
cmp
pop
lock
std
mov
cmpsb
pop
or
cli
or
push
mov
cmp
in
ret
jge
jae
mov
mov
xor
fwait
aaa
ror
xor
subb
dec
retw
aaa
mov
stos
xchg
inc
and
test
ret
cmp
ljmp
cmp
mov
test
fxch
shrl
dec
cmpsb
sahf
fstp
push
dec
push
data16
nop
push
out
mov
adc
mov
andl
inc
clc
nop
and
mov
mov
fs
mov
mov
push
dec
insl
arpl
or
pop
add
mov
cmpsb
dec
pop
les
inc
sahf
test
div
sub
in
movsl
mov
cld
pop
jnp
add
or
je
or
rclb
pop
in
jl
test
fsts
mov
test
pop
lcall
xchg
std
push
mov
and
ja
pop
loope
xchg
movsb
stos
or
jno
imul
pop
arpl
hlt
mov
dec
pop
dec
cli
jbe
jae
push
sbb
adc
jnp
scas
jnp
push
xor
add
jns
jne
pop
xchg
jmp
and
mov
arpl
and
andl
lds
iret
or
fs
sti
mov
fildll
dec
or
stos
and
in
lret
enter
pop
push
data16
mov
int3
nop
fsubrs
movsl
cltd
jne
mov
cltd
or
mov
fimuls
mov
gs
push
pop
xchg
xchg
lods
pop
sub
and
jb
inc
loopne
pusha
shlb
cmp
cmp
adc
cmpsl
inc
leave
bound
xor
out
loop
jp
mov
and
fwait
inc
imul
cmp
or
pop
sub
dec
jg
rorb
popf
jnp
mov
dec
sub
push
jle
sahf
das
fwait
jae
pop
add
jp
js
test
jmp
test
out
push
push
sbb
mov
jmp
add
mov
jecxz
mov
jne
and
adc
add
pop
leave
inc
je
ds
push
fscale
and
push
inc
adc
xchg
cmp
sbb
xchg
int3
xchg
mov
in
imul
rorb
lretw
cli
mov
fiadds
jmp
es
dec
sarb
ds
or
mulb
stos
pushf
mov
inc
popa
pop
inc
aaa
push
out
aad
fstpl
fiadds
dec
movsl
push
iret
rcll
or
xchg
adc
cmp
lds
imul
inc
pop
cld
add
jbe
sti
mov
icebp
or
shlb
cmpb
mov
mov
imul
cmpsl
pop
cld
loope
inc
fcomip
test
xchg
shr
lods
cmp
pop
fadd
mov
ljmp
ret
xor
xor
mov
jbe
push
mov
mov
sub
out
rcr
inc
jne
ret
jmp
cltd
add
pop
orl
ret
adc
cwtl
mov
jmp
push
popa
mov
fsts
mov
push
jae
lea
lods
mov
sbb
and
inc
adc
scas
rorl
mov
aam
jae
jne
sub
cld
shll
dec
jmp
inc
mov
push
push
shrb
icebp
and
test
insb
inc
call
mov
mov
and
out
cmp
mov
lcall
insl
sarl
mov
add
cmp
cmp
sub
stc
push
sarl
fistpl
lds
adc
icebp
es
repnz
iret
pop
pop
mov
xchg
sub
roll
jle
push
xchg
ret
mov
adc
fisubl
adc
ja
imul
daa
and
sbb
int3
icebp
jnp
lods
or
shll
int3
or
arpl
xchg
cwtl
popa
insl
mov
scas
std
in
mov
sbb
jecxz
test
cmp
je
mov
pminub
dec
pop
adc
ja
mov
sbb
xorb
out
mov
cmpsb
and
icebp
repz
jno
pop
inc
inc
std
mov
sub
mov
js
pusha
mov
leave
sbb
sbb
dec
shll
mov
pop
pop
or
mov
sbb
mov
in
push
test
in
inc
data16
push
mov
xchg
sahf
fcoms
cmp
lods
sub
movsb
sti
cli
mov
jmp
add
xchg
mov
in
hlt
push
lcall
mov
ss
and
adc
and
jmp
bound
pop
push
or
fbld
cmp
sbbl
or
sbb
imul
scas
fdivs
and
mov
mov
ljmp
jmp
xchg
add
mov
push
mov
xchg
rorb
sbb
into
leave
out
cmp
in
prefetcht1
xor
in
das
push
call
cmp
lahf
mov
mov
jmp
cli
jge
arpl
mov
sbb
lcall
cmp
scas
cli
addr16
inc
jp
push
and
xchg
fstps
lods
xor
lahf
add
andb
push
xchg
inc
repz
rclb
repz
repz
push
jbe
add
sbb
fucom
inc
jae
mov
pop
xor
jbe
xchg
aad
std
movsl
mov
push
and
sbb
push
das
repnz
and
inc
daa
mov
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
push
inc
push
cmp
ljmp
jl
jl
xor
lods
jae
dec
sbb
jecxz
mov
adc
nop
ret
push
jnp
jle
sub
xchg
arpl
sarb
lods
sbb
call
pop
inc
lock
adc
xor
sbb
rcrl
rolb
ret
addr16
jns
inc
dec
push
imulb
and
aaa
push
sbb
lret
mov
daa
xchg
aam
pop
mov
dec
addr16
mull
icebp
int
mov
sarl
mov
sti
lock
push
dec
mov
add
out
xor
out
rcr
clc
data16
ss
popf
jg
mov
dec
sub
data16
notl
jns,pt
sbb
imulb
mov
dec
and
les
faddl
inc
sahf
and
or
xchg
cmpl
push
scas
loopne
mov
fnstcw
pushf
je
push
scas
push
sbb
cmp
xchg
fsubrp
mov
xchg
lret
xchg
in
xchg
xor
mov
and
imul
xchg
sub
lcall
lods
bound
cmp
fcoms
dec
jae
and
fs
or
and
sub
lea
mov
int
fwait
inc
jmp
or
scas
repz
ljmp
mov
fildl
xor
cmp
inc
add
movsb
pop
push
dec
cmpsb
push
in
push
leave
incl
addl
rcl
pop
mov
xlat
movsb
xchg
cmpsl
jp
mov
popf
imul
xchg
or
mov
push
and
push
jle
sahf
or
or
mov
inc
pushf
sbb
lahf
inc
orl
outsb
call
icebp
lahf
cmpsl
adc
xchg
popf
dec
repnz
cmp
or
add
pop
and
lea
inc
push
dec
int3
ror
mov
push
jl
jne
in
je
lret
pop
push
add
cmp
lcall
push
jp
sti
and
mov
arpl
pop
mov
fcompl
mov
in
adc
les
test
mov
mov
adc
sarl
fcmovu
xchg
popf
cmp
sbb
js
idiv
data16
lods
dec
inc
mov
pop
xlat
sar
popf
arpl
das
rol
pop
pop
outsl
pop
mov
jne
lods
fbld
pop
stos
repnz
clc
into
push
inc
das
sub
les
and
mov
xlat
adc
and
fistl
and
dec
fisttps
cs
add
loope
iret
out
inc
pop
jmp
add
sbb
lods
push
mov
loop
jb
mov
subl
xor
or
add
push
hlt
jns
frstor
test
sbb
stos
ds
pop
aam
push
dec
loope
in
cmp
addb
jle
dec
mov
shr
pop
cmp
xchg
sub
imul
or
nop
shll
jmp
mov
repnz
xchg
mov
mov
nop
leave
pop
inc
mov
jmp
mov
insl
aas
lahf
mov
fnstcw
daa
cld
or
jbe
xchg
add
daa
imulb
loop
add
cwtl
jbe
imul
cld
stc
aas
test
lds
pop
push
fdivrs
enter
or
dec
sbb
mov
dec
push
and
cmp
mov
dec
mov
mov
adc
and
cmp
push
enter
clc
int
das
test
mov
enter
mov
pop
pop
xor
jmp
sarl
push
inc
lahf
xorl
pop
xor
adc
cld
jne
out
jne
cmpsl
mov
push
add
and
xor
xchg
clc
scas
xchg
js
sub
inc
and
stc
jle
jg
frstor
loope
int3
mov
pop
xlat
stos
dec
lods
dec
stc
in
vdivpd
jnp
cmc
cli
fwait
xchg
cmp
jnp
inc
clc
lods
in
call
cwtl
xchg
inc
cwtl
jp
gs
ja
insl
cld
inc
xorb
mov
scas
mov
jle
or
and
mov
mov
outsl
fwait
int
mov
sbb
cmp
into
push
cwtl
pop
mov
movsl
sub
mov
mov
inc
dec
stos
rcr
or
stos
inc
adc
adc
repnz
jne,pn
sti
sub
jecxz
push
pushf
push
adc
jae
xor
and
stos
inc
scas
pop
adc
aas
pop
cmc
cmp
data16
or
xor
adc
xchg
popf
repz
cmpsb
mov
rcrl
pushf
imul
inc
jns
dec
push
or
sub
jno
mov
stc
inc
jp
loopne
jb
sarb
cmp
ret
psubsw
mov
and
mov
test
mov
sub
jbe
sub
call
add
rcrb
mov
mov
cmp
jbe
roll
pop
push
ret
pop
inc
jnp
and
xlat
popf
sbb
push
sub
xor
sub
outsl
dec
or
mov
xchg
xchg
inc
ja
add
sbb
inc
push
stos
sub
in
and
mov
push
push
aaa
aad
mov
and
lret
adc
gs
lea
mov
xchg
repnz
xchg
mov
inc
xor
push
fsubs
inc
sti
imul
and
and
out
out
pop
out
lret
or
mov
dec
das
sbb
aaa
popf
jo
or
icebp
jmp
or
out
sub
out
xchg
cmpsb
aaa
test
mov
jno
xor
adc
movsb
cmp
push
adc
mov
push
stos
adcl
stc
lcall
ret
mov
mov
jno
or
andl
es
popa
inc
pusha
cmp
out
mov
and
jno
push
jg
int
jecxz
adc
inc
xor
sbb
add
je,pt
push
sbb
int3
jle
inc
clc
jecxz
adc
dec
mov
cs
leave
pop
mov
loopne
jns
mov
scas
xchg
add
push
outsl
stos
dec
and
push
inc
movsb
cmp
cmpsl
call
jmp
out
add
pop
rclb
repnz
arpl
xchg
out
clc
daa
sahf
sti
cmp
push
push
cmp
lds
in
mov
sbb
mov
icebp
inc
sbb
repnz
inc
ja
out
fldl
add
out
jns
insl
cmpsb
sbb
movsb
aaa
jp
push
mov
push
idivl
pop
je
mov
pop
mov
bound
or
add
shll
test
sub
sub
lods
es
in
sbb
rclb
setl
mov
ds
push
push
add
jge
cs
call
mov
dec
and
int3
mov
push
sbb
mov
and
roll
adc
rolb
pop
dec
xor
iret
je
sti
add
jnp
lcall
pop
inc
cs
out
add
sbb
pop
mov
push
pop
enter
push
mov
gs
xor
shl
outsl
push
adc
mov
xor
sub
ss
call
pop
and
jo
pop
leave
push
lret
aas
mov
dec
repz
popf
clc
cli
stos
and
lds
xor
insl
cs
leave
dec
jae
cmpsb
addr16
sbb
cmp
daa
lds
aam
xchg
es
insb
mov
testl
aam
loop
jns
and
inc
fs
outsl
lock
inc
stos
xchg
daa
pop
in
add
jno
imul
add
shll
in
orl
pusha
pop
data16
movsb
aad
inc
sahf
cmpsl
jl
mov
lahf
pop
push
mov
dec
or
sub
iret
arpl
push
imul
add
pop
test
scas
sahf
push
pop
mov
adc
shll
mov
jo
xor
aaa
push
inc
aam
dec
mov
inc
cmp
mov
cmpsl
cmp
cwtl
in
shrb
inc
test
mov
test
lret
stos
pop
mov
push
dec
fs
in
sub
mov
pop
addr16
lret
mov
push
inc
sub
xlat
mov
mov
push
subl
or
mov
mov
dec
cmp
push
cld
inc
popa
push
push
stc
push
sub
pop
xlat
sahf
and
push
nop
jecxz
lods
es
dec
xchg
add
test
testb
aam
jecxz
or
je
and
pop
pop
lret
in
jecxz
adc
rcrb
pop
shll
push
lret
adc
dec
push
sbb
aad
xor
fcompl
fisttps
push
xchg
inc
add
mov
ds
xor
mov
pop
jg
or
push
xchg
or
jecxz
push
mulb
push
xchg
add
daa
lods
mov
insl
sub
cmp
rorl
test
iret
mov
jmp
les
mov
mov
bound
push
push
fcompl
xor
adc
test
pop
mov
dec
jno
jl
gs
into
repnz
sub
loop
lock
jnp
andb
outsb
lea
subb
popa
xlat
jmp
jg
das
mov
out
push
jnp
jp
iret
jbe
sarl
push
mov
jp
aas
pop
test
cmp
push
les
pushf
mov
mov
dec
sahf
aad
jb
xor
mov
into
lahf
imul
jmp
test
push
popa
fsubrs
icebp
inc
cmp
stc
mull
mov
cli
cmp
test
loope
xchg
pushf
mov
mov
and
or
es
sub
popa
enter
xchg
adc
xchg
int
jge
pop
ljmp
inc
test
xchg
mov
enter
push
lds
dec
xchg
dec
fnstenv
mov
xor
popf
sub
adc
xchg
in
out
pop
dec
test
insl
xlat
shlb
add
pop
dec
push
cmp
xorl
test
xchg
sbb
pop
stc
aaa
mov
inc
xchg
dec
xchg
pop
iret
and
aam
dec
in
pop
xchg
pcmpeqd
lcall
orl
sbb
sbb
in
jecxz
mov
xor
aad
and
xor
ss
lret
movsl
sbb
icebp
mov
xchg
pusha
cmpsb
adc
enterw
ret
dec
dec
mov
andl
shl
int
inc
cmp
fwait
mov
mov
lret
arpl
out
ds
hlt
adc
cmp
xchg
sub
inc
pop
mov
repz
cmp
push
mov
fstpl
adc
cmpsl
lods
xor
mov
roll
adc
pop
mov
and
aad
xchg
push
add
xchg
add
popf
int
in
mov
jmp
inc
fsubrs
out
mov
xchg
push
dec
push
testl
adcl
mov
imulb
sub
test
sub
in
fidivrl
insb
sbb
mov
rcrl
mov
iret
inc
mov
pushf
repnz
mov
dec
inc
test
imul
mov
or
outsl
inc
fwait
or
and
xchg
jns
repnz
and
and
push
sahf
mov
jecxz
fisttps
ljmp
mov
rclb
mov
xorb
je
inc
imul
fnstcw
ss
bound
lds
sub
daa
es
mov
into
push
ljmp
subb
fs
xor
je
sbb
ret
push
inc
aas
pop
bound
push
loop
ds
add
daa
sbb
adc
cwtl
cmp
pop
pop
dec
lock
push
lods
mov
loope
cmc
leave
sbbl
dec
mov
adcb
adc
adc
popf
pop
dec
icebp
daa
push
aas
test
xchg
mov
stc
cmp
movsb
aam
sbb
sahf
sti
pop
jecxz
and
mov
es
std
cmp
mov
dec
outsl
add
fisubl
lods
movsb
mov
addb
popf
aad
pop
ljmp
arpl
sub
or
or
xor
loope
or
clc
insb
cs
adc
mov
or
mov
adc
fcmovne
jle
xchg
outsb
pop
mov
xchg
pop
mov
mov
add
inc
popa
dec
push
and
pop
xchg
scas
mov
and
outsl
mov
mov
mov
jns
or
sti
stc
xchg
pop
dec
nop
dec
loop
add
lcall
imul
xor
xchg
jmp
fucomip
loopne
repnz
push
sub
cmpsb
fsubrl
xchg
add
es
cli
push
lret
lcall
enter
jne
imul
out
fadds
ljmp
movsl
scas
scas
cli
hlt
imul
test
adc
out
into
pop
xor
push
push
mov
push
inc
in
xor
inc
jl
in
pop
aam
pop
cmpsb
and
bound
pop
popa
fwait
inc
orb
fs
add
adc
cltd
in
cld
mov
lcall
cmpsb
jo
jb
mov
push
jl
pop
jmp
push
iret
mov
loope
adc
outsb
xchg
mov
neg
jg
arpl
shrb
pop
fistl
xorl
insb
mulb
xor
mov
ss
lds
fists
and
call
jo
and
sti
xchg
fwait
sub
fistpl
dec
pop
xchg
popa
sub
xchg
test
imul
out
pusha
or
or
add
adc
lret
fistps
loope
add
xor
pop
xchg
mov
adc
push
xor
out
push
mov
popf
pop
decl
rep
sbb
out
das
cwtl
hlt
sub
and
and
out
dec
xor
sbb
adc
and
add
js
cmp
insb
mov
mov
iret
fsts
std
sbb
push
mov
or
or
cmpsb
je
push
stos
test
mov
repz
jns
xchg
or
mov
push
pop
repnz
xchg
add
cmpsl
cmc
lea
jecxz
xchg
aam
push
dec
popf
jge
cmp
push
inc
add
cmpsb
pop
add
mov
cmpb
or
push
rolb
in
xor
aad
xchg
xchg
inc
int3
mov
mov
jns
xchg
lea
jmp
sub
or
cld
xchg
xor
popf
mov
in
xchg
cmpsl
test
test
or
iret
sarl
aad
inc
sub
dec
add
cmp
push
dec
pop
fwait
sti
test
adc
push
inc
mov
test
loopne
jnp
xchg
lea
rcrl
xor
and
inc
mov
ss
in
popa
repz
fadds
repz
push
lods
movsl
push
xchg
fsubs
cwtl
xchg
rcl
mov
loope
adc
mov
pop
jbe
jno
sarb
sbb
insl
xchg
fcomps
std
and
pop
dec
test
les
dec
cld
or
add
test
repz
sub
jl
ss
or
push
dec
das
negl
ret
push
sbb
jg
stos
dec
sub
mov
shll
jmp
test
sbb
loope
lods
fiadds
mov
outsb
sbb
ja
sahf
xor
adcb
jo
sbb
mov
nop
fcmovnbe
push
jmp
adc
mov
mov
push
rolb
scas
or
add
movsb
sub
dec
fs
es
mov
jp
icebp
dec
fwait
xchg
pop
fistps
clc
and
stos
jge
movl
imul
push
fwait
inc
xor
mov
ds
mov
xchg
shrb
sahf
push
inc
test
cmc
dec
ficomps
fadds
inc
inc
xor
inc
xchg
mov
mov
push
into
pop
movsl
icebp
out
data16
dec
jle
mov
pop
xchg
rcrb
push
xor
mov
movsl
add
nop
lods
push
fsubrl
pop
dec
dec
mov
imulb
out
mov
pop
ds
push
ljmp
lcall
aaa
stos
pop
cltd
popf
scas
fisttpl
scas
imul
out
mov
cwtl
mov
push
sub
rcrl
xorl
lret
xlat
cmpsb
adc
ds
fwait
adc
insb
push
clc
mov
inc
sbb
in
mov
cmp
imul
leave
inc
mov
mov
jl
ljmp
testb
in
pop
mov
bound
inc
test
dec
js
inc
rol
loopne
sbb
add
lds
cltd
call
clc
add
jg
decb
call
scas
xor
or
dec
pusha
cmpl
dec
or
mov
add
jo
and
jo
pop
push
cli
pop
pusha
dec
ds
mov
pop
push
dec
jns
mov
imul
dec
in
xchg
sub
pop
scas
push
cs
popf
sbb
adc
sahf
movsl
in
jne
mov
pop
dec
into
js
insb
xchg
jbe
mov
jns
in
xor
xchg
shrb
xor
ljmp
out
pusha
dec
or
dec
jo
lahf
push
adc
mov
or
shlb
jo
push
mov
aas
in
outsb
jbe
jne
mov
mov
lcall
fildll
mov
jl
fwait
or
cld
rclb
popf
dec
add
and
and
and
or
push
leave
std
icebp
push
pop
orw
pop
outsl
inc
in
call
fwait
icebp
out
push
and
enter
xor
adc
and
into
jbe
shrb
scas
mov
cmp
mov
rcrl
inc
fldcw
and
fisubrl
mov
ja
jae
adc
ret
in
and
or
xor
adc
cmp
jg
cmp
pop
push
popf
mov
pop
xchg
insb
xchg
push
add
aam
out
pop
insl
adc
push
dec
mov
xor
in
movnti
inc
mov
push
subb
loopnew
add
sbb
cmp
aas
call
or
jns
pop
mov
jnp
inc
sbb
call
rcrl
in
lea
or
xlat
mov
inc
push
fldlg2
gs
dec
pop
pop
or
push
ret
mov
decl
mov
xor
push
or
repz
mov
mov
mov
pop
mov
mov
cwtl
enter
pop
pusha
pop
cwtl
in
fidivs
add
das
cld
loopne
xchg
or
mov
les
test
cltd
lock
jns
and
jbe
xchg
sub
jmp
pop
mov
mov
fildl
pushf
cmp
jbe
movsb
xchg
xlat
xor
aam
nop
int
cmp
or
jge
xor
clc
es
mov
in
rep
icebp
testl
fildl
sub
jo
xor
mov
inc
sbb
push
push
ret
mov
pusha
mov
sbb
inc
xor
insb
mov
dec
es
into
jle
xor
fwait
loop
mov
mov
xlat
lods
movsb
xor
imulb
mov
rcll
mov
push
or
or
sub
test
dec
aad
repz
xchg
cmc
mov
push
ret
dec
dec
stos
jmp
adc
and
or
mov
xor
js
xchg
int3
js
add
mov
imul
lcall
xchg
jge
jbe
frstor
cmpsl
insb
pop
ljmp
sub
adc
aad
movsb
fldt
enter
stc
mov
jo
mov
and
dec
lret
add
cmc
jb
cld
fwait
cmp
int3
cmpl
lods
mov
fimuls
xor
mov
mov
stc
fildl
cld
mov
mov
or
ds
jge
pop
pop
adc
push
xor
gs
or
or
push
cmp
sub
sbb
loop
psraw
push
gs
rol
into
xlat
pop
inc
leave
test
mov
xchg
das
outsb
mov
lods
test
test
not
xchg
ljmp
ds
nop
mov
jae
mov
in
cmp
jle
test
pushf
rol
dec
loop
popf
out
outsl
and
or
jnp
inc
cmpsl
jmp
subb
mov
aad
pop
ljmp
stc
sbb
daa
add
outsl
je
dec
lods
out
in
push
jno
cmp
in
push
push
sbb
xchg
fimull
bound
arpl
mov
shr
out
push
sahf
jb
mov
jno
scas
and
inc
lea
sarl
loope
add
out
jbe
fldcw
jne
adc
js
mov
sti
rcrl
cmpsb
push
ret
xorl
cmpsl
js
clc
push
pusha
mov
aad
aam
push
mov
cld
jle
xlat
data16
push
imul
push
jmp
pop
inc
fnstenv
pop
outsl
outsl
and
cmp
cmp
sarb
fisubrs
add
test
push
jbe
fmul
pop
ret
sub
mov
iret
sbb
pop
cmp
mov
push
mov
xchg
insb
lods
jmp
add
leave
jb
jp
rcrb
sub
cs
addr16
inc
pop
inc
xor
roll
mov
pop
xchg
cmpl
mov
ljmp
pop
add
sub
dec
pop
lahf
xor
jge
dec
dec
iret
insl
divl
lret
loop
mov
mov
xor
mov
cmpsl
sti
imul
pop
fwait
add
lea
je
jb
stc
xlat
push
adc
movaps
xor
push
ret
mull
and
dec
xchg
push
cltd
mov
cmpsb
je
cmp
inc
fnsave
cld
ds
cmpsl
test
les
orb
fsts
sbb
push
adc
add
push
sbb
shl
mov
out
xchg
xor
bound
push
decb
jecxz
stc
xor
fistps
push
clc
mov
ds
int
pop
scas
mov
xchg
loope
repz
inc
rolb
and
sub
je
xor
das
and
out
pushf
xchg
xchg
mov
xor
pop
push
xchg
add
jne
scas
pop
cltd
in
adc
repz
iret
shr
xchg
jae
lock
gs
or
ficomps
out
in
dec
rdtsc
mov
mov
xchg
push
arpl
leave
mov
sub
inc
idivb
mov
movl
push
push
inc
push
loopne
outsb
ss
lahf
je
outsl
iret
das
or
xchg
dec
push
cmp
lcall
lret
mov
stc
addr16
or
pop
lds
add
jnp
andb
dec
or
test
sbb
cmpsb
pop
clc
cmp
pop
mov
lahf
mov
mov
cmp
add
pop
push
test
xor
loop
out
xor
adc
push
inc
mov
mov
arpl
loope
dec
imul
vdivpd
mov
insl
sub
mov
hlt
or
adc
adc
int
mov
cmp
pop
out
cmp
sbb
dec
dec
add
add
sbbl
mov
std
pop
pusha
pop
add
pop
pop
ljmp
add
insb
fs
or
mov
inc
shrb
jbe
sbb
or
data16
mov
aas
inc
sub
test
dec
push
movsl
out
fs
int
inc
lahf
repz
push
stos
sub
sub
add
je
push
pusha
pusha
ss
jmp
add
lock
and
ljmp
incb
push
sbb
call
stos
jbe
adcl
pop
data16
jns
cmp
lahf
rol
enter
dec
jl
movsl
inc
dec
sbb
ja
xor
stos
sti
hlt
xor
fbstp
rcrb
sub
popf
dec
call
loop
sbb
jg
mov
adc
jg
lret
cmp
mov
pop
jmp
push
fisubrs
mov
inc
mov
jmp
test
xchg
push
xor
xlat
cwtd
sti
pusha
aas
ret
push
decb
loope
dec
dec
cwtl
adc
lea
mov
xor
outsb
movsl
cli
lret
es
sbb
xor
out
pop
mov
xchg
lds
stc
adc
test
inc
xor
pop
jecxz
xchg
xor
test
sbb
int
sbb
adc
jecxz
mov
or
outsb
inc
and
hlt
sub
dec
outsb
das
mov
call
inc
out
out
xchg
fidivl
and
mov
sub
gs
lea
jne
cltd
ret
sub
adc
xchg
add
mov
cmpsl
cmp
and
and
imul
push
mov
xlat
cmp
or
mov
cmp
mov
dec
mov
fcompl
fistps
cmp
pop
mov
push
or
jae
nop
ret
add
jle
dec
dec
data16
outsb
ja
adc
jp
shlb
daa
mov
cs
test
loope
xchg
or
jo
and
insl
lahf
push
outsb
cld
cmpsl
mov
cmc
aad
mov
scas
repz
js
test
imul
jno
aam
aad
fwait
xor
shll
xchg
out
hlt
test
adc
jnp
xchg
arpl
outsb
rolb
sub
inc
mov
mov
xlat
daa
in
mov
sbb
dec
ret
or
jbe
fst
pop
ss
xchg
insl
xchg
xchg
repz
test
js
push
pop
out
mov
jecxz
cmpsl
hlt
pop
push
mov
data16
jbe
cmpsb
ret
mov
nop
ja
pop
pop
fsubs
scas
xor
cmp
jl
xor
push
in
sub
pop
sub
jns
out
xchg
sub
jno
clc
iret
push
out
js
ret
adc
pop
int3
imull
adc
pop
int3
inc
pusha
xor
dec
repz
out
mov
cmpsb
outsb
aam
cmc
cmpsb
xchg
pop
out
pop
xchg
fs
inc
sub
fcoms
lods
jp
clc
ret
mov
push
sbb
outsl
dec
iret
imul
xor
push
mov
mov
pop
add
xchg
popa
lahf
jg
pushf
ljmp
rcrb
mov
mov
mov
lret
pushf
jge
add
push
clc
add
ds
sahf
pop
test
rcrb
xchg
movsb
out
add
in
push
jge
clc
add
dec
iret
mov
pushf
inc
outsb
mov
lgdtl
mov
scas
adc
sbb
aas
sbb
or
es
xchg
pop
cmpsb
adc
or
cmpsb
inc
push
push
and
pop
pcmpeqw
andb
fcompl
out
rcr
sbb
adc
cmc
int
ds
cmc
addr16
cmp
mov
xchg
subb
mov
aas
lods
push
imul
xchg
roll
cmp
rol
lods
mov
mov
mul
add
movsl
xor
or
bound
inc
sub
cld
push
iret
test
xor
int
dec
pop
xchg
inc
xchg
and
dec
call
imul
mov
or
arpl
inc
xchg
and
push
mov
sahf
int3
cmp
sbb
xor
in
les
jo
aad
dec
mov
dec
mov
xchg
jle
adc
jle
mov
test
cmpsb
jo
xchg
adc
add
mov
icebp
sahf
xor
or
or
sbbl
inc
mov
popa
add
js
jecxz
and
mov
sub
subb
clc
clc
mov
scas
mov
inc
ret
push
popa
sub
xchg
call
lcall
pop
shll
xor
addr16
xor
lretw
mov
mov
dec
test
dec
pop
popa
ja
cmp
mov
cmp
imull
pop
and
repz
ret
xor
ja
or
pop
jle
push
cld
outsl
iret
imul
cwtl
movsb
and
ja
xchg
lret
ss
sbbb
xor
adc
ss
adc
pop
mov
add
mov
add
mov
mov
aam
mov
push
mov
dec
mov
mov
sub
stc
movsl
in
jo
cs
iret
fcomip
ret
sbb
das
xor
xlat
int3
dec
or
push
inc
je
mov
cmpb
ja
jne
mov
jle
push
xor
in
aam
in
aad
push
adc
xorl
sarb
add
jl
ds
aam
fcompl
add
in
cmp
leave
shrb
dec
data16
or
push
cltd
mov
jnp
out
mov
mov
xchg
xor
mov
add
cmp
sub
in
es
sbb
mov
or
mov
cmp
pop
xchg
sub
cmp
sub
cs
addb
ljmp
adc
mov
cltd
mov
pop
hlt
imull
push
loope
jge
pop
int
jecxz
add
adc
xor
inc
cmp
xchg
mov
icebp
testl
ja
daa
clc
sub
mov
pop
xchg
in
mov
inc
out
mov
mov
test
and
xlat
dec
cmpl
cltd
roll
mov
xor
stos
cmp
out
leave
add
popf
fimull
rcr
mov
test
outsb
gs
dec
xlat
jle
daa
inc
loopne
cld
jb
data16
daa
cmc
inc
cmp
xchg
pop
jb
cmp
push
and
add
add
add
add
imul
add
pushl
rclb
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
xchg
mov
add
mov
