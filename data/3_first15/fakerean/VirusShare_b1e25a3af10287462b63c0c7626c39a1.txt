sbb
add
or
mov
aas
mov
js
push
fisubs
imul
cmp
dec
jge
cli
insl
stos
lcall
inc
lcall
dec
jae
enter
mov
dec
mov
subb
imul
and
xor
loope
scas
jbe
xchg
xlat
jmp
inc
add
sub
add
adc
ret
movsl
xchg
jg
pusha
loop
add
xchg
mov
fcmovnb
movsl
cmpsl
lea
mov
fsubrp
jp
imul
xchg
jno
jmp
lahf
pop
loope
pop
inc
test
push
movsl
cmp
mov
dec
sbb
cmpsl
cltd
pop
js
in
int
aam
mov
mov
or
inc
lea
nop
fs
cmp
testl
xchg
sub
jle
cli
mov
aam
xchg
or
jb
xchg
inc
cwtl
fwait
push
or
adc
push
or
std
or
mov
outsl
pop
sub
push
inc
sarl
hlt
ss
xchg
int
inc
push
sbb
int
or
nop
ja
add
daa
jle
mov
aam
mov
mov
xor
cmp
cwtl
add
dec
or
ret
add
into
into
cli
cmpl
pop
pushl
inc
mov
jge
pop
js
mov
aam
cmp
ret
imul
sbb
out
gs
iret
rcrb
add
int
ds
std
sarl
pop
mov
data16
insb
push
dec
cmp
mov
push
idiv
sahf
or
pop
insl
imul
xchg
mov
aam
pop
dec
negb
popf
outsl
and
jae
mov
jne
xchg
jne
movsl
push
mov
jb
fs
jge
mov
jmp
test
xchg
xor
mov
int3
sahf
push
jmp
dec
add
subl
mov
outsb
inc
pop
dec
popf
ja
pop
movsl
scas
mov
test
mov
mov
shll
loope
loopne
mov
leave
ret
and
push
outsb
repnz
mov
orb
sub
adc
sub
cltd
mov
mov
mov
sbb
mov
std
xchg
ffree
mov
into
and
pop
mov
test
stos
inc
sarl
or
jmp
int
dec
fldcw
mov
out
lret
bound
jg
stc
cmp
and
jl
mov
sub
daa
and
push
and
push
jge
aas
xchg
fwait
mov
push
lahf
sbb
mov
fstpt
hlt
mov
mov
dec
icebp
mov
in
in
insb
test
sbb
push
lret
enter
pop
daa
sub
jae
cld
jle
push
pop
dec
sub
iret
lahf
aaa
mov
out
xchg
bound
icebp
stos
loop,pn
out
adc
pop
and
mov
repz
xchg
out
jae
in
and
shlb
xor
inc
fdivr
in
mov
int
pusha
inc
mov
pop
test
out
inc
test
test
into
add
subb
add
ljmp
call
cltd
sub
push
repnz
fisubrl
push
push
jae
adc
loopne
pop
adc
xor
into
loope
push
clc
adc
gs
arpl
push
out
push
xchg
cmp
leave
sub
adc
sbb
in
or
xor
pop
ret
outsl
addr16
bound
fs
adc
jg
stos
xchg
sub
jle
or
lock
sub
filds
push
pop
lret
shl
xor
aad
loop
lret
mov
pop
jno
lret
int
fisttpl
jo
stos
mov
or
cmc
ret
cltd
fstps
push
adc
out
adc
add
dec
xor
test
ljmp
add
pushf
fwait
or
les
push
shrl
lods
je
adc
and
js
mov
push
out
jp
daa
adc
jge
xchg
xor
mov
add
jmp
scas
adcl
mov
mov
mov
lock
cmpsb
pop
loope
mov
movsl
xchg
sub
or
jo
mov
jecxz
inc
popf
outsl
pop
and
xchg
inc
pop
or
add
xor
icebp
in
jnp
push
xchg
test
mov
dec
inc
nop
fwait
int
xor
push
sti
and
fwait
cmpsl
addl
xchg
mov
add
xchg
ss
rorb
add
test
lret
leave
adc
mov
cwtl
enter
and
and
aam
adc
mov
or
loope
shlb
mov
push
push
push
imull
movsb
add
stc
mov
nop
sbb
inc
mov
int3
les
jns
pop
or
lret
push
ret
cmpb
rcr
ljmp
test
cs
aas
inc
incl
outsb
arpl
xchg
insl
mov
ja
cmc
inc
in
inc
ljmp
rorb
sahf
aas
roll
sbb
popf
inc
sbb
xor
rcl
ja
movsl
inc
xor
pop
push
pop
push
jns
adc
xor
es
jae
lahf
mov
cmpsb
aam
sub
ljmp
lcall
sub
push
and
ret
hlt
inc
int3
or
push
lret
xor
or
stos
dec
shll
andb
insl
inc
cwtl
inc
cmp
jns
into
cld
pusha
mov
inc
lret
adcl
aad
leave
mov
or
mov
popa
xchg
hlt
pop
mov
fdivrl
jge
mov
xchg
lret
test
jge
loopne
mov
adc
xchg
aam
lret
xor
shll
inc
push
in
mov
ja
and
mov
in
ret
int
sub
fstp
lods
cmc
mov
cmc
and
push
lock
mov
mov
mov
repnz
andl
mov
inc
jl
xchg
jecxz
fscale
repnz
mov
in
add
jbe
jecxz
cmp
scas
or
pop
mov
cmp
dec
mov
xlat
mov
jg
sbb
outsb
fadds
inc
and
rcrb
and
insb
mov
fildll
shrb
adc
popf
ucomiss
aas
push
aaa
cltd
cmpsl
addb
add
cmp
inc
pop
and
dec
cltd
sbb
and
es
nop
xchg
gs
daa
xor
je
imul
sbb
call
mov
popf
clc
sbb
jmp
push
pop
mov
shlb
inc
adc
call
lea
adc
adc
push
cli
fdiv
out
pop
and
sub
jl
dec
sar
xchg
push
cmp
inc
shll
sti
test
and
cmp
ret
ret
xchg
xchg
jle
cmp
jnp
shlb
mov
out
dec
cltd
fdivr
arpl
fsubp
icebp
in
dec
dec
or
or
pop
dec
pusha
insb
mov
mov
jg
sbb
insb
cltd
cmp
xor
mov
sub
or
roll
mov
cs
dec
ja
repnz
inc
adc
pop
in
sub
adc
pop
jmp
inc
jle
lods
das
xchg
lds
enter
dec
in
jb
jb
jmp
int3
imull
test
xchg
jbe
lcall
push
insb
je
and
int3
and
dec
addb
fisubl
testb
ljmp
lock
inc
jo
out
add
ret
leave
subl
clc
lea
xchg
mov
push
add
enter
lahf
cmp
shrl
xor
lods
push
fsubs
std
in
imul
lods
shll
fidivl
xor
je
shll
mov
and
jno
or
arpl
aaa
daa
adc
inc
int3
movsb
mov
adc
mov
sbb
or
push
jne
hlt
loop
insb
xchg
adc
mov
cmpsl
inc
adc
push
xchg
mov
sbb
push
scas
mov
adc
das
dec
je
add
sbb
mov
pop
gs
mov
test
inc
mov
jecxz
push
fs
mov
pop
js
or
sub
mov
dec
enter
lcall
mov
add
rol
in
and
orl
mov
mov
xchg
lods
lcall
jne
test
sbb
add
fildll
sti
mov
xchg
xchg
imul
movb
sbb
add
jmp
aam
push
or
popa
outsb
xchg
lret
fs
loope
loop
loop
mov
loopne,pn
cmpsb
sbb
jb
jge
mov
xor
xor
sbb
dec
bound
mov
add
sbb
cli
gs
cmc
dec
stc
into
cwtl
aad
rol
cltd
adc
mov
mov
out
int
movb
inc
out
sub
ret
and
test
repnz
stos
mov
mov
lret
je
div
std
fildll
sub
mov
jmp
cmp
adc
lods
out
pop
scas
cmp
lods
in
aaa
push
mov
out
outsb
jne
cmovne
iret
addr16
inc
adcb
into
mov
jle
or
xor
out
int3
jge
rolb
pop
call
pop
xor
daa
xorl
push
pop
sub
iret
adc
sti
cmc
pusha
loopne
mov
pop
insl
push
jmp
out
mov
sub
mov
fmull
popf
push
jo
sbb
or
xchg
xchg
push
sbb
movsl
mov
fsubrl
ret
inc
xor
xchg
pop
in
in
out
push
add
js
nop
lds
sahf
mov
pop
add
sub
notl
stc
jge
iret
push
inc
pop
les
inc
inc
stos
nop
loopne
mov
xchg
loopne
sbb
jns
call
fbld
cmp
lret
push
cs
mov
and
push
in
push
stos
jns
cmpsb
sbb
sub
cs
cmp
repnz
pop
jecxz
pop
and
in
lahf
cmp
cld
loopne
mov
or
sbb
inc
sarb
mov
sub
ljmp
inc
imul
mov
stc
and
scas
cmpsb
sub
dec
imul
inc
das
fnsave
bnd
adc
mov
and
mov
mov
pop
int
jp
int
loopne
jo
xchg
in
inc
jo
push
inc
test
mov
lcall
jo
mov
jo
push
sar
adc
fildl
dec
mov
sbb
mov
adc
lock
inc
rcrb
lcall
clc
adc
adcb
cld
icebp
adc
jle
cltd
push
inc
sti
jcxz
mov
test
add
cmp
outsb
icebp
lea
int
jg
sbb
push
lcall
int
ljmp
fadds
push
aad
mov
mov
cmpsb
loope,pn
test
fnstenv
push
rcll
inc
test
mov
mov
mov
mov
mov
mov
xlat
add
repz
mov
push
dec
pop
imul
lret
add
insl
pop
scas
xchg
loope
enter
cmp
movsl
fnstcw
push
pushf
stc
popf
cli
jmp
jo
add
jle
xor
aaa
addr16
lock
sti
icebp
je
nop
cmp
mov
or
fs
aaa
cmp
les
xor
cld
cmpsl
mov
inc
int
push
xor
and
ja
add
sub
je
ljmp
jns
testl
fdivs
test
in
subl
jae
cwtl
adc
shlb
out
aad
aad
pop
or
add
out
push
pushf
movsb
push
pop
daa
nop
xchg
in
inc
add
lods
jnp
jg
loop
adc
stc
xor
notb
aaa
adc
sbb
mov
cltd
pop
add
fidivl
xor
xchg
int3
popa
mov
mov
sub
pop
push
in
xchg
insl
mov
mov
xor
ficoms
lret
cld
movzbl
call
and
and
loopne
add
push
cmpsl
pop
aas
outsl
cs
xchg
mov
movsl
push
cltd
mov
xor
rcl
call
lret
es
cmc
dec
andb
ret
xchg
loope
vpsllq
mov
mov
int
stc
cmpsb
dec
push
stc
fistpll
insb
stc
push
jp
outsl
cwtl
jge
jl
cmp
cmpsl
jae
jno
mov
dec
dec
clc
loop
iret
cld
das
sbb
dec
adc
mov
ss
pop
icebp
inc
sbb
lret
jo
cltd
insb
dec
sti
jne
inc
stos
punpckhbw
outsl
add
and
pop
dec
ja
stc
fs
movsl
mov
ljmp
and
repz
or
loop
std
cmp
mov
mov
movsl
cs
cld
push
testb
std
mov
inc
test
push
add
imul
aad
sub
out
dec
out
jmp
adc
adc
imull
xor
push
les
shlb
dec
icebp
add
jbe
cmp
pop
cmp
hlt
repnz
hlt
xor
pop
out
pop
out
xchg
stc
sub
in
xchg
pop
or
mov
cmp
push
sbb
push
jne
hlt
dec
jbe
insb
mov
lds
pop
xchg
andb
stos
das
sub
pop
orl
pop
xchg
int
adc
ret
cmp
push
sbb
xchg
sub
and
iret
dec
fwait
call
insl
call
cmp
sub
lahf
decl
leave
jmp
xor
mov
lret
cmc
cmp
js
mov
mov
lret
cmp
xor
pop
dec
mov
pushf
push
jae
lock
repnz
adc
xor
aaa
adc
xor
mov
repnz
std
lahf
lods
out
jns
mov
fists
pop
cwtl
test
jl
mov
inc
push
filds
std
mov
test
mov
clc
xor
jno
popf
scas
pop
mov
cltd
push
add
jmp
ss
push
pop
dec
cmp
xor
dec
in
in
ja
hlt
sbb
lock
inc
push
push
insl
insl
das
sub
add
xor
add
inc
jp
mov
movsl
into
push
in
je
daa
and
jne
call
xchg
push
ret
jmp
mov
stos
xor
add
pusha
mov
mov
aam
stos
xchg
popa
lock
adc
je
out
sarl
mov
lods
insb
movsl
stc
pop
xor
inc
fldcw
cmp
xor
loop
addb
jnp
rcl
repz
mov
xchg
loop
dec
clc
or
imul
ds
or
sahf
inc
xor
mov
xor
xor
hlt
pop
sub
dec
bound
sbb
in
les
xor
mov
push
stos
sbb
xchg
mov
pusha
dec
in
loop
sub
xor
and
lods
andb
push
pusha
inc
cmp
push
xor
ljmp
mov
fisttpll
insb
pop
and
pop
xor
or
clc
inc
add
fistpll
and
int3
shrb
gs
ret
push
mov
adc
repnz
jae
inc
xchg
fisttpl
arpl
lahf
lret
pop
aaa
fistl
add
es
in
sbbb
mov
iret
xchg
lods
dec
pop
mov
adc
push
imul
leave
sub
dec
scas
xor
dec
and
paddusb
sahf
mov
xor
sbb
sbb
xchg
lods
push
cld
xchg
rcr
inc
out
fistpl
mov
out
dec
or
jo
aam
cli
jb
int3
stc
int
fsubrl
jb
mov
inc
pop
iret
cmc
cwtl
push
jge
mov
jo
cwtl
popf
fwait
sub
aam
adc
dec
add
aad
ljmp
movsb
leave
adc
lea
and
add
into
inc
mov
inc
stos
call
sbb
add
dec
add
push
adc
bound
popa
jmp
out
test
add
les
push
sub
rcll
sbb
sub
ljmp
jno
clc
jl
mov
jmp
sbb
xchg
push
cld
popf
fldl
dec
mov
add
aam
repz
int
xor
lds
in
adcb
push
hlt
stos
dec
cmp
data16
mov
add
aam
movl
mov
jne
fwait
xchg
mov
xchg
jb
inc
xchg
pop
cmp
xor
xchg
jge
jl
daa
or
mov
push
hlt
mov
pop
jb
ret
sbbl
xor
push
mov
mov
jno
hlt
ror
push
shll
int
mov
lds
xor
sbb
lock
daa
outsl
and
and
and
hlt
xchg
adc
cwtl
loope
cmc
xorb
decl
fsubrl
lods
out
inc
or
mov
mov
js
sarb
xor
cli
popa
jmp
inc
cmp
xor
sbb
ror
orl
push
les
pop
or
bound
add
inc
pushf
inc
and
ficoms
clc
adcb
push
push
pop
cmpsl
xor
loop
jge
pop
loop
mov
fildll
ret
divb
dec
push
jmp
stc
xchg
push
pop
xchg
sbb
jo
or
inc
nop
lea
jl
xor
in
lds
mov
sahf
outsl
mov
xchg
cmp
add
lea
pop
shrb
xchg
loopne
fmuls
push
ret
fld
mov
add
jp
jo
cmpsl
mov
cmp
icebp
push
push
pop
push
sbb
jno
mov
xchg
out
jae
mov
push
out
popf
xor
idivb
scas
cmp
jno
mov
or
nop
fldt
std
sbb
jmp
push
jbe
xor
imul
cmp
add
lock
dec
jmp
cmp
add
sbb
cmc
xchg
aas
outsl
pop
mov
jae
je
test
push
dec
ljmp
or
dec
xchg
sbb
loopne
xlat
mov
cmpl
movsl
push
clc
test
mov
in
fisubs
in
xor
int
dec
adc
fwait
sbb
push
mov
jae
ret
jecxz
out
icebp
pop
test
push
inc
and
mov
sbb
push
stos
popf
pushf
pushf
std
popf
dec
add
sti
aad
jnp
xchg
jmp
pusha
in
inc
int
lods
fiadds
xchg
pop
xchg
dec
in
cmp
push
std
add
les
push
push
jl
lahf
test
inc
stos
pop
or
enter
test
incb
mov
dec
arpl
mov
in
jmp
lahf
mov
out
bound
in
dec
repz
push
mov
test
add
adc
or
inc
add
jp
sub
popa
aam
mov
insb
iret
push
sahf
int
js
test
repz
scas
pushf
aam
mov
jne
icebp
inc
jno
add
sub
mov
push
aaa
push
data16
mov
mov
das
mov
insb
or
sahf
pop
in
stos
sti
adc
pusha
addb
lods
les
mov
xchg
pop
lods
lea
repz
sbb
pop
je
outsl
xor
jae
jbe
enter
mov
push
lods
fstl
mov
xor
adc
sub
pop
sub
imul
mov
fs
mov
sub
jp
out
add
sub
ds
fimuls
ffree
push
popa
xchg
or
aaa
lock
pusha
sbb
sti
mov
jle
stos
inc
std
stos
repnz
or
push
cli
cmp
repz
out
loope
push
pop
xchg
cmpsb
orl
ja
xchg
push
xchg
stos
bound
stos
cmp
cmp
ja
mov
int
gs
pop
push
lea
or
mov
jecxz
mov
popf
sahf
xchg
jl
lock
pop
push
push
out
push
cmpsl
pop
jb
jns
ret
sub
adc
push
pop
out
mov
dec
add
sub
adc
out
cltd
mov
mov
jo
mov
out
call
pop
test
dec
rclb
inc
loop
test
jnp
mov
iret
add
push
mov
test
icebp
in
fwait
sub
lret
ja
test
popf
mov
xchg
idivb
dec
imul
addr16
enter
jnp
push
out
mov
xchg
cmp
ffreep
fdivs
lret
int3
shlb
xchg
popa
ret
int3
rcrb
outsw
mov
out
push
cld
sub
cmp
mov
gs
add
push
test
addr16
call
movsl
aas
nop
pop
cltd
inc
xor
add
push
jo
or
cltd
mov
es
aad
adc
push
jno
mov
orl
sub
adc
mov
movsb
cld
mov
dec
frstor
test
push
sti
jle
and
jle
sub
out
add
movsl
subl
or
adc
lods
scas
cmp
test
fwait
cmpsb
std
sahf
pop
mov
notl
ss
lret
mov
jne
repz
xor
fwait
out
pop
inc
mov
and
push
popf
or
les
repz
cmp
pop
pop
das
add
repnz
cltd
cld
aad
xchg
mov
repnz
xchg
xchg
mov
xor
and
testl
loop
bswap
sub
stos
in
adc
xlat
mov
and
incl
inc
and
pop
aaa
mov
pop
lods
ret
mov
fucom
push
mov
xchg
inc
xor
mov
clc
xchg
push
out
rcl
mov
mov
cs
sub
cmp
loop
inc
push
add
sbbl
inc
call
and
add
rclb
cmpsl
mov
dec
orl
in
add
cmp
mov
mov
cmp
jge
ret
int
ljmp
in
sub
xchg
test
cmp
pop
cld
imul
xchg
mov
xlat
or
inc
shrb
push
xor
lret
xor
mov
sub
pop
movsb
inc
arpl
push
enter
add
cmp
dec
sbb
fcoms
cmp
sub
xor
cmp
daa
cmc
icebp
lds
daa
mov
in
aas
out
adc
jb
inc
mov
add
mov
data16
call
rolb
cmp
imul
cltd
in
pop
add
ljmp
rorl
subb
adc
jae
mov
imul
addr16
outsl
xchg
cltd
xchg
jno
cs
mov
sti
push
dec
mov
ja
jl
test
rclb
cmp
hlt
aam
sahf
adc
sub
je
rcll
popa
adc
das
adc
mov
or
cmp
stc
mov
jge
hlt
clc
les
rolb
adc
mov
push
imul
xchg
pop
mov
dec
push
int3
int3
lcall
mov
pop
add
lcall
enter
mov
mov
or
pop
mov
dec
repnz
and
fwait
jecxz
xchg
sbb
mov
addr16
bound
xchg
mov
js
sub
and
rcl
cmpsl
stc
sbb
and
sub
call
call
inc
lock
outsw
push
cmp
dec
mov
xchg
test
fwait
jle
mov
int
in
in
xor
lods
mov
cld
lcall
mov
mov
sub
sbb
xor
fxch
xor
pusha
jnp
adc
and
push
test
jecxz
mov
out
sbb
adc
sti
repnz
scas
out
jp
ja
push
or
test
cmovns
insl
push
add
mov
stc
testl
lret
rclb
leave
push
mov
push
les
xor
push
jl
pop
in
jecxz
or
add
aaa
mov
pop
push
das
inc
mov
dec
testb
sub
shrb
fnstcw
fs
sub
fs
inc
push
hlt
sub
mov
cs
nop
mov
into
rorl
mov
jnp
sbb
lret
sbb
mov
sahf
jp
loope
pop
mov
gs
jmp
xchg
insb
jl
cmp
dec
divb
xchg
push
mov
xchg
add
add
sub
aad
adc
mov
sub
push
sar
vmaxsd
mov
leave
sub
rep
sbb
imull
imul
xor
aad
push
out
mov
imul
dec
push
movsl
sub
inc
mov
nop
mov
xchg
adc
pop
lea
cmp
into
mov
sbbb
dec
loopne
sbbb
inc
or
push
cmp
pop
xchg
out
inc
jno
xor
xor
into
xor
jns
push
push
mov
shll
and
pop
out
mov
fstpt
loope
hlt
mov
jg
sub
jmp
fwait
testb
popa
fwait
inc
pop
sbb
pop
add
cmc
or
sub
loop
mov
add
xchg
add
xchg
imul
adc
xchg
xchg
sub
adc
or
imul
cmpsb
xor
pop
and
and
js
hlt
adcb
call
aam
pop
test
mov
cli
cld
xor
sbbb
jle
int3
push
mov
or
sub
dec
sahf
frstor
mov
adc
sti
loop
jp
xchg
jo
aad
mov
pop
inc
xchg
rcl
das
push
inc
ficompl
inc
in
mov
xchg
inc
fnstsw
lods
inc
movsl
dec
in
cmp
gs
push
lret
jno
sbb
test
sbb
pusha
aad
dec
pop
push
mov
pop
push
cmp
push
enter
xor
rcr
push
lds
lods
and
shrl
or
repnz
push
xor
imul
sbb
cmp
es
daa
mov
shlb
and
idivl
outsb
out
insb
out
add
out
insb
cmp
ds
xor
cmpsl
jge
adcb
out
mov
cwtl
dec
roll
jge
mov
push
jg
fistl
mov
pop
lahf
dec
cmp
test
mov
mov
lahf
fistpll
pop
dec
mov
dec
or
mov
or
xor
and
bound
mov
push
xor
test
mov
xor
repnz
imul
jno
pop
fdivp
xor
lods
cld
out
movsl
or
int3
shlb
data16
xchg
mov
xchg
adc
pop
shl
stos
mov
pop
insb
mov
adc
dec
cs
xorb
ror
cwtl
jo
les
nop
push
gs
ljmp
dec
adc
movsl
pop
xchg
jecxz
insl
xchg
xor
sbb
mov
call
dec
push
mov
ljmp
dec
int
add
cmp
mov
xchg
in
addr16
sub
in
fisttps
mov
fwait
pop
cld
sub
jl
stos
test
rcrb
aam
out
icebp
fisubrs
call
stos
or
sub
loope
inc
popf
dec
mov
mov
add
js
sub
std
popa
add
movsl
aam
lahf
aam
loope
test
fstl
outsl
lcall
ret
sub
xchg
iret
jge
cmp
popa
aad
add
sub
dec
bound
mov
add
pop
cs
adc
or
mov
gs
outsl
lds
dec
mov
inc
sub
adc
fsubrl
arpl
fcoml
mov
sti
cmp
xchg
ss
cmp
push
cmp
ret
jnp
and
push
in
mov
push
insb
fucom
cmc
jecxz
inc
jmp
subl
daa
cli
sar
les
adc
int3
inc
aas
inc
add
mov
stos
rclb
stc
mov
mov
pop
sarl
mov
dec
mov
in
adc
out
insb
or
jns
in
add
test
pop
cltd
cmc
cli
mov
imul
je
fildll
repz
add
loope
jge
fnstsw
sahf
pusha
jb
mov
push
sub
and
in
jle
mov
iret
and
mov
insl
insb
pop
imul
mov
icebp
xor
push
mov
repz
xor
mov
stc
add
lea
std
notb
dec
gs
mov
out
mov
push
data16
clc
cmc
mov
loope
mov
sbb
out
adc
mov
jne
pop
test
push
push
push
xor
cld
es
xor
lock
pop
jae
adc
pushf
ret
xchg
sub
add
test
lods
xchg
es
mov
ret
clc
icebp
aam
inc
or
popf
inc
jns
cmp
push
xlat
mov
cmpsl
jns
sbb
scas
shlb
adc
push
cwtl
out
loopne
jp
add
xchg
arpl
ljmp
gs
inc
add
xchg
add
addb
xchg
xchg
cmp
repnz
scas
aad
movsb
orb
std
xchg
cmp
in
xchg
dec
jne
sub
xor
jge
shr
push
dec
imul
and
dec
lock
dec
push
jp
inc
movsl
notl
inc
xor
test
lea
or
stos
ret
mov
mov
mov
mov
jns
scas
sub
add
jb
repnz
aam
and
loopne
addr16
fsubs
push
test
add
and
cmpsb
fcomps
iret
hlt
push
outsl
xchg
inc
lret
aam
sahf
cli
outsl
and
push
sub
adcl
or
stos
inc
pop
lea
mov
sarw
adc
cmp
mov
mov
jbe
loopne
cmp
jae
shlb
movsb
mov
icebp
out
in
xchg
pushl
pop
adc
imul
cmp
in
jne,pt
and
mov
xorb
lret
pop
js
mov
pop
imul
daa
loop
cmp
cmpsl
mov
or
sbb
hlt
xor
mov
pop
pop
sub
inc
inc
mov
cmp
es
mov
xor
dec
jg
cmp
pop
mov
sahf
addl
lods
cld
int3
subl
lods
into
mov
jae
arpl
cmpsb
nop
outsb
or
gs
cmpsb
aad
icebp
pop
jne
aaa
leave
xchg
out
sahf
out
leave
andb
xchg
or
out
popf
sbb
stc
repz
sahf
adc
dec
cmpsl
adc
jnp
in
jmp
sarb
xchg
and
jb
mov
pop
stos
das
test
jno
or
arpl
push
out
push
jns
xchg
sbb
loop
or
std
push
cmc
xchg
jp
sub
lods
sbb
sti
xor
test
outsb
xchg
jmp
cmpsl
leave
sbb
mov
jg
adc
add
sbb
addr16
xchg
incl
inc
nop
insb
pop
push
rcrb
pop
cmp
dec
shll
lcall
arpl
cmp
lds
cs
or
into
clc
adc
sbb
out
cli
add
inc
cmp
mov
dec
stos
orb
or
cmp
je
lahf
movsb
lahf
pop
xchg
mov
jl
ret
arpl
nop
push
jp
test
xchg
sbb
fcmovnu
mov
fdivs
dec
xchg
add
insl
cmpsl
enter
xor
xor
cmp
mov
xor
sbb
sub
cmp
pop
mov
js
jge
cmp
jg
xchg
pop
daa
and
lahf
sub
add
lea
sahf
mov
sbb
fs
mov
aas
out
xlat
out
cmp
mov
sub
in
and
mov
hlt
call
and
rorb
pop
sub
add
xchg
push
cli
sahf
fisttpll
mov
xchg
sub
hlt
jbe
daa
push
iret
mov
daa
fwait
inc
push
inc
jle
sub
inc
jge
shrl
popa
cld
ret
ja
stos
lahf
sbb
lcall
push
xor
mov
imul
jle
cmpb
es
mov
push
hlt
clc
shll
mov
xor
lods
xor
xlat
mov
mov
sub
into
out
xor
leave
sub
xchg
xor
or
or
daa
inc
gs
jae
mov
imul
nopl
adc
pusha
push
shl
pop
sbb
push
jo
js
cmp
jbe
mov
add
sub
pop
adc
sub
icebp
sub
int
fnstsw
dec
jno
lds
rol
std
or
in
dec
push
popf
push
scas
xchg
mov
clc
orl
into
xchg
inc
dec
push
es
mov
pop
sub
pop
outsb
mov
in
xor
fcoms
popa
sub
data16
mov
call
cld
sbb
hlt
cmp
sbb
hlt
mov
popa
bound
sbb
fwait
pop
outsl
mov
iret
mov
or
jno
js
jns
shll
out
add
push
push
lret
test
bound
mov
cmp
dec
cli
lahf
dec
and
pusha
shl
in
mov
and
and
xor
sahf
add
inc
cmpsl
adcl
push
popf
mov
and
lock
pop
sbb
mov
mov
sub
jecxz
in
fdivp
pop
xlat
lcall
mov
xchg
cmpsl
andb
add
loop
cmp
out
jmp
xchg
scas
notb
sbb
imul
mov
push
iret
pushf
add
clc
aad
mov
stos
popf
inc
dec
outsb
xchg
in
fwait
and
adc
sbb
mov
mov
pop
push
sbbb
nop
xor
xorl
stc
out
jl
aam
loopne
stos
sub
xor
mov
aad
sub
jecxz
xor
push
adc
mov
data16
popa
xchg
enter
es
jae
xchg
aam
add
popa
add
insl
sbb
dec
mov
push
add
push
push
jl
xor
cmc
sarb
push
gs
mov
call
and
mov
pop
stos
es
push
lcall
data16
gs
stc
mov
shrl
scas
push
dec
adc
cld
push
jecxz
clc
fsubs
out
lret
lods
and
lcall
std
lcall
sti
sbb
cmc
lcall
sub
orb
sti
sbb
mov
push
scas
mov
fstl
sub
inc
sbbl
ljmp
lock
xchg
dec
sti
cld
lahf
cmp
cli
inc
ljmp
divb
shlb
adc
pop
sub
push
adc
testl
js
lods
xchg
ds
jne
adc
xchg
mov
mov
fsubl
jb
sub
adc
in
test
pop
xchg
pop
jp
into
xchg
cwtl
inc
push
dec
pop
cmpsl
arpl
add
xor
decb
mov
cmpsb
pop
mov
sbb
inc
fistl
scas
mov
cmp
or
ja
in
arpl
lds
icebp
iret
es
pop
jne
stc
fdivrl
mov
jae
ret
lea
mov
dec
jne
out
pop
xor
add
jl
rorb
and
xchg
and
scas
out
jge
testl
lret
pop
mov
ffreep
test
sub
nop
add
in
add
xchg
iret
out
inc
or
loop
ja
jnp
lods
xchg
push
adc
jns
mov
jmp
aam
pop
scas
shll
in
sbb
icebp
mov
test
fistpll
jmp
push
sub
ja
repz
mov
loope
les
push
cwtl
scas
adc
adc
fnsave
push
fsubs
adc
pop
cmp
inc
neg
jge
ljmp
popa
scas
rcrl
mov
mov
arpl
mov
clc
mov
inc
inc
sub
jne
adc
mov
sub
mov
arpl
adc
or
lret
mov
cmp
sub
aam
sbb
mov
push
add
sarb
aaa
jmp
lcall
push
stos
loope
cmpsl
outsb
addr16
or
dec
xlat
ds
out
lcall
sub
adc
fadds
popa
mov
daa
mov
int3
and
rcrl
in
addr16
dec
push
and
jmp
push
pushf
sub
pushf
aam
icebp
xor
cmpsl
cmc
push
cmp
repz
push
sbb
loopne
dec
pop
xchg
test
add
and
mov
cli
jb
and
lock
jo
xchg
jns
mov
dec
pop
cmp
gs
movsb
xchg
lret
cmpsl
je
mov
dec
sub
bound
sbb
dec
xorb
movsb
cmp
adc
ret
xchg
or
mov
xor
push
mov
mov
sbb
push
pop
imul
jbe
dec
mov
test
dec
test
mov
int
pop
xchg
push
and
mov
bound
inc
outsb
jl
sub
and
nop
cmc
jo
xchg
or
aad
pop
arpl
in
add
lea
sbbl
and
xor
fs
ss
mov
addr16
je
bound
ret
stos
xchg
dec
mov
jae
fsubrl
pop
dec
test
add
xlat
loop
ss
lock
and
pop
push
mov
scas
jecxz
add
mov
inc
dec
xchg
shrb
gs
xor
cmp
sbb
outsl
xchg
psraw
cli
inc
int
aaa
arpl
arpl
sahf
scas
and
out
dec
xchg
loopne
js
out
cmp
dec
sub
mov
add
lret
xor
cmpsb
or
lods
and
mov
mov
into
orb
sahf
dec
dec
addr16
mov
aam
mov
mov
fidivs
mov
stc
and
sarb
adc
xor
cmc
aam
lret
test
lret
movsb
insl
dec
gs
xorl
mov
and
loopne
int
bound
xchg
mov
xchg
jno
inc
fldt
in
push
icebp
xchg
inc
lock
ficoml
in
mov
dec
and
stc
repz
dec
arpl
mov
sbb
in
xor
push
sbb
movsl
mov
xor
mov
mov
jmp
dec
pusha
dec
test
cmp
sbb
mov
push
notl
sub
rcrl
xchg
inc
push
sti
arpl
mov
add
push
mov
xchg
xchg
pop
sub
mov
mov
pop
add
out
cmp
outsb
sti
push
mov
xor
sbb
testl
lret
pop
mov
nop
mov
imul
mov
repnz
mov
sbb
and
dec
rolb
pop
adc
sahf
xchg
jns
xor
sbb
ret
mov
xchg
data16
xor
leave
and
call
sahf
add
js
stos
insb
pushf
test
bnd
pop
xchg
pushf
jecxz
jne
loop
add
mov
cmc
xor
add
jp
cmp
inc
jnp
inc
inc
sbb
in
add
test
test
into
popf
or
das
stc
fnop
push
push
push
mov
sbb
mov
lahf
nop
fnsave
in
repnz
dec
sbb
arpl
enter
add
inc
and
cmpsl
xlat
mov
fnsave
xchg
add
xchg
roll
ljmp
leave
roll
xchg
lret
adc
jmp
gs
jg
pop
push
cmp
mov
es
pop
outsl
adc
lds
mov
into
adc
sbb
sbb
bound
xorl
jg
nop
mov
rolb
fwait
rolb
or
lds
subb
mov
jb
xor
mov
mov
sub
imul
gs
pop
pop
loopne
les
pop
insl
mov
pop
push
push
enter
popf
xchg
cmpsl
repnz
add
je
pop
pop
aad
mulps
test
fwait
add
jl
pushf
cs
jo
jmp
xor
decl
mov
ret
ja
in
lcall
sub
push
in
das
stos
scas
cwtl
xor
sbb
addb
adc
mov
inc
xchg
xlat
testb
dec
mov
mov
stos
cmpsb
subb
adc
fs
movsl
repz
mov
push
mov
push
sub
jne
outsb
lcall
dec
cs
xor
jno
cmp
jns
pop
mov
add
loope
cmpsb
outsb
outsb
sub
fdivl
data16
sbb
dec
loope
rcl
add
lods
mov
sahf
outsb
dec
rcl
ret
aam
ret
andl
fldl
nop
int3
inc
rcrb
jno
jbe
mov
call
sub
mov
inc
test
jecxz
mov
jns
sub
std
xchg
cmp
sti
inc
push
push
std
cmc
push
pop
cmpsl
sub
jg
out
aad
fwait
nop
mov
std
dec
lcall
cld
mov
jae
out
test
mov
xchg
dec
outsb
push
fsts
pop
aaa
mov
lods
cmp
out
adc
mov
cmpsb
xchg
pushf
bound
sbb
xchg
adc
out
cld
mov
fdivs
inc
xor
push
mov
pop
push
pop
out
inc
data16
scas
push
xor
sub
cli
push
lret
scas
cltd
xchg
sti
jg
mov
fwait
std
xchg
inc
pop
mov
mov
inc
leave
jmp
int
pop
pop
add
punpckhdq
dec
xchg
ljmp
or
nop
dec
es
jmp
or
jae
loop
scas
add
add
dec
clc
daa
or
test
outsl
mov
inc
test
into
lret
cmp
dec
repnz
xchg
test
sub
xchg
scas
das
repz
inc
fiadds
lcall
sbb
cmc
scas
lahf
int
cs
xchg
sub
cs
fisubs
push
jmp
aad
cs
and
sub
inc
fidivrl
les
cmp
adc
imul
push
stos
and
test
or
jmp
es
and
test
shll
mov
xor
sbb
sbb
push
pop
in
negb
adc
xor
les
jb
jge
cli
dec
inc
add
mov
sbb
jge
pop
and
in
shll
movsb
inc
jno
aam
inc
mov
decb
pop
sbbl
jbe
mov
pop
test
es
sahf
fildl
cmp
and
jl
jne
adc
fnstcw
mov
jne
movsl
inc
fiadds
int
ret
insl
es
int
fcmove
push
loope
cli
pop
sub
jmp
pop
mov
sub
adc
in
sub
fdivrs
mov
les
pop
inc
mov
pop
jge
and
imul
cmp
cmp
popf
stc
jge
jmp
gs
dec
cmp
out
enter
movsl
repnz
addr16
imul
hlt
daa
pop
hlt
adc
in
sub
push
sub
popf
addr16
adc
clc
imul
negb
push
cmp
xchg
movsl
lret
data16
mov
xchg
ret
cmp
sub
sahf
cmpsb
lret
es
insb
add
dec
jo
xor
outsl
leave
sub
dec
sbb
pop
push
xchg
in
repz
mov
subb
sub
inc
fnstsw
ds
xor
mov
lds
jbe
cmp
inc
aad
test
lret
xchg
and
daa
das
adc
aas
dec
pop
mov
jle
andl
jp
mov
xchg
sar
lret
cld
hlt
cmp
in
loop
icebp
add
popa
push
pop
inc
inc
jo,pn
and
xacquire
rcrb
dec
inc
push
xchg
and
aas
sub
dec
mov
mov
xor
jae
add
stc
mov
sbb
stos
and
icebp
xchg
imul
pop
nop
call
vmptrst
inc
ss
xor
push
mov
jno
sarb
loope
mov
mov
movsb
inc
das
addl
mov
inc
inc
and
mov
ljmp
adc
or
push
cmp
adc
lret
jns
outsl
in
icebp
pop
ret
adc
mov
dec
sbbb
out
fsub
inc
mov
outsl
hlt
or
or
aas
lret
adc
leave
dec
xchg
adc
push
stc
inc
inc
in
mov
les
and
xchg
rclb
sub
pop
pop
adc
pop
je
int
cmp
dec
mov
cmp
and
movsb
and
iret
das
stos
xor
xchg
fwait
mov
enter
mov
fsubrp
rol
mov
mov
adc
pusha
mov
lea
mov
push
xlat
mov
cmp
mov
add
sub
mov
jbe
push
int
in
repz
dec
ja
cmp
fs
push
movsl
or
and
testb
inc
ljmp
jle
dec
push
pop
in
out
sub
adc
jmp
inc
mov
mov
mov
xchg
stos
cld
xor
mov
inc
das
adc
pop
fwait
arpl
pop
arpl
pop
ffree
sub
push
repnz
xor
mov
xor
and
cmc
mov
fwait
je
cmpsl
cmp
dec
jl
mull
imul
jmpw
sbb
adc
or
push
sarl
adc
stc
aas
stos
push
fldt
enter
and
and
daa
adc
push
push
add
in
popf
push
filds
aas
xchg
inc
in
xchg
imul
xchg
andl
shrb
jbe
jb
mov
jle
push
in
mov
fsubs
shrb
xchg
xchg
out
mov
or
test
lret
mov
dec
pop
daa
adc
cmp
cltd
mov
cld
ret
mov
idivl
repz
adc
push
sub
xlat
mov
roll
daa
into
cs
scas
push
xchg
in
outsl
and
mov
adc
pusha
dec
mov
ljmp
mov
jae
je
ljmp
add
xor
add
sbb
mov
push
rcl
push
movb
jbe,pt
negl
and
in
fisubs
sbb
mov
dec
pop
mov
nop
adcl
and
jns
popf
and
dec
push
lds
loope
dec
pop
lret
mov
aad
add
mov
loopne
stos
mov
testb
xchg
jecxz
sarb
mov
or
or
lahf
loope
pop
popa
mov
jg
cmp
sub
int3
notb
stos
add
cmc
je
js
inc
push
sub
aad
bnd
std
clc
fcomps
repnz
imul
lea
in
insb
add
mov
dec
pop
inc
jb
es
loopne
inc
add
in
xchg
add
and
and
xor
dec
movl
pop
jno
roll
jae
xchg
mov
scas
enter
orl
mov
ror
mov
andb
push
pop
repz
ljmp
inc
loopne
sbb
mov
aad
mov
xchg
pop
mov
arpl
nop
sub
jecxz
mov
mov
insl
sbb
inc
out
xor
jnp
push
cmp
mov
scas
sbb
jo
cmc
lcall
dec
test
outsb
shl
movsl
mov
xlat
es
roll
addb
xor
mov
push
adc
mov
pop
inc
adc
pop
stos
dec
inc
std
cs
fcmovnbe
call
xor
loop
dec
cmp
addr16
lret
xor
jns
adc
adc
push
insb
lret
addr16
aad
pop
jbe
dec
dec
cli
icebp
das
inc
and
mov
add
repnz
cli
add
pop
pop
out
mov
cwtl
addb
adc
xor
rcr
mov
rorb
xorb
popf
pop
or
hlt
pop
or
ret
jno
scas
sbb
arpl
lahf
ret
in
mov
mul
push
adc
xor
push
popf
nop
xchg
adc
cmpsb
vpmacssww
fnsave
ret
jnp,pt
pop
mov
push
dec
aad
ret
sbb
scas
icebp
test
jb
fistl
mov
pop
pop
loopne
cmp
sbb
ss
pop
fistl
mov
mov
xor
cltd
dec
jno
test
int
aam
enter
cmp
stos
sub
mov
xchg
int
fucom
shlb
cwtl
and
out
jecxz
stos
js
inc
adc
push
or
or
rcl
test
ret
nop
clc
push
dec
in
repz
xchg
out
aas
fwait
test
ret
aam
xchg
xlat
cmp
inc
out
adc
push
dec
dec
jmp
jbe
push
adc
dec
fs
jbe
sahf
mov
pop
or
adc
in
int3
add
mov
push
push
arpl
pop
mov
mov
pop
add
inc
cs
fdivl
xorl
std
xor
movsl
xchg
aam
and
mov
test
jne
mov
xor
int3
add
inc
push
pop
arpl
aad
fidivrl
xor
sub
fwait
jmp
lretw
push
mov
lock
call
xor
mov
jmp
xor
repnz
cld
push
outsb
push
aad
shlb
aaa
sbb
sub
into
dec
sub
adc
mov
mov
stos
mov
out
mov
adc
into
or
or
xchg
cs
enter
iret
shr
push
push
imul
test
gs
insb
sub
jecxz
sbb
loop
aad
shlb
push
mov
pushw
push
lcall
loope
sbb
ret
rcr
push
push
adc
loop
mov
push
add
and
add
stos
filds
jae
loopne
jp
lret
cmp
mov
fnsave
fcomps
ret
loopne
std
lds
mov
dec
shrl
xchg
mov
repnz
scas
ror
cmp
jmp
push
daa
xor
fidivs
lods
sbb
loopne
push
or
decb
mov
xchg
stc
pop
popa
dec
fdiv
std
inc
bound
mov
addr16
scas
fstps
mov
and
shrl
cmp
aaa
incb
mov
jns
or
mov
lret
sub
mov
outsl
outsl
loope
dec
imul
test
xor
imul
and
stc
mov
popa
popf
int
xchg
push
andb
pop
xchg
sbb
addr16
dec
fsts
cwtl
lods
adcl
inc
stos
sub
sub
mov
rclb
mov
in
xchg
lcall
mov
lea
filds
stos
enter
dec
push
int
sti
mov
push
imul
mov
dec
test
cmp
mov
dec
sub
fdivrs
xor
jbe
outsl
jne
pop
stc
sbb
xchg
or
gs
std
and
mov
fists
test
sti
mov
out
and
xor
punpckhdq
call
inc
nop
in
fidivrl
xor
inc
into
xchg
orb
mov
jp
mov
and
ret
in
mov
pop
inc
jne
xorb
xlat
cmp
xchg
fcom
dec
loop
loopne
mov
push
inc
mov
or
xor
mov
jne
je
neg
dec
int3
sub
jo
mov
or
add
ret
sub
mov
inc
jle
lea
xchg
push
flds
pop
fcomps
mov
dec
imul
imulb
cmc
mov
inc
mov
mov
inc
mov
inc
cmpl
int3
adc
xchg
lds
cli
sahf
mov
or
cltd
lcall
xor
mov
iret
imul
out
mov
cmp
mov
mov
cmpsl
mov
adc
fs
pop
fsubs
push
enter
and
and
loope
test
pop
xlat
jle
cmp
pop
push
mov
pop
fnstsw
add
or
insb
loope
xchg
mov
gs
dec
roll
or
test
dec
lcall
sahf
add
mov
jb
push
enter
pop
out
test
sub
dec
cmp
jnp
js
jl
jo
sub
push
or
dec
adc
add
roll
cmp
mov
inc
pushf
out
mov
in
sahf
adc
push
int3
test
pop
push
pop
scas
test
jg
scas
lahf
fbld
outsl
stc
sbb
das
ja
std
nop
cmp
pop
cmp
rcl
sbb
adc
ret
push
add
mov
mov
inc
or
test
mov
jmp
stos
repnz
jb
into
jo
or
sbb
sbb
mov
pusha
lods
daa
inc
sbb
mov
xor
shll
jl
std
loopne
xchg
jg
into
xchg
push
pop
stc
push
pop
sbb
sbb
repnz
mov
push
mov
inc
pusha
mov
cwtl
mov
es
sub
filds
xchg
mov
fyl2xp1
ljmp
sbb
inc
xlat
in
inc
sti
lret
rcrl
aaa
sti
int
cmp
nop
mov
loopne
and
xchg
fs
cmpsb
cltd
aaa
sub
shlb
or
in
lods
dec
cmp
out
js
jecxz
jge
scas
push
cmpsb
jl
shrl
or
bsf
pusha
popa
jmp
fcompl
lret
mov
mov
es
cmp
mov
call
sbb
sbb
or
adc
mov
imul
ret
mov
lret
inc
cmpsl
and
lock
fnsave
jp
popf
mov
aas
pop
mov
fisttpll
fcmovnbe
sub
int3
fisubs
xchg
sbb
and
jb
pop
push
pop
xorb
pop
cwtl
jne
xlat
hlt
dec
outsl
int
fcomps
aas
test
push
sbb
jge
mov
adc
push
adc
jmp
mov
xchg
push
pop
testl
mov
pop
xchg
ljmp
andb
sbb
inc
neg
add
cwtl
jne
cs
dec
or
in
jle
out
imul
mov
fisttpl
lcall
inc
or
inc
loop
and
xor
mov
or
jno
or
or
mov
mov
lds
ret
pop
jl
fisubl
xor
mov
and
out
and
mov
inc
jle
insl
flds
out
and
lret
mov
inc
inc
mov
fwait
add
push
mov
jmp
sbb
in
dec
mov
adc
in
add
mov
fsubl
dec
movsb
data16
inc
push
inc
adc
push
insb
push
mov
inc
notl
pop
or
ss
scas
xorb
sub
ja
pop
mov
jb
outsl
sbbw
pop
inc
shlb
dec
cwtl
in
jmp
shrl
out
cmp
xor
test
or
testb
ljmp
cltd
cmpsb
adc
dec
in
mov
jo
shrl
push
add
insb
fsts
xchg
in
das
lcall
cmpb
inc
sub
or
fisttpl
adc
xchg
in
cltd
and
dec
mov
hlt
pop
and
xor
repnz
cwtl
mov
scas
inc
cltd
enter
pop
hlt
andb
lahf
xchg
mov
cmp
jp
pop
sub
push
mov
aad
arpl
lahf
dec
and
and
xor
insb
and
inc
or
aad
fildll
pusha
lods
adc
inc
ret
pop
cmp
lds
stos
ret
arpl
outsb
or
dec
jae
in
jl
in
and
leave
cmp
pop
jmp
and
push
cmp
sbb
shlb
jno
sbbl
push
mov
es
sub
aad
add
and
sti
ja
xor
scas
dec
mov
jno
cli
sahf
lcall
or
fdivrs
dec
push
mov
mov
push
push
movsl
das
loope
jmp
stos
aad
and
ss
or
int
cli
ds
das
shll
inc
test
xor
inc
leave
xor
and
aaa
jg
insb
and
mov
push
repnz
sahf
pop
aaa
pop
push
push
lahf
outsl
or
ss
movsl
outsb
fistpll
mov
shr
xchg
inc
xchg
int3
dec
mov
cltd
enter
insl
pop
stos
mov
sbb
adc
pop
inc
nop
or
fucomi
and
lcall
mov
mov
mov
lahf
inc
fldt
xor
dec
fadds
lds
jp
or
das
adc
lcall
jns
jns
xor
dec
movsb
sbb
loop
dec
jns
std
adc
cmp
gs
scas
cli
and
shrb
in
in
aad
je
push
xor
arpl
jne
int3
ja
or
mov
orb
gs
xchg
xchg
and
cmp
scas
mul
mov
dec
leave
aam
lods
add
ljmp
ja
addps
pop
adc
cmp
sub
ds
cmp
insb
jl
mov
lcall
push
dec
push
in
rcl
cmp
lock
les
xor
xchg
mov
lea
inc
jnp
xchg
imul
cld
cmp
jae
repz
hlt
pop
lds
xor
jbe
bound
stos
pop
iret
add
mov
out
xchg
lret
loope
or
adc
js
or
ljmp
into
cltd
outsb
mov
arpl
cmpb
lcall
push
xor
mov
nop
ljmp
mov
adc
jp
out
pop
mov
xor
jmp
push
mov
fstpt
test
dec
inc
call
pop
push
sbb
das
loopne
inc
scas
cwtl
xor
pop
in
inc
push
fisubrs
or
adc
cld
int3
jp
mov
push
xchg
mov
and
xchg
sbb
push
mov
and
inc
cmp
xchg
int3
scas
cmp
sub
ficompl
or
adc
divl
jecxz
gs
inc
cmp
sbb
aad
sub
or
adc
movl
cmp
jecxz
cld
bnd
jo
mov
mov
xor
add
outsb
js
jge
stos
stos
jae
cld
pop
imul
sub
aam
test
sbb
jnp,pt
sbbl
loop
adc
ja
rorb
jg
jmp
movsl
mov
push
imull
pop
aam
or
pushf
xor
repz
jns
ret
rcrl
cmp
test
jne
push
daa
jg
js
insl
fdiv
lcall
dec
xchg
clc
in
push
push
adc
jne
xor
cmp
dec
and
xchg
mov
andl
pop
mov
and
adc
repz
mov
push
jo
outsb
and
and
or
cmp
mov
sbb
pop
push
xchg
call
filds
mov
cmp
push
push
mov
inc
ds
mov
mov
mov
lahf
sbb
adc
scas
jo
shrl
sbb
xchg
pop
push
jmp
push
cmp
inc
stc
sbbb
jno
rorb
enter
mov
mov
mov
xlat
add
in
jbe
mov
addl
inc
mov
mov
jb
scas
push
movsb
pop
sub
jle
push
cld
fmul
inc
scas
mov
or
inc
mov
xor
call
sbb
adc
sub
jmp
insl
and
cwtl
cmp
inc
xorb
push
cmp
pushf
lret
in
daa
scas
cs
sub
xor
popa
lret
pop
push
mov
mov
pop
or
dec
push
cmp
stc
inc
sbb
sub
and
jne
lds
mov
ds
mov
and
leave
addl
pop
into
incl
pop
inc
sahf
inc
lcall
loope
push
das
xchg
mov
scas
sbb
pop
mov
push
dec
mov
sbb
xor
adc
mov
sbb
inc
and
adc
push
mov
cmc
adc
xor
sbb
testl
movsl
data16
cli
out
test
push
jp
cld
not
and
sub
into
loopne
add
inc
pusha
in
popf
nop
loope
jl
adc
ret
into
add
movsb
cmp
hlt
jmp
pop
lcall
push
adc
cmpsl
sub
gs
out
es
popl
in
and
ret
xchg
cmp
mov
xor
xor
lock
sbb
hlt
aam
pop
xchg
sub
push
addr16
dec
ljmp
jecxz
idivl
sub
inc
hlt
mov
push
jae
and
movsl
mov
xchg
bound
push
xchg
add
pop
or
xchg
and
jnp
ljmp
iret
popf
stc
pop
sub
push
xchg
in
enter
lods
push
add
pop
inc
test
inc
pop
cmp
scas
fidivs
xchg
adc
leave
dec
arpl
mov
pop
cmpsl
mov
rcll
adcl
nop
inc
pop
xchg
push
fcmovnb
popf
push
dec
out
jnp
sbb
out
rorl
js
int3
ret
mov
cmpsl
cltd
jp
loop
pop
push
les
xbegin
mov
or
add
adc
dec
mov
shll
test
popa
mov
adc
fimuls
inc
test
fnsave
fwait
push
or
cmp
mov
and
out
addr16
jecxz
aam
clc
mov
jne
sbb
mov
es
adc
xor
enter
pop
mov
arpl
adc
adc
in
mov
xchg
mov
mov
push
fidivs
das
repnz
stos
inc
stos
mov
or
stos
mov
fnstenv
pop
dec
and
and
sahf
fucomp
loop
leave
xor
rorl
jmp
cli
adc
cmpsb
mov
inc
dec
pop
adc
xchg
fwait
bound
neg
popa
outsl
adc
sbb
ss
ret
imul
dec
inc
das
mov
pop
pop
ror
add
dec
xchg
xchg
fsubrl
or
cwtl
pushf
jns
scas
arpl
add
mov
fucom
enter
std
add
lret
add
fistl
movsb
mov
stc
call
stos
iret
sub
xor
mov
sub
pusha
test
mov
data16
dec
call
fstpl
outsl
dec
cmp
outsl
mov
rorb
pop
mov
loope
mov
rolb
loopne
lea
xchg
jmp
pop
pop
rolb
xchg
popa
xor
int3
mov
mov
xchg
or
jb
inc
rclb
xchg
push
loop
sbb
xor
fs
clc
xchg
inc
xchg
rol
jne
aaa
mov
sbb
pop
inc
and
sub
pop
pop
pop
popa
in
push
and
das
pop
push
fs
push
mov
icebp
push
ja
out
sbb
mov
addr16
cmp
lods
push
dec
xor
stos
es
test
cmpsb
sub
xlat
outsl
ds
xor
sbb
aaa
je
or
jle
cmpsb
cltd
xchg
out
push
pop
call
xchg
cltd
outsl
in
add
inc
aas
jg
push
add
imul
in
arpl
xlat
cmp
pop
pop
movsl
push
push
inc
mov
cld
loopne
jl
js
mov
adc
cmp
dec
inc
inc
rcll
aad
push
sbb
adc
popa
in
or
jbe
stc
sub
and
add
icebp
negb
aam
adc
mov
das
or
test
sbb
les
mov
in
add
out
out
lahf
dec
aam
leave
push
stos
mov
pop
rcrl
sbbl
push
mov
xor
dec
int
sub
les
inc
push
lret
stc
cld
pop
mov
jae
mov
push
jne
inc
fisttpl
pop
lcall
xor
mov
dec
ret
rcrl
movsl
pop
push
xor
add
leave
roll
scas
fsubr
pop
inc
sub
mov
sahf
push
ljmp
mov
in
push
pop
arpl
adc
loope
cmp
loope
mov
mov
rorb
sub
adc
cmpsb
test
scas
xchg
mov
or
sub
leave
enter
mov
ret
stc
push
or
test
jno
adcb
pop
insb
sahf
stos
ss
cmp
mov
xchg
mov
imul
ret
sbb
js
ljmp
roll
lock
inc
fnstenv
or
shlb
push
in
cmp
outsl
sbb
mov
and
scas
out
test
jno
xorl
jge
pushf
and
mov
mov
jns
lretw
out
loopne,pt
sub
and
xchg
fs
xchg
lret
jg
xchg
xchg
test
sub
fimuls
cmp
push
dec
out
pop
dec
push
mov
push
or
pusha
cltd
xchg
out
jns
mov
lret
dec
xchg
pop
dec
cltd
imulb
cmp
xor
lock
mov
sub
push
mov
mov
push
aaa
xlat
lret
or
mov
sbbl
mov
pop
push
sbb
shlb
outsb
stos
leave
sbb
and
lea
into
adc
dec
xchg
cwtl
push
xchg
gs
cmp
jns
ljmp
pavgb
pop
cmp
push
fildll
mov
inc
jb
sahf
sub
sahf
lea
insl
or
jecxz
xor
out
arpl
pop
inc
lret
push
mov
popa
stc
movsl
popf
pop
fimuls
xor
push
pop
sbb
jg
and
iret
clc
dec
insl
push
or
mov
sub
dec
fwait
lcall
faddl
test
data16
lret
pop
cmpsb
in
outsl
cmp
jno
inc
in
dec
xchg
jle
cmpb
push
mov
pop
adc
inc
ror
lods
cld
add
call
lds
cmpsb
pop
jbe
fnstsw
das
push
dec
clc
pushf
fistps
test
pop
mov
xchg
stos
xor
iret
sbb
imull
or
cltd
shlb
aam
ja
mov
lods
cld
je
daa
push
cmp
push
jnp,pt
es
mov
lcall
mov
sbb
add
cmp
mov
outsb
leave
lds
push
iret
xlat
push
inc
test
sahf
test
imul
or
pop
sbb
xchg
or
lret
sbb
cli
dec
fcmovne
xchg
jnp
mov
stc
pop
inc
push
cmc
repz
fsubrs
sbb
pop
add
shll
and
rcll
ret
test
fildll
in
fisubs
inc
add
xor
das
xchg
or
push
lret
pop
push
xchg
mov
or
xchg
test
rol
sarl
xchg
aas
mov
lcall
dec
leave
outsl
ret
xlat
scas
mov
pusha
inc
ret
sub
inc
xchg
out
mov
js
jo
outsb
decl
push
call
jo
or
fstpt
popa
loope
pop
pop
lds
adc
sbb
or
add
in
lock
and
sti
gs
push
repnz
ret
xchg
add
fs
call
and
sub
lret
clc
sbb
mov
ja
test
aas
lods
pushf
out
sbbl
loope
fmull
dec
cli
lods
lds
push
int3
popa
push
jo
stos
scas
movsl
push
jae
xchg
push
icebp
aam
cwtl
jns
sti
or
faddl
stos
or
xchg
push
mov
and
gs
pusha
sbb
ficomps
jmp
lods
das
sbb
inc
xor
jno
lds
imul
xor
cmpsl
inc
movb
jp
pop
mov
lea
ja
movsb
dec
test
xor
notb
insl
mull
cmp
cmp
es
stc
js
push
cli
out
adc
leave
movsl
xor
fistl
mov
nop
cs
xor
icebp
dec
fcmovnb
or
in
or
add
addr16
fwait
xchg
pushf
pop
cltd
jp
add
cmp
pop
iret
add
outsb
inc
sub
shll
pop
mov
mov
rolb
mov
sub
xchg
lock
cmpl
lret
cmp
mov
adc
leave
nop
rol
sbbl
mov
jns
and
xchg
xor
mov
sub
and
sar
enter
outsb
dec
in
movsl
push
popf
jle
lcall
stos
mov
pop
xchg
fmuls
data16
pop
mov
inc
mov
xchg
sbb
mov
dec
sbb
mov
enter
pop
inc
push
lret
daa
popf
push
in
fists
xlat
ret
repz
cwtl
pop
mov
inc
arpl
fmuls
out
push
push
fcom
stos
ror
daa
bound
movb
cmpsb
xchg
mov
test
cltd
dec
xor
push
and
dec
push
mov
imul
and
ss
push
mov
mov
out
in
in
push
cmp
ficoms
cmp
test
or
rcrb
jnp
add
les
pushf
cmp
int3
int
push
scas
pop
adc
dec
repnz
cmc
sarb
cld
cmp
mov
cmp
push
ret
clc
and
mov
xchg
ljmp
jo
pop
push
imul
enter
stos
jae
idivb
xor
jne
or
out
dec
shlb
lret
mov
and
mov
rorb
scas
add
loop
scas
das
hlt
test
jns
inc
iret
pop
cld
sub
push
popf
push
mov
movsb
aad
imulb
adc
les
lret
sbb
insb
test
lret
xor
push
addr16
sbbb
jge
lock
stos
fstps
jle
addl
mov
push
adc
push
test
nop
cmp
push
add
fwait
push
lods
sbb
out
or
adc
push
jmp
adc
add
sub
movsl
outsl
jge
or
sub
lret
dec
cli
enter
stos
or
stos
int
mov
subl
inc
daa
movsl
iret
test
xlat
fnstenv
ss
add
sub
rclb
cmpsl
rorb
mov
mov
jg
mov
fwait
xor
jb
sbb
xor
sbb
mov
jno
xor
lahf
mov
insl
into
scas
cmp
xchg
ret
arpl
mov
cmp
fistpl
xchg
and
hlt
lods
sbb
rcrb
popf
or
mov
and
xor
jb
and
lds
scas
mov
mov
out
cmp
mov
pcmpeqw
popa
cmpsb
sub
mov
lret
mov
inc
stc
stos
inc
jnp
int3
adc
mov
mov
mov
jge
sti
mov
negl
pop
inc
das
xchg
outsl
xchg
and
fidivrl
paddd
push
daa
outsl
jecxz,pt
outsl
mov
icebp
rcrl
xchg
test
stos
mov
push
mov
ds
packuswb
daa
aaa
loope
add
add
hlt
mov
jmp
repz
fisttpl
out
sub
mov
sub
fwait
jp
outsb
in
or
sub
test
dec
inc
sbbb
nop
adc
int
push
push
mov
les
push
xor
cmp
add
xchg
addr16
adc
or
inc
pop
or
mov
aam
sbbb
sahf
sti
jecxz
sub
pop
insb
aaa
dec
sarb
cmp
push
mov
testb
add
movsl
mov
push
and
jo
sub
loope
sbb
add
imul
arpl
repnz
xor
imul
push
cmpsl
xorl
icebp
xchg
imul
and
gs
dec
shrb
movsl
enter
mov
xor
in
dec
cmp
pop
or
push
or
mov
aas
dec
sub
fcmovnb
mov
dec
cmp
je
lss
cmp
icebp
addr16
xor
shl
icebp
scas
cmpsb
mov
mov
dec
jo
sti
addr16
add
lock
xor
dec
and
push
push
fs
repz
xchg
dec
mov
jge
pop
push
icebp
gs
dec
push
cmp
push
and
incb
lret
mov
jne
mov
mov
gs
aad
jp
std
push
lret
sbb
fs
jbe
js
add
cmp
rcl
inc
in
add
stos
push
inc
ja
inc
jnp
push
xor
lds
in
push
incb
clc
addr16
and
outsl
mov
ljmp
dec
out
sub
push
aaa
seto
fwait
dec
fs
mov
and
icebp
xchg
sbb
push
and
xor
jle
pop
ret
inc
roll
int
js
mov
lock
outsl
cltd
mov
enter
iret
sarb
incb
dec
lds
sbb
mov
mov
push
xor
mov
push
imul
js
xor
cmp
in
les
mov
dec
lcall
std
jae
and
xchg
adc
clc
adc
mov
lds
xchg
push
xchg
movsb
sbb
jno
lea
push
sbb
push
or
arpl
pop
xor
shl
jle
test
jae
popa
and
stos
sbb
adc
push
pop
lods
lea
mov
push
insb
movntps
adc
cmp
nop
xchg
add
xchg
scas
addr16
movups
imul
xchg
jns
dec
insl
cmp
push
inc
xor
or
mov
or
add
pop
jmp
ja
outsb
xchg
pushl
cs
int3
shll
int
push
and
adc
mov
or
mov
negl
popa
push
adc
push
xor
cld
pushf
fmuls
scas
int
ljmp
cmp
hlt
mov
gs
inc
std
fnstenv
and
shl
mov
jbe
sub
rclb
cmc
cmp
push
sahf
std
in
hlt
dec
jmp
dec
jl
inc
xchg
into
pop
or
sub
xchg
mov
mov
sub
xchg
mov
insl
lods
ret
mov
lea
mov
mov
out
out
movsl
scas
sub
sahf
pop
xor
mov
adc
sbb
dec
decl
or
das
jae
dec
gs
add
xchg
pop
jnp
out
pushf
adc
cmc
mov
jnp
popa
daa
jbe
sarb
xor
fists
mov
inc
jl
xchg
sti
loop
pop
dec
push
and
test
mov
jge
mov
and
adc
in
pop
pop
inc
test
mov
inc
enter
dec
fildll
mov
adc
mov
fnstsw
call
pop
loop
xchg
fiaddl
inc
mov
xchg
push
pop
adc
xor
jecxz
arpl
jle
mov
jg
stc
push
insb
push
mov
jl
sbb
mov
adc
ja
mov
call
std
daa
cmp
jmp
jge
xchg
sahf
pop
fistps
mov
fdivrs
mov
aad
dec
push
fwait
loopne
pop
push
mov
std
cmpsl
ss
fadds
sbb
push
sahf
outsl
inc
pop
adc
mov
jo
jmp
fwait
sub
adc
ljmp
fs
pop
packsswb
push
mov
mov
cmpsb
mov
rorl
jl
push
or
xor
test
xchg
and
icebp
pop
mov
ret
xchg
decb
xor
cld
and
hlt
xchg
cmpsl
hlt
sbb
int3
cmp
cmp
cwtl
fs
cmpsl
shll
jne
ja
pop
sbb
lock
add
push
cltd
jbe
bound
aam
inc
mov
lea
sbb
jge
ja
lock
int
fs
cmp
push
inc
or
movsb
sarl
pop
or
sbb
push
stos
xor
es
and
mov
rol
scas
loope
enter
mov
mov
jne
sbb
adc
dec
adc
fsts
cs
mov
push
es
jl
lcall
inc
repnz
dec
aaa
loope
popf
jno
mov
lods
xchg
dec
jne
iret
and
mov
inc
jne
xor
stos
mov
pop
call
and
sub
rol
pusha
inc
aad
sub
testl
into
test
in
jne
into
pop
sbb
dec
push
push
xchg
fiaddl
cmp
fs
inc
clc
adc
adc
mov
push
scas
movsb
stos
mov
adc
inc
in
out
push
jnp
mov
arpl
idivl
in
insl
out
aad
mov
sbbb
sbb
sub
lret
pop
addl
pop
inc
mov
dec
cvttps2pi
mov
into
mov
jmp
pop
jno
sbb
pop
in
dec
ficompl
mov
leave
mov
and
add
mov
sub
mov
mov
cmpsl
subl
gs
pusha
mov
add
or
push
inc
insl
jle
jl
push
push
js
add
jecxz
and
gs
rorb
mov
cmp
test
mov
jns
mov
andl
mov
xchg
and
lret
push
mov
stc
mov
xor
xchg
sub
notl
cmp
pushf
sahf
or
ficoml
jmp
punpcklwd
cmp
xor
test
data16
ficoml
mov
inc
push
add
cld
jbe
inc
stos
or
loop
icebp
pop
xor
and
or
or
mov
sub
je
push
and
das
ret
fsub
dec
cld
jae
das
out
adc
xchg
fisttps
mov
push
sub
loop
cwtl
pusha
push
lret
pop
push
leave
xchg
mov
fistps
mov
popa
and
pop
xor
lcall
dec
dec
and
popf
ret
aad
mov
out
jmp
xchg
filds
test
leave
mov
jo
lods
sub
iret
dec
xlat
pop
dec
mov
aas
xlat
test
mov
xchg
in
aam
insb
clc
mov
js
xor
xor
xchg
xchg
cs
fdivr
xchg
insb
sub
arpl
or
cmp
fldl
jle
xchg
iret
xchg
pop
push
or
pusha
jno,pt
sub
stos
ret
jmp
cmp
pop
into
xor
icebp
mov
testb
in
xchg
es
pop
jp
inc
mov
lret
arpl
shll
loopne
cmpsl
pop
outsb
xor
mov
jge
imul
mov
jne
scas
xchg
xor
xchg
pop
mov
ljmp
ret
pop
sbb
lds
inc
mov
test
jmp
and
sub
push
test
sbb
mov
ret
mov
in
mov
mov
push
cmpsl
test
iret
ja
orl
mov
xchg
flds
adc
sbb
dec
push
pop
loop
xchg
mov
es
mov
dec
push
mov
cmpsl
push
ret
sub
mov
cmp
cld
fidivrs
sar
aas
or
adc
pop
xor
sahf
int3
mov
and
lds
shlb
push
cmp
adc
hlt
mov
sub
in
inc
std
nop
inc
add
fstps
rorl
mov
push
out
sbb
int
dec
je
ret
gs
lock
imul
out
pop
loopne
out
pop
push
inc
sarl
sti
push
outsl
xor
rorb
mov
inc
ss
pop
sti
and
adc
out
popf
addr16
push
mov
enter
push
sbb
jle
or
mov
and
pushf
sahf
or
mov
ja
nop
jle
mov
inc
jmp
xor
je
gs
add
jb
add
into
lret
jg
jg
inc
lret
push
nop
push
xchg
adc
mov
add
mov
and
sub
push
mov
call
addb
int
sub
and
xor
aad
push
pop
xor
loop
repnz
dec
pop
pop
sub
inc
inc
xchg
ret
and
sti
pusha
xor
lret
push
in
and
sar
inc
enter
push
repnz
ret
add
fmuls
outsb
mov
daa
mov
ljmp
inc
cwtl
bound
xchg
xor
cmpsb
enter
adc
adc
in
cld
mov
mov
mov
es
dec
adc
sbb
fadd
notl
fimuls
je
mov
inc
fwait
dec
movsl
imul
xchg
mov
mov
out
scas
fdivl
mov
es
or
push
je
stos
das
dec
pop
dec
mov
repz
addr16
repnz
call
push
adc
je
cmpsl
gs
into
in
jnp
arpl
jecxz
jnp
xor
push
es
arpl
das
fsubs
push
ss
enter
jmp
enter
push
jmp
xchg
push
xchg
adc
push
pop
nop
mov
sub
in
pop
cmp
mov
xchg
in
dec
test
jb
ret
fadd
inc
lahf
push
sbb
call
fs
pop
xor
add
push
pop
xlat
jge
push
adc
lods
dec
test
add
fstps
mov
pop
out
mov
imul
sub
cltd
repz
mov
xchg
popf
xchg
lock
rclb
lahf
sbb
sarl
xchg
push
movsl
leave
mov
xlat
lcall
out
push
pop
sbb
adc
jge
add
in
out
dec
dec
cwtl
add
enter
push
or
lahf
sbb
jmp
cmp
lcall
mov
stos
adcb
or
out
inc
mov
cmpsb
sbb
jg
mov
lods
or
push
ficompl
fs
xchg
bound
push
nop
cmp
push
xchg
ljmp
ja
leave
ss
adc
icebp
or
sub
pushf
xchg
add
or
fistl
rcrl
pop
ds
cmp
jecxz
adc
aam
adc
popf
dec
or
push
loop
cmp
jecxz
pop
insl
push
inc
mov
das
dec
or
mov
and
add
inc
mov
add
mov
sbb
shll
mov
add
sub
pop
and
std
inc
sub
add
pop
mov
sub
lcall
inc
sbb
xchg
add
dec
adc
inc
leave
pop
fsubr
shr
in
sbb
gs
xor
push
xor
add
in
mov
push
movsl
lods
fwait
adc
icebp
test
jle
jmp
cltd
fs
sahf
cmp
pop
lods
int
mov
inc
dec
sbb
imul
bnd
test
insl
mov
jne
fwait
ret
jae
popl
adc
neg
mov
jne
jmp
data16
ss
sbb
fs
dec
push
and
clc
pop
hlt
and
mov
repnz
cld
mov
xor
cmp
repz
jb
mov
mov
int
je
xlat
jns
xlat
push
pop
push
push
mov
stc
and
dec
push
or
xchg
scas
xchg
jo
dec
pop
add
ss
neg
jmp
mov
test
or
pop
or
push
in
std
in
test
or
in
xlat
into
jp
mov
sub
xchg
loop
aaa
inc
popa
pushw
xchg
outsl
pop
and
inc
mov
imul
cmp
jnp
mov
aas
pop
dec
call
xchg
push
mov
jb
mov
mov
cmp
inc
adc
js
and
pop
pop
lds
mov
add
icebp
cmp
jnp
or
imulb
js
stos
movsl
sti
sahf
mov
inc
pop
dec
adc
mov
mov
and
pop
mov
mov
mov
mov
fisubrs
imul
fsubr
lahf
fnstcw
movl
mov
jge
mov
ds
repnz
in
sar
shr
addr16
sahf
ss
popf
cmpb
mov
je
movsb
fs
pop
std
das
adc
insl
sub
sub
xchg
outsl
fstps
ret
or
sbb
andl
xor
in
cli
and
inc
jno
cmp
xchg
pushf
jp
mov
pop
fidivl
incl
scas
dec
daa
pusha
sbb
daa
jae
in
ss
jno
in
sbb
repnz
push
inc
dec
pushf
mov
mov
lods
adc
faddp
mov
cmp
mov
push
inc
jnp
aaa
mov
dec
aas
pop
aas
and
xchg
jle
jo
idivb
mov
cld
sbb
notb
push
push
push
push
aad
mov
frstor
push
pop
das
clc
mov
pop
xor
ds
test
and
outsl
jne
shl
jle
cltd
scas
aaa
sub
es
push
aas
aam
pop
bound
cld
test
xlat
xchg
rcll
xchg
jl
push
out
les
xchg
cs
lahf
mov
sbb
insl
mov
dec
imul
leave
xchg
pop
xor
mov
test
xchg
sbb
inc
ficoml
aaa
and
fisubrs
jmpw
mov
adc
jecxz
jo
sbb
or
icebp
inc
jmp
sub
xor
jge
dec
jl
xchg
fmul
xor
hlt
mov
adc
ret
aad
xor
inc
and
hlt
push
mov
mov
sub
out
les
inc
pop
icebp
and
xchg
out
adc
jmp
xchg
shl
push
mov
popf
mov
adc
rcrl
mov
xor
in
jns
mov
mov
pop
pop
mov
movsb
lea
adc
cmp
mov
dec
jns
ret
pop
pop
cltd
scas
jo
into
or
xchg
loopne
loop
into
push
mov
add
pop
into
mov
mov
mov
inc
fisubrl
jp
dec
and
push
lods
xor
rclb
fdivl
aam
fsubrl
fsubrs
imul
push
pop
push
and
fiadds
cmp
mov
or
imul
inc
out
fdivrl
mov
dec
adc
daa
mov
or
add
popf
ficoml
pop
or
test
xchg
aas
pop
add
add
arpl
daa
pop
and
inc
lret
push
fmull
pop
sub
clc
inc
cmp
rolb
stos
vmread
cltd
xor
pop
call
dec
in
hlt
lret
in
cmp
and
and
or
les
stos
cld
cmpb
cmpsl
add
cld
mov
mov
xor
mov
push
jecxz
aas
fnstsw
lret
jns
js
test
pop
add
mov
dec
adc
adc
dec
push
jge
aas
lret
out
xchg
test
xchg
inc
jbe
jns
in
lods
inc
xor
xor
lock
push
cmc
jns
lahf
mov
roll
pop
jp
jecxz
jp
xchg
pop
jns
pop
fnstenv
jbe
ljmp
das
adc
jge
hlt
daa
shll
into
xor
lcall
adc
loopne
push
mov
xor
inc
js
das
push
jbe
mov
mov
lds
mov
and
cmp
cmp
aam
mov
pop
inc
adc
or
inc
xchg
movsb
pusha
inc
out
or
push
lret
bound
or
and
cmp
mov
adc
sub
dec
adc
out
fsts
lock
ret
mov
mov
stos
fwait
js
iret
sbb
add
fcomps
cmpsl
popa
adc
mov
push
add
data16
stc
and
shll
inc
sub
add
mov
lret
and
arpl
fdivr
add
or
js
pop
repnz
ljmp
bswap
push
pop
ucomiss
loope
mov
enter
mov
xor
loope
stos
mov
aam
aam
pop
pusha
movsb
int
cmpsl
push
cmp
xchg
stos
aas
mov
mov
dec
ljmp
and
mov
mov
lret
cmpsb
mov
and
js
push
fnstsw
pop
mov
neg
out
sti
fldenv
cmpsl
inc
mov
cmp
or
mov
sti
cwtl
inc
mov
std
pop
bound
jge
xor
out
rcrl
lret
inc
add
lea
push
mov
pushf
icebp
imul
leave
mov
sbb
mov
cli
outsl
outsl
or
es
movsb
mov
push
sbb
nop
jge
add
ret
std
out
stc
fsubrs
and
mov
out
xchg
inc
mov
loop
push
pop
xchg
push
scas
sbb
out
loope
xor
pushf
test
cmp
xchg
sarl
fcmovne
ja
clc
jge
addr16
sub
sbb
imul
mov
fimuls
test
sar
mov
outsb
dec
cs
pop
mov
out
push
jns
cwtl
pop
out
cmp
mov
lcall
jne
sbb
push
jg
cld
mov
cltd
mov
test
push
mov
cltd
call
jo
push
xchg
mov
popf
mov
jecxz
jb
xlat
fcoml
pop
in
jecxz
iret
hlt
or
cs
fmul
jp
add
and
xor
dec
imulb
or
dec
xchg
pop
dec
pop
xchg
mov
jecxz
repz
sbb
lods
fidivs
in
adc
dec
pop
ljmp
into
sbb
jmp
test
add
xor
adc
dec
fst
fildll
cmp
mov
mov
es
mov
xor
loopne
mov
andl
sbb
jb
adc
movsl
pop
push
or
movsl
cmpsb
push
cli
pop
ja
aam
sbb
sbb
jns
cmpsb
popa
ficompl
add
fwait
outsl
push
leave
iret
mov
nop
xchg
cmp
fs
jne
pusha
mov
add
stos
into
mov
xchg
inc
inc
push
ljmp
mov
mov
adc
sub
jbe
push
xchg
daa
or
dec
dec
pop
xor
cmp
dec
add
and
mov
jnp
addl
dec
push
adc
mov
mov
jge
xor
xchg
and
inc
lret
in
mov
aas
or
fs
push
pop
adc
mov
xchg
leave
cmc
add
sbb
push
mov
xor
pop
mov
loope
jecxz
sarb
cmc
xchg
aad
in
movsb
clc
std
mov
xor
dec
inc
or
shl
movlps
sarl
and
nop
mov
pop
outsl
xchg
inc
cmp
mov
in
and
cltd
pop
or
push
xor
sub
mov
pop
jne
call
xchg
adc
dec
or
out
test
inc
icebp
ret
ret
cmp
sbb
mov
cwtl
jmp
scas
ja
lret
dec
jl
jb
stc
lret
movsb
xchg
and
inc
cli
sbb
lahf
fwait
hlt
mov
and
push
inc
lds
lea
insb
icebp
inc
push
ret
fildl
cmc
nop
lcall
in
xor
movsl
sub
lock
dec
es
jo
fisttpll
cmp
inc
add
pop
mov
fdiv
add
repz
mov
push
out
pop
mov
push
out
mov
sahf
ljmp
mov
xor
dec
cwtl
arpl
adc
dec
mov
clc
pop
ds
subl
into
ss
push
jge
sbb
popf
and
inc
adc
femms
inc
dec
dec
imul
std
mov
push
loope
push
fisubs
mov
repz
pxor
arpl
pop
xchg
aaa
add
lods
dec
cmp
xchg
mov
pop
rcll
shr
sub
fstpl
outsl
cmp
jmp
pop
mov
jge
pmullw
dec
test
or
in
mov
push
inc
xchg
xor
or
pop
cmp
add
aam
push
xlat
pop
fbstp
ja
stos
dec
mov
into
mov
iret
or
cmp
sub
into
outsl
insb
sbb
popf
int
pop
je
mov
fisttpll
iret
call
enter
out
add
cmp
insb
push
ljmp
lahf
loopne
lods
add
jge
test
test
aam
outsl
jne
sub
xor
adc
test
mov
pop
lahf
imul
mov
test
nop
sub
jbe
rcll
adc
cld
sbb
xchg
xlat
daa
fwait
dec
mov
xor
dec
jo
mov
test
add
sub
aad
sti
scas
pop
add
adc
adc
fwait
out
xchg
mov
test
movb
lret
clc
in
inc
dec
pop
mov
push
push
jnp
mov
and
adc
adc
outsb
fldcw
mulb
pop
cs
jb
cltd
sbb
jmp
push
lcall
ror
mov
out
pop
jmp
cmpsl
fs
loop
sbb
adc
arpl
test
push
mov
fs
or
ss
jo
pop
mov
cltd
dec
pop
sub
loope
jp
push
add
popa
enter
jp
jo
pushw
adc
fwait
nop
loop
dec
dec
pcmpgtw
sbb
in
cmpsb
cbtw
loop
out
sbb
pop
push
outsl
or
repnz
push
push
sbb
add
dec
sahf
ja
sub
imul
call
pop
sbb
mov
jne
push
push
cmc
xlat
loop
push
lock
pop
stos
cmp
adc
lret
insl
jecxz
inc
xchg
and
pop
pusha
dec
cmp
icebp
cmp
xlat
out
or
xchg
pop
lods
ja
or
int
scas
adc
test
cld
mov
test
lret
xchg
mov
std
inc
imul
fadds
jo
out
insb
ret
cmpsb
xchg
in
cmp
scas
sub
fmuls
bound
out
or
out
cld
fisubrs
movsl
inc
aas
xchg
xchg
mov
pop
pop
pop
push
scas
in
adc
popf
stc
mov
sub
dec
mov
dec
out
mulb
xorb
ja
jno
sti
insb
das
inc
mov
xchg
and
dec
mov
sub
mov
dec
call
insb
fistl
adc
pop
dec
in
pop
mov
fnstcw
jo
add
lea
aad
xchg
lods
lcall
pop
out
lcall
fdivrl
inc
sbb
push
jno
rorb
add
sbb
loop
add
int3
shrl
inc
shrb
mov
push
add
out
stc
mov
cli
es
sarl
das
ss
xor
xor
mov
test
dec
jmp
jle
xor
and
ds
jge
xchg
and
sub
aad
mov
mov
hlt
movsb
mov
pop
push
adc
dec
and
mov
add
pop
sub
fimull
pop
pop
sbb
shrb
jae
inc
mov
inc
cmp
idivl
or
ljmp
cmp
aaa
mov
dec
out
pusha
inc
lods
pop
add
fisubs
sahf
adcb
mov
stc
xor
mov
mov
call
or
pop
lods
xor
push
mov
leave
jns
jns
sarb
mov
cs
ja
sub
arpl
push
mov
adc
rorb
cmpsb
loop
rorl
cmp
cmpl
push
sbb
xchg
icebp
push
and
add
push
icebp
xor
inc
jecxz
sbb
cmpsl
test
and
push
or
mov
dec
hlt
stos
xchg
dec
divl
imul
xor
xchg
and
pop
inc
insl
aad
jnp
push
adc
xor
sub
dec
inc
inc
inc
and
aad
xor
scas
fxch
mov
std
xchg
pop
test
inc
and
call
mov
aas
test
and
dec
dec
aaa
sbb
adc
decl
sti
cmp
jg
cmp
jge
xor
mov
hlt
test
add
inc
sbb
insb
test
xchg
mov
mov
mov
pusha
and
andb
mov
popa
mov
mov
inc
movsb
test
ja
out
mov
test
outsb
mov
aaa
mov
addr16
inc
in
movsb
loop
xchg
iret
add
clc
xor
pop
push
push
cwtl
adcb
lods
add
sbb
aad
sbb
xlat
in
popl
inc
mov
sub
cmc
cli
sub
push
or
or
cmpsl
sub
sub
lods
shlb
maxps
loope
jo
movsl
out
pop
jmp
mov
in
push
fs
imul
out
mov
push
cmp
add
les
mull
push
adc
call
fdivrs
mov
pushl
rcrl
cli
pop
mov
lcall
jns
sahf
and
and
mov
add
pop
mov
inc
fsts
fmul
test
stos
pop
mov
out
fs
arpl
lea
out
inc
push
inc
jbe
stos
xor
or
cmp
stc
insb
jns
mov
rcll
mov
mov
dec
je
add
sbb
pop
jno
xor
add
pop
jb
loope
jb
ret
sub
cmp
arpl
ljmp
hlt
imul
fstpl
das
imul
vmwrite
adc
sbb
xchg
pusha
gs
out
test
adc
in
cmp
adcl
ud2
mov
ds
sub
add
sbb
inc
ja
hlt
ss
ss
mov
push
mov
fistpl
sub
push
ja
mov
out
mov
fwait
and
mov
adc
lahf
add
push
or
pop
cmp
loopne
mov
lret
inc
int3
mov
outsl
adc
jmp
stos
jge
dec
sub
mov
and
jl
pop
sahf
outsl
add
arpl
lds
mov
or
or
test
nop
loope
test
sub
scas
imul
mov
pop
or
in
icebp
inc
std
sub
movsb
pop
cmc
es
and
inc
push
jbe
jae
int
cmp
dec
mov
cs
jg
lret
icebp
push
sbb
rorl
aas
mov
lret
data16
lods
ja
jp
or
pusha
test
xor
cmp
out
mov
sub
adc
mov
xor
test
sbb
cmpsb
mov
or
test
sub
test
loope
adc
dec
lods
in
movsl
sti
ret
fistpl
enter
pushf
push
fsubrs
xor
xchg
dec
inc
test
push
out
cmpsb
push
push
filds
bound
push
push
inc
rol
xor
movsb
stos
add
sub
int
test
mov
mov
repnz
sub
cmp
and
stos
mov
cmp
sbb
je
dec
jb
repz
and
xorl
daa
into
inc
jmp
enter
jb
mov
cmpsb
fsub
outsb
arpl
ljmp
xchg
dec
inc
ret
ds
xlat
ds
rcl
jnp
lods
cli
cmp
cmc
xor
jbe
xlat
push
inc
ficompl
fbld
jns
out
lock
fldt
inc
out
push
push
incb
loop
jmp
dec
jl
and
je
or
nop
jmp
cmp
dec
xchg
mov
test
xchg
pop
adcb
cmpsl
mov
adc
add
mov
or
sti
jb
push
xor
sub
lods
pop
mov
xor
fwait
push
mov
mov
daa
loopne
jge
push
stc
stc
ret
sub
mov
in
xor
mov
pop
outsb
adc
pop
adc
and
cwtl
gs
enter
aaa
dec
mov
and
aad
jge
lock
mov
lcall
jo
and
cmpsl
cld
les
pop
add
lret
xor
hlt
mov
jns
movsb
test
mov
aaa
rcrb
hlt
xchg
or
pop
shrb
cld
and
pop
inc
lods
int3
movnti
pop
les
jg
mov
pushf
ret
dec
mov
adc
iret
fidivrs
xchg
mov
dec
ja
xchg
mov
push
push
cmp
xor
mov
hlt
inc
or
ficoms
shrb
pop
ja
pop
fisttpll
out
pop
xor
repnz
mov
pop
dec
add
inc
fidivrs
pop
dec
mov
mov
fwait
xchg
mov
call
xorb
icebp
testl
inc
std
dec
imul
sub
mov
sub
pop
sarl
iret
push
dec
mov
fldenv
cmp
loop
loope
movsb
mov
loop
ss
cmpsl
dec
xchg
pop
mul
scas
notl
pop
imul
fnstcw
xchg
test
dec
or
in
jae
pop
add
icebp
shrl
sub
push
xor
xor
pop
mov
push
pop
add
shrl
inc
sti
int3
rcll
in
popf
jno
jb
loope
mov
pop
test
mov
imul
jmp
loope
and
lds
sub
out
pop
and
adc
or
mov
xchg
mov
push
xor
or
shrb
xor
add
addr16
add
jp
gs
or
imul
cld
push
pop
sbb
jmp
loope
outsb
popf
in
push
pusha
add
dec
loop
mov
bound
mov
add
test
mov
out
pop
push
xchg
and
jns
add
out
sub
imul
popa
mov
out
xlat
cmp
sti
ja
into
sub
jnp
cmpsb
jne
repnz
inc
lock
xlat
push
sub
pusha
aam
popf
pop
fptan
sbb
roll
cmpsb
sbb
mov
pushf
lods
pop
lret
cmp
add
and
divl
lock
adc
and
or
inc
fs
sahf
or
cmp
jae
aad
and
test
push
in
xchg
daa
adc
mov
test
ror
movsl
jnp
mov
sbb
mov
jne
xchg
lods
ret
sti
out
int3
xor
sbb
mov
dec
and
jbe
push
mov
adc
pop
push
xor
adc
jl
orb
dec
gs
test
mov
aaa
sbb
int3
sbb
dec
jl
adc
push
push
or
sub
sarl
push
fxch
cmp
sub
jge
push
shl
call
add
inc
in
add
shll
jg
and
or
outsb
cltd
aaa
outsl
in
and
push
pushf
in
xor
in
cmpsl
push
sbb
enter
dec
cmpsl
ficoms
mov
test
jne
int
dec
mov
or
addr16
xchg
fstp
testl
xchg
xchg
mov
push
orl
cli
pop
iret
in
jnp
xchg
rolb
out
pop
cmc
xor
in
add
sub
stc
hlt
adc
pop
or
xchg
mov
pop
dec
test
out
and
addr16
adc
movsb
xchg
mov
jno
addr16
cmp
aad
cmp
mov
and
out
stos
jae
sub
fbld
push
jl
push
add
lss
iret
test
ljmp
in
out
cmpsl
pop
stos
sub
fiaddl
sbb
xchg
xchg
insb
in
mov
adcb
mov
jb
fsqrt
iret
jbe
push
int3
mov
add
cmp
ret
enter
repz
inc
fmull
or
rcr
lods
mov
and
add
test
xlat
mov
ja
push
mov
outsl
dec
mov
outsb
out
in
jle
mov
xor
dec
xor
pop
cwtl
jbe
repz
mov
xlat
cwtl
mov
mov
movsb
mov
ss
ret
ficomps
test
add
movb
mov
adc
jp
push
mov
cmp
cltd
add
jbe
mov
loope
test
in
dec
cmp
mov
std
repz
lods
inc
cmpb
fsubrl
sti
sub
lods
dec
loope
jo
mov
ja
lods
stos
enter
js
xchg
cs
cmp
push
add
imul
enter
inc
pop
ret
cmp
push
jo
ret
push
enter
dec
test
dec
or
pop
push
push
xchg
icebp
loop
lret
or
out
xlat
sub
mov
xor
or
and
icebp
inc
loopne
je
enter
lret
testl
add
xchg
dec
loope
adc
les
xchg
cmp
stos
pop
add
add
cmp
cmp
ret
enter
sbb
cli
add
pop
popa
fwait
ss
inc
fmuls
icebp
cmc
inc
jmp
repnz
pop
pop
cld
fldenv
mov
sbb
mov
push
mov
aas
nop
xor
jns
jno
aam
adc
cmpsb
popf
mov
lret
shrb
in
insl
std
lea
adc
xchg
orb
std
aad
mov
xor
into
jns
icebp
xchg
add
mov
mov
sbb
jne
imulb
ret
lcall
cmp
add
repz
cmp
rorb
mov
sbb
mov
lret
inc
in
sbb
or
ljmp
fsubrs
sub
shr
out
sbb
ret
jge
lret
mov
or
and
mov
clc
sbb
sbb
mov
push
sbb
xor
shl
xor
xchg
das
pushf
and
popa
xor
dec
cltd
adc
sbbb
pop
mov
std
xchg
sub
xchg
cmpl
jmp
inc
xchg
mov
cmp
ja
pusha
xchg
mov
stc
not
roll
xchg
cmpsl
call
xchg
sbb
adc
clc
mov
pop
xchg
xchg
jle
fldt
xchg
cmp
xor
icebp
mov
shlb
or
jl
enter
das
je
cltd
pop
in
adc
outsl
xor
fisubrs
cmp
and
sbb
mov
add
ds
push
dec
cmpsb
loope
testb
mov
les
ret
lret
stos
xor
jae
jp
ljmp
sub
pop
dec
leave
push
mov
fdivrs
das
notb
or
jecxz
sub
mov
es
cmovns
jecxz
jbe
xor
and
lret
jne
cmp
orl
data16
push
shll
pushl
faddl
pop
inc
nop
int3
pop
push
jle
fs
scas
mov
pusha
nop
xchg
fucomip
pop
mov
or
cmp
cltd
sub
ljmp
out
repz
xchg
mov
dec
pop
pop
jmp
jge
addr16
xchg
xor
xchg
es
xor
pop
push
inc
mov
arpl
das
fs
popf
sub
jl
push
in
stos
rcl
jg
arpl
stc
pop
fs
fwait
inc
inc
les
andl
cmp
lock
fs
fcmovne
push
mov
inc
jae
pop
imul
inc
or
inc
lret
fsubrl
lret
adc
sub
cmp
sub
adc
sbb
in
or
idivl
aaa
sub
testl
gs
sti
gs
scas
into
inc
sub
mov
cmp
icebp
xor
stc
sub
inc
sbb
aam
cli
aaa
inc
movsl
insb
jmp
ror
or
jno
sub
jae
fs
sub
xor
dec
scas
sbb
mov
ss
in
jecxz
cmpsb
notl
mov
pop
and
and
fstp
out
cmp
sbb
adc
scas
adcb
ret
outsl
cltd
repnz
stos
cmp
adc
ljmp
xor
xor
add
xchg
push
push
ficoml
adc
ret
movsl
aad
fistpll
popf
stc
push
lahf
dec
scas
ljmp
loopne
inc
or
inc
pop
out
lods
mov
out
cmovge
push
and
movsb
pop
push
or
movsl
xor
mov
sub
test
arpl
cmpsl
pop
and
cmp
adc
push
in
sub
dec
stos
lcall
mov
lods
push
cs
lsl
loopne
xor
pop
movsb
gs
popf
push
bound
cmc
mov
out
jb
ja
fisubrl
mov
pop
rcrl
insl
push
or
test
outsb
or
jg
dec
cmpsl
stos
popa
lahf
xchg
enter
mov
push
fisubs
pop
pop
add
sbb
cmp
jne
mov
sub
test
gs
jno
sub
cmp
mov
fsubs
jmp
std
js
scas
arpl
test
daa
addb
imul
loope
mov
add
mov
xchg
add
mov
jne,pt
test
aam
sbb
jge
sbb
mov
xchg
pop
cli
jne
fildll
insb
lods
xchg
push
pop
jns
or
sahf
insb
and
jmp
push
mov
lods
test
xchg
icebp
faddl
aad
ret
push
mov
or
lods
or
jl
dec
push
cmpsb
fwait
call
jb
inc
outsb
shrl
aaa
je
adc
pop
inc
xchg
mov
push
dec
loope
mov
inc
adc
sub
xchg
popa
iret
lds
js
pop
sti
in
repnz
and
inc
add
sbb
into
mov
out
fcmovne
data16
data16
lds
jmp
fwait
mov
loope
sbb
sub
scas
push
mov
in
adc
clc
jecxz
cmc
das
sbb
jp
dec
inc
jne
fldenv
les
ja
jl
mov
lods
jmp
or
movsl
cmp
lea
aas
xlat
jl
pusha
imull
popf
push
push
add
sub
mov
dec
push
fs
sbb
clc
test
pop
or
imul
addr16
jns
push
mov
inc
mov
lods
adc
lret
mov
int3
cs
lret
cmp
pop
xchg
xchg
loopne
mov
or
dec
sub
iret
or
xor
scas
adc
mov
inc
std
sti
pop
cli
push
lods
mov
inc
jle
roll
loop
mov
scas
add
push
sar
pop
cmc
dec
adc
dec
mov
roll
stc
push
pop
cmp
dec
mov
stc
and
xor
and
mov
call
mov
nop
dec
mov
push
sbb
adc
add
inc
ljmp
sub
xor
scas
and
insb
add
dec
in
adc
add
hlt
fistpll
das
mov
push
mov
xchg
cmp
cwtl
pop
test
adc
mov
lods
test
cmpsl
movsl
pusha
in
cs
insb
sub
or
add
daa
jecxz
sbb
cli
les
push
push
ja
jecxz
cmc
cli
add
xchg
mov
into
sbb
mov
jno
push
stos
sti
and
movsb
outsb
fldt
nop
and
fdiv
shl
lret
pusha
lret
jge
mov
push
add
movsb
clc
and
cs
sub
and
sub
cs
push
idivl
push
in
push
push
xchg
and
cs
enter
aad
in
jecxz
mov
fwait
push
sbb
and
gs
fs
fsubs
mov
cmp
bound
or
mull
pop
jl
stc
and
lock
nop
out
add
adc
aam
ret
movsb
push
arpl
movsl
mov
in
mov
mov
cmp
pop
xor
fwait
jo
xor
xor
ja
sub
sbbl
inc
sti
nop
je
ret
test
xor
xor
adc
xor
aad
loope
icebp
or
sbbl
jge
pop
popf
fistps
jmp
ror
push
sbb
xchg
push
lahf
out
add
xor
pop
sbb
cmp
xor
mov
out
pop
push
in
and
dec
mov
daa
xchg
mov
mov
sbb
push
orl
mov
inc
lods
movsl
call
int3
cwtl
cmp
cmp
xchg
and
jns
or
idivl
orb
sarl
sbb
lea
inc
sbb
lret
fsubrp
push
adc
cmp
cmp
lret
jbe
mov
rorb
insl
mov
bound
pushf
sbb
mov
pusha
fiaddl
stc
xor
je
xor
dec
mov
cwtl
sub
fcompl
xchg
test
cld
and
push
nop
add
pop
test
sti
sbb
loop
shlb
inc
lods
shrl
xor
stos
stos
jle
dec
stc
movsl
in
push
inc
adc
mov
and
addb
push
cmp
aas
cltd
add
xchg
movsb
jecxz
jnp
push
in
shl
pop
xor
out
push
xor
add
adc
mov
mov
shrb
sub
hlt
inc
imul
gs
and
jo
adc
push
mov
loopne
rolb
scas
out
pop
sub
cwtl
push
clc
xor
clc
adc
sbbl
cmpsl
pop
mov
mov
daa
jno
inc
leavew
loop
jb
std
mov
movsb
xor
sub
pushf
outsl
push
mov
pusha
jne
sbb
jne
jo
arpl
pop
adc
iret
fstl
xchg
inc
imul
and
dec
adc
jp
std
fcoml
pop
clc
inc
pusha
jnp
add
jns
jle
es
into
mov
xor
jo
jmp
and
sbb
mov
or
movsl
sub
fisttpl
xchg
cmp
sbb
sub
lcall
cs
leave
loopne
movsl
mov
mov
insb
loop
cwtl
dec
orl
aaa
ljmp
mov
dec
jp
pmaxsw
sbb
mulb
cltd
jp
pushf
divb
xor
jmp
mov
mov
pop
cmpsl
lock
add
pop
mov
cmp
cmc
pop
stc
sarb
push
scas
inc
divl
ret
mov
ja
jae
insb
mov
mov
out
mov
jl
jbe
cmp
cmp
lds
lret
mov
or
sti
in
rol
adcb
jg
addr16
iret
sub
jb
xor
mov
dec
adcl
ss
sub
icebp
test
es
je
jmp
inc
andl
into
jne
mov
out
push
rcrl
sub
subl
outsl
xor
push
push
sub
xchg
xchg
adc
mov
adc
iret
imul
push
jbe
and
sbb
hlt
lds
stc
adcb
xchg
cld
jns
adc
arpl
mov
lret
ret
or
sbb
imul
xchg
sbbb
leave
lret
xchg
and
mov
jae
xchg
mov
fldcw
adc
dec
mov
filds
in
imul
adc
xchg
jnp
test
insb
add
aad
mov
arpl
cmp
sbb
jg
inc
mov
jne
cmpsb
lahf
inc
pop
movsb
fsubs
or
mov
mov
popf
insl
rcrb
or
lcall
jecxz
add
sub
sbb
sbb
fwait
mov
adc
sub
pop
cmp
pop
mov
add
xor
xor
xor
jo
inc
adc
xchg
orb
sbb
and
mov
insb
inc
jbe
inc
and
pop
or
sub
fistps
mov
insb
mov
int3
fimull
ljmp
testl
pop
adc
mov
test
or
xchg
jg
mov
pop
jge
sub
cwtl
dec
pop
mov
cmp
inc
bnd
add
call
or
mov
in
push
lahf
xchg
packuswb
adc
lret
rcrb
mov
mov
push
sahf
fcompp
mov
clc
sbb
popf
test
ljmp
pop
lret
sub
pop
ret
outsl
sbb
push
dec
test
mov
jns
ljmp
mov
push
outsl
mov
and
dec
xor
mov
ficompl
lock
cmp
fdivl
mov
fs
cwtl
popa
pop
or
adc
in
jb
xchg
inc
jbe
sbb
sbb
sahf
inc
xor
add
cwtl
mov
imul
add
jne
inc
cmp
jb
push
dec
inc
aad
in
push
xchg
dec
push
mov
sub
test
inc
add
inc
shl
sbb
xchg
cld
leave
loope
les
cli
mov
dec
push
lret
mov
cwtl
shr
jl
dec
inc
fcmovne
jns
jle
sahf
sub
mov
push
mov
lds
test
or
mov
sbb
sub
and
dec
jge
jp
xor
test
xchg
imul
lret
test
xor
imul
xor
pop
enter
jmp
popa
dec
fistpll
addr16
test
xchg
rcr
jle
mov
push
pop
sbb
inc
loopne
mov
lea
ds
std
mov
cmpsl
pop
sbb
ds
push
xchg
sbb
cmpsl
lea
add
mov
xchg
out
xor
lods
imulb
mov
jmp
dec
and
and
inc
mov
out
ljmp
cs
sbb
int3
sbb
out
jg
adc
or
fcompl
sti
int3
mov
push
mov
xlat
sahf
dec
push
ds
dec
mov
scas
jns
mov
or
popf
mov
sub
stos
inc
out
imul
sbb
fldenv
dec
sbb
push
nop
xor
inc
or
sub
mov
stos
lods
test
mov
jns
cmp
cli
idivb
icebp
jno
into
jbe
std
loop
and
fmull
aad
dec
adc
push
mov
scas
lahf
jo
int3
mov
xlat
hlt
imul
jp
aas
mov
push
push
inc
sbbb
inc
sub
mov
cmc
jnp
xchg
xlat
and
shlb
jae
fcompl
rclb
cld
push
cmpsl
pop
add
fwait
repz
popa
fwait
lcall
mov
dec
fisubl
imul
and
fbstp
gs
xchg
repz
pop
stos
mov
xchg
push
pop
je
xchg
divb
push
ret
cwtl
or
int3
sahf
mov
lods
decl
test
pop
or
sbb
or
loope
aam
sbb
movsl
in
aaa
dec
push
pop
dec
mov
js
daa
mov
jle
inc
decl
pop
fdivrs
add
sahf
jo
cwtl
lret
dec
adc
mov
vcmpps
dec
lahf
or
test
or
outsl
fwait
inc
sub
mov
cmp
mov
mov
sub
jmp
xor
add
cld
adc
push
fcmovu
les
pop
pusha
fimull
sub
adc
leave
mov
jnp
cmpsl
add
andl
lods
inc
jecxz
ljmp
dec
inc
sub
das
push
push
in
pop
dec
xchg
movsl
cmp
shll
and
and
stos
int
xor
loop
mov
push
mov
hlt
jl
sub
pop
mov
mov
mov
js
or
or
pop
mov
mov
jle
xor
mov
rcrb
fstpl
mov
xchg
add
pop
or
sub
sar
sbb
push
mov
inc
clc
roll
add
test
outsl
ds
test
xor
cld
sbbb
inc
mov
lcall
add
call
lret
xor
and
ja
icebp
aad
xor
pushf
fisubl
dec
mov
inc
mov
cmp
mov
lret
sbb
popa
enter
add
aaa
lods
lock
int3
mov
jae,pn
adcl
add
icebp
jecxz
dec
std
mov
or
and
jb
cltd
mov
sub
cli
and
out
sub
adc
cs
push
repz
pushf
insl
or
cmp
adc
insl
je
aad
mov
imul
mov
push
mov
push
add
jle
movsl
jp
inc
adc
aad
icebp
movsb
xor
push
iret
rolb
incl
sub
or
xor
xor
sbb
bound
jb
fisubrs
dec
divb
inc
scas
push
mov
fsubs
scas
mov
inc
scas
push
mov
arpl
adc
xchg
dec
mov
inc
out
int3
fistpll
cmp
fcoml
ret
jecxz
data16
stos
fsts
repz
dec
ror
push
movsl
cmpsl
jmp
scas
imul
or
xor
mov
orb
aas
or
lret
roll
into
push
enter
mov
sahf
mov
mov
adc
idivl
repz
push
bound
pop
sbb
jne
mov
js
pop
jg
inc
cmp
in
repnz
pop
mov
jo
aas
adc
stc
daa
sbb
and
fisttps
sahf
xor
into
pushl
sbb
inc
xchg
adc
loope
or
in
leave
push
pop
add
or
mov
jl
cmp
inc
out
lods
repnz
add
aad
inc
gs
adc
pop
jns
scas
lcall
aas
adcb
sub
stos
scas
adc
sub
push
rorl
lods
out
mov
push
dec
or
leave
stos
jp
cmp
xchg
iret
sbb
loope
ja
test
fadd
push
push
roll
and
sub
pop
xor
inc
aas
cmp
or
mov
andb
cmp
cli
dec
scas
pop
cmp
sbb
cmp
sbb
lods
pop
jp
pop
add
push
mov
add
into
inc
rorl
notb
sub
add
in
jns
add
xchg
addr16
jo
sub
in
jle
mov
pop
sahf
mov
mov
jecxz
insb
icebp
lods
adc
and
bound
popa
sbb
mov
cmpsl
std
inc
jl
in
pusha
in
sub
pop
pop
repnz
shll
lods
or
fidivrl
mov
pop
push
inc
jnp
sub
xchg
sahf
fidivl
pop
xchg
pop
mov
mov
mov
loope
mov
rcrb
cs
mov
incl
jle
ja
and
enter
test
test
clc
push
dec
jg
les
push
imul
pop
shlb
idiv
mov
and
nop
push
into
es
test
jge
push
push
push
incl
outsl
fisubs
cwtl
lret
adc
mov
dec
push
mov
aaa
mov
adc
repz
jo
aad
cmp
sub
or
xchg
gs
dec
fistl
outsb
stos
push
out
cmp
sbb
gs
xor
insb
sub
inc
bound
shll
arpl
mov
jne
in
sbb
cld
int3
nop
dec
xchg
xchg
les
pop
push
mov
addb
aad
xchg
mov
cld
mov
add
sbbb
es
ds
sub
lods
sub
add
or
rclb
out
jg,pt
inc
mov
mov
bound
roll
push
loope
adc
cs
mov
rolb
sbb
test
ja
xchg
and
mov
pop
shll
into
ja
push
imul
dec
inc
or
cmp
ficompl
cmp
mov
push
les
cmp
lret
xor
cmp
lcall
mov
xchg
cmp
pop
and
xor
xchg
iret
add
rolb
adc
cmpsb
dec
mov
add
pop
out
or
push
and
clc
push
nop
xchg
or
into
aad
imul
cmp
cmp
mov
cmc
outsl
mov
in
push
jnp
outsl
pop
mov
cmp
clc
repnz
test
jecxz
adc
jp
mov
ss
movsb
inc
scas
add
xor
adc
pop
int3
pop
and
aad
mov
mov
scas
in
xchg
xorb
xchg
and
enter
cmpsl
xorb
das
mov
int3
and
dec
test
loopne
enter
adc
mov
jge
out
sti
dec
aam
xchg
stos
in
pop
and
mov
inc
xchg
cmp
jmp
fidivl
mull
or
rorb
xchg
lds
xchg
out
push
pop
cltd
idivl
cmp
popf
mov
imulb
subl
xor
push
fs
scas
push
in
pop
in
mov
cld
cmc
inc
mov
fisttps
bound
fistps
inc
mov
add
mov
sbb
inc
mov
dec
dec
mulb
xor
jmp
jno
push
fs
mov
push
adc
mov
out
pop
out
cwtl
repz
outsb
sbb
jecxz
outsb
repz
leave
mov
xor
fwait
sbb
push
lcall
mov
negl
ds
popa
mov
xchg
dec
in
push
bound
hlt
repnz
fiadds
loopne
aam
xchg
imul
pop
cli
ja
dec
sbb
inc
or
negb
lahf
push
pop
ror
insb
mov
pop
in
sub
sar
dec
popa
fmull
mov
mov
push
mov
je
sti
out
pop
jp
push
cli
or
sahf
jg
push
cmp
shr
adc
arpl
inc
adc
lahf
inc
jno
mov
shrl
push
loop
popf
adc
shl
xor
std
fs
hlt
mov
and
jo
lock
lahf
pop
sahf
jmp
sbb
mov
and
hlt
mov
jo
jb
repnz
mov
aad
negl
das
lret
sub
or
push
ficompl
push
push
push
mov
lcall
popa
repz
ss
jae
xlat
sti
ja
mov
fwait
cwtl
cmp
fstps
push
push
into
cmp
rolb
inc
fidivrl
or
nop
mov
push
imul
dec
pop
cmp
dec
or
lods
mov
mov
loop
push
mov
test
jecxz
add
mov
xchg
pop
lods
pop
cmc
adc
je
pop
ja
xor
push
cli
sub
pop
ficoms
cmpsl
lret
sbb
mov
jecxz
pop
int
mov
ret
mov
shl
push
pop
jnp
inc
test
mov
jmp
adc
sbb
iret
xlat
fcompl
xchg
cltd
mov
pop
aad
fcoml
sub
out
negb
mov
adc
hlt
or
and
clc
cmpb
sbb
mov
lods
out
daa
sbb
lea
aas
lea
jle
inc
repz
sub
stos
xchg
pop
dec
aad
xchg
adc
jno
dec
clc
imul
cmc
sub
hlt
inc
mov
inc
popf
cmp
and
jmp
xchg
and
cmp
jne
rcrb
sub
repnz
dec
in
push
mov
sarl
shl
push
lahf
pop
je
shrb
dec
add
cltd
pushf
cmp
std
std
jb
jmp
xor
pop
out
daa
add
int
mov
mov
hlt
dec
sub
jbe
mov
mov
jo
and
push
pop
pmaddwd
sahf
pop
fsubrl
mov
fnsave
or
add
shll
sahf
pop
xchg
icebp
std
and
jb
pushf
jg
jbe
adc
add
cmp
and
mov
push
cmc
pushf
sti
lea
mov
cmpsl
inc
inc
xor
jne
add
loope
mov
xchg
notb
mov
mov
pop
test
scas
imul
push
in
mov
push
mov
iret
pop
mov
jmp
mov
pusha
inc
adc
stos
cwtl
test
mov
es
and
xor
cs
out
jo
push
stos
mov
js
fisttps
pop
int3
mov
inc
jno
out
ljmp
mov
aam
jle
out
xor
or
stc
adc
sbb
loop
xchg
les
daa
push
test
pop
dec
xchg
stos
cld
pop
and
es
jnp
mov
add
cmp
inc
dec
cwtl
jp
sbb
dec
out
pop
and
push
insb
cmp
xchg
subb
pop
arpl
jp
sbb
xchg
aas
jge
cli
test
jl
leave
mov
sbb
xor
dec
fsubr
shl
cs
int
cmp
sbb
pop
addl
push
movsb
rorb
dec
sbb
pop
xor
jno
pop
xor
jecxz
adc
pop
int3
sub
cmc
xor
push
repz
or
push
mov
fstl
push
inc
cmpsl
call
xchg
mov
setns
mov
lds
ret
test
pop
mov
ret
popa
jb
icebp
pop
adc
imul
rcll
mov
lret
xchg
roll
fcompl
jge
jo
xchg
mov
insb
out
ss
cmpsl
mov
movsb
xchg
in
stos
and
mov
inc
into
lods
pop
sub
cmp
clc
fldenv
mov
push
dec
push
mov
mov
push
xor
mov
and
inc
stc
dec
xchg
rclb
aad
mov
add
neg
imulb
cvtpi2ps
dec
push
lret
mov
popa
xchg
dec
jmp
pop
mov
add
lcall
sahf
call
call
cld
push
xlat
mov
clc
mov
shll
or
cmp
subl
add
dec
push
outsb
jle
pop
pop
adc
and
xor
mov
nop
jbe
loopne
aad
jne
xor
xlat
out
push
das
xchg
fbld
pop
xlat
add
pop
pop
subb
mov
xor
subb
xchg
and
pop
add
jp
addps
or
mov
cmpsl
and
pop
in
adc
jno
xchg
lea
mov
in
in
fldcw
push
pop
jb
inc
outsb
int
xchg
mov
or
dec
adcl
adc
dec
in
scas
xor
fildl
insb
notl
jnp
mov
std
stos
stos
gs
jns
mov
mov
mov
scas
sub
mov
dec
psubusb
out
xchg
jns
jle
add
push
dec
aaa
mov
and
shrl
test
enter
dec
adc
cld
push
cmp
fldt
mov
adc
out
fwait
out
lods
mov
fnstsw
ss
mov
aad
imul
popf
ljmp
scas
mov
lock
mov
sahf
cmovg
fisubs
xchg
aam
int3
cld
cli
and
pusha
push
mov
lock
fisttpl
rolb
adc
sarl
fwait
or
lock
jbe
xlat
mov
call
loop
mov
mov
mov
imul
ss
stc
adc
push
add
jecxz
iret
aad
dec
cmpsl
xrelease
pop
push
loope
push
fists
bound
and
outsb
test
js
mov
lods
stos
adc
insl
mov
mov
fistpl
imul
lods
vmovq
pop
xchg
jge
mov
push
mov
sbb
pop
scas
cmpl
imul
sub
xchg
xchg
sub
call
xchg
ds
push
jmp
cmp
xor
xchg
xchg
push
ljmp
sahf
out
stos
inc
mov
sbb
pop
test
aam
sub
std
dec
roll
mov
and
jb
cmp
inc
sbb
mov
mov
clc
fimuls
xchg
test
push
and
xchg
lret
cmp
das
js
mov
inc
int
outsl
mov
stos
mov
roll
pushf
js
cli
and
pusha
xorl
hlt
cld
sbb
or
int3
les
cltd
imul
hlt
bound
mov
movsb
cmp
adc
adc
or
stos
sarl
inc
cmp
decl
imul
and
lods
in
pop
add
xchg
pop
subb
pop
and
sub
jnp
xor
aam
popf
sub
shrb
xchg
test
lods
lcall
inc
inc
es
sbb
pop
mov
push
mov
adc
mov
cmp
into
sbb
xlat
cmc
mov
in
fistpll
or
mov
fldcw
ljmp
das
fcmovne
sar
add
mov
xlat
mov
lret
mov
pop
fmuls
lds
inc
inc
add
sub
and
xor
imul
int3
outsb
push
repz
loope
movb
data16
pop
faddl
push
int
loopne
test
lret
and
mov
fs
dec
push
pop
and
dec
mov
in
push
jl
fisttpl
mov
aas
sbb
pushf
and
es
mov
jb
mov
sub
push
bound
add
aad
pop
xor
jo
mov
jae
inc
insb
repz
inc
adc
std
add
sti
in
fs
loope
jmp
inc
movsb
xor
mov
lds
out
loop
mov
mov
sub
lods
push
and
add
dec
inc
out
pop
insb
xor
nop
sub
aam
xchg
es
pop
cltd
stc
inc
fstps
clc
iret
ja
dec
scas
push
dec
xor
stos
scas
mov
movsb
cwtl
in
test
inc
jl
jne
mov
lcall
inc
dec
std
sar
xor
jge
dec
cltd
or
inc
mov
adc
jnp
push
adc
jecxz
adc
adc
ss
xor
dec
and
les
imul
xchg
inc
fwait
xor
cmp
dec
dec
js
mov
shrb
jb
inc
stc
mov
daa
sub
dec
loopne
xchg
mov
cmp
and
inc
insl
dec
divb
fldcw
cmp
mov
xchg
ljmp
jne
add
dec
jno
push
adc
sub
int
leave
rcrb
fcmove
and
xor
cmpsb
adc
pop
fwait
repnz
lods
dec
inc
lcall
jle
in
cmp
push
rcrl
mov
and
sub
mov
xor
pop
mov
mov
aaa
mov
daa
movsb
pop
mov
adc
call
aaa
cmp
fs
outsb
leave
mov
adc
push
push
mov
test
inc
mov
mov
mov
dec
xorl
sbb
sbb
jecxz
lcall
jle
fcmovnu
push
xor
xchg
jmp
mov
cltd
mov
xor
push
xor
sbb
ret
xchg
jb
xor
push
fistps
je
outsl
mov
pop
in
fs
or
leave
and
xlat
fwait
cld
or
mov
push
sub
test
jecxz
lcall
ja
mov
lahf
jl
push
sahf
rol
jg
leave
cmpsb
cmpsl
test
cmpsb
lret
adc
xlat
xlat
stos
jae
sub
cmp
lods
in
push
add
xchg
cmp
jmp
or
test
call
sbb
push
aam
xor
dec
or
jb
xchg
adc
jbe
mov
add
sbb
rcll
inc
xor
dec
mov
enter
inc
jl
insb
scas
sub
jmp
out
xlat
es
push
ljmp
fxch
popf
lods
mov
pop
adc
mov
fimull
cli
sub
das
mov
mov
notb
ss
mov
les
popf
call
xor
jno
or
adcl
dec
and
xor
out
xchg
loopne
push
lcall
push
in
pavgb
clc
out
enter
fmull
mov
lret
inc
pop
dec
in
jecxz
mov
loop
pop
mov
mov
pop
dec
sahf
cmp
pop
xor
mov
fidivs
xor
dec
pop
or
das
in
jmp
jae
push
dec
out
mov
shlb
or
push
test
ret
mov
mov
jne
jmp
and
mov
out
mov
sbb
sbb
xor
lods
lods
adc
inc
mov
and
or
adc
imul
loope
or
or
xor
add
or
dec
dec
shl
enter
dec
push
lret
aad
hlt
push
fistpl
stc
adc
inc
cld
mov
mov
outsl
sub
fs
xchg
dec
shl
cmpsl
arpl
lods
mov
sub
sbb
data16
shr
aam
dec
inc
mov
push
fcoms
add
pop
mov
rorb
scas
icebp
outsl
decl
dec
xchg
int3
test
or
je
or
insl
add
fmuls
cmp
sbb
in
mov
scas
les
pop
cld
pop
mov
push
fcmovb
test
jb
shll
jle
pusha
pusha
fcomip
or
push
gs
mov
fistl
push
jg
xchg
dec
rcrl
or
movsl
mov
daa
fwait
pop
outsb
mov
mov
pop
pop
dec
or
pop
mov
arpl
push
jo
orl
imul
sub
pop
jg
ror
cld
pop
dec
push
aad
dec
add
xor
xchg
add
cmp
iret
popa
lock
mov
dec
hlt
pushf
sahf
popf
sbb
out
sub
xchg
fbld
out
mov
pusha
ljmp
pop
gs
jmp
add
insb
sarb
xchg
or
popa
mov
sub
sub
popf
fisubrs
imul
jbe
cmp
xor
inc
sub
mov
stos
dec
jno
repnz
pushf
inc
and
mov
cmp
adcl
lock
icebp
pop
rol
in
push
xchg
dec
xor
movsb
fwait
rclb
cltd
add
nop
sbb
test
mov
es
repz
shll
xchg
pop
loopne
adc
xor
inc
push
xor
jae
add
les
testl
add
mov
in
stos
and
mov
mov
repz
je
xchg
mov
test
das
aad
sub
xchg
clc
cmp
icebp
add
pop
mov
ret
mov
loope
add
inc
mov
cmp
xchg
cmc
xor
shl
and
daa
mov
xor
outsl
xchg
adc
jp
sbb
mov
jb
or
jle
xor
sub
pavgb
adc
add
icebp
add
jecxz
test
jns
lahf
mov
stc
or
sarb
mov
enter
sbb
sti
or
decl
and
pop
dec
enter
mov
mov
inc
or
je
add
push
cmp
in
xchg
pop
call
push
sub
icebp
xor
cmp
imul
imul
addr16
mov
in
mov
inc
lahf
lahf
lret
mov
jns
out
sbb
jmp
stos
xchg
inc
cmp
cmp
push
sti
cmc
cmp
or
add
outsl
test
adc
adc
gs
inc
fsts
imul
mov
cmpsb
out
pushf
add
push
xchg
out
pusha
cmp
xchg
cmp
dec
adc
sub
shr
call
dec
dec
ds
xor
mov
into
pop
inc
es
dec
jbe
and
mov
sub
in
addr16
loope
and
push
shrb
rorb
mov
adc
sar
ds
pop
inc
and
or
mov
js
xor
mov
jnp
test
shll
mov
scas
mov
in
int3
in
mov
sbb
icebp
ds
sbb
ja
cwtl
cs
push
ja
and
popa
stos
fidivs
xchg
loope
adc
mov
or
and
sub
push
or
xor
dec
dec
pop
out
jmp
cmp
lcall
add
out
xchg
mov
push
push
lret
or
cwtl
leave
in
adc
sarl
jmp
mov
stc
push
mov
int3
stos
mov
push
rcrb
adcl
les
xor
sbb
stc
loope
mov
mov
add
cs
pop
xorb
adc
jle
hlt
push
into
fcom
addb
imul
jae
jp
ja
divl
push
out
jg
outsl
aad
mov
ds
out
sub
roll
mov
cld
cmp
xchg
dec
loopne
les
mov
sti
hlt
cmp
jns
adc
popf
mov
icebp
xor
mov
add
mov
fs
pop
into
jo
aad
lock
sbb
sub
pop
divl
inc
and
xchg
stos
pop
cmp
inc
lea
sub
mov
cwtl
mov
xchg
ja
lcall
sbb
xorb
loop
pop
jecxz
test
in
add
push
aas
cli
cmp
jns
mov
jb
shlb
cwtl
rorb
xor
loop
ja
pop
data16
inc
call
mull
inc
cmpb
fst
cmc
mov
push
cmc
mov
fisttpll
jg
std
push
notb
flds
lock
cmp
out
pop
xlat
mov
sbb
cmp
loope
lret
addr16
movsb
imul
adc
in
pop
pushf
jne
jg
lahf
add
dec
sahf
jecxz
int3
jge
jno
pusha
lcall
lods
jge
pop
imul
das
movsl
cmpsl
mov
pop
je
das
aaa
dec
jae
call
stos
shrl
jmp
xor
arpl
mull
je
icebp
mov
and
js
pusha
lods
jo
mov
push
cmp
xchg
mov
lret
mov
mov
mov
dec
clc
test
idivb
and
jae
jge
add
stc
push
adc
rolb
ljmp
or
jno
int3
cmp
stos
hlt
mov
inc
jbe
push
pushf
test
stos
bound
jp
loop
data16
or
int
insb
cmp
repz
push
int
jne,pn
lds
push
aam
pop
push
adc
lods
inc
ret
jg
xchg
or
mov
cli
sbb
lea
call
rclb
inc
imul
stos
adc
add
pop
xor
jns
jae
dec
clc
arpl
lock
int3
sbb
inc
xchg
inc
sbb
adc
jns
fwait
sbb
mov
and
xchg
mov
mov
scas
pop
stc
loopne
js
push
push
inc
in
mov
inc
inc
cmp
xor
push
loope
inc
or
lcall
dec
decl
scas
jge
lret
std
xor
cli
adc
cmpsl
sbb
push
fisubrl
adc
push
jmp
pop
inc
test
lcall
inc
out
push
cmp
rorl
hlt
cmpb
lods
lock
je
and
loopne
mov
ret
ds
push
cmp
or
pushf
shll
scas
fxch
clc
mov
pop
push
jp
sub
ja
pop
scas
xor
adcb
loope
mov
leave
mov
pop
jo
dec
add
imul
xchg
xorb
imul
cmp
sub
sub
test
lds
xchg
mov
mov
stos
mov
das
test
fnstcw
daa
xchg
pop
cwtl
repz
adc
and
pop
pop
jns
test
cmp
out
fistpll
inc
jmp
lods
mov
mov
sbb
sbb
pop
out
xchg
add
sbb
jmp
dec
sbbl
int3
jnp
adc
dec
pop
xor
std
fs
fdivs
addr16
mov
and
aam
cmp
sahf
scas
mov
mov
cmp
out
ret
inc
test
jp
jge
mov
or
dec
in
and
popf
ret
iret
into
cmp
rcll
inc
imul
arpl
ja
or
in
scas
xor
push
sbb
mov
mov
jbe
jecxz
pop
fadd
test
add
lcall
mov
mov
dec
out
iret
popl
dec
sbb
orb
jbe
adc
jecxz
jl
dec
cmp
or
in
push
jns
xchg
stos
stos
popa
loop
jecxz
push
xor
inc
dec
mov
and
gs
scas
mov
sti
lods
jp
adc
or
cmp
shll
icebp
inc
cwtl
pop
jge
out
fisubl
mov
inc
push
add
sbb
add
int3
cmp
xchg
add
inc
cld
cld
popf
bound
ret
fwait
push
jg
out
fcom
cmp
push
mov
pop
test
in
pusha
lods
mov
repnz
xor
jns
fdivrl
mov
xor
repnz
mov
inc
cmp
or
xlat
push
scas
cmp
aas
nop
popf
test
loop
inc
pop
ds
fisubs
sbb
cmpb
adc
dec
int3
pop
jl
les
xchg
in
push
mov
pusha
cmp
fwait
loope
and
jge
jne
cli
test
pushf
pop
shlb
jmp
mov
mov
jo
adc
or
in
gs
fstp
out
arpl
xchg
repnz
cmpsl
xchg
push
inc
iret
pushf
ret
mov
pop
addb
jl
sub
leave
xchg
pop
popf
rorb
test
adc
push
aas
push
sbb
iret
pop
jmp
aas
mov
xchg
out
adc
lcall
push
std
cmp
out
leave
adc
movsb
mov
jg
int
out
test
mov
sub
ret
mov
in
xor
inc
jno,pn
sub
adc
dec
bound
lds
cmp
jecxz
push
std
gs
or
push
mov
mov
lods
push
jno
jae
mov
sbb
call
xor
xor
push
fisubs
sbb
cmp
jle
cmp
icebp
into
cmp
incl
mul
push
fnsave
inc
add
scas
stos
popf
aaa
cmp
loopne
jp
es
fwait
push
or
push
aad
push
pop
mov
fcoms
cld
dec
adc
enter
stos
or
push
mov
sbb
rolb
mov
icebp
dec
or
fwait
xchg
gs
xchg
shlb
scas
jns
pop
cmp
xchg
push
and
inc
gs
sub
sub
movsl
jl
sbb
dec
dec
cmpl
mov
xor
xchg
xor
or
iret
push
les
sub
xchg
push
stos
arpl
dec
mov
movsb
mov
jge
sub
cli
ret
shl
lods
loopne
in
imul
arpl
arpl
sub
push
mov
pop
pop
cli
fisubl
push
xchg
mov
xchg
mov
out
xlat
mov
data16
inc
iret
inc
mov
xchg
scas
imul
stc
sub
mov
fst
lret
addb
sbb
cwtl
out
inc
dec
lahf
ror
xor
stc
xchg
loopne
clc
inc
jae
xchg
test
fnstcw
movl
xorl
pop
sub
fildl
xor
daa
cmpl
cmp
mov
into
push
mov
adc
add
jge
pop
mov
sahf
aaa
rclb
adc
rolb
or
pop
mov
push
adc
scas
sbb
stos
lea
cmp
dec
mov
in
sti
sbb
jo
in
sub
mov
sbb
sub
push
rorb
shll
stc
sub
test
and
inc
cs
jno
imul
sbb
jmp
adc
mov
sbb
pop
xchg
inc
je
mov
lahf
js
aam
mov
pop
insb
and
jo
pop
pop
jge
test
mov
sbb
aaa
xor
mov
pop
cld
sub
dec
xor
bound
or
int3
mov
dec
bound
or
xorb
adc
xor
aam
or
in
inc
scas
jmp
push
sahf
jp
dec
inc
xchg
testb
sar
dec
cmpb
ds
fdivrp
pushf
decl
in
adc
mov
pop
pop
add
orl
or
mov
aam
push
bound
rorb
mov
jbe
popf
mov
or
mov
gs
pop
and
notl
push
int
dec
or
xor
jl
cmpsb
sbb
iret
add
je
mov
scas
mov
lahf
pop
lods
cmp
jae
scas
in
mov
imul
cmpsb
mov
orb
mov
push
add
xorb
or
dec
inc
rol
lods
sbb
xchg
dec
mov
sti
cmp
in
lods
gs
les
jne
lock
clc
stos
mov
sahf
aaa
jp
mov
jmp
rolb
fiaddl
lcall
iret
mov
js
adc
int3
sbb
cmpsb
pop
or
jmp
adc
pop
test
mov
loopne
xchg
call
repnz
inc
std
std
push
dec
adc
pushf
insl
inc
adc
movsb
test
mov
aam
cmc
sbb
dec
cwtl
lock
icebp
inc
fisubrs
pop
push
jo
call
sti
ret
mov
add
fcmovu
pop
adc
orl
out
add
pop
iret
cmp
push
fbld
jmp
sbb
lds
rcrl
rolb
sbb
fnstsw
mov
dec
leave
fnstcw
mov
push
fstl
push
out
dec
xlat
xchg
jnp
mov
test
adc
cmp
adc
fcomps
in
jno
sbb
xchg
adc
lock
sbb
dec
test
movsl
mov
dec
inc
ror
fdivrs
xchg
xchg
mov
pop
pop
dec
mov
pop
adc
adc
loopne
aas
lret
cli
subb
inc
push
fs
cmp
mov
pop
pop
into
subb
adc
shll
aas
jp
inc
jecxz
pop
int3
inc
pop
fmull
dec
mov
mov
fstpl
lret
dec
dec
ds
xchg
mov
push
adc
sbb
arpl
fidivs
out
sub
div
inc
push
mov
lds
add
mov
add
mov
sub
push
cld
lods
or
add
ss
fidivrs
and
pop
inc
fidivs
cld
popf
mov
test
mov
xchg
push
mov
xchg
mov
dec
les
rol
mov
lds
inc
push
add
rol
dec
dec
push
fadds
lods
xor
sub
cmp
fnstenv
sti
pop
cmp
les
pushf
ds
cmp
in
adc
ss
jo
int
jno
or
push
or
xchg
bound
mov
bound
shr
shrb
ud1
daa
popf
fs
pop
xlat
aam
fnsave
adc
mov
lret
imul
in
es
mov
add
das
pop
sbb
jae
sub
push
inc
movsb
and
iret
in
push
sub
and
enter
mov
sbb
sti
scas
in
outsb
xchg
push
fdiv
icebp
push
cmp
cs
int
mov
cmpsb
cs
fstl
xchg
xor
les
aaa
icebp
cmp
int
imul
mov
add
sbb
std
daa
jle
and
lods
pop
iret
aam
lret
sub
cmc
xchg
add
pop
hlt
pop
and
sub
fists
imul
js
push
mov
popf
mov
mov
push
aad
rep
dec
popa
mov
popf
test
lcall
push
stc
incb
xor
sahf
stc
xchg
mov
mov
and
mov
cmp
pop
lahf
cltd
cmp
pop
imull
aaa
rcrl
and
inc
push
sbb
mov
in
adc
jo
dec
mov
dec
and
lock
aaa
add
xchg
into
and
inc
mov
iret
aaa
mov
cltd
shl
sbb
xor
and
shll
mov
mov
lret
ror
jae
add
xlat
xchg
xor
xor
bound
in
jp,pt
stos
xchg
and
test
inc
cmc
fwait
sub
xchg
inc
pop
and
frstor
in
cmp
sbb
pop
push
or
and
leave
fidivs
mov
cmp
dec
add
in
jp
cmp
and
imul
xor
xchg
xchg
inc
popa
push
jmp
jg
ja
cli
add
sti
clc
fiadds
insb
or
push
or
pop
rolb
test
fs
ror
inc
cltd
jl
or
jns
out
orb
mov
add
das
enter
mov
pop
shrl
ja
roll
out
sbb
sub
out
or
push
xor
int
xor
fcmovne
mov
xor
and
leave
pop
and
mov
imul
sbb
cmpb
or
lcall
addl
mov
mov
repnz
xchg
aad
push
sbb
fwait
push
stos
pop
add
test
sbb
lret
xchg
aam
or
cmc
xor
lahf
jl,pt
cmp
gs
shrb
cld
loope
sahf
sub
add
mov
cmpsb
mov
movsl
sbb
xchg
cmpsb
add
add
cli
sbb
stc
cmp
stos
dec
ret
xor
push
sbb
or
dec
jle
ret
hlt
out
in
ret
mov
mov
add
mov
jmp
lahf
pop
lock
sub
and
lock
push
pop
pop
push
push
mov
cmp
dec
in
or
rcll
aad
pop
or
mov
add
mov
mov
mov
pop
sub
movsb
ret
mov
push
int3
sbb
adc
and
imul
jnp
fs
push
add
ja
imul
xchg
mov
outsb
mov
pop
or
dec
push
mov
negb
pop
dec
stc
or
mov
addb
xchg
inc
clc
movsb
cmp
shll
cld
js
int
repnz
or
and
adc
icebp
inc
xchg
andb
cltd
pop
pop
dec
repz
sub
into
into
fisttpl
movsb
rolb
mov
sub
gs
in
mov
dec
rcrl
xor
jmp
mov
dec
aaa
je
sbb
cmp
or
insb
movsb
imul
and
and
negl
cltd
loope
mov
push
xlat
sarb
imul
rcr
imul
mov
repnz
mov
adc
and
lds
int
stos
jo
outsl
adc
out
cs
lret
in
pop
sub
leave
inc
xor
xchg
test
rcl
fimull
loopne
pushf
adc
inc
adc
mov
out
adc
pusha
inc
or
or
cmp
inc
or
inc
pusha
jo
cs
lea
jns
dec
adc
fcmovnb
cmp
mov
clc
out
or
sub
dec
faddp
aas
mov
cmp
call
and
dec
mov
dec
push
lods
out
dec
jns
fdivrs
cmpsl
jns
cmc
imul
adc
jmp
inc
cli
or
jl
mov
cld
adc
adc
push
ficoms
fs
xchg
mov
xlat
cmc
insl
sahf
xchg
and
inc
inc
and
jecxz
mov
shlb
mov
jns
jp
inc
adc
push
in
cwtl
or
mov
jge
enter
paddsb
sbb
es
and
loopne
add
xlat
adc
mov
cmp
cmc
outsl
shll
xlat
call
stc
cmp
rorb
movsb
fsubl
adc
dec
sbb
enter
in
sbb
xlat
fldenv
or
hlt
sbb
nop
adc
mov
mov
jg
subb
cs
stos
insb
lcall
add
push
push
pop
jge
sbbb
lret
popa
cmp
jmp
hlt
out
ljmp
in
mov
sahf
xor
lahf
cmpsl
imul
mov
and
call
lods
dec
push
loopne
or
jle
jae
mov
das
outsb
mov
into
add
subb
push
cmp
xor
inc
sub
lds
adc
dec
inc
out
jmp
aam
hlt
test
andl
popa
in
aam
push
roll
daa
sbb
pop
sbb
push
jecxz
nop
dec
cmp
or
push
pop
jns
and
push
rcrb
mov
push
cmpb
cmp
mov
xchg
arpl
mov
test
inc
or
lock
push
insl
imul
lock
test
mov
jbe
dec
inc
add
cmp
incb
inc
sar
scas
sub
stos
rclb
scas
add
pusha
sbb
cwtl
fiaddl
jb
popf
insl
add
xchg
shlb
test
pop
arpl
out
push
cmp
pop
sahf
mov
adc
repz
fadd
adc
into
test
lret
popf
push
push
js
mov
in
jecxz
aaa
and
andb
jb
aad
enter
loopne
test
mov
sub
fiadds
jp
test
or
dec
sbb
cmp
and
mov
int3
mov
mov
mov
jge
mov
inc
inc
pop
out
lret
mov
or
add
arpl
fbstp
push
push
ficoms
push
lss
out
inc
in
sarl
jb
jne
pop
cmp
jno
outsl
lahf
xor
ret
jne
mov
add
pop
sbb
push
push
jg
dec
push
xor
ret
inc
add
lea
cwtl
lods
faddl
xor
xchg
cmp
jbe
mov
cli
mov
ds
xchg
pusha
mov
inc
and
mov
mov
cmp
lods
inc
lods
jmp
les
dec
lea
mov
call
sub
jp
add
pop
add
push
leave
pushf
mov
lret
inc
fwait
aaa
adc
or
cmp
adc
loop
aas
add
inc
shr
loope
shld
dec
and
fsubr
cwtl
mov
jae
leave
cmp
xchg
mov
fcoms
mov
sbb
lcall
les
jns
and
sub
xor
rol
dec
frstor
xchg
scas
sbb
fidivrl
mov
test
inc
rolb
lds
daa
in
arpl
mov
cmc
mov
or
pop
fildl
xchg
cmp
pop
enter
popf
retw
pop
inc
mov
adc
push
mov
repz
lea
xchg
sub
icebp
jnp
stos
into
and
push
clc
push
movsb
inc
insl
lock
push
add
mov
lea
jae
mov
insl
clc
std
mov
mov
adc
jno
jbe
jbe
push
xchg
es
aam
mov
mov
xchg
lret
adc
mov
xor
adc
or
scas
hlt
cmp
fstl
xchg
adc
rorl
and
jmp
arpl
pop
stos
out
lds
mov
mov
xchg
jae
in
and
popa
cmp
insb
jge
jo
push
jecxz
push
iret
aad
outsl
arpl
xor
aad
popf
and
fwait
jmp
sub
fistps
mov
and
jmp
int3
and
or
popf
xchg
xor
out
jb
repnz
in
and
insb
repnz
gs
cmp
mov
in
add
xchg
push
mov
xchg
mov
cmp
data16
fdivl
cmp
xor
adc
lods
mov
xor
fiadds
movsb
xchg
stc
sbb
ss
sub
int
xchg
enter
xchg
scas
popa
pop
xchg
imul
pushf
dec
es
cmp
pusha
cmp
aas
cli
aas
pop
pop
nop
pop
cmp
sahf
ret
inc
into
xchg
or
aam
addl
cmpsl
test
xchg
mov
xor
xchg
inc
fdivl
cld
mov
dec
fwait
sar
and
add
pop
adc
in
enter
push
outsl
push
sbbl
inc
cmp
ss
adc
mov
inc
mov
lret
int3
in
rol
or
dec
or
scas
out
pop
xchg
stc
stc
pop
jl
sti
hlt
sahf
jle
and
fisubrl
movsl
sbb
ret
out
pop
std
cli
adc
xor
adc
ror
and
sahf
xchg
sub
add
jb
cld
hlt
cmpsb
loopne
insb
xor
xor
fcoml
sti
mul
je
adc
fsubrl
inc
iret
add
jge
mov
xlat
fisttpl
xor
mov
in
aad
sub
rorl
adc
cmp
pop
das
mov
imul
call
adc
in
adc
popf
lods
xchg
cmp
pop
cmp
mov
loope
pop
out
xchg
mov
rcrb
inc
or
push
ds
mov
leave
shlb
hlt
jg
xchg
dec
fdivp
push
xor
test
dec
xchg
or
cmp
push
dec
pop
or
notb
into
pop
pop
add
mov
adc
mov
insb
xchg
sub
mov
dec
cmpsb
adc
or
into
sarb
or
test
mov
add
nop
jae
aam
pop
xlat
ja
adc
call
xor
mov
mov
or
inc
lahf
shrb
cmpsl
cs
mov
shrb
cld
cmp
add
nop
adc
or
pop
pop
fcomps
sub
ds
js
movsb
cmc
ret
or
pushf
movsb
inc
xor
mov
mov
mov
lods
pop
hlt
ror
imul
mov
arpl
out
xor
jge
sub
mov
add
dec
jp
pop
fsubrl
xor
leave
sub
and
mov
outsl
xor
adc
and
incb
fisubl
fisubrs
inc
decl
andl
shll
mov
pop
ret
cmp
loop
in
adc
mov
sbb
xchg
lock
jbe
mov
fiaddl
mov
push
pop
imul
ljmp
xchg
movsb
ja
subl
push
xchg
jg,pn
sti
stos
add
mov
imul
xor
push
mov
cmp
in
scas
incl
fisubrs
and
fmull
xchg
inc
out
mov
and
ds
xor
int3
cmpsb
fstl
ret
mov
jg
sub
pop
cs
aas
sub
into
inc
xchg
push
jle
jae
cld
ds
mov
mov
inc
sahf
gs
mov
insb
push
aaa
enter
repnz
data16
cmp
ss
test
lahf
inc
jo
push
ss
cwtl
idivl
sub
xor
in
pop
jmp
pop
subb
lock
bound
stos
lods
shrb
loope
sbb
adc
pop
mov
gs
mov
add
icebp
jmp
rcll
lds
insb
call
stos
jo
decb
rol
and
gs
xchg
fldcw
stos
dec
es
jno
push
dec
sbb
lcall
inc
ret
push
andl
inc
jnp
pop
lcall
sbb
movsb
mov
mov
add
lods
cmpsl
jmp
mov
add
aaa
and
dec
aad
pop
imul
in
ss
dec
sub
rcrb
or
fucomip
sbb
fwait
mov
jp
cld
adc
es
push
enter
pop
lret
fucom
sti
mov
incl
adc
jg
cld
add
call
jl
cwtl
jne
out
ljmp
imul
cwtl
insb
scas
push
and
jae
orl
inc
inc
and
call
hlt
bound
add
xlat
jbe
xor
pusha
pushf
cwtl
pushf
inc
fdivr
mov
ljmp
popf
mov
jno
movsb
test
sti
mov
aam
inc
mov
into
pop
mov
test
push
jmp
push
or
pop
pop
cltd
push
and
or
arpl
jmp
lret
add
sub
sahf
stc
fs
mov
out
jp
xor
ds
sub
xchg
imull
cmp
mov
lds
xchg
dec
je
lods
movsl
xchg
xor
mov
adc
cmpsl
ret
push
adc
dec
into
mov
lods
lcall
mov
roll
xchg
outsl
mov
jg
xchg
push
and
xchg
loope
add
xor
inc
xor
cmpsb
call
mov
sbb
jl
cmp
push
into
ja
aas
adc
push
add
insl
into
jnp
dec
scas
int
movsl
mov
fwait
pop
lea
pop
sub
out
icebp
sbb
cmp
jne
negl
lcall
scas
sbb
lret
pop
subb
fs
mov
push
scas
pop
pop
cld
mov
xor
out
mov
and
lret
xor
scas
cmp
hlt
push
dec
xor
or
mov
push
and
int3
stos
stos
cmc
lods
jg
jb
aam
inc
stos
cmp
cwtl
mov
mov
fdivl
clc
out
lea
adcb
adc
cli
lods
inc
stos
or
loope
xor
pushf
scas
lret
cmp
sub
mov
mov
cmp
jo
int
cmp
stos
jle
sti
movsl
sbb
jno
fbstp
pop
bound
mov
add
sub
out
cld
sbb
mov
roll
xor
add
pushf
repz
xchg
sub
mov
fisttps
add
neg
mov
arpl
repnz
loop
cmp
outsl
mov
push
sbb
imull
jmp
inc
sbb
outsb
sub
push
jle
scas
popf
test
sbb
xor
cmp
and
lret
push
arpl
lahf
ljmp
fmul
sub
jge
aas
cmpl
jp
test
inc
mov
mov
sti
popf
add
mov
nop
sbb
adc
mov
mov
jg
mov
add
mov
mov
adc
pcmpgtd
push
pop
mov
inc
test
sub
cld
push
shlb
shlb
pop
xor
scas
mov
dec
jge
fldcw
std
sbb
jns
mov
dec
arpl
fstpt
cmp
xchg
test
imul
adcb
xlat
add
jmp
inc
adc
pop
insl
je
sub
push
xchg
cwtl
iret
xor
sbb
jp
mov
jb
xor
cltd
arpl
add
jl
sbb
subb
pop
loop
test
jmp
loop
sub
imul
arpl
outsb
sub
les
jmp
jns
cld
pop
adc
inc
stos
repz
xchg
xor
icebp
adc
js
sub
adc
movsl
stc
lcall
push
aam
or
xchg
and
insl
mov
jecxz
mov
sub
shrb
icebp
mov
ljmp
pop
daa
in
sub
arpl
aam
jmp
lods
orb
push
mov
popl
mov
scas
inc
js
das
or
dec
icebp
aaa
into
repz
pop
mov
dec
ficompl
lock
mov
stc
push
movsb
inc
xchg
adc
dec
dec
cmp
hlt
movsb
jo
and
and
push
aad
mov
cmp
hlt
das
jp
ljmp
adc
es
push
cltd
sub
pushf
fwait
sub
popa
dec
outsl
js
mov
insl
jnp
jmp
cmpsl
out
xlat
jmp
xchg
cmp
psubd
jae
xlat
lds
adc
adc
punpckhdq
ds
loop
test
cmp
mov
mov
sbb
repz
sub
loopne
dec
shlb
push
fdivl
js
xchg
mov
ret
add
push
cmp
testb
pop
repnz
dec
fwait
pop
lcall
clc
aaa
sbb
loope
mov
xor
pop
lods
out
daa
movsb
lcall
mov
push
pop
cmpsb
pop
outsb
sbb
outsb
mov
xchg
sub
popa
mov
push
sbb
push
mov
inc
push
cmp
movsb
push
inc
mov
ficoml
lret
dec
test
jge
ret
jne
mov
or
lcall
push
jno
ret
shr
out
cmp
mov
pushf
adc
scas
ss
dec
icebp
sbb
sub
cs
fdivs
pusha
rcrl
jg
jb
mov
pushl
dec
in
addr16
fsub
xchg
outsl
jno
sti
push
in
mov
push
xor
scas
add
cli
push
adc
sbb
mov
out
dec
inc
jg
mov
lret
jmp
mov
dec
inc
pop
iret
mov
sbb
ljmp
pop
xchg
movsl
xchg
pop
out
xchg
pop
mov
data16
pop
mov
mov
dec
jmp
lret
push
lcall
scas
pop
bswap
mov
xchg
jle
in
push
mov
sbb
outsb
loop
and
dec
push
push
fcmovnbe
gs
mov
jecxz
bound
addr16
jb
push
outsb
adc
shll
or
lret
sarb
je
jp
icebp
bound
imul
dec
outsb
scas
dec
test
pop
test
stc
leave
call
jae
out
mov
addr16
and
mov
lahf
cmp
es
xchg
and
pop
dec
jnp
call
hlt
push
sbb
and
shlb
inc
inc
ljmp
and
dec
pop
lcall
xor
fimull
insb
and
adc
addl
sub
pushf
pushf
popa
rcrl
xor
push
movsl
push
mov
mov
mov
fnstenv
and
push
aas
sub
pop
mov
jae
and
push
imul
or
mov
push
bound
sub
data16
add
cmovl
adc
pushf
cld
gs
int3
fadds
imull
pop
cmp
push
sbb
es
lea
nop
js
scas
jns
mov
pextrw
and
call
in
sti
xor
shrb
mov
and
cmp
dec
mov
or
mulb
sbb
inc
ret
int
insl
aas
ss
xchg
or
cmc
xchg
fdivr
fstpt
xchg
cmp
adc
xor
mov
jnp
fisubl
imul
inc
pop
mov
fidivl
push
cmp
xor
or
push
dec
loopne
xor
cmpsb
arpl
pop
mov
lock
xorl
movsl
adc
xchg
lock
dec
pop
pusha
inc
adc
mov
cltd
mov
pop
mov
int
or
ret
ja
enter
lds
outsl
ds
add
adc
adcl
pop
mov
mov
lret
in
loop
lahf
sahf
or
jmp
fists
test
xor
mov
mov
lret
lret
out
stc
arpl
lods
mov
shlb
and
and
push
xor
bound
mov
xlat
jb
pusha
arpl
ret
loope
jg
int
int3
es
xor
fs
xchg
xchg
std
sbb
jno
adc
xchg
icebp
dec
mov
in
dec
xchg
popa
enter
lret
jge
shr
jne
fcompl
fs
clc
push
fstps
icebp
dec
sub
ljmp
jmp
stos
cli
sub
mov
icebp
mov
pop
pop
ja
roll
push
inc
fcompl
sbb
das
xchg
jne
loopne
int
xor
or
dec
or
mov
jge
xor
cli
test
sub
sub
push
lret
fldcw
mov
scas
xchg
rol
out
out
fldcw
xor
xchg
fstp
pushf
adc
mov
cli
mov
pusha
jb
js
test
ja
mov
je
loope
mov
repnz
loop
or
mov
cmp
imul
ret
stc
pop
cmpsb
fs
cld
lods
cmpsl
ja
mov
ljmp
push
shlb
mov
movsb
test
out
xchg
and
mov
into
in
inc
outsb
mov
adc
adc
dec
lds
adc
ficompl
ja
inc
jg
ljmp
dec
adc
push
scas
outsb
pop
mov
test
sub
lahf
clc
ds
imul
sbbl
sahf
in
push
hlt
dec
stos
orl
jnp
scas
loope
rcll
stos
in
add
clc
mov
and
mulb
mov
imul
jb
fnsave
cmp
ljmp
xor
and
pop
cmp
stc
sub
adc
ret
sahf
sbb
rcrb
lret
adc
or
mov
xor
mov
push
or
pop
notb
aaa
es
movsb
push
pop
testb
or
mov
cmp
or
test
cmc
in
mov
sub
mov
lods
test
pop
into
sub
and
lock
jns
add
cmpb
sbb
sbb
cli
dec
pop
rcl
push
jp
pop
mov
push
je
scas
bsf
ds
and
lds
repz
mov
shl
xor
mov
daa
push
pop
enter
or
push
dec
jmp
mov
mov
jb
lahf
push
pop
sbbb
loop
push
mov
add
xchg
mov
aaa
cs
cmp
add
push
fsubrs
pop
xor
incl
lret
mov
push
shlb
mov
pop
cwtl
iret
sbb
lock
sahf
call
xchg
push
push
push
mov
fiaddl
or
jns
xchg
dec
jo
xchg
ret
mov
mov
add
and
xchg
imul
testb
aam
cmp
stos
sub
cmp
mov
or
adc
cmpsb
pusha
or
push
lahf
sub
jg
sbb
mov
bound
mov
adc
sbb
push
repz
popa
orl
jns,pt
push
mov
mov
leave
push
xchg
int3
mov
xchg
mov
shrl
leave
dec
dec
mov
mov
cli
and
insl
push
fsubs
fldlg2
xchg
lcall
gs
lret
ret
adc
xchg
mov
fstpt
mov
xchg
sub
in
jnp
cmp
push
dec
sbb
mov
lods
dec
lds
jl
xor
fsts
dec
xor
xor
mov
outsb
push
xor
pusha
pop
add
pop
inc
pop
sahf
xchg
push
negb
mov
aaa
rcll
in
out
lock
gs
pop
stc
add
ret
fidivs
inc
cmc
jge
rolb
cmp
jmp
mov
cmpsl
xor
rorb
movl
sti
xchg
mov
xor
sti
mov
mov
xchg
sub
stos
xor
push
dec
lods
sti
inc
sbb
mov
adc
mov
jl
fbstp
jmp
outsb
cld
out
jnp
add
lds
mov
filds
in
lock
outsb
negb
xchg
fwait
add
or
fstp
xlat
rcrl
dec
popa
sbb
psubusb
in
imul
in
mov
ret
mov
cmp
sbb
dec
in
rorb
jnp
and
fisttpll
aas
out
dec
mov
xchg
push
inc
adc
mov
shll
test
inc
jno
fnstcw
pop
movsb
pop
mov
push
sbb
daa
jns
aam
int3
lahf
adc
dec
mov
sub
cmp
add
jp
push
mov
xor
adc
popf
cli
cld
jle
xchg
inc
orl
dec
add
and
mov
jmp
daa
nop
inc
es
mov
inc
cmpsb
into
xor
popa
jl
cli
sbb
xchg
lods
mov
rcrb
imul
pop
mov
lds
mov
push
hlt
mov
adc
pop
rcrl
xchg
inc
push
mov
mov
jp
jecxz
popf
jo
orps
xor
outsl
xchg
jmp
dec
xchg
xor
cltd
insb
decl
push
push
jno
or
rolb
mov
pop
sub
cmc
add
pop
cwtl
inc
inc
jb
adc
movsb
dec
shlb
lods
ficomps
scas
cwtl
pop
insb
push
pop
ret
mov
int3
into
daa
cmpsb
or
cmpsl
sti
pop
add
xor
dec
imul
fidivrl
adc
pop
lahf
sti
xchg
add
fildll
sub
add
mov
adc
mov
into
mov
mov
add
popa
mov
sub
add
sub
test
mov
fadd
jmp
mov
adc
and
push
repz
mov
inc
mov
dec
adc
out
mov
ficomps
aas
popa
mov
sub
or
test
or
dec
repnz
mov
mov
cmp
jae
or
int3
aas
mov
out
xor
test
dec
dec
adc
out
xorb
add
cld
fs
in
cmp
lahf
nop
or
jne
and
jg
xor
push
outsb
shll
scas
push
imulb
dec
push
push
test
in
daa
dec
sbb
pop
test
push
lea
sbb
xor
push
loop
jb
ficoml
adc
int
aam
or
imul
xor
stos
ret
call
jo
mov
sbb
cli
cmp
popf
cmp
add
mov
test
in
lds
mov
cmp
dec
iret
adc
nop
pop
dec
cmc
pop
fsubr
imulb
push
sahf
decb
fdivs
bound
addr16
pop
and
iret
imul
xchg
pop
adc
jo
fidivl
push
inc
cmp
jge
push
xor
sub
sub
sbb
adc
sbb
or
ljmp
jl
ficompl
ss
inc
sbb
roll
jae
ds
fldl
sbbb
sarb
lea
inc
popf
jmp
push
xchg
subl
loope
test
add
inc
dec
cmc
and
jle
jnp
lcall
push
push
xchg
add
mov
sub
loop
add
push
stos
es
mov
jbe
pop
xchg
fwait
push
outsb
int
lods
test
loopne
data16
out
add
jnp
sarb
cld
push
inc
mov
or
mov
aaa
test
imul
scas
sbb
addb
jmp
xor
fistpl
sub
or
sub
divb
add
add
es
sbb
call
xchg
cmp
mov
dec
es
pop
movb
fstpl
dec
sbbb
add
push
lds
lds
das
inc
push
inc
xchg
sub
shll
test
mov
in
in
stos
push
push
mov
sbb
push
js
mov
xchg
out
xor
push
insb
inc
and
mov
add
pop
imul
popl
mov
mov
lock
sbb
in
or
jae
popa
push
ljmp
xchg
test
xchg
out
mov
cs
out
ja
xchg
xor
mov
jp
cmpsb
jns
mov
shlb
jmp
aad
repz
and
lea
call
movsb
or
jge
xchg
pop
fmulp
int
movb
jne
xchg
jmp
test
addr16
mov
cmp
aad
and
pop
xchg
and
xchg
fdivrl
push
jmp
or
cld
jno
repnz
aaa
cmpsl
rcll
stos
mov
cmp
jb
jnp
jne
push
xor
xor
lods
push
sbb
jo
imul
adc
aad
push
and
jp
ret
sbb
insl
bound
ficoml
imulb
or
rorl
sbb
int3
jo
dec
adc
adc
fsubp
dec
test
daa
cmp
add
sarl
cmc
arpl
sbb
dec
jns
imul
sub
out
stos
enter
ret
or
lods
inc
dec
pop
cmp
mov
add
dec
bound
ljmp
mov
mov
cmpsb
pop
ja
scas
adc
in
push
inc
or
xchg
aam
cmp
sub
add
adc
loopne
loopne
xchg
cmp
insb
hlt
mov
push
xor
inc
popa
mov
pop
addb
mov
dec
and
add
jo
mov
xor
sti
pushw
adc
dec
cmp
dec
dec
xchg
movsl
and
pop
leave
cmp
mov
mov
test
xchg
sub
enter
faddl
sub
mov
sub
jae
lock
pop
add
pop
mov
or
stos
in
out
or
jecxz
rclb
mov
push
mov
sti
push
ret
dec
dec
test
mov
cmc
shll
sbb
pop
mov
fsubrl
aad
jo
cmc
bound
popa
popa
mov
adc
loop
in
pop
decl
sbb
push
cmp
gs
inc
add
scas
and
pop
or
cmpb
hlt
and
shlb
sbb
test
jp
push
call
push
sbb
mov
gs
sub
rsqrtps
jb
sub
jle
pop
jmp
or
scas
test
adc
jg
dec
call
ljmp
adc
out
int3
pop
and
push
sti
add
xor
lcall
stos
adcl
xchg
out
das
mov
enter
or
dec
jo
ficoms
jb
jp
hlt
fs
push
cwtl
in
movsb
mov
ss
pop
cwtl
add
insb
out
mov
es
push
push
aam
stos
sub
rol
mov
inc
and
cmp
cmp
in
popa
xor
mov
mov
cmpsl
xchg
in
shrb
push
stc
pushl
xor
addr16
notb
xchg
movsl
sbb
test
jnp
push
xor
cmp
sbb
cmpsb
movsl
rolb
jge
rclb
pop
out
add
pop
in
pop
lock
out
xchg
and
pop
popf
sbb
push
pushf
sub
mov
sbb
cli
add
js
jge
add
iret
fbstp
or
mov
aas
xor
sub
pop
dec
push
push
lret
nop
pop
sbb
into
mov
fdivr
int3
inc
loopne
jmp
shl
dec
nop
out
xchg
insl
ljmp
shr
aas
loop
dec
mov
mov
in
lret
clc
lcall
push
and
inc
inc
push
nop
mov
lea
lds
dec
jns
je
xor
arpl
mov
out
mull
pop
mov
outsl
repnz
sbb
fidivrl
mov
pusha
insb
sub
adc
outsb
lret
dec
lcall
das
divl
and
stos
mov
inc
ja
pop
and
mov
pop
mov
fidivs
outsl
mov
scas
ret
shr
ss
sub
lods
loope
in
ret
mov
rorb
addl
cwtl
or
test
test
test
mov
andb
aas
daa
inc
lds
cmp
je
sub
inc
and
into
cmpsl
in
mov
push
cmp
clc
sbb
xor
jl
sub
ss
push
inc
movntq
xor
add
xor
push
loop
mov
test
and
inc
imul
aas
sub
adc
sbb
add
shrb
jae
inc
repz
addr16
jmp
pop
and
ficoml
pop
in
out
test
addr16
push
xor
movsl
cld
xor
iret
and
inc
inc
push
pop
and
orl
nop
add
fs
out
mov
cld
mov
mov
lcall
dec
mov
xchg
repz
xchg
xlat
dec
lds
mov
scas
xlat
bnd
mov
daa
adcl
bound
stc
lret
xlat
xor
push
sub
cmc
lret
fcomi
lahf
scas
cmp
push
xor
loope
call
lods
push
add
adc
loopne
subl
aas
test
inc
movsl
cld
rcr
lock
mov
jbe
push
cmp
shr
jg
jns
mov
and
lds
sbb
rcl
int
mov
inc
inc
lret
xchg
pop
scas
imul
push
pop
add
out
fwait
lahf
test
push
cs
cmp
test
xor
xor
enter
mov
call
sbb
xchg
icebp
or
dec
sbb
aam
push
add
je
inc
test
clc
das
out
loope
pop
cmp
mov
pushf
enter
bound
cmp
fstps
shll
push
imul
repz
into
or
or
jo
cltd
inc
fsubrp
imul
mov
les
push
and
js
jg
fistpll
fbstp
in
mov
mov
mov
fbstp
aas
lea
cmpsb
lods
ficompl
addl
sub
rorl
fwait
sbb
in
lcall
push
dec
jle
jg
outsl
sahf
mov
pop
roll
mov
or
es
hlt
loope
out
sbb
popa
bound
pop
push
std
lret
add
mov
mov
arpl
cltd
in
adc
stc
rcrl
xor
in
or
xor
clc
lods
fs
mov
cmc
sbb
dec
xchg
mov
inc
jg
in
push
push
enter
dec
mov
sarb
cmpsl
mov
pop
mul
loope
hlt
add
dec
xchg
push
and
jae
cmp
cmp
mov
adc
rolb
push
dec
fdivrp
mov
sahf
aas
dec
inc
push
repz
mov
aad
fldcw
cltd
das
add
lret
xlat
ss
add
sti
mov
loopne
fsubl
sbb
aad
and
js
mov
sbb
mov
add
popl
cs
stc
jne
mov
test
mov
data16
xchg
testl
pop
dec
push
mov
adc
clc
mov
mov
and
and
aam
rorb
fmull
xchg
outsl
ja
add
dec
ja
stos
test
mov
xlat
sbb
leave
orl
and
jl
sub
add
popf
adc
rorb
mov
mov
shrb
push
ffree
xor
es
inc
cmp
pop
sub
scas
and
adc
mov
xor
xor
mov
loop
loopne
rclb
adc
out
mov
cmp
call
mov
ljmp
gs
std
cltd
jmp
stos
fisubrs
adc
les
mov
mul
pop
mov
repnz
push
adc
leave
add
jp
jmp
outsb
movl
mov
ss
inc
mov
xchg
std
jo
mov
leave
pop
mov
scas
dec
test
cli
nop
and
les
mov
gs
push
or
in
pop
dec
lods
loopne
mov
cs
dec
aad
dec
mov
pop
repnz
mov
ljmp
fs
xchg
stc
add
dec
mov
js
mov
and
test
mov
jl
stc
add
iret
sub
push
pop
scas
and
xchg
mov
dec
mov
pushf
int3
leave
inc
scas
xor
lea
sub
hlt
popf
add
repz
inc
lcall
nop
mov
cmp
sbbb
fs
aad
cmp
inc
adc
jmp
loopne
rclb
andb
sti
xchg
in
mov
xchg
pop
mov
mov
orb
mov
mov
jb
jb
sub
lea
hlt
inc
lds
gs
jbe
add
sbb
dec
orl
jp
lea
and
nop
test
xorb
fdivl
into
lods
lea
push
xor
add
cwtl
stc
mov
fstpt
jo
aad
cmp
sub
das
xchg
out
mov
jne
arpl
mov
dec
jecxz
pushf
lret
loop
lcall
mov
loopne
cltd
lds
push
repz
mov
mov
push
jp
dec
add
sarl
xchg
and
fbstp
sahf
lea
notl
jle
inc
lea
mov
and
push
adc
add
test
icebp
adc
mov
nop
xchg
push
les
cmpsb
gs
xchg
outsb
test
inc
pop
jg
xor
adc
lcall
mull
cmp
repnz
xchg
jle
jle
rol
jge
mov
jp
and
mov
add
rclb
in
xchg
pop
cmp
dec
add
xchg
aad
sbb
iret
dec
xor
shl
push
rcl
inc
mov
fidivrs
mov
das
xchg
mov
popa
mov
dec
ss
jle
mov
in
andl
inc
inc
orb
add
sti
mov
dec
jo
add
sahf
out
inc
ror
jno
test
push
cmp
push
dec
bound
inc
cmc
pop
enter
push
push
nop
inc
jmp
lret
mov
xor
sub
sbb
in
nop
lcall
sbb
mov
in
cs
pop
mov
pop
pop
pop
xchg
add
or
jp
iret
repz
js
testb
xchg
sub
ljmp
aam
and
xchg
insb
mov
loop
jp
test
stc
mov
lcall
mov
int
dec
push
xor
push
cmp
xor
ret
push
push
dec
push
scas
fstl
and
jge
xchg
mov
les
stos
rorl
push
xchg
rclb
push
and
xchg
imul
mov
into
jae
mov
dec
mov
xchg
std
or
and
push
bound
clc
sbb
xor
cld
xchg
xchg
fxch
jge
or
aad
sub
pusha
or
mov
lods
xor
lcall
push
inc
jo
pop
mov
out
addr16
fcom
das
dec
xchg
mov
mov
ret
pop
jae
xchg
cmp
dec
xor
sub
pop
and
clc
mov
and
mov
ja
sub
out
mov
sub
clc
cmp
in
lds
out
cltd
sub
xchg
and
out
or
push
mov
sub
pop
lcall
pusha
sub
pop
js
sub
pop
iret
incb
shl
sub
sub
push
xchg
mov
xor
push
loop
or
push
or
adc
mov
pushf
cwtl
insl
cmp
sub
sub
das
xchg
pop
imul
mov
icebp
cli
mov
scas
cltd
repnz
ds
ret
and
scas
cld
mov
movsl
add
leave
ja
sub
fdivs
ss
movl
ds
or
push
add
dec
mov
lods
pop
cmpsb
push
mov
push
push
jmp
xor
aam
gs
mov
sbb
xchg
sub
in
inc
or
mov
orb
sub
addr16
sub
mov
jae
xchg
inc
fsub
ret
push
jb
jbe
ss
xor
lods
pop
sahf
aad
mov
stos
add
sub
arpl
xchg
fcoms
cmp
adc
pcmpeqd
incl
lods
push
sub
jmp
sub
mov
ds
out
cmpsb
adc
popa
addl
sbb
and
and
mov
xchg
stc
jne
xchg
pushf
push
int3
sarl
mov
cmpsl
imul
inc
pop
lods
out
jae
lods
hlt
pushf
mov
clc
lods
or
lahf
cwtl
inc
divb
mov
sarb
sbb
rcl
jge
sbb
icebp
inc
jp
mov
cmp
jae
jle
add
jns
sub
fnsave
stos
cld
test
and
pop
gs
xor
out
sub
lahf
fldl
xchg
mov
pop
xchg
repnz
aas
clc
push
es
pop
mov
test
mov
outsb
addl
or
jns
add
mov
sub
or
push
push
ds
aam
outsl
xchg
inc
jae
cmp
addl
mov
jo
mov
mov
and
cmp
fmuls
pop
inc
clc
idivl
sti
notb
jp
aaa
sub
push
pop
xchg
je
loop
int3
dec
jae
stos
dec
stos
movb
and
insb
sub
jns
sbb
fisttps
je
lahf
push
out
ljmp
into
adc
and
insb
add
js
fwait
inc
adc
ja
adc
mov
push
sbb
iret
cmc
mov
dec
adc
xor
negb
jnp
aam
in
aas
cmc
add
roll
jp
loop
push
dec
cmp
stos
xchg
je
inc
push
gs
sbbb
fiadds
lods
bound
cmp
and
scas
sarb
test
xchg
lret
inc
or
imul
popa
movsl
adc
dec
jb
dec
cmpsl
rcl
out
sbb
mov
sub
addr16
clc
fisubl
jge
insl
dec
cmp
fsubs
cli
jbe
jno
inc
cmp
mov
outsl
dec
mov
push
rcl
dec
add
into
jmp
ljmp
mov
sti
sub
aas
mov
push
cmp
jno
mov
hlt
cmp
int
pop
hlt
lcall
pop
mov
xor
lcall
cmpsl
xchg
xchg
movsb
push
fdivrs
icebp
andb
jg
mov
lds
fnsave
push
into
and
xchg
hlt
out
pushf
outsl
jmp
cld
fsubp
imul
shrb
jecxz
push
cmp
push
xchg
imul
jl
mov
adc
dec
mov
xor
jo
stos
scas
jecxz
mov
les
sub
pop
cwtl
popa
fists
jne
out
mov
es
iret
sub
mov
lock
jns
jmp
adcl
mov
cli
push
mov
sahf
adc
cmp
sbb
push
ss
inc
cmp
mov
xchg
ds
and
cmp
mov
cmp
shll
out
es
mov
sub
sbb
xchg
cmp
push
clc
repnz
mov
add
jecxz
cmpsl
xor
cli
push
in
adc
xor
in
jle
dec
xchg
pop
fs
jl
int3
cmp
cmpsb
int
add
jno
popf
add
pop
aaa
and
and
sub
adc
cmpl
xchg
scas
pop
inc
jno
dec
outsl
push
xchg
popa
lods
sbb
das
test
leave
and
mov
in
ret
mov
lahf
xor
stos
ds
adc
push
insl
or
inc
fdivrp
or
lods
ja
repnz
ds
daa
call
cmc
xor
mov
pusha
jno
xlat
sti
mov
add
fsubrs
or
ret
push
xor
cwtl
and
les
jle
add
inc
adc
call
mov
fisttpll
mov
js
jmp
rolb
push
push
movsl
movsl
cmp
pop
inc
sarl
dec
mov
rcl
push
push
stos
sub
fucom
sbb
arpl
pop
mov
lods
push
add
mov
adc
inc
push
cwtl
xor
mov
ja
push
pop
cs
fldcw
or
stos
jne
out
jl
fldl
loopne
cmp
or
popf
mov
imul
mov
mov
sbb
sbb
mov
out
dec
add
test
ljmp
jo
adc
and
pop
pop
mov
ljmp
fs
xor
popa
push
dec
js
lret
mov
inc
lock
rorl
cmp
out
mov
in
xchg
popf
ljmp
inc
xchg
loope
mov
dec
aas
mov
mov
shl
push
aam
jle
pop
mov
push
and
es
mov
fistpl
xor
pusha
in
and
adc
lea
aam
test
adc
xchg
stc
mov
fsubrl
or
add
sahf
and
stos
lock
lods
jo
sub
xor
push
cmp
scas
outsb
int3
ffreep
mov
push
dec
out
scas
test
xchg
sub
notb
and
and
test
es
sub
add
dec
and
stc
fsubs
jo
data16
subl
push
jecxz
and
mov
mov
ljmp
mov
mov
cmp
jg
mov
cs
jo
mov
fsubl
ljmp
dec
xchg
sti
mov
mov
push
shl
outsl
mov
in
pop
jge
sub
xor
push
xchg
cltd
divb
add
pushf
fbld
icebp
ljmp
cmp
xchg
testb
out
cmp
aam
andb
ja
or
dec
and
rclb
rcl
and
decl
jae
xchg
inc
fists
stos
nop
iret
or
xor
push
add
pop
and
stos
clc
pop
clc
addr16
push
cmp
cmp
xchg
mov
sti
or
inc
aas
mov
inc
cltd
xchg
cmp
scas
ljmp
push
stos
std
mov
aaa
sbb
cmp
inc
imul
xor
bound
add
sub
jbe
xor
cmp
cmpsl
or
lods
fidivrs
push
imul
fidivrl
adc
fisttpll
xor
push
push
adc
jmp
loopne
mov
add
repnz
pop
push
inc
inc
cmp
jp
cwtl
lret
shlb
sbb
cmp
in
cmpsb
inc
mov
sarb
push
paddusw
adc
pop
add
stc
popa
fs
inc
dec
movsb
hlt
jmp
pop
repnz
add
or
and
test
mov
mov
lods
jge
enter
inc
out
and
mov
dec
ljmp
fcom
shrb
xor
stos
call
xchg
outsb
arpl
mov
lea
push
pop
mov
in
dec
js
ret
and
sbb
sub
xor
or
dec
popa
mov
lret
fistpll
sti
sub
stos
lret
in
sbb
cli
insb
lret
sbb
sub
mov
dec
daa
sbb
aas
movb
inc
pop
push
dec
repnz
jmp
je
sbb
cmp
adc
jb
daa
push
iret
add
fisubrs
add
imul
aas
adc
cmp
mov
fidivl
push
mov
adc
outsb
ljmp
mov
out
xchg
jecxz
push
and
push
xlat
mov
pop
cmp
decb
out
mov
lcall
cmpsb
in
test
jne
ljmp
shrl
cld
xor
ljmp
icebp
fnstenv
fsubrl
xor
rcll
mov
pop
stc
dec
sbb
push
inc
mov
aad
mov
insb
xor
movsl
rol
xor
jmp
cmp
cwtl
or
sbb
jmp
add
lock
or
fpatan
mov
cld
scas
mov
lock
test
sbb
pop
sbbl
pop
cmp
jbe
inc
push
aas
push
jo
lods
lret
add
jbe
mov
sbb
in
ficompl
les
jae
insb
mov
in
and
sarb
outsl
stc
pop
sub
mov
cli
adc
sbb
je
push
mov
dec
loope
cltd
or
in
jecxz
addr16
add
xor
pop
mov
aaa
jo
push
ret
mov
push
pop
push
pop
mov
pusha
jns
pushf
cmp
mov
in
scas
shll
aas
es
or
sti
jo
jmp
jle
je
xchg
and
or
out
dec
dec
jo
aas
jge
js
je
jns
in
mov
mov
cs
jle
out
add
loopne
inc
imul
mov
imul
das
pop
mov
je
cmp
divb
jl
mov
xchg
or
std
repz
fwait
or
in
jns
sbb
sub
fidivl
xor
mov
outsb
jo
xor
outsl
cmpsl
jmp
jge
lret
ss
push
jg
dec
std
addr16
aaa
dec
cwtl
mov
xchg
shl
jmp
fsubs
mov
inc
scas
mov
jg
sbb
pop
or
dec
mov
bound
leave
dec
loopne
inc
movb
inc
and
and
outsl
loope
and
pop
adcb
inc
aas
xor
cwtl
xchg
push
xor
mov
pop
lcall
push
scas
pop
push
pushf
xor
add
ja
or
add
test
das
xchg
lret
movsb
cli
ljmp
jnp
mov
das
cmpsl
ror
repz
pop
arpl
xchg
pop
mov
push
sbb
inc
mov
mov
sub
pop
and
sahf
lcall
push
movsl
dec
or
dec
outsl
xchg
and
inc
pop
push
push
in
add
outsl
divl
fisttpl
mov
and
sbb
outsb
pusha
push
daa
lock
xor
push
push
xchg
out
loope
gs
sbb
sbb
mov
and
cwtl
repnz
or
test
xor
sub
inc
decb
gs
mov
rol
dec
push
out
divps
mov
xchg
call
in
sbb
xor
jbe
cmp
xchg
push
lods
dec
mov
dec
mov
aas
mov
inc
or
lret
jne
sub
loop
iret
push
ss
or
cmp
stos
adc
cmpsb
and
xor
ret
and
dec
cmp
xor
and
mov
lds
pop
add
sub
gs
gs
aas
xor
es
shr
cli
adc
xchg
xchg
es
mov
jge
lahf
data16
out
cmpsl
std
repnz
adc
lcall
or
test
add
jg
cmpsw
lods
pop
inc
adc
dec
outsb
xchg
fiaddl
in
sbb
jl
jo
stos
sub
fistps
xchg
std
js
js
push
clc
rorl
xlat
std
std
pop
das
xchg
movl
in
pcmpgtb
mov
cmp
push
or
and
inc
cmpl
inc
dec
jp
insl
std
sub
pusha
xlat
cmc
divl
hlt
xor
and
inc
dec
jbe
sub
out
and
pop
cltd
les
in
mov
loope
push
xchg
push
pop
decl
dec
ret
jno
xor
pop
mov
pop
inc
cltd
in
jo
jns
push
sub
mov
push
cmp
pop
scas
hlt
xchg
pop
stc
insl
xchg
add
orb
out
cltd
cld
stos
add
insb
pusha
mov
xchg
stos
xor
dec
movsb
sub
int3
or
ja
xor
mov
push
jne
mov
xor
out
push
fwait
inc
std
and
lea
movsl
mov
sbb
mov
push
jl
jp
push
sub
sbb
cld
pushf
xchg
cmpsl
sti
mov
loop
jnp
enter
sub
lods
mov
mov
sub
push
movsb
loope
daa
repz
loope
push
leave
mov
punpcklbw
adc
push
je
shlb
out
sbb
pusha
dec
sub
lods
push
adc
in
sub
out
test
inc
mov
add
push
ss
add
outsl
pop
shlb
std
leave
jno
cmpsb
faddl
push
xchg
mov
sub
dec
test
dec
vmread
xchg
ja
lock
sub
lcall
and
rcll
xor
loop
sahf
jecxz
leave
mov
cmp
add
push
inc
push
dec
subl
das
punpcklbw
jecxz
ja
ret
mov
and
cmpsl
mov
cwtl
out
addr16
xchg
sbb
fsubrs
jge
je
cltd
test
adc
xchg
mov
adc
scas
dec
cmc
inc
mov
sub
mov
cmp
inc
jmp
test
pop
push
cmp
dec
or
cwtl
popf
imul
push
loop
mov
in
insl
inc
mov
pop
in
data16
mov
lea
pop
sti
ljmp
loope
in
push
pop
movsl
sarl
ja
mov
jmp
in
push
push
mov
mov
aad
and
ds
sbb
sbb
cmp
xchg
mov
pop
xor
mov
out
into
movsl
scas
mov
outsl
jmp
inc
add
jl
call
addr16
sbb
popa
add
in
jb
fcom
fadds
mov
xchg
shrl
sub
push
fbld
rol
test
popa
cmpsb
adc
pushf
cld
sti
and
add
pusha
dec
fdivl
loope
cmp
jns
push
xchg
cs
adc
imul
pop
push
idivb
cli
mov
jne
mov
jno
popl
int3
test
fdivrs
push
and
daa
loopne
pop
cwtl
gs
in
and
outsb
testb
mov
push
loope
dec
lea
pop
push
lods
shr
cmp
and
ficompl
push
lcall
shrb
push
dec
arpl
push
sbb
mov
sub
out
mov
add
and
enter
loop
rolb
jmp
pop
sti
je
sub
fldln2
sahf
cwtl
daa
mov
mov
or
test
outsl
ja
mov
imul
ret
push
push
insb
xchg
pusha
mov
hlt
push
inc
push
mov
mov
xchg
subl
mov
dec
cld
out
sub
xchg
stos
enter
popf
stos
fildl
jmp
leave
cwtl
fists
dec
sub
dec
inc
cwtl
and
fwait
jl
mov
and
mov
icebp
pop
push
dec
and
dec
rolb
inc
sbb
add
dec
xchg
ljmp
mov
out
cmc
mov
ret
loopne
mov
push
insl
pop
popf
cmpsl
dec
push
xchg
dec
adc
ljmp
bnd
aad
mov
cld
push
sub
or
mov
test
daa
insb
sub
mov
add
jle
cld
or
mov
mov
leave
orb
adc
push
sbb
stos
sub
mov
jbe
into
ss
sub
clc
ss
xchg
pop
pop
mov
adc
pop
sub
outsb
gs
cmp
jnp
in
mov
fimuls
stc
jg
push
ljmp
inc
mov
or
cwtl
popa
out
in
pop
test
aas
xchg
popa
dec
dec
fsubp
mul
orl
push
jecxz
iret
pop
sti
sub
jb
in
ret
xchg
cmp
dec
pop
push
cltd
pop
scas
dec
mov
push
adc
jmp
mov
fidivl
leave
pop
sub
mov
lret
or
xorl
popf
scas
sti
repnz
xor
int3
mov
int
cmp
adc
pop
mov
xor
mov
cmp
fcomps
nop
mov
or
push
pop
testl
rcrl
jno
sub
and
cltd
add
mov
test
sub
jle
repz
and
mov
xor
popf
out
mov
test
pushf
gs
dec
stc
cmpsl
push
lock
inc
mov
les
mov
cwtl
lcall
aad
jns
jecxz
jnp
mov
and
sbb
push
out
int3
adc
mov
sbb
out
add
xchg
popa
or
mov
lcall
inc
dec
xchg
out
adc
ret
add
movsl
fsubl
pop
dec
inc
jl
cmp
inc
add
sti
sbb
cmp
sub
xchg
in
dec
mov
lcall
ljmp
aas
xchg
pushf
hlt
aam
push
pop
in
push
int3
out
sub
dec
mov
cmp
dec
dec
fisubrs
sub
mov
sbb
cmpsl
loope
pop
inc
insb
repz
cmpl
repz
adc
push
push
cmpsl
loop
pop
outsl
push
cmp
inc
mov
and
ret
fidivrs
lock
lods
aas
iret
ds
pop
aam
mov
movsl
sarl
inc
mov
movsl
gs
push
lods
push
stos
xchg
movsl
add
addr16
sub
push
and
mov
decl
sbb
push
push
out
iret
mov
cmpsl
pop
call
aas
jecxz
fstpt
add
jp
out
sbb
push
or
sti
rcrb
push
cmp
xlat
mov
push
lock
gs
xchg
aas
call
jo
dec
dec
and
repz
int3
jge
dec
dec
push
fwait
sbb
add
inc
dec
repz
scas
or
adc
mov
cmc
push
outsl
int3
scas
cs
rcrb
stos
xchg
xchg
xchg
or
dec
cmp
pop
jge
lods
les
mov
cwtl
rclb
adcb
push
and
jns
js
call
push
sub
es
pop
jp
movsb
sbb
cld
dec
cmp
pop
jge
inc
push
and
sbbb
stc
movsb
mov
mov
inc
adc
gs
inc
adc
sub
insb
mov
insb
lret
inc
fsub
add
push
xor
negb
clc
testl
mov
in
cmp
pop
insb
das
sarl
gs
out
jg
scas
jle
in
adc
push
or
aad
movsl
pop
cwtl
pop
mov
pop
int3
pop
jae
insb
leave
inc
fistpl
push
pop
add
repnz
negb
stos
mov
ds
jo
cmpsl
decb
and
andl
lcall
lahf
sbb
outsb
push
push
bound
int
xor
push
inc
lcall
jmp
inc
and
stos
xlat
mov
xchg
add
ja
lahf
mov
jnp
xor
jge
pop
stos
sar
adc
aam
test
mov
sbb
ja
fidivrs
pop
sbb
and
imul
pop
mov
outsb
or
shlb
xor
push
push
mov
sti
arpl
ljmp
dec
xor
cmc
add
in
mov
mov
dec
stos
mov
and
mov
and
inc
ror
fisttpl
les
mov
jne
xor
add
fcomps
jmp
popa
inc
imul
gs
lcall
sub
hlt
loopne
repnz
sub
cs
and
ds
fwait
lods
cmc
mov
mov
repnz
mov
inc
inc
mov
jg
mov
scas
inc
and
bound
mov
mov
jno
dec
hlt
pop
mov
xchg
cwtl
sbb
ds
mov
insl
inc
das
mov
adc
sbb
out
xchg
push
mov
xor
jge
or
imul
cmpb
pushf
dec
arpl
adc
stc
aad
cmp
aad
lds
test
dec
inc
in
or
out
hlt
das
stc
loope
fstp
gs
inc
mov
xchg
out
fwait
cwtl
and
dec
dec
pusha
andl
jle
bswap
adc
iret
sbb
inc
sub
dec
scas
push
shll
xor
adc
test
cld
pop
mov
hlt
jl
daa
adc
add
dec
fstpt
sub
jo
bswap
or
nop
fnstsw
jg
fildl
push
out
xchg
jo
test
sub
sub
bound
cmpsb
aas
leave
cmp
iret
add
mov
cmpsl
sub
sub
sbb
lcall
stos
jbe
cmp
add
mov
mov
jl
or
xchg
fcoml
push
xchg
inc
cmp
or
push
xchg
sti
push
in
in
clc
icebp
or
fdivs
pop
pcmpgtw
out
and
xor
sub
sahf
loopne
xor
sub
bnd
icebp
cs
mov
andl
fstpt
lahf
adc
jmp
lods
inc
enter
mov
scas
leave
pop
in
mov
sub
in
loop
jnp
bound
pop
jae
in
scas
lcall
mov
sub
dec
sub
movsl
sbb
sbb
jecxz
sub
cmovbe
daa
sub
je
shll
cld
dec
or
inc
ljmp
mov
ret
popf
push
bound
cmpsb
scas
mov
cwtl
jl
outsl
sub
insb
js
add
jns
insl
pop
xor
cmpsb
daa
popa
cmpsl
push
jb
fisubrl
mov
sub
jae
xchg
out
int
or
ss
jno
mov
mov
and
push
outsl
push
mov
pop
out
sti
js
test
leave
xor
and
xor
fs
push
cmp
fwait
shrb
sti
lods
xchg
push
inc
xchg
sarb
out
and
fisttpl
fistps
or
cmp
ret
mov
daa
das
imul
arpl
subl
mov
daa
fidivrl
clc
and
cmp
rcl
std
sbb
mov
jmp
or
stos
in
icebp
push
lods
rcl
cmpsl
in
lods
dec
jbe
add
outsb
fldl
dec
inc
rorb
push
shl
pop
mov
mov
pushf
jmp
lahf
jge
mov
or
cli
push
notl
je
cli
in
aas
cld
push
mov
mov
data16
push
jno
loope
lds
or
push
ficompl
aaa
pop
leave
sbb
and
lret
cs
xchg
arpl
ret
nop
shlb
or
lea
mov
cmp
lret
pop
adc
push
cmpl
sbb
cld
divl
or
lock
fsubrl
xor
stos
xor
fisttpl
dec
clc
shl
push
clc
repz
ljmp
mov
dec
xlat
xchg
loope
pop
add
cltd
jge
scas
mov
js
cmp
movsl
inc
mov
ret
movb
outsl
xchg
mov
test
mov
xchg
sarl
xchg
shll
xchg
sbb
pusha
mov
popa
fcompl
rcll
das
imul
xor
and
fldt
add
xchg
dec
inc
dec
cmpsb
lcall
sbb
xchg
pop
cmp
pop
call
fdivrp
push
mov
and
lock
fmulp
pop
cmpsl
out
leave
out
sbb
imul
jge
xchg
test
dec
icebp
cld
sti
mov
or
mov
cmp
add
jno
loope
clc
mul
arpl
or
or
in
push
dec
push
arpl
movsb
gs
sbb
sub
push
mov
mov
stc
mov
popf
test
test
sub
aad
adc
adc
push
lea
leave
push
cmp
xor
lret
das
and
lret
stc
adc
and
xchg
fimull
lods
lds
sub
test
pop
pop
icebp
sub
lods
add
into
lret
jg
iret
pop
out
cmp
pop
orb
sbb
movsl
inc
dec
into
sbb
jecxz
lret
lods
mov
movsb
lret
inc
daa
jbe
sbb
push
clc
pop
sub
jge
adc
or
sbb
mov
subl
ret
mov
jne
mov
in
shlb
cwtl
loope
in
mov
stos
mov
imulb
stos
popf
sahf
loop
dec
mov
ret
shrl
jg
pop
or
sub
cmc
popf
orb
sbb
xchg
add
pop
gs
shl
iret
shrl
aaa
into
mov
int
data16
int
popf
or
mov
add
sbb
push
adc
sbbl
jmp
ror
jmp
jbe
adc
addr16
push
test
push
daa
push
mov
rcrb
lret
push
sbb
adc
mov
les
adc
inc
and
sbb
add
and
rcrl
std
sub
xor
fsubl
mov
sahf
mov
insl
sbb
jge
sbb
xchg
rorb
cmp
rcr
in
clc
repnz
out
sahf
cmp
popf
popa
mov
or
or
xchg
pop
mov
or
and
lods
call
shll
cmp
xchg
pop
repnz
dec
cmp
jmp
mov
xor
dec
gs
jbe
jecxz
cmc
outsb
adc
push
mov
test
and
dec
aas
sub
fdiv
cmpsl
push
loope
pop
outsb
std
mov
jns
or
mov
cmp
es
aad
and
inc
mov
outsb
repz
imul
push
jmp
sbb
lods
adc
push
aad
test
mov
or
cwtl
mov
test
cs
mov
jecxz
mov
fistl
fwait
mov
mov
add
nop
inc
add
xor
pop
in
cmp
test
cmpsl
and
leave
sub
inc
notb
push
hlt
das
inc
lds
and
lret
mov
lods
push
or
movsb
fwait
mov
pop
test
jle
jns
mov
add
sub
cltd
push
jl
mov
xor
or
sbb
int
mov
mov
arpl
icebp
xor
sub
pop
pop
sub
xor
out
and
cli
out
mov
in
es
inc
fimuls
pop
iret
loopne
add
mov
scas
jmp
jae
call
lea
das
aam
bound
sub
and
pop
push
jge
mov
iret
cltd
dec
int3
lea
stos
pop
mov
fldenv
xchg
out
jp
sti
xchg
data16
dec
inc
aaa
sub
out
lcall
add
sahf
mov
xor
mov
mov
cltd
out
ret
lock
mov
push
or
pop
gs
cmp
pop
inc
mov
cltd
lret
repnz
arpl
push
mov
out
jae
je
in
lock
xor
and
jle
inc
scas
xor
inc
inc
xor
cmp
ror
aaa
jbe
into
cmpsl
dec
add
sbb
nop
nop
insl
js
outsb
add
fs
jge
pop
test
or
lahf
test
into
mov
pop
add
cwtl
lret
lds
sub
nop
push
loope
xchg
push
orl
xorl
push
mov
push
adc
sbb
lds
mov
cwtl
mov
push
mov
pop
or
mov
sub
mov
adc
mov
stos
jmp
and
in
out
js
xor
lret
in
test
cld
dec
add
jp
js
sbb
adc
lock
int3
mov
out
nop
cltd
mov
or
pop
testl
pop
rcll
pop
lods
repnz
push
cmp
jmp
dec
or
mov
sarb
xchg
mov
iret
negb
push
pop
cltd
xor
mov
jmp
xchg
pusha
sub
adc
sub
cld
mov
cmp
dec
push
je
xorl
pop
xchg
xchg
mov
sub
movsb
push
ret
xor
or
in
subl
shrl
test
mov
xchg
add
ja
addl
sbb
sti
xchg
scas
sbb
and
rcll
push
mov
imul
inc
lock
ret
push
rcrb
jno
ror
es
adc
out
mov
cmp
test
mov
es
mov
cmpsb
int
out
push
arpl
jecxz
xchg
jle
pop
mov
sbb
lock
leave
push
aaa
rcll
pop
mov
mov
ja
pop
out
clc
inc
pushf
push
push
pcmpgtw
mov
lods
pop
add
mov
in
adc
fs
rol
sub
out
icebp
adc
aam
enter
out
fdivrl
loope
lock
xchg
stos
call
xchg
je
sti
mov
mulb
mov
js
bound
push
lahf
out
clc
add
lahf
addr16
pop
cmc
pop
jno
pop
push
xlat
or
sbb
or
add
push
loope
divb
dec
pop
or
out
mov
es
jb
inc
jae
mov
addr16
pushf
push
jecxz
jnp
nop
lcall
repz
fsubrl
das
jno
repz
loopne
rcll
sbb
ds
out
adc
add
pop
xor
call
clc
nop
das
hlt
ljmp
loopne
test
nop
xlat
jmp
frstor
js
cwtl
sbb
push
jmp
stos
xor
pop
gs
xchg
dec
sub
in
inc
cmpsl
mov
sbb
inc
or
push
adc
dec
stc
pop
push
in
lcall
lds
mov
lcall
mov
dec
add
iret
jmp
ja
hlt
lods
mull
push
scas
adcb
clc
negb
out
ficompl
inc
mov
xlat
mov
inc
mov
dec
xchg
out
dec
cmc
mov
aaa
dec
mov
ret
pop
xor
test
shll
sbb
jge
ret
push
add
cmp
and
push
inc
jne
dec
jnp
dec
in
scas
xchg
enter
cltd
adc
xchg
jne
cmp
dec
push
sbb
loop
add
or
cltd
add
movsb
loop
loopne
dec
arpl
dec
es
pop
inc
inc
stos
mov
outsb
mov
jge
rcrl
mov
das
shlb
adc
in
or
xchg
adc
mov
mov
cmp
mov
scas
cmp
lea
add
adc
pop
sbb
xchg
mov
push
in
cwtl
movsl
subl
mov
add
dec
add
push
out
xor
adc
xchg
ja
test
pusha
shll
fisubs
sbbl
xor
rorb
rcr
clc
mov
dec
push
scas
imull
xor
xchg
daa
cli
andb
aam
xor
test
lret
push
cs
nop
jnp
jmp
jecxz
push
stos
sti
add
in
sub
in
lods
fwait
test
xor
rcrl
pop
clc
rolb
in
ret
and
jle
mov
out
jnp,pt
jecxz
pop
nop
mov
xchg
dec
imul
xor
mov
sub
stos
adcl
pop
fbld
push
mov
aaa
dec
cmpsl
mov
jl
dec
movsl
adc
in
jno
jecxz
lods
push
sbb
lret
cmpb
add
dec
jecxz
jp
jmp
ret
ja
arpl
or
pop
cltd
aad
loope
icebp
xorb
push
fwait
cmp
cmpl
cld
jle
rorb
pop
loopne
pushf
out
popa
jmp
scas
fstl
lgs
imul
sub
and
cmpsb
sarl
xor
lret
cmpsb
sub
daa
int
std
pop
pushf
aaa
lea
test
movsb
ja
mov
ds
stos
push
inc
bound
out
test
push
je
mov
xchg
push
pop
xor
jae
jne
loope
into
pop
push
pop
scas
loopne
pop
inc
hlt
lock
fstpl
add
idivl
jns
das
push
inc
jecxz
push
add
ss
int3
add
rcrb
cmpsb
aas
inc
pop
inc
scas
adc
fwait
bound
lock
jb
adc
popf
push
jno
mov
test
dec
cmp
movsl
dec
inc
push
sub
push
fisttpll
sbb
push
cmp
out
mov
push
bound
mov
popf
mov
and
mov
or
imul
gs
decl
adc
faddl
test
push
repnz
movsl
clc
div
pop
out
xchg
sub
imul
sbb
rorb
ud0
je
cld
cmc
pop
xchg
testl
sbb
dec
ss
xchg
pop
fbstp
fidivrl
lds
jae
cs
out
or
mov
fstpl
aam
pop
inc
mov
imul
es
in
dec
inc
sub
scas
sti
fcos
stos
cmp
js
sbb
mov
mov
mov
lretw
aas
cmp
int3
mov
xchg
add
clc
mov
cmpsb
push
iret
dec
or
adc
lods
add
cmp
std
mov
mov
mov
jbe
sub
push
rorb
sbb
dec
jg
jmp
sbb
in
push
icebp
aas
push
jbe
cltd
adc
sub
test
in
popf
cltd
in
dec
loopne
jns
jmp
rcll
out
sub
sbb
add
cmp
scas
testl
je
arpl
pop
push
js
test
repnz
or
mov
xchg
xchg
cmp
jl
lods
add
pop
dec
dec
pop
mov
jns
fmul
sub
push
cmpsl
stos
lgs
insl
lcall
pop
dec
or
leave
mov
mov
xchg
das
negb
test
out
inc
lcall
out
mov
out
mov
pop
aad
jne
push
sbb
pop
mov
pushf
loope
add
sbb
pop
aam
aam
add
sbb
cwtl
xor
lds
mov
xor
or
xor
mov
insl
js
enter
fdivrs
push
adc
mov
jmp
mov
jns
insb
das
dec
mov
sbb
inc
jne
cwtl
icebp
aam
dec
iret
and
cld
push
addr16
xor
adc
sbb
fiadds
mov
inc
add
out
aam
stos
xchg
insb
pop
pushf
adc
repz
rolb
aad
mov
xor
lret
icebp
dec
repz
jae
mov
inc
ss
adc
mov
dec
ljmp
aaa
lahf
mov
movsl
mov
lods
ud1
or
mov
lcall
mov
adc
ljmp
jle
rcrb
push
clc
jno
aam
and
int3
cld
pop
ja
jl
out
cmp
mov
add
inc
in
incb
shlb
pop
or
pushl
sub
or
orb
mov
inc
bound
adcl
xchg
shrl
jmp
ljmp
pop
xchg
movsl
jecxz
xchg
mov
shl
repnz
outsl
fiaddl
jmp
and
or
ss
cs
rolb
insb
mov
shrl
sbb
or
xchg
inc
add
roll
xor
sbb
jno
hlt
sti
aad
in
jmp
mov
cmpb
bound
xchg
mov
sub
cmp
loop
dec
loopne
jp
inc
into
sbbl
aas
call
shlb
mov
arpl
loop
push
roll
into
jns
inc
dec
mov
mov
xor
scas
sub
fidivs
push
jae
sub
movsb
push
pop
mov
inc
aam
arpl
pop
push
inc
jmp
sub
or
push
push
dec
adc
das
mov
scas
dec
das
mov
xor
sub
scas
rcr
add
lods
fnstsw
dec
adc
lahf
repnz
jbe
mov
cmp
and
and
inc
xchg
fdivs
sbbl
cmc
ja
xchg
adc
aas
fwait
test
lds
rcll
jo
pop
mov
cmp
mov
and
xor
test
loop
sbb
cltd
inc
mov
jae
xchg
cmp
jo
push
and
into
jno
js
ja
mov
push
xor
mov
leave
clc
sbb
xchg
dec
ret
push
xor
mov
pop
add
xor
outsl
jo
lods
adc
fsubl
cmp
roll
es
sbb
in
loopne
in
repnz
jge
sti
adc
or
or
cltd
sbb
sub
cltd
enter
lock
sbb
pop
adc
lahf
cmp
xchg
gs
xchg
add
loope
shll
xor
xchg
sub
xchg
mov
popf
xchg
mov
adc
out
popa
and
adc
dec
lds
add
ret
into
loope
jmp
in
loop
mov
jbe
or
nop
or
mov
into
ja
lock
xchg
clc
mov
stc
dec
mov
arpl
adc
stc
xor
ret
cmp
sbb
add
push
push
jg
loopne
lock
inc
dec
jmp
loope
mov
stc
jbe
inc
and
js
cmp
pop
jmp
mov
jno
sub
pop
push
aaa
push
cld
lret
enter
xchg
inc
testb
cltd
and
mov
shlb
and
enter
mov
cmc
lret
xor
xchg
add
fwait
mov
inc
shr
sbb
pop
jo
mov
in
jecxz
push
mov
test
daa
cltd
ljmp
movsb
mov
js
pop
movsb
mov
or
jmp
jae
aas
pop
inc
setl
jo
in
jmp
mov
add
pusha
decl
enter
vpaddq
int
pop
test
jb
dec
add
lcall
mov
jp
mov
fstpl
int
or
inc
lea
pop
jne
pop
adc
das
in
cwtl
fnstcw
sub
xlat
movsb
pop
jmp
test
jno
lcall
sahf
fadds
lret
inc
cld
jns
push
inc
dec
in
and
cmp
push
lahf
fistpl
rcrb
xchg
jg
repnz
or
arpl
icebp
leave
xchg
pop
jp
xchg
shl
xlat
call
imul
lock
stc
cmp
jl
pop
popf
xchg
cmp
mov
icebp
jp
ret
jge
lahf
in
mov
mov
xchg
lods
das
in
dec
xlat
sbb
aas
andl
stos
je
add
push
data16
inc
daa
push
insl
fmul
jmp
and
mov
rorb
or
fsub
ret
adc
xchg
flds
out
imul
ret
cli
dec
pop
inc
jle
mov
stc
pop
out
lret
and
imul
pop
bound
inc
inc
outsl
subb
cmp
xor
lods
sahf
xchg
leave
xor
cmp
adc
add
sbb
fsubs
lcall
jb
xchg
divb
push
jmp
mov
add
jl
sbb
or
push
inc
sbb
icebp
jle
ja
iret
xchg
push
mov
jmp
pusha
out
cmp
loope
scas
pop
cwtl
adc
sub
sbbb
mov
add
dec
fisttps
and
int
mov
mov
ret
fadd
ja
fimuls
pop
iret
das
cmp
push
pop
add
sahf
in
fwait
mov
je
push
mov
xchg
dec
cltd
pop
inc
shr
cld
cmp
test
cmp
jl
out
mov
sbb
push
cmc
bnd
fwait
or
sbb
sub
dec
outsl
mov
inc
pushf
in
ds
inc
rcrl
xor
rorl
xchg
push
xor
mov
add
jge
and
scas
mov
frstor
pop
clc
gs
lea
mov
cmp
rcrl
mov
sysret
xor
in
sbbl
in
mov
inc
test
mov
push
pop
das
leave
sub
xlat
test
insl
xor
push
clc
lret
jnp
pop
call
scas
jb
mov
rcrb
aaa
cmp
adc
mov
jge
pop
ljmp
add
and
mov
das
test
inc
es
mov
pop
pop
or
nop
xchg
jnp
test
inc
movlps
xchg
xor
cbtw
xorb
inc
jp
in
cmp
fwait
into
icebp
ljmp
cmp
cmc
rclb
leave
mov
push
rcll
repz
popf
mov
mov
movsb
jle
into
adc
lods
iret
pop
mov
pop
or
cmpsb
call
into
mov
mov
in
mov
pop
lods
cmp
or
test
xlat
les
psllw
popa
adc
mov
testb
pushf
xchg
push
loopne
pop
jg
xorl
dec
xchg
mov
pusha
xchg
ret
dec
imul
cmp
packssdw
in
mov
fildl
xorb
rorb
arpl
add
in
aam
xchg
push
test
sub
xchg
jbe
stc
xchg
je
jecxz
add
lods
adcb
js
jns
cs
jne
mov
xchg
xor
out
xchg
gs
jp
xchg
cmp
add
push
jg
and
mov
and
inc
cltd
dec
cmp
push
outsl
mov
mov
enter
daa
imul
sarl
adc
mov
lock
stos
push
je
aad
pop
sub
xor
jecxz
adc
ss
inc
adc
jle
sbb
xor
push
and
int
push
xor
and
cmp
stc
jne
int
ljmp
add
xchg
ja
lahf
pop
aaa
lea
test
fisubrs
and
push
mov
sub
mov
jg
xchg
shrl
xor
popa
mov
repz
sbb
jg
aam
jl
mov
mov
imul
imul
sub
cs
cltd
pop
subb
imul
inc
stos
or
pushf
rclb
adc
and
into
out
inc
sub
das
push
sti
and
mov
cltd
mov
das
cli
ss
mov
cmp
add
xchg
and
and
push
xor
inc
cmp
sbb
xor
lret
dec
cltd
or
pop
cmp
mov
fcoms
mov
sahf
ret
dec
sbb
fnstsw
pop
sar
or
mov
lret
es
adc
popa
cwtl
jl
outsl
push
movsb
jmp
aas
sub
mov
ljmp
aaa
sub
sbb
dec
pop
jno
jecxz
enter
or
mov
push
int
jg
jge
and
jae
jle
cmp
lods
and
loopne
sbb
inc
push
mov
test
roll
movsl
test
xchg
xchg
cmp
inc
sub
js
scas
movsb
movsl
call
or
xchg
repnz
jmp
adcl
or
push
push
scas
insl
movsb
mov
cmp
hlt
pop
lahf
push
ja
xchg
dec
and
sbb
jns
adc
fwait
adc
das
cld
sbb
cwtl
scas
enter
lds
or
out
sbb
push
and
daa
mov
push
ds
jp
mov
push
push
dec
cwtl
sarl
jo
mov
fwait
mov
jmp
mov
pop
shrl
fimull
je
call
push
incl
xlat
je
xchg
mov
test
xchg
into
out
sbb
fists
fldt
jbe
xor
out
dec
push
add
xchg
mov
push
pop
flds
cmp
and
dec
nop
sbb
popa
mov
stos
popa
outsl
add
rcll
sub
in
aas
and
movsb
fstl
inc
arpl
imul
aad
or
add
adc
xchg
mov
add
ljmp
sbb
adc
dec
inc
or
out
and
shlb
add
cwtl
in
fstp
dec
xchg
and
mov
adc
test
ret
je
nop
test
orl
aaa
cwtl
xor
push
cmp
aaa
add
aas
clc
addl
das
inc
ljmp
or
mov
cli
fbstp
stc
es
rclb
test
es
lcall
or
icebp
sub
pop
inc
sub
lcall
dec
sbb
fstpl
std
scas
out
pop
lods
enter
test
cli
mull
jns
mov
mov
iret
bound
xor
neg
jno
mov
xor
mov
or
adc
inc
mov
aas
xor
inc
add
or
insb
adc
ficoms
shlb
xor
cmp
sub
lcall
jns
mov
adc
add
fs
add
in
std
test
push
pop
cs
in
sbb
ror
inc
xorb
outsl
and
aam
stos
out
cmp
imul
sbb
leave
pop
fnstcw
das
std
sbb
adc
add
rorl
popa
adc
sahf
add
stos
dec
fs
jmp
push
push
cmpsb
inc
xchg
inc
rcrl
lea
cld
xor
or
dec
ret
sbbb
mov
fisttpl
mov
fisubrs
movb
xor
lret
out
push
sbb
adc
and
fisubrs
pop
xchg
lcall
call
insl
fiadds
add
adc
xlat
test
or
lret
das
fs
in
je
mov
popa
ror
push
dec
dec
push
out
fmuls
and
xchg
sub
in
or
cld
pop
cmpsl
push
mov
pop
aam
pushf
fildll
mov
add
mov
rcrb
inc
push
mov
test
gs
outsl
aas
sbb
sbb
pop
jnp
sti
addb
xchg
adc
mov
ljmp
mov
daa
jnp
mov
icebp
xchg
dec
add
inc
sub
int3
les
xor
lret
pop
imul
cmp
inc
inc
call
int
jbe
cmpsl
stos
int3
stos
xor
pop
inc
aad
mov
jne
add
mov
or
fsts
jbe
or
adc
js
stc
daa
pop
fcoms
lret
das
jg
dec
inc
inc
push
lret
and
scas
sbb
pop
arpl
lods
mov
outsl
imul
addr16
mov
push
jl
std
mov
mov
movsl
arpl
neg
insb
rolb
repz
cmp
lret
in
jp
xor
jmp
iret
and
sbb
pop
inc
sub
cmpsb
mov
sub
mov
adc
dec
sub
pop
inc
lcall
inc
adc
data16
xchg
sub
insb
ret
int3
xchg
cwtl
xor
stc
jmp
popa
xchg
pop
pop
mov
loope
fnstenv
mov
or
sbb
icebp
push
fnstsw
ja
outsb
cmpsb
adc
add
mov
xor
shrb
cmp
cltd
dec
mov
movsl
stos
add
fnstenv
adc
cmp
shrb
imul
pop
mov
add
minps
fcom
cmpsb
cmp
out
xchg
outsb
mov
xchg
add
mov
test
inc
add
sub
imul
pop
and
cwtl
jbe
je
adc
cli
rorl
test
sub
test
mov
in
scas
in
jae
sbb
arpl
push
mov
add
in
mov
dec
mov
push
sbb
inc
fildl
cmc
rol
ljmp
lods
cmc
xor
ret
mov
out
movsb
pop
add
mov
adc
notl
pop
shrb
xchg
pop
lret
lcall
lahf
jnp
sbb
lds
dec
or
xchg
push
sub
jns
adc
std
inc
pop
cmp
add
in
xchg
inc
jnp
in
pop
mov
fsts
mov
pop
or
outsb
dec
popf
stc
xor
cmp
fildl
and
dec
mov
lret
rcl
mov
pop
inc
xor
sub
push
in
or
cmpsl
vpcmpgtw
ljmp
jp
or
xor
inc
subb
pop
cmp
xchg
lret
repz
mov
stos
cmp
inc
xor
lods
mov
loope
test
cs
push
or
adc
mov
movl
roll
sub
pop
xor
or
dec
lea
add
mov
ret
insl
outsl
fimuls
out
sti
jns
into
push
insl
xchg
jge
xor
or
xchg
jo
xor
or
and
mov
adc
push
inc
aaa
movsb
push
xchg
push
orl
and
mov
push
mov
aas
lahf
xor
fldenv
out
sbb
popa
outsl
jnp
loop
repnz
adc
lods
xor
push
popf
adc
pushf
ja
in
xchg
fisttps
adc
jns
jecxz
sub
jbe
inc
cmp
decb
jbe
pop
mov
pushf
stos
dec
in
out
mov
pop
pop
cltd
mov
sahf
mov
mov
mov
and
push
add
jne
popf
dec
dec
push
mov
jne
sub
add
xor
and
lret
test
pop
add
leave
faddl
pop
and
mov
test
xchg
xchg
inc
lock
mov
add
ja
cs
out
jle
xor
sahf
sub
ficoms
shrl
adc
inc
movb
xchg
jno
and
lods
dec
xchg
inc
iret
jp
loope
jle
mov
push
pop
inc
jo
inc
and
sub
movsb
push
leave
and
call
stc
lea
test
push
icebp
adc
inc
pop
push
pop
loop
dec
movsl
push
fldl
mov
cli
enter
ret
pop
push
jg
push
and
mov
test
pop
out
cmc
inc
dec
je
xchg
movsb
aas
or
mov
test
out
cmp
push
fwait
mov
jg
fildl
mov
stos
add
and
stos
fdivs
sahf
or
pusha
push
add
jae
dec
inc
mov
mov
adcl
inc
or
mov
mov
jae
lret
xor
push
xchg
inc
scas
scas
insl
add
gs
mov
push
pop
shrb
pusha
mov
in
and
nop
cmpsl
xchg
pop
pop
fists
jnp
lcall
mov
call
popl
dec
pop
adc
lahf
lds
cmp
test
add
js
dec
jp
cmp
cmp
push
scas
push
bound
mov
data16
pop
push
out
xchg
ds
gs
mov
sub
fldt
inc
push
imul
xchg
mov
xchg
jno
es
bound
fidivrl
cmpsl
cli
in
push
inc
pop
lret
add
stos
stc
roll
mov
jmp
pop
insl
popf
loope
mov
iret
xor
mov
sti
push
test
lock
pusha
mov
cmp
insl
psrad
aad
ljmp
dec
inc
adc
xchg
dec
push
mov
bound
xchg
jmp
lea
aam
aad
sub
mov
cmp
dec
xchg
bound
mov
data16
gs
stos
mov
lods
sub
push
mov
xor
push
insb
xchg
rcrb
lds
add
lcall
inc
mov
sbb
hlt
or
nop
ret
mov
mov
hlt
imul
pop
xor
and
idivb
aas
or
pop
imul
mov
sahf
sti
push
arpl
icebp
hlt
aad
loop
fiadds
jb
xchg
inc
pop
fldenv
ss
and
pop
xor
lret
mov
jnp
add
mov
fnstenv
in
mov
push
pop
mov
xchg
cld
jns
pusha
jp
orb
pop
imul
add
and
cmpsl
dec
adc
jle
jmp
sbb
js
mov
idivl
pusha
jae
pop
repnz
push
lods
dec
bound
cmp
mov
gs
jle
mov
jmp
jl
or
adc
lods
mov
lret
movsb
mov
add
imul
push
jg
and
into
repnz
push
dec
xor
test
sbb
sub
mov
test
or
test
push
fs
clc
test
xor
pop
cmp
idivl
pushl
cmpl
sbb
push
out
xor
adc
xor
test
pusha
test
pop
cmpsl
jne
rolb
ret
xchg
invd
out
dec
pop
aad
loop
inc
sahf
lds
or
stc
push
and
cs
push
ficoms
mov
out
int
fistpl
inc
or
jno
popf
mov
mov
pop
lods
adc
or
inc
xchg
mov
iret
mov
movsl
xchg
and
icebp
cmpsb
in
nop
imul
dec
shlb
or
cs
wbinvd
push
and
rorl
cmp
out
pop
jg
mov
shlb
stc
fildl
packsswb
enter
adc
dec
mov
sbb
dec
div
pop
push
cmp
and
push
cmpsl
rcl
test
insb
add
mov
mov
fs
mov
mov
in
mov
mov
out
mov
xchg
cmp
lahf
mov
inc
lea
fwait
xor
jne
js
in
and
bound
mov
push
and
or
inc
int3
scas
imul
mov
xor
sarb
push
dec
push
xor
faddl
mov
hlt
notb
test
and
out
jne
xchg
shll
out
jge
sbb
dec
xchg
test
rcrb
xchg
mov
inc
cs
stos
jo
inc
call
in
dec
sub
jo
jp
clc
lahf
inc
pusha
fs
mov
aas
bound
fisubrl
movsb
xor
push
int3
subb
insl
test
mov
push
jb
and
sbb
sbb
mov
mov
sub
lret
js
into
decb
sub
and
cmpsb
testl
lea
add
xorb
mov
or
mov
push
and
popa
in
addb
mov
add
inc
insl
xchg
call
or
lock
fcomps
adc
aaa
pop
aam
mov
int3
sbb
push
dec
dec
fsubrl
lds
xchg
xlat
pop
hlt
jmp
mov
insl
inc
pop
lcall
xor
les
push
jo
shrl
insl
dec
mov
aaa
paddb
push
mov
cmp
pop
stos
adc
mov
pop
xchg
xchg
ret
cmp
mov
fstps
decb
lret
mov
fbstp
mov
test
mov
xchg
xor
nop
push
sub
xor
fcoml
lcall
subl
push
lahf
push
in
je
cmpsb
in
sbb
shll
xor
xchg
sbb
icebp
mov
cmp
outsb
pop
cmc
call
movsb
xchg
movb
cmp
repz
mov
jp
mov
xor
arpl
jae
les
mov
inc
cmp
loopne
stc
sti
sbb
rcr
movsb
daa
mov
rol
jmp
lret
jnp
mov
pop
adc
jle
aad
inc
insb
and
sbb
int
dec
cli
aas
push
mov
or
mov
pop
cmp
jg
push
push
lcall
ja
nop
cli
pusha
addr16
daa
int3
shrb
fidivl
ja
mov
or
add
and
mov
xchg
dec
in
push
aad
xchg
sbb
loope
jns
mov
dec
xor
ljmp
ss
shl
adc
leave
cmc
int3
mov
ret
or
outsl
pop
je
call
xchg
dec
jge
push
loopne
shl
sub
inc
push
movsl
lods
lahf
xchg
mov
and
out
fdivrs
push
loop
mov
or
loop
in
mov
out
stos
sbb
inc
cmp
clc
cli
mov
cmp
rcr
dec
ljmp
subl
add
imul
test
int3
push
push
pushf
insl
test
or
pop
jb
jle
sbb
cmp
mov
mov
xchg
adc
push
pop
lods
jmp
out
lods
mov
cmp
cmc
adc
pop
outsl
cmpb
sbb
cmp
bound
and
ret
adc
pop
rcrl
decl
shlb
jl
pusha
out
movb
shlb
pop
add
xchg
mov
mov
mov
aad
in
movlps
pusha
and
jo
sbb
dec
imul
cmp
ss
inc
cmp
mov
push
xchg
pushf
enter
andb
std
jb
rcll
dec
jecxz
stc
outsb
loopne
xchg
fdivrl
fisubrs
mov
xchg
shll
cmp
cmpsl
mov
mov
and
insb
dec
push
in
enter
and
popa
ret
adc
jnp
out
xor
stos
cmpsl
sub
push
loop
push
cld
cltd
insl
iret
int
mov
jg
push
adc
jl
pop
jg
push
mov
pushf
push
cmp
leave
dec
add
xor
dec
gs
xchg
adc
push
mov
fwait
and
std
aaa
jecxz
or
imul
insl
inc
and
mov
xchg
test
jmp
ja
shl
jns
insl
jb
jl
jmp
sub
aas
loope
inc
jne
xchg
pop
cld
pop
push
push
push
pop
dec
pop
popa
scas
stos
movsl
sbb
push
cs
pop
scas
mov
add
repnz
pop
sub
push
cmp
test
adc
jp
and
mov
pop
jmp
ss
jecxz
dec
pop
sub
pusha
outsl
mov
xor
subl
push
xor
rol
xor
je
jbe
mov
dec
pop
xlat
movsb
ficompl
loopne,pn
sub
shll
gs
imul
pop
xchg
pop
xor
xor
push
inc
pusha
mov
jbe
repz
out
push
aad
sbb
jno
inc
inc
dec
inc
add
sub
mov
dec
lods
int
add
cmp
fucomi
dec
popf
rclb
out
cmp
jno,pn
addr16
cmp
fisubrl
out
iret
mov
cmp
xor
add
inc
push
push
ljmp
int
adc
rcll
and
push
jge
leave
or
pop
sbb
repz
imul
push
dec
inc
mov
clc
xchg
add
add
mov
outsb
pushf
and
pop
dec
push
mov
mov
cmp
jne
mov
stos
cltd
popf
addr16
fsubrp
mov
cmp
push
out
stos
pop
pop
dec
insl
jg
jecxz
fistl
cs
fistpl
xchg
arpl
cmpsb
test
out
lods
scas
adc
fwait
lds
push
and
and
and
adc
cmp
leave
lock
maskmovq
idivl
icebp
bound
and
inc
add
dec
push
pop
xchg
scas
sbb
inc
mov
mov
push
sbb
mov
rorb
cltd
cld
cmp
insl
inc
rol
push
adc
aas
pop
je
jge
popa
mov
xchg
and
aas
dec
sbb
filds
out
mov
cmp
jecxz
jmp
inc
les
imul
mov
aam
inc
sbb
or
inc
mov
inc
adc
push
enter
test
stc
sbb
xchg
aas
loopne
mov
push
mov
ja
xchg
hlt
les
sbb
outsb
ja
cmp
movsb
lds
add
add
or
sbbl
sbb
fwait
loope
and
pushf
sub
imul
push
fneni(8087
xlat
fs
lods
shlb
out
cmp
mov
cmp
cmp
push
les
fdivrs
or
out
stos
inc
int
pop
iret
push
icebp
inc
and
push
pop
test
fnstcw
and
lret
test
repz
sti
inc
pop
push
mov
out
loop
inc
xor
imul
xchg
insb
or
xchg
mov
or
push
ja
jl
pop
lret
in
outsb
mov
ret
ds
std
popf
dec
jns
sti
mov
imul
mov
inc
hlt
or
lds
jns
rcrl
mov
or
lret
add
mov
jbe,pn
test
hlt
and
hlt
xor
mov
andl
xor
mov
push
jg
sbb
lret
movsl
std
adc
fcmove
sub
and
and
mov
pop
das
lods
pop
pop
pusha
outsb
mov
jo
mov
or
or
cld
arpl
clc
adcl
cmp
mov
push
addr16
xchg
xorb
push
mov
fnstenv
outsb
fdivl
js
xchg
mov
cmp
shrl
pop
sbb
sbb
cltd
and
push
cmp
cmp
fwait
or
shlb
test
mov
ljmp
mov
jmp
mov
lret
and
bound
sti
mov
test
cmpsb
jp
ljmp
mov
sbb
rcr
dec
xchg
mov
rol
sbb
mov
add
pop
cmp
mov
aas
sub
fmuls
lods
adc
ficoml
dec
lds
mov
push
mov
pop
sbb
rol
ror
pop
in
pop
pop
icebp
sbb
jmp
pop
sbb
in
movsb
fisubl
sahf
pop
push
push
jmp
fistps
es
xor
pushf
imul
sub
mov
hlt
out
push
push
fisubrl
xor
fimuls
int3
and
push
jge
cwtl
into
add
lods
mov
in
push
rcrl
cmp
loop
shlb
fcompl
aam
and
sbb
sub
xchg
insb
rcrl
mov
in
jbe
push
cmp
fcmove
shrb
fstpt
jg,pn
mov
cmpsb
scas
out
andb
jno
cwtl
scas
xor
dec
cld
inc
ret
roll
cmpsb
xor
ds
cmp
jg
add
xchg
into
add
ja
cltd
inc
fmull
and
lea
or
pop
sbb
adc
mov
lcall
hlt
in
es
es
sbbl
sbb
sarl
fwait
into
int
fidivrl
inc
lods
sbb
inc
jge
sbb
bswap
js
dec
enter
mov
jae
add
aam
push
lds
or
push
adc
jb
subb
loope
mov
inc
cmp
mov
aas
sub
mov
pop
pop
test
pop
mov
loope
mov
jne
mov
mov
xchg
push
mov
mov
cvtpi2ps
fistl
jl
or
pop
cmp
clc
lock
mov
out
and
outsb
pop
sbb
lret
sub
xchg
cmp
xor
mov
cli
aam
pop
and
pop
es
aam
lret
push
inc
test
push
into
aam
xor
adc
mov
pop
imul
pop
ljmp
mov
jbe
pushf
mov
repz
inc
insl
in
pop
cli
aad
aaa
mov
jmp
jbe
fisttps
lds
add
mov
pushf
in
inc
imul
scas
orl
xchg
fucomp
sub
cld
mov
jmp
test
inc
sub
inc
jb
imul
xor
adc
mov
roll
inc
test
add
dec
jb
inc
push
inc
jmp
loope
pushf
shll
clc
add
sbb
cmp
in
cmp
push
dec
pop
xchg
or
mov
dec
das
and
adc
push
add
iret
nop
mov
sti
std
scas
jmp
ret
mov
and
rclb
cmc
adc
aaa
xchg
test
sub
subb
aad
enter
lret
aaa
sub
in
xor
and
xor
out
addr16
jb
fwait
loopne
lcall
stos
out
fists
or
popa
adc
arpl
sub
or
rclb
and
test
jle
dec
and
hlt
lret
lock
nop
dec
inc
or
in
stos
mov
jns
popa
outsl
xchg
push
sub
nop
mov
mov
popa
in
les
xchg
mov
pop
pop
jbe
fnstcw
in
adc
mov
mov
cmpsl
cmp
cmp
lret
adc
jo
or
shl
xor
fisubs
test
into
mov
or
mov
jo
mov
cli
sti
lea
or
sub
jecxz
in
test
pop
sti
pushf
jl
fidivl
jmp
hlt
push
cld
jecxz
arpl
repz
jnp
pop
add
xor
jecxz
into
inc
dec
aad
mov
mov
xor
enter
sub
push
ret
xor
out
int3
clc
pop
pop
ret
loop
in
xchg
and
push
and
sbb
mov
xchg
mov
push
push
stc
xchg
enter
sti
cltd
insl
inc
bnd
fisttpl
mov
out
sbb
pop
cmpsb
ljmp
add
out
jle
pop
movsl
les
arpl
inc
push
add
sbb
adc
ret
cwtl
gs
sbb
bound
pop
aad
fmulp
pop
jmp
add
pop
stos
test
frstor
adc
xchg
push
mov
mov
or
dec
jle
loopne
arpl
cltd
sbb
sub
mov
xor
stos
push
pop
pop
jle
mov
sub
sti
and
shll
loop
cmp
movsl
mov
lds
fldlg2
aaa
pop
or
push
push
sbb
or
push
mov
mov
popl
xchg
loop
cli
call
add
ja
and
stc
outsb
les
lea
fs
inc
and
shl
inc
sbb
jns
add
dec
or
cmpsl
push
lret
push
lods
aas
fsubrs
jno
inc
sti
push
dec
inc
mov
push
data16
pop
stos
fisttps
jecxz
mov
idivb
xchg
mov
es
das
xor
cmp
jecxz
insl
sub
xchg
or
mov
ret
inc
mov
xor
in
push
push
pusha
or
daa
int3
rorb
int
mov
and
les
push
test
sub
daa
mov
cmp
test
cmp
cmp
xor
inc
pushl
push
and
xor
ret
enter
testl
movsb
cmpsl
mov
in
ret
jnp
pushf
stc
mov
loopne
push
scas
fdivrp
jl
movsb
lds
inc
sahf
jmp
cltd
xchg
push
mov
aaa
mov
pop
mov
insl
sub
jno
fstpl
adc
inc
or
ja
push
and
dec
test
ja
pop
push
adc
outsl
pop
out
lcall
insb
dec
jl
pop
outsl
mov
adc
jno
es
lds
ja
pusha
sbb
fnstcw
stc
cvtps2pi
jns
push
mov
sub
ret
mov
xchg
outsb
mov
dec
adc
es
mov
inc
and
ljmp
les
pop
imul
andb
loopne
in
jecxz
cmp
dec
add
push
mov
gs
jne
jns
popf
xor
mov
sti
adc
ja
adc
adc
notl
es
add
cmpsb
inc
cwtl
rorb
arpl
repz
cli
cmp
mov
lret
xchg
xchg
stos
cmpsb
add
movntps
mov
hlt
test
mov
inc
fwait
xchg
jecxz
dec
mov
test
js
ds
adc
std
int
aad
xchg
push
cmp
jecxz
xchg
sub
mov
xor
mov
jns
cmc
aad
mov
dec
out
lods
cs
fisttpl
or
mov
fiaddl
xorl
addr16
mov
scas
loop
push
inc
lods
mov
cmp
add
test
add
pop
adcl
xchg
or
int
lods
sbb
gs
ret
mov
scas
jae
out
sbb
xor
outsl
into
lcall
and
mov
std
jecxz
xchg
push
pop
push
cmp
mov
mov
les
cs
lret
dec
lock
test
cltd
push
lds
fs
push
adc
cmp
mov
add
push
sbb
and
in
jmp
jg
test
pushf
sub
jge
jle
push
push
loop
mov
sahf
insl
mov
clc
jo
push
js
call
jb
mov
push
push
ds
push
shll
cmp
dec
push
mov
push
jo
ljmp
mov
out
test
pop
ret
pusha
je
das
lret
pop
jmp
aam
shufps
notb
sar
in
cmpsb
push
pop
adc
movb
dec
xchg
push
jmp
sti
dec
jecxz
iret
and
aas
jmp
xlat
sahf
std
xor
ja
cli
ds
dec
lds
daa
jns
and
outsl
in
dec
imul
xchg
mov
negl
movsb
mov
aaa
lcall
jmp
je
addb
jbe
xor
xchg
cmpsl
call
and
xor
in
mov
in
xchg
lds
repnz
mov
sbb
test
cmp
mov
sbb
ret
mov
mov
mov
jbe
dec
test
sub
scas
lret
ficomps
push
lock
sbb
outsb
jge
hlt
sub
cld
mov
fisttpll
adcl
adc
mov
out
cmc
or
mov
jecxz
adc
lcall
addr16
out
and
outsb
push
pop
lahf
clc
push
or
sbb
addr16
leave
pop
mov
repz
inc
repnz
jae
aas
mov
movsl
cld
sbb
push
adc
dec
push
sbb
jae
mov
sahf
push
inc
or
cmp
mov
cmp
ds
out
jg
es
das
stc
pop
xor
sbb
adc
add
push
cmp
dec
dec
mov
nop
icebp
scas
push
pop
hlt
sbb
push
movsl
pop
pop
or
popf
dec
aaa
dec
xor
sbb
and
mov
mov
dec
xchg
lock
sub
sub
pop
mov
xchg
flds
jae
sub
pushf
push
inc
fmull
jbe
cmpsl
pop
mov
or
xchg
dec
lahf
test
pop
jg
sub
sub
cmp
addr16
idivl
lods
add
loop
movsl
adc
andb
add
insl
fwait
pop
pop
mov
inc
sbb
mov
xor
push
imul
cld
loop
clc
data16
lods
or
lds
pop
pop
in
adc
sarb
cmc
xor
in
movq
cmpsb
jge
xchg
fdivrs
xor
shrb
pop
js
cmpl
add
pop
sub
sub
test
mov
xchg
fidivs
push
movsl
ss
nop
sbb
dec
and
loop
push
iret
cmp
push
mov
sbb
clc
jb
jae
mov
adc
and
dec
push
jecxz
xorl
dec
je
decl
outsl
dec
es
push
push
dec
xchg
subl
cli
dec
jbe
or
mov
mov
push
lock
xor
loop
add
into
addl
xor
fidivrl
xchg
cmpsw
pushf
cs
mov
stc
inc
inc
mov
scas
xchg
add
stos
adcl
aas
cs
mov
pop
rol
movsl
and
ret
cwtl
push
jp
in
enter
inc
and
movsl
sub
insb
cltd
push
daa
mov
push
movsb
pop
cmpsb
jecxz
idivl
xor
or
imul
jg
sub
ljmp
fs
mov
jns
lidtl
lahf
scas
sahf
mov
pop
cld
push
mov
mov
xchg
outsl
add
xchg
fcmovb
inc
mov
fstpl
add
daa
divl
cld
or
stos
lcall
lret
nop
mov
fnstsw
jl
jns
sub
jp
pop
pop
adc
arpl
out
xor
sub
aaa
jl
push
xchg
std
les
das
popa
and
push
push
ss
test
leave
jnp
scas
mov
mov
xor
pop
cmp
xor
mov
adcl
add
push
test
push
mov
and
sahf
bnd
sbb
pop
mov
shll
aaa
pop
xor
sbb
nop
int3
enter
cltd
cmp
jae
enter
in
test
test
insb
sub
jl
nop
pop
fwait
loopne
jp
imul
add
xchg
push
push
out
mov
mov
mov
adc
scas
sbb
inc
loopne
lret
shr
mov
jge
inc
inc
iret
mov
pop
ljmp
push
mov
push
jno
sbb
fsts
xor
sub
xchg
aaa
or
insl
pusha
je
adc
ret
and
xor
aad
xchg
jle
fcompl
outsb
in
les
jbe
push
fldt
outsl
pop
adc
jae
xorb
imull
test
pop
xchg
aad
stos
cltd
adc
cmp
out
fcomps
dec
lods
ds
loop
pushf
cmp
pop
leave
jnp
roll
fidivrl
stos
xchg
mov
jo
out
dec
pop
lcall
or
icebp
rorl
addb
je
dec
jne
aaa
and
fidivrs
lahf
sbb
femms
xor
or
in
imul
pop
dec
adc
mov
aam
adcl
or
inc
imul
out
jb
mov
dec
push
test
adc
out
test
dec
xchg
lock
je
rcrb
xor
sahf
xchg
loopne
leave
out
and
repz
dec
push
cmc
push
xor
pop
je
pusha
sub
and
fwait
out
sbb
xchg
movsl
test
aad
outsb
jg
pop
imul
adc
jnp
repnz
stc
or
lds
ret
cld
xchg
mov
mov
aad
lahf
test
aaa
stos
pop
lods
sbb
sti
and
leave
push
or
je
mov
cmc
inc
jecxz
psrlq
shlb
mov
fldt
push
in
imul
push
lret
dec
ss
int
add
aam
mov
int
inc
test
mov
mov
add
js
jns
outsl
xor
fsubs
or
movsb
jl
rorl
les
scas
incl
and
lods
arpl
lods
or
movsb
push
sub
xor
les
dec
cmp
push
sub
push
adc
push
rorb
dec
clc
vpmacsdd
sbb
jns
push
mov
mov
lods
cmp
cmc
mov
flds
std
cmp
or
fdivrp
jno
xchg
inc
sbb
out
xor
js
jle
lock
xor
pop
jmp
inc
imul
jmp
clc
popl
jp
in
outsl
and
in
pop
and
addb
repnz
xchg
popa
jae
and
push
jb
xchg
insl
outsl
js
pop
sbb
aad
mov
dec
adc
ret
xor
into
dec
xor
xacquire
inc
out
arpl
imul
xor
adc
lds
decb
and
imul
push
sarl
jae
mov
mov
and
outsl
adc
push
pop
mov
mov
mov
arpl
mov
mov
mov
outsl
sti
test
mov
outsl
xchg
push
pushf
cli
mov
mov
push
push
imul
pop
lock
xchg
cwtl
push
outsb
call
inc
cmp
pop
xlat
not
dec
rcrl
mov
pop
sbb
add
inc
cmc
fimuls
lods
or
lret
mov
mov
add
lds
fucom
mov
mov
arpl
fists
xchg
cmp
push
shrl
push
ret
sbbb
push
repnz
outsl
dec
xor
sahf
sarb
push
mov
sbb
mov
mov
fiadds
mov
mov
sbb
fcoml
test
int3
je
shl
jle
ffree
jnp
jl
sbb
mov
cmp
mul
jle
cmp
or
pushf
or
xlat
inc
xor
xor
fcmovb
rorl
mov
in
nop
sbbb
insl
push
lods
orb
pop
adc
add
shr
movq
cli
xlat
iret
or
pop
push
lds
fld1
sbb
xchg
lods
icebp
mov
ficomps
adc
ds
push
mov
popa
imul
or
pop
stc
dec
cmpsb
fmulp
rcll
cmp
ss
addb
sarl
sub
std
gs
cmpb
pop
dec
sbb
test
inc
cmpsb
pusha
pop
pusha
mov
and
movsl
mov
pop
shl
adc
push
lret
frstor
xchg
xorl
pusha
les
mov
push
push
dec
sti
jnp
sti
xchg
loope
fldl
jmp
subl
mov
xchg
and
scas
mov
xchg
fsts
fistps
jmp
cmp
xchg
xor
sbb
addl
lcall
pop
enter
mov
data16
aad
filds
jg
and
fdivs
clc
hlt
arpl
jg
pushf
cmp
mov
fwait
sti
orb
das
fwait
jnp
int
cmp
add
sub
dec
xor
inc
pop
push
aaa
mov
fwait
jbe
xor
aas
sbb
adc
mov
mov
in
push
addr16
xchg
or
xor
rolb
sbb
test
or
daa
scas
mov
add
pop
add
push
and
popf
test
lea
dec
ljmp
and
jns
fdivp
stos
ret
lods
stos
adc
or
mov
div
scas
testb
dec
fidivl
xchg
imull
xlat
and
imulb
arpl
mov
sbb
test
jle
ret
xchg
xchg
mov
nop
ss
push
das
orl
jp
addr16
lea
and
insb
cmp
xchg
inc
fadds
cld
push
ss
push
push
fs
shlb
test
shl
ja
sbb
mov
push
into
xchg
add
jecxz
je
clc
xchg
mov
stos
aad
cmp
pop
jl
mov
js
cmc
xchg
call
mov
mov
mov
incl
fsubrs
stos
test
popa
cld
mov
xor
xchg
fucompp
add
xor
aad
iret
fidivrl
jg
or
jae
vucomiss
test
pushf
mov
stos
dec
and
and
rep
jo
dec
outsl
pop
pop
mov
scas
sti
mov
lahf
cmp
dec
loope
and
sbb
add
xor
int
lret
push
ljmp
inc
or
data16
cmp
jns
push
xor
insb
jo
popf
in
mov
arpl
mov
das
xchg
jle
shrb
aam
sbb
aas
sub
pop
lea
lds
lea
ss
sbb
pop
pop
add
mov
mov
mov
or
adcl
shlb
push
inc
out
gs
aas
and
bound
aam
in
sub
jns
push
aas
push
pop
es
sti
jle
pusha
add
pusha
push
out
out
adc
xchg
lret
jae
fwait
shl
mov
mov
pop
das
pop
push
cmpsb
xlat
mov
mov
lahf
mov
cld
inc
lods
icebp
lret
pop
cli
icebp
xrelease
addb
sbb
add
or
jns
cmpsl
divl
je
inc
mov
push
cmp
push
jbe
ret
leave
mov
jge
cmpsl
dec
in
inc
pop
cmp
ror
pop
pop
sbb
or
jne
pop
loope
cmpsl
aad
je
and
jp
lea
loopne
data16
rcr
push
xchg
dec
and
xchg
cmp
addr16
mov
push
shr
sbb
pop
gs
repnz
sub
sbb
jno
inc
mov
mov
lods
sub
dec
mov
mov
cltd
xchg
mov
xor
jnp
aad
jae
push
xchg
mov
or
xor
adc
xor
popf
xchg
scas
sub
sub
data16
dec
aaa
out
mov
movsl
mov
je
dec
mov
hlt
mov
imul
push
xchg
mov
or
push
and
roll
fcmovb
adc
push
ret
int3
dec
mov
dec
push
jo
aam
jle
les
xor
and
pop
add
pop
ss
dec
mov
xor
or
shll
call
xor
enter
cmp
aad
mov
aaa
push
testl
mov
dec
ljmp
divl
add
in
jmp
inc
mov
adc
fcoms
sub
add
xchg
push
inc
sbb
xchg
lock
cmp
cmc
push
stos
xor
mov
jnp
push
sbb
sahf
pop
pushf
push
lahf
icebp
out
inc
shll
jg
js
or
out
push
insb
lds
loop
outsl
mov
inc
mov
aam
in
out
jecxz
cmp
fnstcw
pop
jno
jnp
rcrl
jne
ret
mov
pop
test
push
and
or
insl
jae
add
stos
pop
jg
xor
and
shl
mov
lock
sub
xchg
xor
aad
cmc
pushf
push
js
cmp
bound
xsha256
cmpsb
adc
add
pop
mov
adc
js
mov
cmp
cmp
jne
cmp
inc
inc
cmc
int
ljmp
aaa
fdivrs
dec
sbb
call
dec
dec
push
sahf
jle
adc
dec
jmp
lods
cmpsl
clc
inc
jecxz
fcompl
cltd
lods
movsl
insb
fwait
pop
lods
adc
jb
push
add
fdivl
push
or
ret
push
and
lods
sub
mov
shlb
lods
push
sar
mov
xchg
adc
xchg
imul
mov
mov
mov
mov
cmp
clc
shrb
push
or
fildll
inc
push
lret
das
cltd
adc
sub
les
inc
sub
shrb
into
dec
inc
dec
addl
stos
enter
clc
inc
dec
add
add
ficoml
fs
jns
dec
adc
pop
jae
dec
scas
pop
cmp
sbb
sahf
jmp
jnp
cmp
ljmp
and
sbb
fisubs
fnstsw
insb
add
pop
loopne
sbb
cmp
mov
pop
in
lret
sub
je
rol
lret
push
mov
and
mov
cmp
sub
xor
dec
inc
int3
lret
ficomps
sub
lods
movsb
nop
loop
cltd
jl
xor
add
fisubs
fisubs
mov
inc
stc
jmp
outsl
pop
mov
call
loope
mov
aas
xchg
jne
lods
mov
xor
daa
push
repz
sub
arpl
push
fnstsw
fbstp
mov
mov
pop
rclb
out
icebp
sti
inc
dec
fwait
push
pusha
fwait
mov
fidivl
and
loope
scas
cmp
out
ja
iret
push
mov
aad
or
mov
mov
adc
push
inc
jno
and
std
insl
aam
add
mov
loop
push
lret
adc
jmp
mov
xor
cli
ljmp
pop
in
adc
mov
mov
movsb
sub
jbe
mov
pop
jns
lret
out
in
pop
pop
jl
out
sub
inc
fs
das
dec
xor
jg
xchg
xchg
xlat
cmp
movsb
dec
mov
ja
lahf
mov
sti
aam
dec
and
sbb
fnstenv
lds
fadd
je
cs
aaa
push
in
mov
cmc
adc
jmp
pusha
cmc
scas
fsubrl
out
rcrb
mov
sbb
jmp
jne
lret
xor
pop
cld
das
mov
dec
shlb
ljmp
pop
push
jl
pop
outsb
js
xor
lods
pusha
mov
mov
cmp
popf
scas
add
int3
xchg
and
les
or
stc
nop
shl
lret
lcall
cli
sub
xlat
mov
sub
ss
int
sub
push
je
fucomp
fmul
lds
lods
jl
mov
cmp
inc
or
sub
incb
jae
mov
push
int
adc
loope
fisttps
fldt
fcomip
outsl
inc
test
fndisi(8087
nop
mov
insl
movsb
push
adc
mov
adc
lahf
or
sbb
pusha
adc
jns
js
mov
in
in
shr
into
shrb
mov
add
addl
mov
cmp
mul
jne
ret
xchg
sub
pop
and
or
test
push
sbb
xor
cmpsb
jle
in
jecxz
sub
sub
enter
insb
mov
sub
daa
lea
push
test
icebp
ret
and
insb
mov
mov
cwtl
dec
jnp
scas
jge
insb
mov
jge
jmp
int
cmpsl
push
dec
adc
fistpl
mov
nop
lea
test
cld
addr16
mov
xor
les
cs
movsb
and
cmp
mov
xchg
cmpsb
sub
pop
outsl
push
mov
pop
in
mov
mov
daa
out
out
arpl
pop
push
jbe
jl
mov
orb
idivl
movb
ret
js
int3
ja
mov
cli
jp
dec
pop
pop
sub
ja,pt
aam
xchg
add
push
push
gs
sti
int3
or
ds
mov
xchg
scas
push
mov
imul
jns
add
inc
inc
mov
add
and
jns
adc
daa
imul
xchg
iret
pop
jno
out
adc
in
push
fisubs
imul
jno
pop
inc
add
xor
jmp
xor
out
jmp
nop
std
testb
xor
dec
inc
and
cmc
lea
cmp
pxor
lock
push
xchg
jne
dec
aad
inc
push
fs
out
mov
cld
sbb
sbb
push
xor
imull
arpl
shrl
push
xchg
mov
mov
push
scas
je
mov
mov
adc
and
mov
mov
xor
pop
pop
mov
mov
pusha
fwait
enter
test
xor
pop
xchg
lods
call
cmc
call
outsb
aaa
ljmp
fistpl
sbb
shll
jmp
out
and
cmp
sub
mov
popf
jnp
xor
and
cmp
jl
mov
sarl
arpl
inc
sub
fs
loopne
ljmp
daa
cwtl
or
cmp
jmp
repz
push
test
mov
push
mov
movsb
lea
push
xchg
push
add
fcoms
cmp
lahf
dec
stos
aam
xor
int
out
stos
out
insb
or
push
call
mov
dec
icebp
or
ret
int3
xchg
or
inc
cmp
int3
pop
adc
rcl
mov
cwtl
in
fdivrs
push
sarl
insb
xchg
push
xor
jecxz
xchg
push
dec
jmp
dec
cmp
xor
adc
mov
popf
pop
mov
sub
mov
addb
cmc
sbb
inc
push
push
aam
imul
or
jns
cmp
fistl
jo
add
mov
loop
and
shr
jecxz
dec
fildll
test
test
cld
pop
dec
shl
mov
mov
xchg
mov
push
stos
push
cmpsl
and
test
cwtl
jle
iret
bound
xchg
leave
add
and
fs
mov
xchg
adc
mov
incb
jle
mov
sbb
in
or
lea
in
jg
jmp
inc
enter
push
das
ljmp
sbb
sub
push
fldcw
add
shrb
and
cli
fldenv
mov
adc
aas
sub
sarb
xchg
lods
sti
xor
cs
stos
jb
insb
pusha
push
out
jbe
andl
mov
je
pop
jge
pop
stos
fnstcw
jle
mov
and
dec
faddl
sbb
xchg
pop
jns
jo
mov
push
or
xlat
sarl
addr16
xchg
aas
test
xor
imul
and
movsl
pushf
movsl
dec
sbb
jae
movsb
mov
jg
push
sti
add
xlat
enter
push
fisubrs
jmp
shrb
test
sbb
mov
aam
mov
xchg
dec
jo
xlat
cli
sub
cmp
jae
les
dec
ljmp
test
outsl
daa
int3
jns
ret
pop
sbb
xchg
pop
pop
inc
sub
ja
jle
jb
mov
daa
andl
ret
fldl
push
ds
adc
adc
pop
pop
adc
sbb
pop
ffreep
outsl
sahf
bound
jo
lret
cltd
scas
push
adcl
call
cwtl
sub
inc
or
dec
lea
xchg
pop
xchg
push
repnz
shrl
and
mov
stos
mov
mov
fnstcw
icebp
mov
sbb
pop
cmp
xchg
std
sbb
pop
or
mov
inc
jl
push
mov
ja
mov
push
movl
pop
shlb
or
jle
scas
push
cmp
cld
adc
outsl
idiv
jp
or
leave
jns
jmp
jbe
bound
or
push
std
jne
mov
lcall
mov
add
inc
sbb
sub
push
iret
sub
lahf
ret
cs
fs
push
in
and
in
mov
push
sub
mov
loopne
push
dec
je
cmp
pop
dec
jmp
adc
or
addr16
enter
add
flds
das
jne
stc
popa
add
mov
mov
bound
insb
and
dec
stos
and
pop
pushf
pushf
ret
dec
movsl
int3
add
push
int
repnz
dec
cmp
sub
mov
add
jmp
movsb
jle
mov
addl
insb
inc
jmp
mov
adc
xor
inc
popf
shr
jp
inc
gs
aas
cmp
push
xchg
add
inc
ret
out
mov
mov
fimuls
bound
push
mov
fildll
pop
outsb
scas
sub
adc
jo
mov
xchg
test
aam
pop
lret
add
cmpsl
push
insb
insb
xor
push
dec
in
hlt
es
int
call
movsb
xor
aaa
mov
add
fists
repz
add
xlat
cli
fs
daa
lds
xchg
xchg
jge
push
and
mov
cmp
lock
les
addr16
cmpsl
pop
mov
and
scas
scas
pop
sub
sub
jecxz
out
mov
daa
lds
scas
jo
cltd
mov
jmp
movsl
or
push
xchg
shl
imul
or
push
out
add
sub
movsb
xor
popa
add
in
sbb
in
dec
adc
push
fs
subb
and
fsubs
lea
psubsb
sbb
sti
push
cltd
movsl
xchg
fwait
xchg
les
clc
adc
push
push
add
jb
jae
mov
cmpsl
mov
jge
inc
cmp
sub
dec
sbb
cmp
fxch
int3
loopne
and
jno
inc
scas
nop
xchg
call
popa
cwtl
cmp
sbb
mov
es
push
test
fdivrs
and
test
mov
ret
adc
push
ret
or
iret
pop
call
mov
dec
test
fcoms
test
imul
push
jmp
push
dec
mov
outsb
out
rcrl
pop
pop
push
nop
mov
inc
inc
mov
adc
cli
cli
fmull
cli
lret
test
xor
sub
stc
cmp
mov
add
bound
xchg
dec
fwait
outsl
pop
scas
pop
adc
clc
push
add
iret
jp
mov
data16
cmpsl
call
aaa
pop
fstpt
cwtl
popa
adc
bound
std
fs
mov
cwtl
mov
int3
jl
icebp
pop
es
xchg
xchg
cmp
pusha
mov
stc
cltd
dec
mov
scas
xor
arpl
mov
lret
ret
or
lret
push
mov
aas
popf
mov
xchg
xchg
xchg
xlat
sbb
pop
pop
push
inc
cmp
in
rcr
inc
cmp
add
std
jecxz
sbb
mov
outsl
stc
inc
stc
sti
stos
add
adc
ror
inc
mov
int3
sub
out
into
lea
inc
pop
mov
cmp
cmp
lods
out
xor
xchg
dec
add
mov
lret
inc
fmul
sahf
mov
pop
mov
cmpsb
add
inc
bound
cmp
mov
dec
out
push
repnz
ss
inc
testb
cmp
and
and
sub
lock
xchg
pop
ret
cs
xchg
lea
cltd
sbb
aad
jmp
repz
imul
or
lahf
lret
inc
js
xor
in
mov
loopne
mov
adc
arpl
or
fs
mov
and
loop
test
aad
and
mov
mov
jns
dec
sbb
outsl
xchg
clc
int3
mov
subb
lods
sbb
xchg
int3
nop
lcall
pop
pop
mov
lds
mov
pop
ljmp
inc
xor
xor
inc
xor
fisubl
call
xchg
cmpsl
sub
inc
lods
jb
add
jno
ret
dec
enter
jae
jg
sub
adc
roll
or
dec
pop
out
dec
pop
fadd
test
pop
sbb
xchg
jmp
test
xor
insl
xchg
mov
adc
shlb
lock
xchg
cmpsb
mov
lcall
ss
adc
jns
cmc
outsb
hlt
sub
fiadds
add
sbbl
mov
jb
out
pop
call
dec
ror
lret
push
in
push
mov
dec
sub
push
add
and
int3
dec
add
ret
cmp
jl
rcrb
mov
leave
daa
ficompl
dec
jge
mov
push
stc
lret
jnp
pop
push
adc
push
movsl
push
fwait
jo
mov
mov
sub
adcl
mov
sub
dec
xchg
xchg
push
mov
push
leave
xor
sub
loopne
stc
aaa
aaa
andb
subb
pusha
mov
mov
pop
aaa
pop
jle
cwtl
lret
stos
jl
out
mov
in
cmp
pop
mov
arpl
dec
sub
xchg
test
mov
xchg
cmp
ret
mov
cmp
mov
shlb
sub
lock
lahf
mov
pop
jb
bound
sbb
or
pop
rolb
jne
pop
or
cmpsb
pop
aam
pop
cmpsb
or
xor
xor
mov
push
add
sti
int
xchg
icebp
push
mov
and
mov
cs
icebp
icebp
dec
mov
xor
mov
xchg
int3
push
clc
inc
pop
sub
sbb
pop
and
mov
add
test
imul
jne
mov
in
test
nop
mov
insl
add
in
test
or
cmc
mov
mov
cwtl
clc
jno
roll
cmpl
xor
addl
in
xor
push
aam
cmc
outsl
dec
test
jbe
xlat
cmpsl
bnd
lahf
pop
out
outsb
push
imul
inc
das
imul
push
subl
pop
ret
sbb
or
fsubrl
mov
mov
mov
add
cmovno
das
xchg
leave
mov
cwtl
mov
add
sub
pop
xchg
push
into
cmp
out
sbb
adc
loop
lret
inc
or
das
scas
shlb
push
pop
adc
mov
dec
xchg
mov
aad
cmp
jbe
lret
xorb
fidivrl
repz
fwait
xlat
push
sub
sahf
rorb
gs
sub
pop
rcll
pop
jmp
cmp
es
sub
add
hlt
jne
mov
lcall
jge
add
dec
pop
pop
push
sbb
test
loopne
mov
addl
andb
stos
scas
sar
out
imul
arpl
dec
push
cmp
jns
sub
out
jbe
rolb
mov
mov
inc
lret
bound
sub
das
jnp
lret
mov
ljmp
adc
add
out
aas
mov
mov
mov
lcall
xchg
popa
loope
cmp
clc
lea
aas
xlat
xor
outsl
inc
lds
adc
mov
and
aad
xor
aas
pop
push
jbe
push
adc
mov
repnz
cmpsb
movsl
mov
in
ljmp
test
or
ds
rclb
xlat
push
je
jbe
pop
dec
dec
pushl
mov
sbb
lcall
popf
jnp
push
rcr
dec
mov
lcall
dec
lret
sub
movaps
sbb
pusha
add
cld
xchg
test
push
les
mov
pop
je
aas
jle
pop
mov
jmp
test
imul
test
pop
mov
scas
clc
sub
mov
into
lods
jo
imul
xor
mov
cbtw
addb
mov
daa
imull
in
sub
sarb
into
fistpll
fwait
push
cmp
sub
fwait
mov
fstpl
add
pop
adc
or
cwtl
adc
push
pop
inc
je
and
idivl
dec
stos
aad
addb
lahf
pop
notb
sub
jecxz
push
dec
sbb
fiaddl
jmp
mov
sub
fwait
mov
xchg
in
rcll
mov
sub
sub
fld
push
sub
pop
mov
inc
mov
dec
hlt
adc
sub
sbb
sub
leave
clc
or
sbb
loop
xchg
or
test
in
jmp
scas
cmpsl
test
xchg
je
cli
mov
dec
inc
sbb
test
xchg
adcl
aaa
dec
push
mov
inc
imul
aas
daa
jge
pushf
sub
push
and
ficoml
sbb
jbe
icebp
or
push
out
xchg
aaa
mov
mov
adc
je
push
and
or
jge
in
mov
lret
cs
mov
stos
movsb
jecxz
xchg
stos
filds
sub
dec
in
jnp
or
push
push
xor
lock
jo
test
in
imul
out
popa
adc
xchg
push
jl
fwait
imul
jae
and
mov
cmp
jo
adc
ret
jp
aas
or
mov
neg
mov
mov
adc
insb
add
mov
hlt
xor
in
xchg
std
inc
xor
insl
inc
lret
adc
stos
sti
lods
mov
mov
loope
or
add
add
shl
and
push
mov
sahf
ljmp
mov
lea
out
pop
sti
shrb
rcll
pop
and
insb
pop
cmpsb
lcall
fisubrs
shrb
pop
fwait
adc
sti
mov
cmpsb
es
mov
je
inc
imul
aad
data16
mov
jp
scas
sub
fcoms
push
stc
enter
lret
pop
and
inc
cmc
sub
jae
mov
pop
pop
mov
adc
push
cli
mov
insb
cmpsb
xchg
ret
cld
and
notl
lods
out
add
iret
pop
push
sub
xchg
push
xor
sbb
and
outsb
nop
out
dec
insb
jb
add
bound
push
pop
pop
push
add
push
mov
pop
std
stc
xor
fwait
mov
pop
das
cmp
pop
adc
sti
sub
repz
mov
xor
add
dec
adc
out
cmp
out
pop
push
lods
dec
fwait
mov
inc
mov
adc
dec
ja
mov
cld
mov
mov
in
and
vmovhps
jecxz
push
xacquire
xor
mov
push
mov
lret
sbb
jo
pop
sub
lods
fnsave
daa
sahf
adcl
lret
xor
xor
fisubl
xor
or
lods
sub
in
test
loope
mov
les
addr16
imul
xchg
jecxz
clc
pop
xchg
pop
loope
out
and
std
cmp
mov
fsubl
paddw
pop
jb
js
outsl
popf
mov
add
sbb
dec
mov
jge
fstpl
jae
in
aam
ljmp
loopne
loopne
inc
sub
mov
outsb
addr16
push
pop
aad
xchg
cmp
add
mov
add
jnp
lods
int3
jmp
scas
jg
lahf
pop
and
and
stos
mov
cltd
les
sub
xchg
fsubs
mov
leave
add
xchg
mov
js
nop
fwait
mov
mov
adc
sub
mov
mov
mov
daa
stos
cmp
cmpsl
sbb
jo
ds
push
pop
pop
mov
test
mov
je
sub
bound
xchg
fcmove
loopne
addb
push
ja
xor
mov
pop
mov
sbb
ret
nop
mov
mov
push
call
lahf
ss
xchg
ss
lea
sahf
stos
fwait
pop
clc
std
xorb
sbb
imul
adc
arpl
mov
cld
jnp
mov
mov
or
xchg
dec
sub
insl
cmp
mov
mov
and
mov
rcl
fsts
int
mov
ret
cmpsl
and
cmp
and
xchg
and
arpl
add
es
es
mov
int
vsubss
dec
mov
jo
or
out
cs
mov
pop
dec
in
ss
sbb
cli
or
xlat
in
sub
mov
sarb
add
push
lahf
popf
lds
out
jl
sbb
mov
popf
cmpsl
sbb
xchg
cwtl
sarb
js
addr16
cwtl
push
popa
add
xchg
adc
mulb
cwtl
xchg
mov
xchg
dec
mov
pop
fs
shrl
lds
pop
in
bound
xchg
leave
xchg
mov
sbb
popa
mov
mov
mov
xlat
push
lcall
pop
cmc
add
mov
jecxz
sti
fbld
call
popl
push
popf
dec
out
test
xchg
cld
xor
push
rcrb
cmpsl
jb
push
cs
mov
pop
out
sbbb
scas
pop
aaa
jmp
out
aaa
xor
xchg
ret
icebp
xchg
fistl
inc
push
es
inc
xor
xor
sbb
fwait
or
or
or
in
into
xor
lea
int
and
inc
cmp
jp
pop
mov
or
std
cmpsb
bswap
test
xchg
push
test
stos
dec
addr16
outsl
pop
aad
add
dec
insl
fimull
cmpsl
lcall
lret
lahf
inc
jmp
mov
and
call
jle
mov
in
loope
sub
lcall
mov
mov
pop
imul
jmp
inc
cli
xchg
dec
sti
das
mov
push
and
cmp
jge
out
mov
cmp
or
std
int3
adc
sbb
je
sub
ret
mov
adcl
push
dec
cli
xchg
push
js
sbb
mov
mov
lret
pop
push
adc
scas
jl
arpl
pop
lret
dec
cmc
and
scas
xor
and
dec
sub
xchg
mov
mov
lret
mov
nop
sbb
ret
inc
push
jmp
adc
cli
and
loope
jne
ss
dec
jo
cwtl
imul
in
stc
mov
xor
pop
mov
sahf
add
ds
js
fnstenv
jp
in
and
sub
cld
pusha
fldt
mov
add
into
mov
movsl
ret
inc
or
addr16
movsl
xchg
push
push
shl
push
add
sbb
ja
aas
imul
pop
stos
mov
dec
xchg
xor
sahf
int
stc
xor
lcall
add
push
sbb
shrb
fisubl
dec
xor
cmp
pop
or
sub
mov
arpl
dec
xor
lock
cwtl
xor
jno
out
ficompl
pop
adcl
cmp
hlt
cs
out
fs
ret
sub
dec
cmp
test
adc
inc
int
in
add
adc
paddsw
loopne
xor
xchg
push
test
mov
mov
mov
aas
outsl
inc
leave
xchg
xchg
xchg
add
loopne
dec
jmp
xchg
dec
xchg
or
data16
int3
jne
fwait
jne
adc
faddl
dec
or
leave
sub
sub
sub
ljmp
adc
decb
fwait
sub
hlt
lea
adc
pop
outsl
lods
pop
adc
iret
mov
dec
cmp
rcll
dec
rolb
jbe
mov
jmp
and
ss
push
bound
or
mov
lahf
repnz
mov
cmp
add
add
adc
fdivs
or
fildl
stc
push
cld
mov
imul
push
push
dec
shlb
fs
bound
incl
xchg
and
dec
fnstcw
out
or
mov
aam
ficoms
movsb
mov
push
into
pop
enter
fldt
test
pop
cmp
fiadds
jg
adc
mov
orl
stc
ja
push
push
lret
jno
jnp
mov
leave
xchg
add
cmp
hlt
cmc
jae
mov
outsl
adc
divl
xchg
xor
xchg
subb
add
dec
sbb
pop
inc
lret
das
and
sahf
lahf
fstps
xchg
ja
or
addr16
inc
xor
fidivrl
push
andb
aaa
sub
cmpsb
ret
push
int
jno
cmp
repnz
test
test
sub
pop
test
mov
jnp
jne
xchg
scas
rorb
xchg
or
repnz
cld
mov
add
stos
pop
cmp
ljmp
pop
mov
fistpl
and
iret
fdivs
adc
pushf
sti
test
imul
mov
pop
in
data16
gs
xor
pushf
push
movsl
sub
into
and
out
in
cltd
enter
push
lods
xor
fcoml
outsb
clc
rclb
arpl
les
lock
or
inc
or
hlt
xor
pop
popf
test
in
jns
inc
aaa
les
mov
cli
add
outsb
shll
or
scas
cltd
jecxz
fmull
lods
pop
in
lea
ret
pop
mov
outsl
xchg
cli
dec
clc
aam
add
fidivrl
cmpl
out
fnstsw
insb
jns
lock
cmp
lock
pop
mov
insb
push
in
in
push
pop
mov
ss
mov
lret
sbb
pop
nop
dec
ljmp
xor
pop
in
shrl
adc
fidivrs
inc
sub
push
cwtl
xchg
and
pushf
sbb
ror
je
bound
lds
std
mov
loope
inc
and
mov
clc
test
sbb
jg
pop
xchg
mov
pusha
sbb
mov
pop
push
jbe
push
xor
mov
xor
sarl
xchg
xchg
enter
jl
push
in
hlt
movsb
pushf
pop
lea
jb
int
subl
pop
or
shlb
xor
aaa
jbe
add
fldt
outsb
loop
movsb
dec
cli
jle
daa
in
es
xor
sub
sbb
ficoml
xchg
addr16
cmp
out
addl
push
sub
cmpb
dec
push
xchg
out
lret
push
clc
and
shl
push
dec
shlb
mov
push
adc
add
in
pop
xchg
mov
cmpsb
pushl
in
enter
jecxz
repnz
imul
and
imul
jae
int3
jae
fldcw
aas
mov
jb
cmp
jl
push
scas
ljmp
lds
mov
iret
movsl
aaa
test
mov
push
enter
and
xchg
outsl
push
dec
je
jnp
int
out
rcll
call
pop
sbb
aaa
push
stos
jg
rcrb
test
cmp
sbbl
push
mov
pop
push
mov
bound
test
push
jns
or
fisubrs
xchg
dec
pop
fiaddl
lods
rcrb
ja
adc
das
cmp
arpl
loopne
lock
adc
mov
leave
jmp
xorb
mov
fistpll
hlt
xchg
mov
jno
dec
add
jge
mov
sbb
lcall
in
push
add
mov
jmp
pop
pushf
outsb
fnstsw
outsb
scas
cmp
dec
jmp
cld
adc
mov
arpl
jne
dec
add
mov
dec
jb
jmp
xor
jno
mov
les
jae
sub
in
setb
xor
repz
ret
fcoml
mov
in
ficompl
mov
fsubs
fldt
xchg
inc
xlat
icebp
mov
pop
mov
dec
out
mov
fstp
or
jl
imul
les
popa
push
and
stc
cmp
out
push
repz
sbb
and
push
cmpsb
cmpb
subl
xor
xchg
or
faddp
sbb
daa
int3
inc
gs
sub
insl
sbb
xchg
lock
cmc
sbb
xor
inc
xchg
icebp
fisubrs
movsl
test
enter
jb
jl
dec
push
lahf
jl
inc
mov
loop
andb
push
paddw
scas
xchg
mov
pop
fdivrs
cmp
aad
shll
mov
fwait
movsb
aas
mov
jnp
in
push
adc
rcll
cmp
gs
xchg
mov
daa
cltd
mov
dec
dec
cwtl
fucomp
out
lea
xchg
lea
in
mov
push
push
jae
sbb
hlt
stos
popf
stos
mov
dec
jmp
push
enter
pop
xchg
std
cmc
test
int3
into
add
add
and
add
push
sbb
mov
jmp
and
push
pop
fs
mov
jmp
dec
test
dec
push
pusha
jle
xchg
aad
cltd
push
cmpsl
pop
ljmp
push
test
mov
mov
in
rorl
imul
sub
inc
and
mov
pop
mov
xchg
pop
ficoml
sbb
data16
iret
andb
push
in
insb
cmp
jne
push
daa
fcmovu
push
cmp
add
mov
sbb
inc
std
pop
les
negb
jecxz
out
sub
jns
clc
rcr
inc
xlat
push
lcall
pushf
mov
adc
in
aad
subb
andb
lods
jnp
mov
rcr
adc
ds
push
decb
xchg
sbb
sub
add
and
add
ljmp
scas
mov
xchg
dec
dec
mov
mov
mov
addl
fldt
xchg
out
rol
push
xchg
cmpsb
pop
mov
stc
sbb
sub
scas
push
leave
in
pop
xchg
adc
sarl
add
int3
cmp
cwtl
adc
mov
pop
mov
sbb
les
adc
push
shll
nop
or
mov
into
ret
sub
aaa
inc
test
popl
sahf
xor
pop
cltd
add
push
and
mov
std
push
jle
call
ljmp
lcall
xchg
pop
mov
pop
inc
les
dec
pop
and
stos
xor
scas
shlb
add
xchg
ss
mov
push
xchg
xor
mov
dec
push
leave
push
add
ja
xor
scas
or
mov
subl
out
adc
xchg
xlat
inc
sub
in
mov
sub
pop
mov
dec
jns
lret
xchg
inc
gs
mov
sbb
mov
adc
sbb
faddl
jle
cld
jmp
popf
lods
test
push
cmp
js
ret
cmpsb
leave
mov
xor
mov
pop
ljmp
ret
call
adc
pop
icebp
dec
jb
lock
jp
add
push
andb
das
mov
sub
fbstp
lret
sbb
ja
mov
inc
aas
xorb
jmp
lahf
and
jmp
sarl
andb
fbld
inc
fnstsw
jle
fdivrs
orw
mov
jb
xor
fadd
add
out
rclb
dec
add
call
enter
adc
cli
fwait
push
sahf
jne
inc
imul
jmp
imul
aad
and
popf
divl
out
sbb
mov
mov
or
inc
or
jae
out
xchg
sub
jle
jmp
jno
push
mov
adc
and
std
lods
mov
or
test
pop
inc
push
inc
outsb
pop
mov
ficompl
xchg
test
movl
add
out
xor
mov
sti
jg
add
call
repnz
mov
icebp
xchg
adc
loope
enter
mov
or
iret
sub
or
leave
scas
jp
inc
popa
pop
in
shll
dec
ja
sbb
jmp
nop
push
xchg
xorb
lcall
addb
adc
cmp
ljmp
test
dec
jbe
mov
mov
sahf
jmp
sub
jnp
rorb
lea
or
imul
cltd
mov
in
leave
dec
or
test
jge
flds
insb
cmc
adc
unpckhps
mov
mov
mov
sahf
pop
ror
adc
addl
arpl
mov
mov
test
push
mov
repnz
dec
xchg
in
rcrb
jge
repnz
lret
cmp
sbb
push
pop
xorb
push
fiaddl
or
add
and
cs
popa
std
mov
pop
dec
mov
fidivrs
sub
cli
icebp
adc
shll
jns
ljmp
push
jb
mov
out
pop
push
pop
pop
outsb
mov
jmp
mov
test
and
and
pop
push
mov
cmp
push
out
loope
js
lret
fisubrs
rcl
ror
pop
adc
mov
inc
fdivrp
movsb
sub
adc
jle
push
das
adc
out
out
shrb
sbb
jp
pop
inc
loop
movl
xchg
out
ljmp
mov
lock
fistpll
mov
rcll
in
push
cmpsl
rcll
mov
pop
inc
cmp
repnz
inc
int3
arpl
add
cmp
mov
mov
push
lret
jl
inc
xchg
aad
fsub
movb
pop
mov
ds
cld
ja
push
rclb
sub
nop
push
pop
mov
xchg
popa
aad
cmp
and
mov
or
inc
bnd
push
jecxz
mov
sub
jge
into
jb
adc
fisubs
mov
dec
push
mov
rcrl
mov
mov
jno
popf
mov
sbb
mov
xor
adc
fucomi
sub
xchg
mov
inc
hlt
mov
cmc
je
xchg
push
lods
sub
cmpl
xor
ds
lods
inc
jo
cltd
movsl
jg
mov
shl
cmp
sbb
pop
add
fiaddl
mov
mov
dec
push
push
in
sbb
jns
insb
inc
mov
loopne
push
dec
push
pop
jle
sbb
inc
pop
inc
es
fcoms
xor
fidivrs
inc
into
das
pop
sbb
insb
in
mov
push
es
mov
cwtl
ja
pusha
jb
push
and
out
jb
adc
xchg
testb
pop
sti
aam
push
or
lahf
xchg
or
push
or
daa
or
mov
inc
in
cmp
insb
mov
mov
mov
mov
sbbb
xchg
ret
mov
hlt
or
push
rolb
push
or
sbb
outsl
push
cwtl
mov
lods
sbb
inc
push
outsl
mov
popa
mov
int
stos
or
lret
or
repnz
jmp
xor
jbe
sub
mov
cmc
mov
decl
insb
loopne
leave
jmp
je
xor
sub
movsb
leave
cmp
xchg
jb
push
jle
or
shl
data16
ss
scas
sbb
cwtl
insb
arpl
mov
int
mov
in
lods
xlat
adc
pop
cltd
adc
andb
testl
outsb
pop
push
xor
and
add
lock
xchg
dec
loop
fsubrl
nop
mov
and
das
mov
sbb
or
testl
stc
or
xor
pop
ja
in
fnsave
adc
icebp
bound
outsl
jnp
imul
or
lret
cs
xor
pop
push
nop
pop
cmp
and
lods
scas
out
sbb
mov
jns
adc
xchg
mov
mov
ficoml
out
imul
ret
pusha
inc
popf
mov
xlat
andb
ss
sub
push
jne
sub
leave
inc
dec
cs
xchg
inc
push
lahf
sbb
in
xlat
jecxz
pusha
inc
mov
inc
out
push
or
xchg
jge
adc
xchg
loop
push
jmp
movsb
ljmp
xchg
pop
sti
sub
pop
js
xchg
dec
mov
pop
imul
pop
sub
jmp
ja
mov
pop
pop
iret
jbe
lcall
inc
xor
sub
addr16
cmp
inc
sub
xlat
mov
sbb
fisubl
orb
mov
and
cs
aas
or
sbb
sub
out
adc
and
out
xchg
mov
add
out
pop
int
adc
adc
mov
mov
pop
sbb
and
jne
mov
add
mov
call
mov
testb
fs
andl
rclb
aas
and
cs
xor
cli
fnstenv
pop
adc
leave
mov
pop
fildl
js
mov
xchg
stos
inc
jecxz
xchg
mov
ljmp
adc
or
xchg
jne
scas
xchg
mov
fldl
sbb
push
scas
mov
cmp
push
jl
pop
inc
pop
mov
push
mov
sub
aam
out
jmp
fucom
mov
outsb
ret
sub
in
aas
dec
je
aaa
cmp
out
imul
jl
roll
pushf
mov
std
mov
iret
mov
sbb
and
lock
add
daa
cmpsl
or
inc
aad
dec
mov
ret
inc
xchg
sbb
adc
cli
pop
adc
push
sbb
test
adc
jb
mov
and
xchg
inc
fwait
cs
xor
lret
cli
adc
xchg
shl
fcmovne
mov
mov
mov
add
insb
jae
push
arpl
xor
cmpsl
and
adc
xchg
pop
push
adcl
pop
lahf
mov
movsb
dec
aaa
aas
fildll
push
incl
jno
adcb
and
pop
dec
stc
fstpt
mov
ret
lock
or
or
pop
ret
fs
dec
xorb
sub
sbb
xchg
push
fmull
adc
stos
xchg
mov
daa
or
shll
movsb
aam
push
mov
cmpsb
lret
xor
rcr
shl
cmp
mov
std
sbb
dec
mov
adc
pusha
sbbl
push
lcall
push
iret
ja
fmuls
outsl
scas
pop
jmp
repnz
mov
sub
mov
repz
jmp
fldenv
aad
xchg
ret
push
sbb
inc
clc
out
add
stc
repz
in
out
jg
mov
mov
lcall
xor
insb
mov
add
insl
outsb
and
lahf
les
adc
orb
sbb
ret
addb
mov
add
sbbl
addr16
ficoms
and
and
or
sub
push
fs
mov
jae
pop
mov
add
sub
mov
enter
cmp
jo
out
xchg
mov
cmp
push
rol
push
push
aam
xorl
adc
jmp
inc
lods
mov
notl
iret
andb
dec
dec
dec
repnz
and
jbe
adc
add
in
lods
jmp
cmp
jns
and
sbb
mov
mov
leave
jmp
mov
push
loope
or
jge
daa
pop
cmp
gs
in
sub
in
jns
lret
imul
test
subl
push
dec
iret
pop
std
hlt
fwait
loope
movsb
push
inc
or
fists
xor
mov
lods
iret
lahf
nop
mov
pop
jecxz
xor
mov
lea
push
jne
pop
popf
lret
cmpl
sbb
jge
out
cltd
cmp
and
jne
enter
ficompl
adc
xchg
mov
push
jnp
sbb
int3
test
lret
jl
mov
sub
int3
call
int
fmuls
or
dec
data16
fwait
aas
adc
aaa
ja
cltd
mov
cld
fcomps
cli
inc
sarl
mov
out
mov
mov
scas
push
outsl
push
loope
xchg
add
xor
mov
mov
sbb
out
dec
lret
sub
out
adc
cltd
push
loop
out
push
cmpsb
ja
and
test
js
daa
inc
bound
mov
add
jge
add
dec
jae
push
out
xor
jp
sub
insl
les
mov
shrb
outsl
stc
push
fsub
test
dec
lock
cmp
loop
lods
lds
loopne
mov
daa
outsb
rorb
jl
mov
test
js
into
xchg
pop
stos
loope
jge
sub
sub
cmp
insl
or
adc
outsl
mov
push
paddusb
sbb
fstp
movl
mov
mov
ja
lock
daa
cld
jl
xchg
rorl
pop
sub
iret
nop
dec
dec
in
or
es
das
adc
jl
mov
mov
pop
jmp
xchg
lds
hlt
cmp
xor
sbbb
sub
xchg
inc
or
mov
and
fisubrl
xor
inc
pop
sbbb
out
mov
mov
les
lahf
xlat
xchg
aaa
mov
into
iret
sbb
aam
mov
scas
mov
sbb
pushf
in
mov
xlat
loopne
cmp
jmp
fcmovu
xchg
or
adc
aas
or
pop
sbb
pop
subb
scas
jp
cs
inc
ret
xor
inc
mov
jg
jecxz
pop
push
out
push
lods
xchg
push
push
pop
cmp
neg
or
jne
mov
mov
inc
rcll
or
sbb
jecxz
or
xor
imull
outsl
mov
sbb
pop
jl
push
xlat
clc
cmp
mov
popf
adc
mov
repz
je
add
lahf
pop
mov
jno
xchg
shrb
and
xor
mov
sbb
push
fcmovnb
decl
sub
out
mov
stc
fistl
push
call
idiv
cmp
in
add
xor
lea
int3
jo
and
jge
xorb
arpl
push
push
fmull
in
stc
and
dec
and
xchg
frstor
mov
mov
dec
push
jp
cmc
pop
cmp
ret
ret
imul
rcl
jle
mov
xchg
scas
mov
mov
inc
dec
xchg
push
xor
sub
mov
pop
call
in
rolb
push
lock
and
or
or
mov
push
push
or
dec
push
adc
xchg
arpl
push
cmp
iret
xor
pop
jl
mov
icebp
and
clc
dec
loop
stc
push
adc
jmp
sarb
fists
adc
jge
lret
jecxz
sbb
mov
pop
add
or
jns
out
popf
out
or
adc
xchg
xchg
mov
push
js
nop
clc
sbb
mov
adc
xchg
dec
dec
xchg
icebp
das
xor
pop
push
inc
mov
daa
pop
jno
push
enter
add
pusha
or
test
test
rcl
lcall
cmc
orl
js
or
loopne
dec
sets
insb
std
mov
js
or
jns
imull
mov
add
ljmp
lret
dec
cmp
rcrb
pop
dec
imul
mulb
negb
inc
mov
push
inc
orb
ret
and
mov
jne
roll
inc
jmp
mov
es
or
scas
js
and
nop
mov
sahf
dec
xchg
loopne
ljmp
inc
insl
out
aas
das
outsb
xchg
leave
lret
mov
or
in
int3
dec
fs
lret
bnd
fmulp
dec
sbb
lsl
dec
pop
inc
shrb
cmp
aad
jp
arpl
cmp
xchg
lds
xor
outsb
iret
pop
or
adc
add
dec
addl
imul
inc
dec
cmpsb
rcrb
int3
testb
aas
sub
icebp
ss
punpcklwd
rclb
pushl
jge
test
cmp
mov
mov
xor
ret
stos
mov
imul
dec
movsl
imul
cwtl
jnp
sbb
loopne
and
subl
push
mov
out
js
ds
sarl
sub
mov
mov
inc
subl
cld
and
lods
xchg
jl
je
xor
xor
xor
ss
mov
mov
xor
jnp
mov
mov
lret
inc
xlat
andl
out
cmpsl
push
jo
pop
inc
test
gs
outsb
xchg
fistps
mov
sub
pushf
adc
das
lock
or
fisttps
and
cmp
mov
mov
repnz
xor
shl
addr16
adc
fsubrl
sbb
in
lods
outsl
or
mov
sbb
movsb
sbb
mov
jno
inc
mov
mov
fsts
insb
jge
push
and
fwait
jo
mov
rorb
stos
fsts
inc
mov
jp
loopne
out
mov
xor
cltd
sbb
and
jg
jecxz
int
ds
repnz
jp
test
popf
jno
out
adc
adc
scas
bound
xchg
gs
sub
int
in
cmp
jg
push
pop
xchg
sub
mov
ret
sti
pushf
loop
dec
roll
fsubrl
xlat
push
in
sbb
mov
or
jno
dec
leave
and
lods
fisubs
in
fisttps
jbe
jecxz
icebp
lds
push
femms
sbbl
mov
shl
mov
sbb
xlat
jo
enter
fs
in
sub
sub
scas
test
mov
pop
aas
adc
adcb
roll
out
xor
shll
scas
jns
pop
xchg
pop
or
sbb
xor
and
insb
into
dec
xor
movsl
push
adc
and
out
call
cmp
add
jno
ljmp
ljmp
xor
dec
pop
in
add
push
std
and
rcrl
xchg
imul
test
xor
sub
std
stos
cmp
fadd
jno
fwait
fwait
scas
sub
cmpsl
arpl
popf
mov
cmp
test
popf
rcrb
push
adc
add
sub
js
jle
popa
mulb
leave
pushf
cmpsb
lret
shlb
adc
popf
mov
sub
jnp
ljmp
mov
clc
sub
sub
dec
in
pop
aas
out
imul
mov
out
xchg
push
mov
fwait
jmp
mov
daa
int
lret
loope
inc
pop
lahf
adc
vsubsd
cmpsb
sub
repz
or
mov
cmp
call
cmp
mov
sbb
mov
movl
outsb
mov
mov
js
inc
pushf
int3
and
mov
mov
jp
push
xor
sbb
aad
push
test
xor
mov
out
lds
out
stos
sbb
pop
data16
mov
adc
nop
or
dec
mov
cwtl
popa
mov
test
push
lret
jmp
xor
mov
push
pop
ret
xor
add
das
mov
cltd
xchg
mov
xor
inc
sbb
test
xchg
sub
and
mov
mov
dec
loop
es
int3
push
pop
rclb
mov
ljmp
int3
inc
pop
fmull
clc
icebp
push
test
jae
out
pcmpeqw
outsb
add
adc
jmp
rclb
leave
add
adc
xlat
pop
divb
adc
sbb
jecxz
repnz
jo
mov
jmp
imul
addl
rclb
or
mov
es
dec
ret
rcl
aas
fdivs
pop
movsb
push
fldl
leave
into
sahf
push
mov
es
ficoms
cmp
fs
cmp
pop
es
pop
lahf
mov
rcl
xchg
and
popf
cmp
inc
pop
pop
xchg
xchg
pop
mov
outsb
fimull
les
imul
xor
cmc
es
xchg
xchg
dec
and
sarl
xchg
jl
mov
or
fisubs
nop
adc
test
lea
jge
jmp
iret
xor
push
or
fsubs
mov
popf
mov
les
mov
je
mov
lcall
fildll
loopne
or
sbb
inc
cmp
xchg
mov
lcall
pushf
jb
ja
push
jge
rcll
aaa
jns
aaa
arpl
fsubs
pop
sti
dec
stos
cs
das
mov
xchg
sbb
mov
filds
loope
pop
inc
or
notl
cwtd
mov
pop
jp
stos
inc
jl
lcall
xchg
push
sbbb
ja
insb
xchg
jb
out
inc
pusha
add
cmpsl
pop
cmp
sub
aam
sbb
je
jno
out
mov
popa
cwtl
insl
xchg
xor
shr
adc
movsl
adcl
movsb
xor
xor
test
mov
push
mov
sub
add
shrb
cltd
inc
shll
add
out
lret
xchg
ret
sbbb
icebp
fcoml
test
dec
sbb
inc
shlb
mov
mov
mov
pop
xchg
dec
add
mov
int
and
repz
cmp
insb
jmp
imul
adc
add
movl
orb
cs
stc
test
sbb
push
and
mov
push
mov
pop
shlb
cmpsb
das
sbb
dec
push
and
iret
stc
pop
pop
xchg
mov
dec
push
out
fnsave
adc
adc
inc
aad
inc
sub
add
mov
in
lret
imul
adcb
iret
mov
stc
xor
xor
mov
scas
lods
outsb
lcall
mov
pop
pop
adc
test
scas
sarl
cs
into
loopne
adc
outsb
fisttps
lea
daa
mov
adc
daa
sti
sbb
test
jp
jge
in
clc
outsb
inc
out
fwait
pop
inc
jae
jbe
sbb
adc
cmpsl
and
in
notb
mov
popa
push
jne
inc
mov
fiaddl
xor
pop
xlat
jo
mov
xchg
cmc
and
out
sub
push
scas
add
je
movsl
fsubs
lock
test
arpl
mov
xchg
mov
jp
test
mov
frstor
lds
pop
lahf
add
out
lock
push
xor
iret
pop
mov
shr
push
iret
pushf
adc
int3
mov
enter
aaa
push
stos
mov
in
cltd
popf
negb
lret
or
jb
popf
popa
insb
mov
test
jg
or
push
out
ja
loope
sbb
sub
sbb
maxps
addb
push
jo
mov
mov
test
inc
sbb
xor
adc
lcall
ffreep
les
inc
mov
out
inc
xchg
push
jns
rclb
dec
rorl
int3
or
and
mov
lret
mov
sahf
stos
arpl
mov
pop
jns
mov
sub
aas
xor
pop
ljmp
cmpsl
xor
pop
lahf
pop
lods
loopne
movsl
leave
cmp
adc
inc
mov
dec
sub
fcoml
test
pop
inc
jb
ljmp
adc
sub
sahf
xor
xchg
jns
cmp
pop
jp
popa
inc
xchg
test
bound
test
pop
rcrl
and
mov
jp
mov
jo
cmp
stos
inc
add
test
addr16
pop
cld
add
jmp
push
ja
inc
lds
xchg
jg
subl
cmpsl
inc
jge
jbe
jg
cmpsb
jp
aas
lahf
test
rcrl
fs
add
sahf
cmpsl
sub
mov
mov
shlb
cmp
cmpsl
aam
pusha
and
dec
cmp
push
pusha
in
mov
pop
pop
mov
xor
xchg
fwait
in
imul
dec
mov
test
leave
scas
inc
mov
mov
jp
leave
sbb
lea
pop
mov
negb
loopne
pop
sbb
icebp
jl
leave
fwait
pop
dec
sbb
xor
xor
test
mov
mov
in
xchg
test
mov
mov
sbb
add
fld
sub
push
fwait
ror
jmp
out
mov
outsl
mov
mov
popf
addr16
shlb
pop
dec
mov
daa
hlt
xchg
fisubs
pop
sbb
icebp
adc
roll
cmpsl
je
cmpsb
pop
stos
mov
mov
fcmovnu
inc
dec
lcall
xlat
jns
rcl
and
shll
icebp
fcomip
insb
lock
mov
out
dec
fisubs
roll
push
push
sbb
sahf
sahf
repnz
xchg
mov
mov
ljmp
xor
sub
repz
push
cs
iret
adc
push
mov
inc
cmp
mov
outsl
push
into
ret
jge
adc
sub
mov
mov
xchg
push
cs
jnp
stc
stc
pxor
test
adc
enter
negb
add
aam
fbld
nop
out
inc
xchg
sub
pop
push
jbe
cli
leave
imul
pop
add
inc
push
dec
int3
rorb
fucomi
or
mov
mov
mov
and
and
hlt
sbb
aam
pushf
decl
mov
sub
xchg
jns
pop
lods
push
add
daa
cmp
jne
mov
mov
test
xlat
inc
dec
mov
push
xor
push
sub
clc
pop
leave
add
ret
ss
shll
xor
dec
mov
push
add
add
outsl
popa
mov
jbe
ds
add
int3
and
cmp
mov
popf
pop
cmpsl
dec
inc
mov
outsb
mov
cmp
sbb
xchg
cld
sub
lret
sub
adc
xchg
les
fdivrs
lods
test
push
lret
andb
xchg
adc
mov
xchg
mov
in
adc
loop
dec
out
test
mov
cmpb
push
pusha
dec
lcall
xchg
jne
jl
mull
pop
jae
insb
jl
push
fisttps
xchg
pushf
stos
dec
rcrb
sub
sbb
lods
xchg
scas
mov
push
cli
sahf
mov
cs
jecxz
cmp
gs
pop
xchg
jmp
mov
inc
or
jp
pop
pop
push
lret
and
sub
ret
mov
mov
or
jle
movsl
scas
sub
sbb
pop
xchg
test
fs
fadd
ret
mov
in
mov
ja
or
mov
xchg
mov
cltd
cmpb
fistpl
movsl
xor
loopne
dec
enter
imul
cmp
mov
xor
nop
push
insb
insl
or
rorl
cmpsb
popa
call
rclb
cmp
shl
loopne
mov
iret
mov
lds
es
push
push
jno
je
xor
jl
mov
test
shll
cmp
mov
dec
bnd
cmpsl
push
std
lret
xor
push
mov
or
bound
push
out
outsl
lahf
mov
mov
mov
jge
test
int3
out
or
mov
pushf
ljmp
lret
dec
jo
insb
mov
sub
je
rclb
cmp
mov
adc
flds
fldcw
fs
and
loope
add
add
sahf
adc
aas
and
sub
mov
rorb
ret
aas
and
aas
inc
add
shrb
in
xchg
push
repnz
dec
pop
mov
mov
test
and
rorb
xchg
xor
sub
pop
testl
xor
sbb
addr16
mov
adc
inc
adc
cli
imul
dec
and
mov
mov
cmpsl
dec
std
jg
fs
sbb
cmc
mov
mov
cwtl
cmp
daa
wrmsr
iret
in
test
scas
lock
clc
inc
das
mov
pop
mov
pop
mov
addr16
cwtl
lock
pop
mov
jns
or
aam
and
jge
cmp
nop
shll
mov
jae
mov
test
loop
int
cmc
sub
cmp
push
cs
pop
repz
jb
cltd
fs
jb
sbb
jae
add
xchg
insb
aam
sub
pop
pop
inc
cmp
or
mov
add
jg
jecxz
mov
cld
push
xchg
xchg
jmp
dec
adc
arpl
push
mov
dec
mov
cltd
mov
shlb
inc
ja
sub
mov
mov
insb
ret
dec
and
and
and
fstpt
loope
mov
push
xchg
fs
lahf
sbb
mov
dec
sbb
fldl
mov
arpl
fidivs
dec
xor
fimull
cmpsl
or
jle
lahf
mov
jbe
ja
imulb
cs
sub
pop
imul
add
cwtl
dec
or
and
pop
cmp
sahf
xchg
pushf
shlb
mov
jmp
lahf
sub
dec
aad
sbb
sbb
js
mov
movsbl
sub
or
add
cmpsb
rcrb
pop
out
adc
sbb
xlat
mov
xchg
sbb
jp
pop
mov
lea
pop
andb
adc
iret
mov
adc
dec
in
jo
mov
push
in
stos
mov
fists
out
sub
xor
gs
scas
or
cs
jl
dec
idivl
not
and
jae
xchg
mov
or
mov
or
sub
je
mov
cltd
pushf
gs
dec
clc
bound
add
pusha
neg
fwait
call
stos
mov
repnz
insl
xchg
add
popl
fiadds
dec
mov
fs
dec
addr16
inc
ja
xchg
pop
ret
xchg
push
cwtl
push
sbb
arpl
popa
int
and
or
and
inc
mov
rcl
jnp
pop
rorb
sbb
mov
sti
cmp
xchg
adcl
jno
jbe
add
pop
roll
scas
in
gs
pushf
out
mov
dec
in
aaa
scas
cltd
cmpsl
out
iret
ds
movsl
movsb
cmpsl
jns
repz
dec
mov
ja
inc
jo
ficompl
mov
sbb
xchg
sub
push
leave
and
dec
mov
lods
inc
sub
push
outsb
mov
mov
jbe
call
cmp
shl
mov
test
stc
cs
or
enter
pop
add
pop
test
popl
push
lods
test
pop
rep
xor
sti
fdivrl
pop
xchg
fcomps
test
in
and
add
push
pop
je
fcmovu
xchg
cli
add
inc
stos
and
fistpll
js
cltd
push
push
push
push
ja
push
fcmovbe
dec
sbb
mov
out
clc
movsb
pop
out
pop
pop
mov
xchg
cmp
or
pushf
cmc
pushf
negb
in
push
lods
loopne
sbb
out
div
fwait
scas
xchg
mov
push
cmpsl
and
inc
imul
or
stos
pop
fldcw
sbb
sbb
and
dec
push
ret
dec
xor
sub
sbb
popa
movsb
mov
mov
and
aas
test
in
call
aaa
jmp
xchg
subl
stos
lcall
pop
test
lcall
and
and
xor
jle
shlb
mov
inc
and
jne
inc
scas
sub
test
mov
mov
pop
lahf
shr
out
sub
jl
cs
and
ret
push
sbb
mov
xchg
xor
cmp
loopne
jmp
scas
jle
shll
xor
mov
jno
les
mov
pushf
mov
mul
shll
lret
rol
popa
cmp
out
insl
outsb
cmp
icebp
inc
jle
or
insb
fdivl
or
loop
rclb
sahf
negl
xchg
xchg
mov
dec
dec
or
mov
test
loope
or
push
test
jg
xor
add
stc
rorl
fstpt
pop
pop
lret
mov
sub
iret
dec
bound
movsl
mov
pop
push
loopne
xchg
or
inc
mov
xchg
cwtl
xchg
push
ja
mov
andl
cmp
imul
mov
imul
repz
cmc
pop
ret
cmp
cs
icebp
and
sub
sub
or
mov
cmp
sahf
mov
xchg
pop
xor
cmp
lds
push
mov
test
xor
push
mov
pop
ja
xchg
imul
xor
inc
ds
fbstp
movsb
dec
pushf
mov
pop
cmpsb
lcall
mov
and
cmp
push
push
pushf
dec
add
jb
ficoml
outsb
inc
fs
stos
push
dec
ds
jne
fidivl
add
xchg
sbb
out
lods
jb
xchg
cmc
out
xor
sbb
or
jmp
subl
test
lahf
xchg
imul
mov
push
xor
inc
or
mov
mov
sbb
mov
inc
dec
push
inc
adc
jp
cmp
push
pop
ss
addl
sub
ret
popa
outsl
call
sub
popa
mov
mov
movl
add
scas
lods
shl
add
lea
cmpsl
movsl
das
aam
rcll
ja
xchg
out
pop
sarb
sbb
jge
movsb
xchg
lret
nop
xchg
in
mov
imull
lock
add
rcll
push
push
inc
or
pinsrw
adc
xor
jne
jno
pop
and
imul
inc
fsts
cmp
dec
ret
and
lret
stos
clc
shlb
pop
ja
mov
inc
jnp
xorb
daa
loope
sti
xor
xchg
sar
in
or
push
dec
sub
daa
std
sbb
js
xchg
push
mov
adc
lds
stc
mov
mov
jmp
shl
out
mov
mov
mov
cmpsb
stos
add
jge
xor
unpcklps
dec
icebp
das
adc
push
fidivrl
scas
fs
outsl
insb
push
add
push
pop
jmp
push
xchg
imul
idiv
or
push
sbb
push
sub
fimull
cmp
xor
xchg
lea
pop
sub
iret
add
cli
push
lahf
dec
push
pop
mov
cmc
mov
pop
sbb
hlt
adc
ljmp
inc
sub
lcall
xor
outsl
scas
mov
shlb
sbb
clc
pop
leave
daa
mov
js
inc
xchg
sbb
push
rcrb
popa
jbe
fwait
int3
into
dec
fistps
loope
pop
clc
push
jne
mov
mov
xchg
or
pop
jnp
mov
pop
fldl
in
pop
push
incb
lods
ficomps
mov
jbe
std
sbb
inc
ljmp
sub
ret
push
es
rcrl
pop
negb
xor
jp
or
inc
sbb
pop
loope
mov
push
jns
mov
jle
mov
lods
in
fisubrl
loope
sti
rclb
fmuls
xchg
jnp
jp
ljmpw
addl
xchg
xchg
mov
dec
movsl
jnp
adc
iret
lea
adc
fs
cmc
pusha
xor
push
fidivl
sti
jl
into
pusha
sub
push
lahf
gs
adc
mov
mov
pop
je
jno
push
cwtl
js
dec
jmp
je
push
aad
lret
vpermb
xor
dec
int
out
mov
or
or
lea
mov
jl
adc
je
inc
inc
and
cmp
jbe
and
xchg
es
lea
inc
insb
jge
sti
and
mov
js
insb
enter
mov
ljmp
push
outsb
sbb
lods
add
inc
and
mov
xlat
orl
inc
aaa
lret
add
pusha
xor
cmp
scas
imul
xlat
push
lret
aas
mov
pop
insl
es
sahf
loope
fdivrl
ficoms
addr16
cmp
inc
cmp
popf
jmp
mov
mov
xlat
xor
prefetch
or
mov
int
imul
xor
sub
outsb
pop
rclb
aas
fisubrs
cmp
add
xchg
sahf
inc
lock
scas
mov
test
jo
jo
adc
lods
cmc
cltd
js
shll
pop
lret
dec
scas
jmp
aas
or
xchg
enter
test
sub
sbb
mov
scas
and
and
jnp
imulb
test
push
imul
jbe
es
xchg
sub
pop
pop
cmp
mov
and
adc
add
adc
aad
mov
xchg
pop
cmpsl
pop
or
mov
push
pop
jne
fwait
push
jne
movsl
pushf
fisubrl
test
cmp
in
jmp
sbb
daa
lret
cwtl
ret
arpl
lock
add
pop
pop
xchg
out
mov
dec
mov
rcl
or
mov
stc
lods
sub
jns
lcall
fdivrs
adc
mov
sub
inc
mov
mov
adc
sbb
test
dec
xchg
jb
gs
fs
sbb
push
cs
lea
loopne
bound
shr
fadds
in
inc
jae
or
enter
insl
lds
lea
inc
js
test
or
push
cmpsl
jp
bound
xchg
jae
gs
cmp
jle
inc
shll
jp
pop
xchg
mov
push
adc
movsb
aas
or
dec
fidivrs
mov
push
ss
jnp
arpl
js
add
test
ficoms
sub
mov
mov
or
std
jnp
mov
test
sbb
xchg
mov
cld
int3
jb
icebp
xchg
orl
lock
push
in
pop
out
js
pop
xchg
cmpsl
daa
lret
cwtl
fmuls
cli
mov
jns
ss
mov
or
and
mov
jae
fs
in
ljmp
imul
jns,pt
sub
loopne
mov
lret
arpl
in
lds
xor
inc
push
adc
lret
ljmp
push
fadds
mov
mov
mov
add
add
ret
frstor
dec
fmull
pop
jmp
lea
and
xchg
inc
pop
xchg
movsl
in
clc
push
loop
orl
fcoml
lock
ret
xor
pop
adc
in
add
sahf
mov
bound
add
xchg
into
dec
jb
dec
shll
mov
sbb
lods
lea
mov
push
push
ds
pop
xchg
imul
adc
scas
ret
lret
mov
dec
jg
sub
repnz
jmp
dec
int
out
or
cwtl
or
outsb
jp
sti
lock
sbb
mov
adc
adc
fs
push
outsl
data16
cmpsb
cmp
mov
jge
jmp
test
call
pop
js
imul
jne
fsts
sub
jp
pushf
lcall
lods
mov
pop
out
xor
or
mov
mov
loop
mov
mov
shlb
dec
pushf
push
push
inc
fisubl
idiv
or
pusha
xchg
sub
ss
into
das
rcrb
jl
outsl
and
xchg
es
xor
jne
add
inc
pusha
push
imul
mov
jg
negl
es
out
cltd
push
leave
inc
jbe
int3
fucomp
push
sub
mov
jns
int
mov
movsb
int
adc
sub
pusha
push
jge
mov
push
aad
cmpb
out
decl
enter
dec
xor
rolb
mov
cltd
fs
cmpsb
andl
cmc
dec
testb
dec
mov
shrb
fstl
mov
js
sub
push
popf
enter
mov
pop
sub
les
and
aas
jg
movsl
jle
mov
add
mov
lret
inc
mov
shl
pop
pop
ret
and
mov
cltd
jp
addr16
lea
out
ds
sbb
push
imul
inc
inc
jne
imul
mov
mov
fisubl
dec
in
lea
add
cmpsb
lock
jnp
adc
dec
xchg
cmp
xchg
in
lods
jnp
mov
scas
jae
jne
popa
mov
jnp
mulb
cltd
sbb
popa
xchg
fwait
mov
xchg
pop
mov
mov
sbb
imul
push
shlb
stc
ljmp
pop
jb
mov
imul
mov
sbbb
ret
fnsave
mov
adc
and
js
das
in
arpl
dec
sahf
adc
lea
lea
pop
ljmp
push
call
jecxz
sub
lcall
in
sub
lcall
push
mov
dec
add
fistpl
xchg
adc
add
int3
cmc
push
xor
clc
ret
adc
pop
insb
pop
adc
and
xchg
ret
push
aas
dec
pop
in
jg
cwtl
in
iret
cmp
aad
fs
mov
pop
mov
jo
xlat
push
repnz
inc
sbb
jne
mov
add
and
rcll
jl
xchg
xchg
bound
cs
mov
mov
ret
je
rorb
testl
enter
out
push
out
stc
loop
fsubrs
push
arpl
pop
loop
add
orl
cld
push
ficoms
sbb
out
push
xchg
cmc
inc
cmp
xchg
ss
dec
and
mov
loop
xchg
bound
filds
lock
mov
addr16
lods
ret
and
push
std
push
out
pop
adc
cwtl
mov
cwtl
jl
loope
dec
dec
jbe
repnz
vpunpcklwd
divl
or
cwtl
lret
jae
sbb
mov
rorl
jae
test
mov
pusha
push
cmp
push
out
jp
inc
xchg
xchg
out
in
dec
xchg
mov
sub
sub
xor
jmp
fs
push
mov
dec
dec
or
xor
enter
daa
sbb
mov
inc
bound
xchg
data16
mov
cltd
mov
clc
jmp
inc
sbb
movsl
into
jo
xchg
mov
sbb
adc
fwait
mov
into
lret
dec
adc
frstpm(287
cmp
aas
pop
mov
jae
pop
das
fisttpll
inc
sbb
pop
mov
imul
or
out
pop
adc
xor
jg
ret
cmc
scas
push
push
imul
adc
cmpsl
xlat
lret
stos
cmp
adc
jnp
pop
xor
jmp
inc
in
in
xor
jno
push
jecxz
dec
push
mov
xor
xor
cmp
test
out
scas
mov
scas
fwait
aad
or
mov
dec
jp
cwtl
mov
inc
pop
rol
xchg
test
aas
sub
fmul
outsb
fistpll
jge
add
pop
lods
aaa
xor
mov
sbb
mov
push
lret
sbb
and
lea
mov
push
popa
in
clc
add
ljmp
std
nop
mull
mov
aad
sbb
mov
nop
pop
push
lcall
popa
repz
push
and
or
int3
aam
push
sahf
ds
hlt
scas
cmp
mov
cld
popa
lds
out
cmpsl
push
cmp
roll
test
insl
int
push
int3
call
jmp
cmp
add
push
cmp
loope
sub
and
les
ja
sub
xchg
xchg
addr16
adc
in
in
das
fldl
rclb
sub
mov
dec
push
ret
adc
add
in
clc
cltd
inc
ret
jns
cli
sub
jae
sbb
xchg
lods
hlt
mov
out
dec
xchg
jge
and
and
into
sub
dec
scas
add
pop
call
daa
shl
inc
aam
jns
movsl
out
cmp
mov
and
mov
xor
fdivrl
sub
les
sbb
dec
sbb
adc
fimuls
cmc
pop
es
jae
sub
mov
xor
mov
mov
data16
sbb
fsubr
add
sarl
cmp
fimull
xchg
push
rcrb
mov
sar
mov
xchg
lret
push
and
and
ffreep
jb
and
cmpb
add
hlt
lods
and
in
cli
cmp
jbe
nop
inc
sub
xchg
loopne
js
and
sbb
and
mov
dec
mov
daa
push
idivl
sub
xor
mov
icebp
outsl
pop
arpl
add
sbb
adc
out
add
sbb
and
pusha
or
pop
mov
aas
mov
mov
inc
and
pop
mov
dec
push
pop
jle
cmp
pop
cmp
lret
fdivs
inc
adc
pop
mov
cmc
or
inc
xchg
aaa
adc
inc
mov
xor
aad
loopne
dec
jns
stos
cmp
stos
sarl
push
ss
push
or
mov
gs
xor
pop
hlt
test
fadds
xchg
sbb
dec
or
cmp
inc
xor
icebp
push
aaa
pop
insb
mulb
test
xchg
in
stc
sub
mov
imul
lods
push
shl
in
stos
add
mov
rcl
shr
test
push
push
sbb
std
add
xor
decl
mov
dec
rcrl
incb
ret
pop
or
pop
in
lock
xlat
bound
test
pop
dec
inc
jb
sub
mov
cmp
ds
repz
iret
sbb
push
filds
mov
push
out
gs
add
push
or
imul
clc
addl
sbb
xchg
mov
mov
ror
call
lcall
mov
jo
int3
jns
inc
stos
sbb
fs
pushf
jbe
mov
adc
popa
aad
daa
cld
lds
test
xor
xchg
pop
repz
aad
xor
cmp
xor
dec
jl
jnp
adc
ds
xor
repnz
sbb
or
int3
adc
push
ss
or
in
mov
repnz
mov
repz
push
insb
xor
cmp
pop
movsl
addb
cmp
rolb
xchg
xchg
xor
pop
enter
dec
mov
dec
mov
add
xchg
pop
dec
mov
inc
pop
and
mov
int
repz
orb
test
fwait
lods
js
imul
fimuls
jno
ffree
xchg
sahf
dec
push
cmp
add
add
cwtl
aad
push
sub
mov
iret
adc
loop
rcr
xchg
decb
push
mov
pop
repz
out
dec
xchg
push
and
lds
ss
sahf
jb
push
cmp
or
dec
cmc
lret
cmp
movsb
arpl
push
mov
xchg
mov
pop
stos
push
pushf
pop
xor
mov
adc
inc
out
pop
iret
in
jg
adc
test
sub
jle
or
loopne
mov
inc
jecxz
pop
or
lds
cmp
dec
fcmovbe
fstpt
movb
ss
mov
sub
adc
push
and
cmp
cmpsl
xchg
icebp
push
and
push
inc
mov
xchg
pop
arpl
mov
fbld
jb
pop
clc
in
adc
dec
ds
mov
jp
mov
inc
fldl
adc
add
jge
roll
dec
mov
stc
mov
repnz
mov
ret
push
or
rcrl
int
mov
lea
fidivl
dec
mov
dec
mov
cltd
mov
loope
ret
cmp
lock
fs
int3
cs
add
in
or
cld
sbb
lahf
dec
aaa
add
mov
mov
fwait
sub
in
loope
push
fcom
addr16
imul
cmc
mov
mov
push
sub
add
dec
addl
pop
push
jg
xor
lret
or
mov
fwait
mov
jae
mov
and
shlb
and
int3
pop
outsb
push
lds
lret
das
jnp
mov
adc
push
sub
fldt
dec
xor
or
or
inc
daa
push
xchg
jbe
sbb
sarb
mov
loope
xorl
add
imulb
add
lret
cli
std
xchg
sbb
push
add
imul
repz
fstps
sti
xchg
sub
cvttps2pi
push
call
ret
test
cld
in
lahf
add
inc
xchg
lret
xchg
inc
clc
pushf
jae
pop
sbb
lea
mov
scas
out
push
pop
or
std
cmp
add
fisubrl
sub
cmp
aaa
lods
mov
insb
call
sbb
sub
mov
and
xor
mov
add
mov
xor
mov
fdivrl
shlb
or
bound
or
out
sbb
mov
aam
dec
jecxz
negl
mov
mov
inc
dec
das
movsb
sbb
xor
test
sub
xchg
dec
movsl
xchg
arpl
xor
cmp
pop
das
xor
imul
andb
push
movsl
in
xchg
cmpb
push
add
fwait
outsl
mov
mov
and
or
push
loope
int3
ror
pop
jo
fwait
leave
andl
ret
dec
loope
pop
xlat
jmp
addb
pop
push
and
into
jne
cltd
xchg
into
insb
pop
sub
int
fstpt
or
fidivs
or
inc
pop
clc
xorb
jg
popf
pushf
xlat
iret
ret
adc
push
mov
rorl
outsb
fsubs
add
cmpsb
outsl
test
imul
xchg
fcompl
std
xor
fs
sbb
arpl
pop
cmp
enter
clc
dec
stos
jle
lahf
sti
ret
dec
ss
andb
adc
int
inc
xchg
iretw
fldt
and
popa
or
ret
mov
xchg
or
mov
mov
dec
fisttpll
cmpsb
lea
adc
ds
punpcklbw
cltd
xor
nop
cmpsb
xchg
xlat
mov
mov
push
into
std
test
int3
out
sbb
pop
mov
sub
push
aad
lods
in
out
mov
lret
mov
mov
repnz
inc
std
inc
mov
inc
inc
movsl
mov
jb
arpl
mov
jno
mov
sbb
jo
roll
push
loope
rcrb
lock
mov
jge
push
cwtl
in
xor
inc
popa
pop
add
push
push
pop
repnz
jmp
mov
push
lret
or
jno
decl
push
pop
adc
pop
in
mov
cmpsl
jmp
in
jb
xchg
sub
add
mov
push
cld
dec
shll
cmp
jb
cs
jmp
cmp
sub
add
scas
loopne
or
lods
inc
aad
sbb
push
add
stos
jmp
sbbl
inc
popf
pusha
adc
cltd
dec
es
jg
lret
push
sub
and
sahf
cmpsb
or
or
adcb
adc
int3
sub
mov
fwait
xchg
sti
mov
and
push
lahf
jmp
mov
jp
mov
outsb
pop
lds
add
and
shll
jbe
imul
ja
add
mov
fdivl
not
or
dec
inc
in
jle
loopne
and
inc
imul
out
jo
movsb
xchg
fcompl
cld
push
sub
add
cvttps2pi
jle
clc
sbb
adc
sahf
mov
xchg
repz
push
or
les
dec
mov
repnz
xchg
xor
pop
inc
mov
jge
ds
hlt
jns
mov
fnstenv
xchg
cwtl
add
jecxz
loopne
lds
movsb
sbb
cmp
js
cmpsl
dec
out
add
mov
lods
sti
jb
rorb
jae
mov
or
fldt
mov
addr16
outsb
pop
shrb
je
push
xlat
push
adc
adc
adc
cmp
and
aas
arpl
inc
xchg
push
xor
mov
xchg
imul
inc
sub
sbb
cmp
addr16
fsub
ljmp
xor
lcall
adc
lahf
pop
dec
int3
pop
rclb
mov
push
dec
mov
cmpsl
pop
popa
in
xor
xchg
xlat
add
adc
pop
es
int
shl
fs
lret
shr
cmp
mov
inc
mov
sti
mov
pop
dec
or
jne
jne
xorb
mov
and
es
or
imul
xchg
sub
shll
xor
fyl2x
pand
xor
mov
sbb
jns
xchg
adc
roll
cmp
rclb
or
pushf
lret
adc
pop
or
cmp
in
leave
aas
or
xchg
ret
fidivrs
mov
sbb
stc
scas
xlat
lods
stc
psllw
or
xchg
subl
pop
outsb
sbb
stos
aam
mov
dec
xchg
mov
pop
lds
loope
lret
add
test
dec
add
lcall
add
stos
pop
xor
ret
add
mov
ficomps
push
lock
xchg
push
mov
jge
add
xor
adc
push
or
inc
push
mov
bound
mov
jg
dec
mov
in
xor
mov
xor
inc
xchg
xchg
mov
or
nop
dec
ret
pushf
jp
jne
jns
fwait
mov
sub
add
mov
and
and
inc
mov
mov
nop
inc
jnp
or
clc
icebp
xchg
fbstp
adc
lahf
pop
fscale
loopne
cmpsl
popa
push
inc
aad
repnz
imul
pop
inc
sub
jae
xchg
jne
mov
mov
sbb
push
das
mov
xchg
sbb
adc
repz
sub
push
sub
jg
loope
ljmp
mov
leave
icebp
pop
sub
test
repnz
add
xlat
sbb
mov
sbb
push
scas
sub
jge
push
pushf
push
cmp
inc
fwait
and
rcrl
imul
xor
sub
pop
jg
jl
addr16
cmpsl
push
hlt
sti
or
pop
fsubrs
addr16
mov
dec
out
scas
sbb
jmp
add
add
xchg
cli
sbb
stos
ljmp
lret
sahf
jl
lcall
inc
and
shll
lret
arpl
hlt
xor
cmpsb
pop
jo
in
xlat
mov
inc
xor
fwait
ja
out
add
shrb
loope
xlat
push
mov
mov
gs
xlat
arpl
inc
push
clc
mov
lahf
jmp
dec
icebp
fstl
lock
pop
std
inc
aam
lret
out
mov
lods
in
stos
cmc
stos
and
test
xor
ss
push
sbb
lods
add
pop
imul
ficomps
cmp
mov
rcl
sahf
jb
inc
aam
pop
ds
in
fiaddl
sub
pop
fistpll
mov
push
xchg
mov
insb
bound
adc
pop
dec
sub
sbb
js
adc
mov
movsb
xchg
jbe
das
jg
adc
xchg
outsl
pop
ds
adc
inc
and
lds
mov
scas
cwtl
lods
jmp
or
push
push
sbb
sarl
gs
lods
mov
repz
jnp
pop
popf
scas
xchg
mov
or
shlb
mov
pop
outsb
cmp
xchg
je
mov
dec
ds
lock
xchg
and
stc
jle
into
test
and
push
js
ljmp
inc
adc
and
fnstsw
mov
sbb
mov
sub
or
mov
imul
xchg
dec
stos
mov
icebp
and
insl
and
jae
cmc
xor
sbb
icebp
xor
pop
mov
cltd
pop
inc
out
shrb
add
xor
inc
outsl
mov
insb
push
cmp
adc
nop
lret
mov
mov
xchg
lret
push
dec
popa
jecxz
lods
cmp
fs
push
inc
rorb
mov
fsqrt
mov
arpl
cs
push
int
mov
test
xchg
cmp
testb
js
in
fsubrl
jle
sbb
jl
sub
je
mov
int
adc
js
cmp
iret
jne
push
dec
adc
notb
cmpsb
push
mov
lea
dec
xchg
int
test
or
sub
nop
jl
insl
xchg
or
cmp
sub
addl
lcall
mov
jle
pop
fnstcw
call
ljmp
stc
jmp
out
fisubl
cvtps2pi
lds
ficoml
or
es
jno
les
or
adc
pusha
adc
inc
les
inc
gs
jge
and
call
inc
stc
mov
in
fucomip
lods
scas
cmp
jo
sahf
aaa
aaa
in
int
add
push
mov
fdivl
sahf
push
push
andb
test
lea
mov
mov
stos
dec
pop
mov
mov
fstps
cmp
push
jo
cltd
xchg
nop
daa
add
gs
mov
dec
fwait
aad
xchg
test
sub
mov
mov
fwait
and
jp
xor
jl
dec
xchg
sbb
insl
pusha
nop
mov
xchg
xor
out
xchg
mov
dec
jbe
dec
push
in
xor
jnp
fmuls
int3
xlat
repnz
xor
scas
jle
jge
pop
aad
test
xchg
inc
or
pop
inc
lock
mov
fs
cmpsl
mov
insl
movsb
push
sbb
movsl
jns
xor
pushf
dec
int
loop
ljmp
xchg
xor
subl
xchg
xor
cmc
mov
enter
shr
scas
pushf
cld
adc
sub
pop
sub
push
dec
push
push
sbb
notb
mov
divb
xchg
xchg
xchg
xlat
out
dec
adc
cmp
pop
jp
dec
jno
mov
sbb
mov
jne
xor
movsl
fs
jmp
fimull
test
push
mov
mov
outsb
lods
testl
divb
loop
xchg
ficompl
dec
repz
cwtl
cli
clc
sub
in
cli
mov
pop
pop
js
orb
pop
in
fcmovu
in
jns
push
hlt
pusha
or
inc
jmp
xchg
insb
or
int3
xor
cmc
loop
hlt
push
fwait
cmpsb
scas
sub
movsb
mov
xchg
dec
scas
xchg
jno
nop
inc
xchg
dec
pop
shlb
mov
jecxz
jno
mov
pushw
jno
addl
dec
mov
mov
std
pop
daa
out
xchg
lods
fstl
inc
mov
or
ljmp
lahf
mov
bound
jmp
push
mov
aaa
js
mov
push
fnsave
lock
dec
jae
fstpt
xor
sbb
or
popa
sub
pusha
inc
or
mov
repz
test
push
xchg
repnz
es
scas
cmc
add
cltd
sub
sub
mov
jl
mov
cwtl
mov
sub
gs
add
in
push
cld
pop
pop
and
mov
xlat
pushf
pop
in
and
addr16
orl
pop
repnz
push
pop
push
jb
mov
loop
xchg
xchg
pop
in
mov
mov
mov
xor
int3
in
aad
dec
add
dec
test
test
mov
jecxz
xchg
fisttps
jo
in
ja
inc
je
cwtl
lods
lock
int3
test
mov
sbb
jae
add
out
lret
sub
xchg
xor
inc
jae
js
popa
sub
fsubr
popf
push
orb
in
sub
nop
jmp
xor
or
std
and
pop
lds
testl
inc
push
mov
mov
test
loope
mov
dec
icebp
sbb
cmp
jl
jmp
int
pushf
adc
or
adc
and
es
add
jge
xor
xor
ret
pop
psubd
jg
sbb
add
ljmp
push
pop
xchg
mov
dec
nop
add
insb
mov
mov
jae
daa
inc
jo
lahf
dec
bound
dec
frstor
mov
ss
sti
outsb
rorl
aam
adc
out
pusha
inc
mov
inc
sbb
lahf
and
pop
insl
daa
pop
xor
sub
out
pop
jno
or
mov
leave
mov
inc
ljmp
push
decb
ret
outsb
out
mov
cld
push
pop
or
pop
lahf
fbstp
shrl
push
clc
and
xor
cmp
add
mov
rclb
les
movsl
das
mov
jnp
fstl
testb
std
dec
push
outsb
sub
jne
stos
das
sahf
jmp
ljmp
mov
pop
lret
xor
push
stos
dec
pop
lods
cmpsl
jmp
insl
xchg
in
xor
dec
jno
pandn
or
push
enter
ficoml
sbb
pop
addr16
movsb
loope
outsl
jmp
push
pop
loop
xor
and
test
iret
cmp
sub
movsb
cli
or
lock
xor
jg
dec
push
loopne
fwait
xchg
cwtl
shlb
loopne
add
adc
pop
pop
fcoms
push
leave
jl
jae
mov
lcall
scas
adc
and
inc
sbb
sub
xchg
fsubr
sbb
ja
mov
mull
jae
mov
bound
imul
loop
jp
xor
daa
rcrl
incb
outsb
lds
dec
sub
pop
stos
loop
rorb
cld
sarl
sbb
push
fildl
les
mov
mov
ret
adc
shrl
idivb
lds
imul
data16
mov
cld
lds
aas
mov
sbb
int3
xchg
adc
clc
push
ljmp
xchg
jb
mov
mov
dec
les
movsl
mov
ret
fidivrs
js
jns
add
and
inc
sub
cltd
prefetchwt1
lock
inc
dec
inc
cli
sbb
dec
addb
pop
and
mov
cmp
fcmovb
sbbl
mov
inc
push
loope
sub
xor
sub
shlb
test
aad
mov
scas
add
lds
pop
adc
fidivs
xor
sarb
sbb
lea
dec
std
pop
jb
add
adc
cltd
cmp
clc
imul
in
cltd
nop
mov
shlb
dec
test
insl
or
xchg
sbb
pop
std
clc
fwait
jmp
les
sub
scas
xchg
in
inc
popf
out
dec
or
imul
and
out
add
or
out
and
pusha
int
cs
fisttpll
popf
cmp
popf
xchg
test
xlat
inc
pop
push
shlb
mov
negb
das
hlt
popf
ljmp
mov
mov
cld
jl
xlat
push
jp
shl
sti
dec
mov
lahf
and
mov
frstor
pop
std
fucomi
aad
jmp
dec
ja
mov
jb
arpl
jmp
adc
push
clc
aad
aad
pop
icebp
mov
lods
mov
sub
xchg
jno
stos
stos
icebp
cmp
mov
xchg
xorl
jl
sub
mov
mov
cmp
ret
leave
dec
cmp
std
sub
pop
adc
and
cmp
jp
inc
das
sbb
mov
jg
push
fimull
nop
les
cmp
sbb
repnz
dec
ja
gs
pop
ja
cmpsl
jmp
lock
movsb
fisubrs
xchg
inc
data16
xor
test
jnp
dec
sbb
push
in
mov
std
push
in
mov
mov
dec
icebp
dec
int3
cmpsl
popf
xor
ret
imul
sub
or
inc
dec
test
test
loope
sub
inc
lods
movsb
cmp
sub
mov
or
mov
mov
mov
mov
mov
xlat
imul
ljmp
outsb
adc
xor
pushf
scas
sbb
in
js
mov
cs
cwtl
daa
sti
dec
xor
test
dec
stos
cmp
ss
xor
leave
cmp
hlt
out
push
jo
outsb
out
cs
inc
gs
out
sti
push
pop
addl
cmp
xchg
pop
lret
std
inc
aad
or
sbb
cmp
add
mov
in
shl
jg
jl
in
inc
sub
cmp
dec
sbb
dec
sahf
push
aaa
mov
out
les
jl
jg
mov
test
ret
add
inc
mov
dec
out
sbb
decb
arpl
cld
cld
cmp
call
cmpsl
push
mov
xor
fsubrp
xchg
pop
aas
mov
and
call
mov
cltd
cwtl
je
rorb
mov
jne
lods
ljmp
cmp
int
popf
inc
xchg
je
stc
fsubs
cmp
push
scas
icebp
push
dec
add
jne
inc
enter
icebp
sahf
fwait
shrb
scas
mov
jne
xor
sbb
adc
and
daa
test
xchg
into
sbb
rcrb
mov
pop
xchg
pop
in
out
mov
and
repnz
loopne
add
out
dec
lods
xor
mov
xchg
adc
mov
mov
xor
mov
add
lret
jmp
in
adc
insb
test
fldenv
rclb
adc
adc
test
xorl
out
jle
sbb
loopne
fadd
adc
adc
stos
dec
adc
sub
inc
sbb
sbb
loop
mov
negb
xor
pop
stos
daa
out
pop
sub
mov
lock
in
nop
out
jp
int3
shlb
sbb
shlb
int
xchg
inc
addr16
mov
sub
cmp
sbb
push
imull
sub
test
cltd
add
pop
push
aas
decb
and
leave
aam
xchg
push
pop
xchg
xchg
jg
pop
mov
fs
cmp
insb
add
cltd
mov
sub
lock
addr16
data16
cld
push
adc
pushf
mov
sub
mov
dec
subb
js
push
scas
cltd
mov
ret
ss
inc
jne
je
xor
jb
jg
add
and
ja
dec
and
lock
cwtl
out
xor
or
xchg
nop
cmp
es
aam
lret
dec
jnp
mov
sub
sub
xor
or
mov
pop
pop
ss
ljmp
mov
cmpsb
cld
movsl
test
stc
mov
mov
and
cmpsb
pusha
sub
and
loopne
jecxz
xchg
push
rcr
sbb
xor
xor
or
sub
mov
xchg
jo
out
mov
test
and
dec
mov
int
or
sarl
and
in
push
add
jb
adc
int
cmp
adc
cld
leave
push
cwtl
or
imul
mov
inc
aad
xchg
fs
push
adc
mov
push
fcom
test
in
ftst
xor
inc
out
adc
lea
stos
ret
pop
inc
add
std
lock
nop
pop
pop
dec
sahf
inc
mov
push
aam
aam
stc
mov
dec
sbb
fmull
inc
add
or
mov
scas
enter
mov
push
jne
rclb
and
jnp
ja
push
leave
fs
xorb
lea
sub
insb
push
lahf
xor
stos
lret
push
movb
insb
imul
nop
xor
scas
dec
lea
stos
aas
mov
xor
imul
jb
dec
clc
or
mov
hlt
sti
lea
push
fidivrl
push
cld
ljmp
lds
stc
add
mov
movb
inc
cmc
out
inc
cmp
popf
and
js
xor
sbb
mov
and
sub
cld
cmp
mov
push
out
out
sahf
ficoml
rcr
xor
aas
stos
inc
cs
or
mov
pop
fiadds
xchg
aam
mov
dec
aas
idivb
sahf
sbb
or
scas
pop
sbb
lea
adcl
or
mulb
popf
xchg
popf
add
mov
inc
mov
subl
xchg
xacquire
jmp
and
sub
push
movsl
pop
push
shlb
into
lock
in
inc
jo
cmp
ds
stc
test
jo
cmpsl
jle
hlt
sub
aas
and
idivb
or
mov
add
filds
and
lahf
fdiv
jp
and
push
lock
push
in
inc
out
inc
dec
and
das
adc
int
rcll
pop
inc
pusha
mov
icebp
mov
xchg
add
pop
in
mov
int3
fwait
xlat
xchg
xor
fstpl
or
in
std
xchg
cmp
call
pop
andb
jg
mov
mov
dec
pop
enter
cmc
insb
imul
addl
leave
je
cmp
fldenv
mov
in
fnstenv
stc
ljmp
and
test
lods
mov
out
fcomi
dec
test
pushf
and
pop
scas
mov
dec
cltd
mov
mov
rolb
cli
add
or
sbb
cs
push
cmpsb
imul
gs
jo
nop
jle
xor
jge
in
sub
xor
adc
test
jmp
fsub
and
iret
out
xor
jns
js
loop
or
jecxz
aaa
dec
pop
ss
and
inc
test
xchg
outsb
mov
xchg
aas
mov
pop
pushf
lcall
xor
loope
xchg
sub
sub
or
add
mov
jl
inc
push
jle
push
or
inc
shll
ret
sub
or
mov
scas
pusha
push
mov
mov
movsl
xchg
pop
xor
jno
xor
adc
mov
popf
clc
mov
jg
mov
testb
jmp
xchg
fbld
and
call
std
mov
std
jge
outsb
das
jl
jo
dec
jns
in
push
jo
sbb
data16
jnp
or
js
add
cmp
dec
xchg
push
adc
fs
dec
frstor
lock
addl
fwait
mov
ljmp
mov
dec
ljmp
push
push
repnz
pop
dec
arpl
dec
imul
and
jb
mov
xchg
dec
jnp
pop
stos
xchg
cmpl
push
sub
sbb
pop
pop
cmp
jmp
sti
pop
mov
cwtl
ret
test
icebp
mov
lahf
loopne
cmp
adc
mov
pop
adcb
add
rcl
dec
jecxz
sub
sarb
stos
notb
sbb
ret
adc
cmp
pushf
mov
js
in
dec
orb
add
add
inc
xor
or
mov
cmp
xor
xor
rclb
repnz
dec
lret
cmp
xor
pop
jmp
jbe
mov
cmpl
dec
xchg
cmp
int3
push
add
mov
adc
dec
mov
cmp
jmp
mov
push
xor
push
sub
pop
dec
stos
or
pop
push
lock
pop
pop
adc
and
dec
and
xor
sbb
movsb
mov
or
leave
jp
adc
push
push
mov
cmp
xchg
movsb
mov
fsubl
test
in
lcall
ret
pop
loopne
pop
mov
inc
sbb
cmp
ss
sub
dec
bound
dec
sbb
cmc
pushf
movsl
testl
inc
sbb
incl
jl
ljmp
mov
mov
in
inc
push
pushf
ss
xchg
push
iret
mov
mov
jne
dec
pushf
sub
aam
mov
xor
push
cmpsb
into
dec
sub
int
or
testl
loop
test
add
rcr
fs
sub
xor
mov
xor
dec
xor
stos
cmp
push
stos
fstp
mov
in
sbb
fsubrl
adc
ds
xlat
inc
cmp
cli
loopne
mov
femms
mov
test
je
fidivrs
and
mov
outsl
and
mov
out
sub
rclb
gs
loop
bound
ss
adc
out
cmc
sarl
cmp
shrb
shll
pushf
adc
xchg
jl
adc
inc
xor
mov
pop
test
dec
lods
roll
stos
cmp
mov
cwtl
in
sub
jns
mov
adcb
sbb
adcl
lgs
movsl
jne
jmp
shll
inc
sbb
inc
lret
dec
int
adc
push
sar
push
shlb
hlt
fbstp
cli
push
cmp
out
xlat
fadds
enter
mov
cltd
jecxz
pop
fistl
jp
mov
sub
sbb
xchg
mov
rcrl
std
rcrb
push
adc
ret
cltd
cmpsl
jmp
inc
testl
test
lea
leave
xchg
in
icebp
decl
outsl
cmpsl
xlat
shll
adc
sub
inc
ficompl
jae
sbb
cmpsl
inc
lcall
lret
mov
test
xchg
mov
ljmp
jle
mov
dec
out
movsl
mov
xchg
mov
test
adc
add
lods
inc
mov
jmp
fisttps
mov
sbb
movsb
mov
stc
incb
aaa
mov
dec
daa
sub
out
mov
sti
out
sbb
jmp
xor
sbb
xlat
pop
xor
nop
add
scas
ljmp
fisubrs
movsb
pop
dec
les
jo
xor
pop
test
inc
cmpsb
push
sub
mov
pop
xor
mov
and
lds
xor
int
cli
pop
dec
ret
jbe
jge
push
mov
das
cmpsb
enter
mov
fsubrl
sti
cld
popf
adc
pushf
jne
mov
cmp
je
faddl
test
jnp
pushf
roll
cmpsl
jge
mov
push
cmp
iret
movsl
mov
and
cmpsl
mov
sub
jae
negb
aas
sbb
adc
lret
jecxz
jge
push
push
enter
mov
stos
ret
xchg
lret
ss
shll
sbb
mov
add
mov
cmp
std
les
fs
and
pop
add
test
fidivrs
mov
cmp
inc
or
xor
mov
cltd
push
xlat
mov
movsl
lods
cmp
jbe
add
pop
adc
rcrb
outsl
push
sub
add
or
loop
cmp
and
push
imul
int3
mov
das
pop
scas
dec
lahf
and
xor
mov
inc
xchg
cmp
xchg
lock
movsl
fsubrs
stos
jnp
adc
icebp
inc
mov
gs
dec
dec
mov
lods
push
adc
je
jbe
mov
popf
sbb
aas
jl
cs
pandn
pushf
pop
push
add
sub
sti
add
jmp
and
fstp
mov
cmpsl
mov
aas
cmp
pop
cltd
inc
into
in
push
jb
jno
pop
ja
add
repnz
fisubrl
loopne
jbe
pop
test
mov
sub
les
sbb
repnz
jp
insl
lods
jno
cmp
jecxz
dec
sub
xor
shl
stc
lds
mov
adc
and
out
or
loop
test
out
sarl
mov
or
aam
mov
dec
mov
push
lahf
stos
push
shll
fcomi
das
adc
mov
push
or
pop
xor
xlat
bound
add
push
sahf
mov
fisubl
adc
ja
add
xchg
xchg
lods
ljmp
pop
pop
inc
mov
jg
out
mov
inc
mov
or
or
sub
mov
aas
imul
jecxz
aas
fimull
or
jne
add
pop
add
sbb
cs
xor
or
loope
sub
pop
in
cmp
sub
insb
push
arpl
aas
ljmp
insb
ja
pop
cmp
nop
push
insl
xor
js
xchg
pop
sahf
orl
dec
mov
scas
aaa
inc
sbb
adc
xchg
fcmovne
ds
loopne
in
out
push
xchg
pop
loopne
gs
fsubr
adc
repnz
jb
rcll
inc
jp
pusha
mov
or
xor
mov
out
mov
inc
push
cmpl
lods
sub
sub
lea
xor
movsb
push
jne
mov
gs
sbb
push
mov
fisttpl
and
lock
add
push
sahf
aas
xchg
xor
xor
ror
stos
mov
push
insb
stc
inc
dec
aad
dec
and
outsl
mov
fwait
push
push
js
ss
cmc
lret
and
jae
mov
sub
mov
and
cmp
xchg
jp
mov
inc
mov
jb
adc
out
fistpll
sub
addr16
lods
or
scas
clc
xor
mov
aas
mov
ljmp
xor
pop
les
insb
rcrl
ffreep
inc
ss
shrl
fisubrs
jns
std
xlat
sub
cmc
cltd
int3
add
andb
add
dec
int
push
jge
jo
sarb
push
imul
sub
out
mov
push
mov
xchg
out
add
int
adc
dec
lret
jg
in
dec
nop
fisttps
clc
dec
cmp
mov
xorb
dec
jno
in
pop
lock
pop
xchg
fstpt
in
inc
pop
bound
push
dec
push
and
xchg
push
icebp
and
pop
mov
lods
imulb
mov
sbb
mov
popa
push
scas
ja
xor
lret
mov
xchg
mov
jb
pop
xchg
repz
aas
fisubs
enter
xchg
cmc
push
imul
pop
scas
lock
stos
bound
mov
jbe
inc
loopne
pop
pop
pushf
in
mov
mov
xchg
fdivrs
push
fmull
or
call
xchg
mov
cmp
xor
xchg
xchg
lock
add
mov
sbb
shl
jo
pop
inc
das
imul
movswl
test
mov
sub
test
xchg
sub
mov
mov
mov
or
push
inc
dec
adc
shl
inc
and
std
mov
imul
insb
icebp
sub
test
and
aad
cmp
arpl
dec
jecxz
mov
call
xlat
adc
pop
and
xchg
cltd
pop
mov
fsubp
push
lods
dec
pushf
push
fsubl
fisubs
out
lds
sbbb
iret
bound
mov
cmpsl
aaa
xor
dec
pop
cmc
mov
cmp
cmpl
sbb
or
scas
shrl
and
push
cmc
xchg
lahf
jo
pop
sbb
nop
mov
or
push
nop
cmp
lock
and
cmp
push
ret
dec
test
sbb
and
mov
sub
rorb
xchg
dec
ja
dec
jno
cwtl
imul
call
fnsave
outsb
add
add
xchg
pop
push
adc
dec
xor
imul
loopne
mov
inc
test
cmp
or
in
sub
pop
jae
in
cmc
mov
std
mov
cltd
cmp
push
lret
ljmp
pop
popa
nop
fbld
mov
sbb
ja
test
repnz
in
push
push
loop
cmpsb
std
loop
scas
imul
clc
dec
stos
jnp
fbld
ret
xchg
cmpsl
add
xchg
fstps
fisttps
jl
mov
int3
ds
cmpsl
pop
xchg
clc
stc
in
push
imul
insl
xor
addl
les
adc
leave
lods
test
mov
cltd
mov
outsl
jne
scas
loop
popa
dec
mov
sbb
call
jne
jmp
dec
ljmp
and
test
dec
mov
or
adc
cmp
fcomi
push
pusha
push
pushf
jne
pop
aaa
adc
jnp
jo
sub
out
cli
aas
or
push
jmp
xchg
iret
xor
out
push
loope
sub
push
fnstenv
pop
jp
jp
inc
les
cmp
ds
test
adc
push
popa
adc
jbe
push
mov
orb
lods
jno
cmp
xchg
loopne
jecxz
mov
lods
cmpsl
or
scas
out
std
sbb
movsb
mov
xchg
xor
jmp
out
int
xchg
xchg
sub
mov
mov
popf
push
div
mov
jbe
popa
push
dec
cs
fiaddl
cltd
xor
stos
lods
movsb
jbe
ror
push
xchg
mov
add
adc
jbe
ljmp
repz
sub
lods
inc
enter
jnp
icebp
jnp
aaa
jne
xchg
cmp
xchg
das
and
sti
cmpsl
jae
inc
xor
es
dec
mov
nop
nop
fcomip
pop
lret
stos
lds
lock
loop
mov
test
xchg
inc
add
lods
mov
pop
jb
inc
mov
cmp
dec
push
or
aam
mov
dec
pop
stos
add
movb
scas
or
movsl
and
out
dec
les
pusha
push
pop
lods
daa
or
dec
outsl
xor
pop
jg
sbb
sbb
mov
cltd
dec
es
shl
in
hlt
das
ret
shll
add
cmp
mov
sub
test
aas
fdiv
adc
cmp
cli
in
arpl
and
dec
ret
scas
add
dec
out
lahf
xchg
adc
sbb
sbb
push
insb
andb
jns
hlt
cmp
out
adc
dec
xchg
idivl
or
pop
iret
mov
jae
sub
and
ror
mov
sub
dec
jp
cld
mov
mov
dec
push
mov
add
jb
xorb
nop
pop
jg
int
and
mov
sub
shrl
aad
ja
shlb
mov
test
ds
push
xchg
push
cld
jmp
mov
fwait
jecxz
mov
loopne
pop
out
cmp
fs
jp
xchg
or
clc
out
or
jns
fucomip
jle
cmp
in
xor
sahf
jge
std
add
lret
push
mov
xchg
scas
pop
jge
add
scas
push
imul
insl
nop
daa
loope
xor
pop
hlt
in
xchg
leave
loop
mov
js
xchg
xor
sub
cmp
adc
inc
in
sub
fsubrs
pop
dec
inc
mov
or
sub
lds
loope
in
add
scas
push
lahf
pop
xchg
jg
jno
adc
mov
popa
jmp
push
iret
stos
fst
cmpsb
pop
imul
jl
jg
fsubrs
dec
mov
xchg
data16
xchg
xor
fs
adc
jb
xor
js
es
add
adc
or
insl
testl
or
shl
push
dec
mov
sub
stos
test
inc
add
dec
cltd
jb
pop
mov
pop
iret
xor
push
mov
mov
mov
sub
mov
in
in
jae
pop
lods
add
or
pop
jnp
inc
mov
enter
dec
jl
les
imul
mov
cld
jb
movsb
in
loopne
hlt
pop
sub
jp
and
data16
xchg
and
aam
mov
mov
pop
mov
mov
mov
imul
xorl
clc
lret
mov
out
mov
add
loopne
mov
outsl
push
pop
cs
adcl
pop
mov
adc
leave
mov
inc
jp
jp
dec
add
repz
mov
xchg
cmpsb
test
xchg
test
jns
repz
and
jb
lret
xchg
mov
out
in
dec
sub
cs
and
jae
sub
jb
insb
xchg
push
inc
jge
xchg
push
inc
test
or
mov
icebp
in
push
cmp
out
rolb
xchg
rcl
fsubrs
repz
or
test
mov
cmp
mov
sbb
les
sti
jg
inc
or
cmp
in
es
sbb
fldl
cmpsl
jb
test
dec
repnz
rolb
outsb
cmp
jne
xchg
scas
out
hlt
sahf
pop
negb
loop
dec
sub
int
push
jmp
and
push
enter
mov
sbb
sub
jg
jo
repnz
daa
jmp
pop
icebp
and
cmpsb
loope
jbe
add
cld
je
ficompl
les
add
lcall
in
sbb
sbb
mov
rcrl
dec
xchg
shll
add
shlb
shlb
mov
pop
xor
jne
push
mov
bound
mov
movsb
xchg
and
int3
push
cmp
testb
mov
or
ffree
mov
lock
xor
fidivs
and
pop
jae
outsb
mov
dec
inc
inc
imul
pop
leave
sahf
sbb
cmpl
mov
adc
cltd
mov
mov
push
push
daa
daa
sbb
sbb
adc
pop
aad
imul
notb
or
sbb
mov
insb
arpl
mov
mul
sbb
call
fscale
dec
mov
test
les
pop
sbb
leave
fstpl
fs
xor
cli
cmp
jmp
loopne
out
mov
add
enter
mov
enter
or
sub
push
loope
cmc
test
sbb
mov
cmpsl
daa
je
mov
adc
into
aam
fisttpll
mov
aaa
cwtl
ret
mov
lret
push
cmpsl
lds
jnp
fcomps
xchg
push
xchg
xchg
shlb
divl
adc
or
mov
movb
popa
jnp
adc
loopne
cmp
lret
xor
cmc
dec
cld
fadds
fldenv
fists
xchg
mov
mov
dec
xchg
mov
idiv
iret
cmc
cmp
fcmovnb
mov
into
fwait
cmp
xchg
ret
lods
fsubr
sbb
dec
mov
stos
cmp
loop
rcrb
neg
dec
sub
push
fildll
xchg
cmp
push
lahf
pop
cwtl
test
ss
pop
pop
popf
add
cmp
test
nop
arpl
push
incl
mov
push
dec
ret
js
outsl
mov
mov
or
mov
inc
cmc
cmp
nop
ljmp
mov
pop
scas
jbe
adc
rol
ds
fdiv
dec
les
lods
mov
cmp
cmp
into
movsl
fists
rolb
pop
cmp
push
out
fcmovnbe
icebp
and
jecxz
or
push
stos
in
test
adc
mov
dec
ss
push
outsb
pop
pop
and
fisubs
pop
add
pop
sub
adc
das
sub
popa
call
jns
pop
cwtl
xor
mov
push
into
popa
sub
push
in
into
std
les
popf
sbb
add
test
xchg
sbb
repz
test
fwait
data16
mov
xchg
aas
push
mov
mov
or
es
and
cmp
iret
xchg
xor
jle
fldcw
jo
test
in
mov
repz
cmpsb
xor
les
lahf
lods
xchg
mov
bound
mov
addr16
aad
and
mov
lret
lret
add
inc
das
jns
sub
shlb
mov
repz
jne
adc
cmpsb
push
mov
sub
nop
ljmp
repnz
jge
ja
shr
push
inc
cmp
in
push
xchg
fidivrs
mov
aas
jle
mov
and
out
shrb
popa
ja
jl
lock
packssdw
lea
sarb
inc
enter
xor
outsl
movsb
jno,pt
cli
mov
stos
jge
lea
jecxz
outsb
jl
iret
mov
adcl
push
sub
stos
insl
push
xchg
jmp
sbb
imul
xor
adc
mov
ret
fwait
subb
in
into
decb
jecxz
loop
xor
icebp
xchg
dec
xor
add
xor
push
popf
jo
lea
jg
imul
lahf
push
push
hlt
inc
movsb
negl
pusha
xchg
lahf
dec
or
outsl
inc
lahf
rcrb
mov
dec
scas
push
out
xchg
mov
cld
outsl
loopne
ficoml
xchg
add
movsb
pusha
aam
les
incb
push
je
xor
aas
pop
movsl
xlat
fnsave
pop
out
aad
insb
movsl
push
call
xchg
ficompl
data16
cltd
mov
sahf
inc
xchg
cmpsl
sbb
cmpsb
int
movsb
jo
ret
iret
js
sub
fnstcw
outsl
ss
xchg
mov
fsubr
jo
lods
bound
cwtl
ficoml
push
call
xchg
inc
inc
popa
sub
aas
or
call
pushf
mov
ret
test
rolb
mov
fdivrs
sbb
and
jl
and
push
xor
xor
pop
mov
mov
ss
lret
jne
scas
mov
mov
sub
jl
inc
mov
frstor
xchg
cmp
mov
sub
mov
pop
xacquire
test
push
push
adcl
pop
cwtl
push
mov
cmp
cmpsl
dec
mov
ret
jmp
xor
das
scas
leave
test
pop
pop
dec
xor
push
pop
pop
xchg
popf
rolb
sarl
cld
dec
or
xor
sbb
pop
and
sbb
fs
or
inc
pop
mov
dec
cmp
jg
test
test
imulb
cmp
in
inc
mov
daa
scas
jmp
pop
cmp
add
jmp
je
dec
ret
jno
jo,pn
popa
add
mov
shlb
jne
or
mov
or
and
pusha
xor
cmc
std
das
jge
inc
sub
clc
out
adc
shlb
je
aaa
add
lret
xchg
lods
fldcw
sub
in
insl
lahf
mov
lock
sbb
int3
fisttps
fwait
add
into
push
push
ljmp
mov
pop
jp
dec
xor
ret
fwait
adc
sbb
sbb
ret
mov
jne
dec
xchg
ud0
add
or
sbb
mov
cld
sbb
pop
dec
imul
xor
lds
mov
sbb
lret
stos
filds
jb
adc
mov
ret
jmp
mov
add
dec
mov
adc
popa
mov
jns
jne
push
flds
mov
inc
bound
mov
mov
mov
pop
dec
cltd
push
jb
mov
imul
mov
test
dec
add
cmp
scas
add
rcrb
or
push
jle
popa
cmp
lret
out
cmpsb
and
xor
repnz
in
xchg
jmp
and
test
xlat
frstor
push
clc
push
insb
mov
jns
int3
inc
aad
lock
cmpsb
aas
inc
add
orl
out
gs
jo
or
mov
adc
cmp
sbb
daa
or
dec
push
add
ret
pop
push
test
aas
sub
add
orb
dec
jge
mov
data16
mov
pop
cmp
cmpsb
lods
mov
ror
jp
popa
xlat
jbe
jne
lods
outsb
inc
sbb
jle
mov
sahf
add
sub
add
or
and
dec
mov
icebp
cmpsl
cmp
aaa
fucomp
imul
ret
cmp
ficoms
sub
fadds
ja
clc
js
or
imull
lods
mov
sti
inc
jae
push
ret
js
das
xor
mov
lock
cmp
into
nop
mov
jbe
sub
popf
add
dec
inc
pop
aaa
seta
in
movsl
lods
ret
clc
loopne
jecxz
add
xchg
lods
outsb
into
rorl
out
inc
dec
stos
clc
outsb
push
jmp
pushf
cmp
loop
dec
push
or
imul
stos
push
aad
ja
outsl
pushf
lods
pop
inc
mov
jmp
and
adc
in
mov
out
push
sbb
xor
rol
aad
cltd
sub
mov
adc
xor
push
cmp
adc
outsl
add
mov
xor
pop
aad
movsl
icebp
dec
pop
dec
push
pop
sub
add
filds
outsb
cmp
inc
pop
and
idiv
add
xor
mov
add
mov
mull
sbbl
pop
inc
push
sahf
int
fcomp
mov
xchg
std
adcl
mov
adc
mov
sbb
xchg
inc
lret
mov
lods
push
pop
out
add
adc
pop
sbb
jb
jmp
fmull
or
cmpb
inc
dec
pushf
dec
and
and
daa
mov
cltd
icebp
mov
aam
lcall
mov
fwait
and
adcb
or
pop
lods
cli
dec
loopne
xchg
pop
mov
aaa
adc
bound
sbb
outsb
aam
lods
pop
xor
mov
mov
pop
cmpsb
mov
in
pushf
mov
fistpll
mov
pop
ficoms
xchg
popf
or
fbstp
mov
xchg
cmpsl
push
add
shl
mov
fwait
lock
dec
cmpsb
int3
mov
scas
or
xor
xchg
pop
pop
ja
sbb
sub
sub
daa
out
and
loopne
sub
xchg
dec
sub
mov
sbb
jb
cmp
fwait
xlat
ja
dec
cmpb
js
cmpsl
lret
xchg
and
and
mov
dec
sbb
pusha
pop
aaa
rolb
cmp
inc
and
mov
rolb
dec
clc
xor
into
vmptrld
scas
or
mov
cmp
push
test
mov
add
lahf
xlat
ret
jb
and
lret
dec
xor
xor
inc
inc
and
sarb
jp
in
dec
gs
adc
xorb
insl
addr16
in
cld
pop
icebp
jae
addl
stos
gs
cmp
push
int
arpl
popf
jns
jg
mov
sub
aas
into
aaa
fwait
pop
out
xor
xor
stc
in
xchg
pop
mov
into
lret
pop
shrb
test
xor
sub
dec
int
jnp
dec
les
retw
jg
sbb
popa
xchg
mov
mov
inc
out
insb
mov
xor
gs
sbb
push
pop
pop
pop
sbb
inc
shlb
addl
lret
ret
or
mov
fnstenv
cmp
arpl
mov
cmpsl
or
xchg
xlat
roll
aas
mov
pusha
lret
mov
pop
jae
jns
call
jmp
push
or
dec
jae
or
out
push
cmp
arpl
adc
xchg
fistl
pushf
sub
sbb
mov
xchg
mov
pop
add
mov
stos
iret
cmp
jne
ret
shlb
mov
sub
stc
add
int3
xor
es
stc
pusha
inc
mov
pop
int
or
fisttpll
mov
test
dec
mov
imul
inc
scas
mov
scas
daa
ja
jecxz
jns
jmp
outsl
mov
repnz
loop
in
test
mov
popf
push
cmp
push
dec
xor
mov
sar
out
push
cmp
hlt
sahf
sub
in
das
pusha
stc
fsts
mov
in
test
push
shlb
movsb
and
mov
arpl
out
dec
clc
popa
sarb
mov
sahf
adc
popf
test
div
iret
lret
jne
jno
sbb
pop
push
sti
dec
outsb
stos
insl
xor
fimuls
daa
fildll
or
shll
mov
xchg
hlt
push
push
and
push
push
mov
cld
add
insb
push
sub
sub
adc
mov
pop
insl
jecxz
cwtl
ja
sub
negl
andb
xor
jle
mov
mov
mov
std
mov
or
pop
jne
xchg
cmpsb
mov
xor
jae
inc
outsl
inc
movsb
sub
xlat
jp
mov
popa
ret
sarl
lcall
pop
push
dec
dec
ror
cld
das
sbb
popf
pop
xor
or
add
in
shlb
dec
lret
pop
xor
or
sub
or
push
push
call
rcrb
cmpb
fidivs
ficoml
push
std
adc
inc
mov
rorl
sahf
stos
test
mov
pop
jae
int3
loope
clc
inc
arpl
jle
fsts
les
dec
mov
inc
es
and
lret
sub
xor
xchg
fxtract
jp
sar
addb
xchg
sbb
xchg
mov
repz
sub
adc
push
pop
dec
in
cmp
rclb
xchg
add
cmp
xchg
into
ret
ss
xor
mov
sahf
sub
out
mov
jle
mov
aaa
in
repz
lock
sub
and
fisubs
lods
push
add
sbb
cmp
pop
mov
mov
dec
cmpsl
ficompl
test
push
add
pop
cmp
adcl
scas
out
out
xor
mov
jg
lock
push
ret
insb
jo
shrl
in
dec
scas
jne
push
pop
adc
pop
and
movsl
mov
push
mov
out
cmp
lret
pushf
popa
cmp
mov
call
sti
inc
fidivl
sub
cmpsb
or
inc
dec
dec
daa
adc
rorl
push
add
inc
sbb
pop
lea
pop
mov
push
dec
xchg
push
test
add
sub
xor
adc
lret
fucomip
mov
testl
aas
xchg
sub
ljmp
outsl
jmp
movsb
aas
divb
into
scas
inc
inc
test
lods
pop
cmp
add
sbb
adc
loope
aam
andl
lret
push
mov
push
add
sub
addr16
inc
repnz
clc
push
adc
ftst
jnp
daa
lahf
inc
and
es
pop
cmpl
mov
xchg
ljmp
dec
mov
mov
je
xorb
icebp
or
jl
mov
jmp
in
or
jge
clc
xlat
pop
xchg
dec
push
mov
mov
mov
mov
mov
or
and
lcall
inc
mov
in
cmpsb
push
xor
in
pop
into
mov
dec
hlt
mov
rcrb
add
dec
cmp
data16
mov
outsl
sbb
mov
in
xor
stos
imul
xor
push
data16
dec
jp
jne
out
mov
dec
andb
jecxz
or
xor
ljmp
imull
push
les
push
shlb
insb
jns
iret
ja
mov
pop
mov
mov
pop
xchg
mov
xchg
sbb
pop
push
xor
push
cmp
lods
push
movb
call
outsb
outsb
dec
insl
mov
dec
cmpsb
das
adc
inc
shll
jbe
add
jnp
adc
jle
rcrl
mov
or
out
test
xchg
dec
adc
mov
add
mov
sub
pop
pop
sbb
insb
xor
pop
aas
repnz
aam
mov
pop
ja
inc
mov
imul
in
cli
cmp
fwait
fsubr
xchg
mov
dec
mov
mov
mov
lock
add
js
mov
pushf
insb
orl
mov
testl
scas
cmpsl
mov
fst
and
repnz
and
jo
mov
mov
dec
fdivp
mov
mov
scas
into
pop
cmp
or
xor
in
inc
ret
rolb
or
loopne
je
mov
and
int
cli
mov
cmp
cmc
lret
fwait
inc
adc
nop
orb
pop
pop
xchg
sub
les
in
inc
je
mov
jo
mov
pop
icebp
jne
cmpsl
mov
rorl
in
or
cmp
xor
mov
dec
sub
scas
xchg
sbb
arpl
jle
ret
fisttps
adc
js
mov
fsub
movsl
mov
adc
jp
pusha
pop
mov
es
sti
pop
es
test
out
mov
repz
clc
fcomip
ja
dec
push
int
push
fisubl
das
inc
insb
add
test
es
pop
cmp
jp
sbbb
js
aam
loopne
or
out
cmc
das
or
sub
fisubl
jne
and
mov
push
icebp
and
call
ficomps
shrb
sbb
sbb
in
std
jno
cmp
sahf
mov
ljmp
mov
jg
add
sub
add
mov
loope
push
jmp
jmp
js
add
mov
loope
cmp
pop
pop
sub
std
cli
or
pop
or
mov
mov
cmp
sub
pop
inc
cmp
icebp
push
mov
mov
mov
jae
pushf
jne
sbb
inc
dec
push
imul
dec
inc
scas
idivb
insb
shlb
stos
insb
cmp
scas
mov
jns
push
push
les
cs
sarl
insl
xor
fiaddl
sub
andl
fidivrl
lods
aaa
test
imul
movsl
ror
mov
dec
int3
mov
mov
lods
xor
cmp
cli
in
xchg
aad
adc
loopne
sub
sbb
jle
jg
aaa
js
cmp
fs
xchg
jl
pop
xchg
mov
push
or
push
push
inc
cmpsb
imul
dec
dec
lretw
mov
jo
inc
arpl
jne
mov
jp
pop
sbb
add
fcmovne
ja
mov
sub
xchg
in
ljmp
jbe
fwait
dec
addr16
mov
mov
aas
mov
mov
push
pop
inc
push
jno
fcomi
xchg
jp
push
inc
push
lds
cmpsl
add
xlat
xchg
test
push
adc
cmp
xchg
jg
cmp
subb
cmp
movsb
test
lds
rcrb
lcall
xor
mov
xchg
jnp
xchg
pop
jo
arpl
jae
xor
jmp
sub
add
cwtl
cmp
xchg
mov
cmp
lock
movsb
arpl
fstenv
xor
filds
ss
push
les
scas
stos
add
xchg
or
adc
sbb
sbb
mov
out
xchg
add
das
jae
and
mov
mov
pop
sbb
xor
push
or
in
ja
jecxz
push
mov
dec
pop
mov
sub
popf
jmp
mov
call
mov
scas
push
sub
inc
int3
sub
cwtl
pop
clc
sbb
arpl
fisubs
icebp
int
mov
loope
push
jmp
aaa
pop
cltd
scas
jmp
inc
and
lcall
jno
or
js
mov
inc
cltd
ret
sbb
jg
imul
xor
mov
add
sahf
cmp
push
jne
mov
cmc
pusha
out
and
enter
and
add
cld
and
fmuls
icebp
mov
dec
jle
jg
pop
leave
mov
dec
idivl
sub
int
jecxz
out
fisubl
jl
aam
or
sbb
pop
daa
mov
fstl
jbe
xor
les
jnp
mov
fdivrs
enter
pop
mov
sub
lds
out
in
jmp
adc
pop
lea
jle
push
xchg
addb
in
pop
int
xchg
nop
lcall
mov
inc
dec
stos
pop
adcl
jp
jo
cs
idivb
jnp
ss
aas
sbb
xor
sub
and
call
and
les
cld
ret
hlt
in
imul
loope
or
xor
lock
into
sbb
lea
sti
pop
jbe
mov
imul
xor
std
sub
xorb
jg
cmp
adc
leave
cmc
movsb
imul
cmp
push
or
push
pop
sbb
jecxz
jb
lods
push
pop
rcrl
lds
xchg
sbb
in
lea
add
xchg
movsb
orl
loop
and
xor
mov
test
push
popf
push
jnp
or
mov
xor
dec
mov
adcl
mul
jl
fucomi
or
xlat
lcall
pop
divl
sub
or
fsub
mov
rorb
cld
mov
call
andl
in
jb
mov
lret
popf
aas
popf
push
jmp
addr16
sbb
and
rclb
add
ds
sbb
and
in
mov
leave
mov
idiv
add
sub
dec
mov
fs
in
cltd
rcrl
rclb
add
or
or
fisubs
inc
xlat
lcall
xor
shlb
inc
clc
hlt
jl
cmc
movsb
or
pop
cmp
cld
or
jnp
fisttpl
adc
in
lret
jno
sarb
mov
or
fisubrs
inc
popa
push
and
iret
push
loope
decb
sbb
and
out
add
mov
loope
mov
cmp
je
cmp
and
fwait
mov
push
xchg
mov
push
push
inc
shlb
lret
jmp
pop
jmp
movsl
movl
in
add
and
xchg
mov
ret
xchg
lahf
inc
loopne
fists
in
in
mov
into
repz
push
shll
xlat
rorl
xchg
xor
out
push
out
push
insb
das
test
or
fnstenv
leave
lds
lret
imul
mov
inc
mov
test
outsb
dec
or
jmp
mov
mov
lods
push
xor
push
mov
gs
std
lods
orl
pop
mulb
or
popa
and
xor
adc
dec
adc
loopne
sbb
incl
sarl
cmc
pop
rcrb
mov
push
adcl
sti
scas
mov
insl
loopne
in
loopne
inc
outsb
pop
jae
add
xchg
std
push
rolb
lret
int3
insb
sbb
sbb
test
repz
inc
inc
xor
gs
in
cmp
cmp
decl
ljmp
jp
add
movsl
xchg
xchg
cli
inc
mov
mov
push
mov
cli
cmp
ret
lods
jno
mov
dec
sbb
outsb
mov
jle
add
fnstenv
push
push
adcl
repnz
ljmp
scas
mov
pop
movsl
add
rol
jmp
fisubl
ret
mov
insl
fcoms
mov
mov
sub
sub
adc
add
mov
aad
sti
or
ds
mov
lcall
sarl
in
sub
jle
outsb
cmc
mov
xchg
mov
int3
mov
test
xchg
push
imul
ds
loopne
inc
add
cmp
lods
xchg
mov
mov
shlb
inc
xchg
add
jnp
fcomps
xchg
adc
lds
dec
int3
inc
outsb
out
in
lahf
or
mov
sub
das
and
cmp
pushf
cli
leave
or
inc
ds
fwait
cmp
add
in
or
repnz
shll
jecxz
inc
cmp
les
pop
or
sub
out
pop
je
jp
inc
test
push
jg
mov
or
jp
cli
repz
xchg
mov
inc
jmp
or
jp
jmp
ljmp
loop
sbb
or
xchg
or
fnclex
stc
sub
jne
xchg
jbe
test
notl
adc
fcoml
aaa
imul
dec
les
imul
push
hlt
xor
pop
fldenv
pop
out
sub
ret
xchg
xchg
rcll
xchg
es
pop
leave
add
add
pop
fnstcw
xchg
push
add
dec
imul
cli
fdivr
outsl
in
cli
bound
out
ja
sbb
sbb
jle
repz
pop
push
fmul
jne
dec
lret
push
neg
cltd
add
addr16
fstps
dec
das
sub
mov
xchg
ja
inc
lcall
or
insb
and
mov
ret
jne
mov
push
ljmp
std
xor
push
cld
rcr
or
jmp
add
xchg
lds
dec
sbb
mov
das
or
push
push
push
push
adc
push
subl
pop
sbb
loopne
nop
jle
push
scas
data16
sub
test
xor
xchg
adc
push
insl
xor
sub
dec
cld
arpl
pushf
adc
lret
ljmp
inc
push
popf
ror
mov
push
push
jge
addr16
in
daa
js
out
add
iret
cltd
dec
loopne
or
scas
sub
into
sub
cmp
frstor
inc
inc
cli
cld
sub
iret
or
iret
ljmp
loopne
sbb
enter
inc
cmp
movsl
mov
pop
pushf
roll
jno
pop
dec
fucomip
add
sbb
sbb
testl
data16
inc
adc
cmp
sti
push
mov
lea
bnd
add
jo
stos
ret
insb
dec
sub
fcmovnu
je
shrl
ja
mov
or
mov
mov
jbe
jle
mov
lods
and
lahf
push
lea
lods
xchg
inc
push
mov
fbld
rolb
mov
or
sub
dec
fdivrp
aad
xor
lahf
sub
and
cwtl
insl
pushf
jg
push
mov
shlb
inc
mov
mov
adc
sbb
jl
test
inc
mov
sahf
aaa
daa
fidivl
lcall
loopne
xor
or
push
ljmp
arpl
xchg
push
mov
cmp
inc
cmpsl
sbb
mov
gs
repz
ret
xchg
xor
and
addr16
fimull
aaa
cmc
fbstp
adc
mov
and
jns
out
jmp
mov
sbb
cmp
shrl
push
jo
cmp
dec
dec
inc
divb
push
pop
cmpl
or
or
je
nop
iret
pop
int
sbb
xchg
fidivl
dec
push
pop
int3
jo
sub
adc
xchg
push
add
pop
lcall
mov
out
jge
mov
and
inc
imul
aad
sbb
and
pop
mov
rolb
call
jmp
push
cmp
sbb
mov
sahf
stos
push
mov
jl
out
arpl
lods
adcl
push
mov
push
js
add
dec
mov
lods
dec
jae
jl
stos
push
out
cli
xor
lret
scas
mov
pop
lock
cmp
xchg
pop
and
pop
lea
les
js
jne
loope
sbb
dec
add
in
mov
pop
lods
adc
sbb
scas
lods
test
adc
adc
jmp
jnp
test
mov
inc
push
dec
movsl
stos
stos
push
aad
mov
jmp
enter
insl
add
and
loop
pop
ljmp
sbb
cltd
jae
loopne
scas
add
inc
push
adc
sbb
push
int3
mov
pop
add
ret
popa
push
andb
mov
es
xor
dec
jns
and
sub
mov
mov
arpl
dec
fs
fsubrl
in
jno
sub
dec
mov
mov
lret
into
addr16
mov
push
or
out
pop
and
jp
dec
stos
push
je
inc
cs
inc
jg
fwait
jnp
add
int3
rcl
xor
and
mov
mov
adcb
sbb
mov
cmc
sbb
sub
insl
call
sub
push
sub
ja
push
sub
jne
jmp
xchg
push
xor
push
xchg
dec
sbb
andl
lret
imul
pop
xchg
push
mov
push
fsubrs
adc
jecxz
lret
pushfw
loop
and
sub
lret
or
ret
test
mov
add
push
inc
add
xchg
stc
jmp
inc
mov
xorl
fnstcw
push
nop
inc
test
mov
inc
notl
cmp
out
sahf
int3
sub
push
js
or
adc
aas
sbb
fcmove
enter
sahf
fsqrt
clc
mov
or
add
lods
mov
xor
sub
push
sti
cltd
test
sbb
or
and
stos
aas
clc
inc
sub
xchg
and
scas
bound
pusha
push
mov
mov
jno
pop
aas
fcmove
sbb
push
mov
out
or
sti
push
adc
lret
cmc
scas
inc
and
outsl
dec
pop
add
movb
add
ljmp
sti
les
mov
mov
push
add
daa
cld
lods
int3
repnz
cmp
ret
lahf
adc
mov
push
cwtl
nop
imul
aas
adc
jge
mov
bound
ror
mov
popf
add
scas
call
pop
push
nop
lahf
ficoms
fiaddl
ret
mov
int
sbbb
xchg
iret
pop
sub
addl
outsb
adc
pusha
fcmovne
inc
ror
jb
cli
mov
js
fisubl
jmp
enter
fucom
push
stos
mov
fnclex
mov
sbb
lods
xor
dec
and
hlt
loopne
pop
stc
test
repz
popf
sub
add
dec
cmovbe
or
outsl
mov
in
imul
pusha
sbb
or
repz
jle
lret
mov
sub
jne
sbb
pop
rorb
xchg
sbb
pusha
pushf
test
movsb
jmp
out
cmp
dec
xchg
xor
divl
pop
fs
push
ss
sbb
xor
cmc
mulb
fildl
pusha
addr16
cwtl
iret
xchg
pop
dec
xchg
pop
lret
xchg
jne
or
inc
scas
cltd
pop
pop
adc
test
jge
dec
sbb
data16
aad
mov
jge
xchg
xchg
xchg
and
insb
cmp
sbb
xchg
mov
or
in
sti
outsb
push
add
fs
pop
push
push
lret
push
xlat
lock
mov
ficoms
fpatan
scas
inc
cmc
loopne
inc
lock
xchg
mov
movsb
push
push
mov
fadd
out
mov
cltd
cli
pushl
and
inc
and
out
pusha
scas
xchg
xor
test
dec
adc
inc
pop
insl
ds
xchg
mov
shr
add
mov
dec
ss
adc
fstl
int
adc
add
fstl
mov
lret
mov
lods
sbb
imul
in
lret
jmp
enter
dec
pop
mov
jae
jbe
imull
mov
repz
jmp
mov
or
cmp
jp
iret
ret
xchg
mov
mov
jle
mov
jns
xor
xchg
add
xor
test
lods
xor
mov
sub
pop
inc
pop
adc
addr16
cmp
lods
jl
lods
jne
subl
out
mov
adc
imul
mov
adc
sbb
mov
dec
cltd
push
or
xor
je
add
xchg
mov
ds
adc
xor
addl
dec
sub
xorb
outsl
fisttps
icebp
add
add
loop
outsb
inc
sbb
addb
xor
push
jg
ror
stos
jnp
xchg
jp
addl
mov
xchg
frstor
mov
daa
loope
test
push
mov
sbb
lods
fwait
xor
lock
pop
pop
adc
sbb
rolb
inc
jl
sub
mov
pushf
fst
inc
js
pusha
dec
xor
pop
ljmp
ret
leave
shlb
and
decl
sti
pop
mov
xor
pusha
mov
jbe
push
xor
cltd
in
enter
shll
add
and
into
xchg
pusha
arpl
sbb
repnz
xchg
xchg
or
jne
es
xchg
bound
out
mov
and
out
or
dec
sub
pop
aaa
inc
add
push
mov
pushf
jle
cwtl
loop
in
cmc
or
push
mov
gs
aaa
les
popf
rcrb
or
test
test
cmp
xchg
pop
jne
mov
sarl
bound
pushf
lods
icebp
call
shll
mov
bound
mov
adc
adc
push
jb
xor
push
outsb
cmc
xlat
add
lcall
sti
rcll
adc
call
add
repnz
sarb
mov
sbb
sub
or
mov
xchg
hlt
test
imul
stc
dec
push
hlt
xor
pop
sarb
aam
mov
push
popf
dec
in
imul
or
in
xor
push
imul
mov
cltd
mov
lret
cmp
jb
jmp
fldl
stc
pushf
push
loopne
ja
rolb
fucomi
mov
mov
mov
divb
sub
jge
pop
data16
and
adc
pop
in
or
sbb
mov
insb
adcl
inc
pushf
sahf
mov
adc
adc
mov
idivl
fistl
rep
lods
pop
stos
sbb
lods
ljmp
jo
leave
dec
and
jge
jge
aad
jecxz
or
in
aam
out
xor
daa
mov
shll
hlt
pop
sub
fisttpl
push
les
fimuls
test
imul
sbb
inc
jb
sahf
pop
pop
pushfw
sub
lret
std
pop
data16
fcoms
add
fdivrl
or
fldenv
push
sti
ficomps
xchg
fisubrs
ljmp
pop
add
pop
mov
sub
and
jl
xchg
arpl
mov
clc
cmp
mov
xchg
imull
mov
and
adc
ds
pop
lods
je
or
rol
or
test
xor
push
or
fidivrl
sahf
cmp
inc
add
lods
mov
cs
out
ret
push
outsl
lea
push
daa
lret
xchg
mov
cmp
and
dec
lods
mov
sti
push
pop
lods
xchg
jae
sbb
add
clc
arpl
gs
aam
bound
fisttps
mov
jae
ret
je
push
outsl
nop
or
adc
sub
pop
cmp
fs
sub
pop
into
xchg
push
sub
leave
push
mov
push
mov
or
sbb
xchg
lret
jns
mov
mov
mov
push
mov
push
inc
xchg
pusha
xchg
data16
mov
popa
fwait
out
adc
subb
sarl
pop
imul
into
mov
sub
jmp
sbb
cmp
in
jb
jle
inc
jge
mov
pop
push
xor
out
ss
in
jge
sahf
inc
and
icebp
dec
cmp
iret
iret
cld
or
mov
push
scas
imul
in
push
pop
sbb
fidivrl
ss
mul
sub
mov
xor
stos
push
mov
mov
divb
ret
and
scas
std
sub
jle
push
loopne
les
call
clc
insl
mov
sbb
out
std
mov
out
scas
sbb
movsb
adc
sub
mov
or
into
push
cmp
in
das
leave
cld
scas
les
or
jle
imul
cmp
sti
test
xchg
mov
popf
icebp
push
cmpsb
mov
jne
cmc
dec
nop
push
lret
jbe
cmc
jmp
jae
insb
add
outsb
fadds
fwait
jle
movsb
sar
or
imul
inc
testb
jle
cmpsb
repnz
sbb
inc
shld
mov
das
xchg
and
pop
scas
movsl
mov
std
dec
subb
cmc
xchg
lcall
repnz
ret
jb
fcmovb
push
pop
jne,pn
adc
or
cmp
xchg
mov
inc
arpl
rcll
test
test
mov
mov
dec
decb
int3
and
lahf
insl
lahf
mov
scas
imul
xor
and
or
lret
or
pop
ds
push
adc
mov
mov
stos
js
mov
in
mov
add
add
pop
fwait
sbb
pusha
cltd
mov
es
popf
ljmp
ss
push
push
sbb
push
xor
addr16
adc
loopne
cmp
iret
xor
popa
divl
xor
out
sbb
jmp
xchg
xor
cmp
pusha
adc
sub
mov
dec
fldt
in
mov
jp
or
jl
std
xor
inc
jnp
dec
repnz
movl
cmp
push
lcall
imul
stos
push
pop
scas
push
incb
add
fldt
stos
daa
lret
adc
jns
mov
and
sub
pop
stos
xor
jns
bound
dec
mov
idiv
cmp
sub
adcb
and
and
mov
pushf
mov
jo
mov
sbb
movsb
repnz
add
inc
jp
adc
jge
stc
lock
je
xchg
inc
cmpsl
xlat
movsl
jns
cmc
jae
out
and
mov
xor
fimull
out
and
mov
movsl
mov
aad
outsl
adc
sub
pop
fmulp
push
fistps
jo
nop
int3
mov
stos
lret
in
cmpsb
push
cltd
dec
aam
test
movsb
arpl
mov
sub
mov
lds
in
pop
mov
cmp
mov
pop
inc
hlt
or
xorb
mov
mov
insb
jecxz
mov
jmp
or
sbb
mov
sbb
aad
je
aaa
pop
adc
shr
aam
clc
out
imul
movsl
inc
f2xm1
jge
out
mov
ds
ljmp
mov
fiaddl
and
sbb
jge
sbb
cmpb
mov
sbb
mov
arpl
cmp
lods
push
loop
popa
popa
xchg
in
repnz
xor
mov
sbb
insl
push
add
cmp
daa
push
imul
sbb
pop
push
xor
mov
std
inc
xchg
cmpsl
fwait
mov
lret
in
outsl
mov
ret
mov
push
mov
mov
lret
lock
mov
push
pushf
inc
dec
fdivs
xchg
cmp
enter
mov
lock
sbb
cmp
into
jb
test
push
int3
mov
cwtl
xchg
aas
jno
add
mov
mov
cmp
push
sbb
jecxz
inc
ds
clc
jl
mov
mov
ret
push
mov
int
dec
cmp
inc
mov
lcall
rcrl
lret
or
inc
clc
jle
inc
jge
aam
adc
repnz
jecxz
dec
add
mov
adc
mov
cltd
sub
mov
clc
lahf
push
cwtl
xor
loop
jle
jmp
and
adc
repz
push
or
dec
dec
repnz
arpl
ja
push
or
int
jge
divl
loopne
pop
xlat
rorb
adc
add
or
adc
pop
jmp
or
jp
orb
push
mov
xor
inc
mov
faddl
scas
xchg
movsl
icebp
hlt
das
mov
rol
push
into
insb
and
xor
and
test
lods
mov
xchg
xchg
or
cmp
push
shlb
ret
loop
movsb
adc
insl
ja
and
dec
jmp
shlb
sub
fprem1
outsl
and
jbe
lea
lods
stos
pop
or
xchg
aad
in
aam
xchg
gs
jmp
adc
js
and
test
leave
xchg
movsb
js
lcall
dec
imul
jno
fistpl
stos
sub
loopne
dec
dec
outsl
lock
push
jp
xchg
addr16
cmpsl
jge
loopne
pop
dec
mov
int
movsb
int3
shll
popa
call
repz
fiaddl
rolb
call
js
inc
lds
out
in
jns
cmc
pop
mov
mov
jg
mov
cli
xor
mov
push
ficoms
jmp
xchg
loop
test
jb
adc
iret
dec
flds
dec
scas
mov
mov
sarl
aam
mov
adc
push
xor
and
mov
into
ret
out
inc
loop
ja
dec
ja
je
xchg
mov
sub
push
popa
movsb
stos
and
jb
jp
pusha
cmp
pop
dec
fistpll
mov
cmpsb
jno
pop
cmp
stos
push
dec
dec
int3
xchg
daa
xor
xor
mov
xor
pop
incb
push
xlat
add
mov
sub
arpl
sub
mov
sbb
push
ljmp
and
cld
pop
rcl
add
push
popa
jbe
ja
dec
add
mov
fldlg2
push
sub
imul
int
rol
mov
fisttps
add
fcoml
ss
add
leave
mov
inc
repnz
int3
xchg
inc
xorb
push
test
cmpsb
jecxz
pop
mov
fnstcw
sub
decl
movsl
mov
jb
add
mov
or
cwtl
in
sbb
rorb
pop
pop
mov
and
pushf
sbb
mov
push
jl
leave
sbb
stos
and
jecxz
and
push
fsubl
mov
into
jl
mov
dec
xchg
mov
xor
jb
add
mov
aas
icebp
divl
dec
pop
inc
or
push
xlat
mov
or
icebp
ror
push
xchg
pop
xchg
cs
push
test
push
adc
sbb
shrl
test
movsb
sub
mov
imul
pop
cmpb
pop
xor
pop
stos
sub
push
mov
ret
in
cltd
xrelease
pusha
mov
imul
and
cwtl
pop
and
and
stos
adc
add
or
mov
push
adc
xchg
lods
add
inc
mov
ficompl
xchg
les
imul
gs
add
mov
repz
jecxz
mov
leave
and
and
and
sub
push
popf
inc
push
cmp
jecxz
add
mov
inc
inc
xor
test
bound
adc
pop
loop
ljmp
pop
aaa
call
cmp
dec
inc
xchg
or
push
mov
insb
sbb
in
xchg
sbb
adc
or
dec
mov
jl
and
bnd
pop
js
jecxz
aad
pop
adc
repz
and
stos
dec
enter
and
mov
cli
cmp
aam
jae
mov
or
into
jle
adc
or
in
fidivrl
sub
ds
pop
sarl
ret
testl
cwtl
sbb
xor
jp
xchg
add
imul
pop
cmc
cmovle
or
mov
lods
dec
jae
imul
stc
xchg
aas
pop
out
cs
nop
or
or
sbb
ja
addr16
lret
pop
movsl
sbb
mov
addr16
xor
mov
aam
nop
outsl
shrl
cmp
push
loop
mov
fcomps
dec
xlat
in
jbe
xor
fs
test
movb
jecxz
cmp
cs
inc
sarl
mov
sub
insb
xchg
addr16
mov
imul
cltd
or
int
in
adc
mov
sub
test
xchg
ffreep
insb
ss
push
inc
push
mov
sub
ss
sub
loop
xchg
std
mov
jb
testb
shlb
push
std
loopne
leave
cmp
adc
rcl
imul
xchg
mov
xlat
clc
fisubrl
jne
push
fld
test
cmp
out
xor
leave
dec
mov
cmpsl
insb
sub
out
pop
div
xlat
ljmp
aad
lcall
das
pop
inc
jecxz
sahf
cmp
sbbb
lcall
mov
dec
imul
aaa
xorb
out
dec
ret
push
ljmp
ljmp
inc
pusha
mov
and
dec
adc
fdivp
sub
shr
in
shl
lahf
das
mov
mov
popa
lods
pop
sarb
cmc
mov
lret
jbe
jae
push
mov
sub
aaa
insl
pop
mov
mov
dec
mov
in
jle
int3
xor
xchg
add
jae
pop
push
or
xor
out
les
cmp
push
sub
pop
mov
in
shlb
or
or
fcoms
fcomps
loopne
pop
or
inc
xchg
jae
js
and
aad
aad
mov
jl
mov
stos
shll
ret
les
decl
ja
push
cs
in
pop
fcmovnu
fst
out
in
mov
mov
int3
rep
adc
adc
outsb
and
out
dec
lds
and
dec
xor
cld
lods
add
imul
mov
stos
mov
jbe
jecxz
mov
sbb
push
sti
pop
imul
adc
ret
push
dec
and
adc
jae
xor
xlat
sub
xchg
inc
pop
xor
inc
sti
push
or
pop
or
inc
sbb
mov
or
out
ss
cld
lock
loope
test
jecxz
clc
aas
rorb
sub
or
push
ds
lea
sbb
sbb
hlt
cmp
lret
leave
mov
xor
or
aaa
ret
fstpl
filds
pushf
orl
jns
mov
jnp
dec
in
add
sbb
push
adc
arpl
stos
lret
dec
cltd
es
mov
sbb
adc
mov
popf
adc
divl
sub
movsl
loop
lret
aam
inc
mov
in
sbb
sub
sub
xor
push
insb
fnstcw
test
test
mov
sarb
test
xchg
push
out
xchg
adc
cwtl
mov
xchg
clc
ljmp
clc
and
mov
mov
shrb
and
mov
jae
aad
or
add
cltd
fdivl
in
push
push
mov
test
ret
sbb
pop
and
xor
dec
out
hlt
nop
fcmovnu
xlat
xlat
push
lods
loopne
testl
jle
adc
jbe
push
nop
ja
sbb
ret
mov
loop
push
jae
bound
in
inc
out
xchg
sbbl
mov
jp
out
cmc
fdivrp
nop
xor
inc
and
aam
fs
pop
push
xchg
cli
inc
lods
imul
idiv
fisttpll
xchg
mov
pop
dec
les
sbb
push
pop
aad
test
imul
pop
sti
xchg
dec
outsl
push
xchg
in
push
fwait
xor
fdivs
nop
mov
ds
hlt
iret
ret
jo
in
ds
int3
test
ss
jae
mov
pop
sbb
fistpll
jmp
xlat
fists
in
dec
sub
je
outsl
mov
sub
add
addb
fs
clc
mov
imul
aaa
sarl
pop
sub
pusha
pop
or
push
or
inc
les
jl
add
adc
stos
popf
dec
ds
and
fdivrl
pop
cwtl
movsl
push
into
clc
inc
cmp
mov
in
pop
cli
stos
scas
push
std
nop
xchg
xchg
jno
pop
jp
fcmovnb
je
fiaddl
out
aad
fstpl
xor
xchg
mov
stos
es
ret
and
pop
mov
lods
sbb
sbb
mov
mov
das
mov
ffreep
mov
jmp
adc
je
pop
lcall
lret
fwait
sub
pop
add
add
fsub
bound
cmp
rcll
xchg
xor
push
add
hlt
ljmp
mov
inc
shl
jne
or
pop
inc
aam
aam
lds
mov
scas
cmp
mov
imul
out
push
pusha
xor
sbb
push
pop
test
paddusw
mov
pop
sub
xchg
call
add
cmp
cmp
dec
mov
pop
ss
sub
and
jge
mov
sbb
ds
mov
idivb
mov
or
xchg
adc
loop
push
enter
sbb
xorb
sub
in
mov
xor
icebp
movsl
mov
stos
sbb
mov
inc
int
cmp
dec
pop
in
add
popa
lret
fs
pushf
lahf
mov
loopne
cmp
push
jl
inc
xchg
push
int3
fcomps
gs
pop
xchg
bnd
mov
stos
subl
inc
loopne
push
sub
xchg
mov
lock
enter
xchg
mov
insl
dec
push
mov
xchg
fimuls
adc
mov
xor
inc
and
fld
and
sub
inc
mov
loope
mov
adc
cmp
cmc
test
dec
mov
mov
mov
mov
jnp
ffree
outsl
xchg
flds
mov
sub
inc
mov
jbe
adc
or
in
sbb
call
je
rorl
mov
cmpsb
lds
pop
jg
fistpl
xchg
gs
testb
jbe
inc
jge
scas
ja
sbb
xor
mov
out
push
insl
push
jb
out
addr16
addr16
jae
rorb
jecxz
xor
pop
jae
mov
sub
cmp
inc
inc
scas
daa
mov
or
scas
inc
inc
dec
jo
sbb
mov
mov
popf
inc
insb
lcall
ljmp
fucomi
dec
call
or
clc
pop
pop
add
aad
insl
and
xchg
jae
add
push
stc
inc
daa
xor
in
das
add
adc
mov
inc
push
dec
adc
or
jmp
enter
mov
mov
neg
jae
rolb
mov
mov
lea
xchg
ret
jecxz
imulb
cmpsb
jns
xchg
call
adcl
adc
insl
repz
rcrl
out
in
loop
pop
pop
jo
jecxz
mov
mov
jp
js
fs
imul
ret
or
lock
xchg
out
stos
dec
xor
dec
or
fiadds
or
xor
jmp
js
aad
repz
push
sbb
pop
sub
jne
notl
insl
lods
sub
popl
jge
jb
jb
jmp
inc
stos
insl
call
xchg
jmp
inc
xchg
pop
sub
jge
mov
sub
ss
sarb
jb
lds
popa
lret
out
mov
push
push
jecxz
push
fiaddl
je
cmpl
lea
xorl
icebp
sbb
loop
cwtl
cmp
adc
insl
arpl
dec
sti
mov
pop
leave
jno
insb
cmp
adc
mov
sub
pop
xchg
push
dec
xchg
sub
cmpsb
pop
ds
fcom
cli
mul
push
lock
add
vpmacsdql
jnp
xchg
loope
aas
push
in
xorb
inc
mov
js
adc
fisubrs
rcrb
sub
test
xor
mov
jge
sub
icebp
adc
lea
into
add
cmc
int3
sarl
adc
jbe
push
nop
orl
out
inc
outsb
mov
pop
fadds
push
jle
psubsb
mov
mov
xlat
mov
jmp
lcall
stc
push
ja
aam
mov
dec
mov
stc
shll
pop
testl
sbb
lahf
mov
sub
sub
fiadds
pop
adcb
and
aam
jp
dec
mov
fcoml
movsb
je
adc
out
xchg
or
fldenv
xchg
std
dec
int
insl
sbb
mov
divb
adc
cltd
mov
stos
sbb
shll
xchg
cmc
or
dec
flds
jbe
mov
xchg
push
push
push
add
mov
cmp
xor
sub
push
scas
lods
aam
lret
adc
dec
insl
mov
lret
xor
add
mov
loope
pushf
pop
xchg
push
aas
lds
dec
inc
int
inc
out
stos
testb
orl
sbb
je
mov
mov
pop
data16
or
xchg
jge
adc
cmc
andl
clc
sub
sub
add
popf
cmc
mov
fmuls
or
lods
les
mov
mov
jg
into
outsl
das
dec
shll
xchg
dec
adc
ss
je
inc
xchg
out
jecxz
and
test
pop
or
in
call
or
mov
out
test
inc
roll
adc
ljmp
cltd
mov
sbb
outsb
cmpsl
outsl
dec
sub
sub
sub
add
mov
movsl
cmp
xchg
push
test
leave
pop
lret
mov
rorb
mov
lret
iret
std
jl
fs
jae
iret
pop
out
test
pop
loop
pop
jno
dec
dec
mov
xor
push
sbb
pop
lea
fsubrs
jns
gs
decl
cmpl
sbb
inc
cmc
in
cli
jge
popf
or
jno
adc
push
dec
sahf
imull
push
inc
mov
jmp
or
mov
shll
mov
stos
aad
das
xchg
into
or
sub
sbb
xchg
push
lret
aam
xor
add
into
lret
hlt
xchg
xchg
cmp
andb
int
jg
or
push
or
push
inc
scas
aas
xor
pop
popf
push
mov
xchg
cwtl
inc
pop
sbb
arpl
adc
roll
or
cs
mov
mov
push
hlt
mov
es
or
mov
jg
mov
inc
jmp
popf
adc
out
mov
mov
nop
push
mov
scas
and
inc
dec
push
daa
ret
jnp
fsts
jecxz
ret
cmp
xor
add
in
ficomps
xor
pop
sub
push
mov
scas
xchg
mov
xchg
fiaddl
sub
dec
aaa
jne
mov
movsl
xchg
push
nop
notb
push
jmp
and
pop
int3
or
xchg
popa
inc
adc
mov
xchg
scas
cltd
out
ret
dec
cwtl
push
lock
mov
jno
test
fsubs
mov
stos
mov
dec
add
push
xor
mov
mov
push
xor
lods
daa
loopne
mov
xor
test
add
lahf
sbb
lea
dec
pop
aas
jle
mov
nop
mov
mov
pop
loop
push
lods
ds
stc
movaps
adc
fwait
lods
push
fucom
cmp
out
lods
push
push
add
pop
int3
out
inc
scas
ret
mov
loop
and
xchg
jne
sbb
adc
fsubs
jns
fstpt
stc
push
out
dec
jns
jbe
cmp
sbb
push
shlb
mov
rcr
cmp
arpl
inc
mov
jle
xchg
rcr
adc
sbb
pop
dec
push
into
lods
jecxz
out
pushf
sbb
fistpll
lods
movsl
repnz
popa
add
cmp
sahf
sub
push
xor
and
mov
mov
add
xor
stos
cmpsl
in
cmp
addr16
stc
outsb
add
mov
cld
push
cmp
movsl
mov
add
and
lds
lret
xor
xchg
call
push
xchg
push
lock
test
xor
aad
push
jnp
cmp
push
mov
and
lret
push
scas
jo
lds
dec
rclb
mov
ja
fiaddl
std
xchg
mov
sub
imul
add
int3
add
out
stos
ret
jbe
and
retw
inc
sar
mov
pop
fs
repz
xchg
test
or
push
in
mov
mulb
stos
sub
sbb
jns
popa
leave
enter
mov
cmp
pop
xchg
cmc
pop
sbb
repnz
shrl
loopne
loop
or
mov
push
outsl
scas
pop
cmp
jb
popa
scas
in
xlat
in
lds
xor
sahf
pop
mov
jge
pop
fwait
cmpsb
jl
int3
xchg
cmp
adc
mov
test
mov
mov
push
int3
scas
movsl
dec
cmp
je
pusha
and
nop
pop
cmp
rclb
mov
mov
inc
mov
lods
mov
pop
stos
loop
cmp
scas
add
scas
or
or
cld
popa
out
fsubl
stc
dec
pop
js
mov
jnp
lods
fs
lock
mov
arpl
xchg
mov
sbb
cmpsl
aas
jb
mov
push
pop
sbb
mov
sub
ds
inc
stc
sbb
jge
add
jno
push
xor
sbb
pop
adc
lea
dec
pop
sub
orl
push
sub
adc
sub
sub
ss
repz
shl
test
lret
push
mov
into
popf
mov
mov
pop
pop
les
and
push
sbb
mov
inc
adc
push
notl
add
mov
inc
cli
fisttps
es
fwait
sahf
push
fwait
in
push
lcall
sar
push
add
stos
leave
scas
cmpsl
testb
and
cwtl
lahf
pop
sub
adc
sbb
and
test
adc
jae
vandpd
inc
mov
in
test
pop
lock
lret
pop
push
repnz
mov
xor
fistps
test
nop
in
mov
and
sbb
in
adc
aad
mov
int3
nop
adc
out
ret
mov
sti
imul
int
xchg
shlb
iret
movsl
in
insl
ret
stos
andb
lret
ror
dec
add
shll
jno
iret
mov
xor
sar
jmp
pop
mull
xor
sub
prefetch
or
sub
mov
pop
cmp
rcrl
or
icebp
mov
fdivrl
sbb
pusha
in
aad
sarb
cltd
cs
test
stc
xchg
dec
inc
les
mov
mov
xor
mov
and
shrb
in
cltd
pusha
aad
imul
in
iret
add
mulb
inc
jne
mov
xor
push
adc
int
mov
sbb
inc
cmpsb
cmpsb
cmp
or
mov
adc
cmpsb
dec
push
push
outsb
xor
aad
insl
fcomps
push
addr16
jg
test
decl
mov
mov
sbb
dec
stc
cmc
insl
jne
inc
fs
jno
leave
mov
repnz
out
xor
cmc
lea
sub
popa
daa
lds
ret
fwait
outsl
ret
pop
fldenv
lret
sbb
daa
push
xor
mov
lret
cwtl
jb
sub
mov
sbb
lock
mov
push
lahf
js
scas
imul
imul
pop
ret
dec
xor
add
sub
inc
jae
in
imul
iret
lea
cmpsb
mov
fmul
scas
push
dec
jg
jp
pop
cmc
and
add
dec
or
cmp
ljmp
cmc
mov
and
out
jmp
and
jo
jne
pop
data16
jp
and
aad
jo
inc
inc
or
sub
into
lods
push
xor
out
shrb
les
and
jbe
clc
xchg
cmp
cltd
sub
hlt
dec
shll
insb
ja
out
mov
cmpsb
shlb
jmp
inc
rolb
sbb
inc
in
mov
dec
and
cmp
sbbb
ret
xor
aam
dec
stc
cmc
sbb
icebp
adc
loopne
mov
jg
daa
notb
xorb
enter
xchg
stos
bound
mov
inc
mov
jp
cmp
jmp
mov
or
in
and
mov
push
lret
xchg
add
and
negb
sub
sti
enter
cmpsb
jmp
jb
sub
imul
dec
sbb
dec
adc
jmp
jmp
fsubl
xor
sub
mov
testl
cmp
mov
sbb
fistl
stos
mov
in
sub
ficomps
mov
pop
adcl
hlt
and
push
add
mov
out
sbb
mov
mov
fisubrs
xchg
fwait
cmp
jns
aad
or
add
lret
add
add
inc
sub
rcrl
insb
pop
cmc
scas
mov
cmp
xorl
inc
lcall
cld
mov
ja
sbb
in
rclb
lds
xchg
and
xlat
pop
adc
jl
dec
jge
cmc
lods
pop
mov
adc
xchg
andps
sahf
sub
lcall
roll
xor
imul
filds
lcall
ret
xor
pop
and
dec
sahf
jae
sbb
cmp
xchg
sbb
imull
ret
xor
cmp
sti
add
mov
sbb
push
shlb
scas
setno
add
sbb
jg
mov
pop
mov
enter
and
imul
stos
mov
sbb
in
inc
outsl
int
rcl
test
push
mov
jle
push
enter
imul
xchg
sub
clc
imul
out
cmpsb
cmpsb
sarl
jmp
sti
lods
fwait
or
lea
adc
int3
adc
stos
aaa
loope
fs
mov
xor
inc
lret
jno
xchg
pop
scas
leave
loop
pop
sti
ds
rolb
or
adc
mov
mov
rorl
lds
into
test
lock
mov
cmp
mov
test
sbb
inc
jle
cmp
adc
cld
jmp
popa
mov
push
enter
mov
sbb
sub
aad
pop
fcompl
popa
shr
mov
addb
cmp
pusha
inc
xchg
cltd
arpl
mov
divb
sbb
enter
popf
xchg
xchg
jns
outsb
push
inc
adc
insb
sbb
addb
inc
scas
mov
test
cmpsb
scas
aam
mov
mov
aam
push
stos
movb
add
xor
cltd
shr
test
push
clc
inc
xchg
shlb
add
lret
decb
mov
and
mov
call
cltd
dec
je
movsl
pop
adc
popf
add
pop
mov
push
push
movb
mov
dec
fwait
xor
hlt
mov
cmc
mov
xor
call
xchg
mov
rorb
push
sub
xchg
out
in
mov
jp
mov
or
les
fstpt
add
lahf
fcoml
sbb
rorl
inc
mov
xor
aam
pop
mov
hlt
in
xchg
adc
sub
iret
and
aam
loop
lods
inc
test
fstpl
stc
or
inc
bound
enter
sbbb
push
das
lock
movsb
xor
rolb
cmc
fiadds
inc
out
adc
cmp
mov
add
sbb
popf
mov
cmc
push
test
stos
test
cmp
cld
stc
push
lea
xchg
xchg
push
das
iret
or
sub
jl
ss
icebp
jns
mov
sub
mov
jl
xor
call
sbb
loopne
mov
xchg
mov
cmp
or
xchg
pop
sbb
xor
scas
arpl
ret
xor
push
in
xchg
mov
movsb
mov
push
push
jmp
cli
mov
shll
addb
sbb
and
test
movb
sub
loope
pop
into
test
dec
nopl
jno
push
add
adc
inc
xchg
jmp
loopne
xchg
test
dec
lret
push
pop
or
mov
scas
dec
pop
fcmovnb
movsb
push
add
icebp
dec
shlb
imul
pop
xchg
and
cmpsb
mov
xchg
xchg
mov
out
inc
andl
pop
or
push
cltd
movsb
and
fwait
cmp
aam
or
xchg
xchg
push
pushf
mov
push
xor
add
ljmp
rolb
adc
stos
enter
mov
add
movsb
mov
shlb
cmp
jbe
leave
neg
pushf
and
inc
js
xlat
lret
gs
ret
sub
jg
ds
or
dec
cmp
sub
cmp
cld
cmc
mov
cmp
mov
xor
les
jae
pushf
lods
mov
imul
push
sub
mov
xlat
mov
push
xchg
stos
xor
jnp
sbb
stos
popf
mov
mov
rolb
jae
pop
aad
aaa
ljmp
cmp
pop
fnstsw
xchg
cmc
adc
inc
xor
inc
mov
sbb
shll
pop
cli
ja
cmpsl
shll
push
test
cmpsb
sbb
cmc
jo
cltd
mov
in
es
pusha
fsts
es
inc
mov
aas
sbb
lock
hlt
call
dec
pop
push
or
dec
jb
pop
or
dec
push
push
sub
int3
push
jle
add
fldl
out
fsubp
mov
or
shrb
gs
mov
push
jmp
test
add
mov
loopne
add
in
pop
push
xchg
pushf
push
mov
push
mov
push
sbb
js
sbb
pop
push
and
in
mov
js
loope
les
movsl
je
pop
dec
cmp
mov
mov
dec
ds
fisttps
lea
mov
xchg
push
popa
xor
popf
push
pop
sbb
clc
mov
jl
je
sub
test
dec
and
sub
pop
scas
imulb
hlt
pop
xlat
pop
add
scas
sub
pop
xchg
leave
mov
xor
push
lcall
mov
test
cmpsl
jg
ret
mov
lods
sub
adc
sub
mov
mov
pop
js
push
mov
sub
jns
xchg
out
xchg
jns
jg
pop
dec
mov
sbb
sbb
dec
lods
in
repz
jl
sarl
stos
mov
xor
jmp
hlt
leave
cltd
add
shlb
lods
insb
js
mov
xchg
sbb
test
adc
sub
repz
test
out
js
je
sub
cmpsl
outsb
out
mov
sbb
ss
stos
inc
fmulp
sub
loop
std
sbb
jne
pop
inc
xchg
pop
adc
das
lcall
fimull
jb
fcoms
insb
orb
mov
xor
gs
mov
xor
jno
cmp
out
movsl
sub
mov
cmp
pop
fidivs
or
jl
mov
xchg
fcoms
subb
hlt
sbb
cmp
leave
rorb
loop
mov
lret
jg
pop
inc
out
gs
cmpsl
inc
shrl
dec
clc
pop
mov
sbb
aad
cmp
adc
add
in
xchg
or
lock
pop
and
adc
scas
and
push
mov
leave
mov
jmp
add
sbb
imul
dec
xor
test
mov
mov
cmpb
mov
movsb
clc
sbb
cmp
ds
sub
in
or
mov
lret
lcall
sahf
push
mov
push
xchg
mov
ficomps
divb
aam
adc
das
negb
sbb
xor
ret
or
mov
push
stos
outsl
adc
pop
jbe
daa
or
js
sub
scas
push
cmpsb
jp
cltd
jnp
rol
adc
jp
sub
notb
cltd
mov
loope
mov
mov
out
or
mov
arpl
or
xor
adc
xor
hlt
aas
lahf
mov
fisttpll
fildll
arpl
repnz
push
out
dec
mov
arpl
shrb
das
and
xchg
ja
xlat
xor
jno
jno
pop
addr16
mov
les
int3
std
xchg
pop
mov
mov
arpl
xchg
mov
push
mov
or
sbb
sti
insb
movsb
ret
subl
call
loope
lcall
jbe
into
jp
push
push
cmp
mov
decb
popf
xlat
jp
push
push
fldcw
jns
popf
add
sbb
popa
repnz
dec
jmp
das
addr16
stc
xor
mov
lcall
movsl
bound
icebp
mov
addr16
test
xor
mov
mov
cmpsl
lock
jl
es
cmpsb
dec
jmp
int
arpl
xlat
dec
pop
add
mov
cmp
jg
sbb
cli
xchg
mov
mov
xchg
imul
mov
cmp
or
or
mov
sub
scas
loop
rcll
and
test
dec
jbe
sbb
or
ds
in
mov
mov
pusha
mov
mov
mov
sbb
loop
cmp
sub
repz
cltd
imul
out
inc
gs
lods
popa
xchg
mov
jns
lds
push
movsb
mov
push
test
nop
jne
mov
lret
cli
popf
jno
dec
rcrb
mov
das
push
mov
xor
ret
movsl
outsb
nop
push
sub
ret
pop
mov
faddl
xor
cmpl
pop
pop
js
or
in
cmp
sbb
adc
shll
out
mov
in
adc
jns
cld
sbb
lock
in
cmp
xchg
push
jno
mov
xchg
push
in
sahf
pop
test
scas
and
rcr
insb
fbld
int3
mov
xchg
pop
popf
testl
lods
bnd
jo
andb
enter
and
pushf
nop
adc
out
jle
loop
clc
jae
js
sbb
adc
out
inc
sahf
and
mov
scas
dec
pop
movsb
int3
xor
incl
neg
jae
inc
stc
push
jmp
push
mov
sarl
mov
pop
popa
mov
xchg
inc
and
sub
divl
aas
in
shr
push
or
enter
cmp
aad
into
adc
jecxz
cmpsl
arpl
loopne
push
ljmp
test
adc
mov
fisttps
inc
sub
xchg
cmpsb
lods
sub
add
pop
inc
or
insl
push
mov
jne
int
pop
aam
push
adc
sub
or
fnstsw
scas
xchg
pushf
mov
jae
mov
mov
adc
pop
imul
ret
lret
stos
shlb
push
cmp
cmp
add
pop
nop
dec
push
cli
jg
cmc
daa
lahf
jbe
lds
imul
sbb
pop
sar
stos
addb
dec
sbb
inc
fldenv
sahf
fistps
repz
xchg
andw
fwait
call
lret
cmp
cmp
inc
divb
fsubr
push
sub
sbbb
add
ret
mov
mov
popf
testl
xlat
addr16
lret
xchg
clc
adc
dec
sbb
lods
dec
mov
xor
nop
dec
sbb
jo,pn
jno
push
movsb
cmp
push
js
lods
popa
jbe
jge
sub
mov
dec
xor
xor
aad
int
aad
aaa
xchg
ja
loop
lret
dec
fcomip
dec
mov
incl
inc
mov
stos
popa
mov
loop
lods
push
test
daa
nop
mov
mov
mov
cmpsb
jo
inc
out
out
mov
mov
dec
clc
sbb
sub
out
dec
addl
fnstcw
cmp
or
pop
icebp
lods
out
xor
out
sub
call
or
jg
stc
push
mov
cmp
inc
loop
cs
icebp
and
cld
xchg
test
mov
sbb
mov
jle
adc
in
xchg
cltd
imul
mov
mov
fadds
stc
scas
jecxz
std
rcll
inc
aad
sub
adc
ret
cltd
iret
sub
stc
adc
out
and
inc
test
fbstp
jp
je
sub
jmp
movsl
mov
push
gs
out
rorl
mov
push
push
and
sbb
ficomps
xlat
mov
les
sbb
fs
jge
aam
int3
cmp
xor
lret
std
das
dec
jecxz
cmp
ret
lods
insl
fabs
cmovne
pop
xchg
mov
lret
cltd
subl
imull
cmpsb
lret
cmpsb
mov
adc
sub
push
dec
and
push
jmp
mov
push
pop
xchg
push
jle
into
jo
fisttps
lea
add
sbbb
cmc
xchg
testb
daa
adc
cmpsb
in
jp
pop
int
jp
sarl
cmp
fisubrl
ja
and
or
lods
cmpsl
pop
ja
pop
fbstp
lret
jbe
dec
pop
or
call
shll
in
mov
cld
les
stos
mov
div
mov
pop
sar
lret
mov
sub
mov
add
daa
inc
das
lea
cmp
shrl
xor
mov
jo
xchg
sub
stos
insb
aas
mov
mov
mov
insl
mov
ret
gs
mov
les
mov
xchg
popf
dec
outsb
loop
ljmp
mov
cmpsl
pop
and
xor
dec
push
adc
add
lods
cmc
sarb
dec
jb
cltd
sub
mov
sub
jb
loop
shlb
sbb
mov
test
mov
mov
add
mov
push
fcoms
shrb
mov
cmp
push
clc
lahf
das
addr16
pop
adc
data16
cmp
inc
cmp
pop
test
adc
in
lret
cmpsb
jo
cmpsl
push
sbb
adc
js
pop
inc
cmp
cmp
xchg
imul
mov
in
xor
mov
jno
ja
cmp
push
out
pusha
in
pop
popf
adc
mov
int
sub
and
fwait
pop
inc
inc
sbb
cli
inc
or
sbb
push
aam
jp
dec
lcall
iret
fmull
dec
lret
pop
out
cli
push
xor
lds
mov
aad
ds
movsl
cltd
or
xchg
xchg
jmp
fnstenv
out
stos
mov
sub
roll
adc
or
les
mov
sub
mov
and
icebp
and
in
enter
push
cmp
mov
mov
dec
jg
pop
pop
cmpsb
shl
cltd
cmp
sarb
mov
or
add
or
mov
xchg
add
mov
xchg
jge
push
jmp
int
mov
push
ficoms
jp
cli
pop
aad
cli
adc
aad
popa
add
adc
cmp
in
fwait
das
xorb
mov
push
jecxz
das
pop
bound
push
xlat
imul
xor
xchg
fcmovu
inc
std
movsl
aas
add
mov
insl
xor
lret
jno
mov
push
sar
pop
sbb
push
ret
dec
inc
jae
popa
push
mov
das
mov
dec
int3
inc
sub
xor
mov
push
lahf
icebp
mov
sub
rorb
dec
inc
cld
sub
add
ja
sbb
fcompl
mov
sbb
out
or
dec
or
jp
and
sbb
or
movsl
neg
ret
mov
ss
sub
out
sbb
std
inc
jecxz
iret
dec
push
iret
dec
xchg
xor
out
cwtl
ss
sti
adc
adc
mov
addr16
jecxz
dec
into
or
mov
jle
adc
sbb
or
dec
add
sbb
cmp
mov
adc
adc
adc
mov
test
or
dec
adc
stos
std
sbb
mov
hlt
enter
push
adc
mov
lahf
add
add
mov
pop
cmp
sub
xchg
inc
popf
movsb
aam
lods
iret
mov
data16
xchg
movsb
fidivs
inc
lock
notb
orl
jns
jle
inc
insb
cmp
out
and
cmp
aaa
pop
jle
cltd
or
xor
sub
scas
movsb
movsl
pop
inc
xchg
cwtl
jge
mov
xor
push
idivb
out
sahf
jg
gs
mov
ret
sbb
ja
cmp
sub
jae
adc
mov
mov
lret
adc
cli
and
pop
mov
jbe
and
xchg
sti
clc
enter
std
in
jecxz
out
jp
mov
or
jle
fildl
jns
jno
pop
jl
mov
mov
jle
pop
mov
test
test
inc
out
repz
iret
jno
daa
std
lea
into
leave
rcrl
mov
dec
ret
inc
sbb
aaa
mov
sbb
xchg
nop
xchg
push
in
les
mov
mov
mov
jbe,pn
pop
outsb
vmwrite
mov
lds
rolb
pop
aas
shrl
bound
ret
lahf
daa
mov
lods
jmp
sub
jge
push
dec
mov
pop
jbe
xor
sarb
jg
push
lret
sbb
popf
lock
repnz
xchg
and
cmp
cli
stc
add
mov
test
fs
pop
xchg
fwait
outsl
lock
lock
mov
mov
cmpl
loope
in
mov
and
loopne
imul
inc
fimull
jnp
push
out
int
out
lods
mov
call
xchg
nop
jb
add
int3
adc
sbb
loop
mov
and
scas
mov
pop
mov
adc
rolb
outsb
push
add
fiadds
jbe
enter
push
xorl
leave
mov
mov
sub
dec
inc
sub
mov
shll
inc
and
std
cmpb
cmpl
cmc
pusha
sub
and
nop
outsb
popa
hlt
out
xor
push
push
jmp
insb
fcomps
cwtl
fadd
scas
pop
fwait
js
mov
loope
stc
in
push
insl
sbb
mov
jmp
into
pop
stc
loopne
cmpsb
lock
lods
orl
ljmp
lret
roll
push
xchg
cli
add
xchg
inc
xchg
mov
out
or
mov
xlat
sub
sub
or
fcompl
jns
xchg
xlat
into
mov
cvtpi2ps
scas
lret
add
je
in
hlt
popf
mov
sub
lahf
cmp
and
pop
jbe
aad
jbe
in
and
fcmovnb
pop
sar
push
push
add
mov
outsb
ljmp
cmp
bound
pop
cmpl
movsl
inc
sub
cs
push
xor
dec
jne
es
loopne
cmpsl
mov
fldl
jb
hlt
push
mov
push
xchg
call
jbe
xor
hlt
jp
mov
dec
inc
les
js
xchg
mov
nop
or
jg
inc
popa
inc
mov
jg
aad
sbb
and
add
in
fs
cmpsl
pop
pop
movsb
test
dec
data16
jge
aas
pop
mov
xor
jg
out
mov
jecxz
adc
sbb
dec
lea
fxam
jp
or
pop
cltd
loope
orb
and
xchg
push
lds
out
add
fcoms
xchg
les
jnp
adc
insl
xchg
mov
cmp
inc
mov
push
dec
out
inc
pop
jne
rcrl
push
mov
xchg
nop
push
add
xor
imulb
jge
rclb
cmp
cwtl
out
mov
fists
cltd
and
xor
loop
push
push
xor
add
cwtl
and
jns
pop
cmp
mov
sbb
cmp
adc
lcall
push
dec
cmp
sbb
push
push
or
insl
sbb
xchg
in
xor
mov
adc
data16
xchg
xor
mov
adc
and
movsl
cmpsb
push
stos
adc
daa
xchg
adc
pop
pushf
and
sbb
ficomps
into
popa
jae
in
je
jbe
mov
loopne
out
aad
jecxz
cmp
addl
dec
cwtl
andb
mulb
sub
into
test
push
aam
pop
jb
push
shl
fdivrl
xor
jno
divl
adc
sbb
xlat
jne,pn
add
rcrb
aam
jl
int
int3
or
test
test
leave
lret
movsl
pop
xchg
jnp
lcall
sbb
fildll
xchg
mov
pop
mov
fcomps
das
push
inc
pop
mov
push
test
mov
leave
cs
subl
int
sbb
mov
sti
and
icebp
mov
dec
dec
mov
add
popf
fldl
popf
mov
mov
xchg
xor
inc
gs
adc
pop
inc
xchg
shl
test
push
mov
sbb
jmp
sbb
nop
loopne
out
into
pop
jge
cmp
shr
inc
pop
push
inc
stc
xchg
cmp
pop
dec
icebp
push
push
cmpsb
dec
loop
jg
sub
ds
cmp
ja
outsl
mov
xchg
popa
ret
jnp
xor
int3
subb
add
cmp
cmp
rclb
inc
xor
pop
cmp
loop
mov
es
mov
sti
mov
ja
lret
push
lret
jnp
cltd
fxch
mov
nop
xchg
incl
push
mov
mov
and
pop
jge
adc
mov
insb
lret
adc
or
daa
addw
cmp
or
add
jno
jbe
out
iret
cmp
ficompl
jl
in
push
jne
shlb
rcrb
mov
mov
mov
pop
pop
mov
cltd
or
adc
addr16
pop
ret
repnz
push
mov
loop
mov
clc
call
sbb
pusha
int
adc
int
ret
out
xchg
jmp
mov
test
fs
out
sub
xchg
inc
push
mov
rcrl
pop
add
cmpl
das
inc
jg
ret
fs
mov
fisttps
push
jge
jp
inc
pop
fldcw
push
pop
shll
daa
divb
inc
sarl
xchg
lods
mov
jmp
std
sahf
xchg
xorb
ret
dec
pusha
dec
movsb
inc
aad
sub
ds
in
rolb
inc
xchg
push
cmp
lahf
sbb
pop
fmull
pop
mov
mov
xchg
mov
mov
push
sti
adc
outsb
pop
dec
hlt
daa
lea
mov
fistpll
and
mov
aad
mov
daa
xchg
aaa
push
push
aad
fnsave
add
sub
sahf
int
sti
enter
pop
arpl
dec
inc
mov
sbb
or
cmp
fwait
iret
popl
sarl
hlt
cwtl
pop
sbb
jae
mov
inc
or
insl
push
repnz
inc
scas
rclb
addr16
adc
mov
cwtl
mov
xchg
and
inc
jg
test
cmpsl
nop
adc
jno
es
lret
xchg
and
adc
or
jns
push
or
dec
jmp
push
pusha
adc
xor
cmp
fs
jno
mov
in
sub
or
sub
sti
dec
or
mov
mov
roll
repnz
mov
out
mov
sbb
enter
jae
gs
mov
je
lock
mov
mov
inc
loope
cmp
mov
insl
xchg
daa
jecxz
imul
dec
outsb
loop
cs
dec
addr16
fistps
inc
fstp
ficompl
lods
inc
daa
mov
fwait
data16
movsb
fdivl
cmpsl
psllq
add
inc
fldl2e
push
add
pusha
pop
out
mov
xchg
mov
mov
pop
fistl
arpl
xchg
cmpsl
or
mov
xchg
inc
les
inc
inc
ds
fdivs
push
fldenv
jbe
jo
and
xorb
sbb
cltd
jne
ja
mov
fidivrl
sub
fstpl
pop
mov
dec
and
inc
jge
repz
cld
rorl
or
out
dec
subl
lods
enter
xchg
jae
mov
outsl
push
sub
movsl
inc
dec
movlps
and
mov
popa
add
push
arpl
cmp
mov
pop
sub
pop
jae
mov
jns
in
repz
and
xchg
sbb
inc
div
outsl
call
sti
and
lds
jg
hlt
sbbb
mov
lcall
add
dec
cmp
xchg
negl
push
and
fildll
lahf
sahf
inc
popf
jg
sub
lds
pop
and
mov
xor
xor
mov
gs
sti
mov
mov
add
jp
xchg
jb
out
xlat
inc
cmpsl
es
and
pop
imul
clc
mov
and
sub
shll
xor
cmova
aam
adc
fidivs
or
loope
dec
test
xchg
pop
jmp
insb
push
inc
dec
jo
adc
mov
arpl
jl
mov
in
loop
dec
negb
sbb
adc
jns
stc
loope
and
jp
nop
xchg
mov
hlt
mov
adc
pusha
pop
fs
das
sub
shll
movsl
lds
mov
loope
lret
mov
dec
stos
decb
mov
adcl
or
imul
lea
cmc
mov
popa
stos
fxch
leave
int3
mov
test
je
hlt
inc
repz
fdivp
mov
push
insb
dec
xchg
sar
push
inc
mov
and
and
iret
jle
sti
xor
repz
jno
pop
loope
lahf
ljmp
es
aaa
xlat
out
es
loopne
add
sub
mov
pop
mov
scas
pop
test
mov
and
mov
int
adc
mov
jbe
inc
mov
inc
cltd
insl
jb
xor
add
aad
mov
jecxz
adc
mov
jns
cli
sbb
and
mov
push
pop
sbb
pop
ret
inc
and
push
pop
js
or
adc
mov
add
adc
das
mov
mov
adc
or
push
enter
sbb
cmp
add
xchg
and
aas
fidivrs
in
insl
das
and
out
push
loope
popf
dec
or
adc
xchg
push
or
out
mov
jo
in
jo
fnstsw
or
add
push
int
inc
mov
xor
popf
icebp
lret
popa
fcmovu
outsl
xor
int
flds
sub
aad
dec
inc
iret
lods
sub
mov
shrl
ret
sti
inc
data16
xor
int
scas
add
mov
test
cltd
fcmove
pop
sub
ss
scas
dec
cmpsb
inc
mov
xlat
xor
jb
add
inc
in
pop
mov
mov
adc
inc
mov
push
sbb
psraw
jne
pop
mov
mov
push
repz
xor
jp
pop
rcrb
stos
jo
negb
lea
jne
pop
cmpsb
xor
mov
inc
mov
test
cmpl
lock
daa
pushf
pop
sbb
stc
int3
cmpl
lods
call
lea
or
mov
mov
scas
inc
cmp
sbb
and
out
fwait
mov
ret
cmpsl
jnp
ret
jp
mov
mov
loop
push
test
mov
cmpsb
cmp
scas
dec
aad
cmp
jb
loope
jno
mov
inc
and
dec
push
into
pop
imul
adc
scas
push
std
ror
insl
push
sub
scas
mov
sub
out
rorl
mov
in
outsb
lock
je
mov
int
fisubrs
aaa
cwtl
mov
inc
add
jg
or
stos
inc
or
loopne
iret
andl
sbb
repnz
imul
iret
adcl
jb
stos
mov
or
cmp
mov
sbb
xor
mov
and
nop
push
mov
dec
hlt
jnp
add
cmpsl
sub
ja
fnstcw
int3
and
dec
add
in
jbe
or
bound
mov
orl
insb
pop
cwtl
or
mov
stc
cmp
test
pusha
push
cmp
lods
and
xchg
arpl
and
fstpt
mov
pop
insb
jp
push
xchg
fsubrl
pop
hlt
loope
int
inc
pop
addr16
bound
adc
mov
aas
xor
inc
mov
inc
rcll
ficomps
xor
pop
sbb
mov
ds
leave
pop
faddp
pop
inc
test
lret
int3
aam
xor
cmp
pop
cmc
movsl
loope
lock
xchg
xchg
loop
in
adc
je
out
daa
repnz
add
or
dec
xor
cli
xor
xor
or
dec
inc
xchg
mov
sbb
pop
sbb
push
call
or
mov
sub
aam
mov
fstl
je
cs
push
aaa
xlat
pop
mov
xor
imul
or
hlt
inc
sahf
adc
ljmp
stos
pop
in
std
fiadds
and
push
mov
movsb
ficoms
fldcw
adc
push
push
jnp
jae
ret
pop
out
dec
jmp
and
pop
push
dec
adc
jo
nop
or
pop
hlt
dec
loopne
mov
jno
inc
adc
lahf
mov
xor
ljmp
pop
and
loope
push
in
ss
addr16
enter
ljmp
cmp
or
icebp
lret
pushf
mov
dec
cmp
mov
push
jne
pop
adc
je
xlat
cmc
lahf
mov
dec
push
push
ljmp
mov
pop
aam
adc
imul
stc
shll
cwtl
cmp
push
aaa
cmp
jno
mov
push
mov
daa
sub
jne
cmpsl
mov
cmpsb
push
nop
aad
and
cmp
adc
inc
nop
cmpsl
mov
push
jnp
cmp
clc
dec
negb
jno
and
daa
repz
scas
adc
test
jne
imul
std
mov
das
push
js
arpl
lds
xchg
ss
mov
stos
leave
out
pop
xchg
mov
repz
pop
jmp
int3
mov
pop
in
aad
jbe
outsl
ss
cmpsb
xor
cmp
popa
sub
xor
rcll
mov
std
jle
push
decl
sbb
inc
mov
movl
shlb
shl
fimuls
jae
mov
punpckhwd
shrl
add
lahf
or
test
add
jge
push
push
sahf
cwtl
cmp
inc
xor
popf
xchg
nop
movsl
xchg
pop
mov
arpl
into
add
popf
adc
lds
movsb
jb
dec
mov
xchg
shll
and
icebp
mov
insb
in
loope
test
rolb
adc
jns
cmp
into
jle
frstor
in
call
icebp
xlat
and
push
and
fidivs
xchg
adc
stc
pushl
ret
jb
daa
sbb
shlb
jbe
and
jb
in
and
mov
popa
or
or
xchg
or
nop
enter
mov
out
mov
sbb
out
mov
in
sbb
aaa
mov
cmc
enter
cmp
pop
shll
lods
pusha
stc
adc
outsb
mov
test
mov
fsts
mov
cmp
sub
pop
leave
jne
jmp
adc
movsl
mov
inc
repnz
and
aad
arpl
les
es
divb
orb
into
cltd
pop
js
cmp
cmpsl
push
jg
inc
daa
mov
xor
pop
jnp
push
outsl
pop
mov
scas
add
xor
jg
inc
or
bound
in
test
repnz
pop
andl
repz
push
pusha
les
sub
sub
into
aad
inc
xchg
jge
lret
xlat
les
dec
mov
push
mov
xor
and
outsb
mov
jp
mov
fwait
mov
push
mov
mov
test
jno
xchg
loopne
fcompl
mov
inc
inc
xchg
add
sbb
or
rcrb
xchg
push
lock
fs
cwtl
rorb
cmp
jmp
jle
clc
dec
mov
lods
jmp
sub
movsl
add
pushf
lods
psubw
aaa
leave
sub
add
or
rorb
outsb
add
dec
dec
inc
sbb
leave
outsb
push
sbb
cmp
hlt
std
aas
jg
sbbl
shrb
adc
add
and
mov
adc
mov
ret
imul
pop
das
sbb
mov
adc
les
movsb
mov
cmpb
cmp
ja
data16
int3
pop
inc
lock
adc
mov
dec
lretw
fcoml
jecxz
das
insb
add
cld
jne
push
repnz
adc
jg
jae
mov
int3
std
aas
or
sub
dec
dec
push
fimull
movsl
xchg
inc
inc
scas
or
fdivl
cmpsl
popa
mov
jp
adc
movsb
sub
jne
xchg
out
cmp
push
mov
test
mov
icebp
and
or
loopne
mov
xchg
cwtl
scas
jmp
aas
test
out
pusha
iret
xchg
jg
cmc
and
mov
popa
shl
mov
icebp
jbe
sahf
lcall
sbb
in
dec
push
stc
andb
add
ss
stos
pop
pop
or
sbb
js
push
mov
push
xchg
sbb
sub
dec
sbb
jl
or
and
sti
add
pop
pop
jbe
mov
mov
sub
out
jo
pop
insb
subb
jmp
ljmp
sbb
mov
and
jo
int3
imul
mov
xchg
into
clc
adc
jae
cwtl
mov
mov
les
push
jo
js
pop
xor
pop
add
push
es
xlat
enter
loop
jb
rcll
jbe
leave
test
aam
adc
cmp
lahf
in
cmp
mov
jbe
cmp
mov
mov
dec
mov
lea
mov
add
mov
out
jmp
pop
loop
cmpsb
and
in
fildl
lret
push
movsb
sbb
push
outsb
dec
inc
fidivrs
sub
orb
lret
ja
pusha
ds
testl
call
call
inc
push
neg
cmc
iret
pop
cmp
leave
fsub
inc
ljmp
pop
xor
jno
es
mov
orb
rcr
das
fucomip
xchg
out
adc
lcall
xor
lret
into
mov
idivl
shlb
iret
inc
cmpsl
pop
jmp
mov
fmuls
and
sti
xchg
sbb
outsl
hlt
cmp
mov
cltd
and
adc
fwait
cld
sub
stc
xchg
mov
push
cmc
jp
outsl
lock
mov
dec
not
mov
cmp
in
outsb
add
inc
sub
dec
jb
mov
mov
sub
out
xchg
or
push
mov
lret
or
inc
push
xchg
cltd
jmp
enter
ljmp
nop
push
out
push
pusha
jle
xchg
std
adc
pop
add
pop
fisubl
int
in
movsb
test
ja
push
mov
ret
in
mov
outsl
inc
sub
inc
nop
xor
inc
dec
lret
clc
das
iret
popa
fs
cmp
mov
mov
push
in
ret
jbe
xchg
xchg
mov
sub
ja
ficompl
in
mov
sahf
cltd
dec
stos
sti
push
fs
repnz
push
call
and
or
mov
popf
aam
pop
int
cltd
sub
jns
push
das
mov
dec
jbe
sbb
lea
int
sbb
sbb
adc
jle
sbb
push
push
mov
fisubl
outsl
mov
jb
mov
pop
stc
add
hlt
push
call
mov
loope
push
mov
fs
cmp
jo
mov
cmpsl
icebp
push
mov
mov
pop
inc
test
int
xchg
xorb
adc
adc
inc
jle
popa
out
aas
xchg
fldl
lods
dec
xor
mov
xtest
jg
inc
inc
pushf
out
xchg
insb
jne
push
jbe
scas
into
popf
lods
lcall
adc
stos
xor
mov
pop
stos
and
inc
mov
inc
lea
sbb
push
enter
pop
stc
sbb
scas
lret
or
cli
mov
sub
int
fs
cmpsb
andb
call
cs
std
mov
pop
push
scas
add
adc
jbe
mov
cmpsl
sarb
and
jno
xor
mov
ret
into
jne
jecxz
fnstsw
dec
gs
fdivr
adc
insl
shr
pop
test
push
arpl
mov
pop
jo
dec
push
xchg
xor
xchg
mov
sbb
adc
adc
pop
stos
out
jbe
dec
mov
or
outsl
dec
jle
pushf
jno
xlat
enter
jne
inc
mov
inc
repnz
jne
lds
ja
adc
inc
sbb
ljmp
add
clc
sub
cmp
mov
cmp
inc
xchg
jecxz
cmpsb
nop
and
push
cmpsl
jb
dec
xchg
pop
xor
shrb
mov
mov
inc
dec
xor
lcall
cmp
push
or
sub
push
stc
xchg
inc
sub
pushf
jb
lret
jnp
cwtl
mov
pop
cmp
fsubs
ret
mov
nop
cld
add
cltd
xor
jl
cli
adc
cmp
cmp
inc
mov
inc
pop
dec
jp
call
leave
jle
outsb
sbb
and
test
or
gs
aad
imulb
divl
lcall
mov
adc
mov
jmp
dec
cli
les
in
push
mov
mov
loop
pop
inc
jmp
outsl
push
push
scas
fistpll
les
inc
inc
sbb
ljmp
mov
mov
adc
pop
pop
jmp
and
ds
add
loopne
bound
dec
mov
lods
rep
data16
lods
dec
outsl
mov
in
push
int3
add
insl
mov
stos
dec
movsl
inc
pop
jae
shll
repz
aas
dec
ss
lds
adc
add
scas
loop
mov
inc
mov
divb
repz
test
mov
test
add
xor
ds
or
std
or
out
cmp
iret
mov
inc
add
jae
fwait
mov
sahf
or
lods
add
mov
xchg
leave
loopne
fnstenv
mov
xchg
jns
sub
je
inc
pop
lahf
test
pop
xor
stc
inc
add
sub
shl
int3
pop
repz
lock
test
lret
sbb
adc
or
jp
ss
inc
loope
out
adc
pop
icebp
shll
ficompl
out
in
push
je
pop
mov
sub
sub
imul
cmpb
add
rclb
scas
inc
in
bound
cmpsl
movsl
test
and
mov
test
adc
ret
pop
sbb
xchg
enter
cmc
subb
xlat
movl
or
sahf
aam
scas
ficompl
das
pop
test
fwait
xchg
sub
dec
ljmp
in
mov
in
push
cmc
pusha
or
add
xchg
inc
cmp
std
stc
mov
mov
xor
jmp
xorb
test
sub
mov
push
fwait
sub
ret
sub
or
lods
pop
scas
lea
jae
mov
icebp
cld
out
mov
outsb
lods
lea
ja
data16
das
push
pusha
cwtl
mov
jmp
sub
ret
sbb
add
les
nop
jo
xorb
xchg
bound
sarb
adc
xchg
pop
adc
test
dec
or
int3
es
adc
mov
ja
xor
pop
data16
and
nop
mov
jo
or
xchg
mov
aad
or
mov
dec
pop
inc
mov
pop
inc
add
mov
stos
shll
push
mov
sub
jp
jecxz
inc
jle
adc
add
pop
dec
push
mov
or
sub
cmpl
pop
or
pop
fldcw
xchg
shll
push
mov
repz
in
inc
or
jmp
sbbb
outsb
sbb
data16
xchg
insl
push
into
scas
pop
scas
pop
jle
outsl
fdivs
mov
and
icebp
shll
jecxz
push
in
and
push
mov
add
fidivrl
sub
add
in
adc
push
loope
mov
ret
daa
jbe
mov
mov
subl
jle
jecxz
push
mov
or
movaps
in
ds
cmp
ljmp
int3
push
jmp
mov
push
sbb
sbb
jae
inc
add
dec
jle
adc
ds
inc
bnd
out
cltd
scas
scas
cmp
sub
ret
or
out
rorl
pop
jl
and
sbb
in
imul
loope
mov
lds
into
fstps
aam
stc
mov
dec
or
adc
scas
mov
jne
inc
xchg
loopne
je
icebp
inc
xlat
mov
mov
int
andl
sub
cltd
imul
popa
test
push
addr16
mov
out
xchg
mov
or
icebp
sub
xor
movsb
inc
mov
mov
mov
sbb
sbb
adc
jmp
sub
lods
mov
mov
fildl
imull
jge
push
xchg
push
mov
out
push
xchg
js
lds
jae
sbb
mov
dec
repnz
in
mull
outsb
add
aas
loop
xchg
cmc
adc
sub
les
daa
mov
in
je
jecxz
stc
dec
sub
out
ds
pop
xchg
cmp
pushl
andl
inc
mov
in
mov
inc
lret
sbb
roll
ss
pop
shll
mov
loop
or
arpl
mov
rolb
adc
cmovae
jno
sti
sbb
add
xchg
movsl
movsl
jmp
or
jecxz
cmp
ds
lea
fnsave
push
jg
repz
xchg
lods
mov
jge
push
xlat
ret
mov
lret
xor
xchg
into
out
pop
notb
repz
mov
mov
out
test
movsl
jmp
out
push
loopne
pop
les
sbb
icebp
int
xchg
pop
jp
push
and
fs
mov
push
dec
fs
mov
fcoms
in
jae
mov
in
or
push
xchg
inc
lds
jnp
fcomps
popf
ret
loop
shll
leave
repnz
push
mov
inc
call
push
push
or
inc
insl
lods
push
push
cmp
es
fcomps
inc
add
xor
lret
imul
aam
mov
dec
mov
repnz
inc
xchg
loope
loope
xlat
stc
leave
ja
jnp
dec
sbb
xchg
xchg
cmpsb
ds
imul
gs
call
gs
push
ss
inc
daa
repnz
push
aas
sbb
ret
cs
cmp
mov
sub
jg
divl
pop
insl
fidivs
xor
pusha
xor
int3
aad
adc
cmp
xchg
popf
aaa
adc
stc
insb
jp
and
push
adc
aaa
sbb
xor
in
in
xlat
jne
xchg
push
pop
cltd
add
sub
shrl
adc
rcr
push
pop
dec
push
and
addl
ret
lock
xlat
jg
ss
or
nop
aas
sarl
lret
pop
les
push
rorb
imul
push
xchg
mov
sub
and
xor
call
gs
inc
nop
sar
push
pop
ret
and
cwtl
push
jno
stos
filds
je
shll
xchg
scas
subb
mov
jae
test
push
divb
cmc
iret
add
jnp
outsl
xchg
push
jb
aad
das
xlat
mov
sbb
dec
ret
sbb
daa
call
outsb
fisttpll
inc
dec
pop
adc
or
sbb
inc
add
xor
int
fldl
scas
sub
scas
inc
xor
hlt
sahf
jg
in
testb
dec
cmp
add
gs
adc
idivl
sbb
inc
xchg
mov
sarb
stc
add
test
gs
adc
lcall
movmskps
jp
scas
adc
xor
pop
daa
dec
mov
shlb
aad
add
xor
pop
adc
pop
mov
test
xor
mov
daa
cs
dec
cmp
loop
loop
scas
sbb
sub
sbb
sbb
insl
inc
pushf
xor
xlat
aad
dec
in
insb
scas
xchg
mov
add
bound
mov
xchg
push
mov
jae
dec
stos
lds
lret
jo
cld
lods
rcll
fisttpll
add
push
cld
scas
arpl
nop
add
or
inc
xor
jmp
sub
loopne
lods
mov
ret
test
rcll
out
xor
xor
loopne
aad
cmpb
xchg
xor
loopne
aaa
into
lds
add
in
sbb
lret
push
fs
bound
jae
stos
fsts
arpl
add
sti
sub
add
lock
inc
andb
xor
ds
cmp
jns
ljmp
stc
mov
andb
pop
sub
pop
dec
subl
push
js
cmpsl
pushl
lret
xchg
dec
insl
add
aaa
gs
leave
addr16
decl
clc
jle
push
outsb
adc
xchg
sub
adc
outsb
xor
sub
sbb
xchg
push
xor
push
adc
inc
aaa
pop
jo
pop
jl
cli
push
gs
aas
pop
xchg
xor
push
push
and
pop
pop
push
xchg
xor
mov
leave
call
sbb
hlt
stos
ds
jecxz
fsub
pop
shrb
data16
rorl
pop
mov
cwtl
movsb
cmp
xchg
fwait
push
loop
in
ljmp
shlb
and
inc
mov
mov
jge
adc
in
jmp
pop
cmp
jg
and
cmp
jl
push
inc
test
sub
lcall
leave
sub
pop
cmp
mov
stos
cld
push
or
orb
adc
lret
xchg
out
bound
mov
pop
cmp
bound
mov
test
mov
adc
mov
xlat
mov
cs
xchg
call
andl
ja
aam
jmp
mov
das
popf
lea
jb
pop
lea
xchg
dec
aad
shl
lea
movsb
push
stos
cmp
fisubl
lahf
mov
jecxz
rolb
jl
mov
pop
notb
mov
ss
or
cmp
dec
and
and
mov
aad
hlt
insb
and
shll
fldt
adc
fwait
xchg
cld
in
xor
loope
jmp
icebp
push
lea
loope
push
xchg
jne
fidivrl
aam
stc
push
jp
test
mov
stc
fstps
or
xchg
imul
push
xchg
mov
pop
or
jp
xchg
cld
hlt
loope
out
or
mov
cld
mov
je
js
mov
mov
mov
stos
xor
xor
push
xchg
and
mov
js
cmp
or
fnstcw
dec
or
inc
adc
orb
sub
xor
mov
decl
push
sub
push
sub
sub
xor
roll
inc
mov
hlt
mov
and
loop
jecxz
lahf
cltd
adc
sbb
sub
movsl
pop
loope
jb
loope
outsl
push
in
dec
cli
mov
loope
cwtl
daa
andb
lahf
xor
mov
xor
imul
popf
jnp
dec
dec
andl
mov
lahf
cmp
mov
mov
aaa
cli
add
fmull
ljmp
adc
pop
out
enter
inc
push
mov
fnstsw
jno
sbb
divb
or
ljmp
inc
nop
xchg
push
rorb
push
cmp
fidivl
fiadds
sbb
loop
in
lcall
jl
shl
lea
rorb
and
insb
cld
fwait
mov
sbb
dec
iret
pop
scas
nop
ret
jmp
adc
inc
pop
sub
and
push
sahf
push
sarl
sub
in
cld
adc
sbb
adc
adc
pop
cltd
pop
mov
xchg
inc
ss
imul
and
inc
inc
sub
sub
xchg
popf
sti
into
testb
out
ret
es
and
scas
leave
js
cmp
xchg
inc
push
iret
mov
sub
addl
loopne
in
mov
nop
cmp
jae
pop
mov
imul
mov
adcl
pushf
mov
and
pop
sbb
inc
cmpsl
in
into
dec
sub
ds
lret
jecxz
shlb
jge
push
dec
mov
sub
xlat
mov
push
mov
or
enter
push
inc
sbb
mov
and
lahf
in
mov
int
lea
xlat
mov
mov
mov
xchg
bnd
and
xor
orl
daa
mov
xor
ficoml
xor
mov
insl
ljmp
iret
push
cltd
fdivp
ja
popa
lods
xlat
cltd
loope
sub
adc
data16
rcr
pop
xlat
mov
sbb
jge
mov
into
sub
loop
cmp
push
mov
jl
inc
pop
mov
outsb
orl
int3
dec
lret
insl
sub
fsubrl
data16
enter
mov
ret
jbe
pop
sbb
data16
in
jl
and
add
and
cmp
mov
cmp
pop
popa
imul
test
push
lods
fs
iret
fs
lea
dec
dec
push
pop
movsb
mov
mov
leave
sbb
push
xor
push
loop
scas
xchg
in
arpl
mov
adc
jmp
loopne
inc
aam
mov
icebp
lods
not
push
push
clc
bound
or
adc
clc
or
clc
cmpsb
cmp
notb
jge
mov
jmp
jg,pt
add
mov
das
mov
jno
shl
shl
mov
stos
shl
roll
cwtl
test
insb
mov
fidivrs
cld
xchg
int3
lcall
adc
push
sub
dec
pop
jmp
cs
adc
mov
inc
add
inc
addb
pop
mov
outsb
arpl
push
add
loope
add
dec
and
pop
adc
jecxz
inc
in
xchg
cmp
mov
or
adc
mov
dec
push
into
imul
jl
xchg
pop
ja
and
ret
ror
insl
mov
push
or
test
sub
ret
cli
data16
pop
sub
mov
sub
push
adc
add
cs
jne
icebp
leave
push
call
mov
push
xor
adc
xor
lods
mov
dec
sub
or
movsb
sbb
mov
lcall
jle
adc
shlb
lahf
dec
add
xchg
push
xchg
lods
fisubrs
add
aaa
mov
imul
cld
out
iret
adc
je
push
push
sub
outsb
pop
ss
push
sbb
inc
push
lods
movsl
pop
movsl
xor
aas
stos
jecxz
add
out
repz
call
or
std
int
mov
pop
outsl
inc
pushf
dec
mov
test
je
fisttps
mov
pop
jle
fisttps
lods
faddp
shrb
pop
inc
or
dec
cwtl
mov
cmp
xor
pop
ss
test
add
xchg
xor
cmp
mov
stc
adc
or
lods
jnp
inc
popf
femms
gs
fstpt
lcall
mov
jae
das
insb
pop
mov
arpl
inc
push
lods
push
aad
testl
cmp
scas
test
test
jb
leave
sbb
out
les
adc
ss
punpckhwd
outsb
mov
pop
inc
rcrb
pop
sarl
sbb
ss
js
adc
or
stos
xchg
test
leave
mov
xor
imul
push
pusha
inc
data16
aad
movsl
jae
int3
add
pop
adc
and
add
add
push
mov
stc
std
push
js
rorb
mov
jno
mov
into
or
dec
adc
mov
fcmovu
push
loopne
mov
pop
pop
push
cwtl
movsl
xchg
dec
aad
pop
fisttpll
pushf
in
aas
out
cmp
daa
clc
mov
sti
in
data16
out
icebp
outsb
arpl
loop
inc
mov
mov
out
mov
loop
in
in
sbb
movsb
xor
inc
jb
sub
cmp
inc
scas
notb
cmpsl
outsl
out
hlt
pop
addr16
popf
sub
pop
pusha
push
or
aas
lods
or
jp
std
aam
jl
jno
push
mov
jp
add
test
icebp
sarl
jg
cltd
mov
fnstcw
sti
add
mov
iret
bound
cmp
or
cmp
dec
pop
out
push
add
dec
cmp
cld
and
leave
loopne
or
lds
xor
mov
ret
negb
loopne
mov
fsubl
rcr
pop
dec
jl
sti
ljmp
dec
pop
insl
aam
cmp
xor
or
test
jmp
xchg
cld
push
inc
and
xchg
mov
fistpl
push
in
cmpb
xchg
inc
xchg
int
arpl
pop
insl
dec
fidivl
and
and
dec
ljmp
fisubs
and
jb
fstl
push
outsl
sub
ss
in
pop
arpl
push
movsl
inc
mov
xor
add
or
aaa
jmp
mov
stos
or
mov
xor
add
pop
jno
or
mov
mov
cmp
mov
mov
scas
std
mov
cltd
cmc
mov
jecxz
dec
xor
inc
icebp
cmp
pop
test
lods
js
dec
add
jecxz
pop
inc
sarb
lea
xchg
jo
lds
fildll
cwtl
inc
or
sbb
rolb
add
mov
cld
xchg
loopne
cmpsl
sahf
or
xor
clc
lds
add
sahf
stos
je
in
es
inc
cmpsl
inc
decl
inc
cmp
jo
insb
testl
test
stos
lds
leave
popf
fcomps
fs
dec
lods
test
cs
int3
rcr
adc
je
xchg
jg
sahf
mov
sbb
rorl
popa
movsb
clc
lahf
das
jmp
jb
add
mov
pop
jns
mov
push
jno
add
push
outsl
push
and
aaa
jae
adc
loop
and
inc
pop
sarb
or
popf
xchg
mov
pop
movsb
lcall
pop
sbb
xor
js
fucom
push
sahf
jmp
fisubrs
je
jp
mov
push
mov
push
inc
adc
lcall
repnz
shl
or
aas
std
ljmp
xor
mov
or
or
sbb
inc
ret
aam
hlt
fwait
and
cmp
xor
push
inc
shlb
ss
push
mov
gs
sbb
lret
and
sub
gs
add
xor
xchg
mov
mov
mov
movsl
add
stos
pop
xchg
out
jne
cmc
jmp
adc
mov
imull
add
jae
mov
sbb
mov
xchg
adc
rcrb
out
notl
dec
xlat
adc
mov
cmc
nop
outsb
pop
lahf
adc
movsb
in
loope
xor
dec
push
push
ljmp
mov
cmpb
and
sbb
inc
or
lods
and
mov
pop
inc
dec
sub
clc
pop
push
fnstsw
gs
pop
into
stc
movsb
addb
gs
mov
fistpll
stc
in
cmp
int3
test
adc
aam
addr16
or
mov
xchg
popf
pop
inc
jae
outsb
fsubrl
sbb
xchg
push
daa
and
xor
inc
rcrb
movsl
add
dec
loop
mov
add
mov
in
mov
es
xchg
xor
pop
jmp
stc
dec
push
jae
repz
ja
mov
xchg
xchg
pop
leave
dec
int
mov
les
xor
popf
adc
and
lcall
js
ja
lock
mov
xchg
ds
jmp
in
cli
pusha
jae
sbb
mov
dec
jae
add
inc
cmp
or
scas
push
dec
insb
jne
pop
cmp
mov
add
sbb
mov
pop
jns
jge
daa
add
sti
daa
imul
cmp
and
push
inc
adc
fsubrs
les
pushf
push
sub
push
add
sbbb
repz
pop
pop
ss
jae
imul
jle
mov
ret
lds
or
popl
mov
push
cld
adc
mov
mov
mov
fbld
xchg
push
jecxz
and
addr16
push
rcrb
test
mov
stc
leave
ficoml
xchg
clc
movsb
fsubs
push
std
add
notl
xchg
cs
test
mov
sub
cmpsl
lret
sahf
sub
jnp
repz
add
jl
and
push
jge
test
cld
in
cld
adc
movb
mov
movsl
dec
jle
pushf
data16
and
fsubrs
shl
das
lret
pop
iret
arpl
pop
icebp
lret
ret
mov
cmpsl
std
dec
sti
arpl
dec
adc
stos
xor
sub
mov
pop
and
repz
cmc
adcl
aaa
scas
adc
call
subl
mov
pusha
pusha
pop
mov
and
or
pop
xchg
add
sub
cmc
xchg
dec
sbb
mov
cmp
int
into
pop
xchg
adc
mov
and
jge
cmpb
push
movsl
jg
lcall
jle
xchg
jmp
clc
inc
ret
push
jne
inc
cmc
nop
fnstcw
fisttps
mov
adc
dec
mov
push
jae
jmp
popa
adc
adc
xchg
pop
das
in
std
test
data16
dec
pmulhw
or
je
popf
in
dec
loop
xchg
mov
xchg
cs
test
stos
add
popf
cltd
sar
xor
xlat
data16
in
pop
into
mov
inc
mov
xor
call
inc
fdivl
xor
jle
or
mov
xor
xor
dec
and
cmp
cltd
jno
and
je
les
xchg
jns
sbb
movsl
stos
mov
lcall
cmp
adc
aam
aam
lcall
loope
inc
push
xchg
rorb
mov
outsl
jnp
loop
jg
sbb
scas
dec
mov
xor
dec
or
in
loope
and
xor
mov
int
jne
adc
inc
sub
rorl
repnz
fnsave
lret
mov
mov
ret
leave
clc
jbe
bound
loopne
push
lret
fldenv
fisttpl
ret
mov
pop
and
push
stos
xchg
sbb
dec
aad
fadd
lret
and
fsubl
rol
loop
arpl
mov
dec
or
adc
imul
aaa
xchg
pop
mov
insb
adc
sbb
jge
repnz
pop
push
inc
mov
pop
adc
adc
iret
sbbb
or
and
sub
jg
test
cmp
lock
xor
and
push
sahf
js
xchg
jg
cmp
inc
cmp
mov
in
das
inc
add
adc
inc
and
dec
xchg
lods
dec
aas
bnd
adc
in
aas
mov
mov
adc
int3
cmp
sbb
jp
inc
scas
popf
jns
mov
in
adc
popa
popa
test
mov
inc
push
ja
cmc
push
out
or
lods
jl
dec
sub
cmp
in
movsl
adc
mov
xor
jae
sbb
and
test
push
arpl
fcoms
enter
inc
and
outsl
dec
arpl
sarb
rcrl
jle
insb
or
cmpb
stc
sub
lods
mov
outsl
mov
add
gs
into
sarl
dec
or
and
mov
jecxz
lcall
movsl
aas
xor
in
incb
push
add
dec
shll
jmp
xchg
in
pop
sub
dec
mov
pusha
mov
xchg
adc
xor
outsl
or
sub
jne
sub
orl
das
shlb
ja
xchg
lea
cwtl
cmp
cmpsb
inc
movsl
add
insb
push
push
jae
into
mov
and
push
nop
jne
or
pop
add
pop
lcall
pop
inc
pop
inc
push
cmp
mov
lret
xlat
sub
int3
adc
out
mov
adc
loopne
nop
lcall
adc
mov
das
sbb
pop
cltd
addr16
dec
fldl
pop
shlb
ret
pushf
xlat
jmp
mov
or
mov
push
sub
jecxz
mov
sti
mov
xchg
push
cmpsb
adc
arpl
mov
out
mov
cwtl
mov
shrl
jno
push
fsubrl
push
inc
lcall
adc
inc
fstps
scas
sub
mov
clc
stc
or
mov
outsl
or
lds
inc
fisttpll
repz
dec
je
in
mov
dec
jmp
push
pop
es
jae
scas
cmp
iret
test
dec
das
xchg
icebp
mov
filds
jge
pop
subl
lods
adc
adc
inc
decl
sbb
and
add
adc
mov
pop
pop
mov
pop
pop
pop
xchg
adcb
fistpll
cmp
int
mov
mov
jnp
dec
outsb
lock
mov
push
pop
mov
repnz
iret
push
insb
mov
icebp
xchg
test
or
mov
pop
out
andb
cmp
faddl
pop
cmp
jmp
out
push
push
js
jno
mov
push
or
xchg
in
mov
sbbl
dec
push
scas
push
dec
xor
shrb
inc
scas
adc
test
cmc
push
cltd
repz
xchg
push
cs
das
setge
movsb
mov
cmp
leave
or
sbb
adc
pusha
jo
xor
dec
popf
negb
outsl
push
or
adc
or
and
pop
fstps
inc
cmp
cmp
arpl
xchg
add
movsb
adc
loopne
loope
jns
fwait
les
sahf
and
dec
pop
out
hlt
mov
insl
imul
mov
push
push
pop
inc
mov
cmc
mov
loopne
sbb
lcall
jp
sbb
ljmp
mov
mov
ret
xor
dec
sbb
lahf
cmp
jo
mov
pop
das
jns
xor
pushf
ret
xchg
push
leave
pop
and
jg
cltd
out
sahf
daa
adc
pop
dec
adc
fdivrs
or
outsb
sbb
pop
stc
popa
mull
xor
ss
dec
or
xor
mov
xchg
imull
push
icebp
jp
and
add
cwtl
jns
sub
cli
movsl
divl
mov
mov
stos
cmpsb
or
subl
xor
enter
lock
jae
xor
jge
cmc
fnstsw
jns
int
pop
mov
jo
push
mov
pop
push
and
ss
and
adc
xchg
popf
mov
in
mov
xchg
leave
popa
mov
ds
lods
cltd
sub
mov
sub
paddusb
jne
mov
outsl
cmp
and
hlt
pop
inc
sub
mov
pushf
shl
xor
je
mov
jno
fnop
test
imul
mov
jb
insl
dec
jo
and
pop
pavgw
mov
movsb
xchg
or
sub
movsl
fnstenv
or
add
and
ds
mov
inc
dec
cmp
inc
or
out
pop
hlt
scas
das
scas
and
sahf
ja
sbb
mov
pop
jns
xchg
std
movsl
ljmp
stc
jg
ds
outsb
cli
lret
xchg
repnz
sbb
mov
adc
xchg
gs
aaa
out
sbb
fwait
lret
out
sub
aaa
test
and
cmp
mov
das
jmp
out
out
test
into
sbb
out
dec
jmp
pop
lds
or
fdiv
loopne
sahf
aas
xchg
test
mov
cmpsb
sub
aas
mov
add
xor
bound
inc
jecxz
cmp
lret
stc
inc
pop
push
mov
popa
mov
ja
lods
jns
jns
adc
or
les
jp
movsb
movsb
dec
ss
and
pop
cmpsb
xchg
sbbb
nop
adc
hlt
cmp
xchg
and
jge
xorb
lret
jbe
hlt
mov
inc
pop
mov
xorl
jg
out
xor
push
mov
sub
rclb
roll
scas
imul
rol
inc
jecxz
jbe
mov
fadds
aas
xchg
mov
or
std
mov
mov
pop
das
xlat
jne
mov
cmpsb
adc
mov
popf
aad
adc
jl
scas
xchg
roll
or
xor
aas
mov
inc
pop
mov
jb
cwtl
and
jp
ss
dec
mov
lahf
inc
and
cld
cmp
adc
lcall
jae
sbb
jbe
cmp
pop
out
mov
aad
stos
push
jno
sbb
aas
leave
cwtl
scas
lods
test
stc
cwtl
lahf
mov
lret
mov
cmp
sub
mov
dec
cmp
adc
jmp
in
pop
rorb
xor
mov
cmp
mov
inc
into
adc
and
jnp
test
lcall
or
or
xchg
lret
jae
rclb
and
add
and
mov
scas
push
enter
cmpsb
outsb
icebp
mov
adc
imul
sbbb
fidivrl
xor
cmpsl
push
and
push
lcall
dec
outsl
xchg
and
xchg
xor
shll
stc
push
jbe
ja
sub
mov
add
mov
xchg
iret
daa
stos
clc
ds
and
xchg
sub
cld
xchg
or
and
cwtl
push
xlat
je
in
cli
mov
and
dec
xor
jge
mov
addr16
rcll
js
jge
loopne
call
notb
xor
xchg
hlt
rolb
xchg
xlat
loopne
int3
or
pop
jmp
testl
jl
mov
lea
test
xchg
sub
mov
sarb
push
addb
push
sti
pop
jae
sub
mov
out
dec
fsubr
pop
jmp
push
das
lds
mov
shl
xchg
dec
dec
ret
lret
or
sahf
cmpsl
stos
xchg
ret
jl
add
cwtl
mov
test
lea
mov
add
enter
insb
push
cwtl
fs
sub
out
inc
push
ljmp
mov
pop
ret
insb
lahf
mov
mov
sbb
icebp
mov
nop
pop
sub
push
dec
jp
rcrl
out
add
insb
out
outsl
shr
sbb
inc
aam
sahf
and
ds
ljmp
loopne
and
mov
mov
inc
inc
jo
test
imul
icebp
and
sbb
push
lret
inc
lret
jae
lods
dec
xchg
jb
lahf
jge
sbb
inc
inc
insl
sub
and
fadds
std
inc
sbb
outsl
inc
shl
sbb
mov
dec
fldenv
roll
xlat
daa
nop
or
fnstsw
fcmovne
mov
mov
sti
or
jb
jecxz
fildll
daa
cltd
cmpl
cmp
rorb
or
mov
or
testl
fdivp
addr16
hlt
pop
arpl
or
push
pushl
ss
imul
iret
push
mov
fbstp
sahf
sbb
and
mov
repnz
mov
sbb
imul
in
scas
xlat
sub
or
mov
mov
loope
call
and
mov
sahf
inc
aas
inc
shll
xor
ss
and
mov
add
or
mov
cmpsl
jae
leave
testb
inc
mov
xor
fmuls
jbe
bound
stos
xchg
pop
les
nop
fildll
pop
push
pop
ja
adc
shlb
ret
xor
loop
ljmp
xchg
pop
dec
jnp
mov
jbe
imull
cmp
or
inc
jno
xor
jne
jne
mov
xor
imul
outsl
pop
das
in
ljmp
loope
mov
mov
loope
daa
mov
pop
jno
insb
inc
inc
sbb
xor
pop
jle
lret
iret
xchg
mov
test
push
mov
inc
adc
cmpsl
or
xchg
sahf
inc
out
cwtl
jns
xchg
loopne
and
loopne
insb
push
and
xor
dec
mov
cwtl
jo
fs
ret
add
mov
add
data16
cli
jns
mov
psllw
jns
xchg
pushf
stos
dec
adc
mov
mov
jns
cld
out
insl
rorl
add
sbbl
mov
pop
or
xchg
mov
ret
pop
pop
aas
enter
lret
dec
inc
aas
stos
or
outsb
jmp
daa
popl
pop
inc
push
cmp
mov
xor
jp
stos
ret
ss
sarb
jae
cwtl
loop
lahf
adc
mov
das
sbb
mov
aas
and
in
cmp
or
in
lret
fstp
mov
loopne
icebp
rcrl
in
outsl
mov
dec
dec
mov
pop
inc
mov
fistpll
test
pushf
incb
sbbl
jne
mov
mov
ds
int
jno
and
es
aam
sar
lcall
adc
or
push
sbb
inc
leave
gs
rcrb
or
leave
dec
test
scas
jno
jae
adc
out
adcb
and
or
mov
int
dec
insl
jo
std
mov
ret
sub
movsl
push
into
and
lret
adc
mov
imul
or
mov
or
pop
jo
fs
mov
pop
in
nop
jbe
cmpsb
dec
inc
mov
lods
inc
js
movsl
inc
add
dec
push
lcall
xchg
or
pop
ljmp
adc
in
rcrb
push
in
sbb
lahf
sub
frstor
push
inc
mov
xor
adc
rclb
fisubs
xchg
mov
mov
mov
into
das
test
outsl
dec
dec
jmp
repnz
loop
push
jmp
in
rcrl
cmp
xchg
mov
lcall
or
dec
rolb
adc
les
std
push
lcall
pop
rorb
cmp
fdivrs
fsubs
imul
xor
jecxz
adc
lea
in
rcll
outsl
sub
mov
cmp
sti
ret
divb
movsb
pop
loop
push
xor
sbb
sub
popa
sub
xchg
and
enter
mov
dec
inc
ds
mov
dec
int3
adc
jne
ss
dec
cltd
jae
mov
xor
cltd
mov
orl
pop
les
sub
xchg
call
pushf
xchg
cmpl
bound
imul
jmp
mull
cmp
divl
mov
fld
into
aad
out
pop
sbb
mov
enter
es
and
inc
or
dec
mov
lret
mov
xchg
lds
movsl
loop
subps
andl
cmp
add
das
cmp
cmpsl
push
rol
jae
pop
cmpsb
push
nop
dec
push
decl
hlt
jle
or
mov
lds
or
in
add
lods
shll
sub
fnstcw
mov
and
dec
push
andl
jae
int
xchg
int
cwtl
fwait
cmp
leave
aad
pop
or
stc
mov
addr16
lods
jns
lods
jle
jge
or
in
cmp
mov
mov
adc
nop
sub
pop
pop
xchg
int3
pop
sahf
pop
jns
jg
inc
sub
cmpsl
enter
arpl
or
insl
test
rep
and
add
cmp
sbbb
out
adc
fiaddl
mov
mov
push
cmpsb
mov
cmc
insl
outsl
sub
out
stos
mov
mov
ds
mov
outsl
mov
pop
mov
fucomip
es
mov
addb
push
adc
repnz
push
mov
push
sbb
dec
adc
mov
out
jg
sub
ret
out
cwtl
cmp
xchg
leave
fcomps
cli
test
xor
xorb
sbb
mov
lods
in
jecxz,pt
enter
loope
ja
addr16
test
mov
cld
leave
loopne
mov
mov
popa
test
sbb
jno
popa
push
inc
dec
mov
cmp
sbb
and
loope
ss
sbb
mov
cmp
dec
andb
cltd
pop
ficoml
mov
xchg
xor
call
or
add
cltd
es
cmc
ljmp
pop
lock
adc
stos
inc
inc
add
aas
inc
pop
cltd
mov
sahf
sub
xchg
lock
jo
fldenv
dec
mov
repz
in
lret
fs
jle
xchg
add
dec
roll
xchg
add
push
inc
mov
sub
mov
mov
ret
out
jg
sub
andb
lcall
inc
add
aas
push
mov
xor
jle
or
enter
cwtl
mov
pop
jbe
mov
cmpsb
adc
shl
sahf
push
rcrb
add
xchg
xchg
mov
int3
xor
loopne
js
inc
dec
mov
leave
clc
mov
xchg
scas
sub
shrb
push
leave
add
fnsave
pop
stos
mov
lret
adc
or
test
mov
enter
and
or
dec
xor
mov
inc
lret
sbb
mov
lcall
data16
push
addr16
movsl
cltd
lcall
mov
outsb
fists
movsl
int3
sub
push
inc
jno
mov
nop
dec
rcrl
or
cmp
or
out
adc
pop
jl
inc
inc
jno
mov
mov
fidivrl
adc
loope
sbb
ja
and
ds
cmc
cmp
push
push
int
cli
mov
cmpsl
add
push
and
sub
daa
push
popa
push
xor
push
aas
mov
sbb
in
sub
sub
sbb
in
xchg
mov
mov
xor
mov
mov
sbb
pop
test
pop
addl
mov
pushf
and
mov
ja
icebp
or
mov
repz
iret
dec
loopne
sbb
pop
fbstp
sbb
add
jecxz
sub
cld
testb
mov
movsl
test
stos
mov
jecxz
rcrl
mov
sub
xchg
loope
sbb
push
idiv
ret
inc
enter
lds
scas
push
mov
fwait
sub
cmp
add
cwtl
mov
mov
ret
add
gs
xor
data16
mov
mov
fsubrs
mov
mov
ret
arpl
pop
xchg
insb
aaa
xor
xchg
sub
sub
sub
cwtl
jns
mov
fidivl
dec
dec
push
or
add
in
jg
in
nop
pop
xor
aaa
dec
and
sbb
mov
les
dec
psubusw
dec
sbb
or
movsb
sbb
cmpsl
mov
adc
in
repnz
xor
and
jge
cmp
add
jne
dec
jecxz
mov
jge
xor
push
jg
int
dec
add
sbb
rolb
xor
and
mov
sub
test
lods
and
js
pop
dec
mov
push
jle
cli
pop
add
sub
movsb
das
and
fs
pop
cltd
mov
arpl
pop
sbb
add
cltd
add
dec
out
iret
test
lea
xor
pop
int3
pop
sub
pop
cmp
data16
push
xchg
js
xchg
sub
xlat
push
outsb
out
or
fimull
pop
js
sbb
xchg
test
xchg
push
and
rcrb
pop
xchg
ja
fisubl
cmp
ret
enter
push
addr16
sub
xor
xchg
add
das
dec
pop
push
or
scas
xorl
jle
xchg
lods
xchg
or
cwtl
mov
jle
xor
cmp
jb
inc
or
in
decl
loop
push
ds
adc
pop
xchg
adc
add
cltd
or
or
jle
lret
pop
lret
addb
or
and
add
and
mov
es
mull
lahf
push
cmp
push
or
test
inc
or
push
or
xlat
push
dec
dec
sarb
adc
mov
out
mov
rclb
jo
sarl
fwait
pop
pop
mov
out
aaa
test
mov
sbb
out
push
stos
sarb
ffree
popa
mov
mov
sahf
frstor
pop
xchg
jle
mov
xchg
jne
test
lds
push
hlt
mov
pop
ret
jecxz
push
add
and
or
ficoms
push
fwait
imul
in
in
frstpm(287
inc
cld
push
mov
mov
mov
mov
xor
jp
mov
mov
xor
jne
dec
add
lods
daa
mov
jo
mov
imul
adc
mov
cmc
inc
pop
push
iret
imul
cmpsb
mov
iret
sbb
das
test
sub
xchg
xchg
sar
adcl
and
pushf
adc
cmp
in
cmp
aam
jle
arpl
jp
nop
mov
mov
fwait
jp
fdivs
xor
xor
aam
sti
and
cmp
imul
lea
cltd
outsl
fiadds
cmp
add
mov
xor
push
loope
jl
dec
jge
pop
test
cmc
aad
shr
jne
or
xchg
sahf
mov
int
xchg
xchg
sub
sub
jecxz
aas
adc
pusha
lods
scas
cmc
into
and
lods
scas
cmp
xor
idivb
ficomps
ds
add
push
dec
test
jmp
add
pushf
out
jne
imul
push
loopne
cwtl
and
xchg
or
push
mov
cmp
mov
sbb
jmp
inc
sub
shl
test
sub
pop
push
clc
jge
sbb
aad
test
cs
sub
mov
jge
and
push
in
push
faddl
cmp
in
pop
xor
sub
jl
fidivl
enter
or
inc
lock
test
pusha
dec
ds
int3
enter
xchg
int3
push
imul
mov
movsb
cmp
dec
iret
push
out
mov
insb
test
sub
push
movsl
xor
adc
lock
sub
sub
lods
jle
in
xchg
jb
cmpsl
cs
imul
xchg
into
add
jno
scas
sbb
jne
or
int3
dec
testb
fwait
addr16
sbb
push
fisubs
push
mov
scas
das
push
pop
xlat
jbe
movsb
adc
inc
mov
fs
cmpl
imul
pop
aas
fstpt
mulps
pop
daa
imull
test
sbb
call
mov
sub
push
inc
out
and
pusha
subl
cs
lret
push
xor
je
sbbb
dec
lods
pushf
or
lods
leave
data16
pop
les
ljmp
mov
fisubrl
adc
xchg
or
add
ret
lret
lods
jl
dec
out
xchg
ds
sub
cmp
xchg
loop
xchg
cltd
mov
rclb
sub
xor
mov
jge
pop
xor
stc
inc
insl
daa
adc
jo
adc
mov
movd
jae
mov
mov
inc
cmpsl
jno
mov
inc
cli
shl
adc
jns
loope
xor
and
sbb
mov
stos
pop
sub
pop
loop
pusha
cmp
rorl
dec
in
push
jo
sbb
sbb
cltd
mov
mov
sub
add
in
insl
movsl
xchg
loopne
xor
add
adc
adc
arpl
jb
in
dec
andb
lret
psubusb
adc
jecxz
jbe
les
and
push
cmc
ja
xchg
repz
popa
inc
adc
es
mov
or
pop
mov
push
outsb
rcrl
pop
int3
mov
push
inc
popa
mov
xchg
cmp
xor
lcall
test
or
xorl
mov
les
push
mov
std
add
leave
pop
push
push
push
fwait
dec
mov
xchg
jnp
lahf
jno
movb
lds
push
cmp
inc
adc
movsl
das
faddl
push
push
into
sti
pop
push
or
mov
sub
push
lcall
mov
xlat
nop
jb
push
sub
fwait
adc
inc
aaa
dec
lods
or
pop
push
fs
xchg
das
mov
dec
leave
test
shll
stos
fsubrl
push
mov
fimuls
shrb
push
cmp
push
loopne
sub
or
mov
sbb
aad
and
shrl
inc
inc
loopne
sub
in
push
cmp
cmp
jo
test
cmp
and
inc
lret
adc
cs
cmp
add
xor
cmp
inc
push
dec
and
sub
mov
jg
sbb
int3
mov
sub
or
les
and
imul
and
repz
mov
rorb
and
jl
xor
call
mov
out
cltd
xchg
add
icebp
pop
lcall
mov
pop
mov
lods
xchg
nop
sub
leave
pop
int
adc
and
jecxz
xor
pop
movsl
aad
test
mov
push
fstpl
add
xor
xor
dec
pop
inc
push
mov
push
lret
ret
mov
or
fs
lods
mov
pop
rorb
fstpl
dec
adc
cltd
sbb
loope
leave
stc
ljmp
sub
push
adc
in
mov
xor
mov
scas
and
lret
mov
leave
leave
mov
inc
imul
outsl
imul
add
cmpsb
and
sbb
lcall
scas
jp
cltd
cmp
shlb
cmpb
mov
or
pop
mov
xor
lret
movsb
testb
std
clc
and
push
dec
sub
or
mov
lock
mov
mov
dec
xchg
and
push
inc
push
jo
iret
addr16
out
fiadds
or
pop
mov
jnp
dec
xchg
dec
ds
pusha
fnstenv
sub
ja
icebp
out
xchg
lods
pop
cmp
adc
push
or
shll
xchg
pop
repnz
fcmovnb
ffree
jns
shrb
mov
cld
inc
adc
ret
icebp
aad
sub
pop
adc
inc
mov
pushf
pop
scas
xchg
idiv
adc
arpl
iret
fwait
or
mov
into
mov
and
sub
pusha
jle
sbb
mov
std
lret
xchg
mov
jno
cmp
icebp
mov
test
scas
outsb
sti
or
popf
pop
push
fcoms
mov
jecxz
lret
mov
sbb
mov
cmp
loop
clc
inc
sub
xor
pop
aam
cmp
movsl
push
bound
mov
int3
sbb
fstpt
xor
adc
subb
push
mov
pop
lods
subl
ret
dec
jge
cmp
daa
adc
mov
jno
add
dec
adc
bnd
add
sub
push
cltd
fsts
mov
lret
ja
fs
xorb
jae
lret
sbb
daa
inc
lahf
pop
cltd
shlb
push
testl
jo
mov
gs
xor
sub
dec
test
sub
jns
xor
xchg
xor
loope
repnz
mov
stos
lret
push
addr16
sub
aad
push
dec
lods
xlat
inc
int
mov
mov
ljmp
fstpt
psubd
dec
cli
push
jae
fwait
xchg
jg
ljmp
dec
push
xlat
je
pop
mov
push
xchg
jnp
inc
mov
dec
dec
lea
mov
cmp
push
xor
inc
ss
ftst
imul
cltd
xchg
ds
mov
cmp
leave
test
adc
cmp
sub
ss
les
cmpsl
mull
mov
mov
sbb
add
repnz
lcall
mov
fiaddl
jmp
pop
jg
inc
sub
cwtl
add
das
testl
xchg
outsl
movsb
xor
add
adc
mov
insb
pop
ret
xorl
xchg
lret
std
push
xchg
pop
fisttpll
push
out
loope
add
pop
xlat
sub
jp
fstps
adc
test
ret
sarl
jl
sub
jp
pushf
mov
jl
xchg
pop
push
loop
mov
ss
in
mov
ljmp
inc
pop
je
pop
pop
mov
xchg
mov
push
add
adc
xor
mov
xchg
xchg
or
loop
or
jno
cmp
aad
add
sarb
pushf
and
stc
shrl
adc
push
and
or
mov
incl
je
hlt
mov
loope
jb
push
jle
stos
mov
ret
fstp
aaa
outsl
xor
lock
cmp
repnz
stc
jp
std
test
jecxz
lret
cmp
push
add
xor
push
mov
and
and
adc
cmp
iret
mulps
test
fldln2
inc
scas
and
jecxz
adc
mov
das
inc
out
nop
stos
adc
pop
mov
lods
pop
add
and
inc
call
push
jmp
push
sbb
arpl
push
rolb
and
mov
dec
or
xchg
sbb
test
test
addb
ljmp
scas
add
pushf
call
pop
xor
aas
jbe
in
lahf
cmp
aaa
pop
dec
cmp
test
cmpsl
jae
pop
push
pushf
mov
rclw
arpl
in
mov
and
push
movsb
ret
adc
negl
icebp
scas
xchg
clc
add
sahf
nop
push
lret
push
mov
push
lcall
loop
push
jge
call
sbb
fistpll
pop
setns
out
int
hlt
fildll
mov
inc
push
lods
gs
popf
bound
mov
and
mov
ret
lret
test
inc
mov
xchg
push
ret
int3
roll
add
and
and
fwait
push
push
mov
add
dec
in
jae
xor
popa
mov
insb
and
mov
dec
inc
xor
ret
sbb
cmc
shll
in
dec
xlat
and
in
shl
or
sahf
add
das
xchg
rcrb
and
push
push
cmp
mov
sbb
std
push
in
mov
and
movl
fcoml
xor
mov
pop
out
sbb
and
or
clc
xchg
lock
in
and
addr16
jle
jmp
and
mov
rcrl
sbb
imul
xchg
dec
mov
in
xchg
hlt
arpl
mov
mov
frstor
outsb
into
nop
dec
imull
call
loopne
jbe
push
dec
test
mov
mov
repz
aad
fistpl
xor
fwait
and
xchg
std
ret
add
outsb
lods
sbb
or
or
std
mov
outsl
push
adc
mov
mov
mov
not
scas
pop
in
ja
and
popf
aas
test
sbb
jnp
fcoml
pop
dec
xlat
dec
mov
loop
pushf
lock
lahf
add
outsb
ljmp
nop
pop
movsb
sub
or
ds
jnp
jne
lds
jecxz
push
jl
das
sub
and
pop
push
mov
push
sub
sarl
shrl
shll
xchg
test
jo
fsubrl
jae
jge
cmpsl
pop
mov
stos
test
aam
cs
jmp
inc
aas
fucomip
lds
cld
dec
push
adc
push
mov
cmp
mov
or
inc
jg
or
sub
test
jg
int3
ret
in
je
jg
push
jmp
xor
pop
push
pop
jmp
jnp
xor
and
pop
addr16
lcall
push
adc
jnp
mov
das
ret
or
out
dec
push
adc
jge
mov
pusha
pop
mov
dec
dec
dec
rclb
pop
test
jge
insl
repz
lahf
xchg
mov
insl
mov
in
add
jne
inc
leave
popa
hlt
adc
jbe
pusha
pop
popa
sti
outsl
imul
adc
sahf
gs
fs
inc
pop
repnz
lret
out
outsl
adc
push
aad
mov
jl
int
into
out
dec
inc
ficoml
sbb
lret
xchg
or
jl
mov
lock
pop
sub
int3
sahf
jne
jge
lret
mov
out
les
pop
sbb
addr16
pusha
aaa
xor
adc
js
jp
add
xchg
orl
add
or
mov
add
cmp
sahf
mov
stos
fnstenv
push
pusha
pop
call
test
sbb
xlat
mov
test
addr16
inc
push
out
stos
pop
xor
pop
out
lret
push
sarb
jae
daa
mov
ja
inc
xor
fstps
cmpb
push
std
push
and
xor
xchg
outsb
incb
add
mov
fimuls
pushf
jno
push
cmpsl
mov
stos
movsl
test
mov
xchg
ret
movsl
adc
movups
test
pop
loop
or
notb
hlt
xor
pop
sahf
pop
xchg
sbb
xchg
inc
sub
sub
dec
mov
outsl
and
jae
pop
js
lock
jno
sub
and
mov
rcrb
mov
es
sbb
sub
mov
aam
imul
pop
sub
lods
aam
inc
ret
clc
lods
arpl
data16
add
cmp
loope
add
push
orl
shll
push
imul
sarl
testl
adc
mov
cmp
mov
lret
shlb
clc
call
repz
jns
test
roll
dec
cmp
rolb
int3
iret
xchg
in
mov
lret
mov
sbb
insl
sub
lods
mov
sbb
es
and
psubusw
xchg
adc
fistps
and
rclb
jae
or
sahf
sahf
dec
jle
divl
popa
sub
out
inc
adc
std
pop
xchg
xchg
testb
cmp
mov
and
cmpsl
mov
fwait
ja
pop
cs
or
fmulp
pop
push
cmpsl
mov
mov
std
iret
aas
nop
aad
popa
lods
fistpll
bound
adc
mov
adc
jge
ret
out
sbb
inc
bound
mov
in
sti
inc
les
cltd
lcall
fstps
popa
int3
insb
jmp
jbe
rcll
lds
insb
pop
pop
xor
out
scas
mov
or
adc
in
jo
sbb
or
adc
push
outsl
xor
push
pop
iret
pop
xchg
pop
cwtl
xchg
aaa
hlt
int3
out
ffreep
fadd
mov
aad
aad
cmp
lock
movsb
std
push
aaa
mov
fsubl
push
pop
dec
mov
push
jno
xchg
xchg
jecxz
xchg
lret
movsl
jge
cmpl
insb
mov
sbb
aad
ljmp
iret
pop
jle
les
cmp
lods
adc
scas
das
jp
testb
cmpsb
cmp
test
aad
insb
mov
add
push
jle
mov
ds
mov
mov
inc
hlt
aaa
mov
push
mov
add
pop
ljmp
mov
lret
lret
pop
push
xor
or
and
pop
jmp
ret
clc
and
xor
pop
mov
sub
rclb
aad
dec
jnp
jecxz
movsb
dec
mov
mov
pop
rcrl
daa
mov
clc
scas
js
and
xchg
icebp
into
mov
jle
cmpsb
xor
enter
icebp
xchg
in
aad
xchg
jmp
iret
mov
and
or
lret
adc
mov
enter
rcrb
adc
pop
xor
ret
push
xlat
in
fsubrl
jg
jle
pop
cs
add
xchg
lock
pop
ljmp
cld
jns
jae
or
test
call
jmp
mov
test
cmp
jne
and
jne
cmp
sub
push
cwtl
sbb
mov
mov
mov
or
orb
mov
scas
dec
mov
out
mov
dec
and
mov
inc
lret
out
mov
insb
xor
push
stos
lahf
cs
clc
sbb
gs
inc
and
popf
adc
loop
fdivs
insl
ss
jg
sbb
jmp
lretw
aaa
adc
mov
and
sbb
outsl
rep
xor
mov
jbe
mov
aas
xchg
pop
in
add
fisttps
sarb
ljmp
cmpsb
mov
lret
push
gs
data16
fsubr
test
icebp
in
cld
cld
outsl
les
lret
or
mov
push
sub
or
ljmp
push
dec
lret
icebp
popf
pop
std
mov
cmp
cmp
test
testl
fldt
aas
and
mov
call
push
cld
mov
and
popa
mov
dec
mov
pop
mov
mov
dec
pop
mov
xchg
jo
add
addb
add
adc
dec
inc
in
mov
inc
shll
inc
cmp
sarb
inc
test
sbb
mov
mov
xchg
roll
xor
xchg
dec
enter
dec
sub
adc
pop
mov
ljmp
xor
cs
mov
mov
rolb
mov
mov
xchg
dec
push
dec
aam
mov
jns
mov
push
mov
es
xchg
shll
lods
inc
lea
ret
int
cmp
inc
jecxz
out
mov
shl
and
mov
nop
mov
jecxz
mov
xchg
jno
inc
jp
jg
or
enter
add
push
leave
xlat
cs
mov
js
jg
loope
fld
fwait
dec
pop
loope
or
inc
jp
mov
aam
fwait
in
mov
sub
dec
jle
sub
fistps
out
xchg
call
pop
and
adcb
xor
pop
pop
push
gs
addr16
stos
cld
cmpsl
fildl
sub
cmp
push
add
insb
inc
cmp
jp
push
xor
aam
popa
sti
mov
or
sahf
sub
mov
ret
dec
inc
mov
pop
enter
sbbb
fstl
pop
sub
inc
xchg
loop
adc
add
xchg
aam
jno
mov
test
adc
sub
lcall
jl
arpl
xor
mov
mov
mov
adc
ret
xor
jo
test
mov
pop
ss
jp
sbb
cmc
push
andl
icebp
lret
ficompl
pop
pop
jp
stc
in
mov
stc
cmpl
sub
add
ja
cli
sbb
arpl
sarb
inc
add
jmp
test
ret
ljmp
push
jne
sub
sti
sub
cmp
loope
jnp
lahf
stos
sub
stc
stos
pop
iret
dec
mov
mov
xchg
inc
aaa
aad
stc
jmp
xchg
jo
sbb
sub
mov
xor
jno
lods
loope
insb
mov
lret
push
imul
push
mov
movsl
test
push
ljmp
bound
pusha
outsb
cmp
data16
pop
sti
les
ret
shlb
cmp
addr16
lds
sub
rorb
data16
pop
cmp
add
xchg
and
jns
clc
push
iret
aad
jmp
bound
add
fcmovbe
faddl
xchg
pop
pop
jge
jae
clc
and
push
clc
es
test
mov
mov
outsl
push
scas
push
pop
mov
inc
jns
jle
add
or
xchg
out
xchg
sbb
push
xchg
and
add
cli
pop
jo
cmp
ret
mov
push
pop
insl
ljmp
mov
push
mov
sbb
lret
repnz
daa
or
cs
lcall
fmul
mov
mov
imul
xor
xor
std
dec
fsubrp
addr16
call
push
sbb
lea
push
add
mov
sub
or
inc
push
sub
mov
push
pop
pop
cltd
into
movsb
iret
test
mov
push
adc
cmp
mov
xor
mov
out
jb
push
xchg
and
mov
movsl
push
and
sub
mov
jb
mov
pop
pop
pop
pop
push
xchg
lock
cs
adc
add
lods
js
sti
jge
outsl
daa
fcmovnu
stos
and
mov
data16
dec
add
enter
dec
stc
ret
xor
imul
push
fidivs
loop
fisubrs
inc
jbe
inc
xchg
fs
in
xor
outsb
fbstp
aad
movsl
sub
xchg
ja
clc
xorl
fldenv
mov
xor
ds
pusha
push
add
add
and
aam
adc
mov
movsl
dec
fildll
mov
fistpll
inc
jno
je
pushf
pop
pop
adc
inc
xchg
mov
or
push
xor
fldcw
outsl
pop
and
cltd
fstl
es
sub
leave
push
mov
jno
xlat
sub
fwait
mov
std
jl
outsl
add
lahf
lret
repnz
xor
mov
nop
and
fisubrs
xor
dec
add
add
leave
mov
test
out
rol
mov
xchg
and
and
xchg
add
xor
adc
sub
fcoml
dec
sahf
pushf
sbb
mov
adc
push
dec
enter
arpl
leave
ljmp
insl
adc
jne
fcoms
test
std
jle
aad
out
int
stc
hlt
in
add
xchg
ror
jb
filds
cli
jo
adc
inc
addr16
cmp
fmul
adc
push
cmc
jmp
fistps
loop
push
scas
out
mov
pop
mov
pop
push
mov
or
xchg
mov
std
jge
mov
sbb
jns
cmpsb
ficoml
fisttpl
lea
sub
inc
mov
xchg
and
mov
and
clc
mov
loopne
addb
xor
fisttpl
push
ret
cmp
enter
aad
popa
pop
or
add
adc
xchg
sub
stos
cmp
push
pusha
push
mov
jmp
cltd
outsl
mov
stos
icebp
jmp
fildll
pop
leave
xchg
sbb
pop
cs
mov
pop
mov
outsb
mov
insl
enter
fnstsw
pop
jo
lock
int
xchg
nop
xor
and
cltd
adc
movsb
mov
or
idivb
jae
jbe
in
fsubrl
push
in
adc
jle
fnstenv
cmpsl
addr16
jno
movsb
insb
inc
icebp
idivb
rclb
mov
xor
aam
mov
sbb
ss
dec
push
scas
jae
les
adc
cmpsl
and
jge
lea
loopne
sub
lds
pop
mov
bound
cmp
clc
mov
shll
dec
sub
in
lods
fiadds
pop
std
cmpsl
cmp
cmp
add
or
cmp
cmpsb
push
pop
cld
popf
jl
sbbl
push
dec
push
arpl
push
out
inc
mov
aaa
fimuls
repnz
imul
cmpsl
stc
mov
ljmp
push
cmp
ret
gs
dec
sub
roll
push
call
subb
xlat
sarl
lret
push
fcoml
xor
cwtl
in
mov
cmp
inc
lret
andl
mov
cmp
pop
inc
fstpl
and
aad
movsb
mov
cs
adc
je
fwait
or
shl
push
ja
cmp
divl
test
jp
push
xchg
jge
pop
mov
xor
fstl
shlb
jne
push
mov
ljmp
std
call
mov
sahf
push
mov
jbe
and
push
xchg
push
pop
mov
clc
out
push
sahf
jb
pop
test
mov
icebp
add
rolb
pop
call
add
push
lods
cmpsl
sbbb
mov
adc
test
cmovne
imul
les
pop
outsl
mov
mov
push
jg
mov
movsb
fadds
xchg
cli
mov
lea
pop
mov
imul
ret
push
jl
les
mov
jbe
movsl
inc
pop
insb
xor
movsb
jb
fdivs
xchg
ja
xchg
js
fisubl
fistps
into
cmp
pop
or
and
leave
data16
push
divl
mov
sti
ds
or
cs
in
jle
daa
loope
js
push
imul
push
lcall
daa
mov
in
shl
jbe
or
add
faddl
int3
sbb
or
mov
rorl
add
cld
mov
bound
test
sub
jmp
stos
sub
xor
fs
jg
pop
pop
ljmp
lock
jb
ss
subl
pop
xchg
cmp
xor
divl
shlb
aad
in
jmp
jecxz
movl
notl
push
push
and
in
mov
mov
mov
jae
adc
sbb
jmp
push
ret
sbb
outsl
hlt
adc
mov
and
sub
pop
shr
mov
roll
dec
sbb
fidivrl
clc
stos
das
js
adc
xchg
sub
jo
xchg
sbb
mov
pop
mov
ss
rol
lock
movsb
adc
shll
loopne
test
cmp
popf
cmp
inc
push
pop
sar
call
jg
in
popa
sub
sbb
sbb
inc
arpl
sbb
push
lds
sar
sbb
jae
jp
subb
pushf
stos
dec
push
inc
enter
test
arpl
pop
ret
imul
adc
sub
gs
jae
popf
fnclex
jb
push
or
sub
movsb
daa
lret
and
rorl
fidivs
adc
push
mov
jbe
jecxz
loop
add
mov
shlb
data16
push
imul
mov
push
inc
mov
cmpsl
clc
addb
cmc
mov
add
inc
xor
test
or
xor
push
pop
add
and
cwtl
nop
loope
mov
dec
cld
or
sub
jp
add
dec
adc
mov
mov
push
and
inc
lds
xor
sbb
inc
push
ljmp
adc
icebp
mov
fnstenv
add
gs
xchg
and
pop
iret
push
sub
scas
inc
add
jg
test
push
jno
fcomip
retw
repnz
pop
ficoms
shl
lea
aad
xchg
addl
pop
mov
adc
add
popf
jno
ja
cvtps2pi
arpl
fidivs
imul
inc
mov
mov
call
add
mov
cmp
lods
movsb
sbb
lea
cmc
out
stos
ja
mov
or
mov
arpl
sbb
sarb
fistpll
scas
adc
leave
mov
or
add
and
iret
sub
push
scas
clc
out
jne
incl
and
or
mov
mov
jg
push
clc
repz
lock
pop
add
inc
mov
js
cld
in
jl
imul
sub
lods
jbe
inc
lret
cli
movsl
aas
mov
imul
roll
or
incl
fidivl
mov
sbb
ret
cmp
aad
sti
and
iret
jo
dec
arpl
sbb
mov
popa
loop
dec
mov
pop
ljmp
or
inc
adc
pop
cmpsb
pop
rorb
aam
xor
testl
movsb
daa
and
xor
adc
push
xchg
subb
xorb
push
push
std
icebp
push
mov
outsb
iret
and
lods
inc
jle
test
aas
shr
pop
in
jle
in
push
ret
cli
mov
repnz
shrl
mulb
inc
push
mov
idivb
dec
jg
jl
xor
mov
lret
lcall
cmp
mov
jg
testl
add
lods
mov
inc
pop
fsubs
loop
in
cwtl
pop
sbb
jae
xor
mov
in
jb
push
or
cs
stos
repnz
push
push
bound
inc
popa
divl
xor
pop
inc
dec
jg
test
ret
cld
sbb
sub
mov
ret
imul
fnstsw
fistpl
jbe
push
sub
pop
ret
lods
ljmp
ljmp
inc
test
icebp
pop
aaa
movsl
jl
jns
xchg
data16
popa
dec
xchg
or
mov
and
adc
jo
lds
inc
and
mov
je
inc
es
into
fidivrl
pop
mov
outsb
ds
std
dec
imul
cmp
arpl
negb
rorl
cmovne
pop
pop
and
js
movb
outsb
mov
push
test
test
xchg
and
push
call
repz
and
mov
leave
daa
add
mov
aad
sbb
xor
mov
sbb
cmp
push
jb
dec
pop
cld
jmp
cmp
out
xor
xchg
xchg
pop
inc
dec
pop
mov
aam
lret
sbb
pop
mov
sbb
add
mov
add
adc
dec
add
fsubs
mov
pop
arpl
xor
mov
mov
add
add
addr16
inc
aam
in
and
sub
js
mov
jl
int
xchg
test
and
int
test
cld
das
jns
andps
daa
lahf
and
sub
xor
je
jne
xchg
out
sub
sub
lods
sbb
data16
fstps
imul
jle
out
dec
cmc
ficoms
out
clc
or
mov
sub
dec
mov
dec
aam
inc
arpl
mov
mov
mov
repnz
in
add
cmp
lods
outsb
sbb
nop
mov
jl
mov
xchg
jmp
aam
adc
pushl
outsb
je
jnp
push
repz
inc
and
cmpsb
xor
notl
cli
xor
or
sti
cs
pusha
in
in
mov
test
inc
daa
notl
jnp
inc
lock
int
cli
add
push
lcall
adc
dec
or
test
jp
jne
aad
inc
xlat
or
and
and
jp
sub
push
xor
sbb
outsb
inc
fwait
sti
push
inc
cs
mov
push
add
testb
push
movsl
out
dec
xchg
mov
in
mov
test
dec
lds
sbb
pop
shlb
and
add
stc
lock
add
ja
cmc
popf
sub
or
cmp
mov
addr16
mov
mov
mov
repz
fstpl
inc
leave
gs
pop
into
sar
push
inc
addl
popa
push
or
inc
nop
or
dec
sub
mov
int
lods
pop
jae
lret
dec
hlt
into
loopne
pop
ret
sbb
stc
cmp
rclb
sti
push
aaa
enter
cmp
scas
mov
dec
push
loop
lcall
loopne
mov
adc
mov
movd
jne
divl
pop
jp
adc
lahf
mov
dec
jae
ror
sub
fnsave
cmp
push
cmp
ds
mov
lds
push
aam
outsb
sub
ror
lods
push
popf
and
jp
cmp
out
inc
inc
adc
idivb
and
call
sahf
pop
incb
add
stos
rorb
pop
cmp
int
push
mov
jg
stc
and
fidivrs
cltd
and
int3
lcall
out
sarb
add
scas
add
inc
rcr
insb
and
add
movsb
inc
push
sarb
sti
out
jg
sbb
mov
cmpb
pushl
testl
inc
pop
dec
adc
fdivrs
and
sub
jge
xor
push
imul
sub
ds
test
cli
xlat
sbb
dec
adc
movsl
imul
sub
in
sub
jmp
int
push
mov
test
push
js
push
cwtl
rcll
out
fcomp
push
sub
jb
fsubl
or
mov
pusha
imul
mul
mov
jo
mov
mov
into
mov
add
les
jb
jns
cltd
mov
inc
and
dec
mov
sbb
shrb
hlt
js
sbb
inc
xchg
int
mov
jb
scas
popf
and
jbe
jae
shr
cmp
aaa
rclb
cltd
mov
in
ret
push
call
cmp
mov
jge
xchg
push
pop
nop
ljmp
ss
sub
ret
pop
cmc
pop
sti
jmp
add
test
inc
and
inc
mov
in
jecxz
scas
rolb
add
mov
dec
aaa
or
bound
clc
lds
testb
adc
test
cs
loopne
mov
mov
icebp
mov
lahf
mov
cmp
testb
sbb
mov
pushf
sbb
cwtl
in
sub
rcll
cmpsl
sti
test
inc
shll
cmp
mov
std
aas
dec
outsl
aad
xchg
and
jnp
stos
sbb
push
fsubs
fs
ret
out
push
outsl
dec
and
lahf
cmp
imul
fisttpl
mov
mov
fadds
sahf
xchg
pop
fstpt
inc
lret
add
add
fstps
jg
and
out
jnp
push
push
test
dec
jbe
mov
push
loope
pop
mov
popf
ljmp
ds
inc
iret
scas
jp
hlt
and
jmp
cli
jmp
pop
lret
add
xchg
fwait
aad
sbb
mov
push
negb
xchg
push
shlb
dec
mov
or
sbb
scas
xchg
je
leave
repz
sbb
sti
xchg
xor
dec
pop
sub
jmp
dec
outsl
test
and
aaa
out
pusha
pop
popa
in
movsl
sub
push
jle
mov
pop
adc
fchs
popf
jg
lock
aas
mov
mov
jle
sbb
popf
push
xlat
rcl
das
dec
add
lods
xchg
movsb
or
cmp
repz
cmp
push
mov
push
scas
xchg
cmpsl
out
jbe
lds
int3
add
cmpsl
insl
sbb
xor
inc
push
mov
sbb
scas
mov
sub
fisttpll
xor
jnp
in
mov
lods
popa
insb
and
sbb
mov
adc
loope
or
cwtl
daa
dec
stos
out
mov
sbb
dec
shlb
sub
adc
shlb
rcrb
inc
ljmp
loop
or
das
or
mov
fisttpl
ja
cmp
pop
movsb
stos
xchg
aaa
adc
lods
and
call
dec
adc
dec
mov
adc
pop
jbe
xor
lea
xor
add
je
aad
pop
cmp
inc
and
stc
rorb
mov
andb
push
pop
cltd
fsubrl
pop
and
cwtl
pop
repnz
sbb
int3
je
push
mov
sub
sub
int
jns
call
add
ljmp
cs
pop
into
in
sti
lret
mov
cmp
pop
andl
pop
sbb
adc
jle
fs
cmp
dec
jecxz
stc
pop
xchg
pushf
repnz
jbe
nop
leave
fistl
roll
lcall
nop
add
in
repnz
add
xchg
ljmp
popa
add
test
add
fidivs
or
xchg
xor
cli
rcr
add
cld
rclb
sub
rcrb
fdivp
test
inc
or
mov
fs
adc
out
add
mov
jne
or
adc
in
mov
xor
xchg
add
adc
stc
repz
jbe
jns
ss
cwtl
or
cmp
test
sub
cld
sahf
sbb
das
icebp
out
cmp
rcl
stos
test
cmpsl
fdivl
out
xchg
stos
nop
inc
inc
or
xchg
jne
push
mov
pusha
push
push
xchg
in
cltd
enter
mov
mov
rolb
fs
push
hlt
out
mov
xchg
inc
mov
addr16
pop
xchg
xor
xor
imulb
fwait
pop
mov
push
sbb
ljmp
jns
or
jae
faddl
das
or
and
mov
mov
decl
or
or
lds
insl
xor
mov
into
mov
inc
arpl
xor
lahf
shrl
jecxz
imul
ds
into
xor
sub
and
jg
pusha
lods
repz
jecxz
cli
ret
in
std
cwtl
ret
mov
insb
sub
popf
sub
or
cli
negb
xor
lods
sbb
jmp
xchg
ss
or
xor
aaa
arpl
add
or
aaa
dec
lret
mov
sbb
inc
cmc
and
lds
mov
scas
jbe
repz
popa
int
sub
out
bnd
enter
adc
subl
aaa
sub
mov
and
mov
mov
std
call
mov
sbb
pop
fbld
jmp
dec
rcl
or
sahf
dec
outsl
loopne
mov
insb
sub
leave
int
pushf
dec
jp
pop
pop
xchg
arpl
or
mov
sbb
mov
jbe
or
stc
mov
dec
mov
and
outsb
inc
fsubrp
mov
ds
mov
idivb
lds
cmc
jnp
or
icebp
mov
movsb
out
ss
jnp
sbb
and
xchg
ficompl
popl
gs
dec
xchg
imul
outsl
iret
mov
fimuls
xchg
arpl
popf
xchg
shrl
sbb
iret
push
fldt
fwait
ds
int3
add
jp
or
add
sub
sahf
jl
xorl
aas
scas
movsl
xor
loop
ds
das
cli
pop
das
sub
xor
inc
lret
jo
aad
push
fsts
or
repnz
jl
ljmp
sbb
push
pop
int
cmpsl
and
or
mov
fdivrp
loope
xor
push
push
adc
hlt
sti
stos
cmp
or
cmp
xor
lock
fstl
sahf
cltd
scas
scas
scas
das
aaa
enter
mov
pop
in
sub
mov
xor
mov
aaa
bndstx
outsb
or
adc
pop
pop
mov
adc
dec
clc
pop
jg
gs
stos
loope
mov
mov
or
pop
leave
adc
outsl
push
mov
lret
ret
sub
testl
sbb
icebp
add
aaa
ja
cwtl
sub
loope
aas
scas
dec
shll
pop
sbb
jl
cltd
and
mov
jcxz
subb
or
add
pop
cmp
xchg
in
mov
test
sbb
fidivrl
lea
outsl
sbb
mov
cmc
xchg
jb
shl
xchg
cmpsl
xor
call
xchg
lods
in
jb
lds
jle
imulb
lods
int
in
out
adc
xchg
push
pop
or
jo
xor
out
popf
mov
imull
xlat
fucomp
lcall
add
cmpsl
sbb
jo
mov
aad
or
pop
test
pop
nop
loopne
pop
xlat
pop
push
sub
push
pop
fld
leave
fs
and
jns
and
fdivp
cmp
jo
dec
outsb
ficomps
push
adc
dec
jmp
mov
inc
fadds
inc
pop
add
in
pop
movsb
sti
in
stos
daa
mov
adc
cli
data16
pop
pop
std
adc
xor
shrl
je
fcoml
pop
incb
jbe
rcrb
mov
mov
sbb
lods
lahf
mov
mov
cmp
stos
das
adc
cwtl
jae
sbb
call
stc
cld
insb
inc
es
jnp
push
mov
hlt
in
fwait
pusha
mov
mov
mov
cwtl
or
sbbb
fbld
jo
xchg
out
loope
jb
lret
adc
es
pop
iret
call
je
mov
ss
xchg
or
jge
sahf
hlt
add
sbb
inc
test
jo
xor
notl
pop
jae
jno
aas
lods
add
adc
cmp
xor
vfnmsub132pd
sub
or
sti
fs
idivl
sub
iret
xchg
mov
icebp
dec
xchg
cltd
push
int3
mov
hlt
add
int
mov
mov
aam
stos
loop
mov
sbb
dec
mov
or
and
aam
lret
les
into
mov
lahf
adcl
int3
and
and
inc
cmp
data16
loop
dec
xchg
jo
mov
lret
jle
cmpsb
idiv
mov
pop
mov
sti
popa
inc
aaa
fldenv
add
cmp
or
les
in
push
lods
ja
inc
xor
sub
cmpsl
lret
lock
movsl
jno
lods
mov
iret
cmp
pop
pop
mov
xchg
jp
leave
sbb
mov
loope
test
push
pop
hlt
inc
clc
jecxz
aad
mov
imul
inc
scas
add
and
in
adc
push
push
jns
je
popw
xchg
mov
les
dec
xor
repnz
adc
popf
bound
dec
or
das
xor
loop
mov
call
mov
xchg
mov
cmp
mov
hlt
mov
xor
mov
cltd
test
lods
popa
ljmp
cmpsl
faddl
jmp
sahf
jg
mov
testl
sub
dec
dec
sbb
in
dec
jl
loopne
fcmovbe
into
lea
jecxz
cltd
jns
scas
jbe
sub
xchg
add
mov
sub
jo
push
gs
pop
dec
add
fisubl
and
loopne
inc
xchg
and
mull
aaa
int3
fcoms
fistpll
cmp
cmpsb
or
lods
adc
lcall
cmp
push
push
lds
mov
mov
pop
and
jnp
stos
outsb
data16
pushw
stos
jmp
fisttpl
aam
pop
dec
outsb
mov
xor
pop
or
inc
repnz
test
filds
mov
lock
pop
enter
sub
bound
dec
clc
xchg
cmp
push
xor
fldenv
sbb
inc
vmovupd
int3
in
lock
mov
sbb
or
je
sarb
add
das
add
scas
xor
in
add
pop
mov
test
dec
test
ja
xchg
sahf
inc
add
mov
cmc
push
mov
push
push
mov
add
jmp
jo
std
mov
inc
adc
jle
inc
push
xchg
inc
hlt
add
lret
mov
adcb
into
scas
fcoms
xor
xor
xchg
ret
inc
call
mov
inc
jl
jle
call
movups
scas
aaa
xchg
rorb
mov
insl
mov
pop
sbb
das
mov
add
mov
jbe
cmpsl
pop
ljmp
mov
cmc
pop
fadd
cmc
lcall
jo
cmp
push
js
cwtl
xor
in
cltd
dec
inc
xchg
jp
pop
and
aaa
popa
mov
out
xor
sbb
push
js
subb
add
pop
add
push
mov
push
scas
lea
jbe
push
adc
repz
add
mov
shlb
sub
test
mov
push
mov
lods
jbe
adc
mov
xchg
aad
test
aas
popa
inc
aad
outsl
jns
xchg
mov
mov
scas
sarl
mov
orb
add
xor
pop
enter
hlt
clc
push
imul
out
popf
sub
das
int3
inc
loope
jne
bound
aaa
in
push
rorb
cltd
mov
jg
mov
icebp
dec
pop
xor
pop
movsl
jmp
pop
icebp
inc
mov
jo
scas
enter
jp
jp
cmp
mov
insl
cmp
fimuls
outsl
mov
xor
lods
and
lods
mov
pop
lcall
dec
in
cwtl
mov
adc
or
mov
jno
lret
mov
lods
test
sub
adc
jecxz
imul
adc
mov
and
xchg
lock
shrb
outsl
hlt
mov
fwait
repnz
shll
jg
pop
aam
add
and
fildl
cmp
xchg
mov
sub
mov
sub
jle
test
adc
adc
jmp
lea
xchg
arpl
xchg
arpl
and
mov
fmul
filds
enter
loopne
sbb
cmpsb
fucomip
jb
ljmp
fisttpl
lret
adc
xchg
jns
pop
dec
add
stos
jmp
jecxz
hlt
fwait
icebp
jno
sub
test
mov
rcl
adc
mov
fldenv
push
sbb
cmp
sets
sub
and
fldenv
mov
je
enter
dec
jb
lock
fmuls
call
or
sub
aas
les
or
in
sbb
xchg
inc
mov
jle
sub
int3
jl
add
xor
bound
pop
push
inc
dec
icebp
or
rolb
push
and
and
cmpsl
xchg
jl
mov
pop
sub
cmp
sbb
daa
sbb
cs
addr16
mov
or
push
sbb
fdivrs
cmp
pop
xor
mov
mov
add
sub
shlb
out
out
pusha
jge
popa
mov
jne
outsb
cltd
inc
push
sub
hlt
mov
mov
pop
and
orl
or
xchg
xor
push
divl
scas
movsl
fidivs
xchg
xchg
push
pop
data16
push
or
loopne
adc
out
dec
xor
test
lock
xor
inc
aas
mov
das
jne
xor
sti
cmp
dec
push
sar
call
pop
sub
add
lcall
test
or
jg
cltd
mov
sub
lret
stos
push
fs
dec
pop
sti
and
dec
je
sarb
popf
cmp
pop
cmp
or
or
push
mov
movsl
arpl
pushf
mov
adc
jo
pop
xorb
sub
cmc
mov
stos
jl
es
insb
jmp
stc
adcl
testl
ficomps
ret
mov
add
gs
mov
jmp
pop
add
dec
js
cmp
push
repz
dec
testl
ret
lds
sbb
xor
les
xor
cmp
daa
pushl
sarl
sbb
movsb
leave
sbb
hlt
mov
mov
jns
push
push
and
xchg
inc
xchg
scas
inc
xor
push
add
lret
sub
pop
sub
decl
sub
mov
add
xchg
lahf
sub
call
adc
ljmp
ja
mov
dec
push
push
adc
in
push
iret
insl
mov
adc
ja
cs
push
ljmp
inc
ficoms
imul
in
lods
mov
int3
jp
insl
jmp
loop
icebp
test
mov
xchg
or
icebp
push
mov
inc
jg
sahf
add
pop
pusha
iret
jnp
add
jecxz
sub
sub
xor
rcrb
jmp
pusha
scas
dec
in
sbb
or
std
inc
stos
repz
pop
ja
mov
cmc
mov
sub
mov
pop
jg
test
mov
iret
adc
cld
fisubl
cli
inc
stc
xlat
fidivrl
fs
adc
out
add
out
mov
imul
loopne
mov
imul
adc
add
pop
mov
pusha
sbb
adc
in
xchg
aam
push
adc
mov
pop
jecxz
mov
shll
jl
cmp
andl
out
cwtl
pshufw
in
xor
fstps
outsl
sub
ljmp
cmp
out
or
stc
pop
mov
push
daa
fs
lret
cmpsb
push
iret
es
loopne
xchg
jge
mov
shr
loop
xor
nop
ud1
icebp
xchg
mov
icebp
and
arpl
mull
into
mov
jo
aad
subb
xor
ret
sbb
adc
inc
mov
push
dec
xor
xor
imul
jb
daa
or
rolb
dec
mov
mov
inc
in
cld
cmp
xor
pop
leave
pushf
leave
out
cmp
test
mov
or
mov
je
sbb
mov
xor
push
push
gs
shlb
outsb
and
scas
sub
adc
sbb
divl
mov
sarl
and
movsb
int3
loopne
arpl
scas
lea
pop
mov
push
mov
cs
pop
lret
add
call
pop
pusha
dec
gs
or
mov
pop
lret
inc
sub
mov
daa
jns
rcr
adc
lods
lret
cmp
inc
ja
ds
scas
push
inc
ja
mov
movsl
push
rcrb
call
test
cmpsl
mov
arpl
push
fildll
stos
cmp
hlt
add
pop
jne
cmpsb
shlb
pop
cmp
adc
inc
pop
dec
in
ds
mov
and
lret
fisubs
sub
imul
adcb
or
lds
push
xor
pushf
jmp
out
notb
scas
mov
ss
push
lret
ss
fistpll
ljmp
mov
push
push
sub
xchg
cmp
addb
xchg
loope
lcall
mov
in
popf
cpuid
movsl
nop
in
mov
lods
loope
add
sbb
repnz
lods
push
xor
pop
btr
sub
mov
roll
mov
sub
sub
or
sahf
adc
sbbb
add
scas
dec
pop
movsb
add
iret
mov
jmp
pusha
in
mov
fs
xchg
pop
xorl
push
fcoms
and
xor
shlb
mov
inc
pop
mov
test
xchg
xorl
stos
sub
mov
cltd
mov
mov
cwtl
int3
inc
and
shlb
cmp
aas
xor
lcall
popf
dec
ds
and
sub
jne
push
add
aas
mov
or
cmp
or
fsts
mov
imul
push
push
iret
xchg
and
sub
sbb
or
adc
gs
icebp
sbb
mov
mov
sbb
dec
mov
cld
and
dec
push
shr
mov
jno
insb
xor
ja
sub
jbe
mov
cmp
or
push
pushf
sub
cmp
adc
fldenv
out
gs
pop
repz
jge
sbb
xor
out
outsl
sahf
addl
cltd
movsb
mov
push
mov
add
push
je
sbb
fcoml
or
mov
or
ja
push
mov
push
cmp
and
orb
cmc
push
push
adc
in
das
out
and
push
dec
xor
lcall
jnp
loop
outsl
loop
aad
js
sbb
into
jae
repz
push
pop
and
mov
push
or
pop
or
or
pop
mov
data16
cmc
aas
add
cwtl
adc
repnz
aas
or
mov
test
stos
add
js
jl
add
nop
mov
cmp
mov
push
ret
jo
or
xor
ret
out
sbb
mov
cmp
lds
xchg
lock
clc
mov
cmp
xchg
out
sub
clc
push
sbb
mov
imul
mov
idivb
adc
inc
mov
dec
lods
dec
push
mov
pop
lds
mov
icebp
mov
sub
pop
or
pop
and
adcb
push
std
mov
ds
stos
dec
pop
push
outsl
rorl
fnstenv
dec
inc
enter
into
nop
imul
cmc
fstpt
push
mov
icebp
pop
xor
pop
ljmp
loopne
scas
shlb
sub
mov
push
cli
stos
or
enter
pop
jns
jbe
adc
lea
orb
jae
test
push
dec
imul
mov
imul
rcrl
mov
pop
mov
ljmp
out
nop
push
mov
mov
mov
out
mov
jne
sti
xor
sbb
clc
xchg
push
int3
mov
fs
cwtl
or
pop
jo
mov
lods
dec
std
fildl
xor
dec
xlat
fistl
nop
sub
xor
dec
xchg
xchg
int
in
jg
sti
sub
mov
mov
test
dec
push
sub
add
cmp
enter
jae
lret
mov
mov
cmp
ret
clc
jecxz
sarb
idivl
fcoml
xor
mov
and
aaa
jg
push
pop
ret
in
mov
pop
int3
outsb
outsl
adc
jae
or
loope
lods
push
xor
mov
jbe
pusha
aad
into
arpl
ljmp
sbb
lea
push
iret
loop
std
mov
popf
mov
mov
inc
cmc
push
pop
add
xchg
jo
negl
shl
pop
adc
sbb
mov
pop
fs
in
jne
and
mov
data16
xchg
aaa
inc
fmul
icebp
arpl
stos
sbb
and
sub
inc
scas
pop
rolb
xchg
add
dec
mov
jl
inc
xchg
inc
jmp
in
jno
cmp
dec
shr
push
mov
cmp
divl
pop
cmc
jne
out
in
dec
jmp
andb
jbe
inc
push
inc
outsl
movsb
das
notl
pop
push
lea
dec
dec
pop
mov
xchg
push
dec
in
mov
xchg
xor
inc
dec
sub
lock
arpl
lret
shrl
out
cmpsl
mov
scas
dec
gs
movsl
ret
add
rcrl
push
fsubl
aas
insb
cmpsl
mov
outsb
dec
mov
call
aaa
ret
gs
cli
std
xor
or
add
repnz
jbe
push
xchg
test
mov
inc
push
ret
jg
imul
dec
arpl
mov
jbe
cli
lcall
mov
pop
and
mov
mov
jmp
in
xor
aas
jbe
push
cld
xor
add
pop
inc
jnp
mov
mov
fsubrl
stc
out
repnz
cli
xchg
cmp
dec
les
ror
fsub
loope
push
test
xchg
jno
sub
fdiv
call
inc
sub
dec
lret
pop
lahf
insl
sbb
jp
jp
je
sbb
ljmp
subb
imul
es
out
adc
ret
pop
push
inc
jg
pop
popf
loope
mov
adc
call
xchg
push
sub
xchg
add
dec
xchg
sbb
xor
cmp
pop
jecxz
jp
and
jg
adc
pop
stos
je
lcall
or
in
pop
arpl
jbe
jbe
add
jl
or
push
push
shll
sub
movsl
mov
int3
xchg
mov
push
sbb
mov
inc
push
cmp
or
test
sbb
xor
out
mov
imulb
push
movsb
ljmp
mov
enter
test
mov
xor
xor
sahf
dec
lcall
mov
xor
mov
std
in
mov
inc
sbb
sbb
jne
out
cltd
les
aad
ret
out
mov
jbe
inc
add
jns
mov
cld
cli
xor
mov
mov
leave
movsl
fwait
xor
pusha
aas
sbb
lea
push
das
jle
hlt
cs
add
pop
pop
popf
and
std
mov
sub
jnp
or
movsb
imul
inc
adc
lds
xchg
cmc
add
xlat
es
mov
mov
fbld
cmpsl
sbb
icebp
mov
mov
jne
jno
mov
xor
and
lods
mov
int
add
mov
dec
dec
ljmp
mov
xchg
ljmp
cmpsb
lods
inc
and
int
mov
ret
cmpsb
int
in
pushf
fistl
cmp
stos
pop
jb
cmp
int
ds
cmp
adc
out
inc
shl
lret
ja
add
adc
loop
fs
ss
test
xchg
cmp
add
or
les
jns
dec
cwtl
cmpsl
out
test
shll
push
mov
das
mov
cmp
sbb
stos
mov
jmp
pop
sarl
mov
sub
fisubrs
jmp
fmuls
jmp
xchg
subl
push
rcr
mov
mov
fwait
out
pop
or
stc
call
mov
dec
or
lcall
inc
hlt
cmpsb
fisttpl
jl
dec
sub
adc
fnstenv
mov
push
push
mov
outsb
aad
int3
jg
push
ret
into
xchg
xor
xor
inc
popa
push
scas
sub
dec
xchg
push
out
pop
sub
ljmp
test
test
in
xchg
mov
cmp
pop
mov
loop
cld
push
push
and
repz
add
sti
push
data16
xchg
aam
cli
in
aas
fs
adc
pushf
mov
cmc
inc
shlb
jo
outsb
mov
sub
xchg
popf
lods
add
dec
lret
xor
stos
xchg
pusha
dec
jae
sbb
in
xchg
xchg
push
out
std
ret
inc
xor
sub
lods
imul
out
cs
adc
push
cli
xchg
xor
jnp
cmp
or
lret
mov
sahf
adc
adc
test
xchg
and
insl
mov
or
sub
xor
and
sub
lds
dec
movsb
dec
insl
pop
pop
js
push
idivl
movsb
pop
mov
and
mov
or
dec
and
outsb
fstpt
push
and
fmul
add
sbb
jge
imul
cmc
sti
xchg
jo
ret
mov
inc
mov
loope
jmp
add
mov
cmp
inc
sti
adc
js
jecxz
out
sbb
xchg
xor
mov
fiadds
out
cmp
or
scas
or
cltd
cmp
lock
xbegin
and
add
add
push
cmc
test
gs
cmp
xor
and
movsl
fst
inc
mov
push
daa
sub
lods
out
xchg
add
repz
cmp
xchg
and
xlat
jns
cmp
fiadds
dec
mov
cmpsb
xor
jp
loopne
or
dec
les
ljmp
rorl
push
sbb
arpl
cltd
outsb
adc
mov
dec
xchg
and
push
push
je
daa
popl
sahf
jg
add
pop
popf
add
push
add
aaa
out
lcall
pop
icebp
out
and
sbb
or
inc
dec
test
pop
xchg
dec
leave
mov
jp
out
out
add
sbb
sbb
pop
test
scas
stos
in
add
jmp
je
mov
lcall
mov
push
dec
push
int
dec
icebp
fwait
and
sub
cli
mov
cmp
hlt
jns
mov
mov
xor
cmpsb
push
xor
xchg
pop
dec
and
cmc
jecxz
xorl
popf
xorb
cmpsl
je
gs
cmpsb
pop
lcall
dec
movsb
jae
test
or
pop
mov
ret
pop
inc
jg
add
out
adc
push
dec
sbb
mov
inc
jl
adc
pop
or
mov
rclb
loope
add
cmpsl
in
xor
adc
das
in
jns
fwait
xchg
adcb
test
bswap
jge
mov
or
insl
sub
mov
mov
scas
in
mov
call
int
dec
hlt
enter
jno
inc
jo
leave
mov
les
and
push
cmp
pop
fdivrl
int3
jp
pusha
je
std
mov
gs
mov
and
sbb
adcb
pop
cmpsb
add
mov
sbb
mov
in
jp
cmpl
dec
jbe
leave
js
stc
pop
xchg
mov
push
mov
cli
movsl
cmc
add
rcll
xchg
push
cs
aaa
adc
xchg
push
fwait
push
inc
cmpsb
out
callw
fistpl
les
xor
repnz
or
and
fs
les
lret
jne
fmul
adc
push
sub
dec
xchg
jg
xchg
cmc
int3
leave
mov
jmp
pusha
call
push
sbb
push
int
xchg
and
arpl
loope
or
out
loop
mov
adc
out
dec
pop
cmp
jmp
dec
shlb
insb
xchg
cwtl
outsl
out
mov
mov
stos
outsl
adc
loopne,pn
sbb
push
gs
push
call
rclb
roll
sti
sub
popa
mov
xor
filds
jne
subl
cmp
dec
jmp
jo
popf
fimull
imul
xchg
sub
adc
fs
int
adc
inc
loopne
add
movsb
push
ror
outsb
adc
dec
inc
jp
dec
pusha
lahf
lods
loopne
ljmp
push
out
jp
xor
pop
adc
inc
xor
sbbb
mov
iret
sbb
mov
xchg
add
lcall
aaa
inc
push
inc
negb
iret
pop
dec
pop
call
dec
lcall
dec
movsl
hlt
adc
int
in
lahf
ret
ja
in
in
add
mov
jbe
cmp
sbb
add
jb
aas
mov
sbb
add
ds
cmpb
loop
sti
mov
cwtl
pop
cmp
dec
das
add
lods
ffreep
jle
xor
divb
inc
rcll
adc
sbb
in
mov
nop
mov
lods
adc
mov
xchg
jnp
mov
imul
cwtl
push
aas
jo
fdivrs
pushf
mov
bound
dec
jp
ret
push
sbb
jae
rclb
arpl
test
xchg
pushl
mov
inc
cld
mov
iret
dec
aaa
and
xor
push
loop
in
imull
sahf
repnz
fimuls
jns
cmp
movsb
lret
inc
jae
dec
jge
rcll
loopne
mov
mov
repnz
jge
inc
repnz
xor
jae
je
arpl
lock
jb
imul
push
leave
cmp
data16
mov
add
enter
loopne
cmp
push
mov
dec
les
daa
insb
mov
mov
repnz
mov
dec
push
cmp
arpl
pop
iret
xchg
adcb
mov
loope
pushf
pop
mov
pop
jmp
insb
sub
xabort
sub
divb
addr16
out
pushf
fs
sub
outsb
hlt
dec
cmp
aad
ret
sub
push
mov
xchg
lods
dec
mov
push
inc
pop
dec
sti
mov
cwtl
mov
mov
mov
lret
loope
dec
test
fidivrl
mov
aam
pushf
stos
fidivl
mov
mov
lds
jp
aas
popa
and
sub
test
push
stc
out
shrb
push
xchg
aaa
imul
enter
das
adcb
cmp
aad
add
jae
inc
je
jne
out
sub
outsl
or
or
out
adc
nop
sar
sub
push
mov
dec
push
es
cld
and
pcmpeqb
cltd
shlb
sub
imul
rcrl
mov
push
xchg
mov
ret
popa
aam
mulb
imul
outsb
add
rorb
push
cmpl
mov
sub
push
mov
mov
or
dec
sub
adc
lcall
loopne
cld
les
dec
dec
mov
in
sahf
movsl
sti
cmp
lods
insl
pop
in
xchg
rorl
pusha
loopne
adcl
sarb
mov
je
pop
push
aad
dec
mov
cmc
push
mov
insl
pop
add
mov
test
and
jae
add
sbb
mov
icebp
loope
dec
pop
test
pop
lcall
jbe
sub
inc
aad
adc
mov
cltd
les
bnd
and
dec
cmp
cmp
outsl
pop
adc
sbb
xchg
dec
jne
dec
mov
and
mov
icebp
shrl
rorb
movsl
stos
cmpsl
and
sub
sub
xor
sbbl
mov
mov
mov
movsb
cmp
mov
cmpsl
aad
enter
xor
idivl
sub
mov
out
xchg
pop
mov
sti
dec
cmp
mov
rclb
pop
stos
and
sub
adc
fidivrs
std
sub
mov
mov
mov
xor
xchg
fimull
iret
or
sbb
jmp
ret
xchg
inc
sti
xchg
ret
add
dec
int3
leave
add
popf
pop
sbb
loop
jo
test
dec
add
iret
add
das
adc
or
cmp
popf
mov
cmp
lcall
iret
cmc
jp
nop
mov
dec
fcompl
pop
inc
mov
adc
popf
fs
std
xor
push
xor
stos
push
push
lret
xchg
out
dec
pop
cmp
ret
mov
sub
xchg
sbbb
inc
xchg
and
lahf
mov
popa
lods
lahf
adc
jp
inc
push
mov
movsb
or
xor
dec
push
movsb
xchg
sub
push
leave
push
adc
push
pushf
pusha
scas
or
cwtl
and
cmpsl
xchg
sbb
das
jae
lock
xor
clc
out
adc
cld
cmp
dec
mov
push
mov
lea
insb
xchg
lea
out
mov
mov
xchg
ret
cltd
dec
push
mov
pop
cmpsb
imulb
incb
pop
fistpl
pop
lds
inc
test
jge
jecxz,pt
lcall
xor
out
call
out
fldl
xchg
add
inc
out
push
rcrb
push
mov
lea
mov
cmp
cmc
gs
lock
and
fidivl
mov
bound
std
stos
pop
mov
mov
out
bound
cmp
daa
leave
add
or
cmp
cli
fwait
mov
mov
inc
lods
bnd
inc
mov
cmp
ret
add
adc
jp
and
xor
mov
sbb
mov
ja
das
addr16
push
cmpl
sbb
mov
inc
sub
insl
test
popf
dec
adc
sbb
call
xor
push
mov
mov
inc
daa
mov
push
scas
pop
inc
hlt
shl
jo
dec
mov
xchg
mov
mov
inc
pop
dec
jle
cwtl
xor
mov
lods
add
lods
gs
adc
and
adc
sti
and
pop
adcl
popa
pop
inc
out
aas
push
sti
je
jl
push
sub
xorl
shlb
lahf
ss
jg
lods
sub
aas
ret
and
insb
inc
bound
xchg
stos
adc
inc
ljmp
inc
sub
sbbl
cmp
inc
jmp
dec
xchg
inc
mov
inc
repnz
in
cwtl
inc
jno
jg
pop
dec
or
inc
scas
insl
mov
insb
leave
mov
mov
rcl
pop
push
add
lock
xlat
ja
dec
and
cs
sbb
pop
mov
scas
jno
adc
xor
xchg
shlb
sbb
nop
mov
pop
mov
xor
daa
cmpb
data16
pop
mov
adc
sahf
mov
rcrl
mov
test
leave
std
sub
hlt
mov
shl
test
cmp
dec
mov
adcb
orb
cs
jmp
std
je
insl
and
lods
dec
subl
or
mov
das
out
call
sbbl
sub
mov
dec
cmp
pop
out
test
push
cmp
xchg
icebp
mov
dec
aad
test
sbb
out
sub
jge
jmp
gs
add
dec
sbb
mov
dec
xlat
sbb
dec
fcoml
and
push
cmp
or
popf
pushl
mov
push
push
lds
xor
add
and
rcl
lock
popf
outsl
pop
inc
sub
loop
fwait
adc
fsubrs
loope
push
or
popa
movsl
lock
sysenter
xchg
cltd
fcmovb
add
and
test
cld
mov
add
rcrl
fsubrp
push
mov
sub
cmpsl
pop
xchg
adc
sti
das
sub
mov
sub
push
fwait
inc
popf
mov
push
dec
push
movsb
fcmovnb
cmp
adc
cmpl
jle
out
imul
jb
mov
out
or
addb
mov
ret
outsl
scas
sti
sub
rcrb
sbb
cs
cmpsb
inc
negb
push
push
push
adc
sbb
add
insl
cmc
jne
jnp
in
test
cmp
dec
and
mov
aas
loopne
or
pop
xlat
push
xlat
pop
jp
jecxz
in
test
fucom
sbb
movsb
hlt
aad
push
pusha
insl
test
xlat
mov
xchg
pop
hlt
xorb
cmp
les
icebp
jg
outsl
jmp
icebp
mov
test
popa
inc
aam
inc
xor
leave
push
popl
addr16
clc
dec
sahf
imul
xor
mov
sub
subb
xchg
xor
or
movsl
pop
std
adc
adc
sbb
cld
cmpsb
es
and
rol
mov
pusha
aas
lea
cltd
lock
mov
mov
mov
cmp
push
lock
js
cltd
and
stos
daa
sbb
pop
repnz
addl
xor
enter
aas
xchg
adc
sub
jecxz
sarb
xlat
mov
scas
mov
cs
inc
xchg
mov
xchg
pop
std
pusha
adc
push
adc
cmp
out
test
subb
xchg
test
mov
xor
into
push
sub
or
daa
jg
xor
repz
cmpsl
clc
xchg
and
or
dec
insl
ficomps
cmp
mov
push
inc
inc
notl
xor
push
push
cltd
mov
sbb
and
adc
daa
jbe
push
int
outsl
xchg
cwtl
repz
jne
test
push
xchg
sahf
shrb
jmp
adc
stc
scas
add
call
sub
movsl
pop
jne
xchg
in
movsl
imul
sub
mov
sub
pop
jae
push
lcall
lea
jbe
mov
out
or
dec
adc
stos
pop
sub
xor
cmc
mov
scas
mull
push
int3
out
push
fs
jnp
mov
repz
daa
xor
and
test
pop
outsl
outsl
into
mov
lcall
dec
fisttps
or
fs
aas
subb
sti
mov
xor
dec
imul
je
cmc
mov
or
notb
ds
ror
mov
cmpb
lea
mov
push
cmp
add
sub
ss
sbb
insb
push
sub
mov
pop
sahf
push
dec
mov
std
xchg
es
je
xchg
mov
or
test
fistpll
fstps
aad
pop
cmc
mov
out
push
loopne
in
loope
or
or
pusha
iret
addb
lock
int
pop
adc
dec
cmp
xor
rcrl
shrb
outsl
int3
popa
xchg
ja
push
fwait
cli
or
ret
pop
aaa
push
aas
cmp
add
dec
push
cmp
inc
jl
test
push
fistpl
xchg
dec
mov
xor
outsl
mull
lods
mov
mov
in
push
dec
popf
dec
push
xchg
arpl
xchg
aad
aaa
lahf
xlat
dec
js
xchg
loopne
popa
fbld
lods
xlat
pop
cmp
repz
and
sub
inc
stc
ds
mov
jl
or
sbb
mov
mov
testl
sar
subb
sbb
push
cmp
xor
lods
scas
xchg
sub
inc
cs
xchg
lcall
aas
bound
scas
adc
sbb
daa
lea
arpl
clc
add
test
popa
call
inc
cmc
es
dec
pop
jmp
rorl
sbb
daa
inc
imul
sti
pop
mov
pop
dec
lcall
push
in
lret
int
mov
loope
mov
pop
dec
inc
scas
fstpl
mov
arpl
jge
xlat
int
add
decl
dec
and
movsb
enter
xchg
push
xor
mov
adc
jge
push
testl
mov
cli
pop
ret
shlb
icebp
lcall
enter
pop
test
pop
dec
sbb
ret
and
or
out
inc
clc
mov
pop
jo
outsl
int
rcrl
sarb
mov
mov
shlb
pushf
mov
lcall
out
gs
ljmp
aad
cmc
fnsave
inc
dec
sbb
hlt
int3
imul
bound
std
fmuls
jecxz
lea
pop
lahf
cmp
test
or
mov
xlat
scas
rorb
dec
adc
mov
mov
inc
xor
icebp
pop
stc
adc
mov
daa
push
push
xchg
jecxz
sbb
xchg
arpl
push
mov
inc
icebp
adc
aad
xchg
out
mov
push
adc
pop
lods
sub
out
mov
cltd
jbe
dec
pop
inc
sbb
rorb
mov
lret
dec
scas
addr16
sub
push
push
mov
jmp
xchg
xchg
jae
cmpsl
ss
rclb
jbe
sub
push
cltd
bound
test
fwait
pushf
popf
in
and
mov
sahf
sbb
enter
or
mov
xchg
repz
bound
xor
dec
iret
inc
dec
mov
lods
repnz
decb
sub
enter
loopne
shlb
movsb
mov
dec
cmp
cld
mov
and
mov
dec
clc
xchg
out
lret
or
lahf
stc
fldt
inc
shl
out
push
pop
daa
push
jge
adc
inc
in
xor
and
shl
sahf
xchg
xlat
rorb
in
ret
fdivrl
add
pop
mov
pop
and
pop
loop
add
ret
inc
pop
ljmp
test
xchg
int3
aam
sahf
xor
lahf
push
ror
mov
fldt
sub
aam
push
sub
add
loopne
dec
dec
in
test
rorl
out
and
add
bound
and
movsb
icebp
or
rorl
jb
cld
and
repz
fdivr
lcall
sub
or
dec
ljmp
shr
mov
sbb
lret
push
push
sub
aad
test
xchg
les
mov
das
mov
dec
cmp
sub
test
xor
sbb
adc
stos
jle
xor
dec
xor
sbb
jb
pop
ja
mov
xchg
cmc
dec
or
test
shll
mov
cmp
xchg
fsubl
rcl
jmp
dec
sahf
jbe
mov
je
mov
add
push
jg
adc
pop
pop
aam
inc
sbb
cld
cmp
mov
cli
mov
scas
mov
lea
shrl
popf
sub
sbb
ja
shlb
adc
inc
push
adc
insb
movsl
dec
jne
cmpsb
mov
cmp
adc
push
addl
out
xor
mov
test
xlat
mov
imul
inc
push
xchg
outsb
scas
cmp
push
or
adc
pop
into
call
mov
add
mov
xor
arpl
push
inc
cld
rorb
xor
dec
and
adc
fisttpl
lock
adc
mov
push
popf
repz
je
mov
lds
aaa
mov
dec
call
add
mov
mov
int
sbb
jle
dec
out
lock
rcr
mov
lret
cltd
cmpb
push
mov
jge
cmp
inc
out
and
push
scas
or
inc
cmp
jmp
jle
jle
mov
test
dec
jecxz
jnp
out
aad
xlat
hlt
lcall
fbstp
and
mov
and
sub
pop
jb
pop
pop
sbb
mov
repz
mov
arpl
or
ficoml
adc
insb
ret
daa
les
xlat
clc
mov
in
or
bound
leave
cmpsb
mov
inc
inc
push
push
cmc
in
out
lret
mov
push
iret
mov
and
or
push
ljmp
lret
leave
cmp
cmp
mov
out
mov
stc
ret
mov
jnp
iret
stos
xchg
add
retw
adc
jmp
jecxz
jge
dec
dec
adc
push
notl
pop
out
mov
lret
in
hlt
xchg
inc
in
sbb
or
mov
cld
adc
pop
shrl
mov
out
pop
stc
mov
add
sbb
adc
adc
dec
pop
inc
jle
dec
int3
pop
outsl
aaa
xor
xlat
adc
rcrb
fnstsw
and
adc
jg
push
nop
mov
pop
enter
sbb
push
pop
sbb
inc
add
xchg
or
lret
sbbb
pop
and
test
jmp
iret
mov
clc
fcmovnb
add
mov
enter
mov
sub
les
xchg
inc
sbb
call
and
in
movsl
idivl
je
push
dec
aas
ja
cmp
bound
add
mov
je
fsubr
outsb
mov
inc
pop
aad
jg
test
and
inc
lahf
dec
stc
add
fucom
push
mov
sbb
fcomp
mov
and
adc
and
cmp
mov
gs
mov
gs
sbb
cmp
adc
mov
xor
cmpsb
jb
sarb
fcmovnu
repz
fucom
jecxz
xlat
jnp
lock
push
loop
sarl
xlat
sti
cmp
dec
int
scas
sbb
cmp
or
clc
sbb
shrl
jle
pop
cmp
dec
jmp
push
adc
iret
insb
cmp
outsl
mov
dec
push
dec
add
sbb
mov
jno
xor
aas
xor
xchg
mov
push
adc
clc
pop
mov
add
pop
int3
xor
and
fcompl
addr16
cmp
mov
mov
lods
mov
fstp
iret
das
mov
push
and
mov
push
pushf
cmp
adc
aas
fs
mov
imulb
andl
shl
or
mov
std
jge
fidivl
or
call
fcomps
outsb
jo
shll
mov
into
push
mov
add
call
and
dec
aas
pusha
cmc
sub
and
xchg
xor
inc
sub
jmp
xchg
int3
add
daa
xchg
fs
into
lods
xchg
jbe
xchg
mov
je
and
movsb
cmp
stos
cwtl
sub
inc
mov
inc
or
lahf
mov
notb
mov
pop
fsubs
mov
xor
das
inc
cmp
push
mov
push
pop
or
or
lahf
xchg
loope
insl
imull
cmp
pushf
insl
arpl
inc
lahf
add
ljmp
mov
das
mov
stos
jbe
mov
sti
and
adc
int3
mov
xchg
jno
xchg
cmpsb
rorb
in
xchg
rorl
sbb
and
imul
and
je
popf
jp
mov
enter
inc
outsl
jae
mov
and
repnz
aam
sub
and
test
cmp
xor
ret
or
dec
mov
xchg
push
mov
aaa
sbb
xor
jo
jo
xor
mov
adc
add
xor
mov
jb
adc
outsb
push
inc
bound
mov
fstps
and
clc
push
or
or
xchg
push
loopne
ret
pusha
and
inc
test
out
lcall
push
pop
loope
dec
push
sub
mov
push
popf
xor
clc
add
push
mov
int
xchg
sbb
adc
fiadds
jge
dec
jl
jo
jbe
mov
bound
fs
sbb
push
mulb
fstpt
jle
jl
cs
retw
fisttpl
and
lock
mov
cld
les
pop
in
lahf
mov
loope
lcall
jp
js
mov
movsb
popf
sbb
fdivr
imull
xor
xor
lret
mov
js
out
pop
andb
mov
in
sti
mov
lods
into
ss
jge
jne
lds
push
arpl
sub
mov
bound
dec
sbb
or
adc
lahf
jae
dec
fistl
test
popa
icebp
icebp
inc
cmp
pop
cs
divl
popf
inc
jbe
stc
jecxz
mov
out
repnz
and
xor
jnp
pop
pop
jno
cmp
mov
and
mov
cmp
jb
shlw
shrb
std
ds
lock
sub
sbb
xor
push
shlb
push
dec
push
adc
xchg
das
mov
dec
std
pop
jp
cmp
inc
xor
jle
out
aaa
shl
std
mov
jmp
scas
iret
icebp
and
lcall
mov
lods
lock
repnz
gs
sahf
das
arpl
adc
cmp
arpl
adcl
icebp
movsl
mov
jle
push
in
movsb
dec
adc
jle
mov
mov
xor
js
jae
cld
inc
dec
cwtl
mov
int3
cmp
out
enter
mov
aaa
ja
jl
mov
push
xlat
sbb
jno
mov
jecxz
in
or
scas
dec
inc
sub
push
in
dec
ffree
test
dec
mov
cmpsl
xor
test
imul
add
lods
popa
xchg
in
imul
jle
push
mov
lods
fsub
add
or
jg
movsb
pop
fsubrl
mov
push
cwtl
cwtl
mov
sub
movsb
ret
inc
fidivrs
jmp
out
or
jno
fbld
out
pop
movsl
fcomi
movsb
cmp
push
adc
jl
sbb
mov
int3
loope
inc
add
popf
jg
mov
aaa
pop
sub
cmp
js
cmp
sbb
les
mov
ret
scas
mov
mov
add
pop
and
push
sbbl
jbe
daa
mov
xchg
push
pop
jg
cmp
movsb
lahf
ja
mov
ss
mov
push
iret
lods
jnp
inc
ss
shrl
xor
or
ret
dec
jne
pop
es
jae
lods
sub
sahf
cmp
mov
push
imul
mov
jo
mov
in
mov
jae
gs
pop
mov
add
fidivs
push
dec
push
xorl
pusha
mov
xchg
cmpsb
xor
mov
iret
sahf
dec
inc
int
add
jb
jb
inc
xor
jns
outsl
aad
xchg
cmp
or
and
cmp
add
les
int
js
or
mov
xchg
add
xchg
sbb
push
jp
inc
jns
xchg
mov
fs
lds
pushf
push
xor
ret
jnp
out
pop
sbb
ss
popa
shlb
jp
pop
or
int
jle
mov
ja
dec
aam
or
lret
jmp
movsb
leave
sub
or
cmp
jno
dec
js
sub
add
lret
dec
mov
mov
or
xor
jo
jae
jmp
lcall
fiaddl
hlt
aam
repz
cmpsl
add
mov
cmpsb
in
or
hlt
movsl
adc
xor
addr16
or
inc
push
cli
lea
mov
insb
add
pop
or
sub
and
adc
or
mov
xor
jmp
idivb
sub
sbb
aaa
hlt
in
mov
sbb
stos
rol
lret
sbb
jne
mov
movsb
add
xchg
mov
rorl
out
pop
enter
pusha
scas
sub
lahf
xchg
or
inc
ljmp
daa
stc
enter
pop
mov
insl
jns
jo
cmp
mov
push
sub
jns
jo
inc
das
dec
pusha
inc
push
loope
pop
icebp
jecxz
fcomps
mov
dec
inc
test
mov
mov
cltd
in
jae
sub
push
ja
mov
push
mov
dec
or
inc
jbe,pt
loop
mov
sarb
cvtps2pi
sahf
pop
add
shrb
rdtsc
sub
in
push
daa
out
test
daa
push
xor
xchg
dec
pop
mov
mov
aas
lret
ror
xchg
mov
sub
push
mov
mov
aaa
sbb
rcr
dec
dec
add
cltd
lea
clc
shrl
add
jno
sub
imul
hlt
out
lea
stos
adc
clc
lds
xor
sbb
dec
sub
dec
inc
push
and
jge
dec
lock
fsts
pushf
fisubrl
rcrl
and
xrelease
loop
ljmp
andl
xor
notl
mov
sbb
cmp
cmp
and
mov
dec
sub
aas
cwtl
pop
pusha
fidivrs
sbb
xchg
nop
push
mov
stc
loope
cmp
adc
jmp
stos
mov
xchg
sbb
jg
jno
repnz
je
and
mov
adc
mov
hlt
push
jp
rcrb
mov
rcll
inc
xchg
cmp
insl
or
xor
pop
loope
sbb
cwtl
jne
jle
jg
movsl
fcoml
scas
je
mov
out
fst
scas
push
dec
sahf
cld
and
xchg
sbb
mov
jo
or
cvtdq2ps
inc
xor
cld
sbb
lea
stos
push
mov
xchg
dec
les
xchg
jno
sub
push
inc
xchg
cmpsl
inc
stos
xlat
inc
mov
xlat
filds
cli
add
nop
inc
ja
test
dec
and
jl
stc
jmp
ret
fs
mov
or
add
bnd
jp
sub
xchg
mov
jmp
push
aas
jno
mull
xchg
insb
sti
dec
pop
sub
jns
pushf
pop
jo
xor
mov
mov
add
sbb
std
xor
cwtl
cmpsb
jecxz
push
mov
cmp
lods
inc
xchg
pop
xchg
pushf
call
cmp
fcoms
mov
sbb
adc
inc
lods
sbbb
leave
das
or
jae
std
mov
int3
rol
data16
dec
sbb
cmp
jmp
mov
lods
fidivl
mov
or
pop
jae
icebp
imul
arpl
mov
fcom
mov
adc
push
std
push
mov
jbe
pop
push
sahf
ret
cld
cmp
lock
push
ret
enter
mov
sub
scas
pop
jmp
call
mov
jne
sarb
cltd
push
dec
cmc
push
leave
sahf
adcl
jns
mov
cltd
inc
or
js
mov
cld
lea
out
pushf
hlt
push
dec
push
jle
add
mov
or
loopne
pop
push
ficomps
shlb
jnp
nop
fisttpl
in
cmp
fisubrs
pop
mov
aas
test
mov
jae
repnz
data16
lret
das
dec
add
or
insl
xchg
lock
and
jo
stos
or
dec
pop
mov
mov
mov
test
inc
jge
pop
xchg
pop
scas
sub
mov
push
scas
mov
inc
dec
cwtl
inc
fxch
cmp
daa
mov
pop
xlat
js
shlb
fists
repz
bound
cmpsb
ret
sbb
repz
dec
lret
push
aad
clc
dec
mov
aad
int3
dec
loop
stc
jbe
push
inc
and
bound
ret
mov
jge
jmp
xchg
pusha
dec
icebp
sar
cmp
fucom
or
in
sub
dec
lock
sub
shrl
mov
sbb
sub
loop
lds
scas
mov
jge
test
pusha
sbb
xor
push
repnz
popf
or
push
shll
imul
push
lahf
jbe
and
rcrl
shll
xchg
add
ja
cltd
sbb
add
dec
test
test
pop
and
lods
mov
call
in
jl
orl
iret
xchg
sub
sbb
loope
mov
inc
in
shll
mov
test
cmpsl
pop
pushf
in
mov
jg
cmp
iret
inc
lret
push
cmp
jne
fcomps
cmpsb
rol
add
adc
push
inc
in
int3
sti
mov
das
lds
inc
jmp
dec
les
push
out
jle
mov
dec
dec
cmp
xchg
lret
jle
or
mov
push
test
sub
xor
jge
cmp
cwtl
jmp
enter
test
daa
xor
cld
mov
sbb
aam
pop
int
mov
lods
iret
incb
ljmp
shll
je
lock
fistpl
dec
jb
or
lahf
insb
ljmp
orl
mov
or
inc
push
scas
push
int3
mov
mov
push
pop
cli
dec
push
or
hlt
cld
mulb
jecxz
cmp
popf
inc
fs
mov
scas
pop
push
jmp
pop
push
and
mov
sahf
push
push
into
xchg
std
in
jnp
ret
xlat
into
mov
shl
adcl
popa
xchg
ljmp
les
jbe
cmp
jmp
sti
inc
aad
pop
mov
rcrl
ss
dec
mov
add
test
decb
push
sub
push
xor
jb
mov
movsb
pop
xor
aaa
ljmp
or
sti
mov
pop
dec
ret
jge
pop
pop
add
dec
scas
in
mov
and
jmp
daa
add
mov
call
sub
sbb
push
lds
adc
push
outsl
lds
fildll
inc
cmpl
in
xchg
pop
sub
push
pop
push
or
imul
dec
sbb
dec
pop
mov
pop
in
ret
std
es
push
movsl
inc
shrl
call
adc
out
arpl
scas
aaa
mov
push
lahf
aas
pop
mov
mov
loope
mov
jb
and
decl
rolb
xor
les
mov
sti
jecxz
mov
pop
in
insl
dec
mov
jg
pop
fiadds
orb
adc
les
aas
dec
sti
or
push
fucomi
pop
adc
mov
aas
int
xchg
das
loopne
mov
out
cli
ja
inc
sub
sbbb
add
jae
imull
add
mov
xor
loop
in
mov
xchg
loopne
push
ret
and
outsb
and
sbbl
dec
loope
pop
stos
inc
aas
rclb
or
rorl
push
popa
inc
adc
js
enter
mov
adc
cmp
mov
shlb
popf
cmp
std
pusha
cmpsl
pop
inc
pop
les
rclb
jbe
shlb
or
inc
ret
movsb
jae
mov
sbb
adc
out
sbb
adc
adc
mov
inc
and
test
pop
xchg
inc
add
sub
aad
cwtl
cmpb
inc
push
bound
stos
push
cmp
and
adc
repz
pop
cmpsb
arpl
push
cmp
or
pop
dec
rcrb
adc
bound
clc
test
cmpb
scas
lret
out
lock
mov
xchg
daa
lods
repnz
sub
xchg
insb
mov
addb
lods
sub
jge
dec
sahf
out
addr16
cmp
sub
aas
inc
push
add
dec
aas
mov
sahf
in
stos
jg
jb
daa
mov
mov
inc
and
mov
push
fwait
lods
pop
xor
dec
dec
add
mov
icebp
fmuls
mov
call
xor
mov
mov
shrb
cmp
push
fucomip
push
fwait
xchg
imul
push
adc
jp
stos
lret
stos
xchg
adc
mov
xlat
lock
push
les
idivb
test
inc
dec
cmpsb
dec
es
xchg
inc
dec
sbb
movaps
jae
es
rorl
insl
ds
jbe
data16
add
jae
popf
popf
cmpsb
fcomi
lods
xchg
repz
test
and
sbb
inc
test
or
mov
iret
or
stc
dec
and
lahf
ret
add
scas
fistpll
dec
movsb
cmp
add
add
les
cmp
outsl
mov
xor
xchg
push
add
jae
das
inc
mov
sub
mov
xchg
in
xchg
in
loop
cmpl
add
jns
test
fisttps
into
and
in
gs
jmp
and
jns
sub
pusha
or
pusha
ss
jecxz
stos
mov
daa
dec
pop
outsb
loopne
push
push
fidivrs
xor
pusha
aas
mov
mov
repz
pop
jmp
mov
ret
iret
sub
jae
loop
int3
jbe
inc
mov
out
push
ror
into
sub
call
sub
rolb
sbb
hlt
icebp
and
lds
xchg
jg
xchg
jno
and
es
out
ljmp
scas
outsl
ljmp
cmpsb
je
and
test
test
nop
imul
pop
dec
sub
hlt
std
shl
data16
mov
sbb
cmpl
movb
mov
pushl
or
movsl
outsb
mov
dec
or
aas
outsl
mov
lahf
lcall
out
mov
jle
xor
cwtl
or
pushf
gs
jnp
enter
test
adcb
ss
jo
sub
jo
cmp
pop
enter
rcrl
pop
sub
sbb
mov
cmc
in
insb
inc
stos
ljmp
addb
xchg
scas
jmp
or
add
in
movsb
sub
in
push
stos
push
xlat
mov
xchg
cmp
lret
movsb
fists
or
ljmp
loop
fcmovnb
xchg
mov
mov
popf
jge
jne
aad
adc
mov
andl
or
dec
add
stc
sub
addr16
mov
gs
cmp
mov
out
mull
push
mov
pop
dec
test
ljmp
cmpsb
mov
dec
or
push
clc
or
adcl
pop
cmpsl
out
cmp
dec
shlb
cmp
cmc
or
out
sbb
incb
out
adc
push
loopne
inc
cltd
loope
jbe
mov
enter
stc
jge
in
sub
popa
sbb
shl
add
fs
adc
jl
leave
sti
add
inc
dec
scas
shrb
dec
add
and
cmp
pop
jne
sub
push
decb
cli
push
pop
add
clc
cwtl
fisubrs
loop
pop
bound
jo
in
pushf
push
sub
stos
cmp
adc
xchg
inc
mov
pushf
enter
or
pop
nopl
push
xchg
in
lea
je
cmpsb
adc
xchg
mov
aaa
jb
sbb
test
cli
int3
xchg
test
ss
mov
add
jns
pop
cli
lret
adcb
sub
repnz
pop
decb
xchg
sub
add
ret
popf
shll
inc
xchg
pop
push
mov
adc
xor
adc
jns
cmpl
mov
pop
adc
and
ja
ja
add
aaa
jg
or
xor
cli
lods
lock
stos
in
movsb
test
mov
or
xchg
stc
js
je
ljmp
or
lods
dec
sahf
jns
sbbb
mov
fimuls
and
xor
push
ja
scas
mov
add
mov
push
mov
into
cmc
sub
jno
decb
out
jge
cmpsb
push
mov
jecxz
cli
imulb
dec
lods
pop
sub
and
enter
and
jge
jecxz
adc
xor
cmp
mov
sbb
mov
sbb
repnz
ljmp
cli
push
pushf
sbb
sbb
daa
add
clc
outsl
inc
cli
mov
ds
je
jecxz
fstl
fdivrp
mov
in
in
cvtdq2ps
in
xor
popf
lods
aaa
outsl
mov
xor
dec
out
mov
clc
pushf
sbb
adc
aam
cmp
sarb
cmpb
pop
inc
scas
cmc
pusha
lea
push
hlt
hlt
inc
popf
cltd
pop
pop
sub
cltd
imull
adc
in
aam
movsl
in
xchg
inc
sub
and
rolb
push
and
imul
mov
push
mov
or
fcompl
sub
sub
lods
daa
jae
outsl
xchg
mov
lock
xor
add
jno
cltd
ret
or
pop
imul
mov
xchg
add
pop
dec
rorl
or
lods
push
pop
dec
out
sub
xchg
cli
push
hlt
cltd
adc
aaa
in
inc
pop
push
lret
popa
cld
movsl
das
mov
dec
mov
xchg
outsl
fistpll
mov
lret
xchg
mov
outsl
cltd
pop
and
insb
aam
ret
roll
xchg
and
aam
inc
inc
push
and
pop
movsl
jbe
mov
mov
scas
out
dec
adc
sbb
pop
push
sbb
sti
test
mov
out
pop
sub
push
lock
xor
jmp
jl
rol
outsb
push
push
dec
inc
ja
xor
cld
sbb
adc
inc
popl
sub
pop
in
and
push
or
bswap
leave
pop
ljmp
push
xchg
imul
scas
negb
xchg
jle
push
push
lret
jg
sarl
jmp
mov
into
and
jge
xlat
mov
mov
xchg
xchg
push
ret
lret
test
pop
adc
push
cmp
mov
or
sub
add
cmp
pop
pop
in
pop
mov
pop
mov
push
pushf
lods
and
xchg
jmp
shll
pop
movsb
fdivrs
and
fbld
sub
inc
push
pusha
sub
xor
cmp
add
mov
popa
inc
mov
xchg
inc
pusha
stos
sbb
clc
or
shll
outsb
popa
insl
adc
loop
jl
sti
dec
insb
sub
les
pop
das
lahf
mov
ds
mov
push
add
test
mov
sub
mov
pop
scas
jbe
rcrb
shrb
daa
fwait
es
ret
in
pop
in
idivl
xchg
add
sbb
movsl
popa
hlt
xor
pop
ja
dec
xlat
pushf
inc
pop
cmp
xor
rolb
inc
push
ja
fsubl
jno
pop
and
popf
xor
inc
fwait
popa
mov
cltd
test
loop
add
cmp
pcmpeqb
test
js
stc
sarl
mov
pop
out
out
jno
hlt
insl
test
push
sbb
sti
lock
ds
mov
inc
mov
loop
and
push
dec
jmp
mov
cwtl
dec
rcrl
sbb
ss
pop
lcall
sbb
adc
pushf
push
xor
push
push
lret
shlb
mov
adc
fdiv
inc
test
jae
jg
pop
outsl
inc
sub
push
test
jg
jne
inc
push
or
add
nop
mov
push
aam
push
mov
jmp
outsb
mov
pop
fdivl
sbb
scas
pop
fidivl
loopne
jno
dec
sub
mov
in
pop
jmp
punpckhwd
fisubs
mov
jnp
mov
add
mov
ljmp
nop
push
std
xchg
cmpl
imul
lret
popf
cmp
jg
pushf
add
or
push
mov
ljmp
pushf
ja
cli
pop
sub
or
cmp
gs
xchg
scas
in
and
and
push
lret
push
inc
mov
shll
inc
popa
adc
int3
xchg
dec
stos
dec
and
shlb
fs
jne
mov
icebp
stos
xchg
int3
pushf
aam
jmp
test
fidivl
pop
addr16
rclb
adc
add
sbb
test
mov
sbb
inc
mov
out
imul
test
les
sbb
xor
jno
and
clc
das
mov
push
hlt
xchg
adc
xchg
lods
dec
push
lret
push
out
add
es
or
test
and
mov
mov
mov
test
mov
mov
rcrb
shl
mov
sbb
jne
cmpsl
add
rcrl
js
addl
imul
les
imul
push
jae
jp
or
sti
int
sub
mov
adc
push
mov
add
scas
pop
sub
jle
add
outsb
ret
outsl
jge
das
jmp
xor
inc
popa
ljmp
sub
adc
mov
sti
push
inc
scas
hlt
leave
iret
mov
les
test
test
sub
mov
lea
jno
lahf
hlt
scas
sbb
pushf
xchg
scas
jge
xchg
sub
jle
mov
aaa
fildll
pop
sahf
out
std
push
push
jg
add
and
dec
jae
jne
cmp
xchg
int
cmpsb
adc
and
mov
gs
jge
das
pop
jmp
gs
ret
ret
insl
cld
scas
aad
inc
aad
data16
popf
lds
insb
mov
xchg
insb
cmc
inc
cmc
fucomip
repz
pop
repnz
mov
push
sarl
xlat
aaa
sbb
test
lahf
jmp
out
repnz
outsb
xchg
inc
or
loop
mul
or
mov
outsl
in
or
movsb
popf
addb
xor
mov
imul
stos
xchg
mov
imul
jb
mov
enter
mov
dec
cmp
fadds
push
addr16
or
loope
sbb
xchg
or
or
hlt
or
lahf
mov
adc
mov
imul
pop
add
add
loope
rcll
andl
rcl
daa
add
fwait
mov
add
sub
test
sbb
or
mov
dec
repz
jle
push
inc
push
sub
sbb
in
aam
sbb
in
pop
dec
arpl
stc
mov
test
loop
leave
cld
imul
les
pop
jl
mov
push
lahf
pop
jo
les
stos
xor
in
adc
cmpsb
adc
sbb
daa
adc
sub
add
mov
test
pop
jg
mov
ljmp
jo
mov
or
inc
push
repnz
fwait
es
jmp
cmpsl
out
cmp
pop
stc
imul
inc
cli
fxch
icebp
jl
cmpsb
sub
xchg
scas
inc
scas
xchg
jb
out
dec
mov
in
jmp
inc
daa
cmp
mov
andl
stc
in
movsl
inc
add
push
or
popf
imul
arpl
ror
sbbb
cltd
ljmp
jp
mov
popf
mov
xlat
mov
imul
inc
ret
loope
mov
testb
mov
lods
mov
data16
dec
pop
push
lcall
stos
call
test
je
inc
hlt
mov
call
paddd
repnz
popa
dec
loope
push
pop
aam
dec
or
add
inc
in
mov
or
std
jae
xchg
jno
enter
sbb
xor
mov
sub
in
mov
les
rolb
push
adc
aaa
ss
inc
ja
and
xlat
xchg
loope
cmp
xor
fisttpll
out
or
pop
rclb
dec
divl
and
rcrl
aam
stos
sub
sar
xor
icebp
jmp
test
mov
imul
fildl
jmp
cmp
aam
call
mov
popa
sarl
ret
imul
push
adc
pop
mov
cltd
inc
das
lock
leavew
ja
push
cmpsl
fdivp
add
mov
jge
insb
addr16
andl
pop
dec
mov
dec
addr16
das
inc
lock
inc
out
mov
push
pop
fldenv
iret
push
popf
jl
mov
adc
cmc
aad
aas
test
ds
dec
mov
inc
lahf
cltd
aaa
fldl
std
push
int3
and
pop
jl
es
mov
adc
and
mov
repnz
adc
push
outsb
adc
imul
fxch
jno
sbb
cmp
test
mov
fistpl
out
vorps
mov
clc
and
ds
cmpsl
sbb
dec
cmp
and
sub
mov
xchg
test
repnz
lods
xchg
mov
xor
out
bound
out
aaa
arpl
dec
out
movsb
repz
sub
shll
mov
rorl
xchg
inc
cltd
int3
pop
ret
jmp
add
movsb
mov
mov
cmp
lock
mov
or
mov
mov
and
ror
xchg
inc
and
in
ds
jmp
les
adc
sub
rorb
clc
push
mov
xor
or
pop
pop
add
xor
scas
cmp
in
xchg
jecxz
arpl
xor
lret
stos
mov
mov
test
out
adc
js
jbe
adc
hlt
jno
notb
mov
lock
add
xor
enter
cwtl
xchg
jle
aam
sbb
aaa
cmpsl
sbb
and
pop
dec
jl
xchg
cld
js
fs
inc
jg
mov
rcrb
bound
pop
sbb
fisubrl
jl
scas
xchg
mov
int3
mov
daa
test
xor
stos
out
js
cmp
inc
dec
dec
or
inc
pop
sahf
cmpsb
divb
or
fstl
out
xor
pop
iret
bound
xchg
add
sub
inc
cmc
rcrb
sub
popf
push
in
sbb
lret
imul
jb
dec
loope
clc
lret
rcrb
add
mov
lahf
push
ficoml
andb
repnz
jle
mov
dec
jmp
adc
outsb
stos
shll
xchg
push
dec
cwtl
out
sbb
or
imul
dec
stos
vcvttss2si
icebp
cmpsb
aaa
sub
test
inc
push
hlt
sbb
mov
jecxz
add
push
repz
cmp
mov
cld
add
movsb
insb
jecxz
sbb
test
cmp
mov
push
popf
pop
in
pop
jg
or
iret
testb
lds
push
aas
js
pop
bound
push
pushf
in
cmp
dec
inc
inc
inc
das
test
dec
or
sbb
add
cwtl
out
movsb
adc
inc
add
mov
aaa
xchg
cld
dec
mov
adc
jg
pop
ljmp
test
xchg
and
test
stos
lret
test
fadd
jg
je
cmp
iret
fnstenv
dec
push
jb
inc
popl
or
cwtl
adc
and
xchg
push
js
out
cmpsl
pop
cmc
out
xchg
test
insb
xchg
xchg
out
xor
stos
push
je
repz
mov
dec
mov
clc
bound
shll
sub
lods
pop
add
pop
push
cld
addb
pop
inc
xor
jp
repz
jmp
rcll
xchg
or
inc
lock
sub
push
mov
sti
push
xor
pop
add
movsb
mov
loopne
xor
cmpl
das
xchg
mov
fsubrs
xor
sub
mov
or
out
jbe
imul
cmp
adc
popa
sar
mov
jle
pop
jae
or
arpl
and
sti
jle
arpl
ficomps
data16
pop
sub
add
lret
add
mov
and
out
stc
outsb
sub
push
xchg
jp
cmp
test
or
test
cmp
jle
cmp
fnsave
cwtl
xchg
icebp
stc
popf
sbb
pop
cmp
pop
lret
stos
mov
and
push
inc
das
cwtl
mov
fdivs
xchg
inc
cmp
add
test
lds
scas
fildll
mov
ljmp
aam
dec
sbb
mov
sub
or
stc
jge
dec
insl
xchg
sub
jnp
dec
sbb
adc
mov
addl
jns
shr
adc
ds
das
scas
mov
mov
xor
call
stc
mov
and
pop
dec
pop
dec
push
or
inc
loop
cmpsl
xchg
fstpt
and
dec
inc
jge
es
sahf
stos
ret
test
xchg
mov
inc
test
dec
cli
sub
in
out
outsb
js
push
push
hlt
xchg
outsb
push
cmp
adc
mov
int3
test
lods
enter
push
shrl
xor
mov
sar
aam
loop
cmp
xchg
call
sbb
and
in
jecxz
mov
dec
mov
enter
lcall
cmpsl
popf
mov
and
cmp
lds
andl
int3
loop
movsb
mov
add
jb
aaa
or
xchg
inc
jmp
bound
and
lods
loope
lock
mov
cs
stc
mov
sbb
push
imul
mov
push
cld
adc
out
pop
mov
shll
outsb
adc
out
adc
push
ficoms
js
sub
cs
iret
out
nop
icebp
pop
cmc
cmp
push
es
xchg
fists
sbb
stc
lock
shlb
dec
push
cmp
test
insl
mov
mov
jmp
outsl
adc
adc
and
nop
ja
es
decl
ret
fwait
nopl
pop
push
push
xchg
mov
xchg
pop
ret
call
xor
hlt
add
sbb
pusha
fsubs
jae
pop
test
sbb
push
add
and
aam
iret
or
test
xchg
xorl
mov
fdivrl
mov
nop
xor
pusha
insl
inc
cmp
out
add
push
add
inc
jne
outsl
xchg
call
shlb
in
mov
clc
sub
sub
cmp
sub
mov
stc
pop
aad
arpl
sbb
je
push
jno
scas
or
jnp
sbb
or
or
sbb
movsb
xorl
dec
inc
call
inc
dec
int
sub
jg
fadd
mov
test
jl
sarl
or
subb
xchg
mov
les
stos
cmpsb
rcrl
cltd
inc
sbb
cmpsb
test
insl
push
mov
push
cwtl
cmpsl
xlat
cmc
or
push
mov
adc
dec
xor
movl
sub
pop
decl
fs
cmp
cltd
lock
jo
inc
sub
mov
push
out
in
sbb
jmp
insb
daa
xor
or
or
adcl
jns
dec
mov
pushf
in
and
mov
xor
adc
lods
mov
add
xor
mov
dec
lods
add
inc
sub
cmp
push
loopne
lahf
adc
sbb
and
sub
mov
cmpsb
sub
push
loopne
lea
adc
cmp
xchg
sub
fbstp
movsl
stos
dec
pushf
push
test
fisttpl
cmp
mov
cld
repz
in
sub
repz
lock
outsb
push
xlat
test
cltd
and
cltd
inc
dec
inc
and
add
scas
mov
je
xchg
xor
stos
shlb
cmp
out
cwtl
mov
movsb
jle
mov
cwtl
popa
rcll
scas
or
mov
jae
es
pop
or
or
adc
stos
jne
add
jns
icebp
rcrl
leave
xchg
pop
rorl
dec
sahf
dec
xor
andb
jecxz
repz
stos
inc
int3
subb
cmp
adc
test
addb
mov
call
dec
add
js
jne
lods
push
fadd
pop
lcall
jne
sbbb
daa
push
sbb
incb
mov
sub
xchg
mov
sti
hlt
jns
inc
add
test
popa
inc
xor
mov
jmp
lahf
xchg
dec
push
mov
outsl
mov
lods
jno
sub
sbb
daa
mov
jae
fistpll
out
shl
in
iret
lahf
adc
push
inc
mov
dec
adc
mov
xchg
cs
xchg
push
ss
jne
mov
data16
or
or
outsb
js
jle
dec
fsub
imul
fidivs
xchg
sti
xchg
js
lcall
lds
inc
add
push
pop
pop
mov
sbb
jge
arpl
fwait
out
jp
movsb
jg
les
add
xchg
push
push
cwtl
push
pop
dec
sahf
int
lods
fcomps
adc
cmc
jecxz
lahf
repnz
sbb
sbb
in
out
repz
aam
mov
and
cmc
dec
enter
sbb
inc
sbb
pop
movsb
iret
test
imul
aam
pop
scas
push
daa
or
sub
in
push
and
mov
inc
jg
jnp
push
adc
into
int
ffree
xchg
scas
xchg
loop
ss
push
mov
aam
test
cmpsb
loopne
and
das
jl
jmp
add
mov
es
adc
pop
arpl
push
fmuls
ja
jp
sbb
insl
jle
mov
or
and
sarb
in
jg
fsts
ljmp
dec
fs
movsb
cmp
repz
jae
or
pop
push
mov
and
mov
mov
imul
push
sub
dec
mov
in
aam
fwait
fwait
lea
adc
sbb
pop
inc
and
fsts
scas
mov
stos
dec
sbb
jb
notl
mov
aam
or
in
mov
in
dec
or
xchg
mov
clc
jp
inc
sbb
mov
ds
adc
cltd
jmp
pop
push
sahf
ficoml
push
xor
ja
fisubrs
mov
xchg
lret
pushf
fists
add
lcall
xlat
jp
psubusb
repnz
out
fisubrs
mov
xchg
repnz
jge
mov
shll
addr16
mov
enter
or
xchg
mov
mov
or
mov
or
sub
add
lahf
jns
out
or
enter
mov
inc
xor
xor
sub
sub
mov
imul
xor
leave
push
test
nop
add
cmpsl
aam
inc
pop
and
push
mov
idivl
insl
inc
add
outsl
idivb
stos
int
aas
jge
hlt
push
mov
add
imull
push
fcomps
dec
outsb
xlat
pop
and
jo
hlt
int3
adc
lds
je
out
xor
shr
rorb
mov
jnp
lea
ficomps
pop
dec
in
pop
mov
adc
xor
dec
xchg
sbb
lcall
or
cmc
inc
sbb
or
lret
test
rcrl
test
cld
lods
dec
repz
ror
add
insb
or
mov
pushf
push
xor
das
andl
mov
push
std
add
xor
es
pushf
in
neg
popa
or
mov
mov
cld
les
int
jnp
inc
mov
sahf
xchg
inc
jge
out
sub
jno
out
mov
xchg
in
aas
es
add
jmp
imull
mov
out
les
cltd
add
lds
or
mov
sarl
cmp
mov
sbb
stos
and
jl
les
cmp
fidivrs
xlat
in
loopne
subl
mov
pusha
mov
jg
out
cmp
imul
fadd
pop
pop
ja
jno
inc
les
fistpll
hlt
loope
dec
cld
cmp
jg
mov
sarl
repnz
lcall
cmp
sbb
jecxz
and
jns
sbb
into
dec
xor
and
mov
in
shrl
loopne
std
sbb
ljmp
sahf
or
xchg
notb
adc
in
add
push
daa
add
xlat
repnz
mov
test
xchg
inc
repz
mov
cld
imul
dec
int3
pop
cmp
mov
adc
mov
cmc
dec
aaa
imul
cmp
arpl
push
mov
out
ret
pushf
js
mov
pusha
mov
stos
xchg
test
mov
jmp
aad
in
pop
sarl
jg
cmpsb
or
insb
cmpsb
add
lods
daa
jp
jge
sub
add
and
xor
sti
cmp
test
mov
ret
pop
fdivrs
push
xor
cli
and
mov
scas
popf
jns
rcrb
repz
fistpl
inc
stc
jp
cwtl
aas
pop
inc
pop
pushf
shlb
add
clc
jmp
dec
or
inc
ja
push
adc
es
lock
in
inc
mov
icebp
int3
jnp
jno
gs
js
lea
sbb
loope
pop
mov
call
fnsave
and
cmp
xchg
aad
mov
jle
mov
pop
xchg
fwait
loopne
add
and
sbb
and
nop
movsb
adc
xchg
xchg
aaa
xchg
dec
popf
dec
std
mov
and
lock
xchg
sbb
dec
das
shlb
cli
dec
dec
push
int3
xor
xchg
push
sub
jbe
fld
xchg
mov
xchg
std
sbb
xchg
int
add
push
dec
testl
push
hlt
cltd
jb
xchg
ret
add
lea
cmp
mov
jne
xchg
cli
jne
addr16
lahf
push
ss
test
setge
cmp
pop
cmc
mov
ret
insl
insl
loope
sbb
lret
pop
stc
enter
sub
out
inc
inc
pop
push
aas
adcb
cmpsl
clc
xlat
mov
aaa
push
cmp
mov
out
dec
jns
bound
stos
dec
pop
mov
mov
sbb
cmp
xchg
mov
int
cli
test
shrl
call
negl
sub
and
xor
and
xor
outsb
movsb
xchg
dec
cmp
movsb
nop
or
fstpt
in
pop
push
adc
iret
popf
mov
clc
cmp
jno
mov
aaa
pusha
xlat
jns
dec
out
out
pop
adc
jle
sarl
push
or
enter
stc
fwait
dec
lahf
xlat
cwtl
add
mov
adc
pop
push
push
outsb
push
mov
subl
outsl
xor
xchg
cmp
cmp
mov
stos
mov
data16
push
lcall
cmp
rcr
mov
or
dec
pop
int3
fsubrs
xor
xor
jg
xchg
sbb
shll
cmpsl
mov
clc
mov
jp
jl
xchg
iret
push
dec
pop
das
or
jno
inc
sbb
call
fdivs
shll
in
jge
stc
daa
outsb
sti
enter
push
mov
dec
pop
inc
cmc
jp
mov
push
add
or
mov
mov
lcall
test
push
aas
cmpsl
idivb
xor
sbb
push
mov
xlat
sub
push
mov
lret
xor
rorl
movsb
push
xchg
sarb
outsb
clc
ja
sbb
into
or
sbb
fsubl
jge
cmp
xor
daa
les
pop
jb
das
int
jge
lods
das
ret
in
mov
push
sub
incb
iret
sbb
cwtl
ljmp
mov
jns
jnp
loopne
fstpl
xor
xchg
push
or
adc
sub
daa
and
sub
sub
mov
into
into
jle
jne
sahf
cmc
xchg
xorb
push
sub
inc
mov
jo
add
xor
adc
mov
aad
cmp
das
push
inc
mov
pushl
or
test
xor
mov
sbb
push
push
call
dec
cmp
mov
dec
lods
inc
pop
addl
subl
mov
test
or
nop
cmp
pop
adc
fsubs
cli
inc
shlb
xor
aad
iret
fdivs
mov
pop
test
pop
push
ja
cmp
out
dec
lret
pop
cld
lock
lahf
pop
loop
xchg
mov
mov
cmpsl
dec
or
or
or
sub
int
push
dec
sbb
nop
and
popf
fwait
add
out
sub
cmc
pop
dec
cwtl
xor
mov
adcb
ljmp
lcall
jno
or
pop
fsubl
xchg
repz
sti
movsb
xlat
fwait
dec
outsl
push
push
dec
es
stc
sub
imul
lret
enter
test
cmpsb
js
mov
lcall
xor
mov
sahf
jmp
push
movsb
jecxz
cmp
test
lock
mov
or
jo
fsts
rclb
callw
or
negb
roll
xchg
and
add
lds
pop
adc
pop
bound
aad
test
cltd
mull
jbe
push
pushf
inc
out
outsb
inc
fdivp
xorl
mov
mov
adc
adc
inc
dec
addr16
pop
pushf
rcrl
xor
adc
call
mov
icebp
insl
cmp
rcll
dec
jecxz
pusha
cmp
mov
popa
nop
out
cld
outsl
push
mov
pop
repz
jmp
pop
cltd
adc
jmp
mov
xlat
icebp
push
or
inc
insl
adc
xchg
fs
hlt
nop
jo
sbb
jl
jecxz
push
insb
jns
mov
loope
es
fistpl
repnz
scas
int
pop
push
lcall
cmp
mov
mov
stos
les
mov
out
ss
test
loopne
adc
or
and
xor
enter
outsl
pusha
mov
aas
jg
cmp
inc
pop
clc
addr16
and
jecxz
lcall
test
mov
test
adc
repz
loopne,pt
idiv
ja
aaa
inc
mov
sub
mov
or
insb
dec
insb
mov
push
pusha
rorl
pop
pop
push
outsl
addr16
jmp
stc
lds
in
add
pusha
call
fwait
popf
lods
xchg
sub
test
test
cli
std
idivl
push
lret
popf
dec
xchg
adc
pop
fwait
sti
xchg
popa
hlt
jge
mov
mov
fwait
cmp
out
add
mov
cltd
jle
iret
sbb
out
add
jbe
outsl
lahf
test
ret
sub
test
push
push
jp
ss
shll
jae
movsl
je
imul
inc
mov
mov
mov
inc
orl
and
movsb
or
imul
xchg
stos
cmp
push
adc
mov
mov
cmp
arpl
mov
dec
aas
lods
aam
pop
lds
divb
ficomps
pop
iret
mov
cli
or
cmp
sbb
cmp
aas
cmp
sarl
and
sub
out
test
xchg
imul
dec
aam
xlat
lret
out
je
sbb
jbe
jb
std
cld
mov
mov
sub
mov
and
mov
inc
fimull
addb
cmp
rclb
and
cmp
sbb
nop
push
dec
mov
cmpsl
aam
jne
sbb
mov
gs
inc
int
ja
push
std
jns
mov
pop
in
mov
jmp
mov
test
cmp
inc
jge
mov
jge
insl
hlt
push
nop
or
fcmovb
int
jmp
fcomp
or
test
dec
roll
les
push
xchg
idivl
cltd
mov
dec
das
sbb
repnz
in
ljmp
inc
inc
ficomps
je
or
jo
mov
push
add
stc
mov
xchg
lahf
mov
and
push
in
sbb
mov
cmp
popa
js
or
inc
push
or
out
cwtl
cli
inc
jl
sub
lcall
out
sbb
pusha
cs
xchg
shl
scas
sub
mov
and
popa
cwtl
out
sbb
in
add
sbbb
in
xchg
cmp
jmp
add
ds
dec
es
ret
or
sbb
push
mov
aad
xchg
inc
aam
pop
lcall
xchg
push
xchg
insl
fcom
cmp
cmp
push
dec
test
and
fcmovnb
mov
movsb
repz
push
lcall
loop
aas
test
orl
add
loop
aaa
popf
aaa
xor
pusha
dec
loopne
lock
sub
mov
or
dec
ljmp
loopne
mov
insb
cmp
mov
mov
stos
xlat
outsl
jae
popa
mov
out
push
add
lods
lcall
lret
jo
mov
cmp
add
sub
xchg
inc
stos
mov
movsl
sahf
push
lods
xor
dec
jo
mov
pop
jg
xor
or
sbb
int
inc
lds
into
push
or
push
xchg
sbb
mov
add
sub
push
xor
leave
pop
xor
out
rorb
mov
dec
jno
mov
jge
sbbl
mov
out
dec
fcmovnu
lods
and
or
push
mov
movsb
insl
loopne
jg
inc
xchg
ljmp
add
addr16
rclb
jo
push
jle
sbb
inc
fdivrs
je
xchg
jge
lods
cwtl
push
aaa
pop
inc
mov
pop
sub
flds
dec
push
into
loopne
or
push
mov
and
xchg
fidivrs
mov
jg
into
pop
push
int
inc
xor
inc
pop
push
mov
sub
rcrl
cmp
cmp
aaa
xor
cmp
call
test
sub
pushl
scas
xchg
mov
xchg
sahf
mov
or
fcmovnbe
fisubs
cwtl
pop
sub
push
dec
push
in
enter
into
cmp
and
xchg
outsb
aam
cmp
mov
pop
jle
cltd
mov
cmp
movsb
out
out
jmp
aaa
outsl
out
push
mov
lahf
jns
adc
dec
shlb
imul
cmpsb
mov
and
hlt
mov
xlat
jbe
and
js
cmp
xchg
mov
or
addr16
and
cmp
jb
outsb
int3
cmpsl
adc
hlt
jecxz
dec
aam
and
push
push
and
aaa
nop
dec
dec
dec
dec
rcr
adc
add
sub
sbb
jge
ljmp
popa
add
jae,pt
repz
andb
sub
dec
cmpsl
insb
mov
decl
push
iret
je
xchg
les
aam
adc
mov
push
stc
xchg
and
fwait
fs
jne
mov
inc
in
dec
divl
loope
rolb
cltd
pop
cmp
inc
out
and
gs
arpl
mov
pop
dec
mov
call
pop
add
sub
jne
xchg
dec
in
int
shl
mov
mov
lea
fadds
in
inc
and
cwtl
cmp
mov
aad
mov
cmp
es
inc
nop
adc
leave
adc
sar
call
popa
mull
pop
fwait
jns
sarl
inc
mov
outsb
outsl
and
je
aas
call
rorl
jbe
popf
adc
mov
add
or
sbb
lods
add
push
arpl
mov
hlt
inc
rorl
push
lock
mov
xchg
cmpsl
xchg
xlat
lods
imul
xor
mov
nop
aas
push
xchg
adc
or
mov
cmpl
inc
dec
ret
roll
ja
add
ficompl
mov
pop
dec
dec
pop
cltd
out
xor
lock
cmpsl
movsl
in
jmp
mov
mov
or
jo
call
inc
add
xchg
xchg
xchg
xor
lock
jno
sbb
mov
es
repnz
loop
mov
fs
and
jp
subb
xchg
cltd
xor
inc
insl
ret
push
popa
aas
fimuls
add
mov
push
fdivrl
mov
xor
sub
mov
insl
sub
cmp
iret
mov
cmp
fistpl
fldcw
push
cmpsl
mov
cmp
fs
mov
loopne
mov
cmpsb
pop
mov
push
add
cmp
shll
inc
xor
add
mov
and
cltd
mov
xchg
std
xchg
sbb
jno
out
xor
cmp
lcall
push
je
test
xchg
pop
xor
cwtl
jo
mov
dec
sub
push
pusha
xchg
add
and
jl
inc
sbb
stos
enter
pop
int
aad
gs
in
popf
push
and
cmp
cltd
clc
lret
sbb
xor
out
xor
mov
je
mov
pop
pop
adc
fimuls
lods
das
jnp
cwtl
int
mov
sarl
adc
inc
sbb
adc
mov
mov
or
int
sbb
mov
dec
jo
mov
out
xchg
mov
sti
stos
cltd
push
mov
shr
sahf
lods
dec
ja
xchg
jo,pn
jno
loop
shlb
pop
cld
and
mov
pop
out
rcrb
call
sti
scas
mov
add
pop
lods
scas
mov
outsl
xchg
adc
jns
and
icebp
xor
inc
decb
xchg
lea
in
sbb
mov
lock
into
popa
sub
jno
mov
outsb
sub
stos
sub
mov
adc
jns,pn
jo
lods
dec
fisttpll
insl
stc
into
xor
int3
inc
mov
fsubr
aas
cwtl
jae
and
out
mov
inc
out
out
adc
repnz
jnp
fimull
jb
push
dec
lods
or
pop
jl
or
mov
out
jp
sub
aaa
popa
rcl
jnp
dec
std
hlt
jb
sbb
loope
fcmovne
clc
int3
sub
imul
mov
divl
test
sub
imul
movsl
pop
es
push
mov
mov
mov
mov
xchg
addb
push
ljmp
in
mov
dec
cli
mov
sbb
and
xchg
repnz
or
jecxz
sti
scas
cmp
push
or
jae
out
pop
int
aad
inc
lcall
fistl
pop
repz
shr
outsl
lret
mov
dec
movsl
or
mov
jbe
add
test
in
test
in
and
sbb
inc
jle
repz
cli
movups
add
mov
push
xchg
jno
xchg
ret
sub
ja
es
mov
jbe
mov
mov
dec
lods
xor
push
cwtl
pop
inc
or
cmpsb
pusha
xchg
xrelease
push
sbb
mov
stc
aas
loopne
ret
sbb
test
dec
lret
add
rclb
or
stc
stos
sbb
icebp
mov
mov
mov
dec
mov
and
repz
mov
data16
sub
adc
mov
or
jb
xor
movsb
ret
sub
std
test
mov
cmp
add
sbb
fucom
lods
jae
push
jbe
outsl
push
into
inc
pushf
aam
jg
ds
push
shll
es
cmp
out
sbb
mov
out
and
push
or
cli
fstp
outsl
sahf
mov
add
or
aaa
out
mov
jmp
icebp
clc
xchg
xor
pushf
push
je
mov
outsl
push
or
int3
sbb
fists
lret
loopne
jecxz
call
jb
sub
xor
xor
xor
and
aad
repz
jnp
mov
sarb
cmp
and
xor
or
subb
test
xor
addl
inc
sbb
mov
and
imul
adc
int3
in
inc
or
dec
ficoml
xor
aas
outsb
fimull
iret
dec
sbb
pop
daa
in
fdiv
aam
add
mov
enter
sub
cmp
scas
xchg
and
repnz
stc
xchg
aas
js
loop
rcrl
push
xor
mov
jle
test
fnstcw
push
out
jl
xlat
mov
clc
xchg
insb
adc
lods
repz
daa
or
dec
sub
mov
pop
repz
rcl
pop
push
loopne
jl
subl
jl
stos
jl
and
push
push
in
xchg
xchg
mov
jae
sub
ret
jg
enter
outsb
loopne
repnz
into
sahf
out
daa
stc
mov
cwtl
mov
pop
fadd
xchg
jo
dec
mov
xor
cmpl
rorb
add
jp
enter
jb
xchg
sub
orb
or
loopne
or
push
iret
ja
fnstenv
popa
sbb
dec
out
mov
out
cli
imul
call
addr16
out
cmp
inc
bound
push
cmp
xchg
pusha
add
test
inc
shll
sarl
icebp
hlt
pop
aam
stos
es
sbb
fadds
ljmp
sub
inc
push
call
lahf
sub
mov
addl
dec
in
out
jle
fs
sbb
mov
mov
aam
int
xchg
jns
sub
ljmp
js
mov
inc
jg
test
mov
in
loope
or
add
cmp
or
xor
leave
cmpsl
cmp
mov
sarl
shll
sahf
xor
pop
mov
in
mov
out
mov
mov
inc
out
pusha
cvttps2pi
dec
dec
js
shr
in
pop
rclb
xchg
loope
mov
push
cs
test
adc
sbb
shr
pop
outsl
adc
add
adc
and
and
ja
popf
push
testb
jge,pn
mov
cli
mov
rcr
dec
jno
out
cmp
xor
and
sahf
stc
xor
ljmp
imul
sti
or
mov
push
enter
les
sbb
popf
xchg
dec
cmp
out
and
or
mov
add
incb
sub
sahf
mov
adc
add
out
lock
xchg
pop
xor
sbb
outsl
hlt
repz
popf
ret
je
mov
dec
mov
cmp
mov
sub
adc
popa
and
out
pop
out
cmpsl
fwait
das
xor
cmc
mov
insl
and
aam
sahf
inc
jge
cmp
and
add
jmp
mov
outsl
push
jno
or
lcall
fimuls
cmpl
and
xor
clc
call
mov
dec
mov
adc
jno
pop
pop
imul
cmpsb
aam
int3
push
movsl
and
sbb
xor
scas
fmulp
movsb
fildll
stc
in
mov
scas
sbb
mov
ret
cmp
mov
fsubrl
push
add
sbb
push
inc
int3
jb
imul
mov
push
add
jp
xchg
fiaddl
ret
adc
hlt
push
fimuls
mov
and
outsl
mul
addr16
adc
test
adc
xchg
mul
and
adc
or
cltd
push
jbe
and
pop
imul
shrb
jo
jnp
ljmp
push
sbb
jo
lret
cmp
rol
mov
adc
lret
mov
mov
cs
or
das
bound
xchg
sbb
push
dec
arpl
lods
mov
mov
push
mov
nopl
lods
or
lret
incb
pop
aam
les
mov
outsb
jl
rorl
add
fadd
cld
cmp
mov
mov
push
les
testl
in
mov
pop
loopne
cltd
mov
jp
cli
fistl
sub
push
lmsw
in
aad
mov
push
dec
jmp
je
jno
push
imul
adc
repz
mov
inc
loop
test
pop
or
jp
sahf
outsl
sub
push
xchg
clc
ret
sbb
mov
in
add
lds
or
push
ret
pop
ljmp
cmpsb
out
jl
out
fcoms
push
add
in
sub
push
jle
mov
mov
in
stos
jecxz
and
mov
jne
pop
mov
mov
out
xorb
xchg
pop
sub
test
dec
stc
add
mov
add
jmp
inc
mov
jo
stos
xlat
mov
inc
xchg
sbb
rorl
jnp
add
push
adc
or
pop
ja
mov
aas
ss
scas
ret
sbb
test
testl
insl
test
adc
xor
and
jnp
jl
mov
js
int3
jecxz
jb
lahf
adc
xchg
std
jae
pushf
roll
push
push
adc
pop
push
rolb
loopne
jb
sub
push
adc
cmpsl
enter
cmp
inc
aad
popa
nop
dec
xor
out
jle
mov
addr16
dec
scas
adcl
and
lret
lea
js
xor
dec
test
jl
xor
mov
inc
jnp
sbb
adc
loopne
mov
jp,pn
out
mov
or
movsb
cmp
inc
pop
jbe
orl
xor
out
out
mov
aas
jae
jecxz
repz
jb
jp
pop
out
mov
gs
test
push
mov
inc
testb
xchg
pop
push
mov
movsb
xor
loope
outsl
lods
jg
in
mov
in
push
pop
xor
cli
or
es
cltd
jmp
gs
loope
sbb
sub
aam
and
push
push
ret
sti
or
lea
sbb
nop
jg
adcb
cmp
bound
cmp
mov
or
call
bound
arpl
mov
int
push
jmp
aas
repnz
jno
shr
sbb
mov
push
mov
loop
arpl
sub
jge
les
adc
into
loop
rcrl
mov
pusha
mov
ljmp
push
scas
pop
les
xor
ljmp
sbb
cmp
mov
test
jne
jg
sub
ds
fnstcw
aad
pop
mov
int
jo
or
call
xchg
cwtl
dec
and
imul
movsl
or
rorb
sub
cmp
xor
call
test
lea
push
mov
fcmovb
jae
testl
mov
repz
ss
std
stos
stos
dec
inc
dec
fidivs
insl
paddusw
push
arpl
and
in
or
imul
xchg
les
mov
fimuls
xlat
fcomip
popa
cli
pop
cmp
dec
popa
jnp
in
fstpl
xchg
icebp
inc
push
sarb
leave
xor
outsl
loopne
test
or
cmpsl
popa
or
sbb
push
ficoms
mov
jae
or
push
sbb
xchg
test
or
in
lods
call
cli
std
out
inc
mov
pop
es
xor
aad
xchg
inc
adc
addl
jge
fisubs
aaa
jne
xchg
and
enter
mov
or
adc
or
lcall
pushf
pop
jb
or
out
jmp
sbb
ret
sub
les
movb
fcmovne
daa
and
fsts
ret
dec
out
bound
push
or
fstps
flds
add
or
cmp
adc
cli
jp
dec
and
aad
cmp
sbb
mov
or
mov
cmpsl
inc
pop
test
mov
cmp
pop
inc
push
jne
push
vpcmpeqw
mov
pusha
in
xor
imul
shll
xchg
dec
dec
test
lds
es
push
fstps
das
pop
icebp
sub
cmp
xor
test
mov
cmc
dec
jle
sub
aaa
loopne
shll
push
pop
push
mov
cmp
mov
stc
push
add
xchg
test
mov
xor
lret
and
es
outsb
cld
xchg
gs
insl
popa
imul
mov
add
add
aas
and
inc
cmp
xlat
mov
cmpsb
mov
and
dec
out
and
cmp
fsubrs
sbb
jns
lret
in
enter
dec
lret
sbb
repnz
mov
lret
lret
or
sub
sbb
stos
ret
mov
insl
push
ss
rcrl
iret
pusha
lcall
rorb
pop
xor
int3
sub
in
aad
jo
fstl
mov
xorl
sahf
sub
test
lea
mov
mov
mov
sub
aam
push
sbb
sahf
pop
sti
clc
ljmp
fildll
or
xlat
fstpl
add
cmp
out
shll
mov
push
mov
lret
xchg
jle
jno
dec
push
jae
pop
adc
push
imul
popf
jp
out
adc
xchg
jmp
or
dec
icebp
insb
fimull
inc
iret
sbb
sbb
repnz
push
mov
lret
cmp
push
neg
push
pop
std
bound
jp
mov
push
lret
mov
loopne
lret
gs
out
mov
cltd
xchg
sti
jbe
scas
jp
inc
outsb
push
pop
cmp
insb
test
sbb
push
push
jmp
js
shll
adc
sar
sahf
add
je
rcrl
adc
pop
xor
mov
shlb
ljmp
movsb
lret
in
fistpll
xchg
push
jge
push
xor
in
out
stos
icebp
scas
cmp
lret
sahf
push
xor
shrb
push
adc
push
frstor
cmp
fdiv
fwait
pusha
xchg
cmp
dec
clc
sub
out
movsl
add
cmpsb
or
addb
push
repz
sub
lods
and
scas
sbb
mov
adc
xchg
in
cmp
sbb
pop
cwtl
pop
fstpl
fs
fdivs
testb
test
cmp
movsl
mov
pop
mov
push
ret
sbb
emms
and
dec
jg
or
shll
cltd
movsb
pop
mov
and
jno
cld
flds
mov
pop
sahf
cmp
aaa
cmpsb
fwait
xchg
mov
into
rcrl
in
push
ljmp
int3
sub
pop
jns
mul
mov
mov
push
cmp
mov
fistpl
jo
data16
inc
xor
cmc
nop
jl
pop
adc
mov
and
lock
mov
and
pushl
inc
pop
notl
subl
xor
icebp
cmpl
lods
loop
lds
dec
iret
adc
cwtl
and
scas
sub
int3
or
mov
stc
loope
xor
sub
inc
jo
jb
xchg
push
mov
cmpsl
hlt
inc
add
adc
xchg
sbb
pop
xbegin
and
push
push
push
mov
popf
fidivrs
add
adc
roll
sbb
outsl
cltd
mov
aaa
test
and
std
cmp
sbb
xchg
mov
bound
mov
jo
adc
jmp
pop
mov
pop
inc
pushf
add
mov
push
or
mov
adc
sarl
pusha
in
pop
out
and
out
out
inc
jp
pop
outsl
iret
in
adc
mov
adc
cltd
push
lahf
pop
mov
xchg
and
jg
mov
push
inc
imull
pusha
lret
clc
and
scas
push
fists
mov
mov
loope
cltd
mov
loop
gs
cmp
fiadds
stos
mov
add
sub
movsb
add
xchg
inc
sbb
fbstp
cmp
jg
sahf
fwait
mov
push
or
mov
mov
lret
clc
lods
jnp
jle
jmp
js
dec
int3
pop
add
jno
pop
mov
stc
add
push
fdivrs
jecxz
adc
test
gs
das
push
mov
mov
mov
cmpsl
nop
mov
pop
imul
ljmp
mov
jecxz
js
push
lret
sbb
pop
mov
out
jae
pop
jmp
adcb
das
sub
adc
arpl
ja
fisttpl
xor
enter
inc
add
push
xlat
xor
mov
jo
je
mov
jmp
push
roll
adc
inc
dec
dec
mov
not
pop
lods
mov
pop
cmpsl
xor
cmp
jo
push
jae
adc
mov
ss
jge
mov
cmp
inc
je
push
jecxz
jo
in
andl
outsb
fstpt
cmp
xor
mov
adc
pop
jns
out
in
mov
mov
xchg
sub
jle
adc
out
push
mov
dec
xchg
xor
add
add
add
mov
in
xor
shrb
das
push
dec
cli
lcall
lea
and
mov
stos
mov
push
fimuls
or
js
xor
fdiv
adc
test
dec
or
xchg
fdivs
sub
adc
leave
out
xchg
pop
pop
push
mov
cld
ficompl
test
dec
mov
pop
ret
popa
mov
fimull
dec
sahf
rcrb
cs
and
sahf
and
add
cmp
push
xchg
insl
jmp
add
push
bound
xor
out
sub
or
push
decl
push
cmpsl
outsb
jecxz
hlt
pop
mov
xchg
pop
test
in
ret
bound
cltd
lret
xchg
repz
call
test
mov
mov
mov
push
inc
pop
mov
mov
add
and
add
cli
cs
cmp
or
xchg
lods
sahf
and
and
aad
hlt
mov
ljmp
lcall
test
fldt
push
adc
test
cltd
aad
mov
movsl
inc
sar
mov
xor
push
sti
out
fwait
push
lcall
sbb
or
addb
mov
dec
je
xchg
push
mov
cmp
mov
adc
and
and
push
mov
jae
inc
out
mov
leave
adc
cmpsl
clc
adc
fdivrs
dec
add
test
mov
in
mov
fsub
in
mov
lock
sarb
shrl
xchg
inc
movsb
lock
mov
test
xorl
or
pusha
mov
addr16
shll
jbe
cmp
inc
add
or
shrl
popf
push
mov
lods
jb
mov
je
dec
cs
not
mov
cltd
insl
push
cld
xchg
mov
mov
push
sbb
je
mov
sarb
int
int3
push
bound
les
out
fcompl
outsb
or
test
cmpsb
dec
enter
push
push
dec
xor
jns
xchg
or
clc
cmpsb
push
jne
xor
inc
stos
xchg
cmp
xchg
dec
jle
inc
lds
jne
cmp
xchg
filds
fdivrs
push
xchg
arpl
mov
mov
sbb
fimuls
mov
and
mov
or
pop
or
pop
cmc
pop
insb
sub
pop
or
dec
mov
inc
jbe
popa
shl
push
ret
lcall
inc
les
inc
push
dec
jecxz
mov
mov
or
stos
xor
gs
nop
sti
fdivp
lahf
inc
ljmp
add
xchg
mov
add
mov
jnp
xchg
ja
loop
push
inc
movl
pop
pop
sub
ljmp
cmp
mov
pop
out
shrb
popf
jns
sahf
leave
lcall
in
dec
mov
popf
loope
out
mov
das
sti
add
stos
adc
fcomip
xlat
or
filds
sbb
sti
dec
push
cmp
add
sarb
imul
xor
adc
inc
mov
test
sbb
xor
aam
cmp
stos
mov
pop
dec
sbb
xchg
mov
xchg
into
sahf
mov
jno
pop
arpl
cmp
mov
cmp
jp
pop
scas
or
lahf
push
sub
push
mov
lea
fs
arpl
add
cmp
jg
sub
pop
pop
stos
enter
push
mov
fldcw
lods
push
imul
rcll
lret
fnstsw
test
popf
cs
scas
mov
loopne
mov
sbb
rorb
sub
adc
scas
ja
xor
and
aam
adc
cmpsb
push
sub
mov
shrl
mov
dec
mov
int3
test
out
push
outsl
jne
out
sub
mov
mov
shll
cmp
nop
xor
cmp
clc
or
mov
mov
aam
in
lea
movsl
sbb
outsb
lods
pop
fs
mov
mov
fsubr
lahf
enter
push
dec
xchg
popa
mov
adc
outsb
std
sbb
in
aaa
jge
test
lcall
pop
sub
pop
push
movsl
jnp
dec
xor
mov
pop
mov
insb
roll
cmp
js
inc
xchg
adc
jae
add
add
and
xor
lret
loope
mov
out
and
add
push
push
leave
fucomi
jae
dec
mov
and
dec
jno
pop
or
push
cmpsb
push
in
push
cmp
cmp
xor
rol
sarl
sub
dec
ret
mov
mov
pop
mov
sub
out
out
clc
mov
xchg
outsl
movsb
push
mov
das
push
sbb
cmpsb
imul
mov
rcrl
xor
hlt
insb
pop
lods
xchg
adc
add
hlt
ja
xor
enter
repz
jg
test
rorl
or
adc
les
sahf
jo
les
xor
or
ds
push
jle
push
cwtl
mov
cld
inc
mov
inc
xchg
rcrb
and
inc
popf
sbb
adc
sbb
sbb
mov
mov
or
and
mov
jb
push
mov
xor
pop
xor
dec
sub
jb
in
pop
adc
movsl
in
lods
test
movsb
andb
out
jbe
test
mov
mov
or
pop
data16
adc
cli
pop
xor
nop
test
and
loop
jg
lods
lcall
xchg
dec
cmp
xlat
or
jecxz
xlat
jb
or
jb
dec
fiaddl
popa
pop
cmc
inc
sub
loop
adc
push
xchg
xor
data16
mov
aad
loope
adc
jp
fs
pop
pop
fistpll
jecxz
cmp
repnz
mov
jmp
cmp
fcmovbe
popa
pop
repz
sarl
sbb
mov
lock
imul
jmp
jmp
jg
jno
xor
adc
outsb
mov
stos
int
js
inc
mov
lret
and
pushf
cld
mov
dec
sbb
leave
das
shlb
adc
inc
enter
lock
filds
xchg
sbb
dec
mov
lcall
xchg
pop
clc
and
and
mov
mov
dec
xchg
test
and
inc
movsl
or
pop
aaa
xor
fsts
insl
loope
xor
push
jo
icebp
sbb
or
out
cmp
mov
scas
leave
cmp
je
jae
ljmp
inc
jno
xchg
data16
jno
bound
sub
ret
inc
insl
jae
sub
movsl
lcall
sbb
mov
jge
jae
add
mov
dec
xor
push
les
jb
das
data16
nop
jl
and
inc
mov
xor
out
push
pop
jbe
xor
add
lods
faddp
push
fildl
test
push
imul
sub
mov
push
nop
arpl
jmp
ss
nop
gs
test
insb
scas
in
pop
xlat
push
push
pop
mov
out
xchg
fistps
out
hlt
sub
gs
pop
sub
je
inc
mov
cmpsb
sbbl
mov
fisttpll
or
mov
dec
mov
push
sbb
lret
mulb
jecxz
push
cmp
adc
shlb
push
mov
mov
lcall
xor
scas
jb
pushf
stos
das
mov
lock
and
inc
ja
out
subl
daa
dec
dec
arpl
inc
fsubl
pop
fdivl
mov
cmp
lret
into
ss
push
lock
sub
jo
shl
fidivl
pop
leave
ja
add
ss
pop
int3
or
fcmovbe
fcomi
cs
arpl
incl
outsb
scas
pop
adc
mov
mov
shlb
pop
sbb
sar
jmp
lock
inc
jns
pop
imul
movsb
inc
push
ljmp
jg
fcoml
cwtl
ss
test
rdpmc
inc
adc
push
pop
rcl
shl
bound
mov
inc
xlat
shlb
arpl
pop
jl
test
xor
bound
arpl
je
push
adc
sub
jle
mov
filds
mov
lods
and
sbbb
in
add
aad
loope
lock
adc
aaa
and
jge
push
push
jae
adcl
jle
loop
xlat
push
inc
dec
sbb
ljmp
jmp
sub
adc
daa
aam
mov
adc
sbb
test
mov
mov
sbb
push
jmp
adc
push
jge
or
mov
imul
and
loope
pop
xor
int
mov
sbb
or
dec
inc
imul
lock
xchg
sub
mov
xchg
mov
loope
shrb
gs
enter
fs
sbb
scas
in
xor
xlat
int
dec
mov
mov
int3
test
jmp
mov
sti
shrl
jno
subl
testb
fs
dec
ja
pushf
test
mov
daa
leave
sbb
das
xchg
leave
ret
dec
sub
cmpsb
xchg
filds
popf
movsl
popf
lret
add
das
in
cli
cmp
push
int
mov
loop
fistpl
in
scas
movsl
xor
scas
jnp
dec
and
insb
cld
xchg
frstor
addl
loope
mov
cmp
popa
pusha
pop
adc
les
adc
push
push
sub
mov
inc
and
ljmp
push
pop
inc
adc
mov
xchg
xchg
push
inc
cli
mov
shl
cmpsb
outsb
fwait
add
xchg
add
sbb
push
mov
sarl
stos
cmpsb
inc
dec
push
lods
sub
pop
test
shl
into
je
test
lock
xorb
dec
js
sub
jg
in
xchg
pusha
lea
sti
loope
mov
xchg
aam
out
adc
sub
ljmp
inc
je
dec
stos
mov
push
daa
pop
lods
jne
cltd
sti
cld
mov
pslld
xchg
cmpsl
mov
sbb
xchg
lret
pop
jmp
outsl
outsb
lret
shl
les
pop
sub
push
dec
ror
out
and
int
push
sbb
cmc
clc
push
pushf
sbbb
add
lcall
daa
int3
add
lret
adc
sub
pop
jb
icebp
adc
inc
sahf
pop
lcall
and
pop
pop
mov
adc
push
cmc
int
jp
cli
lret
repnz
imull
out
sbb
mov
jne
ss
inc
insl
adc
mov
adc
jo
sbb
repz
or
inc
xor
mov
es
or
bound
mov
xor
out
into
xlat
sarb
pop
xchg
outsb
xor
aas
scas
and
repz
inc
cmpsb
imul
mov
xchg
sbb
mov
mov
jecxz
lret
lods
lock
mov
ja
mov
mul
out
pop
inc
in
jb
mov
lods
lock
fistps
test
push
call
icebp
or
cmp
and
push
add
pushl
lret
int
daa
imul
fisubrl
xlat
jne
lret
xchg
sbb
ljmp
dec
out
jp
mov
sahf
imul
adc
mov
mov
testb
and
push
lock
lods
sub
cmpl
add
xchg
cmpsl
sbb
jge
into
and
into
inc
dec
inc
add
aaa
jno
jae
ficompl
stos
bnd
fcmove
jecxz
sub
aam
lret
pop
mulb
in
mov
jae,pt
mov
and
movsb
shrb
iret
ds
xchg
mov
sbb
ficompl
mov
addb
pop
xchg
lcall
xchg
leave
mov
scas
rcll
and
fdivrl
inc
sub
sbb
gs
aad
add
pop
ret
adc
imul
xchg
or
mov
jnp
aaa
adc
cmp
pop
ds
out
xchg
lret
filds
leave
mov
and
mov
lds
add
xchg
xor
add
hlt
cs
enter
clc
jns
sti
sahf
add
adc
mov
jb
mov
test
cmc
icebp
aaa
jo
and
mov
fisubs
cmp
imull
lcall
in
xchg
imul
popf
ljmp
and
clc
or
lds
sbb
cld
mov
push
push
sub
cmp
scas
int
add
cmp
and
jns
sbb
cmpb
gs
mov
mov
lods
push
loop
inc
xorb
jb
aad
shlb
decb
dec
mov
lds
es
jno
xor
mov
and
dec
or
xlat
incb
roll
xchg
inc
pop
popf
out
test
icebp
push
data16
pusha
cwtl
addr16
push
pop
add
pop
orb
adc
mov
push
fldt
in
or
mov
movsl
stc
push
outsl
shlb
cwtl
addl
mov
sbb
imul
sbb
mov
pop
fwait
sub
pop
icebp
or
sub
cmp
xor
cmp
push
mov
test
or
dec
fcoml
out
das
inc
movsl
or
ret
jns
mov
icebp
xchg
and
lock
jle
lahf
inc
lret
mov
add
jle
mov
sahf
lds
bound
cmpsw
mov
addr16
popa
sbb
add
jecxz
push
add
adcl
adc
mov
in
outsl
test
xchg
mov
in
lcall
mov
std
or
cmpsl
add
nop
rcr
cmp
mov
shl
jge
pusha
push
mov
mov
inc
mov
sbb
cmp
cli
mov
jo
enter
int
push
shlb
fsubrl
xchg
pop
arpl
lahf
clc
fs
or
or
dec
mov
mov
and
mov
push
scas
mov
xor
adc
test
subl
xor
scas
adc
inc
in
fcoms
ljmp
push
adc
adcl
es
mov
jg
scas
pop
xchg
inc
rcl
push
push
mov
ficompl
jns
mov
xor
mov
sub
lret
int3
fsubrs
mov
adc
add
jns
mov
pop
addb
mov
and
leave
shrb
dec
dec
outsl
daa
add
stc
mov
data16
pop
add
rcll
lahf
cli
sub
mov
mov
jnp
mov
daa
xchg
jb
popa
inc
sbb
sbb
dec
ds
mov
fisttpl
push
mov
dec
loope
pop
push
add
inc
movsb
sub
lods
iret
inc
xor
insl
scas
test
out
and
xchg
jge
icebp
jo
loop
addr16
mov
in
out
mov
push
and
repz
cmp
insb
lahf
xor
insb
imul
enter
push
mov
std
cmp
inc
es
fnstcw
xlat
mov
dec
cmpsl
dec
xorb
xor
insb
ds
in
sbb
mov
adc
movsl
in
cli
or
push
pusha
int
fs
lret
out
jns
pusha
dec
mov
enter
xlat
stos
jno
mov
xchg
jbe
ja
push
mov
test
jmp
push
and
test
fwait
mov
jecxz
aad
jnp
in
and
xchg
add
dec
adc
xchg
mov
jo
jl
lods
pop
repz
dec
imul
mov
cmpb
loope
mov
jae
pop
ss
in
movsl
call
sub
sub
mov
mov
push
aam
sti
lds
and
outsl
lock
pop
sbb
push
fs
pop
enter
mov
das
mov
in
jl
mov
mov
into
jmp
jecxz
in
push
insl
hlt
sbb
push
cli
dec
or
cltd
inc
mov
pusha
push
bound
js
sbb
mov
mov
xchg
popa
loop
jecxz
insl
mov
pusha
xor
aad
inc
add
xchg
sub
sbbb
es
or
js
movsb
es
insb
js
cltd
int3
pop
popa
repnz
sub
mov
jle
jmp
push
mov
pop
stc
lock
fwait
or
cwtl
sbb
lock
cmp
mov
je
movsb
dec
mov
inc
aaa
xchg
mov
rorb
scas
sub
je
in
movsl
jae
pop
mov
daa
mov
mov
lret
aad
mov
mov
shrl
insl
mov
sbb
lods
aaa
in
sti
cmp
fsubrl
mov
or
clc
xorl
sbb
lret
sbb
inc
mov
out
movsb
mov
lahf
inc
lea
js
mov
movsb
mov
sbb
stos
sbb
jmp
iret
ja
test
je
mov
dec
xor
ds
jb
and
mov
xchg
cmp
and
mov
movsl
add
xchg
and
or
jns
fbld
aam
xchg
jle
and
dec
push
or
pop
sbb
push
pop
mov
xchg
add
call
into
stos
cld
mov
idivb
adc
mov
sti
lcall
and
in
push
movsb
cmc
jmp
call
xor
cltd
or
int
mov
xor
lea
pushf
jl
xor
fimuls
aaa
mov
mov
sub
int3
test
xchg
out
jl
scas
push
jge
stos
stos
sti
xchg
mov
cmp
das
lds
dec
xor
cmc
scas
movsl
testl
cmpb
sbb
out
pusha
mov
testl
xchg
fnsave
add
lcall
cld
cli
jo
dec
mov
cmp
cs
and
sbb
jns
jo
push
test
daa
mov
push
insb
add
pop
jae
adc
adc
cmpb
and
in
cld
mull
call
cmp
popf
add
cld
xor
icebp
loop
jnp
into
aas
xlat
or
adc
jno
movsb
je
cli
sub
rsqrtps
in
push
push
jne
mov
lret
dec
mov
je
adc
add
jle
push
aam
nop
adc
push
or
xchg
mov
retw
ret
xor
inc
outsl
push
shll
cmpsb
outsl
inc
add
cwtl
inc
xor
xor
sti
sub
adc
int3
push
adc
bound
mov
dec
jns
jns
pop
xor
outsl
jno
sbb
xor
jecxz
sbb
iret
xchg
pop
repnz
mov
insb
sbbl
test
incl
xor
jne
stos
sub
xor
and
xor
adc
shll
cltd
insl
les
jmp
mov
xor
xchg
mov
ficomps
push
or
insb
hlt
cld
je
or
adc
sub
sbb
adc
bound
xchg
int
out
js
les
add
sub
addl
jl
or
sbb
lods
loopne
sbb
sahf
xor
inc
leave
sbb
ds
sub
mov
repz
mov
mov
push
xchg
sbb
adc
sub
ljmp
int
sahf
gs
lret
add
sbb
movsl
push
sub
ljmp
or
lcall
sbb
mov
ss
dec
sub
fwait
or
and
js
xor
sub
jmp
and
and
xor
mov
or
addr16
shlb
aad
sub
cmp
fadd
sub
adc
pop
xchg
inc
adc
movsb
xchg
inc
pop
dec
adc
dec
nop
dec
mov
nop
insb
scas
mov
pop
cmp
jae
lret
or
dec
mov
pushf
dec
mov
mov
push
push
sbb
fs
push
les
js
cld
je
adc
xor
in
lds
mov
cmp
cmpsl
int3
push
in
jg
add
dec
out
push
xor
jl
or
dec
outsb
sub
and
jae
xchg
hlt
mov
les
ret
xor
push
pop
test
and
enter
push
gs
pop
addr16
mov
mov
frstor
cmc
push
fwait
jo
test
test
lret
mov
int
xchg
dec
adc
xchg
dec
cld
mov
inc
xor
adc
bound
into
inc
fsubs
mov
pop
push
jnp,pt
aam
push
dec
mov
xor
adc
dec
gs
mov
add
jmp
add
jns
sbb
cmpsb
dec
sub
sub
cmp
push
ja
inc
mov
cmp
add
movsl
xchg
movsb
fimuls
incl
xchg
mov
in
lock
pop
hlt
mov
mov
ret
sti
sti
xchg
xor
test
mov
pop
inc
xor
pop
add
dec
inc
sbb
inc
mov
std
push
xor
adc
pop
inc
jl
sub
push
imulb
mov
leave
jae
test
aas
loop
mov
fs
push
ret
out
insb
mov
clc
sahf
addr16
sbb
stos
dec
mov
loopne
out
mov
mov
or
aaa
xchg
push
dec
inc
ret
lahf
mov
ljmp
mov
rolb
lret
cmp
inc
pop
push
jo
ret
pop
loope
loopne
mov
cmp
xchg
cmpsb
out
inc
mov
xchg
add
inc
xor
lea
std
sti
packsswb
mov
xchg
mov
data16
mov
je
sub
sbb
and
call
into
sub
cmc
out
int3
cwtl
sbb
push
mov
test
dec
mov
ret
push
xchg
test
mov
scas
inc
scas
fisubs
jge
mov
ja
cmp
jp
imulb
inc
push
mov
outsb
out
inc
jge
pusha
mov
jg
ja
or
out
xchg
out
sahf
xor
xor
dec
daa
push
sub
inc
mov
inc
push
mov
loope
loopne
mov
pop
into
fnstsw
sbb
lea
mov
mov
out
mov
dec
cmovae
pop
add
std
or
sub
mov
in
test
push
fwait
lret
xchg
pop
cmp
pop
add
pop
xor
add
and
xlat
xchg
jecxz
aad
inc
loope
idivl
xor
div
popf
add
je
sub
xor
push
in
mov
sub
stos
inc
repnz
pop
dec
cli
dec
or
jmp
fistl
stc
decl
mov
or
jl
mov
adc
push
mov
xlat
adc
je
xchg
test
movl
inc
push
xor
frstor
ficompl
xor
rol
dec
lcall
mov
dec
xchg
hlt
cwtl
shrb
push
aad
sub
ror
or
pop
shlb
cld
nop
and
mov
sbb
sub
andl
in
dec
xor
and
pop
insl
int
daa
popa
mov
xchg
out
inc
mov
pop
cmp
aaa
cld
imull
lods
cmp
jae
aad
jle
in
xchg
cmpsb
jns
jl
xchg
push
jl
jge
fcompl
mov
jbe
adc
fadds
fistpl
cwtl
lods
mov
out
and
xor
out
fistpll
js
mov
test
ljmp
out
ret
inc
mov
adc
enter
rcrb
cltd
mov
adc
ja
inc
jns
inc
jl
mov
das
pop
or
int3
rcrl
adc
mov
push
adc
lds
insl
rcll
xor
hlt
adc
ret
aaa
and
sbb
mov
movsl
js
lcall
xchg
rcrl
mov
int
addb
repnz
xchg
data16
xchg
xor
mov
mov
push
pushf
sbb
scas
mov
mov
inc
jns
shll
mov
aaa
mov
fstp
pop
push
push
or
pop
mov
cli
outsl
xchg
and
notl
lock
push
out
bound
dec
pop
stos
lods
cwtl
fcomps
add
adc
xor
icebp
jl
xlat
adc
cmp
pushf
out
sub
aaa
mov
mov
bound
xchg
push
aam
movsl
add
push
enter
es
cmp
push
lea
mulb
popf
dec
mov
jo
fstps
mull
push
add
push
jo
repz
mov
jo
sub
addr16
ds
adc
outsl
push
shll
enter
mov
loop
iret
testb
or
pop
ds
fimuls
out
test
lcall
pusha
sub
mov
xor
xor
jg
cmp
sahf
mov
xchg
out
mov
lcall
stos
fs
std
add
and
xchg
popf
pop
cmp
pop
addr16
xchg
and
mov
int
mov
xchg
or
add
ja
repnz
and
inc
in
mov
lret
jmp
sub
push
and
orb
jne
jnp
push
cmp
outsl
stos
cltd
add
mov
cmp
xchg
inc
cmpsl
sarl
cmp
test
scas
lods
mov
sub
cld
sub
and
mov
fists
push
pushf
sub
aad
xor
mov
sub
jmp
lds
imulb
mov
int3
and
mov
push
orl
sbbb
test
pop
cmp
add
sbb
fisubrl
jns
ret
movsl
inc
xchg
iret
insb
jle
mov
xchg
sbb
outsb
clc
cmp
cmpb
rcrb
jno
push
mov
aas
adc
fucomp
add
inc
xchg
push
dec
cpuid
sti
xchg
sbb
mov
adc
adc
mov
cmc
imul
pop
mov
lds
pop
sbb
cwtl
outsl
int
mov
cmp
jnp
and
xor
out
and
fistpll
mov
dec
cmc
jle
push
adc
jnp
gs
mull
or
adc
cmp
iret
loope
dec
fadd
adc
scas
cmp
aas
or
hlt
sub
imulb
shrl
mov
xchg
push
xor
dec
sbb
aad
cmpb
sbb
das
inc
cli
pop
pusha
mov
pop
hlt
xchg
mov
sbb
outsb
xchg
pop
mov
out
test
clc
int
pushf
mov
ljmp
cmpsb
adc
pop
sti
sbb
inc
data16
movsb
int
scas
pop
sahf
stc
in
xchg
or
daa
stos
lock
pusha
xchg
dec
sub
mov
lahf
sbb
out
sbb
xchg
movb
call
mov
jg
xbegin
xor
push
inc
outsb
add
xlat
add
mov
sbbl
xchg
pop
cld
mov
popf
into
push
ret
dec
jle
mov
ljmp
lea
subl
jbe
mov
call
fists
xor
xor
call
in
adc
lahf
cli
push
mov
pop
std
sbb
std
mov
shld
push
es
jmp
mov
sub
or
scas
and
pushf
sub
mov
jle
and
cmpsl
push
popa
jp
pop
and
aas
xor
adc
inc
cwtl
je
lods
adc
cmp
jno
xchg
lret
mov
aad
sub
xor
xchg
les
mov
in
pop
mov
roll
cmpsb
sbb
dec
jl
or
mov
pop
xchg
fnsave
fwait
testb
xchg
push
and
pop
lret
dec
rcll
lret
push
jb
mov
adc
adc
pop
or
mov
adc
div
jg
dec
xchg
add
mov
push
loop
outsb
mov
repnz
sbb
sbbl
push
push
stc
outsl
mov
xchg
add
popa
lds
add
sti
out
or
add
jg
popa
cmpsb
mov
and
add
xor
mov
mov
jns
push
mov
pop
dec
lea
clc
popf
popf
int3
popa
inc
push
add
repz
xor
sbb
aam
mov
fwait
add
lcall
cmc
push
jne
or
xchg
xchg
adc
cmpsb
ja
jb
mov
xorl
sbb
scas
das
push
pop
sbb
adc
out
in
bnd
dec
push
aam
lods
push
or
jl
fcmovnu
xchg
insb
add
adc
pop
add
arpl
push
out
sbb
stos
aam
cmp
das
xchg
xchg
outsl
pusha
jge
sbb
cmp
fucomi
dec
mov
pushf
fstpt
xchg
fcoml
into
jne
adc
aaa
imul
loope
push
out
mov
ljmp
ret
sbb
cmpsb
xchg
xchg
bound
dec
push
dec
mov
or
xor
xchg
addb
outsl
sub
dec
es
in
les
sbb
and
sub
dec
jmp
xor
lret
mov
push
out
movsb
xor
idivl
hlt
mov
jmp
int3
aas
cmp
das
dec
lcall
dec
or
pop
jmp
inc
inc
adc
mov
outsb
stos
mov
out
mov
subb
push
dec
mov
pop
pop
insb
and
push
or
in
cs
dec
dec
adc
push
adc
aas
mov
add
aaa
jg
inc
mov
adc
and
and
es
cmp
leave
mov
mov
mov
and
push
lock
std
dec
inc
push
dec
inc
popf
jecxz
inc
fwait
bound
dec
sub
xor
jge
icebp
cmpsl
pop
cmp
push
movsl
adcl
add
push
mov
sub
push
gs
pop
fbstp
call
lods
push
pop
outsb
push
inc
addl
sub
cmp
aam
pop
mov
inc
cld
stc
and
xor
inc
in
hlt
adc
sbbl
int
repz
inc
sbb
lcall
jnp
movsb
int
sbb
xchg
cmp
das
lds
mov
out
fimuls
push
rolb
jnp
fwait
mov
dec
into
jge
cmp
cwtl
pop
sub
inc
shr
or
data16
cmpsl
or
sbb
clc
lock
xchg
cld
clc
filds
dec
push
enter
mul
mov
int
pop
push
sbb
ret
jbe
stos
in
hlt
push
orl
imull
dec
cmpsb
negb
out
das
mov
test
sub
mov
mov
loop
mov
mov
addr16
pusha
cmpl
add
mov
push
pop
dec
lds
xchg
jp
pop
jecxz
into
sub
lock
outsb
cltd
add
lret
leave
cwtl
sbb
mov
lret
mov
notb
std
or
cmc
xor
cmc
lods
or
pop
jp
hlt
push
scas
fsubrl
mov
pop
xchg
mov
das
loope
cmp
scas
fcompl
idiv
or
sbb
adc
push
xchg
hlt
mov
imul
mov
cmpsl
cmp
shl
jns
cmpsb
pop
and
into
pop
mov
lcall
cmpl
or
jmp
scas
xor
xor
imul
cwtl
or
cltd
inc
xor
js
xchg
insb
mov
mov
sub
cmp
outsl
and
push
xchg
js
mov
jmp
and
out
popf
roll
dec
adc
loop,pt
incl
jge
or
mov
imul
mov
addr16
ror
inc
push
pop
jbe
mov
arpl
push
out
inc
ret
xor
adc
push
iret
gs
ds
jge
push
into
sub
ljmp
popf
iret
in
les
push
decb
and
bound
xor
xor
add
jecxz
pop
imul
push
rcrl
push
adc
lahf
fwait
hlt
mov
or
pop
scas
pushf
loopne
jae
lods
pusha
push
call
dec
add
sub
push
cmp
jmp
inc
xor
cmp
mov
orb
cld
mov
in
cmp
dec
pop
imul
lds
xchg
jle
cmp
push
aaa
fwait
pop
cli
mov
add
popf
bnd
ret
insb
adc
loope
sbb
fisttpl
mov
and
lret
sub
bound
push
adcb
in
fucomip
add
shll
xchg
sub
inc
push
divl
ss
jg
jp
mov
iret
ret
addr16
ror
or
call
jnp
sub
cmp
in
int
das
loope
sbb
sub
xchg
stc
call
cmp
pop
pop
dec
fsts
inc
cmp
cmp
loope
push
int3
loopne
add
movsl
rcl
imul
adc
lock
xchg
mov
lea
nop
mov
gs
lods
mov
and
sub
es
jp
lds
mov
fistps
xchg
or
loop
jo
pop
and
js
xchg
dec
fiadds
mov
pop
fdiv
test
push
sbb
sbb
out
dec
pop
mov
push
cmpb
cmp
cltd
out
push
pop
mov
or
sar
mov
dec
ss
fnsave
adc
andb
or
xor
gs
imul
call
mov
and
jnp
xchg
or
jmp
xchg
out
shl
int
cld
pop
lods
int3
mov
shrb
cli
mov
xchg
dec
std
int3
dec
push
mov
cmpl
les
push
or
scas
adc
into
pminub
push
mov
push
mov
dec
daa
fwait
mov
xchg
in
add
cmp
mov
mov
pop
push
repnz
int3
mov
bsf
or
inc
aaa
fistl
sbb
inc
ljmp
ss
xor
outsb
andl
xor
rcll
push
xor
mov
fistpl
fidivs
orb
ret
lcall
jo
clc
dec
mov
fs
jmp
das
add
jno
mov
cmp
clc
adc
fmul
cwtl
fcomip
aas
mov
lret
cmp
pusha
jl
and
in
mov
or
push
hlt
mov
aam
insb
clc
rcrb
mov
fidivrs
inc
lock
jl
sarb
iret
shrl
in
cmp
adc
xor
mov
loop
int
pop
into
sub
xor
mov
fadds
xor
jle
xchg
mov
push
inc
push
sub
imul
dec
ljmp
out
push
lods
fsubr
mull
rolb
mov
dec
out
mov
fbstp
push
mov
cmpsb
loop
sbb
mov
ss
lcall
jb
test
cmpsb
xor
test
popl
cmp
jo
les
jno
sbb
sub
dec
out
imul
mov
out
mov
scas
add
ficoms
pop
int3
push
inc
lcall
cmpsl
jns
out
imul
pop
sub
mov
clc
arpl
scas
icebp
arpl
cmp
push
addr16
ds
popa
jnp
or
adc
in
icebp
sbb
shl
insb
outsb
call
jo
xchg
in
shll
inc
cli
out
inc
sub
xor
mov
test
inc
mov
jmp
das
fdiv
xor
mov
repz
loopne
pop
movsl
popf
fisubl
hlt
pop
push
jge
mov
fstpt
adc
lods
ss
out
lea
out
leave
fcmove
mov
repnz
mov
inc
icebp
jp
stc
mov
inc
int
out
add
mov
in
ds
filds
jo
das
test
jnp
dec
xor
cmc
and
sahf
insb
add
mov
mov
mov
and
in
adc
sarb
adc
xor
pop
push
and
popa
std
sub
arpl
dec
cmp
mov
pop
mov
sbb
and
rcll
inc
mov
push
jbe
popa
loop
adc
test
in
push
xor
dec
dec
jae
mov
xor
subl
xor
mov
mov
bound
inc
mov
cmpl
lcall
mov
es
pusha
ficomps
cwtl
fldl
mov
testb
aaa
repz
jo
stos
mov
xchg
add
les
xor
mov
cli
sbb
push
and
cmp
out
test
push
cltd
into
mov
fidivl
nop
inc
out
add
int
mov
fs
fmuls
shrb
pop
sub
lahf
sysenter
iret
cli
xor
adc
pop
inc
std
mov
push
mov
inc
sbb
in
mov
pop
je
loopne
iret
xor
out
dec
lea
or
jns
jns
push
dec
xchg
cmpb
cltd
fs
push
shrb
or
sti
mov
push
out
fstps
dec
cwtl
fwait
mov
mov
shlb
out
test
jmp
in
add
call
loope
cs
daa
in
push
aad
xor
pop
loop
sub
lea
out
iret
sti
inc
mov
push
imull
jl
xchg
lret
lcall
sub
sub
dec
dec
dec
mov
enter
or
es
and
loop
cmp
mov
fildll
push
or
call
xchg
xor
fstps
push
mov
imul
xchg
adc
mov
cmc
fistpll
aam
adc
rorl
mov
es
adc
jp
push
inc
stos
sbb
fdivrl
aas
popa
jl
xor
out
push
insb
push
sub
pop
inc
lods
cmc
adc
mov
inc
out
andb
xchg
out
xchg
leave
mov
jo
jbe
push
mov
mov
in
xchg
scas
cmpsb
sub
addr16
daa
dec
idivb
add
jno
cld
aam
adc
loop
fcoml
and
pop
sbb
adc
in
jnp
loop
jae
push
ds
ret
stos
mov
xchg
and
mov
pop
shr
enter
ss
jnp
push
cmpsl
adc
arpl
or
xor
and
pop
call
push
push
pop
push
adc
xacquire
mov
popa
push
cwtl
sbb
and
mov
jns
mov
in
and
pop
sbb
fildll
fstl
enter
aam
and
pusha
out
cmc
mov
add
push
and
xor
call
icebp
or
sbb
dec
inc
jmp
lcall
dec
decl
jnp
sub
fwait
ljmp
outsl
jns
mov
mov
lea
mov
lret
in
sbb
sub
push
loopne
dec
hlt
sub
js
fsubl
movsl
addr16
cmp
shll
mov
or
xchg
fistpll
inc
pop
push
sti
jbe
daa
cs
test
pop
push
std
rorb
mov
lods
test
cmp
loop
outsb
loop
inc
test
push
jnp
fcompl
bnd
cmp
and
mov
stc
inc
icebp
cmp
xor
push
sbb
clc
outsb
mov
out
int
pop
shr
jle
out
nop
xor
popf
lret
jne
imul
adc
mov
add
or
jmp
xchg
jge
popf
jmp
cli
ss
sbb
or
pop
cmpsb
inc
les
jmp
xchg
adc
bound
xor
dec
pop
into
mov
and
xor
add
jnp
lcall
xchg
jo
xlat
lock
test
dec
addr16
sub
jbe
sub
add
mov
ds
mov
mov
mov
cmpsb
xchg
mov
dec
loop
ds
cmp
jbe
scas
adc
jne
addr16
cmp
and
out
xor
mov
das
jb
arpl
jmp
xor
sahf
jmp
xor
iret
imul
and
pop
testl
loope
or
es
mov
scas
sub
cld
sbb
test
aas
jb
sub
das
rcll
mov
mov
jecxz
mov
sbb
sub
add
mov
outsl
mov
mov
mov
jne
inc
data16
cmc
outsb
inc
sbb
mov
ds
jo
jp
cmpb
mov
sbb
xchg
adc
sbb
push
das
mov
and
inc
push
adc
ja
imul
xchg
pop
enter
popa
insb
xor
push
lods
test
into
inc
out
pusha
cmpsb
push
xor
repz
dec
xor
repz
adc
dec
loope
clc
xor
lods
scas
clc
je
cwtl
inc
mov
int
mov
ror
enter
sub
and
or
ljmp
call
mov
cmp
dec
iret
jb
push
or
lock
pushf
jmp
add
jns
gs
ljmp
andl
enter
pop
aas
sbb
hlt
data16
cmovae
xchg
rcll
mov
push
adc
jno
mov
ss
int3
lret
out
cmp
mov
mov
xor
insb
mov
pop
les
loope
pushf
out
cmp
mov
orl
loop
jl
stc
pop
loop
lock
push
sti
stos
add
movsb
xchg
jno
xlat
test
fsubrl
lock
ja
rcrl
stos
mov
and
or
roll
outsl
dec
jnp
mov
pop
call
pop
xor
xchg
popa
cmp
dec
pushf
imul
jle
adc
roll
in
mov
push
mov
pushf
jnp
pop
adc
mov
pop
call
cmpsb
mov
dec
mov
pop
sahf
std
cmp
mov
subb
std
rorb
int
mov
push
and
xor
dec
cwtl
inc
add
dec
sarb
ljmp
push
in
push
and
flds
inc
pop
outsb
sub
push
xchg
jecxz
xor
scas
pop
push
mov
aam
pop
aas
sti
dec
dec
lret
cwtl
push
fld
ret
mov
cmp
mov
or
jns
push
shlb
out
inc
insb
lock
pop
ret
push
ficompl
cwtl
scas
test
pop
sub
mov
out
subl
cmp
cltd
mov
xchg
cmp
jmp
lret
add
push
sti
push
repnz
adc
pop
jecxz
or
rcrb
lock
mov
mov
jle
mov
in
loopne
xchg
and
xchg
sarb
mov
int
in
pop
shll
mov
fnstcw
sbb
xchg
jo
jg
hlt
jmp
or
cmp
push
pop
in
dec
push
mov
sub
imul
js
gs
jb
out
push
addr16
dec
fmull
adc
adc
sub
jle
sub
addr16
mov
scas
clc
out
pop
push
lea
pop
xlat
jp
push
dec
lock
xchg
enter
xor
arpl
push
or
xor
movsl
cltd
push
jmp
clc
xor
imul
lahf
lret
popa
sti
mov
sbb
xchg
xchg
and
mov
dec
jo
psrld
arpl
fiaddl
xorb
xchg
jb
cltd
in
inc
push
and
scas
dec
push
mov
sub
out
je
int
jecxz
out
push
daa
and
insl
xchg
loop
mov
pop
out
mov
loop
push
leave
int3
fnstenv
lret
inc
cli
ret
jmp
mov
xorl
dec
sub
jmp
jge
jae
pop
cmp
dec
adc
lods
xor
faddl
xchg
lahf
xchg
outsb
leave
pop
inc
adc
lea
jne
mov
mov
xchg
jne
push
mov
jns
out
xor
int
push
push
ret
jecxz
xor
outsl
sub
xchg
lea
mov
fnop
adc
mov
cwtl
push
clc
xlat
stos
xor
imul
arpl
sti
jno
xchg
iret
inc
dec
pop
int3
add
cmpsb
jno
mov
cwtl
jae
insb
mov
mov
and
cmp
fsts
clc
mov
mov
add
fs
lods
in
les
jns
aam
dec
mov
adc
fcoms
jg
jmp
pop
fistps
inc
lret
pop
or
cmp
inc
sub
mov
add
je
mov
aas
les
scas
cmp
sbb
decl
out
push
pop
ss
mov
ret
jg
mov
icebp
adcb
aam
jne
stos
add
pushf
fwait
sbb
int3
pop
or
push
mov
add
push
test
aad
mov
fdivl
mov
mov
repnz
sub
sti
js
fldl
icebp
mov
ret
das
xor
mov
lret
cmp
lret
int3
inc
sbb
pop
and
dec
jge
outsl
or
jnp
jg
sbb
inc
jecxz
and
insb
push
dec
stos
fbld
ljmp
sti
pusha
add
pop
mov
adc
verr
jne
xor
add
and
push
aas
mov
jae
jno
stc
dec
sbb
add
fidivl
aad
int3
movsl
mov
adc
lcall
pop
push
pop
mov
push
fistpl
iret
sarb
loop
pop
inc
bound
inc
mov
adc
mov
add
push
arpl
ss
pop
push
jge
cld
jle
test
dec
scas
xchg
and
ljmp
popa
lahf
push
add
outsl
or
sub
mov
cmp
mov
mov
push
pop
shrl
pop
inc
adc
pop
dec
xor
mov
add
jbe
in
push
inc
sbb
aam
ss
lret
arpl
push
shrb
in
adc
mov
lret
sbb
lea
dec
loope
scas
ljmp
pop
icebp
outsl
sbb
imul
pop
popa
daa
or
movl
cmp
push
das
mov
sub
mov
nop
pop
lods
adc
push
xchg
outsb
mov
mov
pop
push
cmp
fimull
out
cli
btr
fmulp
push
sti
mov
cmp
fsubl
shl
sbb
clc
inc
dec
adc
aaa
add
test
aam
js
mov
stos
mov
fnstenv
dec
inc
enter
push
ds
mov
ljmp
sub
sub
fiaddl
in
sbb
adc
jp
xor
xor
gs
outsl
add
jb
testb
outsl
cmp
out
mov
test
rolb
loope
bound
jecxz
lea
outsb
lcall
mov
pusha
push
mov
ss
xlat
mov
mov
xor
pop
mov
jno
cmp
fstpl
movsb
pop
pop
lahf
shl
in
shll
adc
ss
shl
jno
hlt
leave
in
and
aad
xchg
cmp
adcl
or
stos
es
xchg
nop
add
xor
in
leave
jnp
jns
fdivs
push
push
insl
ret
pop
pop
call
pop
mov
filds
pop
mov
and
mov
xor
pop
outsl
dec
sbb
movsl
insl
jmp
pop
mov
pop
xchg
andb
add
mov
cmp
lret
jmp
mov
xchg
mov
and
imul
das
sbb
adc
imul
dec
ljmp
rolb
xor
jbe
jp
lock
inc
add
jl
push
sahf
pop
sbb
jae
in
inc
mov
xchg
gs
ret
sub
xchg
pop
and
mov
xor
cmc
arpl
cmp
aad
bound
or
pop
pop
leave
jle
dec
xchg
test
imul
fs
fdivs
push
cmc
and
cmp
sbb
jl
xlat
cmp
stc
insb
data16
pop
mov
int3
fldl
adc
enterw
dec
mov
mov
pop
xor
pop
mov
jg
fildll
sub
mov
and
subb
ljmp
or
dec
sarl
mov
hlt
popa
pop
cltd
cmp
test
gs
aas
insb
sbb
push
loop
and
loope
push
push
sbb
jo
sbb
jno
das
dec
mov
pop
xor
test
pop
stos
mov
mov
push
dec
mov
cmp
xlat
xchg
inc
mul
add
sbb
push
mov
data16
andb
dec
mov
fsubl
insb
cmp
imul
cmp
lds
popf
pop
das
mov
pop
test
jbe
dec
mov
inc
push
decl
sub
add
and
sahf
push
adc
pop
sub
mov
repz
ds
idiv
jb
ret
pop
push
insb
dec
pop
jl
xchg
loopne
or
sbb
fs
iret
clc
cmp
mov
xlat
repz
sub
mov
inc
loope
dec
sbb
cmp
loop
mov
xchg
sub
mov
loop
testb
jb
pushf
test
jecxz
push
mov
daa
andb
jo
inc
dec
xor
or
adc
mov
inc
incl
in
call
push
xor
and
dec
and
aam
addr16
cmpsb
out
ja
adc
adc
jg
mov
mov
sbb
xchg
adc
mov
mov
sbb
sub
inc
dec
ss
push
and
outsb
pop
test
test
jle
test
or
jnp
inc
inc
rorb
je
xchg
mov
rol
shl
mov
ljmp
cli
sub
or
push
adcl
dec
add
out
repz
outsb
lock
sub
add
mov
and
enter
sbb
fxam
imul
iret
lahf
xchg
pop
std
out
insl
mov
pop
in
lahf
and
push
fdivr
into
or
jg
mov
subl
dec
in
push
mov
mov
add
adc
outsb
adc
ds
lea
mov
lock
mov
fimull
dec
push
lret
cmpsb
stos
sti
in
inc
test
shll
jo
jnp
shll
mov
out
push
mov
mov
jg
ja
mov
push
sub
insl
xchg
out
xchg
addr16
pop
addr16
xor
sbbl
iret
push
lods
xor
in
lds
inc
sub
add
inc
or
sahf
clc
scas
mov
jbe
adc
push
cmp
cmp
jae
mov
adc
cmpsl
push
mov
mov
lret
jbe
sub
movsb
and
push
mov
ljmp
pusha
repz
and
lock
sbb
mov
iret
sbb
adc
dec
inc
cmp
movsl
jb
pop
pop
mov
int
xor
xchg
mov
adc
je
and
rcrl
fidivl
orl
loopne
adc
and
fimull
mov
dec
addl
inc
jg
xor
lods
imul
es
mov
push
mov
iret
jmp
push
pushf
or
movl
outsl
cld
jecxz
sbb
or
push
psllq
aad
test
sbb
nop
shl
cli
in
ljmp
mov
data16
xchg
pop
inc
xor
sbb
and
xchg
pop
pop
cmc
mov
jle
push
loopne
dec
movl
enter
dec
fwait
vpsadbw
xlat
iret
xchg
jnp
push
mov
andl
adc
mov
xchg
mov
pop
dec
and
stos
mov
test
push
push
bound
mov
jno
mov
push
outsb
loopne
dec
test
mov
pop
lods
daa
aas
xor
scas
inc
jmp
pop
sti
sbb
mov
fstpl
sub
call
iret
hlt
rcll
add
or
cmp
push
enter
jg
cmp
fs
pop
int3
dec
cmp
adcb
mov
xor
loop
rorl
xlat
sub
inc
and
in
outsl
jmp
inc
je
out
xchg
clc
pop
inc
sub
pop
jp
fcomp
mov
sbb
aad
mov
aaa
scas
push
ja
mov
stos
lcall
stos
jmp
and
inc
icebp
pcmpgtw
hlt
inc
jnp
mov
xchg
lea
pop
jp
cmp
and
cmp
mov
inc
jecxz
rclb
adcl
mov
stos
add
loope
sahf
or
loope
aas
loop
out
lcall
cmp
add
cmc
cmc
sahf
icebp
sub
xchg
nop
and
int3
shrl
sub
fwait
sub
mov
and
jmp
imul
inc
sarl
push
pop
fs
sub
push
jmp
xor
cltd
mov
dec
cmpsb
and
jbe
pop
pop
insl
sbb
dec
mov
mov
lods
test
gs
mov
adc
pop
push
mov
push
mov
movsb
mov
sbbl
mov
test
inc
mov
insl
jo
xchg
int3
mov
sbb
jl
movsb
sbb
insl
out
out
popf
and
into
and
pusha
xchg
mov
xchg
leave
push
push
ret
mov
push
cld
sbb
js
addr16
fcompl
cltd
mov
ret
loopne
decl
lods
fstps
jge
fbld
sub
insl
lock
add
pop
repnz
mov
mull
pop
scas
inc
pop
sbb
outsb
mov
stos
mov
cmp
lods
ficoml
ja
aas
rcll
scas
jg
lock
fstpt
stos
push
ficoml
fldl
dec
push
cli
inc
cmp
pop
add
mov
outsl
fidivl
in
sbb
mov
pop
push
lahf
dec
add
inc
inc
mov
mov
mov
mov
lods
mov
scas
xor
pop
insl
mov
ror
pushf
test
pusha
xchg
rorb
testb
ror
jne
push
lds
push
lds
mov
pop
aas
test
add
add
korw
ss
push
mov
sbb
jl
xor
ljmp
or
jg
bound
cld
sub
scas
lods
xor
int
jge
stc
pop
push
mov
push
stos
int
jb
sub
sbb
scas
sbb
je
push
jg
mov
lods
or
jb
jnp
push
add
sbb
or
xchg
fs
fwait
jmp
insb
faddl
push
ret
adc
nop
bnd
cld
mov
and
stc
frstor
adc
aam
shlb
aas
addr16
dec
dec
xchg
into
pop
xor
sub
mov
jnp
sbb
sbb
xchg
adc
or
inc
inc
sbb
sub
adc
jbe
pop
in
sbb
xor
das
push
in
sub
jb
jmp
negb
pop
pusha
push
xchg
in
push
call
jb
xchg
mov
mov
std
pop
imul
xchg
test
pusha
push
cld
mov
packsswb
add
xlat
mov
inc
icebp
lock
and
loop
dec
rcrb
shlb
inc
dec
incb
pop
sub
add
cli
mov
jae
dec
flds
mov
pop
inc
sbb
stos
add
inc
inc
jne
mov
adc
add
push
cmp
dec
stos
xor
xchg
out
dec
in
pop
mov
int
push
xor
icebp
sbb
mov
fnstenv
outsb
xchg
test
cmp
daa
xlat
stos
xor
push
loop
pop
stos
leave
sbb
mov
pop
in
ds
scas
pusha
pop
shl
ds
loop
pop
cltd
xchg
sarl
xorb
aam
adc
outsb
pop
sahf
xchg
or
inc
insl
mov
mov
lcall
je
testl
jl
ret
mov
cmp
cld
dec
mov
mov
add
sbb
jnp
xor
cmpsl
jnp
jae
sub
in
mov
mov
popf
movsb
sub
jp
xchg
sub
mov
sub
adc
out
add
into
fisttps
add
dec
jmp
test
ljmp
ljmp
inc
dec
mov
sarl
lea
test
fwait
ror
mov
xor
or
or
test
xchg
add
hlt
pop
aas
in
mull
test
and
js
int3
cmc
fstpl
push
cmpsb
adc
ret
mov
xlat
repnz
or
dec
pop
loopne
lods
xchg
cmp
mov
or
fstps
or
mov
orb
mov
pop
pop
sbb
test
pop
dec
js
jge
lcall
fwait
jne
and
push
ret
ss
insl
pop
push
shll
outsl
mov
andb
inc
lret
ja
fst
in
cmc
sbb
ss
je
fdivl
sbb
push
inc
sbb
inc
test
jecxz
imul
es
icebp
and
fwait
sahf
dec
lcall
jbe
adc
hlt
fcomp
jge
jae
pop
push
fisttpl
sbb
jb
sub
movb
fnsave
nop
push
cmp
rcrb
xor
jge
jg
jo
cmc
jp
dec
jne
sahf
outsl
xchg
sti
mov
and
std
xchg
lods
nop
int
int3
enter
into
xchg
push
pop
push
and
push
mov
adc
sbb
jge
sbb
arpl
ret
cmpsb
push
sub
rcl
sub
lahf
fimull
add
mov
push
insb
imul
push
sbb
fsubl
mov
imul
cmp
ret
sub
cmp
add
icebp
mov
rorb
imull
jae
push
imul
push
dec
lods
rcll
sub
shlb
dec
mov
or
fwait
and
out
repnz
out
pop
dec
mov
lcall
cmp
call
push
fidivrl
xor
stos
test
or
cmp
add
xchg
sub
mov
movsb
cmpl
push
movsl
in
jg
popa
shll
mov
loop
gs
stos
xchg
addr16
incb
mov
sahf
dec
cmc
mov
lret
cmp
pushf
inc
popa
xor
mov
pop
mov
shr
dec
jns
xchg
imul
mov
inc
test
rorb
mov
icebp
mov
add
dec
les
popl
movl
xchg
mov
enter
pop
daa
xchg
inc
push
je
lret
fs
jge
sti
fisubrs
fwait
xchg
orl
xor
adc
insb
xchg
lds
lcall
ret
adc
add
stos
xor
test
mov
push
scas
jb
ljmp
jg
push
push
dec
sbb
mov
test
push
dec
pop
js
and
dec
rcll
mov
and
push
jbe
inc
fisttpl
iret
jno
xchg
pop
mov
and
mov
and
push
out
inc
divl
ret
cwtl
mov
stc
mov
iret
mov
xor
leave
sub
or
mov
pop
fucomp
fnsave
fistpl
mov
push
mov
cmp
inc
imul
int
jmp
push
and
xor
xchg
rcl
push
cmp
dec
adc
xor
outsl
jne
loope
dec
push
xchg
mov
mov
test
fisubrs
dec
arpl
and
shrl
call
push
rcl
or
ss
ljmp
jbe
loop
xchg
pushf
xchg
add
and
clc
mov
lea
pusha
inc
in
ja
test
loop
push
sub
add
push
out
mov
push
jmp
push
pop
push
cld
fnstcw
add
es
xor
pop
imul
aam
addr16
and
cli
je
fcmovne
loope
pusha
js
lods
push
pop
insl
and
stos
add
js
mov
add
dec
xlat
mov
je
xchg
xchg
and
in
adc
bound
push
in
movl
jl
lret
dec
outsl
in
gs
popa
xorb
push
repz
fsts
aas
cli
in
pop
mov
sbb
imul
add
and
mov
push
jo
notb
loop
lods
sahf
pop
sahf
xchg
inc
xchg
stc
pop
stos
xchg
adc
repz
inc
test
mov
fs
mov
sbb
pop
loope
test
cmp
push
mov
ja
jno
add
add
rolb
stc
mov
push
cmp
fs
mov
push
xchg
in
scas
pushf
sbb
fidivrs
xchg
sub
mov
jecxz
xor
xchg
movsb
sarl
inc
pop
adc
cmp
inc
xchg
sbb
movsl
dec
testl
inc
pop
mov
setg
and
mov
rorl
insl
mov
pop
inc
mov
rorl
dec
cmp
dec
test
inc
mov
sbb
test
pop
or
push
cld
shrl
jae
out
mov
ss
call
dec
inc
sub
cmp
daa
std
mov
ret
fistps
push
lock
cltd
cltd
popa
cmpsb
mov
cmp
into
gs
out
mov
js
lret
shr
aas
movsb
movd
inc
jge
cmpl
rcrl
lock
cmpb
jg
xor
cmc
mov
dec
test
mov
in
insb
fadds
push
lock
mov
mov
ljmp
ja
xor
cmp
cmp
lods
inc
dec
arpl
fwait
je
mov
out
pop
movsb
lret
ds
stos
cld
cmpsb
push
out
ret
test
aam
movb
add
sub
jns
adc
icebp
jmp
mov
or
xchg
cli
inc
out
push
bnd
out
ffreep
ficompl
mov
jp
mov
scas
pop
jbe
sub
adc
mov
and
cli
dec
lock
pop
cmpsl
cmpsl
cmp
push
stc
or
lret
loop
fxch
fimull
push
fisubs
ds
popa
pusha
addr16
jnp
movsl
int3
test
xor
jle
ja
jg
mov
mov
mov
fisttpll
lcall
cmpl
add
push
push
inc
popa
int3
push
int
fdivs
pop
mov
add
fists
cmp
add
jo
pop
jmp
dec
loopne
inc
mov
sub
aas
jns
dec
xor
loope
jmp
xor
inc
jae
test
sub
rol
aad
aas
push
insl
outsl
adcb
sub
jbe
pop
mov
jmp
add
jp
xchg
add
push
imul
push
fidivrs
imulb
call
int
mov
test
xor
out
inc
and
les
icebp
pop
cmpsl
and
lock
outsl
into
pushf
in
repz
rol
push
xor
ret
xor
pop
mov
mov
ljmp
hlt
adc
mov
mov
mov
test
mov
xchg
xor
lret
jnp
xchg
popa
adc
mov
sub
and
stos
arpl
pop
adc
jl
cs
or
roll
lret
repnz
xor
xchg
xchg
jae
cmp
push
fcmovnb
gs
xor
mov
jnp
xchg
and
dec
outsb
jo
inc
inc
iret
fdivp
leave
mov
cwtl
cwtl
icebp
aas
stos
mov
xor
stc
sbb
sbbl
sub
add
sbb
lret
mov
push
xchg
addr16
in
bound
out
outsb
call
jns
add
and
rcr
xchg
clc
or
dec
stc
add
sub
pop
clc
adc
loopne
shrl
and
loop
test
lods
jl
and
mov
add
fwait
outsb
testl
mov
xchg
push
adc
mov
mov
fildl
xchg
xchg
test
insl
jg
adc
gs
inc
push
mov
adcl
aaa
cs
leave
mov
pop
dec
mov
xchg
mov
push
xchg
cmp
sbb
cmp
stos
dec
and
sub
pop
jge
lock
popf
or
aas
pop
jb
mov
and
pop
push
pop
jae
push
fwait
movsl
mov
rcl
pop
cmp
push
pop
push
push
ss
negb
mov
jno
outsb
mov
xchg
push
sub
mov
mov
push
inc
in
bound
jbe
mov
outsl
imul
push
inc
scas
hlt
mov
or
subl
movsb
pushf
adc
neg
or
mov
pop
jecxz
lods
int
jo
add
cld
icebp
jge
mov
test
cli
add
sbb
xor
inc
or
loope
pop
push
lods
sub
dec
call
aas
data16
out
popf
mov
jmp
cmp
pop
andb
push
movsb
adc
je
jno
mov
pop
and
mov
pop
fdivl
cli
lcall
fidivl
mov
sbb
flds
xchg
jae
mov
and
outsl
in
push
lcall
xchg
mov
into
popf
inc
xchg
mov
sbb
lea
movsl
adc
rorl
cmp
lahf
jl
cmpl
xchg
cmpsb
shll
fisubl
and
push
imul
push
rcrl
out
and
orl
iret
call
js
sti
stos
mov
loopne
or
pop
inc
cmpsl
mov
cmp
scas
jmp
cmp
mov
inc
dec
jl
gs
out
or
popa
and
xor
mov
cvtps2pi
das
or
fisttpll
js
stc
pushf
arpl
add
xor
mov
test
out
cli
or
outsl
xchg
dec
add
adc
jb
dec
fidivrs
lahf
jl
inc
mov
sbb
pop
outsb
popf
jge
dec
mov
sbb
jns
aaa
pop
mov
aad
leave
mov
jnp
or
or
and
inc
fimuls
xor
xchg
in
out
gs
orb
or
adc
pushf
mov
sbb
shl
sbb
es
test
lds
adc
dec
popa
xchg
inc
inc
xor
pop
ret
mov
aaa
int
je
and
mov
mov
dec
pop
rcr
fdivr
push
out
das
pop
lods
xor
push
mov
dec
inc
adc
jge
cld
js
and
adc
in
xchg
add
dec
mov
aas
adc
dec
lret
in
xor
pop
fbld
rolb
js
and
mov
inc
add
hlt
inc
xchg
lahf
fwait
sbb
push
ss
push
in
cmpb
inc
rcrl
mov
les
jnp
xchg
popf
or
xor
mov
push
test
and
add
jle
test
xor
jecxz
leave
leave
push
adcb
pop
mov
mov
add
lea
sbb
dec
xor
sub
jmp
sbb
mov
js
out
test
jp
ljmp
jle
ss
xchg
pop
xchg
xchg
mov
loope
bound
pop
xchg
in
mov
add
orb
sarb
adc
imul
pop
push
insb
ljmp
mov
push
xlat
add
lods
jne
xor
in
mov
xchg
loopne
cmp
push
pop
popa
cmp
mov
fstps
loope
xchg
pushf
imul
inc
lahf
lods
fiadds
nop
sti
sub
mov
mov
lcall
icebp
and
add
fsub
fbstp
pop
dec
std
outsb
jb
mov
icebp
and
shr
dec
sbbl
xor
xchg
jle
sub
lods
adc
jnp
mov
ljmp
sti
fsubrp
dec
mov
sbb
mov
xor
inc
jno
insb
test
stos
pop
mov
popa
push
aam
push
loopne
call
push
jns
hlt
xor
xor
or
adc
mov
aaa
jo
and
adc
sbb
lahf
mov
call
push
sti
pop
xor
sub
xor
sbb
test
mov
mov
rclb
lods
xor
popa
adc
scas
filds
jecxz
push
in
fdivrs
lret
push
jge
popa
int3
out
mov
lods
mov
cmp
cmpsb
cmpl
pop
sub
push
xchg
call
lods
ljmp
bound
insb
pop
lahf
leave
insl
cmpsl
jle
jl
int
repz
mov
mov
push
ret
pop
push
in
cs
popf
and
lock
cli
mov
jnp
or
imul
jae
test
mov
jno
push
jmp
fildll
movsb
out
stos
test
mov
clc
mulb
clc
xorb
insl
cmc
ret
enter
sub
fdivrl
shl
adc
daa
jp
into
aam
cmp
cmp
inc
int
rcl
stos
inc
insb
repnz
out
jo
les
ficoml
mov
jns
in
stc
jmp
mov
jnp
movsb
push
xchg
adc
sbb
and
call
lods
aas
cmp
sbb
mov
hlt
sub
cwtl
push
out
pop
test
loopne
adc
inc
es
cld
xor
or
dec
pop
shlb
jns
pusha
add
and
orb
mov
push
push
mulb
ret
loop
outsb
test
insb
repnz
in
or
clc
rolb
cmpsb
fldt
xor
aas
jbe
mov
pop
dec
fcmovnb
sub
insb
mov
mov
push
add
ret
mov
addl
adc
fcoms
jno,pt
inc
sarl
lods
mov
xor
or
xlat
fistpl
xlat
xchg
ror
jns
es
and
leave
mov
mov
mov
and
sub
shl
push
or
sbbb
jae
test
sahf
imul
xor
adcb
in
outsl
dec
push
into
cmp
pop
xchg
aam
test
inc
aas
aam
push
cwtl
repnz
jb
ss
push
lock
int3
pushf
or
call
and
and
push
movsb
imul
loopne
lret
push
ljmp
hlt
aam
in
mov
call
push
jp
movsl
mov
cmp
fcoml
xor
lret
pop
pop
cwtl
cmp
cmp
ljmp
cmpsb
jecxz
sub
adc
cmpsb
rep
jge
imul
mov
icebp
or
int
outsl
xor
imul
out
mov
cmc
add
cmpsl
lcall
add
mov
loope
mov
pop
jno
popf
cmpb
js
ficoml
dec
imull
filds
ds
mov
jns
lods
cld
sbb
fdivl
dec
xchg
mov
pop
jp
add
mov
iret
jb
subl
inc
fldt
ja
leave
movsl
cli
sarl
inc
dec
push
sub
mov
xchg
jle
out
sub
adc
adc
or
add
sbb
adc
movsb
fwait
mov
fists
mov
mov
mov
jae
push
and
lea
add
movsb
and
push
mov
aam
add
addr16
lahf
cld
jge
fdivs
ret
or
lock
repnz
xor
jbe
sbb
pushf
adc
jge
fldl
xlat
pop
add
push
and
gs
xor
or
cmp
mov
sub
inc
movsb
inc
pushf
addr16
add
mov
and
lods
call
fs
aam
insb
fdivrs
fstps
xchg
mov
stos
jo
fwait
adc
or
movsb
es
cmp
ds
insb
or
incl
mov
gs
mov
aas
xchg
push
mov
adc
cmc
mov
loop
jb
popf
pop
or
pop
and
fidivl
or
inc
and
sbb
das
push
add
not
sub
jle
pop
clc
mov
aaa
lea
cmp
pop
sbb
shlb
sbb
lret
lea
pushf
lods
or
xor
push
mov
xchg
push
xchg
insl
push
xor
or
sbb
and
push
fsubrl
or
add
enter
cmpsl
shl
test
in
or
dec
fidivrl
pop
mov
popa
inc
stos
add
lock
mov
inc
bound
cmp
add
jl
sub
fwait
push
push
adc
dec
maskmovq
idivl
sbb
push
pop
mov
clc
mov
out
add
mov
icebp
mov
test
inc
xor
cli
mov
or
xor
and
or
dec
push
roll
movsl
mov
int3
sti
cwtl
cmp
jo
in
mov
adc
sub
cmpsb
bound
xchg
outsl
jns
mov
mov
pusha
mov
cwtl
xchg
ljmp
jle
inc
jmp
sub
mov
lock
push
adc
popa
mov
dec
push
mov
pop
loope
ret
jl
cmpsb
int
adc
cmp
loop
jle
pop
push
cld
mov
scas
scas
aas
lret
popa
mov
jge
pop
ljmp
add
mov
xchg
cmp
subl
hlt
mov
xchg
jb
mov
lcall
scas
cli
pop
adc
jns
jb
cmpsb
out
cmp
loop
iret
fs
xor
mov
or
test
into
pop
cmp
stc
sub
and
add
mov
mov
xchg
in
xor
xor
push
lahf
mov
icebp
add
iret
or
mov
mull
movsl
fsub
aad
repz
push
add
or
notb
jp
lds
nop
jb
sarl
rcrl
lret
bound
stos
mov
shrb
push
pop
sti
sub
lret
out
xor
dec
and
and
inc
gs
popa
ja
inc
popf
loope
comiss
xor
mov
fidivrl
into
clc
lret
mov
out
std
in
insl
stos
sub
outsb
mov
sub
mov
pop
cli
call
push
push
ljmp
call
es
push
cli
cmp
cwtl
mov
mov
sti
cmc
fldcw
ss
call
push
bound
nop
and
push
ss
ss
mov
cmpsl
je
and
sbb
and
inc
mov
push
jmp
dec
insl
jl
gs
adc
hlt
dec
movsl
mov
in
xchg
popf
dec
inc
sub
dec
ret
dec
nop
dec
int3
mov
cmc
inc
mov
add
shlb
add
jb
ss
scas
notb
call
fs
pop
pusha
jnp,pt
inc
aaa
push
in
push
fsubp
xchg
dec
dec
inc
or
inc
sbb
push
call
js
in
xchg
pop
testb
and
pop
mov
pop
popf
sbb
addl
dec
xor
mov
jnp
outsl
loopne
adc
pusha
popa
ficompl
inc
loope
and
add
sub
lea
dec
xlat
in
jmp
push
mov
pop
sti
scas
sbbl
insl
dec
les
daa
sbb
inc
aam
lods
xchg
call
add
mov
movsb
xchg
inc
idivb
inc
xor
push
mov
mov
adc
jbe
sub
cli
jp
xchg
mov
sbb
std
jno
lock
fiaddl
call
cli
adc
jle
jns
sbb
aad
pop
mov
jge
sub
add
push
ret
insb
addl
push
in
push
sub
cmpsb
movsl
xchg
repz
ss
sub
mov
stc
mov
rol
jnp
and
popa
fucomip
dec
stos
subb
xor
popa
xchg
cli
pop
push
sbb
mov
mov
sub
cmp
mov
gs
shl
fadds
fstpt
add
xchg
xlat
outsb
add
push
test
ja
out
imul
pop
es
pusha
mov
jnp
flds
cmp
out
xorb
jo
ljmp
jno
jno
sub
test
loop
push
imul
in
and
dec
mov
pop
cmp
xor
decb
push
cmp
pop
jl
mov
cmp
fwait
sbb
xchg
sbb
fisttpll
subps
es
ljmp
push
ret
ret
lret
xor
js
cmp
mov
fidivl
push
movsb
xchg
xchg
or
fiaddl
lods
sbb
add
and
sbb
enter
pusha
repz
push
loopne
cmpsl
fsubp
das
stc
pushf
mov
or
add
cmpsl
xchg
sbb
pop
cmp
popf
into
cmpsl
aas
cld
lock
or
or
imul
decl
out
ficoml
out
push
stos
pop
testl
mov
cld
mov
mov
daa
cmp
aam
and
stos
adc
scas
aam
lret
push
xchg
popf
ds
sub
jo
mov
frstpm(287
sub
xor
pop
push
les
adc
call
adc
pop
and
lahf
xchg
sub
lods
repnz
mov
sbb
lcall
sub
cmpsb
jno
rolb
jne
xor
cmpsb
xchg
fisubrs
xchg
into
cmc
cmp
lods
bound
xchg
mov
mov
sbb
cmc
mov
inc
cmpsl
pop
adc
dec
mov
test
or
ja
xchg
jg
ret
hlt
leave
pop
cmp
adc
mulb
aaa
loope
sub
aad
xchg
jno
fsubr
cmpsb
xchg
pop
cli
xorl
dec
mov
lret
sbb
mov
mov
movl
xchg
dec
jl
and
aaa
mov
add
aam
mov
test
fcmovu
mov
inc
inc
mov
inc
dec
pop
push
sarb
sti
lahf
pop
repz
and
pop
in
mov
pusha
cmovb
test
shrl
push
pop
out
or
sbb
pop
icebp
in
push
repz
insb
and
les
movsl
pop
jne
cwtl
and
out
adc
lods
inc
cmp
cld
scas
cmp
fsubrl
popf
scas
aaa
fists
pop
sub
pop
lods
xlat
cmp
inc
test
mov
arpl
negl
outsb
popa
cmp
test
and
xchg
cmp
mov
sbbb
mov
mov
pop
mov
and
mov
mov
pusha
fbld
lds
popa
jne
push
flds
sahf
pop
shrb
popa
sbbb
adc
out
pop
mov
test
out
insl
inc
or
jmp
pop
insb
push
pop
daa
push
addr16
sub
decl
push
mov
scas
insb
lret
fucomip
std
cmp
frstor
leave
pushf
adc
pop
scas
jb
pop
sbbb
pop
aad
or
into
stos
push
xor
pop
xor
pop
add
dec
mov
call
dec
xchg
sti
cmove
and
outsl
cmp
das
lret
add
pop
mov
pop
nop
idivl
stc
test
add
mov
cmp
mov
and
pop
mov
push
dec
adc
cltd
mov
and
cmp
pop
stos
or
pusha
push
stos
ret
gs
out
dec
mov
test
imul
push
push
stos
inc
insb
aad
adc
xchg
fisubs
xchg
jae
sbb
test
xor
mov
and
inc
add
jle
test
mov
xor
in
or
test
leave
bound
or
add
mov
arpl
pushf
jecxz
mov
push
jl
js
jg
jne
xor
int3
jge
jno
in
mov
fidivrs
out
xchg
xlat
bound
lahf
mov
jmp
rcrb
inc
adc
xor
mov
fadds
jno
fs
iret
jg
pop
push
push
out
iret
gs
leave
cli
outsl
int
jo
inc
sub
adc
aas
ljmp
xchg
repz
fidivrs
or
sub
or
mov
or
jb
popa
outsl
ret
arpl
jae
jb
addr16
push
mov
xchg
stos
into
pop
mov
dec
dec
cmp
add
sub
mov
out
mov
add
stc
mov
scas
addb
xor
dec
and
lahf
inc
ret
jge
fldcw
jg
dec
gs
sbb
ficomps
and
or
xchg
out
mov
aas
adc
xchg
rorb
shll
mov
aaa
and
jecxz
fildll
push
lea
push
jecxz
push
xor
imul
cmp
popf
push
sub
push
pop
aaa
sub
pop
imul
and
pop
movsb
push
aam
sahf
adc
jecxz
add
rorl
gs
das
fwait
xchg
jmp
rorl
ret
aad
cld
in
or
fldl
push
cmp
pushf
sub
add
sub
out
dec
pop
mov
out
orl
adc
stc
dec
pop
repz
sub
mov
xor
insb
push
sbb
and
ss
xchg
out
mov
out
repnz
cld
mov
into
lods
sbbl
nop
dec
fstpt
inc
add
mov
adc
pop
cmp
xchg
fimuls
and
cmpb
neg
push
mov
loopne
out
outsl
inc
add
movsl
mov
push
fistpll
mov
movsl
push
lea
test
adcb
mov
repz
push
sub
jecxz
mov
ret
fdivs
mov
jle
popa
jl
test
cmc
and
fildll
add
push
xor
test
inc
cli
lods
add
inc
scas
dec
addl
sub
stos
imul
add
sub
scas
sbb
in
sarb
ljmp
leave
mov
dec
dec
pop
pushf
dec
out
sub
popa
mov
pop
pop
push
or
mov
cltd
mov
mov
pop
dec
xor
and
lock
push
test
inc
xchg
call
xchg
loopne
and
push
jge
xorb
loopne
aam
jge
stc
imul
fmul
jg
add
fst
pop
mov
pop
push
cmp
mov
mov
sub
jg
shll
inc
xchg
cmp
cli
xor
mov
dec
mov
fidivl
lret
notl
lret
in
xchg
push
inc
and
sbb
jecxz
bound
and
fisubrs
int
std
add
push
repz
shlb
dec
ficoms
push
fildll
push
fcmove
sub
mov
mov
xchg
insl
pop
mov
push
sbb
pop
in
inc
xlat
insb
test
adc
cmp
jb
adc
ss
bound
mov
movntq
leave
add
mov
or
cs
gs
out
movsl
test
mov
mov
mov
pop
push
shrl
dec
push
and
xlat
add
inc
in
movsbl
and
sub
data16
sar
push
loope
addb
add
mov
es
mov
shll
cmp
mov
push
xchg
stos
repnz
or
lods
repnz
xchg
lock
movsb
mov
fs
movsl
enter
loop
mov
adc
fistpll
mov
out
scas
mov
scas
cmp
mov
outsb
outsb
outsl
rolb
in
inc
loopne
cld
or
jle
mov
push
adc
pop
xor
shrl
aas
push
push
mov
jns
pop
push
mov
push
xchg
push
movsb
mov
rclb
mov
sub
ds
jp
xchg
cmp
daa
lods
cmp
and
movl
dec
int3
arpl
pop
stc
movsb
inc
jl
imull
and
xor
fldenv
jno
mov
stos
clc
xor
mov
cmpsl
dec
mov
dec
aaa
pop
cmp
out
mov
xchg
das
dec
mov
jb
inc
fscale
sub
cmpsb
and
push
clc
cmp
ds
addr16
add
or
rorl
and
nop
nop
or
fcmove
push
xchg
shll
ljmp
rorb
fisttpll
movsl
dec
mov
dec
fisubs
shll
push
add
rolb
inc
adc
push
test
in
cltd
loopne
test
pop
pop
add
add
mov
lds
fwait
cwtl
fistpll
xchg
xchg
dec
int
fmulp
shlb
aad
cmpsl
call
je
push
or
inc
int
in
out
pop
jbe
sub
repz
ret
adc
rolb
scas
xor
lret
cwtl
popf
mov
xchg
sub
sbb
push
rcl
mov
dec
and
lds
sahf
jmp
out
push
hlt
xchg
into
hlt
xchg
cmp
sub
fsubrs
add
lcall
jmp
idivl
popf
pop
lods
pop
lret
cli
mov
add
adc
mov
int3
mov
aam
icebp
bsf
dec
sub
jle
pop
or
cmpsb
test
dec
mov
pop
inc
mov
jnp
xchg
rorb
mov
inc
sbb
imul
imul
or
rcl
mov
fs
outsb
shl
call
mov
pop
lcall
inc
jp
sub
daa
mov
iret
xchg
es
aas
in
pop
push
jb
inc
xchg
call
scas
mov
push
dec
movsb
pop
mov
mov
ja
std
or
cltd
cmp
out
jns
xchg
and
cwtl
inc
inc
rol
lcall
fdivrl
push
push
cmp
and
push
enter
ret
pop
xor
shll
xor
sbb
pusha
scas
lret
cmp
int
icebp
jb
mov
scas
aas
push
test
pushf
ss
ljmp
cli
xchg
fstps
les
sub
adc
divb
out
adc
sysexit
int
int
or
lods
test
in
lock
pop
in
aaa
movsb
jbe
jae
push
popa
push
ljmp
data16
adc
add
lea
mov
or
push
pop
cld
incb
pusha
push
lret
dec
sti
fistps
mov
push
repz
mov
aam
ficoms
pushf
jns
outsl
push
xor
lret
enter
js
jne
int3
fsubs
outsb
and
inc
mov
and
sbb
aaa
repnz
jb
fists
cmp
mov
call
xchg
adc
and
gs
inc
les
les
lret
lret
leave
int3
sbb
imul
mov
test
mov
pop
imul
mov
jecxz
pop
popa
xchg
mov
call
cmp
pop
mov
mov
mov
cwtl
sub
stos
loop
dec
aas
and
sbb
sbb
pop
or
ja
in
lahf
cmp
xchg
mov
xlat
jno
es
push
adcl
jae
lcall
lock
outsl
mov
mov
xor
xchg
in
xchg
dec
sub
pop
fnstsw
aam
xlat
adc
add
jg
push
pop
test
repnz
stos
hlt
int3
pushf
pop
fnstcw
imul
sbb
mov
jl
mov
adc
subb
cmp
adc
cmpsl
enter
nop
sbb
dec
rol
fnstcw
rcrl
cmp
add
xor
fs
mov
lods
jb
mov
vmwrite
push
cmp
mov
jb
loop
call
out
cmpsl
enter
xlat
jp
out
adc
gs
dec
ror
fists
inc
dec
stos
jecxz
push
pop
pop
cmp
jnp
fwait
cltd
add
mov
fisubrl
pop
pop
pusha
das
push
sti
lahf
adc
and
outsl
or
or
das
es
pop
arpl
and
movsl
out
pop
inc
xchg
stc
adc
outsl
pop
push
cmp
adc
imul
ds
ljmp
jg
sbb
push
mov
fs
pop
adc
div
jb
scas
lret
ss
cmp
test
or
fstpl
xchg
lret
dec
add
xchg
fiaddl
mov
mov
xchg
and
fsubs
dec
decl
into
mov
js
pushf
dec
test
xor
stos
cltd
pop
jg
lret
js
aas
js
aaa
xchg
lcall
mov
xor
lds
add
adc
cmp
int
mov
stos
inc
dec
jl
mov
sbb
ss
outsl
cmpsb
popa
add
push
sbb
pop
es
jnp
jno
and
repz
rorb
pushf
cmc
addr16
cld
sbb
outsb
xor
sub
mov
loop
bound
jmp
in
xor
pop
sbb
cli
push
dec
pop
fldl
cmp
mov
cld
sbb
stos
cmp
mov
int
dec
and
pop
imul
shrb
scas
ret
mov
mov
call
movsl
scas
jbe
adcl
fmull
enter
out
sbb
loope
subl
xchg
sub
mov
lds
xor
imul
jb
inc
cwtl
mov
aas
sub
mov
mov
je
call
pop
jp
leave
outsb
les
shl
mov
stos
aaa
movsb
ret
cs
int
popf
inc
insb
mov
jge
out
push
js
jecxz
or
lret
push
sbb
push
and
jb
dec
int
je
clc
fistl
push
jge
shrb
std
cmp
sub
adc
push
mov
dec
mov
movaps
sub
movsl
sbb
daa
inc
xchg
in
cmp
xchg
sub
xchg
sbb
fldl
aaa
mov
out
cmp
ret
jle
jnp
aas
lahf
divl
icebp
popf
filds
jg
mov
je
es
push
adc
dec
rcll
jmp
bound
jp
xor
ljmp
inc
sar
adc
leave
sub
stos
addr16
insl
jmp
mov
or
aad
fnstcw
sbb
xor
mov
mov
mov
xchg
test
pop
pop
dec
ret
in
movb
inc
cmpsb
shll
aas
jae
call
cmp
push
xor
xorb
lcall
in
jo
jmp
aas
dec
ficompl
adc
mov
fwait
test
sti
fbstp
int3
and
mov
jg
iret
jl
mov
outsl
fistl
mov
add
and
add
add
sbb
xchg
inc
aam
sub
dec
ja
or
aam
jnp
ret
stc
mov
ret
outsl
xor
cld
sbb
jbe
pop
xor
mov
out
mov
push
push
mov
mov
cmp
shll
popa
ficompl
pop
xor
cli
xor
negb
sbb
xor
cmpsl
inc
cmp
adc
lret
adc
int3
and
xchg
cmp
cmc
in
xor
enter
scas
inc
rorl
mov
sbb
out
pop
outsl
push
pop
mov
push
int3
iret
ss
imul
lret
popa
shl
push
idiv
imul
cmp
pop
lock
repz
mov
push
test
dec
cs
push
ljmp
xchg
movsb
das
pop
shll
xchg
in
xchg
push
pop
out
loop
aam
mov
jns
push
xchg
dec
jle
mov
call
sbb
add
lods
dec
icebp
push
push
insb
sbb
bound
dec
or
jecxz
mov
jmp
push
loopne
fsubs
cs
cli
stc
pop
stos
add
test
or
xor
loope
push
and
ljmp
mov
mov
xorb
not
lods
mov
lret
inc
xchg
rorb
jbe
stos
cmp
mov
dec
shrl
call
or
jp
push
mov
mov
push
es
jb
call
imul
sbb
les
pop
add
sub
rolb
orb
xchg
xchg
xchg
xchg
test
sub
js
out
xor
mov
pusha
aam
add
pop
push
stc
stos
pop
dec
xchg
xor
or
push
xchg
jns
ds
lcall
cmc
in
dec
ret
add
lcall
cmpsb
loopne
dec
fcomp
movb
aam
or
inc
sbbl
inc
imul
and
ret
xchg
mov
pushf
mov
mov
mov
inc
lret
sahf
jecxz
rorb
mov
lock
sarl
les
jl
in
or
lds
mov
ja
mov
test
jmp
mov
in
pop
push
lds
lret
negl
push
lea
aaa
jbe
aad
mov
and
in
outsl
and
nop
or
xor
lahf
cmp
sub
adcl
ss
mov
push
outsl
mov
adc
add
dec
cmpsb
test
andl
lods
mov
jmp
adc
stos
mov
mov
imul
pop
jne
add
jmp
test
sub
shr
das
fsubrl
mov
or
jmp
pop
mov
add
nop
shll
imul
inc
js
sti
inc
mov
int
cmp
fistpl
cmp
in
push
adc
pop
inc
mov
adc
in
xchg
prefetch
push
or
and
xchg
cld
std
into
test
jle
xchg
orl
push
mov
push
ljmp
mov
aas
test
and
cltd
inc
aas
jne
stos
subl
cmp
and
aas
in
icebp
mov
add
dec
test
add
or
inc
movsl
jae
stos
mov
push
gs
jl
mov
fmul
fwait
adc
jg
insb
fdivrl
push
les
jg
scas
out
push
daa
mov
shl
loop
outsl
xor
mov
stos
xor
xchg
scas
add
adc
test
pop
sub
arpl
ljmp
inc
jmp
jno
add
stos
aam
and
jae
sbbb
cmp
xchg
mov
sar
mov
test
dec
hlt
lods
addr16
jo
ret
dec
xor
mov
jecxz
xchg
or
mov
test
sub
sub
dec
dec
inc
jle
mov
cmp
dec
dec
in
and
add
arpl
adc
dec
xlat
popf
pop
push
push
and
insl
xchg
jns
fisttpll
sbb
lret
mov
aad
jl
cmp
clc
insl
pop
dec
insb
ret
jecxz
push
xor
inc
or
bound
cmc
fsub
addl
and
outsb
mov
stos
push
mov
lea
sbb
ljmp
iret
pop
add
and
push
mov
add
mov
imul
adc
cmp
outsb
rcrb
push
dec
xchg
insb
pop
push
out
dec
mov
xor
xor
adc
sub
inc
push
mov
or
pop
andl
sbb
or
enter
pushf
jo,pt
sub
call
xor
repz
add
mov
outsl
jnp
icebp
in
mov
ret
outsb
push
popa
in
inc
xchg
ljmp
dec
mov
mov
xor
das
dec
or
imul
xor
sub
xor
out
ja
or
jle
imul
pop
fucomip
mov
jnp
movsl
add
scas
cwtl
xor
add
arpl
or
cmc
cltd
or
or
pop
out
sti
jecxz
mov
fnstcw
fidivrl
clc
mov
out
ds
test
mov
mov
push
outsl
mov
mov
push
adc
jnp
cltd
or
xchg
sub
push
lahf
fidivrs
pop
insl
arpl
or
mov
lret
dec
fs
ret
lea
lock
xor
ret
fdivrs
cld
lahf
cmp
xlat
adcb
cmp
adc
fs
inc
push
fsubrs
enter
enter
adc
xchg
test
inc
xlat
int
mov
fwait
test
adc
inc
adcl
out
and
fisttpl
jl
hlt
out
jne
pop
das
push
movb
cmp
xchg
int
push
inc
arpl
pop
lcall
sete
icebp
outsb
gs
cmp
out
cld
xchg
insb
add
enter
pop
cwtl
push
leave
lock
loopne
in
sub
in
and
or
in
scas
and
es
mov
dec
shll
andl
lods
xchg
mov
movsb
jmp
hlt
ds
jle
pop
adc
sub
aam
add
pop
add
xor
lret
push
lret
test
xchg
push
sbb
cmpsb
push
jns
lods
scas
jl
icebp
jp
inc
xchg
jnp
call
into
jne
test
das
sub
notl
mov
lret
lods
add
xchg
xchg
sbb
xor
adc
or
inc
inc
or
xchg
xlat
out
pop
xchg
test
sub
cs
push
dec
imul
rcrb
iret
lret
lods
ds
xlat
outsb
or
pusha
jecxz
loop
fidivrl
jbe
push
out
out
hlt
jecxz
outsb
out
stos
mov
jle
pushf
pop
mov
ss
sub
inc
arpl
mov
mov
xchg
ret
pop
xchg
sub
pop
mov
fs
pop
push
in
outsb
imul
gs
push
inc
xchg
cmp
fcompl
adc
and
xchg
dec
dec
mov
add
dec
sahf
mov
mov
pop
sbb
outsl
mov
push
aam
cld
mov
cmp
leave
out
push
ss
push
ja
imul
popf
xor
outsl
jg
cmp
out
dec
test
enter
es
cmc
dec
lock
aas
and
xchg
divl
jmp
mov
dec
sti
sbb
push
sub
sub
in
push
mov
mov
mov
adcb
imul
shr
gs
push
pop
dec
mov
mov
push
inc
nop
inc
mov
mov
std
sub
dec
or
mov
adc
test
xchg
sub
fmull
daa
mov
cmpsb
jo
push
xchg
sub
in
das
add
cmp
push
movsb
int
lods
ds
mov
lods
cltd
adc
out
movb
stc
push
cs
adc
call
xchg
sbb
loope
xchg
lret
inc
mov
and
fisubrl
jecxz
mov
and
mov
pop
mov
sbb
pop
pop
cmp
lret
pop
js
jle
xchg
test
jmp
xchg
sti
mov
push
fistpl
inc
add
pop
roll
mov
rclb
mov
mov
repz
and
mov
loopne
add
daa
adc
insb
and
inc
jb
shlb
mov
add
cmpsb
mov
cmp
add
addr16
jae
lahf
insb
xlat
fisttpl
cltd
nop
lret
push
pop
cltd
mov
add
jmp
jl
mov
pop
aaa
stos
fistpll
jbe
push
xchg
testl
fsubr
das
dec
lock
test
mov
mov
mov
push
nop
xchg
xchg
mov
dec
dec
push
scas
test
sbb
cmc
cmp
sbb
scas
sbb
cli
pop
daa
movsl
js
xchg
sub
repnz
nop
xchg
pop
pop
fisubs
xlat
and
cld
popf
in
or
iret
cmpsb
inc
mov
cmp
mov
mov
lods
cmpsl
insb
clc
les
pop
pop
lds
imul
jo
pop
push
loopne
insb
jmp
push
test
ret
aaa
push
addr16
int
jns
xchg
push
movsl
mov
jmp
sbb
mov
mov
sub
pop
sub
push
sub
push
mov
and
xor
insl
js
inc
je
repnz
push
push
adc
daa
and
dec
mov
cmp
xor
outsb
movsl
movsb
adc
sysexit
mov
test
sub
xchg
or
mov
mov
sarl
enter
loopne
xor
popf
stos
negb
test
dec
or
sahf
bound
aas
ret
outsl
cmc
jbe
adc
xchg
in
loopne
lret
js
sahf
call
dec
sub
sub
mov
lret
ret
pop
mov
aam
dec
push
setg
imul
pop
aaa
clc
mov
pop
test
sub
sbb
test
pop
cltd
enter
add
cltd
arpl
dec
scas
fs
and
jb
mov
sbb
adc
mov
pop
mov
sahf
insb
ficoml
imul
shrb
pop
out
fldcw
stc
and
push
add
sub
inc
mov
pop
in
xor
test
mov
jmp
inc
loope,pn
add
repnz
add
repnz
adc
insl
jae
adc
outsl
jae
inc
inc
insl
clc
cmp
cmc
mov
ja
pushf
push
repnz
mov
imul
jo
call
xor
test
push
xchg
fidivrs
lods
dec
push
out
nop
dec
xchg
inc
int3
aaa
adcl
sub
test
push
shll
das
movsb
cmc
sub
icebp
cs
xor
inc
mov
ret
sub
dec
sbb
andb
cs
mov
adc
es
outsl
add
fdivrs
popf
pop
mov
push
jb
inc
imul
jno
pusha
ljmp
repnz
out
xor
ret
cmc
loop
out
dec
push
fisttps
sbb
dec
je
or
jge
insl
cs
lcall
xchg
movsl
mov
jmp
dec
jmp
cmp
pop
inc
xchg
lods
hlt
rol
xor
lret
lret
insb
mov
test
inc
mov
sub
mov
sbb
xor
push
cmpsl
cld
repz
pop
roll
das
dec
jno
test
stc
insl
push
lods
or
inc
adc
xlat
roll
fs
adc
add
adc
lods
push
pop
ss
sqrtps
imul
sbb
mov
or
insb
xor
mov
cmp
lret
or
mov
mov
or
nop
loop
movsl
lret
ds
arpl
jbe
pop
xchg
mov
and
adc
jne
outsb
xlat
in
test
fiaddl
fistps
outsl
pop
es
pop
gs
stc
test
nop
mov
stos
fisubrs
aaa
ja
push
loope
inc
stc
pop
lock
dec
insb
and
or
ljmp
and
or
cmp
les
jne
mull
mov
jnp,pn
adc
fwait
pop
jl
xor
into
orb
mov
push
je
repz
dec
mov
lahf
xor
mov
lahf
call
xchg
in
int
rorb
xchg
neg
aas
pushf
ret
jnp
xchg
dec
jns
wbinvd
pop
xor
in
mov
push
sbb
or
lcall
mov
add
xor
js
pop
pop
jno
lret
xlat
and
jbe
or
arpl
mov
pop
or
jecxz
dec
cmp
push
dec
sbb
cmpsb
pushf
xchg
mov
outsb
divb
sarl
pcmpeqd
push
xchg
inc
aas
lcall
xchg
add
sub
mov
cld
inc
inc
shrl
jo
gs
xchg
xchg
sub
add
dec
outsl
xchg
test
mov
dec
test
push
imul
mov
xlat
ja
stc
jbe
push
sbb
ljmp
inc
pop
adc
xchg
repz
dec
or
push
clc
fistps
inc
je
clc
xchg
sbb
clc
stos
movsl
mov
xor
pop
sbb
into
mov
cmc
mov
pop
pop
inc
shlb
imul
add
xchg
cmp
cmp
pop
fidivl
ljmp
pop
add
call
mov
xchg
sbb
and
xor
push
sub
mov
pop
sub
lock
bound
inc
or
neg
orl
fdivrl
sbb
pop
std
cmpsb
js
mov
popl
outsb
ljmp
lcall
daa
into
and
mov
outsl
push
mov
in
cmp
dec
mov
scas
xor
adc
mov
fstpl
sbb
sbb
outsb
ret
in
jg
dec
lea
push
mov
clc
repnz
stc
fwait
repz
loop
and
enter
xchg
jo
out
stos
cmp
lret
push
jmp
inc
push
jl
push
popf
pop
jo
pop
pop
inc
mov
cli
aaa
fidivs
cmpsb
cs
jecxz
mov
test
data16
popa
aad
pop
pop
or
lret
xchg
dec
loop
pop
stos
sbb
mov
ftst
cmp
test
push
cltd
push
pop
cmpsl
push
les
das
lock
inc
std
push
lods
dec
ret
cld
sahf
das
mov
mov
fsubs
gs
das
adc
xchg
lock
or
shlb
push
xchg
sbb
cmp
and
shrb
cmp
inc
stc
mov
lahf
push
sbb
mov
jne
xor
mov
inc
mov
fdivrs
aaa
jnp
and
dec
fidivs
xor
repnz
lock
fstl
ret
mov
jle
clc
and
mov
loopne
cwtl
cmp
pop
pusha
jle
push
mov
sub
cs
add
add
jmp
push
sahf
ds
cmp
ds
mov
xorl
ja
bound
jne
jl
cmp
enter
je
pusha
aaa
mov
in
dec
or
stos
xchg
mov
or
sub
xor
movsl
mov
ja
jp
daa
cmpsb
icebp
addr16
arpl
jns
inc
xchg
adc
iret
sub
cmp
xchg
imul
adc
fs
cltd
inc
mov
cmp
sub
jne
fbstp
jecxz
mov
outsl
lcall
mov
jecxz
xor
fs
ljmp
gs
dec
mov
jo
jns
pusha
mov
dec
pop
lock
lods
jg
and
sub
add
inc
ret
cld
lds
add
popa
or
gs
test
popa
jp
lds
frstor
adc
loopne
lret
add
aas
repnz
adc
test
inc
mov
xlat
mov
push
pop
push
ret
ret
scas
scas
insb
cmp
jle
jne
jecxz
jmp
fildl
fisubrl
loopne
push
popa
and
pop
inc
push
dec
mov
xchg
adc
push
ds
inc
loop
jecxz
pop
adc
xlat
outsb
cmp
fstpt
pop
jnp
mov
insl
addr16
call
pop
push
ljmp
in
test
shr
lcall
imul
inc
cmp
adc
fnstenv
loopne
xchg
jmp
mov
jg
cs
xchg
jp
psllw
xchg
jae
dec
ficomps
pop
fwait
jle
push
lret
mov
es
xchg
jge
push
hlt
ja
notb
cmpb
push
or
lds
lds
inc
pop
cmpsl
shl
pop
dec
jecxz
mov
sbb
das
cmc
cmp
dec
mov
call
addr16
and
outsl
loopne
or
sarl
sub
mov
je
ret
andb
mov
and
in
inc
or
jl
filds
ss
ja
cld
cmpsb
and
mov
fcoml
dec
cmp
scas
sub
xchg
sbb
icebp
sbb
jl
stos
insl
pop
movb
mov
into
cmp
lods
lahf
jl
push
mov
js
xlat
mov
movsb
and
push
push
mov
xchg
adc
adc
cltd
mov
out
popf
and
ds
ss
push
fsubs
sahf
test
clc
in
fsubrp
imul
or
in
mov
fwait
cmpsb
loope
popf
imul
push
dec
sub
jl
pop
lret
dec
mov
adcb
popl
xor
pop
das
push
xchg
int
outsb
and
inc
arpl
mov
xor
daa
xor
sub
or
mov
lock
and
mov
inc
mov
rorl
idivb
scas
shl
push
add
xchg
in
and
inc
xchg
push
mov
loopne
xorl
lea
cli
sub
mov
inc
test
fwait
xor
lock
push
push
rolb
push
jecxz
cmp
ret
inc
xchg
and
mov
nop
in
pop
in
jbe
leave
xchg
or
push
fimull
in
inc
dec
ss
rcrl
cltd
mov
fildll
rol
mov
mov
getsec
movsb
in
push
and
mov
xchg
sti
jmp
mov
lods
and
or
fsubl
aas
inc
stos
cmp
mov
mov
popa
cs
cmp
or
push
iret
mov
scas
leave
fidivrl
mov
movsl
movsl
jl
fprem1
neg
movsb
mov
lahf
cltd
mov
mov
ret
lods
or
xlat
and
sub
sub
inc
mov
scas
fisubs
out
add
out
pop
jns
shl
lcall
jo
sbb
pop
pushf
adc
push
mov
xchg
add
fcoms
adc
jae
jl
or
or
out
test
shlb
jnp
push
xchg
mov
sub
cmpb
rcrl
sahf
dec
lcall
xor
cmp
leave
mov
aas
movsl
int3
push
das
dec
mov
or
cmp
adc
or
pop
or
xchg
movsl
aad
add
pop
mov
sub
and
scas
shlb
aas
jo
xchg
cmpsb
insb
and
fisttpll
adc
inc
iret
xor
jmp
sbb
xlat
mov
data16
lahf
popa
jo
and
and
ret
js
xchg
sbb
test
mov
xor
push
movsl
and
pop
scas
xchg
fildl
mov
jmp
cmp
lahf
aam
loopne
mov
mov
sahf
fmull
push
imul
into
test
js
movsb
push
mov
mov
sub
or
aaa
dec
divb
mov
xchg
test
sti
pop
enter
ja
or
pushf
ret
xchg
inc
jae
stos
stos
sub
idivb
test
push
cmp
sti
fldenv
repnz
js
not
fldenv
xor
cmp
int
pop
jg
push
push
lods
dec
mov
rcrl
push
add
clc
arpl
ss
push
negb
ss
push
in
xor
sbb
cmp
test
push
or
daa
lcall
shl
data16
sub
push
push
push
add
ss
mov
mov
outsb
lods
cmp
dec
je
jecxz
test
in
ja
icebp
lea
mov
mov
subb
cld
pop
stos
rorl
or
xchg
sti
aam
or
fcomps
xchg
add
movsl
stos
jecxz
mov
push
sbb
cltd
sbb
dec
cmp
mov
or
xchg
xchg
mov
or
cmpl
mov
pop
call
in
mov
cmpsb
lcall
sbb
sarl
adc
mov
lea
idivl
cmp
notb
adc
inc
mov
mov
cmc
lods
enter
sub
sub
mov
inc
enter
pop
push
jb
adc
arpl
rclb
mov
xor
out
repnz
xor
clc
insb
imul
rcrb
push
mov
sub
lds
cmp
sbb
mov
fildl
jne
and
dec
cli
dec
into
or
iret
xor
cmpsb
pop
rcr
mov
jg
xor
cmp
xchg
fidivrs
insl
mov
push
out
outsl
mov
ljmp
adcb
mov
add
je
push
in
adc
push
idivl
push
outsb
pop
in
push
mov
push
ret
jno
mov
push
mov
repnz
jnp
push
xor
cmc
bound
cmpsl
sbb
loop
sbb
cld
aam
or
inc
push
enter
inc
int3
adc
imul
stc
pushf
daa
sub
pop
stos
dec
mov
xchg
repnz
jb
es
push
loope
cmp
rcr
pop
shrl
ret
lods
push
push
sbb
fs
xchg
sub
lahf
mov
jnp
or
lea
jg
loope
bound
push
stc
push
lock
push
mov
mov
pop
jae
add
outsb
cltd
mov
xor
int
sti
sbb
test
sbb
xlat
out
in
cltd
lret
or
sub
mov
dec
out
lods
mov
shl
loope
dec
bound
pushf
push
or
shll
jl
mov
adc
jp
pop
arpl
add
cmc
cwtl
in
loope
lcall
out
push
jmp
rcll
ds
mov
adc
shl
iret
mov
int
push
push
dec
jg
add
test
cmp
js
fistpl
mov
mov
dec
sub
mov
stos
cmpsb
cli
stos
push
loope
dec
out
pop
adc
xor
push
add
xchg
lret
lock
movsb
loopne
pop
dec
icebp
and
lods
push
movups
imul
jecxz
movb
es
xchg
aas
adc
inc
scas
lds
mov
in
dec
pop
mov
add
lcall
scas
cmp
lock
or
pop
xchg
push
dec
sbb
lock
in
cs
push
icebp
cmp
outsb
mov
repz
out
pop
aam
and
xchg
movsl
inc
jne
imul
cmpsl
sbbb
jae
movsb
stc
sbb
add
arpl
arpl
mov
stos
xchg
mov
enter
daa
clc
cmp
ds
hlt
enter
inc
cs
in
fbstp
lret
sarl
aam
mov
sti
mov
loope
sbb
out
stos
xor
cmp
ja
lods
cmp
stos
dec
out
jg
lret
in
and
insb
jae
push
mov
jle
stos
pop
sub
mov
iret
lret
dec
or
sub
cmc
int
and
mov
fstp
shll
sub
in
imul
outsb
call
mov
pusha
add
leave
xchg
inc
fisttpll
xchg
and
idiv
movsl
mov
inc
xchg
inc
add
adc
ret
xorl
dec
outsb
adc
or
daa
sbb
hlt
mov
and
sbb
jb
std
lret
push
jg
rclb
popa
push
scas
mov
jge
jmp
scas
sar
dec
nop
ja
outsb
sub
xchg
xchg
or
ja
fmull
cmc
inc
negb
or
xchg
jle
js
out
mov
sub
rcr
push
mov
shlb
adc
dec
divb
fists
push
push
or
cs
in
shlb
xor
xor
and
outsl
pop
jb
xor
dec
repz
cwtl
sub
scas
mov
fsubrl
fstps
or
test
cmp
mov
add
xchg
sub
js
cmpsb
in
imul
fmul
pop
rcl
ljmp
dec
xchg
leave
jg
imul
lods
test
mov
leave
fld
mov
xor
mov
mov
mov
mov
inc
ds
dec
ljmp
sbb
xchg
je
out
or
adc
mov
cmp
or
mov
xchg
pop
jecxz
mov
add
dec
and
mov
adc
push
rol
enter
test
fsts
cmp
clc
inc
mov
or
hlt
adc
lcall
daa
sub
iret
pop
insl
fsub
and
jecxz
xchg
movsb
push
in
sbb
adcl
shl
xor
stos
add
jo
test
sahf
mov
shl
scas
nop
xchg
pop
es
lds
inc
xor
jb
jno
sbb
xchg
std
hlt
add
xor
mov
mov
sahf
in
inc
sub
pop
xor
inc
jae
add
adc
xchg
mov
lods
and
xchg
jmp
bound
ja
push
test
xor
pop
and
js
mov
jecxz
lods
fcompl
pop
xlat
sbb
adc
xchg
rep
bound
jle
inc
mov
or
mov
lods
adc
arpl
lret
push
pop
and
jle
xchg
aam
mov
lcall
push
or
sub
dec
cwtl
mov
hlt
mov
shl
ret
sbb
adc
ficoms
jno
push
hlt
fildl
xlat
les
pop
adc
add
xor
xchg
add
sub
push
xchg
addr16
arpl
adc
out
jb
push
jno
mov
sbb
sub
or
and
int3
mov
push
sbb
adc
stos
rcrl
jg
mov
xlat
stos
pop
mov
lds
fwait
xchg
rorb
adc
pop
mov
mov
sub
add
push
mov
aam
int
sbb
fdivl
lock
jae
xchg
xchg
imul
pushf
pop
clc
imul
scas
js
leave
pop
je
cmpsb
shlb
sbb
std
faddl
xor
pop
mov
mov
sbb
mov
cld
rcr
pop
or
std
popf
icebp
adc
ret
mov
pusha
iret
mov
fs
mov
dec
jg
mov
loopne
dec
xor
aam
dec
jge
adc
mov
pushf
and
push
mov
or
add
sub
jnp
popf
or
pop
insb
add
or
jae
inc
sub
push
rorb
xlat
jae
or
repnz
popf
mov
jae
into
test
sub
xchg
pop
in
cmp
adc
out
mov
aad
and
fisubrl
fldl
in
or
divb
jl
adc
popf
ds
mov
ret
arpl
inc
add
add
test
aaa
jbe
xchg
popa
adc
mov
push
iret
jp
mov
mov
push
loopne
push
and
xchg
aas
mov
cwtl
arpl
mov
mov
dec
call
sub
jge
ud1
pop
nop
enter
cmp
stc
jns
add
rcrl
jl
jns
mov
cmc
test
cld
mov
and
adc
inc
addr16
cmp
fsubrl
fistpl
das
fs
sbb
imul
fiadds
dec
arpl
loope
push
enter
outsl
enter
or
dec
and
mov
fwait
sbb
ljmp
idivb
bnd
daa
ljmp
call
and
stos
test
lods
shlb
nop
and
hlt
imull
aam
add
cmpsl
lods
enter
cwtl
mov
rorb
mov
popa
test
inc
inc
pop
xlat
lea
mov
cmpsb
and
sub
sbb
loope
push
inc
montmul
cmpsb
lds
cs
decb
xor
xchg
pop
sti
pop
repz
loop
icebp
or
or
sub
cmp
push
or
call
loop
rcll
adc
and
shlb
cmpsl
jne
bsr
fsubl
mov
inc
dec
popa
dec
or
adc
lods
in
adc
adc
mov
mov
sub
dec
stos
mov
fisubrl
repz
pop
scas
jmp
xor
cli
push
mov
cmc
sub
popa
or
movsb
mov
cmp
mov
test
test
add
push
imul
pop
xlat
lds
cs
scas
js
mov
sbb
lods
nop
push
inc
rcl
cwtl
mov
inc
mov
aas
xchg
sbb
sarb
mov
fs
adc
jbe
ret
insb
clc
pop
pop
inc
pop
cli
jge
popf
jb
fisttps
gs
mov
jg
push
cs
out
adc
icebp
push
lea
call
leave
bnd
in
leave
adc
adc
mov
cmp
and
sbb
jae
pop
stos
ds
in
in
mov
jns
and
je
sub
jl
inc
jae
lds
mov
inc
and
loopne
lea
ds
in
iret
mov
jno
add
push
pop
push
pop
adcl
mov
mov
subl
jnp
pop
xchg
xor
int3
lret
nop
test
dec
mov
outsl
dec
sub
cmp
jbe
aam
lfs
fs
push
je
inc
ljmpw
dec
push
out
lds
push
test
xor
aas
outsb
dec
inc
dec
mov
movsb
or
out
cmp
rolb
adc
inc
fwait
adc
xor
inc
icebp
stc
mov
fadds
cmp
sbb
or
mov
in
sub
incl
and
xor
shrl
rorb
jno
mov
adc
in
test
rcr
adc
jbe
inc
sub
andl
test
mov
dec
and
fiaddl
mov
inc
out
lds
test
aad
lcall
dec
aas
cmc
push
jbe
jl
pop
outsl
pushf
dec
test
sarb
mov
repnz
mov
sub
sarb
divb
jnp
mov
sbb
daa
dec
imul
sarb
adc
aam
sbb
fsubs
xor
aas
dec
jecxz
xor
jae
xor
jmp
test
push
pop
fstps
sub
jle
stc
movsb
insl
jl
lds
mov
iret
sbb
dec
clc
pushf
scas
jmp
pop
mov
add
cmp
cmpsl
stc
popa
dec
dec
xchg
inc
sub
les
cld
sub
mov
and
and
xor
ret
negl
push
add
push
test
stos
dec
jecxz
xchg
inc
lret
data16
jae
fisttpll
mov
ds
mov
pusha
jg
cmp
shlb
outsl
xor
xchg
ficoml
lret
in
sbb
out
push
jo
jae
adc
pop
adc
push
mov
pop
movsb
inc
push
xchg
rorb
cmp
sar
stos
daa
inc
ret
in
sub
push
orl
dec
lcall
mov
jbe
cltd
push
jmp
adc
push
out
or
push
and
aas
xor
ds
aas
mov
push
clc
add
add
roll
out
push
cwtl
and
enter
mov
int3
and
sub
and
mov
shl
push
pop
xchg
mov
cmpsb
adc
mov
pop
ret
das
testb
in
and
add
aaa
in
and
adc
sarb
or
cmp
incb
mov
and
mov
sub
jae
fwait
inc
into
or
repnz
jle
or
insb
call
push
jae
icebp
pop
sbbb
push
iret
repnz
bound
out
sbb
push
jnp
push
sbb
push
push
in
in
add
in
pop
jbe
pop
pop
ret
movsb
push
xchg
leave
dec
std
inc
jno
stos
mov
aam
cmp
lds
xor
adc
iret
sbb
pop
sub
mov
pusha
push
dec
sub
shlb
loop
orb
icebp
out
sub
pop
push
xchg
fs
mov
popf
in
cltd
jp
jne
sub
mov
adc
popa
bound
repnz
scas
adc
rclb
push
adc
jae
rclb
add
xchg
int3
arpl
jg
or
cwtl
adc
stc
daa
lahf
mov
or
adc
push
sbb
cmc
mov
enter
ret
sbb
xchg
mov
jecxz
stos
pop
xorb
adc
push
adc
sbb
std
pop
jge
push
shll
mov
mov
lea
sub
std
dec
sbb
test
push
lods
pop
push
push
iret
sbb
stos
cmp
cmpsb
mov
rorl
fmul
xchg
je
mov
out
aaa
cmc
test
mov
cmpsb
insb
es
lahf
icebp
push
pop
xchg
mov
xchg
add
add
es
push
xchg
pop
xchg
sub
in
mov
add
jmp
adc
pop
sub
aas
nop
jp
pusha
mov
xor
cmpsl
mov
adc
bound
iret
dec
dec
or
push
insb
adc
loop
fcmovne
dec
cmpsb
mov
pop
dec
add
dec
mov
inc
push
imul
dec
insl
outsw
mov
les
imul
out
test
ret
pop
scas
call
loope
out
das
jnp
sub
leave
pop
cmp
shl
sahf
cmpsl
cmp
lods
add
mov
es
mov
pop
jg
idivl
jmp
push
js
add
or
repz
leave
subl
or
push
cld
adc
dec
push
mov
and
and
jecxz
add
push
cmp
lcall
js
mov
pushf
mov
xchg
clc
mov
add
sti
jbe
or
xor
adc
jecxz
add
mov
xlat
or
or
push
shl
dec
sbb
cwtl
cli
mov
sbb
mov
jae
loop
fidivl
and
and
adc
fwait
loope
mov
add
or
imul
push
dec
add
mov
out
sub
ficompl
adc
or
aad
xchg
cmp
pop
mov
daa
mov
fwait
jp
push
xor
test
push
jge
in
cmc
jge
jl
push
and
dec
xchg
lahf
stos
iret
bound
mov
mov
dec
xchg
adc
dec
sbb
add
in
loop
cmpsb
addr16
push
mov
xchg
mov
and
lds
jbe
mov
icebp
mov
popf
movsb
es
fsubr
aaa
mov
testb
cmp
sbb
or
inc
jl
cmp
scas
adc
jmp
mov
nop
lods
mov
lods
cmp
fisubrl
push
cli
xor
adc
mov
push
ret
cmp
icebp
pop
jnp
dec
stos
or
insl
dec
push
in
stc
and
push
nop
movsl
pop
lcall
and
xchg
inc
out
inc
fmuls
mov
fwait
out
or
sub
orb
mov
sbb
ret
fwait
pop
mov
dec
repz
cld
jbe
cld
popa
in
aad
sahf
loope
popa
out
adc
ret
sbb
cmp
jp
xor
fnsave
adc
negb
pop
orl
dec
aam
lods
test
ss
xchg
bound
xlat
xlat
add
cmp
hlt
mov
lds
push
sbb
dec
jns
mov
cwtl
cmp
es
cmp
dec
in
adc
inc
aaa
mov
cmc
incl
mov
xchg
js
call
dec
data16
adc
fsts
lea
in
iret
mov
ds
cmpsb
push
inc
push
insb
mov
jmp
aad
xchg
push
js
lock
adc
xchg
push
lret
stc
lds
movsb
sti
arpl
dec
jo
dec
dec
jl
sarl
add
xchg
sbb
jge
popf
sub
xor
pop
and
ja
mov
popa
scas
imul
sbb
mov
cmp
repz
sub
imul
xchg
push
dec
adc
fbstp
and
cmp
aad
push
mov
das
imul
stos
dec
mov
cs
movsl
cmp
mov
dec
and
dec
pop
js
pop
inc
sub
inc
sbb
or
mov
loopne
sub
mov
imul
dec
jne
mov
lret
popf
int
mulb
mov
or
pop
adc
scas
mov
ss
mov
lea
mov
mov
imul
or
pop
mov
or
jl
inc
in
xor
xchg
enter
loopne
test
repz
outsb
mov
lahf
jp
popa
lods
mov
and
mov
sbb
mov
pop
out
ret
pushl
inc
cs
xor
push
loopne
mov
outsl
shlb
daa
pop
movsl
xchg
fs
xchg
pop
leave
stos
insb
mov
xchg
and
and
adc
ljmp
aas
lea
loop
roll
adc
test
dec
push
aaa
mov
pop
mov
add
aam
sysexit
mov
mov
cwtl
push
test
pop
daa
fisubrl
sub
mov
js
enter
cmp
mov
mov
mov
cmpsl
loop
sbb
cmp
gs
adc
sbb
call
lods
mov
iret
xchg
xor
in
jno
fadds
fwait
lea
jmp
pop
inc
sbb
notb
pop
scas
ljmp
and
xchg
mov
stos
pop
mov
into
xchg
jle
mov
jp
push
mov
lea
adc
sub
fstpl
jmp
decb
loopne
jo
sti
cli
mov
jg
dec
addr16
jb
addr16
or
sub
adc
pop
arpl
fmuls
test
sarb
mov
cltd
xchg
pop
sahf
sub
mov
sub
gs
jg
mov
icebp
es
aaa
mov
inc
dec
fsubrl
mov
lods
add
xchg
lret
xor
jo
jecxz
push
pop
mov
or
pusha
test
xchg
cmpsl
fidivs
add
dec
push
add
imulb
dec
clc
dec
lock
xlat
sbb
outsb
imul
or
sub
dec
rclb
sti
xchg
xchg
sti
sub
inc
push
ljmp
stos
jbe
inc
cmpsb
flds
mov
popa
sbb
jne
dec
daa
jne
mov
or
nop
xchg
lret
mov
jle
mov
pop
insb
gs
jnp
out
pop
rcrl
jns
in
rorl
sti
push
push
imul
dec
je
cmp
ja
mov
jne
sahf
xor
mov
sbb
loopne
adc
jbe
int
lea
add
dec
xchg
jne
push
inc
jb
arpl
cwtl
fsubr
cmp
push
gs
scas
mov
mov
push
and
mov
jmp
neg
das
dec
and
sbb
inc
les
push
cmp
stc
aam
fs
into
mov
loop
leave
int3
jbe
sbb
icebp
lret
pop
in
pop
jno
sub
push
and
shrb
adc
test
ret
icebp
sub
pop
sahf
push
ret
adc
cmpb
and
gs
jno
xchg
dec
xchg
mov
ret
jl
je
and
lock
mov
inc
sbb
mov
lcall
xchg
outsl
cmp
sti
mov
pop
push
sbb
mov
pop
xchg
xchg
mulb
push
push
xchg
push
jns
fcmove
push
shrb
inc
dec
mov
add
cmp
and
xlat
dec
clc
mov
mov
mov
stc
lods
pop
gs
add
testl
sub
ja
pop
inc
push
fldl
xor
sbb
gs
pop
inc
outsb
mov
test
mov
roll
push
push
xchg
mov
hlt
sbb
xorl
repnz
js
jae
pop
scas
stos
sub
push
mov
and
push
shlb
mov
popa
pop
or
sub
add
int
mov
pushf
lods
pop
ret
inc
pop
lock
scas
jmp
sbb
daa
testl
jae
pop
andl
add
ret
jg
aam
shll
jmp
repnz
mov
je
pop
aas
enter
enter
pop
fdiv
inc
test
cltd
mov
outsl
icebp
inc
lea
mov
out
push
nop
loopne
cmp
test
aad
test
xor
rorl
xchg
lahf
xor
lahf
out
cmp
aas
or
push
jb
inc
sahf
xchg
push
dec
shl
ljmp
roll
push
addb
cld
arpl
or
loop
pop
cmp
lahf
outsb
mov
fstl
sub
pop
mov
jae
add
out
testb
mov
push
fsubrl
movsl
imul
dec
sarl
fildl
stc
push
xor
cs
outsl
adc
inc
cmp
movsb
pop
stc
sub
push
mov
sahf
sbb
ljmp
nop
or
stos
aaa
sub
insb
add
aas
dec
pop
stc
addr16
dec
cmp
notb
pop
movsl
xor
lds
cltd
stc
xor
sub
subl
push
inc
add
test
xchg
cmp
and
cli
popf
dec
repz
sbb
test
insb
fiaddl
xchg
inc
orl
jl
sub
in
jl
into
mov
inc
pop
xorl
pop
xchg
dec
popf
mov
jmp
pop
push
add
mov
push
stos
sbb
mov
repz
push
cmp
sbb
xchg
call
in
push
mov
scas
loopne
or
je
insb
dec
push
lods
mov
cmp
xchg
xchg
out
cmp
sahf
fistpll
filds
inc
sub
test
sbb
lret
shlb
in
icebp
ds
push
insb
mov
in
jge
fcmovne
sti
xor
mov
lock
out
out
xchg
pop
push
jno
test
cwtl
nop
mov
jno
add
xchg
mov
loopne
cs
aad
lretw
lea
mov
movsb
sub
jmp
or
sub
fnstenv
mov
clc
inc
xchg
mov
addb
sub
das
xchg
inc
mov
stos
in
imul
jae
or
mov
pop
dec
dec
aaa
scas
pop
icebp
jno
rorb
add
jp
add
popf
fbstp
mov
and
xchg
jae
dec
cmp
xchg
out
and
orb
sub
inc
stos
cld
or
mov
or
push
movsl
in
lahf
push
jbe
lret
shl
add
xchg
inc
mov
lods
push
jns
int
cs
loopne
scas
mov
cmpsb
inc
ja
add
sahf
ret
arpl
or
test
imul
mov
orb
fwait
jb
sbb
cmp
cmp
mov
int3
and
mov
leave
xor
or
pushf
mov
jl
mov
and
sbb
jb
pop
fimull
fs
mov
sti
mov
cmpsl
andl
bnd
lods
xchg
movsb
cli
xor
fldl
mov
inc
add
mov
sub
fdivl
loopne
je
pop
adc
repz
mov
or
add
aad
in
lea
cli
bswap
sbb
stos
push
or
xchg
mov
cmp
insl
jl
loope
dec
movsl
iret
cmp
mull
ds
push
mov
outsl
push
enter
in
mov
or
xlat
insb
shl
aas
jge
pushf
xor
dec
push
cltd
ljmp
dec
aad
icebp
mov
adc
pop
cmp
cmpsb
mov
stc
jg
sub
jae
scas
sub
push
sub
dec
testl
dec
push
dec
jbe
imul
arpl
aam
xor
pushf
or
in
mov
cs
arpl
and
jl
jle
cmp
in
fwait
test
add
mov
and
out
lods
cmpsl
mov
inc
prefetch
in
adc
rcr
cmp
adc
or
inc
in
daa
dec
pop
shll
in
add
call
lods
sbb
es
test
sub
mov
in
lods
call
sub
popf
adc
mov
mov
or
test
mov
rol
push
test
arpl
fcoml
stos
pushf
or
ljmp
arpl
leave
adcb
dec
xchg
sub
dec
xor
mov
inc
scas
push
jo
pop
cmpsl
mov
cwtl
lea
enter
loope
and
icebp
and
xchg
and
and
push
stc
or
mov
jo
fsubrl
push
stos
jb
mov
mov
fildll
dec
jns
mov
cmp
imul
push
xchg
add
ret
sbb
mov
lret
sub
bnd
divl
lock
inc
xchg
subb
inc
cmpsl
imul
cmp
inc
stos
enter
inc
dec
push
adc
xorw
stos
sub
jle
insb
sbb
lahf
mov
jo
pop
fdivr
inc
mov
imul
fwait
mov
pushf
cld
add
pop
pusha
sub
or
add
dec
or
lret
add
add
pop
add
stos
add
mov
add
cltd
jmp
inc
dec
cmp
jle
or
sub
or
sbb
and
xchg
std
pop
imul
xor
add
lods
pop
cmpsl
aam
outsl
pcmpgtb
cmp
or
add
not
sbb
inc
in
xor
aas
pop
int3
popa
and
xor
adc
test
xchg
cmp
pop
lods
add
jl
and
push
and
outsb
mov
cmp
mov
lods
fnsave
jae
dec
xor
aas
mov
stc
in
popl
mov
daa
add
cmp
xor
movsb
inc
xor
add
into
xor
ret
loop
leave
push
xchg
cmp
ret
enter
push
enter
cld
xorl
daa
mov
push
jge
push
mov
or
stc
pop
mulb
xor
sbb
xchg
cmpsb
fmull
mov
decb
sbb
cmp
leave
imul
inc
je,pn
out
mov
rclb
sahf
std
xorb
mov
incb
cmp
jnp
mov
repnz
push
and
nop
push
pop
pushf
inc
bound
cmpsb
test
lds
pop
stos
test
sbb
sbb
cld
sti
cmp
cmp
out
add
lods
loop
mov
out
sbb
sbbl
shlb
push
lock
int
add
js
pop
mov
add
sub
mov
je
cmp
jmp
fwait
hlt
cmp
pusha
gs
xor
sub
mov
add
dec
ss
lcall
ret
imul
popa
mov
mov
pop
pop
fbld
dec
jecxz
or
je
bound
sbb
popf
and
dec
ficompl
lcall
cmp
ds
jne
test
add
pop
fmuls
cmpsb
mov
out
jecxz
xor
pop
mov
pop
fwait
mov
inc
cli
fcoml
rclb
daa
out
pop
fsts
aad
ret
lret
cltd
icebp
inc
pop
flds
rcll
jns
rcll
xchg
ret
loop
jmp
divb
int3
mov
or
pop
adc
mov
and
xor
push
adc
sub
das
mov
shll
mov
scas
push
mov
cli
lods
imul
in
popf
stc
mov
shlb
push
call
dec
repnz
sub
adcl
xlat
lods
adc
les
jo
add
sub
mull
stos
pop
xchg
cmp
mov
imul
dec
sarl
mov
icebp
repz
negl
push
adc
cld
mulb
ficoml
jg
pushf
jnp
hlt
and
inc
testw
or
testl
sub
in
ret
lret
shrb
loop
pushf
aad
and
cld
mov
arpl
in
xchg
jno
cmc
mov
jo
push
lods
mov
pop
mov
in
sub
insb
jmp
mov
sbb
cmpsl
popf
mov
add
je
ror
pop
push
insw
sbb
sbb
mov
orl
fcom
mov
loop
fcomp
arpl
xor
push
xor
or
cli
jg
xchg
xchg
sbb
enter
add
add
xchg
xor
mov
jp
cwtl
mov
pop
xchg
fs
pushf
mov
adc
addr16
and
xchg
or
adc
cs
xor
xchg
dec
push
mov
pop
in
mov
mulb
ja
and
mov
dec
test
enter
lods
sbb
inc
das
lret
into
xor
inc
sub
lahf
sub
bound
adc
xchg
arpl
push
mov
push
or
xchg
lds
or
cmp
and
pop
test
jo
in
dec
cmp
pop
inc
or
enter
movsl
mov
mov
test
stos
mov
or
fsubr
pop
and
and
or
xlat
add
rclb
jbe
inc
rcr
loope
sbb
xchg
repz
sbb
cmp
popf
clc
decb
adc
mov
adcl
insb
sub
sub
loope
mov
dec
leave
jp
das
sbb
xor
stos
inc
push
cmp
leave
insl
imul
out
mov
icebp
je
mov
mov
sub
xor
push
mov
ja
testb
sub
and
out
mov
into
shlb
lret
push
mov
icebp
push
xchg
xor
jl
fcmovne
xorb
lret
mov
stos
leave
xchg
push
sub
icebp
rcr
ret
lock
push
add
pusha
xchg
push
dec
mov
test
and
es
jno
xor
das
gs
fstps
and
cmpsl
cmp
test
outsl
push
bound
gs
test
shll
cmp
xchg
jno
add
jecxz
mov
sarb
out
push
and
pop
rclb
push
jae
xchg
test
jns
movl
inc
adc
mov
push
pop
shll
add
inc
fcoml
or
lcall
mov
cmp
inc
fmull
add
fistpll
stos
in
test
push
popf
mov
imul
popa
ficoml
inc
sbb
jb
jbe
inc
and
cmp
xor
jno
sbb
xor
push
xchg
into
rdpmc
or
pop
jo
rcrl
sbb
and
cmp
xlat
pop
push
mov
loopne
fiadds
cli
pushf
and
dec
push
xchg
jae
xchg
nop
pop
cs
movsb
test
dec
xorb
outsl
lods
cld
out
call
sub
jg
movsl
dec
loopne
push
pusha
xor
stc
add
mov
mov
mov
inc
in
inc
repnz
inc
cmc
xor
nop
aam
outsb
cmp
outsl
pop
push
push
movsb
mov
pop
dec
jp
stos
adc
add
mov
xor
mov
bound
mov
adc
xchg
loop
push
xchg
stos
stos
das
imul
jl
xor
jg
jl
call
mov
inc
rcr
add
addr16
mov
inc
repz
das
mov
mov
es
mov
js
test
adc
lret
popa
jb
lahf
je
inc
loop
dec
in
mov
pop
and
frstor
push
rclb
mov
rorl
sti
jae
jbe
inc
out
and
in
add
popa
cmpsl
cli
cmpsb
and
pop
mov
xchg
adc
divb
les
inc
cs
xchg
mov
sub
adc
in
outsb
xchg
inc
mov
pop
mov
push
pusha
xchg
jns
mov
ds
dec
ret
std
sbb
adc
lods
cltd
adc
in
xchg
insl
arpl
xchg
popa
scas
test
pop
inc
arpl
dec
lds
leave
repnz
push
or
adc
pop
mov
cwtl
cwtl
mov
mov
cmc
inc
dec
int
and
sbb
dec
int3
add
scas
pop
stos
cmp
ret
xchg
pop
out
pop
sbbb
push
mov
push
test
test
jge
pop
push
cmp
out
loop
and
out
pop
rcrl
xor
daa
or
out
add
jbe
fidivrl
pushf
mov
les
repz
and
sub
mov
stc
xor
es
xchg
pop
dec
jnp
cld
ret
or
in
insl
and
mov
std
pop
xor
lea
fidivl
cmpsl
xor
pop
sbb
call
cs
or
lds
outsl
negb
lret
aaa
int3
cld
lcall
scas
mov
and
push
adc
gs
push
push
in
sub
mov
mov
leave
or
test
dec
sbb
pusha
mov
and
fstpl
mov
xchg
jbe
dec
mov
enter
fidivs
cmpsb
jno
inc
lods
ljmp
ds
push
mov
dec
xchg
fadd
out
icebp
sbb
xchg
addr16
ds
mov
and
cli
sub
cmp
and
rorl
jae
aad
rcrb
and
pop
lock
insb
lods
ja
xlat
aaa
and
addl
call
cmpsb
mov
testl
pop
enter
push
pop
jno
enter
daa
int3
loope
inc
fadds
js
push
ljmp
cmp
add
dec
mov
mov
sti
xor
fsubrl
sbb
repnz
mov
sbb
cmp
lods
push
pop
xor
out
xor
aad
add
insb
es
fsubr
push
nop
out
dec
lods
lret
sahf
nop
push
shrb
sbb
jmp
xchg
jns
xchg
pop
popa
jge
sub
xor
and
in
mov
es
inc
jg
adc
and
cmp
pop
mov
imul
inc
cmp
hlt
or
fcomps
or
jne
pushf
push
jmp
out
lcallw
cmc
insl
in
xchg
std
sbbl
sub
call
in
xchg
adc
xor
loope
test
xor
notl
arpl
lods
jg
jecxz
jg
and
cmp
mov
mov
dec
ret
pop
jge
mov
loop
gs
rolb
mov
jl
test
jl
sbb
mov
shlb
xor
lcall
dec
xor
xchg
xor
sbb
adc
idiv
andb
mov
movsb
sub
loopne
fists
ds
cmp
inc
mov
xchg
std
sti
sbb
movsb
xchg
stos
mov
mov
pop
push
ss
sub
xchg
jmp
sarl
sub
push
inc
cmp
dec
test
inc
or
leave
enter
out
data16
xor
sbb
call
jb
bound
mov
cmp
jecxz
sub
movsb
pop
jl
in
or
idivl
test
shrl
rorb
loope
mov
xchg
cmc
popa
loopne
rorl
in
out
decl
fdivs
mov
adc
out
inc
xchg
or
nop
iret
shlb
jle
xor
mov
mov
push
aad
xor
mov
pushf
push
ja
ficoml
jmp
sbb
andb
and
add
push
mov
sbb
rep
add
mov
daa
push
shl
insl
sbb
mov
mov
inc
roll
popf
ja
pop
pop
adc
and
dec
push
js
fdivrp
mov
push
jle
fstpt
sub
xor
mov
sbb
mov
fs
sub
loope
ret
cmpsb
pop
andb
popa
adc
push
sub
push
and
fcomp
mov
add
jns
fstpt
scas
or
or
test
pushf
js
add
mov
dec
add
dec
nop
out
jmp
inc
lock
pusha
imul
dec
cmpsb
fbstp
push
and
fcmovnb
test
add
daa
out
mov
inc
mov
push
rorl
mov
lock
mov
scas
aas
out
imul
ficomps
mov
mov
scas
fsubrl
test
idivl
xchg
push
mov
pop
xor
aas
and
cmp
mov
pop
lea
fisttps
pop
mov
inc
push
adcb
inc
loop
sarb
test
loopne
mov
mov
out
fsubl
pop
jns
mov
test
push
mov
ljmp
ret
mov
adc
xchg
lcall
addr16
mov
popa
icebp
push
cmp
jmp
daa
inc
or
xchg
adc
jae
imul
push
pop
pop
inc
mov
popl
fs
aam
and
sub
or
fwait
call
daa
jp
outsb
js
bound
dec
or
dec
add
outsb
imul
je
push
or
xchg
push
je
and
lret
or
dec
popf
rorb
mov
fsubp
movsb
lret
adcb
out
jo
or
sbb
dec
cli
scas
test
fs
and
inc
sbb
pop
mov
mov
test
xchg
aam
pop
mov
push
and
cmp
rclb
sbb
and
in
adc
sub
mov
stos
mov
bound
xlat
adc
dec
data16
je
xor
mov
cld
pop
fisttpll
or
pop
push
out
imul
cmpsl
mov
pop
int3
mov
int3
movsl
xlat
in
out
das
sub
mov
jg
pop
pushf
add
lret
and
add
dec
or
sbbb
sub
jno
test
dec
push
cld
pop
pop
bound
push
pop
das
lock
or
cmc
cli
xchg
and
and
cltd
aam
mov
add
or
adc
push
scas
rorb
inc
jb
mov
xor
add
jmp
aaa
sub
je
imulb
or
icebp
mov
sub
xchg
out
lods
mov
das
pop
sub
jge
test
mov
fsubs
sbb
imul
jno
fidivl
dec
dec
mov
cld
jbe
dec
stc
jmp
sub
or
fimull
sbb
push
pop
pushf
rcl
aas
inc
push
dec
xchg
sbb
shrl
xor
es
add
add
mov
jae
mov
jp
add
imul
int3
push
ds
ja
dec
stos
jp
inc
fwait
sahf
pop
or
inc
lods
xlat
pop
push
into
xchg
sbb
xchg
mov
pop
jno
shlb
mov
stos
push
shrl
mov
pop
adc
js
sbb
movsb
rorl
int3
push
int3
or
pop
mov
pop
loop
lret
jmp
cmp
rcrl
inc
mov
insb
inc
xchg
jge
lock
movsb
orb
dec
sbb
push
push
imul
outsl
inc
hlt
addr16
lcall
inc
push
inc
sub
mov
movl
mov
enter
pop
jae
jmp
inc
and
mov
add
pop
cwtl
push
add
xchg
inc
movsl
addl
dec
sbb
ljmp
push
push
sbb
sbb
sbb
mov
jle
sahf
jae
adc
xlat
imul
xchg
xchg
rolb
out
push
jmp
and
inc
jmp
pop
cmpsb
andl
push
cmp
leave
loope
sub
dec
fisubrl
cmp
adc
sbb
mov
dec
sub
addr16
leave
xor
movsb
mov
mov
adc
scas
out
subl
pop
ds
xchg
mov
out
pop
pop
xchg
mov
mov
adc
leave
inc
fcmovne
fmul
push
xor
decl
jb
cmc
insl
xor
xorb
xchg
les
repnz
or
in
xor
push
mov
jbe
test
jae
or
cmp
dec
repnz
mov
cmpsb
pop
jae
jg
xchg
and
stos
or
or
pop
and
mov
mov
ret
lret
mov
push
xlat
fiadds
mov
mov
lods
popa
arpl
lock
out
add
sbb
pop
mov
inc
into
ficoml
mov
ss
add
pop
hlt
lcall
shll
insl
push
in
and
or
jmp
imul
sub
push
hlt
jb
pop
pop
jp
imul
popf
sub
loop
lcall
mov
shll
cli
into
adc
stos
jnp
lds
dec
cmp
pop
rclb
sti
out
fisttps
gs
int
cmp
enter
or
sbb
in
add
pop
or
dec
add
mov
push
scas
daa
inc
sub
call
fnstsw
in
iret
leave
iret
pop
jb
push
repnz
fstpl
jg
jge
cmp
ja
jmp
push
outsl
popf
insl
test
sahf
ljmp
xchg
into
scas
in
ss
insb
add
xchg
addr16
loopne
or
pop
xor
dec
jge
loope
loope
scas
pop
mov
lcall
mov
test
out
ss
sub
pop
cmpsl
xchg
dec
add
xchg
and
push
xor
ret
aaa
mov
lret
mov
xor
sbb
insl
loope
jecxz
add
sarl
sub
jne
jo
sub
sub
add
or
pop
jnp
repnz
push
cwtl
cmp
sbb
pop
mov
mov
pop
in
pop
insb
push
or
loop
imul
shlb
popa
or
lret
xchg
xchg
dec
pop
push
push
push
sahf
enter
outsl
push
das
mov
sahf
cs
subl
mov
xor
lock
ljmp
arpl
jae
jg
out
cmc
dec
stos
cmp
cmp
iret
ja
xor
pop
mov
push
mov
push
mov
jle
add
jo
leave
mov
ja
jbe
mov
mov
rcrb
dec
xor
loope
xchg
jecxz
xchg
mov
xchg
and
arpl
push
sub
jne
icebp
loop
jmp
out
inc
inc
mov
push
ss
jmp
aam
mov
inc
mov
sub
mov
push
aad
push
fcmovnbe
test
and
pusha
shr
xchg
inc
sub
lahf
fidivrl
das
pop
dec
rcrb
adc
das
in
lods
inc
rclb
test
test
popa
les
popa
dec
xor
push
and
push
loopne
mov
jle
data16
sbb
cmp
mov
rorl
dec
js
imul
jl
cmp
in
xor
adc
jp
stos
out
std
inc
pop
ficoms
addr16
ss
sub
push
xor
mov
leave
movsb
jnp
mov
jge,pn
cmpl
into
dec
add
xor
pop
cs
mov
adc
rcr
push
cmp
sub
faddl
pop
test
cld
mov
adc
or
mov
and
sbb
das
xor
ror
fidivrs
shll
pop
sti
js
jge
gs
cld
ja
push
sbb
xchg
lock
sub
outsl
out
loopne
addr16
push
xlat
jo
adc
lods
lret
xchg
mov
adc
mov
push
dec
rclb
xor
lods
and
inc
int
xor
mov
or
push
and
sub
cmp
and
push
sub
adc
mov
aad
mov
ljmp
movsb
xchg
lret
fs
testl
aas
or
mov
push
cld
pop
sbbl
fldt
adc
rcrl
cmc
stc
test
push
or
jle
jb
ret
cmp
jb
subb
jb
push
in
scas
xchg
enter
cld
mov
ret
cmpl
or
lahf
or
call
daa
push
sbb
sbb
inc
sbb
icebp
push
pop
jecxz
or
repnz
test
mov
add
cltd
js
sub
in
push
out
adc
iret
cmp
cmp
imul
rcll
mov
sbbl
shl
mov
fcoml
adc
jl
lcall
cltd
dec
inc
or
dec
xchg
out
mov
xchg
repnz
lods
insb
cmpsb
lea
xchg
xchg
sbb
adc
scas
push
ss
xor
fwait
mov
mov
shlb
pop
sbb
xchg
xlat
mov
les
fsubrp
inc
push
xor
mov
fs
arpl
mov
lea
xchg
pusha
adc
xor
dec
addr16
dec
mov
loop
out
and
cmp
aam
orb
cmpb
movl
jecxz
rorb
pop
jmp
push
sbb
sbb
push
movsl
test
shll
xlat
movsl
out
mov
xchg
les
rolb
mov
mov
and
adc
loope
scas
jns
push
add
push
mov
addl
xor
xor
mov
and
enter
fstl
adcl
mov
mov
popf
fsubrp
call
mov
and
aas
aas
out
pop
sbb
xchg
std
adc
add
loope
cmp
je
xchg
lods
test
xchg
ficoml
push
cli
add
popf
jae
ljmp
or
movsb
jge
mov
in
cmp
cmp
inc
jmp
aad
mov
jl
lods
add
call
xchg
cmp
sub
fcomip
pushf
dec
xor
sub
push
fsub
push
int
pop
jae
icebp
addl
ds
rcrl
sub
ja
out
shlb
outsl
sub
bound
mov
fstpl
jbe
mov
ja
push
lods
fwait
mov
mov
les
mov
gs
cmp
sub
inc
or
lret
arpl
cmp
mov
dec
jns
cmp
mov
cmp
lahf
loope
lret
cltd
mov
std
into
inc
and
jl
xchg
orb
mov
fisttps
stos
pop
lods
sub
push
cmpsb
xor
daa
adc
and
imul
cli
icebp
or
ret
aad
cmp
sahf
test
aaa
jb
ja
push
fs
in
push
ja
shll
pop
dec
cmp
lcall
inc
int3
rorl
enter
mov
or
mov
mov
cmp
andb
fistpl
cmp
lock
sbbb
cltd
cmp
insl
xchg
test
scas
push
lea
sahf
aad
loop
imul
inc
mov
aad
out
xor
cmp
fiadds
shlb
pop
push
push
or
push
les
dec
cmc
inc
sbbb
jg
push
dec
and
test
hlt
into
cmp
jp
ss
xor
cltd
std
inc
mov
dec
aaa
loop
stos
or
out
jnp
out
fisubs
loopne
xchg
test
sbb
push
jae
cmp
mov
aad
pop
or
mov
mov
int
jae
dec
jno
in
in
jns
in
lock
cmp
mov
push
jbe
sbb
rcr
and
stc
test
notb
fnstenv
lret
jmp
xchg
cli
xor
mov
fisttpll
xor
cmp
sub
fisttps
dec
adc
dec
int
inc
fdivrs
fwait
inc
dec
mov
push
sub
addr16
arpl
daa
sub
popa
mov
and
mov
add
sbb
aas
mov
outsl
xchg
insl
into
push
xor
ljmp
aam
mov
lahf
mov
lock
repnz
fidivl
arpl
stos
push
pop
mov
stos
shl
std
fmull
stc
ret
push
adc
jle
aam
jmp
aam
and
fsubr
pop
out
fsubp
sti
dec
fs
inc
ret
je
mov
int3
mov
shr
ficomps
insl
pop
adc
push
ficoms
cli
jne
xchg
dec
mov
arpl
movsb
jl
fists
repz
pop
lret
push
cwtl
cmpb
lods
push
jl
mov
ja
jl
repz
bound
pop
mov
sub
dec
ljmp
andb
fs
ja
rcrl
xchg
das
fsubs
js
push
xchg
sbb
das
xorl
aad
inc
psrlw
movsb
inc
add
adc
push
mov
aad
mov
das
in
push
mov
mov
dec
mov
leave
sahf
out
push
or
cmc
leave
cwtl
push
cld
jo
imul
addr16
inc
cmc
inc
pop
icebp
cmp
cld
orl
std
cmp
mov
xchg
pushf
in
shl
pop
je
loope
mov
mov
dec
shl
inc
mov
jmp
mov
jae
lods
pop
mov
fildl
fcoms
mov
les
push
inc
rolb
lahf
int3
xchg
pushf
popf
jge
movsl
cmp
sbb
sbb
adc
mov
dec
adc
push
push
jge
push
cli
xchg
mov
adc
lock
add
push
mov
out
out
les
neg
sbb
inc
les
xor
movsl
incb
push
test
jmp
mov
jp
lcall
add
push
insl
nop
movsb
dec
aas
out
adc
test
out
inc
test
jmp
fldenv
pop
jmp
push
frstor
and
pop
mov
add
cltd
jnp
in
imul
popf
inc
cmp
loop
jecxz
push
push
mov
sub
outsl
cmp
dec
or
test
test
fidivrs
xchg
inc
dec
adc
in
sub
lcall
or
nop
ret
outsl
mov
rorb
lods
sbb
and
push
stos
mov
movsl
lret
mov
loope
outsl
das
sbb
push
add
ja
and
jge
loopne
inc
jns
js
shrl
inc
push
pop
movsl
push
scas
ljmp
sti
push
xchg
int3
jle
xchg
push
fxch
js
call
outsb
not
mov
or
cmpsb
sbb
enter
lods
adc
ja
jns
test
leave
lcall
xchg
adc
out
adc
push
pop
jnp
popf
ja
insl
cmp
aam
inc
mov
daa
hlt
lock
mov
das
add
fildl
add
icebp
pop
lods
pop
add
xor
jp
inc
cmp
push
cwtl
and
or
pop
mov
and
fs
call
mov
sub
dec
inc
cmp
test
fidivs
shlb
aam
sbb
lea
lods
scas
inc
jecxz
ficompl
outsl
and
cli
aas
sbb
lods
xchg
mov
fisttpll
fisubrl
sub
rorb
cmp
fstps
mov
mov
jb
loope
inc
sarb
mov
jno
cmpsl
andl
lahf
rol
leave
out
repz
cmp
push
or
and
xchg
mov
roll
test
xchg
cmp
jae
push
jecxz
cmp
dec
inc
cmpsl
dec
mov
xchg
nop
cmp
es
cmp
dec
fsubl
in
mov
pop
and
lea
fsubl
daa
dec
pop
sbb
push
lret
test
mov
xchg
push
call
lret
jg
xlat
outsb
sbb
jecxz
inc
fcomps
lcall
mov
mov
test
pop
push
sbb
adc
inc
jo
mov
and
loop
add
jl
mov
push
mov
imul
mov
push
test
xchg
jo
inc
adc
sub
pop
adc
iret
push
addl
pop
cmp
test
inc
adc
gs
cmp
push
inc
jb
aam
scas
imul
jecxz
push
xor
inc
mov
adc
leave
push
mov
mov
hlt
mov
in
negb
movb
insl
sbbl
mov
movsb
test
fwait
lods
ljmp
pusha
push
inc
mov
push
jmp
push
shrd
sarl
mov
cmpsb
mov
mov
movsb
or
into
jno
xchg
pop
loop
adc
js
pop
inc
ds
jp
pop
jno
mov
out
or
dec
mov
pop
or
add
lahf
cmc
outsl
sbb
adc
push
inc
arpl
jbe
mov
iret
cmp
sbb
test
xchg
or
and
mov
sub
mov
int3
cli
xchg
xchg
mov
testb
xor
data16
xor
sbb
loopne
mov
push
xchg
mov
fldcw
mov
loope
sbb
jle
test
jmp
sub
mov
inc
pop
xchg
insl
inc
xor
insl
ss
cmp
pop
push
sub
cltd
push
xchg
shr
iret
add
mov
push
sbb
or
xor
movsb
punpckhbw
in
out
loope
mov
inc
repnz
ja
push
jb
jns
movsl
sub
jo,pn
push
sub
jle
jecxz
loope
in
jmp
icebp
dec
or
jmp
cwtl
jno
ja
insb
jmp
nop
push
repz
aad
jl
cmp
xchg
lock
push
loopne
stc
test
cli
xor
push
lret
push
bound
push
std
pusha
fsub
loopne
mov
pop
xchg
lret
pop
fldt
mov
rcrl
call
push
inc
aaa
ljmp
lds
inc
push
mov
mov
pop
std
sub
pushf
addb
mov
aam
mov
xor
fsubrl
inc
sti
loop
outsl
negb
mov
rcrl
loope
cs
stc
shll
mov
push
shll
mov
push
jg
test
aas
mov
movsl
cmp
cltd
loop
or
pop
mov
mov
xchg
cld
mov
ret
daa
loope
hlt
les
cmp
push
mov
cmpl
fmul
sbb
mov
fcomp
inc
testl
xchg
mov
cmpb
push
mov
inc
mov
ret
sub
pop
das
sahf
push
int3
cld
pmulhw
ljmp
loop
lcall
lods
adc
imul
jge
js
imul
xchg
sbb
cltd
mov
cmp
roll
arpl
dec
sub
scas
repz
dec
gs
inc
fnstsw
into
inc
adc
fimuls
cltd
xor
inc
popa
or
rorb
xlat
cmp
std
mov
enter
xlat
dec
cmp
clc
xor
scas
mov
mov
mul
pop
sub
les
scas
fcmovnbe
sub
sbb
mov
jne
adc
dec
ljmp
lcall
insb
or
loop
jle,pn
add
inc
fldenv
push
xchg
in
icebp
mov
xor
in
imul
fidivl
pop
iret
cmpsb
adc
ljmp
insb
mov
das
popa
and
pop
pop
imul
scas
xchg
outsl
jecxz
aad
jnp
add
pop
mov
das
adc
shl
jmp
add
push
je
sbb
add
pop
sub
fisubrs
mov
xor
sbb
xchg
push
and
popa
mov
in
nop
icebp
mov
mov
mov
cmp
rcl
sub
mov
mov
push
jle
and
mov
and
lds
jmp
std
pop
xor
and
int
inc
mov
inc
nop
out
dec
fnstenv
nop
xor
or
insb
test
arpl
or
jle
insl
push
dec
inc
lcall
add
mov
jnp
sub
movsb
iret
dec
jmp
add
mov
add
stc
fisttpl
adc
pop
inc
test
jno
leave
daa
cld
jp
inc
xchg
sbb
out
ljmp
push
lea
mov
insl
push
sarb
sbb
jnp
movl
xor
xchg
pop
outsl
pop
ret
push
int3
in
mov
outsb
andb
lea
mov
mov
or
popa
fmuls
cmp
fcmovb
xor
xchg
das
fs
sbb
jbe
xlat
mov
lahf
das
push
inc
dec
xchg
add
xor
out
cmp
or
push
gs
lds
dec
cmpsl
imul
movl
adc
mov
mov
sub
cmpb
jbe
int
sbb
pop
pop
sub
jge
inc
out
push
mov
sub
push
pop
lea
call
mov
subb
cmpsl
inc
sbb
jno
and
sbb
push
push
fstpt
cltd
rclb
aaa
xlat
pushf
fcomi
or
lock
adc
mov
ret
sub
cmp
xor
and
lret
xor
push
in
mov
xchg
scas
push
inc
ror
mov
in
xchg
call
lret
push
xor
or
popf
inc
int3
lret
dec
mov
movsb
mov
shlb
bound
cmp
jno
push
pop
es
sbb
imul
add
outsl
mov
enter
fldln2
vunpckhps
mov
testb
clc
dec
mov
add
xchg
inc
negl
xor
sub
xor
sbb
nop
shlb
jp
sbbl
neg
roll
jmp
mov
mov
fwait
xor
addb
adc
xor
and
mov
mov
adc
mov
sbb
mov
jbe
call
fmuls
xchg
xlat
xchg
jmp
sbb
adc
test
add
cmp
jle
leave
xchg
push
push
mov
ja
xor
pop
pop
sub
pop
es
push
mov
xchg
pop
lret
sub
sub
dec
repnz
mov
mov
inc
test
jne
adc
das
mov
aad
or
fisubs
popf
leave
mov
stos
mov
sti
or
xlat
dec
mov
scas
sub
mov
insb
mov
xchg
inc
fidivs
or
and
arpl
jne
enter
sub
inc
data16
pop
xchg
adc
mov
cli
mov
pushf
sarb
popf
lahf
movsl
ds
sbb
mov
xchg
aas
movb
pop
mov
sbb
inc
lds
mov
jp
int3
sbb
lock
call
or
sbb
sbb
lea
pop
cmc
mov
pop
pop
insb
into
jno
lahf
xor
and
in
pop
dec
icebp
dec
jns
leave
mov
mov
mov
call
cmp
repnz
and
fstpl
fcmovnbe
ficoml
adc
mov
jnp
adc
push
mov
loope
sub
mov
imul
pop
std
cmc
pop
sbb
mov
imul
int
data16
mov
test
pop
inc
adc
pop
shrb
or
dec
rorb
ja
iret
ja
xor
xchg
inc
data16
adc
pop
js
mov
aam
xor
nop
mov
movsl
jp
test
cmp
stos
mov
repnz
imul
jnp
inc
jge
push
adc
mov
and
dec
mov
mov
ret
bound
add
jg
mov
cwtl
mov
call
shll
imul
jmp
mov
cmp
adc
jo
js
pop
outsb
jae
inc
mov
dec
push
and
sub
xchg
into
inc
imul
and
cmp
push
pop
xchg
fwait
bound
les
xchg
cld
les
mov
movsl
cmc
dec
and
pop
aad
jne
pop
cld
cmc
push
mov
insl
mov
lahf
enter
insb
push
repz
push
cmp
xchg
sub
call
adc
fcompl
sub
jle
and
shlb
jae
cwtl
test
and
call
movsl
mov
out
sbb
loop
jmp
dec
sbb
pop
xchg
sti
mov
and
push
aaa
sub
and
das
add
cltd
out
jle
xor
mov
les
adc
sti
ret
push
sbb
inc
inc
mov
fisubs
rol
out
mov
push
daa
dec
mov
add
or
stos
out
push
inc
push
xchg
mov
adc
mov
popf
lret
pusha
mov
adc
std
int
mov
imul
cmc
sub
xlat
push
mov
loopne
and
mull
pop
dec
loopne
xchg
sahf
fmulp
xchg
xchg
lcall
pop
jmp
pop
idivl
mov
sbb
sbb
push
jbe
add
in
test
jb
dec
iret
lret
cli
inc
mov
int
loop
ss
xor
loopne
mov
or
sti
inc
mov
lds
inc
inc
push
cmp
lock
loop
rolb
fidivs
jno
andb
mov
in
fnstsw
int3
mov
mov
out
inc
jmp
push
out
popf
cld
mov
or
inc
mov
pop
push
add
xor
arpl
mov
test
push
lds
cmpsl
mov
pusha
xchg
cmp
pop
test
and
mov
imul
loopne
sbbl
cmc
and
pushf
push
int3
fnstcw
add
test
popf
push
jnp
cmc
and
jbe
xor
nop
push
pop
ljmp
adc
push
mov
vmovapd
push
loopne
jb
sbb
pop
push
dec
sbb
repnz
mov
pop
ret
fsubp
sub
repz
mov
push
inc
inc
lods
add
out
mov
sbb
xlat
clc
imul
lahf
jp
scas
xlat
lahf
mov
aas
xlat
mov
push
lods
outsb
add
scas
mov
sbb
popa
mov
mov
xchg
into
pop
daa
rclb
mov
bound
jp
push
in
insb
outsl
outsb
fwait
bound
lret
fs
cmp
dec
adc
ja
jno
rcl
pop
lahf
insl
mov
in
insl
les
in
pop
inc
insb
test
xchg
cmp
and
adc
imul
adc
cmp
jmp
cmpsl
mov
andps
sti
mov
inc
adcb
pop
pop
fucomip
call
push
aas
cmpsb
inc
pusha
push
add
sbb
ficoml
ja
cltd
sbb
in
je
out
or
inc
mov
mov
dec
test
mov
cwtl
pop
push
enter
cmp
add
int
shl
sti
fldl
adc
sbb
or
ficoml
scas
into
add
icebp
jecxz
add
mov
push
and
stos
es
rclb
pop
xlat
sbb
xor
loope
mov
mov
lods
mov
jne
sub
adc
dec
das
mov
dec
push
stos
xor
std
scas
ret
test
stc
fcmovnb
call
mov
fsubs
mov
sbb
push
das
pushf
fsts
xchg
dec
sbb
inc
push
mov
jmp
xchg
cmpsb
fisubrl
cmp
cmp
sbb
test
jecxz
add
cwtl
clc
insl
scas
fstl
cmpb
inc
xchg
js
scas
or
push
lret
or
sub
add
sub
jno
jbe
push
aaa
pop
jnp
add
pop
dec
mov
pop
bound
cmp
add
adc
xor
mov
push
xchg
xchg
xor
cmpsb
mov
loopne
pop
xchg
addr16
and
push
mov
test
pop
lret
dec
push
push
xchg
mov
push
mov
jae
mov
nop
sbb
sub
int
jp
daa
sbb
and
xchg
testl
jmp
int3
push
adc
loope
hlt
sub
prefetch
cmp
divb
sbb
loop
pop
adc
xor
fistl
mov
xchg
test
dec
test
daa
test
add
mov
sub
nop
jae
inc
push
inc
inc
or
lods
add
int
pop
enter
out
lea
test
sub
out
mov
in
call
mov
pop
dec
xchg
jle
jo
pop
mov
push
mov
test
mov
xchg
imulb
jl
mov
iret
sbb
pop
mov
les
jecxz
aaa
sub
je
lret
inc
cli
outsl
mov
gs
lods
lret
add
push
out
ja
adc
add
cmp
adc
push
sahf
lret
jg
sub
stc
add
mov
enter
adcl
pop
pop
mov
ret
lahf
loope
aas
xor
daa
ljmp
cli
add
in
arpl
and
sub
push
sub
pop
ret
data16
aam
stc
sbb
cmp
test
bound
aaa
ret
call
test
sub
adc
data16
and
or
fs
or
add
loopne
clc
adc
dec
push
icebp
dec
adc
fildll
cld
mov
movsl
xor
add
std
mov
hlt
mov
xor
push
int
adc
add
insl
ss
addr16
addr16
jge
popa
and
shll
inc
cmp
push
loopne
cld
hlt
or
dec
or
lcall
cmpsb
aad
adc
addr16
movsl
push
cld
sub
fmuls
hlt
jp
int3
jmp
cmpb
add
add
sbb
fildll
dec
mov
hlt
mov
rcrb
push
ss
and
lods
sti
loop
cltd
mov
pop
inc
jne
mov
add
and
sub
sbb
xchg
mov
push
stos
adc
mov
inc
mov
jo
jle
and
lea
push
loop
mov
push
xlat
inc
ds
sbb
pop
test
push
scas
push
in
bound
push
lea
lahf
jge
cltd
cli
ds
lea
inc
xchg
insb
ds
ljmp
out
mov
shrb
push
jb
aad
adcb
sbb
pop
cmp
xchg
iret
iret
sub
insl
ljmp
xlat
xor
xor
pop
fsts
cmp
popf
inc
jg
xchg
loope
fbstp
adc
fld
dec
inc
mov
jecxz
mov
or
imul
push
imul
ja
inc
fcmovbe
xorb
pop
dec
int3
out
lret
fsubrl
cmp
lret
mov
and
mov
stos
cmp
fsubp
push
in
mov
push
xlat
prefetch
or
adc
repnz
fiaddl
out
loop
cld
add
mov
std
arpl
daa
cmp
jns
in
ficoml
fwait
sbb
sub
les
fs
shlb
mov
inc
cmp
mov
lds
leave
mov
mov
mov
sti
cltd
out
dec
js
sbb
inc
jno
mov
inc
push
neg
jg
pop
lock
or
dec
aaa
sbb
out
repz
push
mov
cmp
xor
push
lds
add
sti
in
lahf
icebp
jmp
aad
rclb
adc
mov
xchg
push
cmp
cmpb
sti
and
movsl
test
imul
xchg
cmp
loope
scas
out
xchg
pop
sbb
inc
int3
cltd
stos
aam
push
mov
sub
xchg
fiadds
cmp
fldcw
gs
fs
sub
jb
dec
out
lcall
mov
aad
cmpsb
cmp
inc
mov
cld
rcrl
pop
insb
hlt
xchg
daa
clc
insb
mov
push
and
sub
and
push
test
xor
stos
mov
sarl
fisubrl
jecxz
jnp
sahf
je
or
sbb
jo
jbe
jmp
add
stos
xchg
sbb
or
es
jno
jl
imul
jp
and
jle
push
pop
fldt
or
shlb
pop
mov
mov
cmpb
fcompl
fs
add
div
out
sbb
aas
inc
jl
adcl
aaa
ljmp
sub
ret
cmp
stos
push
in
xchg
movsb
or
pop
inc
sub
mov
mov
jmp
jmp
cmp
adc
inc
or
xchg
testl
sub
dec
and
mov
add
aas
scas
ret
pop
cmp
sbb
insl
in
arpl
fldt
mov
xor
and
mov
push
sbb
and
push
jmp
push
in
rorb
sahf
ret
pop
hlt
mov
test
mov
cld
pop
push
int3
push
test
call
leave
sub
push
adc
insl
cmp
out
cmp
shll
pop
sbb
sub
out
xor
xor
xchg
sti
int
cs
add
leave
push
pushf
push
cmp
nop
inc
repz
adc
jne
clc
lock
jg
cmpsb
stos
insb
mov
mov
mov
std
cs
aaa
std
daa
fs
add
sbb
jnp
mov
mov
mov
cs
mov
mov
adcl
jne
lret
or
xchg
idivl
mov
int3
xor
xchg
xor
test
push
ret
out
dec
js
ret
pop
cmc
mov
dec
pusha
mov
inc
mov
inc
or
push
sbb
and
xor
pop
mov
mov
pop
fs
mov
jecxz
xor
add
shlb
rcll
pop
ret
push
push
mov
push
adc
jmp
and
or
outsb
xchg
mov
jg
rolb
dec
mov
repnz
xchg
std
adc
xor
outsl
add
gs
mov
sub
js
push
add
shll
out
mov
call
add
adc
jg
dec
fistps
jb
push
push
push
dec
adc
fnstcw
not
sar
dec
int3
enter
mov
mov
pop
pop
add
lods
ja
adc
lds
aad
cli
push
ljmp
das
js
jp
arpl
frstor
rcpps
shll
pop
ss
jmp
pop
lods
push
shr
in
idivl
dec
int3
cltd
loopne
push
mov
mov
and
js
xor
aam
stc
cltd
leave
pop
std
and
test
dec
insl
and
add
sub
addr16
adc
push
je
push
rcrl
and
data16
int3
and
cwtl
push
mov
in
sub
outsb
inc
shlb
dec
dec
jb
negb
in
mov
in
inc
xchg
inc
inc
push
mov
cmpsl
enter
pop
popa
mov
jb
xchg
mov
jp,pt
arpl
mov
repnz
mov
pop
add
bound
in
arpl
mov
vmovlps
fnstsw
pop
fs
xchg
mov
cmp
sub
adc
repnz
mov
aaa
out
xchg
sub
sti
addl
pop
inc
pop
cmc
mov
call
mov
sbb
jo
mov
leave
xchg
sti
lds
dec
lahf
rcl
shl
rcrl
into
movsl
mov
push
aad
push
lcall
xchg
call
dec
and
mov
mov
inc
sbb
stc
sti
stos
and
movsb
std
jmp
cli
adc
out
lock
xor
mov
imul
adc
movaps
xchg
push
daa
rcr
mov
fdivl
inc
xchg
inc
xchg
jnp
dec
mov
mov
cmp
aad
mov
lahf
mov
pop
jbe
and
xlat
ljmp
orl
and
add
fwait
das
loop
sbb
rcrl
out
dec
in
ret
xchg
pop
and
nop
pop
mov
xchg
xlat
fadds
cmp
push
mov
repnz
pop
mov
jbe
jae
or
popa
or
and
lods
outsb
stc
inc
adc
dec
jl
cltd
dec
xor
xchg
jmp
mov
pop
imul
pop
pop
or
clc
pushf
or
test
je
mov
cs
lret
stc
shlb
push
clc
xchg
jae
jmp
pop
jl
cmpsb
mov
sti
sub
pop
fcoml
and
push
ds
inc
xchg
xchg
test
int3
cwtl
fildl
or
push
ret
mov
pop
inc
push
or
and
inc
psrad
aad
pop
adc
add
out
push
call
subl
sub
data16
mov
popa
mov
and
divb
loop
imul
mulps
pop
jg
xchg
cli
lret
movsb
or
pop
lock
inc
roll
xor
mov
pop
inc
in
and
xchg
or
jbe
cli
push
pop
mov
and
xchg
ja
jne
mov
jns
lcall
mov
in
pop
daa
inc
mov
or
ljmp
xor
outsb
inc
sbb
adc
andb
inc
xchg
outsl
or
das
dec
add
hlt
pushf
mov
sbb
xor
inc
and
sub
mov
mov
cmp
fs
lods
fxam
dec
sbb
mov
push
or
cmp
nop
shll
leave
jbe
ret
sbb
and
in
lahf
adc
xor
mov
mov
inc
gs
and
ss
jnp
inc
sbb
pop
iret
lret
cltd
or
pushf
call
mov
xor
std
jecxz
lea
inc
loopne
addr16
sti
notb
push
pop
adc
jns
fisttpll
rolb
push
dec
std
cmp
lds
mov
js
js
sbb
xchg
fldl
mov
lret
or
push
inc
movsb
test
or
jno
push
add
fwait
sbb
xor
rcrl
es
cmc
int3
dec
sub
mov
mov
jl
cmp
daa
cmp
jle
out
imul
sub
aad
mov
inc
sub
pop
loopne
and
push
inc
rclb
test
clc
dec
adc
add
xor
adc
lods
jno
rcpps
mov
sub
and
jg
loope
dec
cmpsl
cmp
in
xchg
mov
xchg
xor
adc
lcall
xor
push
pop
inc
aas
call
or
sub
fs
int3
cld
jno
mov
hlt
int
leave
icebp
push
mov
lret
xor
mov
push
lahf
push
xchg
mov
push
loop
push
out
sbb
lahf
imul
popa
jo
inc
cmc
mov
roll
and
mov
xchg
sbb
jb
ret
sub
jns
sub
push
imul
clc
shl
add
or
sarb
scas
pop
jge
inc
xchg
xchg
pop
lahf
and
pop
dec
adc
pop
enter
pop
xor
pushf
aas
lods
push
sar
adc
mov
push
out
push
test
out
js
stc
fildll
jno
gs
mov
rorl
jno
int3
push
lock
push
loop
xchg
xor
xchg
int
pop
pop
arpl
mov
and
dec
sub
push
scas
in
test
mov
out
out
mov
movsb
inc
fstpt
or
pop
in
iret
sub
fnsave
mov
outsb
push
mov
neg
or
jo
cmp
outsb
and
pop
or
in
cmc
lds
xchg
out
adc
cltd
lods
hlt
cmp
jle
inc
push
mov
mov
paddd
clc
pop
sbb
mov
or
push
bound
sbb
adc
dec
inc
imul
stos
cmc
dec
inc
sahf
jge
fsubrp
iret
or
mov
aas
pop
mov
mov
push
xor
repnz
lret
mov
xchg
xchg
xor
jnp
pop
push
push
js
out
mov
jmp
xchg
outsl
adc
add
mov
cmp
insb
jns
lcall
inc
repnz
outsb
shll
lret
aaa
dec
adc
xchg
imul
dec
jae
std
repz
mov
dec
pop
das
jnp
int3
fdiv
push
mov
cmc
aam
daa
sbb
xorb
ret
stc
xchg
jg,pt
dec
fcomi
xlat
leave
pop
lret
adc
add
cmp
jge
pop
push
andb
sub
enter
cmp
rolb
sbb
jne
mov
jns
icebp
mov
fisttpll
fidivl
loope
cmpsb
data16
pop
pop
fnstcw
mov
mov
sbb
sbb
cmp
ficoml
or
sbb
out
cmc
scas
xor
add
xorl
mov
cmp
mov
pop
cmp
mov
es
xor
pop
dec
bound
iret
lods
out
movsl
push
dec
lods
cltd
mov
sbb
imul
xchg
mov
popf
mov
rcl
ljmp
xor
push
sub
add
rcll
movsb
mov
sub
inc
lds
sub
mov
mov
cmp
add
bound
xchg
insl
xchg
xchg
mov
jle
mov
jmp
inc
je
fcom
mov
scas
fsincos
into
cld
ds
mov
popa
shl
jae
dec
ds
dec
fdiv
test
scas
cmp
fbstp
mov
xchg
pusha
dec
mov
sarl
sarl
orb
jns
dec
aaa
repnz
xor
push
test
xchg
sbb
sub
jne
dec
inc
inc
mov
adcl
ds
mov
push
dec
loope
notl
movsl
out
jb
xchg
js
inc
sub
cltd
loope
fldenv
mov
mov
cwtl
nop
rorb
je
call
inc
aad
into
rol
aas
scas
jae
push
sbb
mov
repnz
sbbb
dec
call
imul
mov
stos
and
js
dec
and
add
or
mov
movsb
into
mov
inc
mov
insb
shrb
sbb
mov
add
fcompp
and
mov
lcall
stc
dec
mov
jo
in
lods
test
inc
xor
jge
dec
push
cmp
mov
and
in
jecxz
sub
xchg
sbb
es
xchg
xor
dec
lret
jl
ret
lahf
dec
or
lea
jl
push
popa
cld
imul
stos
xor
xchg
sbb
push
imul
mov
aam
inc
add
sub
xchg
add
inc
inc
push
mull
das
mov
shlb
adcl
mov
loopne
mull
push
pusha
loopne
outsl
and
orl
fs
out
lods
xchg
inc
cs
shlb
jb
dec
sub
cwtl
lcall
dec
sub
ja
pop
inc
pop
inc
fadd
mov
sbb
mov
scas
xchg
push
jo
push
or
ret
fs
mov
add
loopne
test
popa
and
mov
into
sub
pop
xchg
sahf
mov
or
fwait
lods
in
ficoml
xchg
pop
repz
cmp
popf
imul
inc
cmp
rorl
adc
je
inc
cmpsl
xchg
cli
aad
mov
popf
xor
mov
sub
loope
pop
test
pop
inc
push
stos
dec
aad
or
dec
add
lods
stos
mov
lcall
rorb
cmp
cmpsl
mov
mov
adc
test
in
xchg
cmpsl
xor
cmp
pushf
clc
jmp
addr16
inc
add
and
mov
dec
add
or
mov
xor
loopne
out
pushf
gs
push
data16
push
cmp
add
jmp
outsl
aad
pop
mov
outsb
mov
and
movsb
leave
test
inc
push
imul
or
mov
jbe
cmp
lds
xor
arpl
add
or
mov
aam
push
pop
notl
push
push
decl
in
cmp
cmc
in
stos
xchg
jns
out
mov
mov
xchg
jmp
sub
add
pop
jge
cmpsb
and
orb
xor
add
mov
or
and
push
pop
push
out
adc
dec
mov
xchg
mov
pop
cmp
mov
dec
icebp
sbb
push
mov
stc
insb
js
fcmovnbe
ja
fldt
mov
mov
lea
xor
or
imul
and
pop
lea
push
push
negb
mov
xchg
loope
sbb
leave
mov
inc
adcb
jmp
sbb
leave
jbe
sti
imul
enter
jmp
dec
inc
xor
lock
and
mov
inc
jnp
arpl
testb
dec
ja
push
sbb
ja
insb
mov
adc
pop
int
lock
sbb
and
mov
xor
addr16
arpl
adc
bound
push
leave
in
cld
jg
stos
stc
add
inc
mov
sbb
sub
add
push
test
xchg
lcall
movsl
mov
imul
dec
lahf
scas
out
lret
push
mov
lcall
cmp
xor
and
xlat
in
in
or
mov
js
xchg
sub
orl
mov
ficomps
loop
rorl
cmp
lcall
out
mov
pop
ljmp
bound
add
sbb
mov
inc
inc
jle,pt
sub
mov
sbb
in
fadd
jmp
nop
push
add
inc
jge
xchg
lods
xor
in
int3
fs
xchg
mov
enter
mov
subl
mov
shll
or
out
pop
mov
mov
dec
inc
cmp
mov
xchg
add
ss
cltd
ja
or
sbb
fidivl
movsl
push
das
inc
pop
inc
lods
movsl
fidivs
scas
mov
mov
xchg
push
or
mov
inc
popa
dec
arpl
hlt
adc
and
rcrl
inc
rolb
pop
mov
cwtl
jbe
scas
jnp
mov
push
push
push
xor
inc
mov
divl
mov
cli
test
fbld
out
pop
pop
movsl
sbb
rcrl
sahf
xlat
mov
mov
dec
icebp
adc
stos
and
cs
and
xchg
add
pop
std
ret
rol
iret
dec
adc
cmpsb
test
mov
mov
das
cmp
iret
stc
fldenv
test
scas
stc
in
xchg
adc
loope
jnp
push
xchg
loopne
popf
jecxz
arpl
fldenv
out
mov
mov
pushf
cmp
jmp
push
lock
xor
adc
mov
inc
jns
sub
rorb
into
push
lret
sub
mov
mov
cld
popa
in
fnstsw
cmp
sti
cli
insl
and
and
aaa
and
jae
int
test
jg
xchg
sbb
mov
jg
fistl
push
test
lds
ret
mov
sub
cld
outsl
xor
sbb
or
test
loopne
unpckhps
sub
ja
iret
push
or
or
fdivs
sbb
fildl
test
imul
insl
popf
xchg
les
aas
aam
fidivrl
push
jno
pop
into
fwait
lret
push
mov
jp
push
aam
cltd
mov
or
dec
cld
stc
test
jecxz
mov
nop
pusha
repz
jmp
push
xchg
loop
imul
out
jno
iret
mov
fcomip
cmpsb
dec
mov
scas
les
mov
or
lea
lret
hlt
mov
cmpsl
mov
inc
test
dec
add
cs
xor
popa
mov
cmp
leave
mov
push
add
rcrb
mov
dec
sbb
insb
cmpsl
push
jbe
pop
clc
cld
addb
cmp
in
sbb
jns
or
adc
cwtl
lahf
ja
and
outsb
addr16
movsb
xchg
push
movsl
rol
aad
sbb
mov
in
sbb
sbb
test
test
mov
mov
jno
xlat
cs
jne
xchg
outsb
imul
cs
fsubs
fsubrs
add
aaa
adc
sti
push
aam
adc
push
jns
sub
cmpsb
bound
into
subl
jno
or
and
es
add
xchg
movsb
scas
test
incl
in
ds
cmp
mov
fsubl
mov
jne
pop
sub
push
jp
sahf
push
or
push
shll
jl
mov
adc
cmp
loopne
sub
sub
mov
shll
movsb
fcomip
mov
js
push
popf
shl
and
inc
in
push
in
push
lods
rcl
push
inc
testl
jb
lret
shl
add
shl
jecxz
mov
and
jmp
outsl
xor
lock
test
xor
dec
outsb
out
ljmp
cld
sbb
xchg
and
nop
scas
push
leave
icebp
clc
xor
xchg
mov
popf
loopne
pop
mov
scas
jne
adc
leave
mov
not
dec
jmp
shrl
xchg
pop
push
mov
adc
iret
inc
jno
xor
aas
xor
cli
mov
jecxz
adc
push
and
mov
cwtl
je
xor
push
mov
lods
imul
cmpsb
inc
test
jle
and
sti
fisubrs
adc
cmpb
jecxz
in
and
ret
stos
pop
leave
mov
or
inc
rcll
jmp
adc
xor
mov
mov
shrl
cs
xchg
pop
mov
outsb
cs
outsl
cmpsb
out
or
mov
or
pop
ja
mov
add
imul
inc
clc
mov
jns
imul
push
push
adc
and
xchg
sbbb
leave
mov
mov
loop
pop
ss
jle
lods
or
add
std
add
stc
pop
fdivrp
je
jecxz
jo
mov
dec
and
out
fs
and
mov
jp
enter
sub
out
bnd
ja
pop
pop
lret
sub
jno
mov
push
lods
orl
loope
lret
xor
inc
or
xchg
stos
jno
inc
pop
mov
roll
std
or
jp
push
mov
lods
cmc
fcmovnbe
hlt
xchg
mov
loopne
es
cmp
push
cmp
scas
mov
sbb
dec
scas
fs
or
out
pushf
loop
inc
out
repnz
adc
stos
push
lods
ror
out
insb
pop
cmpsl
ss
mov
outsb
mov
xchg
arpl
fnstcw
pop
dec
aaa
rcr
imul
outsb
and
jl
int
dec
mov
xor
mov
fisubrl
cltd
inc
loopne
pop
or
mov
cs
out
lods
xor
out
xchg
pop
rclb
add
inc
fs
push
test
adc
or
mov
or
loopne
mov
jbe
es
and
clc
dec
inc
je
jbe
xchg
jecxz
icebp
pop
adc
fs
jp
xchg
lods
aad
mov
addl
loopne
adc
in
jge
cmp
ljmp
dec
test
jl
rclb
mov
mov
jmp
rorb
pop
fsubs
mov
xchg
mov
sub
test
adcb
or
leave
jmp
aam
dec
push
push
dec
mov
mov
cmp
pop
mov
gs
xchg
sub
jp
lcall
imulb
dec
or
push
and
fstl
jge
addr16
es
inc
std
pop
outsb
out
push
ret
adcb
lcall
pop
sbb
sub
adc
inc
jecxz
movsl
bound
xchg
mov
mov
push
cmp
dec
jae
pop
add
mov
arpl
testb
insb
idiv
sbb
insl
call
jle
movb
add
push
clc
ds
pop
cmp
flds
pop
adc
sub
sbb
lahf
subl
into
ret
xchg
mov
jg,pt
cmpsb
imul
aam
popf
sbb
xor
adc
xlat
add
int3
mov
aam
xlat
outsb
dec
int3
lods
inc
lds
add
push
inc
cmc
inc
lods
mov
push
sbb
sbb
leave
push
mov
out
out
xor
add
ret
mov
push
push
xchg
je
mov
push
pop
mov
lret
adc
mov
mov
pop
sub
add
stos
sti
in
fs
mov
ja
ds
negb
jp
dec
icebp
pop
addr16
xor
mov
jle
push
ds
pusha
cmc
test
xchg
push
fs
inc
ljmp
fsub
cli
lret
jns
ljmp
in
loop
push
in
out
std
lret
push
popf
adc
sahf
xchg
sbb
jb
out
mov
pop
pop
inc
sarl
xor
mov
pop
sbb
int
aam
pop
cmp
in
jmp
test
and
enter
ds
je,pt
dec
outsl
lret
lds
fcmovbe
iret
sbb
arpl
xchg
test
push
insb
mov
mov
rorb
cmp
adc
and
les
add
mul
dec
adc
or
add
cld
ret
dec
in
sbb
shll
pop
ljmp
lods
pop
xor
cmc
add
xor
test
sbb
loope
scas
xchg
jle
jl
sahf
push
rorb
jl
sub
adc
nop
outsb
lret
mov
repz
pop
call
jg
ss
or
xor
fistl
or
in
jno
mov
lea
out
sti
jns
dec
stos
or
hlt
sub
sbb
mov
push
jne
fstpt
rcrb
pop
nop
js
xor
pop
mov
lods
sub
bound
lret
dec
mov
inc
and
jnp
lcall
fiadds
test
inc
push
lret
aaa
icebp
push
mov
sub
shlb
xlat
pop
pop
mov
adc
dec
pop
test
arpl
arpl
lret
cmp
inc
outsl
push
adc
lret
dec
sub
mov
dec
in
ret
adc
sub
ds
daa
mov
xchg
mov
jae
xchg
inc
ret
jnp
mov
jae
inc
icebp
stos
inc
sbb
sbb
xor
xchg
mov
xchg
jecxz
and
push
mov
xchg
test
push
lcall
scas
xorb
mull
mov
push
xor
xor
pop
sarb
push
ret
testb
mov
cltd
jp
iret
pop
mov
aad
jp
imul
insb
hlt
loope
iret
jae
cld
icebp
lahf
push
ret
mov
stos
mov
pop
xlat
out
sub
adc
sbb
xor
ja
popf
sahf
repnz
inc
push
mov
ret
fldt
lods
sub
into
ret
ret
rcll
and
rdmsr
push
push
mov
dec
test
mov
dec
test
dec
sbb
popf
and
fldt
jns
inc
xchg
adc
push
les
leave
sbb
sti
mov
push
jne
jp
sub
and
push
push
sbb
mov
test
scas
rolb
clc
test
icebp
es
jne
addb
cltd
mov
lret
lret
enter
stos
xchg
in
in
add
jnp
pop
ret
dec
aad
gs
fisttps
out
pop
lret
roll
push
add
sbb
jp
push
sub
adc
mov
fcomps
std
clc
pop
xchg
mov
mov
add
sub
jns
negb
xchg
inc
scas
inc
mov
lock
fdiv
insb
lods
xor
pop
int3
sbb
ljmp
cmp
aaa
fisubrl
sub
push
in
mov
int3
push
push
pop
xchg
cli
je
ret
arpl
xchg
mov
sub
loope
jecxz
jns
add
addb
sarl
add
or
push
inc
fs
push
fcoms
cwtl
xor
add
jne
lods
cmpsl
outsl
clc
call
orl
jo
je
pop
fs
xchg
inc
push
in
out
add
dec
or
cmp
cmpb
das
xchg
fisttpl
loope
in
outsl
lret
dec
imull
jg
pop
stos
sbbb
xchg
mov
sbb
cltd
mov
jbe
je
xor
bound
hlt
or
mov
aam
push
inc
rcll
and
out
call
adc
push
dec
aam
lret
lock
lods
or
pop
jmp
ja
jns
dec
rcrb
fldenv
sub
repnz
dec
mov
inc
subl
xchg
inc
notb
adc
out
sbb
add
pop
sbb
adc
scas
outsl
out
adc
mov
rcrb
paddd
lea
imul
or
or
cmpb
sbb
mov
dec
push
movsl
sub
push
sub
pop
int
sub
cmpsb
or
add
jne
loop
jae
mov
inc
add
or
mov
jbe
xor
inc
mov
dec
out
popa
sbb
testl
add
xor
jecxz
outsl
std
lods
mulb
xchg
into
or
dec
inc
xchg
xchg
cmp
incb
push
ds
nop
lret
jne
popf
push
fwait
jno
scas
pushf
or
adc
xor
and
mov
adc
insb
mov
fisubrl
inc
inc
into
repnz
pop
adc
lods
shr
leave
je
test
cmp
xor
cmc
fxch
sbb
in
iret
ja
fs
bound
adc
mov
sub
xor
push
cmp
xchg
std
xchg
xor
jp
and
dec
push
ja
fimull
push
out
inc
icebp
int
insl
call
popf
add
cmpsl
lahf
stc
pcmpgtd
push
push
xor
push
mov
inc
decl
sbb
mov
mov
mov
jno
repnz
pop
es
mov
leave
shl
ror
out
mov
jmp
jmp
sub
fsub
mov
cmc
inc
jns
sub
pop
sub
enter
mov
test
loopne
je
cmp
push
ret
out
mov
jg
lods
fdivs
fldt
push
stos
test
sub
xchg
je
mov
mull
add
test
test
test
in
push
testb
fdivl
das
pusha
movsl
mov
cmp
mov
test
lahf
incb
sub
fcmove
inc
add
iret
and
sbb
push
enter
shrb
lea
ljmp
lods
mov
mov
repnz
fldt
push
sbb
sti
incb
shlb
push
mov
push
pop
xchg
out
push
and
aas
jg
mov
gs
cmp
js
rolb
jno
xchg
xorb
cmpl
sub
mov
push
cmp
mov
sbb
add
sub
sbb
adc
shll
adc
mov
inc
push
sub
mov
jnp
xchg
in
ljmp
jle
outsb
fwait
push
xchg
or
cltd
sbb
adc
sub
xchg
in
mov
mov
enter
inc
sub
vmptrld
cld
sub
xor
mov
mov
push
cli
in
mov
inc
daa
imul
push
out
fcoms
leave
mov
adc
xlat
pop
push
mov
lcall
push
lds
aam
or
sbb
or
mov
aaa
adc
fdivl
jp
sbb
sarl
mov
mov
xchg
loop
outsl
dec
enter
pusha
jo
mov
jbe
cli
fucomip
dec
xor
jmp
outsl
xor
xchg
mov
ficoml
lcall
jns
lock
out
int
in
sub
lret
test
mov
dec
mov
loop
arpl
loope
or
inc
mov
bnd
ds
movsl
and
nop
in
ret
fs
dec
clc
inc
mov
cld
lret
cmp
mov
inc
xor
pop
andb
bound
adc
sti
mov
cmp
and
out
mov
out
push
mov
xor
xchg
aad
ja
pop
loope
sarb
sarb
mov
lret
push
shr
movsl
adcb
pushf
popf
xchg
leave
loop
repz
mov
pushw
dec
mov
mov
mov
int
stos
mov
jge
jle
sub
mov
stos
cwtl
cmpsb
rorb
in
add
gs
lods
inc
mov
cltd
repnz
lods
lock
jnp
xor
sub
xor
mov
faddl
repnz
lods
fildll
shlb
or
out
mov
popf
and
inc
clc
mov
movb
push
or
out
or
loopne
fistpll
mov
out
xor
stc
sahf
adc
add
cmp
jmp
pop
and
cltd
pop
xchg
and
sub
stos
aam
push
or
fiadds
push
out
sbb
pop
mov
pushf
ja
insl
scas
add
out
cltd
mov
add
lcall
cmpsb
add
push
call
xchg
popf
fisubs
rcll
je
int3
cmp
jle
xor
cmp
push
cltd
clc
dec
in
daa
fistl
pop
fstl
fucomip
jp
stos
inc
and
lret
mov
ss
rcrl
or
es
icebp
popa
hlt
xchg
mov
dec
mov
imul
fldl
and
fildl
out
sbb
fldenv
adc
mov
out
stc
cmp
inc
adc
push
push
xchg
in
and
or
fcmovnu
dec
sub
lret
xor
xchg
data16
ficoml
mov
mov
mov
movsl
jecxz
cld
cmpsl
cli
add
push
or
es
gs
xchg
je
loope
je
adc
into
mov
std
pusha
push
xor
push
or
pop
add
out
mov
rorl
outsl
std
dec
jns
pop
mov
and
jle
lds
jp
cwtl
std
mov
je
pushf
xor
ss
pop
stos
test
xchg
sbb
ljmp
mov
mulb
sbb
lock
insb
ss
mov
aaa
mov
ss
xchg
xchg
pop
clc
mov
shlb
or
pop
xchg
xor
mov
das
jp
jg
mov
call
and
mov
leave
outsb
roll
pop
or
into
hlt
ja
in
aad
and
cmp
fistpll
test
outsb
push
add
insb
mov
mov
lods
pop
test
lds
jg
add
sbb
mov
dec
inc
mov
sbb
mov
pop
xchg
lret
insl
jb
inc
push
ljmp
idivb
inc
cmp
push
mov
pop
lock
adc
xor
jl
jecxz
fdivs
mov
pop
push
jmp
es
sahf
fwait
xchg
pop
dec
fs
sbb
xchg
push
lcall
roll
testb
jge
or
mov
jmp
and
cmpsb
cmc
push
pop
andl
nop
dec
lods
sub
mov
mov
mov
lcall
imul
push
shl
push
outsl
push
mov
mov
movsb
add
sarb
nop
ret
lods
jge
cmp
mov
and
scas
fsubs
jns
xorl
arpl
test
icebp
das
repz
mov
mov
pop
dec
and
add
add
xor
mov
aas
arpl
mov
inc
repnz
mov
add
mov
jl
push
les
or
lods
loope
daa
ja
loop
roll
cmp
out
xor
imul
ds
push
fdivrl
lcall
cltd
popf
int
cld
popl
into
mov
sub
in
in
xchg
fs
dec
lea
xchg
pushf
xchg
bound
int3
dec
outsb
mov
or
imul
dec
inc
test
dec
pop
dec
lock
pushf
push
adc
push
push
popa
loope
push
cwtl
in
cld
in
neg
jmp
hlt
aaa
icebp
sbb
fucomp
and
scas
mov
mov
dec
sbb
xchg
les
add
mov
xchg
add
cmp
mov
and
dec
enter
aad
pop
popf
out
cs
push
aam
nop
ja
push
cmp
hlt
sub
inc
pusha
ror
cmp
xor
inc
cmp
lret
lahf
cld
pop
test
mov
loop
adc
enter
xchg
inc
sti
inc
xchg
push
xorb
imul
in
or
xchg
and
stc
int3
jne
int
cmpsl
pop
loop
jbe
sti
or
mov
out
inc
cmp
xchg
jnp
mov
out
pop
jnp
adc
xor
bnd
out
xlat
cs
stos
mov
mov
inc
add
dec
xor
xchg
push
stos
xchg
sub
pusha
adc
jle
mov
ror
bound
mov
dec
xchg
fs
mov
mov
dec
stos
jo
dec
adc
or
lea
mov
dec
inc
mov
scas
cmp
fsts
stos
ret
sbb
inc
popf
cld
sbb
ja
cmp
lret
mov
mov
imul
push
je
cmp
stos
jno
aad
lcall
imul
movsl
test
insb
hlt
xchg
inc
sbb
inc
mov
fisttpl
mov
mov
out
push
jbe
push
inc
xchg
cmp
and
dec
sub
jno
or
or
out
out
dec
dec
or
stos
jg
addr16
pop
mov
or
sub
por
inc
fstps
movsb
loop
mov
pusha
sahf
push
cmp
mov
leave
test
mov
push
leave
xor
insl
test
push
mov
push
dec
mov
adc
inc
xchg
inc
xor
push
push
test
outsb
notl
xor
and
pop
jp
stos
xorb
repz
in
movsl
jne
lods
subb
cmp
xor
xor
xor
nop
in
lcall
pop
insb
ret
mov
je
movsb
test
xor
fwait
movsb
loop
bound
stc
movsb
push
push
loopne
sub
sti
and
cs
jmp
and
call
dec
aam
call
js
sub
hlt
les
loop
cmp
xchg
iret
jb
mov
jo
leave
sub
mov
mov
cmpb
addl
jb
daa
dec
inc
ja
jmp
pop
lret
lret
mov
int3
inc
gs
call
lods
ret
inc
popf
ret
hlt
xchg
or
mov
or
adc
jmp
xchg
test
dec
stos
jo
mov
stos
aaa
ret
adc
orl
push
mov
jo
hlt
sbb
xchg
iret
int3
mov
int3
hlt
imul
jmp
add
arpl
loop
imull
xchg
std
cmpsl
jo
popf
ja
ret
mov
sbb
dec
inc
or
cltd
xchg
jnp
inc
enter
hlt
clc
call
out
pop
sbb
out
adc
pop
add
les
mov
lahf
cltd
mov
fnsave
out
sub
adc
repz
idiv
push
bound
or
inc
xor
pop
xchg
inc
into
xchg
push
push
int
jb
xchg
jp
imul
inc
and
cs
push
push
sbb
testl
mov
adc
xor
inc
out
mov
sub
lods
mov
and
cmp
in
test
push
mul
mov
push
xlat
sub
xchg
cmp
xchg
sub
xchg
inc
push
stc
pop
imul
decl
mov
inc
jne
arpl
xchg
inc
cli
hlt
out
insb
aad
pop
mov
js
pop
jae
das
and
inc
adc
and
add
or
cmp
mov
cmpl
mov
lahf
mov
add
jbe
cli
dec
dec
inc
shrb
rcl
mov
dec
add
rcrb
jp
adc
mov
cltd
in
fwait
dec
pop
adc
sbb
push
stos
mov
jnp
lcall
fistps
ljmp
and
and
pop
les
inc
mov
lods
cmp
dec
ret
dec
arpl
lret
inc
iret
popf
mov
movsb
jl
jbe
call
adc
lret
xchg
sbb
int3
sub
mov
subl
jmp
lock
add
jo
data16
cmpsl
sarl
push
push
mov
push
icebp
cmpsl
fwait
push
adc
mov
bound
xchg
xor
mov
roll
push
out
arpl
add
out
pop
jge
aas
test
pop
test
jne
lock
stos
les
cld
pop
inc
mov
push
test
in
flds
add
adc
insl
cld
jb
mov
inc
and
loope
cmpsb
fisttps
hlt
pcmpeqb
cld
es
mov
add
sbb
test
push
push
jbe
cmp
dec
jns
mov
rolb
dec
sbb
dec
lods
fs
mov
call
lea
mov
pop
ret
push
fisttpl
jne
orl
push
int
jge
or
mov
fistl
mov
test
pop
mov
das
int
xchg
sbb
outsl
lds
inc
mov
push
shll
sbb
fcomip
cli
enter
stos
mov
dec
fsts
shll
and
push
cld
inc
or
xchg
jae
call
mov
jbe
xchg
add
and
neg
lock
ret
adc
ljmp
sub
sahf
xor
bound
cli
adcl
add
xchg
mov
aaa
mov
push
out
adc
test
fnstsw
mov
inc
jbe
fbld
lret
cmpsl
cmp
outsb
lret
cmp
aam
aas
and
popa
cmp
lcall
lret
dec
loope
js
xlat
cmp
ror
lods
or
xor
add
icebp
pop
xchg
loopne
add
sub
and
fimull
cltd
ja
loope
push
rcll
adc
inc
sahf
scas
imulb
fistpll
inc
mov
sbb
dec
push
inc
test
push
sub
shll
sub
cmp
andb
push
inc
sub
lret
test
adc
icebp
jmp
lret
daa
sub
push
test
push
icebp
mov
lods
aas
lcall
and
and
insl
push
cmp
lock
into
dec
sbbb
addl
cmpsl
lea
clc
das
or
sub
comiss
mov
popf
adc
mov
or
data16
add
rcrb
cmc
out
adc
xchg
data16
mov
stos
sbb
or
xchg
add
mov
cmp
or
std
pop
filds
arpl
cmp
nop
popf
or
fwait
je
mov
mov
add
push
adc
ficoml
mov
jp
push
pusha
shll
aas
ljmp
fcomps
out
fidivs
lds
adc
cmp
lcall
add
sub
fwait
push
sbb
pop
sbb
mov
repz
sti
mov
fadds
push
jne
data16
lcall
sti
enter
jp
std
fstp
xor
sti
es
inc
pop
jmp
lret
jl
xchg
pop
cmpsb
fistpll
bound
pop
in
mov
flds
in
mov
iret
insl
addr16
mov
lret
push
test
xchg
jno
addr16
jbe
add
adc
stos
mov
push
std
dec
xor
out
mov
imulb
stos
leave
js
out
lods
mov
pop
call
adc
push
adc
std
pop
xchg
push
jne
sbb
add
and
mov
iret
aaa
cltd
and
jecxz
push
in
push
mov
or
lds
cmp
add
scas
push
shlb
imul
cmp
xchg
mov
cmp
dec
add
mov
mov
mov
pusha
les
and
inc
mov
jns
imul
fdivrs
sbb
push
ljmp
in
aam
and
dec
enter
add
or
call
inc
push
and
jp
insl
mov
ds
fstpl
cmpb
movl
inc
call
nop
cmp
cltd
or
jnp
pop
orl
es
push
js
jmp
dec
or
mov
push
cli
cs
mov
xchg
sahf
pop
ret
push
pop
mov
pop
mov
subb
imul
daa
push
mov
xor
pop
sub
andb
scas
or
cmpsl
scas
int
xchg
stos
jne
mov
jae
adc
cmp
dec
inc
xchg
add
enter
lahf
pop
bound
mov
mov
or
insb
dec
mov
add
lea
push
mov
inc
adc
jne
jmp
mov
adc
fidivrl
pop
lret
cltd
mov
jns
loop
pop
mov
aad
cmp
nop
jmp
jae
mov
rcrl
mov
jnp
in
fists
cmp
mov
clc
cmc
lods
cwtl
rcrl
push
cwtl
mov
mov
or
addr16
ret
mov
fidivrs
xor
lcall
out
stos
push
xchg
pop
movsb
imul
ffree
lods
xchg
jge
xchg
jne
cmp
inc
or
cmpsl
ja
inc
cmpb
add
fnsaves
pop
push
call
mov
fwait
xchg
mov
pop
xchg
inc
mov
popa
inc
adc
in
inc
adc
stc
inc
insb
jno
shll
stc
jecxz
jge
jnp
sar
lock
lahf
dec
lcall
shlb
test
sbb
loop
das
cmpsb
jo
adc
aas
ja
mov
aaa
xchg
pop
or
test
popf
ja
lahf
mov
mov
xor
filds
dec
xor
push
arpl
les
adc
call
addl
and
incl
cmp
push
jmp
sbb
repnz
ljmp
movsl
aas
adc
adc
dec
xchg
xchg
or
loop
or
jns
adc
push
pop
adc
les
lock
xchg
cmpb
lea
sbb
movsb
loop
pop
inc
sbb
jae
adc
loop
leave
lret
insb
aad
dec
imul
ljmp
push
and
inc
pop
and
mov
stos
insb
mov
jl
movsb
psadbw
stos
inc
push
jne
mov
xor
add
inc
icebp
and
jnp
dec
cli
pop
mov
push
rcrb
inc
and
jg
sbb
pop
mov
and
cmpsb
ficoml
jne,pn
dec
pop
pop
push
jl
das
sbb
ret
mov
mov
stc
inc
sub
pop
inc
fwait
roll
loope
fbld
push
movsl
out
inc
adc
mov
fsts
and
jnp
inc
fdivrs
out
mov
sub
pop
and
sbb
inc
sub
aaa
shrl
int3
and
out
inc
lea
adc
jno
sahf
js
scas
mov
push
arpl
sbb
aam
mov
rolb
lret
jmp
lcall
jo
mov
out
jnp
aam
lahf
sbb
sub
push
cmp
or
dec
push
fucom
shrl
stos
xor
ret
xlat
dec
adc
add
or
mov
jle
pop
and
in
and
subb
jne
mov
add
pop
jmp
sbb
ficoml
cld
cwtd
push
sbb
push
mov
jmp
lret
mov
jbe
cmp
xor
adc
les
cmc
mov
or
test
and
pop
adc
fcoml
adc
lahf
pop
mov
scas
stos
test
add
stos
gs
pop
push
stc
shll
and
mov
movsb
jno
insb
test
adc
mov
scas
in
pop
pop
loope
loopne
ja
inc
and
sub
in
inc
mov
aad
push
pusha
xchg
or
mov
jle
sub
test
cld
test
or
mov
sub
fistpll
mov
das
int3
dec
jecxz
out
leave
mov
jne
mov
into
in
aaa
push
xchg
pop
pop
xor
and
push
mov
cld
cmc
test
or
adc
outsb
mov
xchg
iret
jns
and
lcall
lcall
adc
pop
rcr
loope
mov
mov
mov
xor
fcomip
or
out
jno
ret
aaa
sbb
in
sbb
bsr
jb
cld
daa
push
jecxz
push
test
sbbl
jae
icebp
int3
or
movsb
std
adc
push
fisttpll
out
bound
popf
mov
add
inc
and
shll
roll
adc
insl
mov
jnp
jecxz
mov
jo
mov
dec
fdivrs
add
xchg
lock
push
mov
mov
fcomps
mov
clc
push
or
leave
into
add
mov
stos
test
add
jge
jl
or
rclb
xchg
es
mov
pop
adc
test
mov
cmp
pop
sti
pop
jbe
rol
cli
fsubrl
cwtl
int
test
xor
push
scas
or
mov
adc
add
clc
shlb
nop
roll
ret
in
push
pop
xor
jno
popa
fsubrp
pushf
sub
push
pop
fisubl
mov
bnd
sbb
jns
lret
add
sub
mov
mov
je
cmp
imul
xchg
dec
mov
sbb
push
adc
push
push
inc
pop
add
int
and
sub
xchg
in
mov
mov
mov
jmp
fldl
das
fwait
pusha
xchg
inc
sbb
push
xchg
lret
push
xor
fldcw
icebp
mov
pop
bound
mov
mov
and
and
test
mov
sub
int3
scas
int3
sub
sub
cmp
cmp
mov
icebp
add
pop
dec
sub
loope
mov
insb
sub
in
cmpsl
ja
movsb
dec
lods
xchg
xchg
ds
inc
loope
mov
es
test
outsb
outsb
mov
xor
fcoml
sarb
ds
daa
iret
push
fbld
fmuls
adc
lds
in
ja
aad
add
pop
push
aas
out
jecxz
lea
in
scas
adc
jl
or
arpl
repnz
stos
sub
pop
and
lea
leave
inc
adc
enter
test
inc
gs
and
loop
outsb
mov
mov
inc
push
sti
inc
fs
mov
sub
fsubl
push
rolb
fsubs
mov
shl
stos
fists
rorb
or
adc
push
adc
mov
adc
mov
jo
jp
mov
and
cmp
iret
push
loopne
fisttps
cwtl
fwait
pusha
mov
or
sub
lret
ret
inc
shll
mov
negl
inc
and
dec
dec
cmpsl
sub
imul
int3
pop
outsl
dec
xchg
into
ljmp
outsb
outsl
fwait
jae
jne
adc
or
dec
daa
and
shll
mov
jo
pushf
cmp
mov
fwait
loope
pop
cmp
sub
fsts
dec
ficoml
and
xorl
out
mov
fadds
pop
adc
mov
jns
push
ret
push
fnsave
adc
leave
sbb
push
mov
xor
notb
call
or
cld
movsl
and
sub
dec
aad
mulb
and
ret
in
jp
cmp
sahf
cmpsb
push
pop
std
int3
sarb
cmp
and
outsb
into
mov
mov
inc
jne
mov
jl
sbb
fs
mov
cltd
inc
inc
xchg
sub
negb
mov
test
mov
add
mov
repnz
mov
add
xchg
xchg
sub
mov
cwtl
adc
push
mul
inc
into
mov
jnp
aad
adc
fisttps
aaa
pop
mov
cmp
pushl
and
gs
outsb
or
pop
out
xor
adc
jo
lret
pop
cltd
xchg
mov
cmp
jecxz
inc
xor
dec
lods
and
or
pop
repz
jns
or
enter
push
sbb
jne
xor
movsl
popa
int
loop
aas
inc
inc
fdivrs
mov
out
loopne
andl
cmc
add
adc
lods
jle
popa
or
shll
lahf
pop
call
mov
js
int3
in
mov
out
sub
shlb
inc
jb
mov
cmc
jl
nop
and
cmp
xor
fwait
sub
or
mov
iret
xor
stos
mov
fstpl
cmp
xchg
lcall
data16
mov
inc
cmp
aas
pop
add
rcrl
dec
sbb
or
imul
shrb
mov
jp
icebp
into
inc
push
sub
insl
adc
test
and
daa
mov
push
roll
sahf
mov
cmp
ja
adcl
aaa
aad
adc
cmpsb
jne
mov
dec
or
pop
and
popa
mov
xor
stos
loop
cmpsb
movsb
push
push
push
jge
in
xor
out
mov
sbb
lret
lahf
mov
jle
dec
repnz
cmpsl
lcall
aam
inc
loopne
inc
jecxz
inc
push
xor
stos
out
jne
mov
cmp
mov
lds
insl
xor
sub
rcr
push
add
loopne
adc
fadds
add
nop
add
fldl
push
bound
adc
inc
inc
lret
add
loopne
xchg
mov
or
out
mov
sbb
sbb
aam
aas
or
fstps
jmp
sub
repnz
lods
jge
mov
call
loop
mov
pop
cmp
lds
jge
dec
std
int
jp
pop
or
and
daa
dec
inc
adc
icebp
inc
cli
jo
mov
scas
cmpl
push
push
repz
aad
icebp
push
je
xchg
xchg
fxch
cld
mov
cmpsb
adc
sbb
mov
out
jne
and
shrl
inc
or
stos
rcll
mov
mov
pop
adc
mov
and
push
mov
inc
ficoms
pop
outsl
lea
xchg
imul
cmp
cmp
and
or
addl
subb
add
test
push
add
insl
push
or
dec
xchg
lret
fistl
or
fsubl
in
pop
xchg
or
call
stos
in
ds
sbb
cmp
push
mov
sub
mov
sbb
push
enter
call
mov
dec
imul
mov
mov
dec
ret
test
inc
ret
es
lret
int3
xchg
cmc
fdivrs
out
mov
insb
sbb
add
add
jle
push
or
dec
lds
xor
xor
push
repz
enter
pushf
sti
sub
inc
jbe
mov
dec
loopne
adc
and
addl
shl
xlat
inc
sbb
aam
inc
fists
adc
adc
pop
push
add
dec
mov
add
adc
cltd
lods
pop
call
mov
iret
call
loopne
dec
or
mov
and
lea
ja
sarb
outsl
pop
mov
and
dec
andb
arpl
cmp
xor
mov
inc
xorb
mov
dec
xchg
insb
loopne
push
inc
cli
dec
cmp
hlt
imulb
out
mov
sub
xor
lea
int
and
fwait
dec
ret
ret
lcall
in
jo
inc
and
mov
imul
lods
int3
sbb
jbe
ret
mov
mov
or
add
sub
lock
icebp
cld
iret
cmpsl
ljmp
add
push
push
xchg
sub
fsubp
adc
mov
ffreep
ljmp
icebp
in
adc
shr
mov
out
int3
mov
push
inc
scas
loop
test
xorb
mov
xchg
cmp
outsl
xor
or
lahf
add
sbb
fsubp
sub
out
jns
pop
add
or
cld
jecxz
pop
pcmpgtw
orb
test
push
aaa
mov
xchg
sub
adc
pop
ffreep
dec
mov
movl
scas
add
enter
aaa
jns
cmp
sbb
dec
mov
dec
aaa
mov
mov
jg
jl
scas
mov
inc
mov
rorb
push
je
mov
aad
in
inc
cs
xchg
pop
adc
mov
je
sarl
in
fildl
dec
xor
mov
and
in
jmp
pop
scas
xchg
scas
cli
stc
in
push
push
mov
sbb
imul
dec
push
push
push
sbb
xor
out
shl
aad
insb
mov
and
jmp
fidivrl
jl
inc
xchg
jg
jl
and
xor
fldenv
lods
fs
dec
dec
add
xor
stc
mov
loopne
loopne
loopne
aam
dec
aas
sbb
mov
scas
jae
dec
mov
mov
pop
addr16
push
dec
xchg
and
or
xchg
mov
and
cltd
ljmp
imul
cltd
add
out
js
addb
arpl
sbb
dec
arpl
popa
arpl
sti
dec
nop
fists
push
mov
sub
shrb
inc
mov
jle
jmp
inc
push
pop
xor
int3
stos
sub
sub
scas
and
and
cmp
xchg
or
loop
pop
pop
push
sbb
pop
mov
and
insb
cmp
test
add
cmp
pop
push
add
js
int3
mov
test
dec
daa
icebp
cs
insb
add
adc
test
and
lods
scas
jle
test
adc
pushf
jne
cmc
inc
pop
test
cmp
jge
dec
add
inc
cmpsb
js
in
push
xchg
mov
lods
scas
int3
fnstenv
push
lret
push
mov
mov
andb
push
pop
add
mov
adc
add
sub
hlt
cmp
mov
nop
push
jbe
mov
je
shlb
gs
xchg
push
in
inc
filds
adc
jge
mov
testb
mov
or
ljmp
pop
sbb
int3
pop
cmp
cmpsl
mov
stos
add
imul
sub
int3
or
mov
lcall
pop
xor
add
sub
insb
add
adc
mov
add
pop
mov
mov
outsl
xlat
xchg
adc
xlat
xchg
jo
insl
inc
dec
mov
and
pop
mov
les
cmp
ja
not
mov
dec
aaa
jae
inc
mov
out
call
xchg
divl
sti
gs
mov
popa
jo
ror
cwtl
lods
in
xchg
shll
test
or
test
sbb
rcrl
call
cs
loop
pop
pop
iret
mov
sbb
popa
jo
add
push
cmp
icebp
hlt
mov
adc
mov
daa
shlb
mov
loopne
mov
sbb
mov
lahf
lock
insb
dec
sub
or
movsb
mov
sbb
jnp
sbb
sub
jmp
jmp
in
jl
inc
loop
daa
scas
fwait
mov
adc
lret
mov
popf
or
mov
mov
lret
aas
adc
sbb
adc
sub
adc
in
adc
lods
xchg
aam
add
repz
jmp
mov
adc
cs
mov
std
cltd
xor
cmc
pop
sub
or
or
push
and
and
popa
pusha
push
xchg
add
dec
sti
imul
stos
lahf
std
loopne
jb
mov
or
cmp
lock
or
lds
insb
in
pop
xchg
or
fsubr
das
dec
aad
mov
pop
cmc
rcrl
cli
mov
sarb
and
test
es
xor
mov
sub
and
cwtl
fadd
sub
dec
fnstsw
dec
bound
test
pushf
jmp
dec
test
shrl
jnp
imul
mov
outsl
push
cs
inc
jecxz
push
xchg
ljmp
aad
movsb
mov
cmp
add
mov
call
pop
orl
cli
add
mov
pusha
dec
pop
daa
insb
popa
cmpb
mov
mov
ror
fsts
faddp
push
stos
es
mov
push
cmp
mov
jle
lret
pop
mov
out
aad
bound
pop
mov
inc
or
clc
subb
sub
lds
clc
shl
rclb
daa
jo
outsl
rol
sahf
addr16
inc
add
mov
sar
xchg
stos
and
ja
sbb
loop
inc
mov
cs
into
sub
mov
iret
inc
outsl
mov
cmp
xchg
pop
push
vzeroupper
jb
dec
outsl
dec
fs
hlt
nop
inc
aam
sub
sbb
shl
mov
adc
sbb
ljmp
push
gs
pop
bound
cmp
xchg
in
shlb
cmp
add
inc
shl
in
xor
lods
cmp
ret
push
lods
cld
jmp
ljmp
mov
out
push
xchg
jmp
mov
pop
cmp
xchg
cmp
push
cmp
mov
inc
iret
out
jecxz
imul
xchg
add
and
std
daa
mov
inc
das
or
xor
std
mov
out
jnp
enter
xor
sub
cli
je
cld
jp
adc
in
es
and
or
and
mov
ret
inc
scas
inc
addr16
mov
or
inc
sbb
mov
divb
movsl
cli
lahf
out
sbb
adc
lcall
test
movsl
loopne
dec
mov
cwtl
push
inc
pusha
outsl
mov
nop
movsb
xor
cmp
mov
les
pop
shrl
scas
or
inc
xchg
das
loopne
les
leave
jae
fwait
lock
mov
pushf
mov
xchg
xchg
stos
loop
lds
testl
pop
vpavgb
pop
shl
adc
cmp
pusha
repnz
xor
or
xchg
in
xor
mulb
pop
cld
adc
cmp
in
mov
inc
sbb
pusha
push
sub
inc
not
out
leave
dec
in
popf
bound
bound
rol
outsb
sub
mov
dec
push
aad
mov
pusha
jg
adc
popf
xor
xlat
sub
dec
movsb
std
fs
xchg
je
stc
lret
shll
pushf
movsb
dec
jb
xchg
mov
push
lcall
pop
or
ljmp
xchg
loop
mov
aas
pop
add
push
adc
stos
push
jns
imul
mov
popa
fimull
and
test
xchg
add
mov
adc
lods
adc
mov
fimuls
insl
outsl
das
sub
pop
insb
ljmp
pop
les
in
fwait
xchg
je
jb
lods
shlb
mov
xchg
mov
mov
cmp
pop
lds
or
pop
in
xchg
imul
div
cmpsl
das
sbb
cmpsl
or
pop
nop
and
repnz
push
xlat
and
es
daa
jbe
cmp
in
out
lock
das
pop
sti
mov
dec
sbb
sub
lcall
xchg
pop
fistpll
push
int3
mov
dec
fbstp
jns
lods
repz
popf
push
fstps
mov
lcall
cltd
cmp
mov
or
and
pop
jbe
stos
and
lahf
lret
lahf
int
pop
xlat
test
mov
push
imul
jge
addl
inc
out
imul
fcoms
dec
stos
or
inc
cmpsl
pushl
shr
enter
push
jge
inc
adc
insb
sbb
rol
bound
lret
insl
push
mov
test
lock
notb
jo
das
adc
pop
jnp
lods
data16
dec
cli
inc
pop
lahf
mov
loop
mov
in
and
sub
cltd
test
sarb
dec
and
cmpsl
hlt
sti
rolb
or
mov
xorl
mov
scas
inc
in
mov
sbb
xchg
mov
jbe
repz
stc
nop
jmp
loop
dec
add
scas
cmpsb
push
pop
fcmovu
jno
mov
mov
adc
cmp
and
into
fwait
xchg
mov
pop
jne
loope
fcomip
int
xor
lahf
imul
cli
addl
dec
fisubrl
mov
push
cmp
dec
imulb
mov
fidivrs
shl
test
cmp
xor
aas
xchg
add
inc
xchg
outsb
sub
sbb
adc
pop
fdivrl
ret
outsl
pop
andb
mov
xor
leave
scas
fcomps
inc
cmpb
clc
lret
dec
xchg
inc
pop
lods
xchg
fs
push
mov
ds
movsl
xor
call
inc
test
mov
sarb
pop
js
and
mov
inc
xchg
icebp
add
scas
out
pop
ret
fs
ds
fstl
mov
ljmp
mov
scas
std
sub
jge
addb
jb
sbb
mov
xchg
cld
mov
adc
mov
imul
mov
sti
xorb
stos
out
and
push
xor
mov
sub
repz
shll
mov
push
test
push
and
scas
movsl
pusha
frstor
pushf
jge
mov
sbb
or
test
and
jns
mov
dec
xchg
imul
mov
lret
sbbb
lret
push
xor
mov
in
mov
flds
jno
mov
andnps
inc
fld
xchg
xchg
push
mov
push
movsl
lcall
popa
in
ret
mov
xlat
or
js
nop
jmp
push
outsl
push
jbe
pop
xchg
pop
sti
cmpsb
pop
ja
dec
les
xor
ds
or
adc
cld
call
xchg
int
inc
ss
add
inc
fadd
mov
loope
add
mov
mov
pop
adc
out
cs
dec
cmpb
in
daa
push
pusha
cmp
dec
fcmovne
cmp
outsb
out
adc
test
lcall
dec
call
test
cmp
sbb
mov
jge
addr16
xlat
in
or
add
sub
dec
adc
nop
imul
test
andl
stos
into
movups
ret
into
ljmp
scas
inc
push
cmp
fldt
lea
inc
clc
jg
sub
je
fs
outsb
js
scas
jl
jmp
cmp
or
and
les
mov
lods
rcrl
popa
mov
pop
in
mov
fnsave
or
mov
or
mov
mov
es
out
cmpsb
add
sub
fdivl
ja
cmp
jl
lret
movl
inc
aad
test
enter
dec
jo
lcall
mov
mov
or
adc
push
mov
sub
dec
adcb
icebp
cmp
or
mov
dec
mov
add
decb
scas
mov
lock
bound
mov
mov
pop
ret
ficoml
out
mov
mov
mov
push
cmp
test
rorl
sbb
inc
xorl
dec
pop
add
ss
mov
lods
roll
lods
push
push
cmp
dec
test
jge
cmp
addb
stos
mov
pop
sub
cmp
rorb
ret
lcall
xchg
aam
je
insb
enter
xor
cld
mov
call
cmp
enter
in
lock
push
bound
fst
or
bound
das
jbe
mov
jo
pop
cmc
pop
test
or
push
loope
icebp
int3
into
jp
push
rorl
ja
mov
aaa
cmp
in
pop
xchg
aam
cld
popf
or
popf
call
mov
pop
or
xchg
jno
jmp
adc
mov
cwtl
cwtl
mov
hlt
ja
dec
in
loope
add
addr16
mov
sub
shll
test
lcall
mull
xchg
rcrl
arpl
insl
scas
mov
pop
mov
mov
xor
lret
daa
and
pushf
cmp
std
dec
js
hlt
cmp
adc
and
and
mov
mov
negl
cmpsb
lahf
adc
stc
pop
shlb
dec
imul
aam
rorl
inc
outsl
repz
mov
xlat
and
lcall
shr
jno
out
ss
cmpsb
inc
hlt
push
imul
lods
xchg
stc
hlt
sbb
bound
xchg
mov
and
jg
xchg
bswap
add
test
lds
rcrl
jns
insl
pop
dec
push
push
data16
daa
int3
jno
out
push
sbb
into
add
stc
jb
loop
cmc
cltd
pop
jmp
loopne
addl
mov
sub
in
scas
cmp
nop
dec
dec
mov
addr16
aam
jl
call
pop
pop
fs
popa
dec
pop
ss
push
xor
scas
pop
xor
mov
imulb
mov
sub
jns
mov
add
jno
dec
adc
push
xor
xchg
sub
fmuls
les
inc
pop
mov
inc
sbb
push
mov
cmpsl
mov
mov
mov
sbb
lcall
aas
dec
je
in
sub
movsb
cltd
jge
testb
inc
test
xchg
popa
lock
rorb
jmp
sbb
jo
jo
popw
aaa
jl
push
pop
jne
cmp
icebp
fsubrp
mov
out
mov
push
mov
and
pop
xor
sub
jp
push
cmp
push
dec
adc
es
dec
sbbb
popf
or
data16
repz
test
mov
in
lret
call
mov
xchg
cmpl
dec
jnp
push
mov
push
repnz
cmp
insl
dec
push
fiaddl
idiv
sub
mov
mov
xchg
leave
or
push
in
adc
pop
test
aaa
push
mov
cld
aas
xlat
movsl
into
mov
insb
ja
push
jb
add
clc
mov
push
ret
pop
inc
add
nop
cmc
mov
cmc
xor
jno
cmpb
push
pop
ret
and
xor
dec
xchg
pusha
fistpll
add
xchg
pop
shlb
xor
addr16
std
dec
lcall
std
jno
pushf
and
xor
adc
push
sub
sbb
gs
adc
roll
pop
leave
xor
push
cmpsb
jg
nop
leave
sub
rolb
nop
dec
js
div
jl
imull
ret
call
ret
data16
cmp
aas
shll
push
mov
pop
fxch
testb
cmp
lret
or
cltd
test
add
and
adc
outsb
adc
mov
or
jl
jle
es
xchg
sbb
subl
jl
add
fnsave
mov
cli
stos
int3
xchg
outsb
xchg
push
in
fsubrp
and
inc
and
jae
lds
rolb
testl
pusha
es
test
aam
rclb
cmpps
int
je
jne
mov
test
stos
call
insl
mov
push
and
add
xchg
std
shll
lods
shrb
sahf
stc
push
enter
push
xor
sbb
pop
mov
and
data16
repnz
imul
or
loop
addl
mov
sub
hlt
push
popf
cmp
test
pop
cmpb
mov
cmc
les
jo
sbb
sub
stc
xchg
out
sub
and
lcall
fucom
add
xor
cmpsb
ret
shlb
rcll
nop
icebp
xor
subb
adc
jns
inc
enter
sbb
jne
cltd
int
push
cmp
mov
scas
lds
fsubs
icebp
pop
hlt
addr16
add
insl
cmp
xorb
cld
or
pop
bound
loope
fnstcw
and
xlat
sahf
pusha
xchg
insl
push
aad
lds
fsubs
test
xor
ds
inc
jp
loope
mov
call
sub
sti
adc
lods
fsubr
aas
sub
cltd
inc
pusha
dec
clc
mov
decb
push
insb
cmp
imul
lcall
ja
hlt
xlat
jg
jle
int3
add
jae
cmpsb
mov
popf
cmp
jmp
int3
cs
test
imul
jno
imul
sbb
mov
pop
dec
xor
cmpw
cmp
arpl
out
xor
xor
pop
stc
ljmp
xorl
popa
mov
jns
xchg
bound
dec
inc
dec
sbb
push
lret
rorl
jmp
jle
mov
fldenv
adc
push
aas
or
fabs
mov
inc
lods
pop
mov
push
out
cli
lds
shll
stos
jno
sub
sti
xor
xor
push
mov
sti
inc
jmp
repz
push
popf
lcall
inc
inc
add
cltd
idivl
mov
inc
cli
pop
jnp
inc
cmpsl
stos
in
pop
out
inc
mov
add
and
into
out
pop
loopne
ss
loop
cmp
mov
fcomps
or
sbb
push
and
sbb
xlat
jmp
loope
mov
push
lahf
stos
xor
adc
test
rorb
or
sub
into
pop
mov
mov
ror
fidivrl
dec
loope
shll
xor
mov
fadd
jno
jmp
icebp
scas
jns
lods
mov
inc
mov
pop
jb
push
lahf
xor
mov
xor
enter
sub
mov
cmp
stc
pop
mov
sub
movsb
and
addr16
and
pop
xchg
push
inc
push
ljmp
ds
mov
mov
fiadds
mov
pop
icebp
sbb
cmp
sub
ljmp
inc
xchg
enter
and
in
adc
cmp
add
mov
dec
mov
ds
ret
mov
in
jae
cmp
mov
or
imul
outsb
fcomps
das
lahf
jp
xlat
mov
roll
lds
jne
adc
sti
das
xor
icebp
outsl
mov
mov
sub
daa
mov
leave
insb
push
shlb
lea
rcrb
and
nop
inc
push
sbb
out
fildll
lret
jmp
jmp
sbb
pusha
stos
pop
ret
loope
scas
in
mov
push
rcrb
or
or
sbb
int3
sbb
or
mov
shrl
into
fsubrs
js
push
inc
pushf
pop
rcr
cltd
arpl
push
std
sbb
outsb
cmp
sbb
xchg
je
mov
mov
pop
xor
test
mov
in
stos
inc
mov
ja
mov
flds
icebp
push
push
pop
pop
push
add
filds
divb
jne
and
pushf
rclb
pop
fsts
nop
clc
jecxz
dec
daa
and
xchg
arpl
hlt
jns
inc
std
sub
mov
subl
mov
movsl
in
pop
ss
adc
push
loop
push
in
sbb
js
adc
daa
aad
loopne
cmp
outsl
push
push
mov
jae
dec
add
sub
adc
rcll
cmp
faddl
pop
pop
aaa
cmpsl
push
pusha
add
sub
sbb
paddsb
mov
popa
out
loopne
add
outsb
mov
mov
cmpsb
cmpsb
pop
lea
repnz
rclb
dec
add
inc
ja
insb
repnz
xor
sahf
mov
inc
ds
cltd
fwait
lods
adc
fcom
pop
imull
inc
pusha
aam
bswap
adc
sbb
mov
les
lock
and
push
test
mov
sub
push
dec
test
bound
lret
xlat
pop
pop
jns
dec
negl
add
push
test
stos
cmp
push
nop
push
xor
xor
or
push
ror
xchg
pop
add
sarb
ljmp
mov
loop
sub
xor
or
bound
jnp
mov
mov
stc
jmp
dec
inc
movsb
mov
dec
add
rorl
cmp
jne
mov
out
push
dec
xchg
xchg
pop
push
xchg
das
cmp
test
jns
adc
cmp
data16
shrb
mov
pushf
inc
xor
ss
mov
out
push
stos
add
movd
and
mov
in
dec
or
lods
inc
testl
mov
mov
pop
pop
int3
shrl
test
pop
shrb
add
mov
adc
lahf
das
xchg
lea
add
cmp
mov
sbb
xor
pop
xchg
push
mov
aaa
iret
adc
inc
add
mov
or
in
mov
add
enter
cmpsl
or
js
sbb
shl
loop
mov
mov
cmc
lds
cmpsb
mov
sbb
and
adc
clc
or
mov
cmp
mov
pop
mov
or
lock
sbb
inc
mov
push
mov
mov
inc
xchg
movsb
out
popf
add
mov
test
xchg
mov
and
inc
out
push
pop
aad
push
adc
pop
inc
call
xchg
dec
test
mov
pop
mov
and
testb
js
lods
rcrb
int3
pushf
fs
mov
cmp
jl
lock
inc
push
jne
cmc
jno
add
pop
rcrb
vpexpandd
ret
mov
pop
repz
xor
loope
repz
mov
ljmp
inc
xor
jno
sub
sarl
jmp
push
scas
mov
lods
mov
sbb
push
xor
xchg
cmpsl
repnz
cmp
leave
shrl
out
push
rcrb
jp
ror
movl
nop
mov
xor
sub
jae
aad
je
les
enter
cli
daa
mov
and
sub
mov
dec
aaa
mov
popa
jle
and
inc
inc
hlt
dec
rcrl
push
test
lock
ja
movsb
ss
enter
iret
jp
pop
leave
push
mov
adc
in
fwait
das
fwait
ror
and
cmc
and
fidivrs
test
add
cs
sub
hlt
push
mov
and
popa
imul
sub
lea
xchg
fwait
add
jns
in
push
out
pushf
mov
imull
cli
pop
ljmp
data16
icebp
popa
in
arpl
dec
stos
fmull
rcrl
fstl
pop
push
rcrl
pushw
repz
and
cmp
into
xchg
pop
inc
insl
jne
pop
das
jge
in
daa
popf
loop,pn
push
cmc
daa
xchg
loopne
xor
mov
cmp
jns
mov
cmpsb
aad
and
jbe
loopne
add
dec
mov
add
adc
fwait
mov
loop
scas
cld
xchg
push
shl
sub
jno
loop
shl
outsl
xchg
sbb
inc
js
push
jb
xchg
push
cmpsl
loop
pop
jl
cmpsb
movsl
scas
out
int3
iret
jae
test
hlt
popf
fwait
pushl
aas
addl
cmp
inc
push
shrb
mov
push
sbb
mov
sub
popf
jb
mov
pop
pop
xor
pushf
xor
pop
sub
icebp
div
push
or
xor
or
insl
jbe
in
sbb
mov
fdivp
and
jle
lock
jno
lret
sub
dec
test
shlb
and
xchg
dec
popa
aam
xchg
stc
adc
popf
int3
fisubrl
jae
xor
push
enter
and
jle
mov
lds
fcoml
jge
ficomps
cs
pop
mov
shlb
loop
mov
jne
mov
lret
dec
cs
fisubs
cmp
mov
xchg
dec
dec
dec
sbb
lcall
bound
insl
xor
push
push
inc
sbb
cld
inc
push
daa
mov
and
xorb
gs
pop
mov
mov
dec
sbb
movsb
xlat
mov
pop
mov
xor
xchg
jl
push
jp
test
dec
mov
idivl
push
inc
test
imul
xchg
es
movsb
mov
push
neg
jno
xor
sbb
sub
jne
and
pop
and
and
and
in
leave
rcll
int3
or
cltd
leave
and
jnp
mov
adc
sahf
andb
icebp
fwait
inc
dec
sti
ds
movsl
sub
insb
sbb
into
pusha
mov
cwtl
mov
stos
jo
loopne
sahf
dec
and
lahf
inc
mov
mov
mov
jecxz
add
sbb
arpl
out
rcrb
fsubp
rorb
mov
notb
dec
sbb
jbe
fwait
push
lea
jge
pop
mov
or
push
stc
mov
pop
mov
insb
cmpb
sbbb
jge
push
loope
ret
jp
and
call
test
xchg
xchg
ja
mov
inc
sti
pop
inc
mov
dec
or
push
mov
add
loope
out
push
movsb
lcall
cmc
mov
cs
lea
push
lret
mov
push
push
push
jge
fwait
adc
cmpb
mov
push
out
inc
xchg
push
lods
cli
cmpsb
lret
xor
pop
stos
mov
in
dec
mov
cmp
adc
or
cmpsb
data16
sub
stos
sub
loopne
cli
or
push
mov
mov
or
cmpsl
fists
add
inc
cmp
sub
cmp
sbb
or
lret
fiadds
mov
dec
sahf
push
cmc
test
jnp
test
cmpsl
pop
dec
ret
not
mov
daa
add
in
sub
in
jae
shlb
icebp
jp
push
sbb
dec
or
xchg
pop
testb
and
dec
mov
push
xchg
adc
dec
jbe
jb,pn
mov
mov
mov
js
xor
sbb
cmp
cmp
add
cwtl
gs
or
dec
sbb
xchg
mov
pop
jmp
xchg
sbb
mov
insb
cmpsb
xor
sbb
popf
or
push
test
fwait
dec
addr16
je
mov
in
mov
xor
mov
divb
cld
lcall
mov
xchg
movb
push
cli
dec
jns
fstps
pop
ja
test
fisttps
andl
jb
and
lret
data16
dec
lahf
adc
ret
mov
and
inc
mov
xchg
mov
mov
pop
xor
xchg
decb
neg
lock
xor
jns
lods
mov
pop
sbb
add
mov
repnz
cmp
jae
shrl
repz
or
iret
cmp
add
sbb
cwtl
or
scas
push
xor
mov
sti
dec
dec
repnz
lcall
or
gs
pop
mov
cmp
jno
mov
imul
fcoms
push
push
mov
into
jle
push
adc
jns
push
pushf
xor
mov
xchg
push
mov
push
insb
sarl
movsl
push
push
notb
outsl
pop
loopne
fbstp
fidivrs
aam
pop
js
cwtl
cmp
insb
inc
fsubr
andb
in
std
out
mov
sbb
clc
sub
pop
push
enter
nop
or
xchg
add
out
addb
lret
jle
mov
icebp
insb
mov
outsb
and
jge
ret
test
scas
cmp
xor
pop
lods
sub
and
ljmp
cmc
push
jo
popa
out
sub
or
sub
sub
or
cmp
fs
add
fisubrl
fcomi
add
and
imul
test
mov
or
clc
out
insl
clc
lods
fisttps
push
jbe
lret
rclb
add
leave
lret
pminsw
adc
and
test
daa
xchg
mov
or
cltd
daa
shrl
lcall
nop
jg
jmp
fwait
int3
sub
jns
fsubrl
imul
inc
or
dec
push
lods
sbb
push
cwtl
inc
mul
cmp
dec
lods
clc
xchg
ja
scas
push
push
mov
outsb
arpl
mov
dec
and
hlt
or
data16
mov
jmp
stos
outsb
cli
jg
lods
xor
hlt
orl
rolb
dec
call
push
push
xlat
jno
negl
mov
imul
sbb
cltd
cmpsb
cmp
rcrl
psrad
loope
jno
cltd
out
inc
cmpsb
addr16
les
mov
das
ss
in
in
ds
scas
lret
insl
cli
arpl
xchg
lods
stos
shll
inc
ljmp
pop
movb
xor
xor
enter
push
mov
adc
adcb
xor
or
or
or
insl
mov
push
jge
xchg
sbb
sub
les
lods
scas
sbb
std
std
sub
lret
aam
cltd
sbb
mov
int3
iret
stos
int
pop
lods
je
add
sbb
xor
mov
pop
lahf
dec
ja
in
mov
pop
mov
mov
sbb
lret
mov
sbb
mov
sub
mov
pop
insb
je
mov
les
mov
dec
xchg
xchg
rorb
pop
xor
sar
rcll
or
xchg
out
mov
mov
aad
in
loop
popf
fdivrs
cld
cmp
das
test
fsub
sub
ja
test
pop
lahf
scas
pop
mov
xor
inc
adc
es
jl
rcll
or
or
xor
and
or
or
sbb
xchg
hlt
mov
jg
add
int3
shll
mov
gs
mov
daa
dec
rsm
lcall
add
pop
lods
sbb
sub
push
mov
add
mov
pop
pslld
push
cs
xlat
loopne
sub
jae
pop
out
addr16
dec
jge
loop
lock
clc
fnclex
push
cmp
adc
fcmovnb
xor
decl
pop
push
mov
cmpsl
rolb
sub
jge
push
xor
inc
sub
arpl
call
and
negb
pop
call
jmp
or
pop
push
test
aas
clc
mov
pop
test
xchg
ret
cmpl
sbb
and
test
add
dec
stos
lock
mov
adc
inc
scas
or
lcall
mov
push
dec
movsb
or
cld
mov
mov
xlat
scas
xchg
mov
push
movsb
push
aaa
jle
cli
mov
xchg
add
dec
sub
adc
out
das
fldpi
sti
in
inc
mov
dec
xchg
fwait
mov
or
aad
subl
pusha
aam
test
pop
sbb
mov
jno
xor
mov
inc
add
sub
jecxz
getsec
or
and
or
rorb
mov
jg
out
enter
mov
adc
jle
mov
jg
xchg
ss
loope
mov
pop
inc
out
jge
push
fs
cmp
xor
sarb
into
inc
outsl
fnstsw
jb
pusha
insl
push
test
pop
in
push
push
imul
sub
push
and
mov
mov
inc
das
cmp
pop
pmovmskb
sub
int3
idivl
add
aas
arpl
mov
fidivrs
xchg
jp
mov
or
shlb
sbb
fwait
mov
and
mov
into
js
sti
arpl
pop
pop
jb
shrb
lahf
js
jl
inc
fists
xor
push
dec
sbb
xchg
mov
jle
lds
in
add
inc
mov
push
push
das
jne
sbb
mov
aad
xchg
xchg
mov
mov
cli
sub
push
push
ljmp
lock
xchg
mov
loop
insb
mov
sbb
aaa
push
mov
mov
lds
je
hlt
daa
js
dec
mov
dec
fisubl
jecxz
into
lcall
pop
fisubl
pop
mov
mov
dec
mov
jns
movb
call
mov
lods
inc
imul
jo
push
jbe
or
pop
ds
and
out
icebp
jns
lret
add
pop
mov
pop
push
cmp
inc
js
faddl
add
mov
fistps
sub
idivb
push
or
xor
cs
in
in
pop
sbbl
inc
stc
loop
nop
push
ds
sub
push
loopne
inc
ret
fwait
sub
and
sbb
pop
or
dec
stos
in
and
pop
cmp
sub
cmpsb
mov
or
fcoms
outsl
dec
dec
or
in
pop
jns
mov
dec
in
ss
mov
pop
div
imul
inc
push
out
sbb
mov
mov
lds
xchg
and
fidivs
pop
sbb
adc
loopne
iret
add
out
or
mov
sub
pop
xor
push
adc
orl
in
rorl
into
lods
mov
xor
std
fisttpll
adc
xchg
jle
rcrb
mov
pop
cs
jb
jne
inc
rol
arpl
push
mov
cld
pusha
inc
addr16
cmp
lock
enter
mov
lock
mov
mov
lret
pop
fiadds
lock
jae
roll
fwait
mov
mov
xlat
mov
shl
out
xchg
xor
out
xchg
fists
sarb
xor
inc
pop
sub
push
cltd
push
mov
xor
aam
mov
fcoml
outsb
sub
adc
loope
add
fcoml
jns
in
cs
dec
iret
jg
rorb
or
or
in
inc
or
call
xchg
mov
adc
call
sub
scas
or
iret
scas
fnstsw
pop
ror
dec
out
int3
or
sub
std
sbb
sub
push
sahf
stos
cltd
or
test
pop
pop
cmp
popa
and
fidivs
adc
je
pushf
xor
sub
lcall
sub
pop
sub
mov
cmc
fs
imul
movsl
sahf
pop
push
ja
loopne
std
and
repnz
adc
jns
push
mov
imul
pop
push
pop
mov
cwtl
call
lret
sub
lock
push
mov
sub
dec
mov
mov
xchg
repz
and
add
mov
mov
fs
orb
pop
aad
jecxz
mov
or
into
adc
daa
dec
movsb
and
jg
sbb
cli
aas
fnstenv
add
cmp
push
jl
xorb
pop
test
push
daa
bound
lahf
cmc
out
xchg
jecxz
mov
mov
mov
sbb
dec
dec
faddp
and
sbb
ficoml
stos
push
and
or
dec
arpl
mov
lcall
xchg
mov
and
sbbl
or
cmpl
bound
mov
mov
inc
into
inc
adc
dec
scas
orl
cli
insl
imul
imul
jle
ret
sbb
into
sbb
jae
sub
ret
out
xor
andb
dec
dec
imul
leave
xor
add
popf
xor
insb
pop
sub
out
cmp
lret
adc
cmp
mov
jo
dec
mov
sahf
es
test
or
in
add
mov
xchg
cmp
mov
fs
sbb
imul
sbb
ss
inc
pop
les
orl
mov
adc
int
outsl
fidivrs
jno
jmp
xor
repnz
push
mov
sub
add
or
repz
push
pop
arpl
dec
decl
popf
jecxz
icebp
outsl
mov
mov
fwait
shrb
scas
int3
push
ja
cmp
mov
or
cltd
and
int3
inc
sbb
incb
rolb
cwtl
in
stos
add
jg
into
ret
and
sbb
imul
iret
fwait
repnz
fildll
or
es
inc
push
loope
test
mov
ljmp
mov
sub
inc
stos
insl
fistpl
in
lret
inc
xchg
mov
jle
fsubs
dec
rorl
sbb
mov
hlt
popa
cmc
loop
xchg
outsl
add
xorb
jne
mov
pop
cli
pop
xor
test
dec
cltd
daa
push
movsb
imul
jmp
mov
scas
or
pop
and
inc
dec
ds
gs
daa
iret
jle
cmc
movsb
stos
mov
dec
lretw
insb
pushw
dec
lods
dec
in
add
mov
int
mov
jb
inc
jnp
jae
adc
mov
ja
ss
leave
mov
cmp
fs
sbb
test
xchg
lds
fwait
stos
jno
inc
test
and
xlat
lods
das
cmp
mov
and
push
pusha
cmp
cmp
mov
push
adc
mov
cmp
xchg
test
pop
lcall
sub
in
mov
dec
scas
cmpsb
mov
add
test
je
out
mov
ljmp
and
mov
repnz
push
xchg
das
and
hlt
mov
jecxz
movsl
or
or
mov
andl
sbb
lret
leave
inc
inc
mov
jne
addr16
jne
shll
cwtl
ss
xor
dec
xchg
sub
jge
fsubs
xchg
jnp
ret
pusha
lds
rcll
call
ds
decb
inc
mov
xor
lock
stos
sbb
fisttpll
jbe
dec
leave
int
ret
ja
mov
loopne
push
inc
outsb
xchg
jae
out
cli
sub
xchg
inc
inc
jb
lea
push
imul
lcall
ljmp
and
mov
lods
cmpb
sbb
xor
shrd
dec
inc
push
add
movsb
rorl
mov
cmpsb
dec
jbe
ss
mov
xor
imul
mov
pop
mov
xchg
mov
hlt
gs
stos
jle
xchg
xchg
shlb
scas
inc
or
or
xor
outsb
loopne
mov
xor
xchg
jnp
push
std
test
mov
dec
mov
sub
jmp
adc
popa
push
mov
and
sub
and
in
jg
cmp
pop
dec
xor
shlb
cli
add
je
cmp
sahf
adc
out
push
shlb
cmp
sbb
push
mov
ds
adc
ficomps
or
jg
add
sti
js
sbb
shlb
not
dec
fisttpll
cli
lahf
jle
cmp
inc
sahf
out
popa
or
pop
pushl
imul
movlps
or
xchg
mov
mov
cmp
test
pop
push
int3
lahf
outsl
cmp
xchg
pop
nop
xor
inc
xchg
stos
icebp
stc
inc
cmc
sbb
mov
mov
or
and
repz
insl
dec
add
sahf
jne
push
xchg
inc
cli
pop
push
test
push
cmpsb
imul
inc
jmp
xchg
dec
inc
imul
mov
adc
lds
out
push
jb
adc
gs
cmp
xchg
in
pop
push
movsb
cmpb
test
rcrb
xchg
adc
shrl
add
mov
and
sti
insl
xchg
loopne
and
jne
cmc
jnp
mov
dec
filds
sub
dec
popf
nop
cvtps2pi
ljmp
dec
rorb
cmpsl
add
popf
sbb
inc
daa
pop
lods
call
mov
lcall
out
ds
int
cmpsb
add
int3
pop
sbb
test
sahf
mov
dec
jnp
jb
divb
mov
push
pop
push
imulb
ds
push
adc
xlat
lret
and
es
aad
adc
test
popf
adc
int3
adc
mov
cmpsb
ss
push
scas
arpl
call
push
fsubl
cwtl
jns
dec
and
lea
in
fwait
hlt
ret
cwtl
bound
adc
lods
sub
mov
push
jbe
andl
xchg
fstpt
lea
dec
xchg
pop
pusha
inc
push
add
and
lods
fistps
insl
and
out
lret
lcall
sbb
addl
test
dec
inc
sbb
xor
cmpsb
cmp
push
fimuls
dec
and
les
dec
fcom
mov
fists
bound
fcmove
cli
or
inc
fcmovne
inc
sub
into
xchg
fisubrs
fisubs
cmpsl
addr16
xor
pop
scas
and
pop
int
add
loopne
fldl
outsb
sarb
dec
popf
xlat
ja
mov
pop
clc
jne
test
jnp
out
jp
mov
daa
or
add
adc
neg
jmp
sbb
add
sbb
and
adc
or
fwait
out
push
xchg
or
scas
fisubs
add
jmp
sub
sbb
adc
lcall
cmc
in
and
shl
sbb
int3
cli
mov
mov
rcrl
push
or
pop
call
iret
mov
stos
push
pushf
addl
sub
movsl
addr16
addr16
aad
jmp
nop
bound
cmp
lea
fsubl
cltd
lods
les
xchg
cltd
fnstsw
lcall
cmp
out
add
mov
inc
pop
push
fcomps
mov
adc
xchg
pop
outsb
and
xor
sahf
into
sahf
cmpsl
movsb
mov
repz
bound
shll
testb
mov
in
sbb
mov
ds
push
pushf
jle
xchg
mov
ja
sbb
orb
inc
adc
in
mov
inc
inc
cld
pop
pusha
std
orb
mov
push
lock
mov
cmp
scas
lock
mov
inc
sub
push
dec
js
push
jbe
and
nopl
mov
sbb
push
icebp
out
dec
or
je
add
mov
mov
mov
inc
mov
sub
fsub
test
fsubl
sub
insl
insb
lcall
xlat
ficoml
jne
jbe
add
int3
lods
adc
add
out
add
mov
movsb
pusha
adc
add
imul
sahf
mov
in
subb
out
mov
outsl
testl
cltd
outsb
rolb
lret
pop
into
idivb
push
iret
xchg
cmp
inc
lock
sbb
push
sbb
jle
test
sar
sahf
xchg
insl
out
sub
mov
xchg
and
sahf
mov
mov
push
dec
adc
orl
mov
das
outsb
mov
mov
jo
fsubrl
jo
xor
mov
lds
fidivl
fcompl
imul
js
jbe
mov
inc
cmp
repz
out
mov
sahf
mov
aam
mov
fimull
ror
paddusw
inc
xlat
fildl
jb
cmp
mov
ja
mov
aad
push
insl
mov
mov
fs
lods
pushf
inc
sti
pop
adc
aaa
int3
jne
out
repz
pop
loope
hlt
pop
xlat
addr16
insb
fs
mov
jmp
loop
and
mov
mov
imul
and
aaa
lea
sahf
dec
mov
jecxz
jo
cmp
or
pop
in
ret
shl
divl
and
rorl
test
pop
add
popl
push
xchg
rcr
cmp
or
subl
into
adc
sahf
push
or
stos
addl
dec
js
fists
mov
mov
cmp
out
insb
movsb
sar
adcl
jno
stc
out
xor
or
int
incb
jge
in
pop
mov
repz
push
icebp
nop
rcrb
sahf
repnz
inc
shll
ljmp
adc
push
pop
insl
outsl
xor
inc
aaa
pop
out
jae
aas
ljmp
mov
popa
mov
adc
dec
pushf
ret
jb
repz
xor
add
test
iret
clc
mov
movups
out
mov
loope
cmpsl
xor
pop
out
sbb
nop
mov
je
pop
loopne
aam
out
fdiv
popf
sti
shrl
orl
or
data16
cld
popa
mov
test
popa
sub
scas
pop
rorb
inc
in
sbb
jl
cmp
adc
fprem1
in
and
cmpsb
lret
out
outsl
xlat
and
subb
fs
mov
push
pop
inc
outsl
and
dec
xchg
loope
mov
mov
call
jo
mov
testb
dec
jb
inc
int
add
imul
data16
nop
cmpsb
inc
hlt
add
sbb
sub
cmp
mov
pop
movsb
push
nop
pop
cmp
shrl
and
inc
test
addb
nop
push
out
out
jnp
add
jns
or
arpl
pop
xorb
rol
mov
aas
ds
lods
pop
mov
mov
pop
ret
lcall
shrb
cld
pop
sbb
sbb
mov
xchg
mov
push
negb
test
jg
add
xchg
or
sub
lods
mov
xchg
mov
dec
adc
sahf
xchg
lcall
jae
data16
mov
aaa
ja
sbb
ficoms
icebp
push
sbb
sahf
int3
in
push
xor
pop
mov
lret
outsl
push
xchg
push
sub
and
push
pop
or
push
mov
xchg
push
cmp
sub
jne
loop
adc
fldt
jle
dec
jmp
pop
mov
insl
mov
mov
shl
mov
sbb
leave
or
lods
xor
sub
jnp
dec
mov
inc
inc
pop
test
movsl
sbb
and
adc
lock
imul
cmc
testb
lret
in
adc
add
push
or
aas
cmp
icebp
sub
test
dec
lcall
adc
movsb
and
dec
xor
flds
cmpsl
jnp
mov
sub
outsl
hlt
fwait
cwtd
mov
push
repnz
shlb
adc
js,pn
add
or
lcall
imul
ds
cmp
lea
insb
std
ret
mov
jg
movl
sahf
mov
jmp
imul
inc
adc
inc
sub
mov
js
cmp
fstpl
push
mov
mov
adc
jge
push
addb
addl
outsb
aad
jbe
imul
imul
pop
fnsave
xchg
pop
mov
jnp
sub
or
xor
jbe
jnp
arpl
cmp
fldt
jne
in
or
cli
call
inc
iret
and
cmp
cld
out
mov
push
jp
mov
cmc
pop
aad
xchg
imulb
push
and
inc
ss
arpl
mov
cld
neg
rol
lock
fdivp
fidivs
clc
out
clc
dec
dec
rcl
adc
push
inc
mov
aad
xor
sub
hlt
mov
lods
or
cltd
xchg
imul
out
inc
xchg
or
popf
adc
and
arpl
xorl
mov
call
xchg
push
jnp
cltd
popw
inc
jne
push
shll
or
inc
rorl
dec
hlt
xor
and
push
add
add
adc
stos
xchg
aas
iret
jns
pop
mov
fsubr
adc
mov
push
jne
mov
jmp
aam
xchg
sub
movsl
bound
cmp
scas
pop
cmp
sub
cmp
mov
cld
xor
enter
insb
push
fisttpll
push
add
mov
mov
or
cmp
mov
pop
jge
fcoms
mov
test
mov
cmp
and
js
out
push
inc
mov
imul
push
addr16
adc
decl
fidivs
push
adcl
add
aam
popf
xchg
daa
jmp
repz
cmp
rorb
fwait
cmpsb
aas
addr16
into
into
dec
sti
shlb
adc
movsl
mov
xchg
mov
lods
cmp
adc
loopne
mov
push
cli
xchg
js
xchg
ret
aam
lods
ret
out
xor
sub
xchg
add
int
pop
int3
and
add
push
jecxz
test
xchg
push
dec
adc
dec
movsb
je
jle
es
pop
lea
push
stos
pushf
rolb
lret
inc
fisubrl
dec
ret
pop
js
pop
shrb
mov
dec
add
loop
mov
mov
nop
push
mov
fdivrs
outsl
mov
xchg
mov
in
adc
out
les
repz
orl
mov
ret
hlt
mov
push
xor
pop
push
mov
cwtl
aam
movsl
push
mov
push
lods
adc
testl
adcb
cmovbe
mov
pop
jae
dec
leave
call
push
das
mov
mov
jbe
fcmovnu
push
push
cmp
xchg
mov
into
xor
mov
adc
sbb
rcr
fcoms
sahf
cmpsb
xor
or
dec
aaa
and
lret
es
sarl
cmp
loop
xlat
push
outsb
jp
ljmp
xchg
mov
mov
xor
aaa
fimuls
sbbb
shll
cmpsb
aam
jle
push
scas
mov
in
nop
fldl
or
jno
sti
cmp
aad
cld
clc
xor
clc
cmpb
mov
outsl
popa
lea
mov
adc
ljmp
je
lahf
sub
ficompl
cli
sbb
adc
insb
ss
mov
mov
inc
inc
int3
push
or
and
or
pop
mov
repz
pop
lret
dec
outsb
fnstsw
lret
shll
mov
push
or
or
int3
jne
lahf
ja
mov
adc
pop
push
jae
fstpl
mov
roll
pop
push
stc
xchg
xlat
mov
or
sub
ds
fwait
loope
xchg
addl
jle
cwtl
leave
outsl
cmp
push
ja
inc
or
add
mov
adc
dec
mov
mov
xor
in
cmpsl
int
movsb
sub
dec
mov
cs
adc
xorb
in
jbe
xchg
out
scas
mov
cmpl
push
xor
aam
fadd
xor
xchg
add
jmp
xchg
in
xchg
test
adc
xchg
push
test
mov
dec
stc
andb
dec
mov
iret
xchg
mov
movsl
das
push
repz
mov
adc
mov
les
jl
clc
insl
repz
imul
pop
gs
sub
clc
imul
in
popf
sbb
addb
call
mov
pop
sub
mov
loopne
push
push
test
cmovg
in
loopne
in
lret
push
push
jnp
mov
lret
gs
sbb
lods
mov
xchg
cld
push
xor
add
fst
inc
add
or
stos
jb
xchg
inc
xchg
mov
cld
adc
ja
mov
pusha
lea
mov
fs
sbb
bound
ret
cmp
inc
in
push
and
das
outsb
pop
jge
mov
xchg
int
jne
repz
adc
mov
mov
fstl
adc
dec
fwait
ljmp
xchg
movsb
cmp
frstor
cli
jae
mov
dec
rcr
loope
mov
dec
mov
sub
imul
cmpsl
push
cmp
jecxz
mov
fstps
add
pop
pop
push
mov
loope
pop
inc
fldt
data16
jecxz
adcl
dec
jns
sub
or
mov
shl
pop
addb
sub
movsb
les
cmpsb
sahf
out
gs
sbb
jp
pop
cmpsb
sbb
dec
cmp
notb
sbb
add
push
mov
aam
add
push
rcrb
xor
gs
pop
xchg
mov
movsl
mov
pop
pop
mov
addr16
adcb
inc
out
add
push
ret
shl
pop
sub
pop
xchg
cwtl
adc
imul
jbe
lods
xchg
xchg
int3
push
lahf
das
adc
push
mov
outsb
arpl
mov
or
loope
inc
daa
add
push
andl
push
out
or
dec
dec
call
cmpl
or
sub
rcll
pop
std
rcrl
dec
mov
push
fldl2t
filds
mov
jnp
sbbl
faddl
xchg
lret
mov
fwait
movsl
ja
cmc
lods
jp
mov
cmp
or
stos
add
hlt
pop
pop
out
nop
lods
inc
and
push
es
dec
sahf
mov
lock
dec
nop
aas
sahf
xor
lahf
dec
lret
jno
aas
lods
sub
in
addr16
adc
stc
push
mov
cli
in
addr16
mov
push
cmp
out
cmp
jl
pop
xchg
lods
fcoml
loop
gs
gs
mov
inc
mov
lret
pop
add
jmp
dec
sbb
loop
das
or
rorb
inc
pusha
add
mov
mov
inc
push
pusha
inc
or
loop
scas
dec
sbb
inc
xchg
inc
sahf
push
mov
in
lods
fidivl
xchg
push
pop
test
sahf
dec
test
and
xorl
push
mov
loop
hlt
lret
xchg
and
mov
loopne
push
iret
mov
lahf
andl
pushf
inc
jp
sbb
push
adc
jge
outsb
and
scas
lock
xchg
lds
sub
cmc
stos
sbb
or
dec
push
inc
and
adc
jge
ret
gs
mov
mov
jg
scas
push
jmp
aad
fsubrl
cwtl
punpcklbw
add
inc
lret
jo
pop
stos
ljmp
fldln2
pop
subb
in
rol
sbb
pop
test
cmp
fdivl
xlat
stc
adcl
xor
nop
jbe
jb
in
dec
das
jl
or
frstor
lock
mov
lret
fs
push
leave
in
scas
mov
fldt
add
xor
pop
sbb
mov
push
ret
xchg
in
push
inc
xor
adc
adc
xor
jbe
cmp
jle
mov
pop
or
cld
mov
lds
mov
pop
push
cmc
pop
push
in
test
add
cmp
mov
mov
fucomi
test
cmp
mov
mov
pop
cmpsl
clc
fstpt
movsl
jg
dec
inc
adc
jnp
sub
sub
jmp
outsb
and
fdivrs
outsl
dec
subl
icebp
pop
lret
mov
add
mov
adc
jo
jns
inc
inc
xor
dec
fsubr
inc
js
xor
out
scas
ret
fsubs
sub
shll
adc
hlt
push
sub
ds
ficoms
imul
test
or
push
push
or
inc
push
call
dec
cmpsl
mov
xor
jg
test
orb
iret
lcall
sub
test
int3
push
es
rcrl
xor
jg
mov
jno
add
shrl
roll
mov
je
cmp
add
sbb
dec
xchg
push
jecxz
or
out
xchg
and
cmp
les
jmp
mov
push
dec
sahf
popa
adc
cmpsb
scas
cwtl
lods
subl
test
push
jo
movsl
jae
sbb
fistpl
rorb
xor
add
and
push
mov
stc
orb
inc
xchg
mov
jnp
push
add
dec
mov
add
mov
adc
inc
cmpl
cwtl
jns
mov
sbb
xchg
mov
es
xor
fwait
bnd
adc
stos
mov
mov
mov
in
pop
mov
sarb
xchg
mov
jl
sub
push
push
loop
in
add
daa
mov
mov
rorl
pop
mov
scas
shrl
fdecstp
add
mov
jns
in
dec
push
inc
std
lock
jl
xor
daa
sub
adc
lea
int3
stos
pushf
ja
xor
aas
inc
cmp
cmp
mov
xchg
cmpb
push
cmp
test
jnp
mov
and
add
mov
pop
bound
syscall
push
addr16
add
cmp
movsb
fsubs
pushf
pop
popf
das
daa
in
leave
push
adc
dec
pop
stos
fcmovnb
fnstenv
sbb
dec
cli
iret
add
das
cmpsb
sbb
ficomps
mov
pop
lods
movsl
pusha
jp
cmc
dec
test
aad
and
int3
aam
decb
mov
inc
jp
push
mov
out
movsb
dec
mov
sbb
push
into
dec
jne
inc
inc
in
imull
add
sahf
jecxz
lret
dec
loope
pop
lds
adc
inc
repnz
mov
mov
sbb
aam
cmp
in
scas
xchg
adc
popf
ss
and
lods
bound
add
push
cmp
mov
fwait
cmp
enter
incl
pop
cmc
push
shll
outsl
jl
neg
dec
sub
xor
mov
push
inc
inc
into
jge
push
out
fldcw
mov
push
out
sub
test
aaa
mov
testl
xchg
test
out
pop
shlb
daa
push
loop
call
outsl
mov
sbb
pop
mov
sbbl
push
stc
or
fs
inc
lea
cwtl
jp
xor
xlat
add
cmp
mov
fisttps
leave
cmp
mov
dec
xchg
iret
lods
fwait
nop
push
scas
in
in
lods
subb
adcl
push
inc
or
xchg
loope
xchg
arpl
xor
dec
jae
stos
push
mov
cmpsb
push
enter
ja
push
outsl
mov
jle
es
icebp
jp
in
shl
out
pop
xor
les
repnz
movsb
xchg
push
fisubs
push
xor
pop
dec
mov
and
adc
adc
popa
pop
loopne
cmpsl
sbb
add
jmp
cmp
je
shl
lods
and
cmc
cmp
sahf
dec
jmp
sbb
in
push
aad
dec
rclb
and
sbb
jno
jg
adcb
fsubl
call
adc
jnp
and
test
jbe
sbbb
cmp
sub
add
lds
push
sub
dec
cmpsl
outsb
in
stos
xchg
jnp
pop
sub
and
into
mov
jnp
movl
repnz
sarl
mov
or
std
push
sbb
fadds
jb
sti
in
insb
xlat
mov
std
stos
inc
mov
stos
mov
jne
pop
loop
sahf
int3
adc
frstor
test
add
enter
sti
ljmp
lock
mov
sub
out
repnz
call
les
loop
or
pusha
loopne
push
std
stc
pop
daa
loope
dec
push
jbe
push
out
fcomip
push
ret
xchg
jge
adc
iret
adc
outsb
sti
inc
pop
ret
xchg
fidivs
sbb
jmp
xchg
rcll
les
ret
cwtl
cmp
insb
ret
xchg
in
push
pop
and
stos
sahf
or
int
dec
das
xchg
lods
add
sub
dec
mov
xchg
adc
jmp
mov
aad
fs
lcall
pop
lods
push
testb
clc
dec
js
pop
icebp
aam
dec
cmp
jns
pop
out
std
inc
popf
sub
pusha
dec
push
jl
insb
aam
nopl
add
push
jp
test
outsl
popa
mov
xchg
dec
xchg
ret
lock
jne
cmpsl
or
mov
sti
bound
xlat
subl
fidivl
addr16
sub
mov
sbb
dec
pop
mov
inc
push
lock
or
dec
cmp
xor
pop
mov
or
jg
sub
ljmp
mov
dec
push
inc
or
popf
into
imul
mov
and
arpl
mov
cld
inc
imul
adc
sbb
gs
pop
jne
inc
int3
pop
or
add
mov
mov
inc
pop
call
je
scas
xchg
jo
inc
test
jecxz
and
adc
sub
imul
pop
xlat
bound
and
pop
mov
add
dec
adc
fmull
mov
push
hlt
cmp
ds
cmp
lcall
pop
stc
inc
fists
mov
das
pop
jns
fistpl
cmpb
push
sub
xchg
loope
adc
push
cmp
bound
inc
cmc
test
cmp
cmp
mov
ret
or
mov
pop
push
fisubs
insl
ret
sub
pop
fistl
add
cmp
addr16
arpl
dec
xchg
xchg
adc
fstpt
mov
test
popa
adc
in
iret
jne
mov
sbb
loopne
ret
jmp
push
and
sub
fnsave
or
stos
lcall
sub
int3
or
jo
leave
scas
cmc
xor
inc
cmp
push
loopne,pt
add
ret
jnp
fdiv
test
sti
mov
pop
nop
popl
and
les
jp
xor
xchg
jb
fs
faddl
sbb
adc
cmpsb
outsl
mov
mov
mov
jmp
lret
test
mov
jmp
mov
pop
mov
sbb
imul
lahf
cli
mov
inc
addr16
mov
push
cmp
mov
and
xor
xchg
jno
daa
jmp
or
nop
jl
rcrl
jbe
daa
push
and
daa
or
cmpsb
loope
adc
and
lds
rorl
and
mov
movsl
lods
adc
es
popf
sbb
mov
sahf
lahf
jae
jns
add
flds
xchg
sbb
les
aas
cmp
into
xchg
sub
xor
sbb
jp
cmpsb
cmp
imul
jp
and
cmp
push
cli
repnz
in
fbld
ror
add
nop
out
scas
in
push
xor
outsb
loop
mov
loope
out
test
shl
les
sbb
cltd
cmpl
sbb
mov
rcr
imul
cmp
xchg
push
mov
adc
leave
jb
cmpsl
hlt
call
sub
sub
or
mov
mov
mov
cmp
hlt
daa
sub
dec
dec
xchg
cmpsb
fdivrp
mov
popa
in
in
outsl
add
ss
sub
inc
mov
jecxz
inc
pop
int3
push
fnstcw
mov
out
jge
popl
leave
das
js
add
sbbb
xchg
pop
or
sub
lcall
fsubrs
in
xlat
sbb
mov
sbb
icebp
push
movsb
push
iret
out
xor
mov
fistps
push
mov
mov
out
xor
xchg
dec
fisubrl
cmp
movsb
test
scas
aad
sbb
mov
insl
mov
inc
mov
pushf
dec
pop
jo
movsl
jmp
out
loop
add
ljmp
xor
fsincos
idivl
out
imul
mov
movsl
jns
ljmp
dec
jo
pop
pop
dec
sub
jecxz
add
push
mov
add
lea
add
xor
pop
lret
jg
outsl
out
and
jb
sbb
data16
pushf
lock
mov
pop
leave
mov
mov
in
pop
push
mov
cwtl
push
scas
decl
xchg
mov
jmp
inc
aam
in
das
mov
icebp
and
shlb
push
push
clc
in
int
xchg
mov
imul
mov
fiadds
cmp
or
adc
adc
dec
mov
loopne
sbb
adc
dec
pop
test
or
and
and
and
jp
push
fimull
mov
add
or
push
fwait
pop
cmp
out
or
xchg
mov
mov
xchg
mov
add
aam
jmp
sti
xchg
les
jge
pop
imull
insb
push
lahf
test
jmp
rclb
mov
pop
faddl
mov
test
dec
clc
mov
lret
test
jp
mov
jne
loope
sbb
adcl
mov
and
xor
sub
aas
dec
xor
subl
lcall
insb
int3
lahf
xor
lret
or
push
adc
dec
pop
cmp
scas
or
test
adc
or
lea
lea
call
bound
xor
cmp
out
push
cmc
mov
or
clc
or
sbb
dec
test
es
outsl
sub
jp
aaa
pop
clc
or
sbb
fs
jb
stos
or
rorb
mov
out
or
mov
rclb
cmpsl
popf
add
je
shll
jecxz
and
rolb
and
jae
xor
mov
xchg
push
in
mov
test
cmp
pop
xchg
cmp
mov
xchg
stos
jl
adc
in
rorl
sahf
mov
cs
adc
movsl
jge
jae
imul
mov
xchg
adc
ds
jb
add
aam
enter
iret
lcall
sub
in
ret
push
test
cmp
dec
pusha
sbb
jp
rcrl
adc
inc
pop
movsl
mov
cmp
jb
std
sahf
shlb
mov
cmp
fs
in
jae
fiaddl
push
push
xor
push
stos
push
movsb
or
adc
mov
xchg
xchg
mov
sbb
ds
test
cmovns
sub
mov
pushf
stos
insb
pushf
das
xchg
outsb
mov
pop
in
mov
ret
rorb
frstpm(287
sub
pop
pop
xor
jge
mov
cmp
lret
loopne
and
js
sbb
mov
mov
and
sbb
adc
cmp
es
inc
pop
aaa
adc
test
cmp
leave
mov
xchg
iret
js
dec
dec
pop
fwait
sub
cltd
jmp
push
testb
or
and
aad
mov
push
add
or
add
inc
scas
mov
dec
ss
loop
jle
push
dec
fbld
lret
jbe
push
or
aam
test
and
push
inc
scas
and
xchg
adc
cmpsb
sbb
xlat
movsb
imul
loope
xchg
iret
outsl
rcr
add
mov
adc
or
add
push
and
test
xor
test
mov
xchg
cmp
scas
sbb
or
movsl
add
lds
leave
stc
jb
sub
fs
cmpsl
inc
imul
pushf
pop
adc
enter
add
adc
mov
cmc
jnp
mov
mov
cmpsb
clc
mov
adc
lcall
jo
xorb
mov
ja
cmpsb
cmpl
lret
in
mov
fs
aaa
sbb
inc
addr16
scas
shlb
notl
fimull
jnp
add
adc
fmul
aad
out
movsl
aaa
cmp
shlb
out
mov
mov
sbb
xchg
push
lods
lods
mov
pop
fsubs
mov
cmp
sbb
cmp
sbb
and
test
out
xchg
fidivl
fwait
sbb
jle
or
sub
adc
or
sbb
inc
or
imul
mov
and
push
jno
jp
loopne
ljmp
imul
sub
int3
dec
negb
and
sbb
ljmp
fsts
dec
insl
pop
imulb
hlt
cmp
not
int3
dec
sbb
dec
fsubrs
cmp
pop
repnz
mov
jo
outsb
arpl
mov
xchg
or
idiv
popa
adc
jge
ficoml
fcomps
movsl
fsubr
or
in
push
shrl
push
inc
out
dec
cltd
addr16
sarl
out
inc
lahf
stos
divl
rcrb
xorl
or
aad
cmp
int3
fnsave
sti
push
or
out
mov
ds
dec
adc
xor
push
minps
idivb
addl
adcl
pusha
jns
out
sbb
testb
cmp
stos
jnp
scas
daa
ret
ret
xchg
sbb
push
pop
dec
xlat
pop
aas
cltd
out
dec
popl
sub
dec
push
dec
xchg
pop
dec
es
inc
out
mov
rcrl
xor
mov
adc
cmp
inc
push
sahf
dec
jnp
iret
xchg
js
fidivrs
hlt
lret
mov
clc
xor
cmpsl
popa
adc
push
test
push
in
xor
and
in
je
cmp
hlt
add
mov
adc
lret
gs
sub
pop
mov
insl
push
popa
outsl
push
jg
cld
push
es
popl
call
loope
rcrb
pop
ds
adc
sub
in
fcmovbe
into
ror
call
xor
movzbl
sbb
jae
adc
test
cwtl
enter
fidivrs
das
fnsave
cmpsl
fnsave
cmp
cmp
fcmovb
sub
cmc
jl
sub
loopne
sub
dec
pop
ljmp
fdiv
pop
cs
pop
movb
stc
pushf
jae
mov
fmull
xchg
and
mov
es
insb
mov
sbb
sub
mov
xchg
sti
in
sub
or
jmp
add
incl
mov
sub
pop
dec
or
ficomps
mov
sub
inc
dec
leave
jns
xchg
sahf
dec
insb
in
outsb
push
adc
mov
jno
cmp
into
clc
mov
mov
fdiv
xchg
or
and
xchg
mov
and
sub
mov
pushf
sbb
insl
jge
jns
jl
scas
mov
sub
out
jmp
mov
push
nop
mov
add
push
push
inc
gs
adc
sbb
cwtl
mov
mov
loopne
ret
in
adc
jo
inc
popf
mov
sbb
dec
sbb
cltd
jle
adc
cmc
bound
jns
out
outsl
int
aam
jo
stos
xor
in
into
sbbb
insb
pop
shrb
sub
lret
mov
or
sbb
insl
pop
pop
fptan
aam
mov
fcoml
lahf
xchg
addr16
cmc
ds
imull
int
mov
incl
cs
xchg
jbe
andl
movsl
cwtl
and
xchg
mov
inc
subb
jb
inc
pop
int3
ljmp
inc
inc
xor
lock
add
repz
inc
cmc
stos
cmp
adcb
enter
rorb
sbb
sbb
ja
popa
pop
dec
jmp
mov
rolb
push
repnz
jle
lods
sbb
adc
jmp
int3
dec
jp
mov
shrl
xchg
push
ret
jp
cmp
mov
outsb
setae
xor
sub
pop
inc
test
out
inc
xchg
inc
jne
sbb
mov
xor
jnp
mov
loop
in
jbe
clc
jmp
loopne
mov
loopne
push
xor
inc
push
mov
push
jge
jb
mov
sub
cwtl
cmpsb
push
stos
and
pop
scas
mov
mov
sub
jge
rolb
xor
outsl
lcall
dec
mov
cmp
xchg
cmp
dec
mov
je
or
inc
jge
shl
push
sub
sub
dec
sub
inc
jp
add
pusha
in
dec
push
xor
lods
fldl
mov
inc
pop
mov
jmp
and
mov
inc
sub
addr16
adc
fchs
inc
pusha
leave
mov
lock
dec
jne
xchg
mov
mov
mov
add
mov
dec
out
dec
lretw
inc
ja
cmpsl
push
sti
in
out
jp
arpl
and
mov
or
subb
mov
cmp
sub
call
fidivrl
jne
mov
cld
rorb
inc
jns
in
or
or
pop
ljmp
sub
scas
movsl
dec
and
leave
mov
in
mov
cmc
mov
test
push
icebp
push
or
or
ret
push
adcb
ljmp
mov
insl
mov
cmp
jmp
jbe
stos
jne
insl
loopne
xchg
in
out
fnstsw
rep
das
pop
jns
mov
pop
inc
inc
jecxz
jl
pop
mov
adc
sbb
aad
push
cmp
popf
ret
aaa
pop
jbe
stc
icebp
xchg
add
movsb
or
jnp
xchg
push
push
pop
mov
pop
stos
push
es
add
xchg
stc
popa
icebp
sub
xacquire
ljmp
adc
inc
ljmp
push
xchg
mov
mov
inc
sbb
sbbl
std
push
cmc
mov
pop
bnd
or
outsb
mov
scas
add
adcl
out
mov
loopne
mov
cwtl
sub
lods
jmp
aaa
xor
movsb
or
push
sbb
xchg
rorl
repnz
adc
inc
lret
and
bound
incl
xchg
inc
js
in
iret
cwtl
push
pop
cwtl
rcrb
jne
and
mov
adc
or
data16
popa
mov
or
out
sbb
push
movsl
push
and
outsb
bound
cs
lret
dec
mov
jbe
imul
mov
and
popa
sbb
in
das
sbb
fdivr
test
dec
mov
loop
sbb
scas
dec
stc
push
push
decb
jl
or
pop
pop
mov
add
sbb
fldenv
push
enter
add
sahf
ret
sub
in
lahf
mov
pop
jbe,pt
nop
cli
mov
rorb
lods
dec
push
jae
sub
push
imul
cmpsl
cmp
push
stc
fadds
sbb
gs
popf
jb
jge
dec
and
inc
pop
mov
lea
fwait
loopne
mov
mov
test
pop
sub
mov
dec
dec
pop
xor
rcrl
jbe
jne
lret
es
das
lock
adc
mov
sub
inc
lret
mov
inc
add
aas
inc
cwtl
adc
inc
push
ja
mov
dec
xchg
sbb
mov
jg
mov
or
mov
xchg
cmp
icebp
lret
push
xor
pop
das
adc
aad
imul
xchg
xchg
in
mov
popa
lahf
jne
xchg
xchg
cmp
xor
ret
js
push
fsubrp
jmp
cmp
testb
pop
ret
push
shlb
out
xchg
add
jnp
mov
fscale
xchg
mov
mov
clc
subl
push
add
mov
push
hlt
adc
mov
dec
jbe
jge
pusha
push
or
out
jns
pop
cmpsb
loopne
mov
lock
rolb
lds
mov
sub
or
sahf
mov
ljmp
arpl
mov
jae
lcall
dec
int3
jnp
cltd
int
into
lds
das
loope
xchg
adc
cld
lahf
lods
mov
testl
outsb
xchg
push
push
sub
fcmove
mov
stos
cmp
fs
ja
movsl
mov
movsl
jecxz
pop
lret
stos
or
pop
fidivrl
ret
or
mov
into
dec
jmp
iret
repnz
sub
mov
mov
jecxz
or
jge
pop
dec
jl
or
cmp
cmp
in
push
cwtl
outsl
mov
pop
lcall
loope
scas
mov
arpl
push
jecxz
cmp
movsl
out
out
mov
add
inc
in
cmp
push
in
xor
stc
loope
cmpsb
loop
cs
stc
mov
cmpsl
or
cmp
outsb
or
outsb
nop
movb
fs
fistpl
cmp
scas
jo
sub
les
xchg
repnz
sbb
fbstp
cmp
dec
aas
in
push
outsb
sbb
mov
xlat
mov
cmp
cmp
mov
and
fdivrs
inc
test
andb
ret
cmovp
les
cmpsl
pop
cli
inc
xlat
mov
cmp
aaa
pop
sub
push
add
sub
stos
mov
adc
sub
cmp
lods
loopne
lret
and
fldcw
sahf
mov
sub
sbb
sub
insb
and
pop
mov
mov
clc
mov
dec
pop
mov
arpl
cltd
inc
sarl
jo
ja
sub
mov
sbb
stos
xor
mov
mov
mov
pop
adc
repz
xor
imul
xorl
outsl
aas
mov
imulb
testb
call
mov
add
loop
jne
cmp
notl
xchg
pop
cmpsl
loop
scas
fiadds
cmpsl
cld
in
mov
mov
daa
call
add
cmp
cltd
sub
je
mov
das
push
and
xor
mov
pop
cmp
xchg
adc
shrl
xchg
push
adc
std
fsubl
cmp
inc
xchg
pop
pop
and
jp
out
out
push
enter
cltd
cmp
mov
iret
xlat
pop
ss
xor
out
add
inc
sbb
dec
sbbl
or
imul
test
cmp
lret
xchg
jo
movsl
cmp
sub
mov
out
into
and
inc
mov
addr16
mov
loop
xchg
insb
ret
repnz
sbb
subl
and
pop
mov
fldcw
or
arpl
mov
fisubl
lahf
cmp
or
cld
testb
mov
inc
cli
test
dec
dec
mov
xchg
push
pop
daa
and
out
ss
inc
jg
mov
rcll
push
ja
out
xor
inc
mov
cmp
xchg
ret
out
stos
sbbb
shlb
mov
repz
dec
or
mov
mov
mov
aam
scas
xchg
adc
mov
std
add
aam
mov
cld
gs
iret
xchg
in
mov
hlt
test
clc
sub
aam
fists
aad
data16
dec
test
xchg
imull
mov
cmc
jnp
mov
xchg
scas
mov
jae
out
mull
adc
in
mov
or
jne
nop
mov
inc
mov
and
cs
bnd
loopne
cmp
adc
jmp
jmp
or
push
push
mov
add
int3
sub
nop
lea
imul
jcxz
or
daa
xor
mov
ljmp
fwait
push
dec
sti
loop
or
aas
or
mov
cmova
sub
and
sti
loopne
rclb
stos
mov
cmc
mov
ror
push
jecxz
pop
cmc
dec
xor
xor
cli
out
test
lret
xchg
or
daa
jl
push
rclb
ja
mov
cmp
cli
or
inc
xlat
enter
sbb
clc
push
and
xchg
adc
xchg
mov
fstpt
jp
and
popa
lcall
sbb
or
adc
or
push
sub
jae
out
cmp
xchg
inc
mov
add
fdivrp
inc
or
pop
test
push
jae
popa
jae
mov
lds
repnz
push
nop
and
mov
jb
jle
in
pop
cmc
sbb
dec
adcl
imul
sahf
inc
data16
xchg
xchg
mov
cmp
sahf
outsb
jp
jae
xlat
shl
pop
push
xor
xchg
or
sbbl
sub
call
lcall
pop
les
mov
fcmovbe
aas
enter
push
test
push
nop
into
lea
xchg
push
xchg
inc
pop
aad
or
cli
fisubrs
add
mov
in
xchg
sub
and
arpl
xchg
das
adc
mov
push
insl
sub
xchg
push
inc
and
into
inc
dec
sbb
pushf
mov
push
pushf
ret
sub
adc
add
and
sub
out
aaa
testl
inc
fdivrl
ffreep
xor
adc
xlat
push
sbb
mov
jo
lea
adc
adc
or
out
hlt
rorb
loopne
cli
pop
lea
or
insb
push
mov
call
jmp
fldcw
push
daa
jo
movups
fbstp
pop
mov
push
or
cmp
lahf
les
stc
xchg
mov
fnstenv
repnz
iret
stos
nop
xor
fwait
cmp
popf
xor
div
out
or
rcl
sub
pop
mov
mov
adcb
pop
je
clc
fisubs
je
idivl
pushf
aam
dec
int3
cmc
xchg
xor
cwtl
dec
jns
adc
push
sub
pmuludq
adc
xor
in
xor
std
movsb
sarb
or
jmp
test
push
cmc
nop
adc
int
push
clc
test
inc
or
shrb
shl
pop
es
pop
xor
mov
bndstx
andl
test
push
pop
or
hlt
push
cmpsl
je
xchg
mov
es
jb
fwait
dec
clc
cmp
xchg
xor
jbe
fcoml
cmpsl
sbb
test
test
sub
pop
push
std
pushf
leave
gs
inc
je
and
dec
pop
inc
leave
adc
dec
mov
out
add
das
clc
rcrb
lds
out
repnz
mov
cmp
sub
insb
movsl
mov
sub
dec
stos
push
xchg
sbb
push
adc
loopne
cmp
popa
xchg
sub
dec
pop
fucompp
stos
xor
js
sub
fisttps
cmp
mov
sti
add
adc
mov
fdivrl
lock
cmp
inc
and
mov
fs
xchg
add
dec
sbb
dec
or
cmp
lock
mov
nop
loope
mov
push
imul
pop
fimuls
enter
addr16
push
mov
add
fidivrl
push
js
jnp
stc
fiadds
dec
test
sbbb
pop
rcr
iret
pusha
cwtl
aas
push
pop
dec
in
scas
xor
xor
jg
stos
imul
fisubrs
ja
mov
pop
mov
jns
add
mov
stos
jecxz
pop
add
push
mov
lock
ret
call
xor
jno
in
int3
cld
dec
jb
nop
gs
dec
jne
fisttpll
jge
test
cwtl
sub
dec
in
icebp
mov
mov
jb
push
call
xchg
or
jge
jae
add
jmp
xchg
push
xchg
das
sub
jg
jmp
in
jmp
adc
mov
ss
mov
dec
rclb
repnz
shrb
lods
rol
bound
lret
inc
pop
xor
sbb
xchg
inc
add
mov
adc
nop
jg
pop
pop
add
jp
imul
or
andb
pop
sti
cmpsb
out
adc
xchg
xor
jle
inc
or
nop
jmp
hlt
cwtl
daa
jge
dec
call
mov
inc
inc
jns
and
scas
sub
ret
pop
dec
mov
pop
cmp
dec
mov
cmp
xchg
pop
adc
lods
cmp
inc
jmp
mov
movsb
icebp
test
and
xchg
dec
arpl
xor
jmp
sbb
aad
inc
add
push
mov
pop
les
iret
cld
mov
pop
cmp
fcmovb
xor
mov
in
pop
add
sbb
or
xor
lret
stc
ja
out
lods
sub
mov
mov
xchg
and
sahf
cmp
jae
call
mulb
ja
je
or
pop
jb
lahf
pop
imul
add
daa
data16
dec
mov
scas
push
xchg
insb
mov
icebp
or
mov
inc
mov
sahf
sar
jl
adc
test
dec
hlt
ja
int
pop
iret
stos
mov
insl
sbb
push
aaa
lcall
push
mov
icebp
out
aam
incb
jnp
pand
xchg
sbbb
jl
sbb
fs
or
rol
repz
xor
xchg
stc
pop
inc
jg
inc
in
fnsave
add
cld
ja
int3
gs
sub
mov
test
testb
call
out
mov
ljmp
sub
mov
jae
push
mov
outsl
pop
or
ss
lahf
cmp
push
test
repnz
sbb
icebp
push
fsubs
loop
add
orl
in
daa
addl
add
bound
mov
mov
lods
call
inc
je
nop
scas
sbb
iret
in
mov
movsl
sbb
and
sbb
sbb
sbb
xchg
jno
xchg
int3
push
dec
adc
je
pop
xchg
jg
and
and
mov
xor
in
les
push
sbb
call
mov
adc
mov
mov
and
aaa
in
and
mov
sub
sahf
insb
popaw
sbb
icebp
aas
or
lret
pop
rclb
push
sbb
call
lods
popf
cmp
movsl
adc
int3
test
das
int3
xchg
lret
in
and
repz
xor
les
mov
mov
sbbb
dec
fneni(8087
cmpsl
sub
or
clc
sub
dec
outsb
enter
mov
sbbl
test
jbe
insl
mov
pop
fs
jne
pushw
cli
cwtl
inc
fwait
inc
jp
xor
dec
xchg
xacquire
lcall
add
loopne
dec
add
lds
push
mov
sub
bound
dec
fistpl
dec
and
int
jns
dec
xchg
cmc
sub
fbstp
jmp
add
aad
sahf
jbe
ret
jg
stc
sub
push
adc
pop
fs
cli
jmp
es
jns
cld
aam
jne
sbb
in
xchg
ljmp
enter
xchg
jle
loopne
movsb
fstl
out
es
out
sbb
out
imul
xor
mov
and
adc
jmp
add
pop
jle
mov
sar
int
jge
pop
pop
xor
js
lahf
adc
add
sub
sbbl
adc
jnp
js
je
inc
inc
fsts
sub
ljmp
sbb
mov
dec
or
loope
and
cmp
sub
daa
mov
xchg
pop
mov
dec
add
add
movsl
xor
adc
mov
popw
dec
xchg
cmc
and
or
mov
mov
mov
xor
into
xor
insl
sub
loop
jmp
je
mov
pop
jle
or
sub
xchg
stos
int
and
pop
pop
sbb
loope
popa
ret
add
inc
int
push
or
mov
popf
add
push
and
pop
rcr
pop
or
fcmovbe
pop
or
out
int3
std
jns
cs
sub
or
xchg
and
std
je
jne
jae
xchg
jbe
sbb
dec
jne
cmp
sbb
pop
mov
insb
mov
xor
inc
pop
mov
mov
dec
arpl
xchg
push
scas
xchg
insb
push
rcrb
aam
fcmovb
test
and
decl
in
dec
into
scas
sbb
faddl
dec
xchg
enter
mov
sub
sub
or
cmp
pop
cmp
aam
lock
cmp
les
mov
cltd
fdivr
aad
xor
mov
xlat
pop
lods
inc
sub
jg
pop
icebp
add
and
adc
clc
add
in
mov
add
out
dec
push
inc
push
and
imul
sub
sub
xor
or
push
push
les
mov
ficompl
dec
pop
inc
sarl
shr
push
add
push
fmuls
jp
test
jl
bound
inc
inc
ljmp
mov
add
jp
rolb
daa
cmpl
mov
xor
and
loopne
push
push
loopne
shll
scas
jbe
sub
inc
dec
data16
push
jne
adc
mov
into
xchg
shll
sub
jno
xor
jl
cmp
inc
subl
lea
loop
mov
push
inc
mov
dec
in
xchg
xchg
ret
bound
xor
inc
sti
and
xor
pop
imul
mov
dec
push
cmp
fwait
mov
aam
addr16
xchg
push
data16
xchg
mov
mov
and
mov
in
dec
add
out
inc
loop
std
std
arpl
xchg
cs
mov
sub
pop
xchg
or
loopne
xchg
lcall
sbb
stc
jmp
push
addl
negb
xchg
out
out
ja
cltd
add
daa
fwait
push
mov
adc
je
xchg
jp
inc
cmc
xchg
mov
lcall
rclb
js
sub
popf
stos
adc
lods
insl
inc
push
push
inc
out
add
stos
andb
pusha
dec
es
pop
or
cmpsl
pop
mov
push
in
mov
sbb
pop
xorl
jnp
inc
aas
cmp
test
xor
push
fwait
mov
inc
outsl
push
in
inc
int3
sub
mov
and
lods
fwait
sub
hlt
xor
mov
fisttpl
inc
daa
clc
mov
push
pop
mov
jo
mov
popf
fisubl
aam
push
scas
jbe
fs
ret
push
data16
or
xlat
imul
sub
je
mov
mov
mov
leave
xlat
in
add
out
aaa
pop
dec
push
inc
mov
jge
cmpsl
xchg
xchg
dec
sbb
fwait
inc
mov
out
push
std
fmuls
aas
loop
add
sub
es
int
xorb
pop
ds
jg
ret
inc
jae
add
sbb
scas
jo
xchg
add
adc
pop
mov
pop
inc
mov
dec
loop
mov
mov
and
lea
and
cltd
into
dec
leave
adc
gs
push
in
popf
jne
xor
xchg
and
shlb
sbb
adc
test
popa
test
out
adc
cmp
mov
cmp
and
mov
lock
fsubl
rcl
iret
add
loopne
xchg
mov
or
add
cwtl
jnp
mov
test
xor
stos
cmp
out
mov
es
mov
fwait
mov
push
fnstcw
sbb
xor
xor
int
call
bound
pop
iret
jecxz
fistl
jae
mov
ljmp
gs
add
iret
cmpsb
dec
fiaddl
jae
jns
pop
inc
dec
stos
mov
aad
or
sub
xchg
cmp
jecxz
sahf
sbbb
int3
rolb
pop
popf
push
sbb
popf
cli
incb
ds
lahf
xor
les
inc
jns
xchg
mov
in
or
in
xor
mov
stos
movsb
cmp
rcr
mov
lods
jns
das
out
cmp
jae
dec
repnz
xchg
push
dec
push
sub
mov
sub
add
add
and
test
mov
fmull
in
mov
pop
cmp
xor
fs
cmp
cli
push
push
push
mov
push
repnz
mov
das
xor
inc
mov
mov
movsb
xlat
push
inc
leave
hlt
fisttpl
pop
xchg
push
xor
es
aam
insb
test
xchg
jmp
adc
les
pop
sub
pop
and
cwtl
clc
push
push
xor
rcrl
jae
insb
jno
mov
cltd
add
lret
mov
xchg
jg
mov
mov
push
pop
in
cmp
lods
adc
lret
pop
ja
mov
fwait
jo
std
and
jle
lea
mov
mov
into
lret
cmpsb
xor
mov
ret
ret
fcompl
mov
test
in
mov
mov
test
pop
or
mov
in
pop
out
jae
in
ljmp
dec
enter
fdivr
xchg
inc
jl
mov
sub
test
sub
xchg
adc
fdivr
mov
gs
push
imul
outsl
adc
dec
push
mov
movsb
mov
outsb
or
incb
loopne
ds
addl
in
pushf
lods
or
inc
out
push
jle
inc
pushf
loope
xchg
dec
pusha
lods
out
stc
inc
jmp
mov
mov
pop
and
adc
gs
or
sbb
cs
gs
push
es
push
mov
or
aad
fldt
lock
push
lea
lcall
imull
lea
jle
fsubl
nop
out
cli
loope
pop
into
movsb
push
leave
imul
aas
cmp
andb
test
cmp
adc
imul
pop
dec
sbb
sub
icebp
adc
inc
loopne
push
cld
mov
lret
and
mov
pushf
add
scas
mov
clc
insl
cmp
adc
stos
sub
aaa
or
mov
ja
outsb
push
push
jmp
fwait
dec
fisubl
or
imul
sub
pushf
std
push
negl
jg
adc
clc
sub
jnp
faddp
push
xchg
push
xchg
jmp
push
and
lahf
shlb
inc
das
mov
loop
dec
xchg
xor
jnp
int
xor
dec
inc
rcll
or
scas
aaa
and
add
insb
xor
rcrl
pusha
xor
pop
fldenv
inc
jl
sub
das
sarl
mov
jo
scas
sub
std
aam
jg
shrb
pop
mov
push
pop
mov
cmp
and
scas
lods
pop
adc
push
jle
mov
call
movsl
sub
imul
popf
adc
xchg
adc
sbb
xchg
inc
subb
dec
subl
femms
popf
inc
sub
loopne,pt
or
ds
lock
fiaddl
in
out
or
in
lods
popa
dec
lahf
gs
outsl
mov
xor
jp
sbb
xlat
lahf
sub
jae
dec
icebp
inc
cs
decl
sub
pop
test
xchg
js
jb
in
fsin
push
psrld
mov
jmp
xchg
mov
add
lcall
mov
jmp
outsb
mov
mov
xlat
outsb
xchg
jmp
popaw
pushf
inc
sub
cmpsb
leavew
sub
in
mov
shrl
sbb
shlb
mull
enter
push
daa
adc
or
inc
or
fldl
pop
es
cmp
rclb
pop
xor
insl
std
inc
mov
lock
dec
pusha
adc
xchg
popl
sub
add
mov
cmp
xlat
int3
fists
pop
mov
sahf
fwait
sbb
inc
scas
mov
nop
add
push
inc
jl
xchg
and
insl
popa
test
divb
xchg
je
mov
sahf
in
out
loopne
pop
ss
adc
outsb
ja
cmp
dec
insb
icebp
dec
dec
jecxz
mov
stos
mov
decl
jle
push
xchg
mov
pusha
decb
and
jmp
mov
and
add
inc
fcomps
and
les
rcl
cmpsl
cltd
fsubp
push
mov
sub
dec
inc
inc
xadd
xor
enter
or
call
push
mov
enter
xchg
lcall
adc
loopne
int3
or
call
out
push
and
lods
push
xchg
dec
push
mov
int3
cld
mov
sbb
call
outsl
pop
xor
mov
loop
out
add
sub
sub
fldpi
je
push
out
sub
and
cs
xchg
xor
adc
push
and
ret
ljmp
inc
xchg
icebp
push
xchg
xor
scas
mov
inc
push
bound
cmp
dec
xor
adc
add
bswap
cmpb
lret
in
jmp
outsl
iret
or
out
xor
iret
jmp
pop
push
imul
sub
push
sub
outsb
stc
out
add
push
sub
dec
mov
lret
or
adc
hlt
fs
sub
nop
mov
fists
rorb
sub
in
or
xor
push
sbbl
sub
pop
sbb
mov
in
sub
xchg
push
mov
sub
mov
or
insl
sub
ret
push
out
pop
jl
push
aaa
std
movsl
add
adc
dec
loop
shrb
test
mov
hlt
fs
mov
push
test
jbe
popf
push
pop
cmp
je
cmpsb
ficompl
shlb
pushf
in
outsb
cmp
jg,pn
inc
arpl
test
movsl
sub
push
shll
and
push
pushf
ret
lea
cld
cmpsl
lock
xchg
scas
pusha
and
or
mov
mov
scas
mov
scas
fstl
inc
jecxz
push
in
out
cmp
popf
mov
inc
dec
icebp
inc
adc
push
stc
js
pusha
dec
mov
mov
and
xor
daa
fcoms
push
adc
sub
and
xor
rolb
iretw
aaa
mov
paddd
jmp
inc
add
push
outsb
inc
cltd
pop
lods
outsb
cmc
lret
je
adc
xchg
jo
cltd
jmp
mov
imul
xchg
repz
cwtl
nop
test
cwtl
sbb
hlt
and
mov
sbb
scas
dec
cmp
dec
mov
nop
jecxz
xchg
int
movsb
cmp
rcrl
ficompl
scas
out
mov
sub
mov
call
hlt
dec
cmp
and
and
out
adc
pop
jle
leave
xchg
xchg
inc
shrd
lds
push
push
mov
cmpsl
and
push
sub
pusha
shl
out
std
mov
xor
sub
pop
dec
and
stos
mov
adc
inc
mov
jnp
pusha
mov
push
jl
push
and
mov
aad
movsl
cwtl
or
outsl
into
adc
mov
adc
dec
cmc
aaa
lods
sahf
push
jb
sub
stos
push
sbb
cs
lret
sbb
daa
inc
out
jbe
push
inc
test
stos
fiadds
inc
dec
push
jne
popf
int3
pop
push
xor
ss
sbb
xchg
jg
push
pop
addr16
inc
sbb
sbb
push
sbb
xlat
push
mov
out
sbb
int
mov
fidivs
addr16
add
pop
lds
xor
jbe
out
add
add
add
pop
pop
stc
mov
stc
push
aam
fnsave
das
push
adc
push
iret
lahf
out
mov
xchg
xchg
push
jne
bound
mov
repz
jo
pop
dec
aam
or
sti
out
cmp
lcall
icebp
or
add
inc
popa
xchg
ret
outsl
mov
cmpsl
arpl
xor
cltd
fstpl
mov
inc
inc
lods
mov
jae
xchg
pop
dec
and
cmp
cmp
push
addr16
psubusb
into
dec
pop
or
sahf
lret
or
mov
das
push
jp
and
fadd
jle
inc
rcll
scas
mov
inc
into
lret
mov
or
mov
loopne
lods
in
pop
mov
lods
fldenv
jle
and
pop
dec
adc
and
dec
jae
sbb
xor
ja
dec
adc
xchg
xor
jns
dec
sbb
push
push
sbbb
fdiv
and
jmp
push
pop
xor
negb
xchg
lea
mov
cmp
fdivrs
lea
adc
dec
outsb
push
jmp
ljmp
scas
xorb
and
test
xchg
imul
sarl
push
pop
fistpll
pop
pop
outsb
pop
imul
sbb
and
jo
inc
push
xor
lcall
into
out
sbb
mov
sbb
inc
cmp
outsb
call
mov
ret
sub
out
fsubrs
add
rorl
mov
aaa
fists
and
aad
sbb
test
js
in
mov
test
push
cmp
ds
lods
ret
mov
fwait
rorb
flds
jp
cli
pop
xchg
dec
sbb
shl
sbb
dec
dec
mov
cltd
ss
mov
or
mov
cmp
lods
scas
inc
mov
ss
int3
out
sbb
ja
inc
cli
pop
es
or
lea
cld
lret
movsb
mov
not
sbb
fidivrs
lahf
xchg
mov
xor
xor
stos
push
cmp
call
jmp
imul
cmp
in
mov
xor
out
jb
sbb
mov
dec
mul
pop
ljmp
pop
mov
ja
fstpl
xchg
arpl
sahf
pusha
jge
movsl
clc
add
sbb
xchg
push
add
test
xchg
adc
icebp
push
jo
or
js
sub
fwait
and
cmp
xor
jbe
mov
iret
mov
pop
ret
cmc
mov
sbb
or
adc
xchg
iret
mov
lret
mov
xchg
pop
sahf
ljmp
ret
mov
or
xor
xchg
push
pop
jmp
lds
pop
mov
lods
mov
les
mov
or
pushf
xchg
sti
dec
pop
mov
sub
fsubrl
in
inc
imul
dec
nop
inc
in
ds
cs
out
outsb
out
xor
mov
jns
cwtl
adc
dec
mov
icebp
cmp
or
bound
mov
out
nop
xchg
into
mov
mov
enter
jle
orl
ja
push
xorl
pop
jmp
addr16
push
popa
roll
lret
inc
nop
shll
inc
cmp
mov
add
cmp
daa
in
xor
mov
and
int
rcll
push
or
es
jl
dec
mov
lcall
pop
mov
adc
movsb
test
fwait
mov
xchg
mov
mov
sti
push
ss
cmp
fildl
cmc
pop
inc
in
test
xlat
daa
push
insb
out
jmp
pop
inc
ds
dec
cmpsl
fcmovb
fidivs
and
lret
dec
outsl
mov
xchg
sbb
or
mov
dec
ss
xchg
jg
mov
xor
out
mov
xor
cmp
dec
push
daa
cmpsb
adc
loopne
mov
or
out
or
inc
inc
mov
jmp
push
jecxz
mov
test
stos
es
lea
pop
jecxz
insl
test
popa
add
sub
pop
js
call
dec
mov
mov
out
jno
mov
and
jno
push
sub
addr16
out
or
je
xchg
mov
cld
pop
mov
lret
in
or
cmpsl
sbb
mov
testb
pop
test
mov
xchg
sbbl
fadd
push
sub
jmp
cmpsl
enter
mov
ficoms
mov
enter
push
push
xchg
cld
inc
cmpb
push
pusha
inc
dec
rolb
adc
ds
xchg
inc
call
addl
into
pushf
mov
push
pop
popf
in
xchg
add
enter
pop
inc
push
mov
cmp
and
push
lcall
mov
cmpsb
dec
aam
loopne
push
push
stos
rcl
sbb
cmp
bound
adc
inc
jle
inc
outsl
ljmp
jecxz
and
stos
sub
fidivs
mov
cmp
iretw
xchg
cwtl
cmpsb
shll
test
loop
mov
pop
mov
shlb
push
lret
pop
movsl
xor
test
ss
xlat
nop
imul
mov
pop
mov
mov
adc
leave
loopne
shlb
pop
jbe
sarb
mov
loope
jmp
pop
dec
mov
ss
cwtl
dec
mov
cmp
jmp
add
sar
push
mov
inc
outsb
sbb
and
pusha
jg
outsl
in
xchg
xchg
mov
int
cmpsl
dec
inc
insb
ljmp
aas
dec
cmp
mov
fdivl
int3
enter
rorl
pop
lret
mov
addr16
rcrl
and
mov
sub
jp
jbe
mov
out
adcb
fdivs
into
cmp
lock
icebp
lcall
das
fwait
mov
lahf
clc
jge
sbb
push
sub
inc
lds
insl
gs
fidivrl
lret
nop
pop
push
pusha
popa
insb
dec
pop
xorb
add
push
adc
fistps
lea
pop
lods
mov
addr16
mov
insb
adc
std
pop
sbb
js
mov
bound
lock
pop
mov
les
sub
pop
cmp
imul
scas
les
sub
sub
dec
push
xor
mov
xlat
outsb
jle
jmp
sub
ret
push
pusha
bound
in
aad
sbb
xchg
addr16
gs
pop
repnz
cltd
mov
sbb
push
mov
ds
popf
jmp
add
ds
jne
test
or
sahf
mov
sub
inc
lcall
jb
mov
fbld
ja
inc
lods
bound
fcmovnu
insb
mov
movsb
push
lea
lahf
sbb
add
adc
shlb
sbbl
mov
in
mov
popf
cmp
fldl
icebp
mov
pop
xchg
xchg
bound
adcb
imul
mov
rcl
lock
ds
cltd
out
mov
das
stc
jg
jb
cmpsl
lret
xor
testb
or
xchg
scas
sbb
sbb
adc
mov
imul
lods
xchg
sbb
push
sbb
xlat
xchg
xor
xchg
jle
and
cmp
inc
push
dec
ds
or
sub
das
push
push
sti
inc
mov
out
stc
ds
lahf
push
pop
shlb
adc
out
mov
outsb
inc
push
addr16
xor
adc
inc
lea
rclb
into
xor
daa
les
dec
push
mov
std
xchg
aaa
iret
cmc
test
test
pop
sub
js
aas
sub
call
inc
push
iret
mov
mov
repz
mov
sbb
sti
mov
mov
sbb
outsb
ret
mov
dec
adc
sbb
pop
pop
adc
fcoml
pop
mov
mov
sbb
loop
sahf
nop
and
addb
dec
test
or
cmc
and
test
punpckldq
inc
mov
cmp
iret
xor
lret
push
test
int
inc
and
sbb
add
stos
dec
inc
adc
clc
fwait
mov
testl
call
lods
mov
dec
mov
cmp
and
sbb
call
js
test
mov
aas
movsl
fstl
mov
mov
sub
stos
in
stc
sub
sbbb
imul
mov
sub
mov
out
mov
mov
mov
inc
sbb
adc
shll
mov
sub
not
mov
dec
mov
dec
lods
leave
sub
jmp
xor
jae
lahf
addr16
xchg
repz
sub
pop
pop
or
mov
stos
addl
pop
pop
push
in
push
mov
das
lock
loope
repz
push
xor
mov
jnp
mov
lret
loop
mov
pop
movsb
aas
mov
in
jl
dec
push
lret
or
mov
andl
push
clc
pop
add
lea
out
cmp
andb
or
push
repnz
incb
pop
std
ror
lret
imul
and
insb
flds
push
jl
imul
jmp
repz
aaa
adc
lods
int
pop
inc
add
cmc
scas
cmp
xor
icebp
xor
cmp
push
mov
fisubl
leave
ss
es
test
pop
push
stos
insb
stc
add
sarl
sahf
add
mov
out
ja
outsb
out
cmpl
out
sbb
iret
scas
fchs
xchg
sub
cmpsl
inc
mov
cmp
sub
and
add
les
loope
and
cmpsl
int
das
test
repnz
fldenv
sub
mov
pop
rcll
shll
out
inc
mov
lds
xchg
xlat
sbb
mov
movsl
and
movsb
push
lret
ja
push
add
je
mov
xchg
and
dec
stc
push
inc
dec
sub
loopne
jno
fsubs
sub
hlt
xor
mov
dec
aad
or
xchg
xor
mov
mov
clc
std
in
cwtl
ljmp
scas
inc
add
bound
fists
test
jns
out
adc
cwtl
lahf
or
sub
cmc
outsl
outsl
fldl
loopne
pop
in
test
jmp
xchg
je
movsl
xor
adc
iret
in
ja
jp
insb
cmp
jb
lret
xchg
cltd
sbb
popa
repz
testb
pop
or
add
xchg
enter
call
jnp
dec
mov
push
or
adc
cmpsw
pop
stos
push
call
adc
mov
test
lahf
xor
dec
repz
ja,pt
jae
leave
mov
inc
loopne
push
fucomi
or
mov
push
notb
sbb
xchg
or
nop
pop
out
int
test
fldenv
sbbb
icebp
hlt
call
cmp
aas
push
mov
adc
ss
push
aas
sarl
mov
notl
inc
sub
mov
das
lea
pop
nop
std
or
push
sbb
cmp
loope
lahf
adc
insl
pop
push
test
cmp
mov
cs
lahf
push
cld
sub
lret
mov
mov
push
or
mov
movsl
data16
in
push
jmp
xlat
xchg
lahf
inc
adc
shlb
dec
lods
add
sub
loopne
aad
pop
push
insl
je
adc
push
je
fisubrs
scas
aas
push
out
jecxz
mov
lret
fistl
cltd
xchg
xor
xchg
xor
jbe
enter
pop
inc
movntps
mov
ja
pushl
pop
adc
cmp
push
fidivrl
mov
and
jbe
jecxz
jecxz
fstl
and
fimull
sar
movsb
xchg
repnz
fdivs
outsl
pop
cltd
mov
pop
mov
add
inc
fisubs
and
je
xchg
or
test
or
insl
cltd
adc
push
push
xor
push
add
sub
js
cmpsl
je
jb
push
xchg
pop
or
shll
jg
hlt
sbb
ret
jp
or
mov
jbe
inc
xchg
inc
pop
mov
or
xchg
and
xor
sbb
jno
jno
adc
jmp
cmp
and
cltd
pop
jno
jl
out
retw
loop
xchg
in
ljmp
fsubrl
mov
xchg
lock
fs
popa
aaa
sarb
sbb
and
loopne
nop
mov
pop
fldt
iret
cmc
movsb
outsl
mov
orb
outsb
inc
negb
js
mov
das
dec
movsb
rcll
mov
push
rorl
jecxz
mov
mov
scas
lods
addb
adc
pop
xchg
mov
mov
xchg
pushf
insl
imul
push
incl
or
mov
test
cmc
icebp
or
negl
repz
ror
xchg
xor
pop
add
imull
xchg
mov
mov
jg
inc
or
sbbl
mov
sub
mov
scas
bound
add
add
sbb
sbb
pushf
sbb
jmp
mov
push
cmp
mov
adc
cmpb
out
inc
and
add
mov
inc
test
insb
and
ret
jecxz
inc
push
sbb
pop
sahf
stos
or
mov
mov
mov
adc
cmpsb
mov
sub
mov
or
addr16
mov
repz
add
adc
andb
cmp
push
ljmp
push
mov
mov
jo,pt
leave
jae,pt
jp
cld
push
aaa
lret
dec
jns
mov
add
scas
sahf
mov
cmp
fs
lods
sbbb
fildll
push
stos
outsb
vcvtdq2pd
add
or
outsl
daa
push
xchg
xor
jle
scas
aad
cmc
mov
or
loopne
sbb
or
test
inc
mov
mov
and
repz
lock
stc
inc
mov
js
adc
mov
leave
sub
inc
dec
xchg
cmp
out
aad
cltd
pop
mov
mov
lock
enter
xchg
lcall
into
sbb
cmpsl
add
mov
jae
in
cmp
fwait
and
fwait
cmp
fs
test
sahf
mov
push
inc
es
cltd
icebp
sbb
mov
dec
and
loop
das
mov
and
test
mov
adc
stos
pop
jno
dec
stc
mov
cltd
out
or
xor
ss
pusha
fcomp
adc
inc
sar
stc
jns
ret
sbb
cmp
fldcw
aad
fcomps
dec
add
pop
inc
and
or
sbb
sti
out
push
shll
rclb
aad
nop
add
rcll
aas
into
fbld
out
pop
test
jnp
xor
push
popf
iret
cmp
daa
push
js
imul
sub
int3
stos
mov
jg
js
lods
mov
inc
sbb
jnp
sbb
adc
negb
clc
xor
push
mov
mov
dec
bnd
inc
cmpl
push
lods
scas
das
inc
add
mov
mov
pop
testl
mov
adc
jl
xchg
lods
sahf
cmpsw
negb
roll
jp
jmp
mov
fstl
sti
sub
cmc
mov
xchg
lahf
mov
testl
and
fmull
mov
and
imul
adc
inc
inc
sbb
cmp
fnstsw
inc
sbb
mov
cs
mov
dec
sbb
mov
popf
fwait
out
ss
sar
add
js
imul
nop
je
mov
loopne
inc
adc
std
jae
loop
push
mov
paddw
in
adc
adc
add
repnz
add
pop
mov
fsubrl
arpl
inc
in
stc
lock
ss
and
xchg
std
lods
cli
and
outsl
push
push
mov
sbb
add
movsb
inc
movsl
sub
mov
add
leave
les
sbb
mov
out
shll
adc
mov
out
scas
cmp
mov
xor
dec
lcall
iret
add
outsl
cmp
dec
adc
xor
pop
and
psubsb
mov
and
addr16
out
add
mov
ss
xchg
hlt
jae
xlat
add
sub
adc
xor
mov
jecxz
imulb
mov
scas
sub
scas
cmp
faddp
xchg
inc
sub
push
jle
jae
in
cwtl
and
push
std
xlat
cmc
ss
mov
adc
mov
add
mov
xchg
pop
inc
sbb
je
pop
fnstsw
pop
test
xchg
dec
mov
loope
cmp
test
xchg
lock
sub
mov
cli
inc
mov
and
and
and
push
cwtl
lret
rclb
cmpb
jg
mov
push
pop
add
pop
dec
leave
push
unpcklps
mov
mov
xchg
jp
popf
scas
insl
fxch
arpl
dec
mov
shl
leave
mov
enter
jb
arpl
sub
mov
push
test
jge
pop
pop
pushf
jl
clc
xchg
repz
stc
or
shrb
andb
mov
ret
pop
outsl
cmp
jno
inc
test
xchg
aam
icebp
cmc
fstpt
add
addb
jbe
imul
jno
mov
mov
adc
mov
scas
pusha
out
push
dec
outsb
and
lcall
push
or
inc
into
push
dec
test
mov
out
aam
inc
lcall
pop
inc
cltd
jmp
stos
pop
dec
outsb
lret
mov
mov
jnp
negl
rcll
rclb
mov
js
lret
pop
mulb
test
xor
pop
jmp
negl
push
lds
nop
jbe
xchg
mov
je
pop
mov
data16
dec
push
in
lock
bound
cmp
outsl
mov
inc
jg
mov
cmpsb
adc
mov
jns
arpl
dec
int3
pushl
jne
dec
jge
iret
jge
scas
divb
push
xchg
sti
xor
div
jge
subb
and
mov
fstpt
push
adc
pop
adc
xchg
lahf
aas
dec
xor
mov
lods
ljmp
std
or
aas
imull
push
cld
enter
lret
adc
xchg
pop
cmpsb
mov
adc
push
dec
jne
iret
insb
and
scas
enter
pop
test
fstl
test
ss
cs
ja
outsb
test
sub
lods
or
popa
xchg
std
adc
jmp
popf
imul
test
ja
pop
test
sub
jb
fwait
je
xor
and
bound
enter
es
adc
mov
loope
decl
push
push
test
jae
jl
xchg
test
nop
push
fiadds
mov
jecxz
cmp
mov
xor
mov
mov
fs
das
das
adc
xor
lods
outsl
addr16
dec
and
hlt
daa
cmpsb
mov
sbb
sahf
cwtl
jmp
aaa
push
and
mov
pop
mov
daa
xchg
fcmovu
cmp
sub
insl
dec
push
clc
mov
daa
mov
mov
push
cmc
adc
jl
mov
pop
mov
in
insb
scas
adc
inc
sub
fsub
xchg
scas
std
mov
clc
cmp
pop
jge
sub
and
push
cmp
lods
mov
inc
ljmp
ljmp
jge
outsb
mov
xchg
repnz
jmp
lock
mov
add
pop
adc
mov
call
mov
sbb
mov
std
jne
jnp
scas
out
cltd
push
outsl
jg
mov
inc
shll
pusha
movsb
mov
out
push
ret
fst
push
sub
cltd
out
cmc
mov
mov
sub
mov
mov
xorl
and
mov
push
inc
aad
hlt
mov
inc
mov
fsub
jo
mull
scas
cmpsb
je
in
scas
pop
in
pop
idivl
xchg
pop
mov
cmp
into
sbb
lahf
jne
or
out
pushf
dec
std
pushf
aad
cmp
ljmp
cs
and
int3
inc
test
adc
pop
jb
adc
push
and
notb
lret
and
cmp
xor
add
add
and
loopne
add
sarl
xchg
xor
sbb
pop
enter
repz
sub
icebp
pusha
or
lcall
imul
mov
xchg
divb
dec
xchg
jp
mov
xchg
cwtl
cmp
divb
setl
sbb
or
and
mov
dec
inc
inc
inc
popf
mov
sub
and
adc
sahf
add
cmpl
arpl
mov
push
inc
insb
decb
fcompl
dec
add
nop
or
dec
xchg
mov
xchg
push
push
xor
add
dec
push
pop
adc
push
sub
mov
mov
sub
hlt
das
pushf
mov
adc
outsb
loop
push
sub
int3
fcomp
fstpl
out
in
pop
les
mov
pop
adc
adc
call
xor
mov
scas
dec
stos
mov
pop
aam
jmp
sti
sub
add
jg
mov
mov
rorl
jnp
pop
push
fs
xor
or
fidivl
xchg
adc
dec
fdiv
sti
add
mov
leave
mov
in
add
mov
ja
pop
push
adc
out
pop
inc
stc
pop
out
xorb
addb
dec
subl
dec
and
test
out
sbb
mov
nop
lahf
push
pusha
and
es
adc
and
jg
dec
mov
pop
pop
sti
xchg
push
lods
jb
cmp
test
into
mov
sub
aam
xor
mov
out
xchg
clc
imul
jo
scas
mov
sbb
cmp
mov
lret
or
aas
arpl
sub
lcall
outsb
fdivr
and
add
pop
mov
stos
call
adc
adcb
sti
pop
xchg
out
cmp
std
xchg
test
in
dec
push
jno
dec
stos
lods
mov
adc
repz
cmp
fisttpl
insb
movsl
fcoms
dec
xchg
mov
mov
mov
test
inc
clc
pushf
scas
jl
in
sbb
daa
push
popl
jp
ljmp
or
jne
sahf
outsl
addr16
dec
ret
bound
sti
or
and
icebp
mov
xor
or
xor
fcoms
popa
xor
mov
daa
adc
mov
push
xlat
imul
sbb
outsl
xor
mov
or
add
scas
leave
xlat
push
and
fidivl
inc
inc
lret
inc
mov
jnp
xchg
push
clc
add
iret
out
outsb
unpcklps
mov
lods
cmc
jb
pop
cmpsl
outsb
rcl
add
adc
jmp
je
aam
dec
pusha
or
in
sub
std
loopne
cld
je
andl
sub
les
xor
mov
int
inc
xlat
xlat
xor
arpl
lods
pushf
imul
adc
jno
in
ja
xor
in
leave
sarb
or
mov
mov
xchg
pop
add
in
and
push
test
mov
outsl
xor
or
cmp
xchg
sub
imul
loopne
adc
xor
add
xor
cltd
add
sahf
cmp
lods
out
in
adcb
jae
cmp
scas
fbstp
out
and
lea
in
js
inc
jnp
mov
and
in
lock
push
enter
xor
jae
data16
push
imul
xchg
in
pop
scas
shlb
xchg
mov
hlt
pop
in
ret
sahf
jl
add
pop
ja
scas
adc
mov
cmpsb
push
std
test
pop
sub
pop
mull
test
mov
push
shr
frstor
leave
shr
mov
cmpb
data16
push
repnz
pop
adc
sbb
pop
repz
mov
jl
and
mov
mov
daa
mov
in
addr16
jno
xchg
push
pop
mov
xor
mov
mov
test
fcmovb
jae
xchg
lods
jmp
rcll
sbb
cmp
into
je
or
jp
push
stos
adc
sbb
mov
or
sbb
cmpsb
mov
xor
mov
push
mov
jno
mov
or
inc
dec
or
ret
imul
ja
xor
pop
jo
push
call
adc
stc
stc
scas
stos
adc
scas
inc
inc
ss
xchg
fstpt
scas
gs
sbb
sbb
cli
jae
int
pop
das
and
pop
pop
repz
in
imul
fldl
jo
das
jecxz
imul
push
cmp
test
in
pop
mov
cs
mov
jno
xor
loope
or
loope
rcrl
inc
sbb
cmc
cmpsl
outsb
dec
sub
sbb
enter
inc
imul
out
xorl
jae
cli
rcll
push
bound
icebp
cmp
popa
popa
xlat
js
test
xor
and
ret
loope
enter
ja
xor
mov
jmp
pop
in
mov
cmpl
ret
decl
dec
aam
subb
imul
cld
icebp
es
pop
mov
mov
or
dec
sub
cmpsl
mov
fisubrs
addr16
or
outsl
cmp
add
mov
jmp
in
test
je
cmp
sarb
or
push
cmp
mov
add
sub
and
mov
jecxz,pn
test
and
test
jns
es
movsl
rcll
mov
mov
lock
add
sub
sti
pop
lcall
imul
cld
push
scas
daa
or
fildll
xchg
mov
hlt
sub
mov
out
ljmp
pusha
mov
mov
and
mov
xchg
push
loop
mov
fwait
dec
call
outsb
je
mov
mov
sbb
mov
or
and
insl
dec
cmp
shr
xlat
shlb
or
repz
mov
pop
imul
sub
pop
lea
push
xchg
icebp
mov
or
mov
test
clc
idiv
mov
xchg
jp
stc
incl
ja
test
sbb
mov
pop
sub
andb
mov
push
xchg
jle
sub
scas
xchg
sbb
mov
shrb
in
mov
outsb
push
inc
fmul
or
movsl
xor
adc
cmc
popf
pusha
sarb
leave
jne
jne
sarb
sbb
mov
or
frstor
mov
faddl
jmp
insl
dec
lods
lea
or
clc
inc
ja
jno
ret
and
adc
iret
pop
imul
rcrl
lods
popa
loope
cmp
and
and
adc
pusha
cwtl
repnz
scas
gs
add
aas
aaa
insb
lock
or
push
movsb
loopne
rcl
inc
call
inc
cmp
add
aad
insb
sti
add
or
xor
adc
xor
sbb
dec
lds
sahf
push
popa
fidivl
je
jb
mov
cli
and
mov
cwtl
mov
popa
sub
fistpll
test
dec
push
mov
pop
insb
lcall
and
ljmp
pop
sbb
aam
xor
add
dec
dec
insl
mov
outsb
mov
jmp
cmp
dec
cli
xlat
stos
hlt
mov
ret
jns
int
and
xchg
push
mov
jmp
mov
lcall
pop
push
sub
mov
jo
push
out
or
dec
dec
push
cltd
out
addl
pop
scas
jmp
mov
je
push
sbb
pusha
lcall
sbb
add
and
pusha
in
jle
das
test
pop
sub
lods
outsl
push
mov
push
cltd
push
mov
pop
dec
fimull
out
ja
inc
xor
xchg
inc
mov
mov
cltd
mov
test
mov
mov
ljmp
stos
inc
dec
pop
push
shll
movsb
lds
or
arpl
pop
pop
aam
or
adc
jmp
jb
dec
cmc
iret
fisttpl
rorl
loop
adc
in
and
push
jns
or
xor
mov
mov
das
adc
aaa
xorb
xchg
dec
aam
lds
pop
cmp
inc
enter
or
imul
gs
adc
ds
sub
out
lock
cli
fmul
mov
xor
test
jno
les
sbb
or
cmp
xor
mov
mov
jo
movl
js
cmp
int3
leave
jnp
in
dec
hlt
sub
mov
out
not
sub
push
clc
or
mov
loop
in
sbb
sub
ret
xchg
fldt
subb
lea
push
jo
inc
sbbb
add
sub
fprem
loope
mov
jbe
cmp
mov
pop
pushf
ljmp
gs
xchg
push
testb
jae
lret
xchg
fs
jecxz
repz
mov
xor
ljmp
adc
test
dec
inc
popa
mov
daa
aam
insl
lods
push
rcrl
add
jle
xchg
and
mov
shlb
rcrb
sub
daa
sahf
imul
cmp
add
enter
dec
in
jmp
mov
bound
stc
jecxz
outsl
mov
out
sub
xor
xor
sbb
sbb
add
mov
inc
bnd
outsb
pop
fldt
and
mov
inc
bound
int3
shr
jg
cli
mov
pusha
insb
push
inc
loope
push
pop
adc
shll
jp
into
js
adc
pop
pushf
stos
jmp
mov
popa
loopne
and
xlat
fwait
inc
pop
in
insl
jp
lds
mov
jmp
orl
subl
pusha
mov
lds
in
xchg
push
out
xchg
dec
repz
inc
imul
xchg
mov
pop
xor
hlt
lret
pop
outsl
popf
sub
cwtl
jns
das
push
pop
cltd
pop
add
fsqrt
iret
shrb
iret
ljmp
jmp
jp
mov
sub
xchg
fs
sbb
push
in
insb
or
test
mov
jnp
push
fldcw
mov
jb
sub
rcrl
clc
push
frstor
cmc
cli
daa
popf
push
add
mov
push
mov
testl
int3
popa
inc
xor
imul
jge
xor
fidivl
mov
imul
fstpt
je
push
gs
mulb
out
mov
pop
rorb
test
sti
pop
mov
stc
pop
enter
out
jge
cmp
jp
ror
fnsave
push
mov
pop
xchg
pop
in
sub
fildll
inc
sub
cmp
inc
pop
and
mov
ljmp
mov
je
dec
or
pushf
push
mov
negl
enter
push
sub
cmc
test
bound
jo
loope
lea
movsb
mov
xchg
pop
dec
testb
fisttpll
pusha
pusha
ljmp
loopne
inc
mov
pop
fwait
out
xor
outsl
push
adc
imul
repz
mov
daa
and
imul
iret
jg
mov
dec
jge
cmp
popf
sub
add
fnstenv
mov
mov
xlat
addr16
mov
test
push
mov
inc
stos
dec
mov
xchg
mov
sub
mov
jle
pop
gs
inc
push
xor
addr16
mov
cmp
je
outsl
mov
or
int3
sbb
insb
leave
mov
lahf
fldcw
clc
push
cld
enter
mov
add
cli
jns
add
jmp
cmp
inc
pop
xchg
cmpb
imulb
sti
popf
jo
ret
movsl
lods
test
shll
mov
lds
aaa
int3
into
jne
and
xor
xor
imul
js
add
jg
rorb
cmp
out
mov
xchg
outsb
out
les
add
inc
xchg
mov
repnz
shrb
push
cmp
push
out
mov
loopne
fnsave
call
subl
jno
aaa
adc
fdivs
mov
jo
fisubrs
rcll
mov
xchg
xchg
jle
shll
rcrb
push
movsl
mov
test
xor
lcall
in
inc
inc
lcall
test
divb
inc
pushf
add
out
adcl
inc
push
fs
rorl
mov
add
loop
mov
jg
fidivrl
push
sahf
loope
out
jne
cmp
hlt
iret
sbb
daa
mov
in
mov
add
push
aad
in
arpl
xlat
repz
shlb
inc
lret
add
jecxz
jo
cld
cmp
adc
std
xor
pop
js
pop
out
jno
xor
xchg
xchg
stos
or
rorl
jl
push
les
mov
out
pop
mov
xor
push
mov
or
insl
int3
lods
adc
and
and
fwait
mov
jmp
push
cmc
mov
push
sub
xor
test
mov
dec
add
add
or
in
sbb
dec
icebp
adc
fnstsw
xchg
inc
fwait
cmp
mov
mov
xchg
adcl
clc
fdivrs
sbb
test
scas
pop
nop
mov
adc
iret
cs
pop
push
movsl
jg
icebp
jle
cmp
rclb
cmp
or
dec
pop
cmp
inc
fdivl
push
xchg
ljmp
push
jl
cmp
mov
mov
cld
sarb
out
clc
repnz
add
jb
jmp
sub
and
repz
dec
subl
int
lock
leave
cmp
xor
add
js
mov
int3
jecxz
test
lahf
lods
or
push
and
outsl
test
mov
outsb
jnp
outsb
inc
dec
aad
xor
push
mov
mov
enter
jo
in
mov
ljmp
lock
enter
cld
loope
push
xchg
fiadds
lock
ds
or
imul
out
xor
movsb
faddp
lret
add
xor
or
sti
pusha
cmp
mov
pop
enter
vmovsldup
insb
xchg
cli
xchg
mov
int3
cltd
cmc
lods
mov
and
les
mov
popa
adc
imul
mov
repnz
fsubr
shll
sub
add
imul
sbb
and
out
aas
test
sahf
dec
lahf
sbbb
mov
je
iret
stos
xor
jne
xchg
pop
add
xor
push
scas
adc
popa
dec
dec
jle
mov
and
jge
aas
movsb
push
stos
int
jnp
das
adc
imull
mov
xor
add
push
test
daa
inc
addb
and
add
pop
cmp
cmp
pop
mov
adcl
or
lret
pop
rcl
loop
cwtl
in
dec
mov
sub
ficoml
pop
sbb
mov
test
lahf
fcomps
sbb
insb
add
lret
sub
cmp
leave
insb
aam
sub
fsub
sti
dec
dec
fidivl
nop
cmpsl
mov
rcl
jl
cs
clc
lret
in
jno
adc
pop
push
int3
add
nop
test
mov
outsl
cmpsl
lahf
push
call
and
mov
inc
out
or
inc
jne
mov
xchg
int
js
and
cld
mov
xchg
stos
cmp
ret
xchg
push
mov
movsb
mov
and
mov
imul
fcomp
adc
pop
adc
sub
mov
sbb
or
outsl
stos
rorb
stc
je
lahf
notb
bound
pop
adc
jnp
nop
repnz
jg
les
mov
push
and
pop
inc
xchg
cmpl
cmpsb
leave
fnstenv
push
dec
pop
dec
and
adc
ret
push
pop
xchg
insl
arpl
test
xor
push
pop
ficoms
stc
jo
aas
call
mov
imul
push
loope
mov
call
sub
lret
enter
into
mov
ficomps
mov
mov
inc
les
test
mov
add
shrb
fsub
sbb
cmp
aam
and
adc
and
inc
add
mov
xchg
sbb
jne
add
dec
stc
mov
push
test
cmp
pop
mov
or
and
dec
pop
sbb
xchg
and
inc
mov
mov
std
xchg
jne
pop
nop
jl
divl
pop
sti
pop
es
adc
dec
inc
cld
in
out
jne
xchg
xchg
jle
and
jp
push
xorb
pop
pop
xor
fisttpll
xlat
jg
inc
jg
das
pop
inc
mov
and
or
sub
test
outsl
inc
cmpsl
loopne
ss
dec
xchg
outsb
into
inc
imul
dec
ljmp
cmp
jecxz
xchg
test
pusha
push
sbbb
into
nop
sbb
js
xor
mov
mov
push
xor
add
xchg
je
in
push
push
sub
pop
or
mov
lea
ffree
and
out
gs
push
xchg
in
loope
inc
and
jae
out
outsl
lock
sahf
mov
xor
lret
scas
mov
xor
notb
and
nop
int3
shl
push
out
sbb
push
and
cmp
insl
iret
mov
popf
and
in
add
sbbb
add
xchg
imul
into
arpl
stc
adc
stc
adc
fdivs
jle
pop
stc
pop
fst
mov
cmp
adc
pop
push
jecxz
jns
cs
inc
xchg
fstpl
sar
lret
daa
int
sbb
push
xchg
lods
push
mov
cs
xchg
ror
pop
jecxz
pop
push
dec
cwtl
scas
and
bound
or
add
push
add
ss
stos
hlt
fistps
jnp
mov
cld
sbb
insl
pop
sub
jp
xor
mov
gs
insl
ss
sti
sbb
sub
faddp
inc
mov
hlt
mov
xorl
gs
dec
mov
cmp
scas
icebp
mov
dec
inc
cmpsl
lret
ja
xor
addr16
sarl
pop
pop
mov
cs
dec
mov
mov
les
movl
mov
dec
pushf
add
es
mov
or
lea
mov
lock
sub
es
add
mov
mov
xor
lcall
mov
jmp
jo
je
dec
ss
outsb
mov
sbb
jmp
rcr
clc
xchg
rcll
ljmp
mov
xchg
push
mov
lods
jmp
and
or
xchg
adc
inc
adc
and
outsl
fmull
popa
dec
mov
lods
jbe
icebp
cwtl
pcmpgtb
push
leave
js
adc
stc
fiaddl
sbb
test
rolb
cwtl
out
addr16
mov
push
pushf
jb
push
les
ret
out
xor
cmpl
adc
in
enter
int3
pop
outsl
popf
cld
push
inc
mov
adc
loopne
jbe
sbb
aam
lods
std
inc
lcall
mov
idiv
and
cli
push
inc
in
nop
sub
cmp
mov
fiadds
jg
clc
xchg
xor
sbb
fisubrs
jb
push
ss
insl
or
ret
jle
sub
sbb
xchg
mov
pop
mov
mov
fs
xchg
lea
stos
movsb
sbb
aas
xchg
sbb
int3
rorl
arpl
pop
adc
popa
in
js
add
mov
pushf
in
cld
sbb
pusha
cmpsl
dec
test
shr
frstor
imul
into
cmpsl
dec
pxor
sahf
dec
int
inc
and
test
arpl
xchg
xchg
nop
jo
mov
push
mov
sub
test
fwait
xchg
or
pop
mov
pop
dec
stos
lcall
movsb
insb
icebp
sbb
testb
loopne
jmp
xor
pop
dec
rorl
leave
sbb
sub
stc
mov
inc
push
xor
std
das
cwtl
mov
pop
clc
imul
hlt
push
jmp
imul
shlb
imul
jbe
cmp
mov
sahf
push
dec
gs
ds
shlb
stc
sbb
mov
loop
testl
push
mov
and
lods
fsubrs
stos
test
jg
js
and
fcompl
stc
push
push
add
xor
mov
dec
pushf
in
add
repnz
iret
jp
dec
hlt
jg
jae
sub
cmp
xchg
push
sub
or
sbb
pop
or
ds
mov
aaa
xchg
pop
xchg
cmp
mov
ss
xchg
mov
nop
cli
or
and
and
sub
mov
test
sbb
pop
cmp
fisttpll
lcall
cmp
and
xchg
inc
jne
rolb
cmp
add
icebp
in
loop
idivb
inc
jle
imul
fsubrl
push
xchg
ja
or
cmp
add
imul
xor
xchg
addr16
dec
into
jne
push
xchg
cmpsb
pop
or
popl
sub
jg
ret
push
cmp
add
add
ss
adc
cmpsl
sti
push
pop
cmp
mov
lahf
lret
repnz
pushf
mov
dec
dec
pop
loopne
leave
call
loopne
insb
sub
cmp
dec
pop
push
in
faddp
xchg
int
ret
mov
stos
mov
je
xorl
pop
xor
testb
jle
lret
sub
call
ljmp
jnp
call
cmp
pop
sub
fdivrl
adc
and
sbb
jl
imul
pop
lcall
cmpsb
jmp
push
les
sbb
ror
fnsave
pop
mov
fcoml
dec
std
fisttps
cmp
mov
inc
in
mov
mov
xchg
arpl
pop
sbb
push
sub
or
cmp
inc
rcpps
aaa
pop
push
roll
daa
sbbl
push
jns
daa
dec
xchg
xor
pop
aaa
out
cs
dec
mov
adc
pop
mov
dec
and
inc
and
xchg
pop
fisttpl
mov
jp
add
loope
cld
in
sub
in
sbb
push
lods
cmp
pop
call
cwtl
mov
movsl
and
xor
dec
fstps
cs
inc
adc
and
mov
sbb
push
push
nop
call
mov
repz
in
ret
mov
stos
pop
jne
loopne
push
es
cmpsl
lret
sbb
jbe
jno
cwtl
pop
or
test
stos
pop
call
mov
sbb
outsl
gs
push
lret
out
scas
in
cwtl
dec
jge
sub
and
outsl
les
xor
cwtl
popa
imul
and
out
in
push
sub
fadd
leave
and
or
cmp
shll
or
and
jnp
inc
ja
movsb
aaa
jmp
insb
das
jb
insl
cld
inc
daa
push
xor
pop
fcoml
jmp
lret
scas
push
andl
add
jge
stos
inc
xorl
lret
cmpl
cltd
xor
popa
jle
scas
mov
jo
es
int
inc
mov
cld
push
inc
shl
add
jg
jg
jae
or
add
cmpsl
jo
sub
inc
push
mov
pop
daa
dec
jns
test
jecxz
mov
sahf
cltd
ljmp
cmp
add
rcrb
jnp
lods
jge
test
mov
repnz
les
aad
arpl
jmp
lea
and
mov
xchg
jnp
jne
test
or
addr16
cmp
cmp
addr16
stos
lahf
or
jo
fwait
out
mov
lods
xchg
jbe
pop
mov
push
stos
cmp
fbld
mov
push
mov
xchg
sti
pusha
mov
inc
nopl
mov
dec
xchg
in
pushf
in
adc
in
push
push
iret
inc
negl
movsl
sbb
jmp
or
and
lahf
sub
jecxz
lcall
push
cs
test
sti
fnsave
fsin
addr16
loope
sti
mov
iret
and
pop
cmpsl
jns
sbb
pop
pop
icebp
movsl
mov
jge
popf
aam
in
xor
movl
test
clc
or
mov
aad
push
rcl
or
push
or
push
psadbw
and
xor
mov
xchg
xor
fcmovnu
pop
idiv
repnz
xchg
in
into
test
outsl
jno
stos
stc
shlb
add
jb
pop
out
add
lea
leave
je
adc
cmp
lods
sarb
pop
mov
jo
cmp
pop
mov
mov
mov
sahf
test
xor
ljmp
mov
fnstsw
rcl
das
jne
jns
lods
and
ja
jo
push
repnz
out
lods
mov
jne
loopne
mov
mov
cld
les
and
out
jne
xchg
mov
mov
push
jbe
adc
xor
xlat
push
iret
inc
push
call
int3
call
mov
or
add
jg
xchg
pop
inc
cmpsl
xchg
xchg
sbb
cmc
sub
add
subps
addl
mov
btr
lret
lods
xor
pusha
outsl
lock
mov
pop
fisubl
out
sahf
pop
jge
aaa
bound
pop
mov
jl
ljmp
outsl
test
mov
xchg
mov
test
or
xor
xor
jle
outsl
mov
mov
stos
xchg
dec
lock
inc
mov
push
mov
fidivl
adc
add
aam
cmpsb
sbb
xor
call
xor
xchg
daa
dec
sbb
mov
jns
dec
scas
arpl
sbb
jmp
jb
ret
out
cmp
mov
jb
mov
pushf
shrl
into
dec
mov
nop
fistps
sbb
push
test
adc
call
stc
adc
andb
hlt
mov
adc
dec
jbe
stos
and
and
mov
int
mov
jp
mov
bound
inc
push
daa
adc
movsl
mov
aas
add
aaa
sbbb
jae
xchg
mov
lea
mov
imul
loop
cmp
pop
shll
cmpsl
jo
pop
jecxz
pushf
ret
sub
sbb
jb
sub
mov
sbb
xchg
or
inc
shrl
hlt
or
pop
aam
sti
cmc
pop
ret
insl
fcoml
fmull
sbb
int3
outsl
inc
mov
repnz
ljmp
push
daa
fstps
add
pop
rclb
or
sahf
xor
addr16
dec
insl
nop
jl
movsl
mov
cmp
stos
nop
pop
jns
push
insb
or
push
xor
testl
xchg
nop
ja
jae
adc
in
inc
dec
dec
cmpsb
ss
movsb
jg
mov
adc
lahf
pop
cld
xlat
in
test
es
jae
outsl
imul
orl
xchg
movsb
rcll
loop
add
xor
pop
jnp
xor
je
dec
sti
cmp
sti
xor
test
lret
or
iret
lcall
stos
dec
xchg
out
mov
cmp
mov
insb
jmp
lahf
fimull
sub
sub
fistps
sub
fldcw
dec
xchg
inc
jnp
adc
call
cwtl
inc
mov
push
aad
incb
repnz
cmp
inc
xchg
cmp
clc
shll
fld
mov
cltd
xlat
out
xchg
jne
movsl
incl
std
movsl
and
xor
jae
icebp
pop
pop
mov
int3
out
jbe
mov
pop
pop
ss
in
es
pop
rorl
mov
cltd
pusha
pop
aaa
mov
cmp
xchg
test
sbb
inc
or
pop
sub
in
sbb
clc
dec
cmp
fs
add
inc
loop
mov
sbb
ss
jmp
jbe
outsb
inc
rorl
gs
jle
cmpsb
mov
stos
xchg
xlat
popf
dec
in
in
push
push
mov
xchg
bound
pop
aad
fistps
std
js
iret
sub
repnz
push
cld
cmp
andb
in
sub
scas
mov
or
xchg
aaa
or
push
rolb
clc
sub
lret
and
aas
aam
dec
cmp
mov
lods
imul
mov
and
adc
xchg
loope
pop
jbe
aad
cmp
mov
stos
aam
xor
daa
mov
adc
jge
fwait
push
dec
arpl
inc
push
icebp
das
sub
subl
mov
ds
xchg
cltd
mov
cwtl
lds
jmp
mov
jge
or
lods
iret
ja
push
cmpb
rolb
mov
or
xchg
pop
out
js
jne
add
lret
pop
mov
and
dec
jl
test
pop
dec
lahf
leave
lcall
jb
and
sub
mov
xor
push
pusha
orl
outsb
mov
out
test
cmp
pop
add
aaa
mulb
out
pop
decl
dec
jno
sub
lret
push
rcrl
inc
add
jle
pop
mov
test
cltd
movhlps
scas
jb
sti
inc
inc
in
xchg
pop
sbb
xor
popa
pop
out
dec
cmp
sbb
push
fdivrl
mov
leave
jl
push
pop
fwait
dec
sub
or
sahf
clc
scas
cmp
mov
mov
bound
push
lods
leave
mov
cltd
mov
imul
fs
test
push
xchg
mov
pop
mov
mov
aam
push
out
call
xor
adc
fsub
push
jnp
mov
les
add
mov
popf
cmp
iret
adc
ror
or
adc
push
push
or
fisttps
mov
and
nop
insl
and
sbb
xchg
mov
scas
shl
ss
or
mov
data16
xchg
pop
jbe
iret
lcall
dec
ret
mov
and
aas
inc
jae
popf
fiaddl
outsb
decb
es
ret
addr16
jns
call
shll
jae
out
cmp
pushf
mov
dec
xchg
pop
jo
push
in
out
pusha
in
xchg
in
mov
add
xchg
stc
sub
lret
lret
cmp
push
pop
fsubrl
xchg
arpl
inc
popf
in
lahf
sbb
leave
jp
out
daa
int3
jb
sub
mov
aas
dec
sbbl
adc
fnsave
inc
xchg
jbe
outsb
repz
pop
xchg
nop
adcl
or
sahf
jge
mov
mov
dec
adc
pop
pop
aaa
ret
dec
fs
cmp
fwait
sbb
adc
bound
add
jnp
xlat
dec
lea
fsubp
stos
add
fstl
push
int
dec
xchg
sub
imul
mov
stos
pop
inc
jge
cwtl
push
mov
out
jne
pusha
push
icebp
sahf
lods
xchg
xchg
inc
mov
mov
push
sub
lcall
out
stc
hlt
ja
insb
lret
mov
lcall
or
jp
xchg
mov
pushf
loop
xlat
leave
ficoms
sbb
dec
or
xor
xchg
and
sub
stos
inc
inc
cltd
lds
or
adc
insl
lret
mov
inc
jmp
or
loope
xor
add
adcb
add
pop
repnz
adc
jl
push
mov
sub
push
je
movsl
mov
push
mov
mov
mov
and
jne
pusha
pushl
ficoml
shll
pop
cmp
inc
scas
xor
mov
arpl
lcall
push
sub
mov
and
fstpt
movsb
jae
dec
aad
cli
adc
mov
jl
cwtl
fs
sahf
pop
adc
xchg
adc
jecxz
mov
cmp
scas
nop
pop
sbb
jnp
ljmp
cs
dec
sbb
sbb
insb
test
loopne
jbe
cli
push
in
rolb
iret
icebp
adc
pop
mov
fimuls
push
or
lds
jbe
and
insb
xchg
dec
xlat
pop
scas
cltd
fidivl
mov
inc
ds
ret
cmp
stc
mov
cmp
cmp
inc
push
sbb
in
cmp
insl
xor
and
mov
push
jo
mov
sbbb
ja
cmp
subl
jg
xlat
pop
xlat
or
push
cmp
pusha
xor
sbb
iret
push
out
ja
into
sbb
gs
mov
mov
xchg
pop
js
test
mov
lods
imul
adc
cld
rcrl
cmp
sbb
cmp
xchg
or
jnp
xchg
push
mov
mov
inc
test
mov
add
mov
iret
adc
lock
fisttpl
test
and
push
cmp
gs
mov
jmp
inc
repnz
jo
mov
cmp
sti
push
sarb
push
cmp
add
dec
popf
mov
popa
jbe
push
into
mov
adc
das
push
sub
fists
add
ret
daa
in
outsb
gs
jecxz
sub
sub
jae
dec
xchg
add
add
std
lea
cwtl
bound
sbb
mov
mov
xchg
lcall
push
and
in
lea
xchg
std
popa
xor
aad
or
cmp
xchg
dec
sub
xchg
jns
fnstenv
pop
fildll
cmp
mov
pushf
psrlw
call
dec
xchg
xor
cmc
adc
divb
cmp
dec
xchg
cmp
or
mov
pop
xchg
sub
lea
sub
mov
int3
push
lret
sbb
or
test
or
lods
jbe
popf
sub
mov
xchg
sar
adc
arpl
push
xor
xor
fcomi
xchg
jnp
das
xlat
xchg
pop
mov
push
jmp
fisubrl
push
cli
and
push
ljmp
adc
scas
mov
lods
shr
aam
cmp
dec
and
push
in
xchg
fstpl
cmpsl
dec
sub
xor
sbb
pusha
pop
xorl
enter
jmp
iret
push
jae
sub
iret
dec
mov
aam
and
in
xlat
push
adc
adc
mov
shll
ss
test
mov
push
cmp
pop
push
xchg
out
pop
add
pop
rolb
int3
push
pop
bnd
test
and
add
ret
cmpl
dec
shrb
sbb
clc
and
push
dec
jge
stos
test
in
mov
insb
test
inc
mov
add
mov
xor
dec
or
nop
int3
lods
lods
mov
loopne
int3
xchg
scas
sub
dec
cmpsl
mov
cmp
insl
cltd
pusha
pop
pop
adc
inc
push
aam
push
mov
ja
dec
push
mov
out
mov
lea
xorl
cmp
insb
xchg
inc
and
or
push
adc
and
das
sbb
jg
loopne
mov
mov
or
and
inc
cmp
push
sbb
fwait
test
and
lea
push
in
jb
aaa
scas
mov
lds
adc
adc
mov
sub
jmp
shrl
cmpsl
or
adc
xchg
ss
cmp
add
jecxz
sub
orl
test
aas
mov
mov
dec
lds
fcmovu
movsb
loopne
adc
add
cld
fcomps
mov
xor
and
xchg
mov
jge
pop
in
test
dec
and
jmp
std
xchg
xor
mov
xchg
ljmp
pop
loop
adc
in
loope
and
data16
stc
push
ja
shr
push
xchg
sarl
test
jbe
push
adc
xor
adc
push
pop
cmp
jns
jl
mov
cmpsb
push
inc
and
subl
push
in
scas
leave
into
loope
mov
xchg
cmp
cmp
mov
jle
rorl
les
adc
xchg
and
inc
or
ss
add
mov
lods
mov
push
movsb
aad
push
fcmovnb
jl
adc
xchg
mov
popf
inc
mov
jg
imul
jp
movb
jmp
mov
pop
pop
loop
cmc
cli
movsl
mov
push
std
sbb
inc
add
movsb
mov
adc
pop
dec
jne
and
dec
fistpll
aam
cmp
cwtl
test
mov
mov
cmp
das
push
rorl
scas
xor
sbb
jne
xor
insb
add
dec
dec
nop
jg
fdivs
mov
sub
jl
inc
sbb
lods
xchg
xor
mov
push
aad
clc
das
mov
adc
inc
fcmovu
xlat
dec
pushf
aas
dec
leave
push
fs
or
ret
loop
sahf
je
or
jnp
outsb
ret
loopne
xchg
das
shrl
mov
in
mov
mov
jge
xor
dec
leave
push
push
aad
rcll
idiv
sbb
mov
subl
mov
out
pop
push
mov
cmp
pop
add
sub
repnz
dec
sar
or
dec
sbb
call
orb
sbb
add
testb
stos
mov
dec
popa
add
mov
sub
xor
pop
lods
xor
pinsrw
pop
fucomi
ficomps
mov
imul
cmpsb
gs
inc
dec
daa
jmp
outsb
pop
cmp
sub
sbb
rolb
outsl
or
fwait
add
jo
xchg
jl
mov
popa
sub
stos
xchg
cmp
jge
mov
fs
insl
xchg
xchg
clc
xor
push
adc
mov
pushf
or
or
dec
cs
mov
adc
ret
dec
rcrb
ss
mov
cmp
loopne
push
push
adc
mov
imul
incb
mov
sub
or
mov
stc
push
or
stc
clc
les
pop
sbb
insl
icebp
cmp
xor
fdivl
sub
adc
pop
adc
lods
dec
cmc
pop
mov
mov
mov
rcll
jbe
mov
xchg
jno
dec
pop
inc
xlat
xlat
mov
cli
ret
push
pop
out
jmp
js
ss
push
dec
fidivl
inc
mov
ret
xchg
icebp
insb
pop
pop
push
bound
popf
mov
xor
push
clc
sar
imul
out
and
lret
lock
je
pop
loope
push
fmull
lss
mov
adc
cmp
dec
call
jecxz
push
movsl
jo
les
xor
mov
pop
cmp
mov
inc
int3
xor
cmp
add
mov
hlt
xchg
ss
mov
xchg
imul
cmp
mov
adc
dec
cmp
push
les
cmpsl
xchg
and
andb
fisttpl
xchg
xor
sbb
dec
mov
jge
out
mov
scas
es
dec
pop
mov
push
ljmp
push
mov
jne
loop
push
pop
scas
cmc
push
and
jle
sub
jne
ss
popa
jp
cmpsb
ljmp
ljmp
jno
in
inc
mov
cmpsl
mov
mov
jp
sub
inc
mov
fisttps
inc
dec
scas
dec
fwait
dec
xor
test
lods
and
or
jnp
leave
jbe
push
pusha
aam
adc
cli
push
movsb
into
mov
lock
dec
fwait
cmp
add
filds
test
aam
dec
add
imul
lds
call
loopne
mov
pop
ret
cmp
jmp
pop
mov
jecxz
jmp
sti
mov
sti
les
adc
daa
mov
mov
mov
mov
adc
js
and
ja
cmp
shl
addr16
push
int
imul
and
inc
cmp
fwait
mov
mov
mov
popa
scas
iret
ss
call
outsb
adc
shr
mov
mov
int3
xchg
lcall
jbe
adcl
pop
fsubl
add
mov
and
mov
movsl
push
push
mov
in
dec
cmp
xor
out
dec
nop
shl
arpl
aam
loop
mov
mov
movsl
sub
repz
shl
xchg
arpl
pushl
jmp
push
rolb
mov
sahf
xor
inc
add
mov
cmp
out
mov
aam
ficoml
push
adc
pop
cltd
or
rclb
dec
jbe
pop
pop
enter
jne
loopne
sub
imul
push
shll
lret
sub
xor
add
dec
sbb
lea
jg
push
pop
hlt
xchg
shrl
mov
lcall
mov
ja
jbe
lcall
pop
xor
mov
imul
addr16
push
dec
lcall
mov
arpl
add
cmc
sahf
fdivrs
xchg
iret
dec
cmp
repz
cmp
aaa
and
push
sbbl
repz
lahf
loop
xchg
movsl
pop
test
xchg
jnp
out
xchg
inc
adc
ret
lret
mov
or
sub
sub
push
jbe
call
mov
int
iret
or
dec
out
push
arpl
mov
fwait
cs
cmp
jnp
mov
enter
lds
out
sbb
es
stos
jge
shll
dec
pop
test
xchg
scas
xor
and
ljmp
dec
int
shlb
mov
mov
mov
xor
leave
jbe
out
mov
iret
pop
ret
das
and
mov
inc
out
mulb
rcll
and
xchg
fsubl
movsb
pop
cmp
lahf
push
xchg
mov
xchg
xlat
nop
arpl
lea
jl
loop
fildll
cmp
and
pop
push
cmp
and
adc
xchg
and
repz
test
setno
push
push
jo
inc
xchg
dec
repnz
fcmovu
mov
call
loop
jge
bound
femms
repnz
arpl
lret
shrb
pop
test
xor
daa
mov
ficoms
jns
push
dec
xchg
jns
xor
mov
mov
daa
pop
std
sarl
and
push
push
cmp
subb
lret
inc
add
ret
cwtl
cwtl
fcompl
mov
pop
movsb
pop
or
jno
imul
movb
aas
jb
adc
pop
std
out
xor
movsl
xchg
mov
fdivrl
or
push
lret
push
sbb
iret
adc
movl
and
xchg
push
cmp
pop
aam
mov
and
adc
pop
imul
pop
mov
dec
imul
cmc
andb
lock
inc
aaa
mov
cmc
pop
shll
ficoml
jb
adc
xchg
lahf
sbb
adcb
cltd
shll
bound
jg
mov
adc
push
fmulp
cld
jg
jge
inc
in
cwtl
sbbl
xchg
stc
mov
add
dec
jne
adc
scas
pop
push
cli
movups
sub
adc
popf
ds
leave
loopne
jo
inc
dec
jmp
mov
enter
push
lods
dec
mov
lds
inc
lea
xor
imul
and
push
mov
movb
mov
movb
test
xchg
inc
inc
repz
mov
into
scas
cmpsl
adc
call
dec
mov
inc
dec
mov
adc
mov
push
inc
setbe
jg
outsl
out
xor
xor
and
aad
ret
xchg
jmp
xor
cvtpi2ps
call
mov
pop
sbb
popf
or
mov
lahf
push
mov
adc
sbb
inc
cmp
cmp
loopne
out
and
mov
push
rcrb
movsl
pusha
and
in
mov
lock
aam
pushf
dec
jno
lea
test
loope
cmp
ficomps
jo
sarb
movsl
jo
rcrb
sub
aad
cwtl
in
mov
out
enter
loop
loope
aaa
imul
imul
xchg
mov
mov
popa
push
andl
pusha
jl
aaa
jmp
fsts
in
pop
test
lahf
xor
cmp
dec
in
inc
loop
daa
je
jmp
jb
xlat
sub
shl
sub
mov
stos
adc
mov
popf
stos
sar
lods
dec
mov
sub
xor
rcr
cltd
sysret
cli
mov
pop
rorl
add
xor
push
ds
in
out
add
jb
rcr
mov
imul
repz
cmc
and
pusha
out
lods
cmp
sbb
or
ss
xor
jns
mov
xor
mov
cld
mov
rorl
jmp
sbb
aad
movsl
mov
inc
gs
rcr
dec
nop
sub
mov
fnstcw
fs
sub
orb
fnstsw
jge
cwtl
or
sbb
mov
shld
fs
cld
inc
pop
xor
lods
iret
mov
or
jne
or
int
outsl
mov
mov
outsl
xor
push
clc
out
out
xchg
cmp
popa
ret
adc
dec
cltd
std
add
and
mov
into
xchg
cmp
xchg
das
sub
aad
popf
xchg
xor
xor
scas
bound
sbb
xor
popa
fstp
fst
scas
je
dec
mov
add
push
mov
sahf
mov
jle
cli
loop
push
fs
add
in
int3
pop
fisubrl
jnp
shlb
pop
dec
movsb
cmp
adc
jp
or
inc
shl
adc
test
xor
scas
xchg
stc
cmp
pop
vmovq
enter
fst
bound
fs
push
mov
insl
mov
imul
jo
or
jl
jmp
loopne
inc
lods
test
clc
xor
outsb
int3
insl
sbb
cmp
mov
es
inc
mov
add
pop
mov
notb
idivb
push
mov
movsb
mov
mov
fld
loop
or
inc
lahf
push
aam
negl
mov
push
inc
jno
sbb
insl
pop
rcrl
rol
fs
inc
add
xchg
test
hlt
dec
movsb
clc
cltd
pop
adc
out
nop
xchg
jb
dec
jg
inc
adc
ljmp
outsb
fldl
adc
int
loope
std
leave
fimuls
mov
jge
cmpsl
movhps
xor
cmpsl
rcrb
out
mov
repnz
sbb
enter
adc
push
ret
jecxz
mov
push
cmp
jae
inc
movsl
jmp
and
jge
push
dec
or
jnp
or
dec
dec
push
add
inc
adc
lret
push
scas
psllw
inc
sub
add
ret
mov
push
inc
xchg
mov
rcrb
cli
lods
dec
hlt
cmpb
adc
jg
mov
movsl
pop
add
push
cmp
aad
lret
lea
or
inc
pop
fisubrs
inc
or
clc
xor
in
xchg
xor
inc
lods
outsl
jmp
adc
mov
adc
add
rcr
out
or
cmp
mov
cmp
sbb
jns
or
pop
addb
fbstp
clc
arpl
orb
ret
and
jge
xchg
jmp
or
rolb
mov
sub
sbb
out
lcall
in
call
addr16
mov
push
decl
xchg
push
mov
insl
jns
push
sbb
sub
int
push
pop
pop
sti
stos
push
cmp
outsl
and
and
cltd
xchg
ret
int
fnstcw
inc
aam
jnp
stos
cmpsb
je
shrl
or
jge
addr16
and
out
ljmp
dec
cli
fisubl
mov
mov
outsl
jne
rol
pop
popa
rclb
popa
aam
mov
xchg
sti
add
scas
pop
jecxz
insl
jg
inc
cltd
cmc
icebp
adc
scas
pop
ret
adc
out
imulb
jne
mov
fcmovnu
mov
xchg
enter
and
stc
mov
rcll
adc
std
rorb
shll
push
nop
sbb
je
test
jmp
stos
inc
pop
dec
sbb
nop
gs
mov
jg
xor
loop
iret
jmp
push
data16
test
pop
mov
divl
aaa
repnz
setge
mov
iret
xchg
sub
pusha
add
aad
fisubl
jle
ljmp
shll
cld
aam
fwait
adc
icebp
xchg
loopne
dec
repz
mov
or
idivb
pushf
test
daa
or
arpl
fnstcw
hlt
adc
js
mov
jle
or
sbb
andb
lahf
shlb
lcall
out
icebp
int3
popa
test
fwait
xlat
test
ljmp
mov
push
and
xchg
lea
jmp
stos
push
outsl
sarl
mov
xor
in
xchg
es
pop
cltd
or
or
adc
int
cmpsb
cmp
cltd
inc
aad
lods
fidivrs
push
repnz
inc
test
xchg
popf
add
lahf
xor
cmp
clc
and
inc
add
fldenv
sbb
add
jnp
jae
xchg
les
fbstp
ljmp
pushf
xor
hlt
lahf
sti
add
ljmp
cmp
push
shlb
addr16
mov
pop
inc
iret
mov
orb
mov
pop
shrl
inc
sbb
popa
lock
pop
or
rorb
adc
or
stos
lock
jns
out
push
xlat
jmp
sub
jecxz
icebp
inc
pop
mov
bound
rorl
add
add
or
add
out
adc
jmp
jge
inc
sub
test
pushf
out
loope
xchg
jmp
xchg
rcr
and
xor
push
mov
outsb
push
inc
test
test
test
cmpsl
or
repz
push
adc
inc
dec
incb
add
bswap
mov
mov
outsl
xchg
aam
sahf
mov
pop
pushf
aad
or
pop
mov
sbb
inc
ljmp
inc
aad
aad
mov
mov
sbb
or
and
stos
stc
cli
arpl
insb
pop
adc
test
ljmp
cmpsb
jbe
jae
out
lods
int
inc
lods
out
jae
loopne
insb
push
lcall
xlat
xor
inc
sbb
jg
call
xchg
xor
mov
outsb
icebp
jno
movsl
or
sbb
add
pop
cmpl
adc
cmc
mov
fldcw
test
int3
sbb
xchg
dec
lock
and
push
loop
mov
lds
in
sti
negl
sbb
imul
pushl
add
enter
scas
out
and
ljmp
push
push
test
push
sbb
push
jne
in
and
fisubrs
aaa
pop
imul
ret
cmp
xchg
iret
dec
xchg
adc
subl
aaa
jle
addr16
repnz
imul
pop
leave
hlt
push
sahf
cs
rorb
sbb
mov
popf
sub
jmp
fnstsw
aad
pop
mov
cmpl
jle
les
ljmp
out
dec
xchg
dec
xchg
lods
inc
sbb
cmp
dec
xor
pop
mov
rol
sbb
sub
call
push
mov
jno
push
das
add
fstl
insb
push
pushf
daa
arpl
mov
pushl
andb
add
sbb
inc
shl
pop
pop
cmp
cwtl
mov
imul
insl
xchg
lods
mov
adc
in
add
dec
ret
pushf
pop
mov
addr16
jo
push
or
loope
push
mov
fnstenv
cmpsl
add
push
jne
xor
lds
cld
sub
lret
paddsw
push
arpl
sub
jle
inc
mov
sub
fidivrl
mov
insb
push
call
mov
js
cmp
cmp
push
scas
aad
cwtl
jmp
rcll
lock
sahf
or
das
jno
clc
negl
sub
movzbl
add
cwtl
pop
loopne
mov
dec
stos
mov
xor
xchg
pop
and
fldt
xor
add
xchg
aam
xchg
outsl
pop
or
inc
xchg
adc
popa
hlt
lret
or
lock
mov
xor
test
sbb
xchg
push
push
sbb
add
inc
cmp
test
sub
jle
pop
arpl
cmpl
mov
std
out
mov
sbb
xor
gs
adc
cwtl
xor
mov
daa
clc
or
inc
cld
jl
inc
push
lods
jae
popa
fnstcw
jno
mov
imul
aam
lahf
addr16
mov
push
ret
mov
outsl
xchg
push
pop
enter
in
je
ljmp
in
cmp
fnsave
mov
fdivrs
shll
inc
mov
sahf
or
std
mov
sbb
mov
sbb
or
push
cwtl
sbb
hlt
pop
ficoms
jge
ret
cmpsl
mov
hlt
pop
cli
cmpsl
push
aas
lea
test
push
gs
or
fisubrs
in
orb
cmp
push
lods
add
dec
stc
cmp
rcrb
or
pop
test
xchg
insb
dec
mov
inc
adc
enter
sub
cs
jbe
lret
lds
adc
pop
scas
jo
sahf
cs
jbe
jle,pt
ret
push
push
out
push
mov
enter
mov
mov
mov
or
dec
das
popf
sbb
cmp
dec
nop
aaa
pop
fisttpl
sar
inc
data16
inc
stos
das
mov
adc
jle
fidivs
pop
jnp
cmp
test
mov
jbe
xchg
repz
cmc
addr16
stc
frstpm(287
push
jmp
pop
sub
sub
jle
jb
inc
mov
add
add
fstpt
or
and
pop
sub
hlt
cmp
and
cmpsl
clc
dec
cmc
jge
sub
jnp
daa
inc
dec
pop
fwait
test
mov
lahf
nop
pop
push
aaa
mov
xchg
hlt
pop
data16
xorl
xor
mov
mov
aaa
sbb
inc
adc
push
lahf
scas
adc
sbb
xchg
popa
jbe
idivb
pop
inc
push
cmp
popa
out
xchg
lahf
dec
mov
sbb
in
int3
push
jle
aas
repz
std
lret
jae
fdivp
push
shlb
out
sbb
fcoml
and
movsb
xchg
fs
cmp
movsl
sub
gs
arpl
sbb
lods
js
xchg
push
mov
cmp
xchg
loopne
cmpl
inc
sbb
or
push
dec
fists
cmp
lahf
push
shll
push
pop
fadd
loopne
xchg
and
inc
sbb
jp,pn
mov
enter
jge
or
inc
lahf
cmp
push
xor
xorl
lcall
aas
add
and
xchg
imul
add
sub
cld
in
mov
mov
push
sahf
cmpsb
jne
iret
fadds
xor
or
aad
add
jle
sbb
fistl
push
and
hlt
leave
lret
add
shlb
cld
mov
add
cmp
or
outsl
or
scas
subb
sub
loopne
pushf
loope
popa
jae
ljmp
cmp
ficomps
mov
insb
int
inc
xchg
xchg
mov
push
and
loope
sahf
dec
aas
sbb
mov
repnz
lret
jns
jb
and
pop
cli
lods
pop
mov
and
insb
jecxz
stos
dec
dec
push
and
test
repz
adc
mov
add
cltd
inc
repz
sub
or
and
mov
movsb
fimull
add
jmp
popf
movsl
pop
mov
mov
adc
inc
mov
dec
in
add
dec
xchg
lahf
out
xchg
pop
xchg
cld
in
cltd
push
fnstsw
add
loop
mov
mov
dec
fiaddl
dec
pop
hlt
outsb
jp
mov
cmp
mov
pop
daa
sbb
fcomps
push
adcl
outsl
dec
xchg
xlat
jecxz
pop
lods
ja
mov
jge
mov
stos
inc
mov
push
out
and
fstpt
fwait
cmc
push
fsts
leave
dec
inc
sbb
xchg
lret
out
fucomp
fcompl
push
jp
xor
in
sub
or
mov
aad
jno
xlat
dec
mov
les
out
enter
pop
push
push
outsb
fldcw
xor
xchg
mov
pop
jge
fidivrs
or
movsl
mov
and
and
or
das
sbb
stos
mov
stc
scas
sub
out
fwait
xchg
mov
cli
xor
test
ficomps
fs
or
lods
inc
js
pop
pusha
xor
insl
dec
mov
loope
xchg
jge
ret
ret
pusha
fwait
rcrb
fst
add
sbb
inc
cmp
adc
mov
mov
xlat
out
xchg
push
lcall
out
subb
bound
pop
dec
jnp
xchg
adc
push
bound
repz
jo
outsl
push
lret
jne
popa
outsb
mov
xor
test
ljmp
ja
test
or
cmpl
out
cld
fadds
imul
push
int
test
popf
or
push
cmp
imul
ss
pop
es
jnp
sub
out
jo
dec
outsb
jge
lds
adc
jge
xlat
dec
lret
arpl
mov
mov
icebp
loopne
mov
jb
mov
in
aad
pop
mov
pop
jp
loopne
in
ficoms
imull
es
enter
xchg
mov
lahf
adc
data16
icebp
lock
popf
sub
setbe
scas
sbb
mov
pop
inc
xchg
psadbw
jo
cmp
dec
lds
dec
mov
fdiv
push
test
inc
dec
lahf
add
dec
or
sbb
cmp
jb
inc
bound
mov
ljmp
lods
pop
adc
adc
jbe
xor
jmp
adc
mov
cltd
pop
loop
xlat
jo
loop,pn
int
lret
adc
inc
mov
into
test
outsl
pusha
jmp
xor
pop
out
xchg
lcall
dec
mov
dec
xchg
cltd
dec
dec
ret
imul
in
or
add
insl
mov
mov
pop
dec
xor
push
dec
push
loope
jge
lea
int3
je
scas
xor
sbb
cmp
ljmp
out
jmp
mov
jle
dec
fdivrs
mov
ret
push
cltd
inc
outsl
dec
pop
scas
mov
stos
cs
or
add
sbb
cli
adc
mov
cmpb
popf
shrb
lret
push
xor
insl
pushf
push
mov
mov
mov
insb
movsl
sub
pop
push
stos
arpl
mov
pop
cmc
dec
cld
leave
in
lret
push
sbb
lock
movsb
imul
sub
or
movsb
shrl
xchg
lcall
insl
enter
into
pop
pop
dec
mov
outsl
enter
pop
sbb
jmp
inc
jns
jecxz
xor
ljmp
out
dec
leave
loope
xchg
imul
fbld
hlt
pop
xorl
out
xchg
pop
fmulp
add
fs
dec
subb
mov
imul
xor
lods
cmpsb
push
movsl
inc
imul
into
sbb
out
cmp
pcmpeqd
out
addr16
das
fisubrl
mov
stc
or
and
cmp
xor
jmp
mov
cmp
mov
jl
cmc
outsl
adc
test
xchg
sbb
jl
movsl
stos
xchg
in
or
mov
sub
xor
dec
loope
leave
aas
mov
imul
outsb
push
inc
insl
push
mov
sbb
push
mov
in
lock
sbb
pusha
gs
xchg
gs
or
addr16
pop
sub
jns,pt
sub
adc
lahf
pop
sub
inc
mov
iret
xor
fs
test
int
daa
repz
mov
imul
mov
pop
cmp
and
lahf
stos
xor
in
and
cmp
out
xor
ds
fsubl
mov
adc
fucom
xor
cmp
or
out
fwait
mov
cmp
mov
xor
test
jno
and
int3
aaa
cmp
data16
dec
inc
sarb
aam
fiaddl
inc
add
jl
test
dec
xor
pop
pop
jmp
lret
rol
mov
sbbb
scas
jl
pop
fmuls
pop
loop
inc
push
add
addr16
mov
mov
mov
movsb
int3
dec
jmp
repz
jl
inc
insb
mov
icebp
pop
arpl
fs
pop
fcomi
jae
aas
loope
jl
lret
aam
lods
addb
bnd
les
ds
stos
jnp
xor
repz
out
adc
jae
cmp
pushl
adcb
vpshaw
cmp
push
filds
fwait
inc
jl
and
pop
push
cmp
jl
clc
sub
and
imul
repnz
cli
out
test
pop
pop
rcll
inc
push
pop
add
mov
sbb
mulb
mov
push
adc
rorb
push
arpl
dec
add
imul
mov
or
and
nop
scas
inc
xor
adc
pop
adc
xchg
addr16
rcll
dec
add
retw
jl
in
aas
xor
lock
pop
in
sub
and
xchg
jp
pop
outsl
lahf
mov
loopne
inc
inc
xlat
xchg
inc
add
cmpsb
dec
sub
orl
popa
mov
rcrl
mov
and
jbe
call
xchg
jg
cltd
fcmovne
daa
cmp
out
sub
or
inc
push
cli
or
popa
in
push
sbb
arpl
js
insl
fbld
xchg
or
mov
push
in
jnp
lcall
std
outsl
pop
cmc
cmp
cld
and
popf
mov
cmovg
inc
fstpt
xor
cmp
dec
andl
sub
loopne
inc
add
jnp
stc
mov
xchg
dec
pop
adc
andb
push
and
and
push
or
mov
cmp
out
or
sbb
je
mov
divl
div
sub
sub
aas
jp
ficomps
mov
mov
push
mov
and
ret
imul
jle
ret
bound
lret
pop
cmp
jl
cmp
lock
leave
pop
ja
and
jg
mov
add
jge
aaa
jmp
fwait
jge
fstpl
mov
inc
sub
dec
repz
fsubrl
or
icebp
sbb
nop
add
sub
dec
packsswb
cmpsb
jg
lods
xor
jno
leave
xor
fwait
jmp
sbb
mov
xchg
stc
or
mov
push
daa
add
dec
jp
es
push
add
inc
pop
addr16
sbb
pop
or
jb
rcrb
iret
or
int3
sbb
lods
sub
xchg
out
pop
scas
dec
std
jg
push
inc
jno
mov
xor
add
push
movsl
loop
push
loope
mov
dec
inc
mov
xor
cmp
xchg
fidivrs
adc
xchg
lea
lods
dec
or
mov
lret
aam
jo
outsl
push
out
or
leave
insl
push
fsubs
shlb
movsb
test
mov
push
lods
loopne
xchg
repnz
dec
add
adc
adc
and
shll
popf
adc
roll
add
lcall
in
push
mov
lods
inc
inc
inc
mov
jns
mov
pop
testb
shlb
je
inc
lret
xchg
adc
sbb
xchg
ljmp
loope
or
xchg
xor
inc
in
push
ja
loop
out
mov
xchg
inc
pushf
mov
mov
fisubrl
ljmp
xchg
aam
adc
adc
push
xor
jge
je
jmp
mov
push
enter
jge
xor
cmp
pusha
test
push
and
or
test
cs
mov
push
test
icebp
roll
xor
jle
sbb
lds
dec
cmp
repnz
sbb
inc
push
iret
pop
push
fs
push
pop
push
push
cs
pop
adc
leave
jle
nop
inc
jo
push
xchg
popa
scas
adc
loop
mov
adc
push
ret
inc
aam
fucomip
sbb
insl
push
std
adc
mov
into
lret
call
xchg
mov
roll
fsubrl
scas
cli
mov
sub
clc
cmpsb
adc
fs
sub
xchg
pop
lcall
jns
scas
push
sbb
xchg
sbbl
fs
jne
pop
cmp
fnsave
mov
jae
push
push
fs
push
decb
adc
cmp
imull
mov
mov
stos
mov
push
add
mov
rcll
inc
call
jbe
sub
xchg
pop
inc
mov
das
stos
daa
psllw
sub
lcall
movsb
xor
xchg
and
jne
repnz
push
jns
repz
cld
xchg
pop
pop
lock
mov
xchg
xor
pop
dec
jmp
jp
mov
xchg
es
xchg
and
cltd
movsb
mov
ja
mov
xchg
add
inc
sti
mov
out
push
lock
jg
jmp
sahf
cmp
add
sbb
test
xor
cmc
icebp
cwtl
das
out
sbb
aas
adc
or
mov
fsubs
sar
and
sbb
xchg
or
push
sbb
roll
pop
push
dec
inc
imul
out
out
inc
cli
sub
out
lahf
or
insl
rcl
push
jae
mov
pusha
aas
movsl
sbb
flds
ficomps
idivb
dec
jl
pop
adc
int
in
add
xor
fbld
fxch
pop
test
push
ds
out
in
cwtl
in
fwait
xor
out
sbb
cld
fcomip
orb
mov
adc
sub
scas
outsb
jecxz
pop
and
stc
push
inc
jns
stos
sti
test
out
sub
sti
stos
mov
scas
in
jmp
xchg
add
add
aas
insb
in
hlt
pop
negl
cmpsb
pop
repz
outsl
jnp
jl
fcmovnbe
stos
jecxz
call
add
pop
ret
cltd
sarb
sti
inc
pushf
or
jp
rolb
repz
mov
andl
ss
mov
insl
push
mov
cmp
pmulhuw
push
cld
out
outsl
daa
orb
movsb
cs
lea
ret
rcrb
push
push
mov
scas
dec
jecxz
and
iret
sub
imul
and
popa
add
ja
test
push
jle
dec
mov
insl
imul
ror
adc
negl
sub
adc
sub
in
test
or
ds
jmp
incb
inc
push
push
pop
jnp
cmc
dec
adc
add
push
jne
test
fmull
adc
cmp
js
push
jae
loop
dec
mov
inc
ret
loop
sbb
adc
inc
dec
mov
inc
scas
out
push
outsb
decb
adc
ds
sbb
leave
cli
and
push
outsl
mov
mov
mov
pop
xor
shll
out
leave
ja
xchg
lret
cld
jns
add
aaa
add
xchg
jno
lods
outsl
sbb
push
popa
addb
inc
pop
mov
fnsave
jmp
iret
adc
mov
cmpsb
sbb
js
mov
in
push
popa
mov
popa
mov
int
in
mov
sub
inc
dec
jb
mov
jg
lret
xor
dec
mov
adc
hlt
jne
sbb
aam
scas
fimuls
cwtl
push
pop
frstor
stos
and
enter
push
lods
adc
aam
xchg
call
filds
insb
aaa
jnp
ret
push
mov
jp
push
pop
cmp
dec
dec
lret
outsb
mov
or
jbe
or
jecxz
push
jecxz
push
enter
sbb
adc
sti
mov
jae
hlt
iret
aad
xor
jae
and
mov
dec
imul
inc
xchg
xor
jmp
xchg
aad
cmp
fs
mov
enter
mov
xchg
jg
adc
arpl
ret
inc
xchg
dec
jp
mov
movsl
sub
sti
rcrb
dec
dec
jb
cmpb
mov
jns
xchg
xchg
sbb
push
dec
xchg
es
jnp
xor
gs
sbb
mov
mov
ret
push
lahf
test
inc
add
leave
sub
pop
mov
fimuls
pop
repnz
mov
mov
xor
dec
sbb
imul
sarb
mov
mov
cmp
ljmp
test
stc
ret
fwait
push
push
mov
or
adc
jo
js
xchg
pop
clc
mov
and
cmpsb
jo
sbb
fsubrs
jmp
ficompl
push
jns
cmp
xchg
stc
sub
sbb
vcomiss
dec
jo
icebp
push
cmp
xor
push
int
inc
out
push
cmpb
fsubp
or
push
mov
xor
dec
mov
dec
and
cmp
or
and
jmp
cwtl
stos
mov
jns
cmp
push
push
cmp
adc
test
lods
mov
imul
xor
decb
adc
lods
dec
cmp
sbb
stos
cmp
cmp
mov
cmp
push
dec
cli
ljmp
mov
push
xchg
jnp
mov
cmpsb
fstpl
dec
or
jl
jle
sbb
sub
inc
dec
mov
mov
imul
outsb
jnp
add
dec
or
mov
sub
mov
or
inc
inc
inc
test
pop
push
imul
ror
das
scas
mov
lret
jb
out
and
mov
dec
mov
out
fld
inc
in
loop
jge
insb
and
std
idivb
cltd
jbe
fldcw
push
mov
sub
faddl
call
cmp
test
mov
ljmp
push
xor
lret
add
cmp
bound
call
push
adc
xor
mov
mov
xchg
stos
insb
inc
sbb
pushf
cmp
loop
les
bound
dec
sub
sahf
arpl
jno
aam
sub
imul
and
leave
inc
dec
frstor
add
je
movsb
jmp
mov
mov
stos
leave
jmp
hlt
test
lds
sarb
loope
lock
hlt
outsb
push
pop
in
jne
sub
test
scas
addb
lret
dec
or
add
int
movsl
sahf
sbb
xor
add
jns
push
iret
mov
into
mov
mov
dec
movsl
or
dec
mov
jbe
int
in
rcll
sbb
jmp
cs
pushf
push
jne
push
push
inc
aaa
jae
mov
outsl
sbb
mov
ret
imul
sbb
add
and
inc
shlb
mov
xchg
call
cmc
ss
sbb
movsl
cmp
push
lods
jno
pusha
insl
jne
xor
outsb
push
pushf
rolb
xor
xor
popa
mov
icebp
or
add
test
fsubrl
xchg
jmp
adc
mov
sub
scas
loope
mov
cmp
mov
mov
dec
popf
add
pop
loope
fstp
pop
fwait
mov
and
bound
je
or
fidivrl
insl
push
mov
inc
popa
jnp
mov
inc
sub
test
jge
loope
jb
mov
inc
mov
xchg
cltd
movsl
dec
and
sbb
sti
xchg
jmp
ja
out
xchg
scas
mov
inc
mov
jnp
pop
mov
mov
xchg
dec
loope
sub
lret
popl
jg
cwtl
add
pop
addr16
push
fwait
lea
call
lock
mov
ret
mov
addb
ret
or
enter
cmp
inc
xlat
xchg
fdivs
lret
js
jno
add
call
xchg
repz
push
scas
add
pop
sub
icebp
inc
push
xor
and
iret
sahf
fdivs
cmp
daa
js
sub
push
sbb
mov
sub
sarb
in
pop
dec
enter
push
fnstcw
xor
or
cmpsl
pop
lods
xchg
leave
adc
ljmp
cwtl
dec
jle
cmc
enter
push
cmpsl
jecxz
xor
add
out
nop
cmpsb
push
loope
pop
push
push
dec
xor
ja
gs
rol
add
jg
sahf
mov
les
or
pop
mov
and
js
adc
xchg
rcll
ficompl
in
loope
or
in
cmpsb
sar
shr
sub
aaa
sbb
and
cmpsb
push
in
pop
cmc
jp
outsb
leave
fpatan
enter
or
int
in
std
fidivrl
outsl
or
in
aas
mov
ret
repnz
hlt
adc
rolb
sub
stos
leave
out
daa
or
add
mov
cmc
enter
mov
dec
daa
add
stos
std
xchg
push
dec
add
outsb
leave
lods
inc
imulb
enter
sbb
jne
fcmovnb
or
sbb
lods
dec
jp
rclb
stos
out
fnstenv
test
push
inc
lds
push
int3
daa
and
insb
xlat
mov
sub
inc
sub
push
or
ja
xlat
add
cmpsl
loopne
cmpb
pop
lret
loop
stos
scas
adc
scas
mov
mov
and
stc
xchg
adc
cmp
lret
fisttpll
jge
add
repnz
lea
das
xor
stos
mov
push
sar
inc
popa
mov
xor
push
dec
rcll
lods
inc
ss
outsl
popf
dec
jbe
adcb
mov
xchg
xchg
pop
test
lods
stc
call
xor
sbb
cs
jecxz
push
inc
addb
pop
subb
sbb
mov
sbb
mov
dec
sub
and
add
fmull
adc
fmul
movl
jae
add
sub
and
lods
push
cmp
adc
and
sbb
leave
jo
mov
push
xchg
adc
cmpsb
mov
movsb
jno
add
imul
mov
mov
push
mov
adc
mov
popf
mov
sbb
push
add
lods
leave
nop
sarl
addr16
test
xchg
scas
mov
lea
xor
insl
adc
adc
fucomip
iretw
lock
dec
ljmp
fs
std
mov
out
sub
and
clc
xchg
pusha
xchg
loopne
dec
loopne
add
movsb
hlt
lock
cmp
fsubs
into
das
addl
adc
sbb
pushf
out
pop
cmc
int3
es
jge
add
jle
inc
movsl
jnp
repz
js
push
cs
or
sbb
or
rorl
mov
inc
lahf
adc
adc
sahf
shl
scas
scas
push
loopne
stc
movsb
pop
sbb
leave
adc
ss
imulb
ror
jbe
incb
mov
or
xorb
fs
divb
inc
daa
std
xchg
cmp
imul
adc
fwait
shl
xor
rolb
sbb
out
mov
dec
add
ds
gs
jns
loopne
jns
call
mov
push
mov
jle
icebp
dec
lret
fwait
lret
push
movsl
mov
popa
repnz
stos
add
sub
dec
lea
popa
add
jl
inc
inc
out
loop
sbb
lods
mov
add
in
sahf
sbb
aad
xor
sub
mov
in
cmpsl
fidivl
and
scas
mov
aaa
insl
pusha
pop
fistps
cmc
or
or
or
in
jo
in
ret
jp
popa
movl
jbe
out
nop
stc
mov
mov
sub
adc
dec
out
adc
push
outsl
push
test
inc
push
jns
mov
in
sub
add
or
jg
push
ret
out
inc
test
in
xchg
mov
jns
mov
popf
add
jecxz
xchg
pop
xchg
cs
push
and
sarl
pop
jb
inc
ret
stos
cwtl
inc
mov
sar
cmp
call
or
sub
xchg
sti
fwait
lahf
out
repz
pop
or
add
jnp
push
push
or
xchg
jmp
lret
push
dec
pop
shlb
out
mov
test
push
jns
add
mov
test
xchg
jmp
mov
xor
iret
mov
jmp
xchg
out
popa
dec
adc
mov
dec
push
sarb
mov
call
push
cmp
cli
xchg
sub
repnz
clc
xchg
dec
xchg
fcoml
jp
mov
dec
inc
ljmp
jo
loope
in
sbb
pop
jle
push
xchg
sbb
inc
rolb
add
dec
fsubp
imul
inc
rcrb
out
sub
adc
cmp
iret
std
sub
lds
jns
pop
rclb
mov
andl
adc
mov
js
sub
sbb
aad
or
dec
cmc
scas
add
int
sub
lret
or
mov
or
xor
fsubl
push
loop
stos
ret
mov
mov
ja
orb
sbbl
push
repz
es
sti
and
or
xor
cmc
dec
push
add
push
jg
jge
mov
cwtl
push
push
mov
dec
hlt
and
pop
mov
mov
pop
cmp
mov
xchg
orl
gs
add
cmp
outsl
xor
push
pop
test
xchg
push
push
pop
imulb
jmp
mov
fisubrl
xchg
jle
call
cmpsl
pop
xchg
scas
jl
loopne
rol
insl
int
test
sub
push
shr
inc
pop
push
pusha
inc
mov
test
mov
push
fwait
cmp
mov
adc
sub
push
movsb
ja
xchg
inc
jp
and
cmp
or
jns
mov
lret
ss
xor
push
scas
jl
in
mov
inc
adc
rolb
add
out
jnp
jno
mov
pop
ret
mov
popa
dec
ret
mov
push
les
arpl
jecxz
fbld
cmp
sub
outsl
add
jle
shr
and
cmp
push
xchg
jae
cltd
enter
aam
jecxz,pn
cmpsb
outsb
fldcw
pushf
jl
data16
push
js
pop
leave
fildl
mov
pop
andb
inc
inc
mov
loope
inc
stos
cmp
mov
cmp
fdivrl
loopne
pop
lods
imul
cmp
sub
push
lcall
mov
gs
fs
int
pop
mov
ret
jecxz
xchg
push
rcll
or
pop
sub
sbb
jge
mov
jbe
dec
sbb
xor
aam
shl
dec
xor
fidivrs
outsl
cld
pop
xor
dec
rcr
adc
pop
sub
faddl
hlt
in
pop
clc
and
add
aam
in
push
inc
shrb
and
fcmovu
xchg
punpcklbw
ret
test
nop
cmp
pop
and
sub
dec
in
ja
arpl
mov
xor
ror
pop
loope
sub
xchg
int3
mov
insb
jns
data16
xchg
and
popa
mov
xchg
ja
movsb
dec
mov
push
inc
insl
ljmp
mov
push
push
push
or
std
adc
cmp
mov
fdivl
imul
rorl
and
out
shl
inc
clc
xchg
ljmp
mov
mov
cmp
sarb
mov
fwait
push
jl
out
push
inc
cmpsb
movl
mov
jbe
or
mov
inc
cli
ret
lods
or
pop
mov
popa
scas
add
stc
mov
int3
shll
xor
fcmovnu
mul
sub
ret
jp
push
loop
dec
sti
sbb
je
jnp
dec
daa
jnp
pop
mov
mov
daa
and
data16
adc
es
cmp
stos
inc
pop
sarl
xchg
sub
imul
add
fidivs
mov
jmp
movsl
iret
fdiv
xlat
fcos
orl
xchg
shlb
imul
mov
mov
call
test
movsb
das
ja
lea
push
adc
mov
mov
inc
movsb
xor
ret
dec
jp
xchg
fwait
les
or
xlat
adc
mov
xor
cli
ljmp
xlat
push
std
jp
nop
test
ds
add
push
adc
imul
outsb
jnp
mov
inc
push
sub
lds
pop
clc
shl
jnp
das
mov
lret
jecxz
insl
enter
addr16
pop
inc
mov
push
lock
movsb
mov
sbb
mov
outsl
jb
push
adc
fnstcw
pop
int
mov
jge
lea
lret
cmpsl
les
mov
cmp
mov
sub
jae
xchg
push
sbb
and
mov
repz
aas
rcr
sahf
lea
push
add
int
and
push
std
and
push
mov
adc
mov
fadd
mov
push
cmp
in
cmp
mov
out
sub
add
dec
jns
jg
inc
cmp
aaa
mov
dec
popf
or
cwtl
bound
mov
or
or
dec
js
lea
or
test
and
lds
jmp
sub
dec
or
and
imul
ljmp
dec
fisttps
xchg
popl
inc
or
push
in
push
arpl
xor
mov
lods
mov
jle
push
push
jle
inc
xor
mov
mulb
lock
ljmp
lea
or
je
mov
adc
mov
adc
mov
push
bound
jmp
push
outsb
sub
movsl
adc
mov
repz
sub
push
repz
out
shrb
movsb
push
test
pop
xchg
stos
and
add
push
fdivrl
stos
or
xchg
pop
test
mov
outsb
sbb
mov
pop
cmp
lret
jge
sub
xchg
pop
lods
xchg
mov
push
imul
icebp
das
mov
ret
sbbb
sete
jecxz
push
out
aad
lret
xchg
inc
push
cmp
dec
add
dec
jle
popa
pop
iret
sbb
arpl
xchg
loope
popa
push
add
or
pop
dec
adc
das
test
push
testb
cmp
mov
mov
push
or
pop
ljmp
jb
lea
jl
cld
mov
cmp
repnz
inc
mov
daa
and
inc
or
push
adc
inc
negb
outsl
adc
mov
fxtract
inc
xor
adc
lret
int3
cmp
std
scas
xor
mov
movsb
mov
push
outsl
add
cmpsl
xchg
jne
add
or
nop
pop
pop
fimuls
sbb
xchg
ret
jno
test
fdivrs
pop
mov
or
out
mov
or
pop
jb
maskmovq
out
and
or
hlt
mov
std
adc
iret
mov
mov
jmp
cld
jnp
jmp
fs
loope
aas
mov
out
in
pop
pop
inc
add
in
push
push
ficompl
push
fsts
mov
mov
pushf
add
sub
mov
or
into
mov
adc
add
lahf
cmp
add
push
jmp
sbb
cmp
sub
sub
dec
cld
addr16
pop
push
pushf
or
cs
fwait
mov
inc
push
xlat
fwait
hlt
push
fnstcw
lret
movsl
push
leave
shll
jl
mov
sbb
decb
push
or
fists
jecxz
jbe
xchg
sbb
in
shl
cmp
mov
inc
xchg
dec
inc
jmp
cli
xor
jae
add
in
or
stc
fadd
cmp
inc
ja
roll
xchg
sbb
in
push
fsubl
int
pop
and
xor
lods
mov
pop
in
xchg
cmp
popa
jb
mov
fstp
pop
and
sbb
cmc
shr
xorb
mov
test
cmp
dec
cmp
mov
imul
dec
test
movsb
popa
xor
mov
mov
fcomps
and
sbb
clc
call
cmpsb
orl
imul
push
loopne
cmpsb
jg
mov
pop
pop
mov
test
push
mov
cmp
repz
cmp
jmp
push
fldpi
push
push
dec
mov
das
int3
jp
jg
ret
cmpsl
dec
adc
add
cmp
and
in
iret
push
cmp
cmp
mov
cltd
ss
addb
jne
xor
mov
nop
mov
in
jecxz
into
and
inc
fistps
movsl
jmp
mov
xor
aad
fistl
div
in
xchg
scas
imul
mov
movsb
imul
movsb
lret
pop
xor
push
push
jmp
cmc
in
out
pop
dec
push
fmulp
fldcw
adc
ja
mov
xor
loop
das
mov
lds
push
push
popa
pop
in
adc
pop
xlat
mov
or
sub
sub
sub
or
or
xchg
aas
jne
and
and
mov
in
test
repnz
pop
push
stc
int3
mov
inc
mov
imul
mov
xchg
test
or
cmpsl
mov
jnp
fst
cmp
adc
loopne
cmc
gs
xchg
xchg
cltd
cltd
cmp
imul
lds
ljmp
les
fbld
imul
lret
mov
repz
out
in
mov
inc
rcll
dec
aas
pusha
adc
idiv
ds
adc
dec
pop
xchg
push
fisttps
inc
pusha
rcl
clc
and
sub
jbe
mov
addr16
iret
ss
mov
ds
push
cmp
fwait
or
out
mov
add
pusha
dec
sub
into
outsb
test
dec
fldt
shll
mov
cltd
repz
sahf
fcompl
mov
lret
popf
mov
jp
loope
push
xchg
pop
ror
fwait
xor
into
mov
jg
aaa
popa
popa
iret
sub
shl
push
or
sub
hlt
dec
add
fcoml
jno
sbb
sub
ja
sub
gs
inc
cmp
dec
daa
adc
out
lea
jle
imul
xchg
sub
ret
roll
and
aad
shrb
jle
ret
outsb
cli
cli
xor
add
mov
loop
sbb
data16
in
jge
fnstsw
lret
adc
fstps
xchg
cmc
fsubs
dec
xor
push
jne
mov
mov
add
inc
push
xchg
loope
xchg
jbe
dec
es
in
orb
pop
aas
sbb
bound
out
fbld
adc
push
lods
scas
mov
fcom
jecxz,pt
pop
sub
shr
arpl
arpl
cli
sub
ja
lret
mov
shr
stos
imulb
popf
cmp
neg
pop
jo
ja
sti
mov
mov
pop
mov
incl
and
sbb
ss
pushf
mov
shrl
rol
dec
neg
mov
dec
mov
scas
sub
mov
scas
sbb
xor
fmuls
sbb
and
cs
mov
jg
xor
dec
fnstenv
push
jo
jae
js
sbb
cltd
mov
mov
cmp
pop
xchg
jecxz
adc
sub
shlb
lcall
jns
orb
dec
pop
xorb
add
in
inc
dec
mov
ja
shl
dec
push
lock
imul
jmp
pop
dec
fs
in
push
rcll
cmc
jne
or
sbb
aas
dec
pop
sbb
in
push
mov
xchg
mov
jmp
add
imul
repz
and
incb
push
mov
aad
pop
in
pop
shl
psrld
in
sbb
sbb
pusha
out
in
dec
push
add
scas
xchg
dec
pop
lret
jns
mov
mov
or
fnsave
ss
cmp
icebp
sub
mov
push
sbb
mov
test
mov
sarb
test
dec
out
adc
xor
push
add
lahf
fcomps
jle
push
cs
sahf
or
adc
ljmp
jecxz
and
push
fistl
fstpl
rol
xor
cmp
inc
jecxz
xchg
mov
andl
aad
test
cmp
mov
fdivrs
jno
mov
es
and
divl
sub
sti
sbb
ljmp
shlb
aad
in
cs
or
cmp
or
and
cmp
js
push
add
cld
cwtl
nop
pop
add
push
test
lods
mov
movsb
pop
lahf
mov
mov
cmp
cmpsb
cmp
mov
xor
jge
and
cmp
dec
loope
je
loope
mov
jne
out
and
mov
cltd
lret
stc
aas
cmp
aad
mov
inc
sub
cmp
ljmp
cmp
or
dec
pusha
data16
test
insb
in
adc
in
scas
pop
cltd
xor
jbe
sub
xchg
jle
call
pop
addb
fucomip
inc
sub
js
nop
inc
out
sub
jb
sbb
jl
data16
lds
push
cld
mov
jno
cltd
and
bound
shrb
fisubs
jmp
lahf
sti
mov
arpl
push
mov
mov
dec
dec
sbb
shll
test
movsl
push
xchg
xchg
fwait
pop
sahf
dec
idivb
movsl
aas
and
out
inc
cmp
shl
push
mov
stos
mov
mov
test
cmp
jle
cld
rclb
or
push
inc
push
inc
adcl
pop
sbb
aad
mull
push
and
mov
mov
add
testb
pop
adc
ja
jle
jno
pop
out
loope
sahf
test
push
or
mov
cmpsb
mov
ja
cld
sub
loopne
xor
aas
jns
dec
rcrl
cmp
add
xchg
pop
enter
cmc
or
stos
add
jmp
out
test
xor
in
pop
ds
scas
xor
sub
rcl
xchg
inc
arpl
sub
int
out
ret
and
inc
mov
sti
mov
lcall
adc
test
push
lock
push
scas
loopne
adc
add
jge
stos
xchg
bound
jle
mov
inc
addl
pop
ds
lods
push
mov
adc
add
rcrl
das
and
sub
adc
popf
xchg
sub
sub
dec
loop
clc
das
test
xchg
mul
mov
in
fs
cwtl
jae
test
fwait
ret
enter
cmpsb
add
sub
cltd
mov
shrb
xchg
and
outsb
hlt
cmpsb
or
pop
push
fwait
sbb
addr16
xchg
xor
jbe
and
jg
mov
enter
add
dec
daa
xchg
lcall
and
stos
push
clc
lods
adcl
fwait
jne
aaa
insb
nop
cmp
xchg
inc
mov
sub
rolb
mov
pop
js
arpl
mov
mov
mov
subb
je
cld
xchg
mov
lods
gs
add
ss
addr16
lea
xchg
cmp
sahf
add
popf
popf
add
les
dec
and
push
fdiv
xchg
rcll
add
or
lds
sbb
adc
push
pop
call
dec
jbe
mov
out
stc
or
cs
roll
js
push
pop
lret
or
test
pop
xchg
dec
addr16
adc
negl
sahf
pop
mov
mov
mov
cmp
je
or
mov
dec
mov
imul
xor
test
in
jnp
ret
ret
fsubr
icebp
andl
lea
test
xchg
js
push
add
orb
jmp
jecxz
mov
mov
or
leave
add
arpl
loop
mov
sub
push
in
mov
scas
or
test
inc
jbe
cmpsl
mov
dec
xor
pop
es
fs
test
push
mov
imul
mov
fistl
sbb
mov
cmp
test
arpl
int3
mov
jp
movsl
scas
sbb
in
sti
lods
xlat
xor
push
cmpsl
mov
mov
mov
push
adc
mov
pop
js
mov
jecxz
ljmp
sub
int3
xchg
push
mov
shlb
fcmovnu
rclb
dec
call
shll
or
lea
push
jne
sub
fistps
test
cs
pop
and
or
inc
out
popa
mov
pop
mov
push
xchg
lods
lock
mov
and
fcoml
xor
lret
lcall
rcr
ret
shrb
and
stos
arpl
lods
ss
sbb
rolb
cwtl
mov
fdivrs
mov
iret
int3
pop
cli
pushf
loop
movsb
xorl
or
es
sbb
clc
testl
sbb
out
sbb
sti
mov
or
mov
or
jb
lods
jnp
sub
repz
pop
mov
mov
xor
mov
in
dec
adc
inc
aad
cwtl
sbb
adc
pop
add
lret
fcoml
xor
imul
xchg
pop
inc
aam
xchg
shll
lods
fnstenv
xchg
push
cmp
jge
rcrb
push
mov
lds
int3
xlat
out
jp
cltd
enter
xor
xorb
inc
test
jne
je
clc
es
stc
inc
clc
sub
insb
push
xchg
dec
insl
fisubl
insb
ljmp
or
mov
add
rcrl
divl
jg
sbb
cld
aas
and
mov
cmp
sub
lods
sub
imul
mov
test
dec
hlt
scas
cmp
ds
out
and
dec
xor
scas
cmp
cmpsb
andl
movsl
xor
adc
loopne
leave
repz
add
jae
mov
pushf
faddp
call
lret
push
leave
shll
lods
pop
jge
push
push
sbb
inc
adc
mov
lcall
movd
int3
das
or
stos
and
jmp
xor
inc
shrb
lods
inc
mov
pop
cmp
rcll
stos
fs
adc
mov
add
or
jl,pt
xor
jle
jmp
push
jmp
pusha
or
push
jecxz
dec
cli
xlat
adc
sbb
xor
lea
pop
mov
les
loop
stos
inc
sub
loop
push
push
pop
or
lcall
jne
cmp
stc
orl
mov
dec
add
mov
and
mov
mov
pop
dec
fsubr
adc
insl
aaa
mov
jne
push
or
fistl
shrb
mov
mov
int
cmp
jge
ret
repz
mov
sbbb
les
mov
dec
mov
inc
add
aam
mov
fwait
ljmp
pop
xchg
cmpsb
movsb
pop
mov
adc
mov
mov
stc
xchg
int
repnz
ja
sbb
xchg
cmc
sbb
mov
fildll
sub
jge
jp
cs
ljmp
pop
and
shll
mov
pop
dec
lock
sbb
cwtl
mov
mov
pop
or
popf
outsl
or
cld
fsub
pop
shrb
xchg
mov
adc
cwtl
lret
in
xchg
pop
repz
jp
lods
jmp
inc
negb
movsl
dec
stos
not
sbb
xlat
fwait
mov
adc
push
ss
and
or
shrl
inc
pop
push
mov
lock
lea
jns
idivb
das
aaa
inc
mov
pop
out
addr16
push
data16
pop
mov
pusha
sbb
jns
mov
dec
mov
shlb
jnp
mov
push
pop
faddl
push
xor
cmc
pop
popa
push
sti
jl
xor
sbb
imul
cmc
push
imul
inc
xchg
xor
mov
pushf
mov
test
fstps
mov
rcl
sbb
and
inc
das
cld
xchg
sti
or
mov
jecxz
cmp
jmp
sub
out
lods
repz
push
in
and
adc
mov
and
hlt
inc
fs
adc
add
and
insl
cmp
add
arpl
mov
xlat
pop
or
push
rorb
add
addr16
jb
pop
in
popf
mov
xor
aad
xor
push
pop
movsl
sub
aad
inc
jo
in
or
out
in
mov
cmpsl
mov
fisubl
ret
jle
sub
dec
or
jnp
je
popf
cld
mov
inc
popf
in
add
add
sub
sub
pop
jne
cli
bound
and
pop
mov
inc
adc
nopl
fadds
iret
cmp
pop
push
pop
icebp
fsubrl
mov
jmp
cmp
test
inc
insb
or
mov
adc
sbb
inc
gs
jmp
mov
cld
fs
sbb
jno
test
sahf
jns
and
iret
out
and
scas
cmc
repz
incb
scas
and
lods
sti
in
fnstsw
mov
ficoms
loop
mov
mov
push
jo
stos
mov
jne
sub
lds
cmp
pop
mov
dec
xchg
outsb
shll
ret
xchg
out
xchg
pop
mov
jae
jne
push
xorl
lods
pop
ss
fwait
jne
pop
mov
ret
and
sahf
or
xchg
iret
or
or
shr
mov
loop
scas
fldl
or
lret
pop
or
mov
dec
or
sbbb
orb
dec
popf
push
clc
inc
xchg
in
pop
jmp
test
aad
lret
xchg
arpl
pop
xor
adc
xchg
or
adc
shlb
fbstp
movsb
xchg
xchg
loopne
scas
gs
shrl
clc
dec
sub
pop
lock
pop
and
cmpsb
das
mov
jo
xchg
jae
hlt
leave
loop
cmp
mov
pop
jl
into
dec
xor
frstor
popa
add
and
push
cli
rcl
adc
sahf
mov
xchg
push
mov
pop
loopne
mov
in
int3
cwtl
test
push
and
int3
xor
mov
add
xorl
rsm
call
loopne
sbb
cmpsb
les
sub
inc
sarb
lea
aas
pop
and
xchg
enter
pop
and
imul
cmp
lret
sbb
push
les
scas
push
daa
mov
loope
lds
dec
int
arpl
push
push
repnz
enter
aam
pop
enter
cmp
lcall
sbb
add
push
popf
mov
call
add
cltd
je
dec
ret
xor
iret
icebp
fdivrs
dec
cmpsb
mov
std
fsubrl
pop
insb
pop
mov
ret
pop
int3
mov
pop
pop
test
dec
orl
cs
fld
mov
test
inc
mov
push
pop
adc
js
fidivl
mov
outsb
cmp
loopne
add
fisubrl
in
cmp
outsb
dec
jg
dec
and
or
cmc
adcl
test
popa
pop
fdivrl
test
add
nop
clc
xorb
or
inc
push
add
mov
or
sub
or
scas
testl
adc
xchg
add
inc
push
rcrl
in
stos
jl
pop
pop
lods
dec
outsl
mov
and
mov
xchg
jge
sub
push
mov
std
mov
in
aas
and
push
xchg
imul
pop
push
fwait
aam
adc
and
pop
out
loope
test
push
push
mov
into
jp
xchg
repz
sbb
hlt
xor
pop
mov
add
push
popf
xchg
push
push
mov
cmpsb
xlat
cmc
and
and
lods
test
out
pop
inc
mov
pop
lcall
hlt
movsl
mov
pop
fldt
sub
arpl
jl
mov
mov
aaa
lods
dec
jecxz
push
ljmp
fisttps
fisubrl
pop
dec
pop
adc
notl
cmp
outsl
fsub
int
lahf
lods
fcompl
jb
fwait
loop
mov
inc
sbb
cmc
in
subl
sub
cmc
lods
mov
ljmp
and
rorl
mov
xchg
jp
xchg
pushf
js
sub
imul
call
pop
leave
push
mov
arpl
sub
popf
mov
lock
mov
push
or
mov
inc
scas
xchg
mov
cltd
jecxz
jmp
sub
cmp
negl
push
je
jo
mov
mov
dec
adc
je
mull
cmp
fadd
mov
cmp
sbb
jle
jp
dec
or
xchg
pusha
xor
shr
push
adc
nop
and
mov
sub
mov
cs
ret
fldt
or
mov
add
sub
sbb
jnp
stos
or
in
ret
mov
cld
call
inc
adc
cmpsb
popl
inc
or
push
mov
fldt
cwtl
addr16
sub
jae
inc
mov
xchg
cs
shl
repz
cs
sbb
fisubs
inc
ja
pop
mov
into
dec
sbb
out
cmp
adc
out
out
push
clc
push
add
mov
adc
cmp
in
pop
or
insb
pop
stos
mov
or
mov
jns
repz
cmc
andl
imul
subl
pop
call
pop
insb
in
sarb
jno
add
stc
push
lods
adc
sub
adc
pusha
mov
in
insl
pushl
push
hlt
xlat
sti
lea
ja
repz
pop
adc
inc
loop
aad
mov
xor
jne
cwtl
mov
loope
mov
mov
aad
dec
inc
scas
fiaddl
jbe
dec
push
sub
inc
pop
mov
jno
mov
div
loope
pop
lea
xorb
mov
js
xor
jns
lret
adc
or
inc
xchg
pop
or
mov
xor
adc
add
sbb
dec
pop
adcl
data16
jecxz
out
aas
addr16
sahf
leave
cmp
xchg
fldcw
in
enter
cwtl
cmp
mov
aaa
xorb
loopne
mov
andl
sbb
jl
sbb
mov
jecxz
adc
repz
xor
jae
rcl
jmp
sbb
inc
and
mov
mov
mov
and
adc
xchg
movsb
jo
mov
addb
mov
jl
mov
inc
popf
nop
xor
adc
pop
sbb
cmp
aaa
xor
and
sbb
sub
aad
ficompl
sub
jo
adc
and
out
repnz
in
pop
mov
push
push
dec
adc
sub
icebp
dec
dec
or
aaa
mov
fadds
inc
outsb
stos
jae
pop
hlt
xor
lret
xchg
enter
push
lret
imul
stos
xor
inc
push
sub
idivl
add
xchg
sub
out
pop
or
jns
xchg
jbe
push
jb
mov
cwtl
icebp
adc
or
jbe
adc
add
sub
sbb
das
fisttps
sti
sub
add
outsl
ds
mov
adc
inc
jge
ljmp
or
or
pushf
out
dec
add
aam
fcoms
push
inc
aam
mov
jge
imul
out
mov
and
adc
fidivl
adc
fnstenv
rcrl
mov
inc
jo
sub
fidivrl
loope
testb
xchg
cmpsb
es
cmpsb
sbb
in
lcall
mov
jno
insl
aam
and
sub
jns
inc
sub
out
or
mov
out
pop
push
popf
cmc
xor
add
movsb
movsb
movsb
push
mov
pushl
ja
lds
bound
xlat
mov
loopne
mov
add
sahf
jg
push
mov
xchg
sub
xchg
rorb
dec
xor
aas
into
dec
cmp
sbb
repz
xor
mov
sub
jb
lcall
jl
adc
outsb
rcrl
pop
mov
in
outsb
adc
sahf
mov
inc
repz
shll
mov
mov
push
cwtl
je
and
sbbb
iret
ljmp
ljmp
cmpb
mov
sub
push
popa
cmp
xchg
jnp
mov
sub
lcall
fists
paddsw
jle
popa
mov
xor
pop
cmp
pop
cmp
push
adc
push
fcompl
aas
mov
mov
adc
bndldx
sbb
arpl
sbb
sbb
pop
stos
out
imul
idivb
ret
mov
add
in
and
xchg
out
je
outsl
pushf
in
inc
lea
popf
cmc
popl
sarl
adc
movsb
es
leave
ss
ror
sbb
and
sahf
xor
mov
iret
popa
arpl
js
add
out
stos
fistl
fdivl
cli
push
dec
sub
or
mov
xor
into
mov
cmpsl
push
push
adc
add
lahf
std
pop
xchg
and
cmp
jno
jns
mov
stos
mov
sbb
orl
inc
mov
push
stos
dec
mov
and
add
and
jno
jne
cmpl
outsl
out
cltd
cmpsb
inc
push
mov
sti
xchg
stos
dec
rcrb
shl
mov
in
push
insb
jo
stc
pop
push
stc
sbb
test
adc
cs
mov
sbb
aam
inc
pop
cmp
dec
mov
repnz
imulb
arpl
cmp
mov
loop
addl
inc
xchg
push
repz
push
inc
jbe
jmp
out
jae
xchg
nop
and
sub
lahf
mov
stos
pop
cmpsl
xchg
out
inc
stc
je
mov
pop
push
jae
je
test
in
sarb
and
mov
hlt
pop
in
xor
jb
fstpt
push
sbb
shlb
jne
push
call
inc
scas
js
adc
jb
vcvttss2si
mov
iret
imul
xchg
test
cs
or
dec
pop
and
mov
loope
std
aad
pop
mov
test
cmp
and
imulb
sbb
movsl
cmc
sti
dec
sub
xor
dec
insl
sub
andl
arpl
push
dec
mov
test
loop
push
insb
push
pop
cmpxchg
fcmove
push
ficompl
xlat
jne
inc
mov
sbb
jbe
fsubl
stos
jnp
dec
out
pop
mov
popa
test
dec
cmpsb
out
mov
adc
push
mov
pop
and
popa
fbstp
sti
or
mov
cmc
icebp
jg
int3
adc
mov
and
into
lahf
or
mov
cmpsb
xchg
pop
push
jp
cmp
push
vorps
pop
les
adc
or
imul
mov
pop
outsl
add
mov
jmp
mov
stc
mov
or
test
rcrl
test
and
push
and
sub
xchg
ret
test
lret
sub
test
movsl
jae
popf
cmp
cwtl
inc
dec
adc
and
neg
push
mov
bound
inc
lcall
adc
mov
push
out
push
int3
mov
in
pushf
or
jae
jp
pop
mov
inc
mov
xchg
mov
cwtl
jmp
loop
inc
stos
vfrczss
pop
adc
insb
xlat
out
aaa
inc
adc
leave
inc
inc
rcrl
xchg
aam
mov
jle
es
rcr
call
out
shl
ret
jbe
mov
das
fistpl
ror
push
and
or
test
or
cmp
xchg
jle
mov
cmp
into
jecxz
push
push
mov
or
pop
jp
xchg
lock
test
enter
sbb
sbb
xchg
sarl
std
ja
sbb
push
add
cli
sbb
inc
stos
mov
pop
sar
jge
add
xlat
lods
sub
stc
loop
out
test
int
xchg
mov
test
insb
imul
mov
cmp
adc
pusha
jb
shll
pop
andnps
pushw
ljmp
mov
fnstcw
or
sarb
push
nop
dec
sar
mov
xchg
push
sbb
lret
sub
adc
xorb
push
scas
jbe
in
cltd
sbb
mov
outsb
lods
movsb
ljmp
or
dec
cli
imul
popa
ret
jl
sbb
aad
ljmp
ficoml
adc
cmp
lcall
fimuls
mov
pop
inc
or
add
jle
add
pop
adc
push
out
dec
sub
mov
orl
loope
jg
and
out
outsb
sbbl
push
pusha
push
out
in
inc
fld
lds
int3
loop
dec
add
imulb
or
call
daa
or
insl
les
loope
adc
jbe
movsb
aaa
std
xchg
pop
sar
shrl
and
inc
and
pop
arpl
push
mov
repz
push
pop
enter
jnp
aam
in
je
aas
pop
insl
mov
push
aad
je,pn
xchg
add
push
icebp
jnp
in
dec
xor
subl
mov
stc
xchg
popf
aaa
pusha
mov
xchg
and
adc
xor
mov
dec
jo
xchg
pop
es
les
fistps
pop
push
add
sahf
adc
jne
push
mov
jbe
xor
and
jno
and
clc
rcrb
sbb
lret
pop
or
dec
xchg
fs
ret
xchg
xchg
inc
es
mov
fwait
shr
mov
add
pop
jbe
jle
in
pop
fisubs
sarl
push
repz
sarb
pushf
es
pop
xchg
fucomp
add
fsub
mov
pop
sbb
call
dec
mov
add
aam
scas
or
js
dec
sahf
xchg
dec
addl
adc
cmp
jns
fucom
mov
dec
fisttpll
add
data16
push
xchg
mov
cmpsl
push
jno
sub
dec
lcall
jae
mov
rcrb
sbb
dec
mov
cmpsb
out
adc
pushf
sti
fcmovnb
std
adc
xchg
dec
adc
dec
mov
dec
dec
fwait
push
pop
jg
lock
iret
mov
jae
test
jne
fisubs
adc
cmp
pop
jns
fldenv
xchg
hlt
leave
push
lods
or
sub
push
lahf
and
loopne
and
dec
mov
sub
mov
pop
jmp
or
mov
cmp
pop
dec
dec
pop
imul
dec
push
and
sbb
pusha
test
and
push
jb
jg
mov
iret
xchg
jl
in
push
imulb
mov
dec
data16
sub
sti
mov
pop
icebp
add
inc
mov
pop
in
dec
mov
cmp
mov
popa
cli
push
cmp
xchg
inc
sbb
xchg
mov
sbb
cmp
jbe
scas
je
aas
ret
xchg
and
outsb
inc
test
adc
loope
push
jecxz
jno
imul
mov
loope
cld
mov
mov
cmpsb
dec
int3
xchg
mov
inc
push
mov
pop
aas
push
sbb
cmp
and
fistpl
cmp
xor
in
push
les
cld
loopne
ljmp
addl
jb
cmpb
lahf
es
push
mov
not
scas
insb
std
pop
dec
std
cmpsl
and
js
and
lret
ds
mov
sub
push
test
icebp
dec
inc
or
add
lods
mov
aas
pop
aas
inc
pop
lods
sbb
aas
mov
lds
popa
mov
or
repnz
daa
scas
cmp
das
and
dec
pushw
decb
ja
xchg
gs
ret
sub
ljmp
mov
push
test
jno
ja
xchg
xlat
mov
lock
shl
insb
fdivrl
mov
sub
push
cs
mov
fdivp
push
nopl
rcl
mov
xchg
inc
mov
repnz
arpl
cbtw
xchg
fnsave
mov
pop
jl
fstpt
or
jmp
outsb
sbb
add
sar
loop
ds
and
and
sbb
imul
add
mov
js
ds
jmp
test
xchg
adc
adc
pop
jp
cli
pop
sbb
fldpi
sti
or
aaa
mov
lret
nop
popa
int3
push
jl
mov
push
jecxz
cmp
add
xchg
add
cmpsl
das
pop
fwait
call
push
mov
jp
gs
xor
push
out
xchg
dec
aaa
mov
mov
sub
cmpsb
mov
lret
jecxz
cmp
sarb
cmp
sub
sub
inc
out
or
cmp
push
jb
cmp
dec
cwtl
dec
xor
pusha
sbb
mov
cmp
mov
mov
mov
pop
and
cmpsb
jmp
int
mov
push
inc
mov
addr16
cmp
add
jg
movsl
in
xchg
xor
add
jecxz
int3
cmc
repz
or
push
mov
stos
lods
dec
mov
out
enter
into
sbb
imul
jne
daa
std
xcrypt-ecb
cmpsl
int
movsb
cmpsl
fwait
adc
mov
lock
ljmp
fs
enter
leave
mov
jp
ss
test
or
addb
popa
clc
pop
mov
fstps
pop
xor
push
mov
mov
mov
popf
ficomps
add
addr16
sarb
add
cmp
mov
loop
xchg
sti
dec
and
insb
clc
mov
daa
or
es
dec
push
stos
ljmp
inc
dec
xchg
outsb
push
add
cmpsl
outsb
sbb
pusha
lret
pushf
shlb
pop
test
fmull
out
dec
dec
mov
movsl
daa
iret
mov
movsb
xchg
lods
jge
in
sub
mov
out
stos
and
and
ss
cmp
ljmp
add
inc
fwait
insl
pop
lahf
das
insb
lret
stc
mov
fnsave
inc
sahf
dec
lret
or
test
jbe
je
in
stos
jle
mov
jae
ja
mov
inc
sbb
stc
outsl
test
sti
xchg
jp
nop
add
mov
inc
or
or
inc
in
cmp
jae
sbb
ret
fs
jb
popa
xchg
cmp
mov
and
push
jle
jnp
sub
rcrb
repnz
mov
sub
pop
sbb
xchg
bound
inc
mov
and
lea
movsb
or
dec
and
orb
cmp
cmp
pop
jg
sub
ficomps
push
ljmp
or
xchg
mov
xorb
ja
xor
or
jecxz
mov
stc
movsb
ss
movsb
gs
data16
cmp
cmpsl
in
std
mov
repnz
inc
scas
cmpsb
cmp
jl
pop
and
sarb
jge
movsb
stos
dec
mov
xchg
popf
iret
outsl
stc
popa
jne
adc
sbb
push
popa
cmp
cltd
repz
push
jecxz
cwtl
jns
jge
pop
xor
mov
cmc
aam
andb
out
popa
dec
sbb
inc
sub
imul
or
mov
lcall
xchg
push
hlt
jb
mulb
lret
fwait
inc
mov
inc
in
fidivrs
test
jmp
call
int
sbb
lea
sub
adc
enter
xor
andl
and
pop
adc
xor
push
lea
lds
xor
add
and
into
fstl
mov
mov
cwtl
push
jb
mov
mov
mov
adc
loopne
es
xorb
adc
fdivl
pop
adc
popa
icebp
imul
dec
lret
rcl
sbb
fs
pop
mov
mov
jne
sahf
cli
mov
push
mov
fsubr
xchg
cmp
data16
jno
ja
adc
jb
jb
and
pop
xchg
mulb
bound
cs
push
mov
or
jo
hlt
out
mov
cmp
std
mov
stos
pop
cmpsb
jb
fdivrl
dec
clc
add
int
jns
bound
pop
repnz
push
pop
aam
mov
sti
mov
inc
insb
js
aam
xchg
jl
jne
mov
push
xchg
outsl
orb
lds
outsb
jle
push
rcrb
xchg
je
pop
xchg
mov
clc
add
mov
or
mov
lahf
outsl
add
sub
mov
dec
je
imul
jno
adc
idivl
lahf
mov
sub
decb
or
cmp
cmp
addr16
mov
lret
stos
or
cmp
jmp
insb
fisubl
enter
dec
pop
mov
les
hlt
lock
or
sbbl
shr
push
dec
xor
aas
mov
sub
sbb
dec
jbe
js
cmovnp
jne
ss
add
fs
sbb
scas
sbb
hlt
inc
imulb
sahf
or
xlat
sbb
adc
test
arpl
add
bound
ret
sbb
stc
test
fisubl
jo
insl
or
cli
or
jns
repz
xor
jl
xchg
stc
push
bound
inc
into
jg
lret
data16
inc
sub
out
mov
cmpb
in
cwtl
nop
push
xorb
mov
repz
sub
cmp
adc
cmpsb
in
mov
insb
jae
or
push
flds
shrl
dec
or
jle
scas
and
mov
jp
add
push
call
xlat
jae
flds
jmp
push
lahf
loopne
cmpb
or
push
xor
jle
cmp
push
scas
icebp
lods
sahf
ret
mov
into
dec
cmpb
mov
inc
mov
mov
mov
hlt
lds
call
stos
sbb
cmp
or
arpl
jmp
iret
sub
inc
mov
je
into
cmp
jmp
inc
out
mov
loopne
mov
cmc
adc
repnz
cltd
push
les
les
loopne
dec
xchg
pop
les
mov
jmp
cmp
fsubs
stos
dec
mov
jns
icebp
in
cmp
movsb
dec
sub
lret
mov
mov
and
ljmp
dec
mov
enter
in
dec
push
dec
jp
pop
lods
cmpsl
test
mov
add
in
push
cmp
pop
dec
fisttpl
dec
mov
lods
inc
jecxz
adc
sbb
pop
jno
sub
lret
call
bound
dec
xchg
mov
iret
xchg
adc
xorb
add
je
adc
stos
cmp
dec
shrl
adc
mov
loope
adc
mov
lret
sub
jb
imul
xor
addr16
pop
call
jno
int3
loop
dec
andl
repz
pushl
jp
cltd
dec
insl
daa
loope
jge
adc
sbbl
jg
shll
xchg
loop
pop
mov
jno
in
jl
jp
cmpl
xor
sahf
xchg
push
push
push
and
or
mov
pop
lods
mov
or
stc
mov
hlt
and
lea
xchg
add
xchg
popf
mov
xchg
stos
pop
mov
rorb
out
aaa
jecxz
cwtl
xchg
sub
pop
in
sbb
cmp
shlb
cmp
das
xor
fists
es
insb
fwait
loope
lds
pop
xchg
jecxz
jle
jmp
cld
jnp
dec
and
loopne
xchg
cmpsb
and
in
cmc
jne
jo
sub
or
mov
jbe,pn
aam
test
lcall
lcall
dec
scas
mov
and
test
and
mov
into
push
pop
inc
daa
stc
and
outsb
mov
aad
cmpsl
cmp
andl
lds
mov
cwtl
cmp
push
ja
jne
xlat
cmp
adc
adc
xor
push
xor
push
out
les
pop
adc
frstor
xchg
lods
test
lea
or
push
or
mov
sbb
add
ret
movsl
push
dec
sub
pop
out
xlat
lods
cmp
and
imul
xor
int3
cmc
mov
mov
and
and
call
insb
or
int
xor
jecxz
sbbb
push
jne
xor
xor
repnz
dec
mov
xor
pop
pusha
outsb
sub
ror
cmp
and
inc
aas
rcl
pop
dec
je
mov
arpl
mov
fistps
cltd
cmp
loope
mov
jge
push
ss
lods
dec
repnz
stos
js
fcmovnbe
push
mov
xor
jo
push
mov
xor
xchg
jmp
shl
xor
pop
roll
mov
shl
sbb
lret
cld
push
ficoms
lret
cltd
xchg
in
test
ja
mov
mov
test
jecxz
push
mov
shll
jl
xchg
cmpsl
xchg
das
hlt
enter
xchg
jl
cmp
mov
sub
scas
arpl
cs
ds
pop
mov
stos
sub
and
adc
je
lds
aam
dec
ds
popa
in
loope
dec
mov
fwait
adc
jmp
xor
mov
mov
cmp
dec
xchg
fwait
nop
inc
or
mov
add
inc
mov
xchg
pop
lds
push
pusha
stos
fwait
sbb
pop
xor
pop
or
fs
and
and
push
pop
vshufps
in
imul
repnz
ficompl
aam
lahf
xchg
flds
sbb
adc
in
faddl
mov
imul
mov
and
jl
mov
js
xchg
push
sub
subl
cmp
fwait
xchg
pop
mov
sbb
insl
out
mov
pop
inc
xor
adc
pop
lret
inc
fbstp
jae
inc
ds
movsb
pop
pop
sti
fstp
pushf
and
adc
sbbb
sub
pop
and
xlat
lret
xchg
push
xor
add
sub
sbb
sbb
loopne
jge
inc
jbe
adc
inc
sbb
mov
xchg
pop
add
cmc
clc
cmp
lock
sarl
xchg
enter
fbstp
leave
inc
jl
in
push
pop
push
lds
sarl
negl
fsub
rcrb
stc
sbb
insb
xchg
mov
sar
out
ret
dec
jbe
sahf
sbb
popa
pop
adc
jge
sahf
mov
jbe
lahf
or
int3
aad
daa
fwait
lret
push
inc
and
test
mov
mov
adc
pop
xchg
mov
adc
test
popf
push
xor
dec
xchg
xchg
jo
mov
dec
lret
mov
hlt
insb
push
idivl
xor
ficompl
out
sub
rcrl
pop
xor
inc
int
in
sbb
fstl
and
addl
and
out
jne
xor
mov
sub
or
sti
jo
leave
insb
jmp
xchg
sti
jmp
mov
xchg
jp
in
adc
scas
adc
push
fisubl
imul
popf
mov
loop
jecxz
in
movsl
fdivr
xor
fsubrs
stos
pop
pop
hlt
cs
dec
popa
mull
jl
sbb
pop
dec
add
push
mov
xchg
and
lock
leave
sti
push
adc
inc
sbb
mov
mov
imul
mov
adc
pop
push
outsl
sub
scas
pusha
mov
popf
sub
loopne
push
xor
xchg
mov
test
fistl
sbb
mov
adc
enter
xchg
push
lret
pop
add
out
and
ljmp
repz
in
cwtl
push
xchg
popf
in
nop
jle
lahf
int3
jns
mov
or
mov
lods
add
je
cmp
out
jae
inc
aaa
sbb
xchg
adc
lock
adc
sbb
cld
mov
push
sbb
cmp
mov
leave
pop
jg
sub
incb
and
nop
pop
lret
rclb
lods
outsl
sbb
adc
inc
int3
cmp
sbb
lock
xchg
inc
popf
js
mov
cmp
test
jb
andl
sbb
inc
outsb
addl
mov
inc
push
mov
ret
jo
dec
sbbb
test
dec
cmp
fistl
mov
push
xor
js
dec
dec
imul
xchg
jmp
repnz
ljmp
roll
mov
pop
push
pop
dec
sub
add
neg
repnz
inc
and
jne
jnp
push
popa
push
cmp
mov
push
cmp
inc
inc
xor
push
cmpsl
and
mov
aas
outsl
cmp
bound
mov
insb
push
pop
in
in
out
jae
sbb
inc
sbb
gs
lock
pushf
sub
in
cmpsl
movsl
scas
dec
cs
add
push
xchg
pop
xchg
inc
inc
cmp
xor
push
lahf
iret
fmull
xor
inc
pusha
in
imul
xchg
test
xor
shrl
push
out
mov
xchg
repz
sub
mov
push
sub
xchg
push
stos
mov
sub
fmuls
out
insl
push
cwtl
push
push
xorl
lahf
frstor
sbb
cmpsb
pop
fcoml
dec
mov
dec
cmp
dec
sub
out
cli
js
push
testb
xchg
add
sti
pushf
in
add
or
pop
repz
dec
fists
xor
pushf
add
adc
cld
pop
mov
inc
mov
bound
xchg
sbb
aam
popa
scas
inc
sbb
xlat
adc
and
js
sub
push
or
adc
outsl
lahf
mov
mov
ss
out
dec
in
sbb
push
es
fnclex
nop
xchg
xor
add
mov
adc
pop
int
cmp
dec
shll
push
into
sub
lcall
idivb
xchg
negl
xchg
mov
lock
fisubrs
mov
sbb
push
mov
mov
in
and
loope
push
bound
sub
sub
outsb
mov
push
jne
fiadds
push
cli
mov
jnp
sahf
insl
outsb
add
sub
and
pop
aas
push
jecxz
mov
arpl
jecxz
ljmp
jg
adc
aad
mov
xor
testb
repz
lcall
add
or
inc
pop
orb
ret
xchg
jbe
test
xor
push
sub
mov
movsb
scas
insb
cs
pop
or
js
push
outsl
add
lahf
pushf
shl
sbb
push
clc
cmpsl
mov
cwtl
ret
add
jae
cmp
aaa
inc
mov
fmuls
and
fst
inc
out
test
pop
out
scas
push
iret
cmc
lods
fsubrl
fwait
sbb
xchg
cs
mov
loopne
push
stc
std
mov
mov
sub
dec
ja
inc
lret
push
push
mov
mov
add
mov
inc
in
pop
stc
shl
in
stc
test
pop
xchg
data16
dec
popf
mov
imul
dec
dec
lahf
into
jno
ret
bound
test
xchg
push
out
cmp
movq
test
push
mov
ret
add
lea
movsl
mov
ljmp
sbb
sbb
mov
add
lret
cmp
shl
loop
gs
in
loop
test
xchg
mov
add
movsb
xchg
dec
inc
adc
mov
mov
jg
jbe
ret
cmp
cmc
push
sub
mov
pop
sbb
es
out
les
js
or
popa
jbe
push
xchg
add
movsb
inc
fs
mov
cmp
sbbl
popf
jo
jl
cmp
test
sbb
insb
or
adc
repnz
jmp
idivl
mov
ljmp
push
aas
sbb
out
push
pop
dec
pop
arpl
sub
jmp
movlps
cmpsb
pop
cmp
lods
out
inc
pop
fdivs
dec
sub
nop
into
xorl
push
addb
cmovl
stos
sarb
mov
xchg
adcl
sub
mov
repnz
xorb
jnp
mov
sbb
sbb
pop
dec
xchg
push
scas
insb
or
cwtl
enter
fsin
mov
push
jne
sub
mov
mov
outsl
inc
mov
fiadds
ljmp
ret
addr16
out
repz
fsts
sahf
ja
jnp
lods
sbb
bound
cs
pop
sbbb
ret
cmp
or
mov
or
das
mov
clc
sub
and
push
imul
fisubrs
jbe
int
subb
insb
xchg
test
jb
and
or
leave
repnz
clc
testl
jb
ret
jnp
shlb
cltd
mov
sbb
pop
dec
ret
inc
xor
aas
popa
dec
mov
mov
int3
insl
cmp
pop
and
inc
mov
sub
and
ret
adc
jnp
pop
dec
pop
push
xor
lret
or
or
addr16
cmp
out
push
ret
pop
inc
fistps
sar
pop
push
div
xchg
and
mov
mov
dec
push
push
dec
fstpl
shll
dec
ds
out
mov
jae
ret
in
dec
mov
shrb
cld
mov
aad
mov
push
and
sub
or
cmpsb
pushf
sbb
scas
lock
movsb
in
push
sarb
push
sahf
inc
xor
cmp
adc
xor
inc
ljmp
hlt
lock
push
push
jmp
movsl
add
test
in
out
orb
mov
push
out
out
mov
addr16
push
or
daa
xchg
inc
adc
insl
push
aad
mov
push
mov
call
movsl
jne
std
test
pop
xor
bound
mov
dec
ds
mov
stos
xchg
push
aas
sub
imul
aaa
mov
inc
fwait
adc
jae
lock
test
push
shrl
mov
jmp
cmp
jmp
cmp
lret
xor
mov
push
nop
sub
popa
dec
push
pop
mov
outsl
push
mov
xor
addr16
mov
mov
mov
movsl
ret
enter
xor
pop
sarl
lds
mov
jle
mov
jg
rclb
cmpl
mov
sub
sbb
clc
and
inc
jmp
xor
mov
push
jo
mov
fwait
test
call
ffreep
or
bound
adc
pop
insl
fstl
pop
enter
dec
xchg
sub
jmp
inc
xchg
cli
loop
adc
lds
jmp
xchg
push
add
jns
mov
mov
sahf
popa
mov
add
cmp
sarl
movsl
add
loop
movsb
pop
std
cs
xor
adc
fidivrs
nop
repz
dec
dec
sti
xor
insl
xchg
sbb
in
adc
push
sbb
bound
fists
in
pushf
imul
mov
std
dec
add
push
pop
and
sbb
mov
lods
lret
inc
adc
aaa
dec
jne
xchg
cmp
decl
ret
and
cmp
clc
scas
loopne
jecxz
clc
ljmp
adc
lcall
stc
jge
push
cs
stos
add
adc
arpl
fstpt
mov
mov
addb
fidivl
jnp
sub
call
xlat
sbb
outsb
push
mov
xchg
xor
aam
push
xchg
movsl
sbb
dec
lods
sbb
push
comiss
pop
push
push
iret
out
cmp
jno
call
outsl
fucomip
adc
in
stc
mov
pop
addr16
pcmpeqd
adc
in
sbb
jle
xchg
fwait
jge
pop
add
test
mov
sub
mov
ss
hlt
xor
ret
lds
and
clc
mov
lcall
mov
js
push
dec
inc
adc
das
lods
rcll
dec
repz
and
test
aaa
or
outsb
scas
pop
mov
push
jne
sbb
ljmp
lods
ffreep
ss
add
data16
fidivs
mov
xchg
jns
cs
push
and
jmp
insl
incl
subl
movsb
mov
subl
jno
mov
mov
cmp
xor
jne
imul
sub
mov
pusha
xchg
rep
mov
imul
sti
mov
inc
pop
xchg
loope
mov
bound
lods
push
hlt
idivl
xor
mov
add
mov
sbb
dec
adc
sub
push
push
mov
aas
les
adc
push
imul
cmpsb
cmpsb
xor
lods
shll
mov
push
push
or
or
xchg
inc
adc
cmp
or
je
mov
sbb
popa
xchg
pop
mov
aad
dec
sub
sahf
xorb
mov
iret
mov
add
jmp
mov
push
loopne
shlb
sub
dec
and
rolb
pop
aas
into
and
inc
xchg
frstor
push
fsubr
lret
nop
bnd
jle
adc
add
xchg
pop
pop
push
ljmp
mov
and
sbb
pop
and
mov
clc
add
jmp
lahf
scas
cmpsl
mov
in
mov
mov
mov
loop
jae
mov
pop
xor
add
js
outsl
mov
mov
lods
cmp
leave
or
jae
sbb
mov
mov
sbb
in
xchg
jl
divl
rorl
jle
std
cld
cli
jnp
sbb
pop
fsts
jns
sbb
int3
pop
dec
cmp
into
iret
icebp
xchg
mov
sbb
or
jecxz
dec
adc
cld
push
ja
add
icebp
add
cltd
xor
xor
push
sbb
rcll
out
movsb
sub
xchg
mov
mov
sbb
xchg
add
ljmpw
hlt
loope
in
test
aas
add
js
xchg
je
data16
stc
sub
cmp
test
iret
inc
scas
imul
push
ja
mov
clc
cmp
rolb
cld
filds
jp
test
xchg
imulb
lret
dec
fmulp
jae
leave
mov
jbe
data16
fcomi
stos
sysenter
lods
bound
popa
pop
sahf
jge
in
mov
mov
adc
jp
shll
je
push
mov
test
lods
clc
jns
cwtl
mov
mulb
sub
into
xchg
pop
dec
jmp
or
in
ds
mov
ljmp
pushf
aaa
fsts
or
mov
push
cvttps2pi
clc
sbb
arpl
repnz
sbb
ja
jne
dec
add
jle
and
and
aad
scas
or
je
bnd
mov
xchg
insl
adc
stos
add
push
gs
and
sti
xor
push
mov
add
xor
mov
into
mov
stc
mov
mov
fiadds
xor
adc
adc
inc
xor
ljmp
cmp
add
daa
lock
stc
int
decb
int3
mov
aam
inc
sbb
sbb
add
and
ljmp
aad
push
add
mov
in
add
adc
pop
pop
insb
xchg
xchg
ret
push
jo
mov
ret
or
insb
adc
dec
dec
ljmp
sub
sarb
adc
movl
test
movsl
inc
xor
mov
jl
push
or
pop
push
xchg
test
out
adc
xchg
repz
bound
shll
push
dec
or
pop
adc
push
pop
dec
popf
adc
aas
ljmp
aas
stos
and
adc
cmp
fmull
xchg
add
rcl
out
cmpsb
sbb
movsl
loope
mov
out
jecxz
cmp
lahf
mov
test
xchg
iret
movsl
mov
push
inc
mov
std
or
sub
dec
mov
xchg
aad
shll
push
mov
les
jg
or
push
cmp
test
dec
mov
jle
out
xchg
std
mov
dec
ljmp
movl
cmp
rorl
fmull
sarl
outsl
add
dec
inc
adc
test
adc
je
dec
mov
cld
addr16
imul
in
pop
sbb
dec
vmwrite
mov
pop
out
loopne
add
fstps
jb
divl
mov
dec
mov
or
and
inc
inc
aaa
imull
test
ja
imul
fistpll
add
je
aas
jmp
cwtl
pop
mov
int3
fucomp
xor
adc
xchg
ja
lcall
and
push
xor
or
jnp
out
int3
test
adc
ror
xchg
push
pop
popa
je
fiadds
mov
test
inc
jne
fcoms
scas
or
rcl
jg
data16
in
pusha
pusha
loope
sbb
cmpsb
int3
in
mov
lahf
and
dec
inc
fimuls
sub
testl
dec
push
fwait
cmpsl
cs
out
cmp
dec
pop
sbb
mov
or
adc
mov
xor
cmp
mov
push
popf
fcmovne
inc
sbb
neg
imull
inc
rcrl
and
int
gs
movsb
cmc
lds
mov
mov
adc
cltd
xchg
mov
sbb
sbb
out
mov
mov
or
scas
out
add
mov
pop
lods
je
mov
and
test
into
int3
or
mov
lds
adc
xchg
clc
fsubrs
rdtsc
rorb
jnp
sahf
or
in
jbe
mov
inc
sbb
pop
xchg
out
xchg
cmpsl
rcl
imul
daa
pop
das
add
xchg
mov
fstpt
movsl
test
movsl
add
mov
sahf
cwtl
xchg
adc
ror
lahf
stos
sbbl
imul
int
mov
out
pop
test
mov
mov
dec
xor
clc
lock
jp
xchg
mov
mov
or
fdivrs
fs
hlt
mov
add
outsl
pop
dec
stos
mov
out
in
ret
adc
flds
push
xorb
xor
daa
fincstp
imulb
sahf
xor
mov
fsubrl
sbb
int
mov
adc
xchg
cmp
aam
cmp
outsb
mov
cmp
rorl
jae
movsl
xchg
cli
mov
and
xchg
testb
sar
cmp
inc
push
faddp
inc
add
mov
inc
in
call
orl
pop
out
mov
rcl
adc
jb
shlb
mov
xchg
jecxz
push
jl
mov
popa
out
jmp
push
rcll
or
in
addr16
push
sbbb
movsb
xchg
call
jge
adc
cmp
sbb
and
nop
scas
das
ljmp
jae
xchg
jnp
in
jle
scas
int3
and
bound
mov
out
mov
in
sbb
cmp
dec
adc
addr16
lcall
fldt
loop
notl
fxch
pop
push
scas
and
or
xchg
out
xchg
jne
jge
xchg
rcrb
sbb
imul
mov
bound
sti
pop
mov
enter
jo
mov
mov
or
jg
mov
hlt
cmp
add
out
xchg
jp
push
fs
loop
les
mov
xchg
jns
jle
push
mov
xchg
xchg
xor
jg
fimull
sbb
mov
addr16
pop
or
inc
push
push
adc
and
jmp
loop
pop
jnp
push
dec
in
push
loop
cmp
and
and
mov
shlb
push
movsl
in
push
mov
pop
or
outsb
lret
test
push
fiaddl
inc
call
jns
add
adc
aam
icebp
sbb
ljmp
fsubrl
cmp
mov
push
enter
jp
stos
out
mov
xchg
loope
or
xor
lea
in
iret
mov
pop
inc
cmpsl
in
or
push
cmp
pop
outsl
outsl
jg
and
test
sbb
jno
inc
lods
mov
loope
mov
idivl
popf
push
sub
jae
mov
icebp
sub
fildl
cld
jmp
mov
xchg
sub
jbe
mov
xchg
inc
insb
out
mov
cmpsl
sbb
cmp
xchg
gs
push
adc
dec
adc
adc
sub
scas
mov
test
mov
int3
into
scas
pop
out
incb
xchg
xor
cld
pop
mov
dec
jl
roll
aam
pop
dec
jns
xor
mov
std
jmp
sti
jecxz
filds
data16
mov
mov
inc
adc
out
sbb
xor
inc
lcall
jno
pop
aaa
pop
add
nop
out
dec
fimuls
out
adc
icebp
inc
xchg
add
fmul
test
mov
pop
shll
pop
test
sbb
fisubl
js
xchg
mov
dec
mov
mov
in
stos
clc
push
mov
xchg
sub
mov
jnp
push
cmp
fcoml
repz
js
js
setb
push
xor
fldl
xor
lcall
sahf
push
fcomip
sub
les
pop
fucom
jge
je
and
mov
mov
fidivs
mov
sti
lds
mov
outsl
pusha
inc
jg
cmp
add
jle
jmp
enter
pop
cmp
inc
push
mov
push
sti
mov
xor
inc
xchg
stos
insb
aad
mov
pop
push
mov
push
sbb
vmread
and
test
pop
jns
int
inc
test
aam
jne
fisttpll
inc
mov
mov
sbbb
inc
pusha
loope
test
sbb
xor
dec
adc
sub
lea
mov
clc
xchg
xchg
cmp
rcr
scas
pushf
pop
lahf
xchg
ds
outsb
clc
sub
or
mov
dec
imulb
sub
cmp
ss
divl
repz
std
xor
fwait
mov
andl
dec
ljmp
xor
cmpsb
jno
insb
lahf
mov
or
movsb
mov
sbb
movsb
fnstsw
insb
xor
adc
xchg
add
inc
fs
mov
lock
rcrb
dec
mov
mov
decl
dec
loopne
imul
icebp
push
and
sbb
call
pop
das
jmp
jo
int
and
cmp
lods
test
pop
add
and
std
sahf
aaa
jl
arpl
mov
push
stos
inc
sub
fsubs
pop
mov
shlb
sbb
fcoms
repnz
jg
mov
cmp
andb
movsl
lret
mov
pop
jp
inc
lcall
or
push
and
mov
add
aad
jo
mov
leave
aad
std
aaa
mov
ds
add
loope
mov
test
jno
or
icebp
lcall
ljmp
mov
daa
bound
or
pop
sub
stc
pop
mov
mov
push
and
push
pop
lea
pop
and
push
push
adc
pop
es
mov
sbb
xchg
push
sub
dec
mov
jbe
out
push
movsb
jns
mov
mov
xor
dec
rolb
lret
cs
ds
iret
xor
and
mov
lds
xchg
imul
add
ret
jp
dec
sub
mov
mov
cwtl
fisubl
cmp
xchg
push
xchg
push
fdivl
xlat
cltd
jno
hlt
sbb
or
insb
jns
xchg
ret
scas
movsl
fisttpl
cld
repz
xchg
cmp
in
and
daa
loop
push
pop
mov
stos
xchg
xorl
push
push
xchg
dec
sahf
fisubs
loope
ds
nop
push
test
or
dec
mov
jl
cmp
cmp
scas
aad
dec
or
and
add
testl
stc
icebp
adc
stos
jg
xor
sub
mov
insb
loopne
sbb
cmp
std
das
push
jle
mov
icebp
ja,pt
jnp
ret
xor
sub
cmp
jle
adc
inc
sub
or
dec
sub
js
stos
sbb
jbe
mul
sti
sti
xchg
or
sbb
cmp
cltd
jge
and
sbb
or
loopne
mov
jne
push
push
popa
cmp
cmc
mov
into
xor
enter
mov
popa
mov
das
cwtl
shrb
mov
mov
cmpsb
pop
gs
pop
clc
xchg
int
add
push
mov
rclb
xchg
jbe
dec
add
push
lret
dec
popa
std
fs
gs
loope
in
dec
mov
cmp
leave
mov
xchg
ds
or
mov
xchg
popa
dec
idivl
inc
int3
icebp
or
xchg
xlat
je
js
ljmp
push
int3
data16
pop
hlt
sbb
jg
out
mov
mov
shrl
cli
cltd
mov
mov
fimuls
loopne
jl
inc
pop
stos
fmul
jle
jge,pt
sti
mov
std
aad
lret
insb
jo
hlt
push
cmpsl
insl
inc
sub
or
aas
and
aaa
cs
sub
test
sub
bound
repz
insb
jne
add
adc
push
pop
rorl
or
movsl
int3
mov
push
mov
mov
sub
je
xchg
aam
jbe
xor
iret
mov
inc
jne
jge
xchg
arpl
fnstenv
lcall
xchg
dec
std
fwait
scas
cmp
ret
inc
or
mov
cmp
lds
push
leave
outsl
lea
pushf
ret
sahf
das
lea
push
mov
and
jae
mov
xlat
and
jb
sub
imul
fs
sbb
sbb
rcrb
lods
in
mov
loope
loop
xchg
sahf
push
enter
cmpsl
xor
mov
sub
and
xor
jne
jl
push
cwtl
fdivrs
shl
fcoml
not
pop
mov
add
dec
dec
imul
ret
push
mov
out
xor
xor
pusha
fisttpll
les
pop
or
push
stos
xchg
xchg
xchg
mov
sbbb
jns
test
test
idivl
out
dec
popf
mov
add
adc
xchg
loopne
jbe
jne
sub
xchg
bound
in
and
cmp
pop
push
adc
xor
incb
adc
cmp
iret
and
jmp
fmull
icebp
mov
adc
lods
push
push
lret
call
mov
or
adc
lahf
mov
and
bound
or
pusha
ret
js
inc
aam
push
ficoms
inc
adc
xor
out
push
in
inc
mov
jne
js
mov
and
jo
ljmp
dec
push
sbbl
inc
insl
out
sbb
jle
negb
lcall
mov
sbb
pop
push
lea
lahf
fdivl
push
sub
xchg
dec
test
idivb
and
xchg
jnp
pusha
dec
aaa
fdivrs
or
cmpsb
mov
fcmove
mov
pop
lock
xchg
add
jo
xchg
in
push
jl
shl
jge
adc
cmp
push
or
jb
mov
push
push
ds
ret
xchg
movsb
xchg
push
xchg
and
das
xor
loopne
inc
sbb
bound
pop
push
repnz
sub
xor
lock
sbb
push
mov
insb
pop
shll
hlt
push
sbb
sub
daa
aam
ficoml
pop
out
adc
push
sbb
fisttpl
push
leave
mov
jge
push
fidivs
out
icebp
mov
repz
sub
push
xor
push
shrl
mov
xchg
insl
adc
push
xchg
xorb
lret
pop
popf
sbb
sahf
rcrl
je
mov
add
jbe
stc
mov
xchg
xchg
mov
push
int3
loope
jmp
mov
loopne
aad
ds
mov
imul
mov
shlb
ljmp
test
inc
jmp
dec
dec
lock
mov
xchg
push
mov
lods
cmp
mov
pop
sbb
mov
scas
aaa
push
dec
push
xchg
es
lcall
push
add
mov
add
pop
mov
inc
jns
lcall
mov
sahf
or
fiaddl
mov
mov
pop
cmp
push
mov
lret
xchg
aaa
stc
push
xchg
mov
jge
mov
add
mov
and
test
inc
push
push
push
inc
iret
and
xor
and
pushf
add
scas
mov
jae
mulb
std
cli
cld
imul
add
mov
pop
push
add
dec
enter
in
mov
pop
lods
xor
dec
clc
mov
inc
xchg
xor
clc
xor
scas
sbb
pop
fcmove
xlat
xchg
into
xchg
or
xchg
xor
fsubrs
fists
xor
jo
call
xchg
dec
movsl
dec
daa
out
sub
sub
sar
or
sti
ret
iret
xchg
lret
jnp
jg
ja
pop
mov
pop
arpl
dec
or
stc
mov
ret
sbb
iret
andb
clflush
pop
dec
fucomip
inc
scas
jmp
dec
sub
jp
cmc
lret
lods
int3
cmpsb
movsb
inc
mov
and
cmpsl
sbb
out
fstpt
aad
in
and
insb
adc
mov
sbb
sti
sbb
test
mov
cli
js
pusha
inc
mov
js
or
cmc
mov
jne
cmp
mov
pop
pop
leave
mov
mov
fbld
mov
or
mov
add
dec
mov
adcl
add
mov
stos
xor
jmp
stc
imul
loop
stos
dec
in
lock
stos
and
mov
ljmp
js
icebp
dec
div
out
push
sub
xchg
sbb
mov
jg
mov
int
pop
ljmp
pop
jne
jnp
insl
dec
sarb
or
sahf
and
jg
cltd
mov
xchg
sbb
mov
jge
loop
mov
mov
popa
insb
fsts
out
sub
pusha
xchg
jl
pop
xchg
cmp
add
dec
sub
push
mov
cmpb
push
jl
leave
or
nop
shr
jae
hlt
fisubrl
xor
cld
and
xchg
lret
leave
scas
jge
mov
adc
sbbl
nop
ja
mov
sbb
cmp
les
cmpb
aam
mov
pop
outsb
shlb
pop
pop
inc
stos
adc
call
or
cmp
and
sbb
roll
sbb
test
dec
mov
mov
mov
cmp
sub
imul
sbb
test
mov
and
test
pop
dec
test
cwtl
in
dec
dec
out
fmul
and
jbe
repnz
pop
push
sbb
xor
mov
daa
or
jnp
jbe
xchg
jns
ljmp
addr16
das
mov
cli
jo
push
lea
pop
loope
pop
jae
sbb
sbb
jns
push
in
ret
outsl
cmp
pop
cmp
sbb
push
inc
fadds
inc
std
sub
stos
leave
and
mov
lret
adc
jmp
xor
lods
inc
mov
fwait
pop
and
xchg
or
inc
fs
test
ret
rorb
xchg
call
push
mov
sbb
xchg
dec
adc
jge
pop
repnz
es
loopne
pop
out
pop
pop
mov
sbb
jae
outsb
jle
mov
sti
push
add
push
mov
ror
lods
les
mov
out
sbb
mov
push
in
adc
and
outsl
sub
rolb
test
jno
scas
mov
pop
cmp
add
pop
sub
into
inc
mull
jae
rorb
ds
and
sarl
push
sub
sbb
out
sub
pushf
js
jge
es
mov
lods
jmp
jb
jecxz
lahf
mov
inc
add
mov
sub
mov
mov
mov
rcl
icebp
outsl
xchg
jg
add
shrb
xchg
push
loopne
orl
adc
pop
fstl
push
inc
test
dec
negl
add
ja
mov
outsl
idivl
xorl
mov
dec
lcall
jnp
xor
aas
and
pop
and
ret
fnstenv
cli
push
repnz
inc
inc
inc
xor
int
fistpll
adc
stos
in
movsl
inc
cltd
outsl
push
stos
loop
xor
js
sbb
add
jno
or
mov
dec
bound
das
sbb
neg
cmpb
mov
dec
cmp
inc
pop
stos
iret
gs
sub
in
mov
jmp
jmp
fsubs
ja
andl
adc
pop
cs
jmp
mov
loopne
push
sub
add
push
sbb
push
scas
dec
stos
sub
jb
cltd
je
mulb
xchg
movsl
xchg
stc
jae
aaa
in
inc
push
jno
jne
mov
mov
pushf
scas
cld
decl
aam
adc
jle
mov
push
lock
sub
outsb
xchg
jge
outsl
rorl
ficomps
push
pop
jge
xchg
jg
cmp
out
sub
mov
lret
push
aam
dec
mov
sub
in
aaa
jno
pushl
ja
sbb
subb
sbb
int
push
xor
and
adc
sbb
pushf
cmpsl
sub
lret
or
sbb
or
sahf
mov
xchg
xchg
and
mov
mov
inc
lock
cli
repnz
jp
sbb
mov
movsl
gs
jl
movntps
pusha
jl
mov
testb
sub
repnz
or
dec
lret
mov
cli
mov
mov
decl
cld
xchg
mov
dec
cmpsl
sub
lea
mov
xor
adc
push
pushf
and
aas
test
in
adc
insl
cwtl
adc
push
pop
push
add
dec
js
sub
dec
gs
mov
ss
xchg
out
push
xchg
adc
push
pop
mov
in
xor
fincstp
dec
jmp
adcl
ret
loope
sahf
pop
xor
or
shrl
fildll
aaa
add
jo
inc
cmpsl
xchg
mov
mov
jmp
pushf
sub
dec
push
movsb
mov
push
test
daa
es
rorl
loope
pusha
std
decb
in
mov
ss
sti
sahf
test
mov
sbb
or
test
sarl
test
jns
popa
aad
lock
mov
mov
outsb
fstpt
pop
cmp
sbb
adc
pop
lods
jmp
cmpsb
sub
adc
subl
cmpsl
mov
bound
ret
jmp
jle
lret
or
jns
aas
inc
js
repnz
mov
mov
call
add
lahf
loope
mov
and
aam
mov
movsl
sub
add
decl
xchg
adc
outsl
sub
mov
mov
push
xchg
cld
mov
les
add
pop
test
or
dec
sahf
push
inc
cmpsb
xchg
cmp
movsl
mov
sti
lods
pop
sub
insb
xchg
lret
adc
mov
std
jecxz
mov
shll
pop
into
jmp
adc
dec
rclb
clc
shlb
mov
sbb
movsl
inc
inc
cld
mov
or
mov
es
sub
adc
mov
test
int
lahf
mov
jecxz
in
pavgw
dec
scas
pop
in
movsl
mov
cli
imul
std
mov
jg
sub
pop
gs
insb
vprotd
aas
dec
incl
jnp
push
cli
aam
mov
std
xor
fidivrs
aam
bound
push
cld
pop
sub
pop
jle
dec
add
daa
xor
xchg
adc
or
sbb
jge
btc
out
data16
ret
imul
sub
cwtl
pop
aaa
sbb
cmpsl
rcl
nop
testl
ljmp
jle
and
shr
in
xor
sub
int3
leave
loopne
test
mov
aad
sub
push
scas
andb
push
jae
loop
push
jg
inc
jb
in
dec
pop
gs
out
xchg
sub
jle
subb
inc
dec
pop
jnp
aas
pop
xchg
cmp
and
lret
fldt
xchg
sub
stc
enter
dec
or
nop
pop
repz
orb
mov
das
add
popf
ret
mov
pop
mov
cmp
cltd
pop
mov
aad
xchg
add
sbb
add
dec
lret
dec
repz
cltd
mov
dec
lock
jne
inc
adc
in
xor
inc
jb
jbe
sbb
and
adc
sbb
loope
daa
aam
loop
sub
ds
daa
xchg
sub
and
sarb
sti
pop
js
insb
adc
daa
xchg
rorl
in
movsb
std
aad
xor
fsubs
movsb
jle
jl
mov
arpl
mov
stos
nop
in
test
jae
out
popf
in
movsl
into
push
xor
stos
lcall
out
adc
addr16
jno
int3
xchg
iret
inc
out
jmp
xchg
mov
lcall
mov
iret
xor
shrb
outsl
in
lcall
fwait
es
sbb
and
fcompl
xor
fsubs
pop
inc
dec
jecxz
aaa
lea
sbb
stos
dec
dec
lahf
inc
lea
mov
adc
mov
mov
das
nop
ss
lcall
sarl
ja
sbb
notl
fsubp
and
lds
fmul
jo
mov
pop
mov
or
lcall
sbb
xor
inc
rcl
mov
in
cmpsb
mov
jae
test
inc
aas
fistpll
xchg
icebp
cmp
cmp
scas
aad
sbb
pop
std
dec
and
fcomi
mov
imul
inc
push
sub
cld
daa
jmp
mov
stos
das
aad
or
xchg
nop
xchg
inc
std
fnstsw
movswl
mov
mov
loop,pn
aaa
leave
hlt
push
out
xor
pop
out
sbb
gs
iret
xchg
xchg
dec
arpl
stos
sub
ss
push
mov
jmp
insb
dec
cld
adc
or
loope
push
shl
call
mov
cwtl
mov
les
adc
mov
outsl
sbb
or
fdivl
insl
repz
lds
mov
sub
inc
lret
jle
inc
xchg
sbb
sub
aas
sub
jg
lods
sbb
pop
cmp
mov
aam
bound
push
pushf
mov
push
jecxz
aaa
fnstsw
js
pop
add
dec
add
lds
imul
out
es
sbb
test
adc
lds
push
stos
or
xor
lret
in
fmuls
hlt
movsb
repz
push
pop
inc
push
push
clc
jnp
mov
adc
movl
test
bound
and
in
int
mov
cltd
mov
es
imul
ret
aad
adc
dec
iret
iret
push
enter
mov
aam
in
xchg
testb
or
add
cmpsb
hlt
outsb
mov
pop
les
addr16
xor
iret
xchg
and
add
call
mov
mov
xchg
jae
arpl
adc
xor
push
imul
push
flds
icebp
xlat
repz
je
nop
mov
and
sbb
inc
and
leave
cmp
pop
hlt
shll
sti
negl
cmp
jle
les
aad
mov
cmp
imul
pop
sbb
iret
sbb
mov
and
cli
das
xchg
aaa
popf
fnstsw
ja
and
outsl
out
cltd
mov
sub
popf
sbbl
lods
xor
and
push
lret
dec
cmp
scas
imul
inc
leave
les
push
scas
xorl
adc
in
ss
shl
in
fsubs
jge
or
xchg
sub
mov
and
aaa
sub
mov
xchg
mov
xchg
ljmp
lea
leave
pop
dec
pop
imul
push
push
dec
cmpsl
fiadds
iret
or
jg
outsb
xchg
js
mov
mov
pop
sbb
call
jle
or
inc
lcall
mov
repz
cmpsb
jbe
xchg
dec
mov
and
lods
adc
test
or
ss
xchg
imul
icebp
pushf
shlb
enter
or
daa
cld
push
pushf
sub
mov
xor
push
fdivs
fldl
les
mov
cs
nop
mov
call
fcoml
je
or
fdivs
addr16
pop
mov
pop
test
test
in
adc
or
jl
xchg
xor
jnp
movsl
test
sbb
mov
sbb
fisubrs
mov
mov
dec
mov
cmpsl
out
cmp
cmp
int3
sbb
pop
xchg
pop
xor
mov
stc
jo
nop
add
fdiv
push
add
cltd
sub
popf
mov
xchg
insb
lock
dec
sub
and
daa
or
stos
sub
jle
dec
inc
dec
xchg
adc
popa
repz
add
cmp
div
dec
jno
int3
int
add
cli
movsl
and
mov
enter
dec
xor
mov
mov
int3
popf
add
adc
dec
aad
je
jge
imul
mov
cmp
xor
mov
jae
cltd
bound
call
loope
fcomi
cmc
rcr
rorb
add
jo
and
mov
movsb
into
sbb
ret
sbb
mov
xchg
nop
stos
jp
jb
mov
push
xor
and
mov
mov
test
notl
adc
xchg
iret
mov
xchg
and
pop
xchg
cmp
mov
or
push
pop
call
bound
inc
push
dec
cmp
add
or
ss
adc
popl
push
test
pushf
fisubs
push
jmp
and
stos
jmp
rol
lret
xchg
adc
outsl
xchg
mov
cltd
sbb
orl
xor
jne
fcomp
in
sahf
imul
or
xchg
xchg
mov
pop
xor
xor
fildll
insl
pop
or
das
jp
and
dec
lret
cwtl
hlt
cmp
xchg
in
stc
xchg
and
inc
mov
mov
and
mov
or
ret
jp
int3
adc
jge
mov
mov
push
add
aas
pop
cmp
push
push
sahf
xor
cmp
xor
jp
xchg
pop
adc
mov
add
mov
pop
adc
pop
in
push
sbb
in
and
jno
je
pop
sub
mov
adc
or
jns
aas
sbb
xor
stos
mov
dec
and
addb
call
add
leave
out
cmp
mov
ret
mov
mov
dec
cld
push
aas
jnp
arpl
push
xor
shll
pop
xor
or
push
dec
insl
ss
pop
test
subb
xchg
cmp
fsub
mov
add
push
and
jecxz
mov
pop
pop
pop
loopne
js
lret
in
jb
pop
pop
in
inc
sub
cwtl
roll
xlat
sahf
hlt
hlt
dec
aaa
fprem
outsl
xor
bound
push
sti
mov
mov
movsbl
inc
rorl
mov
shrb
das
dec
cwtl
adc
in
loopne
mov
aas
std
rcr
or
lea
pushf
sbb
rcrl
mov
iret
arpl
mov
mov
sub
add
dec
add
push
cmp
popa
rclb
andb
iret
imul
push
sbb
cmp
lcall
push
loopne
inc
push
pop
sub
lcall
and
cmp
cmp
or
cmp
mov
mov
inc
lea
mov
jnp
arpl
sub
sub
insl
gs
test
jmp
addr16
insl
mov
adc
cmp
xor
lods
aam
mov
jne
ret
xor
or
jle
into
loop
insb
arpl
sbb
int
mulb
dec
push
mov
sub
sbb
dec
out
xchg
or
ljmp
pop
xchg
and
jnp
lods
mov
int3
xorl
adc
push
lret
pop
adc
mov
push
in
pop
aas
xchg
cmpb
in
divl
inc
jo
outsl
inc
and
cmp
cmp
adc
lds
and
mov
jns
xor
shl
jne
push
and
movsb
push
inc
cmp
adc
outsb
mov
dec
les
mov
scas
aam
lea
xor
pop
pusha
xlat
popa
adc
lock
insl
add
cmp
mov
outsl
adc
mov
mov
jmp
outsb
sbb
scas
fdiv
mov
mov
jg
dec
inc
mov
lock
leave
lret
inc
test
xor
sub
clc
jno
lret
mov
jo
hlt
xchg
cltd
pop
out
cwtl
aaa
rcr
rolb
scas
push
jmp
push
lods
inc
mov
sarb
inc
xor
aam
cld
xchg
push
vpavgb
mov
ja
test
ljmp
mov
cmp
xor
push
and
decb
pop
fstpt
ja
mov
add
incl
and
mov
arpl
enter
inc
out
jns
sbb
cltd
push
js
mov
fisubrl
mov
pusha
add
sub
jns
mov
adc
dec
iret
sub
lea
adc
insl
jne
pop
stos
in
into
jl
faddl
sbb
in
jnp
call
push
or
fmuls
fbld
or
cmp
movsb
pop
and
cmpsb
aas
lds
push
mov
xchg
mov
stc
insb
inc
pusha
lar
fidivs
push
jp
ljmp
ds
adc
mov
mov
fdivs
cld
push
rorb
ds
xlat
test
cli
enter
sar
inc
inc
mov
mov
jge
inc
adc
lods
sbb
push
int3
jmp
ljmp
sub
mov
inc
outsb
sub
adc
test
mov
xchg
je
xor
and
idivb
icebp
icebp
int3
mov
and
sbb
ja
add
lods
jb
pop
cmpsb
or
paddd
pop
shr
punpckldq
adc
rcrb
repnz
add
in
jns
clc
jne
xchg
jecxz
fnsave
stc
cmpsb
jo
jp
mov
pop
add
arpl
insl
movsl
fdivrl
or
adc
push
push
pushf
mov
js
loope
in
les
lods
fs
decl
sub
roll
popf
jno
mov
in
xchg
xor
outsl
push
test
cmp
or
mov
adc
andl
mov
add
stos
shrb
mov
insl
leave
mov
mov
mov
jmp
loope
in
cmp
xchg
push
scas
cld
lock
mov
and
sbb
dec
cmp
inc
fcmovb
aas
push
pinsrw
lahf
pop
sub
inc
in
xor
pushl
cmp
lahf
add
mov
pop
push
scas
ljmp
jmp
lret
sbb
add
cmpsl
xor
mov
call
stos
jae
adc
add
xor
ja
dec
xor
sbb
sbb
lret
push
dec
adc
cmp
cmp
testb
nop
jmp
rcl
jo
cmp
mov
enter
lock
rolb
stos
movsb
test
cmc
rol
cmp
cli
jae
hlt
mov
movsb
xchg
cli
ss
cmp
jl
stos
icebp
arpl
cmc
mov
daa
pusha
test
mov
lcall
inc
xor
and
or
movsb
jecxz
in
xchg
add
pop
dec
fldcw
inc
xchg
or
scas
enter
ljmp
loop
adc
and
out
pop
cmc
cmp
sub
xchg
xchg
movsl
lods
popa
ss
mov
test
out
xor
pop
push
addr16
js
mov
movsl
pop
push
insb
dec
and
push
push
lahf
scas
lods
hlt
aaa
sti
xlat
adc
test
jne
jecxz
adc
in
push
addl
cmpl
mov
movsl
nop
lret
or
lret
mov
loop
adc
and
push
xchg
popa
fiadds
mov
mov
add
mov
sbb
and
cmc
std
pop
mov
lods
xor
jecxz
es
pop
loopne
fmul
inc
lock
mov
fdivrl
adc
lahf
cmpb
xor
jnp
xor
fcomps
fadd
rolb
leave
mov
cmp
pop
insl
int
sbb
ficompl
call
cmc
shrl
and
pop
mov
js
mov
inc
repnz
call
pop
dec
shl
pop
jnp
aaa
mov
adc
hlt
xchg
neg
shr
aaa
mov
lcall
sub
mov
cmpsl
inc
xchg
xor
fidivl
icebp
push
cs
repnz
add
loop
scas
fisubrs
stos
outsl
mov
je
call
mov
cmpsb
dec
cmpsb
adc
pop
je
or
mov
inc
fsincos
fwait
loopne
pusha
mov
inc
jle
pop
sbb
jecxz
add
stos
mov
stc
ret
setno
call
out
inc
inc
in
and
pop
out
dec
jle
adc
je
stos
push
mov
icebp
dec
xchg
jg
ljmp
mov
cmp
add
pop
inc
fimuls
or
or
in
adc
mov
xor
ljmp
push
inc
mov
pop
jbe
push
pop
daa
and
sarl
mov
scas
imull
cmpl
pusha
fldcw
repz
cmp
int3
mov
cld
insl
inc
add
xor
int3
sbb
mov
cmpsb
jge
aad
pop
in
les
mov
movsb
xor
dec
mov
and
mov
cwtl
lds
push
jae
dec
push
xchg
push
imul
je
and
xchg
add
or
mov
loope
loope
add
xor
ljmp
insl
int
push
or
outsl
cmp
xchg
ds
sbb
ficoms
in
mov
mov
add
aam
fistps
js
or
cmp
xchg
and
icebp
loop
pop
mov
lds
ret
jo
xchg
and
or
ja
ljmp
lods
xchg
rcl
fsubp
repz
xchg
sahf
inc
lcall
xor
adc
pop
inc
insl
pop
lahf
mov
mulb
icebp
test
cwtl
fmuls
popa
roll
lcall
cmp
repz
lods
push
loope
xor
sbb
xor
outsl
cmp
adc
jmp
mov
test
or
lock
xor
jle
mov
fisttpll
ljmp
mov
lahf
xor
or
mov
aas
lcall
push
cmp
outsb
les
cli
out
dec
mov
cmp
addr16
xchg
cbtw
cs
xlat
pop
jmp
pop
or
jl
mov
rcl
jge
inc
pop
out
jbe
xchg
das
jns
sbb
ja
mov
push
jmp
xor
cmp
aaa
dec
fdivrs
lret
fistps
ret
pop
push
lcall
shll
xchg
inc
mov
stos
jae
pop
daa
dec
imul
fwait
arpl
mov
mov
xor
push
mov
add
cld
insl
pop
pop
sbb
or
stos
data16
push
cmp
xor
fnstenv
pop
or
add
inc
jmp
lods
xor
adc
out
sub
sub
mov
popa
jno
shl
inc
mov
adc
fistl
mov
push
cmc
mull
adcb
and
and
dec
bound
xor
push
addr16
scas
ds
test
inc
mov
in
stos
pop
jmp
dec
cmp
iret
xor
inc
xchg
scas
or
inc
in
xchg
mov
push
cmp
jmp
jbe
sbb
mov
pop
pop
gs
xchg
popa
push
adc
lods
jmp
xchg
int
sbb
sub
das
xchg
test
xor
inc
push
jae
in
xorl
clc
popf
xchg
lret
push
fs
nop
ja
std
das
out
inc
cmp
in
adc
xchg
or
in
jl
test
push
and
shlb
xchg
mov
test
pushf
in
mov
lods
jge
sub
jg
push
subl
push
mov
je
imul
jle
rorb
or
mov
mov
xchg
icebp
mov
ljmp
in
cmp
or
fisttpl
lea
dec
in
and
xchg
inc
testl
inc
out
jo,pt
ljmp
pop
fists
adc
hlt
inc
push
arpl
push
cli
sbb
adc
ret
cmp
js
lret
nop
daa
arpl
jmp
test
rol
adc
cmpsl
mov
int3
or
xchg
mov
test
pop
sub
cmpsl
cmpsl
pop
xchg
push
jmp
test
jg
in
mov
mov
pop
pop
xchg
xchg
insl
stos
pop
aas
lods
rclb
test
sar
xchg
int3
xlat
mov
pusha
insb
or
in
les
movsb
cmc
xor
mov
dec
xchg
and
dec
out
std
dec
movl
push
and
aad
xchg
or
xchg
cld
and
xor
add
es
push
mov
push
xor
inc
adc
xor
or
outsl
sahf
mov
imul
push
push
xchg
sahf
push
insl
xor
push
in
cmp
push
push
cmpl
xlat
or
mov
add
call
pop
sarb
test
btc
mov
xchg
xor
and
push
xor
lods
jge
iret
sbbb
out
lds
mov
lret
sub
test
je
stos
inc
push
stc
push
jle
test
lcall
jp
test
pop
adc
lcall
and
mov
std
add
dec
test
adc
sbb
xor
inc
add
xor
loopne
jg
loop
aad
lret
neg
and
insl
dec
xlat
in
mov
fnsave
add
inc
scas
shrl
rclb
popa
int3
push
das
mov
fcoml
pop
and
pushf
inc
sbb
xchg
inc
addb
rep
inc
mov
aas
fstl
daa
mov
shl
out
int
out
imul
jno
xchg
loope
xchg
sbb
mov
sar
out
or
jl
cwtl
mov
lods
daa
adc
dec
loope
sbb
cmpsb
jo
pop
incl
test
jns
jl
lock
mov
push
jle
pop
rcr
scas
stos
mov
inc
pop
sub
popf
arpl
sub
push
fs
pop
inc
rcrl
mov
push
push
loopne
mov
fdivl
nop
cltd
jecxz
popf
xchg
mov
outsb
push
mov
scas
scas
sahf
sarl
stos
sub
sbb
loopne
mov
add
adc
and
add
fldt
mov
sub
dec
mov
mov
mov
cmp
inc
adcl
pop
dec
mov
sub
dec
ficompl
jo
mov
add
push
loop
xor
push
jmp
jge
mov
ror
cmp
adc
dec
jle
out
or
push
ds
jle
neg
pop
cmc
in
test
rcrb
imul
in
fcomi
jecxz
xor
cmp
xor
in
pop
pusha
ja
cmpsb
cmc
pop
and
bound
push
or
loopne
push
lcall
jmp
aas
stos
xor
ss
push
mov
ljmp
mov
sbb
pcmpgtw
push
rcrb
std
pop
cmpsl
imul
hlt
add
xor
movsl
fisubrl
jl
xchg
ret
and
jae
and
push
sub
decl
dec
mov
sub
nop
xchg
cwtl
dec
lcall
lds
das
cmc
in
scas
loop
std
mov
push
data16
sbb
in
in
cmpsb
ljmp
add
test
addl
ss
test
aam
cmp
xchg
sti
inc
and
nop
ret
popa
cli
jb
lahf
adc
stc
push
jge
lods
scas
fildll
dec
or
cmp
jb
lods
stc
xlat
scas
stos
fists
int
outsl
or
mov
add
fstps
inc
push
loope
cltd
sahf
adc
pop
or
je
xchg
jns
add
fs
sub
sub
icebp
push
int
addl
inc
insl
cmp
pop
dec
nop
mov
jo
lret
lods
int
add
jmp
mov
iret
int
testl
cmp
or
sarb
jne
sbb
adc
lahf
inc
sub
pop
jo
xor
mov
out
addr16
addb
mov
mov
dec
mov
pop
xchg
mov
cmp
push
lret
fs
pop
bound
sub
sbb
add
pop
mov
mov
inc
fcmovne
add
and
mov
jbe
mov
xchg
std
and
xchg
mov
push
loopne
cmpsl
fistl
mov
xor
xchg
lods
xor
aaa
jne
xor
xchg
out
push
add
stc
push
int3
push
cmp
nop
mov
add
test
xor
sbbb
das
jbe
ds
sub
xchg
xor
dec
pop
sub
mov
or
or
mov
sbb
adc
rcll
mov
arpl
std
out
and
and
and
or
sub
xor
mov
mov
pop
mov
repz
xchg
into
sti
mov
sbb
pop
xlat
popf
imul
fmuls
test
or
iret
into
dec
scas
mov
imul
enter
repz
faddp
lea
mov
rclb
int3
xorb
scas
push
out
fwait
rolb
mov
xchg
int3
sbb
iret
xchg
xor
xchg
mov
aam
xor
fldcw
and
in
sub
adc
cmc
mov
jle
fs
xchg
pop
es
xor
mov
and
sarl
loope
cltd
mov
mov
mov
sbb
fsts
inc
lods
aas
and
push
jno
je
bnd
or
shr
cli
mov
mov
jl
sarb
outsb
insl
sub
das
mov
jp
jno
out
cld
mov
dec
and
xchg
push
in
and
stos
adc
in
movsb
jmp
cli
xlat
mov
jge
and
ja
insb
xor
xchg
gs
jge
shlb
das
mov
adc
ljmp
test
mov
cmpsb
stos
inc
jge
push
xor
adc
into
out
aad
fwait
sub
pop
push
mov
pop
sbb
mov
xchg
xor
sbb
out
loop
jns
pusha
push
or
sti
inc
cmp
dec
arpl
mov
cs
mov
jb
push
in
xlat
test
xchg
jl
xchg
insl
out
imul
test
inc
fstps
add
clc
and
inc
int3
out
push
jnp
xor
daa
push
mov
push
enter
or
jge
sbb
imul
mov
mov
or
sarb
jle
bts
lods
mov
mov
loopne
xchg
ret
lahf
dec
stos
scas
ret
pop
out
cltd
in
and
jl
or
fstps
sub
add
pop
das
add
ret
out
popa
jl
pop
stos
gs
cmp
pushf
icebp
sbb
inc
add
rclb
loope
cmp
cmp
or
push
inc
icebp
into
in
jne
sahf
adc
test
pop
inc
dec
divl
in
cmc
xor
xchg
lcall
push
mov
lret
cltd
pop
xor
rolb
xor
and
ss
loopne
out
les
and
sahf
cli
xchg
mov
lock
sub
lds
inc
pop
mov
lahf
xchg
sahf
arpl
fistpll
xlat
mov
and
xchg
fadds
mov
imul
push
or
out
jge
rcr
jnp
cmc
stos
cmpsb
jbe
rorl
mov
xor
xchg
and
xchg
call
fnstenv
mov
jmp
and
sbb
cmp
ja
pop
jo
test
jns
movsb
inc
push
pusha
cmp
popa
fdivs
fcomip
and
faddp
mov
fidivrs
scas
sbb
outsb
arpl
and
sti
mov
pop
pop
in
cmp
imul
adc
sub
std
lds
cli
jge
sub
pop
cltd
pop
orb
stos
mov
data16
addr16
pop
outsb
loopne
mov
sbb
ja
xor
lods
mov
and
inc
push
sub
iret
out
ljmp
and
fiadds
pop
dec
push
aad
andb
xchg
les
mov
or
popf
cwtl
addb
jnp
sarb
cs
aad
mov
out
or
in
and
insb
jo
aas
add
ret
and
jp
loopne
call
sarl
push
xchg
repz
xchg
xlat
pop
cld
xor
dec
lock
arpl
inc
pusha
mov
stc
push
js
xchg
adcl
mov
stc
xor
inc
xchg
push
leave
adc
lret
cwtl
arpl
popa
dec
popf
pop
or
cmpsb
xor
fwait
and
test
mov
dec
or
scas
pop
das
jbe
sbb
stc
mov
movsb
cltd
xor
mov
or
lret
popl
inc
inc
mov
in
xchg
fdivrl
iret
mov
shll
call
sbb
iret
sbb
in
xor
pop
jo
jmp
repz
dec
mov
add
sbb
jns
aam
mov
outsb
outsl
cwtl
rcl
push
mov
mov
lcall
xor
popa
popa
fildll
push
lahf
adc
pop
push
call
jb
mov
pop
inc
jo
ss
xor
test
call
call
rolb
hlt
enter
push
cmp
arpl
scas
or
into
fwait
mov
mov
sbb
shlb
ret
jp
pushf
cmp
xor
je
mov
movsl
and
loopne
ret
xor
add
mov
sub
scas
ljmp
fildll
jl
push
xchg
mov
pop
sub
sti
cmpl
and
cmp
fists
rcll
xchg
scas
mov
dec
js
inc
fsubrs
mov
mov
cmpsl
xchg
add
xchg
int
mov
or
dec
outsl
cmc
repz
cltd
push
sarl
dec
dec
xchg
and
gs
in
imul
int3
fs
xlat
pushf
std
int
sti
mull
xor
xchg
aam
mov
jp
cmpsb
mov
out
xchg
ror
fcmovnu
push
je
sbb
xchg
sub
arpl
pop
jp
sarl
mov
lahf
jge
pop
jge
adc
xchg
ret
mov
push
and
push
mov
adc
out
jno
jl
jns
mov
xchg
jbe
or
loopne
pushf
scas
mov
mov
ret
jg
fnstcw
sbbb
daa
sti
call
fmuls
lcall
add
xor
out
mov
xchg
out
push
cli
das
repnz
test
sarl
lods
out
mov
scas
mov
xor
xor
arpl
repnz
mov
push
cmpb
sbb
jb
pop
ret
sbb
out
arpl
lret
and
daa
leave
mov
xor
jno
fnstenv
inc
push
popa
js
pop
adc
xchg
in
dec
je
mov
sub
xchg
pop
pop
loope
popf
or
nop
in
pop
daa
or
mov
aaa
jp
shld
into
arpl
enter
movsl
sub
ret
mov
sub
mov
in
mov
dec
push
cmp
paddsw
int3
push
fidivs
jle
and
and
jmp
cmpsb
das
dec
sub
inc
stos
clc
mov
push
mov
inc
lret
or
xor
add
outsb
xchg
les
dec
cmp
popa
push
xchg
test
outsl
pusha
ficompl
arpl
popa
stc
stc
dec
jbe
imul
imul
cmpsb
push
shrl
xchg
fmul
cmp
test
sub
lods
adc
leave
add
jl
xchg
jbe
pop
insb
push
jg
push
or
jbe
lock
pop
jecxz
pushl
mov
sub
push
mov
arpl
sub
test
mov
pop
lea
inc
sub
mov
xor
mov
iret
outsl
xlat
dec
test
lahf
xor
jb
loope
arpl
sahf
inc
or
icebp
jns
dec
aas
dec
or
lret
ret
adc
adc
mov
and
je
out
rcrb
mov
call
fcoml
xchg
push
in
inc
fldenv
inc
popa
movsb
insb
shlb
adc
pop
push
imul
mov
mov
dec
aas
rcll
mov
mov
mov
adc
fcmovnbe
push
pop
data16
aaa
int
sub
xchg
mov
mov
or
ret
lock
push
lea
fsubl
dec
sub
pop
xlat
sub
cmp
adc
sub
sbb
xchg
jo
stos
enter
loop
jmp
bound
out
nop
ret
cwtl
movsl
mov
lds
mov
push
fcompl
sub
add
sahf
stos
ljmp
mov
pusha
enter
mov
jecxz
and
daa
insl
cmc
rcrb
js
cs
jb
jg
or
mov
pop
ds
mov
push
stos
loop
jecxz
jns
mov
and
ret
frstor
inc
mov
cmp
sub
lret
add
dec
push
dec
loop
pop
lods
inc
mov
and
rcll
xor
or
mov
les
mov
inc
in
add
loop
mov
retw
fcom
and
lcall
jnp
mov
imul
jns
clc
sub
mov
call
testl
ret
loop
jmp
lahf
dec
sbb
jp
shll
sub
push
lock
dec
movsb
sub
imul
lret
mov
or
into
mov
mov
mov
mov
in
mov
jno
sti
lods
mov
lds
cli
jnp
aad
push
sub
addr16
cli
dec
dec
push
scas
sbb
shll
and
shr
xor
xor
pushf
dec
jecxz
cmpsb
xchg
lcall
sti
leave
mov
mov
dec
inc
fdivs
rcll
aas
xchg
dec
mov
mov
push
inc
sti
inc
loop
inc
sbb
jno
in
push
and
rorb
dec
mov
mov
ret
push
ret
xchg
aam
inc
push
ret
or
push
sub
test
popa
jmp
jle
in
add
addr16
neg
jne
shll
sub
sbb
or
mov
jnp
mov
push
push
and
fisttps
sbb
movsl
mov
xchg
jle
push
mov
in
xor
cltd
sub
jl
inc
mov
mov
xlat
pop
push
ret
push
fmul
cmp
pop
lcall
jbe
xor
cld
push
mov
outsb
imul
loope
shll
mov
or
pop
lcall
aam
repz
xchg
add
mov
icebp
stos
xorb
pop
inc
imul
and
push
les
iret
clc
daa
jle
xor
and
inc
jne
out
cmpsb
ds
js
ja
sbb
ret
in
mov
adc
or
pop
and
push
test
mov
in
ss
and
sbb
imul
adcb
pop
mov
test
inc
xchg
cmp
sub
je
push
or
test
imul
add
xchg
adcb
hlt
insb
mov
pop
inc
pop
mov
jb
dec
mov
jns
mov
cli
mov
cmp
sub
mov
in
sysenter
int3
lods
ja
outsl
jo
or
jnp
jge
or
cld
xchg
sub
pop
sub
mov
dec
and
adcl
je
ljmp
jb
insb
sub
clc
adc
data16
mov
gs
inc
pop
ljmp
mov
xchg
xchg
sbb
rcll
lds
fnstenv
pop
mov
lret
daa
dec
pop
add
jo
in
stos
insb
ljmp
nop
sti
adc
mov
mov
rcrb
pop
fsub
jae
fbld
cwtl
mov
jae
mov
xor
xor
mov
rcll
cmp
pop
or
add
or
sbb
dec
pop
xchg
adc
sbb
cmc
repnz
bound
fistpl
add
push
inc
sbb
cli
lods
out
inc
inc
add
adc
loop
mov
mov
mov
incb
lahf
test
arpl
rcrl
int3
push
arpl
xor
arpl
loop
cld
in
dec
frstor
js
pop
push
lock
aaa
xchg
out
pop
inc
jno
push
loope
inc
int
cmp
and
mov
pop
ret
inc
inc
je
dec
mov
sti
lahf
sub
add
cmp
mov
xor
stos
sbb
cmpl
jmp
loope
mov
test
pop
cmpl
jle
adc
ja
mov
cmp
pop
mov
sbbb
rcrl
xor
mov
push
mov
cmp
aam
add
sbb
sub
jl
int3
fmull
outsl
lahf
inc
xchg
sub
inc
xchg
mov
dec
xchg
lods
add
dec
inc
js
mov
add
fidivrl
inc
mov
push
adc
aas
cld
adc
xchg
es
lods
lds
aaa
imul
pop
sbb
push
xchg
mov
outsl
inc
adc
stos
ja
push
cli
dec
mov
movsb
xchg
mov
fnstenv
and
sbb
jle
iret
push
movsl
test
dec
outsl
lods
inc
clc
dec
popf
mov
shll
int3
xchg
sub
xor
jno
insb
dec
cltd
into
add
push
xor
jle
xchg
xor
fcom
mov
repnz
push
jns
loop
jmp
fwait
mov
sub
or
das
xor
cs
xchg
call
popf
cli
pusha
mov
xor
dec
adc
adc
aam
and
mov
loopne
mov
test
push
cmp
xor
push
ficoms
and
lret
arpl
jge
add
mov
cmp
pop
and
sti
cmc
xor
pop
cmp
jb
jae
pop
cmp
pop
fcomp
mov
incl
insl
call
ss
inc
fs
lds
bound
mov
dec
int
mov
icebp
dec
ret
ljmp
rcll
lret
stc
bound
mov
xchg
dec
cmp
xor
cmp
sub
fwait
add
mov
add
divl
mov
es
out
iret
bound
dec
bound
ja
sbb
and
std
xchg
mov
push
xchg
adc
insb
js
and
repnz
inc
mov
push
adc
xchg
sarb
push
pop
out
jae
leave
sbb
inc
sbb
lock
aam
mov
movsl
sub
sub
rep
es
add
lcall
sbb
sahf
lret
or
pop
popa
fwait
adcb
xor
jne
mov
cs
stos
arpl
and
ja
fnstsw
mov
fnsave
dec
add
loopne
and
jb
mov
cmp
divb
movsl
jge
das
cmp
mov
ret
xor
out
je
adcl
testb
pushf
outsl
xor
cmp
pop
icebp
xchg
sbb
test
test
push
in
adc
add
sub
popa
adc
adc
jo
pushf
push
sub
fnstsw
loopne
jg
jbe
fsubl
mov
cmp
popf
push
out
push
cld
mov
sub
xor
aaa
mov
fists
inc
pop
pop
xor
arpl
mov
dec
in
sbb
mov
pop
fisttps
jmp
int
adc
push
dec
ficoml
xchg
jno
dec
pop
cmp
push
sub
sub
xchg
ljmp
loop
imul
mov
pop
sbb
int3
inc
stos
sbb
xorl
xchg
mov
sub
call
push
or
call
and
sti
nop
in
jno
pusha
add
test
loop
cmpsb
das
xchg
in
fnstsw
jns
xor
dec
inc
jecxz
mov
sub
xlat
sbb
dec
push
mov
pop
jecxz
mov
movb
outsb
outsl
mov
jne
dec
mov
xor
sub
jno
jge,pt
add
cmp
pop
jecxz
lods
ja
cmp
sub
jno
dec
movsb
jb
sbb
mov
incb
and
loop
push
mov
pop
dec
out
xor
jg
sub
fiadds
mov
dec
or
outsb
negb
testl
or
add
inc
aam
imul
push
cmp
stos
leave
addr16
pusha
cmc
pusha
jl
repz
mov
je
xor
push
mov
dec
pop
sbb
mov
mov
mov
mov
adc
jo
lods
jae
scas
movsb
cli
lcall
jg
push
loopne
repnz
and
add
mov
js
mov
add
arpl
popa
repnz
xor
add
in
xchg
popa
iret
mov
adc
xor
jg
add
cwtl
xchg
in
and
push
inc
jno
xchg
xchg
call
sub
dec
out
lret
fs
cmp
fnstenv
and
fistpll
inc
add
xor
xor
jecxz
mov
pop
xchg
xchg
hlt
lock
fdiv
mov
push
divl
fisttpll
cmp
cmpsb
lcall
and
xor
inc
dec
shlb
cli
sub
sbb
imul
pushf
cmp
xor
or
in
cwtl
mov
filds
mov
dec
pushf
ret
movsl
repz
in
int
shll
and
rcll
ja
in
pusha
ss
test
jg
inc
into
dec
inc
jno
jge
xor
jno
xchg
sub
mov
nop
into
inc
sbb
ljmp
xor
popf
iret
add
repnz
or
cld
scas
mov
mov
repnz
stos
clc
xor
movsl
nop
shrl
pop
fisubl
stc
inc
imul
push
leave
test
cmp
inc
clc
jo
inc
add
int3
push
scas
popf
sub
or
mov
push
rcrb
sbb
je
clc
and
dec
xchg
movsl
lret
jmp
mov
mov
adc
das
mov
fisubs
dec
adc
daa
pop
mov
test
inc
mov
mov
xchg
jnp
and
pop
xor
jg
packssdw
sub
lods
cmp
mov
fdivrl
dec
lods
jno
add
push
lock
add
pop
inc
neg
adc
mov
jae
leave
push
call
ffreep
mov
movsb
sbb
push
fsubrl
cmp
sahf
outsl
psubsw
push
mov
fwait
jge
jp
lahf
pop
les
cld
arpl
pop
cmp
mov
mov
sbb
sbb
int
addr16
xchg
cld
jo
nop
cmp
dec
dec
sub
scas
mov
scas
or
mov
int3
jo
mov
mov
les
shl
inc
jo
xchg
adc
or
add
pop
push
call
mov
stos
js
lret
mov
cli
pushf
mov
js
cmp
xor
dec
nop
fsts
lds
dec
insb
clc
jae
ljmp
jg
leave
aam
jmp
bound
cmpsb
and
adc
mov
popa
push
lods
jle
xchg
or
or
scas
std
push
and
sbb
push
cmp
in
add
mov
inc
mov
xchg
pusha
inc
xchg
ljmp
lea
and
mov
stos
mov
add
enter
cmp
int3
jecxz
and
stos
sar
movsb
pop
mov
sti
dec
in
out
sahf
cli
fstl
rol
test
sub
shlb
insl
jmp
add
dec
jno
imul
scas
rclb
lahf
jl
cmc
shrl
mov
push
mov
dec
packssdw
jge
in
sub
dec
mov
addb
adc
mov
jge
out
sub
bound
jle
jge
mov
aam
cmp
out
dec
mov
test
push
leave
sub
sbb
roll
cmp
es
jle
jbe
fstpl
push
jne
inc
mov
shll
icebp
xchg
je
gs
loopne
lds
pop
fisubs
jp
cmc
lcall
sbb
cwtl
pop
fldl
pop
push
aas
xchg
mov
inc
inc
xor
cld
xchg
mov
mov
mov
fcmovb
inc
jecxz
sub
xchg
test
push
mov
orl
and
or
imul
into
jp
xor
cli
mov
stos
cmp
lea
pushf
roll
or
jmp
stos
add
dec
inc
ja
fbld
out
pop
fsubl
push
leave
xchg
sbb
sbbb
hlt
and
mov
adc
pop
sbb
sub
mov
jge
jl
popl
mov
jbe
in
push
jae
in
adc
xlat
jne
xchg
inc
or
cld
or
enter
xchg
cmp
or
loop
cltd
clc
or
test
cmp
pop
sub
stos
scas
pop
jmp
arpl
fnsave
cmp
insl
cmp
jne
icebp
in
mov
cmp
pop
lods
mov
push
shrb
jne
dec
popa
lahf
jb,pn
mov
out
sahf
out
aam
daa
data16
bound
add
scas
and
mov
repnz
cmp
pop
stos
mov
dec
adc
js
mov
ds
mov
ja
arpl
test
in
dec
inc
ljmp
inc
out
pop
out
dec
jnp
repz
daa
xor
mov
stos
mov
jbe
aas
loop
mov
jp
mov
sti
cmpsb
adc
adc
popf
and
repz
cmp
std
mov
jge
das
sbbl
daa
adc
mov
xchg
mov
ss
sahf
inc
ror
push
ljmp
ja
notb
xorb
mov
cmp
push
push
add
aam
mov
lds
or
cmp
mov
loop
mov
cmpsb
js
scas
imul
ds
rcll
cld
loope
iret
test
out
fs
ret
jne
sbb
pop
add
adc
or
imul
adc
cli
cwtl
and
pop
and
cmp
dec
jmp
mov
inc
fucomip
mov
aaa
imul
mov
adc
cmp
mov
push
in
pop
jae
mov
aad
adc
jecxz
pop
dec
sbb
push
push
mov
es
in
pop
cld
sti
cmp
movsb
or
in
repnz
mov
in
xorl
cli
or
sub
xchg
nop
in
add
jle
fidivs
mov
fwait
negb
hlt
dec
out
fiaddl
adc
lahf
fcomps
fbstp
and
scas
inc
dec
sbb
mov
pop
cld
push
pop
jle
movsl
lea
andl
xlat
cmp
into
pop
dec
or
or
rcr
lods
leave
push
fdivrl
xchg
movsl
dec
mov
xor
imul
insb
cli
lods
scas
push
in
pop
push
ja
movsl
cltd
xor
cmp
mov
and
lahf
xchg
sbb
mov
scas
addr16
orb
jge
xchg
sbb
mov
push
les
adc
mov
in
lds
test
loop
dec
mov
push
je
pop
mov
dec
out
fstl
jnp
mov
pop
pop
push
add
shl
mov
mov
cli
jle
iret
sbb
inc
movsl
dec
insl
mov
das
add
cmp
or
leave
dec
pop
add
loopne
inc
push
scas
xor
les
into
mov
cmp
sbb
sub
sbb
out
push
scas
iret
push
cmpsb
hlt
jmp
inc
mov
cwtl
dec
cmp
pop
xchg
xor
std
sub
rorb
sbb
xor
andb
push
dec
jmp
push
sbb
loop
out
lods
sbbl
add
xchg
mov
lahf
dec
push
xchg
outsl
and
and
addr16
xor
in
repz
cmc
or
cmp
out
jb
xor
jmp
adc
add
jno
xchg
push
mov
fidivrs
subb
rcl
cmp
pop
mov
lret
xchg
ret
mov
or
popf
mov
xor
mov
pop
neg
xor
mov
pushf
sti
inc
mov
jle
mov
lahf
mov
inc
outsl
xchg
aaa
jno
inc
inc
fbstp
jge
mov
stos
jge
cwtl
sbb
rclb
out
jno
fstpt
jmp
imul
cmp
inc
std
mov
ds
mov
sbb
jmp
jnp
and
add
and
add
data16
js
mov
cmpsl
jmp
popa
dec
sti
mov
sub
xor
movsl
fisubs
data16
xchg
xchg
movsb
dec
mov
adc
addr16
cmpsb
fdivrl
clc
or
shll
mov
scas
ret
xchg
sarl
movsb
ljmp
jg
rorl
adc
stc
sbb
cmp
iret
pop
je
imul
push
int
outsb
dec
mov
xor
jg
scas
insl
mov
jge
jg
das
jg
fwait
sti
rcrl
sbbl
loope
ja
xor
or
scas
cs
dec
repz
cmpb
loop
nop
popa
ret
bound
sbb
clc
mov
sub
scas
repnz
loopne
cmp
rorl
inc
sbb
insb
movsb
in
ss
jp
scas
inc
mov
cld
cli
pop
nop
jae
fsubrs
enter
add
test
push
subl
mov
mov
js
enter
pop
fsubl
dec
push
push
xchg
xlat
or
push
ja
pop
ljmp
fwait
in
jp
xchg
sahf
mov
mov
test
or
dec
aam
mov
push
push
jns
cld
das
out
xchg
aam
xor
pop
cmp
daa
movsb
lret
xor
pop
mov
jns
fs
call
xor
clc
iret
pop
or
push
sahf
pusha
pop
or
adcb
sub
mov
mov
mov
jbe
mov
or
dec
out
or
sbb
loopne
mov
fnop
je
mov
data16
inc
jae
aad
insl
jne
stos
jg
mov
jmp
std
mov
dec
ds
sub
mov
popa
cwtl
adc
sbb
mov
inc
call
add
movb
jnp
lock
sbb
call
dec
out
mov
das
inc
test
test
push
les
xor
push
adc
xchg
cmp
push
ds
mov
xchg
add
addr16
pop
or
movsb
jge
cmp
popf
mov
pop
int3
cmc
adc
xor
mov
mov
xchg
sti
cmp
jae
cmp
add
shrb
repz
xor
sbb
push
sar
sbb
aad
mov
aam
into
mov
outsl
mov
cmc
ret
fsts
cmp
lcall
adc
call
rcrl
push
cmp
shl
fwait
daa
cwtl
pop
xchg
or
mov
rep
movsb
mov
sub
cltd
mov
cld
clc
lea
data16
addr16
imul
movsb
dec
add
fdivl
or
xorb
sbb
inc
ljmp
xchg
out
add
sub
das
cwtl
jbe
lret
mov
cwtl
movb
cmp
sub
daa
cmp
loopne
cld
test
std
pop
insb
lret
ret
bound
add
pop
loope
lods
roll
or
int3
lea
adc
out
aaa
or
incb
jne
jp
rol
in
fs
lret
std
iret
pop
sub
clc
repz
inc
mov
cmp
push
enter
push
out
mov
mov
out
mov
sbb
mov
lahf
popa
mov
xor
outsl
movsb
pop
daa
xchg
dec
nop
dec
popa
das
add
imul
loope
in
push
mov
and
mov
jge
mov
mov
fs
fidivrl
adc
push
mov
repnz
jne
mov
jge
xchg
mov
mov
cmp
int3
cmp
or
or
pop
cmp
sarl
dec
sub
mov
ljmp
bswap
or
into
mov
insl
xchg
inc
jbe
jmp
clc
cmp
xchg
xor
add
in
pushf
popa
push
or
dec
jle
leave
cmp
mov
adc
push
test
mov
mov
cmp
fucomip
xor
into
add
xchg
mov
std
into
push
pop
les
repz
fnsave
loop
jmp
inc
aam
pop
in
stc
add
jno
dec
outsb
aaa
iret
mov
scas
xor
xchg
sbb
out
je
stos
jecxz
jo
lret
aam
rolb
icebp
jns
adc
fldcw
popf
leave
test
or
cmp
sub
pop
in
iret
mov
add
push
imul
sbb
or
lahf
in
jo
subl
ja
cmc
rolb
push
or
mov
stos
cmp
lret
sahf
cli
fnsetpm(287
sub
mov
push
xchg
cltd
nop
cmpsb
and
shlb
loopne
fmull
iret
fwait
mov
mov
jae
xor
xor
fnstcw
rorb
push
xor
mov
adc
shld
fsubrp
jge
pop
jl
lret
xor
or
flds
and
test
push
movsl
jnp
shr
popf
ds
dec
testb
rcrl
fucom
dec
subl
cmp
bound
in
fldt
aad
in
cmp
or
sub
ret
or
fisttpll
sti
data16
xchg
aam
add
jnp
inc
push
lret
or
cltd
and
dec
into
push
xlat
popf
jne
int
pushf
scas
fistps
pushf
repz
ljmp
stc
loop
cwtl
lds
sub
enter
sbb
or
hlt
mov
icebp
lret
pop
mov
pop
and
sbb
pushl
fwait
scas
xchg
lcall
test
and
pop
popa
dec
fists
lds
sub
scas
sub
jb
push
jecxz
add
cmc
movsl
jnp
into
cmp
jge
push
lock
adc
or
jp
push
sahf
int
add
mov
lahf
hlt
repz
iret
mov
icebp
pop
adc
inc
lods
das
sub
iret
mov
into
xor
mov
pop
sti
inc
inc
adc
ja
in
lret
jl
leave
outsb
pop
jp
inc
xor
subb
xlat
add
or
jno
ds
lahf
dec
xchg
add
xchg
push
push
in
loope
xor
mov
mov
lods
popa
sub
stos
mov
or
dec
fiadds
lock
mov
nop
adc
and
and
imul
repz
ljmp
ret
inc
int3
and
add
cmp
push
cmp
sub
lods
mov
inc
out
nop
int
sub
mov
xor
not
js
orb
adc
jnp
dec
stos
pop
fcomi
mov
movsb
out
hlt
pop
pop
add
jbe
sarl
push
jecxz
sbb
dec
cmp
mov
lds
push
repnz
xchg
les
loopne
shl
inc
mov
mov
bound
mov
inc
pushf
sub
adc
pop
push
jbe
ds
or
and
sti
sub
lds
xchg
test
push
and
xor
or
pop
push
ss
sbbl
lret
jns
jno
or
bound
and
cltd
sarl
cmp
cmp
inc
in
inc
outsb
adc
ss
in
mov
ja
mov
pop
pop
mov
or
mov
mov
mov
movsb
or
repz
sbb
in
mov
ret
dec
jmp
sahf
push
mov
xor
mov
insb
cmp
lahf
pop
outsl
les
in
fs
rcll
jmp
data16
cltd
subl
jg
sbb
dec
pop
rorl
ja
iret
push
mov
xchg
add
mov
sar
cmp
lcall
adc
std
shl
cld
bound
mov
and
shlb
int
jp
rol
aam
in
jl
mov
daa
ja
xchg
push
mov
pusha
or
into
int3
in
cmp
fisubs
stc
xor
cmp
js
mov
sahf
push
xlat
dec
and
push
inc
fidivs
stos
xor
jle
push
dec
jp
cmp
jo
lcall
adc
push
into
cmpsb
outsl
mov
cmc
push
or
psllw
fs
pushf
push
lcall
scas
and
or
dec
mov
mov
arpl
mov
and
adc
gs
mov
jg,pn
ljmp
arpl
sbb
xor
enter
inc
in
outsb
aas
mov
fs
pop
pop
cmc
jbe
and
loopne
ja
pop
imul
mov
test
test
mov
xchg
sti
lret
and
push
int3
pop
xlat
dec
lods
xchg
pop
dec
inc
inc
or
call
jge
jmp
bound
insl
xorl
xor
sbb
shrl
movsl
ljmp
sbb
dec
or
xor
fcomps
lea
arpl
push
cmpsl
adc
lret
mov
cmc
push
dec
add
pop
xchg
xor
ret
sbb
fistl
loopne
shr
push
enter
popa
mov
push
popa
jae
xor
push
das
testb
dec
push
adc
jno
aas
xchg
sbb
ficompl
adc
push
lock
xchg
jb
or
repz
incl
and
pop
adc
int
ds
gs
call
inc
pop
dec
insl
or
pushfw
bound
add
dec
xchg
and
inc
jns
sub
pop
cli
imul
test
nop
leave
fwait
mov
jl
or
xchg
out
mov
pop
dec
test
fimuls
jns
sub
or
loop
fs
jle
out
jne
sarl
and
ljmp
aam
add
outsb
and
jns
xchg
push
int
outsl
push
mov
dec
dec
into
sub
fcoms
call
inc
lret
mov
cli
js
mov
shlb
lods
lret
ja
out
xlat
xchg
insb
ja
dec
push
lods
pop
lock
pop
jno
jo
js
cmpsl
or
mov
stc
dec
mov
das
in
or
faddl
daa
mov
aam
mov
xchg
scas
sbb
inc
jae
insb
testb
push
movsl
in
loop
pushf
movsb
and
add
mov
jb
jbe
push
ss
jp
add
xlat
mov
cwtl
push
outsl
and
dec
sub
pop
mov
cmpsb
mov
clc
jg
mov
and
push
xchg
jo
jmp
and
xchg
hlt
add
sub
call
inc
pop
add
xlat
in
imul
loop
sub
sub
leave
cmp
dec
xchg
adcb
mov
fwait
ret
out
ss
gs
cmp
mov
adc
cmp
dec
xchg
in
xchg
mov
lcall
sbb
ds
jg
xor
adc
insl
lcall
mov
or
pop
roll
bound
push
mov
sbb
outsb
imulb
ret
popf
in
lahf
and
push
inc
lret
ljmp
ja
fldcw
pop
dec
mov
cltd
lret
add
in
lock
jg
fs
pop
mov
and
sti
scas
xor
jecxz
outsl
shlb
pop
fnsave
in
adc
mov
clc
push
iret
outsb
xlat
xor
rcl
jg
push
inc
pusha
adc
or
add
push
push
jmp
cmp
sub
data16
add
pop
or
push
mov
push
movsb
insl
and
dec
add
mov
in
sub
cmp
jns
rorb
jmp
stos
std
hlt
roll
enter
mov
mov
into
dec
sub
mov
das
rorb
mov
pop
sub
ds
xchg
pop
pop
adc
pop
in
inc
adc
sbb
rcl
or
std
sbbb
sbb
negb
mov
xor
jns
mov
cmp
push
adc
out
mov
mov
cmc
pop
int
jmp
sahf
fistpl
ror
mov
fwait
mov
je
fsts
xor
inc
lods
mov
div
outsb
add
cwtl
gs
das
sbb
inc
jns
lret
lods
and
lcall
test
sbb
aam
push
push
jmp
fisttps
inc
jmp
xchg
cmpsb
xchg
mov
cmp
sub
sbb
dec
stc
sti
jb
mov
jno
imul
mov
xor
test
sti
cmp
or
movsl
clc
jge
mull
dec
das
dec
push
iret
adc
sub
mov
dec
js
and
loopne
mov
int3
jge
jmp
xchg
dec
mov
mov
ja
aas
roll
scas
pop
cltd
les
lret
arpl
test
jne
jnp
lahf
lret
sbbb
and
add
push
xchg
sub
outsb
push
mov
inc
pop
cmp
scas
and
sub
cmp
mov
test
inc
leave
fsub
jbe
in
out
xor
adcb
pop
inc
arpl
mov
sub
in
jle
aam
mov
int3
pop
or
inc
add
adc
and
mov
decb
sbb
jnp
inc
nop
insb
ljmp
aam
icebp
or
lcall
add
xchg
xor
add
lahf
lahf
push
inc
push
mov
arpl
push
sbb
mov
and
sub
xor
inc
jge
xchg
and
mov
sbb
jae
in
mov
fdivr
fistps
cmp
shll
mov
inc
cmp
das
sbb
dec
and
js
jo
subb
dec
push
add
movl
stos
add
push
aaa
or
fldcw
mov
dec
pop
je
and
shr
stos
pop
ds
cmpsb
std
push
and
nop
mov
test
je
pop
pop
sbb
ss
fsubrl
cmc
sbb
push
pop
sub
mov
mov
sahf
lret
test
sub
jne
lods
xlat
stc
cmpsl
jmp
and
rep
outsb
inc
sbb
pop
bound
imul
xorl
mov
pushf
dec
movsl
dec
push
and
sbb
jns
push
push
pop
adc
xor
ret
repz
repnz
aas
ror
mov
in
test
aam
jno
filds
ds
das
xchg
cld
lods
jnp
fwait
mov
add
mov
push
daa
scas
mov
ret
mov
xchg
jle
andl
call
adc
test
addr16
or
cli
inc
aad
imul
push
jb
dec
and
sbb
scas
dec
into
inc
movl
not
repz
inc
dec
scas
data16
in
mov
cmovs
fildl
test
fdivr
icebp
pushf
popa
and
ljmp
movsl
subl
mov
mov
leave
je
xchg
push
mov
jbe
repz
mov
xor
xchg
stos
adc
mov
hlt
push
dec
add
loop
mov
mov
sub
cmp
jns
es
fistpl
mov
cmp
popf
inc
pop
fstps
test
icebp
lock
xor
fs
mov
je
insb
cltd
push
sbb
jecxz
mulb
mov
sub
lea
lods
cmp
pop
push
and
rcll
mov
add
add
lcall
dec
and
add
dec
lret
add
cmp
repnz
idivb
xchg
mov
mov
inc
mov
popf
mov
rcrb
fistpl
sub
aam
das
cmpsl
push
and
fs
adc
test
bound
sbb
bound
fsubl
movsl
push
fidivrl
daa
in
push
rcrl
mov
mov
jge
sub
adc
jl
dec
mov
scas
cmp
xchg
stos
sbb
nop
jne
push
popf
sub
outsl
icebp
xchg
sarl
adc
mov
repz
insb
push
sbb
fwait
pop
push
xchg
mov
inc
add
jmp
cli
pop
iret
inc
nop
cmpsl
in
mov
adc
dec
sub
inc
jbe
push
out
cltd
sub
push
mov
lods
and
adc
cmp
xchg
pop
inc
xchg
xchg
std
jns
ret
sub
jb
xchg
mov
push
xchg
sbb
dec
sbb
xor
hlt
sub
addl
cmpsb
push
adc
push
xchg
xchg
inc
loopne
xchg
jo
adc
mov
mov
and
xchg
out
mov
dec
divl
push
xchg
jnp
psraw
jno
movsb
inc
cli
adc
cmp
ss
insl
add
dec
cmpb
pop
gs
jbe
cs
lds
inc
cmp
pop
addr16
popa
add
xchg
cld
mov
fiadds
ret
sbb
push
xchg
or
pop
lahf
test
cmp
sub
jecxz
add
fstps
out
movsb
mov
fists
pop
ror
fwait
push
inc
pop
xorb
mov
jo
insb
inc
out
mov
or
addb
insb
xor
imul
adc
lods
or
mov
cmc
mov
faddl
cld
sub
sbb
inc
mov
aas
xchg
xchg
loopne
test
cli
mov
clc
pop
out
int
bound
ljmp
add
addb
xor
int3
data16
imul
fnsave
mov
fstl
lods
fistl
and
mov
sub
jns
sub
cmp
push
dec
dec
push
mov
xor
pop
xor
adc
pop
in
pop
fimuls
lahf
enter
push
mov
rclb
jg
xlat
jbe
mov
bound
shlb
sub
jp
popf
mov
pop
cmpsb
and
sar
add
mov
dec
adc
jnp
push
insb
test
mov
xor
cltd
imul
outsb
xor
sbbb
xor
notl
mov
mov
enter
sbb
fwait
cwtl
ret
and
test
xor
dec
in
cmc
stos
test
or
inc
aas
cmpb
insl
not
jp
and
mov
movsb
imull
adcb
xor
insb
xchg
mov
repnz
into
add
fwait
js
push
adc
lret
add
mov
repz
outsb
aam
and
test
pop
shll
adc
xchg
std
push
mov
cs
mov
xchg
and
aam
cmc
xor
jmp
xchg
xor
sub
aam
xchg
js
pop
jne
jl
sub
cmpsb
inc
push
lods
data16
hlt
pop
sub
sbb
mov
arpl
pop
mov
adc
jb
and
xor
push
data16
addr16
fisubrs
int3
cmpsb
iret
bound
je
xor
int
push
mov
in
lods
test
or
and
repz
push
out
dec
gs
push
fstl
jne
xchg
popf
es
bound
test
cmpsl
xor
pop
lahf
test
fistl
or
filds
ret
in
push
stos
xor
fnclex
ljmp
cmp
jl
out
out
das
or
cwtl
mov
enter
cmc
in
rcll
into
push
pop
xchg
sbb
mov
jo
pop
ja
push
dec
or
loopne
push
jp,pt
cmp
lods
rcr
fs
rorb
push
jb
and
jno
mov
cmpsl
shl
stc
jbe
adc
pop
add
hlt
mov
popf
mov
popf
push
adc
fsubrs
loopne
imul
pop
scas
mov
sub
cmc
xchg
dec
bound
mov
mov
fisttpll
or
lcall
sbb
or
pop
les
mov
xor
cmpsb
add
inc
lods
inc
push
test
add
icebp
sub
mov
incl
cmp
mov
add
and
repnz
popa
fisubl
clc
xchg
jecxz
sbb
out
dec
data16
lea
ret
xchg
call
sbb
mov
mov
in
stc
les
jle
xor
mov
aam
pop
adc
add
insl
mov
imull
inc
sub
scas
mov
ret
add
sub
mov
into
adc
jo
jge
push
lds
dec
cs
std
fidivrl
das
cmp
ljmp
cmp
add
sbb
gs
mov
push
pusha
sub
insb
mov
popa
ret
jb
add
push
nop
fs
push
shl
inc
dec
fstpt
sbb
pop
mov
out
sub
stos
add
mov
cli
jge
sub
iret
js
mov
stc
in
fdivrs
sbb
xor
fisubl
adc
sbb
loope
add
pop
loopne
mov
sahf
into
bound
sbbl
add
icebp
pushf
inc
lods
clc
inc
adc
repnz
movsl
in
xor
xchg
or
jle
test
adc
popa
and
jl
push
and
movsl
mov
out
xchg
sub
adc
cmpsl
subl
les
cpuid
int3
pop
rolb
mov
aam
push
cmp
add
mov
push
pop
shl
push
es
aam
test
jle
xor
loopne
push
test
out
xor
sbb
sub
inc
jns
push
mov
je
add
pop
ss
pop
xchg
dec
js
pop
cwtl
jo
sbb
arpl
out
xor
cmpsl
mov
out
fwait
je
lret
inc
movsb
repnz
into
cli
dec
pop
xchg
ficoms
xor
movsl
sbb
mov
xor
clc
sbb
arpl
pop
lret
jns
add
mov
gs
sbbl
pop
cld
loopne
jg
nop
test
mov
imul
out
pop
repnz
popf
adc
dec
das
cmovae
jno
ja
daa
cli
in
sbb
or
arpl
ror
xchg
movsl
std
stc
adcb
je
mov
inc
rclb
rcr
gs
sub
dec
test
or
imul
mov
and
test
cmp
rcrb
and
sbb
jg
test
adc
fimull
lret
ret
jl
xlat
mov
xchg
and
inc
mov
or
xchg
mov
mov
fidivl
pop
jecxz
sahf
push
ja
adc
sub
in
jle
loopne
mov
loop
mov
pushf
sahf
mov
fs
jnp
push
daa
ljmp
dec
ret
mov
sbb
pop
test
or
add
lods
sbb
sarb
mov
lret
mov
lret
inc
arpl
lods
pop
push
mov
imul
push
neg
jg
mov
jns
es
mov
jg
adc
mov
fwait
lods
cmp
iret
es
mov
imul
fisubrs
inc
jl
push
imull
push
fstpl
movsl
pop
bound
mov
ror
psubd
js
sbb
inc
xchg
js
adc
popf
mov
and
jg
loopne
sub
cmp
clc
pop
mov
int3
icebp
xchg
jg
sbb
push
shll
sub
movsl
mov
scas
jg
mov
pop
jl
outsl
xor
xorb
pop
inc
pop
dec
sub
rclb
xchg
dec
aad
stos
jmp
and
mov
js
daa
mov
cmpsb
xor
jmp
jns
or
jp
pop
addr16
xor
lods
ret
shr
pop
pop
sub
push
in
ret
cmpb
lahf
push
lods
inc
lods
mov
lods
pusha
sbb
fs
xor
adc
add
pushf
lods
not
and
sbb
xchg
jecxz
adc
subb
incb
popa
mov
jns
xchg
inc
loope
jb
sahf
rcll
in
mov
push
bound
add
loope
cmp
fwait
dec
jp
mov
loopne
jge
xchg
inc
into
inc
into
scas
cmp
iret
rcrl
arpl
pop
adc
jmp
mov
pop
adc
adc
push
addl
mov
push
add
frstor
notb
fsubp
iret
and
xor
out
add
add
scas
or
lods
loopne
in
cld
and
ret
sahf
mov
or
int3
out
xchg
je
int
mov
fwait
cmp
outsl
mov
lds
mov
jge
out
outsb
cld
ja
ljmp
clc
add
pop
xchg
popa
xor
xchg
add
sub
sbb
xchg
and
arpl
call
sub
outsl
jecxz
xor
xchg
cmp
loop
sbbl
and
cmp
mov
test
cmp
outsl
enter
add
xlat
out
repnz
mov
cmpsl
mov
maskmovq
imull
dec
inc
mov
loope
lock
mov
leave
jo
std
adc
and
out
into
faddl
push
xor
pushf
daa
jns
inc
push
iret
xchg
inc
mov
lcall
movsl
addl
lret
ds
add
lock
clc
mov
imul
gs
stos
xlat
cltd
mov
pop
ret
insl
push
je
push
inc
and
inc
xchg
out
or
mov
mov
xchg
not
sbb
lds
xchg
fwait
shr
sarl
cmp
aad
sbb
dec
dec
dec
sub
cs
je
cmp
inc
fldl
jge
mov
sbb
mov
repnz
push
push
mov
dec
clc
daa
xchg
loope,pt
pop
push
sbb
xchg
ljmp
inc
ficompl
outsl
ja
repnz
mov
das
sub
cmp
xorl
xchg
mov
int
les
cmp
cmp
and
xchg
lods
dec
dec
jo
addr16
mov
jge
sbbb
popf
out
aaa
jbe
mov
mov
and
jo
ljmp
enter
xchg
pop
mov
dec
sub
sbb
or
sti
cmp
sub
addr16
xchg
push
cmp
jbe
push
pop
inc
lods
sbb
icebp
ja
mov
push
popa
hlt
loope
sti
enter
adc
xchg
in
bnd
lods
out
sub
data16
and
adc
mov
lods
andl
or
ss
lods
mov
add
repnz
mov
mov
cwtl
clc
icebp
add
mov
mov
lret
and
lret
outsb
daa
iret
xchg
jns
ss
mov
pop
in
fstpt
cmp
xlat
into
test
stc
jecxz
loopne
inc
mov
push
adc
dec
arpl
sbb
and
test
test
leave
sbb
and
in
mov
pop
dec
fs
sahf
sbb
lods
fwait
jge
jle
ret
jmp
adc
cmpsb
push
sub
jns
mov
mov
pop
jp
lret
or
aad
andl
mov
rcr
or
shll
loop
repnz
xchg
pop
cmpsb
add
aad
sub
mov
sub
rcrb
adc
inc
sub
jl
mov
lods
and
and
mov
leave
repnz
ret
sub
stc
cmp
cmp
mov
inc
jp
dec
push
mov
push
jns
iret
mov
test
loope
xor
add
sub
scas
dec
and
mov
mov
xor
test
call
mov
shlb
arpl
mov
negl
out
add
sbb
fnstsw
xor
or
imul
ret
add
adc
test
fsubrl
lret
mov
dec
pop
or
iret
mov
pop
push
sbbb
loope
dec
shlb
sub
or
pop
bound
or
sahf
sahf
dec
and
or
mov
insb
and
mov
rcrb
pop
xchg
inc
add
jnp
aas
fsubr
adc
scas
add
call
fs
dec
xchg
fcoms
gs
xlat
jb
add
sbb
mov
enter
test
insb
mov
jg
xchg
mov
jecxz
fisttps
test
cbtw
js
in
jb
sub
jmp
push
jle
dec
ja
cmc
sub
or
dec
add
mov
push
inc
push
and
iret
push
jl
xor
mov
dec
lods
pop
jmp
jae
cmp
push
jns
mov
sub
popf
mov
cmpsb
and
xchg
xor
pop
in
movsl
jns
adc
xchg
push
mov
push
pop
pop
jl
int
ss
test
test
int
scas
not
lds
jg
or
push
push
sub
xchg
shlb
sub
fiaddl
lods
aam
fcmovnb
xchg
imul
nop
hlt
aam
adc
mov
loop
test
adc
cmp
es
mov
and
fidivrl
std
dec
je
lret
aaa
xchg
push
lahf
mov
faddl
daa
out
mov
xchg
cmpb
xor
dec
mov
je
jbe
xor
adc
mov
aaa
daa
xor
popa
inc
mov
clc
ljmp
repnz
cmp
and
push
les
fsubl
jnp
fidivrs
or
adc
jae
dec
jnp
bound
lock
fisttps
mov
int3
fildl
jl
lcall
cwtl
sub
pop
dec
popa
cli
sahf
movsb
jmp
test
lret
xlat
adc
adcb
ror
and
aas
mov
pushf
add
repz
movsb
pop
mov
leave
cmp
or
ret
inc
loop
imul
negb
cmp
icebp
cwtl
jg
pop
ljmp
pop
cmp
pop
jo
dec
or
loope
add
xchg
and
pop
push
pop
or
inc
mov
in
imul
jno
cmp
inc
movsl
test
sub
daa
sub
pop
sub
pop
mov
inc
fbstp
add
sahf
shll
pushf
subb
lods
xorl
pop
out
jbe
enter
in
addps
push
ja
xor
stos
roll
xor
push
icebp
mov
mov
mov
pop
arpl
shlb
xchg
dec
add
mov
and
adc
ret
ds
into
push
popa
pop
jb
lret
add
sub
out
mov
fsts
sub
xlat
sub
rcrb
dec
mov
in
shrb
push
jne
imul
les
fsubrs
lock
mov
aas
inc
fwait
and
xchg
add
pushf
xchg
stos
imul
rcr
test
cmp
cmpsl
push
push
xchg
mov
daa
cmpsl
ret
imul
fsubrl
xor
mulb
pop
bound
lret
cltd
outsb
add
pushf
shr
stc
arpl
jae
jno
out
mov
sub
loop
js
add
clc
repnz
mov
pop
andb
xlat
hlt
and
test
hlt
mov
std
add
out
mov
out
jg
notrack
popf
aaa
mov
adc
push
xacquire
pop
xor
inc
cmp
aam
push
mov
or
sti
shll
cli
adc
movsl
addr16
mov
mov
ret
fmul
sub
or
sti
jae
mov
stos
or
loop
dec
scas
shlb
push
popa
sbb
xlat
das
arpl
mov
std
xor
mov
pop
ficomps
cli
imulb
or
data16
lcall
int
pop
xchg
add
flds
hlt
add
cmp
inc
scas
mov
out
jecxz
imul
pop
lcall
xchg
jl
jo
dec
aad
sbb
scas
xchg
repz
pop
test
and
xor
xor
ss
adc
jo
cmp
xlat
outsb
push
fsubrs
out
ja
aaa
stc
sbb
int
pop
repz
or
sahf
cli
das
loop
faddl
adc
movsb
ds
inc
jne
xchg
push
cmp
orb
mov
cld
or
xchg
pop
loopne
xlat
adc
mov
lahf
lahf
test
cmp
sub
cmp
imul
add
push
outsb
in
mov
rcrb
cmp
jns
bound
aaa
mov
out
fcmovu
inc
or
push
popa
sbb
insl
mov
cmpsl
sub
xchg
fisubl
in
cmp
je
adc
fildl
fildll
push
pop
dec
xchg
call
mov
push
mov
adc
divb
add
enter
add
adc
jecxz
pop
xchg
push
inc
mov
das
call
add
mov
push
xchg
add
insl
pop
adc
pop
push
ret
dec
jb
daa
stos
push
inc
mov
cli
mov
mov
stos
cli
fcmove
mov
jnp
mov
dec
jge
loop
mov
xor
gs
clc
repz
mov
std
or
ffree
mov
mov
mov
jbe
dec
pop
jle
sub
push
lcall
add
enter
xchg
call
pop
xor
xlat
int3
sti
xchg
jmp
test
rorl
lahf
repz
xchg
repnz
mov
sbb
adc
iret
and
je
nop
inc
lret
mov
add
mov
push
ss
out
cltd
push
push
mov
adc
push
cld
sub
xchg
orl
scas
cmpsl
inc
add
mov
jns
adc
adc
inc
outsl
into
push
js
sbb
loop
sbb
and
repz
cmp
cld
ds
aaa
push
in
jl
lret
inc
add
inc
das
xchg
insl
or
adc
sar
cmp
out
idivl
shlb
ds
lret
cld
pop
leave
add
dec
cltd
push
enter
sub
insl
xor
jg
xchg
dec
cmp
xorb
mov
loopne
hlt
out
mov
jecxz
xchg
mov
pusha
adc
sbbl
or
push
orl
bound
add
int3
jbe
adc
pop
sarb
aas
inc
adc
dec
clc
mov
inc
pop
out
jle
dec
test
cmpsl
or
adc
mov
insl
popa
int
imul
std
pusha
or
mov
push
push
das
sbb
cmp
push
jmp
mov
bound
xor
or
xchg
sbb
lds
cmpsl
mov
popa
out
xchg
mov
jge
aam
lret
in
loope
adc
inc
sub
ficompl
sub
adc
cs
push
jnp
mov
cmpsb
sbb
pushf
clc
insl
fdivp
jle
dec
dec
out
push
jecxz
sub
ucomiss
mov
fbstp
mov
adc
jmp
ret
mov
xchg
stos
sbb
les
test
adc
scas
rorl
add
sbbl
or
icebp
mov
mov
jbe
leave
lds
adc
fcompl
ds
inc
jmp
outsl
push
cld
stos
imul
and
add
mov
aam
in
or
dec
sub
aad
dec
je
daa
pop
add
das
mov
adc
stos
arpl
in
pushf
ja,pt
loope
fsubrs
push
xor
add
mov
sbb
icebp
mov
inc
fcompl
pop
pop
adc
shlb
pop
test
cmp
mov
pop
imul
push
sbb
jp
cld
cmp
and
loop
out
in
test
leave
into
sbb
bound
adc
and
sub
scas
mov
lahf
push
sysenter
movsb
ds
adc
jno
pop
and
push
fisttpll
xor
or
imul
mov
dec
arpl
cmc
mov
rcll
subb
push
addb
and
aad
pop
loopne
mov
ret
add
adc
push
mov
fwait
stos
xchg
cmp
leave
lret
xchg
lret
jae
inc
call
dec
inc
push
adc
lock
mov
mov
xchg
mov
jl
jne
adc
rcll
inc
out
or
pop
lret
bound
bnd
or
cmpb
out
cmp
js
inc
pop
add
adc
add
imulb
sub
push
adc
xor
dec
rcrb
xchg
negb
jb
push
mov
adc
mov
lret
adc
mov
popa
pop
int3
je
jb
sarl
or
xchg
ret
mov
pushl
aam
inc
out
cs
add
and
mov
adc
sub
adc
loopne
adc
lds
jmp
sbb
pusha
mov
and
fs
and
push
fucomip
and
add
enter
mov
jp
imul
insb
jge
std
mov
inc
adc
pop
notl
jnp
mov
mov
dec
jge
outsl
ds
sub
or
pop
jnp
xor
mov
push
sahf
pop
out
nop
cmp
cld
dec
test
cli
mov
jne
pop
mov
adc
adc
loopne
inc
jbe
ds
negl
xchg
mov
fwait
adc
jb
xchg
or
push
pop
test
xchg
xchg
mov
jg
clc
clc
outsb
imull
leave
jns
xor
and
lock
and
pop
sbb
int3
jecxz
add
xor
data16
lret
mov
arpl
mov
push
cmp
enter
addl
scas
dec
loop
dec
mov
mov
inc
jns
in
mov
out
les
xor
stos
shl
xchg
arpl
jmp
ljmp
pushf
rolb
int
cmpsb
dec
jbe
xchg
adc
fsubp
mov
sbb
jbe
shrl
jecxz
sti
and
dec
push
dec
pop
mov
mov
xchg
mov
shlb
out
lock
xchg
xchg
or
fstpt
and
enter
xor
mov
dec
dec
leave
roll
push
fs
sub
inc
adc
jg
movsl
test
xchg
xchg
fisubrs
fs
loop
or
mov
mov
dec
popa
pop
sarb
pop
test
and
nop
xchg
js
xlat
sbbl
jbe
test
test
and
mov
mov
rdtsc
push
jl
pop
mov
mov
xor
out
push
push
push
xchg
lods
ljmp
push
fildll
inc
fbld
push
mov
adc
pusha
data16
mov
push
mov
std
push
popa
movsl
sub
xchg
adc
test
jne
push
repnz
jbe
iret
adc
xchg
in
sbb
dec
loopne
in
and
cld
sub
add
decl
pop
mov
arpl
leave
aam
push
movsl
jg
adc
mov
in
jecxz
push
test
cmp
arpl
sti
cwtl
movsb
push
adc
out
mov
mov
push
dec
fisubs
repnz
fwait
pop
inc
outsb
aaa
clc
icebp
jne
cli
jg
and
pop
mov
and
mov
push
inc
jp
fidivl
enter
iret
inc
fldt
jb
out
cmpb
xchg
adcb
jnp
pop
xor
jp
gs
xor
pop
or
xchg
lods
mov
xor
sub
sbb
into
es
sbb
aad
daa
jno
sub
out
push
aaa
je
add
dec
in
insb
and
and
divl
dec
dec
loopne
out
push
repz
mov
mov
outsl
insl
es
push
inc
dec
cmc
sbb
inc
add
loopne
sbb
xorb
add
sbb
lea
cltd
mov
sub
insl
sub
sub
lds
jp
push
pop
lods
rclb
das
mov
mov
sahf
idivb
sti
xchg
inc
in
mov
sub
push
lea
push
test
cmpsb
idiv
inc
dec
imul
push
cmp
pop
or
mov
pop
lods
pop
xchg
pop
and
je
in
mov
pop
popf
std
adc
sub
jp
xchg
cld
aad
je
decb
jb
fcmovu
cmp
mov
icebp
fmuls
aas
pop
outsl
adc
jl
mov
mov
fwait
sbbb
aas
push
inc
shlb
jne
push
dec
inc
dec
popf
rcrb
jae
inc
lret
arpl
loope
or
mov
in
les
mov
pop
adc
jl
add
fst
shll
mov
push
add
mov
adc
mov
cmp
sbbb
fcmovnu
icebp
pop
subb
stos
fldt
and
add
mov
mov
push
sub
pop
xorl
push
cmpsl
cmp
push
fcos
jnp
punpckldq
ret
xchg
movl
mov
sti
pmaxub
cmp
loopne
icebp
jnp
mov
ret
fnsave
add
xor
cmp
ljmp
add
xchg
sarb
hlt
push
imul
pop
fdivrs
icebp
xor
and
stos
imul
les
das
mov
inc
pop
je
lea
fsubl
stos
inc
sub
xor
and
mov
add
sub
imul
test
push
mov
jp
lea
xchg
leave
xor
xlat
ret
scas
push
enter
and
outsb
btc
or
std
jmp
mov
shlb
cmp
sub
rorb
mov
ret
stos
lcall
mov
std
in
xchg
adc
outsb
jne
fcomp
mov
flds
test
inc
mov
hlt
repnz
pop
shll
pop
out
in
call
mov
fldenv
pop
or
xchg
shlb
xchg
sbb
cmp
repnz
add
xchg
push
shll
sub
insb
mov
push
xchg
and
fstps
ljmp
xor
jnp
xor
xor
sahf
mov
inc
pop
lret
push
mov
xor
mov
fwait
cmp
aam
dec
jo
sbb
and
sahf
cld
stc
ret
or
pop
loope
jg
mov
aam
negl
jl
xor
pop
js
frstor
or
dec
js
dec
rcr
pop
cwtl
and
pop
jp
inc
subl
jns
int3
pop
into
or
imul
addr16
xchg
into
dec
mov
push
ss
fistps
test
adc
jne
cli
test
lcall
das
sub
sahf
xor
aas
lock
mov
lahf
notl
mov
xchg
repz
inc
and
cltd
clc
or
fstl
xchg
jb
pop
cs
jp
pop
insb
sub
fmulp
ror
pop
or
fisttpll
xchg
jmp
sbb
cld
mov
rcll
imul
rolb
jb
ja
inc
push
cltd
clc
in
iret
sarb
xor
xlat
pop
daa
aas
cmpsl
mov
adc
mov
or
xchg
push
push
mov
adc
es
sti
jp
jns
test
sbb
stc
int
jp
movsb
mov
mov
push
es
enter
xchg
mov
push
scas
sahf
pop
iret
adc
xor
fwait
mov
test
sbb
cmp
cmpsb
nop
out
jecxz
mov
push
icebp
subl
add
lods
out
cmpl
sub
xchg
cmpb
push
xorb
or
stc
xchg
rcl
sahf
incb
or
movsb
inc
and
mov
jmp
push
cli
mov
or
xor
cmpl
push
dec
xor
sub
cmp
in
push
lods
mov
xlat
cmp
push
in
push
xchg
imul
mov
mov
add
mov
adc
dec
int
adc
xor
std
sbb
xchg
fimull
xchg
inc
insb
aad
js
cmpsb
les
xchg
bound
mov
cwtl
addb
in
xchg
cmp
neg
out
push
int
jp
mov
scas
and
xchg
sbb
icebp
sbb
loope
test
jl
loope
out
popa
aad
mov
aad
xor
pop
pop
mov
sub
push
adc
loope
das
pop
jns
stos
jmp
mov
fisttps
lret
or
or
push
mov
mov
and
orb
dec
loope
adc
shl
leave
adc
sahf
cmp
adcb
sub
popf
push
enter
jle
sbb
in
ficoml
enter
loopne
push
aad
xchg
mov
aad
stos
rcr
push
lret
xchg
jo
lret
add
fstl
jae
add
push
ds
cmpsl
dec
jg
mov
push
cmp
jnp
test
push
in
lods
in
add
es
push
xchg
enter
test
ffree
sbb
std
jecxz
int3
push
adc
pop
push
test
insl
mov
mov
rcll
mov
mov
sarl
mov
mov
xor
les
xchg
stos
xlat
in
push
es
aaa
adc
insb
es
pop
xor
addr16
ret
cmp
int
int3
out
pop
lret
jnp
test
jmp
xor
in
jo
clc
jno
xchg
mov
repnz
sahf
xchg
cltd
jnp
mov
push
xor
push
pop
inc
idivl
std
fadds
imul
rcrb
orb
mov
sub
dec
ret
xor
jno
pop
setb
jo
aam
rcrl
jo
imul
stos
loop
or
dec
rcll
add
loope
mov
dec
int
cli
cmpsb
cmpsb
push
fimuls
jb
sbb
insl
into
testl
jnp
fcmovbe
mov
mov
addr16
lret
mov
cmp
xchg
fsts
addl
pop
frstor
add
out
push
sti
xchg
int3
and
mov
mov
cwtl
sbb
clc
scas
test
sbb
dec
or
cli
sbb
hlt
jp
xor
shrb
push
and
or
fsubr
mov
pop
push
test
cli
mov
test
inc
adc
mov
adc
lods
sub
aam
lea
push
lds
inc
sub
shl
mov
xor
cs
or
aaa
shrl
jle
test
jb
pop
and
push
loopne
pop
in
lahf
popa
inc
mov
jmp
cmc
test
lods
test
push
jne
xlat
lock
arpl
cmp
adc
or
repnz
mov
std
add
stos
lea
push
push
push
mov
pushf
and
nop
out
rcll
dec
mov
loop
mov
mov
xchg
out
sbb
add
jne
mov
sbb
mov
lret
or
test
pop
andb
int3
stos
inc
cmp
pop
pop
xchg
lea
jbe
fwait
inc
adc
inc
jns
in
in
and
and
inc
lods
addr16
imul
mov
scas
jae
popf
sub
dec
lahf
arpl
into
push
pop
int
sahf
mov
int
in
dec
punpcklwd
push
popa
into
inc
jmp
pop
xchg
shrb
pop
popf
addr16
mov
leave
pop
cmp
mov
dec
mov
jo
sub
fimuls
jno
ret
test
push
shlb
jp
inc
subl
sbb
cmp
mov
or
mov
rorb
stos
sbb
loop
jae
insl
call
mov
jg
call
test
or
and
mov
xchg
mov
es
mov
aas
adc
cs
mov
loopne
or
loope
fisubrs
fwait
push
mov
or
pop
cltd
jne
push
add
scas
adc
push
adc
out
dec
lret
or
and
icebp
lret
pop
mov
inc
adc
ret
add
cmp
jecxz
fmuls
sbb
mov
mov
inc
xor
mov
cmp
xor
clc
imul
pop
sub
inc
cmpsl
jp
fs
loope
cli
dec
mov
mov
push
xchg
movsb
add
xlat
dec
int3
sbb
sbb
inc
and
cmp
movsb
sub
stos
cmpsl
inc
mov
mov
and
popa
adc
test
mov
aam
adc
cs
or
push
std
repz
pop
cmp
in
pop
xor
pop
and
sub
lret
dec
or
xchg
arpl
loop
gs
nop
pop
dec
jmp
in
cmpl
insb
sbb
fcompp
stc
movsb
sti
dec
or
rcr
test
adcb
int
pop
and
pop
dec
es
mov
rcr
in
stos
rcrl
pop
fwait
fs
cwtl
pop
or
in
ja
iret
insl
cwtl
adc
sbb
pop
fdivrp
outsb
sti
fwait
insb
loopne
imul
sbb
lret
test
adc
push
hlt
xor
push
mov
addr16
repz
inc
mov
xchg
jae
jg
push
sub
rcll
push
loop
sahf
xchg
sub
or
mov
sti
fnstsw
std
test
cld
je
xchg
lds
cmp
popa
aam
and
imul
pop
aas
cli
call
mov
xor
jmp
mov
in
and
in
mov
pop
push
sti
test
das
outsb
lea
inc
sbb
pop
idivl
inc
and
cs
add
outsl
add
and
cmpl
adc
mov
insl
ret
mov
jnp
xor
repz
repnz
shll
adc
mov
mov
xor
mov
jge
adc
xor
pop
pop
cmpb
cmp
clc
cmpsl
subb
mov
fwait
inc
pop
loop
mov
sub
lea
addr16
fdiv
xor
cmp
xchg
sbb
mov
sub
imul
mov
push
repz
pop
xchg
jmp
or
out
out
ss
lret
iret
xor
jne
xor
push
or
and
xor
adc
push
es
cltd
stos
or
mov
jbe
pop
dec
cld
cmpsb
icebp
mov
mov
les
pop
add
jle
gs
or
push
or
cs
popf
jb
mov
jnp
jnp
leave
inc
stos
dec
or
push
nop
loopne
or
mov
mov
insl
push
jle
cmp
out
mov
dec
clc
jo
loope
std
inc
jne
sarl
lds
cmpsb
mov
jnp
in
inc
bound
icebp
ss
rcll
jp
movsl
ljmp
adc
xor
ljmp
fwait
mov
pop
fstl
in
mov
xchg
cli
jns
fdivp
pop
insl
cli
mov
fidivs
xchg
inc
mov
sbb
mov
pop
mov
out
adc
ja
mov
popf
adc
fs
xlat
xchg
mov
mov
jne
addr16
dec
push
jns
test
sub
lods
mov
sbb
sub
mov
or
and
cltd
ljmp
cltd
data16
mov
and
sub
pop
rcr
mov
shrl
gs
mov
dec
sbb
sarb
push
dec
fnsave
push
mov
test
jp
scas
fsubrl
in
test
sbb
aas
scas
or
test
movsb
imul
sbbl
sti
inc
push
nop
push
fs
out
xor
pop
pop
xor
xlat
leave
loop
xor
push
sbb
cmp
add
in
adc
mov
xchg
jne
dec
in
push
or
xchg
mov
fcmove
fcmovbe
cltd
and
shrb
arpl
and
push
dec
sbb
fsin
sub
outsb
push
and
mov
pop
arpl
mov
inc
adc
jmp
push
pop
cmp
jge
repnz
pop
fwait
xchg
push
inc
lock
pop
shrb
test
sub
mov
add
sbb
add
testl
dec
jl
scas
das
adc
or
loope
push
push
mov
push
pop
jmp
cmpsb
jb
pop
pop
lret
xchg
movsb
xor
dec
lcall
test
jl
xchg
adc
lods
test
mov
dec
addr16
jge
fisttps
adc
xchg
outsl
int3
ds
mov
ret
pop
ret
jg
addl
pop
cmp
cmp
cmc
add
insb
insb
sbb
and
popa
jb
std
push
jle
jmp
js
xor
pop
cmpsb
jle
adc
imul
addb
outsb
or
into
lods
imul
dec
xlat
mov
test
adc
push
cld
ret
int
pushf
or
add
mov
decb
andl
mov
insb
push
ljmp
std
loopne
insb
sbb
sub
shl
ljmp
fwait
cmp
call
in
pop
inc
mov
pop
inc
ret
icebp
out
cmovo
inc
stos
mov
in
jno
xor
mov
loopne
cmovl
cmpsb
pop
movsb
adc
sub
cmc
inc
jne
pop
fs
lods
aad
fs
mov
xchg
sub
xchg
xchg
bound
repz
xor
mov
xchg
lds
fidivl
int3
and
xchg
int
insb
dec
iret
sbb
sub
shlb
cs
dec
sbb
and
or
mov
fwait
mov
sbb
icebp
test
jno
mov
pop
mov
sahf
inc
push
mov
rorl
mov
inc
fs
cmp
iret
pop
pop
scas
jne
leave
sub
out
lods
repnz
cltd
mov
pop
jp
mov
jns
mov
movsl
push
and
imul
jg
cmp
cld
or
push
in
in
and
jno
repz
outsb
movsl
add
lods
loop
jb
test
pusha
add
mov
scas
add
mov
cmp
sub
mov
movsb
lret
movsb
xchg
aaa
inc
mov
xor
js
in
lahf
pusha
clc
inc
inc
scas
add
jg
sub
mov
xchg
or
push
adc
out
lret
sub
aaa
aas
ss
sub
fidivs
fdivrl
rcr
mov
cmpsl
in
sbb
loop
and
add
aam
dec
or
std
adc
sub
loopne
mov
hlt
mov
xor
inc
aas
mov
lcall
inc
mov
icebp
subb
loopne
fwait
or
sahf
aas
adc
xor
lds
shr
mov
cmp
sub
xchg
out
pop
out
in
sti
rorl
mov
in
mov
inc
call
mov
adc
gs
or
gs
ret
leave
mov
mov
mov
xchg
lock
int
mov
or
fsubp
and
jns
pop
repnz
adc
adc
push
cltd
xchg
xchg
cwtl
jo
lahf
imul
inc
pop
pop
inc
popa
inc
adc
popf
mov
jmp
in
nop
aas
scas
and
pushf
ljmp
sub
mov
xchg
sti
xor
fdivl
or
xchg
jne
sbb
roll
imul
ja
xor
rorl
sub
in
mov
aas
mov
xchg
int
mov
adc
lret
imul
test
mov
test
jl
out
pop
rcl
adc
dec
std
cli
aaa
pmulhuw
dec
and
in
movsb
add
test
xchg
dec
xchg
subb
mov
cltd
xor
mov
imul
inc
cmp
stos
fwait
test
out
and
ficomps
sti
or
add
sbb
push
fistpl
inc
mov
inc
sbb
imul
xlat
mov
xor
inc
icebp
lods
movsl
test
and
popa
cltd
fadds
jns
in
shlb
mov
mov
xor
bsr
leave
int3
jecxz
xchg
fnstenv
outsb
js
add
fldl
pop
ja
sti
insl
ja
rcrb
lea
adc
subl
test
ljmp
pop
test
cmc
mov
lock
dec
ja
insb
cld
sbb
xchg
push
jns
pop
fs
and
popf
lahf
pop
jae
test
inc
mov
lds
test
xchg
dec
pushf
icebp
decb
lret
push
hlt
cmp
dec
adc
inc
stc
sbb
mov
fs
add
aaa
cld
jbe
mov
in
clc
mov
mov
inc
xor
xchg
dec
xchg
add
in
xchg
xor
ffree
push
cmpl
or
adc
xor
cs
in
outsb
fcomip
mov
scas
mov
dec
cwtl
and
dec
sbb
push
and
add
xor
ljmp
add
mov
push
inc
sahf
rorb
push
cmp
sub
add
cli
xor
add
rorl
out
into
push
jecxz
sbb
fldt
clc
mov
data16
nop
xchg
and
adc
lahf
dec
test
xchg
push
aad
push
inc
sbb
inc
jne
iret
mov
into
stc
pop
mov
adc
call
pop
mov
hlt
bound
push
or
out
loop
popf
mov
lcall
mov
mov
iret
xchg
jecxz
bound
lret
inc
sub
push
ss
testl
frstor
outsb
call
inc
ds
addr16
push
push
popa
xchg
mov
addr16
shl
cmc
cmp
cmpl
or
inc
js
jl
fistps
xorb
popa
into
inc
mov
nop
inc
and
push
xchg
or
xor
outsb
cmp
ret
add
mov
add
push
push
xor
jp
inc
jl
mov
jge
push
or
je
pop
dec
jmp
push
adc
xor
mov
sub
cld
pop
dec
or
fmuls
call
fistl
mov
xor
sahf
loopne
bound
push
inc
hlt
adc
fildl
adc
dec
adc
je
push
test
add
stc
xchg
xchg
xchg
mov
xor
mov
cmp
insb
mov
adc
and
dec
pop
mov
sub
mov
ss
sbb
jne
mov
inc
mov
addr16
sub
mov
sub
mov
and
cmp
mov
dec
push
in
jle
cmp
mov
sahf
out
loopne
push
push
push
add
add
cli
xor
push
movsl
les
xchg
sub
lahf
add
jle
jnp
ja
xor
arpl
jl
iret
mov
mov
push
lcall
push
in
imul
sub
ret
mov
push
sar
repnz
xchg
aaa
and
jns
rcrl
or
aad
fs
imul
cmp
sbb
lcall
sti
clc
cmp
ffree
ljmp
cwtl
push
loop
mov
mov
mov
iret
mov
aad
out
int
xor
mov
mov
fidivrs
loop
push
push
das
mov
dec
jnp
test
cmp
ds
push
das
dec
imul
xor
mov
adc
or
jo
pop
inc
pop
lcall
mov
dec
fxch
cmp
push
pop
dec
mov
inc
pop
stos
pop
fidivs
jnp
clc
aad
adc
jl
adc
add
and
jmp
shr
cmc
or
ds
xchg
or
in
lret
or
dec
pop
pop
fisttpl
add
xchg
cwtl
push
dec
add
jno
cltd
repz
cmp
std
dec
lods
mov
sub
xchg
test
mov
xchg
xlat
xchg
inc
imul
adc
lds
mov
ret
jmp
das
ja
push
mov
sub
popf
dec
xor
mov
jp
cld
ljmp
or
sub
cld
xor
push
push
in
sbb
jb
push
lods
jge
sbb
cltd
cmpsb
jle
aas
and
cmpsl
sbb
push
movsb
adc
js
sbb
test
xchg
or
push
nop
out
pop
xchg
fisubs
fcmovu
cmc
xchg
and
jecxz
pop
sahf
xchg
xor
movsb
sub
jmp
rcrb
jbe
test
in
xchg
pop
ror
pop
or
or
test
mov
in
jp
mov
add
cmp
mov
mov
pop
cmp
mov
push
mov
inc
std
mov
cmp
ffree
out
push
xchg
testb
imull
data16
rcll
push
adc
jl
mov
pop
loopne
inc
notb
sub
nop
lahf
mov
rcrl
fs
adc
cmp
cmp
and
cmp
dec
shr
mov
add
sub
das
push
or
inc
mov
xchg
dec
lods
xchg
js
sub
pop
rcr
lds
xor
mov
mov
and
or
cmp
dec
mov
and
push
fldcw
dec
pop
rcl
loop
inc
adc
jecxz
orl
jle
decb
imul
call
popa
daa
pop
fldcw
jl
ficompl
lahf
movsb
jns
push
dec
ds
sbb
dec
lret
pop
fisttpll
hlt
lock
or
jmp
sbb
das
leave
sbbb
lret
shl
mov
fs
lods
sub
sub
jns
movsl
cli
adc
mov
bound
push
dec
gs
lock
fdivl
scas
xor
je
cltd
sahf
push
xor
mov
in
mov
fsts
fs
xchg
shll
aaa
orl
lods
popa
or
push
fsubr
mulb
stc
mov
jbe
and
sahf
imul
cld
pop
inc
pop
jle
test
dec
stos
leave
jb
in
push
mov
daa
adc
jge
jnp
in
sub
icebp
adc
pop
pop
push
loopne
aad
enter
dec
jno
cltd
adc
filds
out
repnz
mov
adc
test
popl
push
push
and
cmp
lods
pop
enter
ret
lods
push
xchg
lret
js
xchg
push
xor
add
cmp
movsb
repnz
fstpl
stc
fstl
test
xchg
sbb
in
lods
mov
in
cmp
das
imul
push
or
arpl
les
cld
sahf
ja
leave
in
clc
jl
or
insb
stos
pop
popf
cs
pop
mov
xor
or
sahf
movsb
dec
gs
rorl
cli
jmp
sub
rep
dec
mov
inc
fisubrs
shll
pop
push
xlat
jecxz
fs
add
cld
in
outsl
mov
clc
and
shll
sub
mov
int3
shlb
pavgb
cmp
sub
sub
lret
sahf
arpl
ret
subb
cmp
or
mov
inc
push
daa
xchg
sbb
or
arpl
ja
xchg
fisttpll
adc
popa
pop
fcoml
psrlq
es
mov
jl
push
movsb
enter
outsl
mov
rorl
jno
push
pop
leave
pop
inc
scas
lahf
sahf
lret
dec
ds
adc
xchg
mov
std
jmp
push
out
jp
mov
or
mov
inc
inc
xor
xchg
mov
sti
pop
cs
sub
int3
add
or
inc
xchg
mov
int
loopne
inc
mov
repz
mov
pushf
mov
ret
sbb
dec
add
repnz
xor
emms
sub
shll
push
call
nop
ret
xchg
loop
addl
rolb
sub
dec
sub
pop
dec
std
sbbl
cmpsl
dec
push
inc
jg
inc
loopne
jo
mov
dec
jl
call
dec
std
out
xlat
cld
xchg
mov
jns
fs
mov
cmp
cltd
xor
ljmp
pushf
dec
sbb
lret
push
pop
mov
scas
pushf
xchg
loopne
int
dec
in
inc
sub
dec
xor
frstor
sub
mov
jl
mov
out
dec
mov
cmp
jo
stos
adc
imul
jno
pop
dec
mov
sbbb
in
sub
adc
and
cwtl
test
or
adc
push
sbb
ss
jge
or
or
adc
fdivrp
push
add
dec
ja
mov
rcr
pop
xchg
jae
shll
cmpsl
mov
pop
xchg
fmuls
mov
fcoms
out
jne
mov
in
fldenv
xor
inc
sbb
pushf
push
xor
mov
cmp
xorl
clc
adc
jbe
arpl
and
adc
inc
jle
loop
mov
idivl
ds
jns
loope
jnp
sar
loop
or
xchg
das
loope
imul
mov
sbb
mov
xor
inc
cld
mov
prefetch
in
imul
bound
ss
es
scas
pop
mov
sub
or
arpl
nop
les
and
xchg
popf
cmp
mov
mov
inc
negl
jae
sub
inc
fsubp
mov
pop
or
cli
std
push
or
idivb
loope
jmp
add
lock
inc
clc
and
gs
loope
push
icebp
cmc
cmp
mov
lcall
jle
push
cmpsb
jbe
cmpsb
mov
push
cmc
cs
not
dec
jno
dec
sbb
xchg
cmpsl
fs
fnsave
xlat
imul
movsb
js
push
std
aad
and
sbb
xchg
jle
dec
adc
out
push
and
jg
push
jmp
jge
shrb
mov
in
pop
fmull
push
pusha
roll
pusha
adc
repz
push
subb
repnz
push
sub
cwtl
xor
adc
loope
dec
dec
addl
addr16
in
inc
aas
sbbl
sbb
push
enter
es
lods
mov
sbb
leave
lahf
jl
mov
stos
and
fstpl
stos
addl
jge
jae
mov
mov
cltd
fildll
dec
out
mov
sbb
ret
mov
add
jae
sbb
scas
stos
push
and
das
rorl
sbb
arpl
mov
cwtl
std
jecxz
ss
cmc
jge
pop
mov
mov
ret
fs
jo
lret
test
xor
sbb
pop
add
es
pop
lock
sbb
rclb
add
xor
fdivrp
cld
sbb
and
fcompl
hlt
arpl
aad
or
bound
ja
int
lods
mov
out
std
fcoms
inc
mov
or
fxch
sbb
test
jb
dec
mov
adcl
cmp
arpl
loope
aam
sub
add
xchg
xchg
pusha
add
xchg
dec
sti
or
or
jecxz
add
jge
dec
fcomps
cmp
lret
stc
mov
mov
mov
mov
xchg
sbb
lret
cmpsl
mov
and
mov
je
mov
mov
xchg
fistpll
sub
mov
dec
pushf
in
push
test
pop
and
mov
mov
xlat
mov
pop
add
addr16
push
mov
into
inc
push
scas
and
jl
cltd
loopne
adc
bound
in
enter
jge
aaa
add
mov
adc
xchg
test
andl
adc
and
stos
push
pop
into
arpl
stos
jae
outsb
scas
or
add
add
mov
push
sbbb
adc
sbb
xor
sub
repz
xchg
xor
mov
clc
xchg
sub
mov
and
stos
cmp
or
sbb
cmp
in
stos
roll
imul
push
ljmp
insl
pop
adc
lods
std
cmp
push
inc
dec
cmp
pop
ljmp
fnstenv
hlt
sti
nop
scas
cs
test
scas
jl
sbb
lea
xchg
lret
mov
sbb
dec
int
xchg
sub
sbb
stos
jno
xor
sti
filds
inc
adc
mov
cli
dec
dec
fsubl
clc
int
test
or
inc
fadds
dec
out
xor
xchg
outsb
je
sti
mov
inc
mov
into
xor
int
pop
cmc
cmp
dec
fdivrp
hlt
jl
cltd
sbbl
cmp
pop
dec
add
push
outsl
mov
enter
jp
or
lods
ret
sarl
mov
jnp
xchg
adcl
and
add
push
pop
gs
mov
inc
aaa
and
ljmp
push
rorb
add
in
and
lcall
pushf
push
sbb
xchg
mov
leave
inc
jmp
insl
icebp
std
punpckldq
jae
imul
ret
js
out
repz
dec
sub
sbb
shlb
pop
das
nop
pop
jecxz
iret
mov
xchg
idiv
ficompl
pop
inc
cmpsl
dec
xchg
cmpsl
jno
test
add
pushl
add
mov
fwait
mov
jb
fidivs
es
jne
inc
daa
mov
sub
inc
xor
icebp
stc
jg
sbb
outsl
adc
rcrb
mov
call
mov
psubq
pusha
rolb
cmp
ficompl
loop
add
popf
inc
pop
fcoms
lea
in
imul
inc
pop
adc
adc
or
repz
aam
inc
loop
xchg
stos
sti
scas
and
inc
xor
inc
arpl
inc
adc
dec
jp
iret
leave
adc
imul
push
inc
adc
neg
mov
lods
mov
lea
incl
dec
popf
adc
xchg
cmp
xchg
addl
je
cmpsb
dec
mov
inc
mov
insb
leave
pop
adc
rolb
and
out
dec
aam
jmp
push
mov
addr16
in
adc
xlat
sti
jmp
mov
arpl
imul
lds
push
subb
adc
addr16
rolb
jecxz
cmc
sbb
mov
movhps
cs
inc
out
push
jmp
fcompl
or
sbb
je
loope
repnz
jo
shrl
data16
add
mov
add
xor
adcb
cs
jecxz
jns
add
cmp
imul
xchg
movsb
and
push
xor
sub
out
mov
dec
imul
addl
xor
adc
and
test
adc
push
int
push
bound
insl
cmp
jne
lahf
jmp
dec
insb
sbb
xor
mov
gs
iret
mov
xchg
push
nop
push
jge
in
xchg
and
pusha
int3
cli
cmc
jle
repnz
ss
mov
test
sub
cmc
popa
iret
fndisi(8087
jne
aaa
arpl
xor
imul
inc
in
cli
movsl
rclb
add
outsl
ja
push
push
popf
outsb
lock
sarl
add
xchg
jns
and
cmp
push
ret
xchg
xor
or
shl
movsl
shll
pusha
sbb
ret
and
mov
ljmp
sub
jp
mov
test
fiaddl
sahf
enter
imul
stc
dec
cmp
cs
push
movsb
repz
sub
mov
mov
cltd
mov
xchg
cmp
xor
neg
mov
inc
std
data16
jmp
fdiv
std
cltd
cmp
jmp
inc
sub
mov
subl
imul
inc
stos
add
sbb
push
mov
ret
inc
xchg
push
into
pushf
test
fidivrl
es
outsl
or
or
nop
xchg
cmc
push
push
jge
ljmp
mov
push
stos
fisubrs
js
mov
jo
pop
push
pop
xor
jp
fs
ljmp
adc
popf
or
es
xchg
mov
push
jmp
inc
mov
or
imul
cli
in
es
mov
popa
adc
aad
into
xchg
out
mov
xor
jb
add
cmp
cmp
mov
or
xchg
cmp
sbb
inc
dec
loopnew
in
dec
adc
fmul
add
std
mov
mov
push
cmp
pop
inc
int3
or
push
lods
rcrl
test
cltd
pusha
adc
jno
jae
int
mov
fisttps
inc
std
push
cmp
jg
dec
push
rol
lods
sub
adc
cli
add
fwait
lock
shlb
or
or
pushl
subl
mov
jnp
xor
mov
pop
addl
lahf
jp
scas
icebp
out
sub
and
mov
fsubrs
aam
push
scas
lret
aam
in
popf
incb
int3
ret
jg
inc
ret
sub
popf
inc
cmp
xorb
int
ret
xor
jns
jnp
xor
mov
negl
xchg
rolb
imul
push
repz
lahf
push
loopne
sub
mov
fiadds
inc
lret
int
mov
fs
mov
cli
cmpsb
xchg
jb
push
adc
sub
popa
mov
xchg
jno
lods
loope
cld
cmp
xlat
push
mov
cmpsb
divb
movsb
int3
mov
int3
add
push
pop
movsb
repnz
les
outsl
daa
lea
sahf
push
and
bound
pop
nop
pop
pusha
orb
cmpsl
in
icebp
adc
in
xchg
lods
push
jb
add
sbb
loopne
pop
stos
in
repnz
mov
ljmp
loop
dec
cmp
pop
sahf
stos
mov
push
movsl
scas
je
rclb
xlat
in
cmpl
shl
or
mov
mov
inc
mov
sub
add
inc
sbb
scas
push
inc
test
loopne
inc
xor
rcr
iret
mov
xchg
mov
imul
cmpl
mov
sub
sbb
rcrb
ss
scas
lods
adc
js
imul
cmc
je
inc
dec
mov
add
xchg
and
paddb
aas
movsl
add
dec
mov
fs
fcoms
js
jno
ret
pusha
popf
mov
and
sbb
imul
arpl
cmp
pop
cmp
out
or
adc
jge
das
lret
adc
pop
dec
xor
push
adc
jl
popf
pop
lea
movsb
aad
addr16
ss
jbe
scas
cmpsl
sarl
jno
mov
mov
mov
fcoml
leave
das
aas
cltd
and
mov
xchg
xor
mov
aam
clc
out
pop
fimuls
or
dec
fucomip
sub
push
pushf
es
or
lret
mov
adc
outsb
xchg
mov
sahf
repz
mov
outsb
adc
or
and
add
fcomps
add
xor
fisubrs
push
leave
ljmp
js
es
in
add
xlat
inc
sbb
sti
fiaddl
inc
cmp
mov
xchg
or
xchg
das
mov
daa
pop
dec
hlt
cmpsb
clc
inc
sub
jmp
mov
inc
aas
jns
les
mov
stos
bound
sub
int3
add
xchg
das
adc
push
orb
inc
sbb
adc
inc
fcmovnbe
es
iret
adc
int
or
pop
cmp
int
inc
mov
sbb
fisubrl
mov
fdivl
fimuls
and
adc
movsl
shlb
enter
insl
xor
xor
sub
enter
rorb
xor
pop
in
xchg
mov
cs
add
mov
dec
sti
pop
mulb
faddp
int
mov
hlt
adc
lcall
aas
xor
sub
cmp
push
or
sbb
pop
popa
out
popl
add
mov
dec
sahf
pop
int
mov
shlb
test
jo
ljmp
push
pop
pop
in
xchg
pop
mov
cwtl
scas
cmp
pop
scas
push
jb
dec
jmp
rcr
int
repnz
or
sbb
lahf
divps
int
add
jg
pop
test
nop
or
repz
xchg
das
rolb
mov
sub
hlt
mov
call
lea
dec
test
cmc
adc
cltd
sub
shlb
cmp
lods
inc
lahf
cld
icebp
andl
aad
scas
xchg
xchg
sub
sarb
lea
xor
out
or
mov
addb
xor
jno
stc
out
cli
test
ljmp
sbb
push
les
imull
xchg
and
ret
rcr
mov
sbb
mov
cmc
xchg
cmp
mov
lcall
or
std
xlat
jnp
out
int
scas
outsb
add
xor
mov
inc
jae
push
push
push
xchg
out
push
mov
test
int3
addr16
insb
out
out
push
call
outsl
add
shrb
out
scas
cmp
and
scas
clc
cltd
out
inc
pusha
dec
adc
add
push
popf
iret
mov
jne
push
sub
ja
add
loope
arpl
push
shll
outsb
inc
ja
or
add
xor
push
decb
out
je
adc
shll
sub
xor
dec
outsb
jl
out
mov
movb
fistpl
icebp
jb
lret
sub
jle
fidivl
lea
mov
xor
ja
xchg
into
stos
sub
sub
roll
lds
ret
sbb
cmpsb
sbbl
xor
fcoms
jb
mov
add
scas
out
lods
imul
scas
mov
call
decl
dec
cli
cmp
pusha
jno
lock
xor
popa
xor
adc
cmc
add
sub
inc
mov
jge
call
rcrl
jge
mov
testb
fucomp
cwtl
push
add
enter
mov
lcall
and
push
bound
mov
cmp
sbb
ljmp
fisttpll
lahf
cmp
in
cmp
sub
cmp
and
jbe
cmpsl
je
xlat
adc
jno
push
pop
movsl
jge
push
push
pop
into
xor
enter
insl
xor
cmpsb
or
cmp
sbb
std
cmpsb
repnz
mov
mov
dec
scas
test
jmp
dec
mov
lds
out
push
pusha
dec
sub
jl
ficoml
push
xor
xor
insl
mov
jns
pop
scas
inc
sarb
cs
pop
aad
icebp
cmpsb
in
dec
in
int
inc
xchg
scas
push
loopne
cltd
and
mov
jge
stos
rcrb
sbb
pop
int
enter
mov
push
mov
lcall
dec
leave
push
daa
cmovae
push
nop
add
mov
xor
add
mov
cmp
dec
lods
test
xchg
mov
pop
into
mov
push
jnp
out
xor
sbbb
jns
movsb
into
es
sti
xor
ljmp
pop
mov
les
call
xchg
loopne
fisubs
ljmp
out
pop
jb
dec
mov
iret
jmp
inc
fcompl
add
xchg
xor
or
mov
out
mov
in
outsb
inc
shrl
mov
int3
popf
scas
outsl
cmc
fcomps
pop
inc
leave
xchg
lds
les
movsl
jecxz
imul
sti
jbe
add
xchg
leave
jl
or
or
scas
imul
daa
aam
xchg
fmull
dec
or
jne
and
pop
das
pop
js
push
mov
es
cmp
adc
mov
and
lea
lods
or
cmp
add
cs
add
imul
lret
jbe
pop
and
adc
fisubrs
loopne
fstpl
js
stc
dec
mov
and
jp
mov
mov
je
or
mov
xchg
inc
fists
mov
adc
push
daa
and
lret
rcll
stos
test
push
gs
push
cmc
push
cmp
jnp
cmp
lods
pushf
dec
push
xchg
mov
dec
add
pushf
inc
clc
inc
xor
stos
inc
call
lds
push
push
lret
addb
jmp
xor
mov
add
test
iret
leave
cmpsl
in
add
inc
test
xchg
dec
out
dec
popa
mov
cmp
iret
mov
nop
fldcw
es
insb
mov
sbb
cmp
and
xor
mov
clc
ss
int3
sub
jns
cwtl
std
push
and
rcrb
mov
xchg
xor
xor
sbb
nop
ret
push
in
and
inc
push
xchg
outsb
scas
lock
and
cmpl
xchg
add
jle
mov
dec
and
mov
int
and
pop
inc
movsl
push
fbstp
push
sub
sahf
add
inc
addl
roll
jne
mov
enter
shrl
out
mov
mov
xor
ljmp
mov
mov
jo,pt
stos
sbb
jb
sbb
push
sub
fbstp
lcall
push
divb
mov
pop
cmp
mov
push
cs
js
ss
mov
xchg
fwait
out
enter
inc
pusha
aad
mov
mov
sbb
subl
adc
or
movsb
jb
lods
xchg
roll
push
cmpsb
in
add
pop
push
inc
stos
sub
sbb
jae
pop
es
add
cwtl
in
pusha
xchg
in
lock
movsl
pop
mov
pop
orb
or
sub
pop
pop
and
add
inc
xor
lods
jne
add
test
xchg
pop
push
cmp
leave
nop
cmp
cmp
in
sub
pop
dec
int
mov
mov
lcall
jns
movsb
out
ljmp
push
aas
das
pop
fcoms
lret
addl
inc
cmp
mov
shr
sub
enter
mov
fcmovnu
xchg
jge
pop
sbb
cmp
pop
mov
xor
insb
cltd
dec
sub
jns,pt
push
adc
lods
pop
mov
xchg
sbb
jne
bound
aam
and
imul
jo
pop
mov
shrb
mov
lods
and
repz
jo
insb
mov
mov
cwtl
mov
mov
inc
dec
pop
shll
adc
pushf
pop
movsb
xchg
jecxz
push
or
pop
movsb
insb
and
das
adc
stc
rcrl
jnp
or
sbb
cmp
xchg
xchg
out
add
sbb
lret
lcall
mov
cmp
pusha
lock
out
out
arpl
xchg
in
add
jg
push
xchg
incb
mov
dec
sub
cmp
imul
fwait
pop
push
sub
shll
fcomps
mov
lret
jne
push
pop
loopne
mov
jae
popa
sbb
ss
mov
movsl
pop
nop
imul
das
push
sarb
arpl
mov
mov
pop
stos
sbb
mov
jle
cmpsl
sub
ds
xor
pop
dec
jl
rclb
cmp
jmp
mov
dec
sbb
and
adc
out
add
cli
lods
insb
mov
or
fdivs
mov
imul
xchg
sub
popf
ljmp
dec
or
jmp
ljmp
cmp
or
fidivrs
dec
mov
xchg
sub
pop
mov
pushf
adc
push
and
adcb
jbe
add
add
insb
push
inc
shrl
sbb
cmc
xchg
xchg
stc
insb
xchg
inc
loop
stos
or
call
or
jno
push
test
clc
or
loop
mov
out
in
bound
andl
mov
fnstsw
dec
dec
mov
pop
inc
xchg
xorl
add
ret
shrl
cs
push
fdivrs
sbb
dec
stos
in
lock
shrb
xchg
jecxz
rcrl
sbb
add
fisubl
xlat
aad
xor
mov
outsl
adc
repnz
jnp
jmp
insb
add
fisttpl
loopne
push
cld
cmp
xor
cmpsl
testl
push
shl
ljmp
xchg
cmpsl
call
cli
and
insb
mov
loope
cwtl
xlat
pop
cmpsl
pop
or
pushf
fcoml
adc
xor
or
mov
xor
sub
outsl
ret
lods
test
inc
add
aaa
in
call
or
push
and
cmp
cmp
mov
aaa
cmpsl
jae
cmpsl
mov
or
loopne
fildl
mov
arpl
orl
xchg
mov
adc
test
lock
out
cmpsl
shl
sarl
popa
pop
pushf
mov
xor
sbb
aad
adc
dec
mov
push
ret
or
in
notb
fnsave
jp
add
icebp
add
dec
mov
insb
push
push
cli
xchg
mov
leave
inc
in
insb
jbe
xor
lea
pop
mov
xchg
xlat
ljmp
arpl
inc
lahf
stos
xchg
cmp
loope
mov
jp
sbb
sahf
fwait
push
cmc
or
mov
xchg
ret
xchg
pusha
mov
jecxz
or
sub
hlt
jp
jno
stos
pop
mov
pop
ret
data16
fsub
fsubr
or
and
in
ret
stos
insb
jb
cld
iret
les
xlat
add
addr16
xor
int
js
popa
jne
xor
cwtl
in
insb
mov
inc
cmp
out
mov
dec
jne
bound
or
sub
js
cmp
repz
sbb
xchg
push
fsubrl
sbb
cwtl
leave
dec
sub
imul
push
lcall
aam
jo
cmp
pop
outsb
push
mov
lea
sbb
xchg
mov
iret
int
pop
dec
mov
lds
dec
cli
out
inc
or
sub
sahf
mov
mov
push
mov
push
sti
xor
rol
or
imul
cmp
cmp
lret
or
sub
jne
mov
sbbl
clc
adc
xlat
inc
mov
out
mov
movsl
jno
xlat
aad
pop
fldcw
inc
lds
fisttpll
jb
rcrb
jno
cmp
xor
or
and
daa
mov
movb
xchg
popa
mov
xor
fs
iret
sub
pop
rcl
repnz
jb
notb
sub
push
push
out
cmp
aaa
adc
xchg
int
decl
mov
aas
pop
dec
cmpsb
xor
jo
scas
add
shr
and
in
lcall
lahf
nop
sub
dec
pop
xor
dec
xor
push
cmp
aad
addr16
pop
in
sbb
shlb
xlat
cmpsb
or
fs
pop
adc
push
sbb
fptan
aad
clc
jbe
int3
shl
out
dec
mov
lahf
mov
outsb
lock
and
add
mov
push
xor
push
lahf
jl
jae
push
or
pop
testl
bound
in
xlat
push
push
mov
addr16
and
data16
dec
sar
in
out
cwtl
inc
out
stos
lret
shrb
out
pop
es
dec
bnd
aad
mov
mov
push
or
mov
sbb
jle
je
stos
ja
cmpsb
mov
fistps
dec
xchg
mov
jg
push
es
mov
les
lods
inc
aaa
loope
rcr
out
in
pushf
and
xchg
mov
pop
add
sub
neg
stc
out
cli
push
dec
push
subb
pop
pop
into
cs
mov
xor
xlat
sbb
popa
jb
ds
sub
mov
or
je
gs
js
test
pusha
sub
mov
xchg
cmp
mov
aam
or
sahf
loope
jnp
sti
jmp
sahf
cld
and
sarl
adc
and
outsb
fiadds
push
jmp
lret
pop
aam
pusha
pop
mov
testb
inc
adc
cmp
sbb
add
xor
addr16
fs
enter
xor
mov
shl
jl
daa
dec
xor
or
sbb
mov
pusha
lock
lea
push
jbe
adc
and
fists
push
nop
cmp
xchg
stos
in
cld
push
push
imul
sbb
inc
pusha
stos
int3
cmp
xorb
stos
xchg
mov
inc
cs
cltd
add
ss
mov
inc
scas
mov
mov
inc
notb
mov
push
mov
dec
lcall
mov
into
loopne
and
imul
dec
test
mov
stos
or
add
inc
sbb
cmp
out
xchg
sahf
cld
fmull
and
call
push
push
xor
loope
testb
inc
jecxz
cli
add
mov
inc
mov
xor
and
lahf
inc
pop
jno
out
and
popa
aam
mov
push
pop
fwait
xchg
pop
in
push
xchg
mov
test
cltd
adc
aas
shll
ret
mov
cmpsl
push
jnp
ss
imul
fldcw
pop
ret
daa
adc
mov
pop
push
adc
fwait
std
pop
mov
mov
fwait
dec
imul
aam
push
xor
mov
fisubrl
mov
or
cmp
cmpsb
cmp
mov
and
inc
mov
and
stc
add
or
mov
inc
js
cmpsl
mov
cmc
rclb
xor
push
cwtl
fisttpl
mov
xchg
insb
ficomps
movsl
jg
mov
cmp
fsubl
mov
sub
out
shlb
lock
rolb
aad
adc
adcb
jnp
mov
mov
fidivl
dec
sub
xor
cmp
imul
xchg
pop
pop
sbb
dec
add
fadd
cmp
iret
add
std
icebp
push
and
outsb
mov
or
mov
xchg
pop
test
aad
ljmp
sbb
pop
or
mov
pop
pop
lcall
push
les
jb
inc
out
xchg
shrb
xchg
or
movsb
out
xchg
pop
imul
cmp
pop
inc
mov
popf
aas
in
mov
mov
jno
add
jb
push
hlt
xor
insl
push
fcoms
ljmp
xchg
aaa
mov
mov
push
not
shlb
cmpsl
xchg
ds
xor
mov
sbb
cmpsl
and
lahf
jns
sbb
gs
push
dec
es
mov
push
mov
sti
xchg
bnd
xor
or
loopne
pop
test
inc
push
mov
lea
cli
clc
inc
pop
cmpb
add
dec
xor
push
or
sar
pop
mov
lahf
jmp
or
fcomps
cmp
movsb
jle
adc
sbb
pusha
cltd
fdiv
sti
testb
push
pop
and
mov
mov
daa
shrl
addr16
pushf
shlb
mov
pop
filds
mov
inc
lds
test
repnz
jae
idiv
leave
dec
stos
push
xchg
cmpsb
jno
inc
test
mov
lret
pop
fcom
sarl
or
or
push
lret
jmp
daa
aad
xchg
pop
mov
add
ficoml
dec
dec
fwait
aaa
push
mov
outsb
popf
push
pop
decl
fdivl
dec
xchg
popf
xor
pop
mov
outsl
push
mov
fwait
mov
cmp
test
or
inc
dec
into
mov
faddp
lods
cmp
in
mov
loope
mov
xchg
in
dec
mov
cmp
bound
or
mov
jae
in
push
pop
xchg
mov
xchg
cli
aam
xor
add
pusha
lret
jle
in
push
cmp
and
es
push
outsb
dec
movsl
int3
cmp
mov
adc
aaa
xchg
outsl
pop
int
lods
sub
mov
mov
in
xchg
test
shr
dec
push
stc
mov
mov
mov
mov
das
add
push
ds
lea
rclb
ret
sub
pop
mov
add
mov
adc
lods
fdivr
lahf
mov
aam
mov
mov
in
std
lahf
xchg
cmpsl
dec
adc
in
sbb
out
or
test
js
mov
push
in
scas
or
test
sbb
push
push
adc
ja
ret
inc
cmpl
cld
shll
fs
in
inc
push
orl
xchg
push
je
movl
pop
jle
jp
jl
sub
sar
cmp
je
test
or
sahf
enter
scas
push
movsl
lods
jecxz
ja
adc
lret
mov
mov
sahf
sub
push
imul
cmpsb
lret
pop
stc
cmp
out
outsl
shrb
push
and
sub
cmp
call
xchg
mov
cmpsb
jecxz
jmp
imul
xchg
inc
xchg
fildl
icebp
test
and
cltd
std
imul
pop
fs
call
cmpsb
ret
jbe
loopne
cmc
enter
in
cmp
sbb
mov
inc
mov
flds
inc
mov
out
insl
out
mov
in
adc
in
push
jb
adc
test
adc
ljmp
sbb
movsl
je
cmp
add
or
arpl
inc
sti
rclb
jne
into
jp
arpl
sub
pop
ficomps
push
mov
iret
push
dec
addr16
sbb
push
daa
xchg
mov
push
iret
jns
aas
pop
cmpsb
gs
or
jecxz
jo
in
mov
xchg
sbb
cmp
insl
shlb
xlat
inc
test
mull
out
mov
pop
pop
cmpsb
xchg
fwait
sub
push
mov
sbb
sahf
movsl
xlat
xchg
xchg
ljmp
out
mov
push
aad
pop
sub
mov
fsub
xorl
int
pop
push
mov
jge
xchg
dec
mov
mov
insb
lock
aas
or
jp
enter
scas
mov
adc
add
xchg
addr16
dec
cmpsl
leave
ffreep
out
fcompl
or
cmp
and
in
inc
cmp
iret
cmp
sub
mov
gs
or
out
jb
push
push
xchg
jmp
mov
cmp
inc
jecxz
cmp
sbb
clc
inc
mov
loopne
icebp
push
push
popf
lret
inc
imul
pushf
cmp
mov
daa
dec
cmp
mov
inc
aam
sub
out
pop
cmpsb
xchg
nop
out
stc
inc
mov
mov
lock
push
fildll
sbb
icebp
xor
adc
jmp
xorb
aad
mov
rolb
cmp
xor
pushf
outsl
jecxz
mov
out
xchg
cltd
jne
mov
lock
dec
xor
mov
das
mov
jae
inc
pusha
pop
mov
adc
and
push
rolb
out
sbb
lock
jnp
imul
popf
data16
cwtl
stos
dec
dec
popf
sbb
dec
std
and
sti
mov
cli
cmpsb
andb
push
mov
fdivrl
inc
insb
cmc
dec
sub
fists
ss
cli
pusha
mov
push
sbb
jae
jl
je
pop
into
jg
jne
and
xchg
and
cld
mov
jnp
jae
std
repnz
jno
into
inc
js
push
cwtl
bound
out
insb
shll
push
xor
mov
fnstsw
nop
jne
xor
out
mov
push
dec
xor
in
add
cmp
push
sbb
aas
outsb
pop
ljmp
adc
adc
into
mov
pop
andl
test
push
mov
mov
int
outsb
xor
in
sar
push
repnz
lods
mov
jmp
cmpsb
je
icebp
mov
lcall
or
aam
icebp
mov
adc
mov
dec
or
dec
popf
lret
pop
cmp
aaa
mov
pop
jp
das
mov
dec
out
xchg
cmpsl
pushf
and
addb
nop
dec
jo
sub
clc
sbb
nop
push
add
nop
mov
icebp
insl
shll
dec
fstpt
lods
shl
inc
jge
xchg
jae
push
push
and
or
call
push
mov
add
sub
dec
cltd
call
pushf
sti
clc
rclb
jns
lret
xor
insb
push
jb
pusha
mov
jnp
push
sahf
out
or
xor
add
mov
or
addr16
sbb
sub
js
inc
es
lods
add
clc
push
dec
lcall
movsb
push
test
jb
int
das
ret
xchg
xorb
inc
cmp
xlat
jns
add
test
dec
stc
sar
xorl
dec
shll
movsb
sub
xchg
xchg
inc
sbb
shrb
mov
sbb
mov
xlat
push
add
xor
add
pop
mov
fldcw
outsb
pop
pop
add
lods
sbb
dec
xor
add
or
xchg
movsb
xor
insb
mov
ja
mov
das
mov
ret
cmp
jecxz
js
clc
push
es
pop
jge
mov
out
gs
pop
cmp
jl
rol
push
int3
loope
nop
dec
pop
loop
lods
dec
inc
xor
push
cltd
mov
mov
pop
test
addl
repz
mov
cmp
inc
cmpsb
xchg
aas
adc
lcall
or
xchg
fdivp
xor
xchg
lret
fisttpl
cmp
cmp
cmpsb
out
sarb
inc
rcrb
xchg
pop
aas
cmp
adc
shrl
sub
ds
cmpsl
mov
inc
lcall
mov
jmp
out
popa
push
sub
cmpsl
pop
adcb
and
cltd
mov
mov
dec
xchg
dec
cmp
cmpsl
push
cmp
movsl
pop
scas
imul
stc
push
or
jne
xchg
fadds
fcomps
pop
dec
cmp
push
jmp
jmp
and
sub
mov
sub
movsb
sbb
pushf
aaa
jo,pt
nop
mov
jne
adc
push
and
pop
pop
lock
or
adc
scas
and
das
and
jnp
or
inc
gs
rclb
rol
test
adc
mov
or
popa
xor
popa
and
hlt
das
sub
bound
and
neg
and
inc
mov
xorb
movsl
js
mov
pusha
imul
mov
movl
mov
imul
rcrb
push
adc
loopne
sbb
mov
sub
mov
adc
adc
pop
pop
out
pop
mov
pop
push
jp
daa
push
lret
dec
ficoms
mov
jecxz
cmp
push
in
outsb
xor
push
outsw
aas
xor
cmp
xor
dec
dec
and
push
shl
jmp
add
lahf
lahf
jp
stos
sbb
xchg
pop
or
mov
imul
xor
or
out
mov
xchg
imul
adc
in
xchg
mov
shrb
lcall
pusha
push
push
ret
xchg
repz
jmp
jb
popa
inc
pop
push
out
lods
push
jl
sbb
dec
xor
push
movsl
sti
bsf
cmp
shrb
xchg
std
pop
lret
mov
xchg
xchg
push
adc
xor
rorb
in
add
dec
xchg
lods
decb
out
sbb
and
xchg
imulb
pop
mov
loop
adc
shlb
inc
mov
sub
push
and
pop
addr16
sub
enter
bound
jns
sahf
scas
xchg
push
leave
out
fisubrs
arpl
push
mov
outsl
add
nop
out
jbe
or
subb
dec
xchg
rolb
int
lea
xor
push
cs
push
pop
jb
push
jo
orl
mov
pop
cmp
pop
mov
or
outsl
pop
add
dec
pushf
repz
outsb
nop
movsb
in
adc
mov
push
shrb
mov
sbb
je
shrb
xchg
inc
jecxz
mov
pop
fwait
cmpsl
mov
mov
sbb
lock
hlt
sbb
pop
push
sbb
and
movsb
push
repz
inc
mov
add
insl
ss
movsl
xor
mov
adc
cld
cli
mov
aaa
adc
or
mov
dec
cmp
scas
dec
scas
insb
subps
inc
and
mov
xchg
cmp
pop
push
insb
xor
xor
in
sub
imulb
lret
xlat
inc
adc
mov
mov
mov
lods
mov
push
mov
dec
xchg
daa
and
and
lret
dec
lret
pop
push
sub
mov
push
lods
cmp
arpl
cmpsl
fdivrl
roll
lret
daa
daa
aaa
add
mov
pusha
pusha
push
sti
sahf
jb
cmp
jle
dec
and
loop
rep
sub
xchg
sub
xchg
and
std
xor
inc
sbb
jecxz
inc
mov
cmp
loope
xor
mov
cli
lds
pop
add
xor
adc
insb
jp
iret
subb
movsb
roll
xor
mov
int
les
inc
imul
fs
js
cld
sarb
lea
sbb
xchg
lods
inc
out
jo
pop
cmc
inc
shrl
stc
and
sbb
addr16
xchg
push
push
jns
pop
push
cmc
mov
stos
mov
push
in
xchg
mov
adc
pop
mov
fidivrl
lcall
leave
imul
movsl
cmpsb
clc
les
pop
adc
adc
inc
sbb
fs
sbb
add
sub
hlt
popf
xor
inc
insl
out
xchg
aam
loopne
insb
push
enter
iret
add
or
xchg
and
xchg
xorb
and
xchg
out
mov
jg
xchg
pop
push
or
inc
push
test
add
aaa
xor
fsts
es
push
lahf
pop
sbb
fucomp
icebp
aam
mov
iret
call
ret
sbbb
fwait
push
mov
fbstp
push
in
aad
pusha
xchg
loopne
fiaddl
in
sub
xor
add
cltd
cwtl
mov
dec
or
test
sub
adc
out
test
sarb
shll
stos
pusha
pop
call
or
sub
adc
into
push
cmpsb
push
pop
adcl
into
jo
jg
ljmp
decl
mov
out
push
pushf
nop
add
in
aas
lods
inc
stos
xchg
inc
and
or
pop
mov
cmp
or
and
mov
incb
or
popa
int
and
fists
pop
popf
xor
addb
fnstcw
lock
push
cmp
sahf
movsl
xor
aas
add
and
insb
lods
test
jge
sbb
xchg
push
mov
fsubs
mov
les
push
ds
int3
mov
push
xchg
insl
mov
cltd
or
dec
push
or
in
adc
mov
outsb
push
aad
call
shll
sbb
jmp
pop
cwtl
insl
pop
repz
jl
insl
mov
push
and
shr
movsl
fisubl
push
pop
and
add
cmp
inc
jl
dec
and
lock
cld
inc
into
jmp
les
clc
in
inc
fsts
es
cmpsb
pop
arpl
ss
lods
bound
test
call
popa
hlt
xchg
sub
add
in
push
jmp
push
movsb
xchg
cmp
scas
fisubl
sub
xchg
cmp
movsl
in
adc
pop
xor
popl
cmp
or
cmpsl
in
pop
mov
rorb
stos
cli
neg
inc
cmp
fiaddl
push
inc
push
arpl
cs
out
adc
xchg
das
sbb
add
adc
adc
jo
dec
je
scas
mov
inc
nop
lret
and
outsl
inc
bound
push
push
sti
mov
cmp
mov
stos
ds
add
in
mov
shll
lds
xlat
rolb
clc
popa
add
mov
pop
rclb
pop
jle
push
lahf
mov
rorb
xor
mov
cmp
or
jmp
jg
inc
and
and
cmp
scas
movsb
inc
lods
xor
inc
clc
inc
imul
je
mov
lcall
dec
dec
ja
xlat
and
xchg
jbe
sub
pop
add
in
dec
and
test
loope
icebp
bound
test
dec
mov
and
stos
sub
leave
pop
jg
ljmp
call
int3
inc
mov
push
sub
inc
jp
push
mov
subb
and
mov
pop
push
or
push
fwait
mov
xchg
movsl
cwtl
daa
mov
mov
and
and
pop
outsb
pop
movsb
pusha
inc
push
mov
popf
arpl
and
out
inc
pop
or
push
xor
divb
imul
cmp
jecxz
jle
pop
notl
xchg
push
ja
sbb
sub
and
adc
stc
faddl
test
nop
xor
xchg
push
pop
sahf
adc
push
pop
mov
sub
stos
xchg
dec
add
push
or
stos
aad
sub
push
mov
addb
mov
mov
or
outsl
sub
push
dec
fnstcw
lcall
pop
cwtl
imul
mov
cmpl
insb
adc
arpl
scas
adc
cwtl
stos
mov
fiaddl
fs
push
sbb
cmp
push
inc
stos
or
xor
push
fadds
and
mov
repz
pushf
push
cmc
adc
daa
inc
lret
rorl
push
adc
pop
add
xchg
or
lret
jb
sbb
inc
loop
mov
dec
mov
ficompl
call
in
pop
add
movsl
mov
push
jne
punpckhbw
movsl
repnz
fldenv
lahf
or
shl
mov
sub
and
sub
ficompl
sub
lret
sbb
adc
pushl
dec
adc
lahf
push
hlt
out
mov
inc
mov
lahf
push
xor
sbb
push
dec
mov
aad
cmpsb
mov
lods
push
xchg
cld
cmp
inc
xchg
ja
lret
outsl
into
shrb
loop
or
xchg
jmp
fstl
and
fcomps
pusha
inc
adc
xor
pusha
cltd
icebp
dec
inc
and
sbb
ljmp
repnz
mov
sbb
enter
dec
push
cmp
in
xor
adc
stos
shrb
mov
and
jbe
cltd
or
sub
xlat
add
xor
sub
mov
jae
sbb
pop
lret
les
dec
andb
jbe
cmpsb
repnz
loopne
dec
dec
sbb
inc
js
bound
push
pop
mov
repz
push
es
cmp
aaa
or
enter
xchg
mov
out
push
adc
ss
cmp
jb
sub
pop
mov
jl
ljmp
aam
mov
adc
xor
jbe
sbb
sbbb
inc
jmp
ljmp
loope
jne
mov
xchg
rclb
xor
inc
xor
lock
loopne
pop
cmpsb
outsb
ja
pushf
mov
dec
cmp
lods
subb
ss
fxch
arpl
adc
jge
and
int3
insb
cmc
stos
mov
clc
jbe
imull
inc
lret
mov
xor
outsl
or
cmp
dec
jl
sub
pop
adc
pop
add
mov
popa
inc
pop
dec
xchg
lods
cwtl
insl
fstpt
xchg
cltd
mov
imull
aas
lret
fs
movsl
popf
add
outsb
ljmp
jnp
push
cmp
pop
jp
adc
sub
fmull
aaa
in
aaa
mov
dec
mov
stos
push
outsl
fimuls
dec
call
xchg
mov
rcpps
ret
xchg
lods
pop
cmp
leave
dec
push
mov
push
cmp
or
xchg
test
daa
cmpsb
aas
and
cld
cmc
mov
add
inc
mov
push
loope
mov
jmp
and
jae
lds
cmpsb
xchg
ficomps
movl
sahf
pop
int
inc
fstps
sub
add
fisttpll
repz
inc
pop
xor
jg
cmp
add
fidivrs
xor
fs
out
in
jbe
xchg
jg
mov
adc
pop
fistps
push
push
xor
fsubs
adc
adc
jg
xchg
dec
std
pop
and
mov
dec
sub
cs
jbe
and
es
addr16
pop
mov
mov
mov
jg
jmp
pop
add
out
outsl
orl
jge
pop
mov
stc
push
je
out
out
push
pusha
sub
jns
inc
adc
sahf
mov
jecxz
mov
cltd
dec
xchg
popf
fstl
or
pop
cwtl
jne
mov
inc
shrb
fstpt
jns
imulb
dec
mov
stos
push
fists
xchg
mov
or
ljmp
add
sub
stos
or
sbb
jl
inc
cmpsb
cs
xor
cmp
lahf
loopne
scas
ljmp
mov
xor
insl
xlat
lret
or
dec
dec
shrb
pop
push
cmpb
mov
rcrl
lret
jne
bound
imul
daa
pop
aad
fst
cmp
cmp
popl
push
mov
jnp
jo
pop
sti
mov
or
js
mov
mov
mov
lods
adc
inc
mov
aad
inc
mov
jl
outsb
sub
xlat
testb
aad
cmc
insl
popf
sub
cltd
jp
icebp
jmp
ja
jb
sbb
inc
xchg
inc
outsl
cmp
inc
ljmp
loope
mov
push
fidivrl
std
mov
repz
pop
movsl
mov
mov
mov
or
pushf
cltd
mov
cli
out
pop
jno
fisubrl
call
aam
xchg
ds
je
pushf
fnstsw
loope
jle
mov
xchg
xor
adc
cmp
testb
dec
sarb
pop
imul
push
sbb
cmp
mov
xorb
loop
push
sbb
sarb
adc
adc
daa
cwtl
test
mov
mov
cld
sti
cmp
dec
pop
shll
dec
and
lods
or
jg
andl
call
xor
xchg
push
rclb
cmpsb
cmpps
jno
aaa
cwtl
dec
lods
daa
icebp
loop
add
popa
push
bound
push
mov
sub
das
aam
add
push
daa
mov
lea
cwtl
jbe
xorb
push
ret
and
dec
popw
ret
mov
mov
clc
cmp
test
adcl
stos
aaa
jl
xor
nop
jae
dec
mov
or
out
pop
cmpsl
test
das
jbe
jg
push
xor
pop
jle
or
mov
pop
mov
lret
jo
dec
cmc
mov
popl
jb
shlb
xor
and
sub
mov
mov
adc
push
jns
adc
xor
adc
sub
fwait
insb
mov
ficoml
int
dec
dec
dec
mov
cmc
inc
mov
push
xchg
inc
ja
mov
mov
sub
or
or
out
pop
or
cli
dec
repnz
add
adc
add
jne
cli
subl
mov
dec
sub
push
sbb
push
movsl
movntq
scas
in
cli
adcl
test
cmp
or
fstp
xchg
fnsave
cmp
inc
sarb
call
push
addb
imul
repz
cmp
arpl
jnp
inc
cmp
jb
xor
lahf
popa
cli
cmp
xchg
ret
enter
mov
xchg
shlb
stos
jecxz
inc
cld
scas
fistl
xor
cmp
xor
shrb
jno
sahf
into
sbb
rclb
mov
push
and
loopne
data16
mov
fsub
dec
mov
cmpsb
ret
mov
fcmove
push
cmp
or
jle
pop
push
adc
jbe
xor
push
xchg
xor
xchg
mov
xor
test
add
sub
cmc
sub
test
in
movsl
push
add
imul
inc
push
das
fs
out
ja
test
dec
imul
jne
les
cmp
negl
daa
push
or
lods
aam
mov
xchg
pusha
repz
mov
mov
testb
testb
fisubrl
negl
pop
sbb
rcr
pop
dec
popf
mov
xchg
sti
inc
enter
mov
gs
cltd
and
add
jg
lds
xlat
inc
sarb
into
jnp
stc
cmpb
ficoml
adc
and
test
cmpsb
jl
push
pop
mov
and
inc
test
add
xor
lods
sub
sub
xchg
xchg
pop
mov
sub
rcll
dec
das
in
sub
sub
cmp
ljmp
mov
xor
add
inc
adc
stc
mov
repz
rcrb
pop
mov
and
cld
xlat
enter
jb
jmp
fwait
cmp
jns
es
xor
push
imul
mov
jge
repz
call
cmp
mov
push
aaa
mov
call
repnz
sbb
ds
das
sbb
mov
stc
push
mov
add
sub
xchg
imul
cmpsb
into
adc
add
sub
js
jbe
mov
or
xor
mov
xchg
add
and
xchg
repnz
push
aaa
mov
push
testl
in
or
mov
push
mov
clc
add
sub
jnp
and
mov
mov
xchg
mov
or
xor
lods
jmp
fsts
ret
inc
lret
and
pop
repz
mov
stc
fisubl
or
pop
or
jmp
and
mov
addb
sbb
xor
jb
mov
jae
cmp
repz
pop
dec
sbb
push
cmpsl
mov
jbe
es
mov
mov
jge
cltd
jmp
es
and
icebp
add
jp
out
push
imul
sub
mov
fdivrl
xchg
adc
imul
popa
sub
out
arpl
js
dec
push
pop
adc
stos
or
push
cltd
outsl
adc
hlt
leave
and
mov
imul
fs
cmp
out
sbbb
jae
sub
mov
xchg
inc
sub
cmc
cltd
mov
adc
test
ja
bnd
in
pop
sub
ror
xor
mov
es
scas
sbb
out
mov
jge
mov
cmp
stos
call
shl
mov
aad
fistpll
in
pop
mov
cli
scas
insb
loope
lds
jbe
faddl
test
sbb
mov
push
imul
rcr
push
jge
inc
xchg
push
test
xchg
test
cmpsl
sti
pushf
xor
pop
loopne
faddp
lcall
and
mov
push
xchg
ja
sbb
cmove
sahf
das
or
or
test
mov
ret
inc
stos
scas
sub
ret
int
sub
dec
cltd
xor
andl
std
int
int
scas
fsubp
das
jle
sbb
pop
and
out
push
sbb
pop
in
sbb
test
outsb
ljmp
push
je
jmp
dec
inc
cmp
xchg
gs
popf
pop
sbb
ret
push
cmpsl
lods
fisubs
xchg
adc
into
mov
push
xor
xchg
jne
or
cmp
lods
cmpsb
xlat
xchg
dec
push
jp
icebp
fildll
add
jge
fs
mov
cmp
sub
mov
mov
cmpsl
ficomps
mov
cli
loope
dec
into
das
flds
dec
mov
adc
std
lods
push
out
fisubrs
xchg
dec
inc
ror
jge
insb
xchg
xor
movsl
mov
xchg
fwait
test
adc
mov
jge
pop
rcrl
adc
jae
or
fnsave
xor
cld
sbb
sbb
sub
pop
dec
or
or
test
sub
int3
xor
xchg
cmpl
push
fidivrs
or
sub
cmp
xchg
sub
mov
mov
push
sahf
sub
movsb
scas
orl
mov
out
jl
inc
xlat
dec
dec
pop
lcall
and
aas
push
imul
mov
adc
fcompl
shrl
sub
pop
mov
ret
jg
xor
or
xorb
mov
mov
insb
inc
movsb
enter
sub
cltd
out
repz
dec
dec
cltd
loope
imul
sbb
push
push
jae
aam
subl
push
cmpsl
mov
mov
sti
mov
scas
push
jecxz
int
insb
popl
aad
push
stc
mov
xchg
cltd
inc
dec
push
push
cmp
xchg
inc
sbb
jbe
int
mov
mov
pop
ret
notl
in
in
jae
fbld
bound
push
std
js
dec
push
scas
mov
leave
loop
cmpl
lcall
add
adc
popf
shlb
pushf
sbb
fwait
das
sbb
mov
cmp
cmp
outsb
ss
out
js
insl
mov
mov
aaa
inc
and
das
popf
in
stos
push
dec
mov
imul
push
mov
mov
pop
dec
jge
xor
add
mov
inc
and
jae
sub
fstps
push
repz
imul
xchg
inc
inc
jmp
sub
jb
repnz
comiss
jge
int3
stos
std
jecxz
gs
sbb
jl,pn
xor
sbb
push
xchg
dec
jns
mov
aad
out
outsb
shr
push
and
in
lret
loope
mov
fsubr
test
ss
mov
mov
pop
shl
sub
sbb
adc
pop
shr
mov
scas
mov
test
add
and
and
test
cmp
add
lret
in
jno
cs
mov
aam
sahf
pushf
mov
repz
daa
test
les
repnz
mov
cmp
mov
fs
sbb
sub
jb
add
and
cmp
adc
mov
insl
sbb
and
imul
add
test
rcl
sub
in
adc
mov
stc
fs
adc
mov
mov
push
xlat
pop
jge
cwtl
gs
in
dec
inc
add
out
and
push
in
out
pop
or
push
mov
jns
mov
insb
aad
mov
addb
inc
out
hlt
adc
call
sbb
add
push
fiaddl
js
pop
push
dec
push
mov
xchg
out
in
mov
in
push
adc
shr
or
jl
push
movsb
imul
push
push
scas
sub
mov
gs
xchg
pusha
lret
mov
mov
push
daa
mov
shll
push
jb
dec
in
and
dec
and
dec
imul
mov
das
outsl
jne
fiadds
das
mov
sub
cli
je
mov
push
or
cmc
push
mov
lcall
jl
pop
shlb
xor
sub
and
xor
js
jns
movl
test
xchg
pop
into
scas
push
mov
cmpsl
ja
loop
incb
imul
xor
stc
mov
inc
bound
xchg
push
cmpsl
xlat
lds
aad
aam
sbb
ret
daa
dec
push
push
and
add
div
inc
push
xor
out
inc
pop
mov
cld
scas
rorb
push
into
dec
push
sub
dec
cmpsl
lret
push
out
jle
sub
ds
xchg
jae
push
xchg
mov
sbb
stos
es
sahf
pop
int3
test
lea
test
test
xor
pop
mov
cs
xor
hlt
leave
out
and
mov
mov
and
out
inc
jae
add
aad
pop
mov
ljmp
xor
lds
inc
jl
ss
ds
cmc
into
sti
push
loop
subl
push
sbb
iret
add
xchg
or
jmp
mov
mov
dec
lock
pushf
rolb
push
lock
int
jp
out
jbe
sbb
in
sub
nop
pop
push
push
js
std
arpl
movsb
adc
or
daa
hlt
arpl
xor
aas
test
int3
xchg
add
hlt
scas
xor
cmp
inc
push
inc
mov
and
arpl
imul
lahf
clc
stos
xor
mov
imul
stc
hlt
std
out
push
outsb
pusha
xor
insb
jne
rol
int3
lret
jg
dec
dec
jmp
add
cmp
and
aas
xchg
xchg
jae
leave
pop
outsl
xor
dec
mov
dec
mov
gs
lahf
mov
adc
xor
push
test
mov
repnz
jmp
loopne
jp
sbb
pushf
mov
cli
adc
aam
dec
imul
loope
mov
push
mov
sub
sub
inc
push
sar
in
or
add
and
sub
push
test
dec
nop
fisubrs
cmp
adcl
jae
into
cli
mov
dec
push
xor
daa
int
add
call
mov
inc
mov
test
mov
sbb
stos
lds
sub
insb
inc
fnstenv
jp
cmp
shll
cmp
inc
push
xchg
pop
mov
or
rcrb
cmp
jbe
mov
jb
mov
stc
aaa
push
loopne
mov
rolb
cmc
mov
insb
cmp
sahf
ljmp
lods
mov
pop
dec
inc
inc
subl
fmuls
inc
sub
insl
inc
jns
xlat
stos
inc
dec
and
push
sbb
xchg
outsb
add
sbb
ds
out
jno
sbb
orl
and
pop
psubw
mov
sahf
mov
outsb
nop
mov
insl
gs
inc
push
mov
dec
lret
mov
mov
test
sub
sbb
push
or
shrl
pop
rcrb
imul
addr16
jmp
adc
add
xchg
push
push
mov
daa
pop
push
cmp
std
push
sarb
xor
push
jnp
pop
fildl
xchg
inc
into
mov
dec
pop
cmp
cmpsl
js
mov
mov
pcmpeqb
sub
xchg
xchg
or
fxch
jmp
pop
dec
in
sub
xor
jne
fcmovbe
fisubl
inc
lahf
adc
cmp
or
fucomi
sbb
test
call
xchg
ror
pop
pop
fs
jbe
inc
les
jb
mov
call
sbb
or
in
xchg
sbb
adc
js
cwtl
incl
jecxz
mov
les
pop
dec
fs
cld
aas
mov
xchg
hlt
sub
xor
cmp
sub
mov
xor
push
cmp
or
daa
pop
cli
test
bound
jl
pop
lret
sub
les
inc
ret
int
mov
sub
sarb
movl
loop
and
fcmovnb
sub
mov
fcos
sub
in
dec
sub
das
into
mov
loope
aad
std
adc
mov
js
mov
jg
adc
mov
add
ret
mov
inc
pop
enter
inc
mov
or
xor
inc
dec
lahf
loop
sub
ljmp
popf
mov
gs
and
xchg
add
mov
outsl
lahf
or
ja
jg
push
out
test
out
stos
mov
mov
add
cmp
sub
dec
dec
mov
and
scas
rclb
sahf
add
fmull
fsubl
in
cmp
or
sub
test
add
arpl
push
sbb
cmp
call
popa
loope
or
mov
jne
xor
add
stos
xor
push
or
outsl
cmp
and
adc
cmp
cld
dec
ja
cli
push
jae
andl
sbb
pop
rorl
adc
inc
sbbl
sbb
dec
xchg
xor
and
sbb
cmpsl
sub
cmpsb
and
stc
push
jnp
cmp
daa
scas
inc
ror
push
aas
add
push
mov
test
fsubl
jmp
gs
adc
cmpsl
call
les
mov
movsb
inc
mov
fdivrs
in
cmpsb
cs
sbb
aaa
and
pop
mov
pop
int3
sub
bound
mull
pop
mov
sub
pop
loop
inc
mov
jle
std
mov
mov
push
push
imul
jmp
leave
xchg
stos
fs
xor
sub
pusha
enter
sub
out
sbb
pushl
xchg
jbe
or
les
outsl
mov
movsb
stos
dec
movsl
jg
sub
sbb
push
sbb
and
imul
outsb
lods
adc
cwtl
jp
sub
push
xchg
mov
jno
sbb
scas
sbb
in
xor
clc
sub
and
inc
xchg
repz
out
sbb
push
sbb
cmp
aaa
xchg
xor
loope
outsb
dec
ljmp
lcall
dec
cmp
xchg
fidivs
adc
sub
mov
and
add
repnz
imul
fiaddl
mov
ss
fisubs
push
and
cmpsl
lods
add
push
dec
aad
xchg
insl
insb
mov
sub
xchg
pop
cwtl
inc
lock
inc
adc
push
out
adc
push
push
cmp
xchg
jns
daa
movsl
movsb
mov
add
outsb
jp
adc
out
lock
cmp
sub
xchg
cli
inc
dec
sahf
aaa
addr16
dec
mov
xor
jns
xor
cmp
data16
add
push
leave
test
inc
jae
icebp
les
in
adc
inc
xor
ja
pop
leave
insl
std
sbbl
mov
insb
jp
jb
cmp
xchg
fldl
filds
mov
and
mov
inc
inc
or
jo
orb
repz
xlat
push
jmp
sub
dec
xor
insl
mov
das
cli
jne
and
sahf
pop
pop
stc
sti
shll
lds
mov
and
xlat
sub
cld
in
pop
lods
xor
cmp
mov
lret
out
rol
mov
dec
xor
adc
jbe
inc
fcmovne
add
inc
shr
push
sbb
sbb
inc
add
jo
out
int3
roll
std
fcmovu
lcall
dec
jns
sbb
fldcw
jne
das
push
js
clc
mov
xor
xchg
dec
clc
int3
je
sub
xorb
das
mov
xor
andl
shl
mov
fsub
sub
mov
xchg
xchg
push
push
xor
rolb
and
push
xor
cmpb
or
fisttps
out
scas
push
mov
jmp
decb
add
aas
and
scas
xlat
stc
and
test
adcb
in
loop
call
dec
and
push
xor
lods
xchg
daa
mov
stos
lret
add
cmp
mov
push
in
xchg
and
pop
jno
gs
je
je
xchg
xchg
in
push
cmc
pop
mov
mov
int
test
ljmp
add
out
mov
aaa
xchg
inc
xor
popa
call
imul
cs
fildll
dec
loope
xor
ret
fs
cmpsl
lea
sti
cmp
or
test
inc
sbb
mov
pop
imull
xchg
mov
add
push
inc
addr16
int
vunpckhpd
dec
add
jp
adc
out
jbe
push
pop
adcl
call
mov
xlat
mov
scas
mov
mov
out
jns
outsb
xor
hlt
adc
push
jne
mov
xor
mov
xchg
out
jmp
jmp
xchg
out
dec
xor
pop
xlat
testb
cwtl
andb
push
pop
or
xor
mov
fisttpll
adc
ljmp
shrl
repz
mov
mov
insl
mov
mov
mov
in
inc
leave
movsl
jg
sub
jo
push
cmpsb
and
cwtl
xchg
fisubrs
pop
and
insl
cs
scas
into
lds
push
xor
ds
push
adc
add
cmp
cmp
cld
scas
and
out
sub
lds
pop
js
mov
sub
es
sbb
adcb
stc
outsl
les
xor
or
inc
es
addr16
add
iret
add
and
xchg
test
popa
jecxz
jp
adc
loope
notb
lods
imul
sbb
or
push
call
sub
and
or
imul
shrb
mov
mov
add
sahf
xor
cmc
inc
or
mov
cmpsb
xchg
jl
imul
rcr
pusha
xor
negb
iret
xchg
or
ficoms
cmp
ret
sbb
push
inc
pusha
inc
psllq
sub
xor
dec
fisttpl
popa
icebp
xlat
mov
dec
fldt
or
jns
lods
cwtl
ja
sub
mov
or
inc
add
in
and
aas
jne
xor
dec
cli
inc
rclb
cmpsl
ret
xchg
mov
or
out
and
sub
ja
jg
jno
cs
inc
fisubrs
ror
xchg
stos
loope
xlat
filds
mov
scas
rcrl
jle
push
jnp
std
icebp
gs
pop
aad
and
dec
pop
adc
nop
pop
ret
mov
divb
push
adc
je
or
cmp
je
add
jg
inc
sbb
ljmp
loope
hlt
fidivs
mov
aam
xor
ja
int
add
imul
push
mov
enter
stos
dec
int3
jnp
fldl
imul
in
mov
xchg
sub
pop
fsubrl
shll
mov
cltd
mov
repz
call
mov
mov
ficompl
inc
jge
test
adc
and
cli
mov
fisubrs
adc
hlt
ja
pop
pushf
int
push
int3
sbb
repz
xor
je
std
xchg
xchg
inc
cli
enter
insb
dec
aad
jnp
pusha
inc
or
mov
adcb
daa
xor
sub
adc
scas
adc
gs
xor
test
sahf
out
add
mov
pushf
push
mov
fcomip
dec
jns
or
push
and
orb
es
xchg
imul
in
push
jmp
xchg
dec
ljmp
or
inc
push
outsl
addr16
lcall
test
jp
repnz
mov
cmp
insb
test
mov
inc
jecxz
jp
jg
sbb
cmp
jae
cmp
ficomps
aad
sub
mov
pop
sub
scas
fsubrs
imul
mov
dec
pop
int3
xchg
outsb
sub
and
shl
pop
push
icebp
test
xor
rorb
lcall
negl
bound
ds
aad
jge
jmp
cmp
ror
fiaddl
rcrb
inc
add
insl
inc
leave
add
ror
mul
jl
jne
xchg
push
lea
jecxz
inc
aas
or
pop
ds
mov
outsb
xchg
cs
hlt
adc
cmpsb
cmp
mov
mov
pop
xchg
jmp
cwtl
or
jb
mov
adc
jno,pn
lock
jmp
jl
jl
mov
pop
sub
cmp
pop
adc
xchg
xor
popa
push
jg
xor
add
cltd
arpl
or
rcll
dec
fwait
xor
ret
aad
pop
cmpsl
inc
adc
mov
mov
jmp
sub
push
push
mov
loop
fwait
test
shrb
in
pop
xchg
dec
pop
fsts
ficoms
mov
jmp
mov
add
jno
ret
rol
cmp
mov
out
ret
or
icebp
fwait
and
mov
pop
pop
enter
xchg
push
daa
xor
int
mov
dec
pop
mov
mov
ss
das
jl
xrelease
xlat
and
lds
adc
daa
shll
mov
pmullw
ds
inc
pushf
std
add
aam
dec
sbb
sbb
xor
push
inc
push
insb
add
cmp
jnp
pop
sub
movsb
sbb
rcrb
popf
hlt
lds
push
test
push
test
xor
sub
ds
leave
sub
icebp
push
inc
or
inc
lret
cmc
add
mov
push
add
imul
sub
mov
iret
sub
fisubs
bound
lcall
movsl
aaa
pop
or
push
and
sbb
test
push
mov
insb
popf
jp
int3
mov
clc
inc
mov
sbb
adc
ss
xchg
add
pop
cmp
sub
push
xchg
adc
push
insl
or
lea
hlt
rolb
mov
popf
gs
push
mov
dec
inc
push
mov
fimuls
repnz
mov
push
push
fwait
leave
xorb
xchg
fwait
mov
inc
fidivrl
cltd
adc
leave
ret
loopne
mov
shl
outsl
cli
push
movsl
adc
push
into
jle
fwait
je
incb
jno
push
stc
mov
repnz
pop
sarl
popf
inc
je
out
dec
mov
loope,pt
cmp
lret
incl
push
jbe
mov
fistl
bound
inc
jnp
xchg
icebp
add
mov
mov
xlat
neg
xor
xchg
fcomi
adc
clc
lret
add
fs
mov
mov
push
outsb
outsb
dec
cmpsl
shl
jle
test
push
sti
push
pop
sbb
mov
call
movsl
sub
sub
mov
movb
addr16
or
gs
pop
mov
imull
jle
dec
dec
push
lahf
outsl
mov
cmp
jo
sbb
les
mov
mov
mov
stos
or
movsb
and
out
int3
xor
andb
popa
std
push
adc
xor
pop
cwtl
and
inc
sbb
xchg
addr16
xchg
fwait
add
xchg
jmp
mov
jae
sbb
in
add
ss
push
add
mov
rcrl
mov
jae
cmp
mov
lods
iret
inc
sub
aaa
outsl
popa
js
fwait
movsl
or
jge
aaa
cmp
sysret
aad
sbb
stc
mov
aad
in
rorb
out
lock
mov
dec
xchg
jne
mov
insb
pop
mov
mov
add
jo
sbb
fiaddl
jno
add
push
mov
add
daa
movsb
xchg
lret
and
cmc
scas
xor
jecxz
sti
scas
leave
rolb
dec
jne
jne
sbb
in
sub
sub
test
mov
sub
and
or
les
scas
daa
mov
les
aaa
adc
jp
xchg
mov
pop
inc
and
aam
cmp
and
lcall
cmp
lods
fmul
mov
mov
and
adc
in
pop
out
and
cmc
lock
sub
sub
outsl
iret
jnp
mov
rcrb
enter
add
jae
stc
xchg
rol
push
je
adc
stc
rcrb
mov
es
pop
outsl
jmp
push
addr16
std
jmp
clc
rorb
jae
add
pusha
fstpt
sarb
sahf
sub
sub
push
jmp
movsb
or
or
sbb
adc
mov
shlb
mov
cmpb
hlt
xor
add
popa
nop
out
loopne
into
push
int
jecxz
shrb
fdivrp
jo
test
push
xchg
push
pop
pushf
data16
into
insl
xchg
pop
sbb
fs
repnz
mov
sbb
aam
ljmp
pop
idivb
or
sbb
pushf
divl
cmpsb
test
push
jmp
mov
arpl
and
sbb
out
movsl
inc
cmpsb
xchg
pop
jl
pop
shrb
inc
push
cld
mov
jmp
mov
loopne
jno
popa
inc
mov
cmp
xchg
out
mov
inc
sbb
test
cmp
cs
sub
pop
mov
aaa
adc
xor
mov
std
cli
test
aas
ret
int
fwait
stos
xor
test
fdivrs
es
inc
lahf
adc
std
xchg
xchg
add
orl
out
scas
mov
out
and
pop
orb
cmp
and
je
fisubrs
xchg
lret
mov
setns
ja
and
call
popf
inc
mov
jb
mov
xor
loope
jmp
dec
seta
or
sub
scas
bnd
sub
pop
xor
and
jae
rcrb
and
jb
pop
push
and
push
adc
mov
pop
rcrb
jae
stos
jmp
inc
pushf
sbb
int
ds
ja
jmp
stos
mov
andb
dec
div
inc
loopne
jae
popa
mov
jle
xchg
pop
jle
push
mov
fdiv
out
cmpsb
xchg
sbb
jae
sbb
mov
mov
inc
push
loop
inc
inc
roll
mov
pushf
cmpb
push
mov
insb
out
xor
inc
fbstp
pop
mov
or
popa
iret
movsl
and
mov
cwtl
pusha
or
inc
xchg
dec
fstpl
dec
xchg
mov
out
sti
mov
movzwl
decl
out
insb
fcmove
icebp
cmp
aam
out
fs
sub
ja
ret
cwtl
jae
and
dec
stos
out
jle
dec
mov
adc
out
ss
mov
fidivrs
push
sbb
xchg
enter
xor
adc
inc
cmc
lret
adc
mov
and
sbb
rcll
cmp
test
in
test
test
aad
xchg
sub
jg
rcll
xchg
mov
in
adc
cltd
ss
mov
lea
mov
dec
ret
mov
mov
aam
cmp
jp
sahf
mov
and
mov
pop
out
test
pop
jge
sub
outsb
push
cmp
jl
cmpsl
and
push
mov
add
mov
mov
pop
cmp
mov
inc
aad
in
fdivr
inc
in
fidivl
aaa
test
js
cmp
cmp
iret
jne
divl
sahf
movsl
mov
push
in
cmc
call
stos
ljmp
ret
fidivs
cltd
sbb
dec
or
jg
mov
outsb
jae
std
lahf
jne
mov
pop
jo
mov
cmp
sbb
ret
jae
pop
pop
inc
fadds
add
lods
inc
cltd
dec
cltd
pop
pop
dec
fisubl
adc
roll
std
xchg
loope
jg
cltd
and
add
daa
cmc
push
or
sub
mov
dec
fwait
xchg
xlat
sarb
ret
movsb
push
iret
jae
add
jp
mov
jp
adc
test
cmp
add
stos
sahf
js
enter
fmull
stc
cmpsb
lret
or
pop
mov
clc
adc
sbb
enter
push
nop
push
mov
or
int
pushf
jp
dec
inc
mov
jmp
hlt
cmp
rol
cltd
push
adc
into
in
out
loop
sbb
outsl
jge
pop
insl
fst
pop
adc
dec
adc
xor
mov
add
add
aad
push
fcoml
data16
pop
fs
mov
inc
cmp
popa
test
mov
mov
insl
fbld
call
test
pop
push
xchg
roll
loope
movsl
daa
loop
sub
in
imul
je
cmp
shr
pop
mov
cld
mov
insl
popaw
mull
int
hlt
mov
subb
adc
add
add
out
xchg
xchg
fidivs
xchg
jle
adc
cmc
xor
mov
dec
js
fstpt
jns
sub
and
xor
push
aad
mov
imul
das
out
scas
dec
pop
daa
xor
or
add
movsb
ret
sbbl
dec
addr16
sbb
testl
test
cwtl
xor
popa
mov
mov
incb
stos
out
pop
xchg
imul
loop
insb
jno
pop
inc
loop
xchg
push
loop
clc
xchg
pop
add
imul
push
push
jo
push
int
adc
jns
jo
bound
in
cmpsb
pop
adc
mov
cmp
nop
push
mov
std
out
push
arpl
push
nop
inc
fwait
insb
push
pop
shrl
push
rorl
xor
sub
clc
test
js
ja
jl
sbb
shl
xchg
xchg
jmp
cmp
mov
out
mov
bound
push
xor
jl
subb
inc
cltd
movsl
loop
and
test
out
pop
pusha
or
push
push
movsb
daa
mov
adc
mov
inc
push
in
pop
cmp
or
stc
mov
cltd
movl
je
or
xor
and
lds
cmp
repnz
and
je
fsub
cmp
int3
and
xchg
mov
lret
aaa
addr16
mov
insb
loope
dec
cld
pop
into
mov
outsb
sbb
jge
cmp
inc
mov
dec
cmp
xor
sbb
lea
movsl
pop
fldenv
stos
loop
cld
mov
mov
daa
out
add
cmp
cli
stc
sti
je
xchg
pop
test
aam
fs
pop
mov
mov
xorl
ljmp
out
stos
dec
js
ja
push
int
adc
xchg
mov
or
adc
and
inc
dec
pop
mov
popa
sarb
mov
fstl
es
adc
js
push
stos
popa
sar
mov
cmpsl
test
and
cwtl
leave
adc
stos
ss
data16
stos
pusha
sbbl
rcrb
cli
scas
pop
imul
sahf
popa
rolb
mov
adc
addr16
ficoml
clc
push
jns
jle
sub
cmp
xchg
popa
clc
cmp
push
jne
and
xor
int
jp
out
aas
movsb
cmp
mov
das
idivb
add
in
out
mov
call
cmpsb
sbb
jge
inc
std
shrb
pop
dec
xchg
clc
jl
or
mov
mov
in
push
add
jle
sbb
lods
fs
adc
inc
or
or
gs
or
js
pop
inc
jle
mov
leave
jecxz
roll
loop
mov
jnp
adc
inc
addr16
cmpl
cmc
pushf
daa
mov
sub
mov
fidivl
push
pop
jmp
mov
fsts
into
jbe
mov
adc
icebp
fsqrt
pusha
cmp
pop
andl
loope
das
jno
pop
inc
and
enter
mov
loopne
int
add
cmpsl
icebp
cmpsl
testb
imul
push
loopne
and
testb
rclb
cltd
ret
mov
push
sbb
or
inc
cmp
mov
cmpsb
mov
repz
jmp
pop
out
pop
std
ret
mov
mov
cli
pop
jge
aaa
push
xchg
pop
dec
ret
dec
xchg
icebp
std
dec
es
sbb
testb
jae
mov
popf
cmpsl
xor
in
andb
adc
iret
sbb
enter
repnz
imul
ss
fsubrs
rorl
in
hlt
lock
rclb
dec
cmp
ljmp
or
andl
sub
repnz
pushf
and
inc
sbb
daa
rcrl
out
out
in
adc
in
stos
fstl
pop
or
add
cmp
xchg
fcoml
jmp
lahf
std
xor
add
scas
add
into
insb
sarb
fcoms
outsb
popf
dec
adc
pop
mov
out
dec
xchg
mov
repnz
in
inc
test
mov
dec
test
jne
jmp
add
dec
loopne
lds
cmp
nop
sub
push
lcall
dec
pop
mov
inc
out
pushl
gs
add
test
outsb
pop
mulb
fstpl
pop
lea
cltd
and
xchg
mov
push
stos
aam
inc
std
sti
aas
out
push
or
push
lds
scas
fcoms
sub
mov
mov
xchg
xchg
lret
bound
cmp
test
push
mov
shll
mov
cwtl
xchg
sbb
add
xchg
or
cmp
aaa
repnz
and
clc
bound
jns
out
xor
jb
sbb
pop
jbe
out
pop
cmp
scas
dec
push
pusha
cmp
dec
cli
insl
ret
in
subb
cmp
jp
mov
push
inc
cmp
cmp
mov
das
jno
repnz
or
pop
outsb
lods
ljmp
jnp
nop
xor
loopne
or
test
cltd
adc
mov
mov
call
test
pop
cmc
mov
stc
dec
cltd
in
jl
pop
in
cmp
nop
dec
push
out
das
loopne
test
pop
loopne
adc
or
xchg
ds
cmpl
and
repnz
mov
mov
shll
mov
nop
hlt
jnp
lret
push
xor
scas
push
andb
mov
cmp
jg
jns,pt
aaa
xor
or
jge
popf
sar
andb
out
call
push
mov
pop
inc
mov
mov
mov
mov
sbb
mov
xchg
lea
cmp
arpl
pop
psrad
adc
jp
push
jno
lods
sbb
mov
sahf
and
pop
push
fwait
lret
xor
sub
xor
jb
inc
sub
popa
pop
mov
in
ljmp
cmp
imul
sbb
mov
pushf
in
out
call
pushf
add
aas
jnp
shlb
cmc
fsub
push
lahf
test
ret
popa
push
dec
or
std
test
imul
dec
or
and
pop
mov
xlat
loop
xchg
or
jno
xor
cmp
jle
enter
and
inc
or
push
mov
sub
aam
adc
repnz
out
push
add
stos
loopne
mov
stos
loop
jge
popa
inc
in
mov
xor
cmp
mov
adc
mov
pop
lods
adc
xlat
mov
mov
inc
mov
je
push
das
cmpl
cmp
pop
stc
xchg
test
movsl
sub
inc
je
or
ljmp
sbb
pop
mov
divl
dec
pop
sqrtps
enter
mov
add
xor
add
in
enter
faddl
push
jns
and
inc
hlt
bound
add
sbbl
mov
dec
mov
imul
scas
mov
out
leave
aaa
cld
repnz
xchg
subb
fcomps
cmp
push
mov
js
test
sarl
dec
dec
pop
and
adc
out
in
jge
addr16
fs
sbb
push
and
out
add
inc
jecxz
call
in
and
cwtl
add
sub
cwtl
and
cmp
pop
lea
push
out
dec
test
jp
ficoms
mulb
mov
pop
sbb
dec
sbb
iret
test
push
jbe
dec
cmpsl
stos
sahf
insb
mov
jo
push
sahf
xchg
xor
andl
inc
xchg
enter
and
imul
xchg
dec
faddl
out
jmp
push
mov
push
inc
mov
aas
js
adc
fcomps
rcrl
pop
ss
rorl
sbb
subb
or
xchg
add
xchg
jmp
imul
mov
mov
pop
loopne
xor
or
cld
sub
xorb
loopne
xorb
js
jmp
cld
xor
inc
cwtl
lahf
xchg
movsl
cli
xor
jnp
mov
lock
pop
fadds
mov
mov
imul
loope
mov
aas
pop
jb
xchg
mov
sbb
sbb
push
cmp
movsl
ret
or
mov
xlat
lret
add
jecxz
inc
jae
out
and
loope
inc
xor
or
sbb
enter
jo
xor
inc
and
imul
and
mov
add
jmp
jge
push
fwait
hlt
das
pop
sub
xchg
sbb
aad
jge
enter
fnstenv
cmp
outsb
add
imul
mov
jl
aas
addr16
mov
popa
cmp
jae,pn
adc
xor
xchg
mov
jg
mov
sti
les
or
popa
mov
sbb
aaa
xor
repz
adc
std
xchg
fyl2x
mov
ljmp
and
sub
mov
sbb
mov
mov
rcr
mov
dec
pop
out
sub
xchg
pop
movsl
lods
xor
cmp
sti
jmp
cld
xlat
cmpl
inc
iret
das
xor
movsb
test
jnp
sub
mov
inc
mov
or
ss
pop
xchg
insb
ret
mov
jo
adc
cmp
decb
xor
xor
pop
imul
add
xorl
xchg
mov
ret
sbb
sub
mov
movsl
push
pop
sub
and
fisubl
dec
xor
out
ret
popl
push
andl
xor
out
xor
cmp
dec
push
xorl
inc
adc
movsb
xchg
leave
ss
inc
sub
aam
or
mov
stos
fisttps
mov
xor
ja
mov
push
or
sbb
push
mov
pop
xchg
jge
xor
push
bnd
xor
mov
in
cld
popa
jp
out
fs
hlt
mov
insl
les
stc
mov
inc
lret
fdivrp
push
ja
lods
or
mov
jnp
fisttps
leave
sub
fildl
xor
push
jp
cmp
jbe
out
jae
leave
pop
jl
outsl
adc
sub
xor
xor
dec
xchg
pushf
jae
sbb
add
das
mov
aad
sbb
fidivrl
xchg
gs
fcoms
add
cmpsb
jne
int3
pop
dec
loopne
cli
jl
push
inc
mov
in
in
push
mov
jecxz
sbb
jg
mov
jne
mov
cmp
xchg
ss
xchg
push
repnz
cmp
jle
imul
incl
cltd
ret
rorb
mov
pop
popa
mov
and
cmp
pushf
cltd
or
in
fdivrp
call
sahf
ret
mov
out
sub
jo
xor
jb
jns
sahf
jle
int3
sti
lahf
jle
mov
cmp
js
xor
pop
xchg
mull
bound
iret
push
out
insl
jl
orl
and
fidivrs
cmp
stos
outsl
xor
ret
push
or
xchg
out
lock
fildl
adc
popf
dec
test
pop
jno
push
cmpsb
imul
or
sub
fstpl
push
inc
stc
xchg
or
lea
mov
notb
mov
aaa
adcb
aaa
sub
jne
pusha
mov
pop
cmpsb
pop
mov
mov
int
inc
mov
cmp
mov
pop
adc
mov
test
push
scas
xlat
xor
inc
ds
mov
pop
out
stos
mov
hlt
sub
mov
insb
and
pop
fsubrl
jnp
mov
xor
cs
or
test
mov
mov
clc
push
lahf
scas
push
rcrb
jo
dec
btsl
push
jl
pop
out
call
dec
jno
mov
xchg
xchg
shlb
xor
cmp
adc
aas
mov
iret
cmpsl
cli
or
adc
cmp
aad
outsl
cmp
xchg
cli
in
aaa
xor
inc
jecxz
insl
mov
dec
stos
pop
or
dec
or
push
sbb
push
push
addr16
sub
mov
and
imul
rcrl
xor
pop
sbb
stos
movsb
popf
aaa
lea
adc
je
int3
cmp
repnz
adc
into
and
in
gs
repnz
sub
pop
adc
cli
inc
and
pop
jmp
testl
sub
jg
mov
aad
into
xchg
imul
push
cmp
loop
je
repnz
test
push
xlat
and
rol
pop
arpl
mov
mov
push
xor
push
adc
dec
inc
dec
pop
loop
lods
insl
pop
push
adc
fldl2e
in
cmpb
fwait
jbe
dec
cmp
out
cltd
cmp
jne
adc
roll
lods
leave
icebp
inc
loop
jae
push
jbe
movsb
jl
into
add
in
inc
in
xchg
fs
daa
ror
xor
cwtl
lods
dec
mov
or
jns
adcb
and
js
dec
add
cwtl
jns
lea
dec
mov
lds
stc
lds
dec
movsl
repz
outsb
dec
outsb
cmpsl
inc
stos
mov
xchg
pop
add
into
pop
xchg
in
fbstp
and
jnp
add
push
and
fnstenv
sbb
adc
lods
daa
nop
xor
mov
fildll
loop
test
call
test
mov
lea
test
int
push
sahf
cmpsb
rcr
addr16
int3
pushf
pop
divb
mov
out
fdivrp
jns
aam
test
add
enter
xor
mov
xchg
mov
mov
in
jne
dec
jne
sub
shrb
sbbb
int3
insb
shlb
call
sti
lods
pop
fwait
out
aam
andb
aaa
mov
xchg
push
repnz
cmpsb
stos
xchg
mov
in
loope
pop
mov
in
mov
imul
stos
lcall
mov
sbb
jnp
insb
mov
and
aad
leave
inc
clc
negl
xchg
pop
adc
cmp
dec
in
outsb
mov
dec
lds
imulb
adc
movsb
cmpl
mov
out
addl
lahf
jl
in
movsl
arpl
cmc
add
pop
nop
into
pop
mov
add
sub
push
mov
jl
in
repz
popf
fdivl
fmuls
cld
push
cs
sub
das
dec
jno
dec
adc
dec
mov
adc
pushf
sarb
in
push
sub
lahf
lods
scas
inc
pop
cmp
test
push
shrb
xlat
test
bound
lods
nop
or
repnz
jbe
das
in
ljmp
and
cmp
mov
mov
inc
test
incl
jmp
push
push
xor
xor
xor
push
mov
leave
sub
and
jae
xor
adc
cmp
sbb
pop
sbb
push
hlt
and
inc
or
push
mov
in
in
and
xor
test
stc
pop
inc
xor
jle
repnz
ffreep
xor
mov
cmp
add
dec
mov
push
sub
shl
shr
mov
pop
add
mov
in
aaa
add
push
fwait
jno
lcall
jmp
daa
inc
add
sub
and
jnp
fdivrp
jecxz
or
mov
repnz
in
adc
repnz
or
test
into
xchg
push
fcompl
cmp
adc
fxch
mov
sub
call
adc
inc
fbld
cmp
mov
jns
xchg
mov
mov
mov
lock
mov
stc
sbb
add
jl
dec
mov
fisubs
add
addb
sub
jno
je
jo
jp
call
inc
out
mov
stc
jns
je
pop
enter
add
mov
inc
pop
clc
negb
push
repz
and
imul
push
pop
mov
xlat
pop
data16
sbb
inc
out
icebp
fisubrs
dec
fs
outsb
sbb
out
push
xlat
test
xchg
out
cmp
stc
jb
push
lock
inc
fwait
stos
je
insl
leave
cs
mov
ret
gs
jl
rcll
mov
notb
dec
jmp
cmp
roll
xor
sbb
jecxz
bound
aas
cwtl
or
xchg
dec
cmc
fcomps
loope
lds
mov
lret
data16
js
popa
xor
cs
jmp
flds
dec
push
fnstsw
pop
mov
stos
and
xchg
or
xchg
mov
js
xor
sbb
xor
xchg
mov
flds
movsb
cmp
and
insb
mov
lds
mov
cmp
cmc
jmp
jno
xor
or
negb
xchg
in
cld
mov
imul
sbb
xor
movsb
aas
xchg
xor
xorb
mov
cs
shl
sbb
inc
cwtl
mov
mul
mov
push
pop
inc
gs
js
mov
mov
int3
pop
sbb
and
push
jo
lret
jmp
xchg
cmpsl
cmp
icebp
xchg
rorb
xor
jno
jge
pop
pop
pop
push
push
fcmove
mov
and
cli
jns
mov
in
pop
into
outsl
and
jmp
sbb
adc
out
enter
mov
cmpsl
fbstp
or
inc
lock
inc
popf
fdivrs
es
and
dec
popa
out
fistl
es
pop
ret
jl
push
sbb
cmpl
or
addr16
enter
and
cmp
fwait
les
jmp
push
add
jl
pop
adc
mov
rolb
notb
je
xchg
fcomps
pop
test
repz
add
pop
ds
stos
imul
out
inc
sub
pop
push
mov
mov
add
rcrb
fistpl
arpl
sbb
push
add
test
ret
mov
jbe
sbb
inc
sub
mov
loop
in
and
les
and
cmpsl
addr16
pop
add
push
popf
gs
xchg
or
mov
out
outsl
popf
test
and
add
fisubl
cmp
mov
mov
and
dec
mov
clc
add
icebp
and
push
loope
add
mov
fucomi
jecxz
clc
leave
ret
push
pop
sti
and
sub
push
cli
add
cmp
xchg
push
xchg
inc
sbb
ds
leave
cmp
addps
aam
aas
jne
cmp
or
push
cmp
jbe
mov
and
push
loopne
hlt
int3
mov
push
pop
dec
ljmp
inc
jne
mov
movsb
xor
jbe
dec
xchg
outsb
out
or
aam
sahf
add
das
jle
or
dec
push
sahf
mov
jo
sub
sbb
push
int
add
sub
lret
push
loope
sbb
pop
or
pop
xor
imul
ret
jge
fsubr
sbb
adc
cltd
lahf
dec
mov
adc
pop
dec
jecxz
shl
in
sbb
out
repz
xchg
cmp
xlat
add
cmp
lret
push
or
mov
adc
cld
and
mov
mov
push
ss
or
cmc
xor
mov
subl
sub
gs
push
ret
adc
mov
and
mov
lahf
jl
out
mov
pop
movsb
or
ret
cltd
adc
pop
push
in
xor
push
sub
mov
push
push
inc
sub
divl
inc
lahf
arpl
mov
scas
sub
mov
and
test
pop
sbb
pop
cld
aas
and
movl
mov
push
add
mov
push
sub
jb
cltd
and
packuswb
sub
mov
sbb
lods
outsl
mov
cld
inc
pop
jae
popa
dec
push
js
stos
sub
das
mov
adc
aam
cmp
jo
cwtl
or
adc
inc
jb
mov
addr16
gs
lret
lea
inc
into
ret
pusha
and
mov
xchg
pop
cmp
and
cltd
popa
pop
nop
int
cmp
insb
dec
imul
xlat
jo
adc
sbb
cmp
jne
dec
repnz
xchg
xchg
fadds
jo
nop
mov
and
cmp
out
push
add
add
sbb
jo
clc
std
mov
xchg
fsubl
orb
mov
inc
sahf
xchg
cmp
dec
push
jmp
jne
xor
sti
mov
pop
push
pop
lret
cmp
out
shll
das
or
jb
ret
pop
pop
fsts
rcll
lea
push
add
xchg
loopne
inc
and
jecxz
nop
xor
dec
xchg
insb
dec
xchg
push
inc
jno
shrl
add
jmp
lret
sub
inc
dec
repnz
ljmp
adc
push
into
jge
sub
mul
jb
loope
aad
and
out
jnp
roll
xchg
pop
movsl
ret
add
rclb
sbb
lcall
jnp
nop
push
jb
push
or
push
gs
sub
insb
mov
das
pop
jecxz
sbb
mov
xor
jp
fisubs
pushf
jae
cltd
movsl
popf
and
jg
mov
fisttps
ljmp
cltd
out
mov
movsb
jl
mov
out
das
mov
pop
xchg
sub
test
xchg
lcall
bound
test
push
sahf
xlat
mov
add
scas
fsts
jno
sar
rcrl
aam
call
xchg
dec
dec
icebp
sbb
cmc
add
xchg
or
movsb
cmp
in
fiadds
scas
adc
adc
pop
lock
int
les
cmp
mov
xacquire
adc
jns
adc
jno
popf
jge
movups
xlat
repz
add
sbb
imul
push
stc
adc
das
xchg
andl
add
test
arpl
sub
sbb
and
outsl
fists
bound
sub
in
sbbl
gs
or
dec
repz
hlt
in
or
add
clc
imul
scas
add
out
sub
movsl
or
int
jl
add
sbbl
out
and
int3
cmpsl
fidivrs
out
and
not
adc
decl
cwtl
jge
cmp
loope
fs
or
inc
add
idivl
or
clc
jno
cld
scas
addr16
xchg
cmp
lods
push
clc
pop
shlb
lea
inc
jns,pn
aam
and
add
mov
sti
adc
mov
pushf
iret
cwtl
or
imul
mov
jb
sub
sbb
inc
mov
sar
gs
jae
test
dec
sbb
dec
daa
jns
pushf
sbb
aaa
pushf
sbb
jno
jle
lahf
mov
push
addl
lahf
icebp
in
lcall
ret
cmpsl
lods
popa
sbb
outsb
push
cmp
jecxz
dec
and
push
xchg
decb
sub
nop
mov
sbb
pop
not
in
cmp
xor
and
cmpb
push
xor
adc
rcl
dec
fcompl
xlat
fdivrs
xchg
cmp
pop
daa
test
bound
push
lods
pop
add
and
sub
mov
push
mov
data16
xor
jecxz
xchg
xorb
scas
push
sub
cmp
insb
push
scas
popf
sti
mov
and
div
jnp
mov
in
add
lcall
outsl
and
out
andb
imul
fcompl
adc
sbb
dec
pushl
inc
jle
leave
in
dec
jnp
movsl
adc
pusha
push
int3
sub
loop
fxch
mov
addb
mov
xor
jecxz
jo
add
outsl
xchg
xchg
pop
or
jecxz
sbb
scas
inc
cs
ret
je
in
jnp
cs
div
cmp
mov
sbb
faddp
dec
add
pop
pop
je
xchg
pop
fwait
xchg
add
or
jns
inc
sub
push
movsl
dec
loopne
pop
add
push
int
sub
dec
in
in
inc
in
sbb
aam
pop
mov
adc
dec
xchg
or
fisttpl
cld
scas
rclb
mov
pop
jne
cmp
push
test
and
xor
ss
mov
and
rorb
js
lret
rcrb
mov
xchg
gs
jmp
jle
int3
flds
xchg
jno
xor
mov
je
outsl
int3
shlb
pop
dec
aam
sub
fdivr
mov
and
sbb
lds
xlat
sahf
xchg
ja
shrb
and
icebp
lahf
mov
inc
push
outsl
mov
jb
iret
xchg
arpl
adc
mov
js
add
dec
dec
cmp
inc
jle
std
jmp
ret
sbb
jno
cmp
bound
loop
movsb
and
pop
fwait
jnp
xor
dec
dec
in
shrl
stos
stc
repz
clc
push
push
rcr
sub
aaa
sbb
sbb
add
or
movb
xchg
or
das
loope
lds
xchg
pop
pop
sbb
loopne
cmp
icebp
stos
stos
int
and
sub
aaa
sub
sti
sub
aas
mov
sbb
sub
ljmp
push
add
mov
das
dec
jae
sbb
lcall
fs
or
aaa
in
mov
jno
or
fdivrl
fildl
rorl
in
jl
in
and
jo
xchg
dec
xor
pop
sbb
fdivrs
xchg
int3
inc
or
inc
popf
push
aad
xchg
int3
mov
jmp
push
test
jecxz
jmp
pop
std
lret
cmc
pusha
mov
mov
jmp
dec
out
add
cmp
fs
lret
mov
fwait
dec
push
shlb
icebp
movsb
jmp
roll
sbb
xor
insl
les
push
dec
sbb
lahf
mov
dec
jnp
pop
dec
lret
ret
xchg
in
inc
or
pop
loop
xlat
sahf
add
xor
mov
cmp
lock
rcl
call
push
daa
and
sbb
jno
mov
pushf
or
inc
icebp
jp
mov
in
jbe
sub
jl
aam
popf
cmpsb
test
pop
mov
orb
sub
ss
aam
jbe
sub
xor
jo
mov
add
mov
ret
push
stc
mov
xchg
hlt
sti
hlt
dec
cmp
loop
pop
xchg
mov
mov
jecxz
fcoml
cli
add
js
add
dec
dec
stos
push
or
icebp
mov
pop
ljmp
in
cs
push
pop
fbld
dec
test
ja
mov
xchg
jge
cmp
xlat
push
in
decb
xlat
sub
aaa
lcall
sub
pop
adc
adc
xchg
scas
sub
imul
push
cmp
loop
dec
mov
or
mov
pushl
ljmp
aas
mov
or
push
leave
popa
fninit
fwait
push
enter
dec
out
cs
sbb
icebp
cmp
scas
push
out
inc
and
or
mov
das
fsubrl
loop
inc
es
dec
das
xlat
xchg
and
pop
pushw
inc
add
pop
adc
mov
jno
dec
int
sbb
mov
xor
inc
dec
aas
push
jnp
in
sub
mov
lods
mov
aas
rcrb
aad
dec
inc
mov
sub
push
push
std
es
mov
adc
sbb
xchg
stos
or
mov
lock
xor
aaa
pop
data16
push
jno
stos
rclb
test
jbe
ljmp
mov
pop
or
mov
dec
imull
and
loope
adc
ficoml
imul
and
data16
push
sbb
lret
adc
pop
lahf
sarl
and
enter
cs
mov
pop
push
sbbb
gs
mov
push
xchg
bound
stc
inc
mov
iret
fs
iret
xchg
loopne
cmpsl
out
int
jae
je
inc
arpl
fiadds
cmp
dec
jno
fs
jle
mov
cld
adc
add
and
mov
aaa
cmp
xchg
shlb
adc
fbld
push
add
dec
xor
add
ret
scas
cld
or
loopne
pop
loope
lock
in
enter
xchg
outsl
aad
jmp
mov
add
jno
inc
xchg
push
or
xchg
imul
loopne
and
sbb
ds
xchg
xchg
or
adcb
push
imul
cltd
stos
les
cs
mov
xor
cmpsb
xchg
rorl
add
push
inc
scas
sub
es
gs
iret
or
loope
imul
lods
cmp
dec
insb
jle
mov
das
js
mov
movsb
cmp
dec
out
shll
adc
mov
arpl
mov
cmpsb
pop
xchg
mov
mov
imul
dec
jle
xchg
mov
test
or
mov
jnp
mov
fcoms
shrl
pop
ja
mov
mov
fildll
shlb
sbb
push
cmpsl
scas
jmp
in
inc
sbb
sarl
test
pushl
lds
movsb
lea
xchg
mulb
sbb
cmp
outsb
xchg
bound
pop
fcoms
push
mov
add
jge
xchg
stc
imul
or
inc
imul
popf
lcall
mov
cmp
jge
ret
in
call
imull
loope
movsb
jnp
in
out
and
push
out
or
mov
jbe
aad
adc
cmp
sub
or
dec
cld
jl
out
lds
mov
or
aas
jno
test
and
xor
push
outsb
pop
daa
or
cmp
subb
lcall
scas
xor
push
jmp
iret
sub
pushf
js
push
or
inc
adc
fisubs
cltd
adc
mov
xor
aas
pop
bound
xchg
dec
sahf
and
cmp
cmp
js
sbbl
push
jle
mov
cmp
shlb
fst
push
stos
out
cld
adc
out
sbbl
andl
lds
sub
imul
std
pop
mov
dec
into
enter
aas
dec
pusha
ret
inc
xchg
stos
test
enter
cmp
sub
mov
das
icebp
scas
subb
xor
mov
xor
in
cmp
ror
mov
inc
aaa
jae
ret
fwait
mov
jbe
dec
loope
sub
and
insb
xor
inc
mov
adc
gs
scas
mov
xchg
mov
pusha
inc
mov
mov
adc
out
fld
stos
add
stc
cmpsl
dec
std
lods
push
xor
dec
inc
mov
pop
mov
sti
cmpb
lock
jae
shlb
mov
sbb
ret
mov
mov
and
pop
xlat
hlt
into
inc
jecxz
rcll
push
fisttps
js
adc
jmp
sub
scas
xor
insl
mov
jge
call
insl
lods
lock
psubd
mov
ss
rorl
ja
xor
mov
mov
mov
add
xor
adc
xchg
movsl
mov
mov
int
cmp
fwait
lahf
imul
or
jge
dec
add
out
pop
push
sbb
ror
mov
jmp
xchg
add
push
lods
add
jge
cmp
mov
inc
out
jle
pop
pop
or
dec
arpl
push
scas
and
addr16
orl
ljmp
dec
imul
pop
mov
mov
insl
outsb
dec
ffree
mull
outsl
mov
arpl
pop
ret
xor
std
shlb
es
mov
std
jne
out
xchg
shr
mov
pop
push
dec
loopne
in
xchg
mov
ret
jg
faddp
arpl
mov
sub
inc
add
mov
mov
stos
jae
pop
arpl
out
dec
cmpsl
int
xor
out
jb
testb
orl
pop
fneni(8087
sub
es
adc
xor
pop
jne
inc
push
cli
cmp
cwtl
ud0
into
xchg
shrl
imul
aam
mov
ret
mov
leave
xorb
mov
xor
test
shr
pusha
push
xchg
xchg
dec
repnz
lahf
inc
in
dec
xchg
pop
test
mov
xchg
test
xor
test
and
push
ficomps
jo
mov
add
mov
es
pop
xor
cwtl
lcall
xor
out
jb
cmp
aad
mov
jae
xlat
pop
jecxz
ss
cs
ja
jno
push
add
test
test
pushf
xor
ds
jecxz
push
adc
push
sbb
ja
daa
and
mov
lret
xchg
cmc
outsb
add
fs
loop
pop
cmpsb
rcrb
push
aam
dec
mov
out
inc
or
test
cmc
outsb
fnsave
push
push
int3
lods
inc
jno
andl
shlb
das
cld
cmc
inc
push
dec
out
dec
and
and
stos
pop
ja
scas
mov
sbb
sub
nop
ljmp
das
popa
xlat
das
pop
push
add
aaa
lods
out
filds
push
dec
sub
xor
sbb
add
into
mov
pop
icebp
sahf
fistl
add
fcoms
add
andl
into
sub
test
mov
addr16
and
add
pop
aam
push
xor
test
push
xor
mov
gs
out
mov
pop
ds
add
jns
enter
pop
cmpsb
out
pop
shrl
sahf
mov
sub
sub
loope
fidivl
mov
and
push
fbld
in
xlat
mov
leave
cmp
lahf
nop
cmpsl
lods
push
push
sbb
in
and
jae
xchg
gs
inc
jae
push
cmp
dec
push
push
mov
fcmovnbe
icebp
out
sarl
pop
and
pop
insb
mov
stos
cli
fmuls
mov
fisubl
sub
shr
in
mov
adc
sub
sahf
sub
push
jecxz
or
dec
xor
or
fisubs
jo
and
mov
pop
ljmp
mull
inc
psubq
xchg
mov
adc
lret
nop
pop
cmc
imul
pop
mov
in
clc
sbb
push
pop
xor
sub
adc
mov
dec
pop
sbb
inc
orl
inc
ja
or
faddl
cmp
repnz
adc
add
rol
add
shll
push
fsubl
sub
loope
in
outsl
push
lahf
fadd
xchg
outsl
and
ss
pushf
pop
lds
outsb
aad
push
shll
pop
xor
or
xor
pop
jecxz
cmpsb
insb
pusha
cwtl
push
fcmovu
cld
in
int3
ret
stos
push
xchg
sbb
sahf
call
mov
mov
jnp
ret
adc
sahf
iret
insb
cmp
jae
inc
das
int3
pop
stos
pusha
push
mov
lea
test
fildll
pop
mov
jno
shlb
adc
mov
in
std
mov
jg
outsl
rol
xchg
mov
mov
pop
cltd
mov
loope
shll
xchg
or
fistpl
pushl
iret
jp
push
push
dec
fwait
mov
push
fadd
push
xor
add
mov
pop
outsl
adc
dec
in
inc
popf
ret
push
mov
mov
jge
sarl
daa
rol
movsb
cmpsb
repz
idiv
leave
lea
pop
xor
jge
cli
cmpsl
movsl
cs
pop
ss
and
adc
jecxz
mov
popa
mov
popa
loop
push
jp
andl
sbb
daa
fcompl
ds
ss
dec
lds
xchg
xchg
shrb
in
pop
mov
movsb
enter
jecxz
arpl
movsb
pop
sarl
lods
mov
shlb
movsb
hlt
sub
cltd
adc
xlat
and
and
mov
mov
sub
inc
outsb
jmp
sbb
inc
test
dec
out
cmp
add
pop
mov
jmp
push
xchg
push
sbb
mov
fnstsw
push
add
jb
fadd
lock
aaa
pop
mov
jbe
sti
xor
aam
pop
sahf
ds
push
xchg
je
xorb
sbb
add
add
jle
cmpl
inc
testb
jnp
add
cmp
in
xor
or
leave
arpl
sbb
or
sbb
push
adc
dec
mov
pop
mov
xchg
mov
push
stc
inc
es
and
bound
adc
push
xchg
mov
add
push
loop
sarl
sub
out
push
in
jo
sbb
and
lds
mov
sbb
mov
xor
rcrl
lods
mov
scas
icebp
xor
cmpsl
fmuls
js
ja
push
xchg
outsb
jge
rclb
icebp
inc
sarl
das
shrl
nop
movsb
adc
pusha
std
lods
adc
push
push
popf
or
cmpsl
lret
daa
pop
adc
stos
mov
cmpsb
pop
aas
jae
int3
and
push
outsl
or
inc
mov
xor
scas
outsl
fistpl
mov
xor
shr
pop
push
mov
sub
mov
lods
test
js
jb
jge
adc
sbb
iret
daa
js
push
icebp
stos
mov
sub
leave
inc
lea
mov
mov
xor
clc
cmpl
cs
jge
loop
xchg
cmc
das
testb
movsl
inc
aam
fiaddl
outsl
sti
not
pop
mov
add
aad
into
ss
push
fsubr
mov
cmp
repz
rcrb
mov
and
mov
and
xchg
inc
popa
mov
shld
xlat
push
inc
idivb
loop
and
sbb
xchg
xor
xor
cmp
stc
push
sbb
mov
push
and
mov
push
in
lock
daa
sub
loop
sub
lret
lcall
jae
popf
pop
jnp
or
repnz
pop
loope
adc
cmp
test
jg
push
push
inc
in
mov
jnp
sub
add
push
xor
sbb
std
xchg
out
into
ret
pop
aam
push
xor
add
push
ror
in
insl
cmpsb
mov
outsl
push
xor
mov
mov
add
push
int3
popa
outsb
clc
mov
or
sub
cld
xchg
in
test
jle
out
jmp
push
mov
je
hlt
xchg
inc
rcrb
mov
lret
lahf
loope
and
std
jbe
jg
fsubrl
dec
and
int3
ds
xor
cmc
dec
movl
fmull
outsb
dec
fdivs
and
jne
pop
xor
ja
mov
and
add
leave
ret
push
aad
pop
mov
push
jge
fcmovne
xor
fadds
test
sbb
cld
jecxz
mov
je
test
xchg
lods
inc
je
in
roll
push
sarl
mov
imul
or
xchg
sbb
int3
adcb
fucomp
xchg
sbb
stos
push
jecxz
push
divb
and
repz
sbb
aam
addb
jns
mov
xor
rorb
nop
mov
jbe
cmp
icebp
sub
jb
in
mov
call
mov
gs
add
or
xchg
aad
rorb
mov
sbb
aam
imul
lret
pop
lret
pop
je
les
ret
adc
test
cmp
inc
jp
fiadds
sti
mov
insl
mov
cmp
pushf
repz
adc
jno
mov
stos
sub
mov
xchg
xchg
frstor
and
aad
shrl
roll
faddl
pop
pop
or
imul
je
cltd
mov
ret
dec
jl
imul
or
push
into
in
mov
or
cld
popa
lret
and
mov
les
call
aam
int
lock
jecxz
pop
std
sbb
or
sub
cmp
lea
movsb
ja
jb
dec
add
fldt
xor
sub
mov
xor
and
fdivp
add
outsl
adc
jge
or
dec
jmp
jmp
test
mov
inc
mov
mov
or
shlb
mov
push
dec
mov
sub
rcrl
leave
push
imul
sub
movsb
cli
or
jae
and
sarl
xor
sub
adc
or
or
das
sahf
and
mov
mov
sub
xor
cld
mov
call
lock
mov
test
dec
push
xchg
jb
sub
add
sbb
repz
mov
fimull
and
or
out
rol
pop
jecxz
imul
mov
in
sub
dec
xlat
xor
hlt
cmp
adc
data16
js
xchg
mov
cmpb
mov
sub
testb
jmp
aas
xor
pop
push
or
sti
jbe
sub
lcall
cld
push
inc
sub
sbb
cmp
jns
out
daa
addr16
sbb
push
fsubrp
hlt
fstpl
inc
cmp
scas
addr16
adc
xchg
insb
cwtl
jbe
test
addr16
xor
hlt
cmp
fisubrs
popa
in
mov
or
mov
sbb
inc
dec
jae
sub
jg
sub
stos
adc
push
sahf
sub
mov
sub
iret
mov
lahf
call
or
mov
xchg
inc
pop
push
test
je
and
aaa
push
xor
mov
call
mov
aam
inc
mov
lret
je
inc
je
scas
jns
in
mov
add
je
jne
jmp
fsts
iret
mov
mov
xchg
mov
dec
add
adc
dec
xchg
and
dec
or
lret
aam
das
mov
dec
add
gs
subb
loopne
adcl
dec
jl
pop
sub
les
in
ffreep
and
pusha
push
movsb
popf
pop
sbbb
and
in
dec
fstpl
jb
add
jns
jnp
xor
push
vsubss
and
jbe
in
lods
cmpsb
flds
or
push
outsl
cmpsb
insb
sbb
xchg
cmp
fists
push
pop
mov
sbb
std
jnp
dec
jge
sarl
inc
mov
dec
push
pop
pop
daa
shlb
xchg
fs
mov
ds
cs
mov
and
mov
lcall
mov
in
pop
cmpsb
data16
mov
push
jl
popf
xchg
pop
xor
shlb
pushf
fidivs
fmuls
or
or
and
cmpsb
push
scas
lcall
sbb
pop
rclb
and
loop
negb
mov
clc
popa
daa
fnstenv
notb
push
pop
mov
insl
and
aaa
scas
dec
xor
sub
push
scas
inc
int
in
xor
loope
int
leave
sahf
mov
ret
fsubrl
pop
pop
jne
cmpsl
aaa
and
cld
xlat
loopne
dec
mov
xorb
repz
xchg
mov
dec
adc
mov
outsl
mov
adc
in
into
das
shl
push
xchg
scas
jmp
xor
sbb
mov
mov
or
call
inc
mov
pusha
xchg
imul
or
ljmp
into
inc
xorb
enter
arpl
loop
sub
ret
daa
cmp
inc
ret
sbb
and
inc
mov
cmp
lock
xchg
mov
in
scas
mov
lret
addl
out
popa
xor
call
dec
jne
jo
loopne
into
or
cmp
cmc
push
cmp
lods
cmp
loop
aas
mov
ret
mov
adc
inc
fdivs
ja
adc
out
and
jne
cld
xchg
dec
shll
jle
loope
mov
scas
scas
or
sti
lods
sete
cmc
and
pop
mov
cmp
rcrl
fnstcw
ss
push
gs
scas
inc
sahf
and
shrl
jle
loopne,pn
icebp
aaa
aam
mov
sbb
addr16
jno
inc
mull
imul
hlt
flds
xlat
push
xchg
adc
arpl
adc
push
cmp
sahf
mov
lods
lret
int
cs
stos
out
data16
cmp
mov
mov
pop
notb
and
cmp
add
lds
shrl
add
outsl
push
jl
data16
mov
mov
and
in
cli
mov
loopne
lea
push
or
popa
jge
std
cmp
loop
int
adc
es
jb
test
sbb
jo
arpl
push
adc
and
adc
pushf
cmp
jb
std
and
insl
orl
mov
inc
xchg
negl
ds
cld
ret
pop
mov
je
add
inc
popf
inc
mov
pusha
mov
das
shlb
jae
cs
cmpsb
cmp
xchg
sub
adc
stos
outsb
sub
push
inc
out
lea
mov
push
sbb
outsl
enter
loopne
xor
rolw
imul
xor
jmp
sub
pop
lods
loopne
xchg
cmpsb
fnstenv
lock
cmc
jns
pop
adc
or
jp
into
jl
jnp
pop
xor
call
xchg
fsubs
js
shll
divl
testl
loop
inc
push
leave
mov
pop
mov
add
push
insl
movsl
mov
jge
jae
mov
dec
push
aad
sub
push
jne
dec
inc
insl
lret
dec
in
and
mov
lahf
mov
test
ss
rclb
movsl
dec
dec
dec
sub
dec
lcall
push
movups
bnd
inc
cmpb
pop
xchg
imul
jmp
fdivrl
insl
lcall
jle
hlt
xchg
cltd
lods
mov
inc
adc
mov
lock
jle
lock
mov
adc
pop
js
and
mov
xor
mov
mov
sub
sub
int
cwtl
repz
cmpsl
jno
dec
sub
cmp
mov
call
divb
iret
into
dec
add
leave
push
pop
arpl
js
adc
stos
mov
sub
les
lods
popf
sar
fmulp
cmp
lods
mov
enter
cmp
dec
and
jecxz
xchg
sub
ret
jbe
cmc
leave
stos
add
stos
inc
cli
jge
cmpsl
sub
sub
test
clc
or
push
js
push
fldt
mov
pop
inc
adcb
cmp
sti
or
sbb
xchg
bound
jne
mov
xchg
push
popf
mul
add
arpl
sbb
add
push
out
nop
mov
jmp
sbb
icebp
loopw
mov
mov
pop
push
add
outsl
xor
push
lcall
in
add
out
mov
mov
fbstp
stc
ret
sbb
adc
das
sub
and
addr16
mov
sbb
ja
insl
dec
mulb
es
fstpl
shlb
neg
shl
pop
jmp
pop
pop
add
or
loopne
mov
pop
sub
jnp
and
mov
mov
loope
jnp
sbb
movl
inc
repnz
ds
pop
das
add
leave
imulb
push
ret
aad
xchg
cltd
mov
outsb
xor
ret
adc
adcl
xlat
pusha
dec
ss
loope
push
enter
xor
and
xor
dec
mov
xor
pop
sub
ljmp
inc
subb
sahf
in
mov
sbb
test
pop
and
mov
test
jmp
aam
dec
jle
cli
stc
mov
dec
fneni(8087
add
dec
sbb
xlat
inc
arpl
dec
xor
xchg
adc
pop
push
xchg
xor
dec
sbb
loop
sbb
pop
sti
popa
xchg
fcomip
cmp
adc
add
popa
movl
mov
jecxz
or
decb
adc
clc
cmp
adc
mov
jo
sbbb
iret
out
mov
cld
mov
pop
xchg
ret
test
cwtl
cld
mov
ja
fs
sub
and
cmp
or
cmp
icebp
les
icebp
lcall
jecxz
xorl
adc
sbb
ss
push
pushf
and
cs
sub
in
int
jp
fsubl
fidivrs
adc
pop
pop
scas
cmpsb
xchg
repz
xchg
pop
sti
push
loopne
cmp
sar
pushf
mov
add
jl
mov
insl
fwait
mov
xchg
daa
fisttpl
repnz
cmpsl
mov
js
push
nop
ss
in
jle
lods
insb
fstpl
mov
int
push
test
sub
mov
xor
lcall
shrb
fidivl
push
loop
ss
dec
loopne
cmpsb
or
adc
mov
pop
xor
cmp
xchg
cmp
sbb
data16
in
jnp
fwait
sbb
xchg
aam
xor
push
push
xchg
out
fdiv
outsb
mov
or
imul
into
xor
in
mov
pop
dec
lret
stos
and
pop
cmp
sub
test
mov
in
lret
push
pusha
rorb
lret
sub
sub
test
addb
and
stos
push
dec
add
xchg
movsb
dec
jecxz
or
lods
lcall
cmp
inc
daa
popl
stc
pop
xlat
std
push
call
mov
pushf
shrl
out
xlat
mov
decb
fdivrs
push
outsb
pop
mov
dec
pop
adc
jb
mov
mov
movsb
cli
or
mov
sbb
fsubrs
jnp
movsb
enter
outsl
cld
add
dec
mov
cli
mov
mov
scas
pushf
mov
aaa
lret
inc
mov
or
mov
or
push
inc
adc
int3
jnp
xchg
cmp
loop
pop
mov
mov
mov
stc
add
das
sub
mov
loopne
pop
cmp
push
adc
jno
mov
mov
jmp
push
sarl
cmp
stc
mov
popa
lret
push
hlt
and
fiaddl
dec
pop
push
lahf
out
test
in
inc
cmpsl
aas
mov
xor
mov
mov
lret
cs
or
scas
pop
pop
mov
lds
jg
dec
imul
or
sub
inc
inc
cs
gs
mov
cwtl
repz
in
lds
push
xchg
xor
inc
int
or
jnp
loop
adc
loopne
inc
test
hlt
dec
xor
mov
loop
push
sub
dec
hlt
int
xchg
sbb
mov
out
pop
cmp
lods
inc
movsl
and
daa
sahf
test
xchg
xor
shll
popa
insb
call
mov
mov
jl
pop
pop
xchg
xchg
mov
in
cwtl
cmp
inc
xlat
dec
lock
loopne
xchg
call
mov
sbb
or
lods
popa
or
aaa
and
xchg
jl
and
sub
jmp
imul
ja
mov
push
pop
cmp
cmc
mov
fistpl
faddl
jbe
in
xor
lcall
fldt
sub
repnz
fstps
or
sarb
dec
rcrb
push
sub
ja
xlat
in
jo
push
dec
cmp
xchg
jl
xor
ja
loop
xor
xor
out
cltd
aad
imul
popl
or
add
dec
add
js
bound
mov
xor
push
add
dec
jns
inc
decl
insl
lds
xchg
rolb
clc
xor
lods
aaa
sahf
xchg
or
adc
cmpl
lods
jge
jno
sti
xorb
fisttpll
mov
xchg
push
adc
adc
movsl
inc
xor
push
pushf
cld
cs
insl
icebp
dec
cmp
int
js
incb
push
insl
sub
fldl
fnsave
movsb
inc
jns
in
push
outsb
fsubs
dec
inc
sub
test
mov
ja
and
imull
or
cmp
cwtl
call
mov
clc
cltd
addb
add
mov
pop
push
addr16
mov
pop
pop
fs
lret
daa
aaa
cmp
bound
dec
mov
adc
fbstp
lret
ret
dec
shrb
lret
push
add
or
add
stc
pop
pusha
int3
dec
add
dec
xchg
fsubrl
mov
loop
sbb
and
sbb
add
push
movsb
cmp
xchg
hlt
xor
fwait
lods
sub
ja
mov
bound
inc
lock
out
jp
fwait
out
cwtl
ljmp
shll
movsl
mov
fstps
and
mov
xchg
and
add
mov
fstpl
sub
and
xchg
sti
or
sub
adc
cs
shlb
aas
sbb
pop
sub
idivb
rcll
mov
or
lds
cltd
shlb
ret
in
fwait
sbb
daa
jmp
cmp
jl
bound
xchg
xor
push
mov
lods
and
daa
gs
mov
cmp
and
pop
cmp
outsl
mov
loope
jge
test
mov
data16
sbb
or
pop
test
jb
fcomps
pop
cli
ret
sbb
in
call
cld
push
pop
imul
sbb
or
adc
sub
rcr
insl
xchg
orl
gs
imul
andb
sub
js
ljmp
imul
rcrl
add
sub
lret
jge
hlt
cs
outsb
jmp
jno
call
pop
xchg
xor
push
xchg
inc
rcr
pushf
jp
repz
aaa
bound
jp
lock
cmp
dec
leave
mov
add
or
xchg
cmp
in
movsl
jno
cmp
les
and
inc
mov
insb
add
jnp
sbb
and
out
outsb
sub
ja
xor
push
punpckhbw
scas
jge
xchg
mov
mov
pop
loop
xchg
call
pop
enter
sbb
mov
data16
pop
stc
sti
mov
lahf
shlb
lret
mov
jmp
icebp
xchg
imul
sbb
jp
scas
fs
shl
jne
out
mov
out
mov
iret
je
test
in
dec
lret
clc
les
xor
cmp
std
pop
outsl
movsl
mov
inc
lock
mov
adc
adc
scas
popa
jae
fisubs
scas
push
gs
je
adc
fsts
xchg
sub
mov
out
call
sbb
fdivrp
int
add
out
es
xor
insl
mov
mov
push
jg
ds
push
test
fwait
sub
mov
xchg
out
enter
push
cmpsl
enter
mov
test
stc
cmc
loop
sbb
add
xor
mov
aam
aaa
dec
pusha
fdivs
arpl
lret
and
sub
xor
int
aas
jne
jle
sbb
lods
shll
xor
inc
cmp
sbb
clc
or
int
and
xchg
inc
cmc
inc
fistl
mov
enter
and
dec
aas
sub
jo
jg
aaa
jno
movsl
xlat
dec
cpuid
cltd
cmp
adc
jle
aam
sbb
sbb
mov
add
iret
mov
inc
addr16
movsb
leave
pop
xchg
and
dec
and
dec
nop
pop
pop
adc
xor
push
test
and
lret
js
mov
mov
fs
aam
push
les
mov
mov
ret
jg
push
stc
adc
mov
mov
les
sbb
adc
mov
mov
mov
ljmp
xor
je
xlat
pop
sbbl
jmp
mov
test
pop
jp
test
stc
popf
loopne
cld
pop
outsl
push
arpl
mov
outsl
pop
int
fstps
insl
sahf
sub
repnz
adc
shl
popf
test
push
fsts
mov
movsl
fistpl
cltd
int
fs
jb
and
sbb
arpl
lea
sub
leave
xchg
fsubrp
es
lea
int
dec
pop
movsb
jns
js
mov
mov
and
loopne
addl
xchg
std
sbb
sarb
sub
lea
sub
daa
inc
and
lret
enter
push
cmpb
out
scas
or
fimuls
cmp
scas
shlb
fwait
xor
mov
in
inc
jno
push
or
jnp
xchg
rcrl
push
jae
fimuls
jg
cmp
insl
push
or
stos
cmp
jbe
pop
sti
movsl
les
add
mov
or
movsl
enter
movsl
dec
push
pop
inc
sub
aam
jecxz
out
popf
cmp
xchg
mov
mov
data16
subb
push
testl
mov
adc
jmp
cwtl
bound
arpl
xchg
insb
nop
jg
fcmovnbe
ret
mov
fsubl
addr16
lds
pop
pop
xchg
sub
js
push
dec
shrb
xchg
xchg
push
jo
insb
jle
repnz
shlb
mov
xor
aaa
test
jne
and
push
dec
mov
xor
das
or
mov
scas
popa
sahf
push
and
add
push
popf
cs
mov
fsts
lret
cmp
std
fbstp
dec
xor
sub
pop
push
adc
loop
movsl
iret
add
leave
stos
stos
orb
es
inc
add
jmp
push
movsb
and
repnz
cmp
fldl
cltd
cmpsl
gs
push
pop
xor
and
into
lds
adc
pop
aas
adc
sub
add
mov
pop
cmp
mov
mov
inc
test
arpl
jecxz
in
and
arpl
push
sub
cmc
shrb
push
push
mov
sub
dec
insb
mov
adc
adc
sub
gs
fisttpll
adc
out
sahf
popf
nop
cmp
mov
jl
notb
push
aad
in
js
sbb
les
rcll
push
pop
ss
adc
lds
std
mov
push
mov
jp
fcomps
nop
xchg
xor
std
sbb
push
push
pop
idivb
shll
lods
dec
add
mov
out
jle
pop
xchg
cmp
inc
pop
leave
pop
and
mov
mov
add
push
mov
cld
out
icebp
jne
subb
sub
insb
shrl
mov
and
mov
aaa
cltd
jp
lods
inc
sbb
jne
in
push
jge
inc
push
mov
and
sub
sbb
xorl
jno
mov
arpl
push
push
aad
xor
mov
mov
xor
sbb
inc
ret
shlb
aad
lods
jbe
mov
movsl
pop
and
das
pop
das
bound
loopne
cwtl
sbb
lahf
add
pop
gs
getsec
cld
icebp
jmp
push
stos
xorl
push
in
mov
ljmp
test
dec
daa
cmp
cld
fs
call
fdivrl
push
and
nop
xorb
fildll
jae
fcompl
xchg
xchg
bound
roll
dec
movsl
loop
mov
pop
insb
add
test
pop
int3
inc
xor
add
or
icebp
ljmp
adc
xor
lods
sub
arpl
or
fs
std
fs
scas
ret
jo
test
jle
xor
xchg
outsb
push
lcall
fists
in
into
push
add
pop
int3
lds
xchg
lcall
fwait
roll
leave
repz
leave
or
mov
adc
lock
push
cmp
andl
in
xor
jae
test
icebp
mov
mov
shrb
icebp
lret
xchg
xchg
cmpsl
mov
jl
icebp
push
ja
jae
iret
xor
int3
pop
dec
daa
rorl
push
data16
jecxz
lock
popa
or
push
cwtl
add
lea
jbe
movl
mov
loop
addb
inc
fcomp
xchg
sbb
test
or
xchg
jns
insl
in
test
das
dec
xchg
add
inc
insl
jnp
fs
std
fadd
xchg
mov
andb
pop
lds
fwait
mov
dec
mov
lods
daa
bswap
xchg
insb
push
dec
pop
mov
jne
sarl
push
sbbb
cld
adc
adc
push
test
sbb
mov
arpl
dec
jne
xchg
movl
xchg
in
xor
hlt
shll
mov
pop
pop
es
xchg
sti
inc
mov
sub
cmc
mov
bound
mov
jle
push
jle
cmp
or
pop
scas
cmpsb
movl
mov
cmp
xor
das
pusha
std
leave
lcall
xor
test
divb
js
inc
jbe
fsts
dec
adcb
addl
add
mov
jno
push
xor
scas
ret
or
jge
push
insl
jg
or
in
push
mov
loopew
pop
mov
mov
or
shrl
addr16
notl
push
add
jmp
mov
rcll
out
inc
cmp
movsb
or
push
rcl
lods
in
jge
pop
mov
lahf
rorl
adc
jbe
and
outsb
xor
data16
xorl
and
mov
aad
call
aad
mov
cmp
lahf
jmp
xchg
mov
rcl
and
mov
daa
sbbl
pop
stos
xchg
pop
xchg
jns
mov
pop
movsb
add
fldenv
movb
or
cmc
inc
push
and
cli
arpl
dec
and
xor
push
fcomps
add
out
sub
pop
xchg
dec
mov
rclb
into
imul
aas
lds
mov
insb
popa
or
insb
je
enter
xor
aam
mov
xchg
dec
js
pop
sbb
orl
loope
shl
daa
push
pop
in
les
std
rcl
or
mov
pop
adc
repz
xchg
or
shlb
loopne
sbb
popf
loope
fsincos
mov
mov
pop
fnsave
mov
and
mov
jge
cmp
outsb
jns
push
add
cmp
add
mov
cli
daa
or
aam
sbbb
scas
xchg
enter
sub
loope
jl
ss
movb
cmpsl
sarl
mov
ljmp
rolb
insb
push
cmc
sbb
mov
cwtl
jno
or
ret
push
mov
add
jle
and
insb
gs
push
cmp
popfw
in
mov
out
sub
xchg
clc
push
pop
inc
push
je
lahf
cmpsb
inc
out
dec
jmp
cmp
mov
rclb
sub
adc
jne
in
adc
test
adc
dec
in
scas
cmp
sbbb
mov
cmc
inc
hlt
sbb
fdivrs
push
je
pop
pop
and
push
lahf
out
or
clc
dec
fwait
jge
cli
les
inc
push
orl
cmp
insb
scas
loopne
xorb
adc
rorl
js
pop
cmp
mov
mulb
sbb
push
add
faddl
jle
pusha
sbb
std
cmpsl
iret
sti
stc
xchg
cmpb
call
pop
enter
jmp
int3
dec
arpl
mov
ret
mov
mov
mov
popa
jp
shlb
xor
arpl
fstpt
fwait
jbe
ljmp
adc
pop
imul
daa
lock
jne
sub
pop
fdivs
jno
cld
xor
cmp
rorl
bound
adc
adc
add
sub
jno
xor
jecxz
or
and
mov
mov
sbb
lret
push
lods
xchg
les
pop
inc
orb
aam
mov
xchg
xlat
jmp
mov
fdivr
pop
or
int3
jno
mov
cmp
cwtl
popf
hlt
sbb
mov
xor
mov
in
mov
test
mov
mov
mov
or
or
bound
mov
mov
push
clc
test
sub
int3
lea
fstpl
mov
xchg
push
iret
push
fs
xor
iret
shll
dec
sbb
adc
repz
cs
stos
iret
jns
lcall
mov
stos
fdivrs
cmp
fstps
ljmp
mov
addb
mov
mov
in
bound
push
pop
fsubr
xor
jb
inc
test
ds
xor
aas
cmp
mov
mov
xchg
xor
and
cmp
jecxz
xchg
add
mov
adc
dec
adc
xor
mov
cmp
aam
popf
aaa
or
inc
pushf
in
mov
call
pop
fwait
inc
daa
mulb
out
aas
outsl
mov
pop
xchg
cmpsb
xchg
inc
in
imull
mov
mov
adc
vpackssdw
pop
fnsave
shl
popa
jl
mov
and
sbb
xor
dec
xchg
push
sub
mov
movl
inc
jl
inc
pop
fcomi
xor
jle
cmpsb
or
clc
loopne
mov
push
mov
cmp
imul
nop
inc
jl
xorl
and
jns
mov
jne
inc
pop
cmc
adc
lds
test
mov
pushf
arpl
repz
push
or
lods
psubb
popf
stc
jg
cs
inc
fistps
inc
xchg
adc
sub
sub
scas
pop
clc
adc
stos
jp
jne
jle
inc
sbbb
cmp
push
icebp
je
jno
test
mov
inc
pop
jmp
or
xor
and
xor
bound
pop
adc
mov
cli
outsb
pop
mov
cmp
test
fdivrs
les
inc
jge
adc
icebp
cmp
out
push
fs
mov
imull
cmpsl
call
lock
jp
xor
jg
rdtsc
cmc
cmp
stos
push
mov
push
mov
insb
lock
and
loop
out
add
and
inc
sub
pop
insl
dec
outsl
shlb
dec
pop
mov
add
add
xchg
lods
dec
movsl
cmp
das
dec
xchg
neg
je
dec
aam
jecxz
mov
push
outsb
xor
pop
in
leave
xchg
xor
hlt
pop
std
cwtl
fwait
push
shlb
pusha
jns
inc
aas
add
sbb
popf
jns
pushf
pop
sub
and
add
cs
push
dec
mov
test
sbb
xor
or
or
scas
loopne
push
adc
sahf
sbb
stc
ljmp
stos
sbb
add
cmc
loopne
xchg
ds
in
adc
adc
jecxz
dec
dec
xor
xor
aas
nop
sbb
mov
enter
lods
push
fldt
rcr
shlb
fisttps
jp
flds
ds
mov
stc
or
sub
filds
cld
mov
mov
or
mov
and
xchg
fsubr
pop
push
pop
mov
pop
push
push
and
mov
popf
pop
out
mov
mov
les
stos
or
andw
lret
popa
or
loop
and
cmp
lret
shrl
jecxz
cmp
std
or
movsb
ss
push
pop
xchg
ja
adc
mov
add
sub
mov
and
push
or
jge
les
mov
out
into
out
inc
call
pop
pushf
or
in
cld
imul
mov
test
xchg
jmp
ja
and
pop
jbe
adc
sub
pand
hlt
push
jmp
and
mov
xchg
sbb
sti
popf
mov
into
call
jnp
mov
stc
mov
sbb
aad
mov
xchg
push
inc
shl
mov
rorl
mov
push
mov
fiaddl
test
fwait
push
sbb
lea
push
mov
or
movsl
adc
aaa
add
test
insl
mov
test
cld
sahf
pop
and
movsb
aad
mov
cltd
scas
push
dec
mov
rolb
cmp
sahf
pop
jo
aas
pop
ss
setns
sub
pushl
aad
push
sub
mov
mov
outsb
popf
mov
je
ret
pop
dec
pop
mov
sbb
pushf
xlat
jge
lret
call
adcb
out
push
test
inc
xlat
jbe
pop
add
inc
in
cli
push
mov
pop
mov
test
out
inc
pop
mov
or
movl
int
and
roll
xor
outsb
popf
sub
cmpsb
movsl
pusha
test
stc
andl
or
or
and
xchg
cmp
lret
lret
push
mov
mov
mov
addr16
xor
cwtl
adc
adc
jnp
es
xchg
adc
mov
and
std
stos
repnz
hlt
je
pop
and
rorl
mov
repnz
cmp
jle
mov
xchg
test
xchg
outsb
ss
add
push
cld
ret
sub
aad
lret
inc
movb
mov
mov
ret
enter
out
arpl
xchg
addr16
xchg
lock
sti
lods
pop
xor
jp
mov
inc
pusha
das
in
jns
and
stos
pop
xchg
cmp
iret
sahf
cmp
ds
dec
pop
mov
jne
push
jl
fwait
mov
mov
dec
mov
icebp
and
fstl
fmuls
stc
imul
mov
sbb
jne
fldl
jmp
jge
ljmp
sbb
cmp
xchg
mov
xor
test
test
sarl
jp
jle
addl
xor
and
repnz
mov
sbb
dec
push
and
dec
jp
scas
mov
mov
cmpsl
mov
pusha
xchg
adc
scas
and
ret
jnp
addb
arpl
jnp
mov
scas
out
and
mov
push
inc
mov
int
pop
push
pop
scas
test
sub
shr
int3
jmp
dec
lea
cs
mov
mov
scas
addr16
and
jmp
dec
add
repz
mov
or
mov
xor
fstpl
mov
dec
pop
lods
ror
ds
ja
xchg
lods
movl
push
dec
cs
mov
mov
push
fisubrs
dec
test
mov
jae
out
adc
loopne
addl
sbb
roll
pop
cmp
cmpsl
test
add
sarb
cld
gs
push
dec
or
xor
and
ja
ds
dec
repnz
pop
cltd
pop
push
call
push
out
xlat
lea
shlb
das
add
xorb
push
mov
jno
out
pop
inc
or
adc
cmp
in
mov
insl
jo
inc
mov
jbe
xchg
test
and
sahf
lods
jge
gs
js
push
pop
repnz
std
fdivs
stos
push
rol
mov
add
comiss
jmp
lock
fiadds
push
inc
xchg
sbb
xchg
lods
cmc
cltd
insb
or
cmp
xor
insl
enter
ljmp
or
int3
in
ss
outsb
cmp
cmp
inc
pusha
stos
push
dec
pop
js
orb
adc
test
and
leave
in
pop
add
push
jbe
mov
shll
xchg
xor
aaa
push
mov
mov
jb
sbb
icebp
jg
lcall
push
lcall
ja
pop
sbb
and
nop
mov
lcall
sbb
ret
test
mov
dec
jl
leave
lcall
mov
cmpsb
or
fwait
and
insb
cld
je
mov
fldcw
aas
xor
xchg
xor
shr
sbb
push
fmuls
mov
mov
negl
fldl2t
cli
lcall
or
inc
pop
mov
push
fsts
xor
arpl
cmp
cltd
dec
and
fstps
xor
mov
aas
inc
out
sahf
fnstsw
sbb
sub
mov
sbb
mov
cltd
lods
jb
fs
xlat
cli
fisubrl
pop
test
inc
pop
lods
subl
cmp
jo
fisttps
into
mov
mov
fsts
rorb
and
stc
notl
fs
mov
fs
das
enter
data16
ret
aad
outsb
faddl
cmp
mov
repnz
mov
insb
sbb
shlb
movsl
push
pop
xlat
add
mov
daa
cltd
mov
jl
das
jp
sub
push
rcr
daa
lods
push
adc
inc
sbb
sbbl
jb
add
lret
push
ficompl
aaa
subb
loop
xchg
xchg
mov
aam
inc
adc
xorb
cmp
popf
das
xchg
shlb
popf
imulb
out
push
loope
jmp
push
inc
jecxz
pusha
cmp
in
lods
out
add
cld
add
and
pop
dec
std
orl
fstl
lds
dec
negl
jecxz
jg
shll
dec
mov
mov
inc
cltd
add
mov
gs
pop
and
inc
sub
out
xchg
daa
je
mov
in
and
insl
cmpsb
jecxz
shll
ret
pop
pop
mov
sahf
bound
mov
sub
push
mov
fcompl
sub
lods
inc
daa
scas
dec
icebp
fdivrl
in
add
stc
and
mov
fdivrs
mov
xchg
and
mov
repnz
int3
jns
lcall
pop
add
in
js
push
es
enter
test
xchg
xor
or
or
add
arpl
pop
das
xor
add
into
loopne
mov
sbb
ja
out
dec
shrb
mov
mov
lods
push
ret
loopne
cmc
mov
mov
and
lret
jns
xchg
icebp
out
lods
in
out
enter
mov
fstpt
incb
inc
jl
pop
xor
cmp
rcrb
or
mov
mov
xchg
mov
push
sbb
jno
test
adc
and
iret
icebp
jns
lret
mov
sbb
xchg
jbe
fsubl
stos
loop
pop
mov
iret
sbb
cmp
dec
js
pop
iret
adc
jo
push
adc
push
or
inc
mov
sub
int
ja
push
mov
and
and
nop
js
mov
idiv
jg
mov
gs
and
aad
hlt
sub
sub
je
sahf
inc
je
sub
shlb
mov
cwtl
adc
push
rcll
push
push
out
lds
ret
fwait
mull
inc
lods
jmp
pop
mov
js
add
push
cwtl
mov
jmp
ret
jo
inc
xchg
push
imul
fnstsw
cmp
and
inc
and
xlat
adc
xlat
fsubl
cmp
loop
mov
jl
fsubs
in
xor
leave
into
push
outsb
nop
xchg
inc
add
sti
mov
mov
into
popa
sub
xor
sbb
mov
dec
add
pop
pop
lock
sub
adc
fldenv
sbb
pop
mov
lahf
in
mov
pop
mov
aad
addr16
sbb
in
dec
inc
push
jg
and
add
fsubs
stos
int
addr16
cmp
les
pop
mov
fwait
mov
cmc
cli
lret
or
xchg
add
fsubl
xor
sbb
push
and
xor
xchg
iret
mov
cmp
xchg
add
push
repz
jg
scas
inc
xor
jbe
add
mov
fdivrp
mov
jae
aas
xlat
jno
xor
sbb
lock
scas
aaa
pop
scas
and
jae
lods
sbb
inc
xchg
mull
movsl
lcall
inc
mov
fdivl
and
add
inc
sub
mov
xchg
push
push
popa
and
sub
and
mov
xchg
imul
cmp
jno
pop
cmpsl
or
inc
and
test
cmp
std
jae
scas
stos
xor
xchg
call
pop
pop
enter
xchg
add
orl
mov
aaa
sub
dec
mov
jae
rorl
inc
test
cld
add
out
jno
jp
orl
cmp
jb
mov
xor
jnp
push
xor
std
pusha
xchg
push
movsb
repz
lods
push
in
mov
out
jecxz
add
test
mov
nop
lods
sbb
leave
jb
mov
inc
stos
mov
adc
add
inc
sub
jecxz
into
cld
push
push
lea
fwait
rcrb
ret
fcomip
or
jl
xchg
das
push
or
sbb
jne
xchg
mov
rol
mov
lds
and
mov
and
test
in
or
iret
out
mov
sbb
lahf
shll
fiaddl
pushf
mov
mov
and
movsl
into
lea
sub
adc
mov
pop
sub
ds
jl
jmp
js
push
loope
mov
fstpl
mov
adc
std
mov
loopne
jno
out
pop
xor
mov
dec
rep
mov
xchg
add
stos
addl
dec
add
dec
rcrl
sbb
scas
mov
sarb
push
lret
mov
sub
movsl
rorb
pop
cmp
push
out
loopne
ljmp
xchg
out
or
dec
sahf
std
outsl
pop
inc
xor
jbe
mov
pop
dec
mov
jb
std
pop
fistpl
pop
cmp
out
jmp
roll
or
mov
or
ret
cmp
or
and
fcompl
gs
dec
xchg
idivb
adc
popf
sub
lds
mov
lods
and
push
stos
bound
and
mov
repnz
mov
test
jnp
or
cmp
inc
ja
xor
in
sub
sbb
pop
nop
shlb
cmp
fldt
imul
jne
sbb
xchg
adc
pop
imull
ja
pop
mov
ljmp
fsubl
bound
jno
or
in
sub
popf
jmp
sahf
mov
jo
fs
or
into
fisubs
dec
add
push
push
xor
dec
pop
lcall
jle
fs
add
cmp
pop
sub
out
or
mov
das
mov
dec
jns
scas
cltd
pop
shll
jae
pushf
lds
subps
push
fstl
sub
inc
mov
pop
jo
jae
jno
mov
xchg
sahf
inc
mov
call
fcoml
cmp
jle
dec
or
jmp
sbb
cmc
rcr
xchg
insl
lcall
arpl
into
dec
les
outsl
pop
xchg
outsl
or
jle
dec
xchg
rcrl
jmp
xchg
rol
ss
fistpl
adc
in
std
mov
xchg
jae
mov
sar
push
data16
add
push
sbb
push
fcmovnb
jno
insl
out
sar
int
test
js
mov
fidivrl
xor
loope
sbb
jmp
or
ljmp
dec
pop
lea
add
pop
fistl
xchg
pop
cli
and
cmpb
shll
xchg
addr16
sar
dec
sbb
xchg
push
sar
in
lret
hlt
popf
sbb
xor
pop
jg
xor
test
pushf
mov
inc
push
and
xchg
or
mov
in
loop
sub
mov
inc
lcall
ret
repz
jnp
shll
pop
dec
and
dec
sub
popa
repz
negb
sub
push
mov
add
pusha
rcr
dec
inc
jge
test
rclb
add
mov
inc
adc
les
pop
mov
inc
sbb
cmp
in
and
imul
movsl
adc
out
arpl
adc
sub
or
sbb
mov
or
movsb
out
xchg
add
push
fstpl
push
mov
sbb
or
sahf
jecxz
dec
addr16
mov
out
cmp
xor
xor
xor
xor
popf
pop
adc
fistpl
jecxz
sub
or
ds
int
shr
lahf
xchg
dec
push
fld
dec
int
insl
mov
xchg
je
lcall
cmp
jno
jge
imul
mov
cmp
int
into
or
add
xchg
ja,pn
xchg
jmp
test
and
ret
int
aad
push
add
push
dec
sbb
aad
js
adc
cmp
in
hlt
pop
outsl
xchg
rcrl
sbb
jbe
lret
scas
sbb
sbb
stc
out
cli
es
push
xchg
addps
cwtl
inc
push
add
push
xor
push
mov
sbb
addl
mov
xor
push
sti
rorl
and
dec
push
cmpsl
out
stc
sbb
sbb
push
adc
cmp
jns
xor
loop
jb
ljmp
je
mov
mov
cmpsb
loope
in
pop
insb
test
add
dec
sbb
cltd
xor
cmpsb
push
inc
mov
or
pop
and
orl
xchg
ret
lcall
xchg
pop
mov
cmp
cmp
out
xchg
add
aas
xor
jns
aas
cmp
jno
decb
clc
or
dec
lds
pop
adc
sbb
lods
fisubl
jg
and
fldt
mov
pop
mov
push
loopne
aaa
and
jmp
dec
mov
xchg
aas
mov
lret
adcl
mov
jbe
dec
insl
add
xor
push
fistl
xor
mov
mov
push
cmp
dec
cmp
push
je
sub
fbld
ljmp
add
push
out
mov
outsl
sub
ja
int
cmp
cmp
aam
sub
ds
sub
ljmp
jbe
fisubs
loopne
fcomp
cmp
idivb
cld
xor
mov
jmp
jle
mov
jne
push
or
or
out
stc
or
add
movsb
dec
je
adc
icebp
addl
xchg
leave
mov
loop
test
pop
call
repz
shl
repnz
mov
sub
sarl
and
pop
sub
cmpl
mov
cmp
pushf
lcall
call
arpl
lret
adc
leave
cmp
dec
cmpsb
repz
and
lret
pop
stos
sahf
cmpsl
or
paddusw
mov
adc
icebp
int
ljmp
mov
sub
adc
and
inc
loop
call
add
dec
mov
data16
xor
jno
popa
cmp
pop
insl
in
cmpsb
push
outsl
and
push
das
adc
jbe
lret
ja
xchg
and
neg
push
mov
mov
lea
movb
inc
pop
aaa
fsts
jg
pop
xchg
sub
cld
xchg
fbstp
push
repz
sub
fimuls
popa
in
leave
stos
cmpl
out
mov
adcl
jl
mov
sti
xchg
lods
cli
jae
and
pushf
jmp
adc
mov
out
pop
loopne
inc
shl
fnsave
pop
or
xor
pusha
js
movsl
mov
inc
ljmp
int
les
sar
stc
ja
dec
mov
andl
int3
pop
xchg
mov
in
push
cmp
out
fistps
mov
int3
push
jecxz
stos
sahf
pop
or
push
sahf
mov
mov
dec
arpl
xor
or
mov
cmp
inc
pop
cmpsb
jns
jl
jne
lea
movsl
sub
aas
jp
or
adc
scas
mov
mov
mov
cltd
pop
jge
in
jmp
daa
insl
jecxz
mov
ret
loope
and
sar
leave
lods
adc
out
sub
fidivrs
inc
push
pop
xchg
xorb
in
insb
xor
insl
ficoms
mov
jb
inc
push
aas
std
mov
or
bnd
xchg
push
je
inc
lret
cmp
lock
mov
jns
in
aam
push
mov
xchg
sbb
sub
out
test
clc
or
addb
adcb
mov
or
inc
adc
ljmp
neg
flds
std
aas
hlt
popa
mov
push
icebp
in
pop
and
push
out
push
jne
daa
xor
add
sub
fsubl
sarb
in
xchg
sub
push
repz
push
lret
mov
mov
popf
xchg
jp
test
inc
push
mov
adc
mov
mov
jae
xor
lods
lahf
shlb
inc
pusha
out
arpl
cmp
add
fmuls
outsl
in
mov
fisttps
cld
out
out
addr16
mov
mov
push
loope
jg
jae
subl
and
add
scas
js
icebp
cmp
jmp
pushf
int3
xchg
pop
dec
fwait
ret
inc
cld
rclb
dec
jp
cltd
pop
pusha
data16
cs
cmp
clc
aad
insb
adc
lahf
xchg
add
inc
adc
pop
mov
push
mov
jae
push
mov
push
add
in
and
or
js
xor
into
xchg
lods
mov
mov
cmp
in
add
imul
daa
push
inc
cmp
xor
add
jmp
bound
lock
adc
or
and
mov
pop
jo
jbe
add
sbb
shll
rol
mov
lcall
and
mov
or
xor
cmp
cltd
xor
repnz
xchg
mov
xor
and
repnz
jbe
mov
imul
cmp
fs
sbb
lret
pop
and
mov
popf
pop
je
pop
mov
xchg
ror
lea
in
dec
movsb
mov
xor
mov
jno
xchg
dec
nop
shl
inc
add
dec
push
daa
jne
fldl
cmp
mov
cmp
pushf
inc
and
ret
dec
dec
jbe
add
aaa
adc
or
cmp
xchg
sub
sarl
xor
jae
ljmp
orb
adc
aas
outsb
test
mov
daa
ret
stos
and
push
mov
fs
repz
in
sbb
pop
in
stc
into
mov
fsubl
adc
xor
loop
not
pushf
mov
and
fadd
sarb
ja
outsl
lea
fimull
in
jb
lret
xchg
fs
test
mov
mov
jbe
pushf
sub
stc
jl
test
dec
dec
pop
cmp
adc
cltd
push
fdivrp
negl
jno
lods
dec
movsb
out
mov
neg
inc
loop
mov
lods
gs
pop
push
xorb
sub
push
mov
add
adc
repz
or
repnz
fiadds
jne
dec
lods
sub
jmp
je
inc
subl
nop
out
jecxz
fdivr
cltd
sub
push
sbb
dec
lret
push
sti
push
mov
fs
add
push
mov
push
push
scas
mov
sbb
mov
mov
pop
cmpsl
aas
xor
mov
in
fdiv
or
push
in
xor
scas
gs
mov
daa
jg
cmpsb
out
ljmp
aas
push
rorl
cmpsl
stos
mov
push
dec
pushf
inc
int
mov
leave
aaa
xor
mov
inc
sub
dec
or
jbe,pn
xor
test
out
or
je
push
aam
hlt
cmpsl
xchg
or
mov
sub
jmp
filds
jns
pushf
push
notb
scas
sbb
insl
mov
mov
sbb
pop
mov
sarl
jg
mov
inc
sbb
popf
and
rol
fistpll
xor
xor
roll
push
pop
adc
xchg
lahf
int
cmpsb
push
pop
movsb
imul
add
xchg
sbb
aaa
in
xor
cmp
adc
and
jmp
pop
jge
fldenv
popa
jnp
imul
dec
movups
cmpsb
mov
adc
mov
mov
pop
lahf
cli
pushf
repz
cli
mov
fdivrs
dec
jl
pop
dec
ja
das
push
dec
fcoms
out
mov
ja
shrl
cmp
pop
mov
movsl
xlat
cs
mov
fdivl
ds
cmpsb
dec
shlb
push
aad
bnd
and
add
stos
addr16
lret
mov
aas
xor
xlat
aam
and
and
ljmp
hlt
push
jge
aaa
sub
into
icebp
adc
int
out
mov
in
in
push
adcl
scas
pop
ljmp
mov
lret
mov
lods
call
movsl
pop
rorb
push
orb
ja
pop
push
out
jne
mov
push
sahf
lret
std
cs
jmp
cmp
xor
and
xchg
imul
mov
rclb
int3
push
stos
bound
or
xorl
test
movsb
ljmp
jnp
int
rclb
xlat
test
cmp
data16
test
dec
xor
or
outsl
roll
add
jmp
adc
cli
fimuls
jnp
out
and
imul
ja
shll
pop
pusha
jns
mov
sub
mov
jnp
mov
sbb
lret
out
pop
mov
ss
sahf
sub
sub
mov
fs
sub
lahf
pop
shll
data16
sbb
mov
jbe
xchg
cli
pusha
divl
cmp
add
pop
jns
jns
add
sbb
sti
fsubrs
cld
in
add
mov
xor
cmp
pop
add
adc
rorl
push
cmp
outsb
es
add
fdivs
jge
mov
add
ret
fdiv
ljmp
or
mov
fcmovnu
push
sub
sbb
addr16
push
mov
pushf
scas
cmp
mov
dec
inc
loope
inc
loop
jmp
test
dec
xchg
imul
jg
pop
cs
xchg
cmp
sub
xchg
je
fwait
rcrb
ljmp
pusha
or
pop
mov
out
xchg
and
push
add
and
or
sub
lcall
push
js
xor
xchg
xchg
push
adc
lds
testl
jmp
cltd
popf
mov
gs
and
out
repz
or
daa
ljmp
negl
mov
leave
xor
mov
out
pop
popa
call
jae
cmovle
sbb
dec
test
mov
cmpsl
cli
pop
xchg
dec
xor
xlat
test
sbb
inc
jne
jp
mov
mov
cmpsl
hlt
and
adc
pusha
fistps
mov
cmp
stos
fbld
pop
jmp
mov
add
jae
dec
sbb
lahf
xor
mov
iret
sbb
test
mov
mov
xchg
and
sbb
sbb
cld
int3
ret
and
sub
mov
imul
or
pop
aam
fs
arpl
loopne
push
mov
fwait
and
hlt
or
jg
repnz
jmp
fists
jmp
jle
in
cld
fs
sbb
xor
jl
xchg
aam
xchg
stc
sub
mov
mov
jecxz
int
jno
mov
xor
jo
repnz
enter
sbb
mov
pop
inc
and
or
sbb
jns
cmp
sti
out
fisubrs
mov
lcall
fcomp
enter
incl
sbb
fwait
add
pop
dec
xchg
insb
gs
mov
cli
leave
push
mov
cmp
push
mov
lock
mov
mov
pop
outsl
cwtl
cmpsl
rorl
mov
push
add
mov
dec
push
xchg
inc
movl
es
dec
fs
xchg
hlt
add
mov
inc
push
call
mov
xchg
inc
cmp
push
push
jns
scas
and
test
pushf
jns
std
push
inc
iret
mov
test
dec
int3
mov
and
sub
movsb
fsubs
call
xor
ss
cmpsl
and
leave
sub
xchg
cmp
in
imul
and
in
stos
lret
mov
scas
mov
xchg
mov
xchg
or
sarl
xor
ljmp
xchg
dec
adc
adc
inc
stos
push
pop
or
jge
push
icebp
ljmp
movsl
lods
int3
repz
xor
mov
jnp
sbb
or
pop
adc
roll
mov
lods
pop
sarl
jnp
shl
pushl
lret
pop
lahf
test
mov
fwait
mov
sub
pop
add
cmpb
sub
clc
push
mov
mov
push
xchg
push
mov
xor
jmp
test
jl
pushf
mov
test
xchg
iret
mov
fdiv
int3
fcomp
and
mov
sahf
movsb
cli
add
push
cltd
fistl
js
jp
mov
stos
jl
jno
add
pushf
pop
cld
cltd
hlt
pushf
sub
add
aam
mov
out
out
cmp
or
xchg
xchg
pop
sub
jns
jns
adc
push
mov
pop
jmp
pop
inc
stos
shll
xchg
pop
pop
sahf
inc
pop
jge
push
test
jl
xor
jle
ss
adc
xlat
ror
mov
lds
xor
prefetch
outsb
sub
push
in
ss
dec
mov
mov
jbe
shrl
in
decb
inc
xchg
mov
push
xor
sbb
xchg
pusha
pop
stos
xchg
shrb
mov
rcrl
lcall
push
in
mov
daa
xor
daa
fwait
push
cmp
lahf
mov
pop
push
sbb
jp
nopl
adc
dec
pop
std
mov
negl
sbb
jp
push
sahf
stos
mov
pop
notb
sub
cmp
je
mov
sbb
cwtl
sbb
jns
inc
mov
inc
push
lahf
stos
push
jle
mov
add
out
leave
mov
mov
loop
add
test
clc
ds
iret
idivb
mov
sub
dec
les
test
or
jnp
cmp
mov
pop
sbb
lods
jg
mov
mov
cmpsl
mov
mov
inc
pusha
and
jg
lock
mov
pop
jne
mov
iret
fs
dec
leave
inc
jns
jns
into
or
and
jg
xchg
aaa
lret
pop
xadd
xchg
jae
test
aam
sti
jo
repz
jge
xor
in
xchg
mov
sub
ret
jns
popf
push
shll
aad
or
inc
mov
aad
mov
in
idiv
das
ret
sbb
jnp
inc
nop
aas
jmp
leave
ret
lret
push
add
adc
xor
nop
jp
pusha
sti
sub
and
imul
jge
mov
stc
mov
fdivr
insl
shlb
int
das
sarl
or
mov
outsb
inc
inc
mov
xchg
jle
scas
jne
test
js
xchg
mov
ljmp
adc
aas
call
shll
imul
cmpsl
dec
insb
fwait
out
mov
jae
scas
cld
xchg
add
fninit
mov
mov
pop
aad
or
jl
aaa
jae
test
fwait
loop
adc
ds
outsl
add
enter
pop
loope
pop
daa
jmp
aaa
jp
cmp
fcmovnbe
push
mov
movsb
xchg
pop
mov
cmp
dec
cmp
cmp
cmpsb
ficomps
fadd
add
sub
jno
je
mov
stos
dec
add
cmpsl
shlb
jmp
mov
pop
push
sti
sub
jo
add
ljmp
push
cmc
icebp
test
mul
orb
fisubrs
hlt
jmp
push
insb
mov
mov
test
pop
mov
movsb
push
xor
xchg
xor
es
aas
in
dec
mov
dec
or
pop
mov
inc
pop
imul
std
xor
add
add
lahf
inc
dec
imul
push
stc
xor
rcll
jl
pop
xchg
dec
inc
pop
movsb
xor
repnz
ds
or
mov
dec
push
ret
inc
sub
jne
mov
sub
mov
ss
stc
dec
test
mov
sub
add
mov
test
cli
dec
test
notb
je
scas
xchg
adcl
das
test
sub
mov
rcl
sub
adc
push
pushf
cmpsl
inc
pop
inc
aas
mov
outsb
push
or
sbb
test
xchg
jmp
stos
popf
sbb
jnp
pop
aaa
clc
pop
adc
repz
sub
xor
pop
pop
mov
loop
lock
sahf
add
dec
fmull
adc
loop
ljmp
into
repnz
test
dec
stos
addb
xchg
push
sbb
setne
xor
push
sbb
leave
cmp
xor
dec
push
sbb
je
sub
ljmp
scas
clc
arpl
sub
out
in
lods
lods
aaa
mov
xchg
mov
mov
xor
xlat
loopne
and
mov
sbb
dec
push
lret
lcall
jl
pop
scas
add
lea
cld
xchg
cmp
movsb
cmp
inc
mov
and
add
xor
ds
xor
xchg
inc
xchg
or
xor
pop
dec
xor
mov
xor
lock
popf
and
enter
popf
int
or
mov
and
xchg
xlat
cmpl
pop
push
xor
gs
mov
dec
sbb
dec
adc
cmp
ret
sti
mov
mov
xchg
inc
pop
fwait
mov
and
adc
pop
sbb
repnz
aam
dec
jmp
push
mov
clts
lods
sbbb
cltd
faddl
cmp
leave
xchg
add
push
sbb
adc
or
lock
bound
sub
dec
mov
enter
or
pop
cmp
jno
out
xchg
aas
push
add
divb
icebp
xchg
stos
fdivl
cltd
bound
rclb
jl
js
adc
insl
mov
jo
xlat
dec
cmp
inc
mov
pushf
data16
sti
je
lock
cmpsb
cmp
ljmp
ret
sub
jle
mov
out
pop
push
pop
lcall
xchg
pop
in
shll
xor
push
jecxz
loop
flds
lds
mov
add
push
idivb
loopne
push
xchg
jno
inc
test
adc
or
into
cmp
imul
cmp
push
dec
testl
add
push
jnp
ss
aad
lahf
add
shrb
sub
es
mov
xchg
jmp
add
xor
aaa
mov
sub
sbb
aaa
out
xchg
jns
pop
mov
xchg
aad
xor
cmpsl
out
or
jecxz
aas
mov
xor
pop
push
lret
mul
cmp
addr16
je
jle
inc
mov
mov
xchg
sahf
mov
or
and
sub
lcall
lahf
out
lahf
mov
pop
movsb
jp
mov
andb
xchg
aad
xchg
pushf
jnp
in
stc
adc
jge
mov
dec
and
xchg
imulb
cmp
addr16
lcall
inc
xor
outsl
sub
mov
mov
pop
sub
jle
mov
leave
rcrl
lcall
cmp
rclb
cwtl
call
sbb
or
repnz
fnstcw
gs
cmc
cmp
ds
pop
sbb
ja
aaa
mov
movsb
loop
js
insl
outsl
ficomps
insl
xchg
xchg
js
rcr
ljmp
cmpsl
xlat
sub
sti
adc
in
xchg
int
xchg
adc
inc
jge
adc
movsl
sahf
push
idivb
fs
stos
cmpl
sbb
aas
push
jmp
aam
arpl
jb
xor
xor
in
cmp
pop
mov
mov
jp
xchg
cmc
inc
add
push
xchg
das
add
mov
mov
das
mov
jo
jnp
mov
jae
sbb
mov
dec
cmp
sbb
inc
outsb
je
xor
outsl
icebp
addl
adc
cltd
push
jg
push
xlat
sti
pop
sub
int3
nop
es
inc
push
sub
and
jmp
add
push
loopne
out
ret
cmp
ljmp
push
jbe
aam
cld
or
pop
loopne
mov
and
xchg
lret
add
or
dec
sub
mov
cmp
dec
sub
adc
push
lcall
inc
arpl
adc
jns
push
out
or
daa
mov
loope
mov
cmp
loop
mov
jmp
lds
sahf
pop
pop
push
in
pop
push
cmp
movsb
aas
mov
mov
cmp
clc
icebp
and
dec
dec
push
jo
cmpsl
adc
roll
test
cmp
sahf
jge
daa
imul
mov
jnp
daa
mov
les
outsb
push
jo
stos
sub
jmp
add
inc
cmc
cmp
lods
outsb
jno
push
or
xchg
in
sub
scas
xor
sbb
stos
sahf
gs
and
pop
lcall
and
or
cmc
jl
lcall
insb
js
divb
cmp
out
jae
mov
insl
push
inc
lret
pop
push
lods
imul
subl
push
jnp
jnp
lock
out
je
sti
popf
lcall
jo
sbb
idivl
aam
or
mov
mov
arpl
mov
in
mov
mov
test
lods
test
mov
packuswb
sub
mov
dec
push
ljmp
mov
xchg
xor
pop
sbb
test
ffreep
xchg
mov
ror
fxrstor
sub
push
sbb
adc
gs
mov
adcl
push
jg
cmpsl
mov
cmp
repz
into
jno
repnz
inc
or
jmp
cmpl
push
scas
js
lods
jno
popf
and
xchg
stc
pop
add
out
scas
nop
pusha
cmc
xchg
cmp
js
cli
inc
leave
jns
fwait
cmp
pop
inc
test
inc
dec
or
fcomps
add
xchg
and
mov
nop
sarb
adc
mov
xchg
punpckhwd
call
jnp,pn
gs
jns
inc
repnz
inc
pop
adc
sub
mov
jne
push
xor
mov
imul
dec
lods
mov
push
push
adc
or
push
mov
iret
int3
xchg
sbb
call
sub
mov
imul
xchg
xchg
test
xchg
ljmp
or
jmp
push
ret
ret
jnp
jbe
adc
xor
cmp
icebp
inc
fucomp
cwtl
aad
push
pop
mov
mov
loopne
inc
push
pop
mov
fsubs
ja
pushf
sbb
mov
ret
sub
mov
xor
ret
fisttps
jmp
lea
fistps
enter
or
out
or
push
push
dec
out
cld
test
xor
mov
lahf
cs
mov
mov
jae
jnp
pop
dec
dec
jno
sub
sub
je
test
imul
lahf
push
roll
and
sarl
xchg
cmp
pusha
pop
dec
mov
aad
sbb
sub
mov
xlat
popa
push
jl
ret
clc
dec
sbb
mov
or
sbb
sub
or
jbe
jno
or
sbb
rolb
xchg
jmp
ja
fiaddl
xor
push
adc
and
adc
xchg
cltd
xchg
mov
mov
gs
fldenv
loop
push
cmp
cmpb
pop
sar
int3
add
aaa
jne
add
and
xchg
aas
movsb
mov
dec
sti
scas
or
addr16
pop
push
dec
push
mov
add
sarb
cmp
and
clc
push
ficoml
aad
cmp
icebp
stos
fnsave
push
or
lret
mov
mov
std
sub
std
pop
fmull
push
inc
push
fiadds
add
adc
cli
scas
fstp
rcr
dec
push
adc
mov
dec
mov
mov
ljmp
adc
pop
push
jg
sahf
inc
jne
lret
push
push
mov
mov
push
lret
subl
rorl
jmp
fisubrl
out
or
test
out
scas
lock
cmp
dec
add
arpl
and
movsb
adc
xchg
mov
cld
jecxz
jecxz
arpl
mov
cmp
mov
insb
adc
push
jp
cltd
cmp
xchg
popa
sub
aad
movsl
int3
xor
xchg
call
inc
sbb
mov
stos
icebp
dec
cli
mov
call
movsl
cs
xor
lcall
lods
cld
pop
sbb
mov
xor
rcll
jb
cwtl
imul
push
insl
and
xchg
les
cmpsl
xor
dec
dec
mov
fbld
test
adc
movsb
inc
movsl
cs
inc
mov
mov
subl
xor
sub
adc
test
push
fsubrp
dec
scas
sti
push
arpl
sbb
xchg
mov
xor
push
daa
andl
pop
pop
pushf
jg
lds
xorb
outsb
mov
sbb
in
test
fimuls
pop
or
lret
div
sub
mov
mov
mov
jnp
xchg
je
inc
push
int
imul
lretw
mov
sub
mov
xor
add
push
movsb
leave
xchg
dec
test
inc
lcall
or
popf
or
sub
ss
test
xchg
daa
inc
sbb
insb
pop
jae
lret
xor
jmp
sar
sub
cmc
repnz
xor
sub
sub
mov
xchg
lds
add
inc
add
pop
aas
pop
int3
push
and
and
test
xchg
popa
cmpsb
xor
pop
mov
push
test
jl
xchg
fs
lahf
aad
push
or
shll
jnp
cmp
jmp
add
lea
es
push
sbb
out
sbb
mov
dec
gs
cmpsl
pop
add
in
sub
adc
or
ds
jle
jae
lcall
push
inc
ret
jnp
jecxz
dec
inc
int
xchg
jnp
mov
pop
outsb
xchg
mov
insl
cmpsb
jmp
fnstenv
jp
or
int3
jg
lahf
push
loopne
and
push
stos
popf
int3
jp
mov
popf
outsl
adc
xor
insl
cld
push
pop
movsb
pop
mov
dec
mov
incl
clc
sbb
xor
scas
stos
andl
add
add
test
outsb
inc
int
xchg
lea
xchg
sbb
mov
ljmp
lds
sbb
sti
adc
mov
push
fisubl
xchg
adc
mov
dec
jmp
arpl
and
adc
and
fldln2
flds
or
push
or
xchg
cld
dec
fistpll
cmp
sub
out
add
xor
ss
pusha
xor
jbe
push
bound
pop
fidivrs
adc
cmp
arpl
loopne
mov
fwait
sbb
cmpb
cmp
stc
cmpsl
js
fdiv
insb
sqrtps
lret
adc
movsb
aad
imul
xchg
rcrl
outsl
mov
out
jns
inc
movsb
mov
xor
and
ljmp
add
cmp
dec
inc
jo
hlt
mov
cmpsl
or
inc
dec
xchg
scas
inc
lcall
dec
sub
cld
aas
lret
fstpt
jo
dec
fnsave
loope
mov
lret
and
cmp
jne
sti
fwait
inc
push
mov
jge
notl
dec
sub
ficomps
pop
orl
hlt
inc
in
iret
ret
adc
clc
test
idivb
xor
enter
xor
daa
and
and
movsb
out
inc
pop
xchg
xchg
and
roll
sbb
inc
cmpb
test
ret
xchg
cmp
das
cmpsl
xor
clc
add
mov
mov
bound
mov
je
pop
xor
fwait
xor
lock
xchg
pop
imull
push
in
hlt
mov
sub
pop
in
aad
cli
cld
mov
push
sbb
jmp
xor
mov
shll
ss
and
jl
sbb
xchg
cmp
sub
jmp
push
mov
fwait
and
push
repnz
add
test
loope
mov
mov
frstor
adc
arpl
push
mov
mov
mov
scas
adc
or
ljmp
cli
xchg
imul
adc
shlb
shlb
pop
jae
push
sub
or
insb
jle
clc
sub
sbb
add
mov
arpl
out
cmpb
test
arpl
mov
cmp
in
popa
mov
xchg
xor
ljmp
push
ret
pop
stos
pop
inc
popf
mov
mov
mov
inc
or
subb
mov
test
aaa
cmp
xchg
neg
inc
out
adc
pop
mov
mov
and
call
aas
adc
mov
pop
add
and
cli
inc
cwtl
xchg
out
int
subb
jo
fistpl
pop
and
or
push
fsubl
and
rcrl
push
gs
pushf
int3
aaa
sub
sahf
outsl
push
jle
cmp
scas
fiadds
ljmp
sbbb
imul
xchg
shrb
mov
cmpsb
dec
sbb
cmpl
xor
push
out
dec
dec
push
es
pop
jo
xchg
mov
repnz
jecxz
es
mov
mov
fadd
jmp
pop
mov
sub
sbb
mov
pusha
or
xor
rclb
sbb
sbb
aas
cmp
filds
mov
mov
or
and
cmp
push
cmp
mov
stc
cli
inc
mov
insb
sbb
popf
nop
sub
testb
push
xor
jge
fwait
test
mov
mov
mov
ljmp
sbbl
mov
incl
xlat
fsubs
pop
jns
stc
rcl
insb
pop
call
and
fdivrs
mov
or
aad
jno
xchg
popf
lods
jno
lret
adc
mov
dec
sbb
insb
dec
xchg
xchg
mov
push
aad
les
movsb
adc
add
test
das
push
mov
insb
xlat
popa
sbb
mov
mov
ss
mov
add
jbe
scas
push
cmp
stos
rclb
jb
pop
nop
jb
mov
fisubl
jg
cmp
aaa
fnstcw
inc
fcoml
cmp
icebp
push
jae
repnz
mov
out
xor
pop
outsb
fidivs
pop
pusha
xor
mov
add
cmpb
das
xchg
xchg
xor
pop
les
lds
and
jae
dec
mov
cmpsl
cmpl
pop
sbb
push
push
lret
test
push
inc
mov
jmp
ja
dec
mov
jl
das
movsb
jecxz
test
je
insl
adc
jno
and
sti
xor
das
pusha
data16
arpl
imul
cmp
daa
cs
mov
testl
pop
push
mov
or
sub
dec
es
or
sub
ret
mov
mov
je
les
or
inc
inc
arpl
ret
sbbb
and
into
fnsave
jp
fisubrs
sbb
orl
sbb
jno
orb
data16
jbe
inc
or
pop
jbe
ljmp
fstps
test
lods
fnstsw
movsb
dec
jmp
sbb
mov
popf
xchg
pop
stos
scas
pop
pop
loop
jecxz
jl
push
xchg
movsb
jle
adc
imul
jbe
outsl
jge
push
out
cmp
nop
pusha
cmp
inc
xor
setp
jl
cld
out
shll
movsl
lods
sub
js
inc
dec
mov
sbb
jle
sahf
std
mov
fisttps
cld
or
jge
lahf
popf
cmp
add
roll
scas
mov
or
or
cmpsb
addr16
pop
push
cmpsl
stc
jb
mov
mov
and
pop
stos
repz
jl
fwait
leave
rcrb
jl
outsb
adc
popf
scas
pop
std
inc
stos
or
cmp
ret
jae
mov
fimuls
pop
dec
xchg
mov
lcall
cmp
pop
cmpsl
cli
ret
insb
dec
mov
adc
dec
sarb
cld
fucom
orb
sbbl
dec
mov
xchg
sub
jge
stos
ret
pop
xchg
push
push
mov
xlat
mov
out
push
js
jmp
sbb
in
jns
lahf
leave
push
sbb
dec
nop
push
sub
adc
lds
mov
inc
call
mov
insl
cwtl
jl
cmp
stos
inc
aam
aaa
sub
fisttps
aaa
bound
imul
movsb
test
mov
pop
loope
popw
adc
pushf
mov
imul
mull
out
pop
xchg
adc
xor
mov
roll
repz
sub
lret
sbbb
inc
clc
fsts
push
sahf
sbb
imul
sbb
add
xchg
iret
mov
xor
int3
add
mov
sub
add
decl
dec
mov
dec
aam
xchg
insb
push
loopne
xor
flds
or
sahf
push
xchg
aam
loop
js
mov
cltd
inc
fldt
lea
adc
test
popf
mov
mov
or
sbbb
dec
jl
mov
push
push
add
int
cmp
sahf
imul
jnp
insl
lock
push
sub
into
jne
outsb
test
and
inc
jge
popa
fwait
push
les
fcmovu
inc
push
lahf
jno
xchg
sub
lret
adcb
xchg
fmul
inc
mov
jb
and
push
mov
mov
cld
enter
lret
icebp
bnd
movsl
pop
in
je
mov
mov
and
enter
iret
dec
icebp
sbb
faddp
clc
mov
mov
pop
inc
int
mov
inc
loope
push
test
mov
mov
inc
or
dec
jle
outsl
shlb
lret
stos
aam
adc
lret
adc
rcll
fsubrs
jecxz
in
inc
mov
ljmp
mov
add
leave
aad
fs
xchg
js
inc
lret
push
jmp
adc
mov
or
pop
in
scas
and
lcall
xor
lds
rclb
jne
or
and
sub
or
repnz
cwtl
lret
pop
fucomp
sub
or
notl
pop
inc
jb
pop
jge
push
mov
sub
mov
je
mov
mov
jb
push
les
jno
sub
cmp
stos
movl
inc
iret
cwtl
jecxz
mov
inc
pop
cmp
mov
xchg
inc
jge
inc
sub
xchg
add
adc
jo
mov
or
daa
shrl
rcll
pop
xor
fisttpll
adc
xor
imul
test
lret
cmp
in
mov
jle
jns
jge
push
mov
cli
test
enter
mov
cld
ds
movsl
dec
cld
loope
mov
or
lea
mov
aas
int
xchg
or
xor
inc
sub
popw
insl
popf
jnp
loope
cmc
or
mov
pop
ret
pop
mov
imul
cwtl
mov
adc
xor
mov
pushf
dec
pop
add
shl
fsubp
jne
test
jmp
mov
fstpl
pop
lret
dec
sahf
push
in
push
cmpsl
lahf
stc
sbb
mov
lcall
add
negb
popf
out
inc
imul
or
inc
fnstenv
add
mov
cmc
sbb
adcb
insl
jle
in
jle
pop
mov
fs
push
enter
or
ja
pop
je
xchg
cmp
sti
test
jns
or
ljmp
bound
pop
mov
test
and
movsb
dec
push
push
in
xchg
and
xor
dec
outsb
loopne
jp
vandps
lock
and
xor
lret
cmp
loope
out
mov
add
fadd
or
bnd
xchg
pop
fistps
sbb
ret
xlat
aad
dec
mov
insl
adc
fldenv
xchg
fdivp
xor
loopne
cmp
xchg
push
adc
xor
or
je
sub
icebp
scas
lret
xchg
mov
pop
xor
cmpsb
aam
das
and
outsb
aas
enter
arpl
or
movsb
xlat
in
fcomps
adc
add
inc
leave
jl
cld
stos
mov
or
stos
popa
push
sbb
jno
xorl
into
xor
cmpb
out
dec
xchg
xor
out
nop
cmp
jp
idivb
jb
fstl
flds
in
aaa
shlb
and
popf
pop
cmp
or
data16
cld
sub
or
xchg
push
xchg
xorps
sub
dec
jmp
xchg
test
rolb
and
pushf
pop
lret
popa
mov
xchg
jecxz
cltd
jo
mov
xchg
loopne
out
pop
add
enter
or
fcmovu
test
jbe
outsl
loop
add
hlt
add
pop
push
in
add
les
into
mov
shlb
cs
mov
pop
je
mov
or
inc
cmpsl
dec
sbb
cmp
nop
fcoms
test
jae
pusha
jmp
jge
inc
shll
push
fists
testb
insl
ror
leave
dec
lret
imull
mov
jecxz
mov
mov
cmp
fdiv
push
mov
lds
and
or
sbb
outsb
aam
sub
pop
jbe
add
inc
xchg
jnp
push
rcrb
andl
rcr
notl
lds
stos
fidivs
loop
stos
fsts
mov
adc
leave
fcmovnu
popa
mov
xor
pop
add
aaa
sbb
add
movsl
dec
mov
test
inc
sbb
sub
ss
clc
dec
fisubrl
mov
jp
cltd
popa
fs
int
mov
push
and
bound
addr16
dec
fldcw
negl
stos
sbb
sub
minps
jno,pn
mov
or
rcl
add
inc
mov
in
cmp
out
lods
xor
jl
add
add
sbb
jecxz
cmpsl
repz
aas
lahf
aad
cmp
lret
das
mov
shll
lds
mov
ret
fstps
sub
rol
loope
xchg
or
mov
jle
fcoml
adc
les
push
call
xchg
xchg
jle
push
movsb
sbb
cmp
mov
ss
lock
fadd
loop
scas
out
fiaddl
scas
adc
xchg
dec
hlt
sub
ljmp
lret
mov
in
jo
inc
rorl
test
mov
push
push
cmpsb
insl
mov
jp
inc
or
adc
mov
sub
fxch
sahf
std
dec
xchg
rcrl
repnz
push
jg
xor
call
ret
stc
mov
insb
pop
xchg
mov
cmp
insl
jmp
xor
nop
pop
shl
imul
test
aad
fidivs
xlat
cmpsb
sbb
pop
xchg
jnp
lock
push
insb
mov
daa
mov
aad
adc
sbb
inc
out
mov
xor
pop
sarb
mov
out
insl
fisubrs
addb
lods
jmp
repnz
cmp
mov
lahf
rcr
adc
sbb
lret
out
jmp
cwtl
test
test
add
out
je
or
arpl
fadds
inc
daa
mov
leave
lcall
cmpl
mov
mov
test
arpl
inc
inc
pop
roll
push
in
cwtl
js
mov
pushf
pusha
xchg
push
dec
jbe
dec
cmp
cmp
rcr
test
in
jge
add
orl
mov
cli
ret
std
imul
jp
sub
push
nop
inc
push
cmpsb
fcompl
mov
jl
and
mov
mov
add
icebp
or
cs
aas
jns
test
or
idivb
jbe
dec
xor
in
cmpsl
imul
subl
sahf
cmc
push
push
out
addb
mov
std
fs
loop
scas
cli
push
js
inc
xor
test
sbb
outsb
sti
and
and
adc
stos
jle
aas
sub
or
cli
xchg
fwait
pop
xorb
cmp
mov
js
mov
out
dec
mov
lea
push
cwtl
cmp
mov
xor
bound
test
std
popf
outsl
adc
and
sbb
lds
push
push
push
repz
inc
mov
ret
ret
idivl
xchg
adc
fwait
jno
sbb
es
and
pop
jno
js
push
lea
dec
inc
cmp
pop
cld
jnp
outsb
fwait
jg
hlt
fwait
jno
out
or
mov
bound
push
loope
cmpsl
rorl
adcl
inc
movsl
inc
imul
int
fisubrl
inc
xchg
pop
pop
and
inc
aam
sbb
pop
loopne
xchg
mov
testb
adc
out
test
cmpsb
sahf
cmp
cmp
scas
es
mov
mov
jo
roll
push
jbe,pt
aam
cmp
pushf
enter
cvtps2pi
mov
popf
jns
xchg
mov
pop
jg
pushf
jae
lcall
push
lods
cmpsl
mov
scas
rclb
and
xchg
xor
inc
in
sub
add
and
dec
pop
sbb
jns
push
inc
out
inc
or
fisubl
or
rorb
xchg
aam
jg
fisubrs
mov
sbb
enter
mov
loopne
sub
push
jle
aas
cmpsl
push
adcl
repnz
cmp
or
pushl
add
outsb
pop
cmp
sarb
mov
icebp
ja
fdivrl
je
fcomps
push
jl
mov
shl
cmp
add
shl
in
pop
pop
mov
mov
dec
xchg
push
jmp
mov
lds
into
pop
gs
xor
out
shlb
adc
jmp
mov
pop
push
daa
and
in
add
dec
andl
cli
pop
xor
mov
jle
xor
cmpsl
or
loopne
inc
adc
mov
fisubs
sub
xchg
out
sahf
and
xor
filds
jge
add
add
pop
pop
and
js
dec
std
fwait
aaa
dec
and
jne
pusha
sarl
pop
xchg
cmp
push
inc
push
mov
imul
mov
pop
cwtl
mov
adc
mov
adc
fcoml
fwait
int3
clc
ss
mov
popf
xchg
jns
and
lret
aam
adc
hlt
or
push
loop
inc
sbb
xchg
sahf
jns
mov
dec
pusha
rcr
fisubrl
mov
es
das
dec
negl
fsubrs
ja
setne
lret
pop
popa
sbb
push
nop
add
stc
pop
in
cmp
test
xchg
cld
popf
push
jp
mov
inc
dec
sub
jmp
leave
js
insb
aad
je
mov
mov
adc
inc
sub
dec
fwait
pop
stc
inc
xor
dec
in
jo
sub
adc
lahf
xor
pop
lcall
pop
mov
fidivl
dec
jmp
daa
push
mov
inc
mov
jmp
fistps
mov
mov
stos
les
std
fidivl
testl
sub
adc
sarb
ret
xchg
std
movsb
xchg
cmp
mov
jbe
addr16
rolb
lcall
sbb
mul
lods
fstpl
fdivrp
mov
mov
icebp
sbb
jecxz
push
sahf
sub
sbb
push
jmp
rorb
or
pop
daa
gs
in
mov
out
fs
mov
dec
nop
daa
sbbb
sbb
sbb
adc
adc
jg
in
ss
inc
xchg
xor
dec
popf
stos
icebp
mov
fwait
mov
xchg
xor
sub
stc
inc
lods
push
ds
push
stos
push
movsl
cld
lds
sub
push
ret
and
fs
push
je
inc
pop
cmp
enter
xor
pop
rclb
sti
aas
loope
out
mov
fadds
jo
mov
sub
imul
incb
mov
rcl
push
loop
cltd
testl
mov
inc
mull
adc
data16
jle
lcall
test
pop
cmp
mov
xlat
insl
sub
in
mov
dec
xor
xchg
cltd
xchg
mov
into
fistl
ret
out
sbb
fnstsw
mov
shrb
in
or
icebp
push
lods
xchg
push
add
or
push
cmp
ss
mov
pop
xor
fisubs
out
xchg
in
xor
pop
negb
loopne
dec
in
popf
add
mov
adc
test
pusha
in
adc
loope
cs
imul
outsl
fisttps
ret
scas
pop
push
pop
sbb
jl
fwait
xchg
adc
cmpsl
sbb
dec
push
icebp
ljmp
in
in
sar
xchg
rol
test
into
mov
xchg
xor
sbb
push
jbe
pop
out
movsl
iret
fdivrl
cmpsb
cmpsl
dec
adc
push
mov
mov
mov
pandn
jl
ss
subl
jl
fldt
fsubrs
repz
xchg
ret
fbstp
pop
jne
and
in
inc
scas
cmp
mull
lahf
andl
jmp
inc
push
andl
dec
icebp
pop
cs
fisubrl
scas
xchg
jmp
adc
scas
scas
add
shll
adc
orl
jmp
iret
ljmp
mov
aad
add
dec
push
bound
dec
cltd
jno
jae
sub
out
gs
cmp
subl
stos
push
mov
call
or
jp
ja
cmpsb
sub
in
jb
mov
xor
imul
push
jbe
test
cmp
insb
je
xchg
dec
cs
out
in
push
mov
in
sub
pop
popa
push
call
add
lock
push
nop
jb
inc
sbb
lret
and
sbb
push
loope
mov
aas
scas
cld
sti
nop
pop
test
xchg
out
cmpsl
adc
aas
cmp
jo
fwait
jge
imulb
lahf
out
fs
inc
xchg
aaa
mov
xor
mov
lea
xchg
dec
addr16
aad
lods
in
or
inc
pop
loopne
stos
pop
ror
ds
push
push
cmp
push
fldcw
add
sub
mov
aaa
test
fwait
push
adc
fnsave
pusha
pusha
push
pop
adc
or
inc
rcrl
dec
int
outsb
aam
push
mov
push
push
xchg
arpl
add
pop
sub
lds
add
xchg
push
icebp
jmp
adcb
mov
out
dec
in
test
jl
insb
lret
sbb
sub
push
mov
xchg
xchg
mov
stc
in
xlat
stos
test
dec
push
fisttpll
xchg
fldt
mov
or
sbb
mov
insb
or
sahf
mov
and
mov
inc
movsl
dec
push
in
loopne
fcoms
and
mov
insb
jmp
push
popa
stos
jmp
mov
stc
testb
sarb
repz
xchg
mov
push
lods
push
int3
leave
out
andl
pop
fcoms
out
aaa
out
pop
jnp
aam
es
shll
cmpsb
movsl
lret
pop
pop
std
mov
sub
imul
inc
xor
jecxz
mov
cli
subl
out
lock
xor
shl
movsl
dec
xchg
lea
testl
dec
xchg
iret
inc
ret
and
in
test
cli
subb
mov
shl
mov
loop
aas
aas
sub
test
push
stos
int3
daa
or
sub
enter
mov
jnp
jno
mov
fisubl
mov
outsl
clc
jb
mov
inc
xchg
jp
loop
std
out
add
xor
shrl
mov
out
mov
lock
jle
adc
jae
divb
jb
pusha
ljmp
lcall
test
test
xor
shrl
jl
xchg
repz
push
cmpsl
cli
xchg
adc
pop
sarl
xchg
insb
push
pop
push
mov
push
push
sub
repnz
mov
inc
daa
outsl
rcl
fnstcw
mov
add
xor
mull
mov
pop
leave
loop
loopne
add
fsub
pop
xchg
sub
pop
jno
adc
idiv
nop
testb
fldenv
sbb
jecxz
mov
sahf
test
ds
jl
es
ret
cmpsb
insb
stos
ja
insb
out
mov
int
out
loopne
push
dec
addr16
jae
add
jecxz,pt
into
add
sbb
aaa
aad
movsl
adc
lahf
mov
adc
mov
pop
cmp
cmp
cmpsl
mov
xchg
xchg
and
push
inc
add
int
mov
fidivl
in
adcl
sbb
daa
test
cltd
jecxz
fnstsw
les
pop
fcmovnb
sub
imul
das
daa
mov
push
fdivrs
ret
nop
xor
aam
pushf
jno
mov
pop
jmp
sbb
mul
outsl
nop
call
push
loope
adc
pop
sub
mov
jbe
xor
out
outsl
cmp
in
out
ret
out
cmp
and
inc
jle
push
mov
inc
jns
sub
xor
jecxz
jne
insb
jae
pop
mov
out
sub
pop
in
lret
shlb
into
fildll
mov
pop
in
dec
aas
rol
arpl
xchg
lret
clc
dec
roll
clc
inc
mov
push
jge
aaa
std
dec
sub
mov
lea
cmp
adc
and
jnp
jb
cmpsb
outsb
ret
sbb
mov
mov
fistps
jg
cmpl
inc
adcb
and
pop
loop
in
add
leave
jl
mov
cmp
repnz
sub
mov
push
movsl
aam
decl
lock
mov
mov
sbb
test
fbstp
mov
fisttpll
sbb
sahf
sti
sub
in
mov
iret
inc
in
sub
int3
xchg
push
inc
cmp
mov
mov
test
jo
xchg
push
das
mov
xor
mov
push
mov
mov
pushf
daa
xchg
jle
cld
bound
aad
add
mov
add
jbe
mov
cltd
sbb
loop
adc
test
xor
inc
add
cmpsl
int3
in
cmp
das
ja
adc
mov
xor
adc
sbb
mov
push
xlat
xchg
rcrl
pop
ljmp
cmpsb
sbb
jae
add
arpl
hlt
or
jo
cmp
xchg
dec
mov
jg
sti
scas
pushf
test
xor
dec
ret
out
stos
push
stos
xor
negl
push
cwtl
push
enter
nop
imul
lcall
mov
lods
or
mov
sarl
push
shll
or
jb
jno
mov
dec
push
push
sub
xlat
sti
jb
je
movsl
lock
jnp
repz
xchg
sbb
fisttpll
out
jb
sbb
xor
lret
pusha
xor
adc
jae
push
inc
rol
or
dec
fcoms
jge
aaa
xor
and
jle
and
sti
cli
cmp
out
push
xlat
ret
cmpsb
in
fldl
out
vsubss
adcl
xlat
push
sbb
push
lods
sub
out
mov
loopne
jg
jl
lret
cmpsb
ds
fsubrs
clc
dec
mov
jno
push
jo
add
xlat
pop
fistps
or
shlb
cmpsl
xor
pop
dec
jg
scas
das
shlb
lea
pop
gs
jg
jp
add
xchg
addr16
pop
xchg
mov
jb
iret
notb
out
sbb
add
popa
subl
ss
sbb
std
in
sarb
pop
fsubl
mov
shld
mov
mov
sbb
mov
pop
dec
loop
add
push
mov
incl
sbb
scas
mov
test
je
inc
fdivrl
test
push
lea
fldcw
stc
adc
rcrb
scas
jne
movsb
push
adc
es
mov
xlat
mov
or
jae
xchg
pop
ljmp
or
cmp
out
and
xchg
sbb
add
mov
mov
scas
push
daa
call
cwtl
pop
cli
mov
outsl
aam
imul
jne
negl
jle
arpl
data16
pusha
cmpsl
mov
test
iret
dec
aaa
sbbl
add
sub
stc
nop
je
ret
fdivl
pusha
push
nop
pop
loop
mov
fwait
popa
iret
jbe
in
aad
or
test
push
xchg
mov
cmp
inc
iret
je
ss
icebp
xchg
or
fsubrl
cmp
gs
not
aam
cs
insl
cmpsl
and
jae
outsl
ljmp
add
xchg
lock
sbb
and
jecxz
insl
dec
clc
and
push
adc
ljmp
leave
lods
call
cmp
push
push
sub
inc
and
fs
sub
outsl
jae
mov
mov
pop
stc
xor
push
xlat
incl
cltd
std
fwait
sub
jmp
lods
ja
sbb
xlat
jnp
push
dec
pop
mov
jb
mov
mov
xor
dec
filds
clc
cli
mov
ss
sub
paddsb
jae
es
jo
fdivrs
push
gs
mov
sbb
negl
or
push
cwtl
clc
fdivl
addr16
push
das
das
inc
and
outsb
les
jns
push
popa
pusha
jns
push
mov
mov
push
fbstp
and
fdivs
mov
pushf
jae
imul
jo
fld
pop
pop
add
out
mov
lods
cmpsb
popa
add
add
sbb
sub
mov
pop
cmpb
test
scas
fcmovnb
jbe
sub
scas
pop
mov
jns
outsl
vreducesd
std
mov
lods
push
jae
inc
out
jecxz
out
sub
adc
mov
inc
jnp
xor
adc
out
scas
loopne
cmp
dec
popa
pop
mov
adcl
popa
add
pop
jne
repz
loop
jp
add
xor
call
pushl
pop
xor
jne
aad
pop
xor
add
filds
lret
mov
sti
gs
inc
lret
js
std
cli
mov
orb
repnz
pop
sbb
mov
mov
loope
shll
cli
loop
fxch
insb
loop
jp
cmp
mov
and
fdivrs
pop
and
xchg
in
sub
int
xchg
adc
push
in
ret
cltd
push
xor
or
addr16
cmc
xchg
sub
sub
or
cltd
cld
fs
push
xchg
repnz
pop
das
ss
iret
repnz
mov
data16
fwait
pop
lods
rol
sbb
mov
jg
and
addr16
add
lcall
and
pop
stos
adc
std
fisubl
adc
fdivp
je
lcall
adc
iret
jp
cmc
insl
daa
jno
sbb
mov
mov
lahf
popa
rep
insb
pop
outsb
or
rcll
into
out
mov
xchg
test
stos
mov
push
outsl
not
xor
int3
out
in
or
test
inc
aam
mov
shlb
xchg
sbb
or
outsl
cmp
out
leave
and
and
shr
filds
lret
notb
push
xorb
lock
adc
add
rorb
jl
test
orl
and
add
stos
mov
push
inc
inc
adc
test
movsb
test
aas
cmp
aam
bnd
shlb
stos
jle
pop
es
jl
pusha
or
jno
mov
mov
push
mov
cmp
xor
hlt
test
xor
test
imul
scas
lods
into
mov
or
movsl
sbb
outsl
outsl
test
repnz
add
push
stc
test
mov
sbb
test
jle
aam
cs
mov
aam
cmpsb
sahf
mov
and
mull
mov
rorl
lret
and
lds
pop
icebp
jnp
xor
dec
mov
jae
incb
cmpsb
sub
lret
mov
sbb
dec
mov
rorl
dec
xchg
fisubl
or
aad
fs
lahf
ja
lods
aaa
lods
jns
mov
pop
mov
pop
subb
push
xchg
enter
cmpl
and
inc
arpl
cli
add
mov
xor
and
sti
add
enter
sbb
lea
cmc
xchg
mov
push
xlat
push
jbe
fisubs
xchg
add
pop
xchg
fptan
or
mov
mov
dec
lea
add
push
and
xor
repz
sbb
aam
pop
movsl
dec
add
popf
insl
jns
js
dec
andb
mov
jne
adc
and
xchg
cli
nop
pop
fisubl
repnz
rolb
sub
inc
popa
pop
add
push
call
or
jg
nop
mov
jp
cmc
cltd
jo
jecxz
sahf
add
jle
sbbb
adcl
andb
sbb
push
les
inc
outsl
int
movsl
pop
in
shlb
insb
aam
sti
xchg
outsl
out
insl
push
pop
lods
xchg
xchg
pushl
test
fcoms
imul
xchg
nop
mov
lock
and
in
scas
aam
into
fdivs
push
inc
add
je
mov
call
jge
or
add
insb
jne
shll
out
stos
mov
mov
in
add
mov
addr16
in
or
jle
into
test
scas
out
ljmp
add
fs
in
std
dec
test
scas
xchg
shl
dec
fcomip
hlt
cwtl
and
pop
mov
mov
test
sbb
xchg
xchg
repz
int
sub
xor
movsb
lods
jmp
js
push
test
test
mov
and
jmp
pushf
arpl
scas
cmp
aam
fld
roll
jp
jg
std
jbe
stos
outsb
call
std
push
insl
pushf
mov
lea
push
imul
out
loope
jecxz
insb
fcomp
inc
cmc
pop
scas
mov
jle
das
js
jae
xchg
aaa
mov
jo
inc
mov
mov
sbb
dec
jecxz
push
push
lods
out
xchg
ficoms
mov
outsb
xor
pop
push
cmpsb
faddp
jecxz
sbb
adcb
clc
or
out
inc
testl
jns
lret
mov
fstps
mov
cmp
add
hlt
or
stc
shll
sbb
xor
or
outsl
and
pusha
ds
mov
movsl
jge
ret
and
inc
cmp
dec
movsb
xchg
sbb
scas
xor
sub
nop
mov
add
add
iret
push
xchg
inc
loop
mov
sbb
sbb
push
push
sbb
push
mov
cmpsl
fcomi
cltd
jl
dec
and
lea
cmp
mov
insb
pop
push
xorl
jns
xorl
lds
js
cli
xor
rcrl
enter
aam
sti
pop
and
stos
bound
xor
shll
push
add
xchg
jbe
mov
loop
xlat
jae
and
sbbb
pop
push
cmp
mov
mov
jl
cmpsl
lcall
xchg
sarl
mov
mov
jb
repz
sti
push
sbb
inc
pushf
mov
out
sbb
push
inc
jae
mov
jbe
or
cmp
iret
dec
stos
or
sub
cld
sub
ds
aam
sub
jl
das
lret
push
les
mov
and
adc
sub
dec
bound
je
test
lret
fstpt
je
inc
ljmp
ljmp
and
jg
fs
aas
insl
imul
adc
daa
aad
in
jl
aam
xchg
stos
cs
gs
outsl
aas
add
jg
xchg
cmpsb
cmc
outsl
adc
fwait
stos
pop
pusha
dec
push
jno
ficoms
cmp
outsl
leave
and
jo
lods
scas
sub
dec
sbb
mov
aam
sbb
aaa
cmpsl
mov
jp
ljmp
shrl
inc
sub
pop
subl
pop
sbb
sbb
jns
aas
pop
pushf
aam
fisttpl
ret
sbb
outsl
lods
push
fs
xchg
std
adc
mov
mov
add
shlb
nop
cs
push
jg
jb
mov
mov
xchg
inc
lcall
xor
sub
rolb
aam
shlb
lods
push
cmp
pop
push
cli
mov
mov
jp
mov
sti
daa
xchg
push
sbb
hlt
jmp
cmp
leave
add
insb
sub
sub
or
lds
sub
sub
push
arpl
mov
push
lock
xor
and
fnstcw
inc
and
cmc
xor
stc
inc
jp
dec
sbb
addr16
jbe
mov
push
add
mov
jnp
sbb
clc
lahf
dec
pop
jle
xchg
in
mov
div
xchg
cli
push
sbb
movsl
mov
stos
inc
adc
lds
cmp
orl
stos
pop
mov
jecxz
mov
sub
jg
sti
push
xor
ss
jns
cmp
jae
and
rorb
push
movsb
cmp
shrb
mov
push
lock
cmc
push
icebp
int3
add
out
fidivrl
aaa
xor
loopne
jnp
pop
popa
xor
or
fcoms
int3
testb
insb
mov
mov
sub
aaa
shrb
pop
xchg
movb
pop
xchg
rclb
sbb
jecxz
sbb
ds
into
cld
mov
sub
repnz
push
jg
ficoms
scas
mov
add
mov
fsts
and
and
mov
roll
negl
dec
adc
mov
gs
adc
jne
lahf
ds
das
or
lods
ficoml
or
or
loopne
out
pop
cli
ret
jbe
repnz
pop
bound
gs
sub
repz
jo
ror
repnz
andb
js
mov
leave
push
cltd
pop
sbb
scas
xlat
sub
fsub
repnz
aas
jge
jge
mull
cmp
js
out
mov
fcmovbe
adcb
cmp
popf
pop
adc
cld
jg
mov
sbb
and
enter
push
out
ja
jmp
mov
cmp
xchg
adc
call
push
jp
cmp
repnz
or
mov
lods
daa
fwait
inc
call
pop
or
dec
stos
in
jns
jb
mov
cmpsb
jno
cmpsb
testl
shll
je
jecxz
push
sbb
xchg
pop
popa
stc
fs
xchg
stos
jne
adc
mov
xor
out
or
push
push
and
mov
into
and
push
xchg
gs
scas
rcrl
in
mov
fstp
inc
jg
ss
mov
dec
inc
out
inc
fisubs
movsl
add
testl
mov
cmp
mov
hlt
fdivl
pusha
xor
loope
rcrb
mov
cmp
into
mov
and
push
je
bnd
testb
xorl
push
push
jecxz
and
fadd
popf
dec
dec
pop
or
cmpsl
dec
and
arpl
cmpl
jnp
arpl
jge
and
mov
cmp
testb
adc
loope
xor
inc
insl
loope
addl
out
fpatan
push
push
inc
xlat
scas
lods
clc
out
add
sub
and
insb
jo
inc
and
inc
xlat
jp
lret
lcall
lret
clc
mov
jecxz
xchg
mov
sti
in
cmp
nop
push
outsb
push
mov
loope
in
mov
mov
cltd
inc
push
mov
das
jle
jbe
shrb
push
cmp
into
or
insl
jmp
fcmovnb
faddl
add
mov
icebp
int3
imul
fcoml
mov
xchg
nop
shr
dec
and
dec
inc
jl
daa
push
mov
jge,pt
lods
cli
jbe
clc
aam
push
xchg
int
sbb
pushf
movsl
leave
inc
mov
les
jmp
push
jns
adc
std
xor
push
dec
inc
and
pusha
lcall
fstpl
ret
adc
mov
mov
xchg
inc
jmp
daa
cmp
push
and
xchg
rorb
jno
mov
das
mov
dec
mov
subb
sbbb
xchg
pop
and
sub
popf
enter
mov
es
jge
out
cmp
lcall
in
adc
inc
mov
loopne
mov
adc
dec
sub
sahf
push
cmp
dec
adc
in
sub
inc
add
mov
aas
push
xor
adc
fcoml
popf
adc
cmc
ret
or
mov
add
inc
cs
scas
cmp
sbb
daa
sahf
faddl
jb
push
pop
fstpl
cmpsl
pop
nop
lcall
inc
jmp
sub
rcr
shll
pop
push
loopne
dec
or
test
sbb
jecxz
pop
shrb
test
fcompl
mov
cmpsb
ss
dec
lret
mov
ja
jns
xchg
dec
jecxz
daa
das
je
and
sub
cmpsl
lock
movsb
xchg
daa
repz
sarl
jge
fs
push
in
test
outsb
pop
shlb
add
sbb
imull
jge
mov
xor
fisttps
in
jp
inc
push
in
jb
mov
xor
icebp
in
mov
stos
inc
sub
push
clc
divl
fucomi
ljmp
pop
inc
pop
cs
cli
mov
push
lock
push
mov
and
stc
cltd
lcall
sbb
xor
dec
cmp
add
arpl
dec
cmp
adc
iret
push
out
xor
das
je
leave
push
sbb
lock
xchg
pop
lahf
test
dec
pop
popf
add
xchg
push
lcall
xchg
sbb
cmpsb
call
sbb
rcll
out
sbb
insb
bound
test
mov
fnstenv
and
lods
mov
dec
js
push
js
xor
aad
xor
out
scas
mov
mov
sti
lds
mov
hlt
imull
adc
jmp
pop
jmp
fists
adc
loop
sar
cmpsl
fadd
mov
mov
jno
cs
dec
test
cmpsb
jne
xchg
out
movsb
pop
push
mov
sbb
push
mov
test
in
xlat
cmpsl
test
fstpl
cmp
cli
jecxz
jne
lahf
xchg
daa
loope
pushf
fldl
add
testb
cmp
jl
imul
sbb
loop
mov
xchg
inc
jp
in
movsb
sub
roll
cmp
xorb
jae
stos
aaa
dec
mov
jb
notb
xchg
cmp
fwait
mov
insl
daa
pop
inc
jmp
fwait
enter
enter
daa
cmpsb
inc
fidivs
cmpb
jmp
push
dec
fs
arpl
ret
xchg
not
loop
movsb
in
pop
addr16
mov
add
add
orl
jp
ljmp
push
int3
jl
xchg
sbb
andl
pop
push
sub
out
pop
xchg
lods
insl
test
test
or
mov
xor
push
xlat
jecxz
pusha
xor
push
subb
std
jg
mov
movsl
lret
scas
mov
cmp
inc
dec
xor
adc
addb
xchg
xor
sub
ja
jnp
jp
stc
out
pop
cmp
int3
aaa
ret
or
adc
mov
xor
cmc
imulb
sub
cmp
and
mov
mov
xchg
sub
fisubs
jae
pop
outsb
mov
popa
fidivrs
lock
inc
test
dec
and
lret
add
div
pop
icebp
jno
scas
js
lods
mov
leave
jg
jge
inc
add
dec
fidivs
insb
mov
enter
mov
popf
insb
or
mov
scas
and
inc
insb
lods
jnp
pop
pop
notl
push
sub
cmp
fwait
push
adc
mov
sarb
pusha
xlat
push
aam
mov
subl
test
mov
fadds
add
push
xchg
inc
cmp
arpl
test
xchg
sbb
jmp
xlat
pop
push
stos
je
add
pop
fs
loop
cltd
sub
mov
ljmp
iret
and
repz
push
popa
arpl
push
dec
ror
pop
push
mov
jecxz
rcrb
adc
pusha
add
lret
les
rorl
outsl
mov
xchg
std
and
adc
xlat
xchg
push
xor
enter
jle
insb
je
loope
add
dec
cs
jp
jb
mov
orb
mov
and
mov
data16
mov
std
dec
sbb
add
and
adc
hlt
cltd
fincstp
cmp
fiadds
cmovle
ljmp
mov
movsl
pop
es
mov
sub
cltd
mov
push
dec
dec
pop
repnz
lcall
mov
mov
stos
in
push
daa
adc
aad
jnp
lahf
mov
push
mov
repnz
lods
sub
ss
xchg
cmp
adc
bound
aas
std
jo
add
loope
iret
cmpsb
xor
and
fmull
adc
ja
xchg
push
or
inc
mov
test
cmp
push
rcrb
in
cmp
adc
add
push
bnd
imul
dec
xor
inc
mov
outsl
and
call
test
xor
outsl
sbb
jns
and
rolb
xchg
xor
and
xchg
test
and
jnp
xchg
mov
testb
mov
xor
leave
adc
jg
jno
mov
rcll
mulb
mov
sarl
cmp
aad
bound
xchg
jmp
movl
dec
or
in
or
xorl
mov
inc
sbb
test
aaa
aam
sbb
inc
add
jnp
mov
out
pop
sbbl
aam
sahf
inc
cmp
mov
xchg
aad
xchg
adc
rorl
adc
mov
cld
sub
push
and
mov
movsb
sbb
mov
leave
inc
sti
aaa
rcr
fidivl
iret
enter
dec
insb
dec
pop
mov
push
sub
push
mov
fnstcw
push
cmc
mov
movsl
es
or
cmpsl
xchg
xchg
add
adc
lcall
xchg
aam
inc
ret
xchg
movsb
pusha
es
movsb
scas
or
lea
out
jae
in
shlb
rol
iret
mov
lea
cltd
loopne
mov
icebp
xchg
fwait
cmc
push
sbb
call
mov
jmp
jbe
or
inc
in
mov
scas
jns
pop
ds
cltd
xor
pop
cmpsl
rcll
or
lahf
lods
pop
add
test
cmp
push
jne
mov
add
cmp
fldt
cmpsb
xor
lea
and
shrb
stos
sub
std
mov
popa
icebp
sub
lds
xor
mov
sub
mov
test
ss
pop
les
pop
out
mov
repz
mov
xor
sub
pop
cmp
mov
pop
inc
mov
in
pop
cmp
dec
and
mov
inc
mov
xchg
or
jle
cmc
ljmp
lods
test
xor
movaps
std
mov
test
ficoml
xor
mov
mov
cmp
ljmp
fistl
pop
jb
add
and
pop
or
test
dec
jp
pop
pop
pushf
inc
enter
add
test
f2xm1
cmp
mov
or
nop
fmuls
outsl
addr16
sub
fstpt
cmpsl
and
xchg
xchg
pop
mov
loope
rcll
movsb
add
xchg
xor
fstps
and
mov
inc
je
sbb
push
lods
fnsave
imul
mov
lods
xchg
lret
rclb
push
aam
push
scas
mov
or
push
fs
aad
imul
xorl
icebp
cmpsl
aas
pop
lods
shlb
xor
mov
lods
inc
xchg
clc
js
mulpd
mov
insb
cs
cmp
dec
jmp
or
cld
aam
fiaddl
jmp
mov
push
mov
iret
je
inc
and
dec
push
sarl
shlb
insl
negb
fidivs
popf
push
sub
loopne
pusha
addr16
rcll
nop
and
jge
fidivrs
in
or
mov
sub
cmp
ja
jmp
pop
pop
stos
sbb
push
cli
iret
fcmovu
mov
ss
int
xchg
mov
jl
or
gs
adc
ja
ret
adc
dec
inc
inc
ffree
add
loope
loop
out
ret
sub
lock
frstor
out
jnp
push
jns
daa
out
shll
cmp
scas
js
insb
ljmp
and
xlat
dec
jnp
mov
and
imul
add
test
mov
pop
push
out
jecxz
repnz
dec
jns
push
push
xchg
cs
xchg
push
lret
sbb
imul
in
push
addr16
pop
mov
cltd
cltd
or
mov
test
sbb
pop
fwait
jp
cmovb
imul
dec
mov
movsl
aaa
rolb
imul
mov
repz
out
cmp
lock
icebp
mov
mov
out
std
jecxz
das
adc
xlat
and
jp
xchg
les
xor
push
and
test
jecxz
or
or
popl
pop
lea
push
xchg
cmc
iret
jae
pop
fwait
xor
cltd
in
pop
mov
xor
out
add
out
arpl
out
pop
sbbl
pop
xlat
jecxz
inc
inc
dec
mov
js
lods
fisttps
xchg
bound
orb
shll
xor
lods
mov
lods
cli
adc
dec
aaa
nop
lcall
mov
sbb
dec
addl
pop
notb
push
dec
mov
jbe
dec
ljmp
jg
cmp
sbb
mov
shrl
jne
xchg
iret
sub
movsb
dec
pop
negl
int
cs
add
clc
and
inc
test
cwtl
mov
dec
push
xchg
aas
and
push
frstor
daa
push
cmc
cmpsb
mov
or
cltd
lds
push
mov
out
in
push
mov
sbb
push
inc
add
adc
dec
adc
cmpb
in
out
pop
fsubr
or
mov
cmp
jns
test
xor
xchg
inc
push
cmp
mov
pshufw
dec
inc
aam
mov
mov
jbe
cmc
mov
aas
out
adc
or
fists
mov
lret
in
int3
movl
sub
sub
adc
in
xchg
xor
push
pop
xchg
inc
dec
xor
mov
cmc
stos
and
movq
dec
repz
in
mov
pop
jmp
cmpsl
mov
jl
in
xchg
push
fwait
out
or
push
daa
cld
dec
je
jl
sbbl
jp
jmp
lds
into
mov
xor
jl
rorl
xor
add
fld
mov
sbb
mov
in
adc
xor
inc
push
popa
sbb
inc
ja
push
loop
push
les
insl
fisubrl
stos
mul
fcomps
andl
push
out
ljmp
cmpb
add
xchg
add
int3
idivb
js
testl
push
cmp
adc
je
xorl
xor
cmp
cli
subl
in
stc
iret
imul
andb
dec
cwtl
jnp
repz
loopne
lock
iret
mov
pop
push
iret
dec
cli
and
mov
dec
mov
mov
shlb
pop
aam
mov
mov
push
adc
or
or
mov
in
shll
shlb
cmpsb
push
pop
sub
push
pusha
arpl
das
and
jp
jo
into
pop
cmp
out
lods
or
pop
icebp
push
jmp
and
push
es
adc
shrl
lds
push
test
cli
inc
pop
dec
pop
dec
ja
pop
fdiv
dec
sub
das
call
or
mov
push
pop
xor
pop
dec
fists
push
repnz
lods
sbb
enter
sub
test
cwtl
or
adc
ljmp
adc
dec
pop
stc
adc
inc
xchg
repz
fdivrs
and
add
loopne
stos
push
cmpsl
imul
mov
enter
inc
adc
es
andb
sub
loope
popf
push
cmpsb
rcrb
and
scas
cwtl
test
xor
xchg
lods
mov
aam
popa
xchg
aaa
inc
movsb
adc
jle
jl
lret
jmp
xor
scas
inc
xchg
dec
pop
mov
aam
or
out
ja
cs
repnz
jle
pop
aad
mov
aas
cmp
pop
movsb
cmp
lret
iret
push
into
push
inc
outsl
jg
mov
fcomp
xlat
cmp
xchg
mov
pop
addr16
xchg
lea
out
lret
rcrl
cmp
dec
push
jbe
mov
pop
jo
jecxz
add
dec
dec
addr16
add
xorl
cs
mov
mov
or
rolb
insl
std
int
inc
aam
lahf
cmpsb
mov
loop
sub
cmpsl
pop
jecxz
xchg
cli
adc
loopne
mov
mov
jbe
insl
stos
lcall
stos
jbe
mov
and
pop
pmaxub
mov
enter
mov
mov
sti
sti
dec
mov
out
cmp
das
push
and
repnz
rcr
sub
cmp
cmp
dec
xchg
outsb
outsb
shll
xchg
jge
cltd
cld
data16
push
cmp
psraw
cs
pop
pusha
push
ret
mov
lahf
mov
in
mov
lods
or
fchs
push
sub
mov
repnz
int
leave
repz
mov
in
idivl
in
das
mov
mov
push
stos
sub
loop
ss
inc
xchg
inc
jge
out
mov
outsl
cmp
pop
adc
mov
xor
shlb
pushf
jno
fcompl
add
inc
cmp
orb
jmp
cmpsl
in
and
dec
dec
add
push
pop
adc
inc
add
push
aaa
js
clc
inc
pop
jmp
or
sbb
sub
and
push
pusha
adc
ss
pushf
imull
and
iret
les
std
adc
movsl
out
or
mov
lock
jg
int
xchg
aam
jmp
mov
adc
fbstp
mov
mov
aas
and
push
sub
addl
jbe
adc
imul
mov
iret
jmp
sti
cmp
rcll
lret
jp
lods
sarl
lret
add
in
data16
dec
mov
fistpl
dec
dec
out
xor
cmp
xchg
mov
adc
dec
test
pop
cmpsb
es
out
neg
cmc
sbb
xchg
out
jno
loop
dec
mov
sar
mov
aaa
sbb
int
sub
push
cmpl
push
or
mov
cmp
push
int3
icebp
mov
cmp
adc
roll
lret
dec
movsb
pop
lahf
fimuls
dec
rclb
fmuls
xchg
popf
inc
xor
pop
sbb
fldcw
jno
decl
pop
fucompp
jae
dec
jne
push
stc
adc
xchg
pop
popl
fs
sub
inc
out
or
push
lahf
xchg
pop
mov
mov
and
xchg
gs
push
and
ss
ds
xchg
jb
jne
or
cmpsb
ds
stos
push
push
nop
or
and
cmp
push
xchg
fdivl
xlat
mov
sub
mov
std
mov
add
aad
push
vorps
addb
inc
mov
push
out
add
cli
adc
int3
ss
dec
push
inc
xchg
stos
incl
dec
nop
sbb
adcb
test
add
imul
lret
and
sbb
dec
jnp
sti
pop
add
fwait
cmpsl
mov
pop
rcr
cmpsb
pop
lods
test
sbb
adc
or
cmpsl
enter
vhaddps
repz
aas
jp
roll
ds
and
push
dec
or
inc
cmp
jno
pop
lock
loope
popa
jns
outsl
mov
mov
outsb
inc
aaa
sarb
stos
or
addr16
flds
ror
cmp
out
test
iret
jo
fldenv
bnd
cs
mov
jnp
shll
nop
test
andl
dec
stc
dec
add
adc
pop
pop
fldenv
icebp
ljmp
imul
es
mov
aaa
out
cmp
inc
inc
mov
aam
mov
xchg
icebp
add
icebp
or
das
popa
enter
daa
sbb
insb
je
jmp
jecxz
es
outsb
mov
xchg
mov
pop
ds
xchg
fstp
pop
dec
out
push
movsl
mov
push
dec
shrb
jae
aam
outsb
sahf
lods
dec
out
pop
or
sbb
mov
loop
movsl
cmp
mov
xchg
push
mov
mull
jl
pop
cs
jle
or
xor
loopne
push
mov
mov
mov
dec
inc
jg
xchg
mov
pop
stos
aam
nop
pop
pop
adc
dec
jmp
lret
add
pop
lock
mov
mov
arpl
aaa
add
bound
rcr
mov
adc
add
and
nop
pushf
mov
fists
test
xchg
xlat
lods
ds
mov
popa
or
pop
pop
pop
push
and
nop
cmp
mov
adc
std
repnz
mov
ret
aaa
pop
hlt
mov
inc
mov
push
mov
cltd
sbb
xchg
mov
adc
leave
popl
mov
lret
das
mov
pushf
sub
push
ret
fildl
xchg
mov
arpl
push
rcrb
dec
mov
push
test
cwtl
aaa
xchg
test
add
lret
hlt
adc
push
nop
inc
adc
push
imulb
push
scas
addr16
sub
adc
mov
push
aam
cmp
xor
mov
push
popf
inc
ljmp
inc
mov
dec
dec
outsl
or
push
ficomps
push
mov
cmp
loopne
sub
add
adc
ljmp
sub
push
and
idivl
lea
fnsave
mov
cmp
movsl
xchg
cld
je
out
lods
cmpsb
nop
es
sbb
adc
jae
xchg
or
shl
fwait
clc
cld
popf
and
imul
subb
lahf
hlt
sahf
arpl
icebp
imul
stc
stos
cmpsb
push
xchg
add
mov
inc
call
mov
ss
push
xor
add
sahf
aam
mov
pop
popa
ja
inc
adc
cwtl
stos
dec
fildl
push
lret
ss
cmpsl
inc
out
mov
and
sbbl
testb
in
push
or
hlt
mov
dec
pop
dec
addb
xchg
shlb
mov
pop
pop
insl
clflush
jae
mov
pop
ss
mov
xchg
mov
fwait
cmp
xchg
call
mov
les
daa
mov
cmp
push
inc
mov
test
popl
outsb
es
ret
insl
and
setno
inc
cmp
push
sbb
clc
adc
jmp
in
test
jne
adc
int3
sbb
ret
out
out
pop
addr16
mov
cmp
std
stc
call
dec
or
mov
icebp
inc
adc
rcrl
and
movsb
test
jbe
aam
sbb
into
xor
inc
out
aam
scas
stos
in
enter
xor
shrb
mov
jno
pop
pop
pop
xlat
hlt
cmpsb
test
fmulp
dec
sub
lret
scas
sbb
testl
add
cmp
mov
mov
pop
pop
jo
dec
xchg
inc
add
lret
push
ss
dec
lret
imul
test
dec
pusha
pusha
pop
cmpsb
mov
je
xlat
dec
lock
out
imul
mov
in
lock
nop
lret
add
iret
add
inc
fsubr
cld
stos
hlt
xor
in
pop
mov
data16
cmp
jmp
dec
sahf
ror
sub
cld
lret
cmpsl
pop
daa
jg
fldenv
sbb
mov
movsb
inc
gs
dec
inc
push
adc
add
aas
std
lods
xor
ret
mov
pop
sbb
inc
sarb
and
lds
push
int3
xchg
inc
aad
pop
outsl
aas
repnz
xchg
popf
mov
pop
cmp
pop
iretw
add
push
mov
inc
inc
int
jmp
mov
cmp
pop
and
mov
add
mov
sbb
mov
popf
cmc
daa
inc
lcall
jle
mov
icebp
pop
or
inc
outsb
aaa
pinsrw
daa
ret
rorb
adc
fildll
mov
sahf
lds
mov
adc
cs
cltd
adc
add
enter
daa
push
pop
sub
fiaddl
mov
sbb
fisttpll
push
xchg
inc
loop
aas
cmp
shrl
std
pmaxub
jb
sub
jno,pn
shll
sub
out
push
movsl
into
lret
adc
rcr
jno
cld
dec
adc
enter
add
xor
pop
push
add
test
add
fisubs
cmp
xlat
ljmp
mov
push
xchg
test
imul
cmp
mov
mov
jl
push
outsb
and
push
lods
das
loop
icebp
mov
sub
and
call
in
dec
pop
or
cld
rcrb
pop
pop
imul
sub
dec
ret
or
mov
xor
andl
in
xor
add
xor
mov
jmp
dec
xor
pop
push
xchg
movsl
int
pop
sbb
shrb
dec
icebp
sahf
divb
cmp
divb
movsb
jle
fsub
cltd
scas
cmovge
imul
and
push
push
xlat
aam
xchg
xchg
push
shll
inc
and
loopne
xor
mov
test
ds
int3
stc
jno
sahf
dec
ja
sub
jae
daa
pop
sub
mov
and
enter
xchg
and
cld
push
cltd
shlb
add
loop
dec
insl
mov
sub
adc
test
lret
mov
cmp
imulb
cmp
mov
lret
push
xchg
push
sub
test
andb
dec
mov
xchg
test
test
jns
in
arpl
cmp
sub
sbb
xor
jne
jecxz
push
std
outsl
or
fmull
cs
int3
push
mov
pushf
pop
pop
add
pop
jg
lds
push
gs
addb
dec
xor
and
lahf
mov
jmp
and
inc
cmp
je
in
xchg
sti
push
push
xor
ds
pusha
inc
and
rcrl
mov
xor
xchg
xchg
in
fcomps
in
repnz
sub
cmp
mov
mov
stos
dec
push
test
adc
mov
lock
gs
daa
push
or
movsl
xor
icebp
xchg
cltd
add
outsb
or
mov
ret
test
push
add
fcompp
push
lock
cmpsl
xchg
arpl
pop
sub
iret
sbb
jge
cmp
pop
and
stos
xchg
sbb
add
add
xchg
mov
add
shlb
out
test
stc
lods
out
xlat
jmp
data16
mov
mov
das
data16
pop
or
addl
lea
mov
mov
dec
cld
addr16
or
mov
mov
mov
sbb
cmp
dec
pop
add
jmp
jge
lret
jp
mov
ret
pop
mov
test
and
xor
aam
in
fcmovne
mov
fwait
shrb
stos
scas
enter
js
push
sahf
inc
jne
sub
in
lret
xchg
loopne
in
aad
push
adc
lock
or
jb
fnstenv
pop
test
push
test
mov
pop
nop
dec
mov
sub
jnp
xchg
jns
imul
clc
inc
or
test
jl
jne
sbb
xchg
inc
mov
lock
cmp
fcomip
jae
aaa
sbb
push
fadds
pop
cmp
add
addr16
mov
in
mov
mov
js
pop
pop
add
xchg
dec
ljmp
out
sbbl
xchg
jo
xor
mov
mov
lods
int3
xchg
into
mov
mov
pop
jb
fbld
or
js
push
cmp
std
stc
imul
test
push
sub
shlb
idiv
push
jecxz
pop
jecxz
dec
mov
cmp
fldenv
adc
mov
or
inc
mov
scas
int
test
mov
dec
test
stos
mov
lods
xchg
out
mov
call
ret
jg
jecxz
dec
cmp
add
sub
sbb
lret
jnp
ljmp
mov
add
movsb
xorb
xor
inc
sub
arpl
push
pushf
loopne
mov
nop
pop
sbbl
xor
xor
or
and
fsubl
pop
insb
das
cmp
xor
test
mov
test
gs
xchg
push
xor
mov
int3
test
fsubl
mov
mov
and
cwtl
repnz
sbb
lock
addr16
pusha
loop
flds
mov
cld
inc
xchg
cmpsb
push
or
push
into
test
push
inc
mov
cmp
or
add
in
add
xor
pop
cmp
imul
and
inc
arpl
sbb
call
xchg
add
inc
cmp
sub
scas
iret
aam
and
loope
dec
adc
neg
push
and
add
adc
add
adc
fisttpl
lods
mov
out
rclb
dec
addr16
pushf
popa
inc
into
repz
loop,pn
pop
xor
push
jns
dec
sbb
cmpsb
xchg
or
lret
push
mov
sub
sbb
sub
fwait
and
rcl
jle
or
mov
outsl
xor
arpl
fnstenvs
xchg
lods
cs
cs
jnp
sahf
iret
lret
inc
xor
shrb
int3
or
shrb
rcll
cwtl
hlt
cmp
jge
mov
rclb
push
cs
lock
mov
imul
inc
clc
les
cmc
adc
pop
xor
orl
out
and
movsb
add
jo
mov
outsl
insl
inc
push
in
mov
inc
pop
xorl
jle
aaa
jmp
sbbl
sbb
xchg
pop
nop
add
adc
mov
adc
fsts
scas
or
fildl
or
loopne
dec
icebp
mov
mov
jg
dec
popa
outsb
test
gs
mov
shl
int
inc
jo
incl
les
testl
push
shll
xchg
pop
mov
cmc
fxch
loopne
sub
fwait
and
scas
xor
cmp
push
and
test
mov
inc
mov
adc
fists
into
fwait
push
pop
adc
cmp
push
xchg
cltd
stc
imul
xchg
addr16
push
ret
adc
mov
pop
adc
and
mov
mov
mov
push
mov
inc
repnz
or
mov
pop
repz
cltd
inc
push
pushf
out
inc
pop
jae
insl
in
movsb
inc
lds
dec
mov
stos
fdivr
cld
mov
popa
add
mov
ret
in
sub
mov
add
sahf
clc
sbbl
scas
sub
test
sub
ss
add
test
icebp
sbb
arpl
dec
notb
mov
mov
shll
icebp
jecxz
out
popf
jne
push
bound
cmc
cltd
sbb
andl
shrb
cltd
aam
dec
jle
jp
inc
and
andl
jns
filds
neg
mov
mov
pop
shrl
in
mov
shl
leave
mov
jmp
lods
shll
jmp
adc
mov
jecxz
ds
popa
imul
sub
mov
stc
cmpsl
pushf
iret
pop
mov
mov
aas
xchg
dec
mov
rcll
stos
inc
ror
fnstcw
mov
es
lea
mov
xchg
insb
xchg
ret
aad
les
fisubs
push
mov
out
jl
ds
inc
xor
jne
stc
jp
idivb
inc
lea
xchg
pop
lea
sbb
stc
xchg
jg
push
daa
bound
push
jnp
xchg
push
andb
in
sub
insb
ljmp
sub
insl
jae
mov
mov
sub
int3
mov
std
xchg
jp
jmp
inc
mov
repnz
ss
negl
in
mov
outsl
xchg
jo
inc
inc
enter
mov
mov
lods
adc
fisubs
cmp
xor
sub
test
aad
mov
lcall
into
in
je
sbb
pop
jecxz
and
push
ds
mov
aad
sub
hlt
add
or
data16
pop
lods
ret
jle
out
xchg
push
xor
push
clc
out
incl
sbb
pop
pop
scas
fimuls
stc
jnp
adc
ss
insb
shl
xor
or
dec
fimull
inc
addr16
mov
dec
movsl
movsb
mov
adc
pop
test
adc
mov
shlb
ss
stos
in
inc
ret
mov
xor
and
mov
jno
push
xchg
xor
pop
lods
dec
iret
mov
mov
fldcw
popf
xchg
lahf
mov
sbb
or
lods
stos
jbe
dec
mov
push
ja
wrmsr
add
imul
jno
jne
es
sub
inc
jno
test
xor
popa
repnz
lret
add
lods
mov
mov
aam
cmpsl
mov
fcompl
out
cmpsb
sbb
mov
add
mov
xchg
and
std
loope
cld
test
sbb
jge
in
inc
mov
or
cmpsl
in
xor
mov
xor
push
jp
test
adc
in
imul
jne
je
in
std
sub
push
add
hlt
jo
fildl
sbb
int
mov
aas
or
or
dec
fcompl
sar
add
inc
xor
mov
pop
xchg
aaa
movsb
xchg
clc
jo
sub
dec
loopne
mov
mov
push
out
mov
jg
ljmp
push
add
ss
nop
pop
jnp
arpl
mov
sbb
mov
jne
in
rolb
stos
and
fldl
mov
stc
addr16
fwait
leave
jle
iret
bound
cmpsb
rep
mov
sub
inc
leave
inc
xchg
rcl
movsb
cmpsb
fidivl
jl
jge
jae
push
mov
pop
pop
inc
mov
movsl
inc
divb
sub
add
mov
lret
inc
aas
in
stos
test
fcmovbe
lea
test
movb
xor
xor
lock
sub
fistpl
int3
mov
sub
mov
mov
and
jne
stos
ds
xlat
ret
cmp
loopne
addr16
cmpb
aam
insl
loopne
push
fstl
add
in
mov
mul
xor
fs
js
dec
aam
add
rcll
cmp
push
xchg
std
lds
orb
into
xchg
pop
cmc
adc
pop
les
jbe
add
ficomps
imul
pop
arpl
ret
mov
pop
mov
arpl
fldlg2
das
je
pop
sub
mov
aad
mov
mov
fstps
xor
out
xchg
lods
jbe
push
leave
sbb
icebp
jno
in
sub
stc
push
movsl
mov
cmpsb
sub
sbb
or
notl
outsb
pop
cltd
sbb
or
ja
sub
dec
sbb
mov
or
pop
movups
mov
fsubr
data16
iret
ds
cmp
cmp
nop
jno
jbe
adc
movsb
adc
cmp
add
jno
adc
inc
outsb
mov
jecxz
xor
data16
fbld
loop
test
outsb
jg
cmp
out
or
ja
aas
inc
and
push
pop
mov
adc
test
shll
mov
imul
pop
xchg
jle
mov
and
dec
aaa
push
int3
adcl
jnp
xchg
cltd
lret
pop
inc
nop
cmpsb
cltd
loop
lods
jb
cmp
adc
scas
pop
add
xor
mov
or
mov
add
push
repz
int
cmp
mov
mov
mov
fcomp
shlb
ljmp
dec
cmp
adc
into
mov
popf
popf
pop
pusha
call
outsb
sub
lahf
mov
fldt
stos
mov
and
cmp
cwtl
lock
mov
xor
out
jae
ja
stos
fcmovbe
cmc
shll
fs
xor
fidivs
lea
scas
fnstenv
cmp
sub
or
in
mov
jb
inc
mov
xlat
push
loope
lock
les
add
outsl
lods
push
pop
shlb
jl
sub
pop
add
mov
adc
imul
sub
cld
lods
and
push
push
pop
cmpsl
cmpsb
cmp
jno
inc
les
and
addr16
pop
lock
jl
jnp
pop
adc
dec
sbb
subb
repnz
adc
scas
push
lret
adc
dec
in
or
xor
sub
mov
mov
ds
push
loope
imul
ds
sub
mov
dec
or
cld
mov
cmc
sub
daa
in
sub
xchg
dec
es
nop
mov
fwait
cmp
icebp
lcall
fdivrl
jecxz
mov
push
dec
adc
andb
outsb
clc
sub
push
pop
push
push
ljmp
adc
stos
cmc
cmc
jl
outsb
in
jp
test
stc
push
sub
imul
popf
mov
inc
orl
jne
inc
mov
add
test
mov
cmpsb
rcr
jmp
daa
sbb
dec
inc
jbe
sbbl
sub
push
cmp
test
fs
mov
icebp
cltd
push
je
out
push
pop
pusha
jmp
xor
push
clc
nop
mov
sbb
mov
lds
in
inc
lods
cmc
jns
dec
inc
add
adc
fistpll
mov
jae
cmp
loopne
sti
ljmp
test
mov
repz
xchg
js
pop
mov
nop
jmp
xorb
sbb
cmp
mov
imul
cli
jbe
scas
dec
fisubs
lcall
mov
push
and
dec
aad
idivb
lock
into
adc
test
std
xor
int3
xchg
mov
push
fstpt
repnz
sub
outsl
es
sub
sbb
push
pop
and
loop
mov
out
in
add
leave
mov
mov
sbb
jae
jecxz
sub
pop
adc
push
repnz
loope
lret
leave
jle
clc
or
add
mov
add
loop
adc
xor
cmpsb
ret
sahf
push
adc
stc
inc
xlat
popf
icebp
cmpsl
adc
mov
or
mov
jecxz
outsl
pop
cltd
mov
inc
lods
sub
mov
mov
adc
test
mov
inc
adc
push
adc
push
dec
popf
sub
mov
jb
jae
inc
decb
inc
out
push
lcall
pop
push
test
lods
pop
mov
adc
adc
rcll
cmp
xor
lods
into
arpl
push
in
push
lcallw
add
fcoms
subb
add
xlat
jb
in
pop
ds
movsl
lds
xor
inc
inc
int3
stc
add
cmp
shrb
or
mov
mov
addr16
arpl
mov
inc
andl
push
dec
pushf
test
jbe
sub
pop
movsl
and
leave
js
mov
es
mov
fsub
aam
mov
notb
or
pop
jns
fidivl
outsl
fisubs
xchg
inc
loopne
nop
mov
xor
lret
pop
jo
gs
or
jne
sbb
sbb
xchg
cmp
xacquire
sub
and
loop
adc
add
sarb
adc
mov
push
shlb
xchg
nop
out
ds
mov
fdivrs
cmpsb
lcall
outsb
pop
scas
insl
repz
mov
clc
push
sub
and
cmp
sbb
scas
xor
aad
mov
addr16
pop
mov
mov
imul
mov
mov
push
mov
or
ficompl
mov
cwtl
out
inc
jb
pop
pop
in
test
pop
popa
mov
ja
mov
xor
gs
adc
aad
push
mov
roll
addr16
mov
xchg
jecxz
subl
add
mov
test
jo
sti
frstor
mov
les
xor
iret
into
in
inc
xor
dec
test
aas
sbb
adc
or
xchg
jmp
loopne
jl
mov
loope
mov
aad
mov
popa
lahf
mov
lock
mov
mov
jb
mov
gs
sub
bound
js
push
lret
call
add
jo
sub
mov
sahf
jge
loop
pop
xor
inc
sub
pop
aad
pop
notl
fistps
pusha
cs
clc
nop
hlt
cmc
adc
push
cmp
push
cmp
dec
in
cmpsb
mov
shr
push
push
dec
mov
mov
repnz
jo
mov
add
add
jg
out
arpl
pushf
stc
inc
les
add
push
pop
test
lahf
jnp
xor
and
ds
in
sbb
pop
call
jb
jg
data16
lea
in
add
cmp
bound
xchg
pop
xlat
pop
sbb
sbb
scas
nop
mov
xchg
xor
out
sub
push
lods
push
leave
sbb
inc
or
fiaddl
pop
scas
add
mov
adc
push
and
mov
mov
dec
in
insb
cmpsl
aam
pop
mov
incl
scas
xor
cmc
bound
nop
xor
inc
mov
test
or
push
bts
shlb
push
icebp
push
lea
inc
and
icebp
les
into
mov
pop
or
testb
adc
neg
or
insb
leave
ljmp
daa
dec
push
out
repnz
iret
mov
push
dec
nop
loopne
sub
lret
ss
out
inc
push
dec
push
inc
pop
jae
scas
mov
daa
incb
lds
cmc
mov
add
sbb
mov
cmp
xchg
or
adc
add
adcb
xchg
push
mov
mov
jg
sbb
rdrand
sbb
pusha
pop
pop
les
call
mov
mov
shrl
add
sahf
aad
jns
dec
and
jnp
pop
push
cwtl
xchg
lods
push
jnp
in
in
ljmp
inc
cmp
cmc
mov
test
inc
adc
mov
movsb
test
push
jb
insb
jne
shll
lcall
cmp
sub
inc
sub
adc
insb
mov
mov
nop
dec
mov
push
lea
fisttpl
sbb
push
inc
adc
repz
movsl
mov
out
lret
or
xor
inc
in
pop
jo
lock
fldt
xchg
nop
sbb
decb
mov
mov
ds
fwait
test
mov
mov
and
lods
int3
mov
loop
mov
popf
push
mov
mov
dec
xor
mov
cmc
stc
pop
pop
or
bound
dec
loope
sbb
dec
adc
lcall
push
mov
push
rcr
dec
jnp
jno
gs
mov
and
jo
nop
mov
mov
xchg
adc
iret
add
cli
test
xlat
insb
xor
popf
mov
cli
jnp
ficompl
sub
inc
dec
bound
ret
pop
aad
mulb
test
xchg
add
dec
inc
xchg
push
je
mov
nop
jnp
movsl
push
inc
fsubrl
jae
mov
xlat
jbe
pop
je
stos
in
xchg
test
ret
or
mov
cmp
mov
cmp
clc
stc
sbb
and
in
xchg
cmp
pop
shl
mov
adc
out
push
popa
lds
shr
sbb
mov
decl
int
xchg
fs
push
push
mov
push
xor
mov
decb
jl
pop
das
cmp
sti
inc
imul
cmp
inc
mov
mov
xor
or
es
mov
dec
subb
aad
imul
mov
ror
push
pop
cmpsb
int3
in
aam
insb
inc
repnz
shrb
dec
push
andb
pop
shlb
aas
leave
out
nop
mov
cltd
pop
mov
jmp
imul
mov
jle
sub
sub
adc
pop
and
out
dec
xor
adc
pop
pop
mov
adc
push
jg
jnp
dec
sub
insl
fimuls
jb
std
push
movsl
sbb
jmp
sti
inc
push
push
and
in
xor
adc
inc
into
pusha
mov
sbb
mov
sbb
push
xchg
and
out
push
rcr
jmp
jg
sbb
daa
mov
sahf
rcr
or
shl
lds
lods
fsts
push
jno
movsl
adcl
mov
mov
jecxz
loopne
orl
fisubrs
mov
out
aad
cs
xor
cmp
lret
fidivrs
jecxz
ror
out
lret
mov
sbb
mov
ret
ret
push
mov
icebp
cwtl
xchg
jge
jbe
sbb
push
and
ljmp
xor
and
xchg
mov
jns
mov
lock
jl
jl
int3
cli
push
mov
cwtl
pop
adc
dec
and
jno
add
lcall
mov
je
add
enter
jae
jl
mov
adc
adc
push
mov
and
xchg
push
out
in
das
jbe
out
dec
add
jl
pop
push
mov
jb
ret
and
push
sti
lcall
fcomps
insl
xor
sub
clc
push
push
mov
dec
in
mov
pop
fidivrl
int
dec
sbb
into
hlt
ret
and
or
push
subb
cmp
dec
enter
or
push
call
je
pop
adc
test
ret
ret
call
stos
xchg
fsubrs
fmul
push
out
stc
jmp
into
iret
imul
pop
mov
fisttps
jo
out
xchg
mov
aam
lds
pop
push
xlat
add
icebp
icebp
pop
fwait
inc
inc
push
int3
jecxz
out
rcrb
lret
arpl
jecxz
cwtl
and
ret
fistpll
enter
cmp
mov
int
enter
pop
jmp
sub
mov
fmul
sbb
xchg
shrl
js
add
lahf
loope
xchg
insl
sbb
jo
mov
nop
mov
sub
mov
sbb
pop
cmpsl
xor
fldenv
lret
mov
jg
cmp
push
sbbb
insl
das
shlb
out
push
jl
add
test
push
dec
in
cli
sbb
and
cmp
je
call
push
popa
addr16
lods
jge
das
cmp
in
addr16
jle
push
mov
xor
add
fcmovnu
and
icebp
lcall
jle
ss
orl
in
test
rcr
mov
mov
scas
pop
hlt
pop
sub
and
icebp
fsubr
mov
cmp
rcrb
cmp
fidivrl
mov
iret
into
pop
gs
mov
movsl
clc
push
cmp
cmp
mov
dec
scas
push
mov
popa
add
enter
or
mov
std
mov
xor
jl
negb
jge
pop
jo
ds
repnz
sub
mov
lods
jno
fs
rcll
jne
out
inc
pop
fwait
add
mov
and
rclb
lahf
xor
jge
jnp
loop
std
fs
mov
dec
dec
and
jecxz
inc
jge
mov
fcoml
loopne
out
mov
fwait
lods
hlt
xor
xorb
sarb
xor
add
cmp
push
stos
mov
cmpsl
lahf
inc
mov
cmpsl
arpl
jl
xchg
xlat
or
mov
add
pop
sub
fwait
ja
and
addr16
test
adc
cmp
mov
sar
dec
mov
jae
mov
mov
push
ficompl
mov
stos
lock
imulb
mov
inc
pop
cmp
mov
jecxz
mov
imul
sbb
mov
pop
pop
mov
test
in
in
cmpsb
or
cmp
test
ds
mov
movl
ret
std
cltd
in
mov
loop
outsl
xlat
or
mov
lahf
sub
hlt
lcall
push
scas
ror
inc
sti
mov
jmp
add
addr16
clc
pusha
je
sti
sub
mov
sbb
pop
push
insb
jecxz
je
cwtl
cld
push
adc
cmc
inc
bound
sarl
adc
push
hlt
divl
cmp
mov
push
push
insb
and
aad
xchg
popa
outsb
inc
mov
ss
add
sti
dec
add
mov
data16
sub
or
sub
push
mov
test
inc
mov
inc
sub
dec
leave
mov
add
push
lret
lret
dec
imul
and
cltd
lahf
xor
mov
andl
lret
sbb
sbb
scas
sbbb
jmp
pop
xchg
cmpsl
pop
inc
in
in
jnp
sub
xchg
add
ret
mov
cmc
enter
dec
pusha
icebp
in
fwait
pop
mov
lock
cmpl
aas
mov
sti
outsb
sub
pusha
fwait
pop
pop
loop
cmp
lret
ds
xchg
cwtl
insl
push
push
fists
pushf
lock
out
mov
roll
pop
out
sub
mov
mov
test
popl
cmpsb
into
or
std
sub
mov
pop
jno
push
popa
mov
data16
sti
dec
inc
mov
jae
inc
xor
inc
outsl
ficomps
jne
icebp
cmpsb
inc
push
cmp
out
jge
ret
stos
and
pop
pop
lret
adcl
mov
dec
hlt
mov
iret
mov
in
or
lret
or
mov
repz
sub
int
add
addr16
cmp
mov
test
and
sahf
cld
test
dec
movsb
stos
xor
jg
jmp
mov
aad
cmpb
outsb
jmp
or
gs
or
dec
xor
stos
lock
std
mov
inc
je
inc
mov
mov
dec
test
dec
push
out
sbb
ja
scas
inc
iret
andb
dec
aad
lcall
xchg
cmp
fmull
xor
lahf
nop
movsb
and
jo
mov
fsubrl
fsubr
sub
data16
imul
nopl
jno
xor
mov
fistpll
lock
sbbb
popa
sub
icebp
adc
scas
mulb
icebp
xchg
and
and
mov
jg
xchg
sub
cmpsl
inc
sbbl
fcoml
decl
in
lret
std
cwtl
test
call
mov
mov
jnp
test
mov
or
xor
mov
xor
andb
inc
or
pop
pop
mov
fimuls
pop
aam
mov
dec
add
aad
push
mov
xor
inc
adc
adc
pop
gs
jns
ja
sub
out
mov
lock
push
lahf
jl
mov
daa
pop
int3
sub
jne
sahf
mov
mov
mov
or
mov
ds
cmc
data16
or
pop
imul
sbb
icebp
add
nop
jle
leave
jmp
fnstsw
add
xchg
into
repz
xchg
and
push
xchg
enter
xchg
ljmp
push
dec
jge
push
jl
mov
arpl
mov
fldl
cmpsb
add
bound
stos
jnp
add
adc
cs
faddl
test
xchg
stc
mov
push
sub
arpl
mov
push
leave
cmp
add
cmp
pop
dec
ss
aaa
test
xchg
cwtl
sbb
movsb
xchg
xchg
xorb
test
jbe
add
and
cmp
xor
add
nop
xor
data16
inc
add
mov
leave
xchg
cmp
pushf
jns
or
mov
mov
dec
cmp
jne
cmp
and
call
or
fidivrs
lea
add
aaa
and
xchg
and
repnz
jne
mov
popa
mov
jo
mov
sbb
and
mov
push
and
stc
lret
int3
jg
mov
test
mov
add
xor
sbb
dec
mov
leave
in
and
mov
pop
xor
and
or
mov
xchg
nop
and
into
push
fisubrl
je
lock
push
push
mov
cmc
sbb
nop
sahf
and
jne
fcompp
mov
cmp
test
or
shll
in
xor
popa
mov
ret
jb
es
pop
hlt
jae
loope
mov
dec
fisubrs
push
incb
std
sub
xor
rorl
dec
dec
push
mov
popa
adc
loop
sub
mov
fs
pop
pop
cmpsb
aam
inc
pop
dec
loopne
rorl
in
popf
adc
add
lock
out
mov
fidivrs
jnp
xlat
insl
psubsw
pop
jmp
add
imul
add
repnz
mov
mov
jno
jns
rcrl
rclb
aad
movsl
push
bound
sbb
push
dec
xor
add
push
iret
orb
repnz
jnp
jae
add
cli
lods
pop
dec
test
sub
and
mov
and
push
dec
sti
or
jp
insl
aaa
pop
dec
enter
fstps
dec
sub
cmp
dec
pop
fldl
push
loope
dec
push
dec
jo
dec
lods
insb
dec
or
outsl
add
mov
ret
jno
dec
imul
push
ljmp
jns
stc
jo
jmp
jnp
sbb
push
mov
dec
jle
scas
rcr
shll
inc
mov
cmc
jle
outsb
jbe
orps
mov
pop
les
jns
or
sahf
cmp
add
in
icebp
mov
and
xchg
mov
and
sub
lea
lahf
sbbb
hlt
gs
dec
out
mov
xchg
lock
scas
movsb
pushf
or
in
aaa
data16
xchg
xor
push
or
inc
jnp
push
inc
xor
cmp
mov
dec
lcall
xchg
dec
mov
lahf
push
sbb
out
movsb
sub
in
ja
loopne
pop
cmpsb
pop
daa
dec
leave
test
push
enter
call
mov
and
dec
adc
dec
rorl
je
fwait
shrb
fldt
arpl
add
mov
push
in
push
mov
nop
sbb
pop
push
sarb
incl
jmp
rol
fistpll
rcll
mov
jecxz
mov
dec
loop
test
lahf
sub
pop
test
add
inc
loop
cwtl
rcl
int
xor
mov
sar
xor
or
and
add
movb
mov
mov
and
popf
mov
pop
jge
inc
nop
or
insl
sarl
imul
inc
jmp
cmp
ss
xchg
push
cmc
sub
shll
add
xchg
cld
das
or
lock
xor
mov
je
in
subb
leave
movsl
pop
loopne
jne
mov
mov
jl
scas
push
std
in
lock
push
add
mov
leave
js
mov
mov
sbb
inc
ret
mov
jl
rcrl
daa
inc
fucom
cmpsl
or
or
and
cmpsb
pop
jne
jg
ds
push
inc
mov
and
sti
mov
enter
lods
lods
lock
cmp
je
or
jmp
push
stc
or
xor
xchg
xor
xchg
sub
sub
fldcw
or
push
test
inc
dec
ret
adc
cmp
ret
scas
mov
mov
in
mov
pop
sbb
cmp
mov
adc
test
push
pop
push
cli
out
sahf
mov
sarb
xor
mov
and
xchg
dec
fisttpll
mov
mov
mov
mov
call
mov
dec
bound
popf
repnz
pop
ljmp
mov
cmc
cld
dec
xor
adc
andl
sahf
jns
mov
adc
mov
xchg
aas
add
sar
das
xlat
mov
push
rcrb
fldenv
mov
pop
or
add
lret
cld
jmp
movsb
mov
mov
adcl
addr16
int3
stos
inc
mov
es
xchg
shll
cmp
xor
aam
sti
loope
mov
mov
jno
dec
mov
fsubs
or
mov
xor
sbb
cmp
in
lock
test
jbe
out
fs
cmp
push
data16
and
outsl
cmp
xchg
push
lods
lret
pop
pop
mov
push
pop
cmp
add
and
push
mov
jb
pop
xor
xor
pop
jl
jno
pusha
dec
in
xchg
shlb
rcl
push
or
mov
or
mov
xor
mov
dec
mov
xchg
jne,pn
aas
push
les
popf
notb
aas
les
les
jb
movsb
and
pop
scas
xor
adc
pushf
fwait
sbb
mov
push
int3
xchg
popf
lock
xchg
cmp
int
cwtl
sbb
add
fcoms
and
dec
icebp
aad
push
nop
pop
mov
stos
insb
add
jge
mov
adc
lock
loopne
push
lret
aad
jne
int3
mov
scas
push
js
sti
popa
xchg
or
scas
aad
inc
and
dec
cltd
fmuls
cmp
mov
nop
xchg
test
testb
mov
sbb
lea
fisttpl
cmp
popa
test
ss
ds
sbb
fwait
iret
test
jno
js
jecxz
inc
xchg
inc
sub
push
fcmovnbe
cmp
push
mov
cli
add
out
push
in
sub
test
sbbl
sub
hlt
adc
sub
sti
sbb
dec
pushf
cmp
jg
cmpsl
cmpsl
push
push
icebp
cmpsb
sub
xchg
sbb
in
add
outsb
jl
pop
adc
pop
mov
xor
imul
and
sbb
lods
push
addr16
mov
add
shrb
push
fwait
cmp
pop
or
adc
sub
addr16
dec
shl
add
sbb
mov
stos
fbstp
dec
cmp
push
sarb
mov
jo
sbb
nop
sub
mov
xchg
jb
ljmp
imul
out
ljmp
inc
je
and
push
jns
mov
sahf
add
stos
push
lds
cmp
dec
cmp
cmpsb
mov
pop
xchg
repnz
ret
lret
sbbl
sbb
fdivrl
or
incl
add
popf
pushf
fidivrl
xor
jo
icebp
ja
and
push
dec
leave
xlat
into
fstpl
mov
insl
push
xor
cmpsl
insb
cs
mov
iret
nop
add
mov
push
outsb
arpl
mov
les
mov
jne
ds
dec
mov
cmpsb
scas
cmp
flds
negb
adc
mov
sbb
hlt
sbb
loopne
mov
mov
cmpsb
ret
cld
jmp
sbb
jnp
push
push
jmp
pop
inc
dec
insl
add
push
push
jl
pop
pusha
stc
add
cmp
adc
jne
lock
and
push
xchg
pop
adc
aaa
mov
ret
add
fwait
xchg
or
jle
es
xor
test
movb
stos
shll
rep
daa
orl
mov
or
sbb
add
sbb
loopne
jl
fisttpl
push
xor
xor
je
xchg
push
dec
jo
xchg
lret
mov
mov
addr16
dec
ss
xchg
mov
xor
xchg
cmpsl
out
iret
jle
adcl
dec
mov
call
mov
imul
jl
adc
cmpsl
adc
add
stos
add
inc
hlt
data16
inc
xchg
cmp
mov
clc
mov
lock
sub
add
jp
iret
repz
sbb
fadds
mov
into
mov
lods
xchg
int
pop
mov
daa
mov
ljmp
ret
jae
dec
add
xchg
mov
jecxz
add
pop
xchg
mov
mov
pop
or
test
and
iret
movsb
mov
sbb
mov
sbb
pop
scas
sub
lods
ljmp
push
les
and
mov
add
xchg
mov
enter
fsubl
stc
sbb
mov
mov
in
jbe
xor
scas
push
pushf
sub
outsl
outsb
inc
push
movsb
aad
pop
xor
cli
insb
loop
lret
shlb
scas
enter
sub
dec
mov
sub
or
std
test
imul
mov
dec
sbb
test
cwtl
xchg
jecxz
mov
je
in
sbb
daa
ljmp
pop
lret
sbbb
mov
mov
daa
xlat
int3
dec
sar
cmp
in
lods
pop
int3
sbb
mov
mov
dec
hlt
repz
in
ljmp
movsl
nop
adc
jne
sbb
add
cmp
mov
pop
hlt
mov
test
lret
xchg
sbb
in
mov
ljmp
mov
inc
mov
je
pop
push
fwait
das
xchg
xchg
sbb
mov
adc
pop
lock
xor
dec
push
xorb
jl
pop
pop
and
mov
add
into
inc
cmp
cmpsl
bound
inc
mov
jp
leave
mov
js
xchg
icebp
out
cmp
mov
sub
stos
push
push
arpl
or
popa
ret
mov
pop
push
jne
add
mov
popa
mov
push
push
push
or
inc
or
test
addb
jae
rorl
outsb
mov
xorb
lock
hlt
add
ret
aaa
pop
arpl
int3
mov
in
jg
loope
push
enter
rcll
nop
notb
xchg
mov
mov
test
push
adc
mov
jnp
popl
shrl
outsb
out
pop
pop
or
mov
adc
or
cltd
mov
sbb
dec
jo
rcr
sbb
mov
in
movsl
mov
mov
cmpsl
scas
cli
je
ja
mov
es
cwtl
in
fcmove
ret
push
and
mov
loop
mov
test
jge
pop
ss
adc
xor
in
cmpsb
xor
mov
xor
mov
fs
and
cmpb
cmp
sub
inc
mov
lea
add
or
cmp
fldenv
imulb
sahf
icebp
ret
mov
fildl
stc
test
insl
mov
and
sub
jecxz
hlt
inc
sbb
fstpl
stc
pop
xor
sub
push
or
repnz
data16
mov
loopne
push
cmpsb
int
scas
lret
mov
lods
arpl
or
push
insb
and
pop
js
mov
je
mov
cmp
inc
incl
adc
mov
je
pop
and
fmull
dec
out
mov
std
pop
ret
or
daa
xchg
ror
int
dec
cmpxchg
and
sub
faddp
cs
in
icebp
lret
pusha
sbb
mov
jo
cmpsb
sub
fisubs
bound
stos
and
hlt
dec
mov
add
or
push
aam
je
js
dec
or
jb
mov
mov
jl
arpl
mov
scas
sub
jp
push
addb
adc
or
pop
enter
mov
dec
cmpsl
fisubs
sbbb
loope
push
sub
sbb
inc
and
in
es
mov
daa
jecxz
mov
insb
mov
sub
xchg
mov
int3
inc
fldln2
xor
and
dec
cmp
jns
dec
fidivrl
icebp
fldenv
mov
cmp
mov
test
push
in
jle
jg
into
ds
sti
test
add
jno
dec
es
clc
outsl
stc
cmp
shl
mov
sbb
xor
mov
pop
dec
sti
lock
sub
or
add
pop
test
mov
cmp
jae
and
push
jbe
inc
inc
test
or
sub
popa
mov
test
xchg
jno
in
xchg
pusha
loopne
and
push
and
ret
xor
inc
addr16
in
lahf
jg
xchg
es
clc
fsubl
and
xchg
xorl
mov
rol
gs
cmp
sbb
stos
popa
ffree
int3
sub
ljmp
sbb
out
cwtl
adc
je
xchg
mov
insl
cmpsb
and
push
or
xor
ss
xchg
dec
and
es
ja
cld
adc
pop
mov
rol
fimuls
jg
data16
dec
inc
ds
push
push
add
sahf
pop
addr16
push
push
stos
jp
mov
ja
mov
dec
mov
sbb
mov
cmp
dec
xchg
adc
inc
push
imul
outsb
clc
inc
aad
or
xchg
in
pop
or
scas
mov
dec
pop
fwait
cmp
ret
lret
clc
lea
cmp
and
je
lret
add
or
or
add
sbb
add
fisttps
mov
lds
dec
clc
fbld
mov
lret
rol
sbb
or
or
inc
mov
lcall
and
arpl
push
ret
int3
adc
push
push
sub
jo
jae
jns
fdiv
adc
pop
out
aam
jp
ljmp
cwtl
test
shl
add
jle
in
jo
stos
arpl
fisttpll
cmp
je
int
mov
mov
jns
jp
cld
call
jo
xlat
das
push
inc
fadds
out
xchg
cld
ret
xchg
cmp
push
dec
lods
mov
popf
cli
fcoms
movsb
xchg
leave
add
inc
add
inc
push
sbbb
add
cmp
sahf
mov
iret
xchg
cltd
insl
xchg
cmpsb
push
arpl
inc
push
lcall
xor
pop
fs
enter
mov
test
aas
jecxz
nop
cli
sbb
lcall
xchg
and
ret
or
pop
pop
sub
xchg
mov
mov
addb
loope
nop
imul
xor
aam
jp
inc
and
insb
xchg
dec
sbb
mov
pop
movsl
inc
and
lret
inc
inc
dec
sbb
test
push
into
xor
or
add
cmpb
cmp
inc
or
pusha
push
push
push
jbe
popf
in
leave
xor
shr
mov
mov
lret
aam
adc
xor
cmp
pop
cmp
insl
inc
lods
and
mov
fdivl
call
nop
negb
lret
sarl
push
lock
or
sbb
ss
cmp
xchg
ss
sahf
loopne
push
addr16
fldcw
cmp
lret
or
push
and
in
jnp
enter
or
push
inc
sbb
mov
xchg
inc
xchg
sbb
mov
outsb
or
loopne
and
add
das
adc
shll
mov
lret
jo
xlat
jae
sti
or
mov
lods
and
cmpsl
mov
adc
or
xor
out
mov
movsl
mov
loope
outsb
add
cmp
insb
mov
mov
jle
dec
pop
leave
mov
and
mov
cltd
sbb
test
loopne
jae
and
mov
cmp
fwait
inc
sbb
push
sbb
lahf
pop
and
cld
and
dec
lahf
xchg
cmp
in
push
ret
push
push
mov
lods
daa
jae
aam
ss
stos
or
sbb
das
stc
outsb
push
sbb
mov
mov
jge
lods
push
pop
jae
fstps
jmp
mov
xor
adc
push
push
sbb
push
inc
sub
xchg
ss
dec
pop
and
in
mov
jmp
mov
mov
test
leave
dec
inc
adc
divb
repz
jae
ja
test
mov
call
aas
dec
cmp
rcll
js
cmpb
mov
loop
idivl
mov
adc
dec
dec
int3
sbb
lea
jmp
pop
or
mov
fcoml
aas
jne
push
adc
out
lock
mov
rorl
dec
push
add
sbb
sbb
loopne
ffree
mov
push
cwtl
pop
repz
ljmp
pop
cmp
mov
mov
out
fstpt
add
out
jbe
test
xlat
mov
push
xor
inc
xchg
dec
dec
push
fs
and
mov
and
pusha
das
lea
loop
mov
xchg
arpl
cmpl
pop
fmull
mov
lods
and
or
cs
pop
xchg
add
les
ss
sub
popf
fadds
xchg
push
aam
mov
inc
dec
cli
jmp
inc
jl
into
test
xchg
test
and
pop
shlb
decl
insb
sbb
sub
jmp
fs
mov
xor
loope
mov
add
int
in
and
inc
loop
gs
sahf
mov
add
shrl
push
mov
dec
sub
and
mov
jnp
loop
movsw
and
cmp
jns
push
pushl
insb
addr16
pop
cmp
xchg
pop
mov
scas
into
mov
call
sbb
mov
and
cmp
sbbb
test
lret
xchg
inc
add
pop
push
pop
xlat
jns
in
aam
jnp
push
mov
add
jmp
es
adc
cwtl
xor
insb
mov
test
repz
outsb
dec
ficoms
stos
es
xor
sbb
loope
xor
ret
push
rcl
xchg
mov
out
cmp
inc
pop
cmp
not
cli
test
xorb
mov
xchg
sub
jecxz
aas
xchg
jno
inc
leave
mov
lret
mov
jne
or
mov
sub
out
sub
xorl
inc
push
mov
ds
inc
jge
in
shlb
sbb
cmp
mov
pop
loop
mov
push
xchg
jecxz
sti
pop
adc
data16
or
pop
sub
inc
jo
pop
push
out
mov
xchg
idiv
sbb
loope
xlat
insb
clc
or
cld
mov
lods
mov
sbb
rclb
pop
and
lock
xchg
pop
mov
aam
cwtl
add
mov
icebp
dec
sbb
mov
inc
cwtl
stos
lret
add
cmp
lods
hlt
cltd
cmp
rcrb
lret
cmpsl
and
scas
fcoml
gs
sbb
pop
sbb
repnz
icebp
iret
aad
pop
push
ficoml
mov
and
xor
inc
sub
pop
xor
push
cmp
pop
fs
arpl
lock
inc
ret
or
xchg
adc
daa
add
mov
mov
or
int3
or
test
scas
js
test
pop
adc
fimull
rcrb
mov
dec
int
pop
sub
mov
sub
mov
add
jg
jno
ret
xor
jmp
aad
cmp
inc
xor
sub
int
sahf
pop
jp
stos
jno
jmp
adc
aas
push
add
std
popa
data16
mov
pusha
adc
mov
sbb
mov
or
push
and
and
mov
sbb
add
dec
shl
sti
push
mov
inc
and
iret
pop
xlat
cmpsl
aad
sbb
clc
mov
or
inc
mov
add
call
jns
sti
js
mov
cmpb
push
adc
cmpsb
and
jg
dec
fsts
inc
jno
lret
jb
lods
xorb
xchg
loop
dec
mov
jb
mov
out
idivb
out
or
in
out
cs
lds
aam
adc
inc
stos
jl
stos
scas
and
xchg
xchg
adcl
leave
cwtl
ds
add
cwtl
es
push
mov
xor
std
adc
mov
xor
outsb
decb
stos
and
insl
cmp
pop
test
sub
add
sub
cs
xlat
mov
addr16
into
xlat
dec
in
or
push
xchg
popf
stos
pushf
dec
pop
loop
in
test
jge
xchg
cmp
cmc
sbb
push
stos
push
cmp
mov
fucom
mov
add
fstps
jae
outsb
mov
insl
jns
call
pop
sub
sbb
movsb
jle
jne
pop
dec
mov
imul
js
out
inc
and
cmp
sbb
int
shll
sub
add
jne
out
or
mov
mov
or
dec
jne
pop
cmp
lret
mov
xchg
xchg
mov
jne
mov
add
gs
lret
pop
outsl
sahf
repnz
push
dec
div
hlt
loop
call
dec
mov
adc
repnz
mov
jle
js
xor
sub
call
in
mov
dec
push
dec
mov
sbb
cmc
push
cmp
in
dec
xor
xchg
lods
mov
dec
shlb
xchg
mov
insl
mov
add
cmp
inc
inc
jg
cli
jo
loope
lcall
adc
scas
pop
xor
movsl
cltd
jecxz
pop
xchg
mov
and
pop
pop
inc
call
push
add
movsb
repz
sti
push
sbb
cmp
jb
dec
mov
mov
test
test
out
fisttpll
pop
hlt
xchg
popf
inc
mov
std
cltd
pusha
dec
movsb
daa
inc
pusha
dec
inc
aad
and
mov
mov
shll
sbb
ss
jecxz
sub
add
push
data16
cld
in
and
push
and
cltd
out
and
mov
cmp
stos
scas
add
stc
loopne
add
ret
pop
gs
enter
sub
imul
sub
in
repz
enter
std
fdivrs
dec
cmp
fists
sub
movsl
insl
inc
jp
mov
daa
notb
aam
daa
iret
cmp
shrb
jp
mov
mov
xchg
xor
cwtl
mov
mov
jne
mov
movsb
aam
push
push
jle
daa
mov
mov
iret
js
push
ficompl
cmpsl
push
xor
hlt
lea
or
ret
movsl
adc
and
daa
push
dec
out
xchg
jo
loope
sub
sub
xchg
outsl
mov
dec
xlat
adc
leave
mov
jl
add
dec
dec
cmp
out
inc
lock
push
and
cwtl
fcoml
and
ret
xlat
out
test
cmp
lcall
mov
aad
fdivl
imul
xor
lods
stos
rcl
loope
movsb
pop
aaa
in
gs
into
cli
icebp
lock
pop
shl
pop
daa
int3
clc
lea
test
mov
int3
pushf
insl
psrlw
cmp
repz
loope
mov
cwtl
cmpsl
mov
fbld
and
out
cmp
sarl
fimuls
cmp
xchg
aam
adc
cld
out
fisubl
cmp
leave
sbb
cmpsb
mov
jl
lahf
lahf
dec
out
fiadds
sbb
fistpll
xchg
jle
mov
aam
push
clc
mov
push
push
mov
sbb
dec
mov
inc
or
pop
dec
pop
mov
inc
pop
or
std
mov
je
fisttpl
pop
sti
add
xchg
or
sarl
aad
adc
out
or
mov
or
popf
mov
cmc
pop
mov
pop
inc
ret
and
das
dec
aam
movsl
xchg
xchg
mov
mov
shll
fisubrl
incb
mov
das
das
stc
xchg
mov
sbb
jb
sub
cmpsb
cmc
xchg
xor
jno
mov
dec
mov
idivl
inc
movsl
jmp
mov
or
loope
outsl
push
or
mov
std
out
loop
cmp
lea
inc
mov
or
cltd
xor
fldcw
and
fldl
fsubs
adc
gs
sbb
imul
mov
ficomps
insb
or
loopne
popa
subl
jg
mov
ficompl
mov
outsl
cltd
dec
inc
mov
mov
into
jb
sub
aad
pop
xchg
or
fbstp
out
inc
sbb
ljmp
xchg
adc
pop
loope
add
push
mov
push
fcoms
mov
data16
jnp
mov
in
movsb
xor
addr16
sub
lea
addr16
fstps
dec
xchg
xchg
std
test
daa
and
js
mov
cmc
cmp
pop
scas
sbb
daa
das
jecxz
xor
push
test
loopne
mov
rcll
movsl
mov
cltd
dec
push
je
dec
pop
mov
jl
repnz
xchg
pop
in
stos
cltd
sub
xchg
or
scas
out
aaa
mov
mov
jae
xchg
fdivrs
push
imul
in
cli
outsb
mov
lods
lods
mov
xor
jle
stc
mov
stc
inc
xchg
add
dec
pop
sbb
xor
push
pop
pusha
cmp
adc
mov
xchg
push
jmp
mov
xchg
sbb
std
cmp
addb
push
inc
in
int
and
pop
ret
lock
cli
mov
pop
imul
push
std
mov
imul
push
call
mov
push
jmp
repz
loope
mov
jo
push
iret
add
out
es
jnp
jge
sub
mov
jecxz
sub
push
sub
lahf
cmpsb
jbe
imul
dec
push
neg
pusha
pop
ja
scas
jmp
mov
outsb
insl
cmp
xchg
sbb
mov
cmp
cmp
jo
pop
adcl
subb
sbb
into
cmp
xor
call
push
pop
fbstp
dec
jmp
add
or
and
adc
stos
shrb
call
out
mov
aaa
out
sbb
cs
jl
xchg
sbb
mov
popa
xor
sahf
lahf
orb
inc
call
add
mov
mov
test
sub
sbb
lds
jle
push
testl
cmp
test
xchg
cs
mov
inc
cwtl
push
mov
jne
loop
data16
or
add
in
faddl
aas
mov
cli
lret
std
lods
push
das
addb
icebp
out
cs
repz
jb
ret
pop
adc
scas
shl
xchg
idivl
gs
mov
out
into
cmpsb
sub
adc
jnp
lods
mov
sbb
test
adc
lret
icebp
push
or
add
xor
add
int3
inc
xchg
mov
int
fadds
xorb
push
jae
mov
pop
loop
cltd
notl
xchg
mov
gs
loop
mov
adc
dec
loopne
inc
lahf
xchg
lret
xchg
in
and
jp
jp
jge
lret
js
popa
loopne
fisubrs
in
jbe
jo
sub
ja
int3
leave
ljmp
in
and
mov
mov
mov
inc
scas
jg
or
sbb
adcb
and
aas
test
aaa
sub
jmp
push
pop
iret
push
das
lds
lret
mov
cmp
inc
xchg
js
fwait
shll
in
dec
add
xchg
pusha
mov
xchg
pop
arpl
ret
or
pop
or
nop
jno
nop
push
sbb
dec
movsb
dec
mov
adc
inc
jge
mov
loope
ss
hlt
jl
push
jge
dec
test
mulb
xchg
pushf
mov
test
adc
pop
inc
in
sbb
lret
push
xor
iret
inc
pop
mov
mov
adc
xor
sbb
mov
jg
ficompl
sbb
stos
pop
mov
mov
xlat
dec
mov
cbtw
test
push
movsb
stos
or
cmp
adc
fisubs
in
mov
psrlq
pop
dec
hlt
addr16
les
pop
sub
std
aad
sarl
out
xor
inc
data16
insl
bound
jae
in
cli
mov
push
int
jb
push
repnz
stos
daa
lcall
mov
sub
sti
xor
mov
outsl
or
outsb
out
sub
mov
xchg
lds
dec
outsl
cmpb
jo
push
and
js
xchg
shlb
cwtl
jle
sbb
aad
mov
inc
cltd
mov
cmp
mov
xor
aas
xor
mov
adc
das
dec
gs
js
faddl
dec
push
sahf
inc
scas
lds
filds
and
clc
scas
xchg
scas
mov
sbb
out
lret
push
jae
jno
test
jle
scas
jae
adc
mov
mov
xchg
xor
sbb
scas
mov
sahf
arpl
jl
mov
ljmp
push
js
xchg
jmp
xchg
std
jge
lods
in
mov
pop
and
bound
xchg
dec
insb
mov
movsl
add
shrl
and
mov
xlat
or
cwtl
pop
jmp
and
repz
mov
dec
pop
inc
inc
or
sub
adc
imul
sbb
mov
out
rolb
int
fld
push
popf
push
push
in
js
lods
xor
mov
les
incl
jb
movsb
jecxz
cli
es
or
test
out
stos
push
das
xor
int
pop
pop
push
fcomip
fidivrl
inc
mov
jbe
adc
jp
push
dec
or
les
out
inc
das
fiaddl
movsb
mov
daa
xchg
test
leave
fcmovnu
cmp
fwait
rorb
xchg
pop
push
jae
int
in
enter
xchg
jge
pop
jmp
xchg
std
sub
push
jns
in
xchg
push
mov
popf
out
dec
cmp
cmp
inc
mov
mov
lahf
mov
inc
sub
sbb
and
cs
push
push
cmp
in
mov
loop
repz
xchg
adc
push
in
imul
mov
sub
or
fnstsw
push
aas
outsb
hlt
jecxz
out
or
mov
cmpb
ret
pop
adc
iret
lods
sahf
xor
cltd
fisubl
push
ds
mov
mov
enter
adc
sti
ds
outsl
hlt
les
sub
ja
mov
dec
mov
sub
test
mov
arpl
xor
or
xchg
push
hlt
mov
jecxz,pn
and
lods
xor
jge
adc
push
jno
dec
inc
pop
stos
mov
shll
pop
test
cltd
add
in
push
subb
gs
mov
xor
jbe
loopne
sub
cmp
jmp
inc
mov
out
outsb
ja
arpl
mov
arpl
dec
add
sti
in
es
out
mov
cwtl
std
fcoml
lods
mov
dec
push
shr
inc
aam
add
aad
dec
jp
dec
ss
mov
icebp
lahf
sbb
xor
mov
aaa
subl
frstor
popa
sbb
cmp
cmpsb
aam
orb
iret
insb
jns
jae
mov
repnz
adc
mov
push
pop
test
and
je
adc
sub
and
in
mov
repnz
cmpsb
insl
inc
popa
inc
dec
shll
repz
pop
mov
jmp
mov
dec
fildll
pop
xlat
sub
jle
sbb
sub
pcmpgtb
mov
push
dec
add
nop
jmp
or
sub
les
in
lahf
mov
lcall
fimuls
popa
in
in
lds
aas
adc
pop
jge
cmp
cmp
stos
mov
push
xchg
lret
sahf
jle
mov
outsb
sub
cmp
push
add
fidivs
setnp
jmp
add
jo
movsb
adc
cli
call
rcrl
in
cmp
stos
scas
cld
test
dec
adc
cld
adc
cld
hlt
iret
mov
push
mov
mov
cmc
and
sbbb
fs
add
ret
mov
sbb
nop
shr
filds
mov
jb
cltd
aaa
mov
adc
int3
xor
daa
dec
sbb
bound
pop
and
pop
cltd
pop
mov
leave
adc
and
mov
mov
xchg
lods
inc
sbb
xchg
cmp
js
loopne
mov
xchg
ljmp
mov
js
fisubl
imul
sbb
sbb
repnz
es
mov
mov
call
or
or
jl
out
addr16
addl
cmc
jle
cmp
addr16
add
jge
mov
jle
movsb
cmc
cmp
and
cwtl
sti
dec
sbb
jns
dec
stc
js
mov
pop
nop
pop
jg
shll
cmp
in
ja
inc
jo
mov
fisttps
call
std
push
mov
fdiv
mov
jge
jge
pop
push
sub
or
mov
push
divb
or
or
scas
mov
lea
xchg
adcl
push
out
aam
pop
add
lods
sub
or
in
xor
popa
mov
mov
and
pop
mov
xor
cmp
sub
pop
adc
sub
add
cmp
mov
dec
loop
fstl
out
adc
dec
mov
cmp
mov
test
or
and
shrl
call
test
jo
mov
jae
cmp
dec
icebp
mov
xchg
shrl
pushf
std
repz
pop
popf
stos
out
repz
outsb
ret
aaa
or
pop
out
in
cltd
jg
jnp
packsswb
in
dec
adc
sub
fsubr
mov
cmpsb
dec
pop
push
rol
test
sub
subb
aas
sub
cmp
neg
mov
cwtl
push
push
fnstcw
fdivs
mov
addr16
nop
jp
mov
lahf
in
xchg
jns
gs
sbb
decl
dec
add
cmp
adc
or
or
je
push
mov
lahf
les
aad
adc
outsb
sub
mov
cld
sub
test
sub
call
jno
sbb
outsl
into
jae
insl
cwtl
popa
ljmp
rcll
sbb
cmpsb
sti
adc
data16
mov
shll
sbbb
pop
push
lds
and
adcl
scas
xchg
mov
add
test
cmc
sub
addr16
lods
sbb
jae
xor
lsl
pop
inc
pusha
cmpsb
xor
inc
xor
and
jae
adc
ret
inc
mov
test
jne
loop
ret
pushf
cmp
pop
add
xchg
jne
idivl
and
lea
cmp
lret
push
mov
inc
xlat
test
out
mov
cmpsl
sub
and
inc
push
ds
hlt
js
adc
dec
xchg
inc
lods
scas
int
js
mov
inc
jmp
outsb
fistpl
push
mov
add
test
outsb
pop
mov
mov
pop
das
clc
jb
sub
dec
bnd
ret
inc
mov
sbbl
lods
xor
sub
dec
shl
push
xor
jl
out
pop
or
loop
pop
or
ja
into
sti
in
pop
std
push
imul
fwait
sbb
test
pop
push
lret
lcall
dec
ljmp
in
test
push
mov
dec
stos
or
test
push
dec
mov
inc
pop
jmp
sub
jle
shl
insb
lret
inc
icebp
push
lods
subb
into
out
add
xlat
jg
mov
loope
sub
push
sub
cmc
mov
lcall
rolb
fdivrs
xor
push
loop
sti
xchg
inc
jl
xchg
fldcw
mov
or
outsb
out
dec
cltd
sbb
xchg
or
popa
and
adc
mov
shll
ficoml
cmp
cmpsb
imulb
jns
cwtl
mov
movsl
bound
dec
adc
push
pop
or
aam
pop
mov
pop
jecxz
dec
push
stc
daa
or
iret
pop
mov
jnp
and
xor
repnz
xor
les
adc
mov
fstpl
mov
adc
dec
xchg
cmp
je
xchg
out
imul
insl
fcmovbe
daa
outsb
push
dec
lret
enter
insb
sub
jmp
scas
lea
fdivl
ss
mov
test
mov
movsl
inc
fidivrl
xor
add
test
imul
cli
adc
ljmp
dec
roll
and
mov
repnz
dec
pop
cli
cs
fsubrl
and
ds
dec
test
add
jno
in
shrl
cmp
push
test
repnz
and
inc
fimull
scas
leave
jno
xor
pushf
insb
loopne
movsb
inc
mov
lret
push
jnp
xchg
jne
out
js
mov
dec
push
mov
mov
pop
out
clc
add
or
fbld
xchg
cmp
mov
mov
imul
test
cmp
test
hlt
fs
popf
sbb
ljmp
test
pop
pusha
cli
int
mov
dec
mov
ja
push
sbb
inc
or
lret
mov
int3
outsl
mov
je
and
aaa
xchg
or
and
fdivl
or
mov
cs
xchg
ljmp
repnz
rorl
mov
aam
rcr
dec
sbb
jle
and
push
xor
xchg
push
in
mov
xchg
adc
leave
inc
cmc
sub
jp
mov
out
repnz
push
sbb
enter
mov
out
or
aad
neg
mov
daa
lcall
mov
jg
into
push
mov
sbbl
xor
outsl
outsl
inc
stos
cmp
bound
jmp
push
out
push
les
push
sub
mov
test
in
or
sub
pop
inc
fwait
sbb
push
inc
mov
xor
jp
bound
stos
fwait
pop
sahf
pop
mov
xor
pop
out
je
adc
xchg
dec
xor
adc
adc
pop
in
jl
je
xor
dec
fstpt
or
sbb
arpl
jg
sbb
xchg
push
lret
mov
sbb
mov
xchg
lret
repnz
jecxz,pt
cmpb
push
adc
nop
movsl
ss
cwtl
ljmp
bound
aad
lea
jecxz
sbb
shlb
xchg
fldt
cmp
cltd
dec
mov
ljmp
pop
shll
sub
les
add
jle
clc
cld
test
repz
jae
adc
gs
push
inc
pop
xchg
shll
lret
sub
imul
data16
jmp
sbb
insb
testb
ret
push
dec
cmp
mov
cmp
inc
in
insl
lods
js
mov
idivb
push
ret
mov
mov
xor
pop
lret
data16
xor
push
inc
and
push
pop
dec
and
fwait
push
loop
xchg
xchg
adc
sbb
popa
and
mov
cmpsl
pop
jecxz
mov
in
and
or
push
xlat
adc
mov
ret
xchg
movsl
fcomp
out
iret
pop
lods
test
imul
xchg
cs
cmpsl
aam
test
mov
sub
test
bound
jns
add
fldt
es
inc
jbe
xor
cmpl
data16
xchg
shlb
push
leave
fs
mov
push
jno
xor
and
pop
insl
jne
aam
mov
movsl
es
cmp
shl
sub
lods
or
xor
test
mov
sbb
and
push
adcb
pop
ss
test
pushl
mov
adc
xor
add
mov
insb
in
add
or
pop
push
cmc
sub
mov
test
xchg
imul
inc
lods
mov
fdivs
lods
mov
shrb
ret
insl
sub
rep
cmp
mov
jb
mov
mov
out
arpl
adc
lds
dec
cmp
fsubrs
or
push
mov
je
mov
push
push
pushl
cmp
and
xchg
cli
dec
mov
mov
push
leave
cmp
mov
and
daa
decl
hlt
xor
outsl
mov
sbb
xchg
lcall
sub
mov
cwtl
fistl
orl
mov
fistpll
aas
push
dec
pop
xor
lods
subl
sbb
icebp
out
scas
cmpb
push
inc
std
mov
filds
adc
pop
add
sbb
aaa
cltd
loope
push
in
imul
mov
xor
std
pop
out
mov
xchg
stc
scas
cmpl
std
rolb
mov
outsl
adc
add
sub
dec
mov
xor
ss
fcomps
push
clc
fldl
add
xchg
stc
int
xchg
and
mov
mov
dec
leave
cmp
cwtl
test
aas
cld
daa
add
mov
daa
in
fnstenv
inc
arpl
jae
inc
leave
inc
mov
outsl
pop
dec
pcmpeqw
icebp
fldl
pop
lret
push
adc
lahf
add
xor
xchg
jbe
fcmovnbe
mov
dec
fcoml
sbb
pop
mov
je
jnp
ljmp
and
mov
loope
test
lcall
xchg
arpl
sbb
mov
cmp
scas
movsb
popa
test
sbbb
movsb
jbe
cmp
loope
jo
movsl
adc
je
push
sub
and
into
mov
push
cmp
pop
or
pop
xor
or
aaa
mov
stos
sub
test
aad
dec
fcompl
popa
lods
je
adc
dec
adc
mov
mov
mov
pop
or
loop
adc
outsb
lock
xor
mov
pop
cmpsl
push
lret
xor
push
push
repz
jb
popf
and
sub
jge
addb
jne
push
cmp
jecxz
or
inc
jno
mov
and
into
call
pop
cmp
mov
dec
out
addr16
xchg
test
movsb
filds
jp
mov
jmp
out
lods
cmpsl
pop
gs
test
mov
jmp
mov
push
pusha
repnz
dec
sub
mov
push
call
fistpll
xchg
jge
jo
or
test
push
mov
inc
sahf
sub
enter
or
xchg
mov
mov
xor
mov
cmpsb
lods
and
scas
pop
pop
das
jmp
ficomps
ds
dec
js
push
aam
mov
adc
and
in
imul
js
xchg
lret
bound
push
out
gs
shl
mov
add
mov
ror
out
in
fucom
xchg
jno
push
gs
dec
inc
mov
arpl
xacquire
jle
ret
leave
push
add
jp
xchg
push
push
push
xor
and
insb
rorb
jge
push
call
aam
or
mov
sub
insl
inc
mov
lret
push
fcomps
test
xor
dec
xchg
lock
jne
mov
mov
popf
not
or
sbb
movsl
rcll
fistl
mov
cs
in
scas
xchg
sti
cli
add
push
mov
ljmp
clc
pop
sub
fcomps
dec
sahf
inc
dec
push
imul
and
adc
dec
xor
lods
xchg
sbb
je
jle
aaa
mov
adc
aas
aas
ss
sahf
push
inc
sbb
dec
mov
fidivs
mov
mov
pop
repz
int
loop
roll
jge
mov
dec
outsl
mov
push
pusha
loope
dec
fstl
xrelease
imul
xor
shlb
jecxz
push
push
rcrb
arpl
inc
lcall
jge
xchg
sbb
push
dec
mov
cld
push
and
push
outsb
iret
movsb
push
imul
cmpsb
mov
scas
mov
sbb
pop
cmp
dec
push
push
xor
ds
lods
pop
ljmp
ds
dec
sub
pop
insb
out
mov
idiv
mov
jg
pop
out
aad
outsl
jnp
cmp
sbb
icebp
fstpl
inc
jle
vmovq
xchg
xorl
jg
cmpsb
sub
add
in
jmp
mov
bound
and
rolb
inc
pop
xchg
rorl
xor
pop
cmp
mov
mov
mov
cmc
lret
xor
popa
mov
out
out
and
push
out
into
sub
pop
aas
imul
mov
out
fnsave
out
dec
cmp
pusha
jge
or
test
xor
pushf
aad
jno
das
mov
fisubrs
in
iret
mov
fucom
cld
xchg
inc
mov
sarl
jbe
arpl
lods
pop
xor
mov
jae
xor
jno
cmpsb
fidivs
dec
sbb
xchg
cmp
xlat
insb
xor
das
insb
fiaddl
push
lds
dec
jbe
cmp
xchg
sahf
xor
cs
xchg
out
adc
enter
lahf
sub
int3
inc
dec
mov
mov
ficoml
ja
jecxz,pn
mov
fdivrs
mov
or
push
out
call
pop
test
stc
sub
xchg
outsb
xchg
stos
pop
jnp
sub
in
sub
xchg
xor
out
shl
and
mov
pop
filds
push
mov
sub
rcrl
mov
inc
lret
stos
pusha
push
das
scas
mov
inc
sbb
cmp
jns
adc
stos
push
pop
addr16
cwtl
add
mov
jg
lods
add
push
popf
push
scas
jae
pop
sahf
imul
clc
scas
mov
insb
sbb
inc
pop
into
lahf
and
testl
out
push
std
scas
inc
fdivrs
cmpsb
scas
mov
movsb
loop
mov
fimull
loopne
test
inc
aam
cmc
aam
cmc
std
xor
insl
mov
or
int3
xor
add
pop
out
add
leave
das
mov
repz
push
push
mov
sbb
ret
call
lods
lahf
dec
xlat
jne
mov
sahf
bound
mov
lods
sti
std
pop
dec
fld
rorb
xor
movsl
push
mov
out
sbb
fucomp
ss
shll
xor
dec
push
clc
inc
insl
jl
and
popf
rcrl
mov
scas
pop
fwait
mov
jmp
arpl
mov
jns
add
enter
inc
fadds
cmpsl
adc
gs
push
dec
mov
xchg
pop
loopne
add
cmpsb
mov
mov
jno
in
adc
add
rcll
daa
pop
sbb
pop
mov
dec
xor
sti
sbb
ljmp
push
mov
mov
scas
pushf
fisttpl
mov
or
loop
pop
nop
gs
pop
addl
js
sub
jno
fistps
in
mov
push
in
outsb
loop
mov
xor
pop
sbb
sub
fidivrl
inc
popf
jge
or
push
sub
fcoms
mov
pop
mov
cmp
pop
xor
push
add
xlat
jnp
out
insl
arpl
pop
dec
dec
ljmp
mov
jmp
adc
andb
movsb
fmull
jp
call
push
es
aas
in
mov
subl
push
push
popf
pop
repz
aad
pop
hlt
add
enter
adc
rcrl
pop
mov
iret
push
aaa
dec
lock
jns
dec
test
orb
nop
into
cmc
inc
leave
out
fstl
sub
leave
scas
out
cmp
mov
aad
dec
inc
jno
dec
add
scas
test
mov
xor
cmp
ds
push
ss
mov
add
mov
push
loopne
push
xchg
sub
addr16
mov
push
sar
test
and
loopne
mov
cvtpi2ps
mov
pop
imul
push
aaa
popa
inc
fistpll
cs
call
rcl
mov
push
pop
je
or
jae
rcrb
ss
imul
sbbb
dec
rorl
adc
test
insb
sbb
clc
lds
and
loope
test
stos
pop
insb
add
jns
push
insl
inc
out
adc
hlt
repnz
jl
mov
inc
xchg
movsl
inc
aas
lea
pop
daa
push
mov
leave
mov
push
and
div
rcrl
jg
test
sbb
int
ds
test
add
sahf
lret
cmp
dec
push
adc
jno
xchg
xor
lods
int
inc
leave
dec
lcall
ljmp
add
movsb
movsl
push
jae
dec
std
xchg
push
push
stos
dec
cmpsl
adc
pop
pop
add
das
adc
sub
or
xchg
lret
gs
xchg
fs
push
sbb
sub
xor
pop
in
or
cmp
jmp
push
adc
xchg
inc
pop
adc
lods
xchg
insl
int
or
in
dec
vunpcklps
fs
fucomp
stos
scas
pop
inc
fisttps
jo
dec
inc
int3
cld
xchg
xchg
cld
jns
das
fldcw
mov
xchg
sub
mov
sub
cltd
bound
pop
or
aas
test
mov
mov
cli
adc
imul
je
mov
jnp
testl
pop
sub
mov
out
aaa
cmp
pushf
add
pusha
icebp
hlt
add
int3
ja
mov
sbb
mov
cmp
ret
cmpsl
jae
loope
dec
xor
lea
jg
rcrb
pop
icebp
rclb
rclb
lods
test
repnz
push
popa
push
pop
mov
addb
cmovnp
jecxz
pop
loopne
push
adc
fldcw
cmpsl
rclb
inc
and
jne
and
pop
ret
out
cmpsl
int3
pop
xor
pop
cmpsl
sub
jno,pt
bound
lcall
leave
or
sar
outsl
xor
pop
cmp
add
pop
and
std
fwait
cwtl
push
dec
xor
sub
sbb
seta
pop
add
sub
adc
jne
pusha
pop
cltd
sub
inc
and
push
scas
xlat
data16
in
aad
fwait
lods
push
xchg
ja
dec
addr16
hlt
add
popf
pop
fcompl
sub
fnstsw
imul
sbb
cmp
movsb
xchg
sti
mov
jae
ja
outsb
cli
push
sbb
fcomps
jns
mov
out
shrb
js
stos
icebp
cld
add
dec
mov
or
push
push
test
nop
sub
push
mov
push
fbstp
mov
xlat
dec
dec
cmpsb
sub
push
mov
js
int3
sbb
mov
sbb
xchg
pop
xchg
repz
dec
mov
scas
stos
rorl
xchg
roll
addr16
lock
adc
fisttpl
movsb
jne
cltd
outsb
and
mov
das
or
mov
sbb
cmc
mov
mov
sbb
adc
loope
xlat
xor
in
test
loope
fwait
add
xor
pop
mov
inc
call
jno
adc
push
test
mov
gs
popa
nop
out
inc
xor
jge
int
xor
inc
xchg
sub
scas
lock
out
pop
cmp
cmp
lds
jge
xchg
sub
jmp
xchg
jge
daa
cmpsb
ret
cmp
push
cs
js
ljmp
scas
cli
adcb
push
or
xor
outsb
inc
mov
fistps
cld
push
mov
jecxz
xor
je
dec
leave
fisubl
or
xor
dec
fisubs
push
push
js
xchg
arpl
popf
lods
shlb
cli
inc
cmp
hlt
rclb
xchg
xchg
mov
mov
add
sbb
xor
pop
dec
mov
popf
popf
jne
inc
sbb
inc
adc
arpl
push
jmp
pop
ret
sbb
xor
mov
daa
jnp
data16
and
in
pop
or
pop
mov
frstpm(287
icebp
mov
cmp
push
dec
adc
sahf
je
call
push
into
sbb
mov
aam
mov
mov
sarb
stos
aas
jns
fisubs
sub
cmpsb
mov
push
fwait
or
adcl
pushf
cltd
mov
pop
int3
mov
cmp
add
sbb
lret
add
std
xchg
push
ss
mov
test
add
fisubrs
mov
sbb
jnp
jle
cltd
std
mov
in
imul
popa
push
pop
sub
jnp
mov
jp
and
test
popa
aad
pop
ret
inc
addl
test
clc
stc
sub
bound
lods
jb
outsb
jae
jo
mov
aaa
mov
insb
mov
sub
sbb
imul
ds
hlt
mov
xlat
ja
das
mov
dec
mov
rol
pop
adc
sbb
mov
cld
loopne
test
cmp
idiv
push
xchg
pop
push
jmp
mov
sub
add
in
fcom
cmp
inc
ficompl
pop
lea
cmp
push
mov
mov
addb
xor
clc
inc
xor
cmp
mov
push
push
sti
xchg
mov
inc
adc
lret
jp
and
sub
and
add
mov
scas
test
out
lock
fstpt
mov
in
daa
in
sub
fcomp
cmp
push
xchg
filds
fsubrl
iret
push
cs
mov
xchg
adc
mov
dec
hlt
loop
xor
mov
andl
and
pop
es
outsb
adc
cmp
mov
cmp
cmp
clc
sbb
in
mov
das
rcl
test
sub
jbe
jbe
lret
leave
add
test
inc
data16
das
push
sbb
out
das
push
insl
xchg
lret
ret
loop
push
hlt
mov
mov
adc
cmp
fstpl
add
mov
data16
mov
cmc
sbb
pop
repz
jmp
out
ror
cli
xchg
aam
lds
flds
dec
out
push
mov
xchg
sub
sbb
test
es
fstpl
mov
add
inc
imulb
mov
mov
dec
pop
or
and
data16
jo
mov
popf
jmp
push
mov
inc
inc
jle
stc
imul
and
cmpsb
sub
add
dec
pop
add
push
inc
pop
mov
mov
mov
mov
sub
sub
fimuls
adc
mov
andl
flds
pop
sbbb
icebp
pop
dec
lds
cmpb
and
outsl
push
pushl
repnz
imul
imul
adc
cmp
jecxz,pt
inc
xchg
mov
mov
xlat
sub
and
jb
cmpsl
dec
mov
paddusb
nop
jp
mov
sahf
out
xor
fnstsw
sahf
jl,pt
lret
pop
ja
loope
mov
mov
pop
scas
in
mov
popa
sbb
or
ljmp
les
inc
fists
dec
pop
mov
lret
daa
lret
jae
sub
lods
mov
inc
jns
scas
mov
or
sub
fiadds
enter
cmc
inc
test
mov
in
mov
fidivrs
rcll
unpckhps
in
inc
mov
scas
or
lods
push
jns
repz
adc
push
lods
in
test
cmpps
int3
and
scas
lds
or
bound
jnp
jbe
insb
sbb
fadds
push
cmpsl
xchg
add
push
mov
lods
xchg
gs
mov
jge
popf
push
lret
push
sbb
xchg
mov
sbb
ds
xor
and
adc
mov
xchg
std
mov
addr16
xchg
fwait
xor
in
pusha
inc
lds
movb
xchg
into
jge
jo
ss
jnp
cmp
cmp
cld
idivl
out
roll
mov
mov
das
jbe
stos
jno
and
push
cs
orl
test
addr16
mov
das
mov
andl
in
das
fcoms
adc
out
dec
xchg
mov
jp
fldl
mov
gs
push
pop
sahf
in
idivl
push
int3
dec
push
inc
std
dec
xchg
mov
and
loop
outsb
and
sbb
jae
mov
in
and
fadds
jl
orl
adc
dec
sarb
ret
por
lock
shl
shr
lods
push
xchg
dec
pop
and
sub
mov
push
cmpsb
or
das
into
xor
ja
roll
jae
test
mov
enter
push
imull
push
sub
xor
mov
imul
popf
dec
pop
data16
cltd
jbe
mov
and
scas
cmpsl
push
xchg
rcrl
or
fdivl
dec
push
cs
pop
fmuls
push
pop
cmp
sbb
sub
rolb
imul
movsl
jae
stos
push
jmp
lods
mov
mov
jle
push
and
jl
push
popf
aas
pop
mov
hlt
jle
xor
mov
add
fs
cmp
out
sub
fdivs
sbb
inc
imul
jle
mov
push
and
mov
cld
mov
in
ljmp
mov
movsb
js
sbb
fwait
cli
std
inc
stos
push
bound
imul
mov
adc
xchg
fcompl
movsb
repnz
mov
jno
mov
mov
xchg
sub
out
cmc
repnz
mov
jbe
dec
mov
add
add
jne
fs
mov
in
xchg
adc
xchg
jge
das
pop
dec
enter
adc
andb
sahf
push
shll
fsts
xorl
mov
xchg
cmp
stos
out
jne
mov
pop
mov
arpl
jl
xor
out
lret
and
std
fcmovbe
lcall
stos
arpl
sub
mov
xchg
inc
add
pop
insl
iret
movsl
jnp
popf
loope
add
push
das
xchg
mov
enter
xor
roll
push
mov
jo
repnz
movsl
dec
imul
jnp
lea
mov
imul
imul
rcll
iret
or
push
mov
test
push
out
or
sahf
add
out
push
fnsave
pop
or
pop
or
sbb
sbb
sbb
int3
ficomps
mov
out
rclb
test
inc
xor
incl
mov
pop
xor
inc
add
adcb
xchg
lods
inc
jmp
push
ss
inc
cltd
pusha
jmp
mov
xor
in
push
call
and
lret
sub
inc
clc
cmpb
rorb
pop
sbb
sbb
or
xchg
in
fwait
xchg
and
jg
xor
xor
dec
cli
push
sbb
inc
js
decb
pop
jns
bound
fnstenv
clc
cli
in
loop
pop
xchg
push
gs
lea
sub
fcomip
sbb
jle
fs
shr
mov
push
jne
adc
push
jno
mov
push
orl
jg,pn
adc
aaa
mov
lret
dec
push
pop
add
out
pushf
inc
or
jmp
ss
call
pop
repnz
mov
jb
ja
adc
push
rcrb
lea
push
pop
adc
or
lock
mov
clc
or
jbe
ror
sub
jmp
jmp
je
subl
loopne
and
iret
pop
mov
dec
mulb
imul
jbe
mov
and
andl
or
cmp
pushf
pop
ds
das
push
jecxz
int3
fadds
dec
mov
sub
xchg
aas
cs
sub
les
scas
mov
mov
scas
pop
mov
push
pop
in
fdivp
push
aaa
aam
test
xlat
imul
add
std
out
ds
add
pusha
mov
sub
into
xchg
mov
push
adc
outsb
jg
add
cmc
and
jge
push
pop
cltd
adcl
lods
mov
test
hlt
pop
daa
sbb
push
repz
push
ss
pop
sbb
xor
push
scas
and
jnp
inc
aam
lret
insl
pop
test
es
nop
pusha
sarl
ss
shll
lock
es
fsubrs
repz
add
hlt
pop
pop
ljmp
sub
stc
mov
jp
pop
stos
pushf
ffree
sbb
xchg
xor
mov
in
jmp
xor
add
cmp
nop
lahf
add
in
negb
pop
sbb
icebp
je
jne
stos
stc
or
xchg
push
ja
call
iret
arpl
xor
push
mov
pop
and
xchg
fwait
cs
in
aad
mov
cmp
fucomp
je
dec
int
out
roll
mov
fimuls
push
popf
mov
addb
test
icebp
aaa
mov
jns
cld
and
mov
xlat
cmc
call
pop
sub
inc
fstps
cmp
jle
dec
or
sub
jg
dec
mov
pop
data16
mov
mov
imul
loopne
jl
js
push
adc
dec
rorl
adc
cmp
pop
mov
push
pop
push
shr
pop
jbe
and
and
dec
mov
adc
js
push
sbb
pop
lahf
pop
shl
shrb
mov
xor
sbb
cwtl
xor
loopne
pop
mov
sbb
fwait
mov
cmpl
inc
mov
pop
shr
push
in
dec
adc
sub
xor
push
call
push
sbb
dec
mov
and
je
lods
mov
in
scas
adc
cwtl
test
adc
mov
out
sbb
cltd
loope
js
mov
mov
or
mov
sub
popf
cmp
ret
pop
sub
sarb
hlt
inc
mov
mov
mov
insb
inc
fbld
cmpsl
jb
mov
lods
add
fcoms
mov
pushf
push
loope
xor
lret
fwait
cmp
or
call
pop
repz
inc
mov
push
cmp
pop
or
jmp
mov
sub
inc
cmp
cmp
sub
xorb
rcl
push
pop
imul
outsb
jp
sbb
mov
std
mov
shll
push
sub
fstpl
je
push
pop
pop
mov
xchg
cmp
shr
shlb
push
mov
orl
les
popa
loopne
sbb
mov
lret
lahf
and
pop
pop
daa
inc
jae
sbb
jmp
movsl
cld
xor
or
pop
in
mov
sbb
mov
in
mov
mov
xchg
pop
cmpl
repnz
shrl
mov
loopne
sub
les
cmp
or
scas
imul
xchg
dec
jno
mov
and
insl
bound
fcom
repnz
and
test
xlat
jae
adc
push
inc
sti
and
or
mov
popf
mov
fidivl
jmp
sub
pop
leave
scas
into
mov
pop
adc
and
jo
add
imul
add
adc
loope
push
or
jno
sbb
mov
cmp
mov
adc
jg
int3
xor
mov
inc
shrl
xor
enter
lods
lods
bndldx
inc
cmpsb
inc
xor
jmp
movsb
int3
cltd
imul
lock
xchg
xchg
sbb
fnstenv
push
jnp
pop
icebp
mov
lcall
jl
les
mov
jno
lret
jbe
rclb
mov
loopne
mov
cs
fadds
ds
sub
pop
cmpsl
and
stc
jns
add
dec
jecxz
dec
mov
leave
out
jmp
push
cltd
xor
into
shrb
pop
dec
jmp
pop
or
mov
scas
shll
adc
and
lock
cltd
scas
inc
arpl
and
sub
cmp
add
pop
push
xchg
pop
sub
fmull
add
mov
movsb
das
dec
or
shr
lcall
add
sbb
jg
push
and
push
and
outsb
cmpsl
fiadds
cmp
mov
inc
dec
fs
fwait
jl
ss
aas
and
jns
push
int3
xchg
fisubl
push
pop
ljmp
jnp
insb
and
lds
sbb
sub
fucomp
cltd
lcall
jle
sub
out
mov
cmpsb
mov
aad
popf
aad
leave
cmp
iret
or
jecxz
xchg
mov
inc
lea
ds
jecxz
xchg
movmskps
imul
imul
lcall
pshufw
mov
cs
test
mov
mov
ds
sbb
arpl
inc
jl
jmp
sub
scas
jmp
in
xchg
pop
std
lret
or
push
loopne
dec
pop
mov
imul
or
jne
rcrl
nop
jb
dec
out
mov
sbb
pop
jmp
into
or
imul
int3
out
mov
les
mov
into
dec
roll
pushf
aam
cmc
jne
fucom
xchg
test
xchg
mov
stos
jp
dec
stos
out
or
and
insb
add
jmp
pop
and
push
cmpsl
pop
sub
scas
outsb
dec
mov
out
lret
push
je
mov
inc
out
inc
or
xor
inc
test
jecxz
add
sbb
rolb
adc
jle
xor
xor
aad
rorb
adc
dec
inc
xor
cmp
fstpt
inc
icebp
aas
sbb
test
in
push
mov
mov
outsl
fsubrl
pop
jns
fsub
rclb
sbb
mov
inc
and
cmp
and
pop
pop
sub
cmpsl
xchg
and
xor
es
cmpsb
insb
fs
in
add
daa
mov
addb
cwtl
fisubrl
inc
hlt
pop
dec
paddq
mov
es
and
push
out
xchg
stc
or
scas
cmp
cmp
dec
jb
sub
insb
hlt
arpl
pop
sbb
cmp
add
inc
xchg
in
mov
pop
sub
jg
inc
cmpsb
mov
je
cvtps2pd
scas
or
sub
popf
orl
cwtl
ret
pop
jae
mov
dec
push
lds
or
int3
and
mov
mov
mov
aaa
push
cli
add
add
mov
pop
mov
popf
pop
subb
pop
loope
jmp
loopne
dec
push
sbb
es
fsubl
sbb
pop
out
je
andl
or
push
and
xchg
cmp
cmp
arpl
push
mov
test
sub
mov
outsl
fmull
sahf
mov
fldenv
int
mov
sahf
aas
insl
js
iret
not
dec
subl
jmp
push
mov
sbb
pop
daa
cmp
cmp
xlat
mov
in
mov
cltd
dec
xchg
dec
test
shl
mov
loope
dec
push
scas
ds
popa
xor
leave
mulb
push
add
push
idivl
fwait
or
push
sub
je
jno
loope
sub
pop
mov
sbb
test
mov
cmp
std
adc
in
dec
mov
in
lret
jae
mov
push
int
push
lret
mov
mov
in
iret
mov
es
std
cmp
jne
cli
xchg
cmp
dec
loope
ljmp
jno
push
orb
cmpsb
jl
adc
sbb
add
sti
xchg
rcrl
pop
cmpsb
xor
ss
stos
and
lcall
dec
sbb
out
jbe
jecxz
xor
icebp
arpl
pop
inc
mov
jne
cwtl
xchg
adc
jbe
or
popl
lds
pop
cmp
sbb
push
popa
sbb
fsubs
sub
mov
fwait
add
add
jecxz
mov
sbb
push
and
lock
or
sub
jae
adc
shll
cmp
jge
enter
or
aam
into
lods
cltd
push
sub
jb
add
fwait
dec
cltd
push
xor
pop
test
roll
fcmovne
inc
inc
inc
pop
sub
nop
or
xchg
cmp
arpl
addl
cli
push
call
sarb
add
sbb
movb
insl
cs
cmp
loop
out
jne
icebp
outsl
pop
add
clc
insl
push
push
ffree
pop
test
adc
jne
insb
sahf
sub
rcrl
sarl
mov
outsb
repz
gs
xor
ljmp
mov
pop
jb
stos
dec
pushf
fxam
sub
test
mov
and
daa
pop
mov
ret
arpl
in
lcall
cmp
xchg
cmp
cmp
pop
dec
mulb
xor
mov
loopne
clc
mov
pop
push
jno
pop
dec
pop
sub
mov
xchg
or
cmp
xchg
xchg
aad
xor
sub
cld
sbb
mov
inc
xchg
cmp
fwait
push
cmp
mov
icebp
mov
es
cmp
ja
mov
addr16
call
mov
dec
or
fcos
stos
gs
inc
aaa
mov
fstpt
in
and
push
and
add
fnsave
push
fsubl
jb
mov
or
push
cmpsl
loope
cmp
jmp
pop
dec
mov
push
test
jns
inc
cmp
mov
fsubrl
adc
hlt
movsb
out
movsb
mov
std
nop
xlat
fwait
and
out
jmp
cmp
test
xor
cs
xchg
lea
in
jmp
mov
inc
leave
sahf
and
mov
jb
je
push
leave
shld
push
cmp
jl
and
cmc
xchg
jge
xor
cmp
aaa
xchg
mov
inc
mov
push
mov
push
xor
push
pushf
clc
lahf
dec
adc
ds
pop
inc
cmpsb
aam
fadd
aad
push
add
insl
pushf
dec
test
arpl
inc
scas
sub
jle
cmp
test
lcall
std
xor
inc
xchg
add
mov
das
jo
jae
ficompl
mov
lea
dec
dec
dec
repz
push
mov
jbe
into
jmp
jmp
pop
test
push
ds
or
fwait
shlb
scas
shrl
inc
jb
repnz
je
mov
cmc
adc
mov
or
xor
and
xor
into
test
and
cmp
arpl
mov
gs
ja
bound
jge
or
xchg
mov
dec
pop
jp
mov
inc
clc
sbb
inc
test
xchg
jno
ss
shlb
ret
mov
imul
ficompl
dec
jae
adc
add
push
cmp
jno
idiv
sub
and
ljmp
add
mov
cmp
and
adc
daa
js
int
xchg
rcrb
rcrb
repz
cld
pop
jno
stos
rclb
dec
out
pop
scas
and
lods
jns
add
pop
ja
mov
push
dec
loope
xlat
lods
push
mov
mov
cli
sahf
or
inc
cmp
out
push
hlt
mov
inc
pop
pusha
out
sbb
pop
fadds
pop
mov
pop
bound
mov
xor
repz
xor
jg
loop
sub
xchg
out
inc
ljmp
stos
lods
mov
mov
test
mov
push
pop
imul
xor
movsb
pop
jo
pop
or
jl
xchg
repnz
rcrl
pusha
sub
testl
jecxz
in
fsub
hlt
and
flds
mov
xor
pop
or
mov
pop
clc
lahf
mov
sti
cs
pop
pop
das
jmp
leave
pop
push
cmc
in
orb
jle
and
sbb
adc
mov
in
ja
hlt
inc
and
or
inc
ss
xchg
push
xchg
std
mov
in
fstl
movsl
pop
fwait
cmp
mov
xchg
mov
shr
and
lods
rclb
jae
pop
jno
jo
sbb
push
std
inc
pop
mov
mov
dec
popa
stc
out
dec
iret
js
xor
xor
outsb
data16
cmp
ffreep
in
in
movsl
mov
inc
imul
inc
pop
imul
adc
push
xchg
out
xchg
daa
push
shrb
add
cmp
idivb
aas
mov
pop
sub
std
test
data16
into
rclb
stos
dec
mov
fsubl
cli
js
sbb
push
mov
ljmp
lea
and
mov
and
cmp
jns
addl
mov
cltd
roll
cli
jns
cld
mov
out
jmp
push
cld
pop
test
or
fdivs
lret
lcall
mov
in
sti
popf
fidivs
nop
ss
imul
loope
mov
in
mov
pop
inc
push
mov
arpl
cmp
or
jbe
push
lahf
sbb
sbb
pop
jo
shlb
mov
mov
out
xlat
in
in
mov
divl
fsubs
xor
popa
adc
push
pop
adc
into
cmp
ret
push
xor
dec
test
xor
xlat
testb
cmp
gs
imulb
ret
mov
fsubp
leave
lods
in
stos
pop
jo
cmp
mov
jns
adcl
jmp
xchg
in
aaa
clc
xor
mov
loope
push
jb
int
cmp
pop
ret
scas
insl
sbb
cmp
inc
xor
sub
test
dec
stos
ljmp
insb
xchg
lea
fistpll
incb
aaa
pop
movsb
ljmp
les
push
rcrl
nop
clc
out
jnp
cmp
push
jne
add
push
push
insb
inc
mov
pop
jmp
xchg
or
xchg
sar
leave
and
jnp
sarb
aaa
add
movsb
mov
ret
add
push
out
inc
insl
jno
mov
cwtl
into
xor
sbb
push
or
shlb
pusha
push
in
xor
push
pop
sti
pop
sbb
repnz
sub
push
jmp
mov
mov
in
mov
daa
sub
adc
ret
or
jle
rcrb
das
jmp
test
inc
jns
aas
jb
mov
cli
fmuls
xor
adc
out
jmp
or
jge
inc
mov
mov
sub
or
lret
mov
lahf
sub
ja
cmc
out
dec
imul
loope
or
inc
stos
sbb
xchg
arpl
in
jns
subb
add
fstpl
mov
test
fbstp
insl
push
aaa
cmp
incb
jnp
add
mov
sbb
bnd
jle
sub
mov
imul
pushf
or
mov
into
lahf
sub
cmp
jbe
data16
cmp
fwait
es
cli
inc
pop
notb
xchg
xchg
icebp
repz
push
cmp
call
xchg
sub
lds
lret
insl
cmc
pushf
bound
push
stos
mov
sbb
xchg
mov
inc
jge
xor
push
out
out
in
scas
and
je
fbstp
push
lock
mov
inc
f2xm1
scas
jae
cwtl
push
pushf
cmpsl
lahf
mov
jo
mov
inc
faddp
sti
ja
sbbl
testb
dec
leave
repnz
cs
cltd
push
inc
cltd
fnstsw
stc
cmp
cmp
loopne
or
loopne
push
fcoms
outsl
insl
test
hlt
mov
scas
xlat
mov
pop
dec
mov
mov
or
arpl
push
fcomps
scas
sub
push
insb
inc
mov
setae
add
or
pop
mov
out
and
or
jno
pop
adc
dec
repnz
clc
jecxz
cltd
cltd
inc
push
mov
xchg
add
sbb
and
inc
pop
int3
push
fstpt
add
int3
mov
push
jp
lahf
inc
scas
xor
xchg
add
test
cld
outsb
cld
push
sbb
rclb
pusha
xchg
pusha
or
sub
pop
pop
cwtl
xor
mov
dec
int
lret
movsb
xor
cmp
jbe
and
adc
jl
sarl
fsts
movsl
clc
add
or
mov
xchg
xchg
bound
ja
xor
jns
sbb
push
jns
xor
fnstcw
repz
aas
cmpl
sbb
push
mov
lret
stos
je
cmp
pop
mov
out
xchg
pop
lds
push
js
add
cmp
lds
subl
add
mov
inc
shlb
xor
mov
sub
pusha
imul
pop
adc
mov
addb
repnz
je
sahf
mov
mov
jns
repnz
jmp
mov
test
jmp
psrlq
sub
dec
mov
std
in
into
popa
xchg
xor
mov
arpl
int3
pop
mov
lret
pop
mov
cwtl
repz
and
cli
xor
sbb
xor
mov
inc
fs
leave
aad
in
loop
loop
andl
dec
mov
and
in
or
push
or
sahf
jg
and
add
mov
fmull
and
lcall
inc
inc
mov
test
cmp
orl
arpl
and
cs
insb
testl
mov
cmp
add
iret
mov
lea
push
ret
cmp
les
loop
push
pop
mov
pop
jg
nop
lds
shufps
mov
jb
inc
movsl
sbb
pop
mov
sub
adc
or
and
mov
lock
mov
and
sbb
xchg
in
test
pop
das
xor
xchg
les
dec
ss
leave
icebp
xlat
es
inc
adc
dec
fcmovnbe
fadd
add
enter
pop
pop
fcomi
inc
lret
xchg
jno
xor
mov
cmpsb
subb
mov
mov
mov
subb
xchg
or
mov
ret
test
xor
aaa
into
rorl
dec
and
push
dec
aaa
aas
fwait
test
pop
push
adc
adcl
daa
sbb
rcl
mov
dec
jae
push
sarl
cmp
in
push
loope
sbb
andb
jb
xchg
aas
dec
stc
test
test
mov
push
int3
dec
addr16
cmpsb
out
scas
mov
shr
int
mov
xlat
xchg
xor
mov
xchg
scas
jne
mov
adc
iret
inc
mov
adc
jl
faddl
and
xchg
negl
fisubs
cli
lahf
sti
fsub
mov
sbb
outsb
outsl
or
pop
or
inc
das
and
and
rcrl
aam
out
mov
sub
adc
lock
jle
cmc
or
daa
xchg
inc
mov
mov
push
jb
std
dec
push
or
ja
pop
mov
addr16
add
mov
xchg
lds
loope
push
push
push
mov
gs
leave
pop
sbbl
jl
sbb
lret
or
xchg
test
je
mov
roll
sarl
or
jg
in
push
xchg
inc
scas
jmp
lret
cmp
rcrb
xchg
jmp
push
xorb
lcall
mov
jae
fwait
cmpsb
sbb
inc
stos
cwtl
push
mov
mov
mov
mov
adc
fbld
xor
arpl
xchg
and
je
dec
repz
dec
jne
xor
lret
dec
or
daa
sub
mov
leave
shrb
inc
loope
popa
into
mov
incl
add
and
shl
stos
xchg
and
mov
dec
shr
insb
xlat
add
pop
push
inc
xor
imul
jo
pop
repz
scas
punpckhbw
xchg
sahf
sarb
jecxz
fists
fidivrl
movl
orl
and
in
mov
incb
jmp
add
sub
mov
pop
data16
mov
jnp
stos
jae
and
and
repnz
stc
xor
jp
mov
adc
fsubr
inc
cltd
add
inc
pushf
jg
popa
xchg
hlt
push
testb
es
dec
sub
test
js
push
xchg
mov
fsts
movsb
jp
out
and
or
jno
jecxz
cmp
jb
xor
clc
sahf
inc
jecxz
rcl
outsl
jbe
inc
or
repz
ja
push
fs
inc
jnp
dec
add
popa
add
mov
test
pop
mulb
into
ljmp
inc
lods
mov
aas
jns
dec
push
sbb
movsl
mov
cmp
test
fdivr
xchg
ficoms
adc
clc
bound
mov
js
pop
pop
adc
cmp
bound
es
lahf
mov
jns
cld
sub
push
test
cmpsb
sub
gs
mov
call
inc
arpl
add
mov
add
jbe
repz
jle
sbb
sub
add
scas
stos
jno
add
out
inc
cwtl
and
mov
popf
stc
popa
test
dec
lods
inc
adc
mov
sbb
pop
fs
xchg
cwtl
fisttps
add
and
and
test
dec
mov
mov
mov
jb
mov
sub
iret
mov
push
pop
in
icebp
cmpsb
add
push
inc
jb
jl
jnp
and
ret
data16
push
jno
cwtl
loopne
imul
xor
add
xlat
fisubrs
lods
popa
sub
and
cmpsb
mov
xchg
cltd
cmc
jecxz
lret
push
cmp
dec
rcl
in
xchg
pop
icebp
dec
xchg
or
nop
adcl
lahf
movsl
mov
out
jecxz
push
cmp
repz
fsubrs
adc
jo
cmp
inc
inc
pop
jns
jp
or
push
ja
or
jmp
or
repnz
jae
push
mov
inc
mov
jp
dec
shrb
cmp
test
scas
rcll
rcr
inc
sti
int3
or
outsb
mov
mov
les
sbb
ja
rcll
ret
fsubrl
mov
and
xchg
sbb
fisubl
jae
adc
arpl
jmp
daa
and
lret
and
inc
cli
dec
mov
das
mov
sbb
add
jecxz
iret
cwtl
cmp
dec
mov
pop
out
bound
cmp
xor
mov
dec
leave
gs
mov
pop
pusha
or
movsb
scas
or
daa
int3
out
push
mov
stos
into
pusha
jo
push
cmp
xchg
out
push
jno
repz
out
push
mov
xchg
and
pushf
mov
pop
inc
idivb
lods
call
in
sbb
pop
adc
test
outsl
xor
call
mov
sub
push
out
cli
add
data16
jns
push
adc
popf
int3
push
push
stc
pop
loop
in
sub
and
das
fistps
in
jg
push
or
sub
movsl
insb
daa
cmpsl
in
add
jmp
sub
orl
loop
imul
pop
mov
imul
push
mov
jge
or
std
incb
or
lret
sub
frstor
and
cmp
xchg
fwait
xorl
stc
ds
jmp
cmpl
pushf
js
xor
sbb
imul
inc
cmc
pusha
cmpl
push
outsb
inc
jmp
in
pop
sub
cwtl
cmpb
out
xor
sub
enter
ss
dec
repnz
ljmp
sbb
ds
cmc
daa
ljmp
pop
lods
mov
xchg
jecxz
scas
popa
adc
xor
xchg
leave
sub
mov
jmp
xor
mov
push
in
add
and
js
or
ret
xchg
fbstp
push
or
jp
leave
test
or
stc
out
ret
jo
test
adc
je
jecxz
arpl
int
mov
sub
inc
xchg
jo
cmp
and
cmp
int3
les
and
pop
fidivrl
jb
ret
aad
lcall
into
imul
pop
sbb
dec
or
sbb
popf
or
dec
or
adc
mov
mov
adc
push
adc
dec
popf
mov
lods
lret
dec
lds
mov
add
lods
mov
xchg
add
in
mov
ss
xchg
iret
add
in
testl
cmpsl
jg
and
ds
cs
aaa
push
push
setp
and
pop
mov
mov
lea
mov
sub
add
jmp
inc
cwtl
jnp
bound
mov
repz
ds
loopne
out
imul
cltd
jae
bound
pop
mov
adc
cwtl
push
push
data16
lahf
shll
in
mov
sbb
das
mov
arpl
clc
or
push
je
jl
scas
jl
adc
daa
xchg
in
adc
push
fs
imul
xlat
adc
bound
insb
adc
xchg
and
mov
pop
push
and
pop
xor
int3
mov
pop
mov
cmp
sbb
dec
and
mov
out
add
mov
adc
insb
mov
std
shlb
push
addb
imul
imul
fstpt
jb
mov
push
arpl
xchg
rorb
xor
or
xchg
mov
pop
adc
inc
mov
sub
scas
push
repz
mov
cmp
pushf
pop
xchg
adc
call
enter
mov
scas
sbbb
fldcw
xlat
pop
dec
adc
push
in
adc
mov
add
int
mov
pushf
repz
pop
data16
pop
mov
sub
aam
push
add
sub
fimull
ja
bound
out
or
cmovge
adc
js
sbb
mov
pop
xchg
inc
roll
sub
or
aaa
aas
int3
addr16
mov
mov
fs
jl
shl
push
lret
jae
call
or
jns
bound
out
in
push
ret
lret
or
mov
push
rol
cltd
lahf
shr
lret
lods
arpl
mov
push
aad
pop
dec
test
out
xchg
sar
pop
dec
adc
into
call
fmuls
mov
dec
xor
inc
push
xchg
cmp
icebp
notrack
sbb
movsl
add
mov
push
push
xchg
mov
repz
and
push
pop
dec
mov
cmp
mov
sbb
xor
fs
fisubrs
aaa
pop
mov
inc
adc
pop
lcall
jno
fcmovu
icebp
fwait
es
jmp
mov
sbb
cli
pop
jmp
movsl
xchg
sub
aaa
xchg
mov
mov
test
jnp
xchg
inc
out
or
mov
xor
sbb
stos
popa
sbb
lods
xor
ja
int3
adc
std
mov
js
daa
add
push
and
xor
mov
xchg
push
xor
loopne
cmpl
push
pop
mov
xor
ds
xor
scas
xchg
pop
mov
xor
lock
repz
mov
fisubl
out
mov
and
push
aaa
das
mov
push
fiadds
jb
push
jno,pn
inc
orb
mov
mov
jmp
pop
sbb
test
and
and
rorb
in
xor
sti
push
fmulp
jge
adc
sbb
int
movaps
js
fisubl
popa
xorl
jnp
push
cmp
insl
iret
jns
ds
incl
xor
rol
push
jecxz
inc
outsb
pushf
fnstenv
in
rclb
lcall
or
inc
mov
cmpsl
inc
aad
shr
or
popf
cltd
push
dec
lock
pushf
inc
and
addr16
pop
add
stos
mov
in
push
test
js
leave
outsl
pop
pusha
inc
push
sbb
out
mov
std
add
sub
sbb
shll
adc
sti
ret
fidivl
push
mov
sbb
lds
leave
mov
shll
ja
xor
out
mov
cs
jecxz
fisttpl
sti
loope
test
dec
out
lret
outsb
lds
shll
push
sbb
lret
lahf
jle
mov
lods
nop
pop
and
mov
out
mov
into
inc
inc
lahf
cmpsl
jmp
mov
adc
fmuls
xchg
or
xlat
or
imul
test
es
push
lods
loopne
iret
jecxz
out
xor
push
adc
jne
dec
ds
add
icebp
fdivrs
pop
jmp
mov
ljmp
jb
addr16
dec
cmc
shll
cs
ja
pop
iret
ljmp
arpl
gs
sub
ss
mov
jmp
outsb
cld
pop
mov
addr16
jl
push
clc
dec
mov
pop
xchg
pop
sub
fildl
js
xchg
push
mov
mov
inc
rep
cmpsl
xchg
mov
pusha
out
mov
das
out
cltd
mov
mov
cwtl
jle
xlat
jmp
repnz
sub
sbb
inc
iret
mov
imul
call
sbb
pop
mov
fsubs
out
push
outsb
std
inc
cmp
sub
dec
lea
les
sbb
cmpsb
fldenv
xlat
mov
mov
jecxz
lods
cwtl
mov
movl
dec
jecxz
mov
xchg
add
mov
sti
rolb
call
or
sub
or
xor
xor
pop
jg
jmp
test
loope
outsl
in
in
repz
mov
in
cmp
jge
not
data16
pop
jnp
push
adc
cld
lock
incl
lcall
scas
add
sbb
imul
cmc
jmp
jnp
popa
fldenv
cmp
dec
mov
lds
aas
push
cwtl
bound
jp
rolb
ret
dec
xchg
arpl
and
int3
xor
nop
adc
ret
sub
jmp
sub
mov
mov
pusha
fildll
cmp
mov
mov
sbb
call
or
repz
enter
lea
arpl
ja
stos
hlt
popf
fs
pop
cmpsb
mov
movntps
mov
jp
xchg
lret
add
cltd
or
lods
pop
xchg
inc
push
push
pop
cmp
dec
pop
cmc
cmpsl
lds
jecxz
js
adcb
push
rcll
nop
xor
push
xchg
fbld
test
dec
loop
xchg
lods
movsl
and
out
mov
jmp
hlt
insb
or
adc
sub
lock
push
jecxz
gs
rcl
xchg
or
repz
lods
jnp
mov
or
js
xor
test
enter
jmp
iret
push
lods
push
and
sbb
push
cltd
bound
mov
andl
mov
std
lock
push
hlt
cs
cltd
es
adc
lahf
popl
mov
les
cmp
imull
fwait
popf
fidivl
push
or
scas
inc
xor
js
xchg
mov
icebp
pusha
or
jns
jns
aaa
fisttps
cltd
push
rcll
xor
fwait
mov
mov
movsl
adc
sub
mov
pop
lret
mov
pushf
dec
sbb
into
adc
lahf
test
mov
pop
test
rcrl
dec
and
cmp
lcall
test
sahf
std
mov
or
cmp
inc
push
xor
xchg
add
push
rol
insb
or
repz
movsl
add
imul
adc
push
imul
cmp
sub
fnsave
pop
jnp
cmc
push
add
dec
dec
adc
and
shlb
leave
jl
dec
test
nop
popf
jecxz
ret
fnsave
mov
mov
mov
jmp
jns
xchg
cmp
adcl
ret
xchg
mov
add
push
mov
roll
and
jmp
lahf
lea
add
pop
xor
fistpll
adc
sub
pop
mov
pushf
or
inc
mov
jno
dec
cmp
dec
movsl
mov
rcl
fisttps
jnp
xchg
jg
scas
sbb
lahf
out
jno
add
jb
xor
push
iret
cmpb
add
rorb
mov
dec
scas
lock
outsl
push
sar
jae
clc
mov
pop
jle
sub
rcr
lret
mov
xchg
xchg
cmpsl
lret
inc
jno
rcrl
lods
mov
jno
sbb
cwtl
push
push
scas
shrl
das
push
or
cbtw
mov
push
js
mov
push
and
das
or
test
jmp
aas
stos
aaa
das
test
imul
and
sbb
imul
mov
fildl
shl
cwtl
movntq
sub
jg
mov
mov
xor
push
cmp
lret
jp
cmp
push
out
cmc
int3
xor
movsl
xor
jmp
pop
cld
mov
orb
xchg
mov
movsl
push
in
dec
push
sbb
pop
push
mov
arpl
mov
es
adc
jns
jecxz
or
in
out
mov
fmuls
cmp
cmpsl
lcall
jnp
faddl
fwait
dec
xchg
adc
jbe
outsb
mov
out
leave
out
js
sbb
imul
mov
sti
pop
xor
aaa
das
pusha
js
cli
fisttps
jae
jne
adc
mov
sub
ds
sbb
ljmp
test
add
lcall
fimuls
inc
fisttpll
ds
ja
arpl
imul
data16
xor
call
pop
pusha
pop
nop
ret
adc
mov
add
dec
fisubrs
sahf
cs
aas
inc
je
ret
shlb
xor
xchg
gs
sbb
pop
add
sbb
xor
adc
ficoml
pushf
push
shll
repz
cwtl
movsl
hlt
test
xchg
dec
push
cmc
decb
cmp
jmp
jge
rclb
dec
gs
daa
lea
adc
jecxz
clc
inc
jno
cmp
jb
loopne
rcll
hlt
fistpl
stc
pop
xchg
cltd
mov
nop
lret
or
pop
testl
aad
hlt
jp
daa
loop
pop
or
shr
dec
mov
jns
enter
xorl
add
xor
insl
mov
sub
fidivl
mov
sub
jb
sarl
dec
aas
sbb
mov
pop
add
repnz
cmpsb
test
jnp
lret
hlt
popl
dec
sbbb
inc
or
stc
mov
mov
popf
test
sub
dec
mov
out
pushf
popf
dec
je
pop
add
sbb
xchg
lock
mov
bound
mov
stos
xor
inc
in
or
loope
lcall
div
cld
jle
xchg
xchg
push
xor
xchg
mov
xor
cli
mov
inc
test
in
daa
imul
sub
popf
ljmp
icebp
js
ljmp
dec
aaa
dec
mulb
addr16
inc
out
sti
mov
cmp
push
imul
sti
xchg
pop
mov
xor
pop
dec
mov
mov
xchg
mov
xchg
imul
fiadds
cmp
add
mov
mov
dec
mov
das
lds
cmpsl
fidivrl
aad
and
mov
mov
imul
xchg
stc
dec
das
je
xchg
mov
sbb
push
mov
inc
cmc
or
arpl
lods
cmp
repnz
test
cld
jecxz
pop
pop
sbb
fcoms
bound
or
cmp
sarl
inc
ja
push
lods
jp
jl
pop
fists
imul
fidivrs
and
sub
xor
insb
inc
ret
adc
loopne
mov
push
and
pop
call
xor
or
fisttps
out
or
sarb
arpl
in
shl
sbb
mov
lcall
scas
mov
add
adc
arpl
lahf
inc
int3
inc
stos
mov
cmp
jns
js
cmp
and
cmc
jge
xor
mov
mov
xchg
or
or
mov
mov
jle
enter
movsl
dec
inc
loope
jmp
mov
out
cmp
stos
jl
mov
fstps
jae
inc
roll
fs
lret
out
sbb
push
and
or
sarb
aam
out
jmp
cmp
xlat
xor
in
cmp
movsb
fsubrs
rcrl
jbe
mov
call
fiaddl
int3
cmp
inc
sbbl
xor
gs
xchg
ror
in
cli
inc
sub
mov
js
inc
cltd
repz
daa
mov
and
movsb
or
lods
or
push
lods
xchg
jne
xchg
sub
pop
lret
xor
push
std
push
mov
cmpl
leave
dec
imul
or
mov
nop
mov
sub
call
xchg
test
add
mov
xor
and
in
popf
in
pushf
sahf
jp
mov
sbb
subb
jb
test
sbb
nop
xchg
bound
les
cltd
les
mov
ret
je
jmp
mov
js
cmp
sbb
outsl
out
fadd
test
out
bound
addb
out
push
addr16
ficoml
iret
mov
push
hlt
mov
xor
popl
sbb
popf
dec
mov
pop
int3
sub
js
dec
loope
add
cmp
test
out
cld
or
popf
mov
xchg
cmp
ljmp
pushl
and
xor
sub
xchg
mov
dec
mov
jns
cwtl
and
mov
push
and
call
insl
mov
jmp
repnz
mov
sti
int3
push
or
sub
shrb
mov
mov
xchg
sbb
in
push
leave
addb
cltd
leave
pop
cmpsb
inc
imul
int3
dec
or
arpl
cmc
lcall
xchg
inc
arpl
push
sbb
lds
lods
lahf
loopne
repnz
fadds
outsl
popf
xor
jo
aad
mov
imul
push
pop
mov
inc
cmp
mov
lret
xor
push
sti
cmc
out
in
or
cs
mov
adc
push
dec
daa
push
mov
js
xor
xchg
add
pop
cmp
lret
add
and
mov
and
xchg
lods
in
in
xlat
sub
subb
shrb
ds
clc
add
add
sbb
ja
stos
xor
and
pop
xor
xchg
jnp
outsb
mov
in
scas
xchg
sbb
push
push
sti
jmp
adc
jle
js
mov
sbb
fsubp
and
jmp
ror
and
lods
pop
lods
pop
push
outsb
dec
lods
scas
add
lods
add
inc
sbb
js
push
int3
ljmp
sub
addl
ljmp
fcomps
push
mov
sub
in
dec
mov
addl
cmp
jp
cmpsb
or
mulb
pop
push
outsl
mov
testb
popa
addb
icebp
pop
pop
and
cmp
loop
dec
int3
lret
call
out
and
leave
daa
test
and
je
xor
lret
test
cmpsl
iret
fisttpl
sbb
xchg
pop
inc
pop
es
sbb
inc
pushf
rcrb
clc
ja
stos
scas
fmuls
mov
imul
in
adc
and
pusha
sbb
jae
jae
std
pop
outsb
hlt
leave
lock
rcrb
dec
push
loop
push
adc
jno
stos
ss
adc
adc
ret
mov
pusha
aad
lds
add
out
sbbl
hlt
mov
mov
inc
mov
mov
filds
jnp
inc
push
sbb
ss
push
mov
roll
repnz
filds
xchg
and
in
fiaddl
stos
stos
fistpl
sbb
sub
jmp
xor
mov
mov
nop
pop
push
push
aam
fs
outsl
jno
mov
sub
push
sbb
sarb
push
push
das
push
shrl
mov
cmp
repz
adc
add
cmp
out
lea
push
imul
rcr
lcall
lea
xchg
aad
jne
mov
cld
loopne
push
push
sub
jb
lahf
jl
push
and
and
in
jae
das
mov
rol
pop
add
lds
xlat
daa
and
std
rorl
loope
push
insb
cwtl
ret
inc
xchg
aad
stc
push
fdivrl
xorl
mov
mov
sbb
test
push
adc
push
push
dec
orb
adcb
das
jne
mov
or
dec
or
or
inc
ss
int3
push
aaa
jle
dec
aaa
pop
idivb
ja
movb
push
mov
cmp
rclb
cmpsl
dec
and
xor
add
lret
add
sahf
push
cmp
mov
xchg
or
adc
dec
pusha
xchg
stos
idivb
fwait
xor
pop
cmp
les
mov
xchg
rolb
in
xchg
or
and
jbe
es
mov
push
bound
cwtl
push
sahf
jge
push
add
push
mov
mov
xchg
rcrl
cmc
or
push
popf
insl
fsubl
rorl
push
adc
leave
out
out
test
push
jle
ljmp
arpl
and
cmc
jo
lock
mov
sbb
push
xor
pushf
push
call
lock
out
nop
shrb
inc
and
nop
mov
in
or
shlb
out
dec
in
push
or
sub
inc
test
jle
push
or
notl
and
imul
and
lods
xlat
icebp
lahf
mov
fistpl
adc
cmpsl
js
dec
mov
or
arpl
popf
or
fwait
or
cli
xchg
lcall
imul
add
pusha
jno
aas
lds
pushf
pop
mov
and
mov
js
mov
je
dec
loopne
arpl
xor
jae
mov
cltd
in
mov
pop
mov
jge
outsl
aam
cld
paddsb
hlt
fwait
jnp
pop
and
dec
cwtl
call
fimull
adc
pop
xchg
mov
popa
sub
insl
mov
sti
shrl
sbb
or
sbb
fimull
mov
test
out
inc
rorl
jne
ret
mov
fimuls
rcl
pop
jmp
shl
sbb
push
popf
sbb
loop
outsb
fistl
mov
cmpsl
lea
or
xor
add
enter
aas
testl
adc
filds
pop
lea
int
adc
clc
or
push
pop
sbb
xchg
pop
mov
cmpsb
shlb
cmp
dec
adc
hlt
mov
imul
imul
mov
lret
stos
jp
daa
ror
inc
jg
pop
jmp
aaa
dec
fmul
push
loopne
clc
mov
ljmp
ret
stc
add
cmp
hlt
addl
stos
jmp
add
mov
dec
out
div
add
bound
pushf
mov
aad
xlat
or
cmp
ja
xor
in
or
sub
and
jle
mov
jl
sbbb
mov
pop
imul
test
aad
fwait
fs
inc
lds
inc
pop
push
mov
add
aam
jle
mov
int
cmp
xor
sbb
aad
add
jge
dec
lds
pop
test
divb
loope
inc
stc
arpl
in
push
mov
dec
cld
mov
xchg
pop
scas
fisttps
add
arpl
inc
stc
adc
data16
sahf
sub
test
cli
jle
push
jo
ja
cmp
nop
shlb
sub
cmpsb
icebp
pop
dec
and
cmpsl
inc
pop
inc
mov
sbb
jo
mov
xchg
mov
sub
push
mov
dec
add
jge
inc
fdivl
pushf
data16
cmp
call
test
scas
add
scas
mov
test
mov
inc
daa
push
shl
push
push
mov
push
cld
andps
test
mov
imul
xchg
out
jge
es
sbbb
or
mov
sbb
sti
jb
or
repz
mov
testl
inc
mov
test
repnz
jno
outsl
mov
addr16
aas
divps
leave
incl
add
fimull
loop
nop
fs
cmp
pop
xchg
gs
test
in
xchg
jns
jnp
sub
dec
or
das
int
arpl
jp
sti
pop
test
pop
out
ds
adc
repnz
sub
in
fisubs
int
es
xchg
xchg
mov
mov
daa
rcrb
js
out
and
cld
fimull
and
add
push
cs
xor
ja
stos
sub
iret
inc
scas
jb
fcoml
data16
and
push
add
add
lods
aad
or
js
jp
add
pop
mov
mov
test
arpl
add
lret
icebp
xchg
pop
xor
in
sub
mov
pushf
push
addl
imul
imul
mov
in
and
lods
scas
shll
repz
mov
cmpl
lock
addb
pop
add
pop
mov
enter
in
fimuls
cltd
push
es
adc
rcrl
sbb
mov
scas
dec
hlt
add
in
jge
clc
and
cmpsb
popf
push
movb
jnp
adc
leave
ss
sub
and
jns
subl
std
sub
inc
dec
sub
clc
ljmp
pusha
hlt
inc
in
scas
mov
push
pop
mov
xchg
inc
nop
xchg
push
sbb
repnz
shll
xor
ret
cmc
xchg
iretw
std
xchg
xor
out
insl
dec
aas
jno,pt
test
lods
pop
js
xchg
add
mov
cmp
fidivs
das
add
jmp
or
movsl
add
dec
lods
sbb
xorb
ds
ss
xor
adcb
add
lcall
das
dec
in
arpl
ss
pop
pop
into
dec
pop
inc
mov
insl
sub
xlat
jbe
out
pop
jge
xchg
mov
mov
mov
gs
js
repnz
ds
jl
aaa
int3
adc
pop
push
mov
xchg
inc
sub
mov
leave
ret
lea
ljmp
mov
aaa
and
jno
xor
imul
cmp
cld
jae
idiv
flds
cmpsl
push
mov
stc
add
sub
mov
test
addr16
test
roll
hlt
notb
cmp
mov
shll
cwtl
dec
xchg
pusha
rcrl
xchg
push
inc
xchg
xchg
out
mov
mov
in
xor
add
fimuls
mov
loopne
js
adc
xor
cmc
dec
dec
pop
out
add
daa
pop
test
mov
push
mov
jno
fcoml
pop
mov
rol
aaa
aad
roll
sbb
cli
dec
cmp
iret
and
ret
mov
aad
movsl
cmpsb
lahf
lea
push
cmpsb
mov
cli
pop
adc
sbb
mov
sbb
shll
jmp
jl
fldenv
fldcw
out
sbb
or
fcompl
cmpsb
dec
testl
mov
and
push
lret
mov
or
roll
mov
sbb
std
push
xchg
inc
nop
dec
jle
insl
mov
push
je
test
mov
lods
mov
aam
and
jp
ficoms
jg
arpl
outsb
sbb
orl
or
dec
adc
fnstenv
in
pop
xchg
setbe
in
adc
push
xchg
leave
shl
push
iret
in
or
mov
push
das
add
xlat
shll
das
outsl
inc
aaa
shl
int3
in
cmpsl
hlt
add
rorb
aad
and
mov
xor
testb
outsl
push
popf
popa
push
mov
cmp
or
inc
or
cwtl
cmp
or
and
loopne
sub
push
or
jb
jb
stos
pop
stos
les
xor
add
fdivl
fs
dec
inc
ss
push
aam
inc
pop
sbb
rcrb
inc
bound
push
scas
nop
jo
xchg
adc
xchg
stc
and
add
push
jne
add
pop
xor
mov
mov
push
lea
not
imul
mov
inc
xchg
stc
pop
jnp
fistps
push
push
imulb
mov
mov
jl
sub
arpl
push
adc
xorl
mov
sbb
mov
pop
call
dec
and
ret
fucomi
cmpsb
mov
dec
cmpsb
inc
mov
pand
mov
lahf
leave
mov
jo
es
jmp
pop
in
rclb
gs
and
xchg
cmp
ror
jno
movsb
pop
add
mov
cld
jne
cwtl
in
lea
sbb
inc
cmpsl
stos
inc
ret
lea
sub
int3
or
cmp
test
lods
sbb
call
jae
inc
outsl
mov
xchg
cmpb
popf
mov
pop
sbb
sbb
out
sbb
push
dec
test
push
sub
add
add
dec
dec
push
popf
add
cli
jbe
lods
mov
ret
pop
lcall
adc
mov
and
aam
out
mov
cld
jge
cltd
out
cmp
clc
lods
xlat
shll
pop
add
add
aaa
dec
add
cld
xor
inc
jge
add
add
shll
rolb
adc
cltd
orl
mov
divl
mov
insl
jne
sub
sahf
mov
out
or
push
fcmovu
sti
popf
shl
fidivl
jne
push
ja
sahf
sahf
leave
lods
pop
lods
adcl
repnz
pop
add
arpl
adc
pop
dec
das
jno
mov
dec
jb
loopne
jo
jb
and
jbe
nop
cs
xor
bound
push
or
push
sub
jg
cmp
xchg
sbb
cmp
mov
xchg
lret
cwtl
das
push
push
xchg
imul
mov
mov
mov
out
addr16
fcoml
pop
repz
stos
jno
stos
jnp
out
cmp
adc
dec
fisubl
mov
mov
ljmp
xchg
xchg
push
sbb
dec
xor
lock
adc
jae
sahf
pop
loop
out
in
ljmp
xchg
cmp
jge
dec
mov
mov
pusha
adc
lds
cs
cmp
mov
rcr
cmp
jg
add
pop
loope
add
xor
xor
push
iret
test
fisubs
pop
push
loopne
shlb
fistl
loop
rorb
jp
mov
sahf
push
clc
subb
imul
call
hlt
dec
cs
lret
push
xchg
mulb
adc
cmpb
and
jmp
mov
mull
insl
ret
dec
fiadds
add
lds
cmpsl
js
cli
fs
jno
popf
push
lret
repnz
movsl
popa
pop
out
popa
in
lea
lds
mov
jno
negl
mov
xchg
cmp
dec
push
mov
xor
pop
mov
cli
mov
sbb
sarb
adc
das
sub
sub
pop
pop
stos
push
and
out
mov
dec
push
sbb
jne
addr16
jge
dec
lods
jne
idivl
dec
es
stc
sbb
adc
cli
mov
cmp
xor
xor
jmp
add
ljmp
mov
je
fstpl
lcall
sub
fldl
pop
pop
jle
insl
out
mov
daa
cmp
cmp
push
cltd
mov
fs
adc
push
stos
sbb
shrb
pop
daa
sub
mov
mulb
inc
xchg
mov
jno
int3
or
fbstp
and
mov
xor
xchg
cmpsb
mov
insl
push
outsb
rcl
and
aam
inc
pop
pop
fiaddl
mov
mov
repz
mov
pop
in
sub
adc
std
lahf
sbb
fnstsw
mov
xor
jns
mov
subl
sbb
scas
jns
xchg
stc
scas
icebp
mov
dec
addr16
nop
inc
adcb
or
lret
lea
call
jmp
add
mov
adc
pop
lret
xchg
mov
imul
pop
out
inc
pop
adc
shlb
cmc
fld
lret
push
rolb
cmp
add
call
sub
cmp
mov
or
xchg
mov
pop
cltd
shlb
jp
loop
mov
outsl
push
iret
push
sbb
leave
loop
pop
dec
insb
pop
pop
imul
mov
nop
ss
test
push
arpl
xchg
shrl
cmpb
sbb
dec
int
adc
or
jne
cmc
add
inc
mov
ja
stos
push
je
cmp
xor
outsb
xor
aaa
push
ds
push
xchg
scas
jb
jo
cmpsb
dec
mov
inc
loop
or
jb
dec
adc
push
test
mov
stc
jmp
add
push
fidivrl
stc
sub
scas
jne
jle
call
fwait
cmovb
repnz
lcall
jle
scas
loop
xor
add
rcrb
sbb
cmc
and
xchg
push
aad
es
repnz
add
nop
es
mov
xchg
xchg
sbb
or
inc
or
inc
pop
int3
sbb
jg
mov
mov
push
scas
xor
inc
roll
pushf
arpl
jg
popa
loop
nop
cmp
add
mov
and
leave
push
bound
je
sbb
xor
outsb
xor
add
dec
or
mov
pop
xor
cld
cmpsl
mov
xor
repz
pushf
mov
in
xor
rclb
cmp
outsb
or
stos
stc
icebp
cwtl
ljmp
adc
and
mov
pop
xor
lods
mov
jae
add
jno
sub
repz
insb
cld
movsl
test
ror
loop
mov
mov
ds
cmp
inc
sbb
sbb
icebp
pop
loope
subl
ret
test
jbe
leave
dec
push
mov
mov
mov
enter
out
jo
jb
and
and
fisubrs
pop
push
mov
mov
pop
mov
pop
sbb
cmp
mov
fdivr
mov
mov
mov
icebp
jb
roll
pop
dec
enter
mov
ljmp
dec
mov
rcl
gs
dec
scas
or
pop
repnz
mov
pop
ja
cmpsl
shrl
push
int3
xchg
dec
stc
hlt
xor
ss
inc
and
stos
cmp
xchg
jmp
xor
and
xor
lcall
xchg
popa
cmp
iret
pop
addr16
popa
push
das
jmp
dec
ret
fs
push
dec
movsl
shrb
jns,pn
jns
mov
push
sbb
cwtl
lods
xor
aam
pop
sahf
mov
dec
xchg
mov
xor
js
pop
pop
je
sbb
and
mov
call
loopne
adc
add
mov
xchg
icebp
outsb
mov
int3
imull
or
push
je
mov
test
test
test
adc
mov
pop
nop
lret
push
cmp
out
xor
xor
arpl
and
mov
fwait
cmpl
adc
rolb
testl
fisubl
sbb
dec
push
aas
sub
mov
ss
xchg
into
add
fisttpl
rcr
pop
test
mov
das
xchg
xchg
out
test
js
or
pop
push
psubb
mov
inc
dec
adc
mov
add
mov
sbb
mov
negl
ficompl
cmp
add
pop
negl
arpl
out
pop
les
lret
ljmp
push
mov
mov
push
addb
idivb
daa
test
cmpsb
mov
lock
jae
inc
nop
gs
mov
js
gs
daa
enter
sbb
xchg
mov
fdivl
jle
cmp
out
les
mov
mov
xlat
dec
or
in
pop
and
cmp
loope
xchg
and
cmc
or
jbe
cmp
adc
xor
sbb
push
inc
mov
stc
stos
outsl
packuswb
dec
or
sbb
push
pop
idivl
loopne
cwtl
xor
test
jae
fisubs
sbb
out
mov
dec
push
out
dec
push
int
in
sbb
shlb
lcall
or
mov
rolb
mov
mov
add
js
gs
fistpl
lods
dec
pop
mov
adc
movsb
xor
scas
lret
aam
dec
xor
out
push
add
gs
inc
out
mov
add
arpl
push
test
loope
adc
dec
in
leave
popa
add
push
lahf
push
cmpl
repz
fcmovnbe
fists
or
out
insb
add
or
sub
jecxz
iret
sbb
pop
xchg
mov
xor
ja
push
cmp
dec
into
call
lret
pop
lods
mov
cmpsl
cmpsb
adc
cmp
mov
popa
fidivrs
xor
adcb
cltd
fs
sbb
test
cmp
push
sub
in
mov
insl
outsb
call
rorl
lcall
inc
mov
pop
cmp
das
jb
subb
adc
test
xchg
jmp
clc
divl
inc
mov
hlt
adc
in
loop
pop
inc
push
ret
add
daa
or
sbbb
shlb
loope
popf
test
sub
sub
adc
cmpsl
xor
cmpsb
mov
insl
mov
xor
call
sub
insl
into
mov
jecxz
mov
outsb
and
fidivl
les
out
pop
je
dec
xor
fldenv
mov
shll
sub
push
out
xor
addr16
inc
test
pop
aam
es
push
sub
hlt
cmp
scas
cli
mov
loope
int3
sbbl
inc
lea
inc
imul
inc
xor
xchg
mov
fldt
lock
jl
in
jle
add
cmp
ret
movsl
add
test
subps
pushf
test
rorl
inc
mov
out
cmp
push
or
pop
outsl
xor
outsb
cmc
sub
mov
test
js
or
ja
int3
sub
adc
call
add
pop
adc
rcrb
pop
adc
imul
scas
cmp
or
lds
add
enter
mov
cmc
daa
push
jmp
mov
insl
aad
mov
push
les
out
jnp
in
rolb
fdivs
aad
or
push
lods
mov
dec
movsl
test
das
cltd
fdiv
mov
ret
pop
mov
xchg
test
jnp
sub
cltd
xlat
dec
out
adc
jg
xchg
adc
adc
adc
mov
cmp
std
dec
popf
xchg
movsl
shll
mov
out
jmp
pop
loopne
lahf
mov
bound
mov
fimuls
sub
mov
adc
xor
iret
test
pop
fs
xorl
jp
loop
lds
dec
call
push
out
les
cli
scas
rcrl
shrb
std
mov
call
loop
mov
lods
out
gs
xor
mov
xchg
test
enter
das
cmc
dec
test
adc
pop
insl
add
and
fimull
dec
and
mov
lods
popa
les
inc
lahf
dec
fnstcw
js
push
dec
lahf
loope
inc
jecxz
lcall
cld
adc
sub
insl
out
xor
add
inc
mov
dec
pop
xor
sbb
mov
pusha
adc
inc
xchg
ret
sub
xor
cmpsb
jecxz
xor
jle
add
addl
ljmp
sbb
stc
push
test
jbe
out
out
fisubs
mov
rclb
cmpsl
icebp
loopne
push
cli
jns
repnz
repz
aaa
fisttpll
outsl
dec
shrb
push
outsl
inc
pop
mov
sbb
jb
mov
cmc
push
ret
ficomps
out
notb
inc
int
or
clc
test
mov
pushf
pushl
xlat
dec
jmp
dec
and
arpl
dec
mul
mov
into
add
call
andl
and
jnp
lcall
sti
subb
xor
outsb
loop
mov
bound
push
jge
out
mov
pop
mov
push
ret
pop
testl
lds
popa
pop
pop
mov
jle
push
icebp
mov
dec
sbb
adc
cltd
xchg
lods
push
jge
mov
mov
jg
pop
out
cwtl
arpl
stc
stc
jl
sbb
cmpb
dec
out
xorl
mov
sbb
out
dec
lods
mov
cmpsl
lcall
repz
dec
cmp
aaa
loop
dec
test
jmp
mov
mov
mov
push
inc
mov
das
dec
test
cmpsl
sti
loopne
fwait
incb
sbb
scas
cmp
int
add
scas
mov
xor
mov
shll
insl
test
notl
adc
xor
in
cld
stc
lret
xchg
mov
in
in
add
cmp
imul
addl
fwait
xlat
dec
lock
fstpl
stos
pop
movsl
rcrl
sbb
cld
into
rcrl
fisttpll
repnz
mov
push
xor
push
test
movsb
dec
rcr
loope
std
pop
inc
inc
push
xlat
lds
fidivrs
orb
xchg
cld
iret
inc
push
xchg
pusha
cmp
adc
cli
stc
mov
popf
cmp
push
xor
jl
adc
gs
mov
jne
imul
push
xor
icebp
add
pop
pop
sub
cmp
pop
push
pop
inc
mov
push
xor
bound
addr16
out
sub
push
dec
int3
movsb
mov
shrl
mov
outsb
aaa
and
mov
xor
aaa
lds
outsl
lret
dec
cmp
add
mov
in
ljmp
xchg
jns
inc
jge
jbe
rcrl
mov
lods
xchg
mov
aas
xor
push
mov
mov
xor
mov
push
push
notl
dec
shrb
test
scas
out
leave
sbb
cmp
cwtl
fiadds
jbe
sarl
add
mov
movsb
pop
dec
pop
and
mov
inc
pop
lods
jmp
jg
inc
jns
outsb
jge
jmp
repz
xchg
pushf
repz
and
shlb
sti
xchg
mov
inc
test
jne
pop
enter
push
mov
xchg
cmp
std
out
dec
xchg
iret
adc
mov
bound
movsl
jno
mov
sahf
in
leave
cmc
push
cmpsl
js
cs
push
pop
test
imul
daa
aam
js
mov
pop
xchg
jmp
jl
cli
add
nop
lahf
daa
or
decb
fisubs
sub
mov
aaa
or
xchg
push
mov
ja
rorb
xchg
data16
shr
sub
loope
push
add
test
xor
xor
loop
loopne
mov
stc
testl
inc
adc
mov
shrb
mov
or
lock
cmp
iret
stc
pop
cltd
cmp
xchg
orps
lock
and
cmp
popf
in
mov
sbb
mov
cmpsb
loopne
sub
xchg
rep
push
or
test
sub
xor
and
inc
cwtl
negl
jno
aaa
test
or
mov
dec
pop
cmp
loop
popf
mov
mov
add
mov
cmp
inc
fistpll
stc
push
adc
fwait
imul
mov
xchg
shrl
test
adc
mov
cmpb
xlat
mov
jge
arpl
pop
pushf
add
mov
jo
fcomps
shll
sbb
lods
sub
das
jno
xor
adc
out
les
jo
lds
in
push
iret
mov
dec
mov
mov
push
xchg
sub
imul
repz
pop
cmpsb
icebp
daa
sub
popa
sahf
lods
xchg
mov
shl
aaa
in
mov
push
sub
add
ljmp
mov
enter
rclb
les
mov
orl
push
in
js
xlat
inc
pop
notb
jge
fdivr
jecxz
mov
mov
lret
jp
nop
pusha
push
repnz
lods
outsb
and
xchg
xchg
std
push
pop
mov
mov
scas
fildl
inc
or
pop
xchg
add
lahf
cwtl
push
fwait
adc
stc
jmp
sahf
rcrl
in
and
xchg
clc
sub
mov
mov
outsl
insb
mov
popa
lret
imul
dec
lret
xor
xchg
jge
mov
adc
call
loopne
loopne
lret
cld
cmc
add
xchg
test
pop
mov
pop
in
xchg
es
mov
pop
leave
ret
adc
dec
je
test
ret
inc
xchg
les
fimuls
pop
xor
inc
xchg
jl
add
jl
imul
stos
std
lods
push
xor
and
loop
jns
std
fcompl
and
shrl
lea
call
filds
add
xchg
adc
lods
cmp
daa
mov
xor
pop
sub
ret
pop
pop
test
popa
pop
xchg
add
das
popa
faddp
push
and
jo
inc
inc
sahf
adc
jle
lods
jmp
mov
aad
xchg
mov
int3
popa
stos
divl
mov
mov
stc
sbb
mov
lea
sub
pop
out
jle
xor
shrl
mov
mov
push
mov
outsl
push
shl
lock
mov
ret
ljmp
int3
push
jp
jo
xor
adc
mov
mov
filds
cmp
enter
push
jb
mov
add
or
push
repnz
sbb
jecxz
pop
mov
out
dec
je
sbb
imul
mov
dec
push
cmc
aaa
loop
mov
dec
out
scas
roll
negl
mov
data16
test
dec
stc
cwtl
mov
js
shll
dec
js
xor
clc
rcrl
dec
in
mov
aad
movsb
jnp
adc
ja
cld
iret
dec
mov
push
addr16
pushf
test
xor
aad
subb
mov
ja
inc
sub
add
xor
and
push
movsl
mov
dec
sbb
dec
je
mov
insl
into
testb
push
dec
lret
push
in
inc
lea
cmp
popa
or
xchg
ss
jmp
les
mov
push
jns
out
aas
mov
flds
sbb
pusha
jmp
pop
sub
andb
mov
inc
and
jp
pop
aaa
flds
pop
dec
scas
sbb
add
xor
xor
call
and
cmovno
testb
out
xchg
mov
lahf
sbb
add
xor
adc
repnz
aad
mov
sub
sub
mov
imulb
iret
pushf
divl
out
shl
xor
sarl
and
mov
out
mov
out
mov
push
jno
movsb
mov
repz
xchg
add
mov
outsb
dec
icebp
insb
stos
mov
xor
dec
shl
dec
xor
xor
mov
inc
rorl
pop
daa
cwtl
or
mov
cmc
inc
xchg
sbb
clc
sti
push
add
shlb
push
jp
jg
test
mov
cld
js
sbb
scas
or
hlt
scas
in
sbb
faddl
mov
sti
xchg
sub
cmp
cmpb
fs
or
cmp
inc
lods
pop
hlt
imul
inc
xchg
insb
cmp
jle
add
cmp
cmpsl
leave
mov
fdivs
ss
rcl
and
scas
pop
inc
cltd
out
insl
jnp
lods
clc
das
pop
xchg
pusha
mov
call
aam
mov
adc
push
jmp
sbb
cmpb
inc
int
inc
add
mov
add
shrl
pop
xor
dec
mov
movsb
sub
imul
jno
repnz
mov
add
sbb
mov
leave
stos
push
in
jo
nop
push
shll
mov
add
jo
shlb
out
pop
sbb
xor
ja
subb
inc
in
pop
jae
sbbl
push
fldl
scas
dec
dec
fiaddl
movsl
push
push
adc
fstpt
or
out
imul
or
fdivs
lcall
ret
ds
mov
dec
or
out
mov
out
lods
mov
push
fwait
inc
popf
scas
pushf
fldcw
rclb
aas
mov
add
lret
add
pushf
test
ret
jns
pop
jb
shll
fsubrl
out
sbb
add
stos
adc
pop
mov
lock
in
cmc
imul
int
mov
xchg
add
stos
cltd
sbb
and
dec
pop
scas
xchg
hlt
ds
and
xchg
lahf
jbe
ljmp
fs
andb
sbb
shll
mov
cmp
jge
lods
jno
pop
rorl
mov
pop
push
mov
cmp
unpckhps
jl
scas
mov
mov
rcl
mov
shll
xchg
sar
orl
pop
in
mov
mov
jecxz
sbb
aad
out
xor
scas
insl
insb
icebp
fiaddl
mov
cwtl
orl
fwait
test
int
imul
pop
jnp
leave
aaa
leave
stos
loope
call
fwait
aaa
fcmovbe
cmp
cmp
push
outsb
mov
sti
bound
jg
mov
mov
mov
arpl
movsb
push
mov
push
push
push
pusha
push
andb
adc
or
addb
aaa
orl
test
xchg
dec
xor
mov
sub
std
mov
mov
pop
loope
inc
lahf
test
aam
pop
std
mov
int3
add
xchg
call
jns
mov
adc
jns
movsl
out
in
jl
popa
insb
loop
push
inc
sub
xchg
stos
jl
dec
iret
sbb
ljmp
dec
sub
or
add
std
push
lcall
dec
lahf
enter
inc
pop
fnsave
cmpsl
sbb
and
test
lock
cmp
push
dec
test
lds
fildl
in
push
loopne
out
out
ret
ds
mov
adc
fdivr
mov
jmp
push
jmp
notb
sub
xchg
cmp
mov
test
mov
jl
test
jmp
outsb
out
push
or
xchg
scas
insb
mov
jnp
fs
or
sbb
lods
rcll
lea
jo
and
test
dec
fcoms
push
xchg
push
or
movsb
popa
inc
arpl
adc
repnz
mov
psrad
pop
pop
inc
or
mov
arpl
mov
out
pop
and
and
and
popf
les
jne
mov
mov
iret
mov
mov
or
pop
clc
xorl
mov
data16
xchg
cs
sub
lret
dec
dec
jns
movsl
sub
mov
mov
inc
inc
push
add
push
sbb
popa
loop
inc
or
push
mov
inc
pop
les
pop
inc
jo
inc
add
adc
nop
lahf
push
lret
sahf
add
mov
daa
out
pop
addr16
pop
xchg
insb
cmp
and
idiv
ja
je
test
ds
jmp
sub
sub
lds
jl
dec
adc
lret
and
lods
xchg
test
test
jmp
in
sbb
repnz
adc
das
cwtl
sbb
sub
push
aam
notl
out
dec
xor
pop
jp
pop
cmp
lret
and
stos
xor
das
data16
dec
sahf
push
xchg
pop
jl
pop
arpl
cmp
dec
leave
jne
mov
aaa
nop
mov
mov
gs
ret
cmpsl
repnz
iret
inc
mov
pop
je
add
inc
pop
pop
std
mov
adc
stos
jp
sbb
sub
rcrb
xor
shlb
dec
stc
ds
add
mov
fimuls
jmp
sub
cmp
dec
inc
clc
mov
aad
and
mov
push
mov
rorl
in
imul
in
ds
add
insb
cmp
ljmp
pop
hlt
cmc
adc
shrb
insb
push
jmp
jl
push
fsubs
or
xchg
xchg
imul
mov
push
scas
add
xchg
jo
lret
mov
and
pop
push
test
pop
repnz
int
adc
jmp
or
dec
or
shr
jne
addl
mov
sbb
jmp
inc
or
mov
and
push
cmp
fmuls
xchg
insb
push
inc
pop
sbb
xchg
and
incb
pusha
mov
mov
lea
mov
mov
movl
mov
shlb
mov
pop
movsb
dec
ja
sbb
xor
xor
add
cmp
call
in
adc
xlat
out
lret
push
imul
cwtl
sbb
inc
outsb
jecxz
mov
dec
ret
jno
push
dec
jb
sub
out
test
mov
lods
das
jp
inc
loopne
pop
sbb
pop
rclb
mov
dec
out
sub
add
jg
xor
xchg
ret
dec
adc
sbb
enter
pop
add
pop
push
cld
in
xor
mov
add
xor
cmpsl
xchg
negb
stos
inc
mov
mov
mov
dec
dec
push
jbe
push
push
mov
test
mov
loopne
cmp
xchg
pop
repz
lds
fildll
lret
add
mov
lahf
push
and
gs
aam
adc
jne
daa
dec
xor
scas
mov
and
fmuls
lea
adc
adc
hlt
mov
add
and
and
outsl
xchg
ds
mov
in
shl
add
stos
xor
jl
mov
inc
xchg
imul
dec
mov
fwait
xchg
lods
xchg
pop
inc
arpl
mov
and
adc
loopne
lret
cmp
dec
gs
push
xor
cltd
dec
xor
xor
sub
dec
stos
icebp
push
movsb
inc
xchg
dec
lahf
sbb
sub
add
ret
shl
adc
cmp
mov
outsl
or
movsb
paddsw
test
lret
sbb
in
test
lret
lcall
xchg
sbb
add
leave
add
fidivrs
sbb
insl
xor
cmp
fidivl
jbe
cltd
inc
jecxz
jo
je
xor
or
adc
lods
xor
cmc
scas
jp
stos
xchg
es
xchg
mov
shrl
add
lds
lret
mov
dec
mov
inc
jno
xchg
movsb
shl
adc
xchg
pop
sub
push
sbb
push
push
filds
pop
lds
inc
pop
js
fstps
push
scas
or
fnsave
mov
fstp
hlt
les
lds
inc
cmp
cli
push
inc
xchg
enter
inc
mov
cmp
stos
push
outsl
je
mov
daa
das
fbstp
xchg
mov
icebp
aaa
sub
and
xchg
call
hlt
scas
negb
test
xor
adc
push
mov
push
push
lret
pop
add
fistpll
dec
in
jle
mov
cmpsl
jle
enter
pushf
aas
aad
jp
xchg
decb
dec
dec
aad
in
imul
inc
jg
shrb
fisubrl
lods
xchg
sahf
pop
cld
mov
sub
jmp
adc
imul
pushf
loopne
or
push
xchg
inc
repz
repz
cmpsb
jnp
xor
or
movsl
imull
jnp
xor
cmpsb
push
inc
mov
jo
dec
mov
sbb
pop
push
fiaddl
mov
adc
pop
fildll
pop
lods
pop
and
jp
das
sub
jno
push
outsb
add
jo
lcall
out
push
dec
iret
push
cmp
sar
ljmp
xchg
jne
lock
mov
mov
jmp
xor
push
jno
and
push
adc
jbe
mov
mov
mov
mov
in
sub
xor
or
cwtl
aad
fs
sub
pop
inc
push
js
sbb
pushl
pop
call
stos
mov
mov
aam
das
aas
mov
call
jb
mov
out
dec
sub
cld
mov
sahf
mov
mov
add
sbb
std
pop
sub
xchg
sbb
popf
jnp
ret
imul
repnz
sub
adc
xchg
fucomi
rclb
mov
in
ret
push
inc
xor
inc
jnp
mov
shll
pushf
jmp
loop
push
mov
xchg
jb
subl
pusha
inc
std
inc
or
pop
popa
ficoml
sbb
aad
sar
dec
je
aaa
sarb
push
clc
jne
pusha
out
popf
dec
jne
dec
or
les
jmp
jle
in
mov
inc
push
repnz
push
sbb
pop
jp
test
iret
std
ja
mov
push
jmp
sbb
adc
dec
sub
mov
cmp
xchg
xor
das
int
test
and
pop
mov
int
adc
inc
aad
mov
jb
xchg
push
xchg
divl
fwait
loope
test
std
jecxz
repnz
cmp
stos
ja
callw
lcall
mov
lea
lret
in
push
xchg
xor
cld
add
mov
mov
insl
mov
in
xor
xor
inc
stos
ss
mov
mov
mov
andb
repnz
mulb
loopne
mov
add
testb
outsl
sbb
xchg
dec
jl
stos
fsub
nop
mov
push
jmp
and
roll
jne
sbb
push
mov
icebp
push
ds
rcl
bswap
add
je
cmp
rorb
fwait
es
loopne
or
fsub
add
mov
mov
mov
xchg
adc
mov
adc
sub
mov
xchg
sub
push
and
cmpsb
lds
and
cmp
jmp
stos
push
jne
and
iret
mov
ja
jno
fst
shlb
lods
cmc
icebp
inc
and
push
mov
imul
inc
divb
push
stos
jae
pop
aaa
int3
das
lods
and
int3
not
inc
pop
dec
inc
sub
movsl
push
lcall
sub
pop
mov
lods
cmpsl
xor
aaa
loop
repz
push
lahf
hlt
inc
add
mov
lret
decl
xchg
or
push
repnz
cmp
xchg
lock
xor
sarb
stos
hlt
pop
xlat
sbb
add
test
pop
push
aad
sbb
xchg
adc
xlat
ljmp
mov
daa
cmp
and
lahf
sbb
sbb
jb
test
inc
or
aad
sub
or
or
pop
mov
cmp
loop
lock
lods
mov
in
xchg
test
sti
and
push
push
outsb
jb
shll
or
insl
sbb
je
pop
inc
stc
shl
jns
lds
lods
int
pop
xchg
daa
xchg
ror
adc
mov
int
pop
dec
jmp
aas
fldt
cwtl
test
shll
adc
jne
std
and
mov
js
xchg
lret
mov
mov
into
jp
push
mov
shll
adc
insb
int3
hlt
lock
imul
inc
sbbl
jae
inc
inc
inc
cmpsb
pop
pop
adc
jecxz
sub
dec
loopne
mov
movsl
fwait
dec
or
lret
mov
fwait
dec
pushf
cld
inc
outsl
mov
lcall
or
testl
lret
jb
add
push
stos
and
cwtl
sbb
dec
ljmp
inc
push
orl
mov
or
inc
dec
jb
cmp
mov
xchg
insl
rorb
movsb
stos
ret
ret
xchg
inc
mov
inc
mov
mov
mov
and
inc
mov
lds
cmp
iret
fimull
sbb
fsub
mov
imul
hlt
hlt
imul
mov
pop
xchg
pop
test
cmc
push
dec
xor
loop
inc
add
enter
sbb
dec
cmp
or
out
adc
xlat
fists
sbbl
add
imul
xlat
cmpsb
aam
popa
in
scas
add
or
xchg
in
push
xchg
lahf
sti
hlt
popl
lret
pusha
mov
and
lret
jge
adc
or
daa
aam
bound
scas
push
lock
mov
xorb
aas
lea
rolb
jno
jb
loop
inc
dec
pusha
cltd
sub
pcmpgtb
sub
sbb
aas
cmc
movsl
mov
push
dec
insb
sbb
mov
dec
sbb
mov
lock
mov
push
loope
or
push
popa
mov
ret
mov
fstpl
ret
repz
sbb
adc
xor
insb
pusha
repz
movsb
push
out
sub
mov
pushf
push
data16
shlb
push
xchg
mov
pop
stos
lods
shrl
cltd
sahf
lods
push
pop
cmp
sbb
sub
sub
and
adc
iret
sarb
xorps
pop
pusha
movsb
mov
test
dec
lea
adc
mov
aaa
jg
mov
cli
fneni(8087
push
or
sti
ja
xchg
mov
pop
pop
test
notrack
outsl
dec
in
cmpsl
sahf
int3
dec
and
xchg
cli
outsl
push
faddl
inc
adc
jmp
fisubrl
orb
mov
and
xlat
cmpsb
outsl
mov
test
and
test
sub
in
jge
adc
and
aas
test
xor
mov
imul
arpl
data16
mov
xor
out
mov
call
inc
roll
sbb
fsubrl
inc
hlt
loopne
cmp
jno
sbb
fcomps
shrl
test
ret
mov
dec
sahf
push
dec
fwait
js
loopne
inc
push
push
scas
sahf
or
pushf
pop
test
into
andb
cwtl
sub
mov
cmp
xor
imul
shr
inc
movsl
rcll
jo
mov
dec
jo
std
int
push
pop
jne
mov
bound
das
sar
jmp
repnz
mov
ljmp
dec
pop
add
inc
call
es
lea
mov
scas
lahf
sbb
push
mov
inc
test
push
adcb
test
imul
or
sub
pusha
out
xor
push
add
pop
testb
push
mov
xchg
or
shrb
push
in
test
aad
xchg
int
sbb
scas
in
roll
jne
sarb
movb
pop
sub
test
jmp
and
cmp
mov
sub
fistpll
push
pushf
jg
xchg
lret
sbb
lods
outsb
xchg
ja
mov
stos
inc
orl
ja
lret
pushf
cmp
pop
mov
xchg
mov
sar
add
repnz
and
gs
cmp
adc
push
mov
lock
dec
inc
add
fwait
mov
gs
divl
test
xlat
and
xchg
jmp
pop
fwait
sub
aad
popf
jbe
rcll
lock
sub
xor
jl
cltd
and
lock
loope
sbb
push
fidivrs
mov
outsb
sub
leave
fiaddl
clc
adc
es
push
and
xchg
fisubrs
movsl
aaa
mov
call
cmp
mov
xchg
mov
std
xor
mov
jle
int
xor
jb
add
bnd
adc
addr16
or
cmp
lods
rcll
aam
inc
sub
xor
out
sahf
push
sbb
sub
pop
inc
mov
mov
xor
add
push
rcll
sub
cmp
and
xchg
test
and
shrb
ret
stos
rcrb
dec
outsb
cmp
out
ret
cmc
xchg
mov
out
in
add
mov
mov
push
inc
pushf
mov
aas
xor
bound
insl
mov
outsl
std
cwtl
out
adcl
dec
xchg
xchg
out
lret
adc
or
ljmp
movsl
mov
push
popf
scas
sub
stos
and
outsl
loopne
mov
loopne
xchg
rolb
cmc
test
insb
daa
scas
lods
fsubrl
jle
pusha
cltd
xorb
cmp
cmp
pop
add
cmp
fs
inc
scas
es
inc
rorb
mov
sti
sbb
mov
push
xchg
mov
and
stc
pop
outsl
pop
aad
push
adc
rorb
xlat
mov
mov
loopne
jns
call
cwtl
mov
aam
dec
mov
sub
pop
loope
pop
cmp
fists
mov
dec
pop
sub
aas
scas
pushf
es
adc
pop
ret
ret
in
push
das
mov
fucomi
xor
inc
mov
add
repz
inc
push
ja
cmp
mov
std
gs
adc
adc
mov
mov
jae
mov
js
add
xor
aaa
arpl
int
in
aas
or
mov
add
stos
repz
shlb
dec
clc
sbb
and
sbb
movsb
cmp
loopne
das
subb
adc
push
push
mov
mov
in
inc
xorb
nop
dec
and
rcll
push
and
mov
xchg
xchg
outsl
fnstsw
inc
cmpsb
and
and
lcall
rcrb
icebp
xor
pusha
jne
pop
mov
movsb
sarl
fs
fcoml
adc
lods
sub
cmpb
adc
cmc
add
test
fstpl
jp
pop
cmp
sbb
sub
sub
lods
push
dec
xchg
mov
add
inc
enter
add
es
fsubrp
lret
sub
xchg
rorl
sub
cmpsb
jle
repz
xor
fcomps
xor
fcomip
orb
rorb
push
roll
xchg
js
cmp
cld
mov
pop
sub
inc
lods
jno
insb
loope
mov
clc
out
jecxz
js
imul
mov
iret
mov
lods
sub
or
sti
sub
lock
or
inc
jae
fcmove
xchg
mov
cmc
add
or
jae
add
hlt
das
push
add
jmp
sbb
orl
and
cltd
dec
loop
mov
cmp
lods
mov
jecxz
jb
repnz
test
push
fwait
sub
mov
add
cltd
test
xchg
adc
out
fwait
mov
lea
dec
mov
push
subl
stos
jle
ret
in
cmp
jno
aam
pop
inc
push
or
mov
or
adc
sub
dec
jecxz
push
int
xor
popf
push
adcl
sti
rorl
dec
arpl
add
out
xor
add
sti
adc
cmp
jb
inc
loope
out
mov
stos
out
lea
loope
aam
testl
xlat
xchg
xlat
and
jg
sub
xchg
push
rclb
jae,pt
xchg
push
push
aam
mov
dec
jno
mov
pop
jg
xchg
push
fstl
push
push
arpl
fdivs
sub
daa
arpl
clc
pop
and
push
xor
cmp
xor
add
lea
ljmp
add
jae
sbb
aaa
mov
sub
or
pop
mov
cmp
out
repz
add
test
loope
sub
push
push
jecxz
mov
aad
cmc
mov
cmp
stos
shlb
insb
mov
add
imul
stc
or
or
pop
cld
push
imul
sub
fwait
test
pop
mov
imul
mov
or
jp
mov
fildl
inc
sbb
mov
jp
mov
pop
and
cmc
stos
xchg
lret
fsubrs
sbb
lock
xlat
lea
imul
mov
push
mov
xor
pop
roll
mov
pop
out
je
nop
mov
outsb
ja
in
mov
mov
sub
subl
or
mov
sub
insb
fadd
cld
dec
in
add
inc
aam
imul
xor
jmp
test
les
or
scas
movsl
inc
stos
jnp
imul
bound
cmp
insl
mov
pop
pop
or
ds
inc
int
push
in
mov
push
lahf
sub
shl
shrl
mov
jbe
mov
lahf
adc
pop
mov
xchg
out
js
mov
scas
sub
sbb
xchg
aam
xchg
es
xchg
fstp
insl
xchg
cli
test
inc
jno
bound
sbb
or
cmp
dec
and
aam
cltd
fwait
pop
or
aad
add
or
jmp
movsb
leave
fsubl
cld
std
ja
ja
popa
sbbb
test
ret
in
shrb
xor
test
mov
das
enter
aam
js
sub
into
cwtl
push
lahf
inc
sub
addl
push
cmp
subl
cmp
mov
cltd
pop
adc
mov
les
adc
mov
js
scas
cmp
bound
jnp
shr
adc
movb
adc
pop
mov
test
dec
sub
inc
sub
leave
cld
add
fisttpll
and
lret
jge
xor
scas
add
mov
cmc
inc
jl
dec
scas
pop
pop
shll
jmpw
xor
mov
sbb
fsub
scas
std
int3
lcall
gs
iret
fdivrs
mov
aaa
fs
fldt
push
cltd
or
dec
sub
mov
sbb
adc
je
aad
adc
dec
fs
andb
pop
icebp
loopne
sbbl
adc
add
dec
jno
test
sub
ss
sbb
lods
scas
inc
lods
cwtl
imul
ja
dec
inc
mov
cmp
push
lret
jns
jmp
inc
cwtl
xorb
lret
mov
xor
orb
push
test
aas
rcrl
inc
mov
imul
cmpsl
aad
jnp
xor
mov
cld
mov
adc
xchg
sti
cmp
cld
insb
aam
mov
sub
fiadds
sub
mov
pop
mov
adc
or
in
imul
leave
adc
cld
xor
pushf
pop
xlat
movsb
cmp
mov
lds
lret
int3
std
aaa
mov
pop
and
cmc
jns
aas
jmp
jl
cmpsl
add
pop
jecxz
sbb
pop
sbb
pushf
add
les
push
ret
jmp
lret
push
es
rorl
xor
in
dec
das
repz
inc
cmp
icebp
push
cmc
xor
cmp
decb
inc
ss
dec
dec
int3
data16
ja
lret
call
push
add
insl
lcall
out
jg
sti
outsb
push
pop
addr16
mov
jo
push
push
fwait
xor
mov
repnz
cmpsl
insb
adc
adc
sbb
adc
cmp
mov
test
daa
in
neg
mov
insl
cmpsl
shrl
xchg
je,pn
nopl
mov
adc
or
lret
dec
lds
movsb
out
hlt
mov
lret
fldl
pop
iret
cmp
xchg
jg
pop
call
sbb
enter
xchg
add
push
sub
push
sub
int
loop
xor
repnz
outsb
mov
fbld
shlb
xor
insb
push
mov
add
cmp
ds
rorl
inc
ss
jg
cmp
fs
and
xchg
cmp
add
sti
and
inc
mov
sti
js
divb
stos
sbb
xor
sub
sub
imul
xchg
insl
inc
cmp
mov
cmpsb
or
out
out
or
or
movsl
shll
das
insl
mov
or
mov
rcr
add
jmp
cmpsb
cmpsl
mov
movsb
adc
dec
cmp
jo
and
xor
push
repnz
add
push
dec
mov
adc
idivb
cs
sbb
sahf
pop
cmp
out
dec
inc
or
cmp
jp
dec
xor
sub
push
xchg
sti
mov
sbb
arpl
add
insb
std
rorl
cmpsl
stos
or
adc
or
jo
add
aam
imul
and
mov
mov
dec
je
cmp
jg
cmpsb
xchg
inc
mov
loopne
mov
cmp
shr
and
jge
jmp
xchg
leave
mov
push
add
push
push
call
pushf
cmpsl
cmp
aam
jecxz
add
push
or
jmp
mov
pop
call
adc
xchg
inc
fisubs
lss
mov
fldt
ret
outsb
insb
xor
scas
adc
divl
and
arpl
lds
mov
les
sub
push
mov
imul
cmp
cmp
in
xchg
jecxz
mov
dec
cwtl
sahf
scas
pop
xchg
and
push
add
add
cmc
jmp
mov
lea
xor
pop
jnp
mov
cs
pushf
inc
mov
mov
inc
cwtl
or
stos
sbb
cmpsb
mov
lea
sbb
mov
mov
lods
int
into
dec
dec
inc
shll
sti
xchg
and
push
jb
ficompl
dec
div
lcall
test
xor
outsb
gs
sub
fisubl
fisttps
mov
sbb
cmpsl
data16
in
cmp
outsb
push
arpl
mov
and
cmpsb
mov
call
xor
jl
jmp
or
dec
and
push
pushf
and
fs
cs
add
pcmpeqd
in
cmp
aam
bound
push
cmpsb
sbb
mov
cmp
add
dec
aas
xor
mov
clc
movsb
adc
mov
clc
std
and
inc
push
lds
in
mov
test
enter
push
stos
sarb
pop
xchg
imul
repnz
mov
and
ljmp
cmp
outsl
ret
fistpl
jnp
and
pop
push
jno
dec
adc
mov
add
mov
sub
dec
ljmp
sbb
sbb
dec
fs
sahf
repnz
bound
xor
cmp
pop
xor
mov
popf
lds
call
jg
mov
rolb
cmp
scas
or
jmp
movsb
sti
je
jnp
nop
mov
hlt
dec
test
sbb
push
scas
sub
push
jno
scas
aam
lcall
sbb
cmpb
pusha
add
pushf
leave
push
and
loop
mov
xor
ret
jmp
iret
insl
addr16
jns
mov
mov
jo
gs
xchg
repz
lock
pusha
mov
lods
and
and
and
sub
imul
dec
add
mov
xchg
push
sahf
int3
rcrb
repz
or
push
movsb
rorl
jg
in
insl
int3
outsl
out
lret
lds
mov
cmp
je
out
xchg
cltd
adc
loop
dec
pop
shr
call
push
push
mov
xchg
push
stos
fisubrl
lods
test
push
pop
sub
sbb
push
cmpsl
dec
outsb
enter
add
xchg
jo
scas
and
cmp
inc
ficompl
add
in
mov
or
ror
push
pop
mov
sar
mov
lea
imulb
add
pop
sarl
xchg
mov
cli
aaa
xchg
mov
int
inc
inc
jg
push
inc
push
pop
int
cwtl
pop
movsb
loopne
adc
dec
nop
or
enter
ss
mov
test
gs
xor
out
mov
add
shll
scas
adc
popa
xchg
push
frstor
push
jl
mov
mov
loope
fildll
sahf
mov
add
pop
das
or
cmp
pop
xor
mov
fcom
jge
push
andb
adc
pop
test
fwait
cmc
imul
decb
cmc
repnz
ficomps
mov
dec
xor
stos
pop
test
stos
roll
push
aam
fstl
mov
adc
pusha
push
pop
and
or
xor
lods
lock
mov
add
sbb
push
or
out
cs
data16
fsubrl
mov
add
add
dec
mov
out
and
lret
cwtl
jge
add
int
stos
out
mov
mov
push
xchg
dec
test
mov
lea
and
mov
push
and
mov
add
xchg
lahf
les
pop
sub
or
scas
in
test
mov
cli
pop
or
inc
xor
mov
stc
inc
pushf
lods
xchg
sbb
ja
cmp
int3
xor
add
mov
ret
inc
jo
out
test
push
into
in
int
add
int
dec
aad
cmpsb
aam
sbb
std
and
mov
and
data16
dec
pop
mov
mov
fisubrl
das
js
jns
sbb
pop
movsb
test
and
xchg
sub
mov
ds
mov
mov
mov
dec
cmpsl
jp
xchg
fdivs
xor
push
popa
aad
dec
cmpsb
mov
pop
mov
sub
add
jne
out
mov
xchg
inc
cld
mov
shrl
bound
cmp
cmp
call
rol
sbb
sbb
sub
imul
inc
mov
js
pop
inc
sub
xor
sbb
scas
test
outsl
orb
mov
stos
mov
cmp
push
push
jno
popf
test
push
jecxz
lahf
subb
rol
add
ret
movsl
imul
arpl
or
adc
adc
js
aas
sub
jl
in
add
inc
push
lods
pop
dec
push
mov
inc
mov
inc
fistpl
movsl
out
push
ljmp
push
in
adc
and
lret
sbb
icebp
ds
mov
mov
lds
adc
das
mov
pushf
sub
xor
push
push
daa
sti
lock
daa
jnp
add
xchg
popf
mov
inc
inc
out
adc
mov
jo
scas
mov
jnp
ljmp
sub
sbb
movsb
jecxz
mov
jl
xor
push
repnz
dec
inc
mov
imulb
mov
dec
test
nop
adc
xor
mov
je
mov
pop
in
ljmp
xchg
mov
test
leave
or
xor
push
or
insb
push
jecxz
repz
clc
cmc
ljmp
xchg
cmp
repz
mov
sarb
aas
loop
stos
mov
mov
imul
push
fisubs
stos
sahf
inc
or
pop
pop
je
test
dec
loop
push
xor
fcoms
xchg
leave
hlt
push
mov
call
jb
int
rol
xchg
sbb
ret
scas
out
mov
lods
jg
out
fs
sub
sbb
addl
fwait
lods
call
cmp
inc
out
dec
je
std
sub
inc
ret
push
cmc
fisttpl
push
ret
es
cmp
jecxz
gs
rcrl
jecxz
pop
stos
sub
inc
fidivl
fisubrs
ret
sbb
add
inc
xlat
nop
or
inc
movsb
inc
jnp
pop
std
sbb
loope
loope
mov
lds
fisubrs
rcll
pop
lret
xchg
cmc
inc
shlb
mov
iret
dec
mov
loopne
cmpsl
mov
jno
xchg
pushf
stc
shl
xor
and
pop
xor
int
jle
adcb
test
and
xchg
std
faddl
jl
addr16
in
stc
cmp
int
jmp
loop
subb
inc
fists
lds
in
rcrb
push
fs
outsl
push
sbb
pop
jbe
sub
insl
push
xchg
cmp
mov
pusha
fs
dec
adc
into
pop
lret
xchg
in
fsubrs
cmp
outsl
jno
adc
shll
stc
xchg
cmp
sub
xchg
mov
jnp
jg
shll
rorl
adc
cmp
lret
pop
or
mov
jl
in
jmp
dec
lahf
mov
sbb
pusha
and
je
outsb
fsubrl
mov
repz
sub
sub
push
adc
sub
mov
xor
sbb
fwait
data16
cmc
jae
stos
lods
xor
adc
rep
add
cmp
pop
fistpll
aas
jp
cltd
scas
sub
hlt
dec
scas
ficomps
pop
fstp
mov
das
push
pop
imul
divb
aam
aam
sub
jnp
xor
fwait
and
fs
and
add
stc
sub
xor
adc
push
icebp
stos
data16
or
sarb
std
mov
xchg
inc
popa
inc
lahf
push
mov
xchg
rorl
out
and
push
xchg
cmpsl
ljmp
sahf
fld
xchg
lahf
sti
mov
lahf
push
pop
pop
imul
mov
out
iret
xchg
jbe
jecxz
ss
emms
shlb
cmpsb
xchg
dec
out
shll
inc
pop
fnstcw
inc
stc
xchg
jno
jl
xor
push
cld
mov
mov
jo
mov
inc
std
and
hlt
popa
push
leave
test
mov
dec
popa
imul
repz
sahf
pop
jne
mov
jecxz
sub
sub
cmpsl
fwait
mov
adc
cmp
sbb
ja
cltd
inc
mov
iret
clc
js,pn
xlat
nop
ljmp
loope
inc
ret
cmp
ljmp
test
out
aas
repz
sbb
jae
std
call
or
in
cs
dec
jmp
mov
pop
arpl
addr16
xchg
sub
aas
test
into
mov
outsb
pop
loope
imul
xchg
inc
fsubs
or
fisttpl
add
or
lret
call
xor
leave
cmpsb
dec
loopne
push
jno
testb
or
or
add
cmc
pusha
test
add
lock
push
movsl
int
fwait
in
stos
lret
sbb
in
fdiv
add
shrl
pop
add
int
ficompl
pop
lahf
sbb
in
mov
mov
adc
arpl
ret
and
dec
mov
dec
add
mov
cmpsl
pop
int3
sbb
jns
fs
mov
mov
es
or
adc
mov
in
lret
loope
imul
je
aad
iret
inc
mov
stc
pop
dec
insb
scas
xor
mov
mov
or
sbb
lods
mov
imul
xor
dec
ret
loope
dec
ds
add
and
and
fmul
sti
movsb
adc
push
xor
popf
not
in
sub
cwtl
in
insb
mov
adc
scas
mov
ss
xor
and
divl
dec
shlb
loope
bound
cltd
std
fsubr
sbb
aas
inc
imul
or
in
cmc
js
push
push
xchg
enter
pop
cmp
insb
cmpsb
pop
aad
xor
adc
ror
imul
jae
mov
loopne
fcoms
mov
gs
out
jns
mov
pop
fdivrp
or
mov
scas
nop
inc
push
lock
or
fs
cmp
mov
lods
les
fstl
jae
testl
rorl
dec
mov
mov
jmp
les
xor
add
hlt
daa
xor
popf
cwtl
clc
loopne
jo
outsb
insb
cli
ja
mov
adcl
jg
mov
sbb
jge
mov
cmp
cld
inc
leave
outsb
loop
push
enter
add
xor
mov
or
pop
in
mov
pop
add
ja
pop
test
sbb
adc
ret
leave
xchg
iret
loopne
dec
pop
or
cli
imul
pop
xor
dec
mov
push
xchg
push
mov
push
dec
pop
pushf
aam
cmp
mov
sbb
movsb
jae
or
cmp
sbb
pop
mov
mov
pop
push
orl
fsubl
hlt
mov
pop
ja
stc
xor
into
sub
mov
jnp
cmp
ror
jge
dec
adc
xchg
inc
jecxz
aaa
sahf
mov
add
arpl
imul
lret
test
aad
into
cmp
aas
insl
test
sbb
or
cmp
jae
pop
mov
subb
dec
xchg
in
adc
sti
dec
push
inc
sbb
cltd
mov
into
insl
mov
inc
mov
ja
add
add
das
lcall
movsb
cmpsl
neg
enter
aad
in
xor
ret
mov
pop
pop
test
add
jns
in
pop
xor
mov
iret
xor
xchg
cmp
and
sub
dec
pop
lock
in
fs
sub
daa
mov
ret
mov
and
daa
jl
pop
jp
lret
rorb
or
dec
or
push
jnp
pop
sub
xchg
lahf
add
mov
cmpsb
aam
shlb
adc
imul
adc
jns
cld
and
movsb
add
scas
and
adc
enter
pusha
ret
cs
lock
mov
push
or
add
mov
xor
cmp
mov
jo
dec
push
popa
sub
aam
cmp
imul
lds
add
xchg
sub
inc
cmp
cld
stc
cli
subb
shrl
into
jno
mov
or
jecxz
cli
pop
mov
leave
je
sahf
sarb
push
xchg
add
cmpsl
lahf
mov
add
adc
sbb
in
aaa
sub
mov
mov
dec
pop
mov
adc
jbe
int
pop
in
jg
aaa
outsb
xor
dec
sbb
push
sbb
xor
xchg
lea
cmp
sub
and
xchg
mov
fstpl
orb
sbb
sti
lret
jmp
inc
scas
push
mov
pop
inc
xor
jno
push
sbbb
mov
pop
andl
jecxz
push
xor
int
movsl
pop
popf
sbb
scas
xor
iret
movlhps
adc
push
call
jmp
les
mov
adc
js
fnstcw
movsl
jns
mov
mov
ffree
mov
pop
add
inc
rol
loop
cmpsb
sbb
aad
mov
push
xor
nop
jmp
jno
mov
xor
in
aaa
iret
lods
dec
ja
adc
xor
loope
cmp
jno
xor
lret
push
inc
xchg
pslld
movsb
mov
fisubl
fwait
cld
mov
imul
or
mov
inc
pop
jl
inc
nop
sbb
mov
ret
ljmp
das
cltd
addr16
push
sti
inc
push
xor
hlt
add
or
imul
pop
mov
fisubl
inc
leave
js
popa
adc
into
mov
cmp
xor
xchg
mov
daa
jno
mov
xor
in
daa
ret
push
mov
imul
fbld
shlb
xchg
pop
cbtw
mov
aas
fnstcw
jmp
or
dec
mov
into
subb
jns
insl
out
out
aaa
fwait
mov
or
and
xor
jecxz
dec
negb
sbb
sbb
lea
dec
push
xchg
push
jl
mov
and
out
enter
aaa
scas
inc
cs
cmpsb
enter
dec
rorb
xchg
inc
into
adc
js
jl
inc
out
dec
imul
mov
stc
xor
je
xor
stc
inc
fs
ds
subb
and
mov
lock
add
rcrb
leave
add
test
stc
cli
add
inc
xor
scas
inc
enter
outsb
fiadds
sub
popw
mov
add
pop
push
dec
popa
cmp
stc
dec
lods
out
sbb
xor
lods
cmp
decb
or
ret
sbb
xchg
jb
pop
fiaddl
jo
mov
cwtl
sbb
je
mov
xchg
stos
inc
mov
cmp
fcoms
mov
sahf
add
dec
jnp
daa
scas
les
jp
sub
or
das
pushf
add
xor
or
sub
or
out
mov
sarl
loop
push
fstl
int
repnz
mov
xchg
ret
int
cmp
scas
inc
inc
push
jbe
ds
mov
dec
js
mov
adc
lahf
shll
std
mov
arpl
lods
xchg
mov
stos
fwait
push
loop
jmp
xchg
pop
pushl
ss
out
mov
movsb
inc
jbe
cld
push
stc
arpl
cs
or
pop
sub
push
dec
sbb
repnz
clc
test
sahf
jmp
fcmovne
aad
nop
pop
xchg
loop
add
cmp
fwait
inc
stos
jne
inc
lea
jb
pusha
pushfw
lcall
iret
fdivrl
movsl
in
icebp
sub
scas
inc
or
sar
mov
int3
lds
rorl
xchg
sub
fcmovnb
push
fisubrs
pop
pusha
in
push
pop
push
unpcklps
cmpsl
outsl
loop
test
fsubs
pop
hlt
or
dec
dec
mov
insl
mov
add
icebp
cltd
adc
loop
pop
adcl
lea
call
xchg
gs
loope
sbb
das
dec
cmp
repnz
bound
sahf
lret
cwtl
lahf
or
or
lods
xlat
push
adc
das
cmp
jns
mov
fs
outsl
inc
pop
in
jp
or
daa
cwtl
icebp
push
mov
sub
rclb
mov
rorl
cmp
insl
in
mov
or
scas
inc
add
sbb
xchg
push
mov
or
dec
stos
sahf
sbb
and
and
rclb
mov
sbb
test
pop
pushf
sbbl
repnz
aam
cld
sbbb
add
pop
jmp
dec
mov
inc
and
fsubr
or
push
pop
lock
jl
inc
push
cs
aam
enter
jge
rorb
or
loope
sub
or
push
cmp
mov
imul
mov
mov
pushf
mov
ja
xchg
add
mov
leave
xchg
js
inc
xor
pop
push
aam
jns
mov
ljmp
je
js
cmp
imul
pop
dec
cmp
inc
bound
adc
cmp
imul
or
shll
popl
adc
sbb
mov
mov
enter
lcall
sbb
xchg
popa
lcall
xor
popf
mov
mov
fcomps
mov
jle
adc
jmp
push
mov
es
push
stc
pushf
cmpb
movsb
stos
adc
pop
adc
xlat
sbb
mov
lret
das
push
outsl
cltd
mov
les
stos
lret
cli
sti
test
cmp
push
or
cs
call
adcl
cmc
cmp
dec
mov
jno
push
fdivrs
fcom
push
or
aas
out
test
lods
xchg
jbe
pop
xor
xchg
movsb
adc
popf
jmp
adc
lahf
sbb
dec
sbb
in
jnp
lret
or
inc
and
xchg
iret
and
outsb
addr16
inc
xor
testl
test
lret
insb
xor
js
mov
notl
daa
in
ds
dec
and
dec
ret
cs
adc
push
popf
in
enter
mov
jg
pop
popa
sbb
shll
push
std
lea
int3
scas
pop
xchg
xchg
push
push
sub
loope
pop
adc
les
cmpsl
mov
insb
jle
loope
inc
xor
lret
fwait
in
or
test
fistpl
stc
add
add
idivb
in
xor
inc
add
or
movsl
mov
add
pop
inc
in
es
insb
push
sub
mov
mov
jp
or
xchg
push
jno
je
add
ret
insl
pop
inc
jne
jb
mov
cmp
in
mov
mov
insb
lcall
jge
and
inc
addb
outsb
adc
addr16
mov
sbb
mov
inc
out
jo
in
or
popa
shll
js
jg
pcmpgtb
lret
test
mov
xchg
loope
les
dec
ds
mov
stos
psrlw
pop
push
dec
cmp
cltd
subl
ljmp
add
sbb
jp
cmp
and
xchg
mov
xchg
popf
and
push
or
cmp
loopne
cmp
fwait
mov
mov
ja
push
pop
aad
ret
hlt
jo
movsl
popf
nop
negl
aaa
mov
pop
xchg
sbb
inc
xchg
xor
pop
inc
lock
sahf
dec
or
je
mov
push
xor
lret
push
out
imul
pop
jge
imul
mov
inc
lock
inc
mov
icebp
ret
enter
mov
or
xchg
mov
mov
leave
mov
sub
call
rol
sbbb
aad
xor
pop
ftst
ret
push
cli
iretw
jo
out
movsb
push
cmpsl
mov
dec
adc
sub
cmpsb
cmc
test
fildl
daa
mov
pop
fwait
inc
push
xchg
dec
popf
cmpsl
push
or
mov
jne
dec
mov
add
pop
inc
or
mov
sbbb
push
pop
dec
mov
aam
and
jmp
mov
shll
loope
xchg
fldcw
jp
and
push
pop
push
xor
out
adc
add
scas
into
pop
jae
adc
cwtl
rcrb
sub
sbb
aam
shll
or
les
fisttpl
fdivrs
leave
jle
repnz
sub
fcoml
cltd
loope
or
adc
jmp
push
mov
cmp
sbb
sbb
sub
in
mov
pop
notl
add
push
sbb
sbb
pop
add
mov
add
pop
mov
lods
mov
push
int
aas
mov
jp
fnstsw
adc
aad
aad
inc
mov
sbb
xor
or
and
or
mov
jne
sub
lods
and
xchg
lret
rorb
sub
loop
nop
sub
xchg
jge
fimull
xor
cmpsl
divb
mov
dec
rcr
push
imul
test
or
pop
lcall
inc
sbb
cmpsb
mov
jge
in
add
push
test
out
movsl
or
pop
pop
addr16
and
jp
xor
push
sbb
in
inc
dec
rorl
cwtl
lds
push
sub
fnstenv
push
mov
add
ret
test
test
inc
cli
int3
js
loopne
into
mov
cmpsb
push
push
nop
popf
ret
jle
mov
lret
out
sbb
out
jae
das
out
xchg
jp
and
pushf
mov
bound
pop
mov
leave
xchg
cmp
push
mov
and
add
xor
pop
push
lcall
mov
fmulp
jae
lods
mov
mov
dec
jp
imul
aaa
pop
pop
add
and
aaa
jecxz
xchg
mov
mov
lcall
mov
fs
adcl
popa
or
sbb
dec
push
xchg
in
test
fdivrl
mov
cld
mov
js
cli
mov
subl
stos
data16
xor
mov
stos
sub
stc
inc
ret
and
call
sub
pop
add
shlb
mov
cmpsl
ja
jge
xchg
xchg
cmpsl
mov
imul
jb
arpl
cs
sbb
outsl
inc
add
cli
repnz
push
jne
pop
stos
mov
leave
jecxz
dec
popa
clc
adc
pop
mov
sub
jb
fucomip
and
outsl
mov
stos
mov
dec
test
iret
sbb
test
jne
rcrb
fdivp
mov
sti
mov
pusha
frstor
cli
fcom
push
scas
jmp
and
add
movd
or
ja
popa
pop
adc
fisubrs
jecxz
inc
enter
sarb
ja
or
lret
aad
pop
xlat
or
loopne
pop
adc
out
mov
dec
lret
hlt
shrb
push
cmpsl
aad
mov
movsl
inc
push
mov
es
pushf
xor
push
inc
mov
pop
arpl
xchg
and
insl
pop
fcompl
cmp
mov
lar
mov
sub
push
pop
pop
loop
pop
in
xchg
lods
jno
ss
jmp
lcall
cltd
mov
loopne
add
xchg
inc
lahf
sbb
mov
jbe
dec
mov
push
push
into
fiadds
out
sti
addl
lds
or
out
call
sbb
ret
addr16
mov
fsubs
cmp
sbb
inc
loopne
mov
loop
dec
ficomps
mov
adc
sub
and
inc
jb
xchg
dec
mov
out
and
push
insl
push
insb
lds
testl
push
inc
cmp
stc
and
sbb
cmpsl
cld
mov
bound
jmp
ja
and
and
jle
push
dec
jp
out
adc
or
jbe
xchg
inc
das
jecxz
aad
or
jno
icebp
mov
sub
adc
cli
inc
push
insl
ljmp
dec
mov
and
cwtl
cmpsl
mov
repnz
out
les
xchg
pop
cmp
imul
sbb
stc
push
pushf
sbb
pop
mov
pushl
xor
cltd
jmp
xchg
sub
in
jnp
divl
das
push
jmp
cmp
add
imul
test
mov
aad
jae
pop
xor
ja
and
pop
ss
adc
fisttpll
test
or
out
xchg
movsb
mov
cmp
dec
jp
dec
adc
push
nop
adc
mov
outsl
lods
inc
xor
fldenv
ret
push
fdivs
sarl
add
fs
push
shrb
dec
cwtl
sbb
stc
jecxz
hlt
and
repz
cs
xchg
cmc
dec
mov
push
xchg
mov
in
xlat
jmp
cmp
test
adc
jo
rcrl
js
aad
xor
fstpl
cmp
push
pop
mov
aam
mov
jge
test
sahf
subl
aas
cltd
cwtl
movsl
xchg
inc
lea
je
push
dec
les
fisttpl
movsl
loope
inc
adc
or
xor
push
stc
std
stos
mov
int3
loop
jno
lods
fiadds
push
jno
push
add
inc
ret
ret
and
and
and
sub
fnstcw
loopne
out
lods
lods
clc
adc
dec
stos
into
mov
inc
adc
push
fs
pop
sub
fdiv
sub
cld
pop
mov
sbb
pop
and
ret
mov
std
jg
ret
jmp
xchg
jns
rorb
std
outsb
jmp
mov
es
inc
cmp
or
and
fmull
xorl
mov
bound
aad
fucom
pop
sarb
pop
xlat
dec
or
mulb
jnp
pusha
push
sub
jb
mov
pushl
out
inc
roll
sub
rclb
mov
dec
add
testl
push
sar
cmc
mov
xchg
aas
pop
and
lret
out
inc
push
aas
add
xchg
jne
mov
jnp
inc
push
mov
repz
lahf
jp
movsb
sub
cmp
lea
mov
lcall
jge
mov
pop
pop
xor
pmaxsw
push
adc
fsubrp
mov
adc
cltd
or
int
push
aaa
lods
mov
loope
jns
in
in
idivb
jne
int3
mov
dec
stos
sbb
sub
ss
leave
outsb
pop
cmpsb
outsl
ds
ljmp
movsb
mov
sub
jg
insl
mov
sbb
fwait
int3
and
inc
repnz
subb
pop
jno
dec
mov
push
mov
push
int
push
lret
cmp
fstpl
jae
mull
imul
and
dec
insl
jae
xchg
dec
mov
cmpsl
test
push
imul
push
fstps
into
popa
mov
ljmp
nop
or
aam
aas
push
fisubs
cmp
inc
pop
fidivrs
outsl
mov
not
fst
ret
mov
in
xchg
in
enter
incl
movsb
stos
imul
jg
cwtl
and
flds
jo
sub
mul
mov
aad
ss
sbb
sub
pushf
xchg
subb
dec
sbb
repnz
sbb
fbld
imul
inc
repnz
sub
lds
mov
stos
adc
mull
popa
rolb
pop
popa
cmc
in
repz
or
dec
mov
rcrl
dec
dec
xchg
dec
inc
int
add
xor
xlat
cmpsb
in
test
mov
inc
sbb
subl
pop
out
inc
jge
mov
adc
mov
verw
cld
ret
imul
adc
lret
xor
mov
inc
out
mov
push
sub
dec
outsb
stos
lret
stos
add
aam
adc
xlat
xlat
pop
sub
imulb
mov
sbb
loope
jnp
jle
push
and
bound
dec
cmpsb
ss
xlat
mov
xchg
insb
lds
xor
cmpsl
push
aad
adc
xchg
or
out
pop
jp
jmp
push
andl
jg
flds
push
mov
call
nop
inc
addr16
int
adc
sbbl
xor
out
lret
add
ljmp
dec
jg
mov
repnz
mov
push
sub
stos
lds
sahf
outsl
ret
jns
repnz
pop
dec
sti
ret
arpl
imul
aad
mov
dec
arpl
mov
and
mov
pop
pop
sub
xchg
sti
stos
push
mov
loop
cmc
xchg
cmpsl
pushf
mov
xchg
jns
mov
pusha
sti
jb
sub
xor
sub
loope
sub
sbb
out
add
jmp
adc
cmc
aam
adc
lret
bound
ficomps
mov
pop
mov
aaa
cli
pop
dec
add
iret
push
insl
fistl
push
mov
rorb
and
pop
lods
leave
mov
mul
sti
dec
mov
jmp
ss
aam
jo
enter
xchg
add
sbb
cmp
jg
pushf
aam
popa
or
hlt
lods
mov
jmp
push
xchg
mov
lods
fsub
push
or
cmpb
es
shll
stos
dec
negl
fcoml
xor
cmpsl
int
xchg
sub
stos
add
jecxz
mov
dec
movsl
cmp
or
adc
call
push
cmp
jb
cmp
arpl
pushf
mov
out
adc
leave
arpl
popf
mov
stos
ljmp
hlt
push
mov
jns
mov
add
imul
mov
jg
rcrb
sbb
mov
mov
push
fs
adc
mov
in
sub
push
push
inc
or
mov
jl
jg
arpl
jb
add
pop
pushf
cmp
push
aaa
imul
fbstp
push
adc
mov
dec
adc
add
cltd
popf
mov
and
ljmp
repnz
cltd
stos
mov
push
fidivl
mov
leave
in
scas
push
dec
add
orl
rolb
pushf
dec
push
test
ja
push
mov
mov
xchg
mov
xchg
add
loope
xlat
movsb
insl
imul
pop
cs
adc
nop
gs
xchg
pop
cmpsl
movsl
ffreep
out
sti
jecxz
idivb
push
sbb
xrelease
mov
jbe
rol
pop
outsl
lret
aad
pop
cmp
mov
pop
sub
fs
pop
xor
out
jbe
sub
movsb
in
or
dec
loopne
pop
fdivrs
and
mov
adc
dec
inc
inc
sub
sub
sub
fsubr
cli
aaa
popa
std
dec
adc
aas
jp
addr16
loope
jl
jb
test
data16
mov
lret
adc
lcall
lock
jne
sarb
pop
outsl
insb
gs
dec
sub
mov
lret
sti
dec
mov
sbb
cltd
ja
jbe
in
stc
stc
mov
int
inc
pop
cmp
xor
cmp
shlb
and
mov
sbb
and
dec
inc
sbb
movsl
mov
std
pop
xchg
jg
repz
mov
stos
pushf
cmp
sbb
push
inc
pop
xchg
popf
repz
dec
imull
push
repnz
clc
fisubrl
inc
fbstp
mov
pop
fistpl
and
jge
jne
inc
add
mov
adc
cmp
mov
fists
scas
push
mov
adc
out
ret
cltd
mov
cs
pop
cwtl
in
sub
jo
mov
xor
xchg
sbb
mov
xor
jnp
jbe
out
add
lds
je
repnz
jl
out
sbb
jbe
inc
or
cmp
mov
orb
sarl
xchg
mov
in
out
imul
imul
pop
inc
inc
jle
fimuls
fstp
sbb
xor
rcll
cli
xor
inc
cld
test
sub
scas
jbe
aam
mov
jbe
fdivrp
mov
repz
leave
cs
into
cld
jb
mov
mov
push
jb
jno
out
xchg
in
insb
jl
jae
insl
sub
push
jae
and
lods
jge
cmpsb
sbb
pushf
daa
in
out
shll
in
xchg
rorb
lds
xchg
lock
cld
ficomps
icebp
inc
adc
push
out
es
xor
add
pop
xor
nop
mov
push
push
mov
lret
imul
negb
mov
add
scas
mov
jle
scas
lods
scas
push
xor
jb
js
jg
push
jmp
sbb
ret
dec
repz
or
repz
add
ret
dec
mov
aam
add
push
sub
pop
sti
xlat
inc
mov
dec
jmp
stc
dec
mov
scas
push
xor
bound
in
repz
inc
ds
xor
cmp
sbb
add
pop
mov
int3
or
dec
scas
or
dec
jb
popf
stos
cmpsl
in
lock
pop
lret
dec
repz
mov
pop
iret
dec
nop
inc
pop
pop
out
xorl
inc
xchg
sub
ds
insb
icebp
test
xchg
aas
cmpsb
xor
mov
pop
lods
or
jg
sub
cwtl
leave
jno
push
cmpsl
push
js
and
sbb
mov
cmc
stos
out
hlt
test
lea
add
fcoml
push
loope
jmp
lret
in
inc
and
mov
pusha
and
imulb
pop
jmp
cmp
pushf
push
lcall
xor
fcmovnu
mov
bound
cmp
popa
add
xor
int
cmp
xor
mov
in
test
loop
popa
sahf
in
int
mov
sub
and
inc
and
int3
xor
imul
push
sub
imulb
aaa
jl
daa
mov
mov
push
adc
mov
pop
xor
jle
clc
inc
inc
dec
inc
push
mov
push
nop
sahf
mov
insl
or
ds
sbb
addr16
shll
mov
xchg
inc
cmp
push
sub
mov
daa
insb
stos
lahf
add
cli
mov
inc
push
and
icebp
sbb
insl
call
not
sbb
ja
cmp
or
divl
xor
xchg
mov
daa
inc
rcrl
dec
aam
stos
push
mov
push
mov
jno
mov
arpl
fwait
mov
nop
sbb
xchg
push
negl
int
xchg
shlb
pop
add
jbe
add
mov
pop
jb
pop
in
test
and
negb
push
mov
je
mov
movsb
cs
and
dec
add
sub
movsb
and
push
inc
and
shrb
sub
sahf
and
jo
stos
adc
testl
icebp
mov
rcrl
out
hlt
rclb
rorl
push
mov
mov
icebp
clc
inc
in
push
sti
jbe
or
lret
clc
stos
pop
ss
repz
push
test
std
ret
std
adcb
fistps
push
lahf
mov
popf
jno
rcrb
paddusb
or
pop
sarb
and
adc
daa
sub
jmp
xchg
adc
nop
dec
scas
cmpsb
icebp
out
push
iret
popa
fwait
orb
sbb
ds
mov
jge
adc
mov
mov
fs
das
cmc
push
push
mov
jp
shll
out
fwait
je
sbb
sbb
mov
lock
cmpb
jae
loope
fstps
adc
push
cmp
inc
arpl
xchg
mov
idivb
push
scas
fisubl
inc
repnz
negl
dec
jmp
outsb
pusha
test
push
push
mov
jns
cld
and
sti
xor
icebp
outsl
mov
push
aam
shl
imul
and
ja
test
inc
jl
mov
inc
sti
test
inc
mov
mov
xor
xor
imul
sub
int
int
cld
dec
fadd
repnz
insl
push
jne
push
mov
addl
pop
pop
dec
adc
cmp
aam
in
pop
cs
rorb
jae
aad
test
loop
aaa
push
in
dec
cwtl
add
shr
and
lret
ficoms
fcmovnu
xchg
push
adc
add
in
cmp
aam
and
outsb
jp
xchg
push
sub
cmp
fsts
in
dec
and
jp
dec
cwtl
hlt
or
pop
leave
inc
adcb
cmovne
pusha
fiadds
movsl
mov
cltd
cmp
mov
icebp
pusha
xchg
pop
sbb
lcall
xadd
jne
or
mov
xor
pop
mov
push
stc
mov
ret
sahf
seto
push
fdivl
out
pop
xor
js
inc
lods
subl
lcall
andl
out
lea
mov
push
notb
dec
int
les
and
mov
out
add
or
add
and
mov
dec
cli
outsb
mov
mov
fdivs
push
jns
pusha
aad
sahf
mov
sbbb
nop
lahf
mov
xchg
push
insl
push
outsb
test
call
mov
jle
and
xchg
out
mov
filds
inc
jge,pt
jl
hlt
xor
and
cs
ret
imul
inc
jnp
cmp
mov
push
xchg
je
daa
scas
pop
xlat
xchg
out
lret
add
leave
pop
jg
pop
push
loop
mov
mov
mov
cld
xchg
je
xor
arpl
sahf
mov
add
insl
lock
aad
adc
test
lahf
and
dec
lds
mov
and
sbb
in
inc
mov
or
pop
cmp
aam
adc
or
sbb
inc
jmp
movsb
scas
cs
mov
push
int
inc
fists
jae
scas
fcomip
fdivrp
jno
cwtl
dec
insb
js
sbb
inc
shll
xor
mov
daa
scas
int3
rorl
iret
mov
pop
cmc
fs
jb
out
sti
addr16
dec
in
out
add
movsl
stos
mov
pop
inc
out
mov
subl
cltd
or
lods
les
push
sbb
mov
add
sub
out
push
mov
lcall
jmp
cmp
sbb
lcall
inc
into
mov
xchg
sub
sbb
or
lea
push
das
jo
pop
xor
lret
stc
roll
clc
add
sub
push
cltd
cmp
add
fstps
dec
sbb
mov
mov
pusha
fimuls
inc
icebp
inc
sbb
and
jl
sub
scas
loop
push
call
pushf
pop
cs
adc
fsubrs
xchg
push
cli
test
imul
jmp
adc
into
cld
out
daa
cmp
loopne
shrb
cmp
sbb
scas
mov
xchg
int3
or
or
pop
sub
jp
push
xor
xorl
ja
les
mov
or
stos
push
test
add
push
xchg
sub
iret
sbb
mov
cs
stos
scas
loope
cmp
es
outsl
xor
jae
adc
jg
lods
dec
in
fisubrs
pop
jp
arpl
dec
pop
cmp
lahf
dec
mov
sbb
dec
and
jle
enter
mov
xchg
das
jns
nop
jg
ja
push
rcrl
xchg
push
pop
aam
out
and
pop
insb
gs
pop
xchg
dec
sahf
mov
inc
xlat
mov
mov
repnz
and
aam
sub
popfw
scas
or
out
les
push
rol
jno
ret
mov
mov
add
nop
hlt
cmpsb
add
mov
mov
sub
mov
mov
push
outsb
fdivr
fstp
in
mov
lds
xor
js
test
ds
mov
jle
or
mov
mov
xor
push
out
or
sub
pop
aas
in
cwtl
jl
jo
add
push
ja
xlat
push
push
orl
adc
dec
dec
sub
adc
xlat
js
push
scas
aad
pop
add
mov
es
push
jno
int3
andb
movsl
xchg
aaa
xchg
fidivs
ret
lods
jo
fdivl
fisubs
scas
dec
arpl
fisubs
cmp
pushf
rcrl
push
fwait
ret
sub
lret
sub
push
add
cmp
sbb
dec
jno
sub
mov
cmp
call
call
ret
mov
mov
repz
into
mov
adc
dec
or
and
movsl
adc
push
dec
mov
das
ja
xchg
mov
and
mov
mov
testb
and
lods
int3
out
loope
aas
xchg
cld
sub
mov
inc
add
sbb
dec
mov
push
sbb
mov
mov
fwait
mov
jo
lret
jmp
or
jecxz
push
call
pop
add
loope
inc
pushf
adc
das
icebp
pusha
sahf
jbe
sbb
push
or
jecxz
insl
fnsave
xchg
pop
mov
inc
loop
std
and
scas
stos
cmpsb
insb
sbb
and
rol
inc
scas
jl
sub
jg
int
jo
stc
scas
xlat
add
cltd
cmpsl
int3
in
add
cmp
mov
and
cmp
rclb
cld
fcmove
leave
mov
add
fldcw
or
lods
adc
jns
dec
ret
mov
cmp
xchg
adc
xchg
bound
pushf
and
cmpsb
mov
fld
jnp
loop
add
xlat
fs
ljmp
add
mov
sahf
shlb
dec
int3
div
add
push
test
loope
cwtl
mov
and
inc
adc
inc
ret
loopne
pushf
repz
fs
out
nop
jne
std
jp
mov
push
roll
out
std
ljmp
es
dec
cmp
adc
cmc
sbb
mov
pop
xchg
test
xor
mov
dec
push
push
dec
jl
es
mov
mov
xchg
pop
lret
movsb
inc
sbbb
jo
pushf
sar
and
cltd
jae
aad
mov
dec
scas
jge
push
inc
add
cmpsb
xchg
aam
adc
inc
mov
cmp
pusha
pop
or
push
jns
xchg
cmp
fmull
inc
mov
xchg
xchg
inc
or
inc
fcmovnb
hlt
idivl
cltd
sbb
adc
aam
addr16
sub
sbb
jbe
pushf
leave
fstpl
push
in
dec
sahf
jne
sbb
mov
icebp
and
xlat
iret
push
filds
jbe
xchg
jle
lret
cli
mov
std
add
scas
mov
insb
sbb
mov
fistl
fisttpll
push
mov
jns
fisubl
push
push
lret
ljmp
insl
cmpb
mov
push
mov
mov
dec
push
jae
in
and
test
pop
dec
sub
and
inc
jb
loope
pushf
test
adc
mov
inc
das
outsl
cltd
sub
repnz
push
adc
rorb
daa
cli
ds
and
sbb
insb
cmp
mov
lret
inc
jb
mov
push
adc
cmpsl
call
or
cmc
mov
outsl
cmpsl
mov
add
inc
mov
repz
cmpsb
mov
loope
xor
pop
inc
dec
adc
aad
packuswb
dec
call
arpl
in
and
xchg
mov
sub
fldcw
nop
roll
call
aam
aas
inc
rcrb
xor
stos
sti
or
aad
push
jnp
dec
adc
mov
mov
inc
aam
test
dec
cli
fwait
or
push
mov
mov
and
jne
sti
insl
mov
ret
cmovno
jno
dec
add
pop
jb
leave
hlt
or
mov
in
sbb
dec
mov
aad
test
fcom
test
mov
push
xchg
jo
cmp
fcompl
gs
ss
js
push
test
jg
leave
fsubrl
pop
jecxz
test
xchg
adc
mov
shll
jbe
lcall
pop
dec
mov
xor
mov
lret
leave
mov
ret
popf
aas
dec
aad
pop
mov
imulb
pop
adc
and
lret
ss
push
mov
mov
fldenv
rclb
jnp
arpl
pop
cmc
pop
scas
std
jo
xchg
dec
sub
popa
imul
in
subl
sub
lea
data16
and
adc
les
iret
lock
outsb
mov
outsl
aam
and
inc
jo
xchg
sbb
push
jle,pn
dec
popa
pop
add
and
fsubrs
and
mov
adc
insb
jmp
inc
fldcw
lods
shrl
in
pop
mov
mov
xor
cmp
mov
ret
pop
cli
xchg
cmp
lcall
test
cld
fmuls
adc
dec
add
mov
xor
stos
lods
sub
inc
sub
fistpl
and
pop
or
mov
data16
or
mov
jb
dec
jmp
inc
enter
in
mov
ja
mov
mov
sub
fst
push
sbb
aas
mov
aas
jnp
repz
xor
xor
icebp
dec
roll
push
data16
sbb
push
and
sub
mov
and
and
sbb
sbb
pop
sub
pop
xchg
mov
inc
inc
push
add
inc
js
mov
mov
dec
aam
mov
jb
aas
adc
push
leave
dec
ficoms
test
bound
jns
and
aas
outsb
pusha
xchg
psubsb
inc
cmp
das
dec
jmp
lock
dec
and
cmp
lret
adcl
cmp
les
jp
or
test
fisubrs
add
divl
hlt
inc
sbb
inc
fucom
cmpsb
test
daa
mov
mov
xor
ss
xchg
cmpsb
mov
pop
push
xor
dec
inc
pop
fndisi(8087
cmc
cmp
pop
out
movsl
dec
icebp
out
clc
add
es
ret
inc
aas
je
sub
pop
adc
test
mulb
jecxz
leave
xchg
and
cmpsl
inc
outsb
sbb
sahf
js
jp
xchg
in
push
out
cmp
in
fwait
mov
xor
jmp
add
popl
xor
lods
mov
cltd
or
gs
fucomp
fmuls
test
jbe
add
mov
mov
insb
insb
mov
mov
out
std
pop
ds
orb
cmp
and
push
xchg
aaa
or
int3
xchg
dec
push
or
idiv
jne
sti
outsl
popa
dec
out
scas
adc
jns
mov
adc
or
sub
jbe
into
dec
inc
cmp
popf
pop
stos
cmpsl
pusha
out
pop
cli
cli
ret
fimull
dec
aaa
mov
out
mov
inc
xor
push
popa
sbb
rolb
fisttpll
sbb
jo
sub
mov
mov
or
pushf
push
aam
xchg
mov
push
shll
cmp
std
sub
xchg
loope
sarl
xchg
popf
jne
and
into
in
orl
mov
and
lahf
mov
cld
xlat
cmp
mov
pop
stos
ja
dec
stos
sbb
mov
int
mov
lret
jno
push
dec
xor
jp
jb
enter
or
xchg
jnp
out
in
sub
lcall
mov
xlat
mov
dec
and
push
fs
jle
aas
mov
repnz
lods
iret
pop
mov
mov
push
in
push
pop
inc
lds
lahf
pushf
mov
pop
xchg
orb
mov
loope
push
jno
push
and
adc
in
ficoml
and
and
jge
lret
dec
push
adc
xor
bound
mov
xor
sbb
shll
imul
pop
mov
push
lret
inc
mov
adc
int
test
int3
add
xor
jbe
aas
wbinvd
mov
sub
dec
jae
push
jge
dec
sub
or
pusha
movsb
or
sbb
pop
stc
ss
outsb
jno
push
cmp
push
sarl
andb
pop
imull
sub
out
sub
jb
jmp
cmp
sbb
cmp
scas
cmp
lds
imul
into
push
push
xchg
sbb
add
lcall
pop
cmp
mov
arpl
jae
push
ds
bound
add
lahf
popf
lods
loope
fwait
loopne
dec
ljmp
lods
dec
mov
mov
jne
add
insl
mov
repz
stos
nop
mov
bswap
sub
subb
sti
fisubs
pushf
xor
addl
in
imul
pop
and
test
xchg
push
daa
insl
jle
pop
scas
loopne
pop
popa
imul
xlat
repnz
in
fdivrl
aas
shll
sub
pushf
out
adc
add
repz
cld
sub
inc
call
into
cwtl
iret
lahf
adc
aad
xor
movsb
mov
or
in
or
iret
int
or
push
testb
xchg
mov
jne
sbb
in
mov
mov
test
pop
sub
stc
fists
cltd
adc
xchg
inc
addr16
jp
xorb
jmp
jae
jg
stos
shrl
test
and
cmpsl
ja
sub
movsl
test
xchg
lods
push
pop
test
cmp
call
repnz
movsl
stos
mov
cmp
cli
sbb
outsl
push
nop
shrl
xor
cwtl
inc
in
ds
std
cmp
jns
enter
xchg
inc
loop
lret
stos
jge
pusha
sub
dec
add
fs
out
mov
inc
push
stos
push
add
loope
inc
add
je
sbb
jmp
imul
dec
mov
and
dec
jnp
and
jno
outsl
je
or
repz
push
lea
test
andb
data16
loope
jmp
and
nop
sbbb
sbb
shrb
fisttps
movsb
lds
or
push
int3
jmp
shrl
popf
testl
loope
and
lret
insb
push
push
scas
add
cmp
and
jbe
pop
lret
es
dec
shll
out
adc
push
out
xchg
push
sub
nop
outsb
sub
int3
xchg
dec
test
adc
cli
inc
jge
xchg
push
in
cmp
leave
and
push
insl
sub
mov
jle
insl
mov
mov
sub
push
add
fst
mov
pop
xchg
leave
and
cmp
and
jl
mov
cmp
cwtl
push
mov
xchg
repz
outsb
shr
test
syscall
xlat
inc
push
fcompl
fidivl
fnsave
mov
repz
mov
imul
sbb
pop
mov
aam
pushf
sub
jb
shll
cli
jne
add
jb
jmp
mov
push
xchg
aam
lret
dec
jae
outsl
xchg
fs
cmpsb
xor
movsb
push
mov
into
jne
lds
or
fidivrs
add
cmp
in
repz
xchg
jb
arpl
sbbl
push
push
out
dec
fs
or
mov
mov
fwait
push
inc
fidivrs
add
rorb
jo
xchg
scas
sub
cmp
sub
push
lods
ds
enter
inc
push
mov
jp
mov
out
lods
mov
adc
test
or
out
pushf
incl
jle
scas
jmp
int
cmpsb
inc
daa
cmc
int
mov
xchg
movsl
test
movl
test
xchg
jmp
roll
test
js
and
push
push
push
mov
test
mov
cmp
iret
push
loop
les
ds
pop
inc
repz
sub
test
add
mov
push
outsl
dec
ss
dec
xchg
and
dec
sbb
mov
sti
out
jecxz
imul
int
imul
into
rcl
insb
cmp
invd
addr16
outsb
xchg
pop
hlt
lods
jecxz
popa
mov
cmp
xor
dec
add
test
xor
xor
and
cmp
xchg
sti
fsubs
dec
pop
pop
mov
test
or
dec
loope
add
in
roll
dec
mov
jnp
add
shl
pop
sub
cmp
out
mov
iret
push
sub
sbb
test
inc
test
pop
sbb
jno
sub
das
aas
cmp
and
mov
mov
fs
es
adc
fwait
std
lods
jno
test
jmp
in
inc
push
dec
cmp
jnp
push
mov
test
push
add
sahf
pop
fnsave
xor
fcompl
test
push
xchg
pop
pop
clc
lret
add
arpl
add
flds
insb
add
stos
cld
or
cmp
pushf
mov
push
jle
imul
jl
insl
rcrl
cmp
mov
insb
ficompl
in
aas
stos
xchg
adc
dec
cmpxchg
mov
sub
or
fnstenv
mov
lock
add
mov
mov
test
or
xchg
and
arpl
inc
jp
sub
jl
pop
mov
or
into
mov
lods
loope
aaa
push
add
dec
push
dec
fldcw
inc
enter
fmuls
scas
adc
rcrb
or
stos
xor
or
leave
mov
mov
mov
adcb
mov
mov
dec
sbbb
xchg
lret
sbb
mov
popa
lods
and
jp
stos
test
cmp
rorb
sub
mov
cmp
mov
rcrl
mov
or
push
xorl
cmpsl
mov
mov
mov
cmc
mov
call
sbb
adc
daa
sub
mov
xchg
lret
push
mov
inc
scas
int
inc
clc
fwait
pop
lea
dec
stc
pop
add
test
mov
mov
int
mov
push
xor
adc
mov
mov
xlat
inc
arpl
mov
mov
pop
push
sbb
cmp
ds
or
inc
inc
dec
sub
xchg
in
sbb
jnp
push
neg
lahf
stos
repnz
bnd
sti
insl
push
lds
jbe
into
cwtl
aas
dec
aas
cld
jo
dec
add
imul
push
dec
mov
cwtl
add
push
pop
push
cmpxchg
mov
ret
push
add
or
jns
sub
xchg
aaa
xchg
and
orb
stc
pusha
mov
jge
or
aad
mov
cmp
or
aas
push
loopne
pop
bound
mov
lea
adc
and
adc
loope
cli
outsl
fwait
loop
aam
adc
loop
adc
mov
movsb
or
add
cli
jb
and
or
into
lods
inc
sbb
mov
out
out
lahf
or
iret
in
arpl
sbb
fcomip
or
scas
imul
mov
imul
das
or
mov
in
inc
sbb
arpl
dec
nop
outsl
adc
push
es
loop
bound
or
mov
test
push
inc
je
out
pop
stc
gs
mov
divl
fs
inc
push
sub
sbb
jnp
fisttpll
sub
out
add
jnp
sbb
xor
int3
inc
or
mov
imul
push
push
ja
xor
mov
mov
inc
sarb
dec
cltd
dec
xor
mov
sbb
cmp
repnz
ss
xchg
loope
aas
ds
gs
lahf
xor
sbb
lds
pop
mov
imulb
popa
dec
jne
xchg
push
es
rol
sahf
xlat
cld
inc
lcall
cmp
rcl
adc
sbb
pop
sub
or
popa
xchg
mov
sbb
adc
and
divl
inc
adc
mov
xor
lret
xor
lret
ss
and
cwtl
mov
ja
sbb
shll
aas
mov
push
sbb
addl
lds
ror
mov
xor
push
pop
sbb
inc
and
jo
bound
sub
rolb
and
mov
xchg
xchg
and
mov
add
sub
jle
popf
in
xor
sbb
cmp
mov
daa
mov
xor
fisubs
loop
fsubl
bound
and
repnz
jno
cmpsb
jno
mov
mov
mov
ds
lcall
scas
out
mov
or
mov
cli
out
lods
packsswb
ret
sbb
xlat
leave
inc
lods
pop
bound
sub
pop
mov
iret
loope
call
shr
out
push
cmp
das
fbld
std
cs
jge
inc
jl
xor
test
aaa
mov
pop
jl
aaa
dec
paddsw
pop
loopne
adc
sbb
cmc
sub
push
mull
adc
sbbb
aaa
je
sub
test
stos
xlat
sti
mov
adc
insl
pop
sub
popf
lcall
cmp
sub
inc
idivb
inc
mov
in
and
lcall
pop
jbe
out
lea
cmp
jnp
xlat
add
xor
add
jle
pop
rclb
inc
mov
adcl
jns
notb
jmp
adc
sub
mov
arpl
push
pusha
push
push
jmp
inc
ljmp
enter
movsl
int3
add
mov
add
lods
jbe
pop
mov
outsl
pop
mov
push
cs
mov
scas
jo
dec
idiv
sbb
cltd
push
cmpsl
shll
mov
data16
mov
add
lds
push
mov
ja
jae
idivl
movsb
jnp
inc
das
jb
add
add
xlat
mov
pop
arpl
mov
adcb
ret
out
test
mov
jge
jae
cli
inc
and
jns
das
mov
lods
arpl
jo
pop
dec
push
jno
js
xor
daa
lahf
push
rol
outsb
ficompl
testl
add
lea
stc
outsl
inc
das
add
sub
inc
shlb
mov
out
adc
sahf
adc
int
inc
push
test
fcompl
mov
pusha
dec
mov
jns
push
add
add
inc
adc
out
xchg
add
test
xchg
fdivrp
and
or
in
das
fwait
enter
mov
add
jbe
mov
mov
aad
movsl
adc
mov
js
pushf
enter
rcl
das
int3
jmp
inc
fcoml
jg
sbb
push
sbb
xor
jns
add
mov
jnp
cwtl
sbb
or
mov
push
repz
adc
mov
cmpsl
jge
sbb
add
or
jl
aas
push
mov
fwait
add
dec
ret
imul
and
imul
add
cld
aad
pop
jne,pt
dec
stos
sub
and
sti
rcll
fucom
mov
daa
add
jo
lcall
sbb
jp
mov
jo
mov
dec
pusha
xchg
jecxz
jnp
into
jno
aad
cmp
sti
or
sub
js
jno
inc
push
ficoms
add
mov
cli
dec
push
pop
xchg
jns
cmp
sbb
add
loop
sbb
and
in
in
or
int
cmpsl
shlb
push
cmpsl
das
jge
sub
mov
and
lcall
inc
stos
dec
je
das
jmp
push
xor
out
pusha
pop
test
fdivl
test
xor
cmpl
jge
lds
stos
stos
lods
mov
scas
shll
popa
xchg
add
or
push
xchg
jb
jp
sub
mov
lock
stos
sbb
add
mov
out
movsl
inc
inc
jmp
ret
sbbl
mov
loopne
pop
fsubrs
push
je
pop
cmp
sbb
add
dec
and
mov
stos
or
push
bound
subb
mov
inc
mov
or
sahf
rcrl
inc
add
xchg
cld
lock
xor
pop
jns
ret
xchg
mov
sub
js
inc
mov
push
bound
xlat
loop
lahf
xchg
adc
fiaddl
mov
inc
mov
cld
inc
es
aaa
sbb
outsl
clc
das
hlt
cwtl
mov
hlt
pop
loope,pt
add
aad
cmpsl
fildl
and
icebp
scas
mov
and
add
xchg
sub
mov
mov
in
and
pop
adc
xor
cmp
mov
or
jle
in
add
push
enter
lods
and
mov
negb
int3
scas
mov
or
dec
test
cmc
push
imul
xchg
lods
xchg
cltd
jge
mov
mov
popf
subb
scas
jge
mov
sub
mov
adc
cltd
dec
dec
add
cmp
ret
rcrl
lea
pop
clc
cmpsb
adc
xlat
pop
or
and
cmc
and
adc
or
in
xchg
push
sbbb
jmp
in
mov
mov
cmpsb
dec
imull
pop
jle
sbb
xlat
push
mov
dec
push
mov
data16
aam
mov
add
or
pop
mov
mov
mov
mov
in
cwtl
scas
int
int3
mov
cmp
in
popa
subb
jle
aam
mov
push
dec
pusha
sarb
psubb
sbb
add
inc
mov
jmp
dec
push
mov
dec
lcall
dec
sub
push
add
dec
xor
fsubrl
xchg
cmp
or
std
push
mov
pop
push
std
addr16
repnz
cmpsb
xchg
dec
fists
inc
pop
repz
out
and
sub
popf
fidivrs
sbb
push
push
mov
xlat
int3
popf
inc
jmp
pop
mov
lods
xor
adc
ss
out
lret
add
iret
and
mov
add
lods
and
push
bound
push
call
gs
or
jne
dec
inc
xchg
daa
loope
mov
xor
jge
negl
and
push
int
fnstenv
dec
mov
insb
push
outsb
inc
pop
jo
lret
in
out
sbb
out
jecxz
repnz
add
outsl
xchg
sub
std
fimuls
daa
insb
dec
jae
imul
scas
lahf
repnz
aad
in
and
xlat
ljmp
adc
and
and
andl
mov
pop
loopne
cmp
ss
push
adc
sbb
mov
cmpsl
sub
mov
mov
ret
jg
inc
sub
push
ret
mov
sarl
cmpsb
movsb
dec
mov
adc
icebp
scas
add
arpl
mov
leave
leave
jmp
ds
xor
jae
mov
pop
push
inc
jae
fs
adc
fs
std
repnz
pop
sarl
fildll
test
mov
popf
add
shrb
shr
xor
jg
jb
jecxz
leave
stos
xor
mov
lods
popf
sarb
insb
orb
sbb
shlb
push
popa
dec
ret
ret
jl
mov
daa
sahf
movsl
sbb
sti
movsl
arpl
insb
loopne
mov
and
aad
lret
call
sti
jge
xchg
mov
xor
repz
lods
xor
jb
test
push
stos
and
xor
mov
mov
pop
movsb
mov
push
mov
xor
std
xchg
lret
sbb
or
and
bound
mov
mov
jb
push
pop
sub
sbb
into
cmpsb
cmpsb
sbbl
cmp
ss
and
inc
test
enter
je
aas
lcall
ret
inc
int
mov
nop
jl
in
stos
mov
test
sbb
mov
push
or
lds
and
mov
rorb
sub
sarl
xchg
dec
or
cld
pop
repz
int
xor
pop
add
mov
mov
fwait
outsl
add
addr16
dec
xchg
fldt
add
push
mov
repz
aas
std
arpl
or
cli
push
or
or
xchg
add
cmp
jecxz
addl
sbbb
mov
fcmovnb
and
mov
push
sub
pop
mov
shlb
sbbl
push
stc
clc
cltd
or
or
insb
lahf
mov
adc
notb
aas
sub
push
pop
add
lods
mov
fisttps
inc
cmp
cld
fsubs
push
pop
push
mov
inc
jg
addr16
or
call
cmp
pusha
mov
sbbb
cmpsb
lret
pop
out
dec
pop
mov
mov
data16
dec
lods
mov
fldl
cmp
dec
addr16
popa
cld
adc
push
dec
xchg
dec
scas
popa
jnp
pusha
inc
dec
out
jle
fisubl
xchg
fs
js
adc
ds
jg
mov
xchg
jns
rorl
dec
aad
push
add
inc
jmp
xor
sahf
xchg
mov
adc
pop
add
out
dec
cmp
or
adc
push
data16
fadd
popa
jns
mov
adc
pop
into
out
adc
je
pop
sub
decl
lret
xchg
int3
push
es
jmp
hlt
mov
mov
push
xchg
stc
int3
ret
jnp
push
je
jp
pop
outsb
pop
sbb
xchg
les
outsl
sbb
mov
xchg
test
rcll
test
cmpl
in
adc
dec
or
ret
mov
pop
cwtl
push
aas
xor
xchg
sti
sbb
push
xchg
mov
jg
pop
loope
stos
jl
dec
ja
sub
jle
dec
mov
fs
jle
pop
inc
and
add
pop
adc
int
xchg
cmp
dec
fisttpll
mov
fisubl
insl
xchg
repz
xor
fcmovb
push
adc
adc
xchg
cmp
cs
mov
hlt
stos
out
cli
xorb
into
ljmp
push
sbb
insb
and
fcoms
ja
pop
cmp
push
lcall
jnp
inc
inc
js
xor
sub
shll
shlb
and
mov
hlt
sub
mov
mov
push
jl
adc
adc
dec
ljmp
lods
cmp
movzwl
mov
sahf
daa
dec
push
lock
sarl
stc
dec
rorl
ret
test
popf
and
jmp
out
and
pushf
adc
das
xchg
scas
xchg
cmc
fstpl
sub
lret
cmp
rcl
push
jae
cmp
jmp
xchg
in
jns
ret
and
sub
add
mov
stos
xor
mov
push
xor
outsl
cmpsl
daa
mov
sub
mov
xchg
aam
call
mov
es
or
jno
dec
rcl
inc
test
jle
mov
push
inc
xchg
jns
cltd
dec
popf
dec
stos
adc
loopne
stos
std
pop
ds
jnp
jbe
negl
sbb
pop
cld
mov
push
stos
xchg
mov
lahf
mov
push
stos
sub
cltd
lret
imul
into
jne
cmp
dec
xchg
or
repz
int
jmp
lds
mov
bound
dec
cwtl
xchg
sub
shlb
fstl
enter
ret
mov
ss
shll
out
imul
push
push
inc
popa
xor
lods
rcrb
add
add
shrb
int
xchg
subl
data16
mov
in
rorb
std
jne
test
xchg
cmp
dec
inc
cld
negb
lea
pop
cmp
jno
mov
or
fs
in
xchg
fcompl
push
fistpll
out
mov
mov
dec
adcl
xor
xlat
sbb
ret
aaa
popl
into
jbe
xchg
inc
cmp
imul
xor
push
fwait
arpl
pushf
icebp
jmp
inc
lock
mov
stos
imul
fmuls
mov
gs
pop
and
cs
jp
leave
mov
fucomp
mov
pop
ret
loope
fildl
icebp
sub
out
lret
adc
in
imul
xchg
and
lcall
sahf
ljmp
dec
jno
ret
mov
loop
je
add
add
frstor
sub
and
xchg
xor
and
lods
sbb
daa
lcall
cld
in
mov
xchg
leave
mov
mov
inc
mov
sub
inc
in
xor
push
repz
pop
in
jns
lds
or
dec
mov
add
push
mov
cmp
inc
outsb
dec
jmp
dec
dec
lcall
adc
sbb
test
or
add
out
stos
call
pop
cmc
add
shll
aam
push
sub
int
aas
add
xchg
aaa
pop
lahf
pop
in
mov
sbb
inc
mov
inc
lock
aas
mov
int
sub
mov
mov
xor
dec
add
out
lock
mov
jnp
add
mov
add
push
pop
jb
jne
cltd
int3
frstor
sahf
add
clc
sahf
pop
sub
outsl
faddp
fsubl
xchg
mov
ret
pop
std
loop
push
es
inc
push
into
cmp
jns
cwtl
in
adc
subl
sub
aam
test
mov
adc
movsl
jg
outsb
neg
sahf
push
jp
lds
xor
mov
push
mov
sub
xor
loope
insb
pop
stc
jae
sahf
mov
push
lods
pop
xlat
into
mov
xor
sub
push
push
out
jo
xor
inc
std
push
push
or
mov
sbb
bswap
inc
adc
stos
cmpsb
push
add
push
jge
jnp
enter
xchg
popa
fidivl
cs
sub
mov
mov
adcb
mov
outsb
add
aas
iret
daa
imul
popa
popa
cmc
lret
lahf
neg
xchg
arpl
gs
xchg
lahf
mov
bound
inc
int3
aad
lcall
faddl
out
mov
in
mov
mov
repz
popa
pusha
sar
fs
cmp
dec
shrl
dec
into
outsl
sub
test
movb
test
pop
inc
jns
jne
in
insl
shl
and
dec
jbe
add
lret
paddusw
mov
in
popf
push
pop
pushf
cmpsb
mull
data16
jl
lock
mov
arpl
dec
ds
jnp
push
xor
xchg
and
fisttpl
adc
lds
jmp
fistl
mov
pop
dec
out
pop
and
mov
test
adc
sub
insb
pop
fists
jp
inc
pushf
je
pushf
lret
dec
daa
mov
dec
dec
jg
and
mov
xchg
lea
in
in
pop
cmp
in
inc
jb
sti
xlat
insb
es
mov
bound
push
repnz
pusha
test
or
mov
stos
data16
call
mov
in
mov
fs
nop
adc
lcall
aas
movsl
add
mov
inc
mov
jnp
hlt
insb
cmp
sbb
xor
std
js
pop
or
mov
mov
sub
int3
mov
les
xchg
xchg
add
mov
lds
mov
cmp
xlat
and
xchg
sbb
pop
enter
adc
pop
push
cmp
dec
mov
ja
rol
push
sbb
in
fidivl
mov
and
std
jno
mov
push
xlat
fs
mov
push
setp
jecxz
adc
cmp
mov
jnp
roll
mov
jp
test
dec
or
fisttpll
jmp
pop
sahf
clc
or
push
jg
or
ja
sbb
mov
add
aam
loope
cmp
mov
dec
aas
mov
sbb
leave
push
push
popa
fsub
cmp
xor
dec
mov
mov
mov
xor
adc
cmp
pop
inc
ffree
inc
mov
adc
outsl
test
rcrb
jle
popa
cld
dec
lock
pusha
mov
ret
idivb
push
jle
mov
or
inc
clc
mov
jmp
sub
or
int3
adc
mov
ljmp
cmp
mov
jnp
lret
imul
inc
movsb
stos
add
sub
pop
cmp
loopne
xor
out
or
fildll
sub
pop
xchg
ret
dec
jge
adcb
mov
dec
jne
scas
xchg
lods
pop
sbb
mov
xchg
aad
mov
pushf
push
push
dec
fmul
stc
aad
subb
loop
shlb
xchg
xchg
ja
adc
fdivr
subb
hlt
jnp
and
adc
pop
rcr
clc
inc
out
dec
xor
sbb
push
mov
test
out
cltd
ficompl
in
sub
sbb
shl
test
insl
xchg
push
notb
lea
hlt
mov
call
jns
push
les
adc
add
cs
loop
pop
mov
test
loop
repnz
inc
loope
or
adc
insl
cmc
adc
mov
scas
outsl
test
and
push
sahf
pusha
cmpl
sub
fildll
pop
sub
mul
shrl
xchg
pusha
aas
add
or
scas
adc
ljmp
inc
les
dec
std
fsubrs
and
in
push
add
lock
inc
lahf
xchg
jmp
and
sbb
or
ret
dec
test
push
stc
xchg
test
movsb
call
mov
sub
mov
test
mov
cmp
nop
sahf
dec
mov
cli
rclb
bound
out
pop
aam
pop
notb
repz
xchg
stc
aaa
xchg
xchg
jo
add
imul
iret
mov
adc
jnp
push
aas
push
sub
inc
sbb
sarl
cmp
mov
ds
add
push
and
fstl
imul
mov
add
mov
loopne
add
cld
or
cli
xchg
dec
stos
nop
mov
sbb
out
push
adc
out
or
and
fidivrl
push
insl
fld
pop
add
xchg
lahf
in
daa
pop
jno
push
incl
xor
sub
loop
adc
jge
xchg
shrl
xor
mov
jmp
push
dec
pop
fxch
push
cmpsb
and
jp
sbb
add
std
sub
xor
sub
mov
inc
fstps
jbe
push
cs
push
sub
inc
mov
pop
nop
loop
inc
imul
or
lretw
inc
xlat
cmp
mov
in
and
pop
xchg
and
push
mov
rorb
in
pop
push
sub
out
sbb
fldpi
sub
fildll
movsb
repnz
cld
in
fnstenv
or
pop
idivl
and
push
jbe
aam
iret
lds
ret
pushf
fsubrl
in
and
popa
sub
dec
push
movsb
dec
popa
test
icebp
js
mov
mov
mov
cmc
xchg
daa
ss
push
cmp
loope
pushf
jl
clc
insl
mov
adcb
pop
mov
test
cmp
mov
in
arpl
loop
inc
push
or
jmp
mov
sub
clc
loopne
mov
pop
pushf
add
cmp
int3
testl
mov
imul
fcoms
mov
jmp
lcall
and
inc
das
cmp
imul
sar
xlat
mov
andl
data16
testb
and
or
mov
jle
inc
int
mov
rorl
test
out
out
dec
push
push
mov
mov
jns
lcall
cmpsb
inc
dec
mov
pop
lods
sbb
mov
xchg
bnd
mov
int
or
out
pop
fsubrs
and
stc
test
pushf
dec
addr16
dec
sbb
and
push
mov
xchg
sbbb
fidivl
int
push
fstpl
outsb
dec
dec
jmp
fucomp
push
fnstsw
lds
lret
cld
pop
ss
jecxz
xchg
popf
cmpsl
cs
pop
push
in
dec
push
test
hlt
push
stos
stos
push
or
out
push
lods
mov
and
sbb
cmp
push
mov
mov
push
test
jl
jmp
dec
aas
mov
sahf
adc
xor
imul
sbb
cmp
and
loopne
fsubrs
stos
lds
divl
flds
je
sbb
inc
push
mov
sub
sahf
dec
sbb
test
mov
outsl
popa
in
in
xchg
in
sub
stos
mov
mov
pop
rclb
pop
imul
mov
adc
popf
mov
imul
xor
mov
subb
dec
pop
mov
jecxz
cmp
outsl
xor
das
or
jb
loope
repnz
stos
sub
call
clc
js
cwtl
dec
fwait
xor
incb
or
stos
cmp
js
repnz
push
sub
push
xor
adc
jb
xchg
inc
sarb
cwtl
arpl
loopne
mov
dec
jge
push
xlat
andl
or
and
inc
into
lcall
es
ljmp
push
cmp
or
sbb
test
jp
xchg
jb
test
cmpsb
stos
movsb
or
ret
insb
negl
inc
mov
push
iret
iret
dec
lcall
out
mov
scas
int
sub
push
xchg
repz
jp
fdivrl
in
fcompl
push
fs
or
pop
xchg
icebp
out
jge
push
fimuls
call
dec
sbb
mov
lret
mov
pop
stos
jno
sahf
push
ljmp
fimull
or
std
jmp
cs
mov
popa
rol
xchg
bound
jmp
ftst
ss
scas
lret
push
mov
mov
mov
jmp
insl
mov
in
hlt
jge
test
sbb
repnz
std
out
jp
mov
shr
adc
dec
pop
adc
ja
cmp
push
insl
add
scas
movsb
add
xchg
jae
cltd
pushf
inc
arpl
adc
jmp
pop
imul
mov
sub
jp
mov
in
out
icebp
je
ljmp
jle
repz
roll
push
push
enter
aaa
xchg
xchg
xor
dec
ret
ss
dec
mov
mov
xor
fildl
lret
pop
gs
xor
mov
cmpl
pop
les
sbb
int3
xchg
xchg
pop
lea
ss
in
lahf
out
mov
sub
lea
lahf
add
jmp
and
fbstp
in
cmp
ds
xchg
outsl
enter
scas
insl
in
je
sub
out
fstpl
loope
adc
add
mov
push
and
adc
cmpsb
testl
lret
jmp
jo
xor
movsl
mov
cs
pusha
cmp
mov
jno
je
mov
rcll
sahf
xchg
iret
scas
mov
sbbl
mov
sub
or
xor
test
repnz
xchg
aaa
dec
dec
in
cmp
xor
mov
push
push
cmp
loop
jle
xchg
adc
dec
std
cmp
pop
sub
insb
lcall
cli
testb
mov
fs
fwait
sbb
push
lcall
fsub
fisubrl
mov
mov
cld
cs
mov
mov
dec
fstl
dec
jg
cld
insl
lret
fisubs
mov
rcrb
jb
hlt
push
aam
test
pop
ljmp
xor
daa
stos
into
loope
dec
pop
push
fsubr
jae
movsb
rclb
or
or
jo
addb
xchg
mov
rcll
in
and
cld
sub
test
enter
cmc
jb
push
subb
call
clc
xlat
mov
in
pop
stos
xchg
mov
pusha
xchg
gs
fdivrs
repz
scas
adc
xchg
jp
test
fbld
outsl
repnz
mov
jle
stos
out
mov
enter
les
mov
jmp
ret
arpl
fmull
cli
out
test
addr16
inc
sbb
add
push
xchg
ret
pop
mov
jge
cmpb
daa
subl
mov
outsl
inc
scas
add
mov
jns
and
sbb
cmpsb
lahf
adc
ret
push
decl
cmc
ret
push
ret
mov
lods
push
bound
mov
lahf
lret
daa
cmc
adc
jne
das
lock
cmpsl
enter
fistl
testb
xor
push
push
mov
sub
push
push
insb
data16
sti
outsl
xchg
mov
pop
ret
mov
mov
and
jle
sbb
mov
divb
inc
cwtl
stos
sti
int
add
add
mov
xchg
lret
in
sahf
sbb
mov
ds
cmp
sbb
outsb
fs
jbe
xor
nop
outsl
mov
sub
dec
mov
inc
roll
xor
adc
rclb
leave
xchg
lret
xchg
and
mov
loop
sub
clc
sbb
ss
lahf
shl
out
out
test
cmpsl
mov
shrb
sbbb
ficoml
mov
ljmp
mov
sbb
dec
rorb
adc
pop
mov
mov
sti
sub
jle
and
popa
pusha
lahf
xchg
add
and
inc
lcall
sbb
sbbl
mov
cmpsb
mov
xorb
nop
dec
dec
sarb
clc
stc
mov
sbb
lret
pushf
rorl
pop
mov
xchg
pop
mov
loopne
inc
mov
dec
in
daa
fcompl
arpl
cmp
xchg
fs
rcrb
sbb
mov
xor
lahf
add
jnp
pop
inc
imul
push
scas
push
push
movsl
or
mov
sbb
or
out
mov
stc
push
cltd
pop
rcrb
mov
push
pop
pop
jecxz
fistpl
cmpsb
mov
xor
fsts
daa
dec
repz
rol
mov
fidivrs
sti
loop
mov
mov
add
mov
aad
mov
xor
push
test
mov
adc
adc
cwtl
fwait
mov
adc
sub
xchg
bound
push
xchg
inc
lahf
subb
repnz
hlt
aad
xor
inc
icebp
adc
test
cld
pushf
fadds
sub
or
ret
jnp
inc
repz
mov
inc
jecxz
in
lods
lock
sbb
add
pop
icebp
scas
adc
pop
fcoms
xor
aas
jne
or
mov
and
pop
in
inc
xlat
stos
push
std
mov
stc
mov
loop
and
xchg
sarb
push
or
dec
mov
xor
jecxz
and
test
leave
in
mov
popa
das
shlb
outsb
xlat
push
scas
into
dec
loopne
or
mov
pop
or
dec
mov
xchg
and
mov
push
cmp
or
adc
cmp
mov
or
dec
in
loopne
mov
xchg
loope
pop
pusha
lods
outsl
push
mov
inc
xchg
xchg
lds
sub
lret
outsl
sahf
iret
adc
inc
dec
loope
push
jne
push
aam
adc
and
fistps
sub
ret
or
push
xor
mov
test
cmp
aas
fs
and
cmp
leave
lcall
int
pop
std
lahf
jg
jno
test
loopne
dec
sbb
or
mov
stos
cld
xor
mov
xor
cmp
pop
push
mov
dec
imul
outsb
cmpsl
jne
jns
add
mov
mov
push
mov
pop
pop
pop
cmc
les
inc
inc
sub
mov
cmpsl
pop
xchg
or
nop
icebp
mov
xlat
in
dec
jbe
push
outsb
int
enter
pop
sbb
ret
int3
mov
mov
pop
je
fmull
stos
mov
xchg
sbb
xor
popa
test
sbb
push
push
idivl
xchg
inc
je
jne
fwait
or
push
das
mov
test
push
stos
cmp
pop
movsb
in
and
jge
xor
pop
aam
mov
das
imul
xor
sub
cmp
pop
jbe
cwtl
ds
xor
imul
stc
adc
in
jo
or
data16
sahf
loopne
or
out
dec
inc
mulb
cmc
les
stc
xchg
and
xchg
or
fwait
cmp
push
push
lret
sbb
ljmp
mov
movsl
push
stc
cmp
or
and
outsl
dec
cmpsb
push
mov
push
inc
dec
outsl
and
into
push
sbb
cmp
int3
add
add
mov
mov
in
testl
ljmp
jle
adc
out
mov
pop
out
je
ljmp
pusha
imul
mov
mov
dec
ds
lea
xor
jns
push
cmp
mov
mov
je
cld
jmp
mov
lret
pop
push
adc
mov
pop
push
sbb
sub
pop
push
and
insb
into
data16
xchg
pop
aas
or
add
fwait
stos
mov
xor
mov
xlat
gs
fnstenv
xchg
adc
mov
xchg
xor
xchg
pop
test
mov
std
fsubl
lcall
in
and
stos
pop
nop
xchg
jl
xlat
adc
sub
das
out
xchg
fwait
stos
out
jae
fucomip
and
mov
sbb
out
not
lcall
mov
sar
jmp
sbb
sub
cmpsb
mov
call
adc
std
xchg
fnsave
popa
daa
or
ficomps
enter
sbb
scas
decl
scas
jl
outsl
mov
mov
je
test
test
cmpsb
enter
mov
addl
sbb
mov
jne
add
adc
jle
cmp
cmp
jnp
fdiv
negb
inc
ficoml
fwait
test
mov
mov
mov
push
adc
sbbb
lret
stos
pop
mov
jne
rorl
pop
jg
ja
xor
push
mov
cmpsl
cmc
add
aaa
dec
pop
addr16
inc
dec
leave
push
out
mov
fsubp
lret
fldenv
inc
pop
xchg
std
clc
mov
push
out
sbb
cmp
jmp
lods
inc
jp
and
adc
fnsave
out
lods
mov
xor
icebp
mov
pop
xchg
adc
jbe
xor
jb
xor
jb
loope
out
sub
repz
mov
inc
sub
insl
jae
movsl
jp
and
sub
lcall
insl
dec
loopne
stc
dec
mov
leave
or
sub
pushl
imul
sbb
sub
out
lea
addr16
sub
imul
pop
inc
inc
push
sub
nop
mov
pusha
cmp
xchg
or
imul
inc
dec
xor
arpl
mov
dec
pop
int3
test
mov
and
cwtl
cmp
outsl
rol
lods
mov
push
pusha
cmpl
dec
push
inc
and
cmc
mov
or
push
test
notl
outsb
sbb
pcmpeqw
pushf
addr16
add
cwtl
pop
stos
mov
scas
shlb
ret
pop
outsb
xlat
addr16
inc
int
cmpl
pusha
je
aaa
inc
push
mov
stos
fistps
push
and
outsl
adcb
sbb
into
adc
xlat
add
mov
cmp
stos
imul
xor
mov
into
push
aas
xchg
shll
test
enter
xorb
mov
daa
int3
mov
xchg
mov
mov
repz
mov
je
pop
arpl
ret
call
push
pop
outsb
jmp
xchg
fstpl
ljmp
mov
jg
fmull
cmp
cmp
sbb
mov
test
jp
cmc
pusha
xchg
repz
pop
jecxz
ret
inc
les
inc
popa
ljmp
mov
hlt
iret
push
cmp
cmp
ljmp
inc
xchg
cwtl
data16
and
push
cmp
sahf
dec
loopne
adc
push
pop
fcoml
jl
mov
sbbl
pop
and
mov
pop
xchg
sbb
xor
cmc
jae
aam
cmpsl
jns
mov
add
fwait
stos
jecxz
cltd
sbb
jae
or
mov
lods
shlb
dec
and
gs
loop
int3
pop
inc
or
imul
push
adc
pusha
xrelease
and
fs
scas
ret
lock
shr
outsl
insb
mov
movsl
stc
mov
and
filds
insb
jne
mov
dec
and
scas
xor
test
subl
les
daa
add
sbb
shl
ljmp
jl
and
je
dec
jmp
fwait
lret
imul
clc
add
fisttpl
and
clc
clc
push
lock
ljmp
xbegin
decl
dec
shrb
add
mov
out
mov
mov
out
jecxz
ljmp
cmpl
clc
inc
cmp
ret
out
mov
cwtl
inc
or
jmp
call
push
shl
jecxz
bound
in
fdiv
adc
sbb
push
mov
test
mov
cld
xchg
and
rorl
push
pop
dec
jns
out
fnstcw
les
aaa
cmp
fsubl
sub
ss
sbb
adc
adc
mov
push
xchg
jle
loop
ss
mov
adc
into
mov
ss
dec
loop
cmpsb
jg
call
aas
xchg
adc
jge
imul
fs
mov
ja
and
ja
scas
jnp
or
or
mov
repz
test
outsl
jecxz
add
jle
pop
cltd
xchg
in
mov
out
je
js
and
iret
push
into
aaa
pusha
push
inc
out
aad
mov
sti
sbb
push
push
mov
adc
cmp
cld
or
jl
inc
jl
mov
add
andb
push
add
mov
adc
adc
fs
insb
mov
xor
and
loope
fsubrl
push
xchg
pushf
iret
pop
fs
int
je
xchg
or
inc
sbb
push
mov
rcl
jo
and
stos
dec
or
pop
adc
jae
xor
int3
js
imul
xchg
jnp
jns
outsb
sub
sahf
and
sbb
bound
cli
test
lcall
test
add
popf
or
addl
mov
mov
mov
aam
xchg
pop
cmc
mov
xor
rcrb
sub
xchg
daa
movb
sbb
ss
les
ja
sbb
adc
jae
mov
cmp
cmp
imul
mov
jnp
mov
lds
popf
xor
ret
dec
inc
into
mov
fimull
dec
and
or
gs
mov
enter
lods
dec
add
fwait
in
nop
xor
fisubrs
xchg
lret
ret
test
es
pop
clc
inc
push
mov
dec
xchg
add
mov
fildll
xor
push
aas
test
aas
xor
lahf
sti
pushf
xchg
sbb
jl
lods
inc
adc
sbb
je
dec
mov
dec
sub
cmpsl
cs
loop
mov
fwait
mov
stos
mov
xchg
out
inc
mov
sub
gs
cltd
cmp
cmp
test
les
or
addb
or
mov
and
pop
aad
xchg
nop
pop
or
lds
ror
icebp
cmp
or
xchg
add
mov
jb
mov
inc
mov
clc
aaa
les
fadds
cmp
xor
jbe
mov
pop
ss
scas
and
call
rcrb
adc
push
sbb
loop
cmp
cmp
or
outsb
inc
and
push
ret
aam
popf
loop
and
push
adc
push
pop
sub
pop
enter
scas
dec
sbbb
xchg
fadd
js
and
mov
pop
dec
jle
dec
dec
jnp
testb
pop
pop
jbe
adc
in
push
sub
rclb
insb
jge
push
das
xor
inc
fdivs
and
mov
sub
push
and
jae
mov
pop
pop
iret
subb
arpl
or
mov
or
mov
icebp
mov
stos
fists
adcb
cmpb
inc
rcr
shlb
inc
dec
mov
addr16
les
mov
insb
xor
clc
dec
adc
mov
fbld
push
dec
out
mov
fildl
dec
bound
neg
lahf
out
mov
je
arpl
push
enter
lods
jnp
sbb
shrb
fdivs
jp
xchg
and
aaa
sub
push
push
dec
sbb
and
loop
sub
je
fs
test
sub
mov
lret
adc
and
imul
call
in
adc
mov
push
cmp
mov
adc
ret
icebp
mov
rorb
test
xor
mov
mov
rcrb
fwait
jb,pt
pushf
xchg
pop
jbe
fcoms
test
dec
push
sub
xchg
and
inc
notb
loopne
pop
popa
cmp
push
nop
int
xor
push
cmpsb
lock
lret
pop
push
dec
push
dec
lcall
fldenv
fadds
and
es
lods
jmp
mov
push
xor
in
test
push
imul
and
jbe
sbb
pop
decl
fidivrl
xchg
add
mov
mov
testb
dec
add
popa
aam
jns,pt
mov
push
mov
pop
and
stos
loope
dec
iret
cmp
test
and
xchg
out
fsubrp
das
jns
sbb
add
push
or
xchg
xor
popa
sbb
popf
or
ja
or
pop
jp
cmpsl
dec
aad
mov
mov
outsb
aaa
push
popa
lret
mov
mov
fildll
push
cmpl
iret
jo
fcomps
jle
cltd
cs
daa
adc
mov
scas
jnp
rolb
jno
cli
dec
in
fwait
mov
jb
andl
mov
adc
sarl
mov
jl
ds
mov
jmp
mov
in
jmp
cmp
lds
jecxz
stc
cltd
test
mov
out
dec
mov
sub
inc
sbb
adc
cs
scas
orl
adc
adc
xchg
fiaddl
jp
imulb
je
negl
lret
push
jp
data16
into
xchg
pop
pop
jecxz
pop
sbbl
xchg
dec
mov
inc
pop
ret
pop
std
icebp
sar
push
add
mov
stc
adc
pop
imul
xchg
push
outsb
sbb
icebp
ja
inc
pop
mov
call
adcb
mov
xchg
testl
test
fldl
ja
dec
in
cmp
jnp
rcr
jecxz
shll
mov
out
into
out
or
dec
mov
imul
xor
xchg
mov
dec
mov
imul
loope
xchg
cmp
jl
enter
enter
and
mov
or
dec
and
repnz
mov
cmpsl
mov
cmpl
int3
fsts
inc
mov
clc
xchg
ja
lret
add
inc
test
nop
inc
and
dec
arpl
dec
jbe
or
js
std
jns
jne
add
adc
cmp
in
mov
in
addr16
push
rcrb
cmp
imul
xor
add
shrb
mov
mov
jo
push
cmp
std
add
mov
mov
add
stos
stos
xchg
cmpsl
jl
mov
insl
mov
cmp
pop
js
push
jae
xchg
ds
jae
sub
jp
test
dec
push
pop
sbb
or
aas
mov
cmp
push
mov
pop
push
pop
dec
push
cwtl
mov
sub
xor
jnp
rcrb
push
cmp
push
sub
xchg
or
andl
cmp
and
enter
lcall
inc
imul
sub
out
jp
mov
push
aam
xchg
mov
adc
xor
push
repnz
xor
iret
xor
add
sbb
xor
cwtl
leave
inc
mov
xchg
lcall
push
push
repnz
xor
push
push
in
pushf
dec
sbb
mov
jmp
and
imul
fsubrl
jle
stos
adc
push
mov
mov
push
hlt
pop
mov
or
lock
cmpsl
push
in
dec
cli
std
aas
int
inc
xor
les
xor
mov
je
pop
test
into
cs
mov
fwait
not
push
xor
push
adc
test
adc
xor
inc
shr
jge
mov
add
lock
outsb
sub
jne
imul
and
jecxz
add
movsl
pop
lock
mov
mov
mov
sub
sub
fldl
cmc
outsl
repnz
into
shr
cld
out
js
lods
pop
jo
ficoms
cmp
aad
dec
nop
shlb
xchg
sbb
fstpt
mov
test
das
sti
pop
stos
ja
daa
hlt
and
xlat
sbb
push
cmp
push
std
inc
call
aad
xchg
fidivrl
push
in
mov
or
sub
scas
in
and
inc
loope
jns
lods
fcoml
jnp
in
les
shl
std
data16
adc
mov
imul
push
mov
loop
lret
cmp
jno
sbb
sti
pop
mov
repnz
sbb
icebp
icebp
stc
scas
jle
jg
push
sbb
sbb
aad
xchg
loopne
shrb
cmp
xchg
cmp
int3
and
aad
aad
daa
cli
repz
test
mov
mov
inc
xchg
inc
push
icebp
je
bound
out
adc
stos
test
aas
scas
lods
call
into
repnz
mov
lcall
cld
imul
sub
jmp
jmp
test
call
pusha
xchg
cmp
push
cmpb
xchg
mov
jg
xchg
add
fs
add
fmuls
inc
sbb
push
push
mov
cmp
dec
adc
outsb
mov
andl
jnp
adc
loop
out
push
bound
into
repnz
jp
add
in
mov
jecxz
daa
jle
adc
fidivl
inc
dec
sbb
scas
jb
fcompl
mov
pop
je
and
fildl
fwait
mov
aaa
cmp
in
adc
xor
xlat
lret
inc
jp
and
or
in
inc
push
pop
lods
shll
data16
popa
addr16
pop
out
in
outsl
loop
pop
push
ja
fmull
ja
xor
in
pop
cmp
imulb
in
pusha
dec
imulb
add
and
icebp
cmp
xchg
mov
push
push
lahf
addr16
int3
jae
xor
add
incb
in
loope
jge
pushf
mov
xor
jo
mov
pushf
mov
aaa
int3
dec
xchg
shlb
mov
jg
gs
enter
xchg
lods
xor
call
and
imul
sahf
test
mov
mov
dec
insb
inc
fcoml
cmpsb
mov
iret
insb
leave
popa
stc
dec
mov
loopne
push
and
scas
xchg
xchg
rcll
dec
jnp
cs
pop
orb
setnp
popf
cmp
stos
sbb
stos
mov
jae
loop
pop
add
sbbl
daa
packsswb
mov
mov
ss
fsubrl
int
in
dec
notl
pusha
gs
dec
leave
jnp
popf
pop
xor
mov
das
imul
movsb
leave
xchg
lea
fs
push
loope
bound
aaa
mov
mov
out
fildl
dec
test
movl
mov
and
lcall
lock
mov
push
add
cld
fdivl
or
loop
stos
dec
xor
test
push
or
movsb
dec
sbb
push
jmp
adc
lods
test
mov
out
sti
mov
sarb
out
sub
dec
mov
dec
mov
jge
clc
scas
cmpsb
cmp
jnp
ret
xchg
imul
pop
adc
inc
mov
cmp
pop
push
shrl
push
jecxz
cld
dec
xchg
adc
jns
or
add
stos
pop
int3
pushf
dec
dec
push
push
pop
add
rcrb
push
call
or
pop
cli
cmpsl
dec
scas
mov
iret
cmp
in
ficomps
push
mov
inc
xchg
and
xchg
adc
xor
xchg
mov
es
mov
mov
sub
mov
mov
and
daa
call
mov
sub
lahf
xchg
push
cmp
hlt
lcall
test
jbe
imul
xchg
aaa
ficoms
push
lds
test
aaa
scas
test
mov
jb
test
sub
fidivs
mov
in
ret
sarl
stos
cmc
push
out
xchg
pop
mov
orl
pop
outsb
adc
mov
daa
jns
mov
push
repnz
mov
inc
addl
xchg
jne
fs
outsl
and
in
mov
push
inc
addr16
sbb
mov
ret
jecxz
xor
xchg
ljmp
cmp
dec
cwtl
xor
ficoms
out
jge
shrb
mov
sbb
jg
repnz
lret
add
dec
xlat
call
lea
or
or
sbb
sub
iret
in
iret
das
push
sbb
push
or
in
inc
insl
pop
fcompl
fisttpll
sbb
mov
xchg
inc
inc
jae
lock
push
adc
mov
mov
add
hlt
xchg
dec
cs
adc
popa
ret
subl
xchg
mov
dec
mov
pop
lret
mov
cmpsb
inc
std
sbb
sahf
push
sbb
push
add
into
mov
push
push
jle
jnp
sub
add
xor
stc
and
lahf
mov
sub
jg
xor
cmp
pop
scas
or
sbb
fldenv
mov
test
xchg
dec
movl
sbbl
pop
out
jne
enter
sbbl
cld
fldt
outsl
inc
and
jo
adc
cmpsl
adc
popa
or
insl
mov
pop
add
mov
dec
fildll
jecxz
jo
ds
pop
mov
push
and
inc
fwait
push
inc
gs
jl
shll
mov
icebp
bound
sub
sar
outsl
cltd
movsb
push
inc
pop
frstor
push
mov
push
mov
or
repnz
mov
sbb
loope
cmpb
mov
push
or
sbb
mov
shlb
or
add
xlat
push
sbb
xchg
lcall
popf
jge
in
rorb
shr
movsbl
add
inc
lahf
cmp
setge
add
xchg
push
inc
cltd
sbb
pop
jle
jmp
fisubrs
pop
lods
jecxz
jb
ljmp
movsl
ljmp
rclb
lock
arpl
mov
adc
pop
loope
sub
mov
arpl
pop
sbb
pop
sub
scas
adc
xlat
or
jns
pop
push
sbb
lahf
into
stos
add
inc
pusha
into
out
nop
insl
out
push
dec
push
pop
addr16
xchg
imul
dec
mov
in
jp
mov
pop
jns
inc
and
push
pop
push
xchg
push
and
dec
or
adc
mulb
ret
cmp
lcall
jle
xor
dec
sub
ret
jl
fcomps
call
std
icebp
xchg
lcall
nop
ss
sbb
mov
xor
xor
imul
sti
cmp
ds
subl
cmpsl
cmp
xchg
hlt
aaa
xor
lods
xor
scas
pop
inc
jbe
sbb
xor
imul
mov
leave
cmp
cmp
stc
fbstp
outsl
jno
xchg
out
leave
mov
mov
arpl
mov
inc
outsl
enter
enter
cmp
stc
divb
mov
test
xchg
mov
test
loope
je
xchg
xorl
inc
scas
ret
mov
mov
pop
mov
sbb
cltd
inc
jb
cmp
sbb
mov
xorl
sbb
lret
adc
sbb
adcb
mov
fadds
lret
push
sub
out
sub
sbb
push
cmp
or
push
cmc
ret
and
pushf
int
jp
arpl
popf
mov
test
add
in
xlat
cld
jle
sahf
ror
loop
adc
hlt
lock
sbb
lods
jns
arpl
cld
jg
sti
out
lock
maxps
push
xor
sub
mov
mov
mov
xchg
mov
rcll
lret
pushf
pop
mov
insl
sbb
addr16
dec
fildl
testl
fsts
or
inc
pop
mov
movsl
lds
and
cmc
sbb
stos
ret
cld
dec
mov
fldt
xor
rorl
out
xor
mov
cmp
jae
loope
cmpsb
shlb
push
or
es
das
negl
je
mov
mov
cmpsb
mov
cmpsl
js
rclb
cmp
inc
mov
push
fisttpl
and
stos
jecxz
push
pop
adc
mov
or
les
pop
loope
movsl
loopne
add
aaa
xchg
insb
jge
add
in
stos
dec
fidivrs
adc
leave
mov
adc
adc
in
out
pop
sub
dec
sub
out
xorb
xlat
sbbl
int
cmp
subb
and
mov
test
test
xor
adc
enter
adc
and
jl
clzero
jle
lea
call
sub
hlt
adcb
cmp
push
ds
lahf
loopne
jmp
addb
js
ret
mov
xlat
jmp
push
and
mov
aam
out
mov
mov
aas
mov
dec
push
arpl
sub
ss
push
fmul
outsl
add
lret
inc
lcall
push
in
and
test
push
aas
test
insb
cmp
adc
and
jle
sahf
js
mov
mov
hlt
mov
roll
jae
ror
sbb
in
bsr
add
stos
stos
mov
sub
fcomp
and
jns
call
and
inc
mov
jne
pop
pop
jno
cltd
jb
int
movsl
hlt
xchg
mov
mov
mov
incb
mov
out
mov
cld
adc
xor
stos
jecxz
pop
movsb
fsubl
pop
cmc
cmp
push
xor
dec
dec
popf
daa
aam
xor
loope
cli
out
jp
lock
pmulhuw
popa
leave
xor
pop
sbb
sbb
xchg
inc
sbb
sbb
adc
loopne
stos
or
jecxz
je
jbe
or
and
cmp
xor
xchg
repz
stos
inc
pop
sbbb
dec
call
and
mov
push
mov
pop
pop
enter
cld
mov
sbb
arpl
fnstsw
fs
lahf
pop
mov
pop
sub
int3
in
dec
mov
add
dec
adcl
push
nop
imul
mov
mul
sub
mov
pop
fdiv
filds
icebp
adc
out
sub
add
adc
xchg
cli
jl
xchg
adc
pop
xchg
xlat
dec
mov
dec
sub
mov
or
inc
insl
andl
jnp
andl
ret
inc
outsl
popf
xchg
repnz
cmp
add
addr16
sbb
jbe
inc
cmp
ljmp
push
sti
mov
cmp
mov
mov
mov
pop
and
mov
adc
fwait
or
in
adc
loop
inc
mull
imul
or
jo
scas
push
xchg
fdivr
out
xlat
pop
jo
and
jb
xchg
aad
or
pop
sub
loope
pop
das
and
adc
adc
cmp
inc
sbb
mov
arpl
jle
fistl
rcll
stos
push
hlt
into
mov
lods
cmp
jo
hlt
jmp
leave
scas
dec
test
pop
test
or
pop
pop
mov
adc
and
dec
imul
inc
sarl
push
push
dec
mov
lods
xor
outsl
pop
add
pop
add
inc
pop
or
les
ss
adc
inc
mov
mov
js
xor
ja
mov
mov
in
push
inc
mov
jne
jnp
lret
mov
xor
and
jnp
rorl
inc
into
pop
sahf
imull
stos
push
lds
xchg
sub
sbb
inc
test
pop
mov
stc
and
push
aam
ret
inc
or
dec
or
mov
imul
jb
fwait
xchg
sahf
jge
push
push
sbb
jl
dec
mov
pop
or
lods
pop
incl
push
flds
lahf
in
jns
cmpsl
adc
into
lods
adc
sub
mov
or
cld
lahf
fdivp
fcmovnu
ss
rcll
sub
ss
or
dec
out
cmp
mov
js
lods
cltd
cmp
insb
stos
negb
repz
push
push
sahf
test
mov
xor
add
icebp
add
repnz
xchg
aas
fxch
inc
std
mov
fstl
inc
sar
xor
xor
jbe
in
repz
aas
and
pop
lahf
jb
push
aaa
cli
push
mov
jle
cld
div
push
rcl
mov
jae
cmpsb
xor
dec
sti
add
mov
push
aad
mov
scas
sub
arpl
add
ret
adc
out
sarb
icebp
push
adc
les
aad
push
cmp
jmp
add
sbb
test
adc
add
icebp
sub
je
dec
mov
and
dec
and
xor
or
imul
mov
incb
ljmp
jge
push
lret
add
sub
pop
sbb
xor
mov
jp
mov
sub
in
fwait
sti
and
es
sbb
sbb
pop
out
iret
mov
add
cmc
jae
cld
jmp
mov
lcall
int3
jge
movsl
popa
test
nop
dec
mov
xor
or
jmp
sub
ret
repnz
push
mov
mov
popa
inc
and
jae
shr
pop
aaa
sbb
sub
pop
js
lods
fcompl
push
mov
fldl
add
jmp
out
aaa
aas
push
test
or
add
les
stos
xchg
or
and
dec
leave
xchg
dec
inc
xlat
cmpsl
or
inc
shrb
lret
insb
cmp
push
in
scas
or
testl
jns
adc
sub
jne
and
push
jg
fcompl
mov
test
jg
jo
mov
mov
imul
ret
cwtl
je
xlat
mov
push
bound
jne
xor
adc
sbb
popl
adc
test
les
mov
imul
mov
xor
mov
cwtl
jns
idivb
enter
fldcw
xchg
or
call
dec
push
sbb
bound
dec
and
repnz
and
fsubs
cs
sahf
or
jns
xor
adc
adc
pop
in
xchg
test
mov
xchg
je
mov
add
mov
jp
pushf
cmc
dec
test
fs
adc
call
add
mov
les
fcomip
push
pop
cmp
jbe
std
pop
mov
inc
repz
icebp
push
call
and
es
jecxz
imul
nop
adc
mov
dec
test
mov
into
mov
xor
pop
testb
sbb
cmp
adc
outsl
sbb
jae
sahf
and
mov
pop
sahf
insl
popf
jno
jp
mov
and
add
stos
mov
test
xchg
out
mov
mov
and
dec
in
rcrl
xchg
pop
jg
lea
sub
pop
xchg
fs
movl
pop
lea
subl
sbb
cmpsb
loop
dec
add
add
and
rol
and
lock
aam
lods
sarl
add
sbbb
push
push
sbb
mov
mov
popf
xor
jg
aaa
sbb
and
pusha
lds
cld
xor
rep
mov
loopne
adc
inc
push
repz
xchg
lods
loop
or
jmp
inc
push
inc
sahf
cli
mov
gs
mov
fisttpl
push
enter
push
icebp
daa
test
cmpsb
cmpsl
mov
into
lods
fstpt
push
loop
std
popl
sub
adc
out
or
dec
push
and
lds
pop
ja
inc
adc
sub
xchg
aad
sub
inc
add
je
pusha
cmp
xchg
and
jne
dec
jns
cwtl
cmp
adc
data16
outsb
loop
leave
clc
sub
xchg
stc
std
jne
ret
mov
ficomps
movsl
scas
movl
movsb
test
adc
and
adc
btr
sub
xorl
orl
add
sub
icebp
inc
jae
dec
dec
adc
std
inc
xchg
sbb
lahf
imul
mov
stos
aaa
js
sub
and
out
pop
mov
out
adc
mov
arpl
xchg
pop
ds
mov
repz
mov
shlb
dec
xor
cltd
call
cmpsl
fildl
scas
sbb
xchg
adc
sub
mov
scas
mov
enter
lahf
xor
sbb
xchg
pop
sarb
fs
jae
in
ret
xor
or
sbb
sarb
mov
xchg
lea
push
cmp
sbbb
sbb
ja
push
adc
je
add
fadd
sub
push
scas
cmpsb
xchg
or
fmuls
sub
inc
call
dec
add
lahf
and
icebp
pop
xor
iret
jmp
aam
sub
or
jno
and
and
xor
lea
aas
dec
fs
jl
dec
es
jp
adc
xlat
mov
fucomip
xor
sub
push
mov
add
mov
lds
mov
pop
xor
clc
lcall
ret
cmp
push
mov
cmc
pop
int
pop
ret
sub
cwtl
sub
out
sbb
xor
addl
adc
cwtl
notb
add
mov
ficoml
sbb
add
pop
inc
fsubl
lock
jge
mov
mov
dec
test
pop
and
lods
or
shlb
test
out
push
aam
popa
insl
xor
iret
jmp
xor
xor
mov
iret
popw
or
scas
push
ja
inc
inc
in
push
cltd
pop
aad
sub
pop
popf
and
push
clc
ficompl
test
negb
xchg
ret
dec
das
aas
int3
sub
dec
fsub
mov
mov
dec
out
mov
ljmp
push
cmp
jge
pop
pushf
test
xchg
jp
inc
pop
jmp
int3
jnp
and
gs
cld
jnp
insl
imul
cmp
data16
test
mov
mov
sub
lock
inc
sbbl
nop
std
and
xlat
pop
fs
cmp
jp
aam
mov
fdivr
lods
iret
call
in
jmp
sbb
arpl
dec
popa
out
add
sub
inc
mov
mov
or
xor
jmp
pop
push
aas
push
out
adcb
adc
shrl
jne
imull
add
in
aas
xorb
push
jae
clc
sar
adc
ret
int
out
mov
cmpb
int3
in
and
in
xchg
in
ljmp
pop
outsb
cltd
pop
or
dec
mov
add
adc
lods
sub
push
add
call
movsl
add
ror
push
imul
jmp
dec
movsl
ret
testb
repnz
and
ds
or
xchg
ret
xor
push
test
push
pop
and
aaa
sub
repnz
mov
or
outsb
pop
or
scas
jl
jno
xchg
dec
cmp
iret
xchg
aas
sti
lcall
aas
pushf
cmp
pop
mov
movsb
push
hlt
dec
mov
in
jg
pusha
test
and
aad
test
jl
inc
stos
push
fistps
shll
or
movsb
sbb
fnstsw
insb
sbb
and
mov
mov
js
push
inc
mov
cmpsb
push
enter
aas
stc
cwtl
pushf
inc
push
push
test
mov
sub
aam
push
push
daa
mov
mov
dec
lods
xchg
jnp
cltd
test
cld
wrmsr
xchg
fwait
cwtl
js
stc
dec
adc
push
out
push
clc
scas
inc
sti
dec
decl
nop
and
mov
out
stc
sbb
cmp
pop
or
test
iret
mov
fmull
jb
lods
mov
jmp
mov
repnz
lahf
fsubp
daa
in
lahf
in
dec
loope
movsl
push
xor
fisubl
pop
fildll
jne
sbbl
mov
popf
push
and
xor
push
addr16
fsubrp
popf
jo
jns
outsl
xchg
push
cmp
repnz
js
imul
jmp
sub
jbe
xor
inc
and
cmp
cmp
das
sub
fiaddl
inc
add
nop
lret
inc
mov
jne
sbb
pop
mov
fbstp
and
repz
or
mov
daa
outsl
push
repz
mov
push
cwtl
pop
mov
and
js
les
cmp
outsb
orb
mov
inc
outsb
cmp
xor
xor
pop
nop
ficoms
outsl
jo
shll
inc
mov
dec
aaa
shrb
dec
outsb
add
int
pusha
adc
push
push
ffree
faddl
pop
sub
sbb
test
addl
into
xchg
jmp
das
repnz
sbbl
movsl
xchg
xchg
cs
or
fmull
adc
pushf
test
leave
mov
xchg
out
push
rcr
fidivrs
inc
add
rcl
mov
test
xor
xchg
data16
sub
or
insb
enter
pusha
and
cmp
or
enter
xor
leave
lcall
jo
ja
dec
pop
test
loopne
xchg
add
divl
aaa
jmp
mov
jbe
in
rol
xchg
jbe
mov
pop
mov
scas
test
push
lea
push
or
idiv
fwait
push
xchg
push
arpl
lea
cmp
xor
mov
add
inc
cld
sbb
push
aad
inc
dec
mov
popa
push
cmp
cmpsb
pop
cmp
lahf
mov
inc
jp
and
or
sub
pop
ret
inc
test
pop
or
stos
roll
inc
es
push
add
sbb
fs
clc
add
sbb
and
shll
push
push
vpunpcklqdq
sub
sbb
or
pop
out
sub
pushl
loopne
fdivs
lods
jp
xlat
and
stos
popa
xor
into
ljmp
std
cli
popa
ljmp
mov
aas
xor
or
inc
leave
xor
xchg
stos
push
out
in
mov
lods
sbb
mov
dec
insl
sbb
adc
cmpsl
jne
or
ret
jno
and
mov
mov
mov
sahf
sub
jne
jp
les
sub
ret
addr16
fnstcw
repnz
mov
mov
jnp
xorb
sti
out
sbb
sub
cmpb
push
test
pop
dec
and
adc
je
adc
out
xor
inc
pop
sub
test
or
insb
cmpsl
enter
lret
push
mov
adc
into
imul
lcall
jns
rcrl
hlt
cmp
add
pop
mov
xor
ss
push
sub
dec
push
std
xor
pop
push
loopne
iret
or
sbb
jl
ror
cs
push
aaa
std
fcoml
pop
mov
cmp
int3
aaa
sub
mov
sub
sub
push
mov
iret
gs
jle
popa
or
fcmove
rcrl
cs
addr16
cmp
xchg
cmp
lods
adc
sbbb
push
lcall
pop
cmp
in
ja
mov
ljmp
xchg
lret
dec
ljmp
xor
ds
push
dec
jnp
fbld
xchg
mov
cltd
out
xlat
clc
add
jp
push
jecxz
iret
and
lods
mov
xchg
enter
std
push
xor
data16
cmp
mov
cli
cmp
clc
in
inc
mov
xor
push
pushf
pushf
or
das
popf
fdivl
loop
adc
mov
dec
cld
jne
jle
adc
mov
rorb
inc
dec
dec
adc
stos
mov
test
pop
aad
fbld
cmp
jmp
mov
fwait
dec
mov
sbb
hlt
rdtsc
es
leave
cmpsl
push
add
sbb
sbb
mov
jo
mov
adc
cli
dec
hlt
mov
jb
lcall
xor
mov
scas
aam
mov
mov
movsl
mov
cmpl
in
cmp
mov
jae
scas
outsb
lahf
and
iret
pusha
push
test
test
loopne
xchg
xchg
jp
js
push
sbbl
aaa
stos
push
aam
daa
inc
nop
push
inc
gs
pop
jne
hlt
jp
idivl
out
repz
or
in
sbb
pop
ret
mov
mov
push
jge
mov
dec
in
and
add
fildl
push
cmp
pusha
xchg
add
rcrb
insl
jl
sbb
cmpb
out
inc
cli
pop
push
fwait
dec
pop
sbb
jns
dec
stos
xchg
loope
push
fisubrs
mov
pop
clc
pop
xchg
fisttps
lret
andl
inc
mov
lods
dec
adc
ficomps
push
xchg
add
mulb
inc
es
aaa
bound
scas
fucomip
mov
mov
dec
sti
and
or
sti
xor
inc
sub
adc
dec
xor
lods
push
insl
subl
fxch
pop
je
push
adc
dec
stos
jae
mov
fsubs
mov
pop
dec
fsubl
cmp
hlt
out
sub
adc
adc
push
dec
push
xor
and
sub
popa
push
leave
mov
outsb
inc
mov
push
int3
cs
and
das
inc
inc
std
movsb
inc
imul
daa
dec
movsl
sbb
adc
sbb
push
lcall
pop
fwait
outsl
pop
fcompl
stos
mov
xchg
aaa
push
push
data16
or
loopne
icebp
push
les
xor
and
lret
xor
cmp
sub
ret
xchg
icebp
jle
mov
sbb
in
jl
in
outsl
jnp
js
cwtl
inc
call
dec
and
test
mov
outsb
mov
xlat
inc
stos
or
mov
fsts
ss
fiaddl
or
xor
les
mov
pop
xor
stos
mov
cs
jecxz
dec
mov
out
and
push
cmpsl
mov
stos
pusha
call
pop
call
jae
mov
mov
xorps
cli
cmp
loope
inc
add
gs
mov
sbb
flds
xlat
push
mov
or
cld
push
pop
xchg
outsl
pop
ss
sub
subl
stos
jge
ficomps
jl
or
cwtl
sbb
pop
xchg
out
icebp
xor
jb
movsl
mov
cmp
repz
jecxz
in
xchg
sahf
pushf
lds
inc
jae
and
shlb
sub
ja
sub
and
adc
mov
xor
imul
fdivr
testb
les
cmp
loopne
xlat
mov
dec
dec
enter
faddl
adc
ja
adc
in
mov
pop
movsl
nop
in
mov
cld
icebp
cmp
and
stc
pop
cs
fistps
loope
enter
leave
jmp
aam
das
lods
popa
dec
xchg
lods
cmp
jge
xchg
lds
int
cmp
pop
push
cmp
vmovaps
lods
repnz
mov
push
mov
mov
pushf
ret
cmp
movsb
or
addr16
xor
in
jl
ret
and
cmp
jb
mov
mov
and
jne
mov
dec
clc
pop
sbb
sbb
inc
into
pop
ljmp
push
mov
adc
mov
sub
aas
pop
arpl
rcll
xor
insb
pop
sub
adc
push
and
push
dec
jmp
mov
dec
jb
sahf
fisubs
jo
stc
sti
movsb
out
aam
add
cltd
and
fisubl
nop
call
pop
enter
xchg
mov
stos
nop
icebp
ret
ret
cld
lock
push
cli
cmp
iret
in
inc
mov
cli
push
dec
inc
xchg
jns
cmp
ret
mov
ds
xchg
std
jmp
or
push
shl
aas
ja
cmp
cli
lds
pop
dec
xor
jge
or
or
mov
rcrb
dec
cltd
jne
sbb
in
stos
mov
in
ja
divl
jg
or
bnd
repnz
shll
sbb
sbbb
sbb
in
sbb
inc
adc
in
and
dec
xor
cmp
mov
ja
imul
adc
idivb
test
sbb
fcmove
in
loope
push
jp
push
rolb
cmp
cmpsl
jno
test
test
xchg
sub
xchg
inc
add
lods
inc
push
cmpsb
lahf
rol
bound
mov
sub
dec
add
jp
stos
xor
aaa
adc
xchg
mov
dec
lahf
jnp
cli
cmp
mov
push
push
xchg
push
bound
sub
out
adc
cs
insb
mov
inc
lds
rcll
pop
scas
mov
outsl
push
push
xor
xchg
lret
aaa
popa
and
fnstsw
loop
leave
inc
pop
pushf
push
ja
hlt
in
and
in
cmp
sub
dec
adc
xchg
pop
inc
bnd
inc
das
mov
sbb
loopne
mov
mov
inc
jo
sbb
cmp
int
add
scas
data16
dec
mov
inc
mov
lret
jmp
outsl
setle
add
mull
loopne
pop
out
loope
xchg
sbb
add
and
daa
movl
mov
stos
stc
out
into
adc
or
sub
pop
jbe
cmc
inc
jbe
cli
sub
or
js
arpl
and
adc
ficoms
jb
and
sbb
xor
add
sbbl
stos
and
xchg
pop
fwait
fs
jp
jl
jae
push
movsb
cli
aad
jle
pop
jno
push
push
lret
push
sub
pop
xchg
jle
clc
fcomps
pop
shll
xor
dec
js
in
dec
sbb
jg
or
sub
or
ret
je
dec
pop
and
or
or
testl
inc
xchg
mov
outsb
push
pop
das
punpckhbw
ds
mov
repnz
dec
inc
sbb
arpl
incl
adc
inc
es
ja
lea
pop
and
xorl
mov
enter
push
jne
cmp
sub
sub
outsl
iret
sbb
pop
out
sub
pop
cmp
mull
scas
into
sub
jnp
mov
movsb
icebp
paddw
dec
stc
jb
dec
ja
sub
cmp
repnz
ret
cld
cmp
push
push
or
push
jge
xchg
jg
xor
mov
adc
lods
jmp
loope
add
test
ss
or
ror
jl
fwait
push
sbb
js
pop
or
stc
jne
jge
pop
ja
mov
lds
mov
cwtl
aas
rorb
mov
inc
adc
ret
cs
ljmp
loope
xor
jbe
mov
pop
xor
cmp
mull
lock
bound
stos
adc
adc
into
cmp
add
out
scas
scas
inc
or
jbe
inc
cmp
prefetchnta
cwtl
pop
pop
pop
pop
mov
popa
mov
inc
psrlw
and
popf
data16
shll
xor
sub
dec
in
and
and
aaa
cli
push
ficoml
mov
shll
subl
jle
dec
inc
in
les
fcoms
cltd
out
dec
lcall
lds
ret
pop
call
sahf
sub
sub
in
mov
cmp
loop
mov
fsubrl
int
rcrl
in
movsb
movsb
out
fs
in
call
nop
pop
push
dec
js
cmp
xor
lret
js
jae
jg
gs
dec
mov
int
lahf
cmpsb
jmp
aam
and
and
imul
inc
inc
adc
xor
leave
mov
push
addr16
jmp
jae
int3
inc
fcoms
js
hlt
push
sbb
dec
mov
data16
inc
movsl
push
cmp
inc
adc
push
call
add
scas
dec
jne
or
sbb
xchg
in
push
jae
fsubrs
mov
pop
repnz
adc
loope
sti
movsl
pop
xchg
das
cmpsb
sub
dec
repz
xchg
xchg
pop
lock
in
sahf
cmp
or
aas
adc
fiaddl
pop
or
lods
sub
mov
hlt
rcr
add
mov
cmc
in
cmp
ds
cmp
repz
movsb
pushf
xor
sub
add
int
fld
mov
fadd
mov
in
ds
fsubrs
push
push
nop
xchg
rorb
ficoml
leave
pop
jle
fst
jb
dec
rcrb
fsubrs
out
sbb
js
int3
xor
pusha
dec
mov
out
and
jae
dec
out
dec
adc
fstl
sub
and
fmul
sbb
dec
rolb
or
push
mov
jns
jae
ljmp
fimull
es
lret
dec
fisttps
aam
test
in
in
add
or
add
xchg
add
adc
scas
or
xchg
sbb
pop
sarl
pop
cmp
pusha
jae
ret
outsl
cmp
pushf
pop
xor
jge
lret
bound
or
push
and
inc
xchg
or
cmp
xor
pop
aaa
cmp
fidivl
cmp
add
mov
dec
pop
call
mov
push
ror
mov
pop
and
or
arpl
dec
ds
sbb
ljmp
dec
repnz
movsl
rorl
xchg
push
or
fstpl
popf
stc
inc
mov
mov
mov
push
js
and
mov
mov
dec
fsubs
adc
mov
push
jmp
mov
mov
pushf
mov
int
ja
mov
jbe
cmp
ljmp
sub
and
into
mov
jle
fadds
sbb
aaa
ss
fbstp
mov
push
scas
add
jl
jno
sbb
ljmp
shl
and
add
and
out
in
push
decl
ljmp
mov
arpl
in
sub
lock
jnp
popa
fiadds
fcomi
clc
movb
and
out
sub
xor
cmp
data16
fsubl
adc
jne
mov
mov
imul
jmp
test
orb
in
popf
push
outsb
or
imul
or
cltd
lock
popf
mov
scas
add
fnsave
adc
sbb
sbb
lock
cmpsl
xchg
adc
sbb
push
inc
aaa
xchg
inc
in
ss
jle
jae
test
adc
lea
test
insl
into
loop
xor
mov
aad
andl
push
fwait
and
xor
push
push
out
fcmove
jp
popa
insb
push
ss
xchg
jge
cld
cmp
mov
xchg
jb
imul
fsts
mov
jge
fadds
adc
add
lods
movsb
jo
jge
pop
xchg
les
pop
lods
sub
movsb
add
push
push
loop
xor
pop
orb
cli
jae
sti
leave
xor
push
mov
mov
pop
aas
push
push
adc
push
mov
sbb
xchg
jecxz
adcl
lea
int
lret
mov
inc
sub
sbb
push
adc
gs
sbb
leave
xor
pop
stos
mov
arpl
jnp
pop
rorl
xchg
test
call
in
lods
jb
stos
movsl
jo
movzwl
popf
inc
sub
adc
fldt
aaa
xor
xor
mov
adc
repnz
mov
cmp
or
xor
add
or
mov
and
push
sub
push
inc
out
int3
andl
mov
nop
jns
xchg
out
and
fstps
push
addr16
lea
cmc
popf
and
repz
mov
movsl
clc
outsl
inc
pop
pushf
popa
add
xchg
mov
loopne
inc
and
xchg
movb
cmpsl
int3
push
scas
data16
xor
dec
adc
aas
enter
pop
and
sbb
inc
cmp
popa
filds
jl
mov
mov
fwait
mov
popl
frstor
pusha
scas
mov
fcmovbe
mov
push
fstp
and
in
mov
rolb
dec
cmpsl
nop
push
pop
inc
int
inc
dec
mov
cmp
xchg
dec
jo
lahf
add
mov
out
repz
into
mov
xor
addr16
orl
js
pop
xchg
popa
nop
faddl
data16
aas
mov
lea
xor
rolb
sub
or
adc
lret
or
in
mov
pushf
lcall
jbe
mov
sub
js
jmp
lea
mov
mov
jecxz
jb
push
inc
push
cmp
ja
mov
call
sti
cmpsb
ja
ret
or
mov
sbb
cmpsl
outsb
sbbl
loopne
repz
stos
jmp
inc
cmpsb
enter
cltd
dec
pop
adc
xchg
and
std
imul
repz
cmp
out
dec
ljmp
add
mov
loop
shrb
inc
out
enter
xchg
test
dec
xor
adc
lret
mov
imul
test
mov
clc
pushf
or
js
lock
pushf
sbb
jmp
or
mov
push
sub
rcr
sbb
shll
movb
pop
je
rclb
repz
negl
pushf
lock
insb
xlat
arpl
xchg
ret
sub
fucom
mov
pop
les
mov
jne
outsl
pop
jno
test
inc
push
fwait
shll
stc
stos
push
pusha
mov
cmp
push
push
cmp
jmp
cli
and
xor
jge
aas
les
xor
jge
and
push
add
test
xor
xor
sti
pop
addr16
cltd
sbb
loop
cmp
mov
dec
aad
push
pop
ljmp
std
loop
push
jle
loop
cltd
mov
dec
dec
ljmp
das
add
add
push
dec
jle
insl
jmp
dec
repnz
std
mov
sti
fdivl
mov
lock
sub
jae
xchg
stos
inc
sar
jo
test
mov
stc
loopne
fsubl
pusha
sbb
xor
and
push
pop
and
negl
scas
dec
and
popf
mov
push
xchg
dec
mov
mov
dec
test
test
int
data16
sub
in
addr16
add
cmp
mov
lods
shll
stc
es
add
jb
lret
mov
imul
dec
sub
popf
xchg
dec
cmp
mov
dec
int3
push
pusha
jb
xor
inc
frndint
pop
popf
sbbl
add
fbld
sbb
and
pop
ret
push
inc
jecxz
push
push
fisubl
mov
cltd
test
mov
jl
ret
mov
adc
aas
cmpsb
adc
xlat
sbb
inc
clc
int3
pop
sbb
addr16
sti
mov
cs
mov
or
push
pop
xchg
mov
xchg
adc
insb
fsubr
ss
std
pop
ds
dec
dec
scas
add
insb
ljmp
es
out
fsubrp
stos
imul
push
fdivs
bound
cmpsb
push
addr16
and
jle
jg
and
cltd
mov
add
leave
fldl
mov
sub
ds
addr16
negb
call
inc
into
out
arpl
push
jg
push
popa
or
or
pop
stos
jge
clc
out
adc
push
pop
lea
lret
icebp
dec
and
jle
pop
add
call
cmp
rcrl
jmp
mov
sbb
pushf
testb
dec
repz
mull
push
xchg
cmp
repz
pop
mov
sbb
or
stos
fiaddl
ror
incl
sbb
mov
test
imul
aaa
push
push
sti
and
jecxz
andl
sbb
pusha
ret
push
inc
testl
fimull
inc
and
insb
mov
cli
cmp
pop
mov
xlat
les
adc
mov
push
xlat
addl
xchg
push
in
adc
mov
movsl
or
leave
dec
test
ljmp
rcr
leave
call
clc
stos
inc
xor
xchg
loop
pop
push
sysenter
fisttpll
mov
cmpsl
std
cwtl
nop
js
popf
mov
lds
sbb
mov
sub
sbb
jmp
fisttpll
mov
fs
sbb
mov
test
xor
loopne
push
test
add
daa
rcll
negb
sbb
add
pop
lret
push
ja
mov
roll
cmp
or
inc
sbb
outsb
adc
popa
dec
les
mov
ret
adc
mov
shl
shll
cwtl
in
inc
jne
rorb
cmpl
or
gs
popa
pop
and
cmp
jp,pt
xchg
enter
sbb
pusha
pop
imul
loopne
das
xchg
insb
pop
mov
xchg
push
dec
iret
mov
mov
insl
cmpsb
mov
into
and
push
scas
inc
pop
not
push
sbb
and
scas
std
test
mov
inc
or
cmp
aad
jo
pop
ret
sub
adc
cs
xor
repnz
inc
xor
or
es
mov
cmp
lods
ret
or
bound
sbb
jmp
nop
mov
jno
ret
add
fwait
push
sbb
jno
leave
cmc
jo
pushf
push
rcll
xor
fnstcw
inc
sbb
cmpsl
mov
into
jbe
fdivrl
and
mov
movl
fbld
imul
cld
in
cli
push
inc
mov
test
lahf
adc
jecxz
add
push
push
stos
sub
dec
scas
into
inc
loope
xchg
mov
shll
gs
or
sub
mov
pop
mov
pop
fildl
inc
pop
xchg
mov
sub
sti
test
sub
in
paddq
cmpl
scas
push
push
jg
mov
psadbw
imul
pop
add
out
or
jo
mov
ficompl
pop
sbb
ja
cmp
push
xchg
push
dec
push
lods
xchg
sub
xor
push
jecxz
std
add
mov
popf
gs
pop
pop
mov
cli
rorb
imul
lods
sbb
pop
jle
cli
mov
lret
stc
mov
dec
inc
test
xor
movb
add
mov
mov
in
lea
movaps
dec
pop
xor
or
shlb
subb
out
repz
test
cmp
cmpl
sub
dec
mov
lcall
adc
sbb
xor
ror
sbb
cmp
or
or
mov
pusha
sub
pop
add
mov
out
shll
push
test
push
pop
and
cmc
mov
cmp
jg
out
push
sbb
jns
pop
pop
mov
fnstcw
or
stos
rorl
outsb
lahf
fsubr
jecxz
push
mov
rcrb
xchg
es
xchg
cli
and
call
mov
mov
push
dec
fsubp
test
push
cmpsb
in
pushf
lods
rcl
cmc
xlat
jne
sarl
aam
aam
cwtl
pop
les
jae
add
stos
adc
ja
addr16
sub
xchg
mov
add
mov
es
rol
das
mov
stc
mov
std
pop
adc
fwait
int
fldt
shlb
int3
movsb
rclb
mov
rclb
pop
pop
stos
pop
lret
add
leave
dec
mov
adc
dec
add
dec
enter
and
fbstp
pop
lret
sti
or
xor
outsl
jne
iret
in
outsb
in
or
stos
mov
ss
in
lret
xchg
ret
mov
mov
popl
jb
xor
outsb
mov
push
pop
sbb
and
xor
and
in
xlat
inc
shl
xor
push
add
imul
out
out
mov
dec
jge
sbb
cmpsl
cmpsb
dec
testb
mov
decb
fsub
lds
inc
andb
insb
xor
jno
push
arpl
push
lds
ja
out
pusha
or
jnp
lahf
sub
push
jl
adc
jo
mov
cmp
cmpl
push
pop
fmull
jmp
std
icebp
fmull
aas
pop
fildll
fstpt
xchg
and
fcomip
andps
or
sbb
inc
fisubl
mov
movsb
dec
lahf
popa
add
adc
jae
stos
jecxz
pop
jg
repz
sti
cmp
pop
jb
or
das
or
push
jp
lds
scas
xor
outsl
add
stos
sbb
iret
jae
push
test
pop
repz
adc
aam
xchg
mov
popa
mov
xor
mov
stos
push
jg
pop
insb
cmp
pop
cmp
mov
bound
sti
test
lcall
ljmp
lock
nop
mov
mov
bound
xchg
pop
adc
fld
adc
sbb
shll
adc
pop
lods
adc
push
cmc
imul
push
rcpps
ljmp
fisttpl
xorb
push
mov
mov
add
and
mov
xchg
xor
inc
jecxz
add
dec
xchg
xor
lock
js
fnstcw
addb
arpl
mov
int
adcb
pop
mov
in
and
in
mov
hlt
loopne
outsl
jmp
fcomi
out
scas
push
pop
in
cmp
sbb
push
repz
ret
dec
cmp
cmp
jnp
cmc
int3
imul
adc
out
adc
stos
imul
in
cmp
rcll
push
aaa
dec
mov
pop
cmpsl
cmpsb
cmp
ja
mov
add
popf
add
mov
jbe
lods
and
jecxz
std
mov
cmp
add
mulb
fstp
mov
rcll
mov
pop
jge
hlt
cmc
enter
xor
data16
or
jmp
sub
inc
add
and
testb
pop
out
jne
stc
decl
mov
push
or
adc
sub
xchg
push
out
iret
das
dec
and
push
subps
dec
cmpsl
in
outsb
int3
mov
lret
mov
cmp
lods
lret
jae
outsl
cmp
jecxz
ret
xchg
sbb
arpl
imul
dec
or
cwtl
fisttpl
jbe
mov
sti
and
pop
mov
add
lock
push
push
push
push
sbb
push
gs
cmpb
dec
sub
jge
lock
adc
xlat
dec
lea
pop
repnz
sbb
xchg
wbinvd
scas
rolb
xchg
dec
sbb
lds
sub
adc
pop
insl
jb
mov
push
jnp
xchg
pop
roll
aad
sahf
and
sub
clc
lea
dec
ds
mov
push
adc
int
mov
push
lea
mov
ret
test
add
imul
sub
cmpsb
dec
roll
sbb
adc
bound
int3
mov
sub
test
mov
mov
test
orl
jmp
xchg
dec
adc
into
hlt
jg
mov
scas
push
repnz
mov
jg
lods
out
call
scas
sub
jge
sub
pop
cmpsl
or
es
push
xor
fisttpll
jp
sub
clc
into
xor
movsb
xor
movsb
add
std
cmpsb
jecxz
add
je
mov
push
sub
sbb
repnz
xor
mov
inc
inc
lret
mov
push
cltd
push
mov
lods
xlat
lret
dec
push
arpl
loopne
mov
jnp
pop
aas
push
rcrb
call
add
sar
imul
fidivrs
mov
mov
daa
test
cwtl
lcall
pushf
scas
rcl
lcall
pop
cwtl
mov
xchg
imul
cmp
push
std
jle
mov
mov
xor
andb
popa
repnz
lret
mov
mov
lret
sub
lock
dec
adc
mov
loope
xlat
cli
lahf
pop
adc
rcr
cmp
stos
ljmp
xchg
dec
mov
lahf
xor
mov
sbb
adc
jb
js
pop
add
popf
int3
jbe
xchg
pusha
insl
testb
mov
mov
mov
sbb
xor
test
xchg
jno
xchg
add
jb
pop
hlt
inc
pusha
dec
sbb
push
in
dec
in
push
popf
mov
sub
int3
inc
inc
xor
lds
insl
cmp
mov
mov
jg
cmp
imul
mov
test
cli
aam
test
addr16
je
mov
sti
sbb
inc
push
mov
push
dec
xchg
or
jle
dec
adc
pushf
xlat
divl
cmp
loope
imul
cli
aam
pop
mov
cs
cmpps
and
mov
jbe
jecxz
adc
lea
inc
push
pop
cld
repz
and
icebp
jno
in
rorl
andb
dec
cmp
sub
les
jno
mov
fbld
movsl
cmc
jp
cwtl
imul
movsl
pop
or
jnp
aas
mov
popf
int3
pop
lea
sub
repz
fstl
lods
jno
sub
aas
mov
lods
fnstsw
fisttpll
jb
into
pop
mov
outsl
in
sub
xor
inc
ds
sub
inc
es
loop
xchg
push
push
inc
add
xlat
adc
cmp
mov
data16
xor
xor
pusha
jno
mov
xor
sti
mov
push
and
pop
shll
sarb
xlat
loopne
xor
pusha
sbb
outsb
lret
je
call
arpl
xchg
clc
aas
and
inc
aas
bound
xor
and
add
out
lret
movsl
out
daa
dec
movsb
shl
fwait
jp
loope
or
adc
imul
scas
fisubl
mov
mov
xor
adc
cs
add
inc
mov
pop
cmp
mov
aam
jl
adc
push
xor
cwtl
stos
leave
xlat
jb
xor
imul
outsl
mov
sbb
enter
fdivs
mov
mov
mov
or
outsb
and
inc
in
in
pop
or
jp
shll
cmc
mov
lret
and
loopne
sbb
dec
xor
ret
ss
scas
dec
inc
mov
out
and
xchg
inc
and
cli
mov
shr
adc
icebp
in
loopne
mov
push
popa
add
cmpsb
dec
stc
ret
cmp
mov
sbb
lock
and
dec
out
ss
lods
out
sti
mov
iret
xlat
add
roll
vaddsubpd
mov
xchg
jl
mov
mov
jne
mov
shlb
mov
js
in
es
and
icebp
dec
xchg
cmc
jecxz
test
jo
fldt
xor
cltd
inc
jo
xlat
jmp
or
sbb
xchg
js
shl
jno
add
mov
imul
sub
ss
int
jecxz
adc
xchg
ds
add
xchg
sahf
mov
iret
fnstcw
jg
shrb
mov
call
cltd
xchg
adc
ja
jmp
loop
jo
mov
lahf
sbb
fidivs
into
hlt
inc
lahf
fwait
mov
subb
adc
xchg
xchg
je
mov
loop
je
gs
push
outsb
int3
xchg
xchg
or
fidivrs
enter
or
add
mov
xchg
push
pcmpgtw
jg
add
leave
into
rcll
xlat
cmpsl
push
fsubl
inc
xchg
mov
push
sbb
outsb
movl
js
push
aad
xchg
pslld
in
add
sbb
adc
xchg
insl
pop
xchg
mov
in
sbb
dec
xor
push
xchg
mov
es
xchg
mov
imul
inc
mov
xor
pop
stos
pop
dec
lods
pop
push
icebp
into
lret
out
aas
movsb
mov
mov
sub
in
cld
rcl
lret
div
imul
inc
cmp
or
test
mov
push
sub
push
aam
ds
sub
loop
aaa
mov
sub
sbbb
mov
lock
push
or
fs
jp
imul
dec
adc
push
clc
or
mov
aaa
cmpsb
je
inc
adc
bound
and
push
arpl
dec
dec
dec
jp
add
jle
popa
mov
repz
daa
jb
lret
in
lds
push
dec
cwtl
sbb
sahf
fimuls
or
sub
push
jno
int
sbb
mov
mov
scas
pop
sub
pop
mov
push
mov
scas
inc
enter
imul
lods
in
outsb
in
decb
mov
movsl
push
out
cmc
pop
jno
pop
movsb
mov
mov
sub
loope
ja
add
push
pop
and
lods
dec
mov
test
ja
jecxz
mov
mov
mov
add
lahf
inc
push
push
or
rol
repnz
mov
sub
adc
cmp
add
jl
rorb
iret
sub
fdivl
sub
mov
adc
popf
jg
loop
inc
cltd
test
jnp
sbb
mov
repnz
aad
inc
aaa
loop
aam
out
ret
and
push
ja
in
or
add
jo
mov
rcl
xlat
sub
lods
adc
aas
shrl
call
mov
out
xor
ficoml
das
imulb
data16
push
rcrl
jge
cs
out
or
mov
sbb
mov
ja
stos
inc
cmpsl
cmp
shlb
mov
enter
push
sub
mov
aas
cmp
push
or
add
mov
inc
aas
adc
mov
sbb
arpl
clc
pop
imull
shrl
in
adc
addb
cmp
loop
hlt
or
pop
ljmp
adc
jmp
mov
loopne
xchg
hlt
fs
in
leave
mov
mov
cmp
push
cmp
rcrb
loop
jle
lock
jmp
insb
or
fistpl
out
mov
mov
int3
divb
inc
nop
bnd
loopne
xchg
adc
cmpsl
dec
mov
lock
mov
into
out
sarb
xor
sbb
mov
pop
adc
jno
add
cwtl
inc
shll
cmp
lock
pop
and
pop
add
xchg
sbb
push
mov
std
inc
xchg
xchg
xor
pop
out
mov
rclb
sub
popf
loop
out
mov
sarb
jbe
in
movsb
push
sub
inc
mov
les
inc
cmp
add
xlat
mov
fldt
scas
dec
ljmp
pop
addr16
cmp
stos
in
stos
dec
dec
cs
filds
jne
mov
push
gs
and
dec
add
xor
push
mov
or
call
sti
mov
mov
icebp
xchg
icebp
roll
jae
pushf
xor
push
xchg
inc
pusha
scas
andl
mov
mov
jecxz
aaa
cpuid
xor
dec
xchg
aaa
pop
xchg
std
lret
div
dec
mov
add
push
mov
ja
xchg
pop
xchg
mov
jns
sbb
pop
insl
sbb
cmp
push
jmp
jecxz
outsb
lret
aad
in
mov
aaa
mov
shll
lds
outsb
in
imul
popa
loop
dec
cmp
sbb
fwait
sbb
enter
sub
shll
inc
xchg
subl
push
mov
jmp
mov
mov
adc
ss
sub
das
fs
and
in
push
pusha
xor
dec
ja
outsl
inc
xchg
xchg
mov
dec
lcall
mov
jge
and
lds
dec
cmp
hlt
rorb
sti
fld
mov
aas
push
xor
pop
test
mov
push
pop
sbb
jne
or
xchg
sub
inc
xchg
xor
xlat
loope
stc
lea
push
jae
dec
hlt
inc
adc
add
lods
enter
loopne
pop
repz
loop
enter
cmpsl
addr16
xchg
divb
sbb
mov
incl
cwtl
inc
inc
xchg
mov
and
mov
imul
stos
cmc
pop
stos
push
gs
sti
leave
mov
xor
out
xor
js
sub
add
mov
inc
push
mov
std
push
push
in
xor
inc
mov
and
xor
push
adc
popf
inc
pop
subb
aaa
sbb
call
cli
sub
inc
and
fs
xlat
decb
lea
les
sub
cmpsb
dec
nop
jno
mov
adc
and
sbb
mov
mov
jl
mov
or
sahf
and
sbb
movsl
cmpsb
lret
cltd
fmuls
sbb
and
test
jne
aad
xchg
pop
xchg
jl
sbb
sahf
test
mov
mov
pop
pop
pop
jg
mov
test
in
mov
outsl
fnstenv
sahf
add
sub
aam
lods
mov
aam
mov
loop
fsubrl
cmp
push
ja
je
hlt
arpl
ss
lret
inc
xor
cmp
cmp
int
dec
inc
test
mov
jbe
shll
scas
xorl
add
repz
and
push
out
in
cmp
add
int
jbe
sarb
and
jbe
adc
and
call
out
pushf
sub
les
push
add
sahf
mov
push
inc
push
roll
scas
sahf
icebp
mov
negl
add
inc
jae
lcall
test
aam
mov
jno
mov
and
inc
cld
outsl
dec
test
mov
lods
scas
jae
rcrb
dec
test
push
cmp
jle
xchg
xlat
dec
mov
sti
jae
xlat
arpl
leave
repz
adc
cmp
xchg
testl
push
cmp
sub
xor
mov
out
mov
ds
inc
mov
into
fsubr
out
lods
cmp
jmp
out
aam
cmc
movsl
jmp
add
pop
fstl
jb
pop
mov
insb
inc
adc
cld
mov
cs
repz
pop
jle
fs
movsb
and
je
test
sub
push
fsubrp
mov
rol
add
pop
idivb
adc
sahf
imul
xor
cmp
or
push
push
jge
mov
push
aaa
loope
es
and
fidivrs
arpl
cmp
add
inc
push
and
pusha
jl
jmp
and
in
pop
repz
adc
sub
test
test
insb
ficoml
stc
clc
inc
fcmovnu
adc
adc
adc
sbb
jnp
aad
or
or
cwtl
in
incl
jg
pop
int
cmc
hlt
add
lea
xchg
mov
rcrb
test
mov
bound
mov
fs
dec
add
stos
movsl
push
scas
out
dec
adc
push
and
xchg
xor
lret
cltd
inc
dec
outsb
xor
cmp
orb
std
adc
push
xchg
sbb
xchg
and
jle
ds
xchg
jg
pop
xchg
pop
xor
xchg
int3
movsl
in
mov
into
xor
cltd
push
notl
lcall
pop
movsl
call
mov
mov
sahf
lea
movsl
or
icebp
mov
stc
push
js
out
mov
out
push
jns
mov
jno
scas
push
mov
fistl
xchg
or
xor
pop
aad
inc
push
fidivl
push
cmpl
js
pusha
test
clc
push
scas
pop
fisubrl
inc
imul
jg
cmp
sub
pop
outsb
xchg
xchg
mov
jmp
cmpsl
fildll
jno
repz
jnp
fnstsw
xchg
out
jle
pop
test
sbb
std
xor
lods
xlat
jb
outsl
shll
pop
or
xchg
fs
mov
lret
sub
stos
mov
popf
fstp
hlt
mov
imul
mov
lahf
ja
jo
adc
add
movb
mov
sbb
push
cs
jns
shr
dec
jmp
jnp
mov
adc
fucomip
mov
nop
or
fldenv
aam
stos
test
push
mov
cltd
adc
jecxz
add
icebp
iret
in
into
gs
mov
in
mov
mov
cmpsb
xchg
dec
jle
out
out
repnz
lret
push
loope
mov
fs
int3
movsl
lahf
mov
mov
cmpsl
mov
test
mov
shl
fisubl
mov
aad
sarb
nop
mov
pop
cmp
mov
rcrb
push
jno
ror
dec
lret
dec
sbb
and
pop
jecxz
ss
in
adcb
jne
fdivrs
shrl
cmp
lret
inc
or
push
in
into
into
loop
movsb
mov
inc
add
inc
in
loopne
xchg
dec
dec
dec
cmp
or
pop
fs
sub
add
dec
xchg
cs
cmp
push
inc
icebp
movsb
mov
fstps
clc
rcll
and
mov
cld
push
cwtl
shll
rcrl
adc
in
pop
push
mov
adc
lock
push
rolb
sub
cmp
psubd
jnp
das
or
add
insl
sbb
push
mov
inc
push
xor
dec
jne
js,pn
inc
in
std
mov
fisttpl
dec
add
push
xchg
jmp
clc
aaa
fisubl
iret
scas
lahf
xchg
or
imul
loop
xchg
inc
clc
sbb
sahf
mov
pop
dec
icebp
lret
dec
cli
in
fs
fbld
jmp
and
push
dec
push
or
xchg
leave
fldenv
mov
jo
jae
mov
nop
ljmp
sbbl
xchg
jbe
or
pop
push
out
sub
stos
mov
xor
aad
nop
or
in
popa
dec
mov
cmp
add
lods
lods
cmp
cmp
mov
mov
cld
pop
cmc
fld
insl
adcb
pop
movl
pop
repz
lret
clc
fldcw
jno
xor
lock
mov
mov
scas
xchg
mov
outsb
scas
cmp
movsl
push
gs
out
gs
lock
out
mulb
sar
mov
adc
popa
scas
ret
pop
int3
dec
jl
out
jae
aam
in
pop
pop
cmc
cmp
shl
nop
das
mov
ret
enter
jne
fcomp
dec
xchg
in
test
sbb
popf
inc
jge
adc
inc
popa
ror
push
xchg
cwtl
inc
in
hlt
inc
xlat
mov
call
fsubl
push
in
les
cmp
mov
mov
loope
push
scas
xchg
and
je
mov
cmp
sub
jg
xchg
xchg
mov
pop
lahf
stc
cmp
call
push
sarl
in
xor
xchg
add
adc
xor
in
ss
inc
or
imul
pop
dec
aas
shrb
xchg
mov
ret
test
imul
ficoml
aaa
popf
mov
mov
loop
push
pop
lret
leave
dec
xchg
pop
mov
sub
outsl
test
push
or
fs
xor
mov
stc
aaa
lods
stc
pop
dec
lcall
cmpsb
popa
xor
scas
stos
jle
dec
inc
mov
push
inc
and
sub
sbb
js
push
inc
push
jge
imulb
insb
movsb
es
ret
xchg
jge
dec
outsb
cmp
fcmovu
push
call
dec
imul
sahf
repz
aaa
xchg
mov
add
inc
xor
pop
jge
lret
cs
mov
js,pn
stos
or
push
imul
nop
sbb
jne
pushl
loopne
scas
out
push
dec
and
adc
xorl
mov
mov
dec
xchg
mov
and
mov
mull
sbb
adc
insl
je
adc
shll
shlb
jne
adc
repz
orb
aas
sbb
jmp
and
add
xor
pop
mov
push
pusha
and
push
sub
out
cmp
sbb
or
add
filds
je
mov
lret
test
or
subl
jmp
sbb
add
pop
test
inc
mov
dec
add
mov
pusha
inc
addr16
loope
aam
pop
sub
clc
lock
pushf
push
cmp
mov
clc
dec
aad
push
lcall
or
mov
push
cmp
xchg
xlat
insb
inc
mov
je
dec
test
dec
mov
xchg
xchg
arpl
pop
aas
dec
data16
cmp
test
pop
pusha
je
scas
rclb
subb
hlt
mov
sbb
cmp
inc
and
inc
mov
xor
les
stos
stos
sbbl
leave
or
pop
shlb
adc
sarl
fisubrl
test
divb
mov
in
fadd
int3
and
outsb
into
mov
mov
adc
inc
jg
dec
hlt
int3
loopne
mov
pusha
jbe
xchg
leave
loope
cmp
mov
imul
iret
push
cmpsl
cmp
movsl
mov
cs
jecxz
xchg
fsubs
out
outsb
insl
cli
push
ss
cli
loop
push
push
jo
jge
adc
fisubrl
adc
sbb
in
scas
xchg
and
stos
pop
mov
and
add
out
pop
mov
mov
scas
sahf
inc
push
ja
scas
pop
dec
fdivrl
fdiv
das
ja
sbb
pop
mov
pushf
fs
cmp
sbb
or
xchg
lods
inc
cmp
ljmp
mov
cmc
fmuls
jp
fcoml
push
dec
shrl
jns
js
push
lret
fstps
jge
pushfw
popa
popf
lcall
jmp
dec
add
or
adc
mov
push
cmp
pushf
push
xor
in
push
fstps
mov
aam
pop
push
dec
inc
rcrb
sarl
roll
xlat
mov
ret
and
sub
jo
jl
je
rcll
loope
mov
mov
push
das
loopne
fiaddl
imul
push
call
fiadds
mov
push
dec
jo
cli
das
pop
test
mov
gs
insb
pop
stc
xchg
push
jns
add
aad
aad
dec
mov
dec
sbb
call
add
dec
addr16
dec
inc
and
leave
mov
mov
xchg
dec
lds
cs
int
xor
lcall
cmp
shll
xor
mov
mov
xor
mov
mov
shrb
sbb
push
or
rolb
imul
imul
lods
fsts
fsubl
push
mov
fidivrs
xor
das
je
lock
or
popa
inc
hlt
enter
or
into
inc
rorb
mov
pop
inc
out
ja
xchg
sub
aaa
in
in
mov
xor
pop
call
cmp
scas
mov
xor
jbe
adc
in
or
and
lds
cmc
mov
lcall
mov
xor
mov
sbb
les
hlt
gs
and
lahf
bound
lcall
fists
xor
outsb
pop
add
xchg
stc
ret
in
or
lahf
je,pn
cmc
test
xor
sub
cmp
dec
cmp
xchg
pop
ljmp
lret
mov
js
shl
enter
adc
cltd
shlb
jg
in
or
dec
mov
data16
adc
mov
scas
jno
mov
xor
lods
mov
loop
xchg
stos
sbb
fdivs
rcrl
ret
loopne
jecxz
pop
sahf
mov
mov
sub
dec
out
lea
es
idivl
out
or
fwait
jo
adc
ljmp
in
roll
pop
push
mov
insb
jle
push
ss
and
sbb
imul
pop
and
add
mov
jge
jne
inc
fadds
outsl
stc
lahf
pop
and
push
sbb
push
pusha
mov
pop
push
idivb
mov
dec
arpl
out
pusha
sub
ret
pop
in
mov
cmpsl
dec
xlat
xchg
lahf
sahf
imul
xchg
xor
lods
stc
je
je
test
push
sub
mov
fdivrs
or
ret
cld
cmp
or
pop
pushf
cmpsb
ja
outsl
movsl
add
jmp
sub
mov
sahf
ljmp
daa
mov
or
fwait
dec
subl
inc
mov
xchg
mov
rolb
mov
push
insb
out
ljmp
mov
lods
popf
in
sbb
pop
lods
fdivrs
and
into
iret
mov
aas
xor
ss
shrl
outsl
xor
gs
pop
into
mov
lods
cmp
pop
pushf
and
sbb
lahf
or
out
lret
jns
lods
negl
lret
cmc
pop
test
test
repz
test
xor
xorb
pop
fsubrp
mov
sbb
divl
adc
dec
sub
push
sbb
jne
dec
icebp
fildl
iret
fsts
adc
iret
inc
je
add
addb
mov
jmp
stc
rcrb
enter
push
mov
int3
bound
mov
icebp
filds
loope
movsb
pop
add
bound
mov
cmp
repz
push
xchg
add
mov
and
adc
cmp
rcll
call
dec
sub
mulb
scas
test
pop
cmpsb
test
cli
xchg
orps
fucom
inc
lock
and
mov
shl
push
xor
jmp
push
mov
aam
notb
enter
xchg
lret
out
lret
leave
xor
mov
loope
or
and
pushf
ljmp
call
les
in
popa
inc
jno
loopne
xchg
insb
int3
push
cli
ficompl
xchg
jae
xchg
int
inc
cmpsl
insb
jg
jle
in
mov
mov
mov
xchg
shll
cli
xor
aad
hlt
adc
stos
xor
mov
push
dec
lahf
fcmovbe
jnp
lcall
xchg
rcl
sub
gs
ret
mov
xchg
xchg
cmp
pop
dec
adc
shll
loopne
jp
jge
jo
stc
mov
xchg
adcb
mov
lock
mov
outsb
mov
sbbl
jg
clc
icebp
hlt
pop
orb
xchg
jae
idivl
out
lret
shl
dec
mov
or
xor
push
out
inc
jns
lock
add
lea
cli
mov
fwait
les
stc
mov
xor
mov
arpl
mov
rorl
jno
push
imul
loop
jns
xchg
mov
movsb
ret
fdivrl
dec
scas
and
mov
add
add
mov
push
dec
addr16
decb
cmp
jb
sbb
lcall
fsubrl
sbb
sub
ljmp
pop
or
icebp
imul
jecxz
clc
popf
lcall
push
sbbb
arpl
push
test
lea
adc
enter
jg
xchg
mov
call
jmp
inc
lds
addr16
jl
xor
push
in
sub
inc
cmp
xchg
mov
imul
push
add
sub
daa
xchg
xlat
js
or
push
jle
iret
pushf
test
or
mov
call
outsb
fcmovnbe
push
mov
mov
iret
jle
mov
jmp
mov
outsl
movsb
cmc
sti
dec
sub
iret
xor
inc
enter
sub
sub
add
jl
repz
xchg
pushf
add
cmp
scas
push
mov
jo
loop
leave
lods
lret
mov
push
adc
arpl
fwait
mov
iret
hlt
xchg
cmp
cmp
and
shl
cs
or
cli
repz
cltd
cli
or
mov
and
mov
push
adc
fdivr
cmp
push
add
and
shrb
xchg
enter
or
adc
daa
jg
and
cli
rorb
jo
inc
in
mov
es
mull
jne
adc
lcall
sbb
test
es
inc
iret
and
xchg
sub
pop
and
ret
jo
jae
sbb
rolb
insl
xchg
jle
je
cmp
push
or
add
lahf
cwtl
adc
push
test
mov
jb
and
aas
cmpsl
jmp
movsb
jle
add
movsl
xor
rcl
fwait
test
xor
mov
pop
jo
data16
out
aas
stos
adc
sbb
inc
add
add
ret
push
fsubl
sub
imul
fnsave
cmp
mov
sub
inc
cmc
out
xor
test
push
sbb
out
int
shr
xlat
xchg
sbb
push
mov
mov
jmp
push
sbb
cmpsl
lret
aad
cmp
cmpsb
gs
pop
xchg
les
lea
aad
jmp
loope
nop
add
xchg
sbb
cmp
mov
stos
outsl
mov
lcall
and
test
rorb
dec
shl
xchg
xchg
mov
fisubrl
add
xchg
cmp
sub
ljmp
dec
adc
outsl
leave
mov
les
or
lret
popf
cmp
jns
lea
adc
pop
cltd
or
push
and
test
out
push
xchg
stc
orl
aaa
inc
fisubrl
shll
fidivrl
test
nop
cltd
std
push
jg
jg
lods
int
xor
xchg
cmc
es
sub
roll
and
inc
or
inc
ret
fidivrs
aad
adc
and
movsb
lods
ss
repz
daa
fwait
dec
cld
pusha
sbb
call
mov
in
mov
lods
pop
imul
mov
fidivs
push
mov
gs
lds
out
and
scas
push
popf
dec
lcall
push
pop
mov
stos
shlb
mov
pop
pusha
dec
sub
xor
xchg
fisttps
cmp
movsl
popf
je
testl
lcall
push
xchg
cltd
inc
adc
mov
ljmp
and
fcoms
negb
push
mov
mov
pusha
push
fdiv
and
iret
mov
sub
xor
push
pop
sbb
bound
jnp
mov
aaa
jle
push
into
pop
add
data16
stc
push
mov
mov
je
xor
adc
mov
test
aam
iret
ret
rorl
inc
mov
sti
and
iret
jnp
push
test
add
outsb
rclb
push
pop
pusha
inc
rcrl
scas
add
je
xchg
insl
push
or
jge
fmul
sub
lret
mov
adc
mov
sti
out
push
fdivrp
pop
insb
mov
int
icebp
jmp
sahf
and
cmc
add
push
cmc
sub
and
outsb
leave
imul
into
out
xchg
jp
mov
ret
push
inc
daa
aad
fisttpll
je
cmpsl
adc
cwtl
fistps
mov
ret
inc
add
jmp
jg
flds
jbe
repz
sub
orb
or
mov
sub
and
in
loope
daa
insb
fwait
in
aas
jmp
sbb
std
xchg
ror
negb
jne
int3
mov
inc
xchg
es
lds
push
mov
cmp
sbb
mov
ds
fwait
js
loop
nop
out
adc
stos
shl
or
enter
arpl
addr16
fisttpl
or
in
int3
adc
fadds
icebp
bound
mov
imul
in
xor
jnp
js
mov
xorl
pop
xor
sahf
clc
out
shrb
xor
and
jmp
pop
or
mov
inc
cli
les
pop
mov
lods
sub
jmp
pushf
aam
sbb
cmp
inc
sbb
shlb
jbe
es
fucomp
arpl
mov
insb
jmp
pushf
repz
xchg
jl
lea
or
or
test
into
pop
push
add
jo
mov
js
xchg
push
xchg
xchg
push
push
lds
fisubrs
andb
shll
dec
sub
jno
popa
inc
testb
ljmp
jno
sub
dec
mulb
mov
xor
into
dec
subb
mov
jnp
adc
flds
aaa
test
sbb
xor
rorl
lcall
mov
xor
inc
stos
xor
lods
mov
stos
jns
aaa
jmp
in
mov
sub
cmpsb
sbb
jb
decl
jle
mov
sbb
fsubrs
push
bound
lcall
mov
aam
push
test
push
mov
mov
fists
aaa
jne
jg
sbb
roll
subb
adc
pop
imull
cmp
movsb
jae
movsl
adc
arpl
dec
leave
xor
pop
clc
insl
lcall
and
mov
push
pop
adc
imul
jge,pn
fdivrl
jmp
jo
push
push
mov
js
mov
stos
outsb
movb
lock
aaa
das
cmp
fisttpll
jns
lcall
ja
fldz
mov
cmp
dec
inc
daa
jae
out
xchg
ljmp
fisubl
negw
std
xchg
lds
arpl
xlat
imul
inc
cltd
sub
add
fisttpl
jg
inc
pusha
outsb
cmpsb
dec
arpl
add
inc
cmc
lods
add
jne
das
mov
sbb
in
pop
out
sub
clc
into
ljmp
cmp
fbld
mov
push
test
mov
xlat
clc
inc
xor
sub
xchg
dec
ja
test
cld
clc
add
addl
mov
decl
mov
insb
mov
lods
dec
mov
cmpsl
xor
mov
and
pop
xlat
jp
jb
and
fstps
mov
insl
outsb
mov
mov
out
ds
mov
add
hlt
cmp
jae
sbb
jo
mov
xor
and
popa
test
xchg
int
outsl
dec
popf
push
mov
pop
jno
das
pop
and
mov
int3
mov
xchg
test
add
inc
loop
mov
mov
mov
sarl
sub
cwtl
sbb
jne
ret
in
and
lahf
cltd
out
test
jne
xor
mov
inc
add
jae
jle
outsb
jecxz
dec
shrl
fistps
ficoms
inc
lods
sub
xchg
jo
adc
addr16
repnz
pop
mov
adc
add
loopne
pusha
add
shll
adc
and
movsb
or
int
or
pusha
cs
and
xlat
mov
pop
push
addr16
outsl
adc
ljmp
adc
pop
into
sbbl
cmp
push
dec
inc
addb
outsl
cmp
sub
mov
adc
pushf
std
or
mov
ret
add
outsl
rcll
clc
jb
stos
or
cmpsb
dec
test
fnstsw
fidivl
mov
push
push
mov
xor
iret
shl
hlt
add
pop
imul
dec
push
lsl
loope
arpl
movsl
sbb
gs
mov
cmpsb
jbe
cwtl
cltd
push
shl
mov
scas
imul
push
stos
out
mov
xchg
mov
cs
lahf
cmpsb
cwtl
lret
pop
outsb
pop
fstl
aas
push
sbb
push
lds
fwait
xorl
dec
sti
jo
ss
xor
cmp
sbb
xchg
push
nop
lods
adc
mov
sbbl
repnz
cmp
test
dec
test
add
testb
mov
mov
mov
mov
jne
test
adcb
add
scas
cmp
push
inc
fimull
jne
push
inc
sbb
ljmp
push
jns
sub
cs
push
xchg
rcll
ret
xchg
push
xchg
add
fistl
push
incl
cmpsb
xlat
cmp
leave
fldenv
iret
sub
fisttpll
adc
push
nop
ret
inc
sbb
lret
sar
ss
cmp
sub
xchg
mov
mov
xchg
stos
and
pop
inc
test
xchg
jp
popa
lret
inc
pop
es
xor
and
scas
mov
into
test
lds
xchg
sub
test
dec
xchg
mov
mov
push
xor
mov
xor
lret
push
xchg
dec
jbe
pop
push
fidivl
mov
shlb
shlb
xchg
fmuls
shlb
sbb
mov
mov
repnz
pop
sub
mov
cmp
xor
sarb
pop
fiadds
lock
xor
stc
and
outsb
sub
fwait
or
xor
dec
scas
jmp
jns
dec
xchg
pusha
std
out
pop
add
xchg
jns
push
xor
jle
rclb
pop
cld
mov
or
fcmovu
jmp
punpcklbw
sbb
addl
add
jne
cmp
sbbl
adc
mov
push
mov
push
sub
cmp
xchg
test
sbb
pushf
call
xor
dec
ja
xlat
jmp
outsb
adc
lcall
fstpt
or
pop
mov
push
pushf
xchg
arpl
sub
mov
lcall
mov
xor
fs
lret
jbe
insl
push
mov
es
aas
mov
push
inc
das
in
fiadds
xchg
xchg
xchg
push
notl
pushf
adc
sbb
stc
out
shll
push
sbb
mov
adc
in
mov
or
fnsave
out
inc
xchg
mov
andl
std
rcll
addr16
jno
jp
or
mov
mov
xor
mov
inc
arpl
addr16
int3
test
cmp
sarb
pop
cmp
scas
mov
mov
or
or
mov
or
jae
mov
sbb
aam
mov
ds
pop
in
push
jb
data16
xchg
mov
clc
fnstsw
sbb
jecxz
mov
inc
pop
dec
cmpb
roll
setns
and
mov
jbe
ret
std
imulb
out
cltd
mov
ljmp
pushf
je
int3
movsb
clc
fucomip
imul
lods
outsb
neg
mov
jne
pop
cwtl
push
mov
xor
cmp
je
in
sbb
sub
ret
mov
jae
test
jo
repnz
xor
jmp
aaa
dec
cmp
pushf
adc
mov
adc
adc
mov
mov
cmp
sub
enter
sbb
push
aad
lcall
mov
and
jno
add
data16
sub
adc
scas
pop
mov
pushf
pushf
imul
pop
adc
cmp
xor
mov
test
and
add
mov
xchg
sahf
mull
std
mov
aad
mov
mov
cmp
mov
push
jmp
pop
enter
or
cmpsl
push
jno
push
xchg
jo
nop
mov
push
mov
pop
add
push
xchg
out
out
out
push
or
ficoml
vandnps
mov
push
pusha
pop
scas
jmp
push
or
xchg
mov
iret
mov
jnp
xchg
andl
out
lcall
daa
pop
push
mov
aad
arpl
xor
pusha
xchg
test
xor
or
xchg
jl
dec
pushf
mov
pop
xchg
sub
rcrl
aad
pop
xchg
call
out
and
xchg
les
es
mov
lret
jae
sarb
or
push
dec
std
inc
xchg
aad
out
inc
jb
jb
cmc
cmp
mov
inc
mov
lcall
ret
shr
sub
or
and
adc
pop
ds
xor
inc
adcb
aad
cmp
jae
pop
loop
dec
cs
test
test
out
jb
shrb
cmp
mov
xchg
push
adcb
pushf
lods
repz
imul
xchg
lock
push
rolb
cmp
rcll
pop
pusha
adc
aas
pop
dec
dec
mov
mov
lahf
rolb
arpl
movsb
repz
jno
xchg
or
shrl
stc
sbb
sbb
push
jnp
sub
lcall
sbb
test
ret
fadds
int
xor
mov
xchg
dec
cmp
mov
xor
iret
sahf
fistl
pop
mov
cltd
jmp
jo
adc
xchg
js
repz
lods
push
pop
inc
pop
lret
hlt
cmp
pop
ret
test
cmp
xor
lods
outsl
loopne
or
ret
notb
push
fcmovnbe
jge
jg
lret
out
jno
movsl
push
aam
add
lahf
mov
out
call
xlat
jl
test
push
pop
add
mov
filds
sub
push
xor
and
clc
mov
scas
enter
or
sub
mov
and
push
inc
lret
push
loop
push
cwtl
push
mov
imul
dec
gs
repz
mov
jno
aas
push
and
into
or
std
out
jne
shlb
fnstsw
popa
push
fstpl
inc
and
dec
dec
pop
push
mov
sub
xchg
xor
push
stos
in
inc
jns
add
inc
loopne
mov
jge
add
dec
roll
sub
cwtl
xchg
daa
mov
xchg
sbb
mov
test
push
xchg
fdivrs
inc
rcrl
test
jb
adc
jmp
repnz
cmc
fnstsw
xchg
lea
xor
jmp
in
xchg
popl
cmp
sbb
mov
and
jg
decl
mov
loope
dec
pop
popf
mov
jno
add
add
dec
push
ret
mov
lock
xlat
test
or
emms
hlt
es
in
xor
test
std
xchg
xor
je
pop
loop
pop
mov
mov
scas
sbb
lret
mov
mov
test
mov
stos
addr16
aaa
popf
not
push
rorb
adc
dec
mov
mov
mov
and
sbb
and
dec
js
or
or
loop
inc
push
fldt
mov
subl
shlb
outsb
or
jg
les
cmp
sub
dec
repz
addr16
mov
adc
cwtl
lret
shll
cld
inc
adc
fcoml
lods
lcall
insb
aam
mov
enter
push
iret
push
adc
aaa
push
das
movsl
rcll
es
imul
sub
enter
push
xchg
xor
gs
adc
insb
sbb
mov
mov
push
jge
xchg
xor
jo
mov
adc
jge
lret
jge
shlb
shl
stos
iret
data16
in
test
pusha
mov
pop
inc
or
rcrb
shlb
xor
mov
cli
pusha
or
hlt
outsl
cmpl
daa
push
mov
scas
popa
das
dec
sbbb
lret
push
rorb
test
dec
jae
aad
cmc
sbb
out
test
sarl
add
cmc
cmc
cmp
ret
daa
pop
and
add
cmp
pop
xchg
icebp
loop
mov
cltd
cli
sti
or
leave
aam
rorb
mov
daa
dec
pop
loopne
movsb
incb
in
lock
jp
ficomps
divl
lret
loopne
insb
xor
stc
or
fsts
push
ficoml
enter
xchg
inc
cld
loopne
lahf
jns
fcmovu
sti
dec
add
xor
dec
dec
sub
dec
add
dec
pop
jmp
loope
cmpsl
int
cmpb
jo
js
pop
nop
add
enter
cmp
ljmp
inc
pop
jge
adc
in
sbb
test
test
loopne
iret
mov
je
scas
cmp
pusha
mov
pop
inc
das
inc
add
push
repnz
or
add
mov
pop
cld
xchg
outsb
sti
enter
sbb
lahf
inc
das
dec
mov
daa
lret
push
adcl
aaa
outsl
cmp
or
or
inc
out
iret
push
test
pop
cmc
js
enter
xchg
daa
aad
pop
push
fildll
dec
pop
insl
mov
shlb
sbb
mov
sub
push
pusha
lods
mov
enter
sub
arpl
fwait
sub
mov
shlb
inc
mov
push
and
xchg
cmp
cmc
movsb
pop
dec
out
cmpsb
int3
mov
xchg
rcrl
lds
lods
mov
add
loop
out
aaa
dec
jle
push
repz
sub
dec
cmp
shrb
mov
dec
jle
outsl
fwait
pop
repz
in
faddl
mov
inc
outsl
pop
cltd
jo
jle
sub
enter
cwtl
jp
xlat
dec
insl
add
shl
push
mov
mov
out
icebp
imul
lods
push
jb
enter
outsl
push
data16
and
add
mov
mov
mov
call
and
outsb
jmp
sbb
es
xor
in
and
into
inc
jns
ss
fsub
inc
xchg
xor
gs
adc
pop
sbb
out
adcl
in
sub
inc
xchg
ret
outsb
ret
xor
jmp
dec
cmp
or
or
repz
xor
aaa
rol
dec
mov
int
cmc
xor
pushf
into
mov
mul
xchg
jg
lcall
loop
jge
add
or
popf
lret
jle
sub
jge
xlat
movsl
fiadds
leave
xchg
mov
xorb
mov
xor
cwtl
inc
fisubrl
inc
lods
ror
jns
or
shl
dec
ja
dec
mov
pop
imulb
jle
std
push
test
imull
stc
mov
loope
aad
mov
mov
push
roll
outsl
sbb
cltd
or
leave
mov
out
aad
or
stos
add
lret
fadd
pushf
jp
jmp
lds
jp
xchg
fidivs
push
mov
test
loope
bound
push
pop
into
inc
pop
mov
popf
cmp
inc
lret
mov
fildll
ds
jecxz
out
and
gs
push
cmp
ret
ret
xchg
jl
mov
sahf
hlt
sbb
add
in
aaa
movsb
jle
cmp
inc
fistpll
inc
lahf
mov
cs
cmp
push
push
adc
lds
out
cwtl
xorb
ja
jecxz
adc
xchg
shl
cmpsb
pop
xor
lret
sbb
pop
or
aaa
popf
or
lds
mov
pop
fiadds
jp
sbb
xchg
outsl
pop
lahf
in
xchg
push
lahf
jo
test
rorb
shll
cmpsl
js
icebp
dec
pusha
enter
ja
lcall
lock
or
ja
adc
jmp
pusha
push
sub
mov
cmpsl
cmp
jl
lods
push
push
repnz
ret
jb
dec
js
ja
mov
sub
xor
cmp
adc
out
xlat
aad
fsubs
jg
lret
fwait
cwtl
and
add
cltd
dec
dec
adc
popl
cmp
jne
gs
mov
test
adc
lock
adc
orb
orl
arpl
dec
and
out
add
add
adc
sub
sbb
mov
mov
jg
or
dec
testb
lcall
or
add
xchg
scas
sub
lcall
mov
sbb
cli
in
cli
lock
or
insl
jl
daa
jmp
popa
xchg
mov
sarb
fimuls
mov
jp
mov
iret
mov
lock
push
movsl
arpl
pusha
iret
sbb
xchg
cli
mov
push
mov
out
jbe
sub
bswap
and
push
movb
jmp
aad
fcomip
cltd
adcb
jnp
sbb
hlt
xorl
add
test
xor
or
sbb
add
sub
nop
jle
fwait
fwait
xor
ljmp
fldenvs
cmc
icebp
outsb
in
or
xor
rol
fs
lock
rolb
sarl
aam
mov
xor
fcoml
or
andb
int
loopne
cmc
sub
push
add
into
push
in
or
outsl
sahf
inc
push
insb
cmp
mov
sub
addr16
leave
pusha
add
add
push
cmp
pop
add
pop
ds
adc
out
xchg
and
lret
adc
testb
ret
insl
inc
push
aaa
pop
in
movsl
es
mov
fistpl
push
arpl
fsts
jb
push
imul
push
mov
jo
jo
arpl
dec
add
and
cmp
mov
mov
inc
sbb
adc
mov
push
ja
ds
xchg
dec
pop
mov
movsl
push
in
ret
jle
loop
in
mov
lret
jno,pt
xchg
push
or
imul
xor
adc
dec
jmp
lea
mov
sti
push
add
sbb
scas
loopne
enter
mov
push
xor
aaa
test
mov
add
pop
push
lods
cmp
test
or
mov
sub
insl
or
rolb
int
ds
sub
ret
filds
push
outsb
out
fwait
sahf
fistpll
lret
int3
or
sbbl
cli
into
lea
mov
inc
lret
xchg
jecxz
outsb
test
jl
ret
cmp
dec
std
fs
add
xchg
sbb
lock
push
cmp
ss
pop
xchg
xor
xchg
stos
mov
lds
inc
and
inc
dec
clc
sub
int3
dec
sbb
imul
dec
pop
lock
jne
inc
sub
dec
push
popf
sub
adc
jecxz
ja
push
or
and
cld
xchg
scas
sub
daa
lahf
adc
jmp
or
mov
add
dec
movsl
jb
inc
in
xchg
xor
add
pop
sbb
sti
leave
inc
xchg
xor
jo
mov
inc
fists
or
movsb
or
and
dec
lods
cmp
sahf
adc
or
clc
std
aam
xchg
insl
and
add
sti
push
cmp
js
inc
sub
mov
mov
jb
scas
pop
adc
pop
push
fstpt
or
in
jne
push
xchg
mov
jae
int
dec
xchg
out
ljmp
xchg
leave
lods
fwait
int
pop
lret
mov
cmp
push
push
cmp
cmp
inc
incb
loop
jo
dec
jo
or
push
in
notb
cld
xor
push
cmpsb
pop
mov
scas
lret
push
sarl
push
adc
jle
iret
mov
push
dec
test
and
imull
inc
ror
les
mov
cld
mov
in
xor
leave
cmp
dec
pop
out
mov
cwtl
mov
dec
mov
or
sbb
test
push
imull
or
stos
xchg
xchg
repz
xchg
icebp
push
or
sub
mull
inc
xor
jmp
lea
push
pop
insl
ss
fstp
mov
xor
fisubs
pop
popf
push
and
adc
loope
cmp
mov
int
es
and
insl
push
jle
imul
ret
rcrb
sub
or
or
addr16
mov
xchg
cltd
sbb
in
pushf
rcll
fcompp
and
and
rorb
sub
dec
mov
inc
in
test
leave
int3
push
dec
leave
cmpsl
movsl
test
dec
je
xor
xchg
inc
adc
fidivrl
and
push
loop
jmp
subb
fsubr
or
test
push
and
cmc
outsw
scas
stos
cmpsl
hlt
xchg
stos
xlat
sets
pop
xor
sti
aas
push
mov
cs
add
das
push
mov
push
leave
stc
mov
loope
pop
mov
ja
cmp
or
cltd
mov
mov
arpl
fistl
or
push
jo
or
lea
idiv
rol
pop
std
inc
ja
mov
sub
pop
mov
lock
and
push
and
rcrb
add
popf
cmpsl
shl
or
inc
fsts
sbb
push
lret
push
cmp
xchg
aaa
in
pop
in
cs
cmp
jno
bound
sub
inc
je
cmpl
or
push
sub
push
push
and
imull
sub
das
mov
cmpl
push
and
dec
or
sub
insl
push
sbb
shlb
and
out
mov
int3
push
or
push
pop
rcrb
pop
and
aam
mov
cmp
sub
stos
cmp
jns
mov
repnz
fdivrs
enter
sbb
inc
out
sub
into
xor
sub
dec
sbb
or
out
mov
ficoms
roll
loope
daa
mov
hlt
loope
mov
adc
sub
xor
addb
mov
or
out
sub
ret
cwtl
cmp
in
add
fisttpl
scas
test
outsl
and
icebp
rolb
cmpsb
pusha
mov
adc
mov
mov
aam
lock
scas
add
pop
insl
fwait
aaa
cltd
les
sbb
pop
sbb
cld
gs
lret
pop
mov
scas
in
aam
jns
push
dec
dec
push
cmp
xor
push
push
inc
xchg
xchg
dec
cmp
cmpsl
pop
dec
fdivrs
shll
ret
popf
cld
push
fwait
addr16
inc
stc
mov
sub
mov
enter
sub
aad
pop
push
gs
xlat
xchg
scas
jmp
lock
pop
xchg
pushf
pop
js
call
sbb
pushl
dec
mov
pop
cld
push
repz
pushf
cli
andb
mov
cltd
mov
ss
loop
loop
push
xor
inc
insl
test
push
ja
fwait
das
xchg
pop
dec
out
loope
push
nop
inc
arpl
test
ljmp
movsl
xor
jbe
xchg
les
sub
repz
lret
sbb
imul
aad
push
cwtl
ljmp
mov
or
fnstenv
xchg
mov
mov
icebp
pop
mov
rcll
out
sub
mov
movsb
shr
rolb
lcall
repz
jo
test
lret
fsubs
xor
mov
jns
xchg
xor
and
lock
clc
insl
pop
test
mov
cmp
dec
stos
cmp
dec
pop
mov
pop
loopne
test
loope
adc
fwait
dec
jno
mov
pop
dec
mov
mov
cmp
push
sbb
loopne
ja
cmp
inc
outsb
pop
shlb
ja
dec
in
jle
aaa
jmp
sbb
imul
push
inc
mov
imul
and
test
xchg
push
inc
jbe
mov
shrl
mov
mov
into
sub
mov
lret
pop
adc
xchg
cs
idivl
lods
or
fldcw
push
inc
xchg
mov
lock
or
shrb
aaa
xor
data16
inc
and
loopne
mov
inc
andb
pop
testl
xchg
push
dec
mov
jo
das
cmp
and
test
or
push
into
dec
fldcw
in
pop
mov
pop
inc
pop
mov
jae
cmp
negl
push
fdivrs
jnp
inc
pusha
test
shl
rcr
jb
aam
movsl
out
adc
js
lods
cli
aam
fildl
jb
ret
loope
add
dec
push
pop
push
pop
xor
dec
cmp
jg
movsb
stos
in
fdivp
mov
xlat
ljmp
dec
xchg
jb
pop
adc
xor
jae
mov
gs
push
jle
cmp
jbe
rol
out
std
sbb
pusha
xchg
and
jp
mov
rclb
rcrl
mov
lods
mov
jb
aam
cmp
cli
imulb
shr
mov
dec
jne
xor
xchg
pop
aaa
lret
fisubrs
mov
sbb
stos
mov
sbbb
mov
mov
adc
popf
xchg
lcall
cld
push
lods
aas
push
divl
fs
fsubr
aaa
inc
add
mov
dec
cmp
or
or
scas
pop
jp
mov
add
cmp
aam
mov
pop
rclb
cmpsl
ret
cmp
sarb
fldenv
or
ljmp
sub
xchg
mov
mov
cmpsl
addr16
out
add
adc
xorl
fld
mov
or
add
or
ljmp
call
cmp
fdivrs
push
sbb
mov
cmp
xchg
in
call
mov
xor
jl
pop
popa
push
fistps
lock
push
aaa
xchg
jo
mov
in
mov
clc
xchg
icebp
xor
sahf
lcall
icebp
je
pop
xchg
cmp
je
scas
jnp
push
mov
notb
pusha
push
xchg
aaa
and
test
shr
push
insb
sbb
xchg
sub
fisubl
or
iret
shlb
xor
imul
inc
sbb
push
mov
dec
dec
mov
push
faddp
jp
js
jnp
sub
push
cmp
cmp
cmp
btr
cmp
xchg
add
shlb
jb
lods
js
out
and
lahf
out
xchg
xchg
push
mov
mov
notb
sub
fs
roll
push
adc
icebp
mov
inc
xor
push
testl
insl
scas
in
ljmp
inc
jp
lea
movl
faddp
orb
pop
mov
mov
dec
xchg
cmp
lods
cmp
cmpsl
push
nop
xchg
scas
sbb
outsl
out
lcall
or
jbe
inc
insl
pop
adc
mov
aaa
imul
and
cs
lcall
cli
mov
jb
mov
cmpsl
decb
test
push
es
pop
xlat
and
aad
mov
scas
scas
mov
aaa
xchg
lods
aaa
ret
cmp
rclb
test
rcrb
or
loop
xchg
sub
cli
loop
les
fs
mov
sbb
jge
push
clc
xor
in
inc
push
scas
mov
xchg
jle
cmp
and
lcall
repnz
fxch
pushf
cmp
gs
popf
fmuls
cmp
xchg
mov
sub
sti
inc
mov
xlat
and
stos
clc
pushf
icebp
pop
ja
push
fisttpll
outsb
stos
fdivl
mov
test
add
rcll
xchg
int
dec
cmp
mov
popf
lahf
push
xchg
out
and
rorb
data16
insb
mov
outsb
mov
hlt
jo
rorb
test
je
jl
mov
pop
jae
pusha
xor
ds
cmc
jns
jmp
jns
addr16
push
dec
aad
dec
mov
inc
mov
in
cmc
clc
add
push
outsl
or
mov
add
sub
mov
mov
arpl
push
fs
pop
or
notl
mov
push
leave
inc
divb
mov
shlb
adc
testb
mov
xlat
sub
sub
in
cs
sbb
andb
mov
add
push
adc
scas
leave
push
push
jle,pn
lea
and
rorl
sbb
ret
lcall
push
cmc
stos
or
sub
mov
jbe
das
push
ret
mov
jo
xor
inc
iret
pop
push
push
sbb
add
and
loopne
mov
jecxz
lods
cmp
pop
popf
sbb
xor
pop
aad
xchg
pusha
add
xor
sahf
addr16
mov
in
push
mov
or
inc
je
push
je
inc
dec
in
scas
sbb
and
or
mov
jmp
aas
les
test
or
outsl
out
inc
mov
into
pop
push
or
dec
lahf
xchg
add
inc
imul
cld
lods
imul
je
imul
push
mov
je
jl
jecxz
lret
ret
adc
cmc
xchg
xlat
xchg
and
ret
out
xchg
outsl
sub
lea
lahf
cwtl
push
decl
outsb
xchg
pop
aam
xchg
std
mov
push
push
sub
mov
ret
sti
mov
je
insl
shlb
xchg
jge
fucom
xchg
cmp
pushf
pusha
or
ds
add
xor
mov
pop
mov
mov
sbb
push
or
add
fs
sbb
adc
inc
leave
fdivl
jo
mov
xchg
cmpb
jle
ss
or
imul
std
push
push
imul
fiadds
lods
xchg
int
adc
test
js
sub
pop
cmp
adc
jge
scas
fsubs
push
and
mov
aad
cwtl
add
and
lret
adc
and
aad
sub
sarb
mov
or
jns
shr
and
subl
lods
ss
xorl
ret
das
mov
loopne
loopne
or
into
das
pop
into
xor
cmp
shlb
sub
mov
nop
xchg
leave
mov
or
sbb
mov
popa
jg
inc
lret
pop
and
xchg
iret
sub
mov
pop
je
jnp
fcompl
sub
adc
cmp
dec
lret
mov
cmpl
adc
js
add
adc
arpl
push
data16
ds
cmp
and
push
repnz
add
mov
pop
pop
sub
sub
js
loop
adc
fdivl
mov
popf
aam
jmp
fcoml
cld
pop
hlt
mov
xchg
push
push
movsl
es
xor
pusha
jecxz
xchg
dec
cltd
push
mov
fcmovnbe
dec
jne
jb
cmpsb
sub
push
and
stc
add
stc
and
mov
and
mov
in
cmpsl
stos
or
pop
fidivs
push
or
rcrl
xchg
dec
dec
fbld
mov
jne
test
xor
xor
jne
je
inc
sub
cmp
cmp
push
das
sbb
push
enter
lret
dec
cmp
mov
cmp
jg
ja
inc
adc
dec
push
mov
inc
or
mov
inc
mov
enter
sub
push
add
sub
or
fs
add
pop
test
repnz
out
mov
push
cs
mov
adc
out
dec
outsl
lock
inc
stos
dec
lods
scas
and
rcrl
mov
fcomps
les
cmp
xchg
movsl
xchg
push
mov
cmp
xchg
adc
shll
test
lock
add
mov
jnp
daa
pop
xor
push
test
sti
mov
in
or
xlat
mov
pop
insb
sarb
lret
test
fnstcw
and
or
cmc
ficoml
mov
addl
jae
icebp
call
push
push
in
jns,pt
fwait
cs
imul
and
inc
es
nop
and
ja
icebp
das
in
mov
mov
pop
sub
subb
dec
sub
nop
test
xor
mov
mov
movsl
stc
and
dec
adc
addl
popf
xchg
cmpsl
cmp
mov
xor
add
xchg
dec
sub
cmp
daa
sbb
repnz
ds
ret
jne
or
adc
or
dec
mov
rcrl
xchg
pop
adc
mov
jae
std
outsb
cmpsl
inc
sbb
fcoml
ret
ds
test
sub
fdivrl
lret
lahf
in
push
repnz
pop
pop
lods
xchg
repz
out
cli
out
pop
cmpsb
scas
jnp
xor
subb
cmp
sub
pop
xchg
or
aas
mov
paddb
hlt
ficoml
pop
jae
push
mov
shll
adc
pop
adc
shrw
push
and
mov
inc
adc
cmp
add
jae
xchg
notl
test
dec
sbb
insl
rol
movsb
sbb
pop
mov
ja
mov
fcmovnb
pop
je
xchg
push
lret
adc
imul
rcrl
data16
ljmp
leave
mov
sbb
movsl
dec
mov
in
adc
fsts
mov
adcb
scas
imul
orl
sub
into
or
cmc
test
push
xor
push
notb
sahf
pop
xchg
fldt
push
inc
xlat
mov
popf
cmp
shrl
inc
mov
mov
add
dec
xor
cwtl
mov
dec
sub
outsl
ljmp
aaa
jbe
jl
call
loopne
add
jle
lea
push
rolb
fstp
out
in
xor
mov
cmc
neg
aad
push
sub
addl
mov
or
adc
in
xor
mov
mov
mov
mov
cmc
into
pop
sub
shlb
cmp
imul
sbb
jo
rcrl
lahf
add
sub
jb
enter
data16
dec
cmp
aam
call
int
ljmp
into
lds
jo
aad
add
xchg
sub
xor
movsb
loop
mov
fists
mov
out
test
jbe
push
inc
addr16
in
xorl
xchg
insl
pusha
inc
mov
sbb
mov
movsb
cmc
pop
xchg
data16
sbb
insl
popa
mov
mov
inc
dec
dec
cmpsl
mov
push
xchg
lcall
test
sub
xor
icebp
push
mov
xchg
cmp
xor
cli
loopne
in
cmc
and
fsubrs
mov
adc
dec
jge
cmp
bound
not
push
aaa
xor
aad
xlat
lea
in
in
aad
xchg
je
push
xor
and
push
dec
stc
mov
adcl
rcll
mov
cwtl
mov
loop
ret
jnp
test
movsl
mov
lret
hlt
push
inc
mov
push
mov
mov
cmp
xchg
rcll
sbb
mov
push
adc
movsb
lea
and
sub
stos
mov
and
adc
lcall
adc
add
and
shr
mov
lods
mul
pop
int3
sahf
ds
mov
lea
sahf
mov
or
rol
test
jmp
sbb
sub
pop
stos
fcomps
loope
mov
popa
push
test
daa
or
push
sarb
xor
inc
push
loopne
pop
enter
out
jno
push
inc
adc
imul
mov
rclb
dec
jae
imul
pop
inc
mov
cmpsl
test
or
mov
ljmp
loopne
inc
int3
sahf
jnp
sbb
fs
std
adc
movsb
out
or
test
mov
ret
pusha
sbb
mov
inc
mov
arpl
je
outsl
mov
mov
or
and
cmp
fstpt
xlat
outsb
or
push
pusha
enter
pop
mov
rolb
loopne
jb
dec
mov
xor
pop
sub
push
scas
pop
std
mov
mov
jbe
frstor
push
out
out
push
sbb
and
xor
test
hlt
mov
mov
push
adc
bndstx
mov
sbb
xor
imul
push
into
push
lahf
inc
addb
sbb
inc
loope
shrb
mov
outsl
fstpt
ret
adc
enter
daa
fmuls
movsb
and
pop
pop
pop
popa
shlb
mov
jo
pusha
pop
shrb
pop
and
xor
sarl
rol
imulb
popf
mov
clc
cmpsl
mov
adc
leave
inc
clc
imul
dec
test
jb
mov
cli
push
ss
sbb
push
sub
in
and
loop
sbb
xchg
pop
mov
ds
adc
cs
ficoms
cmpsl
test
mov
sbb
mov
stos
jno
stos
and
jae
push
cltd
sub
mov
or
cwtl
mov
pop
subps
inc
cmp
sbbb
jg
dec
mov
outsb
pop
mov
push
inc
or
sub
xor
adc
repz
mov
inc
dec
jns
jecxz
psrad
sti
mov
jne
in
int
cwtl
inc
stos
xchg
arpl
ret
cld
sbb
cmpsb
faddl
testl
sahf
lret
out
in
out
clc
and
pop
sub
movsl
mov
xor
and
test
xor
pop
jae
lods
into
test
xchg
jno
aad
jns
rcl
inc
pslld
out
fiadds
call
dec
xchg
subl
enter
add
mov
sbb
into
sbb
mov
push
rorb
stos
aad
adc
dec
insb
mov
clc
sub
inc
xchg
push
mov
mov
xchg
inc
lods
imul
jle
daa
sahf
ja
int
pop
push
hlt
notb
out
mov
loope
push
cs
sti
mov
inc
inc
clc
aas
and
add
aam
stos
jae
xor
sahf
je
mov
test
data16
test
outsb
cmc
xor
add
scas
and
sbb
xchg
aas
mov
sub
xchg
out
add
add
fnstenv
pop
shll
mov
xlat
add
out
xor
push
aad
push
or
cs
mov
sub
in
pop
mov
and
sub
cmpsb
fisttpll
std
or
movl
mov
mov
mov
push
test
cmpsl
xchg
lods
je
pushf
ret
add
inc
xchg
fadds
dec
xchg
xchg
sub
push
jp
push
jle
mov
sbb
cld
push
xchg
xchg
fistps
or
rclb
mov
imul
lret
loope
ljmp
sarb
and
mov
mov
fs
xor
push
xor
mov
shll
dec
outsb
jbe
arpl
add
add
rolb
and
inc
ret
sbb
lret
jle
fucomp
inc
add
inc
jo
mov
inc
pop
push
xchg
fcmovnbe
inc
rcll
fisttpll
pop
xchg
mov
xchg
ret
push
es
jmp
mov
or
hlt
test
or
cmp
aaa
popa
scas
push
xchg
push
mov
jne
jae
adc
lods
leave
pushf
jp
aad
mov
jmp
jne
cli
repz
mov
push
jp
lret
into
mull
icebp
cmp
xor
mov
jle
insl
mov
adc
push
test
dec
adc
push
ja
stc
push
sub
mov
or
lods
lock
sub
inc
fs
gs
jl
mov
fisubrs
clc
je
inc
xorl
xor
fwait
cmp
or
frstor
test
push
clc
sub
jl
les
xchg
mov
loopne
fs
loopne
adc
popa
cmc
repnz
jg
add
shlb
push
dec
xchg
sbb
inc
cs
mov
push
xor
into
jp
mov
pop
inc
call
nop
out
movsb
ja,pn
repnz
movsl
das
dec
inc
adcb
sbb
sub
das
je
fnstenv
orl
push
pop
lret
out
sahf
out
sub
pusha
add
cmp
int
call
js
insl
lds
mov
cmp
mov
and
pop
mov
jp
mov
lret
bound
sub
sahf
push
push
pop
fistl
hlt
mov
sbb
out
and
scas
inc
aam
sbb
lret
inc
sti
push
inc
dec
jae
dec
mov
mov
cmpsb
xchg
aam
pop
and
sbb
jae
lea
popf
nop
pop
adc
mov
aaa
roll
shlb
repz
in
or
jno
call
sbb
cmc
mov
popa
int
enter
in
movb
adc
lea
sub
adcb
add
shrb
dec
or
push
ljmp
outsb
bound
mov
sub
subl
cld
out
js
lock
mov
pusha
pop
incb
decl
out
mov
arpl
xlat
mov
mov
clc
rcrl
xchg
xor
rol
orpd
and
std
and
and
add
out
jo
dec
iret
add
jp
xor
sub
outsl
sub
or
shr
push
sbbl
pop
f2xm1
sub
filds
and
cmpb
lret
out
outsl
cltd
sub
xchg
fwait
mov
je
sub
add
int3
pop
push
and
jmp
jb
or
inc
push
cmp
js
mov
or
das
cmp
lock
mov
cmc
adc
incl
xchg
outsb
mov
je
movsl
add
rclb
push
divb
push
inc
mov
push
loope
pop
push
cmp
lret
mov
test
sub
xchg
jno
mov
mov
xor
movsb
mov
sub
xchg
cmp
decl
fadds
push
cmpsb
jno
mov
mov
shrl
jne
insl
dec
jp
xlat
or
repz
adc
xchg
test
das
add
push
mov
or
jnp
outsb
sub
push
mov
sub
ds
test
data16
xor
push
mov
out
shrl
inc
pop
data16
push
aas
and
js
rorl
orb
out
ret
adc
xor
mov
lcall
xorb
dec
stos
mov
jle
pop
outsl
and
mov
fisubl
fldt
jmp
cli
xor
mov
insb
mov
aaa
and
mov
cwtl
inc
xchg
leave
mov
addr16
lock
fs
mov
push
fucomi
jge
cmc
jno
lock
sub
push
push
jne
mov
jmp
push
add
out
test
pop
loop
dec
loopne
push
jb
outsl
fstps
mov
cmp
and
xor
push
inc
pop
popf
pop
xor
fiadds
cmp
or
push
aad
inc
dec
fldt
sarb
jmp
mov
fiaddl
fsubr
or
add
cmp
sti
jle
popf
inc
adc
outsl
int
xor
addr16
fstps
test
or
jecxz
push
out
push
lret
pop
push
mov
and
and
in
dec
mov
pushl
adc
loop
sbb
dec
push
cmp
out
mov
xchg
add
testb
fcomps
mov
jnp
sub
scas
bound
rcll
dec
sub
cmp
or
jae
repnz
lds
ja
jp
inc
push
subl
mov
push
mov
sub
add
stos
mov
test
in
sbb
outsl
cwtl
sub
es
int
and
ds
shrb
fucom
xchg
into
lods
rorb
pop
out
inc
or
mov
out
in
pop
jmp
dec
stc
and
mov
outsl
cs
cmp
sbb
jns
pop
sub
ljmp
popf
dec
inc
mov
lods
data16
in
or
adc
mov
fists
out
clc
sub
inc
inc
dec
cmc
and
cmp
les
pop
icebp
mov
test
fistl
test
das
jmp
scas
aam
push
sub
jne
adc
les
xor
jecxz
in
repnz
ret
xchg
mov
scas
and
or
daa
mov
aas
fsubr
cmpsl
mov
ljmp
xchg
scas
jge
scas
loope
repz
fisubl
cwtl
loope
lret
in
shlb
inc
leave
dec
pop
mov
dec
pop
add
mov
or
mov
cmp
in
mov
cmp
out
push
lods
fucomi
mov
ja
pop
cs
and
inc
daa
divb
fcomps
adc
shlb
inc
orl
or
cs
mov
cmc
dec
cs
out
inc
movsb
lret
rclb
icebp
aas
jmp
add
clc
or
call
out
mov
cwtl
pop
cli
cltd
inc
mov
pop
mov
and
cmpsl
sub
pop
cmp
arpl
jp
sub
sbb
pop
lret
inc
lods
xlat
sbbb
mov
ret
cltd
out
add
test
sub
jg
repz
jp
outsl
mov
fdivr
pop
dec
jo
notl
dec
mov
fdivl
mov
movsb
aas
jl
lods
xchg
pop
inc
int3
incb
cmp
aaa
pop
inc
jl,pt
neg
fnsave
mov
mov
rolb
call
or
mov
sub
lods
pop
or
adc
sub
mov
ljmp
xlat
xor
sahf
jnp
lods
rorb
ja
pop
inc
xor
xor
xchg
or
daa
orl
sbbl
loop
je
mov
hlt
cmpsl
fs
je
es
imul
mov
sarl
jns
jno
or
dec
or
pop
xor
jl
xchg
lock
stos
out
push
repz
xor
cmpsl
stc
dec
mov
jns
cmp
xor
out
push
or
inc
adc
push
xor
bound
je
fmull
jb
adc
inc
push
mov
popl
gs
sbb
hlt
xor
out
stc
pop
ljmp
data16
push
lea
cmp
or
mov
lcall
pusha
addr16
loope
xor
mov
add
cmp
mov
out
jge
jl
mov
test
jecxz
adc
call
fwait
push
lods
sbbb
ljmp
adc
fdivrs
popa
cltd
mov
mov
mov
repnz
dec
aam
lds
mov
aas
dec
add
inc
ss
inc
pop
fsubr
jl
repz
nop
or
and
out
add
pop
and
insb
mov
cwtl
adc
mov
shll
and
mov
aaa
fwait
add
lret
pushf
mov
cmp
lcall
sub
xor
lret
and
stos
fisubrl
mov
cmp
xor
hlt
cwtl
loopne
stc
popa
mov
or
push
rcrb
shrb
jmp
comiss
jmp
sub
popf
adc
jne
test
arpl
xor
push
jno
mov
push
call
jg
lods
adc
mov
dec
out
xor
push
mov
jne
jg
fisubl
movsb
rorb
jge
xor
iret
dec
mov
xlat
out
jmp
in
lret
adc
out
cmpsl
push
jae
push
mov
mov
mov
cmp
addb
std
pop
popl
rcr
push
enter
fimuls
ds
cmpsb
jb
pop
mov
shrl
stos
repz
imul
sub
mov
jno
push
scas
push
push
sti
mov
jbe
sbb
pop
es
pusha
stos
aad
mov
cli
lds
sub
mov
cmp
inc
sub
pop
and
inc
mov
in
jl
dec
add
out
call
push
mov
in
sub
stc
repz
mov
fldl
mov
icebp
inc
mov
icebp
sub
sub
pop
add
pop
outsb
test
pop
jge
adc
jl
jp
loopne
pop
cmp
mov
push
cmp
xchg
jbe
jmp
mov
mov
xor
pop
sbb
push
or
lcall
inc
scas
mov
mov
mov
mov
dec
jle
gs
or
in
ja
add
ja
sbb
cld
xchg
stos
inc
int
addl
insb
mov
cmp
mov
jns,pn
lret
xchg
mov
push
dec
sbb
ret
or
shrb
adc
mov
xchg
cli
ret
icebp
cli
jae
pop
fcomi
iret
push
stos
adc
xchg
loop
pushf
test
notb
cld
cmp
dec
mov
dec
add
loopne
pop
enter
data16
call
push
pop
dec
cmpsb
pop
or
and
inc
sbb
aad
test
jle
xchg
jmp
push
mov
test
pop
daa
repz
cld
jae
sbbb
fldenv
loop
fs
sub
sbb
ret
fwait
fwait
jns
push
xlat
es
push
xor
rcl
sbbb
cmp
mov
incb
ret
mov
mov
rep
push
sub
inc
adc
fstpt
leave
inc
test
add
popf
sbbl
ret
jmp
icebp
dec
adc
imul
outsl
mov
jl
fwait
mov
lock
mov
push
cwtl
loope
faddl
inc
or
shll
sub
push
fs
nop
in
and
adc
xor
add
sub
mov
fdivrp
push
inc
dec
adc
jns
insb
dec
push
into
push
cmp
sbb
mov
inc
ljmp
push
push
push
daa
push
int
lret
push
in
push
push
fisubs
test
xlat
popa
negl
add
mov
cli
aad
push
mov
fistpll
fiadds
daa
cmp
sub
cmc
cld
nop
add
mov
movsb
outsl
pushf
sub
dec
daa
pop
in
inc
sub
jg
mov
sub
adc
scas
imul
ljmp
xchg
adc
cmp
jo
fiaddl
jecxz
mov
stos
lods
ja
sbb
mov
sbb
ljmp
sbb
sub
sti
pop
mov
xchg
add
and
inc
lret
jle
es
jp
dec
sbb
iret
sub
dec
mov
xchg
and
aad
sub
push
dec
mov
stos
push
fistpl
neg
add
push
jmp
pop
sub
lock
xchg
or
sbb
cmpsb
into
movsb
add
jg
outsb
cmpsl
pop
xchg
clc
aad
mov
out
andl
je
add
mov
out
xchg
cmpsl
dec
jns
imul
fdivs
lock
mov
insb
and
lea
jg
insb
jns
ss
jne
inc
add
xchg
dec
xchg
dec
mov
lahf
push
mov
fdivs
xchg
repnz
enter
or
and
cmp
out
test
push
or
xchg
pop
call
cli
inc
sub
in
rcrb
inc
cmc
test
jmp
mov
push
mov
out
test
test
lods
dec
pusha
mov
ret
push
pushf
jb
shrb
jae
xchg
ret
jb
push
and
sub
jle
cmp
or
cmp
jne
iret
push
das
xchg
nop
orl
insl
andb
xor
xchg
mov
pop
jae
xchg
sarb
jg
ljmp
jmp
test
pop
mov
ja
pop
call
add
adc
or
in
pushl
test
inc
push
mov
jnp
sbbl
into
fwait
or
xor
sub
inc
repz
adc
push
xchg
pop
adc
mov
mov
jns
push
mov
movsl
add
mov
in
sub
sbb
in
inc
jecxz
cwtl
shr
je
adc
jns
dec
push
sub
arpl
and
sub
mov
push
cmpl
lahf
loopne
mov
jl
popf
dec
jnp
xor
clc
data16
xchg
jns
pop
sub
xor
fidivs
pop
mov
pop
cmp
inc
and
in
sub
jecxz
push
lret
rclb
and
push
lods
dec
cmp
lock
rclb
cmpsb
push
mov
jmp
sbb
sbb
dec
cmpsb
dec
gs
shlb
jbe
or
sub
movsb
mov
mov
lds
push
xchg
jno
mov
inc
out
mov
data16
xchg
cmpsb
dec
sub
cltd
jl
rcrl
mov
xor
inc
cmpsb
ja
adc
aaa
pop
pop
sub
js
out
mov
imul
es
cmp
adc
dec
dec
out
fcompl
mov
cmp
and
cmpsl
into
lods
add
daa
push
pop
aad
mov
std
xchg
leave
and
add
sub
jno
mov
push
jmp
xorl
cmpsl
push
add
das
mov
mov
subb
add
jecxz
out
fisttps
push
sbb
and
adc
pop
jns
cmpsb
sbb
inc
daa
xlat
loopne
push
or
inc
add
add
xchg
sub
int3
insl
cmp
adc
xchg
scas
fwait
fwait
pop
mov
or
or
jnp
cmp
movsl
iret
inc
test
cmp
andl
rclb
shr
je
movsl
daa
iret
dec
xchg
mov
pop
pusha
pop
pop
inc
cmp
mov
mov
ljmp
add
cld
sbb
sub
addb
cmp
push
aaa
jae
in
int
mov
adc
xor
mov
aas
lcall
ficompl
pop
pop
add
nop
xchg
icebp
mov
pop
mov
push
mov
and
lahf
stc
stos
cmp
or
xor
dec
and
xor
mov
fldcw
sbb
addl
lret
sarl
push
cmp
mov
cmpsl
inc
pop
cwtl
add
mov
sbb
xor
cmp
or
mov
push
inc
aaa
and
dec
cld
mov
sub
mov
bound
repnz
jns
cmp
sbb
xchg
add
bound
je
push
sub
orb
add
test
mov
push
ret
movsl
lret
xlat
repnz
cltd
mov
aaa
enter
data16
xor
mov
test
jg
push
mov
stc
push
xchg
fmuls
outsb
test
or
cwtl
out
mov
ret
popf
cmova
lcall
test
repnz
aaa
jno
ljmp
push
push
sbb
inc
and
or
lods
nop
dec
aaa
js
lds
jae
add
jecxz
data16
xchg
test
lock
filds
push
loope
sub
xchg
inc
out
or
cmpsl
add
enter
sarb
std
xor
insb
pop
push
sahf
add
nop
sbb
cmp
add
cmpsb
out
icebp
sub
mov
daa
xor
lock
lret
popf
sbb
enter
add
lcall
sub
dec
sbb
mov
int3
jbe
and
mov
adc
lods
sub
call
and
setb
ja
leave
test
addr16
or
cmp
jle
fsubs
dec
jmp
or
cltd
push
or
cmp
arpl
mov
xor
lret
notl
xor
mov
jbe
in
repnz
inc
ja
in
f2xm1
inc
dec
push
icebp
inc
and
pop
aaa
mov
cli
sub
push
mov
fld
in
nop
movsl
fbld
mov
sahf
xor
pop
push
sbb
js
mov
or
xlat
mov
test
mov
xchg
pusha
out
inc
adc
pop
dec
xor
out
das
addr16
dec
mov
dec
aaa
fs
lret
out
lock
pop
shll
lods
mov
enter
bound
loop
and
sbbb
push
imul
push
outsb
adc
dec
notl
insb
sbb
fs
xor
lahf
dec
mov
ficomps
xchg
icebp
fadds
adc
shll
mov
jnp
dec
lds
inc
and
adc
mov
int
push
cld
sub
aad
mov
mov
test
dec
dec
mov
sbb
mov
jns,pn
sub
and
scas
leave
daa
sti
test
lods
and
jno
inc
mov
es
ja
inc
mov
popf
aas
sub
out
lods
adc
xor
sbb
cld
lea
or
mov
bsf
int3
popa
faddl
cmpsl
call
loop
and
cmp
and
iret
inc
push
xor
add
sub
in
cs
cmpsb
jl
psubb
dec
mov
arpl
xor
jle
sbb
std
out
and
sub
lret
or
cmp
xor
lods
bound
test
sub
jae
mov
movsl
fwait
arpl
pop
stos
mov
xor
test
xor
pop
cmpsb
xchg
movsl
sbb
mov
out
push
stc
mov
icebp
test
cmpsl
dec
mov
insb
xor
rol
dec
iret
jge
push
icebp
aad
sub
mov
leave
xchg
add
hlt
jnp
mov
xor
jmp
push
push
push
xor
lahf
dec
dec
and
ret
nop
fildl
test
test
and
sub
test
pop
mov
js
test
inc
add
lods
push
xor
ss
insl
xchg
sti
fwait
mov
loope
lock
jns
roll
popa
loope
inc
movaps
cld
cmpsl
fdivrl
stc
sahf
in
ret
fidivl
aaa
jecxz
dec
cmp
jp
xor
pushf
movsb
adc
rcl
knotw
push
xchg
sbb
shl
cs
pop
out
dec
cmp
es
ficoml
xchg
out
sub
pop
sbb
pop
jb
dec
sub
rorb
or
pop
jbe
cmp
lds
mov
inc
push
cld
lods
and
add
aas
xchg
fdivrp
addr16
iret
mov
pop
pop
mov
or
or
pop
lods
mov
pop
lods
push
movsl
push
into
push
out
sbb
in
fistpll
das
add
test
sub
dec
sub
test
pop
lahf
jmp
scas
loopne
mov
jne
out
or
ret
adc
push
popl
mov
xchg
jbe
xchg
push
lds
jp
stos
dec
or
test
in
xor
mov
xchg
mov
int
fcoms
cli
into
adc
or
in
and
and
xchg
push
les
push
loop
into
inc
push
rorb
fsubs
call
adc
icebp
pop
or
sub
ja
sahf
clc
xchg
inc
mov
add
enter
mov
push
xchg
jns
daa
std
jg
pop
loop
and
mov
adc
cmp
xchg
xchg
test
movsl
imul
lret
mov
ficoml
pop
sbb
pop
xchg
nop
push
cwtl
xor
sub
xor
jne
fs
dec
sti
sub
inc
mov
dec
test
test
cmp
mov
pop
ljmp
stos
and
and
ja
dec
mov
imul
cltd
add
jnp
in
inc
je
xor
and
fwait
sbb
xchg
xor
stos
mov
mov
stos
push
test
js
cmp
cmpsb
loope
cmp
jl
xorb
fwait
popf
cmp
jle
movsb
pop
stos
in
xchg
in
xor
dec
xchg
fiaddl
inc
cmp
rcrb
lea
out
push
cwtl
and
outsb
mov
cltd
jae
cmpsl
adc
xor
fistl
add
sub
add
jbe
push
cmp
and
mov
movsb
jno
outsl
xchg
jecxz
or
xchg
and
ret
sbb
mov
inc
mov
dec
push
sub
fs
ret
jge
sub
in
pop
mov
sub
loopne
push
inc
mov
mov
jmp
push
fidivl
es
in
cmp
outsl
mov
dec
inc
sbb
in
fimuls
int3
inc
sub
fistpll
lods
jae
pop
lods
clc
mov
faddl
filds
push
pop
pop
aaa
out
add
popa
inc
or
and
pop
fucom
or
dec
hlt
mov
pop
nop
add
roll
push
add
xor
xchg
push
or
and
nop
cmpsl
sbb
and
jo
rcrl
mov
xlat
sub
mov
add
imul
pop
daa
fcompl
fldenv
jb
sahf
orl
xorl
sbb
cmpsb
adc
mov
and
jg
adcb
dec
das
add
push
popa
xchg
dec
and
imul
rolb
gs
add
je,pn
jp
mov
lods
inc
sbb
mov
cmp
dec
jg
adc
xor
mov
sbb
pop
lcall
sbb
es
pop
loop
mov
lcall
stos
and
inc
das
fwait
lret
and
push
mov
cmp
add
push
insb
filds
or
xor
jne
mov
pop
xchg
inc
and
cmp
mov
push
adc
xor
ret
dec
ret
aad
das
es
mov
lds
inc
mov
stos
jecxz
call
or
popa
sbbb
sub
loopne
sahf
xor
pop
jg
aaa
addr16
pop
inc
outsb
pop
in
and
mov
mov
inc
and
sbbl
jecxz
xor
sbb
push
push
adc
decl
push
inc
stos
mov
outsb
stos
popa
mov
push
out
pusha
pop
stos
out
jg
push
mov
xchg
notb
cwtl
pusha
rcrb
lcall
mov
cltd
js
aam
adc
lret
xor
cmpsl
adc
imul
jb
mov
sub
pop
or
jmp
pop
and
mov
addr16
sub
mov
mov
and
test
xchg
xchg
int3
subl
sti
mov
xor
mov
cwtl
lods
pop
popa
sbb
loopne
icebp
mov
jne
sub
hlt
mov
aam
dec
js
add
in
int3
movsb
jo
pop
aam
sahf
push
in
mov
subb
rorl
mov
xchg
mov
popa
mov
call
lds
cmp
into
shr
fdivs
cmp
xor
ja
int3
stos
clc
jo
aam
dec
pshufw
or
insb
dec
repz
sbb
dec
data16
arpl
push
adc
jne
sbb
xor
xor
pop
jp
add
mov
jnp
pop
cmp
push
test
jecxz
pop
push
and
in
or
push
lods
mov
pop
inc
jne
enter
lret
lea
imul
cmpsb
repz
pop
jne
jae
cld
push
data16
sahf
imul
mov
jbe
inc
jmp
xor
add
or
sbb
popa
das
fisttpl
mov
arpl
icebp
dec
push
jbe
cli
mov
add
aas
cmp
orb
enter
push
cli
pop
addr16
leave
inc
cli
lcall
sub
push
std
dec
lcall
and
jno
inc
ds
mov
lret
addr16
dec
sbb
or
inc
push
icebp
adc
cwtl
int3
or
jnp
cltd
pop
adc
add
mov
xor
aaa
hlt
es
shl
cmp
sbb
or
jge
ja
jae
iret
fucomp
in
leave
cltd
mov
inc
add
andb
mov
ljmp
xchg
je
movsl
adc
outsl
sub
cmp
jno
out
cmp
stos
jbe
lock
dec
push
out
sub
xchg
inc
out
nop
push
jno
dec
mov
push
dec
or
lret
xchg
ss
mov
xlat
mov
test
cmpsl
add
stos
jle
xchg
sbb
repnz
mov
pushf
shlb
mov
add
xchg
adc
xor
mov
mov
jns
mov
pusha
jmp
sub
scas
shrl
xchg
push
scas
sub
xor
cmp
or
push
ja
push
fisttpll
lahf
ja
lcall
or
inc
mov
loop
loop
stc
lahf
ss
jns
mov
cmp
mov
icebp
xchg
shlb
leave
xchg
jge
mov
and
pop
lahf
insl
pop
std
sbb
ret
rclb
or
pushw
sub
or
int
mov
imul
mov
stos
popf
js
fdivrl
ljmp
dec
pop
push
jmp
fistps
aam
movsb
jg
inc
jl
add
xchg
mov
out
mov
jmp
jns
push
nop
mov
dec
pop
or
push
push
lahf
js
jb
loope
and
mov
add
mov
pop
jbe
scas
mov
xor
cmp
icebp
xchg
sbb
sub
xchg
scas
mov
movsl
std
bound
jnp
and
in
mov
mov
les
cmc
ds
fsubl
fcomps
or
xchg
or
add
scas
inc
sub
fimull
outsb
push
les
inc
movsl
aad
rclb
int3
outsb
out
into
shlb
repnz
cmc
stos
ss
mov
push
mov
push
repz
xchg
or
mov
insl
pusha
cmp
daa
add
and
fstl
adc
sar
xchg
mov
pushf
mov
adc
or
xchg
pop
cmpsb
dec
lret
cmpsb
jecxz
xor
pop
sub
xor
mov
pusha
es
xchg
pop
xchg
xlat
subl
sub
fwait
sbb
sahf
mov
mov
stos
stos
loopne
mov
sub
setl
popf
subb
mov
mov
mov
cwtl
and
or
fstps
jle
fbld
mov
mov
jbe
cmp
xchg
insb
nop
movsl
mov
xor
stc
jo
scas
in
lock
pop
int
inc
push
pop
popa
mov
dec
ja
xchg
in
int
aas
pop
xor
xchg
lock
mov
mov
cld
add
into
cmpsb
fmull
pop
cmp
cld
push
fs
arpl
mov
xchg
push
call
push
cwtl
mov
daa
jle
stos
pop
enter
cli
hlt
add
xchg
jb
xchg
mov
sbb
cltd
popa
and
or
pop
rcl
ljmp
sub
mov
shrb
xchg
sub
stc
sub
push
int3
cltd
pop
addr16
out
cmp
xchg
push
jno
lahf
dec
rcll
sbb
push
pop
cmpsl
push
daa
and
mov
fadd
and
dec
in
jnp
leave
add
mov
adc
arpl
ss
pop
mov
cmp
and
sbb
or
out
dec
push
pop
rorb
lods
stos
dec
sbbb
cmp
xor
data16
gs
adc
xchg
ret
mov
fmul
mov
cmp
subl
xchg
shrb
insb
or
cltd
int3
or
inc
mov
xor
dec
fprem
add
scas
cmpsl
cltd
and
pop
pop
lods
push
and
bound
mov
daa
pushf
jle
pop
pushf
test
dec
or
add
fcompl
test
das
jnp
jns
dec
pushf
lret
pop
aam
bound
mov
xchg
imul
call
xor
sbb
xchg
xor
imul
test
pop
pop
jo
mov
icebp
or
sub
clc
add
sti
lahf
dec
or
adc
lds
fistpll
int
outsl
jmp
pop
inc
mov
mov
push
pop
into
and
dec
mov
test
into
sbb
mov
mov
mov
out
int
out
xor
imul
scas
push
lahf
push
into
mov
jno
call
push
sub
out
and
enter
xchg
mov
cmp
mov
cmp
int
pop
mov
jmp
nop
cs
aas
ret
test
sub
push
sbb
jecxz
pcmpeqd
dec
mov
jb
or
cld
push
mov
stos
cmp
sbb
scas
and
xor
jno
xchg
mov
push
addl
dec
in
movsb
imul
adc
add
lret
dec
xchg
mov
add
lret
aaa
rorb
xchg
and
gs
jp
imul
add
aam
incb
daa
add
xchg
mov
lcall
pop
mov
and
mov
push
jmp
lahf
pop
inc
xchg
repnz
ljmp
jo
dec
hlt
dec
cmpsb
dec
sub
cmp
dec
jae
sub
adc
inc
push
enter
pop
adc
mov
enter
mov
stc
jmp
inc
pop
cli
mov
sbb
enter
lcall
xorb
insb
push
into
out
aas
xchg
push
and
call
pop
lcall
xlat
jb,pt
imul
mov
cmc
pop
std
jb
in
cwtl
pusha
lods
mov
pop
mov
mov
pop
cld
push
push
jl
pop
and
cmpsb
sti
inc
sbb
xor
mov
mov
jl
jg
je
out
ret
dec
pop
je
lcall
mov
jne
inc
mov
pop
repnz
dec
pop
scas
dec
pop
xor
ret
jno
gs
push
dec
mov
fcmovb
fldt
scas
lret
icebp
pop
and
mov
xor
fdivl
inc
aas
lea
cmp
imul
sti
xor
mov
sub
addr16
mov
scas
sub
lret
stos
pop
jle
dec
iret
sti
dec
loopne
jbe
leave
add
in
sub
mov
pop
add
cmp
jmp
popa
jo
outsb
jl
fbld
fldl
pop
inc
push
fidivrs
addr16
mov
push
in
ror
and
jecxz,pt
into
xor
loopne
mov
jecxz
aaa
mov
cli
fcmovne
jbe
mov
mov
nop
lret
cwtl
jmp
lret
mov
pop
fstl
xor
lods
pop
inc
fst
xchg
imul
adc
adc
inc
ficomps
xlat
lods
adc
push
sbb
xor
mov
xchg
and
mov
aaa
call
leave
popf
xor
aam
aam
mov
push
cmp
int
arpl
push
shl
insl
into
out
dec
test
add
fwait
nop
andl
ds
cmp
hlt
stos
add
pop
es
andb
and
fsub
lea
pop
and
xor
jae
jmp
test
jecxz
mov
dec
push
mov
jp
adc
orb
sub
xor
cmc
das
sub
int3
mov
stos
jmp
jo
inc
push
in
add
dec
mov
ret
mov
call
std
pop
mov
xor
ss
lds
dec
lods
mov
outsl
test
inc
imulb
jmp
xchg
addr16
loope
sbb
xor
xlat
pop
aaa
mov
adc
std
loopne
iret
dec
test
sbb
jae
and
inc
sub
mov
push
shlb
and
lods
inc
je
mov
pop
out
sbb
xchg
adc
js
add
mov
out
sbb
stos
std
add
cld
clc
sbb
pop
push
pushf
data16
ret
cmp
lcall
fdivp
scas
enter
mov
push
jnp
pop
cmp
rcrb
xor
xor
mov
mov
repz
inc
adcb
push
lea
lea
xchg
into
xor
sarl
subb
mov
je
cmp
iret
leave
cmpsl
xor
je
rcrl
add
xchg
or
cmp
gs
cmc
sub
adc
int
fnsave
pop
and
adc
sub
jl
ret
mov
cwtl
and
dec
fmulp
imul
jl
xchg
xchg
dec
mov
push
xchg
popa
dec
data16
pop
arpl
mov
fsubr
into
scas
imul
and
adc
stc
or
daa
cmp
push
adc
shlb
in
loop
sbb
xor
les
insl
sub
leave
fwait
roll
mov
xor
sub
sarb
in
stc
xchg
popf
cmp
jle
int3
xchg
insl
jge
mov
mov
xor
jnp
sbb
test
mov
pop
pop
shll
jb
mov
ss
int3
dec
xchg
repz
les
cmpsb
je
cli
push
lahf
cmp
repz
dec
dec
mov
inc
aad
hlt
push
xchg
fwait
inc
iret
pop
sti
xchg
cmpsl
mov
sub
sar
mov
jns,pt
test
inc
out
stc
dec
adc
inc
adc
inc
push
test
aas
xchg
rol
clc
inc
mov
insl
xor
sub
aaa
and
mov
or
add
pop
inc
clc
mov
cmp
or
sub
lret
pop
out
cmp
mov
pop
pop
jnp
ret
jmp
push
lcall
xor
pop
jp
xchg
stc
fadds
dec
ret
mov
lahf
lods
cmc
sahf
fisubs
jg
jb
and
ret
dec
jb
xchg
jno
cmc
icebp
pop
or
push
xchg
mov
outsl
or
xor
inc
push
or
jnp
push
movsb
leave
inc
ja
iret
cmp
and
adc
and
jno
shll
int
mov
mov
das
js
mov
ret
jbe
lods
sub
xchg
dec
add
int
mov
xchg
jns
pop
or
aad
cmp
inc
adc
outsl
aam
insb
addl
add
shrl
sbb
add
xchg
adc
lods
mov
xchg
push
in
sub
aas
stos
dec
lds
jo
xor
mov
sub
mov
jmp
xchg
loopne
xchg
fwait
sahf
aam
sbb
pop
lahf
aas
add
mov
andb
sub
mov
or
lcall
scas
mov
mov
mov
stos
push
adc
data16
fcoms
aad
nop
data16
fisubrs
movsl
push
xlat
and
and
lods
jmp
inc
repnz
pop
push
ja
sub
jg
mov
das
daa
imul
fldl
sbb
adc
ret
push
mov
aad
jae
scas
js
mov
imul
pop
cmp
leave
xor
mov
sbb
lea
mov
aaa
add
fs
in
dec
mov
push
enter
jg
inc
cmp
xor
push
rcrb
nop
xor
arpl
push
fdivl
arpl
inc
clc
or
rclb
push
mov
sbb
es
sbb
push
sti
imulb
and
adc
lahf
lcall
ljmp
pop
in
pop
jns,pn
daa
stos
test
les
xor
arpl
xchg
xchg
out
dec
cwtl
pop
push
and
adc
aas
movsb
aad
cltd
enter
ds
int3
lret
int
add
cmp
jne
aam
add
lds
stos
je
inc
scas
fiaddl
test
push
inc
or
mov
in
mov
mov
push
push
cmpsb
dec
inc
push
and
ficomps
cltd
push
rcrb
in
hlt
icebp
add
inc
sbb
dec
cwtl
add
push
push
repz
jmp
imul
icebp
cmp
cld
jno
dec
pop
mov
filds
sar
jbe
xor
push
push
add
xchg
cmp
in
ret
sub
xlat
xchg
cmp
inc
in
negb
push
dec
fs
push
es
or
sahf
lcall
movsl
sbb
mov
insl
pop
lods
inc
cmp
jae
jl
jne
ret
push
enter
mov
call
mov
movsb
outsb
push
shl
cmovns
int3
fwait
sbb
cli
fldl
pop
icebp
mov
pop
es
pop
fisubl
adc
sub
sbb
mov
xor
into
mov
ss
xchg
xor
imul
xor
fwait
inc
jns
popa
cmp
mov
adc
pop
int
mov
icebp
add
add
in
mov
jno
test
sti
ret
sti
jmp
sahf
repnz
sarl
adc
xor
xor
sahf
lods
test
push
cmp
sbb
imul
idiv
inc
inc
out
pop
test
jae
stos
add
ret
je
ret
jne
dec
outsl
jb
xor
push
icebp
shlb
mov
cmp
pop
push
cmp
aas
add
not
adc
popa
and
dec
leave
scas
pop
in
leave
pop
loopne
cli
outsl
iret
mov
add
lret
jge
mov
call
xchg
inc
cmp
adc
int3
test
dec
mov
mov
pusha
lret
cli
xchg
iret
dec
mov
ljmp
mov
jne
movsb
movsb
sti
test
bound
rclb
popf
mov
push
sbb
jne
incl
js
push
push
addl
jp
xchg
aaa
out
fnstcw
ljmp
pop
push
mov
dec
test
subl
xchg
mov
inc
ja
js
pop
out
pop
or
pop
push
in
inc
das
and
or
and
mov
out
ret
or
jns
and
dec
xchg
cld
nop
xchg
in
cmpsl
pop
sbb
push
mov
adc
movsl
test
xor
or
jae
iret
and
jg
popf
call
popf
pop
mov
in
int
and
pop
enter
fcomi
fs
pop
shlb
mov
repz
repz
jae
sarl
mov
xor
push
imul
xchg
inc
loope
mov
aaa
mov
aas
and
subl
cmp
dec
sbb
xchg
xor
push
jae
movsb
jge
loopne
mov
push
lret
ficoml
int
scas
lock
out
jno
in
stos
int3
out
inc
inc
aad
decb
inc
in
out
mov
and
mov
imul
sbb
mov
xor
inc
dec
adc
mov
sahf
lret
out
sahf
push
cmp
xchg
inc
lods
pusha
adc
decb
sub
xlat
imul
mov
xor
call
xchg
inc
lcall
loopne
sbb
inc
test
and
cli
in
dec
lea
sub
inc
mov
shll
inc
stos
test
xchg
push
mov
xor
js
inc
iret
scas
push
push
pushf
lds
sub
push
mov
inc
stos
arpl
sbb
lahf
pushf
data16
xchg
sti
mov
mov
mov
dec
mov
fs
pop
aaa
push
add
dec
pop
mov
iret
xor
andb
add
divl
xchg
fdiv
adc
lahf
adc
mov
fcmovu
or
jae
xchg
mov
mov
dec
fildl
push
sub
sbb
in
std
test
gs
sub
repnz
inc
add
enter
dec
pop
loopne
push
testb
iret
scas
sub
sub
push
insb
mov
stc
mov
mov
nop
insb
mov
add
jo
iret
rolb
cmp
ret
fidivrl
mov
cmp
dec
cmp
sub
aam
xchg
inc
pusha
xor
sub
nop
ds
push
jg
lcall
xchg
in
pop
es
jge
aam
mov
push
xchg
mov
push
pop
enter
mov
mov
insl
mov
pushl
les
lahf
jg
testb
insl
xchg
cmp
pop
add
insb
imull
cmp
aas
iret
add
add
mov
je
xchg
divb
cmp
cmp
sub
scas
outsb
sbb
pop
out
aam
cltd
push
xor
cmc
xchg
jmp
add
aam
sub
addr16
insb
xchg
aam
sti
mull
xchg
adc
inc
or
add
adc
cmp
bound
frstor
push
jmp
aam
rcll
fimuls
loope
sahf
rol
je
adc
les
lahf
xchg
inc
imulb
cmp
and
xchg
push
mov
sbb
pushf
jmp
xchg
cld
jnp
stos
mov
pop
inc
sub
out
sub
std
xchg
lds
imul
xchg
xor
mov
jl
mov
mov
std
add
imul
nop
sbb
lods
test
jne
or
fwait
add
andb
imul
jl
fwait
inc
aas
jb
jl
loop
pop
sub
icebp
cmc
push
push
dec
or
call
in
pushf
mov
das
sbb
and
lods
andl
xchg
and
or
sbb
flds
xchg
xor
mov
and
and
fwait
in
xlat
in
stos
dec
xchg
idiv
xor
fbstp
leave
loopne
nop
add
in
ja
push
in
add
adc
add
sub
lahf
sub
cmpsl
cmc
scas
sarb
scas
push
pushf
xchg
lods
mov
and
popa
ds
mov
sub
cmp
push
xchg
mov
push
sbb
dec
pop
in
data16
sbb
shlb
push
jl
xor
jno
cmp
inc
addr16
adc
xchg
or
test
and
lods
jno
out
xchg
or
or
stos
jmp
imul
or
call
push
mov
ret
xchg
ret
fwait
jo
iret
pop
or
test
mov
lods
js
sahf
sbb
arpl
sbb
adc
dec
les
mov
add
mov
shlb
cmp
sbbb
hlt
mov
mov
aad
shll
addr16
mov
ljmp
adc
sbb
inc
xor
dec
loop
sub
adc
add
pop
sbb
lret
xchg
mov
and
ja
mov
in
push
adc
fistpll
push
and
mov
sub
sub
imul
cmp
pop
aaa
pop
mov
repnz
shll
adc
push
stos
arpl
mov
loopne,pn
shll
jne
mov
cmp
sub
int
out
arpl
pop
loop
sub
ret
test
out
xchg
mov
push
jno
test
jno
mov
sbb
xlat
jle
inc
add
aas
cwtl
and
mov
fimuls
fnstenv
andb
dec
int
std
cmp
and
adc
adcb
adc
ds
mov
or
in
and
or
dec
or
jo
rcll
and
and
repz
sbb
jl
jmp
push
dec
sahf
adc
sbb
les
xchg
out
cs
dec
movsb
stos
dec
mov
fwait
scas
insl
add
pop
xchg
push
pop
mov
fstpl
fs
lock
mov
cmp
mov
adc
fdivrl
addr16
mov
add
popf
fsubl
lret
sbb
orl
aam
fnsave
pop
inc
incb
and
sar
adc
pushl
mov
jno
iret
mov
or
mov
push
lret
jg
popa
cs
iret
and
gs
dec
das
pop
les
aam
icebp
out
imul
add
adc
sub
std
fildl
or
arpl
test
fcomi
popf
loop
loop
push
into
cmp
repz
loop
orl
psubsw
cmpsl
dec
pop
sub
and
int
lcall
fxch
out
js
push
xchg
pushf
insb
add
dec
cmpb
cmp
rcrl
dec
mov
xchg
movsb
cmp
pusha
lea
stos
mov
pop
shll
rcrl
ja
outsl
test
aas
repz
mov
dec
cli
push
lods
add
jae
mov
int3
loope
lret
in
mov
or
xchg
push
in
mov
jns
loopne
pop
aas
ret
mov
push
pop
ja
push
imul
add
fsubl
jmp
dec
shlb
lahf
and
insb
data16
sbbb
adc
roll
pop
inc
jle
xchg
bound
add
std
pushf
mov
push
les
sub
inc
cmpsb
push
add
mov
lods
pop
mov
mov
or
add
sub
jmp
push
imul
sbbb
divl
das
gs
pushw
lods
mov
mov
jns
add
rol
pushf
or
fldl
cli
push
fdivrs
add
mov
push
enter
aam
jns
cmp
mov
clc
push
xor
rcrl
add
test
ss
xchg
and
sub
shlb
dec
push
popf
mov
cmp
insl
sbb
pushf
sar
mov
mov
push
dec
sub
mov
iret
push
mov
pop
mov
outsb
add
push
or
aam
lock
in
sub
xor
xor
cltd
cmpsl
sub
int
rorb
lock
inc
cmp
jns
inc
jecxz
scas
push
cmp
clc
ljmp
outsb
pop
dec
stc
cmpsb
or
mov
inc
mov
sub
repnz
push
mov
xor
push
orl
movsl
jl
sbb
ja
sub
inc
iret
cmp
fldl
push
pop
fwait
jno
pop
es
dec
sbb
pop
sbb
pop
lcall
mov
movsb
dec
push
push
xchg
jbe
jne
cmp
jae
ljmp
cmp
es
pop
lods
int
inc
ficompl
xchg
adc
sbb
sarb
xchg
xchg
dec
adc
or
aad
mov
pop
inc
mov
lahf
xor
hlt
ss
into
negb
pop
inc
iret
mov
xchg
insb
xchg
in
movl
js
shll
cmp
inc
xor
mov
aaa
insl
outsb
pop
in
inc
jbe
imul
cmp
or
xor
divb
jnp
test
mov
xchg
or
xchg
flds
mov
popa
dec
cmc
loopne
je
outsb
xchg
cmp
cmp
mov
adc
jl
jl
je
scas
imul
pop
lcall
mov
or
fldt
push
aad
out
test
mov
fwait
jecxz
scas
loop
push
xor
inc
loopne
lock
lcall
sbb
adc
lods
push
sub
pop
cmp
mov
cmp
dec
fisttpl
movsb
pop
adc
aam
inc
jle
stos
lahf
inc
lods
test
xor
pop
in
fldcw
push
ds
cmp
iret
std
xor
mov
sbbb
add
iret
jbe
lahf
pop
lret
jecxz
es
mov
adc
lea
jno
xchg
dec
mov
xchg
popa
mov
lret
insl
lret
pop
jo
outsl
pop
inc
rolb
mov
cmpsl
dec
test
fwait
paddusw
and
clflush
lds
pop
shlb
pop
daa
xor
add
or
mov
int3
idivl
and
sub
fcom
pop
in
xchg
shll
xor
sarb
xchg
sub
push
pop
jae
lds
int
or
pop
dec
xchg
jecxz
push
and
aas
addb
into
jg
inc
pop
push
out
xchg
xchg
adc
xlat
scas
jp
in
pop
lea
sub
jb
jae
sub
movsb
gs
imul
jns
lods
dec
stos
jbe
popa
rcrl
mov
fiadds
rep
cs
imul
ja
inc
jae
insb
ffreep
push
mov
cli
pop
pop
sar
test
inc
xor
and
or
xlat
mov
fwait
jecxz
sub
mul
sbbb
mov
jns
fwait
data16
xchg
test
loop
pop
add
xchg
aaa
mov
jnp
cmp
scas
cmc
mov
call
bound
adc
in
mov
mov
loope
out
popa
jnp
or
sar
adc
adc
sarb
sub
daa
loope
xchg
jns
dec
lods
lret
push
push
adc
mov
dec
cmp
mov
cmp
push
bound
pop
mov
stos
or
loope
sahf
push
sub
adc
inc
mov
ja
mov
and
push
out
fcoms
stos
in
rorl
adc
dec
lret
xorl
rcrb
movsb
jecxz
imul
jge
sub
mov
jl
sub
lock
mov
inc
mov
push
pop
outsl
dec
int3
xlat
mov
push
inc
in
das
push
pop
add
jp
addr16
std
mov
bound
xor
dec
push
add
sarl
sub
push
push
push
jl
mov
jmp
adc
adc
dec
inc
iret
xor
mov
addr16
mov
insl
cmp
xor
insl
dec
adc
aaa
mov
gs
and
jmp
shll
jns
push
sbb
xorl
aad
lret
jle
adc
xor
inc
incb
xor
std
push
xor
mov
pop
dec
lcall
cmp
xor
es
or
dec
lock
xor
mov
push
cmp
adc
movsl
cmpsl
xchg
mov
test
cmp
addr16
in
add
sbb
imul
enter
xor
and
jge
ds
jmp
mov
fistpll
adc
xor
pop
pusha
sbb
jbe
push
out
inc
lahf
push
mov
mov
ss
or
mov
push
aas
cld
ja
jmp
push
push
mov
adc
lcall
pop
adc
cwtl
icebp
xchg
not
or
insl
pop
call
adc
pusha
push
jbe
pushf
jmp
cwtl
loope
push
ljmp
stos
mull
mov
ret
cwtl
jae
lods
fcmovnu
imul
imul
mov
inc
mov
pop
aaa
loopne
roll
ret
daa
insl
test
push
out
out
in
shlb
mov
xchg
ret
mov
push
cmp
add
out
xor
subb
in
sarl
cmpsl
push
push
pop
cmp
xor
pop
ret
mov
call
out
rcll
or
imul
cltd
mov
cmpsl
or
daa
xor
popa
inc
mov
xlat
jae
dec
sbb
xchg
xor
dec
cld
imul
repnz
les
cmp
dec
mov
jne
mov
jl
int
ds
xor
pop
pusha
sub
dec
jb
jo
fwait
mov
and
or
jmp
pop
push
pop
pop
pop
addl
and
syscall
or
ret
mov
jl
xlat
jecxz
loop
xlat
in
and
ds
filds
sbb
scas
cmp
xchg
xor
in
mov
jno
imul
pushf
xchg
mov
hlt
add
out
dec
ds
pop
jmp
call
mov
rcl
fwait
mov
in
sti
repnz
cltd
outsl
stos
cmp
jb
push
out
jle
aaa
pushf
cmp
mov
push
int3
test
push
pushf
push
sbb
sub
inc
or
mov
shlb
hlt
loop
in
inc
in
jns
mov
inc
std
and
cmp
adc
out
pop
shll
dec
push
sub
adc
inc
xchg
adc
nop
sub
xor
sub
cmp
fsubp
dec
adc
pop
and
adc
imul
repz
rcrb
lret
pop
test
lods
lcall
fists
test
mov
movsb
scas
xchg
jmp
add
and
arpl
mov
jecxz
push
gs
sbb
shrb
in
jo
pop
cmc
push
lock
gs
ja
xchg
in
out
lods
arpl
cmp
xor
pusha
divb
mov
les
jbe
outsb
movsl
pop
and
sbb
daa
sub
push
test
adc
mov
and
shlb
push
fisubs
cmpb
cmp
mov
cmpsl
pop
rcrb
mov
std
add
shlb
or
cmp
xor
sub
add
mov
jno
pop
sbb
mov
stc
and
fstpt
movl
daa
aam
test
into
movsl
cwtl
aas
push
mov
add
xchg
add
jg
or
xchg
lods
pop
sbb
mov
push
push
pop
mov
fisubl
fwait
imul
les
repz
loopne
xchg
pop
pop
push
stc
jbe
adc
movsl
or
sub
test
xchg
push
movsb
push
test
and
xor
mov
push
jmp
jmp
lret
ss
ja
sub
in
add
sub
bound
mov
insb
jle
inc
pop
cwtl
test
aas
arpl
sub
js
inc
das
push
mov
mov
js
mov
jnp
mov
add
inc
xchg
dec
push
outsl
push
push
or
adc
mov
mov
push
lods
xor
aam
push
push
movsb
jb
jae
call
push
sbb
scas
out
std
mov
dec
push
aad
adc
cmp
cld
push
lret
and
repz
or
frstor
jno
filds
hlt
shlb
pop
int3
mov
jne
fs
and
xor
lods
xchg
sub
sub
jmp
lcall
mov
or
or
dec
jnp
testl
imul
roll
pushf
push
sti
cmp
jmp
xchg
jp
mov
pop
ret
mov
push
lods
data16
and
or
adc
sarb
aad
incb
popf
inc
jecxz
jge
and
xor
std
inc
fiadds
push
inc
sti
scas
pop
divb
ljmp
cmp
xlat
jno
push
jno
icebp
out
lds
push
rdtsc
mov
mov
outsl
and
inc
lds
clc
sub
add
dec
pop
sub
adc
xchg
or
les
add
mov
mov
outsb
stos
inc
mov
inc
cltd
in
mov
xor
hlt
mov
inc
push
jl
xchg
xchg
fistpll
xor
push
dec
inc
movsl
dec
jecxz
test
mov
sbb
xor
outsl
test
adc
xchg
sbb
lahf
repz
and
mov
xlat
push
dec
dec
movsl
inc
test
jle
aaa
nop
fisttps
movsl
mov
push
pop
scas
xchg
xlat
je
das
adc
fcmovb
inc
xchg
cmpsl
loopne
add
sbb
push
xor
fstpl
add
test
jp
ljmp
add
jbe
cmp
jle
push
adc
cmpsb
jo
repz
lea
jb
cmp
movsb
sti
popf
and
adc
push
cmp
aam
arpl
lret
pusha
in
repnz
aam
or
and
mov
gs
daa
outsl
pop
aas
fcom
call
cmp
lret
rcrl
cmp
sub
dec
mov
jne
pop
push
jns
aam
popa
aad
jae
sbb
pop
repz
inc
xchg
and
xor
mov
jp
dec
mov
cmp
sbb
mov
inc
add
ret
sbbl
mov
xchg
jb
aad
popl
mov
push
sub
jno
xlat
es
sub
incl
jnp
push
jmp
pushf
push
cmp
inc
adc
push
mov
mov
stos
out
jb
sub
rcr
or
int3
mov
jb
movsb
mov
stos
adc
int3
jl
dec
push
dec
fists
mov
fidivrs
jecxz
xchg
scas
mov
xchg
adc
xchg
cmpsb
loop,pn
test
scas
pop
lods
je
xor
mov
sahf
cmp
cmp
stos
inc
xor
lahf
cmp
repz
push
lock
inc
pop
cmp
fimull
ss
pop
insl
pop
sbb
mov
in
inc
fisttpll
jecxz
cwtl
in
dec
push
sbb
sbb
cmc
fdivs
pop
cmp
and
pop
jb
xor
sbb
or
adc
dec
loopne
adc
in
ss
jnp
iret
arpl
hlt
scas
rorl
sub
fistl
lahf
popf
jo
cmpsb
inc
mov
and
ret
push
and
lea
adc
repz
jl
insb
outsl
push
dec
cmp
es
testl
scas
cltd
aad
sub
xchg
insl
popa
in
xchg
outsb
fs
mov
mov
addr16
popa
pop
stc
popf
push
movsb
fcoml
sub
or
aad
mov
in
mov
xor
loopne
add
pop
jle
jg
test
pop
cmp
xor
andb
out
lods
adc
add
inc
cs
push
std
or
mov
and
out
inc
bound
fldcw
arpl
cmp
cmp
sbb
xor
lret
mov
fidivl
stos
loop
outsb
adc
cmp
sbbb
daa
imul
push
in
adc
mov
fcmovu
and
push
mov
sub
push
push
sbb
or
loop
in
imul
mov
scas
or
adc
outsl
icebp
nop
cmp
mov
inc
fcmovnu
mov
sub
push
adc
xlat
test
orb
fldl
ljmp
and
shrb
push
or
mov
jmp
sub
xchg
sub
xor
sbb
fs
aaa
arpl
loop
xor
and
lret
and
lds
jmp
adc
bnd
pop
in
in
ljmp
adc
jg
shl
pop
in
cmpsb
jle
stos
xchg
push
lcall
mov
xorb
lods
es
and
arpl
sbb
cmp
adc
push
rolb
out
or
xor
sahf
add
vmovdqu
jae
push
rorl
jno
mov
add
enter
jno
in
rorl
insl
adc
test
cmpsl
xchg
insb
in
shrl
pop
popf
xchg
add
test
jo
test
sub
dec
sbbb
rorl
xlat
aam
in
pop
cmp
out
xlat
inc
mov
mov
je
and
push
cmpsl
add
mov
movsl
lock
xor
movsl
xor
push
mov
xchg
xchg
adc
loopne
adc
pop
out
mov
push
and
pop
cmpsb
mov
jne
aam
sarb
popa
sub
or
or
push
test
and
mov
xor
data16
movsl
repz
fcomi
das
fiadds
cmp
inc
jns
mov
ds
mov
push
ss
call
or
pop
fisttpll
imul
sbb
push
in
sub
push
inc
iret
fnstenv
push
or
or
popa
jmp
dec
jno
mov
sbb
push
ret
das
into
sub
call
or
push
outsb
push
add
in
nop
cmp
pop
sbb
or
xchg
add
dec
ret
in
out
push
in
aam
iretw
sub
lret
adc
mov
mov
sbb
xchg
xchg
jle
pop
pop
mov
push
shlb
jecxz
mov
rcrb
in
sti
mov
lahf
inc
iret
mov
sbb
mov
in
arpl
pop
push
and
inc
inc
jb
rcrl
mov
in
ret
rolb
call
fsubrs
xor
gs
push
jle
mov
jl
roll
and
push
add
sub
insb
xorl
xchg
rcll
xor
loope,pn
lock
adc
add
push
jno
and
push
ret
mov
jbe
inc
hlt
jle
into
dec
jnp
xor
jp
in
adc
ret
imull
fisttps
adc
push
dec
xor
daa
or
or
xor
in
jo
es
daa
enter
fcmove
inc
outsl
sub
xchg
mov
inc
jecxz
push
out
mov
test
cmp
cmp
pop
ljmp
jne
push
adc
neg
inc
jmp
xor
inc
xchg
xchg
xchg
scas
mov
in
xchg
stc
fs
pop
push
out
inc
or
push
adc
orb
add
sbb
fmull
cwtl
insl
sbb
cmp
push
lcall
mov
or
andl
lds
adc
xchg
mov
cs
rcr
sti
movsl
dec
std
ss
dec
jmp
and
fsubs
dec
mov
xchg
or
jns
lahf
cmpsb
pop
mov
jae
out
jbe
in
insb
sbb
shlb
pop
fmull
and
add
es
mov
dec
ljmp
insl
addr16
out
lret
inc
cmp
js
ss
pop
lds
out
bound
push
pop
fisubrl
fbstp
or
or
nop
sbb
dec
shl
xchg
jb
out
adc
negb
dec
mov
push
jnp
jb
cld
mov
inc
insl
adc
sub
insb
imul
aad
cmp
das
scas
sarl
filds
adc
out
xlat
popa
lods
rcll
and
cmp
fisubrs
push
xor
add
mov
int
sub
mov
xlat
mov
mov
popa
mov
fidivrl
cmp
into
cmp
dec
xchg
jae
push
subl
lahf
pop
mov
lods
out
loope
int
das
jo
idivb
push
push
mov
cmp
sbb
jne
mov
shll
cmp
xor
xor
cwtl
xchg
and
pop
cmc
sub
test
pop
pop
mov
leave
push
aaa
in
inc
sbb
clc
jge
test
adc
fcmovnu
sti
jge
loopne
sbb
mov
popa
xor
and
and
sub
fldt
aas
add
ljmp
cmp
std
sbb
int
outsb
sbb
sbb
icebp
inc
xor
push
xchg
add
call
fisttps
outsb
push
test
imul
jae
stos
insb
sahf
ljmp
push
xadd
mov
pushf
cmpsb
push
mov
adcl
popf
in
repnz
je
ret
sub
fnstcw
test
aam
xor
add
push
dec
in
or
cmpsb
xor
mov
cmpsl
es
ret
inc
aaa
dec
add
adc
inc
fadd
ds
insl
fsubr
or
hlt
test
pop
mov
lods
push
sarl
mov
dec
xor
inc
xor
xchg
sub
and
sub
inc
movsb
leave
dec
pop
inc
jle
aaa
dec
adc
popa
outsb
push
iret
fsubr
pop
subb
or
loopne
imull
add
daa
jg
aam
jnp
sbb
rorb
or
and
rclb
xchg
cmp
insl
stc
mov
cmpsb
lods
jo
mov
push
cmp
jbe
pop
jle
or
sbb
pop
jecxz
in
aaa
inc
insl
xchg
fbstp
rolb
xor
adc
add
movsl
scas
pop
adc
jp
fcmove
jne
push
adc
dec
out
and
ds
jno
std
clc
test
ret
dec
xor
and
sbb
cmp
push
mov
mov
imul
pusha
sar
adc
inc
jge
inc
pusha
sbb
stos
jb
hlt
pushf
and
push
fistpl
xor
mov
mov
xchg
add
rorb
dec
mov
loop
out
ret
sbb
ret
jle
ds
sbb
adc
test
dec
mov
add
pop
push
sbb
es
mov
cmp
mov
adc
or
stc
fadd
jge
nop
bound
mov
sbb
jp
leave
push
scas
pop
int
mov
jne
fwait
shrl
cmc
mov
jmp
lahf
xor
dec
sub
jle
ret
jnp
dec
adc
or
mov
insb
scas
stos
jo
daa
out
xlat
lret
stc
sti
lret
sub
push
push
mov
mov
arpl
sub
xchg
pop
push
stos
leave
xor
and
cmpsl
cmp
add
sub
loope
call
test
mov
aad
mov
mov
jge
dec
jae
push
sbb
test
jle
dec
dec
xor
push
mov
fucomp
pop
cmp
adc
inc
adc
xor
popa
pusha
and
jo
inc
jmp
enter
dec
mov
inc
fimuls
dec
xchg
jae
mov
mov
cli
mov
mov
dec
mov
fnstcw
sti
lods
add
xor
out
cli
adc
add
int
enter
cmpsb
fwait
ss
jb
rcl
ss
sub
rcrb
push
mov
mov
mov
fdivs
mov
sbb
mov
add
call
jno
or
ss
lock
dec
cmc
pop
pop
in
or
in
imul
mov
inc
mov
or
cmpsb
xchg
jg
roll
mov
xchg
pop
in
pop
pop
insb
sahf
bound
and
imul
adc
lods
adc
mov
mov
mov
outsl
push
pop
pop
cltd
mov
les
test
mov
jo
out
cmp
sbb
rorl
dec
xchg
lods
push
mov
jbe
divb
pop
mov
lret
jo
into
sbb
rorl
aaa
dec
sbb
fdivs
dec
xchg
sbb
or
add
cmc
sbb
int
sub
jg
cli
jg
imul
repz
xchg
loop
xchg
or
outsb
aam
mov
idivb
mov
stos
mov
or
loopne
fmull
das
daa
loop
jge
push
xor
mov
gs
sub
insl
insb
pop
mov
arpl
insb
cltd
xor
out
mov
and
imul
mov
adc
jmp
test
jp
nop
mov
in
ja
icebp
repz
fsubrs
aam
std
icebp
mov
push
vpor
inc
stos
pop
test
out
inc
test
enter
ja
xchg
in
xor
fs
xchg
sti
jle
and
aas
and
mul
add
and
test
sti
push
sub
repz
mov
mov
in
xor
sub
or
xchg
ja
test
dec
mov
or
mov
push
push
push
jmp
inc
ret
dec
xor
push
push
rcl
arpl
stos
int
xor
mov
xor
js
add
orl
lahf
dec
loope
cmp
push
xchg
sbb
cltd
adc
shrb
and
adc
loope
add
std
push
pop
fsubrs
fimuls
pushf
mov
and
rorl
mov
push
cmp
jb
daa
cli
jae
mov
adc
dec
xorl
mov
cld
dec
call
xlat
sarb
sbb
mov
fdiv
or
fs
aas
sbb
push
in
std
sarb
xor
daa
cli
jno
fistpl
add
popa
mov
mov
jecxz
cmpl
lret
test
xchg
jge
mov
movsb
jge
aad
jne
add
pusha
sbb
popa
push
aad
lret
push
adc
dec
lcall
and
pop
iret
inc
xchg
sahf
sahf
rorb
pop
lds
movsl
and
repz
filds
outsb
and
movsb
lret
das
fcomps
enter
lahf
lock
pop
into
fld
nop
ficompl
add
mov
hlt
sbb
incl
mov
xor
into
cli
dec
xchg
lahf
sbb
js
adc
es
xor
int3
adc
pop
jb
cmpsl
sub
adc
fwait
inc
repz
ljmp
jge
adc
xor
inc
insl
test
cmp
dec
inc
in
mov
add
clc
xor
loop
outsl
outsb
test
push
dec
mov
mov
mov
enter
lcall
mov
dec
frstor
push
fisttpll
sub
loop
cmpl
xchg
cmovp
pop
inc
stos
enter
adc
mov
jp
fcoms
out
daa
jae
push
pop
sahf
mov
sbb
out
leave
aam
gs
lret
and
into
sti
or
aam
test
mov
addr16
fistl
xor
mov
das
cmp
enter
cmp
sahf
lds
movl
jae
or
xor
mov
or
adc
jne
aas
add
ret
and
out
cld
lret
xor
loope
push
ret
jne
mov
into
mov
jge
sub
adc
fmuls
popf
jbe,pn
scas
xchg
cmpsb
lods
sbb
sti
lods
dec
xchg
pop
inc
inc
mov
out
and
cmp
xor
lods
mov
je
jecxz
addr16
jecxz
mov
dec
sbbb
imul
mov
push
jb
mov
or
call
inc
outsl
testl
push
fmuls
pop
leave
push
jae
mov
jnp
outsb
insl
in
cmp
daa
loop
es
outsb
shll
adc
in
inc
sub
popf
ret
loop
sti
xchg
xorb
push
iret
movsb
xchg
push
cmp
popa
call
fsts
cmp
fisttpl
mov
fisubrl
xchg
and
xchg
aaa
or
rcrb
movb
dec
ret
aaa
dec
popa
and
xor
xchg
sahf
add
xor
setae
fnsave
test
inc
lock
cmp
inc
or
fst
jae
movb
clc
xlat
mov
out
loop
repnz
jbe
sbb
push
push
int
cmp
icebp
ja
dec
push
loopne
lret
stos
jbe
aad
and
mov
movsb
mov
fistpll
lods
loop
and
cmc
xchg
lods
cmp
dec
fadd
xchg
mov
es
or
dec
aas
or
stos
or
cmpsl
lock
xlat
xchg
mov
scas
lahf
add
dec
repz
adc
movsl
xchg
sbb
pusha
or
cwtl
mov
pop
cmpsl
mov
test
jno
lea
adc
mov
fs
cmovp
ficomps
fs
lods
adc
repnz
shl
scas
jmp
adc
adc
imul
push
push
cmpsb
inc
ja
mov
xchg
jae
incl
out
ret
pop
into
test
fs
inc
or
jg
arpl
sub
xchg
ljmp
or
fisubs
shlb
addl
mov
xchg
mov
xchg
jno
mull
out
js
fsubrp
cmp
out
mov
cmp
sub
xorl
aaa
arpl
push
dec
lds
push
test
and
test
cmpsb
cmpsl
in
rolb
shrl
mov
jo
rol
inc
xchg
enter
stos
pop
mov
or
jne
xchg
cmp
incb
sahf
fwait
push
gs
nop
int
sarb
xchg
out
push
cmp
jmp
sti
test
mov
in
pop
outsb
adc
orl
adc
sti
and
pushl
pop
pop
push
ret
xchg
in
sub
pop
inc
and
sbb
jmp
cmp
add
cmp
lcall
iret
inc
dec
add
lret
adc
or
add
and
icebp
add
out
lock
popl
clc
xchg
xchg
rolb
ds
pop
jae
jo
in
lods
cs
pushf
or
mov
in
adc
xchg
stos
in
scas
pop
stos
push
pushl
cwtl
inc
pushf
add
scas
and
mov
push
xchg
fnstcw
lods
div
jg
lahf
lahf
call
or
pusha
push
push
cld
in
lret
shll
cld
in
test
push
loop
pop
xor
call
incl
shlb
dec
mov
fidivrs
test
xchg
mov
arpl
fmulp
call
pop
in
stos
lahf
stos
inc
je
push
mov
lock
andb
mov
pop
loope
and
imul
lds
lock
xchg
fs
sbb
and
movsl
and
test
addl
aam
mov
push
cmp
or
and
jle
jbe
xchg
daa
fwait
popf
cmp
popa
push
mov
push
rorl
mov
dec
xor
adc
rorb
test
icebp
inc
inc
outsl
xor
test
dec
xor
cmc
popf
jg
ret
insl
mov
pushf
nop
mov
xor
ds
push
testb
and
pop
xchg
addl
rcl
add
insb
inc
shll
adc
popa
xchg
dec
lods
mov
xor
outsb
rcrl
jo
inc
sbb
cwtl
adcb
test
ja
pushf
dec
push
test
jmp
or
cmpsb
jg
inc
out
jp
loopne
lret
xchg
out
sahf
pop
dec
fs
in
lcall
jmp
adc
xorl
std
call
imul
sbb
pusha
js
or
or
adcl
adc
leave
or
ljmp
ret
lret
jle
push
cmp
add
and
shll
in
cli
mov
sahf
sbb
ljmp
clc
xchg
inc
and
stc
and
add
lods
fbld
adc
arpl
test
pop
lea
outsl
setns
rcrl
adc
in
out
xchg
into
iret
int
dec
xchg
mov
dec
xchg
adc
rcll
in
movsl
adc
mov
in
xor
pop
push
mov
mov
dec
xchg
add
mov
jl
mov
in
adc
mov
mov
sub
pop
and
jecxz
dec
mov
pop
xchg
pushf
pop
adc
hlt
xchg
sub
ret
fwait
filds
cmp
dec
mov
mov
data16
adc
push
or
jg
pop
push
cld
cmp
jle
mov
nop
jg
movsl
xchg
fisttps
fidivrs
es
push
in
and
stos
cltd
sahf
adc
inc
adc
pop
xlat
xchg
stos
xchg
outsb
inc
outsb
scas
bound
pop
pop
pop
loop
sbb
insb
mov
in
orb
sbbl
out
mov
mov
outsb
mov
jg
xor
in
lock
mov
cmp
mov
sbb
jbe
lods
jno
inc
sbb
fs
lcall
push
push
mov
pop
cmpl
out
cmpsb
loopne
sahf
inc
aas
fidivl
stos
ljmp
outsb
call
cmp
push
aam
aas
adc
ret
daa
sub
dec
sbb
cmpsb
jp
pusha
cmp
inc
mov
xor
movsb
or
push
xchg
and
push
xchg
js
adc
inc
rolb
fcomps
pop
inc
pop
mov
arpl
dec
jns
dec
push
dec
push
call
adc
out
das
and
adc
leave
cmp
mov
sahf
sbb
and
not
fmulp
or
push
scas
xchg
push
mov
push
inc
pop
jle
push
rcrb
add
push
mov
xchg
fwait
mov
shlb
aas
add
fsub
hlt
pop
sti
xchg
adc
fs
push
jns
flds
stc
jno
xchg
mov
lods
subl
stos
pusha
push
xchg
mov
sub
fdivs
jo
in
test
sbb
jno
fnstenv
push
jge
cwtl
push
in
mov
jno
inc
cmc
sbb
cmp
lret
sbb
pop
jl
mov
xor
push
inc
insb
lea
nop
or
or
adc
nop
roll
aad
or
sbb
pushf
inc
cltd
xchg
lock
std
in
test
mov
jle
add
pushf
nop
mov
cmp
test
xchg
adc
iret
in
dec
popf
loope
cmpsl
add
mov
scas
sbb
jnp
mov
rolb
push
adc
xchg
push
test
xor
xchg
push
or
rcrl
mov
test
jecxz
inc
dec
fdivrs
int
xor
cmp
mov
leave
call
in
add
sarl
and
cmp
popa
imul
xor
lahf
jbe
cmp
pusha
test
mov
xchg
icebp
add
dec
shlb
icebp
cmpw
aad
or
push
fnstsw
sbb
into
mov
and
jno
lods
add
xchg
cmp
aad
call
ret
je
es
cmp
loope
clc
sub
push
mov
cmpsl
test
adc
pop
imul
pop
or
test
cmc
shlb
test
movsl
inc
inc
mov
mov
mov
add
andb
push
adc
mov
scas
inc
fdivl
sub
push
dec
jno
sbb
in
cmpl
scas
pop
adc
stos
out
xchg
mov
and
mov
and
mov
push
lahf
outsl
xchg
mov
fcmovnb
insb
scas
sub
jns
shll
cltd
lahf
jbe
sub
pop
push
push
add
mov
push
mov
loope
jbe
mov
push
cmp
push
std
cltd
xchg
mov
rclb
xor
ss
roll
in
ds
pop
and
pop
mov
pushf
sub
and
cltd
lahf
jmp
sbb
iret
sahf
mov
inc
mov
mov
cmp
xchg
pushf
lods
insb
jne
sahf
in
mov
sbb
ljmp
int3
cmc
repz
test
inc
sbb
xor
adc
leave
sbb
mulb
adc
in
lods
jge
dec
xlat
cmp
mov
cwtl
sub
mov
adc
je
jns
std
push
dec
adc
xor
xor
xor
ds
xchg
int3
mov
out
mov
js
xor
sbb
xor
movsb
jne
add
mov
dec
mov
test
movsb
cmp
inc
sti
or
jno
dec
push
fs
fdivrs
pushl
shll
fs
rcrb
das
add
sbb
push
dec
ds
test
dec
jl
xchg
addl
pop
dec
mov
sbb
sub
add
scas
fmul
jmp
mov
je
mov
call
sahf
subl
jbe
sub
mov
cs
mov
lock
insl
mov
mul
adc
inc
xchg
mov
mov
outsl
sbb
nop
pop
enter
sahf
std
and
or
adc
loope
sub
jecxz
jle
test
xor
xor
inc
mov
mov
sub
dec
jns
outsl
ss
inc
mov
adc
aad
addr16
pop
movb
xor
jmp
popf
sbb
push
and
push
adc
loop
subl
push
leave
aaa
xchg
cmc
add
sbb
pop
stos
lcall
mov
and
mov
jl
jb
or
out
pop
leave
popa
or
xor
dec
negl
push
adc
in
ljmp
xor
orb
xor
sbb
sub
jle
xchg
daa
ljmp
inc
lods
xchg
dec
sub
mov
cmp
or
aad
pop
add
inc
pop
xor
call
iret
xor
push
pop
negb
xchg
aad
fsubrs
cmp
xchg
add
jb
pop
jae
out
xor
cs
aam
jmp
jno
pop
adc
push
sbb
cmc
xchg
les
mov
dec
sbb
sub
cli
xor
sbb
mov
jp
aas
inc
insl
cs
lea
dec
mov
pop
lret
rorb
jg
push
dec
pop
push
mov
xor
mov
js
ret
sub
jno
add
fists
imul
jg
or
ficoml
je
inc
xchg
sub
push
outsl
sbb
out
repz
das
inc
hlt
stc
test
jne
fdivs
dec
mov
cmpsb
dec
imul
sbb
fcom
mov
xchg
gs
jecxz
push
jne
loope
filds
inc
sbb
arpl
lcall
jae
xchg
movsb
es
aas
mov
fdiv
jno
bound
xchg
lods
sbb
push
xor
mov
push
daa
pop
call
aam
push
pop
xor
adc
cltd
lds
sbb
repnz
cltd
xchg
fistps
enter
pop
fcmovnu
lods
pop
aas
jle
insb
pop
xor
rorl
sub
orl
lods
out
and
bound
mov
movsl
mov
mov
cs
cmpsb
jno
addr16
int
dec
or
clc
mov
xor
jmp
dec
jno
out
fiadds
repnz
in
sti
hlt
pop
lock
mov
adcl
sub
or
mov
mov
cmp
add
outsb
into
aaa
fnstsw
lret
mov
xchg
shlb
dec
push
lock
jne
sbb
mov
mov
ja
rorl
out
shll
stos
pop
in
mov
and
pushf
arpl
push
mov
je
inc
inc
bound
push
pop
popa
jge
push
jl
das
jne
in
xor
stos
push
dec
xor
aad
hlt
push
movsb
push
adc
icebp
frstor
xchg
lret
push
in
sbb
xlat
xor
pop
notb
dec
imul
sub
int3
and
pushl
jp
icebp
push
pop
xorb
xchg
std
imul
scas
adc
mov
gs
cld
imul
push
dec
sub
stc
xchg
add
sti
xchg
sub
pushf
or
lods
rcl
mov
mov
xlat
xchg
and
mov
adc
jmp
or
sbb
lock
add
fbld
or
scas
rcl
ss
mov
pop
add
mov
shl
push
xchg
cmpsl
sub
cmpsb
test
mov
les
jbe
inc
mov
stos
clc
std
cmpsb
push
sbb
xchg
add
or
sub
pop
call
pop
shl
lret
xchg
out
pushf
bound
jl
mov
scas
das
xor
test
hlt
add
jo
sbb
sub
inc
pop
push
gs
nop
jb
adc
rolb
jae
fiaddl
psubq
ss
cli
iret
fiaddl
adc
pusha
inc
cmp
int3
push
outsl
mov
ja
jne
bound
cwtl
aam
adc
adc
imul
push
imul
jnp
cmpsl
lock
xor
cmp
sub
cmp
fmul
fucom
lods
and
sti
sti
das
loop
lcall
jo
out
shll
fwait
or
adc
jle
cs
push
fiadds
test
cmpsl
lahf
sbb
test
mov
lea
add
loope
xchg
std
push
lret
dec
stos
dec
mov
xchg
js
jecxz
mov
xchg
fs
out
jl
imul
fwait
inc
ret
ja
int3
jb
sbb
lret
pop
add
mov
ficoml
pop
push
adc
pop
inc
or
and
inc
cs
sahf
in
pop
add
ja
or
ja
push
test
jb
les
scas
stos
fwait
mov
test
movb
out
sahf
arpl
adc
nop
jno
lcall
mov
pop
xchg
or
aaa
pop
sahf
mov
pop
movsl
push
insb
test
push
xlat
dec
cli
or
bound
test
sub
fs
inc
scas
push
insl
lods
popa
cmp
test
pop
pop
jmp
popa
pop
mov
inc
es
hlt
adc
xor
incb
rolb
sub
push
lret
push
popf
jl
jecxz
push
aad
stos
sub
out
cmpsl
pop
push
aad
aad
dec
punpcklbw
cmp
pop
jp
mov
pop
bound
add
jecxz
inc
cmpb
mov
push
sub
jno
sbb
inc
mov
cmpsl
out
add
cs
or
pusha
cmp
mov
inc
mov
clc
in
add
les
mov
jnp
pushf
filds
loope
into
arpl
push
cmp
fcomps
adc
orb
or
xchg
out
dec
mov
orl
xchg
popa
or
mov
mov
cmp
mov
mov
mov
xor
sbb
into
shl
pop
mov
mov
and
test
and
sbb
jns
sahf
mov
repz
std
mov
call
pop
lea
adc
xchg
cmpsl
iret
nop
mov
push
mov
xchg
mov
subl
mov
or
dec
push
mov
add
jge
lods
sbb
sub
sub
inc
dec
aad
clc
xor
bnd
xchg
adc
push
or
ja
lahf
in
into
orl
cmp
enter
push
jbe
insb
jp
add
mov
mov
sti
in
jne
push
push
cmp
push
push
inc
cmpsb
xor
mov
dec
sbb
insb
xlat
push
jb
xor
push
add
mov
pop
xchg
push
push
sahf
xor
cmp
or
xor
jl
in
xor
mov
outsl
addl
pop
fcoml
lret
call
lods
subb
jnp
inc
repz
and
sbb
lret
bound
mov
xchg
xchg
adc
ja
mov
or
shrl
jle
inc
or
les
jge
cli
mov
cmp
mov
pop
cmpl
stos
jg
pop
mov
jle
fstp
out
gs
adcl
lods
pusha
test
push
es
daa
sbb
inc
out
sti
cltd
xchg
mov
xchg
repnz
sub
mov
mov
or
fiaddl
xchg
sahf
out
mov
movsb
xor
and
push
std
sub
insl
mov
dec
insl
cmpsb
iret
xchg
cmp
aaa
subb
repz
mov
xchg
adc
pop
in
adc
mov
mov
out
or
es
test
sub
and
mov
dec
xor
hlt
cmpl
sbb
in
pop
cld
les
es
xorl
cltd
sub
stos
pushl
inc
loop
cmp
movsb
mov
add
or
fdivrl
sub
xchg
inc
popf
sbb
repz
mov
popa
loopne
pop
popa
int
pop
movsb
mov
add
cmp
test
vphsubdq
test
mov
mov
cs
in
jl
mov
sbbl
mov
sub
cmp
nop
lds
push
xor
test
xor
lods
fidivrl
jecxz
pop
jno
dec
push
das
mov
ja
subl
sub
repz
ret
or
movsb
scas
in
popf
fisttps
repnz
pop
push
aad
xchg
add
cmp
sbb
adc
or
mov
ror
pop
mov
pop
sub
mov
pushf
mov
cmpsb
and
xor
jmp
adc
repnz
sub
jno
ljmp
or
cmp
loope
into
lcall
mov
addr16
popa
in
jns
or
enter
mov
sti
and
jecxz
mov
mov
cld
sti
and
test
hlt
push
cld
xor
xchg
mov
mov
stos
xor
push
xchg
loop
rol
push
fsts
adc
pop
mov
jmp
inc
insb
sbb
sub
stos
scas
or
or
cmp
out
sbb
mov
scas
sbb
and
shr
pop
dec
push
lea
mov
pop
dec
nop
lea
adc
out
ljmp
mov
outsl
int3
pop
and
cmp
out
jo
je
push
mov
sbb
aas
jge
ja
inc
adc
aam
loop
or
cmc
outsl
icebp
mov
cmp
negl
dec
cmpsb
mov
sub
movsb
push
bound
push
sub
lcall
xchg
xchg
and
clc
test
inc
mov
xchg
and
std
xor
clc
pop
sub
push
frstor
mov
xor
pop
fwait
push
xor
jmp
cmc
jg
lahf
outsl
sub
jmp
dec
sbb
pop
aaa
out
stos
movsl
jbe
std
inc
repz
push
test
xchg
cmp
shrl
jns
aas
mov
jno
jbe
cmp
mov
xchg
repz
adc
fs
clc
dec
jecxz
dec
mov
lock
xor
jle
mov
or
xchg
pop
xchg
movsb
pop
jnp
cld
jge
pop
mov
jae
or
iret
lock
jo
mov
push
lret
or
mov
fwait
aas
mov
mov
mov
std
jg
cmp
lods
rorb
aam
shll
repz
lock
pop
dec
fstp
hlt
inc
jl
sbb
shlb
mov
test
cwtl
pop
xor
daa
cmp
jnp
push
loopne
mov
mov
xchg
and
lock
psubb
cmpb
mov
stos
js
scas
mov
sbbl
rcr
popf
jbe
sbb
out
push
pop
cltd
and
jns
pop
les
inc
mov
data16
add
pop
inc
js
repz
xor
mov
les
xchg
lahf
sub
push
jb
cs
sbb
flds
hlt
sub
sbb
add
pop
outsb
cmc
int3
stos
dec
jl
pop
es
fsubs
bnd
in
inc
pop
testb
loop
in
cwtl
sub
sahf
pop
imul
stc
pop
push
ret
xchg
pop
fistl
cli
loop
sbb
mov
mov
fsubl
mov
pusha
subb
es
lret
test
les
int3
imul
aas
lcall
mov
jp
dec
add
jno
gs
das
sti
inc
mov
movsb
mov
out
clc
rorb
sar
movsb
loope
or
aad
dec
cmpsl
hlt
ret
xchg
add
xor
test
fimull
inc
xchg
mov
clc
les
movsl
jns
es
cld
mov
xor
inc
imul
sub
pop
iret
jb
mov
or
fs
or
out
xchg
cmp
outsl
pop
jp
fidivrl
push
mov
lahf
xor
fnstcw
int
mov
mov
inc
add
jg
pop
shrw
into
nop
xor
mov
je
xlat
mov
cmpsl
xor
outsl
imul
lods
imul
mov
inc
inc
pushf
jb
loope
repnz
stc
xchg
incb
inc
hlt
add
fisubs
das
pusha
lds
mov
shll
push
loop
xor
and
push
xor
fbld
and
mov
push
mov
lahf
out
fadds
and
pop
leave
aaa
xor
or
add
pop
lret
dec
sub
pop
cld
es
cmp
cmc
lods
jbe
daa
outsl
stc
mov
insl
test
fstpl
nop
sub
test
mov
shlb
inc
push
loopew,pt
fisttpl
sub
xchg
in
aam
out
cmp
xlat
enter
xchg
cld
mov
xchg
lcall
xlat
jg
jmp
xor
push
pop
cmp
sahf
mov
or
mov
xor
adc
js
sub
mov
pop
mov
inc
mov
jl
out
push
or
aas
shll
add
pop
xchg
lcall
mov
mov
cmp
pushf
arpl
loope
mov
enter
dec
push
jle
sub
sbb
test
mov
pop
xchg
inc
sbbb
imul
xchg
and
dec
orl
xor
push
aaa
shll
stos
jne
out
insb
ficompl
test
sbb
jge
cmc
das
pop
mov
add
push
fwait
insb
lods
in
and
mov
lret
clc
dec
in
xor
or
or
xor
mov
imul
pop
or
lods
movsb
ret
lret
dec
jne
lea
jecxz
lds
inc
push
adc
mov
aas
fs
inc
pop
mov
sbb
lahf
adc
jb
xchg
push
xchg
xor
fstpl
xchg
ret
ret
adc
push
sbb
in
into
lock
or
cmp
fwait
ljmp
out
int3
jbe
push
pop
mov
lods
mov
in
adc
cmc
andl
jl
movl
sbb
xchg
fcmovnu
pop
pop
mov
fcom
push
ljmp
xor
mov
scas
mov
pop
or
fdiv
inc
or
sub
and
mov
repnz
cmp
mov
push
lret
popa
jb
push
mov
mov
xlat
xor
inc
in
cmp
cmpsb
sbb
xchg
rcrb
sbb
lods
jno
xchg
and
and
and
xor
jp
cld
jecxz
sbb
xlat
test
ljmp
pop
xchg
js
push
and
jne
cwtl
jl
cs
cmp
call
sub
jnp
popa
das
aaa
shl
jmp
or
fmull
fildll
xchg
nop
mov
cmpsb
xchg
xchg
xchg
jnp
out
call
pop
mov
into
call
in
sbb
fcoms
popa
rclb
xor
lods
or
jmp
sbb
iret
pushf
sub
in
popf
xchg
daa
sbb
and
aam
mov
fwait
shlb
imul
das
popl
jb
je
sbb
dec
push
loopne
sti
sti
mov
add
insl
dec
daa
inc
inc
push
es
inc
aad
xchg
fsubs
sub
scas
adc
jmp
push
xchg
push
mov
pop
xor
ljmp
xchg
add
sbb
xchg
pop
notb
jb
stc
stos
push
stc
cmp
out
xchg
ret
dec
jge
push
scas
icebp
mov
aam
scas
pop
in
push
cmp
mov
sub
push
push
ret
movsl
pop
std
lods
dec
inc
data16
cwtl
adc
sbb
mov
jae
insb
out
or
in
push
mov
pop
imul
addr16
test
je
or
popa
xor
daa
fcompl
mov
and
add
aaa
imul
mov
shl
mulb
sbb
xchg
sbb
fisttpll
xchg
and
adc
pop
and
aam
mov
jp
pushf
loope
xor
pop
stc
insb
mov
mov
scas
aad
inc
lcall
insl
inc
cmpsb
xchg
xor
fildl
dec
dec
xor
xor
stc
jge
push
arpl
stos
push
sbb
jnp
dec
inc
insb
xchg
xchg
jnp
add
push
pushl
das
mov
scas
dec
mov
xchg
jecxz
push
data16
mov
mov
mov
and
jecxz
jmp
in
push
push
stc
mov
jle
ss
call
pop
aad
daa
pop
out
push
push
cmp
movsl
xchg
mov
ret
scas
aaa
cwtl
addl
or
cmp
test
inc
adc
pop
adc
or
jp
xor
pusha
cwtl
popa
sbb
cmp
cli
pop
mov
jnp
jo
in
lahf
stos
les
jno
and
add
fs
adc
mov
fwait
leave
ljmp
jns
xor
xor
adc
dec
dec
mov
hlt
call
dec
xchg
adc
push
push
pop
mov
loop
mov
push
addr16
dec
fcomps
dec
ds
and
push
jl
dec
je
mov
mov
dec
jnp
adc
cwtl
jo
int3
jecxz
push
jp
stc
imul
mov
sahf
rol
sub
fisttpll
xchg
pop
mov
push
dec
fsubp
dec
lods
int3
pusha
outsl
pop
and
filds
sbb
outsl
cmovnp
inc
jne
aad
cmp
ret
mov
int3
incl
movb
out
ds
cli
add
arpl
nop
lret
fcompl
dec
xchg
std
mov
xchg
jb
pop
mov
cwtl
dec
xchg
in
sub
and
mov
imul
lods
out
mov
int
and
adc
faddl
div
roll
sub
mov
pop
xor
lret
cli
je
mov
xor
xchg
mov
loopne
or
movsl
xchg
cmp
push
fldcw
mov
push
subb
xchg
stos
lock
imul
pop
rcrl
adc
ja
mov
mov
cmp
into
in
sarl
in
xchg
push
pop
xchg
in
inc
push
inc
call
adc
fistps
and
jp
scas
push
inc
hlt
mov
insl
pop
pop
addr16
jecxz
scas
rcr
popf
jns
test
cmp
mov
cs
std
mov
or
cli
test
jle
lahf
hlt
inc
sti
cltd
cmp
mov
sub
arpl
bound
and
sbb
loope
sub
into
aas
jl
lds
pop
pushfw
scas
adc
jae
push
push
pop
jecxz
les
cmp
lock
add
xlat
cmp
add
mov
jp
stc
mov
and
push
cmp
jecxz
sub
sub
push
lds
mov
xchg
pop
jmp
xor
sub
inc
adc
adc
dec
dec
xchg
pop
and
jl
sub
outsb
dec
test
andl
xchg
movsl
in
movsl
dec
test
push
mov
arpl
mov
sbb
mov
sbb
out
pop
jae
xchg
loope
and
or
mov
mov
stos
lock
jae
lods
insl
lret
decb
cmp
pop
mov
mov
or
inc
add
cld
sbb
repnz
into
les
rcrl
pop
into
pushf
mov
scas
cli
jb
lret
mov
and
dec
repz
jl
xor
out
imul
mov
mov
arpl
clc
push
lret
jo
jg
popa
xchg
cmpsl
sbb
mov
pop
and
jnp
cmovo
scas
sbb
pop
loope
mov
lea
data16
inc
stos
cmovp
xchg
imul
cld
stos
xor
stos
push
adc
stos
leave
daa
dec
aad
pop
bound
sbb
call
adc
xchg
bound
dec
sar
dec
rcrl
jno
out
push
subl
sbb
sub
dec
jne
ss
ret
adc
push
loop
xchg
loopne
mov
inc
arpl
nop
mov
inc
aam
mov
jbe
daa
bound
push
jge
in
hlt
push
mov
dec
enter
add
mov
ja
out
sub
and
hlt
loopne
xor
popf
vmwrite
adc
outsl
stos
popf
movsb
or
xor
pop
scas
push
mov
sbb
adc
xor
test
test
mov
xchg
out
bound
es
push
in
fmull
xchg
sub
jnp
mov
xchg
sbb
xor
cwtl
and
fistpl
mov
or
xchg
lret
stc
aad
sub
gs
int3
rorb
jl
sub
pop
aad
cltd
mov
pop
stos
fwait
bound
and
cli
inc
test
outsb
inc
mov
outsb
cmp
mov
lods
orb
jne
mov
and
lahf
add
xchg
cmp
mov
cli
mov
cmp
outsb
adc
rolb
inc
test
jmp
test
add
inc
push
in
push
out
xchg
loope
div
dec
inc
lock
fisubl
inc
xchg
xchg
inc
sub
mov
call
jo
int3
and
in
jns
sub
or
sbb
dec
rcrl
enter
cli
lahf
sti
sahf
lahf
adc
cmp
xor
inc
movsl
dec
call
jl
cmp
sbb
push
inc
jnp
aas
dec
in
pop
mov
xor
cmp
add
jae
jl
testb
iret
jno
lods
jg
jmp
pop
sbb
aas
xchg
cmp
push
hlt
pop
mov
or
xchg
dec
in
add
pop
xchg
xchg
pop
dec
xor
and
clc
jg
adc
sbb
sbb
lret
inc
popa
adc
sub
cmp
add
mov
imul
or
lods
cmpsb
loopne
sub
loop
je
mov
sub
jae
dec
loopne
lods
ds
jns
push
iret
arpl
inc
pop
sbb
std
xchg
lcall
dec
shll
mov
push
daa
xor
mov
mov
lods
imul
sub
stos
ficomps
mov
dec
mov
push
movsl
ret
mov
daa
testb
dec
inc
icebp
xor
dec
nop
das
shr
jp
in
int
sub
xchg
out
and
sub
insl
std
data16
scas
fnstcw
xor
cmp
mov
mov
cmp
adc
and
sahf
scas
test
or
push
fdivrs
int3
sbb
sub
mov
push
cmp
fmull
lret
mov
sahf
lret
mov
jo
std
js
jle
shlb
fnclex
push
adc
push
push
mov
out
inc
enter
push
notb
loop
out
leave
sub
sbb
pop
bound
mov
test
adc
cmp
add
dec
adc
pop
mov
jns
out
jns
cltd
xchg
mov
sarl
shll
cmp
push
jnp
push
xor
rorb
mov
enter
push
stc
in
adc
jp
shlb
leave
sahf
sbb
int
mov
and
push
dec
mov
aaa
std
inc
push
test
mov
in
stos
mov
ret
mov
mov
push
shl
xor
add
in
sbb
aas
or
shl
dec
les
dec
out
add
or
movsl
in
mov
loopne
int3
xchg
test
out
mov
inc
adc
fiadds
push
rolb
push
mov
xor
insl
aaa
sbb
mov
clc
inc
sbb
xor
or
xor
je
out
xor
pop
in
fists
mov
pop
mov
out
in
in
hlt
in
dec
shlb
inc
sbb
gs
mov
add
ret
xchg
xchg
incb
mov
daa
push
push
mov
mov
xor
sub
sbb
mov
repnz
sbbb
sbb
and
in
cmp
jae
flds
sbb
cmc
das
out
nop
loope
fcmovnu
dec
xlat
mov
das
negb
jne
sbb
cltd
sti
sti
jmp
int3
imul
sub
ds
cmc
add
leave
ss
sbb
mov
std
clc
cmp
test
mov
xchg
mov
js
mov
cmp
lcall
int
add
test
add
dec
in
cmp
cmp
incl
clc
sub
in
and
sbb
xchg
push
in
ficoml
mov
inc
inc
mov
and
lcall
or
pop
and
mov
sbb
add
loop
aam
pop
mov
adc
inc
dec
fwait
mov
cltd
mov
add
ficomps
xor
sbb
leave
push
je
andl
or
xchg
mov
cmp
mov
imul
add
sbb
mov
jo
shrl
mov
data16
aaa
js
mov
hlt
jge
sub
or
dec
mov
mov
ja
out
push
sbb
mov
and
mov
ficomps
jae
inc
mov
mov
push
and
cli
pop
pop
push
movsb
popa
add
push
cmp
mov
xchg
icebp
int
repz
or
sti
mov
push
hlt
sub
push
arpl
push
push
cmpsb
jg
jbe
inc
les
call
and
mov
mov
xchg
pop
ret
mulb
pop
cmpsl
rcll
aam
cmp
push
mov
xchg
dec
xlat
inc
jno
mov
jmp
movsb
jo
out
sub
test
arpl
je
scas
rorl
dec
sbb
and
mov
icebp
sub
cld
in
les
or
lcall
push
int
loop
stos
push
mov
out
mov
loopne
jbe
ss
sbb
xchg
push
dec
aas
fwait
mov
mov
mov
out
scas
cs
icebp
push
cmpsl
sub
jle
lret
adc
push
push
dec
inc
dec
leave
adc
js
int3
stos
push
cld
pop
xchg
or
arpl
shl
xchg
push
dec
pop
jb
int
hlt
scas
adc
dec
mov
clc
mov
nop
ret
push
mov
testl
dec
in
test
pop
loope
xor
push
out
imul
rcl
lea
fadd
cmc
les
inc
mov
lahf
mov
movsl
ret
mov
addl
jmp
inc
jno
mov
xchg
or
mov
push
imull
dec
sub
mov
sub
ror
inc
cmp
or
mov
dec
lods
and
xchg
jno
data16
sub
enter
mov
lods
mov
mov
mov
inc
jns
lods
in
in
imul
mov
mov
xor
xchg
stos
mov
push
xchg
adc
std
pop
clc
out
sbb
xchg
or
mov
and
shll
xchg
push
into
fwait
mov
sub
and
scas
or
subb
add
adc
sub
jnp
jbe
test
lahf
or
mov
dec
mov
sbb
push
adc
lock
cmp
cld
push
cmp
pushf
ljmp
ror
int
add
push
and
add
testl
mov
ss
dec
ja
mov
shrl
fmulp
arpl
aad
push
sbb
lahf
sub
jne
es
outsb
les
adc
adc
mov
jge
lahf
push
int
inc
cmp
mov
pop
pop
lret
pushf
pop
fsts
mov
repz
out
fstl
mov
push
fnstenv
bound
jbe
mov
sahf
int
xor
popf
jbe
mov
and
hlt
bound
mov
repz
sbb
sub
pop
mov
shlb
stc
in
js
pop
mov
or
pop
adc
inc
rcrb
or
inc
jle
xchg
pushf
nop
adc
in
pop
and
and
ret
rcrb
mov
lock
ret
jae
add
notb
fistl
or
cmp
loop
mov
imull
pop
xchg
mov
mov
inc
or
ret
cmp
sbb
loopne
ret
and
xor
aam
repz
pop
das
and
pop
jg
jb
inc
add
xchg
out
test
inc
les
jae
leave
shrb
inc
lret
sbb
xor
adc
mov
pop
int
pop
pop
add
cmpsb
jg
cmp
fcomps
sbb
mov
add
fiadds
repz
xor
ret
mov
dec
sbb
imul
outsl
aam
sbb
and
lcall
cmp
pop
push
sbb
cmp
idivb
iret
inc
inc
stos
daa
mov
test
jl
out
xchg
test
jl,pn
xchg
mov
enter
leave
xor
jle
jp
fnstcw
imul
insl
scas
adc
popf
in
xor
jl
jl
cmp
cmp
push
nop
or
inc
inc
scas
mov
popa
sub
aad
adc
or
clc
data16
add
frstor
sbb
adc
enter
cli
cmp
jbe
stc
int3
push
or
sti
std
repz
dec
insb
das
xor
arpl
pop
push
outsl
add
fldenv
adcl
xor
mov
iret
jne
sarl
xchg
out
cmp
mov
mov
cmp
arpl
shll
push
ja
push
popa
add
arpl
stc
aam
popf
xor
jecxz
or
xchg
dec
or
movsb
or
xor
pop
mov
inc
mov
scas
inc
test
mov
add
loop
test
mov
and
das
xchg
imul
call
push
and
jmp
sti
movsl
sbb
bnd
xor
ds
dec
mov
fisubl
push
je
xchg
pop
mov
mov
fldcw
adc
mov
pushl
and
pop
mov
rcr
fwait
int
arpl
mov
or
add
sub
inc
scas
jmp
sbbb
scas
mov
sbb
xlat
dec
inc
in
loope
das
dec
inc
sbb
cmc
outsb
adc
push
inc
mov
jg
js
out
popf
pop
jecxz
and
test
or
or
outsl
cmp
mov
stc
sbb
lcall
jge
cwtl
test
sbb
scas
dec
sub
mov
insb
ds
add
lret
pushf
test
push
fldl
mov
push
dec
adc
notb
sti
icebp
addb
or
outsl
dec
out
arpl
mov
scas
cmp
je
bound
imul
rclb
fistpl
pop
insb
inc
xor
xchg
fsubr
mov
add
mov
jmp
or
notl
mov
pop
dec
jecxz
in
xchg
enter
xchg
test
iret
and
mov
and
inc
sbb
test
xchg
fists
int3
lds
pop
xlat
imul
punpckhwd
push
sub
jge
push
jge
xor
push
pop
fs
jae
es
sub
xchg
stc
cmp
pushf
or
sbb
les
aam
icebp
leave
sbb
popf
lods
xlat
dec
call
inc
in
xchg
rcl
push
popa
ret
es
arpl
movsl
add
cmp
popa
ljmp
mov
sahf
adc
sub
negl
movsl
jecxz
mov
mov
cld
sahf
cmp
movsl
sahf
orb
sub
popf
or
add
push
pop
jno
mov
xor
aad
pop
fdivr
mov
mov
dec
lods
pop
xor
inc
mov
aaa
dec
testl
xor
jl
les
scas
push
jno
outsl
mov
lock
cltd
sbb
sti
mov
push
popl
pop
and
mov
cli
push
pop
xchg
jl
loop
sub
dec
loope
dec
inc
xchg
cmp
xchg
or
adc
mov
and
push
mov
sti
and
inc
arpl
fsubr
fwait
decl
jo
scas
push
popa
pop
pop
sbb
adc
dec
into
push
call
mov
mov
das
inc
pop
jns
jecxz
rcrl
jb
jge
dec
lret
mov
nop
movsb
lret
xor
push
xor
std
jb
add
push
xorl
icebp
insb
xchg
les
popa
or
and
lea
sub
lods
jg
jmp
fcoml
mov
xchg
stc
mov
and
push
sbb
mov
fadd
push
push
hlt
and
inc
loope
mov
add
sti
lea
xchg
adc
xchg
or
mov
adc
hlt
into
movsl
jne
mov
popa
call
pushf
xchg
aam
scas
pushf
imul
inc
popf
aam
sub
shrl
adc
movsb
cli
mov
xchg
pushf
inc
xchg
cmp
or
sub
push
inc
dec
popf
mov
or
int
jb
mov
mov
inc
add
or
ret
sub
clc
add
in
popf
jg
dec
cmp
add
add
jmp
std
test
sub
xlat
fwait
inc
cmp
loope
cmp
mov
out
lock
scas
jae,pt
inc
idivb
jg
xchg
add
int3
ss
decb
adc
or
aaa
nop
add
add
pop
jl
nop
jae
jmp
loop
sbb
mov
lds
outsb
mov
xchg
mov
and
cmc
into
xchg
daa
lret
fmuls
sahf
sub
int3
push
sbb
adc
mov
sbb
shrb
mov
jae
je
cmp
dec
icebp
popf
or
cmp
dec
cmpl
pop
xor
add
shl
js
sub
lods
jne
cmc
or
sub
mov
sbb
cs
xchg
lea
sub
ret
popa
xchg
or
xchg
jmp
gs
sar
incl
adc
icebp
pop
jmp
out
push
nop
xor
mov
cld
inc
mov
pop
stos
sarb
mov
aam
sub
je
loope
fisttpll
mov
dec
fisttpll
andb
xchg
into
insb
mov
cmp
pop
ja
add
xchg
add
std
mov
insb
insl
xchg
and
pop
ljmp
fnstenv
scas
movsb
adc
sbbl
aad
fs
ds
les
fsubs
test
out
fwait
sbb
jnp
cmpsb
stos
mov
mov
test
loope
test
pop
and
xor
push
mov
or
inc
in
inc
sarl
add
int3
pop
sub
add
orl
inc
cmpsb
in
fistl
xlat
dec
scas
pop
dec
add
mov
test
cmp
leave
pusha
in
lea
adc
push
sub
frstor
dec
vpmacssdql
push
push
inc
sbb
lcall
xlat
sub
shll
les
ret
sub
sahf
scas
mov
mov
ffreep
lret
jns
xchg
add
mov
cmp
mov
pop
ljmp
shlb
push
push
inc
leave
pop
and
imul
shr
lret
cmp
std
mov
fsub
shll
std
pop
jo
add
mov
mov
sub
lods
sbb
dec
xlat
hlt
dec
out
cmpsb
sub
rolb
mov
and
pop
sarl
xchg
pop
sarb
stos
push
cmp
sub
in
xchg
popa
or
mov
repnz
jl
push
das
nop
or
mov
xchg
mov
mov
sub
pop
xor
cwtl
sub
das
push
lock
add
mov
jnp
gs
clc
fisttpl
push
ljmp
test
icebp
push
fmuls
testb
add
shrl
clc
cmp
adc
dec
pop
jle
jnp
faddl
inc
stos
repnz
mov
and
lahf
cmpsb
in
mov
xchg
testl
add
cmp
jns
push
arpl
sbb
jo
notb
dec
les
leave
jmp
insl
es
mov
ret
jmp
lock
xchg
shll
gs
adc
xor
cmpsb
out
aas
jo
mov
and
jle
pop
mov
mov
or
mov
xor
mov
scas
leave
mov
add
arpl
stos
pop
dec
or
xchg
mov
addl
push
iret
jb
aad
and
mov
fwait
and
mov
and
mov
sarb
add
adc
pusha
testl
pop
arpl
cmp
mov
mov
or
add
or
mov
leave
and
xor
data16
lds
imull
xor
jmp
sbb
cmp
clc
mov
sub
pop
mov
movsb
sahf
sbb
pop
call
scas
in
xor
jl
notl
rolb
or
dec
mov
xlat
mov
test
aas
lret
daa
fmull
cmpsl
mov
into
push
push
cmp
mov
lret
xlat
mov
pop
pop
insb
repnz
clc
xchg
pop
cmp
xchg
mov
rcrb
add
mov
lock
or
pushl
inc
psubusb
imul
sub
mov
mov
adcb
cmc
mov
jge,pn
lret
int3
sub
rcll
adc
sbb
imul
test
adc
imul
mov
out
mov
xor
push
fs
orl
stos
mov
mov
inc
mov
stc
cmc
cmp
cmp
ficompl
fiadds
jmp
data16
js
pop
or
stos
or
push
xor
sbbb
cli
sbb
fincstp
loope
repz
rcrb
push
sti
int
xor
or
test
mov
lcall
stos
stc
adc
mov
xlat
inc
mov
mov
fcomps
enter
xor
push
or
icebp
xchg
cltd
adc
std
fnsave
sub
jae
add
pop
jns
sbb
xor
jbe
jno
pushf
fcomps
ss
mov
pop
mov
add
xlat
int3
enter
push
lret
loopne
notl
jle
cld
in
mov
cmc
loop
pusha
icebp
cwtl
mov
cmp
push
mov
arpl
shrl
push
jmp
test
arpl
pop
addr16
and
shll
in
roll
clc
jns
inc
xor
arpl
push
dec
add
mov
mov
push
je
aaa
add
xor
mov
into
lods
or
jg
dec
emms
jle
in
ljmp
sbb
cmp
insl
fisubrl
pusha
pop
jo
pop
insb
adc
repnz
mov
in
xor
cmp
xchg
inc
pop
xchg
negl
jns
xchg
dec
cmpsl
sahf
xor
inc
bound
adc
repz
mov
cmpb
sbb
xor
add
lahf
xor
sahf
fdivp
or
lods
add
mov
jbe
cwtl
repz
cmpsb
dec
pop
stc
pop
outsl
pop
pop
roll
inc
repnz
ss
mov
xor
cli
xchg
pusha
xor
lds
cmp
dec
into
gs
out
push
sub
icebp
xor
arpl
push
fnsave
dec
or
imul
lahf
fsubrl
std
push
pusha
push
xchg
cmpb
push
fcompl
arpl
clc
inc
addr16
insl
jno
sbb
orb
lods
push
test
lret
dec
lret
mov
je
aas
jnp
dec
out
gs
sub
loopne
push
sbb
cs
fsubrp
sub
pop
inc
out
or
sub
and
mov
mov
ficoms
xchg
pop
jbe
and
bsf
xlat
nopl
insl
xchg
cmc
hlt
mov
loope
into
in
out
jns
icebp
sub
pop
mov
mov
test
aad
repz
ret
out
or
adc
adc
sub
out
lods
das
inc
mov
aas
mov
push
repz
testb
pushl
mov
xchg
mov
bnd
jns
rcll
xor
hlt
fsub
lea
jge
or
loope
xor
stos
cs
push
lcall
out
scas
ficomps
test
xchg
insl
das
cli
xchg
aas
daa
push
loop
mov
push
bound
mov
pop
push
or
jnp
mov
lret
test
mov
in
cmp
jnp
jl
mov
sbb
lock
std
sbb
xchg
push
pop
ds
aaa
inc
aas
adc
cmp
mov
dec
imul
fstpt
fnsave
pop
test
sbbb
aas
adc
pop
scas
xlat
mov
mov
jbe
or
shr
roll
hlt
inc
imul
pop
add
xor
mov
fistl
pop
adc
sub
je,pt
dec
in
mov
jge
cwtl
xor
and
ret
jle
fs
out
in
test
jbe
popf
inc
jp
xchg
dec
push
dec
mov
vpunpcklbw
int3
sbb
imul
jmp
int3
arpl
dec
jbe
pop
imul
mov
mov
imul
fidivrs
xchg
jns
setno
int
cld
dec
cmp
dec
mov
cs
dec
ss
pop
test
fwait
movsb
push
sarb
mov
cltd
pop
sub
push
out
mov
sub
inc
xchg
mov
shlb
rclb
test
xor
sub
pop
fisttpll
jle
std
and
mov
std
stc
inc
or
xchg
stos
mov
mov
push
mov
dec
xchg
ss
pop
out
loop
xchg
xlat
adc
cwtl
decb
fcomps
testb
fsts
mov
adc
mov
sbb
xor
and
pushf
sub
xchg
in
dec
jno
je
mov
das
dec
in
dec
aaa
nop
dec
jecxz
push
xchg
sahf
test
sahf
push
xchg
jle
mov
insb
dec
insl
jbe
cmp
scas
clc
push
loopne
sub
sbb
fucomi
pop
or
out
out
icebp
scas
xchg
test
pop
mov
ss
mov
es
and
lret
and
xor
and
add
int3
in
pop
jno
xchg
cmp
dec
push
xchg
jns
mov
int3
mov
push
int
lret
or
jb
lret
fistps
cmp
loope
lods
aad
inc
fisubrl
js
cmp
int
sub
mov
sub
adc
out
xor
sarb
cmp
cmpsb
inc
out
jno
mov
jne
sub
lods
sub
push
clc
jae
cmpsb
loop
xor
pop
pop
shrl
nop
add
and
sbb
fisttpl
sub
cld
and
cmp
pop
cmp
jns
inc
cld
popa
cmp
imull
or
mov
into
and
push
cmc
mov
cwtl
dec
jne
icebp
fsts
sub
jp
mov
sub
push
jle
jns
stos
lret
test
data16
jle
mov
insb
xchg
adc
icebp
dec
sbb
and
mov
in
mov
sbb
xchg
fxch
jp
push
lahf
pop
cli
out
cwtl
xchg
jmp
mov
mov
sbb
lret
xor
dec
andb
jmp
mov
push
faddl
cmp
jne
insb
shll
adc
and
lahf
dec
inc
fbld
add
add
repnz
inc
mov
into
jl
fs
mov
outsl
push
mov
cli
ljmp
dec
addb
sarb
fcomps
loope
arpl
out
or
jg
mov
and
push
or
xor
dec
add
xchg
shll
fstpt
dec
ss
push
fsubrl
pop
sar
cmp
adc
jo
ss
mov
shrb
popa
out
sarb
jg
cmpsl
push
mov
imul
push
inc
clc
cmc
rclb
int3
xlat
aam
adc
lds
dec
mov
inc
call
lcall
cwtl
pop
sub
or
or
add
std
icebp
shlb
add
sbb
jg
shrl
test
sbb
outsb
and
add
cmp
sbb
lcall
fidivrs
scas
fidivrs
test
add
dec
out
xor
pushf
inc
jge
pop
mov
mov
and
sahf
pop
cmp
mov
xor
cmp
push
enter
rcrb
dec
jmp
repnz
jbe
push
cmp
imul
xlat
cltd
imul
lcall
pop
and
std
xlat
sbb
addr16
and
cli
stos
aam
mov
xor
and
cltd
stc
jno
arpl
lds
rolb
leave
pusha
xor
cwtl
lods
das
inc
or
lods
mov
xchg
jae
or
fldl
sub
mov
out
es
insl
pop
fdivrl
sti
push
lock
push
mov
scas
insl
xchg
xor
sub
repnz
inc
jg
push
jb
pop
xor
repz
vpminsw
mov
sub
ss
jnp
das
out
sub
scas
push
pop
or
mov
inc
daa
insl
loopne
bnd
push
repnz
cli
sub
iret
or
lret
pop
jns
dec
sahf
push
fisubl
mov
and
push
scas
xchg
add
pop
or
xor
and
mov
inc
xchg
lgs
jl
sub
cmpsb
imul
sahf
roll
dec
adc
sub
xor
mov
mov
mov
jle
lea
outsl
rclb
lret
outsl
in
cmp
cltd
scas
cmpsb
mov
fdivrp
rcr
add
adc
inc
push
loop
add
push
mov
js
jo
adc
mov
in
cmp
cmp
jecxz
xchg
bound
sub
ret
sub
fcompl
in
outsb
les
adc
mov
inc
mov
lds
out
lahf
rcl
dec
add
inc
mov
addr16
inc
mov
dec
pushf
dec
xchg
and
lret
mov
mov
push
out
fcmovnu
adcb
xchg
jb
mov
lods
popa
in
mov
add
in
pop
mov
shlb
sub
cmpsl
mov
test
dec
cli
lods
mov
mov
ja
and
push
js
lcall
std
sub
test
movswl
jne
or
fldt
bound
jno
push
xchg
stc
insl
mov
or
mov
outsb
ds
pminub
ffree
add
mov
jmp
pop
pop
push
mov
mov
fistpll
test
mulb
ja
loopne
pop
fstl
xchg
aas
and
add
jp
xchg
cmp
sbb
mov
adc
sbb
adc
inc
pop
xchg
repnz
repnz
jae
lret
and
adc
lret
sub
hlt
sahf
pushf
daa
scas
lds
cmp
dec
imul
test
mov
adc
daa
adc
xchg
std
push
dec
out
adc
fisubrs
scas
mov
jne
ja
mov
mov
xchg
js
mov
xchg
rcll
xchg
mull
ret
jno
mov
shll
cmp
mov
cmpsl
sub
and
dec
ds
scas
mov
pop
push
stos
fs
push
inc
xchg
sub
add
test
adc
cmpl
sub
xchg
int
dec
inc
inc
sbb
cmp
cmpsb
lahf
shll
xchg
movsl
cld
pushf
cmp
fs
fisttpl
or
mov
lcall
pop
les
jge
icebp
sti
out
lret
fs
test
cmp
xlat
lahf
hlt
js
lret
jmp
es
mov
push
je
stc
pop
xchg
sub
adc
fdivrs
das
mov
sbb
mov
sbb
mov
xor
mov
push
hlt
mov
fldcw
pop
adc
aam
pop
mov
or
sbb
inc
cmp
sub
jae
rorl
roll
test
cs
fidivrs
loopne
sbb
nop
sub
in
jnp
xchg
sub
push
jmp
push
push
out
jnp
adc
movsb
outsl
jns
mov
adc
mov
and
insl
xor
pop
adc
jge
jl
adc
out
ficoms
outsb
jno
jae
sbb
fidivs
push
or
pushf
pop
pop
dec
in
scas
add
cwtl
das
fwait
push
out
sub
xchg
jp
imul
imul
aam
dec
lret
pop
mov
xor
xor
sub
mov
aas
out
out
gs
stos
mov
or
add
pop
inc
lock
test
insl
adc
sarl
lds
and
stc
enter
and
outsb
xchg
inc
adc
mov
mov
add
out
andb
push
movsl
push
mov
imul
aas
fiadds
sahf
sbb
aaa
mov
rsm
sub
movsl
jle
loopne
test
pop
repz
jl
nop
fiaddl
sbb
notb
jge
xor
push
pusha
and
push
push
pop
fdivs
fcoms
or
add
jno
mov
xchg
jo
sbb
push
lods
and
in
adc
mov
mov
fcoml
imul
add
cli
jb
icebp
insl
ljmp
int
ds
cli
in
lds
gs
xchg
iret
pop
sbb
daa
jae
cmp
dec
cmp
repz
pop
aam
jmp
aas
mov
jb
cmp
pop
xor
xchg
ja
daa
stc
sub
pop
lahf
ret
sbb
rcrb
lds
xchg
push
or
not
decl
cmpsb
js
ja
std
lds
pusha
add
jmp
pop
loope
xor
sbbl
xor
fldl
popa
mov
in
addr16
mov
or
mov
inc
mull
jns
ljmp
stos
push
ss
ljmp
mov
int3
xorl
ljmp
jle
push
mov
pop
push
sahf
lcall
cmp
dec
addr16
aam
sub
outsb
pusha
repz
xor
stos
jae
in
add
jg
jbe
push
and
pop
xchg
call
adc
cmc
sbb
cmp
ficoml
shlb
and
mov
rol
cltd
insb
fcomi
dec
sub
loope
lock
pop
add
pop
enter
addb
or
pusha
xor
inc
ret
fnstcw
notb
mov
pop
call
dec
jl
mov
mulb
sbb
sbb
lods
lock
rolb
jb
ja
loopne
enter
push
push
or
push
xchg
cmc
cmpsb
add
pop
lock
mov
sbb
into
dec
sub
sub
and
mov
lcall
push
push
subb
sub
sub
or
lret
cli
adc
idivb
arpl
data16
cmc
mov
and
jbe
fs
cmc
pop
in
lret
sub
pop
sub
mov
jbe
dec
es
mov
test
pop
jmp
cld
cmc
or
adc
cmc
iret
add
pop
fwait
inc
xchg
call
loope
adc
cmpsb
xchg
sar
fnstsw
sbb
outsb
bound
adc
mov
pop
mov
jmp
gs
shlb
mov
mov
fcoms
jge
lock
shrb
inc
cmc
jmp
add
push
pushf
pop
adcb
nop
mov
push
out
sbb
insb
sbb
iret
adc
data16
push
clc
pop
jl
sbb
nop
dec
daa
xor
fistpll
filds
sahf
push
fs
in
pop
or
pop
push
leave
mov
addl
adc
int
jnp
push
and
inc
fildl
insb
andl
outsl
js
inc
pop
data16
inc
fcomi
sub
in
out
dec
push
mov
or
lret
xchg
shl
add
ljmp
lods
in
cmp
cmp
sbb
jne,pt
xlat
gs
les
ficompl
rolb
xchg
int
adcl
xchg
inc
lds
sub
shll
jbe
inc
jbe
push
popf
sahf
cwtl
jmp
fcompl
mov
lods
lds
dec
stos
push
push
mov
cwtl
rolb
inc
fst
insl
mov
sub
jne
push
pusha
or
xchg
push
mov
shlb
cmpsb
and
sub
mov
fcompl
pop
roll
sub
hlt
push
pop
cld
sbb
and
in
pop
lea
mov
push
fldenv
mov
testl
decl
xor
andl
mov
dec
sub
xchg
mov
sub
repz
pop
add
shlb
imul
dec
push
push
mov
shlb
pop
fs
in
out
mov
pop
inc
xchg
and
fnsave
in
dec
adc
or
jb
je
addr16
icebp
in
scas
mov
push
dec
sbb
mov
push
xlat
int
rcr
sti
sub
imul
mov
cltd
lds
pushl
inc
scas
mov
push
mov
or
push
mov
adc
jne
cmpl
pop
add
pusha
jg
and
aam
in
scas
mov
push
imul
cmc
pop
loope
test
sub
popf
icebp
loop
push
pop
divb
hlt
xor
and
xor
dec
in
dec
fmuls
popa
jmp
ljmp
inc
xchg
fcoml
mov
sub
cmp
cmp
jb
sub
data16
sahf
and
mov
pop
inc
inc
cmp
ss
popf
adc
inc
lcall
out
jmp
mov
test
cmpsb
stos
push
in
add
lcall
mov
lahf
out
mov
cmpsb
jg
lock
lods
add
mov
arpl
fldl
mov
jbe
sub
jmp
jb
dec
mov
sbb
and
pop
sub
add
arpl
lahf
mov
xlat
ds
jmp
sbb
dec
arpl
xor
jns,pn
mov
xchg
mov
enter
mov
mov
jecxz
fnstsw
movsb
mov
dec
and
dec
push
dec
in
lods
cmpsl
xor
imul
inc
mov
hlt
ficomps
xor
lret
inc
daa
andl
push
lahf
fldcw
data16
in
int3
and
inc
pop
aam
or
cmp
sbb
push
scas
cmp
dec
lea
imul
stc
and
fldl
pop
push
jne
push
sub
pop
push
jl
orb
pop
cmpsl
mov
mov
and
jmp
dec
xchg
push
xor
pop
or
cmpb
add
and
adc
pop
dec
jecxz
xchg
jno
fcoms
push
pop
cmp
jns
ja
add
cltd
sti
pusha
mov
jg
mov
repz
xlat
inc
iret
push
rdtsc
cmc
xchg
ja
sahf
mov
pop
push
push
adc
mov
pushf
sbb
mov
aaa
mov
neg
jo
dec
addl
or
or
jae
add
das
dec
sbb
rclb
pop
xor
pop
dec
mov
jne
mov
loope
popf
jp
jb
sti
xor
mov
sbb
filds
out
inc
je
mov
dec
push
insb
jb
test
pop
lds
jo
stos
dec
push
ret
add
or
push
jecxz
ss
loope
mov
fstps
push
out
or
aas
adc
imull
iret
enter
pusha
pop
repz
mov
dec
push
test
xor
add
les
cli
and
push
les
ja
data16
nop
scas
lahf
in
cmp
push
sub
int
fwait
push
cmp
popa
imul
or
pop
pushf
add
cmpsl
sbb
or
ret
xchg
in
dec
xchg
aas
jge
fs
mov
sub
loope
and
mov
mov
or
addl
jb
mov
clc
mov
test
push
jno
out
jmp
dec
cmp
out
mov
xor
js
push
mov
mov
enter
xor
mov
or
into
xchg
cmp
imul
cwtl
mov
adc
adc
mov
clc
repnz
or
fsts
mov
out
push
icebp
les
xchg
and
mov
pop
mov
mov
loop
gs
pop
xchg
aad
dec
adc
mov
addr16
pop
fldl2t
cmp
add
xchg
movsl
ljmp
das
in
jae
mov
and
into
pop
aaa
call
push
aam
xor
inc
sbb
ret
cli
push
jbe
iret
pop
pop
push
push
and
mov
mov
ljmpw
jb
xchg
lret
dec
or
notl
sbb
add
push
flds
push
gs
mov
mov
gs
or
outsb
and
mov
clc
cli
xchg
sub
xchg
sub
aaa
and
pushf
jbe
mov
pop
cmpsl
push
addr16
sbb
or
in
mov
scas
and
or
adc
xor
pop
int
cwtl
shl
rclb
daa
add
push
aad
testl
xor
mov
adc
mov
jge
fsubs
repz
rorb
je
jle
stos
popf
sub
adc
cmp
xor
xchg
dec
sbb
pop
xlat
in
pop
mov
inc
and
adc
test
sub
lock
fdivl
or
loope
mov
mov
mov
push
test
cmp
js
xchg
adc
sbb
std
adc
enter
das
xor
stc
inc
jb
push
xchg
pop
pop
cmc
leave
jns
scas
fiadds
cmpsb
or
popf
je
sub
sti
fwait
cmp
adc
rorl
ret
ja
insb
xor
add
icebp
arpl
loope
add
leave
dec
inc
push
xchg
xor
mov
lds
mov
jae
out
jl
enter
pop
sahf
push
pusha
and
xor
xchg
sub
fcmovbe
xorl
adc
inc
loope
inc
dec
mov
add
testl
imul
int
scas
cmc
adc
push
xchg
push
lock
adc
and
add
inc
in
push
test
lea
sbb
xorps
jns
mov
cmp
es
pop
jecxz
cwtl
and
push
mov
in
mov
push
nopl
cmc
test
xchg
sti
shrb
ret
jne
rcll
pop
push
stos
mov
sbb
lcall
mov
lea
ljmp
clc
fwait
mov
faddl
lods
fisubrs
int3
or
mov
push
xor
push
ss
repz
lea
lods
push
aas
ds
sbbl
push
cmp
fiadds
cmp
popf
and
popf
jae
movsb
test
aaa
adc
in
jge
mov
cmp
sub
mov
std
pop
out
push
sbb
jge
dec
cs
dec
out
jmp
adc
mov
inc
mov
scas
pusha
mov
sub
jno
scas
stos
or
pushf
jne
lret
lcall
add
adc
jne
outsb
out
lock
mov
pop
pop
movsb
rcrb
fimull
pushl
mov
aam
mov
stos
mov
repnz
imul
popa
loope
sub
aas
add
adc
pop
loop
jl
jmp
fsubrs
bound
aas
jns
mov
out
sub
ficompl
inc
push
sub
push
dec
repz
sarl
inc
xor
push
xchg
icebp
or
inc
sbb
dec
push
xor
lret
pop
mov
dec
loopne
sub
sbb
mov
in
insl
or
push
sbb
rcl
jg
out
push
fwait
dec
push
out
mov
int
movsl
mov
aaa
in
pop
jo
test
mov
aam
inc
sbb
xchg
xor
adc
push
dec
and
adc
pop
dec
daa
das
lds
sbb
xchg
inc
mov
dec
jae
in
in
and
insl
test
insb
or
daa
dec
out
out
rolb
push
fcmovnu
inc
inc
and
push
or
sbb
cwtl
cltd
add
push
cmp
loopne
cmc
rcrl
pop
dec
mov
xchg
test
adc
stos
xchg
mov
push
ljmp
inc
arpl
jmp
adc
and
mov
test
xor
and
mov
cmp
dec
cwtl
add
mov
fldl
ljmp
out
stos
mov
loop
pop
cmp
adc
xlat
pop
jg
push
scas
lods
jge
pop
stc
cmpsl
mov
icebp
xor
lods
add
xchg
jl
jno
int3
fdivl
inc
loop
pop
sub
cmp
xchg
dec
add
vmwrite
dec
push
add
orl
andl
and
push
call
pop
xchg
stos
pop
test
mov
inc
das
ds
dec
roll
mov
es
in
mov
xor
out
leave
dec
xor
leave
dec
xlat
cmp
notl
jne
fnstsw
add
in
lahf
xchg
cwtl
mov
mov
xchg
xor
insl
lcall
mul
pop
lahf
sbb
and
in
adc
aad
pop
movl
pop
push
dec
retw
mov
push
bound
loop
js
addr16
ficompl
pop
outsl
stos
cmpb
mov
or
cmp
xorb
pop
cmp
inc
inc
dec
mov
mov
lock
fistpl
std
adc
mov
sub
pusha
icebp
pop
adcb
or
popl
popf
push
iret
and
cmp
xchg
mov
ror
mov
dec
iret
xor
xchg
ds
cli
addr16
cmp
pushf
cld
push
xchg
loop
pop
aaa
xchg
sbb
clc
push
or
pop
and
hlt
scas
sahf
adc
dec
fsts
in
cltd
push
lret
add
popf
pushl
pop
push
add
or
inc
dec
popa
xchg
sbb
mov
rcrl
or
lret
sub
xchg
mov
icebp
dec
push
cwtl
pushf
int3
adc
adc
mov
add
cmc
add
decb
stc
gs
cli
pop
pop
adc
mov
popf
or
add
dec
mov
mov
jg
jge
push
shll
xchg
jne
jl
push
jnp
lods
mov
iret
jne
sti
sti
cli
mov
adc
adc
popf
push
xor
shl
add
dec
fdivs
mov
outsb
sub
in
pop
sub
push
icebp
and
mov
flds
es
subl
jge
xchg
sarl
cmc
bound
cwtl
into
popa
pop
aam
cmp
xchg
aaa
cld
pop
and
adc
inc
inc
jne
xor
jecxz
xor
sbb
jg
or
and
rcll
lahf
xchg
sbb
rorb
xor
adc
mov
pusha
cmp
leave
sbb
fisubs
lods
push
cmpsl
pop
cld
mov
cmp
inc
filds
fmuls
shl
data16
adc
lods
or
and
jo
orps
das
jo
pop
jecxz
fistps
and
inc
push
or
mov
inc
cwtl
cmp
inc
add
pop
jle
jge
xchg
pop
jl
mov
lods
cmp
mov
push
roll
and
fs
in
call
stc
out
movsb
mov
mov
inc
sbb
aad
pop
jo
sbbb
sbb
dec
scas
cwtl
adc
das
ret
xor
leave
loop
xor
mov
xchg
mov
test
sub
insl
movsb
push
popa
xchg
pop
imul
pop
js
jne
shrl
out
mov
dec
ljmp
sbb
repz
push
rclb
pushf
adcl
loop
mov
sbb
loopne
cld
sbb
and
add
mov
pop
in
enter
cwtl
mov
inc
gs
ss
pop
test
and
lret
sub
shrl
sahf
iret
rorl
cmp
inc
xchg
jno
sbb
xchg
or
jmp
das
cld
stos
jecxz
test
fcomi
mov
in
push
push
xchg
cmp
dec
xchg
add
xchg
jmp
cs
hlt
out
mov
popf
pop
adc
cmp
decl
shl
jg
movl
js
sbb
sbb
mov
roll
out
push
cmpsb
sub
push
and
cmc
push
lock
mov
in
mov
movsl
jmp
xlat
movsb
ret
pushf
sti
mov
test
ret
ja,pn
scas
xchg
adc
and
push
mov
movsl
loopne
push
cmp
loop
ljmp
insb
mov
insl
cmp
cmpsb
pop
loop
xor
cmpsl
adc
inc
enter
xor
fistps
mov
cltd
mov
mov
fidivrs
arpl
mov
xchg
xor
xchg
pop
jnp
adc
inc
in
pop
jb
out
in
mov
leave
jo
insl
and
xchg
push
pushf
nop
push
imull
insl
sbb
add
push
movsb
lods
mov
jne
mov
loop
mov
push
and
push
push
sbb
int
mov
nopl
mov
jns
push
dec
sub
sub
dec
pop
mov
mov
inc
cmp
sbb
lock
sub
fisubs
jb
fistps
loopne
and
iret
add
das
in
inc
shll
xchg
movsb
loop
cmp
dec
lahf
cmpsl
add
jae
negl
insl
aaa
cli
cmp
lret
sahf
lock
or
bound
jmp
pop
sub
mov
dec
std
lret
icebp
scas
sub
js
jo
dec
inc
pop
and
outsb
dec
outsl
sbb
std
dec
jge
sbb
popl
into
sub
mov
lds
xchg
icebp
cltd
mov
das
xchg
sub
orb
cli
addr16
inc
push
or
into
and
repz
sbb
or
jecxz
je
mov
loopne
push
cmpsl
cmpb
fcoms
mov
cmp
incl
fcoml
fnstenv
sbb
sub
jmp
cmp
push
mov
sub
in
sbb
jp
dec
loopne
in
andl
mov
mov
flds
inc
cmc
lods
xchg
outsb
loopne
xchg
in
out
sub
scas
cwtl
in
dec
bound
cwtl
push
ret
mov
lret
out
scas
jg
inc
loop
mov
lea
lretw
mov
into
les
out
test
or
nop
jno
mov
push
outsb
push
dec
xchg
punpckldq
pop
test
and
jae
jns
mov
jle
push
add
sub
add
pop
pop
push
mov
sbb
cwtl
shlb
test
mov
mov
jo
cmp
sub
cmpb
mov
out
lods
out
enter
sbb
in
sbb
xchg
in
inc
sub
shll
dec
into
lods
push
cmp
xor
stos
cwtl
in
inc
and
andl
jg
jge
fidivl
jmp
sub
mov
push
xlat
pop
xchg
mov
or
xorb
lahf
lret
inc
cmp
inc
test
or
in
jecxz
xor
cli
cmp
fs
sbb
mov
push
mov
ss
arpl
mov
jl
sahf
push
sbb
inc
loop
inc
mov
clc
dec
stos
or
cld
mov
mov
xchg
in
test
movsl
xor
jecxz
jle
imul
inc
xchg
fdivrl
cld
aas
inc
orb
push
fnsave
dec
cld
movsb
mov
mov
hlt
sbb
xchg
icebp
xchg
in
bound
test
or
xor
push
pop
dec
into
and
cmpsl
ss
sbb
inc
xchg
stos
in
push
fcompl
xchg
nop
shlb
and
inc
fsubrl
sub
cmp
and
pop
sahf
pop
sbb
push
push
notb
fdivs
pop
aam
les
aad
inc
mov
out
push
jmp
and
inc
lods
mov
repz
das
mov
cmp
or
outsb
push
adcl
cmp
fs
int
mov
shlb
rcll
mov
push
or
push
mov
cwtl
sbb
dec
push
shl
dec
push
sbb
pop
pop
adc
dec
in
pusha
push
push
aam
out
outsl
xchg
out
sbb
lds
dec
push
push
scas
sbb
lret
mov
mov
dec
ja
out
test
cmp
and
imul
mov
xchg
mov
js
icebp
push
rolb
test
insb
sub
mov
sbb
mov
ret
not
incb
rolb
mov
popf
mov
test
into
mov
mov
mov
lea
in
imul
je
pop
lret
js
and
daa
and
dec
push
dec
fwait
jp
sbb
mov
out
out
mov
push
or
imul
jnp
or
jle
add
mov
sbb
push
out
or
insl
adc
push
xor
rcll
mov
mov
push
and
mov
outsb
fadd
das
add
cmp
jmp
mov
push
lcall
adc
or
repnz
xchg
xlat
sbb
dec
dec
or
mov
jno
clc
adcl
cmpsl
jp
lret
xor
dec
stc
rolb
and
fcmove
movsb
cmp
mov
jmp
xchg
mov
outsl
sub
cmp
insb
out
das
xlat
push
push
lods
out
fdivrs
rcrl
jb
loopne
push
pop
loopne
fcoms
and
jno
and
jl
sub
fwait
mov
inc
shlb
shrl
pop
dec
addb
ret
rclb
movb
sub
icebp
push
adc
or
loop
repnz
add
cmp
das
les
mov
xor
xor
stc
add
dec
cmpb
ret
ret
sub
lods
pusha
imul
lret
test
jecxz
inc
xchg
jae
testl
sub
mov
pusha
fldenv
ret
sub
or
sti
addr16
idivb
or
fiadds
imul
imul
daa
xor
lret
push
and
xchg
mov
and
xlat
cld
xor
mov
lods
adcb
pop
mov
sbb
mov
not
inc
pop
pop
fldcw
je
decb
sub
xlat
mov
aaa
scas
sbb
cmpsl
imul
sti
push
push
bound
dec
or
sub
and
sub
or
inc
sub
filds
jge
lret
ss
dec
in
out
cmp
mov
out
pop
lods
fistl
adc
jb
xor
cmpsl
seto
repz
pop
cmc
cs
pop
fwait
or
adc
insb
mov
insl
aaa
mov
pop
dec
push
into
mov
xor
push
test
in
jbe
in
sub
add
lods
inc
shr
push
and
ss
test
stos
loopne
cwtl
pop
jne
push
adc
xor
loope
push
jmp
pop
push
mov
int3
iret
and
sub
or
dec
mov
lcall
loope
mov
dec
mov
repnz
mov
decl
xchg
xchg
mov
jle
mov
movsb
ret
mov
cmpsl
andb
das
clc
mov
or
out
push
les
clc
push
icebp
push
cmp
loope
dec
xchg
mov
cmpsb
push
lcall
clc
mov
jg
sti
mov
insl
push
es
dec
jb
mov
fidivs
xor
push
cmpsb
int3
test
sub
xchg
xchg
and
push
fstpt
ljmp
adc
push
ds
mov
rcrb
mov
add
mov
mov
sbb
je
lahf
cs
inc
jg
movsl
cmp
push
add
and
subb
and
add
add
inc
into
cli
imul
sbb
iret
push
xor
shl
das
push
adc
xor
ret
out
in
daa
mov
pop
dec
and
fs
insl
cli
out
push
cmp
mov
push
mov
shlb
push
cmc
sub
or
xchg
mov
enter
xor
cmpsb
mov
xlat
daa
pop
inc
xchg
mov
outsl
xchg
loop
pop
cwtl
test
movsb
mov
das
sub
std
jb
jg
sub
mov
insb
mov
aad
addb
movb
pop
fisttpl
les
shlb
add
loopne
ret
fadd
and
imul
insl
insl
and
sub
je
cld
jbe
jbe
push
sbb
mov
loop
cmp
mov
sbb
pop
or
mov
pop
clc
adc
loop
outsb
in
mov
outsl
sarl
push
enter
sub
push
dec
push
jg
adc
mov
xchg
into
inc
xchg
fwait
daa
sbb
addr16
sub
insl
pop
insb
inc
aam
popa
push
outsb
mov
push
stc
test
xchg
sbb
insb
mov
addr16
inc
cmp
dec
pushf
dec
or
push
mov
in
subb
lcall
mov
xor
imul
inc
rol
in
pushf
mov
sbb
jle
in
enter
and
aas
ds
adc
jno
mov
test
dec
fldcw
and
mov
int3
pop
or
sbb
movsl
stos
push
test
jl
xor
leave
adc
imul
loopne
lods
add
loopne
out
stos
mov
cs
imul
ud1
sub
out
pusha
mov
mov
lods
xor
jmp
push
sub
adc
mov
addl
sub
inc
mov
shlb
xchg
dec
ss
or
sbb
jbe
sbb
test
cmc
int
shrl
rclb
loop
add
rcrl
ss
lcall
push
dec
sahf
or
or
mov
iret
test
je
mov
std
pop
fldt
shrl
lret
and
sti
je
ljmp
fs
adc
fstpt
push
call
addl
cmp
add
stos
mov
fcoml
popa
xchg
fsubp
sbb
push
imul
cmp
sub
adc
lods
icebp
filds
arpl
rcll
cld
dec
test
cmc
test
cld
mov
sub
in
cld
into
mov
cmp
pusha
cmp
ja
mov
and
sti
cltd
out
inc
test
push
negb
imul
out
sub
clc
fadd
cmp
pop
add
cli
mov
sub
cli
sbb
adc
repz
push
test
lret
push
inc
arpl
inc
jle
mov
test
gs
sbb
xchg
pop
icebp
push
xchg
jmp
push
setl
imul
xchg
es
mov
mov
mov
jns
jmp
cmpsl
sub
cmp
insb
or
add
cmpsl
mov
and
mov
jbe
sub
xchg
push
dec
lock
das
inc
add
mov
movsb
les
push
cmc
add
xor
out
sbb
data16
int
mov
jbe
adc
addb
in
pop
inc
pop
and
shl
in
dec
adc
cld
push
xor
mov
jae
push
popa
lds
cld
in
pop
pop
mov
das
std
mov
ret
scas
mov
mov
ja
ss
call
mov
add
in
add
lods
xor
xor
fmuls
pop
ja
es
ljmp
sbb
dec
pop
xor
mov
pop
and
cmp
jns
inc
xchg
jno
mov
mov
insl
or
out
sbb
dec
push
sbb
xor
xor
push
jae
fs
jmp
stos
shlb
andl
addr16
out
pop
push
cmpsb
int3
mov
jo
shl
nop
leave
mov
mov
mov
cmp
push
xor
repnz
fcmovb
inc
enter
xchg
aad
jbe
sub
testl
push
in
int
pop
clc
or
aaa
lods
fisttpll
inc
xchg
aaa
pop
mov
dec
mov
jne
mov
and
push
bound
or
addb
icebp
mov
inc
xchg
lea
xor
movsl
scas
push
adc
and
aam
adc
xor
mov
adc
xchg
arpl
push
iret
dec
rcl
pop
xlat
inc
rorl
ds
xor
mov
jb
imul
out
dec
mov
cmp
xchg
mov
pop
dec
mov
test
mov
pop
mov
aad
stos
pop
ljmp
and
ja
dec
xchg
jns
cmpsl
and
leave
out
pop
ljmp
mov
mov
xchg
pop
xchg
jecxz
inc
cmpsl
je
sar
or
adc
adcb
jecxz
and
add
jns
mov
jnp
xchg
cmp
push
mov
jb
mov
call
cli
mov
ljmp
femms
movsb
mulb
popf
push
inc
sbb
add
jl
xor
and
dec
dec
leave
popa
popa
inc
les
push
sbb
test
into
lock
in
lods
shr
cmp
cmc
pushf
push
leave
lea
pusha
dec
mov
sahf
out
int3
ds
inc
sbb
dec
and
push
xchg
xor
pusha
leave
mov
mov
mov
sbb
sbb
mov
or
jp
cmp
pop
in
roll
rcrl
jo
inc
out
dec
movsb
sub
out
add
sti
repnz
jnp
xchg
adc
mov
xchg
push
or
mov
mov
aas
jmp
push
pop
out
sbb
movsb
dec
or
cmp
cli
and
and
div
fadds
pusha
jge
mov
popa
and
test
adc
ljmp
in
pop
jl
imul
mov
sbb
xor
push
xor
xor
xlat
aaa
pushf
lods
xchg
js
ja
sbb
dec
lahf
mov
leave
iret
bound
test
cmp
xor
dec
mov
mov
mov
mov
sahf
sahf
jo
pop
and
mov
sti
sub
jo
hlt
lea
mov
rcr
cmp
into
xor
aam
and
and
daa
pop
scas
out
loopne
leave
das
or
dec
mov
xor
andl
sbb
notl
sub
adc
dec
xor
in
fnsave
push
test
xorb
cltd
sarb
cmp
sahf
pop
enter
lcall
xor
mov
or
xchg
add
jns
jnp
adc
sbb
jmp
xchg
mov
mov
and
negb
or
inc
aaa
es
xlat
mov
sarb
pop
sbb
in
inc
jnp
pop
dec
test
dec
ret
shlb
mov
xchg
jnp
pop
ret
lahf
and
pop
shll
lds
popf
jecxz
mov
sbb
and
rcrb
cmp
ljmp
hlt
and
bound
mov
and
sti
in
ss
adc
mov
out
mov
jne
int3
xor
mov
pop
stc
xchg
out
icebp
ret
mov
mov
fwait
xor
jmp
xchg
sub
mov
fimull
test
and
loopne
xchg
mov
jb
cmpb
xchg
out
adc
mov
inc
jae
ljmp
xor
mov
adc
repnz
sub
and
jmp
jle
ret
xabort
addb
int3
test
xchg
and
push
xor
imul
mov
push
pop
das
cmc
inc
aad
js
push
or
mov
das
or
add
dec
mov
cmp
int
and
sbb
lcall
sub
sub
cmp
inc
test
jb
cwtl
xchg
mov
xchg
mov
dec
icebp
xorl
add
push
movb
mov
jg
push
adc
jmp
lcall
out
ret
or
xor
cmp
adc
lods
mov
sbb
incl
mov
jns
pop
jo
add
jecxz
xor
cs
mov
mov
jp
push
inc
xlat
call
icebp
lahf
movsb
adc
mov
fsubrs
pop
adc
cmp
dec
repz
mov
xor
push
adc
loopne
fcmovnbe
and
dec
out
daa
rcll
les
mov
cmp
xor
add
fwait
cmp
movsb
js
inc
rorl
mov
gs
orw
mov
lods
outsb
icebp
ret
lock
int3
dec
inc
cmp
pop
push
xchg
jbe
mov
mov
mov
pop
push
lods
jb
adc
andl
dec
pop
sbb
mov
mov
ja
or
bound
jmp
dec
es
xor
loope
push
cmp
dec
pushf
iret
test
sbb
leave
sti
fcomps
loope
lock
inc
out
jo
stc
call
popf
ret
push
movsl
jp
and
inc
cmovbe
popa
adc
mov
pop
jns
sub
inc
enter
lahf
lret
jb
jp
dec
hlt
jbe
dec
hlt
fistpl
pop
addl
lds
cmpsb
test
adc
lods
test
xor
ja
daa
xor
dec
sbb
shlb
push
sbb
add
adc
jg
fiadds
sub
dec
fldcw
das
pop
xor
or
fbstp
popfw
lahf
jl
sbb
mov
pop
and
pop
push
sbb
ja
cld
fisttpl
jg
mov
in
dec
mov
bound
int3
imul
je
scas
pusha
repz
push
sub
xor
into
orl
int3
adc
jp
sub
or
sub
fldenv
stos
and
scas
sti
sub
in
enter
jmp
pusha
nop
call
mov
and
sbb
mov
xor
sbb
enter
jp
pusha
mov
enter
insb
addr16
sbb
test
clc
addl
mov
lods
xlat
mov
stc
adc
into
or
mov
pop
jl
outsb
js
repz
mov
fwait
add
xorl
add
push
movsb
push
decl
stos
add
mov
xchg
mov
outsb
pop
pop
inc
and
xchg
je
pusha
xchg
lret
add
in
int
mov
mov
adc
cmp
cmc
popf
aaa
rcll
inc
outsb
mov
loopne
push
xchg
movsl
movsl
jae
xchg
je
fsubr
jge
mov
mov
loope
cld
popa
lret
jl
add
out
jo
cmpsb
scas
mov
popl
scas
std
lods
adc
nop
jae
mov
or
add
mov
mov
xchg
lea
push
cmp
loope
fisttpl
dec
xor
pushf
mov
mov
inc
cli
sub
int
test
or
or
sarl
outsl
jns
cmp
xchg
mov
sub
fs
in
rcll
adc
or
jg
test
jle
outsl
and
push
fstpt
mov
dec
push
fimuls
arpl
popa
in
dec
in
adc
push
dec
das
test
push
divb
mov
cmp
cmc
stos
cli
movsl
and
popa
add
clc
enter
fcompl
hlt
stos
out
xor
dec
mov
inc
fcomps
fdivrs
xchg
fisubrl
int3
sub
push
aam
or
sbb
cmpsl
leave
push
repz
clc
jnp
test
xchg
lret
dec
and
shrb
jo
jge
push
jbe
cli
outsl
add
pop
sub
adc
mov
mov
xor
lock
outsl
cmp
fldt
push
clc
dec
enter
repnz
aaa
mov
inc
mov
pop
vmovd
dec
lods
pusha
lret
pop
add
nop
addr16
cmpsb
icebp
icebp
rcrb
int
push
repnz
int
xchg
ja
pop
sub
stos
or
fmul
push
outsb
arpl
inc
mov
loopne
rolb
icebp
enter
jge
pop
fiadds
out
adc
cmc
xor
jne
and
sti
push
loopne
fistps
test
call
or
push
insb
push
inc
test
int3
inc
addl
cmp
xchg
pushf
out
insb
or
mov
scas
inc
mov
in
xchg
add
mov
mov
push
xchg
xchg
xchg
aaa
adc
mov
cmpsb
loope
xor
or
inc
xor
sete
arpl
and
mov
pop
je
aad
jp
call
in
mov
push
adc
aad
jne
jnp
dec
fwait
dec
xchg
jae
int
testl
in
cwtl
shr
pop
adc
inc
jge
add
test
xor
das
in
pop
adc
loop
into
jecxz
ds
mov
mov
mov
out
xorb
jo
scas
dec
add
adc
adc
inc
sub
inc
loop
les
stos
cs
xchg
fisttps
pop
movsl
fwait
iret
xor
adc
loope
call
call
or
or
pushf
cmp
mov
in
and
lods
movsb
xchg
shrb
mov
or
stc
mov
adc
or
mov
sbb
scas
or
push
aad
cmp
xchg
aad
sub
sbb
cmp
cltd
cmp
pop
repnz
cmc
cs
rcll
fwait
shll
lods
mov
sbb
pop
mov
nop
pop
adc
push
inc
movq
sub
pushf
sti
pop
xchg
lcall
sub
inc
xchg
push
rcrl
orl
xor
mov
into
add
and
aaa
mov
add
fnsave
in
out
add
mov
xchg
loope
test
out
mov
ficomps
cltd
jl
mov
pop
in
fs
adc
push
jmp
pop
xor
outsb
outsl
aam
xor
in
ja
sahf
icebp
push
mov
mov
xor
out
mov
inc
lds
loop
addb
push
and
jg
ret
mov
arpl
rol
imul
daa
jo
clc
xchg
pop
imul
mov
loope
sbb
push
cmp
lret
mov
mov
stos
pop
mov
mov
movsb
pop
cs
mov
xchg
inc
fs
lret
push
filds
ss
loope
call
inc
mov
and
xor
jnp
hlt
popf
push
aas
subl
mov
popa
rorl
mov
jecxz
ljmp
lcall
jnp
fdivrp
adc
push
inc
clc
aam
jl
mov
dec
mov
test
mov
mov
pusha
xlat
or
ljmp
mov
xchg
xor
fldz
push
popf
or
mov
xor
fsubr
mov
fistl
mov
cmp
cmp
jl
dec
xor
jecxz
dec
push
mov
in
iret
mov
inc
adc
adc
mov
or
mov
dec
or
inc
push
dec
xchg
pop
addr16
sub
and
push
inc
mov
cs
aam
jmp
fxch
stc
jnp
xchg
loop
mov
lods
mov
jle
ja
mov
test
push
mov
mov
xchg
inc
int3
jp
adc
stos
jmp
pushf
sarb
in
decl
cltd
inc
or
cmp
sub
cmp
imul
roll
addr16
idiv
pop
sbb
test
jl
xchg
fmulp
pop
bound
int
sub
mov
int3
add
addr16
adc
xor
fwait
lret
fiadds
nop
movsb
and
xor
xor
xchg
add
aaa
prefetch
adc
andl
jmp
pop
lret
sub
pop
call
out
adc
pop
push
mov
es
repnz
scas
mov
dec
or
and
adc
adc
scas
orl
jns
push
and
mov
vshufpd
inc
pop
hlt
inc
mov
repz
in
movsb
xchg
imul
dec
cmp
icebp
in
xor
sbb
in
adc
div
fmulp
and
add
jge
icebp
sbb
pusha
in
data16
das
scas
pusha
push
add
fs
sbb
call
lods
adcl
mov
std
ja
pop
xchg
pop
mov
int3
in
arpl
sub
lahf
ret
mov
cmp
mov
fimull
icebp
sahf
add
xor
lods
das
cmp
fmull
and
or
mov
add
and
sbb
faddp
nop
pop
rclb
jb
ljmp
mov
adc
and
xor
or
push
sub
push
cmpsb
fcoms
inc
clc
xlat
out
xor
push
in
mov
loope
inc
rcll
fstl
lahf
lds
adc
imul
stos
xchg
mov
xchg
arpl
mov
jp
out
mov
or
sub
mov
and
enter
rclb
xchg
cltd
jp
and
lret
daa
and
inc
and
fwait
jno
sti
inc
loope
in
insl
call
jno
inc
xlat
inc
ret
sub
pop
into
mov
inc
scas
dec
fsubl
popa
xor
mov
mov
jecxz
sbb
xlat
xchg
mov
xchg
ret
and
and
aaa
rolb
fsts
aad
push
push
orl
pop
in
jns
sub
add
xchg
inc
andb
lahf
insb
jmp
in
int
jb
mov
outsl
pushf
call
repnz
fidivl
js
shr
pop
cmpsb
in
xchg
or
add
dec
pop
push
dec
xchg
mov
fnop
push
int3
jp
xor
mov
cmp
outsl
xor
fs
mov
stos
call
icebp
mov
xchg
sub
fs
dec
fs
pop
cmpsl
ja
inc
sbb
jl
jns
or
xchg
pop
mov
testb
pop
push
mov
cmp
push
rorb
cmpsl
repnz
xchg
xchg
push
outsl
jle
add
loopne
insb
sbb
cld
mov
mov
mov
mulb
push
test
imul
pop
mov
mov
cmp
cmp
loopne
lea
xchg
inc
inc
mov
and
xchg
cmp
insw
pop
out
rorb
mov
or
fsubrp
push
data16
xchg
shr
fisubs
aad
lods
cmpsl
mov
and
pusha
pop
mov
and
ficoml
jle
outsb
mov
out
jge
dec
jb
faddl
mov
push
addl
jecxz
mov
xor
movsl
fwait
push
popf
sub
mov
pop
sbbl
cmc
cmp
pop
and
cmpsb
xor
ds
scas
jp
loopne
mov
cs
push
ja
mov
dec
add
out
mov
adc
mov
push
push
xchg
mov
mov
rcll
mov
loope
or
dec
push
mov
inc
mov
out
enter
mov
sbb
mov
stos
push
fildl
out
ret
outsb
inc
popf
sub
adc
movsl
nop
insl
cmp
cmp
aam
clc
jge
push
outsb
add
dec
outsb
cmpsb
mov
mov
loope
pusha
gs
xor
mov
rcrb
ss
sbb
hlt
jno
clc
jmp
sbb
outsl
dec
repz
jne
jl
mov
inc
adc
pop
out
cmp
scas
movsb
mov
lock
lods
scas
jle
jae
mov
mov
sub
jno
sti
fisubrs
test
pop
sub
add
mov
cmp
sarl
je
push
cltd
testb
aam
xchg
repnz
mov
or
and
xchg
stos
jle
push
lock
popl
inc
ret
lahf
pushf
add
xchg
sub
cmp
mov
and
rclb
data16
cmp
aad
imul
scas
sbb
daa
idivb
or
jmp
insb
xchg
loopne
out
mov
cwtl
movsl
hlt
mov
lcall
fistpll
push
and
lret
jnp
dec
ret
fildll
insb
dec
lds
sarl
add
test
loop
add
pop
xchg
nop
dec
aad
loopne
xchg
cmpb
or
and
stos
cld
xchg
les
test
sbb
and
inc
out
cwtl
dec
negl
dec
or
movsb
sti
cmp
jp
sub
cmc
test
pop
dec
sbb
imul
jnp
fcoms
jg
mov
gs
xor
lret
dec
mov
jo
lea
mov
clc
scas
addr16
imul
sbb
inc
push
pop
push
test
mov
push
push
mov
xchg
outsb
xchg
mov
cmp
adc
in
repz
les
xchg
pop
stos
add
inc
pusha
xor
dec
mov
addr16
call
shr
nop
sub
loopne
jle
jge
xchg
or
cmp
adc
subl
cmp
jp
lds
in
dec
xor
mov
push
inc
ljmp
lock
add
dec
push
add
pop
lds
xlat
xor
mov
mov
cmp
lods
jg
mov
add
movsl
xchg
aam
xchg
jge
rcr
fidivl
imul
pop
insb
mov
scas
sub
mov
loopne
push
inc
out
pop
cmpsl
sub
cltd
test
flds
adc
sbb
mov
sbb
pushf
repnz
push
pop
movsl
mov
adc
scas
mov
xor
fdivs
adc
cmpsl
and
arpl
cmp
mov
mov
push
lcall
push
cmp
jl
hlt
jae
mov
sub
fsubp
cmp
std
mov
lock
popf
rclb
mov
jmp
arpl
lsl
and
push
pop
sub
dec
test
mov
ds
lods
dec
push
js
pusha
inc
pop
cmpsl
imul
ds
sub
jnp
jg
cmp
in
leave
jno
pop
mov
inc
ja
repz
test
outsl
in
dec
fadds
xlat
xchg
mov
and
xor
jmp
xchg
sub
push
push
push
and
stos
push
js
fisubrs
cmpsl
mov
cld
cmc
push
xor
fsubr
mov
daa
es
cld
movsl
xchg
adc
lahf
stos
mov
push
and
cwtl
mov
sub
adc
pop
jnp
jmp
shlb
mov
xor
mov
sbb
les
sub
jne
hlt
xchg
nop
sub
repz
mov
adc
cmp
mov
xlat
jo
mov
subb
pop
scas
pop
push
pop
push
cmp
filds
sahf
mov
dec
mov
pop
les
in
cltd
mov
mov
mov
sarb
mov
sbb
dec
sbb
stc
xchg
xor
or
enter
nop
sub
ret
daa
cmpsb
clc
fisubrs
sbbb
cmpsl
lretw
pop
xor
ss
lods
mov
ljmp
lea
in
sbb
mov
mov
jnp
and
mov
mov
pop
icebp
int3
add
mov
cmc
das
jmp
push
adc
and
mov
fwait
xchg
inc
movl
xor
outsl
cmpsb
sbb
xchg
lods
sub
or
jbe
gs
data16
pop
daa
lods
mov
push
sbbb
cmp
mov
fists
vphsubwd
subb
push
clc
and
mov
jmp
xor
arpl
inc
test
ret
pop
fnsave
dec
lcall
aad
mov
and
or
jns
push
xchg
push
dec
dec
inc
mov
les
jo
mov
adc
push
adc
in
into
xchg
pop
pop
dec
lods
fldenv
mov
add
mov
sub
ret
jns
ljmp
add
and
out
bound
mov
or
pop
jnp
mov
repnz
pop
cmpsb
cmpb
je
fists
adc
jnp
xchg
out
ja
movsl
imulb
xchg
cmp
jmp
fs
push
push
repz
jl
sbb
ds
test
sub
mov
test
push
int
pop
rol
push
push
test
sbb
sub
add
adc
testl
mov
inc
adc
hlt
cld
rcll
mov
jg
dec
xlat
push
sub
sbb
jns
orl
leave
dec
push
mov
mov
ret
cwtl
dec
mov
sub
addr16
out
cmp
jecxz
pop
std
push
lods
cld
in
pop
cld
pusha
outsl
and
cmpsl
push
sahf
ljmp
popa
pop
mov
je
sub
sbb
mov
pop
fldt
xchg
mov
mov
fidivrl
fld
push
rcrb
mov
inc
fwait
out
sub
lods
ss
dec
cli
scas
sub
xchg
in
push
inc
insl
fdivl
and
ret
out
fsubrp
jmp
push
ret
or
mov
test
rcrl
sub
cmp
mov
xchg
aam
sub
or
insl
int3
repnz
mov
sar
add
jg
push
dec
ljmp
push
cmc
loop
add
push
and
jns
sbb
or
fwait
sbb
or
frstor
ja
or
jmp
mov
or
mov
test
mov
xor
imul
pop
cmc
inc
hlt
nop
sub
in
push
mov
aaa
sbb
push
xor
fwait
popf
fsub
movb
stc
pushf
pop
orl
sarb
subb
mov
jl
and
sub
jbe
adc
sbb
jge
mov
lds
sub
ja
cmovb
dec
leave
xchg
sbb
xor
vpmullw
andb
mov
push
icebp
xor
push
jg
and
add
jns
xchg
push
mov
popa
dec
cmp
sub
test
jmp
jle
shrl
cs
add
cwtl
ja
out
xor
shll
inc
or
push
xor
mov
sti
lock
lret
popa
sub
in
mov
sub
ret
iret
in
gs
lahf
in
xchg
push
mov
inc
lret
dec
xchg
sbb
mov
clc
pop
mov
mov
xor
les
adc
mov
gs
push
mov
fdiv
mov
shrl
cmpl
cmp
pop
mov
js
mov
or
icebp
push
jl
adc
jnp
mov
add
dec
fcomps
out
lcall
pop
jmp
cwtl
jg
iret
fwait
mov
enter
mov
stc
int3
addl
push
push
cmp
or
dec
stos
out
adc
sbb
addr16
fs
pop
lods
lods
pushf
dec
jecxz
rol
mov
out
add
sub
outsb
jns
andb
cmp
gs
aas
add
nop
shll
shlb
cmpsb
sub
mov
mov
iret
addr16
in
pop
or
push
sti
out
xchg
push
dec
jge
js
xor
mov
cmp
adcl
jge
jo
dec
std
xor
scas
inc
and
xorl
add
push
cmp
mov
mov
movsb
fldt
jp
roll
ss
cltd
out
mov
mov
ss
add
shlb
mov
and
push
xlat
inc
lods
push
in
or
fsubr
lret
xchg
aad
ret
mov
je
in
jbe
mov
call
lods
cmpsb
js
scas
in
out
cmp
enter
xor
xchg
jo
adc
add
popa
add
mov
mov
stos
cmp
fstl
xchg
push
mov
cmp
fldt
fs
rcll
pop
xchg
push
xor
or
out
jnp
adc
and
jnp
clc
mov
sbb
xchg
jl
push
ficoms
xchg
sub
jbe
imul
popf
stos
jb
rol
dec
movsl
insl
dec
repnz
mov
push
addl
outsb
cmpsl
aaa
lahf
adc
adcl
sub
xor
pop
hlt
lock
pop
add
popf
nop
cmp
lock
mov
and
sarl
xlat
dec
jmp
fadds
aas
pop
push
fstp
fs
dec
add
repz
push
cmp
cmp
outsl
cs
ror
jle
jg
insb
in
sahf
add
push
and
and
movsl
leave
mov
sahf
loopne
scas
leave
sbb
je
sub
lahf
jb
adc
push
dec
loopne
fldcw
fsts
lcall
sbb
out
push
sbb
cmp
push
or
hlt
pop
push
rcrb
jne
sbb
inc
mov
fdivrl
movsl
in
lret
lods
add
add
sbb
push
into
mov
push
jl
jae
aas
mov
stos
sub
add
lock
or
ss
test
xchg
mov
mov
push
pop
loopne
psrad
jae
and
and
sbb
xor
push
xlat
xchg
or
or
stc
mov
insb
inc
mov
adc
addr16
lods
mov
mov
out
rclb
pop
fcmovnbe
insl
testl
xor
pop
jecxz
or
add
jle
hlt
add
jp
lret
jo
shlb
mov
sub
aad
sub
loop
jb
sub
jnp
add
gs
inc
pop
adc
mov
insb
xor
hlt
adc
stos
into
js
mov
insl
cmpl
jge
inc
push
fs
bound
repnz
adc
scas
adc
or
mov
movsb
das
sub
dec
in
pushf
mov
int
mov
call
sub
xchg
jno
or
mov
pop
lret
cmpsb
xchg
xor
xor
adc
fwait
int3
lret
adc
popa
pop
ja
int
mov
xchg
pop
lret
push
sub
sbb
adc
and
ror
ret
cld
insb
add
loope
lahf
rcr
push
jge
std
out
or
loopne
clc
sbb
nop
and
push
pop
fmull
addr16
add
mov
loop
pop
add
clc
insb
jg
sub
in
inc
mov
xor
push
shrb
inc
sub
dec
mov
cmc
jle
test
lcall
pushf
in
stc
pop
imul
jge
test
nop
push
aam
in
fcmovnu
shlb
and
fcmovu
popa
scas
fsubs
xchg
out
nop
cmp
mov
int3
ss
push
jmp
push
mov
popf
xchg
xchg
add
jo
sub
sub
outsl
rcr
adc
sub
and
jns
pushf
test
adc
xor
mov
mov
shrb
dec
cmp
scas
aam
sarl
scas
mov
jno
mulb
push
push
and
stc
or
dec
int
jo
sti
inc
dec
mov
out
stos
sar
dec
aaa
xor
orl
jbe
pop
or
das
pop
push
fistps
adcl
punpckldq
call
cs
mov
lods
xchg
mov
sbb
lret
and
xor
mov
pop
mov
jno
sbb
es
js
push
lahf
pop
sbb
ret
daa
adc
sub
imul
cmp
lock
nop
out
cltd
adc
rorb
mov
inc
ljmp
mov
ss
je
adcl
add
add
fisubrl
mov
dec
bnd
push
mov
mov
repnz
mov
nop
mov
inc
movsb
imul
adc
aad
add
xor
mov
imul
rcrl
xchg
test
mov
inc
jnp
sub
cli
adc
scas
mov
xchg
ljmp
push
in
out
sbb
and
out
into
mov
iret
push
fnstsw
ljmp
sarb
addr16
adc
movsl
push
lahf
mov
ror
cltd
mov
inc
push
or
jne
fiaddl
xchg
push
jecxz
movsb
fmuls
mov
je
inc
repnz
adc
sbb
dec
insb
pop
xchg
loopne
mov
push
leave
loope
arpl
adcl
mov
repz
leave
imul
mov
dec
and
inc
jae
scas
mov
jb
inc
es
push
mov
lods
scas
cmp
out
adc
cmp
or
out
and
or
outsb
add
das
and
vunpcklpd
push
jns
clc
stos
outsb
xchg
inc
imul
or
gs
inc
pop
inc
aad
loope
js
push
sbb
mov
mov
dec
loop
mov
in
roll
loope
aaa
push
push
mov
jge
fisubrs
imul
dec
jl
out
sub
and
add
in
rorl
movl
mov
push
sub
mov
addr16
sub
mov
inc
clc
mov
inc
adc
outsl
mov
pop
rolb
cld
mov
add
xor
mov
adc
mov
inc
dec
jecxz
mov
rcrb
aaa
pop
jmp
dec
push
vpsraw
or
sub
xchg
stos
push
stos
or
xor
sahf
dec
push
scas
popf
xchg
daa
nop
inc
mov
shlb
into
mov
scas
push
mov
in
mov
jge
inc
sbb
and
popa
xchg
insb
mov
test
jb
sub
idivb
add
ficoms
pop
jbe
mov
dec
jb
frstor
shl
sbb
ja
repnz
sub
cmp
mov
cwtl
inc
in
and
cmp
out
std
popa
or
sbb
pop
jae
push
xchg
add
add
xor
mov
jp
cli
rcrl
loope
or
rclb
cmpsb
inc
stos
jns
les
push
add
adc
bound
mov
dec
fstps
push
jo
inc
stc
cmc
outsl
out
inc
jb
scas
aad
xchg
stos
jl
fsubl
push
aad
dec
cmpsb
jbe
iret
and
push
test
mov
into
bound
sub
fucomi
mov
mov
mov
dec
pop
popa
mov
xchg
jae
dec
dec
stc
mov
fcmovu
or
push
arpl
inc
cld
fimull
inc
sub
fcmovb
jbe
sti
test
ljmp
and
ja
mov
adc
xchg
dec
jl
pop
dec
popa
xchg
loopnew
nop
popf
cmpsb
es
out
mov
fldcw
daa
xor
mov
or
dec
out
or
data16
mov
push
inc
addr16
lcall
mov
movsb
insl
push
shr
loope
pushw
lods
into
dec
xor
mov
add
xchg
cmp
inc
mov
scas
cmpsl
cmp
mov
int3
jne
mov
cmp
ror
pop
in
adc
or
mov
xchg
sbb
sti
mov
fldt
or
mov
mov
popa
or
jg
lods
dec
mov
jle
aas
pop
nop
jne
mov
pop
add
ds
movsb
xor
push
test
rep
outsl
stos
sbb
out
into
aad
loop
ds
mov
sbb
dec
push
pushf
enter
adc
stos
push
movsb
mov
imul
popf
call
imul
jne
cmpb
insb
in
push
fwait
test
mov
pushl
dec
xor
daa
test
xor
lea
popf
jg
aas
push
dec
jae
test
cmpsl
mov
jp
add
movsl
jne
push
sbb
add
sbb
inc
jb
idivb
fdiv
lods
int
sbb
scas
mov
dec
or
and
movsl
cmc
mov
xchg
mov
in
aam
mov
iret
xlat
add
mov
insl
es
out
pop
pop
adc
ret
mov
rcrb
sub
les
fldt
push
dec
mov
cltd
roll
lahf
or
mov
faddl
je
insb
leave
shl
inc
fisubl
pop
in
loop
sahf
pop
fbstp
cmpsb
pop
mov
imul
movsb
xchg
sbb
outsl
in
adcb
daa
jge
stos
jge
lcall
xchg
adc
rclb
gs
out
shll
adc
jns
shl
mov
aas
shll
addr16
pop
jo
cmp
inc
mov
sbb
add
imul
xchg
ret
xchg
cmp
mov
lahf
pop
jb
adc
cmp
cwtl
cmpsb
rorl
test
fidivrl
mov
push
lods
lret
adc
sahf
dec
mov
inc
es
in
mov
mov
add
push
fldenv
gs
fcoms
sbb
xor
cltd
mov
lods
cmp
fimull
xor
adc
in
adc
and
neg
sub
fmull
hlt
out
cmp
mov
mov
jge
mov
and
push
mov
push
adc
popf
mov
or
mov
imull
push
xchg
stc
mov
outsb
xchg
fs
in
jp
cmp
orb
mov
sti
gs
stos
push
cmp
in
outsb
or
and
or
repnz
cmpsl
pop
inc
mov
daa
fidivrl
lahf
cld
mov
mov
mov
lods
xchg
push
xor
test
sti
push
int3
xchg
xchg
xchg
icebp
xor
cmpl
add
xchg
pop
inc
sbb
imul
pxor
lcall
jb
mov
fcmovne
mov
cmp
rcrl
repnz
push
rdtsc
in
adc
data16
popa
mov
cli
mov
sbb
or
mov
pop
rolb
testb
rclb
xchg
lahf
cld
lahf
push
and
sub
xlat
lds
xlat
pop
jmp
cmp
popf
movsl
jno
sub
clc
test
or
sbb
inc
das
ja
xor
daa
lcall
cmpsb
addr16
mov
js
mov
fistps
sub
fmuls
cmp
inc
scas
iret
add
aam
std
insl
out
inc
or
nop
mov
adc
xchg
xor
lock
jle
aam
and
jno
aas
mov
aad
clc
imul
cmpsb
enter
mov
repz
int
scas
lahf
shll
in
cmc
nop
scas
cld
lock
imul
cmc
addr16
sub
rcrb
and
out
aam
and
daa
xor
sbb
sbb
loopne
arpl
pop
fiaddl
ljmp
aaa
dec
mov
cmp
jno
pop
shl
sbb
andl
repz
hlt
cmc
das
nop
push
ret
dec
pop
rolb
sub
mov
pop
mov
pusha
imul
or
test
pop
lret
xchg
inc
jmp
and
cs
xorl
ja
stc
mov
stos
dec
test
cs
xchg
pushf
jmp
jmp
jmp
jb
gs
dec
icebp
mov
notb
push
rolb
cs
arpl
fistps
mov
dec
pop
mov
orl
inc
pop
ret
out
aaa
push
icebp
cs
inc
xchg
stc
inc
fwait
sub
xchg
jb
pusha
sbbl
jge
movsb
cmp
jle
pop
cmc
push
mov
dec
mov
xor
sbb
sbb
cmp
sub
pop
xchg
inc
arpl
insl
push
insb
sbb
leave
pop
lods
in
jae
lods
inc
mov
cmp
adc
popl
cmp
stc
je
pusha
xor
push
or
adc
and
adc
ret
jno
xor
es
out
inc
popf
push
int3
mov
mov
idivb
ret
pop
rcrb
pop
fbld
cmp
repz
inc
pusha
sti
scas
push
cmp
aaa
adc
sbb
sub
lret
pop
dec
aas
mov
add
dec
call
jns
jo
and
cld
jns
jmp
add
repz
xchg
add
clc
subl
int
incb
notl
in
mov
js
push
xchg
pusha
adc
mov
nop
lcall
push
testb
add
inc
and
in
idivl
and
sub
cmp
xor
inc
push
sub
pushf
enter
jo
mov
rorb
sub
movsl
mov
in
scas
insl
jne
lock
and
imul
push
sbb
lret
xor
out
xchg
vmsave
push
cmpsb
in
aam
cli
cmp
test
in
push
lret
push
jae
popf
dec
sbb
data16
shlb
js
idivl
mov
fildll
add
addl
and
outsb
add
jl
out
jnp
mov
add
dec
dec
xchg
cmp
push
aad
pop
add
arpl
adcb
jge
stc
pop
xchg
lahf
lret
and
rcl
fwait
out
aam
mov
jecxz
insl
push
dec
xor
push
dec
inc
jmp
movsl
jge
mov
mov
cmpsl
clc
cmp
add
cmovge
mov
jmp
push
inc
dec
out
ret
sti
sbb
sub
sbb
jne
insl
sub
fnstcw
lcall
shl
ret
or
scas
loopne
outsb
cmp
rorl
mov
add
lods
mov
dec
dec
sarl
test
dec
and
sbb
dec
push
fwait
or
loop
jbe
xor
lods
mov
mov
sarl
mov
or
sub
iret
push
mov
or
leave
jns
add
jae
bound
sti
cmp
add
jp
lock
sub
pop
jns
cmpb
mov
aam
or
mov
mov
add
push
imul
push
inc
sub
stos
add
jne
inc
jb
or
pop
insl
add
cmpsl
cld
or
cmp
pop
jg
lcall
cwtl
mov
add
in
dec
in
psllq
orl
aas
cmc
xor
movsb
xchg
pop
shrl
iret
sbb
xchg
leave
cmpl
cwtl
sub
sub
cmp
ljmp
shrb
outsl
pop
cwtl
add
cltd
popf
xchg
insb
mov
xchg
xchg
mov
test
mov
jecxz
cmp
xchg
data16
shr
ljmp
lea
and
ret
mov
sbb
sahf
mov
sub
push
rorb
dec
lret
mov
lea
imul
lret
lea
pop
addr16
in
loope
cmpsb
xchg
pop
jb
adc
in
xor
sbb
adc
aaa
lretw
inc
jmp
sarl
sub
sbb
adc
jnp
int
movsl
sub
lea
jne
in
imul
mov
or
cli
cmp
test
imul
pop
pop
push
pusha
push
int
or
push
daa
push
cltd
rcrl
nop
jle
ret
mov
xlat
pop
push
lock
mov
aam
sarb
dec
xor
sbb
lahf
jg
xchg
mov
sub
ja
adc
push
sbbl
pop
and
ret
test
dec
cwtl
mov
setp
icebp
push
sub
cmp
je
cltd
out
outsb
call
add
xor
inc
into
int
movsb
hlt
jmp
addr16
add
sub
inc
pusha
cmp
fisttps
jbe
jno
in
jno
pop
fcmovnu
xor
xchg
push
cmp
sbb
mov
popa
or
mov
or
loopne
insl
and
cli
jno
jno
loope
imul
cs
dec
mov
jge
and
mov
jecxz
pushf
inc
push
lahf
push
cmp
loope
loopne
xor
fdivrl
enter
ficoms
jns
cmpsb
movsl
mov
pop
mov
jmp
dec
mov
lret
mov
inc
les
fisubrs
pop
mov
fucomp
sub
mov
xchg
pop
shll
cld
cli
dec
icebp
shll
outsb
bound
mov
xchg
int
xor
sub
mov
lret
in
lret
push
and
hlt
xor
out
outsb
mov
or
xchg
shl
add
push
and
arpl
sub
fsubr
sbbl
pop
scas
pop
push
cld
and
stc
rcrl
fbld
adcl
cld
es
push
mov
mov
call
lcall
jge
mov
ret
out
and
dec
imul
adc
rorb
push
mov
pop
adc
jno
fildl
xchg
aaa
shrb
lock
jg
ljmp
lahf
lcall
xchg
ja
adc
adc
adc
data16
pusha
pop
test
stc
enter
cmp
fwait
push
jno
repnz
push
mov
inc
fstpt
stos
sbb
aam
mov
loope
jne
pop
call
sbb
pusha
lods
dec
in
sub
int
fmul
dec
xchg
mov
dec
and
xor
add
sbb
sarl
pop
and
add
jmp
loop
xchg
pop
insl
aam
insb
imul
cwtl
sbb
mov
adc
std
in
xor
loop
xchg
jb
mov
xor
mov
jge
add
sbb
arpl
outsb
add
std
inc
insb
fildll
mov
sbb
fildll
pop
mov
xchg
pop
sub
mov
sub
in
lods
ret
sub
lahf
xor
js
xor
mov
xchg
std
jl
jmp
cmpsb
test
ret
sub
or
rcr
xchg
ljmp
imul
insl
in
inc
test
inc
push
push
in
mov
and
mov
ds
cmpb
xchg
fstpl
fbstp
cmc
fwait
xlat
mov
dec
loopne
dec
sbb
xchg
dec
inc
out
andb
mov
push
or
mov
int
pop
jl
stc
out
push
sub
fmul
fs
jmp
push
imull
arpl
out
jecxz
addl
add
outsb
or
dec
pushf
xlat
mov
daa
xor
jge
cltd
addr16
pop
mov
cmp
inc
clc
mov
push
sti
jge
in
dec
jle
pusha
adc
stc
sub
das
xchg
or
xchg
pop
movb
push
push
mov
push
add
sub
stos
mov
dec
mov
in
cmp
movaps
mov
push
or
jo
jp
dec
jae
dec
sub
outsl
sbb
fs
rolb
sahf
imul
icebp
xor
cwtl
test
xor
cld
cwtl
mov
dec
out
fs
sub
subl
fwait
movsl
jae
jge
icebp
inc
xchg
adc
clc
cld
out
xchg
xchg
test
adc
mov
pop
in
cs
pushf
xor
loopne
jbe
cmpsb
pop
adc
popf
push
mov
repnz
xchg
mov
in
mov
sbb
popf
push
push
inc
das
or
inc
lds
rcrb
leave
mov
fildll
jmp
jg
cld
lahf
sub
sub
jbe
or
mov
mov
iret
iret
mov
sub
pop
jp
in
js
mov
fisttpll
loopne
in
roll
xor
divl
es
or
pushf
adc
dec
jecxz
xorl
shlb
popf
or
jl
add
push
mov
mov
push
orb
mov
fdivrs
hlt
insb
cld
and
jecxz
push
pop
div
lock
mov
mov
sbb
outsl
or
popa
icebp
mov
orb
pop
xor
sbb
mov
fs
sub
repz
icebp
aam
ret
or
push
je
mov
inc
notl
or
pop
sub
push
pop
div
fsubrp
mov
mov
pop
dec
ds
push
xchg
dec
add
inc
mov
mov
popa
mov
push
mov
outsl
jg
clc
aam
stos
aam
insl
sub
inc
push
xor
sbb
jp
or
mov
nop
inc
push
int
sub
adc
mov
xchg
lahf
jge
lds
adc
mov
jns
add
xor
dec
mov
cs
mov
repz
insl
push
add
cmc
data16
push
insl
sub
xchg
and
add
jne
scas
rcll
movsb
lret
iret
das
push
jle
mov
add
fidivrs
cld
mov
cwtl
push
shl
sbb
mov
mov
fbstp
mov
ret
test
dec
push
lret
push
or
adc
leave
cltd
xor
inc
or
xchg
push
pusha
gs
das
or
sbbb
loop
cmp
pop
loope
xlat
mov
sub
mov
rorl
sub
dec
adc
xor
call
nop
cmp
jle
jl
inc
shrb
push
ret
fstpt
rorl
xlat
loope
lea
jno
out
push
dec
imulb
sub
mov
mov
nop
push
pop
and
xchg
cwtl
mov
inc
mov
dec
cmc
out
mov
cmpsb
mov
shl
sbb
arpl
xor
cld
add
dec
cwtl
lods
test
sahf
test
mov
fstps
push
lret
add
mov
add
and
loop
mov
loope
mov
sub
test
inc
xor
dec
jnp
jbe
jns
sub
loop
xchg
cmp
out
pop
imul
rcl
call
lahf
arpl
and
test
cmp
pushf
negb
lods
lahf
mov
xchg
ljmp
add
mov
mov
adc
repz
les
push
ss
loopne
xlat
cmp
xchg
fs
or
inc
fs
shrb
inc
fwait
lret
lcall
add
out
rclb
scas
fmull
nop
adc
add
cld
pop
and
imul
int3
or
mov
pop
ja
roll
rolb
push
fnstcw
mov
scas
mov
mov
dec
push
ret
cmp
decl
fiadds
xor
imul
xor
ljmp
sub
mov
ss
pop
sbb
mov
std
sbb
sbb
add
test
ja
cld
sbb
mov
adc
jg
jbe
jo
pop
mov
lahf
xor
repz
and
fsubl
dec
inc
add
addr16
pop
sbb
andl
sbb
daa
dec
dec
hlt
in
cmp
call
push
fsts
xor
xchg
jno
jmp
mov
mov
je
mov
sbbb
mulb
push
inc
iret
jns
fistps
scas
nop
std
mov
movsb
dec
mov
out
test
mov
test
leave
jge
pop
mov
xor
out
xor
int
ja
fcmovnu
sahf
mov
sub
in
push
pop
adc
adc
add
mov
mov
rcrl
add
stc
push
nop
in
in
je
cmp
icebp
push
pop
cwtl
xchg
ror
xor
lret
in
pop
movsl
pop
enter
cmp
dec
lods
jmp
aad
or
jno
test
jno
mov
pop
outsl
sub
jb
xor
lahf
std
inc
stc
and
pop
cmpsl
in
test
in
and
jecxz
or
loop
pop
lea
cld
xchg
or
pusha
repz
dec
xlat
pushf
push
insl
jge
inc
or
pop
shl
filds
pop
mov
shll
jae
xchg
or
and
push
push
add
adc
xlat
bound
dec
pushf
xor
nop
mov
pop
sbb
xor
lods
cmp
imul
in
imul
push
stos
call
stc
ja
pop
or
sub
jmp
mov
dec
sub
or
xor
iret
pop
jmp
rcll
or
dec
dec
add
xor
pop
xlat
push
add
mov
cld
lds
inc
cmp
fbld
aad
sbb
dec
mov
fstl
scas
je
mov
push
mov
push
das
add
xchg
cs
aam
movsb
dec
cld
fs
test
dec
dec
push
fucomp
aad
xor
aaa
pop
xchg
inc
stos
cmp
push
fimull
pop
out
jo
ror
andl
fisubl
or
adc
mov
arpl
xchg
and
mov
xchg
fwait
sub
fsubl
mov
fcoml
sbb
and
dec
push
scas
fmull
es
jg
push
sbb
xchg
aas
push
cli
mov
outsl
sti
adc
clc
outsl
jo
xor
out
cli
stos
addl
mov
cli
cmpsb
push
mov
jnp
gs
mov
test
xchg
in
sub
enter
aam
mov
shrb
xchg
jbe
push
fsubrl
jp
dec
aas
add
rcrl
inc
cwtl
jge
cld
or
push
xor
cs
je
sbb
jecxz
adc
xor
test
fcmove
mov
call
notl
cmpsb
ss
mov
sarb
fbstp
mov
cli
cltd
ret
mov
scas
ljmp
pusha
sbb
adc
jg
adc
push
mov
cmc
hlt
adc
insb
dec
lods
push
mov
adc
and
mov
hlt
xor
fsubrl
call
fidivrl
xlat
dec
xchg
xor
xor
sti
mov
loope
lahf
or
mov
sub
ss
mov
in
pop
xor
cmp
xor
jmp
cwtl
movsl
fwait
roll
repnz
cmp
sbb
or
pop
xchg
or
push
cli
mov
cmp
jle
mov
pushf
outsl
stos
and
dec
xchg
jne
cmp
bound
cmp
clc
jbe
icebp
leave
mov
push
mov
fs
insl
xchg
icebp
push
mov
lret
pop
lods
icebp
je
inc
and
pop
fwait
jg
mov
adc
cltd
push
iret
jbe
sub
ljmp
stos
inc
pop
daa
in
test
inc
mov
jae
cli
or
xor
pop
xor
sbb
push
sar
jmp
scas
lcall
mov
adc
pop
jnp
pop
jb
lret
lods
in
sbb
mov
sbb
popaw
sub
push
sub
das
cmp
cs
icebp
cmp
xlat
jmp
pop
xorl
insb
sahf
mov
mov
jo
ss
dec
lods
sbb
movl
iret
outsl
movl
push
lahf
mov
aam
jns
xor
stos
adc
push
mov
push
jg
dec
xchg
add
ds
sahf
jno
je
mov
adc
fs
jle
mov
iret
dec
xchg
ss
lock
dec
xchg
pushl
cmp
sti
jns
aad
mov
lahf
ja
adc
jg
mov
fcomps
imul
cmp
je
jecxz
jb
icebp
in
dec
stos
repz
or
fstps
outsb
insl
int3
and
cmpsb
mov
test
repz
in
pop
call
test
imul
or
add
adc
add
cmpsl
rcrb
fmull
cli
mov
xchg
roll
aaa
in
push
jmp
pusha
imul
lds
ficoml
or
mov
xchg
arpl
add
sti
jo
dec
sahf
pop
pushf
pop
mov
ret
lcall
sub
lcall
out
inc
push
int3
push
cmpsb
aas
insb
ret
push
push
ja
cmp
jle
dec
fildll
inc
and
push
jmp
mov
pusha
jg
and
mov
dec
cmpsl
dec
xor
mov
add
lea
insb
lahf
push
mov
ljmp
cmpsb
test
push
popf
dec
mov
rolb
ret
mov
int3
sub
pop
inc
movsb
ds
ffreep
jle
push
pushf
xchg
imul
dec
std
lahf
shlb
pop
inc
rorb
insb
iret
les
and
jno
push
jl
pop
pushf
stos
or
jmp
add
dec
pop
jo
addr16
ja
push
push
xor
cwtl
or
fldcw
sbb
mov
stos
data16
push
xor
or
addb
add
pop
lret
sbbb
adc
jmp
dec
pop
lret
push
push
inc
test
filds
fwait
adc
ror
jo
jb
push
js
add
imul
in
iret
in
or
repnz
sti
dec
aas
iret
pusha
insl
rclb
icebp
inc
sub
cmp
jno
pop
cmp
clc
imul
mov
xor
or
scas
or
je
dec
orb
pop
pushf
cs
jbe
push
jl
xchg
test
jecxz
sub
and
test
inc
mov
push
jle
loope
inc
out
ret
add
fdivs
scas
dec
sub
test
rol
jno
scas
add
jmp
stos
cmp
loopne
inc
lods
arpl
aaa
ficompl
dec
stos
mov
lcall
nop
inc
or
loope
insl
or
lds
pop
cli
dec
xor
lret
and
out
sbbl
sbb
inc
cmp
out
orl
shr
sbb
sub
fisubrs
mov
push
imul
std
and
xchg
stos
pop
pop
shrl
stos
aad
jl
shl
cmp
fmul
out
sbb
sub
sbb
mov
ljmp
jmp
ficoml
xor
testl
sbb
pop
adc
sub
movsl
aam
pop
in
inc
outsl
mov
sarb
mov
jecxz
je
imul
cltd
mov
sbb
ret
out
out
loopne
cmp
mov
sti
ret
push
lea
in
mov
lock
imulb
das
push
orl
push
rolb
stos
pusha
hlt
push
mov
stc
aas
lds
jp
mov
sti
mov
stos
idiv
xchg
je
bound
xchg
cltd
push
out
call
mov
icebp
fsubs
in
fsubl
pop
or
mov
test
mov
or
imul
jle
mov
mov
popf
imul
lcall
dec
cmpsl
sbb
fstl
and
movsl
xor
or
ds
mov
jb
mov
outsl
mov
sbb
and
in
pop
pop
les
cmpsl
jns
xchg
js
xchg
mov
scas
xor
dec
ret
lds
cmpsl
sti
inc
pop
inc
or
jp
ja
push
push
xor
arpl
shrb
into
das
push
cld
and
sbb
and
outsl
out
out
sbbl
xchg
mov
loopne
out
xlat
mov
lods
jns
pop
xchg
mov
out
aam
xchg
sub
jb
push
cmp
fdivrs
jle
out
dec
test
rorb
jb
imul
cmp
push
sub
ja
xor
sub
adc
sub
in
gs
out
mov
xchg
movsb
icebp
fstpt
fs
in
add
or
insl
lret
mov
mulb
outsl
pusha
int3
lret
dec
dec
pop
dec
inc
push
or
jae
push
fdivl
cmpb
insl
push
out
lret
outsl
lahf
imul
add
ja
jno
stc
pop
adc
insb
mov
mov
pop
loop
add
movb
aas
adc
pop
in
daa
insb
or
orb
aad
dec
mov
jge
sti
sti
push
mov
sahf
inc
ficoml
clc
mov
xchg
xor
cmp
mov
push
inc
je
cmp
xchg
and
add
sbb
into
add
sti
les
add
cmpsl
and
in
push
in
lahf
pushf
clc
push
add
xadd
mov
outsl
fnsave
xor
outsb
mov
adc
pop
mov
lcall
cltd
aas
add
pop
mov
inc
mov
sahf
lret
xlat
loope
paddq
mov
jmp
xor
xor
nop
xchg
jo
push
pop
push
aaa
fcomps
inc
lret
insl
call
sbb
sub
sub
push
mov
mov
or
in
mov
lcall
int
sbb
adc
sbb
fistl
cmp
fwait
or
cmp
data16
dec
inc
mov
cmp
pop
dec
sub
inc
cmp
lds
in
stos
fsubrl
jnp
das
popl
into
xor
icebp
mov
fwait
mov
pop
sahf
sub
daa
cmp
sbb
pop
mov
jne
xchg
lret
jp
mov
add
or
push
jle
enter
mov
clc
push
mov
mov
mov
adc
ds
xchg
mov
push
mov
mov
shll
jecxz
push
mov
movsl
fists
or
cmpsl
mov
insb
push
and
jo
pop
lea
push
enter
hlt
xchg
dec
push
scas
cmp
xchg
repz
insl
imul
pop
sbb
sub
cmp
js
out
in
sub
loop
pop
jp
jge
pusha
arpl
test
test
or
push
cmp
sti
stc
cli
sbb
mov
jp
inc
cs
aad
ljmp
mov
out
ja
sbb
cwtl
loop
push
jmp
subb
sti
or
cmp
lret
inc
test
in
lods
mov
mov
mov
adc
les
cmpsb
and
fidivl
out
sbb
mov
jae
aam
rorw
and
push
movsb
outsl
xchg
cmp
cmc
inc
rolb
sub
inc
and
sub
xor
adc
test
or
loop
bound
jle
movsl
ja
stc
out
cmp
or
ds
clc
subl
daa
jle
xchg
call
dec
fdivr
lahf
ror
xor
mov
mov
stos
mov
rorl
xchg
out
cmp
pop
and
into
not
bound
mov
or
mov
mov
xchg
xchg
rorb
jg
mov
and
in
xchg
jae
mov
cmp
jmp
jbe
loopne,pn
inc
or
repnz
test
mov
inc
lods
and
loopne
cwtl
and
push
pop
mov
pop
lods
push
sub
sub
jecxz
add
jmp
push
push
es
sbbl
outsb
jp
pop
std
dec
js
inc
aaa
adc
leave
adc
xchg
and
cmp
lret
test
popa
xor
pop
mov
mov
push
add
inc
je
pop
mov
jg
add
sti
jbe
cmp
repz
and
stos
loopne
pop
in
js
xchg
fnstcw
out
mov
jge
mov
mov
inc
mov
inc
jbe
inc
cmpb
xchg
push
jecxz
mov
and
cld
xchg
shll
inc
das
jns
xchg
imul
aad
add
and
jge,pt
xor
mov
lods
mov
push
imul
popf
outsb
lahf
mov
insb
inc
outsb
or
adc
sti
jo
mov
jg
mov
std
sbb
js
cmp
movsb
lock
lods
lods
pop
sbb
jle
mov
ror
out
mov
movsl
pop
js
mov
sub
sbb
mov
add
shlb
int
xor
xchg
fistps
dec
stos
popf
sbb
nop
outsb
test
mov
jl
test
lcall
cli
pop
and
or
or
test
outsb
cli
cs
jle
aas
inc
cmpsb
js
or
imul
std
dec
mov
fbld
ss
xor
rcrb
shl
fsubrs
addr16
xor
fsts
fldcw
push
sub
mov
dec
icebp
insl
sti
stc
insl
stos
rcrl
mov
or
mov
cmp
sub
adc
test
mov
pop
lret
xchg
mov
adc
ds
mov
fisubrl
add
sub
mov
pop
xor
and
jge
inc
ret
jae
hlt
and
xor
outsb
xchg
stos
mov
sbb
inc
ljmp
adc
sbb
decl
xchg
dec
test
push
test
pushf
jle
imul
add
shrb
in
sub
insl
mov
pop
and
mov
mov
cltd
das
jae
mov
mov
xor
or
dec
ss
adc
cmovns
sub
mov
test
ret
loop
pop
jo
ja
xchg
adc
in
outsl
inc
lock
int3
mov
sbb
lea
jns
cmpb
inc
pop
loopne
or
ljmp
pop
and
aam
mov
iret
add
mov
pusha
pop
in
mov
js
outsl
bound
lret
loope
iret
sub
mov
or
adc
movsl
pop
push
xor
lods
or
test
cld
cmpsb
xchg
rol
jmp
js
aaa
dec
mov
outsb
jl
incl
cmpsb
or
mov
mov
fsubl
push
mov
fnstcw
dec
test
xor
rclb
xchg
or
jmp
outsl
shll
xor
xor
rcl
int
mov
fs
pop
push
sub
shll
lcall
dec
cld
sahf
mov
cmc
push
cli
adc
jp
imul
add
sbb
pop
push
adc
and
lcall
test
ret
push
movsb
or
pop
subl
sub
adc
inc
jecxz
outsl
cmp
in
fnstcw
adc
fdivrs
xchg
fidivrs
sbb
fwait
add
lock
cwtl
stc
aam
or
cmp
insb
dec
add
xchg
mov
mov
cwtl
fdivrp
clc
add
test
sbb
adc
sub
adc
repz
int3
lods
dec
and
rcrb
and
fdivrs
and
stos
xorb
aas
jecxz
xlat
mov
pop
sbb
mov
cmpsl
mov
jg
dec
arpl
lea
xlat
jg
insl
sbb
lds
mov
stos
jns
ret
pop
data16
sbb
sub
pop
or
and
sti
mov
mov
in
mov
mov
loop
mulb
test
pushf
shrl
push
mov
jae
icebp
cmp
inc
or
jp
push
bound
add
icebp
cmp
ss
rorl
mov
jp
enter
aaa
push
jmp
js
xor
sbb
subl
dec
pop
add
jns
lods
insb
add
and
xor
cmp
stc
xchg
bound
aas
subb
sahf
sbb
fidivrs
sub
fmull
jae
adc
sbb
test
sub
jns
cmp
in
lds
aad
push
enter
mov
icebp
push
lds
lds
mov
jno
cmpsb
ljmp
cmp
and
push
clc
leave
jae
jmp
fdivrl
jle
ljmp
xor
pop
dec
repz
das
int3
inc
daa
or
dec
add
fnsave
sbb
mov
mov
in
out
daa
cs
push
xchg
sub
insl
les
test
push
lods
scas
out
xchg
or
xchg
into
insl
loopne
lods
sarb
push
gs
xchg
push
andl
inc
pusha
jnp
clc
lea
dec
lret
and
and
inc
mov
ret
test
mov
cmp
mov
xchg
sar
xor
jb
es
popf
xor
pushl
add
and
icebp
ret
ljmp
sub
cli
jecxz
xchg
aad
movsb
enter
xor
xor
push
sbb
stos
xor
cltd
inc
dec
cmp
sbb
push
push
push
ss
fstpt
pop
mov
fwait
cltd
int
cmp
adc
and
rcll
pop
sbb
and
inc
cltd
mov
das
mov
mov
aaa
loope
jl
inc
insl
into
stos
xorl
addr16
jmp
int3
mov
out
addr16
mov
push
fwait
xor
dec
inc
cmp
and
jecxz
out
xor
enter
inc
xchg
das
pop
mov
adc
test
xchg
mov
jbe
add
sbb
imul
or
bound
sub
jbe
dec
aad
push
jno
jmp
aad
outsb
cmp
pop
jle
stos
push
push
fcoms
pusha
in
mov
push
mov
pusha
dec
clc
test
mov
mov
out
rcll
fdivrp
ret
mov
mov
lods
in
xchg
jmp
jbe
sbb
fdivrs
call
fcmove
jbe
mov
out
shl
pop
frstor
dec
dec
mov
fists
aaa
repz
int
scas
scas
cltd
and
lods
imul
icebp
adc
pop
idivl
pop
rorl
dec
sbb
sub
sbb
je
cld
push
add
lret
scas
mov
mov
push
xchg
testl
in
push
cmp
sub
jg
or
pop
out
out
mov
mov
mov
sub
aas
gs
sub
js
inc
lea
mov
jbe
dec
mov
into
dec
fistpll
popf
orl
sub
pop
popa
cmp
pop
pop
in
mov
dec
ret
aam
out
popf
popl
cs
and
in
sub
andl
dec
in
sub
push
cli
push
cmpsl
ret
aaa
mov
stos
stc
mov
incb
insb
mov
jnp
inc
mov
adc
inc
inc
and
xchg
fistpl
mov
icebp
rcl
adc
outsl
ljmp
mov
test
lds
dec
jns
adc
cmp
cmpsb
repnz
test
push
mov
dec
outsl
lock
loope
int3
sub
adc
hlt
mov
aas
insb
test
sub
fdiv
cmp
jb
adc
lods
movsl
rclb
push
inc
loope
popf
sub
dec
adc
mov
mov
inc
xchg
scas
xchg
orb
pushf
push
mov
lea
mov
sub
inc
xor
xchg
repz
adc
sbb
push
lret
scas
pop
out
jp
adcb
sti
int3
addr16
sti
cmp
mov
pop
dec
sub
jns
stos
pop
out
popf
fists
imul
mov
mov
aam
sub
mov
popa
test
mov
pop
movsb
cli
fldcw
test
push
add
mov
push
adc
mov
push
dec
xchg
xor
xchg
shll
jmp
adc
movsl
push
ja
sar
jnp
sbbl
mov
sti
repz
fstpl
les
mov
std
lods
cmp
xchg
push
push
xchg
cmp
stos
out
inc
arpl
gs
fsubl
ret
and
xor
or
xor
outsl
dec
clc
mov
cmp
jle
push
scas
xchg
jl
mov
test
push
lea
sar
adc
jecxz
xchg
idiv
inc
xchg
push
rcpps
pop
or
mov
dec
imul
rclb
aas
adc
sbb
addl
enter
xor
cmp
dec
in
xchg
jbe
lret
cmp
cmp
call
lock
gs
pop
add
dec
aam
rorl
pop
jp
adc
pushw
imul
sbb
or
cmp
aam
add
fiaddl
pop
sti
or
es
mov
sub
add
dec
sub
pop
pop
nop
pop
nop
imul
hlt
repnz
xchg
dec
xchg
push
sbb
cmp
pop
mov
popa
fisttps
adc
add
jl
mov
sbb
mov
mov
mov
xchg
aaa
jo
gs
add
and
cmpsl
jnp
mov
fs
mov
in
scas
movsl
jmp
outsl
jns
int
or
lds
jle
adc
jbe
ficoml
sbb
xchg
and
dec
add
data16
pushf
dec
out
mov
test
movsl
inc
dec
inc
sbb
cld
out
xchg
or
enter
mov
add
arpl
push
js
stos
mov
adc
loop
push
dec
mov
mov
mov
in
pop
daa
inc
push
out
dec
fists
test
hlt
jno
add
or
pop
push
sub
ss
les
je
xchg
push
mov
outsl
out
std
sub
int3
xchg
roll
lahf
icebp
or
das
mov
xchg
out
xor
lret
std
test
sbb
jne
jg
pop
mov
jecxz
sbb
adc
sbb
push
cmp
or
dec
outsl
cld
iret
or
inc
jecxz
push
xor
inc
nop
das
repnz
mov
test
xlat
xchg
cli
testb
gs
loop
icebp
xor
arpl
xchg
mov
hlt
test
and
in
rclb
mov
sbb
std
ja
inc
es
push
rcrl
push
addr16
adc
fldt
cmpb
sbb
add
add
or
in
das
fbld
xchg
rcr
inc
adc
out
fadd
pop
imul
pop
ss
fidivs
mov
jmp
add
sbbb
inc
aaa
pop
popa
cmc
das
pop
xchg
lret
and
push
and
imulb
ret
cmp
test
jmp
call
rcll
sub
nop
push
sub
insb
inc
insb
sub
add
add
cmc
loopne
popf
cmp
mov
adc
pusha
stos
subb
fildl
call
sbb
movsb
push
lods
mov
adc
dec
cmpsl
sub
ficoml
inc
lods
sub
rorl
rorl
mov
cmp
cmp
das
xchg
call
mov
movsb
nop
fs
std
mov
nop
out
xor
lds
cmp
inc
sub
cmp
xor
mov
popw
cmpsl
xlat
push
aaa
icebp
xchg
xor
stc
sub
cmp
jb
cmpsb
sub
pushfw
mov
scas
iret
negl
push
xchg
and
and
or
cmpsl
dec
jo
out
push
repz
sbb
filds
jbe
pop
xchg
loopne
lods
sub
add
ja
mov
out
int
stos
inc
adc
mov
outsl
push
leave
cmp
icebp
mov
push
sti
jb
andl
movsb
and
iret
sahf
loopne
pop
in
push
dec
or
stc
sti
inc
popf
mov
daa
clc
jl
mov
fs
scas
imul
add
lea
xchg
xchg
fsub
mov
mov
mov
in
iret
imul
push
jae
les
mov
movb
mov
or
fidivl
push
and
inc
je
test
pop
cwtl
sbb
mov
push
dec
pop
jo
out
mov
lods
or
cmp
hlt
call
or
sbb
sbb
jge
lds
cmp
pop
push
jg
enter
ljmp
add
out
mov
imul
xchg
mov
fnsave
stos
iret
inc
xchg
cltd
mov
es
mov
jmp
jge
inc
loope
test
mov
out
adc
ret
lods
sub
xor
cmp
dec
cli
or
mov
das
inc
in
mov
dec
scas
pop
cmp
das
xchg
jno
aaa
push
sbb
hlt
inc
inc
push
mov
add
in
xor
jae
or
pop
fsubs
clc
sti
adc
dec
mov
cmp
sbb
adc
out
sbb
out
jb
pop
sbb
xchg
insb
lret
xchg
mov
or
push
movsb
add
mov
add
roll
cwtl
into
and
adc
dec
in
test
aam
sahf
cmp
mov
ds
imul
in
pop
icebp
cmp
jae
xchg
push
cmp
add
mov
xchg
inc
fstps
roll
int3
and
push
pop
bound
pop
insb
push
sub
jnp
mov
add
cmp
mov
neg
dec
ljmp
stos
fistpll
lea
or
mov
fisttpll
sub
out
andb
inc
test
lods
dec
xlat
fcomps
leave
jns
sub
pop
lds
jae
push
fcomps
fwait
rcl
or
ss
jns
in
ss
mov
scas
pop
adc
xor
cmp
sub
dec
mov
sub
or
mov
test
int
xorb
divl
cmpsb
jg
rcrb
mov
test
inc
xsaveopt
mov
movsl
loope
dec
pop
jo
or
in
or
add
cltd
mov
cli
mov
sti
in
testb
jge
mov
repnz
xor
call
stos
jle
mov
jp
jnp
in
push
mov
jns
sub
fs
mov
aaa
sbb
pop
and
cs
xchg
push
fildll
in
push
stos
frstor
inc
xchg
inc
cmp
xor
arpl
lods
add
xchg
in
iret
scas
dec
loop
pop
adc
dec
pushf
lock
andl
or
lahf
call
jns
add
pop
out
mov
inc
sbb
fwait
in
testb
dec
cld
jo
push
xorb
jl
xchg
fidivrs
call
sub
ss
insl
add
push
mov
inc
push
sbb
out
bound
pop
mov
or
add
and
xor
outsb
mov
mov
std
xchg
cld
decb
mov
dec
pushf
out
int3
in
cltd
jl
sbb
stos
inc
xlat
aam
fbld
xor
cmc
inc
jmp
ret
or
add
shrb
dec
mov
or
inc
and
dec
stc
cmp
or
daa
add
fldenv
repnz
rclb
jecxz
iret
movsl
pushf
pop
fnstenv
mov
jmp
jo
mov
mov
push
cmp
inc
mov
ljmp
test
mov
scas
pop
ljmp
cli
jge
xchg
movsb
cmp
addr16
ljmp
mov
add
cld
aaa
fldcw
fcoml
pop
rorl
call
les
in
in
test
icebp
pop
cmpsb
test
dec
scas
dec
mov
fnsave
test
shll
xor
push
pop
adc
in
cmp
shlb
jge,pt
scas
push
cmpsl
flds
jo
sbb
mov
lret
fs
cmpsb
jmp
push
insl
pushf
fcompl
jmp
or
popaw
out
ret
push
test
or
mov
mov
inc
pop
dec
lods
andl
sbb
jns
stos
jmp
mov
inc
and
mov
and
cltd
mov
dec
lods
cmp
cmpsb
inc
fidivrs
insb
push
and
imul
je
insl
push
xchg
mov
mov
cmpsl
int3
nop
mov
cmpsl
pop
stc
inc
in
fmull
lcall
jae
out
dec
cmpsb
outsb
ja
adc
rcl
ret
arpl
sub
pop
jl
ja
pop
adc
or
or
fnsave
daa
in
cmpb
movl
cmp
lret
ficomps
aad
imul
enter
out
inc
bound
sub
iret
lock
sbb
mov
mov
inc
pop
rcll
inc
xchg
pop
mov
test
fcmovnb
and
in
fs
aas
and
add
inc
rolb
ljmp
inc
add
or
mov
sbb
cmpsl
in
cmp
cmpsl
push
mov
and
jmp
jge
call
xchg
insl
xchg
adc
cmp
sbb
les
xlat
loope
cs
xchg
fstpl
inc
sbb
xor
out
push
jmp
imul
inc
xchg
lock
push
mov
cwtl
lock
pop
ss
aam
repz
mov
sbb
aad
jno
xor
xchg
inc
sub
adc
out
push
cmp
mov
orl
mov
ss
cmp
push
addb
shll
ficoml
and
sbb
push
inc
mov
pop
xlat
sub
fidivrl
dec
in
jge
int
mov
mov
clc
sub
ret
imul
push
lret
call
mov
sbb
pop
mov
sub
push
aas
outsb
and
jae
cs
pop
pop
repz
repnz
bnd
and
jg
pop
test
pusha
mov
out
mov
test
fists
lahf
push
pop
call
mov
arpl
mov
add
das
out
les
test
sub
push
test
cltd
ret
aam
out
and
push
xchg
fldenv
or
sbb
es
xor
lret
sarl
fmuls
sub
arpl
sti
inc
imul
in
push
fdivrl
sub
call
pop
add
push
or
cmp
dec
xlat
sar
out
loope
pop
cmp
sbb
inc
dec
test
in
mov
and
pop
lds
aaa
adc
mov
sub
jne
jns
insl
fldcw
mov
xlat
pushf
and
push
push
xchg
add
jns
iret
mov
mov
sbb
dec
push
push
inc
call
adc
je
mov
lds
inc
or
imul
mov
pop
sbb
shll
aas
and
out
sub
test
mov
sub
shrb
cmp
int3
adc
lods
lret
inc
mov
xchg
loop
dec
roll
push
cs
sbb
stos
ja
mov
loop
sti
mov
cltd
or
pushl
push
imul
in
xchg
sub
jmp
xor
or
mov
out
repz
arpl
sub
dec
test
aad
enter
lcall
cmp
or
inc
push
decl
xchg
sti
xor
addb
pusha
shll
scas
ret
cld
popa
push
adc
xchg
jno
js
cld
cmp
mov
mov
push
hlt
popl
mov
mov
jno
jo
into
testl
inc
push
jmp
leave
inc
inc
mov
xchg
scas
insb
cli
nop
xchg
subl
xchg
jo
in
js
push
pop
and
sti
jle
es
jb
mov
push
call
call
dec
mov
adc
lds
adc
fwait
lcall
je
pop
fwait
and
jb
mov
fucomp
push
lcall
jb
jp
xchg
mov
push
loope
inc
test
pop
push
xchg
sbb
lods
cltd
pushf
push
jp
repnz
jne
xchg
jp
jno
sbb
cmp
sbb
mov
aad
popa
or
add
mov
jg
or
mov
leave
lret
repnz
ljmp
dec
sbb
aad
dec
push
mov
ds
iret
or
aam
enter
sub
adc
adc
lret
adc
jno
lds
fists
mov
scas
push
int3
pop
scas
sbb
data16
sahf
or
jecxz
mov
lea
push
aam
or
xchg
mov
imul
movsl
jne
xlat
mov
pop
xor
mov
sbb
push
xor
out
jae
cli
addr16
sbb
mov
or
roll
aad
sbb
mov
stos
stos
xchg
jnp
aam
out
es
adc
add
mov
or
je
push
mov
lret
clc
ljmp
arpl
test
jno
adc
scas
mov
xchg
inc
cmpl
adcb
sub
xchg
xchg
sbb
cmpsl
and
push
insl
adc
movsb
jnp
mov
xchg
sub
pop
outsb
inc
adc
rcrl
mov
add
push
pop
cltd
scas
inc
and
or
xchg
stos
lret
cmp
stc
add
loop
xor
pop
or
scas
iret
inc
idivl
movsl
loop
repnz
lahf
inc
pop
loop
loop
sarl
pop
imul
sbb
fidivrl
jae
dec
inc
xchg
in
pop
jne
inc
mov
dec
push
in
sbb
movb
lods
xchg
js
and
fldt
shlb
inc
inc
es
imul
out
inc
add
pop
lods
hlt
mov
mov
xchg
mov
push
pop
cmp
aam
push
pop
fmull
icebp
mov
repnz
mov
dec
pop
jl
out
xchg
xchg
ja
ret
inc
push
inc
in
add
das
mov
rcll
jg
and
je
dec
mov
jb
mov
inc
mov
mov
inc
es
pop
out
and
pop
insb
add
in
push
call
xlat
push
testl
out
xor
mov
mov
inc
out
pop
mov
fdivrl
adc
fcoms
inc
insl
out
push
call
int3
cmp
lea
pop
in
xchg
xchg
mov
dec
daa
cmpsl
daa
stos
test
or
add
decb
or
mov
adc
mov
push
xchg
arpl
inc
xchg
pop
hlt
call
pop
mov
dec
pop
xchg
out
mov
aad
or
pop
les
inc
jle
adc
sahf
mov
adc
cs
repz
ja
out
es
mov
dec
mov
mov
rclb
rclb
das
push
cltd
pushf
cld
in
and
pop
jno
and
fdivrs
icebp
mov
xor
pop
xchg
xchg
movsl
mov
xor
push
aas
addr16
mov
fcompl
cld
mov
sahf
xchg
mov
ret
repnz
cmp
mov
xchg
ljmp
leave
inc
imul
push
jno
insl
push
xlat
sbb
cmpsl
les
clc
movsb
fsubl
fsubs
xlat
xor
jne
stc
lea
or
arpl
ret
sbb
data16
xchg
xchg
mov
mov
push
dec
scas
and
mov
std
push
out
ds
xorl
lret
mov
adc
jne
push
cmp
inc
xchg
xchg
xlat
outsb
jecxz
outsl
notl
dec
arpl
jb
pop
jge
mov
ja
imul
loope
mov
insl
fstl
rclb
aad
mov
das
dec
pextrw
and
rol
scas
aas
push
add
jl
int3
mov
daa
add
cld
mov
or
ret
mov
mov
ret
jne
or
lds
dec
ret
sub
or
movsl
mov
out
mov
mov
cmp
bound
loopne
pushf
mov
popf
sub
iret
addr16
mov
popf
xchg
flds
mov
outsl
push
add
loope
mov
jbe
iret
cmp
jno
mov
pushf
sarl
mov
rep
mov
push
lock
pop
sbbl
mov
add
iret
inc
or
sbb
or
xor
ds
mov
jle
sbb
das
mov
cs
mov
fistpll
cmpsb
and
out
mov
inc
mov
inc
lret
xor
cmc
lret
ss
ds
jno
xlat
sti
push
inc
push
cld
or
loop
jae
sub
or
cmp
xchg
aas
mov
xorb
inc
arpl
ds
adc
repnz
mov
inc
add
enter
cmpsb
push
push
mov
in
xchg
xlat
shrb
or
sbb
or
testb
jp
pop
pushf
fstpl
or
jne
repnz
jle
ret
sub
adcl
call
add
jge
cvtdq2ps
xchg
cmpsl
pop
cs
dec
mov
adc
sti
dec
stc
fnstenv
or
mov
inc
xchg
popa
mov
mov
xchg
sub
leave
pop
outsl
in
int3
loopne
aam
mov
popl
sbb
xor
mov
jmp
pop
add
insl
and
int3
rcr
stos
ret
sbb
sub
dec
dec
sub
dec
cmp
jg
adc
scas
push
popf
add
in
popf
mov
insb
test
jle
sub
addr16
push
arpl
mov
scas
mov
das
imul
mov
scas
mov
adc
ficomps
incl
mov
mov
xchg
push
mov
pop
repz
inc
mov
dec
inc
scas
lahf
icebp
insl
int
outsl
pusha
shrb
in
xor
mov
lds
in
mov
mov
adc
sub
dec
pop
icebp
pop
mov
mov
addr16
mov
je
fiadds
xchg
fstl
dec
mov
int
and
imul
ret
lds
or
jne
lods
and
decl
jne
pop
out
and
insl
scas
jl
cmp
in
lret
dec
pop
push
insb
fistpl
fwait
int
js
cli
push
xchg
aas
push
test
scas
add
in
or
and
gs
gs
shl
mov
sbb
sbb
stc
icebp
ret
pop
mov
mov
ret
pop
push
cmp
sbb
push
mov
cmp
xchg
mov
xchg
adc
add
mov
cmp
mov
lds
pop
xor
xchg
adc
lahf
out
movsb
out
jmp
test
sarb
stos
pop
xor
mov
cmp
pop
mov
mov
mov
leave
cmp
inc
pop
daa
cmpsb
or
in
setb
cs
clc
icebp
outsl
les
popl
stos
push
xchg
repz
lods
mov
lods
xor
lcall
push
inc
inc
inc
call
addr16
stos
fdivr
adc
pop
sbbl
jp
iret
daa
xchg
repnz
fdivrl
mov
in
adc
ja
mov
cmc
loopne
sbb
lock
stos
loope
repnz
aas
loopne
mov
lock
sub
inc
jge
sarl
ret
out
pop
in
mov
inc
mov
ret
mov
js
and
inc
or
outsb
push
cmp
mov
test
cmpsb
popf
imul
test
push
sbb
loopne
mov
lea
int3
sub
imul
imul
cmpsb
popa
mov
ss
push
dec
out
sub
lret
cmc
loope
or
sbb
cmp
imul
fs
out
add
push
loop
xor
and
sarb
pop
and
std
dec
cs
mov
cwtl
mov
jg
pop
mov
pusha
cmp
or
fidivrs
push
push
lret
fnstenv
inc
lock
js
pushf
test
and
cmpsb
mov
push
xor
cmc
cmc
push
or
inc
arpl
xchg
add
cmp
push
je
mov
mov
jne,pn
mov
mull
ljmp
lret
cmp
or
mov
inc
out
imul
in
mov
dec
inc
mov
dec
xchg
lods
mov
ja
add
cmp
mov
inc
or
lea
loopne
mov
adc
int
jb
add
leave
pushf
xlat
jne
sbbb
xor
or
ret
movsb
je
arpl
pop
adc
xchg
insb
fcmove
xlat
jmp
sbb
outsb
lds
xlat
add
int
jbe
push
call
mov
or
lds
outsl
push
cmpsl
bound
aaa
cmp
push
sub
lods
mov
mov
ret
mov
or
orl
bound
data16
and
push
aaa
es
pop
mov
les
xlat
divl
inc
jae
shl
jmp
std
fwait
mov
cltd
lock
push
rol
outsl
lret
push
dec
imul
ret
insl
push
jmp
mov
adc
hlt
lods
aad
leave
xchg
rcl
xchg
enter
nop
scas
pushf
xchg
or
gs
cmp
or
in
xlat
lea
xchg
jecxz
leave
les
mov
stos
sub
push
or
out
mov
imul
ds
subl
gs
dec
and
sub
stos
jge
int3
push
xor
ret
lea
stos
movsl
lods
pop
fwait
ja
daa
lret
mov
sub
or
in
pushl
in
shr
adc
lods
mov
or
shll
fisubl
flds
xor
xchg
mov
xchg
jns
push
jo
add
cmpsb
stc
lods
xchg
rorl
mov
mov
adc
mov
mov
add
mov
adc
push
xchg
stos
insl
repnz
stc
jno
jnp
or
pop
xchg
pop
mov
nop
in
dec
std
sbb
mov
mov
popf
ljmp
out
roll
adc
movsb
test
test
xor
add
or
mov
imul
mov
xchg
out
push
jbe,pn
or
xchg
nop
repnz
data16
in
mov
incb
jmp
test
dec
insb
sub
cmp
ret
rorl
pop
add
rcll
adc
mov
orl
dec
in
leave
rcrl
movsl
lret
mov
in
stos
mov
xlat
ret
pushf
fcmovne
call
pop
xchg
ficoml
sbb
and
lret
or
mov
add
or
sub
inc
mov
mov
jl
cmp
adc
inc
push
push
inc
xor
mov
iret
push
lea
test
mov
pop
jge
fcmovne
loop
leave
cmp
mov
jmp
mov
xor
ret
xor
lods
mov
jp
or
jns
dec
in
out
dec
cs
mov
inc
push
ret
add
and
xchg
lods
test
pop
mov
jbe
cmp
jne
les
sub
cld
dec
in
jl
pushf
inc
loopne
pop
pop
sar
aad
data16
dec
add
fnstenv
lahf
cmp
ret
faddl
ret
jp
xchg
fcoms
inc
lcall
andl
stos
popf
cmp
adc
dec
fstp
scas
enter
push
inc
jno
testb
mov
inc
aaa
jp
scas
dec
dec
movsl
or
bound
add
popa
xchg
daa
or
jl
int3
add
pop
mov
mov
dec
sbb
daa
int
push
das
adc
lods
movsl
ret
loopne
divb
lret
inc
inc
push
fs
adc
out
mov
scas
out
pusha
aas
adcb
mov
adc
stos
jmp
mov
bnd
sahf
push
adc
add
and
pushf
jle
pop
scas
out
cmp
loop
sbb
pushf
fdivr
dec
loop
push
sbb
cmp
test
das
nop
pop
out
decl
daa
xchg
jae
hlt
xchg
sbb
cmp
xchg
adc
data16
out
mov
or
or
pop
push
pusha
push
lock
lock
mov
sti
inc
dec
and
lret
out
stc
xor
xorl
pop
bound
inc
fisubs
mov
pop
bound
jb
mov
daa
outsb
jae
or
mov
test
push
popa
jnp
jmp
xor
push
jb
rclb
jne
popf
out
sbb
dec
mov
and
dec
or
inc
daa
cmpsl
loope
fscale
lock
adc
mov
push
xchg
fldt
fmull
xor
fdivrs
nop
out
dec
xor
movsb
sub
pop
xchg
fimull
jp
scas
sub
jg
ja
dec
jl
js
pop
push
repnz
ror
xor
push
psubsb
loope
and
sub
addr16
popf
add
das
outsb
add
in
mov
adcl
and
adc
sub
mov
xchg
out
xor
sub
div
pop
pop
in
in
dec
movsl
fsubrs
jge
sbb
push
sbb
and
enter
in
adc
mov
push
sub
rcll
mov
lods
or
jecxz
and
push
jns
sbb
jne
rcr
mov
cmp
lea
jge
mov
add
cmpsl
jbe
out
pop
dec
in
scas
aaa
inc
int
pop
jae
jg
lret
js
out
push
repnz
fs
cmpsb
cmp
xchg
push
and
imul
popf
xchg
jnp
lds
cmp
pop
insl
push
pop
flds
sub
loope
sub
push
shl
dec
addr16
lret
sub
mov
enter
jmp
pop
insb
mov
sbb
mov
cs
ret
dec
inc
inc
popl
imul
cltd
or
dec
jg
cld
add
xor
mov
fiadds
out
ret
push
stos
lods
adc
inc
mov
loop
jns
jp
outsb
nop
xchg
int3
pushf
dec
pop
outsl
push
jnp
loop
fs
call
jl
out
push
cmp
sub
loop
sbbb
jno
mov
inc
xor
sbb
pop
out
or
je
pusha
ljmp
xchg
in
sar
and
sub
push
clc
repnz
in
iret
test
call
sub
sti
xorb
xor
stos
stos
inc
scas
enter
xlat
jnp
sbb
jg
leave
loop
add
xchg
jbe
pusha
enter
bnd
jno
xchg
sbb
icebp
in
dec
lods
cmp
aam
sbb
cld
ja
cmp
xor
sbbl
xchg
jle
push
int
in
adcb
ds
mov
popf
lcall
jnp
push
mov
inc
repz
cmp
jo
sub
xchg
cmpsl
lret
sbb
sbb
mov
cmpsb
mov
cmpsb
out
push
mov
xorl
daa
or
cmp
add
jmp
jae
or
addr16
iret
repz
test
es
pop
sbb
pushf
cmp
jge
stc
scas
pop
addr16
or
ljmp
cs
addr16
out
lret
and
push
loop
mov
cmp
mov
cmp
push
sub
shr
xchg
pop
push
ret
adc
mov
mov
sub
mov
mov
rorl
and
cs
xor
or
scas
sub
xor
add
lods
sbb
scas
out
imul
fistpll
push
jl
test
mov
xchg
ret
in
or
xchg
inc
sub
xchg
cmpsl
add
les
shr
jns
out
js
stc
jecxz
in
sti
cmc
xchg
and
mov
pop
loop
shlb
cmpb
cmp
outsl
mov
lods
cmp
jge
out
sub
ror
lods
push
stc
pusha
stc
jno
mov
out
icebp
jle
sub
adc
repz
xchg
adc
or
rclb
jmp
mov
jp
xchg
mov
pop
je
lods
and
xor
call
push
ud1
in
movsb
cltd
bound
aam
adc
adc
cs
jbe
pop
add
scas
loopne
cmpsl
xor
and
ja
jae
pop
imul
sarl
cmp
mov
pop
xor
notb
xchg
ds
cwtl
or
mov
shrb
sub
repz
cld
fdivp
rclb
arpl
aad
xor
pop
push
popa
cmpsb
pop
pop
out
adc
aas
cli
cmpsl
rcr
leave
xor
out
mov
sbb
ja
push
ret
mov
or
cmpsb
sbb
xchg
xor
ds
stc
xchg
in
sahf
xor
dec
out
lods
dec
rcrl
outsb
ljmp
inc
negb
sub
sbb
push
sub
pop
mov
repz
mov
lock
mov
push
inc
aad
js
aaa
jbe
scas
pop
cmc
inc
and
sub
imul
pusha
fucom
or
arpl
loope
fdivrp
test
add
movsb
jne
pop
es
sbb
je
push
data16
ja
imull
dec
bound
pop
and
mov
cmpsb
sub
pop
adc
mov
push
xchg
xchg
fsts
repz
jns
pop
stos
lods
sub
dec
sbb
fs
mov
mov
mov
inc
popf
int3
cli
xor
jno
pop
shll
mov
out
and
icebp
lock
sbb
js
xchg
std
sub
vmaxsd
enter
xor
xor
jg
inc
push
lock
std
mov
pop
in
outsl
out
and
mov
xor
mov
out
shufps
dec
xchg
lcall
test
add
cmpsb
push
scas
jbe
inc
pop
fnstcw
or
sub
lods
stc
mov
xor
xchg
jg
mov
or
pop
fldl
testl
mov
jnp
stc
mov
pusha
lods
pop
jmp
jne
mov
pushw
jge
iret
addr16
fdivrs
mov
sub
xor
std
cltd
js
lock
xchg
mov
shl
cmp
les
jo
mov
pop
lcall
in
outsl
cltd
es
fidivl
and
mov
xchg
mov
inc
incl
inc
xor
or
shll
icebp
out
int
fcomip
lcall
fcoml
scas
int
cli
cmp
popf
sub
mov
xor
mov
fscale
scas
pop
inc
pop
jo
pop
mov
stc
cmpb
sub
sbb
out
fwait
daa
mov
fldt
fbld
ret
mov
loop
pop
mov
dec
jmp
sub
mov
movsb
rcrl
into
push
mov
mov
out
and
fstl
add
iret
sbb
inc
pop
imul
aad
pop
mov
aam
int
add
inc
sbb
or
stos
jg
push
out
xchg
les
dec
jns
pushf
mov
jae
sar
xorb
test
outsb
sub
mov
data16
mov
ja
mov
mov
pop
sahf
mov
cmp
adc
push
clc
das
cmp
repz
mov
lret
sub
adcb
lret
nop
scas
aad
stc
mov
fnsave
cmp
adc
incl
out
jp
push
mov
outsb
arpl
add
stc
mov
rdpmc
in
pop
add
push
jns
aam
inc
cwtl
decl
fwait
int3
rdmsr
fldenv
dec
je
pushf
or
mov
mov
push
ficoms
jp
cmp
inc
xor
rep
aad
push
out
test
mov
lea
pop
loop
jle
mov
pop
inc
lahf
mov
inc
testl
jl
cli
mov
stc
imul
cmp
push
dec
pop
add
jg
arpl
push
lahf
mov
sub
jno
sbb
imul
or
xchg
adc
stos
xor
shl
emms
mov
pop
fwait
out
fistpl
push
and
push
jbe
xor
sub
or
ret
inc
aaa
xchg
jge
or
mov
sub
divb
mov
pop
je
sub
add
sbb
and
mov
and
fwait
in
pop
lock
add
cld
inc
out
cmp
cmp
incb
xor
mov
push
js
movsl
mov
sti
cmpsb
dec
fcmovnbe
fnsave
cmpsl
mov
out
insb
jnp
pop
pop
ljmp
sbb
test
xlat
mov
jno
data16
jp
mov
jl
mov
xor
adc
inc
rorb
push
jae
mov
sbb
or
scas
and
rcrb
sbb
xchg
fisubs
call
cmp
pop
or
pop
movsl
subb
movsb
int
mov
inc
pusha
loop
push
fiadds
xchg
xor
cmp
add
mov
xlat
pop
nop
and
mov
sub
adcl
fyl2xp1
aam
leave
dec
fiaddl
inc
fs
in
hlt
add
pop
push
adc
stos
dec
idivl
outsl
mov
out
sbbb
mov
sbb
aam
cmp
mov
imul
mov
adc
jnp
pusha
adc
xlat
mov
pushf
gs
xchg
jp
xchg
lds
ret
push
fs
aaa
push
adc
jbe
xchg
or
adc
push
lahf
cs
sub
sbb
lods
mov
test
mov
adc
pcmpgtw
das
mov
loop
and
ja
jns
sub
xchg
mov
in
out
lea
jp
in
cld
sbb
aad
ret
lock
push
int3
xchg
adc
xchg
stos
pushf
arpl
rclb
add
xchg
pop
mov
jb
jbe
adc
add
add
mov
sbb
push
mov
fmuls
pop
push
mov
sbb
mov
xchg
mov
lcall
dec
add
ljmp
orl
imul
mov
push
mov
fidivrl
pop
xchg
adc
push
push
out
ret
add
dec
jae
mov
call
jl
mov
mov
mov
lods
jle
jmp
pop
mov
add
stos
xchg
push
jo
ret
push
adc
lods
fnsave
call
data16
lahf
pop
sub
rcll
jo
sahf
ja
mov
mov
pop
or
jmp
scas
fdivs
or
dec
dec
pop
in
dec
pop
das
fildll
and
sahf
sub
jg
shrb
cmpb
repz
fnstcw
out
pop
out
adcb
mov
fmul
je
mov
add
lret
test
mov
push
sub
ljmp
adc
lods
call
jg
sub
mov
jae
inc
jmp
xor
mov
mov
and
inc
push
movsl
dec
adc
ja
jmp
jle
test
hlt
pop
inc
sahf
ret
pop
pop
xchg
bound
push
add
popf
aas
add
and
add
jmp
iretw
in
mov
sub
pop
xchg
popf
outsl
inc
lret
xchg
cmc
dec
icebp
mov
lds
nop
cltd
jmp
xchg
and
pop
loope
mov
pusha
jo
rolb
repnz
jno
adc
lea
cmp
mov
and
lahf
mov
dec
cli
fidivl
add
mov
aam
les
popa
dec
jmp
fs
mov
inc
into
shrl
sbb
out
xlat
notb
in
inc
arpl
ds
mov
mov
and
push
imul
out
pusha
ja
pop
pop
fistpll
daa
fiadds
xchg
cmp
int3
in
leave
leave
jo
adc
call
xor
imul
jg
fwait
aad
mov
push
ret
adc
ljmp
xor
xchg
and
sub
lcall
pusha
adc
inc
ror
dec
cmp
addr16
adc
mulb
mov
pop
dec
loop
add
jns
push
pop
adc
mov
pop
jle
and
lds
inc
shrb
imul
mov
out
inc
push
xchg
idiv
adc
mov
add
mov
mov
imul
mov
cmp
std
pop
je
and
jle
jns
xchg
add
jnp
sub
cmp
pop
push
dec
das
out
mov
clc
and
dec
cmp
cwtl
rcrl
stos
pop
jecxz
in
out
test
bound
inc
mov
mov
insb
pop
push
pop
cwtl
mov
notb
cltd
cwtl
push
mov
pop
in
mov
hlt
sub
mov
push
jecxz
imul
and
je
or
jmp
jle
xchg
pop
add
push
movsb
out
and
int3
adc
scas
sub
repz
dec
cli
movq
inc
xchg
mov
or
mov
mov
mov
pop
sti
mov
call
xchg
cld
roll
rorl
xor
rcrb
dec
xchg
mov
or
ret
adc
in
stos
cmpsb
es
dec
push
mov
lret
xor
adc
cltd
rorb
push
aas
stos
xchg
add
bound
iret
push
xor
out
rorl
iret
add
xorl
repnz
mov
out
jmp
negl
lea
dec
xchg
ret
xchg
mov
into
xchg
ret
sbb
mov
outsl
push
repnz
inc
mov
in
fldcw
repnz
jo,pn
imul
std
pop
lds
in
adc
xchg
add
lret
push
inc
push
scas
xchg
clc
jbe
scas
xchg
in
enter
mov
pop
fadds
gs
inc
jmp
xchg
lret
mov
mov
int3
jp
or
jbe
call
fcoms
push
sbb
pushf
pushf
in
shll
lret
adc
inc
call
dec
scas
rorb
icebp
or
into
add
lds
icebp
and
insl
jnp
mov
clc
cltd
add
mov
jmp
mov
sarl
xor
jmp
mov
adc
pop
mov
sbb
push
mov
jb
mov
incb
cmp
fadds
loop
clc
aam
pop
cli
js
je
test
aam
lods
add
iret
in
insl
add
ss
xor
rcrl
bound
shll
popa
inc
scas
cmpsb
push
inc
push
dec
fstp
adc
loop
lea
inc
lcall
push
js
or
cmpsl
notl
ljmp
jo
cld
scas
icebp
inc
sbb
and
mov
lds
inc
fists
sbb
insb
mov
jge
pop
mov
mov
push
sbb
and
pop
push
inc
cwtl
jbe
scas
dec
jg
and
push
push
fidivrl
xor
pop
sub
movsl
pop
pusha
popa
dec
push
mov
outsl
xlat
stos
xchg
ss
psllq
insb
es
dec
in
pop
pop
lahf
lods
sub
out
sbb
fists
fcomps
cmp
sbb
in
adc
hlt
pop
cmp
ja
cmpsb
rorb
test
into
rcl
mov
push
sbb
lds
push
xor
mov
das
push
fadd
dec
pushf
aam
inc
cmpsb
fwait
push
cmc
mov
sbb
push
mov
jb
or
addr16
fstpl
adc
xchg
rorl
call
les
mov
imul
pop
cli
enter
clc
fsub
movsb
aam
xorb
js
inc
popf
pop
scas
inc
test
mov
pop
and
push
daa
shlb
ret
mov
jns
lock
popw
xchg
ret
stos
adc
lea
out
js
in
xor
mov
add
les
into
ss
mov
es
mov
fmull
fcomps
hlt
loopne
and
lret
push
fwait
push
nop
call
push
icebp
jmp
popf
adc
daa
mov
popf
adc
push
pop
icebp
sub
dec
stc
pop
fstps
ja
out
dec
std
das
inc
mov
ljmp
push
in
mov
pushf
div
add
outsl
fldt
dec
xchg
ficoms
adc
add
aam
movsb
dec
loop
mov
popa
ds
fdivrp
in
push
dec
scas
jae
dec
xor
cwtl
xor
and
movsb
iret
sbb
jp
adc
test
icebp
frstor
lods
out
jmp
sub
dec
lods
dec
push
ljmp
hlt
inc
dec
js
pop
out
pop
or
sub
jns
pop
addb
fs
call
outsl
fnstcw
mov
jg
mov
jge
hlt
cmp
inc
clc
shr
add
sbb
mov
cmp
js
movsb
test
mov
ds
ja
mov
pop
inc
shrl
lock
add
and
cli
movsl
cmp
ror
addl
subl
lock
dec
add
outsl
push
inc
movsl
out
mov
shll
out
pop
fisubl
sbbb
subb
xchg
cltd
cmpsl
mov
add
push
pusha
mov
mov
in
mov
pop
clc
jl
int
sbb
xor
notl
mov
xor
add
add
mov
mov
les
sbb
add
nopl
scas
xchg
sbb
mov
dec
push
bound
lock
inc
push
mov
jmp
dec
imul
ja
cmp
popf
jno
or
pop
sbb
xchg
sub
mov
stos
xor
cld
imul
aas
scas
lods
andl
jnp
and
mov
bound
push
std
jg
das
mov
jl
pushf
mov
out
mov
rcrb
pop
test
cmp
mov
pusha
mov
mov
data16
pusha
sbb
mov
push
xchg
xor
push
inc
pop
add
dec
pop
xlat
rcr
push
cld
jp
outsb
jle
ljmp
orl
dec
cs
lahf
roll
cmpb
pop
mov
das
push
inc
nop
jns
jnp
cmp
mov
loopne
jmp
inc
xor
imul
mov
sub
ja
or
aam
push
jns
cmpsl
adc
pop
pop
adc
cld
inc
mov
inc
sub
xchg
mov
leave
xor
push
mov
push
sahf
inc
cmp
xorb
orb
fisubl
mov
cmpsl
out
mull
mov
bound
mov
lahf
subl
lock
push
xchg
cs
cmc
lods
lcall
add
push
call
popa
lahf
xchg
mov
fcoms
jge
cmpsb
or
arpl
scas
xchg
jae
pop
cltd
xchg
push
mull
je
aas
imul
jl
xchg
mov
stos
fwait
push
cmpsb
fstps
sahf
mov
rol
and
ds
lahf
xchg
push
push
jecxz
dec
pop
jno
sbb
stc
mov
out
and
aad
cli
or
ret
dec
add
cmp
mov
mov
movsb
push
ret
dec
loop
jmp
dec
cmp
pushf
int3
dec
fs
jns
shlb
ret
mov
cmpsb
mov
adc
jno
or
and
cmp
inc
push
xlat
call
mov
xchg
mov
mov
adc
daa
pop
cmpb
xor
sub
lds
js
inc
push
fcompl
sbb
sti
ja
shrl
pop
movsb
repnz
sub
sub
mov
or
addr16
sbb
push
mov
dec
push
test
lds
fdivrp
pinsrw
pop
addr16
into
mov
outsb
jne
das
adc
pop
loope
das
or
push
imul
shll
bound
aas
shlb
insl
stc
cmp
push
and
cli
push
adc
mov
test
aad
mov
inc
sti
imul
aas
xchg
lods
xchg
popa
pop
test
fwait
ljmp
jns
sarl
jmp
sub
lock
jmp
hlt
lock
xchg
movsl
sarl
inc
in
or
aas
mov
bound
fidivs
bound
push
mov
iret
dec
sbbb
jo
jmp
mov
pop
xor
rcll
xor
std
add
out
lahf
sbb
mov
bound
pop
icebp
call
push
pop
pmulhw
lds
lahf
mov
aaa
mov
sbb
roll
cmp
dec
cmp
cltd
add
push
pop
sti
mov
cmpsl
pop
cmp
mov
jb
jbe
sub
and
dec
outsl
push
lds
jo
mov
fucomip
add
lret
data16
jo
cmc
mov
rorb
xchg
dec
dec
test
pop
jecxz
xor
insb
out
shrb
mov
mov
sub
int3
jb
jle
jbe
hlt
add
mov
fmul
and
inc
sbb
aaa
sub
shrb
cmpsb
in
add
push
xchg
or
sub
ret
jge
push
in
ret
xchg
jmp
call
lahf
nop
lahf
fiaddl
fucom
xchg
daa
xchg
adcl
inc
jbe
repz
loopne
decl
pmullw
mov
shlb
out
xor
xor
scas
mov
rclb
mov
popa
out
sti
sub
test
adc
loop
xchg
and
cmp
mov
adc
stc
negl
out
inc
aaa
mov
jns
add
std
sub
dec
test
lret
xlat
hlt
push
imul
mov
add
cmp
mov
xchg
mov
enter
sti
fbld
xchg
in
cli
cltd
dec
in
jbe
ds
mov
or
jnp
and
sub
mov
popf
dec
aas
fmul
inc
xrelease
add
and
and
mov
loope
ja
int3
fucomp
add
pop
cmp
cltd
scas
ljmp
xor
sub
jmp
js
push
stos
std
mov
lods
sbb
cmp
jg
mul
cmp
or
adc
stos
mov
sub
xchg
fstpl
dec
fs
push
fistpl
shlb
aad
outsl
push
jbe
pop
xor
jno
pop
xlat
ja
mov
stos
addr16
dec
inc
sub
xchg
push
push
btr
sbb
cmp
aas
mov
push
xor
xchg
or
sarb
push
sbb
jb
xchg
xchg
lods
mov
sarb
rcr
scas
xchg
xchg
iret
push
nop
test
stos
fisubrl
mov
bound
jmp
imul
push
ja
out
jbe
cs
in
xchg
jmp
call
lods
push
pop
cmpl
mov
jecxz
dec
ds
mov
xchg
add
rclb
jmp
shlb
xchg
mov
push
ljmp
sub
scas
adc
jge
and
sub
ss
sbb
jae
inc
es
jnp
cwtl
pop
bound
test
mov
sbb
push
lea
sub
push
cmp
addr16
in
cmp
les
ljmp
sub
cmp
icebp
push
add
mov
pop
or
out
in
cld
jnp
push
xor
arpl
xor
outsb
xor
mov
rcll
faddl
and
mov
dec
lds
xor
mov
sar
cmc
pop
inc
adc
addr16
loopne
mov
cmpsb
movb
add
pop
xor
push
leave
mov
addl
mov
or
mov
fsubrl
pop
movsb
hlt
mov
ret
jl
dec
je
dec
cmpsl
mov
aam
sbb
pop
lods
out
mov
jne
cmp
jne
add
cli
mov
cmpsb
fdivrl
shlb
mov
and
out
in
int3
cmp
lods
dec
cwtl
imul
cmp
cmc
jmp
icebp
sub
arpl
dec
incl
inc
add
add
add
or
scas
fnstsw
pushf
cmpsl
scas
adc
sbb
arpl
push
outsb
jge
lods
sbb
jmp
in
and
mov
loopne
idivb
mov
sbb
insl
lods
pushf
scas
dec
loopne
mov
sbbl
xor
shlb
cmp
cs
repz
push
mov
lock
js
cli
xchg
popf
into
jecxz
mov
jmp
js
cmp
loope
or
scas
js
or
mov
lret
pop
dec
scas
movsl
jo
or
stos
cmp
sbb
enter
sbb
cld
push
dec
das
lahf
hlt
push
popf
fsubrl
pusha
arpl
push
out
mov
push
stos
and
dec
bnd
adc
inc
cs
pop
adcl
pop
pop
outsl
addr16
lret
test
jecxz
dec
scas
pop
mov
test
xchg
cs
sub
sarl
data16
jae
sub
test
push
mov
mov
mov
call
fidivrl
dec
xchg
cmp
jl
cmp
xchg
jle
push
sbb
js
in
outsb
rclb
jl
aam
aam
xor
jno
aas
repz
jns
push
loop
je
cwtl
inc
inc
xchg
adc
enter
cmp
inc
jp
ds
or
mov
insl
std
sahf
stos
aad
loope
or
push
out
and
cmp
dec
dec
fldenv
in
les
loope
jmp
pushf
lret
cmpsb
repz
mov
das
xlat
cmp
arpl
or
push
inc
lret
fstpt
lea
fcomp
cmpsb
daa
scas
pop
mov
inc
cmp
inc
lahf
inc
push
mov
fistl
inc
inc
andl
sub
mov
mov
inc
lods
movsl
jo
mov
stos
xchg
popa
xor
adc
xor
add
popf
rorl
jecxz
mov
add
push
inc
xor
enter
hlt
cwtl
cs
sub
ret
xchg
push
cmpsl
shrl
adc
mov
aad
add
in
inc
cltd
pop
les
ror
test
sbb
mulb
mov
cmp
and
dec
push
mov
ret
pop
cwtl
or
shrl
push
sub
sbb
lret
jmp
jnp
out
push
out
and
pushf
test
sub
mov
inc
xchg
push
in
mov
push
nop
std
mov
insb
loope
arpl
loope,pt
imull
sbb
jl
pusha
push
js
xchg
add
pusha
xchg
insb
fsts
push
inc
leave
lock
jg
scas
faddl
fmul
addr16
jbe
and
lds
mov
scas
sahf
and
sub
inc
or
or
jb
rclb
insl
push
and
hlt
inc
sbb
cwtl
ss
lock
test
pop
aam
and
shrl
lcall
shl
out
jb
sbb
fldt
mov
sub
movl
lods
mov
pop
xor
imul
or
insl
add
jp
cli
mov
add
mov
add
sub
stos
pop
int
imul
push
mov
arpl
shrl
test
bound
sti
cmp
out
xchg
jns
or
repz
loopne
mov
sub
adc
xor
add
sbb
push
sub
scas
push
bound
dec
js
pop
jg
js
fcomps
bound
jns
js
mov
test
jno
incb
nop
sbb
mov
xor
mov
gs
cltd
imul
inc
pushf
aad
or
mov
mov
imul
xchg
xor
mov
movsl
sub
fistpll
jge
mov
add
sahf
and
and
cltd
rorb
jb
dec
xor
mov
sub
loopne
xchg
clc
out
and
sahf
shr
and
stos
fcoms
mov
jg
xor
or
shlb
ljmp
out
adc
jb
dec
push
mov
cmp
and
mov
lahf
mov
push
jb
movsl
fdivrl
mov
ss
js
scas
out
mov
enter
outsb
fsubrl
and
ja
inc
adc
sub
fst
sub
testb
dec
test
in
jno
iret
daa
xchg
adc
xlat
mov
dec
sub
repnz
call
scas
and
cli
cld
cs
pop
dec
and
outsl
xchg
dec
xchg
ljmp
repnz
insl
mov
ss
inc
ds
mov
scas
cmp
jns
stos
dec
mov
cmp
or
adc
cmp
mov
cwtl
xlat
jecxz
dec
mov
int
push
xor
mov
in
cmp
push
push
das
lahf
ja
repnz
fstl
push
adc
popf
jecxz
xchg
pop
mov
movsb
sti
or
xchg
dec
xchg
inc
imul
negl
pop
mov
mov
mov
pop
clc
inc
xchg
lods
int3
aaa
pop
out
fdiv
or
mov
ja
sub
lock
pop
cmpsb
or
mov
scas
das
and
or
out
dec
or
sub
cwtl
popa
push
mov
mov
and
mov
out
dec
insl
push
adc
xchg
les
outsb
adcl
dec
js
in
add
fs
dec
adc
stos
xchg
andb
jmp
cmp
loopne
add
xor
movb
sti
mov
out
stc
sbb
mov
lahf
push
je
sub
dec
xor
jne
cmc
imul
inc
ficoml
pop
out
or
pusha
roll
imul
fidivrl
lcall
rclb
enter
sarb
aad
pop
js
in
cmp
dec
pop
inc
cli
and
pop
mov
and
cwtl
or
lret
push
cmp
pushf
test
adc
fdiv
or
cltd
andl
cmp
push
movsb
and
dec
les
arpl
xor
sbb
jno
in
out
dec
xchg
rcll
bound
push
xchg
fwait
test
mov
mull
loope
mov
mov
rorb
dec
xchg
test
cmp
out
jl
cld
push
mov
dec
fisubl
or
or
js
pusha
in
ljmp
es
mov
ret
clc
mov
cld
add
fidivl
add
mov
divl
test
add
cmp
pop
stc
aas
xor
xor
in
lea
cld
jmp
sub
es
push
mov
pop
mov
mov
pop
adc
sbb
mov
and
in
data16
ret
and
rorl
or
das
stos
sbb
outsb
xor
sub
loop
cmp
in
sub
mov
fwait
into
adc
push
push
sbbl
in
movsb
pop
jno
sbb
add
inc
arpl
xchg
aaa
scas
mov
popa
sbbb
lea
xchg
or
jge
add
xchg
pop
scas
cltd
adc
inc
mov
pop
outsb
push
nop
push
cmp
adc
xor
and
aam
es
xchg
cli
dec
pop
xchg
xchg
insb
hlt
sbb
sub
push
and
ss
out
sub
ds
jno
push
popa
sbb
xchg
adc
shll
xor
xchg
iret
mov
les
stos
cli
jl
insb
imul
sub
xor
add
popf
nop
inc
clc
ror
loopne
ret
incl
repnz
jge
xchg
fildl
movsl
mov
and
cmp
add
int
in
incl
mov
bound
adc
sbb
imul
xchg
fisttpl
mov
cmc
inc
xor
xchg
imul
and
sub
add
adc
adc
test
mov
pusha
leave
adc
sub
xchg
xchg
icebp
popf
cmc
cmp
and
cli
jp
xchg
jg
ss
into
xchg
mul
ja
push
sub
daa
sbbl
clc
cmc
or
and
hlt
dec
jnp
jg
mov
in
xor
sbb
jne
sarl
loopne
stos
sbb
mov
cmc
pusha
adc
mov
js
mov
jbe
push
push
pushf
xchg
cmpsl
fistps
push
jmp
xchg
push
xchg
inc
and
push
vucomiss
movb
and
xor
addr16
mov
scas
addr16
pop
test
jo
ljmp
jb
mov
sti
lret
pop
aaa
data16
mov
int
adc
add
daa
xchg
into
jle
dec
sbb
scas
jne
or
sub
cmpsl
pusha
cltd
or
mov
ljmp
insb
jl
jb
or
lds
or
shl
jl
adc
rcrb
xchg
mov
adcb
rol
pop
xor
add
into
imul
fstpt
shl
fisttpll
call
xor
adc
jl
arpl
xor
or
jle
mov
rorb
lret
xchg
add
mov
fucomip
insb
mov
out
push
mov
inc
jmp
jle
sub
je
stc
fldcw
cltd
dec
mov
aas
mov
mov
mov
pop
sub
and
idivb
in
es
jl
int3
and
adc
add
cmpsl
xor
insl
out
mov
cmpsl
gs
ljmp
mov
add
inc
jmp
sbbl
les
push
fsubrs
shlb
lahf
stos
adc
pop
rcr
out
gs
jle
fildl
test
sub
and
cmp
je
push
push
rolb
int
dec
fidivl
in
xchg
fisttpll
sbb
mov
jns
filds
ret
jp
rcrl
or
and
and
loop
inc
and
icebp
xor
mov
pop
and
adc
mov
js
cmp
xchg
mov
mov
cmc
stos
pop
fs
rcll
fisttpll
fldenv
arpl
dec
jo
sbb
adc
xorb
fisttpl
inc
push
mov
fbstp
fsts
cmp
fmul
in
sbb
lds
pop
jne
call
test
rcrl
loop
push
mov
loope
sub
aam
jb
repnz
mov
xchg
loope
popa
jmp
lahf
fisubrl
dec
aaa
pushf
sub
movsb
mov
adc
cmp
push
push
jae
hlt
loop
mov
inc
out
fwait
in
mov
rclb
lock
imul
out
push
inc
mov
xchg
jp
ljmp
inc
bound
hlt
cmp
add
dec
pushf
rcl
mov
cld
cmp
xor
das
xchg
shl
ja
bound
cld
adc
adc
adc
add
sbb
mov
mov
pop
push
lods
loope
or
or
xor
subb
sbb
std
icebp
sahf
dec
xchg
out
sbbl
jne
cmp
mov
ficoms
jns
jnp
and
in
xchg
or
or
sub
test
jns
add
fadds
movsb
imul
adc
enter
jecxz
movsl
hlt
or
and
mov
inc
adc
mov
xor
mov
je
pop
xchg
loope
data16
lea
pop
pop
mov
fstps
int
mov
xchg
dec
cltd
test
cmpl
hlt
mov
mov
sbb
lods
out
adc
dec
jecxz
xor
in
dec
xchg
lock
cmpsl
push
push
cmp
and
cmpsb
dec
mov
bound
inc
daa
inc
add
aam
mov
mov
add
pop
testb
mov
dec
xchg
or
outsl
test
adc
mov
dec
test
or
ja
pop
aaa
stos
cmpl
test
jp
insl
cmp
lods
pushaw
stc
outsb
out
mov
stos
and
dec
push
inc
xor
test
fs
fisubrs
xchg
jo
lcall
mov
push
jle
push
mov
int
xchg
in
addr16
jl
jns
mov
sbb
enter
iret
add
movsl
insb
imull
jecxz
pop
jp
jl,pt
sbb
inc
xor
xor
insl
ljmp
or
sbb
xchg
xchg
sbb
inc
pop
insl
sub
and
shll
icebp
js
mov
adc
adc
push
add
pop
cmp
jge
ja
push
and
mov
sbb
jae
or
je
int3
sub
arpl
cltd
mov
mov
repnz
mov
out
push
fwait
dec
xlat
out
stc
lcall
std
clc
js
jl
sub
repz
js
or
mov
dec
sub
scas
stos
and
mov
mov
fcomip
stc
sbb
stc
mov
lret
add
push
dec
mov
pusha
push
lods
test
push
adc
rorb
mov
mov
iret
mov
sub
dec
cmp
jae
xchg
xchg
jb
das
jo
inc
and
xchg
pop
fbld
mov
push
xchg
repz
orb
stc
xor
xlat
decl
or
and
dec
push
dec
movsb
shll
sbb
xlat
xchg
mov
ja
pop
jmp
nop
call
inc
aas
iret
jae
and
stc
int
insb
data16
test
adc
mov
mov
adc
inc
add
or
adc
sub
arpl
ds
push
or
call
and
ficompl
dec
push
nop
xor
gs
test
mul
iret
dec
iret
dec
add
fidivrs
and
push
mov
mov
add
in
fs
nop
mov
subb
clc
mov
fmuls
int
xor
mov
js
pop
xchg
stos
pop
fstl
out
xor
jo
mov
dec
cmp
adc
push
dec
jecxz
cmp
mov
and
sbb
shlb
jp
sbb
pop
inc
psrlq
pushf
loop
dec
mov
mov
mov
sub
push
fadd
out
mov
aad
pop
sbb
xchg
xlat
mov
jge
aas
sbb
and
dec
data16
mov
adc
popa
dec
push
mov
xlat
mov
mov
imul
insb
outsl
pop
sahf
popa
and
jg
aas
inc
push
mov
movsl
cmp
jmp
push
test
cmpl
mov
cmc
insb
mov
push
insl
pop
jle
movsl
pop
jecxz
rorl
mov
adc
nop
pop
in
js
sahf
in
fiadds
sar
insb
and
inc
loope
xchg
shrb
mov
mov
add
maskmovq
mull
int3
adc
lahf
mov
mov
jecxz
out
xor
rorl
mov
adc
push
sbbb
fcompl
sti
popf
push
jmp
fnstenv
add
cmpsl
xchg
movsb
rorb
xor
fs
cltd
fidivl
je
cmp
imul
inc
add
in
adc
int
sbb
adc
xor
push
or
inc
ret
pop
aaa
pop
xchg
cmpsb
pushf
mov
add
test
sti
mov
dec
push
jl
jne
dec
sbb
rcll
lock
pop
fidivrl
in
in
jp
mov
hlt
cmp
sahf
mov
add
gs
lret
xchg
and
push
mov
pop
andl
test
xchg
jno
cld
mov
mov
les
mov
pmulhw
pop
mov
xor
pop
jnp
lret
dec
and
icebp
in
push
lods
xchg
push
mov
jg
xor
test
or
pop
and
inc
lret
scas
sub
xorl
xchg
fistl
dec
pop
cmpsl
or
ficoms
fwait
lahf
sub
test
adc
je
adc
lods
and
aam
xor
in
call
scas
inc
push
clc
imull
pop
pushf
jns
fistps
fiadds
add
ja
add
repz
push
mov
stos
xorb
ret
jge
cwtl
scas
notb
ret
arpl
xchg
sub
push
adcb
sub
out
dec
cmpsl
outsl
stc
ret
inc
sub
mov
rol
fdivl
popf
jp
in
fs
cmp
data16
or
jl
bound
mov
add
jno
sti
je
push
cmp
mov
movsl
dec
outsl
dec
add
sbb
lods
jno
inc
inc
test
sbb
icebp
in
lret
jecxz
js
xchg
insl
and
test
addl
int3
pop
loop
mov
and
adc
and
insb
mov
mov
lds
xor
mov
jl
inc
sbb
stos
xchg
jb
pop
bound
outsb
fimuls
jo,pt
xchg
xor
cmc
cmp
jl
mov
or
js
sti
xor
pop
test
repnz
xchg
divl
push
cmp
jae
mov
popa
lds
inc
imul
xlat
jp
cmpsb
mov
lods
dec
jnp
cmp
add
xchg
loope
adc
in
invd
leave
adc
sub
mov
out
shlb
jmp
adc
mov
cmc
adc
sbb
mov
mov
or
sbb
out
movsb
adc
or
lea
ja
inc
dec
pop
in
out
sbb
jp
setae
push
lea
mov
jle
into
fistpll
jbe
or
and
sahf
ja
imull
jg
xlat
addb
ja
loope
mov
inc
test
add
lahf
loopne
loopne
lods
mov
xchg
pop
negl
mov
adc
jp
mov
scas
cwtl
je
cli
loope
pop
call
push
pop
lds
dec
scas
push
dec
enter
push
and
repz
jecxz
test
movsb
mov
aam
scas
ret
in
cli
jb
add
pop
sahf
cmp
xchg
jb
mov
cltd
out
insl
test
jmp
aas
xchg
les
and
xchg
fcoml
mov
sti
out
xchg
fstpt
cs
inc
int3
imul
mov
clc
mov
das
or
movsb
mov
cmp
arpl
scas
push
pop
mov
repnz
in
test
sbb
or
fwait
pop
sti
daa
outsb
cmp
add
dec
jbe
jo
scas
cmpsl
xchg
rcrl
enter
or
inc
popa
cltd
test
xchg
adc
cmpsb
aad
jne
addl
pop
and
call
psrlq
aam
pop
push
xor
xor
mov
mull
inc
movsl
int
mov
and
lret
lods
jno
or
pop
or
cmp
mov
xor
cld
mov
dec
sub
fcoms
pop
scas
push
nop
daa
dec
jae
add
mov
movsl
roll
push
sub
mov
rcrl
xorl
jge
cmp
cmpsl
jp
cmpsl
sbb
rorb
in
enter
fcmovnu
dec
sahf
mov
jae
pushf
sbbl
lea
and
js
or
add
and
movsb
daa
jnp
cld
in
cmp
movl
fs
mov
and
pop
aad
inc
cwtl
push
cmp
das
or
lock
mov
cmp
inc
aam
das
andb
movsl
jge
std
cmpsl
test
out
aas
popa
push
cmp
dec
xchg
jae
das
into
mov
xchg
inc
scas
push
or
xor
or
inc
pop
jb
imulb
sub
and
out
je
decl
loop
cmp
jno
jg
push
inc
sub
idivl
lret
or
das
dec
xlat
in
filds
jg
lds
mov
dec
scas
jp
adc
jge
imul
outsb
icebp
bound
lcall
sub
arpl
fstp
out
and
pop
test
jle
pop
cmp
lods
dec
loope
cmp
int
push
daa
dec
xchg
add
aad
lcall
mov
or
jge
movsb
xchg
mov
lret
js
push
inc
js
and
cmpsl
cwtl
sbb
sbb
pop
lret
adcw
push
daa
sub
test
inc
popa
cmpb
adcl
movsb
in
or
mov
and
clc
jbe
pop
test
mov
fnstcw
outsb
xor
movsl
jne
adc
and
das
inc
lahf
aaa
pop
pop
jbe
cmp
adc
cmp
je
ds
sub
and
fstl
negb
les
jge
pop
fdivl
push
and
inc
xchg
push
or
cmp
cli
push
arpl
in
mov
fbstp
adc
je
inc
jecxz
addl
nop
in
movsb
pop
bound
fidivl
mov
xchg
push
pop
inc
push
out
negb
dec
mov
or
jmp
fstp
clc
pop
test
sbb
je
mov
push
pop
ss
sbb
loopne
mov
leave
int3
loopne
in
jb
mov
inc
lret
nop
mov
xchg
sbbl
out
push
shrb
insl
jmp
cs
in
add
sub
orl
popa
jns
inc
fstl
lock
repnz
test
and
sbb
test
jge
cltd
cltd
fcos
push
push
loop
sbb
xchg
fs
add
add
xchg
adc
adc
jno
add
lret
xchg
enter
inc
adc
push
ret
cmpsl
adc
cld
fsub
aaa
ret
fmuls
daa
jge
idivb
xchg
sahf
sbb
mov
clc
dec
daa
adc
jge
jbe
pop
and
or
jg
cmpsl
pop
jb
outsb
cmp
lcall
add
push
mov
mov
lahf
ljmp
or
cmp
test
inc
or
xchg
insb
jp
jmp
daa
inc
xchg
jbe
ljmp
dec
fimull
ja
push
add
lret
cmpsl
int
inc
inc
jp
xchg
jmp
xlat
addr16
rcr
movsl
cwtl
pop
into
jp
in
sahf
inc
in
cltd
mov
std
xor
or
and
scas
mov
mov
mov
fnstenv
push
mov
push
jg
push
cmp
pop
std
jge
inc
mov
mov
or
jl
test
jo
mov
ja
lock
aad
ds
loope
sub
pop
repnz
push
or
adc
stos
sti
scas
out
lods
fsubrs
inc
and
cmc
cmpsl
mov
nop
mov
call
sub
add
adc
outsl
insl
push
inc
iret
subl
dec
push
popf
sub
imul
dec
out
outsl
gs
mov
mov
fnop
push
icebp
pop
pop
add
or
dec
dec
add
scas
outsl
push
outsl
or
repz
stos
sbb
out
shlb
mov
xchg
dec
das
call
in
sub
imul
jnp
sub
ret
out
push
push
cmp
push
cmpsl
lods
sbb
icebp
or
adc
test
jle
ret
push
inc
repz
lret
push
popw
add
mov
fists
pop
aas
data16
fs
mov
mov
xchg
stos
cwtl
add
sbb
cmpsb
test
aad
loopne
jo
ja
cwtl
jmp
sti
leave
into
rol
push
leave
cmpsl
sub
mov
or
arpl
push
mov
add
sub
mov
sti
aam
jp
sbb
and
mov
outsl
fiaddl
cwtl
adc
popf
insl
cmp
insb
outsl
jae
adc
jg
pushf
clc
insb
jnp
not
inc
push
lcall
dec
push
cmp
cmpl
mov
mov
and
cli
shlb
pushf
mov
push
fnsave
jge
inc
add
dec
loope
out
jns
daa
push
imul
fdivl
dec
mov
mul
out
ds
sahf
mov
mov
aad
pop
pop
gs
inc
cmp
cltd
push
test
sti
cmp
cmpsb
leave
in
xchg
orl
mov
xchg
shll
stos
push
cmp
insl
xchg
in
out
sub
js
mov
cmc
xchg
or
int3
xchg
cmp
shlb
cmp
pop
movsl
frstor
ljmp
sub
fistl
or
ret
adc
xchg
add
inc
push
lret
aaa
adc
stos
dec
mov
subl
cltd
pop
ret
cmc
andb
out
xor
jl
loope
out
jp
push
lret
jne
aaa
sarb
das
mov
fwait
stos
push
add
fdivrl
or
and
dec
lds
push
and
pop
inc
cmp
push
shrb
dec
and
stos
out
fists
and
rclb
or
std
mov
cmp
es
movsl
sbb
xchg
add
pop
cli
das
lahf
stc
jb
aam
xor
inc
roll
cmp
xchg
jmp
push
decl
repz
mov
xchg
mov
jmp
push
jg
in
cmp
aaa
test
in
dec
jns
or
in
scas
or
jmp
sbb
insl
mov
push
outsb
dec
sbb
cmp
mov
mov
fwait
dec
cmp
push
fadd
mov
adc
lds
and
inc
sbb
inc
sbb
mov
jge,pn
dec
icebp
add
lahf
mov
xor
stos
cwtl
mov
stos
dec
pop
and
in
sub
and
cmp
std
mov
fldl
pop
cmp
push
cmp
rcrb
int
out
mov
pop
inc
sub
pop
jb
nop
mov
dec
fnsave
sub
lods
pusha
lods
push
push
int
adc
lods
push
fnstenv
movb
mov
incb
ss
and
jb
xor
loope
mov
inc
leave
pop
cmp
mov
pop
pop
cld
subb
out
arpl
and
pop
adcl
in
int
rcrl
aas
insb
dec
pop
bnd
xor
ret
scas
mov
ss
lahf
test
or
mov
and
movb
std
ljmp
shll
push
pop
cmpsl
imul
sub
xchg
or
test
or
push
aaa
movsb
push
push
dec
push
push
insb
cwtl
lea
and
adc
mov
mov
je
push
inc
mov
sub
lea
js
popf
push
add
lcall
ret
xchg
repnz
adc
pop
loopne
push
or
cmp
jne
add
dec
jbe
mov
pop
sahf
sbb
cmp
sub
mov
test
xchg
mov
sbb
fistpll
ret
jl
out
shrb
xor
push
add
shll
add
add
lea
lea
pop
mov
mov
aas
adc
add
mov
mov
xor
les
lret
fnstsw
idivb
arpl
rcl
out
mov
mov
push
push
aam
in
pop
repnz
jmp
inc
inc
hlt
xchg
andb
pusha
mov
int3
imul
int3
loope
aas
pop
push
movsl
xchg
sarb
test
mov
or
fcomip
int
pop
lahf
popf
pop
cld
lock
mov
xchg
mov
xchg
lea
sbb
mov
fdivs
push
pushf
cwtl
cs
inc
mov
ljmp
fcomps
xlat
and
xlat
push
inc
pop
test
xor
sbb
mov
add
inc
movsl
xchg
in
adc
pop
mov
dec
jg
jnp
fadd
pop
lds
movsb
mov
mov
enter
mov
test
in
fwait
xchg
dec
or
pop
push
mov
dec
adc
mov
aaa
testl
mov
movl
pop
mov
je
flds
lods
decb
mov
dec
mov
in
jbe
enter
icebp
jnp
sbb
out
cmpsl
sbb
or
fldl
cmc
jns
leave
lock
adc
lds
loopne
jmp
cmpsb
add
lahf
cltd
data16
and
insl
and
sub
xor
pop
call
add
xchg
lret
rcrb
loopne
inc
loopne
xchg
sbb
rcrl
out
movb
push
bound
leave
mov
mov
jg
test
xchg
aam
cmp
inc
aad
test
std
int3
pop
cmp
test
pop
push
or
add
iret
imul
lahf
test
mov
adc
inc
mov
add
jbe
pop
or
add
push
cwtl
jnp
mov
pop
push
or
push
movsb
xchg
mov
insl
test
les
pop
lods
xchg
mov
push
xchg
fistl
aam
add
or
outsl
pop
and
xor
and
xor
sarl
pop
into
push
dec
mov
cmp
xor
push
scas
cli
and
xchg
repz
push
xor
mov
pop
addr16
test
repz
into
cmp
xchg
xchg
xor
mov
mov
xchg
jecxz
mov
int3
add
idivb
mov
push
stc
fidivrl
leave
pop
out
xchg
ficoms
inc
xchg
sbb
popf
pop
out
or
decb
cmp
pop
ret
les
andl
cs
or
test
xchg
ds
cmc
loopne
pop
cs
out
lods
cs
testb
popa
sti
lcall
dec
jne
dec
shll
xchg
sarl
jge
test
xor
cmp
sub
inc
lahf
sbb
les
xor
test
mov
mov
mov
fwait
xor
push
lea
sub
sub
push
jl
out
sub
arpl
cmp
movsb
mov
mov
pop
popf
jmp
cld
test
sahf
mov
sub
xchg
lret
ja
or
data16
dec
pop
xchg
xor
out
push
add
cli
jmp
add
cmp
movsl
std
fidivl
xor
and
xor
sub
outsl
jo
inc
std
xchg
push
jl
repz
mov
pop
ret
andl
xlat
icebp
in
bound
out
fwait
mov
sahf
subl
jge
out
movsl
and
xchg
mov
lahf
pop
movsb
bound
mov
ljmp
lcall
pop
cmpsl
xchg
sub
ljmp
jle
nop
dec
mov
scas
jl
fcompl
cmpsl
mov
adc
jns
push
rclb
mov
cmp
and
fimuls
mov
xchg
jb
pop
das
inc
dec
add
loop
add
js
mov
xor
int
and
sbb
adc
sbb
and
into
test
or
cmp
loopne
fbstp
aas
mov
cwtl
pop
cltd
fldenv
xchg
scas
or
jle
aaa
sub
iret
fnstsw
cmc
aam
pop
mov
cmp
ret
mov
jmp
and
dec
testl
cwtl
cmpsb
mov
inc
push
lcall
mov
loopne
mov
arpl
cltd
ret
sub
xor
or
mov
fwait
xchg
sti
cs
xor
jnp
lea
push
fwait
mov
mov
fdivrs
jle
iret
out
repz
ds
outsl
data16
bound
cwtl
insl
popa
sub
dec
pop
jecxz
lret
fisubrs
add
sbb
pop
in
cld
xchg
mov
mov
jns
jb
call
icebp
adc
lcall
dec
sbb
adc
fcoms
ret
inc
add
movsl
push
push
xchg
es
xchg
lahf
icebp
sub
pop
push
jbe
mov
call
xor
sti
hlt
xchg
pop
mov
ss
sbb
outsb
jnp
js
mull
out
shll
mov
lods
pusha
push
sub
mov
or
or
jecxz
xor
push
leave
push
int3
fldl2t
repz
and
movsb
sbb
mov
or
aaa
aad
and
mov
pop
jge
pusha
fwait
xchg
lcall
and
inc
fmuls
test
mov
outsb
loop
arpl
push
mov
mov
bound
and
scas
shrl
pxor
aam
arpl
std
mov
loope
cli
cmp
ret
scas
mov
sub
outsl
add
out
dec
out
enter
out
cmp
ljmp
mov
mov
inc
or
adc
inc
mov
in
pop
xor
bound
mov
or
loopne
push
jno
sti
xlat
dec
outsl
dec
jae
cmp
stc
xchg
dec
push
imul
adc
dec
insl
sub
mov
push
pushf
mov
insb
push
je
mov
xchg
pusha
test
mov
add
cmp
xchg
rcrb
dec
jg
mov
xor
dec
arpl
mov
in
repnz
mov
mov
mov
sbb
fisttpll
mov
cmp
xor
addr16
decb
popa
leave
pop
mov
mov
inc
pop
cli
and
jg
xor
aad
xlat
aad
dec
ss
jg
sti
and
insb
mov
and
cwtl
out
adc
or
sbb
decl
mov
fldcw
sub
fcomps
inc
int3
jo
and
clc
jge
aaa
insb
lret
pop
shll
repnz
pop
enter
push
sub
hlt
adc
loope
daa
loopne
xlat
fldcw
nop
inc
aad
fists
shlb
push
insb
mov
mov
addr16
test
pop
pop
pop
dec
pop
jmp
mov
sbb
mov
inc
push
cli
sub
sbb
adc
jl
lcall
xlat
pop
lret
jbe
lea
aam
jo
and
mov
jb
sbb
shrl
cmp
lock
int3
sbb
arpl
dec
shr
aam
mov
sub
and
cmp
loopne
mov
xor
scas
fsubs
jmp
shr
mov
fwait
jmp
fcmovnb
in
nop
lock
fistpll
cld
test
cmp
repnz
jg
fistpll
adc
mov
and
push
dec
push
lret
leave
inc
mov
cs
arpl
ret
test
push
in
jae
ficompl
and
mov
clc
pop
mov
mov
jmp
repz
lret
mov
jo
je
cmp
fwait
stos
pop
jg
mov
adc
xchg
arpl
xor
inc
mov
mov
xchg
adc
inc
lea
es
dec
sub
iret
adc
scas
inc
push
cwtl
insl
stc
nopl
push
xchg
mov
dec
data16
cli
cmpsl
and
jns
push
sbb
push
pavgb
or
xchg
arpl
idiv
lahf
lcall
jg
in
sbbb
aaa
mov
call
stos
sbb
scas
sub
cmp
sti
mov
xor
inc
xchg
lret
fsubs
movsl
jns
push
pop
orl
inc
xor
cmp
ficompl
sub
fsub
int
xor
add
pop
cmc
or
out
imul
pop
outsb
andl
xor
int3
jle
add
les
or
bnd
inc
nop
into
xor
lds
pop
cmpl
ret
or
in
test
in
xor
js
lea
lcall
pop
repnz
out
sbbl
mov
adc
sets
push
stc
pop
or
rorb
jl
lock
popf
pop
inc
out
sub
cltd
jno
cld
push
div
xorl
shrb
xchg
pop
mov
jge
ss
adc
shr
aas
out
push
lret
and
jmp
adc
clc
fsts
pop
sub
outsb
aaa
addr16
or
inc
inc
jae
and
inc
jp
inc
addb
clc
cmp
add
mov
imul
jo
xchg
loope
push
lahf
ljmp
ret
int3
mov
and
cmp
push
sub
rcrl
icebp
inc
lret
outsl
dec
shll
cmc
xor
or
ret
in
jge
jp
sbb
push
and
add
add
shll
or
push
clc
push
testb
sub
sbb
ficomps
jp
pop
dec
insl
int3
rorl
xchg
push
push
and
sub
add
jo
scas
dec
insl
popf
dec
xchg
call
adc
jg
push
pop
xchg
lcall
into
push
jne
jae
pushf
and
xchg
dec
push
mov
mov
mov
mov
add
inc
cmpl
punpckldq
cli
mov
insb
mov
scas
aas
or
sar
ds
add
lods
cmp
xchg
hlt
push
outsb
mov
cld
xchg
xlat
mov
mul
pop
xor
hlt
aas
cmc
adc
popa
rcrl
and
xchg
mov
jb
shlb
je
mov
mov
dec
inc
idivl
stos
xchg
pop
and
mov
sbb
je
cld
insl
mov
sub
mov
dec
add
jl
and
test
das
cmpsb
xchg
inc
xor
push
pop
mov
pop
fs
arpl
mov
mov
stc
push
lret
push
cmpsb
lds
insl
pop
fbld
arpl
jecxz
fildl
loop
mov
rcrl
outsl
mov
sbb
xchg
test
insb
mov
adc
mov
xchg
icebp
jl
add
cmp
popa
daa
pusha
out
out
jno
aam
lahf
movsb
sub
jo
inc
mov
mov
mov
adc
add
test
mov
test
rorl
aas
cmp
xor
sahf
adc
jnp
mov
xor
mov
adcl
cmc
rcrl
xchg
sub
push
test
scas
gs
ficoms
push
into
or
and
pop
rclb
xor
add
ss
or
mov
data16
pop
gs
sub
mov
pop
lea
sbb
push
movb
mov
stc
push
out
mov
ljmp
fcmovne
mov
jle
pushl
sbb
mov
jnp
mov
jecxz
xchg
adc
outsl
in
jno
mov
mov
mov
add
push
or
sbb
mov
mov
inc
sbb
sbbl
add
mov
and
pop
or
aas
xor
int3
outsb
lock
mov
push
jl
gs
cmp
cmpb
sub
enter
orb
rorb
push
adcl
leave
and
adc
push
and
add
xchg
addr16
loop
lea
lea
add
and
lds
orb
xorl
and
cwtl
adc
xchg
inc
lret
dec
movsl
scas
nop
xlat
cltd
push
mov
or
dec
daa
cmp
scas
adc
sbb
or
ljmp
aam
jo
popf
pop
test
sar
test
arpl
daa
testb
les
shrb
jb
xchg
out
popa
or
mov
sbb
lret
sub
outsb
shll
mov
fildl
sbb
xchg
jg
lret
arpl
or
jecxz
lret
xlat
jmp
test
int3
sub
mov
rol
enter
in
pop
jns
mov
adc
out
sbbl
jg
mov
lahf
pmulhw
mov
cmp
lcall
repz
cmp
int3
dec
je
aas
int
mov
es
xor
xchg
icebp
shrb
mov
or
add
aaa
mov
in
dec
add
outsb
arpl
and
and
mov
in
test
mov
jns
scas
lcall
add
in
dec
das
daa
fnstcw
mov
adc
fcompl
jne
aam
lds
jg
pop
xchg
loopne
xchg
loop
inc
mov
mov
mov
pop
idivb
xchg
add
mov
mov
iret
mov
clc
rol
shl
out
push
and
mov
push
jno
mov
das
pop
pusha
pop
pop
rcrb
dec
divl
mov
cmc
movsl
cmpsl
out
inc
and
cmp
push
nop
dec
adc
xor
inc
lock
out
pop
je
fdivr
mov
pop
dec
sar
movsb
push
call
inc
xchg
cmp
mov
mov
lds
mov
jae
add
and
sub
mov
int3
mov
cwtl
lcall
fisubs
push
mov
cmp
ficomps
bound
shlb
cmp
pushf
or
mov
mov
ss
jb
pusha
fistl
cwtl
je
cmp
mov
testb
mov
mov
fimull
rclb
jns
add
xchg
add
lods
ds
aad
jnp
fdivl
cmp
and
jmp
jge
xchg
adc
mov
es
sub
adc
in
xchg
stos
xchg
dec
addr16
outsl
mov
sahf
xchg
shrl
cmc
enter
inc
sbb
cmpsl
addr16
das
and
clc
leave
sbb
pop
sbb
or
ss
call
bound
mov
shl
sbb
mov
and
aad
call
cmp
lea
sti
ret
or
popf
lret
out
fistpl
push
shl
sahf
inc
rclb
mov
arpl
out
cmpsb
lret
idivl
mov
cmpsb
xor
mov
push
inc
movsl
fldenv
aam
mov
loopne
mov
aad
jo
mov
and
xchg
mov
pop
and
fwait
icebp
cmpsl
leave
jns
imul
mov
sub
sahf
fwait
addr16
and
je
cmp
jge
push
lret
push
cld
pop
repz
les
pusha
clc
js
sahf
dec
sbb
dec
mov
mov
push
stc
movsl
rcr
jns
jne
mov
adc
iret
xchg
inc
hlt
cmp
push
mull
in
mov
jl
cmpsl
jnp
xorl
cmc
cmc
test
jns
fsub
or
xchg
push
sub
out
lret
shll
sub
loope
stc
addl
out
insl
or
mov
sub
clc
pop
mov
pop
jns
addps
adc
cmc
sbb
loope
ss
dec
cmpsl
add
inc
cld
or
mov
cmc
cmp
popf
sub
andl
mov
fidivl
sbb
xor
jmp
pop
dec
sbb
inc
sbb
ret
push
or
sub
push
outsb
and
xchg
cmp
dec
xor
jno
xor
adc
flds
inc
lcall
mov
cmp
sub
mov
sbb
pop
mov
jl
lods
push
xchg
xlat
ret
sub
xchg
sub
sub
ret
pop
mov
mov
out
jmp
cmp
push
push
bound
jmp
into
jae
cmpsl
sbb
lods
sbb
sbb
stos
sbb
jnp
xchg
push
lcall
dec
xchg
les
cmp
push
dec
and
fcmovnb
loope
andl
mov
mov
sbb
adc
add
mov
addr16
adc
pop
xchg
and
dec
add
mov
das
jmp
loop
fisttpl
sub
movsb
sbb
sbb
xor
mov
dec
xlat
push
sub
cltd
std
cmp
popf
xchg
aas
in
inc
xlat
sarb
xlat
outsl
jle
push
sbb
cmp
fildll
popf
lods
push
mov
adc
sar
imulb
orl
loopne
lods
mov
pusha
jecxz
cwtl
aad
sbb
sbbb
mov
loope
xor
lret
cld
sarl
arpl
xchg
es
mov
pop
loope
int
jne
jnp
lret
mov
out
sub
stc
ljmp
or
push
or
jbe
call
scas
inc
mov
and
jmp
aad
inc
and
icebp
cli
add
mov
adc
out
shll
sarb
lahf
sub
pop
into
aas
sub
pop
loopne
cmpsl
int3
aad
imul
push
adc
and
into
lret
inc
imul
push
es
int3
cmp
dec
or
cld
push
mov
sub
andl
lea
test
addb
adc
pop
and
out
sbb
je
push
jg
je
cmp
jmp
out
pop
cs
mov
push
stc
fimull
lods
movsl
and
mov
lret
add
fsubl
cmpsb
addb
shll
pop
push
out
add
mov
divl
cs
or
insb
int3
push
subb
push
jmp
scas
inc
mov
adc
dec
leave
cli
fistpl
push
shl
movb
aaa
adc
hlt
push
xchg
xchg
push
sbb
cmp
lds
stc
popa
fistpl
lcall
mov
std
cmp
ret
push
push
xchg
cli
inc
scas
push
xor
das
inc
mov
addl
pushf
and
pop
mov
pop
leave
xchg
mov
xor
dec
adc
jecxz
pushf
mov
pop
sbb
push
sahf
test
jmp
jo
xchg
xor
ret
mov
xchg
pop
xchg
xor
call
sub
ret
data16
adc
cltd
pushf
xorb
movsl
stos
sbb
mov
adc
sar
sbb
mov
pop
es
stos
sbb
stos
jmp
pop
outsb
repnz
icebp
xorl
dec
loopne
mov
shrb
sti
xchg
jmp
mov
dec
data16
in
pusha
jge
les
adc
flds
jmp
mov
rclb
jmp
shlb
fldt
push
sar
jae
jmp
inc
sub
or
fisubrs
fbstp
mov
or
pop
add
repz
mov
mov
shll
add
mov
pop
inc
mov
mov
imul
dec
cmp
fsts
mov
sub
lret
test
imul
cwtl
jmp
jnp
mov
jmp
scas
ja
js
pavgw
insl
lods
dec
push
jbe
repz
sub
nop
insb
and
xor
cmp
adc
xchg
cmp
in
scas
sub
mov
pop
cli
aas
lret
push
gs
adc
aaa
dec
cmp
fiadds
pop
mov
jne
push
mov
jbe
fidivs
out
mov
fsubrl
inc
jp
pop
loopne
add
xchg
in
jne
fmulp
or
in
cmp
rcll
mov
cmp
enter
inc
pop
mov
push
daa
out
aam
in
test
je
mov
dec
xor
jae
clc
lock
mov
sbbl
push
cmp
sub
outsb
aaa
dec
cmpsl
popf
jmp
das
inc
jb
into
mov
fcomps
cmp
pop
xchg
lods
int
fimuls
into
test
lahf
inc
inc
lods
call
push
bound
inc
mov
cltd
iret
sub
leave
out
add
lcall
mov
mov
mov
sbb
into
xlat
mov
push
shl
aam
hlt
ja
cmp
scas
fisubs
push
outsb
push
sbb
in
mov
sbb
sbb
push
and
outsl
mov
sbb
mov
lret
add
stc
movsb
bound
jg
push
mov
movsb
stos
fistl
pushf
dec
int3
or
cmpsl
push
sub
mov
popl
addr16
mov
cwtl
inc
mov
lahf
sub
cmp
add
and
mov
shlb
icebp
pushf
xor
into
ret
mov
pop
and
sbb
icebp
out
add
jp
pop
pop
xor
fwait
bound
dec
fidivl
push
mov
mov
mov
mov
cmp
add
lret
add
pusha
push
arpl
mov
fadds
stos
sbb
inc
jecxz
sbb
test
lret
and
sub
int3
mov
mov
iret
add
pop
jp
and
sbb
cmpsb
inc
fs
xchg
mov
test
dec
add
test
dec
pop
lahf
sahf
xor
roll
fsubs
imul
sub
fnsave
sbb
cmp
sbb
subb
or
adc
jmp
mov
jae
pop
in
xorb
test
test
testb
cmp
push
inc
call
bnd
lea
sar
jne
test
test
lea
pop
or
or
cmp
mov
outsl
flds
or
mov
pop
daa
and
lahf
jecxz
lcall
pushf
lock
das
cmpsl
lds
shl
mov
aam
dec
dec
imul
add
pop
push
sbb
ja
or
pop
enter
cli
dec
pop
rcr
push
xchg
pop
cmp
test
cmp
icebp
fcmovne
adc
jbe
int3
xchg
mov
cmp
mov
in
add
test
scas
sti
leave
icebp
aaa
mov
aad
leave
ljmp
rorb
xchg
je
sub
shlb
subl
sbb
dec
mov
imul
push
in
mov
fcompl
les
aaa
fs
outsl
fdivrs
mov
orb
adc
fdivrs
je
jbe
push
sahf
jae
dec
movl
inc
push
das
popa
jg
std
cmp
std
mov
or
xor
int3
movsl
gs
mov
fiadds
dec
xchg
cmpsb
imul
pop
lret
sbb
xchg
cmp
ja
lock
inc
pop
push
stos
mov
shrb
mov
aas
mov
cwtl
add
jecxz
js
pop
dec
inc
in
mov
adc
decb
movsb
ret
push
mov
mov
fdivs
insb
jbe
test
movsb
push
dec
cmpsl
shrl
pushf
mov
xchg
pop
mov
or
dec
push
loop
adc
xlat
sahf
push
push
jmp
dec
scas
jmp
aas
sub
mov
mov
sbb
pop
scas
mov
xchg
push
or
jbe
sub
popf
cli
repz
mov
daa
jg
rcrb
ljmp
xor
push
cmp
aad
bswap
sarl
xor
mov
push
sbb
xchg
into
or
out
mov
fadds
or
movsb
movsl
jmp
clc
test
sbb
das
xor
pop
mov
inc
cmp
lea
xchg
inc
pop
dec
cmp
jb
les
mov
jno
adc
inc
std
daa
xor
pop
xchg
jae
out
pushf
jo
and
insl
ret
push
sbb
lock
jl
js
cld
out
push
test
push
inc
push
or
mov
icebp
pop
enter
lret
loopne
sahf
imul
or
sti
push
mov
pushf
pusha
out
cmp
fsubrl
xchg
ret
fwait
imull
rorb
dec
mov
pop
ret
inc
cld
ret
xor
stos
add
sbb
jnp
outsl
or
leave
dec
push
xchg
mov
in
imul
in
rcr
sbb
pushf
fs
add
arpl
fcos
inc
xchg
dec
cmpsb
cmp
mov
ja
test
iret
shrb
inc
lods
dec
push
sbb
or
cmp
add
push
ss
xchg
push
dec
jle
or
mov
push
mov
out
xlat
not
and
xor
addb
pop
loop
je,pt
cli
ljmp
xchg
ljmp
andl
out
xchg
sbb
mov
imul
push
int
xchg
es
sahf
call
cltd
mov
xor
sbb
lcall
pop
sbb
outsl
cmc
xor
lock
push
mov
and
ret
jne
mov
test
add
mov
push
lret
push
fwait
mov
aaa
xchg
jge
jae
sbb
xor
fadds
pop
pop
orb
adc
pop
sbb
dec
adc
addb
or
inc
mov
sbb
mov
iret
outsb
popa
hlt
lret
jp
mov
sbb
leave
cmp
stos
jecxz
mov
adc
sub
or
xlat
and
stc
mov
mov
inc
lods
cwtl
js
ret
shl
idivl
rorl
lods
call
pop
xor
icebp
or
mov
in
addl
arpl
aaa
test
gs
sub
jb
mov
jge
movsl
in
xchg
sub
xor
mov
cmpsl
cmc
xchg
sub
cmp
sbb
inc
mov
into
test
fcompl
fs
sahf
mov
mov
add
dec
jno
xlat
lds
pop
add
xor
add
pop
dec
mov
dec
inc
dec
scas
inc
xorl
punpcklbw
imul
jmp
loope
aam
stos
jmp
ljmp
push
adc
testb
cltd
ret
pusha
cli
scas
std
adc
lret
sub
or
xchg
ficomps
cmp
insb
or
in
sbb
cmc
lcall
pop
jl
jl
gs
sbb
jnp
stc
stc
mov
jns
mov
fs
daa
jp
or
xlat
jg
push
fld
jb
add
sub
in
das
stos
cmpsl
dec
mov
shll
sbb
fxch
push
out
fiaddl
pop
push
dec
inc
ss
lret
cmp
ss
int3
add
out
pop
bound
stos
dec
push
xchg
out
sub
xchg
in
mov
dec
pop
rolb
fsubl
mov
mov
pop
push
aad
dec
inc
mov
lret
mov
mov
dec
mov
fadd
popa
add
in
ret
mov
fs
int
push
mov
insl
add
cmovb
dec
repnz
jg
fucomi
xchg
adcl
and
aam
and
rol
cmpsb
pop
testl
sub
loopne
push
pop
test
mov
and
daa
in
xchg
icebp
pop
mov
in
mov
push
mov
aaa
enter
mov
outsb
mov
xchg
test
sbb
xor
int
pop
icebp
sbb
pop
das
int3
pop
and
xchg
test
add
sar
jle
mov
pop
int
xorl
mov
stos
test
push
xor
cltd
mov
inc
stos
imul
cmpsl
pop
gs
inc
test
jae
aas
in
daa
popa
jnp
out
xor
lret
jo
adc
rcll
push
jge
lods
pop
js
mov
out
dec
jle
lods
in
cld
push
add
pop
andl
cmpsl
mov
shl
fcoml
loop
or
orl
hlt
jns
or
mov
or
cld
clc
jl
sbb
imul
jns
cmpsl
inc
nop
pop
std
push
out
cmp
bound
cwtl
neg
sub
pop
jg
inc
jp
imul
leave
je
mov
bound
ror
sbb
rol
jbe
loopne
out
inc
sbb
test
mov
cltd
test
dec
aaa
xor
dec
mov
pop
mov
outsl
xchg
mov
outsl
cmp
fcoml
pop
mov
jae
sub
dec
dec
lods
sub
push
cmp
test
pop
pop
scas
sub
sarl
lea
adc
jmp
xor
pop
dec
fcom
inc
adc
push
inc
pop
xor
adc
fmuls
mov
dec
mov
sub
mov
jge
jge
ret
pop
popf
or
add
mov
imul
pop
gs
xchg
xor
cmp
fs
inc
jo
out
outsb
pop
rolb
insb
cmpsl
sbb
mov
xchg
xor
cmpsb
call
lcall
xchg
cwtl
xchg
stos
rcr
adc
mov
into
jg
subl
pop
cli
inc
lock
pop
cmp
fists
add
out
test
movsl
add
orb
outsl
jnp
test
fprem
hlt
pop
mov
jne
mov
jl
push
or
fbld
mov
jg
cmp
out
cld
cmpsb
and
mov
jns
sub
dec
adc
mov
inc
push
mov
mov
popf
mov
dec
or
xor
arpl
out
icebp
dec
xor
mov
mov
or
sbb
cmpsl
js
push
jge
cltd
stos
sub
xor
test
int
movsl
jo
dec
dec
jmp
cli
repnz
push
test
mov
pushf
fld
popa
stos
sahf
and
mov
adc
lods
ljmp
pop
out
testl
out
pop
in
or
jecxz
add
and
les
mov
inc
mov
dec
icebp
jo
mov
xorb
mov
cmp
es
leave
adc
test
enter
fs
fcoml
ss
jno
jge
fs
mov
pop
rorb
jno
push
ds
or
xchg
out
jg
int
vpmacsswd
dec
jns
movsb
xchg
push
fistpll
sbb
hlt
loopne
mov
sub
out
inc
mov
cltd
popa
jmp
pop
or
lock
popa
pop
repnz
push
fbstp
mov
or
sub
int
cmp
xor
jnp
and
dec
pop
or
push
adc
loop
adc
and
push
dec
mov
mov
adc
mov
push
jl
lea
imull
ss
subl
mov
std
push
int3
cmpsb
inc
push
pop
test
and
popf
jge
mov
fdiv
xor
test
stos
cmp
lods
adc
out
pop
adc
cmp
jno
sahf
push
lret
aas
sub
cmp
testb
repz
sbb
dec
lds
iret
cwtl
cs
out
dec
jle
in
ljmp
or
dec
mov
mov
adc
int3
jnp
fldl
cmp
mov
jge
and
dec
cmp
dec
imul
mov
mov
fcoml
xor
popa
jns
jnp
and
push
add
sbb
pop
pandn
dec
jle
cmp
and
adc
dec
push
cmp
outsl
push
testl
popf
cltd
int3
sbb
mov
sbb
cmp
mov
clc
xchg
push
push
movsb
into
xor
inc
sahf
cmp
hlt
push
mov
js
mov
or
add
xchg
mov
vpsubusw
aad
mov
andl
cwtl
jmp
mov
mov
push
push
inc
or
out
int
dec
inc
xchg
fst
cmc
push
cmpsl
jle
in
fcompl
fnstsw
add
stc
inc
insl
xor
repnz
inc
sub
outsb
nop
xchg
and
in
aas
inc
cltd
add
ja
mov
inc
mov
fildll
pop
xchg
inc
das
movsl
stos
loop
cmpsl
cmc
pop
push
inc
jbe
lret
cwtl
adc
mov
push
mov
rorb
les
ja
inc
inc
insl
lcall
jl
dec
pop
xchg
dec
xorb
push
jnp
lods
imul
and
mov
rcrb
rcl
stc
in
mov
popa
or
adc
or
sbb
inc
inc
movsb
ljmp
xchg
xor
inc
fwait
push
in
js
test
cld
bswap
shll
cmpsl
add
xchg
popl
rclb
push
xchg
dec
int3
data16
xchg
add
adc
pop
lods
jns
pop
push
mov
in
lds
push
sbb
pop
outsl
lock
sarl
fincstp
and
cmp
and
jo
test
mov
ljmp
in
jle
inc
xlat
ds
mov
jo
adc
mov
dec
test
ja
imul
inc
and
push
cmpl
inc
cmp
clc
popa
xchg
por
out
sbb
test
testl
repz
pushl
push
mov
xchg
shll
jecxz
xchg
pop
and
sbb
mov
stc
add
pop
adcb
mov
cmp
mov
sub
and
push
xabort
iret
dec
clc
imul
jns
push
inc
fcomip
add
dec
daa
push
mov
cmpsl
icebp
push
aad
and
loopne
mov
mov
sub
or
xor
or
or
imul
movsl
imul
add
loopne
pop
cltd
push
loopne
push
shll
push
mov
iret
shlb
mov
shrl
scas
xor
std
rorb
jno
mov
add
mov
movsb
enter
fsubl
fcmovb
icebp
cltd
xor
and
inc
push
rcll
sub
dec
cs
and
imul
or
push
aaa
jp
nop
xchg
xchg
popa
cmp
xlat
out
lea
jle
xchg
or
jp
enter
es
xor
push
lcall
pop
sbb
and
mov
mov
jl
ljmp
fdivrp
movsl
dec
movsb
jnp
in
inc
shr
mov
jecxz
cltd
jno
aas
into
int3
les
adc
scas
mov
mov
fnstcw
sbb
insl
add
stos
psubsw
and
and
pop
and
aad
xor
jo
adc
adc
js
test
xchg
gs
je
push
sbb
es
int
jecxz
and
add
pop
sbb
add
push
ss
push
pop
pushf
lahf
jmp
fisubrl
mov
sahf
andb
push
leave
fwait
lock
movsb
popa
sbb
cmp
lds
jo
dec
mov
or
mov
cmp
and
in
cmp
mov
sahf
and
dec
cmpsb
or
push
and
jp
jle
fisubl
sub
test
out
int3
call
arpl
cli
add
dec
lods
lods
add
mov
mov
int
inc
push
jb
out
fists
jle
int
in
jmp
xchg
ficoms
push
lret
aam
xchg
or
mov
adc
nop
cmc
push
and
sarb
xchg
add
push
or
fildll
dec
jle
imul
or
bound
stos
lods
lahf
jb
cmc
in
cltd
imul
mov
pop
inc
lret
cmp
data16
add
sub
and
sar
loop
cmp
test
and
nop
sbb
mov
lret
jnp
jo
mov
dec
shlb
dec
repz
lea
cmp
stc
mov
divl
aaa
or
nop
jmp
lea
rclb
scas
mov
jecxz
fnstenv
shlb
jl
xchg
fcoms
mov
dec
pop
rorb
loop
sub
daa
std
and
push
and
sub
pop
rcrl
jb
outsl
fsubrs
in
ret
adc
or
xchg
sbb
xor
mov
jl
test
add
xchg
push
cmpsb
jo
xchg
inc
in
dec
xor
adc
lahf
stos
dec
push
fisttpl
stos
push
cmp
add
push
add
fnstenv
out
aas
jle
add
aad
pop
pop
adc
push
xchg
dec
rcr
mov
cs
imul
in
js
mov
adc
cmp
lea
and
loop
scas
adc
stos
std
mov
pop
lea
out
dec
popa
push
test
mov
lret
shrd
stos
sub
jg
sbb
movups
imul
cltd
add
imul
sbb
js
jmp
out
cmp
pop
xor
sti
les
fwait
xchg
add
inc
lret
xchg
outsl
inc
dec
xchg
out
inc
adc
out
sbb
jmp
pusha
sbb
xchg
lcall
pop
lea
cmpsb
add
dec
jmp
adc
cwtl
sub
cmpsl
cmp
jmp
dec
orb
dec
fldt
cld
jg
mov
call
stos
sub
adc
lahf
fwait
clc
push
arpl
add
cmpsb
in
pop
gs
aam
std
cmp
out
fstl
pop
stc
loope
pop
nop
jecxz
je
dec
pop
ss
jecxz
dec
js
scas
testb
add
jp
xor
cmp
mov
jb
inc
pop
loope
scas
mov
rcl
mov
loopne
sub
mov
pop
out
cmpsl
addr16
shr
and
jne
mov
and
jmp
inc
ja
ret
adc
adc
daa
adc
in
aam
inc
pusha
sub
cli
xor
ljmp
shll
sahf
ss
sbb
xchg
cmp
les
adc
insb
insl
adc
inc
lahf
and
sbb
mulps
int3
xchg
sbbl
movsb
jae
mov
sbb
test
jno
pop
in
pop
cmpb
cld
inc
push
jno
ds
push
test
jl
dec
loope
push
movsb
jmp
inc
dec
dec
adc
lods
in
jbe,pn
xchg
fldl
dec
jp
jg
jmp
and
negl
addb
lods
inc
inc
adc
cmpsb
and
mov
mov
mov
out
in
bound
lret
mov
mov
and
aad
adc
fwait
pop
inc
push
inc
and
and
xchg
push
jbe
xor
push
rorb
push
dec
sar
push
lds
add
dec
daa
or
fcoml
movsl
dec
jmp
test
scas
fildll
cwtl
xchg
inc
or
sti
clc
jbe
mov
jbe
sbb
sarb
dec
adc
push
iret
mov
xor
mov
lret
xchg
and
push
and
shlb
push
mov
repnz
out
sbb
scas
in
fidivrs
sub
and
sub
loopne
cmp
xchg
mov
into
loope
push
outsl
fidivl
adc
rclb
std
mov
aaa
cmp
pop
lods
push
lea
push
ja
cmp
out
in
scas
jno
cmp
pop
sti
mov
cli
sti
adcb
pop
mov
xchg
cmp
mov
test
xchg
data16
mov
xchg
loop
in
push
movsl
xchg
mov
pop
in
repz
xlat
insb
insb
mov
mov
cmp
movsb
cmp
test
rolb
dec
aam
xor
fcmovbe
dec
dec
jmp
mov
pop
ja
and
jecxz
push
outsb
jmp
scas
mov
stc
xchg
push
pushf
cli
cmpsl
inc
pop
movsb
lahf
xchg
leave
lds
dec
stc
add
add
xorb
mov
test
inc
mov
push
dec
dec
scas
ja
and
pop
mov
inc
aad
arpl
mov
movsb
test
mov
rcrl
hlt
pop
int3
pop
push
js
dec
mov
out
mov
sbb
ss
cmc
lods
dec
es
sub
mov
fimuls
lock
xchg
and
rcrb
out
dec
push
and
adc
loope
in
xchg
sbb
pop
into
loopne
mov
les
and
mov
bound
jmp
repnz
dec
dec
xchg
inc
mov
fcomps
pop
or
ja
mov
inc
push
pop
xor
add
push
and
mov
jae
scas
cmc
in
test
pop
lret
sub
cltd
dec
jns
shrl
pop
int
jmp
fisttpll
hlt
test
ja
cmpb
rcr
repnz
inc
jnp
jns
stos
sbb
rcrl
andl
sti
fisttpll
gs
call
fnsave
push
nop
mov
sub
xchg
ret
inc
es
ja
lcall
cmp
dec
fdivrl
pop
mov
xor
adc
fsave
sbb
icebp
stos
loopne
sti
sub
jg
push
dec
ds
movsl
sahf
cmp
xchg
adc
mov
add
inc
pop
adc
and
mov
in
in
test
jle
inc
pop
in
cli
adc
push
xor
pushf
pop
inc
and
mov
pop
jno
nop
push
lods
push
imul
mov
out
push
dec
mov
sub
push
dec
xchg
pop
cmp
fwait
sar
xor
jl
faddp
jge
or
mov
mov
mov
dec
stos
mov
and
mov
mov
sahf
jae
scas
xchg
pop
mov
enter
mov
adc
jge
out
imul
jns
xor
sbb
jl
fadds
cmc
notb
loopne
jecxz
aam
mov
rclb
popf
sbb
and
xor
scas
cmp
add
xorl
add
mov
jmp
inc
arpl
xchg
iret
test
mov
xchg
pop
rcr
push
icebp
inc
subl
xchg
enter
cmp
xor
lret
stos
mov
in
mov
jne
icebp
imul
int3
adc
push
add
inc
aam
cmp
jle
xchg
js
pop
sbb
cmpl
mov
cs
in
cmp
outsb
mov
rol
cmpsl
lret
lret
pop
dec
cmp
sub
and
sub
test
or
cmc
mov
out
sub
and
sti
js
hlt
scas
xchg
test
and
ljmp
cmpsb
pop
lret
push
scas
xchg
jecxz
inc
scas
clc
mov
push
dec
push
pop
jno
lock
and
push
call
jl
lods
and
or
dec
xor
es
add
out
sbb
xchg
xor
sbb
pop
lods
jb
dec
ja
or
bound
cs
aam
and
enter
add
dec
add
fs
push
sarb
jl
mov
hlt
cli
adc
pop
stos
mov
push
pop
stos
fimuls
gs
xor
sub
or
ret
in
arpl
lds
cmp
mov
cmp
subl
inc
dec
inc
lods
or
mov
fadds
imul
jl
ds
arpl
mov
or
mov
inc
mov
out
push
lcall
jmp
cmp
sbb
inc
xor
adc
clc
stos
xchg
ret
cwtl
pop
ljmp
idiv
pop
add
xchg
jp
cli
xor
mov
popa
stos
shll
mov
cmp
cmp
sub
lock
adc
xchg
in
jnp
bound
push
test
pop
or
and
in
into
loopne
fsubr
js
ret
jle
out
cmp
fcmovnb
mov
add
bound
push
loope
mov
out
mov
aad
push
cli
mov
xor
leave
or
cmp
repnz
iret
pop
les
ja
shlb
add
testb
fisubs
leave
inc
test
jg
adcl
test
rol
pusha
or
ja
dec
cmc
add
xor
lods
out
loopne
ficomps
mov
adcb
lds
or
add
cmp
mov
jne
cmp
cmp
inc
dec
ljmp
out
and
aaa
ljmp
lods
daa
mov
nop
add
add
cmp
iret
and
cmpsb
stos
push
ret
mov
pop
mov
int3
and
nop
rcrb
std
outsl
xchg
je
stos
mov
jge
imul
inc
je
mov
in
inc
xchg
and
std
pop
jae
sub
or
inc
pop
jmp
sahf
movsb
pop
dec
add
leave
outsb
jecxz
test
ret
gs
mov
jno
inc
push
aaa
or
pusha
pop
mov
mov
or
sub
mov
lods
incb
fcmovb
rcll
push
sbb
in
sbb
int
fildll
iret
mov
leave
popa
xor
lea
sbb
add
xor
jb
push
jbe
mov
idivb
insb
dec
jnp
xor
cltd
xchg
stos
into
fdivrs
dec
mov
iret
fmul
xor
std
sahf
or
and
pop
ret
mov
stos
mov
mov
sub
add
mov
mov
and
insb
in
lods
xchg
divb
pop
sub
add
cli
jno
xchg
mov
mov
push
imul
jo
in
scas
adc
mov
pop
jne
cmp
lea
inc
aaa
pop
pop
loop
mov
sub
dec
cltd
push
jge
sbb
adc
lods
in
hlt
insb
adc
stos
adc
pop
sub
xchg
rcr
push
sub
incb
faddl
sub
pop
lret
rolb
jl
pop
jecxz
push
push
mov
icebp
xor
icebp
sub
pop
sbb
cmp
sub
testb
repnz
xor
call
mov
data16
sti
loop
or
ss
sbb
cmp
push
sbb
addb
dec
sub
inc
xor
mov
out
cmp
push
rcrb
inc
sbb
outsb
dec
fsubp
sti
fsubs
or
mov
cli
or
adc
xchg
jo
dec
xchg
lret
xchg
frstor
cmp
hlt
push
sub
fsubl
mov
ljmp
repnz
push
loope
fisttpll
mov
jnp
mov
ja
or
mov
subb
and
sbb
scas
adc
lahf
push
cmpsb
dec
dec
lret
mov
sbb
fnstenv
xchg
shrb
and
adc
push
fadd
icebp
push
cli
fisttps
jecxz
lea
testl
inc
scas
jmp
das
popw
pop
scas
cmpsb
mov
repnz
icebp
scas
mov
insl
xor
in
xchg
xchg
inc
mov
ficomps
sbb
rcrb
jnp
mov
pop
imul
in
subl
test
mov
mov
jb
mov
pop
ret
push
lods
adc
and
mov
mov
es
cmp
xchg
shrb
in
fmull
fildl
adc
ret
push
lods
loopne
sbb
int3
dec
je
and
xor
mov
inc
jle
stos
aas
out
push
jp
and
test
pushl
jae
mov
cmpsl
cmp
sbb
dec
lods
rcl
test
mov
data16
lods
stos
movsb
scas
push
mov
test
dec
leave
sub
in
call
pushf
push
xor
int
adcl
call
movb
inc
inc
insl
xor
pop
popf
push
fs
sub
ds
nop
push
pop
jecxz
jnp
sbb
jb
repz
mov
mov
adc
cmpsl
xchg
push
mov
bound
fs
mov
mov
lock
mov
lcall
gs
adc
aaa
pop
leave
and
jl
mov
sub
stos
fidivs
sbb
mov
jae
les
cmpsb
outsb
imul
subl
and
rcr
jmp
aas
push
cmp
stos
repnz
xlat
imul
sbb
mov
dec
daa
popf
pusha
lahf
mov
and
rcll
xchg
mov
sub
in
jl
test
jle
movsl
dec
insb
ret
jno
insl
and
ja
lds
cmp
or
cmp
and
jns
xor
mov
movsb
pop
cmpsl
mov
xor
mov
dec
scas
and
cmpl
push
inc
pop
inc
sub
lcall
jp
jns
imul
mov
repz
out
mov
mov
in
daa
lcall
adc
adc
dec
xchg
sti
xor
sbb
cmp
fistpl
int
push
lret
and
imul
out
into
sti
fs
je
xorb
repnz
pop
fadds
mov
adc
iret
pusha
and
mov
stos
icebp
pushf
leave
stos
outsb
add
lret
aam
loopne
das
addr16
pop
imul
push
icebp
ljmp
in
push
sbb
or
xor
nop
aad
idiv
mov
mov
out
enter
cli
mov
mov
in
mov
mov
and
fiadds
sbb
jg
jno
inc
jge
mov
out
orl
int3
lods
cmc
popf
mov
push
addb
adc
mov
cmp
xor
stos
adc
jno
leave
xor
test
movsb
lret
fnstcw
frstor
add
fidivrl
in
mov
jb
aas
scas
mov
rcl
out
cmc
push
or
popf
lds
dec
pushf
xchg
adc
cltd
push
mov
ret
aad
xchg
mov
mov
sbb
lods
sbb
inc
loop
dec
mov
inc
adc
into
ds
stos
xchg
ljmp
out
in
adc
cmpsl
inc
mov
stos
andl
fcomps
fldenv
xchg
cli
cltd
mov
sbb
pop
mov
xor
or
loopne
aam
fs
fdivs
frstor
pop
lret
jg
mov
push
and
shlb
dec
push
jb
jp
dec
pop
push
mov
das
jo
mov
push
in
outsl
and
jmp
bound
ret
mulb
shlb
into
inc
cld
outsl
cmpsb
ret
sub
and
jns
loop
fcomp
pop
dec
push
pop
sbb
cmp
cmp
jns
lock
mov
push
sti
inc
adcb
enter
inc
repz
inc
and
mov
es
push
fisubs
lfs
loope
xchg
stos
adc
sbb
rcrb
inc
cmp
rorl
lock
push
dec
mov
mov
mov
es
repnz
xchg
std
out
inc
out
fwait
addb
lret
orl
mov
sbb
mov
jo
inc
dec
adc
lcall
mov
nop
push
lea
cmpsl
cmpsb
ret
pop
and
adc
mov
scas
ja
xchg
jno
or
push
jnp
aaa
pusha
xor
or
test
roll
adc
jnp
dec
jb
adc
add
dec
lret
stos
push
lea
pop
ljmp
jnp
subl
xchg
dec
pop
pop
adc
pop
xor
xor
testl
lea
int
xor
pop
das
add
insl
scas
shll
rcrb
dec
in
inc
cmp
lret
adc
enter
mov
in
ja
push
inc
jae
cmc
or
enter
scas
adc
push
pop
arpl
insb
xchg
fdivs
inc
jmp
pop
mov
jmp
mov
jle
add
or
dec
cs
lock
cld
pop
xchg
ja
popl
jnp
arpl
or
adc
stos
xchg
and
jo
inc
mov
fucomip
fs
push
cmp
aas
cmc
and
inc
push
cwtl
lret
pop
mov
cmc
mov
fdivs
rcll
outsb
xor
fcomp
cmp
in
jmp
jg
or
adc
mov
pop
mov
mov
mov
testl
fidivl
out
insb
xchg
add
setg
cmpsb
out
sbb
cmp
mov
daa
adc
inc
adc
ficoms
jae
cmpsl
mov
pushf
jecxz
aaa
adc
push
sub
cmp
push
cmp
repz
jns
ljmp
push
insb
jnp
xchg
int3
push
push
add
leave
in
xlat
mov
inc
cmp
scas
sub
xor
cmp
inc
repnz
and
xor
jl
adc
outsb
out
add
cmp
and
cmp
jae
aam
shrb
push
xchg
sbb
pop
cmp
ficoms
xor
add
aas
stos
aam
lret
add
or
or
cs
sub
cmp
jmp
push
adc
ret
push
mov
cmp
mov
sarb
inc
push
addb
jnp
add
jecxz
pop
lahf
cmp
subb
sbb
inc
cmp
daa
xchg
pop
jne
pop
sub
lods
jmp
out
add
sbb
or
idivb
scas
jg
fidivrs
clc
push
hlt
cli
and
xor
popa
dec
adc
mov
pop
push
pop
or
cmp
cmc
dec
mov
and
adc
inc
hlt
fldt
pop
js
and
or
data16
rcll
fists
sbb
dec
cmpsl
xlat
mov
inc
sbbl
mov
mov
pushf
add
in
pushf
movb
mov
addr16
bound
hlt
push
jg
inc
push
dec
lods
or
jge
icebp
shlb
sub
aas
xchg
fcompl
pop
int
jg
jp
pop
mov
push
jl
popa
fdivl
cmc
fs
ds
inc
ret
sub
jns
adc
push
out
mov
mov
lea
and
mov
pop
rcll
xor
sbb
pop
lods
mov
fidivrl
xor
jmp
scas
pop
es
push
xlat
xchg
mov
jle
fildl
jle
addr16
add
aaa
add
mov
hlt
cmp
add
cmp
shlb
xor
arpl
out
fmuls
dec
rcrl
jo
sub
decb
aad
lret
shlb
pop
sti
out
inc
and
prefetcht0
into
out
mov
pop
ficoms
pop
push
push
test
jp
pusha
adc
dec
sub
push
xor
clc
call
fwait
pop
mov
test
outsl
adcb
leave
push
xchg
fldcw
data16
inc
cmpsl
xor
add
call
and
cmpsl
scas
mov
sub
shlb
movsb
sbbl
dec
into
shr
sub
mov
addr16
je
sbb
cmpsb
bound
cmpsb
es
adc
es
fsubrs
jmp
push
jmp
lret
adc
and
or
ljmp
xor
les
pop
pusha
stos
jno
push
cmpsl
movsl
or
jns
repnz
xchg
inc
shrb
fbld
cmc
daa
add
repz
push
or
nop
cld
aaa
mov
mov
pop
add
das
add
cmp
xchg
ret
mov
jle
in
std
arpl
inc
sub
jae
int
mov
jmp
sbb
sbb
and
push
xchg
cmp
xchg
inc
pop
addr16
sub
ljmp
sbb
imulb
inc
out
xchg
cmc
les
or
lods
cltd
pop
push
add
in
cs
xor
add
fcmovnb
jnp
mov
cmp
add
in
and
push
or
pop
fiadds
repnz
push
adc
jb
jmp
xchg
push
sub
pop
cmc
mov
shlb
xorb
sub
mulb
xchg
scas
and
daa
out
popf
dec
fimull
jmp
xchg
cmpsb
lods
mov
push
lea
cld
jnp
stos
jmp
xchg
lea
dec
sub
push
mov
lret
pop
mov
mov
shrb
xchg
mov
jp
jecxz
test
outsl
orb
xchg
or
mov
or
xchg
fidivrs
inc
mov
or
inc
loopne
sahf
cmp
and
lcall
popl
mov
out
mov
sahf
dec
nop
mov
aaa
icebp
mov
ret
popf
aam
imul
adc
add
inc
or
fmulp
or
inc
movsb
dec
shr
sbb
or
sbb
pop
test
adc
test
cmp
jg
xchg
pop
ret
mov
fcoms
dec
hlt
or
mov
out
push
xchg
out
sub
into
stos
or
lcall
mov
test
andl
lahf
jg
lods
shlb
cmpsb
push
subl
add
dec
enter
sbb
push
sub
dec
jnp
xlat
push
in
mov
sub
push
adc
loope
shll
mov
xchg
fwait
lcall
cs
gs
and
rol
loopne
daa
cs
adc
loopne
cs
shlb
xor
ret
adcl
cmpsb
in
dec
outsl
cli
bound
sbb
dec
cmp
lods
cmp
add
xor
jmp
pop
xor
je
ss
rcl
mov
lahf
pusha
mov
xchg
movsb
xchg
rorb
sbb
ds
arpl
test
ljmp
sbb
cld
push
repnz
iret
mov
and
mov
insb
xchg
fcompl
sbb
jmp
jne
lds
inc
test
jl
add
mov
jecxz
mov
jle
inc
lret
scas
loope
or
pop
stos
rcll
push
push
iret
mov
data16
xor
dec
mov
sbb
cli
add
daa
fisubrl
aaa
jnp
inc
sbb
inc
xchg
inc
popa
cwtl
cmp
push
ret
push
mov
sbb
adcb
es
add
jmp
loopne
int3
test
xchg
adc
ret
lret
push
push
pop
xor
push
mov
stos
push
adc
push
mov
popa
lock
dec
inc
scas
mov
into
xlat
loop
add
inc
jbe
cmc
lds
fdivrs
xchg
mov
xchg
add
jae
push
pop
sahf
push
sarl
and
mov
gs
test
add
pop
daa
out
test
or
mov
cmp
dec
xor
lret
jp
sub
xchg
push
daa
xchg
test
ret
sub
mov
push
enter
adc
jnp
cmp
in
jae
pop
sti
mov
sbb
mov
add
sub
psubw
jg
adc
mov
int
es
mov
pusha
leave
xchg
inc
dec
mov
dec
pop
std
lods
loope
insl
sti
dec
in
mov
sbb
inc
subb
jmp
push
jo
mov
lret
mov
int
mov
mov
xor
nop
sbb
lods
push
jb
xchg
rclb
pop
cmp
mov
lahf
fidivl
xchg
fists
inc
dec
aam
stc
sub
cmp
add
aad
cli
cmp
dec
mov
mov
jmp
mov
aaa
sub
outsl
int3
jb
adc
mov
or
xor
stc
cld
mov
adc
xchg
dec
push
out
das
add
jg
cs
hlt
int3
mov
je
mov
jp
mov
cmp
cs
mov
mov
adc
pushf
sbb
xor
jnp
jg
sub
cmp
dec
adc
cmp
pop
test
cmp
jnp
pop
in
inc
xchg
sbb
mov
in
jge
stc
lret
sbb
mov
xlat
outsl
jnp
xor
test
pop
popa
ja
test
gs
out
lret
and
out
jo
out
setno
icebp
roll
ret
lods
cltd
mov
and
mov
xchg
sub
dec
int3
and
or
pop
inc
inc
mov
push
int
xchg
sub
jg
mov
sub
dec
xor
mov
xlat
call
dec
jmp
les
lahf
mov
fadds
or
adc
cmp
dec
lods
fs
daa
mov
out
inc
sbb
outsl
push
dec
rol
mov
mov
in
and
mov
adc
sub
dec
data16
in
xor
adc
cmp
jbe
insb
fdivs
test
in
movsb
lahf
ret
push
les
mov
pop
sub
cmp
js
mov
fistl
ret
sub
mov
sub
lds
push
inc
inc
sti
fcmovu
je
mov
cld
aam
mov
cmp
mov
sahf
movsb
lods
xchg
push
fisubrs
loope
aaa
push
dec
cwtl
add
xchg
jbe
mov
cmp
in
pop
mov
push
cmp
mov
and
popf
pop
xor
popa
dec
rclb
and
imul
mov
cmp
and
add
and
add
or
mov
lahf
mov
inc
and
ja
inc
mov
jae
jnp
sbb
sti
das
enter
pop
rcll
adc
inc
push
sub
mov
cmp
out
out
arpl
xor
movzwl
sub
roll
adc
aam
mov
push
sbb
rorl
mov
add
xlat
enter
jle
cmp
loopne
test
dec
paddusb
int3
ret
mov
mov
inc
popf
inc
mov
lahf
pop
mov
jle
pop
pop
cwtl
shll
mov
push
je
call
cs
sub
pop
inc
push
sbb
xchg
roll
mov
sti
jp
xchg
imul
in
lods
pushw
cmp
mov
lods
xchg
hlt
push
push
loopne
icebp
out
jb
push
icebp
or
cld
xor
gs
add
push
push
je
mov
xchg
addb
jg
lret
sbb
xorl
mov
bound
pop
test
pop
stc
mov
adc
pop
out
add
inc
pop
mov
mov
insl
mov
mov
ljmp
scas
movl
inc
aaa
mov
push
int3
or
push
sarl
xchg
add
bound
lcall
cmpsl
jmp
ljmp
and
add
lea
cld
mov
sbb
decb
mov
push
minps
mov
ret
ss
or
dec
push
jo
in
ja
popa
or
test
inc
or
and
xor
add
inc
fisttpl
lods
and
inc
jbe
jg
add
lahf
jecxz
push
jle
insb
imul
rcrl
xlat
fisubrs
ja
or
iret
mov
adc
push
test
shlb
xchg
pusha
mov
std
and
cmpsl
incb
dec
pusha
xchg
mov
xor
stos
subb
cmp
add
in
dec
ret
fcmovnbe
daa
xchg
inc
stos
into
push
rcrl
lds
cli
mov
nop
adcl
mov
jae
les
pop
dec
dec
cmpsb
cmp
out
mov
xor
push
gs
loopne
push
sbb
es
sbb
test
cs
aad
push
in
out
dec
in
jns
das
popf
jb
fs
mov
in
push
lcall
mov
or
jmp
lahf
ja
sub
in
shlb
and
insl
fstpt
jp
outsb
imul
dec
sar
mov
add
dec
sub
lock
adc
jae
dec
or
icebp
outsb
jne
insb
jb,pt
in
or
add
fs
sahf
test
jecxz
add
shlb
dec
jbe
cmp
out
xor
add
sbb
push
push
push
rorl
xchg
in
pop
scas
cmp
into
adc
mov
out
nop
into
dec
mov
mov
pop
dec
ljmp
dec
mov
add
mov
lcall
jb
or
sub
or
mov
and
jns
mov
add
and
arpl
xlat
sbb
hlt
das
sbb
mov
stos
sub
inc
ss
add
ja
push
xchg
mov
xchg
mov
iret
js
mov
or
jae
or
adc
fistl
push
xorb
push
add
sub
ja
sbb
add
js
and
cmp
add
xorl
call
lods
pop
pop
or
lret
aam
cmc
fldln2
shrl
shll
fwait
mov
inc
out
mov
or
push
mov
mov
lock
rorl
mov
adc
mov
int3
nop
adc
sbb
pop
sahf
xchg
inc
jge
cld
push
add
lock
lea
insl
loop
sbb
mov
iret
pop
sub
mov
out
js
jmp
fsubrp
sub
cs
in
std
test
insb
mov
add
js
lods
sub
ljmp
sub
push
mov
sbb
push
cwtl
jne
test
cltd
scas
mov
dec
pushf
mov
mov
movsl
loop
icebp
mov
mov
sti
jbe
scas
mov
sbb
add
lahf
fsubrl
push
mov
cs
sbb
xchg
and
jmp
push
fs
xor
mov
aas
pusha
push
je
xchg
daa
sub
bound
xchg
mov
push
imul
cltd
add
push
leave
movsb
and
pop
pop
jnp
mov
aaa
aam
shlb
mov
enter
mov
dec
arpl
and
lret
inc
mov
mov
sbb
mov
data16
test
daa
je
shlb
xchg
outsl
mov
in
mov
or
inc
lods
mov
dec
xchg
fs
xchg
jne
pop
pushf
jmp
jbe
imul
insb
divps
enter
data16
fisubl
adc
jl
xor
ss
in
add
ds
test
push
add
xchg
pop
xchg
cmp
outsb
repnz
adc
adc
inc
sbb
cwtl
imul
ret
pop
lods
cli
xchg
xor
popf
test
mov
dec
clc
or
lds
or
shlb
xlat
and
test
ret
mov
sbb
pop
mov
dec
pop
das
mov
cwtl
jmp
andb
ret
lock
mov
jns
inc
pop
mov
add
and
sbb
adc
shrb
sbb
mov
mov
inc
in
imul
dec
sbb
sub
jae
jmp
lock
or
jle
cmp
pusha
or
ret
xchg
push
mov
jo
test
xchg
repz
orb
ss
sub
scas
mov
xor
test
jg
wrmsr
mov
dec
mov
inc
push
xor
mov
gs
inc
lods
cmp
aam
outsb
fisttps
out
adc
adc
jnp
sbb
shl
xchg
xchg
pop
adc
jge
adc
sbb
js
add
popf
push
dec
add
lods
inc
mov
daa
xchg
pop
int3
divb
push
and
mov
push
aas
mov
rcll
in
push
push
inc
rcll
pop
xor
pop
out
inc
jno
cmpsl
filds
adc
pop
push
adc
cmp
fs
mov
mov
mov
bound
pop
xchg
fdivrs
scas
add
adc
dec
out
inc
sbb
push
jne
enter
mov
fs
std
fdivrl
cltd
cmpsb
or
xchg
xor
sub
fs
out
insb
pop
leave
mov
xchg
mov
inc
inc
jno
mov
mov
pop
push
mov
int3
cs
aas
or
rol
xchg
jmp
je
faddp
xchg
mov
cmc
adc
ret
xor
push
js
das
dec
inc
test
das
sub
sbb
lock
lods
stos
in
mov
push
fwait
jge
out
cmpl
cmc
xchg
je
xchg
scas
xlat
imul
fwait
mov
fwait
int3
or
jl
jge
add
mov
sub
mov
add
jle
cmc
scas
mov
cs
call
lods
roll
mov
inc
cs
lea
js
sub
lret
dec
lods
push
dec
cmp
loopne
adc
aam
imul
lcall
je
sub
and
cmpsb
mov
mov
les
inc
js
push
pop
push
loope
ja
scas
jle
leave
or
cli
sub
test
mov
fs
xchg
and
enter
dec
fadd
popa
mov
jnp
push
inc
xor
push
dec
xchg
cmp
add
or
push
outsb
bound
dec
inc
in
fistpll
and
push
pop
or
ja
pop
push
mov
adc
fcoml
xlat
js
mov
pop
adc
js
mov
ljmp
popa
ficomps
push
cmp
xchg
sub
mov
or
test
ds
push
and
in
loopne
jno
cmpsb
bnd
xchg
sbb
adc
sub
fwait
xor
jns
mov
ja
sub
sbb
out
adc
hlt
cmp
adc
lcall
sub
mov
les
jo
adc
bnd
ret
test
hlt
ret
lods
lds
push
stc
jne
lret
push
sbb
or
add
movsl
adc
fdivl
ljmp
push
scas
mov
int3
inc
es
mov
lods
sbb
cld
push
fists
xchg
xchg
test
add
push
lods
rcl
xchg
dec
addl
jmp
push
adc
jecxz
xchg
repz
jb
jo
jp
pusha
ss
js
clc
fs
push
xor
mov
add
outsb
xor
imul
sbb
sub
dec
cmp
negb
jg
cs
pop
adc
frstor
or
jmp
push
fnstenv
repnz
push
or
mov
arpl
dec
or
inc
jns
out
xor
rorb
sub
jle
mov
jns
out
mov
repz
loopne
xchg
rcr
mov
lcall
lds
pop
mov
in
iret
pop
std
test
push
mov
xchg
pushf
les
out
sub
sub
imul
cld
add
out
lret
mov
inc
jmp
mov
and
cmpsl
mov
outsl
aad
int3
or
adc
dec
jne
repnz
icebp
mov
sub
clc
je
repnz
xchg
insb
push
mov
dec
mov
sub
insb
push
imul
ficomps
out
jecxz
push
test
pop
add
xchg
out
clc
and
es
stc
fimull
dec
idivb
addb
sbb
inc
nop
xchg
sub
icebp
mov
cmp
cmp
or
rcrl
mov
pusha
xchg
xor
lret
pop
stos
ret
aaa
or
sbb
insb
mov
js
mov
out
or
movsb
pop
gs
add
push
or
sarb
pop
cmp
test
add
add
dec
mov
test
jmp
int3
js
or
and
hlt
sub
jle
mov
out
stos
aas
xchg
mov
cmp
out
pop
leave
pushf
repnz
mov
jnp
out
mov
in
pop
sahf
je
xorl
dec
lcall
ror
jo
mov
mov
movsb
xchg
mov
add
dec
into
aad
dec
imul
gs
and
int3
mov
decb
mov
fs
or
sbb
loop
mov
fmulp
mov
in
mov
ret
xor
cmp
mov
xor
ret
sub
cmpsb
shrl
shl
mov
pop
xlat
repz
inc
lret
stos
jg
stc
sbb
fisubs
dec
inc
cmp
inc
cmp
xor
jbe
push
jmp
add
in
mov
gs
add
pop
pop
lret
add
out
mov
inc
adc
inc
lods
movsl
mov
or
pushf
adc
in
out
xlat
repz
push
add
mov
lds
xchg
dec
mov
jbe
push
mov
shll
cmpsl
lea
rorl
and
inc
mov
ljmp
popa
or
push
imul
test
dec
mov
sbb
pop
mov
add
bound
sub
push
test
mov
daa
sub
pop
and
pop
push
movsb
jns
or
arpl
inc
push
aam
sahf
arpl
mov
shrl
cmp
sbb
xchg
je
jae
xchg
push
pop
xor
int
adc
addr16
fmull
add
xor
mov
xchg
int3
add
aad
repz
nop
int3
ficomps
lea
test
jg
mov
cld
or
call
adc
mov
mov
mov
test
pop
push
pop
adc
jmp
out
push
or
xlat
sub
icebp
sbb
sub
pusha
cld
in
push
clc
and
adc
sbb
and
mov
and
jae
and
cmp
lret
in
jl
incb
add
idivl
int
sub
aad
adc
pop
pop
jg
fwait
sbb
icebp
mov
jno
iret
or
mov
stos
xor
xchg
pop
sbb
mov
pop
lods
dec
mov
cmp
jne
aaa
out
xor
hlt
cmp
out
xchg
jbe
negl
lcall
mov
inc
outsl
les
pop
cmp
clc
add
mov
dec
loope
aam
into
shr
xlat
and
out
lahf
sbb
mov
xchg
mov
ficoms
addr16
je
adc
setae
mov
xor
shll
popa
fsubl
hlt
dec
cli
cmp
sbb
jl
pop
and
xchg
xor
fcoms
call
mov
fwait
pop
or
and
pop
mov
scas
jle
scas
outsl
mov
or
mov
or
cmpb
lahf
xchg
in
shl
dec
pop
add
es
mov
cld
jns
cmp
mov
xchg
or
adc
push
inc
mov
cmpsb
pop
cltd
inc
fdivl
insb
dec
push
xor
add
add
lret
push
loopne
stos
sub
sahf
out
mov
jbe
lcall
scas
xchg
pop
imul
and
mov
dec
andl
inc
outsl
jmp
lahf
cld
data16
lds
mov
lods
add
shll
fdivl
mov
adc
ret
fcoml
ljmp
imul
sti
movsl
push
psrlq
enter
stc
dec
je
in
xchg
dec
out
test
adc
pop
cmp
pop
cmp
cmp
mov
mov
and
ja
mov
add
xchg
stos
es
jmp
jae
mov
pop
cli
jl
aad
daa
xchg
adcl
sbb
rol
test
adc
lea
in
mov
dec
outsb
xor
xchg
fildl
ds
aam
sub
or
in
jmp
sarl
adc
movsb
push
call
jo
sbb
jae
inc
outsl
push
out
lret
xorl
loop
dec
stos
fbstp
cs
pop
dec
sbb
adc
and
lds
lds
xlat
cmp
inc
mov
or
shrl
lds
in
scas
jecxz
dec
lds
push
jle
pop
and
test
dec
mov
mov
fmulp
stos
add
loope
mov
xor
mov
ljmp
scas
inc
lcall
dec
out
and
dec
movsb
xchg
sub
or
popa
xchg
pop
fcmovnbe
xchg
and
adc
fmul
mov
adc
aad
dec
adc
scas
ret
ficomps
scas
loope
cmp
in
stc
jge
add
cs
xor
lret
pushf
mov
cmp
inc
bound
jns
ss
adc
cltd
inc
mov
in
jl
pop
lret
pop
shlb
cs
das
sub
push
arpl
xor
xor
lret
mov
test
in
adc
pop
rcrl
dec
cmpsl
or
mov
jp
push
pop
shl
je
stos
lods
andl
cmp
mov
lret
hlt
mov
sub
ss
xchg
fldenv
ss
sub
jmp
xchg
jnp
dec
cmpsb
pop
inc
stos
mov
mull
pushf
mov
fsts
adc
sbb
imul
shll
mov
neg
and
popf
jns
mov
push
enter
in
xor
pop
int3
mov
or
push
jne
jnp
fdivp
adcl
rcrl
aaa
sub
sub
jmp
stos
sub
imul
cltd
mov
cwtl
icebp
int
out
add
push
and
test
dec
cmpsb
pusha
xor
movsl
mov
adc
push
movsl
loope
pop
cmp
mov
mov
and
rorb
sbb
shll
popa
bound
inc
es
loope
xlat
adc
sub
sub
les
hlt
clc
repz
mov
xor
mov
movsb
xor
test
or
adc
xor
in
mov
fcmove
imul
pop
loope
pop
cmp
mov
in
pop
out
test
test
aas
adc
push
mov
arpl
outsl
fistpl
jge
cmp
jne
push
sub
add
mov
mov
movsb
addr16
and
mov
lock
imul
aam
cmp
jae
cmp
sarl
xor
nop
or
mov
sub
inc
jbe
push
jge
loop
out
inc
xchg
imul
icebp
xchg
in
dec
stc
out
dec
leave
xchg
in
int
repz
leave
pop
or
mov
xchg
sti
lret
mov
scas
mov
jnp
inc
outsb
int
movsl
dec
add
cltd
adc
leave
jnp
xor
mov
pushf
into
and
push
push
pop
jmp
daa
cld
insb
sbb
mov
scas
dec
dec
dec
pop
in
cmp
cmp
lcall
jl
jb
mov
xor
dec
add
dec
call
sub
mov
insb
add
movsl
dec
aaa
pop
push
xor
sub
jecxz
movsl
aam
xor
or
lcall
xor
ror
and
add
sbb
push
sbb
inc
shl
pop
xor
mov
pop
fists
aad
cs
int3
jg
xor
orl
xchg
fldt
rolb
inc
xlat
hlt
pop
adc
add
icebp
test
ret
xchg
pop
add
lods
in
lcall
fbstp
in
xor
icebp
ljmp
jge
enter
push
leave
cs
cmp
test
sub
dec
test
xchg
aad
add
adc
les
inc
xchg
jne
xor
add
ret
cmp
mov
inc
push
out
sub
leave
decw
fildl
jns
faddp
imul
stos
mov
mov
push
pop
aam
lods
add
out
push
xor
and
adc
dec
adc
in
or
test
stos
mov
loopne
ss
in
dec
fdivs
pop
icebp
mov
subb
jecxz
or
mov
cmp
push
fcmovne
push
sbb
xchg
in
add
repnz
pop
xor
ret
sub
out
lods
jno
sub
stc
pop
fbld
add
pop
aam
jg
push
out
negl
or
cli
sub
stos
shr
mov
xchg
fmull
adc
inc
fmuls
pop
mov
xchg
and
sbb
xchg
mov
nop
push
das
lcall
mov
push
add
iret
xor
daa
idivb
addr16
cltd
push
subl
jb
fs
dec
xor
xchg
bnd
lcall
fcomps
jbe
dec
les
fiaddl
xchg
shrb
lret
pop
xor
jbe
jns
std
adc
ds
dec
mov
adc
fcomp
movsl
xor
int3
inc
insl
jecxz
andl
stc
and
fwait
loope
xchg
mov
push
int
sahf
pop
cmp
mov
fs
inc
push
adc
xchg
xor
bound
mov
or
xchg
and
mov
sub
js
movsl
dec
fadd
push
gs
mov
mov
shl
fnstsw
pop
inc
xchg
mov
mov
call
lret
repz
xor
push
push
insb
sar
pushf
sbb
fidivrs
lcall
inc
mov
cmc
pop
jo
adc
mov
stos
aaa
cmp
mull
inc
push
sbb
lock
inc
xor
fstl
sbb
out
fs
and
xchg
int
movsb
repz
push
push
fmuls
add
das
push
addb
in
xchg
mov
in
cmpsb
jo
daa
in
cmp
pop
pop
inc
push
ljmp
movsl
leave
shl
add
dec
outsb
jne
aas
jle
push
inc
mov
jo
int
pop
leave
jecxz
stos
aam
cmp
or
in
adc
imul
stos
out
push
pop
jno
add
cwtl
cli
mov
mov
aaa
pop
xchg
out
sub
pop
xor
jnp
add
rorl
sti
push
jmp
push
push
inc
lock
jp
jl
dec
inc
inc
cmp
mov
loop
shrl
jne
xchg
dec
rolb
shll
jne
scas
lret
fstl
pop
sti
js
jmp
sub
aas
mov
js
andl
cmp
ret
adc
ror
adc
pop
add
int
std
sbb
mov
mov
xchg
mov
pop
das
pop
inc
or
decl
xchg
cmovnp
cwtl
push
push
jno
sub
movsl
pop
pop
gs
imul
aaa
nop
imul
cmp
xchg
out
jl
mov
mov
sbb
mov
jb
inc
fldl
gs
cli
mov
stos
xor
mov
sbb
fstpt
popf
push
loopne
aaa
js
jl
imull
push
jns
cmc
xor
mov
xchg
movsl
test
jb
loope
enter
sub
adc
in
data16
test
pop
jg
lcall
fimuls
lret
cmp
dec
test
rcrl
mov
out
jo
inc
ja
pop
or
pop
push
mov
and
loopne
fnstenv
icebp
xor
in
int3
sbb
inc
shlb
inc
iret
outsb
fwait
cmp
or
or
shll
adc
jnp
add
and
sbb
mov
dec
neg
roll
jmp
cmpsb
subb
push
dec
ds
sub
aad
dec
pop
out
popf
into
out
repnz
xchg
shlb
data16
nop
jbe
mov
mov
movsb
call
enter
pushaw
repnz
jle
push
mov
jne
mov
cmc
mulb
add
ljmp
mov
idiv
mov
jno
mov
or
inc
mov
xchg
pop
or
add
hlt
jecxz
insb
jbe
cmp
xchg
sbb
mov
out
mov
cmpsl
pop
and
dec
push
les
cltd
mov
pop
iret
xchg
mov
mov
lods
xor
adc
sbb
lods
jmp
lret
lock
bound
push
inc
mov
and
inc
mov
add
push
out
jp
mov
lcall
cld
ds
sbb
jle
inc
gs
xlat
inc
xchg
adc
fabs
jae
sbb
sub
gs
sbb
xlat
nop
ds
lahf
adc
pop
bound
shl
rol
pop
es
pop
or
lds
jne
stos
mov
xlat
dec
pop
pusha
sbb
jo
out
imul
cmp
jo
test
pop
dec
inc
inc
sub
dec
ja
stos
cmpsl
in
lods
lock
sub
test
and
daa
mov
dec
scas
xor
dec
insl
pop
pop
imul
loopne
lret
adc
popl
mov
mov
gs
scas
test
std
lahf
cs
sbb
inc
mov
or
mov
jb
mov
js
out
adc
jl
sahf
in
lods
test
ss
xor
xlat
iret
push
pop
out
mov
pop
pusha
fstp
sbb
arpl
xor
pop
stc
pop
cmp
cmp
cmc
sbb
and
adc
pop
lret
iret
and
stc
jno
jne
sbb
xchg
push
stos
pop
ja
dec
test
cmpsl
lds
fs
sahf
scas
xor
or
mov
lods
mov
mov
fstl
jp
and
mov
les
fwait
lret
mov
fildll
or
xchg
inc
jg
mov
aam
rorl
test
sub
push
ja
fbld
fbld
lds
mov
shl
ds
mov
mov
push
sbb
fisubrs
loop
setno
int
pushf
jp
fadds
dec
xor
aaa
pushf
cltd
mov
idivb
sbb
sahf
les
cmpb
stc
pop
lret
dec
pop
aad
leave
jge
stos
mov
jbe
or
sahf
movsb
mov
inc
inc
hlt
xor
inc
loopne
inc
fidivl
ljmp
decb
ds
hlt
scas
adc
or
rcr
xor
push
push
in
aas
adc
mov
sbbl
pop
inc
jne
and
in
add
mov
xor
pop
jecxz
and
sub
mov
adc
cmp
adc
mov
enter
push
push
or
cmp
push
push
cmp
out
les
xor
cmp
sub
lods
addr16
mov
sarb
nop
sbb
lds
sbbl
call
xchg
out
ret
insl
and
mov
sbb
cli
cli
rcrb
xchg
inc
movsl
pop
lds
lods
and
cmp
jb
pop
fisttps
mov
or
cwtl
mov
and
mov
lock
movsb
out
mov
aam
out
mov
in
in
pop
mov
cmpsl
int3
add
jns
mov
divb
lcall
cli
aas
cmpsl
push
xchg
movsb
sub
push
icebp
add
lds
js
scas
mov
mov
mov
into
out
xchg
cmpsl
push
mov
lahf
pusha
cld
stos
sub
sub
add
fs
xchg
xor
cmp
sbb
in
cli
fimuls
lods
ljmpw
pushf
dec
nop
mov
mov
rorb
jae
imul
or
dec
repnz
mov
ficomps
faddl
xchg
dec
and
sbb
aas
push
jo
sbb
or
sub
inc
add
and
shl
test
outsb
sti
addr16
sahf
testl
jmp
jle
cmp
leave
inc
xor
out
dec
pop
sub
sti
icebp
push
jmp
int3
jbe
add
inc
loop
push
mov
jp
jg
xchg
cmp
pop
xlat
push
and
mov
and
fcompl
or
jb
jo
inc
xchg
and
push
mov
fwait
scas
xor
mov
lret
jne
and
push
rcrb
fwait
roll
and
pop
cmpsb
mov
lock
aaa
aas
push
cs
movb
cli
aas
xchg
mov
dec
rcr
and
jmp
les
je
je
shlb
push
cmp
and
in
mov
inc
rcr
push
pop
fwait
push
and
adc
in
inc
cmpsl
mov
mov
xchg
sub
xchg
fdivs
sub
mov
sub
mov
loope
jp
ret
out
adc
f2xm1
or
test
mov
lret
jnp
push
fsubr
loop
xlat
leave
loope
mov
xchg
inc
sub
leave
pop
loopne
xlat
mov
sbb
test
inc
sbb
int3
fisubrs
test
mov
pushf
rcrl
mov
fisubrl
pusha
add
push
aas
ror
mov
sti
xor
mov
mov
mov
arpl
rorl
icebp
xor
test
fidivrs
sub
mov
sbb
pop
das
fyl2x
cmpsl
fsub
sahf
add
ja
add
int
lret
mov
fstpl
adc
rcrb
mov
in
pop
test
sbb
jmp
loop
cmpsl
xor
adc
push
or
idivb
push
mov
sbb
into
pop
lock
cmp
imul
jle
mov
xchg
cmp
pushf
cwtl
xchg
push
repnz
lds
mov
push
nop
negb
add
mov
pop
push
ds
repnz
mov
sahf
ret
int3
adc
push
jg
pop
mov
cld
push
jb
stos
mulb
push
jg
dec
sub
lret
jmp
lret
shl
hlt
xchg
movsl
in
xchg
inc
sub
sbb
int3
sub
push
sbb
js
insb
popa
dec
dec
add
lcall
pop
movsb
xor
pop
push
xchg
pop
data16
jmp
add
pop
add
jbe
loopne
enter
dec
dec
xlat
pop
lcall
jbe
xor
ljmp
push
stos
pop
dec
mov
and
repnz
insb
inc
xor
pop
nop
cltd
mov
loop
pop
xchg
js
xchg
push
dec
testb
leave
inc
push
clc
rcr
push
and
mov
xlat
lods
enter
xlat
jb
sub
mov
div
jge
movsl
aaa
push
or
fiaddl
aad
push
ljmp
fldl
and
call
jns
inc
call
jecxz
fcoms
push
mov
or
mov
push
push
jmp
mov
scas
enter
scas
sbb
jl
dec
rcr
mov
jmp
jmp
mov
adc
leave
in
xchg
add
sub
call
insl
or
call
sbb
cld
ja
dec
jecxz
mov
add
sub
arpl
push
repnz
out
dec
inc
dec
mov
shrw
adc
mov
mov
xchg
pop
aad
clc
jl
pop
bound
mov
btl
inc
push
mov
int
bnd
hlt
orl
popa
pushl
stos
stos
out
lahf
and
pop
movsb
add
push
xor
int
ja
jno
popa
sbbb
cmp
outsb
fistps
sbb
ss
lock
sbb
xor
aad
push
lea
cli
fdivrp
rcrb
addb
xor
imul
and
fadds
push
cmp
pop
inc
sbbl
push
fimull
and
fwait
outsl
mov
jbe
leave
in
jl
aaa
inc
push
into
in
and
xor
ds
adc
aaa
jl
pop
push
mov
cmp
pcmpeqd
inc
dec
xchg
int
jb
aad
cld
or
test
xchg
xchg
jmp
inc
sub
jecxz
mov
std
dec
lock
inc
test
lcall
loopne
cmpsb
jns
pop
mov
push
push
inc
insl
bound
in
push
fisubs
or
aam
outsb
mov
ror
xchg
test
mov
repnz
popa
jnp
aad
cwtl
adc
jg
out
outsl
jmp
lods
xor
add
jg
jno
dec
or
fs
sahf
jmp
sahf
in
out
dec
cmpl
push
stos
push
out
lret
out
sbb
data16
dec
out
lea
xchg
dec
and
les
dec
and
xchg
inc
mov
cld
std
cs
ret
out
loope
xchg
or
push
mov
insb
js
jmp
sub
inc
jnp
jp
xchg
adc
clc
outsl
mov
insl
dec
jb
arpl
adc
push
stos
lret
popa
jmp
and
popf
jg
sbb
add
sbbl
int3
and
cli
arpl
inc
cmpsb
mul
jns
inc
cmp
cltd
iret
aas
aam
mov
mov
ret
pop
pushf
stos
sbb
scas
rol
xchg
or
cmp
dec
dec
movsl
xor
into
lahf
adcb
imul
sbb
sub
inc
jl
imul
cwtl
sub
cmp
and
adc
and
push
stos
dec
sub
sbb
aad
push
fadds
clc
pop
div
xchg
scas
sbb
mov
pop
mov
jo
add
jge
call
loope
daa
rcrl
jp
loope
mov
sti
testl
xor
mov
ret
popa
in
dec
aas
sbb
leave
shlb
inc
dec
pop
aad
lds
jl
or
shll
or
ds
push
cli
stc
in
arpl
rcr
aas
jne
cmpb
repnz
or
negl
ljmp
ds
mov
mov
ljmp
jl
test
mov
xor
mov
mov
xor
xchg
addr16
sbb
les
or
nop
mov
or
inc
fiadds
lahf
call
push
fimull
cmp
addr16
dec
adc
push
inc
pop
stos
leave
jecxz
pushf
orl
xor
inc
inc
pop
or
xchg
sub
rorb
in
mov
das
addr16
mov
inc
cli
lret
xor
loop
sbb
cmp
stos
cmp
mov
mov
imul
cmpb
push
mov
jl
mov
mov
outsl
lock
pop
imul
sub
sub
cmpsl
jb
push
cli
fsubl
inc
lea
imull
in
push
mov
mov
xor
repnz
pushf
fsubrs
xchg
test
xchg
inc
je
xchg
lea
cli
push
mov
rorl
into
pop
fsub
std
jo
add
pop
insb
in
shl
xor
dec
push
and
xor
outsb
inc
push
add
add
jae
lcall
lret
xlat
sbbb
lods
xchg
add
int
call
popf
adc
pop
cmp
or
dec
std
outsl
adcb
mov
mulb
xor
pop
popf
push
jg
mov
lahf
and
hlt
cs
mov
push
and
dec
fwait
icebp
daa
fldt
enter
insl
jl
idiv
mov
notl
lods
daa
and
ljmp
jns
or
insl
out
sub
jg
mov
pop
sti
add
aam
mov
dec
and
xchg
orl
leave
xchg
mov
jnp
pop
fbld
mov
mov
cmp
test
xchg
cmp
js
lret
out
ss
mov
xor
mov
mov
jnp
pop
clc
testb
and
sbb
xchg
das
enter
fwait
hlt
push
out
lcall
inc
arpl
xchg
pop
inc
iret
dec
jne
xchg
jmp
xchg
xor
int3
nop
ret
or
xor
xchg
mov
fisubrs
testl
sbb
divb
ljmp
inc
in
mov
pop
sbb
mov
xchg
xchg
jecxz
jb
or
xchg
push
sub
stos
xor
hlt
sti
fstpl
push
mov
xor
adc
lcall
xchg
stos
out
fistpl
push
mov
loop
incb
cmpsl
mov
xchg
push
adc
mov
sbb
mov
out
push
jp
out
mov
insb
cmp
cwtl
cmp
repnz
push
jmp
push
dec
pop
xchg
in
insl
sub
sbb
sahf
mov
popl
push
cmpl
test
mov
xor
or
cs
inc
xchg
sbb
cmp
and
rcrl
shlb
imul
add
mov
cmpsb
popa
mov
test
jne
push
std
sbb
inc
int
adc
pushf
cmp
pop
pop
mov
jo
insb
bound
xor
ds
inc
sub
lret
sahf
inc
sbb
mov
dec
sbbb
dec
mov
fmull
or
stos
adc
sbb
in
hlt
jbe
push
adc
inc
adc
test
mov
inc
cltd
mov
mov
mov
inc
push
js
repnz
xor
outsb
repnz
inc
aam
cwtl
sbb
pop
addr16
xchg
clc
add
mov
mov
imul
stc
neg
fisubl
mov
stc
mov
dec
jmp
std
mov
or
xor
adc
les
adc
xchg
pop
imull
sub
lcall
popf
and
cmp
add
shll
lcall
sub
mov
repnz
mov
movsl
insl
stos
push
test
mov
sarl
jmp
push
mov
mov
pushf
sbb
out
gs
mov
fcmovnbe
and
inc
inc
insl
in
rcl
lock
and
cli
sub
jmp
lahf
outsb
push
insb
mov
push
icebp
mov
cmp
pop
inc
inc
cmp
jmp
loop
jmp
mov
shl
jno
and
push
fs
insb
xor
out
mov
stos
jp
inc
out
movsl
stc
rclb
adc
push
add
rclb
dec
call
mov
xchg
jmp
push
inc
stos
mov
lock
scas
cmp
out
push
outsl
adc
nop
mov
push
lret
mov
xchg
mov
jge
push
xor
aad
mov
ljmp
aam
aas
xor
mov
mov
es
sbb
xchg
in
or
fsubr
jbe
pop
stc
andl
add
push
sbb
or
xor
insb
fcmovbe
jne
adc
jmp
xchg
xchg
pop
sub
push
leave
push
lahf
mov
repz
mov
divl
mov
mov
sti
mov
js
addr16
shrb
cli
out
sbb
nop
inc
lret
mov
gs
adc
mov
js
jg
lret
imul
lahf
cmc
repnz
sub
popa
jb
loop
jge
cmc
and
pop
inc
repz
pop
and
cmp
movsb
mov
inc
notl
sbb
cld
dec
xor
imul
mov
cmpsb
add
mov
inc
loope
cmpsb
xchg
shlb
inc
and
loop
je
nop
movsl
dec
stos
mov
test
cmpsb
cs
jmp
dec
shl
push
mov
addl
scas
jmp
pusha
out
jae
test
sub
bound
dec
cld
jbe
sub
aas
icebp
mov
icebp
rorb
jmp
sbb
test
jb
mov
rcrb
divl
sar
arpl
aad
popl
inc
jno
jecxz
jge
xchg
mov
add
add
cld
ret
fldt
sub
mov
add
or
lea
sbb
push
ds
inc
loopne
sbb
mov
jne
cmp
and
pop
out
mov
or
push
adc
adc
nop
stc
mul
insl
das
fcmove
int
sub
sarl
dec
cld
inc
daa
test
call
in
cmp
jge
sub
insb
stos
outsl
loopne
xchg
cltd
mov
daa
popf
andl
mov
in
imul
push
push
inc
mov
sub
ljmp
mov
add
dec
xor
out
and
rsm
or
adc
mov
sbb
mul
push
movsl
movsb
adc
pop
push
loope
int3
pop
idivl
popa
js
xchg
pushf
fwait
jg
test
lods
pop
jne
xor
das
fwait
loopne
rolb
repnz
adc
fs
repz
fs
dec
stos
arpl
hlt
cmp
mov
or
sbb
mov
mov
inc
cmc
and
cmp
aad
cld
ret
jns
insb
sub
in
loope
add
xchg
pop
fcomps
lcall
jge
ss
daa
popl
push
mov
aad
cmp
jbe
adc
lods
ljmp
in
jnp
dec
rcll
inc
clc
push
mov
int3
mov
mov
cs
loopne
mov
test
dec
js
fs
ss
inc
sbb
hlt
push
and
jns
and
cwtl
mov
sti
sub
xchg
xchg
xor
pop
insb
jnp
shlb
lods
pop
dec
adcb
in
sub
cmpl
jge
dec
dec
pop
mov
mov
jbe
aam
fildl
cmpsl
loopne
mov
inc
fidivl
push
and
movsl
mov
adc
mul
in
add
mov
or
xchg
push
jo
xor
cmp
mov
xor
ret
stc
dec
sbb
test
mov
adc
mov
in
sub
adc
mov
or
call
adc
mov
stos
in
jb
fdivrs
add
inc
lret
stos
repz
ficomps
int3
inc
pop
test
sbb
inc
sub
push
dec
push
ds
out
insb
leave
lcall
arpl
xchg
pop
shll
add
movsl
inc
sub
xor
mov
mov
popa
jmp
subb
inc
cmp
and
dec
sbb
mov
mov
add
cwtl
pop
insl
mov
ds
inc
mov
sub
outsl
pop
xor
mov
sbb
sbb
sub
imul
mov
scas
cmp
testl
fdivrs
jg
mov
and
or
mov
out
leave
xor
sub
loope
jno
or
cmp
pop
push
fldl
pushf
out
jb
mov
stc
push
aaa
shrb
test
jns
adcl
lcall
xor
mov
roll
cwtl
jg
xchg
insl
mov
and
push
loope
adc
mov
pop
xchg
add
mov
cs
cmpsl
jno
cvttps2pi
arpl
icebp
icebp
aaa
repz
inc
add
mov
push
jno
mov
adc
aaa
ficoml
push
push
pop
dec
lods
lahf
mov
inc
mov
add
loop
pop
dec
inc
rcr
mov
clc
mov
lock
jge
cwtl
addr16
sub
cmp
fwait
cmp
adc
cld
outsl
mov
add
mov
mov
push
mov
xor
js
bound
pop
lock
mov
inc
mov
mov
in
jne
sub
jecxz
roll
or
movsl
std
jmp
and
dec
inc
sbb
mov
xchg
and
pop
idivb
sti
rolb
cmpsl
jo
outsb
shlb
push
pop
test
mov
rclb
add
xor
shlb
jmp
in
xchg
push
dec
lds
jle
jp
xor
xor
mov
mov
inc
mov
insl
mov
dec
adc
push
dec
setb
not
mov
push
in
cmp
sbb
mov
push
xchg
insb
test
es
dec
sub
cmp
push
inc
jl
ja
mov
mov
dec
ret
sub
das
dec
ja
clc
in
push
mov
cli
test
in
aas
xchg
mov
add
push
loop
or
stos
or
test
js
fs
lea
stos
pop
cmp
adc
in
dec
xchg
push
mov
test
sbb
xchg
fadds
cld
popa
outsb
rorb
xor
icebp
jb
sub
sbb
out
mov
dec
xchg
enter
ret
mov
adc
decl
ficomps
inc
jl
repz
out
js
xchg
ret
mov
cmp
std
add
pop
mov
dec
mov
push
jle
es
cmc
mov
adc
xor
test
and
jmp
lret
jl
add
fldl
or
repz
in
sub
mov
es
pop
mov
mov
sub
mov
xacquire
push
aam
adc
or
push
in
out
or
imul
mov
fsubs
xchg
xchg
repz
push
and
xchg
pusha
jmp
daa
loope
lahf
add
lods
adc
mov
mov
pop
dec
dec
push
mov
int
cmp
pop
xchg
adc
mov
movb
imul
sti
negl
dec
xor
inc
and
icebp
gs
in
leave
loopne
cmp
std
arpl
pop
push
mov
mov
pop
push
cmp
dec
jp
push
pop
push
add
loope
mov
sar
mov
push
xor
rol
xchg
inc
movsl
lods
push
lods
push
xchg
sbb
test
rclb
iret
test
push
xchg
jle
cmc
es
jecxz
push
fldenv
fs
dec
or
xchg
subb
test
cmp
dec
sbb
mov
mov
jg
adc
ucomiss
pop
sbb
and
sub
aas
sbb
pusha
lods
gs
lods
inc
mulb
jne
loopne
jae
push
int
mov
shll
cld
ret
inc
in
xor
add
and
add
or
push
lahf
bound
or
push
das
movsb
lock
or
ja
sub
adc
in
pop
sbb
mov
fcomps
popa
mov
inc
add
adc
push
sbb
cmpsl
dec
mov
cwtl
ljmp
mov
in
mov
mov
in
dec
adc
hlt
mov
movsl
je
jns
cmpsb
jbe
mov
xor
jo
xor
scas
aas
inc
lds
sbb
fwait
int3
jbe
mov
call
or
jmp
push
gs
les
pop
sbb
jle
pop
jbe
sub
and
in
mov
es
adc
mov
mov
xor
jge
fldl
movl
push
jmp
mov
mov
sub
ret
mov
pusha
dec
mov
add
sbb
mov
mov
jge
jp
xchg
into
xor
push
rorl
pop
or
int
push
adc
pop
dec
or
movsb
push
and
sti
fiaddl
out
test
dec
call
das
jns
fcomp
adc
cmp
inc
clc
adc
es
out
iret
jmp
pop
pop
mov
inc
xchg
dec
js
shrl
scas
inc
inc
bound
push
push
decl
test
jne
pop
andb
fstps
aas
jne
and
jbe
inc
add
mov
mov
adc
aaa
pop
outsl
and
out
ja
sub
cmp
mov
mov
add
adc
aad
shrb
enter
mov
lock
xor
or
xchg
das
imulb
ljmp
or
inc
int
mov
in
push
jb
dec
rcll
mov
fs
aam
mov
mov
sub
sub
mov
push
gs
lcall
add
fsts
cwtl
sbb
std
add
push
pop
mov
movsb
das
cltd
pop
shlb
xchg
jl
loopne
aas
lahf
shrb
push
out
ret
daa
out
pop
adc
imul
jg
lds
mov
dec
jle
mov
sub
xchg
scas
fidivrs
scas
jecxz
cmp
xorl
iret
jp
aaa
out
jae
aaa
cmp
aaa
pop
sti
fsubrl
jnp
jnp
lods
clc
lret
inc
test
ret
stos
and
popf
icebp
xor
xchg
lods
lret
or
dec
shr
push
daa
sbb
dec
or
packssdw
rcr
pop
lea
mov
sub
jnp
in
cmpsl
out
adc
je
aaa
add
test
sub
pop
pushf
aas
shl
cltd
and
push
sahf
mov
pop
or
dec
fnstsw
push
dec
adc
repnz
jle
cld
cmp
sbb
sub
outsl
ficoml
sti
adc
in
mov
pop
sbbl
pop
pusha
mov
push
in
outsb
push
cli
stos
stos
xchg
imul
les
mov
sub
repnz
repnz
adc
mov
adc
les
push
jmp
xrelease
test
push
push
mov
pushw
sti
testl
cmp
adc
in
in
sbb
mov
out
and
jle
jmp
ljmp
mov
pop
sti
lret
test
sbb
in
or
les
dec
mov
xchg
mov
cmp
adc
add
in
mov
push
jle
pop
hlt
xchg
mov
push
pop
pop
arpl
mov
lahf
mov
inc
cmpsb
imul
or
mov
pusha
dec
call
dec
cli
push
jl
stos
mov
fs
imul
test
xchg
push
push
mov
stos
aas
test
push
xlat
lock
inc
insb
pop
jno
aas
fisubs
adc
fwait
rcl
jle
jne
pop
xor
add
add
mov
loop
jmp
and
pop
lods
inc
or
dec
push
cmc
imul
mov
mov
add
fildl
rcrb
xchg
lret
data16
aaa
inc
scas
out
les
xlat
add
gs
lods
mov
cmp
ljmp
test
pop
xor
push
inc
sub
loopne
jns
cs
cmpsl
cmpsl
mov
mov
aad
lret
and
outsl
repnz
clc
adc
stos
sti
stos
pop
movsb
imul
sub
mov
xchg
and
fists
cmp
scas
dec
sub
jmp
mov
mov
jl
repnz
and
adc
fsubr
and
and
sub
sbb
mov
cmp
inc
fidivs
movsb
cwtl
inc
or
in
shrl
pop
xor
subb
out
or
cld
outsb
bound
shll
and
subb
and
addr16
ret
sti
aam
popf
sub
cld
push
mov
rorl
inc
pop
lds
push
fildll
lcall
out
sti
fldcw
cmc
shlb
xchg
fwait
mov
fdivr
fidivrs
xchg
mov
or
sbb
in
and
pop
push
insb
sbb
adc
lock
and
lret
adc
or
jne
sbb
arpl
mov
fsubrs
sti
daa
fisubrl
pop
push
call
pop
mov
xchg
in
das
push
jb
out
xor
or
cltd
lods
push
repz
not
mov
sub
mov
daa
push
js
sbb
sbb
aaa
adc
jnp
ror
cmp
fmull
push
ja
popf
mov
cs
and
mov
jecxz
sub
pop
rorl
inc
and
push
cmp
mov
sub
cmp
mov
or
pop
jb
mov
adc
and
int3
adc
ficompl
sti
arpl
dec
cltd
les
jo
or
imul
leave
lds
rorl
aad
xchg
jae
lods
movsb
pop
pop
cmpsl
mov
or
fisubs
rolb
mov
xor
pop
pop
fnstenv
int3
lcall
test
inc
scas
cld
jno
movsb
xchg
xchg
aaa
adc
mov
leave
or
daa
sbb
xrelease
lods
rcrl
fnstcw
ret
fcmovb
pop
lock
hlt
adc
bound
loopne
in
xor
pop
sub
jnp
out
aaa
pop
ljmp
cmp
push
jg
adc
test
testl
fistps
pop
movsl
cltd
pushf
inc
sti
xchg
xor
dec
push
les
mov
pop
push
jg
inc
cli
or
in
and
push
and
add
add
and
cmp
mov
xchg
movsb
mov
sbb
fwait
dec
jo
lods
hlt
sti
mov
cli
jae
cmp
imul
jecxz
sbb
push
mov
push
mov
outsl
arpl
adc
rcl
rorl
loope
jno
or
popa
enter
adc
lods
and
enter
pop
mov
sbb
and
xorb
out
je
inc
xchg
adc
mov
adc
scas
or
fwait
jne
lea
push
mov
lret
subl
pop
pop
cmp
stos
rcll
int
aad
dec
sbb
lret
scas
xchg
divl
es
xor
loope
loop
int3
pextrw
jge
dec
mov
imul
addl
movsl
les
pop
jl
sub
pushw
xor
movsb
push
imul
bswap
es
jne
in
jb
insl
shr
int
or
mov
mov
adc
and
xlat
into
aad
aas
pushf
mov
jg
cmp
jns
mov
rorb
std
call
pop
jg
stos
xchg
and
pop
lret
sub
inc
out
and
sbb
pop
adc
or
test
shlb
out
orl
movsb
test
fwait
xchg
enter
or
mov
mov
rol
mov
out
push
dec
arpl
jmp
dec
rcrb
sbb
push
pusha
cmp
leave
mov
push
clc
sbb
push
loop
daa
or
jno
push
arpl
lahf
inc
imul
movsl
pop
jp
sbb
mov
sar
jecxz
test
jmp
fs
jae
push
call
scas
jle
out
mov
pusha
push
mov
test
xor
and
scas
ljmp
ficomps
pop
int3
jp
cmp
and
mov
xchg
pusha
xchg
and
adc
push
ret
ja
int3
mov
xlat
popf
push
sub
dec
cmp
pop
imul
pop
std
dec
mov
mov
stc
pop
loopne
dec
loop
adc
lods
mov
out
clc
fnstenv
and
mov
jmp
shll
dec
mov
bound
pop
dec
mov
aad
nop
scas
cmp
insl
dec
in
and
push
lock
fnstsw
mov
pop
push
icebp
push
sahf
ret
daa
and
call
mov
in
arpl
insl
pop
push
sbb
xchg
shlb
inc
mov
insb
stos
xor
movsb
mull
add
lea
and
arpl
loope
mov
lahf
sub
xor
in
mov
rclb
and
sub
dec
dec
sub
aam
gs
cmp
test
popf
adc
push
addb
cwtl
sbb
dec
in
nop
nopl
aaa
lds
out
sub
add
xor
aad
shll
clc
xchg
pop
and
sahf
cmpsl
outsb
cmc
loope
xlat
inc
xchg
xchg
mov
mov
add
add
mov
xchg
or
imul
jg
push
sbb
iret
jmp
aas
mov
and
push
stos
mov
xchg
sub
jecxz
loopne
jge
sub
jp
sub
or
bound
xchg
clc
loope
mov
mov
pop
or
popf
adc
adc
fisubrs
lcall
test
outsb
mov
fisttpll
xor
adc
pop
jp,pn
les
pop
xchg
scas
fadd
gs
test
xchg
xchg
shlb
mov
insl
push
or
pop
mov
mov
mov
aam
or
fldl
xchg
mov
popa
lea
xchg
push
lods
dec
lock
mov
imul
cmp
jnp
rorb
pop
cli
mov
test
xor
mov
jbe
mov
aam
loope
pop
nop
pop
call
insl
add
mov
pop
addr16
dec
pop
loopne
bound
and
sbb
pusha
cli
mov
or
dec
fcoml
test
stc
dec
xor
ss
popf
and
out
imul
dec
test
int
push
sarb
mov
jno
out
gs
adc
std
sahf
mov
inc
lret
sbb
cmpsb
out
mov
imul
addl
fwait
pusha
in
test
and
mov
sbb
cmp
adc
cmp
dec
ret
or
pushf
loop
push
xchg
inc
lret
mov
fwait
pop
mov
mov
mov
mov
iret
lods
jmp
push
scas
aas
dec
pop
mov
inc
ret
popa
test
jno
arpl
sub
mov
rorl
mov
push
jl
into
sub
icebp
dec
test
icebp
mov
test
add
ret
jne
mov
mov
mov
xchg
lret
fadd
out
into
les
xchg
mov
mov
test
outsb
mov
or
xor
in
fsts
std
insl
jmp
filds
ljmp
sbb
mov
ror
lods
fiadds
jge
lcall
add
test
fcompl
dec
pop
mov
jnp
in
adc
and
mov
xor
xchg
sbb
mov
ret
test
push
ret
int
aad
das
cmp
lahf
rorl
leave
es
mov
jbe
inc
mov
sbb
mov
add
leave
push
xor
mov
dec
pop
or
fsts
add
add
mov
dec
in
add
cmpsl
jl
pushf
xchg
mov
cmpsb
outsl
arpl
inc
arpl
jbe
pop
xor
jno
repnz
xor
pusha
cli
and
cmp
negl
lret
pop
jne
mov
sbb
sub
add
dec
xchg
lea
test
xor
pop
pop
inc
mov
pop
and
out
mov
fmul
inc
sti
std
adc
shlb
mov
and
mov
push
mov
adcb
test
dec
hlt
or
decb
mov
cmp
das
cmpsl
negb
mov
in
cmc
push
xor
jl
xor
inc
cmc
ficompl
xlat
push
mov
sbb
movsl
mov
jl
clc
movsb
icebp
ds
mov
nop
pusha
cld
je
sahf
sub
mov
mov
add
mov
lcall
decb
push
mov
jg
push
aaa
jl
aam
pop
data16
neg
cmp
sti
lahf
xor
jnp
out
mov
mov
jno
ret
fbld
adc
mov
push
dec
inc
push
dec
loope
sbb
in
stc
xchg
xchg
stos
lods
enter
mov
fisttpll
push
sahf
mov
arpl
idiv
mov
xchg
adc
xchg
adc
xchg
repnz
adc
pop
mov
dec
jge
xchg
pop
sti
lret
inc
imul
push
push
fistps
fcompl
and
scas
jl
fdivrs
les
xlat
pop
mov
xor
js
mov
lods
aam
push
add
stos
into
lods
sbb
mov
ror
cmc
addr16
je
sbb
js
ss
sub
fwait
adc
push
dec
mov
mov
lea
mov
and
xchg
xor
icebp
or
popa
jp
dec
mov
out
sub
adc
xchg
lock
push
cs
popa
push
inc
and
jle
sbb
sbb
sbb
mov
lcall
jge
sub
sub
xchg
cmp
leave
sbb
test
pop
fstl
adc
das
dec
xor
arpl
mov
cmp
xor
xchg
jns
popf
cmp
mov
or
add
jnp
fmul
movsl
aas
xchg
popa
sbb
jl
sub
push
scas
xor
pop
cmc
mov
push
mov
rcrl
sub
das
pusha
stos
loope
sbb
sbb
fdivl
ret
push
lods
push
inc
repnz
push
pop
loopne
mov
test
js
ja
mov
insl
inc
cmp
adcb
test
cmpsb
iret
jno
push
lcall
and
and
xor
repnz
mov
dec
mov
or
jb
sub
cli
mov
and
seto
or
scas
xchg
sti
fcomi
mov
cmpsb
arpl
inc
jns
icebp
jl
adc
outsl
mov
movsb
shrb
movsb
or
cmp
divl
cmp
cmpsl
orl
sbb
gs
cmp
mov
pop
lea
mov
mov
sbb
adc
cmp
lret
dec
outsl
inc
cmp
or
mov
or
dec
sarb
xor
leave
pop
add
movsb
aad
movsl
movntps
jle
lea
inc
test
sub
je
int3
jmp
stos
mov
add
mov
or
cwtl
test
lret
xchg
mov
pusha
push
ja
push
bound
mov
nop
fcoms
push
nop
icebp
je
mov
rcrl
lcall
add
jbe
xor
test
inc
pushf
lcall
sbb
div
sub
mov
imul
push
std
mov
adc
sub
repnz
mov
iret
mov
jecxz
cmc
jne
jae
mov
jno
shll
repnz
sarb
xor
fnstsw
insb
push
mov
and
add
dec
mov
pop
lahf
sub
xchg
shlb
out
add
push
sub
in
das
inc
xchg
pop
scas
lcall
clc
dec
add
pusha
mov
rcr
lods
shrb
sub
sbb
pusha
leave
jmp
sahf
or
inc
push
sub
popf
pop
add
in
cs
subb
xchg
mov
call
sbb
push
mov
shll
sub
mov
or
loopne
mov
mov
mov
aas
jbe
addb
fcmovnbe
add
shlb
add
add
add
jae
shll
xor
sar
mov
sub
adc
lods
adcl
and
mov
loopne
xchg
xor
fistpl
push
lcall
dec
dec
sahf
push
das
mov
and
je
mov
jge
mov
sub
fadds
xchg
push
les
xor
xchg
jns
outsb
aaa
das
sbb
mov
jle
sub
cltd
or
pusha
mov
pop
test
pushf
movsb
loopne
popf
lds
cmp
stos
fcoms
pop
mov
je
or
mov
popa
inc
push
enter
fldl
lahf
pop
insl
xor
adc
add
out
adc
jl
sarl
fld
jle
into
in
add
dec
cmp
lea
lods
cmp
mov
inc
mov
mov
insl
cmp
decl
mov
repnz
sbb
xchg
pop
mov
mov
pop
sbb
in
popa
subb
addr16
mov
xchg
cmpsl
xchg
das
push
adc
loope
imul
shlb
push
xor
fwait
push
or
test
xchg
rolb
or
mov
out
jns
pop
lahf
fadds
data16
dec
loop
lods
xchg
pop
movl
hlt
fists
fisttpl
mov
inc
fsts
pusha
mov
lods
cmc
fidivrs
or
mov
mov
icebp
arpl
push
and
jmp
jg
out
or
jns
int3
mov
add
push
lret
es
cmpsb
out
add
pushf
notb
jae
pop
data16
fcompp
lods
jae
push
push
cmpsl
add
call
or
mov
xchg
dec
orb
pop
movsb
push
mov
sahf
and
pop
fidivs
stc
aad
inc
mov
inc
insb
test
popf
dec
or
nop
out
sbb
inc
push
mov
cltd
popf
out
lea
pop
stc
iret
bound
adc
hlt
rclb
add
adc
push
aaa
test
pop
fisttps
in
inc
and
add
mov
mov
mov
pop
pushf
push
dec
clc
xchg
push
stc
rolb
sbb
jl
or
sbb
data16
jo
hlt
push
imulb
or
icebp
shlb
aaa
push
jecxz
ja
loop
jecxz
fsubrl
sti
xchg
scas
movsb
call
inc
nop
js
inc
adc
sahf
adc
xor
stc
ja
jne
pop
mov
pop
insl
ss
mov
sub
mov
mov
push
jge
push
es
and
jp
lcall
fldln2
dec
insl
adc
dec
subb
das
xor
daa
xor
sbb
sub
jne
jp
das
add
dec
xchg
xchg
popf
dec
ret
and
rorl
inc
pop
pop
mov
sub
cmpb
and
cmc
xor
stc
add
mov
or
fs
push
xorb
fcomp
test
cmpsb
pop
add
cwtl
out
mov
mov
sbb
dec
mov
jge
loope
cltd
aaa
sub
inc
das
icebp
mov
and
jecxz
pop
mov
imull
lock
enter
out
int3
or
rclb
popa
dec
ljmp
mov
push
or
loop
jno
xchg
cs
mov
loope
or
cwtl
int3
imul
lret
lds
in
stos
mov
jae
xchg
pop
xchg
aam
pop
test
and
mov
sub
push
outsl
test
push
add
sahf
ja
js
pop
pop
aas
adc
adc
xor
cmp
clc
fmull
pushf
pop
out
adc
sbbl
mov
or
daa
popa
and
ljmp
sub
xchg
daa
mov
rcrb
or
jle
scas
jl
ret
bound
lret
sub
pop
push
movsb
add
shrl
jnp
jo
or
xor
inc
scas
das
test
push
sub
mov
sbb
sub
adc
push
xlat
aad
rolb
cmp
rcrl
mov
inc
dec
dec
sub
popf
add
fbstp
cmp
in
bound
in
ja
push
add
dec
fs
mov
xchg
ret
das
cmp
adc
ficoms
sub
cld
nop
xlat
das
push
lret
jb
xor
fisttpll
imul
and
scas
inc
jns
hlt
pop
xchg
push
mov
mov
pop
xchg
stos
xchg
xchg
xlat
or
fldt
cmp
cmp
je
adc
sub
mov
pop
ss
shl
rclb
imul
dec
icebp
mov
cwtl
xchg
in
icebp
add
dec
sub
jmp
push
scas
mov
out
fwait
psrad
shll
inc
sbb
or
mov
in
push
rcrl
in
subb
lds
jb
in
leave
sub
mov
adc
sub
push
sahf
jns
add
adc
dec
and
xor
fs
mov
sti
mov
psrad
out
pop
shll
xchg
stc
hlt
xchg
mov
outsb
mov
rorb
inc
jns
outsb
adc
mov
andb
inc
inc
add
mov
mov
ds
in
in
ds
sbb
insb
std
push
insb
fucomi
jmp
test
andb
mov
in
adc
imul
push
cmc
mov
xchg
cmp
ljmp
xor
xchg
mov
out
shrl
inc
into
pop
mov
jge
test
in
adc
sahf
jp
adc
adc
jecxz
insb
cmp
dec
push
stos
loopne
out
xchg
ds
sub
rol
inc
add
sub
adc
fwait
or
mov
ret
clc
leave
jnp
cmp
xchg
or
popa
nop
test
mov
inc
push
sti
into
add
pop
lds
ljmp
stc
fnstcw
sbb
ret
dec
shr
adc
mov
mov
ret
and
push
test
mov
mov
popl
rol
test
cmp
mov
cld
std
and
xchg
lods
inc
lret
xor
in
xor
outsl
xlat
dec
add
fdiv
fiadds
dec
add
dec
cmp
mov
adc
inc
xchg
mov
jg
ds
push
pop
mov
nop
add
cs
pop
xchg
popf
add
rorl
adc
pop
mov
xchg
adc
xlat
xchg
mov
pop
cmp
das
xor
inc
das
insb
pushf
fimull
sbb
ja
xor
sbb
adc
stc
push
stc
xchg
mov
popl
stc
xchg
test
test
imul
mov
xor
or
xchg
into
sub
rolb
test
cmpsb
rorl
and
sub
mov
fcmovnu
xchg
mov
popa
cmp
sub
xchg
cli
mov
cwtl
dec
test
mov
subl
cmp
push
test
insb
xchg
cmpsb
and
pop
sbb
out
cltd
mov
and
push
sub
and
sub
pop
cmp
call
sbb
out
icebp
imul
adc
dec
adc
loopne
mov
sub
data16
data16
mov
xlat
std
and
ret
dec
mov
push
js
lret
cmp
out
sbb
mov
dec
fimuls
cmp
and
or
pop
fs
mov
fcomps
push
pushf
xlat
into
popf
push
push
push
mov
jnp
imul
xchg
insl
pandn
jns
pushf
es
hlt
pop
mov
pop
lret
mov
jnp
push
add
or
adc
iret
out
shll
xchg
pop
xchg
jne
add
mov
cmp
inc
sub
sbb
fiadds
xchg
xor
mov
xor
sbb
out
and
and
daa
mov
js
inc
leave
icebp
fnstcw
add
fldenv
aas
cmp
test
xor
pop
aad
cmp
push
pop
inc
sub
mov
cmp
pop
xor
lret
dec
mov
adc
xor
jecxz
clc
pushl
xor
cld
popa
loopne
or
mov
jae
in
out
sbb
loopne
or
xchg
sub
jmp
push
popa
jg
xchg
pop
dec
and
negl
adc
pop
ret
ficoml
fs
or
int
cmp
jg
push
push
std
mov
lea
leave
mov
insb
test
cld
adc
or
out
dec
in
lret
enter
nop
add
outsb
insb
scas
xor
mov
cwtl
out
and
jns
mov
mov
mov
mov
or
pusha
cmpb
inc
pop
notl
mov
sbb
ret
cmp
movsb
repz
sbb
ja
mov
iret
or
push
inc
jmp
js
jns
pop
out
in
cmpsb
gs
nop
push
mov
ret
mov
push
xchg
jmp
mov
pop
lds
cs
fwait
jl
dec
lret
outsb
jp
mov
inc
and
xor
in
mov
js
push
daa
fwait
jbe
sub
lock
xor
adc
leave
sub
shl
repz
addr16
mov
rolb
int3
pop
sbb
pop
out
lock
push
popa
add
sbb
jns
call
inc
js
cmp
mov
xor
jmp
cmp
inc
test
jb
inc
mov
ja
push
dec
gs
lahf
pop
repnz
push
jae
cmp
gs
push
ficoml
std
add
xor
jb
xor
inc
mov
push
or
and
xchg
add
dec
sub
push
fnop
in
mov
and
inc
or
imul
hlt
in
mov
sbb
inc
or
dec
jecxz
jge
out
or
inc
in
in
jl
es
lods
cltd
xor
scas
and
sbb
xor
aad
orb
mov
cmp
xchg
ret
pusha
pushf
push
cmp
jge
stc
inc
out
xchg
push
dec
xchg
fildll
les
inc
outsb
stc
dec
std
hlt
lock
leave
iret
adc
test
xchg
movsl
fcoml
ds
test
fs
minps
popaw
cmp
loopne
enter
iret
dec
int
repnz
jge
jp
in
or
js
les
daa
lea
testb
test
jmp
mov
xchg
mov
inc
sub
mov
js
fisubrl
outsl
icebp
outsb
pop
outsl
xchg
lahf
loope
test
mov
mov
mov
dec
mov
fsubrp
jae
adc
pop
xor
out
adc
test
mov
push
add
movsb
sub
movsb
and
fsubrl
jecxz
mov
fwait
sbb
cs
mov
aam
jb
loopne
test
daa
lods
ljmp
inc
std
pop
inc
movsb
jmp
mov
pop
fsts
mov
in
dec
movsl
sbb
mov
jecxz
jge
movsb
ja
dec
add
mov
push
lea
mov
cwtl
sbb
test
sahf
sub
ss
mov
dec
dec
push
inc
pusha
mov
or
int3
cmp
pop
in
pop
lret
jmp
pop
rorb
insl
fnsave
pusha
cwtl
jp
in
and
lods
adc
fwait
pop
jae
inc
out
inc
stc
mov
sub
mov
sub
ljmp
pushf
mov
fnstsw
dec
out
xor
mov
popa
fwait
mov
mov
mov
and
or
xor
push
test
mov
cltd
mov
mov
mov
aaa
cmpsb
shl
add
leave
cld
out
lcall
adc
xchg
sarl
sbb
adc
mov
adc
icebp
xchg
flds
fistpll
in
push
cld
sahf
arpl
call
fninit
outsl
jns
sbb
jns
inc
or
adc
sub
movsb
dec
ret
fnstcw
cltd
inc
jmp
dec
lds
call
sbb
sbb
stc
decb
jb
int3
repnz
xchg
xor
ret
adc
orb
rolb
xchg
test
adcl
or
push
mov
fisttps
adc
popf
add
lds
inc
pop
push
dec
std
mov
out
sub
pop
cmc
movsl
cli
ljmp
in
out
mov
and
out
xchg
jnp
sahf
pop
mov
iret
loopne
or
es
int3
sahf
fst
in
mov
dec
push
mov
out
mov
mov
or
inc
scas
in
mov
mov
mov
mov
add
adc
inc
cmp
ror
inc
push
cmp
insl
cmpsl
add
push
xor
cmp
mov
jnp
adc
mov
mov
mov
lcall
repz
insl
mov
fdivr
jnp
fwait
movsb
mov
ud0
cmp
or
test
add
mov
cmp
int
mov
adc
loop
push
mov
cmp
cltd
or
fsubr
pushf
sub
and
mov
mov
pop
into
mov
xchg
push
fcmovnu
inc
loop
ss
or
sub
pop
jl
das
pop
and
and
mov
sbb
pop
cmp
fnstenv
das
mov
jne
sahf
test
addl
ret
repz
push
bnd
sbb
cmp
and
fists
test
jnp
add
mov
xor
insb
lods
xor
push
adc
mov
lahf
das
movsb
loop
sbb
mov
test
lcall
je
test
scas
pop
sarb
lods
mov
sbb
test
push
mov
fcoml
push
lret
xchg
ljmp
mov
mov
pop
add
xchg
jno
pop
jecxz
lods
in
loop
pop
xchg
push
loope
sub
or
and
and
mov
mov
rcrl
sbb
mov
jl
mov
divl
push
mov
inc
movsb
mov
enter
shr
dec
xchg
xor
test
scas
or
and
pusha
and
test
sarl
dec
lock
adc
push
mov
or
movsl
adc
repz
sti
sub
lds
or
xlat
mov
int3
imul
adc
sbb
cmp
in
mov
imul
icebp
mov
mov
call
cmp
sub
addr16
sbb
xchg
jl
pushf
out
shl
or
lret
fistpll
adc
ljmp
mov
sub
sub
scas
std
jecxz
dec
xchg
test
loop
inc
aam
and
push
das
push
mov
fmull
daa
mov
and
sub
sahf
xor
pop
jnp
jle
int
fwait
in
pop
push
add
jno
je
xor
adc
xor
aas
loopne
das
sbb
xor
lods
xor
inc
pop
aaa
xchg
test
rclb
loope
cli
repz
xchg
imul
pop
rclb
sbb
and
push
mov
js
lret
rcrl
andl
cmc
xor
jae
push
cmp
test
mov
das
push
fmuls
pop
aaa
dec
pop
roll
mov
push
inc
mov
add
or
cmc
mov
cs
jbe
imul
shll
push
repz
sub
arpl
push
mov
mov
push
push
sti
xorb
shrb
rcrb
jecxz
push
jae
insb
dec
fmulp
cmpl
subb
jns
inc
dec
clc
cmc
jbe
fsts
sti
mov
cmp
pop
sti
scas
outsl
fdiv
rcll
sbbb
adc
ret
test
enter
sahf
cwtl
and
push
popf
sub
shl
pushl
ljmp
add
dec
push
fbld
sbb
out
es
mov
loopne
cmp
mov
mov
fisttps
or
aad
cmp
pushf
sahf
lock
lods
lea
jg
mov
pop
jg
push
int3
cmp
addb
jb
shll
cmp
dec
add
dec
mov
push
push
sub
pop
xchg
enter
enter
leave
aad
mov
push
adc
inc
xchg
scas
fstpt
ret
xchg
and
ds
and
xor
shrb
gs
pop
lods
pop
je
jnp
iret
inc
lcall
sub
jecxz
xchg
xchg
lret
fs
sub
out
popa
les
xor
out
push
cmp
xchg
mov
inc
lock
mov
mov
jge
and
and
push
inc
adc
push
scas
sbb
pop
mov
lock
lcall
xchg
aas
pop
mov
mov
aas
std
dec
imul
pop
lret
orl
bound
add
aam
or
xchg
pusha
pop
lock
sbb
aad
adc
cmc
xchg
cmc
push
mov
inc
adc
ret
sti
fistps
out
fucomp
imul
jns
mov
cmp
sub
loopne
ret
mov
pop
pop
stos
jb
outsl
int3
int
notl
mov
mov
jbe
cmpsb
in
into
pop
push
insl
sarb
fimull
xchg
pop
adc
div
rorl
lock
and
shrl
imul
ficoms
jne
dec
xchg
lods
pop
int3
mov
loop
pop
loopne
push
xchg
test
hlt
sub
mov
jl
sub
outsb
mov
mov
in
andb
jge
bound
sub
sarb
sbb
decl
insb
push
jbe
xchg
jno
sbb
test
mov
and
les
mull
inc
xchg
stos
add
xor
jecxz
rcl
sub
andl
dec
fdivr
mul
and
adc
outsb
dec
xor
test
repnz
xor
fldl
sti
enter
imul
sbb
xor
xchg
loope
sarb
in
rcrb
xlat
test
xchg
das
xor
ja
mov
rcr
in
jmp
out
mov
push
adc
sub
repz
jno
mov
cld
xor
push
or
mov
cmp
lods
push
inc
js
cld
xchg
cmc
push
mov
fsubl
fsts
sbb
mov
mov
leave
or
push
push
dec
test
mov
clc
loop
insb
paddusw
pop
cmp
insl
xor
cld
xchg
int
pop
dec
nop
jecxz
or
fistpl
out
cmp
jl
push
pop
insl
test
dec
push
push
jno
notl
sahf
insb
es
sarl
jle
arpl
inc
push
movsb
lret
addr16
roll
sub
mov
sbb
lahf
mov
pop
mov
xlat
push
int
or
push
push
fsubl
jge
inc
int
sub
cltd
push
mov
and
icebp
push
or
fucomip
inc
hlt
mov
or
push
out
or
sub
sub
test
aam
sub
lea
ret
inc
sti
ss
mov
fiaddl
adc
or
and
loopne
xchg
iret
mov
loopne
mov
lret
int3
fidivrl
add
mov
lcall
ret
sarl
js
inc
inc
push
mov
test
xor
in
aam
cmp
jo
shrb
testl
jmp
in
les
push
flds
mov
je
imul
adcl
jo
movsl
movsb
movsl
lods
jns
push
or
stos
sbb
imul
mov
mov
lret
mov
outsl
mov
add
dec
sbb
stos
jnp
out
jne
mov
cmp
cmp
dec
mov
pop
push
icebp
aad
std
scas
inc
cmp
pop
dec
add
lods
or
iret
mov
adc
addr16
or
inc
xor
jb
mov
pop
cmc
data16
mov
lret
popa
hlt
cmpsl
inc
mov
mov
xor
imul
pop
outsb
or
jp
dec
mov
pop
push
xchg
imul
mov
out
jnp
and
fwait
and
mov
add
xchg
push
push
add
push
sbb
sti
adc
gs
adc
rorb
pop
add
mov
aas
shll
dec
adcl
dec
lcall
mov
pop
and
ss
or
push
adc
sbb
out
scas
cmp
lret
fcoml
add
gs
cmp
jmp
jg
gs
ja
mov
jnp
lcall
or
push
dec
rorl
fwait
sub
add
xchg
imul
push
bound
lcall
int
push
push
push
lods
shll
jne
sbb
sbb
or
mov
test
xor
insl
movsl
in
pop
cwtl
scas
shrl
mov
mov
repnz
xchg
fnstsw
icebp
push
cmp
pop
sbb
lds
rol
mov
sbb
adc
or
cmc
sbb
lds
pushf
outsb
outsl
xor
push
cld
mov
loop
loope
lock
test
pusha
lret
sbb
repz
adc
mov
cld
pop
push
dec
fsub
fcomip
mov
cs
fcompl
and
out
loope
sub
mov
pop
pop
icebp
int
push
mov
lea
ficomps
shlb
push
ss
loope
lcall
jecxz
pop
mov
add
push
and
lods
xchg
sub
je
fwait
aad
and
int3
inc
out
jne
ret
add
in
push
mov
jmp
pop
insb
mov
aam
outsb
mov
loop
in
pop
xor
loop
lock
mov
jbe
aam
mov
inc
int3
frstor
dec
in
sti
cmp
repnz
enter
icebp
or
mov
imul
mov
xor
or
sub
js
pusha
mov
outsb
push
jmp
imul
cmp
push
and
out
mov
and
xor
lahf
push
dec
jl
inc
push
xchg
mov
or
icebp
xchg
ret
or
xor
jne
jle
nop
add
jmp
xchg
sbb
bound
test
repnz
mov
decb
sbb
xchg
pop
jb
lret
xor
push
adc
inc
lods
xor
test
in
cmp
clc
jne
fs
bt
jo
daa
pop
push
cmp
add
adc
sub
fnstsw
sub
int3
lret
pushf
sbb
sbb
jp
rol
rcrb
adc
inc
jb
int3
mov
loop,pn
mov
xchg
lods
or
dec
mov
cld
fimull
fdivl
mov
xor
jle
and
and
mov
pushf
mov
pop
xor
fsubs
stc
shrb
test
ja
int3
arpl
pop
mov
and
shl
dec
mov
out
andb
repnz
out
or
sub
lds
push
mov
movsb
arpl
adc
loope
iret
leave
imul
in
mov
jno
dec
dec
dec
mov
testl
push
jbe
dec
push
mov
cmp
mov
dec
int3
aad
cmpsb
inc
pop
pop
pop
adc
adc
jmp
insl
dec
cwtl
pop
jecxz
add
mov
fwait
add
mov
cmp
and
pop
adc
sbb
flds
ss
data16
cwtl
call
and
push
dec
or
adc
inc
mov
xor
aad
mov
adc
push
test
inc
sub
xchg
cmp
es
push
lret
and
sub
cmp
mov
mov
ret
dec
add
fidivrl
xchg
iret
push
stc
cmp
dec
leave
jl
sub
push
and
jg
addb
in
xchg
rorl
sub
fs
lret
int
xchg
mov
adc
mov
popa
aad
xor
insl
and
pop
lcall
xchg
fwait
mov
mov
push
push
pop
sahf
and
pop
cmp
xor
add
sahf
adc
mov
cwtl
movsl
jecxz
insb
std
mov
xor
in
or
ja
jg
inc
sub
mov
cli
enter
add
repnz
dec
fstpl
cli
mov
aas
lea
jo
mov
and
insl
xor
inc
mov
xor
fwait
loopne
cmp
in
movsl
mov
mov
mov
idivb
fcoms
loope
push
or
test
out
xchg
fcmovnu
in
stos
mov
xchg
pushf
out
lods
ds
push
jp
add
pop
ret
ljmp
push
cltd
pusha
nop
shll
aam
mov
pop
cmp
mov
test
dec
xor
lcall
mov
imull
dec
mov
shl
mov
loopne
mov
cmp
pop
dec
push
inc
jecxz
loop
pop
push
sub
jmp
cli
mov
xchg
jne,pt
and
add
push
sbb
loope
mov
jp
fdiv
add
mov
jmp
cmp
stos
popa
ljmp
out
adc
xor
inc
mov
mov
ret
lock
sbb
shrl
imul
daa
and
fbld
adc
pop
pop
int
push
inc
sub
mov
pop
es
outsb
xor
bound
pop
mov
arpl
cmpb
mov
out
pop
cmp
cwtl
jnp
add
add
pop
std
mov
repz
fisubs
out
les
inc
imul
mov
aam
cmp
cs
out
xchg
pop
xchg
insb
or
jns
pop
mov
lods
and
pop
mov
jo
lds
lret
dec
lcall
xor
in
cmpsl
and
pop
popa
or
jno
js
push
stos
repz
add
nop
push
lcall
shr
lret
push
jle
or
imul
in
icebp
and
jae
cs
mov
xchg
das
push
ljmp
sbb
pop
or
fdivs
cmp
mov
in
stc
loop
xorb
test
stos
outsb
xor
pop
in
sbb
or
sub
pusha
js
std
xchg
add
dec
mov
das
fistps
test
in
sub
mov
jle
push
inc
pusha
std
in
idivb
and
mov
jecxz
fadd
sbb
xlat
aaa
inc
testb
mov
and
jns
subb
clc
cmpsl
test
call
add
cli
enter
mov
adc
repz
adc
idivl
stc
lock
popa
in
fldl
dec
cmp
xchg
lret
lods
ss
sbb
das
sarb
adc
mov
xor
mov
ficoml
ss
int3
cltd
movsb
inc
sbb
dec
ds
and
and
sub
nop
iret
int3
dec
xchg
test
adc
add
pop
clc
or
stos
sbb
or
mov
pop
cwtl
xchg
mov
sbb
mov
dec
sbb
dec
jo
repnz
mov
ds
push
scas
test
cmp
orl
sbb
pop
out
out
hlt
xchg
mov
mov
cmp
fiadds
push
movsl
imul
jmp
insb
popf
sbb
push
xor
xor
rorl
fabs
negb
in
add
rcrl
scas
in
xchg
mov
inc
pop
outsb
mov
and
mov
dec
inc
nop
je
or
jne
cmp
loopne
pushf
push
mov
pop
mov
xlat
out
mov
aas
mov
aas
mov
dec
lret
pop
mov
data16
lret
jae
test
push
and
sti
pop
dec
iret
mov
jp
out
sbb
push
push
xchg
and
loope
lods
jecxz
pop
icebp
stos
push
call
int
add
shrb
and
mov
aas
into
shrl
or
mov
loopne
shlb
outsl
testb
fmulp
fwait
dec
mov
pop
dec
push
mov
outsb
int3
mov
icebp
dec
frstor
sahf
xchg
lods
sbb
jp
and
fstl
stc
adcb
dec
jle
out
add
xchg
dec
fisubrs
inc
scas
add
jmp
cs
rcrl
add
lds
sub
ja
sub
sbb
aam
in
mov
stc
mov
or
cmp
add
adc
out
pop
cmp
jl
cs
adc
inc
mull
jmp
nop
push
push
push
add
ds
fwait
xor
mov
mov
pushl
xchg
mov
lock
rcrb
push
rolb
inc
or
jp
inc
insl
push
loop
scas
jge
cmovge
rcrb
inc
dec
ret
pop
dec
fists
lods
sub
mov
jmp
in
pop
xor
lret
arpl
int
mov
out
jecxz
imul
mov
daa
push
mov
jbe
shll
lcall
ja
xor
dec
je
dec
dec
maxps
inc
popf
mov
inc
jmp
and
jecxz
lock
dec
mov
gs
stos
pop
ss
or
pop
fwait
add
mov
adc
pop
repnz
mov
cmp
push
out
push
scas
cmp
mov
and
sub
pushf
xorl
ss
dec
cwtl
inc
mov
cmp
lods
cs
lds
inc
cli
mov
shll
add
sahf
xchg
test
xchg
jge
jle
dec
jno
cld
sbb
push
jg
fildll
adc
sub
dec
ljmp
cld
shll
sahf
repnz
jbe
adc
jmp
insb
mov
dec
cmp
mov
arpl
mov
das
mov
aam
and
jae
ss
xor
negb
pop
clc
jge
fdivrp
mov
das
scas
inc
in
and
pop
and
sti
push
pop
pop
orl
int3
or
lods
jbe
sbb
stc
fcom
inc
incl
stc
loop
sub
and
push
popa
ret
cwtl
mov
pop
je
sub
pop
stos
inc
pop
ds
inc
push
or
int3
xlat
jno
push
test
cli
mov
rorl
xchg
pop
les
xchg
and
jae
mov
or
cli
in
outsl
cmp
xchg
mov
jecxz
push
xchg
lock
dec
scas
out
fstps
xchg
hlt
insb
arpl
outsl
xor
and
repnz
out
jle
movsl
sub
xchg
jl
out
scas
loop
xchg
in
pop
cs
sti
xor
orl
std
sbb
shl
cmp
in
hlt
or
imul
inc
ljmp
lea
cmp
pop
jbe
and
sbb
push
int
xchg
push
aaa
push
sub
pop
and
push
push
xor
aad
cltd
dec
jmp
fcmovne
out
push
pop
xor
nop
pop
mov
xchg
out
push
and
iret
test
sbb
adc
jmp
xchg
stos
stc
xchg
jnp
fucomi
jne
clc
push
sub
sub
jo
icebp
pushf
jmp
pop
xchg
es
xor
int3
daa
push
enter
ffree
dec
repnz
mov
cmp
push
std
fstpt
shlb
adc
pushf
jo
fistl
or
or
aam
cmp
iret
cmp
cmpsl
xchg
add
or
shr
adc
jmp
call
mov
jmp
pop
cmp
gs
xor
or
adcl
mov
sub
cmpsb
hlt
and
inc
addr16
mov
or
cmpsb
sti
lock
lcall
add
gs
lahf
out
shrl
fs
gs
loop
in
sub
int3
cltd
repnz
sbb
mov
cs
into
out
sbb
cld
xor
xchg
loopne
outsb
es
in
pusha
pop
test
mov
cmp
adc
ljmp
mov
int
sub
xchg
dec
popf
mov
cs
cwtl
into
pop
sub
xchg
xchg
push
mov
push
ja
or
loop
mov
sub
mov
or
push
lahf
in
pushf
pop
jmp
rcrb
fisubs
cwtl
cwtl
push
sub
add
stos
jecxz
movsl
jle
loopne
push
lret
pop
sub
loope
enter
fsubrl
sbb
fcomps
pop
scas
or
xchg
add
adc
dec
dec
mov
xlat
or
xlat
push
outsb
repnz
cwtl
inc
orl
cltd
lods
sahf
adc
fnstenv
sbbb
and
push
lret
popa
fisubl
cmp
sbb
clc
aas
inc
test
scas
ret
test
adc
inc
adc
addr16
jb
rolb
loopne
sub
fbstp
jnp
vmread
sahf
mov
mov
push
mov
leave
xchg
fwait
out
negl
stos
mov
orb
mov
in
xor
xchg
or
or
and
mov
shrb
iret
mov
addr16
mov
test
add
jno
xor
fwait
and
or
sbb
jns
movsb
xchg
into
inc
and
data16
xorl
jecxz,pt
test
inc
mov
sahf
mov
in
inc
fucomip
mov
pop
xor
dec
popf
xor
loopne
jnp
jge
and
jo
jle
fidivl
aas
negb
cmpb
push
push
repnz
cmp
mov
xchg
lods
icebp
aam
fs
pushf
jl
xor
jb
mov
xchg
js
cmp
lcall
mov
add
xor
andb
jne
mov
jb
sub
xor
fimuls
js
test
in
loopne
push
inc
cltd
and
sub
aam
push
hlt
loopne
xchg
js
inc
fnstcw
jge
add
mov
pop
jno
mov
fmul
jmp
inc
xor
dec
inc
and
icebp
mov
pop
dec
lea
outsl
add
das
loope
ljmp
cmp
xlat
lods
rcll
jbe
mov
mov
shlb
hlt
scas
sub
mov
pop
pop
adc
decl
shl
mov
jmp
aam
mov
pop
hlt
xchg
xorl
out
clc
cltd
or
push
shll
pop
push
pusha
mov
xchg
pop
daa
adc
popa
and
fwait
lea
add
inc
aad
mov
fdivs
arpl
sub
cmovae
and
xor
mov
scas
sub
aaa
rorb
pushf
xor
stos
mov
fcomp
and
ret
gs
mov
add
push
sahf
out
dec
inc
ljmp
cwtl
xchg
data16
fs
setg
xor
daa
sysexit
xchg
push
lret
in
push
cwtl
push
xor
pop
or
lods
mov
scas
push
out
out
jp
mov
or
into
dec
movsb
aas
jo
loopne
shrb
mov
pop
cwtl
mov
adc
scas
sahf
imul
pop
cli
mov
leave
jg
sub
xor
mov
negb
push
dec
xchg
cmp
add
ljmp
stos
add
bound
pop
loopne
aam
adc
cld
dec
and
cwtl
and
cli
and
xchg
fdivr
cmc
rcl
fcomps
xchg
popf
fstps
add
mov
push
and
icebp
rorl
xorb
sub
fcmovnb
sbbb
jae
fisubrs
out
dec
dec
loop
pop
ret
ss
clc
sub
cmp
or
aaa
sub
and
and
adc
push
push
gs
push
inc
in
push
mov
cmp
jg
shrl
cmp
dec
cltd
pop
and
imul
int
out
xor
js
aaa
xchg
xchg
jp
inc
iret
iret
dec
dec
dec
xor
dec
insb
xor
push
xchg
sub
sbb
xchg
dec
shrb
jb
hlt
mov
mov
ret
jnp
fnstenv
stos
leave
jl
dec
xchg
mov
ljmp
cs
addl
in
pop
lods
fwait
test
push
add
xchg
push
clc
mov
ret
rorb
lahf
fsubrp
inc
pop
outsb
dec
adc
cmpsb
and
xor
jmp
sahf
scas
and
fimull
xor
xchg
test
add
subb
push
testb
lret
ja
and
push
sbb
mov
xorb
pop
adc
pushf
mov
xchg
jmp
test
xchg
push
rclb
sti
mov
das
jne
or
lfs
fistpl
xor
dec
mov
mov
shl
dec
aaa
mov
push
cmp
data16
adc
cltd
push
inc
xchg
cli
sbb
xor
data16
je
dec
adc
popa
lds
cmp
mov
addr16
loop
or
nop
cmp
pushl
popf
dec
jge
cmp
rclb
mov
mov
mov
cmp
sub
jbe
jge
repz
push
mov
adc
pop
in
sahf
cmpsl
mov
jge
jne
xchg
pop
stc
hlt
cmpl
pop
xchg
popf
xchg
fistps
test
je
sub
jg
ss
sbb
insl
in
pushf
push
or
push
adc
cmp
xor
push
data16
mov
popf
mov
aaa
push
popa
add
js
adc
call
and
pop
das
xor
icebp
leave
pop
popa
inc
adc
ljmp
mov
call
aaa
mov
push
push
cmp
xchg
mov
fwait
mov
mov
and
ja
stos
test
call
mov
mov
insb
sub
and
lahf
dec
push
ljmp
insb
inc
int3
dec
mov
inc
or
or
pop
inc
sub
inc
mov
movsbl
repnz
mov
lods
adc
push
ret
call
cwtl
xchg
fnstenv
fbstp
cmp
xorb
pop
mov
pop
sub
dec
rorl
mov
jl
shrb
in
mov
mov
popl
aaa
popa
cmp
xor
cli
in
inc
fstpt
test
test
sub
lret
scas
mov
decb
inc
sarb
jp
daa
sub
mov
pushf
dec
jne
mov
leave
cmc
cmp
sbb
subl
jp
sub
inc
pushf
xor
addl
sbb
fwait
in
test
push
sbb
mov
add
cmpsl
fs
sbb
loop
sbb
shll
lahf
popa
xor
sbb
mul
mov
sahf
mov
add
stos
insl
push
ds
cmpsl
js,pn
out
dec
loop
push
enter
cmp
lret
sbb
and
cwtl
fldenv
jo
test
cmp
scas
loope
mov
and
sbb
jge
mov
fldenv
loope
push
ret
dec
sbb
stc
shrl
jp
add
sub
movsl
iret
fdivr
or
and
les
jne
sbb
not
sub
push
cmp
in
arpl
loope
cmp
leave
cmp
pop
sbb
pop
inc
inc
mov
add
out
or
mov
and
clc
repnz
pusha
test
push
xchg
or
int3
adc
dec
insb
xor
fnsave
push
pop
shrb
dec
push
jnp
mov
adc
pop
cmp
inc
mov
dec
add
stos
idiv
sti
loope
dec
xor
mov
pop
and
adc
out
stos
xchg
outsb
dec
adcb
inc
les
jbe
ja
or
push
jne
inc
pop
jle
in
mov
xchg
lds
and
rcrb
pop
test
or
lret
mov
jae
repnz
or
test
fwait
mov
push
out
iret
cmpl
or
lods
mov
push
xchg
lcall
into
mov
imul
inc
int
add
sub
add
ret
push
sub
sub
roll
nop
inc
aam
dec
into
dec
enter
in
je
or
push
dec
jecxz
push
jne
imul
dec
mov
inc
dec
jbe
lret
imul
out
mov
insl
sub
add
in
jno
jae
int3
add
push
xor
push
mov
adc
or
fs
js
test
insb
mov
inc
sbb
mov
lahf
push
fistl
sub
fstpt
sbb
sub
sbb
popl
ljmp
arpl
mov
out
dec
pop
dec
cmpsl
dec
in
icebp
in
call
fistpl
scas
mov
pop
es
stos
adc
mov
adc
push
jmp
push
ja
pop
orl
mov
fdivrs
adcl
aad
jecxz
hlt
xlat
or
scas
add
pop
cmp
or
cmp
cmpsl
stos
movsb
and
test
adc
pop
jmp
jbe
push
mov
sbb
fwait
xor
mov
inc
ret
aam
aad
in
lea
cli
lods
xor
lret
mov
aam
lock
insb
mov
adc
inc
mov
pop
sub
out
rolb
in
pop
stos
mov
out
mov
out
mov
inc
out
mov
mov
sbb
mov
xor
xor
jecxz
shlb
out
add
addr16
xchg
std
adc
mov
call
outsb
cli
pop
nop
mov
cmp
ds
mov
pop
lahf
xor
mov
imul
xor
das
hlt
jge
sbb
bound
stos
icebp
sbb
mov
add
out
pop
pop
mov
out
ja
fs
call
mov
out
or
neg
sarl
or
das
jle
adc
mov
pushf
mov
insb
es
sbb
push
hlt
cmp
dec
push
test
call
xchg
dec
loope
in
in
sar
inc
bound
scas
sub
shrb
sub
cmpsb
notb
jae
mov
leave
inc
ja
or
sub
mov
fisubs
out
jp
cltd
xor
push
adcl
data16
stos
adc
mov
insl
push
xorl
repnz
sahf
sbbl
roll
test
push
in
imul
rolb
das
test
push
xlat
fdiv
pushfw
jl
ret
and
ficompl
xchg
test
xor
sub
pop
pop
test
xchg
pop
inc
pusha
cmpsb
dec
inc
adc
sub
hlt
outsb
dec
pop
mov
mov
repnz
lods
dec
inc
inc
push
push
xchg
push
jecxz
and
push
stos
lahf
xchg
dec
sbb
mov
push
push
inc
push
ja
xchg
push
bound
push
sbb
mov
loope
and
jae
sbb
mov
xchg
test
or
fmul
xlat
in
xchg
inc
fdivl
fcom
xchg
decl
fwait
ljmp
mov
adc
jb
hlt
add
movsl
out
pop
imul
andb
popl
fldl
lea
and
clc
adc
fldenv
jne
pop
fisubrl
lahf
mov
xchg
sub
in
ss
jecxz
stc
pop
cmp
xchg
push
sahf
dec
mov
mov
aad
add
xor
mov
in
int
xchg
sub
and
xchg
fmul
add
bound
mov
xor
dec
fdivrs
mov
lcall
pop
jg
jmp
cmp
mov
movsb
gs
xor
mov
cwtl
into
jae
xor
aad
mov
cltd
repnz
inc
sub
sbb
cmpsb
scas
aas
lahf
out
sbb
popf
push
xchg
jge
xor
pop
pushf
test
mov
out
and
pop
fiaddl
je
popa
sbb
inc
sub
sbb
insb
aaa
cmp
gs
dec
add
jne
cmc
xchg
cltd
mov
adc
mov
or
pop
arpl
shll
das
jns
cmp
cmp
aam
jp
jg
push
ljmp
add
jg
out
jnp
adc
fcmovu
into
inc
push
mov
int3
adcl
js
cmp
or
test
in
cwtl
mov
ror
sbb
push
mov
jp
jmp
or
push
cwtl
or
xchg
xchg
pushl
sub
loopne
je
es
cmpb
pusha
mov
pop
xlat
mov
push
popf
imul
add
stc
test
movsl
add
int
scas
leave
fnstsw
sub
sbb
mov
cmc
cwtl
add
jle
sti
mov
mov
inc
lds
pop
dec
lcall
xor
adc
xchg
ficomps
lret
jne
mov
xor
jno
loopne
push
and
movsb
into
gs
mov
dec
add
xchg
xlat
jno
shlb
add
push
fs
push
sub
mov
sub
movsb
xchg
loop
js
pop
adc
outsl
mov
test
push
popf
mov
faddl
sbb
int3
cmp
mov
movsb
jge
mov
out
ret
movsl
mov
jl
pop
inc
push
enter
cs
popa
mov
pcmpeqd
dec
icebp
mov
hlt
shr
cmp
cltd
into
repnz
inc
mov
sbb
lret
jp
aaa
cmc
cld
xor
idivb
lods
shlb
mov
movl
loopne
jae
mov
pushf
xorl
adc
fstps
shr
xor
xchg
xchg
daa
xchg
repnz
es
repz
pop
loop
imul
insb
mov
popa
push
sub
in
dec
hlt
rorl
jae
test
push
xor
fimuls
push
lcall
and
push
or
push
jae
mov
fisubrs
loope
lock
push
mov
mov
xchg
dec
sub
push
mov
test
ds
adc
cmpsb
cwtl
adc
mov
jg
jge
cs
imul
insb
testb
or
cmpsl
cltd
sbbb
insb
lahf
aad
les
adc
loopne
and
mov
jle
sub
fisubrl
js
nop
push
adc
icebp
mov
cwtl
dec
not
pop
fs
sub
adc
in
sahf
xor
jbe
lret
int
add
dec
xchg
mov
fnstenv
add
and
int
xchg
inc
xchg
int3
fld
add
mov
inc
push
xchg
std
loope
xchg
push
loopne
xchg
popf
in
mov
std
sbb
and
sbb
xchg
inc
jns
inc
jbe
movsl
mov
icebp
adc
add
repnz
sbb
scas
push
and
cmpl
mov
divb
rcrl
adc
cs
xchg
aas
mov
adc
mov
popf
mov
xchg
mov
xchg
pusha
les
jle
pop
shll
cmp
test
stos
loop
xchg
push
es
stc
push
jb
add
cmc
lock
or
stos
scas
push
jo
adc
gs
jne
outsl
sbb
in
xchg
stc
sbb
rorb
insb
mov
pop
or
outsl
dec
mov
enter
mov
xchg
jg
lahf
pusha
test
jp
dec
cli
jae
mull
mov
mov
sub
cmp
mov
insb
ja
icebp
sub
out
out
jcxz
jge
mov
fsubrl
mov
mov
rclb
xchg
xor
ds
jb
mov
pop
xor
and
pop
ss
push
sbb
jbe
dec
pushf
and
shll
movsb
dec
and
add
pop
lret
cmp
add
fisubs
cmp
mov
xor
push
in
add
lock
test
imul
repz
jnp
and
pusha
add
sti
mov
ss
push
dec
data16
push
ret
and
or
fnstcw
xchg
mov
jns
mov
mov
test
cmp
movsl
nop
sbb
cwtl
adc
push
mov
das
inc
sbb
icebp
xchg
scas
sub
into
pop
jbe
out
dec
bound
inc
mov
repnz
les
popf
jnp
imul
faddl
inc
mov
insb
in
pop
or
xorb
pushl
or
jmp
popfw
negb
pop
jne
cmp
data16
movsl
leave
mov
movsl
es
push
shlb
dec
inc
fwait
fwait
add
cmp
xchg
sub
adc
movsl
cmp
mov
sub
loope
pop
push
adc
push
mov
aaa
mov
cltd
mov
sti
fs
sahf
cmp
repnz
mov
orl
xor
lods
lds
mov
dec
jle
or
push
mov
pop
dec
insb
or
pop
push
mov
mov
adc
pop
stos
das
ret
lret
fwait
add
mov
cs
gs
notb
pop
mov
xchg
push
sarl
mov
jb
add
and
jle
mov
jmp
mov
imul
out
filds
pop
and
in
je
pop
pusha
out
or
mov
sbb
cmp
fxch
jbe
inc
arpl
and
outsb
mov
jl
into
out
out
xchg
pop
iret
mov
adc
mov
call
or
cmpsl
test
sub
ja
push
repz
int3
mov
mov
sub
scas
mulb
mov
mov
aad
je
xor
shrl
sarb
fs
in
imul
andl
sahf
mov
fistpl
sub
dec
scas
sub
aaa
stc
cmp
and
adc
ja
or
stos
push
jns
jno
pop
inc
sti
lock
ljmp
cmpsb
rolb
popa
push
pop
ds
notb
scas
in
scas
movnti
into
jp
inc
sahf
ficompl
mov
mov
aam
pop
sbb
jb
mov
mov
or
cmpsb
divl
pop
aaa
cwtl
jge
add
shll
int
in
sub
sahf
hlt
daa
push
mov
fisubrs
int
mov
pop
jae
mov
jbe
or
arpl
dec
ficoml
loop
mov
ret
lret
das
iret
mov
pop
xchg
jb
loop
test
das
imul
add
xorb
mov
mov
adc
mov
aas
dec
jg
shrb
js
lds
js
pop
popa
nop
ds
push
loope
mov
pop
pop
add
sahf
lret
xchg
mov
mov
mov
xchg
test
mov
cmp
push
ficompl
shrl
aaa
mov
mov
std
sbb
mov
mov
xor
jp
jo
inc
mov
cs
add
jns
dec
xor
dec
in
add
cmc
rolb
lcall
mov
scas
push
les
and
adc
aam
adc
dec
add
ds
inc
push
lcall
sub
mov
or
adc
push
fcmove
xchg
aad
mov
adc
testl
sub
inc
pop
pop
mov
mov
inc
mov
imul
mov
push
mov
and
pop
dec
mulb
loop
and
xor
adc
and
hlt
popa
jnp
imul
inc
mov
push
data16
lds
sub
mov
xchg
imul
rcll
add
or
je
lock
cltd
inc
cmp
sub
and
mov
cmc
std
cld
add
lds
sbb
push
fnsave
leave
mov
mov
fstps
mov
enter
stos
cmp
mov
pop
xchg
push
pushf
insb
fisttpl
mov
dec
cmc
mov
mov
loope
jle
lcall
fistpl
loopne
lahf
push
in
push
pop
xchg
mov
stos
mov
cmc
inc
popf
sti
jae
imul
dec
stos
jne
or
dec
int
xchg
gs
adc
test
lods
mov
insb
fwait
jg
pop
cmpsl
pop
cmp
cltd
dec
shll
jns
cmp
lods
lea
cmp
daa
mov
or
pop
inc
scas
pop
sub
shll
ret
shr
mov
inc
ss
adcb
in
push
stc
sub
pop
sub
test
out
loope
lret
rcr
mov
sub
jo
nop
or
les
jno
sub
xchg
mov
repz
mov
push
aas
push
mov
cmp
inc
push
xor
les
lods
int3
aaa
addr16
inc
fadd
cmp
popf
lods
clc
jnp
nop
leave
mov
pop
jecxz
add
sbb
out
mov
shlb
inc
jae
bswap
jnp
xchg
push
xchg
pop
les
or
mov
inc
adc
outsl
pop
inc
icebp
mov
fucom
jge
cs
lock
sub
jo
into
xchg
lods
shlb
fists
mov
mov
xor
mov
repz
shlb
ds
cmp
cltd
and
add
mov
in
jecxz
pop
gs
fptan
imul
jae
sbb
sbb
jl
inc
into
adc
xor
test
cmp
pop
lods
sbb
xchg
push
sub
in
sub
test
sub
call
cmpsl
out
rcrb
add
and
or
dec
rclb
mov
pop
add
push
adc
mov
ss
insl
add
loope
inc
dec
push
sbb
or
sub
inc
sbb
mov
cmp
rorl
sbb
aas
imul
and
xchg
aaa
aaa
push
mov
mov
pusha
mov
xor
popa
mov
faddl
dec
cmp
pcmpgtb
mov
insb
in
fs
sub
pop
mov
xor
cmp
imul
lcall
mov
add
ss
cmp
xchg
or
cmp
and
inc
cmc
jecxz
ja
scas
pop
notl
movsb
lock
inc
nop
in
dec
or
jb
inc
xor
mov
mov
in
xchg
add
lock
in
fcom
xor
sub
in
leave
jnp
cmovae
mov
sbb
or
adcl
rcl
out
int
stc
cmp
pop
test
addb
lods
jmp
pop
sub
or
addr16
scas
insl
lret
insb
imul
push
mov
shll
cmp
cld
mov
inc
xchg
xor
cmp
clc
mov
mov
xor
inc
sbb
divb
ljmp
inc
ret
ja
stos
sbb
xchg
rolb
pop
push
shlb
xchg
mov
aas
lock
xlat
mov
bound
sbb
jno
sub
sub
ds
leave
subb
inc
pushl
pop
add
jecxz
push
dec
out
mov
dec
push
adc
mov
shll
popf
popf
loop
mov
dec
rorl
xor
mov
out
lods
pop
sub
lea
pop
mov
mov
imul
cmp
popf
sti
jne
lea
loope
push
getsec
xor
push
jns
adc
mov
popa
inc
xor
mov
xchg
loopne
das
push
out
mov
test
xorb
adc
cmp
icebp
pop
push
div
gs
iret
pushf
nop
mov
scas
fadd
roll
in
hlt
pop
pushf
lods
xchg
clc
cs
or
cmp
out
iret
call
pop
cmp
mov
xor
adc
jne
bound
xchg
push
cs
adc
loope
out
cmp
xor
add
das
popw
sti
test
test
dec
inc
or
mov
pop
popa
movsb
adc
sub
int3
hlt
mov
cmpsb
mov
std
mov
inc
jg
pop
push
jg
out
daa
cmp
jb,pt
sti
push
adc
dec
sub
mov
cmp
aad
xchg
cmp
lcall
mov
repnz
mov
mov
sbb
orl
lds
fcoms
loop
pop
sub
ds
fs
stos
daa
jno
and
cmp
jg
xchg
mov
or
push
pop
stos
xor
mov
es
cmpsb
hlt
aaa
fwait
pop
fsts
lock
inc
mov
and
push
dec
pop
jecxz
mov
pop
jle
lret
dec
lods
fwait
repnz
fwait
loop
push
repz
pop
cmpsl
add
dec
das
scas
lds
mov
adc
pop
or
pop
pop
lds
or
nop
out
fdivrl
or
lea
or
jb
fyl2x
pop
das
sbb
xor
dec
aas
out
int3
arpl
or
test
aad
pop
arpl
in
dec
aas
bound
mov
cmp
dec
sbb
xchg
push
push
jae
ja
movsb
mov
das
repz
sub
mov
int
or
mov
mov
loope
mov
pushf
or
push
jae
rcll
pop
or
mov
or
mov
fldl
pusha
pop
xchg
xchg
add
test
inc
mov
sbb
xor
sar
sub
andl
enter
pop
pop
mov
jp
rorl
dec
cmp
pop
sbb
push
mov
push
loope
pop
addb
mov
and
rcrb
push
or
dec
sub
xchg
fmull
sbb
add
mov
and
fwait
pop
rcrb
pop
fidivrl
mov
aam
cli
adc
ficoms
push
mov
cmp
mov
pop
out
cmp
push
int3
popaw
jns
stos
out
cmp
mov
fidivs
jmp
sub
jg
std
mov
mov
xchg
dec
mov
inc
cmp
cmpsl
scas
or
mov
fwait
push
adc
mov
stc
ret
and
jmp
testl
add
or
push
adc
push
fcomps
idivl
nop
cs
fldt
inc
jmp
inc
call
pop
mov
inc
sub
aad
lret
aam
jmp
mul
xchg
leave
xor
add
aad
mov
enter
lea
fst
dec
sbb
jb
repnz
jg
and
popf
jb
dec
xorb
ret
pop
int3
push
and
and
xor
mov
cwtl
insb
push
mov
push
and
sbb
aaa
jge
pusha
or
aad
sub
jbe
cmpsl
addr16
jns
adc
adc
lea
test
repnz
jge
loop
mov
add
or
cmc
mov
fmull
clc
mov
insl
pusha
lcall
push
mov
sub
mov
stos
sahf
icebp
inc
cmp
aaa
xchg
dec
outsb
sahf
pop
fwait
pop
mov
or
scas
in
aaa
rorb
hlt
push
hlt
push
scas
lds
movsb
dec
mov
cmp
jae
inc
xorb
popf
sub
xchg
push
and
mov
sub
sbb
rorb
sbb
sub
pop
mov
adc
cmp
push
push
cmpsb
jb
jno
rep
sub
pop
xorl
dec
pushf
adc
test
push
sub
bound
cmp
out
push
sbb
mov
add
test
stc
push
jl
pop
aad
sahf
test
mov
ret
sub
jb
not
out
or
mov
adc
dec
repnz
xlat
dec
imul
dec
in
mov
mov
outsb
imul
xor
ds
faddl
mov
stos
pop
fstl
test
push
arpl
lcall
shlb
jmp
jbe
call
xchg
push
sbb
add
push
dec
sahf
fsubrl
lcall
call
inc
cli
push
push
bound
insb
xchg
das
push
test
mov
adc
adc
shll
push
fdivrl
ljmp
inc
xor
mov
sahf
fidivl
movsl
icebp
aaa
xorb
or
add
push
popf
fnstenv
dec
dec
pop
sbb
ficompl
xchg
aam
sbb
xchg
jne
jmp
push
mov
xor
arpl
and
lret
jecxz
ss
in
cmpsb
outsb
in
std
cmpsb
xor
daa
or
addr16
enter
lcall
in
mov
pop
inc
xchg
sub
int3
xchg
xor
ss
popf
ja
roll
inc
add
adc
aad
cltd
sub
cld
andl
sbb
cs
fstpt
outsl
arpl
int3
daa
mov
aaa
dec
sub
mov
xchg
ret
sbb
test
pop
sbb
lret
cmc
push
out
sbbl
xor
jb
popa
fwait
add
pop
or
pop
shrl
int3
addr16
pop
cli
xorl
cwtl
loope
mov
fcmove
sbb
rcrl
js
leave
pop
mov
lret
pop
mov
add
or
cld
std
bound
repz
loope
jbe
bound
add
arpl
test
in
pop
add
imul
mov
jno
dec
aam
cmp
xchg
loop
sbb
aaa
ja
insl
jnp
pop
rcrb
addl
inc
mov
fmull
jbe
xor
lods
leave
out
xor
subb
leave
ret
into
leave
test
or
addb
mov
jp
adc
push
push
and
and
loop
mov
rcrl
inc
outsb
fdivrp
xor
insb
or
push
push
and
xchg
loopne
cltd
add
out
sbb
push
shr
cld
rolb
ret
and
js
sahf
mov
pop
inc
xor
jge
sbbb
xchg
leave
js
or
pusha
sbb
mov
insb
ret
not
xchg
leave
insl
mov
repz
outsl
jl
pushl
push
test
mov
mov
lahf
flds
clc
ja
add
cmp
jp,pn
pop
push
or
sbb
and
fdivrs
inc
outsb
pop
xlat
pop
add
mov
icebp
fcmovnu
mov
dec
inc
xorl
out
or
sti
sub
je
mov
jecxz
jb
fwait
pop
xchg
inc
add
dec
mov
out
xchg
adc
push
sbb
enter
lcall
sbbl
inc
fdivl
hlt
dec
int3
xlat
xor
pop
in
xor
or
cwtl
inc
dec
int3
or
sub
lcall
repnz
in
jo
jb
jg
dec
dec
mov
pop
in
xchg
dec
icebp
xchg
lcall
jge
inc
pop
cltd
loope
add
add
xor
dec
les
xchg
push
movsl
lret
inc
dec
adc
int3
lea
xchg
in
push
adc
mov
cltd
fildll
sub
dec
sub
rcll
adc
decl
xor
aad
jno
or
lret
adc
std
sahf
pushf
push
outsb
jp
inc
call
cmpsl
js
stos
sub
mov
and
pushf
push
inc
ja
stc
ret
add
jbe
cmpsb
js
scas
mov
jns
mov
or
test
xor
push
pcmpeqb
mov
push
mov
gs
mov
scas
fisttps
dec
adc
hlt
dec
xchg
mov
add
les
mov
mov
outsb
clc
in
mov
mov
lcall
inc
aas
sbb
dec
mov
or
loope
ret
adc
mov
and
pushf
sbb
idivl
inc
cltd
xor
or
jmp
xor
sub
imul
loop
add
rorb
test
and
fwait
cld
mov
push
adc
pop
or
or
roll
inc
dec
add
das
rcrl
es
adc
jns
int
scas
mov
int3
cltd
and
mov
sti
lcall
or
pop
jp
inc
daa
movl
push
dec
xor
outsb
push
shr
mov
nop
xchg
stos
je
dec
loope
jge
dec
and
mov
cmp
jnp
outsb
xchg
jp
lret
xchg
mov
clc
mov
pushf
xor
cmc
packuswb
dec
inc
movsb
cmp
jns
repz
imul
cli
aam
xchg
stos
mov
sub
int
test
test
test
or
mov
pop
stos
jle
push
mov
scas
jbe
mov
mov
mov
jl
js
sbbl
lods
aas
jp
or
xchg
jae
es
push
or
pop
fidivrs
test
sbb
inc
mov
push
ljmp
pushf
sub
ret
hlt
int
fwait
mov
jl
data16
xor
filds
pop
out
lcall
push
mov
or
scas
ret
mov
inc
adc
adc
jl
add
scas
fstpt
dec
xchg
mov
mov
push
dec
int3
cmp
test
fmulp
lock
test
xlat
lods
into
and
sbb
xor
mov
lods
fimull
adc
inc
popa
inc
aam
ja
and
push
or
dec
dec
mov
idivl
xchg
sbb
cmp
mov
xor
cmp
pop
and
mov
push
jge
popl
pusha
sub
mov
sbb
aaa
mov
mov
inc
or
aas
mov
push
fsubrs
lahf
cmp
mov
inc
jno
into
push
mov
insl
jge
and
std
stos
sub
imulb
mov
leave
je
imul
cmp
ss
sbb
cmp
shll
mov
pop
lcall
negb
adc
push
adc
xchg
ds
sub
popa
loope
fs
jecxz
stos
les
pusha
jg
pop
popf
popf
cmp
aas
rcrb
pusha
gs
xlat
loopne
jne
hlt
push
pause
rcrl
sbb
jle
xchg
inc
push
xor
sub
sbb
les
sahf
inc
rorl
xchg
scas
mov
mov
pop
and
out
or
ja
fmulp
in
incb
imul
adc
sub
ljmp
cmpsl
xchg
arpl
xlat
les
and
popl
inc
mov
pop
fwait
push
inc
aas
and
sbb
pop
arpl
insb
ljmp
pop
mov
repz
lds
push
jb
and
mov
pop
cld
mov
xchg
xorl
xchg
test
mov
sub
arpl
in
mov
mov
mov
adc
pop
inc
cmpsb
sub
add
inc
xchg
dec
jl
push
xor
leave
push
add
leave
addr16
cmpsl
push
jle
jg
sti
in
std
lea
nop
daa
cmpsb
ficomps
sub
rolb
or
outsb
adc
dec
cmpsb
repnz
dec
cs
cwtl
fldenv
pop
lcall
hlt
cmp
mov
addr16
imul
sub
cmpsb
xor
std
jl
xor
xchg
inc
leave
mov
popf
bnd
aaa
and
or
sub
scas
xchg
mov
cltd
leave
dec
xorb
arpl
push
cs
sub
stos
push
add
pop
out
outsb
rcl
std
xchg
mov
shr
cmc
js
pop
mov
jae
xor
sbb
xor
jo
dec
leave
mov
ret
ret
mov
rcl
imul
lods
push
vphaddubw
add
mov
fidivrs
add
or
xlat
icebp
pop
or
lods
cs
dec
js
repz
push
jecxz
sbb
lds
shrb
jno
stc
insl
pop
enter
add
adc
fdivs
pop
lret
pop
add
xor
mov
cmc
cmp
ss
insb
xor
cltd
cwtd
ja
ror
movsb
adc
pushf
or
stc
sub
sub
loopne
mov
bound
fsubrl
mov
imul
outsb
and
lcall
clc
xchg
pop
lds
dec
dec
cld
jnp
mov
cmp
push
add
loop
and
popa
mov
adc
adc
and
cmp
push
rcrl
inc
or
jp
rolb
lock
hlt
std
jns
jmp
or
call
mov
insl
jge
rcrb
mov
adc
and
pusha
ficomps
cs
pushf
push
fisttps
lock
repz
cmpsb
push
in
call
jl
push
arpl
dec
sub
hlt
lcall
in
movsl
pop
push
movsl
pop
mov
insb
imul
mov
dec
sub
sub
loopne
rcrb
push
xchg
pop
xor
gs
xor
insb
int
add
jo
fwait
mov
mov
ret
lahf
fnclex
xlat
pop
fs
cmpsb
pushf
jb
jo
aaa
out
dec
inc
out
adc
loopne
push
dec
jge
sbb
bound
stc
fs
mov
sbb
aas
xor
mov
cmp
movl
jo
stos
call
or
mov
push
mov
push
rep
test
sub
dec
mov
test
pop
or
call
mov
out
sbb
lods
gs
sbb
cmp
push
pop
in
loop
stc
ret
jge
xchg
sbb
insb
cmp
pop
nop
jg
pop
repnz
shlb
jge
cli
insb
aam
jae
int
xorb
sahf
roll
in
mov
call
jb
ljmp
inc
inc
push
insb
lods
je
push
out
in
dec
insl
int
popf
cld
aam
push
inc
xor
fnstenv
push
jp
mov
push
enter
mov
test
dec
rcrl
cmp
ficoml
xchg
repz
pop
jno
jne
loopne
es
ljmp
outsl
fsubs
dec
fbstp
repnz
sbbb
mov
push
stc
pop
std
cwtl
dec
jnp
pop
push
sti
inc
cmpsb
pop
mov
aad
movb
stc
push
ja
test
cmc
jno
cld
add
mov
jl,pt
movsb
cmp
inc
mov
inc
dec
xchg
cltd
lahf
mov
inc
add
jb
pop
mov
push
ret
imul
pop
mov
in
add
insb
sbb
addr16
popf
daa
popl
insl
int3
loop
push
cltd
inc
hlt
mov
or
or
and
popf
lahf
jnp
mov
and
or
xor
test
mov
xor
jbe
sub
mov
inc
test
sub
movl
dec
and
sub
push
lods
inc
dec
push
and
daa
sbb
sub
or
add
sbb
loopne
push
xchg
mov
jnp
insb
pshufw
xorb
inc
mov
xchg
or
loopne
push
stos
xchg
mov
mov
cwtl
and
add
ret
fnstcw
or
mov
nop
inc
cli
and
xchg
xor
push
mov
push
mov
dec
repnz
in
xor
adc
lahf
gs
pop
enter
mov
fisttpl
aas
pop
xor
inc
cmp
fiadds
and
ja
pop
and
jne
push
mov
into
or
aam
push
mov
cld
xor
mov
data16
in
lds
mov
dec
lret
fidivs
sub
gs
in
icebp
outsl
test
inc
lret
sbb
adc
cwtl
std
shl
addb
mov
pop
in
test
or
jbe,pt
lds
mov
mov
or
mov
out
cltd
aas
or
test
test
outsb
and
xor
push
jno
jge
movsl
jbe
loop
rorl
subl
xor
push
mov
lcall
sbb
sub
jmp
shll
sbb
cmp
loop
dec
mov
sbb
mov
xchg
push
aas
adc
adc
xchg
clc
subl
sahf
adcl
or
xor
repnz
push
js
ret
js
dec
and
mov
xchg
pop
jnp
mov
out
xchg
push
aaa
push
or
pusha
js
out
pop
lret
stos
sti
jno
push
add
inc
ja
inc
add
lods
pop
xor
xor
aad
jge
test
mov
mov
jb
sub
iret
jbe
and
aas
dec
lds
arpl
fbld
and
mov
cmp
pusha
dec
dec
mov
adc
cmp
enter
dec
push
rcrl
mov
shlb
in
mov
hlt
adc
sbb
gs
and
in
sbb
pop
sub
int
adc
sbbl
pop
xchg
push
push
pop
shll
xchg
sti
fistl
add
xchg
mov
inc
mov
inc
pop
jge
negl
xor
and
sbb
or
mov
lcall
pop
inc
imul
sbb
or
in
pop
test
outsb
adc
cmp
mov
and
mov
xchg
xor
outsl
aas
jne
or
xchg
and
lret
add
nop
popa
fs
inc
inc
dec
jle
pop
xchg
cs
mov
and
mov
ss
jo
push
psubb
jbe
es
jp
add
cmc
notl
iret
sbb
sahf
xchg
cmp
dec
pop
icebp
inc
mov
xor
pop
inc
out
mov
mov
cld
push
outsl
dec
insb
adc
xchg
fadd
sub
inc
xchg
in
pusha
out
adc
cmpsb
jle
xchg
cmp
fdivrp
rorb
push
inc
je
rorl
sbbb
cmp
in
cmp
sbb
outsb
test
add
cmp
dec
cmp
mov
and
in
xchg
mov
mov
imul
ret
jle
out
xchg
pop
pop
mov
xchg
mov
mov
clc
arpl
lods
sbb
ljmp
imul
and
jg
dec
sub
xchg
fldl
leave
test
xchg
ja
cld
and
cmp
inc
dec
adc
push
jnp
pop
xchg
test
imul
inc
ret
push
icebp
sbb
and
jl
repz
pop
popf
push
adc
mov
sbb
insl
dec
sahf
sub
mov
mov
xor
imul
test
push
lret
mov
sahf
mov
test
arpl
mov
bound
cmp
and
sbb
imul
push
mov
cmp
loope
std
sbb
gs
shlb
mov
int
pop
push
adc
cwtl
bound
xor
in
sbb
lahf
movsb
jecxz
cltd
dec
xchg
shrb
jg
jbe
adc
rcll
mov
fsubr
adc
jb
ret
loop
sub
mov
adc
push
scas
fsubs
mov
aad
lcall
arpl
xchg
inc
sbb
mov
sarb
add
ret
jbe
inc
mov
xor
cmp
dec
xchg
fcomps
notb
insb
inc
test
jmp
test
rorb
sub
dec
add
fwait
test
xchg
cmp
std
div
pushl
mov
loope
sahf
xor
aad
pop
adc
iret
lahf
adc
mov
and
mov
rorl
scas
clc
std
and
rolb
or
inc
jp
outsb
loopne
imul
xlat
loop
je
dec
scas
cmp
outsl
sahf
mov
jno
stc
int3
inc
subb
movsb
movsb
push
inc
sub
jbe
and
stc
or
shrl
mov
push
xor
into
clc
jge
divb
push
or
dec
movsl
movsb
push
add
stos
cmp
inc
mov
jg
pop
mov
jne
rcll
out
push
jmp
icebp
lcall
lret
sbb
cmp
pop
js
inc
cmpsb
xchg
inc
or
sub
sbb
xor
adc
test
lds
jle
lock
push
cld
pop
in
sub
js
sub
in
push
ljmp
jb
lods
jno
fs
cld
adc
mul
mov
out
ffree
sti
push
pop
aam
jge
and
clc
icebp
ja
mov
inc
ljmp
add
push
insb
pop
adc
push
fucomp
cli
shlb
cmp
out
shll
cli
mov
inc
cmp
pushf
cmc
test
ds
jae
xor
fmul
rcr
scas
jae
lret
sub
js
popf
cmp
arpl
call
nop
stc
add
push
dec
bnd
mov
mov
dec
cltd
fcomi
xchg
sbb
mov
mov
sti
sub
les
or
push
lods
dec
mov
hlt
sub
mov
leave
or
idiv
and
cltd
rorl
mov
aaa
cmc
js
jo
cmp
xor
cmp
rcrb
mov
push
and
xor
push
or
dec
movsb
mov
jle
clc
imul
jp
jp
or
mov
sub
sbb
dec
inc
lret
adc
lea
mov
pop
cmp
xchg
stos
and
xor
pop
je
cwtl
out
sub
ss
or
pop
mov
sti
orb
ds
mov
in
push
fildl
mov
sbb
jns
jae
ja
sbb
and
xchg
dec
test
add
and
mov
sub
stc
cmp
inc
arpl
xchg
dec
add
leave
mov
inc
and
xor
cltd
dec
xor
sahf
sarl
jle
inc
pop
xor
sub
test
out
pop
rclb
mov
jb
scas
mov
xchg
nop
pop
clc
movb
lahf
cmp
roll
mov
jecxz
xchg
push
outsb
enter
cli
pop
adc
push
fcoml
es
mov
inc
aad
xor
sbb
jle
daa
sub
and
lods
dec
xchg
out
nop
xchg
xchg
sbb
push
fimull
add
addr16
sarl
sub
movsb
push
lods
stos
cmp
and
jle
xor
sub
sbb
test
jbe
sbb
aas
scas
xchg
cmc
leave
rcl
lods
mov
push
repnz
movsb
pop
sbb
out
cmpsl
inc
insl
jmp
and
insl
pop
fiaddl
sbb
pop
and
xchg
cmpsb
and
mov
mov
popf
dec
mov
icebp
sahf
repz
xchg
data16
lahf
push
push
int3
orl
inc
jle
bound
inc
mov
popa
sub
inc
sbb
mov
xor
and
xor
and
adc
fiaddl
fisubrl
out
and
add
xchg
xchg
sub
dec
jbe
cmp
stc
lods
das
mov
jecxz
mov
stos
pop
in
cwtl
addl
mov
xor
inc
xor
add
dec
jle
outsl
inc
mov
fimull
test
hlt
daa
or
sbb
sbb
pop
lret
aam
cmp
mov
mov
fcomps
pop
sti
fdivs
scas
jecxz
adc
dec
inc
jmp
lods
into
clc
test
js
inc
jb
xor
xor
inc
mov
jecxz
push
xchg
addr16
xlat
jbe
push
mov
out
mov
daa
int
pop
jne
inc
in
dec
and
cmc
call
xor
pop
mov
mov
int3
pop
sbb
push
xlat
pop
push
mov
sub
and
sub
xchg
call
fsubp
push
jns
mov
mul
pop
mov
aam
mov
xchg
pop
mov
stos
pop
push
sub
jp
fwait
mov
aaa
push
cmp
jge
push
jnp
jbe
xor
stos
dec
aam
or
pop
push
lock
aaa
cli
shrl
add
pop
adc
push
and
sbb
sbb
sti
cmp
lret
sub
dec
sub
incb
mov
cmp
fdivrl
ja
dec
ret
mov
xor
push
xchg
push
add
dec
push
pop
pop
xchg
shld
add
inc
pop
movb
xchg
aas
inc
push
add
fs
inc
shld
and
jb
hlt
push
imul
imul
push
lea
cmp
xchg
inc
adc
sbb
rcr
cmp
out
fists
movsb
jae
pop
and
mov
jmp
daa
scas
xchg
xor
mov
and
cmc
aaa
and
sbbl
arpl
and
addr16
stc
adc
cmc
je
pop
add
test
pop
xchg
sbb
decb
icebp
hlt
push
fisubrs
mov
xor
lock
cmp
dec
adc
lods
adc
into
es
xchg
daa
mov
and
cmp
dec
xchg
jns
pushf
pop
addl
insl
fdivrl
jb
inc
scas
jae
enter
add
dec
test
mov
jle
outsb
jnp
sbb
jg
lds
or
clc
in
fidivs
dec
call
inc
push
dec
fcompl
and
js
js
gs
jle
pushf
pop
pusha
add
sbb
frstor
xor
popf
xchg
sti
jge
jmp
pop
mov
lcall
mov
and
out
inc
fcoms
inc
inc
xchg
call
loope
jns
pop
adc
sahf
rcrl
sahf
mov
mov
dec
out
clc
push
push
lea
filds
inc
and
das
fucomip
add
pop
cmp
loop
sub
xchg
sbb
jmp
sub
add
fdiv
jae
out
loopne
xchg
lds
fcomps
xlat
mov
fmuls
inc
icebp
sbb
mov
push
push
fisttpll
scas
lods
add
add
rcl
add
repnz
clc
sbbb
sub
mov
sbb
adc
pop
div
repnz
cld
std
fnstcw
mov
dec
cltd
sbb
test
push
jo
add
add
jb
dec
and
mov
push
ds
pushf
xchg
jnp
mov
sbb
mov
xor
jmp
pop
ret
mov
hlt
xlat
int
repz
repnz
jp
orl
mov
aas
adc
incb
stos
fsubrl
test
or
jbe
xchg
lret
push
fisttpl
pusha
dec
lret
testl
dec
arpl
xor
jnp
xchg
adc
pop
int3
das
xor
push
sbb
es
push
stc
xor
push
aad
jnp
add
ljmp
mov
mov
dec
push
jno
pushf
fdivs
sahf
cmp
iret
jb
lods
dec
mov
dec
imul
cmpsb
sbb
jnp
mov
push
cwtl
push
andb
jns
in
cld
out
push
push
cmp
outsb
loope
lret
jge
sti
sub
fdivrs
andl
inc
jnp
shll
icebp
dec
mov
dec
or
in
pop
push
adc
shl
sub
xchg
sbb
push
fimull
fadd
xchg
stc
lock
jae
push
push
cs
mov
dec
xchg
and
addr16
sub
imul
push
leave
fcomps
or
push
test
add
test
and
mov
mul
mov
sub
xchg
dec
xchg
mov
cld
sbb
xchg
push
push
mov
add
das
insb
out
jne
rcll
jmp
push
adc
js
stos
sarb
ss
pop
push
push
lods
pop
jae
out
aaa
jp
test
jne
mov
ljmp
dec
cmpsb
xor
xchg
out
ljmp
sar
in
fwait
jne
cmp
lods
stos
jl
push
sti
mov
or
fdivrl
cmp
sbb
out
mov
push
add
cmp
stos
add
xchg
cmp
sti
frstor
cmp
les
jecxz
mov
dec
into
sbb
movsl
mov
inc
push
mov
mov
mov
out
into
aas
jle
xor
enter
shrl
mov
dec
inc
sub
jns
add
adc
xor
aad
pop
inc
dec
adc
mov
jle
adc
jge
loopne
sub
test
sbb
rcrl
mov
push
mov
movsl
inc
cmpsl
xchg
cli
jl
inc
in
add
loopne
add
inc
pop
fisubrs
xchg
fcomps
in
mov
lret
mov
jno
movsb
out
shrl
push
fnstenv
adc
mov
popa
dec
lods
or
mov
into
mov
int3
mov
addl
fbld
inc
mov
xchg
add
insl
ds
in
add
inc
adc
jnp
sbb
clc
xchg
mov
insb
cmpsb
push
outsb
dec
iret
cld
mov
subl
lret
add
fiaddl
ret
hlt
notb
jno
bound
cmp
in
jae
popa
xor
rclb
pop
push
rcrl
adc
fs
int3
mov
sub
vmovntdq
mov
movsl
jmp
les
jmp
fisubs
pop
stos
ret
lds
cmp
cs
inc
jo
add
adc
sbb
popa
pop
out
aaa
xor
xchg
mov
cmp
inc
inc
xchg
push
pusha
jo
inc
add
jo
add
shrl
addr16
andb
mov
call
pop
ret
lods
mov
xchg
out
mov
repz
xchg
lock
push
mov
xchg
lahf
or
sbb
xchg
adc
cmp
mov
inc
cmp
addr16
lret
mov
jo
jbe
sahf
adc
push
call
out
sbb
mov
loope
jo
loope
aaa
pop
and
ret
sbb
cmpsb
pop
add
cltd
xchg
sbb
fidivl
push
xchg
cli
data16
xchg
subb
push
addr16
inc
cli
sbb
call
pop
cld
add
imul
es
or
aam
test
sub
inc
sub
dec
enter
and
cs
add
fisubl
and
leave
adc
sub
lods
mov
loopne
das
push
and
pop
pop
les
inc
mov
mov
mov
daa
in
pop
add
jl
push
xchg
cmpsl
sahf
in
inc
daa
lods
adc
popa
cs
in
lods
test
mov
lods
loop
inc
push
popa
mov
lret
fimull
inc
movsb
movsl
pop
stc
push
imul
movsb
and
fucomip
mov
shl
and
mov
ljmp
jecxz
push
sahf
test
mov
lods
enter
add
fldenv
cmpsl
push
add
bound
xchg
jecxz
out
in
movsl
fisubl
dec
push
adc
jae
sti
xchg
pop
std
call
push
imul
jp
adc
cmp
in
dec
mov
xor
mov
xor
je
es
pop
jae
jb
xchg
out
and
fwait
ret
add
sub
test
test
cmp
out
add
std
dec
sarl
mov
push
xchg
cli
js
fst
jo
cmpsl
negb
gs
adc
add
iret
es
ds
sub
jge
out
aam
or
iret
cli
jo
jp,pn
ret
dec
incb
add
fiadds
ret
pop
sub
mov
sti
movsb
loope
jnp
cli
sar
add
pop
test
sti
sbb
outsl
jmp
fcomp
lcall
pop
test
aaa
xor
fcomp
mov
jbe
call
sub
pop
adc
pop
ds
lahf
dec
mov
fildl
scas
cmp
and
xor
or
push
xor
loop
cwtl
loope
mov
int
stc
idiv
leave
mov
mov
jae
jnp
std
jle
scas
sub
shll
aad
push
or
divb
sub
ds
add
pop
shr
aaa
call
fistpll
int
push
data16
adc
orl
int
sub
out
ret
dec
xchg
cmp
sub
sbb
jae
fisubrl
out
insb
jle
in
add
jmp
mov
shll
addr16
sub
out
pop
jbe
popf
xor
bound
add
in
xor
ss
dec
and
cmp
imul
dec
pop
mov
cmp
cmpsl
xlat
jae
aas
or
arpl
xchg
icebp
nop
into
popf
mov
xchg
xor
cmp
push
stos
icebp
cwtl
push
inc
dec
sbbl
loopne
das
cmp
xlat
loope
aaa
jl
dec
popa
jmp
xchg
inc
add
push
push
imul
mov
daa
push
inc
mov
stos
shr
loopne
jle
imul
or
mov
pop
les
inc
xchg
idivl
shl
arpl
lea
add
fs
push
jae
sbb
rcrb
aad
outsl
test
mov
hlt
lcall
sub
cmpsl
add
jmp
call
repz
das
aas
sahf
push
jmp
int
jnp
fs
mov
or
les
int3
lea
lock
incb
or
push
movsl
addl
ljmp
mov
cld
pop
push
ds
jmp
insb
xchg
cltd
mov
in
rorl
adc
test
stos
in
insl
pop
pop
or
ss
mov
pusha
ret
jecxz
fnstcw
jle,pn
lods
fisttpll
ror
sbb
sub
fsubl
or
jb
lahf
lods
pop
mov
movsl
mov
subl
lock
scas
xor
negl
sbb
dec
aaa
add
sub
mov
nop
bound
movsl
mov
aaa
sub
fdivr
pop
inc
in
mov
in
mov
pusha
mov
popa
movsb
mov
enter
or
sub
or
jo
or
nop
movsl
les
fiaddl
aas
jbe
or
mov
push
push
mov
adc
mov
test
and
pop
inc
sbbb
push
ds
add
mov
xchg
push
aad
cmpsb
mov
jmp
gs
lcall
jne
es
gs
mov
sahf
xor
testb
mov
mov
test
xor
cwtl
shrb
fldz
sbb
and
push
jo
jmp
adc
cmp
in
test
push
js
addr16
cmp
pop
movsl
cli
stos
xchg
fcompl
adc
or
pop
cmp
hlt
aad
and
aaa
scas
push
fdivs
ljmp
sub
adc
jae
nop
pop
push
sbb
sub
and
jne
dec
lahf
xchg
dec
xchg
sti
out
cwtl
aam
xchg
jae
and
fwait
inc
arpl
insl
arpl
pop
mov
mov
pop
push
bound
push
mov
addr16
inc
mov
lcall
pop
in
test
ret
jo
mov
push
sarl
or
and
xor
insl
gs
and
pop
xchg
add
xor
xor
leave
mov
in
adc
push
sub
adc
pop
sbb
xchg
fiadds
jo
add
pop
xchg
in
pushf
and
xor
notl
andl
inc
xor
pop
lock
push
repnz
out
sub
mov
jl
xor
mov
movsb
dec
ja
bound
sahf
push
cmovbe
xor
push
mov
xchg
xchg
push
shlb
scas
xor
add
sbb
insb
cmp
adc
lahf
mov
outsl
mov
jecxz
lret
das
add
test
lret
or
xor
stos
mov
sub
mov
popa
popa
lea
in
push
mov
sbb
call
outsb
xor
jmp
push
lahf
out
js
test
lahf
js
sbb
dec
fcoml
pop
movsl
sbb
and
sub
pop
pusha
and
mov
or
mov
fiaddl
popa
mov
inc
jp
cmp
stos
std
mov
pop
repz
xchg
cmc
or
mov
in
in
lock
aas
or
pushf
inc
adc
and
push
out
pop
xor
xchg
sbb
loop
fistl
sub
loop
aad
sbb
test
or
xchg
and
iret
nop
lret
adc
sub
test
xchg
jg
shrb
insb
push
sbb
or
xor
loope
dec
ljmp
nop
or
inc
mov
rcr
leave
cltd
mov
xor
sub
lods
int3
and
jg
mov
pushf
add
into
pop
mov
cmpsl
repz
rol
ljmp
xchg
cltd
ljmp
pop
dec
shll
mov
and
adc
aas
test
fisubl
add
mov
out
sarl
and
push
sbb
loopne
pusha
enter
out
test
mov
xlat
test
xor
mov
pop
out
xchg
shlb
cmp
fistps
jmp
sub
mov
mov
shl
dec
dec
sub
cmpsb
test
pop
jb
mov
scas
cmp
arpl
insb
fmull
push
xchg
sbb
lahf
ret
bound
ret
sub
test
in
in
inc
adc
fimull
imul
out
fadd
outsb
add
or
push
mov
cmp
test
movsb
fistpl
pop
mulb
lcall
repnz
cmc
data16
push
inc
pop
jne
xchg
mov
adc
sbb
dec
mov
push
sub
std
das
pop
mov
loop
mov
vcvtdq2ps
in
fwait
daa
gs
mulb
push
movsl
dec
setb
into
negb
cmp
sbb
and
cmp
mov
xchg
sub
adc
pop
sbb
or
leave
imul
mov
into
mov
out
notl
out
push
cmp
in
cmp
pop
call
jle
xlat
sarl
mov
pop
sub
xor
mov
xchg
in
popf
js
mov
dec
add
arpl
pushf
clc
fidivl
inc
jecxz
jbe
push
jnp
ret
dec
lret
cmp
out
in
cs
and
cmp
ret
stc
mov
imul
in
xor
jne
push
int
stos
cmpsl
mov
mov
or
jnp
sub
hlt
test
mov
jne
cli
xor
aaa
daa
divl
sbb
in
ret
sarl
out
aas
mov
lahf
sbb
mov
ds
or
push
fnstenv
mov
dec
and
gs
cmpsl
jecxz
xchg
mov
pop
iret
outsl
cmp
add
pushf
jno
inc
lret
mov
pop
pop
inc
inc
push
insl
adc
xor
dec
inc
add
pop
incl
jae
pusha
adc
sub
sbb
xor
dec
les
lret
pop
add
fsubrp
push
data16
mov
jo
cli
dec
and
dec
and
movsb
adc
jne
lcall
xchg
addr16
push
out
ja
jnp
mov
sahf
pop
fwait
je
fst
jecxz
lahf
lods
mov
sbb
sub
mov
add
jbe
das
dec
roll
cmpsb
jge
fisubrl
popa
mov
cli
adc
lods
mov
in
fs
lock
dec
iret
insb
xor
je
dec
je
shll
insl
push
shrb
pusha
out
push
jne
xchg
pusha
addr16
imul
mov
orb
lds
test
pop
dec
adc
mov
addl
pop
addb
mov
clc
jne
mov
xchg
xchg
sbb
jae
cwtl
push
lret
ss
cld
frstor
mov
adc
xlat
add
cmp
mov
jne
ja
mov
mov
in
cmc
aad
adc
push
inc
sbb
fdivs
mov
lea
mov
mov
cltd
jp
xchg
or
notb
mov
cld
xor
out
sub
movsl
rolb
mov
mov
cmp
pop
sbb
add
out
ljmp
lock
add
fwait
push
fcos
inc
xchg
fistl
add
ja
push
lea
sub
inc
repnz
leave
jae
cs
push
cmp
loopne
hlt
ljmp
pop
jmp
lds
push
and
lock
or
ja
sbb
xchg
or
mov
outsb
mov
imul
push
jl
adc
xchg
mov
pop
inc
data16
inc
inc
test
ss
sbb
xor
lea
orb
data16
jns
sbb
enter
xchg
cmpsb
cld
imul
and
cmp
movsb
xor
loopne
pop
movsb
divl
xchg
cmp
or
daa
js
call
divb
mov
cmp
cmp
rolb
setg
mov
cltd
pop
test
mov
pushf
xor
aam
dec
movsb
jge
cmp
sbb
js
mov
dec
leave
aad
xor
imul
test
data16
pop
ja
js
xor
lods
test
gs
jbe
icebp
push
xchg
add
sbb
inc
loopne
xchg
pop
inc
repnz
inc
out
pop
inc
mov
push
push
jae
dec
cmpsl
mov
dec
or
jno
fbld
mov
and
xchg
mov
shl
insb
adc
sbb
push
pop
clc
sub
ljmp
mov
shl
mov
cmp
adcb
cmp
mov
xchg
sti
fsubs
xchg
and
outsb
arpl
aas
in
sarb
push
je
mov
lds
or
lea
shlb
sub
add
adc
hlt
or
cmpsb
sti
fcomps
lret
xchg
inc
and
stos
mov
pop
lahf
js
mov
mov
cmp
cwtl
ret
xor
jmp
scas
pop
ja
imul
mov
pop
mov
insl
int3
add
jae
mov
repnz
push
xor
nop
pushf
adc
sbb
es
sbb
fsubl
sarb
adc
adc
add
lahf
test
aad
rep
ljmp
in
rclb
xchg
jne
push
lahf
fmull
and
pop
mov
mov
mov
cmc
jnp
push
mov
ret
jne
nop
fs
and
pop
add
jns
outsb
xchg
out
imul
mov
xchg
enter
add
or
mov
cmpl
inc
sbbb
cmp
xchg
mov
jbe
call
popf
mov
test
mov
pusha
popa
lret
adc
jne
jb
xchg
push
jmp
cmp
xchg
xchg
dec
sub
xor
imul
je
and
cmpsl
and
out
out
iret
jle
mov
movsl
jl
loop
sbb
cmp
jnp
jno
jg
adc
add
pop
cmpsl
adcb
lahf
fldcw
pop
jg
mov
das
cmpsb
push
ljmp
mov
pop
call
xor
sub
std
mov
jne
mov
or
in
sbb
or
push
push
mov
mov
fimuls
lock
sarb
xor
enter
mov
notl
cmp
sbb
inc
mov
cmp
mov
xchg
xor
lcall
push
inc
out
test
adc
ja
mov
ret
insl
pushf
inc
dec
mov
rcl
leave
out
dec
pop
mov
in
sti
mov
cs
loope
fildll
rclb
rcll
add
add
push
repz
add
nop
in
pusha
push
ret
stos
adc
push
xchg
lock
movsb
loope
or
clc
pop
je
push
sub
andb
mov
lods
push
mov
or
and
jp
stos
push
lods
pop
mov
and
mov
push
jne
push
jne
mov
outsl
int
stos
aas
in
loop
sub
inc
xor
jo
and
loopne
je
xor
jmp
sub
dec
adc
xor
jmp
jmp
xchg
sbb
xor
outsl
sub
fxch
test
mov
pushf
iret
cmp
cmc
lds
pop
lahf
lock
xor
mov
mov
loop
and
iret
mov
pop
les
test
mov
cmpsl
aad
inc
and
fdiv
cmp
es
xor
data16
xor
mov
test
ljmp
ficoms
cmpsl
loop,pn
cld
cmp
pop
push
and
push
dec
dec
xor
daa
mov
insl
mov
insl
mov
adc
ror
pop
xchg
pop
cmc
and
adc
rorb
xchg
jmp
cmpsl
xchg
push
mov
mov
inc
inc
mov
aaa
and
cmc
jnp
mov
outsb
popf
push
or
cmp
and
int
in
js
mov
or
fdivl
ljmp
pop
jo
cmc
ret
adc
aaa
xor
jg
pop
adc
lods
mov
push
out
mov
push
test
cld
sbb
sub
icebp
pop
xchg
pop
rclb
push
out
mov
mov
jns
mov
adcl
scas
in
xchg
adc
mov
lret
stos
push
nop
fidivrs
fiaddl
roll
or
push
mov
pop
pop
faddl
xchg
jns
bound
lea
adc
divb
fistpll
jmp
jb
je
xchg
adc
dec
xchg
xchg
pop
sbb
arpl
loope
push
xor
push
out
ds
sbb
jne
add
fmul
xor
pop
movsb
push
es
push
mov
mov
xchg
mov
jl
xor
push
dec
mov
mov
es
adc
shrb
fistps
test
arpl
fcmovne
pop
pop
dec
clc
lcall
rclb
lcall
data16
das
sub
inc
daa
lods
outsl
mov
jae
les
inc
sbb
sub
repnz
jne
sbb
mov
dec
fwait
sbb
clc
push
out
loope
xchg
sbb
sarl
xor
jmp
test
sub
jg
pop
aas
call
cs
movsl
mov
fcompl
fmull
dec
ja
inc
mov
mov
xor
mov
gs
pop
aad
xor
sbb
mov
popl
movsb
mov
adc
push
mov
lahf
xchg
mov
outsb
sbb
ret
in
push
adcl
pop
test
or
pop
sti
je
push
mov
jns
insb
test
adc
sbb
fbld
adc
lods
xlat
dec
pop
shlb
stc
and
push
pusha
xor
jg
push
ficompl
sbb
icebp
pop
test
pop
lahf
cmp
dec
fldenv
adc
fimull
mov
and
dec
cmpl
fwait
stos
adc
xchg
jmp
or
jb
ud1
outsl
push
lahf
nop
pop
cmpsb
mov
pusha
push
fucomip
inc
scas
mov
shrb
push
dec
lret
pop
cmp
out
repz
cmpsl
aaa
int
fcompl
lods
jp
inc
lret
push
imul
stc
xor
push
cmp
dec
negb
jge
or
les
xchg
daa
push
jb
cmpsl
stc
hlt
call
rorb
fdivl
les
aas
hlt
je
test
mov
mov
iret
cs
pop
ja
add
inc
das
inc
jmp
scas
adc
jae
ret
xor
out
roll
pop
mov
jno
scas
fxch
pop
push
dec
or
mov
add
inc
dec
sub
fs
push
sub
ret
sub
test
cld
pop
sbb
sbb
sub
bound
mov
xor
mov
pop
add
adc
rcrl
xchg
jbe,pt
inc
scas
std
add
dec
jg
pop
mov
pop
out
jae
repz
scas
out
scas
icebp
push
nop
add
mov
pop
mov
cmpsl
push
mov
enter
pop
out
rcrl
ja
mov
mov
mov
test
and
icebp
inc
out
mov
mov
fcomp
dec
and
mov
xor
lcall
mov
push
ja
ja
stos
sarb
jb
dec
fcoml
sub
xchg
adc
xor
add
push
int3
sub
fdivrp
adc
in
sub
sub
outsb
fcmovbe
add
ret
and
cmpsb
adc
cmp
ret
push
imul
notl
sbb
ret
mov
mov
add
mov
imulb
adc
mov
ljmp
scas
xor
test
push
jnp
and
movsl
dec
nop
sahf
imul
insb
lds
xchg
xchg
cmp
inc
inc
adc
lret
mov
repz
lock
cwtl
mov
jg
iret
push
pop
mov
xchg
mov
inc
xchg
ret
rdmsr
mov
fsub
push
ja
add
fcmovnb
mov
data16
das
aas
sub
mov
xlat
pop
mov
je
adc
push
xor
test
das
push
fcoms
minps
adc
sti
mov
xchg
cmp
test
dec
add
flds
xor
test
sub
cmpsb
lods
add
movsl
in
cmp
push
pop
jne
mov
push
sbb
pop
cwtl
jnp
xchg
dec
xchg
push
push
rcr
inc
adc
adc
adc
shl
sub
loopne
iret
out
cmp
cwtl
insb
cmpsl
dec
out
adc
rcll
rcrl
repz
pop
lods
sbb
cmpsb
mov
pusha
pop
test
jg
movsl
inc
push
call
mov
js
shll
xor
cmp
pop
or
aas
mov
imul
in
out
cmpsl
jo
pushf
pop
repnz
mov
inc
cltd
inc
dec
pop
stos
cmp
sub
loope
jecxz
sbb
rorb
jbe
push
sub
push
sbb
inc
dec
rcrl
repnz
add
inc
mov
into
mov
test
or
fs
ljmp
push
imul
es
insb
roll
in
fdivrs
fadds
cmpsl
lds
cmp
cmpsb
cmpsb
ljmp
fistpll
inc
clc
cmpl
mov
mov
je
adc
aad
add
jle
pop
lret
pop
pop
push
outsl
out
stc
sub
jbe
add
pop
xchg
jne
sub
cli
push
xor
mov
sbb
push
mov
mov
data16
popa
xor
pop
icebp
jle
int3
jbe
cltd
mov
sbb
into
insl
fs
and
mov
insb
jno
xchg
mov
jns
lock
mov
cmpsl
sbb
push
fidivrs
push
push
nopl
and
jbe
xor
scas
iret
dec
jecxz
out
pop
int3
mov
xor
in
rorb
in
stos
lcall
push
push
adc
ss
inc
add
push
lods
ds
xchg
dec
pop
sbbl
push
fcomps
loope
stc
fdivs
mov
insb
lret
test
xchg
nop
test
int3
orb
out
loope
outsb
jmp
push
sub
in
int3
mov
jge
rclb
pusha
andl
ror
loopne
popl
scas
popf
sbbl
jo
and
mov
push
pop
inc
pop
in
xchg
adc
adc
mov
pop
testb
mov
ret
mov
in
push
lcall
pop
aas
adc
push
fcoml
icebp
leave
inc
sahf
jbe
shlb
xor
ss
mov
ret
es
fadds
sub
leave
add
and
add
stc
mov
cmpsb
xor
jl
mov
loope
cs
mov
sub
in
jle
aas
lret
rclb
adc
add
mov
push
lock
mov
adc
in
das
and
fisubrl
jae
xchg
bound
in
sub
sub
cli
pop
je
mov
push
fistl
jo
pop
nop
xchg
pop
push
lds
in
loop
dec
xor
ds
xor
in
sub
mov
pop
in
inc
xchg
bound
scas
dec
sbb
popf
push
sarl
xor
push
bound
pusha
inc
xor
cmp
dec
dec
pop
xchg
mov
les
sbb
mov
add
scas
mov
adc
shll
adc
popf
pop
outsb
jns
fists
or
cmc
out
sub
in
push
or
mov
icebp
out
and
inc
stos
jle
push
imul
test
xchg
in
mov
into
sbb
adc
lahf
jno
rclb
xchg
filds
hlt
jl
xchg
dec
adc
test
sub
mov
mov
imul
fdiv
or
clc
or
mov
or
iret
adc
movsb
dec
dec
xor
fisttps
popa
leave
mov
xchg
sub
xorb
mov
sub
fxtract
nop
adc
les
jo
stos
call
inc
adc
lods
std
ljmp
dec
std
dec
cmp
mov
pop
testb
jle
sub
movsl
in
repnz
and
imulb
jmp
push
lds
xchg
xor
vpunpcklbw
mov
rolb
int3
ret
mov
outsl
xchg
mov
cwtl
scas
sti
js
loop
mov
sbb
dec
shll
adc
cld
dec
jmp
std
adc
dec
movsl
pop
insb
in
incb
jmp
mov
xor
pop
xchg
imul
mov
sti
ret
mov
or
sub
adc
sbb
mov
dec
push
xor
pop
cmc
adc
and
bound
out
add
insl
sbb
ljmp
fistl
les
jmp
pusha
xor
inc
sbb
sub
lcall
incl
push
ds
fs
or
dec
clc
dec
ja
addr16
xchg
sub
mov
mov
leave
pop
lods
or
iret
test
inc
insb
mov
loop
mov
bound
gs
test
push
pop
hlt
dec
mov
pop
in
test
xorb
sbb
pushf
or
push
lret
mov
sbb
rcl
popf
jl
out
lret
shlb
fxch
imul
inc
cmp
xor
scas
push
shrb
xchg
xchg
mov
hlt
jle
adc
push
mov
mov
or
lcall
cwtl
add
les
jo
in
out
dec
divl
stos
out
rcrl
std
sbb
shrb
dec
add
and
fs
adc
xchg
pop
xchg
xchg
sub
cs
dec
dec
sub
mov
push
push
pop
xor
xchg
mov
out
popf
mov
nop
push
enter
cld
mov
dec
packuswb
lods
dec
add
outsb
cmc
push
xchg
cltd
xor
es
in
sbb
lcall
incb
or
xchg
cmpsb
jno
repnz
mov
ja
and
insl
mov
lds
sbb
aaa
sub
sub
adc
sub
cmpsb
mov
das
loope
jge
cmpsl
xchg
mov
pop
xchg
fnstsw
inc
mov
dec
pop
aaa
test
lock
inc
sbb
dec
jecxz
inc
fsubs
sbb
fisubrl
mov
sar
or
and
bound
test
nop
jl
xchg
jmp
iret
in
push
sub
cmpsl
test
rcrb
sbb
or
std
inc
cmp
lret
pop
jbe
lcall
fsubr
nopl
xchg
mov
xadd
lret
mov
subb
sarl
popf
add
fstl
sbb
dec
orl
pop
or
pop
daa
add
mov
ljmp
adc
mov
cmp
pushf
mov
sbb
imul
xchg
jae
adc
ret
test
pop
add
mov
add
or
push
sbb
add
inc
int3
std
push
ds
xchg
ljmp
xor
mov
incl
jnp
push
mov
js
loopne
stos
add
cmp
xchg
pop
pop
mov
mov
bound
push
xor
lea
and
pop
push
adc
into
inc
lret
and
pushl
loop
enter
cmpsb
hlt
push
xchg
jl
cwtl
mov
data16
sahf
and
es
cmp
mov
insl
fnop
jo
mov
adc
test
mov
dec
jle
xorb
into
and
cmp
mov
dec
fsubrl
out
cmpsl
pop
add
dec
in
xchg
and
sbb
ficoml
cs
into
mov
and
pop
pop
iret
lret
push
loop
and
xorb
dec
shrb
fcomps
pop
stos
arpl
out
sbb
ss
dec
add
pop
xor
inc
dec
nop
push
add
imull
lods
push
and
xchg
jnp
loop
adc
hlt
add
jns
sti
lcall
jge
hlt
push
clc
sbb
mov
aaa
popf
pop
outsl
or
cmp
mov
call
adc
je
dec
cmpsl
cmp
inc
inc
pop
or
loope
jae
ljmp
sub
outsb
out
inc
push
pop
lret
iret
lock
jle
out
shrb
jle
ja
inc
scas
dec
adc
sbb
daa
or
pushf
je
add
xor
iret
iret
add
mov
sbbb
enter
xchg
jno
xor
xchg
lods
add
mov
mov
data16
mov
ja
adc
cmp
test
dec
cmp
clc
leave
cmp
push
and
pusha
cli
or
sbb
push
imul
push
inc
mov
mov
push
lahf
mov
loopne
pushf
pop
sub
sbb
cs
fisttpl
bound
lcall
push
mov
sub
gs
xor
test
imul
aaa
xchg
sub
enter
xchg
jg
dec
jle
jmp
mov
mov
scas
lea
add
negl
push
xchg
add
sub
xor
adc
shll
push
sub
stc
pop
mov
jne
enter
or
mov
pop
and
dec
pop
jns
les
lret
inc
push
nop
jae
ss
cmp
xor
iret
pop
test
pop
cld
ljmp
xchg
test
jmp
cmp
int
add
imul
repnz
dec
lret
pop
insl
pushl
or
loope
mov
ljmp
mov
or
aad
mull
jne
mov
jbe
xcrypt-ctr
cmpsl
sahf
stos
out
xor
loop
jecxz
mov
repnz
int
insl
jecxz
mov
popf
mov
adc
lahf
mov
mov
out
pop
ret
push
jns
cmp
mov
xorl
lret
and
inc
cmp
xchg
and
mov
mov
pop
push
inc
nop
lret
add
enter
fistl
jae
sbb
cmp
mov
les
cmp
cmp
inc
xorl
out
sub
sti
mov
mov
adc
stos
cmpb
daa
test
push
ret
adc
push
xor
out
sbb
mov
mov
push
out
movsb
xor
gs
jmp
ret
test
inc
mov
mov
scas
xor
fwait
pop
aas
sbb
lea
imul
adc
and
faddp
gs
lret
dec
orb
cmp
push
repz
lahf
add
imul
pop
imul
scas
fs
cltd
xchg
sarl
subl
jno
mov
push
or
mov
hlt
lahf
insl
in
xchg
loopne
dec
imul
pop
pop
inc
mov
aas
popf
insl
xor
ss
add
cld
adc
xor
and
js
jecxz
xor
int3
cwtl
call
aad
sbb
ret
xchg
fidivl
imul
popf
clc
push
andl
pop
outsb
loope
in
pop
dec
xchg
inc
bound
mov
data16
inc
sub
sbb
push
lods
xor
lret
cmpsl
scas
out
outsb
cwtl
ret
jp
add
test
repz
jb
aad
jbe
sbbb
xor
sbb
lock
xchg
cmpsl
push
jecxz
dec
push
in
cwtl
arpl
dec
push
iret
outsl
pop
fwait
lahf
cmpsl
cmp
mov
pop
xor
in
data16
mov
lahf
stc
mov
pop
cmp
filds
jne
cmp
and
pop
addl
mov
xor
or
and
push
into
enter
aaa
mov
insb
mov
addr16
popa
pop
pop
insl
lret
pop
icebp
loopne
pop
daa
scas
popf
sbbb
movsl
das
mov
jne
inc
mov
or
add
filds
push
mov
stos
data16
rolb
shlb
loope
stos
xor
jb
pop
jno,pn
imul
push
cwtl
and
call
dec
or
push
pop
mov
push
pop
dec
lds
cmp
lea
or
dec
jle
mov
pop
xchg
cltd
push
push
push
inc
cmp
xchg
fmul
rorb
cld
sarl
popf
fiadds
insl
mov
ret
push
xlat
lea
out
das
stos
cli
cmp
jle
and
add
mov
mov
out
mov
dec
pop
pop
add
test
test
shlb
sti
mov
mov
insl
popf
and
push
sbb
stos
ss
mov
pop
cmp
cmp
or
out
aad
pop
xor
mov
dec
dec
shlb
mov
xor
out
mov
daa
test
jo
dec
push
mov
push
or
or
cmp
js
xorl
push
inc
aaa
xor
stos
pop
xor
movsb
fiaddl
shll
std
dec
outsl
xor
je
cmp
sbb
cmp
xchg
add
push
xor
adc
das
mov
mov
and
dec
sub
xor
imul
mov
js
mov
xor
daa
inc
lret
test
out
pop
jb
loope
cwtl
loopne
sbb
cmp
out
in
jg
and
shlb
mov
cwtl
outsb
icebp
jns
sub
out
pop
enter
sub
jno
sub
push
ljmp
aad
mov
es
sbb
cld
hlt
pop
push
lahf
call
std
ret
add
int
push
and
lods
arpl
lcall
aaa
pop
add
push
xor
cmpsb
loop
dec
jnp
cltd
stos
jecxz
outsb
mov
inc
test
div
pop
pop
inc
setno
ja
cmp
mov
bound
push
mov
rolb
loope
movsl
add
cmc
out
mov
xor
inc
mov
dec
push
fwait
inc
insb
fisubs
lods
mov
insb
andl
incl
dec
push
int
fsubs
add
mov
add
ljmp
enter
leave
js
lret
outsl
loopne
arpl
add
sbb
loop
cmp
data16
jl
sbb
adcb
push
int
add
xor
mov
std
mov
je
mov
in
dec
or
xlat
sub
mul
push
fcom
lods
loop
cmp
cmpsb
cmp
push
stos
mov
hlt
popf
push
add
es
and
dec
xchg
push
scas
add
dec
push
ss
fstpt
sub
loope
fists
aam
ja
popf
andb
int
lret
or
daa
into
or
sbb
es
into
repz
xor
adc
dec
jne
pusha
fcmove
mov
ja
mov
xor
jle
addl
sti
xchg
daa
dec
hlt
ja
inc
mov
add
leave
fisubs
ficompl
lahf
xor
scas
sub
mov
stos
lods
xchg
loope
sub
cwtl
push
inc
push
cmpsl
dec
aam
or
add
mov
in
dec
mov
test
stos
dec
mov
push
mov
push
leave
mov
sub
sub
sub
xlat
je
lods
fistps
inc
or
xor
jp
mov
test
icebp
test
inc
out
mov
jle
pusha
in
das
enter
invd
pop
ror
ss
lods
mov
fidivrl
mov
outsb
jmp
pop
pop
lods
shl
inc
imul
out
mov
subl
daa
leave
fbld
ret
sbb
mov
in
adc
push
out
mov
int
fnstcw
rcl
jmp
jae
incb
jge
mov
jp
jp
aas
pop
mov
insl
cmc
dec
insb
lret
into
jle
loop
or
addr16
mov
fcomps
or
mov
xchg
jbe
push
js
jb
fsubl
cs
insl
cwtl
mov
lea
xchg
std
or
cmp
xchg
stc
dec
xchg
sbb
shl
xor
xor
in
outsb
lds
cltd
pop
push
test
daa
imul
xor
mov
push
fiadds
das
mov
cmp
jge
das
fiaddl
cmp
pop
add
fimull
and
mov
pop
imul
mov
add
add
les
cltd
cli
jb
mov
aam
or
shll
adc
mov
mov
sub
adc
enter
push
inc
std
je
inc
jnp
pcmpeqw
mov
adc
mov
test
leave
jmp
pop
mov
inc
aam
push
cmp
test
fimuls
aas
stos
lea
incb
adc
cmp
dec
testl
sub
push
bswap
stos
push
jp
or
ret
push
adc
icebp
int
call
xor
pop
call
sbbl
xchg
sbb
or
fildl
mov
lcall
fsubl
shll
rolb
loopne
aad
imul
scas
out
lret
lea
pop
xor
cmp
cwtl
pop
dec
pop
test
lock
popf
xchg
push
jmp
xlat
inc
sub
mov
mov
and
jmp
in
sub
mov
push
out
je
test
ror
mov
or
cmpsb
sub
xchg
repz
xorb
jbe
out
dec
and
push
nop
pop
jne
push
sahf
xor
jge
lods
adc
push
loop
pop
ljmp
rcrl
pop
cs
xchg
repnz
adc
cmp
inc
inc
into
cmp
jns
cmpsb
sub
pop
sbb
in
insl
push
adc
xor
mov
into
out
mov
push
sbbb
negl
mov
sub
scas
addr16
popf
fxch
fs
push
cmp
mov
jmp
mov
xchg
mov
jmp
subl
ja
add
jo
mov
aam
mov
decb
std
out
cli
or
daa
mov
ret
push
mov
jo
push
push
lods
push
mov
push
push
popa
fisubl
das
pop
mov
pop
movsb
scas
mov
rolb
jno
nop
aad
ss
xor
loop
sbb
or
pop
pop
ljmp
dec
inc
ja
push
sub
fwait
in
push
or
js
lcall
jmp
push
or
dec
sti
push
push
xchg
lahf
lret
loop
mov
jno
adc
push
or
es
shr
inc
inc
aad
ja
dec
xchg
dec
inc
out
clc
xorl
cmp
arpl
mov
or
lret
adc
adc
push
xchg
out
sahf
sbb
dec
inc
sets
jae
adc
outsl
xchg
fwait
push
xchg
stos
jo
call
cmp
loope
mov
mov
decl
cmp
addr16
int3
je
push
mov
insb
adc
push
push
js
mov
ret
es
push
lahf
push
fistpl
cmp
xchg
and
and
push
push
aam
mov
and
mov
es
loop
cmp
lock
neg
inc
push
or
into
and
inc
jae
push
inc
jp
cld
mov
cmp
push
addr16
pop
in
sbb
mov
push
cmc
sbb
fsubr
gs
andb
ljmp
ljmp
ja
or
stos
mov
int3
inc
gs
sarb
mov
aas
test
pop
data16
adc
lret
inc
cli
sub
push
xchg
out
stos
inc
into
mov
pop
cmpb
jp
mov
xchg
iret
adc
scas
dec
ljmp
fsubrs
roll
cmp
cwtl
and
pop
test
jno
lock
push
in
mov
dec
cmp
out
sbb
enter
or
ds
mov
loop
aas
shrl
inc
stos
sub
out
cmp
jmp
cmc
or
push
js
inc
jne
rcrb
xor
mov
mov
mov
imul
out
ljmp
mov
xlat
test
outsl
test
outsb
movb
dec
adc
out
stos
mov
inc
mov
sub
lea
ds
out
mov
xchg
or
add
ds
sbb
inc
rcll
and
dec
mov
dec
fucom
lods
testb
dec
pop
jp
out
into
or
leave
sarb
dec
push
add
push
jae
jecxz
cmpl
mov
mov
int3
fsubr
lret
pop
push
mov
gs
sbb
fildl
mov
add
sub
add
and
testb
cmp
call
xchg
push
in
movsl
inc
jge
ja
cmpsw
shll
iret
mov
and
cmp
cmp
iret
fimull
stos
sbb
inc
int3
jp
insb
pop
in
adc
ljmp
sub
jns
ds
loope
mov
fistpll
aas
or
clc
iret
data16
mov
lea
stc
sbb
mov
xor
mov
pop
cmp
lods
dec
mov
gs
mov
mov
shll
mov
stos
jg
inc
leave
mov
mov
sbb
and
jne
push
movsl
sbb
pop
rcll
jp
mov
jne
pop
mov
inc
lret
dec
adc
jmp
jbe
rclb
mov
pop
xchg
je
sub
adc
mov
xor
aaa
pusha
lahf
scas
or
cmp
cwtl
jns
test
loopne
mov
sub
cmp
mov
sub
xor
and
addl
dec
jb
push
xlat
imul
cmc
icebp
add
add
and
insb
adc
std
imul
shll
lcall
push
xor
in
test
dec
mov
ficompl
lret
cmpsb
sbb
jmp
loop
ljmp
sbb
mov
fwait
add
in
outsl
gs
inc
lahf
rorb
dec
arpl
mov
in
push
adc
push
js
sbb
frstor
xor
fistps
lods
jle
dec
jbe
jbe
pop
xchg
shlb
repz
out
jl
fldl
cld
sub
lret
sbb
lods
js
mov
pop
push
dec
hlt
fbstp
dec
and
cltd
mov
in
sbb
mov
mov
arpl
lcall
add
or
out
or
sub
std
leave
popf
add
pop
int3
push
aad
bound
dec
pop
and
lock
sbb
mov
mov
scas
mov
mov
cmp
pmullw
in
inc
add
outsb
adc
ret
mov
stos
es
es
test
aam
mov
cmp
pusha
adc
adc
push
sbb
cmp
mov
xchg
loope
divb
pop
ds
out
xchg
adc
jbe
jg
jbe
lds
xor
das
clc
int3
mov
into
cmp
mov
ret
and
mov
and
or
loop
cmp
fwait
sub
cmp
xor
pop
add
stos
cmp
in
jecxz
mov
sbb
js
mov
mov
int
fldenv
out
push
arpl
cmp
and
test
in
lret
cmpsb
out
sbb
jo
adc
sub
arpl
std
clc
push
iret
xchg
popf
ret
out
cmpsw
or
cmpsb
push
fwait
jnp
mov
cmp
pop
rcl
bound
push
cmpsl
mov
pop
sub
outsb
test
pop
mov
cmpl
repnz
addr16
mov
xchg
add
mov
and
stos
mov
xchg
push
and
and
out
test
hlt
movsl
in
cmp
mov
movsl
sbb
and
sub
fsubr
ret
mov
cmpsb
xor
cmp
inc
sti
out
fst
dec
jmp
xorb
lds
call
inc
inc
mov
sub
cmp
cmpsl
jo
xor
push
mov
in
arpl
int3
nop
mov
jge
popf
jns
jo
pop
jo
cltd
pop
inc
loope
cmp
rcrb
dec
jge
lods
dec
pushf
aaa
ret
mul
js
or
mov
subl
insb
arpl
fwait
xor
inc
or
mov
mov
cld
cmp
rolb
cmp
inc
fucomp
test
push
sub
adc
repnz
xchg
mov
xor
sub
mov
aam
fs
outsb
mov
mov
pop
xchg
and
jb
sub
and
mov
outsb
adc
adc
scas
or
popa
insb
and
jl
xor
rcrl
bound
sar
aam
add
cmp
mov
or
adc
or
xchg
repnz
cmp
xchg
push
inc
jmp
dec
lods
xorb
aad
or
pop
or
sbb
fwait
and
dec
mov
dec
mov
jge
ja
aaa
outsl
push
sub
mov
out
pop
sahf
xchg
nop
sbb
fdiv
xchg
ret
xchg
std
shrb
mov
adc
int
xor
mov
js
inc
ficoml
inc
pop
ret
es
std
lds
xor
aam
adc
cld
fwait
or
dec
es
jecxz
pusha
test
mov
in
dec
cmp
cmp
rorl
push
aam
push
into
dec
push
in
imul
cmc
jecxz
hlt
xorl
and
dec
cmp
jp
mov
ljmp
dec
inc
or
test
pop
aam
popa
push
xchg
jmp
aam
xchg
jge
jns
jle
sub
pop
inc
call
in
in
sub
popa
mov
mov
inc
jp
mov
shlb
insb
and
f2xm1
cmp
jns
pop
ss
pop
adc
jnp
fsubrl
orl
sti
pusha
sti
sub
cmp
pop
out
in
jge
or
push
cwtl
int
mov
sub
or
xchg
mov
pushf
xchg
adc
scas
movsl
inc
mov
push
cmp
xchg
push
or
pop
sub
pop
lea
inc
fimull
dec
popa
mov
mov
movsl
sbb
xchg
fidivrs
in
leave
and
mov
xchg
xor
or
jnp
lods
lret
jb
xor
cmp
and
data16
sbb
mov
call
jmp
repnz
push
lods
sub
mov
imul
mov
nop
and
test
es
jae
mov
pop
xchg
inc
pop
add
or
mov
sub
popa
add
mov
test
adc
fcomp
clc
jbe
cmp
fs
sub
jg
shrb
push
pop
ret
cmp
mov
loop
or
push
sarl
mov
mov
xchg
les
mov
adc
or
push
test
sub
dec
call
mov
pop
mov
mov
and
add
iret
mov
mov
sbb
and
sub
xchg
mov
mov
imul
pop
popf
lahf
or
ret
aam
inc
adc
shrl
jg
and
sbb
mov
out
dec
or
sub
cwtl
mov
lcall
enter
add
mov
fimuls
loop
xor
mov
imul
stos
sub
mov
sbb
dec
pop
sub
xchg
push
jg
inc
in
push
call
cltd
mov
xor
or
lods
sbb
jne
xchg
in
add
sbb
dec
xor
pushf
sarb
lahf
inc
test
adc
jnp
call
sub
pop
lods
clc
ficomps
xchg
jl
mov
sbb
cmpsl
iret
mov
mov
icebp
pop
pop
arpl
je
cwtl
cs
mov
jne
mov
in
xchg
sub
ret
push
dec
push
push
or
push
fmull
out
mov
push
pop
in
dec
and
xchg
aad
std
sahf
loope
dec
icebp
cmpsb
gs
gs
push
xchg
dec
push
xor
jns
roll
in
sbb
es
mov
add
xchg
bound
or
pop
adc
inc
xchg
cmp
jmp
inc
adc
out
les
mov
dec
sbb
inc
cltd
adc
jmp
pop
lret
or
ret
testb
mov
dec
stos
mov
sbb
push
cmp
les
cmc
and
call
mov
sahf
in
arpl
mov
inc
imul
cmp
shrl
inc
adcl
xchg
pop
jge
jne
out
ljmp
int3
rep
jecxz
std
loope
inc
or
in
push
and
arpl
sti
int
mov
outsb
pop
rcl
or
adc
mov
into
data16
insb
lcall
mov
and
outsb
ljmp
xchg
cmpl
loope
xchg
popf
aaa
aam
lcall
popf
and
inc
mov
subl
jg
stc
pop
adc
test
test
aad
pop
les
test
xchg
jl
and
mov
cmp
aaa
sbb
xor
call
cmc
and
aaa
hlt
dec
repnz
cmp
jo
std
xor
lret
or
repnz
cmp
dec
mov
mov
mov
mov
insl
mov
popa
enter
lcall
loope
cli
ds
out
jbe
movsl
push
repnz
pop
xor
pop
imulb
ud1
jmp
xchg
int
out
cmp
cmpsb
xchg
sub
mov
dec
pop
inc
es
repz
lods
xchg
aaa
add
xchg
rcr
xor
xor
lret
daa
jb
clc
jne
mov
subl
cli
push
in
fists
insl
test
cltd
fsubrl
movsl
inc
int
arpl
pushf
cmpsl
dec
cs
push
jae
push
cmp
lds
out
jg
mov
mov
adc
out
jbe
jne
sub
xchg
syscall
add
lds
adc
repnz
xlat
movsbl
push
js
push
imul
sub
push
pop
jle
subl
mov
popa
sub
push
dec
jae
dec
inc
fmulp
dec
xchg
dec
sbb
in
je
stos
mov
jo
mov
mov
sub
adc
sbb
adc
cld
xchg
xchg
lods
cs
push
sbb
pop
xchg
pop
adc
sub
jo
jle
fst
cltd
adc
or
icebp
lock
mov
jne
cmp
add
xorl
mov
xor
std
pop
lds
aaa
fistps
cmp
cmp
lods
insl
pop
out
cmp
mov
mov
and
xor
push
fchs
mov
ret
mov
hlt
leave
clc
pusha
mov
mov
testb
lea
sbb
push
ret
mov
and
xor
inc
dec
jp
es
lods
adc
out
pop
sbb
xchg
sbb
mov
cmp
inc
dec
dec
add
jp
and
mov
xor
test
push
push
movsb
xchg
scas
call
jmp
scas
cmp
and
mov
lds
lods
ja
insl
dec
inc
outsb
sbb
adc
repz
mov
aad
pop
dec
fisttps
mov
mov
or
xchg
call
cs
idivl
scas
pushf
test
test
data16
mov
push
in
mov
addl
sahf
mov
imul
bound
mov
arpl
fstl
mov
stos
mov
iret
jle
jg
ljmp
in
movsb
push
ljmp
mov
int3
jp
xor
scas
loopne
arpl
inc
xor
in
push
sahf
fdivs
mov
mov
loopne,pt
test
iret
ficomps
mov
adc
call
outsl
daa
mov
mov
arpl
call
ljmpw
push
jmp
mov
cmp
lcall
xor
lahf
push
dec
lea
pop
fisubs
xor
cld
cwtl
out
aas
mov
push
es
lods
lcall
jp
fs
xor
addr16
gs
cli
flds
bound
xor
out
adc
cltd
dec
arpl
sub
or
les
and
sbb
pop
or
dec
fnsave
jmp
mov
mov
add
mov
stos
inc
sti
push
mov
mov
les
iret
loop
iret
int3
cwtl
mov
jbe
pop
es
fnstcw
mov
fldenv
push
inc
adc
push
or
add
lret
ds
mov
jne
scas
cmp
inc
inc
jecxz
in
leave
cmp
adc
jle
push
pop
int3
lahf
icebp
cli
mov
sub
add
xchg
imull
adc
testb
mov
push
repz
enter
es
andb
inc
push
rcll
mov
xor
cli
lds
in
push
int
xchg
addr16
adc
mov
dec
loopne
sarl
mov
sbb
ljmp
cwtl
repz
adc
add
pusha
pushf
pop
arpl
and
mov
cmp
into
jno
mov
xchg
iret
movsl
pop
cld
inc
test
or
sub
lret
shr
pop
adc
sbb
push
cli
int3
push
dec
imul
push
or
lock
inc
jecxz
lcall
push
jnp
dec
xor
inc
xor
dec
rol
inc
ds
sub
call
adc
imul
inc
cmp
inc
cmc
and
xchg
ljmp
or
mov
push
mov
xor
jae
sbb
sti
ss
js
loop
in
pop
inc
push
xchg
aas
add
iret
xchg
setno
lret
cltd
addl
mov
addl
push
pop
stos
bound
sbb
xor
and
loopne
lret
cmp
les
jge
xorl
sub
aam
ffree
xchg
jnp
mov
pushf
cmp
inc
aas
sbb
cmp
pop
lods
adc
cld
mov
lock
mov
pop
cwtl
dec
out
and
push
adc
jo
imul
jl
lods
hlt
adcl
test
mov
repnz
mov
jle
pop
movsl
jns
lahf
out
insl
mov
pop
mov
xor
popf
pop
add
mov
rorl
inc
inc
rcrl
or
jle
push
jecxz
push
in
mov
orl
xchg
scas
pushf
in
cmp
dec
addr16
das
lahf
inc
sbb
xchg
and
rolb
shlb
and
mov
adc
sbb
call
sbb
or
cltd
cmp
cli
cmp
push
fistpl
imul
xor
xchg
popf
jle
fadd
insb
push
mov
addr16
mov
sbb
mov
xchg
arpl
add
add
adc
jg
pop
hlt
pusha
lret
mov
push
push
in
sbb
lret
jge
loope
pop
xchg
dec
mov
and
pop
rcll
cmpsl
test
ret
mov
outsl
lods
mov
mov
sbb
addl
inc
lret
xor
fs
mov
call
and
adc
or
inc
pop
dec
mov
or
scas
push
sub
fwait
push
movsb
push
in
xchg
mov
push
aas
in
aad
in
or
lods
push
outsb
mov
movsl
xchg
xor
ds
pop
xchg
shll
lods
xchg
cwtl
mov
add
jg
popf
jl
mov
cmp
mov
addl
and
cmpsb
in
mov
mov
push
xchg
xchg
inc
add
setp
mov
sub
fisubrs
out
shrb
shlb
je
and
es
xchg
lea
add
out
repnz
test
mov
jg
mov
insb
xchg
jecxz
out
inc
flds
or
or
jns
dec
pop
pop
add
pop
push
mov
jb
mov
dec
outsl
fdivrp
fistps
addr16
aad
xchg
xchg
push
inc
shr
or
shlb
xchg
mov
pop
xchg
sbb
mov
cmp
movsl
rolb
lret
cmc
mov
arpl
hlt
cmp
xor
jb
add
dec
lds
and
rcll
bound
sahf
mov
cmp
sti
sti
fidivl
pop
lods
insl
jne
inc
pop
test
mov
popa
or
mov
test
outsb
sbb
and
xor
xchg
xchg
ja
lea
mov
fs
mov
mov
sbb
add
lret
xlat
test
sub
into
fmulp
data16
mov
lea
cld
cmpsb
fs
lods
outsb
ret
jne
mov
fists
ds
ljmp
xchg
scas
in
lods
mov
ret
mov
pushf
inc
fs
pop
jno
icebp
or
and
sbb
xorl
jle
cmp
roll
adc
rorb
sbb
movsl
cmc
out
adc
addr16
popa
test
aas
xchg
dec
or
xchg
push
lret
addr16
xorps
popa
pop
test
jbe
and
imul
add
cmpsl
sbb
mov
pop
dec
push
test
jb
and
or
shl
jl
cwtl
aaa
inc
dec
stos
out
test
lret
pop
pop
fidivs
sub
fisubs
fs
sub
and
pop
add
repz
mov
or
aas
jge
and
sbb
xchg
inc
js
in
add
je
xchg
push
add
sbb
ljmp
inc
clc
xchg
mov
jnp
cs
jge
lds
dec
out
xchg
stos
pop
xchg
cmp
leave
cwtl
pop
xchg
lea
xorb
add
imul
std
dec
xor
data16
sub
jo
xchg
push
mov
sub
fisubrs
xchg
sub
sub
shrb
pop
mov
mov
xor
push
mov
add
xchg
push
scas
das
imul
xor
dec
call
mov
push
push
fdivr
mov
jecxz
dec
fs
cmp
mov
imul
sti
lret
addr16
rol
xor
sbb
sub
std
shll
add
test
mov
push
or
inc
mov
sub
or
bound
call
leave
mov
or
loop
pop
inc
xor
or
sarb
sysenter
sbb
sarb
push
or
sbb
imul
fimuls
ret
adc
fld
mov
adc
movsb
xor
sub
xchg
ss
cmp
mov
dec
push
jae
sbb
sbb
out
hlt
push
stos
or
cmp
pop
pop
and
rcrb
ds
push
sub
lock
dec
xchg
mov
ljmp
push
out
xchg
shufps
mov
adc
mov
les
sahf
decl
inc
bound
popa
dec
pop
or
test
fs
and
movsb
outsl
inc
push
mov
in
bound
das
test
and
jo
mov
daa
xlat
jecxz
sti
dec
fs
sub
jg
pop
mov
xchg
xlat
repnz
jl
pop
hlt
and
inc
sbb
mov
orl
in
adc
loopne
mov
mov
mov
lods
icebp
out
pop
mov
and
hlt
mov
lods
cli
mov
xor
adc
jmp
push
or
inc
lea
jecxz
inc
or
inc
loope
push
jp
out
js
flds
dec
push
dec
pop
mov
lods
nop
test
push
mov
xor
ret
jno
fsubs
adc
inc
mov
lret
rep
scas
insl
lcall
adc
fsub
sbb
cmp
test
sti
dec
xor
stc
dec
sub
popf
inc
fsts
fbstp
jecxz
add
cmp
cmp
xor
inc
push
inc
or
inc
test
mov
jns
xlat
mov
sbb
inc
sbb
in
dec
ss
cltd
or
ds
cs
sarb
cs
mov
inc
and
pushf
in
jbe
icebp
inc
sub
mov
xor
sbb
jecxz
and
mov
mov
sub
iret
jl,pn
sahf
fbld
arpl
add
adc
pop
jmp
mov
stos
xor
cli
loop
mulb
fucomip
jl
adc
jb
test
mov
test
inc
bound
inc
jno
cmpsl
pop
xlat
mov
frndint
icebp
call
sub
out
mov
xchg
xor
testl
mov
pop
stos
call
mov
xchg
shrb
pop
sub
dec
xor
cs
mov
sti
repz
add
insb
cmp
rcll
mov
mov
cmp
mov
and
mov
mov
pop
ret
and
mov
sarb
ss
ret
mov
dec
jmp
repz
arpl
lahf
mov
dec
jg
pop
pop
pop
lcall
pop
sbb
xchg
lock
push
repnz
cmp
pop
lcall
out
xor
cmp
std
adc
xchg
push
out
in
das
loopne
xchg
xchg
and
sti
inc
jg
or
adc
sbb
xor
pusha
test
push
repnz
lret
pop
inc
mov
fcompl
push
test
outsb
stos
jns
cmp
std
cs
call
les
sbb
and
jp
pop
cmp
push
insl
insb
sub
add
outsb
pop
sub
test
sub
bound
sub
and
test
aad
mov
mov
subb
fs
ficoml
imul
js
mulb
sbb
pop
ret
sbb
shl
mov
and
fsubr
or
pop
test
push
jo
pop
mov
enter
ja
pop
jnp
stos
inc
rcrb
or
lods
push
mov
adcw
pop
xor
push
adc
dec
or
icebp
and
add
cld
pop
xchg
rorb
std
dec
mov
sbb
and
xchg
insl
movl
jbe
cmpsb
sti
inc
repnz
test
flds
imul
or
cmp
sbb
popa
add
xchg
not
fs
fs
mov
fidivs
loope
out
push
in
xchg
or
sbb
pop
mov
dec
gs
sub
repnz
cmp
cld
xchg
mov
cmc
pop
loopne
push
xchg
fs
mov
inc
push
mov
aam
out
jle
je
add
mov
mov
ret
xor
lcall
jge
adc
pop
xchg
adc
lret
push
cmc
xchg
xchg
rcrl
in
ja
call
adc
pusha
push
stos
insl
push
std
jl
pop
or
dec
jne
addr16
push
sahf
mov
or
dec
rcr
pop
test
movsb
adc
aam
mov
rorb
outsb
inc
fldcw
xlat
daa
sbb
sbb
and
iret
test
inc
sub
adc
mov
and
fs
and
aad
hlt
je
mov
gs
outsb
jno
sbb
push
adc
and
sbb
sbb
xor
pop
push
movsl
mov
and
out
xor
lcall
add
push
push
cmp
push
das
aad
adc
mov
mov
pop
push
push
pop
xchg
adc
or
mov
cld
lahf
add
icebp
shlb
xchg
mov
and
dec
out
cli
or
inc
scas
mov
mov
aas
inc
xor
scas
les
pop
pop
lods
jae
mov
xlat
je
mov
mov
pop
in
movsl
or
and
add
push
mov
popa
mov
sub
stc
sti
push
loope
test
sahf
ficoml
loope
pop
and
ljmp
frstor
push
push
xchg
out
std
pushf
lock
push
and
pusha
dec
lea
mov
xchg
cs
xchg
mov
mov
mov
sahf
xchg
pop
call
mov
jmp
shrl
ficompl
scas
mov
inc
xchg
subb
ljmp
outsb
andl
jp
mov
xchg
enter
scas
shrb
fs
cmp
subl
mov
hlt
xor
sub
add
and
pop
scas
gs
dec
outsl
adc
add
std
outsb
clc
lods
fs
into
push
pushf
cmpsb
mov
xor
fsubr
add
xchg
cltd
jb
fwait
pushf
and
js
pop
cwtl
dec
in
mov
and
pop
shll
cmpl
jmp
sub
sarl
test
inc
pop
xor
inc
std
mov
lea
dec
in
push
push
into
aam
sbbb
pop
mov
inc
ds
mov
mull
mov
insb
loopne
int
add
mov
add
lahf
adc
dec
mov
ja
shrb
jns
xor
cmp
jmp
outsl
sbb
sub
mov
hlt
das
xor
popf
push
mov
push
imul
xlat
fidivrs
sbb
mov
sub
subl
data16
mov
sub
mov
sbb
xor
or
gs
ja
mov
out
cli
jb
or
cmpsb
int3
mov
xor
mov
in
mov
insb
iret
cmpsb
push
sub
cld
lret
movsb
stc
cmc
sub
adc
repz
sbb
dec
and
ficompl
testl
pop
jae
mov
fs
mov
push
sbb
fucomip
ret
lock
lcall
data16
mov
cmp
add
js
or
mov
lea
or
push
jle
xor
test
mov
or
mov
insl
stos
out
jo
inc
int3
cwtl
mov
shl
push
stos
sub
or
dec
inc
ficoml
adc
les
push
dec
inc
cld
enter
xchg
push
into
jge
ror
pushf
sub
ret
movsl
aas
out
xor
lods
xchg
mov
cld
cmp
pop
fdivr
lds
dec
cmpsb
jle
data16
inc
test
icebp
icebp
jl
ja
xchg
shrl
adc
push
sahf
lods
sbb
fstps
repnz
cwtl
lcall
mov
pop
into
and
inc
xchg
test
adc
cmp
pop
pusha
jmp
stc
ja
dec
jnp
fimull
std
out
loopne
xchg
inc
jo
lea
sub
int3
mov
jl
frstor
out
and
adc
inc
jmp
repz
pop
enter
imul
jge
movsl
jecxz
mov
or
out
sbb
and
sub
ret
lds
leave
and
push
out
jne
xchg
cmp
push
aad
dec
orb
repnz
int
test
inc
or
bsf
dec
pop
add
push
and
lock
popf
in
out
xchg
sub
cmc
outsl
pop
pop
stc
movsl
mov
ret
aad
std
xlat
test
scas
push
push
or
lea
cmp
mov
cmp
sbb
cmp
mov
gs
test
ficoml
mov
mov
cli
or
fiadds
bound
ror
adc
sahf
jbe
mov
les
stos
adc
and
fsubs
lods
or
inc
loope
hlt
es
sub
jl
pop
out
push
and
push
dec
sub
jb
and
xchg
sahf
add
out
lods
adc
or
out
gs
adc
mov
mov
shll
lret
pushf
gs
jecxz
movsl
in
mov
das
sahf
dec
rcr
inc
stc
push
gs
xor
test
divb
scas
clc
out
and
ja
lret
loop
pop
lea
mov
mov
jmp
jp
dec
add
shlb
rclb
xchg
daa
leave
sub
ds
gs
inc
adc
inc
arpl
fs
sub
and
pop
mov
jecxz
je
jle
cmp
inc
push
or
in
dec
notb
es
sti
into
test
xchg
fwait
sub
cmp
jns
or
jae
subb
xor
and
adc
insb
mov
shl
fidivl
cld
ljmp
sbbl
aaa
movsl
mov
push
xor
rsm
xor
rcl
add
fs
sbb
add
add
inc
jne
frstor
mov
aaa
cmp
push
and
xchg
mov
adc
clc
mov
jno
jae
lret
or
jp,pn
jae
push
je
cli
jp
leave
adc
ret
inc
mov
fsts
or
hlt
sub
sub
js
adc
push
push
adc
jnp
popl
inc
jne
ficoms
fwait
hlt
in
test
imul
sahf
dec
and
aam
into
jno
loope
sbb
xchg
sti
ljmp
lahf
jne
fcmovne
inc
aam
pslld
mov
pop
dec
mov
enter
daa
cmpsb
push
or
inc
jl
sti
xchg
ret
pop
sub
out
inc
negl
adc
mov
mov
aas
cmpl
into
ljmp
hlt
or
xor
inc
pop
sbb
inc
push
pop
fstps
aad
push
andb
push
mov
mov
push
add
add
dec
and
mov
mov
sub
aas
jl,pn
into
jae
jmp
xchg
mov
mov
sub
in
out
push
add
imul
sbb
pop
daa
outsl
jne
cmp
mov
xchg
adc
pushf
push
sub
fwait
out
push
push
cmp
sbb
fisubrs
stc
dec
jns
cmp
sub
jnp
out
or
jno
add
push
insl
xchg
cmp
filds
inc
add
sub
cltd
fsub
dec
sub
and
inc
in
arpl
addb
dec
sub
lea
cmp
iret
lds
adc
stc
jg
mov
or
test
stc
in
lods
xchg
js
jecxz
mov
ss
pop
test
xchg
xor
enter
subb
add
mov
push
dec
sahf
xchg
push
cmp
push
sbb
pop
push
pop
jle
pusha
push
mov
inc
testl
cmp
jno
and
pusha
dec
pop
dec
fildll
xor
jge
pop
xchg
ja
jl
sub
mov
dec
push
sbb
test
dec
pop
cmp
inc
imul
mov
push
mov
pop
inc
xchg
ds
inc
and
add
aas
adc
insb
rclb
xchg
lea
int
js
cmp
mov
leave
subl
adc
orb
rcrl
push
sbb
mov
and
cmp
int
in
loope
inc
fimull
fcoms
fsubr
shll
push
pop
add
xlat
jb
daa
stos
cmp
fwait
push
and
mov
or
mov
cld
loope
ret
lock
test
enter
movsb
jne
rolb
in
sbb
jecxz
sub
mov
adc
dec
and
mov
hlt
dec
test
dec
cmp
sub
mov
xor
jbe
bound
lret
mov
cld
jl
dec
call
lods
cmc
cs
rorb
cmpsl
sahf
movsl
inc
nop
rep
ljmp
pop
sbb
sbb
dec
dec
mov
bound
clc
mov
mov
mov
outsl
js
xchg
add
in
lcall
pushf
inc
add
cmpsl
loop
sbb
test
push
decl
fbstp
les
mov
add
mov
nop
add
jmp
xor
xor
add
out
aad
or
out
jge
ret
lock
arpl
add
stc
in
cmp
in
adc
test
cmp
fdivrl
sbb
sbb
inc
ja
add
aaa
fnstenv
jbe
jle
sbb
jg
jne
loopne
sahf
add
sbb
xlat
test
inc
mov
sbb
and
mull
into
stos
push
insl
mov
movsl
sbb
mov
mov
cli
aad
push
movsb
mov
add
push
mov
jb
cwtl
lcall
es
mov
mov
jle
xchg
xor
adc
sahf
gs
scas
inc
sub
aad
xchg
dec
xchg
pop
or
fidivrl
cwtl
jecxz
xchg
add
mov
push
dec
inc
jmp
xor
pop
sub
push
bound
imul
mov
mov
call
cmp
icebp
jae
dec
xchg
jne
or
adc
rolb
sub
bswap
lret
ret
sbb
fsubs
jl
fcomi
cli
sahf
cs
adc
xor
lahf
pop
addr16
adc
fidivl
adc
stos
mov
mov
xchg
fimull
cwtl
fldt
out
cmp
popa
inc
repz
pushf
sub
push
daa
imul
int3
sub
jo
xor
sbb
xchg
mov
fsubs
cmp
inc
bound
push
push
rclb
pop
mov
and
daa
scas
loopne
push
addr16
and
loopne
out
neg
je
dec
sbb
lea
aaa
gs
dec
and
cmpsb
mov
jb
or
mov
fdivrs
xchg
fcoml
cltd
mov
outsb
addr16
push
jb
shlb
sub
iret
dec
sub
pop
adc
insb
mov
jmp
xor
or
sbb
mov
lods
pusha
sbb
rorb
addr16
shl
stos
mov
adc
je
inc
outsb
mov
xor
dec
cs
in
lret
outsb
inc
ret
dec
cmp
aad
sbb
jbe
mov
call
movsb
push
adc
adc
pop
out
xor
rcrl
dec
sbb
and
pop
inc
cmp
je
incl
push
imul
adc
adc
cli
test
fwait
push
stos
xchg
loope
gs
flds
add
cmp
pop
cmp
jne
adc
and
stc
ret
mov
pop
mov
xlat
sbb
cs
add
xchg
jae
mov
test
lea
xchg
test
cmp
or
loope
push
cmc
jbe
xor
ljmp
cmp
test
or
cli
xchg
xchg
jmp
lahf
jns
xchg
pop
mov
int3
ret
and
mov
mov
jl
xchg
in
js
fisubrs
fisubs
leave
dec
aaa
aaa
idivl
nop
jg
stos
mov
andb
push
or
std
sbb
xlat
data16
mov
shl
loop
sub
cli
mov
out
shl
scas
push
outsb
icebp
pop
call
inc
add
int
sbb
test
or
xor
xchg
sti
out
adcb
test
scas
cwtl
stc
sub
or
fisubrl
inc
xchg
xchg
mov
xchg
cmc
mov
jb
jg
mov
xchg
xchg
ja
ds
pop
shlb
push
mov
xor
stos
in
pop
addr16
stos
mov
mov
cld
xchg
divb
fsts
mov
negb
mov
xor
sub
push
add
daa
das
jecxz
sub
repz
fcoml
cmpsl
push
mov
jp
cmpsb
mov
arpl
out
aaa
iret
push
callw
int
and
lock
mov
fstl
cmp
test
xchg
arpl
fidivrl
sbb
shll
sub
xor
fiadds
push
sahf
adc
push
mov
popa
xchg
and
push
jmp
testl
clc
test
arpl
sub
scas
or
mov
and
jnp
mov
pop
sahf
add
dec
mov
bound
jecxz
ja
pop
imul
int
ret
call
xchg
sbb
leave
jbe
cli
jp
xchg
pop
std
mov
sub
bound
jno
rolb
push
les
push
adc
pop
insl
inc
jge
loope
jge
xchg
scas
ss
mov
addr16
adc
adc
iret
pop
fnstsw
orl
cmp
fidivs
scas
jbe
push
pop
mov
jb
in
pop
dec
mov
pop
ljmp
and
cmp
xchg
imul
lods
pop
test
dec
into
push
adc
ds
pushf
jecxz
adc
cmp
sbb
sub
cld
ret
outsl
cli
dec
lock
xor
inc
mov
je
inc
scas
in
inc
lea
std
mov
or
pop
lods
bnd
sub
xchg
aam
stos
dec
nop
decl
push
or
cmpsb
sbb
pop
ds
je
xor
inc
xor
lret
flds
lahf
out
fimuls
mov
popa
inc
sahf
inc
or
in
cmc
dec
mov
jge
lds
insl
inc
sti
pop
aas
out
inc
xlat
or
outsb
mov
pop
mov
test
das
les
pop
ret
int
repz
inc
das
and
aas
ficomps
mov
mov
mov
lods
and
out
pop
jmp
lds
inc
fbstp
out
adc
fists
enter
cmpsl
pop
dec
jmp
push
sub
into
rcrl
mov
out
cmp
jge
sbb
das
jmp
cwtl
adc
ljmp
xchg
push
pop
pushf
xchg
out
mov
sbb
scas
or
cld
ljmp
jl
aaa
cmp
jnp
xlat
or
pop
push
push
sbb
pop
sbb
mov
mov
push
push
or
xchg
lret
addr16
xchg
lods
ja
ljmp
add
shrl
mov
iret
jo
adc
outsb
mov
sub
cmp
mov
jb
addr16
sub
movsl
repnz
xor
cli
sti
mov
js
mov
leave
in
std
sbb
es
das
jle
jge
xor
andb
lds
data16
jp
fadds
lahf
pop
fisubrl
lret
jg
dec
in
movsl
int
add
xlat
mov
jl
jle
sub
mov
fldl
popa
jno
mov
je
mov
lahf
into
sub
test
add
lds
mov
enter
enter
cld
jne
addr16
lret
loop
lock
shll
lcall
stos
cmc
cs
int3
fwait
lret
pushf
int3
or
hlt
adc
pusha
xchg
rcll
cmp
inc
and
fs
adc
in
fcoms
vcvtsd2si
mov
icebp
lret
or
jmp
cmpl
dec
jb
dec
sbb
mov
lret
jecxz
and
mull
rcrl
and
loopne
dec
rolb
lahf
ds
push
xchg
push
lods
in
mov
stos
fstl
into
mov
mov
jns
imul
mov
mov
or
mov
jge
clc
add
sahf
xor
ja
pop
or
pop
mov
jle
jmp
cmp
mov
mov
movsb
shl
xor
imul
hlt
or
cmc
xor
sahf
popf
pop
xchg
xchg
sbb
outsb
jbe
icebp
nop
sub
pop
in
ds
add
aad
push
dec
dec
adc
clc
stos
test
vmwrite
cli
cli
mov
cmp
adc
cmp
lcall
outsl
adc
push
cmpsb
daa
out
inc
ljmp
sti
mov
xor
flds
push
sbb
out
in
and
mov
jne
cli
sti
inc
pop
adc
fldcw
sbb
mov
repz
mov
push
cmp
lock
dec
addr16
mov
xor
pusha
addl
movsl
pop
cmpsl
mov
mov
xchg
les
mov
sbb
mov
mov
enter
mov
fstpt
mov
pop
hlt
test
xchg
cli
js
mov
inc
push
mov
xor
dec
data16
push
rcr
push
jo
push
lock
loope
push
enter
fs
in
and
inc
cmpsb
cmp
push
fstpt
cmpl
add
nop
cmc
add
jge
arpl
cmp
pop
lods
test
mov
idiv
addr16
jg
int3
dec
lds
mov
repnz
adc
stos
scas
push
add
add
out
test
stos
test
jp
push
inc
sbb
pop
mov
or
ds
push
outsl
rclb
pop
adc
pop
fstps
enter
das
into
frstor
jno
iret
and
pop
scas
jge
push
iret
dec
mov
xor
es
fldl2t
dec
jne,pt
dec
loope
lcall
sbb
push
mov
cmp
popf
aam
and
out
pop
jg
fwait
or
push
push
aaa
ret
push
sub
jnp
ja
push
pop
enter
cwtl
iret
lea
mov
dec
xchg
mov
fistl
out
pop
inc
fsubs
xchg
push
inc
jmp
pop
call
pop
xor
mov
jle
stc
inc
adc
mov
mov
aad
xchg
repnz
das
pop
cmp
push
fdivrs
xor
ljmp
inc
inc
je
test
or
add
push
or
popf
mov
cli
pop
ret
not
jmp
movsl
sbb
mov
mov
lods
pop
cmpsl
scas
or
jae
arpl
or
rolb
add
mov
xchg
add
sbb
mov
in
ret
je
pop
pop
mov
pushf
scas
mov
push
in
sbb
notb
sbb
inc
lret
jl
roll
jne
mov
cs
jmp
movsb
mov
ljmp
inc
push
mov
xor
cli
sti
les
lret
inc
pop
pop
push
movsl
mov
shrl
xor
dec
push
xchg
mov
dec
cmp
lcall
decl
and
xor
or
pop
push
dec
pop
out
pop
arpl
stos
das
and
push
icebp
mov
push
push
cmp
mov
leave
out
aam
lret
sbb
inc
cmp
push
imul
push
imul
and
aad
loop
stc
jge
shll
fsubrs
shl
insl
leave
pop
mov
jg
push
add
push
or
mov
popf
std
push
outsl
jmp
pop
and
push
into
shll
popa
pop
fcomps
insb
mulb
pushf
push
mov
mov
sub
xchg
push
int
test
mov
mov
dec
inc
lcall
cltd
mull
in
push
mov
shll
inc
adc
push
cltd
inc
je
imul
cwtl
pop
jg
imul
dec
out
idivl
xor
iret
lret
adc
clc
mov
aaa
out
sbb
add
jb
dec
rclb
xor
inc
nop
add
mov
push
js
adc
mov
jle
lret
je
and
mov
incl
out
xor
jbe
outsb
adc
sbb
int
cmp
xor
pop
push
aaa
dec
adc
jle
lret
add
mov
mov
add
pop
jecxz
std
outsl
cld
xor
mov
out
movsb
enter
add
sub
pop
adc
aam
rcll
inc
jb
dec
inc
test
nop
sbb
icebp
int3
loopne
xor
ds
push
push
cmp
adcb
jae
jecxz
dec
jae
adc
inc
push
xchg
or
stos
xlat
in
xor
int3
mov
es
mov
inc
or
and
icebp
xchg
inc
les
inc
dec
repz
push
mov
push
insb
xor
inc
rep
sarb
insl
leave
mov
fcoml
push
cmpl
loopne
cwtl
sbb
cmp
int3
data16
fs
loopne
in
xchg
inc
xchg
jae
out
mov
in
in
in
pop
loop
call
adc
cmpsl
sarl
push
add
ljmp
xchg
pop
push
push
loop
mov
out
sub
scas
or
and
add
dec
out
sub
pushf
ds
outsb
sahf
mov
dec
enter
mov
fmuls
mov
adc
xor
lds
inc
jle
xor
fdiv
out
push
pop
and
ds
les
xchg
dec
cli
and
mov
mov
nop
fwait
test
adc
pop
and
push
ljmp
in
xchg
insl
adc
fistpll
xlat
jmp
ret
enter
sub
jmp
add
xchg
xor
in
sub
in
out
and
fidivs
pinsrw
xchg
pop
jle
aas
cmp
scas
out
xor
rcr
shll
push
push
mov
and
les
les
xor
mov
push
add
jmp
notl
inc
outsb
lods
popa
or
inc
cld
mov
into
out
leave
stc
imulb
repnz
je
imul
add
in
call
mov
xor
dec
fs
mov
inc
dec
jl
xchg
or
out
xchg
pop
jge
xchg
jnp
mov
xchg
les
or
imul
sbb
sbb
es
mov
mov
adc
pop
and
out
ds
iret
aam
stos
sbb
decb
out
mov
push
pop
es
jns
mov
push
mov
outsl
les
cli
xchg
sub
jbe
and
mov
ret
mov
out
mov
testl
popa
pop
repz
scas
mov
inc
inc
fsubrp
mov
push
push
fists
pop
pop
fistps
pop
mov
mov
clc
in
insb
stos
mov
mov
mov
and
or
xlat
mov
or
lahf
xor
jl
ret
xchg
sub
push
jecxz
les
push
setbe
mov
add
and
cld
sub
aad
aaa
aaa
add
adc
daa
adc
mov
jge
rorl
push
mov
mov
cmp
cltd
popa
dec
xchg
fstl
mov
adc
pushf
xchg
into
dec
dec
sbb
lcall
pop
push
mov
icebp
dec
add
loop
cltd
sti
lahf
aas
enter
popf
ret
mov
cmpxchg
test
clc
add
sbb
ljmp
push
test
jecxz
movsb
xlat
add
fwait
insl
push
sbb
jne
icebp
pop
imul
stos
std
adc
rorb
daa
fdivl
add
xchg
and
sbb
lcall
ret
cld
insb
or
dec
popf
push
sub
mov
xchg
mov
das
iret
and
xchg
or
fwait
xchg
aas
mov
push
push
dec
enter
lea
push
cmpsl
jae
jmp
test
pop
cmp
mov
mov
jno
cmp
xchg
adc
rcr
out
lcall
inc
pushl
or
outsl
lahf
jmp
icebp
inc
add
clc
sub
push
push
xchg
in
xor
mov
iret
and
dec
stos
cmpsb
mov
jo
push
mov
mull
cmp
gs
jnp
jmp
pop
std
adc
and
or
xchg
js
push
jnp
insl
call
adc
push
insl
push
icebp
sub
lahf
shlb
xchg
xor
out
jp
cmpsl
cmc
inc
mov
xor
push
out
shrb
dec
ds
icebp
cmc
add
jns
adc
cli
jno
pop
inc
cmpb
fdiv
aam
fcmovnbe
pop
in
push
js
adc
aam
or
inc
aam
mov
or
mov
bound
push
notl
ljmp
int3
daa
gs
fsts
and
or
imul
sub
out
insb
out
gs
inc
or
lock
jle
fmuls
repnz
mov
iret
adc
fwait
stc
por
ljmp
sub
rclb
out
add
pop
add
jp
dec
add
sarb
daa
mov
incb
adc
pop
jle
push
ret
ljmp
inc
sub
movsb
xor
or
mov
outsl
lds
adc
adc
test
rolb
sbbb
lret
pop
mov
xor
adcb
mov
loop
mov
les
jle
repz
scas
in
xchg
adc
rol
jne
xchg
mov
dec
daa
sbb
xchg
mov
sub
sub
in
popf
sbb
daa
lock
aam
movsl
xor
mov
xor
lcall
cwtl
orb
or
mov
and
fidivrl
into
jo
lahf
nop
aad
sub
inc
push
es
aam
push
jl
into
sub
decb
icebp
xor
xchg
scas
stos
sbb
sbb
xchg
xchg
jecxz
pop
cmp
sbb
add
in
cmpsl
pop
sti
lods
adc
inc
add
clc
dec
sub
dec
fnstsw
sbb
shl
sbb
push
dec
lcall
xor
scas
arpl
pop
sub
inc
cmpsb
or
scas
xchg
or
icebp
pop
push
pop
xor
add
or
xchg
mov
xchg
ds
packssdw
push
fisubs
xchg
add
out
gs
loop
add
dec
inc
ret
lods
rcrb
sub
xor
fs
iret
sbb
mov
mov
icebp
adc
pop
xchg
pop
fstl
push
or
arpl
xchg
fimuls
pop
incb
das
aam
fidivrl
cmpsl
pop
lods
add
inc
dec
adcl
xchg
ret
sub
mov
and
ss
int
test
cs
es
psllw
mov
sub
adcb
mov
nop
lock
and
sti
jmp
sub
dec
and
add
sub
jge
push
iret
into
add
std
jno
in
cmp
sbb
in
insl
imul
sbb
add
jecxz
ficoms
xchg
fnstcw
call
dec
mov
mov
je
imulb
ret
pop
push
repz
fsubrs
or
or
lods
pop
jmp
push
sub
cmp
dec
test
rclb
mov
dec
sahf
into
ficoms
jp
dec
mov
cs
jb
lret
clc
aaa
in
notl
mov
mov
add
push
mov
fsubl
inc
sub
lret
sub
push
push
mov
mov
adc
addb
movsl
lret
scas
adc
sub
in
ja
add
repz
mov
jno
out
sub
std
rcr
fcoms
jb
push
jne
lods
ret
dec
imul
sub
mov
fcoms
add
stos
jp
push
ja
push
push
and
lea
test
push
cmpsb
xchg
in
xchg
xchg
dec
sbb
ljmp
in
jae
inc
pop
les
lahf
std
lcall
xor
adc
cmpsb
in
xchg
dec
mov
es
mov
call
cmp
aam
jno
shll
pop
ret
jno
and
and
lods
mov
xchg
dec
pop
or
inc
out
mov
adc
bound
jo
and
mov
push
and
jno
in
xchg
jnp
enter
sub
push
addr16
xchg
dec
and
push
lods
mov
ljmp
fildll
gs
add
pop
push
out
rclb
test
xor
ret
insl
xchg
lret
leave
mov
adc
mov
ss
mov
push
pusha
ret
lods
loop
stc
mov
insl
lds
cmpsl
push
js
sbb
into
inc
dec
inc
mov
gs
sti
mov
pop
dec
stos
dec
mov
push
push
imul
cmp
xor
clc
loope
lea
repnz
bound
arpl
push
fwait
imul
inc
cmc
pop
icebp
pop
xchg
imul
jbe
insb
xchg
and
std
mov
xor
jno
jns
aaa
mov
fdiv
sbb
dec
push
sti
mov
rcrb
leave
outsl
mov
clc
xor
cmpb
adc
ficoml
mov
xor
filds
fldl
leave
mov
testb
mov
das
sbb
xor
cmp
add
add
imul
rcrl
xor
jns
dec
xchg
outsb
add
cltd
mul
ds
popa
and
add
inc
xor
enter
inc
into
ficoml
les
js
pop
dec
add
xlat
inc
outsb
inc
cmp
add
inc
cs
insl
sahf
or
jl
dec
dec
push
ss
pop
in
adc
lods
repz
sahf
cmpsl
js
xor
mov
push
lock
ficompl
into
repnz
pop
add
adc
aas
jo
xchg
cltd
add
lea
addr16
int
xor
outsl
or
adc
cmc
cld
lret
cmp
sbb
lods
lock
out
jb
jns
xor
jo
adc
iret
mov
dec
mov
cmp
lret
mov
scas
pop
cli
arpl
test
cmp
js
stos
loopne
inc
sub
enter
push
xorb
fmull
mov
inc
popf
mov
and
mov
and
pop
mov
jle
in
or
imul
popa
push
push
out
xorl
ja
and
in
cmp
inc
mov
or
push
icebp
push
mull
gs
lcall
push
sbbl
xor
arpl
stos
mov
xchg
push
mov
stos
add
sub
push
mov
adc
scas
adc
jge
fsubrs
jns
mov
jbe
outsb
call
testb
push
lock
lret
jnp
pop
clc
cld
mov
mov
xchg
cmpsl
xor
test
leave
in
add
sbb
pop
cmpsb
lcall
mov
sub
in
cmpsb
push
gs
mov
dec
clc
pop
sub
clc
scas
cmp
xor
pop
fcomp
loope
ss
insb
pop
jnp
and
cwtl
and
fwait
push
outsb
push
repnz
add
adc
jbe
pushf
pop
and
clc
push
ret
jne
test
notb
int
fbstp
jnp
jb
jl
add
leave
push
dec
adc
call
filds
clc
push
stos
adc
das
pop
scas
inc
jecxz
enter
cltd
mov
lret
inc
bound
dec
inc
pop
and
jb
adc
dec
movb
ret
or
mov
mov
jp
ja
and
sbb
test
jg
clc
lods
push
in
xchg
mov
icebp
movsb
rcrb
push
jnp
lock
rcrl
add
rcl
rorl
xor
mov
cld
add
inc
adc
jae
lock
cmp
in
int
sub
les
adc
mov
loopne
hlt
mov
sbb
popf
icebp
mov
enter
cld
cld
lahf
xchg
sbb
add
mov
pop
lahf
rclb
push
push
mov
or
xor
loopew
pop
or
rorb
mov
sub
cmpsb
mov
push
mov
gs
push
jl
bound
jbe
imul
or
and
push
or
arpl
xchg
xlat
mov
lahf
rcll
and
leave
ficoml
push
idivb
push
mov
mov
lret
pop
repnz
icebp
test
ja
pop
popf
adc
test
adcl
repz
cli
cmp
repnz
push
leave
add
jo
stos
bound
mov
in
data16
mov
out
xchg
pop
aad
mov
inc
add
mov
sbb
mov
mov
fdivr
test
sub
ds
inc
fcompl
mov
lea
sbb
pop
int3
add
push
push
js
sbb
sub
or
pop
lods
push
dec
cmp
sub
in
cmp
arpl
cmpsb
push
test
xor
or
sub
xor
pop
ds
movsb
add
cmp
xchg
mov
or
jne
aas
inc
mov
int3
push
mov
imul
lcall
xchg
out
xor
mov
xchg
repnz
or
mov
leave
push
pop
out
cltd
dec
sub
fnsave
cmp
fiadds
jo
cmp
dec
cmp
mov
push
sahf
adc
ja
cmp
in
pop
mov
add
loopne
mov
push
or
mov
mov
and
add
sbb
push
mov
call
mov
hlt
cmp
aad
inc
inc
jp
clc
cmc
xchg
push
ror
lahf
adc
push
mov
add
inc
hlt
repnz
mov
sbb
shll
mov
dec
lcall
mov
aaa
stos
aaa
cmp
jl
mov
mov
insl
cmp
repz
jge
sub
jo
pop
push
xor
jbe
jbe
in
out
stos
mov
outsl
mov
add
push
sbb
std
ds
mov
ss
int
rorb
outsl
shrb
mov
stc
jge
xor
cli
push
mov
int
data16
dec
addr16
lret
dec
roll
jg
ds
xlat
idiv
in
or
aad
inc
sub
pop
dec
push
xchg
mov
sbb
inc
mov
adc
push
xor
adc
adc
xchg
shlb
xchg
sar
cmp
shrb
popa
and
test
mov
imul
xchg
js
mov
stc
andl
int
out
mov
gs
sbb
mov
or
jmp
imul
sbb
cs
scas
or
xchg
out
jge
mov
xchg
in
lods
pop
es
pop
sub
push
ss
push
or
or
fisttpll
xchg
or
lds
popl
cwtl
rcll
pop
push
test
push
fs
push
sub
mov
les
popa
push
rcr
inc
xor
rcll
jne
or
or
push
add
cmpsb
or
pop
cmpsl
xchg
push
insb
cmp
out
push
testl
sbb
adc
fldcw
mov
pusha
mov
pop
push
nop
xchg
xchg
in
stos
and
pushf
lea
push
pop
mov
mov
cmpsl
mov
mov
fists
faddp
subl
cmpl
jae
fsubrs
mov
andl
sbb
stos
mov
int3
jnp
cmp
loope
add
push
in
testl
imul
repnz
out
inc
jl
imul
shr
jns
mov
rolb
aas
mov
sub
pop
arpl
notb
cld
clc
xor
into
and
loop
mov
xor
test
mov
pop
xchg
cmp
dec
sub
notb
cltd
imul
jge
xlat
dec
in
rolb
sbbl
stos
add
cmc
mov
test
mov
pop
lods
or
fiaddl
push
jecxz
jo
add
xor
iret
pushf
inc
out
mov
arpl
fbstp
test
cmpsb
popf
push
xlat
mov
xchg
dec
jnp
sti
leave
mov
dec
mov
out
fnstenv
cmp
pop
push
mov
jp
xchg
xchg
mov
outsl
dec
notb
push
dec
scas
cmc
test
push
lretw
dec
arpl
lock
cmp
test
mov
gs
jbe
popa
lahf
std
cmp
or
mov
sahf
out
lret
xor
addr16
cmp
mov
cmpsb
ja
push
pop
push
ret
mov
lahf
sub
mov
mov
mov
jle
sub
add
mov
fs
loope
js
es
std
jmp
test
bswap
push
lcall
xchg
pop
in
addr16
add
outsl
mov
clc
mov
mov
movsl
fldl
mov
leave
lock
mov
xchg
fnsave
mov
and
fldl
pop
cs
cld
xchg
sub
inc
jno
sbb
fninit
xchg
dec
push
mov
xchg
push
cld
pop
cmp
mov
and
dec
lds
cmp
push
sub
js
xlat
das
rol
cmpxchg
pusha
lock
push
dec
push
xor
in
test
xor
sbb
cmp
outsb
mov
enter
dec
stc
xchg
mov
daa
jno
mov
lret
jae
aas
cmp
mov
push
aaa
std
push
inc
and
or
dec
aad
test
imul
pop
into
jge
sub
inc
popf
and
loope
repz
cmp
push
test
mov
push
insl
cmp
jecxz
lret
mov
hlt
bnd
push
or
xor
or
or
push
aas
aas
scas
adc
xlat
negl
or
outsb
nop
pop
and
sub
mov
pushf
les
pop
pop
sbb
loopne
mov
dec
shll
hlt
cmp
sub
test
inc
pop
or
add
inc
scas
xchg
rcrb
push
icebp
xor
mov
xchg
adc
data16
dec
stc
in
lret
push
xchg
nop
lock
lock
fisubl
inc
push
shll
push
xor
std
int3
cmpsl
push
je
mov
leave
loopne
pop
popa
xchg
push
push
popa
popf
push
shrb
push
mov
mov
jno
sahf
jp
dec
inc
repnz
cmpsb
repnz
push
inc
nop
and
fstpt
xchg
test
imul
aaa
mov
inc
push
popa
aad
xor
xchg
jnp
ds
mov
ret
cmp
push
fisttpl
or
dec
xchg
jge
mov
cmpsl
sar
push
js
add
out
fucomi
pop
lods
mov
jmp
ja
roll
call
and
lcall
int
xor
test
sub
loop
jmp
and
sub
jl
xchg
add
push
stos
out
cmp
mov
mov
xor
xchg
push
into
into
push
pop
cmpsb
mov
push
rclb
add
loop
mov
pop
or
mov
pop
xchg
dec
inc
mov
fcmovnb
inc
jp
cmc
dec
or
insl
sti
in
aad
pop
lret
inc
es
mov
or
insl
pusha
push
out
popa
dec
lret
jge
mov
push
jae
mov
xor
jnp
pop
test
ja
subl
fsubl
into
push
xor
bound
lahf
or
jl
mov
fistpl
xchg
sub
mov
repz
add
jbe
mov
sub
fnstcw
scas
out
test
rorb
in
cmp
sbb
xchg
jmp
push
jmp
fistl
mov
movsl
sub
mov
jle
inc
and
inc
subl
in
fsubs
cmp
fists
ficoml
jle
mov
aas
gs
sub
jp
xchg
std
add
add
push
in
push
mov
and
ror
or
add
fwait
xor
sbb
out
cmp
movsl
mov
xchg
cmpsb
clc
inc
in
icebp
mov
fimuls
jns
mov
data16
stos
pavgb
imul
cmp
iret
roll
adc
cmp
ja
loopne
lods
mov
insl
in
or
cmp
pop
mov
scas
mov
movsl
lret
mov
mov
and
hlt
sarl
xor
dec
push
mov
and
add
pop
push
push
mov
jo
loopne
mov
sbb
jae
xchg
jmp
mov
jge
outsb
repz
stos
fildll
sbb
cmp
popf
cmpsb
test
lea
mov
jecxz
nop
sbb
xchg
ja
xor
arpl
cld
sahf
xchg
and
into
xchg
cmpsl
push
jno
jp
test
mov
mov
inc
inc
fwait
ja
test
loop
and
pop
fildl
test
lahf
push
add
push
xor
rorl
sbb
scas
xor
adc
int
add
and
arpl
out
pop
sub
jnp
dec
loopne
sbb
stos
stos
dec
sbb
inc
insb
mov
out
fiaddl
mov
pop
les
inc
adc
in
shll
and
sub
lret
xor
cltd
inc
cmp
inc
adc
xchg
sbb
and
jne
fisubrl
cmpsb
add
nop
out
mov
adc
fs
sbb
add
and
pop
cmp
out
mov
movsl
mov
idivb
jns
push
mov
and
aas
aaa
push
jnp
jb
repz
dec
sub
movsl
push
pop
mov
scas
orl
scas
roll
leave
jns
loope
sub
inc
cmp
and
push
add
mov
call
stos
movsl
lahf
stc
add
shll
sub
mov
jecxz
xorb
ficoms
daa
lock
inc
push
sbb
test
in
cmp
inc
push
pushf
addr16
sbbl
fldcw
push
or
insb
cmp
call
das
fwait
add
insb
push
cmp
inc
pop
fisubrl
in
mov
xor
shlb
out
mov
hlt
loopne
shlb
cltd
cmpsb
inc
icebp
cmp
jge
pop
int3
or
push
aas
add
scas
jne
push
ret
mov
dec
cli
addr16
adc
jge
jb
sub
mov
in
cwtl
cli
and
test
aad
sub
and
xchg
and
jb
rorb
pop
gs
mov
jno
clc
fisttpl
mov
push
ds
mov
push
mov
pop
add
mov
mov
addb
das
dec
sub
xchg
jae
mov
test
mov
stos
mov
add
push
jnp
aas
imul
or
pop
push
push
jbe
addr16
and
stos
sub
sbb
push
push
hlt
fadds
in
jmp
push
ret
lcall
dec
cltd
and
mov
jecxz
cmp
rcl
in
push
xchg
sarl
adc
add
jnp
fbstp
lret
js
xchg
xchg
jl
xchg
repnz
les
mov
jae
mov
shrl
sub
or
fcomps
fnstenv
cmc
ret
adc
jmp
inc
jmp
xor
insl
aam
aad
out
dec
out
sti
jne
or
lcall
shlb
in
xchg
enter
test
add
and
mov
xor
mov
push
neg
clc
sbb
pop
dec
mov
mov
add
push
inc
mov
and
sub
in
out
gs
jae
mov
lahf
aaa
inc
loope
jns
jmp
shrl
ds
sub
push
stos
popf
orl
mov
xor
cmp
xchg
fiadds
es
shll
xchg
nop
mov
push
lret
arpl
adc
ja
fptan
movsl
cli
test
jb
cmpsb
mov
pop
xchg
dec
scas
mov
out
sbb
add
fistpll
push
iret
nop
movsl
test
pop
push
std
stc
outsl
std
sbb
out
sahf
pop
inc
push
fadd
xchg
call
xor
inc
inc
repz
sub
or
iret
lcall
and
mov
loop
jmp
xchg
int3
fucomp
pusha
jge
popa
jae
dec
fdivr
cmpsb
test
cmp
ljmp
sub
xor
sbb
xchg
xchg
add
jecxz
es
sbb
jns
xchg
fdivl
ljmp
arpl
movsb
jecxz
jmp
push
mov
lds
lcall
pop
push
mov
or
mov
pop
inc
inc
loop
or
pop
ffree
gs
push
repnz
jb
push
push
mov
decl
pop
lea
add
sub
imul
mov
mov
and
sahf
cs
shl
jns
clc
test
dec
ror
jge
std
in
imul
dec
stos
adc
rorl
dec
sub
jg
inc
jg
loope
insb
add
je
jl
inc
lahf
stos
test
repz
pop
push
inc
and
into
push
jle
sbb
mov
pushf
dec
das
sbb
xchg
fdivrl
sar
dec
adc
out
push
dec
js
xchg
pop
jg
fdivrl
lcall
inc
inc
jmp
mov
and
adc
aad
sbb
mov
movsb
or
nop
dec
push
jle
test
and
mov
test
mov
shll
xchg
pop
dec
xchg
cmp
test
les
fbstp
mov
in
rcll
cmc
lret
xchg
jge
push
jae
lods
mov
scas
nop
pop
out
sub
fcmovnb
pop
sbb
movsl
call
stos
jo
xor
sub
negl
or
movsl
leave
outsl
dec
dec
xchg
push
pusha
dec
xchg
enter
jb
test
dec
inc
or
cmp
xchg
xor
fldcw
cmp
and
in
sub
std
mov
add
xor
xchg
stos
inc
cwtl
jge
pop
neg
sub
push
or
push
jecxz
pop
sti
adc
inc
fwait
adc
ss
dec
scas
inc
sbb
scas
mov
mov
cmp
lock
je
scas
pop
fstpt
inc
mov
loope
xchg
loope
pop
xorl
mov
push
test
mov
dec
aaa
rcrl
pusha
jg
imul
fwait
std
pop
sub
lea
adc
cmp
pop
mov
pop
and
ja
mov
pop
or
out
xchg
mov
pop
dec
outsl
cwtl
push
add
add
cmp
ds
aad
test
add
mov
icebp
sbb
addr16
loope
je
and
lock
out
rcr
data16
jo
test
adc
and
aaa
xchg
cmp
into
lret
mov
mov
test
pop
dec
cmpsl
push
inc
clc
mov
andl
xchg
pushf
shlb
cmc
cs
lock
popa
adc
cmp
sub
mov
xor
jns
or
mov
pop
ret
sbb
and
xchg
adc
xor
ss
ljmp
xor
sub
jae
dec
pop
cmpsb
mov
mov
fdivrl
sub
bound
leave
mov
xchg
hlt
dec
mov
loope
mov
outsl
popa
sbbb
shll
xor
cltd
daa
std
fldcw
jmp
test
pop
out
xor
clc
lods
sbb
imul
inc
push
pop
jae
sub
mov
out
mov
repnz
lds
ss
mov
xchg
out
ja
dec
loop
xchg
cmp
xlat
es
xor
xchg
pop
xchg
mov
xchg
cmpsl
mov
add
call
mov
cmp
jnp
mov
data16
addr16
out
cltd
aas
jl
push
adc
jbe
jmp
mov
nop
stos
popa
mov
inc
mov
loopne
inc
jecxz
dec
loope
lock
shll
insb
popl
leave
adc
mov
or
mov
cli
ss
push
mov
loop
cmpsl
push
xchg
xchg
mov
loop
push
repnz
cmp
push
push
push
push
inc
push
hlt
xor
xchg
xlat
leave
test
adc
out
es
mov
cmpb
jmp
into
stc
pop
call
sarb
insl
shrl
repz
loope
add
rol
loopne
out
dec
xchg
dec
cld
inc
pop
xchg
mov
das
in
lret
lahf
dec
sub
push
xchg
js
push
inc
jne
cmp
lea
rcrb
sub
mov
and
mov
jbe
scas
or
push
or
or
or
inc
or
xor
jmp
push
test
data16
pop
mov
stc
xor
sti
and
xchg
ror
int
or
stos
aad
cmp
mov
lods
insb
lock
xchg
insl
les
add
mov
das
adc
adc
in
sbb
xor
sub
aad
ss
xor
xor
leave
dec
mov
jp
jnp
daa
cmp
popa
pop
mov
stc
xchg
push
lock
push
fwait
and
shl
popf
mov
or
incl
movsb
sub
notb
dec
and
mov
xchg
cltd
fidivs
cmp
fdivrl
loopne
inc
jae
rorb
push
insl
pushf
pop
repnz
xchg
imul
and
movsb
ret
cmp
xchg
in
and
xor
in
sub
inc
js
loopne
dec
xchg
and
adc
jg
mov
outsb
pop
addb
mov
cld
xor
lock
mov
mov
in
lret
sub
jg
fs
push
dec
stos
sti
cmc
into
cmpsl
sub
mov
loopne
inc
adc
xchg
sbb
test
mov
pusha
out
repnz
xchg
mov
mov
xor
cmpsl
sti
jbe
out
jmp
movsb
cwtl
dec
inc
pop
je
cmp
xor
fidivrl
lret
imulb
out
push
cwtl
cmp
mov
ss
jae
fisubrs
dec
loope
inc
int
xchg
mov
dec
cltd
fists
jne
aas
push
mov
popa
sub
mov
mov
rcrl
xor
inc
inc
xchg
push
test
gs
mov
mov
push
jns
out
adc
jecxz
mov
adc
push
add
sbb
mov
push
adc
imul
aad
xor
jmp
add
jne
negb
out
out
aad
idivb
inc
cmp
int
sub
push
xorb
loop
mov
enter
es
gs
aas
aad
cs
or
lock
push
pop
jno
outsb
shll
iret
sub
in
xor
jp
je
inc
pavgb
cmp
clc
jae
cmc
in
in
cmp
test
fwait
jecxz
jno
xchg
shrl
jl
add
mov
aas
out
in
pop
inc
rorl
push
add
repz
dec
push
mov
mov
xchg
pushaw
sahf
fpatan
mov
jge
idivb
xor
das
testb
cmc
ss
mov
mov
push
pop
push
mov
sbb
pusha
fsubs
sbb
adc
jmp
cmp
test
xor
mov
jecxz
add
shr
push
sub
mov
flds
dec
cmp
xor
and
lods
mov
push
push
popa
outsb
out
out
jns
sub
in
inc
add
fmull
mov
loope
lahf
pop
pop
pop
leave
jo
jp
lock
daa
xchg
xchg
stos
lods
xor
jge
adc
mov
pop
sbb
stos
fldenv
scas
leave
leave
or
ljmp
and
cwtl
aad
or
insb
inc
testl
insb
xor
mov
ret
mov
arpl
xchg
inc
or
inc
ljmp
cmp
add
outsb
cmp
dec
cs
or
insb
mov
sti
outsl
adc
adc
push
mov
daa
dec
cwtl
jle
aad
lahf
push
call
cmp
dec
sbb
or
out
stos
ficoms
inc
adcb
jns
out
and
fs
cmpsb
mov
cmp
movsl
inc
xchg
and
or
movsl
aaa
test
rcll
mov
mov
adc
push
jge
sbb
sbb
dec
bound
push
out
xchg
push
push
lods
mov
push
sbb
mov
xchg
je
stos
gs
fucomip
xor
std
mov
int
daa
dec
add
push
inc
push
dec
inc
mov
jae
sbb
addl
rcrl
adc
sbb
shll
clc
push
fcomps
cmp
jns
inc
test
out
scas
in
cmp
lea
pushf
test
outsl
mov
std
mov
insl
adc
movsl
orb
je
push
mov
enter
test
outsb
das
and
mov
insb
cmp
and
mov
test
in
pusha
inc
inc
cmp
fwait
and
mov
movsl
aas
int3
fisubs
mov
sub
stos
mov
mov
lcall
dec
mov
mov
out
pop
out
jg
or
push
stos
and
inc
cwtl
add
push
pop
add
outsb
adc
shlb
add
scas
xor
dec
in
pop
or
sbb
dec
ljmp
data16
fsubl
pop
xorb
or
sbb
fldenv
int3
shl
cmpsl
jno
outsl
lahf
mov
push
adc
mov
mov
test
dec
or
cmp
mov
lea
shlb
sbb
mov
push
mov
mov
daa
inc
push
pop
pop
data16
pop
sbb
and
xchg
in
outsl
cmp
adc
pusha
mov
xchg
mov
jbe
addr16
fidivs
lcall
subb
jecxz
fidivrs
out
out
loopne
push
xchg
stc
inc
loope
sbb
mov
loope
lock
cld
cmpb
sub
mov
cmpsl
daa
dec
dec
inc
xchg
adc
je
movsl
orb
mov
inc
les
sti
pop
inc
mov
adc
inc
es
sar
ja
inc
mov
imul
jnp
push
mov
out
out
inc
mov
push
in
in
sbb
imul
push
lds
dec
jge
out
in
add
jmp
push
test
add
mov
lret
xchg
jecxz
pop
xor
dec
adc
lods
in
cmp
in
je
jns
jl
icebp
adcl
scas
push
push
or
out
mov
sub
inc
nop
cmp
clc
xchg
lock
pop
call
mov
pop
es
and
out
jo
jns
pop
xlat
fs
adc
or
push
das
xchg
xchg
pop
mov
in
aaa
cltd
xor
jmp
out
xor
test
mov
lods
xor
xchg
lds
int3
fs
xor
fsub
fyl2xp1
out
mov
lret
shrb
loopne
or
mov
add
cli
cmp
lret
lret
into
xor
and
push
call
mov
adc
into
jno
sti
rcrl
sbb
sub
fdiv
sbb
or
xor
ljmp
mov
icebp
mov
nop
jmp
cmp
call
push
mov
rorb
clc
xchg
sub
mov
sub
and
xor
std
adc
push
jge
mov
xlat
cmp
cmp
xchg
imul
adc
fdivrs
xchg
jne
add
xor
xor
add
bound
popa
jnp
ret
add
int
mov
out
das
push
adc
clc
inc
jge
nop
jp
ljmp
mov
cs
movsl
mov
arpl
cmpsl
cmpsl
ficoms
inc
icebp
add
aas
push
in
scas
sbb
sub
cltd
fidivs
pop
mov
scas
xchg
mov
popl
mov
push
ja
pop
sahf
fiadds
ds
sub
mov
rcrb
sbb
push
stos
cmp
cwtl
jns
cmp
xchg
lock
xchg
cmp
ss
and
xchg
or
push
inc
lea
insl
movsl
mov
das
mov
and
mov
mov
and
cwtl
ljmp
out
es
insb
push
jle
sbb
adc
fdivs
sahf
jnp
mov
imul
bound
push
xchg
in
adc
mov
fistps
push
ficoms
mov
roll
ljmp
add
fstps
mov
cmc
jecxz
mov
imul
sub
xor
push
push
adc
fnstenv
test
fistpl
repz
divl
and
push
push
mov
sbb
out
or
cmp
dec
rolb
jns
out
jo
movsb
jecxz
pop
push
nop
mov
std
and
inc
xchg
imul
inc
je
lods
ret
mov
pop
outsb
enter
out
stos
push
cmpsl
add
jle
xor
int
xor
push
or
sub
push
outsl
in
pop
adc
or
sbb
loopne
sbb
in
or
adc
fs
repz
ret
cmp
add
ljmp
jle
in
es
cmp
adc
fbstp
lcall
dec
test
push
inc
jbe
sub
sbb
or
inc
mov
out
insb
xchg
loop
mov
stos
int
jg
test
mov
add
mov
les
ljmp
xor
pop
divb
cwtl
jnp
mov
lahf
roll
out
cmp
push
mov
fs
inc
pop
xchg
dec
cmpsl
xor
cmc
mov
sahf
mov
hlt
dec
mov
lcall
in
sub
pop
push
sub
mov
jne
and
out
fcmovnb
add
sbb
shll
subl
add
or
xor
mov
shr
js
repnz
dec
inc
and
inc
xor
jp
xor
pop
sbb
rorl
pop
in
scas
or
jge
cmpsl
cmp
cmpsb
sbb
iret
mov
es
dec
cwtl
ret
dec
aad
rol
mov
push
xor
addr16
push
push
pop
jg
pop
aad
add
sbb
or
jo
or
mov
xchg
inc
lahf
xchg
adc
aaa
inc
ret
shlb
aaa
cmp
and
int3
call
cmp
adcl
dec
sub
scas
jno
test
xchg
xor
mov
test
lock
movsb
in
movsl
mov
inc
cmp
mov
js
push
test
ret
push
inc
jne
jecxz
movsl
and
mov
divl
out
int
ja
icebp
loopne
lods
pop
aaa
fstps
mov
push
fidivrl
addr16
int
jmp
rclb
sub
cmp
aam
stos
jb
lock
idiv
js
scas
loopew
dec
popa
push
fisttps
sub
push
xor
cmpsl
cmp
leave
imul
xchg
data16
mov
jae
xchg
or
pop
adc
and
jp,pt
sbb
ret
mov
mov
sub
push
lods
fadd
inc
xchg
pop
dec
mov
mov
cli
dec
xor
iret
sub
fstps
daa
mov
sbb
insl
std
daa
into
jp
outsl
orb
mov
jge
cld
lods
andl
sub
lods
cld
in
pop
pop
scas
and
jl,pn
jge
add
loop
insl
adc
push
add
dec
push
push
repz
and
inc
push
or
lods
and
mov
loop,pn
add
push
jg
std
mov
lcall
mov
popa
sti
mov
stc
cmpsb
sbb
aas
push
dec
xchg
jne
ret
add
jo
icebp
jae
rcrl
out
and
insl
dec
inc
pop
repz
jge
fildll
stc
add
aaa
mov
and
fxam
fcmovnb
insb
into
jnp
sub
add
jne
sub
pop
in
xchg
sbb
xchg
pop
ret
dec
pop
lea
jg
dec
mov
negl
test
cmp
in
lods
mov
mov
xchg
xor
push
cltd
mov
sbb
adc
adc
sbb
pop
or
mov
mov
mov
jle
inc
scas
in
imul
lds
xchg
jmp
jle
lahf
les
inc
pop
dec
test
or
jno
int
fisubrl
fs
push
mov
mov
push
mov
push
cmc
fdivr
cmp
pop
lret
mov
lea
dec
out
jecxz
aas
xchg
add
mov
insb
les
roll
dec
inc
jb
fisttps
imul
dec
xchg
and
sar
mov
daa
or
push
xor
mov
pop
xor
jecxz
std
int
pusha
or
enter
pusha
pop
cltd
clc
pushf
es
roll
push
stos
and
ret
jmp
push
ja
push
or
divb
xor
leave
adc
movsl
pop
lods
daa
jecxz
push
jns
les
ret
loop
inc
enter
adc
xchg
sbb
xor
nop
add
pop
lds
sbb
cmc
push
rcr
in
addr16
cli
xor
pop
add
mov
es
xchg
pop
adc
shll
sbb
mov
or
dec
iret
aas
xchg
push
insb
rcr
mov
pushf
cmp
int3
mov
loope
popf
pop
jno
mov
insl
pop
sar
inc
xor
sti
imul
add
xchg
sbb
es
aaa
stos
jno
lcall
into
jl
xchg
lods
loop
inc
pop
inc
test
imul
cmp
insb
stos
mov
and
cli
sub
aaa
xor
or
jge
mov
imul
or
adc
add
push
or
jb
inc
aam
sbb
les
int3
dec
ja
mov
minps
and
pop
mov
test
cmpsl
mov
lahf
jb
aam
xor
ja
add
dec
mov
ds
add
mov
cmp
sbb
loopne
int3
shr
aaa
add
and
ret
pushf
jecxz
mov
push
pop
xchg
aas
cmpsl
loope
aam
adcl
push
les
and
jo
mov
fisubs
jns
adc
in
sbb
je
cld
jl
xor
insb
inc
je
out
daa
mov
arpl
int
or
adc
push
mov
out
test
sub
push
push
push
sbb
inc
enter
dec
jle
xchg
loop
mov
lods
mov
imul
mov
sub
adc
ret
ds
test
jno
and
pop
out
jge
cmp
adc
jmp
inc
xor
cmp
sbbb
sbbl
inc
pop
sub
clc
xor
dec
push
sub
cltd
dec
out
or
mov
xchg
loop
mov
cwtl
sbb
mov
mov
sbb
in
adc
lea
mov
mov
inc
test
lahf
dec
add
push
icebp
imul
xchg
and
adc
loopne
mov
cltd
add
push
xchg
pop
in
ja
test
or
inc
dec
mov
inc
sub
cwtl
je
xor
fwait
loop
xchg
push
jne
int
sbb
icebp
call
adc
xchg
sbb
inc
pop
sbb
sbb
lret
xor
cmp
sbb
push
push
mov
jmp
mov
push
and
add
jg
mov
jo
and
cmp
dec
iret
xchg
xlat
mov
or
pop
lret
pop
pop
pusha
add
mov
mov
out
fldl
imul
insl
and
ret
pop
push
and
jo
mov
push
mov
push
mov
jb
lcall
cmp
mov
jmp
lret
in
adcl
out
dec
call
mov
jne
int
jl
xchg
bound
lcall
mov
shll
dec
mov
pop
rorb
sub
fsubr
pop
call
outsl
and
pop
and
pop
push
clc
pushf
pop
sti
mov
cs
test
ret
ret
sub
cmp
lret
hlt
pop
std
xor
adc
lea
pop
scas
dec
ljmp
pop
ja
mov
incl
fwait
ja
test
inc
pop
and
mov
or
or
mov
push
jl
addr16
push
jmp
cli
mov
cmp
jge
dec
sub
lods
cmp
push
fadds
into
push
pop
in
outsb
testb
add
pop
ret
pop
in
es
test
or
or
pop
into
sbb
or
jmp
adc
ret
loope
insb
lahf
lock
and
mov
inc
ret
xchg
xchg
aas
shll
fs
dec
adc
cwtl
das
jle
adc
in
jg
ja
and
sub
lahf
xchg
mov
mov
push
loopne
xor
mov
mov
mov
push
fcoml
lea
cltd
and
cltd
add
mov
je
and
mov
int3
imulb
stos
jae
mov
jge
jle
lock
pop
pop
call
aas
rorl
pop
pop
pop
jp
leave
popf
fsubrl
in
jb
or
adc
clc
scas
sbb
mov
dec
roll
out
orb
sub
push
lcall
mov
push
mov
mov
out
cmp
pop
loop
sbb
cmp
std
xchg
xchg
add
rcrl
and
mov
adc
jge
sarb
out
mov
mov
cmp
jmp
dec
icebp
mov
push
stos
push
xchg
fcompl
imul
sbb
nop
xchg
in
jge
mov
cmp
dec
xor
test
stos
stos
sbb
push
mov
sub
lods
imul
and
inc
rcrb
and
imull
loopne
jo
sbb
pop
jo
in
stos
adc
scas
mov
std
insl
inc
icebp
add
jle
xlat
jp
aam
in
stos
pop
ffreep
pop
mov
cmc
lcall
push
jg
pop
in
leave
adcl
xor
out
push
push
out
js
sub
jle
sub
pop
jns
mov
fldl
repnz
and
or
and
push
ret
clc
ljmp
xlat
dec
fldcw
and
mov
fmuls
in
and
push
mov
sbb
add
je
cmpsl
ret
stos
or
xor
adc
fsubrs
ja
insb
mov
sub
imul
jmp
cli
xor
mov
leave
pop
in
fistpll
andnps
movsl
gs
in
js
lret
outsb
xor
int
subl
dec
popa
ja
jnp
mov
loop
lods
daa
lock
adc
mov
push
xchg
rol
dec
inc
popa
sbb
lock
das
dec
outsb
call
insb
and
sbb
in
mov
cmp
dec
sarb
addr16
jge
xchg
push
sub
add
cmpsl
pop
in
jecxz
xchg
push
push
stos
xor
popa
in
xchg
dec
inc
cmc
test
mov
sbb
nop
insl
in
aad
push
mov
mov
test
cmp
adc
f2xm1
icebp
inc
pusha
fwait
dec
test
mov
push
jmp
jne
jle
lahf
mov
aas
cmp
dec
or
pop
or
fisubs
lods
fbld
mull
fcompl
jecxz
loope
aad
jp
movb
dec
sbbb
xor
sbb
xchg
ror
and
xor
xchg
rclb
fnstsw
or
mov
lcall
push
cmpb
cmpsl
push
stos
sbb
je
int3
xchg
in
imul
movsb
data16
sbb
xor
sbb
adc
cltd
inc
sub
cmpb
daa
jnp
xor
xor
out
or
jno
jae
adc
xor
aaa
add
add
mov
out
add
mov
pop
fwait
or
sbb
adc
mov
mov
xchg
mov
in
cmpsl
imul
daa
ja
mov
in
rorl
inc
pop
lret
jge
subl
loop
outsl
sub
paddusw
movsb
jl
cmp
ret
mov
and
or
and
lea
adc
jo
inc
adc
inc
test
dec
mov
lock
push
fwait
mov
push
iret
popa
push
cmpsl
cmpsl
pushf
sbb
mov
inc
inc
popa
push
clc
mov
mov
decl
popa
dec
ret
push
sub
inc
dec
sbb
push
fninit
fbld
mov
inc
repnz
aas
mov
popf
mov
lcall
pop
test
cmc
push
xchg
mov
xor
adc
jns
add
lret
push
sbb
xchg
into
ret
xchg
lret
aad
js
dec
lret
xor
ror
mov
or
mov
enter
or
jo
ret
xchg
loop
mov
mov
dec
dec
or
adc
add
jne
push
xor
shrl
ficompl
lret
push
sub
lahf
xchg
push
cmpsl
cmp
mov
and
sbb
mov
mov
jae
mov
das
and
fidivrl
mov
mov
movsb
nop
loop
pop
shrb
mov
adc
sub
dec
mov
sub
xchg
cmc
adc
mov
cmc
mov
rclb
mov
push
jo
subb
mov
jmp
pop
mov
mov
cmp
add
and
sti
lret
pop
pop
stos
cs
fists
addb
call
push
sbb
cltd
and
mov
xchg
xor
dec
lods
shl
cwtl
jno
adc
lcall
outsb
sbbb
jmp
jno
loopne
mov
jg
out
mov
mov
pop
xorl
roll
add
pop
aam
sbb
sar
xor
aaa
ljmp
inc
pop
cmc
jge
push
pop
dec
into
mov
xchg
xchg
pop
pop
nop
pop
push
in
out
sbb
xchg
push
idivb
popf
adc
add
test
cmp
loope
ret
sbb
imul
push
lea
and
test
mov
insl
aaa
es
js
insl
shll
addl
dec
movsb
roll
dec
jge
or
xor
jge
into
fnstenv
addr16
incb
xchg
movsb
insb
jo
jb
jge
xchg
jle
push
clc
mov
test
add
add
cmp
inc
ret
aas
jmp
sbb
insb
cmp
cmp
pop
xchg
loop
jmp
popa
into
xor
push
into
push
push
out
sbb
cltd
add
es
mov
xchg
shlb
mov
dec
cmp
test
xorl
aas
mov
imul
js
jo
aam
xlat
pop
adc
shlb
cmc
xlat
xor
mov
int3
pop
push
sub
pop
shr
dec
adc
jno
xchg
cltd
dec
or
mov
pop
popa
mov
dec
cmp
addr16
inc
pop
push
push
test
cli
cld
sub
push
sub
ss
xor
or
xor
fs
jl
adc
in
lcallw
and
pop
mov
lret
cs
dec
sub
cmp
push
shlb
out
iret
xchg
sbb
push
cmp
mov
push
xchg
insb
das
or
push
imul
repz
add
jg
jl
mov
jae
popl
loope
cs
ja
pop
sub
das
push
jl
fs
mov
adc
jle
and
add
lods
dec
shrd
pop
gs
adc
lock
call
call
aaa
pop
call
jns
lcall
shr
mov
icebp
push
mov
xchg
dec
cmpsl
std
clc
adc
sbb
arpl
pop
ja
pusha
pop
add
inc
add
cmpsl
loop
mov
pop
out
dec
jmp
mov
jmp
insl
stc
jle
xchg
inc
mov
jno
aas
jmp
or
mov
outsl
aas
cmp
jmp
jmp
mov
pop
sub
roll
out
dec
jno
inc
shl
icebp
xorl
pop
imul
push
sbb
mov
das
add
movsb
or
mov
ret
std
pop
stos
or
add
cmp
sub
push
jp
cwtl
out
popf
mov
imul
and
pusha
fstpt
push
pop
pop
mov
cwtl
mov
adc
ss
pop
pop
repz
mov
pop
cmpsl
mov
pop
inc
push
inc
mov
pusha
repz
jb
mov
repz
push
scas
pushf
cmp
outsl
adc
mov
loopne
pop
or
and
mov
js
add
arpl
pop
int3
movsb
mov
rcll
cmpb
push
or
cmpsb
rcr
pop
leave
lods
jge
push
arpl
enter
inc
sbb
pop
pop
ja
pushf
das
push
ljmp
test
scas
js
nop
fadd
aaa
sub
int
lods
rcrl
outsl
push
in
mov
sbb
test
pop
insb
mov
xor
aam
adc
repnz
cmp
jno
imul
adc
pop
sahf
in
pop
mov
pop
fbstp
inc
daa
ja
add
cmpl
mov
xchg
clc
sbb
push
adc
imul
lds
cs
sahf
pop
xchg
adc
shlb
aad
pop
stc
xchg
pusha
notb
inc
call
sub
sbbb
xchg
cwtl
push
cmc
lea
cmpsl
decb
fisubs
pop
imul
popf
sti
ret
mov
sbb
ror
adc
out
mov
aas
in
dec
shl
mov
cwtl
in
cmp
idivb
pop
andb
popf
stos
push
fdivrl
sahf
push
aad
fisttpl
jb,pn
in
push
js
dec
adc
rol
dec
sub
or
sub
int
or
sbb
out
lds
add
sub
test
dec
xor
sub
mov
clc
dec
fcompl
imul
mov
mov
call
jmp
dec
les
pusha
xor
hlt
mov
ret
and
push
inc
adc
mov
jp
fisubl
mov
cmpsl
jns
add
cs
sbb
lock
loopne
in
out
ret
add
int
in
andl
pusha
iret
pop
inc
es
lret
outsl
stos
xor
adc
mov
pop
push
sub
je
push
adc
xchg
fdivrl
mov
push
stos
ret
cld
scas
xlat
cmp
lahf
jb
xor
bnd
mov
stos
sbb
jecxz
adc
add
popf
ret
repz
push
dec
inc
adc
add
cmp
mov
jmp
jns
cs
gs
out
out
mov
cld
cmp
cld
add
into
mov
pushw
push
pop
stc
mov
les
cld
aaa
jle
ds
jle
dec
pop
mov
push
mov
out
sub
imul
pushf
pushf
pushf
imul
mov
lods
inc
push
cmc
jb
xchg
mov
mov
cmp
sub
pop
in
pop
enter
rep
rolb
mov
xor
sbb
pushf
sub
mov
fsubr
test
test
ja
xor
arpl
movsl
out
sub
wbinvd
test
push
jae
xchg
or
cmp
lahf
jle
ds
mov
int
sub
movsl
jnp
int3
xor
outsb
inc
mov
lock
add
mov
movhlps
add
or
fmuls
rcl
js
mov
ljmp
mov
adc
cmc
adc
imul
dec
mov
inc
enter
movsb
xor
mov
or
inc
dec
icebp
popf
mov
shlb
call
add
ret
mov
xlat
fsubs
jp
fsubr
xchg
cmp
xlat
aaa
jge
test
je
pop
rcrb
int
add
jl
push
sub
test
clc
fdivrs
lock
xchg
xor
and
std
lret
cmp
sahf
sub
pushl
test
aas
mov
scas
inc
in
cmc
ficomps
aam
add
sub
leave
sub
std
cs
xor
stc
rolb
cmp
push
dec
sub
mov
lea
xor
addr16
jns
mov
jb
push
jno
add
gs
mov
insb
dec
inc
or
test
outsl
add
mov
ja
stos
data16
test
inc
outsb
push
outsl
outsl
ficompl
mov
cmp
mov
xor
mov
fdivrl
adc
xchg
enter
jp
cmpsl
adc
shlb
and
fisttpl
outsl
cld
inc
and
fiaddl
inc
lret
lds
inc
pop
cli
out
out
stos
adc
movl
scas
add
leave
out
pop
xor
sahf
mov
sbb
lcall
adc
push
sub
and
fs
dec
daa
mov
mov
sbb
lret
shll
clc
sahf
out
lcall
fwait
test
imul
loop
mov
popa
cmpsb
rcll
pop
sub
aam
xlat
cmp
or
cld
shll
rcrl
insb
fwait
lock
add
pop
ret
ja
mov
add
js
cs
int
std
in
clc
arpl
nop
inc
sub
sub
sbb
lret
cli
sbb
dec
or
pusha
xor
les
pop
sbb
mull
neg
and
in
out
sub
dec
sbb
loop
in
mov
mov
or
movsl
push
mov
pop
mov
push
outsl
mov
fmuls
mov
sbb
int
xchg
or
leave
lsl
mov
rolb
mov
fldcw
mov
lahf
adc
movsl
movsl
add
ljmp
aas
movsb
fdivrl
pop
mov
mov
std
sbb
das
lods
dec
test
mov
fsub
outsb
sub
dec
jl
test
outsl
cmpsl
push
add
and
addr16
jns
xlat
cmpsl
jge
aas
xchg
scas
or
jp
add
inc
outsl
scas
ds
push
lock
adc
jae
inc
cmc
shl
dec
popa
inc
jnp
mov
sbb
add
dec
mov
inc
and
in
pop
pushf
sbb
das
inc
pop
or
lcall
dec
push
iret
cld
add
fsubrl
shll
frstor
or
xor
loopne
popl
jo
lcall
imul
mov
roll
inc
mov
add
or
and
rcrb
mov
cmpsl
addr16
inc
push
jg
sbb
or
jmp
ljmp
lods
std
push
mov
mov
cmp
mov
shrb
cmp
repz
pmaxub
cli
xchg
pop
sbb
sub
dec
ja
es
clc
leave
lods
xchg
cmp
filds
popf
jmp
aaa
leave
mov
pop
call
mov
and
std
ljmp
mov
xchg
fstpt
pop
mov
aam
mov
pop
fnsave
ret
in
test
push
movsl
mov
sarl
bound
xor
adc
jnp
dec
xor
dec
mov
test
inc
xor
pusha
mov
pop
les
or
pop
and
lods
sbb
xchg
mov
add
xchg
fiadds
jns
loopne
test
lcall
fs
mov
sbb
cmp
imul
jne
jne
roll
rcll
dec
sar
aam
fistpl
div
cltd
inc
outsb
add
pushf
stc
inc
pop
fnstenv
add
push
sbb
int
and
es
pop
cmp
inc
ret
cwtl
repz
out
sarb
mov
jmp
mov
cmp
pop
jge
rolb
je
push
out
in
fcomps
mov
cmp
lea
and
ret
jo
das
mov
fs
sub
out
dec
xlat
push
pop
in
loope
push
fwait
sbb
into
mov
out
mov
ficompl
test
icebp
mov
xchg
fisubs
je
jo
mov
push
outsb
ret
jp
add
jmp
outsb
mov
xor
insl
int3
int3
pop
cmp
push
and
push
jg
cmp
scas
es
jne
push
rcrl
jns
loope
sahf
jnp
subl
lret
push
add
gs
stc
mov
sti
sub
dec
xor
adc
call
movsb
inc
lea
ds
fwait
dec
cltd
pop
hlt
adc
sbb
stos
lret
or
inc
xor
movsl
fucomp
ja
insb
shll
fs
lahf
rcr
scas
fxch
sbbb
lahf
push
bound
push
mov
test
sbb
mov
add
sbb
xchg
push
or
cmp
dec
out
sbb
mov
push
add
pop
mov
insb
test
negl
scas
pop
sbb
inc
shrb
xchg
pop
mov
push
add
imul
js
jae
bswap
dec
mov
icebp
xor
notb
mov
je
movlps
in
ss
rcr
loop
push
add
inc
dec
scas
cmp
xor
inc
aas
jp
sarb
mov
dec
aas
dec
shll
cwtl
daa
adc
cs
cmp
pop
sti
cmp
cmp
pop
into
and
daa
enter
jne
inc
scas
out
or
xchg
test
out
stc
pop
out
adc
add
ror
cmp
pop
adc
jl
aam
mov
or
mov
out
stos
mov
mov
lods
test
gs
add
dec
dec
arpl
sti
fwait
xchg
lcall
inc
je
cmpsb
mov
sbb
adc
jne
add
jns
dec
dec
push
stos
rorl
jg
shl
push
add
jb
xchg
add
jle
psadbw
push
and
push
clc
outsb
xchg
lret
xor
mov
lods
pop
sti
add
fmuls
icebp
ljmp
cmp
test
sbb
jp
repz
fsubrl
lods
ja
jp
popf
add
push
aaa
mov
outsb
cmpsb
leave
faddp
mov
scas
xchg
mov
xlat
cld
std
cmp
add
std
test
mov
cmp
ficoms
or
outsb
push
ret
adc
dec
xor
pop
inc
icebp
out
add
xchg
xchg
cli
mov
in
mov
lret
pop
aad
insb
push
out
fldenv
stc
push
loop
push
divb
jb
popa
pop
and
lahf
pop
inc
push
sub
repnz
cmp
test
dec
mov
jl
out
test
test
js
dec
xor
dec
xchg
out
pop
sbb
in
xchg
cmp
notb
test
icebp
cld
sti
in
sbb
fisttps
dec
ficomps
push
loopne
push
loope
xchg
hlt
pusha
adc
adc
aam
int
push
xchg
sbb
imul
dec
mov
cmp
leave
jo
outsb
xor
cmp
ret
in
xchg
mov
std
stos
mov
cmp
xchg
cmp
idivb
arpl
ret
inc
inc
lods
nop
repnz
jnp
ja
xchg
mov
mov
mov
lret
mov
jge
xlat
pop
popf
repnz
pop
dec
pushf
dec
xchg
lret
shlb
cmpsb
dec
xchg
shl
jb
xchg
mov
outsb
popf
inc
mov
movsl
inc
lea
fmuls
mov
cmpb
jmp
popa
sub
push
lods
sti
popf
push
add
inc
je
call
lea
fwait
bound
out
pop
push
add
loopne
and
pop
add
mov
mov
shrb
scas
inc
lods
test
mov
pop
enterw
inc
pop
jmp
ret
mov
mov
popa
xchg
mov
push
insb
push
mov
fstpt
xor
rcll
pop
test
orb
loopne
jne
test
xlat
out
adc
jmp
fcomip
aam
imul
jmp
out
pop
jbe
fistps
sbb
arpl
neg
jo
cmp
mov
daa
imul
cli
adc
dec
xor
shr
cld
mov
stos
shl
das
add
mov
sub
faddp
dec
pop
dec
mov
mov
or
scas
or
and
in
bound
dec
imul
in
std
stos
cli
inc
std
or
ss
and
add
dec
cmc
ss
mov
insb
cltd
sbb
push
rcrb
mov
arpl
lods
aaa
push
or
iret
push
aas
dec
ja
pop
outsb
mov
orl
xor
data16
orl
sti
addl
nop
scas
insb
lret
cmp
pushf
jo
pop
lahf
clc
ljmp
sbb
sub
je
sbb
dec
fcomps
jl
xor
adc
or
popa
pop
nop
push
or
inc
cli
jnp
das
scas
dec
js
cltd
mov
js
lret
test
lods
iret
imul
fisubrs
push
mov
andl
scas
xchg
dec
cmpl
lcall
ret
dec
and
adc
std
jnp
pusha
in
test
xorl
adc
pop
inc
loope
gs
pop
jecxz
xchg
js
mov
push
sub
icebp
add
xchg
mov
jecxz
ficompl
lret
leave
fs
or
es
daa
test
subb
cmc
sub
dec
leave
dec
sub
ljmp
xchg
fists
es
xor
aad
in
or
inc
or
jns
xlat
ja
lret
adc
pop
or
sbbl
cld
movsb
jne
fwait
in
xor
add
daa
inc
pop
sti
mov
and
xchg
mov
ret
hlt
mov
mov
movhps
mov
or
dec
std
dec
cmp
cmp
movsl
dec
sub
cwtl
iret
cmp
push
xchg
cmp
or
das
addl
stos
sbb
xchg
outsb
movsl
ja
adc
cmp
or
dec
addr16
adc
xchg
sbb
xchg
int
dec
push
jecxz
cmp
dec
into
cltd
cmp
fstpl
mov
xor
shll
sbb
mov
pusha
sub
aad
scas
out
dec
push
je
es
mov
pop
ret
out
push
adc
mov
sub
xor
dec
mov
sbb
fdivrl
mov
test
into
mov
mov
pop
mov
repnz
fsub
fldcw
fcoml
mov
ror
xor
fsubrs
push
lahf
inc
psubsw
stos
mov
sbb
test
and
outsl
jne
jmp
sub
stc
or
shrl
push
pop
or
sub
add
push
sbb
inc
push
push
js
dec
aas
pop
addr16
je
sbb
cmp
sub
xlat
mov
push
insb
scas
ljmp
out
xlat
jnp
push
decb
sarl
andb
xor
in
js
mov
and
sbb
movsb
hlt
pop
sub
jp
jge
jo
mov
lret
loopne
adcl
ds
arpl
adc
test
xchg
insl
rorl
push
in
mov
loop
sub
sbb
lods
xor
mov
jle
out
inc
lret
out
mov
push
and
or
daa
add
outsb
add
add
in
decl
paddw
xchg
jmp
scas
jge
mov
ret
mov
adc
dec
pop
mov
pop
push
stc
pop
mov
sbb
gs
inc
test
iret
sbb
js
or
in
sub
shr
loop
mov
je
pop
pop
mov
mov
sbb
fs
ret
stos
jb
outsb
or
rcl
in
insb
sarl
subb
dec
aam
sbb
in
pop
roll
jmp
lret
pop
in
mov
das
add
and
fistpl
xchg
jo
lock
scas
sub
icebp
inc
push
xor
dec
jb
repz
popa
sti
cwtl
adcb
inc
jo
push
sbb
es
fs
pop
jbe
jecxz
pop
and
pop
jmp
enter
sub
out
and
repnz
test
xor
fistpl
scas
or
cmp
push
sub
pop
mov
pusha
push
sub
pushf
push
sub
sub
pop
xchg
subb
sbb
push
xor
sti
jmp
js
movsb
mov
add
ss
fisubrl
xchg
sbb
dec
sbb
inc
sub
mov
int3
mul
ret
iret
mov
je
sub
out
and
push
out
and
iret
or
and
jae
inc
add
jge
cmpsl
mov
popf
jnp
mov
pushl
fstps
scas
mov
cltd
push
jp
adc
push
insl
leave
dec
lahf
mov
sbb
stos
push
test
insl
sub
push
movsb
stos
add
xchg
jbe
push
cmp
mov
mov
decb
adc
push
or
xchg
cmp
or
rorb
cmp
lea
xchg
popl
lahf
jle
dec
test
xchg
adc
jnp
into
cmp
xorb
push
xchg
std
fildll
les
xchg
mov
fsubrs
aaa
mov
out
or
dec
dec
enter
cmp
out
mov
mov
xor
or
and
or
imul
mov
test
xor
mov
ljmp
in
inc
rcr
jb
js
sbb
test
fsubrp
and
pop
loopne
dec
push
test
dec
arpl
push
add
inc
pop
sbb
push
aas
fisttps
icebp
jnp
stos
stc
dec
je
pop
in
fsubrs
stos
xchg
xchg
cli
lds
fiaddl
xchg
je
xor
push
sbb
shrb
pushf
or
ds
cmpsl
jne
ret
mov
mov
fidivs
out
jge
loopne
mov
xchg
pop
and
dec
pushf
and
seta
cmpsl
inc
les
pop
jb
push
push
sbb
inc
mov
push
push
movsl
and
in
lret
add
xor
insb
std
mov
loopne
pop
mov
push
loope
ljmp
hlt
pop
call
jecxz
xchg
sbb
test
into
pavgw
fidivs
stc
mov
xchg
inc
loopne
cmp
movsl
cmp
pop
and
or
repnz
clc
sub
sub
addr16
repz
push
je
aaa
push
pop
lds
js
or
jmp
rcrl
lret
push
or
sub
aad
fmull
mov
lds
cmpsb
mov
mov
rorb
sub
fiaddl
push
xor
xchg
xor
sub
ja
and
movsl
adc
gs
cmp
cltd
xor
fucomip
xor
sub
push
lods
test
call
cmp
push
loope
iret
aam
adc
sbb
or
lcall
pop
mov
mov
loopne
xor
cltd
pop
fsubl
out
cmp
add
loop
aad
cmpsb
dec
jmp
shlb
jmp
rol
lret
enter
ss
enter
mov
mov
inc
inc
xchg
pop
dec
test
push
pop
or
shll
and
push
push
mov
imul
sbb
adc
dec
cmpsb
sarl
jno
mov
orl
mov
cld
push
ja
dec
and
in
jecxz
ds
jns
daa
hlt
dec
cmp
pop
push
aas
fcoms
stc
pushf
cmpb
int
hlt
test
pop
or
stos
push
mov
xchg
lret
push
mov
inc
mov
outsl
push
movsb
mov
push
cs
push
adc
push
mov
xadd
push
or
int3
outsl
xlat
xchg
mov
cmpl
inc
leave
cmp
xor
test
push
inc
push
dec
cmp
push
int
clc
je
xchg
nop
cmp
mov
test
dec
jge
div
fists
lret
pop
push
mov
add
cmpsl
mov
pushf
cmp
mov
push
xor
xor
xchg
inc
add
pop
addb
cmp
loope
fdivrs
sub
mov
cmc
or
out
xchg
sbb
movsb
out
pop
dec
movb
es
shll
subl
cs
mov
lock
movsb
sbb
mov
push
pushw
push
mov
rorl
adc
sbb
add
aam
stc
cmc
mov
cmp
jo
lcall
sarl
movsb
out
add
jmp
repnz
adcl
fbld
js
not
andl
xlat
fadd
stos
pop
adc
fs
in
pop
adc
mov
cmp
jg
push
sti
push
mov
lds
and
xor
lcall
inc
mov
pusha
mov
je
in
mov
pushf
pop
out
push
outsl
je,pn
out
push
inc
xchg
test
mov
sub
adc
aam
out
adc
pop
out
mov
jg
test
enterw
test
adc
and
into
sbb
pop
sub
dec
mov
fildll
mov
popf
lret
sarl
fcmovne
mov
cs
mov
and
insl
stos
jmp
popf
inc
push
nop
ds
mov
lods
or
jns
mov
mov
xchg
adc
ss
mov
mov
sub
mov
aad
testl
out
leave
loopne
aam
fs
cs
fdivrl
adc
add
xor
cmpsl
arpl
or
pop
fbld
dec
jbe
arpl
adc
pop
or
pushf
stos
mov
call
cwtl
test
xchg
lea
enter
sti
adc
add
pop
push
pop
shll
mov
mov
inc
or
adc
jg
sub
jge
lods
in
add
or
mov
sarb
jae
dec
adc
sbb
dec
mov
lock
or
loope
imul
cmp
mov
fisubl
xchg
cmp
imul
aas
add
lret
lods
xchg
in
icebp
jge
dec
xchg
insb
ljmp
popa
cmc
cwtl
scas
mov
insb
sahf
mov
xor
push
movsl
adc
out
adc
push
jnp
pop
xchg
push
fisttpll
push
test
jmp
je
aaa
dec
cld
mov
mov
lock
dec
lcall
xor
jbe
inc
mov
cmc
arpl
push
int3
outsb
loope
mov
and
dec
push
in
sbb
js
mov
and
cmpsb
mov
jo
movntq
addr16
inc
jne
scas
lods
jl
sbbb
ret
jnp
jl
xchg
mov
inc
inc
das
xor
aam
andb
xchg
andb
out
out
test
insb
or
cmpsl
repnz
adc
ljmp
mov
popf
cmp
sbb
lret
shrl
cmp
movsb
aad
ret
jo
mov
inc
sub
outsl
pushf
jne
aad
pop
pop
or
mov
push
in
mov
sub
loopne
ds
inc
nop
sbb
lcall
dec
sbb
jno
mov
cmp
pop
add
dec
mov
mov
repz
call
fmuls
pop
adc
insb
mov
xchg
pop
ja
sbb
and
outsb
and
out
xchg
fsubrl
push
jg
lock
jno
stc
imul
inc
lcall
adcb
in
inc
gs
add
lret
sbb
lods
adc
repnz
int
jl
and
push
jmp
and
pop
stos
cmc
push
js
insl
frstor
testl
xchg
and
andb
jl
adc
cs
mov
out
push
mov
outsl
push
cmp
sar
sbb
mov
lds
adc
xor
repnz
data16
inc
pop
sub
dec
pop
push
lahf
pop
pop
pushf
or
fldcw
ja
inc
mov
enter
int3
push
adc
add
shl
fdivrs
sbb
push
xchg
adc
push
cmpsb
fsts
scas
sbb
cmp
mov
pcmpgtb
enter
pop
pusha
test
mov
sbb
popf
jno
push
mov
mov
int3
pop
or
mov
jo
or
fwait
vpsubsw
les
sbb
decb
mov
cs
mov
mov
cmp
pop
sahf
pop
cmc
jmp
or
data16
ficompl
mov
adc
cmp
mov
cwtl
push
cmpsb
inc
pop
lcall
sti
roll
shlb
aad
pop
sbb
add
mov
or
mov
in
push
sbb
adc
push
lds
out
ljmp
jno
push
jmp
push
lea
jp
sarl
sub
inc
inc
xchg
push
inc
fidivs
cmc
jecxz
sarl
jae
dec
jnp
dec
inc
stc
mov
insl
fwait
fwait
dec
ret
imul
out
fisttps
xchg
cld
pop
adc
jb
sbb
insl
push
mov
inc
push
and
rcll
sti
das
xchg
xchg
repnz
testb
xor
and
test
lahf
jnp,pt
inc
bound
sbb
fdivrp
test
mov
sub
neg
jnp
or
orps
shll
push
int3
cmc
sbb
popf
add
dec
out
and
test
or
jge
xor
add
push
sbb
in
adc
or
inc
std
mov
aam
arpl
daa
lea
out
out
push
insl
or
xchg
in
jno
and
sub
inc
js
mov
push
pop
push
mov
pop
cli
dec
or
cmp
pop
lret
inc
mov
addr16
cmp
orl
jns
cmc
push
mov
sbb
pushl
sti
mull
pop
scas
xor
mov
xchg
ror
inc
insb
dec
cmp
adc
and
mov
loop
fs
cld
cmpsb
mov
inc
fcomi
ficoms
add
or
pop
push
xchg
inc
jle
cmp
xchg
jns
out
pop
pandn
movsb
fs
sub
mov
add
xor
into
push
and
add
jle
mov
and
or
push
pop
scas
mov
push
mov
adc
arpl
mov
xor
ljmp
xchg
and
pop
pushl
rclb
jns
mov
jmp
pop
repz
call
int
das
jp
scas
jg
scas
xor
add
call
lahf
xchg
mov
push
add
lret
loopne
ljmp
cld
sahf
pushf
dec
add
inc
add
fildll
negl
or
cmp
in
ret
push
andb
lods
xchg
jne
mov
push
negb
pusha
shll
je
in
cld
mov
cli
dec
sub
mov
mov
xchg
rep
mov
adc
mov
add
stos
xor
insb
int
sub
adc
popa
es
mov
imul
cwtl
sbb
lods
xchg
sub
push
dec
xchg
std
adcb
adc
movl
popa
sarl
and
and
aaa
adc
insl
push
aad
sbb
ljmp
les
sub
scas
mov
cld
cmc
stos
in
xorb
js
pushf
jp
sub
in
fcoms
outsl
mov
xchg
adc
lods
js
xchg
cmp
loope
jge
xchg
add
push
xor
pop
std
sbb
xor
push
xor
loopne
lret
pop
sub
orl
outsb
pop
inc
leave
cmp
jae
adc
cs
shrb
inc
shrl
mov
loopne
mov
xchg
xorb
setne
xlat
int
jecxz
repnz
push
and
pop
ljmp
in
repz
jge
push
jo
sub
dec
imul
add
ficomps
adc
mov
inc
push
mov
and
ljmp
adc
and
imul
mov
cmp
adc
call
jmp
or
shrb
mov
mov
inc
mov
mov
jne
out
xchg
xchg
cli
jmp
cmp
subb
lea
and
push
leave
jo
adc
sbb
xor
mov
inc
inc
and
jnp
push
inc
mov
jecxz
and
add
insb
arpl
dec
mov
xorl
ja
mov
mov
xchg
cmp
push
movsl
jp
pop
xor
stc
int3
enter
push
scas
sub
pusha
ss
lds
ja
fbstp
pop
mov
jbe
mov
jb
mov
lock
daa
std
xor
push
bnd
mov
mov
out
mov
cltd
fdivrl
scas
dec
in
inc
inc
jae
push
add
ds
cmp
loope
push
shlb
iret
aad
bound
add
jns
push
jmp
or
test
xchg
out
in
mov
adc
push
or
xchg
and
fs
imul
icebp
jno
mov
int
cmp
adc
repz
cmp
or
xchg
loop
jecxz
mov
imul
pop
sbbl
fidivs
mov
xor
xchg
clc
push
icebp
int3
mov
inc
mov
and
mov
test
xorl
add
enter
pop
mov
sbb
hlt
mov
scas
outsb
push
or
sub
sahf
and
cld
dec
ret
push
addr16
lea
jle
and
std
sub
push
sub
cmp
test
fs
cmc
pop
mov
jge
pop
mov
in
mov
cmp
insb
out
jno
into
cmp
pop
jbe
popa
jno
in
ror
dec
pop
adc
cs
dec
inc
add
ja
xchg
insl
jge
mov
xor
xor
pop
das
jbe
add
out
test
icebp
jge
xchg
ds
aas
xchg
jbe
xchg
pop
out
shlb
and
add
sbb
sub
cmp
stos
pop
and
cmp
mov
dec
jnp
in
mov
int
subl
xor
push
or
mov
or
repz
jge
and
push
cmpl
aam
loopne
fnstcw
xor
ret
je
aaa
cmp
xchg
pop
addr16
dec
repz
mov
and
rcrb
xor
in
sub
fsubs
cld
mov
test
adc
jo
das
sbb
iret
fs
add
ret
sbb
sub
movsl
push
mov
pop
fisubl
in
jns
aad
mov
mov
pusha
push
or
pop
jle
mov
and
ja
aaa
add
mov
stc
mov
mov
inc
mov
xchg
and
pushf
into
out
ret
insb
iret
pushf
add
mov
jo
fisubs
insb
dec
scas
dec
inc
pop
or
ret
out
test
movsb
mov
sub
neg
push
clc
cmp
loopne
xchg
fxch
sbb
in
sarb
cld
xlat
add
pusha
adc
lahf
push
and
add
mov
fs
sbb
jno
sub
int3
fisttpll
adc
xchg
in
aam
fcmovu
dec
xchg
pop
and
popf
mov
and
jmp
push
js
outsb
xchg
push
cmpsb
call
sbb
insb
cmp
decb
or
ljmp
mov
cmp
or
shll
rolb
push
outsb
enter
add
jb
sbb
lret
jmp
mov
jp
iret
lds
jns
jmp
xchg
std
sbb
cmp
mov
mov
jl
xlat
or
push
push
adc
cmc
and
cmc
sub
enter
push
shr
or
inc
push
test
iret
xchg
popf
or
subl
repnz
popf
jmp
pop
add
movsb
ficoms
fldl
xor
call
in
inc
cmp
int3
mov
nop
ds
into
neg
inc
jmp
cmp
mov
decl
adc
lcall
push
inc
test
mov
xchg
sub
mov
test
std
cmc
push
lret
ficompl
jo
cmpsb
push
mov
das
jmp
std
jne
inc
mov
sub
fiadds
xchg
subb
shlb
jbe
dec
jb
mov
fs
xchg
sub
sbb
cmp
idivb
inc
stc
push
lret
push
divl
adc
adc
xchg
dec
arpl
inc
xor
inc
mov
xchg
jb
mov
mov
test
jo
xor
loop
sti
test
js
xchg
aad
pop
lods
ficoms
fs
mov
jbe
out
mov
stos
shr
inc
test
adcb
xchg
pop
mov
push
es
stc
mov
pop
cs
adc
sbb
xchg
mov
xor
and
cli
aam
test
xor
inc
push
jns
fidivl
dec
xchg
repnz
inc
jns
mov
mov
out
mov
jmp
lods
and
push
xlat
sbb
pop
pop
sbb
movsb
adc
push
mov
lds
xchg
lods
mov
adc
mov
fildl
inc
repnz
aad
test
rolb
mov
andl
enter
jecxz
ds
js
push
fidivrl
cmpl
int3
xor
xchg
fst
stos
lret
adc
push
mov
mov
sub
fs
adc
lds
je
into
push
jbe
call
jp
loop
cmc
or
sarl
sbb
pushf
sbb
sbb
xlat
psubw
fcmovnu
cmpsb
test
ljmp
inc
repnz
std
cld
mov
xor
or
in
mov
sbb
mov
adc
pop
insb
cmp
xchg
xchg
loope
xchg
sub
and
dec
lea
adc
sbb
cld
pop
out
sbb
pop
pop
out
nop
mov
fs
push
repz
push
mov
jo
xor
mov
mov
repz
outsb
jecxz
push
inc
jp
roll
mov
stos
adcb
and
mov
shr
divl
inc
clc
or
in
in
sbb
scas
and
mov
imul
xor
test
cld
aaa
lock
and
mov
add
xor
mov
cmpsb
out
dec
sbb
jmp
mov
popa
js
sub
lret
pop
js
gs
or
mov
fbstp
jno
popa
jae
clc
lret
subb
fnstenv
movaps
iret
stc
sub
inc
xabort
ljmp
das
fs
stc
inc
inc
and
aas
in
pop
repnz
inc
mov
mov
push
adc
shrb
xchg
enter
movsl
mov
loop
mov
data16
sub
inc
sar
mov
popa
cmp
sub
into
loop
xchg
negl
stos
dec
push
xchg
cmp
adc
std
leave
jg
push
pop
out
cmpsb
cld
inc
roll
pop
sbb
pop
cmpl
inc
mov
rep
add
mov
xchg
jmp
inc
cmp
dec
popa
subl
orl
ret
out
cmp
divl
and
cltd
cmp
fistpll
or
jo
dec
adc
leave
jge
add
cwtl
sub
mov
ds
or
int3
ss
outsb
gs
jae
pop
or
int3
adcl
cmp
daa
call
insb
adc
adc
and
cmp
mov
sbbl
adc
mov
jb
adcl
or
in
mov
cmp
pop
cmpb
jb
pusha
sarb
pop
push
mov
imul
cmp
es
jmp
adc
pop
add
or
xor
add
cmp
sbb
and
mov
dec
jnp
lret
pop
fists
sar
repnz
pop
dec
cmp
aaa
ljmp
mov
mov
ret
dec
sti
mov
xor
repz
shlb
xchg
lret
and
dec
cmp
cmpsl
outsl
sbb
out
xlat
imul
mov
xorb
inc
pop
shl
sahf
out
sub
or
insb
pushfw
sub
dec
in
add
js
mov
inc
fnstsw
shlb
mov
cmp
xchg
add
dec
push
sbb
pop
into
addb
push
sbb
inc
call
cmpsl
mov
loopne
push
mov
pushf
inc
dec
mov
mov
test
in
rcll
jle
mov
out
push
aam
sti
cmp
push
fsubs
dec
push
jne
pushf
cmpsl
cmp
dec
mov
cmp
add
inc
xor
xor
repnz
xor
cld
push
and
scas
imul
adc
mov
inc
inc
dec
test
cmp
xchg
mov
push
sbb
ljmp
fstpl
popf
test
cltd
mov
sub
imul
sbb
icebp
mov
inc
clc
pop
dec
test
pusha
popf
sub
bound
les
test
iret
dec
dec
je
daa
adcb
test
pop
jae
dec
pusha
leave
inc
leave
mov
fcmovnbe
shlb
lock
pop
xor
shlb
jbe
inc
or
addr16
sbbb
xchg
mov
or
in
or
add
cld
pop
add
or
mov
lret
add
dec
rcrl
cld
or
and
insb
jl
js
ret
xchg
fs
sub
rol
fyl2x
shlb
dec
popf
jecxz
sbb
rolb
repz
dec
aam
mov
jp
jge
mov
loopne
nop
adc
ja
mov
inc
cmp
add
lea
mov
inc
popa
sub
daa
mov
notl
ret
addl
jle
sahf
jmp
xor
pop
repnz
mov
imull
ficoml
inc
repnz
sti
out
in
hlt
add
jge
movsbl
scas
add
aam
mov
pop
pushf
cmp
xor
cmp
icebp
out
push
adc
iret
in
xchg
and
insb
or
or
xchg
jmp
cmp
not
xor
ret
popl
nop
mov
and
nop
mov
jnp
cmpsb
incl
enter
pop
add
or
mov
adc
stc
mov
cmp
aas
int
jmp
out
push
cmp
push
lods
push
push
out
cwtl
and
fimuls
push
pop
and
inc
mov
push
jle
push
mov
push
mov
jecxz
mov
sub
mov
add
loopne
push
and
dec
inc
push
or
sbb
movsb
lock
jl
sbb
cmp
push
push
pop
mov
sbbl
ret
jmp
mov
sub
lock
cmpsl
idivb
js
scas
inc
fdivp
rcl
setp
lret
outsl
pop
or
mov
js
dec
jb
pop
dec
push
cmc
mov
or
cmp
ljmp
cmp
push
clc
adc
dec
ret
add
cwtl
xor
lret
shl
push
mov
icebp
fimuls
mov
leave
rcl
popf
dec
push
ret
lea
mov
mov
ror
popa
enter
mov
loop
loopne
cmp
adc
mov
loopne
ljmp
stos
outsb
inc
sub
popa
push
mov
in
fcomps
push
bound
jo
xchg
jae
pop
das
cmc
mov
repz
loopne
adc
add
adc
xchg
cwtl
loopne
push
or
dec
in
out
pop
dec
pop
push
dec
in
inc
inc
xchg
jne
cld
jge
int
jb
in
dec
jmp
sbb
popa
rolb
xchg
pop
and
mov
or
xor
jle
or
sub
inc
out
rorl
lds
mov
ja
inc
mov
pop
pop
jmp
test
dec
xor
lahf
xor
mov
icebp
rcrl
aam
push
sbb
insl
andl
cmpsl
jb
ret
js
and
xchg
dec
or
pop
js
pop
lods
push
jmp
sti
xchg
repz
inc
xchg
mov
mov
int3
iret
push
pop
mov
jmp
sbb
push
mov
pop
push
mov
lea
out
std
loop
lcall
cmc
push
popf
mov
sub
stos
mov
jecxz
ret
sbb
test
xchg
ret
cld
or
cmp
fimull
mov
inc
and
insb
xor
dec
mov
pop
adc
pop
pop
mov
jecxz
adc
stc
cmc
in
pop
mov
and
pushf
das
push
sbb
or
cmpsl
add
in
push
and
xor
push
add
xchg
sbb
jnp
outsl
pop
mov
sbb
lret
or
stc
insb
pop
ret
pop
mov
push
hlt
cmp
inc
outsl
addl
gs
fs
adc
or
aad
fcomps
ret
adc
iret
xchg
dec
adc
sub
jb
out
xlat
fdivl
xor
and
int3
int3
shll
dec
stc
adc
cmp
bound
sbb
hlt
addr16
outsl
mov
sbbl
mov
xor
aam
push
insl
pop
mov
xor
int
in
lods
cwtl
sub
iret
inc
mov
cmp
sbb
lret
or
push
jae
shll
mov
popf
lret
push
or
inc
mov
cmp
es
sbb
sti
mov
sub
jmp
hlt
addr16
sbb
dec
int
loop
dec
loop
in
xorb
fnstsw
add
lods
out
test
adc
and
lods
push
cli
push
mov
push
push
xor
fwait
fdivl
dec
mov
adc
in
xchg
or
repnz
pop
add
dec
ficomps
xorb
sti
clc
aas
and
sub
rcrb
mov
movsl
test
js
scas
dec
mov
out
inc
jge
loop
scas
int
dec
push
mov
pop
inc
fimull
mov
pusha
clc
mov
aad
iret
cmp
cmp
lods
inc
rcrl
iret
xchg
icebp
lret
cmp
addl
lea
sahf
insl
sub
andb
test
dec
subl
dec
inc
rcr
int3
xchg
and
outsl
mov
aam
jo
xor
dec
movsb
mov
dec
add
std
adc
push
and
sbb
jle
push
hlt
fsubrs
xor
xor
jae
cmp
pusha
cld
mov
insl
and
dec
in
and
cmc
push
jge
sbb
mov
in
xor
cwtl
pop
xchg
je
xchg
mov
dec
cmc
dec
lret
clc
shlb
iret
bound
test
lea
scas
loope
or
jl
daa
and
nopl
test
repnz
mov
call
dec
sbb
adc
outsb
pop
ja
push
cwtd
or
mov
loopne
adc
push
pusha
inc
adc
cmc
or
loopne
outsb
push
nop
stc
push
je
filds
jb
mov
movsb
xor
leave
jae
pop
loop
push
fistpl
addr16
add
leave
mov
xchg
push
inc
jo
pop
in
std
fnstsw
sarl
sub
test
das
pusha
mov
push
xor
divl
mov
fwait
xor
jmp
jge
pop
or
xchg
orl
lcall
xchg
cmpsb
test
aam
xchg
lcall
adc
fildl
push
les
jo
adc
lods
sub
rcrb
popa
loope
pushl
jg
aas
sbb
push
iret
mov
das
lret
inc
mov
std
clc
inc
jge
and
inc
popa
lret
imul
cmpsb
xor
pop
xchg
mov
leave
dec
cmpsl
push
es
iret
jle
addb
sbb
out
lods
loop
mov
jo
mov
jp
pop
add
pusha
cmp
stc
dec
jmp
in
fsubl
les
movsl
jmp
rcl
mov
rcl
push
addr16
xchg
mov
dec
dec
xor
mov
jmp
xchg
add
call
push
outsl
das
mov
loop
or
adc
scas
arpl
sub
jmp
lods
insb
jno
gs
inc
pop
pop
popf
dec
cli
mov
hlt
adc
rcrl
dec
and
dec
add
mov
mov
cltd
or
or
std
mov
clc
mov
in
idivl
sbb
and
pop
lcall
dec
cs
stos
inc
cmp
push
sub
xchg
sbb
lret
out
cwtl
add
paddsb
inc
xorb
jo
in
push
das
jle
mov
jnp
mov
cmp
mov
jno
aad
lock
nop
mov
loope
mov
out
pusha
fwait
dec
mov
mov
cmp
rclb
add
andb
call
push
mov
es
jp
xchg
push
out
xchg
mov
pusha
inc
add
mov
into
mov
jae
in
into
mov
mov
jle
jo
adc
and
sbb
into
fadds
push
aas
xchg
mov
fnstcw
ret
sbb
pop
jle
pop
cmp
nop
fwait
lahf
mov
clc
fwait
inc
ja
pop
jecxz
push
sbb
icebp
mov
fbld
dec
adc
lret
xor
add
dec
cmp
lcall
cmp
mov
call
mov
lock
jbe
sbb
xchg
adc
popf
xchg
cli
lahf
or
mov
shll
cmp
fidivs
inc
sti
stc
test
jae
iret
rorb
adc
xchg
dec
add
push
push
xor
adc
sub
sbb
jns
out
gs
push
outsl
std
shll
push
arpl
enter
pop
mov
arpl
xchg
mov
data16
jae
xchg
lret
int3
inc
cmpsb
mov
roll
add
sbb
dec
sub
xchg
push
ss
mov
addr16
rcrl
add
add
ljmp
std
fcmovne
fwait
cmp
inc
jno
xor
mov
jge
and
jns
lds
inc
subl
inc
inc
inc
mov
inc
bound
outsl
ret
enter
sub
les
sub
xchg
push
cmp
mov
push
pop
mov
dec
mov
mov
mov
scas
nop
test
scas
pop
push
mov
or
shl
cs
cmp
rolb
jb
nop
dec
fwait
das
and
mov
jns
shll
push
rcll
sub
int
fiaddl
out
mov
inc
and
psubw
cli
out
fildll
add
mov
lret
divb
push
je
pop
jbe
jae
mov
and
cmc
jmp
xor
int
or
mov
lock
push
push
inc
mov
push
movsl
imul
jmp
int3
push
or
push
outsb
test
add
pop
rolb
call
xchg
mov
adc
jl
sbb
mov
hlt
add
pop
stos
and
sbb
xchg
lahf
add
mov
arpl
movsl
lcall
push
pop
xchg
push
sbb
pop
scas
push
fnsave
cltd
mov
cmp
dec
jbe
lock
bound
push
in
adc
add
pop
fdivrl
xchg
mov
xchg
mov
xchg
xor
or
loopne
push
push
aam
rolb
jmp
ds
fucom
cmp
addb
ret
push
cmc
lret
sbb
and
fs
daa
push
add
xor
inc
mov
out
lds
dec
mov
fdivs
mov
mov
jae
push
inc
jmp
pushf
inc
or
xchg
mov
and
mov
pop
jno
pushl
push
push
int
xchg
pop
cmc
jo
shlb
mov
sub
sbb
imul
shll
push
sbb
movsb
shll
xchg
ljmp
js
pop
sahf
xor
sbb
cld
in
out
aas
xor
jl
inc
cmp
mov
ror
add
push
and
aas
push
fstps
getsec
adc
in
rcrb
ds
fadd
idiv
call
sub
mov
dec
and
and
mov
ret
sub
pusha
ret
incl
sub
mov
jae
mov
sbb
ds
pop
add
pushf
add
or
icebp
and
and
pop
jle
xor
loope
movsl
inc
mov
cli
push
pop
movsb
insb
mov
test
enter
dec
outsl
in
pop
add
ret
into
cmp
xchg
scas
or
or
cmp
add
xchg
lret
pushf
sbb
pop
xor
pop
xorl
adcl
sbb
mov
stos
jno
xor
cltd
pushf
lds
test
repz
nop
popa
sbb
inc
sub
sbb
add
inc
push
test
inc
shlb
je
inc
fildll
popf
addb
push
idivb
add
ret
lods
push
ds
pop
fldcw
push
aaa
mov
mov
pushf
xchg
jecxz
enter
jp
xchg
outsl
add
lcall
shll
push
lods
and
iret
subl
sbb
fnsave
fistpl
pop
pop
lahf
add
sbb
fistps
adc
cmp
out
insb
push
dec
sbb
xlat
xchg
fildll
pop
pop
loop
mov
dec
je
lods
mov
roll
jne
mov
sbb
jecxz
loope
lret
inc
sarl
leave
mov
mov
sub
gs
jge
mov
mov
bound
dec
popa
or
xchg
push
shrb
ret
lods
pop
scas
lret
jle
sub
push
aam
inc
nop
jae
jp
adc
in
test
pop
scas
mov
dec
mov
ss
jp
jno
lret
dec
cmpsl
xor
shll
stos
ljmp
push
dec
movsb
mov
fnsave
pop
sub
aad
cmpsb
mov
dec
call
js
xchg
andl
daa
repnz
lea
in
les
leave
inc
mov
or
and
rcrl
das
inc
or
add
jnp
pusha
hlt
dec
sbb
iret
xor
repnz
mov
fsubl
pop
inc
pop
in
push
imul
enter
pop
mov
out
xchg
ljmp
dec
xchg
sti
mov
xor
icebp
and
sbb
push
std
dec
inc
push
sbb
fcoms
hlt
outsb
fs
push
stos
mov
and
and
xchg
dec
sbb
mov
mov
aad
repz
or
loopne
inc
mov
pop
dec
xchg
xchg
sahf
push
notb
rclb
jae
or
stc
mov
mov
mov
pop
inc
call
sbb
test
stos
jle
mov
iret
mov
add
repz
fldcw
pushf
jmp
cmp
enter
fildl
jo
in
dec
add
ds
push
pop
mov
popa
jmp
mov
inc
mov
mov
pop
lcall
cmpsb
dec
cmp
adc
add
lds
and
daa
pop
mov
ja
out
and
lds
lcall
dec
xchg
jge
outsb
jno
jb
rcrl
xor
clc
cmp
and
in
add
pop
mov
xor
adc
dec
jno
sbb
push
adc
jbe
mov
inc
stos
adc
xchg
inc
cmp
fildll
inc
dec
nop
addr16
arpl
outsl
rorl
addl
shlb
je
xlat
nop
and
pop
dec
mov
and
rep
mov
push
lods
inc
push
arpl
fdivp
aam
add
or
or
addb
adc
mov
fmulp
mov
stos
and
stc
pushl
pop
test
fiadds
fiadds
push
lret
xor
xor
pop
imul
pushf
movsb
js
adc
cltd
or
jnp
popa
jle
pushf
dec
push
mov
mov
imul
push
cmp
mov
shlb
icebp
movsb
mov
jp
mov
jno
out
inc
pop
cmc
xchg
pop
out
xchg
mov
jmp
pop
clc
mov
fists
addps
movsb
cmc
in
add
or
jae
jp
adc
or
dec
mov
das
lods
cmp
loopne
push
or
fsubl
pop
push
cmpsl
subb
mov
fs
cli
test
jno
int3
mov
sbb
or
jb
outsl
inc
pop
dec
sub
pop
jmp
sbb
or
inc
and
int
mov
ret
fildl
popa
inc
add
mov
lds
mov
inc
repz
add
test
jne
pusha
scas
lret
pop
sbb
decb
in
jl
dec
add
hlt
stos
fisttpl
mov
cmpsl
loop
pop
adc
mov
rcrb
mov
xchg
add
aas
add
sbbb
data16
adc
jae
jo
stc
loop
cmp
sbb
notb
rolb
loopne
shlb
dec
aad
inc
dec
adc
dec
add
aam
ds
mov
push
push
mov
cmp
lea
push
repnz
cld
icebp
out
cld
dec
lds
icebp
cmpl
enter
xchg
shl
loope
cmp
js
dec
xchg
cmove
mov
xchg
adc
inc
jmp
cmpl
mov
jnp
test
xchg
jo
mov
pop
push
fsubs
inc
negl
cmpl
ljmp
psadbw
push
mov
fmull
push
push
pop
sub
xchg
adc
and
mov
psllw
out
shrb
int3
xor
jle
mov
mov
les
in
scas
imul
es
inc
push
cmp
in
fldenv
fs
in
negl
inc
mov
xchg
xlat
and
jns
pushf
xor
ret
outsb
bound
push
sub
sub
mov
push
push
int3
xor
int
into
int3
add
xor
mov
pop
and
iret
out
test
xchg
pop
shrb
bound
adc
testb
lret
pop
jo
jo
sub
pop
movsl
stc
jne
mov
mov
or
jp
stc
mov
leave
insl
mov
popf
stc
fsubrp
push
adc
and
adc
mov
xorl
outsb
xor
sub
cld
jae
sbb
pusha
fcoml
lret
adc
xor
jbe,pt
push
movsl
inc
es
sub
sbb
fisttps
cmp
in
push
int3
pop
inc
mov
mov
push
pop
testb
jecxz
adc
push
sbb
add
shlb
iret
push
lcall
adc
dec
inc
sub
xor
xchg
leave
andl
out
aad
or
xchg
mov
popf
and
add
lret
and
lret
les
jns
jbe
and
or
movb
das
sbb
or
sbb
pop
cmp
sbb
imul
cmp
jbe
and
and
repz
inc
pusha
mov
arpl
and
rcl
mov
imul
jmp
lods
xchg
addl
ljmp
addr16
mov
push
jo
lock
push
xor
pusha
fstl
hlt
into
rorb
jl
or
jbe
adc
dec
out
pop
cmp
sarb
pop
and
and
jb
xor
cmp
int
and
dec
or
add
adc
aam
scas
pop
loope
add
movb
sub
cmp
inc
mov
setp
notb
ret
jbe
ljmp
data16
aam
mov
out
sbb
leave
jne
sub
xchg
and
ja
push
loope
pusha
in
icebp
adc
test
popa
mov
adc
pop
xor
imulb
and
test
jmp
jge
pop
or
dec
and
mov
ret
dec
push
ja
dec
pop
pusha
outsl
arpl
add
icebp
shlb
push
add
cltd
jns
std
xchg
fiadds
lret
mov
jo
leave
lods
and
test
mov
lret
cmp
cmp
jge
ss
cli
aas
cmc
pop
dec
jae
rorl
jge
iret
ret
test
xor
fists
mov
je
cmp
sub
repz
or
inc
sahf
ss
fdivrl
out
daa
push
sbb
mov
int
stos
mov
adc
xlat
ret
stc
pop
icebp
mov
mov
ret
ss
pop
ja
or
fcomi
mov
dec
inc
push
cmpsb
dec
push
shll
xor
jbe
or
stos
sub
add
or
cmp
or
xor
scas
xor
jmp
subl
xchg
addb
lods
and
fisubrl
pop
aad
push
loope
pop
fildll
insb
adc
cs
sbb
xor
das
inc
pushf
push
mov
shrl
inc
lock
cmpsl
sub
mov
icebp
in
mov
xor
dec
outsb
pusha
mov
mov
movsb
and
nop
repnz
cmc
dec
scas
and
cmc
mov
es
mov
jg,pt
test
pop
mov
or
pop
aad
pop
add
lret
idivb
cmp
and
ret
inc
push
or
mov
mov
xor
push
icebp
in
je
sbb
xchg
xchg
cmpb
mov
sbb
xor
or
stos
add
lods
aad
mov
loope
push
sub
sub
into
ja
in
daa
push
lret
push
in
and
add
or
jmp
xorb
mov
inc
lret
or
adc
xchg
fadd
sub
jne
outsb
mov
daa
push
loope
pop
jne
mov
mov
sub
add
pop
or
imul
push
sub
dec
adcb
sub
adc
inc
ret
push
push
push
popf
pop
xor
pop
stc
ret
adc
inc
dec
adc
jle
fwait
popf
and
adcb
fists
sbb
test
pop
xlat
dec
xor
push
loope
cli
pop
insb
addr16
inc
jae
lea
lcall
aad
inc
fadds
lods
mov
add
cltd
sbbl
std
or
push
sbb
mov
sbb
mov
dec
add
fmull
jne
gs
imul
movsb
adc
arpl
test
dec
jbe
aam
adc
mov
mov
jbe
mov
xor
shlb
inc
mul
adc
test
imul
arpl
cltd
fcoml
lds
inc
gs
push
push
repz
decb
jge
mov
filds
mov
mov
jge
loopne
push
das
shlb
fmul
es
insb
cld
cli
leave
xor
push
into
shrb
sub
cmpsl
dec
mov
dec
fistpll
sub
inc
sbb
mov
nop
sub
adc
xor
test
and
ds
mov
xchg
mov
addr16
pushl
xchg
mov
mov
adcl
outsb
or
dec
fldenv
daa
jbe
repnz
jbe
sub
mov
pop
sbb
popa
addl
pop
jge
cmp
out
and
adc
popf
lock
mov
bound
adc
or
ret
xchg
mov
aam
push
cltd
mov
xchg
jle
sub
jb
lcall
add
cmp
xor
push
cmc
sbb
xchg
mov
int3
sbb
ja
push
addl
mulb
aad
add
mov
jb
sbb
mov
fsts
push
out
dec
and
xlat
push
xchg
rcr
mov
jbe
pop
cmp
movsb
lea
test
sbb
mov
cmc
out
cld
add
jge
mov
pop
xchg
mov
adc
pop
jns
cli
and
stos
repnz
dec
sbb
push
pusha
adc
push
xor
mov
jmp
push
sbb
dec
dec
out
mov
xor
adc
cmpsl
pop
sbb
js
fnsave
repz
push
scas
sbb
pop
mov
mov
fstps
jnp
sbb
add
mov
mov
cwtl
in
in
fwait
xlat
and
and
scas
cmc
sbb
or
push
testb
jg
xor
cmpsl
shll
dec
xchg
add
sub
push
inc
icebp
push
out
push
les
inc
add
enter
dec
je
sahf
cmp
sub
int3
vmaskmovdqu
shl
int
push
mov
sub
xor
es
dec
loopne
into
adc
xor
xor
lret
fidivl
sbb
aas
popa
es
dec
insb
inc
popl
jp
shll
sub
cwtl
mov
rcr
das
mov
scas
dec
pop
push
imul
jo
xlat
push
xor
lahf
pop
jmp
add
push
leave
movsl
lods
cmc
xlat
pusha
std
push
sub
and
push
sub
adc
jo
iret
mov
jbe
stos
sub
mov
mov
scas
lods
push
jbe
lcall
xchg
and
hlt
xor
xchg
xchg
or
stc
repz
enter
and
add
and
stc
dec
sbb
fiaddl
mov
stos
test
and
shll
inc
fnstenv
ret
daa
aaa
mov
nop
jns
inc
lods
out
jns
scas
inc
mov
ljmp
pop
mov
jne
xor
cmp
push
nop
adc
fadd
push
jo
lret
bound
lds
in
test
popf
les
out
dec
lds
or
or
pop
out
gs
push
rcl
jl
cli
fmull
mov
outsl
imul
jmp
add
cmpsl
clc
enter
les
loopne
in
push
cld
les
frstor
xorl
jnp
aas
fisubs
xchg
jne
movsb
jecxz
popf
lcall
sbb
adc
test
xor
stos
pusha
xchg
xor
inc
std
xchg
mov
push
dec
mov
popf
mov
mov
stos
jmp
imul
fistpll
pop
push
sets
pop
faddl
push
movsl
lahf
lods
or
cli
iret
test
stos
loopne
xor
subl
ficompl
js
jb
repnz
add
gs
xchg
repz
cmp
dec
xchg
or
or
and
push
insb
outsb
movsl
pushf
daa
fwait
or
push
outsl
xchg
icebp
sub
mov
jge
test
pop
movsb
push
jb
in
mov
aas
dec
pop
mov
imul
or
xor
in
pop
adc
pop
inc
nop
arpl
jge
stos
jl
pop
mov
lahf
fs
sbb
push
rsm
inc
dec
xor
sti
fistps
pop
xchg
aas
out
out
lods
mov
ds
aaa
popf
or
push
insl
xchg
mov
lods
js
xor
fistl
mov
icebp
cmpsl
mov
or
sbb
jns
mov
imul
repz
lock
outsl
push
loopne
adc
js
sbb
js
loop
jb
in
pop
testl
dec
daa
imul
sbb
xchg
or
pandn
jle
mull
loop
orl
jle
inc
or
inc
test
xchg
mov
mov
movsl
push
lahf
loop
pop
xor
push
outsl
pop
xor
push
test
jmp
push
pop
les
and
pop
sub
or
popa
out
mov
in
iret
push
shrb
sub
leave
jl
out
cmpsl
es
jbe
vphaddwq
sbb
movsl
sti
mov
out
repz
sub
xchg
sub
xor
loopne
movsb
fwait
adc
cmp
fstpt
xchg
iret
leave
clc
jo
mov
popf
xchg
test
addb
and
out
test
add
cmpsb
inc
incl
out
sarb
jg
fbld
pop
mov
call
inc
es
pop
jbe
sub
mov
addb
push
xor
leave
cmp
jbe
cmp
or
pop
stos
jo
push
lock
inc
push
out
lods
mov
mov
lock
imul
fsubl
mov
sbb
pop
pop
lahf
repz
in
test
dec
int
dec
cltd
scas
jecxz
dec
scas
or
mov
out
aad
sub
push
fidivrs
mov
insl
jle
loope
inc
ljmp
sub
sbb
sti
mov
cmp
sbb
mov
or
icebp
test
addr16
fucom
cmp
fcmovnbe
sub
ljmp
push
lods
rol
shrb
push
cmp
test
dec
aam
mov
sbb
test
nop
jge
dec
cmp
pushf
sbb
jns
pop
xlat
mov
cmp
cmp
dec
push
mov
dec
cmpsl
mov
clc
stc
les
in
pop
inc
sbb
cs
cmc
dec
loop
push
or
xor
or
mov
ret
adc
lret
or
mov
fld
fsubrl
popf
out
lret
repnz
into
mov
stc
popa
pop
frstor
jb
inc
js
jl
fadds
add
gs
test
mov
dec
lahf
or
and
testl
mov
push
es
out
jne
out
add
jb
dec
cmp
adc
or
out
mov
push
and
push
les
cmp
outsl
cmp
push
xchg
inc
push
cmpsb
inc
jmp
jne
jg
xor
dec
add
test
in
jnp
negl
imul
cmc
jno
cltd
inc
xor
pop
push
mov
jae
adc
movb
xchg
popf
adc
shll
pop
leave
mov
es
pop
mov
ret
pop
dec
imul
pusha
insb
mov
stos
popa
mov
mov
js
stc
into
jmp
ret
ds
sbb
inc
int3
xor
scas
mov
negb
mov
mov
dec
lea
in
lret
xchg
std
sbb
pop
ljmp
inc
or
ds
fwait
sub
test
push
jle
sbb
pop
insb
push
and
pop
adc
dec
sti
sub
scas
icebp
adc
jecxz
les
iret
jnp
dec
rcr
xchg
push
xor
mov
and
xor
out
std
dec
movsl
movsb
xchg
push
xsavec
push
popf
dec
daa
add
xor
test
push
lahf
inc
popf
push
scas
jle
inc
scas
scas
inc
hlt
pushf
xor
jbe
js
pop
adc
stc
pop
int3
sbb
hlt
xor
shr
adc
xor
pusha
in
or
add
rorb
fsubrl
add
dec
dec
and
fdivrp
fwait
cwtl
mov
insb
pop
push
cmp
jp
data16
pushf
or
ret
push
stos
push
and
sbb
cmpsl
xchg
ss
add
es
sub
stos
and
scas
sahf
gs
loop
ljmp
cmpsb
out
pop
pop
mov
les
adc
sbb
jb
jb
popa
xor
push
lret
out
and
xchg
xor
cmp
sti
dec
daa
mov
icebp
mov
in
jne
sbb
cli
mov
outsl
mov
fs
outsl
outsb
mov
das
sbb
in
inc
and
or
adc
rcrb
sbb
cli
fidivs
mov
les
push
movsb
xchg
adc
int
jb
pop
sbb
imul
insb
stos
gs
mov
lods
ljmp
or
out
or
dec
and
je
jmp
je
das
cwtl
rolb
sbb
dec
in
adc
pop
sub
add
insb
aam
sub
test
xor
xor
std
mov
jbe
and
sahf
jb
inc
mov
jp
negb
pusha
pop
pop
in
cld
mov
rorb
xor
ja
pop
xchg
les
pop
outsb
int3
cltd
pop
sbb
cmpsb
scas
les
jmp
and
pusha
pop
sahf
cltd
dec
xchg
inc
out
aas
pop
mov
pop
leave
xor
sub
jbe
frstor
loope
fsubrs
jns
and
xor
into
cmpsb
fstl
dec
sub
jno
and
mov
dec
aam
outsl
dec
pop
rolb
mov
add
cmp
and
push
jns
add
sub
mov
jno
adc
pop
out
sarb
pop
cmpsl
pop
fisttpll
sbb
dec
pop
mov
inc
push
sub
and
ret
cmpsb
cmp
fiadds
cmpsb
mov
lock
push
fmull
shl
cmp
rcrl
mov
xchg
push
mov
in
jmp
mov
mov
adc
xchg
sarb
mov
mov
movsl
lods
jnp
xor
imul
pop
cwtl
jle
jno
aaa
jle
jbe
xchg
jae
sub
loopne
and
inc
cmpsb
into
lea
aaa
dec
aam
mov
mov
mov
or
jmp
test
out
pop
out
sbb
icebp
xor
xchg
mov
in
xchg
aad
dec
jae
adc
pop
call
mov
mov
lcall
dec
fidivrl
mov
pushf
subb
cld
xchg
out
jmp
idivb
xchg
rcrb
clc
jo
orl
or
cmp
jbe
popa
call
pusha
pop
int3
pop
pop
add
or
out
ss
negb
mov
fsts
inc
xor
shrl
loopne,pt
insb
ljmp
hlt
add
aaa
inc
pushl
jns
out
xorl
jecxz
xchg
mov
test
or
xchg
xor
lods
jg
shlb
fisubrs
push
orb
std
notl
in
mov
movsl
bound
lea
cld
insb
push
jmp
stos
aad
int
stos
mov
pop
and
bound
xchg
test
jb
out
xchg
outsl
mov
pop
lds
mov
add
inc
outsb
cwtl
rclb
jne
sub
popa
push
pop
xor
cwtl
cmp
jecxz
push
sbb
fcompl
loope
jp
push
sbbl
ret
push
into
icebp
ljmp
js
fidivrs
ds
pop
scas
js
inc
test
xor
dec
xchg
xchg
test
cwtl
je
mov
mov
in
test
inc
adc
xlat
sar
push
inc
add
mov
add
jbe
fnsave
mov
imul
movb
int
sub
add
arpl
in
fisubs
out
xor
jo
call
pop
pop
xchg
ds
jmp
sahf
cmpsl
push
pusha
push
cltd
js
insb
in
xsha1
cmpsb
dec
fldcw
rclb
mov
mov
lods
xor
lock
aad
sbb
insb
mov
out
pop
xchg
xchg
mov
ret
lock
in
scas
fbstp
roll
lahf
mov
iret
mov
das
lahf
ret
mov
das
cs
mov
push
and
mov
mov
push
xor
add
std
mov
adc
sbb
xchg
or
push
dec
adc
pop
pop
or
out
dec
lea
icebp
pop
sbb
and
cld
ds
dec
pusha
lahf
imul
movsb
ucomiss
push
mov
lret
xlat
cli
inc
popa
push
cmpsb
jbe
in
inc
outsl
adc
ret
jg
adc
pop
cmp
aas
fsubs
clc
lret
cmp
jb
or
mov
out
gs
jo
mov
push
and
sbb
leave
jecxz
pushf
or
pop
sub
cmc
push
gs
mov
arpl
jl
or
add
stos
xor
faddl
movsb
popl
or
bound
out
cli
popa
sbb
mov
and
inc
jge
test
icebp
cli
pop
mov
int
loopne
xor
and
cs
pop
repnz
sahf
xlat
adcl
xor
xchg
or
add
scas
popf
inc
fcoms
enter
xor
cmp
fsubs
das
shlb
jo
ficompl
push
pop
or
jp
movsb
test
cmpsb
clc
pop
sub
stos
je
and
imul
xor
mov
mov
scas
xor
adc
outsl
mov
inc
jge
icebp
lret
xchg
iret
add
into
fwait
mov
push
ss
pop
mov
imul
sbb
jns
jno
lea
push
shl
xchg
mov
mov
dec
fcompl
push
adc
stc
pop
jne
cmc
push
pop
push
aas
mov
arpl
shll
or
inc
cmp
push
pop
pop
add
hlt
movsl
xchg
subl
arpl
or
fldcw
leave
sbb
pop
cli
xchg
inc
pusha
lahf
movsl
mov
xchg
cmp
loopne
jg
nop
inc
jecxz
dec
add
adc
cmc
mov
fdivrl
pop
std
scas
xchg
test
sbb
dec
out
cmp
idiv
inc
pop
js
test
lods
adc
out
test
roll
xor
push
in
lock
daa
xchg
mov
lock
xchg
push
xor
jno
inc
cs
mov
push
cmpsl
rorl
scas
cmp
pop
jno
xchg
clc
dec
dec
sbb
in
lods
shll
jo
mov
pusha
inc
inc
insl
sqrtps
cmp
lret
decl
pop
lcall
jne
mov
dec
test
iret
cs
pushf
push
mov
mov
in
cmp
inc
jno
fs
push
sub
push
jle
aas
daa
pop
xor
xor
mov
js
in
dec
jnp
sub
mov
xorb
ret
pop
mov
repz
jp
or
push
dec
hlt
out
arpl
sbb
mov
punpckhwd
int3
in
es
shrl
adc
enter
mov
inc
out
mov
rcrb
scas
aad
fistps
mov
outsl
flds
xchg
aad
jnp
ja
push
xor
and
and
inc
xchg
or
aaa
inc
xlat
das
icebp
aam
sar
and
fdivl
jns
add
data16
jb
xor
mov
mov
adc
xchg
imul
std
addr16
pop
jb
ret
mov
daa
lret
sub
insl
inc
dec
fistl
xchg
das
negb
push
mov
or
aam
aad
insb
mov
push
ss
sub
adc
mov
rorb
mov
add
idivl
cmp
jl
stos
mov
sbb
cmp
es
mov
lea
inc
cmp
mov
adc
incl
arpl
xor
filds
test
add
or
mov
cmp
mov
jmp
and
adc
or
mov
inc
imul
mov
xorl
jno
fwait
xor
movsl
imul
cmpsl
mov
mov
mov
in
in
sbb
sbb
and
push
mov
mov
imul
fcmovnu
inc
stos
aad
pop
xlat
or
push
adc
movsl
push
mov
gs
in
jg
and
cli
mov
pop
popf
lea
push
cmp
mov
test
notl
sbb
or
ss
fmulp
or
mov
imul
ret
or
inc
lret
push
sbb
incl
lds
fistpl
out
mov
in
pop
mov
ljmp
adc
clc
mov
pop
push
jb
cmp
add
sbb
sahf
or
and
ficompl
adc
dec
jb
sub
inc
jl
xchg
pop
pop
xchg
jb
fiaddl
push
add
bound
sub
loop
addr16
fldenv
pop
or
inc
pop
in
push
jp
mov
fnstcw
enter
adc
mov
mov
jle
push
dec
jmp
cmp
leave
ret
enter
pop
and
xor
add
sti
cli
push
bound
fildll
jnp
out
xorl
fdivrl
fdiv
in
jg
and
jg
ret
mov
fadd
push
mov
hlt
sbb
pop
adc
fldenv
roll
adc
xor
inc
out
adc
repz
inc
pop
cltd
sub
hlt
test
push
jl
dec
loope
fisttpl
gs
inc
lea
mov
fldcw
add
test
cmp
leave
cmp
xchg
sahf
out
lret
pushf
or
mov
leave
repz
gs
jecxz
mov
xor
cmpsl
shrb
mov
je
movsb
addr16
js
xchg
fistl
cmp
ljmp
aam
insl
lret
adc
xchg
mov
js
pusha
daa
sahf
cmp
aam
movsl
jl
lock
insl
loop
ja
pop
rorl
loop
shr
fadds
in
cmp
mov
pop
fwait
xchg
xor
repz
xor
sub
jecxz
aaa
dec
mov
scas
mov
ret
cmp
and
addl
call
xchg
xchg
daa
lods
out
lds
std
xor
and
lret
or
jg
in
es
add
scas
in
xchg
test
jnp
cmpsl
mov
cmp
push
xchg
xor
mov
inc
xchg
jae
lds
call
mov
mov
sbb
jmp
jb
jbe
xlat
adc
jp
xor
xlat
inc
shr
ja
pop
dec
fdivp
pusha
push
adc
xchg
sub
and
add
mov
imul
testb
add
push
cmp
leave
sub
pop
nop
cmc
cmp
jae
clc
sbb
lods
pushf
add
xorl
xchg
mov
shl
sahf
inc
mov
and
cmp
push
mov
mov
aaa
add
dec
aad
hlt
pusha
inc
fsubrl
ja
loopne
loopne
loopne
pop
adc
add
frstpm(287
add
mov
jbe
je
jg
cmp
cmc
mov
faddl
bound
in
sbb
in
fnsave
inc
cmc
jmp
imul
inc
inc
scas
popa
xor
repnz
xor
adc
sbb
rolb
inc
or
mov
pop
adc
loop
xchg
push
pop
jmp
roll
popa
mov
xchg
cmpsb
push
mov
mov
not
ret
jg
jnp
ljmp
shrb
xlat
mov
test
mov
mov
fbld
jno
push
pop
jle
and
scas
lcall
add
sub
lea
mov
or
or
inc
jg
pop
arpl
cld
imul
push
bound
cmp
adc
xchg
and
inc
pop
xor
push
in
mov
cli
xlat
jbe
or
xchg
dec
and
test
iret
movb
sbb
ss
dec
iret
sub
mov
ret
scas
cmp
cmp
jae
cmp
das
gs
add
movsb
subb
in
push
mov
shl
xor
insb
push
inc
insb
inc
add
dec
xor
fildll
mov
adc
dec
out
pop
arpl
arpl
imul
shll
xlat
dec
xrelease
add
push
icebp
adc
mov
imul
sbb
cmp
mov
mov
dec
cmpsb
jg
cmp
mov
adc
lods
testb
cwtl
inc
stc
sbb
add
negl
jp
in
cs
sbb
addr16
and
pop
jo
push
lahf
mov
in
jmp
and
out
sub
mov
das
adc
inc
push
repz
imul
inc
ljmp
push
pop
in
sub
inc
mov
sarl
mulb
lahf
jge
shr
push
dec
pusha
mov
cwtl
mov
into
mov
adc
movsb
adc
cmp
pop
xchg
mov
jb
repz
repz
rorb
and
into
jl
sbb
jae
push
jecxz
xor
cmpsb
sub
jecxz
aaa
fcoms
push
push
jp
jb
sahf
movsl
inc
test
stos
jl
hlt
jb
out
xor
aad
ljmp
cltd
and
sbb
pop
xor
pop
jae
cmp
arpl
mov
sub
shr
aaa
push
cmp
push
pop
fisttpll
adc
test
outsl
adc
add
pop
xor
lahf
test
lahf
lods
and
xor
or
or
dec
int3
and
jb
adc
nop
mov
mov
loopne
iret
lods
testl
mul
jns
ja
sbb
inc
add
lahf
aaa
cmp
movsb
sti
imul
fwait
and
xchg
jecxz
rcrb
or
in
inc
std
sbb
mov
hlt
ret
pop
dec
daa
xor
stc
ljmp
cld
pop
lcall
inc
loop
lret
cli
and
popf
adc
mov
sub
ret
dec
xlat
dec
dec
add
test
inc
lock
mov
push
jg
mov
push
pmuludq
data16
in
dec
dec
cmp
sub
scas
out
push
dec
push
sub
nop
pop
jns
in
push
mov
pop
enter
bswap
push
aaa
sbb
cmc
mov
shll
movzbl
and
sbbb
jmp
cmp
mov
pop
hlt
rcrl
imul
cmp
enter
xor
mov
pop
iret
loop
aaa
pop
mov
gs
xchg
clts
lea
jae
add
sbb
shrb
xchg
sub
adc
mov
movsb
add
adc
mov
pop
add
lea
jl
cmp
daa
fldt
lds
sbb
pushf
js
test
inc
jmp
stos
mov
stos
xchg
int3
shl
cmp
xor
stc
ret
je
pop
ror
call
jmp
xchg
imul
sar
ret
or
lock
mov
inc
hlt
xchg
jae
stos
mov
add
outsl
les
inc
fcoms
fwait
imul
ret
test
addl
mov
lahf
js
cmp
div
jne
inc
test
xchg
push
push
hlt
lret
add
loopne
cmc
gs
cmpsb
dec
dec
lds
dec
mov
imul
mov
xor
adc
arpl
lahf
es
imul
pop
lock
fidivrl
repz
nop
aaa
inc
insb
scas
imul
fs
push
mov
cmp
sti
mov
pop
adc
lea
outsl
aaa
test
adc
test
dec
sub
xchg
inc
sar
rcrl
bound
jbe
cli
sub
testb
mov
cli
add
cli
cltd
mov
in
pop
pop
xchg
inc
movsb
pop
sub
xor
int3
and
stos
adc
pop
out
dec
xor
inc
insb
mov
fs
jl
pop
push
xor
jecxz
inc
xchg
stos
lret
test
pop
movsb
loope
xchg
xchg
jp
jmp
insb
jae
fistpll
xchg
or
lods
and
sbb
std
fidivl
xor
mov
mov
mov
flds
mov
or
lahf
jge
gs
movsl
pop
addr16
push
movsb
sub
push
cmpsl
sub
and
cmpl
mov
push
mov
decb
in
cli
pushf
sub
or
xlat
je
dec
xchg
mov
jge
test
sub
testl
cmp
or
push
inc
das
aaa
mov
and
into
mov
das
jp
lcall
into
cmp
sbbb
outsl
mov
sbb
push
lret
add
js
js
pop
ja
cmp
push
push
mov
fdivs
inc
pop
lods
jae
lret
lods
xor
mov
inc
mov
fistpll
and
insb
mov
push
cltd
cmpsl
js
mov
aas
lret
jae
test
lock
xor
loope
js,pn
jno
hlt
push
push
cmp
push
daa
and
xchg
xchg
scas
and
stc
pcmpeqw
mov
pop
push
int3
sub
bound
push
loope
dec
sbb
pop
std
packsswb
test
outsl
cmp
push
daa
aad
test
or
fwait
or
test
inc
mov
or
cmpsb
rol
jb
in
xor
rcrl
and
push
rcl
sbb
sti
mov
cs
es
sub
adc
mov
pop
xorl
nop
push
mov
orb
cmp
scas
xchg
adc
in
cmp
adc
out
sub
or
ret
mov
xor
push
cmp
push
adc
fcompl
sahf
jle
clc
mov
inc
sbbb
call
aas
ljmp
lret
xchg
clc
outsl
sub
jmp
std
pop
fmull
nop
mov
and
inc
scas
iret
ljmp
mov
mov
loop
shll
outsl
sub
sub
and
mov
mov
push
mov
sahf
movsl
push
jle
outsl
and
in
pop
arpl
mov
js
pop
ss
pop
cli
pushf
mov
mov
sub
outsb
scas
push
arpl
push
dec
lret
pushf
and
inc
outsl
jle
shll
add
inc
mov
xor
inc
cmpsl
xor
xchg
daa
dec
xor
dec
inc
cmpsb
push
push
sbb
xchg
jne
add
repnz
dec
out
jnp
test
out
sbb
cmp
cld
push
orb
stos
xor
inc
shl
xchg
xchg
clc
xor
sub
sbb
cmp
pop
inc
or
loop
sbb
inc
push
filds
rcll
mov
push
mov
ds
add
dec
je
dec
push
push
and
xor
pusha
int
jo
mov
xlat
hlt
loopne
and
stos
xor
out
mov
and
inc
mov
mov
push
outsl
sbb
cmp
andl
inc
lcall
dec
imull
insl
jae
out
xchg
cmp
in
ja
xchg
pusha
adc
or
adcl
fsubs
test
pop
xor
iret
mov
leave
add
dec
repz
orb
fldenv
rcrb
test
cmpsl
dec
ret
sbb
pop
xchg
scas
stc
repnz
cmp
gs
bound
add
jp
sahf
popf
roll
sub
js
clc
jo
and
movsl
fwait
test
inc
lret
ja
sbb
fadds
push
inc
movsb
sti
imul
ficompl
sbb
xor
mov
mov
je,pn
sahf
out
sbbl
push
add
push
popa
pop
loope
dec
cmc
clc
or
jne
inc
jg
cld
test
inc
mov
divb
ljmp
push
popf
movsl
imul
loop
pop
daa
inc
dec
outsb
jmp
repz
mov
jnp
popa
push
data16
test
xor
push
in
cmc
daa
dec
ret
movsl
mov
sahf
xchg
mov
mov
cmp
pop
or
sahf
push
add
dec
push
mov
out
pop
add
rorb
sbbb
repz
push
jno
push
mov
sbb
ss
jge
dec
movsb
jp
push
scas
push
inc
cmp
je
jne
nop
rcrl
das
adc
fsub
inc
mov
xchg
push
dec
in
cvtpi2pd
push
jae
jge
outsl
cmp
inc
loopne
mov
out
adcl
stos
in
mov
xchg
cmp
lods
ds
shrl
call
or
cld
cmp
pop
mov
decl
mov
sub
xchg
lahf
addr16
jp
sbb
jecxz
addb
push
stos
pop
inc
cwtl
and
jecxz
fnstcw
test
jns
cmpsb
dec
outsl
inc
xchg
ja
mov
adc
pop
mov
lds
stos
cmpsl
fsubrs
cmpsb
inc
aad
push
int
and
icebp
xchg
aad
jae
sbb
rcr
cmc
test
stc
stos
adc
push
adc
jmp
dec
daa
xchg
rolb
inc
enter
lds
repz
jb
jbe
push
jns
aaa
or
fstl
call
sar
cmp
lods
aas
movsb
dec
push
repz
ror
pop
fwait
lahf
inc
and
outsb
mov
clc
call
in
mov
push
pop
sbb
stos
sbb
sub
lods
hlt
cmp
pop
push
lea
xchg
nop
sub
test
mov
shrl
inc
jne
mov
es
scas
aas
cmp
mov
add
push
dec
mov
xchg
or
mov
das
dec
sub
jp
adc
rol
test
loopne
pushf
mov
lods
mov
and
ror
aas
aad
les
lods
sbb
or
movsb
or
xchg
push
mov
jle
push
mov
xchg
movsb
stc
inc
mov
in
pop
mov
pop
inc
cwtl
lret
orl
mov
outsb
faddl
mov
stos
inc
sahf
add
fmuls
adcb
lret
sahf
pop
jne
adc
mov
icebp
sbb
or
cwtl
mov
mov
mov
pop
mov
adc
shrl
and
adc
push
fldenv
dec
xchg
sbb
mov
fmul
mov
outsl
inc
xor
shr
xchg
dec
fisubs
inc
and
or
mov
push
mov
jle
into
lret
insl
sub
or
gs
in
push
cmp
sub
add
adc
lret
mov
stos
and
sbb
aaa
adc
mov
faddl
mov
cwtl
sub
xchg
mov
stos
test
ds
mov
bnd
ja
push
sbb
inc
jns
divb
hlt
inc
fisubs
jns
push
fs
inc
jecxz
outsl
xchg
jg
bound
int3
lcall
jmp
sub
sti
mov
add
lea
push
add
std
inc
enter
mov
cmp
or
outsb
or
ret
psubw
adcb
shlb
sbb
pop
jecxz
outsb
jns
pop
jmp
mov
mov
push
sbb
insl
aad
call
mov
ss
std
orl
cli
and
xchg
fdivrs
pop
sahf
sbb
repnz
add
std
icebp
jnp
in
mov
xor
fucomi
fs
shl
push
test
jmp
addr16
lea
lret
addr16
lock
int3
xchg
scas
xor
pop
xor
shlb
dec
push
xrelease
cmpsl
incb
aaa
or
lods
and
in
testw
and
daa
jge
adc
and
push
push
sbb
loop
jno
sub
leave
or
repnz
mov
in
adc
rcll
insb
mov
xchg
pop
pop
ficompl
push
or
add
scas
faddl
mov
mov
out
pop
mov
jns
std
jp
dec
rcll
movsl
mov
jnp
shll
jb
cmpsl
ja
jns
out
lret
xor
lea
cwtl
das
scas
mov
sub
adcl
adc
mov
or
lcall
and
add
cld
xchg
jecxz
jno
ds
fsubrs
or
mov
ja
mov
pop
loop
cltd
leave
pop
scas
imul
in
sub
add
adc
aad
sahf
xor
inc
jp
cmp
sti
push
dec
test
mov
lcall
dec
inc
jl
xchg
sbb
inc
mov
jns
stos
adcb
and
sub
sub
and
pop
fstpt
cmp
pop
lods
stc
mov
aam
jbe
sarl
jp
fwait
das
and
int3
sbb
inc
xor
adc
or
cmpsb
ljmp
dec
xchg
sti
iret
ss
imul
loopne
fwait
mov
push
cmp
sbb
inc
stc
fldt
fcom
sub
fmul
mov
or
daa
jle
sbb
enter
popa
and
cmp
mov
dec
dec
push
das
ss
cmp
and
call
outsl
movsl
test
test
or
dec
test
mov
fadd
jmp
imull
push
add
iret
fsubp
xor
pop
jle
test
mov
outsl
cmpsl
adc
out
out
inc
pop
pop
adc
hlt
cmp
and
jb
insl
sub
jbe
sub
adc
call
leave
dec
mov
ret
xchg
mov
jae
lahf
out
dec
stos
or
arpl
scas
loopne
aad
mov
mov
xchg
std
lret
lock
outsl
cwtl
xchg
xchg
dec
add
sahf
pop
mov
loopne
in
xor
ss
ljmp
clc
jno
inc
clc
cltd
lods
add
xchg
sub
movsl
in
sub
popf
and
addr16
add
lock
ret
sti
repz
out
mov
and
fs
fdivl
call
sti
insb
je
and
ja
mov
add
pop
sub
and
adc
mov
pop
scas
xchg
lcall
les
sub
lcall
push
adc
imul
in
sbb
add
out
add
shrl
cltd
jle
pop
or
cmp
or
fs
push
sti
nop
lods
dec
mov
fnstenv
popa
push
mov
hlt
push
mov
aad
fs
mov
xchg
mov
and
push
cltd
jg
lds
aam
lret
clc
dec
push
test
lcallw
pop
aam
rclb
adc
lret
lds
xchg
lret
divl
divl
cmp
icebp
into
push
xchg
dec
push
or
jb
xor
ud1
dec
leave
cmp
test
je
inc
inc
test
push
leave
inc
lds
sbb
dec
cmc
rcrb
aas
adc
xchg
fcomps
cltd
xor
sahf
rcll
insl
cld
mov
push
and
loop
addr16
test
and
push
xor
mov
or
mov
cmp
ror
jp
ret
cmp
fisubrl
shll
push
leave
jne
or
test
dec
inc
cmc
in
subl
rcrb
xor
aaa
scas
jge
mov
dec
stos
adc
fsubrl
cld
push
mov
shrl
flds
and
hlt
pop
test
bound
cmpl
adc
lds
xchg
jmp
je
pop
pusha
lret
inc
enter
or
mov
mov
nop
xchg
push
mov
or
cmp
stc
in
mov
ficoms
daa
mov
xchg
int3
repz
data16
fcmovnb
int3
cmp
test
add
test
xchg
fwait
divb
popf
or
cmp
pop
iret
movsl
lods
lods
and
inc
xchg
jle
fbstp
lret
or
cmp
dec
ds
rolb
cs
mov
pop
ret
cmp
dec
or
orb
sbb
dec
push
mov
xchg
mov
lds
adc
jmp
pop
push
add
cltd
push
mov
mov
xchg
mov
cmc
mul
mov
in
jns
jmp
leave
icebp
lret
push
fbld
mov
sbb
aaa
mov
fidivrs
repnz
pop
outsl
arpl
in
iret
cmc
out
ss
cltd
cmp
dec
sbb
mov
cmp
xchg
xor
xchg
cld
pop
adc
mov
stos
jae
fisubs
xor
mov
in
les
aad
xor
or
sahf
cmp
orl
mov
jp
mov
lcall
ja
push
gs
and
test
sub
mov
jb
fmul
push
clc
movb
movsl
xor
mov
dec
cmp
xor
inc
mov
fidivrs
dec
pop
lcall
xchg
mov
aam
pop
xlat
mov
adc
repnz
adc
enter
sarb
fsubrl
pop
lahf
xchg
stos
mov
dec
push
mov
int
mov
outsb
dec
inc
xor
insl
sub
xor
sbbl
xor
inc
push
mov
push
cmp
subb
cmp
out
sub
dec
xor
ret
popf
ds
test
fs
enter
sub
mov
scas
sbb
jp
sbb
mov
mov
insb
dec
fs
cmp
clc
mov
add
lods
push
push
mov
ljmp
or
push
add
or
adc
mov
pop
push
loope
imul
and
jbe
mov
out
dec
and
in
test
inc
sbb
fscale
fwait
add
jmp
pop
mov
jo
sbb
push
rol
or
add
mov
dec
int
inc
add
xchg
out
orl
cmp
xor
lret
cmp
ror
pop
clc
push
xlat
imul
test
shlb
xchg
push
jl
push
sbb
push
negb
addl
std
and
inc
dec
notb
pop
lock
cmpsl
bound
pop
loopne
orb
les
lock
movzwl
lock
dec
pop
lods
push
out
lods
fs
mov
fwait
leave
call
jmp
jmp
loope
inc
pop
push
jmp
and
ja
push
outsl
lea
and
test
jne
stos
xor
inc
stos
mov
jnp
shrl
jae
test
sbb
shl
lock
repnz
jbe
imul
mov
and
fcoml
lret
inc
or
or
divb
and
dec
xchg
sahf
orl
sbb
repz
clc
test
stc
mov
mov
pop
das
ret
pop
adc
ret
or
push
mul
add
pop
sbb
fs
xchg
pop
mov
je
xor
sbb
cmp
add
ljmp
inc
cmp
pusha
mov
mov
bound
adc
std
imul
cmp
imul
push
lods
add
push
and
add
fstpl
jl
push
dec
es
leave
popf
inc
mov
scas
cmp
sti
mov
adc
cmp
hlt
js
jmp
clc
mov
aaa
outsl
jno
sbb
xor
jb
int
push
lret
mov
add
cmp
mov
xor
xchg
cs
hlt
mov
arpl
dec
sbb
inc
cmp
xor
cld
iret
sub
fsubp
adc
sub
adc
shlb
sub
jae
mov
sbb
xchg
sarl
mov
out
scas
cwtl
sti
inc
clc
sti
jmp
inc
daa
enter
xor
cmc
inc
dec
lods
xor
and
ret
push
cmp
add
xor
dec
fwait
sub
data16
mov
rorl
cmp
pop
mov
xchg
push
gs
push
add
addl
dec
jne
push
cld
cmp
jge
mov
mov
mov
mov
or
sar
jl
out
adc
sbbb
xor
jl
mov
push
ss
add
sub
loop
push
sub
les
test
stos
cwtl
aas
mov
testb
loop
mov
mov
sub
push
js
subl
xchg
lret
pop
inc
add
loop
outsl
mov
xchg
cld
jns
push
into
jg
test
ljmp
sbb
js
sbb
mov
mov
mov
mov
movsb
adc
fwait
mov
lock
mov
jo
popa
daa
ss
ret
test
add
sbb
arpl
test
outsl
test
cwtl
int
push
xchg
scas
addr16
add
xlat
sub
ret
ljmpw
jnp
insb
pop
shrb
jg
int3
fwait
jl
shlb
mov
mov
sbb
test
jecxz
sbb
test
xchg
fwait
mov
cmp
adc
aaa
aas
das
pop
sarb
ja
popf
xor
scas
mov
sbb
dec
mov
scas
loop
dec
stos
inc
mov
es
shrb
adc
xchg
pop
push
or
test
and
test
cs
jl
fldenv
and
out
sbb
pop
fiadds
xchg
loopne
ret
lods
xchg
sub
pushf
popf
lock
call
fbld
js
pusha
loop
lds
add
cltd
cmp
out
adc
movb
cli
mov
fdivl
sbb
dec
ret
shl
addr16
xchg
xchg
fstpt
pop
out
jecxz
out
mov
scas
ja
repnz
hlt
imul
jae
bound
mov
jne
jb
cmp
std
addr16
mov
dec
lret
lods
subb
test
ds
jl
int3
dec
les
vmovntdq
jo
xchg
dec
repz
xor
filds
add
mov
aas
addr16
in
mov
xchg
aam
scas
inc
outsl
inc
stc
in
ret
sbbb
arpl
push
mov
xchg
test
adc
mov
js
lock
jecxz
mov
aad
int3
out
out
stos
addr16
jno
sbb
pusha
ret
arpl
cld
int3
out
popf
sti
shrl
xchg
and
sub
scas
dec
scas
clc
ja
cmp
inc
arpl
pop
jge
outsb
adc
mov
push
jae
mov
lea
jnp
loope
sub
jmp
les
sbb
pop
add
xchg
shl
adc
xchg
fidivl
inc
insb
test
jmp
mov
push
in
push
xchg
xor
lods
push
in
fisttps
mov
loopne
pushf
mov
cmp
ret
mov
shlb
test
mov
sbb
fwait
mov
vmovntdq
addb
jp
add
loope
in
stc
out
int3
gs
jecxz
jns
repnz
and
aad
pop
adc
inc
inc
pop
aad
mov
movsl
mov
cmp
xchg
mov
insl
dec
mov
jo
mov
scas
inc
stos
call
fsubl
jg
jae
ja
inc
mov
jg
xor
scas
mov
les
iret
nop
cmc
or
dec
mov
testl
test
lret
mov
jnp
mov
push
mov
fprem
inc
mov
and
cs
aaa
and
rolb
pushf
lret
ret
xor
out
stc
insl
jecxz
fmul
jge
in
pushf
mov
outsb
xchg
xchg
sbb
fnsave
xchg
roll
outsl
movsb
mov
fisttpl
cmp
pop
mov
stc
xchg
imul
xchg
mov
sub
aaa
sbb
addl
mov
adc
jnp
outsl
pop
add
or
fmulp
out
xor
xchg
dec
sub
mov
arpl
sub
push
jnp
or
movsb
jge
xchg
mov
push
insb
cmp
mov
sub
ret
adc
std
and
push
inc
imul
xchg
xchg
outsl
adc
inc
mov
mov
pop
or
sahf
sub
pop
and
lods
sti
and
or
add
movsb
cmc
dec
mov
scas
hlt
xor
sbb
clc
and
negb
shrb
dec
adc
outsl
push
jb
dec
popf
sbb
js
push
cmp
sub
push
insl
sbb
test
jo
adc
hlt
cmp
testb
and
add
xchg
aaa
jo
dec
pop
in
push
incl
dec
cmp
mov
sahf
sub
popa
pushf
inc
pop
pop
adc
and
jne
cmp
push
insb
lea
jl
push
inc
xchg
jne
test
in
push
cmp
loop
dec
notl
sub
cli
outsl
movsb
sub
test
cmp
out
pushl
push
shlb
mov
push
sub
and
ja
sti
imulb
mov
outsb
nop
xorb
outsl
and
fdivp
sub
jae
mov
fs
test
adc
rcrb
mov
xchg
out
iret
cltd
repz
das
xlat
push
jns
repz
cs
xchg
adc
cmpsb
loop
lea
shl
mov
stos
dec
cld
xchg
out
mov
or
cmp
pop
jp
icebp
outsl
shrb
inc
push
pusha
push
push
enter
je
stos
inc
jae
addr16
push
iret
in
pop
sub
out
push
pop
cmp
jno
in
push
ret
pop
pop
imul
fsubrl
and
daa
push
inc
stc
sub
fwait
add
pop
push
aas
je
arpl
js
pop
lods
cmp
sub
outsl
divb
xchg
cmp
sub
cld
loope
dec
pop
cmp
xchg
push
cmpl
inc
mov
add
pop
loopne
scas
pop
imul
ficompl
xchg
xor
in
imul
xor
das
cmp
cwtl
inc
stos
insb
test
fabs
mov
push
inc
mov
sub
cmp
push
mov
or
pop
or
and
out
enter
jl
dec
stos
or
push
rsm
adc
and
or
jno
shl
jno
mov
adc
mov
xchg
fiaddl
jo
xchg
lret
es
imul
nop
int
js
xlat
jne
ljmp
xchg
std
cmp
or
sub
or
incb
enter
leave
pop
mov
cwtl
fcmovne
push
inc
sbb
sub
pop
outsb
into
or
mov
jae
orl
xor
es
notl
inc
inc
call
jb
je
push
push
mov
in
xchg
loopne
sub
scas
cmpsb
cmpsb
nop
gs
test
dec
mov
dec
loope
in
pop
push
fst
mov
dec
inc
orl
adc
setns
xor
loop
xor
pop
and
xchg
dec
bound
das
loope
add
adc
inc
dec
cmc
mov
cmp
and
mov
push
fidivl
jnp
add
pushf
mov
or
jmp
mov
cs
popf
iret
dec
and
add
insb
jge
adc
aas
xor
in
std
cwtl
sarb
push
out
sbb
xchg
add
outsl
test
sbb
jp
imul
pop
stos
test
pop
adc
adc
add
jmp
jae
iret
addr16
add
es
xchg
sub
test
movsl
mov
dec
mov
mov
inc
pop
pushf
or
jb
cmovae
mov
mov
out
xor
mov
movsb
int
sub
dec
icebp
fucomp
imul
push
dec
pop
push
pop
xchg
jl
adc
jne
out
int
js
sub
inc
xor
test
out
adc
fs
xchg
das
adc
pop
mov
and
inc
xchg
mov
jno
add
xor
mov
lret
call
sub
out
mov
or
mov
mov
dec
int
aam
mov
pop
and
mov
or
pop
adc
mov
repz
aam
shll
mov
mov
rcl
fwait
push
icebp
xchg
es
push
psadbw
daa
xchg
add
sbb
mull
jno
add
loop
fstps
mov
jns
je
in
test
add
bound
xor
movsb
out
sarl
pop
pop
mov
mov
mov
push
leave
scas
mov
jne
mov
fbstp
fimull
rcll
scas
into
sub
movsl
add
nop
fildl
scas
jne
sbb
push
pushf
fdivrs
push
ja
inc
inc
sbb
xor
pusha
ret
out
paddsb
movsb
loopne
sahf
roll
popa
rorb
xchg
lods
sbb
pop
mov
jecxz
jl
jge
roll
clc
daa
scas
sti
sub
repz
mov
je
gs
movsb
addr16
or
push
fiaddl
out
test
arpl
pusha
inc
inc
adc
xor
jge
imul
jg
bound
pop
mov
fcmovne
pmuludq
repnz
rcrl
and
add
movsl
cmc
repz
and
add
sub
sbb
dec
mov
push
add
addr16
or
pop
nop
lahf
xchg
pop
fwait
pop
mov
sahf
or
cmp
shl
enter
lahf
pop
ficomps
scas
ss
movsb
cltd
jge
idiv
mov
xchg
xchg
lret
xor
pop
xor
mov
test
imul
inc
inc
mov
orb
sbb
das
jno
mov
jmp
pop
int3
cltd
hlt
call
cli
repz
xchg
decl
mov
mov
in
movsl
jmp
fcomps
and
in
cwtl
fnstsw
mov
add
push
jne
dec
test
je
jmp
faddp
add
adc
add
test
jb
lret
out
dec
and
dec
call
inc
push
jns
in
scas
push
aaa
in
jge
fadd
cmp
push
xor
mov
ja
icebp
mov
xchg
aad
lods
pop
pop
sbb
xchg
lahf
add
mov
test
imul
arpl
das
adc
jl
movsb
jecxz
lods
outsb
out
pusha
mov
pop
sbbb
jecxz
cmp
push
or
negl
push
int
mov
orl
cmpsl
inc
outsb
add
test
std
jp
inc
xchg
xor
mov
sahf
pusha
enter
in
cmc
rorb
gs
cmc
mov
cmpsb
scas
cmp
lods
sbb
imul
push
or
out
mov
mov
nop
les
fsubr
xor
aas
lretw
pop
fidivs
movsl
push
push
lret
test
xchg
inc
mov
push
loop
sub
xor
repz
mov
fcoml
lret
cmp
arpl
idivb
in
jo
decb
inc
pop
dec
or
sbb
sub
mov
xchg
jmp
mov
sub
hlt
sub
lcall
iret
call
hlt
push
mov
dec
adc
iret
mov
out
push
mov
pusha
in
pop
daa
jge
mov
sbb
icebp
mov
mov
inc
out
mov
nop
aaa
xor
xor
fcomip
xabort
lds
rcrl
push
mov
in
ss
arpl
insb
hlt
jno
lea
or
aaa
mov
fists
mov
ljmp
stc
ja
cmp
lea
lods
jmp
adc
jmp
repnz
fwait
mov
pusha
lret
pop
call
outsb
sub
rorb
ja
icebp
dec
add
test
cmp
aam
je
add
mov
lcall
cli
sbbb
add
fs
andl
add
popa
jno
mov
mov
aam
lret
daa
mov
out
jmp
cmp
jnp
cmpl
inc
xchg
test
iret
sbb
shlb
aaa
xchg
add
add
aad
out
lds
sub
scas
outsb
sub
lds
ss
cltd
xchg
ljmp
stc
sub
inc
in
sbb
push
dec
mul
xchg
push
and
lsl
push
imul
push
cli
rcrb
xor
fsubl
pop
jl
mov
stos
cmp
bound
mov
ds
std
stos
cmp
mov
addr16
sar
adc
inc
push
xor
mov
shll
or
inc
ret
mov
sub
das
ds
fisttpll
cli
dec
adc
xchg
pop
pop
xor
push
pop
mov
mov
mulb
movsb
mov
add
das
scas
xchg
ja
cwtl
dec
and
push
pop
or
pop
lret
mov
cmp
inc
repz
push
outsb
ret
or
call
mov
lods
outsb
sbb
sub
fdivr
sti
or
jne
pop
into
xor
pop
stos
test
clc
xchg
dec
lea
cmpsl
dec
fwait
and
cmp
inc
xchg
int3
xchg
aas
push
test
rorl
or
sbbb
sbb
mov
ret
and
fbstp
fnstcw
dec
addr16
cmp
ror
iret
xchg
test
das
popa
pop
jl
nop
dec
pop
orl
or
fistps
cmp
push
mov
pop
pop
ss
inc
xor
adc
xchg
pop
test
sahf
sub
jbe
clc
sahf
scas
mov
sbb
pop
leave
cmp
cmpsb
pusha
fimull
dec
sub
leave
mov
mov
and
out
sbb
test
clc
in
pop
lods
pushf
aas
adc
add
pop
mov
test
inc
sub
jns
insb
inc
adc
leave
lcall
pop
or
shl
dec
jmp
rorl
filds
fs
subl
dec
negb
inc
lcall
dec
cli
out
jno
loope
test
jb
add
ret
sbb
addb
xchg
mov
nop
out
int3
cmp
pop
and
jb
out
pop
pop
pop
mov
stos
enter
ljmp
ja
dec
arpl
repnz
mov
lock
fwait
into
xchg
xor
adc
int
movsb
mov
dec
sbb
mov
mov
cmp
aaa
inc
pop
add
push
jb
ret
adc
dec
cld
pusha
test
push
repz
scas
mov
fst
push
cmp
fs
inc
push
sbb
pop
ret
mov
aas
push
cmp
je
push
inc
sbbb
repnz
rorb
loop
mov
leave
js
sbb
push
daa
mov
stc
ret
jne
xlat
in
xchg
xor
jbe
in
jns
xlat
dec
cltd
aam
jbe
shll
pop
popf
add
movsl
aam
gs
mov
xchg
mov
pop
xor
mov
pop
adc
jbe
jge
jbe
mov
xchg
inc
nop
dec
out
push
push
test
pop
ja
mov
test
lods
dec
or
push
pop
sbb
cmc
fnstsw
ljmp
cmp
movsb
lcall
shrl
in
ja
gs
fsubrl
xchg
loope
fadd
imul
mov
loop
fs
sub
mov
push
fucomi
stos
xchg
adc
iret
push
lret
jnp
aas
or
ljmp
pusha
jecxz
lods
and
cmpsb
addr16
test
cmpsl
fldcw
les
dec
andb
sbb
mov
mov
jae
mov
push
add
dec
aad
mov
stos
mov
jne
insb
hlt
jmp
lret
or
jle
pop
leave
in
add
jmp
mov
not
mov
addr16
stc
shlb
test
inc
push
lods
scas
adc
xchg
fisttpll
aaa
sbb
out
arpl
enter
clc
jmp
andl
mov
mov
sbb
aad
pushf
xchg
push
mov
xor
adcl
pop
test
stos
dec
cmpsb
mov
push
xchg
daa
fwait
jmp
jl
pop
aas
mov
cltd
push
or
loopne
das
xchg
push
cmpsb
inc
data16
inc
div
decb
mov
enter
sub
shrb
pop
das
xchg
push
rcrl
mov
cmpsb
xor
add
mov
jno
mov
std
leave
cmp
inc
insl
jl
clc
sbb
stc
pop
jmp
and
inc
rcrl
shr
lods
cmp
cmpsb
add
push
movsb
add
sbb
push
xchg
ja
fsub
inc
repnz
sub
fadd
iret
in
jno
out
popf
sbb
mov
dec
and
punpckhdq
insl
idiv
pop
cld
lea
dec
into
push
push
and
sbb
adc
call
xchg
in
jo
mov
pop
jmp
mov
repz
add
add
out
lods
add
icebp
repz
daa
fildl
mov
movsl
in
sbb
ss
jo
mov
aam
mov
sbb
mov
lods
cmpsb
pmaxsw
int3
xchg
adc
mov
push
rorl
jecxz
call
xchg
pop
mov
mov
fbstp
push
inc
jo
push
pusha
mov
xor
fs
xor
fmulp
or
xchg
dec
cld
xchg
inc
xlat
adc
or
pop
data16
mov
loopne
ss
test
sub
popf
cmpsl
dec
inc
cld
sbb
pop
pop
jp
fnstenv
jns
cmp
jle
xchg
cwtl
lods
or
xor
lods
icebp
jecxz
fidivl
inc
shll
ficoml
fstl
sub
outsb
cmp
je
mov
lcall
mov
push
aad
xlat
mov
inc
nop
rep
mov
dec
dec
fdiv
andl
jb
in
push
imulb
sbb
mov
mov
lcall
push
xor
xchg
idivb
and
imul
ss
insb
fisubrs
mov
data16
fildl
in
push
outsl
xor
jnp
fadds
mov
dec
fstps
xchg
mov
push
and
lret
pop
adc
dec
inc
push
inc
std
aad
jl
add
mov
push
push
or
xchg
mov
pop
or
mov
scas
bound
fwait
ljmp
inc
repnz
push
pushf
addr16
adc
xor
mov
stos
mov
mov
xchg
or
pop
insl
pop
jns
fstpt
dec
stc
jmp
rcll
sbb
mov
xor
cmpsb
sbb
insl
fdivr
and
dec
sbbb
call
loop
mov
inc
scas
ret
sbb
sub
or
sbb
int3
or
push
ja
xor
stc
dec
fwait
lcall
pop
imul
out
mov
lea
imul
sbb
loope
mov
es
push
lods
notb
les
jp
lea
in
aad
test
inc
or
call
or
cmc
out
mov
fnstsw
fistl
stos
dec
jns
std
fldl
pushf
xlat
mov
xchg
testl
into
push
test
add
adcl
adc
lds
or
or
dec
test
lea
inc
xchg
cmp
lock
aam
pop
adc
xchg
lahf
addl
pop
outsb
mov
xor
movsb
xchg
adc
and
push
add
jno
mov
sbb
mov
xchg
inc
jb
jb
stc
pushf
mov
testl
arpl
or
lret
or
fs
mov
push
imul
add
xor
ds
push
addr16
xchg
lret
insl
jle
cmp
push
adc
add
dec
test
pop
or
repnz
jp
push
jnp
sbb
xchg
sbb
xchg
sub
xchg
or
inc
test
and
push
mov
test
inc
mov
stos
fbld
fwait
inc
jle
adc
jg
or
lds
int3
pushf
push
outsl
orl
out
fwait
in
sbb
jo
in
mov
das
outsl
dec
inc
jo
addr16
dec
mov
cmp
xor
insb
sub
loopne
fwait
and
imul
mov
push
sahf
pop
lcall
lock
mov
add
fidivs
into
push
push
jmp
mov
aas
mov
mov
push
xor
cmp
ss
mov
out
inc
jbe
out
int3
and
adc
cmp
shlb
xchg
cs
jno
mov
or
js
ror
pop
sahf
bound
inc
fmull
nop
mov
lods
les
or
andb
xor
push
push
rcrb
jp
push
inc
or
test
fucomi
movsl
add
jp
add
sub
add
int
adc
scas
fwait
push
push
lods
xlat
in
adc
xlat
imul
loope
jnp
sub
xor
shll
mov
mov
mov
dec
and
fwait
push
out
inc
test
adc
push
xor
dec
scas
jns
sub
or
in
lds
mov
xchg
sbb
or
stos
test
mov
mov
lret
loope
fcoms
imul
mov
test
inc
jae
fs
cmp
mov
incl
push
xor
or
cmpsb
lret
stc
sub
icebp
neg
out
sbb
pop
sbb
adc
xor
leave
xchg
enter
mov
js
bound
sahf
pop
xchg
or
push
mov
dec
sub
add
xor
sub
dec
andl
je
adc
and
sti
pop
loop
enter
mov
mov
into
or
or
fmuls
imul
popa
fs
sarl
lea
shr
adc
test
pop
push
xchg
xor
mov
xor
std
cmpsb
in
mov
jp
push
cld
jb
jo
jge
mov
lea
sbb
es
dec
sti
lahf
adc
fwait
push
enter
iret
cmp
in
xor
jae
fidivs
sarl
loope
out
lods
adc
or
or
pop
push
inc
lods
ror
xchg
mov
pop
adc
into
mov
in
inc
sbb
push
dec
loope
pop
enter
scas
mov
sti
out
popa
pusha
xor
imul
das
pop
ret
mov
xor
cmp
scas
push
cmp
dec
int
lea
insb
icebp
sahf
aaa
lret
pop
push
push
jno
adcl
cmp
mov
cmpsl
and
xor
test
fldcw
or
mov
sub
cmpsl
add
xchg
mov
jp
xchg
ja
xchg
test
pop
loope
aaa
jmp
arpl
xchg
fptan
inc
xchg
scas
loopne
and
add
jg
iret
aas
addb
dec
adc
negb
sbbb
popa
jmp
rcll
call
scas
leave
ja
leave
std
scas
mov
cmpsb
push
mov
lods
xchg
xchg
fsts
mov
or
push
push
lock
sub
pushf
mov
cmc
rolb
jp
cmp
or
and
out
mov
mov
xor
aad
out
test
mov
fs
and
jne
mov
mov
arpl
add
dec
es
rolb
xchg
cmp
insb
and
add
dec
dec
in
icebp
cmp
cmpsl
cmp
adc
cld
sub
and
popa
sbb
gs
mov
sbb
stc
xchg
mov
sub
and
jnp
dec
cmp
xor
jle
xchg
arpl
popf
mov
rcr
icebp
fcmovne
orl
and
rcll
mov
mov
inc
in
cmc
stc
jno
loop
inc
fwait
mov
andl
pop
push
sbb
mov
sub
cmp
es
xchg
jno
rclb
rclb
dec
test
aam
pushf
test
test
inc
push
lods
add
dec
test
jmp
xchg
xorb
cmp
add
adc
in
jmp
add
inc
or
sbb
shlb
mov
xlat
jl
mov
sbb
dec
cmpsb
fwait
dec
lods
in
push
lea
mov
rorb
repnz
mov
mov
sarb
xchg
into
dec
adc
aad
lods
mov
jl
aam
inc
out
xchg
xor
and
add
inc
inc
imul
ret
sbb
movsl
and
xor
dec
inc
lods
loope
rclb
mov
mov
adc
adc
loop
mov
adc
out
sub
xor
push
in
and
add
mov
insb
int
insb
les
xor
mov
xchg
cmp
inc
into
lahf
xchg
sub
mov
jb
sbb
jnp
push
lock
sbbb
and
mov
sbb
xchg
add
sti
push
pop
dec
and
test
test
adc
fldenv
pop
mov
les
loopne
xchg
dec
mov
xor
jg
and
enter
int
dec
testb
dec
jle
mov
fisubrs
pop
icebp
mov
fdiv
outsb
push
push
rep
add
addb
inc
jle
push
adc
jg
aaa
xchg
aas
scas
je
xchg
push
cld
in
out
cltd
out
pop
push
add
ficomps
loopne
cmc
cltd
sbb
pusha
jo
inc
dec
jb
cmp
ds
fs
mov
and
xor
and
leave
add
pop
mov
push
inc
mul
stc
dec
ds
sub
test
addl
andb
data16
lret
push
xchg
adc
call
sub
jl
rcrl
inc
sbb
mov
hlt
cmpsl
leave
xchg
popf
inc
mov
mov
pop
xchg
mull
icebp
mov
adc
sub
jl
lods
stos
dec
mov
subb
mov
cmp
out
jle
shl
mov
sub
sub
fbstp
sub
inc
sub
push
aas
sti
enter
add
int
xor
test
hlt
mov
das
cmp
push
pop
mov
and
out
push
outsb
bnd
push
push
mov
and
jmp
mov
cmp
leave
addl
adc
xchg
iret
or
icebp
push
sub
xor
pop
divl
mov
test
push
int
mov
rcrl
xor
popf
sub
xchg
adc
mov
push
mov
fstpl
fcoml
dec
sbb
jae
cmpsb
stos
leave
mov
jle
lock
loopne
movzbl
icebp
imul
test
xchg
int3
fstpl
mov
mov
loopne
andb
sbb
popf
pop
test
shlb
bound
xchg
fucomi
jecxz
push
sbb
loopne
popa
mov
repz
das
sub
loopne
dec
out
aad
inc
loope
mov
xchg
lock
sbb
mov
push
sbb
das
jno
cs
mov
mov
cmp
ret
pop
add
out
lahf
mov
xor
sub
mov
xchg
push
mov
fistps
sub
lcall
pusha
pushf
or
cmp
ss
sbb
jecxz
mov
xor
pushf
shrl
xlat
mov
xor
and
popf
stos
outsl
hlt
jo
fcomps
lods
insl
lds
mov
inc
sbb
test
pop
stos
sti
rcrl
xor
repnz
pop
daa
scas
bound
add
sub
imul
insl
inc
pop
aam
mov
dec
imul
arpl
dec
lret
shll
icebp
sub
dec
push
xchg
sti
adc
jp
inc
test
sub
mov
fildl
in
sub
sub
push
neg
shll
sarl
pusha
xchg
jne
inc
adc
xor
push
push
push
mov
pop
fdivrp
outsb
mov
or
loope
mov
arpl
mov
mov
ljmp
dec
test
cmpsl
mov
mov
inc
rcrb
mov
jp
outsb
push
mov
cld
arpl
pop
js
xchg
pop
add
pop
shl
fdivr
popf
jnp
adc
push
js
xchg
mov
mov
call
out
movsb
pop
lds
jecxz
xor
or
rcll
stos
repnz
cmp
and
mov
sti
add
sub
and
movsb
cmc
nop
jp
addl
fadds
ret
iret
mov
sub
sub
push
notb
pop
push
add
incb
pusha
jp
fs
cltd
mov
out
divl
hlt
cmp
test
ds
jns
mov
cmpsl
xchg
sbb
mov
or
out
pop
and
mov
add
mov
aaa
mov
push
push
hlt
adc
out
in
push
pop
mov
fcmovbe
pop
data16
lahf
lret
inc
sbb
data16
mov
mov
test
xchg
imulb
sub
mov
mov
cmp
or
inc
and
scas
xor
pop
sbb
aad
cmp
xchg
lock
xor
and
icebp
or
lds
addl
dec
sub
push
xor
sub
push
mov
inc
andb
cli
mov
lock
mov
sub
loope
enter
shrl
cmpb
push
mov
and
or
mov
pop
mov
and
mov
sub
mov
popf
mov
mov
pop
sub
jae
mov
cmpsl
and
in
stos
xor
inc
adc
cli
cli
jp
fidivrs
js
std
popf
popa
jno
das
fsub
in
aam
jmp
cs
ret
add
mov
imul
lahf
ret
ss
lret
lret
imul
sub
inc
or
or
adc
jbe
lret
ds
rcl
lcall
fstps
pushf
aas
push
rcl
dec
push
outsb
scas
rcl
subb
xchg
ja
je
into
sbb
adc
sub
jecxz
lret
push
fists
rol
call
push
push
inc
sub
add
jo
jecxz
loop
or
push
call
mov
mov
jp
ror
jae
jne
sti
int3
popf
leave
lret
ljmp
fwait
add
add
xorl
mov
imull
inc
repz
bound
cmp
cld
in
movups
inc
adc
sbb
shlb
popa
movsb
fsubrs
clc
dec
or
sub
adcl
arpl
pop
scas
out
dec
xchg
mov
aaa
aam
jne
mov
mov
xor
dec
lcall
addr16
push
xchg
test
lods
sub
pop
in
jmp
int
sub
cmp
mov
fiadds
add
push
hlt
or
ljmp
push
daa
cs
imul
jecxz
rol
movsl
cld
or
pop
dec
push
out
sbbl
xor
xchg
in
fdivs
arpl
sub
or
mov
push
ds
lock
in
imul
dec
add
int
sub
push
push
inc
enter
shll
push
lcall
lret
data16
mov
adc
popa
repz
adc
leave
jmp
jle
lret
lcall
pusha
adc
cmp
flds
cmp
push
test
dec
cmpsl
cmp
frstor
les
xor
jb
out
sbbb
and
mov
xchg
xor
and
and
jae
push
jecxz
std
inc
loopne
roll
mov
in
xchg
or
dec
add
test
jnp
pop
xchg
xchg
imul
cli
mov
bnd
jg
jo
lret
mov
cmp
add
scas
popa
xchg
jne
int3
sub
fmull
add
neg
rorl
in
inc
pop
lea
push
addr16
sub
out
push
pusha
fcom
or
mov
jns
test
icebp
xor
lret
enter
cs
mov
jle
or
mov
jo
je
mov
sub
scas
jno
jp
cmp
sbb
inc
ljmp
sahf
es
fstps
fstl
mov
or
xchg
insb
or
and
cmp
ss
mov
repnz
lahf
fcomi
jge
or
stc
ret
mov
mov
ja
push
adc
das
dec
and
mov
xchg
mov
inc
lods
cmpxchg
repz
lds
repnz
push
mov
rorb
or
cmp
insl
or
jns
stos
iret
xlat
adc
mov
ljmp
xor
fs
pop
leave
out
stos
xchg
mov
leave
mov
jp
sub
rorb
adc
sarl
push
ss
mov
sub
lahf
and
pop
in
jmp
dec
lret
dec
mov
or
mov
ss
inc
adc
xchg
adc
cltd
out
xchg
and
or
lods
cs
push
in
jmp
inc
inc
addr16
and
mov
ss
xchg
jae
testb
test
ja
mov
mov
jl
pushf
push
dec
or
adc
jp
add
xchg
and
mov
aam
cmp
or
mov
arpl
jmp
jge
cmp
xor
push
xor
mov
aam
lock
std
sbb
clc
mov
pop
fxtract
movsl
add
pop
sub
iret
mov
jecxz
xor
and
or
rolb
outsl
sbb
mov
push
mov
fs
ss
pop
inc
sbb
mov
mov
mov
mov
shl
enter
stos
iret
xor
jae
dec
push
lea
push
icebp
test
fs
aam
lea
sub
jno
pop
lret
into
add
pop
mov
mov
testb
xor
pushf
cmp
testb
xor
ds
sub
push
sahf
jno
pop
out
ret
lock
jns
aam
aaa
sub
cmc
cmpb
pushl
insb
repnz
nop
stc
test
adc
inc
inc
or
lods
pop
shl
jp
call
fadds
out
xchg
repz
aas
mov
jmp
fidivl
or
jo
test
pop
loop
adc
sti
inc
and
mov
add
inc
out
dec
gs
lea
xchg
sub
int
stos
xor
mov
das
push
arpl
mov
imul
lret
cmp
mov
xchg
test
insb
pop
inc
insb
push
mov
pop
mov
cmpsb
cmc
sahf
xchg
testb
dec
cmp
cmp
sahf
pop
jne
xchg
test
shl
rcl
imul
adc
push
orl
lock
jmp
ds
scas
push
mov
out
mulb
mov
mov
push
cmp
aam
outsb
add
dec
pop
xor
sti
adc
fnstcw
adc
scas
sahf
scas
jl
push
sub
bound
mov
nop
movsl
rcll
insl
cmp
pop
mov
popf
jns
stos
arpl
and
icebp
loop
inc
add
inc
lods
mov
sub
jge
rorl
fcmovnbe
jns
mov
pop
popa
fldcw
sub
and
jg
nop/reserved
test
push
mov
push
jmp
je
inc
and
inc
fidivrl
rolb
out
pop
dec
xor
jg
pop
xchg
pop
jne
outsb
inc
adc
and
out
sahf
pop
inc
iret
pop
jne
jl
xchg
out
shll
xchg
mov
shrl
push
or
popf
outsl
and
jne
fdivrp
popa
cld
xchg
daa
loop
sub
dec
cmp
add
test
ret
aam
and
ds
mov
int
mov
sub
jp
mov
sub
ficompl
cmp
mov
jg
iret
jle
je
les
lahf
jge
hlt
mov
xor
test
xor
addr16
push
push
jp
pop
insl
and
es
jae
test
out
fisubs
ficoml
xorb
mov
push
xchg
lods
mov
enter
or
scas
popf
add
add
mov
mov
fnstenv
adc
bound
dec
movsl
mov
add
in
enter
dec
xchg
jl
mov
js
xchg
fcoms
dec
sbb
out
shll
or
sbb
push
mov
jl
mov
leave
or
mov
test
lods
shlb
cli
sub
repz
test
add
sub
cld
jno
mov
pop
push
fisubrs
scas
sbb
push
sub
sbb
push
icebp
mov
lea
adc
sbb
xlat
sahf
fstl
out
lea
pop
mov
xor
xchg
and
or
dec
ret
xor
cmpsl
or
outsl
push
fwait
stos
dec
and
ss
mov
jp
repz
arpl
xchg
gs
ja
cmp
cmp
in
push
lds
cmpsb
and
divl
adc
cld
inc
lret
dec
fidivs
mov
testb
inc
mov
xor
pop
pop
rcrl
adcl
bound
fstp
and
movsl
popf
sbb
jmp
adcb
jne
xor
jp
es
mov
fcom
inc
sbb
loopne
cmp
adc
test
je
stos
test
push
pushf
sub
inc
das
fsubs
in
and
jb
mov
cmp
ss
xor
add
pop
jecxz
jno
clc
cwtl
mov
insl
repz
repz
sbb
cltd
sub
push
pop
scas
pop
push
jmp
out
or
fidivl
dec
fildl
fmull
push
insb
dec
sti
mov
lods
scas
cmpsl
mov
push
xor
sub
fsubrl
in
pop
hlt
mov
sbb
out
xor
das
mulb
das
add
dec
mov
les
popa
in
xor
mov
js
gs
sub
sti
jl
push
dec
xchg
loope
mov
enter
lods
test
xchg
jp
loope
pop
pop
and
cmpsl
xchg
adc
mov
out
pop
shrb
gs
mov
lcall
dec
ds
mov
sbb
loopne
dec
adcl
ljmp
jp
xchg
icebp
jb
dec
cmp
dec
shlb
clc
loop
out
jecxz
push
popl
fwait
btc
movb
mov
xchg
jge
pop
iret
or
std
jmp
sbb
clc
xchg
mov
cmp
int3
xchg
cmp
ja
pop
or
add
inc
dec
sbb
mov
mov
pusha
xor
push
xor
js
lock
sbb
pcmpeqw
out
jg
test
mov
dec
mov
mov
popf
loopne
pop
cwtl
mov
push
push
dec
subb
push
dec
add
lock
push
cmpb
gs
inc
xchg
jge
popf
mov
mov
cmp
test
mov
sub
lahf
xchg
popa
movsl
lret
movsb
xor
and
test
jae
xchg
incl
imul
int3
mov
or
mulb
stos
stos
mov
push
lret
cmp
loop
xchg
stos
aaa
push
out
sbb
xchg
ret
icebp
mov
hlt
cli
xchg
push
inc
pop
cmp
scas
add
add
fnstsw
lahf
cli
lds
xchg
dec
adc
cmp
aam
aaa
pop
movsb
sbb
mov
repnz
pop
jb
pop
addr16
and
mov
scas
mov
sbb
sub
lahf
out
mov
and
add
cmc
mov
adc
insl
xchg
xchg
and
mov
mov
xor
mov
insb
addl
lods
jno
jp
movsl
pop
in
and
pop
xchg
icebp
std
xor
sbb
mov
lods
jo
adc
xor
dec
adc
mov
sarl
imul
mov
mov
inc
pushf
add
lods
cmp
sub
push
add
sahf
mov
sbb
bound
pushf
out
xchg
mov
pop
sub
loop
cltd
cmp
in
xchg
inc
enter
imul
add
ss
sub
cmpsl
popf
adc
adc
adc
adc
mov
push
xchg
mov
jmp
jns
sbb
inc
mov
fisttpl
sti
mov
dec
lahf
xchg
in
and
pop
clc
insb
xchg
pushw
ret
sub
pop
jno
jb
mov
jb
sub
ficoms
adc
mov
or
ljmp
jmp
out
jp
pusha
inc
sub
inc
insl
out
add
in
sbb
repz
and
push
and
and
loope
and
add
ds
aad
js
rcl
out
xorb
jns
cltd
add
pop
cmp
int
jo
lods
or
push
enter
inc
or
cmpsb
or
inc
ret
ret
sahf
dec
es
and
dec
push
mov
lret
mov
pop
das
das
enter
pushf
idivb
iret
cli
hlt
push
mov
add
repz
dec
aaa
test
and
and
out
js,pt
insl
shrb
push
jb
mov
movsb
mov
xor
aaa
stc
call
add
in
push
sbb
inc
inc
mov
dec
das
adc
stc
pop
and
icebp
pop
push
insb
sub
mov
adcl
sub
aad
lahf
cltd
push
push
out
fidivl
mov
xor
imul
push
outsl
push
imul
jb
pushf
lods
adcb
dec
fisubrl
out
out
sti
jge
scas
out
test
dec
xorl
pop
add
mov
pushf
testl
push
adc
fsubrp
aas
popa
push
stc
fdivrl
aad
mov
in
std
cmp
jecxz
mov
test
jb
hlt
jmp
icebp
pop
fists
lcall
pop
push
mov
shl
xchg
pop
insb
or
and
inc
cmpsl
mov
jb
clc
fcmovnb
jle
ja
add
pop
adc
in
sub
dec
es
lods
adc
dec
iret
sbb
xor
inc
inc
ret
pop
add
add
mov
pop
inc
call
je
sub
fwait
pop
pusha
test
lahf
xchg
fwait
dec
or
mov
mov
inc
icebp
test
jne
insl
popf
insl
scas
mov
pop
nop
fimuls
rorb
jmp
mov
dec
xchg
mov
xor
sbb
roll
gs
jge
push
dec
add
xor
jp
adc
fisubs
jge
mov
pop
fdivs
mov
cmp
mov
sbb
jne
or
mov
les
iret
or
and
cmp
push
xchg
stos
lods
jbe
loope
iret
int
aas
ljmp
mov
arpl
sarb
and
in
lret
pop
mov
dec
test
fbstp
adc
dec
js
inc
clc
inc
int3
incl
lock
mov
sub
inc
push
sbb
lret
dec
das
nop
ljmp
mov
or
mov
aaa
sbb
stos
mov
pop
push
or
addb
mov
push
fisubs
loop
sub
popa
mov
inc
mov
jns
cltd
cltd
ljmp
lret
mov
rorb
out
inc
jmp
clc
mov
pop
xor
inc
adcl
filds
mov
into
jg
jo
xchg
xor
cmp
jb
fisttpl
pop
and
into
jl
fiaddl
out
mov
popf
pop
mov
call
fdivr
mov
roll
sbb
fmull
cmp
push
push
add
push
out
sub
adc
in
je
sbb
sti
mov
inc
popf
aam
xchg
int
and
inc
push
cmp
clc
pop
mov
adc
mov
mov
sbbb
mov
fidivl
inc
push
movsb
aad
or
xlat
loopne
dec
mov
fldt
outsl
std
add
dec
dec
pop
outsb
pop
inc
aas
mov
scas
loop
popa
jp
in
cmp
or
or
into
aaa
cld
lods
push
hlt
scas
clc
inc
daa
pop
push
xchg
lea
adc
xor
mov
das
popa
cmpb
mov
sbb
jmpw
mov
das
push
or
mov
add
inc
js
dec
insb
mov
adc
ljmp
inc
sub
aas
pusha
lret
mov
cmp
cmc
hlt
push
cmp
imul
xchg
pop
in
jl
out
mov
adc
jnp
dec
cs
sbb
loopne
in
sub
sub
les
dec
mov
push
shl
repnz
fistpll
aad
inc
dec
xlat
outsb
shlb
fcomip
mov
mul
aaa
push
mov
int
jl
pop
lahf
dec
pop
sarb
push
xor
clc
push
test
je
imul
cmp
sti
in
mov
inc
push
mov
dec
jne
or
pushf
cmc
rol
inc
and
leave
jmp
push
lahf
dec
mov
mov
or
repz
gs
sub
icebp
movsb
fidivl
mov
in
fistps
int3
mov
sub
leave
jno
adc
push
adc
out
test
mov
loope
enter
jnp
push
pop
jmp
sbb
adc
mov
xchg
mov
out
addb
test
xlat
icebp
sbb
js
mov
push
push
fcmovb
lock
imul
mov
std
and
fwait
xor
sbb
mov
push
in
inc
add
sub
ret
in
and
mulb
push
mov
subb
cmp
adc
out
or
sub
rol
jne
lds
mov
gs
inc
mov
mov
leave
imul
push
test
dec
cld
cmp
adc
sbb
xor
daa
outsb
daa
scas
jecxz
dec
movsl
clc
aaa
idivb
dec
and
mov
dec
and
push
mov
jg
xor
sarl
in
sub
mov
cli
cmp
sbb
cwtl
sub
negl
fstl
adc
lret
in
rcrb
imul
push
jecxz
pusha
add
adc
or
mov
mov
stos
cwtl
ret
int3
pop
aad
shl
sbbl
lods
sub
sub
out
sti
fidivl
cmp
aad
int
movl
shlb
popa
int
dec
mov
lods
outsb
and
dec
or
mov
sahf
dec
or
out
push
pop
and
rolb
js
lea
sub
inc
push
cmp
nop
scas
dec
pop
scas
mov
testl
jg
mov
inc
out
adc
pusha
mov
notb
nopl
lds
int
idiv
dec
push
mov
mov
imul
pop
pop
lcall
adc
pop
das
xor
insl
jo
cmp
jmp
pop
es
aam
pop
mov
fisubrs
push
stos
unpcklps
push
bound
pop
cwtl
out
les
out
jp
stc
sbbl
ljmp
adc
jne
lods
jmp
sbb
push
cltd
mov
leave
out
repnz
movsl
mov
enter
aas
inc
arpl
dec
jnp
mov
add
pop
mulb
add
inc
lea
es
adc
shl
pop
xchg
and
mov
mov
cmc
call
mov
xchg
inc
cld
and
int3
aaa
hlt
aad
aam
aam
popl
add
incb
cmp
shll
pop
cmpb
lahf
ja
leave
mov
lock
fcoms
push
inc
insb
mov
scas
daa
loope
insl
mov
add
mov
xchg
mov
and
push
adc
arpl
mov
xlat
test
loopne
cmp
mov
jmp
enter
es
inc
jge
mov
insb
cmp
ret
or
scas
jecxz
lds
aam
loope
xchg
ret
lea
ds
shrl
ret
das
in
in
or
push
inc
add
fldenv
or
in
call
and
pop
push
out
rorl
imulb
mov
xchg
or
push
enter
pop
loopne
fcmovnu
imul
inc
fdivrs
add
pusha
icebp
popa
enter
mov
scas
xchg
into
cmp
ret
adc
fs
mov
pop
std
movsl
fwait
and
dec
stc
insl
out
subl
sbb
das
dec
loope
jns
sbb
imul
mov
cwtl
pop
mov
push
test
mov
aad
sarl
sahf
rcll
rcr
movsl
rcl
mov
and
xchg
mov
dec
push
lds
cmpsl
fisttpl
mov
sahf
cmc
imul
sub
jb
mov
adc
in
imul
jecxz
jp
test
out
fcomi
xor
sub
loopne
repz
xchg
loopne
outsb
mov
jb
ja
push
push
ficoml
sbb
dec
xor
icebp
xchg
jno
test
mov
fdivl
in
xchg
rcrb
mov
jg
ja
dec
push
mov
cmpsb
iret
fstpl
daa
test
aas
andb
lods
stos
adc
stos
ja
jne
mov
mov
pop
pop
sub
dec
ret
mov
push
or
rclb
hlt
xchg
or
aaa
push
mov
sub
push
out
cmp
ja
pop
dec
aas
outsb
ret
push
fsubl
mov
jp
jb
mov
push
stos
loop
add
adc
mov
int
mov
in
mov
ss
mov
gs
inc
shll
cmpsl
xor
test
adc
mov
lret
adc
neg
mov
test
in
enter
mov
out
jns
je
mov
out
xchg
xchg
add
insl
outsl
or
lea
int3
and
lret
mov
push
arpl
pop
or
bound
stc
inc
stc
leave
aam
cltd
movsb
cs
cmp
jle
sbb
add
push
fists
mov
or
shr
inc
sub
xlat
cmp
cs
adc
jae
insl
enter
pop
rclb
sbb
mov
push
pop
xor
cmpsb
out
dec
xorl
dec
cmp
xor
cs
xchg
sub
andl
aad
popf
inc
aaa
imul
xor
adc
ljmp
and
into
pusha
orl
out
xlat
mov
fsubrp
mov
pusha
loope
adc
sbb
add
jl
xchg
decb
adc
popa
test
roll
popf
mov
or
loop
pushf
jbe
adc
lea
aam
js
aas
pop
and
fnsetpm(287
fisubs
movsl
inc
cmp
mov
xor
adc
dec
cmpsl
daa
ds
out
movsl
xchg
fcompl
jns
or
imul
push
or
ret
outsl
cwtl
loopne
leave
xor
sub
ja
mov
xchg
mov
sub
sbb
and
xor
cltd
mov
mov
or
bound
pop
lret
inc
push
negb
jns
movsb
mov
cmp
je
sub
les
jp
dec
fimuls
or
bnd
dec
rol
and
shrb
xchg
pop
scas
dec
stos
clc
xchg
sub
das
sahf
cmc
sahf
enter
lret
cmp
dec
push
fcoml
insb
mov
neg
js
xchg
cltd
push
out
add
or
cs
pop
int
ret
xchg
sub
push
add
insl
in
je
icebp
test
dec
pop
pop
add
bound
sbb
xor
lret
mov
pop
enter
aas
lret
test
dec
frstor
push
loopne
stos
push
daa
test
jbe
scas
push
roll
ljmp
push
scas
orb
ljmp
or
outsl
pop
fwait
insb
or
icebp
or
int
push
xor
ja
mov
aad
push
out
ror
mov
bnd
xchg
leave
notl
sbb
fidivrl
lods
xchg
cmp
ret
test
pop
scas
add
rolb
orb
mov
adc
gs
dec
dec
aas
out
call
mov
shrb
pop
cwtl
ficomps
cltd
push
and
les
fs
mov
adc
sbb
mov
push
lea
pop
cmp
mov
mov
vminss
xchg
ljmp
mov
fmul
cmp
mov
sub
sbb
add
mov
push
or
loop
data16
mov
xor
loop
and
pop
adc
push
mov
xor
test
and
dec
out
scas
es
es
ret
out
call
aad
mov
dec
push
fwait
pushf
push
jl
repz
fbstp
lds
xchg
sahf
and
mull
aaa
pop
pusha
cmpsl
sub
and
dec
pop
add
add
xchg
mov
push
add
test
xor
push
mov
pushf
pop
nop
sub
bound
das
adc
dec
jecxz
ret
in
repnz
scas
int
aaa
push
pop
xor
stc
xorb
add
cmpsl
jg
outsb
scas
cmp
fstpt
shlb
scas
lods
sub
js
and
mov
adc
sbb
and
dec
jbe
sti
jne
psubusw
or
lock
arpl
call
inc
inc
in
jge
mov
sub
insb
or
movsb
cltd
pop
push
dec
je
push
pop
xor
push
divl
xchg
fst
xchg
sahf
xor
jae
mov
es
or
adc
mov
add
mov
pop
pop
jmp
fnclex
push
hlt
divb
cmp
scas
push
int3
imulb
push
je
or
movsl
cmp
rcrb
mov
dec
push
fadds
sub
xchg
rcll
pop
pop
cld
shrl
xchg
call
insl
xchg
cmp
xchg
lahf
push
call
sahf
adc
shrb
sbb
popf
inc
cwtl
into
aad
std
icebp
mov
xlat
sub
adc
and
add
enter
adc
jo
scas
pop
ret
hlt
xchg
mov
js
mov
sarb
jbe
xor
stos
mov
mov
or
loopne
fbstp
jl
jp
push
sbb
push
and
add
and
into
int
mov
add
xor
das
rorb
add
mov
push
jae
loope
fildl
or
sbb
adc
ret
rolb
outsl
out
jecxz
jns
insb
fstpt
jp
sbb
mov
aas
loopne
mov
test
lods
add
dec
pop
out
shll
pop
mov
loopne
xor
xor
mov
xor
jp
push
aad
sbb
dec
pop
pop
jo
cs
mov
xchg
push
push
mul
or
xchg
loop
insl
inc
inc
add
lahf
fnsave
lret
lods
je
jl
iret
inc
mov
adc
or
repnz
icebp
push
arpl
rorb
test
icebp
std
sub
and
mov
inc
repnz
xchg
mov
push
pushf
add
mov
nop
xlat
ljmp
lahf
test
inc
push
les
fcmove
movsb
out
inc
jmp
stos
push
xor
or
push
adc
ljmp
cmp
into
fldcw
or
in
int3
in
cld
mov
mov
pop
push
push
cwtl
push
xor
xchg
sbb
cli
out
pop
xorb
inc
add
movsl
xchg
inc
inc
pop
out
push
insl
or
scas
popf
cmp
test
push
pop
or
mov
xchg
or
and
add
clc
push
ficompl
lds
stc
xlat
fidivl
or
push
imul
cmp
xchg
sbb
fistpll
jnp
mov
sbb
sub
in
jp
sbb
jae
pop
push
jecxz
push
xchg
and
mov
add
dec
sarb
pop
adcb
sarl
les
and
mov
sbb
mov
cld
xchg
nop
cmpsb
jae
ds
xchg
cmpsb
sahf
das
data16
mov
push
fsubrl
jle
cmp
xchg
mov
push
jmp
lds
pop
movb
push
xor
icebp
add
in
into
loopne
dec
add
imul
movsl
addl
sbb
dec
into
lock
push
into
es
lahf
lock
fs
outsl
lahf
add
mov
addr16
sti
push
add
dec
xchg
xchg
cwtl
insl
inc
or
test
jle
xlat
fisttpl
xor
arpl
push
arpl
pop
sar
jp
ljmp
adc
jecxz
sub
addr16
mov
mov
xchg
or
sub
mov
outsl
xorl
pushf
loop
mov
sub
pusha
mov
and
cmpsb
pop
mov
addr16
sub
or
loope
in
dec
jns
jb
inc
aas
sbb
sub
or
loope
ss
clc
cmp
orl
mov
out
lcall
es
mov
sbb
pushf
idivb
dec
jp
adc
movlhps
xor
test
dec
dec
stos
adc
sub
push
sbb
aad
out
movsl
shrb
jmp
or
aad
iret
cmpsb
mov
inc
cmp
adc
or
fmulp
out
mov
cmp
scas
push
inc
sub
bound
fidivrs
into
push
push
dec
inc
loop
inc
jecxz
jl
pop
or
loopne
jecxz
sub
out
push
adc
sbb
adc
jo
cmpsl
or
outsl
mov
jnp
inc
pop
mov
adc
xor
mov
loop
mov
stos
pop
jae
push
repnz
inc
std
push
sub
shrl
jp
inc
lahf
shlb
and
or
xchg
mov
aam
adc
or
mov
sti
in
jb
and
stc
jl
aad
nop
mov
xrelease
mov
xchg
push
pop
adc
pushf
sub
outsb
aad
or
decl
daa
pushf
fwait
sub
dec
movsb
push
mov
push
sub
xor
push
mov
push
dec
xchg
sahf
daa
repz
test
popf
jl
repnz
mov
ja
mov
inc
iret
xor
das
mov
fdivs
gs
add
out
xchg
sbb
push
std
push
bound
loope
add
mov
mov
in
cld
and
cmp
xor
loope
dec
sbb
adc
sbb
scas
fdivs
icebp
adc
test
movsb
insl
push
sub
stos
and
sbb
jg
pop
cmp
jecxz
lods
pop
jns
fldcw
add
adc
in
sbb
lcall
jno
add
hlt
and
pop
pop
test
lods
add
popf
jle
inc
sub
mov
int
lret
insb
lea
loopne
testl
in
and
cld
push
jg
mov
fwait
add
mov
adc
dec
pop
fistpll
add
out
lods
call
cmp
xor
mulb
fdivrl
jle
pop
ja
sti
inc
outsl
xchg
in
or
mov
inc
outsl
shll
rcrb
outsl
enter
inc
data16
imul
addr16
cmovae
inc
ret
nop
jnp
lods
mov
xchg
inc
repz
push
out
mov
dec
xchg
pop
and
pop
pop
jecxz
jle
les
mov
jecxz
jmp
in
mov
adc
mov
add
push
mov
sbb
cmpsb
pushf
jp
aad
aaa
sti
loope
and
mov
mov
jmp
outsl
jg
sub
int
arpl
sub
je
lcall
pop
rclb
lds
aad
dec
push
xchg
mov
fisttpl
shrb
cmp
sub
je
test
jp
inc
stos
xchg
or
mov
pop
lret
testl
adc
push
pop
into
iret
int
pop
jecxz
lods
rorb
push
adc
int
pop
cmp
xlat
mov
inc
call
cmp
repz
xor
mulb
adc
xor
mov
fstl
pop
mov
mov
scas
mov
cmc
xchg
loop
inc
sub
je
add
in
mov
test
int
std
adc
push
nop
push
pop
adc
loopne
inc
cmpl
xchg
mov
dec
loope
je
adc
and
jl
jg
or
ljmp
mov
jg
out
mov
push
div
adc
and
xorb
adc
fisubs
in
mov
in
or
mov
and
add
mov
rol
fnclex
cld
dec
gs
psubw
clc
mov
aad
inc
xor
add
fiaddl
mov
mov
sub
movsl
cmp
psllq
push
bound
push
ficoms
mov
popf
aaa
adc
jl
xchg
or
or
ret
popa
aad
fs
jmp
pop
dec
popf
lods
hlt
mov
popf
aad
add
jecxz
pop
bound
add
sub
stos
aam
xlat
pop
out
xor
loope
mov
adc
aam
loop
dec
adc
scas
mov
fwait
int
dec
dec
mov
adc
aas
test
stc
push
mov
bound
push
pop
sub
mov
sbb
pusha
pop
jne
rcr
sbb
mov
push
mov
cli
cltd
clc
mov
popl
pop
push
xchg
pop
scas
nop
xor
lea
std
add
enter
mov
and
sub
or
inc
jl
pop
inc
rcll
mov
cmp
jno
loopne
mov
jecxz
fwait
insb
leave
stos
clc
jle
xor
imul
xor
cmp
fwait
insl
jl
clc
les
and
mov
fildll
stos
sub
push
pop
test
push
sub
aam
jae
fdivs
dec
fcompl
enter
and
fs
out
mov
mov
aas
inc
vpmaxsw
or
or
aam
xchg
lds
mov
sub
sub
div
insb
jle
xlat
shll
aam
ret
cld
sbbb
pop
insl
adc
negl
cli
cmp
xor
ror
jae
dec
js
xor
and
pop
mov
pop
add
dec
mov
adc
ficompl
leave
xchg
out
pop
loopne
mov
push
add
test
jb
sub
std
xchg
xchg
jecxz
repz
pop
fwait
loope
lea
imul
jge
test
push
bound
jo
xor
adc
xchg
fstpl
leave
shlb
stc
xor
or
movsl
mov
fprem1
mov
out
sbb
ja
test
jno
sti
xchg
fs
xchg
push
cwtl
or
sbb
scas
pop
jl
mov
popf
subb
insl
jbe
mov
outsl
pop
mov
or
hlt
jg
mov
jg,pt
sahf
mov
add
addr16
movsl
mov
lods
out
nop
xchg
add
stos
jae
mov
pop
jle
loop
in
insb
pop
or
push
mov
jb
or
imul
and
mov
push
xchg
mov
inc
test
decb
outsb
imull
ret
cwtl
pop
mov
inc
mov
xor
int3
test
and
or
cmp
in
iret
std
hlt
das
push
mov
pop
bswap
loop
sub
enter
sbbb
je
sbb
in
xchg
shl
add
ret
xorl
dec
mov
push
jb
idivl
cmp
mov
aad
mov
call
push
dec
rcrl
xor
js
add
sbb
xor
or
jne
lret
orb
inc
adc
lea
mov
popa
icebp
jo
sub
jp
xchg
mov
js
lret
into
add
sar
xor
and
adc
jb
and
dec
jns
xchg
xchg
cmp
out
add
add
int3
cs
cltd
push
cmp
aaa
mov
cmp
mov
mov
test
cmp
sarl
loope
outsb
icebp
dec
mov
push
dec
mov
sub
cmp
and
jbe
jae
je
xchg
clc
sti
inc
mov
push
xchg
adc
ret
mov
popa
inc
test
enter
and
call
pop
mov
sbb
mov
mov
xchg
pop
push
mov
adc
mov
xchg
mov
out
mov
push
lods
cltd
cmp
scas
lahf
mov
inc
jae
inc
scas
push
xor
pop
xchg
xor
lcall
insb
outsl
xor
repz
or
xchg
mov
leave
mov
inc
sti
lods
sti
dec
mov
dec
into
icebp
jecxz
sub
inc
arpl
and
pop
sbb
in
sbb
ss
inc
sahf
xchg
xor
in
nop
mov
push
scas
pop
jb
or
enter
mov
push
add
pop
push
test
adc
je
dec
sub
lahf
ficompl
dec
cs
pop
negb
fisttpl
push
dec
stc
adc
inc
fisttps
clc
pop
repz
sub
pop
mov
movsb
sbbb
clc
in
sbb
mov
lret
jbe
sbb
hlt
orb
pop
or
inc
cld
dec
fisttpl
sub
lret
loop
pop
push
ds
push
test
jmp
das
inc
aam
cli
out
ja
imul
mov
in
into
sub
inc
pusha
pusha
das
dec
and
sbb
xor
adc
cmp
mov
lcall
decl
outsl
push
xor
add
ret
mov
adc
fldt
jge
add
and
lret
mov
cltd
or
or
pop
movl
stc
pop
iret
sub
shll
xor
andl
xchg
ficoml
push
les
loopw
or
sbb
xchg
cmpsb
scas
dec
inc
add
sarb
pop
xchg
arpl
popf
and
out
inc
push
in
jo
mov
outsl
or
jl
adc
push
cmp
out
lret
inc
xchg
adc
fs
pusha
js
loope
xor
mov
lock
xor
or
leave
mov
pop
add
xchg
fwait
mov
mov
outsl
in
ss
iretw
les
outsb
mov
adc
pop
dec
and
or
xlat
xchg
scas
jge
xchg
cmpsl
int
mov
cmp
rclb
pop
cmp
jp
xchg
je
std
pop
inc
testl
loopne
pop
dec
int
aad
neg
fimull
out
xchg
xchg
clc
fdivrl
fstps
insb
loop
cmpsb
jg
pop
js
nop
cmp
cmp
jl
je
cltd
lods
into
lods
and
pop
jecxz
repz
and
xchg
rorb
xor
negl
xchg
scas
jge
test
inc
inc
int3
and
mov
sahf
and
push
cmp
mov
mov
scas
jecxz
mov
fisubs
das
clc
icebp
pop
jno
xlat
xor
push
sti
test
inc
lcall
push
stos
gs
fsubrl
sti
mov
in
jl
not
fmull
insb
dec
cs
pop
mov
sbb
scas
or
fstl
loope
test
pusha
push
cltd
xchg
sar
xor
xchg
cmp
sbb
pushf
psllw
sub
shr
xchg
mov
stos
adc
pop
lea
or
pop
cmpl
hlt
adc
jl
mov
je
lret
fldcw
imul
jmp
cltd
lock
cmp
xchg
sbb
mov
jge
out
sub
cwtl
repnz
jle,pn
pop
mov
ret
ja
sub
fs
mov
jge
imul
and
enter
add
or
test
mov
xor
and
push
das
pop
cltd
cltd
and
ret
or
inc
mov
fcomp
in
scas
mov
je
mull
cmpsb
mov
sbb
lods
lea
jo
or
inc
mov
xchg
xchg
mov
xor
aaa
push
cmc
xor
mov
xchg
mov
cmp
xchg
outsb
and
test
and
bound
mov
cltd
cmpsb
xchg
sub
in
dec
lret
insb
sub
and
jo
out
lods
lods
xor
mov
out
inc
dec
in
fs
mov
lahf
sub
popa
ja
xchg
sarl
out
push
dec
lods
push
cmpsl
jle
rcrl
cmp
rcl
xchg
pop
ds
frstor
push
sbb
xlat
dec
inc
cli
adc
mov
inc
cmpl
mov
lods
sahf
je
subl
mov
add
int
add
sub
mov
lret
sahf
lea
sub
push
cld
rcrl
in
mov
das
mov
xor
cmp
insl
sbb
or
mov
xor
inc
pop
mov
loop
divb
mov
lcall
bound
push
sub
add
ss
je
out
xor
push
push
bound
lds
ljmp
hlt
test
iret
adc
in
flds
pop
mov
add
ret
enter
les
cmp
bound
xor
pop
dec
cmc
lcall
cltd
out
in
cmp
and
and
das
movsl
out
dec
in
cmp
jg
lock
xchg
call
lock
out
or
ja
loop
inc
sub
dec
rorb
sub
and
sub
cmp
je
add
pop
jbe
hlt
sahf
adc
scas
push
imul
subb
and
jbe
pop
test
shlb
out
adc
scas
jle
mov
mov
ds
int3
out
fucompp
lahf
sub
hlt
jno
and
adcb
test
dec
test
or
pop
imul
mov
aam
mov
pop
pop
clc
push
push
stos
and
data16
outsl
sbb
aaa
jecxz
xchg
rcr
int
pop
rol
jmp
fdivrl
or
inc
repz
jg
daa
decb
jp
test
pop
lret
sbb
sbb
cld
lock
popa
pop
sub
cmp
adc
dec
push
dec
test
jp
push
lahf
and
dec
inc
testl
xchg
mull
pop
xchg
movsl
andl
mov
pop
sbb
pop
cltd
pop
cmp
pop
fisttpll
jge
sub
inc
add
jo
xchg
out
ret
inc
cmp
push
xlat
jno
and
fadd
mov
push
cmp
cli
xlat
fdivrp
cmpsl
insb
jbe,pt
add
cli
fmuls
inc
shrb
sbb
cli
mov
inc
add
js
xchg
dec
cmp
fildll
and
push
push
push
testl
mov
into
add
cmpl
cltd
cwtl
sub
nop
fcomp
jb
cmpsb
push
sub
push
ret
xor
mov
dec
xchg
in
and
lock
cmp
mov
push
mov
push
scas
inc
fimull
bound
dec
mov
inc
sub
rclb
jo
test
push
pusha
jmp
mov
gs
popf
dec
inc
lcall
or
je
sbb
adc
jmp
xor
imul
jnp
mov
test
jne
dec
test
cmp
pop
pop
out
loope
out
xorb
jne
mov
dec
jecxz
jg
cmp
test
jl
mov
adc
and
add
sub
mov
stc
sub
aam
or
lods
lret
repz
sahf
cmp
mov
xor
mov
fsubrl
or
sbb
mov
es
jl
mov
dec
std
cltd
ja
adc
loop
lret
mov
push
das
inc
jl
inc
inc
rsqrtps
dec
nop
cmp
push
fs
std
dec
dec
pusha
pusha
pop
push
inc
xor
xchg
imul
decl
aas
and
xlat
or
xchg
pop
cmp
jnp
xchg
jle
movsb
arpl
or
and
sbb
mov
test
push
add
sub
adc
outsb
sets
fwait
ss
mov
jl
push
inc
or
or
sub
lods
pop
pop
insb
push
xor
push
in
jo
xlat
cmp
loopne
inc
add
in
adc
cwtl
mov
hlt
pushf
movsl
mov
jp
imul
mov
sub
xchg
ret
lret
jmp
into
or
and
popf
xor
and
divb
sbb
dec
push
popa
mov
cmc
mov
cli
pop
loop
push
sub
ret
jae
scas
lock
lahf
xchg
movsl
cmp
xor
ror
enter
cmp
imul
and
popf
in
popf
mov
incl
mov
dec
scas
pop
test
popf
stos
xor
cmp
sti
sub
xor
pop
in
dec
adc
jmp
ret
and
in
jno
jle
xlat
inc
jae
fldcw
lahf
push
xchg
jg
push
popf
dec
jno
fwait
mov
add
pop
xchg
push
jmp
fldt
fbld
inc
sbb
cmp
adc
pushf
sub
std
aas
pop
sub
sti
sbb
mov
mov
mov
call
sbb
icebp
sbb
shll
mull
scas
inc
sub
sub
jb
jnp
es
and
lods
push
add
dec
xchg
roll
cld
and
into
cmc
mov
mov
mov
into
add
pop
and
insb
xor
int3
xchg
and
xor
lret
xchg
sub
dec
std
stos
es
cltd
rorb
in
jo
add
fdiv
lcall
sub
lds
mov
out
mov
dec
and
inc
lcall
insl
leave
or
dec
ja
popa
rolb
fmuls
loope
js
fmuls
mov
mov
or
stos
pop
icebp
jge
aas
std
sarl
pop
outsb
fldcw
mov
mov
mov
cli
adc
cli
mov
jecxz
stos
add
out
jb
push
mov
jmp
mov
adc
sub
jb
mov
fs
mov
pop
cltd
mov
aam
jb
add
adc
test
and
sub
inc
iret
jge
vpshlw
inc
push
xchg
ficomps
movsb
xchg
lods
fiaddl
and
es
popa
xor
add
mov
sbb
add
out
popa
int
dec
mov
inc
arpl
mov
loop
mov
out
lock
xchg
jae
xchg
lahf
in
shr
fwait
jne
pop
lahf
out
fldt
in
or
stc
mov
add
fisubrl
add
sub
sub
sbb
or
orl
and
jo
scas
pop
dec
lcall
sbb
subb
fstpt
xchg
xor
push
adc
push
cmp
out
lret
inc
aas
testb
cmpsb
insb
dec
and
mov
mov
shlb
adc
fistpl
mov
adc
js
int
insl
mov
inc
movsb
pushf
les
ds
jo
mov
outsb
adc
or
pushf
dec
xchg
xchg
imull
lds
dec
mov
lock
fcomps
sbb
xchg
into
in
ror
ljmp
sub
and
add
jno
ljmp
movsl
mov
fcmovnu
imul
pop
leave
insb
xchg
push
pop
lcall
sbb
data16
rol
insb
lahf
sub
outsb
xor
pop
mov
dec
insb
dec
inc
addr16
sarl
mov
mov
popa
in
xchg
aam
bound
adc
cmp
and
aas
jl
and
stc
jbe
lret
sbb
aaa
jne
cmp
cmp
fsubr
jecxz
mov
adc
mov
sub
jbe
cltd
testl
cwtl
icebp
into
test
xchg
stc
xor
insl
in
jns
repnz
xchg
push
dec
out
pushl
or
enter
stc
movsb
mov
int
push
and
lods
push
fsts
divb
jecxz
aas
enter
mov
push
and
or
pop
repnz
pop
pop
in
push
inc
sub
fcomps
frstor
pop
into
mov
push
mov
insb
lret
mov
inc
in
mov
mov
dec
or
pop
jno
xor
lds
jns
inc
clc
dec
scas
add
inc
lret
xorb
xchg
ljmp
or
xor
or
out
lcall
ljmp
outsl
cmp
mov
dec
jo
dec
adc
fnstenv
shl
pop
cwtl
outsb
mov
in
fistpll
cs
jno
leave
bound
rol
pop
enter
dec
mov
mov
pop
jns
arpl
movsl
xor
mov
dec
inc
adc
add
sbb
inc
insl
sub
rcr
xor
sub
dec
xchg
scas
sbb
xor
xor
sbb
dec
loope
daa
pop
dec
mov
pop
ja
or
ljmp
xor
stos
pop
push
mov
or
xor
sub
sub
jle
adc
mov
in
jno
lcall
scas
dec
fstpl
pop
and
and
pop
sar
xchg
adc
jl
mov
adc
test
jns
mov
adc
inc
cmpsb
outsb
cmpsl
ss
sbbb
inc
cmp
icebp
sbb
sbb
jae
sub
inc
fistl
dec
adc
pop
sbb
pop
lock
ror
dec
sbb
or
mov
sub
push
add
inc
std
repz
enter
filds
dec
lds
dec
adc
pop
lods
inc
fwait
dec
movsb
neg
lds
sti
in
dec
jno
out
mov
popf
lret
inc
pusha
out
nop
xchg
test
shr
mov
lret
movsb
pushf
es
push
in
mov
ret
xor
fsubl
into
jnp
inc
jbe
rorb
lret
sbb
out
lahf
sub
lret
mov
movsb
bound
rorl
and
je
jae
dec
inc
outsb
jbe
pop
xor
mov
inc
sub
scas
loope
loope
scas
shrb
pop
insb
or
ljmp
sub
dec
pop
xchg
push
rorl
out
lds
das
add
in
fcoms
cmpl
mov
xor
xchg
inc
or
testl
adc
xor
push
mov
adc
inc
shld
or
test
insl
add
lods
inc
sti
cld
push
sub
sub
mov
orl
mov
mov
jge
shll
push
jle
mov
cmp
shrb
sub
xchg
test
sub
icebp
fbld
xchg
dec
faddl
js
pushf
add
jge
cvttps2pi
push
inc
xor
push
xor
pop
and
dec
fsubs
push
jge
pop
pop
out
std
fiaddl
push
iret
sbb
adc
sbb
mov
mov
lods
pop
cmp
cmp
shrl
add
imul
in
sbb
mov
shrl
push
scas
dec
add
cmp
sbb
mov
das
inc
xchg
xchg
sbb
psraw
les
inc
xor
xchg
dec
cwtl
jmp
push
xchg
jo
mov
jbe
fs
insl
and
xchg
cmpsb
cli
scas
daa
xchg
idivl
sti
call
xor
repnz
pop
data16
dec
mov
leave
test
int3
repnz
add
push
inc
jae
sbb
and
pop
mov
sbb
jle
adc
out
mov
adc
jl
and
xchg
jnp
jp
adc
sub
dec
pop
sahf
push
mov
ljmp
sbb
ret
mov
add
push
dec
insl
push
loop
and
in
inc
in
mov
dec
jmp
and
ret
subl
adc
mov
filds
scas
xchg
xchg
sbb
bound
hlt
push
mov
pop
bnd
dec
movsl
test
pop
sub
inc
insb
movsl
push
stos
push
mov
jb
jl
pop
idiv
out
or
xor
aam
mov
arpl
lods
out
mov
pop
adc
xor
ds
out
xchg
in
pop
jno
into
inc
ljmp
aad
lret
incb
clc
push
bound
adc
ja
pop
int
icebp
cli
push
mov
addl
aad
pushf
sbb
lock
or
mov
mov
into
sahf
dec
stos
fdivrs
call
or
jnp
in
push
aam
mov
mov
and
pop
sbb
sbb
aas
gs
iret
push
adc
jb
mov
cmp
call
cmp
icebp
lahf
push
mull
fidivrl
sbb
addl
push
out
push
cmp
mov
popa
outsl
add
ljmp
pop
mov
testb
mov
out
sbb
ss
xor
sarl
sbb
insl
jns
ljmp
insl
lret
andps
arpl
mov
sbb
inc
outsb
xor
imull
pop
mov
dec
lods
enter
mov
or
push
out
sub
rorl
pop
cmp
into
dec
mov
loope
addl
test
mov
js
cmp
outsb
std
fwait
bnd
outsb
cmp
push
fistps
push
jae
jne
repz
adcl
mov
mov
xlat
ss
mov
int
sarl
out
or
stc
out
cld
mov
repz
ds
clc
jg
sbb
pop
xor
in
mov
push
outsl
and
out
sahf
and
incb
out
imul
ret
mov
flds
roll
test
sarl
add
xor
mov
sub
mov
fnstenv
dec
mov
xchg
stc
popa
mov
out
or
sti
xorb
sub
cwtl
jnp
es
xchg
out
test
pop
push
cmp
popf
in
or
imul
xor
fistpl
inc
push
xchg
fwait
add
lds
and
ljmp
mov
cmp
xor
mov
adc
sbbb
sarl
mov
daa
pushf
and
dec
cwtl
push
fmul
mov
push
jle
hlt
cmp
mov
sarl
or
pop
push
aas
xchg
daa
jmp
mov
dec
push
inc
fs
adc
pcmpgtw
bound
cmpsb
jne
leave
push
stos
out
cs
xchg
mov
cltd
dec
andl
in
aas
fbstp
daa
lcall
and
lods
push
pop
adc
in
xor
dec
int3
mov
push
int
loop
iret
inc
mov
mov
sub
xor
outsl
mov
push
lods
leave
dec
xchg
out
aas
and
mov
adc
movsb
xchg
int3
cmovo
bound
mov
aad
daa
xor
dec
outsb
arpl
aas
mov
movsb
hlt
pop
inc
scas
out
cmp
dec
gs
dec
fs
or
xor
add
and
xor
subb
and
lock
pop
pop
mov
jg
hlt
jle
mov
dec
lock
movb
mov
jb
je
mov
cli
ret
in
iret
fiaddl
xor
xchg
call
xor
pop
and
call
and
fsubrl
inc
mov
jne
lds
adc
and
out
mov
mov
jnp
imul
sahf
mov
sbb
sub
xor
or
aad
cmp
ret
test
push
mov
fadd
cwtl
stos
in
mov
jns
outsb
into
adc
lret
pop
stos
mov
cmpsl
or
add
or
mov
xchg
mov
je
and
lahf
jl
pop
lds
lcall
fdivs
loop
ret
xlat
clc
sbb
dec
mov
rcl
xchg
sub
mov
fcmovb
xor
cwtl
cmp
incb
cmc
push
lds
out
push
sub
pop
push
cmc
sub
adc
mov
xor
and
es
pushf
jge
mov
daa
loope
add
sub
loopne
xor
xor
cmp
test
fsub
jecxz
popl
je
cwtl
push
sbb
inc
subb
adc
push
push
out
fldenv
sti
adc
sub
pop
das
rcll
in
xlat
and
mov
cmc
mov
data16
hlt
inc
insl
jecxz
pop
jp
shll
inc
adc
jp
mov
dec
sub
mov
pop
mov
sub
stos
mov
repz
lea
pop
je
rcr
outsl
push
or
mov
jnp
out
pop
pop
rorl
mov
cmpsl
shlb
push
mov
in
aam
stos
push
test
daa
pop
and
mov
sbb
mov
popa
sbbb
mov
push
pusha
mov
arpl
insl
aaa
dec
cld
loopne
in
movsb
sub
and
das
pop
xor
mov
fincstp
mov
adc
pop
mov
je
xor
cmpsb
mov
andb
mov
sub
ds
adc
lret
xchg
fdivrp
clc
ds
and
xchg
in
in
je
jo
cmp
ret
cmp
xchg
xchg
sub
jl
cltd
jno
and
lods
sbb
scas
stc
hlt
loope
call
lods
pop
mov
push
hlt
popf
adc
or
lock
jge
cmpsb
cli
jge
or
cmp
nop
pop
incb
mov
stos
push
ds
les
cltd
sub
cs
mov
divl
loop
sbb
cltd
xor
lcall
mov
push
decb
nop
std
das
cmpsl
cmp
rcrb
mov
jg
dec
jmp
and
or
jg
jge,pt
mov
popf
sahf
cmc
jb
mov
xchg
jmp
popf
jmp
mov
sti
inc
sub
cmp
cld
fidivrs
fsts
mov
and
data16
enter
jle
xor
mov
sub
dec
adc
push
lret
lret
jns
pop
mov
loopne
push
jae
or
out
or
cmp
ret
flds
xor
push
xchg
push
arpl
in
pop
sahf
cltd
int3
fists
adc
push
mov
push
xorl
in
ds
jo
sbb
sub
js
das
fstpl
push
pusha
cmp
sub
pop
fstpl
push
jp
ret
pop
cmp
fmul
inc
xor
pop
cmp
ficoml
adc
jno
scas
fstpt
or
push
sarl
cmpsl
stc
add
adc
xchg
ljmp
fsubrl
adc
push
cmpl
out
mov
lret
loop
jne
ss
mov
sbb
in
inc
std
mov
mov
imul
hlt
xor
xchg
mov
sarl
in
dec
shll
fsts
jne
lock
test
pop
pop
std
jno
adc
cmp
jle
in
das
push
clc
jmp
in
mov
jne
call
sbb
ja
mov
das
dec
clc
add
jp
fldcw
addr16
jl
pop
mov
loopne
inc
ljmp
xor
push
xor
idivb
lret
or
or
fidivl
stos
dec
xchg
cmp
gs
add
cmp
mov
out
inc
sbb
xor
rcrb
lock
mov
addr16
mov
test
jmp
inc
ss
mov
mov
imul
cli
fwait
pop
aad
xchg
xchg
sti
dec
sbb
scas
pop
pop
cwtl
pusha
and
jo
xlat
loop
pop
cli
popf
jge
lods
xchg
aas
mov
aam
pop
inc
push
mov
test
ds
push
lods
sub
xchg
stos
dec
flds
dec
adc
xchg
sub
sub
adc
mov
inc
dec
imul
sub
adc
mov
mov
adc
dec
sbb
jno
std
mul
dec
pushf
xor
dec
std
inc
adc
stc
cli
mov
mov
pop
add
outsb
bound
daa
lock
dec
dec
dec
push
mov
xchg
jg
xchg
push
fs
in
xor
fmull
or
mov
xor
addb
xchg
call
jbe
push
addr16
data16
push
push
fs
repz
and
les
and
push
stos
aam
out
push
inc
hlt
lods
leave
testb
mov
mov
pop
out
lret
and
test
sbb
xor
pop
out
xchg
sbb
inc
add
cld
shll
jns
fildll
fdiv
aad
fucom
ret
sub
test
daa
xchg
or
and
ret
dec
xor
jb
mov
outsl
in
push
aam
inc
pop
jnp
dec
mov
cmp
fidivrs
lods
xchg
cmpsb
ret
out
and
sbb
cs
add
lcall
bound
pop
lahf
lret
mov
push
popa
pop
push
daa
dec
ljmp
call
sbb
or
inc
cmp
sbb
cmpsb
shll
pop
adc
je
les
idivb
jbe
or
jge
inc
test
ficoml
push
push
cmp
in
cld
ja
pop
dec
inc
xchg
xor
push
xchg
add
mov
mov
mov
mov
jbe
pop
push
inc
pop
dec
or
subl
push
repnz
in
fistpl
push
cmp
jmp
xchg
lods
repz
push
movsb
iret
push
push
fwait
xor
shr
mov
repnz
xor
movb
inc
nop
dec
jbe
orl
push
je
push
xor
outsb
arpl
jbe
cmpsl
lcall
xchg
ret
push
stos
je
xchg
xor
jae
push
jb
cli
bound
mov
fists
and
cmp
sbb
repnz
movsl
add
jne
aam
enter
pop
pop
notb
neg
dec
sbb
movsb
cld
push
adc
into
cmp
in
xchg
push
sbb
fs
jp
out
lcall
jmp
xchg
mov
outsb
or
push
mov
test
mov
mov
shr
mov
lea
push
push
push
ss
fildll
call
cwtl
xchg
mov
mov
mov
mov
loope
jl
mov
cmp
mov
in
gs
out
and
xchg
xchg
sub
lcall
iret
sahf
pop
adc
scas
dec
insb
cmp
xchg
sub
mov
sbb
setp
dec
pusha
das
roll
dec
or
popa
fbstp
cmpl
cltd
inc
stos
ljmp
or
cmpl
jle
repnz
xor
add
push
repnz
mov
push
dec
push
cmp
adc
dec
sbb
mov
bnd
mov
pop
xor
arpl
test
sbb
push
xor
jge
lods
cmp
hlt
xchg
xchg
sub
in
cmp
pushf
xchg
out
or
movsb
icebp
jb
test
pop
iret
imul
bts
dec
jb
rorl
enter
ret
sbb
jne
popf
jmp
in
push
jo
mov
cmp
lds
es
in
mov
jle
adc
mov
sbb
bound
movsl
or
shll
lret
int3
rcll
cmp
aam
leave
xchg
movl
and
pop
xchg
add
cs
push
pop
sub
or
stos
xlat
mov
add
add
ds
sbb
out
pop
inc
subl
inc
out
in
imul
lret
push
ss
or
jbe
call
dec
stos
and
dec
adc
mov
fisttpl
dec
jmp
and
sub
das
jns
js
popf
add
add
ret
ljmp
out
jge
lahf
negl
and
sbbb
jae
into
jbe
notl
mov
or
inc
push
jl
and
ljmp
int
jle
push
inc
or
sub
fldenv
ja
es
adc
call
push
mov
xchg
rcll
pop
xchg
fcmovne
xchg
adc
ss
mov
out
loopne
inc
cwtl
mov
repnz
xchg
adc
mov
scas
shlb
jo
sbb
and
push
mov
test
cmp
pop
stc
xchg
movl
sub
jbe
ucomiss
sub
aad
shr
aad
pop
sub
dec
dec
test
adc
inc
xor
mull
sub
scas
mov
push
fcomps
lcall
lods
cmc
cmp
xchg
mov
mov
push
cmp
les
pusha
xlat
cmc
dec
ds
mov
imul
lds
stc
inc
and
arpl
pushw
or
outsb
aas
ret
pop
mov
enter
mov
inc
and
les
das
mov
ds
arpl
xor
pop
test
aaa
in
dec
stos
adc
nop
mov
pop
fisubrs
jne
cld
in
sub
sbb
sub
cmp
scas
test
das
push
dec
scas
popf
push
jle,pt
inc
rorb
int
push
mov
testb
add
dec
push
mov
cmp
arpl
dec
das
mov
pop
xchg
inc
sub
ljmp
call
arpl
or
inc
jg
lea
bound
lds
fsubrl
pop
mov
pop
xchg
subl
test
in
push
divb
nop
clc
jmp
jp
cmp
data16
xchg
push
imul
out
mov
xor
aam
aad
test
das
mov
inc
ret
lret
adc
mov
cmc
andb
sbb
fcmovbe
inc
cmp
cltd
cld
mov
push
in
divl
fcmovb
fldl
je
push
aas
popf
or
lods
out
sbb
call
imul
mov
cwtl
ja
cmp
insb
outsl
inc
popf
inc
adc
cmpsl
inc
adc
out
clc
mov
jmp
dec
cmova
mov
ret
pop
and
inc
scas
das
cmp
insb
add
mov
mov
pop
jmp
xor
dec
repz
lods
add
lds
pusha
test
jbe
stos
pop
push
cltd
and
push
jg
out
and
push
int3
mov
stos
jp
insl
repz
imul
xor
daa
xor
movsb
out
movsl
stos
jmp
ret
lods
loop
scas
inc
sub
xor
mov
test
sub
daa
pop
push
dec
pop
fs
mov
inc
add
scas
jnp
bound
and
mov
leave
jae
sbb
adc
xchg
or
call
out
je
mov
sub
jb
dec
shll
in
scas
dec
jb
ret
jbe
mov
or
cmp
ja
jmp
outsb
mov
or
repnz
rorb
lahf
push
sbb
cmp
push
push
out
iret
dec
jge
js
decl
sti
les
bound
cmp
testb
movsl
mov
jbe
push
pop
push
ja
movsl
in
test
shr
fistpll
add
fidivrs
shll
sub
mov
out
mov
xor
mov
jae
iret
aas
ret
subl
cmc
arpl
sub
lret
lods
in
aad
sbb
ror
mov
inc
xor
cmp
push
adc
scas
aam
inc
mov
sbb
repnz
test
movsl
xchg
movsl
push
leave
push
outsb
rorb
push
out
fsubrl
sbbb
jae
scas
jb
popf
or
testl
jp
mov
lret
out
mov
cmp
aad
xor
mov
mov
sub
in
pusha
sbb
pop
mov
scas
dec
jbe
out
test
jp
add
pop
ja
pop
adc
push
mov
ss
repnz
push
or
loopne
cmp
jmp
mov
add
cmpsl
inc
jle
jl
inc
clc
mov
dec
pop
push
lods
dec
iret
nop
popa
cmp
insl
push
lret
dec
imul
xor
ljmp
inc
jno
xor
dec
jp
add
scas
push
push
mov
fdivs
mov
jb
sbbl
stc
flds
mov
or
or
push
mov
outsl
adc
stc
push
xchg
or
mov
and
mov
wbinvd
test
inc
loop
jo
cs
sahf
sub
inc
cli
jg
adc
scas
sar
mov
adcb
mov
or
sbb
inc
int
jo
call
shll
fidivs
into
or
jge
loopne,pn
inc
je
push
mov
icebp
cmp
mov
into
mov
push
rorb
stos
jne
and
and
sbb
or
in
push
inc
push
lods
dec
inc
mov
mov
loop
je
in
loope
or
fcomps
add
xchg
ret
clc
mov
sbb
jg
lcall
inc
lods
pop
mov
mov
in
cmpsb
sub
cmp
ffreep
arpl
cmovbe
mov
sub
pop
sbb
cwtl
jns
pop
fildll
cmc
ds
push
jg
mov
adc
cmp
push
test
call
int
js
and
mov
jmp
or
sub
imul
rclb
add
mov
test
das
push
incb
jle
das
dec
lcall
clc
sub
and
pop
sub
repz
adc
dec
mov
incb
cmc
int
scas
lock
mov
mov
jge
xor
fwait
outsl
add
jbe
mov
inc
mov
or
xchg
fcom
fistpll
inc
lahf
scas
insl
mov
ss
mov
arpl
push
dec
out
pop
add
imul
int3
js
fistps
add
add
or
adc
sub
dec
call
test
cmpsb
jg
jl
daa
jbe
mov
push
push
ret
icebp
in
or
stos
jb,pt
and
push
xor
add
in
aaa
ficompl
add
mov
and
stos
xchg
xor
xchg
test
adc
addr16
jae
sahf
sub
and
xchg
insb
xchg
and
xlat
fwait
mov
in
mov
pop
xchg
nop
and
sahf
iret
pop
sahf
xor
popa
inc
das
lahf
sub
testb
loope
fdivrs
sbb
or
movsl
sbb
cmc
push
inc
cltd
pop
cs
cltd
xor
xchg
mov
stc
shlb
xchg
pop
mov
xchg
call
rolb
dec
or
js
lret
enter
rorl
test
add
adc
ret
xlat
repnz
add
mov
dec
out
or
rcll
cmp
cmp
fmull
movsl
aas
sbb
xchg
push
push
push
popa
enter
mov
cmp
les
push
push
call
xchg
loope
or
mov
push
sarl
insb
out
push
push
jmp
insl
ss
sbb
lods
test
xchg
sbb
add
mov
or
bnd
rorl
add
dec
hlt
mov
adc
sbb
sbb
jge
stos
or
pop
or
notb
in
mov
push
hlt
mov
xor
fnclex
arpl
je
and
cltd
cmc
mov
ljmp
mov
mov
or
jno
scas
add
adc
or
movsl
loopne
mov
cmp
loopne
cmp
jnp
lret
xor
inc
test
push
sub
jmp
jae
lea
adc
add
fcmove
pop
inc
pop
mov
ret
xor
subb
imul
cltd
jae
mov
add
xchg
jo
icebp
jno
hlt
and
and
mov
sub
pop
jl
inc
push
mov
push
ss
adc
push
sub
jmp
lods
mov
daa
mov
loopne
ljmp
mov
xlat
imul
add
popa
mov
or
cmp
xchg
cmc
dec
mov
sub
add
inc
fwait
pop
push
adc
aam
in
dec
rcrl
flds
movsl
neg
ret
ret
out
out
cmp
or
mov
loopne
repnz
bound
filds
pusha
jns
adc
addl
xchg
shl
mov
push
pop
outsb
cmp
ljmp
and
fstpt
xor
loop
insb
divl
xor
stc
push
xchg
test
xchg
mov
ret
xchg
mov
cmp
add
push
js
test
ja
test
jmp
xchg
sub
lcall
pop
test
adc
push
mov
pop
or
and
fwait
sub
bound
push
push
fldt
inc
movsl
jmp
ficomps
xchg
mov
aam
sbbb
sbb
fistpll
mov
jo
xchg
sbb
jmp
jmp
mov
int3
add
insl
int
and
cltd
aam
ja
pop
fists
inc
xchg
dec
out
dec
sbb
fdivl
movsb
dec
dec
es
shlb
dec
shr
testl
mov
scas
mov
mov
xor
std
frstor
stos
mov
ljmp
pop
and
or
xchg
sti
mov
or
les
pop
mov
dec
mov
xchg
add
jb
lret
or
data16
sub
aaa
test
popa
sahf
cmpsb
dec
push
xchg
popf
loope
mov
jl
jge
bound
ja
lods
mov
xor
ja
jne
jae
dec
sbb
mov
jge
lahf
arpl
fiaddl
xchg
sbb
push
fs
ficomps
popa
push
inc
sbb
imul
roll
push
mov
mov
pop
rcrb
es
pop
jle
mov
test
aaa
aaa
sti
xchg
or
movsl
gs
movsl
push
push
in
insb
test
lahf
xchg
mov
iret
test
jno
push
int
jo
mov
push
jl
inc
imul
negl
cs
mov
pop
or
int3
andb
cmpb
aad
loop
scas
xor
mov
test
daa
into
jge
jmp
leavew
and
mov
test
adc
sahf
or
add
jg
lock
packssdw
inc
addr16
mov
shr
cmpsb
ja
mov
pop
lds
or
or
addr16
aas
hlt
push
dec
or
sbb
js
sbb
xchg
xor
or
pop
pusha
add
mov
fs
lret
sti
mov
mov
mov
dec
mov
in
outsb
inc
scas
mov
xor
jb
aaa
lods
mov
hlt
mov
add
jg
cmp
daa
call
mov
sbb
jnp
jne
pop
xchg
xor
sahf
out
jno
inc
jg
dec
cmpsb
setbe
fstpt
mov
push
data16
movsb
stos
add
or
es
ss
cmp
in
pop
aad
adc
test
push
xlat
nop
mov
loope
pushf
cld
push
fsubp
sub
scas
sar
ljmp
call
daa
cmp
popa
or
or
cmp
mov
adc
push
cli
xor
sub
test
popa
cmpsl
outsl
mov
xor
js
jmp
lret
lea
iret
mov
add
sub
sub
xlat
add
cmp
call
in
iret
ja
dec
add
sbb
jg
add
shrb
daa
aas
out
inc
outsb
lret
outsl
push
mov
push
hlt
movsl
inc
hlt
negl
inc
test
js
int
inc
shlb
mov
jp
adc
inc
cmp
int3
push
vmread
sti
cmc
inc
out
sub
int3
insb
mov
shlb
je
cmp
adc
aaa
hlt
and
sti
cmp
ret
mov
nop
inc
scas
xchg
cmpsb
stc
insl
inc
fldl
jle
sub
xchg
mov
xchg
in
fwait
xor
lahf
icebp
call
stos
sbb
sahf
ljmp
lret
mov
and
ds
sarl
pop
mov
cltd
adc
cwtl
or
add
xor
fmuls
add
dec
mov
pop
lcall
pop
imul
outsb
stos
or
je
pop
or
push
insl
add
fldenv
mov
pusha
jnp
enter
aam
jmp
pop
scas
add
pop
xchg
cmc
das
mov
and
mov
pop
lret
pop
add
aad
xor
sub
enter
aam
fmull
pop
adc
cli
mov
repz
in
fnstenv
ss
pop
mov
sub
push
inc
xchg
ljmp
lods
mov
shrb
mov
and
fimuls
cli
push
xchg
inc
rcll
inc
clc
mov
mov
mov
add
gs
adc
jbe
pusha
jae
orl
cmpsl
pop
adc
and
ss
xor
xchg
dec
ret
les
or
cwtl
xchg
cmp
push
loop
cmp
and
pop
push
dec
enter
test
push
pop
jmp
push
into
mov
mov
fmull
pop
push
mov
pop
iret
int3
jle
icebp
enter
or
push
dec
mov
decb
int3
js
cmpsl
jno
push
ret
jae
jns
js
in
mov
dec
lock
cmp
mov
dec
dec
dec
and
push
mov
xchg
in
add
sbb
shl
imul
cmp
adc
push
aad
xor
jbe
int3
test
jp
sar
adc
popa
dec
pop
lock
sub
clc
test
push
mov
cwtl
adc
or
jae
add
lock
jne
es
cmpsb
jno
jle
divl
bound
int
data16
call
rcrl
push
aad
insb
pop
mov
pop
in
adcb
inc
idivb
jnp
shll
mov
fimull
mov
mov
shrb
stc
in
sub
imulb
jb
cli
cmp
sbb
dec
lret
xor
xor
dec
cmpsb
adc
test
nop
xor
pop
addr16
mov
pop
in
pop
repnz
int3
add
fldl
push
dec
clc
or
or
xor
aam
mov
ret
push
mov
ret
mov
int
jo
push
ret
cmp
push
xchg
jecxz
daa
jecxz
mov
sbb
cmp
mov
sub
and
lock
fs
push
pop
lods
das
xchg
dec
pop
ss
dec
sbb
lret
or
mov
inc
dec
push
shrl
cmp
loop
or
cmpsb
pop
call
or
adc
sub
sub
test
mov
inc
bound
xor
gs
mov
js
pop
xchg
mov
dec
cmpl
add
push
mov
call
push
cmc
pop
cmpsl
cs
test
cmp
push
repz
aaa
gs
sub
es
test
loop
jb
pop
sti
pushf
outsl
and
std
pop
ljmp
cmc
shll
mov
and
je
inc
sub
cmc
add
shr
mov
lods
or
push
push
mov
xor
jge
mov
fisttpl
test
cwtl
imul
jl
loop
add
test
mov
xor
add
push
xchg
int3
fisubrs
icebp
icebp
lods
add
sub
mov
mov
prefetch
mov
jmp
outsl
mov
in
sbb
popa
mov
cmc
dec
pop
mov
and
ret
ret
add
adcb
mov
nop
xchg
and
inc
inc
rcrl
sarb
jp
jno
sub
xchg
xchg
lods
test
push
stos
add
insl
lods
jle
not
sti
adc
idiv
mov
mov
int3
and
rcrl
adc
xchg
jge
shlb
xchg
xor
sub
dec
inc
mov
fildl
sti
adc
enter
inc
outsl
push
out
cmp
jecxz
push
or
dec
daa
inc
call
mov
jge
pop
jo
fwait
dec
mov
xchg
inc
cwtl
rcrb
mov
pushf
inc
jecxz
fs
jp
inc
fwait
outsl
xchg
push
gs
sub
rep
ja
sbb
loope
and
int3
push
les
dec
fcmovnbe
paddd
dec
push
cs
fisubrl
jge
or
mov
in
sarl
pop
mov
das
mov
cmp
pop
das
xchg
in
repz
popf
cmp
ja
repnz
nop
and
cmpsb
stos
inc
testl
mov
loopne
andb
dec
adc
aaa
pusha
scas
mov
test
inc
cmp
jb
push
pop
pusha
or
push
mov
ret
push
dec
stos
xchg
rdpmc
jmp
mov
mov
jns
mov
sbb
adc
lahf
push
cmc
xchg
scas
jne
stos
hlt
fimull
shr
sbb
push
andb
xlat
cmp
dec
sub
pop
push
sbb
bound
bound
loop
sub
test
sub
dec
push
cmp
sub
mov
xor
pop
jnp
fwait
push
adc
push
jecxz
sub
fwait
mov
mov
sbb
push
rol
scas
inc
repnz
inc
adc
pop
jmp
mov
cmp
fs
shll
lock
lret
jbe
leave
sti
mulb
mov
js
out
imul
add
roll
fwait
mov
clc
shlb
xchg
adc
aas
jle
push
sbb
mov
dec
pop
icebp
shl
adc
ljmp
fistpll
out
pop
xchg
pop
enter
inc
std
ljmp
test
xchg
pushf
jle
adc
jle
arpl
pop
mov
dec
and
mov
loopne
outsl
jae
cmp
stos
rcr
mov
inc
stos
jmp
adc
push
imul
inc
lea
mov
pop
jb
mov
pop
inc
inc
sub
mov
lahf
int3
push
dec
dec
or
mov
pop
nop
loope
fwait
mov
inc
xor
cmc
cmp
push
push
xlat
mov
idivl
loop
jl
cltd
mov
mov
shlb
push
loope
call
cmp
and
mov
repnz
sti
xchg
adc
fisubrl
in
popf
sbb
dec
sub
xor
fnsave
mov
xor
jbe
test
loope
dec
lods
pusha
push
or
lcall
imul
jne
xchg
subb
adc
cld
jo
sub
iret
out
pop
push
fidivrl
jl
add
jl
sub
and
dec
cmp
cmc
push
rorb
mov
dec
in
cmp
je
inc
mov
pop
inc
divb
xchg
insl
mov
call
pop
and
and
push
divl
xchg
push
push
pop
adc
xchg
arpl
mov
in
mov
addr16
cltd
mov
mov
lock
mov
cmc
cmpsb
adc
push
add
ret
push
xchg
mov
icebp
inc
hlt
mov
push
push
mov
call
or
push
rol
and
sub
sub
xchg
add
cwtl
lock
sbb
lret
adc
or
in
push
shll
mov
sbb
or
xchg
clc
dec
mov
fs
stc
mov
xor
clc
ret
fistps
lds
fiadds
in
adc
mov
lahf
cli
jb
pop
dec
push
push
cmp
inc
xchg
jge
sbb
and
xor
div
mov
dec
inc
ret
es
iret
xchg
mov
outsl
sub
icebp
arpl
imul
pop
out
add
sbb
jmp
sahf
jb
hlt
inc
shr
ficompl
imul
mov
cmpsl
lret
mov
stos
sub
xor
or
xor
fimull
mov
repnz
cmpsl
sub
push
and
adc
dec
insl
adc
in
std
imul
outsl
shrb
imul
dec
pop
or
loope
and
jmp
pop
xchg
cmp
pop
jle
xor
xchg
movsb
xor
arpl
js
xor
adc
out
xchg
fcomip
and
mov
es
in
in
outsb
out
adc
loop
outsb
ss
sub
mov
or
pop
out
inc
lock
pop
push
cmpsb
mov
ficoml
xchg
mov
dec
movsb
dec
inc
mov
pop
cltd
lahf
push
mov
pop
adc
pop
mov
push
and
xchg
in
or
cld
cmp
pop
ss
imul
ja
es
sbb
jno
jg
jl
jnp
push
mov
add
in
mov
lds
sub
or
cmpsb
mov
push
hlt
jge
mov
jo
jecxz
sti
mov
repz
jp
movb
sbb
jmp
pop
das
sbb
call
xlat
cmp
cwtl
lds
fwait
ds
sub
jo
in
mov
dec
std
adc
leave
adc
das
xorb
es
rcll
push
xlat
pop
jns
sarb
lods
mov
repnz
int
sbb
insl
xor
sbb
cmp
pop
mov
jp,pt
bound
fstps
hlt
add
mov
sub
cmc
mov
sub
cmp
pop
cmp
in
std
xor
adc
rcl
xchg
push
push
inc
jl
pop
dec
push
ret
in
cwtl
sbb
and
sbb
xlat
sbb
scas
mov
sub
ficoml
push
popw
adc
adc
pushf
jmp
lcall
rcr
movsl
mov
pop
add
push
jb
jb
inc
cmp
movsl
adc
int
mov
mov
icebp
or
add
xor
add
dec
xorl
mov
or
sub
mov
xchg
mov
jns
jle
dec
rorl
fnstsw
jecxz
clc
jo
push
stc
loope
loope
cltd
ljmp
shl
jnp
dec
cli
xchg
push
mov
std
jae
ret
push
addb
pop
add
or
mov
cld
std
aas
out
dec
mov
add
out
daa
adc
jmp
mov
cltd
xchg
cmp
shrl
push
mov
bswap
aam
xchg
ja
dec
es
nop
cli
sbb
in
call
stos
gs
add
jo
dec
xchg
adc
dec
cmc
pop
call
mov
or
add
sub
andb
repnz
pop
dec
ret
call
mov
movsb
imul
push
xor
mov
xchg
out
jmp
mov
dec
or
adc
ret
jnp
push
lret
addr16
inc
mov
jb
stos
push
cltd
adc
aad
lea
addb
je
sub
mov
add
test
insb
mov
addb
test
sbb
sub
jne
loop
insb
fwait
cmp
cmp
cmp
outsl
leave
cmpsb
and
les
in
jns
inc
or
mov
rcll
cmpsb
divl
leave
xchg
and
das
jmp
insl
fistpll
push
cld
and
scas
scas
test
cld
movsb
outsl
xor
in
pop
lcall
inc
in
out
cltd
or
mov
sub
adc
fcomp
fidivrs
rol
push
ret
dec
outsl
push
ret
mov
mov
push
adc
repz
ja
leave
cmpsb
retw
cmp
mov
mov
ss
mov
cmp
pushf
fcompl
aad
sbb
test
xor
or
adc
into
lea
sbb
mov
mov
xchg
flds
push
jle
jbe
push
xchg
mov
mov
popf
in
mov
pop
sti
rcll
lret
add
test
nop
pop
std
mov
ret
int3
lods
enter
ljmp
pop
xor
adc
lods
adc
fiadds
shll
incb
rdmsr
xchg
mov
dec
inc
std
pop
mov
fisttpll
mov
dec
movsb
ret
mov
ffree
xor
sub
xchg
jg
cmpsb
sub
popf
std
jg
sahf
movsl
jmp
fadds
sub
adc
jns
and
cmp
dec
lods
dec
jns
out
push
arpl
mov
sub
jo
push
dec
add
xchg
loopne
icebp
and
add
out
dec
push
pop
push
mov
push
pusha
sub
pop
data16
mov
mov
shll
repnz
out
dec
subb
xchg
test
lea
lcall
pop
sahf
call
pop
aas
jecxz
and
lahf
cs
or
scas
data16
or
xchg
jmp
pop
adc
sahf
pop
jge
cmpsb
mov
adc
sahf
fisubrl
jl
add
into
jg
jle
sti
dec
push
sbb
push
jmp
stc
mov
cmp
out
mov
js
jecxz
lret
and
cli
mov
xor
ja
cli
sbb
fdivl
jb
in
test
push
out
nop
jle
push
jnp
inc
push
inc
lods
mov
sbb
clc
add
out
fisttps
movsb
mov
outsb
push
xchg
mov
mov
call
cmp
mov
xor
adc
addb
cwtl
insb
dec
cmp
sbb
rep
push
dec
cltd
enter
mov
in
adc
dec
lea
repz
push
mov
dec
sub
adc
dec
push
pop
psrlq
inc
cmpsb
loope
fimull
inc
pop
xlat
negl
les
or
rcrl
mov
mov
dec
lock
cmpsb
lcall
dec
jl
mov
lods
or
mov
xchg
ss
mov
cld
sbb
xlat
and
aam
adc
push
clc
jbe
fistpll
out
adc
inc
dec
push
enter
mov
and
xchg
and
lahf
test
lcall
cwtl
push
sbb
fsubr
das
inc
inc
movsl
push
daa
stos
mov
xchg
psubsb
insb
movsl
das
push
test
mov
mov
test
scas
and
enter
test
addr16
addb
loop
les
sbb
pop
sbb
test
pop
push
aaa
ss
enter
int3
inc
jp
mov
mov
insl
dec
lods
dec
fisubl
fucom
mov
push
and
lods
and
rorb
push
sub
gs
push
pushf
daa
and
xor
sub
lds
imul
pop
mov
cmpsb
adc
or
fistpll
mov
mov
or
clc
into
shr
mov
push
or
lret
mov
dec
cmpsl
ss
stos
loopne
lods
adc
jo
or
jnp
sahf
cld
and
and
mov
jl
and
ljmp
addr16
pop
je
mov
lock
sub
fucomi
jmp
mov
mov
imul
and
mov
mov
push
or
add
fcomip
les
movsb
test
and
xor
push
test
add
cmc
mov
ds
je
rclb
jg
xchg
jns
inc
sbb
push
mov
jecxz
mov
push
adc
pusha
out
pop
das
or
es
ja
sti
orb
ret
adc
je
pop
ja
cli
rcrb
cs
pop
inc
shlb
mov
loopne
out
push
push
add
pop
xchg
jno
cmp
dec
ds
test
aad
lods
cmpsl
int
ret
rcrl
shlb
add
out
fbstp
and
cmp
mov
fistpl
pop
pop
in
insl
jns
stos
enter
mov
mov
push
xchg
sbb
xchg
add
lret
or
pop
loopne
in
call
in
rcrl
xor
mov
push
in
stos
mov
fisttps
jnp
mov
add
pop
sub
pop
push
testl
push
push
ljmp
inc
js
pop
cli
addr16
lds
cmp
and
sub
mov
jmp
push
xor
xor
ror
inc
mov
cmp
into
dec
les
popa
dec
lret
in
fdivrs
stos
popa
je
hlt
jo
ret
mov
cmp
xchg
test
fisubrs
sbb
stos
push
loope
add
push
call
cmp
mov
jb
jmp
dec
into
les
pop
int
iret
push
add
mov
test
mov
loope
cmpsl
scas
out
ss
mov
xorb
outsb
mov
sbb
fstpt
xchg
mov
mov
dec
sub
jge
jle
or
sub
hlt
test
fstp
test
loope
popf
push
movsl
xchg
xchg
andb
mov
push
mov
ds
push
add
insb
lods
lea
enter
sbb
dec
xchg
lock
js
xor
adc
sbb
jge
clc
lahf
enter
cli
cmp
mov
add
sub
adc
scas
sub
sub
sbb
cmp
jle
push
out
fisubs
clc
jmp
in
xchg
sub
mov
xor
jns
mov
cmc
xlat
pop
push
movsl
scas
stos
ja
jp
push
mov
loopne,pn
adc
popl
fisttpl
adc
add
inc
mov
mov
jmp
sub
jg
mov
test
inc
and
sub
and
out
scas
jbe
int3
mov
addl
movsl
push
xchg
inc
mov
jl
cli
fwait
test
sbb
xor
ljmp
repz
push
adc
in
push
xor
or
dec
add
mov
sub
fcomi
jg
xchg
stos
aas
fwait
inc
mov
clc
outsl
aaa
pop
daa
and
jle
mov
cmp
adc
xor
pusha
lock
inc
arpl
and
pop
adc
lret
xchg
test
in
sub
movsl
or
xchg
sbb
sarl
pop
or
addr16
gs
stos
ss
xor
data16
fsub
mov
cmp
nop
cmpsl
cmp
jmp
or
cwtl
dec
scas
inc
inc
or
pop
jg
jge
int
rorl
cmp
mov
mov
cmpsb
lods
in
inc
flds
mov
push
pushf
mov
push
fisttpll
mov
pop
jle
sub
xchg
ljmp
and
jae
cmp
sbb
ss
cmpsb
lret
jns
cmp
stc
inc
and
out
dec
js
clc
mov
sub
push
lea
mov
push
add
fmull
adc
test
xchg
insl
sbb
and
fucom
mov
testl
outsb
pop
jb
sbb
int3
icebp
xchg
aaa
test
push
out
das
xchg
outsl
add
imul
dec
push
or
faddl
mov
in
mov
jo
imul
jg
loope
sbb
test
inc
loope
add
addr16
stos
push
push
sub
mov
std
orl
xchg
ret
test
inc
mov
push
jge
inc
cmp
mov
rclb
xchg
xor
jae
pushf
fisttpl
stc
movsb
lods
inc
aaa
xchg
mov
loop
push
push
xor
lret
stc
xchg
fst
outsb
xchg
cmpsb
daa
stc
outsl
insb
push
adc
or
xchg
adc
fildll
out
xchg
pop
fldenv
jmp
ret
cmp
or
sbb
test
pop
fcmovnu
hlt
jb
cli
push
in
ret
fisubs
nop
xor
or
out
mov
ret
sub
mov
ss
aad
lods
push
pusha
xchg
sbb
sub
cltd
jae
popa
add
push
mov
mov
and
or
fisubs
ja
add
cld
das
cmpsl
jnp
iret
inc
lds
in
jge
pop
test
inc
dec
rcrl
cltd
fisubl
mov
cmc
pop
movsb
out
neg
dec
lods
test
fs
xchg
ret
mov
addr16
lods
mov
xorl
and
pop
xchg
mov
add
adc
inc
pop
addr16
mov
cmp
push
xchg
insl
mov
aaa
fwait
stos
add
std
adc
xchg
pusha
movsl
sbb
jb
popf
and
pop
cmp
sahf
adc
xchg
mov
pop
lds
pop
add
int
jbe
lods
les
jo
sub
mov
xchg
push
mov
ljmp
inc
sub
call
in
mov
mov
push
and
mov
pop
pushf
xchg
xchg
xlat
ds
mov
cmp
sbb
jae
aad
sti
insl
push
sbb
xchg
movsl
push
insb
clc
ret
pop
push
lock
out
xchg
ja
jno
stos
or
inc
stc
test
dec
jp
push
adc
enter
or
js
sub
inc
mov
pop
ret
adc
dec
and
sbb
lcall
pop
and
jb
imul
jmp
inc
cmp
movsl
sub
jmp
ficompl
leave
mov
je
mov
jo
jge
out
xlat
imul
in
test
icebp
mov
fmul
mov
sarl
lock
mov
pop
std
mov
mov
pop
loop
fs
mov
clc
pop
push
xchg
orl
pop
adc
and
add
pop
cmc
jecxz
jb
dec
mov
popa
inc
into
adc
jg
mov
mov
rolb
enter
je
scas
mov
sub
dec
adc
push
and
pop
add
cwtl
jo
dec
rclb
dec
add
imul
scas
sahf
out
cli
movsl
jo
mov
add
in
test
imul
jbe
push
inc
fstps
pop
xchg
mov
cmpsl
pop
sbb
or
xchg
pop
aam
or
sub
xor
add
iret
xchg
push
enter
ret
push
lods
sbbl
jo
test
out
nop
and
xor
arpl
xchg
outsl
sarb
and
sbb
or
or
sarb
adc
outsl
jl
int
fmull
mov
test
push
pusha
stc
mov
push
test
jecxz
lcall
and
jmp
mov
mov
dec
mov
iret
add
fdivrs
pushf
fmulp
xchg
shl
mov
dec
and
dec
stos
adc
push
imul
lret
ljmp
fucomi
mov
sub
pop
pop
outsl
jge
jae
pop
cs
jmp
pop
aaa
cmp
jecxz
inc
test
lock
fs
pop
aas
adc
mov
pop
inc
pop
pop
xor
xchg
repnz
leave
dec
pushf
sub
sub
jmp
xchg
testl
xor
inc
pop
cmpsb
repnz
arpl
enter
and
or
gs
cmp
xchg
sub
or
dec
cli
push
pop
cli
lcall
pop
xchg
outsl
mov
je
outsb
scas
data16
pop
lret
loope
inc
adc
mov
in
dec
cs
inc
dec
jp
mov
stos
xchg
orb
adc
xor
sub
mov
in
movsl
pushf
pop
movsb
std
adc
adc
stc
test
xor
rcll
mov
jmp
int3
cmp
pushf
daa
push
outsl
and
push
xchg
ret
imul
xor
push
sbb
cmpsb
testb
push
test
xor
cmc
xchg
lret
ljmp
xor
mov
push
divb
bswap
push
or
pop
jle
insb
es
adc
mov
orl
push
sub
fsubs
add
lcall
xchg
in
popa
sub
pop
bound
test
or
dec
and
aad
adc
add
dec
ja
repnz
cmp
pop
and
cmpsb
dec
cmp
and
insl
insb
mov
push
and
push
mov
add
adc
outsb
xorl
xor
pop
mov
or
pop
sub
js
in
jmp
mov
mov
notrack
sbb
sahf
pop
ljmp
sbb
in
loop
mov
lret
js
pop
xchg
mov
or
arpl
sub
xchg
mov
xchg
push
pop
sbb
lock
sahf
popf
dec
popf
out
out
je
cmp
mov
test
cmpsb
sub
pop
mov
or
adc
mov
movsb
push
push
jb,pn
mov
mov
cs
scas
int
loope
or
ljmp
js
fsts
pop
xchg
test
int3
mov
imul
jp
ja
dec
pop
dec
imul
hlt
sbb
mov
pop
xorb
cli
mov
dec
xchg
pop
push
lods
mov
insl
icebp
and
push
lock
push
outsb
xor
push
cltd
pop
add
add
mov
jns
dec
cmp
sbb
data16
sbb
add
mov
mov
dec
sbb
xchg
out
insb
jae
das
call
shlb
xor
andb
mov
ror
jns
sbb
loop
push
addr16
fwait
daa
mov
call
arpl
pop
sbb
bnd
shll
or
mov
repnz
or
push
mov
jb
jmp
mov
sub
stc
cmp
pop
clc
jl
ds
mov
add
divl
fstpt
outsb
outsl
data16
lret
fdivr
xor
fsts
jle
adc
daa
in
arpl
scas
jb
gs
insb
out
stc
scas
mov
mov
pop
daa
inc
mov
push
mov
cmp
lea
xchg
dec
mov
jecxz
sub
inc
pop
inc
and
rclb
and
fsubs
aam
xor
cli
and
mov
mov
mov
nop
stos
push
pop
in
scas
cltd
adc
jbe
xchg
jno
pop
mov
sti
iret
imul
or
adc
out
cmp
xchg
pop
sbb
lcall
mov
mov
jns
bound
and
fwait
pusha
fwait
call
ret
add
std
lods
ja
jae
mov
sbb
loopne
mov
mov
std
mov
mov
imul
mov
inc
mov
idivl
lock
lock
dec
cmpl
stc
xor
mov
stc
inc
xor
shr
adc
clc
sub
enter
fistl
xchg
mov
faddl
sahf
xchg
and
fidivl
lods
orl
sar
les
ljmp
mov
xor
sbb
testl
cmpl
aad
cli
jo
scas
ja
leave
in
test
adc
out
stos
test
xor
aad
push
ljmp
shrl
stc
loope
aaa
pminub
out
fwait
cltd
adc
test
xchg
push
mov
loopne
mov
cmpsl
xchg
sahf
mov
add
adcb
je
divl
lret
cli
jmp
cmp
mov
xor
inc
inc
adcl
pop
lret
fcoms
adc
mov
sbb
push
arpl
lods
xlat
inc
scas
out
scas
fs
hlt
enter
adc
scas
add
xchg
push
bound
inc
push
gs
pop
mov
dec
int
stos
add
shll
and
add
insb
arpl
movsl
dec
mov
xor
scas
dec
jg
inc
mov
mov
cwtl
and
xchg
popf
inc
hlt
cltd
jle
pop
and
addb
adcl
nop
or
pop
out
or
adc
into
hlt
movsb
lods
add
jno
or
shrl
mov
xchg
mov
rorl
loop
dec
divb
nop
mov
lea
testb
out
ds
and
mov
jl
mov
in
sbb
adcl
insb
outsl
popf
mov
add
repnz
lds
rol
xor
pop
pop
cmp
rcl
fldt
jecxz
ldmxcsr
mov
xchg
fsubl
jge
mov
push
push
lods
in
out
or
sahf
xor
jbe
mov
mov
divb
adc
test
aam
out
cmp
sbb
mov
push
mov
xor
inc
mov
mov
in
sbb
mov
sbb
lcall
mov
fildll
and
lret
jns
loop
cli
iret
push
js
popa
mov
icebp
mov
rclb
aad
shrl
cmp
dec
push
xor
movsl
dec
mov
sub
push
jbe
call
mov
push
out
arpl
aas
dec
dec
and
push
sbb
mov
loope
jne
out
sub
cmp
xor
push
into
test
and
xor
jnp
test
mov
dec
push
aam
push
push
mov
jae
sahf
int
jl
sub
mov
fildl
pushf
xchg
jle
inc
mov
mov
js
fidivl
aas
fs
jb
fisubs
xchg
imul
mov
imul
jnp
inc
jnp
lods
sti
dec
adc
cmc
popf
inc
fiaddl
xchg
in
xor
mov
lahf
dec
leave
mov
int3
mov
iret
push
sub
fwait
and
es
movb
in
jmp
addr16
jle
adc
adc
xor
adc
and
dec
pop
imul
or
jg
sbb
dec
adc
xor
add
lcall
popf
stos
pcmpeqb
pop
test
pushf
idivl
push
cmp
xchg
sub
fwait
push
mov
sahf
add
inc
xchg
jns
or
shlb
out
adc
or
scas
aas
mov
aad
jge
repz
sar
inc
popf
ret
pop
dec
xchg
loope
adc
and
repz
loope
sarl
and
lahf
adc
sub
xorb
xchg
xchg
push
inc
adc
shrb
scas
and
cld
sar
dec
mov
movsl
xor
lret
sarb
mov
and
mov
iret
in
pusha
call
stc
jge
mov
pop
aam
inc
popf
mov
inc
ds
hlt
xchg
push
nop
mulb
aaa
insb
scas
loop
sub
sub
std
ljmp
sub
adc
sub
fisttpll
push
sub
imul
sbb
sahf
mov
and
adc
pop
xor
notb
je
subb
jns
add
xor
insb
adc
or
mov
pshufw
pop
sub
cmp
or
or
dec
sbbb
outsb
fbld
es
sbb
and
dec
mov
fnstcw
inc
inc
imul
data16
pop
shld
xlat
es
add
aaa
stos
mov
and
ja
sub
sbb
xor
mov
aas
xchg
movsb
or
lcall
sub
adc
or
inc
cmp
xor
out
lahf
imul
mov
dec
js
push
dec
int3
into
loop
out
aam
and
fcoms
shll
lea
jnp
mov
insb
jecxz
lea
aas
loop
mov
int3
xor
xor
subl
dec
jne
and
xor
dec
cltd
jae
push
xchg
mov
fst
insb
fstpl
sub
jno
xor
jb
das
sub
movsw
push
and
test
in
in
push
and
push
mov
mov
add
movsb
or
out
pop
dec
and
xchg
scas
pop
jo
idivl
or
jg
ljmp
cltd
loop
and
push
lret
shrb
push
sub
inc
inc
jmp
outsb
fs
in
test
mov
mov
addr16
stc
aad
lea
shlb
jge
adc
lds
dec
addr16
push
dec
clc
dec
fsub
mov
popa
stos
insb
fs
fs
lcall
mov
jns
fisubrs
cmpsl
xchg
mov
fdivr
clc
pop
stos
jecxz
mov
adc
lret
mov
shl
and
mov
adc
call
es
add
fs
cs
mov
inc
scas
fists
pop
stos
stos
aas
sbb
fsubr
jg
adc
dec
sub
and
cmp
sahf
and
adc
scas
and
lods
cmc
bnd
sbb
and
inc
daa
testl
add
jl
mov
out
lods
fstpt
mov
mov
iret
int
subb
and
leave
pop
adc
shr
je
insb
add
push
hlt
outsl
jge
test
mov
cltd
xchg
xchg
jns
and
adc
cs
push
ja
adc
inc
xchg
push
pop
es
or
movl
mov
les
outsb
in
mov
cli
psrlq
dec
fcomps
out
or
jmp
or
gs
std
aaa
lret
inc
test
or
xor
fimuls
mov
popf
and
notb
insl
and
loopne
dec
xchg
xlat
test
pushl
shlb
ljmp
je
push
sbb
adc
sahf
insl
dec
lea
insl
and
or
adc
push
mov
push
add
aad
dec
lret
dec
jbe
ficompl
sub
adc
inc
pop
jno
insb
mov
das
sub
mov
cli
aad
add
int3
mov
arpl
pop
adc
lret
or
add
pop
lahf
outsb
xchg
inc
push
mov
nop
sub
xor
jae
imul
xchg
test
lds
pop
mov
sub
shrl
jbe
or
jno
cmpsb
pop
mov
shlb
nop
mov
shrb
ja
dec
shll
xchg
sarb
rcrb
sub
iret
popf
imulb
mov
adc
fs
je
fdivrl
add
stc
cmp
les
push
mov
pop
push
stos
sahf
leave
xchg
cmp
cmp
push
movsl
jge
push
jnp
repnz
add
cmpsl
xchg
adc
lahf
inc
mov
fnstsw
lret
push
in
loopne
pop
push
test
mov
xchg
mov
and
inc
addb
arpl
sub
das
rep
mov
divb
popf
data16
lock
xchg
mov
mov
mov
adc
and
cltd
adc
std
fadds
push
mov
cmp
add
sbb
adc
shll
or
and
xchg
fwait
jbe
inc
sub
loope
int
mov
push
xor
pop
cld
arpl
push
sub
cld
xor
es
sti
dec
dec
test
push
sub
aam
mov
push
inc
in
fs
mov
fsubrp
mov
cli
cltd
adc
sbb
popf
sbb
pop
cmp
push
mov
xchg
or
fbld
pusha
push
sbb
pop
cmp
je
dec
mov
push
sahf
push
mov
rol
dec
xchg
ret
inc
repz
mov
sub
lahf
jno
lret
and
aam
popa
add
xchg
into
cwtl
mov
and
mov
enter
nop
mov
stc
mov
addb
dec
in
add
pop
pop
scas
inc
icebp
xchg
mov
push
fwait
pop
mov
sub
std
fidivrs
addr16
xchg
inc
decl
mov
xor
outsb
mov
lods
mov
fs
mov
jl
xor
insb
je
inc
dec
addl
lahf
adc
xchg
xchg
rolb
int
aam
testl
cmp
jae
mov
aam
add
test
fcoml
imul
inc
dec
es
test
lret
push
dec
pop
lcall
test
fisubl
insb
jecxz
xor
jne
pop
inc
lds
xchg
enter
sarb
lock
filds
sbb
out
lret
mov
inc
push
in
lods
or
dec
pusha
gs
and
push
mov
shlb
fcoms
xchg
arpl
dec
nop
clc
fistps
inc
mov
popf
pop
es
lahf
fstpl
cmp
clc
dec
jno
push
loope
sbb
xchg
jb
aam
inc
add
popf
and
jae
pop
cli
ja
rcr
jb
mov
sub
mov
add
cs
sbb
daa
pop
push
push
stc
or
aas
scas
xchg
call
push
pop
add
xor
cmp
xor
and
icebp
ja
cmpl
sub
aas
pop
push
mov
rcl
dec
sub
cld
shl
pop
mov
jmp
loopne
push
pop
or
icebp
jb
call
inc
addr16
popa
int
loope
icebp
sbb
ljmp
xorb
push
aaa
test
movsb
mov
jne
cmp
cmp
and
dec
repnz
jne
jno
orl
lods
sbb
movsl
jle
movsl
and
test
or
mov
adc
jp
jne
sbb
outsb
pop
daa
sub
inc
lcall
fsubrs
je
dec
mov
jl
movsl
cmp
pop
int
and
adc
mov
add
xor
ds
ret
ret
push
sahf
hlt
jecxz
pop
xchg
or
xchg
cs
mov
pop
xchg
add
jl
inc
repnz
inc
outsl
add
daa
icebp
mov
mov
or
arpl
pop
dec
jnp
bound
in
mov
movsb
mov
icebp
fsubrl
and
mov
popa
sub
and
mov
mov
je
loop
sbb
mov
repnz
mov
add
cld
mov
mov
imul
push
sarb
mov
jg
repz
add
hlt
insl
mov
stc
lahf
ffreep
pop
mov
stos
in
inc
pushf
lods
gs
jne
inc
cmp
cmp
push
push
insb
adc
sub
loope
dec
xor
out
sub
rolb
pushl
dec
pop
bound
stc
adc
adc
adc
pop
cli
movsl
push
jecxz
push
iret
sub
jb
adc
adc
sbb
dec
sar
push
in
js
or
add
adc
and
mov
dec
jl
or
jnp
push
cmp
out
lea
mov
out
repnz
test
je
fldcw
and
int
inc
outsl
shlb
xchg
or
dec
mov
int3
lcall
jns
pop
adc
or
cmpsl
adc
jbe
loope
orl
into
cmp
push
add
jl
arpl
jmp
pop
xor
push
and
dec
in
cmpsb
cmp
xchg
scas
jl
inc
stos
xchg
adc
and
shll
out
pop
xor
pop
cmp
xchg
lcall
adc
imul
imul
out
mov
mov
clc
sahf
pop
ret
mov
push
mov
lock
sahf
add
in
jg
das
test
sub
dec
and
sbb
leave
dec
push
inc
addl
mov
ljmp
es
lods
mov
jb
jg
mov
fdivs
sbb
pusha
xchg
enter
lods
or
mov
ret
ficoml
cli
imul
lret
and
and
xor
jecxz
and
or
sub
aaa
test
dec
lea
cs
mov
add
cmp
adc
lret
cmpsb
jbe
aas
lcall
jbe
mov
cmpsl
rorb
cmp
shll
or
popa
roll
pop
stos
inc
or
pop
dec
ja
jmp
std
jne
dec
bound
xchg
add
test
or
shr
cli
rcrl
cmp
loope
sub
pusha
pop
enter
xchg
jge
add
call
push
pop
dec
or
popf
pop
mov
repnz
pusha
pushf
stos
insb
cltd
imul
out
and
stos
push
outsb
xchg
stos
xchg
out
stos
lods
mov
mov
pushf
mov
shrb
xor
retw
inc
jp
xchg
daa
sub
cld
cmpsl
push
fnsave
loop
icebp
test
jbe
mov
pop
xchg
and
mov
es
ret
rcll
stos
sti
popf
lds
pop
lcall
xchg
dec
jne
lret
sbb
je
out
pop
cmp
jbe
rorl
mov
xchg
out
xchg
pop
sub
rorb
jge
std
push
or
mul
inc
sbb
jns
and
ss
cld
popa
mov
in
pop
xor
cli
jg
xchg
mov
push
jl
imul
int
std
cld
inc
dec
dec
mov
sti
pusha
adc
mov
xor
dec
fistpl
clc
pop
daa
das
pop
fistps
add
mov
cltd
popf
push
outsl
cltd
cmp
shl
xor
fsubrp
cmpl
inc
or
pop
or
addr16
add
inc
cmp
ret
xchg
jnp
sub
lds
in
aam
into
mov
lret
xchg
popa
jg
int
dec
mov
xchg
push
lods
and
pop
sub
popf
xor
lods
xchg
adc
xor
dec
add
lcall
mov
notb
int3
cmpsb
fldt
pop
lds
add
push
fsubl
ds
cmp
pop
mov
mov
lods
add
fld
jecxz
mov
jecxz
or
pusha
ss
mov
dec
sub
push
xor
in
push
jecxz
pop
adc
pop
jp
in
into
jno
aas
subb
mov
and
jp
shr
outsb
scas
pop
scas
je
out
dec
bound
adc
nop
mov
xor
jnp
test
cmpsl
aas
pop
in
mov
lock
xorb
lcall
xlat
ret
add
lds
xor
inc
aam
sahf
lock
sub
xchg
adc
and
fdivs
mov
leave
rorb
sbb
notb
mov
insb
push
je
stos
adc
cli
add
xor
out
sbb
gs
ret
push
ret
popa
inc
jne
insl
inc
add
insl
fs
adc
jb
ja
jge
sbb
in
in
and
push
hlt
xor
jl
stc
xorl
andl
jmp
pusha
andl
shl
faddl
cmp
call
xchg
arpl
lcall
add
arpl
sub
into
les
pushf
adc
jo,pt
and
hlt
adc
adc
mov
push
pop
xchg
test
fsts
cmp
or
call
xlat
push
dec
fwait
push
mov
lods
push
cmc
pop
enter
lret
sub
xchg
xchg
outsl
push
enter
shlb
out
imul
mov
mov
fs
cmp
adc
xor
and
push
add
xchg
fld
fdivrl
popf
filds
imul
rcrl
call
mov
pusha
or
xor
push
ljmp
mov
lret
xchg
cld
lcall
jp
and
pushf
dec
fistpll
popa
dec
popa
shll
jno
sub
lret
mov
xchg
inc
cmc
lods
arpl
iret
imulb
enter
jns
adc
push
push
jnp
cltd
mov
and
mull
sub
fisubs
test
or
cmp
dec
mov
sub
sbb
xor
shl
push
or
repnz
test
adc
sbb
lods
bound
dec
xor
add
add
aas
imul
test
roll
fsubr
sti
sbb
cmpsl
aas
clc
mov
jne
pushf
adc
mov
mov
lea
or
push
jg
xor
or
and
xchg
fwait
sub
push
xchg
mov
movsb
fildll
xchg
out
cmp
fwait
sbb
pop
inc
test
fwait
daa
repz
inc
bound
cld
and
ss
jecxz
outsb
test
push
jg
jno
mov
and
push
test
push
xchg
aad
add
and
mov
mov
clc
repz
jmp
xchg
mov
rorb
in
pusha
sbb
xor
imul
lods
cwtl
add
add
adc
arpl
call
ja
jmp
inc
cmp
repz
sbb
or
ficompl
push
push
in
iret
ficoml
add
jno
fwait
sub
mov
jne
inc
inc
inc
mov
push
pop
pop
cltd
lret
mov
js
mov
or
loop
les
mov
add
pop
adc
scas
push
pop
repz
call
push
test
out
mov
xchg
cmpsl
adc
pop
cwtl
dec
dec
fistl
test
loop
rolb
jae
xor
adc
dec
stos
and
push
mov
mov
fs
mov
or
loop
rcr
insb
mov
icebp
cwtl
lcall
ljmp
sbb
enter
xchg
nop
hlt
imul
sbb
pop
ds
cmp
inc
push
push
adc
ljmp
into
aaa
outsb
popf
stos
ds
mov
scas
lea
bound
adc
adc
push
inc
push
cmp
or
inc
pop
cmc
mov
mov
xchg
xchg
addr16
into
ja
add
xchg
xor
mov
test
push
mov
stos
inc
jecxz
cmpsl
dec
pop
cs
xor
scas
xor
repnz
das
or
mov
sub
pop
mov
inc
adc
cmp
repz
subb
mov
dec
or
insb
jl
mov
jb
mov
shlb
push
ret
ds
jae
out
sbb
aam
mov
xchg
out
mov
mov
ret
xchg
mov
cs
notl
push
mov
daa
rol
push
rcrl
adc
pop
dec
add
imul
fdivrp
sub
and
xchg
and
jno
cmp
sub
or
mov
inc
and
sub
mov
lods
dec
popf
aam
cmpsl
mul
aad
es
jns
push
lahf
add
sub
mov
adc
cmc
mov
loope
fists
sbb
pop
stos
add
test
adc
ljmp
movsl
int3
adc
sahf
mov
pop
inc
test
into
lcall
or
loop
mov
test
mov
jne
test
and
scas
std
adc
pop
enter
in
dec
sbbl
push
nop
leave
xchg
je
pop
bound
xorb
lret
imul
jbe
shrl
cld
cld
mov
cmp
jns
mov
loope
xchg
dec
loope
xor
dec
stc
xlat
mov
dec
in
add
pop
dec
cmp
pop
jg
jecxz
insb
fistl
jle
or
inc
arpl
repz
push
fwait
mov
cmp
pop
das
cmp
and
lock
adc
in
into
mov
rcr
cmc
aad
mov
jbe
xchg
call
sarl
sahf
cmc
cmc
aas
leave
rorb
jg
or
dec
or
or
clc
mov
mov
or
test
fwait
ljmp
inc
jo
jecxz
inc
sbb
sti
inc
pop
push
mov
sub
xor
js
inc
dec
loope
iret
sar
xchg
and
pop
sbbb
scas
add
fcmovnb
jno
rorl
clc
push
cmp
dec
pop
xchg
fwait
xlat
or
adc
or
lods
mov
lock
pop
mov
addr16
jl
adc
clc
jge
lods
movsb
pop
jno
push
sub
cmp
pop
sbb
pushf
push
lcall
leave
cmc
stos
mov
pop
fdiv
imul
cmpsb
and
rol
in
idivl
fwait
test
sti
or
pop
adc
cmpsl
xchg
hlt
and
xchg
dec
mov
lods
adc
xchg
adc
lret
jbe
add
xor
and
xchg
in
icebp
xchg
addr16
push
sub
pop
fs
xlat
into
mov
hlt
sahf
dec
jbe
xor
mov
arpl
lock
push
imul
or
repz
data16
push
cli
push
sub
mov
inc
xor
rcrb
imul
cmpsl
addr16
mov
in
jo
movsb
aam
retw
push
pusha
and
adc
inc
arpl
aas
rcll
in
lea
dec
jecxz
xor
mov
sub
mov
movsb
repnz
movsb
movsb
xor
fwait
icebp
mov
fadds
dec
fisubs
mov
push
ja
fisttps
das
mov
adc
ret
sub
dec
out
lret
fwait
push
mov
push
dec
fsubr
xor
hlt
jmp
lahf
subl
cmpsb
jl
jnp
fnstcw
pop
lret
adc
fsubl
and
data16
xchg
lock
or
dec
sbb
inc
xor
and
repz
test
mov
lcall
ss
fiadds
sub
or
aam
add
push
incb
test
cmp
lock
mov
and
ss
xor
sub
mov
and
shlb
adcb
dec
pop
add
mov
repz
xchg
sub
cld
aaa
add
iret
hlt
push
mov
cltd
pop
jl
sub
arpl
out
mov
mov
out
arpl
popa
adc
jp
sub
mov
inc
push
scas
lock
push
rol
leave
or
lahf
icebp
insb
jle
das
loop
sbb
scas
ds
lret
mov
xchg
loop
and
cmp
push
xor
fisttpll
fstl
mov
cmp
scas
xor
mov
roll
xor
add
movsb
jg
inc
loope
cld
lods
xchg
outsl
mov
pop
cmpsb
cltd
mov
mov
test
cltd
mov
testl
sbb
les
scas
cmpsl
fninit
xchg
cmpsl
sub
pop
stos
adc
int
gs
mov
mov
and
xorb
sahf
push
cmc
test
dec
mov
adcl
lods
adc
cltd
or
jb
lahf
xor
sbb
movsb
sbb
sbb
push
ja
cltd
inc
inc
mov
lcall
adc
clc
inc
jge
sti
pop
fs
daa
inc
popa
into
iret
xor
fdivl
jns
adc
xor
stos
es
in
jae
es
mov
jge
enter
inc
andl
sbb
mov
iret
ds
gs
idivl
sub
sti
inc
mov
das
add
shlb
call
lahf
xchg
pop
xlat
and
sub
pop
mov
out
addr16
dec
inc
lods
loopne
cmc
shl
insb
out
pop
xor
in
pop
sub
leave
xor
mov
sub
xor
scas
add
inc
mov
mov
orl
dec
pop
lcall
jno
adc
xor
icebp
sbb
call
sti
dec
pop
popf
mov
mov
mov
fdivr
pop
cmpsb
lods
in
sub
je
push
dec
dec
add
xor
mov
xchg
and
in
xor
pop
cmpsb
stos
mov
mov
test
arpl
dec
ds
xchg
repz
xchg
adc
pop
or
cltd
push
mov
xchg
shll
jecxz
add
xchg
repz
cli
lret
mov
xor
mov
mov
xchg
test
negb
cmp
push
push
loope
dec
push
xor
add
jno
dec
pop
xor
cmp
mov
repz
sbb
aad
cmpsb
test
in
jg
aad
in
mov
dec
and
jae
mov
or
idivl
insb
mov
pop
movsl
scas
xor
push
mov
in
push
out
mov
inc
ror
mov
adc
pop
packuswb
xchg
ret
mov
inc
stc
cld
ljmp
dec
lods
push
push
push
cltd
cmp
stos
fidivrl
mov
adc
push
subl
sub
xor
lret
jne
jmp
call
sbbl
pusha
sub
xlat
inc
cmp
sub
jmp
xor
adc
dec
push
mov
jmp
pop
cmp
arpl
cltd
repz
ficoml
mov
pop
xchg
mov
jae
jo
inc
lods
push
aad
xchg
in
mov
adcb
popa
pop
mov
xor
cmp
mov
jno
or
adc
test
pop
rolb
enter
shrb
xor
in
out
out
push
mov
xchg
sbb
and
inc
cltd
jb
push
mov
bound
and
and
push
sbb
movb
aad
iret
orb
sbb
int
xchg
mov
xchg
out
mov
push
jmp
and
gs
and
shrl
push
sub
mov
push
xchg
mov
xor
inc
dec
push
mov
pop
xor
inc
jg
pop
outsl
imull
xchg
push
or
pop
aad
lret
inc
jb
cli
push
adc
dec
and
and
out
jp
imull
sbb
mov
dec
jb
push
fldcw
fsubrs
jbe
xor
lods
imul
out
inc
xchg
call
test
pop
pop
dec
cmpsb
mov
mov
aaa
xchg
sbb
sub
add
cwtl
jg
mov
out
ret
pushf
pop
movsl
inc
pusha
stos
inc
test
xchg
mov
xor
cmpsl
jnp
cli
int
cmp
jnp
or
stos
stos
addr16
push
cmp
ss
rep
inc
clc
mov
mov
aam
and
xchg
or
cmp
ss
cmpsb
jne
inc
xchg
stc
in
jl
inc
in
push
inc
pop
or
fisttps
cmp
aas
icebp
lcall
push
or
pop
pop
sbb
cmp
lea
enter
fsubrs
cs
sbb
push
out
rcrb
in
cs
in
and
mov
inc
mov
mov
fwait
dec
sti
xchg
aas
sbb
mov
mov
or
out
aad
sub
jecxz
and
add
icebp
add
ljmp
jp
je
rcll
push
push
pop
add
push
pop
or
int3
iret
cmp
pusha
nop
mov
xor
fiaddl
pop
add
or
pop
imul
xchg
iret
cmp
adc
ja
jecxz
xor
repz
or
mov
adc
mov
ss
mov
or
jge
jno
pusha
inc
lret
mov
pop
test
push
shrb
sbb
mov
cmpsb
loope
les
cmpl
push
popa
sub
ret
arpl
popf
lcall
mov
fisubrs
fcmovb
pop
adc
sbb
jle
mov
outsl
add
fmulp
mov
aas
sub
xchg
outsb
cmpsl
xor
and
and
movsb
dec
sbb
inc
and
popf
mov
cmp
loopne
sbb
test
jl
test
sbb
mov
inc
pop
cmpsb
add
sbb
aas
movsb
pop
xchg
jns
movsl
push
pop
mov
ret
sub
mov
cmp
icebp
dec
add
stos
mov
push
push
inc
jp
inc
out
scas
push
xchg
fsub
dec
lods
pop
shr
lock
daa
in
into
inc
mov
pop
inc
add
shl
scas
out
mov
cmp
and
aaa
aaa
outsl
push
insb
dec
push
jae
lret
stc
shlb
jb
aas
sub
cmp
jns
mov
fists
shr
scas
pop
cld
add
push
add
mov
dec
shrb
insl
sub
or
xchg
popa
outsb
mov
sbb
out
add
pushf
aad
cmpsl
dec
cmp
movsb
icebp
lgdtl
cmp
mov
add
pop
neg
jge
fiadds
lods
dec
add
cltd
xor
fwait
imul
sbb
cmp
daa
std
repnz
imul
imul
xor
pop
inc
mov
and
and
inc
xchg
jmp
sbb
ret
xchg
popf
test
mov
sbb
dec
inc
fcmovb
fxam
or
mov
push
xchg
mov
xchg
das
aas
sarl
sbb
test
fwait
in
cmp
mov
sbb
pusha
dec
jg
sub
ja
aad
jo
stc
adc
in
mov
mov
outsb
popf
es
dec
insl
jp
pop
repnz
ficoml
sarb
leave
icebp
xchg
clc
decl
repz
int
jae
xor
add
mov
inc
cmp
or
mov
add
out
fstpl
out
mov
xchg
aad
add
adcl
pusha
jge
push
les
call
push
sbb
push
cwtl
or
push
mov
jl
jmp
mov
ja
test
adc
inc
adc
jmp
cmp
sbb
sbb
rolb
mov
jnp
pop
sbb
mov
in
stos
push
das
movsl
sbb
ja
mov
mov
dec
push
mov
nop
cmp
icebp
lea
sub
repz
or
push
lahf
xchg
jmp
insb
cmp
dec
fcmovnbe
pushf
lock
mov
sbb
sti
dec
sub
xor
aaa
fistpll
inc
test
into
ljmp
inc
push
repz
inc
xchg
scas
ss
rcrb
roll
push
mov
sbb
mov
ficoml
fsubl
dec
xor
stos
js
rcrb
adc
mov
mov
sete
rorl
inc
or
mov
sub
inc
mov
cli
daa
stos
idiv
lahf
negl
popf
sbb
dec
adc
sti
scas
add
ss
mov
push
adc
in
cwtl
mov
les
mov
int
es
or
mov
sbb
loop
cs
dec
push
jmp
aam
push
push
xor
sub
xchg
xchg
fs
and
mov
sbb
shl
into
pop
and
dec
loop
xor
andb
push
mov
scas
rcl
xor
popf
mov
jnp
cmpsb
out
out
mov
dec
aam
inc
jp
or
mov
pop
push
pop
aaa
in
scas
cld
mov
inc
xchg
or
subb
int3
xchg
fstpt
jp
stos
mov
pop
jns
pop
clc
popf
cmc
roll
pop
jecxz
xor
subb
jno
inc
scas
xchg
insb
movsl
inc
push
lods
mov
andps
sub
test
mov
insl
adc
not
xchg
or
shl
adc
in
cmp
sahf
into
add
mov
into
xor
lcall
cmp
or
test
pusha
or
arpl
mov
mov
scas
out
incb
push
fisubs
sbb
out
mov
loopnew
out
push
jns
push
jmp
scas
loope
repnz
rolb
and
mov
repnz
pop
stos
into
add
lret
sbb
xorps
in
pop
lcall
jnp
popf
lods
lahf
or
add
clc
sub
add
pop
cmp
test
test
rorb
mov
inc
mov
pop
push
data16
inc
rol
jb
shufps
lds
shlb
adc
pop
sbb
sbb
sahf
mov
xor
sub
and
push
out
imul
inc
int3
mov
lcall
sub
shr
lcall
ds
out
xor
faddl
push
inc
lret
xchg
ja
push
loopne
mov
add
fwait
inc
mov
shlb
aaa
and
xor
sub
mov
loopne
fsubrl
xchg
sbb
ja
jns
clc
dec
push
shrb
jbe
addl
push
sbb
out
pushf
mov
out
xchg
add
sub
inc
cmp
pop
xor
aad
jp
test
pusha
sbb
mov
fs
sub
dec
sbb
fcmovbe
fdivl
xlat
and
fdiv
je
mov
pop
outsb
and
sub
adc
inc
push
lock
jg
scas
adcb
sahf
mov
mov
sbb
mov
in
mov
xchg
mov
pusha
cltd
scas
lods
jmp
xlat
aaa
inc
test
lods
lock
xor
call
xor
mov
adc
and
push
bound
jge
enter
pusha
pop
aas
and
clc
daa
aaa
in
add
mov
shll
nop
sahf
push
in
jne
repnz
testl
popa
mov
cmp
xor
add
pcmpgtb
arpl
push
ret
sbb
aaa
lret
ret
cmp
enter
cmc
pop
int3
dec
enter
sbb
and
xchg
pop
push
ljmp
jne
ret
push
popa
inc
ss
pop
ret
out
mov
cld
leave
xlat
pop
daa
les
mov
adc
or
in
inc
test
push
jae
pop
add
mov
out
out
push
xor
mov
inc
loopne
jg
jecxz
xchg
push
adc
dec
fists
dec
or
call
dec
xor
in
dec
daa
push
mov
mov
sub
dec
daa
pop
jns
mov
dec
and
inc
sub
mov
jg
imul
ror
div
call
mov
xchg
sbb
jp
inc
fldz
fcmovnu
mov
fwait
add
xor
in
pop
mov
outsl
in
jp
negl
mov
inc
movsl
dec
pusha
enter
sti
lock
add
imul
adc
sar
in
jo
xchg
mov
pushf
shlb
mov
mov
int3
outsl
test
sub
in
repnz
cmp
push
ret
addr16
popa
cmp
xchg
in
aam
dec
inc
pop
gs
inc
js
test
jnp
lea
mov
adc
movsl
xchg
lcall
das
arpl
mov
and
movb
cld
push
lcall
es
xchg
inc
incb
mov
sub
sbb
adc
cmc
or
out
andl
dec
mov
mov
mov
add
lahf
pop
mov
scas
ds
andl
adc
lock
pop
add
aas
xchg
out
hlt
nop
and
scas
push
push
adcl
and
xchg
sbb
and
in
gs
jo
jle
insl
xor
xchg
push
fmuls
mov
pop
xor
pop
inc
out
mov
stc
mov
sbb
popf
repz
mov
int3
lods
dec
call
sub
lret
aaa
push
sub
sub
shr
push
in
add
aam
inc
dec
jbe
pop
repz
and
push
jecxz
xor
jg
stos
inc
xchg
lret
pop
pop
aaa
mov
nop
ljmp
push
cli
daa
mov
lret
inc
clc
xor
inc
mov
mov
fdivl
pop
xor
pop
push
mov
pop
mov
nop
lods
outsl
les
fsub
test
mov
ljmp
push
call
xor
mov
mov
shrl
scas
fwait
push
shr
out
or
sbb
lods
stc
push
or
or
scas
cmp
cld
cld
fiaddl
pop
push
cmpsl
testl
insl
dec
sti
pop
cmp
andb
leave
dec
mov
add
mov
pop
test
es
dec
adc
nop
cli
push
out
jp
in
xlat
jne
jo
fs
cmp
ret
imul
aas
mov
pop
or
and
fidivrs
notb
gs
pop
push
fldcw
jno
call
adc
sub
iret
rolb
cld
lds
fwait
add
lahf
push
inc
lea
sbb
fcompl
cmc
and
mov
or
movsl
rcll
adc
cmp
in
aam
sub
sub
daa
ljmp
xor
dec
imul
popa
stos
jge
xchg
push
fisubl
fildll
shrb
push
mov
mov
dec
push
stos
sbb
test
in
dec
cmp
and
fcoml
dec
mov
cli
or
sbb
nop
fcom
out
mov
lock
jmp
sub
sti
sub
pop
sbb
mov
push
mov
iret
jecxz
enter
out
enter
mov
jno
jl
rorl
push
les
mov
clc
sbb
sahf
loopne
gs
push
pop
mov
cmpsb
push
xchg
sub
dec
adc
adc
sbb
push
mov
adc
in
ffreep
enter
xchg
pushf
popa
lods
mov
xor
mov
xchg
add
jle
jmp
mov
imul
add
xlat
ret
push
in
popf
inc
divl
insl
rorl
push
ljmp
push
cmpsl
xchg
outsl
mov
je
sahf
push
xabort
outsb
mov
enter
mov
mov
scas
rcll
repz
pushf
nop
add
and
jmp
jmp
adcb
xor
mov
loope
clc
imul
sbb
add
jb
cmp
xchg
out
xchg
loop
jnp
mov
into
lock
into
push
mov
lret
jno
xchg
cld
xor
jno
in
xchg
daa
mov
pop
movsb
out
leave
rcll
cmpsb
js
jbe
hlt
mov
sbb
movsb
inc
sub
cmp
adc
push
pop
cmp
fidivrl
notl
imul
mov
fisubrl
add
jno
arpl
icebp
cmpsb
repz
mov
inc
scas
in
gs
call
jne
jae
rcrb
lret
outsb
push
sbb
mov
or
xor
jno
inc
cmp
cmp
test
and
xchg
push
lods
bswap
mov
push
stc
inc
push
imul
mov
mov
data16
lcall
das
dec
jae
roll
iret
std
xor
sbb
fisttpl
in
stos
xchg
je
popf
popf
add
rep
in
sahf
das
mov
imull
aas
das
test
sti
ljmp
push
icebp
aam
fwait
xor
in
cs
sub
inc
cmp
xor
xor
mov
jg
out
fsub
imulb
add
nop
fildll
xorl
int
out
aas
scas
cld
insb
push
test
push
push
gs
pop
xchg
adc
inc
imul
xlat
insb
mov
pop
xchg
out
pop
mov
testl
insl
jno
mov
test
sbb
mov
jmp
mov
maxps
call
adc
fsubs
ret
imul
add
adc
jnp
adc
jno
out
xchg
sbb
int
cmp
int
sbb
mov
ljmp
pop
mov
int
fldenv
sub
jl
jmp
xlat
jmp
mov
sub
adc
pop
insb
jl
inc
shrb
jmp
push
popa
pop
fmuls
call
push
mov
add
aaa
jno
push
out
mov
dec
mov
xchg
cmpl
mov
popf
outsl
rcr
xorb
adc
mov
jge
fdivp
hlt
pushf
mov
leave
stc
mov
mov
out
fidivl
mov
push
in
add
hlt
add
pop
dec
sub
clc
in
mov
adc
stos
scas
cld
rorb
add
cmp
int3
xor
fwait
pop
sbb
cmp
cmp
pop
data16
xchg
adc
push
cmp
add
jl
shrl
sahf
js
sbb
je
sbb
mov
mov
movsl
adc
pop
ret
rorl
imul
lods
xchg
and
ret
cmpsl
mov
cmp
mov
sbb
push
dec
and
test
inc
mov
cmpsl
adc
rolb
ss
jmp
repz
lods
rcl
js
cmp
pop
popa
loop
shr
mov
sub
test
arpl
or
xchg
jl
adc
inc
lock
mov
mov
dec
adc
inc
notl
adc
out
sbb
icebp
std
repz
inc
shll
loopne
or
fistps
cld
std
jae
mov
jne
mov
sahf
fidivl
jno
aad
push
pop
mov
pop
loopne
rcll
call
dec
fidivl
bts
adc
pushf
es
cmp
cmp
xchg
jmp
cmpsl
push
fidivs
sbb
jl
xchg
and
movsb
push
fs
jno
in
sub
out
adc
fwait
dec
xor
and
jnp
hlt
fiadds
aam
loop
jle
xchg
jb
sar
mov
or
popa
sub
das
leave
adc
rolb
mov
in
das
or
out
push
in
jo
ret
fwait
sbb
popa
xchg
xor
sti
mulw
das
loopne
mov
stc
jl
mov
mov
dec
cli
sub
jge
xchg
push
inc
sub
pop
and
stc
loope
jg
mov
jmp
cmp
mov
xchg
push
lods
jle
add
xlat
or
sub
in
push
rorl
jns
sbb
js
inc
dec
notl
test
jo
into
jbe
push
cwtl
add
lahf
cmpsl
xchg
sti
mov
mov
lds
shlb
push
xchg
or
test
sub
rcl
ljmp
es
sar
xchg
xor
mov
lret
inc
scas
dec
pusha
push
cmp
adc
inc
repz
jl
mov
mov
loopne
ja
sbb
inc
fistpll
add
mov
push
cmpsl
clc
loope
sti
testb
mov
adc
add
mov
sti
add
movsb
sti
and
push
cld
pusha
popa
gs
lods
ljmp
xor
mov
mov
add
insl
jmp
dec
movsl
xor
adc
lock
sub
scas
filds
push
cmc
sarb
push
pop
mov
fcomp
sbb
push
repnz
xchg
in
inc
mov
push
jns
fcoms
pop
and
rol
ror
aas
out
in
mov
sub
or
add
lods
test
out
lahf
test
cmpsb
enter
xor
mov
push
mov
push
aas
movsb
xchg
inc
call
lods
push
adc
filds
je
aaa
into
loop
cmp
cltd
lcall
inc
xor
dec
pop
mov
add
cmpxchg
fsubl
or
mov
dec
inc
push
inc
mov
stc
pop
and
cmp
dec
add
inc
pushf
jns
mov
test
mov
movsl
into
inc
cmp
push
icebp
sbb
adcb
aad
pop
movsb
pop
dec
test
mov
arpl
ret
push
mov
loop
pusha
sti
push
xor
add
mov
fidivrl
pop
lret
imul
mov
adcb
mov
mov
xor
in
or
ja
lods
jnp
icebp
stos
jecxz
or
sbb
insb
cmp
sarb
int
sbbb
and
dec
in
popa
pop
movsl
mov
jge
or
lock
pusha
fdivrs
insb
pop
mov
stos
nop
rclb
daa
cmc
push
sbb
adc
arpl
jno
jne
ss
pop
mov
cltd
call
cmp
rep
xor
rcrl
pop
jne
xor
ss
dec
mov
or
jbe
jbe
nop
sub
arpl
out
out
and
pop
cmpsb
rcrb
movsl
cmovbe
mov
stc
sub
sub
mov
jp
mov
and
sti
dec
std
xor
xor
repnz
push
in
test
movsb
stos
lock
jmp
sub
mov
sbb
cld
inc
cmp
sbb
lret
data16
repz
xor
sti
pushw
xlat
stos
repz
cli
imul
adc
repnz
or
fstpt
test
xchg
pusha
ficoms
in
ss
std
inc
cmp
or
orl
pop
push
mov
jl
sub
ret
js
test
faddp
sahf
pop
adc
mov
dec
lcall
pop
jecxz
mov
out
add
inc
xorb
xchg
cmp
aas
jmp
mov
and
pop
ja
xchg
into
jbe
jnp
std
mov
jae
loopne
or
sub
daa
mov
das
popf
push
pop
jecxz
test
jmp
sbb
dec
jecxz
add
in
mov
jbe
xlat
arpl
and
outsl
mov
inc
mov
testb
xor
inc
pop
jbe
movsb
xchg
inc
insb
pop
lods
sub
jle
pop
lcall
xchg
aam
in
add
dec
inc
cmpsl
dec
pushf
mov
jmp
addb
add
inc
push
dec
pop
sub
mov
and
lret
stc
stos
jae
xor
sbb
mov
and
stos
shr
scas
adc
cmp
stc
je
pushf
aas
xchg
add
test
ja
jmp
pop
mov
pop
cmp
and
push
inc
lret
gs
mov
xchg
loopne
jbe
xchg
fisubrs
ss
push
dec
push
sbb
ds
lahf
pushf
scas
loopne
cmpl
pop
clc
punpcklwd
scas
mov
mov
pop
loopne
mov
dec
in
dec
in
mov
sbb
adc
shl
cmp
jecxz
adc
xor
dec
out
pop
jmp
push
inc
sbb
mov
enter
mov
jne
test
repnz
pop
out
pop
in
push
punpcklwd
outsl
lret
shr
std
mov
sub
cmp
daa
pop
fucomp
mov
dec
jne
pop
pop
mov
push
xchg
into
cwtl
dec
mov
pusha
incb
dec
fstl
xor
mov
enter
out
sbbl
iret
push
push
in
mov
push
adc
lds
dec
dec
in
xchg
xchg
je
pop
lcall
iret
xchg
pop
inc
xchg
cmpl
in
xchg
sbb
fistpll
movsl
push
inc
gs
mov
sbb
pop
push
adc
sub
stos
or
sbb
popf
xor
add
in
sub
inc
fldenv
adcl
aam
ds
xor
in
mov
mov
jecxz
idivb
mov
lods
jb
hlt
push
sbb
jo
es
js
ja
int
pop
pop
mov
push
add
sahf
xor
push
out
sub
andb
sahf
loope
jns
pop
mov
subb
rcll
lahf
rolb
cmp
dec
test
test
dec
dec
jge
and
dec
lcall
addr16
inc
push
arpl
aad
push
leave
setp
xor
push
xchg
arpl
xchg
out
mov
cmpsl
lcall
adc
inc
and
es
adc
and
push
dec
inc
gs
and
push
sub
pop
mov
inc
lea
jns
dec
pop
add
xchg
adc
inc
sub
loop
insb
sub
inc
push
lcall
sub
mov
jg
or
add
sbb
push
insb
loopne
shll
int
jae
ret
push
mov
test
xor
sbb
dec
mov
js
jp
out
ljmp
cmp
dec
push
inc
cmp
ror
icebp
aaa
jmp
sbb
cmp
lret
loop
mov
ljmp
cmpsb
es
in
jp
push
cmp
ljmp
xchg
mov
mov
push
xchg
pusha
fwait
xor
xchg
mov
les
sbb
adc
cmp
sub
arpl
repz
xchg
pop
inc
mov
in
push
call
divl
out
and
repnz
cmpsl
mov
ljmp
out
hlt
shll
inc
push
xchg
jnp
sarl
out
iret
ljmp
mov
adc
popf
sahf
popf
mov
bound
mov
inc
fiaddl
lods
dec
xor
jmp
cli
cld
dec
or
sbb
or
test
sbb
and
jne
cmpl
cmp
movsb
movsl
mov
out
ljmp
je
leave
leave
cmpsl
jge
pop
xchg
xchg
xor
cmpsl
andl
mov
sbb
aad
sbb
pop
adc
fstps
pop
cmp
sbb
and
outsb
daa
pop
add
outsb
adc
push
shl
sub
sub
scas
adc
arpl
fwait
loope
mov
fdivs
sub
pop
or
orb
insb
adc
aad
lcall
fistps
mov
pop
mov
sub
test
dec
fwait
test
lea
sub
dec
popa
adc
inc
sbb
mov
ret
test
push
loope
std
jae
in
fsubrs
stos
inc
pop
out
test
mov
cmp
mov
enter
push
dec
filds
xchg
push
jo
mov
ds
out
dec
or
jl
jo
push
sub
push
adc
setle
add
into
sbbb
ljmp
push
mov
enter
pusha
push
and
sub
imul
jno
cmpsl
ljmp
repz
addl
inc
cmp
lods
mov
stos
add
pushl
mov
jecxz
pop
cmp
cmp
inc
jnp
mov
inc
ds
nop
sbb
popl
jbe
push
push
mov
xor
ja
in
xchg
mov
or
jbe
jne
and
jg
lcall
cmpsl
inc
sub
faddp
mov
call
pop
cmp
dec
aas
lahf
and
mov
lret
adc
sahf
ret
adc
std
arpl
out
ljmp
xchg
and
pop
clc
pusha
loopne
ret
gs
push
lahf
inc
filds
cmp
rcr
push
push
jb
push
cmc
jb
push
test
cs
aad
int3
xor
jecxz
jg
daa
ficompl
mov
cmp
imul
fs
rclb
arpl
sub
enter
sub
jmp
sbb
enter
repnz
xchg
scas
loopne
cli
sbb
or
inc
pop
cltd
push
mov
cmpsl
inc
test
sub
add
jnp
push
fcmovnbe
je
leave
jo
dec
or
insl
sbb
fsts
out
push
adc
mov
sub
pusha
leave
add
div
mov
addl
pop
jo
inc
inc
ds
jg
xchg
dec
inc
aaa
jp
int3
out
or
pop
or
movsb
mov
call
mov
cwtl
sub
jp
mov
xchg
fstps
push
dec
push
cld
ja
daa
dec
nop
push
mov
xor
in
stos
cs
mov
popa
xlat
jo
inc
xchg
xor
imul
push
lea
push
lahf
cmc
movb
jecxz
push
inc
outsl
cld
cmp
nop
push
movb
roll
adcb
push
mov
push
mov
cmp
dec
stc
popf
push
subl
dec
dec
pop
popa
sub
std
popf
rorl
mov
stos
adc
or
push
iret
push
lahf
xchg
sbb
adc
pop
repz
cmp
cmc
jns
push
cmp
add
jne
dec
ds
and
xor
bound
sahf
incl
xchg
daa
adc
push
repz
jl
jmp
cltd
and
push
pushf
or
push
push
xchg
jle
sarb
test
loop
sub
lcall
xor
mov
loopne
test
dec
lret
imul
outsb
mov
dec
pop
daa
sub
push
mov
mov
cmc
xchg
xor
cmp
pop
cmp
cmp
mov
std
shlb
jae
cli
aas
addb
push
pop
leave
mov
or
ss
jmp
mov
arpl
je
test
or
xor
jg
loope
imul
add
loope
outsl
icebp
das
inc
pop
mov
push
aam
cmpsb
sbb
in
imul
pop
cmp
pop
pop
in
loope
mov
mov
and
jae
loope
mov
xchg
mov
cs
push
je
js
test
xor
add
int3
rolb
xor
sub
sub
decb
lcall
addr16
push
lret
lock
mov
pushf
outsl
mov
in
enter
pop
bound
cmp
rcrb
addl
aas
enter
lret
imul
call
jmp
sbb
les
ja
bound
and
stc
sub
and
sbb
or
pop
and
leave
xlat
mov
pop
aaa
cmpsb
shr
mov
fdivr
loop
push
cmp
inc
push
neg
int3
insl
cmc
movsb
pushf
sub
push
les
sub
add
or
xor
das
inc
cmp
movsb
pushf
add
leave
stos
push
insb
inc
sub
mov
pop
and
pusha
in
inc
paddw
fdivl
in
fwait
cli
and
pop
jp
and
mov
in
sbb
insb
push
add
mov
push
ror
stc
popf
aas
mov
mov
ja
dec
and
sub
lahf
imul
notb
lds
pop
scas
iret
and
popa
imul
stc
push
cmp
mov
arpl
jb
shl
or
ss
jmp
mov
or
xchg
out
sbb
xchg
stos
mov
fs
xchg
mov
push
mov
mov
lret
js
jno
fldt
adc
push
shll
stc
jmp
fsubl
xor
in
dec
insb
ret
dec
iret
jne
push
inc
jge
sbb
fistl
scas
xchg
pop
jnp
push
in
jb
push
push
test
cmp
in
loopne
push
mov
lret
dec
or
scas
int
sbbl
push
add
adc
mov
fdivl
into
int3
enter
mov
jo
push
mov
movsl
aad
push
push
push
test
and
mov
cld
dec
cwtl
xchg
fiaddl
adc
sbb
ss
out
mov
mov
fcmovnu
loope
stc
popf
cmpsl
ret
aaa
xor
js
mov
sar
jge
pop
emms
push
xchg
popa
cmpsl
call
cmpsl
lret
iret
mov
mov
stos
jns
add
pop
js
sbb
fdivrs
loopne
mov
into
sbb
xorb
repnz
int3
mov
mov
xor
pop
fucomip
mov
shr
pop
std
inc
int
cld
add
jnp
sbb
lcall
push
dec
jno
stos
divl
clc
in
and
inc
in
shlb
xchg
jge
cmpsb
or
xchg
cli
jns
gs
pop
xchg
xchg
adc
mov
add
sub
pop
adc
jae
frstor
data16
xchg
lret
arpl
lcall
inc
pusha
sub
sti
and
push
aad
add
movsb
sbb
mov
fmul
or
push
lock
mov
ss
pop
mov
xchg
sbb
mov
or
mov
ficompl
dec
ficompl
add
loope,pt
jmp
push
fstpt
push
sbb
imul
add
xor
mov
xchg
pop
bnd
out
add
inc
pop
jle
cmp
cltd
xchg
dec
movsb
push
jg
imul
mov
and
insl
dec
imul
or
pop
mov
xchg
push
dec
jle
mov
jge
pushf
scas
pop
insl
mov
pusha
inc
pop
sbb
pop
cmp
jns
leave
sete
in
jge
push
sar
xlat
inc
cltd
pop
icebp
out
sub
addl
andl
daa
or
cmp
lock
cmpsb
xchg
push
mul
cmp
mov
popa
repz
sub
sbb
sbb
lods
das
pop
icebp
lea
jle
sbb
pop
sub
andl
imul
inc
js
pop
xor
inc
pop
mov
fisubrs
imul
add
dec
fistpll
or
dec
sub
inc
cld
and
out
dec
sbb
push
cmpsl
cmc
icebp
mov
xchg
scas
dec
adc
jo
pop
fstl
push
or
sub
pop
shrl
add
out
rcll
jno
adc
pop
repz
push
pop
push
xchg
or
jecxz
pop
pop
and
mov
dec
mov
mov
mov
and
add
and
mov
mov
icebp
test
push
push
jmp
pop
pop
xor
fnstcw
sub
push
int3
fcoml
cmp
movsb
xor
push
xchg
adc
mov
imul
mov
addb
ja
cwtl
fxch
ret
lret
cmp
sbb
insb
loopne
push
dec
mov
arpl
out
js
sub
and
adc
orb
imul
rcrb
mov
mov
mov
test
inc
js
mov
xorb
sub
cmpsb
shll
lret
sti
xchg
ret
xchg
push
pop
xchg
out
cld
sub
aad
add
sbb
fsubl
cmp
pop
mov
xor
jl
fs
or
popf
mull
dec
sti
repnz
ret
and
sbb
aaa
or
add
addr16
sub
rcll
fwait
outsl
js
add
stc
loop
gs
mov
addr16
push
imul
xor
shlb
mov
outsl
lock
or
jnp
mov
adc
adc
mov
cltd
repz
addr16
divl
push
movsb
add
and
and
adc
fs
not
xchg
push
push
out
loop
xorb
std
and
push
xor
push
cmpsl
lea
add
mov
cld
cmc
mov
movsb
dec
setbe
mov
lcall
jp
inc
js
cmp
iret
in
lahf
sbb
mov
sti
push
xchg
sbb
xor
fidivrl
inc
dec
xor
lods
loop
mov
push
mov
push
cmp
or
add
shlb
mov
out
adcb
xchg
pop
mov
adc
in
xlat
mov
adc
aam
inc
fsubrs
sbb
mov
or
cmpsb
and
ror
or
mov
fildl
mov
lock
push
sbb
iret
sbb
xor
out
xor
xor
fsubr
jb
nop
icebp
xchg
sbb
in
jp
aaa
inc
fldt
adc
test
ja
sub
jecxz
insl
test
mov
je
xchg
push
xor
outsl
inc
xor
movsb
into
fistps
cwtl
pop
mov
icebp
cmp
mov
repnz
inc
inc
movsl
cmc
es
xchg
dec
jno
pop
leave
loop
push
jg
andb
mov
xchg
fistps
xchg
xchg
int
or
arpl
and
sbb
inc
jg
push
and
push
push
inc
dec
cltd
jns
jge
rcrl
adc
shll
lock
jmp
pop
in
mov
movsb
ss
mov
xchg
flds
jl
mov
fdivrl
mov
or
push
mov
pop
mov
xor
imul
shl
daa
aaa
dec
jo
pop
fnsave
push
add
imul
cwtl
lds
xor
xchg
push
lea
push
jg
rolb
adc
popa
pusha
adc
out
pusha
and
jmp
sbb
loopne
into
sbb
stos
test
out
pop
push
lods
inc
int3
popa
inc
xchg
loopne
fldenv
mov
std
js
aad
mov
push
out
mov
and
mov
negb
adc
lcall
push
scas
mov
push
add
lret
push
mov
enter
mov
mov
fstl
cmp
mov
imul
ret
push
nopl
outsl
andl
cwtl
lods
add
bound
sbb
inc
aas
xor
ss
mov
add
pop
ror
jecxz
inc
lret
fs
mov
jae
push
cld
repz
les
ret
push
cmp
faddp
int
lcall
je
xchg
jae
ret
ljmp
loop
aad
les
inc
sub
pop
mov
jecxz
imul
loop
inc
sbb
lods
inc
mov
dec
xchg
add
adc
xor
cltd
pavgw
lret
fnstenv
neg
sahf
sbb
jnp
push
lods
mov
ja
and
mov
jne
sahf
dec
push
js
fnstenv
inc
push
loop
es
sub
mov
int3
mov
andb
dec
push
push
pop
mov
jle
pusha
stos
pusha
fmull
pop
mov
xor
and
lcall
loopne
clc
add
daa
decl
mov
mov
adc
lret
cltd
cmp
popf
push
xchg
in
jne
pop
mov
enter
dec
je
adc
dec
add
shll
out
pop
popf
repnz
jecxz
les
jo
xor
or
lock
xchg
adc
add
xchg
add
loopne
mov
xchg
xchg
add
arpl
loope
into
xor
ss
out
repz
cmp
push
int3
adc
jnp
out
pusha
mov
sbb
sbb
xchg
mov
ja
sbb
mov
sub
stos
movl
sub
mov
ss
rcl
add
out
cmp
inc
push
inc
movsb
cmp
in
mov
jne
aas
jmp
bound
adc
insl
repz
mov
aaa
in
mul
pop
sub
jns
lret
lret
ljmp
mov
shll
pop
pop
js
pop
out
cmpsb
mov
pop
mov
in
jmp
jo
test
xchg
outsb
cwtl
dec
push
push
lock
loop
jle
outsl
icebp
les
dec
pop
add
xchg
push
jbe
push
push
inc
mov
or
cmc
adc
pusha
imul
cmp
lds
aas
ds
pop
mov
push
cld
jge
push
test
call
sahf
sbb
jecxz
adc
sti
cmp
add
and
lret
int
add
out
int3
pop
jg
fcom
mov
shlb
or
push
pop
bound
or
aaa
gs
adc
lcall
pushf
pop
add
pop
lcall
inc
push
bound
add
push
scas
ficomps
mov
in
inc
mov
dec
mov
imul
dec
stc
jmp
sahf
xor
cmp
mov
mov
lds
xchg
popa
lret
aaa
add
iret
andb
and
jne
stos
add
in
jns
flds
or
dec
mov
dec
and
frstor
mov
or
pop
add
or
sti
arpl
int3
mov
repz
or
test
pusha
pop
iret
cld
loopne
popa
add
aas
dec
aas
imul
repz
in
dec
movsb
hlt
mov
mov
cwtl
ret
xor
mov
insl
jns
dec
sub
pop
push
idivb
add
cmp
or
or
inc
sarl
in
hlt
xchg
fs
inc
test
xor
in
imul
or
enter
repz
sub
cs
pop
mov
lea
jmp
cli
pop
pop
jp
and
mov
sbb
add
pop
shll
mov
xor
les
mulb
fnstsw
sahf
les
xchg
out
pushf
mov
inc
rcrl
bound
pop
pop
in
dec
inc
jnp
mov
lods
das
stos
test
stos
je
pop
mov
lret
cmp
pop
push
push
jmp
jmp
loopne
les
mov
fldt
inc
xor
push
mov
xchg
or
inc
loope
arpl
sub
mov
les
mov
dec
test
pop
les
xor
popa
dec
es
pop
add
test
mov
or
and
fsub
jne
push
mov
adc
and
adc
push
adc
push
insl
add
sbb
mov
mov
adc
clc
insl
addr16
dec
jecxz
ret
or
inc
in
std
jno
mov
mov
and
popf
sbb
add
push
in
sub
imul
lret
nop
xchg
adc
out
sbb
mov
inc
adc
add
in
ljmp
cmpsl
xchg
bsr
mov
jbe
in
es
or
test
mov
or
imul
cmp
inc
xlat
cmpl
imul
sbb
inc
mov
mov
out
mov
nop
and
xor
int
bnd
gs
pop
mov
push
loop
inc
test
or
pop
cmp
xchg
in
jmp
mov
and
mov
in
cmp
push
dec
mov
jmp
ja
jb
cmp
insb
lock
push
aas
pusha
mov
ja
dec
out
loope
test
push
lahf
jbe
or
jae
jne
xchg
xchg
mov
pop
mov
cmc
jl
mov
mov
sub
cmpsb
mov
ss
sub
aaa
nop
xchg
push
mov
shl
xchg
fldt
adc
mov
outsl
stc
mov
popf
out
imul
jne
or
call
xor
mov
mov
inc
push
push
mov
hlt
mov
add
add
dec
call
call
dec
fstpt
mov
add
dec
fidivrl
xor
mov
mov
in
pop
inc
adc
iret
inc
movb
rcrl
inc
xchg
dec
cld
fildl
in
daa
dec
dec
and
lret
aaa
lret
xor
dec
sti
jbe
hlt
push
fdivr
into
push
popa
add
test
jp
mov
lret
repnz
out
mov
cmp
sbb
adc
push
in
mov
inc
cmp
sub
sub
jl
js
sub
push
jge
xor
lods
lret
dec
mov
dec
popa
arpl
mov
mov
stos
xchg
lret
and
call
std
push
sbbl
mov
sbb
pop
mov
aad
and
jmp
loopne
mov
jecxz
sti
scas
dec
sbb
mov
sahf
jmp
pop
mov
loop
sub
fldt
xor
cmp
ds
cmp
pushf
add
mov
cwtl
sbb
dec
or
or
call
or
call
inc
dec
jne
outsb
fsub
push
cmpsb
xor
out
test
xor
daa
test
pop
out
push
mov
mov
sub
lret
int
jg
pop
fsubl
lock
and
jle
mov
lds
jno
sarb
inc
je
sub
dec
ja
jno
fldl
mov
jmp
fnstcw
push
xchg
in
pop
sbb
xor
cmp
cli
movsb
sub
or
cmp
mov
pop
or
push
imul
shll
filds
cmp
dec
pop
cltd
es
dec
pop
xchg
push
int
repnz
ret
aas
sub
fwait
fsts
lods
bound
lcall
dec
xor
jmp
mov
divb
mov
lods
xchg
xlat
iret
adc
and
fisubrl
dec
mov
jl
shrb
xor
push
lretw
popa
jg
hlt
orl
xchg
inc
aad
mov
das
mov
jle
cmpsb
or
scas
mov
jg
jne
lock
jle
and
jns
aam
sub
scas
sbb
xlat
mov
in
sbb
sti
jae
aaa
repz
pop
lods
sub
jle
jo
push
xor
das
add
in
jmp
mov
pop
push
sub
fptan
adc
hlt
test
sar
pop
clc
iret
jg
inc
sub
jae
js
gs
orb
pop
repnz
dec
xchg
in
mov
lret
mov
cmp
fwait
mov
mov
scas
push
xchg
adcb
jmp
adc
mov
sbb
andl
fs
push
xchg
and
sub
call
jnp
and
pop
insb
cltd
popf
ss
cs
mov
sbb
aaa
sub
pop
add
subl
lea
jge
cli
bound
not
ja
and
mov
in
jge
hlt
xchg
dec
inc
add
das
cwtl
pop
push
jnp
es
imul
rcrb
xchg
fstpl
jne
push
lds
cwtl
push
cmp
xchg
lods
dec
dec
adc
pop
mov
gs
in
iret
ret
aad
sbb
mov
loope
sub
mov
jmp
sub
xor
das
stc
out
dec
xchg
jmp
loope
pop
sub
mov
add
dec
aas
sbb
out
outsl
test
cwtl
addr16
cmp
jne
fs
fcoms
push
shrb
ret
les
adc
stos
dec
shrb
nop
scas
faddl
sar
mov
scas
sbb
pop
test
inc
push
and
sahf
jmp
xchg
jge
pop
cmp
in
sarb
test
in
or
jo
test
sarl
mov
scas
loop
dec
or
outsl
sahf
xchg
notl
add
sbb
mov
ret
pop
cwtl
data16
out
pop
or
mov
mov
loopne
inc
ret
bound
inc
cmp
mov
ljmp
jg
pop
repnz
xlat
mov
lcall
and
xchg
dec
call
xchg
scas
mov
adc
add
xor
mov
roll
jge
adc
mov
jmp
and
jno
incb
pop
fisubrl
mov
jns
or
mov
dec
push
icebp
sub
sbbb
and
jno
enter
outsl
cmp
ljmp
sbbl
pop
pop
out
pop
sti
jl
gs
shll
cmpps
frstor
mov
lea
dec
push
cwtl
xor
cli
push
pop
inc
cmp
or
andl
scas
cwtl
and
mov
xor
hlt
push
sbb
dec
dec
out
xlat
outsb
pop
inc
bnd
aam
mov
xor
std
hlt
pop
or
sbb
bnd
mov
dec
jle
cwtl
cmpsb
mov
rolb
ret
xor
adcl
popa
or
aas
movsl
shr
lods
imul
adc
pop
test
iret
adc
pop
xchg
cmp
xchg
test
nop
or
or
loop
jb
add
push
cmpsl
dec
xchg
sub
inc
add
test
push
leave
or
xchg
rclb
adc
xchg
fld
cld
push
fwait
push
repz
aaa
push
shll
stc
lods
shll
aad
lcall
fs
sbb
adc
push
les
cld
adc
outsl
mov
pop
pop
je
pop
mov
xchg
sub
dec
aas
call
mov
das
in
xor
dec
jg
pop
mov
add
rcr
aad
call
pop
rclb
xchg
inc
testb
push
mov
test
sbb
loope
mov
jns
xlat
mov
lock
fwait
pusha
ljmp
lahf
sbb
jae
jp
dec
xchg
cmp
and
leave
mov
push
dec
sahf
jp
sti
dec
lret
ror
and
adc
push
cmc
outsl
rcrl
enter
das
pop
repnz
das
out
outsl
lea
rclb
cmp
not
inc
xor
dec
xor
xor
aam
pop
mov
test
das
mov
mov
enter
loopne
jle
stos
xor
sub
adc
int3
pop
mov
in
outsb
int
sub
pop
and
rcrb
out
lods
cmp
mov
orl
icebp
add
push
inc
jae
push
xchg
xor
pushf
bound
ret
imul
adc
push
sbb
add
repz
je
mov
add
jle
jae
push
lock
frstor
dec
jle
jge
adc
fildll
pop
sti
mov
sbbl
mov
sbb
divb
xor
subps
lock
sbb
push
retw
inc
sub
das
mov
push
cmc
hlt
inc
dec
inc
xchg
and
mov
outsb
test
loope
jnp
xchg
xchg
xchg
pop
lret
dec
stos
out
test
loopne
mov
out
outsb
int3
pop
sahf
inc
arpl
lock
punpcklwd
std
xor
mov
cld
scas
movsl
jns
cld
aam
aam
xchg
mov
popl
mov
adc
jo
andb
call
mov
mov
mov
mov
pop
xchg
adcl
js
test
das
jp
sarl
lahf
cmc
orl
push
sbb
stos
jb
push
cmc
adc
insl
sahf
scas
sbb
adc
addr16
cwtl
dec
jbe
push
xchg
addb
cltd
int
lods
sub
mov
sub
cmp
daa
filds
inc
xchg
xchg
aad
mov
or
popa
jg
xchg
jp
std
mov
xchg
mov
shlb
dec
repz
adc
mov
arpl
adc
mov
int3
jge
xlat
sub
pop
dec
outsl
adc
mov
dec
repz
insl
scas
mov
fdivs
scas
sub
sbb
js
push
push
mov
mov
cmpsb
mov
clc
fwait
imul
insb
sarl
and
pop
das
cmp
xchg
imul
cmp
insl
lock
sahf
add
and
and
jno
out
pop
lods
pop
call
jb
in
inc
cmpsb
jnp
cs
inc
xchg
sbb
push
lahf
out
shlb
dec
pop
mov
sbb
fcomip
addr16
andb
and
sbb
inc
mov
out
and
maskmovq
mull
lods
sbb
test
jp
loopne
xchg
in
in
fidivrs
push
add
clc
enter
cli
out
stc
loop
inc
pushf
inc
inc
pop
ja
movsb
dec
in
sub
call
and
int3
jns
jbe
pusha
pop
cmp
jge
and
adc
push
out
dec
jl
clc
lret
imull
dec
adc
mov
loope
lret
out
insb
jbe
out
ljmp
cmp
push
xor
lret
imul
push
jno
mov
cmpsb
and
cmpsb
mov
and
or
lahf
subb
and
add
ljmp
or
sarl
mov
push
cli
sub
ret
in
mov
rol
test
iret
or
aad
inc
mov
jns
mov
lret
test
mov
jns
pop
shll
mov
mov
jb
loop
adcb
aas
and
xor
mov
cwtl
push
icebp
xchg
clc
mov
mov
loopne
into
enter
jno
loope
pop
pop
sub
jmp
xchg
jecxz
cmp
ljmp
xchg
int
jae
fmull
loop
int3
pushf
jno
pop
pop
cmpsb
rcrl
out
sub
or
test
xchg
xorl
pop
dec
outsb
mov
ljmp
and
or
pusha
inc
dec
pop
push
dec
push
ret
in
sub
push
cmc
xchg
data16
add
mov
and
mov
or
add
xor
hlt
push
jp
mov
sbb
sub
xchg
push
xor
adc
xlat
leave
mov
add
sbb
jge
push
sbb
or
add
fdivrs
jb
test
sub
fstl
fsubr
in
pop
add
sbb
mov
je
ljmp
fisubs
loopne
hlt
adc
rcll
add
mov
fsubl
aam
into
lcall
push
pop
pop
and
orl
fwait
mov
insl
je
sbb
jns
xchg
jecxz
xchg
mov
imul
inc
outsb
mov
inc
mov
jge
das
or
adc
filds
pop
outsl
push
sbb
or
inc
test
push
repnz
mov
cli
inc
pop
jle
jnp
imul
lea
pop
dec
cmpsb
xchg
and
mov
in
pop
test
je
xchg
int
adc
add
or
mov
and
fisubl
sbb
adcl
mov
das
pop
push
mov
add
ds
aas
ljmp
jmp
jle
push
inc
movsl
mov
in
mov
push
in
push
mov
mov
pop
xor
jecxz
shll
fnstcw
jmp
out
and
pop
lods
popf
sub
fs
push
outsl
movsb
add
xlat
mov
pop
sub
aam
loope
inc
lea
pusha
xor
pop
into
sbb
js
dec
xlat
movsl
out
add
insl
pop
iret
lods
pop
xchg
out
leave
xchg
jg
push
sub
xor
add
daa
sub
push
loopne
les
and
sbb
mov
inc
dec
add
stos
sahf
push
push
sbb
imul
test
incb
daa
cmp
dec
jge
in
faddp
mov
scas
dec
incl
cwtd
xor
std
rol
daa
cmp
paddsb
adc
movsl
push
mov
pop
daa
add
pop
das
dec
jmp
movsb
xchg
bound
hlt
nop
jl
sahf
or
das
sub
push
jbe
lret
jbe
fwait
jmp
jns
push
cmp
insl
fcmovne
lock
std
sub
pop
lock
or
mov
sti
xlat
int
mov
dec
in
dec
sbbb
out
cs
inc
jg
add
adc
cwtl
scas
cmpsl
mov
aad
addr16
imul
push
and
icebp
xchg
sbb
push
xchg
andl
sbb
fstps
and
add
mov
das
imul
pop
push
fistps
mov
mov
jb
and
bound
mov
lcall
mov
pop
inc
sar
addr16
sub
pop
aam
cli
scas
pop
cmpsb
mov
jbe
pop
xor
mov
pop
xor
imul
pusha
mov
lds
and
pop
lods
movsb
xor
mov
pop
out
mov
fildll
in
cmpsb
jb
insb
and
add
xchg
movsb
std
mov
sub
inc
sahf
fldl
add
mov
or
pushf
mov
mov
out
das
push
subl
push
gs
pop
movsl
add
mov
clc
inc
cmp
and
xor
shl
xchg
fwait
push
sti
aas
lock
jmp
or
fsubrl
jmp
pusha
inc
sbb
pop
cld
repnz
out
rcl
jno
push
xor
mov
testl
js
das
aad
fists
mov
jle
test
jp
sarl
push
xchg
mov
push
xor
jl
add
ret
mov
sbb
add
pop
bound
jno
jbe
cmpsb
and
enter
and
jo
loope
xchg
push
mov
jno
xchg
add
mov
xchg
xchg
xchg
fsub
pusha
lret
inc
fs
jae
mov
das
mov
push
ror
mov
xchg
or
lret
daa
in
adc
xor
push
sti
sub
adc
lret
push
das
call
mov
push
inc
xorl
add
and
fucompp
cs
mulb
mov
lods
popf
inc
mov
lahf
xor
loop
push
shlb
xchg
pop
sbb
stos
jg
int
mov
adc
movsb
and
dec
or
scas
outsb
arpl
mov
cmp
loope
lcall
mov
test
nop
out
or
mov
fcmovne
ss
ret
loopne
sti
push
loopne
orl
dec
xor
xor
es
cmp
lea
adc
push
push
loop
or
scas
and
cld
and
test
push
lods
push
cmc
jae
sbb
lea
or
outsb
das
ss
mov
mov
lcall
dec
sti
into
add
or
or
mov
inc
icebp
aaa
pop
scas
mov
mov
mov
xchg
lods
mov
fmulp
lods
and
or
jmp
in
adc
es
push
inc
lahf
add
add
jno
mov
ficompl
mov
fcompl
push
pop
mov
adc
push
sahf
mov
push
enter
pusha
pop
push
ds
cmpsb
lock
push
je
adc
or
aas
aas
xor
or
lods
xor
std
enter
cs
fisttpll
out
rolb
roll
stos
cmp
push
sub
mov
dec
sarb
sub
fisttpll
imul
mov
fsubrl
xchg
scas
icebp
call
mov
bound
sbb
divb
sbbl
add
lds
cmp
and
es
pop
je
jge
cmp
int3
and
divb
ffree
sbb
xchg
mov
push
popa
movsb
in
lock
xchg
ds
mov
clc
out
into
pop
sub
scas
gs
add
jmp
cmp
or
mov
add
pop
test
out
push
in
pop
xlat
mov
xlat
jnp
mov
dec
ljmp
sarb
mov
push
push
jecxz
sbb
or
mov
mov
or
adc
aad
cmp
xor
pop
sub
cmpsl
dec
mov
sub
ds
cmp
push
mov
mov
ret
xor
adc
nop
fstl
cmp
test
lock
cwtl
mov
jp
dec
jmp
negl
es
popa
fmull
xor
enter
dec
sbb
scas
mov
cwtl
idivl
sbb
inc
cmp
push
cli
popf
mov
sub
inc
into
xlat
and
scas
mull
stc
mov
das
movb
cmpsb
sbb
incl
ja
stos
mov
sub
lock
jp
sub
mov
rorl
mov
jae
jp
insb
lret
push
sub
cmc
sub
sub
movq
push
in
xchg
sub
push
out
and
xchg
xchg
cli
dec
cmp
das
adc
ret
insb
push
leave
add
push
in
out
cmc
ss
mov
out
sbb
mov
lock
int3
and
and
lods
and
add
xor
xor
xchg
xchg
inc
bswap
add
mov
xor
arpl
push
cmp
cs
jae
mov
mov
and
adc
xor
std
cmp
sub
pop
jb
out
jo
xchg
leave
mov
fs
xor
outsl
pop
int
xchg
fidivl
inc
push
cli
lock
push
dec
aad
rcrb
in
inc
mov
ja
or
insb
add
rorl
sbb
xor
cmpsl
rorb
popf
mov
mov
lds
es
les
rcll
mov
lods
lods
or
sub
jle
rcrb
popl
xchg
filds
push
sbb
mov
insl
or
cmp
mov
insb
ret
je
loopne
leave
mov
mov
cmp
stos
es
int
add
cltd
and
push
mov
je
cs
inc
gs
lahf
jle
addr16
push
xchg
bound
cltd
in
dec
jl
sti
pop
insl
and
cwtl
loope
xchg
mov
sub
adc
jb
arpl
mov
pop
popf
xchg
xchg
aas
pop
insb
cmc
and
movsl
cs
je
xor
or
xchg
jne
mov
inc
dec
aam
testl
cltd
jg
add
shr
not
mov
out
std
mov
and
cmpsl
cmpb
testb
cmp
mov
mov
and
stc
mov
sahf
int3
adc
fdivl
dec
ljmp
add
xchg
and
push
inc
psllw
fistpl
cmp
jle
push
test
add
addr16
push
les
dec
add
imul
or
int
test
pop
dec
sbb
pop
xchg
and
imul
lods
popf
jmp
pop
ljmp
imulb
hlt
std
scas
inc
xor
push
mov
sub
fisubrs
push
hlt
sub
negl
popf
cmp
mov
cltd
daa
clc
sub
jg
and
and
dec
nop
xor
popa
cmp
and
sub
lds
insl
popa
pushl
inc
imul
sub
jae
movsb
mov
shrl
inc
lcall
jo
outsb
adc
stc
lret
decb
pop
ror
jnp
lods
mov
lods
jp
aaa
adcl
popf
sbb
mov
mov
fs
in
cmp
mov
push
xchg
push
adc
sub
incl
divl
lahf
fldt
pop
aad
mov
sub
xchg
aas
clc
mov
push
push
lea
inc
mov
icebp
mov
repnz
push
jb
mov
fisubl
dec
xor
rep
enter
call
cli
pop
xchg
repnz
and
and
jno
test
outsl
ficoms
jo
outsb
mov
cmp
inc
or
dec
popf
and
les
jmp
in
les
stos
sbb
add
inc
xchg
std
jmp
push
repnz
or
xor
stos
test
enter
sub
jge
sub
or
xchg
jns
je
lcall
enter
arpl
dec
cmpsl
dec
pop
testb
sub
dec
in
mov
mov
addr16
push
sahf
sbb
fisttpl
cmp
movsl
inc
jae
fldenv
fcomps
aas
mov
push
imul
subl
mov
insl
in
je
add
cmpsl
sbb
inc
xchg
mov
nop
pusha
mov
fnstcw
dec
mov
fnstenv
lret
gs
lds
push
aas
sub
stos
test
jo
and
cmpsl
mov
xor
jp
pop
int
sub
test
cmpsl
rcll
mov
adc
and
xor
lock
sbb
jb
inc
cmpsl
insl
mov
adc
mov
sub
or
gs
jmp
lret
sub
jne
call
and
mov
mov
lcall
in
pushf
bound
roll
aad
sbb
test
push
out
ret
cwtl
icebp
lcall
loop
dec
or
pop
mov
push
dec
loop
pop
mov
mov
stos
inc
adcb
xor
xor
mov
inc
sub
and
loope
or
movsb
shll
test
add
mov
xchg
or
bound
sbb
outsb
inc
in
icebp
inc
jno
test
push
das
mov
or
in
xchg
shl
xchg
jecxz
push
in
ret
adc
fistps
iret
sbb
xor
es
sbb
adc
jae
insl
test
das
mov
mov
jb
pop
adc
jo
cmp
adc
lahf
pop
js
mov
ret
and
fwait
je
dec
sub
in
aaa
ljmp
mov
lret
outsl
rol
mov
insl
call
pop
fildl
adc
mov
cmp
shll
out
and
cs
push
fsubrl
jbe
lds
jnp
jno
lret
push
jnp
insl
insl
cmp
or
push
int
cmpsl
sbb
and
faddl
jge
mov
inc
dec
gs
rorl
inc
popa
pop
insb
cli
mov
sbb
and
lea
jne
lret
and
nop
pushf
mov
lahf
insl
mov
div
add
pop
cmp
insl
adcl
pop
mov
clc
dec
cmp
xor
push
stc
int
cmpsl
sbb
int3
jmp
mov
mov
dec
push
jb
insl
add
cmp
leave
repz
fimuls
mov
mov
pop
push
or
fiadds
out
bound
xor
inc
sbb
sarl
and
lock
pop
jmp
mov
clc
push
cmp
add
pop
lcall
aad
jge
dec
cwtl
pop
mov
sub
jmp
sti
mov
fcoml
dec
xchg
int
pop
mov
lret
dec
push
stos
icebp
push
xchg
stc
loop
or
cmp
xor
dec
dec
jno
add
push
xchg
push
xor
mov
popa
push
jl
push
sub
mov
ficoms
cmp
mov
into
test
dec
jle
adc
shr
mov
repz
lea
xchg
push
pop
lock
in
ds
and
leave
in
mov
rorb
xor
aam
std
das
std
xchg
jo
jns
and
or
sub
fildl
ret
and
sbb
xchg
fsubl
ljmp
cmpb
xchg
jmp
outsb
add
adcl
pop
cs
fildll
mov
lods
imulb
mov
xchg
sub
insl
jne
aam
pop
dec
aaa
sbb
movsb
or
fisubs
int3
push
or
sbb
fmull
cmp
in
sub
push
inc
jle
xor
lods
sbb
jo
or
rcrb
or
ds
hlt
inc
stos
orb
sub
gs
cmp
adc
and
mov
push
lret
add
pop
std
sbb
cmc
cmp
mov
pop
fwait
nop
cmc
mov
mov
fistps
and
jle
pop
xchg
jp
jbe
out
cld
insb
fs
xor
ja
test
inc
xor
lock
popa
xchg
inc
js
leave
cld
sbb
pop
loopne
xchg
les
scas
xchg
dec
or
sub
movsl
mov
iret
pop
je
mov
ret
or
popa
sbbb
icebp
das
xchg
fldl
push
call
and
jns
test
jecxz
std
and
mov
adc
sub
outsb
cmpsl
jp
jnp
adc
xor
cmp
inc
movsb
fists
daa
lret
clc
and
std
cmc
lds
adc
popf
mov
mov
pop
mov
std
pop
or
mov
xchg
shrb
cli
xlat
std
add
outsb
arpl
ret
add
js
out
out
push
jl
sub
mov
sub
popa
sbb
and
cmp
addr16
lret
mov
jns
or
add
mov
rcrb
test
popa
cli
push
inc
xor
cmc
mov
pop
xchg
cmp
sub
cwtl
pop
cmpb
imul
or
lds
adc
mov
mov
and
imul
fwait
or
xchg
rorl
in
jp
loop
mov
xor
ss
mov
incb
adc
les
outsb
dec
inc
push
fcmovu
in
xchg
in
inc
outsl
in
cmc
and
mov
mov
imul
in
xchg
and
fcmovnu
fimull
ror
insb
call
hlt
ds
mov
ljmp
ret
xorl
lcall
pop
dec
fs
test
cmp
inc
fxtract
in
xchg
push
data16
cwtl
cmp
lock
shrl
adcl
ret
leave
rcr
popa
push
inc
mov
mov
pop
orb
dec
stc
adc
outsw
cli
enter
mov
test
std
lahf
mov
adc
dec
push
aam
popf
imul
fistpl
loop
mov
mov
cmp
cmp
mov
sbbb
sbb
push
mov
icebp
push
cmp
aam
push
stos
bound
mov
cmp
sbbl
jno
dec
adc
int3
push
inc
jo
stos
mov
adc
ss
fcompl
fs
int3
stos
in
sbb
frndint
xorl
pop
mov
pushf
xorb
loope
lahf
rol
sbbb
xchg
scas
inc
dec
movsl
push
insl
stc
arpl
aad
cli
pusha
mov
sub
ja
icebp
lods
inc
test
stc
jo
mov
js
outsb
sub
xor
loopne
negl
vunpcklps
xchg
mov
fld
xchg
popa
ja
add
jmp
add
popf
andnps
sbb
pop
push
test
leave
mov
mov
repnz
adc
pop
andb
jecxz
push
sti
into
negb
dec
fnsave
adc
pusha
add
dec
fwait
lds
stos
mov
mov
daa
jo
push
popf
inc
in
jmp
sahf
out
mov
cs
fimuls
sbb
daa
cmc
push
dec
popa
mov
daa
and
cmp
stos
push
jecxz
cltd
js
imul
cmp
pop
or
cltd
mov
test
andb
xchg
inc
xor
cld
test
push
mov
jmp
pop
push
cltd
out
shl
push
into
add
fs
stos
imul
lahf
mov
jo
in
outsl
das
bound
dec
push
arpl
idiv
ret
arpl
fstl
in
adc
push
sbb
xchg
and
fnstenv
mov
xchg
iret
xor
xchg
cmp
push
mov
insl
movl
pusha
mov
mov
xchg
aad
in
cmpsl
pop
push
jecxz
mov
or
fistl
mov
clc
cmp
das
mov
adc
push
movb
or
outsl
les
sub
lods
call
cmpsl
cli
in
jns
loop
stos
push
mov
jecxz
sbb
pop
test
jg
push
ficomps
fcmovbe
arpl
cltd
cltd
mov
mov
xor
dec
cltd
xor
out
sahf
xor
repnz
lcall
jno
jge
jmp
adc
outsl
pop
mov
into
arpl
mov
inc
push
jnp
out
call
xchg
in
xchg
sbb
xchg
inc
mov
push
adc
fldenv
bound
jg
cmp
push
adc
imul
mov
cmpb
pop
lret
insb
and
push
push
scas
inc
repz
xor
lcall
cltd
test
stos
test
mov
mov
arpl
std
mov
jbe
pop
inc
dec
les
and
or
mov
ss
scas
or
xlat
pop
enter
adc
test
add
rolb
adc
decb
pop
cmc
in
call
pop
mov
pop
loop
mov
es
sub
mov
inc
pop
lds
cmpsl
clc
mov
or
daa
inc
hlt
adc
in
ret
pop
imul
jmp
cmc
int3
in
jnp
add
sar
sahf
dec
leave
rcrl
scas
stos
xchg
movsl
sbb
call
jmp
cmp
mov
sub
rcl
xchg
loopne
or
mov
sbb
xlat
sbb
cmp
sbb
mov
and
data16
mov
cmpsl
mov
pop
fildl
jnp
fwait
adc
repnz
adc
fstpl
sti
cmp
xchg
inc
mov
sub
and
cli
adc
fmull
rcrb
loopne
insb
fnstenv
shl
lret
popf
push
push
arpl
mov
cmp
inc
test
int3
inc
das
mov
arpl
ret
hlt
leave
mov
ret
inc
xchg
cs
pop
dec
jbe
adc
int3
cmpsl
push
bound
cltd
mov
mov
int3
adc
inc
ljmp
aaa
push
icebp
xor
fadd
and
xchg
jo
sbb
cmp
sub
inc
je
loop
push
add
or
dec
mov
lods
fstps
std
jmp
aaa
in
cmp
test
xor
aaa
mov
dec
rcll
test
pop
push
popf
je
je
lret
pusha
or
cmpsl
rcll
add
dec
sbb
pop
xor
clc
and
mov
xor
iret
pop
fstcw
aas
dec
sbb
je
lea
push
push
mov
xchg
pop
and
add
sbb
mov
leave
fisttps
js
jns
stos
push
in
inc
pop
sub
sbbb
mov
das
xchg
push
add
scas
xchg
xchg
mov
xor
dec
outsl
add
sti
jle
xchg
mov
mov
call
es
jne
fs
jb
addb
xor
cli
dec
call
sub
inc
outsl
leave
sbb
popa
stos
adc
xor
ss
clc
jae
xor
xor
cmp
xor
dec
test
pop
jecxz
mov
mov
imul
pusha
out
cli
push
xchg
std
mov
sub
jl
lock
fistpl
xlat
enter
iret
lock
ds
pop
jecxz
scas
xor
lds
icebp
mov
insb
ret
or
mov
push
sub
cmp
shrb
pop
cld
nop
ja
out
pushf
fldl
push
mov
lret
xor
testb
nop
shl
std
fsubl
pop
popa
test
jae
mov
adc
leave
mov
scas
or
xchg
push
int3
sub
lcall
xchg
push
xlat
inc
adcl
outsl
jo
mov
cwtl
or
or
mov
adc
adc
leave
leave
dec
mov
sub
xor
arpl
and
add
xor
or
xchg
mov
mov
fsubr
add
ja
xchg
test
jl
rcrb
scas
bound
and
stos
pushf
push
rcr
inc
lods
push
xchg
mov
inc
cmpsb
add
out
clc
loop
outsl
add
xchg
pop
enter
or
lock
cmpsl
jecxz
mov
mov
mov
sti
dec
rclb
fbld
lret
ljmp
int
popa
popf
dec
jle
mov
cmp
das
or
aaa
jmp
mov
cmp
or
stc
out
mov
subb
xor
in
xchg
add
cmp
mov
idivl
lods
imul
inc
dec
adc
sbb
xor
mov
adc
test
cmp
std
add
out
jbe
je
adc
mov
lods
insb
or
stos
lret
fbstp
xchg
popa
imul
shll
icebp
mov
addr16
lock
or
fmuls
push
scas
icebp
inc
ljmp
pop
das
repnz
sbb
data16
stc
sub
add
adc
test
stc
cwtl
xchg
lea
pushf
adc
out
dec
mov
sub
dec
jge
jno
add
call
iret
repz
fwait
shlb
jl
ds
sub
lret
in
lods
hlt
push
insb
add
rcr
mov
daa
cli
popa
lcall
add
in
xchg
fimull
mov
cli
cmp
or
stos
lds
insl
inc
sbb
mov
leave
push
movsb
fnstcw
pop
push
and
jae
push
stos
push
cmc
push
int
dec
and
mov
push
cwtl
cmc
clc
movsl
xchg
enter
int3
jae
xchg
pop
addb
fs
pop
cmpsb
insb
xlat
adc
lds
add
push
pop
aad
scas
inc
lcall
pop
loope
jbe
push
mov
int
mov
xlat
mov
cmp
inc
add
mov
in
jg
lcall
jae
mov
fmull
push
test
rol
insl
cmp
dec
push
push
push
cmpsl
mov
mov
xchg
in
das
mov
into
daa
jge
fsubrl
mov
call
push
mov
adc
add
or
xlat
mov
sub
jle
pop
mov
xor
pop
add
rorl
test
sub
dec
cmp
lds
addr16
mov
rcr
xchg
jmp
aam
insl
xor
shrl
adc
add
push
icebp
xchg
sti
addr16
ja
add
insl
push
aad
into
mov
clc
sti
loope
xchg
inc
call
test
push
mov
sub
adc
loopne
pop
push
dec
cmpb
cld
pop
les
lods
shrl
push
stos
inc
cld
pop
push
inc
sub
jno
sub
je
out
and
rcll
mov
xchg
and
and
xlat
fcoml
pop
or
dec
shlb
aam
icebp
js
lods
cmp
xor
jbe
pop
inc
ficoml
ret
outsb
sub
movsl
adc
and
inc
or
ret
mov
jb
adcl
adc
pop
fs
lds
lock
dec
and
in
test
enter
ja
add
scas
xor
fs
pop
popf
icebp
or
and
aam
cwtl
jae
mov
mov
data16
out
push
bnd
outsl
xor
or
cmp
push
cmpb
push
jl
push
inc
pop
xor
push
shlb
int3
mov
in
add
push
fadds
leave
sbb
xchg
shll
repnz
lods
jecxz
push
stc
dec
pop
pop
push
mov
jnp
dec
push
in
add
pop
mov
xchg
jns
js
lea
fld
dec
mov
cltd
mov
stc
cmp
jg
push
pop
fcmovnb
fs
ja
cmp
inc
adcb
shll
imul
inc
cmp
jecxz
xchg
ja
xor
out
jmp
stc
addr16
scas
push
arpl
dec
andb
or
call
mov
xchg
pop
xchg
pop
adc
daa
xchg
cwtl
pop
dec
aas
rorb
in
jecxz
xor
shlb
and
js
push
lods
mov
sub
fdivl
sar
ja
clc
cmp
push
jecxz
divb
out
iret
sub
push
inc
mov
pop
aam
movsl
mov
xchg
testl
out
inc
and
xor
mov
cltd
dec
scas
mov
in
imul
jp
mov
jg
mov
ret
dec
pop
fildll
mov
lret
lcall
xor
mov
cmp
sti
pop
lcall
inc
gs
in
mov
pop
aas
psubd
xlat
bt
fisubrs
pop
and
test
inc
leave
aad
in
sbb
jle
icebp
cmp
and
add
insb
scas
sub
pop
lods
test
mov
lcall
xor
mov
cmp
pushf
jp
jbe
mov
in
cmpsl
nop
cmp
fucom
xor
cmpsl
rolb
push
adc
cmp
lret
mov
or
and
xchg
jecxz
or
push
clc
nop
aas
clc
lock
mov
sbb
in
stc
jae
push
sbb
das
jnp
xor
dec
popa
cmp
lods
adc
int
hlt
aas
cmpsl
cmp
mov
push
in
jo
pop
fstl
movsl
push
sub
mov
arpl
inc
mov
fsubs
adc
sub
stos
enter
mov
jecxz
jge
xchg
mov
mov
pop
loopne
adc
repnz
inc
dec
mov
icebp
icebp
js
xchg
cmp
sub
jne
int
rorl
test
add
mov
or
pop
sub
loope
xchg
inc
jae
sub
xor
lret
clc
imul
std
outsb
mov
fsts
sahf
adc
push
xor
jne
pushf
insb
gs
push
jo
add
arpl
lcall
adc
rorl
les
and
sbb
and
sbb
mov
add
cld
outsb
lahf
sub
dec
popa
cmpsl
push
xchg
gs
dec
pop
hlt
sub
push
test
ds
sarl
mov
mov
push
sahf
test
sbb
data16
adc
and
inc
arpl
ja
mov
adc
jl
fidivl
cmp
lret
sub
mulb
sub
pop
mov
popf
adc
fcoms
mov
adc
out
arpl
arpl
jae
and
push
adc
xor
dec
lock
jne
xor
xchg
jne
insl
fs
mov
insl
cs
gs
or
mov
sbb
and
test
aaa
mov
insl
idivb
sbb
jne
outsl
in
xchg
xlat
call
icebp
dec
loop
mov
or
inc
inc
fcompl
pop
stos
int3
fisttpl
push
cmp
sahf
sub
cli
or
adc
out
xchg
data16
xor
jp
rorb
arpl
mov
jecxz
movb
mov
icebp
fs
xor
enter
or
jno
rcll
sbb
mov
ss
jns
test
mov
mov
dec
sbb
push
push
pop
sti
add
mov
jle
or
fs
std
mov
cmp
mov
xchg
jo
mov
and
jecxz
adc
dec
mov
test
std
in
repz
cmp
js
lock
cmp
cmp
repz
jne
pushf
and
push
dec
xchg
pop
je
es
push
filds
push
mov
sub
mov
and
shlb
xor
add
lock
int3
and
or
setle
pop
negl
icebp
in
sub
pop
xor
or
cmp
xchg
mov
dec
mov
scas
mov
pushf
mov
lret
mov
pop
aas
mov
jge
call
xchg
push
adc
aam
cmp
mov
lret
mov
lcall
sbb
sbb
scas
jle
in
cmc
rorl
push
add
dec
sbb
inc
hlt
push
in
dec
pusha
gs
repnz
cmp
cli
or
lret
lcall
lods
add
mov
cld
out
inc
push
in
sub
push
bound
fs
bound
jle
ss
xor
dec
jne
push
mov
cmp
into
gs
or
push
push
int3
pop
les
sbb
sbb
icebp
int3
enter
mov
pop
rcll
sahf
scas
sti
jo
add
mov
jne
cmpsl
fs
cmpsb
fs
stos
add
or
in
jl
fwait
mov
jne
mov
mov
push
cmc
add
sbb
or
mov
rcrl
mov
jno
cwtl
aam
mov
iret
jns
jg
mov
fnstcw
mov
pop
adc
add
jg
pop
pop
sub
sbbl
fwait
mov
sub
cmp
jbe
sbb
cs
inc
add
xchg
add
pusha
sbb
ljmp
cmp
pop
push
scas
imul
aam
popa
sbb
jl
loopne
push
lds
push
push
cld
mov
pop
push
mov
push
ss
popa
xchg
mov
sbb
pop
and
mov
hlt
cmp
mov
dec
fisubrs
pop
and
push
shrl
in
pop
mov
jnp
pcmpgtd
mov
mov
or
jbe,pt
mov
test
xchg
add
inc
push
fwait
iret
cmc
das
mov
repz
iret
fisubs
and
mov
jo
stc
mov
xor
inc
pop
xor
jge
test
ja
xor
pusha
mov
adc
sbb
mov
cmp
jnp
adc
es
fsts
fwait
rcrl
lods
mov
adc
cmp
jae
cmp
push
mov
mov
pop
cmp
test
sbb
je
into
ds
push
or
add
hlt
pop
cmp
inc
into
ds
xor
test
sub
test
push
inc
insl
in
mov
andl
cmp
rcl
push
adc
fistpll
mov
or
inc
scas
adc
pop
or
cmp
int3
fldlg2
mov
arpl
inc
rcr
add
inc
dec
insb
mov
cwtl
cmp
mov
shl
push
cmpsb
pop
push
in
fstpl
pushf
fistpl
push
mov
in
dec
cmp
stc
or
sbb
fcomp
mov
jecxz
sub
pop
fdivrs
jbe
fdivrp
leave
push
loope
push
lock
mov
xlat
pushf
jbe
inc
lret
xor
jg
outsb
loop
pop
gs
int3
mov
jl
frstor
daa
shrl
mov
es
aad
jb
movsb
scas
int3
lods
and
add
testb
jno
sbb
adc
enter
insl
sbb
jb
std
mov
mov
test
lds
pusha
push
add
xor
or
cmp
std
cwtl
ss
clc
and
xchg
jae
or
mov
mov
dec
jne
jg
jg
cmpsl
test
mov
xlat
pop
scas
push
iret
dec
xchg
std
push
inc
inc
mov
mov
dec
push
daa
jl
add
movsb
sbb
repnz
mov
nop
in
imul
mov
pop
mov
loope
mov
ret
icebp
cmpsl
shlb
inc
jne
imul
add
cmp
pop
adc
add
mov
inc
xchg
or
cmc
jl
cltd
pop
test
outsl
loope
aam
mov
mov
lcall
mov
lods
fwait
dec
data16
mov
nop
add
jle
xor
xor
lret
inc
fnstsw
sti
inc
push
xor
dec
cmp
insl
xor
and
cmp
mov
lret
sub
sbb
inc
pop
pop
xor
mov
sub
push
movsb
mov
cld
mov
sub
call
aas
aad
add
shll
stc
int
mov
dec
sbb
aad
mov
xchg
sbb
mov
pop
or
clc
sbb
inc
mov
daa
sub
dec
adc
cmpsl
jle
outsl
jmp
pushf
push
mov
ja
add
data16
xlat
ret
orl
cwtl
xchg
out
jmp
or
mov
sub
leave
xorb
push
cli
out
mov
adc
push
mov
pop
xor
sub
fstl
mov
pop
push
pop
and
loop
pop
dec
outsl
lret
mov
loopne
cli
cmp
ja
push
xchg
mov
rcrb
gs
incb
dec
leave
stos
cltd
sub
out
mov
push
mov
test
pop
mov
cmpsb
repnz
shrl
leave
pop
xor
xchg
cli
dec
in
jle
js
cmp
sub
mov
scas
jg
call
xchg
xor
xor
es
addr16
mov
push
sub
cmpsl
cmpsl
int
cli
cld
adc
test
hlt
jg
cmp
pop
xchg
pop
repnz
pop
test
in
es
inc
data16
xor
popf
xchg
push
sbb
xorb
xor
subl
jp
xchg
push
lcall
pop
add
mov
cwtl
pop
sbb
lahf
cmp
mov
push
call
push
mov
lahf
rcrl
jns
out
xchg
out
cwtl
stos
loopne
shr
hlt
fmuls
ja
dec
adc
or
and
mov
push
mov
mov
inc
in
or
cmc
mov
xlat
cwtl
pop
mov
jbe
lahf
in
xchg
ja
movsb
lock
fdivrs
je
stos
enter
rcrl
mov
inc
jae
or
jl
xorl
rcrl
push
dec
mov
mov
inc
mov
movsl
andl
sub
sub
popf
repnz
lea
pop
xor
out
rcrl
jecxz
sbb
ret
ja
cs
scas
mov
xchg
out
clc
addr16
ljmp
dec
mov
mov
das
mov
xchg
into
gs
aad
add
cmp
scas
iret
jmp
nop
mov
aam
xlat
xlat
sub
adc
fsubrl
movsb
inc
xchg
sub
pusha
mov
mov
xchg
fidivs
divb
xchg
jae
mov
mov
out
dec
cli
lock
inc
mov
out
scas
jo
repnz
les
mov
mov
mov
popf
mov
lods
mov
ljmp
movsb
out
in
andb
jb
loop
inc
pop
inc
inc
lods
negl
jge
cmp
mov
mov
es
lcall
imul
cmpsl
sbb
test
ret
and
insb
loop
cmp
hlt
adc
mov
xchg
sbb
mov
jo
inc
insl
mov
aam
xchg
and
inc
cmpsl
sbb
pushw
and
xchg
mov
mov
divb
aaa
icebp
sar
mov
loopne
jbe
pop
xchg
mov
dec
in
dec
mov
push
in
or
imul
dec
xchg
mov
pusha
add
mov
stos
mov
xchg
out
cld
ljmp
in
cs
pop
aam
into
ds
mov
icebp
mov
jne
sub
loop
cmp
xor
push
leave
repnz
adc
iret
inc
cvtps2pd
je
cmc
fisubl
mov
movsl
and
loop
jl
mov
jnp
cltd
mov
push
out
sbb
movsb
mov
call
mov
cmpsb
dec
and
xchg
in
test
nop
mov
dec
adc
aam
mov
lahf
ja
xchg
popf
mov
fcomi
imul
mov
mov
xchg
int
mov
sub
icebp
mov
mov
dec
out
sbb
inc
and
dec
fstpt
cmpsl
dec
jb
repz
movsl
leave
clc
xlat
mov
sbb
mov
test
sar
shll
mov
xchg
into
movsl
lahf
dec
mov
sbb
mov
sub
sub
scas
enter
pop
insl
xlat
repnz
mov
and
leave
inc
cltd
pushf
jmp
pusha
ret
xor
add
popf
cwtl
push
mov
push
stos
mov
test
sahf
push
ja
cmc
jg
movsl
mov
and
mov
and
icebp
inc
mov
shll
pop
hlt
or
rsqrtps
je
push
es
sti
mov
ffreep
pop
xchg
test
pop
mov
lods
in
cmp
sub
loop
loope
fistl
sti
xchg
jmp
int
sub
xor
jmp
xor
dec
bound
aam
cmpsl
xor
in
pavgw
adc
jne
shll
jo
in
lds
jp
or
repz
or
repnz
lea
mov
pop
call
push
adc
cld
and
mov
stc
jmp
lds
mov
mov
jge
ficomps
lock
ficoms
mov
hlt
outsb
pop
xor
jmp
xchg
pop
dec
clc
cli
or
mov
pop
mov
in
popa
lea
xor
pop
sar
jmp
aas
rsqrtps
cmp
jns
jns
jbe
cmp
push
inc
lret
dec
and
setns
jle
pop
mov
fmul
iret
jmp
sub
lea
cmp
ficomps
adcl
stc
loopne
push
gs
pushf
pop
and
cltd
mov
loop
leave
add
loopne
sarb
cmp
mov
pop
aaa
xor
cmpsb
push
push
out
movsb
dec
outsb
xor
mov
imul
and
hlt
js
fisubs
in
xchg
dec
int3
pop
pushf
adc
push
popf
hlt
pusha
popa
insb
hlt
jne
js
xor
push
add
sbb
out
inc
add
jo
fcomi
in
cltd
int
je
lcall
adc
int
pop
and
push
add
int
mov
dec
out
jno
lahf
push
pop
push
cmp
sub
jne
in
push
xchg
jmp
push
mov
push
pop
push
int
sub
sbb
loop
rorl
push
jl
int3
and
out
outsl
lret
shll
aas
inc
aas
insb
cld
dec
insb
shlb
daa
push
mov
jle
cmp
cmpsb
inc
stos
les
jl
pop
dec
mov
mov
sub
add
into
cmp
fisttpll
out
mov
pop
xor
repnz
push
pop
out
jecxz
daa
out
scas
lods
gs
mov
jns
xchg
sub
bound
pop
gs
inc
inc
cmp
lds
sbb
popa
shll
in
jae
push
decl
sbb
pop
sbb
pop
mov
or
in
mov
sbb
adc
mov
ljmp
dec
sub
nop
lods
mov
jmp
xchg
pop
dec
pop
adc
daa
and
loop
insb
js
xor
inc
cmc
add
mov
aas
test
ret
bnd
sub
xchg
mov
inc
sarl
imul
movsb
sub
aad
les
pop
movsb
jo
jl
mull
sbb
bnd
lret
aad
xchg
mov
push
or
movsb
xor
nop
fmuls
rorb
sbb
mov
adc
xchg
mov
cmp
lods
test
test
sahf
leave
stos
jle
jnp
stos
cmp
push
mov
mov
xchg
add
mov
push
or
cmp
lahf
pushf
dec
and
mov
cmp
lahf
mov
xor
push
out
ficoms
ja
insb
test
xor
frstor
in
addl
data16
ja
pusha
icebp
lahf
mov
push
cli
aas
scas
outsl
xchg
rcrl
adc
shrl
scas
aas
clc
jecxz
inc
mov
in
xorl
add
sbbb
mov
mov
cmp
lahf
lds
nop
pop
int3
mov
sbb
pop
leave
insl
push
cs
shlb
cld
test
fmull
inc
insb
inc
loop
insl
imul
mov
fidivl
fildl
testl
outsl
and
out
fnsave
sti
mov
and
cmp
mov
sbb
out
cmp
in
add
into
in
mov
adc
lret
enter
xor
xchg
push
fistps
mov
mov
sub
sahf
xchg
add
addr16
push
jae
in
cmp
lret
add
xchg
add
idivb
lahf
sbb
fisubl
scas
or
sbb
subb
sub
das
pushf
lock
or
sbb
das
in
lcall
loopne
test
xlat
xor
pop
aad
lea
add
adc
jo
addl
or
hlt
lea
in
xor
mov
fld
xor
out
mov
pop
leave
mov
add
pop
dec
or
int3
mov
arpl
incb
call
inc
ja
mov
lea
jbe
aam
mov
stos
test
fisubs
out
in
jle
xor
pop
cmpsl
dec
dec
fnop
add
inc
push
xchg
jg
jge
mov
or
lea
lock
jmp
fadds
inc
subl
ret
push
arpl
xchg
jle
push
mov
scas
and
aaa
nopl
mov
scas
mov
test
adc
sub
jno
xor
das
lods
inc
insw
and
or
out
aad
inc
ljmp
fists
sbb
dec
loope
test
dec
mov
orl
adc
or
cwtl
incl
scas
push
int
je
sub
and
fmull
xchg
insb
mov
or
sub
mov
cmp
stos
pop
jnp
fiaddl
lods
cmp
loope
xor
cwtl
add
dec
hlt
xchg
rolb
adc
sub
ja
repz
add
pushl
fcoms
pop
xchg
pop
inc
repz
out
ret
xchg
lahf
pop
invd
cs
push
jl
xchg
sub
lock
cmp
aas
add
xchg
stc
out
pop
imulb
pusha
push
mov
push
mov
mov
mov
add
jns
cmp
cltd
mov
or
sbb
stos
sub
jmp
int3
je
loopne
jno
out
pop
pop
test
xchg
call
xchg
xchg
mov
adc
xchg
lret
cmp
test
mov
leave
or
aad
in
xor
sbb
in
clc
lcall
addr16
ja
pop
sub
sbb
sub
imul
scas
adc
mov
xchg
push
adc
arpl
cmpsb
jmp
mov
mov
iret
idivl
clc
cmpsb
sub
not
jo
outsb
insb
push
outsl
cs
sub
pop
add
push
jo
and
mov
jmp
stos
xor
jnp
mov
or
sub
out
insb
inc
inc
push
out
std
mov
jne
sub
mov
scas
jb
or
mov
lcall
ljmp
cmp
pusha
cltd
push
inc
sub
js
test
mov
fisubrs
lea
jecxz
mov
adc
scas
out
add
add
add
jno
dec
dec
scas
and
mov
pop
pop
fadds
fisubl
sub
push
lcall
adc
inc
xchg
outsb
lret
sti
pop
clc
dec
lret
les
les
push
ljmp
sub
das
fdivrl
xor
mov
sub
jp
ret
loop
jg
mov
pushf
or
in
loop
adc
shll
add
xchg
push
xor
cmp
cmpsl
test
mov
je
fwait
insb
addr16
fbld
push
jno
stos
shll
loope
jmp
mov
leave
push
fmulp
test
push
ja
sbbl
push
mov
gs
js
mov
cmpsb
jnp
int
or
dec
push
push
stos
rclb
lret
inc
data16
inc
in
idivb
push
ret
pusha
mov
add
fnstsw
cltd
pop
push
lock
ja
ja
pop
jnp
int
ret
addl
mov
mov
int
pop
mov
scas
lret
lock
sub
in
data16
mov
sbb
das
shll
ret
scas
pop
cwtl
ljmp
mov
xor
test
arpl
repnz
and
in
pop
mov
mov
out
ljmp
test
xchg
cmpsb
icebp
rcr
lahf
in
fldcw
imul
mov
cmp
cs
or
mov
imul
mov
ds
paddsb
faddl
das
pop
clc
lcall
rclb
sub
loopne
adc
clc
xchg
xor
or
test
pop
xlat
xor
xor
inc
imul
inc
clc
push
sbb
xchg
jne
rorl
inc
out
fisubrs
shll
clc
sbb
aad
jo
mov
test
repz
mov
mov
jns
push
inc
mov
cmp
enter
xchg
lock
adc
scas
jl
push
bound
test
mov
adc
bound
dec
out
cmp
fcmovu
call
outsb
filds
xchg
jp
addr16
enter
aaa
shll
dec
or
adc
mov
fwait
or
mov
inc
mov
pop
das
and
adc
loope
dec
fwait
scas
scas
xlat
and
outsl
or
pcmpeqd
sub
outsb
repz
fimuls
or
insl
dec
ret
test
dec
mov
std
mov
jnp
fdivl
sub
pop
scas
lods
jns
dec
inc
xbegin
sti
mov
fs
pusha
jle
push
imul
pop
out
push
fistps
mov
test
inc
pushf
into
test
pop
jg
xchg
xchg
mov
inc
lds
daa
jno
js
rcll
mov
sub
add
ret
dec
cmc
cmp
aam
shrl
jo
add
add
inc
xor
in
cld
movsl
roll
sti
xor
xchg
cmpsl
add
sarb
psrlq
jbe
roll
nop
jb
cmp
fnstenv
inc
xor
stos
inc
inc
shrb
sbb
push
mov
xchg
add
and
and
pop
fucomi
add
ss
and
push
push
movsb
sub
repnz
xchg
pop
mov
adc
or
or
jp
mov
pop
imul
sbb
jb
cmp
xlat
sbb
js
call
inc
push
scas
fmuls
stos
cli
pop
mov
inc
sub
xchg
mulb
test
test
mov
sbb
scas
inc
inc
stos
sbb
mov
hlt
out
xchg
fs
adc
sub
pop
inc
pop
jnp
jge
out
shll
pop
icebp
nop
adc
push
imull
fidivrl
jo
dec
mov
pop
and
or
mov
movsb
fstpt
pop
adc
loop
lock
jbe
dec
xor
mov
xor
push
sbb
insb
inc
nop
pop
inc
int
movsl
iret
and
mov
mov
jecxz
dec
lcall
sahf
jp
orb
fstpt
mov
adc
pop
push
dec
xchg
fwait
sbb
int
xchg
test
js
pop
add
jae
cmp
repz
in
rcl
loopne
xchg
mov
mov
dec
jg
rcll
adc
das
test
lret
inc
push
sbb
push
adc
mov
adc
dec
lcall
adc
inc
call
addr16
imul
sahf
push
shrb
adc
js
mov
and
addl
daa
sub
mov
xor
fnstsw
sub
stos
daa
fisttpll
sbb
ljmp
imul
imul
out
jnp
jno
daa
mov
call
jge
jle
addr16
js
jecxz
and
incl
mov
and
orl
in
sbb
pop
lock
out
test
inc
jbe
push
fwait
push
clc
xchg
fnstcw
push
mov
vpcmpgtw
push
push
mov
push
jns
outsl
jle
mov
fs
cmp
add
sub
mov
cmp
jnp
cmpsb
aaa
mov
or
mov
sub
cltd
push
push
push
cmp
cwtl
push
loope
cmp
mov
sbb
jbe
dec
call
dec
std
push
fsubr
outsl
fiadds
daa
push
mov
push
ja
addb
or
jl
mov
movsl
push
or
in
or
movsl
stos
mov
jl
mov
jl
aas
mov
mov
fcompl
pop
inc
push
inc
sub
test
hlt
adc
cwtl
mov
sbb
mov
dec
mov
sub
push
fidivrs
pop
inc
inc
int3
xchg
jge
cmc
dec
sub
lcall
xchg
in
sbb
xchg
popf
and
fcmovnu
cmp
imul
mov
push
xchg
jno
push
push
xchg
cmp
sub
gs
xor
or
mull
xor
jo
inc
cmp
enter
js
push
iret
mov
pop
push
call
addr16
xor
xchg
orb
xlat
mov
int
mov
sbb
mov
xor
ficompl
loopne
jo
fimuls
and
std
int
ljmp
inc
mov
mov
cmp
popf
push
jae
push
jmp
shlb
inc
ja
add
pop
adc
or
into
or
push
sub
ret
test
rolb
aam
mov
clc
dec
mov
fmuls
nop
mov
test
jo
rcrl
cs
ret
outsb
inc
dec
stos
outsl
aam
outsb
aad
mov
mov
dec
or
xor
sti
ljmp
push
pushf
and
mov
repnz
out
cmp
cmp
xor
aam
cli
xchg
imul
push
jb
lret
aas
adc
jo
fidivs
sahf
cmpsl
scas
mov
xchg
dec
mov
mov
add
jmp
lret
out
shl
inc
xchg
sti
xor
and
add
xor
xchg
mov
into
jb
mov
mov
jg
insl
xchg
or
jo
inc
jg
mov
lock
mov
in
push
xor
or
rorb
mov
jae
test
inc
push
cmpsb
clc
sbb
sub
add
int
pop
insb
inc
sub
movsb
dec
add
lret
jno
mov
ret
pop
xor
incl
cli
out
cpuid
out
inc
arpl
popf
cld
cmp
and
aas
adc
push
xor
cmp
mov
sub
fstps
ret
into
mov
add
or
hlt
mov
lock
mov
cmc
cmp
adc
lcall
jge
test
push
jo
jnp
cmp
xchg
inc
sbb
mov
je
or
pop
mov
mov
and
mov
daa
ja
jns
aaa
sub
xchg
and
out
sti
inc
push
inc
repnz
cmpsb
or
lret
pop
hlt
test
cmp
cmovg
fisubl
mov
cmc
gs
xlat
int
cmpsb
js
mov
push
jl
hlt
aaa
adc
push
jns
sbb
adc
aad
adc
xor
inc
aam
dec
bound
mov
adc
mov
xchg
mov
jb
dec
jne
xor
sub
xor
add
push
mov
enter
ret
jge
jno
daa
mov
xchg
out
cld
xchg
orl
push
pop
test
repz
push
lock
xor
mov
insb
jle
ds
jns
roll
mov
mov
fdivp
cmp
mov
mov
lcall
int3
push
out
sub
xor
pop
lret
mov
jbe
add
inc
and
subb
dec
insb
out
push
jns
add
mov
jbe
mov
inc
mov
mov
sbb
adcl
xchg
out
pop
in
pop
and
inc
scas
push
insl
test
dec
clc
in
insb
roll
xchg
sub
loop
mov
cmpsb
sub
cmp
xchg
xchg
imul
les
adc
loopne
pop
repz
std
or
clc
and
loop
lcall
mov
test
pop
sub
dec
into
aaa
sahf
jo
gs
jae
sub
mov
adc
mov
and
in
add
mov
scas
cwtl
push
mov
mov
sub
rcl
fstpl
mov
arpl
sbb
insb
push
xchg
fucomi
push
xchg
sbbb
jle
pop
pop
inc
dec
push
insl
cmp
cmp
aad
test
push
bound
pop
push
ror
adc
xor
jle
pop
mov
pop
lret
ss
adc
add
push
mov
insb
mov
xchg
inc
pop
in
jns
inc
outsb
adc
enter
jno
les
sbb
stos
push
ret
scas
rcll
xor
loope
ljmp
push
xor
mov
fisubrs
adc
sbb
clc
inc
subl
dec
clc
dec
mov
xor
sbb
lcall
mov
pop
shll
sbb
push
xchg
outsl
sub
insb
sbbb
adc
push
push
or
mov
push
pop
push
push
or
adc
test
adc
or
push
shl
xchg
fcompp
ja
lahf
jo
inc
cmp
cmp
add
cltd
bound
dec
test
dec
andl
push
pop
std
in
mov
mov
lods
push
mov
cli
jmp
lcall
out
mov
or
shl
push
jb
jg
daa
xlat
pop
adcb
test
mov
xchg
popf
xor
mov
mov
pushf
pop
cmpsb
adc
nop
imul
lock
popa
icebp
mov
and
andl
in
xchg
sbb
aaa
and
arpl
dec
xchg
mov
add
je
push
cwtl
out
sbb
xchg
sub
push
nop
mov
push
ret
pop
dec
call
mov
fadds
bound
jo
out
test
dec
xchg
jl
adc
sbbb
mov
mov
rol
sbb
mov
pop
js
pushf
and
pop
enter
fdiv
dec
pusha
iret
lret
divb
push
sar
sbb
pop
cmp
sub
ja
hlt
arpl
ds
xor
add
mov
mov
mov
pushf
ret
add
fbld
andl
cmpsb
lret
les
ror
fs
sbb
je
lret
sub
add
sahf
adc
stos
mov
sti
mov
stos
pop
imul
incb
mov
add
movb
xlat
lret
or
jns
enter
jb
mov
les
sub
sti
dec
jp
aas
pop
sub
jecxz
stc
jmp
jb
inc
repnz
push
push
popa
insl
or
das
sahf
lret
or
pushf
sahf
fstp
xchg
mov
out
cwtl
loop
shlb
mov
movsb
sarb
push
je
test
ja
dec
push
outsl
jg
stos
push
jns
xor
in
in
cmc
mov
xor
in
test
fwait
sub
mov
repnz
inc
sub
pop
in
push
mov
pop
and
into
lock
xchg
push
inc
pop
push
pop
out
into
and
xor
ljmp
cmp
cld
add
test
inc
push
fbstp
sub
je
cmp
lds
dec
adc
xor
js
mov
call
shll
xor
mov
push
gs
jmp
insl
insl
inc
inc
popa
or
les
imul
push
dec
push
lea
adc
lea
or
pop
incb
clc
mov
call
mov
mov
cmp
ja
push
xor
add
add
cmp
sbbl
cmp
fisttps
les
test
aam
outsl
ficoml
lahf
scas
dec
pushf
dec
mov
push
shrl
sub
sar
sub
push
mov
push
repz
lahf
mov
repnz
pop
jne
repz
int
push
mov
or
xor
push
fidivrs
mov
xchg
call
mov
jnp
inc
inc
icebp
gs
fsubrl
cmp
jnp
mov
cli
mov
addr16
cltd
cmp
mov
popa
daa
bound
lret
hlt
stos
or
pop
jp
mov
aas
fidivs
xchg
cld
mov
mov
out
inc
xchg
or
and
xor
gs
xlat
push
lcall
push
adc
mov
jno
mov
pop
shl
in
mov
push
cltd
or
inc
jo
fsts
mov
loopne
rorb
loopne
jno
stos
ret
out
mov
pusha
je
std
cli
scas
inc
lret
add
add
cmp
and
sub
cmpsb
pop
and
into
lret
aaa
cmp
xchg
clc
sub
cmp
add
pop
out
and
aas
lods
xchg
xchg
dec
mov
xchg
aaa
push
lcall
jnp
in
jb
cwtl
adc
shlb
ljmp
push
add
dec
jae
mov
icebp
push
scas
adc
pop
lods
call
jb
cmp
jae
push
cmp
xor
lcall
fbstp
pop
push
ljmp
popa
sbb
xchg
decl
movsb
xor
popa
or
cmp
add
test
imul
hlt
ror
in
xchg
dec
cmp
cmp
mov
push
sub
into
or
loope
pshufw
enter
sub
push
pop
mov
mov
push
xchg
dec
cmpsl
jg
ljmp
cmp
mov
enter
sub
imul
mov
std
adc
inc
sbb
stos
cmp
sbb
popa
push
or
xor
add
insl
outsl
jmp
fs
adc
or
movsl
test
pop
aad
inc
mov
js
clc
push
mov
push
pop
cmp
mov
and
push
mov
push
inc
jmp
sub
mov
lods
in
push
out
daa
aaa
cltd
scas
and
pop
fistps
sbb
push
popa
negb
mov
jmp
ret
jp
imul
sub
gs
cmp
je
mov
lds
enter
mull
imul
out
stos
and
xchg
fadd
cs
orb
mov
lcall
lahf
test
pop
nop
push
and
push
es
outsb
pop
xchg
xchg
movsb
sbb
rol
les
ja
nop
ror
adc
jns
scas
int
lcall
test
cli
add
psubsw
jb
inc
add
push
imull
jae
aaa
push
inc
push
sbb
xchg
pusha
mov
mov
fsubrl
or
fadd
iret
push
sub
lea
jge
out
sbb
pushf
mov
lods
jmp
pop
ja
ret
lcall
scas
sbb
in
mov
rcrl
repz
sub
mov
cmpb
psubq
xchg
mov
push
cltd
lock
pop
ret
mov
lods
hlt
mov
icebp
cmp
loopne
ret
insb
jae
stos
ret
cmp
pop
ficompl
test
ljmp
lahf
int
push
xlat
inc
lods
add
jg
xchg
push
dec
sbb
ret
cmp
xchg
shlb
stos
mov
push
lcall
push
xor
mov
dec
dec
push
dec
mov
movsb
dec
pop
aas
out
js
decl
cld
mov
pop
push
mov
sti
lcall
sahf
mov
jb
mov
loopne
pop
dec
sbbb
shrb
xchg
in
xchg
mul
mov
xchg
jmp
mov
add
repnz
sahf
sbb
sbb
mov
adc
aas
cmp
pop
cli
jae
cs
adc
mov
sbb
lret
mov
scas
out
das
or
or
cmc
loop
data16
div
sbb
mov
xchg
jne
outsb
lods
shll
mov
cmpsb
mov
popf
dec
in
aad
les
xor
jns
add
imul
jno
jnp
outsl
add
dec
cmpsb
jg
xorb
lock
orb
cmpsl
mov
in
nop
aas
jae
jbe
ret
loop
inc
jecxz
loop
enter
das
cmpsb
aas
mov
mov
outsl
jnp
inc
adc
leave
sbb
dec
scas
mov
repz
pusha
outsb
fstps
clc
nop
jmp
sbb
mov
pop
mov
xchg
in
scas
or
jmp
loope
test
mov
imul
inc
mov
push
push
pop
das
and
sbb
jns
mov
sbb
mov
cmp
or
lods
rorl
iret
ret
cmc
dec
xlat
loopne
imul
add
lcall
add
daa
lret
ror
je
pop
nop
mov
push
scas
fidivl
lcall
cmpsl
add
insb
sub
roll
sbb
adc
mov
mov
ror
lds
mov
cmpsb
add
xchg
and
or
leave
push
xchg
inc
xor
hlt
out
lea
jb
push
loopne
pop
pop
push
fstl
push
inc
mov
inc
pop
pusha
out
test
pop
xchg
test
fs
jns
mov
scas
or
add
push
das
cmp
and
ret
and
add
movsb
pop
xor
rclb
or
xchg
setae
jmp
jp
pop
jle
popf
mov
xorb
ret
loopne
aas
icebp
cs
push
cwtl
int3
xor
pop
call
scas
mov
xor
out
cli
push
and
fists
pinsrw
fldt
push
std
fucomi
movsb
push
ficoml
push
mov
and
jne
pushf
cmp
fisttps
gs
dec
mov
aas
movsb
lret
push
ficoms
test
into
jbe
pop
pusha
repnz
movsb
mov
sbb
enter
arpl
sub
divb
or
mov
pop
out
dec
mov
add
push
out
jge
enter
xchg
js
mov
in
jb
mov
shr
data16
xchg
inc
loopne
mov
jnp
adc
daa
loope
fisubrs
out
adc
jns
fsubl
enter
push
jmp
pop
int
sub
shlb
scas
jne
dec
lods
ljmp
cmpsb
mov
enter
xorb
xchg
pop
sub
jle
jg
jle
push
lock
decl
mov
lods
xchg
xchg
or
imul
mov
or
xchg
testb
in
sahf
mov
mov
xchg
cmp
xor
std
loope
jae
out
dec
cmp
test
aad
dec
jno
push
mov
lea
cltd
loop
orb
in
adc
adc
fistpll
lgs
adc
and
jno
out
fidivl
mov
inc
xlat
push
int
adc
pop
xchg
add
mov
jecxz
in
xchg
add
icebp
sub
cmp
sbb
test
push
das
mov
xlat
adc
fs
pop
outsb
rcl
inc
test
inc
and
data16
stos
in
add
pop
out
fistpll
dec
ss
pop
in
nop
mov
and
and
sub
push
test
push
popf
push
leave
lcall
bound
sbb
lds
aas
sbb
nop
clc
pop
test
jle
inc
adc
inc
cs
lods
push
adcb
je
cld
cmpsl
fwait
outsl
cmp
mov
enter
imull
outsl
fisubs
stos
inc
leave
js
dec
jmp
pop
cld
dec
outsb
sbb
into
or
aam
jp
add
xor
dec
push
fs
call
pop
xchg
sbb
les
mov
lea
mov
xlat
rolb
mov
fld
lcall
pop
sbb
cmc
push
mov
mov
stc
or
js
in
daa
inc
rcrl
dec
fldenv
decl
add
shll
mov
xchg
stos
jp
aam
jp
push
push
xor
stos
inc
add
xor
lret
xor
push
adc
lods
mov
outsb
aam
dec
adc
xchg
push
dec
stc
push
push
mov
add
push
jns
out
fcompl
flds
fs
mov
pop
int3
push
lret
es
int3
push
xor
cmp
push
and
or
flds
nop
pusha
lock
xchg
jne
insb
jnp
cmc
jb
add
sbb
pushfw
jbe
sub
ret
out
inc
adcl
jae
in
sbb
xchg
sbbl
gs
xchg
int3
scas
pop
sub
in
je
pop
sub
mov
test
jno
mov
stc
movzbl
ja
sbb
cmpsl
lret
mov
test
cli
ja
das
sub
sub
ljmp
mov
mov
jge
cmp
or
sbb
and
mov
call
push
xchg
xchg
xor
das
pop
jge
jb
xchg
pop
int3
inc
mov
jl
pop
outsb
fldenv
not
pop
outsl
mov
fadds
jecxz
sub
stos
xor
data16
bound
icebp
jle
push
xchg
push
jae
jbe
mov
mov
ror
inc
mov
inc
xor
jecxz
add
addr16
xchg
or
lods
dec
mov
cmp
cmpsb
mov
sub
bound
add
push
stos
dec
and
sub
add
push
push
test
add
xchg
addr16
fcoml
ret
pushl
aam
outsb
push
daa
cmp
nop
jne
mov
or
ljmp
jns
or
fldt
js
rcrl
cmp
dec
mov
mov
and
sbb
inc
jge
fwait
inc
jbe
dec
inc
cmp
imul
jne
mov
shr
std
xchg
fwait
dec
xor
xchg
aas
daa
mov
stos
add
cmp
mov
rcll
adc
fnop
ds
je
cmp
fmuls
fs
sub
sti
stos
nop
lds
mov
push
jg
loop
jge
xor
ficoml
movsl
inc
sub
xlat
inc
cmpsl
or
add
cltd
or
mov
in
or
mov
mov
mov
nop
adc
lret
cs
int3
push
push
fld
xchg
dec
mov
into
pop
and
cwtl
push
lcall
call
adc
lock
mov
inc
cmp
jbe
incb
aad
out
in
bound
add
mov
adcb
pop
jp
xchg
fninit
outsl
xor
or
mov
push
int3
xor
and
xchg
enter
dec
xchg
cmc
popf
or
test
scas
int
sub
mov
int
dec
jge
or
gs
mov
fucomi
iret
insb
jge,pn
xor
add
aaa
andb
aas
push
xchg
stos
shl
scas
incb
rcrl
ds
ja
jg
mov
dec
rcrb
and
stos
cmp
inc
mov
xor
or
aad
xor
repz
sub
fsubrs
pop
and
push
add
out
ret
jge
jge
cmp
sar
jge
xor
xor
xor
push
mov
jle
stc
mov
ds
fmull
sub
mov
xor
movsl
jp
lahf
and
aam
xchg
mov
sub
dec
aam
jnp
cmc
insb
into
mov
daa
leave
or
or
data16
test
mov
lcall
sub
sub
ja
adc
mov
inc
mov
out
push
sti
sbb
xchg
js
xor
cmc
mov
and
daa
dec
fwait
or
repnz
aad
sub
pop
pop
xor
sbbl
je
outsl
mov
std
xchg
sbb
xor
dec
pop
stos
js
dec
add
mov
dec
jmp
pop
mov
mov
mov
test
fcom
and
mov
push
lea
pop
jmp
dec
jp
jb
stos
enter
fisubrs
push
mov
popf
dec
rclb
stos
push
xchg
jecxz
and
add
jno
out
cmovp
sbb
mov
mov
aam
outsl
xchg
xchg
cli
or
in
and
mov
aad
shlb
mov
xor
in
jmp
repnz
js
out
fidivl
cmpsb
hlt
rorl
xor
rclb
ffreep
or
jbe
test
mov
test
jnp
test
and
jo
movl
pop
es
repz
push
pop
and
push
sbb
aaa
xchg
jo
dec
ljmp
out
pop
pop
popa
rcrl
add
aaa
cmpsb
mov
cmc
test
aas
stc
notb
inc
or
ds
in
mov
int
jg
mov
push
int
push
xor
or
incl
adc
outsl
or
cmp
push
add
nop
aaa
xchg
cltd
pop
sbb
inc
sub
data16
ja
nop
inc
lret
sub
xchg
push
and
push
repnz
test
sbb
lods
fnstcw
mov
pop
lahf
cli
xor
dec
push
mov
stc
testb
es
sahf
pop
das
and
xor
sub
mov
call
or
lahf
push
pop
jl
sub
in
arpl
jmp
movsl
xchg
imul
daa
sti
dec
xor
cs
repz
ds
jb
aaa
das
jnp
mov
mov
lahf
int
sub
xchg
mov
and
xor
xor
cs
mov
test
xor
cmp
mov
rcrb
inc
je
push
loop
mov
pop
adc
ljmp
jb
orb
imul
int3
fwait
hlt
mov
xchg
hlt
cld
idiv
cs
test
pop
mov
pop
pop
jno
fwait
in
push
jmp
pop
stos
jbe
or
and
push
fisttpl
jns
repnz
gs
in
inc
mov
dec
or
ljmp
xor
mov
mov
lods
lock
arpl
dec
jo
ja
mov
nop
mov
adc
push
lods
hlt
push
int
jmp
or
dec
inc
lcall
je
repz
sbb
dec
xlat
push
jae
push
add
nop
mov
mov
gs
mov
pop
and
mov
das
jns
int
mov
cmp
lock
imul
nop
test
imul
stc
cmp
push
clc
andl
xlat
mov
div
idiv
data16
ret
jp
scas
jb
inc
jae
cld
neg
inc
enter
xor
pop
sbb
movsl
cmpsb
loope
cmp
jecxz
cmovae
orb
xlat
call
add
xchg
lds
faddl
dec
loope
movsb
test
push
fadd
mov
pop
jo
ss
xchg
mov
movb
jecxz
add
sub
jmp
loope
push
das
jno
scas
push
insl
inc
dec
test
sub
inc
adc
mov
xor
adc
jns
lods
mov
xchg
mov
sbb
in
sbb
push
pop
xchg
fdivrp
push
test
add
mov
pop
sbb
xchg
sbb
push
jne
out
sub
movsb
push
stos
adc
loope
iret
in
enter
mov
sti
jns
jp
add
sbbl
sbb
lds
sub
jo
pop
pop
ret
or
inc
jecxz
aad
sbb
xchg
out
fdivl
dec
sbb
mov
push
xchg
out
push
cmp
and
aaa
popa
and
mulb
mov
ffreep
push
js
dec
or
aad
mov
or
cmp
lods
mov
pop
jmp
sbb
xchg
ljmp
xor
movsl
repz
cwtl
mov
sbb
dec
sti
or
cmp
add
bound
dec
sbb
outsb
daa
imul
test
sub
scas
mov
push
shll
in
inc
cld
pop
aaa
pop
inc
xchg
mov
or
sub
mov
cwtl
push
nop
sub
aas
in
pop
jge
enter
out
into
imul
fdivs
or
dec
push
cwtl
fistps
mov
or
or
sbb
test
stc
fwait
cmp
adc
xor
scas
pop
not
push
rolb
ror
cmp
and
outsl
fsubs
sbb
cmpsb
dec
test
cmp
addr16
jno
aaa
cmpsb
int3
outsb
cmp
out
jmp
push
and
iret
adc
rclb
mov
movsl
insl
fcomps
inc
out
loope
outsl
mov
aam
dec
insb
cli
mov
mov
scas
cmp
mov
and
int
mov
jmp
dec
xor
fdivrs
mov
data16
sbb
and
jbe
mov
push
and
stos
add
cli
xor
xor
int
xlat
pop
mov
gs
fidivs
out
pop
int
adc
fists
call
movsb
mov
scas
shrb
ret
adc
sbb
push
sbb
mov
lods
sub
bound
mov
jmp
sub
in
fmull
pop
inc
sub
mov
dec
fwait
fwait
adc
xchg
add
xor
ret
les
xor
sahf
ret
fwait
sub
fsubrs
cli
loopew
sub
pop
in
fcmovbe
fnstcw
sub
loope
mov
daa
inc
test
jge
lods
sbb
mov
hlt
jle
pop
repnz
jo
adc
mov
jbe
lcall
sub
loop,pt
ja
outsl
push
rcrl
leave
mov
repnz
xchg
push
je
inc
or
out
ds
adc
jno
adc
pusha
mov
pop
jle
add
pop
inc
pop
test
aas
push
and
push
adcl
into
cwtl
nop
add
testl
stc
inc
xchg
and
out
out
pop
cmp
push
xor
inc
xorb
jb
sbb
pop
pop
int
xchg
inc
dec
aam
and
mov
repz
jp
js
jg
aas
cmp
fwait
lret
call
shll
lret
testl
dec
pop
idiv
or
push
fstpt
dec
ficompl
ss
xchg
daa
inc
jmp
sbb
adc
or
jmp
loopne
pop
pop
jp
adc
adc
andb
push
sbb
ja
push
das
cld
imul
stos
inc
lret
aaa
and
inc
xchg
in
push
inc
sub
push
xor
cld
test
stos
sbb
push
mov
sub
xchg
data16
push
or
ljmp
xor
mov
push
sbb
imul
insb
call
xor
push
das
push
xchg
and
jno
inc
jg
aas
stos
hlt
sti
pop
inc
lret
daa
ja
jae
pop
xchg
pop
gs
jbe
or
movsb
mov
mov
jg
mov
ljmp
or
movsb
pop
sarb
xchg
mov
mov
pop
jo
stos
lret
pop
call
out
jl
mov
inc
fsubp
mov
dec
mov
in
stos
cmpsl
adc
leave
xchg
in
xor
cmp
int
mov
ljmp
pop
test
aaa
fwait
data16
pop
test
sub
in
and
pop
dec
scas
xchg
dec
cli
iret
jae
loopne
cmp
call
enter
pop
loop
jns
js
xchg
lock
mov
mov
les
shl
xor
dec
sub
jle
sbb
push
mov
pop
adc
push
dec
adcb
push
ficompl
and
fbstp
pop
or
adc
pop
or
cltd
in
outsl
repnz
and
jle
sbb
les
pop
adc
hlt
mov
push
addl
pop
pop
stc
loopne
xchg
and
xchg
fsincos
add
push
jb
sbb
push
ja
sbb
pop
jle
insb
adc
test
bnd
add
push
shll
adc
pop
dec
nop
push
jl
loop
add
movsb
push
push
movsb
outsl
push
imul
jge
xlat
das
pop
or
aas
push
popf
xchg
mov
std
add
negb
add
into
bound
subb
insb
jno
mov
call
sub
js
push
xchg
lods
and
mov
rcrb
or
cld
rcr
add
in
in
push
pop
inc
adc
sub
pop
add
xor
loop
dec
dec
dec
adc
xor
test
sub
push
or
sbb
imul
and
or
mov
scas
call
mov
mov
icebp
and
sti
jbe
loopne
mov
or
arpl
jb
xchg
mov
shlb
mov
pusha
sub
and
pop
lret
movsl
cmp
aam
jle
clc
push
cmpsl
jmp
aaa
int3
je
loop
push
jmp
lds
imulb
shr
adc
sbb
rorb
loopne
inc
arpl
jg
jmp
push
fadd
js
sbb
in
cmpsl
jns
aad
mov
decb
rep
mov
aam
or
and
jp
sbb
pushf
dec
mul
mov
data16
dec
sub
sahf
mov
arpl
mov
outsb
xchg
or
add
sahf
xor
add
gs
pop
and
mov
mov
mov
sbb
addr16
push
adc
xor
mov
addr16
or
mov
mov
ds
xor
lahf
imul
adc
mov
xchg
aad
sub
dec
push
jle
popl
xor
arpl
dec
pop
cld
into
mov
in
popa
fildl
or
lods
sub
pop
xchg
add
cmp
inc
adc
rcrl
dec
add
int3
ret
mov
sub
leave
mov
pushf
pop
lcall
push
push
fs
loop
fimull
cmpl
lahf
decb
add
jae
or
xor
mov
sahf
scas
aad
outsl
test
aad
loop
add
or
fcmove
aam
stc
inc
in
js
xchg
ret
inc
bnd
loop
jno
mov
mov
lods
aaa
hlt
in
fs
pop
jl
enter
idivb
icebp
fsubrs
clc
push
lcall
mov
mov
lds
sahf
push
jp
dec
pop
xor
dec
xchg
in
dec
dec
adc
pop
sbb
cwtl
movsb
pop
dec
out
cmp
xor
mov
pop
fnstenv
lock
sarb
popf
jle
mull
enter
fimull
dec
cmpsb
test
adc
pop
xor
test
in
xor
mov
repnz
stos
out
cltd
outsl
sub
jnp
push
jmp
mov
cmc
js
pusha
scas
push
jae
bound
xchg
lods
fcoml
sbb
cmp
inc
mov
stos
mov
in
push
cmc
mov
xchg
subl
fisubl
xlat
pop
add
inc
push
in
ljmp
scas
jmp
jno
test
dec
inc
pusha
cs
adc
mov
fsubl
xor
jno
call
push
nop
jle
test
push
fcomps
hlt
xchg
fwait
jmp
push
fsubrl
sbb
mov
inc
pop
and
pop
bound
jne
sub
jp
pop
in
xor
pop
push
adc
sbb
inc
inc
cmc
adc
inc
mov
cmp
pusha
pusha
js
fiadds
lock
sub
dec
xchg
mov
xchg
cmp
dec
sbb
rclb
pop
add
push
xor
or
mov
push
hlt
in
outsl
mov
inc
mov
pop
push
dec
adc
and
call
adc
mov
mov
mov
test
adc
sbb
lods
shlb
lret
and
pusha
inc
jl
xor
fildll
xchg
push
jnp
cwtl
pushf
popf
mov
dec
sub
sar
daa
pop
xor
mov
push
mov
insb
or
or
fistpl
cmc
push
imul
jb
rclb
jo
mov
nop
mov
fldl
pmullw
inc
in
inc
fnstenv
pminsw
popf
jg
cld
clc
adc
jo
loop
in
xor
pop
dec
or
lahf
and
movsl
inc
mov
daa
fldlg2
mov
ret
fwait
lcall
clc
int3
hlt
lret
loopne
jno
xchg
push
scas
mov
stc
stos
icebp
testl
xlat
push
adc
mov
pop
ret
stos
sbb
push
jg
mov
into
sahf
imul
loop
int
cld
mov
pop
xchg
xor
ds
movsb
mov
and
popf
and
add
insl
sti
push
sbb
adc
or
jp
sarb
test
pop
ss
sub
inc
je
push
xor
xlat
inc
mov
sbb
xchg
mov
or
hlt
lcall
dec
sqrtps
dec
xchg
ja
icebp
sub
leave
addl
inc
fistpll
call
fildll
in
adc
stos
adc
ja
pop
cwtl
jle
out
xor
xchg
in
outsb
aas
lods
inc
out
push
ret
fisttps
and
popa
nop
les
dec
xor
jmp
fsubp
sbb
faddl
ret
adc
test
enter
stos
xchg
sbb
out
je
mov
test
bndldx
incb
loop
cmpl
push
jge
in
cmp
aam
push
or
xchg
fildl
ja
dec
xlat
pop
xor
lods
out
pop
aaa
xlat
jo
adc
addl
ds
in
data16
pop
add
xor
sub
js
mov
adc
ja
inc
push
pop
sbb
fwait
cltd
jnp
test
mov
shrl
outsl
jbe
cmp
test
jae
aad
lahf
out
add
sub
inc
std
popa
ds
or
nop
cmp
mov
aaa
hlt
addr16
ret
adc
out
stos
movsl
mov
pop
js
or
adc
mov
dec
lret
mov
cmc
pop
mov
mov
repnz
push
jmp
js
and
and
lcall
sub
subb
ret
leave
loopne
add
daa
push
lcall
insl
and
leave
aas
sub
push
jg
pop
xlat
shlb
test
pop
dec
mov
hlt
xorb
xchg
hlt
out
stos
insl
lea
sbb
and
sbb
inc
xorb
mov
fldt
xor
sbb
mov
lea
xchg
and
jo
add
incl
dec
cmc
dec
mov
xchg
lds
dec
cmpsb
insb
les
push
adc
fildl
sbb
movsl
push
fstpt
pop
loope
sbb
mov
pop
enter
imul
ret
push
and
scas
pop
sbb
cmc
xor
in
inc
orb
ss
xor
imul
pop
rcl
lods
icebp
and
adc
jno
push
stos
ja
dec
bound
out
test
sub
cmp
fs
movsb
mov
dec
mov
bound
popf
add
ret
mov
repnz
mov
loop
add
sub
mov
test
dec
jbe
mov
xchg
or
jp
ds
push
pop
ss
out
mov
xchg
movsl
imul
pop
lods
cmc
mov
pop
mov
mov
mov
sub
mov
sub
rcrb
mov
shl
fistpll
mov
dec
and
xor
pop
adc
into
in
dec
aam
lods
iret
or
cltd
fisubrs
dec
test
sahf
mov
push
dec
rol
out
daa
icebp
xor
pop
sar
xchg
inc
sti
leave
imulb
and
sar
mov
je
icebp
sub
mov
mov
bnd
xadd
sub
add
int
add
loopne
push
xchg
arpl
rorb
mov
jl
cmp
lock
pop
adc
or
cwtl
jle
mov
inc
std
xor
xor
mov
fcmovne
pushf
data16
mov
int
fidivrl
fnstcw
dec
xor
pop
cli
dec
std
jle
add
lods
pop
rorb
sub
pushf
aam
pusha
stos
js
sahf
in
das
adc
xor
sub
cmc
jne
sarb
adc
adc
mov
push
ds
xchg
xchg
mov
aaa
lcall
push
jp
fnsave
std
pop
daa
inc
sub
in
cld
jae
xchg
or
pop
or
int
hlt
mov
aaa
hlt
mov
negl
cli
xlat
mov
mov
cltd
jne
add
push
repz
cmpl
cmpsb
sahf
movsb
nop
pop
imul
add
push
test
addl
pop
push
xchg
fs
xor
pop
inc
xor
jmp
xchg
lret
ficoml
xor
popf
add
hlt
sarl
rcrl
cmp
sub
push
out
test
je
mov
stos
dec
call
lea
loop
shl
aam
in
fisubl
fwait
les
mov
jmp
pushl
in
or
push
mov
std
aaa
sub
lret
sahf
ljmp
add
cwtl
xor
test
and
mov
mov
add
jge
lret
dec
dec
jae
mov
ds
loopne
push
xchg
add
aas
mov
mov
icebp
cmpsl
mov
jo
jle
in
or
mov
nop
ljmp
cltd
in
nop
mov
push
mov
inc
repz
jl
mov
stos
outsl
mov
into
icebp
outsb
out
test
mov
ljmp
and
sahf
cmp
cli
cs
add
cmpsb
andl
pop
push
adc
push
push
mov
fidivrs
push
dec
adc
jo
or
int3
jge
jnp
fwait
hlt
mov
cmp
pop
out
add
into
sti
cmp
mov
pop
arpl
sbb
lea
push
test
sbb
jbe
cli
cmp
loopne
mov
mov
mov
into
and
fistl
xchg
jge
push
adc
ret
aad
cmp
push
pop
add
mov
scas
sub
ds
push
pop
adc
cmp
mov
cmp
jl
fmul
jne
jae
push
xchg
mov
cld
xchg
dec
and
and
sub
push
popa
adc
cmp
test
lds
cld
fadd
inc
sar
pop
incl
lret
fadd
dec
setae
les
xor
dec
mov
jp
pushf
jl
in
sbb
test
mov
jae
pop
add
push
inc
xor
cmp
sti
mov
loopne
inc
xor
into
adc
je
cli
or
sbb
pushf
sub
pop
outsl
fists
sbb
sbb
fisttps
in
out
in
stos
adc
jo
sahf
mov
pusha
cmp
cli
jns
cwtl
insl
push
jae
shl
ss
std
dec
icebp
subl
push
addr16
or
arpl
aaa
push
daa
dec
pop
pop
lret
fsts
cmp
movsl
jmp
and
lds
cmp
dec
push
mov
iret
cmpsl
jg
dec
daa
icebp
hlt
jle
add
arpl
daa
mov
jns
xchg
jle
or
fadd
xchg
addl
int3
aas
insb
mov
int3
fadd
add
out
loop
xchg
pop
dec
ret
mov
je
adc
mov
xor
divb
xor
pop
inc
movsl
pop
cli
aaa
leave
fcoml
cmp
orl
orb
sub
scas
stc
call
cmc
ljmp
mov
jle
or
cltd
cmp
xchg
pusha
xchg
xlat
jbe
dec
hlt
sbb
ds
pop
pop
xchg
jne
add
jmp
push
gs
dec
sub
cltd
sub
dec
repz
rorl
insl
pop
leave
lods
imul
notb
mov
jl
stc
inc
and
or
sbb
fnstenv
mov
xor
sarl
rorb
ja
push
hlt
inc
sub
xchg
mov
mov
cld
ret
je
iret
out
ficomps
pop
mov
or
mov
xchg
int
stos
shll
mov
lds
and
popa
int
dec
jno
push
cld
xor
sub
daa
out
test
mov
add
flds
mov
fbld
loop
mov
lea
push
das
insl
test
inc
adc
test
rcr
rorb
jbe
jp
mov
mov
add
xor
and
mov
cmp
gs
mov
xlat
adc
fwait
push
out
mov
sbb
or
fs
addr16
test
insb
push
adc
cmp
scas
jmp
rcr
stos
inc
scas
lea
sarl
jns
inc
xchg
orb
sahf
and
scas
cli
in
dec
jb
and
stc
mov
pop
cwtl
push
and
loop
mov
movsb
ficoms
dec
data16
pop
gs
ljmp
push
dec
dec
imul
push
int
sbb
mov
dec
mov
addr16
sar
hlt
xchg
addr16
jnp
les
mov
int3
sbb
in
js
push
sbb
cltd
out
sbb
or
gs
loop
mov
mov
or
faddl
add
jl
jne
mov
add
xlat
xor
jb
jae
rcll
sub
shll
out
and
psubusb
cmpsb
mov
movsl
cmpsb
out
arpl
jge
or
lds
mov
fs
cmp
pushf
mov
inc
popf
jp
mov
jp
mov
push
movl
mov
les
or
repnz
jbe
imul
or
xchg
imul
outsb
mov
push
inc
rcll
mov
adc
push
nop
loope
stc
int3
add
ss
adcl
sub
xor
orb
xlat
icebp
popf
pop
push
inc
jo
dec
nop
les
test
xor
aaa
lock
adc
sub
pop
imul
inc
or
jns
fwait
xchg
in
insl
cltd
pcmpeqb
ret
les
xlat
popf
dec
xchg
les
xor
xlat
mov
test
mov
lods
jmp
cmp
insb
jmp
loope
pop
adc
dec
push
pop
xchg
mov
nop
mov
add
arpl
push
outsl
dec
mov
add
idivb
ret
popf
scas
lds
icebp
aaa
mov
mov
out
cmc
mov
test
xchg
xorl
dec
test
les
pushf
mov
test
adc
push
dec
cld
dec
lock
test
enter
clc
pushf
jmp
push
outsl
lock
fisubs
mulb
cwtl
leave
jle
push
pop
ret
subl
pop
xchg
pop
add
pop
out
or
push
or
mov
xor
insb
sbb
push
jb
imul
jae
push
icebp
cmp
movsb
jecxz
ds
xchg
cmpsl
into
xor
incb
test
dec
jns
repz
inc
bound
xchg
notb
jp
or
insb
jae
jge
mov
or
mov
shl
mov
mov
out
or
lods
iret
and
xchg
mov
or
cmp
and
stos
in
ds
daa
xor
ds
inc
shll
mov
pop
jae
ja
rorl
outsb
out
add
xchg
ljmp
rcrb
mov
aam
aam
dec
jo
cmp
jmp
lods
jo
add
lcall
bound
testl
lods
add
pusha
decl
sbb
daa
inc
mov
push
or
leave
int3
xor
fldz
jmp
add
sbb
into
push
mov
std
pop
rcrb
jns
in
and
mov
adc
ss
cmpsb
shr
andl
fistpll
pushf
andb
mov
dec
shll
push
sub
and
loopne
sti
cmp
rcr
daa
sti
push
leave
lret
jbe
js
mov
outsl
sahf
mov
jecxz
movsb
push
lods
in
push
jns
rcll
inc
cmpsb
and
cmpsb
add
sbb
mov
push
mov
mov
mov
jl
push
mov
repnz
mov
adc
xchg
int3
xchg
inc
lods
int3
jb
mov
cmpsl
dec
dec
cmpsb
inc
xchg
out
inc
incl
pop
xchg
icebp
ret
mov
sti
aam
popf
dec
in
pop
jae
fdivrs
xor
sub
loopne
nop
push
in
dec
xchg
popf
mov
inc
add
stos
daa
mov
jle
xor
mull
pop
pushf
or
in
fwait
inc
jecxz
cwtl
call
jno
shlb
sub
xchg
clc
insb
xor
test
dec
ljmp
and
shrl
mov
sbbl
jl
jle
scas
or
mov
cmpsl
ljmp
pushf
mov
mov
inc
aas
ud0
ljmp
loope
mov
popf
pop
lret
into
sahf
pop
js
xchg
loope
cmp
cmc
fildll
movsl
rorb
nop
sbb
cmp
int
ror
outsl
mov
lea
mov
fwait
je
rclb
int3
fildl
sbb
fisubrs
jle
sbb
fs
call
hlt
std
mov
adc
out
ljmp
bound
or
pop
imulb
add
negl
sub
push
mov
stc
arpl
dec
ljmp
inc
fildll
push
stos
lods
popa
lret
inc
mov
push
js
and
push
xchg
xchg
dec
aaa
jmp
push
out
push
push
adc
shl
out
push
mov
jmp
mov
fwait
shlb
xchg
sbb
lret
enter
pop
dec
mov
lods
lret
shrl
cmpsb
data16
fnstcw
and
sbb
inc
repz
fldenv
inc
push
fcomp
out
adc
pop
mov
pop
sbb
leave
pop
dec
test
adc
popa
repz
inc
mov
aam
pushf
mov
push
ljmp
xchg
lcall
mov
push
jmp
stos
out
jle
mov
push
and
mov
lret
scas
dec
pop
fldcw
mov
jo
ret
arpl
fistpl
enter
jecxz
xor
sti
out
inc
pop
mov
hlt
mov
inc
lock
add
cmp
add
movsl
cmc
and
cmovl
or
xchg
push
pop
jecxz
push
aam
inc
add
rolb
sub
lahf
jno
aas
movsl
xchg
mov
insl
aas
pop
imul
enter
pop
add
add
int
dec
mov
or
and
ljmp
out
gs
or
jnp
inc
xor
es
jns
push
fmull
lds
and
cmp
outsl
pop
fcoml
sbb
fiadds
scas
mov
sub
insl
cs
or
ret
sub
xor
mov
sbb
and
mov
or
dec
inc
imul
loope
out
nop
inc
jmp
pop
jmp
xchg
in
and
int3
sbbb
cmpsl
insl
cmpb
jmp
hlt
jo
fnstcw
sbb
and
cmp
dec
icebp
pop
fwait
xor
cmpsl
xchg
fsubrs
fistps
mov
outsb
mov
inc
dec
add
ljmp
mov
ja
inc
jg
mov
in
clc
test
sub
jecxz
test
jge
clc
adc
jne
add
scas
xorl
in
push
or
pop
pusha
les
test
dec
cli
js
mov
sub
enter
mov
scas
mov
jmp
lret
dec
inc
rorb
sub
lcall
and
mov
pop
add
dec
mov
dec
ror
int
add
js
pop
sbb
sub
in
inc
jecxz
pop
int
fs
or
push
and
aam
and
mov
jge
jns
mov
movsb
cmpb
dec
jmp
jae
xchg
arpl
mov
xor
xchg
in
std
push
dec
cmp
mov
movsl
xor
ficomps
pop
add
int
ss
jo
adc
int
inc
mov
scas
cld
inc
push
jp
sarl
enterw
push
push
es
adc
orb
xchg
pop
repnz
dec
jnp
test
jnp
pop
jecxz
sub
mov
out
mov
dec
std
xchg
in
mov
pop
cltd
or
into
add
gs
rol
lock
jo
imul
mov
xor
adc
add
sub
je
ss
cmpsb
stc
imul
ss
mov
mov
add
xor
inc
jg
push
sbbl
iret
and
cmp
adc
push
dec
lcall
lret
sub
sbb
push
popf
cmp
leave
fidivl
pop
out
add
sbbl
xchg
int3
sub
sub
jle
xor
fdivrl
mov
xchg
inc
push
dec
mov
xchg
movsl
push
jo
popf
loope
clc
adc
dec
jns
popf
push
fidivs
dec
dec
or
or
jnp
fistps
cmpsb
jne
dec
push
mov
dec
shll
movsb
nop
or
push
mov
incl
sahf
repnz
pop
in
xor
test
sub
mov
mov
and
pusha
jl
leave
idivl
sub
inc
pop
mov
cmpl
shll
adc
mov
xchg
ljmp
ja
inc
adc
aam
scas
inc
or
cmp
jns
sbbb
lock
imul
sahf
xor
and
mov
cld
orb
add
adc
xor
rcr
int3
push
faddl
cmp
decb
fmull
push
push
ret
dec
xor
sbb
mov
aas
fmuls
jbe
xor
xchg
cmpb
sbb
gs
hlt
fdivrs
or
sub
mov
jle
xchg
push
or
adc
xchg
lcall
shll
outsl
dec
inc
cmp
fists
js
pop
mov
sub
inc
cli
fwait
and
mov
jecxz
pop
mov
clc
jmp
sub
jmp
or
jge
add
repz
cmp
inc
and
jmp
lret
in
jne
cwtl
scas
jp
pop
ret
mov
outsl
into
test
jecxz
xor
inc
and
xchg
xchg
sub
data16
xchg
xchg
lock
or
cmp
icebp
and
push
repz
jl
jae
clc
imul
rorl
adc
pop
iret
sub
dec
push
push
jmp
add
dec
enter
cld
dec
jne
fxsave
mov
mov
std
ja
mov
adc
int3
mov
repnz
jl
xor
pop
pop
ret
cltd
lea
cmpsl
pop
xchg
lahf
pop
pop
mov
sbb
mov
stc
test
xor
dec
or
push
xchg
popa
xor
fisubl
fisttpll
popf
pop
mov
roll
pop
pop
lahf
scas
addr16
push
in
adc
add
arpl
push
inc
fwait
mov
test
sbbb
pop
cs
mov
insl
hlt
insl
sub
inc
fildll
xor
stos
cli
leave
es
adc
jne
call
addr16
pop
dec
insb
jae
or
sti
stc
in
jle
aam
add
mov
xor
push
sbb
jb
dec
dec
mov
into
or
stc
nop
and
add
test
mov
dec
lea
in
and
test
leave
insb
popa
and
pop
xor
and
daa
adc
cmp
push
mov
out
pop
in
out
sarb
mov
push
out
fstp
test
into
mov
inc
push
add
sti
movsl
and
pop
movsb
mov
add
jns
or
dec
push
loope
andl
and
jo
cmpsb
adc
popa
pop
dec
push
push
mov
push
xor
xchg
aaa
jo
sub
adc
insl
jp
mov
ljmp
ficoms
aas
cmpsb
add
mov
fsubrs
mov
jle
das
jnp
or
push
cmovo
adc
icebp
xlat
adc
call
hlt
daa
adc
cmp
pop
pop
lock
sub
mov
cmp
out
jae
mov
gs
jp
dec
adc
ficomps
adcb
pop
pop
sub
leave
out
sub
ds
push
pop
sbb
pushf
pop
inc
jecxz
insl
dec
pop
adcl
or
lret
aad
sbb
fs
xor
lret
js
hlt
xchg
cli
lcall
jb
lret
inc
sbb
mov
jge
les
popf
mov
sbbl
jnp
xchg
add
inc
fcomps
aad
jmp
mov
xchg
pushf
pop
out
jl
sub
repz
push
xlat
outsl
cmp
adc
loopne
push
or
pop
mov
push
cmp
out
cmp
pop
insb
mov
rorl
push
fldenv
es
imul
in
pop
test
aad
pop
addb
scas
xorb
cmc
repnz
loop
xor
adc
xor
jb
cs
push
roll
cmpsb
inc
rclb
int
jno
shll
je
xchg
cmp
std
fs
add
add
icebp
inc
and
sbbl
dec
cld
xlat
rorl
loopne
adc
sbb
cmp
mov
bound
fildll
pop
xchg
iret
data16
rclb
movb
arpl
inc
aam
outsl
sbb
cmpsl
push
mov
shrb
mov
xchg
adc
push
sub
xchg
xor
push
sub
xor
cmp
ds
aad
not
nopl
imul
int
mov
sahf
rcl
in
xor
push
mov
push
ljmp
push
push
dec
mov
mov
cltd
jbe
leave
mull
push
daa
mov
cltd
addr16
inc
push
pop
xchg
adc
pop
adc
test
je
add
les
subb
mov
mov
dec
mov
inc
push
pushf
testl
pop
mov
or
popf
lcall
mov
xor
and
sub
sbb
leave
std
ret
mov
and
cmp
cmp
xor
mov
and
mov
inc
xchg
imul
fisubs
dec
sbb
movsb
mov
insl
or
flds
ret
lcall
outsb
mov
xor
aas
repnz
push
lods
roll
mov
jne
pop
hlt
movsb
fldcw
not
sbb
jl
jle
test
xchg
add
pop
lods
add
push
and
mov
mov
scas
dec
pop
je
outsl
mov
rolb
pop
sar
jl
adc
mov
sub
jb
negb
aas
ret
xor
mov
inc
xor
xchg
adc
flds
lret
add
mov
dec
ja
cmp
mov
pop
sub
fcmovb
mov
iret
dec
es
jns
adc
das
push
imul
insb
sbb
ret
out
test
pop
sub
mov
test
cwtl
push
stos
mov
push
and
bswap
fucomip
jmp
fs
stos
arpl
add
nop
pop
ds
xor
inc
mov
outsl
dec
inc
ds
fwait
bound
fdivrl
jmp
jns
daa
xor
sbb
jle
xor
in
push
aas
adc
xor
mov
cld
adc
cmp
sbb
sbb
mov
cli
pop
inc
ja
or
aad
ret
arpl
adc
jecxz
icebp
xor
call
pop
mov
dec
xchg
cltd
push
dec
or
add
pushf
and
xor
dec
out
cmpl
test
bound
scas
nop
cmp
mov
or
mov
mov
pop
jno
test
ret
ljmp
cmpsl
rorl
ljmp
xchg
roll
inc
sbb
inc
add
inc
cmp
push
icebp
mov
or
mov
mov
pop
mov
pop
in
mov
mov
add
outsl
mov
or
ret
test
jge
icebp
push
jmp
notb
aam
dec
sub
inc
dec
fidivrl
movb
sahf
in
aas
inc
add
aad
shlb
les
fnsave
pop
mov
dec
xchg
mov
inc
sti
mov
lret
mov
jno
aaa
push
push
jo
cmp
xchg
jae
js
jae
xor
cs
setne
adc
and
dec
out
call
or
adc
adc
rolb
xor
jge
fnstsw
jl
xchg
push
pop
sub
fwait
push
lret
shrb
mov
or
dec
cmp
insb
cld
rcll
mov
fcoml
ret
adc
negl
xor
mov
loope
cli
mov
gs
mov
pusha
fwait
cltd
ret
cmpsl
dec
loopne
and
mov
cmp
fidivs
outsb
mov
adc
lahf
mov
sub
xor
and
cmp
xchg
imul
sti
mov
mov
jl
mov
inc
mov
movsb
jmp
inc
dec
cld
loop
ja
mov
movsb
dec
imul
sub
dec
fdiv
mov
test
mov
pop
sbb
jmp
cli
xchg
pop
outsb
or
push
sub
fsubrs
pop
icebp
and
clc
outsl
in
pop
adc
add
rcl
pop
leave
xchg
or
mov
jne
stos
dec
call
js
xchg
pop
mov
inc
dec
jnp
and
std
xlat
andb
addr16
outsb
mov
test
push
sbbb
xlat
jns
push
or
mov
inc
cmc
lahf
adc
xor
mov
inc
pop
xor
in
pop
mov
sub
ja
mov
jecxz
mov
aas
add
dec
mov
pop
aad
imul
jnp
sub
or
pop
fldcw
lret
add
xchg
mov
out
lahf
int3
sbb
aam
fwait
jle
scas
out
sbb
dec
movsl
in
inc
in
mov
pop
fldenv
cmp
mov
ja
push
fisubrl
sub
mov
jb
adc
into
dec
jo
scas
mov
cmp
adc
gs
fbld
xchg
xchg
movsb
add
xchg
cmpsb
fdivrp
xchg
push
dec
ret
mov
les
into
or
test
add
rcll
test
cld
pop
mov
and
aad
scas
fiaddl
lret
jg
mov
cmpsb
cld
or
je
sub
xor
pushf
mov
popf
mov
dec
lret
mov
insl
pop
std
frstor
push
pop
fstps
sbb
and
pusha
mov
fbstp
aam
call
dec
test
fsubs
addl
pop
in
xchg
imul
in
jo
nop
lods
xchg
pop
dec
add
sbb
out
mov
xor
paddd
push
or
movsl
in
lret
dec
jl
xlat
xor
ds
in
sub
pop
test
clc
and
outsb
into
lahf
dec
loope
in
mov
in
dec
imulb
icebp
fwait
jo
mov
mov
test
fcmovbe
fisttpl
inc
pop
sahf
scas
xlat
insl
add
and
mov
lods
add
pop
adc
movsb
iret
jp
test
jecxz
push
push
cmpsb
push
lods
add
repnz
sub
or
das
cmp
mov
push
and
adc
js
sub
std
fs
or
addr16
testl
push
int3
xlat
mov
or
lock
mov
lret
shlb
stc
dec
rol
mov
in
mov
pop
out
lret
lret
pop
testl
jge
scas
inc
mov
adc
push
out
dec
push
popa
std
dec
add
push
cmp
dec
out
sub
inc
jb
fnsave
subl
lock
mov
cmp
push
testb
fs
jle
mov
xor
fcmovnu
leave
fcmove
popa
push
fcmovnbe
inc
xchg
inc
push
mul
es
mov
jo
sbb
sub
sbb
pusha
into
xlat
out
mov
mov
mov
pop
into
fucomip
fsts
or
add
sub
movl
dec
fwait
enter
outsb
adc
test
add
leave
jne
mov
xchg
sbb
push
mov
repz
rolb
test
fnstenv
scas
xchg
cmp
fbstp
movsl
inc
inc
outsb
scas
lcall
dec
nop
xchg
xchg
int
repnz
push
pop
aam
leave
cmp
pop
xlat
insl
lock
call
sbb
ljmp
jns
jmp
repnz
fildl
mov
jno
mov
pop
daa
pop
cmp
inc
rolb
mov
ljmp
or
mov
mov
xor
decl
cmp
or
sbb
mov
sub
fsubp
xchg
mov
push
add
cmp
mov
aam
movsb
outsl
aam
pop
loop
popa
aam
lret
add
sbb
imul
cmp
jne
lock
ja
mov
stos
sub
outsl
push
pop
push
and
pop
mov
fimuls
xor
call
loopne
in
push
inc
push
sar
into
je
mov
fdivl
add
sub
push
jno
dec
sbb
imul
fidivrl
stc
cmpsb
adc
push
cmp
sahf
dec
clc
pop
dec
cmp
push
mov
mov
xor
lock
pop
cli
jno
gs
mov
fistpl
inc
in
adc
mov
in
cmpsl
cmpsl
mov
cmp
aas
lret
sub
test
aas
fistpl
inc
lcall
or
loopne
sarb
dec
popa
jle
fmul
lea
jge
scas
ss
ljmp
cmpsb
sbb
imul
incb
add
push
shrb
jl
mov
cwtl
lods
test
sub
cwtl
adc
lods
cwtl
add
sbb
ffreep
cmp
ss
cmp
cld
aad
aas
lret
xlat
add
jnp
sub
lea
jge
dec
stc
xor
xchg
out
ds
hlt
and
dec
addr16
and
out
lods
jp
adc
sbb
repnz
jae
bound
nop
rorb
sub
mov
fdivs
mov
leave
insl
imul
dec
fdivr
repz
addr16
sub
jae
mov
dec
mov
or
pusha
inc
jb
repnz
imul
push
popa
mov
add
xchg
enter
shll
cltd
out
mov
jmp
adc
dec
jecxz
lods
cmp
arpl
std
js
push
fwait
pop
adc
insb
jnp
sti
sub
sub
scas
mov
xlat
std
xor
sbb
clc
mov
push
xchg
push
sbb
popf
sub
dec
or
xlat
ret
sahf
cmc
test
mov
xor
addr16
out
dec
inc
out
sbb
cmp
iret
pushf
mov
test
pop
sbbl
dec
aad
lock
out
mov
rcrb
push
mov
push
outsb
jno
mov
jb
push
or
sbb
decl
xchg
dec
loop
push
data16
outsb
repz
adc
add
lds
adc
scas
mov
outsl
dec
inc
mov
repnz
sub
adc
pop
lock
imulb
insb
sub
int3
push
inc
sahf
sub
inc
rol
sub
arpl
adc
push
pop
lods
lds
jp
adc
into
cwtl
sub
sbb
jp
jne
out
push
inc
orl
inc
ljmp
xor
lcall
decl
cmp
dec
mov
push
jns
xchg
mov
push
shlb
scas
mov
out
jno
in
push
push
inc
addl
cmp
and
in
and
xchg
adc
jmp
int
adc
aad
outsb
mov
orb
add
cmp
mov
ficoml
pop
xor
pop
pop
roll
in
jp
sbb
out
rclb
ret
psrld
aam
jns
push
icebp
inc
mov
icebp
mov
xchg
outsb
jmp
or
hlt
leave
jge
mov
lea
jl
mov
je
shl
cmp
movsb
jb
idivl
xchg
jle
mov
pop
jecxz
pop
lods
mov
push
adc
xchg
mov
fdivp
dec
sbb
fs
lea
sbb
imul
ds
pop
dec
test
repnz
shrl
mov
xor
mov
int3
push
sti
sbb
scas
dec
lock
gs
dec
mov
loope
aam
je
xor
mov
fisttpl
dec
xchg
out
jbe
pop
add
push
add
data16
int3
arpl
add
mov
xchg
icebp
leave
movb
or
adc
ret
adc
or
cmp
pop
rclb
pop
insb
arpl
cmp
in
push
sarb
mov
aas
mov
fisubs
add
imul
cmpsb
std
out
dec
outsl
into
add
outsb
xor
xor
outsl
lcall
ja
mov
inc
mov
insb
stos
roll
mov
inc
dec
bound
and
mov
pushf
adc
mov
in
sti
or
push
shlb
xor
jmp
dec
sub
out
lock
sub
int
mov
add
jns
pushf
aaa
xor
add
pop
lret
gs
out
insb
fisttpll
sub
sbb
add
ds
pop
mov
aas
pop
inc
xchg
inc
ss
xor
push
inc
loope
push
mov
dec
cmp
stos
dec
shr
xor
in
jns
pop
js
jge
or
sahf
je
add
push
sub
xchg
push
dec
inc
ss
mov
sub
inc
xlat
mov
push
sub
jge
push
jmp
daa
push
fsubrp
mov
pop
int3
loope
cltd
add
add
test
popa
mov
cmp
sbb
icebp
fbstp
outsl
push
push
fcmovnb
loopne
rcl
fcoml
add
das
xlat
inc
inc
pop
lcall
lea
je
push
into
or
int
mov
add
nop
or
dec
lea
popa
mov
mov
xlat
test
int
pop
or
cli
jl
sbb
mov
jmp
subb
push
pop
or
sbb
jmp
push
sbb
mov
xorl
xor
mov
cmc
std
sub
clc
test
xor
push
cmp
jecxz
cmp
adc
lcall
into
stc
adc
movsl
test
pop
aas
imul
xlat
sbb
sub
pop
adc
divl
int
push
out
rolb
fnsave
lret
test
fimuls
iret
dec
push
fs
insb
in
sbb
adc
mov
movsl
rol
das
or
std
jge
leave
sbb
lods
mov
jb
pop
add
ficoms
cmp
and
mov
sub
jb
jmp
mov
aad
mov
stos
cmp
mov
sbb
or
cmp
scas
xrelease
aas
inc
aad
mov
pop
sub
imul
movsl
pop
lahf
dec
addr16
pusha
mov
jle
xor
push
mov
jno
es
icebp
lcall
cli
push
es
lods
imul
pop
xor
mov
inc
cmp
nop
rclb
and
icebp
fcom
add
clc
pusha
push
jle
sub
or
sti
mov
mov
and
pop
xor
insb
mov
lea
lret
in
add
gs
test
and
ja
or
sbb
adcl
push
out
mov
orl
repz
pop
mov
jae
cmpsb
xor
insb
iret
mov
mov
sbb
popf
xor
inc
jae
gs
mov
fstps
test
fwait
sti
xchg
dec
jl
jns
popl
scas
sbb
push
dec
or
and
leave
imul
sahf
pop
xchg
repz
push
cwtl
jecxz
cmp
and
sbb
adc
xchg
mov
insb
das
cld
jp
stos
fdiv
out
pop
lret
jne
jecxz
and
mov
frstor
inc
fcmovnu
pop
pop
adc
test
mov
dec
xchg
or
jmp
cmp
fidivl
mov
xor
imulb
mov
in
jge
lret
mov
int3
cmc
xchg
sub
xchg
sub
push
test
loopne
idivl
ja
cs
jmp
add
adc
or
jns
in
test
je
or
pusha
mov
pop
mov
add
jge
xor
sub
xchg
or
inc
mov
xor
icebp
adc
mov
xchg
js
mov
dec
movsl
cmp
in
outsb
lock
sbb
dec
push
xor
out
das
mov
add
les
inc
popf
dec
pop
cmp
xor
jns
dec
es
les
loop
xchg
mov
dec
out
push
xchg
test
mov
mov
aaa
loopne
daa
adc
and
cltd
mov
push
fiaddl
pop
dec
out
inc
rcl
ficomps
mov
ret
jne
jnp
sarb
jo
jge
ret
sub
shll
les
xor
movsb
imul
xor
inc
lret
push
insb
adc
pop
mov
ret
js
aad
rcll
xor
push
adc
clc
inc
xorl
inc
ss
ljmp
mov
mov
jg
or
and
mov
sbb
mov
mov
out
and
repz
push
aad
cmp
gs
aas
hlt
and
aam
inc
push
pushf
mov
dec
pop
test
ja
jne
mov
es
adc
mov
movsl
gs
xor
mov
int
push
in
push
rol
xorl
in
sub
jb
mov
cmp
cmp
xor
inc
shlb
cmp
push
in
aad
or
repz
inc
sbb
loopne
sahf
or
cmp
xlat
lret
mov
mov
adc
filds
sbb
scas
arpl
jbe
iret
dec
ret
mov
sahf
mulb
pop
popa
or
pop
cmp
inc
pop
sti
xchg
pop
imul
call
sbb
in
pop
nop
cmc
pause
cmp
mov
into
inc
add
in
jmp
fisttps
cmp
enter
jge
xchg
mov
pop
pop
fucomip
adc
mov
sub
push
les
sub
dec
adc
jno
sbb
mov
pushf
imul
pop
movsl
out
xor
aad
nop
jecxz
imull
imul
mov
or
loop
pop
mov
cli
xor
pop
dec
pop
inc
in
sar
rcl
or
dec
cmp
lret
frstor
test
stos
sahf
mov
pop
fdivl
je
arpl
mov
icebp
push
push
test
mov
test
lret
inc
and
pop
cmpsb
jns
inc
jnp
jl
popf
pop
mov
pushf
adc
icebp
inc
xor
or
shlb
cs
jge
mov
cmp
inc
movsb
pop
je
test
mov
push
shlb
inc
test
inc
sbbl
movsb
sti
arpl
mov
jmp
into
sbb
xor
leave
outsb
test
xor
pop
lock
test
addr16
sbb
mov
in
jbe
sub
fisttpll
sbb
test
push
inc
sti
jne
mov
outsb
nop
jge
jae
add
push
into
out
ret
mov
movsl
adc
and
pop
rep
inc
inc
lahf
and
shrb
mov
pop
or
mov
dec
rcl
inc
gs
in
jbe
inc
jnp
jns
inc
addr16
xchg
pop
mov
mov
inc
adc
call
jle,pt
ja
pop
or
test
repz
shlb
push
add
push
repz
pushf
fimuls
stos
adc
xchg
cmp
lahf
jg
fimuls
and
outsl
and
and
je
orb
mov
sub
aaa
stos
pop
fisttps
fdivr
cmp
negb
push
nop
add
rorb
test
pushf
cmpsl
stos
xchg
lods
enter
sub
jo
push
adc
imul
fmuls
aas
aaa
lret
jno
mov
fadd
repz
and
imul
pop
pop
mov
xor
jge
xchg
lds
mov
jle
xor
or
add
jb
lods
insb
mov
shll
mov
inc
les
dec
fdivl
stos
push
push
sbb
repnz
dec
inc
test
ret
imul
cmp
mov
mov
and
fs
not
jecxz
in
xchg
mov
sbb
pushf
loop
loopne
clc
inc
xor
ret
push
sbb
aam
jne
test
xor
lahf
inc
fwait
sub
add
movsb
push
cmpsl
scas
ja
enter
int3
repnz
push
mov
sbb
scas
adc
imul
push
mov
cmpsb
fsubrs
push
shrb
test
mov
lahf
jle
jb
or
ret
out
and
and
and
lret
push
and
mov
mov
enter
std
into
das
cmp
shlb
cmpsl
or
xchg
nop
jnp
mov
mov
dec
hlt
dec
add
pop
mov
add
sbb
aad
xlat
iret
inc
jno
pop
adc
cmc
fs
pop
sahf
out
mov
mov
ret
std
imul
sahf
dec
fnclex
inc
mov
in
mov
lock
sti
add
pushf
pop
jp
add
ja
pop
pop
xchg
mov
int3
mov
shll
sbb
insb
jbe
inc
maxps
mov
ficoms
fmuls
insl
push
xor
mov
adc
sub
xorl
push
pop
les
shrl
nop
lock
push
pushl
mov
or
out
cmp
sarb
jp
stos
and
out
xor
or
fwait
mov
inc
js
iret
popa
popa
shll
push
xchg
enter
outsb
pushf
cmpsl
test
add
cwtl
jns
and
shrb
cmp
rorb
bnd
imul
add
push
jne
gs
icebp
fwait
mov
push
mov
hlt
xor
testl
int3
nop
mov
movsl
les
loopne
xchg
out
mov
or
fcmovb
pusha
jg
mov
les
mov
jae
mov
das
cmpsb
push
loop
mov
jmp
and
les
mov
push
stos
jb
ja
or
test
cmpb
cmp
push
movsb
int
bound
xchg
imul
xor
adc
jno
das
sbb
adc
rclb
mov
mov
cmp
stc
clc
inc
jle
sbb
call
cmpsl
div
and
std
mov
mov
jno
cmpsl
daa
mov
in
mov
mov
int3
sbb
nop
mov
inc
pop
mov
clc
cs
roll
jns
dec
jne
movlps
xchg
nop
xor
dec
scas
push
pop
xor
out
dec
mov
sbb
jl
mov
adc
add
inc
adc
jbe
in
nop
test
xchg
jne
arpl
sti
add
das
mov
dec
scas
jae
int3
jnp
add
mov
xchg
dec
push
lahf
push
jae
loop
push
loop
sub
jns
adc
imul
nop
push
rol
dec
xor
jb
pop
inc
dec
pusha
addr16
push
mov
aad
and
or
push
or
sub
outsb
pop
mov
dec
mov
sub
pushf
loope
cltd
or
or
pop
ret
mov
add
popf
push
xor
addr16
fcompl
mov
mov
scas
sub
imul
xor
cmp
sbb
aad
out
gs
push
jl
mov
mov
xchg
movsb
aam
xchg
or
mov
imul
sbb
pushf
mov
lea
dec
call
shll
cmp
es
adc
xor
sub
xchg
test
push
mov
pop
fdivp
push
bound
sub
cmp
cld
pop
sti
mov
jo
sub
or
cmp
sbb
shl
push
and
cmpsb
insb
pop
jl
sti
sub
xchg
mov
jecxz
dec
cmp
shrl
es
stos
mov
pop
xchg
lcall
leave
xchg
imul
jg
pop
push
lcall
test
dec
ficomps
popf
or
xor
rclb
cmp
stos
dec
mov
adc
cmp
cwtl
into
lcall
in
jno
jle
lcall
scas
xchg
xor
and
popa
inc
dec
lods
fwait
cwtl
ds
cmp
lret
shrl
sbb
sub
cmp
outsb
aam
aas
sub
sub
push
cmp
dec
push
jae
repnz
mov
arpl
adc
dec
repnz
stos
push
dec
xor
pop
jbe
dec
sbb
jg
sbbb
mov
int
call
sarl
arpl
jl
and
xchg
pop
push
adc
mov
inc
sbb
xchg
adc
ret
inc
inc
xor
mov
or
icebp
out
push
pushf
aam
pop
and
adc
shll
push
cmc
stos
cmp
enter
add
test
xor
dec
sub
ret
daa
or
repz
test
ja
pop
aas
cmp
bnd
mov
cwtl
roll
cmc
push
or
fwait
loope
push
mov
jne
push
mov
push
push
cmc
mov
decl
outsl
iret
and
outsb
bound
enter
inc
mov
mov
testb
jge
xlat
or
das
lods
mov
or
adc
cs
cwtl
sub
inc
push
stos
or
neg
xchg
push
fidivrl
sub
subb
or
mov
jecxz
jmp
and
jmp
sub
cmc
mov
jp
jecxz
pusha
dec
mov
adcb
inc
int3
lahf
shrb
add
stos
movsl
or
and
mov
imul
sbb
int
cmp
into
push
sti
xchg
or
out
sbb
ljmp
imul
sbb
out
mov
or
and
mov
pop
or
mov
pop
jecxz
fbstp
pop
xlat
and
pop
mov
scas
lds
mov
lods
les
imul
or
jne
inc
sti
cmp
mov
divl
cwtl
iret
mov
rorl
repz
sub
iret
sbb
or
cmp
addr16
cmc
cmp
ficoms
jg
pop
and
shlb
jns
xchg
push
loopne
out
rcrl
push
jecxz
sbbl
sahf
pushf
mov
icebp
call
mov
loop
xlat
mov
mov
inc
push
insb
cwtl
sub
bound
xor
fsts
scas
ret
dec
sar
fcmovnbe
add
inc
mov
nop
cmc
push
mov
lcall
lret
cmpsb
adc
xchg
shll
cmp
enter
loop
mov
adc
xor
mov
inc
out
sub
out
fs
fmul
lret
loop
outsl
cwtl
arpl
pop
xorb
icebp
xor
loop
inc
mov
daa
andl
std
repnz
or
out
fcomps
addr16
pusha
xor
inc
popl
ss
add
and
sub
gs
adc
push
xchg
outsl
jecxz
sbb
cmp
or
or
subb
fidivrs
jbe
inc
divb
stc
mov
mov
in
mov
cmp
jmp
xchg
fbstp
add
jae
jp
ss
mov
cmp
lods
inc
lods
cs
mov
mov
daa
mov
mov
cmpsl
stos
icebp
bnd
mov
fdivl
addr16
sarb
or
bound
dec
daa
sbb
sub
jno
aam
mov
fwait
enter
jne
adc
sarl
sub
dec
lods
fnclex
jecxz
or
dec
aas
popf
das
adc
dec
fstl
bound
cwtl
lock
sbb
mov
repz
sbb
sahf
add
stos
push
pusha
and
scas
stos
cltd
mov
push
int3
add
lea
jb
push
cli
addb
loopne
cld
and
lock
mov
mov
sbb
jae
dec
pop
int3
push
stc
dec
xchg
enter
je
add
xorl
rol
jl
pop
adc
je
mov
lea
sar
cld
xor
nop
mov
insl
pusha
in
icebp
push
sbb
dec
mov
or
int
outsb
cmp
popf
cmpsl
inc
mov
push
xchg
pop
out
stos
pusha
mov
rolb
cmpsb
sbb
stc
ret
and
dec
fdivrs
mov
test
cmpsl
xchg
mov
ds
data16
imul
push
nop
sub
and
mov
out
sbb
std
cmp
pop
push
cmp
xlat
loope
push
imul
lods
mov
orl
mov
push
and
adcb
inc
stc
mov
addr16
lods
or
push
test
and
mov
lret
push
pop
mov
mov
mov
mov
sbb
cmpsl
ds
pop
xchg
icebp
iret
mov
xor
adc
xor
mov
stos
or
ror
cmp
ljmp
adc
cmp
push
fwait
adc
inc
pop
test
mov
push
add
jl
test
nop
mov
cs
pop
push
je
xor
sbb
out
flds
mov
lock
dec
inc
cltd
cmp
mov
inc
push
in
notl
bound
das
add
cmp
mov
arpl
and
jge
stos
xchg
cmpsb
push
fisttpl
pop
adc
fwait
das
jbe
jae
jge
ja
pop
scas
lret
cmpl
orl
jecxz
cmp
cwtl
shlb
jb
mov
xchg
jns
xor
clc
sbb
cmp
nopl
xchg
popa
pop
mov
jo
jge
pop
dec
data16
adcl
pusha
xor
add
mov
pop
mov
jg
shrl
pushf
pusha
rcpps
or
and
aad
lock
dec
xchg
sbb
adc
call
daa
out
bound
icebp
mov
mov
sbb
je
push
loop
mov
into
jne
lods
cmpsl
mov
mov
shl
fdivs
jge
pop
mov
cltd
sub
ret
inc
mov
sbbl
and
xor
cli
or
pop
add
out
sti
leave
dec
jl
mov
incb
add
xchg
pop
sbb
lret
pop
cmp
es
shlb
lret
lcall
push
outsb
sbbb
ljmp
fisttpll
or
popa
sub
fnstcw
dec
pop
add
fwait
jno
push
cld
mov
int
fwait
inc
sbb
arpl
cmc
out
mov
enter
shlb
pusha
out
cmp
stos
lea
mov
add
ficomps
jmp
adc
adc
mov
daa
mov
in
iret
rorb
shlb
mov
mov
stc
stc
rcl
xor
cmpsb
stos
mov
insl
inc
int3
mov
jge
pop
inc
je
inc
jb
mov
fcoms
sbb
cmp
stos
lret
pop
in
es
in
xchg
or
push
jmp
mov
inc
addl
movsb
ds
sbb
ds
movsl
mov
push
loop
xor
mov
ss
inc
or
fsubrp
or
test
stos
sbb
hlt
jne
sub
cmp
shlb
inc
aad
adc
sbb
mov
mov
lahf
fucomi
cmp
or
cmp
dec
popa
arpl
lods
pop
dec
mov
std
mov
sbb
loop
les
nop
negl
push
or
pop
jae
jne
jne
mov
loop
repz
mov
bound
sbb
lds
push
mov
dec
cld
shr
imul
outsl
xchg
sbb
pop
push
cli
sbb
inc
mov
es
inc
or
out
jecxz
xor
repz
dec
fs
int
addr16
xor
sbbl
aam
lock
rclb
popa
call
or
ficoml
cld
lods
push
xchg
mov
xchg
jbe
inc
cmp
mov
inc
jb
lea
test
push
ss
dec
loope
fwait
jne
sbb
and
notb
mov
rclb
ss
cmp
and
lods
lahf
push
ds
and
adc
dec
pop
cmp
int3
mov
outsl
xchg
lods
push
and
xchg
xor
sbb
popf
loopne
f2xm1
sub
out
insl
inc
mov
lahf
sbb
cmpb
jmp
xchg
ja
pushl
addb
push
mov
sub
add
mov
and
push
push
pop
fcoms
scas
ficompl
std
sbb
xorb
pop
push
loop
adc
inc
fnstenv
addr16
and
push
mov
sbb
push
testb
imul
push
sbb
xlat
jg
pusha
ret
pop
aad
adc
inc
sub
jmp
mov
rcrl
rolb
sub
push
daa
js
lahf
sub
inc
cltd
mov
pop
lret
jp
pop
mov
jmp
mov
adc
test
addb
add
xor
mov
add
push
movsl
pop
or
jno
ffreep
call
ljmp
adc
dec
enter
in
jle
mov
movsl
jge
lods
cmp
enter
inc
dec
xchg
jl
xchg
jp
es
jnp
dec
insl
lcall
adc
inc
test
adc
push
or
xchg
or
ljmp
pusha
sub
ljmp
xor
push
and
xor
les
or
and
shll
rclb
ja
std
sub
jle
lahf
jnp
mov
mov
xchg
push
int
sub
xchg
sub
frstor
lods
push
enter
push
mov
or
out
push
or
and
adc
test
fildll
shrb
xchg
xor
insl
push
push
loope
in
mov
xchg
fmuls
hlt
mov
cli
icebp
inc
cmp
lret
sahf
loop
hlt
mov
enter
sarb
add
push
dec
push
out
shlb
arpl
pop
lcall
jge
aaa
sti
inc
nop
test
aaa
add
loope
and
lds
mov
jno
inc
mov
fbstp
test
xor
push
icebp
xchg
xor
inc
in
insl
inc
inc
dec
mov
cs
loopne
cmc
push
sub
mov
pop
out
dec
test
sub
aas
fldenv
stos
arpl
lret
in
in
mov
inc
les
inc
jmp
jle
mov
inc
movsb
pusha
inc
addl
aas
ljmp
lods
xor
pusha
pandn
fs
aam
sbb
inc
dec
pop
ss
mov
icebp
clc
in
lret
mov
gs
jl
cmp
xacquire
outsb
inc
xor
xchg
xchg
sbb
cmp
cmp
test
add
test
ficoms
and
adc
not
out
push
lret
pop
pop
pushf
inc
push
les
xchg
ret
cmp
sahf
jb
inc
lock
jecxz
or
idivl
pop
lds
jne
int
mov
in
and
int
daa
mov
ret
lret
stos
in
add
lods
dec
adc
sti
push
push
sbbl
xchg
mov
in
sahf
mov
test
push
cmp
adc
mov
sbb
xor
ja
repz
scas
std
ds
inc
outsl
in
call
pop
jne
jp
shl
mov
test
lcall
jae
jge
stos
sub
cmp
jge
adc
int3
popa
inc
or
ja
or
sub
jl
jl
sbb
sub
mov
pop
ja
sbb
fwait
add
dec
mov
aam
mov
jbe
xchg
hlt
sti
fs
hlt
je
add
ret
call
xor
xchg
xchg
test
cmpl
lcall
jb
pop
inc
aas
stos
ret
cs
cmp
dec
iret
jo
in
cld
adc
cltd
xor
cwtl
out
fucomip
insb
and
sbb
leave
aas
sbb
mov
xchg
rorl
test
enter
ja
sub
inc
aam
push
sarb
fnstenv
movsb
inc
shl
lods
das
testl
inc
dec
push
movsl
jae
cmpsl
jle
outsl
push
or
sbb
xchg
pop
jne
aas
mov
orl
sub
mov
push
data16
pop
test
add
xchg
int
out
jae
out
dec
cmc
int3
fisubl
cmc
leave
pop
lret
xchg
adc
inc
aam
xor
dec
outsl
sub
stos
sbb
out
fwait
mov
orl
and
pop
jp
stos
mov
lods
sbb
mov
ret
xorb
andl
outsb
mov
in
ds
aas
leave
mov
clc
cwtl
mov
lret
gs
mov
sbb
cmpsb
mov
xchg
dec
xchg
add
test
and
or
lock
adc
cmp
testl
insb
cmp
mov
push
rorb
mov
and
hlt
mov
mov
ret
and
out
jno
xor
out
dec
mov
ret
pop
push
adc
jmp
movsb
pusha
into
sub
push
test
insl
xchg
sbb
add
mov
movsb
xor
mov
adc
xchg
mov
mov
push
incl
stos
sub
and
jns
das
mov
int3
scas
in
test
dec
stos
lock
mov
adc
hlt
inc
sub
cmpsl
or
add
mov
mov
adc
outsb
lret
mov
loopne
xchg
fincstp
jg
push
add
test
shr
jne
jne
fs
push
lds
ret
iret
insb
pusha
mov
scas
or
mov
pushl
mov
loope
jmp
xorb
xchg
sub
scas
mov
xor
fiadds
add
mov
jl
bswap
roll
je
mov
push
xor
push
out
xchg
mov
cmp
ffree
js
sub
fs
cmpb
pusha
mov
repz
xor
pop
insb
pop
push
popf
mov
dec
push
fwait
sub
inc
pusha
push
add
subl
rcl
sub
out
sub
stc
shlb
push
sahf
and
js
repz
call
cmc
xchg
rorl
push
fmull
les
addl
int3
cmp
push
mov
or
mov
negb
pop
flds
sbb
nop
add
and
cld
dec
xor
insl
subb
push
repnz
stc
aam
push
je
push
popl
sbbb
lret
mov
sub
dec
in
jne
rorb
xor
insl
outsb
push
mov
lods
aam
sbb
sub
fsubp
push
scas
cwtl
mov
or
movb
and
imul
repnz
rolb
imul
pop
inc
inc
ret
lcall
cmp
sti
mov
lock
arpl
les
out
std
in
add
insl
lret
push
push
ss
test
sub
cmpsb
cmp
inc
pop
repz
inc
adc
scas
mov
push
mov
xchg
fstps
push
in
test
les
aad
push
mov
pop
or
rol
ja
daa
test
out
sub
and
lret
cmp
push
popf
roll
fidivs
pop
inc
mov
sbb
addr16
jae
mov
insb
mov
lret
cmpsb
push
cmp
cmp
adc
adcl
jmp
mov
out
and
and
jno
test
fucomp
jo
scas
loopne
rcl
fcomp
int
stc
and
out
testb
bound
popf
imul
lds
fwait
call
mov
out
push
sbb
lret
daa
pusha
xchg
mov
adc
pop
call
loopne
jo
sub
stos
arpl
cmc
and
lea
push
cltd
pop
fidivrs
cwtl
pop
push
cmpsl
inc
out
sbb
lds
jnp
inc
stc
popf
jns
mov
decl
push
gs
xlat
loope
sarb
inc
dec
mov
out
les
insb
pop
or
push
jle
mov
fwait
xor
add
imul
dec
fdivrl
es
clc
subb
or
fstpt
pop
push
xlat
hlt
out
sbb
es
inc
jae
imul
xchg
inc
xor
addl
mov
cld
adc
nop
mov
or
jcxz
je
int3
and
dec
test
repz
inc
push
jnp
imul
adc
or
das
mov
mov
sahf
repz
xor
adc
paddd
int3
xchg
lods
pusha
movsl
mov
sub
jo
jno
jb
adc
pop
jb
cmpsl
movsb
jno
lcall
roll
dec
pushf
xchg
sub
loope
jo
in
icebp
test
test
pop
or
xchg
pop
mov
lret
jno
popa
sbb
ret
xchg
mov
push
mov
ja
push
pop
in
cmp
rorl
popa
or
cmp
je
push
pop
xchg
xor
or
sahf
jg
xor
ljmp
sub
sti
mov
rcr
stc
xor
cltd
iret
mov
xchg
adc
sbb
xchg
jg
cmp
mov
push
adc
sbb
test
xlat
test
in
xchg
jmp
cwtl
xchg
nopl
bound
mov
and
inc
pop
or
hlt
outsb
gs
dec
mov
les
xor
mov
inc
js
jp
inc
inc
mov
movsb
in
cmp
aaa
jne
pop
dec
mov
jb
rcll
sahf
mov
jo
repnz
out
mov
out
dec
inc
ljmp
leave
add
adc
jmp
pop
cmpsb
mov
movsl
cmp
cmp
jnp
dec
icebp
push
jge
in
aaa
push
xor
loop
aaa
mov
xchg
sub
stc
fldenv
outsb
or
movsl
mov
xorb
mov
ss
stc
xchg
cmp
sub
xlat
gs
fnstenv
mov
bound
inc
xor
push
out
sub
jg
sub
jno
aam
je
lret
pop
push
inc
ja
push
je
jg
inc
ficoms
fdivs
xchg
test
cltd
movl
cmp
dec
xchg
lods
dec
fs
xor
mov
test
stos
inc
call
outsb
jne
sahf
scas
xor
push
loopne
cli
fsts
movsb
pop
fld
aad
bnd
icebp
shrb
outsb
pop
sahf
lds
inc
push
mov
ret
test
call
not
push
addb
arpl
insb
pop
inc
xor
or
mov
test
dec
jmp
jmp
aad
fs
sub
push
dec
mov
lea
repnz
push
gs
iret
push
test
je
mov
aas
inc
outsb
std
or
add
insl
das
inc
mov
in
xor
xor
pop
add
fstpl
dec
fidivl
add
bnd
movsb
lret
cmp
dec
mov
dec
sub
popf
push
mov
lea
arpl
cmp
ret
in
insl
shll
push
imul
mov
and
jmp
push
xchg
jg
lock
popa
sub
test
lods
inc
pop
jne
dec
and
ficoms
jo
pop
push
cmp
icebp
adc
fwait
jmp
xchg
sbb
xor
sub
adc
aad
loope
push
xchg
int3
mov
stc
and
jns
pushf
hlt
xchg
rcll
sbb
int
jp
popf
pop
dec
test
adc
movsl
sub
fmuls
mov
push
icebp
fsubr
add
dec
mov
inc
hlt
das
and
sbb
out
movsl
xor
mov
push
lds
add
sbb
sbb
jg
aad
lods
push
rol
inc
jbe
jp
mov
inc
inc
or
divl
inc
jmp
mov
cltd
ret
sbb
clc
cmp
mov
outsl
inc
push
adc
sti
add
outsb
popa
xchg
scas
dec
adc
fsubs
dec
ds
clc
in
repnz
pop
testb
enter
incb
xchg
jo
daa
push
mov
pop
and
xchg
hlt
test
pusha
scas
filds
push
add
adc
mov
mov
rcl
lods
xlat
dec
dec
hlt
mov
out
insl
ja
pop
pop
andb
or
mov
stc
call
icebp
jecxz
pop
lahf
cmp
mov
sbb
jno
clc
add
insb
dec
in
pop
and
or
lods
jmp
jb
push
movsb
out
lahf
mov
out
ja
sub
inc
loopnew
pop
aaa
cmpsb
jb
les
arpl
push
push
jg
mov
mov
jp
sub
xchg
scas
dec
lcall
call
xor
lahf
mov
test
inc
imul
ret
or
pop
scas
jbe
pop
inc
cmp
aas
ja
push
cmp
sbb
dec
mov
and
popa
stc
mov
fs
inc
and
cmp
roll
int
mov
das
rclb
jne
mov
sbb
std
xchg
cmc
and
sub
add
or
pop
cmp
adc
jnp
and
lods
ja
nop
popa
dec
cmp
rolb
dec
add
xor
divb
or
push
add
sub
push
push
cmc
cli
imul
scas
jns
mov
add
lret
neg
out
inc
or
dec
in
dec
test
adc
mov
mov
sar
mov
adc
jbe
inc
rclb
cli
out
add
mov
dec
jae
mov
jg
popl
jg
jmp
xchg
jbe
cmp
gs
dec
int3
jmp
fcoms
scas
push
arpl
decb
repz
jb
loope
repz
mov
mov
jae
jns
dec
and
or
jmp
jnp
adc
and
rol
push
adc
sub
shrl
enter
xlat
push
add
add
icebp
and
mov
stc
push
nop
jbe
test
pop
pop
aam
cmpsl
ss
repz
fdivl
jns
aad
push
insl
jae
loope
insl
inc
mov
inc
out
push
jne
test
inc
cli
arpl
mov
lahf
shlb
push
mov
mov
loop
dec
stos
mov
int
popf
jl
or
fstl
jge
popa
mov
stos
addl
jp
test
sbb
int
aad
cmp
stc
ss
mov
stos
repz
lcall
xor
or
dec
xor
sub
pop
sahf
fisttps
or
lock
fs
push
jb
jg
stos
daa
jno
sbb
dec
jnp
lods
into
data16
dec
pop
bound
inc
sbb
add
or
push
mov
mov
push
pushf
push
or
add
xchg
nop
mov
out
add
dec
mov
push
fisubrs
add
push
int
outsl
jl
inc
js
pop
inc
xchg
jno
and
or
test
shll
shr
scas
out
pop
jg
xchg
xchg
in
into
out
leave
mov
pop
push
xor
xor
in
xor
mov
fs
push
adc
leave
mov
sbb
popa
rcrb
push
mov
aam
xor
or
pop
test
int3
sbb
pop
lcall
out
inc
sub
xor
pop
int
sub
xchg
idivl
shl
insb
in
imul
rcrl
push
push
pusha
jmp
pop
fbstp
iret
mov
mov
idivb
xlat
lds
loope
arpl
jg
or
call
movsb
add
jne
int
adc
cmpsl
mov
in
inc
insb
pop
jae
jo
clc
mov
xchg
nop
in
pushf
sbb
cmc
nop
shrb
aad
ss
inc
scas
out
cwtl
shlb
xor
mov
or
push
cltd
jge
pushf
mov
sbb
in
jle
lea
pop
mov
cs
sub
mov
push
mov
lods
aam
out
arpl
jl
fcmovbe
push
into
popf
lock
xchg
bnd
xchg
cltd
aad
ljmp
shrb
ja
insl
test
aad
insl
lcall
scas
ret
mov
or
xor
lods
push
and
jp
scas
jnp
addr16
pop
imul
mov
gs
sub
cmp
movsl
loopne
mov
inc
aam
push
shll
insl
or
loopne
test
push
mov
add
dec
xor
addr16
pop
jb
imul
mov
jp
lock
mov
inc
dec
jl
loop
sti
and
cmp
adc
cvttps2pi
dec
jno
mov
dec
ljmp
xor
pop
ret
mov
popf
pop
xchg
les
xchg
je
sbbb
push
or
jle
sbb
mov
neg
or
cmpsl
fisubrs
fadd
cld
lahf
mov
leave
mov
test
mov
dec
jbe
inc
fisubrl
push
inc
stc
and
mov
shrb
xor
adc
xorl
and
sbb
inc
adc
mov
and
out
or
mov
scas
jae
lcall
in
adc
dec
stos
mov
bound
jae
jbe
push
sub
imul
adc
cmpsb
outsl
xor
mov
cmpsl
lock
outsl
shll
sbb
out
ss
scas
fidivl
arpl
rcl
pop
lret
das
imul
mov
rclb
cmp
vprotb
or
jno
roll
add
adc
js
testl
inc
or
stc
nop
cltd
inc
out
bound
pop
into
xor
mov
adc
jge
adc
pop
adc
enter
leave
sbb
mov
fldt
lock
dec
cmp
or
fcompl
gs
jae
roll
rorb
std
repz
mov
jbe
lret
dec
in
dec
nop
adc
xchg
adc
jp
pop
es
cli
rolb
or
pop
nop
cmc
imul
sahf
adc
mov
inc
stc
and
sbb
aaa
mov
pop
movsb
dec
in
mov
sahf
in
push
or
or
test
mov
jecxz
imulb
jmp
frstor
sub
add
movsb
xorl
adc
dec
inc
xchg
imul
aaa
pop
xlat
dec
jmp
je
adc
xor
push
or
pop
mov
das
inc
jne
jge
mov
nop
mov
sbb
mov
js
xchg
jp
cmp
cmp
pop
adc
sub
scas
call
adc
jmp
es
pop
jae
scas
hlt
sub
je
inc
sub
jl
movsl
or
xchg
push
cld
ss
lcall
and
jl
inc
and
in
inc
out
xor
sti
fidivrl
dec
mov
xchg
xor
ret
jge
push
insl
aaa
add
mov
push
jo
push
mov
and
xor
aam
add
into
into
dec
aam
insl
sti
mov
sbb
les
mov
dec
pusha
cli
pushf
lods
sbb
in
lcall
add
repz
ret
pop
sbb
lret
data16
jo
lcall
inc
inc
mov
fcmovbe
push
push
cmp
push
rcrl
repnz
fsqrt
repz
inc
or
push
push
jg,pn
testb
fmulp
imul
stos
fs
lcall
and
ss
pop
dec
jle
roll
jmp
cmp
jmp
leave
ret
xchg
and
ljmp
in
pop
inc
push
mov
mov
sbb
jbe
push
mov
cltd
push
repnz
fiadds
test
push
mov
insb
in
incl
ret
or
inc
outsb
js
movsl
inc
mov
or
mov
xchg
xor
pop
pop
push
mov
ljmp
es
mov
mov
cmp
lret
jnp
jnp
imul
cmc
incb
sarl
sub
aam
out
ljmp
leave
sub
mov
aaa
mov
xor
mulb
mov
fnstenv
filds
cli
shlb
mov
adc
jae
sub
xor
mov
jp
das
inc
add
sti
push
rorb
xor
int3
mov
int3
int3
sub
jno
jg
jle
out
cs
inc
insb
mov
loopne
pop
mov
cmc
sarl
xchg
movsl
out
push
push
fs
cld
out
add
adc
mov
mov
sub
cmpsb
or
and
cmp
mov
mov
jg
push
pop
orl
and
not
adc
push
adc
addb
movsb
pop
frstor
push
sub
dec
inc
lods
sbb
xchg
adc
xchg
pusha
pop
mov
mov
andb
in
pop
lahf
aam
cmpsb
and
lahf
out
xor
sbb
inc
mov
in
faddl
repz
enter
cltd
add
dec
or
sub
fildll
arpl
lret
add
loop
loopne
in
icebp
cli
shl
jmp
cs
nop
gs
movsb
adc
scas
int
popf
aad
xchg
cmp
call
mov
push
adc
jge
int
imul
jmp
jnp
mov
and
jecxz
xor
mov
mov
xor
arpl
sbb
adc
out
dec
xchg
lods
aaa
inc
cmp
xchg
mov
enter
out
push
scas
movsl
les
push
pop
and
pusha
sbb
stos
xchg
ss
mov
add
xor
or
leave
addr16
jmp
addr16
push
dec
in
adc
adc
and
sbb
shl
cltd
or
imul
push
bound
outsl
fmulp
loop
lock
sub
xchg
fstpl
jb
pop
mov
sbb
cmpsb
jno
loop
lods
sarb
or
cmp
pop
push
mov
jle
push
pop
pushf
insb
incl
sahf
ljmp
mov
ror
sub
mov
push
ret
or
xorl
dec
nop
outsl
fisubs
and
pop
and
repnz
push
fs
push
and
xchg
mov
insb
lcall
lahf
repnz
dec
dec
in
pushf
jbe
shlb
add
out
inc
xchg
mov
mov
aad
sub
shlb
add
cmpsl
mov
cmp
adc
mov
mov
and
ds
repnz
jnp
in
outsb
les
jb
pop
cmpsb
sub
or
cmp
or
aas
movsl
test
es
aam
jecxz
adc
fnstcw
ficompl
mov
mov
clc
sti
push
movsl
mov
dec
push
push
rorb
pop
call
pushf
call
fs
rcrl
sub
inc
pop
sub
insb
cmp
add
inc
out
mov
jmp
cwtl
cltd
icebp
lret
mov
mov
lret
mov
push
add
adc
lea
xorb
dec
icebp
xor
add
ret
insl
xchg
mov
mov
mov
inc
adcb
hlt
and
xchg
mov
xor
iret
mov
out
fcmovb
jle
stos
addb
shr
jmp
xlat
jl
lea
call
cmpsb
loopne
cmp
dec
leave
sbb
ljmp
aad
pop
cmp
aad
pushf
and
daa
push
in
test
iret
cmp
push
sbb
rcrl
aam
inc
dec
frstor
pop
stos
inc
push
mov
sarl
leave
sbb
leave
in
xchg
mov
xchg
or
dec
sub
ss
ja
pushf
and
cmp
lods
cld
sbb
add
pop
cmp
mov
inc
cltd
or
jb
push
gs
ret
icebp
jp
push
mov
fsubl
cs
mov
lret
mov
mulb
xor
add
loop
fisttpl
lea
repnz
nop
aam
call
negb
sbb
mov
sbb
cwtl
addr16
popa
stc
add
ja
or
imul
stos
cli
pop
stc
test
jge
sbb
mov
ffreep
inc
adc
mov
ret
jne
cmpsb
mov
fst
fldt
ret
popf
lcall
mov
out
ljmp
out
andl
pop
jno
jne
pop
mov
popl
sbb
ljmp
jg
outsl
mov
movsb
xchg
out
mov
inc
xchg
sbb
cs
je
adc
jo
add
rcl
inc
insl
insl
neg
inc
jg
aaa
jbe
jp
or
out
ja
xchg
out
lea
int
xor
movsl
xchg
and
cmp
sub
loopne
shrb
cmpsb
dec
in
ret
test
insb
mov
mov
jae
add
out
dec
jbe
sub
sbb
sbb
push
jp
rcr
out
cmc
gs
cli
fnstsw
jae
in
test
cmp
pop
in
mov
or
push
push
inc
push
imul
loope
push
hlt
data16
push
fldt
cmp
sub
into
inc
xchg
dec
mov
scas
adc
sub
iret
nop
cmp
bswap
dec
push
mov
lahf
int
mov
das
xchg
cmp
inc
fimull
es
adc
and
cmp
inc
out
jl
sub
lret
and
sbb
shl
mov
cs
mov
push
jg
mov
jb
cmc
lds
push
push
sub
xor
xor
xchg
outsl
arpl
pop
add
and
bnd
loopne
add
inc
mov
add
mov
inc
mov
jbe
add
iret
jb
pop
rorl
ds
flds
sbb
push
pop
out
hlt
xchg
rcll
or
mov
adc
push
adc
mov
fcompl
mov
andl
cmc
sub
in
push
int
mov
push
pop
push
dec
popa
xor
fwait
push
movl
sub
stc
clc
js
push
lcall
inc
orb
jp
cltd
das
sbb
iret
mov
addb
and
cmp
add
pop
xchg
cli
mov
xchg
pop
or
push
xchg
lock
cld
imul
inc
dec
aam
xchg
cmc
pop
arpl
cmp
out
adc
fwait
movsb
repz
lock
push
ret
dec
fbld
jo
adc
mov
pop
mov
or
in
cmpsl
jp
stos
mov
sbb
mov
test
mov
mov
imul
dec
lods
nop
fwait
stc
jp
fisttpl
call
inc
cmp
mov
mov
inc
jle
or
icebp
jmp
or
es
mov
icebp
jb
hlt
jo
and
or
mov
cmp
sahf
imul
lcall
sub
mov
cs
mov
clc
xor
addr16
or
scas
scas
cmp
jle
adc
xchg
cld
out
testl
sbb
inc
xchg
stos
and
inc
out
push
and
push
data16
fs
bswap
jb
pusha
sbb
dec
test
cmp
mov
cld
add
ss
dec
aaa
cmc
mov
cmp
pop
mov
mov
dec
sbb
sbb
lods
lods
lods
fdivrl
repnz
xchg
push
fists
iret
and
mov
aad
inc
ja
cmp
mov
ficoml
cli
jmp
insl
push
out
mov
pop
jno
xor
push
mov
xchg
dec
sbb
scas
movsb
inc
jge
add
dec
ja
out
mov
and
popa
lods
loop
push
fistl
dec
push
mov
fbld
je
mov
sbb
mov
test
enter
mov
xor
dec
adcl
push
mov
adc
pop
imul
sub
ja
jg
out
sbb
fists
xor
jecxz
out
popl
mov
imul
sub
loop
fdivrl
repz
xchg
imul
jp
xchg
jae
cmp
jmp
push
fcomps
mov
out
inc
out
lea
test
scas
dec
scas
push
stos
jmp
cld
loopne
adc
mov
call
pop
mov
dec
cmpl
inc
and
das
inc
in
std
fistpll
sub
pop
mov
mov
mov
int3
dec
mov
pop
mov
outsl
xchg
mov
stos
mov
xor
call
icebp
incb
sub
add
sbb
and
push
cmp
enter
arpl
adc
imul
push
cli
scas
clc
push
insl
in
das
pop
out
ret
push
xor
das
pushf
jmp
push
loopne
xor
dec
inc
lods
add
xor
rorl
lcall
sbb
imul
out
adc
xchg
popf
adc
data16
in
add
lea
push
loop
xlat
dec
xchg
mov
orb
jno
pusha
and
inc
jge
adc
pushf
pop
jge
sub
pop
or
pop
mov
notb
and
mov
fdivs
pushf
add
scas
jmp
add
sub
repz
decl
imul
cmp
sub
or
sbb
leave
fists
cmp
mov
sub
cmp
add
imul
cwtl
js
lods
jne
into
jmp
adc
mov
out
xor
aam
sbb
mov
ret
outsl
fimull
lret
inc
arpl
dec
xchg
xchg
jmp
push
ljmp
pop
scas
insl
mov
and
pop
les
loopne
inc
sbb
inc
dec
test
and
sahf
and
lret
mov
mov
lock
xchg
jge
addr16
xchg
mov
test
add
or
pusha
jle
sub
scas
xchg
adc
pop
xchg
out
jo
mov
or
inc
add
gs
adc
jae
add
jg
jl
mov
cmpsl
jg
dec
stos
int
pop
sbb
push
push
mov
pop
pushf
enter
mov
sub
loop
mov
push
jnp
cltd
sub
leave
movsl
xchg
push
movsb
cli
fildl
scas
jo
mov
hlt
movsb
bound
rorb
mov
out
or
fxch
je
xor
push
jae
pop
rorb
mov
enter
out
mov
xor
inc
repnz
dec
jae
je
jo
ss
stos
add
test
cmpsl
sub
sbb
mov
sub
ja
dec
xchg
outsl
lea
mov
shrb
fisubl
jmp
imul
pop
pop
lock
fwait
push
pop
xor
outsl
in
add
jb
out
xchg
fwait
lret
fdivrp
in
movsb
xor
shlb
mov
loopne
cltd
das
push
int3
adc
pop
push
dec
add
test
movl
xchg
aas
ret
roll
stos
repz
xor
cmp
mov
outsl
inc
or
sub
je
mov
call
dec
call
mov
test
inc
add
pop
call
imul
sbb
jb
jp
inc
push
or
shrb
into
mov
jo
out
xchg
rol
fistpll
mov
mov
mov
push
addr16
lea
pop
int3
dec
ja
iret
jle
aam
cmp
aad
xlat
test
clc
notb
scas
jns
insb
pop
fisttpl
sub
out
sub
mov
into
sub
adc
movsb
ret
cmp
sub
fsubrl
test
sub
scas
jnp
jbe
sub
push
dec
pushf
mov
mov
xchg
imul
in
popa
jne
lret
fidivrl
pop
mov
mov
jnp
cld
pop
add
imul
adc
mov
inc
jg
push
pop
cmp
in
lret
push
lock
fs
mov
leave
jmp
jb
pop
sub
lods
push
mov
add
push
adc
sub
test
mov
pop
adc
pop
sbb
rcll
in
sub
cmpb
adc
xchg
cwtl
jne
and
adc
sub
adc
mov
add
daa
adc
mov
cmp
pop
or
push
fnstenv
jne
lock
fistpl
jns
lahf
xchg
in
inc
in
push
xor
fdivrs
addr16
jbe
clc
lcall
imul
in
mov
adc
xchg
enter
xor
outsl
shlb
lods
mov
sbb
fists
rol
shll
push
push
inc
xor
adc
mov
in
jmp
push
and
cmc
fsub
jecxz
xor
lea
scas
sbb
dec
jo
dec
fistps
nop
push
add
fldenv
mov
in
xchg
xchg
adc
popf
lods
pop
and
in
mov
sub
out
mov
stos
fldt
test
in
jp
sub
out
xchg
or
ja
pop
stos
aam
and
pop
mov
xor
movsb
inc
test
fwait
mov
inc
in
mov
stos
and
jne
andl
int3
mov
repz
or
or
fdivrl
nop
mov
out
cmp
in
jno
outsb
sub
in
imul
jecxz
out
xorb
mov
cmp
sub
pop
bound
ljmp
xor
sbb
mov
fcompl
outsl
leave
popf
mov
lods
addb
cmc
xor
push
lcall
js
add
jl
add
scas
dec
dec
popa
rorl
mov
xchg
test
sbb
fwait
leave
inc
stos
in
dec
fmul
into
adc
jecxz
sub
test
ja
or
stc
test
pop
dec
pop
jne
stos
shr
or
stc
cmp
xchg
or
cmp
adc
enter
dec
fwait
jb
loope
jnp
int3
mov
arpl
fimull
test
push
dec
mov
out
sarb
push
out
push
adcb
dec
mov
jo
orl
dec
push
mov
out
lret
inc
in
faddl
cmp
fwait
add
jne
sti
jge,pt
stos
int3
fistpl
nop
test
lahf
push
jbe
fbld
and
iret
mov
cmpsb
pusha
imul
repz
sbb
pusha
xor
xlat
mov
push
imul
lret
iret
xchg
mov
rcl
mov
inc
sti
inc
dec
cmp
push
dec
mov
outsb
and
jmp
in
mov
scas
repnz
ret
xor
inc
xchg
in
adc
mov
push
xor
push
mov
in
lods
andl
or
sbb
mov
xor
sub
fdivrs
push
icebp
push
xchg
and
sbb
cmpl
nop
ret
sbb
cmp
cmp
push
mov
sbb
xchg
rcrl
orb
mov
data16
into
rcrl
push
jbe
jno
outsb
push
leave
mov
loope
les
js
fnop
jg
movaps
inc
imul
mov
stos
test
sbb
dec
jle
outsb
pop
xor
data16
add
fwait
xchg
push
xlat
js
leave
xor
cmp
inc
xchg
in
ret
mov
mov
enter
xchg
outsl
out
fildll
push
nop
xchg
enter
sbb
js
stc
fstpl
push
lea
imulb
jmp
pop
and
cmpsb
jmp
dec
popf
ja
popf
int3
test
or
mov
dec
pop
sub
fucomip
jle
fwait
popf
cmp
pop
hlt
out
hlt
mov
sub
xchg
out
push
movsb
out
inc
cld
and
into
xor
bound
test
test
adc
jp
xor
call
nop
imul
inc
imul
in
popa
sbb
jmp
cwtl
dec
adc
jp
out
jle
test
inc
stos
pop
es
dec
pop
or
mov
fisttpll
push
pop
rorl
imul
cwtl
cmpsl
test
and
pop
adc
lods
adcb
loope
cmp
mov
jbe
gs
out
movsl
or
mov
xor
add
push
adc
stos
xor
and
pushf
popa
clc
dec
mov
sbb
pop
and
inc
jle
sub
cmp
loope
popf
cmpsl
add
pop
or
scas
loop
fcomps
pop
jecxz
nop
data16
data16
fstp
loopne
fildl
bound
lods
jmp
pop
cmc
out
inc
jl
ss
mov
pop
xor
xchg
jecxz
mov
pop
pop
stos
lea
inc
std
out
mov
out
test
test
arpl
negb
pusha
fisubs
mov
xchg
iret
or
cmp
mov
jp
stos
xor
or
jb
mov
repz
cmp
je
rcrb
sbb
pusha
idiv
rcll
pop
jb
div
ret
dec
mov
loopne
inc
push
xor
frstor
mov
sarl
mov
mov
xor
pusha
call
pushl
lods
incb
add
xor
cmpsl
jae
arpl
mov
xchg
ds
xchg
fcoms
jp
jp
adc
into
mov
xchg
inc
mov
ficoml
outsl
loopew
dec
push
testb
std
or
ret
cmpb
mov
cmc
aad
and
sbb
pop
adc
push
push
cs
in
jb
cmpsb
rcll
pop
xchg
and
nop
push
xor
movsb
cmp
lods
mov
test
addl
jb
mov
loopne
mov
outsb
mov
xchg
loop
inc
sahf
mov
mov
movsb
nop
call
pop
mov
jge
out
test
pusha
imul
or
or
lods
adc
int
or
jmp
and
adc
movsl
mov
jo
add
cmc
es
andl
loopne
test
adc
push
sub
fidivrs
mov
mov
test
push
popf
adc
xor
aaa
sbb
adcb
xchg
or
adc
inc
mov
dec
mov
mov
loope
lret
shl
cmp
js
pop
rclb
sbb
add
pop
adc
pushf
inc
cmpsl
dec
lea
icebp
dec
sbb
test
xor
sbb
and
and
arpl
rolb
mov
and
adc
mov
ds
nop
gs
mov
adc
int3
fsub
call
push
loopne
lcall
add
or
xor
push
sub
and
add
icebp
push
inc
loopne
ds
pop
rclb
ret
xchg
dec
pop
bound
in
inc
stos
adc
push
jg
rclb
mov
out
rclb
lret
aam
ffreep
dec
stc
push
cmp
fiadds
testb
add
leave
lret
sub
sahf
dec
shl
insl
inc
fwait
daa
rclb
sarl
adc
outsl
dec
mov
mov
lea
xchg
cmp
fldl
ror
in
in
jb
mov
push
sbb
xor
xor
data16
fdivs
clc
dec
hlt
nop
sbb
mov
pop
mov
cmp
popf
pushf
mov
and
loopne
setb
test
rcl
jl
repnz
imul
orl
aaa
insb
repnz
pop
out
outsl
stos
or
jle
test
push
inc
pop
mov
mov
xchg
popf
imul
es
jns
xor
lret
xchg
pop
adc
xchg
cmp
pop
shr
movsb
mov
into
xor
test
sub
gs
imul
inc
or
jge
mov
out
subl
stos
lods
push
xor
push
fdivrl
arpl
sub
or
hlt
lahf
cmpsl
pusha
sti
lret
mov
mov
into
mov
mov
hlt
sbb
aaa
scas
mov
subb
mov
jle
mov
cwtl
test
fistps
ret
int3
mov
add
jno
xchg
aas
inc
loop
pop
jns
stos
and
into
push
aas
jecxz
fsubs
lea
mov
and
fmul
cmc
jb
inc
clc
cltd
dec
fstl
add
scas
nop
cltd
sbb
loopne
pop
testl
pop
mov
cwtl
mov
dec
and
pop
xorl
xchg
add
xor
inc
jo
xor
sub
je
cmpb
insl
iret
push
inc
incb
ss
sbb
fdivrs
pushf
sahf
gs
test
sbb
movsl
inc
sbb
sbb
mov
jmp
imul
in
shl
pop
cs
inc
stc
inc
mov
icebp
xchg
or
mov
mov
xchg
rorb
or
into
push
and
out
or
push
sub
test
cld
xchg
test
mov
sbb
adc
mov
ret
pop
pop
fists
or
clc
mov
fsts
inc
push
lea
lods
push
mov
dec
xchg
and
push
mov
mov
and
je
and
fiaddl
sbb
popf
fmull
add
mov
inc
and
fists
enter
ret
xlat
push
sbb
and
test
xchg
inc
scas
mov
lret
call
lret
ja
push
add
add
pop
roll
mov
add
mov
inc
push
test
gs
cmp
lock
lcall
pop
xlat
cmp
mov
jnp
inc
adc
ret
scas
pop
push
fidivrl
pop
testl
loope
aam
pushf
mov
jecxz
inc
jle
pop
xor
lahf
dec
push
into
mov
fidivs
pop
addr16
push
jecxz
enter
roll
add
pop
inc
cmp
shrl
inc
and
je
sub
mov
xor
xchg
xchg
add
nop
jne
jmp
popw
insl
xchg
push
jecxz
ret
pop
xchg
and
fs
xor
imull
das
sub
and
fldl
cmp
push
push
pop
fsubrp
sti
cld
fwait
xor
pop
insl
fsub
outsb
ja
xchg
clc
enter
jecxz
push
dec
mov
pop
test
loope
mov
int3
mov
lret
fcoms
fucomp
lock
repnz
mov
les
insl
push
andl
push
xor
cmpl
push
andl
cld
in
aam
mov
push
loope
stos
mov
stos
lcall
mov
ja
mov
imul
les
xor
pop
cmp
out
sub
insl
and
xchg
push
dec
jo
in
add
addb
lds
and
sub
popa
ljmp
mov
dec
aas
test
rcl
aad
push
shl
add
lock
in
cmpsb
mov
loopne
cmp
mov
dec
jb
loopne
shlb
hlt
push
mov
xchg
lds
add
int
sbb
inc
mov
clc
insb
xchg
and
or
pop
scas
lods
movsb
movsb
xchg
nop
fs
dec
cli
push
cs
xor
mov
js
ret
pop
pop
dec
mov
aas
inc
xor
mov
testl
sbb
mov
adc
ret
xor
fisttpll
add
f2xm1
mov
xchg
addr16
adc
in
xor
inc
dec
stc
es
dec
int3
ret
lcall
mov
dec
stos
push
scas
or
push
lret
fwait
loope
std
in
cmp
xchg
cli
pop
shll
sbb
sbbb
andl
mov
pop
or
cwtl
sub
or
xchg
cltd
out
add
or
push
and
iret
xchg
mov
mov
inc
xchg
leave
adc
adc
push
call
cwtl
test
add
push
mov
jge
jns
das
mov
js
inc
aas
into
inc
cmpsb
push
mov
sub
add
push
mov
or
ret
cli
stos
jle
rolb
scas
outsb
je
lret
push
mov
push
xor
test
es
int
outsl
popf
dec
jge
aam
pop
push
dec
xor
call
scas
imul
mov
sub
fstl
out
dec
fisubrs
and
lret
or
sbb
push
mov
inc
inc
sarb
imul
pop
nop
leave
shrb
rcrb
mov
in
push
popf
in
or
call
jecxz
cli
jno
mov
repnz
cmpsb
inc
aad
adc
mov
imul
mov
jle
cmp
pop
outsl
daa
jns
sbb
push
jle
cwtl
xchg
repnz
dec
and
mov
mov
sub
xor
daa
in
test
and
cmpsb
inc
xchg
cmp
jb
mov
into
lret
lods
das
cmp
dec
fwait
mov
outsl
mov
ds
out
movsb
push
rorb
roll
sbb
mov
cmpsb
jo
xorb
cmp
dec
pop
bound
in
adc
movsl
xor
cld
mov
out
jg
fisubs
gs
inc
fwait
scas
int
dec
dec
nop
cmp
jp
cli
loop
push
popa
inc
js
add
stos
scas
clc
mov
jmp
loopne
jb
xchg
pop
pop
jmp
test
push
popl
jecxz
idivb
adc
or
dec
pop
cld
mov
jl
xor
imul
inc
in
ret
jnp
mov
push
xor
popf
mov
adc
int
rcll
ret
cltd
and
jecxz
out
test
and
loop
cmc
mov
insb
out
xrelease
jno
pop
jecxz
sub
pop
jge
stos
repz
mov
inc
xchg
mov
jo
jle
add
divb
mov
rcl
mov
dec
in
test
mov
out
lcall
cs
inc
scas
std
clc
das
dec
gs
insl
or
pop
arpl
jl
mov
ret
ret
jl
into
dec
imul
fldt
mov
mov
pop
popa
jb
mov
inc
test
dec
roll
test
sub
jmp
adc
shll
inc
pop
fs
test
push
sub
and
pop
into
sub
cmpsl
and
xchg
sahf
jbe
mov
xchg
es
inc
daa
mov
aad
dec
sarl
loop
xchg
jns
les
imul
insl
mov
xor
addr16
sbb
push
sbb
inc
shlb
scas
shrl
cmp
mov
fwait
aas
in
ret
mov
mov
lock
xchg
outsb
add
xor
cli
dec
fildll
pop
test
mov
cmp
push
fistps
into
mul
pop
xchg
int3
xchg
stos
shl
lock
xor
lahf
mov
outsb
mov
or
bound
lods
in
shll
aad
sub
mov
and
jb
sti
dec
out
mov
pop
test
xrelease
xor
dec
data16
pop
push
and
lret
mov
inc
sub
sub
lret
pop
xchg
push
pop
sub
ja
mov
scas
or
mov
lds
sti
int3
xor
popa
aam
mov
push
lahf
or
adc
xor
mov
mov
jnp
fdivrl
lcall
push
dec
adc
inc
call
cwtl
mov
cmc
aaa
sub
mov
or
sbb
in
adc
pop
jl
mov
pop
in
and
push
shlb
and
adc
adc
int3
aam
push
mov
cmp
jb
insl
add
les
mov
imul
es
test
mov
xchg
cld
test
and
cmp
jae
notl
int
push
adc
neg
mov
mov
les
outsb
dec
push
out
jp
sbb
insl
jl
bound
ds
inc
in
mov
outsl
mov
xchg
and
sub
xchg
dec
imul
xchg
pop
test
mov
sbb
and
sbb
push
or
das
inc
pusha
xor
icebp
mov
ljmp
popf
jns
mov
mov
repz
xor
dec
inc
add
or
sahf
push
jo
les
out
fnstenv
push
clc
ds
sub
loop,pt
pop
stos
in
adc
icebp
aaa
cmp
mov
mov
xchg
adc
cmp
les
mov
pop
es
sarb
mov
fnstcw
inc
cmp
fadds
mov
add
mov
cld
mov
cs
lods
das
dec
xchg
dec
lret
sbb
or
mov
je
faddl
jno
in
add
push
pop
mov
rol
lods
mov
cmp
nop
cmp
jmp
pusha
sbb
jecxz
inc
mov
cmpsb
lcall
push
xchg
insb
jno
fdivl
dec
sub
or
in
lea
jge
stos
cld
dec
in
fsubs
lret
aaa
mov
aaa
incb
cmp
decb
xor
into
gs
inc
push
mov
fcomp
popf
lods
mov
fimuls
jg
and
xchg
push
jo
aam
frstor
mov
iret
outsl
adc
adc
mov
mov
mov
scas
sbb
out
inc
fildll
push
out
data16
mov
add
setb
push
mov
sub
jns
jbe
sub
inc
ds
sub
sbb
mov
aam
repz
out
rclb
enter
xor
xlat
mov
shrl
xor
lret
xor
popf
pop
andb
push
or
push
dec
sub
test
push
push
or
xchg
mov
cmp
add
pop
loopne
jg
imul
pusha
xor
fs
sbb
push
mul
test
pop
xchg
clc
test
cmp
loopne
mov
xchg
out
jbe
mov
adc
jns
decl
jecxz
xchg
dec
fistps
jp
or
insl
mov
jl
or
mov
aas
adc
aad
jno
fcmovnu
jmp
mov
inc
jp
gs
mov
mov
notb
jmp
int3
push
pop
pop
pop
add
push
sbb
or
jecxz
movsb
fs
sub
lret
or
lock
mov
sbb
imul
enter
mov
popf
bound
bnd
pop
lcall
xor
insl
adcb
xchg
pusha
push
dec
push
fiaddl
xchg
js
xor
stos
xor
jnp
mov
fadds
pop
cmp
scas
push
cmp
fwait
clc
add
leave
out
push
mov
sbb
adc
bnd
mov
ret
mov
addr16
inc
add
test
loopne
sbb
insb
mov
mov
pop
sub
hlt
aad
shl
lahf
cmc
in
pop
and
sbb
nop
lcall
in
insw
mov
je
scas
lea
adc
sti
xchg
cmp
imul
cmp
xor
pop
in
test
inc
das
push
mov
je
sbb
pushf
mov
pop
fs
or
fnsave
push
jno
lahf
xor
les
cmpsl
pop
mov
and
xor
inc
in
cld
ss
pop
ljmp
shrl
das
out
imul
daa
fucomi
sub
ljmp
mov
jp
inc
mov
push
bound
out
clc
adc
mov
push
orl
xchg
and
sbb
add
adcl
scas
lds
inc
fsubr
cmpsb
aas
sub
xor
push
xchg
enter
jl
adc
out
push
jp
cli
mov
jne
jl
ja
push
mov
test
xchg
push
pop
repnz
add
outsb
dec
scas
sbb
push
and
dec
rclb
clc
or
push
pop
or
lods
dec
je
repnz
out
out
lods
setge
xchg
in
sub
incw
xchg
sub
testl
pop
popa
xor
and
add
pop
or
out
rclb
das
xlat
frstor
aas
xchg
sahf
pop
xchg
ja
mov
out
adc
xor
outsl
fstpl
jle
ds
cld
lods
lock
test
scas
inc
leave
test
push
mov
es
sbb
ss
out
stc
xchg
lods
insb
push
cmc
mov
icebp
stos
add
cmpsl
stos
jle
and
rol
lcall
add
sbb
in
fcmovnu
test
pop
bound
sub
inc
es
ror
add
decl
insb
pop
sti
jae
jne
shlb
inc
les
ja
sbb
and
jp
xchg
dec
mov
mov
daa
xchg
orb
xlat
lods
or
mov
mov
xor
lock
stos
xchg
jb
fisubl
push
test
inc
or
cli
in
jl
clc
inc
faddl
addr16
pop
imull
or
ljmp
cld
lea
lods
cmc
mov
adc
rcrb
fimuls
test
inc
out
fisubrs
jg
mov
cltd
cwtl
adc
mov
push
lcall
cmpsl
repnz
jbe
xor
xor
ret
jnp
sbbl
adcl
mov
fisttps
pop
dec
add
cmp
dec
insl
decl
mov
pop
out
negl
mov
or
addr16
test
dec
stos
add
lret
inc
clc
or
orb
lods
mov
sub
fcoml
mov
lret
inc
shrb
inc
lods
jecxz
lock
std
pushf
jge
mov
mov
mov
sarb
loope
pop
push
xchg
dec
outsb
cltd
ret
lcall
in
cmp
mov
ss
sbb
aas
pop
out
push
adc
cmp
mov
fidivrs
loope
outsb
or
imul
jne
or
cs
movsb
and
inc
mull
xlat
movsl
fwait
cwtl
xlat
mov
cmp
sbb
test
je
inc
push
pop
arpl
inc
mov
imul
add
push
xor
out
movl
jae
stos
push
loopne
popl
add
dec
xchg
mov
inc
repnz
or
call
dec
xchg
sub
shrl
arpl
cmp
popa
or
lahf
mov
and
push
xor
aam
add
in
nop
fcomp
xchg
sub
sbb
push
cmc
lods
or
popf
push
movsl
sbb
add
push
xor
pop
fmul
adc
adc
iret
lds
push
cmp
jle
or
pop
aam
icebp
insb
pop
pop
movsl
ret
lcall
pushf
call
je
incb
test
jle
ja
mov
test
fcoms
scas
movswl
dec
xchg
push
int
cmc
nop
xchg
cwtl
in
xlat
rol
mov
nop
cmc
sbb
mov
or
xor
xchg
cwtl
sub
mov
adc
add
dec
and
sub
in
pusha
sbb
fs
cmp
jns
imul
int3
cli
es
ret
mov
sbb
loope
fwait
iret
pop
fstps
push
or
lds
cld
shrl
inc
mov
adc
loope
repz
mov
arpl
lahf
pop
inc
loop
push
adc
mov
in
adc
fcoml
mov
scas
icebp
out
js
fisttpl
clc
sub
std
mov
jge
jne
sub
repz
out
xor
daa
imul
jb
dec
inc
push
adc
hlt
mov
insl
and
movsb
push
popa
add
ret
imul
jbe
std
pusha
fneni(8087
jg
push
sbb
loope
adc
pop
inc
lea
fisubl
pop
or
loopne
xchg
fstl
mov
dec
movsl
push
shrb
mov
test
lret
pop
mov
pop
jae
jno
divl
data16
pusha
push
negb
mov
in
xchg
mov
dec
leave
iret
cltd
dec
sbb
cwtl
scas
pop
in
xchg
fnstenv
call
outsb
push
ja
jo
mov
mov
xchg
ljmp
lret
pop
or
psllq
pmullw
les
xlat
popf
pop
fsubrl
xlat
lcall
aad
shl
stos
xor
inc
pop
movsl
inc
push
icebp
pop
pop
pop
dec
adc
inc
pushf
andl
or
out
jns
inc
sbb
lods
cmpsb
push
nop
sub
incl
into
or
and
cltd
mov
cmp
movsb
inc
stc
sub
into
das
xlat
sub
sahf
mov
ja
cmp
ficoml
insl
ss
push
cwtl
outsb
roll
je
lea
int
mov
adc
repz
out
or
cmp
cmp
insb
add
and
int
fwait
js
jge
pop
addr16
mov
dec
sti
cmp
push
push
pop
mov
outsb
jp
mov
xchg
cld
mov
push
mov
push
pop
aad
divb
inc
insb
out
xor
sub
into
dec
pop
push
cmp
lret
clc
push
aad
push
dec
cmp
sub
pusha
jle
jnp
lcall
mov
xor
adc
jle
xchg
jge
popf
push
ja
cltd
jbe
xchg
push
testl
push
test
push
push
dec
pusha
add
xchg
fdiv
rorb
mov
sub
mov
jns
mov
loopne
sti
mov
push
pop
loope
int
push
lds
mov
xor
sbb
xor
push
fwait
lret
rcrl
fldt
test
lods
inc
push
xchg
outsl
sub
mov
sub
lret
pop
cmp
pop
jp
clc
adc
xchg
outsl
mov
push
pop
enter
or
repz
incl
sbb
test
flds
addr16
out
cmp
and
push
inc
pushf
inc
inc
int3
push
loope
sbb
loope
push
ret
mov
inc
inc
icebp
repz
xchg
xor
lahf
into
call
and
repnz
sbb
push
ja
jbe
mov
loop
jb
inc
sub
and
mov
in
subl
js
and
mov
add
mov
push
bound
int
xor
cmp
pop
sub
push
adc
arpl
cltd
sbb
jns
inc
or
sbb
jp
fnstenv
cmpsl
cmp
jb
mov
daa
inc
outsb
jle
icebp
inc
sbb
js
adc
flds
lods
sbb
lds
into
rorb
fwait
clc
lret
fildll
mov
fdivrl
add
enter
add
adc
xor
les
ja
lret
jnp
mov
push
pop
lds
inc
xchg
mov
aad
jmp
jecxz
jp
movsl
adc
jb
push
cmp
xchg
dec
xchg
imul
pusha
pop
pop
lret
and
jp
cwtl
sti
lock
push
mov
inc
pop
mov
inc
out
sbb
int3
nop
dec
out
enter
push
lock
adc
data16
fwait
imul
push
sbb
xchg
int
adc
scas
ja
pop
mov
sbb
lahf
mov
xor
jecxz
mov
call
scas
test
xor
jne
outsb
fdivrs
dec
shll
pusha
shll
adc
rcr
dec
mov
push
sub
add
xchg
rcl
out
scas
loope
jae
cli
arpl
lds
add
inc
clc
or
ret
jp
dec
ja
pop
jmp
repz
add
cli
or
paddq
sbb
xor
mov
inc
and
mov
out
mov
dec
cmp
insl
mov
out
imul
mov
repnz
xlat
fstp
and
inc
inc
iret
into
lds
imull
mov
fwait
mov
add
ljmp
push
fwait
pusha
adc
aas
xchg
push
repz
add
dec
sub
lods
push
xor
roll
scas
pop
cli
sub
popl
cmp
mov
mov
rclb
cmpsl
mov
out
or
stos
inc
repz
xlat
add
sarl
mov
xchg
sub
addb
in
xchg
cmpsb
mov
std
dec
dec
call
addr16
jle
mov
xor
test
inc
imul
sbb
adc
roll
cs
cmp
push
mov
push
lret
sahf
jb
and
bound
je
aas
fwait
inc
faddp
outsb
arpl
push
cmc
adc
test
inc
adc
daa
push
hlt
or
scas
mov
daa
add
mov
push
jnp
sahf
repz
mov
je
test
adc
imul
sahf
out
orb
pop
and
dec
pop
test
mov
call
pop
test
push
mov
jp
sar
jle
dec
mov
xor
js
mov
cmpsb
xor
sub
push
or
ret
imul
sbb
jge
fisttpl
mov
loope
xchg
int
sbb
jl
insb
push
xchg
mov
icebp
jge
imul
bound
pop
test
mov
sbb
cmpsb
dec
aaa
mulb
jmp
jge
insb
mov
mov
jmp
xchg
xor
ja
or
add
xchg
sub
dec
sbb
mov
fwait
push
push
test
mov
cli
iret
repz
test
rcl
fcmovnu
aam
sbbl
or
mov
loope
push
mov
std
test
push
imul
daa
jmp
pop
pop
mov
mov
rorl
test
movsl
scas
insb
mov
enter
and
sub
xor
out
xor
adc
lods
dec
cmp
cmp
jne
lcall
mov
dec
in
sub
lock
ds
inc
in
cmp
daa
jl
jmp
push
bound
iret
or
mov
mov
dec
orl
int
dec
out
xlat
xchg
push
cmp
aas
fsubl
jp
fstl
into
les
sbb
lret
or
adc
xchg
test
push
hlt
scas
mov
leave
iret
jecxz
push
movsl
pop
outsb
push
pusha
mov
and
adc
jg
mov
in
into
scas
sbb
je
shll
aad
xchg
sub
fcompl
xorl
clc
push
fsubrs
mov
mov
into
fdivl
data16
incb
push
dec
dec
mov
loope
add
movsb
push
loop
cld
idiv
mov
hlt
add
out
mov
stos
mov
cmp
pushf
pusha
jg
cmpsl
adc
cmp
xchg
sbb
test
lret
out
cwtl
pushf
loopne
or
xchg
cmpsl
sub
push
divl
dec
dec
leave
inc
aam
pusha
in
aas
das
cmpsb
ljmp
adc
dec
int3
dec
mov
fdivs
xchg
xchg
lods
xchg
stos
scas
mov
scas
dec
in
outsb
xor
push
add
nop
push
or
fwait
movsb
mov
sbb
pop
ror
and
mov
cmpsb
xor
ja
xchg
xchg
mov
lock
cmp
outsl
mov
insb
mov
jge
cli
lds
xlat
repz
xlat
sub
outsl
ja
sbb
movsl
mov
mov
cmp
push
push
add
int
vpshldq
shl
in
or
orb
dec
movsb
data16
mov
mov
jb
ret
addl
rcll
in
sbb
dec
stos
mov
jecxz
test
roll
pop
mov
and
jns
mov
xor
arpl
shlb
fistps
addr16
es
push
jo
out
scas
data16
push
les
leave
sbbl
enter
xchg
add
nop
insb
pop
iret
std
xchg
sub
dec
xchg
xchg
adc
sbb
push
jmp
lods
movsb
or
push
mov
andl
xorb
xchg
adc
pop
dec
lods
scas
iret
in
push
push
into
add
in
imul
add
pop
dec
scas
test
cmc
mov
or
lock
lock
mov
adc
aas
inc
lods
push
xor
fists
inc
mov
in
adc
sub
scas
jge
shrb
ret
inc
dec
mov
cmp
arpl
stos
pop
inc
adc
push
xchg
in
adc
xor
jg
out
push
sbb
jge
stos
ds
mov
jp
xor
nop
add
loopne
pop
xor
sbb
push
aaa
xchg
pop
iret
test
mov
outsl
xchg
int
push
repz
inc
jecxz
hlt
std
or
xor
addr16
out
adc
xor
test
cs
xchg
sbb
rcl
push
ret
xor
mov
jb
pop
xor
adc
lret
sub
ret
jmp
shr
icebp
xchg
icebp
mov
mov
inc
mov
inc
jne
data16
rorl
call
jecxz
lret
push
mov
addr16
jp
xor
sbb
pop
repnz
loopne
repz
test
pop
movsb
rcrl
push
and
ret
mov
addl
adc
dec
inc
sarl
jl
cmp
repz
dec
xor
sub
int
xor
push
fsubrs
arpl
adc
stos
jne
inc
xchg
fisttpl
aad
or
fisubrs
dec
rcll
inc
jno
pop
ret
scas
fldl2t
pop
mov
fstpl
sbb
iret
mov
lods
ljmp
pop
or
jo
xchg
iret
psubd
cli
popf
fiadds
push
mov
pop
jl
mov
hlt
into
xchg
cwtl
mov
or
ja
ret
cmpsb
pop
push
adc
cmp
jmp
sbb
insb
test
mov
mov
xor
ret
sub
xor
xor
sahf
mov
pop
or
mov
cmc
gs
sub
into
xchg
dec
nopl
jns
in
sub
add
cmp
mov
shrb
mov
xor
mov
pop
mov
mov
movsl
xchg
cmc
jle
jmp
sub
movsl
sbb
fildl
dec
and
push
xlat
aam
mov
test
cwtl
gs
push
pop
gs
testb
mov
das
js
fmuls
jl
add
dec
repnz
vmread
lcall
rorb
cmp
and
add
mov
jnp
fwait
fbstp
fdiv
sub
mov
int3
lahf
gs
cmp
sti
add
je
ret
repnz
insb
mov
pop
or
pop
addl
or
lcall
dec
add
cmpsb
fsubrl
out
mov
push
adc
pop
inc
xor
ss
ret
andb
ficompl
dec
rcr
lret
add
push
jecxz
lea
cld
mov
adc
lds
insb
fnstcw
mov
movsb
or
insb
cmpsl
test
fldcw
mov
mov
imul
push
in
imul
and
adc
lcall
mov
pop
popf
stos
and
mov
push
jge
aam
inc
cmp
fildll
mov
jnp
jp
lods
mov
pop
inc
push
cmp
xor
xchg
int
dec
sub
popf
pop
push
inc
scas
roll
fs
repz
out
or
xchg
imul
xchg
or
mov
mov
mov
aam
xlat
xor
mov
mov
mov
add
in
xchg
jg
aad
insb
stos
int
jl
sbb
dec
sbb
movsb
push
cmp
jl
jne
xchg
mov
je
mov
pop
ss
ret
nop
fisubs
repz
popa
stos
rcll
js
sub
out
xchg
ljmp
in
mov
and
add
xchg
dec
jg
arpl
jns
or
jmp
sub
pop
xchg
xor
fbld
pop
loop
mov
jmp
bound
jb
aam
roll
aam
push
je
std
lods
add
cmpb
das
sbb
cmp
ret
xor
push
repz
push
and
and
xchg
je
lahf
jmp
ffree
sbb
fwait
lcall
mov
sbb
cmp
loop
out
int3
inc
fsubs
andb
lea
push
sbb
and
inc
xor
pop
sub
push
enter
cli
jg
sahf
jmp
push
shll
int3
jmp
cmp
lds
pushf
movsl
cmpl
and
mov
inc
mov
lods
adc
sbb
mov
add
push
test
mov
rclb
leave
or
inc
xor
jecxz
je
int
add
lahf
adc
lret
jmp
or
arpl
jnp
cmp
xor
pop
mov
push
je
or
xor
pop
push
lret
aas
xor
pop
jne
jns
jp
out
stc
and
ret
in
imul
jne
dec
mov
test
mov
mov
inc
cs
mov
mov
sbb
fimull
es
and
xchg
jo
cmp
cmp
call
out
ffree
jge
jo
mov
xchg
es
mov
adc
clc
push
mov
mov
cmp
mov
insl
in
mov
xchg
test
fucom
sbb
xor
gs
adc
pop
test
xor
mov
adcb
in
pop
jae
inc
sarb
imul
iret
test
shll
test
popf
insw
adc
xchg
mov
aam
aam
hlt
call
or
sub
dec
cmp
outsl
cmpsl
xchg
and
jne
pusha
into
int
jne
out
scas
mov
imul
gs
int3
test
inc
out
cmpsl
push
in
inc
adc
pushf
mul
add
adc
push
lret
mov
ret
and
loopne
cmp
cmp
xchg
rcll
movsb
pop
shll
invd
pop
mov
hlt
cmp
or
mov
jmp
les
lock
cli
in
sbb
dec
test
iret
dec
addr16
xchg
and
lahf
xchg
lret
int3
and
gs
pop
scas
jnp
and
test
xchg
add
leave
xor
jo
movswl
sti
push
jl
iret
dec
mov
popa
mov
ja
adc
adc
jnp
aam
inc
movsl
mov
rorl
mov
cmp
roll
push
aad
fsubrs
add
xor
fists
pop
outsl
lods
adc
rolb
xchg
clc
shrl
lods
nop
inc
xchg
pusha
adc
jbe
lods
test
add
fsts
xchg
mov
push
xchg
sbb
push
jb
sub
loope
int
cwtl
or
std
lahf
jae
sub
push
rorl
test
push
push
in
or
cmp
stc
xor
fdivs
pop
pop
mov
push
insb
pusha
lock
adc
sahf
cmp
mov
jne
mov
call
mov
adc
stos
out
enter
inc
faddl
pop
mov
inc
pop
and
mov
push
loopne
xchg
ja
fwait
sub
popa
mov
ljmp
jl
insb
pop
shr
enter
test
es
cmp
dec
outsb
or
push
movl
pop
fstl
or
inc
cmp
or
int
mov
int3
loop
push
shrl
outsl
cmp
out
sub
xchg
cld
cmp
lcall
ss
sub
add
pop
jp
stos
inc
jle
out
in
ja
inc
mov
mov
push
dec
pop
adc
test
xchg
inc
repz
pmaxub
test
dec
xchg
xchg
mov
sbb
cmp
jo
xor
ret
imul
ret
adc
jns
popa
stc
popa
and
inc
and
popf
and
inc
fs
push
pushf
mov
aaa
fldcw
stos
in
dec
adc
fdivl
cmp
inc
inc
or
int
inc
jl
leave
js
mov
push
xchg
sub
adc
xchg
sbb
mov
dec
adc
stc
or
shrb
cwtl
adc
sbb
add
push
rcrl
jae
bound
jp
pop
cld
rorb
mov
pushl
fwait
dec
rorl
stos
xchg
add
pop
movsb
pop
sub
pop
mov
adc
cs
not
mov
lds
insb
jnp
push
in
sub
lahf
inc
jb
sbb
xor
push
cmp
aas
call
cmp
out
add
jp
rcrl
jge
movsl
mov
xchg
jecxz
xchg
cmp
add
dec
add
cmp
mov
cmp
test
outsl
sub
pop
jbe
insl
xchg
mov
push
arpl
xor
push
pop
and
inc
add
add
stc
xor
mov
movd
cmp
dec
call
lahf
les
mov
inc
hlt
dec
jae,pn
dec
push
add
adc
mov
stos
and
add
imul
fisttpl
sub
test
push
cmp
lea
arpl
push
jg
pop
addr16
imul
sbbl
mov
das
or
xor
cli
jnp
add
and
push
rcll
lods
xchg
and
sub
xchg
jl
mov
dec
mov
add
mov
xchg
loope
data16
mov
cmp
mov
ljmp
pop
inc
in
push
pop
lds
sub
jns
inc
pop
cmp
int
dec
out
sbbb
inc
movsb
sub
popa
pushf
xchg
and
jmp
or
dec
add
lret
cmp
loope
repnz
xorb
jmp
cmp
push
sub
hlt
or
out
subl
sarl
jp
insb
sbb
imul
or
aaa
adc
addr16
aad
cwtl
mov
rclb
cmp
out
shll
fcmovnu
andb
dec
xlat
mov
fsubl
hlt
jp
cli
mov
cmp
movsl
xchg
pop
mov
loope
repz
push
pop
loope
pop
pop
cli
stos
lret
fwait
mov
pop
inc
jb
or
es
lahf
mov
scas
xchg
cmpsb
xor
in
mov
ss
cmp
mov
ret
in
test
test
imull
push
loopne
adc
jbe
inc
push
sarl
mov
jo
mov
jp
scas
popa
addr16
rorb
sub
add
in
stc
sahf
xor
xchg
mov
repz
jp,pt
sti
std
lods
jge
sub
outsb
shlb
loopne
push
in
cmp
sub
pop
js
mov
dec
sub
adc
out
cs
add
iret
or
arpl
or
mov
or
pop
xchg
shll
cmp
xor
adc
jns
cmp
mov
insl
mov
ljmp
pop
stc
int3
xor
jae
je
mov
out
or
mov
enter
dec
dec
repnz
lds
jl
dec
je
ret
push
movsl
mov
stc
mov
test
add
sub
je
dec
push
add
lcall
push
add
push
dec
xbegin
mov
jmp
and
mov
mov
cli
push
jp
stos
ss
mov
lahf
jmp
lock
and
test
out
add
mov
cmpsl
je,pt
xor
sarl
add
dec
mov
dec
movsl
jb
push
pop
je
jl
xor
inc
mov
or
pcmpeqw
adc
lods
clc
cmp
pushf
cmpsl
and
jg
push
cmp
int
mov
fwait
or
xor
stos
into
lret
testl
sarl
insl
inc
xor
fcmovbe
mov
mov
mov
loope
jp
xlat
outsb
mov
xor
push
xor
push
out
mov
das
lock
cs
mov
and
loopne
and
xor
pop
and
mov
push
addr16
dec
xchg
repnz
mov
sub
rcrl
mov
scas
sbb
aas
add
mov
xor
and
aam
sub
push
cmp
mov
inc
movsb
dec
adc
xor
mov
mov
mov
out
fwait
xor
leave
inc
mov
popa
jne
into
lcall
sbb
push
mov
sti
push
sbbb
jae
mov
and
jns
cwtl
jge
push
fstpl
cmpsb
addr16
test
je
lock
jns
xor
sbb
sub
sub
adc
lea
adc
cmp
and
push
pop
popf
xor
cmp
dec
push
jl
dec
jns
sahf
dec
dec
cmp
sub
call
push
scas
cmc
cli
or
sti
adc
test
xchg
insl
fildl
jmp
jl
popa
push
fimull
push
test
jne
fimull
insb
jbe
sbb
cltd
jl
sbb
jae
cmpsl
and
cmpsl
jo
dec
push
cmpsb
cwtl
movsb
bound
jg
les
mov
lret
sub
inc
xor
push
mov
lcall
dec
outsb
and
lds
aaa
pop
push
hlt
inc
pushf
test
dec
loop
arpl
pop
enter
add
popf
pop
sahf
cmpsl
cltd
sahf
jle
xchg
lds
sbb
cli
sar
xchg
jb
mov
or
jl
mov
jl
dec
sub
dec
test
push
jb
mov
rcrb
into
cmp
ds
sahf
outsl
test
repz
popf
dec
flds
mov
andb
add
in
push
faddl
pop
push
out
outsl
sub
fcom
push
hlt
xchg
in
stos
ja
pop
js
rcrb
fstps
or
lahf
mov
jne
pusha
dec
addl
xchg
inc
sahf
mov
cmp
jb
jge
or
pop
rcll
lahf
push
add
cmp
fs
fwait
enter
sbb
stos
xchg
cmpsb
dec
mov
cmpsl
outsb
mov
inc
cld
jb
out
orl
jp
mov
mov
mov
mov
negl
and
mov
add
fcomps
cmpsb
sub
inc
testl
adc
push
je
inc
adc
rolb
and
pop
adc
xor
pop
sub
and
push
sarb
adc
shlb
cmp
mov
sti
and
jae
sub
mov
and
jmp
fwait
pop
jp
mov
push
xor
into
lahf
mov
add
outsl
cmp
inc
aas
or
pop
mov
dec
mov
fs
lods
stc
gs
fcoms
inc
lods
xchg
and
bound
hlt
mov
dec
jo
mov
lea
mov
mov
js
fstpl
or
dec
test
lods
mov
or
cmp
lcall
in
lea
clc
xor
add
xchg
jns
out
jge
mov
dec
lock
xchg
pop
jecxz
inc
dec
cmp
int
xchg
add
mov
mov
pushf
push
fbld
movsl
fcmovnbe
add
mov
push
in
gs
mov
ret
call
mov
cltd
xor
ss
push
push
mov
jnp
inc
mov
add
stc
loopne
ja
int
gs
push
rolb
loope
cli
mov
cmp
outsl
jo
addr16
jle
mov
cltd
xlat
dec
cmp
mov
adc
cmp
movsb
out
jne
jmp
shll
aam
push
xchg
sbb
std
dec
jp
mov
mov
repz
jle
xor
les
gs
inc
adc
sub
lcall
and
mov
enter
sub
mov
mov
or
or
aaa
insb
cltd
mov
xor
rorl
jne
mov
pop
sub
push
fwait
imul
mov
or
push
ljmp
ljmp
inc
mov
or
loopne
nop
push
and
push
data16
icebp
into
add
out
shr
jl
sbb
out
or
mov
dec
mov
das
lret
fdivs
aam
adc
pop
addr16
push
xchg
jmp
push
jp
lods
push
stos
xor
mov
xor
inc
mov
lret
adc
mov
loopne
inc
mov
jmp
cwtl
jp
neg
and
outsb
adc
dec
pop
jo
call
test
mov
repz
aas
paddd
shrl
loope
and
test
lods
repnz
movsl
aam
aad
pop
loope
lea
fisubs
push
cmp
cmpsb
mov
inc
mov
xor
pushf
andb
lds
int3
dec
lock
fstps
inc
sub
xlat
pop
out
mov
lret
sbb
adc
push
dec
inc
idivl
ja
or
or
dec
iret
add
pop
cmpsb
mov
popf
jmp
enter
push
ss
xchg
shll
mov
jo
loop
je
inc
fisttpll
sub
hlt
push
xchg
arpl
mov
cmp
insl
adc
pop
addb
push
sti
jle
and
add
adc
inc
stos
je,pn
movb
cwtl
mov
mov
inc
add
cli
mov
add
cwtl
std
xor
out
lock
sbb
stos
pop
dec
mov
or
cmp
stos
pop
cmp
notb
jnp
cmpb
test
test
sarl
mov
sbb
mulb
mov
push
incl
fstpt
jge
sub
adc
inc
into
xchg
lock
rcrl
and
fcoml
repnz
pop
pop
push
push
jecxz
fsqrt
xorl
jne
and
std
lahf
pop
dec
repnz
xchg
sbb
shr
mov
jns
add
xor
loopne
data16
aas
cs
pop
dec
xchg
push
fwait
dec
pop
in
and
inc
das
dec
repz
sahf
mov
testb
in
inc
pop
xchg
or
adc
popl
dec
sbb
jp
sub
shrb
aas
dec
xor
and
lcall
mov
sbb
mov
xor
stos
lret
jns
in
int
flds
sbb
mov
lret
stc
cmp
arpl
and
fstl
cmp
mov
push
comiss
adc
es
sbb
mov
add
in
mov
mov
imulb
jl
lcall
mov
lahf
movsl
fcoml
ja
lahf
dec
or
std
ljmp
mov
or
or
sbb
bound
test
add
test
sub
inc
xchg
popf
pushf
out
gs
or
or
jecxz
lds
pop
cmpsb
out
repz
xchg
arpl
xor
lods
jge
fisttps
addr16
cli
mov
icebp
fcomps
int3
push
push
push
das
cltd
out
arpl
scas
iret
fs
pop
out
lock
sub
lock
sub
imul
aad
out
test
mov
ret
and
xchg
push
ljmp
and
lret
add
sbb
pop
cmp
mov
push
inc
inc
add
insl
shrb
pop
cwtl
push
jecxz
and
ja
pop
push
adc
mov
dec
cmp
jp
fwait
outsb
pop
mov
dec
icebp
add
xor
inc
jge
push
adc
insl
std
and
fwait
popf
and
pushf
mov
out
push
push
movsl
divb
repz
das
mov
sub
lahf
pop
or
sub
or
sbb
cltd
xchg
aaa
mov
icebp
cmp
cs
pop
jle
cmp
or
and
push
cmp
add
jecxz
mov
pop
loop
mov
ds
mov
pop
adc
test
test
cmp
xchg
ret
loop
stos
xchg
imul
xor
out
lcall
mov
stc
sbb
adc
addr16
stos
push
popf
push
lret
inc
sbb
or
pop
cld
in
inc
xchg
cmp
mov
movsl
cld
sub
cld
je
jg
scas
push
insb
das
aam
xchg
xor
outsl
in
sub
mov
insb
add
sub
jae
lea
sub
adc
pushf
imul
jl
cmc
mov
sub
mov
pop
jmp
jle
sub
mov
mov
add
jecxz
xchg
cltd
hlt
mov
pop
mov
mov
ret
pop
jnp
shlb
xchg
sub
jg
inc
mov
add
mov
xchg
add
sub
jb
out
xorb
sub
mov
jg
enter
ljmp
inc
pop
lcall
add
nop
ja
in
pop
inc
add
cmpsb
sub
adcl
mov
xchg
iret
jae
js
or
in
mov
fdiv
fs
fistpll
sbb
pop
loopne
xchg
cmp
adc
cmp
mov
sub
mov
pop
jae
in
mov
inc
adc
notl
fdivl
adc
pop
repnz
push
xchg
add
mov
sbb
leave
mov
pop
shll
xchg
sbb
mov
sub
hlt
pop
cwtl
daa
or
and
test
icebp
adc
movsl
movsl
pop
lcall
jp
movl
xchg
cmp
andb
imulb
ret
jecxz
cld
sti
les
mov
in
insb
cmovae
lea
cmp
mov
out
aas
icebp
inc
cs
xor
test
lock
out
mov
pop
mov
adc
fistpll
cwtl
insb
inc
push
jnp
mov
cmp
push
add
xchg
and
pop
xchg
iret
fmuls
subl
dec
outsb
adc
loopne
out
pop
icebp
lods
sub
stos
cli
cmp
fistpl
mov
add
je
jmp
mov
out
dec
inc
dec
mov
cmp
stos
xchg
aad
mov
cmpsb
lock
sbb
pop
lock
out
push
xor
lods
rcl
push
bsf
sub
push
ret
rcrb
enter
aas
cmc
out
js
into
sbb
int
sub
or
mov
loope
and
ljmp
xchg
sbb
loop
push
push
inc
push
pop
lret
adc
jns
inc
mov
pop
inc
popf
or
mov
cmp
insb
pop
lahf
mov
sbb
data16
in
push
test
xlat
in
mov
push
popa
dec
lods
std
and
int
fdivs
icebp
cmp
hlt
insl
pusha
les
out
cmp
or
push
sahf
imul
mov
sarl
cltd
or
loope
jbe
push
pop
jne
je
repnz
es
push
std
sti
iret
loop
xchg
aas
xchg
sub
xorb
push
sub
popf
mov
push
push
movsb
fcomip
dec
mov
add
insb
lret
jns
out
jb
pop
xor
cmp
pop
pop
fwait
incl
mov
sbb
data16
notb
xor
gs
ljmp
hlt
out
push
into
lcall
inc
xor
sub
and
ret
mov
sub
push
jmp
je
xor
and
push
repnz
lret
jmp
hlt
jo
xor
dec
dec
je
sub
fistps
mov
mov
fdivl
or
iret
fistpl
pop
testb
cmp
rolb
outsb
clc
inc
fcomps
or
jmp
push
lea
push
push
sub
cmpsl
orb
test
push
inc
dec
mov
cwtl
jbe
loopne
shll
pop
call
out
sahf
jmp
pop
pop
adc
mov
mov
subb
hlt
ret
cltd
inc
hlt
inc
inc
sahf
xchg
mov
subb
add
pushf
lahf
mov
push
or
mov
cs
in
mov
pop
cmc
das
insl
and
out
mov
push
imul
mov
in
adc
decl
mov
add
in
loope
ja
xor
and
inc
pop
xor
xlat
mov
mov
mov
aam
or
repz
pop
loopne
sbb
test
xor
je
sbb
les
inc
inc
mov
dec
mov
sbbl
sarb
mulb
jns
mov
pop
push
pop
testl
mov
adc
or
add
fsubl
lcall
sub
fdivr
mov
cmp
mov
into
dec
aad
inc
sbbl
enter
xor
rorb
xchg
shl
jecxz
loop
arpl
or
jecxz
ret
stc
popf
xor
ds
outsb
mov
xchg
mov
mov
dec
inc
mov
push
in
outsl
mov
pop
jg
rorl
adc
add
sbb
adc
stc
popf
cmc
sbb
pusha
cs
shll
lcall
sbb
jmp
cld
sbb
mov
mov
movsl
lret
fcom
stos
pop
movsb
in
pop
inc
inc
xchg
cmp
stos
jbe
outsb
and
js
pop
cmp
test
cmp
or
jp
fsubl
sub
loope
ljmp
sub
pop
fcmovbe
adc
loop
mov
sub
push
out
jp
mov
fcmovbe
dec
sub
jp
rclb
pop
sub
fdivrs
ds
pop
out
inc
pop
aaa
mov
ffreep
lock
outsl
sub
cmp
cmp
fimull
call
notl
ficomps
push
cmc
sti
fdivs
xchg
pop
ret
test
inc
sbb
imul
sub
sub
int
ret
pop
mov
icebp
xor
test
jb
cmc
jl
adc
push
out
cmp
sbb
stos
imull
pop
cmp
dec
les
je
lods
xor
out
cltd
ja
mov
out
mov
mov
adc
dec
adc
call
cmp
stc
scas
pop
pop
sbb
leave
cwtl
jbe
cwtl
out
cld
push
mov
inc
push
push
add
hlt
push
inc
stos
jne
push
mov
out
sbb
je
pop
xchg
pusha
mov
add
mov
jae
bound
jno
outsl
mov
inc
ret
adc
das
jg
lea
lods
inc
shlb
lret
xchg
add
xor
sub
je
rcll
inc
mov
jp
sub
jmp
inc
mov
jae
adc
mov
daa
add
cli
das
pushf
add
xor
jns
int3
mov
xchg
adc
idivb
loope
or
fldl
add
adc
jle
pop
rolb
xchg
or
sub
popa
add
nop
leave
mov
or
test
and
jle
sub
popf
pcmpgtb
into
aad
mov
je
mov
sbb
or
mov
stos
inc
das
nop
ljmp
sbb
add
pop
js
movsb
pextrw
or
cli
fisttps
xlat
xor
push
mov
out
stc
pop
insb
xchg
cmp
pop
pop
sbbb
aas
mov
stos
and
leave
and
or
mov
sub
push
lea
call
adc
mov
loopne
lods
push
mov
movsl
or
pushf
dec
call
stos
stos
icebp
mov
push
mov
adc
and
adc
and
xor
xchg
cmpsl
outsb
fs
jl
xor
push
mov
sbb
xchg
cld
lret
repnz
stos
lods
fbld
adc
push
mov
idivl
dec
loopne
mov
aaa
cltd
push
sub
xor
push
je
ljmp
mov
rorl
cltd
mov
pop
gs
mov
add
cmp
cwtl
and
xor
xor
cld
repnz
pushf
cmp
adc
cli
pushf
in
sub
out
push
cmpsl
out
cmp
and
adc
addr16
dec
rorl
fisubrs
rcrl
test
shr
pop
add
fisubl
xor
movsl
and
pushf
xchg
jnp
xchg
xor
fldl
sub
xor
in
ret
adc
cli
push
lret
imul
data16
inc
sub
mov
cmpsl
xchg
or
sub
outsb
in
and
and
and
ja
rcrb
pop
iret
mov
xchg
mov
mov
js
insb
test
pop
enter
stos
or
ds
daa
movsl
mov
sbb
popa
jae
out
fwait
adc
fdivr
out
out
cmp
jle
fnstcw
ret
cmpl
stc
jge
pop
imul
mov
pop
mov
and
push
rcr
push
rcr
lods
fnstenv
adc
mov
or
mov
mov
test
pop
shl
mov
popl
cmpl
inc
movsb
and
xor
xchg
out
pop
sbb
and
cmp
les
lock
filds
inc
push
ds
fdiv
pop
or
xchg
aaa
mov
shrb
pop
jg
push
popa
cmp
cwtl
jne
in
test
test
dec
adc
pop
fcoms
push
dec
insl
sbb
int3
add
add
nop
sbb
inc
data16
call
inc
leave
push
int3
mov
sbbb
mov
inc
call
pop
xchg
mov
insl
add
sbb
add
outsl
int3
jmp
xchg
test
jp
mov
cmp
cltd
sub
cmp
outsb
cld
mov
ljmp
out
cmp
and
jg
jle
imul
sbb
mov
int3
sbb
dec
add
not
mov
sub
or
pop
jns
jg
mov
movsl
lret
mov
pushf
mov
sub
push
pushf
cli
sarl
test
lcall
out
fstpl
or
or
xchg
inc
icebp
sub
xor
add
mov
sub
and
pop
pushf
sbb
gs
xor
mov
sti
dec
inc
xchg
mov
int
jb
lods
push
aaa
jg
cwtl
lahf
popf
sub
add
cmc
dec
cld
dec
repz
sbb
mov
clc
jae
xlat
jbe
wrmsr
cmove
imul
inc
loopne
sbb
psubsb
fucomi
pop
cmp
mov
popa
das
xor
xor
mov
cli
leave
pop
pop
pop
lods
jno
xor
inc
xchg
adc
adc
or
or
aam
inc
fcompl
dec
cmpsl
push
out
or
scas
and
in
lods
jb
xchg
mov
pop
sub
outsb
ret
jno
xchg
fmull
daa
mov
addb
pop
mov
mov
inc
mov
dec
adcl
in
out
sbb
mov
and
mov
ljmp
adc
subl
fwait
in
push
orl
pop
pop
pop
push
fcompl
rolb
or
out
pop
mov
or
inc
neg
loop
or
imul
out
and
cs
add
push
pushl
icebp
jnp
mov
xadd
test
rcl
nop
pop
mov
icebp
gs
popa
jae
lahf
xchg
test
xchg
pop
into
out
and
rorb
adc
push
xor
sub
dec
in
insl
stc
jb
mov
lret
jmp
adc
and
stc
pusha
adc
es
std
jne
cmpsl
lret
xchg
or
cmp
adc
mov
or
push
popf
shlw
add
adc
sbb
xchg
aaa
adc
aad
push
loop
sbb
ds
sub
sub
loope
dec
ret
mov
in
and
and
push
inc
jo
divl
adcl
jo
push
xor
mov
jnp
in
adc
les
dec
call
ja
mov
add
xorl
insl
out
out
mov
fadd
popa
and
jnp
iret
add
icebp
scas
test
stos
add
push
outsb
fcmovnbe
cmp
ret
inc
cs
push
sbb
idiv
xchg
movsb
xor
lret
ret
scas
jne
jb
lea
xor
roll
lret
sub
push
lcall
test
cmp
addr16
xchg
imul
inc
int3
movl
repnz
jns
inc
iret
insb
sub
xchg
sbb
fmuls
jb
adc
dec
pop
cmp
xchg
sbb
mulb
mov
fisubrs
ds
mov
test
pop
and
mov
sub
fimuls
adc
fs
adc
mov
inc
add
push
sub
xchg
test
cli
adc
cld
cmpsb
mov
lret
mov
sbb
sahf
sbb
sbb
fldenv
popa
push
xchg
pop
lret
pushf
pop
mov
and
cmpsl
push
sub
mov
sub
subl
adc
add
shlb
adc
xchg
xchg
adc
fcomps
jno
xorb
pop
leave
or
jmp
shrl
aas
aaa
in
call
push
js
test
adc
xor
adc
cwtl
mov
out
cmpb
idivb
push
mov
std
insl
add
mov
mov
or
int
mov
mov
je
jns
shll
insb
ret
mov
cmp
jecxz
test
mov
pop
sub
add
imul
jle
adc
cs
adc
or
xchg
push
adc
or
cltd
fsubrl
cld
lret
add
fs
aas
add
and
test
scas
icebp
sub
sbb
rcr
mov
ret
mov
push
mov
fiaddl
mov
lock
jle
test
cwtl
adc
pushf
scas
out
out
dec
inc
cmp
hlt
movsl
adc
or
in
fwait
mov
into
jmp
add
cmp
adc
mov
pop
add
or
pop
jno
jmp
int3
xchg
inc
add
jno
cmpsb
cmpl
rclb
hlt
fildl
add
clc
pop
rcrl
or
pop
enter
jnp
fs
or
enter
xchg
test
mov
jo
mov
ficoms
and
pushf
int3
insl
ljmp
xchg
dec
xchg
push
insb
pusha
adc
addr16
push
in
sbb
and
icebp
sbb
pop
bound
aas
je
xor
xlat
and
or
xchg
stos
dec
repz
push
sar
popa
push
and
loop
nop
jne
cmovns
sbb
cmc
jecxz
ljmp
jns
adc
push
xor
sub
insl
fmul
push
mov
jbe
out
cs
adc
inc
mov
jg
cmpsl
xchg
cs
imull
push
fmulp
pushf
or
pop
arpl
add
mov
jle
or
out
imul
sbb
push
xchg
xor
xor
xchg
repnz
test
aas
pop
imul
mov
int3
orb
decb
dec
push
cmp
call
xor
pushf
xchg
pop
sbb
mov
sbb
xchg
dec
mov
ds
inc
insb
dec
subl
cwtl
xchg
xor
movsb
lahf
sub
out
ds
lods
adc
outsl
imul
pop
fistps
stc
add
dec
and
xchg
lods
iret
test
cmpsl
xchg
or
add
push
aaa
mov
dec
stos
mov
lods
sub
cs
loopne
rcrb
je
in
and
mov
or
or
sub
xchg
lods
lret
cmpsb
in
jbe
addr16
fisttps
sti
sub
out
lahf
lcall
dec
inc
test
push
adc
int
or
sbb
ja
iret
jnp
and
rolb
test
mov
or
pushf
xor
shrl
enter
xchg
arpl
add
xchg
fdivr
dec
int
mov
xor
popl
push
and
mov
and
sahf
xchg
lret
mov
adc
and
arpl
hlt
dec
or
mov
mov
xchg
stos
push
sub
lret
adc
out
adc
repnz
sbb
and
leave
push
mov
jb
nop
mov
lock
xchg
mov
or
sahf
adc
jmp
movsb
inc
pushl
xor
insb
xor
sbb
and
scas
sahf
pop
cmpsl
xor
pop
mov
push
fs
mov
and
je
lahf
or
cmp
shl
add
mov
imul
cmp
mov
test
jbe
cwtl
ljmp
jp
fs
cli
fldt
lret
push
dec
push
lods
add
xchg
or
mov
std
jecxz
jmp
push
jge
nop
subb
movsb
xchg
dec
sbb
sahf
adc
push
dec
push
sbb
xchg
leave
outsl
int
push
sub
mov
hlt
inc
xchg
cltd
insb
imul
jp
subl
mov
mov
mov
rcrl
pop
push
cmpsw
sbb
aam
sub
and
and
sub
ret
and
lods
push
xor
mov
loop
adc
fistpll
mov
add
les
mov
mov
pop
bound
sub
arpl
adc
mov
inc
dec
mov
icebp
dec
repnz
jp
mov
push
in
xlat
pop
sub
pushf
aaa
sbb
incb
push
outsl
lahf
aas
add
xchg
out
movsl
dec
push
ret
insb
clc
pop
mov
cwtl
test
jmp
cmp
add
jbe
xor
or
inc
or
nop
mov
loope
lcall
lcall
test
push
daa
outsl
or
or
lea
mov
movsl
sbb
mov
add
in
insl
and
push
cs
lcall
mov
lret
xchg
add
scas
test
sbb
addr16
testb
jge
sbb
lret
outsb
add
out
sbb
or
or
add
mov
pop
out
lea
cmp
cmp
cmc
push
lods
adc
or
aaa
dec
or
push
scas
inc
cmpsb
leave
pushf
arpl
ja
inc
test
cmp
and
pop
inc
push
in
sbb
loope
clc
hlt
cmc
lcall
repz
pushf
std
dec
mov
inc
sub
add
push
xchg
enter
mov
enter
out
or
out
aas
pop
mov
inc
hlt
shl
insl
fwait
xchg
sbb
add
mov
cwtl
sbbb
xchg
push
pop
sarb
out
inc
dec
xor
lods
lahf
jae
dec
enter
loope
adc
push
pop
hlt
scas
cmpb
mov
ret
pop
std
outsl
into
lea
xchg
sbb
cmp
icebp
loope
insl
rolb
pop
xor
or
es
aas
cmp
clc
mov
cmovge
cld
push
pop
test
sub
adc
jmp
mov
pop
xor
inc
mov
icebp
ds
mov
in
push
int3
out
sbbl
mov
stos
call
cwtl
icebp
stos
dec
push
fidivrl
adc
repnz
test
push
cmp
repnz
pop
movsb
scas
aad
ljmp
mov
hlt
adc
repz
jmp
push
adc
outsl
in
les
pop
jmp
aaa
push
inc
mov
adc
fsubs
lahf
jl
cmp
repnz
inc
mov
cld
jo
xchg
pop
jmp
sarb
or
insl
or
and
in
mov
push
inc
shr
mov
out
cmc
inc
movsb
pop
das
into
or
clc
outsb
mov
mov
ja
jnp
rolb
test
stc
pushf
lds
sbb
jmp
xor
push
jp
iret
mov
sbb
pop
in
mov
jmp
xor
movsl
sbb
fdivr
mov
jl
mov
das
sahf
insb
ss
popf
mov
cmpsl
arpl
fldt
cmp
lods
cltd
push
mov
or
xor
insb
and
mov
and
popa
lods
imul
adc
mov
jae
test
jecxz
mov
aaa
std
mov
mov
xchg
bound
arpl
xchg
and
inc
in
loope
dec
enter
mov
xchg
popf
push
cmp
jb
push
xor
cwtl
out
imul
jno
scas
fdivl
test
jnp
fldcw
ja
in
test
jmp
cmp
pop
pop
pop
shrl
and
mov
or
jp
sub
mov
and
das
adc
or
scas
mov
subl
subb
js
mov
xchg
jecxz
out
pop
out
bound
ljmp
fwait
outsb
test
ret
aas
aas
jl
outsl
negl
jbe
leave
xor
out
mov
std
and
lea
push
rorb
mov
pusha
or
or
jle
pop
pop
test
mov
int3
pop
addb
inc
les
or
jmp
dec
and
inc
fsubrl
mov
xor
dec
leave
lds
in
pushf
push
mov
jge
mov
pop
test
jae
or
subl
xlat
inc
xorl
cmp
mov
jns
dec
hlt
xor
pop
add
jle
popa
mov
mov
nop
sbb
xchg
enter
or
push
add
inc
adc
cld
dec
inc
cmp
mov
sbb
out
in
push
jecxz
je
scas
adc
add
mov
xchg
sbb
incl
fwait
xchg
popa
lds
jl
loope
add
xor
mov
xchg
divl
push
mov
lret
sub
dec
xchg
fistpl
fimull
cmpsl
call
fcomps
mov
dec
shl
push
cmpsl
inc
adc
jecxz
and
imul
inc
jno
inc
mov
and
cmc
add
inc
scas
mov
xlat
test
inc
jl
adc
sub
sub
mov
out
lea
sub
xor
jne
shlb
sbb
ds
mov
imul
mov
jle
push
xchg
pop
js
mov
mov
inc
ret
dec
or
xor
xchg
jg
ds
stos
pop
int
add
cmc
data16
mov
and
push
popf
ljmp
lahf
dec
sar
mov
push
xchg
insl
je
ficomps
mov
lods
sbb
aas
push
fcomps
out
mov
xor
sbbb
rcr
lock
pop
leave
mov
out
stos
and
gs
inc
push
mov
jecxz
mov
push
jnp
pop
pusha
call
pop
cmp
cwtl
mov
jne
push
cmp
jmp
mov
popa
sbbb
aam
outsl
and
ljmp
adcb
jne
xchg
xchg
ljmp
and
pusha
mov
aas
enter
dec
lods
sar
mov
rcr
or
in
cmpsl
push
call
xchg
out
push
sub
ljmp
jbe
add
ret
js
xchg
sbb
push
stos
dec
mov
xlat
shlb
mov
adc
fadds
cmpsb
cmp
jle,pt
xchg
test
mov
lret
dec
dec
cmp
add
dec
js
hlt
sbb
inc
xchg
mov
rcrb
gs
cmpsb
insl
ret
fistpll
push
and
or
ljmp
shll
fidivrl
repz
test
test
ret
and
lods
sub
add
int3
jp
push
inc
repnz
loopne
pop
xor
fwait
outsl
icebp
stos
jge
or
adc
pop
add
adcl
pop
mov
out
and
push
mov
das
mov
adc
fistps
push
xor
shll
lret
adc
add
cmp
sub
pop
add
repnz
popf
ja
addr16
sub
jmp
dec
jmp
sbb
jg
pop
and
in
les
fstpt
rcr
xchg
jnp
mov
push
aam
in
popf
and
rclb
shlb
jb
in
pop
ja
xlat
out
std
cmpsb
fidivrs
or
lret
jae
sbb
jno
xchg
pop
arpl
je
push
ffree
ds
std
je
divb
jbe
mov
cli
pop
mov
xor
cli
fstpl
inc
push
stos
push
ret
adc
adc
aad
lahf
into
mov
sub
jbe
cwtl
jmp
movsb
xchg
fcoml
pop
mov
aas
add
add
jb
ds
or
mov
push
push
je
fwait
pop
popa
bound
mov
lea
fcmovne
adc
mov
xchg
inc
clc
arpl
dec
inc
out
pushf
add
push
mov
jg
lret
mov
jmp
dec
fwait
lods
and
xor
test
pusha
popa
paddb
add
sbb
mov
adc
dec
popf
es
shll
sub
xchg
mov
sbb
add
mov
xchg
inc
les
or
jno
stc
inc
insl
pusha
mov
push
jle
stos
rcrb
dec
aam
cwtl
xor
cmp
aam
jl
stos
or
xor
aas
js
sbb
or
push
outsb
add
fwait
mov
dec
movsb
popa
dec
jnp
or
jno
insb
cmc
jb
mov
and
sub
push
sahf
mov
dec
mov
and
out
jns
or
pop
and
das
loop
ja
pop
xchg
pop
mov
je,pn
shrl
outsb
dec
mov
std
cmp
clc
test
in
inc
mov
and
push
in
rclb
aam
dec
push
jg
inc
mov
jb
ret
mov
shrl
pop
cld
mov
xchg
push
scas
aam
test
pop
mov
push
pop
add
push
adc
jbe
hlt
in
out
test
or
js
inc
jl
mov
jno
sub
in
in
xor
imul
rclb
jl
inc
out
mov
xlat
push
enter
stos
inc
testl
cwtl
aad
ja
rorl
movsl
or
and
mov
mulb
or
push
mov
cmp
movsl
sub
push
imul
fucomi
add
ljmp
dec
mov
repnz
jg
fistps
jns
stos
ja
inc
popf
sub
xchg
pop
jb
push
popf
int3
shl
or
mov
lcall
iret
mov
shrb
xchg
loopne
or
jmp
subb
or
adc
sub
adc
mov
sub
add
loop
mov
bound
pop
faddl
std
push
ss
ss
pop
mov
out
lret
cmp
xor
cmp
clc
or
cld
and
jb
jl
or
aas
dec
push
mov
es
mov
push
pop
pop
inc
das
fcmovnb
aam
pop
cwtl
xchg
fimuls
fiaddl
mov
adc
or
inc
stos
nop
decl
js
dec
push
addl
sub
push
push
xor
inc
sbb
jb
shlb
jle
mov
ja
lods
xchg
mov
push
fcomps
xor
bts
int
push
cli
push
dec
push
pusha
xor
in
in
lret
movsl
filds
addr16
test
push
jo
xchg
ret
push
test
ljmp
xor
sbb
or
mov
cmp
cmp
push
xlat
sub
scas
test
andl
ret
push
add
aaa
hlt
repz
add
dec
lock
bound
std
cmp
orb
aam
nop
cmp
mov
xchg
pop
mov
nop
in
xor
lock
mov
add
xchg
mov
stc
push
mov
out
or
mov
push
xor
shlb
add
in
jae
mov
pop
push
pop
int
cld
or
cltd
cltd
dec
jae
and
mov
xor
rolb
into
cltd
sbb
movsb
jo
add
jp
int
xchg
int
push
mov
pop
fstl
icebp
cmp
add
xchg
sub
notl
pop
or
and
mov
pop
fs
pusha
sbb
negb
push
xchg
mov
cmpl
push
adc
notl
mov
xorl
sbb
jnp
in
dec
and
inc
cmp
lock
inc
jo
mov
dec
jb
repnz
fs
sub
push
mov
sti
imul
pop
push
ficoms
loopne
shll
push
mov
shrl
ljmp
cmp
jbe
mov
mov
icebp
and
add
sbb
adc
rclb
test
xchg
lods
adcl
mov
imul
imul
mov
mov
dec
repnz
dec
popf
ret
pop
fnsave
inc
cmpsl
jb
ja
push
fsubrl
mov
loope
mov
out
xor
push
fbstp
lret
je
jmp
sbb
dec
ret
fstpt
out
push
add
and
mov
add
mov
jno
mov
icebp
sub
lods
das
loope
inc
rcrl
clc
sub
add
push
fdivs
jb
push
rorl
xor
or
lahf
enter
lret
push
imul
inc
xchg
jae
sbb
nopl
out
cmp
xlat
cmp
icebp
out
insb
icebp
pop
das
ret
xchg
push
lock
shrl
ret
pop
push
xchg
nop
sbb
or
enter
or
or
jmp
add
das
mov
cmc
outsb
or
pop
popa
popf
loop
test
pop
scas
mov
mov
sarl
mov
and
fimull
in
xorl
repnz
adc
cmpsl
aam
out
fsincos
popa
repnz
xor
lcall
and
pop
xchg
jg
dec
loopne
subb
push
jmp
mov
popa
cwtl
enter
xor
inc
push
ja
sub
ja
dec
test
int
xchg
cmpsl
jecxz
fldl
xor
adc
and
insl
hlt
sbb
cmp
addl
push
adc
or
test
loopne
shlb
cmp
mov
or
adc
push
sbb
mov
mov
mov
js
ds
les
push
mov
jae
mov
xchg
or
xchg
and
xor
ss
lds
inc
std
nop
mov
or
pop
fstl
dec
mov
test
mov
ja
jl
pushf
roll
fadds
popa
adc
es
sahf
fs
push
mov
mov
cmp
and
push
jmp
mov
jbe
ja
or
lods
daa
sub
test
jno
sbb
mov
fiaddl
add
pop
cmp
jo
sub
mov
and
stc
push
mov
sbb
sbb
jmp
sbb
lea
cmp
push
scas
leave
or
mov
cmpsl
insl
inc
repnz
push
movsl
dec
mov
outsl
lahf
mov
jmp
scas
add
out
sub
xchg
fsubs
mov
loopne
imul
jae
dec
adc
sahf
decb
jns
fs
nop
les
and
shrb
pop
and
leave
push
mov
int
stc
mov
jecxz
lods
cmp
mov
es
dec
or
pushf
pop
lods
sti
inc
inc
dec
dec
in
ljmp
shll
inc
loope
imul
cwtl
xchg
call
rorb
sbb
jl
hlt
mov
push
aad
rcr
std
cmc
add
cmp
push
mov
aam
lods
or
nop
or
add
mov
inc
movsb
mov
push
add
aam
push
mov
rcrb
pushf
push
loope
adc
jecxz
loope
or
push
jns
lea
push
std
cmp
mov
scas
call
jge
jmp
jne
popa
sti
jbe
sbbb
lret
push
lret
mov
rcrb
mov
rcl
jne
ret
sahf
mov
xor
loope
popl
sub
movsl
cmp
and
repz
push
mov
imul
cli
xor
insb
stos
sub
es
out
incl
insl
sub
dec
mov
jae
aam
and
icebp
inc
movb
dec
inc
dec
inc
sub
or
jecxz
notb
arpl
or
insl
jp
xlat
rcrl
and
pop
mov
lock
and
inc
call
xor
sub
out
lret
aam
cwtl
cmp
jb
sbbl
and
cli
jne
lea
or
aas
jle
and
insl
xchg
sbb
hlt
mov
ret
pop
jecxz
sbb
adc
xor
mov
repnz
xor
in
adc
cmp
clc
xor
cmp
adc
and
jbe
enter
pop
mov
je
into
push
push
xchg
lods
xchg
or
dec
ss
outsb
or
jbe
push
lahf
fs
pop
cs
xchg
mov
dec
or
jl
test
mov
inc
add
mov
fldenv
jp
shl
es
cltd
pushl
loopne
fnstenv
xor
fldl
cmp
and
pop
stos
call
mov
lcall
mov
mov
xor
ret
mov
sbb
cmpsl
popf
pop
dec
cli
mov
sbb
or
xchg
sbb
scas
mov
mov
mull
mov
aam
or
add
dec
cmpsl
xor
lcall
lret
push
mov
inc
call
out
push
addr16
push
insl
pop
mov
xor
sub
jmp
cmp
mov
arpl
sarb
stos
mov
add
dec
mov
lods
ds
movsb
loope
arpl
insb
sbb
jg
push
jbe
leave
push
adc
test
adc
mov
pushf
and
sbb
aam
adc
out
sbb
xchg
test
ffree
jae,pn
je
popf
adc
rcrl
popl
lds
push
push
push
rolb
mov
pop
mov
lcall
negl
dec
inc
xor
push
cmpsl
int
pop
shlb
repz
mov
ss
inc
xor
loop
test
sub
in
dec
cmpsb
or
lds
add
inc
int
out
jo
jmp
fmull
pushf
out
pop
cmp
or
int
xchg
lds
jmp
cwtl
jecxz
xchg
aad
jno
data16
lcall
movsb
aas
push
and
push
fdivr
inc
xor
pop
cmc
mov
push
xor
pop
pop
xchg
fidivrl
sbb
mov
jmp
insl
jae
mov
cmp
push
outsb
mov
dec
and
lahf
sar
xor
pop
sub
adc
aas
nop
pop
fs
clc
out
hlt
mov
addb
cmpsb
pop
mov
inc
sbb
cmp
inc
ljmp
sub
mov
fsubs
xchg
repz
pop
jl
push
enter
shr
scas
fidivrs
push
adc
sub
pop
inc
xor
stos
jle
aad
cli
aam
inc
test
fisttps
scas
dec
mov
lret
jg
jg
xchg
jb
lods
mov
and
pop
push
pop
adc
sub
pop
outsl
xlat
pop
out
lds
pusha
pop
mov
push
and
int
xor
les
jecxz
rorb
orl
pusha
into
rcrb
enter
scas
das
clc
xor
lret
push
ficompl
jle
xor
sub
mov
jns
loope
loop
es
enter
and
sub
mov
les
ror
sub
cmc
jb
sub
out
cmp
jbe
iret
pop
insb
mov
inc
cmp
test
ds
movsb
cmc
cmp
push
fstp
mov
cmpb
sub
fs
aaa
outsl
mov
jge
push
dec
popf
sbb
in
cltd
icebp
adc
pop
mov
test
dec
or
sub
mov
push
dec
outsb
dec
push
cli
pop
jge
xchg
enter
push
lock
cmp
mov
cmc
inc
inc
rcrb
lahf
adc
lock
ss
scas
lods
dec
jp
outsb
imul
sbb
dec
xchg
in
shll
mov
fwait
in
sahf
inc
ds
jle
add
jp
dec
push
inc
mov
cmpsl
xor
das
or
sub
fwait
adc
testl
loopne
lock
mov
fadd
das
mov
push
sbb
dec
ret
cmp
xchg
jecxz
push
or
scas
jo
push
mov
adc
jb
popa
mov
lcall
lock
sbb
mov
xchg
jmp
jmp
dec
xchg
leave
xchg
orb
inc
xchg
ljmp
and
mov
into
mov
lret
mov
jl
aaa
mov
pop
test
insl
inc
and
jnp
pusha
jmp
or
sub
andb
push
sub
js
and
sbb
push
lret
adc
jle
test
rcrl
mov
into
sub
rclb
xor
dec
sbbb
dec
pop
repz
pop
pusha
lock
dec
call
mov
fildll
mov
xor
push
rcrb
movsb
adc
or
imul
inc
add
lods
jbe
lahf
test
scas
mov
mov
sbb
pushf
mov
dec
fimuls
jg
js
adcb
sti
push
or
popf
lock
lahf
and
icebp
popa
cs
push
sti
inc
cs
lret
lea
imul
das
je
inc
xchg
adc
cmp
mov
cmp
std
fildl
jge
mov
sti
mov
pop
sbb
inc
inc
mov
iret
add
outsb
xchg
out
lret
rcrb
aaa
xchg
cmp
lahf
sbb
inc
mov
loop
add
leave
fcompl
pushf
mov
xchg
adc
and
cltd
inc
dec
lock
bound
xor
movsl
sbb
push
ret
push
lret
mov
lods
adc
add
jecxz
push
xorb
les
cmp
movsb
loopne
aaa
nop
inc
xlat
adc
dec
or
test
xchg
pop
fidivl
and
sti
sub
andb
adc
push
mov
sbb
mov
lahf
xchg
and
xor
aad
imul
cmp
add
jl
cmp
into
repz
imul
dec
dec
pop
mov
fcomip
test
push
pop
sbb
xor
add
add
sbb
mov
cmp
mov
jnp
adc
push
pop
iret
stos
push
pop
stc
insb
lock
pop
std
mov
add
inc
and
icebp
adc
mov
pushf
pop
sub
inc
jae
pop
or
or
xor
sbb
mov
pushf
popf
cwtl
icebp
scas
movsb
jb
fsubs
mov
movsl
jbe
test
ds
or
fs
push
dec
divb
xchg
mov
mov
xlat
gs
xor
xchg
loopne
aaa
insb
cmc
inc
pop
mov
bound
pop
push
adc
mov
mov
push
dec
xchg
push
negb
pop
pop
icebp
jns
inc
jno
push
fwait
sub
lret
popf
lahf
xchg
jle
ja
pushf
movsb
das
into
dec
sbb
icebp
mov
inc
push
xchg
and
addr16
xchg
xchg
xor
and
js
outsb
in
pusha
or
scas
push
das
fs
test
mov
cmpsl
ljmp
mov
pop
push
fs
fcoms
je
int
push
sti
push
xlat
ljmp
xorl
popf
xchg
aas
or
jne
mov
push
or
jmp
add
add
lods
enter
les
arpl
addr16
ljmp
ds
mov
inc
xchg
xchg
mov
and
inc
ret
int
mov
ds
mov
jp
icebp
sbbl
std
lcall
jp
xchg
dec
xchg
cmp
fdivrl
mov
and
mov
inc
aaa
ret
adc
testb
fldl
dec
filds
stc
je
js
dec
loopne
clc
xor
mov
mov
xchg
imul
ljmp
jge
jns
push
pop
hlt
fisttps
andb
sbb
clc
inc
xor
out
ret
imul
mov
mov
adc
pop
xchg
cmpsb
push
fmulp
xor
mov
dec
push
adc
jo
inc
push
fdivs
xor
mov
pop
dec
outsb
sbb
xchg
test
test
in
lret
fwait
lret
push
pop
jmp
es
mov
mov
mov
sbb
lds
adc
pop
cmp
adc
mov
xor
loope
dec
lcall
loop
clc
sub
sbb
and
movsl
push
jno
cmp
mov
and
cmc
xor
mov
lahf
repnz
je
cli
test
jne
inc
scas
je
pop
xchg
inc
xchg
pop
mov
in
imull
mov
xor
dec
pop
aam
loop
push
xorb
mov
shlb
test
aad
daa
inc
push
shl
dec
cltd
loope
mov
add
add
and
in
stos
es
addl
enterw
mov
outsl
loop
repnz
push
scas
loop
sub
mov
fwait
xchg
jnp
pop
jp
addr16
cld
adc
pushf
jle
loopne
and
jnp
outsb
pop
test
fdivrs
pop
adc
dec
loopne
dec
inc
shr
out
pop
inc
dec
cmp
iret
or
mov
mov
int3
cmpsb
repnz
push
test
popf
mov
addr16
mov
cmp
dec
jmp
push
mov
fbstp
sti
shlb
mov
fcmovnb
mov
repz
pop
sbbl
push
jne
add
ds
mov
lea
inc
push
mov
xchg
dec
xchg
xor
ljmp
stos
mov
into
pop
sti
lret
insl
mov
sbb
mov
pop
and
popf
aaa
mov
sub
add
mov
jno
loop
sbb
or
and
out
lret
imul
shrb
cltd
repnz
mov
loopne
vshufps
sbb
cld
mov
outsb
gs
out
mov
jmp
mov
adc
xchg
cmp
and
xor
adc
mov
dec
mov
mov
daa
mov
xchg
movb
lcall
in
sub
call
mov
lahf
aam
push
mov
jnp
imul
fucomp
mov
outsb
aas
or
mov
scas
dec
inc
sub
bound
ret
lock
ljmp
cmpsl
sub
imul
packuswb
cmpsb
je
ficompl
mov
out
cmp
xor
mov
cmp
pushl
sub
adc
inc
pop
in
pop
stc
adc
pop
ds
add
iret
stc
jp
shll
dec
mov
sbb
fwait
sub
mov
add
sbbb
loopne
int
data16
or
mov
mov
sub
imul
cld
cmp
dec
jg
insl
jmp
sbb
fcompl
in
aaa
cmpsb
sub
xchg
inc
outsl
jbe
test
repnz
xchg
sbb
imul
scas
mov
gs
xor
push
lahf
mov
inc
cmpsl
push
push
mov
test
fsubrp
cmp
xor
xchg
jbe
push
gs
pop
stos
js,pt
sub
pop
xlat
outsb
ljmp
adc
jo
aad
mov
ret
jecxz
adc
in
cwtl
pop
add
xlat
inc
dec
inc
test
loopne
fdivrl
inc
shl
cmp
insl
pushf
not
xor
cmpsl
fucomip
lret
les
and
sub
icebp
pop
add
cmpsl
daa
out
mov
test
push
dec
jp
sbb
inc
cmp
xchg
icebp
push
arpl
jns
add
test
and
and
pop
std
sti
push
jecxz
mov
sti
inc
jmp
outsb
ja
inc
ja
mov
inc
sbb
xchg
xor
xor
sbb
iret
push
lahf
mov
data16
pop
sub
cmp
xchg
mov
mov
cmpsl
les
fxch
xchg
aad
or
test
jb
je
mov
push
out
cmc
cmpsb
clc
sbb
xlat
fwait
dec
movsl
jnp
fiadds
jecxz
cltd
mov
xor
data16
pop
fstl
insl
ljmp
jno
push
and
pop
sbb
pop
mov
pop
and
add
push
fwait
fs
data16
insl
dec
sarb
lret
xlat
imul
pop
push
ss
outsb
icebp
jb
je
pushf
pop
xchg
xorl
mov
mov
push
sub
mov
pop
xor
dec
jnp
dec
sbb
adc
cmpsl
mov
call
outsl
movsl
push
inc
sub
int3
and
addr16
dec
fdivrs
insl
xor
stos
xorb
neg
add
stc
sbb
lock
sbb
mov
cmp
jne
ss
dec
xchg
pop
lods
das
push
dec
fildll
loopne
test
in
mov
pop
or
push
mov
jne
and
cmp
outsl
repz
xchg
ss
decb
mov
int3
rcrb
cmc
pop
iret
hlt
xchg
icebp
fdiv
cwtl
sarl
je
je
xor
aam
xor
jecxz
cmpsb
rcrl
aaa
das
mov
xor
paddsb
and
dec
and
mov
stos
mov
push
pmulhuw
cmp
pop
adc
enter
sub
aas
jl
adc
mov
xsaveopt
jae
arpl
mov
je
dec
mov
jne
adc
clc
mov
jne
lods
fadds
into
mov
subl
por
jle
out
xor
negb
adc
lahf
test
pop
enter
cs
fcoml
add
cmp
fsts
mov
pusha
push
mov
xchg
add
jge
cli
ljmp
ds
mov
or
push
pop
sub
add
mov
xchg
mov
lahf
sbb
inc
sbb
aaa
mov
mov
mov
lahf
jbe
cmp
push
xorb
fstps
xchg
popf
pop
mov
jp
xchg
aaa
int3
or
sub
dec
ret
inc
mov
and
mov
push
pop
mov
or
mov
mov
out
fs
mov
lods
jmp
inc
outsb
mov
mov
shr
dec
mov
pop
mov
xchg
inc
mov
and
fldt
add
push
cmp
cmp
pop
adc
sub
lea
and
std
add
cmc
movsl
push
add
gs
xchg
add
loop
dec
cli
and
jo
sub
aaa
mov
out
mov
shlb
popa
fidivrl
enter
fnstenv
push
test
sub
imul
scas
pushf
or
inc
push
loopne
jne,pt
or
add
hlt
inc
inc
sbb
xchg
or
aam
mov
int
cmpsb
dec
outsb
scas
and
pop
mov
aaa
das
push
cwtl
mov
clc
aam
clc
cmpsl
cmp
cmp
sbb
pop
repnz
pop
addr16
cmp
cmp
push
fwait
dec
mov
stos
jno
into
jno
je
adc
cmpsl
add
leave
scas
iret
pop
icebp
cmpsl
std
cmp
xchg
cmp
jne
daa
xchg
and
push
add
andb
lret
data16
adc
inc
test
xchg
hlt
in
es
jbe
hlt
mov
inc
loop
dec
addr16
push
pop
fsubr
pop
xchg
sub
aam
mov
or
mov
adc
leave
call
push
jecxz
lahf
filds
pop
icebp
mov
fwait
xchg
xor
es
push
daa
cwtl
imul
push
xor
gs
dec
int
and
cmp
aad
xor
or
out
xor
cmpsb
lret
imul
frstpm(287
cwtl
stc
pop
sub
arpl
push
cmpsb
sub
or
lahf
scas
mov
and
imul
rclb
scas
mov
jecxz
mov
in
imul
pop
jb
stos
outsb
mov
sbb
loop
addr16
sub
in
sbbl
jle,pt
cs
mov
aad
ss
cmp
jbe
xchg
sub
cmp
push
jge
gs
mov
loope
ret
cs
pop
push
xchg
push
push
or
or
inc
xchg
inc
aad
sbb
stc
adc
sbb
arpl
mov
addr16
int3
jmp
std
cs
jb
inc
dec
jno
or
lock
ret
mov
jo
std
out
nop
mov
xorb
xchg
fnstsw
xor
call
sub
xchg
inc
push
add
mov
xor
sbb
jnp
mov
add
adc
aas
or
rorb
xor
and
pop
jno
cmp
aas
jg
pop
or
lcall
and
rcll
xchg
pushf
mov
jp
outsl
ret
add
mov
rcrl
and
adc
outsb
pop
in
iret
xchg
xchg
pop
pop
jecxz
or
pusha
mov
and
add
icebp
data16
imul
or
sub
pop
imulb
arpl
hlt
xor
xor
fisubrl
or
add
jmp
ja
aad
sbb
adc
call
add
jb
xor
dec
push
add
inc
push
js
jl
adc
cmpsb
push
pop
iret
jns
dec
imul
sbb
jg
lcall
ficoml
xor
js
jl
xor
fucomp
jno
out
cld
lea
and
leave
insb
push
in
jbe
mov
mov
lods
pop
daa
aad
xor
call
aam
lret
inc
push
dec
js
adc
or
mov
xchg
xlat
pop
push
pop
fwait
jge
clc
orb
hlt
cmc
and
ror
xor
xchg
xor
lcall
xchg
mov
je
jnp
xchg
or
mov
mov
xor
push
and
mov
cmp
cmp
hlt
add
lock
movsb
push
cmp
sahf
adc
mov
dec
mov
sbb
loopne
mov
xchg
inc
pop
and
pop
mov
pushf
aaa
lret
lods
out
stc
cmp
jnp
aam
pusha
std
inc
into
out
repz
ja
outsl
push
mov
aaa
ret
cmp
mov
notb
adc
aad
jns
fwait
insl
pop
jns
daa
adc
inc
call
xlat
push
xor
jno
popfw
pop
cli
add
cwtl
repz
push
sbb
aam
addr16
mov
leave
clc
and
jmp
xchg
push
int
das
mov
mov
cmpsb
repnz
or
jne
fidivs
lcall
mov
cmp
test
out
or
loope
inc
subb
into
repz
cs
test
jmp
xchg
dec
add
lea
leave
mov
lahf
ja
or
sarl
hlt
push
repnz
lods
mov
jmp
cmpsb
and
pushf
pop
test
rolb
xchg
out
fimull
lcall
cmp
mov
xor
mov
in
daa
sahf
cmp
mov
popa
cli
mov
lds
inc
dec
jmp
cli
imul
gs
mov
out
lock
mov
ljmp
and
std
nop
and
mov
cmp
sbb
push
ljmp
cmp
mov
inc
ss
or
pop
add
imul
jp
xchg
hlt
dec
arpl
or
push
mov
es
xchg
add
insb
or
and
je
mov
ret
cmpsl
push
inc
mov
xor
inc
movsl
fists
fwait
lret
add
or
mov
cmp
fisubrs
ds
pop
adc
adc
mov
ret
jl
sbb
es
jecxz
imul
insb
aas
sbb
or
std
push
cld
outsb
sbb
into
scas
fsubl
lcall
and
in
jle
push
pop
icebp
pop
mov
push
or
xor
out
mov
pop
test
xor
jge
movsl
jp
pop
mulb
dec
xor
sbb
std
mov
repz
test
jl
scas
lahf
mov
daa
int
xchg
jnp
sub
or
and
add
inc
pop
cmc
and
dec
jnp
mov
or
cwtl
sbb
leave
jp
push
sub
aad
leave
repnz
js
dec
int3
mov
in
jle
mov
pop
cld
in
push
dec
notb
xor
jo
add
jae
jo
ds
rorl
ja
loop
add
inc
mov
mul
adc
outsl
shll
push
ret
add
or
fstl
test
sbb
test
mov
jb
scas
es
in
pop
inc
inc
and
dec
pushaw
inc
fnstsw
inc
mov
loopne
adc
add
pcmpeqd
psrld
sahf
push
inc
jno
lret
push
fadds
out
inc
icebp
xchg
test
outsl
xor
or
arpl
mov
subl
pusha
xchg
mov
adc
push
loope
mov
idivl
xorb
push
lcall
cld
scas
test
ret
nop
adc
dec
and
push
xor
fmul
jno
ret
mov
cmpsl
ficoml
loope
mov
sbb
pop
push
popa
cltd
jle
mov
pop
sbb
out
xlat
or
cwtl
fldl
rorb
lahf
xchg
push
ficoms
test
cmp
push
dec
fbld
pop
mov
mov
and
sub
mov
dec
xchg
sti
lret
inc
fildll
push
push
in
jmp
fsubl
gs
mull
jle
ja
mov
or
adc
cmc
out
or
dec
adc
cmp
clc
inc
call
cmp
adc
jne
das
inc
mov
fs
out
jb
sub
pushf
out
fs
and
lcall
rcrb
sub
mov
xor
outsb
mov
out
dec
out
rcll
jns
orl
dec
into
push
fimuls
outsl
inc
cmpsl
fcomi
mov
aas
outsb
insl
sub
mov
roll
in
dec
pop
cmp
and
lods
loopne
pop
lods
xlat
movsb
pop
adc
movsl
repz
or
movsl
dec
mov
scas
adc
out
xchg
movsl
adc
mov
mov
ja
lods
xchg
js
fisubrl
cld
cwtl
add
loopne
int
mov
cmp
xor
xchg
mov
adc
xor
jmp
jae
popa
lahf
icebp
fmuls
pop
orl
rclb
pop
ss
lock
add
aad
movsl
jo
dec
add
test
mov
sub
test
or
mov
xchg
pop
lcall
lock
push
insl
mov
mov
sub
sub
popa
imul
fcmovnu
xchg
sbb
cwtl
aam
iret
sbb
xor
mov
loop
fiaddl
lret
invd
inc
dec
lock
push
movsb
adc
jae
pop
mov
cmc
cmpsl
outsl
xor
insb
mov
xchg
pop
jg
cli
xchg
or
mov
lods
mov
cmpsl
mov
add
cwtl
in
xchg
add
movsl
movsb
xchg
sahf
rcrb
sub
rcr
daa
push
add
popf
lock
loopne
sbb
inc
xchg
and
mov
push
and
ss
div
inc
test
pusha
cwtl
loope
mov
movsb
dec
insb
mov
xchg
push
add
roll
and
cmp
xor
outsl
add
or
mov
sbb
sub
bound
dec
jge
rorb
inc
xor
jge
mov
js
je
ss
mov
adcb
lds
cs
out
pop
arpl
sub
bound
xor
nop
daa
fcomps
mov
imul
fldenv
inc
cmp
shrl
dec
push
iret
mov
xchg
mov
das
mov
test
sbb
jnp
addr16
mov
fisttpll
sbb
inc
inc
xlat
es
cmc
mov
lcall
lock
pusha
push
test
jle
xor
push
in
ficompl
mov
rcrb
cmpsb
mov
inc
aas
jecxz
add
ss
xlat
lret
int3
jne
inc
sub
inc
cmp
cltd
femms
mov
ds
pop
orl
loopne
call
es
xchg
push
lret
sub
cmpsb
repz
ret
bound
outsl
dec
iret
dec
lret
shlb
inc
cs
std
popf
shrl
sbb
lds
pushf
or
cmp
int3
sarb
adc
rcll
fwait
xchg
jb
mov
add
je
push
dec
jl
dec
push
adc
mov
or
push
sub
movsb
sub
push
ja
aam
adc
jl
loop
push
ja
cmp
pop
rol
fldenv
addr16
jno
sub
sbb
pop
adc
or
sbb
shr
int3
mov
adc
sbb
loop
cli
and
imul
mov
adc
sbb
xlat
pop
jo
fsubr
ret
rcll
cmp
adc
mov
jle
adc
fmull
and
push
inc
or
add
push
inc
xchg
pop
adc
push
aaa
jns
mov
xchg
aaa
push
cld
xor
xor
xor
lret
arpl
and
cmp
cmp
repnz
xchg
je
mov
jmp
dec
mov
in
inc
fwait
aad
pop
jns
cmp
and
lods
add
xchg
sub
jno
push
adc
out
jb
lret
and
shr
cli
imul
push
setno
mov
jb
aam
xor
int3
repnz
push
xchg
int
divl
mov
adc
add
jnp
testb
sarl
adc
fsubl
mov
dec
into
mov
shl
movsl
imul
shlb
mov
stc
shrl
jle
loope
loopne
shll
add
ret
mov
push
xchg
fsqrt
rol
xchg
in
mov
jmp
or
lds
adc
sbb
movsl
adc
insb
lods
or
aaa
xor
into
mov
xor
add
into
lods
xchg
les
jg
arpl
rolb
xlat
scas
rorl
sub
ficoml
popf
sbb
jle
pop
ret
insl
add
add
jno
mov
mov
sti
cmp
or
cmp
rcrb
cld
or
inc
gs
loopne
add
jnp
push
sbb
loope
sbb
cmc
dec
stc
mov
dec
es
sarl
pop
xor
jle
shlb
mov
jg
push
xchg
lcall
add
inc
mov
xchg
stos
adc
fsubrl
mov
or
aad
mov
xchg
add
fidivl
add
mov
pop
out
mov
icebp
leave
stc
inc
imul
in
push
iret
adc
pop
sti
sub
dec
fs
lea
insl
fcompl
push
idivb
sbb
pop
jp
xor
adc
fnsetpm(287
mov
pop
test
icebp
xor
data16
or
std
inc
scas
lcall
subb
inc
cli
push
sbb
jno
inc
aaa
or
push
mov
or
add
or
pop
je
shlb
iret
sbb
js
movsb
jb
xchg
loope
loope
pop
cmpsb
hlt
popa
pop
dec
cwtl
mov
push
dec
sub
push
or
dec
xor
inc
jns
cld
hlt
lret
sarl
insl
or
mov
ds
out
and
xor
jmp
push
pop
sbb
pop
fimull
xchg
cwtl
divb
outsb
xor
mov
sub
loopne
pop
insl
inc
inc
jl
ds
sub
pop
xchg
sbb
arpl
retw
mov
stos
push
xor
cs
scas
xor
sbb
jecxz
pop
push
cmp
clts
sub
inc
mov
or
rorb
scas
ds
dec
mov
push
dec
in
jp
xchg
add
int3
aam
add
pop
pop
das
negb
popl
push
dec
sbb
push
xchg
pop
lods
dec
pop
mov
out
mov
pop
aas
add
and
pop
add
rcll
pop
mov
dec
popa
popa
xlat
out
pop
mov
cs
dec
dec
fsubrs
iret
sbb
sbb
jbe
inc
rcrl
mov
and
mov
sbb
lret
sub
lods
out
call
popa
jns
or
aas
push
pop
jae
push
bound
js
and
push
dec
jge
xor
pop
and
bound
data16
cwtl
add
cld
mov
push
into
xlat
in
and
into
push
shrl
movsl
or
out
cmp
adc
xchg
push
cmc
add
xchg
out
push
outsl
in
jle
and
push
enter
adc
int3
sub
ret
pusha
cmp
lcall
repz
roll
dec
pushf
int3
stos
out
loopne
fcmovnbe
cmp
xchg
xor
xchg
lret
insl
shlb
stos
fdivrs
or
es
push
cmp
lods
test
lods
scas
sbbb
push
hlt
sbb
or
sbb
rcrl
push
jbe
subl
outsl
xchg
ficoml
pop
cli
in
scas
dec
insb
imul
repz
int
aam
mov
cmp
and
add
shl
mov
testb
sbb
pop
aas
xchg
dec
push
mov
divl
jae
imul
js
mov
xchg
push
adc
jmp
adc
jno
insb
dec
dec
mov
lock
inc
inc
daa
push
push
and
addr16
jg
lcall
xchg
pop
adc
dec
sbb
loop,pn
sarl
pop
pop
test
push
jbe
aad
fbld
inc
cld
mov
ds
sbb
jmp
pop
mov
pop
mov
icebp
clc
or
xchg
pop
and
add
mov
dec
hlt
aaa
and
repz
ljmp
dec
inc
xchg
jle
jge
mov
cmp
mov
push
jo
lods
sbb
xor
mov
adcb
decb
lods
or
mov
in
jg
shrb
fucomp
push
add
mov
cmp
jg
fbstp
ja
addr16
mov
fs
inc
xor
imul
das
fmuls
and
jge
sbb
sub
jp
lods
xchg
aad
cltd
add
test
and
flds
inc
popa
movswl
xlat
pushl
push
and
fstp
mov
hlt
xchg
push
mov
mov
shll
jg
mov
cs
jbe
cwtl
dec
push
inc
or
lds
add
rorl
mov
aad
inc
cmpsl
scas
and
in
lcall
or
in
inc
pop
add
shll
sub
rolb
mov
out
and
xor
ss
in
data16
mov
push
mov
dec
jno
fisubs
adc
mov
inc
loopne
jg
jo
mov
adc
shrl
aas
jnp
scas
pop
pusha
addr16
dec
insl
bound
pop
sti
xchg
cmp
push
inc
and
jmp
pop
push
iret
iret
popa
lret
decb
pop
pop
popa
cmp
cmpb
and
es
fisubs
push
sub
ret
dec
cmovo
jnp
out
inc
shl
mov
fsub
xor
decb
gs
popa
outsl
fldl
loop
mov
test
lods
movsb
cmp
dec
inc
dec
ljmp
cs
addb
mov
inc
cmp
lds
rclb
ret
sub
mov
mov
aas
mov
sub
push
fisttpll
insb
subb
es
sbb
inc
mov
xchg
or
xchg
subl
test
inc
roll
push
and
fstp
into
lret
push
xchg
push
insb
icebp
sahf
cli
lea
ror
sbb
mov
mov
es
jns
mov
dec
movsl
clc
filds
pop
fmull
lahf
mov
inc
dec
fisttpll
insb
imul
inc
fdivrl
jne
inc
repz
pop
or
xor
scas
mull
mov
pushf
sbb
lock
xchg
pushf
mov
sub
and
or
dec
dec
or
mov
test
sub
push
sahf
int
sti
push
in
xor
jns
mov
cmp
add
in
pusha
cmc
xchg
dec
jb
loope
leave
pop
out
les
test
flds
jl
lcall
fnstsw
enter
xor
add
lods
add
in
ss
xchg
in
das
push
loopne
mov
sbb
outsb
loope
jns
ret
push
loopne
jmp
sarb
sti
icebp
sbb
inc
sub
fcompl
ljmp
out
lret
pop
mov
add
into
shrd
sahf
enter
cmp
sbb
subb
jae
dec
int3
lock
mov
xchg
idivb
sbb
out
rcl
gs
shr
or
dec
add
push
stos
aaa
mov
pop
jp
mulb
push
int
and
add
cmp
popf
subb
mov
and
mov
xchg
mov
icebp
xlat
dec
divb
jo
mov
test
sarb
jae
jg
daa
lods
mov
mov
jo
popf
xchg
fs
stos
les
stos
jecxz
sub
iret
push
sti
iret
ja
cli
pop
rcll
mov
sub
std
test
sti
mov
imul
xorb
js
jp
mov
fimull
std
stos
inc
cmp
fucom
pop
or
push
cltd
andb
rcll
xlat
push
xchg
inc
and
lcall
mov
sbbl
inc
xor
and
das
push
and
xchg
notl
adc
shll
lahf
mov
mov
mov
mov
mov
lods
jge
cmp
pop
rclb
add
sub
loop
hlt
enter
aaa
insl
insl
cmp
lahf
int3
pop
sub
mov
loope
cltd
and
xchg
jmp
jns
mov
mov
inc
aaa
mov
mov
xor
mov
ror
xchg
adc
aas
test
ror
xchg
test
jae
mov
mov
test
rcrl
push
jnp
jle
orb
mov
lahf
sti
mov
pop
iret
repnz
cmpsl
and
loopne
pop
bound
and
cmpsb
xor
iret
shl
ret
jb
inc
aas
iret
imul
jne
repnz
mov
test
int
adc
push
test
adc
aam
jbe
pop
jnp
cmc
sbb
lock
mov
insb
fs
arpl
push
jb
rorl
add
movsl
arpl
push
mov
mov
pop
sub
loopne
ja
xor
jne
scas
sub
inc
pop
add
mov
jns
cwtl
jbe
es
adc
dec
cmp
shrb
xchg
fldt
mov
adc
lret
fwait
into
test
scas
add
ss
cmp
into
cld
movb
cmp
decl
jns
and
sahf
int3
push
lcall
xchg
out
into
dec
in
xor
xor
ret
jns
inc
jle
fstps
sbb
push
sbb
add
pextrw
cs
xchg
cmp
pop
add
jle
lods
mov
cmp
xor
adc
jg
out
data16
or
or
ljmp
sahf
push
imul
or
xor
or
arpl
cli
sbb
ret
leave
sub
cmp
xchg
xchg
inc
pop
sub
dec
or
push
dec
mov
cmp
pop
jne
jbe
mov
jmp
daa
mov
imul
cwtl
sti
add
inc
adc
cwtl
scas
mov
cmpsb
jmp
scas
fiaddl
and
movsb
int
mov
test
cmp
mov
jle
cs
adc
sbbb
fisttpl
pusha
xlat
sbb
das
movsb
jno
loop
aam
mov
test
mov
push
inc
cmpsb
jnp
daa
xor
or
sub
lods
dec
sub
rcrl
aad
ljmp
stos
dec
int
jne
xchg
imul
lock
outsl
xchg
or
cmp
je
jbe
jbe
mov
mov
and
lds
es
fidivrl
cmc
test
test
shll
fbld
dec
adc
notl
scas
rclb
dec
sbb
mov
mov
fcoms
psrad
mov
int
test
sub
jnp
repnz
das
rcrb
adc
xor
lods
jmp
xor
mov
std
sbb
xchg
movsb
jns
push
dec
and
dec
mov
mov
cltd
call
insl
sbb
jge
add
sarb
loope
dec
clc
imul
mov
inc
mov
inc
mov
outsb
cmp
movd
dec
les
idivb
aaa
mov
sti
jle
or
adc
sbb
neg
or
mov
leave
pop
jl
jg
sub
sub
dec
rolb
xor
mov
add
ja
rolb
sbb
xchg
clc
sbb
and
sub
dec
pop
dec
mov
out
ret
xor
loop
mov
add
dec
xor
or
imul
mov
sbb
fwait
or
inc
or
xchg
outsb
and
adc
jecxz
jae
test
push
push
imul
cmp
imul
sub
lds
dec
in
out
cmp
lcall
xchg
adc
enter
mov
xchg
xor
jns
inc
ret
jge
cmp
aaa
test
imul
test
les
into
lret
xchg
jge
and
pop
cmp
lds
out
fnstsw
into
cmp
shlb
xor
and
adc
mov
mov
out
pop
mov
inc
mov
dec
subl
fsubrp
in
mov
cmp
pop
mov
mov
pop
rorl
mov
mov
rclb
mov
jp
arpl
loopne
or
mov
insb
enter
sub
ja
mov
pop
mov
dec
fwait
clc
mul
pop
cli
inc
out
push
das
and
mov
test
push
sbb
add
lahf
xchg
ret
jne
adc
add
add
sub
fildl
lahf
icebp
push
mov
inc
dec
negl
stc
fisttps
imul
fstpt
and
cmc
jmp
mov
sarb
icebp
scas
jecxz
xchg
cmp
in
pop
addr16
and
into
mov
sbb
mov
pop
daa
cltd
int3
xchg
or
and
sbb
mov
subl
cmp
pop
mov
outsl
xlat
inc
ret
cmpb
inc
pop
push
lea
hlt
and
mov
fimuls
fists
out
xlat
inc
or
arpl
lret
adc
mov
cmp
adc
mov
adc
pop
cmpsl
dec
popw
aaa
fists
jns
cmovl
shll
mov
add
and
mov
movsl
aaa
xchg
pop
out
mov
adc
lret
mov
dec
mov
std
imul
imul
cmpsl
shrb
in
cltd
jns
mov
adc
rorl
or
mov
xchg
arpl
insl
lret
push
call
xor
pop
xchg
shrl
shl
and
stc
rcrb
inc
test
cmpsl
fwait
gs
test
mov
mov
xchg
xlat
ficoms
adcb
fs
push
push
push
int3
pop
dec
mov
sbb
sbb
add
push
jmp
cmpsl
push
xor
icebp
xor
imul
mov
fimull
imulb
sub
aaa
push
push
push
pop
adc
dec
add
nop
dec
or
aaa
pop
jp
dec
arpl
out
sbb
mov
mov
and
sub
mov
clc
enter
loope
in
pop
jbe
std
cmpsl
lret
in
scas
adc
loope
and
ljmp
scas
and
cmp
lret
adc
stc
xchg
out
xorl
addr16
pop
or
jno
cmp
ret
aad
ljmp
outsb
ret
cmpb
xor
mul
je
stos
fs
dec
iret
mov
pop
jae
shlb
mov
out
push
push
aas
scas
stos
or
add
xor
or
mov
adc
mov
xchg
mov
enter
out
out
adc
cmp
cmp
and
jnp
dec
mov
and
es
stos
mov
hlt
mov
data16
xchg
mull
jle
add
iret
xchg
imul
push
test
nop
imulb
movsl
loop
in
pop
ds
imul
loop
ljmp
mov
les
mov
jl
xchg
xor
incl
fidivrs
inc
cmc
push
cmp
fmull
test
dec
push
adc
shlb
data16
fstp
mov
movsb
xor
aas
loope
out
mov
hlt
addb
xor
ret
stc
mov
repnz
dec
pushf
push
sbb
pop
inc
mov
pop
nop
les
add
adc
outsl
iret
push
repnz
sbbl
and
sub
out
cs
lea
pop
in
fnsave
shlb
stos
mov
add
mov
cltd
fwait
stos
xor
aas
mov
adc
or
mov
xlat
and
add
test
lea
or
jne
inc
cmp
dec
and
lret
outsb
push
mov
add
mov
ja
mov
imul
mov
mov
inc
jnp
insl
jle
icebp
adc
add
in
in
gs
add
xor
xor
sbb
or
dec
push
outsl
xchg
insb
dec
cs
jae
cmp
inc
adc
mov
xor
dec
arpl
bound
xchg
pop
pop
out
call
pop
pop
call
stos
and
or
xchg
stc
sbb
shl
pop
out
jae
sbb
sti
inc
pop
mov
mov
bound
jge
dec
cmpsb
fsubr
pop
push
jle
jb
out
or
clc
xor
cmp
push
ja
aam
hlt
ret
adc
pop
sub
push
adc
pop
insb
notb
pop
fs
mov
mov
sub
jl
mov
jmp
push
fcompl
xchg
pop
inc
mov
les
pminub
jne
push
xor
push
push
shrl
cs
xchg
or
in
addr16
xchg
lcall
jnp
lcall
clc
test
and
insb
xchg
out
leave
cmpsb
mov
jg
dec
xchg
hlt
iret
sahf
inc
xor
fisubrl
pop
and
xchg
sub
imul
inc
pop
xor
sar
inc
mov
cmp
les
mov
stos
xchg
arpl
pop
iret
outsl
inc
mov
loope
dec
inc
adc
and
sub
inc
or
and
and
mov
add
cmp
adc
pushf
test
mulps
ret
je
push
decl
pop
jno
jmp
dec
or
mov
scas
pushf
push
sub
mov
and
mov
lods
cmpsl
stos
jge
jp
sbb
xlat
jp
pop
out
cmp
aaa
call
dec
add
sbb
mov
btr
mov
xchg
dec
nop
push
ret
add
pop
call
pusha
inc
loopne
movsb
xchg
adc
in
lock
scas
test
aas
aas
lcall
leave
jg
xchg
ja
stos
lcall
inc
lods
pop
jbe
faddl
inc
into
shrb
clc
popf
and
sbb
xor
lret
push
mov
divl
sub
or
pop
jae
adc
xor
mov
or
push
shlb
pusha
test
enter
int3
faddl
call
jl
rorb
loopne
mov
mov
ljmp
aam
and
ret
jg
xchg
jae
int3
mov
or
mov
push
test
mov
cmp
out
dec
pop
mov
jg
mov
lahf
xchg
sbb
jnp
adc
popa
and
enter
dec
xor
mov
clc
inc
pop
add
push
jae
push
jae
das
xchg
jmp
insb
push
ds
int
xchg
inc
add
xchg
loope
mulb
jmp
xchg
xchg
mov
push
mov
in
xor
int3
fwait
scas
adc
sbb
sub
enter
and
and
add
imul
dec
mov
xchg
push
jno
pop
loope
inc
inc
scas
dec
adc
mov
mov
xor
lret
shll
dec
movsb
out
jnp
cmp
fiaddl
fidivs
xor
pop
insb
pop
aam
or
clc
sub
push
iret
push
jp
out
arpl
bound
push
fisubs
xchg
mov
push
add
sbb
xorb
test
mov
add
or
orl
rcll
mov
lods
push
xchg
xchg
fcom
and
sbb
or
lock
je
outsb
jle
cmpb
lcall
xchg
stos
jl
inc
add
pop
lcall
xchg
adc
jecxz
daa
xor
jns
scas
ffreep
inc
mov
push
cmp
lret
cmp
aam
loop
adc
outsl
sub
not
mov
xchg
cmp
in
adc
xor
lds
push
pop
out
cwtl
repnz
push
push
xor
pushf
xchg
sbb
inc
sbb
sub
ljmp
push
aas
push
jg
call
subl
sbb
lock
daa
movsb
cltd
ljmp
nop
push
xchg
inc
daa
pop
jbe
aaa
pop
fsubs
push
and
xchg
lods
cmp
lea
or
cmp
pushf
adc
in
push
mov
ds
ret
or
dec
stos
div
leave
out
pop
jno
lods
ss
xchg
lret
ds
dec
inc
aad
dec
lea
cltd
adcl
out
aad
pop
cmp
mov
bound
jle
lcall
inc
pop
data16
shlb
data16
adc
lds
je
mov
ljmp
bound
stos
lods
mov
jl
cmp
mov
iret
lock
push
clc
lcall
cmpsb
adc
aam
and
add
es
jmp
push
jbe
push
ficoml
shll
rcrl
mov
jl
inc
pop
pushf
divb
mov
mov
nop
xor
pop
cmp
es
jp
orl
and
ljmp
mov
sub
outsl
mov
jmp
dec
scas
ret
add
sbb
pop
pop
mov
insl
incb
jecxz
lret
inc
pop
dec
cmp
or
popf
incb
fisubs
popa
mov
mov
cmp
data16
cwtl
ret
outsb
xor
mov
inc
fidivl
subb
inc
adc
lods
dec
xor
cmp
out
xchg
repz
mov
outsb
pop
mov
mov
out
cmpsl
lock
testb
dec
sub
dec
dec
push
lock
es
jnp
xlat
fs
add
or
int
pop
outsl
data16
push
adc
mov
mov
in
clc
sbb
pusha
popf
notl
lds
es
add
add
add
sbb
inc
xor
cltd
cld
cmc
push
fildl
sub
test
hlt
pop
stc
ficompl
ret
in
mov
mov
inc
sub
pop
les
sarl
cmp
in
sub
es
and
imul
frstor
lea
push
sub
cmp
dec
sahf
mov
xor
add
mov
sysexit
dec
ret
or
add
in
daa
xchg
sub
jp
std
cli
jb
mov
pusha
sub
pop
icebp
push
repz
test
outsb
sub
mov
xchg
shlb
in
scas
xchg
cmc
das
popa
ret
dec
xor
out
sub
cmpsl
inc
push
iret
pop
sbb
sub
pop
gs
addr16
push
or
repz
mov
fsubrl
mov
dec
add
cmpsl
mov
mov
loop
imul
add
js
test
lret
adc
loopne
test
shll
popf
repnz
inc
rol
shll
inc
cli
mov
divb
pavgw
leave
xor
sub
aas
xchg
fwait
xchg
lock
fidivrs
and
pushf
jo
cmp
jp
pusha
fildl
push
mov
fwait
or
jl
out
xchg
js
xor
insl
aam
cmp
lret
add
jp
adc
cmpb
push
insl
cwtl
push
loopne
cs
ret
fadd
movsb
enter
insb
test
lea
leave
xchg
mov
or
xlat
add
xor
repz
es
pop
mov
fildl
dec
lods
repz
jno
cmp
and
hlt
jp
xchg
sub
shrb
mov
ja
fdivl
push
dec
icebp
mov
push
dec
jl
inc
xchg
push
lock
mulps
lea
inc
sti
mov
cmp
es
std
loopne
adc
movsb
je
outsb
cltd
inc
push
cld
xlat
jae
fcoms
dec
out
push
xor
mov
sti
jmp
out
or
stos
and
add
int3
cmp
or
in
out
or
mov
adc
std
jp
push
lcall
in
cld
std
dec
ret
stos
adc
cmp
xchg
cli
lods
or
mov
scas
test
inc
or
shl
xchg
or
sbb
mov
and
dec
rclb
in
sbb
mov
or
dec
dec
pop
jb
test
adc
pop
adc
mov
push
outsl
xor
les
xor
mov
add
ljmp
pop
jmp
enter
jnp
testb
mov
mov
sub
pop
sbb
in
inc
sbb
test
movsb
push
mov
ret
xchg
push
mov
jmp
mov
movsl
mov
mov
inc
xchg
inc
mov
or
lcall
inc
pop
inc
outsb
lea
pushf
adc
mov
imul
insb
jae
mov
and
mov
test
pushf
add
pop
jns
mov
adc
push
int3
lock
xchg
popf
jle
jge
inc
cmp
mov
in
imul
add
fldl
or
or
xchg
daa
fldcw
xor
push
mov
jne
test
notb
pop
fsubrs
jo
jnp
jg
add
jns
dec
cmp
inc
hlt
cmp
scas
jne
adc
push
daa
std
gs
sbb
inc
sarl
ret
inc
je
add
jbe
repnz
iret
mov
fcoml
call
daa
xchg
cmpsb
xchg
inc
dec
cs
add
test
pop
push
sub
mov
jle
repnz
jns
lahf
xchg
pop
nop
pop
mov
sub
push
clc
daa
adc
or
jmp
mov
pushf
dec
fwait
xchg
lcall
enter
rcll
mov
fnsave
push
xor
or
fstl
add
sahf
mov
insl
mov
cmp
and
pop
mov
mov
rorb
mov
mov
sbb
xchg
insb
sbb
jo
fwait
ror
pusha
mov
int3
adc
lcall
paddd
push
jg
clc
scas
leave
cmpsb
testb
inc
sbb
bound
in
subl
ret
sarb
pop
adc
adc
lcall
and
sub
enter
scas
aaa
mov
aas
xor
dec
out
cmp
rcl
rol
mov
dec
and
fcoml
inc
jmp
lret
mov
and
ret
inc
xchg
or
popa
outsl
loop
xorl
cmpsb
loopne
xor
fistps
or
fcomp
and
repz
loop
jnp
mov
inc
fisubl
push
cmp
ret
adc
and
lahf
jecxz
cwtl
iret
xor
dec
sub
push
xor
mov
movsbl
xchg
repnz
sub
loopne
sub
rcl
inc
lock
push
ret
jp
lahf
into
sub
mov
dec
mov
jp
xor
out
mov
repnz
data16
in
sbb
out
pushf
xchg
and
enter
mov
or
pop
pushf
push
jns
jmp
jmp
outsb
movsb
dec
and
flds
push
push
cs
gs
ja
faddp
shr
inc
sub
les
in
sub
and
out
mov
sbb
std
cmp
int
xchg
mov
pop
loopne
push
xor
insb
aam
add
pop
pop
pop
mov
pop
xchg
hlt
cmp
sbb
jle
adc
xorb
push
dec
mov
jae
and
adc
sahf
loop
xor
cmc
or
dec
test
push
adc
repnz
pusha
faddl
in
push
mov
test
jl
dec
mov
es
jns
jmp
and
imul
cmpsb
leave
mov
jbe
clc
mov
iret
adc
movsl
add
movsl
pop
js
fsubrs
cmp
push
push
cmp
test
mov
pop
popa
outsl
adc
and
leave
loop
popa
sbb
cmp
mov
je
loopne
or
dec
test
add
jmp
cltd
mov
cmp
scas
xchg
testb
pusha
push
jne
imulb
test
xchg
inc
cwtl
mov
xor
pop
aam
les
out
ret
daa
xchg
lock
or
stc
out
push
lret
rorb
sbb
enter
adc
xor
jo
pop
enter
aaa
and
stos
repz
aaa
cmpb
mov
jle
push
stc
rorb
js
clc
cmp
push
cmc
jne
dec
dec
in
inc
rcr
jmp
sub
outsb
and
push
or
cmp
mov
pop
clc
incb
jnp
push
jno
adc
pusha
dec
inc
jb
xchg
pop
sahf
inc
into
into
xchg
fsubrl
das
movsl
fsubr
mov
mov
jl
push
out
xchg
and
inc
stos
sub
sbb
adc
sub
addl
ret
xchg
mov
sub
loop
dec
mov
sbb
jmp
subl
sbb
jo
out
outsb
fcomip
jg
int3
lds
mov
imull
mov
outsb
mov
aas
ret
mov
add
cmp
pusha
lcall
add
clc
loop
stc
ja
cmp
iret
out
jmp
add
adc
std
mov
mov
inc
or
dec
sbb
movsl
iret
xchg
lods
pop
inc
shrl
and
sbb
scas
lods
pop
cmp
in
xor
mov
scas
inc
xchg
pop
sti
pop
mov
icebp
ds
scas
ficoml
test
dec
xchg
rcl
mov
mov
mov
xor
sti
in
sahf
out
add
aas
xor
push
scas
icebp
mov
mov
inc
push
sbb
inc
shlb
sbb
iret
hlt
mov
rclb
sar
out
cmpsl
outsb
lcall
jo
xchg
test
ds
mov
imul
pusha
lret
add
cli
and
iret
sub
inc
or
adc
fwait
mov
and
arpl
xor
adc
jmp
imul
aam
pop
les
addr16
push
jecxz
ret
in
dec
add
sub
into
cwtl
ja
mov
ret
or
hlt
jle
add
dec
add
cmpsb
movsl
mov
das
mov
xchg
sarl
sbb
xor
std
inc
xchg
ret
xor
sub
fistl
lret
fstps
sbb
and
insb
or
insb
popf
xlat
lods
in
es
sub
or
sub
call
es
push
cmpsl
je
fsts
cmp
in
sti
mov
int
hlt
cmp
xor
scas
cmpsb
test
bound
cmp
imul
or
hlt
mov
cmc
mov
fstl
mov
inc
out
les
fldcw
movsl
xor
push
out
mov
or
test
insl
sub
shrl
fistpl
or
cmp
sub
inc
call
pcmpeqw
dec
lahf
mov
mov
fisttpl
into
cmp
popa
test
xchg
mov
sbb
aas
movsl
cmp
imul
adc
sahf
movsl
push
in
ss
jne
jo
cmp
cmc
jp
cmp
xlat
adc
mov
cmp
inc
aaa
or
or
testb
es
dec
icebp
inc
adc
lcall
fsts
test
dec
push
pusha
test
sbb
dec
arpl
pop
rcll
gs
xor
adc
sub
or
lcall
mov
inc
shll
inc
incl
mov
xor
xchg
icebp
ljmp
xchg
cmpsl
fcomps
sar
out
xchg
and
sub
mov
jmp
je
or
ret
cmp
test
les
and
mov
cwtl
sbb
inc
ss
or
adc
out
shll
mov
por
adc
ret
mov
inc
adc
in
xchg
sahf
pushf
sub
loope
jbe
mov
lods
imul
adc
in
push
xchg
rclb
pop
pop
test
mov
lcall
iret
xor
jnp
mov
mov
cmp
jmp
stc
ja
sub
aaa
sbb
cwtl
gs
mov
xchg
pop
mov
push
inc
incl
in
add
jns
lcall
sub
mov
ficompl
cmp
adc
or
mov
ss
dec
mov
ljmp
xchg
ficompl
fs
faddl
loope
fsub
adc
ja
dec
insb
mov
shll
push
adc
xchg
ret
xor
jp
dec
adc
inc
int3
test
push
dec
push
bound
mov
jmp
xor
test
pop
outsb
pop
je
lds
je
sub
fcmovu
lea
xchg
inc
mov
in
jbe
dec
shll
cmp
fwait
je
fstpl
mov
mov
inc
xor
rorl
and
xchg
xchg
movsb
dec
sub
cmpsb
int
sbb
jmp
mov
adc
or
jg
sbb
loopne
dec
mov
addr16
mov
push
adc
outsl
fnstenv
push
repnz
jo
sub
jg
mov
dec
xchg
sub
add
jge
stos
add
andb
push
in
or
pop
aam
leave
repz
mov
add
ret
push
hlt
sbb
push
int
jnp
add
fisttps
pop
inc
push
pop
dec
lret
dec
div
dec
pop
test
add
loop
pop
add
mov
inc
lock
in
sub
ljmp
xchg
stos
pop
xor
outsb
jl
sub
jl
fisubrl
lock
movsb
mov
pushf
ds
jbe
sub
into
pop
stos
mov
lock
sti
mov
pop
xchg
icebp
mov
ja
push
pop
loopne
ror
cmp
jno
dec
aam
jmp
and
fstl
pop
add
movb
fwait
jbe
ja
or
jecxz
test
add
icebp
jbe
dec
cli
mov
ret
call
mov
jg
js
imul
sub
push
jnp
aas
add
mov
cltd
inc
and
loope
or
jb
pop
or
cmpsb
ja
pop
scas
pop
push
and
call
dec
mov
push
mov
xchg
mov
ja
popf
fdivrs
mov
push
inc
pop
or
dec
inc
mov
es
mov
add
push
in
mov
or
movsl
pop
jae
ljmp
pop
xchg
adc
loope
push
sub
push
in
repnz
xchg
stos
jge
push
cmovle
loopne
jo
sti
push
inc
shll
pop
sbb
xchg
or
xor
lock
jb
cmpb
xchg
mov
sahf
xor
xchg
inc
sub
mov
mov
xchg
pop
cmp
cs
aam
shrl
loopne
pushf
outsb
divb
repz
js
jns
mov
jo
in
push
shrb
mov
xchg
jne
nop
sarb
bound
sbb
shll
pop
bound
jl
mov
push
fcoms
pop
ds
sbb
adc
xchg
sub
movsb
sbb
push
lret
in
loope
xchg
call
cmp
mov
xor
add
mov
es
lods
xor
aas
aaa
aaa
mov
lcall
fiadds
jbe
pop
test
adc
jns
icebp
or
xor
push
repnz
mov
mov
adc
jnp
test
jno
data16
or
leave
shlb
xchg
push
mov
xor
fcmovb
and
fwait
in
hlt
or
fnsave
jmp
scas
roll
mov
mov
cwtl
leave
and
sbb
jmp
jge
gs
mull
dec
dec
ds
inc
push
push
scas
add
pop
ret
dec
aam
inc
fsubr
lods
push
or
pop
mov
adc
dec
inc
xor
test
mov
imul
cwtl
xchg
out
push
mov
add
lds
push
jmp
jns
pop
sbb
push
lods
in
aaa
aam
adc
unpcklps
pushf
aas
dec
daa
xchg
nop
ret
jecxz
leave
pop
xchg
jg
dec
xor
cmp
dec
icebp
push
fdivrs
lret
mov
sub
and
std
rcll
out
cmpsl
push
fs
push
fsubrp
test
mov
jmp
aas
and
pop
inc
das
iret
aas
add
mov
push
int3
js
fidivrs
pop
iret
jae
xchg
jg
clc
add
push
or
pop
jmp
mov
dec
and
clc
xor
jp
cmpsb
push
arpl
cmc
mov
mov
dec
emms
inc
sub
pushl
hlt
inc
movsl
in
mov
stos
das
mov
lret
cmp
mov
mov
sub
fsts
in
push
jmp
add
in
lret
jle
push
mulb
push
pop
out
inc
mov
lds
out
push
mov
mov
xchg
cmp
hlt
or
mov
pop
rcrl
fstps
dec
pop
mov
mov
cmpsb
fdivrs
mov
std
sahf
add
add
jno
dec
jle
sbb
dec
bound
cld
popf
xchg
jg
mov
and
xchg
jmp
dec
mov
cmpb
jecxz
mov
in
mov
mov
repnz
test
dec
add
jnp
add
in
sub
aaa
out
push
pop
enter
add
aam
push
fs
push
add
xor
xor
test
or
lds
push
ljmp
sub
test
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
cli
mov
xchg
shlb
inc
popf
lock
clc
xor
mov
dec
aaa
cmp
imul
bound
jne
sbb
mov
fcoms
pop
addb
xor
hlt
cmc
hlt
and
repnz
cld
js
jb
push
jg
xchg
test
sbb
pusha
dec
arpl
adc
fistpll
jmp
or
in
sub
mov
mov
js
mov
sub
sub
sbb
jmp
sub
inc
and
cmp
push
and
cmp
call
or
pushf
or
pop
jmp
mov
sbb
adc
movsb
stc
rorb
popl
ds
cwtl
cmpb
fmulp
neg
sbb
test
je
fnstcw
sbb
sbb
rorl
mov
idivl
mov
mulb
pop
add
jns
iret
pop
adc
adc
push
lds
stos
je
fwait
fidivrl
sbb
mov
hlt
loopne
adc
xchg
xor
jg
add
sbb
cmp
add
lret
add
filds
add
add
add
add
pop
add
inc
xchg
push
xor
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
in
dec
insl
add
dec
insl
add
in
insb
