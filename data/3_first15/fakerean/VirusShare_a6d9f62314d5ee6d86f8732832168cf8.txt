sbb
add
mov
pushf
mov
add
inc
in
addr16
inc
push
push
and
push
xor
adc
iret
fmuls
mov
or
xor
call
inc
mov
das
jo
jmp
dec
sbb
iret
lods
stos
adc
loop
mov
aad
lcall
or
cmp
pushf
mov
stc
xchg
pop
sub
repnz
data16
mov
cmp
fdiv
shlb
push
clc
aad
xor
mov
loopne
push
outsb
lock
fisubl
push
lret
sub
push
aaa
mov
dec
ret
xchg
das
sub
fsts
cmp
or
das
cmc
cmpsl
test
jmp
cmp
and
jecxz
xchg
xor
sbb
aaa
jecxz
push
pop
enter
adc
cmc
cwtl
or
stos
hlt
mov
aad
mov
mov
fldenv
ljmp
test
and
fldt
lods
mov
push
and
adc
add
movsb
iret
pextrw
addb
mov
ret
inc
push
xchg
xchg
adc
dec
lock
jmp
fstps
lock
fs
loopne
sbbb
int
mov
das
scas
pop
mov
dec
pusha
and
fists
out
or
aaa
mov
inc
outsb
mov
mov
lret
jle
fidivrl
out
dec
jmp
cmp
pop
cmpsb
push
imul
jmp
ljmp
mov
icebp
fsts
mov
imul
jmp
jecxz
push
xchg
gs
or
mov
cli
repz
in
scas
cmp
xor
fiadds
add
pop
ret
xchg
fstps
cld
adc
cmp
enter
push
fildl
pop
int
xor
cmc
jns
mov
mov
dec
adc
xchg
cld
mov
push
shrl
es
dec
adc
push
repz
push
scas
lret
mov
stos
xchg
lock
cmp
push
or
pushf
shll
sti
dec
not
cwtl
xchg
jb
cmp
fimuls
mov
cmp
cwtl
lea
or
imul
ljmp
sbb
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jno
jmp
int3
sarl
mov
movsl
lret
mov
and
push
cmp
and
pushf
outsb
mov
or
addr16
add
bound
pop
lods
sub
cmp
xchg
or
and
pop
add
add
sub
sub
xor
xchg
xchg
sti
jg
jno
stos
mov
fs
in
aam
xor
dec
in
inc
adc
and
push
pop
or
call
push
orb
popf
xchg
or
sar
push
pop
push
mov
mov
xor
or
sbbl
aad
sbb
clc
sti
mov
mov
out
adc
push
fwait
xchg
jle
pop
push
add
add
jo
lret
ror
mov
jmp
sbb
add
pop
lahf
jp
adc
ret
cmc
inc
stc
test
call
imul
xchg
pop
inc
add
or
gs
out
sbb
mov
out
inc
out
sub
or
ja
sub
dec
cld
enter
imul
roll
dec
push
xchg
mov
out
movsl
cmpsb
xchg
mov
dec
ss
add
cld
lret
fwait
push
xor
icebp
stos
movsl
mov
mov
sbb
xchg
push
jbe
lds
sbb
daa
dec
add
xchg
dec
or
mov
cmc
jmp
popf
outsb
xor
les
das
xchg
jge
stc
jle
add
mov
lret
in
scas
dec
sub
sbb
push
gs
scas
test
test
in
pop
ss
sbb
out
mov
mov
jp
lods
popf
sub
ja
inc
imul
xchg
lock
pop
call
fistps
into
movsl
aas
mov
arpl
pop
sti
pop
cmc
addb
jnp
inc
icebp
es
pushf
push
iret
jmp
pop
push
and
mov
pop
lods
adc
or
pop
sbb
push
leave
fsubs
mov
push
repz
push
fldcw
std
inc
fmull
movsb
mov
movsb
movsl
xchg
or
push
je
xor
insb
mov
mov
jl
out
xchg
xor
enter
sub
stos
mov
lock
and
pop
push
xor
dec
shlb
nop
cmpsb
mov
scas
mov
pop
add
and
aam
divl
bound
sub
xchg
aad
mov
fisttps
inc
out
aad
mov
push
push
or
push
mov
sub
mov
and
dec
sbb
andb
jnp
int
lods
or
sbb
fcomps
dec
das
mov
pusha
inc
dec
mov
mov
fcoms
mov
push
mov
jmp
outsl
push
push
int
mov
in
pop
cmp
pop
sub
push
scas
movsb
mov
divl
dec
pop
mov
or
jnp
sahf
sbbb
cwtl
sub
xor
hlt
push
xchg
add
mov
sub
jle
sub
mov
push
jo
xor
pop
aad
sub
sub
daa
lds
cmc
pop
iret
in
arpl
sbb
fwait
jecxz
mov
test
cs
sub
movsl
dec
in
clc
int
jg
xchg
fsubs
nop
mov
dec
ljmp
cmp
ror
xchg
decl
mov
hlt
loope
imul
cli
arpl
int
jno
or
movsb
sahf
cld
icebp
xchg
pushf
or
lods
pushl
repnz
insb
or
push
cwtl
outsb
push
mov
cli
lock
and
xchg
imul
vaddsubpd
add
sbb
lods
and
iret
mov
push
imul
sub
pop
jle
cltd
enter
int3
add
xchg
pop
xchg
xchg
cltd
fildl
jae
es
or
cld
sbb
movsl
push
push
mov
xchg
ds
dec
adc
cmp
jmp
adc
jns
mov
mov
cli
xchg
mov
pop
xchg
jmp
lcall
mov
loope
repz
in
sbb
out
sti
jb
mov
cmpsl
push
pop
shll
sbb
pop
popw
leave
mov
aad
imul
inc
jne
mov
mov
lahf
inc
sbb
testl
gs
cltd
fs
addr16
leave
adc
add
sahf
sbb
push
gs
mov
sbb
mov
je
outsl
sub
add
in
mov
call
ja
sahf
aad
mov
jo
into
pop
adc
ss
mov
mov
rolb
lods
mov
mov
jg
xor
call
or
jle
call
mov
insl
testb
adc
out
dec
mulb
xor
sub
scas
ret
addr16
mov
fnstenv
mov
mov
mov
adc
test
addr16
jo
pop
and
aad
cmp
cmp
push
cmp
jle
icebp
and
pop
fdivrl
or
push
sub
ss
call
mov
or
fcomps
decl
jge
xchg
pusha
mov
push
or
or
or
loop,pt
jb
sbb
scas
mov
xchg
xchg
or
pusha
scas
mov
call
dec
stc
add
sub
aam
in
daa
dec
sbb
cmp
in
ds
popf
jg
hlt
into
jmp
enter
arpl
lock
sbb
inc
push
fdivl
cmc
gs
xor
push
in
lods
iret
xchg
addr16
leave
pop
insl
lahf
sbb
push
and
out
stc
sti
push
inc
lods
xor
mov
stos
xor
lret
adc
bnd
aaa
dec
les
gs
les
sbb
stos
pop
enter
pop
adc
loope
push
xor
fisubl
jno
jl
fidivrl
mov
ss
xchg
lods
cwtl
mov
shrb
out
or
or
push
ja
mov
mov
ja
xor
call
fsubrs
rcrb
inc
sbb
test
and
jns
sub
mov
sbb
movsl
push
ficoml
loope
into
add
popf
mov
dec
mov
mov
lahf
mov
adc
push
outsl
mov
fsts
jg
pop
sub
jecxz
lods
cmp
test
sub
xchg
mov
rcl
call
sar
mov
push
es
mov
inc
dec
add
mov
mov
nop
pop
mov
int
outsb
loop
inc
in
sbb
push
hlt
push
call
mov
push
lea
push
push
and
sub
loop
mov
jns
pusha
mov
pop
cmp
js
sbb
mov
data16
outsb
out
mov
repnz
pop
or
adc
iret
loop
repnz
xchg
test
cmc
movsb
adc
call
dec
repnz
std
outsb
cmc
sbb
xchg
push
ljmp
and
movsl
mov
push
lahf
or
xchg
mov
add
jl
mov
dec
ret
add
ret
arpl
dec
push
cmpsb
dec
bound
sbb
fmuls
das
jg
and
inc
or
and
xchg
jge
enter
pop
lods
sbb
push
aam
gs
pop
loope
sbb
fbld
stos
xlat
pop
push
aam
lock
lods
or
jb
movsb
cld
mov
pop
jnp
and
inc
pop
outsb
pop
cmc
push
push
cmp
pop
lock
jnp
in
inc
stos
xlat
movsl
insl
and
popa
jge
std
cmp
movsl
lock
jo
pop
or
sub
pop
in
ret
stos
inc
mov
out
dec
or
repz
lds
or
in
ret
push
add
test
cli
xchg
lock
and
push
fcoms
ljmp
jecxz
sbb
adc
mov
mov
mov
dec
das
push
jp
insb
mov
push
dec
popa
mov
lock
imulb
mov
imul
mov
inc
jo
fistps
dec
mov
mov
sbb
cmc
sbb
mov
jno
scas
fnstenv
sub
out
lock
pop
out
xchg
xchg
pop
addr16
mov
jns
into
jge
add
mov
xor
sbb
pop
lods
lods
rcrb
std
adc
in
movsb
stos
dec
subb
mull
stc
lcall
fmull
inc
xor
jp
adc
jl
sarl
subb
inc
enter
rcrl
repnz
push
fwait
testl
sub
fnstenv
shrl
mov
sbb
jge
mov
mov
xchg
cmp
scas
orb
mov
loop
aad
popf
andb
aas
dec
adcb
inc
jp
jno
rcr
dec
fstl
cmp
popa
test
push
hlt
call
xchg
std
xchg
insb
fsts
pop
mov
loop
popf
out
pop
inc
data16
jns
scas
mov
push
fwait
jg
adc
mov
popa
cli
test
and
int
jb
dec
jns
xor
jne
dec
and
sbb
cmp
mov
outsb
inc
popa
pop
sbb
roll
jmp
mov
in
jge
ret
int3
cwtl
movsl
cmpsb
pop
xchg
mov
or
pop
mov
dec
mov
rol
mov
xchg
dec
and
cltd
scas
xchg
lahf
pop
xor
xchg
ljmp
sub
test
push
aas
adc
xor
shl
cs
gs
fnstenv
mov
outsl
fwait
mov
jp
push
adc
jp
pop
ficoms
xchg
mov
es
push
mov
pop
adc
jge
xchg
cmp
pusha
or
cmp
jne
adc
daa
jo
das
imul
test
lock
jns
mov
repnz
test
xor
add
int
mov
mov
sub
inc
adc
fwait
iret
movsb
je
cmpsl
nop
mov
stos
sbb
mov
and
pop
cmpsb
xorl
or
xlat
inc
js
jp
loopne
scas
fistpll
out
and
mov
fisttpl
dec
mov
mov
sub
or
es
dec
jbe
jge
nop
stos
add
inc
jns
mov
mov
aam
cmp
adc
loopne
cwtl
jl
xchg
xchg
outsb
es
lret
mov
lahf
jmp
add
je
mov
sub
bswap
loop
repnz
add
aaa
adc
mov
and
jbe
push
jge
les
xchg
mov
and
or
mov
ljmp
aam
xlat
scas
mov
jno
xchg
in
xchg
fs
fiadds
jecxz
fwait
jl
mov
dec
mov
cmp
inc
shll
sub
push
inc
sub
loop
pop
fcomps
xchg
jns
mov
mov
dec
push
lods
jg
sahf
sahf
cltd
cltd
xchg
xor
cs
and
adc
inc
leave
add
pop
test
hlt
icebp
std
push
xchg
sbb
sarb
imull
mov
mov
cmpb
mov
fildll
mov
push
push
lret
fwait
pushf
iret
outsb
inc
pop
out
push
leave
pop
scas
iret
dec
pop
mov
sub
sub
inc
popf
es
xor
pop
mov
out
push
mov
xchg
and
push
cwtl
adc
je
out
lods
fisubs
mov
jg
dec
das
insl
push
jns
push
inc
fcoms
cmp
and
mov
movsl
add
sub
xor
sbb
in
sbbb
pushf
or
aas
aad
inc
ja
pusha
in
mov
dec
cld
out
sbbb
and
icebp
xchg
and
stc
add
mov
add
xor
pushf
loopne
rol
pop
fs
lret
jae
addr16
je
cmpsl
inc
aaa
cmpsb
adc
arpl
mov
int
mov
ja
sbb
dec
fdivrp
shr
stos
stos
cmp
mov
mov
and
xor
daa
inc
and
and
inc
jp
int
pop
cld
cmp
fmulp
mov
rcr
add
nop
inc
movsl
and
sbb
xchg
jnp
push
inc
imul
xor
dec
cmp
icebp
or
and
push
jge
jno
dec
mov
pop
and
pop
fistpll
add
jge
cmp
addr16
push
jne
fs
fisubl
inc
add
imul
test
aad
repnz
cs
mov
mov
push
test
xor
clc
fidivrl
fldt
or
xor
jns
cmc
sub
pmaddwd
pmaddwd
fucompp
mov
leave
or
fbstp
stc
sub
inc
xchg
dec
and
fstpl
loop
mov
not
movsb
jno
add
test
xchg
in
test
add
push
mov
inc
imul
inc
or
lods
lcall
push
sub
in
lds
xchg
adc
insl
push
stc
dec
adc
inc
lcall
cmp
adc
pop
imul
add
mov
sti
lods
test
sti
xchg
pop
dec
ror
pop
push
roll
pop
xchg
xor
imulb
std
cmpb
jl
sub
jne
mov
pop
xor
push
test
mov
xchg
inc
shl
jnp
icebp
push
add
xchg
outsl
cmp
and
push
in
jg
mov
push
jno
mov
jl
xor
into
xor
lock
inc
jns
sub
dec
push
sti
adc
repz
pop
mov
sahf
scas
push
xlat
inc
aam
movsb
inc
jo
sbb
sbb
out
mov
jl
mov
sbb
fdivs
and
into
mov
adc
add
cmpsb
jae
lret
lret
in
jl
dec
aam
mov
mov
test
push
jl
ljmp
jo
repz
icebp
mov
scas
jae
cmp
sarb
mov
pushf
call
add
mov
movsb
es
iret
pop
xor
push
sahf
inc
jmp
cmc
sahf
dec
dec
nop
mov
xor
mull
in
sarl
mov
xchg
lds
aam
rcrb
and
jp
lret
insl
pop
sub
sub
test
hlt
stos
jecxz
mov
sbb
jecxz
js
ret
pop
imul
idiv
dec
xchg
cmc
xor
arpl
dec
adc
mov
or
sub
mov
cli
ja
call
sbb
inc
dec
leave
adc
push
int3
in
testl
mov
xor
test
mov
shll
mov
sarl
mov
xor
pop
sub
subb
and
mov
sub
enter
out
stc
push
movb
inc
jb
add
xchg
ljmp
xor
xchg
xchg
mov
hlt
inc
add
inc
imul
js
pop
and
les
in
inc
dec
subl
pop
pusha
sub
mov
fadds
dec
add
inc
sub
rcr
push
push
clc
sbb
lahf
div
aaa
sbb
sub
mov
imul
out
pop
fcoml
mov
mov
int3
or
iret
ljmp
jb
jle
xchg
xor
stc
jmp
bound
adc
pop
sub
out
repz
jl
cwtl
sub
dec
inc
xorb
add
jmp
inc
dec
xor
xor
aad
mov
arpl
xor
xor
sub
ficompl
int3
sub
adc
lcall
xchg
insb
inc
cmpsb
iret
sarl
insb
pop
clc
pop
mov
or
mov
pop
subb
push
pop
xchg
in
ss
jne
cli
lea
xchg
push
repnz
sahf
pop
sub
cmpsl
mov
ss
enter
add
aaa
push
xchg
pop
iret
lea
or
cmc
aad
cmpsl
add
sbb
dec
xorb
sbb
sbb
dec
hlt
fs
adcb
or
xor
mov
je
aaa
imulb
aad
jnp
adc
mov
adc
idiv
xor
mov
pop
call
addr16
mov
xchg
sub
insb
hlt
inc
push
mov
es
pop
out
mov
lea
addr16
xchg
sub
xor
dec
lods
sahf
repz
rol
mov
sarw
std
inc
cli
sub
sbb
idivl
mov
loope
pop
fcomi
imul
pop
jl
sbb
mov
cltd
xor
dec
and
mull
repz
pop
roll
mov
imul
pop
sbb
loopne
push
push
out
out
mov
dec
xchg
xor
and
sbb
outsb
lds
push
inc
sub
or
push
cmp
iret
cmpsl
pushl
cmpsl
jmp
cmp
fdiv
xlat
aam
inc
lahf
sub
sub
aam
push
fstpl
add
pop
dec
in
cmp
fwait
mov
jo
les
cmp
jo
mov
inc
jmp
cltd
add
push
fsubrl
mov
lds
test
dec
lret
dec
sub
sbb
mov
aam
jl
stos
jo
or
inc
jle
jno
inc
adc
adc
lock
test
lods
icebp
pushf
add
stos
ret
in
out
out
cltd
cmpsb
adc
packuswb
xchg
or
jge
ljmp
add
xchg
shlb
xor
xchg
imul
sbb
scas
push
sarb
ja
and
xchg
fldz
ss
mov
jge
decl
cld
sub
xchg
loopne
test
mov
imul
je
jbe
enter
int3
mov
test
add
push
enter
jp
xchg
fistl
mov
fwait
adc
aas
or
cwtl
enter
mov
ret
scas
jl
ss
add
xor
nop
pop
mov
jae
aam
aas
out
jmp
outsl
or
out
add
adc
shrl
lods
sbb
push
repnz
stos
mov
nop
add
mov
icebp
adc
dec
outsb
pop
clc
inc
out
clc
test
imul
in
push
bound
leave
adc
and
mov
xchg
cld
loope
sub
outsl
movb
insb
cwtl
fmull
jecxz
jae
add
mov
cwtl
sti
movb
mov
loopne
test
test
mov
movsl
xor
mov
cmpsl
sbb
daa
and
jp
cltd
hlt
in
sbb
sbb
popf
dec
decb
enter
fcoms
adc
ficompl
pop
jg
cmp
sub
mov
ds
sbb
scas
sbbb
les
fst
fsqrt
adc
dec
loope
cmc
xor
fcompl
sbb
mov
push
rcrl
or
test
and
movsb
push
sub
pop
push
or
fnstcw
pop
mov
adc
or
xchg
repnz
dec
xchg
pushf
outsl
imul
fisttps
cmp
mov
mov
xor
sti
xchg
fs
out
inc
fwait
cld
sub
jno
sub
pop
fisubl
dec
cmp
insl
mov
push
pop
jo
or
dec
inc
pop
push
into
mov
inc
add
jae
repz
cmpsl
inc
inc
cmp
stc
sbbl
loope
dec
imul
scas
mov
ret
inc
cli
fwait
xchg
testl
lds
xchg
shl
mov
clc
aas
mov
pop
push
mov
mov
pop
ds
pop
cli
cmp
rorb
mov
scas
mov
loope
testb
aaa
sbb
push
stos
out
fmull
addr16
mov
pop
adc
popf
pop
mov
fidivrs
in
mov
dec
insl
outsl
in
orl
sbb
jg
add
jae
cmp
lret
adc
sub
mov
repz
xchg
dec
sub
lds
jo
pop
cmp
jecxz
mov
mov
sub
shlb
sbb
lret
into
adc
adc
dec
mov
les
mov
in
aas
adc
les
push
icebp
cli
stc
rolb
mov
testb
insl
mov
repnz
mov
inc
xlat
dec
fwait
mov
jecxz
add
push
rorl
fs
test
ficoml
hlt
lods
fildll
push
and
push
js
sbb
aam
mov
jnp
ljmp
push
inc
das
in
out
jp
push
add
lahf
inc
adc
fsubrs
lret
ret
loope
je
mov
pop
scas
aaa
sbbl
mov
lock
dec
test
rcr
fcmovnu
sub
cli
cli
mov
sub
jl
jae
daa
daa
sti
ds
ss
lret
imul
and
out
push
in
pushf
mov
test
aam
ljmp
push
cmc
xor
es
sub
incl
dec
mov
hlt
shl
fwait
mov
cltd
dec
fcoms
scas
test
mov
sbb
or
clc
loope
pusha
mov
outsl
sahf
fnstenv
jbe
jecxz
pop
xor
js
negb
inc
ds
lea
xlat
test
cmpsb
cmpsl
sub
jo
loope
ret
adc
inc
lods
daa
or
dec
mov
mov
bound
add
jecxz
jge
and
sub
out
mov
adc
jo
jns
aaa
mov
orb
cwtl
cmpsb
iret
push
das
movsb
sarl
aad
inc
xchg
jl
lds
sbb
je
xchg
das
out
jb
mov
mov
and
adc
dec
lods
sbb
sarl
std
jge
in
jp
test
jl
int3
push
lods
push
fistpl
adc
xchg
std
clc
or
xchg
rclb
pop
xchg
sub
sarb
sub
setno
addl
xchg
mov
cmp
xor
cld
test
mov
push
jbe
jbe
in
out
ficoms
repnz
loop
xor
ljmp
sahf
sub
jno
mov
xchg
xchg
add
inc
pop
ret
dec
lahf
roll
repnz
loopne
dec
xchg
mov
mov
fnstsw
dec
int3
mov
inc
xchg
loopne
out
and
fildl
loopne
hlt
cvtps2pd
jnp
rcll
xor
rcrb
cwtl
pop
cmpsl
cmp
mov
push
sbb
cmp
popa
movsl
rolb
imul
jl
and
outsb
xlat
push
push
xchg
xchg
test
ret
mov
inc
xchg
mov
mov
popf
add
sarb
sbbl
and
and
es
out
xlat
inc
aaa
mov
in
fstl
adc
xchg
sub
fldt
jp
jecxz
lahf
mov
cltd
push
mov
and
fidivl
insb
aam
ret
popa
dec
cmpsl
xchg
push
pop
mov
jb
lods
popa
mov
sbb
inc
or
pop
loop
adc
and
jnp
dec
jnp
push
nop
popa
add
int
in
out
out
aas
adc
dec
js
negb
repz
push
or
daa
jne
loopne
mov
mov
ffree
nop
out
jle
je
stos
cmp
xor
les
inc
dec
adc
cld
and
scas
inc
fimuls
ljmp
divl
sub
xchg
mov
lods
out
test
pop
stc
out
jge
or
xor
push
and
shlb
mov
jns
cmp
pop
jbe
sbb
outsl
adc
adc
shlb
inc
pushf
popa
sub
mov
call
add
mov
xlat
fstpt
cmp
cmp
sub
scas
and
sbb
or
dec
pop
push
cmp
test
pop
mov
repnz
or
out
mov
push
addr16
ficoms
std
dec
jge
mov
mov
movsb
aas
repnz
sub
push
fisubrl
xor
jmp
dec
inc
xor
add
in
cmpsl
arpl
mov
xchg
aad
cmp
add
out
enter
mov
sbb
lcall
rclb
mov
cmp
sub
repnz
leave
cmp
mov
leave
in
addr16
lods
mov
lcall
mov
adc
xchg
nop
data16
daa
sti
fadds
xchg
mov
aaa
mov
repz
in
sti
pop
jno
push
push
bound
sub
mov
jge
add
icebp
mov
sub
jnp
push
testb
xchg
es
call
icebp
ljmp
pop
xchg
jecxz
rorb
test
mov
daa
movsb
cli
xor
insl
lret
out
fcmove
inc
push
out
cmpsb
jns
cmp
push
jo
leave
sarl
xor
scas
les
test
sahf
pop
icebp
xor
sbb
fwait
jo
fdivp
mov
into
lcall
push
cmpsl
sub
incl
clc
fldcw
xchg
add
xchg
fwait
rcrl
pop
inc
dec
shll
push
jb
imul
loope
push
mov
mov
cmp
sub
out
enter
add
js
movsl
or
aam
in
loopne
mov
add
mov
pusha
mov
push
shlb
cwtl
imul
shrl
flds
stos
cmp
dec
lcall
lret
mov
cld
std
or
into
sbb
mov
iret
push
jnp
xor
xor
xchg
in
push
adc
jg
push
cmp
and
xor
stos
dec
jp
popa
fidivl
mov
outsb
cmc
movsl
xchg
stos
test
call
aad
negl
loopne
sub
mov
mov
jne
jae
sbb
jnp
cwtl
mov
sbb
cmpsb
insl
fxch
pusha
xor
sub
lds
dec
movsl
push
outsb
adc
jne
add
push
insl
mov
cmp
cmpsb
pop
cmp
and
popf
insb
mov
imul
xchg
pop
adc
inc
mov
pop
push
cs
pcmpeqb
out
adc
cmp
fs
xchg
mov
addl
jb
pop
hlt
out
or
gs
jl
cmpsl
xchg
adc
fimull
lret
out
into
bound
lret
pushf
and
in
aaa
xor
loop
mov
ficompl
xchg
pusha
inc
jmp
jl
jmp
push
inc
xchg
xor
je
insb
adc
push
adc
jbe
scas
jge
fiadds
shrl
sbb
sub
mov
mov
call
ds
or
ljmp
stos
push
xchg
out
testl
fiadds
dec
jbe
dec
add
mov
pop
sbb
jb
and
loope
adc
xlat
or
sub
lret
pop
lahf
mov
movsb
cli
jg
daa
ljmp
lock
and
dec
test
inc
cmp
pcmpeqd
pop
inc
jge
push
fcmovnb
jl
cmp
mov
sbb
pop
pop
repnz
rcl
hlt
and
data16
sub
out
push
pop
push
and
stc
loopne
cmpb
and
mov
xlat
ss
or
cmp
mov
mov
xchg
add
add
jl
sub
pop
xor
add
fisubrl
add
and
jmp
push
add
and
xchg
cld
and
mov
nop
or
es
xchg
hlt
xchg
mov
jae
hlt
sub
clc
sbb
std
jae
dec
outsb
fs
mov
mov
push
mov
inc
in
add
pop
ja
jecxz
adc
adc
xchg
cmpsl
lods
and
and
pop
fbld
adc
int
lods
repnz
mov
xor
loopne
inc
add
xchg
jmp
movsl
sub
pop
xchg
cmc
jb
in
int
mov
jl
and
or
mov
sbb
push
mov
inc
fdivs
popf
test
and
loopne
adcb
cmp
adc
cmpsb
adc
clc
add
mov
cld
popa
pop
sahf
sarl
push
pop
pop
mov
das
cld
cmpsb
xor
push
lcall
rep
out
add
and
imul
mov
andb
mov
push
lret
sub
mov
dec
add
aas
jg
int3
test
cmp
mov
nop
cld
or
inc
scas
adc
divl
jge
adc
jbe
sub
or
adc
dec
call
xchg
add
mov
pop
out
jecxz
lea
fwait
repnz
or
and
subb
mov
mov
cmp
inc
outsl
lret
in
into
dec
mov
js
outsb
jae
and
fldenv
inc
mov
mov
lret
push
or
mov
iret
fsub
pop
sbb
neg
addb
xlat
inc
fwait
pop
lcall
aas
sbb
xchg
ret
roll
sub
mov
mov
rorb
ret
and
lods
pop
cwtl
es
and
and
inc
sahf
filds
stos
aam
jo
jns
inc
dec
inc
mov
fcmovnu
pop
pop
scas
or
icebp
insl
cmp
sbb
jp
rorl
gs
push
leave
icebp
out
pop
mov
xchg
pop
aas
jl
and
aam
rcll
stos
dec
mov
mov
jns
push
std
sti
dec
sahf
stc
js
insl
mov
cmp
ds
fldcw
test
xor
fistpll
je
call
push
fdivrs
mov
push
xor
add
cli
shlb
movsb
mov
lret
add
js
sub
mov
add
mov
inc
xchg
insl
cmp
loope
out
addr16
cmc
mov
ljmp
lods
sti
mov
cmpsl
mov
jecxz
push
push
jnp
or
addl
gs
mov
arpl
xchg
rcrb
push
cwtl
mov
icebp
roll
jp
mov
cmp
mov
inc
movsb
es
add
sbb
inc
pop
enter
jl
imul
and
jbe
mov
xor
leave
fwait
sti
push
mov
iret
orl
dec
add
mov
cmp
push
das
popf
fmul
imul
cmp
jmp
sub
push
outsb
enter
push
int
movb
push
jecxz
lods
dec
pop
mov
mul
xchg
dec
xor
push
cmp
movl
aaa
fmull
mov
negb
xor
xor
mov
push
movsb
mov
shlb
pop
push
add
scas
adcl
push
mov
flds
adc
mov
xlat
call
cltd
std
adc
in
mov
jle
inc
mov
and
mov
es
pop
lods
clc
ret
add
sahf
pop
popa
xchg
sbb
fwait
int3
sbb
hlt
aad
addr16
movsb
push
insb
in
adcb
mov
xchg
sbbb
out
or
push
loopne
adc
mov
clc
cmp
popf
add
aas
mov
mov
xchg
dec
fwait
hlt
sub
enter
ret
pushf
mov
sahf
jns
stos
push
mov
push
je
fwait
add
adc
jo
scas
cmpsb
mov
int
adc
mov
movsb
lret
mov
jge
pushf
push
pop
stc
lods
dec
pop
popl
add
aam
inc
ficompl
mov
cmp
imull
or
mov
fcoms
fmuls
dec
addl
out
rcrb
xchg
test
icebp
adc
xchg
mov
fcmovu
loopne
mov
inc
xor
pop
or
xchg
in
jbe
add
mov
movups
lds
lret
inc
mov
xchg
sbb
pushf
das
add
push
fcompl
push
sub
iret
sbb
stos
sbb
sbb
lret
cld
sub
mov
pushf
call
addb
or
add
push
push
arpl
xor
cld
daa
ret
adc
addb
lret
xchg
xor
jno
lods
sahf
lret
pxor
inc
jge
cld
mov
lcall
xchg
mov
push
jne
and
mov
push
sub
xor
xor
ss
testl
inc
lock
ja
mov
lahf
mov
ficompl
mov
scas
cmp
add
fidivs
jno
loopne
lahf
push
cmp
shlb
push
fcompl
or
and
aad
mov
jne
or
dec
into
cmp
xor
fwait
ds
jno
fdiv
outsb
xchg
jne
loopne
lea
andl
icebp
pusha
movsb
sbb
push
aad
stos
pop
cmp
sbb
leave
dec
or
repz
jmp
inc
mov
adc
lds
stc
in
push
mov
mov
cli
ret
call
sub
stos
and
dec
mov
loop
fcmovb
push
mov
shll
push
jp
mov
sbb
les
int
arpl
xchg
push
pop
sub
inc
fidivrs
push
jae
push
xchg
adc
cmp
scas
mov
lcall
test
cmc
aam
pop
sub
jae
push
fst
imul
push
shl
xchg
stos
and
test
xor
mov
xor
dec
js
aaa
test
cmp
push
test
jecxz,pt
push
pop
fistl
push
inc
mov
imul
bound
mov
bnd
movsl
movsb
mov
popf
arpl
xchg
ja
xor
cmp
mov
mov
pushf
ljmp
loope
std
sbb
insb
aam
mov
aas
xchg
shr
sbb
push
mov
enter
arpl
sbb
xor
pop
bswap
idivb
lock
popa
rep
mov
test
or
mov
dec
add
inc
mov
push
insl
mov
mov
push
xor
sahf
dec
aad
fnstcw
adc
leave
push
mov
rcrl
lcall
addl
adc
xor
pop
pop
and
movsl
inc
loop
lock
lcall
mov
pop
iret
push
xchg
push
adc
into
cmpsl
mov
mov
add
dec
xor
lds
es
sub
fsubl
dec
xchg
loope
jp
mov
sbb
movl
jle
xchg
aaa
into
or
mov
fdiv
pop
test
jns
and
inc
insb
gs
lods
mov
xchg
mov
xor
adc
jmp
movsl
mov
cmp
nop
sbb
out
cli
test
jmp
and
xchg
mov
test
jbe
pop
ret
xchg
pushf
cmp
pop
lea
insb
mov
mov
lea
xor
in
lret
xchg
cld
mov
loopne
lret
or
adc
pop
aaa
ret
adc
scas
test
aas
dec
mov
int
out
ja
jno
xchg
xchg
cmpsb
in
aam
imul
sub
ljmp
movsl
xchg
dec
call
sbb
sub
xor
jo
ja
pop
shll
jecxz
mov
jl,pt
pop
mov
xor
imul
push
or
push
adcb
repnz
jge
in
cmp
data16
pop
dec
push
test
out
ljmp
fstpt
fidivl
fisttps
test
adc
shrb
in
scas
add
sub
lds
fwait
popf
lahf
imul
inc
in
mov
movsb
mov
cmp
jb
fnstenv
and
push
add
movsb
mov
adc
out
add
mov
lret
int
mov
pushf
sbb
dec
shrl
aas
loope
sbb
dec
jb
gs
inc
cltd
adcb
mov
daa
iret
mov
fidivrl
imul
fstps
adc
bound
pop
dec
lds
add
cbtw
mov
jl
mov
cmc
jge
mov
out
cmp
xchg
pop
push
fistpl
add
movsb
sbb
dec
ret
ss
mov
push
adc
in
xchg
inc
nop
pop
cmp
sub
js
fildl
or
fwait
or
lods
add
mov
repz
and
jmp
or
xor
sub
inc
div
mov
stos
outsl
das
sbb
mov
jmp
cmp
fbstp
inc
lret
push
fsubrl
imul
pop
filds
jnp
mov
lahf
sub
jl
out
sbb
gs
pop
push
je
dec
sub
adc
cmp
dec
pop
imul
adc
mov
push
std
cmpsl
fstpt
mov
mov
test
jne
dec
sub
pop
enter
sbb
lret
adc
cmp
xchg
bound
in
mov
insb
add
adc
mov
mov
mov
lods
xor
mov
or
jne
add
adc
push
or
sti
push
fidivs
in
add
ds
or
les
fisubs
daa
mov
mov
pop
xor
andl
rorl
test
mov
jle
cmp
in
cs
sbb
push
out
sbb
arpl
jne
pop
jne
and
mov
inc
sbb
popf
inc
cmc
mov
mov
ret
cmpsb
xor
in
or
or
mov
xlat
fldt
mov
out
pop
mov
push
jb
inc
cmp
inc
or
and
ret
push
enter
mov
test
mov
xlat
inc
inc
push
push
jns
add
daa
cwtl
mov
or
inc
pusha
aas
leave
movsb
pop
je
mov
outsb
jle
int3
lea
xchg
jp
addr16
mov
int
addr16
cmp
enter
scas
add
fsubs
and
jp
pushf
lahf
movsb
push
mov
cmpsb
stos
inc
dec
lret
insb
mov
xchg
rorl
fsincos
test
inc
cmp
outsb
loop
lret
or
enter
jl
ss
cmp
sub
pusha
ljmp
data16
sub
subb
bound
out
jecxz
add
jno
dec
push
cmp
cmpsl
das
push
mov
mov
jne
cmp
jge
dec
test
repz
pop
rcll
bswap
mov
or
xchg
into
insb
or
lret
jp
add
sub
xchg
push
outsl
pop
mov
sub
pop
cmp
ljmp
repz
adc
mov
push
outsl
sub
repnz
addr16
mov
push
ss
out
fdivs
loope
lea
mov
adc
mov
inc
repnz
das
mov
add
fcmovnb
pop
aam
or
test
data16
inc
lods
push
add
jecxz
andl
dec
jp
ja
mov
movsb
inc
dec
test
or
addr16
insl
push
lss
nop
or
xor
mov
shlb
sbb
in
sub
cli
mov
data16
push
push
or
add
ficoms
repnz
shl
and
pop
push
mov
pop
test
mov
rcl
inc
sub
mov
jo
xorb
movsb
push
mov
outsl
push
xchg
and
arpl
pop
xrelease
mov
test
xchg
mov
pop
rcrb
movsb
mov
and
insl
mov
inc
mov
sub
push
cmp
vmread
push
and
jmp
sbb
outsb
insl
stos
xorl
mov
sahf
pop
aam
or
cld
jns
push
adc
mov
sbb
push
and
mov
xor
push
das
mov
xor
dec
xchg
cltd
les
inc
addr16
fcomps
cmpsl
mov
leave
mov
adc
push
cmc
pop
mov
and
int
icebp
aaa
test
sbb
add
pop
push
and
out
or
cmp
sbb
pop
mov
push
xor
dec
jbe
data16
inc
ljmp
outsl
jp
and
mov
mov
xlat
mov
dec
inc
mov
mov
imul
out
int3
inc
out
adc
fst
cwtl
add
sub
sbbb
pop
ss
stos
dec
mov
test
sbb
sub
popf
mov
jbe
imul
call
sub
cmp
xlat
push
and
inc
xor
adc
adc
test
mov
dec
sbb
push
mov
jmp
cmp
or
fstpt
stos
or
movsb
enter
pop
xor
sti
push
mov
cmp
icebp
sbb
pop
scas
imul
jge
mov
sbb
incl
dec
lret
bnd
mov
imul
mov
lods
jp
xchg
and
fs
jle
sub
sbb
fs
pop
movsb
dec
test
jge
loope
mov
jge
and
js
hlt
add
mov
hlt
ret
int3
add
pop
mov
jle
shr
adc
lret
xor
enter
and
xchg
jbe
mov
mov
or
ss
pop
dec
push
push
mov
imul
add
movb
scas
sbb
insb
fcmovne
rcrl
add
cmp
ret
leave
test
lcall
imul
lods
sti
cmp
loop
inc
mov
js
cmc
outsl
test
dec
xchg
xor
cli
jae
nop
cmc
loop
xor
mov
fwait
repnz
mov
mov
push
mov
jle
mov
addr16
jmp
cmp
push
fiaddl
std
stos
pop
js
scas
xchg
ljmp
cmpsb
mov
jae
jo
aaa
icebp
and
mov
add
push
lods
push
xchg
push
scas
push
sub
inc
out
cmp
jg
js
xchg
adc
and
cmp
lds
adc
out
cmpsl
addr16
lods
push
xchg
dec
dec
js
adc
sarb
or
call
push
add
cmp
pop
cmp
inc
push
push
and
pusha
repnz
cmp
hlt
and
push
rolb
pop
cmpsb
xchg
dec
clc
sub
xchg
es
test
insb
sub
test
pop
add
mov
stc
in
xchg
mov
pusha
das
outsb
inc
in
xor
idivl
or
nop
mov
pop
pushf
int3
shll
dec
fsubs
inc
or
dec
ds
sub
sbb
pop
icebp
fiaddl
shr
pop
mov
pop
out
mov
js
jbe
sbb
or
stos
or
fwait
sub
mov
pop
call
mov
out
add
test
cmp
hlt
pop
rcrl
int3
sub
mov
pop
adcb
sbb
mov
sub
mov
jge
div
stc
dec
add
pushf
xor
shr
das
push
inc
int3
mov
push
test
cs
add
jo
xchg
dec
push
push
test
cmp
leave
shrl
pop
int3
std
popa
leave
rorl
pop
push
adc
fimuls
popf
push
sub
mov
inc
sub
mov
clc
mov
sbb
mov
push
imul
mov
mov
pop
ror
mov
clc
gs
mov
and
xchg
pop
push
mov
movb
andb
add
mov
rorl
mov
shlb
mov
loop
rorb
jne
pop
mov
shr
and
or
lret
xor
jo
popa
xor
mov
dec
aaa
dec
shlb
in
xchg
shlb
or
cld
sbb
mov
add
push
add
stos
addl
pop
xor
jl
and
sbb
push
mov
xor
push
into
push
dec
push
sub
inc
les
fsubrl
repnz
xchg
mov
or
out
nop
loopne
mov
divb
das
sti
fimull
sbb
rclb
mov
push
pop
add
aad
iret
shlb
mov
dec
orb
leave
cld
mov
jo
flds
mov
sbbl
mov
into
inc
jp
jg
push
clc
mov
div
cmp
jecxz
popf
mov
iret
cltd
call
xor
enter
dec
test
sub
xchg
lahf
pop
cmp
enter
xlat
cs
and
push
idivl
shll
jle
xlat
gs
lods
dec
cmpsb
in
sub
div
cli
out
pusha
and
jo
inc
movsb
push
adc
add
jge
dec
mov
addb
mov
or
stos
jbe
pop
aaa
movsl
call
push
fldl
int
aas
in
jmp
roll
inc
in
dec
jne
lret
or
test
push
jmp
scas
mov
loopne
repz
mov
push
in
or
mov
pop
xor
mov
sbbb
pop
fcomi
imul
push
push
mov
cs
inc
jnp
jle
add
and
lds
cmp
roll
push
sti
dec
enter
mov
test
aaa
sbb
dec
xor
cmp
xchg
mov
pop
push
xorl
arpl
push
lods
movsb
mov
ret
adc
dec
fbld
xor
mov
mov
dec
shrl
or
ljmp
sub
repz
imul
cltd
repnz
or
addr16
sbb
and
push
mov
test
mov
add
ficoms
or
out
jae
insb
pop
xorl
pop
popa
addr16
repz
cmp
push
dec
sub
into
cmp
adc
adc
mov
jae
adc
inc
rol
dec
jp
xchg
hlt
addl
fwait
jmp
pop
call
or
xor
mov
mov
xchg
lods
and
push
daa
jge
xor
xlat
or
or
add
repz
mov
jle
add
cwtl
cld
data16
cltd
cmp
stos
outsb
fsubl
out
out
adc
clc
inc
movsl
call
loope
cltd
fstl
and
aaa
loopne
scas
leave
testl
dec
loop
inc
cmpb
mov
or
sbb
js
push
sbbb
cmp
out
sbb
rcrl
sbb
movsl
adc
movsl
icebp
add
mov
pop
mov
xor
call
cmp
push
fs
and
daa
and
aam
outsl
and
shll
sbb
stos
mov
or
xchg
arpl
jl
out
insb
addr16
sarl
fwait
idivb
sub
pusha
xor
std
ret
xchg
inc
add
ds
push
mov
sbb
xchg
daa
ret
lcall
js
mov
xchg
sub
mov
aad
fcomps
addl
and
pop
pop
in
in
pop
inc
xchg
jb
popa
xchg
push
repnz
cli
lea
mov
bnd
fadds
lea
push
or
in
stc
mov
xchg
push
adc
mov
cld
pop
cli
insl
mov
inc
call
movsb
repz
lcall
fcmovne
stos
push
mov
in
cld
mov
pusha
push
aas
push
shlb
push
mov
inc
cmp
addb
xchg
inc
fcoml
jge
mov
pop
xor
lret
cwtl
cmp
neg
dec
or
shll
pusha
dec
or
stos
xchg
dec
adc
pop
xchg
adc
scas
in
sub
out
pop
add
mov
pop
leave
push
cmp
pop
inc
inc
fistps
test
out
pop
jmp
dec
xor
adc
mov
movl
call
mov
push
jmp
fidivl
cmpsl
or
rorb
cs
je
in
add
mov
repz
mov
sbb
xchg
xorb
das
mov
fnstsw
leave
add
jne
adc
pop
outsl
sbb
adc
mov
sbb
push
jg
cltd
fs
stos
rorb
lds
arpl
mov
cltd
pushf
roll
movsb
mov
lret
fmul
push
inc
fists
jbe
cmp
lock
cmp
cld
sahf
push
shll
sub
mov
inc
pushf
sbb
icebp
testl
fisttps
or
push
and
lods
aas
sarl
aaa
or
insb
rorb
arpl
or
stos
add
mov
shrb
or
dec
mov
cmpsl
orl
jg
es
cmpsl
jl
xor
test
iret
adc
jp
pop
bnd
or
dec
xor
pop
es
mov
js
and
cmp
sbb
scas
sahf
add
or
xlat
mov
mov
sub
mov
ret
push
inc
or
adc
push
or
inc
nop
mov
ror
xchg
out
mov
test
or
push
jp
jbe
rol
testl
and
sbb
mul
and
mov
cmc
scas
pop
and
xchg
push
test
fmull
jo
xchg
in
jo
inc
mov
inc
jp
mov
pushf
pop
shll
or
mov
dec
adc
pop
dec
mov
pop
notl
mov
mov
and
jb
jb
addr16
xchg
mov
ss
cmp
je
mov
lret
rolb
xor
cld
xchg
adc
inc
inc
into
inc
push
out
mov
sbb
jb
jl
push
stos
sahf
das
outsb
sub
movsb
cmpsl
push
sarb
inc
mov
incl
jo
cmp
xchg
adc
inc
mov
xchg
pusha
xlat
pop
mov
push
cmp
dec
xlat
dec
inc
inc
push
mov
dec
scas
lcall
push
scas
inc
push
cli
inc
stos
into
ja
inc
jl
mov
loopne
jp
or
ds
adc
adc
mov
rorl
sbb
stos
xlat
mov
mov
lret
add
ljmp
fcomps
and
mov
sub
je
enter
pop
cmp
stos
and
mov
adc
nop
stos
rep
bound
ss
jmp
bound
push
xchg
iret
icebp
or
ss
vphaddubq
loope
in
mov
ds
cmp
addl
adc
loopne
mov
dec
int
jg,pt
repz
popf
push
or
xchg
int
lods
pop
mov
push
adc
jecxz
cmc
fiaddl
cmp
mov
jl
sub
out
movsl
loop
mov
dec
call
push
inc
or
jne
mov
daa
jle
add
sbb
mov
adc
cmc
in
mov
jnp
fildl
aam
cmp
mov
lods
sub
jo
bound
ljmp
cli
sar
or
lods
clc
xchg
xchg
mov
dec
loopne
pop
pop
stos
adc
in
retw
pop
inc
jle
iret
mov
adc
sti
ret
add
sub
mov
mov
push
push
test
inc
scas
enter
mov
mov
imul
daa
bound
sub
shrl
sbb
ficompl
out
js
sub
in
movsb
jl
js
mov
sub
stos
into
jae
jle
lahf
repz
push
sub
add
mov
data16
push
iret
std
out
cltd
aam
sbb
cli
std
gs
inc
subl
test
insl
cmpsl
push
aas
ret
in
lcall
hlt
sbb
dec
jmp
scas
fistl
int
cmp
lahf
in
sub
lock
add
mov
push
sbb
xorl
sbb
push
jg
outsb
fcomps
int3
push
push
ss
add
jno
inc
dec
rcrl
xchg
int3
fildll
lock
add
sbb
jmp
xchg
xor
repz
decl
shlb
push
insb
fdivs
cmp
and
add
out
sub
mov
test
dec
imul
xchg
test
xchg
mov
lds
xor
pop
and
in
jg
cmp
loop
in
jns
xchg
les
pop
sbb
add
int
dec
stos
and
ja
dec
push
stc
loope
cmp
cs
lret
and
in
add
push
cmpsl
and
aad
in
sbb
rol
mov
icebp
sub
jge
and
mov
leave
or
call
push
jg
dec
lock
testb
pop
insb
ds
into
inc
xchg
pop
push
mov
mov
scas
shrb
and
jbe
rcrb
in
int
popf
int
rorb
cltd
icebp
dec
lcall
sbbb
or
icebp
into
cmp
xchg
mov
adc
into
sbb
out
push
imul
out
flds
fiadds
icebp
gs
std
ss
xor
xor
xor
push
outsb
nop
mov
cmpsl
in
inc
popf
pop
fidivs
cli
test
cmpsl
jo
push
das
hlt
mov
pop
lock
mov
sub
sub
cmp
loope
xor
push
test
mov
lret
loope
dec
mov
jge
jle
fmull
or
clc
test
aas
std
and
nop
mov
test
mov
pop
arpl
push
mull
insl
addl
xchg
fdivrl
mov
mov
mov
rcrb
lret
ljmp
clc
iret
jg
jmp
cmp
lahf
jne
jbe
sbb
call
pop
clc
add
int3
adc
bound
adc
leave
js
mov
frstpm(287
or
and
in
and
mov
jae
pcmpgtb
mov
insl
jns
addr16
mov
rorl
out
jle
notb
arpl
clc
mov
and
cmp
jle
jne
icebp
jmp
fldcw
insl
jmp
pop
test
shrb
sbb
dec
and
push
fs
mov
push
inc
cwtl
sbb
mov
cmpsb
aaa
xchg
sub
mov
dec
cmp
bound
push
mov
xor
data16
xchg
call
test
sbb
shlb
les
mov
popf
rclb
stos
xchg
std
inc
xor
jae
xchg
adc
inc
stc
fwait
inc
scas
mov
dec
mov
push
xor
mov
push
inc
jmp
int
or
in
adc
ljmp
cltd
add
xchg
repz
adc
stos
or
sub
fucom
push
repz
add
adc
pop
scas
push
mov
jge
cwtl
insb
xchg
fmul
scas
inc
ret
mov
sbb
add
or
mov
nop
pop
in
divb
movsb
push
or
or
jae
or
ss
lods
lds
add
repnz
push
inc
sub
popf
push
jno
dec
out
movsb
jge
js
test
hlt
fisubl
lret
and
lods
mov
stos
cltd
lea
mov
enter
rclb
adc
std
lgs
mov
iret
in
lcall
cmc
fistpll
es
popf
inc
mov
loop
mov
pop
setns
fcmovbe
inc
jo
inc
sbbl
shlb
mov
push
in
stos
int
lret
cwtl
mov
mov
daa
mov
nop
mov
rclb
fisubl
aad
jle
and
movsb
or
addl
dec
or
lds
arpl
les
in
pop
inc
scas
adc
jnp
dec
or
sub
test
leave
pop
xor
mov
sahf
xor
jnp
add
clc
bound
mov
xchg
sbb
add
xor
push
insl
mov
jne
ret
pop
sbb
lret
scas
xlat
jl
gs
pop
push
mov
pop
pop
orb
or
scas
cmpsl
incb
clc
cmp
mov
aas
shlb
lret
mov
or
mov
jne
mov
mov
sahf
xchg
pushf
cmpb
dec
scas
and
dec
dec
jmp
stos
lret
les
icebp
fisubrl
xor
addr16
pop
adc
inc
loop
pop
pop
cmp
and
mov
xlat
aad
fmuls
dec
add
inc
in
xor
xorb
std
lret
inc
cmp
xor
mov
imul
pop
scas
bound
adc
mov
xchg
mov
cmp
mov
aad
adc
aam
stos
inc
mov
pxor
insl
xor
sbb
sub
ret
pusha
mov
cmp
inc
jne
dec
xchg
dec
mov
pushf
inc
lret
in
pop
mov
push
test
sbb
bound
or
pop
subl
out
out
or
adc
nop
jns
lea
adc
ja
ret
stos
in
sbb
sbb
pop
repz
fcmovb
in
leave
mov
in
push
mov
in
push
adc
sbb
mov
jb
lds
sbb
adc
push
stos
ss
movsb
ljmp
insb
jl
cmp
cmp
xorl
mov
mov
pop
mov
insb
iret
sub
cmp
cmc
repz
or
repnz
sub
ret
pop
mov
mov
das
sub
adc
lods
loop
mov
push
popa
sbb
pop
sahf
lcall
mov
ss
cmp
and
sbb
jae
popa
mov
xchg
dec
scas
inc
inc
call
dec
aas
mov
cmp
mul
mov
iret
xchg
mov
scas
cmp
fldcw
ret
out
enter
sub
or
or
ds
out
or
mov
mov
out
shrl
sbb
lcall
adc
adc
mov
sahf
lods
shrb
xchg
pop
xor
stos
repnz
mov
xlat
fnstenv
mov
andb
fistpll
mov
test
xchg
mov
xor
idivl
out
les
push
sbb
data16
in
into
insb
cmp
mov
jg
pushf
gs
mov
notb
cmpl
and
iret
les
lret
stos
fs
shll
das
cli
push
rcll
adc
hlt
mov
sub
mov
mov
cmp
or
js
cmp
pop
imul
scas
sub
rcr
fisubrl
popf
in
sbb
aaa
ss
out
push
sub
or
es
scas
mov
and
dec
aam
nop
sub
sbb
ds
fiadds
inc
fisttps
out
fchs
adc
lods
push
cmc
ret
je
xor
jmp
xor
js
push
and
inc
sbb
sbb
mov
xchg
xchg
adc
sti
aam
or
jo
or
inc
mov
dec
lods
or
pop
add
icebp
or
fcomps
lret
idivl
ja
xor
xlat
adc
mov
cltd
sub
adc
or
pushf
inc
sbb
xor
push
cmp
insb
scas
cs
fucomi
cld
adc
frndint
fcmovnu
mov
jae
cmp
test
jecxz
and
jbe
loope
pop
lock
cmpsb
jo
push
mov
daa
in
sub
inc
sbb
outsb
add
push
scas
xchg
setg
jle
stos
push
mov
loope
test
sahf
imul
outsb
movsl
inc
add
mov
push
pop
into
cli
add
cmp
xchg
mov
and
mov
push
xchg
xor
adc
mov
adc
jne
into
push
es
loop
call
mov
sbb
repz
inc
in
test
dec
jg
or
outsl
pop
add
mov
clc
aaa
mov
fisubs
xor
dec
int3
adc
jbe
pusha
loopne
jecxz
xchg
jns
mov
loopne
aam
xlat
xor
mov
repz
and
lock
movsl
jp
outsb
jne
add
aaa
gs
fcoml
aad
scas
mov
and
cmpsb
data16
inc
push
fsubrs
outsl
mov
dec
pop
je
test
xor
test
mov
inc
push
pusha
mov
cmc
gs
in
mov
and
loop
nop
push
push
pusha
push
jno
and
push
mov
mov
mov
dec
jle
das
stos
cmp
adc
cmp
cmc
nop
popa
jno
pushf
mov
in
dec
call
pop
lret
push
push
inc
mov
push
sub
cld
jge
loope
lcall
aad
in
and
aas
out
dec
rol
insb
and
lds
xor
adc
in
sub
xor
cmp
sahf
push
in
xchg
lods
push
jns
push
inc
mov
mov
aad
sbb
clc
push
inc
push
mov
loope
adc
push
and
or
mov
xor
lods
xchg
cmp
dec
jbe
jecxz
lods
sub
jg
aad
mov
xlat
shlb
fwait
cmp
int3
sti
sbb
mov
and
out
aaa
jae
sti
mov
jb
ror
pop
inc
jg
push
call
pusha
test
sti
in
sbb
in
insb
mov
cmpsl
das
push
pop
pop
push
push
xchg
push
cmp
repnz
add
movsl
inc
cmp
les
fs
lds
aaa
call
sub
lret
dec
mov
and
push
add
or
out
mov
in
std
push
jno
xor
xchg
bound
sub
pop
adc
sub
mov
push
jecxz
int3
jno,pt
or
mov
lret
imull
loope
cmc
adc
dec
bound
xchg
xchg
mov
push
ret
push
aaa
loopne
xchg
jno
pop
push
and
incb
out
loopne
push
adc
arpl
xchg
mov
decb
jnp
xor
add
test
addr16
jge
add
xchg
out
rolb
and
mov
aaa
sub
lds
fs
and
mov
mull
dec
mov
ja
push
inc
popa
in
mov
jns
mov
and
bound
cmp
lds
mov
aas
shll
jl
dec
or
sbb
sub
mov
daa
mov
addl
adc
fwait
push
mov
cmp
fsubrp
inc
out
cmpsl
inc
xchg
mov
jp
fiaddl
jmp
fmuls
push
int
or
add
cld
adc
pusha
out
or
out
loop
lahf
or
call
cld
nop
push
mov
jge
cmp
iret
clc
xchg
test
imul
scas
inc
and
sub
addl
or
dec
or
mov
cmpb
jp
insl
push
mov
sub
push
sahf
imul
pop
push
mov
inc
rcrl
jmp
jno
pop
aam
je
adc
push
xchg
std
xchg
push
push
mov
jg
addl
bound
shl
fildl
jbe
xchg
insl
mov
popa
pop
jbe
jb
test
mov
sbb
repz
inc
and
jb
xor
aam
push
bound
insb
xor
sbb
fwait
lret
and
mov
rol
dec
subb
out
dec
lods
jns
sub
jge
xor
lret
mov
pop
icebp
fldenv
je
mov
adc
lret
stos
pop
lea
cltd
call
jbe
dec
ja
test
cmp
sub
sbb
xchg
sub
iret
addr16
das
lods
sub
fisttps
cmp
cwtl
repnz
mulb
adc
adc
xor
test
xlat
sti
adc
sarb
lret
inc
mov
lock
mov
cmp
scas
jns
xor
sarb
xor
jp
cmp
ficoml
xor
add
cltd
lock
cltd
xchg
bound
mov
jl
shrl
add
pop
push
aam
popf
adc
dec
mov
in
scas
in
sub
stc
jns
fdivrl
cmp
dec
nop
pop
stc
pop
sub
ljmp
sahf
jno
cmp
jle
stos
jno
cmp
icebp
adc
and
hlt
push
fbld
mov
dec
sbb
sahf
add
xchg
jecxz
roll
out
std
aaa
push
xchg
jp
sbb
fbld
lods
lods
xchg
sub
dec
sub
or
adc
dec
mov
mov
jg
popa
and
cli
aad
out
mov
push
xchg
fs
in
lock
xor
cmp
inc
xor
out
test
inc
jle
std
xchg
aas
push
out
pop
dec
lcall
aad
cmpsl
or
loop
inc
add
pop
pop
push
arpl
ljmp
loop
mov
nop
loope
clc
xor
test
push
test
insb
stos
insb
negl
fwait
data16
sub
xchg
jle
test
mov
cltd
mov
dec
mov
dec
or
sbb
pop
std
mov
xor
shl
fs
in
cmp
insb
push
in
je
insl
rcrl
mov
mov
insb
jo
xchg
movzbl
jg
jecxz
mov
pop
jo
imul
mov
aad
mov
ds
mov
xchg
mov
shll
outsl
lods
inc
cmp
leave
roll
push
xor
xchg
std
mov
arpl
insb
xchg
xchg
jg
popa
cmp
ds
mov
lods
mov
cmp
dec
fistl
jbe
push
jle
jne
cmp
mov
mov
imul
mov
aam
ret
fdivrs
scas
pop
mov
inc
sub
dec
jle
lcall
pop
shrb
adc
xor
adc
jae
pusha
pop
repz
mov
iret
out
outsb
pop
jg
call
sub
out
jg
loope
add
pop
fldl
mov
fadds
fucomip
mov
mov
pop
fisubl
add
sbbb
in
in
cld
rcl
jmp
xchg
call
cmp
shl
mov
adc
fmuls
out
dec
int
push
movlps
fmulp
mov
push
hlt
inc
mov
xor
xchg
sbbb
push
or
fcmovne
mov
push
lahf
not
add
bound
mov
xor
testb
aam
aad
pushf
inc
psrad
xor
jae
out
inc
xchg
mov
xchg
push
add
xchg
mov
push
add
dec
lock
les
xchg
and
and
ret
popa
sbb
and
sahf
orl
xchg
lret
xlat
cs
lcall
push
cltd
sahf
jge
mov
cmp
mov
test
xchg
test
inc
mov
cs
or
jle
hlt
mov
push
sarb
jp
pop
mov
sbb
and
jl
mov
stc
inc
aam
sbbb
pop
jbe
mov
int
mov
cpuid
cmpsb
test
gs
sbbl
mov
mov
xor
andb
jnp
pop
fs
xchg
sbb
mov
sbb
arpl
inc
push
and
jp
dec
push
out
sahf
popf
mov
in
out
inc
in
mov
insl
cld
jbe
xchg
and
add
mov
insl
push
or
push
cld
ret
mulb
enter
adcb
add
mov
push
stos
es
mov
inc
dec
jp
int
cmp
mov
in
push
jl
shlb
mov
mov
mov
lret
pop
stos
mov
arpl
imul
mov
jns
test
daa
insb
das
pop
daa
jle
cmp
aad
jp
ss
push
aam
mov
pop
imul
jne
pushf
inc
adc
call
xchg
sbb
and
hlt
fldenv
xchg
pusha
or
and
xchg
mov
push
mov
and
lods
aam
test
push
and
imul
pusha
jae
test
jg
sub
xchg
cmp
and
popa
aaa
ret
jns
test
sbb
pop
mov
js
xchg
push
jl
dec
idivl
cmp
ljmp
aam
add
add
imul
outsb
pop
push
dec
xchg
inc
pop
xor
inc
xchg
das
mov
imul
lret
jne
xor
push
and
adc
dec
mov
lcall
fwait
in
push
fdivp
inc
imul
jbe
xchg
movsb
dec
test
movsb
int3
out
sbb
inc
ffree
stos
pop
sbb
ss
in
sbb
mov
mov
pop
iret
and
push
icebp
je
ret
or
repnz
xor
into
out
mov
add
push
test
fwait
lret
mov
test
cmp
ret
push
pop
push
sub
inc
fists
imulb
mov
mov
mov
cmp
pop
add
lcall
jnp
dec
pop
xchg
add
cmc
mov
enter
aad
pop
xchg
dec
pop
gs
je
popf
movsl
aad
mov
cmc
inc
cmp
int
or
fisttpl
test
push
jmp
add
push
fwait
sarl
lret
inc
pushf
inc
xchg
push
scas
xchg
ret
fldenv
cmp
movsl
mov
inc
lods
testb
and
into
mov
inc
test
mov
in
mov
pop
dec
jmp
mov
push
mov
int
cltd
mov
xor
call
cli
xor
arpl
sub
pop
mov
xor
add
ja
mov
push
jno
call
pop
jae
dec
add
lret
push
push
or
or
test
jge
fwait
gs
out
inc
repz
iret
outsb
push
and
push
movsl
testb
mov
lods
stos
lods
lea
nop
fadds
out
iret
cli
xchg
jecxz
iret
cmc
add
dec
movsb
gs
pop
jp
les
shrb
cmpsb
cltd
mov
dec
negl
ret
pop
adc
cli
in
enter
pop
cld
adc
xchg
xchg
loop
test
adc
sbb
flds
addr16
in
or
or
and
repnz
iret
jecxz
pusha
add
lret
in
mov
or
std
scas
movsb
cmpsl
jno
fmull
sarl
cwtl
jmp
add
mov
push
loop
mov
sbb
inc
jle
aad
or
jns
adc
cmpb
mov
popf
popa
jae
pop
or
pop
cli
enter
jl
xor
jb
out
pop
xchg
insb
mov
or
test
test
mov
test
repnz
or
mov
push
push
and
les
add
bound
cmp
inc
out
push
out
push
adc
xor
xlat
dec
jmp
aaa
sbb
xor
mov
add
scas
jb
adc
add
in
inc
test
adc
repnz
or
mov
jo
push
lahf
mul
fistpll
jno
mov
pop
icebp
in
mov
hlt
adc
inc
out
out
pushf
lds
repz
pop
fdivr
aas
ss
popf
jns
bound
and
cmp
into
cld
out
ss
mov
aam
inc
fstpl
shll
add
lods
inc
rorl
xchg
cmp
out
out
rcll
sub
xchg
jo
cmp
hlt
adc
lock
jb
andb
scas
cmp
cmc
jae
cmp
insb
sbb
xor
xor
mov
rorb
inc
pop
loop
push
lret
xchg
daa
in
aas
mov
std
push
mov
icebp
std
mov
call
pop
pop
imul
aas
ja
mov
cmc
loopne
aas
call
mov
mov
hlt
test
xchg
dec
adc
daa
mov
daa
cmp
insb
cmp
iret
roll
fstl
xor
in
add
sar
push
in
mov
data16
jge
jmp
and
push
pushf
int3
push
xchg
mov
sbb
adc
inc
repz
adc
cld
adc
sbb
mov
outsl
mov
stc
jge
mov
fs
push
cld
mov
lret
rolb
mov
mov
cld
jnp
sbb
push
adc
lods
jo
push
mov
lock
xor
leave
sub
push
mov
xchg
add
sub
shlb
sub
test
mov
mov
daa
jb
ljmp
pop
mov
or
mov
push
xchg
add
iret
mov
loope
aam
loop
ds
jbe
paddw
inc
mov
mov
fmuls
cmpsl
shll
mov
jnp
loope
sbb
mov
sbb
dec
jmp
jge
popf
enter
mov
jno
leave
addl
repz
cmpsl
in
fiaddl
cli
aas
js
sub
pop
loop
push
out
outsl
fmuls
js
ss
xchg
adc
cltd
scas
pop
pandn
cld
icebp
jae
add
pop
mov
imul
flds
mov
xchg
lea
cmc
inc
sub
inc
fabs
psrad
cs
jp
rolb
push
leave
out
sbb
and
and
mov
fdivrs
mov
fsubr
or
mov
add
mov
dec
mov
mov
mov
jp
loopne
xchg
cwtl
sbb
mov
pop
add
insl
jp
jmp
sahf
adc
sub
xor
hlt
js
inc
test
mov
ss
pop
in
dec
stos
popa
pushf
ret
mov
push
dec
jecxz
iret
jne
jo
incl
les
popa
mov
push
int
add
mov
imul
adc
jle
out
stos
mov
cmc
and
sub
js
pusha
adc
lods
repz
je
icebp
lods
dec
or
or
clc
xchg
aad
filds
lock
jb
sbb
flds
mov
lret
xchg
or
jg
lods
je
mov
test
mov
pop
test
das
out
loop,pn
jge,pt
mov
xor
add
xor
mov
cmp
jle
aad
adc
lcall
ror
or
push
call
cltd
mov
cmc
and
or
sub
pop
xor
les
ss
inc
jbe
pop
jecxz
mov
xchg
movzbl
mov
shr
cwtl
ret
shll
push
fimull
imul
cwtl
arpl
imul
aam
pop
movsb
add
xor
cmp
insl
andl
and
data16
adc
pop
imul
mov
repnz
and
mov
xor
add
xchg
xchg
jns
mov
mov
ficoms
push
push
fwait
mov
cmp
repnz
sub
sub
fistps
shlb
pusha
incl
cmpb
scas
arpl
cmp
and
cmp
mov
cmc
pop
sahf
dec
popa
lret
in
pop
pop
and
inc
jge
scas
int
in
sub
int3
repnz
cmp
and
or
mov
mov
lds
sbb
rclb
std
mov
popl
push
std
movsl
fidivrs
imul
mov
sbb
inc
xchg
xchg
mov
inc
rcrl
xor
jl
push
dec
mov
icebp
negl
stos
jge
add
sub
adcb
cmpsb
sbb
cmp
jecxz
mov
add
faddl
sub
ror
leave
dec
and
jge
pop
insl
cmp
mov
push
gs
mov
jo
sub
stos
xor
and
mov
ret
xor
jo
mov
das
bndstx
or
dec
cmp
jnp
test
and
push
xchg
mov
daa
mov
and
iret
sub
lret
lods
pop
or
mov
inc
icebp
pop
pusha
jp
sbbl
in
push
mov
add
xchg
inc
or
loop
cmp
push
aam
jp
add
mov
push
cs
ja
inc
cmc
xchg
out
or
andb
outsl
dec
sbb
jle
jmp
jo
sub
test
push
jg
sub
fiaddl
scas
cmp
add
idivl
hlt
mov
sub
inc
mov
mov
sti
popf
push
sti
xor
popf
ficomps
or
mov
sbb
cmp
popa
mov
daa
out
imul
and
add
js
or
pop
push
mov
xor
dec
mov
mov
jne
jp
mov
mov
inc
rcl
cmp
int3
inc
loop
ljmp
test
jns
lock
cmp
mov
xor
mov
mov
aaa
pop
add
mov
mov
adc
push
lock
mov
sbb
pop
add
and
xchg
sub
jb
ljmp
fsubrl
pop
idivb
pop
sub
mov
push
adc
jne
aaa
fsubs
push
pusha
movsb
test
in
adc
rorl
arpl
into
popa
movsb
stc
jne
mov
jns
orl
scas
add
add
hlt
mov
jmp
rcr
imul
push
es
mov
jmp
jecxz
iret
push
dec
jp
popa
jno
shl
sub
xor
mov
out
xchg
inc
lods
mov
jae
mov
negl
jae
pop
sbb
andl
cmp
or
cmp
cmp
sarl
mov
enter
xor
pop
jge
mov
arpl
jns
ret
pop
dec
mov
sbb
dec
rcll
sbb
or
xor
pop
xor
pushf
fdivl
das
aas
das
out
inc
inc
out
push
iret
mov
sbb
inc
cmp
cmp
jle
insb
sub
inc
in
mov
adc
xchg
mov
dec
jno
sbb
jle
adc
lds
mov
pop
imul
test
cmc
rcll
jo
xor
adc
sbb
loopne
add
outsb
pusha
lock
mov
cwtl
mov
iret
shrl
ja
pushf
xchg
imul
adc
cmc
jmp
cmp
fwait
and
xchg
mov
mov
xchg
mov
sbb
push
lds
fdiv
and
mov
xor
ja
stos
sbb
pop
pop
inc
mov
int3
test
in
sbb
and
xchg
fildll
fstps
clc
pop
cmpxchg
jge
add
testl
popa
gs
jle
sub
cmp
sbb
mov
add
imul
leave
xchg
loopne
cmp
jp
scas
loope
mov
mov
and
repnz
lfs
mov
in
cwtl
stos
dec
push
cmp
mov
fidivl
icebp
push
mov
stos
xor
cli
leave
dec
shrl
ret
push
push
inc
xor
dec
fimull
sbb
lock
push
mov
jg
xchg
and
cli
shr
scas
mov
jmp
push
xorb
icebp
bnd
clc
scas
pop
shl
lods
sbb
xchg
test
inc
popf
mov
rcll
loope
ret
je
ret
cs
sub
ret
cmp
leave
pop
insb
mov
lods
in
push
stos
mov
push
sbb
cli
sbb
sti
jae
sub
lret
adc
adc
cmp
push
ffreep
ret
pop
adc
movsl
push
int3
repz
lock
jo
adc
mov
push
pinsrw
andl
push
cmp
sbb
mov
ja
scas
xchg
popa
pop
adc
cmp
jne
dec
mov
imul
shlb
mov
test
push
sub
scas
mov
xor
push
pop
pop
cld
stos
stc
xchg
and
jno
xor
sub
xlat
jmp
mov
mov
in
hlt
mov
fstpt
fcomps
cs
push
fsubrl
icebp
sbb
clc
fdivr
cmp
in
popf
mov
clc
xchg
push
sbb
sbb
in
stos
bound
hlt
jmp
jmp
loope
jl
cmpb
xchg
mov
cmp
sbb
call
icebp
push
add
cmp
adc
cmp
mov
xor
dec
lcall
lock
mov
pop
gs
fnsave
sbb
fdivl
movlps
jge
daa
mov
pop
je
je
mov
sahf
sub
pop
loop
inc
adc
loopne
out
pop
cmc
cmc
cli
mov
setb
imull
sarb
je
and
ja
test
jno
pop
inc
and
mov
mov
aas
divl
push
dec
das
jno
push
push
sub
loopne
jmp
aas
enter
cmp
aas
jb
dec
das
mov
add
inc
fistpl
insb
xor
cmp
lock
out
test
or
sahf
fdivrl
add
xor
push
es
cmp
jnp
xor
incb
fcom
inc
std
lcall
cmpsb
cmp
lcall
jl
jg
bsf
rol
cmp
cs
shlb
jle
fnstcw
into
out
sbb
mov
out
repz
subb
stos
pop
nop
fstpl
in
dec
movsl
jp
adc
cmp
or
and
jp
popa
lock
sbb
mov
pop
popa
mov
lret
mov
popf
push
nop
mov
stc
outsl
mov
sub
popf
and
and
movsl
lcall
sub
xchg
jle
xlat
jbe
js
or
adc
subb
pop
inc
je
xchg
insb
popf
insl
out
lret
adc
das
popa
test
leave
xchg
sar
jmp
sub
inc
dec
dec
xchg
imul
shlb
xor
xchg
ja
jl
cltd
lret
inc
dec
push
pop
cs
das
pop
xchg
and
dec
popa
cli
mov
mov
and
jmp
mov
dec
sbb
xchg
sbb
pop
dec
xor
loop
mov
sub
push
daa
push
jo
mov
mov
sub
cli
jle
stc
test
or
repnz
cmc
cmp
fstl
outsb
popf
aaa
mov
lret
jp
xchg
adc
pop
lcall
gs
adc
sbb
adc
out
test
adc
insl
push
lds
rcrb
sbb
sbb
lea
add
std
lods
ret
xchg
add
aas
mov
jp
insl
scas
gs
loop
push
xchg
out
pop
dec
push
mov
outsb
cwtl
les
popa
cmc
adc
xor
outsb
pop
inc
aas
leave
ret
icebp
inc
mov
dec
sub
rcl
mov
inc
imulb
ret
push
inc
adc
xchg
daa
push
cmp
adc
orl
pop
pop
mov
jp
xorl
push
pop
fidivl
and
jnp
mov
jb
scas
pop
ret
pushf
ljmp
mov
mov
stos
jnp
pop
adc
jns
mov
loop
pop
cmp
scas
nop
cmp
adc
aad
mov
inc
sub
jns
std
aas
jge
mov
sub
cld
mov
inc
js
xchg
data16
xor
arpl
arpl
mov
mov
adc
mov
imul
fistpl
popf
mov
mov
sbb
hlt
out
and
inc
mov
sbb
mov
inc
and
addr16
jecxz
outsl
mov
ret
jg
push
out
pop
clc
scas
jle
push
sarl
std
push
add
xchg
ss
xchg
cli
and
mov
mov
mov
shlb
dec
adc
lds
xchg
add
adc
push
loope
pop
testl
lahf
push
pop
jmp
sub
popf
cmp
stos
out
fmul
jae
jge
inc
adc
push
mov
leave
xchg
fsubp
fildl
mov
negb
mov
and
push
in
inc
add
insl
inc
es
inc
pop
icebp
inc
negb
sbb
movsl
iret
mov
repnz
push
das
out
sub
cmp
mov
out
ljmp
test
std
rcrb
pop
cmp
mov
out
pop
imulb
or
mov
adc
or
and
and
jle
popa
push
icebp
aaa
subb
jl
repz
lahf
jecxz
imull
mov
arpl
mov
repz
stos
mov
sbb
lods
xor
aad
mov
pop
sti
dec
mov
xchg
mov
pop
data16
loop
mov
or
cmc
or
repz
loop
arpl
xchg
push
and
sbb
insb
cmp
pop
jo
imul
data16
add
dec
in
pop
aaa
or
sbb
mov
mov
addr16
aam
pusha
cmp
stos
dec
jl
ret
add
mov
shll
aaa
and
xor
jns
test
and
xchg
xchg
fisubrl
sub
jae
xchg
and
int
lret
push
movb
jle
xor
sar
shll
stos
dec
lret
sub
arpl
mov
in
add
or
xorl
lcall
push
je
cli
xchg
sbb
ljmp
mov
and
int3
mov
mov
je
inc
adc
mov
push
sub
fwait
jge
cli
lcall
stos
jmp
push
js
dec
repnz
fidivrs
pop
xchg
cmc
xor
cmp
call
jmp
cmp
sub
inc
stos
add
pop
mov
sub
pop
sarl
sbb
ja
movb
add
mov
sbb
cltd
and
testb
xorb
push
pop
pop
mov
cmp
jp,pt
cmpsb
xor
pop
roll
mov
jle
shlb
mov
ret
mov
and
sub
mov
jno
pop
sbb
inc
stos
push
hlt
mov
xchg
add
out
in
dec
cmp
mov
pusha
dec
xchg
ret
fidivs
scas
push
addb
scas
lods
fisttps
pop
or
jnp
xchg
ljmp
pop
subl
xchg
pusha
add
mov
out
enter
dec
push
jae
bound
stos
call
dec
mov
pop
mov
lds
sbb
inc
sub
pop
or
pushl
cli
mov
inc
loopne
add
xchg
mov
xchg
mov
push
test
add
add
ret
out
dec
repz
jnp
pusha
cmp
mov
sbbl
mov
or
popa
cmp
pop
enter
dec
mov
inc
or
js
push
iret
in
mov
and
sub
subl
mov
xor
adc
xchg
or
repnz
fcmovnu
inc
cmpb
xor
cmp
or
lcall
adcb
out
sbb
sbb
mov
xchg
push
inc
popf
mov
fisubl
mov
lods
andnps
inc
in
test
or
and
mov
xchg
mov
jl
mov
push
sub
loop
pop
jo
or
dec
cmp
fwait
pop
cli
inc
pop
movsb
shrl
mov
icebp
pop
add
inc
mov
jmp
mov
in
pushf
enter
imulb
pop
ret
mov
adc
sbb
dec
aad
pop
inc
cwtl
jmp
cmp
pop
push
cwtl
pop
mov
repnz
std
fcomps
loopne
push
sbb
jne
je
and
lahf
adc
sbb
jne
and
push
in
xchg
cmpsl
or
fldcw
les
push
jg
jno
xor
dec
inc
or
lock
imul
cwtl
inc
ret
jmp
or
xchg
dec
and
data16
jecxz
mov
and
andl
div
cld
rclb
mov
mov
dec
in
ret
lds
adc
fisttpl
mov
adc
sbb
xchg
sti
mov
sbb
movsb
imul
imul
mov
loop
pop
stos
cmp
outsb
loop
outsb
rcr
jnp
out
mov
xchg
pop
push
push
andb
stos
in
int3
xor
stc
sahf
roll
shll
call
cmp
fsts
dec
lret
subb
adc
in
and
fdivs
std
leave
xor
jl
cs
sarl
or
or
imul
imul
loopne
lds
in
sti
mov
cmp
add
test
je
popf
xchg
ret
push
out
add
jecxz
pushf
inc
call
xor
and
subl
mov
push
and
jle
fsubl
xchg
fwait
dec
arpl
sti
mov
fstpt
mov
inc
push
shlb
mov
jp
roll
cmp
test
sbb
jl
sbb
movsb
sbb
push
fs
jns
imul
push
push
jo
push
mov
fwait
fs
aaa
pop
jmp
test
inc
dec
movsl
inc
cltd
lcall
and
mov
cs
add
aaa
sbb
sahf
mov
push
jno
cmp
jle
sub
cmp
or
jbe
test
mov
xchg
insb
push
xlat
pop
inc
mov
jg
sub
into
ja
movsb
mov
imul
scas
xchg
and
pop
lahf
and
add
leave
insb
pop
or
movsl
test
inc
xor
cmp
fisubrs
push
fwait
or
loopne
movsb
xchg
pop
jmp
xor
mov
sbb
lret
jecxz
push
xchg
pop
adc
mov
add
inc
mov
cltd
jbe
mov
inc
and
xchg
scas
je
mov
xor
das
stc
gs
out
imul
mov
hlt
sub
xchg
nop
xlat
xor
sahf
pushl
cmp
rolb
je
xchg
testb
or
and
jno
or
or
jbe
imul
inc
movsb
aas
in
xlat
test
movsb
ja
cld
add
xchg
add
push
fisttps
out
push
sbbl
cmp
inc
inc
mov
add
into
jg
pop
cmpsb
push
push
mov
xchg
stc
in
ss
rorl
sbb
sub
pop
cmp
repz
clc
pop
sbb
mov
std
or
xor
inc
stc
mov
mov
xor
cli
sbb
icebp
mov
push
push
cmp
jg
pop
or
lock
mov
jp
rorb
mov
lcall
aad
dec
loop
xor
fimull
dec
jno
jbe
cwtl
cmp
xor
jno
outsb
xchg
outsl
mov
dec
test
xor
mov
push
mov
out
adc
pop
xchg
movsb
pop
pushf
dec
and
pop
pop
imul
ljmp
xchg
out
mov
in
cmp
pop
in
cmp
jb
or
popl
xor
test
mov
sub
xor
add
das
mov
bound
in
sub
xchg
inc
sahf
icebp
lcall
es
add
jmp
mov
mov
add
cmp
jno
dec
push
mov
aas
xor
inc
movsb
adc
scas
mov
aas
add
jne
daa
adc
mov
movsl
aas
xor
and
xlat
sub
dec
sbb
popa
rcrl
cli
and
sub
icebp
das
js
sbb
adc
xor
fs
fimuls
and
cld
dec
push
scas
xchg
repz
popa
xlat
movsb
adc
ds
push
cmpsl
adc
jge
test
subl
mov
rcr
cwtl
jle
add
pushf
int3
push
inc
fisubl
or
push
jnp
cmpsb
addr16
js
pop
xchg
lds
mov
push
cs
jnp
or
push
mov
sub
adc
xchg
out
dec
imul
cmc
dec
in
xor
pop
jp
aas
xor
xor
repz
out
jmp
mov
imul
jb
jb
jae
xor
xor
add
and
mov
cmp
fists
xchg
mov
lock
adc
adc
push
fnsave
cmpsb
ja
or
shll
fwait
scas
sarl
out
lods
adcl
iret
cmc
rcrb
mov
inc
adc
lods
or
leave
add
inc
es
or
fnsave
in
int3
push
xor
add
mov
mov
dec
cmpsl
insl
ret
push
fistpl
xlat
xlat
pop
pop
lcall
sbb
sub
int3
push
and
and
jb,pn
into
dec
addr16
daa
test
jl
pop
pop
xor
mov
daa
ljmp
test
adc
popa
stc
repnz
daa
pop
std
pop
jns
pop
adc
pushf
cld
dec
and
mov
leave
jge
into
mov
test
push
jbe
inc
sub
sbb
push
inc
scas
arpl
add
sbb
jbe
lcall
jo
jb
nop
or
xor
push
jge
les
enter
aad
xor
pusha
and
adc
fistpll
xchg
add
outsl
data16
addb
xor
ret
out
pop
adc
stc
dec
sub
fs
push
loope
mov
leave
aam
aad
lock
ss
sub
icebp
repnz
test
mov
fsubs
clc
cmpsb
out
inc
call
xor
mov
imul
lret
mov
lret
and
in
int
enter
xchg
lahf
loopw
bound
outsl
sbb
xor
inc
mov
mov
loopne
imul
xchg
mov
jae
ss
jne
sbb
jp
jmp
js
cmp
and
rcrb
add
leave
adc
fdivrs
addr16
cmp
lods
lds
cmpsl
mov
ja
mov
cwtl
shrl
inc
in
out
aam
sbb
inc
adc
enter
js
push
stos
adc
mov
dec
push
adcl
popf
and
pop
dec
dec
rolb
pushl
lods
sub
lcall
or
pop
fdivr
and
int3
jne
xor
into
jmp
sbb
andb
in
push
dec
add
movb
sbb
add
aad
sbb
std
pop
imul
mov
dec
mov
cmp
rcll
cmp
jl
add
inc
and
pop
fimuls
fwait
in
jnp
bound
int3
bound
cltd
inc
cmp
cmpsb
repz
mov
mov
add
das
jmp
in
das
lcall
out
sbb
les
jge
fbld
les
fcmovu
sub
fdivrs
lea
jp
and
inc
add
lock
push
fs
int3
sub
popa
sbb
in
imul
xchg
mov
jne
pushf
in
and
stos
stos
or
ja
xchg
mov
les
mov
sub
insl
popf
add
sti
test
mov
dec
call
jp
test
or
cmp
repz
sub
mov
fs
ljmp
pop
and
das
dec
cltd
lock
insl
out
xchg
push
in
mov
pop
sbb
dec
jp
daa
xchg
cltd
or
das
mov
and
shll
cmp
mov
lods
xor
sub
outsl
and
in
rorb
dec
cltd
cmp
daa
sub
rorl
aam
das
mov
fs
ja
nop
inc
sbb
mov
loopne
dec
cmp
movsl
xor
ret
notb
xchg
sbbl
push
inc
or
inc
or
push
sbb
repz
inc
aaa
push
pop
fisttpl
scas
mov
repz
pop
imulb
cmpsl
sbb
out
jnp
insb
lock
movsb
and
add
not
popa
push
jge
ret
xchg
mov
fisttpll
push
bound
or
ljmp
xchg
and
ds
jl
inc
pop
outsb
add
or
std
xchg
and
outsl
inc
lods
cmc
mov
cmpsl
cmp
sbb
ret
xor
add
dec
mov
jge
and
jmp
jp
mov
mov
imul
daa
stos
mov
and
addb
push
mov
idivl
lds
cmp
push
jle
cmp
or
pop
gs
mov
add
pop
insb
mov
or
sbb
and
shlb
sub
mov
jmp
xor
or
dec
jo
pop
xchg
or
repz
mov
cmp
dec
inc
jle
pusha
repz
xor
mov
jp
daa
adc
pop
jno
cld
pop
push
out
mov
ret
std
xor
ret
xor
out
es
jb
and
pusha
sub
cltd
imul
cmp
addr16
rcl
dec
jbe
cmpsl
lcall
and
fwait
mov
mov
addr16
imul
ja
orb
cmp
adc
movsl
jnp
push
fistpll
cmp
leave
stos
pop
push
outsl
and
int3
insb
jecxz
pop
call
imul
mov
rcrb
test
fisubs
add
popf
sbb
ljmp
stos
push
fnstcw
lret
xchg
jnp
loop
mov
mov
and
and
repz
shrl
dec
add
insb
add
aam
add
jo
popl
mov
int3
adc
scas
mov
mov
movsl
cmp
add
rol
cmp
jns
int3
xchg
dec
out
mov
cmp
push
addr16
mov
adc
and
movsl
push
ret
clc
mov
es
pop
setle
out
push
mov
subb
outsl
leave
mov
aam
xlat
and
ret
xor
or
xor
ljmp
jb
mov
lods
sub
push
adc
mov
test
dec
ds
out
mov
pop
cli
xchg
mov
jle
stos
cli
fmull
bound
jecxz
out
mov
les
nop
ja
idivl
sbb
in
cmpsb
nop
clc
pop
outsb
push
fnstsw
and
cmp
inc
push
push
pop
icebp
ret
out
dec
or
aas
test
xorb
cmpsl
mov
mov
push
push
les
add
scas
xchg
daa
cltd
adc
xchg
xor
test
cmp
fsubrp
mov
loope
push
std
sbb
add
lret
or
ja
mov
or
cs
cmpsl
and
enter
insb
jge
sti
pop
stos
into
jnp
jb
hlt
in
pop
adc
inc
std
fs
mov
push
out
mov
mov
and
stos
jno
loope
movsl
mov
ss
mov
pop
fnstsw
ljmp
cs
push
call
pop
mov
aad
hlt
mov
int
xchg
js
gs
xchg
jbe
push
in
inc
fsubs
pop
xchg
in
sub
popa
or
cmp
mov
lods
add
sub
dec
lock
cmp
jmp
into
pushf
sahf
movsb
scas
iret
mov
mov
lret
cld
test
mov
cltd
fucomip
js
decl
mov
cmp
and
jne
fisttpll
stos
cmp
adc
mov
push
jnp
mov
iret
dec
cld
lcall
sbb
andb
lods
cs
adc
inc
and
mov
sbb
jp
cli
aam
adc
dec
push
mov
and
test
mov
aad
repnz
outsl
xchg
rorb
mov
jb
inc
aad
pushaw
mov
in
push
add
ffreep
dec
daa
cli
pop
mov
or
aas
andps
cld
clc
add
in
je
es
cmp
sbb
jl
xchg
insl
das
cmp
sub
adc
js
xchg
add
inc
outsb
cmp
mov
out
addl
popf
negb
inc
sbb
aaa
scas
je
pop
mov
mov
xchg
inc
jle
push
or
sub
pop
sbb
or
mov
mov
pop
shll
inc
ja
push
pop
fcmovnb
mov
mov
sub
cli
cmp
jge
inc
rolb
adc
dec
push
sub
bnd
imul
lret
push
mov
dec
adc
js
sub
push
sbb
or
xchg
adc
mov
cs
incl
adc
fs
fwait
pop
mov
sarb
cmp
in
jo
add
stos
mov
addr16
push
mov
outsl
xor
test
jle
popf
push
dec
mov
inc
jns
call
mov
cmovp
inc
lcall
inc
data16
addr16
pmullw
ficompl
add
xchg
shrl
cmp
cmp
or
in
rclb
lods
ret
rcr
xlat
adc
aaa
jns
clc
cltd
sahf
mov
xchg
std
out
loopne
xchg
xor
fisubrl
je
vpunpckhwd
scas
andb
jo
lcall
shlb
rol
data16
div
jbe
jg
into
cmpsb
cltd
sub
js
cmp
rol
and
mov
xchg
cld
subl
or
cs
fwait
scas
aaa
and
jae
pop
xor
jae
fists
dec
notb
and
fldl
rcrl
aam
jp
pop
ljmp
inc
inc
push
push
fistl
xchg
sbb
out
data16
js
fsubs
idiv
jns
xchg
scas
insb
addr16
xor
fisttpl
shll
xchg
lahf
mov
sbbl
andl
mov
shr
daa
mov
ljmp
push
fsubrl
cmp
jmp
add
cmc
sahf
out
imul
scas
jp
cld
dec
cli
ss
mov
out
into
lds
call
negb
inc
pop
shlb
orb
add
call
jo
mov
push
inc
and
mov
xchg
cmp
mov
js
jno
push
ret
out
fucomip
dec
lock
xlat
jecxz
stos
sbb
lret
fiaddl
jl
sbb
into
xor
das
inc
rolb
outsb
xorb
jnp
je
ja
in
int3
subl
fstpt
dec
stos
scas
arpl
cmpsb
or
push
and
in
pop
arpl
orl
xor
xor
lret
sahf
jle
clc
cmp
dec
dec
xchg
jae
and
test
mov
add
jae
enter
xchg
dec
lret
or
and
cmp
cmp
das
xchg
ja
pop
xor
outsl
cmc
sub
mov
cmp
loop
arpl
jl
insl
mov
mov
pop
in
fiadds
pushf
ret
add
ss
dec
push
sti
sub
lods
mov
cmc
leave
jp
in
inc
test
sbb
jno
jmp
sub
test
insl
hlt
sub
daa
mov
cmc
inc
adc
nop
adc
std
cli
scas
add
aam
xchg
xchg
stos
notb
in
rorl
dec
ss
out
je
jae
mov
adc
dec
dec
push
push
adc
loopne
push
mov
cld
jo
js
push
scas
sub
mov
jbe
pop
sub
jge
ret
mov
add
cld
aas
jg
mov
fwait
jae
dec
sub
loop
call
cs
imul
int
dec
mov
mov
addr16
and
rclb
or
mov
repnz
enter
add
lcall
xor
fwait
pop
mov
iret
jbe
pop
test
das
insl
fldt
sti
out
enter
inc
ficoml
sub
inc
das
sarl
xchg
rorb
jb
cwtl
ret
ss
fwait
cltd
movsl
sbb
cmp
nop
mov
xor
xchg
lret
mov
push
dec
pusha
and
dec
xchg
sub
pop
mov
stos
fisubrs
dec
cmp
and
xchg
inc
aam
inc
dec
test
cli
mov
mov
scas
js
jo
xor
dec
lcall
mov
ficoml
jbe
xchg
mov
jl
sub
cmp
sbbl
mov
addr16
test
movsb
in
inc
mov
ret
and
lock
xor
lds
push
ss
cmp
stc
mov
fucomip
mov
fldl
or
mov
adc
xor
jle
sbbl
out
or
add
out
ror
jecxz
fisubs
loopne
adc
mov
repnz
pop
or
pop
jecxz
or
pop
fprem1
inc
add
add
mov
les
pop
clc
shll
clc
test
outsl
or
ret
movsb
in
movsl
push
jb
cmp
cli
lods
jo
lock
ds
pop
movsb
fldt
mov
lods
add
mov
popa
aas
lret
fdivr
sub
xor
jo
and
test
rcr
aaa
inc
xchg
fistpll
xlat
ja
negl
jbe
mov
popa
and
and
stos
sbb
lea
cmpsl
push
and
outsl
ret
adc
ja
loop
pop
fdiv
lea
stc
dec
fistpl
lret
sbbl
mov
insb
sarl
sbb
jecxz
mov
in
mov
fs
add
xchg
mov
and
nop
mov
in
mov
lea
xchg
add
out
xchg
lock
clc
outsl
xchg
loope
les
xorb
leave
out
cmpsl
ror
pop
dec
into
xor
data16
into
mov
mov
xchg
xchg
adc
dec
pop
idivl
dec
clc
push
lods
mov
aad
pop
add
out
sar
mov
test
or
fadds
in
jecxz
mov
iret
inc
outsb
add
push
test
pop
inc
sete
hlt
sbb
mov
push
out
sbb
mov
xchg
test
inc
sti
jnp
cmp
ss
pop
out
pop
push
xchg
push
mov
rorb
xor
mov
push
nop
xlat
int
lds
xchg
jnp
or
nop
xchg
psubusw
movl
cmp
dec
xor
pop
add
mov
xor
inc
xor
push
data16
lods
adc
xchg
inc
add
test
mov
sbbl
cmp
xchg
jmp
lret
sbb
jecxz
mov
or
roll
shr
lret
mov
shll
mov
mov
out
xor
js
sbb
jmp
xchg
sbb
pop
add
sbb
dec
fadds
xchg
inc
les
shll
push
jmp
repz
das
sub
cli
adc
xchg
je
int3
cmp
jns
dec
cmpsb
fsts
test
dec
jp
xor
retw
or
cltd
pop
mov
sbb
aas
or
or
stc
adc
pop
arpl
fidivs
push
cmp
inc
mov
dec
xchg
insb
pop
jecxz
mov
pop
mov
inc
jbe
jno
pop
push
insb
je
jmp
insl
rolb
pop
loop
cmpsb
fst
mov
outsb
test
gs
enter
pop
outsb
dec
and
xchg
aam
and
adc
push
ja
add
hlt
xchg
xor
xchg
jecxz
or
mov
push
push
int
mov
jle
or
fs
mov
lods
add
sbb
test
add
fldl
cmpsb
xor
dec
sub
rcll
fsubrp
jnp
dec
dec
ret
or
adc
pop
dec
or
sub
mov
jne
sbb
adc
pop
pop
fistps
mov
lds
ret
inc
insb
ds
shr
insl
xor
mov
rolb
add
por
ljmp
dec
push
fcoml
daa
dec
not
or
xlat
js
insl
aaa
pop
es
std
cli
in
int
jp
insb
popa
test
or
icebp
das
daa
push
jg
cmc
lds
adc
pusha
bound
aaa
xlat
add
ret
adc
sbb
pop
cmpsl
pusha
add
mov
int3
rorb
or
bound
mov
and
add
andl
mov
fmul
shrb
inc
sbb
popa
jbe
icebp
pop
leave
aam
mov
cmpb
mov
or
iret
test
xchg
sbb
cmp
xchg
test
adc
push
aaa
mov
xor
jno
sbb
test
loopne
xor
inc
test
fstl
sub
jne
mov
cmpsb
mov
outsb
pop
in
xchg
cmp
lret
inc
mov
lea
in
mov
add
outsb
cld
scas
lock
in
push
iret
mov
cmpsl
je
dec
int3
sbb
ficoml
shll
les
cwtl
out
xchg
jmp
cmp
mov
xlat
out
mov
test
jo
jl
pcmpgtd
pop
xchg
mov
sub
cmpsb
push
ja
outsl
mov
cmp
add
js
cmp
std
inc
mov
cmp
sub
int
push
sbb
push
fisttpl
or
enter
iret
jno
movsl
and
fcom
push
dec
sub
fistpl
jnp
xor
xor
inc
xchg
mov
mov
adc
inc
mov
xlat
repz
stos
in
mov
mov
inc
scas
pop
or
push
jne
icebp
aam
loope
imul
mov
in
fdivrp
and
popf
cmc
push
mov
jecxz
int
fldenv
mov
adc
cmpsl
cmpsl
into
lods
std
mov
adc
iret
pop
jns
pop
and
call
inc
xchg
decl
fsts
ja
fsubs
cmp
pop
dec
aas
sbb
mov
orb
sarl
jge
mov
mov
lret
xor
dec
push
mov
xchg
push
add
fmuls
mov
sbb
lret
cmp
rol
jmp
jge
pop
inc
aas
int3
outsb
in
subb
push
jns
dec
jmp
mov
inc
sti
insb
lods
aas
ljmp
pop
out
scas
add
xchg
push
xchg
dec
mov
mov
lahf
jne
hlt
in
mov
daa
jno
aam
cmp
push
jb
out
pop
add
ret
inc
fcomps
andb
pusha
rcr
dec
cmp
mov
xor
sub
add
sub
pop
jp
lods
dec
jb
push
add
ss
xchg
icebp
or
sarl
loopne
adc
and
mov
sub
sub
mov
adc
mov
mov
icebp
inc
cmpsb
scas
push
mov
or
adc
and
jl
cli
int
sbb
sbb
ficompl
or
dec
and
fdivs
stc
stos
rclb
ret
sbb
fcompl
xchg
jo
pushf
or
lret
lcall
lret
push
insb
inc
xor
ret
jno
adc
dec
test
mov
mov
adc
fdivr
lcall
ror
scas
inc
and
adc
cmp
test
aas
ret
dec
or
test
insb
fsts
sbb
dec
add
push
pop
aad
jne
sub
add
inc
sbb
push
mov
sub
jg
pushf
inc
mov
adc
lods
mov
lods
push
pop
jl
ja
push
movl
dec
jne
push
xchg
inc
fdivrs
or
mov
xchg
popa
or
dec
shll
mov
xchg
add
hlt
jne
mov
inc
xchg
aaa
out
test
int3
repnz
mov
test
sub
pusha
sub
subb
cmp
outsl
xor
cmp
xchg
daa
cmc
mov
rol
sub
imul
ret
es
lods
or
test
mov
cli
sahf
mov
and
jge
pop
fst
and
ljmp
movsl
sbb
dec
adc
test
push
dec
pop
in
adcl
push
dec
jne
pop
inc
jne
sbb
sub
dec
jne
fwait
push
adc
pop
xor
outsl
push
mov
jo
popf
xor
lahf
jnp
sbbl
fninit
imulb
ret
pop
xor
jb
popf
mov
cmc
push
cmp
xchg
pop
test
add
jns
cs
mov
iret
rorb
adc
popa
add
shr
sub
aaa
mov
sub
jmp
stc
inc
js
mov
lea
int
stos
dec
int
ljmp
mov
or
ja
adc
jecxz
jno
jne
mov
jg
adc
cmp
lahf
nop
sub
mov
shl
sbb
lock
add
popf
fwait
std
repz
rolb
test
sub
mov
dec
repnz
jg
push
sbb
js
add
sbb
sbb
push
ds
xchg
xlat
in
pop
xor
cld
lods
pop
test
adc
stos
or
scas
sbb
push
loopne
lock
mov
pop
aam
push
jmp
cmp
jle
inc
mov
push
test
or
data16
lret
lret
shlb
fs
and
scas
adc
mov
cmp
cmpsl
push
inc
pop
xlat
rorb
cmpsl
adc
jl
andb
sub
mov
stc
ss
sub
adc
jl
cmpl
dec
adc
push
aad
and
cltd
hlt
cli
out
or
cwtl
std
outsl
push
or
sbb
push
std
push
mov
push
mov
stos
loope
lcall
xchg
test
cmpsl
xchg
pop
add
shlb
dec
adc
xor
js
sub
mov
in
hlt
mov
in
in
out
adc
inc
and
fnstcw
and
ret
pop
in
out
pusha
cmp
rorl
mov
in
nop
out
xchg
lea
insb
lea
je
adc
jmp
mov
loop
sti
dec
add
stc
inc
push
fistl
or
div
sub
movsl
aas
mov
and
out
xchg
sub
or
sahf
cwtl
mov
lods
push
imulb
popa
inc
addl
jo
pop
sahf
jge
nop
push
sbb
mov
roll
hlt
push
jp
lret
and
bsr
int
push
lahf
sti
adc
repnz
mov
iret
in
pop
insl
movl
in
cld
cmp
fdiv
aas
ss
jg
out
fwait
lea
in
lcall
ds
xchg
mov
jle
movsb
das
xchg
ds
sbb
inc
adc
pushf
or
xor
push
mov
enter
push
in
mov
sub
aas
sti
out
adc
add
pop
dec
lods
into
aam
mov
fimull
sub
mov
out
loop
lods
js
stos
or
popf
xchg
addr16
fisubl
js
test
arpl
lcall
push
lahf
mov
das
mov
mov
ret
mov
adc
rolb
sbb
sbb
rcll
loop
in
out
pop
jecxz
or
mov
leave
xchg
shll
jnp
fisttpll
xchg
push
lea
mov
fwait
cmp
shll
pushf
fsubr
inc
push
jg
fnstcw
cs
fs
mov
fists
cltd
in
stc
jbe
or
sbb
mov
add
out
dec
icebp
xor
fildl
mov
leave
add
xchg
fistpll
aas
lods
jnp
rcl
dec
or
mov
pop
sbb
lret
or
fbstp
out
or
aad
pop
insb
mov
xor
std
mov
sbb
mov
cmp
inc
adc
mov
or
jne
aam
sbb
push
call
mov
scas
dec
push
lret
jge
aad
mov
mov
in
test
loopne
cmpsl
jecxz
sub
andb
cmp
out
orl
jns
dec
push
xchg
aaa
push
add
stos
jns
pop
jl
out
xchg
jle
imul
das
or
testb
arpl
hlt
inc
xor
pusha
cmp
adcb
inc
stc
push
loopne
enter
int
and
out
decb
or
repz
aam
and
sahf
mov
out
divb
pop
sub
pop
subl
ljmp
cli
inc
push
xlat
pop
aaa
notb
pop
movsb
ljmp
xor
hlt
cld
dec
cmpsb
add
outsl
outsl
cli
dec
inc
add
inc
mov
xor
test
xchg
test
push
les
test
lock
aas
mov
int3
pop
lahf
and
les
sub
test
xchg
jmp
sti
lods
mov
enter
repnz
mov
mov
fldln2
enter
sar
jns
stos
leave
aas
xchg
adc
shll
insb
xchg
dec
lret
add
call
dec
xchg
sti
ss
push
jno
inc
js
pop
jge
rorb
push
and
add
shll
movsb
or
push
xchg
js
mov
adc
fidivs
xchg
push
setns
stc
pop
add
mov
lods
lods
into
cmp
xchg
push
inc
xor
mov
dec
imul
aad
lds
cli
sbb
push
push
xor
fadds
jmp
mov
ficoml
lret
cmpb
mov
dec
outsl
dec
lea
jae
xor
dec
pop
xchg
jmp
xor
out
mov
repnz
js
cwtl
add
sar
pop
or
add
cmpsb
add
inc
imul
mov
scas
adcl
cmp
inc
lcall
mov
push
sbb
ds
sbb
jb
jno
inc
repnz
pop
mov
xchg
mov
cmc
jno
out
sub
lea
or
mov
cmp
cld
cmp
pushf
cmpb
adc
cltd
fisttpll
mov
xlat
xchg
adc
mov
jle
mov
lock
neg
in
jl
and
fistl
jns
jb
inc
inc
xor
lahf
adc
mov
jmp
jmp
or
push
and
mov
cld
les
ret
dec
push
enter
sbb
lea
jns
jge
xor
cmp
outsb
cli
dec
dec
fcompl
jae
scas
inc
andl
xchg
xchg
adc
cmp
xor
xchg
inc
ret
das
cmp
mov
clc
lea
sub
mov
cmc
lock
sub
loopne
mov
inc
into
dec
jmp
push
insb
imul
cmc
sub
push
jns
jne
das
dec
jg
mov
xor
gs
aad
aas
dec
adc
push
cmp
enter
dec
jl
mov
hlt
jmp
stos
xchg
mov
inc
mov
mov
fisttpll
ss
sbb
pop
js
xchg
call
icebp
sbb
and
or
push
and
aaa
repnz
in
mov
sub
mov
add
cld
push
inc
mov
cmpsb
xchg
fwait
loopne
lret
lods
and
in
inc
repz
add
imul
int3
ficoms
adc
test
dec
dec
mov
imul
push
dec
leave
mov
xor
lea
aam
jl
negl
jns
stc
nop
mov
push
insl
fs
or
mov
add
pop
cmp
outsl
ja
push
pop
shrb
lcall
adc
push
jmp
add
shlb
push
mov
pop
push
jae
adc
add
sbb
xchg
mov
imul
sbb
add
divb
adc
stos
insl
int
sub
add
pop
push
push
add
sbbb
jne
xchg
or
movsb
pop
push
or
adc
fmull
lret
jle
popf
add
stos
jno
push
in
push
enter
aad
inc
cmp
pusha
outsb
xor
pop
push
push
lret
pop
jbe
mov
inc
sub
xchg
mov
xor
out
cs
adc
cmp
jne
mov
push
movsl
in
jge
and
jne
negl
jge
xchg
and
data16
jl
int3
in
jae
push
shrl
aaa
jmp
jg
inc
movsb
inc
and
dec
push
inc
aam
push
sbb
cmpb
push
push
and
pop
jl
pop
add
dec
mov
notb
les
and
data16
mov
sbb
xor
mov
adc
aaa
cmp
psubsw
jae
ss
sbb
loope
leave
push
ror
lea
stos
out
lock
cmpsb
dec
jns
xchg
cwtl
dec
in
jb
lahf
and
jns
mov
rcll
rolb
or
jbe
pop
pop
jle
pop
fbld
dec
mov
pop
jns
frstor
iret
mov
rcrb
sbb
fcmovu
sub
xor
shll
and
inc
dec
jnp
nop
stos
cs
jae
mov
ret
adc
pop
insb
xor
cmp
or
cmp
jne
dec
insb
idivb
xor
cwtl
push
mov
mov
sub
or
ret
cmpsl
les
adc
sub
jns
xchg
xchg
and
adc
pop
adc
mov
fistpll
inc
cmp
adc
mov
jbe
ret
cmp
push
inc
jns
sbb
mov
dec
int3
jnp
jns
scas
mov
or
xchg
outsl
out
jge
or
icebp
bound
add
data16
out
icebp
stos
leave
clc
cmp
dec
das
mov
or
scas
jmp
mov
ficomps
ret
bound
push
fldcw
xor
push
mov
movsb
enter
test
xchg
shrl
scas
lods
testl
pop
pop
mov
xchg
inc
push
xchg
dec
sbb
add
add
aas
xchg
pusha
fwait
xchg
cld
push
or
cli
sti
gs
lahf
jne
sbb
lds
xorl
add
xor
jno
add
in
jmp
cmp
push
jns
icebp
mov
adc
push
call
out
cwtl
cs
in
popa
je
sarb
and
add
dec
iret
jl
mov
hlt
sbb
pop
push
inc
and
jge
les
es
pop
mov
ss
insl
pop
push
lock
aam
jmp
mov
lahf
sub
mov
sbb
adc
negb
fsubrl
mov
mov
xchg
sub
aam
ret
pop
and
cmp
fcoml
xchg
or
inc
dec
push
mov
sbb
test
aad
mov
enter
jp
xchg
loop
mov
aas
test
xor
sbb
jb
or
mov
mov
hlt
and
aas
fbstp
sbb
sbb
repnz
sbb
jg
jecxz
xchg
sub
ss
xor
fadds
inc
push
rorb
imul
cmpsl
js
add
mov
mov
pop
dec
popa
adc
lret
data16
push
scas
pop
pop
inc
jne
ss
jg
sub
push
add
or
xchg
cwtl
adc
push
test
dec
scas
bound
shll
movl
and
push
rorb
in
jns
mov
add
dec
cmc
dec
fsincos
inc
cld
inc
xchg
mov
fsub
and
inc
push
mov
pushf
stos
mov
dec
lods
push
scas
cld
inc
and
mov
out
xor
stos
js
mov
mul
xadd
jg
and
hlt
inc
cmp
shrb
pop
dec
mov
pop
cmpl
add
ret
rorl
mov
xor
mov
xchg
cmp
xchg
adc
xor
push
lock
inc
sub
push
adc
mov
add
sub
stc
sbb
add
mov
pusha
mov
hlt
shlb
ret
pop
popa
jne
mov
cmpsl
into
lock
sub
push
insl
iret
sbb
push
xlat
ja
aaa
lcall
mov
sub
fwait
pop
cld
pop
dec
movsl
cld
lcall
sbb
cmp
push
loope
js
cltd
out
sbb
mov
inc
test
sbb
and
or
mov
lea
aam
loopne
add
mov
push
mov
push
xor
and
jecxz
scas
bound
add
cmp
dec
or
mov
ja
cmc
fidivs
mov
add
mov
addl
push
loope
hlt
out
mov
mov
mov
ror
aaa
or
sub
push
cli
in
pop
xchg
jl
inc
dec
daa
nop
xchg
pop
ret
jae
es
and
shlb
or
mov
andnps
and
jecxz
into
addr16
push
or
ds
stc
sbbl
loopne
rol
xchg
jae
fs
fistpl
data16
nop
dec
ficoml
and
fnstcw
xchg
mov
dec
mov
push
mov
iret
andl
mov
jg
jne
adc
bnd
pop
sbb
das
popf
mov
add
and
mov
xchg
pushf
and
repnz
pop
xchg
dec
imul
mov
movl
xchg
imul
shrl
data16
imul
cmpsl
scas
mov
lcall
or
push
or
pop
int3
cwtl
out
cmc
jo
lahf
data16
xchg
imul
fwait
movsl
ret
ret
add
fldl
std
or
xor
sbb
js
add
mov
xchg
das
or
sub
test
test
bound
cli
dec
mov
ss
mov
xchg
xorb
inc
jl
and
add
mov
mov
aad
xor
pop
mov
lods
cmp
rol
mov
js
cmp
cmpsl
jbe
lods
add
jbe
loopne
inc
adc
lds
pop
aad
fwait
lods
xor
mov
push
popa
sub
std
mov
or
enter
add
mov
outsl
cmp
call
cmp
es
sbb
pop
adc
sarb
cli
dec
xchg
in
bound
gs
dec
mov
mov
aaa
xchg
daa
xchg
jge
fsubrs
ljmp
cs
jae
leave
fildll
or
cmpsb
jmp
or
add
dec
out
loope
movsb
faddl
insb
mov
mov
out
push
mov
pop
dec
dec
mov
cmpsl
dec
daa
jl
std
les
mov
insl
push
dec
cmp
inc
sahf
mov
outsb
iret
sahf
dec
jmp
or
pop
sub
sbb
push
testl
daa
push
frstor
mov
cmp
neg
and
cmc
nop
xor
or
cli
xor
lret
mov
test
das
ret
test
adc
popf
ja
add
pusha
push
fcmovnbe
mov
fstpl
sub
sub
dec
add
xor
clc
mov
sahf
xchg
lds
in
sbb
pop
lods
push
jnp
sub
test
mov
aad
jp
dec
outsl
gs
jno
test
test
and
bound
pop
sbb
xchg
jb
and
ficompl
ss
jmp
push
daa
out
pushf
sbb
xchg
jp
or
imul
jmp
gs
mov
lahf
or
in
into
rorl
lock
jnp
aam
pop
ja
int
xchg
push
sbb
push
cltd
dec
aas
std
sbb
cs
push
mov
push
jle
leave
test
pop
mov
cwtl
cmc
xor
add
xor
cmpsb
xor
sahf
push
jge
xchg
mov
mov
fmul
dec
shll
xor
jmp
sbb
mov
jb
mov
ss
adc
popf
push
cld
mov
test
addl
in
cmpsl
insl
enter
jmp
jae
or
cmpsl
mov
pop
add
xchg
push
lcall
xchg
mov
scas
lcall
pusha
cltd
gs
andl
jle
sbb
movsb
sahf
cmp
and
insl
loopne
add
inc
cltd
jg
mov
xor
pop
ds
add
dec
mov
call
adc
fmulp
pop
xchg
lahf
xor
fidivrl
lcall
push
fidivl
inc
mov
inc
and
or
outsb
in
xchg
push
loope
out
lcall
inc
sahf
jo
outsb
sbb
xchg
push
sti
sbb
test
insb
rcrl
jns
sub
call
rcl
sbb
xchg
xchg
cmp
add
cli
jmp
ret
mov
femms
jbe
js
inc
pop
loopne
dec
jle
int3
sbb
insl
and
push
je
mov
pop
cmp
push
inc
xor
adc
push
mov
jg
ds
and
rorb
xor
adc
xorl
and
nop
mov
lahf
push
cs
rol
mov
and
mov
lock
cs
cli
add
sub
cs
push
and
mov
xchg
xchg
fldcw
sarb
and
and
arpl
sub
push
sbb
pop
xchg
int
xchg
pop
or
inc
sbb
fsubp
aad
call
jmp
stc
mov
sub
sub
movsb
in
sti
out
scas
xor
adc
je
sbb
sarb
jle
push
and
popa
aam
xor
add
sbb
cmpsl
xchg
mov
in
push
out
mov
mov
cmpsb
fdiv
scas
int
loop
ljmp
int3
jno
decl
es
negb
lret
sub
cmp
mov
out
mov
inc
loope
mov
mov
mov
fmuls
pop
jl
push
xchg
push
out
movntps
xor
jg
xchg
notb
orb
jns
xorl
inc
leave
and
aam
push
in
subb
sub
push
jo
lcall
xor
sbb
inc
and
rcl
push
lods
lods
sub
filds
xchg
jae
into
ljmp
jnp
shll
aad
fisubrs
push
aas
pop
jo
jns
pop
loope
mov
leave
bound
nop
fcomps
jns
out
jmp
or
in
imul
sarl
stc
inc
xchg
xchg
sets
cld
out
xchg
inc
clc
cmp
aas
out
jbe
imul
sbb
movb
movsl
push
out
mov
cmpsl
or
inc
lret
loopne
mov
and
enter
out
sub
inc
stos
js
and
mov
cmp
idivb
loopne
insb
push
mov
test
fidivs
mov
sub
jb
mov
and
inc
outsb
mov
adc
pop
scas
mov
popf
lahf
mov
push
mov
in
nop
dec
adc
mov
mov
fwait
dec
jno
pop
inc
movsb
mov
mov
or
shrb
adc
xor
lcall
lcall
dec
gs
xchg
lahf
inc
inc
inc
jmp
mov
jae
lock
adc
outsb
cmpsl
push
insb
out
cmpl
leave
or
cli
lock
lcall
mov
push
push
ja
outsb
mov
fndisi(8087
in
mov
enter
sbbb
repz
outsb
mov
xor
sahf
mov
and
jo
push
andb
and
push
mov
jnp
cmp
jo
fs
outsb
cmp
insl
or
inc
pop
sub
or
pop
or
push
jbe
mov
mov
fsubs
add
das
xchg
adcl
dec
ds
dec
cs
push
pmullw
xor
mov
sahf
rorl
mov
inc
fmuls
sub
out
fisttpll
dec
or
xlat
test
sbb
sub
fs
sub
cmp
jne
mov
mov
rcrb
sbb
ret
leave
mov
out
stos
add
pusha
adc
jns
repnz
shll
add
cltd
lret
sahf
test
and
mov
dec
insb
inc
mov
movsl
push
adc
adcb
xor
clc
cmp
xlat
cld
roll
mov
inc
clc
mov
fsubrl
dec
fildll
loop
sub
push
mov
bound
jmp
scas
outsl
xchg
cmp
rcl
sbbb
cmc
push
cmp
es
xchg
add
or
sbb
in
cs
arpl
mov
sub
add
scas
outsl
ret
mov
pop
add
xor
loopne
mov
stc
push
pop
mov
fs
ja
shll
add
inc
dec
sarb
jle
sbb
xlat
mov
jae
jae
xchg
in
mov
pop
or
mov
and
pop
cltd
xchg
cmpsl
daa
mov
mov
lcall
pop
dec
xchg
and
sbb
std
mov
cmpsb
por
and
lods
mov
cld
popf
sbb
mov
xor
pop
mov
jb
jecxz
xchg
int3
push
bound
je
xchg
cmp
push
mov
sti
inc
inc
outsb
and
dec
xchg
imul
lods
aam
adc
mov
ljmp
jmp
nop
repnz
lods
jae
into
xchg
inc
cs
out
mov
icebp
insb
movsl
daa
ret
mov
mov
jg
mov
mov
push
sarb
cwtl
nop
mov
xor
pop
lods
push
repz
cmp
loop
dec
mov
cmc
gs
pop
pop
movsb
jecxz
jp
push
dec
jle
push
insl
or
sbb
lret
arpl
iret
daa
pop
dec
xchg
or
mov
xor
rclb
ret
lcall
aam
clc
jnp
or
dec
xor
inc
pop
push
addr16
push
sahf
mov
das
push
and
inc
cmp
jo
dec
xchg
jns
dec
push
sahf
cmp
jns
out
xchg
imul
es
adc
mov
std
pop
ja
test
fisubl
cmpsl
outsl
sbbb
inc
gs
das
cltd
adc
fisubl
jb
int
jnp
push
and
jno
mov
test
rcll
fbld
sub
cmpl
push
nop
lods
fcmove
ret
jp
add
xchg
add
fmul
pop
loopne
out
popf
fistpl
lcall
sbb
xchg
sbb
imul
jb
pop
pop
push
outsl
hlt
das
cmp
aad
xlat
or
dec
cmp
xor
je
mov
xchg
dec
mov
stc
sbb
fcomps
aad
ret
imulb
call
sub
ljmp
test
push
fdivs
mov
mov
push
fstpl
scas
data16
mull
pushf
inc
in
pop
dec
ljmp
lods
repz
out
bound
push
inc
cmp
data16
adc
mov
mov
xchg
stos
push
call
repnz
and
pop
and
mov
subb
cmpsl
icebp
repz
popa
cltd
cmp
je
adc
in
adc
add
ficoml
mov
sbb
cli
movsb
repz
test
gs
lret
sub
or
inc
addb
and
fisttpll
mov
sbb
and
cmpsb
mov
cmp
popf
jge
scas
and
mov
xchg
mov
nop
mov
sti
mov
mov
cmp
fisubrs
pop
jns
pop
test
pusha
mov
cmp
mov
xor
xchg
dec
jl
dec
add
lret
out
pop
in
ds
lahf
lods
xor
fwait
jl
push
add
pop
sbb
mov
pop
and
fimuls
sbb
mov
push
stos
lods
cs
fwait
cmp
movsl
cltd
mov
push
lcall
fisttpll
push
pop
insb
pop
testl
jle
popl
push
xchg
dec
into
es
stc
iret
or
jg
mov
data16
inc
psubusw
lods
rcrb
shll
pop
sub
sub
rcrl
testb
push
test
mov
dec
sahf
jl
mov
stc
mov
mov
add
inc
aas
push
jo
es
mov
dec
mov
push
insl
test
jge
movsb
sbb
inc
popa
ss
das
stc
hlt
pusha
mov
repz
insl
mov
mov
ljmp
lcall
push
mov
xor
loopne
add
addl
adc
xor
test
ret
lods
stos
push
inc
jo
pop
int
negl
fists
pop
movsb
outsl
xor
lods
dec
vmovdqa
dec
sub
mov
out
mov
addr16
jb
sbb
lods
inc
in
data16
pop
daa
inc
mov
mov
fadd
mov
outsl
test
mov
jo
mov
xor
clc
clc
call
in
dec
decb
xor
and
xor
or
push
fs
lret
pop
sbb
adc
cmpsl
ljmp
jb
add
daa
mov
call
mov
in
dec
in
dec
xchg
std
outsl
sbb
add
add
cmp
mov
mov
aaa
inc
fldcw
test
xchg
inc
mul
mov
loop
data16
dec
jb
pop
xchg
sub
sub
or
inc
dec
ret
mov
lcall
loop
or
fsubl
mov
mov
mov
sub
dec
call
gs
ljmp
jl
xor
mov
pop
xor
out
cmp
xchg
dec
inc
mov
push
inc
bts
sub
popa
ficoms
cmp
cltd
jo
sub
or
enter
shr
jecxz
popa
aaa
fimull
jmp
arpl
or
jae
inc
sbb
push
xchg
and
enter
cmp
insb
je
mov
lcall
ret
stc
inc
pop
sbb
jb
fs
aam
xlat
cmp
fldt
outsl
and
mov
xlat
fdivp
repz
inc
ljmp
xchg
mov
inc
dec
jb
push
push
dec
sbb
sbb
ljmp
imul
jg
mov
inc
aam
jbe
xchg
inc
mov
fmull
pop
inc
lret
popa
mul
in
fisubs
inc
xlat
fistl
and
xchg
sub
gs
lods
jns
xchg
mov
movsb
jg
lock
jp
push
adc
adc
scas
bnd
adc
jno
hlt
aad
or
out
hlt
sub
cmp
and
jmp
xchg
lods
aam
outsb
pop
mov
xchg
std
sbb
jl
xlat
pop
jle
xchg
push
pop
imul
sti
and
iret
mov
sbb
int
fnstcw
cld
es
aas
ss
add
aam
fistps
test
pop
push
out
nop
stos
arpl
jae
mov
stos
ds
std
jb
xchg
add
into
jecxz
pop
or
ja
out
dec
xchg
jo
jnp
mov
xchg
sahf
push
push
cltd
xchg
pop
add
addr16
push
mov
loop
mov
sbb
or
sbb
hlt
fstps
out
test
jle
movsb
pop
je
sub
cmovne
test
and
je
dec
push
jle
mov
out
mov
orl
sbb
jecxz
add
pushf
xchg
aas
adc
cmp
mov
xorl
push
ss
movsl
mov
or
xlat
adc
adc
and
jecxz
lret
stos
add
sbb
or
xchg
adc
sub
lds
js
divl
inc
mov
mov
mov
das
push
jno
and
loopne
pop
adc
add
and
sbb
popf
fisubs
aaa
shlb
insb
int
push
jno
dec
test
divb
cmpsb
inc
cmp
cmpsl
mov
mov
add
inc
scas
and
mov
and
fstl
popf
cmp
scas
cwtl
popf
jmp
xor
dec
sbb
lret
sbb
sbb
in
lcall
push
xchg
call
popa
or
adc
xchg
mov
xor
inc
pop
xor
int
jo
repnz
dec
mov
test
xor
and
jns
sub
add
pushf
cwtl
xor
popf
cmp
inc
int
adc
into
test
mov
js
fcos
cs
cmp
mov
in
push
jbe
sbb
mov
mov
out
cmp
jge
aaa
mov
cmp
rcrb
push
adc
mov
jne
leave
push
add
sti
cmovg
insl
ficoms
xchg
xchg
fstps
ljmp
adc
mov
dec
jnp
sbb
xchg
sar
es
hlt
jno
pushf
fdivp
aad
les
lcall
jb
sbb
lods
ja
aaa
and
pop
ljmp
scas
push
push
cli
addb
xorb
push
fisttps
push
and
repz
fimuls
imul
stos
hlt
mov
cltd
xchg
push
adc
jle
std
ror
out
fsubr
cmp
mov
adc
xchg
adc
addr16
sbb
and
test
imul
movsb
lods
jmp
in
mov
sub
arpl
dec
push
mov
aas
push
xor
mov
rcr
nop
int
negl
mov
das
sub
cmp
xchg
jl
call
in
cmc
popa
movsl
fistl
lea
std
adc
add
jbe
in
out
jno
stc
or
and
addr16
enter
lods
dec
loopne
fs
sbb
inc
and
rcrb
pop
scas
std
fdivl
mov
mov
jl
dec
xchg
shlb
and
cmpsb
or
in
sti
leave
je
or
fsubrl
mov
test
push
push
jo
sbb
push
pop
push
or
sahf
add
add
mov
sbb
pop
popa
and
dec
leave
and
mov
jns
pop
js
inc
dec
mov
mov
dec
cmp
and
rorb
je
nop
dec
or
cmpsl
lock
dec
lea
xchg
lock
repz
mov
xor
popa
adc
push
test
xor
rcrl
xchg
ret
fwait
sahf
test
adc
faddp
iret
leave
push
sbb
fldcw
cmp
decl
pop
and
cmc
mov
mov
rolb
jp
leave
sar
or
push
xor
push
cmp
push
cmp
jl
inc
dec
fidivrl
and
sbb
test
pop
in
adc
jne
mov
mov
and
in
imul
pop
dec
mov
or
jg
in
inc
sub
sub
xchg
es
xchg
addr16
cmp
sti
aaa
mov
ss
stc
mov
add
in
add
je
cmpsl
xorl
dec
jge
cs
cli
mov
adc
aas
push
push
push
rorl
aaa
jp
mov
insl
xor
scas
pop
adc
fistpl
dec
jg
and
fsubr
pop
xchg
aaa
out
dec
dec
xchg
imul
jne
notb
cmpsl
loope
fwait
xor
xchg
sahf
mov
fs
rcrb
popf
xchg
xchg
inc
jae
dec
xlat
dec
add
mov
xor
outsl
jb
mov
into
cmp
jb
nop
ja
xchg
shll
lock
add
in
int
sbb
int
insl
sbb
nop
cmpsb
dec
lods
xor
mov
mov
scas
xor
push
imul
mov
notb
sbb
loopne
outsl
and
fs
or
sub
cmpsb
mov
insb
in
sbb
sbb
jnp
and
xchg
dec
test
loopne
es
stos
in
mov
out
xor
jnp
aam
mov
leave
bound
out
std
loope
inc
lods
ret
das
daa
loopne
pop
dec
mov
cmp
xchg
dec
inc
addr16
jge
or
sti
or
outsb
dec
sbb
aaa
pop
mov
fstpt
bound
imull
xor
aaa
push
mov
fs
subb
jge
hlt
jmp
xor
sbb
in
in
and
cs
rcrb
jmp
cmp
add
dec
shrl
dec
ljmp
aas
test
cmc
inc
clc
cmp
clc
addb
jl
pop
ja
movsl
cwtl
aam
push
or
insl
cmp
add
dec
mov
inc
push
adc
cmpsl
push
mov
push
cmp
sub
lock
xor
lret
outsb
sti
dec
inc
push
loopne
push
mov
adc
jns
scas
adcb
adc
cmp
fwait
push
push
mov
ret
call
popa
scas
jge
std
xlat
pusha
stos
push
pusha
and
outsb
xor
pop
mov
jns
test
lcall
jns
hlt
nop
cmpsb
stos
loopne
pop
push
inc
inc
stc
jecxz
cmc
imul
jl
rcll
in
adc
mov
stc
ret
loop
lods
mov
and
jmp
adc
cli
outsb
inc
pop
or
lods
fnstcw
pop
scas
mov
mov
lcall
dec
stos
mov
out
es
gs
popf
in
xor
leave
ja
ss
aam
mov
cld
adc
test
sahf
sub
inc
jge
sahf
cmp
sub
imul
push
pop
push
push
stc
add
push
lret
and
cli
loope
data16
lods
bswap
adc
pop
js
cwtl
pop
in
adc
add
cmpsl
fnsave
and
bound
pop
push
icebp
sbb
xor
cmpsb
mov
mov
pop
cld
js
jbe
mov
sub
hlt
mov
jge
mov
xchg
stos
test
pop
rsqrtps
call
xor
fwait
imul
mov
push
xor
hlt
dec
lods
adc
cmp
loopew
dec
sbb
or
je
test
pop
xlat
loopne
pop
repnz
push
call
adc
add
inc
pop
pop
add
es
add
pop
test
push
stc
les
addr16
adc
inc
lods
rolb
dec
or
pop
aaa
jl
push
popf
test
add
mov
shl
jecxz
cmpl
adc
adc
in
mov
mov
mov
xor
or
test
js
jns
aad
jno
lcall
xchg
and
push
leave
daa
cmpsb
and
out
pop
test
out
nop
or
sbb
fwait
ret
movsb
mov
cwtl
ja
mov
test
pop
dec
imul
xor
insl
std
inc
out
inc
shrb
neg
inc
mov
lds
rol
inc
cmp
mov
sbb
lea
clc
push
in
mov
and
in
adc
inc
loope
or
jae
mov
mov
int
test
sti
into
jg
enter
sbb
jnp
pop
cmpsb
leave
adc
jno
jp
fiaddl
sbb
bound
les
adcl
fisubrs
mov
pop
cli
or
mov
adc
sbb
jb
sbb
adc
pop
mov
mov
cmpsl
pop
push
and
lahf
mov
jge
push
mov
xchg
and
jno
dec
outsb
push
aaa
fisubrs
adc
repz
into
cltd
xchg
jl
bound
subl
xchg
pop
ljmp
add
pusha
adc
stc
add
je
lds
mov
adc
inc
mov
lock
popf
ss
lock
cmpsb
mov
ja
hlt
cmpsb
pushf
mov
andb
lahf
inc
rorl
pop
iret
lock
and
and
insl
les
or
jb
and
arpl
jp
das
dec
xor
and
xor
stc
inc
loope
xor
out
sidtl
cmp
dec
outsl
cmp
add
notl
test
xchg
mov
mov
and
mov
pmaxub
nop
ljmp
mov
jns
loopne
lods
scas
jb
lret
int
fs
jno
xor
dec
dec
mov
nop
test
adc
cmp
leave
repz
jb
ds
xor
ret
pop
push
dec
push
mov
lods
lods
mov
jmp
fisubs
mov
xor
jb
cltd
mov
or
cmp
mov
inc
repnz
fs
adc
subb
cmpl
push
mov
mov
xor
jae
cmpsl
mov
push
or
adc
dec
mov
dec
push
jp
jbe
pop
sub
cmpsl
hlt
test
sub
lcall
pop
sti
imul
jns
add
or
and
xor
sub
sbb
sub
into
popf
dec
or
push
dec
mov
sub
mov
inc
jl
pushf
loope
mov
cli
popa
xchg
aam
sbb
outsb
lds
aam
fnstcw
mov
in
and
imul
movsb
push
xorb
add
imul
insb
cld
pop
mov
adc
push
aaa
out
shll
xchg
dec
adc
into
adc
xlat
test
mov
lds
and
fxch
nop
jne
out
clc
inc
cmp
mov
pushf
pop
das
sub
add
inc
mov
xchg
das
mov
repnz
mov
mov
sbb
cld
adc
in
push
add
imul
dec
dec
jo
aaa
iret
cmpsb
dec
test
shrb
sahf
push
mov
ljmp
and
je
enter
jne
push
pop
lret
or
inc
inc
inc
or
mov
adc
pushf
add
and
cs
inc
cmp
push
mov
push
mov
xchg
les
in
inc
cmp
pushf
in
pop
leave
jp
pusha
cwtl
adc
add
pop
xchg
fsubp
pop
mov
jg
in
pop
sbb
jecxz
mov
cmp
lods
xchg
xor
inc
out
lcall
jle
sahf
fldt
ret
xchg
push
stos
popw
mov
in
cwtl
fildl
push
or
lret
movsl
adc
jb
xchg
popa
in
push
icebp
or
imul
mov
ja
and
mov
push
test
xchg
inc
jb
jecxz
nop
adc
push
cmp
iret
push
jle
into
loop
push
adc
mov
ret
mov
int
hlt
fadd
mov
bound
adc
mov
ss
outsl
and
add
daa
sti
mov
stos
cmp
jae
push
cs
cmp
mov
addr16
mov
sub
push
add
cmpb
or
push
dec
mov
bound
cmpsl
outsl
cwtl
fmull
inc
push
or
dec
cmp
out
jl
pop
stc
cmpsb
inc
subl
xor
shrb
cld
inc
dec
call
sbb
adc
push
mov
push
shl
out
sub
cmp
jle
lods
adc
sti
pop
ljmp
cwtl
sbb
inc
jp
sub
mov
adc
insw
repnz
jbe
jle
adc
push
shll
add
lret
xor
sbbb
arpl
push
jne
clc
cmpl
mov
shll
cmpsb
out
jnp
scas
pop
shrd
insl
lock
dec
inc
outsl
and
sbb
ja
mov
ljmp
ficoms
lret
adc
and
in
ret
ljmp
js
call
pop
adc
jmp
movsl
lcall
enter
rorb
daa
insb
dec
push
jle
mov
jno
mov
xor
mov
add
mov
addr16
dec
inc
push
outsl
mov
mov
leave
and
nop
fsubs
data16
outsb
rolb
lds
sbb
test
fsts
addr16
mov
cltd
pop
push
shlb
adc
lea
and
test
mov
pop
xlat
test
int
clc
add
xchg
testl
rcll
sub
pop
adc
outsl
imul
pop
push
xchg
push
xchg
and
loop
cli
mov
adc
iret
mov
push
data16
sti
or
xchg
push
pop
xchg
or
mov
rolb
flds
or
negb
sub
pop
fstp
push
mov
jns
sub
in
decl
pop
push
pushf
ds
stc
aaa
push
dec
fmuls
dec
loope
dec
lret
rcrb
mov
test
xchg
push
mov
add
divl
outsl
jno
xor
inc
daa
or
jecxz
jbe
in
bound
and
cmp
imul
adc
jecxz
xor
lods
lods
push
add
dec
add
or
mov
mov
push
les
insb
idivb
pop
sti
mov
dec
popf
pop
push
cmpsb
or
push
cmp
lock
or
jnp
pusha
and
and
pop
pop
out
jo
push
adc
mov
pop
jnp
xchg
out
movsb
dec
sbb
enter
mov
pop
mov
push
mov
scas
in
and
bound
and
xor
and
or
lea
imul
in
push
xor
arpl
icebp
call
daa
call
pop
test
insl
jnp
lret
add
stc
push
lret
iret
out
icebp
ds
push
cs
sbb
add
or
test
fwait
jne
mov
jg
loopne
sahf
fisubrl
arpl
push
cld
inc
sbb
fs
movl
ss
mov
push
mov
aaa
mov
int
stos
ljmp
cltd
nop
sbb
fcmovnu
xchg
jle
dec
mov
fldt
cmp
jmp
push
sbb
mov
rcrb
popa
adc
pop
push
pop
in
and
xchg
push
or
or
cmp
aam
xchg
sub
push
push
fwait
mov
sub
push
lahf
jb
data16
lcall
icebp
cmp
jp
repnz
fdivs
pop
ja
inc
out
push
sub
sub
cli
xchg
dec
loop
sbb
inc
dec
sub
cmp
fisubrl
sbb
pop
push
shrb
insl
pop
rorl
xchg
daa
sub
dec
scas
xchg
add
fadds
es
lret
adc
jae
loope
cmp
xchg
and
aas
mov
das
mov
mov
pop
loopne
add
shlb
cmp
pop
add
inc
je
jl
les
mov
pop
divl
cltd
in
cmp
and
pand
stos
pop
imul
xor
rcll
inc
cmp
ret
push
fcmovu
das
shl
add
lret
popa
inc
pusha
cmpsb
jno
mov
inc
arpl
mov
jmp
xchg
sarl
je
cmc
arpl
or
sbb
push
lods
repz
add
dec
mov
xor
inc
mov
mov
fisubs
sbb
adc
outsb
cltd
imul
ret
rcr
out
jle
scas
clc
test
in
lret
lcall
lods
jp
adc
jmp
aad
jo
mov
stos
xchg
sbb
lahf
add
pop
push
push
nop
and
xlat
lret
jno
sbb
jns
add
xor
ret
sti
out
lea
jle
jmp
sub
int3
adc
insb
mov
xchg
jbe
and
dec
repz
xor
stos
inc
js
aam
idiv
cli
sub
push
subl
call
cli
xchg
fimuls
xchg
mov
add
ret
inc
int3
test
mov
sub
and
dec
or
cwtl
push
sahf
xor
stc
add
add
xchg
gs
lods
mov
insl
call
mov
inc
mov
xchg
nop
and
and
cmp
jle
flds
cmc
push
push
push
mov
test
dec
std
mov
sbb
xchg
fistps
inc
dec
add
pop
lds
dec
test
cs
int
aam
repz
int3
mov
lods
dec
scas
lcall
aad
pop
inc
ja
add
push
push
adc
and
jle
les
pushf
ficomps
cmc
and
ffreep
sub
push
mov
and
nop
jbe
inc
inc
sbb
js
aad
call
or
jle
iret
mov
jb
jl
mov
insl
jge
pop
addr16
mov
cld
jecxz
xor
pop
or
and
add
lcall
or
jl
test
xlat
xor
cmp
and
sub
push
arpl
mov
pop
mov
mov
fsubs
inc
fcompl
testb
in
pop
add
sbb
notb
fwait
push
jmp
jne
or
mov
arpl
movsl
outsb
mov
fdivrl
add
push
cmpsb
sbb
inc
inc
fldt
jnp
push
xorb
sbb
pushf
mov
mov
cmpsl
arpl
fucomi
daa
pop
lret
int
push
mov
jl
pop
or
dec
lea
sti
or
push
ret
xlat
aas
mov
jmp
rolb
push
sbb
push
sbb
cmp
rolb
stc
xchg
lahf
inc
pusha
scas
data16
icebp
inc
pop
je
mov
dec
add
and
mov
into
mov
bound
push
lock
mov
rcrl
xchg
fnstsw
imul
loop
dec
mov
adc
mov
stos
out
scas
sbb
add
mov
mov
push
gs
xor
movl
int
rcrb
enter
pop
test
rol
fmull
push
sbb
mov
bound
fsubs
mov
movsl
mov
fldt
adc
popf
daa
cld
decb
xor
jae
inc
cmp
pop
dec
inc
add
sarl
inc
inc
pop
xor
scas
bound
js
mov
cmpl
fsin
clc
push
mov
xor
insl
ret
push
arpl
out
xchg
movsl
loopne
aam
jae
insb
pop
push
or
insl
pop
cwtl
mov
js
je
push
dec
jns
imul
leave
xchg
mov
sub
iret
es
fnstcw
sub
sub
xchg
call
or
into
mov
or
les
sub
or
cltd
push
loopne
and
xor
dec
pop
xchg
aaa
dec
div
cmp
sub
mov
pop
xchg
mov
test
outsl
jge
pminub
idivl
push
sub
inc
movsb
ja
xchg
loopne
test
cmp
pop
lods
mov
xor
cmp
fldcw
jmp
and
mov
xor
jbe
adc
negl
addl
xchg
lock
test
pop
mov
sbb
pop
inc
adcb
clc
sub
repnz
lea
cltd
lds
mov
mov
insl
gs
stc
xlat
lcall
push
xchg
cmpsb
pushf
cltd
aas
hlt
sub
jbe
movsl
mov
and
aad
dec
loop
and
lds
outsb
movsb
ret
inc
xchg
dec
loope
push
lods
leave
sbb
jle
or
lds
or
rcrl
jae
pusha
mov
ret
outsl
dec
mov
shlb
or
roll
cwtl
sbb
push
jp
or
ret
stos
pop
lret
std
loope
jl
sbb
inc
xor
sub
test
jl
call
aad
lods
stos
and
mov
repz
rcrb
jg
jbe
lock
jp
shlb
mov
mov
sub
sub
jae
shlb
lcall
dec
xchg
scas
outsb
pop
fmuls
rorl
inc
adc
sub
mov
sbb
shll
xor
pop
inc
or
cmovno
enter
xchg
lea
dec
fs
mov
xor
push
sbb
xchg
xlat
ljmp
hlt
mov
xchg
dec
shrl
push
xchg
dec
pop
fidivrs
jmp
cmp
pop
mov
pop
push
out
jle
outsb
fistl
push
in
loopne
inc
std
das
xor
inc
fwait
pop
bound
xor
xor
and
inc
jns
bound
sbb
loop
sbb
imul
fcoml
cmp
adc
mov
stos
mov
data16
push
or
adc
out
xor
add
mov
pop
rolb
fsubrs
sbbb
jl
jl
xor
mov
ds
scas
sub
test
xchg
stc
ret
movb
push
lods
lcall
jle
cli
imul
jb
ret
out
int3
lea
je
out
sbb
cli
cmpsl
mov
xlat
mov
cmp
popa
inc
pop
push
test
jb
loopne
add
out
es
cmp
fildll
xchg
ss
lods
in
mov
xor
mov
lahf
push
adc
xchg
adc
sub
mov
lea
adcl
cmpb
pop
inc
dec
pop
idiv
in
jb
aam
stos
mov
inc
dec
push
lods
xchg
mov
jge
repz
xor
ljmp
mov
pop
aaa
fldcw
xor
or
sub
js
xor
ja
mov
xor
or
mov
shl
adc
mov
adc
mov
xorb
jge
cs
lea
and
add
mov
cli
or
inc
outsl
jp
xchg
mov
sub
loop
push
pop
add
mov
or
or
out
daa
and
sbb
mov
and
ds
scas
imul
arpl
push
testb
and
shl
dec
int
inc
cmp
mov
nop
ja
lea
arpl
mov
repnz
xchg
nop
mov
inc
xlat
lret
arpl
mov
mov
mov
and
sub
out
ror
sahf
jl
imul
jo
gs
loopne
ds
or
push
shr
mov
into
xchg
adc
nop
shll
xchg
out
sbb
add
ret
mov
std
xchg
insl
cs
aas
mov
cmpsl
enter
movb
imul
inc
dec
xlat
arpl
sub
sbb
push
dec
int
movl
loopne
hlt
inc
fstp
mov
push
dec
lods
scas
outsb
adc
test
sub
in
aas
bound
sub
cmc
or
cmc
mov
dec
push
in
xor
das
inc
xlat
push
add
mov
jge
jge
repnz
hlt
xor
movq
stos
das
and
fwait
push
push
add
loop
or
pop
je
adc
jl
icebp
outsb
cmp
push
pop
sub
sbb
repz
inc
add
xchg
jb
sub
popf
je
fisttpl
lock
outsb
test
cs
movsl
push
rcll
iret
movsb
pushf
add
dec
cs
mov
call
lods
mov
push
orb
ret
xor
and
gs
xchg
push
dec
jecxz,pt
out
shll
test
cwtl
shrb
xchg
outsb
movsb
ds
iret
fmuls
sar
mov
rcl
sub
call
dec
ret
add
cmpsb
loop
in
loope
xchg
stos
incb
inc
xor
lcall
dec
test
fsubrl
mov
adc
bound
xor
mov
mov
sti
pop
jge
xor
in
adc
xchg
inc
push
and
mov
mov
inc
sub
xor
nop
aas
divb
test
movsl
push
sub
ja
addr16
adc
sub
inc
xchg
out
insl
jmp
cmp
daa
xor
in
mov
mov
in
inc
jno
mov
xor
add
pop
cmp
andl
in
imul
dec
xor
out
xchg
mov
jbe
insl
pop
fcompl
mov
fstps
xchg
cltd
xchg
jnp
xchg
cmp
cld
sbb
fs
xchg
jb
mov
inc
sti
or
sbbb
loop
push
out
mov
add
iret
mov
mov
sti
pop
xchg
ret
push
pop
jl
add
adc
dec
jecxz
loop
adc
pop
daa
xchg
mov
mov
movb
dec
or
ss
lcall
and
lock
and
cmp
dec
or
insb
dec
mov
mov
out
stos
xor
add
shr
cs
jnp
mov
stos
mov
jno
jecxz
and
sti
sbb
lret
les
rcl
imul
and
cli
int
mov
iret
ret
pop
dec
pop
jecxz
int3
test
add
xchg
mov
push
imul
mov
andb
xor
fwait
test
xor
aaa
mov
push
mov
mov
aaa
mov
repnz
pop
adc
leave
pop
cmp
xchg
jb
or
inc
int
lret
lahf
push
bound
lret
mov
xor
out
pushf
hlt
test
lret
and
scas
fstps
ss
push
xchg
sub
jp
sahf
popa
push
jo
pop
into
sbb
or
pop
jmp
push
cmpsb
int3
faddp
jno
jo
mov
stos
enter
div
mov
les
inc
cmpb
adc
mov
jl
pushf
pop
sub
adc
repnz
std
push
setge
out
sub
andb
push
pop
cmp
in
jno
outsb
jge
shlb
or
outsl
push
cwtl
adc
xor
sahf
pushf
mov
jecxz
stos
xor
js
mov
repnz
lds
push
sub
dec
mov
aas
movsl
sub
mov
adc
test
gs
pop
lret
lar
mov
lret
push
pop
or
rcl
arpl
sti
sbb
mov
jmp
clc
mov
xchg
or
mov
sbb
ss
add
std
cwtl
or
push
pop
xor
lock
sub
insb
xchg
lret
push
sbb
add
sub
adc
roll
push
push
pop
mov
out
dec
sub
lock
adc
add
mov
es
imul
mov
iret
or
push
push
jmp
sbb
aaa
outsl
lahf
test
inc
mov
test
mov
dec
aad
pop
cmpsl
and
jmp
pop
jno
into
mov
mov
notl
cmp
and
xor
dec
mov
aam
pop
jne
or
add
adc
std
pop
in
in
cmpl
pop
aad
push
and
add
mov
cmp
in
or
pop
push
movsl
mov
pop
scas
dec
arpl
movsb
jne
dec
stc
lahf
and
pop
push
call
sahf
cmp
xchg
out
pop
xor
xor
pop
push
mov
int
lahf
pop
xchg
jmp
out
push
in
lret
fs
or
repz
jae
jnp
add
xchg
mov
jmp
mov
inc
mov
push
mov
xor
jb
ficoml
dec
fcmovu
scas
adc
and
out
or
cmp
or
sbbb
out
outsb
adc
shlb
ss
mov
jno
mov
adc
pop
cmp
std
ret
pop
sahf
js
dec
ds
add
cmp
add
mov
sub
shrl
shlb
in
dec
arpl
xor
aaa
cmpsb
xchg
test
cmp
insl
push
xlat
add
flds
filds
scas
in
jmp
push
arpl
clc
mov
popf
mov
gs
into
jecxz
mov
mov
mov
push
and
rcrb
cmp
es
imul
enter
add
cmpsl
cld
cwtl
and
or
aaa
rclb
xchg
push
dec
xor
pop
test
call
rclb
adc
insb
leave
inc
cmpsl
sbb
cmp
iret
inc
jl
test
daa
cmc
push
dec
movsb
xor
hlt
adc
cmp
ret
jg
or
sbb
test
jne
sub
adc
xor
dec
jl
fdivl
cmpsb
movsb
and
int3
mov
cmp
subl
fndisi(8087
in
xlat
call
add
fsub
adc
sbb
movsb
mov
dec
fstl
cli
scas
mov
sub
dec
jnp
repz
push
xor
inc
fldl
jmp
insb
push
out
fsubrs
xchg
mov
dec
or
dec
inc
and
inc
std
orl
or
mov
sti
mov
jl
popa
jno
mov
into
dec
cwtl
leave
and
sbb
push
dec
sbbl
in
ds
test
ljmp
pop
xchg
bound
enter
scas
mov
insl
fcomp
leave
dec
jle
xor
cmc
ds
dec
cld
cld
push
sbb
test
and
aas
ljmp
sub
ret
lret
in
add
add
and
add
mov
cmp
sub
fcomip
inc
jp
mov
es
jne
std
mov
xor
jmp
jo
sbb
rcl
cmpsl
test
lds
adc
insl
repz
fcompl
mov
add
cmp
adc
dec
inc
and
jmp
cmpsl
add
shrb
gs
mov
inc
pop
push
ret
jmp
fwait
imul
dec
xchg
sbb
scas
out
aas
lret
push
aaa
sbb
jnp
lock
pop
and
pop
add
leave
xor
cmp
mov
cmpsl
lret
sub
shlb
leave
clc
mov
outsl
fisubl
aas
fsts
push
cmp
push
add
inc
cmp
outsl
sub
icebp
aas
jecxz
movsl
or
test
clc
adc
cltd
pop
add
cmc
clc
int3
dec
cwtl
mov
out
lahf
dec
sbb
add
popf
inc
sub
sub
pop
sbb
mov
mov
in
sub
lahf
jp
xchg
inc
test
or
mov
push
lock
sbb
sahf
fs
xchg
sub
pop
pop
push
es
fs
lahf
push
cmpsl
not
sub
daa
test
cmp
lea
sbb
iret
xchg
mov
out
cs
int3
stos
cmp
or
mov
mov
xchg
sub
jle
leave
dec
lret
mov
mov
leave
jl
xchg
leave
sub
pop
mov
push
daa
mov
jbe
ljmp
orb
inc
sub
pop
stos
adc
xchg
stos
xor
dec
outsb
not
fadd
add
and
adc
xlat
add
push
or
mov
inc
shrb
sti
je
sbb
push
mov
into
insb
leave
dec
in
out
data16
enter
pop
add
push
fcmovnb
loopne
test
inc
mov
inc
xchg
adc
pop
jecxz
divps
or
xor
repnz
sbb
or
dec
orb
mov
inc
push
inc
fistps
insl
push
out
xchg
dec
aaa
sbb
lea
adc
scas
iret
xor
or
in
xor
xor
ljmp
mov
mov
push
or
loop
cli
inc
sbb
and
pop
jno
push
push
inc
mov
jb
xor
jae
mov
aam
clc
mov
xor
out
or
notb
in
paddq
sbb
dec
or
mov
insl
dec
dec
data16
incl
xor
push
inc
rorl
cld
add
xor
sub
aam
aas
pop
gs
js
push
inc
cs
push
pushaw
jmp
add
mov
sbb
mov
and
inc
inc
mov
pop
test
sbb
push
rcl
and
cmp
mov
outsl
testb
dec
stc
dec
scas
test
shll
add
pop
mov
cmc
jle
fdivrs
sahf
and
xor
mov
xchg
xchg
or
adc
add
ret
mov
add
mov
imul
xor
cmp
xor
adc
cld
call
mov
inc
jo
ss
popa
mov
jnp
movlps
pop
push
cltd
or
pusha
movsl
jle
xchg
popa
push
std
mov
test
mov
sub
out
es
ret
mov
int3
cli
jne
jnp
inc
std
sar
aaa
mov
mov
xchg
sub
add
add
ret
ret
and
stos
mov
ret
fs
xor
xchg
rcrb
shlb
jle
xchg
mov
subb
aaa
dec
inc
fldenv
mov
pop
cs
das
inc
fisubrl
dec
sbb
repz
or
bswap
test
mov
js
bound
dec
int3
pop
dec
pop
mov
pusha
xor
clc
xchg
push
dec
inc
mov
sbb
std
aaa
lods
adc
pop
jbe
sub
sbb
lret
cmp
repnz
sub
push
fstl
dec
popl
and
andb
adc
sbb
push
jge
mov
sti
sbb
les
pop
ficoml
repz
mov
cmp
xor
add
cld
or
cld
push
int
test
stos
push
test
imul
jg
rcr
xor
mov
mov
bound
mov
mov
pop
lods
sub
mov
cmp
ret
aad
mov
stos
inc
out
test
push
es
mov
push
dec
sahf
push
lea
xchg
cmpsl
notl
adc
lahf
sub
loop
cli
sub
popl
fdivs
push
and
repnz
sti
leave
int
sub
xchg
mov
and
movsl
push
xlat
jno
mov
aaa
js
cmp
test
dec
pop
or
cmp
aas
inc
push
aaa
or
cmpsl
data16
or
loope
jl
mov
shl
sahf
add
inc
cli
mov
xchg
std
and
jmp
jae
flds
pop
pop
sbb
jecxz
pop
add
mov
dec
or
movsl
xor
test
je
enter
mov
pushf
stos
and
fldenv
sub
ret
int
mov
sbb
pop
test
inc
out
lods
mov
xor
mov
fcom
imul
clc
icebp
daa
ret
fidivl
cli
ljmp
xchg
popf
inc
test
insl
jmp
xor
or
test
or
stc
rcll
push
data16
fdivrl
pop
mov
mov
inc
imull
movsl
rcl
dec
and
jle
lds
push
ljmp
insl
call
mov
je
das
or
lock
mov
aas
jg
aaa
mov
test
mov
lds
mov
mov
jnp
lahf
adcl
mov
aam
pushf
repz
xchg
xchg
lahf
pop
enter
cmp
sbb
rcl
xchg
jp
daa
xor
hlt
sbb
cli
push
mov
push
cmp
mov
mov
push
pop
enter
jge
sbb
dec
xor
dec
xchg
sbb
inc
testb
pop
xchg
out
movsb
int3
stos
push
stos
aad
lock
add
inc
mov
sti
or
mov
mov
inc
adc
dec
je
int
popl
mov
in
fistpl
daa
add
mov
mulb
xchg
adc
sti
mov
call
cmp
cmp
jl
push
xor
ret
xor
xchg
sbb
rol
xchg
push
xchg
mov
push
sub
arpl
sbb
jbe
insl
jnp
bound
add
jl
jno
pop
in
cmp
xor
mov
xchg
add
inc
and
xchg
xchg
jo
imul
es
jmp
mov
and
jg
mov
es
mov
sub
mov
mov
cs
mov
xchg
push
insl
lret
push
loope
cmp
push
pop
sahf
cmpl
pop
jae
xchg
dec
inc
sbb
cmp
notb
aas
add
daa
shlb
in
pop
or
ret
mov
shl
pop
and
or
shl
adc
push
test
inc
and
sarb
aad
out
xchg
inc
jmp
push
push
pusha
push
scas
inc
fcom
xor
test
sbb
jno
inc
shl
test
sbb
dec
inc
outsl
and
out
test
lahf
jmp
aas
add
imull
cli
dec
dec
mov
push
or
insb
dec
test
sbb
sbb
dec
repnz
jno
les
mov
pop
sub
xchg
xchg
jo
sahf
inc
lds
sbb
pop
mov
xor
lcall
out
imul
push
xchg
out
loop
xor
mov
mov
and
scas
js
inc
push
push
xchg
scas
mov
jge
stos
cmp
aad
movsl
fldl
mov
sub
and
dec
and
pop
cmc
shlb
mov
aaa
and
das
lea
add
mov
xchg
shll
lock
adc
add
lods
inc
mov
dec
stc
loope
cltd
shlb
pop
clc
jg
push
adc
ret
movsl
push
mov
mov
aam
inc
insb
jp
leave
xchg
pop
pop
sub
cli
js
popa
add
fldz
mov
arpl
inc
into
xchg
out
or
loope
negl
mov
jmp
enter
adc
iret
adc
in
mov
popa
jecxz
nop
mov
push
adc
xchg
scas
cli
push
out
sub
out
imul
xor
sub
xchg
lods
adc
push
jp
xchg
adc
dec
call
pop
mov
shl
lcall
orl
fwait
push
xchg
mov
addr16
jmp
mov
in
fwait
push
inc
add
std
test
scas
lods
or
call
fldcw
dec
xor
outsl
pushf
lret
mov
and
push
stc
lods
addr16
push
call
imull
insl
int3
and
stos
out
dec
test
nop
mov
insb
ja
mov
inc
fwait
pop
mov
sub
mov
pop
inc
imul
adc
pop
aam
push
sub
push
rorb
imul
mov
ss
xlat
and
leave
fwait
and
push
push
adc
sbb
sahf
sub
bound
adc
inc
stc
pop
lahf
out
adc
mov
lods
pop
rclb
mov
pop
fcoml
cwtl
dec
repnz
xchg
mov
sbb
bound
outsl
ljmp
jmp
lods
add
mov
in
push
cmp
adc
inc
push
pop
mov
sub
push
lret
fisttpll
shlb
xor
add
add
xchg
xor
test
push
pop
add
rol
push
adc
xor
adc
push
je
adc
outsb
dec
pusha
pushf
add
stos
jp
mov
jb
pop
sbb
arpl
repz
out
mov
sbb
pop
rcll
cmp
jmp
cmp
sbb
xor
fwait
dec
or
mov
mov
aaa
pop
and
sub
push
mov
shl
or
jae
and
aam
xchg
mov
js
lods
or
ja
out
lea
dec
jae
cwtl
pop
sub
test
mov
mov
jmp
mov
outsb
inc
mov
cmc
cmp
add
dec
roll
out
push
stc
xor
mov
lock
cmpsl
shll
mov
inc
fs
stos
xchg
cmp
gs
in
xor
mov
in
dec
loopne
inc
jne
imul
jecxz
flds
pushf
imul
repnz
loope
leave
shlb
call
fwait
jne
jmp
cmp
add
add
push
mov
mov
or
loope
pop
jbe
in
insl
jp
fidivs
cld
cmp
xchg
loopne
loopne
inc
ss
les
adc
push
inc
and
nop
pop
loop
jmp
jb
or
rcrb
aaa
add
dec
pop
xor
movsl
jle
xlat
sub
imulb
add
adc
mov
lret
bound
push
cmc
in
jne
stos
dec
insl
jns
sub
mov
jnp
rcll
xor
push
mov
test
add
imul
jb
mov
xchg
xchg
adc
mov
pop
inc
pop
ds
cmp
loopne
mov
adc
xchg
fdivrs
ret
outsb
clc
mov
ljmp
movl
aad
and
pop
pop
icebp
lret
ret
jmp
dec
idiv
testl
add
fsubrp
xchg
push
aad
aaa
fwait
stc
sub
int
lcall
aas
cmp
jnp
iret
ret
mov
mov
incb
repz
xchg
mov
jno
push
dec
dec
push
addb
jmp
int3
xchg
add
mov
sahf
mov
mov
push
pusha
mov
dec
aas
sbb
mov
xor
fs
fdivr
test
xorl
adc
cmp
ret
ds
mov
pop
mov
add
cmp
clc
jno
dec
inc
or
mov
fiaddl
and
push
mov
jbe
mov
iret
ds
es
cmp
jle
pop
push
mov
das
stos
inc
rcrb
out
in
mov
icebp
sbb
mov
lcall
inc
push
out
mov
jg
jg
fidivrl
sbb
in
out
adc
repz
sub
dec
sbb
mov
std
mov
pop
outsb
fidivl
push
inc
insl
sbb
pusha
lods
add
push
push
sbb
push
push
cmp
iret
sub
dec
mov
xchg
xor
rol
aam
out
push
popf
or
and
xchg
dec
dec
dec
push
add
cmp
jl
adc
push
cmc
mov
lahf
stc
cmp
xor
mov
mov
mov
jbe
out
dec
sub
fisubrl
mov
push
pop
lea
filds
jnp
adc
out
sbb
imul
bnd
pop
test
mov
scas
xor
test
testb
fs
sarl
push
idivl
test
aad
repz
xchg
jae
call
jae
dec
imul
xchg
jnp
pop
push
and
push
movb
xor
inc
inc
add
frstor
data16
ljmp
cmp
inc
xchg
inc
adc
jecxz
mov
pushf
loop
and
cmpb
aam
insb
lret
subb
add
inc
adc
sbb
repnz
adc
cvtdq2ps
or
ret
adc
fimuls
mov
pop
cmp
and
cmpsb
fistps
subl
pop
rorb
decl
push
dec
dec
xor
and
push
fcompl
and
mov
or
ret
cltd
nop
xchg
fldenv
out
xlat
sub
jmp
sub
fwait
aas
add
or
dec
jl
add
push
movsl
push
popa
xor
aad
in
mov
push
push
stos
pop
mov
les
lret
xor
popa
into
jecxz
and
dec
sub
addr16
hlt
pop
and
testb
mov
ja
fildll
icebp
add
ds
je
xor
or
mov
mov
xor
fstpl
push
xorb
xchg
jne
pop
decl
sub
xlat
dec
xchg
lds
jg
sub
xchg
dec
mov
lahf
bound
orb
test
rcr
dec
fadd
cs
dec
xchg
xchg
add
into
pop
add
dec
pop
mov
sti
mov
push
mov
mov
cmp
mov
jle
jmp
or
add
dec
push
jp
stc
outsb
addl
xchg
sub
dec
push
or
push
dec
push
dec
lods
mov
lock
dec
or
dec
sbb
mov
pop
out
ja
cmpsl
pop
arpl
sub
xor
out
out
inc
sub
pop
aaa
and
xor
pop
sbb
mov
jns
and
sub
test
mov
fldcw
fs
mov
jnp
stos
out
in
pop
scas
scas
and
or
add
mov
lret
mov
out
fcmove
inc
pop
aam
cmp
enter
inc
cmp
es
push
lds
jo
mov
mov
pop
sub
xor
shlb
cmp
ss
fldl
jecxz
out
rorl
mov
incl
leave
out
aaa
adcl
mov
ret
push
rcr
repnz
lret
stos
aam
xor
bound
repz
xor
pop
cld
push
divb
shl
mov
mov
push
inc
xchg
mov
dec
push
mov
lahf
movsb
lods
mov
jecxz
mov
xchg
jmp
sub
hlt
in
in
push
and
inc
fisubs
jmp
mov
loop
es
pop
pusha
jnp
bound
jmp
insl
inc
mov
jmp
mov
inc
mov
mov
push
lods
lods
lahf
or
xor
xor
push
inc
int
cmpsl
xor
jge
mov
pop
aas
mov
ficompl
push
fisttpl
icebp
push
add
and
in
dec
std
jp
pushf
xor
xor
bound
or
push
lods
or
lock
movsl
inc
call
cmp
push
in
out
sarl
pop
lods
mov
pop
fcompl
fdivl
mov
dec
mov
outsb
and
movsb
xlat
mov
pushw
mov
mov
jl
or
es
dec
fsubs
sub
push
mov
movsl
jmp
pop
out
xlat
imul
sub
mov
repz
xchg
pop
mov
sub
pop
imul
test
mov
mov
cmc
in
adc
mov
mov
flds
je
movsl
gs
or
mov
pop
and
movb
mov
ljmp
mov
fildll
fdivl
xchg
sub
adc
and
adc
adc
mov
lds
insb
test
mov
pushf
das
push
add
and
jge
std
jp
xor
jmp
sbb
loop,pt
cli
pop
mov
and
aam
push
pop
mov
add
jne
nop
mov
push
cwtl
cmp
fdivrl
push
push
dec
mov
cli
sub
push
popf
out
adc
or
sbb
adc
push
fwait
popa
imul
mov
sbb
dec
outsl
daa
or
add
mov
pop
push
leave
lods
das
aam
jne
in
mov
add
test
mov
ret
fwait
scas
outsb
in
stos
sub
out
cltd
pop
jle
cmp
inc
jg
shl
mov
rcrb
movb
jbe
push
lret
push
dec
sahf
dec
lcall
clc
pop
add
call
add
sub
aad
xor
insb
xor
mov
cmpsl
aam
cmp
xchg
mov
cs
jne
mov
addb
pop
lds
fcompl
fistpll
cld
imul
scas
push
pop
mov
cli
rorl
dec
rolb
xchg
nop
push
jle
test
xchg
pop
ljmp
imull
popf
pop
sbb
jno
mov
push
lcall
jb
add
sbb
cmp
inc
fsubrs
cmp
push
mov
idivb
popf
xchg
xlat
lods
pop
mov
pop
inc
sbb
int
pop
sbb
pushl
mov
scas
packssdw
mov
mov
and
cmpsl
leave
mov
sub
jne
jno
je
js
out
cmova
in
scas
aam
sbb
pusha
cs
dec
daa
inc
cmp
fwait
inc
sbb
rorb
aas
sbb
and
mov
pop
fwait
and
mov
push
dec
in
out
mov
cmp
dec
sub
xor
dec
lods
inc
push
adc
mov
popf
ja
mov
cmpsl
push
adc
mov
insb
and
ficompl
inc
push
addl
cmp
sub
test
in
jns
std
sub
cmp
mov
pop
daa
pop
mov
push
pop
in
pushf
mov
scas
iret
dec
pop
rcrl
jecxz
add
xchg
outsl
add
ss
jo
xchg
add
push
pop
loop
mov
or
mov
insl
int
mov
in
jge
sbbb
pop
or
call
dec
xor
inc
in
inc
push
cli
lods
loopne
sbb
mov
outsl
enter
and
sbb
add
inc
popf
mov
cwtl
imul
call
divb
daa
or
popf
sub
jo
repz
inc
mov
cmp
aaa
inc
mov
lea
cmp
insl
jmp
aaa
mov
hlt
xor
enter
int
adc
jmp
dec
mov
daa
mov
lds
xor
movsl
andl
dec
cld
pop
hlt
mov
mov
iret
sbb
sbb
ret
std
jp
imul
lahf
push
notb
in
mov
xchg
mov
dec
lcall
ds
xorb
lret
orb
pop
xchg
jb
jecxz
push
mov
in
pop
or
dec
mov
int3
jge
out
je
push
sahf
mov
push
mov
and
mov
fnstenv
bound
sub
aaa
cltd
and
roll
ret
pop
cwtl
aaa
xchg
and
adc
mov
dec
push
dec
push
pop
flds
xchg
inc
mov
lahf
push
rcll
or
fwait
mov
es
xchg
jae
mov
mov
dec
pop
int
mov
ror
sub
push
fs
or
cwtl
and
push
or
push
inc
and
jbe
bound
push
fneni(8087
pop
xor
outsl
and
lds
xchg
int
in
daa
jno
adc
ja
xchg
pop
orb
xchg
pop
test
inc
fstps
lahf
jle
adc
mull
xchg
cs
aas
sahf
mov
sahf
aaa
mov
jb
or
push
fadd
rorl
cmp
addb
xor
pop
inc
xchg
xchg
jb
imul
iret
xor
pop
mov
and
fldl
or
xchg
push
add
into
xchg
insb
xchg
sub
push
jbe
test
sbb
icebp
or
aad
cmc
push
cmpsb
or
test
data16
push
aad
repz
movsb
cmpsl
jmp
inc
xchg
or
pop
pop
mov
lret
aad
adc
xchg
repz
shlb
ja
lahf
inc
test
sub
xor
push
idivb
loop
xlat
fisubs
push
call
iret
stc
add
or
push
loopne
add
pop
dec
inc
inc
out
call
jge
adc
add
leave
dec
cmp
xchg
mov
pushf
movsl
xchg
mov
daa
push
and
pop
mov
pop
fisubl
mov
inc
pop
cmp
mov
push
fistps
mov
in
popa
mov
add
imul
cmp
gs
test
dec
jne
xor
push
pop
movsb
cwtl
add
idiv
setb
mov
push
adc
call
lcall
inc
aas
cmp
andb
cmpsl
rclw
push
cmpsb
mov
pop
and
addr16
mov
je
cld
loop
movsl
pop
pop
data16
jnp
mov
shl
ret
leave
jge
xchg
cmc
cld
out
enter
and
lret
jbe
lret
inc
xchg
test
divl
inc
insb
imul
adc
dec
shl
inc
adc
test
mov
jl
xchg
fsubl
mov
sub
mov
dec
je
repnz
and
add
cltd
or
ret
or
cmp
int3
sbb
test
mov
cwtl
sarl
pop
mov
dec
hlt
inc
and
sbb
aam
imul
adc
dec
outsl
jmp
cmp
lds
push
pop
jmp
pop
bswap
test
push
jno
jge
mov
aam
push
adc
sub
lret
or
lock
mov
mov
add
pop
in
iret
cmp
arpl
pusha
cmp
push
xor
aas
es
inc
sbb
cmp
fildl
jle
pop
addb
mov
aam
mov
or
cwtl
jo
and
bound
xchg
push
mov
push
jl
xchg
pop
aad
push
stc
rcll
push
data16
fucom
jne
std
mov
xchg
cmpsl
push
jp
sbb
fnsave
push
jb
movsb
orb
orb
adcl
ds
dec
lret
xchg
sar
mov
jbe
push
jns
cli
jg
pusha
xor
push
shlb
lret
insb
insl
pop
je
out
rol
lret
pop
cwtl
or
jbe
sub
sti
int
mov
mov
repz
cwtl
daa
and
jno
push
inc
std
decl
nop
mov
dec
mov
push
xchg
or
pop
push
mov
shrl
mov
rcll
mov
adc
inc
adc
ret
ljmp
test
scas
jo
and
push
jae
pop
psadbw
sarb
pushf
inc
cmpsl
stc
dec
stc
dec
icebp
sar
out
adc
movsb
lss
insl
xchg
int
dec
cld
jg
pop
mov
xor
cmp
pop
fldcw
xchg
mov
jbe
xchg
and
xlat
sti
into
test
cmp
test
leave
or
add
adc
inc
sarl
adc
mov
in
lcall
mov
gs
push
add
mov
negb
sbb
add
pop
push
add
pusha
les
add
ss
cs
clc
push
pop
mov
push
sub
adcb
xchg
xor
fidivs
push
hlt
out
xchg
pop
daa
inc
outsb
ds
xchg
ds
stc
or
sbb
jo
sarb
daa
in
add
adcb
adc
sbb
lods
in
mov
clc
ja
sbb
push
jo
add
leave
push
mov
movsl
xlat
stos
rclb
clc
xor
outsb
or
repnz
dec
sub
dec
jb
fdivs
push
inc
int3
leave
mov
adc
js
es
or
pushf
int
loope
mov
aam
sti
mov
pop
push
cmp
rorb
lods
ljmp
xchg
test
jne
pushf
sti
scas
xchg
shrb
jb
mov
iret
mov
and
dec
popa
and
xchg
ds
xor
insb
push
sahf
pusha
jno
loop
add
or
sub
push
jno
xchg
sbb
ljmp
sbb
mov
loopne
push
pop
mov
popf
jmp
cli
ss
push
bound
outsl
sbb
sbb
fdivs
push
push
and
sub
push
and
cmp
data16
test
loopne
fisubrs
and
lcall
fldt
out
xor
mov
test
mov
stos
mov
mov
popf
fs
lods
adc
dec
mov
cmc
cmc
sub
fidivl
stos
insb
adc
mov
push
inc
or
popa
and
pop
dec
mov
ficoml
in
jle
rcrb
pop
andb
out
cmp
subl
mov
xchg
adc
jmp
test
cmc
or
dec
xor
jle
jmp
call
int3
xlat
mov
dec
dec
adc
xchg
mov
sub
jb
addr16
lret
out
jne
into
lds
mov
negl
packsswb
ret
push
pop
xchg
icebp
cmp
xchg
add
dec
loopne
testb
inc
sub
sbb
xchg
scas
pop
adc
or
sbb
and
xor
dec
jge
clc
ds
cmp
jmp
mov
mov
call
daa
out
jno
out
or
inc
xlat
and
les
mov
sbb
or
push
mov
xchg
adc
or
ret
add
cmpsb
push
xrelease
or
sub
or
pusha
mov
mov
je
mov
mov
aad
mov
jg
stc
in
out
shl
cli
mov
lds
rol
jge
stos
cmpsl
sar
push
inc
lea
add
mov
andl
adc
cwtl
je
sbb
pusha
jns
fnstenv
push
or
push
cmp
jp
mov
das
adc
sahf
cmp
outsb
jae
lcall
ret
out
pop
cmpsb
and
jns
pushf
repz
out
pushf
pushf
add
ret
shr
stc
bound
xor
mov
jp
out
sbb
xchg
inc
sub
and
pop
mov
popf
scas
sub
cltd
and
lods
or
dec
jno
lea
sarb
fucomi
hlt
or
repnz
mov
adc
testl
dec
cwtl
jmp
testl
sbb
xor
cs
bound
and
add
lods
fptan
add
test
jns
cltd
dec
cli
pop
push
push
jns
adc
xchg
adc
imul
dec
xchg
stos
test
xchg
sarb
shlb
inc
lods
mov
xchg
add
xor
and
jbe
inc
pop
test
xorl
and
xchg
pop
lods
xor
lock
adc
adcb
fst
jae
fdivl
adc
sbb
add
lret
out
jmp
push
shrb
scas
pop
or
cmp
mov
pushf
movsl
in
or
xchg
ss
add
or
dec
sub
fldt
ficomps
jecxz
xor
jl
xchg
test
xor
mov
push
or
lea
mov
add
lcall
rclb
xor
sete
pop
notl
mov
insl
dec
cmp
push
push
add
jnp
lret
pushf
mov
lds
xor
mov
pop
insb
ds
xor
ss
sbb
popf
out
xlat
repz
fisttpl
sti
adcl
andb
cltd
inc
jecxz
xor
inc
or
fimull
xor
mov
out
inc
pop
fsubs
pop
fdivrs
movsb
mov
clc
add
fwait
sub
lods
cltd
xchg
stos
les
ljmp
xor
out
aaa
lcall
mov
fimull
lods
jae
imul
dec
in
imul
cs
mov
mov
add
push
pop
rol
rorl
add
and
gs
inc
add
fstpt
xor
out
mov
xor
ss
mov
mov
daa
int
adcb
orb
aam
jb
inc
gs
pop
movsb
mov
ds
out
and
cmp
addr16
sub
pop
inc
nop
js
dec
mov
movlps
push
pop
and
getsec
test
js
movsl
xor
pusha
gs
enter
int
test
sti
cmpsl
outsl
ret
lahf
adc
dec
cmp
adc
ret
push
sti
adc
or
lods
aam
not
or
mov
or
pushf
adc
jo
mov
sbb
movsb
cmpsl
jge
roll
shlb
mov
or
pop
jp
adcb
out
stos
push
mov
pop
mov
ret
mov
fisubrs
push
fwait
mov
popa
sub
addb
lret
cs
popl
lret
imul
pop
inc
and
add
push
mov
or
ljmp
scas
adc
pushaw
push
in
loope
aas
mov
jge
pop
stos
mov
xchg
rcrb
rcll
in
ss
loopne
fcomi
movsb
mov
les
scas
mov
jg
inc
cltd
adc
sarl
sbb
jbe
test
pop
mov
jb
sbb
imul
cltd
fisttpll
movsb
out
mov
push
dec
jae
pop
jle
aas
push
mov
pop
stos
cmp
pop
imul
dec
test
jg
mov
jbe
les
std
testl
mov
out
push
into
push
clc
mov
inc
xlat
mov
out
push
cmp
pop
jg
cmp
test
cli
and
aas
or
mov
mov
fistl
int3
sar
mov
jno
cltd
ds
out
lock
fs
xor
lret
jl
lcall
movsl
pop
scas
fimull
cld
inc
push
pop
test
sahf
and
push
add
jmp
cli
ret
into
iret
sahf
push
stc
xor
repz
sub
mov
sub
gs
cwtl
cs
ret
leave
sbb
decb
lds
in
in
sbbb
into
inc
cmc
add
int
xor
test
jnp
mov
xor
push
push
sub
or
sti
mov
jae
clc
mov
loopne
adc
xchg
pop
popf
jnp
sarl
push
sub
xchg
add
dec
mov
in
pop
xor
jno
adc
faddl
mov
ss
jae
cmp
popa
ja
scas
jne
insl
pop
push
pop
les
imul
push
push
cmp
lock
xlat
adc
bound
dec
mov
sbb
cmp
mov
mov
and
sub
dec
repz
lret
loope
lret
mov
idivl
cltd
test
add
lahf
ja
push
inc
cmc
inc
xchg
xchg
mov
movsl
pop
lahf
mov
dec
adc
pop
mov
cmp
lahf
adc
mov
push
stos
fld1
xchg
mov
lcall
mov
adc
leave
push
out
sbb
mov
idivl
shlb
in
inc
and
mov
jmp
xchg
cli
stos
push
out
cmpsl
push
jmp
je
enter
xorl
push
out
cmp
in
xorb
loopne
mov
stos
cld
out
adc
subl
in
mov
sbbl
inc
fidivs
mov
dec
xchg
fs
fidivs
inc
or
jge
scas
adc
push
or
cmp
es
test
fists
mov
daa
mov
mov
daa
xchg
sub
push
dec
scas
dec
js
cmpsb
shll
fidivrl
aas
jnp
rorl
adc
adc
push
pop
sbb
pop
std
inc
mov
sub
pop
lahf
ljmp
lahf
cltd
mov
fwait
sbb
popa
test
ljmp
cmp
mul
or
pop
push
mov
jae
test
ret
ss
dec
jns
xchg
inc
inc
outsl
jl
xchg
jecxz
iret
sub
pop
xchg
pop
sahf
pop
jb
fidivl
insl
cmpsb
lods
mov
cmpsl
movsl
pop
jne
ss
adc
add
xchg
inc
push
mov
fiadds
test
adc
fists
push
orb
mull
ficoml
mov
cmp
lret
fdivrl
das
sbb
fsubs
in
dec
add
out
pop
pop
cwtl
fidivrs
lahf
mov
incl
and
xchg
jb
add
cmp
cli
jp
xor
inc
arpl
scas
add
and
mov
pop
mov
insb
mov
adc
pop
xor
mov
jecxz
and
aad
inc
out
push
movsb
jo
insb
add
test
xchg
das
cmp
inc
dec
sbb
pop
lahf
or
sbb
mov
mov
inc
cmp
icebp
jnp
das
lea
jnp
mov
mov
hlt
insb
jo
xchg
addr16
add
out
push
xchg
gs
mov
and
out
rclb
daa
daa
mov
and
aaa
rorl
add
cmpsl
aad
and
andl
ds
dec
arpl
xor
inc
sub
cltd
xchg
mov
push
lret
sbb
and
xchg
fisttpl
push
std
mov
outsl
push
or
fnsave
add
test
ficoml
repnz
nop
lea
mov
bound
fildl
pop
bsf
in
inc
pop
daa
add
sub
in
mov
mov
push
dec
lret
clc
inc
movsb
and
test
cli
iret
jnp
adc
arpl
test
or
rcll
je
pop
insl
mov
push
pop
repnz
xchg
int3
out
mov
sub
gs
movsl
cmp
test
int
dec
or
insl
in
rorl
sub
adc
iret
sub
imul
cmc
phsubw
sbb
jae
push
xor
scas
push
cmp
ficoml
add
scas
xor
pop
mov
push
aas
sbb
bound
inc
xor
shll
adc
push
jle
add
sarl
xor
fimuls
jno
and
cwtl
insb
pop
fs
mov
ss
push
push
shrl
push
addr16
push
adc
divl
lods
inc
push
adc
into
cmp
shll
ds
sub
xor
xchg
insl
inc
jle
rcr
inc
sbb
test
sub
in
push
movsb
xchg
subl
ror
into
int
jecxz
sub
jle
mov
iret
or
lds
testl
push
push
ljmp
mov
out
loope
mov
dec
or
add
in
mov
xchg
mov
mov
xchg
mov
cmp
push
lahf
dec
xchg
gs
pop
pushf
arpl
out
in
sub
js
xchg
pop
bound
add
cmp
in
mov
in
xor
jo
mov
jg
pop
aad
stos
xor
cmp
lahf
ret
out
xchg
ret
sahf
sbb
mov
stos
sbb
push
rolb
push
mov
nop
xor
int3
int
mov
scas
mov
cmpl
xor
xchg
mov
mov
mov
rcl
in
xchg
add
test
push
push
loop
or
int3
lcall
and
fs
dec
hlt
aas
mov
movb
xlat
mov
dec
bound
or
dec
rcll
jns
mov
mov
dec
popf
push
xor
je
mov
lock
arpl
mov
test
mov
cli
push
lret
fldt
jg
inc
adc
out
push
pusha
out
loopne
popa
int3
sahf
aad
call
xchg
shlb
je
cmp
iret
daa
lods
stc
sbb
fcmovbe
aad
lock
cmp
dec
into
outsb
test
div
popf
es
test
lea
xlat
inc
pop
mov
stc
pop
push
pop
mov
mov
les
mov
mov
flds
mov
mov
push
pop
call
dec
mov
mov
mov
stc
cmp
je
test
lods
dec
fimuls
push
xor
cmp
lods
cmpsl
loope
push
jmp
xlat
call
clc
lret
add
cli
or
es
dec
add
add
adc
jnp
das
out
test
add
ret
or
cld
mov
push
mov
cli
dec
imul
pop
cmp
push
and
and
ret
out
fs
cmpsl
testb
sub
subb
cmc
pop
hlt
arpl
shl
push
test
or
repz
add
mov
neg
shrl
in
outsl
test
lods
data16
lcall
jmp
jne
popa
imul
jle
sbb
pop
fistl
adc
shlb
out
shl
ds
out
adc
xchg
xor
jbe
dec
inc
mov
pop
insl
push
popa
inc
cmp
ud2
jo
push
add
stc
lods
pop
in
mov
fcompl
cmpb
cmp
add
lods
imul
insl
or
stc
pop
sar
dec
in
jno
stc
cli
sub
insb
push
inc
sahf
dec
adc
push
pop
xor
mov
std
imul
pop
xchg
icebp
aas
jo
dec
push
mov
add
filds
inc
lods
jle
je
adc
mov
es
pop
mov
mov
pop
pop
test
out
push
adc
cmc
icebp
cmp
cwtl
add
push
jg
inc
adc
out
pusha
mov
jmp
repnz
fwait
fcom
lret
int
mov
mov
aad
mov
test
push
out
and
hlt
jb
mov
in
ja
xchg
push
add
mov
sbb
or
jge
out
inc
pop
or
push
push
adc
js
sarb
push
and
sbb
cmp
xor
and
jle
fdivp
xchg
sti
inc
push
dec
jae
in
divb
fstps
lcall
push
push
push
shl
adc
gs
repz
ds
pop
clc
shll
mov
and
sbb
pop
outsb
test
in
pop
fistps
sbb
in
maskmovq
notl
mov
dec
jge
adc
or
xor
dec
sub
xchg
sub
ss
xchg
mov
jmp
inc
in
mov
mov
stc
mov
sbb
push
call
rorl
inc
inc
cmp
cmp
push
call
je
sub
outsb
addr16
in
and
cmp
fldenv
add
lds
sbb
dec
sahf
test
aaa
je
cltd
lods
cmpsb
inc
in
popa
into
adc
push
cs
cld
imul
in
aas
xor
adc
movsl
sub
push
int
push
iret
pop
push
push
ret
xorb
xor
fnstsw
or
mov
out
loope
je
sub
push
mov
stos
jge
les
cmpb
imul
sbb
nop
push
cli
fwait
loopew
xor
fistpll
int
cs
outsl
push
aam
scas
cmpsb
cmp
inc
adc
dec
mov
loope
dec
inc
push
dec
not
nop
loop
pushf
out
sub
xor
add
mov
pop
adc
lcall
xchg
jl
repz
jg
inc
faddp
fcmove
mov
jl
mov
pop
mov
pop
mov
lcall
cmc
pop
in
jnp
mov
movsl
std
in
sub
inc
adc
mov
jle
pop
pop
nop
mov
loopne
xchg
pop
push
adc
scas
mov
xlat
mov
or
outsl
es
arpl
sub
jg
dec
or
roll
cmc
mov
jge
or
mov
repnz
lock
cmp
sub
mov
add
fwait
lahf
dec
mov
dec
pop
push
mov
test
fldt
sbb
sbbl
imul
push
ds
push
cmp
andl
jmp
imul
repz
out
rorl
xchg
mov
mov
push
lods
bound
pusha
test
sbb
or
mov
or
jge
cwtl
jb
addb
xor
aas
jo
daa
test
jo
das
sbb
cmovo
aas
pop
xchg
mov
jle
inc
and
xlat
lretw
or
xor
cmp
xchg
pushf
rep
jl
mov
pop
pop
or
jmp
adc
xchg
iret
dec
jmp
aaa
jns
test
push
js
scas
incb
out
bound
subb
mov
sub
cwtl
add
pop
cmp
cmp
mov
mov
push
test
lea
ret
and
cmp
repz
xor
fidivrs
or
test
mov
jae
or
fldt
jg
mov
inc
add
fmuls
in
mov
in
imul
pushf
test
mov
mov
jge
mov
into
mov
jb
rcll
in
sub
xor
test
daa
scas
push
adc
std
jnp
ljmp
pop
cmpsl
ja
fisttpll
push
aam
aaa
push
mov
dec
gs
das
lds
inc
mov
jnp
add
xchg
xchg
out
push
stos
loop
mov
xor
loop
lcall
cmpsw
adc
pop
cmc
inc
mov
lahf
jno
xchg
sub
push
cmp
dec
outsl
stos
sub
addr16
xor
sbb
pop
inc
pop
xor
push
dec
jno
push
jle
test
cli
xchg
mov
nop
mov
les
push
cmp
jae
fiadds
pop
ret
inc
in
enter
enter
push
sbb
in
inc
adc
push
mov
xchg
push
push
mov
or
sti
mov
ret
jno
cmp
aaa
aad
jne
jb
push
leave
sub
andl
jne
and
mov
mov
pop
or
int3
popa
inc
fs
loope
call
xchg
cld
cmp
loope
jae
in
lds
cmc
lods
out
mov
test
imul
add
cmp
and
jne
cmp
sub
sub
adc
add
jmp
dec
jns
mov
push
pop
dec
aas
rorb
scas
sarl
adc
xor
es
mov
push
adc
jmp
and
and
jns
cltd
bound
std
int
push
fidivrs
aam
lods
dec
xchg
dec
jl
bound
shrb
and
pushf
sub
xchg
cmp
dec
in
and
pop
rcr
adc
mov
fldt
movsb
jnp
lret
out
in
pop
xorl
bound
loopne
push
loop
into
ljmp
xchg
jl
xor
push
push
in
mov
insl
fs
ljmp
testl
addr16
cmpsb
or
ss
mov
ja
add
mov
xor
or
adc
pop
xor
push
push
fucomp
jns
pop
gs
in
test
mov
dec
xor
icebp
xor
jbe
pop
fdiv
and
cmpsl
dec
xchg
lret
pop
fs
inc
mov
jbe
cwtl
in
jns
shlb
adc
jmp
push
movsb
call
jmp
daa
sbb
lcall
aaa
arpl
out
push
pusha
push
loope
in
fst
or
scas
das
cmp
inc
cmp
dec
push
cmp
mov
fwait
jmp
xchg
adc
shlb
inc
rorb
push
mov
pusha
sbbb
loop
push
adcb
cwtl
fcompl
add
xchg
in
push
insl
daa
lea
dec
in
mov
icebp
pop
loopnew
jmp
mulb
and
jnp
pop
or
cmp
js
xor
inc
loopne
sub
test
out
jb
int
and
lock
sbb
jmp
hlt
loope
nop
dec
or
test
leave
out
dec
shl
cli
jo
cmc
out
shl
push
xchg
fildl
lahf
loope
shlb
xchg
mov
int
fwait
aaa
lret
subb
or
fs
mov
stc
fdivs
popf
adc
outsl
add
push
inc
imull
sub
push
in
sbb
repnz
jle
enter
ret
xorb
mov
scas
cli
and
ss
fwait
mov
inc
call
mov
push
iret
in
nop
mov
out
popf
mov
repz
scas
adc
push
loope
cmp
add
pop
sbb
jbe
pop
icebp
add
mov
sbb
jl
mov
xchg
pop
pop
dec
pop
fidivrs
mov
sahf
lds
mov
add
std
push
cs
mov
add
repnz
mov
pop
push
adc
jle
inc
in
mov
insb
ds
jmp
mov
push
mov
and
or
sub
int3
aam
mov
outsb
cmc
aas
es
das
ja
mov
pop
push
das
loope
outsb
bound
push
inc
sahf
mov
popa
adc
push
mov
xchg
popa
in
stos
mov
jae
aad
inc
sub
mov
lods
cltd
ljmp
rol
jp
imul
and
and
pop
mov
inc
push
iret
lock
mov
jge
pop
shlb
xchg
in
cltd
dec
adc
xchg
lret
jle
es
push
mov
mov
xchg
lret
adc
adc
xchg
adc
popl
insb
cmpb
mov
out
insl
popf
and
jl
xchg
es
cld
mov
cli
fimull
pop
frstor
int
lcall
xor
dec
add
add
mov
out
rep
jp
cmpsb
push
fidivl
cmp
or
imul
push
mov
mov
push
bnd
stos
sub
rcll
inc
inc
jae
arpl
sbb
mov
jb
cmp
mov
sub
imul
sub
adc
data16
xchg
fcmovnu
sbb
sub
sbb
adc
ss
mov
jecxz
cmp
je
inc
insb
fadd
testb
cs
and
xchg
notl
nop
xchg
dec
or
imull
mov
lret
pavgw
std
and
dec
addr16
mov
mov
xlat
out
fwait
lret
nop
jne
test
mov
test
mov
mov
push
aad
adc
iret
dec
lret
adc
loop
call
push
cmp
dec
roll
repz
pop
std
jecxz
xchg
fdivr
mov
les
stos
cmp
and
inc
cli
jmp
push
mov
pop
fbstp
push
jne
gs
js
repnz
push
das
pop
sbb
aam
cmp
bound
adc
xlat
daa
sti
ljmp
popf
sbb
mov
out
xchg
in
in
div
or
lds
in
or
adc
into
cmp
loopne
mov
inc
ret
add
jo
sbb
enter
pop
mov
push
adc
sbb
rorb
mov
add
mov
mov
scas
pop
xor
dec
in
fcmovb
cmp
dec
test
cld
repnz
adc
aam
push
inc
es
test
in
mov
test
fcomip
mov
fisttps
testl
mov
or
jge
cmpb
sub
jae
rcrb
enter
mov
push
inc
jns
notl
mov
jmp
dec
push
and
xchg
dec
aad
lcall
nop
sarb
imul
arpl
push
fs
scas
out
cmp
stc
xchg
jns
stos
scas
aaa
cmp
and
pop
and
mov
orl
std
or
shr
ljmp
insb
jns
mov
ljmp
push
and
nop
cli
jno
sub
sbb
std
sub
lret
lcall
in
call
addl
cmp
mov
jge
iret
mov
jbe
iret
ja
mov
pop
jb
sbb
enter
lea
cmp
push
and
push
add
push
mov
into
push
pop
addr16
mov
int3
xor
inc
shlb
xlat
rcrl
rclb
pop
popa
rcrl
rorb
pop
shlb
les
outsb
shr
inc
in
and
out
mulb
fimuls
pop
stos
sti
cmc
mov
lods
add
int
cmpsb
addl
test
imul
aaa
inc
in
stos
inc
add
aad
scas
imul
pop
jns
jmp
lahf
inc
sbb
mov
and
adcl
xchg
mov
pushf
add
jb
mov
xchg
aaa
adc
les
repz
mov
dec
inc
sbb
jb
and
repnz
mov
insl
mov
repz
dec
test
sbb
ljmp
push
add
xchg
nop
mov
std
adc
test
push
jb
add
sbb
in
or
js
mov
out
push
pop
test
fidivs
hlt
and
pop
sub
out
hlt
sti
xor
adc
imul
jmp
sub
outsb
inc
insb
es
cmp
inc
xor
ds
pop
fidivs
push
cld
xor
test
push
aam
sbb
mov
sub
out
pcmpeqb
cwtl
insl
push
push
sbb
loope
mov
sbb
nop
xchg
pop
cmp
mov
aas
es
aaa
mov
inc
cmpsl
cmc
repnz
insl
add
xor
push
pop
outsl
dec
leave
jo
and
and
loope
in
mov
push
ret
rorl
mov
pop
out
mov
loop
xor
divl
mov
movsb
jo
and
mov
inc
mov
mov
fists
scas
inc
mov
inc
imul
inc
jp
push
lret
pop
sbb
adc
and
ficompl
mov
adc
adc
cmp
popa
cmpl
leave
sub
inc
mov
push
sbb
pusha
ret
xor
arpl
adc
cmpsb
inc
out
mov
pop
xchg
test
or
jbe
mov
push
push
jne
mov
cs
sub
outsl
call
mov
pop
pop
cmpsb
cwtl
pop
inc
push
push
loop
jmp
gs
clc
cltd
inc
or
mov
or
xchg
inc
cld
adc
or
sub
jo
cmp
and
xor
ss
popf
iret
mov
sub
jne
mov
and
push
cs
or
mov
xor
insb
scas
xor
fimuls
mov
mov
add
xchg
leave
sbb
sbb
outsl
sub
andl
fnsave
pop
sub
jmp
sti
lods
mov
mov
loopne
mov
jl
rcll
mov
xchg
cmp
xor
idiv
cmc
cmp
mov
in
rclb
inc
xchg
sahf
sbb
push
pop
cs
fmull
aas
insl
mov
or
ret
shl
inc
adc
and
xor
pop
jecxz
inc
jbe
add
jae
dec
mull
add
ror
xor
xchg
repnz
ljmp
subl
mov
adc
movsb
test
xchg
push
jo
std
pop
jns
pop
cmp
jp
outsl
aad
sti
or
in
ja
divl
mov
and
mov
jae
dec
mov
jb
add
inc
inc
fs
dec
nop
xchg
lea
shrb
adc
aad
jno
cs
js
cwtl
cmpsb
adc
subl
arpl
xor
ret
push
ret
out
out
scas
hlt
frstor
add
mov
mov
mov
xor
sti
cmpsb
cmp
xor
test
mov
das
mov
jl
ja
and
add
test
jmp
cmc
loopne
inc
imul
push
push
xor
mov
push
add
outsb
mov
push
sahf
outsl
sub
xor
pop
mov
cwtl
pop
aaa
clc
dec
idivl
xchg
inc
into
std
cmpsl
daa
cmp
push
out
dec
pop
loop
bnd
testb
aas
in
jo
jmp
and
shll
cmpsb
outsl
loopne
mov
jae
out
pop
add
pop
inc
jmp
fildl
shrb
adc
mov
add
mov
outsl
mov
xchg
or
cmp
mov
cli
or
dec
cmp
lods
nop
jno
cmp
xor
pop
rcr
out
in
and
sahf
mov
subl
decb
ficoms
mov
cli
xchg
jbe
fnstsw
movsl
dec
cmpl
in
jbe,pt
out
aad
int
ret
cmpsb
xchg
jnp
mov
inc
call
stos
cmp
out
stc
pavgw
rolb
push
cltd
cwtl
enter
je
cmpsb
arpl
jbe
mov
or
push
outsb
orl
arpl
push
dec
mov
jno
test
mov
xlat
mov
lcall
out
inc
or
sbb
push
mov
outsb
xor
loope
fcompl
loop
fildll
popf
jbe
xchg
lret
pop
lods
inc
lock
push
stc
inc
cmp
lds
leave
mov
cmc
les
outsl
lret
pop
aad
push
mov
nop
push
cs
out
mov
andb
cmpsb
push
lret
fs
xchg
adc
xchg
movb
cmp
inc
pop
ja
imul
jge
les
std
xchg
xlat
mov
or
es
dec
ljmp
js
es
inc
div
fldenv
leave
adc
xchg
and
fstpl
pop
push
mov
mov
inc
sbb
xchg
out
test
and
sar
rcrl
xlat
jp
sti
aas
jnp
and
js
out
add
and
int3
lods
sub
mov
push
mov
pop
pop
pop
fsts
lret
jle
xchg
xlat
into
mov
cmpsl
lock
cld
mov
push
pop
insb
rol
pop
sbb
jne
fstps
repnz
cli
ss
in
sub
scas
adc
jb
lds
pop
loop
out
outsl
jae
icebp
mov
xchg
mov
call
add
nop
push
rclb
inc
jbe
push
fdivrl
inc
mov
call
adc
mov
or
aaa
je
mov
outsb
cmp
add
out
fcmovbe
ds
adc
sbb
scas
enter
imul
daa
jne
loop
push
aam
adc
js
sub
push
lods
div
xchg
aaa
xchg
inc
xchg
mov
repnz
push
aaa
lock
xor
movsl
mov
inc
cwtl
push
out
lock
cld
mov
mov
pop
ret
cs
pushf
gs
aam
cmpsl
testl
les
mov
mov
pop
mov
mov
mov
jmp
xchg
test
mov
adc
inc
jl
xor
ljmp
sub
nop
push
shlb
pop
jmp
cmp
push
addb
mov
loopne
pop
mov
cmpsl
clc
push
mov
push
iret
xor
stos
mov
cli
bound
adc
outsb
ljmp
cmp
and
sub
jb
sbbb
jo
push
adc
inc
push
stos
mov
fbstp
add
fnsave
loop
movb
pop
scas
int3
sbb
nop
pop
movsl
orl
sbb
jp
js
mov
stos
lcall
push
movsb
xlat
jno
and
lret
xor
adc
int
mov
pop
sub
push
fsubl
and
outsb
cmp
arpl
xchg
jns
sbb
fisubs
pusha
ret
add
xchg
es
addl
push
mov
shl
out
push
and
xchg
jmp
add
jnp
add
sbb
es
insb
insl
or
inc
jg
cmpsb
dec
jnp
cmpsb
pop
jp
or
xor
xor
notl
call
push
lcall
jae
lahf
or
jl
cmp
xor
incl
lock
push
mov
mov
mov
inc
je
frstor
jo
inc
negb
sbb
pop
and
fwait
shlb
push
mov
ret
lock
nop
test
pop
mov
xor
jo
xorb
invd
inc
dec
inc
shlb
shlb
xchg
int
out
das
mov
cmp
fisttpll
jo
mov
imul
sub
xchg
cmp
loopne
mov
addb
outsb
addr16
jle
jne
fnstcw
mov
sti
popf
pushl
pop
sub
imul
into
dec
push
rcrb
mov
aam
push
int
mulb
inc
arpl
loopne
aaa
push
ret
adc
cmp
sbb
sti
gs
dec
xchg
cmp
jno
insb
data16
or
and
fistps
xor
sub
inc
mov
adc
dec
bound
mov
cmpsb
test
add
xor
mov
fadd
cmpsb
pop
dec
cmp
add
std
in
nop
or
adc
nop
in
sahf
pop
repnz
ret
jl
lods
push
aad
insb
jg
and
add
pop
pop
scas
cmp
and
cmp
in
sub
sarl
push
fdivrl
mov
outsl
cmp
pop
mov
mov
sbb
or
dec
mov
adc
mov
mov
mov
fnstsw
push
or
ret
movsb
adc
sti
and
shrb
push
movb
flds
adcb
or
stc
xor
rclb
cmp
xchg
andl
in
sub
fyl2x
mov
in
lahf
xchg
arpl
push
jbe
xor
xchg
mov
sti
push
sahf
mov
gs
rcrl
push
and
xor
and
inc
adc
jb
aad
lret
scas
mov
hlt
dec
push
movsl
push
sub
mov
loopne
or
mov
stos
mov
inc
imul
adc
sbb
or
lea
je
stos
mov
push
jo
les
cld
bound
mov
call
jl
adc
adc
push
in
jecxz
lods
ds
xor
repnz
popa
push
ret
sub
inc
into
add
mov
rcrb
pop
push
gs
jbe
adc
adc
add
sub
mov
xchg
pop
cmpsb
mov
fildll
and
push
dec
outsl
cmp
hlt
sarb
popf
jns
aas
jno
sub
jbe
aas
cmc
or
adc
and
xor
inc
popa
pusha
pop
push
inc
testb
jns
shlb
icebp
pop
pop
push
cmp
mov
lods
push
inc
dec
xchg
lret
iret
jecxz
jl
jmp
dec
testl
push
mov
or
jo
ds
out
xor
pop
mov
add
jle
pop
jp
mov
rcll
xchg
inc
push
dec
mov
mov
fcmovb
das
sub
inc
xchg
in
mov
lods
pop
setg
jo,pn
mov
cli
int3
mov
jge
insl
sub
xor
rcll
lret
mov
jge
outsb
jg
mov
sub
sub
ja
pop
js
mov
imul
enter
pop
out
and
dec
leave
mov
mov
inc
sar
inc
mov
and
mov
lret
xor
inc
push
sbb
inc
mov
js
or
cmpsb
add
push
and
cli
inc
ficompl
out
xor
sbb
sbb
push
in
fldt
pop
outsb
push
les
inc
into
push
jns
inc
mov
cmc
jg
pop
imulb
fildll
pop
in
movb
ja
data16
push
addr16
sar
cmp
mov
mov
mov
daa
inc
add
and
add
sbb
arpl
jle
adc
daa
test
xchg
fs
push
call
mov
xchg
fsubl
in
mov
movsl
dec
mov
mov
mov
adc
and
lock
lods
dec
jle
xlat
sarl
mov
aaa
sub
cmp
cmp
ds
push
leavew
stos
jne
or
icebp
sti
lret
loop
es
push
aam
and
inc
pop
je
xchg
jl
inc
jne
xchg
call
loopne
and
or
cmp
addl
fs
add
xchg
imul
dec
jmp
rcrl
popa
in
outsb
and
scas
push
cmpb
les
mov
dec
das
ljmp
pop
dec
fistpl
sub
sbb
push
cmc
push
cmp
inc
push
lods
popl
xor
bndldx
ljmp
pusha
sbb
lods
js
mov
lcall
and
mov
xchg
and
mov
in
add
or
popf
int
stos
jnp
mov
pop
jne
cmpb
xor
cmp
push
and
loop
loope
aad
ljmp
pminub
cmc
mov
jnp
rorl
and
and
rcrb
push
int3
rcrl
push
stc
sti
or
inc
test
or
jge
sbb
and
push
arpl
aad
add
or
sub
jb
repnz
mov
imul
cmp
xor
cmp
fsubl
stc
decb
mov
lret
jbe
or
cmp
dec
fstl
lret
movsl
andb
sbb
xchg
clc
fisubl
xor
hlt
sbb
repnz
popf
mov
xor
cmpsb
dec
test
jle
sbb
pop
divl
sub
aaa
in
loope
or
jle
add
push
adc
jmp
std
pop
fsubrs
mov
mov
sub
outsb
ja
cmc
mov
daa
push
inc
daa
inc
int
mov
addb
loope
daa
movsl
call
je
dec
into
out
push
aam
add
test
das
add
add
jnp
pop
add
fmuls
rcll
sbb
mov
and
sahf
push
and
sub
push
into
popa
fmuls
mov
adc
cli
jmp
pushl
inc
loopne
out
inc
lret
jb
imul
iret
lock
pop
adc
pop
ret
fwait
adc
push
popl
out
out
daa
jbe
cwtl
add
incl
sub
repz
pop
mov
dec
jnp
xor
or
int3
in
sahf
aas
nop
cmp
add
jl
mov
cmp
cmp
or
mov
dec
cmp
mov
jge
add
ret
rcrb
pop
add
ret
setb
ret
and
fwait
ljmp
inc
lcall
mov
cmp
pop
pop
jno
mov
enter
mov
lret
pop
in
int3
test
push
unpckhps
and
in
scas
adc
push
push
movsb
lcall
dec
mov
pusha
and
ret
dec
jg
mov
cwtl
cs
repz
ljmp
sbb
mov
stos
mov
xor
sbbb
add
shlb
and
cmp
xor
sti
adc
jbe
pop
flds
adc
jg
push
push
sub
mov
push
xchg
push
test
cmp
ljmp
ds
movsb
lock
repz
sub
jl
inc
fdivp
icebp
xchg
jmp
aaa
or
test
inc
mov
sbb
ret
movsb
mov
sahf
pop
and
out
popf
mov
adc
fcomps
lret
mov
sbb
dec
or
pop
mov
mov
in
dec
fwait
mov
add
lret
loope
adc
mov
cld
add
push
pop
popa
scas
pop
div
incl
mov
fidivrl
ljmp
imul
inc
cmp
push
or
je
pop
or
cmpsb
dec
cmp
jne
sbb
xor
cmp
inc
divl
call
in
pop
lods
out
or
inc
jbe
iret
xlat
cltd
aaa
in
gs
call
push
inc
pop
fbstp
and
dec
insb
mov
mov
inc
stc
adc
js
xchg
cld
decb
and
pop
push
jmp
or
xor
jb
aas
mov
cwtl
jecxz
mov
jl
std
das
fnsave
cmp
lods
scas
lahf
dec
pusha
test
sbb
je
nop
xor
sbb
jbe
or
dec
inc
je
out
mov
dec
je
add
subb
xchg
dec
cld
jno
push
or
xor
addl
sub
movsl
adc
push
push
push
jnp
insb
xchg
mov
mov
mov
shlb
adc
test
rolb
mov
daa
jge
fldl
lods
hlt
push
ret
rcrb
xchg
xor
push
mov
xor
xor
push
roll
fdivrs
dec
inc
sbbb
cmpsb
gs
in
inc
inc
das
sub
and
rclb
test
xchg
and
mov
and
mov
notb
ftst
xchg
mov
jecxz
gs
mov
inc
daa
mov
adc
je
sub
sub
mov
mov
sub
or
adc
xor
xchg
or
clc
cmp
js
icebp
nop
and
dec
insb
adc
mov
mov
pushf
sbb
insb
xor
add
ljmp
cmp
jae
adc
xor
jge
adc
sub
xor
pop
in
or
push
in
xchg
adc
or
addr16
cmp
sub
clc
mov
push
imul
and
mov
loope
cwtl
mov
add
rcr
insl
and
jne
mov
sbb
push
cmpsl
mov
mov
pop
sbb
mov
cld
ret
lods
icebp
negl
mov
mov
xor
dec
dec
les
lods
mulb
stos
outsl
push
inc
loope
out
fstpl
add
xor
push
aad
adc
adc
push
stos
lret
shrb
fistpl
dec
scas
mov
lret
mov
sbb
push
fisttpll
jns
push
add
shll
jno
add
xchg
and
add
pop
cmp
push
aaa
dec
call
enter
outsl
xchg
or
fsubs
stc
shll
jno
aas
movsb
jbe
mov
mov
shl
push
xor
iret
and
mov
sub
scas
adc
divl
das
shrb
mov
pop
mov
out
scas
dec
pop
aas
mov
aas
lods
stos
adc
mov
xchg
push
xchg
or
sbb
jl
jbe
imul
test
jno
fcomps
sub
xchg
jp
add
in
clc
or
movsl
and
push
or
je
out
fwait
cmp
testb
xchg
icebp
subb
clc
rorb
mov
jg
add
mov
daa
out
mov
mov
mov
aas
xor
sub
ja
or
cmp
fcmovb
int3
xor
stos
xchg
or
lods
jnp,pn
bnd
negl
pop
imul
punpckhwd
dec
ret
inc
insb
test
and
inc
pushl
fs
pop
push
mov
mov
cli
xchg
mov
movsb
stc
mov
in
fcoms
pop
xchg
out
test
mov
shr
add
dec
stos
xchg
mov
inc
inc
mov
dec
shlb
inc
sub
and
aas
aad
out
xchg
outsl
fninit
imul
movsb
out
xchg
jne
inc
mov
insb
repnz
xchg
in
inc
imull
outsb
inc
loope
xor
inc
push
fidivs
adc
xor
test
cld
mov
sub
mov
sub
sbb
xor
test
mov
mov
lret
sbb
pop
adc
addr16
aas
mov
cmp
repnz
mov
and
and
xchg
in
inc
add
jo
fidivrs
ja
inc
roll
inc
inc
adc
adc
sarb
nop
movsl
je
rorb
ret
and
mov
dec
jo
add
imul
adc
clc
jl
aaa
movl
mov
fcoml
fidivrs
push
jns
xchg
mov
jg
fs
lret
aaa
jl
xor
stos
lock
dec
int3
insl
xchg
int
adc
adc
ficompl
xchg
xor
jecxz
iret
cltd
lods
out
test
xor
in
mov
pop
jne
cmp
aad
mov
cmp
jle
outsb
fwait
mov
les
jno
ja
mov
gs
ljmp
neg
sub
test
div
mov
inc
inc
jmp
outsb
pop
jbe
aaa
mov
imul
aad
dec
mov
test
jmp
mov
push
cli
lret
jg
imul
mov
pop
movsl
aas
shl
leave
es
xchg
or
mov
jle
adc
dec
xor
push
xor
jbe
push
push
mov
into
add
adc
ss
mov
lods
pop
fsubp
dec
je
jmp
adc
incl
cmpsb
outsl
js
sarl
js
dec
dec
mov
mov
arpl
in
jg
dec
insb
aad
dec
std
outsb
xlat
cmc
daa
mov
in
jle
mov
insl
sahf
sub
mov
aam
int3
cmpsb
pop
icebp
sti
pop
sub
fdivrs
xor
ret
aam
imul
jno
enter
mov
and
int
pusha
cli
adc
fcmovnbe
insb
sub
xor
js
nop
ss
movsb
push
push
fucom
fs
scas
stos
fcmovne
loopne
add
aad
push
loope
bound
xchg
xchg
cltd
les
ss
cs
aaa
xchg
jno
clc
inc
xor
dec
jbe
les
adc
data16
ljmp
sbb
ret
xchg
fwait
aaa
das
fisttpl
or
sub
fisttps
sub
add
mov
test
jecxz
inc
aas
xchg
push
lods
test
or
or
cmp
and
loope
xchg
mov
loope
add
mov
inc
dec
xor
out
out
pop
out
dec
outsb
pop
sbb
jl
pop
lcall
ja
and
adc
push
int
sahf
lds
ljmp
push
xor
out
scas
jg
xchg
lcall
hlt
xchg
push
hlt
ja
mov
adcl
ja
dec
aas
insb
lds
test
jge
xlat
pop
pop
pusha
roll
xorl
mov
inc
xchg
xchg
int
les
jle
in
jmp
sbb
loope
imul
jl
mov
jb
lahf
add
fisubrs
add
aas
xchg
mov
inc
fldcw
jno
insb
stos
nop
popa
or
mov
add
loopne
pushf
dec
add
ret
inc
dec
push
lods
arpl
outsl
shll
dec
push
insl
hlt
inc
subl
fsubrl
les
pop
hlt
cwtl
jp
sbb
out
repz
cld
xchg
lcall
adcl
dec
or
pop
or
popa
pop
aad
adc
push
aas
stos
add
test
inc
push
cmp
cli
jnp
sub
jp
aas
sub
dec
sbb
push
pop
insl
loop
pop
test
mov
or
ja
or
scas
mov
mov
addb
mov
in
imul
sub
xor
mov
shlb
jne
xor
pop
inc
xor
test
jl
cmp
push
mov
fiaddl
pop
cld
cmpsl
pop
inc
enter
dec
mov
mov
sub
mov
enter
sbb
mov
and
lods
in
ds
inc
icebp
js
xchg
insb
testl
in
test
mov
rorl
add
loopne
add
push
lret
cmp
dec
pop
outsl
jg,pt
ja
push
enter
roll
popf
mov
inc
mov
xchg
into
shlb
pop
lods
sahf
mov
inc
dec
and
add
sub
scas
push
hlt
mov
fnstenv
lret
pop
push
adc
cmp
arpl
dec
stos
inc
push
scas
mov
test
sbb
sub
ljmp
lahf
test
pop
inc
mov
pop
xchg
rcrb
cmp
mov
bound
aam
xchg
repz
sbb
xlat
in
int
dec
jg
jae
js
loop
jno
in
imul
sti
pop
out
icebp
rol
sbb
fisubrs
or
test
lods
jb
dec
inc
xor
leave
mov
jle
sbb
and
add
fs
ljmp
adc
mov
ds
add
jnp
fdivrs
mov
push
or
loopne
rclb
cmp
icebp
xor
pop
mov
test
xchg
xor
shl
pushl
or
mov
sbb
push
movb
adc
adc
xlat
enter
dec
fwait
je
mov
xor
outsw
rcll
sub
es
jp
sbb
jne
idiv
mov
cmp
cmc
xor
push
jl
mov
stos
jl
pop
loope
idivb
lret
dec
lock
lcall
inc
xor
xor
pop
jae
inc
sahf
mov
ss
aad
lods
into
fstl
insb
test
in
add
adc
lea
je
pop
and
add
xor
mov
push
push
pop
out
stos
aam
mov
jl
out
in
cli
pushf
mov
jno
adc
insl
clc
rclb
xor
push
mov
insb
dec
std
dec
enter
inc
shrl
add
popa
lcall
hlt
std
lods
fcomp
inc
and
jp
daa
pop
fldt
je
fisubrs
sub
test
icebp
leave
cmpsl
in
sub
and
push
lods
scas
xor
in
inc
xchg
xor
mov
lds
pop
out
xchg
lea
sti
arpl
mov
push
cmc
outsb
mov
jae
adc
cmp
pop
and
mov
cmp
xorb
lods
xlat
movsl
mov
hlt
pop
jb
sbb
pop
pop
xchg
and
lcall
dec
cmpb
push
jge
xchg
daa
mov
mov
cmpsb
jnp
sbb
int3
pushf
sbb
aam
in
cmpl
ds
ljmp
insl
ljmp
and
pusha
push
sbb
testl
jle
lods
fs
add
add
inc
mov
mov
sub
jae
or
testl
aam
sub
cltd
cwtl
xor
insl
ljmp
aaa
imulb
imul
mov
iret
and
lcall
js
arpl
js
sub
es
fldt
out
xor
xor
adc
adc
push
pop
lods
jno
cmp
or
fbstp
xchg
xchg
test
das
mov
adc
insl
inc
cmp
and
aaa
mov
push
xor
jle
sub
outsl
add
dec
mov
out
ss
ret
cld
or
mov
subb
mov
dec
mov
andl
ficompl
sbb
cld
bound
mov
jo
sbb
add
mov
cmp
arpl
sbb
push
shrl
out
repz
repnz
jno
jb
sub
add
mov
sbb
in
xchg
mov
cltd
xchg
jo
into
enter
fs
add
rcrb
push
inc
pushf
repz
push
out
or
dec
cmp
adc
xchg
negb
sub
pop
fxch
xchg
adc
jne
lret
sahf
std
xor
adc
and
xchg
fdivl
cmp
xor
xchg
test
and
add
xor
ret
xchg
adc
sbb
cwtl
pop
xor
xchg
mov
cltd
jg
dec
add
adc
cmp
mov
shl
sub
rclb
add
mov
push
jmp
or
cmp
inc
add
out
rorb
dec
inc
lret
movsb
bound
test
ficoml
push
sbb
lret
rorl
add
cmp
and
popa
jle
loop
sbb
adc
in
mov
pop
mov
lret
dec
insb
xor
ror
stc
aam
xchg
add
lret
xchg
in
std
or
dec
rcll
jle
xor
les
ds
cmp
adcb
add
sti
idivb
or
popa
or
aaa
xor
inc
xchg
xor
in
adc
popa
mov
sub
cld
add
ret
dec
and
cltd
in
sbb
xor
ret
cwtl
and
stc
insb
pop
stos
loope
mov
testb
sbb
fdivrp
shl
call
dec
push
dec
rolb
stc
arpl
cmp
fdivr
pop
popf
sbb
adc
cmc
sub
push
jb
inc
mov
xor
hlt
push
subb
pop
jno
ss
lock
pop
inc
mov
xor
push
cmp
aaa
outsl
insl
pop
or
sub
pop
fidivrl
xor
add
mov
mov
fwait
lret
shr
xor
cmp
jg
cwtl
pop
and
add
xchg
sbb
inc
stos
xchg
adc
push
scas
xlat
das
out
into
mov
cmc
dec
mov
dec
test
adc
hlt
dec
mov
dec
jle
sbb
setns
pop
push
inc
jne
in
sbb
test
push
iret
jmp
add
cmp
sbb
mov
sub
sub
sbb
and
dec
mov
adc
clc
addb
sbb
stc
bound
iret
mov
mov
sbb
add
nop
repz
test
dec
subb
sbb
insl
shr
rorb
mov
movsl
es
shlb
mov
int
inc
in
sub
loop
cmc
pop
into
sbb
dec
pop
cmp
sahf
push
fwait
lock
sbb
mov
pop
ss
cmp
test
cs
loope
cld
je
mov
dec
cmp
iret
inc
imul
mov
popf
sub
mov
stos
dec
mov
jmp
movups
or
inc
cltd
sbb
mov
sbb
inc
inc
xchg
add
rcll
divl
mov
test
xor
inc
lods
call
pop
repz
cmp
mov
insb
dec
push
push
mov
or
mov
nop
outsb
repz
std
jns
into
insb
ja
dec
push
sub
cmp
lret
mov
into
inc
mov
jmp
jmp
sub
pop
aad
int3
ret
aaa
push
inc
les
jbe
pop
dec
imul
shrl
mov
testl
sbb
dec
add
dec
sbb
lret
jmp
sbb
xchg
iret
dec
xchg
adc
xor
aas
jbe
jno
in
or
mov
dec
fidivrl
push
sbb
or
jb
aam
mov
add
movsl
pop
and
mov
sbb
dec
scas
add
jbe
call
dec
imul
repz
sub
push
out
insl
scas
dec
mov
sub
push
and
mov
cwtl
jo
sbb
lods
pop
or
gs
inc
cmp
fldl
fistl
cmpsl
fisubl
xchg
jle
loopne
aam
pop
inc
stos
jns
aaa
outsl
daa
mov
cmp
xchg
xlat
ja
dec
xor
cmp
cmp
roll
in
sarb
mov
dec
and
cmp
fidivrl
lea
add
jle
in
dec
pop
ret
dec
cld
cmpsb
add
sub
jl
stos
dec
and
mov
xchg
popa
sbb
icebp
out
inc
push
mov
mov
mov
outsl
sub
cmp
out
xlat
xchg
repz
rol
shl
imul
rcrb
gs
and
inc
inc
jge
xor
jmp
xor
jbe
inc
xchg
and
arpl
sar
dec
add
cmp
fisubrs
insb
adc
cli
jg
iret
mov
lea
mov
xchg
popa
addr16
loop
or
fnsave
inc
nop
fnsaves
bnd
sub
mov
lock
sub
pushf
gs
xchg
aad
push
clc
loope
mov
cmp
mov
mov
jb
mov
ja
mov
testl
inc
and
in
xchg
jg
sbb
xchg
lret
pop
pop
cmpsl
ja
ret
jae
inc
gs
or
repnz
fistl
or
fisubrs
in
aas
enter
cld
jnp
notb
mov
xor
mov
push
aam
pop
or
subb
pop
imul
cli
xor
mov
and
insl
sub
sbb
aad
jne
arpl
sti
fidivs
or
add
repnz
fwait
jno
arpl
movsl
cmp
insb
jle
jmp
cli
call
mov
and
popf
cmp
sbb
fxtract
xor
or
jle
icebp
and
js
push
pop
adc
add
inc
pop
and
push
pop
arpl
test
mov
sbb
add
pop
lcall
fldenv
pushf
data16
ret
xchg
mov
xlat
jmp
xor
dec
adc
popf
sarl
lods
ret
icebp
cmp
cmp
lea
add
push
sbb
mov
fiaddl
mov
sub
sub
js
or
xchg
xlat
adc
and
sbb
icebp
mov
in
int
out
sbb
and
pusha
pop
nop
xor
popa
mov
dec
lahf
or
aam
inc
push
mov
test
mov
pop
sbb
mov
insb
mov
sbb
dec
cwtl
lret
roll
lods
jg
lret
sub
mov
clc
or
int3
insl
cwtl
jb
sub
out
dec
adc
bound
xor
js
add
sub
js
cmc
out
push
icebp
hlt
pop
or
dec
fsubrl
jne
out
cmpsl
cld
push
scas
aad
aaa
inc
pop
xchg
jo
pop
add
and
lods
scas
mov
ret
lahf
aaa
and
mov
xchg
jle
add
leave
pop
mov
ja
insl
call
cltd
ret
int3
repz
jecxz
dec
xchg
in
or
pop
sbb
push
xor
mov
pop
sub
xchg
sbb
jo
inc
inc
push
pop
jns
loope
fnstcw
fisttps
jns
in
push
cmp
scas
cltd
xchg
sub
jns
out
jle
addr16
xor
scas
mov
or
mov
adc
inc
movsb
imul
adc
add
daa
pop
dec
dec
mov
out
shrl
sbb
ret
pop
mov
xor
fdivr
cld
nop
pop
jp
mov
call
cmp
les
jp
mov
loope
scas
lods
xor
pop
neg
lahf
stos
push
mov
xor
pop
sub
push
mov
lea
dec
sub
fldl
or
ficoml
adc
lahf
lret
push
fisttpll
cmp
dec
jbe
subl
mov
adc
adc
adc
pop
lods
lcall
cmpsb
pop
in
and
and
inc
int
inc
les
fdiv
jl
pop
sub
xor
mov
fs
sub
aad
frstor
push
jl
stc
cmp
and
mov
aam
xchg
mov
cs
fwait
sub
in
mov
cmp
jmp
xor
sub
mov
adc
test
decb
xchg
xchg
push
idivl
cmp
data16
dec
ret
xor
fisttps
sub
insl
xlat
mov
adc
lea
mov
mov
dec
sbb
lret
inc
inc
add
and
cmp
cs
stc
leave
popa
fisttpll
or
xchg
nop
aas
pop
cwtl
push
push
adc
add
mov
dec
lock
xor
jmp
xchg
mov
mov
ja
sbb
fs
loopne
pop
ret
fistl
jp
out
jo
fcomi
iret
data16
mov
push
add
ja
or
pop
jno
pop
push
test
call
sbb
clc
sti
pop
imul
inc
daa
jb
sbb
ficomps
pop
xlat
sbb
outsb
gs
xchg
push
jbe
cld
rol
in
rcrl
sbb
push
push
fwait
sub
mov
inc
push
enter
jb
mov
mov
test
nop
mov
mov
js
fcoml
sub
mov
cltd
sti
add
rolb
jno
stos
ds
pop
xlat
pop
sub
repz
sbb
adc
aam
pop
jecxz
fcomps
dec
push
or
mov
sub
aad
cmpsl
mov
or
sbb
mov
pop
pusha
sub
andl
nop
adc
ret
push
mov
orl
int
jno
xchg
pop
xor
inc
dec
and
sbb
xchg
pop
cld
imul
xchg
mov
push
jne
adc
sub
adc
insb
divb
push
xchg
inc
sahf
adc
insl
mov
mov
pop
jno
xchg
shll
mov
push
pop
xchg
dec
insb
cmp
xchg
aam
push
pop
and
test
popa
pop
mov
push
xchg
mov
sahf
jns
faddp
nop
mov
pop
cmp
jecxz
inc
adc
aad
es
lcall
in
dec
push
les
fldenv
stos
aaa
aam
push
es
in
arpl
and
daa
test
stc
ret
dec
mov
add
mov
icebp
jb
pop
out
xchg
pop
pop
out
lods
push
jnp
pop
mov
rcll
sub
pop
jnp
mov
bound
std
and
rolb
je
mov
sub
insb
mov
icebp
test
push
popf
pop
mov
sbb
push
and
sbb
out
dec
arpl
pop
xchg
aas
add
or
das
mov
test
xor
xchg
dec
and
pop
push
xlat
lock
mov
push
or
mov
push
dec
pop
jmp
pop
or
xor
pop
adc
push
xchg
jae
pop
add
insl
jo
sti
mov
and
mov
sbb
or
xchg
pop
xor
xor
adc
cli
mov
icebp
int3
jge
xchg
out
jbe
ds
sahf
sbb
lcall
or
daa
call
mov
or
mov
cwtl
inc
mov
pop
in
xchg
out
cmp
mov
enter
inc
and
lea
call
push
in
in
mov
mov
rcll
pop
push
or
mov
repnz
jae
daa
xchg
lock
jnp
test
bound
mov
pushf
test
pop
sub
out
ss
xor
nop
xchg
pop
repnz
sahf
push
jnp
or
xor
ds
mov
dec
jbe
add
cmp
outsb
mov
nop
jae
push
sbb
arpl
sub
stos
aad
shrl
nopl
mov
aas
push
mov
jge
sub
xlat
int
movsb
push
fstpl
mov
dec
test
xlat
xchg
jnp
mov
cmp
mov
inc
lods
adc
int3
adc
lods
sbb
sahf
iret
dec
or
repz
and
pushf
mov
push
mov
add
stos
lret
adc
lods
int3
xor
mov
repz
push
pop
test
push
add
push
and
inc
mov
adc
out
and
jne
cmp
cs
mov
stos
jae
loope
mov
stos
push
dec
mov
mov
test
in
aas
addr16
sbb
xor
and
dec
sbb
ret
sahf
pop
imul
addr16
sbb
xchg
testl
sbb
lods
add
aaa
mov
sbb
ss
and
imul
repnz
push
jnp
aam
andb
sub
or
cmp
xchg
pop
out
xchg
mov
fcoml
int
adc
jno
enter
sub
jecxz
mov
mov
sbb
dec
or
mov
fsubl
lahf
cld
xchg
and
jno
shlb
cmpsl
lahf
movsb
mov
adc
lahf
inc
lds
movsl
adc
jbe
or
lahf
stc
sub
and
and
aaa
arpl
sub
cld
in
fwait
std
and
test
pop
in
jb
sub
mov
out
jmp
cmp
mov
nop
out
dec
and
sbb
cld
mov
das
mov
stc
pushf
cmp
mov
leave
jecxz
faddl
adcb
dec
int
icebp
adc
sbb
test
lods
outsl
pop
dec
add
movsl
out
loopne
pop
cld
sti
mov
push
add
push
lahf
nop
and
loop
stos
jg
inc
and
mov
fcoml
fucom
adc
pop
adc
mov
mov
adc
mov
pop
in
add
pop
jg
pushl
in
push
sbb
in
xchg
cli
push
pop
cwtl
roll
push
mov
add
fidivrl
dec
jecxz
call
cmp
jo
mov
sbb
jnp
mov
and
sub
mov
push
and
ja
jl
or
fs
clc
je
mov
dec
fsubl
dec
sub
leave
ds
pop
cmp
adc
adc
adc
popf
push
lret
mov
add
mov
mov
sbb
add
xor
cmpsb
int
cmp
inc
mov
test
xor
push
leave
les
add
cmp
arpl
xlat
rclb
dec
std
mov
xlat
stos
int
xor
addr16
adc
or
and
test
xchg
or
cltd
or
ret
sbb
pop
jle
das
dec
dec
jbe
dec
push
addr16
adcl
in
and
adc
ljmp
and
adc
inc
sub
cmp
es
test
push
icebp
bound
in
jnp
out
ss
ret
dec
push
hlt
inc
outsb
outsl
sahf
repnz
mov
lret
push
cmc
mov
shl
xor
mov
push
inc
test
mov
sbb
sbb
xchg
sahf
insb
int3
lcall
fisubrl
inc
mov
add
push
or
add
sbb
and
es
or
push
mov
mov
pop
jecxz
mov
jp
ret
adc
in
int3
and
inc
in
mov
fildl
rorb
mov
stos
cmp
insb
aaa
inc
push
jbe
test
scas
loop
test
in
push
iret
mov
mov
mov
pop
mov
jg
and
ss
fs
jbe
inc
adc
outsl
mov
adc
mov
rcll
xchg
and
test
clc
cwtl
arpl
add
stos
push
aad
shlb
fistpl
push
cmp
rep
jno
aaa
stc
ret
xchg
daa
enter
int
cmp
rcrl
stos
jecxz
cltd
pusha
inc
lods
and
add
push
inc
fsubl
mov
mov
call
mov
das
pop
mov
fucomp
jae
stos
jg
and
pusha
ret
rorl
outsb
aaa
xchg
sti
sti
jmp
lods
push
cmp
xor
inc
xchg
lods
cmp
mov
ss
jo
jno
push
insl
cld
and
xor
pop
lods
pop
dec
pushf
dec
negb
pop
dec
push
mov
pop
shll
xchg
lds
push
sarb
xor
inc
lret
or
sti
into
fsts
xor
nop
lods
push
scas
xchg
inc
das
cli
xchg
and
mov
jae
insb
jecxz
mov
jns
ret
pop
mov
xlat
out
inc
fldenv
or
xchg
lret
inc
add
mov
add
jno
mov
sarb
push
sbb
xor
andb
xchg
loop
push
sbb
mov
push
push
jb
or
sub
jae
aas
mov
sbb
leave
mov
aam
hlt
stos
mov
ret
and
and
fst
imul
mov
inc
add
dec
xchg
xor
adc
test
imul
dec
mov
addr16
or
push
mov
pop
and
mov
inc
int
loope
jno
addb
sbb
inc
add
jns
sbb
shll
shlb
adc
and
inc
push
jp
dec
in
add
aas
cmc
jp
dec
fiadds
idivl
mov
mov
out
outsl
sub
adc
mov
loop
imul
mov
xlat
jecxz
mov
xor
testl
addr16
push
cmp
sub
cmp
lock
sti
test
ret
arpl
rolb
adc
jmp
and
add
loope
int
push
mov
int
pop
jmp
mov
cmp
adc
or
sahf
es
rcrb
sahf
inc
jno
pop
mov
xchg
adc
add
rcr
xor
aam
push
icebp
cmpsb
mov
lds
pop
sti
ss
adc
xchg
xlat
sub
das
xchg
das
and
cmp
fistps
sbb
push
rclb
and
sub
sbb
push
push
shlb
cmpsb
sub
xchg
inc
arpl
hlt
dec
pusha
push
sub
xor
pop
mov
sub
cwtl
mov
mov
jb
clc
andl
movnti
dec
outsl
lods
pop
imul
or
jnp,pn
cmp
or
stos
in
bound
and
ds
xchg
cmc
lea
push
arpl
dec
shll
jecxz
icebp
mov
push
inc
adc
and
shrb
or
jo
add
mov
shrb
fisttpll
sbb
sbb
inc
mov
mov
test
sti
sub
inc
cli
mov
idivl
fs
into
jg
push
mov
movsl
cld
xor
fidivs
gs
movsb
int3
xor
inc
js
sub
mov
xchg
div
pop
pushf
pop
ss
test
pop
xor
movsb
stos
into
push
scas
or
inc
push
add
rcr
fmull
push
pop
lds
pop
js
sti
vmovupd
out
adcl
xchg
jne
add
mov
mov
jbe
dec
add
jo
jbe
pop
iret
dec
faddl
xor
sbb
mov
test
sbb
inc
or
xor
pop
mov
sub
popa
ljmp
pop
pop
nop
pop
xor
hlt
popf
icebp
jg
push
fs
cli
nop
cwtl
push
or
add
xor
push
and
pushf
jl
lock
mov
clc
ret
inc
mov
out
js
enter
cmp
jno
jl
or
xor
scas
inc
jmp
loop
ja
cmpsb
adc
cli
sub
insb
mov
pop
das
repz
inc
ret
iret
sbb
stos
shrb
sbb
or
and
test
faddp
xchg
sub
xlat
pop
int3
cmp
push
push
out
aas
lahf
int3
adc
inc
or
xor
loope
xor
cltd
xchg
mov
pop
mov
mov
fstpl
in
dec
in
and
dec
xor
inc
cmc
popa
out
sub
stos
es
jp
mov
imul
imul
add
cmpl
cmp
inc
inc
hlt
ret
xchg
dec
mov
cmc
mov
lods
out
das
push
gs
in
pop
lock
jnp
cmp
sarb
sub
rcl
dec
fwait
add
test
mov
scas
dec
sub
imul
mov
shr
jo
xlat
movsb
fs
ss
xchg
aam
mov
testl
out
inc
fisubl
pop
or
flds
inc
mov
mov
cmp
mov
aaa
push
pop
je
adc
popa
add
or
cld
xor
data16
lcall
cmc
lret
leave
incb
mov
push
imul
outsb
dec
data16
add
fcompl
hlt
es
idivl
inc
lods
gs
sub
outsb
ljmp
enter
sarl
jge
js
inc
bound
jne
mov
xor
fisttpll
fwait
and
cli
les
cmp
and
js
mov
lret
hlt
xchg
jmp
arpl
lods
cmc
iret
shrb
test
dec
mov
mov
insl
mov
sub
mov
fstpl
mov
aas
jns
mov
mov
in
pusha
sub
stos
js
in
sahf
inc
jmp
pop
lock
push
loopne
mov
dec
incb
aaa
sbb
gs
je
ds
lods
les
dec
fdivs
add
cld
dec
sti
and
popa
sbb
xchg
adcl
xor
das
fsubl
nop
mov
dec
dec
push
sarl
push
inc
ss
int
and
addr16
fsub
scas
add
clc
imul
cld
pushf
iret
ficoml
ljmp
ljmp
dec
mov
mov
cs
imul
push
pusha
andl
push
inc
stos
subb
jle
mov
adc
roll
mov
cmpb
mov
xchg
pop
stos
cmp
pop
fdivl
test
ds
fsubrs
stc
out
xchg
or
and
mov
sub
lods
fildll
adc
shr
icebp
or
scas
xlat
aam
cmpsl
mov
ret
std
inc
xor
push
pop
stc
mov
icebp
add
push
add
aas
in
push
lret
xchg
lahf
pop
out
adc
popa
pop
stc
or
inc
insl
xchg
sub
test
mov
add
popf
lods
jg
jb
lds
add
jge
es
xlat
mov
push
add
push
xor
push
aas
in
cmp
inc
dec
or
call
shlb
push
sub
push
popf
and
mov
popf
push
add
cmpl
imul
and
enter
inc
mov
and
mov
shrb
imul
mov
dec
stos
ss
out
mov
xlat
push
jp
jno
jae
stc
dec
das
adc
js
cmp
xor
arpl
popa
mov
pop
aam
or
pop
jne
or
es
xor
push
test
adc
mov
sub
das
pop
jecxz
lods
cwtl
fxch
fwait
jnp
fistpll
fisttpl
push
jp
scas
sub
add
sub
in
mov
fsubrs
bswap
cld
fwait
lds
mov
mov
enter
insb
mov
test
add
jbe
lods
ret
sbb
mov
xchg
cwtl
fmul
and
pop
jmp
fisubrs
mov
cld
fstps
cmpsb
xchg
jecxz
mov
jl
xor
and
icebp
in
pop
std
jae
fcoml
xchg
lret
aad
fisubl
aas
bound
shl
add
data16
out
mov
mov
mov
testl
test
xorl
shrb
xchg
rol
fists
in
pop
outsl
or
push
sub
mov
pop
shl
pusha
std
rorl
xchg
pop
loopne
cld
push
jo
xchg
jns
lds
adc
enter
jl
and
jg
gs
add
lea
imul
xor
stc
push
inc
push
cli
cmp
xchg
aam
stos
push
add
dec
out
out
test
outsb
in
xor
mov
leave
xlat
lcall
test
push
adc
scas
test
js
loopne
fst
or
sub
mov
iret
dec
sub
movsb
cmp
adc
add
pop
push
pop
ret
dec
les
in
inc
in
dec
scas
mov
loop
mov
dec
and
or
push
movsl
mov
out
lods
sub
aam
sbb
xchg
mov
sub
adc
enter
pushl
mov
ffreep
adc
cmc
adc
stos
cs
sub
lret
sub
dec
idivl
push
outsb
sbb
or
ret
xorb
loope
xor
cmp
adc
popf
out
and
mov
mov
ss
or
lret
jge
dec
ja
inc
mov
shlb
icebp
shll
out
xchg
inc
insl
pushf
in
andb
lahf
mov
and
lds
adc
push
and
dec
pop
scas
or
jo
sar
mov
adc
push
enter
dec
clc
ret
mov
dec
mov
jne
jnp
pushf
icebp
cmp
mov
sub
neg
dec
imul
jp
into
adc
mov
push
mov
lcall
xor
mov
mov
rcrb
movsl
xor
pop
das
fiaddl
mov
aaa
sti
mov
adc
pop
jb
out
and
aas
rcrb
fimuls
je
sub
daa
xor
pop
and
stc
test
push
xchg
pop
adc
popf
in
stc
or
in
pop
push
mov
mov
xchg
sub
cmpsl
insb
inc
push
mov
mov
and
mov
ja
jmp
adc
ljmp
inc
mov
loopne
push
pop
cmp
push
xorb
lahf
test
cmpsl
mov
aad
daa
jno,pn
push
stos
dec
stos
pop
in
or
test
dec
xor
fdivs
and
xor
scas
xchg
dec
lea
push
pop
clc
test
repnz
mov
jb
arpl
mov
pop
imul
and
movsl
mov
les
pop
add
das
fcmove
cmp
jle
call
stos
int3
mov
aam
shll
xorb
xchg
and
test
jecxz
ljmp
push
pop
sti
mov
mov
repz
and
lcall
fs
pop
sbb
jne
movsb
jle
cld
jae
push
cld
or
jmp
sub
in
and
mov
sbb
add
mov
test
fsts
insb
movl
shll
push
cmpsb
push
je
adc
neg
dec
pop
fldt
lds
test
pop
iret
stos
ret
scas
test
mov
xchg
jmp
in
aad
add
pop
push
js
notl
or
fwait
or
and
in
out
sbb
mov
int
out
xor
pop
xor
or
push
and
jbe
add
push
loope
fninit
sar
dec
clc
and
jns
mov
cld
test
rolb
mov
cmc
push
addb
mov
cmp
fsubr
outsb
jbe
jg
addb
aas
mov
inc
inc
insb
jmp
aam
pop
xchg
lods
scas
mov
jne
enter
sbb
inc
gs
roll
push
pop
or
paddsb
repz
mov
sti
jmp
ds
bound
or
scas
jb
xchg
pop
push
loopne
lods
repz
fwait
pop
xchg
repz
stc
mov
fs
call
lods
pop
xor
daa
and
xor
aam
jge
inc
shll
loop
xor
jg
enter
imul
cmc
pop
shll
add
inc
dec
push
jge
scas
pop
xchg
or
push
inc
in
mov
xor
scas
inc
fldenv
xor
xchg
jbe
lea
out
mov
fldl2t
or
add
pop
pop
inc
xchg
ret
dec
popa
xor
xchg
xor
lcall
dec
mov
je
repnz
ljmp
cmp
and
hlt
rcll
push
jp
sub
xlat
sbb
les
cmp
push
rcrl
mov
jo
dec
sub
outsb
add
imul
test
pop
pop
fmul
mov
mov
push
cmpsb
lds
fs
repz
push
outsb
outsl
sahf
ror
mov
mov
push
arpl
jle
lea
pop
and
adc
in
test
je
dec
cmpsl
ljmp
cld
sbb
inc
aaa
aad
mov
add
addr16
or
dec
xor
call
cmp
and
dec
popf
lcall
in
inc
loopne
lret
inc
inc
jmp
subb
jo
push
nopl
and
call
insb
cmp
inc
addr16
ret
int
jge
iret
mov
xor
in
xlat
div
call
fmul
cmpsb
ljmp
ret
rcr
sbb
dec
push
cs
mov
xor
add
pop
fcomip
push
sub
sub
sbb
fs
out
stc
je
mov
stc
popa
movsl
out
jo
cmpsl
loopne
in
sub
lock
pop
xchg
out
call
loop
cs
call
or
xchg
test
pop
mov
jmp
fstps
pop
nop
or
imul
int
in
jmp
push
or
xor
rolb
rcrl
inc
pop
mov
xor
cld
adc
add
mov
fsubr
pop
icebp
jl
sti
push
mov
mov
push
icebp
pop
cmp
dec
adc
jne
aam
push
cwtl
enter
xchg
fidivrl
push
adc
mov
out
sbb
mov
aad
sub
insb
xchg
sub
jbe
sbb
ret
rorb
inc
in
dec
push
jecxz
scas
pop
outsb
add
and
mov
dec
daa
icebp
faddl
insb
xor
sub
outsl
cmp
and
mov
cli
stos
das
fcmovb
popf
imul
addr16
fistpll
add
mov
cld
sbb
push
pop
xchg
pop
mov
cmp
ja
mov
mov
repnz
push
or
fsubrl
inc
arpl
lds
pushf
push
jae
cld
loop
xchg
xchg
hlt
fstps
mov
loopne
sbbb
out
cmp
loope
xor
cmp
leave
aad
aas
mov
xchg
std
xor
and
dec
jl
mov
add
in
jno
pop
and
sbbl
clc
fidivl
mov
cmp
out
lea
sahf
mov
mov
scas
push
inc
pop
pushf
inc
popf
gs
in
mov
push
and
daa
adc
dec
mov
cmp
push
xorb
repz
and
add
std
and
std
xor
xor
repnz
push
xor
inc
pop
sbb
pushf
sbb
pop
push
enter
mov
jbe
int3
cmp
mov
inc
sbb
pop
add
ret
or
in
cld
mov
js
adc
xor
mov
xor
bound
xchg
xor
je
pop
repnz
cmp
mov
mov
imul
push
lea
rolb
mov
xor
xor
push
stc
cmc
adc
int3
lock
pushf
sbb
mov
inc
push
xchg
insl
test
aad
pop
push
jo
inc
repnz
or
xor
cs
mov
mov
mov
mov
mov
shll
xchg
into
add
jg
and
jne
enter
repnz
or
dec
push
fstpt
clc
push
pop
jbe
rcr
push
inc
mov
fldt
and
aam
inc
pop
stc
stos
fistpll
mov
shll
jmp
sbb
pop
xchg
xchg
stos
out
and
sub
in
pop
negb
add
mov
ficoms
loop
mov
or
dec
xor
pop
inc
or
cmpsb
xchg
mov
mov
mov
push
mov
jno
outsb
jne
outsb
jle
adc
shll
sbb
pop
xchg
mov
leave
js
inc
add
outsb
repz
popa
je
cmp
arpl
mov
iret
add
add
stos
enter
js
repnz
push
dec
add
mov
mov
mov
sbb
lea
imul
push
mov
fwait
imul
lods
rolb
and
cmpsb
or
add
dec
inc
ret
test
rcrb
pop
cltd
pop
sub
cmp
mov
adc
push
mov
xchg
mov
mov
add
xor
repnz
scas
sub
xor
out
dec
jp
pop
lret
ja
mov
push
xchg
imul
sti
pop
imul
xchg
scas
mov
jp
fisttpl
mov
aad
jo
aam
and
sbbb
testb
popf
aas
pop
mov
fsubs
push
icebp
jne
xor
pusha
out
inc
ss
in
push
inc
cmp
fwait
andl
pop
xchg
hlt
iret
fsubr
mov
inc
ja
dec
and
inc
in
frstor
and
hlt
divl
xor
mov
dec
push
loop
push
pop
out
movsl
sbb
mov
dec
int
test
mov
pop
dec
push
hlt
out
rorb
add
stos
rcrl
ret
jecxz
or
or
add
je
pop
outsb
cmp
pop
xor
jb
sti
jno
dec
mov
mov
jne
xchg
and
mov
dec
dec
out
iret
loope
xchg
pop
out
imull
out
arpl
jmp
xor
imul
add
popf
imul
loope
lcall
and
rorb
dec
mov
inc
subl
pusha
sbb
fstpl
or
scas
inc
jo
scas
es
sbb
rcrl
jno
or
pop
rcrl
or
mov
iret
mov
cli
inc
aad
lret
cwtl
cmc
movsl
insl
ds
xor
aaa
push
jp
adc
aas
outsl
xchg
jns
mov
std
jl
adc
std
cmpsl
or
rorl
or
sbb
call
test
xor
mov
out
insb
sbb
sub
test
xchg
jae
xor
out
scas
stos
cmp
jbe
inc
outsb
add
jns
stos
adc
in
jg
rcll
sub
push
inc
xor
and
jnp
fstpl
mov
add
loop
subl
sub
movsb
mov
fistpl
scas
mov
dec
mov
mov
aad
popf
lahf
leave
fs
pop
movsb
jp
loope
mov
js
dec
icebp
mov
pop
inc
ljmp
or
add
jle
mov
and
xchg
js
pop
add
jo
push
sub
in
or
push
popf
pop
pushf
fnstsw
add
cmp
and
jnp
mov
jmp
test
mull
push
inc
pop
jnp
outsl
dec
movsl
sub
movsl
stos
xor
decb
ret
jo
flds
clc
xor
xchg
mov
out
lret
jnp
pop
and
aam
mov
jno
fsubrs
inc
notb
dec
jp
arpl
push
push
add
sub
jnp
push
mov
and
imul
loope
cld
imulb
jl
call
clc
xchg
adc
pop
add
xor
mov
lock
imul
add
xor
daa
enter
shll
scas
stos
icebp
enter
sbb
fbstp
sti
nop
mov
out
mov
mov
push
xor
cmp
inc
mov
sbb
std
cmp
xor
cmp
notl
cmp
adc
mov
pop
fwait
cmp
sbb
out
out
push
ret
mov
aad
hlt
bound
aaa
xlat
mov
outsb
push
scas
mov
fldl
das
lret
mov
mov
scas
je
pop
and
imul
pop
divb
pop
adc
dec
pop
jg,pt
push
adc
cmp
mov
and
shrb
mov
lds
mov
stos
and
hlt
imul
xchg
imul
lock
movsb
fisttps
or
mov
rolb
roll
repnz
icebp
mov
jb
xchg
pop
mov
loop
fldl
jl
lods
jb
mov
inc
into
pop
and
mov
jns
pop
lods
aaa
xorb
jns
jns
clc
lcall
lret
rcll
xchg
xchg
xchg
mov
cltd
cmp
leave
pusha
out
pop
mov
test
dec
push
lods
cmp
inc
lods
xor
cltd
popf
and
push
inc
push
mov
pushf
scas
lods
sbb
arpl
mov
add
push
mov
cltd
mov
outsl
jbe
imul
lcall
fsts
mov
mov
adc
and
mov
adc
sub
lret
fwait
mov
cmp
push
adc
pusha
mov
sub
mov
divl
inc
inc
xchg
inc
push
fistpll
movsb
inc
jp
out
aaa
jb
and
push
and
sbb
les
sub
cs
arpl
mov
sbb
inc
dec
pop
ds
xchg
negl
subl
sbb
loope
and
xchg
cmp
push
xchg
lcall
sub
call
mov
mov
pop
pop
sub
fldlg2
lock
or
out
das
mov
testl
cmp
mov
and
push
fidivrs
adc
in
inc
dec
cltd
cmc
addr16
add
sbb
repz
pop
mov
xchg
kmovw
cmc
lock
and
or
push
push
push
loopne
and
es
insl
fs
sbb
cwtl
push
out
clc
xor
pop
int
mov
push
push
sbb
in
out
xchg
xchg
iret
cmp
ljmp
iret
or
hlt
xor
jnp
sub
mov
fisttpl
cld
pop
sti
push
ficoms
or
push
jmp
es
pop
and
cmp
scas
clc
inc
lahf
add
lret
out
mov
out
cmp
dec
cmp
std
mov
clc
push
dec
mov
insb
mov
inc
and
mov
fldt
out
cmpb
mov
mov
pop
fdivrl
pop
jnp
jnp
sub
mov
push
outsb
shll
imul
cmp
ss
mov
addr16
das
cmp
xchg
jae
test
dec
inc
lahf
icebp
lea
xor
ror
mov
mov
loope
jmp
sub
rcl
xor
std
add
mov
lahf
pop
jp
push
and
inc
int
cli
cwtl
js
dec
jl
movb
push
add
pop
repz
bound
or
jnp
mov
push
xor
push
cmc
jge
es
call
add
sbb
mov
push
out
stc
jno
call
mov
rorl
fisubrs
mov
xchg
dec
sbb
cmc
stc
mov
enter
xchg
push
pop
inc
js
out
sub
mov
movsb
aad
fs
sub
aas
cmp
jno
int3
sub
fiaddl
mov
xor
out
lret
or
sahf
sahf
or
adc
inc
ss
push
xlat
mull
scas
inc
daa
cli
mov
pop
gs
nop
lret
stos
xorb
out
sbb
and
sarb
in
and
loopne
pop
jns
aad
push
sbb
inc
inc
shrb
dec
lods
push
xor
xor
mov
xor
or
lret
sbb
clc
adc
shlb
mov
cs
shl
xor
cmpsl
stos
adc
xchg
jbe
jnp
inc
bound
pop
jno
ss
fildll
xchg
sbb
insl
loopne
mov
aad
pusha
dec
adc
pop
jmp
jbe
jmp
push
sub
call
pushf
sbbl
cmp
add
bound
ljmp
inc
stc
jo
in
jecxz
cmp
and
pop
out
inc
adc
mov
sbb
mov
mov
lods
xor
dec
cld
jne
outsb
pop
js
mov
sbb
in
scas
sahf
enter
lds
mov
dec
sbb
daa
out
xchg
inc
inc
xchg
jecxz
inc
and
mov
sbb
inc
mov
repz
insl
push
cmp
sub
mov
fs
xchg
daa
std
mov
dec
dec
dec
cmc
dec
push
dec
pusha
stos
xor
pop
mov
adc
insb
loopne
pop
xor
and
mov
fsubs
sub
fsts
imul
xchg
lods
sbb
xlat
push
xchg
add
pusha
jp
cltd
fsubrl
adc
push
dec
sar
inc
testl
push
in
movsl
mov
or
ret
cmp
mov
and
fwait
inc
xor
mov
ja
add
fs
mov
das
push
add
shl
pop
inc
js
mov
in
inc
js
out
fstl
push
shlb
sbb
sub
mov
pusha
js
cltd
jbe
adc
xor
adc
loope
xchg
jb
sub
xor
aas
mov
subb
pop
test
ja
jnp
lahf
das
inc
sbb
xchg
sbb
mov
cmp
xchg
icebp
mov
aaa
inc
jge
and
enter
dec
leave
shl
nop
mul
in
cli
push
push
add
adc
pop
lods
adc
sub
pop
mov
fcomip
lock
cmp
das
add
mov
jae
or
inc
test
shlb
pop
out
inc
mov
mov
jmp
inc
outsl
sbb
lret
mov
pop
out
mov
out
shlb
add
xor
xchg
out
shlb
mov
sub
xchg
push
pop
cmpsb
lea
and
mov
in
or
inc
mov
cmpsb
icebp
subb
inc
push
pop
les
xor
ja
push
jecxz
xchg
jp
jno
push
or
adc
lahf
nop
aas
pusha
mull
pop
outsl
in
outsb
pop
push
dec
mov
push
fimull
outsl
cmp
push
add
xchg
nop
mov
add
fists
in
fidivrl
xchg
push
lods
or
in
inc
popa
inc
rcl
dec
push
into
loopne
mov
cmp
fisubrs
mov
xchg
icebp
sbb
incl
or
jo
pop
dec
push
mov
push
xor
dec
out
mov
or
xchg
cmp
xor
xchg
lcall
les
sub
dec
jle
sbb
xchg
pop
pop
jl
adc
jb
cmp
pop
xchg
and
sub
mov
in
adcl
out
or
pop
aaa
cmp
push
push
inc
movsb
lds
xchg
adc
jmp
mov
mov
xor
cwtl
jl
cmpsl
lcall
test
fbstp
jmp
inc
js
cwtl
add
decl
and
push
xor
lock
scas
mov
shrb
sub
mov
jae
jbe
sti
aam
aam
push
insl
repnz
rclb
pushf
mov
lods
jo
aam
add
lods
inc
mov
fs
mov
daa
nop
rcr
lcall
gs
mov
stos
fsubs
test
shlb
add
dec
inc
dec
or
rcr
and
mov
mov
push
mov
loope
ds
cmp
out
insb
push
cmpsl
adc
push
sub
xchg
add
xor
sbb
mov
das
scas
cs
mov
js
push
pop
mov
jmp
cmp
lret
sbb
cmp
int
into
pop
and
add
jg
outsb
or
dec
gs
xchg
cmp
and
faddp
jno
loope
cmp
icebp
daa
inc
int3
jle
fistpll
pop
sbb
pushf
xor
fbstp
stc
orb
fwait
or
and
out
add
add
stos
cli
mov
pop
stos
ljmp
cmp
popa
xchg
push
mov
dec
test
gs
sti
cmp
add
ds
jecxz
sbb
es
sti
cltd
mov
daa
jb
aad
pop
cmpb
fstl
mov
dec
push
out
inc
fwait
mov
and
xor
aad
sub
add
ficoms
cmp
scas
add
push
cmp
lret
and
pop
std
mov
jb
scas
jo
jnp
xor
and
es
add
repz
jns
push
mov
pop
jns
sarl
mov
ret
push
pop
mov
popa
test
mov
jp
jb
push
jae
xor
rorb
push
into
or
mov
xchg
mov
xchg
dec
sub
in
add
adc
in
mov
sub
mov
cmc
add
adc
sub
aad
testl
stos
hlt
or
mov
push
mov
stos
test
pop
inc
pop
jb
ja
mov
pop
push
scas
and
sbb
cwtl
pop
movsb
cmp
cs
loopne
enter
and
pop
mov
add
or
lds
js
adc
lcall
dec
xchg
aad
fisubrl
jmp
fstl
call
mov
mov
nop
xor
shl
mov
aad
cwtl
lds
das
aam
and
cmp
cmpsl
mov
out
mov
shrl
cmp
sahf
mov
jp
xchg
sbb
jmp
les
jb
movsb
pop
push
add
or
dec
rcrl
jmp
jge
xchg
stos
stos
stos
ja
sbb
mov
lret
push
wrmsr
xor
outsl
mov
imul
pop
mov
ror
jge
push
inc
ficoml
xor
adc
xchg
lret
fistps
xor
outsb
sbb
ret
ljmp
and
in
popf
scas
cmpsb
jns
rcrl
xor
outsb
imul
es
je
mov
and
pushf
test
add
lds
in
or
dec
mov
jns
ficoms
pusha
mov
or
jne
iret
inc
or
jle
imul
out
jge
lds
and
int
cwtl
sti
push
xchg
sbb
icebp
xlat
inc
aaa
fld
jae
shlb
cmp
pop
jl
and
add
pop
dec
sarb
mov
int3
lods
dec
add
fldt
test
cltd
orb
add
pop
xlat
movsl
mov
cmp
in
scas
xchg
daa
cltd
filds
pop
test
leave
push
or
sub
jecxz
push
pop
pop
aam
leave
sbb
add
test
sti
sbb
adc
mov
insb
mov
notl
mov
jne
enter
xor
sbbb
bound
xchg
or
leave
sbb
mov
mov
mov
pop
dec
and
sahf
decb
neg
aas
aad
cmc
loope
xor
lret
dec
mov
mov
push
xor
cmp
pop
mov
mov
rclb
inc
pop
lahf
js
hlt
popa
bound
dec
out
mov
test
sahf
pop
in
data16
cltd
sub
dec
cs
decb
fadds
clc
cs
and
movb
mov
in
jbe
mov
cld
outsb
or
inc
pop
lret
adc
nop
jg
pushf
das
scas
adc
cli
enter
cmp
push
rcl
mov
cltd
and
mov
scas
or
mov
cmp
push
sub
add
lods
enter
rorl
inc
call
loope
or
jge
push
cmc
xor
cmp
outsl
stc
jbe
fwait
inc
jecxz
cs
push
jecxz
scas
adc
nop
jmp
cs
and
adcb
cmp
lods
fistl
test
push
xor
fmuls
push
cmpsl
pop
jg
mov
clc
jb
push
xchg
cmp
sub
inc
ret
sub
lea
mov
jne
mov
gs
xchg
push
jecxz
xchg
lods
mov
mov
daa
ret
push
sbb
mov
xor
dec
xchg
mov
jp
stos
out
mov
test
fwait
cmpsl
idivl
stc
sti
sahf
outsl
scas
push
jo
aad
mul
push
inc
inc
mov
rorl
sub
insb
cli
ljmp
lods
push
sub
mov
lods
mov
adc
mov
jecxz
mov
lock
std
lock
stc
jle
leave
rcrl
inc
outsb
jl
bound
pop
hlt
jbe
dec
movsl
jae
cltd
jp
fwait
mov
inc
fistps
out
dec
fldenv
xor
adc
jne
dec
and
jae
mov
cmp
add
lock
shlb
jae
inc
pusha
popf
int
lret
sbb
cld
add
push
outsb
mov
stc
gs
mov
mov
lock
daa
lret
sub
cmp
icebp
fcomp
outsb
enter
xchg
adc
repnz
iret
adc
xchg
fmull
pop
test
dec
stc
jne
jmp
inc
rcr
mov
jmp
test
std
movsb
pop
xor
push
xor
adc
inc
cmp
mov
stos
test
add
pop
push
fwait
cmp
test
dec
insl
std
std
je
push
adc
xor
add
cli
mov
mov
xlat
mov
pushf
pop
in
adc
jns
cltd
jge
dec
insl
out
sbb
add
nop
push
add
scas
push
add
xor
sub
push
sub
dec
mov
jb
in
cmc
push
imul
jge
jmp
loopne
xchg
or
das
xchg
fcoms
je
imul
clc
call
mov
inc
cmp
jl
sbb
call
call
popa
test
push
icebp
inc
sub
ljmp
mov
push
lds
xchg
jns
imul
and
xor
movb
mov
jbe
mov
sub
imul
data16
jp
jmp
aas
sahf
ja
inc
mov
stos
ret
adc
push
inc
adc
lods
call
daa
outsb
ja
mulb
ficoms
movsb
and
insb
cmp
out
mov
inc
inc
lock
sub
outsb
fprem1
fmuls
dec
daa
or
pop
fdivl
jecxz
dec
aad
mov
inc
dec
stos
xchg
pop
cmc
add
jecxz
test
mov
push
sti
in
orl
and
push
lea
xchg
push
mov
int
je
sub
sar
sub
xchg
in
fisubl
mov
ret
xor
inc
out
leave
inc
test
scas
push
dec
push
aam
cli
das
inc
cmp
mov
and
cmp
add
div
add
insb
mov
add
mull
pop
aam
ss
stos
push
jecxz
inc
cs
fldl
loope
push
roll
scas
leave
hlt
cs
test
test
xor
jo
xchg
sbb
jecxz
xchg
loop
push
inc
or
lahf
sub
push
test
dec
adc
push
addr16
xorb
pop
out
jl
inc
xchg
aad
pop
push
and
mov
dec
pop
movsl
push
and
sub
lret
sti
bnd
inc
mov
lcall
idivb
sub
lds
aaa
sbb
sbb
dec
daa
jb
notl
jno
inc
pop
clc
lea
sahf
pop
mov
jmp
mov
lods
jmp
adc
push
mov
xlat
mov
xor
mov
dec
pop
lcall
rclb
ja
mov
popa
dec
xchg
int
cmp
xchg
push
hlt
in
adc
mov
push
shrl
sbb
stc
movsb
mov
arpl
dec
fcoms
mov
mov
mov
adc
sbb
jo
icebp
xor
or
jno
xor
push
aad
lods
push
or
cmp
scas
mov
addr16
jbe
cmpsl
push
sahf
pop
fwait
jl
jg
gs
mov
in
sub
sarb
add
aas
xor
data16
shrl
aam
enter
and
insl
out
pop
imul
mov
lcall
repz
push
add
lock
mov
insb
mulb
icebp
dec
call
xchg
nop
xor
push
fcomi
mov
rcrb
mov
into
daa
incl
loop
ret
aas
cmpsl
pop
xchg
xorb
loop
std
jb
sub
les
push
imul
sub
cltd
inc
jl
adc
inc
hlt
adc
adc
dec
push
in
shll
orl
cmp
push
dec
add
mov
sbb
dec
mov
xchg
stos
clc
push
or
in
jb
sar
and
and
mov
cmp
faddl
sbb
xchg
cld
sbb
push
jae
mov
pop
mov
lods
jns
outsb
mov
ret
lock
clc
ret
pop
pushf
movsb
out
or
mov
cmp
mov
out
cmp
pop
aad
arpl
jb
xchg
outsl
and
mov
lds
mov
sti
lcall
test
lret
out
sahf
adcb
repnz
cmpb
adc
pop
inc
dec
jo
stos
sub
andb
test
ror
cmc
loopne
cltd
rol
cmc
inc
and
lock
mov
push
cmp
fiaddl
pop
cwtl
cltd
xor
pop
fnstenv
int3
es
mov
sub
bound
xor
cmp
call
insl
jnp
or
cmpsb
cwtl
clc
std
dec
jp
cmpsl
mov
or
xchg
cwtl
add
lods
pop
mov
shll
mov
leave
sahf
shll
imul
cltd
push
mov
mov
arpl
inc
fnsave
rcrl
aad
dec
daa
mov
clts
push
sub
je
cmp
lret
and
cltd
inc
jp
sbb
aam
pop
pop
int3
jecxz
fmulp
pop
mov
push
lds
and
dec
imul
ret
xchg
cmpsl
imul
xor
jecxz
ljmp
andl
cmp
mul
es
mov
cld
or
sbb
call
clc
xor
xor
and
cmp
inc
push
cmp
in
dec
add
adc
icebp
movsl
orl
fdivrl
mov
mov
sbb
arpl
mov
lret
fnsave
stos
imul
cmpsb
les
push
or
into
leave
divl
or
nop
mov
jbe
mov
pop
and
sub
shl
jg
mov
fadds
into
xchg
fnsave
push
push
xchg
clc
xorb
adc
mov
mov
int3
mov
inc
inc
jno
xchg
mov
std
sbbl
adc
ret
ds
ror
stos
xchg
popf
pop
xor
pop
xor
pop
mov
lcall
add
sub
cli
in
mov
xchg
xor
loope
push
mov
gs
clc
inc
mov
mov
ret
rcl
int3
pop
cs
stos
cmp
mov
repz
inc
lahf
daa
sti
mov
and
add
mov
push
jp
cmp
dec
cmp
cltd
aam
lret
push
lds
adc
cli
lods
xor
xchg
ret
jle,pn
jl
cmp
cmp
ficoml
mov
mov
dec
insl
jp
push
lcall
fiadds
ja
adc
jbe
mov
das
bound
cmc
sbb
mov
sbb
push
pop
mov
mov
jg
xor
cmpsb
mov
in
iret
mov
jae
or
jg
push
xchg
movsl
movsb
push
dec
arpl
xchg
mov
adc
inc
sbb
sbb
fwait
add
in
popf
int3
inc
or
sub
arpl
insb
fsubrs
mov
iret
mov
aam
cwtl
add
repz
popa
std
push
std
jae
cmp
jne
les
int3
jnp
mov
mov
outsb
bound
pusha
loopne
aad
iret
mov
std
xor
dec
notl
outsl
dec
aas
add
cltd
fstps
inc
jnp
cmpsl
add
push
fnstenv
mov
cmp
pop
pop
fs
xchg
mov
into
int
inc
push
out
add
leave
push
adcl
test
adc
push
sti
push
push
adcl
jnp
jne
cmp
mov
or
enter
fmuls
leave
inc
cmc
lods
cwtl
mov
sbb
stos
lods
or
outsl
jge
sahf
mov
mov
and
loope
in
and
ds
aad
xchg
pushf
leave
adc
dec
inc
cmpsl
fs
push
or
shrl
bndstx
cmp
jb
xor
mov
jg
clc
and
les
out
xchg
jns
fcoml
xchg
jbe
sub
in
cmpsb
int3
decb
and
sbb
and
negb
cmp
addb
adc
push
addr16
mov
cltd
clc
or
lods
fdivl
and
inc
sar
or
dec
inc
xor
stos
repnz
sbbb
jmp
inc
sarl
jge
sbb
xchg
data16
mov
movsl
mov
pop
enter
ret
mov
mov
sub
and
dec
xor
push
push
mov
popf
xor
jl
fdivs
repnz
je
loope
add
mov
cld
insb
popa
icebp
movsl
mov
scas
cld
stos
jo
scas
fs
into
pusha
push
and
call
ret
iret
push
in
xor
loope
call
push
mulb
adc
cmp
stc
stc
mov
xor
xchg
xchg
xor
push
pop
push
jp
or
lock
cmp
mov
int3
dec
aad
fsubs
jp
xor
lods
cmp
push
or
rclb
push
test
mov
jle
jns
out
pop
subl
sahf
jp
push
adc
mov
adc
negl
dec
in
or
jns
lods
movl
jge
jne
fiaddl
ja
jle
xchg
je
or
sbb
sub
cmc
cld
add
lock
xchg
sbbb
xchg
fcmovu
fimull
sub
les
movsl
stos
inc
ja
fs
and
lds
mov
or
mov
mov
sbb
in
ss
push
loope
adc
inc
je
movsb
dec
lds
je
jno
stos
cltd
ja
sbb
xchg
pop
ljmp
mov
jns
jecxz
inc
jl
popa
sub
stc
pop
lods
data16
outsb
or
fdivrs
add
cmovle
dec
xlat
mov
ds
sub
mov
cmpsb
xchg
into
inc
cs
and
jmp
stc
dec
repz
cvtps2pd
dec
mov
mov
scas
mov
out
lods
inc
outsb
adc
mov
lock
sub
inc
mov
je
or
test
pop
movl
ret
cmp
dec
adc
ret
pop
inc
cli
sbb
pushf
inc
pop
ja
xlat
xor
insb
xor
rolb
mov
cs
dec
call
mov
jle
lea
enter
mov
mov
addr16
dec
in
lods
or
popw
ss
mov
mov
jnp
and
push
test
jmp
stos
insb
sub
push
lret
jl
jp
ficoml
pop
sub
shrl
mov
movb
mov
add
js
repz
cmp
cld
clc
mov
push
nop
adc
cmp
movsb
data16
fisubl
or
sbb
test
jmp
addr16
jp
ret
mov
outsl
in
cwtl
bound
lret
in
insl
fdivrl
aas
mov
jns
dec
jns
insl
add
sti
cmp
inc
sbb
jle
push
iret
xchg
dec
cmpsl
loopne
jl
pop
sub
hlt
adc
jge
insl
jno
loope
inc
push
cli
push
cli
dec
push
jae
inc
sbb
leave
outsl
fcmove
ds
test
jno
mov
aad
clc
dec
addl
or
repnz
repz
xchg
sar
es
in
es
call
popf
cmpsb
std
inc
jp
add
cmp
movsb
lods
sub
fs
gs
leave
jnp,pn
mov
mov
push
stc
icebp
adc
sbbl
insl
xor
ret
or
sub
cmp
and
pop
mov
jns
ret
adc
popf
test
adc
inc
add
cmp
mov
icebp
fbstp
xchg
inc
divb
or
push
cmc
cmp
fs
push
ror
inc
and
sarl
mov
push
mov
mov
lods
push
jns
data16
jmp
rorb
pop
add
xor
xchg
cmp
push
push
inc
pop
add
stos
icebp
pop
pusha
xchg
cmpsl
lods
mov
repz
shlb
stos
decb
cmp
cwtl
pop
push
fs
ss
pop
ss
and
push
jbe
ret
lods
mov
test
inc
dec
sub
stos
cmpsl
ret
sbb
rcl
inc
push
int
shl
addr16
enter
mov
adc
sbb
jo
scas
std
adc
mov
mov
cltd
or
int3
incb
mov
mov
mov
cld
push
scas
mov
lret
mov
insl
sbb
sub
cs
in
dec
nop
add
fisttpl
cmp
inc
jl
test
push
xchg
addr16
in
lds
inc
repnz
in
jg
push
push
sub
lock
or
test
adc
lret
shlb
mov
or
sbb
add
lods
push
jmp
sub
mov
jecxz
sbb
jne
sahf
mov
xchg
add
xor
outsb
and
and
adc
test
aam
push
inc
xor
sbb
cmc
xor
test
adc
enter
dec
lahf
xor
inc
xchg
or
andb
push
repz
mov
clc
call
inc
pop
imul
js
ds
jo
in
test
jns
scas
lds
mov
leave
mov
sbb
iret
lahf
mov
lret
lcall
test
dec
mov
stos
test
cmp
xor
pop
dec
push
aad
fcmovbe
ret
lock
cmpsl
jb
sub
jbe
popa
mulb
jae
cmp
or
loope
arpl
sbb
mov
cmp
and
dec
push
xchg
and
out
cli
xor
cmp
lock
cmp
imulb
adc
inc
jnp
adc
cmp
or
pop
push
push
imul
arpl
sub
inc
and
std
enter
sub
pop
xchg
xor
mov
and
jg
roll
mov
sbb
movsl
into
std
repnz
cmp
imul
and
inc
add
pusha
mov
cmp
jl
fcmovnbe
push
iret
scas
div
ret
out
int
cmp
lret
aas
sub
dec
jb
xchg
dec
xchg
xor
sub
test
xchg
mov
mov
sbb
add
lea
add
jns
dec
lret
sbb
outsb
sbb
bound
jle
clc
fdivr
gs
pop
clc
cmpsl
jl
out
pop
sub
sbb
repnz
mov
mov
jo
movsl
mov
leave
shlb
adc
lahf
out
ss
scas
xor
inc
icebp
pmullw
fmul
in
clc
ljmp
test
mov
dec
dec
jne
pop
je
dec
fdivl
lds
pop
insb
frstor
jge
push
out
leave
sub
adcb
sbb
mov
add
push
mov
mov
adc
xchg
in
popa
pop
fcmovnbe
jp
jmp
adc
cmpsl
nop
xchg
sbb
adc
mov
add
idivl
cwtl
pop
pop
xor
xchg
cmp
xor
scas
fldcw
cli
xchg
push
xchg
rsqrtps
jo
adc
mov
nop
arpl
fwait
test
int3
mov
push
sub
pop
clc
out
rclb
pop
repz
push
and
jmp
jns
decb
fisubrl
cmc
cmpsb
cmpsb
loopne
ss
cmp
cmp
push
xchg
or
int
inc
loope
inc
and
out
fidivrs
adc
mov
mov
cmpsl
pop
in
dec
jno
lods
dec
ret
xchg
or
jecxz
aaa
mov
cmpsb
cltd
pusha
popa
fmulp
jmp
repnz
mov
outsl
pop
pop
out
inc
inc
xor
adc
outsl
xchg
push
shrl
push
popf
in
push
xchg
loop
stos
pop
sbb
fsubrs
xchg
inc
test
cli
into
outsl
sbb
in
sti
mov
cmc
xor
fcoml
jne
loopne
decb
lock
pop
mov
addr16
sti
movsb
dec
data16
pusha
push
inc
das
push
sub
in
cmp
loope
subl
fiaddl
fdivrl
and
or
daa
rcl
cmp
cmp
mov
ss
roll
popa
add
mov
lahf
mov
mov
scas
mov
inc
push
pop
cltd
cs
jl
shl
xor
in
inc
pop
sub
insb
pusha
call
xchg
push
std
xchg
jo
push
pop
test
ja
cmpsl
and
jge
cwtl
add
aaa
aam
mov
insb
fwait
sbb
cmp
mov
inc
dec
sub
ret
lds
xchg
add
xor
loop
jg
mov
je
xor
out
sub
sbb
cmp
inc
imul
cmp
jmp
imul
add
push
adc
ret
jmp
xchg
xchg
jecxz
jge
xchg
xchg
cmp
out
stos
mov
add
mov
js
sub
aam
shrl
cmpsl
addb
aam
fstpt
xchg
mov
mov
int3
adc
xchg
insb
pop
aad
adc
nop
in
dec
icebp
mov
adc
sub
test
sbb
out
orl
outsb
ljmp
rcll
cmpsl
jae
dec
aas
insb
cld
jae
mov
push
dec
sahf
jl
sbb
or
xchg
notl
mov
ss
aam
add
movsl
aaa
cmc
subb
mov
xor
flds
in
mov
dec
hlt
xor
std
rcr
mov
pop
add
and
mov
bnd
into
js
roll
ljmp
or
gs
and
push
pop
lods
test
mov
js
pushf
subl
pop
nop
inc
std
lods
iret
sahf
push
pop
push
int3
out
test
lret
incl
out
arpl
loop
jbe
fcoms
jb
pop
mov
lods
repz
je
jmp
sub
in
sbb
cmpsb
cmp
pop
scas
loop
sbb
cs
mov
or
dec
mov
mov
inc
das
clc
fldl
loopne
stc
pop
js
enter
nop
insb
bt
test
imulb
fwait
pushf
pop
push
fnstsw
dec
in
scas
addr16
js
rcrl
iret
in
dec
cmpsl
andl
loope
imul
and
pushf
add
les
sub
sub
cwtl
addb
mov
add
push
or
stos
jecxz
fs
and
pop
in
cmp
fistl
rcrl
dec
sbb
push
cmp
sbb
jmp
mov
push
div
fwait
pop
shll
pop
pop
add
mov
or
lret
dec
lds
repnz
into
push
rolb
sub
xlat
push
add
pop
nop
and
push
add
mov
in
jnp
sbb
inc
cmp
push
or
jmp
fdivrs
mov
mov
xor
pop
or
cmp
xor
sub
jge
imul
push
inc
fwait
ret
pop
cltd
add
xor
pop
xor
test
lcall
dec
and
xor
outsl
lret
mov
mov
lea
dec
push
dec
sub
sbb
mov
xchg
mov
into
mov
ljmp
and
jp,pn
sbb
mov
iret
test
mov
or
xchg
in
cmp
pusha
pop
mov
sub
mov
sti
lods
test
push
loope
insl
xor
sbb
adc
mov
and
imul
negb
fistl
gs
and
je
shll
fcomps
mov
repz
sbb
dec
fidivrl
push
mov
push
cmpsb
and
xchg
jnp
lds
adc
jp
sbbl
mov
inc
xor
test
push
mov
push
add
out
insb
lds
adc
jp
adc
popf
in
pop
jecxz
xlat
mov
shll
sub
iret
in
int
and
pop
cmpb
fbstp
jns
stc
aaa
mov
sub
adc
outsb
les
sub
fisubrl
fsubr
addr16
pop
iret
mov
imul
ljmp
push
jle
sbb
test
js
lods
mov
jno
ljmp
jl
subb
pushf
sahf
nop
roll
jge
jns
out
pop
pop
xlat
stos
dec
int
and
call
sahf
mov
in
push
sub
push
sbb
jge
push
int
movsl
mov
loop
arpl
cld
or
adc
fnstcw
lods
xchg
mov
mov
into
add
lahf
imulb
pop
or
sbb
dec
mov
stos
rcll
notl
stc
stc
xchg
js
enter
and
vphaddudq
inc
mov
mov
out
inc
push
aas
jecxz
or
fs
incb
cmp
data16
push
xor
mov
xchg
sbb
jns
gs
pop
mov
dec
xor
sub
sahf
xchg
pop
subl
mov
push
dec
push
arpl
push
out
push
and
stos
mov
rorb
add
xlat
inc
mov
and
inc
and
cmp
repz
push
jnp
js
mov
shufps
mov
mov
cwtl
notb
jmp
rorl
movsb
test
pusha
dec
inc
xor
fistps
fsubrl
imul
jnp
fcoml
rclb
nop
icebp
jns
push
push
pop
sbb
push
jl
xor
jno
out
mov
popa
dec
daa
mov
cmpl
and
out
sub
sub
mov
enter
enter
iret
int3
cmp
std
pop
fimull
add
fbstp
xor
mov
mov
test
in
ds
popf
fbstp
dec
out
iret
mov
lods
xlat
dec
repnz
pop
iret
pop
push
aad
clc
push
jp
push
rcrl
addr16
into
cld
mov
out
sbb
xchg
adc
hlt
fidivrs
and
maxps
or
or
addb
jnp
and
xchg
aad
or
ss
push
sti
mov
fsubrs
aam
ds
icebp
ret
cmp
jl
mov
mov
pop
out
movsl
scas
cmp
mov
pop
rorb
into
in
xchg
mov
sbb
adc
pop
test
movsl
subb
leave
mov
mov
movsl
cmc
mov
xorl
fnsave
ss
sub
cltd
and
pop
inc
ds
rolb
lret
jne
or
pop
inc
cmpsb
xlat
cmc
xchg
inc
jg
scas
movsb
loope
fnstcw
lret
popa
mov
xchg
orb
aad
addr16
inc
and
jl
call
lods
in
add
mov
in
inc
inc
sbb
xor
stos
aaa
adc
add
xchg
movsl
push
xchg
xor
or
jp
cmp
mov
insl
adc
sbb
test
shlb
roll
fndisi(8087
imul
out
lea
and
movsb
add
jecxz
mov
ljmp
int
pop
sbb
popf
ja
pop
clc
mov
into
mov
mov
jecxz
pop
sbb
push
fs
popf
xchg
fmul
pop
lds
fidivl
and
dec
imul
ds
dec
xchg
mov
out
fimull
ja
jno
xchg
jb
shlb
pop
jns
cmpsl
mov
dec
gs
pop
pushf
fcoml
inc
bound
pop
or
das
sub
es
adc
lret
xor
pop
dec
jge
sub
adc
mov
in
mov
mov
mov
mov
xchg
add
movsl
rcl
pop
xorl
cmp
dec
lret
lahf
cmp
dec
mov
dec
dec
scas
xchg
xchg
cmp
or
push
cmp
rol
bound
pop
pusha
jae,pn
iret
pusha
int3
dec
movsl
sub
fcmovnb
push
outsl
mov
and
push
data16
xchg
nop
push
popl
ja
sahf
loop
push
mov
popf
add
sbb
jb
jnp
jg
lock
fs
and
pop
and
sub
xlat
jno
pop
and
sbb
or
cmp
ficomps
push
adc
in
jp
clc
pop
adc
repz
shl
gs
inc
sub
lds
es
adc
xchg
imul
sub
repnz
jl
out
xchg
enter
adc
mov
ss
jecxz
repnz
faddl
or
imul
dec
dec
cwtl
mov
adc
dec
dec
sbb
test
mov
mov
loope
out
xchg
sub
dec
repz
sub
xor
out
scas
cmpsb
mov
adc
sbbl
jl
adc
lea
push
inc
or
js
push
adcb
gs
idivb
adc
jne
cmp
or
dec
push
jg,pn
jecxz
mov
cs
and
jmp
sbb
hlt
push
push
pop
loop
push
stc
xor
imulb
cmp
popf
clc
jb
rcl
mov
pop
outsl
rep
es
xchg
popf
in
and
scas
mov
xchg
inc
and
jo
aad
sub
les
mov
popf
sbb
das
andb
sub
mov
sbbl
fisttpll
sbb
test
rorl
repnz
lods
pop
sbb
xor
fs
jo
aad
dec
xchg
hlt
mov
testl
xchg
jo
prefetchw
cs
push
inc
pop
cmp
sbb
fimull
jb
es
mov
mov
sarb
and
jmp
loop
ret
repz
jbe
xor
pop
fistl
push
jb
fcompl
in
jno
mov
xchg
outsl
and
cli
mov
data16
sbb
and
pop
fwait
addr16
lds
in
xor
push
outsb
mov
in
ss
adc
xor
test
cmovp
rcrb
xchg
fs
sbb
push
sub
add
mov
push
icebp
and
bnd
jecxz
and
test
lcall
les
out
ds
shl
inc
jns
cld
mov
cld
loope
xchg
mov
adc
add
pop
jnp
pop
call
aad
xchg
lock
pop
scas
inc
pop
dec
loopne
mov
sub
movsl
push
adc
popf
repz
sub
or
cmp
inc
daa
popa
in
cltd
push
or
mov
outsl
and
jmp
mov
mov
xchg
push
xorl
adc
aad
and
daa
mov
mov
loopne
sbbl
mov
adc
push
rcll
mov
dec
dec
loopne
pop
popf
clc
enter
lret
cmpsb
arpl
cmp
cmpsl
in
push
mov
or
xor
jp
loop
xchg
lret
mov
add
cwtl
jo
dec
in
inc
jo
out
ljmp
stos
fsubs
je
enter
cmp
push
inc
and
xchg
repz
daa
sahf
ds
cmp
adc
popa
push
repz
in
add
sbb
idiv
sub
insb
push
test
stos
jbe
adc
mov
icebp
xchg
ret
cmpsl
or
out
push
mov
fwait
insb
cmc
int3
lods
imul
inc
in
add
xchg
loope
fstl
cmc
xor
mov
inc
pop
cmp
test
gs
dec
inc
push
push
pop
stc
adc
rep
ljmp
hlt
mov
and
int3
dec
jae
fsubl
lahf
mov
add
popa
aad
fisubrs
pop
and
test
mov
adc
jmp
mov
inc
scas
mov
jg
mov
mov
dec
std
inc
mov
add
pop
orl
cmp
push
ficomps
mov
sub
pop
mov
mov
jl
mov
inc
xor
or
std
sub
mov
aad
xchg
imul
cmpsb
and
dec
mov
aas
popa
adc
mov
jl
pop
fists
add
sub
inc
addr16
fstpt
jge
movsl
fcoms
adc
imul
loope
out
mov
sub
inc
lea
loope
jnp,pn
xor
sbb
adc
iret
pushf
jle
fcom
test
roll
xchg
into
popf
push
xchg
fbstp
xor
icebp
pop
add
mov
jecxz
ret
imul
mov
jge
push
loopne
subb
test
sti
cmpsl
pop
add
test
and
cmc
rol
sub
dec
cmp
push
aaa
popw
in
aas
movsb
imul
push
outsb
ficompl
jmp
test
adc
insl
mov
out
xchg
outsb
cmp
mov
dec
addr16
or
lods
jb
adc
ljmp
add
xor
pop
sub
mov
imul
jbe
testb
sbb
adc
out
jle
movsb
arpl
cmp
mov
aas
popa
jns
jmp
sbb
flds
lret
cmp
cmp
test
or
xor
mov
stc
in
sbb
or
ljmp
int
xchg
push
cwtl
dec
lahf
imul
add
loop
scas
jp
test
mov
xor
push
and
out
repz
orb
push
mov
jecxz
ja
int3
add
mov
test
mov
sar
rcrb
jl
inc
jmp
jmp
add
les
das
xor
jp
rolb
lcall
push
int
xchg
idivl
daa
and
lret
add
xchg
cmpsl
pop
lea
dec
fwait
cwtl
jge
arpl
adcl
outsl
pop
dec
in
sbb
push
lods
jae
and
in
sub
aad
mov
add
inc
hlt
jmp
es
push
iret
add
int3
jecxz
aad
mov
shlb
mov
xor
pop
xor
sbb
push
dec
sub
xchg
loopne
loope
incb
aad
fwait
xchg
mov
inc
lea
and
outsb
pop
pop
mov
popf
inc
pop
dec
and
mov
lods
sub
mov
pop
hlt
dec
dec
mov
and
or
lret
cli
pop
outsb
in
cmp
scas
pop
inc
mov
sahf
into
ret
in
xor
nop
pop
mov
rolb
int3
mov
inc
lret
movsb
xchg
or
ret
adc
jge
pop
lahf
jl
movsl
cmp
mov
pop
setp
mov
int3
pusha
add
loope
xor
imul
push
into
pusha
std
xorb
xchg
push
xchg
sub
in
jne
xchg
leave
add
popa
arpl
dec
std
call
mov
out
pop
xor
outsl
add
dec
push
shr
loopne
lahf
lret
xor
sarb
cmp
adc
ret
inc
or
lret
insl
jb
aad
add
xchg
lahf
cltd
push
ds
int3
cmp
cmp
or
filds
lret
mov
pop
xchg
fs
rorb
push
dec
scas
push
dec
outsl
adc
cmpsb
pop
pop
lcall
jbe
das
stos
inc
pushf
lods
jns
stos
setae
add
jp
fwait
popa
pop
fs
mov
lahf
movsb
xor
in
in
push
xchg
test
jp
in
cmp
or
push
sub
jl
repz
and
int3
mov
pop
add
paddw
loope
out
cltd
mov
sbb
popa
add
ret
repnz
out
inc
and
mov
icebp
in
mov
imul
dec
stc
mov
scas
add
dec
scas
adc
nop
xor
cli
jp
stos
or
outsb
inc
ss
cld
stc
les
adc
xchg
fsubp
aad
inc
xchg
cmp
sub
cwtl
mov
stos
add
push
adc
pop
rclb
sarl
test
push
jno
loopne
jno
cmp
pop
mov
into
and
pop
inc
and
lods
or
cmp
gs
pusha
sbb
icebp
ret
cmpsb
pop
xchg
jno
les
gs
mov
dec
xor
insl
and
inc
push
jne
or
cmp
mov
cld
xor
jp
adc
dec
adc
es
sbb
gs
movsl
mov
insl
sbb
lahf
gs
aam
or
inc
aam
outsl
repz
pushf
enter
cmpsb
sbb
out
enter
lock
fsin
js
aad
pop
stos
in
mov
pop
rorl
cmp
ret
rcl
fwait
push
test
push
cmp
jb
leave
and
test
sti
pop
cmpsl
adc
dec
mov
rcll
xor
scas
rolb
mov
dec
mov
mov
mov
nop
ror
in
jl
ds
scas
xorl
jmp
xchg
adc
ret
cltd
cmp
push
movb
daa
js
push
mov
jne
mov
cli
divb
fisubl
cs
cmp
rol
aas
lea
mov
adc
mov
dec
cli
out
insb
rolb
sbb
test
lahf
pop
inc
fisttpl
adc
pop
repz
fcmovu
rorl
jl
pop
jle
lods
pop
repnz
movsb
movsl
ss
mov
jae
cmp
mov
inc
xchg
sub
jo
lahf
xchg
cmp
adc
jno
or
jle
out
sub
cltd
push
xor
cmp
mov
ljmp
lret
sub
xchg
gs
sbb
push
xorl
mov
imul
popf
inc
iret
js
addr16
popa
scas
fisubrs
aam
std
lock
lods
jmp
dec
in
mov
inc
test
call
jb
jo
rcl
cwtl
mov
or
in
mov
jnp
inc
fnstcw
lahf
cld
pop
sub
push
xor
out
jo
loop
inc
push
pop
pusha
jge
add
loopne
xor
jmp
pop
enter
push
mov
sbb
inc
test
dec
popa
rol
lods
xchg
jno
add
test
ficomps
lcall
pop
data16
rol
xchg
xchg
sub
cwtl
mov
popa
iret
addr16
push
jle
es
inc
sbb
sbb
fnstenv
mov
lcall
xchg
push
in
mov
and
xor
testb
data16
mov
cli
cmpsl
sub
popa
shll
pop
cmp
das
ret
cmp
mov
popa
push
fwait
mov
dec
cmp
sub
mov
sbb
mov
cs
neg
inc
test
repz
and
inc
mov
enter
xor
jle
repz
subl
ret
xorb
decl
xchg
out
scas
aas
jae
movsl
inc
jge
inc
jbe
xor
ss
data16
push
add
fsubs
movl
imul
jg
inc
and
mov
xchg
out
imul
movsl
dec
or
fistl
sbb
inc
test
push
into
fstl
mov
daa
pop
dec
mov
nopl
out
addl
and
mov
mov
dec
lock
dec
add
enter
pushf
js
adc
call
mov
xchg
pop
dec
lock
inc
xlat
xchg
leave
daa
inc
mov
jmp
jecxz
inc
es
aas
cmp
push
push
sbb
aaa
push
cltd
sbb
ret
jecxz,pt
test
cmp
cmpsl
clc
ds
les
roll
mov
sbb
arpl
add
push
xlat
or
or
neg
adc
mov
cmp
vpmaxsw
and
ja
movsb
fwait
pop
pop
cmpsb
scas
test
out
scas
test
movsl
loope
nop
sbb
cmpsb
clc
xchg
insl
or
lret
das
xchg
jno
push
dec
int3
cmpsb
and
mov
xor
scas
in
mov
and
out
out
mov
inc
cmp
repz
push
enter
add
inc
std
cwtl
ja
daa
test
out
mov
mov
pushf
and
rclb
in
mov
into
insl
lock
pop
fucomip
add
insb
ror
xor
hlt
jmp
mov
xchg
xor
mov
mov
xorl
jae
loope
mov
imul
pop
js
lods
ficoml
xchg
xor
out
push
ljmp
jg
imul
sbb
xchg
lods
push
xchg
loop
dec
mov
rcr
dec
sub
sub
cmp
fistps
pop
fisttpll
icebp
lret
dec
sbb
call
push
pop
out
or
scas
jb
push
lcall
cmp
lret
fdivl
xchg
push
ljmp
testb
pop
or
adc
jne
ds
mov
or
push
inc
inc
ds
jnp
xor
filds
sti
mov
adc
push
ljmp
and
lods
inc
bound
test
loop
adc
and
adc
xchg
cmp
rolb
push
sbb
addr16
mov
jae
push
or
xchg
xchg
bound
or
icebp
mov
lock
flds
loopne
scas
adc
mov
sbb
mov
and
push
mov
scas
cs
push
and
test
mov
and
cmpsb
push
nop
scas
testl
sbb
xor
ja
pop
sub
push
and
push
pop
pop
inc
mov
xor
sub
test
test
daa
and
pop
iret
mov
xchg
test
lcall
cmpsl
xchg
adc
lea
stos
sub
divl
fistpl
mov
call
mov
add
add
xor
pop
sbb
mov
movl
mov
scas
mov
pop
je
adc
push
sub
xchg
scas
mov
xchg
add
mov
or
push
mov
je
mov
into
xchg
jo
adc
xor
mov
lods
outsb
or
dec
loope
and
or
xchg
sti
push
insb
ljmp
das
mov
ss
push
add
cli
ficompl
mov
add
jmp
sbb
jb
mov
icebp
dec
jae
repnz
adc
sub
sahf
std
inc
loope
inc
int
jmp
push
mul
idiv
arpl
jae
in
xorb
cmp
repnz
nopl
lods
lret
sub
or
push
int
mov
push
mov
pop
insl
dec
mov
dec
push
pushw
das
mov
inc
sbb
or
stc
dec
mov
leave
mov
mov
adc
test
fists
mov
xor
mov
push
jno
sub
cmpsl
stos
test
pop
sti
andl
divb
dec
pop
dec
pushf
adc
push
push
movsb
lcall
pop
test
lods
out
inc
add
imul
pop
xchg
pop
mov
test
js
cmp
pusha
fwait
xchg
daa
fwait
pushf
loopne
nop
lret
test
push
sbb
push
jne
arpl
jecxz
xchg
ror
rcl
push
fsubrs
in
xor
enter
or
insb
scas
inc
ret
adc
int
xchg
movsb
jbe
jo
inc
and
cmc
int
das
test
xor
iret
loop
mov
push
lods
repnz
pop
test
je
ljmp
mov
addr16
xchg
shrl
pop
push
push
push
aam
add
lret
push
sub
jmp
sbb
cld
in
sub
mov
mov
lcall
push
xchg
mov
shll
push
jo
xor
jle
xlat
pop
dec
addb
pop
cltd
je
sbb
aam
out
push
dec
xorl
sub
jp
inc
enter
dec
shlb
ljmp
dec
pop
jmp
push
test
shll
rcrb
dec
out
out
and
fists
cmpsb
mov
dec
out
repz
cmc
ljmp
jmp
mov
add
sbb
and
lock
mov
xchg
or
lret
fcomi
inc
mov
sbb
sub
rorl
add
jmp
push
push
xor
xor
pushf
fldt
mov
xlat
outsl
iret
mull
idivl
sub
in
push
mov
hlt
inc
test
jecxz
inc
das
fcompl
and
xchg
cltd
mov
adc
xor
imul
enter
bound
mov
outsl
lds
mov
scas
adcb
dec
inc
xor
dec
pusha
aam
loope
flds
cltd
push
stos
in
rcpps
fcompl
add
loopne
cli
pop
dec
jno
nop
data16
pop
adc
push
mov
popa
sbb
mov
push
adc
add
xchg
xor
inc
adc
call
lcall
dec
loopne
jno
stc
dec
pushf
aas
subb
nop
sbb
es
sahf
in
mov
and
or
or
fstl
out
jb
or
shll
xchg
and
lods
pop
shll
popa
xchg
mov
in
add
adc
shll
adc
ss
les
cmpsl
addl
mov
fsubrs
xchg
mov
cmpsl
les
jne
adc
xchg
adc
mov
mov
xor
push
cmpsl
jmp
out
enter
sub
cmc
call
or
xor
fs
int3
fistpll
ljmp
mov
jmp
and
ret
mov
mov
int3
cmp
dec
cmovne
cmp
push
ror
shll
idiv
repnz
pop
add
loop
and
pop
push
cmc
jmp
enter
cmp
lret
fwait
cmp
mov
idiv
jne
nop
mov
pop
in
cmp
pop
jb
push
outsb
push
fld1
test
lea
sub
add
mov
mov
mov
call
sbb
add
xchg
lods
xchg
xchg
je
sbb
loop
negb
sbb
mov
mov
mov
adc
xchg
mov
mov
push
loope
pop
jmp
js
jmp
lds
adcl
cs
jo
sub
popa
inc
es
lcall
imul
bound
lret
sub
pusha
inc
stos
cmp
roll
mov
push
and
jno
decl
mov
packuswb
out
sbb
out
or
stos
loopne
jp
loopne
inc
scas
jmp
mov
leave
push
sbb
rcrb
ljmp
sbb
xor
mov
add
outsb
lcall
mov
add
jno
cmp
lret
jno
add
mov
jne
xchg
fimull
mov
mov
ret
mov
pusha
pop
and
jne
or
mov
xor
dec
push
sub
inc
popa
jmp
ja
mov
push
js
sahf
jmp
jne
rolb
inc
pop
mov
add
push
movsl
xchg
ret
movsb
lahf
mov
fstps
xchg
mov
jo
push
loop
mov
gs
push
nop
lds
xchg
push
push
xor
enter
fucomi
mov
xor
adc
jne
add
jecxz
repz
rol
inc
shlb
sbbl
out
scas
jl
jmp
test
dec
mov
push
mov
dec
add
nop
push
shll
add
or
or
adc
mov
inc
imul
inc
dec
pop
js
pop
out
leave
in
mov
add
inc
les
loop
das
add
push
or
cvtps2pi
jb
lods
mov
mov
pop
daa
mov
mov
lret
mov
jge
xchg
cs
xor
test
repz
inc
data16
adc
mov
push
push
pop
xor
xor
jae
ds
je
das
shll
lret
cmpsb
lock
ljmp
leave
mov
push
mov
mov
out
addr16
xchg
imul
mov
popf
sub
or
lds
stos
mov
sbb
test
mov
shll
mov
dec
popf
cmpl
sbb
inc
push
mov
push
dec
sbb
shrl
dec
cld
inc
fidivl
daa
push
push
stos
jne
in
jb
mov
mov
fiadds
fcmovb
jbe
or
repnz
pop
push
movsb
out
stos
push
push
lret
and
out
scas
lcall
mov
xlat
pop
rcrb
xor
dec
call
sarb
adc
mov
stc
xor
dec
cmp
mov
imul
sbb
inc
sahf
inc
jle
adc
xchg
inc
cmp
cmp
ret
iret
int
aad
pop
nop
lcall
gs
mov
cmp
mov
cld
xchg
repz
mov
stos
push
aad
in
adc
fldl
xlat
sub
push
or
jmp
std
adc
cli
jno
and
sti
cmp
sti
pop
out
add
sbb
mov
jmp
push
xchg
iret
add
lcall
push
dec
mov
lods
inc
jo
adc
mov
out
jbe
jmp
cmp
xchg
mov
inc
pop
mov
cmpsb
inc
sub
lock
mov
push
lcall
xor
jge
dec
or
xor
cmp
jne
mov
fdivs
dec
sub
push
add
fwait
mov
cmc
xchg
pop
rcrl
cmpsl
mov
loopne
popa
mov
inc
out
repz
mov
jb
xor
and
cs
xor
mov
loopne
xor
inc
xchg
ficomps
pusha
ret
bound
mov
mov
xchg
jae
fmuls
jne
jno
mov
popf
fistps
mov
sbb
jmp
pop
adc
out
pop
pop
mov
in
shrb
xor
or
dec
ss
dec
or
sarl
mov
xchg
addr16
adc
cwtl
fimuls
xchg
fdivl
mov
and
xchg
adc
inc
nop
lods
lods
sub
push
mov
push
pop
cmpb
jno
cwtl
pop
clc
inc
mov
ffreep
dec
pop
dec
fldenv
jmp
push
call
mov
cmp
test
adc
gs
lods
sbb
in
inc
cltd
pop
ret
ret
push
mov
push
test
xchg
repz
inc
sahf
pop
mov
xchg
and
sbb
jmp
mov
call
nop
cld
jae
jmp
lret
mov
add
xchg
inc
xlat
xchg
je
hlt
and
cld
cmc
pop
mov
cmpsb
jno
das
out
and
aas
jae
inc
pop
push
cmp
into
loope
insb
js
aaa
add
movsl
in
jp
push
rcl
in
mov
shlb
adc
fcmovb
shrb
add
outsl
sub
xchg
jnp
jno
cmp
cmp
pop
pop
cmp
sub
loop
xchg
cmp
xchg
jns
inc
jne
pop
jae
aas
adc
and
addr16
bound
sbb
aad
cs
int
repnz
cmpsb
cmp
movb
out
xchg
mov
xor
or
pop
pop
adc
push
jne
jle
flds
jno
mov
ljmp
push
jge
jb
dec
add
jo
mov
call
jb
mov
pop
pop
sbb
in
push
sub
pop
fld
in
popa
inc
in
lret
push
testl
ss
xchg
in
cmpb
lret
cmp
sub
lock
dec
jno
cmp
repnz
outsl
inc
shll
shll
mul
scas
inc
inc
das
fnstenv
andb
sti
gs
adc
mov
xor
les
xor
test
dec
add
jb
daa
lds
rcrb
xor
push
fcompl
fistpl
cmp
xor
pop
movsl
xor
xchg
mov
dec
mov
sub
sahf
mov
shrb
out
inc
or
ljmp
lcall
jmp
lret
movsb
and
repnz
sub
rclb
call
int3
and
sub
insl
insb
stos
int3
and
sub
dec
outsl
dec
in
dec
xchg
mov
and
lds
fldl
int3
inc
xchg
popf
push
inc
out
cld
pop
inc
pop
push
sahf
std
mov
dec
pushf
ret
je
nop
pop
lret
arpl
push
mov
loopne
lods
ret
mov
imul
test
popa
add
inc
repnz
dec
pop
xor
fcomp
sub
sarl
sub
pushf
mov
sub
push
sbb
imul
call
scas
pop
xlat
dec
popf
push
call
cmp
int
sarl
sbb
push
mov
repz
cli
add
inc
push
ja
dec
std
aam
mov
insb
sarl
dec
sar
mov
inc
hlt
or
mov
outsb
mov
mov
sbb
xchg
inc
pop
iret
fwait
outsb
mov
mov
pop
xchg
sbb
xor
arpl
xlat
mov
test
cmp
add
dec
sbb
jo,pn
mov
gs
sbbb
in
rol
out
inc
mov
pushf
add
adc
cmp
fsub
xchg
shl
inc
mov
pop
aad
cmp
lret
repnz
imul
aas
sbb
jbe
mov
mov
cltd
negb
adc
lods
bound
imul
hlt
jnp
pop
into
cli
xchg
clc
push
dec
rolb
fistps
andb
into
aad
or
add
inc
dec
pushf
fsubs
notb
enter
stos
xchg
xor
loop
fisubl
adc
xor
movsl
mov
sti
push
adcb
push
movb
loop
lods
ss
fnsave
pusha
mov
mov
sbb
jge
dec
xchg
mov
stos
ja
fisubl
inc
dec
fiadds
cli
jb
mull
and
mov
and
xchg
mov
adc
jg
xor
aaa
test
addr16
adc
mov
lea
adc
aaa
dec
mov
xor
paddb
out
sbb
lock
adc
test
jmp
popa
pop
jecxz
lods
out
jl
cli
jne
js
push
in
pop
lds
or
mov
movsl
mov
or
clc
push
pusha
jg
cld
and
inc
inc
and
inc
les
xchg
sbbb
adc
xor
mov
xchg
jp
fadd
inc
fdivr
pop
mov
call
or
cmp
test
testl
lret
and
push
jg
mov
push
cltd
push
xor
xchg
leave
push
test
jmp
scas
jecxz
add
inc
mov
push
adc
fbstp
bound
stos
lds
flds
push
aam
cld
cmp
or
adc
adc
sub
es
fbstp
lret
pop
sbb
je
mov
dec
stos
adc
mov
leave
adc
mov
mov
dec
pop
sub
loop
fisubrs
daa
repnz
ret
xchg
jg
cld
and
push
lods
mov
mov
sti
jge
dec
fldl
push
ffree
mov
stos
dec
cli
adc
shlb
mov
iret
mov
loopne
loopne
mov
adc
cmp
clc
xchg
push
jge
sub
xor
scas
or
out
mov
fsts
pop
imul
sahf
pop
or
ficomps
aad
cmpsl
jbe
out
mov
icebp
sub
pop
cmc
xchg
into
sbb
mov
cmp
push
sbb
mov
pop
xchg
adc
push
sti
push
sub
xchg
add
mov
outsl
xchg
in
inc
mov
cmp
popa
ret
arpl
inc
stos
dec
xchg
pop
xor
push
push
sbb
jo
or
lock
mov
sub
scas
imul
xor
dec
sub
mov
pop
jp
dec
inc
sbb
or
imul
je
mov
or
add
sarb
enter
mov
repz
pop
add
cmc
pop
stos
addr16
push
pop
rcrl
fsubs
jmp
lahf
xor
fcomps
mov
xor
jnp
push
fadds
xchg
cmp
out
loope
icebp
stos
loopne
loop
cmpsb
subl
in
in
jmp
test
dec
mov
cmc
sbb
ljmp
ret
and
insl
mov
xor
aad
push
dec
enter
pop
les
xchg
stos
cltd
jp
and
inc
cmp
js
lea
adc
std
inc
dec
mov
or
jecxz
rcll
stc
sahf
mov
outsl
xchg
inc
in
out
aad
dec
fsts
cltd
add
rcl
xor
pop
insl
pop
mov
push
jne
push
aaa
xor
xchg
push
sbb
cmp
or
xor
cmp
jmp
pusha
mov
pop
xor
cmc
imul
fdiv
mov
enter
xor
icebp
inc
clc
repnz
cmp
insl
sbb
in
inc
mov
pop
mov
mov
dec
cmp
lret
clc
cmp
dec
dec
jb
pop
in
in
cmpsb
test
out
push
xor
in
mov
fucomip
and
lret
lret
iret
inc
push
cmpsb
push
push
pop
adc
mov
les
xor
or
jae
aaa
out
jns
and
iret
dec
mov
in
cmpsl
sub
inc
push
test
xchg
mov
test
ja
inc
push
loopne
lret
pusha
sti
in
cmc
fwait
and
shl
and
push
stc
out
cmpsl
xchg
lods
mov
sub
or
adc
sub
xchg
clc
mov
lock
mov
idiv
repnz
repnz
cmc
inc
ljmp
int3
mov
test
das
lods
mov
mov
lahf
test
mov
iret
nop
gs
cltd
mov
push
xlat
xchg
mov
icebp
outsl
sahf
dec
or
gs
mov
out
fimuls
jns
cltd
mov
dec
lret
cli
jb
cld
dec
push
xchg
sbb
jmp
jne
or
gs
movsb
add
arpl
push
jnp
repz
outsb
inc
pushf
fadd
mov
jg
lods
in
stos
lret
or
popf
out
icebp
mov
adc
fbstp
jmp
dec
push
int
int
cmp
lods
jmp
jo
jecxz
movsl
cmpb
xor
sub
ret
xchg
test
andl
mov
arpl
cmp
xchg
adc
pop
jmp
push
dec
jecxz
sub
daa
enter
aam
adc
add
pop
jns
xor
pop
loopne
jo
pushf
sahf
inc
cmpl
or
adc
mov
jmp
inc
dec
push
push
test
cmpsl
cld
inc
mov
cmp
and
push
shll
stos
sbbl
sti
pop
inc
xor
das
xchg
movsb
push
in
xor
movsb
cmp
rorb
sar
push
mov
adc
inc
shrb
push
dec
dec
pop
mov
bound
dec
filds
adc
aad
mov
seto
loopne
push
je
mov
jns
movsb
inc
adc
sub
repz
xchg
lcall
mov
daa
inc
mov
or
inc
pop
and
sar
xor
pop
mov
iret
add
cmp
xchg
call
xchg
pop
sub
leavew
lahf
sbb
xchg
fdivrs
mov
pop
mulb
mov
std
push
mov
xor
out
sbb
or
sahf
jecxz
jecxz
cmpsl
add
addl
leave
or
pop
outsl
xchg
test
mov
mov
mov
dec
cmpl
test
mov
xchg
push
ss
lods
push
scas
notl
pop
jp
repz
lret
dec
pop
outsb
push
and
xor
push
mov
inc
sub
adcl
mov
shrb
ret
scas
rorb
push
movsb
icebp
adc
nop
sbb
shrb
mov
fidivrs
push
cmpsb
xor
adc
out
adc
fs
jo
fdivp
cmc
sub
add
jno
repnz
scas
das
pop
enter
inc
jecxz
std
lcall
cmp
fstpl
sub
cmpsb
fstpl
sahf
mov
cmc
push
adc
mov
jbe
cmp
or
cwtl
inc
aaa
imull
ljmp
loope
adc
inc
lods
mov
inc
in
cltd
fldt
fs
pop
adc
and
xor
sub
and
pop
mov
jg
adc
mov
jp
faddl
js
pop
inc
insb
dec
or
nop
or
sahf
int
mov
sahf
xor
out
dec
xorb
mov
sub
push
decb
sub
lret
mov
loop
add
push
hlt
and
mov
ss
mov
shlb
xchg
cmpsb
icebp
cmc
mov
fisubs
cmp
xchg
out
pop
roll
cmp
repnz
mov
outsl
sti
mov
jg
loope
xor
loop
push
jmp
fmull
rcl
mov
ret
sahf
sub
in
adc
sbb
xchg
loop
fnstcw
pushf
sahf
dec
add
out
adc
pusha
dec
mov
sub
push
icebp
pop
cmp
push
nopl
push
and
mov
iret
jno
cmp
cwtl
xchg
cmpsl
femms
int
js
jge
imul
xchg
imul
shll
cs
or
sbb
mov
fmull
cmp
movzwl
xor
inc
sbb
pop
mov
daa
inc
iret
xchg
jbe
fwait
xchg
cmpl
stos
mov
imulb
dec
jecxz
pop
add
loope
ss
mov
xor
sbb
jne
inc
mov
aad
mov
push
scas
pop
test
jb
xor
xor
push
cmp
cmp
movsl
jecxz
xorl
in
out
loop
fisttpll
jecxz
dec
shll
ja
xor
aas
inc
xlat
adcb
xchg
mov
fdivrs
sahf
xor
scas
aaa
pop
mov
flds
dec
mov
ss
or
lock
repz
pop
shll
and
test
into
daa
xor
mov
mov
scas
negl
test
mov
notb
iret
mov
jne,pn
xor
push
xchg
jno
xchg
fmuls
mov
insb
jg
shlb
jmp
pop
push
ss
shll
mov
int3
xchg
and
mov
xor
or
ror
xchg
mov
xchg
lret
inc
dec
jg
inc
push
sub
mov
std
xlat
inc
arpl
add
mov
into
and
xchg
lret
jbe
test
rcrl
inc
jp
xchg
sub
dec
sub
push
in
icebp
out
adc
cmc
lea
sarl
mov
push
push
jns
lock
out
sbb
enter
sub
leave
out
xchg
stos
push
hlt
dec
je
push
inc
push
into
adc
or
pop
adc
into
repnz
add
inc
push
cmp
or
testb
pop
ret
adc
jno
or
mov
movsl
mov
sahf
jecxz
pop
leave
loopne
sub
into
mov
add
rdtsc
ficompl
aam
dec
dec
cltd
fldpi
xchg
sarl
inc
sub
repnz
das
cmp
es
mov
decb
call
aaa
das
push
sbb
jns
out
repz
pop
mov
jle
add
xor
sub
pop
int3
ds
push
pop
add
xor
movsl
jg
xor
adc
in
cltd
xor
cmpsl
dec
inc
dec
pop
idivl
pop
xor
mov
add
repz
out
in
jmp
imul
pop
xchg
and
mov
aam
cs
rorb
cli
in
or
stc
add
insb
lcall
lcall
lods
jb
mov
js
lock
lods
push
xor
mov
mov
and
push
out
test
sbbb
and
lcall
pop
adc
jae
or
mov
lahf
xor
nop
fsubrl
jle
push
ljmp
dec
or
mov
jecxz
je
pop
add
sbb
push
int3
or
mov
loop
lds
mov
in
push
mov
dec
ror
movsl
lds
mov
lcall
bnd
adc
in
mov
pop
mov
xor
scas
test
and
stos
mov
popa
fidivl
or
or
or
cmp
mov
lock
idivb
mov
icebp
adc
out
mov
icebp
cmp
shlb
ret
ljmp
cmp
jg
push
dec
pop
jmp
addr16
xor
dec
or
add
rcl
adc
call
adc
ss
scas
js
xchg
dec
out
jecxz
icebp
add
jp
xchg
lahf
push
lea
sub
sti
push
sub
xor
or
insb
mov
lock
stc
pop
inc
fcmove
mov
push
aas
add
cli
cli
xor
shll
jg
rcll
sub
movsb
leave
jns
subb
jns
add
das
pop
adc
inc
lret
cmp
fs
xor
xchg
mov
add
subb
ror
push
mull
or
nop
enter
imul
pop
cmp
xchg
sub
test
mov
push
sbb
or
out
ret
mov
in
sbb
dec
lret
and
jmp
lahf
xor
pop
or
call
sbb
into
pop
hlt
add
xchg
out
ret
pop
sbb
jo
sahf
xchg
fsub
xor
push
mov
pusha
mov
hlt
adc
mov
arpl
xor
cld
cmp
cmc
sub
dec
add
decl
hlt
paddsb
and
fisttps
inc
fistps
iret
stc
xchg
mov
mov
movsl
cmpsb
fistpl
xor
icebp
cmp
mov
in
pop
dec
imul
and
stos
outsb
xchg
push
mov
sub
lock
jg
int3
push
in
scas
push
pop
faddl
xor
xchg
outsb
or
xor
das
xor
add
pop
test
push
push
xchg
pop
out
adc
mov
xchg
add
fwait
lcall
pop
repnz
xchg
mov
pop
dec
dec
push
xor
icebp
rcrl
cmp
in
sbb
mov
push
xchg
mov
or
lcall
in
popa
jns
or
loopne,pt
mov
mov
test
jmp
rcrb
cmp
in
div
inc
cmpsl
xor
ret
jnp
addl
shrb
lahf
pusha
test
add
pop
sub
adc
into
sbb
add
xor
stos
lods
sub
not
insl
mov
sub
jge
sub
fsubp
shr
or
movsl
fildll
and
xchg
icebp
cmp
icebp
das
mov
rcll
cmpsl
add
sub
subb
adc
cmp
inc
jl
xchg
test
incl
mov
lds
and
rolb
jb
dec
mov
and
out
enter
jnp
push
repz
sub
mov
frstor
mov
es
pushf
push
fisubs
lods
xchg
pop
mov
and
cmp
add
aas
push
jnp
cmpsl
dec
push
jae
jp
mov
xchg
or
xlat
aas
insl
movsl
sub
mov
sbb
repz
rcl
cmp
subl
imul
adc
sub
mov
push
das
jge
xchg
jmp
addb
jg
pop
leave
xchg
lahf
out
je
adc
ds
and
and
js
ljmp
loope
mov
cmp
lods
push
subl
inc
push
fistps
lcall
pop
sbb
hlt
jne
lret
fisubs
pop
arpl
mov
dec
sub
push
jmp
je
ret
adc
and
lds
xchg
sub
fadds
pop
cmp
mov
jge
and
cmc
out
out
or
in
inc
lods
push
push
cmpsb
mov
push
iret
or
out
mov
dec
sub
or
cmp
dec
mov
mov
xchg
mov
xor
das
in
mov
mov
fs
mov
clc
adc
rclb
and
jp
push
fisubrs
mov
inc
rcr
dec
push
add
stos
ret
out
fbld
push
jmp
mov
mov
int3
cmp
ljmp
xor
cmp
out
jp,pt
push
cmc
jne
xchg
jl
jnp
je
outsb
or
sti
shl
aam
jno
xchg
nop
mov
mov
add
stos
sub
stc
hlt
xor
xor
mov
imul
pop
call
add
jno
xchg
ret
and
lret
sti
cmpb
xchg
sbb
pop
and
popa
gs
pop
js
test
sti
out
inc
lods
dec
jnp
lods
xchg
sti
pop
cmp
adc
add
and
lock
inc
xchg
bound
inc
cmp
dec
dec
mov
out
loopne
cmp
fidivrl
fildl
inc
jb
push
or
in
dec
jmp
push
shlb
cwtl
xchg
lods
and
das
add
nop
cmp
pop
xchg
arpl
popf
sahf
sbb
cld
mov
adc
or
pop
or
dec
fwait
xchg
sbb
mov
or
roll
out
das
sar
inc
fdivs
outsl
xchg
pop
fistpll
add
pop
sahf
push
fs
mov
inc
popa
sub
pop
outsl
dec
and
test
push
jo
cmp
ljmp
xchg
xchg
test
mov
xor
scas
in
mov
rolb
add
sub
xor
pop
clc
in
pop
adc
xchg
test
mov
mov
jae
movsl
aaa
mov
out
cmpsl
xchg
fildll
inc
jns
xor
test
loopne
divb
push
or
cli
out
inc
xchg
insb
inc
cwtl
icebp
fcoms
enter
fsubl
stos
sbb
out
xchg
fwait
push
adc
cmp
icebp
das
cmpsb
mov
and
sub
lds
pop
out
fdivr
and
mov
push
xor
hlt
pop
mov
repnz
xchg
push
adc
jmp
lock
sbb
sub
pop
jp
sbb
mov
out
notb
cmp
inc
sbb
pop
inc
add
pushf
adc
or
dec
orl
jns
cmp
lea
fidivs
daa
sub
rcrl
mov
lea
inc
jb
fldcw
xchg
sbb
sub
adc
mov
jge
adc
cwtl
pop
mov
insl
filds
shrl
pop
dec
lcall
inc
dec
jp
cwtl
jge
pop
inc
mov
popf
sti
mov
push
cld
sbb
cmp
xor
xchg
std
fwait
and
pop
or
and
adc
ficoml
push
cmp
loopne
dec
adc
lcall
push
aam
pop
fistpl
scas
push
sbb
xor
leave
int
mov
cmp
push
jle
push
jecxz
lfs
jbe
sub
scas
jecxz
jns
adc
ss
jo
dec
sub
dec
add
cwtl
dec
pushf
movsb
adc
pop
sub
mov
dec
sub
fs
mov
cli
pop
pop
loopne
imul
and
fnsave
cmp
xchg
rcr
out
mov
test
in
stc
xlat
xchg
cli
outsl
aaa
lret
data16
xchg
mov
jl
adc
jp
call
addr16
sub
mov
jg
fwait
inc
int3
inc
scas
add
out
pop
mov
inc
sub
mov
icebp
add
cltd
xor
add
sbb
ja
inc
and
sub
xor
loope
pusha
fdivrl
and
dec
push
icebp
adc
jp
xchg
or
xor
xchg
dec
sub
pop
mov
and
jg
out
ds
leave
lock
je
adc
and
insb
iret
cmp
mov
xchg
into
mov
and
push
and
jl
test
jns
adc
cmpsb
pop
imull
lods
xlat
xlat
pop
xchg
sub
test
mov
test
cmp
je
cmp
rcll
mov
je
xchg
loopne
xchg
xor
rol
int3
pop
mov
jns
xor
imull
xchg
fst
hlt
lods
lods
movsl
data16
aaa
std
jno
inc
lock
repnz
lock
addb
in
push
mov
xchg
pop
push
xchg
shll
int3
sbb
xchg
mov
mov
add
xchg
xchg
push
inc
pop
add
clc
insb
push
aaa
and
out
int
aam
lret
ret
push
inc
jle
pushl
cmp
cltd
mov
or
popf
stc
cmp
sbb
orl
mov
ret
add
mov
mov
adc
testl
jb
lock
int3
jp
sbbl
test
cmp
mov
jmp
roll
or
out
pop
mov
mov
xchg
imul
mov
or
sbb
mov
flds
rorb
or
rcrl
push
add
mov
jmp
mov
in
pop
fbstp
or
ja
dec
cmc
adc
es
lods
push
adcl
cmpsl
popa
mov
insl
stos
mov
insb
jmp
clc
ljmp
imul
mov
lcall
xchg
xchg
insb
add
cltd
mov
aad
adc
cmp
arpl
test
aad
outsl
inc
cmpl
xlat
inc
fildl
or
add
dec
cmp
in
xor
pop
aaa
mov
jge
xor
sti
stos
rcr
lea
popa
cmp
lret
mov
cld
cmp
sub
mov
mov
repnz
lcall
sbb
and
mov
xchg
inc
repz
fisttpll
adcb
jb
lret
jge
push
mov
xor
stc
arpl
lea
add
in
pop
inc
mov
push
cld
movb
es
or
hlt
fwait
subb
aas
loope
mov
fs
ret
sub
fcmovnu
pop
mov
in
fisubrs
pop
negl
insb
mov
push
clc
lret
into
cmp
insl
or
inc
test
adc
inc
pop
aam
sub
lods
testl
mov
xchg
mov
inc
ret
adc
xchg
inc
into
and
cmp
and
xorl
dec
or
frndint
ret
or
out
mov
ljmp
dec
cmpsl
nop
or
pushfw
pop
pop
cltd
jo
cltd
cmc
into
imul
dec
sbb
vpsrlq
add
inc
lret
jae
ds
ljmp
in
cmp
mov
mov
loop
jo
mov
push
fnstenv
fdivrs
subl
adc
mov
jg
ss
jae
mov
mov
hlt
push
mov
sub
loop
mov
adc
cmpsb
cltd
cmp
call
push
adc
jle
sub
mov
ja
mov
ja
aas
outsb
sub
push
imul
mov
add
out
add
mov
call
js
jg
int3
or
xchg
pushf
push
mov
cltd
rcrb
or
movsl
mov
leave
sbb
push
daa
jmp
clc
fistpl
jg
jns
mov
sar
mulb
cwtl
dec
add
push
sbb
pushf
xor
test
push
fdivrp
arpl
xchg
int
cmovno
xchg
ss
mov
dec
fnsave
sub
negl
pushf
push
add
fistpl
and
cmp
push
push
inc
cmpb
push
xchg
std
fwait
mov
fcomip
and
int
icebp
into
loope
arpl
gs
roll
sub
fsubs
cli
mov
jns
outsb
hlt
cmp
fs
daa
jns
xor
sti
in
adc
jno
cltd
mov
adc
out
dec
pop
or
pop
push
outsb
sahf
out
add
movsl
sbb
enter
test
nop
mov
sub
or
or
inc
jns
das
add
sub
dec
insl
pop
jge
fwait
iret
inc
enter
adc
jp
sub
sbb
push
mov
mov
stos
or
jp
mov
daa
xchg
stos
jno
bound
xchg
sahf
shll
clc
ficoms
xor
push
cmpsl
xchg
loopne
sbbl
pop
xor
bound
xlat
cmp
cli
jg
rorl
mov
out
pop
jp
paddd
push
mov
into
scas
dec
inc
cs
movsl
ret
add
fstps
mov
aam
and
jnp
pop
loopne
push
js
rcrb
fldl
lahf
mov
frstor
or
mov
or
out
outsl
jb
mov
and
ja
sbb
mov
rcll
aaa
dec
lret
stos
xchg
xlat
sbb
xchg
dec
and
mov
cltd
mov
jg
fwait
popa
xchg
mov
aaa
ds
int3
or
jo
cmp
jns
es
mov
sbb
sahf
ja
xor
dec
scas
mov
inc
add
sbb
je
or
or
loope
pop
js
repnz
ss
subl
jae
int
ss
cmpsl
mov
mov
dec
push
cld
mov
fildl
mov
cmpsb
fiaddl
mov
ljmp
sub
sbb
pop
xchg
push
xchg
ret
cmp
ret
sbb
cmpsb
idiv
fwait
xor
cmp
xchg
jae
inc
popf
decl
aam
outsb
sbb
jb
add
add
cs
cmp
pop
xchg
mov
arpl
sarb
mov
xchg
nop
imul
xchg
jp
jmp
jecxz
leave
out
out
das
push
push
cmpsb
iret
iret
adc
mov
repz
mov
aas
das
hlt
movsb
popf
push
add
mov
movsl
shll
pop
das
add
pop
xchg
jmp
sahf
sub
and
mov
push
xor
roll
inc
cwtl
sbb
rorl
jb
aad
mov
xor
adc
jnp
cli
or
fcoml
cld
scas
outsl
rorl
xchg
sub
push
or
adc
iret
mov
or
xor
gs
mov
sub
and
dec
mov
loope
fisubrs
xchg
pop
dec
pusha
test
je
cmpsb
mov
jmp
pop
jl
xor
fmulp
sub
cmpsl
adc
xor
push
mov
rolb
clc
loop
add
xchg
mov
inc
das
mov
adc
xchg
rolb
xchg
mov
movsl
insb
pop
pushf
call
lods
aad
push
cmp
push
out
sbb
cld
sbb
add
enter
std
add
jne
stc
push
dec
push
icebp
stos
int3
cs
fstps
push
jmp
xchg
int
jge
sbb
sarb
and
push
inc
aaa
jns
xchg
or
cld
xorl
aad
and
pushf
out
lret
mov
aas
mov
xchg
mov
jecxz
jno
xchg
insl
mov
je
xchg
or
scas
cmp
sbb
push
gs
sub
inc
push
iret
pop
out
fs
repnz
fmuls
bnd
movsl
push
xchg
jnp
test
fstl
sbb
push
fcompl
jl
sbb
lret
andb
xchg
and
sti
test
sbb
push
mov
lret
jnp
mov
push
mov
sub
into
lock
inc
mov
dec
loope
pop
nop
mov
jp
adc
or
xchg
int3
push
movsb
addr16
sub
sbb
inc
xlat
mov
cmp
push
rolb
insl
cli
je
push
adc
int3
popa
or
in
mov
jg
xchg
lret
dec
stc
pop
inc
les
gs
hlt
inc
dec
imul
push
add
or
pop
fidivl
mov
cmp
cmp
shrb
repz
and
mov
out
mov
jnp
jnp
inc
xor
loop
sub
cld
decb
enter
sub
adc
dec
loopne
xchg
pop
push
xor
cmp
jle
sub
jmp
mov
mov
lret
mov
ud1
ret
popf
test
out
inc
popf
xchg
jno
jp
fcomps
sbb
jp
stos
mov
inc
mov
or
xchg
jecxz
jge
jns
repnz
insl
or
mov
notb
adc
idiv
adc
lock
cmp
int
popa
aam
rclb
sbb
lret
sbb
and
out
lods
jmp
inc
mov
or
das
xor
fs
xchg
movsb
and
out
jecxz
lods
mov
jp
xor
dec
ss
rol
and
gs
das
aam
inc
adc
out
cmp
fs
inc
mov
sahf
fcmovnbe
push
jo
test
ss
lods
pop
popa
jg
push
insb
pop
adcl
dec
add
xor
mov
unpckhps
adc
rol
femms
fldt
sbb
ror
cld
repz
inc
xchg
mov
push
xor
inc
lret
out
cmpl
lcall
mov
call
sub
cmp
insb
pop
outsb
test
clc
and
mov
int3
xorl
mov
sbb
pushf
add
and
sbb
jp
push
xor
push
dec
pop
push
pop
scas
int3
fadds
dec
and
mov
cmp
xchg
mov
fcoml
mov
push
pop
scas
cmpsb
cltd
xor
or
lock
push
outsl
mov
out
test
movsb
jno
cld
mov
push
loope
push
je
adc
cltd
cmc
aam
mov
push
mov
and
stos
push
pop
dec
lea
sub
xchg
add
cmp
cwtl
mov
out
xchg
int3
jmp
cmp
fcmovnb
imul
insl
sbb
inc
nop
test
icebp
test
stc
pop
in
sbb
sbb
push
dec
rcll
cmp
imul
cld
ljmp
adc
push
hlt
mov
testl
fisttpll
iret
imul
lret
pop
mov
cmp
rcrb
stos
push
ret
test
ss
jp
push
out
pop
repnz
cli
mov
sarl
shlb
push
fidivrs
or
or
lds
pop
and
push
add
or
sbb
lret
mov
xor
mov
dec
add
ds
cmc
pop
jg
lcall
aas
xor
adc
dec
loopne
bound
adcb
inc
in
dec
jge
mov
loopne
stc
popa
xor
jb
fists
aad
leave
imul
lcall
js
fstl
sub
lea
mov
testb
or
arpl
enter
mov
cmp
lea
loope
fstl
ret
movsb
movsl
imul
xchg
sar
dec
cmpsb
mov
sti
push
push
jbe
mov
pop
sbb
mov
mov
sub
dec
loopne
jl
sub
rolb
push
lahf
add
adc
push
pop
lahf
dec
pop
sub
xchg
sbb
ljmp
push
in
fdivrs
add
scas
scas
cltd
es
jns
rclb
and
cltd
ret
imul
sbb
xchg
pop
loope
jg
cmp
rorl
bnd
fwait
push
cmp
fadds
and
sub
adc
bound
cli
int
subb
adcb
pop
fistpll
and
cmp
or
cli
lea
push
add
mov
outsb
das
dec
add
jae
mov
push
loop
rcr
iret
jmp
in
mov
loope
enter
mov
rcll
inc
test
sub
into
testl
mov
cmc
fsubrs
ret
cmc
ss
pushf
iret
sbb
out
fcompl
mov
or
pop
aam
pop
jl
or
dec
mov
gs
mov
std
inc
pop
out
div
cmc
inc
sahf
mov
in
addr16
pop
inc
dec
mov
outsl
scas
ffreep
push
mov
roll
es
mov
dec
gs
fdivl
out
aaa
cmp
insl
loope
pop
out
call
dec
mov
insb
mov
std
dec
ficompl
inc
add
mov
cmp
mov
mov
mov
jno
or
sub
ret
xor
mov
or
mov
call
scas
fucomip
sbb
xor
mov
scas
insl
mov
add
dec
arpl
mov
aaa
jecxz
pop
push
xor
push
dec
sbb
pop
push
push
pop
rolb
mov
lea
xchg
fidivl
icebp
inc
lods
jnp
leave
mov
test
ljmp
in
imulb
fnsave
pop
mov
cmp
inc
pusha
movsb
aam
jo
cwtl
stc
jle
push
stos
stc
imul
inc
stos
mov
inc
sahf
fnsave
push
mov
aaa
inc
jp
xchg
or
icebp
xor
lret
dec
test
push
insl
mov
sar
inc
mov
and
movb
test
jno
mov
add
movsb
imul
or
daa
out
sbb
out
cmp
jno
ror
movsl
cld
ret
ljmp
sarl
sarl
dec
in
mov
cmp
jg
jg
xor
mov
nop
in
aas
dec
inc
dec
imul
pop
sahf
movsl
lret
fnstenv
xchg
inc
rcll
ret
cld
jecxz
pop
dec
cli
in
sbb
and
outsb
icebp
insl
mov
ja
movsl
frstor
incl
andps
cmp
sub
imul
add
xchg
ret
or
xchg
jo
jg
in
pushl
jl
mov
inc
aam
mov
or
push
push
divl
ja
dec
das
rcll
adc
jg
test
incl
clc
dec
push
rcrl
aam
xchg
cld
jg
ds
add
out
xlat
dec
cld
divl
inc
arpl
add
inc
and
push
cmc
jno
in
pushf
ja
add
mov
jle
push
cmpsb
pusha
std
mov
imul
cmpl
test
inc
or
lds
sti
lock
sub
pand
adcb
popa
jo
cs
stos
xorb
sbb
shl
insb
roll
sbb
xlat
stos
jae
push
sub
call
ljmp
xchg
xchg
mov
pop
mov
mov
enter
mov
mov
movsl
aad
jne
or
scas
add
adc
dec
pop
xor
enter
out
outsb
mov
shrb
ja
pop
mov
dec
int3
in
rcr
int3
or
xchg
add
mov
sbb
cld
jmp
dec
ljmp
push
xchg
inc
int
idivb
fisttps
push
mov
cmpsb
mov
in
loopne
pop
or
std
sbb
lock
push
aad
jo
or
jl
out
outsb
push
xor
addl
mov
btr
pop
fwait
int3
sub
out
add
push
sbb
pushf
jb
add
mov
pop
sub
sbb
and
add
push
xor
push
sub
popf
mov
ds
ffree
sbb
lahf
lahf
rcr
je
pop
or
sarb
aad
outsw
dec
clc
pop
inc
lahf
jle
stc
mov
mov
inc
int3
leave
sti
push
fsubl
xorps
dec
pop
mov
jbe
jg
nop
fs
pop
sbb
xchg
sahf
mov
mov
adc
test
cmp
push
push
mov
addr16
push
enter
pop
mov
adc
cwtl
sbb
in
lods
jo
out
test
int3
test
les
and
fmuls
sub
shrl
imul
xor
mov
aam
add
sarl
and
scas
dec
cs
out
shrl
jbe
and
outsb
pushf
aas
lock
inc
push
and
push
cltd
call
adc
lock
sbb
loop
fstl
sbb
push
ss
mov
cmpsb
ficomps
imul
lret
dec
pop
insb
dec
sarl
jge
mov
ja
loop
shrl
pop
dec
inc
xor
cmp
jne
jnp,pt
push
inc
jno
or
xchg
add
push
idivb
lret
pop
filds
xchg
js
fsubl
fisttps
push
ss
xchg
ja
rcrl
out
pop
scas
out
jl
fiaddl
loopne
je
push
aaa
nop
loope
rcll
scas
cmp
in
stc
xchg
adcl
test
clc
out
in
cwtl
push
mov
mov
test
push
cmp
lds
lods
inc
mov
loopne
cmp
inc
rorl
cmp
aam
jecxz
sub
jp
dec
xor
mov
mov
mov
mov
jb
shll
mov
pop
mov
out
xchg
idivl
adc
or
add
jno
mov
icebp
dec
xlat
arpl
mov
mov
in
pop
mov
orl
mov
div
call
cmc
add
imul
sub
movsl
inc
jmp
cmpsb
cmpsb
mov
sbb
jno
in
loopne
pop
pop
add
mov
adc
and
dec
sbb
test
icebp
mov
shll
imul
out
or
movsl
pop
inc
les
jb
popa
jmp
xlat
lock
jae
add
mov
xor
ret
add
jmp
mov
das
mov
jns
jns
subl
jns
add
wbinvd
rcrb
or
rcrb
xor
cmp
pop
pop
mov
mov
and
mov
push
adc
mov
sbb
mov
cmpsb
sbb
rclb
jns
xorb
outsb
or
inc
and
loope
repz
mov
into
fldenv
jmp
push
out
ss
jg
mov
jecxz
xchg
bound
push
pop
sti
push
test
jbe
lahf
orl
jnp
shrl
push
in
and
mov
lea
call
andb
call
fwait
inc
ret
mov
inc
push
pop
pop
sub
frstor
mul
ds
jle
bound
stc
rorl
jle
repnz
mov
xchg
cli
fs
jp
repnz
jmp
ja
mov
insb
xor
shll
in
sub
rcr
test
fnstsw
and
jbe
push
int3
inc
dec
jecxz
inc
push
dec
imul
enter
int3
jle
xor
es
aaa
gs
sbb
adc
push
testl
mov
loope
pop
les
les
arpl
xchg
adc
jle
pop
lea
mov
push
aaa
lea
cmpl
mov
cmp
xor
mov
and
add
xor
sbb
cld
or
jno
popa
or
sbb
inc
hlt
jp
xchg
fstp
popa
or
inc
dec
or
jb
outsb
xlat
in
repnz
pop
push
int3
int
adc
xchg
mov
add
pop
jge
inc
rclb
sub
insl
adc
mov
data16
stos
mov
dec
rcrb
rcrb
fistl
push
insb
or
jp
ret
pop
mov
bound
pop
push
jp
cmp
je
add
les
xchg
xor
in
mov
lret
push
inc
add
test
sti
out
jne
fldt
pop
mov
jb
sahf
and
jne
sbb
mov
popa
insl
jecxz
sbb
dec
push
stc
ljmp
jae
mov
ljmp
mov
icebp
sbb
es
pop
cmc
daa
adc
out
ds
lcall
enter
call
jl
mov
xlat
xchg
mov
and
cli
xor
add
cltd
jno
cmpsb
and
ret
int
cmp
xor
scas
push
stc
dec
xor
into
sbb
inc
adc
mov
sub
dec
sarl
fbld
out
repz
inc
das
and
cltd
outsb
rcrb
cli
pop
in
xchg
and
cmp
mov
icebp
shufps
fs
mov
arpl
inc
fimull
adc
test
or
and
clc
stos
shlb
int3
push
jbe
imul
fldt
in
lods
jae
add
ljmp
outsl
sbb
je
enter
xchg
pushf
push
into
movsb
fists
scas
andb
push
pop
push
fildll
xor
cmp
push
adc
add
faddl
mov
mov
mov
fistps
pop
and
jl
cmp
xchg
xor
pop
je
adc
rep
sahf
inc
pop
outsb
mov
push
out
pop
adc
ja
repz
popaw
insl
pop
cld
fimuls
jb
push
popf
mov
or
sub
mov
fcmovu
xor
mov
inc
shll
aaa
cmp
or
push
or
xchg
sbb
mov
rcpps
fdivl
fs
int3
movsb
add
push
fs
pop
cmp
dec
or
jb
jo
insb
push
xchg
xor
ds
repz
cmp
pop
push
scas
pop
std
push
xchg
sub
repnz
test
push
or
xlat
xor
rcrl
ss
inc
ss
insb
stc
pop
sbb
test
movsl
sub
fisubs
pop
mov
jns
notl
pushf
xchg
mov
pop
in
mov
cmpsl
jle
clc
aas
mulb
mov
fsts
add
inc
xchg
pop
and
sbb
or
lret
loop
mov
inc
xchg
ja
bound
or
add
clc
push
xorl
js
sahf
xchg
mov
cmp
fldenv
pop
pop
call
adc
mov
addr16
outsb
cmp
in
push
cmp
xorb
shlb
mov
inc
mov
enter
loope
cmp
sub
cld
sbb
inc
insb
sub
repnz
repz
or
mov
aam
ret
imul
push
or
shrl
xor
pop
fimuls
mov
popf
outsb
jge
ljmp
push
xor
pop
aas
jle
fbld
stc
pop
arpl
jae
jb
pop
mov
cmp
popf
orb
and
lret
dec
xchg
push
mov
out
mov
pop
mov
dec
inc
in
bound
repnz
or
jo
sbb
push
std
insl
shll
dec
fcmove
lea
imul
push
mov
sub
icebp
outsl
les
cmpsb
enter
std
pop
add
jle
push
xchg
mov
insl
imul
lds
sarb
dec
mov
call
push
ret
out
sub
push
lret
int3
or
xor
scas
leave
jo
loop
push
call
lcall
out
das
insl
pop
mov
xlat
mov
cmp
add
mov
mov
cmpsb
vfmsub231ss
stos
cmp
xor
clc
sub
aaa
mov
jmp
xchg
aaa
ret
scas
ja
femms
insl
push
sahf
jmp
adc
xchg
adc
and
or
dec
push
cmp
push
sbb
mov
fs
cmp
dec
xor
fbstp
dec
cli
pop
mov
icebp
out
or
sahf
das
xor
xchg
mov
mov
inc
xor
push
xchg
inc
or
dec
in
scas
inc
ret
lds
rcl
cmpl
loope
or
movsb
push
adc
or
pcmpeqw
pop
out
sub
std
mov
pop
ret
xor
and
in
add
jb
ljmp
mov
jno
pop
movsl
pop
add
shrl
dec
jle
in
repz
mov
mov
std
push
enter
mov
pop
mov
hlt
or
dec
mov
mov
cs
pop
dec
mov
adc
mov
je
jecxz
movb
sti
inc
rclb
mov
mov
std
cld
push
fsub
icebp
mov
out
nop
imul
xchg
nop
xor
xor
mov
cmc
outsb
shlb
pop
xor
jl
test
fwait
lock
pop
adc
mov
out
pop
jne
fcomps
aas
loope
cltd
cwtl
mov
pusha
std
push
jecxz
mov
xor
add
dec
dec
add
arpl
imul
cmpsl
jae
in
pushf
dec
xor
xchg
jecxz
movsb
mov
into
pop
cmc
xchg
jb
fs
scas
jbe
sbb
jge
test
pop
or
fsub
les
push
adc
aad
dec
push
pop
arpl
sbb
dec
int
mov
lea
mov
adc
enter
loopne
pushf
aam
shll
leave
lea
mov
mov
jp
stos
jle
jle
daa
cs
ja
lret
dec
and
mov
pop
ja
mov
paddsw
sub
sbb
pop
or
mov
jmp
sbbb
pop
xchg
adc
hlt
lods
push
inc
neg
pop
out
push
ss
stos
data16
lahf
aaa
adcb
outsb
aaa
and
and
lock
clc
or
aad
xorb
push
push
lds
scas
or
das
or
imul
mov
ret
loop
add
push
jp
fimuls
pop
mov
rcr
out
dec
jecxz
and
sahf
dec
xchg
and
push
mov
mov
fs
push
push
test
mov
push
lahf
push
mov
xchg
bound
jo
sti
pop
push
dec
mov
in
mov
xacquire
in
pop
sahf
sahf
out
gs
insb
xorl
xchg
data16
inc
shrb
jp
out
mov
dec
xchg
pop
jge
cmpsb
in
fildl
imul
and
or
and
push
test
lds
ss
sub
data16
or
add
cmp
mov
cmpsl
push
js
adc
loopne
loop
fs
lds
add
movsl
dec
push
subl
push
add
fidivrl
add
or
loope
outsb
push
jle
mov
xor
sbb
gs
sub
in
imul
scas
jg
in
mov
adc
mov
mov
fildl
dec
fsubs
pop
or
mov
push
aam
mulb
mov
pop
cli
gs
sub
lods
lds
fmuls
sub
push
sahf
dec
push
inc
je
adc
cmpsb
stos
in
es
aam
iret
lods
xchg
jge
adc
adcb
std
xor
mov
sbbb
popaw
movsb
stc
mov
cmpsb
pop
cs
pop
rcr
pop
push
mov
data16
cmp
imul
pop
int
push
dec
push
je
xchg
inc
lea
xchg
push
jp
loope
or
repnz
andb
rorl
call
sbb
outsb
dec
ljmp
rcrl
inc
mov
or
cmp
mov
fsubp
lahf
cltd
je
jns
sub
stos
popa
lret
fiadds
test
int
andb
stc
or
gs
mov
push
lds
and
in
inc
loope
add
shlb
mulb
or
test
mov
push
adc
xor
pop
add
and
xor
mov
push
int
mov
dec
xor
sbb
mov
out
pop
gs
fmull
mov
bnd
faddp
pop
loopne
aam
lds
dec
adc
mov
test
cli
mov
fdecstp
inc
pop
fidivrl
out
add
mov
jg
xchg
xchg
and
daa
mov
xorps
mov
sahf
jns
mov
fildll
xlat
xorb
js
imulb
cwtl
or
mov
bound
icebp
popf
inc
cld
cmpb
jne
insl
push
pusha
jecxz
sub
add
aad
call
add
mov
mov
btc
sahf
or
xchg
add
mov
roll
arpl
sub
xor
aas
sbb
movsl
xchg
fs
xchg
and
pop
adc
ret
mov
in
test
xor
and
icebp
test
sbb
lods
jg
pop
repnz
push
or
out
and
daa
sub
cmp
ds
movsl
cmp
add
movsb
mov
mov
pop
jnp
pop
test
dec
insl
add
hlt
mov
push
lock
pop
sub
aaa
fsubl
in
iret
ja
sti
xor
lock
pop
out
sub
clc
pop
icebp
jns
xchg
jle
mov
pop
xchg
div
pop
in
jne
psubb
test
sbb
xchg
jbe
dec
xor
jne
jmp
scas
mulb
adc
push
incl
decb
dec
and
out
mov
mov
cmp
lcall
xlat
mov
loop
xchg
in
inc
cwtl
mov
sub
ja
bound
inc
pop
inc
sub
mov
insb
xchg
aad
push
mov
fidivrs
mov
xchg
push
int
jb
mov
and
or
fists
sub
inc
pusha
and
add
jp
mov
out
fs
jnp
fiadds
xor
xchg
mov
mov
and
push
cmp
pushf
mov
fdivl
ljmp
dec
popf
dec
push
aas
adcl
mov
loopne
push
jle
clc
mov
fcomp
cmpsl
insl
mov
hlt
or
pop
aad
movsb
insb
shll
xchg
leave
arpl
dec
xchg
jle
lea
cmp
jg
push
mov
fmuls
mov
pop
cmpsb
stos
pop
jnp
ss
dec
cld
and
lcall
adc
repnz
fwait
into
fcoml
jns
fwait
sarb
das
or
cmp
lahf
adc
lds
out
add
dec
xlat
in
mov
push
jbe
hlt
xor
stc
pavgb
andl
andb
nop
pop
mov
ja
cs
arpl
mov
sbb
pushf
inc
mov
out
iret
mov
shrb
dec
pop
pop
and
jo
pushf
aaa
fstpl
xchg
scas
ror
and
push
sbb
inc
cld
dec
sar
and
sahf
jg
mov
loopne
stos
or
push
lock
mov
cmp
shll
rcl
cmpb
ja
jns
mov
add
int3
xchg
cmp
inc
shll
or
mov
shl
and
jo
stc
daa
lret
inc
daa
leave
xchg
mov
stos
fcoml
pusha
mov
sbb
mov
sbbl
stc
lret
mov
loop
ss
mov
adc
xor
mov
xor
fwait
sub
jmp
and
lds
lret
push
mov
sti
fcoms
mov
mov
nop
mov
and
stos
pop
int
mov
inc
mov
adc
ret
sbb
lcall
scas
adc
rol
mov
cmp
adc
inc
and
mov
jmp
adc
or
mov
pop
out
ja
xor
clc
aas
aaa
xchg
or
adc
or
pop
repz
push
out
test
movq
cwtl
loope
or
mov
ret
mov
xchg
inc
mov
fiaddl
inc
or
out
or
in
dec
hlt
xor
mov
add
fs
int3
iret
xchg
popa
adc
inc
popf
mov
jp
and
fidivrl
pop
xchg
loopne
cs
fstpt
clc
xor
pop
cmpsb
mov
popa
mov
mov
movsb
bound
mov
call
stos
jmp
sub
or
sub
mov
inc
nop
push
inc
sbb
mov
out
mov
jne
in
adc
js
repz
or
repnz
jo
lret
aad
and
jl
cmp
pop
fisttps
nop
ds
push
mov
ret
push
insb
stos
sub
xchg
in
loop
out
xchg
sub
dec
test
push
out
sub
sub
in
jmp
out
push
push
adc
xlat
mov
fistl
shll
or
stc
cs
int
lods
scas
jle
fwait
pusha
dec
addr16
mov
into
cwtl
repz
mov
add
push
data16
and
repz
in
push
jle
mov
adc
out
cmp
xchg
sub
es
jecxz
sbb
mov
xor
pop
push
jg
jl
into
outsl
loop
inc
hlt
mov
out
jns
stos
int
cmp
and
xchg
lods
aas
sub
pop
addr16
xchg
iret
mov
inc
insb
cmpsb
xchg
lock
dec
push
xchg
mov
lret
adcb
aaa
push
xor
sbb
enter
es
shl
and
push
mov
and
sbb
cmpsl
cld
popf
mov
rcrb
xchg
pop
shrb
push
std
mov
adc
pop
xchg
cmovge
arpl
cmpsb
test
or
xchg
mov
dec
popf
in
jbe
push
and
jg
in
mov
js
and
sbb
sbb
adc
pop
xchg
jbe
and
iret
xlat
mov
subl
xor
out
push
lahf
adc
adc
pop
inc
cmpb
xchg
scas
push
js
adc
sub
sub
decb
cmc
xorb
decb
std
pop
cmc
xor
pusha
jb
test
rcr
out
mov
mov
jl
or
mov
mov
push
loope
jecxz
cmpl
mov
fists
mov
jmp
xor
shll
scas
jb
cwtl
sub
dec
shrb
pop
int3
aam
mov
lods
sbb
dec
xor
lock
adc
cltd
xchg
add
nop
rcll
xchg
cli
add
cltd
mov
pop
and
push
cltd
jmp
adc
xchg
jg
out
gs
push
bound
xchg
mov
aad
and
loop
cmc
jle
sarb
scas
aam
fistpl
xchg
jo
and
dec
in
mov
jmp
std
and
into
mov
or
xchg
fwait
xchg
int3
orl
sbb
sbb
adc
or
inc
cmp
lods
out
sti
mov
movsb
or
loopne
mov
push
lcall
sti
sti
movsl
cmpsb
pop
xor
lcall
pop
andb
cmp
mov
cli
mov
mov
cmpl
dec
dec
in
loope
lods
sar
add
xor
loope
aam
lret
les
daa
sub
pop
gs
fwait
push
imul
mov
enter
push
fmull
cmpsb
push
lea
sbb
jne
add
mov
jns
ljmp
sub
xor
dec
xchg
les
stos
std
loopne
fcomps
fsubrl
int3
leave
sub
jp
xchg
fstpl
into
ret
lahf
rclb
pop
push
stos
addr16
into
inc
dec
dec
adc
in
xor
mov
inc
xchg
sbb
outsl
jp
inc
push
lock
in
push
enter
or
divb
sti
jecxz
push
mov
cmpsl
je
and
rolb
jbe
divb
cmpb
cmp
inc
push
ret
test
testl
pop
fsubs
pop
xor
xchg
and
mov
loope
lret
push
mov
sbb
sbb
movsl
mov
jo
ja
xchg
xor
sub
dec
push
sbb
cmp
sbb
pop
mov
lock
pushf
pop
sub
arpl
dec
in
xchg
loope
jnp
add
fstpt
mov
inc
add
fidivrl
rclb
push
js
or
lcall
arpl
outsl
loopne
movsb
pop
mov
or
fisubs
inc
sub
mov
inc
sahf
cmp
rclb
jnp
rep
idiv
jmp
pop
push
inc
mov
cwtl
xchg
mov
cli
push
arpl
in
inc
aad
mov
push
ja
filds
lcall
loop
cs
mov
pusha
push
sub
sbb
push
inc
xor
lret
mov
mov
aas
enter
mov
aam
decb
jl
add
roll
in
sbb
cli
ljmp
xchg
in
sbbb
stos
push
jae
dec
inc
test
add
sbb
mov
stc
xchg
adc
cmp
sub
add
movsl
or
hlt
xor
leave
cmp
jno
lahf
stc
lahf
inc
sbb
sbb
pop
shrb
xor
and
cltd
jnp
xor
bound
out
loop
loop
sbb
xor
bound
fs
rclb
push
add
out
stos
daa
inc
mov
data16
mov
aam
cmp
xchg
imul
nop
cwtl
in
jp
xor
sub
jg
cmp
ljmp
jl
test
sub
push
movsb
cmp
jg
xchg
xor
xchg
push
push
roll
in
je
jae
ss
push
pop
stc
rcrl
or
push
xorb
dec
mov
xchg
mov
out
cmp
inc
adc
or
pop
cltd
in
imulb
push
daa
divl
jl
sbbl
gs
into
xor
mov
push
adc
inc
xor
add
xchg
fnstcw
mov
ja
outsb
leave
inc
add
inc
cmp
mov
mov
xchg
jge
bound
imul
adcl
ja
add
mov
sahf
xchg
mov
out
sti
cmp
lcall
ja
xor
pop
jb
xlat
negl
mov
int
daa
sbb
cmc
in
rdmsr
xor
call
lods
fildl
mov
enter
cld
jecxz
mov
loope
test
sbb
loop
xchg
jnp
cltd
stos
or
xor
and
ret
les
jbe
adc
mov
clc
push
push
fcmovu
adc
xchg
and
mov
or
rcrb
cwtl
rorl
push
sbb
cli
xor
lea
mov
loopw
sbb
hlt
push
pop
call
push
pop
push
jp
mov
nop
inc
xchg
pop
movsb
or
mov
in
bts
adc
inc
push
pusha
pop
cmp
pusha
scas
push
lcall
adc
push
cmp
aad
pusha
mov
cmpsl
je
xchg
in
mov
xchg
addb
inc
jae
mov
cmp
iret
in
aad
pop
and
and
inc
push
cmpsb
dec
push
pop
xor
sbb
dec
push
sbb
mull
jb
roll
fs
stc
bound
out
jge
fmuls
pop
into
lahf
xchg
mov
xor
in
aad
add
or
out
leave
loope
mov
xor
jb
fistps
addr16
or
movsb
or
pop
fs
sub
loope
enter
mov
mov
movups
inc
jbe
mov
test
xchg
xchg
push
mov
ret
mov
orb
sbb
fisubrl
push
xchg
lcall
bound
cmp
cld
mov
xor
mov
push
insl
jge
out
dec
out
jnp
out
mov
sahf
push
loopne
out
or
add
icebp
and
les
test
leave
loop
or
call
incb
dec
adcl
es
cmpb
fcoml
subb
cmp
call
push
lods
ja
mov
insl
mov
in
jns
aaa
out
sbb
jns
xor
jle
mov
cmc
lret
inc
outsb
daa
jns
cmp
orb
mov
loop
sbb
jmp
xchg
add
cmpsl
mov
fwait
cmp
inc
inc
mov
or
adc
inc
leave
ret
loopne
cmpsb
dec
int
mov
lea
cs
add
fwait
and
sahf
data16
jmp
loopne
xor
jno
mov
arpl
pop
aas
pop
jmp
stos
push
push
fwait
mov
aas
jno
scas
std
sub
scas
dec
pop
in
cmp
pop
mov
mov
or
mov
or
jne
vpunpcklqdq
shll
pop
xchg
ret
lret
mov
lods
iret
cltd
add
insl
clc
mov
mov
mov
lods
ljmp
push
pop
lcall
cli
sahf
mov
xchg
pop
xchg
es
loope
and
fsubs
dec
aas
sub
dec
fdivr
jbe
std
outsb
cmp
aad
dec
or
int
and
imul
out
mov
out
push
dec
cmpsb
xorl
stos
pop
mov
lahf
pop
pop
fs
fs
idivl
jae
add
mov
pop
out
mov
sbb
push
in
testl
cmpl
add
xor
push
jb
lret
in
xchg
enter
out
ja
mov
cltd
fs
hlt
sub
sub
mov
push
sbb
sub
test
adc
pop
sub
std
gs
ret
insb
xchg
scas
cmp
or
ss
mov
and
rolb
jns
pusha
xor
dec
insl
popa
xor
jae
push
dec
in
mov
lcall
addl
insl
xchg
jnp
sub
xchg
js
ja
rcrb
dec
add
push
mov
ror
mov
iret
ljmp
enter
mov
aas
inc
popa
mov
sub
bound
xchg
jecxz
imul
mov
sub
cmpsl
dec
or
sub
jo
add
loopne
aas
mov
jb
push
js
lods
outsb
inc
cmpsl
std
hlt
gs
pop
scas
stc
dec
test
ja
das
cmp
jg
jge
aad
jp
push
in
sahf
sti
pop
cmp
sbb
adc
jns
bound
xor
test
lods
pop
push
push
outsl
add
push
jg
mov
int3
add
por
jecxz
movsbl
lcall
mov
jmp
cmc
cmp
movsl
jne
push
or
and
lods
push
pop
cmp
xchg
std
mov
sbbb
test
push
lret
xor
mov
icebp
jno
jg
mov
mov
push
je
cs
inc
pushl
adc
fisubs
lret
push
aad
cmp
pop
mov
pop
push
ret
fisttps
aad
add
fs
test
pop
mov
fildl
sbb
nop
scas
shll
mov
cs
sub
test
faddl
andb
nop
sbb
sbb
and
jo
cmp
push
cwtl
loope
dec
push
loop
pop
xor
jae
enter
jne,pn
pusha
adcl
sbb
push
scas
shlb
subl
mov
fcomps
call
sub
and
mov
out
lea
in
imul
inc
mov
lods
add
xchg
inc
mov
test
inc
repz
pop
std
arpl
lret
in
or
mov
stos
sub
scas
mov
test
nop
outsb
movsb
pop
xor
movsl
cmp
jp
dec
addr16
inc
cs
ja
insl
or
adc
dec
cmp
testl
inc
lcall
dec
cmpsb
inc
inc
aad
mov
add
and
out
hlt
mov
push
sbb
jo
adc
mov
iret
cmp
cli
sub
adc
cli
bound
in
xchg
out
cwtl
or
cmpsb
lahf
xchg
cmp
fiadds
repnz
pop
cwtl
fadds
jg
or
adc
push
add
mov
sbb
xchg
in
adc
sub
daa
pop
lret
xchg
fs
ljmp
lods
insb
jmp
pusha
xchg
push
adcl
cs
mov
lea
pop
clc
mov
pushf
mov
mov
lea
lock
roll
leave
xor
js
dec
mov
cwtl
mov
or
adc
arpl
lret
dec
ja
cmp
add
pop
pop
int
add
aad
cli
in
aaa
icebp
xchg
sbb
add
cmpsl
out
pop
add
movsb
sbb
push
mov
add
inc
call
mov
adc
xchg
push
aaa
inc
stos
ficomps
mov
call
adc
pushf
pop
cld
rorl
mov
jb
movsl
insl
in
out
pop
jnp
xor
out
add
lods
pop
mov
mov
movsb
push
bsf
mov
jg
sub
fistps
push
cli
xchg
dec
add
xor
xor
pop
shll
inc
push
fimull
mov
test
or
mov
cmp
inc
in
ljmp
xchg
flds
dec
ret
dec
xor
enter
scas
outsl
je
xchg
jnp
dec
push
stos
aad
enter
int3
cmp
mov
add
mov
push
daa
and
xchg
dec
add
outsl
adc
mov
std
icebp
mov
scas
mov
or
jnp
fucomip
jnp
sub
xor
add
pushf
lea
mov
cld
or
sub
pop
test
fsubl
fists
std
orb
pushl
inc
aam
pusha
jl
addb
data16
rclb
loope
dec
into
push
pop
mov
fmuls
pop
dec
out
mulb
loope
rol
aas
jb
and
arpl
fdivrp
jb
rcl
test
inc
roll
lea
imul
mov
in
mov
add
dec
dec
lods
test
or
addr16
lods
mov
inc
cs
or
xchg
divb
cld
loopne
inc
sub
gs
ja
lret
in
ret
pusha
test
aad
mov
addr16
pop
dec
sbb
jns
pop
inc
je
mov
mov
imul
imul
pop
sub
js
movsb
cmp
into
sti
rol
mov
jns
adc
outsb
adc
test
icebp
push
mov
mov
es
dec
mov
xchg
xor
sub
sub
jbe
mov
js
sub
or
cmp
mov
xchg
or
mov
pop
adc
mov
fs
sbb
xchg
lret
paddusw
sti
xorb
lret
xor
pop
adc
xchg
xchg
sahf
stos
loopne
inc
scas
test
mov
cmp
mov
out
call
mov
lods
adc
push
insb
or
add
insl
xchg
mov
lret
in
stos
push
enter
inc
sbb
adc
jo
mov
es
call
xchg
lds
popf
and
loopne
es
es
ficoml
push
mov
mov
std
adc
pusha
dec
js
roll
insl
sbb
mul
loop
inc
mov
insb
inc
and
dec
fcoms
aam
or
inc
xor
dec
mov
leave
sbb
cmp
mov
rclb
movb
mov
stos
or
sahf
xor
popf
mov
cmpsb
jae
add
xor
lcall
std
ss
mov
pushf
and
jbe
shr
mov
xchg
inc
push
addr16
popf
add
sbb
jno
sbb
adc
push
rolb
mov
aad
jmp
mov
mov
pusha
mov
xchg
clc
out
aad
push
aam
cltd
repz
in
pop
add
xchg
repz
dec
sbb
mov
cmpsw
scas
xor
repnz
mov
call
into
push
and
sbb
add
adc
sbb
ja
fcomps
jb
mov
jmp
jnp
movl
inc
cmpsb
sbb
xchg
mov
jecxz
xchg
push
or
sahf
mov
popa
sub
sarl
les
and
add
pop
nop
jno
xor
pop
cli
xchg
jmp
popa
mov
es
pop
es
jmp
or
adc
sbb
xchg
jp
push
pop
bound
xchg
inc
outsl
jns
shll
in
dec
push
in
or
inc
add
imul
push
xor
pop
lods
push
aaa
fs
mov
inc
inc
dec
mov
fists
pop
mov
cmpl
mov
sbb
jno
inc
enter
push
ljmp
scas
loop
sub
and
cmp
das
cmp
lock
mov
or
into
arpl
xchg
push
sbb
mov
cmp
aam
push
sti
xor
mov
cwtl
aam
inc
int
divb
out
push
icebp
xchg
jbe
adc
xchg
push
insb
aam
and
imul
add
adc
xor
int3
pop
jb
repnz
push
scas
gs
add
or
popf
lcall
aad
push
fmull
mov
cmp
mov
fmuls
mov
inc
dec
cld
out
cmp
cmpsb
sub
adc
and
xchg
dec
cwtl
shll
in
jp
mov
popa
mov
cmpsl
into
out
or
je
ljmp
mov
rep
xchg
in
les
push
andb
out
call
xor
xor
aam
cld
mov
jge
add
push
das
cmpsl
jo
or
incb
pop
jno
imul
out
cmp
pushf
or
pop
cwtl
mov
ficompl
mov
lahf
jbe
lret
inc
jmp
mov
sub
cmp
xor
cmovo
dec
jg
sti
mov
and
xchg
cld
jle
xchg
jmp
sub
dec
pop
add
daa
hlt
jbe
add
xchg
mov
test
pop
pop
or
jge
lahf
dec
cmc
fs
pop
std
push
jle
adc
test
mov
dec
push
sar
xchg
push
xchg
inc
clc
mov
inc
ljmp
adc
pop
hlt
pop
add
sbb
xor
mov
mov
and
add
or
adc
adc
idivb
in
and
and
xor
jae
popf
in
addb
adc
xor
mov
mov
repz
fisttpl
jnp
fs
mov
test
fldl2t
test
ds
aas
adc
shlb
es
mulb
add
pop
lahf
xchg
or
pop
xchg
cmp
and
jp
push
inc
sub
test
outsl
sub
add
and
jno
adc
cmp
fsubrp
daa
xchg
and
and
mov
rclb
test
shlb
mov
movsb
add
fninit
int
in
push
shlb
les
test
incl
call
pop
cld
inc
lods
add
dec
aad
roll
jecxz
imul
mov
dec
jmp
out
push
cmp
out
hlt
rcrl
data16
xor
cmp
xor
push
mov
xor
mov
popf
cmp
fs
rolb
sarl
fnstenv
cmp
or
mov
mov
jle
sbb
mov
loope
mov
sub
pop
dec
leave
repz
pop
ljmp
shl
sbb
int3
or
pusha
jae
dec
mov
cmp
mov
add
mov
inc
or
into
pop
push
xor
fdivl
mov
ret
jle
add
scas
cmc
adc
ret
cli
mov
and
cltd
xchg
push
inc
cli
ret
repz
or
or
das
inc
inc
jl
out
mov
adc
scas
ljmp
not
fcoml
stc
addr16
jno
lcall
mov
mov
fwait
mov
mov
xchg
test
mov
push
das
inc
sahf
js
mov
or
stc
xlat
pop
test
or
std
push
ljmp
hlt
mov
mov
daa
mov
dec
movsl
sub
fs
xor
lods
sub
subl
jno
pop
mov
mov
std
movsb
inc
movsbl
icebp
les
mov
mov
movsl
or
testl
testl
mov
jl
pop
adc
scas
sub
pop
pop
repnz
fimull
rorb
add
aam
sbb
scas
scas
pop
pop
mov
xchg
bswap
add
inc
dec
mov
mov
sbb
or
and
push
sbb
data16
outsb
enter
inc
xchg
les
or
or
imul
xchg
inc
in
adc
jle
sbb
ret
fiadds
aas
pop
cltd
pusha
jl
mov
mov
sti
mov
push
push
jb
lahf
scas
add
lcall
cmp
inc
adc
inc
pop
push
push
subb
outsb
pop
ret
std
mov
mov
repz
lods
loope
out
ljmp
sbb
repz
das
sub
testl
movsl
jp
sbbb
xchg
loopne
lret
dec
aaa
inc
lcall
ljmp
mov
fwait
or
js
cwtl
xorb
repz
int3
cli
jp
adc
scas
repz
pop
mov
sarl
cld
jns
jb
roll
mov
in
sarb
sbb
mov
aaa
dec
ret
inc
rorb
and
shll
cmp
cli
mov
out
orb
fbstp
shrl
repnz
adc
call
cli
stc
adc
mov
mov
and
nop
cmc
mov
push
adc
sub
sub
inc
ficompl
hlt
in
lcall
sub
cmpsb
test
fcmove
fistpl
scas
dec
pop
mov
mov
imul
add
cmpsw
lds
bound
fcoml
fwait
xchg
inc
int3
repz
mov
mov
loope
inc
xchg
repnz
sub
jp
pop
adc
xor
push
xchg
call
enter
sbb
xor
out
mov
bound
jae
stos
rcrb
les
ret
jl
mull
aad
or
add
pusha
je
xor
pusha
es
jecxz
pop
shr
cmp
adc
arpl
idivb
cmpsb
cmpsb
pop
pop
or
mov
daa
mov
adc
add
pop
add
mov
stc
je
pop
loopne
pop
inc
mov
dec
jae
andb
push
aas
repnz
stos
push
fadd
lcall
cld
jle
lret
jle
gs
jb
dec
adc
int3
dec
rorl
into
push
add
out
stc
mov
add
xchg
mov
dec
and
arpl
in
into
mov
mov
ds
int
xchg
imul
sti
movsb
ljmp
shrl
sbb
adc
out
jp
or
roll
jbe
mov
dec
xchg
add
out
rolb
push
sbb
push
mov
mov
clc
fcompp
cmp
mov
aam
xor
test
pushf
fadd
adc
sarl
daa
aad
push
cmc
icebp
xor
es
fdivs
bound
outsl
push
pop
aad
cwtl
mov
es
cmp
adc
lods
idivb
push
cmp
in
lahf
scas
sub
sub
push
adc
inc
loopne
mov
arpl
movsl
mov
lea
nop
xor
sub
fsubrl
push
loop
and
dec
jmp
fs
cwtl
push
jl
inc
mov
in
ja
adc
inc
adc
flds
add
testb
fisubrl
sbb
xor
shrl
outsl
xchg
lock
mov
das
in
inc
fnstcw
movsb
adcl
push
loope
test
loop
out
jmp
jb
sar
or
in
cmp
jg
out
jg
cli
dec
dec
xor
addl
dec
outsb
lcall
in
mov
cmc
jno
pusha
test
or
daa
xlat
in
imulb
xchg
xchg
ss
aad
jae,pt
pop
dec
pop
dec
nop
js
scas
in
in
dec
jne
push
and
sub
or
cli
pop
fs
push
cmc
xchg
dec
nop
push
leave
pop
and
aas
and
repz
mov
mov
pop
pop
stos
inc
dec
mov
sub
pop
pop
push
pop
hlt
adcl
fisubl
fstpt
jle
cmc
ret
jmp
stos
xor
inc
inc
jp
pop
xor
rcrl
div
cmp
add
sbb
adc
fcoml
js
or
push
stc
iret
lock
inc
xor
adc
adc
push
lods
shll
sbb
jl
mov
xchg
sub
cmp
add
scas
es
sar
inc
jmp
mov
js
pop
dec
cli
mov
mov
sbb
sub
inc
stos
mov
dec
lods
cmovp
lea
clc
xchg
lret
mov
jo
cmpl
ljmp
pushf
mov
popa
mov
add
push
das
mov
cmc
pop
fsubrs
add
mov
mov
fisttpl
js
outsb
fcomp
xor
push
cli
fwait
push
call
rcr
mov
push
xchg
mov
cmpsl
jp
or
loopne
jb
std
fsubr
std
dec
push
inc
jbe
sub
call
jae
aas
call
shlb
add
mov
movsb
or
sahf
sub
psubusb
cli
mov
ljmp
sub
les
movsb
mov
mov
leave
iret
mov
or
fdivl
imul
cwtl
arpl
mov
cmp
test
pop
jne
pop
sbb
mov
pop
popa
mov
test
push
test
inc
sarb
std
negl
insb
lcall
mov
xorb
dec
sti
mov
test
test
insb
add
lea
gs
xchg
pop
sbb
jne
inc
push
ret
xchg
icebp
mov
test
jbe
mov
fistl
cmp
mov
ja
inc
jbe
scas
cli
mov
pusha
sub
or
aam
shlb
fsubr
scas
inc
or
subl
popf
push
data16
loopne
sbb
test
push
adc
dec
xchg
std
or
mov
ficoml
inc
jae
cli
fbstp
xchg
ljmp
inc
stc
mov
cmc
cmp
aaa
push
popf
or
and
fdivrl
pop
mov
aad
cmp
cmp
fistpll
pop
cld
scas
clc
js
sbb
jmp
das
sbb
inc
xchg
or
pop
testl
ja
into
xor
rol
adcb
and
sub
rclb
cmc
and
mov
daa
sbb
push
add
int3
leave
roll
push
mov
filds
test
xchg
mov
shufps
out
push
test
add
sti
cmpb
mov
mov
and
stos
popa
inc
jnp
popa
xchg
fimuls
or
std
inc
or
ficompl
sbbl
xchg
dec
dec
cwtl
outsb
xor
push
mov
add
stos
jle
in
xor
mov
lods
insb
jp
loop
cmp
lret
pop
or
imul
in
xchg
add
leave
insl
mov
cmpsl
cmp
into
adc
test
rclb
sub
arpl
mov
xchg
fisttps
push
mov
dec
icebp
add
inc
adc
sub
cltd
mov
xlat
test
daa
popf
dec
mov
call
or
jae
imul
jb
xchg
icebp
xchg
fcompl
scas
mov
and
mov
cmpsb
dec
push
lahf
push
test
popf
dec
rol
dec
or
repnz
inc
je
lock
outsb
or
mov
sub
out
add
ss
jo
mov
addb
je
xor
xor
iret
xchg
xchg
cld
sbbb
dec
sub
stos
mov
cmc
xor
jae
xor
mov
pop
add
cmp
mov
lahf
inc
jns
pop
in
cmpsl
test
and
subb
jno
adc
cmc
fdivp
sbb
xchg
dec
sub
jecxz
adc
std
mov
lods
out
ret
sub
and
pop
sahf
ja
repnz
inc
lock
sbb
push
data16
cmc
ret
pop
push
xchg
jecxz
pop
stos
xor
adc
mov
pushf
push
cmc
pop
add
dec
fs
test
clc
cmp
ljmp
jge
loope
push
test
inc
mov
cmp
je
icebp
fcoms
push
leave
test
std
cld
add
enter
cmp
insb
jo
out
dec
adc
test
in
fnsave
mov
pop
dec
pop
mov
xchg
push
sar
or
in
mov
push
lea
xchg
cmp
imul
int
jae
mov
jmp
xor
mov
imul
mov
loop
push
mov
inc
mov
sahf
mov
mov
lret
push
rclb
test
in
pop
add
jp
xor
cmpsl
inc
sarl
scas
and
push
mov
subb
fiadds
mov
jp
outsl
filds
xchg
lret
cmp
dec
push
fs
xorl
push
cs
pop
insb
fs
icebp
adc
mov
aaa
mov
mov
clc
ficompl
dec
xor
mov
cld
mov
repz
mov
fldcw
xchg
cld
fnstenv
out
push
int3
lcall
into
out
mov
fwait
sub
lods
xor
cmp
out
sahf
adc
hlt
aam
mov
mov
xor
sub
jo
xchg
jne
aaa
stc
jae
ljmp
dec
add
out
ss
rol
add
test
fmulp
ljmp
cmp
subl
cwtl
pop
addb
out
pop
add
push
dec
lods
rorb
and
push
ret
fimull
sarb
bound
mov
sbb
jle
xor
inc
call
stos
jbe
rorl
cmp
mov
cmp
insl
je
jns
ds
jecxz
inc
jl
std
in
outsb
aaa
gs
sbb
push
lods
pop
inc
test
jp
rcrl
in
fstpl
mov
inc
mov
or
les
repz
std
adc
adc
cmc
jl
xchg
aad
jae
cwtl
aad
insl
add
jo
jg
and
aaa
imul
jae
sub
fildll
test
mov
jbe
les
shll
mov
mov
stos
adc
xchg
aaa
and
pusha
jae
mov
idivl
ss
cmpb
cmc
jecxz
mov
cld
push
adc
mov
repz
scas
push
int3
clc
jg
ror
jge
push
aam
jge
cmp
mov
pop
outsl
cmpsl
in
push
push
or
cmpsl
in
cmc
xchg
sbb
ss
dec
fsubrp
mov
daa
pop
call
movsl
shr
es
insl
adc
ljmp
and
jbe
ficoml
push
add
mov
fs
out
testb
sub
cmp
outsb
lea
pop
ljmp
lock
pop
xchg
fwait
cli
adc
shrb
adcb
push
stos
and
xchg
push
jnp
js
or
push
movsl
lret
push
push
mov
repz
inc
fdiv
sub
dec
aaa
xchg
popa
mov
stc
xor
in
pop
dec
push
js
hlt
aam
fsubrl
hlt
lds
jg
movsb
fistl
movsl
enter
mov
cmpsl
jnp
xor
hlt
mov
push
int
outsb
loope
cmp
push
das
sub
jle
cltd
and
jmp
lods
dec
push
mov
xchg
sahf
or
out
imul
movsb
jnp
in
mov
pop
into
les
mov
xchg
or
adc
insl
fidivrl
and
or
scas
andps
cmpl
pusha
out
or
or
das
sub
and
push
into
mov
xchg
and
ror
insb
cmp
sbb
inc
pop
sti
popf
ljmp
subl
insb
dec
fidivs
pop
adc
pop
xchg
sub
mov
push
cmpb
mov
scas
dec
dec
xor
and
arpl
mov
sarb
test
or
in
iret
scas
scas
int3
mov
lods
sbb
jl
inc
out
test
mov
mov
adc
push
ficompl
sbb
hlt
add
and
mov
jecxz
gs
pop
decl
movsl
mov
jmp
adc
mov
mov
mov
sarl
sbb
push
xchg
jmp
in
out
rcll
ss
rcrb
inc
xor
ss
jmp
arpl
data16
call
sub
loop
sub
xlat
aam
out
or
call
cmp
dec
pop
adc
lods
mov
xchg
sbb
in
pusha
test
xchg
mov
xchg
sub
es
xlat
bound
sub
clc
stos
pop
mov
rcl
scas
mov
lret
push
movsb
cld
pop
ficoml
enter
les
mov
addl
cwtl
loopne
mov
lds
shlb
cmc
mov
les
inc
jmp
sbb
sub
shrl
adc
fs
mov
pop
jno
push
cltd
int
mov
inc
sbb
repz
mov
mov
shl
sbb
push
nop
aad
ljmp
insl
xchg
cmp
inc
rorb
scas
lds
mov
or
punpckhdq
push
nop
cmpsl
jo
adc
scas
jmp
popf
shl
fstpl
cltd
inc
add
in
ret
push
push
aas
add
mov
fnsave
dec
adc
iret
icebp
jecxz
ret
jb
das
aaa
fimull
addr16
mov
add
pop
push
xchg
hlt
push
add
imul
or
mov
xchg
sbb
pop
dec
sbb
add
std
clc
les
paddsb
push
dec
mov
and
xlat
xchg
push
jne
xor
enter
stc
jnp
cmp
mov
mov
imul
call
sar
pushf
pop
pop
mov
inc
aas
orb
inc
push
push
jbe
clc
add
inc
lds
or
sub
mov
jge
in
lock
dec
lcall
push
inc
fcoml
add
pop
pop
jae
mov
nop
lock
movsb
arpl
add
sti
push
mov
ss
xchg
lret
mov
lods
mov
mov
loope
bound
xchg
and
jle
repnz
xlat
lea
add
dec
adc
lds
pop
fdivr
clc
subl
adc
mov
int3
lock
and
hlt
pop
xlat
push
pop
jo
loopne
sbb
enter
jp
movsl
lahf
cmpsl
add
lret
mov
icebp
inc
mov
dec
jns
inc
inc
mov
nop
je
or
push
xchg
push
dec
inc
cld
ljmp
cs
pop
fabs
daa
cmp
pop
idivl
sbb
mov
daa
xor
fsubl
cmpsb
dec
imul
dec
rol
xchg
xchg
test
push
inc
fldt
jno
repnz
and
mov
ss
xchg
fxch
jne
fs
cmp
dec
jmp
jae
xlat
jno
add
roll
lahf
cli
sbb
mov
das
xchg
pop
das
aad
roll
cmc
ffree
mov
dec
js
sbbl
popf
mov
jne
xchg
in
push
add
and
ds
cltd
imul
jne
sub
cmpb
xor
push
or
inc
mov
lea
scas
test
push
sub
loop
adc
sub
mov
push
js
cld
int
add
call
sbb
and
add
mov
or
inc
sbb
adc
fisubl
cmc
push
push
rcll
in
bound
outsl
test
add
pop
adc
adc
push
out
rcl
xchg
cmc
push
pusha
dec
pop
les
icebp
popf
jne
nop
xorb
sarl
fs
mov
dec
cmp
cmp
hlt
ja
add
out
xor
push
sub
out
es
enter
jno
rcrb
and
or
mov
cmpsl
push
mov
xchg
lcall
push
ss
sub
jnp,pt
shlb
or
sahf
lret
repz
sbb
xchg
imul
and
push
shlb
fstl
test
data16
xchg
inc
int
pop
into
and
leave
icebp
and
jl
aam
popf
xchg
vmovss
fxch
les
subb
pop
xchg
jp
adc
insb
or
cmp
mov
inc
push
and
pop
jg
cmpsb
sbb
sbb
mov
call
aas
dec
cmpsl
sub
into
ret
int
xor
movsl
pop
cltd
leave
insl
fsubrl
mov
mov
dec
add
dec
jnp
cmc
clc
fsubrs
cs
pop
imul
xchg
inc
mov
mov
insb
inc
sahf
cltd
jecxz
out
decl
jle
lods
dec
ds
sub
mov
jle
clc
mov
jmp
or
fldt
push
scas
test
test
and
scas
in
out
repz
jmp
push
std
cmp
shll
into
aas
mov
int
dec
icebp
ja
ds
mov
pop
xchg
roll
cltd
adc
jmp
xchg
mov
jns
mov
lods
scas
lret
dec
xchg
adc
pop
or
shl
mov
and
fldcw
or
xchg
mov
push
xchg
cmp
fwait
insb
out
icebp
or
pop
xor
and
ret
cld
adc
popf
add
sub
btr
dec
outsb
in
mov
sub
pop
push
cltd
mov
loop
jmp
sub
cmp
xchg
popa
ds
add
sub
cmp
jb
scas
test
xor
jmp
pop
jp
addr16
inc
in
jmp
pop
mov
add
or
jl
cli
out
add
aas
xchg
sub
out
adc
fisubs
mov
mulb
pop
dec
mov
sbb
pop
mov
or
xor
pusha
ret
sub
repnz
loop
cmp
adc
mov
mov
inc
and
int3
push
scas
pop
pop
iret
push
insb
jp
nop
rcl
loop
pop
sub
mull
dec
mov
mov
xchg
data16
inc
mov
ljmp
xchg
scas
and
dec
push
imul
jbe
stos
lea
sbb
add
aas
call
popa
leave
mov
sub
in
leave
fldt
out
cmp
shlb
mov
hlt
fldenv
pop
loopne
lds
sub
mov
xlat
xchg
mov
push
adc
push
aad
iret
xor
ljmp
nop
xor
sahf
in
shrl
sbb
xor
xchg
adc
sbb
dec
pop
int
addr16
sbb
std
scas
ds
in
mov
out
loop
or
cld
jge
fldl
mov
pop
lds
fcmovu
aad
enter
adc
xchg
fadd
aad
dec
adc
push
xor
popf
pop
int3
mov
cmp
lcall
xor
out
lret
xor
sub
dec
sbb
inc
xchg
scas
cmp
and
mov
data16
mov
cmp
mov
adc
dec
rclb
fwait
jg
gs
shrl
popa
adc
xlat
in
sbb
xchg
iret
cmp
jns
dec
jne
hlt
add
sbb
lea
addr16
popf
clc
xchg
pusha
add
adc
inc
stos
xlat
iret
fnstcw
xor
xor
mov
dec
pop
mov
xchg
and
adc
and
mov
mov
loope
sub
add
fucom
add
inc
sbb
adc
shlb
mov
divb
fwait
stos
jl
push
in
std
sbbl
lds
mov
daa
aam
jnp
jb
inc
movb
gs
xchg
mov
pop
mov
dec
pop
xchg
cld
lahf
xlat
sub
or
lret
out
fistpll
lcall
icebp
movsb
mov
xchg
popa
fnstcw
out
mov
sbb
fcmovnu
mov
mov
mov
movsb
xchg
or
movsb
arpl
subps
ret
or
int
adc
int3
stos
das
mov
lret
pop
cltd
mov
mov
les
and
adc
aad
fs
sti
gs
xor
lock
add
pop
dec
sarb
xor
sub
mov
jg
js
inc
adc
aad
gs
or
aam
and
cli
mov
aam
jo
repnz
outsl
pusha
lea
dec
mov
xchg
rcrb
jns
add
and
sahf
lcall
mov
inc
gs
and
adc
xor
pop
cmp
fisubrs
pop
cmpsb
ficompl
lahf
dec
repz
adc
aaa
mov
dec
shll
std
pop
inc
lcall
out
push
or
ljmp
jbe
iret
mov
or
jp
jb
jo
cwtl
mov
ja
fstps
push
push
inc
inc
out
pusha
out
outsl
jmp
push
ret
push
pop
adc
push
adc
bound
mov
cmc
aad
mov
fisttps
cmpsb
dec
arpl
push
lret
jp
and
cmpsb
mov
loopne
icebp
mov
and
xabort
pop
push
xchg
push
sbb
push
or
popa
mov
adc
loopne
add
pop
rcll
mov
jb
jb
pop
je
aaa
iret
jmp
in
nop
sub
mov
imul
addr16
or
out
xchg
mov
inc
sti
divb
in
lahf
pop
or
or
mov
and
sub
cmp
sub
arpl
fs
xchg
daa
jmp
push
aaa
jne
inc
push
sub
mov
push
sbb
fldenv
mov
sbb
mov
popf
clc
mov
mov
stos
ret
stos
std
fpatan
fsub
mov
mov
pop
insl
xchg
inc
pop
push
insb
lret
ss
add
push
cmp
test
inc
andb
dec
lods
cli
movsl
add
fbstp
pop
cmpsb
fisubrl
adc
test
lods
mov
xchg
sarl
fisttpl
push
in
adc
outsl
nop
sub
adc
inc
fistpl
and
sarl
mov
js
rcll
in
rolb
fcmovnbe
insb
pop
rorb
aaa
mov
jle
mov
das
bound
outsl
inc
sub
mov
nop
in
jle
jne
or
sub
inc
sbb
or
pop
mov
adc
cs
push
or
rcll
bound
leave
xchg
lahf
push
add
daa
out
jecxz
cmp
jecxz
repnz
inc
test
cmp
jmp
bound
jge
out
push
mov
sbb
mov
and
pushf
xchg
and
cwtl
xchg
inc
stc
or
add
out
adc
pop
sub
pop
mov
popf
xor
mulb
mov
xor
cmp
cmc
mov
mov
rcrl
jae
cmc
in
adc
lods
pop
lods
pusha
adc
mov
or
mov
push
push
lds
sbb
dec
pop
dec
imul
mov
cmpsb
inc
xchg
mov
les
push
xchg
lret
scas
jge
stos
lahf
cmc
lods
icebp
or
iret
lock
mov
mov
addr16
adc
mov
cmp
push
fildl
sbb
lock
mov
std
test
loopne
daa
fs
dec
mov
sub
neg
mov
lods
arpl
mov
roll
subl
sub
cmp
jns
enter
lahf
in
les
int3
paddb
adc
gs
adc
pop
cmpsb
adc
stos
mov
andb
mov
pop
add
mov
arpl
aaa
cmc
pop
scas
stc
push
mov
push
mov
push
pop
adc
stc
out
ja
sub
push
jg
fmuls
mov
add
xchg
daa
lods
add
add
imul
outsb
dec
jb
int
add
mov
push
ret
imul
iret
push
dec
xchg
adc
mov
add
daa
shl
into
test
inc
xor
shll
fiaddl
xchg
imul
jae
mov
in
fwait
mov
xor
inc
shlb
push
cwtl
popf
push
out
aaa
daa
xchg
addr16
jno
test
mov
sti
or
loopne
int
xor
xchg
cs
stos
dec
ret
pop
push
and
push
pop
rolb
in
pop
dec
push
shlb
jns
popf
imul
mov
insb
sbb
sarb
jne
lods
inc
shlb
jmp
push
std
pop
scas
test
cmpsl
aam
out
xchg
lods
lcall
pushf
and
push
add
mov
int3
testl
mov
call
into
mov
stos
xchg
sub
sub
dec
icebp
testb
mov
sub
bound
mov
lods
aam
jbe
out
mov
mov
xor
jbe
add
shrb
ret
mov
and
sub
mov
xchg
lahf
cmp
cltd
add
cmp
movsl
ljmp
pusha
jmp
enter
pop
mov
aas
xchg
xchg
ficompl
cmp
and
inc
lock
dec
data16
dec
call
insl
test
loope
jns
mov
fsubrl
add
xor
das
mov
push
push
sar
pop
shrb
sarb
adc
mov
pop
mov
aad
jne
andb
test
fs
dec
add
xor
leave
repnz
pop
lods
mov
stc
inc
mov
xchg
xchg
mov
pop
xor
leave
aam
mov
fs
mov
inc
pop
vmaxpd
jg
mov
add
packssdw
pushf
mov
jbe
test
pop
mov
and
negl
es
imul
mov
inc
sub
repnz
imul
subb
ficoml
cmp
insb
out
and
xchg
pop
and
stos
mov
push
sahf
xchg
andb
adc
pop
loope
xchg
cmp
mov
ljmp
xchg
stos
lea
add
xor
dec
xchg
in
mov
je
xchg
mov
out
daa
pop
stos
cmp
fst
jae
pop
or
repz
adc
pop
rcrl
aaa
cmc
aas
ja
outsb
push
ss
fisubrs
mov
into
mov
push
inc
or
or
sbb
mov
mov
clc
jno
out
sbb
iret
ret
cs
lret
dec
arpl
lods
mov
jle
movsb
fiadds
mov
aad
xchg
add
stc
dec
xor
leave
or
iret
mov
or
leave
xchg
jns
mov
mov
dec
mov
xor
sahf
cmp
adc
andb
jecxz
xchg
jecxz
jbe
mov
sub
xchg
xor
mov
adc
cmp
xor
cmp
push
test
add
clc
xor
loop
cs
test
insl
ficoms
int3
loope
test
scas
cld
add
lahf
out
lds
aas
dec
fst
and
loop
je
int3
std
scas
lahf
lods
orl
data16
mov
mov
add
lods
mov
outsl
lods
clc
scas
add
stc
push
pop
xor
jl
orl
sbb
lcall
popf
jne
mov
add
mov
pushf
push
loopne
mov
loop
gs
jnp
and
sub
mov
add
call
aam
andl
mov
cmp
and
leave
adc
outsb
xchg
out
jne
stos
jge
sahf
ret
push
mov
mov
out
loop
mov
pop
rcrb
mov
rolb
sub
arpl
mov
in
dec
mov
pop
int
pop
fisubl
out
lahf
dec
cmp
inc
and
and
xor
xor
popa
and
push
iret
mov
xchg
mov
mov
dec
leave
enter
loop
mov
sub
and
mov
pop
sub
inc
add
fisubs
xor
jge
xor
ret
mov
jmp
test
test
xchg
leave
fistpll
mov
sub
imul
xchg
sub
scas
cld
mov
insl
int3
jae
inc
fistpll
or
inc
idivl
pop
or
test
sbb
xchg
orb
imul
mov
adc
jmp
das
lret
add
loopne
movsb
bound
dec
lods
mov
xchg
stos
fsubrl
mov
sbb
pop
insb
nop
in
or
jle
shrb
pushf
incl
cli
ds
loopne
jmp
hlt
inc
inc
mov
sarb
shll
dec
ficompl
mov
mov
inc
jb
sahf
inc
mov
jb
adc
push
in
orl
pop
or
loope
xchg
lcall
jmp
adc
mov
xor
js
jo
sub
jge
sbb
mov
sub
sarl
fwait
push
xor
mov
lret
cmc
outsl
mov
add
loop
into
in
dec
xchg
or
dec
mov
iret
pop
aam
sub
lret
cmpsb
in
data16
aam
adc
sti
out
lock
ret
jns
fists
jns
aad
add
bound
arpl
cltd
cld
pop
cmpsb
loope
hlt
mov
inc
xchg
rcrl
adc
cld
mov
stos
int3
repz
hlt
jp
shl
pop
xchg
inc
icebp
or
sub
enter
pop
lret
dec
mov
sbb
daa
jl
cmp
dec
fwait
xchg
fldcw
outsb
xor
inc
dec
xchg
lret
lock
aad
adc
nop
push
rcrl
pop
scas
sub
rcrl
into
mov
cmp
add
hlt
addb
inc
icebp
fstpl
jecxz
mov
mov
jo
enter
sbb
stos
xor
pop
jmp
jg
arpl
prefetch
jno
pop
sub
or
cmp
ja
mov
pop
insb
lret
adc
jno
lcall
sti
test
sub
mov
loope
decb
xchg
jl
mov
cmp
pop
test
sbbb
in
sbb
sub
cltd
sub
mov
ret
call
dec
icebp
and
add
jp
pop
sbb
sub
jl
and
jno
out
xchg
sbb
repnz
icebp
push
bound
push
adc
sub
pop
xor
inc
lods
sti
aas
jne
data16
lods
dec
xchg
xchg
mov
subb
test
clc
lods
or
outsb
addr16
mov
insl
insl
sbb
mov
jg
jo
aam
sti
dec
arpl
movsb
pop
mov
cmc
jl
cmp
and
pop
test
cmp
mov
idivb
jecxz
mov
mov
jnp
jno
dec
scas
and
and
pop
cltd
sahf
pushf
push
rcl
fimull
cmp
mov
das
lret
hlt
push
inc
mov
add
insb
jne
fcmovnbe
push
add
mov
lods
je
push
xlat
das
pushf
mov
jo
jnp
pop
push
into
std
push
pop
nop
cmpsl
dec
enter
or
adc
sbb
xor
push
and
jns
xor
pop
jbe
xchg
and
int
gs
mov
or
add
jns
mov
dec
jae
shrb
jle
push
pop
sub
lods
les
aaa
test
push
es
xor
sbb
jle
dec
and
out
and
test
or
jge
or
jecxz
jo
dec
add
gs
jg
push
adc
or
pop
push
add
cmp
popa
mov
inc
jbe
cld
inc
mov
into
lods
pop
ret
sub
pop
aam
jbe
cmp
mov
mov
outsl
ret
adc
cmp
scas
xchg
enter
outsl
mov
sarb
pusha
jecxz
insl
jp
enter
mov
sahf
jmp
je
or
mov
filds
or
inc
push
lcall
mov
jbe
pop
pop
mov
and
mov
cmp
gs
xor
pop
xchg
xchg
or
hlt
pop
imul
xchg
subl
mov
test
mov
or
mov
fsts
test
pop
mov
test
xchg
push
and
fcoms
out
or
push
repz
jg
xchg
bound
out
lea
add
adc
in
dec
out
mov
sub
xchg
movsl
lret
jge
inc
xchg
loope
test
jae
xchg
sbb
pusha
mov
std
mov
mov
xchg
and
jecxz
xchg
or
test
test
arpl
imull
mov
or
sahf
cmp
push
shrb
imul
push
xchg
mov
fcomip
jo
test
and
bswap
stc
xor
cmp
scas
inc
jns
adcl
or
push
in
inc
adc
xchg
cmp
cwtl
adc
or
xor
mov
inc
push
pop
adc
adc
jecxz
call
lods
push
cli
je
clc
mov
xchg
and
movsb
mov
in
pop
cmc
dec
pop
mov
xchg
sub
cmp
cmp
rorl
cld
and
fdivr
sub
dec
push
mov
mov
out
mov
nop
aam
ds
ret
cmp
shlb
stc
movsl
lcall
in
sub
sub
fisubl
jae
scas
mov
pop
pop
pop
popa
cmpsb
dec
add
cmp
sbb
in
int
ss
pop
cld
adcb
push
xor
or
or
fldcw
ds
cmc
sbb
jmp
cli
sub
mov
mov
jmp
adc
push
xor
into
dec
or
push
enter
push
shrb
or
icebp
icebp
das
sub
aaa
jge
loop
cmp
icebp
push
inc
cmp
mov
lret
andl
btc
scas
dec
jge
dec
inc
pushf
in
cmp
iret
jae
sub
push
pop
mov
leave
and
loopne
cmp
lds
xchg
or
jb
pop
leave
fcmovne
fistl
push
or
sbb
out
or
jle
mov
addr16
inc
addl
lahf
mov
xchg
xchg
and
adc
ficoms
pop
fcmovb
mov
adc
cmc
jp
lods
movsb
movsl
stos
les
inc
bound
aad
mov
in
jae
sbb
clc
sarb
push
cmp
sbb
test
cmpsb
adc
inc
inc
fmull
fs
mov
je
testl
dec
fwait
out
sahf
push
shl
je
es
pushf
arpl
xchg
out
xor
scas
sbb
jne
xchg
sub
test
cmp
ss
jne
iret
insb
lods
int
stc
pushf
hlt
nop
fwait
push
sarb
dec
mov
dec
fstl
add
data16
adc
pop
jne
insb
mov
add
jno
add
dec
add
in
add
imul
jge
pop
xchg
push
cmpsb
mov
adc
mov
fwait
add
xchg
jne
mov
movsl
lret
cltd
addr16
jp
cmp
lcall
xchg
sub
and
or
das
stos
xchg
mov
jns
push
call
mov
mov
lds
insb
xor
xor
inc
jle
jmp
ja
ret
cld
jae
test
adc
and
push
popf
push
pop
fldl
inc
push
popa
cli
fcoml
stos
cmp
or
scas
stc
cmp
arpl
ret
ret
xchg
out
cwtl
add
fiaddl
lods
sbb
pusha
mov
scas
cmp
test
mov
pop
add
adc
pop
or
push
adc
jp
xor
out
sti
and
cmp
xlat
sbb
in
push
call
xor
fdivr
mov
mov
xchg
pop
sbb
pop
repnz
je
or
xchg
ret
lret
push
adc
fisttps
mov
rcrl
lahf
or
das
cwtl
push
inc
clc
call
cmp
sub
inc
adc
in
test
pop
sahf
lods
mov
mov
add
jp
test
xchg
sub
fwait
hlt
mov
and
mov
hlt
push
pop
xchg
jge
shrl
dec
jo
sti
xchg
jl
xchg
sahf
mov
jae
stc
in
fst
xor
das
test
inc
jmp
dec
lods
insb
lcall
mov
mov
pusha
xchg
hlt
cmpsl
cvtps2pd
lahf
xlat
mov
in
fwait
xchg
adc
mov
std
and
dec
in
cmp
mov
pop
pop
xchg
add
pop
push
mov
mov
sbb
std
jnp
lahf
insl
cmpsl
lods
pop
push
loope
lret
fbld
adc
adc
cmp
call
jp
push
jbe
imul
add
add
imul
adc
pop
mov
push
out
add
mov
pop
insw
lds
mov
imul
flds
imul
popa
and
mov
push
out
outsb
jge
outsb
addl
mov
pushl
bnd
sub
pop
jle
jns
xchg
jp
das
push
pop
xchg
mov
jbe
int
adc
mov
pop
jle
imul
loop
insb
mov
lcall
stos
jae
xor
fistpl
test
lahf
scas
outsb
push
push
scas
ljmp
push
sbb
popa
xchg
pop
push
in
notl
cmp
push
scas
push
mov
pop
mov
mov
push
mov
scas
fwait
sub
test
adcb
push
dec
out
pop
dec
or
insb
mov
stos
mov
mov
ds
stc
mov
mov
scas
jns
in
push
dec
mov
movsb
lods
dec
sub
jno
lret
sarb
popa
mulb
ljmp
xor
insb
pusha
mov
add
jmp
aad
sbb
leave
xor
rorl
mov
push
stos
mov
hlt
or
jmp
dec
jp
adc
daa
jmp
js
push
push
mov
mov
mov
scas
push
addr16
mov
sbb
jl
cs
mov
lret
xor
add
pop
pop
sbb
add
pop
mov
pop
scas
repz
pusha
and
repz
jl
loop
cmc
and
or
sub
pop
inc
push
lea
mov
mov
cmp
popa
sbb
insl
sbb
adc
xchg
iret
test
aas
dec
xor
dec
jmp
push
mov
pusha
ret
adc
and
je
cmpb
xlat
scas
out
into
pop
mov
pop
mov
mov
mov
xchg
mov
and
or
rcrl
adc
mov
out
cmc
fs
loope
mov
inc
sbb
xchg
add
test
lret
pop
divb
imul
push
push
mov
cs
mov
fbld
scas
stos
adc
filds
in
mov
xor
mov
sub
jp
imul
mov
into
xor
pop
jl
in
mov
dec
ret
sbb
add
mov
pop
pop
jmp
ds
xlat
cmp
hlt
mov
ja
mov
in
adcl
lcall
add
xor
mov
lods
push
mov
aas
and
pop
jns
dec
dec
std
push
push
out
or
xchg
addr16
fidivl
test
add
das
add
cld
mov
loopne
dec
and
mov
nop
popa
int
bound
inc
fwait
xchg
or
or
das
mov
lds
sbb
mov
sub
call
xchg
jecxz
mov
dec
jg
mov
push
out
adc
and
pop
mov
push
xchg
js
dec
jg
mov
cltd
mov
mov
jmp
aaa
pop
jp
nop
outsb
cmpsl
inc
pop
inc
fs
pusha
xor
jg
and
xchg
notl
movsb
repnz
sbb
sub
adc
push
mov
lods
pop
xchg
push
sbb
add
add
subl
cmp
lret
cmp
cmp
adc
gs
out
ret
add
pop
xchg
cmpsl
out
aaa
loop
aas
outsb
inc
mov
pop
push
in
call
add
ds
aas
cs
popf
daa
sub
out
js
loopne
and
sub
push
mov
push
cltd
nop
push
daa
add
mull
push
pop
push
jg
in
out
ljmp
jmp
jl
mov
insb
scas
sti
cmp
xorl
push
dec
pop
cs
xchg
stos
inc
jns
push
stos
mov
pusha
mov
mov
push
xchg
push
push
sbb
nop
rclb
xchg
es
out
test
cltd
ja
inc
mov
jl
lock
sbb
daa
xchg
fwait
jg
or
sub
les
push
push
fldcw
lcall
add
gs
mov
dec
and
mov
push
adc
test
arpl
hlt
outsb
out
sar
mov
dec
xor
jno
mov
lret
cbtw
add
push
xor
out
dec
dec
jp
sbbb
mov
xchg
cmp
cld
stos
and
into
sbb
xchg
sub
adcb
loop
aam
jmp
in
sbb
ret
testl
fdivrl
xchg
pop
mov
fsubrl
xchg
and
xchg
xchg
sbb
sub
call
add
repz
jecxz
int
add
lahf
sub
push
sub
rol
and
mov
inc
inc
inc
xor
push
pop
xor
popf
adc
aad
jl,pn
cmp
or
pop
nop
dec
addr16
lahf
mov
mov
jle
loop
pop
adc
jns
mov
adc
aaa
mov
lea
mov
in
loop
stc
add
test
mov
fwait
xchg
inc
jns
pop
lea
insb
pusha
add
test
outsl
int
js
pop
xor
add
xor
mov
mov
push
xchg
loopne
mov
js
cmp
xchg
fcompl
cs
sbb
gs
cmpb
jne
mov
xchg
jmp
out
aaa
sbb
lret
repnz
xchg
mov
test
rcl
test
bound
pop
cwtl
mov
in
sarl
or
add
sbb
xor
dec
mov
adc
jg
out
mov
cmpsb
loope
scas
mov
pop
scas
lret
popa
js
pop
sbb
cmp
fistpl
andb
out
sbbl
jg
mov
pushf
pop
jbe
frstor
xchg
pop
filds
pop
hlt
je
xor
hlt
fxtract
mov
scas
sbb
or
xchg
sub
movsb
sub
inc
pop
cmp
xchg
arpl
mov
adc
mov
pop
xor
pusha
les
cmpsb
pop
adc
mov
pop
lods
stc
add
or
shrb
pop
cmpsb
loop
movsb
rolb
stc
mov
sub
vunpckhps
sub
rolb
ljmp
jo
or
mov
or
mov
sub
or
lcall
aam
lea
pop
dec
nop
idivb
lods
mov
mov
ljmp
pop
mov
push
push
test
and
mov
lret
out
out
jne
int
sub
pop
lret
hlt
jns
fstpl
push
jl
sarl
loopne
pop
pop
xorb
xchg
push
push
mov
test
into
lret
mov
mov
xchg
mov
enter
xor
aaa
and
hlt
mov
aaa
js
jno
dec
pop
inc
das
std
mov
sbb
sub
and
jb
or
les
addr16
jecxz
dec
mov
out
pop
scas
jno
push
jae
jne
adc
dec
or
fcoml
or
xor
and
daa
iret
add
arpl
dec
xlat
dec
mov
xor
aam
movsb
insb
jge
clc
mov
insb
aam
ljmp
aaa
xchg
sti
lret
push
imul
popf
pop
daa
adc
cmp
cmp
push
test
mulb
pop
sub
aad
cld
jne
insl
adc
loopne
adc
icebp
xchg
jno
and
scas
push
push
aas
insb
daa
mov
pop
imulb
mov
lret
outsl
sbb
lahf
jb
les
or
ret
sub
ds
inc
sub
pop
adc
rcll
test
mov
hlt
inc
in
lods
mov
in
jo
in
and
adc
inc
jnp
pop
sub
in
inc
xlat
mov
mov
mov
or
stos
or
std
pop
inc
cli
sahf
adc
test
fsubr
aad
sub
cld
std
movsb
gs
mov
bound
rcr
adc
scas
mov
and
jno
xor
outsb
add
xor
cmp
xchg
push
into
fdivrs
push
inc
leave
lods
notb
aas
add
sbb
adc
ss
lds
aaa
lods
rcr
out
xchg
mov
fiadds
cld
dec
add
inc
jecxz
adc
mov
lods
dec
and
leave
cmp
rorl
in
icebp
mov
pop
mov
pop
or
fld
or
pop
insl
lods
ljmp
movsb
cltd
rcrl
ret
ja
repnz
push
sub
out
ror
test
pop
rcll
negb
cmp
xor
fbstp
push
mov
inc
std
sbb
xchg
in
int3
lock
inc
cmp
pushf
dec
stos
cmp
faddl
test
push
lods
or
imul
dec
inc
cmc
inc
or
xor
cmc
fwait
out
clc
jmp
in
in
pushf
dec
or
push
test
test
sarl
or
fimull
mov
inc
imul
das
jp
pop
mov
xchg
add
or
mov
mov
push
add
popf
jns
mov
pop
in
push
ficomps
mov
stos
in
xchg
ret
fistpll
sub
sbb
jge
pop
scas
enter
and
ja
cmp
aam
and
xlat
cmpsl
add
call
add
dec
cmp
in
fistps
xchg
xlat
sahf
add
adc
movhps
cwtl
daa
pop
and
ret
mov
add
inc
subb
es
sbb
mov
pop
mov
in
xchg
insl
popf
in
mov
cli
mov
mov
into
push
scas
test
in
jo
mov
mov
mov
imul
stos
fsubrs
adc
insl
sub
adc
mov
xor
jo
xchg
inc
xchg
xchg
aas
mov
pop
mov
shlb
inc
inc
flds
sub
fdivrl
inc
shll
std
insl
mov
je
pop
add
adc
popf
jb
fbld
push
stc
daa
mov
xor
out
aaa
push
loope
jle
dec
or
fmull
push
cmpsl
push
movsl
scas
gs
inc
ljmp
and
jo
cmc
test
jecxz
xor
add
fcoml
mov
xchg
loope
inc
mov
add
imul
pushf
or
ret
andb
sub
les
call
mov
aas
and
aad
fwait
push
loopne
mov
dec
mov
je
repz
pop
push
inc
mov
cli
inc
mov
pop
std
cltd
add
ja
mov
cwtl
ficomps
pop
out
loope
loop
js
or
jmp
in
testw
or
mov
insb
xchg
dec
fwait
in
fs
test
cmp
and
aas
hlt
ret
inc
retw
jmp
xlat
pop
inc
js
push
push
les
push
push
mov
repnz
mov
xchg
rcr
fs
out
sbbb
cmp
mov
cs
jns
jecxz
push
fstps
sbb
sub
pcmpgtw
fucomi
mov
mov
jno
add
std
xor
adc
add
mov
mov
xor
cmp
filds
test
and
cwtl
les
orb
stc
imul
adc
stos
cltd
popa
add
add
sahf
lock
repz
dec
mov
hlt
hlt
enter
iret
icebp
xlat
arpl
inc
jle
iret
je
nop
mov
or
sahf
idivb
xchg
hlt
mov
jecxz
scas
push
push
xor
call
add
fidivrl
jae
xchg
aad
je
adc
call
or
out
xchg
add
adc
xor
jmp
jno
pop
sub
inc
cmpsb
or
out
mov
xlat
xchg
popa
addr16
scas
jl
sbbl
imulb
push
cmc
cmp
andl
xchg
mov
insl
and
cmp
sub
nop
arpl
mov
out
imul
pop
cmpsb
jns
lds
mov
mov
dec
cwtl
dec
int
outsl
fcmovb
push
aas
push
mov
aam
add
ds
push
neg
jecxz
pcmpgtw
rcrb
xchg
cmpl
shl
scas
inc
cltd
cmc
sub
mov
out
adc
js
dec
scas
jmp
adcl
inc
cmp
cltd
stc
dec
in
and
ret
sbbb
and
xchg
sar
cmp
int3
cmp
outsb
push
ja
aad
xor
leave
jle
cs
aaa
enter
loopne
push
inc
std
mov
sub
in
add
sbb
int
push
loope
notl
mov
cmp
sbb
gs
popl
mov
ret
push
cmpb
call
cmp
sub
push
xchg
in
adc
arpl
push
mov
lock
rclb
push
fcomps
dec
sbb
je
mov
fsubrl
add
cmp
xor
push
pop
mov
adc
dec
xchg
xchg
or
rorb
hlt
daa
ret
and
jne
pop
cmpsb
fmuls
or
sbb
scas
in
fcmove
into
aas
sub
scas
pop
orb
sbb
push
in
imul
or
call
lock
sbb
scas
test
roll
and
pop
inc
test
repz
daa
dec
movsl
sub
dec
push
xchg
and
xor
cld
mov
frndint
sbb
mov
dec
std
push
jae
sub
dec
push
add
mov
iret
fcoml
inc
or
sub
fmul
or
mov
add
xor
insb
sbb
loopne
add
shrb
leave
lahf
cmp
stc
in
rcll
mov
mov
mov
sbb
nop
push
fdiv
ret
cmpsl
inc
insb
inc
adc
and
subb
or
fldenv
stos
dec
sub
insb
xchg
iret
movsb
xchg
jp
imul
push
rcll
hlt
xlat
mov
inc
jge
mov
fsub
mov
fsubp
jge
js
xchg
mov
push
mov
sti
xor
xchg
jae
mov
push
and
cmp
movsb
cwtl
xlat
sahf
mov
pop
outsl
sub
add
fwait
lds
xlat
sbb
mov
add
xchg
adcl
sahf
hlt
fs
xor
inc
ja
mov
xchg
nop
sub
imul
jl
push
pop
and
rdtsc
pop
lea
gs
mov
jmp
out
outsl
xlat
mov
lods
dec
inc
jmp
mov
jo
nop
out
mov
sub
lods
out
gs
jecxz
xchg
out
jbe
mov
pop
mov
int
push
lock
mov
icebp
mov
dec
call
js
mov
jp
jno
stc
mov
mov
leave
xor
jecxz
mov
int3
orl
cld
and
mov
push
test
aas
mov
dec
cmp
clc
mov
sub
and
jg
es
inc
sbb
jg
in
aam
sbb
and
int
rol
add
fcompl
inc
call
lahf
mov
xchg
ds
mov
fs
pop
push
or
sarl
pushf
stos
cmpl
xor
mov
sub
pop
mov
ret
inc
imul
xor
inc
bound
clc
cmp
fcomps
pop
test
dec
cmp
xor
add
aam
xchg
dec
mov
mov
jle
out
push
lahf
idivl
jnp
rorl
jmp
and
jbe
popa
popl
shl
and
pop
mov
add
push
push
adc
pop
neg
repz
test
xchg
in
pushf
mov
stc
pop
mov
cli
push
lea
ficoms
lock
leave
imul
sbb
rolb
pop
test
popa
outsb
subb
dec
fisubrl
fildll
mov
push
dec
sub
sub
xchg
cmp
scas
lret
push
stos
pop
fadds
lret
inc
cmp
ja
inc
inc
jae
jmp
scas
inc
mov
iret
adc
dec
clc
rolb
mov
inc
sub
int
mov
pop
lret
mov
pushf
gs
outsb
mov
fists
imul
sub
clc
popa
outsl
inc
cwtl
cmp
fildl
pop
mov
fmull
mov
insl
lahf
fildl
and
inc
xchg
adc
in
xchg
int3
add
jg
dec
and
iret
cmp
ljmp
mov
int3
cmp
out
imul
jmp
mov
mov
in
loopne
mov
stos
sahf
mov
fildll
loopne
out
testl
adc
lods
xchg
ja
inc
jne
jge
into
mov
js
std
dec
lret
mov
sbb
inc
jno
sub
or
scas
mul
fnstcw
mov
mov
push
add
fdivrs
push
add
cmp
call
imul
imul
jno
dec
mov
adc
dec
mov
mov
cmc
inc
icebp
dec
addb
mull
leave
repz
movsl
inc
cmp
test
or
test
pushf
sub
pusha
xchg
gs
out
out
insb
pop
gs
cli
movsl
aaa
inc
das
lret
or
mov
dec
stc
xchg
call
repz
popl
in
xor
add
add
mov
or
jnp
lahf
cmp
mov
cmp
sbb
test
in
dec
enter
testb
adc
imul
lods
mov
jmp
lds
mulb
inc
inc
nop
push
cmp
mov
in
hlt
sahf
ret
inc
fs
mov
arpl
nop
dec
shlb
les
nop
xor
adc
mov
out
test
fidivrs
xor
sub
jge
jne
out
xorb
into
ret
int
adc
fmull
xchg
outsl
icebp
out
pop
gs
in
pop
pop
cmp
inc
xchg
sub
dec
ret
inc
fsubr
or
adc
in
popf
or
cld
and
xor
ja
int
inc
mov
adc
ret
loope
pop
xor
push
cmp
fidivrl
imul
stos
lds
loop
fsubr
add
push
stos
adc
jle
mov
and
out
sbb
mov
xchg
lcall
mov
jmp
sub
test
mov
stos
fcoml
or
ret
pop
adc
sahf
cli
call
daa
fstps
js
out
nop
lahf
pop
test
push
jbe
pop
inc
faddl
push
cltd
jne
rcl
cmpsl
scas
stc
clc
xor
cmpsb
sbb
add
xor
popa
xchg
pushf
testb
movsb
cmp
leave
pop
fwait
in
test
inc
into
push
cmpsl
rcr
push
mov
dec
cmp
lds
and
stc
popf
js
jg
jl
popf
jo
cwtl
int
outsl
xchg
fs
pop
push
adc
mov
fistpll
lret
sarb
enter
jmp
mov
jmp
shlb
hlt
sub
or
cwtl
add
pop
and
insb
add
fnstcw
jmp
and
test
mov
mov
mov
cmp
dec
mov
inc
sbb
fldl
mov
inc
sub
ds
pop
addr16
lcall
xchg
cmpsl
mov
push
std
and
in
mov
into
cs
leave
xlat
cmpsb
cltd
sbb
inc
mov
or
adc
inc
test
aad
test
xor
xchg
sub
outsb
lret
push
mov
shlb
xlat
sbb
cld
fsts
andb
mov
dec
shlb
or
movsb
inc
aam
scas
and
lahf
push
ret
jmp
pop
subl
and
mov
ss
repnz
add
pushf
add
lea
jae
xorl
enter
ss
pop
imul
stos
jp
and
push
filds
sahf
jmp
xor
xchg
aas
repnz
sbb
ja
cmp
push
add
mov
mov
mov
stos
call
jae
loope
imul
jp
arpl
hlt
mov
loope
das
sub
cmp
push
pop
leave
test
out
sbb
je
push
lret
inc
leave
cltd
add
cs
pop
cmp
into
xor
jecxz
fcoms
xchg
pop
pop
mov
fldlg2
add
loop
and
and
repnz
pusha
cmp
arpl
inc
xchg
cmpsb
dec
cld
fwait
pop
lods
lea
lods
jb
fwait
add
repnz
xor
dec
fs
jle
test
jns
int
jns
mul
out
jg
jno
or
scas
int
pop
lds
sub
fsub
or
jae
arpl
test
stc
lods
sub
gs
imul
adc
test
outsb
hlt
ret
addr16
scas
arpl
push
das
out
pop
int
push
jb
and
xchg
adc
pop
adc
dec
xchg
mov
xchg
and
cs
xchg
adc
jg
sub
enter
pop
fistps
daa
inc
or
jne
cvtps2pd
add
and
inc
in
shrb
pop
lea
faddl
addr16
decb
cld
push
adc
in
or
pop
ret
dec
pop
adc
mov
mov
lret
inc
mov
sub
push
psrld
cmp
and
mov
mov
scas
icebp
cs
xchg
push
lret
cmp
mov
jno
ret
imul
ret
lea
mov
add
adc
pop
jl
popa
inc
icebp
push
movsl
and
pop
xor
dec
cmp
sbbl
fdivs
sub
icebp
and
cwtl
cmp
andb
inc
push
mov
cli
cmp
or
imul
sub
je
mov
rcll
orb
add
pop
mov
orl
mov
imul
leave
fmuls
stc
pushl
xor
sbb
add
mov
stos
jne
pushf
mov
lahf
cmpsl
addr16
push
repz
cltd
ficompl
cs
mov
imul
vpshld
nop
xchg
or
pop
pop
aad
jbe
xlat
inc
aad
int3
fmull
push
out
mov
xchg
xor
sti
clc
testb
aas
jae
outsb
inc
das
mov
mov
mov
popa
lock
cmp
cmpsb
das
mov
out
pop
xor
xor
xor
retw
dec
hlt
xor
jbe
scas
jae
or
xor
xchg
xchg
jecxz
pop
or
arpl
loop
mov
mov
js
jne
adc
stos
movsl
inc
add
jp
loop
adc
lods
mov
or
push
cltd
sbb
and
cmc
mov
adc
xchg
lret
xor
xor
notl
or
jbe
insl
aas
aad
fidivrs
pop
mov
mov
xchg
cmp
mov
pushf
in
inc
sub
add
lcall
imul
pop
pop
icebp
cltd
aaa
sahf
rorb
cwtl
adc
sbb
repz
pop
sarb
sbb
aas
out
pop
fisttpll
loope
pop
dec
ja
aas
mov
ljmp
popf
push
sti
inc
jns
push
adc
nop
divb
cmpsb
icebp
pushf
mov
xor
sbb
jecxz
ficoms
jns
adc
and
cmc
adc
call
sub
pop
sbb
imul
loope
cmp
sbb
sub
xchg
das
les
pop
clc
mov
xchg
mov
cvtdq2ps
xor
pop
out
lcall
add
jmp
xchg
pop
cli
push
dec
popa
sub
xor
jo
pop
pusha
psllw
lods
hlt
ljmp
push
push
aad
adc
push
push
sub
lahf
clc
jbe
in
adc
addb
or
cmpsl
cmp
std
mov
jne
mov
cmp
mov
fcmovnb
fistps
ljmp
loopne
jb
ror
in
out
pusha
and
jp
aad
lret
ja
jge
stos
stos
dec
aaa
loop
jge
dec
out
mov
mov
cmp
test
cmp
cmp
dec
jle
sbb
pop
xlat
std
jmp
dec
ja
adc
jb,pn
pushf
inc
mov
dec
sarl
jb
adc
out
and
or
inc
dec
out
mov
dec
ss
adc
xchg
sub
push
inc
movsb
ja
jae
mov
jge
push
orl
pushf
add
push
in
std
enter
cmp
dec
add
fistpl
jno
xor
gs
mov
out
or
xchg
sbbb
and
add
xor
pop
in
call
je
insb
adc
or
lahf
leave
xor
push
mov
mov
fcmovne
dec
or
pop
out
loope
xor
rorl
enter
cmp
bound
pop
out
out
sub
cmp
xchg
xchg
and
dec
int3
lds
leave
inc
xorb
add
mov
fidivs
lds
shr
ret
jle
loopne
loop
sbb
iret
out
xchg
cmpsb
xchg
movzwl
or
aam
or
xorb
cmp
xor
insb
outsb
sbb
xor
mov
xchg
pushf
xchg
addb
loopne
nopl
scas
sub
bound
mov
mov
mov
cs
xor
pop
out
lock
into
dec
into
push
push
in
fiaddl
aaa
xor
jne
or
push
mov
ljmp
icebp
sub
cmp
add
and
or
fndisi(8087
and
fcomi
lcall
xor
dec
inc
stos
xchg
mov
outsl
aad
lcall
stc
and
xor
pop
cmp
div
shll
cmp
sbb
bound
lret
iret
dec
and
rorb
in
sub
or
cmpsl
arpl
mov
popa
dec
push
arpl
and
movl
push
inc
mov
adc
pop
es
pop
mov
mov
cltd
adc
adc
lods
and
cmp
ret
mov
sbb
ret
xchg
mov
sahf
push
cmp
cmpsl
sub
jne
dec
je
and
jge
sub
mov
mov
pop
negb
das
mov
dec
lret
gs
lcall
les
loopne
xlat
clc
xchg
cmp
cmp
or
sahf
jg
inc
mov
add
test
cltd
jecxz
inc
xchg
out
or
fwait
sbb
xorb
sti
dec
mov
jbe
adc
cs
lret
sub
popa
add
mov
pop
dec
std
push
in
mov
aam
fwait
cld
add
insb
aas
pop
fdivs
pop
xchg
nop
fmulp
push
mov
outsb
iret
xor
jecxz
frstor
sub
mov
dec
loope
xchg
sub
and
sub
add
pop
scas
dec
and
pop
pop
mov
inc
xor
push
jbe
sbb
insl
adc
test
push
cmpsl
jp
iret
cwtl
lods
pop
out
test
lods
cmpsl
mov
std
mov
fildl
xchg
mov
inc
jne
xor
in
bnd
jnp
add
popf
sbb
cmc
aad
mov
filds
inc
sbb
xchg
shrl
in
es
sti
lret
sbb
ret
iret
hlt
pop
pop
push
pop
sbb
stc
lea
lret
adc
jge
fcmove
mov
pop
sub
fimuls
dec
nop
sub
xchg
xchg
push
mov
addr16
lahf
cmpsl
cld
and
xchg
loope
loopne
inc
add
dec
or
push
inc
rcrl
jbe
clc
cmc
xor
jae
lret
hlt
add
call
mov
xchg
or
mov
gs
or
lret
not
mov
lret
mov
mov
rcll
movl
scas
cwtl
mov
mov
pop
jb
pop
dec
cmp
xor
cmp
outsb
inc
pop
les
sub
jo
push
popa
sarl
jns
js
sahf
mov
insl
test
jns
jae
xchg
ja
xor
aad
test
clc
scas
sub
lea
mov
xor
sub
test
stc
mov
mov
or
cmc
cmp
mov
fwait
sub
mov
push
add
jmp
sub
fwait
adc
in
mov
rcrl
fcom
call
mov
xchg
lahf
pop
jmp
xor
arpl
xlat
jo
loop
call
jl
xchg
mov
cld
mov
mov
add
aaa
mov
jl
pushf
in
es
adc
mov
jns
pop
punpcklbw
jns
add
jp
outsl
xchg
cmpsl
and
mov
stc
cmp
mov
mov
lock
inc
fimuls
mov
jmp
inc
mov
jns
lock
sub
pushf
das
fistpl
nopl
daa
cmp
inc
lods
xchg
orl
aam
xchg
out
or
outsb
sub
lock
mov
insl
loope
or
or
dec
insl
aas
cmp
insl
movsl
stc
cltd
xchg
fsubrp
xchg
test
daa
stc
daa
xchg
insb
insb
out
ja
aad
insl
sbb
push
jo
xor
push
in
outsl
push
cmp
dec
sub
pushf
out
mov
mov
or
push
outsl
jb
inc
xor
push
scas
out
ret
jne
jne
out
and
xchg
push
jns
fdivrs
lret
jae
scas
ja
mov
cmpsb
dec
xchg
cld
push
ret
cmpsb
int
jl
xchg
sub
lahf
mov
and
bnd
cld
jl
nop
inc
rcrb
call
cld
sbb
dec
mov
mov
cli
mov
movb
cmp
test
xchg
imulb
andl
mov
jno
mull
test
int3
cmp
fists
pop
ror
movsb
jbe
test
fbstp
lock
mov
outsl
mov
pop
push
pop
and
cmp
lret
inc
mull
test
jae
repnz
sub
and
dec
mov
shrb
movsb
js
shll
mov
mov
std
push
mov
or
push
jle
sbb
outsl
jle
ja
movsl
xchg
neg
fstl
mov
movsl
lret
incb
lods
dec
mov
insl
lret
insl
inc
xchg
mov
lods
mov
push
std
or
mov
xlat
inc
push
xchg
fistpll
jns
push
pop
data16
mov
in
and
popa
pop
xlat
sbb
movsl
push
dec
mov
sbb
in
div
mov
mov
push
ja
sub
repz
adc
mov
int
push
push
mov
xchg
in
push
setl
out
out
inc
jg
in
push
outsl
xchg
je
sub
out
je
cmp
cld
int3
out
xchg
adc
jo
fadd
dec
jno
aaa
push
lahf
cwtl
mov
and
lahf
inc
sarb
leave
stc
push
in
mov
cmpsb
ret
mov
rolb
dec
adc
scas
rcr
inc
mov
jbe
dec
mull
add
repnz
mov
mov
clc
jp
or
xor
repz
cs
gs
addb
into
mov
push
jmp
iret
xchg
in
shrb
movsl
sbbl
jp
stos
push
dec
xchg
repz
xor
addl
push
in
add
clc
lea
jne
aam
push
lods
in
std
or
jnp
test
sub
lea
jo
push
xchg
jecxz
je
jo
inc
sub
mov
and
imul
and
and
xor
lods
stos
pop
adc
sbb
ja
or
test
adc
jle
xchg
enter
jge
and
pop
mov
scas
insl
lret
xchg
jne
ret
je
mov
adc
lods
adc
aam
xor
add
cmc
inc
pushf
xlat
data16
push
aad
sub
mov
test
sub
jge
fbld
jo
pop
inc
imul
and
inc
pushf
pop
addr16
addr16
loopne
fsubl
cli
and
cmp
idivb
sti
hlt
insb
pop
ja
add
roll
lods
sbb
and
dec
mov
cld
jnp
std
imul
dec
shlb
dec
movsl
leave
mov
adc
inc
jae
jnp
cmpsl
call
adc
fisubl
ret
push
jecxz
pop
cmc
orb
pusha
fstpt
aas
or
mov
andl
lods
push
jnp
pop
dec
fwait
or
fistpll
inc
pop
xchg
loopne
fstl
iret
in
pop
call
test
add
mov
xchg
xchg
in
fldt
cmp
jecxz
xchg
mov
and
cmp
xchg
cmp
mov
ficompl
push
jb
movsl
cs
aad
popa
sti
pop
dec
aaa
inc
sub
imulb
daa
gs
xor
adc
sbb
xchg
mov
ljmp
adc
in
pop
cmp
sub
orb
lods
scas
int3
push
sbb
sub
mov
int3
cmpsl
scas
sbb
lds
cmp
pop
loop
jb
std
push
pop
mov
sbb
adc
and
aad
shlb
loopne
push
sbb
cmp
fisttps
int
pop
sahf
add
jp
mov
pop
lret
inc
stos
inc
das
add
pop
loop
jge
fisubs
pop
aas
cmp
push
aad
cmp
sub
icebp
lcall
in
jno
icebp
or
out
movsb
or
push
insb
outsl
je
icebp
dec
add
inc
cmpsb
mov
fidivl
or
push
fisubl
sbb
jl
test
stos
jp
mov
inc
xor
push
movsl
cmp
andb
inc
and
out
call
mov
xchg
push
sti
imul
adc
adc
cmp
jae
pop
call
fidivrl
push
outsl
xchg
int3
cwtl
fidivs
mov
pop
ret
mov
rol
ljmp
out
sbb
mov
hlt
outsl
mov
test
cmp
or
sub
jmp
out
and
cmp
mov
pop
pop
mov
jo
sbb
dec
into
aam
pop
dec
sub
pop
xchg
xabort
or
cmp
adcl
add
adc
pop
popa
cmp
jno
aaa
popf
fiaddl
and
xorb
dec
popf
aad
mov
fcmovne
xor
aaa
jo
dec
mov
jb
jb
in
sub
mov
mov
sbb
insb
cltd
sti
sub
stos
push
stos
sbb
or
ret
ds
ret
sarl
sub
push
or
aas
jae
cld
xchg
and
sbb
sbb
and
jl
mov
and
out
push
cmpsb
sub
lcall
inc
inc
xor
les
clc
pop
jl
sub
mov
sub
bound
mov
jp
aas
movsb
push
mov
cmc
nop
push
orl
lcall
add
int
pop
adc
sarl
ljmp
xchg
sbb
pop
pop
xor
pop
sahf
add
out
jnp
cmc
daa
mov
stc
test
aam
aad
daa
pop
mov
cmp
imul
xchg
sahf
cli
cli
or
std
je
das
adc
jmp
jns
fwait
xchg
lods
inc
mov
fmulp
sarl
fnstcw
mov
iret
fisubl
pop
adc
jae
jge
shlb
add
mov
ss
mov
mov
mov
fiaddl
mov
push
mov
add
and
ja
pop
insl
out
out
int3
mov
lret
push
jno
test
dec
cmp
test
jbe
push
shll
pop
push
nop
jns
or
testl
popa
and
dec
xor
or
dec
fldt
fisttpl
daa
jge
pop
ret
lods
in
add
pop
and
lret
in
inc
cmpsb
sti
stos
push
ftst
sbb
mov
cmc
xchg
scas
jle
sub
mov
mov
or
nop
jecxz
rorl
adc
and
push
jecxz
xchg
lock
xchg
and
jae
arpl
popf
repz
push
fucomp
sub
add
ret
mov
xchg
jne
jns
cmp
push
cmp
orb
adc
push
xor
push
loop
shl
mov
mov
jl
repz
cld
push
or
scas
andb
pop
inc
mov
jno
jp
pop
mov
and
arpl
enter
sub
pop
test
in
popa
pop
push
ds
or
int3
or
iret
es
mov
sub
iret
in
xchg
stc
lea
push
stc
xor
or
sbb
jnp
ret
inc
ret
mov
stos
jns
xorb
aad
bound
mov
jbe
stos
testl
jnp
mov
into
sub
ret
and
fiaddl
testb
rorb
sbb
pusha
lds
es
imul
xlat
aas
push
daa
orl
fcmovbe
mov
mov
mov
sar
adc
push
jne
shlb
xchg
xchg
add
out
xor
xchg
dec
inc
pop
pop
adc
cmpsb
fyl2x
cld
nop
divl
daa
dec
adc
dec
arpl
leave
push
test
jns
pop
fldl
adc
xchg
xchg
dec
xchg
repz
std
incl
rorl
stos
xor
out
jp
and
test
scas
gs
insl
mov
das
xor
sbb
mov
call
into
js
push
jl
leave
cmp
mov
and
add
mov
jnp
jl
notb
gs
cltd
inc
adc
add
xorb
dec
sahf
insb
pop
jnp
mov
adc
out
jo
cmp
sub
inc
lret
pop
in
inc
ss
cmp
aam
adc
cwtl
adc
iret
sbb
or
rclb
xorb
mov
pop
clc
das
movsb
jp
pop
adc
xor
xlat
aas
xchg
es
sub
push
in
dec
es
add
mov
mov
xchg
xchg
and
dec
aaa
push
sbb
add
adc
mov
cmp
mov
jmp
mov
inc
in
dec
push
sub
cmpsb
into
inc
pop
rcl
jo
inc
mov
imul
push
fisttpll
mov
pusha
sbb
jg
lock
jo
pop
test
aaa
push
popa
add
cld
data16
jne
mov
jecxz
cmc
pop
mov
outsl
mov
hlt
aam
loope
test
arpl
push
repz
mov
and
xor
inc
lock
jmp
lea
sbbb
sbb
sbb
sti
bound
fcoml
sbb
xor
int3
fs
xchg
je
cmp
xchg
sbb
lods
sbb
push
scas
repnz
shlb
mov
lds
enter
and
int
or
xchg
add
sbb
xor
clc
mov
enter
int3
stos
mov
cmc
rclb
lldt
push
xor
inc
jno
movsl
decb
lret
pop
mov
or
cltd
mov
and
ss
push
out
push
bswap
mov
sahf
sbb
mov
in
xchg
into
call
pop
aas
repnz
jns
push
pop
inc
bound
or
jnp
pop
jb
and
aaa
movsl
or
inc
xchg
mov
in
jo
movsl
test
add
inc
mov
fisttps
ds
pop
in
fnsave
or
mov
aaa
and
das
lahf
fneni(8087
pop
jo
push
cmp
jl
call
cmp
mov
and
dec
int
push
std
mov
sbb
fimuls
xlat
jg
pop
jmp
cmpsl
mov
sbbb
scas
jnp
push
fimull
sub
or
push
jno
add
jle
mov
loope
add
and
push
rcrl
call
mov
adc
int
push
or
sub
sub
into
int
in
pop
xor
out
into
fwait
and
adc
mov
call
shll
mov
xor
push
fcompl
fcmovb
roll
sub
cmpsl
xchg
fnstenv
sub
ds
fmulp
daa
fdivr
test
mov
jge
popf
ret
cmp
inc
cmpsl
out
mov
push
into
stc
push
xchg
pop
test
and
in
fidivrs
gs
jmp
sub
mov
or
shr
pop
lds
scas
push
add
out
in
jb
sbb
ljmp
sub
js
addr16
inc
add
iret
sbb
add
enter
jp
insb
fdivr
fstp
jge
ret
xchg
lret
testl
iret
outsb
faddl
cs
cmc
stos
lods
clc
mov
fwait
inc
sub
mov
out
bswap
mov
jg
insl
jle
clc
sbb
add
les
imul
mov
xorb
lcall
pop
jge
test
rcrl
xlat
ret
push
pop
fisttpll
jo
movhps
cmp
sahf
popa
push
cltd
mov
mov
pop
dec
es
push
push
and
out
xor
xchg
lea
dec
test
cmpsl
cmp
out
jo
nop
cmp
loopne
mov
mov
xlat
mov
movsl
lret
adc
aaa
push
outsl
mov
dec
out
loope
pop
mov
inc
inc
xor
sub
cmpsl
push
les
dec
xchg
xor
adc
adc
std
fs
mov
inc
sarl
mov
inc
das
test
adc
mov
lret
mov
mov
push
xchg
pop
clc
mov
ds
je
in
jp
mov
pop
sbb
aad
mov
aad
push
cld
dec
fidivrl
jb
jo
jecxz
cmpsl
jp
mov
cmpsl
mov
sbb
inc
or
fs
js
pop
mov
popf
xchg
nop
pop
popf
cmp
mov
pusha
testb
in
das
pusha
lods
aas
bound
leave
sbb
mov
xlat
mov
lock
enter
pop
mov
jp
mov
add
ljmp
divb
push
mov
or
mov
sbb
dec
mov
scas
adc
int3
je
out
mov
js
mov
jbe
xchg
addr16
and
mov
jmp
cmp
pop
mov
inc
push
inc
mov
adc
lret
xchg
out
arpl
pop
push
xchg
push
int
mov
js
rolb
les
sti
outsb
stos
add
arpl
lds
push
cltd
push
in
imul
and
lds
pop
mov
js
fwait
cwtl
rorl
push
inc
jno
jbe
push
in
nop
lds
or
dec
loopne
lret
iret
mov
stc
decl
js
cli
push
lcall
test
fisubl
and
adc
sbb
stc
cmp
movsl
pop
mov
mov
popf
insl
pusha
dec
lret
inc
data16
mov
inc
lods
cltd
enter
test
or
mov
cmp
shll
repnz
ret
fists
fs
xor
jmp
jnp
or
jmp
push
or
jb
testl
cmp
pop
iret
rclb
cltd
xchg
lods
mov
mov
popa
pop
mov
std
daa
dec
repz
rolb
push
lock
pushf
lods
stc
sarb
inc
jo,pn
sarl
adc
mov
or
mov
xlat
mov
lock
repnz
mov
dec
jo
pop
sub
insl
xchg
aaa
ds
jmp
cmp
in
cmp
xchg
in
es
push
xor
jg
lea
mov
and
fwait
sbb
ret
call
jo
popa
and
xchg
or
loop
test
and
xor
call
pop
cwtl
cmp
push
je
xchg
lods
mov
ret
pusha
or
repz
aas
aam
ss
pop
push
sahf
jmp
or
ds
xchg
mov
jl
xor
dec
lods
or
icebp
repnz
out
lret
pop
or
push
sub
mov
mov
cmp
sub
and
pop
js
std
fstpt
ljmp
mov
out
mov
jmp
push
xor
mov
cmp
push
jbe
aas
mov
xor
adc
fisubrl
andb
push
ret
mov
and
rolb
sub
mov
dec
mov
xor
orl
dec
mulb
jne
mov
adc
into
inc
xor
icebp
sahf
or
push
std
inc
xor
push
add
mov
jb
ret
jb
jne
add
insb
ficoml
mov
data16
nop
cli
in
pop
loope
cmp
rcrb
sbb
cmp
icebp
mov
cmp
dec
std
jl
inc
loop
int
mov
fcmovnbe
cltd
pop
outsl
pop
mov
jmp
adc
movsb
in
inc
dec
dec
gs
loopne
insb
fsubrs
jno
fs
test
jns
cmpsb
popa
add
push
sbb
jecxz
cmp
mov
fucom
cmp
rcll
push
push
jg
xchg
push
push
mov
bound
into
pop
mov
dec
cmpsl
nop
jp
xor
or
es
int3
ret
fwait
pop
das
test
lahf
decb
out
stos
call
add
adc
mov
adc
pop
ret
loopne
in
mov
or
xchg
mov
jb
inc
add
in
add
xchg
shl
ja
aas
ss
push
bound
pop
movsl
dec
xor
int3
xchg
pop
push
and
stc
xor
push
xlat
nop
inc
gs
clc
sbb
inc
clc
or
loopne
lods
and
pop
push
loopne
dec
sbb
jbe
dec
push
and
lret
xchg
adc
repz
adcl
mov
push
inc
mov
cmp
sub
mov
in
add
xor
push
out
test
in
sbbb
pushf
mov
xchg
lret
lret
int3
out
xchg
loopne
outsl
pop
and
mov
in
inc
inc
mov
loopne
pop
inc
and
psubq
push
testl
dec
int
add
inc
push
cmp
push
test
testb
xchg
jl
ret
jne
xor
outsb
xchg
div
inc
int
dec
scas
sbb
xor
dec
sbbl
enter
data16
fbstp
xor
add
cs
mov
sbb
sbb
jbe
aad
push
xor
pop
lret
or
push
adc
mov
pop
adc
int3
jl
inc
faddp
lahf
mov
push
cld
cwtl
push
inc
into
rcr
cmp
xor
call
jg
jb
mov
sub
xchg
sbb
scas
mov
xlat
sbb
mov
repnz
mov
xor
xlat
outsb
inc
insl
out
int
sub
add
cmpsl
out
mov
aam
arpl
fmull
lcall
and
xlat
mov
mov
out
rcrl
insl
sub
sbb
scas
into
decb
mov
add
fwait
adc
in
or
mov
hlt
in
mov
je
xchg
outsb
shl
in
iret
jmp
sahf
ss
mov
lcall
ss
mov
mov
loopne
addr16
pop
repz
sbbb
dec
fdivrs
or
push
or
insb
fs
js
imul
mov
pop
loop
dec
pop
xchg
sbb
lret
imull
adc
out
dec
or
sub
push
xor
sub
push
int3
jg
and
mov
sbb
cmp
push
scas
push
jmp
and
mov
mov
adc
scas
iret
in
jmp
stc
mov
push
xchg
fwait
adc
mov
xchg
push
movsb
bound
pusha
and
gs
sahf
aas
and
sbb
inc
imul
pop
xor
mov
jo
bound
xor
cmpb
repnz
jp
add
dec
cltd
cmp
in
js
and
mov
scas
xchg
lahf
add
outsb
leave
es
jg
ds
pop
inc
aam
nop
iret
jnp
ljmp
fcmovne
xlat
test
cmpsl
dec
xchg
popf
rcrl
xchg
add
sub
das
jno
out
xchg
aaa
cltd
rorb
dec
les
mov
xchg
dec
push
idivb
cmc
clc
xor
pushw
movsb
mov
imul
pop
jge
ja
and
pop
ss
mov
flds
xor
mov
pop
inc
mov
ljmp
inc
jmp
cld
hlt
pop
cmpsl
push
pop
popf
call
add
or
lods
les
jg
push
mov
int
lea
popa
push
insb
iret
fwait
mov
icebp
cld
push
ss
sub
hlt
rorb
lret
or
pop
dec
mov
dec
pop
xor
mov
sti
add
sbb
mov
test
mov
repnz
mov
shrl
jp
das
mov
cmp
ljmp
push
shll
jnp
fcmove
mov
sahf
rorl
sub
mov
or
sbb
pop
lcall
lods
out
sar
imul
std
test
xor
push
jp
ret
adc
pop
fucomi
fs
mov
or
sub
and
test
popl
push
xor
fcmovnu
lret
fisubs
aas
add
mov
std
pop
mov
repnz
loop
add
xchg
xchg
addr16
add
sub
mov
divb
or
hlt
insb
cmp
mov
cmpsl
test
pop
sarl
cmc
adc
stos
ss
and
xchg
pop
lea
jo
int3
or
xchg
fimuls
and
in
addr16
jmp
repz
insb
push
push
sbb
insl
jg
xchg
movsl
lret
daa
loop
sub
in
test
testl
sahf
sub
pop
dec
sub
mov
pusha
push
mov
push
jns
mov
adc
dec
fnstenv
push
movb
dec
stos
xor
arpl
cmc
xor
dec
add
cwtl
jle
sbb
mull
sar
sbb
ja
lds
mov
das
adc
out
clc
test
sub
imul
js
cmpsb
pop
out
aam
push
arpl
cmp
cmpsl
daa
dec
stc
cmp
sti
out
popa
dec
mov
push
pop
gs
fs
jno
daa
xchg
mov
lods
xchg
push
or
mov
jg
sub
jl
mov
in
pop
sarl
mov
repz
xor
insb
stc
in
xchg
sub
mov
ds
nop
fdivr
ss
movsb
int
movl
outsb
fildl
andb
in
mov
fistps
cmp
lret
in
pop
pop
inc
push
push
push
outsl
mov
dec
jo
je
imul
xor
mulb
sub
data16
push
pop
jno
inc
jmp
pushf
jl
or
aad
out
mov
push
popa
xchg
adc
pop
jnp
cmpsb
mov
popf
jge
movsb
mov
clc
cmp
xorl
popf
shrd
sbb
cmp
sub
mov
xor
pop
stos
pop
push
dec
push
data16
mov
das
lahf
das
out
jne
aaa
adc
and
jle
in
in
rorb
insb
mov
push
popf
loop
lods
call
sub
aas
in
jg
into
jl
mov
orl
xchg
je
cmp
cmp
mov
jno
inc
push
push
mov
scas
dec
dec
push
aad
dec
iret
test
xor
cmc
inc
and
js
fistpl
push
cld
mov
mov
sub
lds
jg
jns
rcrb
or
sahf
mov
mov
jmp
push
jb
cld
insb
sbb
cwtl
insb
lret
add
add
sub
sub
leave
ja
scas
pop
push
leave
aaa
aad
mov
mov
test
aaa
mov
into
outsl
pop
mov
xor
cltd
rcrl
sub
call
push
popf
cmp
jo
hlt
scas
fs
pop
or
ret
pop
push
jle
clc
jg
pop
mov
sbb
xor
adc
ljmp
and
stos
arpl
adc
cmp
scas
add
repz
and
push
pushf
mov
xlat
dec
adc
mov
daa
mov
jecxz
xor
or
out
shl
push
and
repz
and
sbb
dec
cmp
mov
movsb
icebp
sbb
lds
and
scas
xor
pop
xchg
adc
add
mov
cmp
jae
int
jno
jo
mov
add
inc
aam
mov
mov
jg
pop
movsb
std
xchg
test
mov
sarb
adc
mov
jge
xchg
push
test
push
and
ficoms
fwait
jbe
or
test
cmp
jmp
push
xchg
pop
out
add
cli
sub
sti
cmpsl
add
mov
fisttps
sarl
leave
xchg
mov
xchg
inc
or
js
jae
jmp
lahf
scas
push
jl
push
in
jae
jl
jae
or
jecxz
shrb
arpl
fildl
xchg
lret
cmp
ficomps
ret
and
outsb
dec
or
inc
push
imul
cli
add
add
jmp
cltd
imul
inc
push
fadd
cmp
dec
gs
mov
cmp
je
mov
das
push
and
das
mov
jns
in
mov
cmc
lea
cmpsb
sahf
lahf
adc
and
xchg
in
adc
dec
lods
aam
push
mov
loopne
push
out
jae
push
lcall
inc
jne
nop
out
push
fcmovbe
enter
dec
cmp
bound
jb
sahf
adc
outsb
test
leave
mov
adcl
ret
adcl
adc
xor
and
and
int3
insl
stc
daa
mov
lret
xlat
xchg
mov
xor
lods
stos
dec
mov
jbe
sub
cmp
dec
addr16
push
imul
and
popa
aaa
sub
and
adc
xchg
jbe
push
sti
out
cmp
shrl
clc
cwtl
sbb
outsb
outsl
adc
sbb
xor
inc
outsl
or
mov
add
mov
dec
mov
inc
popa
enter
or
popa
divl
cmpsl
add
jge
push
mov
popa
fs
addr16
sub
sub
iret
data16
ljmp
push
pop
pop
sbb
cmp
adc
das
inc
mov
daa
mov
out
jmp
fstl
mov
mov
push
fcmovnbe
ficomps
cmpsb
mov
xchg
add
cmp
andb
maxps
shr
cs
lret
fs
shl
sbb
cmc
sub
outsl
clc
fadd
pop
xchg
jne
inc
xchg
pop
xor
shlb
je
jo
daa
lret
xor
and
lds
cmpsb
mov
mov
sbb
cmp
into
jbe
cmp
mov
cmp
int3
fildl
insb
pushf
imul
icebp
stc
push
dec
aas
sbb
push
je
pop
xor
lea
sarl
xchg
jp
fcoml
jne
mov
cmp
push
dec
cmp
pop
xchg
push
ljmp
xchg
pop
push
mov
xor
aas
ss
scas
fbld
pushf
xchg
and
mov
dec
add
out
mov
push
sub
les
repz
cmc
pop
mov
mov
mov
mov
add
jo
and
adc
out
mov
push
mov
sbb
mov
jle
inc
dec
insl
mov
and
ror
cwtl
adc
push
ret
or
jle
cltd
xchg
addr16
dec
stc
jo
xchg
pop
xlat
dec
inc
ret
int3
pop
js
sbb
insl
daa
xor
mov
lret
mov
sub
mov
inc
loop
ficompl
add
sub
add
xor
movl
xchg
inc
out
cltd
xchg
sbb
push
fstpl
and
inc
xchg
rcrl
dec
and
adc
add
fimull
mov
cmc
mov
aaa
lods
out
sub
dec
ficomps
mov
imul
inc
cmpl
mov
gs
in
inc
fdivrp
cwtl
and
push
arpl
mov
pop
sbb
nop
clc
out
sbb
and
aas
mov
adc
inc
xor
repnz
add
jge
mov
mull
xchg
outsb
imul
ss
iret
jb
jle
pop
jp
test
das
mov
fwait
adc
popa
mov
sub
xchg
push
cmp
mov
iret
adcb
mov
cli
mov
add
test
aam
and
push
scas
leave
mov
adc
push
jl
ds
imul
mov
int3
mov
callw
scas
aaa
push
inc
mov
test
inc
das
mov
add
ljmp
sbb
ds
shrb
sub
dec
mov
fsubs
sbb
cltd
mov
in
add
sbb
movsb
cmpsb
fidivrs
inc
jmp
in
sbb
pop
mov
sub
inc
mov
rolb
movsl
and
push
mov
mov
jge
test
call
stc
shll
push
xchg
jno
insb
cmc
dec
ljmp
cmc
shll
cmp
push
cmp
test
or
clc
das
add
in
and
in
aad
jl
cmpsb
mov
jo
push
pushf
push
inc
test
add
mov
loop
fcmovbe
test
imul
adc
and
into
sub
and
mov
into
mov
popa
scas
rcrb
jmp
push
in
pcmpeqd
mov
xchg
stc
into
add
rcr
loopne
and
sub
call
pop
jg
pusha
mov
jbe
push
loopne
stos
xor
lret
sbb
in
pop
sahf
out
add
jecxz
cmp
jns
inc
push
cld
inc
test
jno
pop
cmp
push
add
fiaddl
data16
pushf
mov
movsl
mov
jae
aaa
setns
std
data16
sbb
test
out
xor
imulb
jl
xchg
sbb
mov
push
andb
and
or
sbb
sub
dec
sub
mov
rcll
inc
das
and
or
jp
dec
xchg
imul
xlat
inc
rolb
sub
lea
outsl
mov
push
sbb
add
insb
add
pop
dec
adc
movsl
outsb
stc
xchg
fwait
stc
mov
fnstcw
nop
or
jno
je
inc
and
ds
xor
xchg
jns
sbb
add
dec
imulb
cmpsl
sub
clc
pop
and
dec
in
cltd
push
faddl
divb
mov
lcall
fidivrs
orl
pop
lahf
xorb
adc
lret
adcl
push
aad
pop
aas
inc
daa
mov
sahf
adc
hlt
adc
ud1
mov
push
pop
xchg
fbstp
mov
adc
and
jg
sarl
cmp
dec
xor
loope
push
mov
loop,pt
dec
movsl
shrl
daa
xlat
imul
fcmovne
inc
inc
hlt
dec
mov
sbb
lahf
adc
lret
mov
or
add
cmp
xchg
fidivl
jo
dec
iret
clc
pop
jge
stc
in
mov
int
xchg
push
das
adc
xchg
js
push
mov
pushf
dec
clc
aaa
out
adc
jae
sub
add
adc
pop
ret
or
push
mov
push
popf
adc
in
shl
mov
fcomp
push
aas
inc
or
and
inc
push
sti
xchg
xor
enter
add
cmp
idivb
inc
cli
xchg
leave
jp
les
push
mov
xchg
sahf
ja
sbb
pop
jmp
push
scas
or
inc
add
add
mov
mov
cmc
incl
aaa
sub
sbb
test
lea
popa
outsb
cli
popa
and
loopne
stc
push
add
clc
mov
hlt
cltd
icebp
push
adc
sub
xchg
imul
out
ret
inc
xor
cwtl
das
je
loopne
cmp
push
test
cmpsl
inc
in
sub
popa
rolb
in
add
loope
jmp
mov
jne
addr16
push
lcall
fistps
jg
imul
daa
cmc
fnstcw
int3
mov
in
test
int
pop
lds
ljmp
inc
das
test
scas
mov
fstps
arpl
cli
adc
jae
lcall
mov
in
scas
rcrb
out
inc
pop
loope
bound
popf
xchg
cs
rcll
rcl
icebp
push
filds
sbb
or
mov
mov
movl
fiadds
xor
stc
js
jns
and
cwtl
mov
and
jmp
pop
and
push
push
scas
sub
cli
mov
inc
xor
cmp
mov
xchg
xor
rcrl
and
mov
dec
mov
sbbb
push
pop
aaa
orb
jl,pn
and
leave
subl
repz
push
pop
idivb
div
scas
ficoms
jae
ficomps
rol
jp
inc
loopne
cmp
jmp
int3
xchg
sti
xchg
dec
sub
enter
in
sbb
mov
out
push
xchg
xor
push
stc
and
xchg
sub
dec
jle
nop
mov
push
idivb
in
sbb
leave
sbb
jmp
rclb
outsb
loop
out
or
scas
call
lret
fdivrl
test
xor
loope
sub
sub
adc
pop
stos
je
dec
rclb
push
loope
sahf
lahf
xorb
pop
dec
cmp
pop
filds
sbb
cld
movsl
push
dec
jb
dec
js
mov
lds
data16
movsb
jb
std
jp
incl
inc
mov
incb
hlt
andl
mov
inc
cmp
xor
out
sbb
mov
inc
leave
and
repnz
mov
mov
mov
aam
and
iret
sbb
test
in
jno
lods
xchg
rorb
adc
andb
jecxz
fdivl
pop
mov
and
test
add
xor
push
add
cmp
xor
push
dec
mov
xor
mov
in
and
lods
clc
insl
mov
mov
jnp
sbb
xchg
adc
test
xor
icebp
xchg
xchg
loope
stc
and
add
out
loopne
dec
push
inc
dec
inc
rorb
repz
sbb
repz
outsb
xor
aad
fnstcw
add
xchg
in
movsl
ret
adc
lret
mov
cmp
or
popa
shrb
mov
push
adc
lret
cltd
push
push
clc
xor
fisubrs
cs
inc
jbe
sti
pop
jae
fists
imul
or
cs
inc
ds
iret
aas
and
arpl
std
jae
ret
inc
inc
jge
repz
mov
aaa
xchg
jg
call
pop
cmp
movsl
outsb
movsb
lods
cmp
and
fdivs
cmc
sub
data16
cmc
ljmp
mov
and
pop
fisttpl
mov
ljmp
and
lods
adc
inc
jl
fwait
mov
ret
dec
add
inc
scas
xlat
and
jp
inc
xchg
dec
jge
add
push
add
xchg
inc
sbb
sbb
ja
int
cmp
cmp
notl
js
mov
sbb
mov
lret
cld
cmp
shl
jo
push
out
dec
xchg
sbb
mov
hlt
inc
mov
mov
in
mov
jne
repz
xor
inc
fcmovnbe
lods
call
mov
inc
mov
pop
lock
pop
pop
push
mov
aad
and
test
xor
sahf
dec
and
mov
lahf
test
mov
imul
rcrb
jecxz
pop
dec
mov
mov
outsl
pop
jnp
outsb
cmp
sbb
dec
lcall
dec
iret
jno
gs
xchg
ret
clc
ja
cli
shl
es
jae
and
sub
pop
jb
int3
sbb
mov
in
cmp
cmpsb
and
and
arpl
adc
addr16
pop
mov
stc
and
dec
inc
jns
data16
sbb
add
das
push
int3
pop
lds
push
xor
dec
inc
pop
mov
or
inc
fimull
ret
rorb
dec
rorl
fcoml
gs
imul
jb
or
mov
pop
xor
ret
repnz
jp
xchg
jmp
mov
pop
rolb
fwait
jb
or
cmpsl
in
mov
xor
cmp
pop
in
cmpsb
mov
inc
xchg
or
sbb
aaa
mov
pop
push
jae
cmpsl
adc
sbb
cld
scas
inc
rcrb
stos
push
inc
por
sti
addr16
pop
aas
movsb
push
or
inc
test
loop
xor
dec
cmp
xchg
cwtl
or
enter
dec
jno
in
cld
cmpsl
movsb
mov
pop
or
cmpsb
push
or
add
add
sub
inc
xorl
push
mov
fnclex
inc
sub
mov
mov
and
sub
lret
jb
in
and
or
pop
insl
cmp
insl
mov
push
cmp
dec
pop
popa
popf
fldl
scas
pop
rorb
fwait
add
sub
jle
leave
mov
pop
xchg
imul
jb
jmp
jle
ret
cmpsl
insl
cmp
jo
cmp
sub
xor
adc
jecxz
inc
out
and
scas
sar
sarl
pusha
push
and
and
fnsave
add
adc
lret
add
sbb
rolb
mov
xor
out
push
daa
xor
jge
jo
shl
fsubrs
in
js
cmp
scas
bound
and
push
mov
mov
mov
pop
ja
mov
mull
js
icebp
clc
dec
loope
arpl
xor
sub
xchg
lods
leave
outsb
mov
xlat
hlt
dec
pop
inc
pop
iret
leave
mov
mov
roll
shll
inc
dec
add
outsl
sahf
xchg
in
pop
jecxz
outsl
xchg
mov
daa
sbb
jle
sbb
cld
outsl
and
out
xchg
inc
xchg
jcxz
fbstp
or
pop
out
in
pop
add
jmp
or
and
sub
pop
push
loop
push
mov
cltd
sbb
aaa
xor
jnp
cmp
fimuls
std
push
insb
mov
jmp
mov
xor
outsl
pop
lods
mov
test
cmp
or
test
jns
fs
lods
jno
fldl
mov
mov
xchg
sbb
mov
or
clc
xchg
cmp
fldl
mov
out
loope
loop
mov
jns
xlat
call
arpl
sahf
dec
icebp
or
xchg
sbb
ds
add
cmp
push
add
mov
aad
sbb
xchg
inc
lea
inc
sub
adc
movsb
call
add
fldenv
movsl
outsb
shl
mov
jecxz
jne
insb
aas
sbb
into
and
lods
dec
cli
mov
test
or
jbe
das
rdpmc
xchg
dec
lea
xorb
jo
mov
stos
cld
loopne
sub
scas
and
xchg
fisttpll
xor
negb
pushf
in
pop
push
mov
or
inc
inc
popf
rcll
mov
jmp
aaa
arpl
xor
sub
mov
loopne
stc
adc
push
rorl
les
inc
les
nop
sarb
adc
stc
push
xor
addl
mull
cltd
mov
repnz
pop
pop
mov
iret
cmp
adc
adc
dec
jle
out
movsl
in
fistps
js
push
or
fistpl
test
test
cwtl
mov
xor
mov
xchg
pop
add
pop
ss
int
jp
mov
rorb
clc
ds
pop
mov
jp
lods
es
adc
cmpsb
or
cmpsb
xchg
mov
mov
dec
inc
daa
in
loopne
aaa
stc
in
insb
iret
dec
js
mov
mov
mov
dec
stos
loop
add
mov
or
or
dec
dec
fst
adc
add
cld
xchg
mov
outsl
xchg
lcall
push
push
int3
xchg
add
lods
mov
test
mov
scas
mov
and
jmp
lahf
inc
mov
xchg
push
jle
and
ffreep
jp
negl
stos
sbb
push
dec
imul
ss
fwait
pop
add
push
jge
cltd
jae
clc
imul
add
nop
jb
adc
ficompl
popa
cld
add
xchg
jb
jns
jno
lea
ret
inc
push
jo
mov
bound
unpcklps
scas
lret
movsb
dec
lret
lods
xor
mov
mov
sbb
sbb
stc
nop
movsl
out
out
or
fldenv
andb
testb
imul
push
lret
das
xchg
mov
arpl
xchg
xlat
mov
jo
mov
xchg
scas
loope
clc
aas
jp
test
adc
push
fidivrl
sub
fwait
ljmp
out
xchg
out
je
lods
mov
jmp
dec
ret
out
cltd
inc
daa
notb
jo
std
scas
cld
into
inc
pop
sbb
in
jecxz
rol
cmpsl
cmp
jle
dec
add
add
cltd
loopne
ret
inc
mov
aaa
jecxz
stc
add
xchg
pop
adc
push
add
cwtl
loopne,pt
pop
or
sbb
cmpsb
mov
lods
push
sbb
inc
pop
jne
dec
sbb
lods
les
lret
mov
sbb
pop
cmp
lock
push
mov
mov
mov
cmp
sbb
imulb
test
cmp
jge
nop
ljmp
inc
in
imull
sub
loope
sbb
and
insl
mov
mov
and
adc
mov
repz
push
push
in
inc
add
mov
outsl
cmp
dec
pusha
leave
out
xchg
cmpsb
inc
mov
add
rol
dec
adc
dec
daa
jbe
and
lret
mov
adcb
imul
pop
jle
or
mov
xor
gs
rclb
arpl
std
lret
scas
add
or
scas
lea
mov
orl
push
jp,pn
mov
out
cmc
outsl
jmp
mov
lcall
xchg
xchg
imul
sbb
sub
out
clc
pop
mov
mov
adc
out
movsl
fsubs
iret
jbe
aaa
out
js
push
icebp
mov
mov
add
dec
ss
subl
mov
mov
jmp
jne
push
xlat
out
jle
push
dec
popa
fsubrl
out
mov
pop
into
loopne
dec
loopne
mov
test
push
cwtl
dec
outsb
call
adc
pop
adc
leave
fisubrl
sbb
mov
add
rclb
mov
fildl
fnsave
dec
in
je
in
jge
xor
inc
mov
xchg
shr
xchg
lock
loope
fwait
inc
cld
pushf
lods
arpl
call
shlb
out
and
cwtl
mov
or
or
jge
mov
mov
ja
aad
lahf
pop
jne
push
rcl
mov
cmp
jne
and
aam
mov
mov
pop
and
push
add
sbb
rcrl
sub
jb
int
fadds
pop
outsl
xorb
xor
out
xor
adc
inc
pop
adc
dec
into
fstpt
push
sbb
cmp
xchg
bound
push
iret
into
test
mov
hlt
movsl
inc
sbb
int3
mov
sti
rcll
mov
cmp
mov
xchg
cli
push
jnp
sub
xchg
xchg
inc
dec
lods
fistl
mov
addb
scas
aas
rcll
testb
xchg
jae
sbb
scas
gs
mov
lret
jp
movsb
adc
mov
aam
push
jae
or
pop
loop
clc
xchg
mov
adc
sahf
cmp
dec
jnp
dec
in
jne
dec
adc
mov
and
inc
and
imul
out
repnz
or
insb
lret
push
pop
mov
add
inc
lret
addr16
lock
jnp
pop
inc
sbb
orl
data16
nop
add
dec
jo
bound
fidivrs
ret
push
std
xor
scas
jo
dec
hlt
xor
mov
inc
inc
les
push
add
sub
pop
cmp
jno
or
out
call
mov
aas
mov
and
cltd
popa
stos
adc
sbb
mov
or
mov
test
xor
xor
sbb
lea
jmp
mov
sti
lock
shl
jle
or
sbbl
jo
les
popf
adc
outsl
lods
cmp
mov
xchg
icebp
mov
inc
stos
insb
push
and
pop
mov
mov
mov
dec
push
mov
lods
arpl
daa
gs
jecxz
insb
dec
jge
jl
xlat
fildl
cltd
or
mov
jnp
pop
rcl
test
push
dec
cmp
xchg
jne
aaa
loop
bound
push
inc
sub
aas
or
aam
scas
insl
push
hlt
jnp
sbb
xchg
inc
mov
push
pusha
pop
and
repnz
call
inc
clc
dec
mov
ret
pop
cmpsl
xchg
sti
adc
adc
shrl
push
adc
out
lcall
aaa
mov
pushf
dec
mov
xor
loopne
fld
pop
mov
mov
popf
rcr
les
mov
xor
out
fnstsw
rcrl
cli
jecxz
fs
mov
xorb
scas
call
mov
lahf
in
mov
ret
sub
dec
fwait
xor
jae
pop
mov
addl
lcall
inc
test
xchg
ret
mov
cwtl
adc
repnz
imul
fists
cmp
jmp
or
dec
pusha
adc
mov
es
xchg
jo
jg
insb
push
stc
xchg
loop
lcall
mov
jecxz
push
adc
xchg
mov
rclb
sbb
dec
orl
int
das
repz
or
dec
mov
and
fiadds
ja
adc
shll
fwait
cmc
lock
add
jnp
and
call
and
outsb
pop
movsb
push
adc
popa
push
inc
iret
or
stos
cmp
mov
push
aad
sub
inc
cwtl
inc
pop
sub
pop
pop
out
sar
adc
insl
mov
pushw
and
mov
jns
adc
cmpsb
sbb
leave
jns
rorl
push
rcl
sbb
rcrl
adc
pop
addr16
push
cmpsb
ret
int
mov
lods
out
mov
sub
bound
push
test
pop
sbb
fmulp
push
jae
pop
leave
jne
mulb
mov
dec
hlt
fsubrs
pop
mov
or
xor
mov
call
ss
cmp
mov
in
out
inc
jmp
test
and
ficoms
inc
mov
subl
pop
in
icebp
enter
sub
mov
loopne
mov
jne
shl
fisubs
pop
add
cmp
lds
jecxz
mov
inc
xor
movsl
cmp
xchg
leave
adc
subl
jae
xlat
stc
and
mov
jnp
cmpsb
sbb
mov
cmp
outsl
xchg
fsub
loope
mov
lds
test
xchg
jno
sbb
out
jbe
in
shlb
fwait
int
loope
inc
jmp
cmp
inc
xchg
sub
cld
stos
jmp
shrl
sbb
pop
test
fimull
sub
loop
lea
adcl
pop
xchg
sub
mov
xor
cwtl
dec
and
push
inc
add
adc
enter
stos
inc
lcall
jb
jp
movsl
mov
repz
and
add
cmp
fstl
cltd
jmp
push
sbb
test
add
fsubrs
jne
jg
dec
adc
fistpll
sbb
push
mov
insl
xor
insb
mov
pop
lods
xor
add
movsl
fstpl
mov
jae
jne
fwait
push
cmpsb
push
mov
out
add
fs
mov
xchg
ret
iret
mov
into
adc
test
lret
xchg
push
out
sub
cmpsb
add
repnz
mov
add
mov
sbbl
lock
mov
lods
pop
sbb
dec
or
jbe
pusha
addr16
cmpsb
inc
idivl
sub
mov
push
push
cmc
fadds
scas
adc
into
das
sub
insb
push
mov
stos
pop
sbb
pop
outsl
loopne
jbe
mov
push
mov
lods
out
and
cmpsl
sub
fcoms
std
sahf
sub
cmpsl
mov
jl
ds
movsb
sti
jmp
mov
xor
xchg
sbb
aad
push
jne
push
je
test
or
dec
lahf
mov
pop
mov
cmc
std
mov
cmp
xchg
sbb
xchg
ret
mov
outsb
mov
es
shll
jne
fs
inc
gs
jne
sbb
inc
test
or
xchg
xchg
xchg
enter
cmp
popa
mov
daa
insl
jae
jp
xor
fwait
pop
arpl
push
ret
jo
and
xorl
rorl
xlat
mov
test
mov
stos
mov
imul
xlat
and
dec
mov
push
lcall
adc
ds
lods
jne
mov
in
movsl
mov
and
cltd
add
int3
cwtl
push
outsb
cltd
and
movl
or
lahf
cmp
cwtl
jne
std
mov
mov
inc
inc
adcl
orl
lcall
adc
lcall
and
mov
cmp
cmpsl
scas
cmpl
out
jp
xor
pop
std
mov
adc
dec
and
stos
mov
add
cli
imul
pop
sarl
cld
mov
mov
es
test
cmp
push
ds
xor
fs
jb
add
cli
pop
mov
movsl
pop
fbld
lods
iret
xchg
ljmp
out
incb
adcl
push
inc
sbbb
sbb
jecxz
push
aaa
and
mov
or
call
ja
daa
lahf
lods
push
mov
iret
or
add
loop
sbb
mov
jle
sbb
loopne
jmp
daa
enter
jo
xchg
pop
std
cld
stc
push
fsubs
int3
mov
or
loope
mov
inc
and
fcoml
int3
jne
shl
idivl
sti
or
cmp
icebp
inc
les
jbe
int3
mov
mov
mov
aam
add
jg
jnp
lods
enter
jp
jne
cs
or
mov
cmp
cmp
jnp
xchg
scas
jmp
fdivr
push
adc
xchg
mov
cli
fidivrl
push
cmp
inc
fwait
pop
shrb
ret
push
pop
dec
test
pusha
fistpl
jbe
ret
fdiv
push
mov
jecxz
xchg
out
decl
pop
inc
push
mov
nop
dec
push
out
inc
adc
and
pop
bound
popa
iret
mov
pop
dec
imul
inc
pop
fimull
mov
jae
mov
adc
out
push
dec
shll
pop
adc
rorb
dec
dec
scas
fnsave
in
and
hlt
pop
add
push
addr16
lcall
pop
pushf
add
jno
or
ljmp
out
add
mov
fidivrl
hlt
and
enter
dec
mov
cmpsl
fadd
add
mov
jge
stos
rcll
mov
insl
and
adc
dec
dec
jecxz
fistpl
mov
dec
or
mov
leave
pop
pop
xchg
sub
xchg
mov
std
fdivs
scas
scas
sub
repz
push
mov
ficoms
imul
nop
sbb
aas
mov
ja
call
popl
lock
in
dec
mov
push
mov
arpl
push
jecxz
cmpsb
xchg
dec
shll
aas
adc
nopl
sbb
repnz
dec
mov
neg
test
mov
imul
adc
repnz
jne
nop
mov
jo
cmc
push
inc
fsubr
scas
push
xor
decb
xchg
jp,pn
jl
adc
scas
imull
rcr
adc
pop
add
adc
pushf
mov
call
mov
fcomp
jmp
inc
lock
add
mov
and
cmp
es
out
test
ljmp
add
std
ljmp
add
mov
subl
xorl
push
int3
repnz
mov
sbbb
stos
dec
repz
lcall
insl
in
lds
cltd
mov
jmp
cwtl
fdivrs
xbegin
hlt
in
xor
xor
pop
mov
inc
jno
notb
imull
dec
jle
jb
faddl
mov
shlb
fmul
sbb
lock
dec
xlat
jne
xor
pop
mov
dec
rorl
push
outsb
scas
imul
hlt
sbb
das
pop
aam
lods
jnp
jo
jle
out
mov
or
sbb
lea
or
mov
mov
cmpsl
mov
cwtl
mov
add
push
stc
xchg
nop
bound
test
ret
jg
mov
repz
mov
fidivs
clc
adc
aam
mov
sub
adc
mov
adc
pop
subb
mov
cmp
sbb
or
pushf
inc
icebp
sti
lret
cmc
pop
inc
lcall
push
pop
cli
aad
sub
push
aam
sbb
lret
cmp
sti
push
sti
enter
clc
shrl
mov
adc
cmpsb
dec
mov
pop
add
xlat
out
push
data16
out
or
dec
or
aaa
xchg
mov
addr16
jbe
rclb
das
popa
push
imul
pop
out
sahf
xlat
scas
adc
mov
sub
das
movsl
jne
testb
jae
into
mov
jno
fbstp
sub
xchg
aad
hlt
sub
jbe
sbb
scas
add
sarl
loope
cmpsl
mov
aas
in
dec
mov
dec
notl
stos
rcll
repz
sarb
jbe
pop
mov
xchg
cmp
jo
adc
lea
call
pop
mov
sub
mov
andl
rorl
jmp
pop
in
inc
xor
into
inc
pusha
scas
add
fwait
scas
pop
mov
fcompl
add
push
pushf
add
xor
fldenv
or
movb
popa
mov
lods
out
cltd
push
mov
sahf
jae
in
fs
sbb
pop
ret
cltd
out
inc
popa
inc
mov
gs
std
fldl
imul
mov
xchg
sub
popa
mov
mov
incl
mov
mov
cmp
addr16
and
shl
inc
or
xlat
test
add
ljmp
xlat
pop
dec
pusha
repnz
loopne
or
hlt
sbb
dec
cmp
mov
test
pop
or
mov
mov
sti
test
iret
enter
jo
lock
or
imul
cmpl
pop
lret
insl
loope
repnz
or
out
insb
or
fucom
gs
and
in
xchg
movsb
notb
or
mov
mov
adc
scas
and
mov
mov
xchg
pushf
jno
ljmp
mov
adc
xor
cmp
sub
cs
push
add
andl
sbb
mov
cmp
adcb
dec
sti
push
jno
movl
dec
adc
aas
and
jg
es
cld
xchg
pop
adc
loopne
or
fisubl
loopne
adc
inc
fucomp
mov
aad
jp
mov
adc
cmp
lret
xchg
push
ljmp
push
icebp
call
rolb
pop
jbe
insl
lods
xor
fwait
ljmp
jns
daa
lds
pop
out
cmp
imul
sub
mov
in
sbb
lret
add
movsb
arpl
out
cmp
ret
cmpsl
cmp
and
xchg
movsl
aaa
push
ret
mov
pop
pop
push
inc
pop
push
out
lret
roll
leave
mov
mov
je
lea
add
push
add
xor
pop
andl
das
or
rol
or
dec
push
ljmp
icebp
insl
xor
fs
xor
xlat
lods
xor
aas
mov
loopne
jbe
xor
sbb
dec
int3
movb
inc
movsl
pop
adc
in
popa
push
and
mov
pop
mov
decb
sub
push
xlat
lock
out
repz
dec
test
jecxz
testb
shrl
or
inc
test
mov
les
push
lods
popf
aam
push
arpl
push
jmp
jnp
das
add
xlat
pop
push
inc
jae
pop
cmp
mov
popf
jl
cmp
dec
push
movsb
js
sbb
pop
jnp
lods
mov
jbe
inc
iret
push
test
mov
push
gs
and
jge
call
xchg
cmc
pop
mov
sbb
inc
mov
push
push
outsl
nop
nop
mov
mov
dec
cmp
add
push
icebp
xchg
xor
add
xchg
push
push
das
loop
fdivrl
std
filds
in
rcll
inc
jns
pop
das
xor
inc
addb
mov
xchg
pushf
in
sahf
imul
cmp
xchg
fsubl
xor
mov
sub
or
rcll
xor
xor
int
les
into
push
jmp
int3
and
pop
and
ds
pop
out
pushf
mov
lods
jne
lea
shl
clc
and
sub
ret
hlt
fnstenv
lahf
pushf
je
out
sti
faddl
insl
adc
jbe
aad
fwait
adc
jmp
mov
cs
imul
cmp
out
stos
das
pop
cmc
movsb
incb
cmp
popf
popf
mov
inc
sbb
mov
fbstp
sub
sub
mov
clc
rolb
daa
jmp
pusha
int
sbb
mov
scas
mov
das
lcall
hlt
fldl
imul
push
test
push
outsl
inc
cmp
shll
test
stos
adc
jmp
scas
lods
push
push
sbbl
es
hlt
shrb
popl
jne
ds
test
sbb
xor
pop
mov
into
cs
pop
push
xor
in
mov
popf
in
sub
nop
leave
add
test
loopne
pop
loop
and
fsubs
rcrb
into
mov
int
stos
cwtl
adc
pop
sahf
cli
test
out
push
scas
adc
jmp
lcall
mov
daa
enter
cltd
fdivp
push
imul
mov
sub
es
push
jbe
ss
insb
and
dec
jp
mov
inc
lock
xor
add
loope
lcall
xor
xor
sbb
lock
push
ljmp
std
inc
and
xor
and
push
std
imul
jmp
push
loop
sbb
ret
jbe
mov
repnz
sbb
pushf
or
push
rcll
pop
or
push
dec
jle
pop
push
dec
xor
adc
scas
dec
cld
int
adc
je
test
inc
test
loopne
adc
dec
sbb
or
jnp
jno
mov
out
push
mov
adc
arpl
jmp
push
xchg
ja
out
and
inc
imul
adc
lds
clc
adc
shlb
mov
jnp,pn
cltd
push
out
iret
in
inc
dec
mov
sbb
add
mov
push
jmp
test
pushw
into
lret
scas
add
mov
repnz
shll
and
jae
mov
and
scas
lods
xchg
sti
mov
dec
imul
jle
rol
loop
mov
push
subb
pop
ds
iret
adc
push
and
push
push
sbb
cld
test
mov
fsub
insl
jbe
popa
mov
pop
cmpsb
adc
pop
jmp
ret
mov
dec
sub
pop
sbb
cmpsl
jecxz
shlb
mov
jp
pop
cmpsl
and
cltd
fiadds
mov
fildl
popf
into
mov
bound
jl
xchg
imul
int
inc
jae
mov
pop
iret
gs
cmc
insb
stos
lods
scas
mov
push
mov
jbe
or
mov
leave
fidivrs
outsl
dec
sub
add
sub
int
sub
into
pop
adc
lahf
sbb
push
sub
pushf
jns
jo
add
add
dec
nopl
lods
ljmp
mov
test
and
es
sub
daa
scas
enter
pop
gs
mov
cld
pop
outsb
addb
or
or
mov
iret
mov
bound
iret
into
mov
or
out
inc
subb
pop
sub
xchg
mov
mov
cmpsb
arpl
jne
addl
jns
hlt
imul
xacquire
cmc
stos
pusha
lds
xor
lcall
fcomps
push
stos
mov
lcall
and
jne
rcrb
orl
xor
divl
pop
jo
jnp
lds
add
inc
insl
adc
or
dec
sub
push
mov
mov
cld
push
mov
push
movsb
gs
xchg
popa
mov
mov
jno
and
popf
and
mov
mov
fstpt
aas
add
gs
inc
js
jecxz
mov
lret
fidivs
imulb
sbbl
into
jecxz
insl
push
jnp
jne
lods
mov
push
mov
in
cwtl
push
jbe
fwait
dec
jbe
sahf
int3
scas
mov
or
mov
cmp
adc
and
sub
push
and
ja
and
push
daa
push
iret
cmpsb
mov
imul
inc
je
pop
jns
xor
lods
daa
dec
data16
add
or
mov
roll
mov
mov
fiadds
pop
insl
add
add
cmp
clc
pop
inc
insl
rorl
adc
ret
mov
inc
mov
mov
fdivrp
in
add
adc
jae
and
jbe
mov
mov
mov
xor
mov
mov
fcmovnb
mov
lret
jl
fcmovnb
sbb
jecxz
cmpsl
inc
inc
mov
hlt
push
cmp
int3
in
sbb
fsubl
adc
popf
and
out
cmp
mov
sub
pop
jge
cmp
sbbl
imul
leave
jne
movl
mov
mov
es
loopne
push
sbb
xchg
push
xchg
adc
pop
cmp
jle
mov
clc
fdivrp
mov
int
lahf
in
push
pop
imul
push
cmpsl
xor
sub
xchg
and
mov
jnp
test
lock
xlat
inc
sbb
or
push
sub
cmpsl
stos
imul
sub
jmp
push
mov
inc
and
ja
mov
xchg
mov
cmp
pop
iret
fbld
push
mov
ja
mov
scas
aaa
or
fs
aad
xchg
jno
stc
push
push
add
out
mov
iret
stos
sbb
sub
pop
lea
outsl
enter
int
ret
jno
into
adc
sti
movsl
insb
mov
pop
ds
loopne
and
addb
fbstp
ret
mov
clc
or
popa
shrl
push
scas
je
xchg
int
jecxz
push
leave
outsl
xchg
in
sub
shlb
int3
popa
jecxz
in
sub
mov
sbb
loop
ja
push
push
pop
dec
out
pop
push
add
pop
pop
sbb
movsb
inc
into
jmp
mov
cmc
ss
loop
pop
mov
pop
push
fstpl
push
mov
push
test
push
cmp
leave
xchg
mov
sbb
test
ss
ret
fs
xlat
and
in
aam
arpl
add
dec
pushf
jp
sub
adc
inc
out
out
mov
test
push
stos
xor
into
push
out
out
fdivs
dec
fcoms
push
jmp
test
pop
outsl
mov
gs
mov
daa
into
arpl
mov
xchg
mov
rolb
cmp
pushf
in
xor
sub
test
ss
sub
sbb
jg
pop
inc
mov
cli
or
lret
mov
sub
fldcw
mov
or
dec
movsb
dec
in
rol
insb
fstl
adcl
xchg
push
fcompl
mov
dec
or
popf
lcall
fabs
cmc
es
mov
in
clc
sbb
js
add
sti
inc
and
andl
xor
pop
mov
push
enter
scas
inc
movsb
and
jg
inc
mov
adc
shrl
jmp
mov
das
stc
arpl
repnz
mov
lea
notb
cli
xor
arpl
add
mov
cmp
mov
xchg
movl
sbb
dec
ret
inc
xchg
cmp
lods
jle
cmp
inc
sub
xor
ljmp
cmp
xchg
xchg
push
and
xchg
or
xchg
sbb
jge
add
test
inc
shr
inc
lret
rclb
pop
xchg
mov
sbb
mov
das
mov
pop
xchg
inc
and
cwtl
xchg
lcall
fdivp
scas
xchg
or
add
xchg
xchg
movsb
movsl
mov
loop
adc
push
add
cld
in
gs
dec
pop
cli
push
popf
int3
xchg
fwait
sbb
jl
pop
dec
cmc
jne
dec
xor
pusha
xchg
jno
fs
add
jp
out
inc
jo
jmp
push
in
lods
mov
stos
jb
fwait
mov
xchg
and
cmpsl
jge
lock
fcoml
lret
lods
popf
stc
pop
test
iret
mov
or
xchg
inc
pop
sahf
sub
lock
add
imul
and
xchg
call
les
ss
gs
std
rol
pop
push
adc
cmc
and
jl
or
addl
pop
dec
dec
mov
jbe
test
mov
shrb
lods
dec
popa
xor
lret
mov
xor
sub
clc
fsub
cmp
shrl
and
jp
enter
cld
or
mov
fcmovne
mov
mov
pop
inc
cmpsb
lods
clc
mov
sub
xlat
out
loope
dec
mov
in
in
fwait
or
adc
push
push
dec
xchg
cmp
popf
lcall
call
mov
push
jge
ja
jns
ds
shll
out
add
out
xor
pop
les
push
jae
inc
mov
roll
pop
sub
out
nop
mov
lcall
ffree
insl
cmovne
fldl
negb
adc
cmp
movsb
es
xchg
cmpsb
cmp
jno
mov
scas
mov
fprem
out
ret
shrl
iret
mov
or
push
mov
imull
js
cs
scas
fisubl
or
jbe
aas
xchg
in
loope
js
xchg
pop
push
lds
in
mov
scas
xchg
test
sti
lods
push
xchg
stos
jmp
sti
jmp
mov
jno
jmp
andl
repz
and
push
jo
and
inc
fs
inc
xor
pop
lods
jg
lock
pop
push
mov
mov
jne
mov
scas
in
mov
jbe
xchg
inc
mov
jl
and
out
pop
add
or
incl
stc
xchg
mov
or
leave
movl
out
and
mov
loope
push
push
dec
adc
sbb
lock
sub
rcrl
cmpl
mov
push
js
push
inc
or
push
dec
push
jnp
jmp
jns
cmp
ret
adc
iret
adc
jae
pop
xorb
dec
xchg
xchg
xchg
pop
jge
cltd
add
rcrl
ljmp
adc
and
jl
pushl
sbb
jb
xchg
iretw
adc
je
inc
aam
out
mov
jae
mov
pop
test
int3
mov
sbb
lcall
or
mov
inc
pop
sub
xchg
xor
cmc
test
inc
inc
mov
andl
fcoms
cld
aam
pop
dec
adc
hlt
push
call
icebp
or
out
sbb
repnz
addb
sbbl
dec
sbb
icebp
mov
sti
jmp
mov
lods
and
roll
push
insl
adc
test
inc
push
or
lcall
mov
mov
or
pushf
mov
aaa
lret
lds
movsl
jge
sub
pop
adc
mov
cltd
fcoms
dec
pop
fwait
jo
mov
fucomip
cmpsb
outsl
sti
jne
sub
mov
sub
xchg
push
adc
sbb
adc
mov
sub
popl
inc
int3
les
cmc
xchg
lret
cmp
shlb
addb
fdivrs
mov
dec
ffreep
push
repz
sbb
xor
fisubrl
test
neg
lahf
in
xchg
or
or
lods
xor
pop
pop
sbb
push
ljmp
xchg
xor
xor
sbb
cmp
sbb
insb
pop
xchg
mov
popa
into
frstor
enter
mov
jns
popa
fisubrl
aam
insb
and
push
pushf
jge
dec
inc
pop
icebp
ja
xchg
jns
mov
mov
repnz
add
leave
sti
dec
sub
xor
in
das
or
adc
mov
cmpsb
xchg
sar
popf
xchg
shr
jg
pop
jle
or
dec
inc
test
leave
pop
xchg
pushf
in
mov
push
jno
cwtl
sbb
lock
in
inc
lods
jp
and
addb
and
or
das
dec
jg
ret
xor
push
repz
int
fimuls
sub
mov
clc
jecxz
rolb
push
push
mov
repz
test
pop
cmp
inc
mov
mov
inc
test
push
rcll
mov
cmc
jmp
movsl
push
movsb
popa
mov
mov
fldl
aam
push
mov
test
xchg
sti
out
rolb
js
inc
push
in
ja
add
adc
sbb
jp
rcrb
pop
mov
push
lods
dec
push
pop
push
sti
xchg
sub
xchg
fisubrs
arpl
mov
fldenv
mov
test
push
sar
enter
pop
dec
or
mov
mov
cmpsl
sub
fcomps
fmul
stos
sbb
fsubr
inc
in
sbb
or
pop
mov
xor
xchg
imul
pop
pop
add
adc
ficoml
cli
test
inc
add
in
lret
mov
inc
xor
lods
test
out
clc
xor
loope
jne
jne
mov
mov
push
daa
xor
xor
insb
mov
or
icebp
sar
inc
mov
mov
adc
pop
inc
sahf
sub
out
cwtl
loope
repnz
push
fs
xor
stos
scas
cmpsl
repz
mov
xchg
add
or
jg
jl
loope
fs
mov
loope
pop
into
mov
and
stos
cwtl
push
out
cli
out
jg
push
or
aad
sub
xor
adc
icebp
inc
lods
or
enter
mov
repnz
mov
fsts
fistpl
mov
or
add
or
addr16
lret
daa
lods
cmp
rcrl
mov
arpl
adc
inc
add
mov
pop
lret
inc
jbe
push
mov
jmp
loope
sub
xchg
pop
xorl
xor
pushf
inc
iret
cmp
stos
add
cmc
and
push
aad
andl
jg
cmp
inc
lods
fidivl
faddp
pop
mov
gs
sub
stc
lahf
xchg
pop
orb
mov
movsl
mov
std
add
add
inc
dec
and
mov
shlb
push
sub
add
push
sbb
mov
js
jge
cmp
outsb
cmp
sar
aaa
or
leave
mov
push
inc
push
xchg
lock
mov
fs
aaa
and
inc
dec
addr16
inc
imul
outsl
ljmp
nop
push
scas
add
jae
sahf
outsl
jg
test
sub
inc
pushf
xchg
add
out
jo
jnp
jb
pop
xor
mov
lea
inc
adc
inc
adcl
rcr
fmull
pop
push
loope
imul
into
loopne
imul
add
je
in
inc
sub
mov
xchg
pop
add
inc
adc
inc
mov
bound
shrl
sub
jp
das
sub
mov
dec
xchg
je,pn
adc
cmp
mov
mov
nop
mov
dec
adc
mov
gs
into
pop
jle
cwtl
push
aad
dec
mov
sti
jg
shrb
sbb
mov
cli
xchg
mov
push
mov
xchg
dec
and
sbb
sbb
cmp
dec
cmp
xchg
ror
cbtw
xor
add
scas
add
std
notl
movsl
das
or
xchg
mov
add
inc
sub
xchg
lods
pop
and
lahf
adc
inc
cltd
clc
insb
out
cmpsl
dec
sahf
inc
and
mov
xchg
pop
test
and
call
push
adc
mov
mov
and
jmp
addr16
sbb
xchg
ja
mov
sbb
sbb
ds
loop
mov
cmp
sbb
scas
cmpps
inc
call
add
pop
addr16
jbe
inc
xor
movsbl
add
xlat
outsb
push
bound
fwait
lcall
ret
cld
lds
add
xor
dec
add
mov
mov
dec
in
pop
mov
cmp
cmp
call
push
push
push
lds
pop
dec
std
in
jnp
push
mov
and
ljmp
js
int
stc
jb
dec
cmpsb
push
stc
mov
addl
jnp
movsl
cmp
xor
stos
push
hlt
dec
fld
lahf
cmp
jle
ror
xchg
fcmovnu
pop
sbb
pop
xlat
jno
lods
cli
andb
fidivrs
xchg
in
sbb
lock
ja
sti
call
stos
and
or
je
or
xchg
shl
mov
decb
mov
test
icebp
aaa
push
xor
fists
jae
int
xchg
call
mov
int
lcall
xchg
dec
mov
bound
gs
and
sbb
aaa
test
sbb
mov
add
push
cmp
dec
inc
adc
or
adc
adc
ret
mul
aad
test
aaa
pop
scas
mov
mov
out
dec
pop
fildl
cmc
pop
cmp
daa
add
divl
out
fs
aaa
mov
dec
and
fistpl
mov
int3
jecxz
sbb
inc
pop
or
cmc
movb
aad
std
cmc
cmpsb
or
inc
cmp
fnsave
inc
push
jl
rorb
lret
fsub
jl
call
mov
sbb
add
rcrl
clc
das
mov
xor
int
movsb
mov
add
insl
sub
outsl
aas
pop
jmp
stc
mov
ret
push
add
jno
fdivrs
mov
shll
mov
sbb
js
imul
jbe
sti
stc
sbb
or
jle
cmpsl
xchg
sti
mov
and
xchg
loop
sub
sbb
mov
jle
push
push
fmull
xor
mov
roll
fstl
sbb
sti
lods
call
mov
cmc
ficoml
sbb
jae
lods
push
mov
in
or
mov
insl
cmp
ljmp
mul
push
pop
mov
rolb
mov
into
pop
les
add
xor
pop
enter
out
pop
jns
pop
lret
nop
out
imulb
push
and
sahf
call
inc
mov
xlat
dec
inc
ds
jbe
sbb
aad
fs
andb
adc
aas
icebp
testl
aad
scas
pop
dec
push
cvttps2pi
jo
in
leavew
outsl
mov
xor
xor
mov
cltd
inc
inc
lods
mov
pop
repnz
cmp
in
push
insb
xor
iret
nop
mov
push
addr16
daa
xchg
jae
jecxz
inc
cmp
xor
aad
inc
cmpsb
mov
int3
jp
cmc
cmp
pop
rol
movsb
inc
mov
nop
pop
or
mov
adc
sbb
mov
not
inc
pusha
neg
popa
xchg
mov
push
xchg
inc
push
ror
add
inc
pop
ret
cmp
jo
mov
mov
xchg
test
or
mov
aaa
sub
sbb
jnp
dec
xchg
or
test
je
inc
dec
xor
and
mov
mov
call
testl
mov
push
arpl
and
xlat
sahf
or
fadds
subb
int
into
pop
pop
xchg
cmp
rcl
movsl
jae
jg
jecxz
fildll
jge
or
xchg
cltd
push
mov
sub
loope
or
sti
sub
rep
test
xchg
ljmp
fsubr
add
cmpsl
pop
ljmp
pop
and
arpl
push
inc
fwait
push
in
loope
mov
push
adc
jmp
mov
pop
lods
and
test
jg
data16
sbb
mov
test
jmp
rorb
dec
xchg
xchg
sub
fcoms
add
lret
into
pop
pop
outsb
ss
and
nop
dec
popf
nop
xor
mov
mov
in
sahf
and
in
jno
insl
push
cltd
jp
lcall
int3
out
test
jb
out
mov
and
jmp
ficompl
arpl
xchg
cmpsl
shl
mov
out
bswap
mov
aad
sbb
popa
jb
dec
or
lock
es
sub
fisubs
push
arpl
lods
add
xchg
and
pop
js
test
inc
stos
push
cmp
sub
js
aas
dec
orb
out
enter
aam
int
adc
push
cmp
mov
sub
cmp
scas
inc
lods
repnz
mov
push
mov
dec
xchg
mov
js
lcall
push
push
sbb
adc
aam
dec
daa
stc
je
mov
insb
movsb
fldln2
and
inc
push
xchg
gs
int3
mov
inc
loopne
ss
daa
cld
pushl
pushf
mov
imul
and
jns
add
inc
outsb
or
dec
xchg
xor
xlat
pop
push
xchg
fcmovnb
loop
nop
and
pop
insb
enter
in
xchg
pop
cld
mov
cltd
dec
gs
sbb
mov
cltd
je
popa
pop
xor
push
push
test
and
out
jnp
in
and
bound
sub
nop
pop
imul
test
mov
stos
xchg
insb
mov
repnz
sub
adc
stos
dec
push
data16
jmp
dec
inc
mov
shlb
or
out
es
jge
daa
mov
pop
cmpsb
pop
sbb
xor
out
bound
es
fs
movsl
in
inc
and
push
jno
xor
ljmp
inc
or
outsb
jnp
inc
jg
imul
jae
clc
outsl
loop
in
or
mov
or
sbb
jp
lret
scas
adc
leave
bound
fwait
xlat
inc
nop
cmp
lock
mov
stos
push
sub
sub
mov
mov
jp
punpckhbw
cs
push
sbb
dec
push
jo
jne
test
mov
fwait
cmp
scas
jge
cmp
xor
icebp
out
ja
incl
add
cli
cmp
addr16
test
push
in
mov
lcall
adc
mov
addr16
iret
fnstcw
outsl
out
or
adc
mov
mov
mov
pop
cmp
mov
mov
sbb
int3
xor
xor
cld
imul
rcrb
adc
dec
adc
daa
jae
test
sub
sub
in
sti
inc
jge
ret
adc
push
test
jno
hlt
mov
enter
inc
xchg
dec
rorb
pop
popa
push
stc
mov
imul
sub
popf
in
clc
pop
sub
dec
inc
icebp
push
pusha
xchg
sbb
std
adc
outsl
push
cmp
rcrb
int3
popf
cmpb
jmp
fwait
les
sub
mov
dec
inc
fwait
mov
cmpsl
pushf
ror
movsl
mov
bound
or
mov
adcl
scas
push
mov
cld
stc
movsb
or
push
cmpsb
xchg
push
xor
or
divb
repz
jbe
or
jns,pt
rolb
or
dec
mov
into
mov
xchg
and
xchg
cmc
les
push
popf
xchg
mov
clc
pop
xchg
dec
and
xchg
out
cmpsb
mov
sahf
add
push
sbb
mov
loopne
push
popa
fs
insb
ljmp
jg
inc
scas
add
push
clc
or
inc
mov
addl
pop
sbb
dec
mov
cmp
push
mull
pusha
int
sti
pushf
in
loopne
or
stc
xor
and
inc
inc
xor
or
test
pushf
orl
sti
cmp
stos
mov
out
and
mov
sub
popf
clc
and
xchg
testl
loop
test
add
in
loop
cmp
sahf
sub
pop
dec
cli
je
das
ret
mov
jbe
xchg
loopne
mov
inc
pop
out
mov
sbb
pusha
sbb
or
jno
cmp
inc
leave
int3
sahf
mov
ret
cli
push
mov
mov
xchg
adc
shrb
sbb
stc
mov
push
mov
jnp
pop
arpl
dec
cs
pop
push
aaa
and
imul
adc
or
ss
push
rcll
jne
lcall
push
dec
and
xchg
in
cs
popa
cli
lcall
inc
sub
add
rcrb
fwait
cwtl
xor
cltd
mov
xor
test
adc
jp
ret
popa
shrl
lahf
ljmp
mov
mov
xor
cmc
fisubrl
cmp
loopne
ret
out
inc
inc
lahf
ss
jb
or
pop
pop
lret
jae
inc
loop
adc
cmp
fadds
jb
xor
cwtl
popa
fwait
adc
mov
cltd
mov
lock
cmp
cmp
shrb
and
int3
push
movl
int
sub
sbb
shl
pop
ret
pop
mov
mov
jge
outsb
fistl
and
dec
push
repnz
stc
inc
enter
xchg
rcr
cmp
sub
in
roll
cld
es
jae
dec
mov
mov
jmp
stos
rol
mov
mov
push
or
fnstenv
out
pusha
inc
aaa
test
mov
add
sub
inc
sbb
fwait
sbbb
inc
jecxz
jle
les
rclb
pop
decb
pusha
pop
das
movsl
out
lcall
in
aas
sahf
leave
mov
adc
sahf
pop
cld
adc
lock
xchg
add
cmp
lret
cmp
outsb
cld
cli
pop
gs
jnp
xchg
xor
sub
pop
addb
jne
mov
inc
xchg
fdiv
jmp
sbb
scas
adc
cs
int3
xor
call
dec
mov
xchg
imul
test
xchg
scas
cmpsl
jmp
or
xchg
mov
les
loopne
mov
adc
scas
rcrl
out
sub
in
ss
add
inc
dec
pop
sarl
lds
popf
pop
out
jp
nop
and
mov
jb
stos
add
sti
and
dec
out
cmp
xor
pop
xor
out
jmp
cmp
cmp
call
cltd
sahf
int
loope
xchg
mov
xchg
push
jp
mov
fisubl
testl
mov
je
xlat
xor
jne
shr
data16
js
mov
nop
xorl
add
insl
and
push
push
jl
ljmp
rcll
mov
dec
jne
sbb
push
rcrl
pop
cmpsb
enter
adc
imul
adc
cltd
call
xlat
icebp
les
jno
repz
add
sbb
cmp
movsb
mov
ja
das
mov
xor
xor
imul
pmaxsw
xor
xchg
fcompl
cltd
xor
lahf
push
cmp
mov
iret
xorl
into
mov
fwait
cwtl
fbld
adc
in
stos
mov
push
movb
push
xor
and
inc
loop
into
cmp
sub
test
mov
jl
clc
shrl
mov
add
mov
cmp
bound
xor
cmp
repz
push
jno
insl
jmp
popf
ret
mov
xchg
stos
mov
mov
arpl
jnp
sub
iret
push
pop
sbb
fbld
or
pusha
inc
stos
mov
aaa
cmp
xchg
cmp
and
xor
push
aam
xor
dec
sbb
ljmp
mov
cmovbe
or
xchg
scas
add
xchg
inc
outsb
icebp
jnp
jb
pushf
mov
push
fimuls
loope
push
test
mov
idivb
shrl
imul
aaa
dec
icebp
arpl
mov
inc
pop
add
pop
mov
mov
dec
add
pop
xchg
mov
mov
lcall
data16
call
sub
dec
mov
mov
sbb
or
sub
dec
pushf
fs
in
in
lea
leave
inc
push
sbb
cmp
test
mov
fistpl
jnp
mov
mov
inc
adc
push
movsb
orl
push
test
pop
xchg
lds
shr
pusha
popa
xor
sbb
sbb
dec
lods
daa
aad
mov
pushf
movsl
sbb
xlat
xor
aam
out
je
cmp
mov
inc
aam
xchg
or
icebp
test
push
jg
jg
shl
fnstsw
fldcw
inc
jae
or
sub
jb
or
adcb
mov
adc
cmp
sbb
and
mov
cmpsl
addr16
and
cmc
lret
adc
and
ja
mov
lret
push
add
adc
jge
stos
xchg
jne
insl
adc
leave
jae
dec
lcall
mov
sahf
push
xor
arpl
ret
stos
inc
faddp
inc
lds
pop
iret
xor
aam
push
pusha
xchg
sub
ret
icebp
push
js
sub
sub
stos
mov
push
pop
ss
dec
push
push
test
cmp
mov
aad
or
mov
mov
jno
inc
mov
aad
sub
vmptrld
mov
stos
aam
pop
sbbl
out
insb
and
or
cld
subl
cs
mov
popa
int3
sub
stos
cwtl
mov
jb
cli
mov
pminub
popf
out
xchg
jns
mov
in
sar
add
xchg
std
dec
mov
jecxz
push
push
arpl
shlb
sbb
test
popa
sbb
scas
lods
xchg
pop
mov
dec
mov
push
xor
inc
sarb
ljmp
outsb
inc
push
es
pop
mov
inc
cld
sbb
push
aam
std
add
stos
or
loope
loopne
cmp
mov
inc
xchg
mov
mov
or
inc
cmp
repz
and
fcomip
cmp
mov
cmpsb
loop
aas
ja
cmp
imul
and
push
in
jl
sub
sarl
inc
cmpsb
icebp
lock
rolb
inc
or
lret
loopne
arpl
push
jmp
mov
and
cld
mov
lock
neg
fs
mov
sub
ss
outsb
lods
mov
xchg
mov
mov
enter
xchg
scas
fstpl
pop
leave
jecxz
jno
push
lock
mov
mov
jl
push
push
pop
mov
aas
xchg
mov
in
sbb
sub
lods
add
and
xor
imul
aad
sarl
sub
pop
call
fldcw
nop
jl
push
xchg
xor
pop
repnz
hlt
lret
pusha
sub
push
pop
sub
test
nopl
add
mov
inc
inc
imul
sti
pop
mov
pop
dec
add
and
add
test
inc
inc
addr16
cmp
xchg
xorl
push
xchg
push
jg
aam
rep
cmp
add
fsts
or
lods
pop
lcall
ret
std
shlb
xor
and
jbe
pop
mov
inc
in
sahf
mov
loopne
inc
mov
mov
lods
or
cmc
mov
adc
out
add
out
outsb
cmp
fsubs
je
jne
and
int
pop
adcb
pusha
movsb
test
mov
mov
add
in
js
xchg
arpl
cmp
dec
ljmp
hlt
xor
movsl
push
into
pop
lahf
and
push
xchg
mov
xchg
fistps
movsb
jle
mov
xchg
or
icebp
mov
jl
shll
ds
test
jg
ret
sbb
lret
add
mov
cld
mov
outsl
fcomi
jnp
insb
mov
xor
dec
fld
jae
sub
xchg
pushl
aam
test
inc
incl
pop
scas
mov
jns
es
fadd
mov
and
cwtl
jns
andb
and
mov
dec
push
cld
and
xor
add
and
lds
lcall
jns
and
cwtl
dec
mov
movsl
lods
rolb
repz
jg
std
mov
popf
rcll
jo
cmp
jns
in
les
cld
sub
jp
xchg
sub
cltd
mov
and
pop
mov
lock
loope
cmp
mov
push
call
mov
cs
mov
mov
xchg
mov
xchg
mov
je
mov
cmpsb
adc
cmp
add
xlat
xor
inc
pop
das
aas
jne
sarl
add
cmp
mov
sub
add
in
ret
hlt
and
xchg
cmp
xchg
lods
adc
je
inc
adc
sub
adc
daa
ss
pusha
sub
xor
mov
movsb
fstpt
shr
leave
aam
pop
test
fistpll
sub
xchg
inc
inc
movsb
mov
insl
jl
arpl
or
cwtl
fisubs
loopne
jl
lods
test
divb
jnp
add
xor
pusha
loopne
xchg
leave
aam
mov
int
rolb
sub
xor
loope
or
xchg
jle
push
lcall
dec
imulb
testl
lods
cmp
out
fldcw
mov
stc
dec
mov
inc
xor
lahf
pop
or
mov
cltd
pop
cmpsb
push
pusha
fcmovbe
aas
adc
pop
xor
iret
inc
pmaddwd
xor
inc
push
mov
xchg
push
inc
jo
daa
movsl
and
dec
mov
xor
lret
and
call
xchg
adc
pop
jnp
roll
les
jl
mov
or
or
xchg
add
adc
mov
mov
push
dec
xchg
sbb
fisttpl
dec
push
or
jnp
jnp
dec
sub
pop
dec
add
cmc
adc
jge
insl
jge
mov
mov
push
repz
push
fs
pushw
dec
or
cwtl
mov
xor
pop
adc
outsl
dec
push
jne
imul
sahf
jnp
cmpsb
insl
add
mov
mov
mov
inc
jne
push
adc
arpl
mov
dec
push
mov
pusha
iret
fcoms
mov
xchg
xor
adc
cmp
fucomp
mov
xor
push
xor
xor
and
into
pusha
add
sbb
push
pop
popa
xacquire
adcb
adc
aas
xor
mov
mov
jo
xchg
mov
in
cmp
sarl
pop
scas
adc
cmp
mov
jle
mov
jns
roll
cs
adc
popa
aad
fdivr
and
mov
add
int
xchg
cs
js
add
jbe
cmp
stos
inc
xor
jmp
addr16
jnp
inc
nop
jmp
fwait
sub
shrb
imul
and
in
lret
xchg
movsb
add
fstl
cmovno
cmp
add
es
scas
mov
add
push
ficomps
inc
jg
pushf
push
mov
push
mov
fstpl
xor
popf
jg
pop
cltd
je
mov
pop
in
xchg
mulb
mov
fsubrs
xor
imul
mov
ficompl
movsl
popa
ja
adc
mov
into
xchg
loope
cmp
popa
push
ret
pusha
pop
fsubr
inc
cmp
cmp
or
jecxz
dec
push
jbe
add
push
mov
push
xor
outsl
jmp
scas
cmpl
jg
adc
cmp
inc
inc
push
fdivrs
jno
mov
mov
mov
fistpl
adc
add
clc
push
or
cmp
or
fnstenv
les
inc
lcall
adc
int3
jne
sbb
loope
in
mov
mov
lods
bound
pushf
mov
jnp
pmovmskb
xorb
mov
test
mov
jns
lahf
addl
jb
enter
mov
jle
dec
mov
dec
daa
adc
aad
je
inc
pop
int
adc
insl
xorl
sbb
mov
and
out
jle
xor
lea
and
aad
jmp
pushf
sub
and
sarb
mov
loope
xchg
aad
imul
iretw
mov
sbb
movsl
js
aam
pop
push
sarl
xchg
or
and
test
cli
mov
sbb
jle
mov
pop
mov
in
int
icebp
adc
jne
pop
mov
sbb
push
insb
out
pop
inc
pop
rorl
dec
mov
xchg
sub
loop
mov
sbb
loop
ret
cmpsl
mov
movsl
xchg
inc
es
mov
test
sbb
push
cmp
mov
imul
jne
mov
clc
cmpsb
test
cmpb
xor
into
push
insb
push
je
pusha
mov
and
jecxz
mov
xor
dec
pop
std
sub
mov
divb
xchg
push
pop
insb
aam
repz
push
insl
into
mov
addb
jl
or
mov
shll
mov
lods
adc
mov
stos
pop
rcll
xchg
mov
js
jnp,pt
sbb
add
and
shll
stc
scas
push
setnp
dec
or
pop
mov
fiaddl
push
and
cld
push
mov
mov
add
pop
ss
daa
pushf
icebp
mov
pop
cli
sbb
and
jns
cmp
jl
cwtl
lea
js
and
inc
inc
jae
mov
xchg
cmp
fadd
test
add
repnz
push
sbb
icebp
sbb
loopne
out
mov
or
xchg
repnz
rcrb
dec
mov
test
push
xchg
push
hlt
int3
cmp
fdiv
mov
sub
rcrb
rorb
mov
ret
push
push
mov
shl
movsl
add
test
pop
sahf
jg
push
push
xchg
shr
mov
sub
dec
rcrl
xlat
leave
jle
iret
cmp
sti
pop
sub
cmp
sub
fnstenv
sti
fsubl
rcrb
xchg
fstp
out
addl
stos
sub
mov
jae
jecxz
es
xchg
mov
call
mov
in
mov
xchg
test
repz
fidivrs
in
arpl
dec
cli
lock
jg
dec
test
mov
push
dec
or
adc
shrl
mov
mov
cmpsl
leave
sub
pop
sub
dec
xlat
add
loopne
cmp
imul
xchg
sbb
mov
push
enter
dec
andb
push
add
dec
repnz
xor
sub
test
movsb
mov
cltd
pushf
cltd
fst
inc
mov
stos
adc
hlt
cmp
sahf
sub
std
fisttpl
mov
mov
rcrl
aas
fidivrs
scas
xchg
rcll
cmp
mov
dec
test
mov
mov
xchg
pop
xchg
cs
xchg
jg
pop
andl
push
cmovb
push
jnp
sahf
cs
shll
stc
sbb
push
hlt
or
imul
lods
in
enter
pushf
mov
pop
mov
loop
dec
movl
mov
sbb
pushf
and
and
lods
negb
je
pop
xchg
shll
ret
adc
inc
xlat
mov
mov
ret
es
add
pop
jo
jbe
and
cmp
jno
and
push
stc
enter
dec
or
mov
rcr
movsb
out
ret
hlt
lods
aam
push
call
push
jmp
popa
sar
dec
ret
into
pop
fistps
push
mov
xor
push
push
pusha
cmpsb
and
push
mov
cmp
adc
jp
aad
or
xlat
pop
popl
sarb
das
xchg
popf
and
push
call
mov
rorl
and
ss
pop
lcall
das
inc
vmread
inc
adc
dec
xor
mov
cltd
imul
add
js
mull
sub
add
mov
fs
lcall
mov
out
into
aas
leave
mov
enter
into
xchg
sub
and
loop
jno
int3
out
lock
sbb
rorb
pop
das
call
cmp
mov
add
add
lret
and
pop
test
in
jg
mov
or
ja
mov
repz
loopne
xor
fs
and
into
divps
mov
mov
pop
add
jmp
cwtl
dec
inc
sar
push
out
xorl
test
out
jb
jg
mov
or
in
adc
add
das
mov
mull
adc
cmc
adc
mov
mov
adc
mov
xchg
imul
clc
pop
popa
or
and
insl
push
mov
cmp
cwtl
jno
lods
cli
pop
cmc
sub
xor
jne
ror
test
fsubl
aad
arpl
xor
frstor
std
test
xchg
cld
cmc
push
cmp
shrl
jne
sbb
mov
sbb
cmp
xor
arpl
sub
ret
mov
orb
push
test
sbbb
jns
push
pusha
scas
add
lds
pop
mov
das
stos
fcmove
cmp
repz
cld
mov
sub
sbb
mov
push
sbb
mov
fwait
push
add
roll
mov
and
push
push
lret
add
add
or
push
int3
xor
push
rorb
icebp
hlt
mov
rorl
movl
loopne
mov
sbb
jmp
mov
cltd
jb
jno
cmp
stc
aad
frstor
mov
rolb
lods
mov
push
mov
xchg
pop
inc
adc
test
mov
push
out
mov
push
scas
pop
lods
imul
das
int
or
xchg
cmp
mov
or
les
adc
dec
cwtl
lcall
fwait
fs
sub
out
fsubs
mov
cmp
xor
push
and
mov
dec
add
rorl
lret
mov
in
pop
imul
addb
in
loop
js
push
lods
push
mov
xchg
pop
xchg
scas
cwtl
jno
mov
push
mov
out
daa
xchg
jns
adc
in
inc
cmp
fstps
ss
add
push
xchg
popa
adc
aam
outsb
js
test
or
into
mov
fistpll
xchg
inc
fadd
adc
ljmp
addr16
sti
pop
sub
jo
leave
loopne
pop
movsb
dec
aas
insb
sbb
in
push
jbe
adc
cmpb
inc
jl
xor
xchg
lahf
add
or
pusha
sbbb
out
dec
xor
add
pusha
dec
pusha
xor
or
dec
xchg
xor
dec
cmp
out
loope
dec
sub
push
mov
mov
add
inc
outsb
das
push
sub
adc
sub
jmp
dec
mov
stos
cld
inc
inc
push
add
inc
lea
mov
jo
repz
and
stos
movsl
pop
fldt
adc
out
in
pop
fisttpl
in
aad
inc
loope
scas
jp
mov
cmp
mov
in
inc
mov
iret
and
out
push
aad
out
xor
mov
insl
pop
into
mul
push
test
inc
xor
xchg
hlt
or
paddd
add
ret
cmp
pop
jp
div
les
dec
xchg
or
or
push
mov
sub
push
push
push
sub
sbb
icebp
or
ret
add
xor
adc
inc
mov
cmpsb
add
mov
jae
xchg
mov
adc
lcall
sub
fisubrs
dec
or
scas
and
scas
cli
push
nop
jae
insl
outsl
inc
xchg
add
lods
xchg
or
mov
frstor
pushf
jmp
pop
dec
and
aam
js
cmp
lods
and
dec
jmp
pop
mov
icebp
add
mov
rcrl
inc
cmp
into
mov
loope
ret
and
push
push
negb
cs
xor
test
popf
dec
cmp
sub
movsl
fwait
sub
and
pushf
add
pop
in
xor
jnp
jp
mov
scas
xor
in
inc
test
outsb
sub
mov
xchg
jbe
ret
mov
incb
mov
jmp
push
dec
dec
and
mov
sbb
and
fxch
push
rcrb
xor
or
push
ja
getsec
adc
cs
push
pop
adc
cld
sti
mov
shrl
fwait
stos
mov
mov
fcomps
shrl
imul
bound
xchg
add
mov
inc
lock
dec
fwait
or
mov
fmul
sub
xor
push
pop
mov
xchg
test
into
stos
test
fimull
out
aam
mov
xor
aad
pop
jno
sub
xor
stos
mov
cltd
xor
and
test
ror
mov
and
mov
mov
jmp
and
je
or
cld
push
xorb
int
cltd
jp
pop
mov
cmpsl
xchg
addr16
cmpsb
sub
xchg
cmc
lret
fwait
inc
jle
mov
ret
int
sbb
subb
pop
cwtl
sahf
test
or
jno
inc
cltd
sub
or
rorl
int3
add
dec
push
lea
pop
enter
cmc
mov
repnz
nop
pcmpeqb
mov
mov
or
es
dec
mov
dec
inc
push
out
aaa
lock
or
jp
jbe
mov
push
add
dec
pop
filds
fs
mov
add
leave
test
test
xor
sti
inc
jmp
pushf
test
lods
jge
mov
mov
sub
mov
adc
sbb
mov
clc
mov
loope
test
adc
imul
or
xor
test
push
adc
push
inc
mov
xor
outsb
xchg
sbb
sub
jno
cmpsl
and
lret
je
ljmp
cmp
lods
sub
into
mov
jp
ja
cs
in
cwtl
push
cwtl
lcall
cmp
mov
outsl
shlb
adc
lods
pop
sub
fstpt
jl
cmpl
pop
and
mov
cmovl
dec
jb
xchg
xlat
cmc
mov
cld
ds
sub
ret
rcll
cltd
adc
fmull
sbb
test
call
xchg
lods
inc
jns
push
pop
and
enter
push
jl
in
stc
jmp
adc
inc
xor
in
add
push
outsl
outsl
imul
jae
push
inc
jbe
mov
mov
lret
mov
fnstsw
lea
mov
push
je
outsb
dec
rcr
lret
dec
mov
cmp
add
xor
jae
xchg
mov
shll
loopne
pusha
outsl
out
sbb
int3
xchg
iret
rcll
fldcw
mov
mov
mov
bound
push
push
push
adc
push
aas
daa
xchg
adc
mov
jg
dec
adc
push
mov
sub
lods
in
jle
clc
mov
repnz
push
mov
subb
orb
adc
arpl
mov
sub
jg
pop
sahf
stos
ficompl
dec
adc
popa
fldt
adc
inc
xor
pop
fistl
nop
sbb
test
cltd
insl
pop
arpl
and
lcall
jnp
mov
nop
sub
xor
mov
inc
inc
sbb
sbb
mov
xchg
dec
xor
sub
jg
lret
jl
lock
fdivrl
sub
xlat
and
xlat
pop
xor
push
cmp
adcb
mov
inc
cwtl
push
adc
lea
adc
scas
xor
pop
and
add
jb
data16
xchg
aad
mov
lret
mov
xor
adc
in
push
mov
sub
mov
ds
jns
cwtl
fs
gs
jl
xchg
xchg
and
push
and
pop
je
sub
sti
cmpl
push
xchg
adc
or
cs
enter
push
rcl
cli
in
lea
cltd
xchg
fucomp
ljmp
inc
jle
call
int3
stos
push
mov
pop
or
lret
mov
fldenv
ljmp
cmp
ljmp
movsb
xor
add
fisttpll
push
jmp
sbb
jns
add
pop
shrb
mov
sub
repnz
fcomi
loope
js
out
dec
pop
scas
push
cmp
js
rcr
out
repz
jbe
out
int
leave
cmpsl
inc
pop
cmp
out
jne
pusha
add
imul
pop
xchg
push
mov
imul
stos
push
test
outsl
or
sbb
mov
inc
xchg
mov
or
xor
xlat
mov
adc
sub
mov
lock
and
cs
repnz
ficompl
fs
inc
mov
xor
lret
jmp
jnp
dec
pop
in
cli
fldl
out
add
and
mov
cmpsl
fs
dec
test
cmc
xchg
test
inc
mov
cmp
outsl
pop
xchg
dec
xchg
xchg
jbe
xchg
mov
inc
inc
ljmp
jb
das
out
dec
in
inc
popa
popf
imul
jmp
inc
inc
rcl
cmp
shll
sbb
pusha
std
fisubrs
jne
std
cmp
les
add
mov
xor
mov
xchg
mov
inc
and
ljmp
stc
sbbl
in
mov
sbb
ss
sub
sbb
iret
cltd
clc
push
bound
call
jo
leave
sub
pop
cli
popf
fidivrs
pop
xlat
mov
adc
mov
sub
lret
dec
xchg
pop
test
pop
push
imul
popa
aas
xchg
cld
dec
inc
mov
aaa
adc
and
sbb
mov
ljmp
gs
test
cmpsl
jns
and
aam
jb
add
mov
mov
movsb
iret
and
cli
inc
fnstsw
pop
mov
je
cmp
shl
mov
xor
lret
in
scas
mov
nop
add
std
mov
lcall
push
enter
ficoml
xor
push
data16
cwtl
push
jmp
or
pop
lock
pushf
mov
xor
push
or
xchg
jp
lea
or
and
xor
or
xchg
jmp
fs
lock
test
pop
pop
repz
daa
mov
out
push
mov
addb
mov
push
cmp
dec
push
adc
in
cmp
jle
mov
or
mov
mov
dec
dec
mov
or
imul
push
sti
jle
stos
lds
xchg
hlt
sbb
xchg
sub
jge
out
out
shl
ret
nop
popa
cmp
cmp
cmp
lods
add
xchg
test
ret
lods
adc
push
ret
arpl
cltd
jmp
mov
jnp
mov
dec
ljmp
or
int
iret
stos
pop
dec
xor
inc
pusha
rolb
ljmp
sahf
mov
mov
push
jns
pop
sub
in
loopne
arpl
add
lea
lahf
stos
mov
fwait
adc
lods
mov
adc
mov
jne
sub
pushf
sbb
add
in
sub
and
icebp
push
movsl
scas
push
dec
or
pop
xchg
or
xor
gs
cltd
xchg
add
std
mov
xchg
loope
popf
jecxz
lea
and
scas
std
addb
push
dec
out
ljmp
adc
mov
add
dec
jae
test
movsb
shr
addr16
sub
bound
xchg
ss
pop
inc
iret
in
fadds
push
dec
ds
sbb
push
out
cmpl
push
add
or
xchg
dec
addr16
mov
fptan
lea
jno
lock
shll
orb
cli
stos
jae
repnz
cmpsb
push
fldl
mov
movsb
mov
in
rep
repnz
das
in
jecxz
jne
aaa
fnstenv
xor
std
lahf
idivl
adc
out
mov
cmc
gs
jmp
add
and
push
add
push
in
dec
nop
test
xchg
mov
jle
out
test
or
mov
lock
mov
mov
adc
add
shll
imul
add
pop
cs
push
test
pop
cmpsl
push
sbb
xor
imul
mov
mov
push
pop
add
push
movsb
cld
rcl
and
pop
fwait
xor
imul
dec
js
ss
cli
dec
jae
adc
adc
mov
push
in
arpl
add
arpl
pop
or
aas
xchg
fstps
popa
jmp
jmp
stos
pop
addr16
mov
pop
js
ds
xchg
xor
push
aaa
push
inc
stos
cmp
push
mov
dec
std
xor
mov
add
popa
nop
stos
sbb
and
mov
push
dec
xor
adc
jl
xchg
xor
cli
pop
mov
stos
push
cmp
mov
xor
xchg
lcall
jnp
inc
inc
insb
cs
movzbl
mov
xchg
es
iret
out
les
enter
mov
or
inc
xor
jno
mov
testl
fstpl
dec
adc
mov
scas
lret
hlt
mov
jle
mov
mov
xchg
mov
andb
stc
fnsave
pushl
daa
imul
pop
sbb
lahf
mov
cmp
es
mov
cmpsl
mov
dec
or
adc
adc
rclb
adc
and
jmp
xlat
jle
repz
jl
lret
rcrl
cwtl
mov
mov
mov
cltd
test
inc
fildl
or
xchg
xlat
xor
out
enter
lret
loop
into
cmp
movsl
or
sahf
sbb
je
push
sti
stc
sbb
outsb
cmp
xor
iret
jg
sbb
out
or
or
mov
inc
pop
outsl
fwait
sbb
sbb
mov
inc
enter
and
xchg
fwait
stos
enter
xchg
shrl
pop
pop
inc
dec
mov
and
inc
sbb
mov
pop
add
movb
test
fldenv
or
xchg
test
mov
jae
sbb
aaa
jne
pop
fcoms
mov
pop
loopne
flds
xor
out
jb
test
out
mov
test
sahf
pop
mov
mov
dec
push
xor
jp
fadds
loope
fpatan
jl
or
aam
iret
test
push
mov
add
push
push
in
std
arpl
cmpsb
sbb
imul
jb
xor
adc
aas
mov
inc
mov
loopne
xchg
dec
sbb
andb
mov
fs
xor
divl
mov
jo
addb
push
repz
mov
adc
in
jbe
sbb
lea
lds
push
inc
out
and
pop
mov
sub
daa
lods
jo
pop
dec
fildl
bound
js
or
fisubl
nop
mov
fdivp
add
xor
aas
mov
push
mov
dec
sbb
fmull
sbb
idivb
enter
xchg
js
mov
lret
out
jo
fs
jae
jno
rcl
sbb
stos
sti
call
xchg
fildl
xor
idivl
icebp
push
mov
mov
mov
iret
hlt
setp
jnp
mov
or
add
sbb
ret
mov
xchg
jb
test
js
lcall
data16
sbb
xor
mov
sbb
and
not
adc
fbstp
sbb
push
xor
mull
es
push
sub
push
jle
fisttps
mov
push
sbb
and
mov
roll
int
rcr
mov
lds
mov
add
mov
rep
dec
xor
add
pushf
cwtl
aaa
xchg
mov
lock
push
xchg
jecxz
add
mov
mov
fsts
enter
popa
iret
sub
jnp
or
test
fisubrs
mov
mov
sub
pushl
lods
addl
inc
cs
pop
mov
pop
jp
lods
fisubrs
inc
mov
fbstp
cmc
push
lds
addr16
sbb
push
imul
cmpl
shl
cmp
sub
add
out
rcl
sbb
popa
push
inc
es
jo
stos
cmc
pop
xchg
and
sub
test
push
cli
mov
cmp
cltd
xor
push
or
mov
shr
nop
push
hlt
fwait
cmovb
hlt
inc
nop
pop
jnp
mov
fistpl
inc
pop
lea
hlt
or
add
mov
push
sti
xor
outsb
xlat
add
mov
shll
xchg
mov
mov
rcrb
jmp
bswap
push
dec
add
or
fisubrs
insb
hlt
fbstp
pop
adc
ds
mov
lahf
dec
stc
popf
mov
std
out
xorl
scas
bnd
aam
push
xchg
ljmp
addl
repz
mov
mov
xchg
mov
lea
push
cs
jp
daa
dec
cltd
cmp
sbbb
mov
inc
ds
fs
pop
in
stos
fimuls
cmpsl
mov
fcmovbe
arpl
xchg
lcall
roll
push
adcl
jp
sahf
xchg
inc
popa
lret
jae
dec
inc
fdivrp
pop
testl
xchg
outsl
mov
cmp
pop
scas
stos
loop
pop
and
mov
andl
or
dec
mov
and
jp
push
enter
stos
repnz
or
lock
stos
cwtl
fimull
jne
test
mov
jge
xchg
test
aaa
out
jb
xor
insb
je
add
xchg
andb
rcll
std
push
lods
or
jg
sub
jnp
lock
nop
in
daa
and
sbb
movsl
mov
gs
sti
push
loopne
push
mov
rcll
lock
in
pop
adc
shll
mov
icebp
or
fisubs
ss
mov
mov
jp
mov
js
je,pt
out
xor
nop
and
xchg
xchg
mov
xlat
iret
xlat
jb
out
loopne
sbb
shlb
sub
insl
rorb
sub
test
and
lea
xor
cmpb
xor
call
cmp
adc
lds
ficoms
enter
imul
lods
or
into
adc
int3
das
jg
dec
das
das
mov
push
mov
jmp
mov
jl
andb
bound
push
cmp
jb
test
iret
mov
dec
sar
popa
mov
fucomip
sbb
adc
xchg
arpl
mov
lods
sti
jp
pop
stc
ret
xchg
lods
lret
es
sub
jno
sub
mov
push
cvtpi2ps
push
imull
xlat
xor
xor
dec
push
nop
loop
cmp
xor
mov
push
xorb
and
xor
imul
fstpl
out
sbb
ret
push
add
pop
lahf
lock
iret
jl
repz
fiaddl
sub
ret
push
cmp
or
inc
jae
mov
inc
mov
std
mov
push
mov
popf
jge
mov
fdivrl
push
notl
or
hlt
es
jmp
sbb
and
or
xor
std
or
add
lds
out
jb
icebp
sbb
sub
push
pop
xchg
cmp
push
ljmp
add
filds
sbb
inc
jne
sub
pop
repnz
pop
lcall
adc
lods
cmp
stos
stc
stos
lcall
or
or
xchg
pop
or
iret
mov
shlb
xor
mov
dec
out
pushf
xchg
cli
dec
imul
fs
stos
jmp
les
insl
add
jo
and
repz
aam
dec
jns
sbb
nop
stos
mov
mov
cmp
sbb
in
scas
dec
data16
dec
add
imull
icebp
out
jmp
fldt
mov
flds
and
mov
jnp
addr16
cmp
sar
ljmp
lods
inc
add
rorl
pop
push
lea
dec
ds
ss
fadds
push
scas
push
mov
lret
xlat
arpl
mov
xchg
sti
or
in
or
dec
mov
jne
xchg
push
jg
mov
movsl
mov
nop
xchg
pop
cmp
enter
adc
and
test
outsb
xor
mov
mov
sbb
xlat
ljmp
xchg
jp
adc
cmp
in
ret
push
dec
fists
push
negb
sub
loop
add
je
lds
cmp
jo
cs
push
test
in
jle
mov
mov
pand
jp
mov
mov
repz
ss
adc
shrb
inc
sbb
js
aaa
push
movsb
enter
xor
and
dec
inc
test
in
and
pushf
dec
inc
cltd
lret
hlt
fdivr
mov
add
jno
int
outsb
xchg
sahf
cmc
loopne
out
jnp
and
sub
test
or
mov
mov
dec
lock
ljmp
ss
cmc
jns
pop
testl
jle
jns
arpl
mov
mov
sub
inc
repz
cli
lcall
stos
jne
pop
imul
fidivrs
mov
pushw
into
push
push
fiaddl
add
jae
aaa
xchg
inc
gs
sti
pop
ret
push
and
out
ja
pop
sub
dec
push
adc
or
cmp
lret
repz
mov
mov
push
inc
fs
arpl
push
rol
aas
out
test
sub
xor
outsl
cmp
add
into
inc
in
add
fnsave
lahf
jne
sub
rcrb
add
sbb
sbb
cli
mov
pop
inc
test
or
xchg
into
outsb
dec
dec
cmp
daa
ss
je
inc
adc
add
nop
pop
xlat
fiadds
push
jge
scas
aad
out
iret
mov
sub
lahf
inc
xchg
fidivrs
gs
xlat
jl
sbb
les
mov
pop
fiaddl
and
mov
mov
pop
mov
popf
add
jo
data16
out
sub
fidivrs
mov
addl
jae
mov
sbb
jmp
dec
imul
mov
movsl
insl
enter
popa
lea
iret
pushf
fimull
cmp
pop
lea
test
jb
aaa
inc
jne
cmp
lods
jo
clc
mov
test
push
mov
outsl
outsl
loop
bound
push
cld
adc
adc
aas
mov
xor
ret
aas
jmp
scas
cwtl
push
dec
sub
ror
int3
enter
gs
js
lds
rcrl
lods
mov
rol
inc
in
or
addw
and
out
jl
push
jmp
pop
add
jns
sti
addr16
jne
add
in
sub
add
test
into
stos
test
xchg
or
xchg
dec
mov
jecxz
push
inc
repnz
imul
pusha
mov
faddp
and
pop
das
ljmp
xchg
addb
imul
dec
test
pop
xor
xor
dec
jmp
ret
xchg
scas
ret
loope
xchg
xchg
sahf
idivl
pop
or
and
cmp
stc
push
pop
les
ja
outsb
push
sub
outsl
int
push
lds
xchg
sub
mov
push
push
fistl
xchg
cmpsl
sbb
stc
mov
or
arpl
add
cmp
dec
std
xorl
leave
dec
rorb
xorl
mov
inc
push
sbb
jmp
add
jmp
push
int3
cwtl
push
aaa
jns
jb
cmpsb
pop
sahf
gs
and
jbe
mov
mov
jmp
mov
mov
imul
iret
lods
movsl
stc
iret
xchg
stos
aad
mov
lods
sbb
int3
scas
in
or
push
adc
imul
push
mov
push
stc
mov
or
out
stc
cmp
clc
push
add
fistpl
or
in
adc
out
imul
xchg
mov
and
sub
imul
js
pop
into
insb
jle
ficompl
jno
mov
or
outsl
test
cmp
stc
rcll
mov
push
stc
jns
jo
fwait
and
adc
push
mov
xor
dec
jle
push
jl
cmc
mov
sub
inc
add
lcall
fisubrs
gs
lods
xchg
dec
pop
inc
mov
loop
popa
gs
mov
ror
test
jecxz
xchg
pop
das
or
lret
sbb
ds
dec
inc
notb
cltd
jns
jecxz
stos
int
and
push
aam
mov
fstpl
xor
in
lea
jp
test
ds
loop
sbb
jp
mov
js
cmpsb
out
mov
push
rcrb
pop
add
cmp
das
jecxz
daa
out
mov
rcr
or
cmpsl
push
inc
insl
arpl
or
push
cmp
xchg
cmp
imul
jb
add
xor
enter
jecxz
mov
test
mov
cld
cmp
xchg
push
xchg
xchg
aad
repnz
out
mov
mov
stos
test
adc
stos
add
jno
shll
inc
mov
and
fisubl
rclb
lods
les
xor
rcrl
sub
sub
popf
push
dec
mov
stos
aaa
jns
ljmp
out
pop
or
mov
inc
jge
push
f2xm1
mov
xchg
mov
ja
mov
scas
pop
ret
sub
jl
jne
repnz
pop
jbe
daa
std
fistps
mov
jae
pop
sahf
lods
gs
mov
imul
sbb
inc
shll
xchg
in
push
inc
xor
mov
mov
repz
jle
mov
jb
push
push
jg
bound
and
lods
test
scas
xchg
insl
ret
add
sub
mov
fistps
or
std
xchg
mov
mov
sub
xor
fbstp
pop
lahf
stos
inc
inc
jge
xchg
push
dec
or
lock
xor
lret
dec
adc
sbb
dec
lahf
xchg
mov
aaa
pop
pop
lods
arpl
xchg
lahf
clc
repz
sbb
inc
repnz
dec
pop
subl
testl
test
and
dec
pop
mov
mov
dec
lahf
xlat
push
les
inc
fisubrl
rcrl
movsl
popa
mov
pop
sar
mov
jp
mov
call
lods
movsb
movsl
cmp
movsl
add
iret
ljmp
cmp
mov
jle
es
add
es
push
aaa
shlb
stos
popf
fneni(8087
addl
dec
lea
pusha
mov
nop
or
cli
jl
lods
cmp
mov
mov
jmp
pushf
insl
mov
adc
std
dec
lahf
sub
mov
loopne
or
rclb
mov
adc
mov
pop
mov
nop
pop
pop
pop
fidivl
inc
xchg
cs
iret
rcr
mull
lds
sub
inc
jnp
cld
pop
jmp
aad
aas
dec
inc
addr16
in
add
jp
fsubrl
jge
fidivrs
dec
sub
repnz
mov
push
pusha
add
mov
gs
adc
scas
jno
pop
pop
gs
pusha
roll
nop
pop
std
shrl
cmpsl
sbb
insb
or
aaa
adc
out
mov
or
cmp
push
data16
inc
xchg
inc
pusha
orl
xlat
out
imul
popf
push
push
inc
imul
dec
jl
sbbb
lock
cmp
cmp
mov
das
out
cmp
add
dec
dec
repnz
cmp
adc
sbb
shll
or
cmp
stos
or
xchg
fists
sti
inc
dec
mov
test
pop
xchg
sub
test
push
pop
or
or
jge
aas
sub
jae
out
dec
pop
sbbb
mov
pusha
iret
add
test
pop
jle
adc
popa
cld
arpl
add
jb
cld
inc
leave
sbb
add
inc
inc
dec
mov
inc
dec
adc
adc
call
add
pop
ret
jecxz
cmp
inc
ret
insl
ss
mov
cmp
adc
ja
xorl
std
push
ja
fmull
xor
andl
sub
test
mov
notb
mov
xor
cwtl
cmp
mov
xchg
pop
aam
loop
push
nop
mov
sub
pop
orb
sbb
mov
fimuls
iret
shrb
shr
xchg
int3
jbe
outsl
mov
mov
mov
es
pop
sub
call
sbb
aad
mov
fmull
add
sub
dec
popf
mov
rcll
outsl
jo
mov
pop
cmp
mov
fidivs
out
cmp
sbb
popa
xchg
xor
adc
dec
dec
mov
cmp
cmp
jb
popa
jp
xchg
outsl
pop
or
addr16
pop
add
jae
imul
xchg
xor
sbbl
dec
add
fadds
or
call
mov
sbb
add
inc
imul
jecxz
sarl
pop
sub
pop
shr
insl
dec
in
cltd
push
sub
sbb
fdivrl
sahf
stc
rorl
jge
test
lods
mov
push
std
int
shll
sahf
test
cmpsl
push
int
fucom
imul
push
cs
sub
scas
or
jmp
pushf
nop
pop
mov
sahf
ljmp
xchg
xchg
sbb
xchg
mov
push
ss
pop
mov
sub
xor
cmp
dec
movsb
addr16
pop
lds
xor
adc
fs
ja
mov
adc
cli
mov
xchg
inc
scas
push
bound
je
lea
pop
jb,pt
mov
adc
fmuls
iret
test
nop
xchg
xchg
hlt
mov
dec
add
rorl
mov
in
rdpmc
lods
jne
mov
cmp
mov
add
jmp
inc
loop
jg
in
jp
out
mov
and
xchg
bound
and
cmc
adc
pushf
icebp
xor
push
loope
les
cmc
loopne
push
leave
mov
scas
lods
jno
data16
pop
pop
or
pop
mov
push
aas
test
xchg
push
cmc
dec
mov
jbe
push
push
pop
test
ds
or
popa
jecxz
xchg
inc
rclb
push
or
lods
cwtl
std
popf
into
aam
or
mov
lcall
jo
mov
je
adcb
popf
xor
mov
or
loope
inc
in
divl
loop
mov
addr16
scas
pushf
fwait
inc
and
call
xchg
popf
pop
lret
xor
repz
movsl
shlb
inc
pop
daa
cmc
jp
adc
inc
mov
xor
int3
movsb
fsubs
inc
cmp
fwait
ss
jge
lahf
data16
xchg
adc
shll
jns
and
lea
rcl
sub
add
sub
hlt
dec
ss
jo
add
or
sbb
dec
adc
pushf
mov
cmp
mov
ficompl
lods
mov
insb
testb
les
fwait
je
sbb
push
cmp
cwtl
mov
adc
xchg
ret
inc
mov
mov
pushf
mov
pop
out
std
mov
push
mov
shll
or
mov
cwtl
sub
and
mov
daa
out
cmpsb
lods
fmuls
sbb
bound
ret
inc
es
jns
ficompl
shlb
jle
es
sbb
ljmp
cmp
pop
inc
and
fdivrl
in
leave
inc
fcmove
ljmp
jmp
loope
jp
xor
jno
add
in
fmull
xor
add
js
lret
stos
das
mov
arpl
mov
mov
mov
push
or
mov
mov
xchg
xchg
jmp
ja
icebp
mov
mov
lds
out
pushf
dec
cmp
in
adc
push
pushf
xchg
sbb
scas
pushf
sub
lods
and
fidivs
test
mov
jb
push
stos
movsb
sub
lret
sbb
nop
fs
popf
test
xchg
xchg
push
push
pop
adc
enter
out
xchg
stos
xchg
nop
dec
dec
rcrl
ljmp
fisubl
sbb
pop
icebp
lret
xlat
xor
mov
cmpsl
add
out
jns
mov
loopne
mov
jno
imull
adc
xchg
cli
or
pop
jne
sub
cmp
jne
mov
cmp
jbe
or
mov
sub
in
sbb
add
adc
ret
lahf
sahf
or
sti
sub
mov
jmp
cmp
adcl
adc
cmp
clc
add
xorb
fwait
subl
sarb
loope
daa
sbb
fldcw
bound
adc
mov
inc
mov
addr16
sub
jecxz
inc
push
inc
lahf
jae
add
fisubrl
stos
pop
fdivl
hlt
push
fstpt
sarb
pop
dec
sbb
and
xchg
ret
add
jmp
ret
mov
cmp
xor
cmp
push
jge
pop
mov
xchg
xor
inc
gs
xchg
fdiv
out
test
mov
mov
push
mov
add
shlb
pop
jne
insl
and
call
idivl
fwait
in
scas
jbe
ret
mov
notl
cmp
int3
loopne
insl
and
das
cmp
mov
pop
push
loopne
and
ljmp
insb
xchg
pusha
daa
fcoms
push
test
xchg
inc
fldl
mov
jl
or
xchg
test
and
sbb
mov
jecxz
test
or
ret
popf
mov
adcb
cmp
pop
adc
cmp
stos
js
or
add
scas
mov
adc
jnp
vcvtdq2ps
orl
mov
pop
dec
push
je
cli
out
jns
add
cli
nop
add
idiv
mov
cmpsl
pushf
pusha
fdivp
xor
loope
pcmpeqd
andb
shll
scas
test
mov
push
xchg
test
imul
mov
jno
and
int
mov
xor
fnstcw
cmp
loop
dec
xchg
cmp
push
cmpsb
push
add
jl
test
pop
leave
nop
sbbl
ret
out
pop
add
cmp
rcrb
cmp
jnp
cltd
or
lret
rcrb
sti
xchg
jecxz
pop
mov
rcrl
pop
lods
xor
dec
out
pop
cltd
das
fistps
pop
daa
adcl
xor
jns
sbb
xchg
xchg
into
cli
lock
mov
and
xchg
jl
add
mov
inc
sub
mov
push
addl
arpl
push
xor
add
lea
loopne
test
es
add
movsb
ja
xchg
into
xor
mov
subb
mov
sub
mov
in
jg
sub
test
std
out
mov
adc
loop
push
repz
inc
inc
fidivs
push
insl
lahf
xchg
inc
mov
lods
pop
add
mov
test
movsb
sub
sti
and
or
hlt
push
push
mov
xchg
mov
into
pusha
mov
dec
lret
push
cmp
gs
outsl
mov
adcl
pusha
lret
rolb
or
out
inc
out
xor
xor
dec
ds
and
inc
rclb
sub
jo
les
jecxz
arpl
jno
sti
or
cmc
jne
js
int
adc
xchg
aam
aad
or
lods
mov
add
mov
or
loopne
xchg
cmp
adc
mov
xchg
ds
rcrb
xchg
out
into
les
cmp
cmc
xor
sbb
loop
lahf
or
or
pop
test
repnz
mov
pop
cld
fwait
push
scas
sbb
inc
pusha
add
decb
jbe
mov
dec
mov
cmpsl
fs
cmpsl
shrl
xchg
sbb
les
arpl
fldpi
mov
leave
xchg
shrb
repnz
pop
fisubl
cmp
sub
inc
stos
push
push
mov
popf
in
fs
int3
xchg
lds
add
mov
push
add
jge
xchg
inc
xchg
add
stos
ds
sub
pop
mov
mov
and
arpl
mov
lea
xor
stos
and
jg
out
int
pop
inc
stos
cmp
mov
lcall
add
jno
or
mov
push
daa
fmull
jl
fcoml
bound
add
mov
sbb
cmp
mov
xor
or
jl
add
inc
pushf
jae
nop
aas
movsl
mov
outsl
xor
mov
sub
inc
js
xchg
dec
stos
rclb
adc
mov
imulb
jle
mov
jns
ljmp
addl
pop
jge
adc
push
pop
inc
addb
cs
inc
rcr
cmp
test
or
or
ja
insl
mov
fistps
hlt
sti
and
sbb
add
mov
in
sub
cmp
xchg
outsl
or
cltd
nop
add
push
jl
lret
pop
notl
adc
mov
ret
mov
mov
addr16
out
sti
sar
pop
pop
aam
adc
sub
ja
out
and
sarb
xchg
insb
lods
and
adc
xor
xor
and
or
bound
cltd
mov
jne
stos
mov
xlat
test
rorb
jnp
or
mov
sbb
cmpsl
push
lea
icebp
dec
icebp
leave
imul
or
add
imul
aad
nop
mov
imul
mov
sbb
and
inc
loopne
sti
xlat
in
push
cmpsb
xchg
mov
or
shr
fs
jb
lods
pop
mov
es
cs
cli
test
push
push
ja
mov
push
jnp
std
jae
sbb
scas
cmp
fsubr
inc
fisttpll
jo
filds
std
loopne
xor
pop
outsl
sub
fwait
push
roll
in
mov
std
inc
jmp
shlb
sub
add
mov
data16
js
cld
in
lea
xor
dec
les
mov
push
cli
imul
es
mov
xor
pop
in
push
sub
shrl
testb
mov
out
jle
mov
push
sub
stos
and
es
sub
sbb
nop
lret
out
jge
lock
lods
mov
sub
mov
and
xchg
test
sub
dec
mov
insl
fisubl
iret
adc
dec
push
mov
lods
in
and
jae
add
sub
mov
jmp
in
mov
fs
push
push
shrl
cltd
push
stos
xchg
mov
xchg
call
aam
push
sbb
imul
sahf
cmp
roll
pop
or
les
pop
pop
cltd
pushl
out
icebp
hlt
mov
lahf
push
je
pop
sahf
stc
jae
out
mov
cwtl
aam
xchg
arpl
loop
enter
ljmp
imul
je
push
or
enter
es
rclb
or
movsb
sub
cltd
dec
xor
lods
add
cmp
mov
popa
mov
jecxz
inc
pop
xorb
mov
ret
xor
add
mov
pop
push
or
data16
or
and
xchg
add
cld
inc
jmp
stos
mov
fmull
cmp
test
xchg
push
push
mov
inc
sbbb
je
rorl
xchg
lcall
inc
aas
inc
sub
fsubl
ficomps
loope
mov
in
stos
test
pop
jge
sbb
inc
dec
rep
pop
sbb
push
mov
xor
mov
das
xor
xchg
push
pushf
mov
lods
cmp
call
in
jp
ja
pop
out
in
inc
push
aas
mov
xorl
stos
adc
shlb
and
sbb
dec
and
bound
jle
scas
pop
jb
mov
ss
lcall
jmp
adc
gs
push
dec
cmp
mov
xchg
notl
arpl
cli
lods
cmp
addl
mov
cld
int
dec
sub
mov
cltd
mov
mov
pusha
lcall
addr16
daa
mov
sbb
pop
cmpb
clc
push
jmp
add
sbb
ds
push
xor
jecxz
adc
pop
ss
andb
fstpl
sub
push
shrl
push
push
push
jp
and
pop
lahf
sub
fs
mov
cmpb
ja
and
fsub
and
mov
pop
jmp
leave
lret
lret
xchg
and
stc
jno
jmp
popf
lods
nop
mov
inc
adc
inc
push
or
hlt
sbb
xchg
adc
or
or
mov
mov
adc
addr16
and
dec
mov
gs
xchg
inc
pusha
rolb
push
stos
leave
out
cmp
test
cmp
lea
xlat
cltd
outsb
cld
mov
ja
dec
pop
shl
sub
std
sub
idivl
mov
dec
jo
stos
lret
loope
cmp
popa
jo
pop
popf
sub
cs
ret
and
jae
sub
test
nop
arpl
mov
movsb
lds
inc
insb
push
sbb
cmpsb
or
into
test
scas
or
sti
adc
out
popa
clc
fdivl
lret
fwait
lea
mov
or
and
mov
jge
sbbb
std
fisubrs
aaa
xor
pop
clc
pop
stos
cmpsb
or
ja
incb
lcall
xor
add
mov
jg
movsl
movsb
pop
mov
or
gs
push
mov
xor
mov
add
xor
xchg
out
in
lahf
movsb
outsb
fistpll
xor
stos
push
mov
out
push
adc
push
jmp
cltd
jb
jae
movsb
into
mov
sti
inc
ja
cmp
jp
imul
fdiv
mov
dec
out
je
add
shr
dec
sub
mov
imul
dec
mov
lea
cmp
dec
sbbb
sub
notb
pop
pop
add
jg
cwtl
call
popa
xchg
pop
sub
xchg
sahf
inc
and
dec
dec
inc
mov
fcompl
je,pn
cs
dec
mov
xor
mov
push
pop
cmp
rorb
or
xchg
bound
popf
sub
fadd
inc
xchg
xor
mov
mov
andb
mov
mov
imul
xor
push
cmp
jne
test
cmp
inc
in
inc
or
loop
jp
in
push
sbb
adc
stos
aad
push
imul
pusha
ds
test
cwtl
add
push
jg
push
xchg
mov
and
insl
call
or
ss
pop
push
push
lds
shl
sbb
addr16
fldenv
push
lods
adcb
jnp
fs
roll
dec
stc
dec
arpl
imul
stos
decb
lods
inc
push
mov
int3
pop
push
pushf
push
frstor
addl
addr16
cmp
imul
lea
outsl
lods
jns
and
cmpsl
pop
fmuls
ja
sarb
mov
hlt
and
xor
mov
addr16
call
inc
pusha
cmp
xlat
cmp
lret
mov
jge
out
adc
in
imul
rcr
xor
shrb
sbb
mov
cmp
sub
xchg
xlat
inc
dec
mov
stos
gs
fisttpll
push
int
clc
test
dec
loopne
xchg
mov
ret
lods
xor
mov
pop
mov
cmc
mov
psrlw
call
xor
mov
adc
pushf
fstpl
pop
mov
pop
xlat
mov
loope
push
ljmp
mov
cltd
cwtl
std
push
movl
xchg
loop
jge
xor
cmpsb
les
jle
push
fadd
jmp
push
inc
sub
movsb
loopne
jnp
mov
sbb
mov
std
xor
mov
enter
inc
adc
in
not
scas
hlt
ja
jecxz
test
cmpsl
lcall
in
pop
es
ja
cmp
test
lret
sub
mov
jne
lcall
out
outsb
inc
xor
mov
push
xor
push
stos
mov
js
scas
and
add
xchg
mov
push
push
xchg
cmp
mov
push
stos
outsb
push
mov
and
clc
mov
pop
in
xchg
xchg
add
xchg
adc
pop
ficomps
xchg
adc
bound
mov
dec
lea
jbe
sbb
lret
xchg
cmc
insl
iret
jo
stos
cld
fwait
lods
cmp
hlt
sub
xor
sub
aad
daa
add
stos
sbb
sbb
xchg
xor
das
jl
leave
xor
imul
xchg
ret
xlat
fcmovu
nop
xchg
add
pop
dec
cwtl
addr16
aad
subl
mov
push
leave
lds
in
adc
mov
adc
js
mov
mov
dec
popf
imul
data16
gs
in
popl
pop
sbb
dec
sub
pmuludq
xor
cmp
cmp
jns
imul
addr16
pushl
setle
xchg
inc
stos
mov
int
sub
add
cmp
lock
les
jns
jbe
arpl
in
lcall
adc
nop
xor
and
adc
mov
inc
out
or
and
test
fwait
sbb
push
lret
jb
rsqrtps
cltd
push
stos
dec
test
popa
mov
push
lcall
jbe
lds
cli
mov
add
inc
imul
adc
cli
mov
out
lods
je
push
les
daa
pop
aaa
pop
sbb
imul
cli
lods
pop
cmp
mov
cmc
xor
or
call
iret
out
dec
pop
adc
push
pop
cmpsl
aad
cld
imul
xlat
scas
inc
mov
test
xchg
push
mov
fcomi
mov
push
sbb
loop
pop
ret
add
and
in
stos
add
stos
inc
test
pop
jge
insl
xor
idiv
daa
std
xchg
outsb
stos
add
push
call
cmp
sub
sub
inc
mov
insl
mov
pop
jle
pop
test
xor
into
xchg
push
inc
xor
and
das
test
mov
jne
pop
xor
dec
jl
xchg
and
fstpt
jge
repz
mov
mov
xlat
mov
xchg
lret
iret
xchg
inc
ds
and
popf
jmp
xorl
sub
sub
mov
lret
outsb
mov
jmp
xor
or
cmpb
popl
mov
pop
notl
je
iret
inc
push
in
fidivs
sti
jge
iret
leave
adc
and
mov
xor
mov
xchg
arpl
fwait
pop
cmp
inc
cmpsl
sarb
ret
jle
push
insb
adc
aad
addr16
push
aas
aas
movsl
xchg
or
out
icebp
or
or
imul
pushf
outsb
mov
pushf
mov
add
push
stc
in
jo
adc
cmp
repz
cmpsb
mov
xchg
dec
lret
cmc
jbe
jle
or
call
xor
jge
push
push
add
test
jge
arpl
pop
stos
negb
jmp
aam
mov
sub
arpl
pmullw
push
roll
adc
and
jae
test
adc
in
out
arpl
jecxz
jecxz
jmp
subl
mov
leave
jns
inc
add
adc
mov
ret
pop
sbb
mov
lods
or
push
fimuls
out
in
jle
ljmp
fwait
push
pushf
mov
adc
in
gs
imul
jg
bound
dec
int3
mov
dec
xchg
ret
xchg
fldt
lock
sub
cmp
movsl
cmp
jnp
notb
mov
loop
adc
addr16
fs
repz
pop
in
sbb
cmp
xchg
mov
adc
adc
adc
jp
dec
cmp
js
cmp
cli
cmpsb
xor
and
xchg
cmc
iret
daa
push
mov
cwtl
std
out
push
mov
lcall
jg
rcrl
cmp
inc
or
fwait
add
ss
loop
in
aad
je
orl
pop
sbb
sub
call
push
mov
or
jae
mov
and
int
fwait
ret
mov
pushf
imul
pop
enter
fsubrp
push
movsb
mov
roll
push
enter
sub
dec
cmp
ja
mov
mov
xchg
xchg
pop
gs
jns
imul
pop
or
mov
or
int3
xlat
mov
pusha
rorl
mov
test
fadd
or
sub
pop
inc
jmp
pushf
pushf
leave
scas
cmp
scas
push
mov
cmp
imul
stc
and
test
sahf
sub
xchg
js
fisttps
xorl
adc
stos
leave
addr16
dec
adc
jns
xchg
inc
sub
or
jp
lods
xchg
stc
dec
aad
insb
data16
inc
sbb
das
xor
sbb
mov
rorl
pop
inc
incb
fnstsw
sbb
nop
adc
shrb
adc
loopne
aaa
jae
cmc
dec
pop
icebp
imul
xchg
cmpsb
or
ror
and
inc
stos
xor
lds
pushl
rcll
mov
popw
dec
push
or
and
xchg
ret
in
sub
sti
pop
xchg
jl
mov
add
loope
pop
mov
add
add
jo
jb
cmp
xchg
and
negb
sarb
lcall
ret
cmp
pop
push
cld
or
data16
jo
imul
add
jp
xor
cmc
mov
xchg
lahf
pop
ret
dec
jnp
call
push
mov
rcrb
jne
xor
std
decb
mov
mov
sbb
rorb
cmc
mov
call
sub
out
cmp
daa
roll
xor
sarl
hlt
fisubrl
insb
rcll
mov
mov
or
cmp
lods
cmc
loope
xorb
dec
xor
jmp
xor
jecxz
cmp
ja
mov
sti
xor
and
int3
out
inc
aas
cmc
mov
fwait
xchg
rorl
push
cmp
cltd
scas
dec
fstps
mov
nop
lods
xor
repz
sub
mov
mov
cmp
fs
xchg
mov
adc
pop
add
cmpb
aad
jmp
in
js
add
cs
bound
cli
sub
cs
xor
inc
add
adc
cmp
mov
inc
push
fidivrl
mov
inc
mov
push
aam
insl
ja
lret
adc
mov
in
vpcomuw
and
std
push
out
popa
fidivl
lods
sbb
sbb
insl
xchg
pushl
test
pushf
das
fidivs
sbb
out
pop
xor
mov
adc
cmp
aad
in
into
sub
push
lods
ret
inc
cmp
in
sub
leave
clc
cmp
adcb
lea
sub
scas
cld
xchg
sbb
call
sub
jne
arpl
test
cltd
adcb
pop
ret
xchg
leave
repz
shll
mov
mov
pop
adc
and
andb
xchg
sub
cmpsb
nop
cli
arpl
mov
enter
rcl
rolb
jle
xor
add
mov
xor
jb
adc
icebp
ss
ret
lock
pushf
push
dec
je
mov
insb
lcall
fcmove
nop
push
ret
push
rcll
jno
addr16
or
ret
push
adc
cmpb
int
xlat
xchg
cmp
loope
mov
in
jge
out
int3
mov
xchg
ss
in
movsb
cmp
sub
mov
push
xchg
scas
xchg
push
or
test
in
xchg
fnstsw
in
sarb
cmpsl
loope
push
movsb
divl
iret
and
mov
sub
movsl
lcall
sbb
jb
out
lea
mov
daa
insl
push
popf
sahf
pop
and
pop
loopne
test
test
jae
sub
js
dec
in
mov
xor
cmp
mov
push
sbb
or
xor
stos
or
int
popf
inc
imul
pop
sbbl
pop
scas
add
lds
sbb
test
xor
xor
push
not
xchg
nop
pop
rcll
sbb
adc
cmp
sahf
and
fdivl
imul
pop
je
dec
div
sbb
xchg
daa
hlt
adcb
xor
aam
push
pop
cli
mov
leave
fcompl
mov
mov
push
dec
xor
push
cmp
mov
das
cmp
sti
fs
stos
jbe
push
jmp
clc
aam
scas
xchg
and
lods
lcall
into
out
sbb
lret
cmp
or
cmp
xor
cltd
cmp
ret
pop
pop
int
add
sbb
push
xchg
pop
ficomps
aaa
and
loopne
imul
pop
dec
lret
cmp
or
adc
or
or
push
sbb
popf
sbb
pop
pop
mov
mov
loope
and
loop
push
jge
clc
and
mov
fmull
mov
js
ljmp
adc
out
js
fiadds
push
sbb
jl
jle
icebp
xchg
insl
or
test
sub
xorb
push
pop
mov
push
addr16
jo
xchg
nopl
push
mov
sub
and
addr16
ret
adc
ja
cmpb
aaa
or
iret
pop
xchg
subl
pshufw
cmovns
addr16
cwtl
push
ret
xchg
push
jmp
mov
stos
mov
add
xchg
add
std
ret
lret
ds
in
xchg
or
aam
push
je
outsb
loopne
mov
mulb
mov
jmp
adc
cmp
pushf
pusha
pop
fwait
xor
popa
repnz
fidivs
shlb
or
push
dec
add
cmp
push
xchg
jb
cmp
mov
or
decl
mov
inc
xor
addr16
aas
xor
sub
insb
and
xchg
mov
inc
sbb
xor
push
ficoms
cmp
test
fidivrl
dec
or
ds
jle,pt
adc
xchg
in
test
jbe
jno
dec
pop
jmp
cltd
mov
lock
icebp
adc
dec
add
iret
pop
mov
add
pop
iret
fcoms
ret
adc
or
lcall
mov
adc
jnp
sbb
jmp
mov
lds
mulb
inc
jl
gs
ret
xchg
mov
shll
adc
xor
xchg
push
lret
cld
and
dec
int3
movsl
cs
push
mov
fcomi
ds
xchg
ljmp
bound
mov
push
inc
arpl
sub
mov
xchg
cmp
push
es
adc
push
jmp
out
aam
or
psubsb
jle
inc
xchg
cltd
arpl
hlt
sub
sub
xor
mov
ljmp
das
cmpsb
and
mov
cmp
pop
cmp
movsb
je
nop
mov
push
mov
aaa
inc
test
ficomps
popa
jnp
sbb
js
sbb
jno
int3
sub
mov
mov
scas
test
inc
jmp
or
cmpsb
mov
xor
aaa
jl
lock
jp
jns
sub
sbb
sbb
insb
movsl
into
int3
lcall
fcoml
and
pop
in
pop
jnp
stc
repnz
and
pop
push
movsb
repz
mov
mov
jecxz
fisubs
int
call
inc
xchg
mov
repz
leave
push
sti
adcl
in
inc
and
pop
movsb
incl
mov
out
jl
jno
repz
ficompl
mov
test
cltd
add
jbe
arpl
ficompl
fwait
jo
sub
add
xor
stc
and
call
sub
loope
jno
lahf
and
sbb
xor
fiaddl
pushf
je
or
cli
stos
fstl
push
stos
aas
xchg
push
mov
movsl
lock
xchg
or
mov
sbb
add
add
xor
pop
or
xchg
inc
push
cltd
jge
cmp
and
mov
pop
adc
lret
jecxz
arpl
fdivp
testb
cmp
lods
idivl
push
jle
vpshuflw
push
shll
idivb
bound
data16
outsb
cs
shll
out
rcrl
dec
sbb
js
jmp
mov
fists
fisttpll
test
jecxz
xor
inc
in
out
lret
jae
and
xchg
fsubl
test
loope
jne
push
cwtl
or
lret
es
push
cli
mov
or
push
mov
movupd
ret
in
je
dec
cmp
mov
mov
cltd
test
sub
mov
jecxz
loop
stos
xorl
ljmp
xlat
mov
jp
or
jae
andb
sbb
or
lahf
leave
out
rorb
inc
jb
inc
pushf
lock
or
push
pop
enter
mov
push
icebp
bound
jmp
mov
pop
outsb
sbb
cli
test
sub
xchg
leave
adc
dec
pop
imul
mov
clc
sbb
stos
push
mov
sub
mov
or
scas
mov
insb
jg
push
cmpb
lea
insl
pop
stos
idivl
lea
mov
dec
mov
ljmp
mov
or
aad
lock
push
mov
sub
or
std
and
inc
mov
leave
mov
dec
pop
std
mov
in
test
dec
mov
cli
psllq
aaa
loope
xchg
pop
xchg
inc
inc
sarb
icebp
or
jne
xchg
dec
push
cld
sbb
adc
pop
dec
sub
into
jge
and
rolb
dec
mov
mov
pop
data16
sub
std
dec
stos
sbb
gs
sub
movsl
stos
inc
jecxz
pop
nop
add
fidivrl
aaa
dec
sbb
inc
push
sbb
ja
push
movsl
adc
imul
add
sub
imul
mov
mov
subl
outsl
sub
loop
pop
mov
jae
adc
dec
repz
dec
out
sbb
dec
push
inc
out
aad
mov
mov
stos
aad
ficoms
sub
into
popa
movsl
daa
imul
gs
in
mov
das
cmp
push
movsb
or
repnz
mov
aad
lods
jae
cltd
aaa
in
movsb
aas
mov
xor
fiadds
cmp
aaa
xor
push
xchg
jp
ss
xchg
pop
xor
xchg
inc
or
jle
leave
mov
outsb
push
mov
aad
movsl
fnstsw
out
clc
dec
repz
push
imul
test
xor
iret
fstl
mov
out
sub
rclb
inc
xlat
xor
nop
cmc
loope
mov
and
mov
and
add
jge
add
int
shr
dec
in
fdivl
mov
lock
cltd
mov
shll
dec
lcall
push
dec
test
dec
and
fs
jle
pop
mov
and
inc
fisubl
push
inc
pop
ret
aam
sbb
in
push
sub
andb
aaa
jns
jp
xchg
mov
dec
and
jb
hlt
push
shll
sub
mov
pop
adc
pop
or
dec
pop
aad
cmp
jo
aam
sub
lods
imul
ss
xchg
mov
insb
add
cmpsb
pop
pop
lahf
pop
mov
out
fistps
flds
jge
jb
adc
mov
mov
or
sahf
iret
lock
mov
pushf
mov
mov
int3
jo
pop
cmp
add
mov
gs
jmp
xor
enter
loop
in
sbbl
mov
mov
push
and
lret
pop
mov
jo
insb
push
inc
scas
and
fsubl
ljmp
out
inc
std
mov
jmp
pop
jbe
cmp
or
fdivrs
pop
mov
ljmp
sbb
mov
cmp
in
pop
jns
je
mov
push
inc
jge
loopne
push
mov
sbb
push
sbb
push
aaa
jecxz
push
leave
cwtl
dec
lret
dec
icebp
pop
pusha
mov
pop
pop
mov
xchg
xor
pushf
lret
lods
mov
faddl
leave
sub
iret
pop
sarl
or
imul
js
popf
and
cmpsl
mov
and
scas
cmc
fstps
rcrb
stc
jg
fwait
aam
adc
ss
jne
sbb
ss
dec
ss
dec
ja
pop
mov
les
lock
mov
xor
mov
dec
sub
int
inc
mov
inc
push
dec
insl
mov
xor
repnz
push
push
inc
repnz
xor
jno
je
cmp
rolb
or
pop
pop
sahf
xor
rclb
aad
stos
mov
ljmp
jle
dec
jae
jp,pt
jnp
sbb
push
sbb
mov
lahf
xchg
iret
xchg
mov
ljmp
pop
fsubrp
sbb
push
sbb
mov
loop
cld
mov
iret
imul
xchg
xchg
xchg
xchg
out
fdivrs
push
mov
pop
ds
fldt
test
shll
mulb
test
lods
popf
dec
movsb
shl
lahf
fsubrs
arpl
jae
mov
imul
cmp
jp
or
xor
ud0
fidivs
stos
cmpsl
fs
scas
xchg
mov
stos
mov
incl
ret
jae
dec
ret
mov
lcall
in
movsb
icebp
cmp
and
add
push
pop
add
cmp
dec
xchg
cs
std
negb
jnp
or
pusha
cmpsb
mov
jmp
push
jge
aad
ljmp
lea
add
jns
push
xchg
sbb
out
sub
jb
call
xchg
leave
outsl
mov
or
mov
ds
mov
jmp
dec
inc
lcall
inc
add
dec
loopne
test
es
out
push
sub
mov
fwait
xchg
arpl
dec
nop
mov
lock
push
or
xchg
cli
sti
aad
stos
xchg
or
push
jae
cmpsb
pop
cld
or
sti
pop
or
es
imul
push
or
mov
dec
test
loop
lods
sbb
shrl
dec
sbb
mov
mov
inc
and
mov
pop
lock
mov
jge
out
gs
sbb
or
fildl
adc
jg
cld
ja
stos
pop
sbb
cltd
rclb
sahf
cmpsl
dec
jnp
or
inc
nop
inc
int
repnz
int
jno
daa
xor
ficoml
pop
xor
outsb
stos
test
shl
adc
mov
loop
stos
pop
pusha
mov
add
lods
push
ficoml
int
push
push
dec
gs
and
dec
mov
mov
cmp
jg
jbe
idivl
inc
mov
les
jmp
lea
xor
inc
mov
clc
dec
mov
add
fnstenv
xchg
into
mov
mov
cld
cltd
gs
aaa
leave
pop
out
mov
data16
cmc
fidivs
fidivs
fdivr
je
loope
jns
inc
jnp
into
inc
mov
dec
push
xor
insb
xor
dec
stos
fmul
in
mov
js,pn
into
lahf
fs
or
repnz
stc
iret
and
es
dec
add
cli
sbb
sub
or
mov
dec
mov
lret
shlb
cmpsb
mov
mov
xchg
mov
add
sbb
xchg
inc
into
sahf
mov
sub
jnp
insb
aaa
arpl
sub
loope
fnsave
mov
pusha
sub
sub
mov
lahf
or
call
inc
sbb
pmullw
mov
es
push
fcoml
addr16
xchg
nop
mov
clc
fists
es
cwtl
or
imull
lfs
cmc
pop
push
lcall
mov
int3
mov
daa
jg
out
std
or
push
lods
jl
lock
pop
in
movsb
scas
push
mov
outsl
flds
fiadds
lods
jl
minps
es
xor
pop
out
gs
sti
jecxz
ds
inc
ds
mov
mov
scas
xchg
jg
lahf
leave
shrb
or
sub
pop
data16
and
xor
test
pop
push
sub
cmp
shl
mov
fidivrl
pop
jecxz
bswap
mov
fistps
push
push
push
and
mov
and
mov
ret
jb
fists
inc
mov
movsl
sub
call
cmp
dec
test
jns
rol
pop
ret
push
in
add
jne
mov
mov
jmp
mov
jg
pop
es
sub
add
pop
inc
sbb
mov
shll
sbb
mov
xor
jns
jo
mov
jne
pop
mov
sub
arpl
cwtl
add
cmpsl
cmp
push
hlt
inc
inc
and
jnp
cld
js
dec
push
popf
mov
xor
popa
aam
test
divl
in
xchg
fstl
xor
cmpsb
cmp
lds
in
mov
pop
sbb
sarb
sub
aas
stc
jle
or
insl
ret
dec
int
push
repnz
jo
cld
imul
jbe
rcrb
ret
dec
pop
xchg
outsl
fsubrl
lock
mov
cmp
sub
mov
std
jle
ret
xchg
sahf
out
test
in
mov
ret
pusha
cmc
icebp
inc
lcall
sub
loopne
lock
sbb
test
pop
vmread
in
mov
aas
subb
pop
inc
mov
popf
adc
cmp
adc
adc
sub
mov
xor
inc
mov
push
bound
data16
push
fld1
pop
xchg
daa
cli
and
dec
insb
cmpsl
mov
je
pop
sub
mov
and
mov
lahf
decb
cmpsb
xor
xchg
push
jae
and
sub
dec
mov
fwait
push
push
sub
cli
inc
push
or
or
lret
sub
es
push
xchg
mov
in
add
push
xchg
cmp
in
or
cltd
loopne
pop
cwtl
cli
fsts
cwtl
mov
and
aam
test
mov
cmpsl
or
fcompl
push
lods
sub
nop
sahf
aaa
inc
into
push
cmc
icebp
repz
cltd
mov
js
or
test
push
dec
aaa
out
imul
imulb
loope
mov
jae
dec
das
test
mov
mov
add
inc
imul
xchg
lods
xchg
scas
and
push
scas
pop
fmuls
test
hlt
adc
div
stos
jno
outsb
cmpl
and
add
das
xchg
enter
adc
out
sbb
lods
iret
pop
and
lret
inc
mov
mov
add
adcb
sbbb
test
cmp
jne
push
sub
ret
mov
inc
push
aas
sbb
dec
pop
inc
cmp
addr16
jne
insl
sahf
mov
inc
pop
mov
cld
dec
int3
mov
push
mov
fbstp
lahf
aaa
les
imul
movsl
mov
push
test
test
xchg
jmp
sub
test
frstor
ljmp
xor
loop
imul
out
hlt
std
popa
pop
std
inc
push
or
xchg
sub
insb
mov
sub
mov
aad
mov
add
pop
aad
xchg
in
sbb
imul
dec
movsb
fwait
adc
dec
lret
mov
stos
cld
sti
adc
sahf
mov
popa
sahf
lods
leave
cmpsl
add
pushf
cmp
sbb
xchg
shrl
loopne
mull
stc
into
std
pusha
dec
outsl
mov
fcmovne
lods
and
in
divl
and
xchg
sbb
es
add
add
xor
dec
jb
sub
pop
jne
cmp
sub
cltd
or
push
fldt
pop
jecxz
mov
scas
das
mov
xor
int3
pop
mov
andl
jecxz
outsl
pop
lds
mov
adc
xor
ffreep
iret
es
adc
pop
inc
aas
inc
xchg
fwait
xchg
jbe
jp
idivl
mov
pop
mov
mov
or
pop
addr16
and
cmp
hlt
repz
mov
mov
sbbb
xor
dec
and
pusha
pusha
and
int
cld
pop
fnstsw
js
jmp
arpl
mov
adc
or
cltd
xorb
es
loope
arpl
int3
fs
in
jno
push
repz
nop
and
xchg
xchg
pop
inc
into
fistpl
pop
adc
mov
inc
nop
call
inc
sub
jecxz
jmp
mov
adc
addr16
bound
mov
or
pop
outsl
out
mov
lret
dec
ds
icebp
or
daa
sub
dec
mov
adc
or
jmp
scas
movl
popa
mov
insb
ret
sbb
push
xchg
cmpsb
jo
pop
or
cmp
stos
ret
fstpl
or
pop
sbb
fiadds
es
mov
adc
jg
push
jmp
mov
xchg
fstpl
jbe
xor
xchg
imul
and
fsubp
into
push
out
jp
sbb
dec
jp
in
int3
jnp
sar
hlt
out
mov
xchg
repz
sub
addr16
jp
xchg
stc
cmp
jge
lahf
adc
into
into
jl
add
test
faddl
clc
lea
mov
jb
add
enter
fwait
popf
rorl
push
int
lahf
push
out
shlb
pop
lea
add
push
push
xor
adc
pop
orb
cmp
and
cmp
adc
sbb
jecxz
pop
inc
mov
addr16
stos
xchg
adc
pop
adc
cli
test
mov
test
ljmp
in
or
cli
sahf
pop
je
inc
insb
dec
shr
jp
mov
pop
jp
adc
movsl
repz
or
nop
add
mov
fidivl
add
mov
add
je
jecxz
sbb
xchg
pop
sbb
sub
imul
nop
rcrb
addl
push
xchg
or
cs
sbb
dec
stos
fwait
sub
out
outsb
or
dec
test
xchg
aas
pop
push
mov
ret
and
fcompl
push
sbb
ficomps
xchg
and
loope
lret
pop
loope
sbb
cmp
adc
mov
xchg
adc
nop
setns
adcl
negb
inc
mov
xor
jecxz
cmp
cmpsb
pop
sbb
les
mov
jge
fwait
xchg
pop
jne
mov
pop
or
xor
jmp
je
cmp
mov
in
mov
cmp
sarb
cmc
arpl
movsb
shl
mov
lds
push
not
push
lods
icebp
insb
xchg
sbb
filds
fs
inc
icebp
mov
mov
sbb
adc
clc
flds
push
xor
loopne
cmpsl
divl
mov
sub
les
mov
push
lahf
test
cld
arpl
aad
push
lret
aas
shll
push
fists
ljmp
xor
or
xor
inc
ret
cmp
imul
int
test
stos
pop
inc
adc
push
sbb
mov
mov
xchg
dec
adc
scas
pop
lcall
cmp
in
push
div
pusha
test
adc
and
jbe
and
out
movsl
shrl
scas
loope
add
pusha
subb
cmp
jge
test
push
push
addl
lcall
inc
xchg
into
cli
pop
mov
test
dec
sbb
jns
ja
inc
mov
clc
stos
ja
popf
testl
clc
test
movsl
cli
cli
sahf
inc
lret
test
jmp
fiaddl
lods
adc
fidivs
pop
imul
jecxz
pusha
popa
test
inc
mull
pop
pop
mov
push
out
inc
and
test
dec
mov
jge
repnz
or
xor
xchg
mov
xor
ljmp
pop
nop
xchg
inc
and
cmp
movsb
out
fadds
aad
inc
mov
les
js
mov
mov
loope
je
lods
or
sbb
mov
adc
push
mull
gs
push
pop
dec
push
cmc
dec
out
mov
mov
dec
lods
sbb
push
aam
jno
idivl
push
xchg
icebp
xchg
lods
mov
cmpsb
dec
movsb
outsb
adc
test
js
int
jle
sti
xchg
jo
push
imul
or
mov
mov
jae
lahf
cwtl
ror
callw
cmp
in
cs
hlt
rclb
pop
orl
fsubp
sbbb
test
xchg
enter
dec
mov
or
shrb
jmp
xor
push
in
add
or
jne
pop
roll
fcom
mov
pop
xchg
dec
xor
jg
loopne
inc
mov
stc
ss
dec
push
and
mov
dec
sbb
push
imull
mov
or
sbb
lcall
and
dec
fisubs
addr16
xchg
xor
mov
or
mov
gs
mov
add
ss
xchg
xor
mov
jo
mov
push
ret
push
je
sub
inc
pop
fdivl
hlt
xchg
cltd
jbe
std
jae
iret
out
add
cmp
jno
scas
pop
sahf
fcompl
inc
mov
adc
adc
dec
out
push
sub
lock
mov
mov
daa
sbb
insl
or
stos
add
mov
addl
mov
sbb
dec
rorl
pop
pop
fisttpl
mov
imul
lods
stos
xchg
inc
and
pushf
cwtl
cld
mov
lods
hlt
mov
in
dec
pop
mov
xlat
or
fisttpll
movsb
inc
jnp
mov
jle
jne
scas
aad
jge
jg
jae
test
out
pop
filds
in
xchg
stc
and
and
pop
sub
ret
xchg
sub
or
xor
lret
stos
cmc
xchg
leave
leave
popa
pusha
dec
sti
lods
adc
enter
lods
sub
pop
pop
adc
xor
scas
xor
daa
mov
jae
call
push
mov
rorl
aaa
repz
leave
mov
rclb
bound
mov
cmp
cmp
fucomip
mov
popa
out
inc
mov
sub
insl
leave
and
popa
es
or
jl
xchg
jo
jg
mov
shr
cmpsl
test
dec
test
and
lahf
mov
shlb
jno
stos
mov
scas
xor
lock
and
pop
mov
into
xchg
mov
adc
inc
bound
jnp
or
pushf
loope
lahf
aaa
cwtl
gs
imul
mov
push
mov
scas
dec
mov
out
lahf
movsb
mov
movsl
movsl
lahf
jmp
xlat
sub
dec
dec
pusha
in
icebp
dec
aas
rclb
xchg
xor
ss
jne,pn
adc
adc
and
xchg
adc
cwtl
fdivr
xchg
les
clc
mov
mov
add
mov
lds
incl
ja
inc
cmpl
xchg
dec
test
mov
add
push
cmp
pop
pop
daa
hlt
shlb
jle
dec
cltd
push
mov
out
negl
xchg
jno
xlat
sub
inc
jns
inc
out
push
cs
sub
inc
xor
add
mov
ret
fdivrs
mov
cmp
fsubr
arpl
fstps
ljmp
or
adc
push
rcrb
stos
push
adc
mov
xor
test
es
shl
cmp
mov
insl
mov
out
sbb
jl
adc
xchg
sbb
sbb
push
lahf
es
aam
sbb
test
out
mov
cltd
int3
adc
dec
mov
mov
lods
mov
loope
sub
std
in
cmpsb
fiaddl
pop
shll
in
mov
jecxz
imul
xor
jmp
xchg
inc
arpl
adc
repnz
outsb
sub
in
dec
cmp
mov
push
push
or
pop
pusha
or
xor
imul
push
popa
push
jo
mov
jge
shll
mov
pop
push
mov
add
pop
arpl
xchg
cld
les
or
in
aam
ret
xor
jae
inc
aad
push
movsb
sub
push
lock
dec
cmc
lahf
movsb
xorl
aaa
add
in
mov
jbe
pusha
xlat
mov
out
cmp
dec
jmp
mov
mov
adc
adc
orb
pop
cmp
movl
mov
mov
pop
in
pusha
fnstenv
call
pop
fwait
in
mov
adc
add
push
mov
push
hlt
aam
dec
repz
add
pop
fcmovb
repz
cld
pop
inc
xor
push
iret
rcl
xchg
stc
dec
les
adc
and
pop
xor
mov
and
stc
fisubs
popa
xchg
not
movl
cmp
sti
out
and
aaa
cmp
jns
sub
test
mov
pop
sbb
xlat
mov
dec
push
xchg
sahf
sbb
sub
push
mov
push
or
mov
jnp
pop
rcr
sub
outsl
sbb
in
in
pop
mov
cmpsl
jnp
mov
add
rcrb
out
lcall
push
jae
push
inc
ficomps
mov
out
pop
out
aam
rcrb
inc
mov
fs
and
shrb
adc
pushf
lea
aad
pop
fldt
pop
jp
dec
mov
pop
inc
ret
mov
lahf
xorl
lds
lods
xchg
pusha
jle
rcr
ret
enter
popa
sub
outsl
shlb
mov
push
ret
shlb
scas
imul
mov
loopne
lcall
push
sbb
sub
rorb
dec
les
inc
and
pop
cmpsb
mov
xor
rorl
xlat
fists
lods
mov
cmc
dec
sub
fimuls
or
stc
jns
flds
ret
lret
in
es
sar
insl
mov
bound
movsb
xchg
rol
lea
fisubl
inc
add
mov
addl
setge
pop
push
outsl
hlt
test
pop
jle
mov
in
cmp
sub
rcrb
xchg
mov
mov
mov
xor
lret
sti
es
adc
fcom
push
fstpt
in
popa
sbb
out
and
out
dec
in
adc
rclb
adc
scas
lea
adcl
add
cmp
xor
adc
es
jmp
add
xor
jl
mov
and
in
repnz
push
mov
sarb
rorl
out
inc
into
cmpsl
movsb
insb
sbb
loope
inc
bound
mov
das
lret
xor
test
mov
xchg
loop
daa
hlt
shl
daa
sub
jae
mov
call
push
stc
or
outsb
push
inc
insb
in
add
jg
or
jmp
std
je
push
xor
xchg
xchg
cwtl
dec
pushf
in
int
sbb
sub
inc
into
sbb
adc
xor
gs
push
insb
fisubl
fldl
mov
popf
pop
and
cs
aas
or
cmp
pop
pop
pop
dec
cs
inc
and
jp
jno
sbb
xor
sub
mov
stc
orl
jl
or
mov
xor
mov
cmpsl
mov
sub
adc
inc
sub
fidivrs
addl
out
inc
pusha
lret
mov
and
push
mov
mov
in
adcl
shl
pop
inc
mov
sbb
stc
dec
mov
fmull
out
push
test
mov
shlb
sub
outsl
leave
pusha
jp
test
jbe
sarb
sarb
add
rclb
fidivl
in
and
mov
push
popa
icebp
fwait
add
jne
push
hlt
repz
sbbb
adc
or
rcll
dec
movsb
cli
push
dec
xor
mov
hlt
xchg
out
ffreep
out
xor
xchg
mov
incb
cmp
adcl
mov
shrl
fiaddl
mov
rclb
aam
lret
repz
iret
gs
mov
arpl
mov
aaa
bound
vcvtdq2pd
int
or
pop
addr16
sbb
arpl
movsl
pop
lea
pop
cmp
cmpsb
cmp
pop
lea
negb
pop
or
ss
loope
scas
push
sub
mov
fisttpl
mov
fwait
add
sbb
rcrl
mov
pop
jns
pop
xchg
xchg
inc
mov
pop
jle
sbb
ss
jmp
je
inc
xor
rcll
and
inc
aas
sbb
cmc
out
sbb
jg
push
push
jg
sbb
cmp
testl
out
cmp
ret
dec
mov
movsb
lcall
and
out
repnz
dec
jp
inc
jae
pop
imul
jmp
mov
mov
test
jnp
out
mov
cwtl
std
subb
les
bound
jbe
mov
jecxz
mov
movsl
lds
pop
mov
fmull
cli
in
out
mov
sahf
cmp
outsl
orb
xchg
movsb
imul
xchg
push
push
or
inc
ret
pop
xor
shrl
orb
pushf
outsl
int
pop
sub
fcmovb
jg
cmpsl
dec
int3
inc
imul
add
and
lds
cmp
cltd
pushf
int
fs
sbb
call
es
pop
lret
jle
pushl
aaa
out
fmuls
dec
sub
xlat
jne
pop
jge
xchg
push
xor
push
jno
ret
mov
fdivrp
fildll
xchg
icebp
mov
fisubl
rcrl
stos
xchg
mov
inc
pushl
aaa
fs
pusha
sbb
imul
adc
cli
xchg
mov
movsl
cmp
or
popf
repnz
es
or
and
sbb
dec
or
or
push
cltd
and
push
dec
inc
cmpl
es
imul
adc
push
mov
mov
jle
rcl
or
gs
xchg
in
lret
sbb
cmp
aam
sub
push
jl
inc
mov
je
je
in
and
adc
sahf
mov
mov
mov
inc
out
xor
stos
pop
scas
scas
and
outsl
mov
xor
cli
xchg
push
jnp
pop
mov
test
or
int3
sub
jl
leave
outsl
xchg
rcrl
stos
push
xor
mov
jno
xchg
int3
adc
adc
in
leave
mov
add
adc
and
icebp
adc
pop
add
push
cmc
incl
cmp
xchg
mov
out
in
and
pop
and
mov
or
xchg
outsl
xchg
or
repz
movsb
outsl
dec
cmp
sub
nop
dec
out
sarl
sub
pusha
jnp
mov
mov
idivb
xchg
cmp
jne
mov
aam
insb
jae
push
sbbb
jbe
lods
in
pop
scas
ret
push
pushf
sbb
sub
sbb
inc
mov
push
push
icebp
loop
push
stc
mov
dec
outsl
ret
pop
aam
loope
shll
xchg
pop
and
or
fstps
out
add
pop
insb
xchg
cwtl
xchg
dec
dec
jmp
outsl
pop
mov
cmp
test
mov
pop
cmp
jbe
push
jbe
fstp
pop
cmp
int3
lret
pop
mov
insl
lds
aam
fisttps
inc
push
or
push
sbb
test
das
fstl
ljmp
inc
loop
xor
inc
mov
sub
sbb
xchg
aaa
ljmp
je
iret
enter
sahf
add
or
stos
add
mov
lods
sub
mov
sahf
xchg
mov
leave
and
pop
sarl
in
daa
push
leave
add
loop
and
jge
cmpsb
and
mov
xchg
in
movsl
mov
scas
lcall
push
xchg
jl
add
iret
aad
inc
or
mov
ljmp
xchg
imul
mov
loopne
aaa
pop
shl
jno
sti
mov
pop
sbb
mov
push
xchg
fistpl
mov
pop
and
mov
and
cmp
fcmovnb
negb
mov
lods
jne
lock
lret
sbb
sub
mov
cli
imul
mov
arpl
dec
orl
dec
pusha
xorb
inc
cmpsb
popf
in
and
jb
sbb
test
inc
testl
or
bound
mov
lahf
mov
jns
je
fcoms
sahf
out
fucom
jae
and
inc
outsl
loop
xchg
imul
insl
cmp
andl
jbe
mov
jns
inc
jne
mov
xor
sub
loopne
cmp
cmp
mov
fsubrl
sti
dec
iret
inc
xchg
sbb
inc
jb
sbb
sub
mov
bound
movsl
push
rorl
sub
sti
inc
lea
and
cmp
movsl
push
jne
popa
lret
out
push
insb
pop
push
or
add
addb
lret
lahf
inc
sbb
adc
jb
push
mov
push
stos
outsb
sar
sahf
pop
into
pop
xor
movsl
daa
xor
aad
pop
movl
out
outsb
movntq
pop
jecxz
ss
sarb
xchg
and
xchg
push
jmp
add
mov
sub
jg
sub
test
sbb
mov
sbb
xor
inc
imul
sahf
add
push
nop
sbb
in
sub
rolb
ss
xchg
push
dec
inc
jae
push
lods
push
loope
xor
cmpsb
pop
cltd
sub
int
or
cmp
in
icebp
push
and
fmuls
or
add
movsb
add
or
or
push
inc
inc
jge
scas
mov
add
xorb
sbb
imul
cmp
cli
clc
pop
xchg
fcoms
mov
sbb
mov
and
aaa
aam
testb
inc
in
decb
push
cmp
lahf
or
iret
xor
movsl
out
pop
gs
inc
xor
xchg
jne
in
jl
xchg
mov
insb
sbb
notb
pop
lea
adc
xor
sub
ss
mov
or
jb
or
stc
xor
add
testb
je
add
in
mov
sub
scas
xchg
scas
mov
and
int
mov
data16
out
jae
xlat
dec
sub
scas
push
lahf
pop
sahf
lods
call
in
lret
mov
mov
pusha
test
cmp
xchg
mov
dec
lcall
push
and
in
out
push
cld
into
daa
mov
enter
pusha
jne
fnstenv
cwtl
xchg
gs
or
out
cmp
and
sarl
jae
mov
jno
dec
test
imul
push
cmpb
fsubrs
out
leave
mov
mov
jle
inc
pop
rcll
out
aaa
ss
scas
push
or
jb
je
pop
shrb
xor
xor
imul
xor
rorb
mov
jge
and
stc
popa
lock
fbld
mov
movsb
sti
cmp
scas
addr16
jge
jecxz
xor
sub
sub
in
mov
cmp
inc
loope
pop
add
mov
cmp
mov
push
push
testl
shlb
adc
push
sbb
stos
loop
out
push
fs
testl
nop
push
xchg
movsl
bound
enter
adcb
adc
rclb
jl
into
popa
add
sub
leave
sbb
mov
mov
hlt
mov
loop
mov
enter
push
push
push
in
ss
push
repnz
cs
jno
enter
out
xchg
cmp
aaa
inc
lods
push
mov
cmc
insl
shlb
std
pop
xchg
mov
mov
pop
and
or
lock
mov
std
mov
pop
or
sbb
movsl
icebp
hlt
push
mov
fmul
in
mov
jecxz
loope
sbb
cmpsb
mov
hlt
inc
pop
dec
inc
mov
dec
or
sbb
fnsave
imul
mov
cltd
xchg
add
push
mov
shrb
cli
aam
xchg
je
addb
loopne
add
jl
add
in
xor
push
jge
cmp
or
xor
sbb
mov
dec
loop
in
lret
mov
dec
cltd
xchg
sub
test
xorl
or
imulb
in
popa
ss
out
ret
add
and
mov
push
jns
jne
sub
fstpt
xchg
scas
mov
push
loope
enter
subb
sub
roll
and
cmp
ss
mov
sbb
ret
fwait
pop
shl
or
or
scas
cltd
xor
movsl
push
inc
enter
imul
out
add
fiadds
popa
lods
jb
xor
rolb
xchg
push
fsts
pop
dec
inc
cmp
mov
sub
sbb
mov
pop
cwtl
pop
or
and
sub
rorl
adc
cmp
jecxz
hlt
jle
mov
inc
xchg
or
imul
hlt
pop
fnstsw
push
stos
inc
and
push
xchg
inc
cli
adc
mov
dec
or
add
in
pop
push
stc
addr16
inc
pop
outsb
jg
cmp
stos
add
fldt
pop
cmp
sub
imull
mov
decb
cld
sarb
dec
xchg
xchg
int
mov
dec
pop
sub
dec
aaa
lret
and
cmc
rorb
cmp
cmp
divb
ficompl
cmpsb
push
push
add
sub
fadd
push
das
jno
js
inc
sub
sub
imul
and
mov
fsubl
shlb
xor
pop
push
and
sub
cmp
jb
fidivrl
sub
ja
clc
jae
jl
xor
mov
popa
mov
add
cmp
inc
int
mov
inc
js
inc
and
xchg
dec
cmp
mov
sarb
sbb
in
jbe
adc
push
ret
fmul
jo
int3
int
mov
dec
pcmpeqd
mov
loopne
mov
imul
ja
add
xchg
subl
cmpb
cmpsl
fdivrp
mov
lcall
pop
test
movsb
cli
leave
pop
or
mov
and
call
leave
shl
and
push
inc
jmp
adc
jns
into
pop
pop
je
bound
push
test
mov
push
add
hlt
inc
adc
int
testb
push
add
mov
jnp
pop
sub
std
divl
lret
sbb
dec
lahf
test
shrl
iret
into
xchg
arpl
cwtl
aam
mov
dec
adc
sub
out
dec
aad
mov
pop
sbb
and
testb
sbb
jnp
jmp
xchg
push
inc
or
ds
pop
push
mov
sub
lods
movsl
rcrl
rolb
into
sbb
push
mov
addl
jae
jbe
into
std
inc
add
cmc
mov
es
and
cmp
fstps
jne
mov
std
insb
aas
scas
faddl
inc
jae
cmpsb
imul
or
lods
jmp
cmpsb
mov
dec
data16
loope
repnz
jae
pop
sub
inc
inc
lret
aas
je
das
mov
inc
adc
adc
pop
adc
test
and
xlat
xchg
pop
iret
rol
lea
or
lea
stos
jnp
and
hlt
insl
pop
out
imul
arpl
ret
pop
mov
adc
lahf
mov
mov
inc
cmpsb
fsubrs
mov
add
dec
fmuls
add
dec
push
add
dec
adc
rcrb
lock
sub
outsb
mov
hlt
ret
inc
cmpsb
jno
das
xlat
sbb
mov
push
popa
insl
std
aad
push
fldcw
mov
pop
fldcw
dec
ljmp
rcrl
sbb
mov
push
js
xor
rcrb
sahf
lahf
adcb
test
loop
mov
dec
mov
sub
aad
lds
jg
loop
cmp
push
xor
adc
pop
mov
repz
shll
popf
mov
sub
inc
cmp
lahf
in
and
adcl
jg
or
mov
xor
loopne
cmp
lods
sbb
rolb
jg
inc
iret
insb
fs
loope
jo
mov
or
ja
lea
xchg
aad
aad
fucomip
lock
pop
jl
imul
arpl
mov
scas
inc
shl
mov
ja
das
jo
imulb
clc
push
mov
sbb
add
shll
ja
push
pusha
or
inc
sbb
pusha
insb
cltd
cmp
and
xchg
cmpsl
lea
inc
sub
cltd
pop
jmp
daa
iret
fucomip
ffreep
cmpsb
je
cld
test
int3
mov
fs
jns
ret
mov
jno
test
adc
mov
or
pop
push
loop
mov
adc
pop
adc
mov
testb
mov
push
out
lods
mov
cmpsl
xchg
or
movsl
cmp
cs
xchg
xor
jno
mov
movsl
mov
cmp
std
popf
cmc
pop
and
jne
out
pop
fs
jb
push
push
movsb
aad
pop
sub
sbb
adc
sub
test
rclb
fisttpll
fadd
in
sbb
pop
sub
rcr
push
pop
gs
pusha
aam
subb
neg
lret
mov
sbb
lods
lds
movsb
push
mov
add
stos
pop
popa
dec
xchg
flds
in
add
fxch
push
sbb
sbb
imul
mov
fimull
cs
idivl
dec
xchg
loop
pop
push
dec
dec
ja
mov
sbb
mov
inc
sarb
sbb
aas
mulb
xor
sahf
shrl
inc
sbb
shl
mov
frstor
sahf
loop
std
movsl
xchg
pop
jg
jbe
or
mov
fcoml
lcall
inc
fldl
cltd
push
fcomi
ljmp
sbb
jnp
mov
sarb
les
sub
mov
xor
sub
adc
mov
mov
jae
ret
xor
fnstcw
mov
lock
jp
int
jecxz
dec
mov
mov
inc
stos
insl
nop
inc
inc
scas
stos
stc
hlt
add
adcl
sbb
mov
fistpl
mov
inc
fisubrl
or
add
pop
dec
shld
out
out
xor
mov
or
rcrl
mov
sti
mov
imul
mov
push
cmc
push
and
lea
in
mov
add
mov
sub
push
cli
psubsw
lods
fwait
popa
ljmp
push
inc
xchg
insb
sub
sub
cmp
push
inc
lock
dec
pop
clc
dec
sbb
fdivr
xchg
imul
xorl
dec
inc
ljmp
push
xor
push
cmp
mov
das
sub
das
mov
sub
add
test
sub
jb
rolb
lea
mov
addr16
or
mov
xchg
test
mov
xchg
cld
scas
sbb
mov
out
or
jnp
rolb
mov
cmpsl
and
pop
cmp
or
mov
push
push
pusha
xchg
int3
inc
pop
jle
mov
push
inc
or
sbb
jno
inc
add
nop
and
shlb
idivb
cmp
xchg
adcb
xchg
jo
push
cmp
gs
shlb
popl
jnp
cmp
push
push
inc
stc
xlat
jne
mov
inc
outsb
pop
lods
ss
rep
inc
ss
push
sbb
jae
jmp
cli
push
mov
xchg
fwait
xchg
les
sahf
sbb
outsb
xchg
out
addr16
negb
movsb
inc
mov
inc
shl
and
dec
lods
pop
clc
pop
push
mov
dec
std
mov
mov
mov
fldenv
call
pop
cwtl
sarb
in
cs
sbb
xchg
dec
sub
push
mov
cli
mov
xchg
cli
xchg
dec
cmp
jbe
pop
pop
mov
loop
jg
xor
cltd
leave
and
int
test
sbb
or
xchg
push
or
xchg
mov
cld
and
std
data16
arpl
jecxz
sbb
jo
aad
inc
dec
scas
mov
ret
mov
bound
popa
xor
clc
stos
cmp
jle
frndint
daa
ljmp
push
push
mov
adc
loop
int
sbb
lret
jae
dec
cmpsl
call
inc
add
test
fstpl
mov
sub
popf
jnp
cmp
scas
mov
pusha
xor
bound
xchg
lea
or
push
stc
cmp
stc
ret
and
in
pop
pop
sti
repz
mov
xor
adc
insb
aaa
dec
pop
in
cmp
mov
int3
divl
jge
mov
or
mov
xchg
adc
data16
mov
sub
outsl
add
sti
pushf
test
movsb
sub
and
inc
int3
mov
into
popa
pusha
sahf
imul
mov
mov
gs
sti
and
push
jno
jne
fdivl
dec
es
cmp
outsl
cmp
push
in
jmp
ja
mov
add
test
clc
sarb
insb
jnp
jg
sub
jo
test
in
inc
inc
mov
xlat
shl
and
sub
sbb
mov
repnz
xlat
fs
cmpsl
xor
xlat
pop
inc
icebp
sub
das
in
lret
das
test
test
xor
inc
into
xor
push
dec
lret
dec
jge
jg
xchg
mov
xorb
pop
and
lods
subl
and
xchg
cmp
push
cmp
xchg
push
dec
inc
xchg
jl
outsl
lods
xchg
nop
fldcw
aas
and
jns
mov
sti
and
jno
popa
inc
xor
or
lea
out
cmpsl
pop
mov
jge
mov
shl
in
idivb
pop
mov
dec
subb
iret
in
xchg
cmp
shrb
jne
cmp
data16
sar
and
in
and
cwtl
mov
and
bswap
icebp
add
icebp
mov
rcl
cmp
clc
add
fbld
mov
inc
lret
adc
cmpsl
mov
js
push
mov
xchg
ret
lock
imul
xchg
aas
push
dec
cmp
dec
jae
aad
mov
sbb
lods
add
mov
or
sub
xchg
pop
xor
and
es
jbe
ret
ljmp
lds
dec
fiaddl
shrl
jno
mov
inc
cli
in
jecxz
cmp
push
lahf
dec
test
nop
mul
or
outsb
mov
shl
test
fsubl
cmp
cmp
jbe
ret
sbb
jle
in
sar
and
jge
out
xchg
sub
movsl
psllw
sub
adc
arpl
jg
pop
adc
jg
add
les
dec
loope
cmpsl
fwait
les
sbb
ss
sbb
push
inc
sbb
push
int
or
pop
mov
sarb
cmp
dec
mov
push
stos
imul
das
into
xor
pusha
sti
test
fistl
add
add
or
mov
jae
and
lods
push
repnz
sub
add
cmp
in
adc
add
pop
adc
and
in
push
out
push
shrl
sbb
cmpsl
add
popf
add
push
repz
test
sbb
cmp
or
jno
sub
add
out
mov
add
pop
aaa
insb
leave
sub
mov
in
fsubs
setno
cmp
sub
pop
outsb
in
int3
xchg
sbb
mov
mov
sbb
dec
jns
imul
xchg
mov
aad
rorb
in
mov
arpl
mov
jle
gs
sub
cmpsb
outsb
cltd
mov
popf
negl
sbb
push
inc
mov
pushf
cmp
aaa
dec
mov
andl
repnz
pushf
push
inc
ljmp
rolb
ds
sub
cmp
inc
cltd
and
inc
pop
push
andb
shlb
pop
jne
flds
lret
adc
fdiv
icebp
repz
sub
sar
fstl
dec
je
mov
repnz
sbb
js
and
inc
mov
lock
jne
dec
fwait
jge
add
or
inc
into
cmpl
lahf
loopne
and
push
pop
fistl
lods
push
ja
pop
imul
dec
mov
mov
push
jb
bound
jmp
push
xchg
jo
pop
inc
cs
jg
xchg
sub
scas
dec
jle
push
and
das
mov
inc
hlt
inc
stos
inc
lds
mov
and
add
cmp
aam
push
inc
outsb
mov
jp
shll
bound
out
or
push
scas
pop
incl
frstor
xor
stc
lahf
pop
adc
lds
je
mov
dec
jmp
pop
mov
push
shll
out
lahf
mov
outsl
mov
xor
mov
jle
mov
aam
insb
mov
xchg
aas
mov
enter
sti
xor
cmp
orb
pop
pop
insb
cs
xorb
sbb
xor
mov
mov
roll
mov
loop
xor
imull
jmp
push
in
and
xchg
mov
dec
bound
jb
jae
inc
dec
rcrb
in
stos
pop
mov
cli
fisttpl
xorl
popf
inc
stos
nop
add
sti
inc
xor
jp
enter
pop
pop
decl
lods
cmpl
dec
adc
and
ds
int3
pop
out
mov
mov
inc
pop
or
cltd
xlat
xor
mov
fistl
lock
lock
dec
inc
sub
push
push
fdivs
mov
or
xorb
lret
insl
rorb
shlb
call
addr16
pop
and
mov
out
jnp
dec
lds
pop
xchg
in
sub
add
mov
add
jp
or
mov
lahf
gs
inc
cmp
imul
cmpsb
sub
add
imul
jle
jne
scas
dec
js
ljmp
xchg
cmpsl
jg,pt
pushf
test
sbb
dec
je
outsb
or
and
adc
fdivrs
sbb
mov
dec
fstps
sub
xchg
mov
loopne
fcoms
movsb
ds
jecxz
cltd
jno
test
mov
jle
sub
push
loopne
sub
int
xchg
lcall
cmc
mov
xor
mov
aas
lods
xor
add
fincstp
pop
jae
mov
push
push
loopne
adc
xchg
mov
xchg
lahf
cmc
test
jne
jecxz
sub
scas
jno,pt
xchg
popl
push
and
jl
push
popf
jnp
jecxz
fnstsw
jbe
push
orl
jb
mov
cmp
sbb
xor
into
xchg
dec
mov
inc
les
in
mov
mov
iret
xchg
cmp
cwtl
adc
sub
push
popa
loope
inc
std
dec
dec
push
push
arpl
xchg
push
push
mov
and
scas
lods
sub
inc
repz
arpl
cmp
sbbb
fs
mov
sarb
push
xchg
or
jecxz
test
adc
xchg
addb
mov
xorl
std
cmpsl
aad
call
cmp
mov
pop
sbb
dec
cs
sbb
inc
xor
add
cmp
pushf
push
or
push
leave
outsb
addl
pop
push
cmp
fdivl
pop
sub
inc
data16
inc
jecxz
clc
and
aaa
jge
cli
inc
dec
and
mov
test
xchg
mov
xchg
or
add
ror
jb
lods
pushf
cmpsl
lret
frstor
test
mov
pop
push
sub
lret
jo
nop
sbb
sbb
xchg
inc
sbb
xchg
loopne
faddl
lods
pop
sub
aam
and
mov
xchg
insl
or
dec
pusha
jmp
xlat
pop
mov
sbb
cmp
jne
mov
or
xchg
jle
push
and
mov
jae
in
es
js
cltd
shlb
out
add
lods
mov
push
inc
icebp
sbb
xorb
xchg
icebp
or
sbb
in
mov
fmuls
mov
push
adc
jno
inc
mov
les
mov
jnp
fsubr
pushf
pop
into
add
or
jnp
or
xor
xor
pop
in
mov
in
decb
mov
and
add
mov
cs
dec
mov
and
jne
in
mov
xor
push
or
insl
inc
inc
fldenv
and
aam
dec
mov
cmpsl
dec
fs
jbe
ret
and
mov
dec
mov
mov
data16
jb
pop
jmp
mov
jae
xlat
lods
mov
ret
xchg
pop
pop
sub
sahf
xor
add
test
rolb
xor
mov
xor
insl
dec
sbb
imul
rcll
out
push
hlt
imul
stos
ss
mov
jecxz
arpl
dec
cmp
push
loope
test
nop
sub
popf
jo
call
xor
popa
aam
sbb
lock
movsb
jo
inc
call
lods
mov
or
movsl
jae
leave
das
xchg
jmp
fcompl
and
test
je
or
and
imul
sbb
mov
je
jle
add
sti
sbb
stos
or
mov
mov
and
adc
xchg
lds
xchg
je
lcall
xchg
sub
call
pop
cmc
mov
lret
ret
test
push
arpl
mov
loope
shr
or
int3
nop
sub
fidivrl
lods
xor
xor
jge
xor
inc
arpl
lahf
jmp
mov
push
xchg
inc
pop
push
jnp
test
lcall
and
inc
sarb
in
ds
jne
mov
dec
push
icebp
push
dec
testb
push
fistpl
rorb
dec
cli
dec
ljmp
dec
cmpsb
pusha
pop
insl
push
lret
cmp
push
or
xorl
jmp
cmp
pop
and
aam
ja
mov
adc
leave
adc
pop
jecxz
out
pop
mov
pop
sub
fbld
jno
cmp
insb
imul
je
and
jmp
scas
lret
mov
pop
divb
mov
in
ss
test
pop
or
cmp
push
cmc
mov
mov
pop
push
popf
push
jo
adc
jns
lahf
pop
je
lret
scas
adc
idivb
and
loope
mov
sbb
and
mov
ja
in
lahf
push
mov
arpl
insl
les
xchg
decb
and
adc
mov
arpl
inc
push
xlat
movsl
sub
daa
pop
or
stos
std
std
andl
out
decl
add
xor
les
es
pusha
push
push
outsb
sbb
cmp
xchg
ficompl
shlb
outsl
add
push
adc
add
ficomps
sar
add
into
subb
fcom
jo
push
push
lock
repz
sbb
dec
aad
mov
out
mov
jne
dec
inc
add
and
inc
and
aam
push
rorb
jmp
aam
xchg
imul
dec
lea
cmp
push
mov
shl
or
sub
test
mov
push
shrl
pusha
jns
or
jle
xor
push
leave
xor
cmc
je
fildll
test
fucomip
xor
mov
lods
add
pop
xchg
sbb
xchg
fsubrp
sub
sub
sbb
dec
cmp
shll
hlt
clc
xor
push
pusha
data16
mov
jecxz
xchg
fmull
out
sti
mov
mov
xchg
ja
cmc
mov
push
fwait
jmp
mov
mov
and
push
outsb
aas
in
shrl
jns
mov
adcb
mov
and
das
fimull
movsb
test
ret
adc
fwait
adc
sub
pop
test
mov
inc
and
mov
xchg
das
xchg
xchg
mov
test
cli
mov
add
jg
xchg
aas
scas
iret
and
sbb
or
loopne
xchg
in
sub
sub
hlt
mov
cmc
cmc
test
mov
in
mov
sub
adc
insl
jecxz
and
inc
icebp
mov
jl
popa
pop
inc
xor
test
jne
in
sbb
addr16
movsl
arpl
cld
inc
xor
add
push
jbe
fbld
mov
cmp
ss
jp
in
push
mov
fldenv
jne
stos
mov
or
mov
xlat
jbe
data16
ds
das
adc
pop
mov
add
js
in
push
xor
push
bnd
jge
stc
fwait
cld
lds
sub
int
iret
stos
pushf
xchg
int3
and
or
mov
outsl
push
inc
mov
nop
push
lea
imul
imul
pop
jecxz
sub
xchg
mov
pop
mov
sub
dec
movsl
pop
adc
lock
mov
mov
inc
popf
cmp
cltd
dec
push
std
popa
mov
out
sub
adc
out
jl
jns
xor
in
shlb
or
outsb
addr16
int
scas
mov
cmc
iret
loopne
sahf
sahf
ss
push
inc
and
mov
or
pop
aaa
jae
jne
scas
int3
add
push
fwait
ret
out
out
bound
out
les
cmp
test
sub
pop
inc
cmpsl
in
shll
pop
xchg
add
test
addr16
pop
xchg
adc
mov
cs
sbb
and
rolb
push
push
aaa
jbe
mov
jle
mov
adc
leave
jecxz
or
aam
ret
cmpsl
mov
push
mov
dec
push
inc
scas
clc
fisubrs
xchg
es
imul
jbe
js
jle
stos
scas
jae
adc
or
jmp
mov
mov
ja
les
test
jg
push
push
pop
aaa
in
mov
shl
sub
stc
dec
sub
fwait
xlat
cmp
insl
cmpsl
dec
mov
andl
push
pushf
rorl
inc
sub
cmp
cwtl
add
xchg
outsb
pushf
stc
cwtl
popf
or
icebp
cmp
shl
or
push
stc
pop
add
xor
aam
iret
adcl
push
outsl
sub
shrb
or
jmp
nop
pop
les
adc
loope
xor
fs
lock
or
andl
jge
add
repz
xchg
dec
lret
test
pop
sbb
xchg
jecxz
fiadds
xor
cs
mov
outsb
lods
in
sbb
jp
xchg
arpl
sub
push
xor
rol
std
xor
in
xlat
xchg
jns
sub
test
scas
add
or
test
movsb
stos
dec
idivl
jecxz
es
add
cmp
and
movl
xchg
int3
loop
pop
pop
scas
mov
dec
xchg
movsl
jns
cld
int3
mov
jb
inc
jmp
jmp
cmp
add
lret
pop
inc
xchg
movsl
shll
outsl
jp
jl
dec
jnp
enter
in
mov
adc
cld
push
mov
sub
bound
xor
orl
pop
push
in
pusha
lea
sub
mov
cmc
push
mov
jns
xor
jae
jmp
cmovle
fbld
xorb
xor
dec
pop
enter
test
sahf
dec
addb
xchg
or
mov
xlat
pop
adc
jmp
vrsqrtps
add
push
popf
adcb
fisubrs
xchg
cli
inc
mov
iret
fldt
rorl
push
push
lret
ret
cmp
es
inc
jae
out
movsl
mov
fistps
pop
mov
pusha
in
sub
iret
dec
mov
fisubl
sub
xchg
in
repnz
xchg
test
lods
outsb
cwtl
inc
sar
cwtl
xor
mov
inc
faddl
call
pop
frstor
push
xchg
dec
dec
add
out
mov
scas
mov
dec
add
or
scas
push
mov
push
adc
popa
mov
mov
das
pop
sub
push
mov
out
jnp
fstp
wrmsr
mov
test
aaa
jl
push
das
and
lahf
inc
jmp
sub
call
cwtl
sbb
ret
sahf
imul
mov
adc
mov
cltd
idiv
jae
idiv
push
repz
stos
das
xchg
stc
xchg
pushf
dec
ficompl
sub
outsl
jmp
sbb
add
xchg
rcrb
xor
scas
mov
add
inc
jo
iret
incl
and
adc
das
setns
out
jo
call
test
fidivrs
xor
push
clc
loopne
xor
jbe
cltd
loopne
mov
packuswb
pusha
mov
inc
pop
xor
dec
xchg
vpperm
mov
sarb
or
mov
test
enter
in
xor
cltd
xchg
dec
test
loop
inc
adc
mov
aaa
and
imul
xor
jbe
sub
push
sub
inc
push
pop
push
inc
cmp
jmp
mov
movsl
xor
xorl
mov
imulb
push
loop
call
test
cmpsb
sbb
sbb
sub
ficomps
mov
sbb
sahf
jnp
sbbb
sbb
xlat
mov
and
data16
push
pop
xchg
mov
outsl
sub
jnp
sbbl
sub
dec
cwtl
ss
mov
test
and
mov
jo
insb
dec
sub
dec
cmpsl
das
dec
cmpsb
repnz
lea
sbb
mov
loope
push
pop
lock
aaa
dec
and
add
ret
hlt
loope
addb
movsl
jmp
dec
cmp
pop
or
inc
pop
inc
mov
mov
dec
leave
xchg
repnz
ret
ret
sti
mov
or
es
repnz
notb
adc
jmp
inc
in
lret
mov
int3
or
sub
outsl
or
mov
fildl
inc
sahf
cmp
popf
add
mov
lock
ret
and
xor
lds
jns
or
jo
pop
sti
into
mov
cwtl
aam
push
insb
testl
mov
push
in
add
pop
cmp
push
insb
ret
and
lea
sbbl
decl
sti
int3
jae
mov
mov
mov
jae
mov
inc
dec
sub
mov
loop
and
push
cmp
sbb
cmp
jmp
lahf
xchg
out
lods
test
xchg
jge
cmp
add
hlt
jae
ss
pop
dec
push
inc
lcall
xor
sbb
jnp
fisubrl
push
sbb
or
sar
ret
pop
fimuls
ja
or
jno
push
inc
push
icebp
call
cmp
push
and
sbb
cli
jno
cmpsb
rolb
mov
jle
sub
add
fisttpl
std
int
lahf
jmp
mov
cli
sub
jns
cwtl
xor
xor
data16
cmp
dec
inc
add
in
add
inc
sub
clc
cmpsb
stos
sub
add
or
jne
filds
outsb
jmp
rorb
add
lea
add
add
setbe
mov
mov
add
repz
insb
cltd
sti
or
xor
sub
inc
lock
into
dec
fcmove
push
nop
push
or
jbe
mov
xor
inc
sbb
jns
sbb
dec
and
test
push
sar
cmp
sbb
cmp
mov
nop
lds
dec
or
adc
mov
shrb
repz
pop
pop
pop
shrb
pop
imul
cmp
scas
mov
ja
leave
mov
cmp
pop
jg
inc
pop
in
addr16
sarl
mov
stc
rclb
fs
lds
push
push
xchg
cmp
lcall
xchg
push
inc
not
dec
pop
add
mov
test
lahf
jg
adc
movl
add
inc
or
popf
fsts
ss
sub
lcall
xor
sub
or
faddl
daa
jne
jmp
dec
xor
add
mov
fdivr
or
in
mov
adc
mov
adc
scas
mov
imull
and
lret
push
addr16
sub
fdivl
aas
enter
mov
ret
jne
push
icebp
adc
jo
addr16
push
popf
cmc
mov
imulb
mov
div
sbb
loopne
push
out
arpl
sub
jmp
mov
inc
insl
and
pop
cwtl
pop
fdivrl
mov
pop
ljmp
fmul
jae
imull
sbb
add
es
xchg
test
push
sbb
iret
pop
data16
pop
cmp
shlb
or
adc
mov
add
cmp
shll
decl
ss
mov
lret
sub
jecxz
cmp
lahf
and
out
cli
stos
sahf
enter
mov
mov
icebp
push
dec
xchg
int
adc
xchg
out
mov
or
jne
push
add
dec
icebp
mov
sub
ret
pop
lahf
mov
jge
add
je
daa
insb
out
xchg
pop
adc
aaa
push
mov
pushf
aas
jg
dec
pusha
in
dec
lock
pushf
push
inc
and
aaa
cli
mov
lahf
lcall
je
xor
cmp
inc
xlat
jns
mov
and
xor
jg
lret
pop
dec
mov
or
inc
pop
sub
fdivl
jl
int
fistpl
jae
push
push
lret
jl
push
xlat
jo
clc
cmc
aas
xor
pop
rolb
push
cs
and
arpl
bound
loopne
pop
fisttpll
mov
xor
clc
inc
aaa
cmc
push
movsb
insb
outsb
fnsave
in
cmpsb
loop
or
aad
adc
pop
and
mov
cli
in
aam
scas
sub
jbe
xchg
mov
add
mov
inc
out
cmc
mov
out
xor
stos
data16
jge
pop
mov
ldmxcsr
outsl
ds
push
enter
mov
jp
fcmove
scas
scas
mov
movsl
test
call
cld
aaa
ds
and
mov
sub
dec
sbb
cli
shrl
xchg
clc
pop
repz
xchg
xchg
fsts
dec
sub
rolb
pop
cmp
les
pop
loope
push
or
dec
add
mov
pushf
mov
jae
pop
jge
ds
adc
aaa
sbb
loop
btr
push
das
sub
in
je
adc
ljmp
dec
fwait
iret
fimull
dec
dec
jge
pop
adc
xor
inc
aam
daa
inc
nop
mov
int3
cmp
mov
daa
xchg
insl
je
jns
xor
dec
and
pop
sub
in
jge
imul
daa
and
and
or
std
fstl
call
mov
inc
jmp
cmp
int3
mov
ja
and
faddp
test
je
dec
inc
dec
arpl
pop
mov
lret
pop
sbb
xchg
push
lods
jmp
sub
imul
lea
es
outsl
pop
jnp
xor
add
pop
in
inc
shll
mov
enter
loopne
ja
sub
xchg
imul
imul
scas
out
cmp
dec
mul
jb
push
and
jmp
or
fadd
adc
dec
xchg
adc
or
xchg
push
out
sub
stos
lods
adc
dec
xchg
xchg
push
mov
and
or
fistpll
mov
mov
vaddsd
movsb
sahf
loopne
xchg
ss
pop
pop
cltd
or
pop
jns
data16
mov
or
das
in
sti
sub
imul
or
xchg
add
xor
addb
fstl
or
push
cltd
icebp
mov
lahf
loopw
pop
repz
mov
push
int3
and
cmovnp
outsb
arpl
imul
mov
leave
inc
add
scas
jnp
jno
push
cmpsb
scas
out
mov
stc
in
inc
push
inc
push
imul
outsb
jmp
repz
or
ljmp
sub
repz
jnp
dec
movsl
loop
pop
mov
mov
or
std
adc
test
bound
cwtl
aad
dec
pop
jp
int3
dec
xor
std
sub
daa
jns
inc
sbb
xchg
popf
sbb
mov
jmp
cmp
js
dec
inc
dec
mov
mov
lods
jge
sub
ficoml
ret
jp
cmc
push
sbb
andb
je
int3
push
inc
mov
add
test
xchg
mov
or
imul
lds
mov
call
hlt
jae
jg
and
lods
sub
cwtl
mov
push
xchg
mov
repnz
sbb
and
inc
imul
mov
add
or
inc
dec
int
nop
jle
iret
ljmp
mov
fstpl
rol
ret
push
sbb
enter
lock
call
mov
jb
inc
popa
mov
and
adc
push
inc
inc
dec
xchg
mov
mov
adc
pop
jno
fisttps
dec
add
mov
imul
mov
lods
pop
out
push
sbb
lret
mov
jge
xchg
lods
mov
mov
mov
bound
dec
gs
jecxz
mov
sarb
movsl
movntps
sub
or
mov
sbb
inc
lods
outsl
imul
push
and
mov
sbb
jbe
add
insb
xchg
cmc
int3
inc
sub
stc
repnz
dec
loopne
push
mulb
aas
or
sub
es
lock
pop
or
or
mov
movsb
lahf
mov
sbb
pop
cltd
scas
adc
or
in
pusha
stc
pop
mov
pop
lret
jne
icebp
mov
inc
mov
or
push
push
scas
in
in
inc
loopew
add
jo
and
outsl
out
out
rorl
pop
sub
inc
cmp
jmp
mov
pop
adc
and
lret
call
js
and
lods
fisubs
push
int
jp
incl
cmpsl
pusha
imul
or
cmp
jge
and
popa
fdivrl
xchg
mov
iret
in
and
xchg
repz
jae
cmpb
pop
movsl
push
jmp
das
lret
int
jp
arpl
pop
adc
in
fs
push
mov
pop
or
pop
xor
in
push
call
fistps
jne
aam
push
es
aam
cld
sub
pop
mov
mov
inc
movsl
adcb
pop
jnp
mov
sbb
test
mov
arpl
cwtl
mov
scas
insl
adc
imul
stc
test
mov
cmc
cmp
ljmp
out
fsubr
enter
cmp
in
lds
inc
push
mov
xor
insb
in
icebp
sub
in
and
pop
es
mov
dec
pshufw
jnp
mov
loopne
sub
mov
sub
scas
lods
mov
mov
mov
addr16
lds
aad
sbb
call
out
imull
iret
fildl
dec
jmp
aaa
pop
loop
mov
test
sbb
lock
test
fstl
in
pop
xor
dec
xorl
ja
xor
sbb
stos
mov
stc
imul
rol
data16
rorl
mov
add
mov
icebp
pop
dec
push
in
push
fs
mov
std
inc
pop
fcomps
mov
aas
push
lods
cmpl
ror
mov
sahf
cld
xchg
push
mov
jmp
jne
cld
in
mov
sub
push
jle
faddl
push
inc
pop
sub
mov
inc
mov
dec
lret
inc
popf
cwtl
divb
xchg
imul
insl
xchg
push
inc
mov
mov
sub
cld
nop
ljmp
lock
push
and
push
push
scas
shlb
movsl
es
dec
sub
sahf
and
xor
int
mov
subb
outsb
jns
mov
push
jne
sub
test
bound
scas
sbb
je
push
add
sbbl
leave
adc
inc
movsb
outsl
adc
mov
sbb
mov
sub
fstpl
repz
sbb
mov
aam
fistl
mov
call
ljmp
mov
push
mov
mov
test
xor
pop
hlt
mov
and
mov
out
ret
inc
push
enter
in
add
popa
fbld
lea
add
stc
pop
shlb
nop
fidivrs
inc
sahf
adc
lods
xchg
lret
jae
scas
addr16
insl
mov
push
fwait
or
frstor
ja
push
psubb
xor
add
sbb
cld
pop
shll
or
lods
and
mov
pop
sbb
js
filds
jnp
out
daa
dec
arpl
sub
icebp
addps
cmpsb
inc
shrl
in
out
mov
scas
sbb
mov
push
jbe
adc
sub
cld
cmpl
les
push
mov
imul
add
out
movsl
xor
or
popl
jb
jnp
push
pop
mov
cmc
outsb
jns
mov
hlt
push
das
lods
or
add
lret
cmp
fiadds
mov
pop
arpl
adc
sbb
mov
xor
add
or
cwtl
pop
and
xchg
cmp
jg
and
loop
imul
rorb
cli
mov
std
inc
test
and
jb
cmp
push
pusha
or
sub
jmp
enter
out
sub
pop
rclb
pop
fimull
pop
jl
push
enter
out
repz
xor
mov
repz
or
cmp
std
iret
aaa
or
push
add
fidivs
jne
mov
fwait
test
fistl
lea
lret
jmp
stos
fwait
mov
mov
popf
lods
add
jp
and
in
jno
incb
sbb
xchg
pop
xor
xor
cmpsl
loopne
push
jne
mov
ljmp
sub
aaa
sub
xchg
inc
mov
cs
daa
and
xchg
sbb
sbb
jp
sub
adc
push
adc
sub
cwtl
xchg
hlt
xor
arpl
inc
pop
repnz
xor
inc
cmp
inc
mov
enter
xchg
out
xlat
inc
je
ljmp
sub
loopne
push
insb
jnp
mov
mov
push
jl
cmp
pushf
pop
jb
xor
bound
jge
sbb
and
test
push
insl
push
cmp
or
dec
inc
xchg
decl
inc
adc
fidivrs
mov
mov
jne
add
adc
fidivrs
adc
rclb
dec
sbb
cmc
cmpsb
jmp
add
repz
sub
mov
and
inc
addl
fidivs
xchg
clc
push
push
add
xchg
and
movsl
cld
loope
jmp
daa
or
lret
int
pop
notl
xor
loopne
adc
pop
outsl
mov
pusha
mov
jg
mov
sub
pusha
enter
das
push
test
jecxz
pusha
fcmovb
icebp
cwtl
pop
out
jp
insl
loope
in
mov
dec
aam
cwtl
xchg
loopne
daa
add
mov
cmp
loope
inc
jns
jge
pop
call
inc
ret
lods
nop
lods
out
lcall
adc
mov
adc
lcall
daa
jmp
inc
and
in
or
hlt
sar
in
in
clc
movsl
add
adc
leave
nop
icebp
mov
mov
inc
xor
push
push
pop
fmulp
insb
movsb
mov
je
in
int
mov
pop
pop
dec
and
add
xchg
add
jmp
nop
push
pop
jmp
pop
jg
jo
jo
pushf
in
int
les
or
sbbl
fildll
rolb
movsb
test
mov
fisubs
loop
clc
jle
movsb
iret
sbb
jge
aas
ficoml
test
push
add
cmpsl
and
dec
xlat
dec
xor
popf
mov
cmpsl
adc
out
jns
popf
xchg
jbe
jecxz
dec
pop
sbb
jle
pop
push
je
jl
mov
inc
sub
cs
mov
xlat
fwait
out
mov
test
add
xchg
mov
gs
jnp
dec
xor
mov
push
popf
int
push
mov
dec
and
repz
push
lret
cmp
sbb
pop
cwtl
jo
std
rolb
mov
and
loope
sbb
fs
fs
movsl
or
or
addb
mov
and
sub
fistpll
in
in
jge
inc
test
jecxz
test
addb
inc
jae
mov
aam
jge
add
dec
xchg
clc
mov
test
clc
arpl
bound
push
mull
pop
or
jge
mov
das
cli
cmp
cmpsl
xor
leave
fwait
jge
add
pop
or
push
push
jecxz
dec
pop
aaa
or
addr16
pop
out
std
nop
stos
push
xchg
adcl
cmp
jmp
fistpl
pop
mov
cmp
inc
cmpsl
popf
iret
ror
pop
cli
jo
lock
pop
hlt
pop
mov
adc
cmp
sub
ss
jmp
hlt
xor
daa
cmp
push
adc
idivb
add
push
mov
mov
pop
sub
pop
xorl
pop
cltd
lret
insl
push
js
cmp
gs
pop
mov
out
outsb
xchg
ret
lret
fists
xchg
insl
mov
cmp
push
and
cmpsl
in
jp
push
shlb
insl
mov
cmp
ja
jp
jle
or
pop
xor
jne
xchg
je
xor
insb
adc
pop
popf
mov
pusha
cld
jge
or
push
push
les
lea
call
mov
cmp
data16
enter
js
cmpsl
ds
add
xor
sub
jae
jecxz
adc
lock
sub
sub
inc
call
or
cs
push
gs
cmp
jmp
shl
jl
ficomps
sub
adc
sahf
bswap
pop
xchg
std
and
pop
int3
cmp
mov
scas
sbb
imul
push
add
ja
es
jmp
dec
add
les
mov
sub
mov
sub
popf
lret
cs
cmpsb
xor
add
push
jbe
loopne
or
mov
push
mov
dec
aam
push
jne
push
push
or
and
dec
scas
sub
inc
dec
jo
pop
fdivs
xor
and
pop
movsl
add
stc
xchg
pop
data16
cmp
inc
pop
icebp
repnz
jmp
dec
xchg
leave
xchg
lock
hlt
shll
add
or
and
sbb
pusha
rolb
sub
cmp
mov
jae
les
sub
xor
pop
adc
xchg
test
dec
outsb
sub
cltd
cmpsl
stos
and
sbb
adc
cmp
fs
nop
cld
push
out
jns
fisubrs
dec
inc
sub
xchg
xchg
mov
sbb
or
fsubr
jp
add
lret
rolb
lods
shr
sbb
call
lret
sbb
mov
cld
in
stc
cmpsl
ss
cli
mov
and
es
movsl
inc
outsb
xchg
add
adc
cwtl
cmp
imul
add
xchg
xchg
push
xor
or
lcall
sbb
inc
cmp
xchg
push
xlat
mov
jmp
leave
dec
je
sbb
adc
insb
cmp
leave
les
mov
int3
mov
mov
jle
add
lods
clc
mov
and
mov
mov
pop
jge
cmpsl
cld
cmp
in
in
xor
jp
jmp
sub
lahf
xchg
stos
out
push
jle
mov
push
ret
push
inc
je
add
cmp
jo
std
xor
cmpsl
push
jmp
fistpll
jb
mov
xor
sub
std
xchg
xor
stc
jno
xor
mov
or
pop
add
pop
push
xchg
je
xchg
insb
scas
adc
shr
cmp
fldcw
push
or
inc
xor
lret
mov
pop
into
xor
inc
fisubrl
dec
cmp
and
inc
xor
in
mov
inc
js
mov
je
ljmp
and
iret
shrb
nop
fildll
inc
addl
xor
xor
repz
mov
xchg
adc
repz
fxam
ss
pop
clc
mov
call
pushaw
or
insb
and
push
ficoms
mov
imul
mov
test
fistpll
faddl
in
hlt
add
jmp
mov
in
or
pop
mov
mov
push
xchg
lcall
dec
or
icebp
outsl
scas
jae
add
mov
neg
test
cli
jl
mov
cli
mov
inc
loop
out
fiaddl
lea
rep
daa
dec
adc
movsb
fldcw
adc
mov
jns
repz
adc
aas
push
inc
in
adc
ret
cli
push
mov
sub
add
jmp
popf
loop
adc
pop
pop
mov
cmc
pop
js
aam
push
repnz
jecxz
dec
pop
push
int3
nopl
xchg
cmpsb
adc
sbb
je
pop
fwait
test
jae
push
mov
xor
sbb
insb
mov
xchg
or
das
pop
hlt
stc
jne
scas
movsb
adc
cmp
inc
jne
mov
popf
push
data16
push
and
cltd
or
mov
call
out
stos
xchg
stc
xchg
cwtl
xchg
mov
negl
xchg
mov
adc
rol
lret
ljmp
aad
and
int3
rol
fwait
adc
pop
sbb
movsl
xor
ret
fnstsw
mov
fsubrs
xlat
loopne
mov
popf
inc
add
mov
push
lahf
ja
incb
fidivrs
or
xchg
xchg
lret
pop
subb
cmpsl
and
add
sbb
out
js
loop
or
push
ror
stos
mov
out
add
cmp
incb
test
fwait
and
mov
fdivr
sub
or
sbbl
sub
je
push
mov
dec
jge
mov
ffreep
outsb
addr16
out
std
ret
sbb
push
fs
aad
cmp
pop
mov
mov
sub
mov
shrb
jmp
inc
pop
dec
icebp
jnp
popf
sub
push
loope
sub
dec
out
mov
shlb
inc
sub
call
pop
sub
dec
out
fnsave
pop
imul
ret
mov
mov
mov
ret
fdivrs
sub
test
sbb
in
test
cmp
sbb
sbb
stc
into
add
and
loopne
jmp
pop
pop
dec
clc
xchg
filds
inc
out
jno
gs
sbb
rclb
xor
pop
xchg
xor
dec
stos
pusha
xchg
idivb
mov
das
lea
mov
xchg
lock
scas
aaa
jb
ret
movsb
push
push
mov
push
pop
push
das
dec
sbb
mov
std
jg
or
les
cmp
mov
inc
push
das
inc
jl
or
lret
cmpsl
addl
jmp
je
out
mov
xchg
pop
fisttpl
sub
int3
es
lcall
dec
in
leave
mov
sbb
mov
cmp
jnp
mov
decb
test
xor
push
push
jmp
mov
hlt
cmc
repz
movsb
imul
cmp
and
loope
push
and
sbb
mov
mov
dec
repnz
xor
add
outsb
xor
mov
repz
aaa
push
popf
jle
mov
adc
fildll
pushf
fiaddl
mov
fsubrs
popa
mov
outsb
insb
jg
fbld
test
mov
dec
cmc
loope
js
loope
aas
push
sub
sub
push
jge
jmp
cli
sub
movsb
lds
out
xchg
cmp
jmp
hlt
xchg
dec
xchg
mov
in
outsl
fsubl
movsb
push
or
jne
das
xchg
jno
push
xchg
rcrl
add
mov
xor
insb
adc
mov
xchg
and
inc
mov
dec
dec
xchg
aad
xchg
inc
cld
xor
cmp
js
cmp
iret
cwtl
test
mov
cmpsl
pusha
ljmp
push
xchg
or
pop
imul
loope
test
roll
pop
pop
cmpsb
imul
test
shll
lret
sub
imul
fildl
stc
cmpsl
outsb
jns
lahf
faddp
cmp
cmc
mov
or
pop
repnz
inc
nop
or
in
int3
mov
test
xchg
inc
mov
dec
mov
scas
loop
mov
xchg
lea
pop
aaa
fmul
pop
repz
data16
movsl
xchg
data16
mov
adc
scas
jge
aam
loopne
test
pop
xchg
mov
sbb
adc
fucomp
fisttpl
jae
inc
mov
xlat
mov
inc
and
testb
out
aad
cltd
xchg
cld
dec
mov
cmp
pop
adc
and
outsb
test
jbe
cwtl
arpl
cs
cmp
mov
fildll
call
orb
imul
mov
imul
mov
push
inc
push
or
and
roll
push
inc
clc
adc
lds
jbe
aas
mull
xchg
leave
rcll
mov
push
clc
in
int3
adc
dec
shlb
addr16
inc
push
rcrl
mov
sti
jl
cmp
cwtl
cmpsb
out
cmp
inc
dec
loopne
test
movb
jmp
insb
pop
push
mov
subb
dec
in
clc
pop
ficomps
mov
lret
test
sbb
lods
pusha
pop
mov
sub
adcl
out
cltd
nop
in
lcall
and
sub
stc
dec
cmc
mov
idivl
jae
cwtl
xlat
push
lds
add
js
push
xor
dec
fbld
cld
aam
call
sbb
sbb
push
adc
fdiv
bswap
lods
jae
repz
mov
je
push
pushl
lahf
outsb
xchg
xor
js
cmp
stos
jl
call
vpunpcklbw
es
pmulhuw
bound
fadds
testl
pop
sar
pop
or
sub
rclb
movsl
daa
bound
sbb
xor
dec
aas
mov
repz
jno
lcall
inc
negb
mov
jno
add
ret
cmpl
and
push
add
ljmp
add
sub
shrl
dec
call
jl
cmp
test
mov
dec
jp
in
jne
push
pop
or
mov
popa
sahf
data16
shlb
mov
loopne
xchg
loop
cmpsb
cmp
mov
mov
lods
pusha
lock
mov
cmp
sti
and
ljmp
nop
imul
lret
pop
xor
aas
jl
mov
imul
fimuls
popf
mov
andb
sbb
sbb
mov
dec
out
or
dec
ljmp
decl
mov
pusha
in
pop
xchg
gs
pop
push
mov
jp
pop
mov
sbb
sbb
mov
fcmovnbe
adc
mov
xor
or
jo
insb
xor
cmpb
push
push
xchg
adc
dec
fisubs
shr
adc
mov
cmc
lret
test
loop
pop
jno
fcompl
shlb
mov
lcall
jne
shll
sub
ficomps
jg
mov
or
mov
cwtl
outsl
out
sub
cli
lods
xor
inc
loope
divb
in
mov
dec
cld
ss
add
gs
pop
stos
out
xchg
and
icebp
or
xchg
add
popa
sub
gs
addb
lret
xor
xchg
lcall
movsl
ja
out
aas
mov
sbb
and
mov
mov
cmp
add
mov
lds
lret
add
add
sbb
clc
lret
jle
test
cmp
cmp
leave
repnz
mov
pushf
in
push
cmp
add
xorb
mov
mov
sti
dec
xor
les
push
scas
push
fisubs
push
jae
sub
lcall
sub
fcomp
fwait
popa
rorl
push
xlat
outsl
jp
rorb
pop
arpl
in
push
xlat
out
jb
sub
dec
xchg
negl
fildll
loop
mov
fcoms
sbb
xor
mov
mov
lret
enter
mov
xor
xor
dec
inc
daa
mov
fsincos
and
adc
inc
jmp
lds
aaa
jo
sbb
or
popf
in
cmc
cmc
fistpl
stos
call
and
jbe
xchg
mov
push
fldenv
das
push
fcompl
sbb
cs
mov
nop
adc
popa
pop
loope
dec
rolb
pusha
int
test
mov
movsl
and
push
in
xor
aam
pop
cmp
pop
jno
les
adc
dec
push
dec
sub
fcmovnb
loope
gs
int3
clc
dec
add
jp,pt
push
inc
das
dec
data16
lahf
fdiv
or
or
push
and
push
aam
push
pop
dec
and
enter
icebp
insl
sub
cli
inc
cmpsl
or
sub
into
mov
out
ficoms
lock
outsb
lods
ds
scas
pop
xor
xor
dec
lods
mov
out
sub
cmp
arpl
out
cli
int
sbb
and
popa
ss
cmp
pop
lret
pminsw
mov
mov
test
sub
xor
push
mov
mov
inc
test
cmp
ljmp
mov
inc
aas
gs
imul
pusha
sub
dec
adc
push
push
mov
in
rcrb
mov
add
enter
or
lahf
iret
faddl
sbb
nop
flds
xor
and
orl
add
shrb
cmp
std
xchg
cwtl
xchg
scas
mov
int
mov
mov
fucomp
cltd
outsl
xchg
xor
cs
lret
dec
inc
adc
add
mov
test
xor
scas
fsub
fidivs
sti
testb
push
inc
adc
imul
adc
outsl
ret
leave
mov
cmp
sub
inc
xchg
add
xchg
inc
rcr
clc
loope
cld
lret
or
mov
in
sarl
pop
push
sbb
test
dec
cld
arpl
aam
adcl
out
cmpl
cmp
sti
int
aam
adc
inc
jo
test
xchg
hlt
sbb
ljmp
mov
dec
cmp
cmc
push
ret
sti
lods
lods
stos
pop
xchg
in
cmp
inc
dec
mov
xchg
js
dec
push
pop
test
xchg
es
mov
aad
mov
sbb
xor
adc
aaa
mov
xor
mov
cmp
insb
jge
rcrl
aam
bound
lret
fldlg2
dec
in
mov
pushl
psraw
push
lea
lods
addb
test
mov
fwait
addr16
and
mov
mov
sub
xlat
pop
and
mov
test
mov
loop
xchg
xchg
jp
orl
gs
adcl
fsqrt
xchg
aad
inc
xchg
in
repnz
jge
mov
test
mov
pop
jle
cmp
lcall
jge
seto
out
lods
push
les
fisttpl
lcall
dec
scas
sbb
xor
cmp
ja
mov
fwait
add
inc
hlt
mov
or
jp
inc
mov
in
test
mov
dec
pop
lret
xchg
int3
outsb
lds
pushf
add
mov
ret
dec
adc
lods
jbe
push
in
mov
mov
pop
mov
push
xor
push
cmp
fcmovnb
cmp
cmp
fcmove
push
inc
test
in
adc
jg
push
sbbb
inc
mov
push
lock
jo
push
ficoml
daa
das
sbb
dec
popa
push
mov
push
xor
inc
ret
sub
mov
data16
or
mov
push
xor
fstps
in
add
sbb
fldcw
clc
cltd
xchg
loope
or
dec
push
lods
roll
and
xchg
push
xor
pop
mov
cmp
inc
xor
mov
sub
loope,pn
test
dec
iret
mov
std
jle
mov
push
dec
xlat
cmpsb
jmp
adc
sub
jg
addl
and
in
or
or
pop
test
jle
mov
imul
frstor
jg
fldenv
sub
imul
lret
pop
jle
into
icebp
hlt
sub
pop
scas
std
cmpsl
std
xlat
pop
pop
push
adc
jle
jge
pushf
daa
adc
cli
adc
fistps
ficoml
xchg
or
xor
daa
lock
mov
test
mov
lods
scas
mov
sbbl
out
mov
jns
add
pushf
insl
fdivl
add
test
gs
bound
dec
fsubp
orl
js
test
xor
inc
cltd
pop
xchg
inc
jb
arpl
ret
mov
sub
mov
sub
cld
cmp
jno
das
ret
push
fnstenv
mov
outsl
mov
jp
push
mov
cld
jl
mov
ret
test
sahf
push
xchg
adc
jb
push
sahf
out
sbb
sub
and
test
jle
les
xchg
sti
or
sbbl
mov
cmpsl
dec
aas
ret
imul
inc
rolb
inc
stos
test
out
push
stos
daa
and
popf
or
adc
out
fsubrl
inc
push
iret
pop
repnz
xor
cmp
xor
jno
xchg
dec
push
in
mov
xchg
push
xor
out
mov
dec
cld
pop
cmp
jbe
inc
pop
mov
orl
xlat
push
jne,pt
testl
lock
cmp
cmp
movsb
xchg
je
sbb
in
es
mov
subb
jp
dec
sub
xor
sbb
shr
inc
lret
out
xchg
aad
jae
inc
scas
mov
xchg
test
cld
and
movsb
adc
clc
cmpsl
or
pop
or
sub
aas
mov
ret
mov
call
push
loop
bound
add
aas
js
stos
mov
lcall
pop
mov
rcl
add
mov
push
sub
out
sbb
inc
dec
mov
enter
mov
mov
pusha
xorb
daa
repz
pop
push
das
ret
ret
das
inc
sub
gs
and
pop
adc
jge
push
testl
nop
roll
call
adc
fidivs
jmp
xchg
shlb
insl
decb
and
xorl
xchg
mov
popf
sub
jae
add
sub
push
jns
jne
rolb
jl
sbb
jns
out
bnd
fistps
pop
dec
stos
jno
fstl
or
dec
lcall
es
and
inc
xor
xor
xchg
rorb
xor
into
inc
and
or
mov
xchg
aad
or
shrb
lock
into
or
sahf
sub
mov
fsubl
test
mov
sbb
mov
pop
add
xchg
mov
pop
repnz
dec
rorl
cwtl
bound
sub
loop
fcomi
jmp
mov
fidivs
jae
fwait
vmovhps
jge
and
jo
je
adc
roll
push
dec
lret
jge
jmp
push
xchg
mov
jmp
jno
pushf
pmuludq
aas
jmp
aad
add
xchg
mov
popa
jae
aaa
sbb
sbb
mov
mov
filds
movsb
fsubrl
sub
insb
and
mov
pop
sbb
nop
xchg
mov
mov
push
icebp
imul
dec
pop
inc
jg
fwait
neg
xorb
out
ret
mov
ja
mov
mov
imul
inc
sub
jnp
mov
pushf
add
dec
dec
dec
scas
movsb
pop
add
xor
mov
cmp
push
aam
lcall
fucomi
jmp
and
nop
dec
add
clc
pop
rcrl
test
int
cmp
xchg
call
dec
pop
lret
sahf
fadds
mov
cli
xor
fdivs
sbb
enter
jo,pt
into
sti
stos
sbb
gs
dec
cmp
xchg
cmc
pop
adc
xor
sbb
cmp
or
xchg
div
dec
inc
mov
lcall
mov
addl
into
and
fisubrs
jne
aas
pop
jmp
inc
test
mov
ret
ret
bound
xor
pop
ret
mov
jns
stos
add
or
adc
dec
sub
inc
aas
mov
xor
xchg
jae
pop
dec
pop
xchg
add
out
std
stos
xchg
xor
sub
cld
out
aad
dec
jb
and
xchg
clc
pop
adc
add
xchg
xchg
pop
xchg
jnp
lret
dec
inc
pop
sti
out
adc
inc
push
scas
mov
mov
pop
into
sub
gs
xchg
ss
jmp
xchg
push
push
sti
mov
xchg
lds
push
xchg
mov
mov
bound
outsl
add
pushf
jne
and
dec
mov
jno
mov
imul
packuswb
rcr
bound
lahf
add
pop
jne
pushf
add
dec
aam
jne
sub
popa
cmpsl
test
gs
inc
fstpl
adc
inc
push
clc
jmp
or
adc
add
fstps
xor
shrl
mov
xchg
jo
hlt
imul
fcmovnu
adc
jne
dec
sbb
inc
pop
cmpsb
cmp
or
pop
clc
push
jne
pop
push
dec
imul
loopne
cmp
aam
sbb
iret
addr16
jge
mov
xchg
adc
lods
imulb
shl
ljmp
dec
mov
insl
push
lret
cmc
in
mov
in
mov
sbb
lret
addl
in
arpl
idiv
fwait
mov
dec
cli
cmpl
mov
test
loop
ss
in
dec
popl
mov
movsb
int
sbb
into
in
xor
adc
loop
pop
sbb
jecxz
sbb
sbb
add
lcall
mov
mov
ret
aaa
push
data16
xchg
xor
mov
xchg
stos
fcompl
inc
sub
jp
push
or
mov
pushf
out
cmc
mov
outsb
sbb
aad
fcomi
imul
nop
sbb
aad
add
add
cmp
sbbl
insb
mov
test
xor
xchg
add
outsb
jg
sbb
inc
cmp
andl
and
cmp
pop
cmp
adc
dec
insb
sahf
pop
ds
aad
cld
sub
cmpsb
call
adc
xchg
jg
xchg
jp
pop
adcb
xchg
cli
mov
je
cmp
outsb
clc
cmpsb
jmp
cmp
sbb
adc
dec
push
outsb
lods
pop
loope
fdivrs
xor
leave
mov
in
lods
mov
cwtl
xchg
mov
fwait
xchg
adc
out
cmp
nop
inc
jg
roll
jp
inc
adc
mov
inc
setnp
mov
repnz
lret
inc
or
xchg
ficoms
and
les
dec
gs
test
mov
dec
ja
cld
sbb
lcall
rcrb
sti
mov
nop
clts
mov
in
sbb
xor
push
repnz
fs
movsb
scas
jp
fs
pop
jge
inc
faddp
jno
xchg
test
fildll
sbb
loop
faddl
sub
xchg
push
lds
iret
push
dec
es
mov
lock
notl
xor
mov
or
cmp
popf
jb
dec
cld
fildll
xor
adc
sub
mov
or
inc
fs
aas
xchg
mov
jnp
rolb
or
jg
out
fistpl
dec
xchg
sbb
push
fdivl
imul
iret
jne
inc
jecxz
inc
push
xor
inc
cmp
pop
jle
lahf
sbb
and
add
fistps
inc
add
inc
adcl
pop
jmp
xor
mov
cmp
or
movb
test
mov
push
dec
in
inc
xor
jmp
mov
jge
repz
xchg
iret
cmp
sub
dec
in
pop
or
nop
fnstsw
dec
adc
imul
jno
icebp
pop
sbb
dec
addr16
sti
sbb
jns
test
fwait
call
or
and
mov
push
xchg
inc
imul
lret
daa
daa
out
out
pushf
sbb
popf
daa
cmp
inc
hlt
mov
ffree
or
or
jmp
sbb
in
das
push
or
sbb
or
mov
xchg
aam
clc
xchg
mov
ja
push
or
cmpsl
loope
mov
sub
lret
sub
leave
lret
xchg
cmc
cmp
mov
idiv
inc
cmp
xor
mov
clc
pop
add
imul
popf
test
or
movsl
sub
mov
lret
mov
sub
cmc
cwtl
lret
insb
fsubrl
xchg
xchg
ja
cmpsl
call
movsl
gs
pop
mov
adcb
icebp
pop
out
stos
or
push
ret
fcmovb
jmp
out
cmp
add
scas
add
add
out
and
pop
and
or
shl
lods
ficomps
dec
jne
popa
or
push
in
ret
push
mov
xlat
jae
fwait
outsl
lds
bound
in
cwtl
cmpsb
adc
cmpsb
jmp
rcrl
lea
daa
xchg
adc
mov
jnp
out
mov
test
mov
repnz
les
pop
loop
ret
adc
and
sti
xchg
lods
sti
repz
mov
pop
add
pop
loopne
or
mov
dec
fldenv
jae
inc
gs
pushf
xchg
lret
lret
enter
add
and
xor
inc
or
adc
repz
gs
xor
enter
add
in
sarb
mov
das
cmpsb
or
xor
add
and
icebp
pop
cmp
push
je
test
sub
notb
frstor
xchg
ljmp
jae
imul
loop
popf
fs
js
cmp
sub
inc
test
dec
xchg
insb
jno
sbb
mov
test
mov
in
adc
mov
sti
jo
cltd
in
jge
flds
sub
xor
sbb
repnz
gs
sbb
xor
enter
pop
sahf
callw
jmp
sbb
adc
jle
cltd
xchg
enter
orb
jge
dec
nop
std
jnp
add
cmp
shr
fwait
inc
push
or
inc
rorb
hlt
push
test
scas
ret
psadbw
stos
mov
cmp
or
adc
xchg
fiaddl
daa
dec
cld
ficompl
push
jbe
fimuls
mov
std
mov
subl
js
cmp
mov
adc
xor
push
imul
jo
xor
jle
rol
sarb
xchg
or
clc
dec
ret
cmp
or
popf
or
hlt
jmp
sbb
mov
jg
scas
or
fidivrs
in
mov
adc
lcall
into
xchg
cmp
cmp
ss
xorb
je
sbb
jl
dec
sti
push
sahf
dec
test
inc
xchg
fistl
dec
in
nop
sbbb
daa
cmc
loop
mov
mov
push
outsl
mov
rorb
dec
cld
aaa
iret
mov
mov
in
add
nop
test
ja
pop
inc
mov
ret
imul
sar
mov
cs
in
sub
jo
aad
xlat
push
and
es
repnz
ljmp
pusha
cmp
ds
dec
hlt
mov
dec
jl
mov
mov
push
imul
std
push
in
push
sbb
daa
pop
lret
push
test
icebp
cmp
xor
inc
mov
movsb
addr16
test
sub
push
mov
mov
xlat
xchg
stos
xlat
das
pop
or
nop
test
data16
int3
sbb
mov
out
jae
add
mov
push
sbb
enter
push
jnp
lahf
ud1
push
mov
mov
add
stc
mov
sbb
lret
add
ja
fwait
mov
mov
sub
repz
mov
aam
pop
bound
cmp
mov
mov
fisubl
jmp
movl
cmp
sub
out
out
push
mov
xchg
sar
movsb
in
sbb
add
test
mov
rcl
xor
mov
repnz
add
or
jl
movsl
inc
mov
bound
xor
out
cmc
or
sub
or
jecxz
dec
cld
cmp
sbb
jbe
int3
mov
dec
lea
or
cli
packuswb
adc
mov
cmp
add
popf
repnz
inc
lcall
and
loopne
imul
sub
aad
or
mov
mov
cmpsl
add
dec
fnstenv
push
jns
inc
les
jmp
cmpsl
xor
sarb
inc
into
std
push
imul
cmp
xor
sub
sbb
or
hlt
mov
lods
jmp
sub
test
cmp
test
pop
addr16
fwait
les
sysret
jmp
pop
enter
addr16
mov
imul
dec
and
in
mov
andb
gs
mov
aam
xor
push
pusha
enter
mov
xchg
imul
mov
aam
ja
push
mov
mov
out
add
outsl
inc
popf
test
jle,pn
sub
jb
or
icebp
popa
jl
push
inc
adc
iret
lret
jge
mov
push
fldcw
add
adc
aas
dec
jbe
mov
jb
and
inc
lret
cs
std
sub
pop
jge
mov
je
loop
arpl
pop
sbb
lods
incb
mov
pop
jno
pop
leave
fcmovnb
lea
mov
xchg
mov
leave
movsb
and
mov
ss
xor
stos
push
rcrb
xor
jae
gs
in
aam
inc
dec
xchg
lods
dec
notl
popf
roll
arpl
ja
mov
sbb
sbb
sub
ljmp
sub
lahf
movsl
cmp
push
lcall
icebp
pop
js
mov
push
cmp
add
dec
les
nop
push
lcall
out
loop
fdivrl
lret
and
enter
add
hlt
std
pop
out
rcll
aas
cs
scas
cmp
adc
in
sbb
aaa
in
push
sbb
pop
add
pop
xor
rcrl
jle
cltd
scas
daa
and
ds
dec
cmp
push
cmp
mov
je
shlb
push
mov
add
mov
lods
lea
mov
xchg
sub
dec
sbb
add
xchg
sbb
shll
ret
or
and
mov
add
cmp
xor
push
int
lods
and
push
ret
add
std
adc
jl
incb
shrl
mov
xchg
mov
dec
ret
ljmp
shl
push
or
adc
cmp
inc
test
mov
mov
push
imul
insl
pop
sbb
in
and
xor
cmpsb
jb
scas
dec
call
mov
inc
mov
icebp
push
dec
mov
lahf
inc
xlat
or
lds
add
mov
test
test
or
pusha
testb
pop
jg
imul
dec
mov
mov
sbb
repnz
jno
sub
push
or
out
inc
cli
push
cmpsb
pop
xchg
mov
pushf
mov
stos
test
xchg
movsb
ja
and
lods
addr16
inc
iret
nop
dec
sub
repz
outsl
cmp
aad
pop
and
xor
sub
inc
push
or
ret
or
inc
mov
out
adc
mov
push
dec
jns
pop
or
push
xor
xchg
sub
mov
in
cmp
pop
nop
out
pop
cmp
ljmp
insl
add
dec
jle
mov
mov
loope
mov
pusha
pushf
pop
aad
sub
insb
add
daa
mov
push
mov
cmpsl
xchg
jb
add
inc
insl
popf
dec
fimuls
dec
jmp
cmp
mov
push
cmp
mov
lods
das
fisubrs
sti
cld
add
cmp
inc
xchg
inc
add
xchg
add
imul
mov
mov
xchg
push
pop
mov
int3
andb
out
push
das
add
mov
in
push
fsub
into
leave
in
sbb
mov
push
imul
sbb
hlt
cli
out
rcr
movsl
fnstcw
mov
sbb
or
sub
pop
pushf
jns
adc
int3
mov
fwait
clc
jnp
sbb
jnp
cmp
jp
lret
mov
call
xchg
aas
jns
add
rolb
mov
and
rclb
addr16
pop
mov
mov
adc
decb
sbb
dec
push
add
jle
daa
or
cmp
outsl
mov
fwait
cmpsl
fstp
fsubp
inc
addr16
clc
in
lock
mov
pop
sbb
in
pop
mov
enter
pop
add
jl
mov
push
push
lods
fmull
inc
and
cmpsb
adc
incl
and
sbb
addb
push
loop
cld
mov
adc
stos
out
mov
mov
fwait
xor
push
push
cs
cmp
push
loope
cltd
and
mulb
mov
jno
cmpsl
sub
mov
add
in
xlat
cltd
or
xchg
scas
or
adc
pop
aaa
pop
xchg
aas
clc
pop
sbb
jne
xchg
sbb
mov
cmpsb
sub
dec
cmpsb
test
push
mov
cmpsl
leave
xor
push
or
enter
cmp
cmp
test
cwtl
loope
mov
fisubs
dec
negl
jecxz
cltd
dec
pop
sub
out
das
stos
data16
fldt
data16
call
mov
adc
ljmp
or
pushf
pop
ss
fdivrs
loope
into
sub
ja
aad
insl
and
sbb
mov
xor
push
sub
dec
push
inc
push
jns
in
pop
cmp
das
nop
scas
es
pop
out
xchg
ret
xor
push
xchg
mov
popa
push
mov
loopne
and
lret
nop
adcl
pop
jmp
imul
mul
inc
adc
sahf
in
sub
or
mov
sbb
or
je
test
addr16
jg
jbe
lret
adc
push
aaa
adc
pop
xchg
sub
aas
push
mov
mov
std
lock
sar
pop
dec
lock
mov
lret
mov
std
sbb
dec
push
rcl
and
jae
xchg
sub
mov
icebp
mov
daa
imul
mov
mov
and
movsb
jb
push
cmp
mov
mov
add
add
imul
adcb
or
gs
xchg
sub
lret
sbb
add
in
test
mov
cmp
sub
outsl
inc
pusha
int3
mov
push
cmp
xchg
mov
loop
in
test
pop
mov
lret
pop
sarl
and
pop
popa
push
jne
iretw
xchg
xchg
pop
push
call
sbb
nop
push
ja
and
jae
jb
adc
pop
out
sbb
jp
mov
stc
or
jle
xor
xor
clc
pop
jae
rorl
xor
dec
rolb
mov
es
js
out
repnz
fxch
xcrypt-ctr
cmpsl
sahf
nop
js
dec
cmpsl
lods
fldcw
fsubr
xor
iret
push
pop
and
inc
fstl
add
sbb
pop
pop
dec
into
and
push
aam
pop
xchg
test
xor
cmpsl
out
xor
jnp
xchg
pop
addl
mov
lcall
loopne
stos
adc
aam
out
push
cmp
sbb
jo
data16
mov
jae
in
push
je
cmp
sbb
or
xor
push
es
pop
add
adc
stos
pop
xchg
adc
jmp
push
mov
pop
dec
sahf
daa
mov
daa
mov
adc
add
dec
repz
add
push
push
leave
xchg
pop
iret
cs
sub
sub
pop
jne
negl
and
in
leave
xchg
jne
jecxz
dec
xor
pushf
ljmp
dec
inc
jmp
fisttps
jne
fiadds
lods
imul
dec
sbb
push
cmp
xor
sti
cmp
lahf
stos
fnstenv
jmp
je
push
dec
xchg
mov
xor
stc
and
in
addr16
sbb
aaa
out
sub
scas
cmpsb
fildll
pop
mov
sub
cmp
das
test
xchg
setge
jle
pop
push
mov
jns
test
and
push
mov
pop
and
push
push
insl
adc
test
enter
cmp
add
pop
jle
testb
xor
in
jecxz
ljmp
jno
scas
enter
jl
hlt
xchg
mov
movsb
xor
xchg
dec
jl
jb
lahf
inc
outsl
shl
aam
and
xchg
gs
insl
add
mov
jae
das
clc
inc
inc
ljmp
mov
mov
orl
add
sbb
sub
inc
adc
add
or
gs
stos
jns
cmp
ret
fcoms
int
mov
mov
dec
push
jne
jmp
int3
in
mov
jns
inc
fiadds
inc
repnz
mov
lods
out
xchg
sbb
mov
cli
ret
insb
arpl
test
inc
mov
bound
int
xchg
scas
mov
repnz
sub
test
dec
fidivrl
movsl
arpl
cld
lods
cwtl
and
es
loopne
inc
fildl
mov
fnstsw
iret
push
mov
aas
fldt
cli
int
or
jo
outsl
or
sbb
jo
sub
xor
jmp
hlt
fsubrl
xchg
loop
stos
gs
icebp
out
fisubs
xchg
jle
inc
lcall
into
aad
arpl
pop
adc
xor
sub
xchg
dec
in
add
cmp
jno
xchg
ret
lahf
cmp
inc
cmp
sub
cmp
pusha
xchg
add
push
hlt
test
xor
xor
mov
push
pusha
or
dec
clc
mov
push
xchg
lods
xchg
or
jp
notl
leave
cmp
ret
jns
inc
and
ljmp
xchg
inc
push
sti
cltd
xchg
sbb
shl
loop
sbb
jbe
movsl
jp
sbb
adc
les
in
out
bound
nop
flds
movsb
inc
outsl
inc
jge
movsb
mov
mov
loope
sub
gs
leave
fsub
mov
in
pop
xor
inc
rorl
sarl
sub
push
rcrb
decb
sub
inc
out
setnp
jg
std
pop
sbbb
loopne
js
or
js
pusha
push
popf
dec
adc
cmp
dec
cwtl
and
ja
outsb
stos
and
xchg
andnps
mov
addr16
aam
jns
jbe
clc
xlat
mov
xchg
popa
inc
test
xchg
and
js
push
cmpsb
neg
lds
jmp
inc
mov
mov
lcall
cmp
out
or
inc
pop
icebp
and
sub
out
mov
sti
xor
xchg
and
adc
mov
inc
loop
mov
push
das
add
dec
vpackssdw
dec
jge
xchg
mov
mov
xchg
cltd
ret
mov
cmp
int3
das
fcmovu
xchg
mov
jae
xchg
mov
scas
xchg
je
popf
aas
mov
cwtl
mov
add
or
fcompl
jge
mov
jl
jle
or
inc
push
nop
movsl
subb
lds
cmc
push
mov
and
sub
push
mov
sbb
daa
leave
shlb
sub
xor
std
icebp
sub
das
pop
cld
imul
ds
cmpsb
adc
in
mov
add
cmp
fidivl
inc
stos
shrl
jne
dec
push
or
lret
xchg
add
add
pushl
imul
aaa
fbstp
sub
lret
mov
cmp
adc
fmuls
xlat
sbb
xor
lods
into
sbb
cmp
pushf
xor
pop
out
lods
incl
sbb
pusha
arpl
outsw
popf
and
dec
dec
iret
stos
in
int
sbb
pop
adc
mov
adc
mov
add
pop
mov
pop
xchg
mov
xchg
and
popf
mov
roll
xor
mov
cmc
popa
outsb
or
sbb
rol
call
mov
jge
call
sub
lcall
mov
adc
mov
lock
les
mov
cwtl
ljmp
lds
dec
pop
std
and
out
adc
push
ds
gs
test
pop
cmpsl
dec
and
shrb
aaa
cmp
aad
and
icebp
sub
fisubrl
icebp
xor
dec
jnp
js
mov
pop
dec
in
sub
mov
pop
jae
repz
xchg
test
addr16
rolb
fldcw
mov
insb
in
inc
pop
jmp
in
inc
ja
aad
xor
sub
xor
ja
inc
jns
repnz
or
stc
sti
pop
push
ss
nop
loope
lds
mov
mov
or
add
jmp
aaa
jmp
js
cld
add
mov
std
dec
ret
nop
ja
imull
push
out
sbb
cmp
in
xor
mov
sub
clc
jns
sbb
faddl
inc
popa
mov
pop
negl
lods
fmul
and
adcb
pop
cmp
aam
or
cld
cmp
ds
sar
sti
lods
movsb
dec
lahf
rcrl
cmc
xchg
cmp
out
es
mov
adc
sahf
in
dec
xlat
jae
repnz
lea
cmp
cmp
push
sub
sbb
jg
shrb
loopne
subl
jbe
or
test
mov
out
shll
add
jmp
jmp
sub
call
dec
mov
or
xchg
sub
iret
fadd
push
mov
pop
movsb
push
scas
inc
das
lret
and
pop
lock
dec
cwtl
in
call
xchg
cmp
dec
cmpsb
daa
dec
or
adc
nop
adc
imul
call
lds
or
idivb
cmpl
mov
adc
cld
fldt
mov
xor
out
cli
xor
lea
stc
mov
rorl
and
mov
int
call
cmp
aas
xchg
data16
roll
lcall
lods
outsb
xor
fidivl
int
xchg
cmc
sbbl
shlb
data16
xchg
push
enter
rorl
mov
sub
mov
cmp
icebp
out
xor
push
loopne
mov
and
iret
inc
mov
out
lahf
or
test
pushf
ret
or
cli
and
orb
mov
outsl
stos
pop
fwait
pushf
xchg
je
sbb
lock
ja
cmp
mov
js
movsb
xchg
arpl
pop
in
arpl
fistps
inc
es
dec
jbe
xor
push
or
lahf
xor
pop
jo
aaa
dec
and
pop
sbbb
imul
inc
xor
xor
mov
shll
shl
jg
and
dec
movb
cmpsb
repz
imul
sbb
int
pop
insb
ret
cld
inc
jae
cmpb
or
in
push
and
inc
ljmp
gs
daa
xchg
test
lcall
push
pusha
add
mov
dec
push
sbb
adc
lret
lock
repnz
adc
orl
inc
leave
mov
int
test
jno
push
cmp
mul
cmc
stos
dec
das
dec
cltd
mov
add
sub
pop
cmp
iret
stc
stos
jo
lret
mov
mov
or
fst
add
out
sub
loope
jg
jb
xchg
loopne
les
or
in
and
in
dec
and
hlt
mov
adc
mov
test
sbb
xlat
shll
in
dec
xor
sbb
lods
imul
sbb
inc
into
adc
adc
xor
pop
dec
fadds
leave
or
jge
jl
mov
xor
mov
mov
mov
aad
mov
sbb
clc
repnz
xlat
decb
mov
inc
pushf
mov
dec
out
int3
mov
es
or
fists
stos
or
mov
or
popf
add
dec
push
mov
test
jno
add
cmp
imul
sbb
outsl
jno
in
ss
lahf
shll
imul
popf
mov
into
mov
push
add
mov
jb
fsub
sub
mov
xor
sbb
outsb
test
jg
rcrb
out
loope
test
push
xchg
cld
add
jecxz
mov
xchg
xchg
pop
sbb
ss
ljmp
pop
inc
stos
mov
bound
lds
dec
pushf
shlb
fimull
or
sub
sub
sbb
inc
dec
dec
pop
mov
mov
cltd
imul
mov
scas
sub
sub
stos
pop
xchg
in
add
sub
in
int3
pusha
cmc
mov
sti
std
aad
mov
int3
incb
js
dec
lcall
jne
xlat
xchg
leave
xor
test
in
xchg
jge
fildl
add
pop
subb
repnz
lcall
mov
pop
adc
push
and
les
ss
or
repnz
cmpl
dec
dec
rcll
mov
push
sub
jo
and
inc
adc
rol
adc
addr16
mov
jnp
xor
insl
xchg
outsl
jne
mov
jge
push
inc
imul
rcll
cmp
sbb
xor
test
rorb
cmpsb
sub
test
mov
in
push
adc
dec
dec
mov
mov
in
mov
dec
jle
scas
pop
adc
mov
add
call
cmp
movsb
arpl
push
or
gs
enter
in
lods
insb
mov
xchg
mov
dec
aad
xchg
xor
std
push
and
adc
pop
or
fcomps
test
sti
je
pop
sahf
push
and
push
mov
jo
mull
mov
scas
ljmp
lods
outsb
push
jl
pusha
into
push
ret
leave
adc
inc
int3
pop
lds
adc
jo
aad
mov
aam
jle
ret
inc
fsubs
out
mov
hlt
shl
in
push
or
in
loopne
xchg
sub
xchg
mov
mov
cli
out
mov
pop
sbb
dec
jl
jg
push
mov
ss
out
push
aaa
loopne
xor
scas
dec
cmp
push
xor
ja
fisubrl
inc
call
pop
out
daa
sbb
fmull
jge
int
sbb
pop
mov
je
mov
sbb
rcll
mov
add
lahf
mov
shrb
loopne
lret
cmp
fdivrl
das
jle
inc
loope
aaa
cld
int3
lahf
dec
inc
fistl
sti
cmp
mov
dec
xchg
movsl
push
fcoml
or
jnp
sarl
fidivs
test
jnp
pushf
mov
into
lods
pop
pop
scas
cmp
and
dec
xchg
js
push
repnz
xchg
imul
es
xchg
pop
push
xchg
sub
mov
adc
mov
jl
xor
test
in
insb
push
pop
mov
or
cmp
clc
mov
scas
mov
shll
es
fisubrs
lcall
dec
jne
adc
stos
mov
pop
std
pusha
jns
sub
and
sub
arpl
test
push
lcall
inc
cmpl
adc
jecxz
xlat
xorb
and
call
add
mov
loopne
sub
out
mov
incb
and
push
cltd
fidivrl
cmc
leave
mov
ds
mov
mov
popl
outsb
push
mov
jg
loopne
mov
leave
in
add
fdiv
inc
rol
sub
in
fidivl
inc
rorb
add
sbb
jbe
pop
je
mov
dec
jge
outsl
orl
std
in
fbld
rol
jmp
push
shrl
xor
repz
inc
xor
ljmp
jge
and
js
nop
repnz
sub
jno
xchg
jp
mov
add
pusha
das
pop
fdivl
fisubl
arpl
jno
ficoml
sbb
adc
cwtl
push
aam
scas
cmp
bnd
out
pushf
mov
xor
sbb
mov
pop
leave
ds
pop
cld
mov
xor
into
loope
ljmp
fldcw
in
les
push
xchg
inc
cmp
cmp
dec
dec
or
push
rcrb
push
pop
cmp
jge
sub
out
dec
insb
cmp
add
mov
frstor
mov
out
add
and
fsub
inc
fs
aam
and
insb
jb
mov
fildll
fmuls
cmp
mov
sbbl
jo
stos
jl
lods
sbb
ss
pop
and
jmp
cli
cli
dec
and
pop
outsb
into
lock
lea
mov
jmp
fidivl
sti
inc
xchg
mov
xor
cmp
jge
loopne
ljmp
lods
pushf
mov
xchg
lock
cs
dec
fsubrs
adc
and
pop
sti
push
sub
mov
js
jno
loope
pop
sarl
popf
test
lret
adc
in
pushl
add
les
fcomip
hlt
pop
lods
imul
dec
adc
mov
shr
pop
mov
cwtl
cmp
fidivl
fwait
lods
insl
iret
pop
scas
pop
pop
sub
and
cmp
sbb
cwtl
adc
cwtl
dec
repz
mov
fstpl
mov
fnsave
or
mov
iret
sbb
aam
jo
enter
in
mov
fld
test
push
jp
sbb
inc
into
sub
jecxz
rorb
inc
dec
jmp
lock
cmp
sahf
or
dec
bound
out
sar
popf
fimuls
mov
or
lock
pop
jle
shl
cmp
jp
popa
out
dec
icebp
pop
movsl
insl
sbb
jmp
mov
jp
js
cld
insl
sar
stos
mov
jle
insl
lcall
sbb
cld
xor
and
xchg
and
jbe
adc
int
aam
fdivrs
in
adc
pop
push
xor
pop
mov
das
xor
insl
insb
pop
inc
dec
into
dec
test
popf
pop
add
xchg
add
push
or
inc
hlt
add
dec
cltd
dec
push
orl
loopne
pop
fimuls
jl
mov
jge
loopne
sbb
pop
test
push
inc
sub
cmc
mov
pop
mov
scas
mov
push
mov
jne
lods
lods
sbb
bound
shr
fsubrs
push
xchg
popf
pop
mov
sahf
testb
xchg
and
dec
xchg
hlt
dec
push
test
inc
push
jae
dec
xchg
loopne
sub
lret
sti
pop
test
pop
add
lock
into
jbe
xor
jb
aad
sahf
inc
outsb
cmpl
mov
les
xchg
leave
cmc
je
jns
push
pushf
cmp
inc
in
push
xor
movsb
pop
and
dec
pop
dec
frstor
add
ljmp
cmc
push
and
movsl
xchg
cmp
ret
pop
cmp
push
sbb
jo
lahf
jl
mov
jmp
negb
out
rcll
mov
pop
push
out
bound
or
dec
add
out
add
cwtl
jno
sub
mov
xchg
jnp
push
xor
cmp
xchg
lock
and
cli
mov
imul
jp
or
push
xor
inc
js
insb
sub
sbb
mov
ds
cmp
scas
xor
and
sub
lods
lods
incb
xor
ffreep
dec
fildll
ja
mov
inc
sbb
stos
in
pop
in
add
dec
xor
mov
push
and
mov
xchg
lret
not
adc
fwait
mov
fcmove
outsl
add
sbb
mov
or
gs
fwait
das
or
cmp
div
add
jbe
push
repnz
adc
push
stc
call
mov
adc
scas
inc
cli
fsubl
mov
sub
out
adc
shrb
inc
mov
jecxz
shlb
std
gs
dec
xchg
sbbb
ds
mov
add
arpl
sahf
jo
push
scas
inc
add
pushf
sub
jnp
outsb
in
shll
inc
jle
push
in
dec
adc
sub
outsw
xor
push
addb
fcoml
mov
pop
int3
ret
and
cwtl
inc
sub
push
cld
push
pop
je
add
sub
mov
idiv
inc
and
out
push
in
or
inc
jnp
mov
jl
mov
std
or
inc
add
push
and
iret
popf
das
movsb
mov
incb
inc
lahf
xchg
fwait
push
mov
add
inc
lcall
aam
push
in
jnp
subb
inc
es
mov
out
outsb
aam
je
lcall
add
dec
and
lret
ret
lret
pop
cmovle
ja
mov
das
xorl
rclb
push
ffree
adcb
imull
shl
adc
scas
push
mov
mov
and
ret
lret
cmpsl
leave
push
adc
inc
fwait
subb
mov
jne
popa
mov
push
out
push
xlat
add
and
jecxz
inc
mov
loop
or
pop
or
cmp
adc
dec
jne
es
mov
rep
icebp
mov
fsubr
xlat
dec
add
adc
add
cmp
bound
sbb
xor
es
imul
and
les
pop
mov
mov
xchg
push
loope
xchg
cli
stos
clc
mov
fisttps
stc
scas
push
jnp
mov
inc
ret
mov
jmp
lcall
andb
push
mov
xchg
or
test
rol
pop
or
test
jne
scas
mov
sarb
mov
lods
pop
ret
mov
dec
pop
push
sub
sub
jp
repz
popf
aam
mov
xor
lods
mov
adc
in
inc
jo
xchg
and
xchg
cmp
add
repz
filds
pushf
xchg
sti
push
aam
in
push
cmp
dec
or
shld
mov
push
adc
xor
xchg
bound
cmp
int3
add
ss
sbb
dec
neg
sarb
and
jmp
iret
cmp
fwait
inc
mov
mov
mov
push
cmpsb
test
mov
mov
push
into
out
pop
mov
jno
jo
cld
lods
imul
lcall
cs
or
xor
js
push
mov
mov
adc
out
repnz
sbb
sub
cmpsl
pop
cltd
and
icebp
cld
and
cmpsb
or
fldl
into
lods
sub
mov
cmp
cmc
in
pop
mov
arpl
inc
mov
mov
stos
repnz
add
popf
lds
orb
int
inc
mov
adc
aam
divl
call
call
xchg
shrl
inc
xchg
push
and
lds
insb
fnsave
hlt
adc
movl
cmp
adc
aad
push
enter
jno
mov
icebp
push
mov
xchg
adc
cltd
push
inc
stos
js
mov
pop
pop
push
pop
mov
repz
mov
dec
push
mov
pusha
sub
repz
mov
dec
inc
cmpsb
loop
dec
jg
outsl
test
pop
aas
add
aam
sbb
xchg
cmovae
adc
cli
sub
pushf
mov
inc
mov
xchg
fs
xor
cmpl
dec
mov
lahf
and
sarb
pop
mov
xor
xor
sub
push
int
loop
loope
movsl
mov
inc
ja
xor
je
jne
mov
lahf
int3
ljmp
mov
imull
jns
lock
mov
push
adc
cwtl
stc
mov
out
and
movsb
push
ds
imul
cli
stc
shlb
add
push
add
adc
sbb
inc
jno
pop
out
push
mov
dec
xor
cmp
mov
es
or
shll
mov
pop
dec
dec
xlat
rorl
std
cltd
adcb
cld
lcall
mov
cmpb
rolb
mov
push
ret
add
gs
cmpsb
jae
pop
mov
mov
repz
or
mov
mov
bound
inc
xor
pop
incb
cmp
pop
fbstp
mov
push
xor
xchg
xor
adc
sub
into
sahf
fldcw
push
in
jl
push
adc
xchg
daa
ljmp
daa
fldl
inc
orb
push
aad
cmp
cmp
loop
addr16
cli
xchg
jle
fidivrl
push
aad
leave
xlat
sarb
test
xchg
pop
mov
and
pop
push
jbe
lret
adc
stc
stos
repz
sbb
adc
js,pt
mov
jge
cmp
cld
sbb
and
shll
fwait
sarl
add
andb
mov
and
ret
mov
sub
gs
lcall
jg,pt
stos
hlt
add
mov
jg
lock
xchg
sub
fldcw
loop
inc
xlat
mov
push
xchg
imul
decl
pusha
cld
xlat
das
outsl
cs
xchg
sub
mov
jp
dec
scas
jnp
xchg
mov
inc
mulb
dec
inc
iret
rorl
mov
xlat
pop
jp
dec
in
fucomi
and
jb
sti
pop
insl
inc
sub
ffree
lahf
cmp
movsl
divl
ss
jg
sbb
nop
lret
sti
adc
js
inc
jno
aaa
mov
pop
addr16
add
mov
mov
sahf
mov
loopne
dec
add
in
lea
test
and
push
dec
scas
out
xchg
leave
test
decl
pop
pusha
jb
or
mov
or
adc
or
clc
jnp
stos
imul
mov
xor
ret
or
ret
out
fisttpll
jb
std
add
int3
and
ja
enter
cmp
push
add
pop
stc
insl
xlat
dec
aad
and
fiadds
out
adc
xchg
sbb
mov
push
movsl
or
outsb
xchg
aas
jle
push
rcll
cld
mov
sbb
sub
mov
mov
fcompl
adc
cwtl
push
push
cmp
xor
dec
jnp
loopne
push
inc
cmpsl
dec
outsl
and
test
lods
cwtl
dec
xchg
jge
test
sbbl
pop
xor
dec
dec
lods
js
push
call
sti
mov
mov
lret
inc
add
pop
lahf
jecxz
repz
cmp
cli
xchg
push
daa
inc
into
lret
scas
jbe
xchg
jecxz
test
sti
stc
cwtl
jbe
or
idivl
pop
sub
xchg
mov
push
adc
and
and
jecxz
shlb
push
mov
mov
dec
xor
cli
xor
call
bound
cmp
lahf
or
push
int
icebp
sarb
mov
data16
cmp
fwait
imull
pop
push
cld
push
push
mov
int
add
movsb
sub
stc
pop
jmp
rcr
repz
test
inc
call
ss
adc
adc
aam
call
dec
lds
hlt
jecxz
and
mov
lret
divb
xor
and
in
not
jmp
xchg
sbb
pop
sbb
imulb
movsb
out
in
lahf
lret
scas
into
jne
pop
test
jno,pn
ret
fwait
sub
ss
push
int3
pop
dec
inc
in
mov
fcomps
lds
movsb
and
add
lods
bound
test
int3
mov
xchg
jb
pusha
jmp
scas
xchg
leave
je
jno
int3
jne
jp
js
xchg
aaa
insl
sub
fcmove
sbb
dec
ret
mov
aad
xchg
test
jp
jg
rolb
sub
xor
in
addl
pusha
mov
adc
cmp
push
jbe
and
fimuls
bound
call
out
arpl
in
test
sbb
lds
fisttpll
adc
cltd
subl
enter
out
ds
mov
movsl
cmp
inc
sbb
lods
mov
movsl
jl
pop
fdivrl
fs
pop
jl
gs
or
lods
fcmovu
dec
xor
cmp
jp
rolb
jo
sub
push
jnp
cs
and
mov
in
mov
xor
pusha
xor
pop
or
mov
sbb
xor
or
rcrb
gs
inc
repnz
enter
pop
jp
mov
out
sub
cwtl
push
xchg
mov
test
je
xchg
mov
cmpsb
sbb
in
xor
cli
adc
mov
or
jmp
lods
pop
cmpsb
mov
lock
mov
std
inc
cmpsb
lcall
loop
mov
lods
mov
scas
fcmove
ljmp
shr
sub
lds
test
sbb
mov
ficoms
cmpsb
mov
fbld
dec
cmpl
popf
out
and
test
ret
mov
or
add
test
sub
mov
inc
stc
jns
shr
sbb
rorl
ja
mov
mov
lock
add
pop
mov
add
pop
inc
daa
cmp
scas
cmp
cmp
arpl
dec
out
gs
mov
mov
pop
loopne
stos
clc
into
and
push
clc
push
pop
shlb
sbb
rol
ds
sub
pusha
mov
fistpll
fidivl
mov
dec
mov
insl
lcall
dec
xchg
dec
sbb
jne
test
aam
lods
jg
insl
cmp
xor
scas
movb
jo
idivl
inc
mov
int3
fs
pop
push
mov
xchg
pop
add
mov
xchg
sbb
xchg
das
fmul
lods
sbb
dec
xor
cs
incb
sbbl
inc
cmp
pop
jbe
cmp
sbb
out
sti
into
lahf
dec
cmpb
push
fidivs
sarb
psraw
xor
test
mov
jnp
jg
out
out
fldenv
cmp
pop
in
push
cmp
push
lret
rcrb
sbb
lds
das
mov
or
pop
jg
aad
sub
mov
out
xor
push
push
mov
adc
fs
or
jmp
pop
in
inc
in
ds
fistl
add
adc
push
les
push
cld
daa
dec
mull
push
sbb
jbe
adc
cwtl
push
pop
jo
mov
popf
popf
xchg
adc
adc
pop
mov
dec
mov
insb
mov
mov
sti
fcoml
xor
jmp
mov
push
mov
push
adc
push
out
test
pop
outsb
xlat
shrl
paddb
test
sbb
into
cli
paddb
lea
inc
add
fadds
mov
or
rorb
dec
in
sbb
xchg
lret
std
or
stc
loop
subl
adc
jb
cmp
cmp
add
pusha
testl
push
cld
push
adc
inc
or
add
mov
mov
test
jne
ss
xlat
int
mov
test
mov
dec
mov
pushf
mov
jmp
dec
lret
sbb
repnz
or
icebp
xchg
pop
das
nop
adc
jl
and
push
add
stos
push
je
lea
xchg
xchg
mov
mov
inc
inc
lods
das
add
call
xor
sbbl
push
fnsave
dec
fs
mov
mov
pop
int3
pop
sbb
pop
aas
adc
pushf
loope
sbb
xchg
pusha
sbb
hlt
mov
jecxz
movsl
sbb
sbb
mov
or
pop
cmp
outsb
testl
add
sbb
lcall
iret
rol
and
dec
shlb
fbld
jg
mov
pop
ljmp
imul
sub
mov
gs
sbb
mov
add
mov
dec
xchg
lods
dec
rcll
mov
popf
sub
loop
out
pop
push
push
push
xchg
or
or
xor
xlat
adc
nop
xor
aad
push
jg
popl
inc
pop
mov
push
and
aas
pusha
jp
test
insl
fiadds
and
fdivr
lds
jge
bound
push
dec
or
mov
xchg
rcrb
mov
popf
sub
xchg
adc
and
lcall
jmp
and
call
or
fists
nop
dec
mov
xor
adc
and
punpckhwd
jmp
add
in
mov
jmp
lcall
cwtl
dec
mov
xorl
mov
xchg
aad
cli
or
adc
adc
add
mov
scas
jo
xor
repnz
fcomps
stc
in
fs
xchg
mov
adc
or
pop
out
inc
cmpsl
rol
call
repnz
fstpt
fidivs
xor
inc
adc
cmpsl
dec
mov
loop
add
movsl
xchg
sbb
ret
inc
test
pop
outsb
xchg
or
std
push
test
rcr
aas
cmpsl
stos
subl
aam
xchg
cs
std
pop
mov
cltd
jns
mov
addr16
xor
sub
cs
adc
cltd
lret
pop
nop
xchg
push
dec
and
mov
and
ret
push
les
sbb
imul
fnstsw
outsb
rcl
mov
cli
dec
cmp
sbb
movsb
push
cmp
sub
int
out
iret
sbb
in
cltd
add
mov
xlat
mov
sub
mov
stos
xor
iret
fdivrs
pop
jmp
mov
push
out
fidivrl
cmp
sti
adc
and
mov
insb
dec
fs
sbb
pop
lods
out
mov
lods
adc
xchg
xor
or
mov
dec
aad
jbe
pop
mov
movsb
lcall
int3
in
jecxz
fsubrs
in
mov
sub
ret
lcall
loop
addr16
or
addr16
das
fucomi
push
fs
mov
sub
mov
add
or
out
push
mov
test
push
jge
and
ss
dec
add
jle
outsb
xlat
inc
add
sbb
jle
lcall
sahf
mov
rcrb
mov
aas
cmc
lret
ficompl
add
rol
mov
popf
test
xchg
mov
push
sub
je
aaa
adc
mov
jmp
jno
jbe
outsb
inc
stos
iret
nop
xchg
sub
fs
adc
mov
cmpsl
aad
or
es
jmp
or
cwtl
sbb
sbb
pusha
ffree
mov
rcrb
pop
jae
lds
mov
test
xchg
xor
mov
mov
pusha
mov
lods
inc
dec
adc
scas
insl
mov
into
xor
mov
in
mov
imul
lahf
mov
dec
das
mov
add
roll
mov
das
xor
out
mov
lret
aaa
dec
ljmp
fs
out
add
cltd
jo
xchg
iret
dec
les
or
mov
sahf
pusha
fucomp
push
push
mov
out
xor
mov
hlt
dec
nop
lahf
pop
push
push
xchg
jge
loope
cmc
mov
cmp
jb
adc
nop
notl
xor
bound
test
aas
cwtl
hlt
mov
push
pop
leave
push
data16
mov
xor
das
xlat
add
mov
js
shrb
jno,pn
and
xorl
jno
insb
pop
jne
sbb
sbb
inc
jle
mov
test
mov
cwtl
fistl
cmp
cmpl
inc
clc
mov
pop
mov
mov
aas
sahf
xor
mov
xor
xor
jle
bound
jl
xor
cli
outsl
pop
push
stos
inc
mov
movb
insb
iret
fwait
xlat
mov
adc
aas
mov
roll
jae
ljmp
test
js
dec
sbb
jp
ljmp
scas
or
add
mov
je
popa
outsl
addr16
std
push
pop
jmp
xchg
mov
sahf
popf
lahf
lahf
add
call
aas
repz
mov
mov
and
jne
push
add
and
pop
stc
mov
outsl
sbb
int
out
dec
loop
shr
jp
adc
dec
mov
push
cmp
dec
jp
jnp
mov
cli
and
sub
jp
push
xor
ret
into
mov
icebp
loope
icebp
xchg
push
pop
scas
iret
test
loopne,pt
sbb
sbb
sbb
lods
ja
repnz
cld
test
inc
adc
ret
cmpsl
test
xor
in
pushf
jle
pop
sbb
aas
xchg
aad
mov
fs
sbb
xor
je
adc
into
aad
lahf
xchg
xor
popf
mov
xlat
and
aaa
inc
sub
testb
stos
rolb
xor
lods
jo
popf
mul
push
or
or
imul
jo
bound
cld
divb
and
pop
fiaddl
xor
mov
mov
in
daa
ljmp
ss
xor
das
push
jo
icebp
jo
aam
xor
jo
xchg
xor
je
xchg
xor
xlat
jbe
mov
repz
jmp
pop
fwait
in
jle
pop
and
sub
in
xlat
scas
mov
loope
je
push
sbb
leave
or
mov
jne
mov
in
or
sti
xchg
ss
nop
sub
icebp
popa
mov
push
jge
and
xor
and
pop
push
push
in
pop
rol
or
adc
gs
shll
hlt
outsb
lods
xor
sarb
push
xor
sbb
popa
mov
ret
and
in
aad
jmp
or
or
outsb
dec
jle
push
xor
mov
test
push
out
push
call
and
mov
cwtl
dec
dec
push
mov
das
or
add
rep
xlat
fists
add
pop
or
out
subl
xor
movsb
in
fadds
and
cmp
fmul
jns
mov
test
inc
cmp
lcall
xor
rcrl
inc
mov
mov
inc
dec
and
add
in
pop
and
in
mov
aam
push
push
lds
imul
daa
inc
cs
enter
mov
mov
enter
or
repz
mov
sbb
das
xchg
scas
fwait
sub
inc
dec
int
loopne
lahf
fwait
and
dec
mov
lods
xor
cwtl
add
lcall
push
ds
push
mov
shrb
push
mov
aaa
mov
adc
out
lea
jp
lods
fstpt
es
mov
mov
ds
cmp
xchg
movsl
cmp
ja
add
rorb
cli
insl
push
testl
mov
add
stos
sub
add
xor
movsl
dec
mov
in
xlat
out
cmp
jg
in
dec
lods
ret
cmp
mov
faddp
inc
sub
ret
imul
jl
mov
xchg
cmp
int
sub
nop
mov
mov
nop
inc
fs
xchg
nop
test
jl
call
xor
cmpsb
jns
stc
xor
inc
outsb
xchg
lahf
cmovo
adc
mov
adc
imul
in
or
jmp
mov
mov
pop
mov
jb
jne
jae
fsubrp
in
scas
jl
daa
sub
gs
paddsb
repnz
cs
sahf
int
les
test
test
stos
pop
aad
push
in
pop
mov
jnp
push
and
sahf
fsubrl
mov
dec
inc
int
shll
popa
jmp
outsl
in
scas
sub
adcb
lods
aam
pop
jae
fwait
into
in
xchg
rcl
leave
hlt
xchg
sbb
aam
repz
and
sbb
inc
lret
dec
sub
lock
in
mov
add
mov
xor
je
fwait
jp
mov
dec
stc
mov
mov
test
test
or
int
xchg
mov
jmp
mov
push
dec
sub
sbb
nop
sub
mov
push
mov
ret
xor
pop
sbb
or
or
jp
or
cli
sbb
push
jle
imul
das
cltd
in
cmp
aam
aas
adc
notb
mov
cmc
sbb
pop
mov
adc
sub
sbb
sub
pop
ret
dec
sub
pusha
in
cmp
aaa
sub
sub
fsubrl
mov
push
fcompl
into
into
dec
mov
add
xchg
pop
adc
lods
out
jmp
cmp
mov
stos
mov
imul
jne
mov
rcrl
popa
mov
rolb
xor
sbb
mov
sub
sub
push
and
dec
jo
cmp
mov
push
or
or
daa
xor
pop
pop
rorl
or
ja,pn
scas
shll
cmp
cmc
jns
mov
push
hlt
sub
pop
xchg
loop
cmp
xchg
inc
inc
xchg
xchg
mov
cli
jp
mov
ds
imul
add
loop
push
pop
add
scas
neg
mov
inc
and
cltd
xchg
xchg
cmpsl
iret
and
fwait
or
aas
mov
aad
in
test
adc
add
movsl
cmpsl
mov
jo
pusha
fstl
mov
jb
arpl
mov
stos
call
jmp
nop
ss
test
pop
popa
cmpsl
mov
xchg
xchg
lret
jbe
push
out
xchg
cltd
divb
mov
scas
shrl
jnp
int
in
neg
jg
cmpsb
mov
xor
add
lret
push
stos
jle
insb
mov
jle
mov
fwait
jecxz
xor
test
daa
adc
and
add
loop
fwait
lea
call
scas
rcll
push
sti
outsb
enter
xor
add
push
aas
pop
push
jnp
mov
repnz
out
out
xchg
dec
inc
fs
jecxz
jo
pop
lcall
xor
xchg
pop
or
mov
sbb
push
jl
push
push
mov
ja
or
das
lcall
adc
jl
xchg
sahf
test
fidivs
mov
aaa
jno
lret
call
jge
jno
xlat
or
push
mov
mov
mov
cmc
xchg
leave
jecxz
ss
mov
andb
loope
leave
es
cmp
xor
dec
ja
jno
adc
add
aas
inc
adc
aad
jb
shll
xor
mov
jecxz
sub
dec
pop
or
push
sub
or
and
lods
cwtl
scas
or
add
mov
cmpsb
cmp
lock
stos
idivb
jle
xchg
out
mov
xor
adc
push
lret
and
xchg
push
addr16
iret
les
pop
inc
addr16
stos
mov
pop
push
pop
jge
les
lea
push
jnp
or
shr
cmp
test
inc
es
xor
or
arpl
mov
cmp
leave
fsubrl
adc
and
xchg
xrelease
stc
loopne
sbb
jo
xor
fadds
pop
push
addb
push
dec
or
push
test
mov
ror
sbb
pop
xor
or
mov
ret
mov
inc
cmpsl
pushl
sbb
ljmp
pop
aas
push
dec
rcrl
mov
and
jo
mov
and
jecxz
ds
adc
push
and
test
in
inc
or
shl
jecxz
inc
rclb
adc
faddl
in
lret
int3
aam
std
ret
loope
enter
add
xor
lcall
lret
mov
sub
xchg
sbb
sbb
lret
fs
movsl
stos
dec
iret
int3
inc
pop
fsubs
sbbl
data16
out
push
in
jp
sbb
lahf
cmp
cld
push
xchg
cld
or
popf
or
or
lret
inc
push
pop
add
adc
mov
lock
repz
lret
stc
int
inc
adc
or
jmp
xchg
pop
mov
pop
mov
push
push
mov
test
fcmovu
jnp
loope
les
mov
cltd
sbb
xchg
xor
in
xchg
pop
stc
push
mov
sub
cmp
rcl
rol
sarb
push
frstor
push
and
jecxz
arpl
mov
mov
jle
inc
mov
push
and
jle
ret
test
test
push
adc
shrl
es
jge
sub
or
xchg
leave
and
in
mov
push
adc
xor
cld
cld
mov
pop
push
pop
in
lret
dec
shrb
dec
or
arpl
xlat
mov
rcll
icebp
push
adc
orb
pop
lcall
lret
sbb
das
add
popa
or
inc
jmp
mov
scas
xchg
fiadds
test
push
stos
sbb
cltd
lods
pop
imul
stc
xor
cmpsl
inc
cmp
jno
in
fists
pop
mov
jno
pop
mov
mov
rcl
rclb
cmp
xchg
test
pop
xchg
das
leave
out
negl
insb
ja
push
inc
scas
aam
adc
xor
lods
sbb
loopne
daa
inc
out
xor
sbb
cmp
jne
test
cmp
test
hlt
jg
push
push
cmp
adc
fstpl
aam
lods
negl
fcompl
mov
pusha
popa
sub
cmp
popf
lods
dec
sub
add
mov
inc
enter
lds
dec
cmp
push
enter
push
add
push
mov
ss
popa
sub
jle
push
sub
adcl
cmp
pop
insb
out
mov
mov
fidivrs
lahf
mov
ret
arpl
lock
loop
add
into
jg
cmp
jae
and
lock
xor
mov
sbbb
in
mov
shr
inc
inc
sbb
inc
and
insl
and
int3
xor
or
popl
inc
pushf
pop
das
sbb
ja
rolb
adc
enter
xor
cwtl
push
push
push
dec
mov
in
inc
inc
sub
subl
scas
idiv
out
notb
ja
inc
divl
repz
cmp
scas
pop
xor
pop
mov
mov
jbe
mov
mov
negl
adc
shrl
xor
pushf
bound
pop
movsl
adc
out
xchg
cmp
out
movb
jl
xchg
dec
sahf
mov
push
mov
cmp
mov
push
xor
xor
push
call
mov
mov
cmp
sti
nop
lret
aas
xchg
add
imul
stos
xor
shl
and
adc
loopne
jg
cld
mov
pop
enter
cwtl
mov
pop
out
sbb
mov
add
jge
in
bound
cmp
jbe
aas
test
push
ds
mov
xchg
add
jns
and
pushf
lods
stos
mov
mov
leave
jl
inc
frstor
pop
int
jmp
cmp
lock
xchg
push
xor
int3
addr16
adcb
dec
fucom
push
cs
jle
cltd
or
lcall
popf
out
cmpsl
or
data16
pushf
jbe
sub
mov
loop
xchg
bound
mov
xchg
lods
cmc
jae
add
cmp
jbe
cmp
test
das
cwtl
mov
int
inc
mov
xor
or
aam
jno
cli
mov
cmp
sbb
fstpt
push
int
fstpl
adc
dec
scas
sub
jge
mov
and
jb
lret
sti
pop
xchg
and
mov
cmp
loope
fstps
inc
dec
in
fidivrl
pop
inc
push
les
clc
shll
test
mov
mov
jecxz
jb
sbb
push
int3
sbb
mov
pop
push
lret
cmpsb
push
jmp
leave
fwait
mov
mov
push
mov
pop
mov
cmc
cmp
xchg
push
inc
mov
jle
insb
cmp
cmp
cltd
inc
or
adc
sete
lds
or
popf
stc
xor
adcl
adc
shlb
into
sub
rcrb
pop
pop
jbe
testb
std
rcrl
add
mov
pop
sub
lea
jbe
adc
popa
rcrl
pop
add
ret
movsl
pop
xchg
jns
xchg
nop
add
or
or
popf
dec
push
or
mov
loop
lretw
adc
jne
leave
lds
jb
pop
pushf
jne
mov
movsb
movb
ret
jnp
mov
sbb
ljmp
inc
pop
jmp
xchg
push
push
inc
cmp
repnz
adc
sub
lock
jbe
fisubrs
lahf
xor
xor
adc
mov
addb
jne
daa
push
push
and
xchg
das
mov
decl
fistpll
dec
fnstsw
xchg
in
ds
fnstenv
movsl
test
mov
mov
mov
push
and
fcoml
push
xchg
mov
pop
enter
and
mov
lods
movsl
aaa
xchg
mov
lahf
adc
andb
lahf
aas
mov
das
xchg
data16
enter
imul
out
or
fs
inc
pushf
sbb
or
loope
dec
hlt
adc
outsb
push
data16
jbe
aad
inc
lods
notb
adc
lock
adc
insb
jl
outsb
mov
and
mov
sub
xchg
cltd
idiv
call
leave
jnp
sub
enter
icebp
out
loope
call
xchg
out
movsl
imul
std
fcomps
aad
inc
mov
hlt
shll
repz
shll
mov
sbbl
add
mov
shlb
cmp
and
leave
adc
mov
push
cmp
jmp
daa
and
aas
pop
mov
cmp
xchg
xchg
dec
cli
mov
cmpsb
add
and
jae
data16
call
bound
inc
mov
mov
mov
xor
enter
inc
and
loope
xchg
ds
fisttpl
stc
jns
sahf
and
push
cltd
out
aas
jnp
pop
xchg
jp
movsb
mov
movsb
dec
sbb
lds
xor
andl
lds
es
es
rcrb
mov
fldt
xor
scas
push
push
mov
dec
repnz
out
mov
into
jns
xor
out
stos
add
and
sbb
cmp
jmp
push
out
lock
push
jnp
sub
mov
frstor
in
mov
pop
push
setl
jmp
pop
push
inc
mov
lret
je
dec
sub
adc
outsl
add
adc
lods
ja
cli
sbb
push
outsb
inc
scas
jg
sbb
inc
clc
xchg
mov
ret
negl
insl
punpckhbw
push
shll
mov
push
push
lret
aad
mov
ret
ljmp
shll
movsl
sub
test
negb
xlat
decb
pushl
movsl
add
lret
mov
subl
std
aaa
out
push
mov
jle
sbb
outsl
ljmp
aaa
cmp
repnz
int
shr
out
sub
dec
aaa
add
cld
out
fcmovnb
aaa
mov
mov
leave
mov
leave
fs
lds
stos
lret
iret
insb
sbb
lret
mov
pusha
add
cwtl
xchg
jne
add
or
add
aaa
into
aad
push
aas
add
repz
xchg
scas
or
out
out
fnstcw
fs
push
ret
ret
jo
jecxz
jae
cmp
xchg
decb
sbb
lds
pop
push
mov
scas
jge
iret
pop
cmp
out
pop
jb
push
pop
popl
stos
les
or
addr16
cmpsb
jae
sub
push
mov
jmp
jo
gs
cmp
inc
adc
xchg
mov
daa
adcb
fldt
repnz
test
incl
jae
lea
jne
sbb
dec
sbb
xchg
or
sarb
jp
pop
mov
mov
popf
adc
daa
add
jno
ja
jo
sub
mov
loopne
lds
push
and
int3
sbb
xorb
lret
sub
dec
push
mov
por
out
cmp
mov
mov
lcall
dec
pop
loopne
jo
and
jecxz
outsb
lret
jb
mov
lods
pop
mov
fwait
push
push
xchg
pushf
xchg
test
jnp
gs
rcrl
sub
pop
xchg
out
xor
jno
mov
pop
mov
xor
jns
repnz
test
sub
test
or
mov
adcl
nop
pop
sbb
insb
push
cltd
jo
loopne
outsb
loop
cmp
test
andl
xlat
sahf
cmp
pop
cmp
gs
in
dec
in
inc
push
inc
mov
imul
push
std
xor
sbb
mov
jle
or
adc
or
rcrb
push
hlt
daa
shl
mov
pop
cmc
or
icebp
mov
xchg
lds
fdivr
call
mov
jns
andb
sub
push
pop
fmuls
shlb
adc
clc
cmpsb
sub
mov
int
daa
push
xor
ret
and
loopne
mov
fwait
clc
fidivrs
dec
bound
into
sub
jo
sub
lret
sub
pusha
and
dec
jmp
hlt
xchg
adc
jb
nop
sbb
jnp
out
cmp
dec
push
stc
pop
mov
shrb
jns
movaps
mov
mov
sbb
xchg
shr
and
dec
or
push
loopne
adcb
popf
dec
lret
aam
push
dec
arpl
imul
bound
push
cwtl
loop
insb
push
cmp
push
test
sahf
lods
inc
pop
dec
adc
arpl
xor
mov
pop
clc
push
cmp
push
xor
fdivl
lcall
push
cmp
fadd
adc
pop
push
push
pop
add
xlat
mov
lea
call
movsl
outsl
and
cli
pusha
xchg
icebp
nop
mov
jbe
test
hlt
fmull
and
mov
aaa
cmpsb
push
popf
and
iret
lret
jp
add
pop
pop
mov
cmp
ret
cmpsl
pop
sbbb
pop
mov
ss
arpl
mov
sbb
add
int
fadds
push
pop
into
cmpsb
ljmp
scas
mov
divb
movsl
gs
mov
data16
adc
push
out
out
xchg
add
xor
movsb
repz
cmp
add
push
jne
rorb
cmp
push
clc
test
cwtl
stc
cmc
arpl
mov
leave
das
cmp
loope
fisubs
test
or
nop
mov
loop
xlat
repnz
dec
pop
jge
loopne
ret
dec
add
mov
and
jae
jp
hlt
mov
rorb
outsb
mov
mov
addb
cli
les
sub
ss
repnz
xchg
adc
cli
subb
xchg
add
pop
mov
inc
dec
and
cmc
nop
pusha
push
sahf
ficoms
fs
sub
add
adc
jno
pop
daa
fistpll
push
cmpsb
cmpsl
mov
pop
or
sub
mov
subl
xor
fildl
mov
pop
pop
mov
stos
lock
lods
fiadds
nop
test
hlt
push
aaa
idivl
ljmp
ret
xor
call
mov
call
mov
mov
shr
pop
cmp
dec
add
aad
icebp
popa
inc
test
lahf
mov
mov
insb
add
push
pop
push
push
pop
jo
and
mov
js
mov
int3
lods
mov
add
pop
adc
pop
mov
or
push
xor
xchg
rol
movsl
inc
sar
xchg
mov
adcb
push
xor
pop
jle
fldcw
ret
iret
insl
jg
sbb
pop
into
jo
jnp
add
or
inc
stos
outsb
sbb
sub
sub
out
xor
and
xchg
or
loop
shll
cmp
jno
in
mov
hlt
fstl
jle
std
in
rol
mov
mov
mov
in
arpl
bound
out
scas
adc
ds
and
icebp
jns
ds
sbb
ret
jb
faddl
mov
xchg
mov
mov
roll
insb
or
shrb
stos
and
cmpsb
mov
and
or
or
in
jne
cmc
xchg
mull
jmp
push
sub
push
mov
push
add
push
dec
pusha
or
and
out
sub
out
xchg
sub
inc
jns
in
fwait
js
clc
pop
inc
push
jns
or
mov
rcrb
cmp
pop
out
mov
rorb
sbb
pop
mov
jmp
icebp
loope
pushf
xchg
add
jge
das
movsl
xchg
cmp
mov
jmp
pop
mov
pop
inc
mov
negl
inc
push
cmc
ds
adc
aam
movsb
ret
and
push
inc
mov
xchg
sbb
testl
mov
jle
stos
bound
call
shrb
dec
mov
cmp
mov
ucomiss
out
fucomip
push
xor
lea
push
mov
jae
mov
call
icebp
cs
cmp
lret
aam
jge
adc
cmp
ja
push
fisttpl
push
inc
hlt
adc
jae
loop
aas
xchg
xorb
inc
add
out
scas
ja
out
push
inc
fisubrs
mov
imul
mov
push
jmp
icebp
inc
test
jle
or
and
or
cli
or
jo
out
mov
ja
das
enter
and
lds
shl
push
gs
lea
rcll
push
and
mov
loop
jle
jne
popf
push
mov
insb
scas
add
shrb
push
icebp
cmp
jmp
aam
mov
mov
je
xor
in
out
xlat
stos
rcll
xchg
mov
mov
dec
rclb
dec
lods
ret
dec
jp
cli
sub
dec
or
jl
inc
mov
xchg
sbb
xchg
loop
mov
push
insb
inc
stos
add
add
sbb
xchg
lds
mov
outsl
sti
inc
mov
adc
and
xor
xchg
lretw
sti
cli
ret
mov
pop
pushw
jns
rorl
xchg
cmpsl
cmp
in
popf
fisubrs
into
inc
icebp
mov
mov
imulb
loopne
jo
fists
mov
gs
mov
test
push
es
jne
in
jecxz
loope
mov
call
or
pop
aam
jmp
out
cmp
cs
push
loop
popf
popf
mov
divl
daa
cmp
push
fistl
mov
xchg
fisubl
stos
nop
or
push
sub
not
inc
daa
jp
dec
fistpl
or
pop
cld
xchg
jge
cwtl
popa
aad
iret
jb
sbb
sahf
mov
add
pusha
pusha
mov
and
jp
xchg
pop
mov
mov
das
sbb
cs
outsb
fnsave
cltd
leave
test
and
rcrb
das
popf
pop
push
fcompl
push
sub
pop
pop
dec
ret
ljmp
rorl
pop
push
xorl
pop
aaa
aaa
fimuls
mov
xor
test
or
fcomip
loop
inc
sub
aaa
insl
push
and
inc
or
add
not
xchg
cli
imul
mov
ljmp
out
jmp
jle
mov
das
mov
je
je
jb
push
mov
leave
mull
data16
cwtl
inc
lea
test
std
movups
or
adc
jmp
roll
push
pusha
lds
adc
sbb
inc
or
test
loopne
xor
push
and
sub
sub
int3
or
ja
adcl
dec
mov
inc
jle
cmp
out
pop
xor
xor
gs
fwait
or
rolb
mov
mov
ss
xchg
int3
dec
fwait
lods
rorb
rolb
jne
dec
sbb
out
jo
into
push
testb
jns
add
or
xchg
movsl
sub
cmp
cmpsl
push
pop
js
push
std
xchg
loop
sub
cmp
inc
adc
mov
xlat
sbb
sbb
test
inc
mov
adc
orl
cmp
mov
cli
mov
ret
or
mov
sbb
outsl
or
dec
fidivs
add
mov
xchg
rclb
jne
aaa
cmc
ja
dec
cmp
icebp
push
test
mov
inc
data16
jl
dec
leave
out
mov
cmc
add
adc
outsl
mov
sub
testb
add
lahf
out
xchg
mov
pop
repnz
mov
loopne
neg
add
add
nop
inc
xor
mov
imul
dec
xchg
jne
aaa
cmp
sbb
insb
lea
xor
cmp
mov
pusha
and
add
ja
inc
rcll
inc
cmp
cmp
adc
insb
shrl
pop
lds
mov
jbe
mov
xchg
aam
in
sbbl
push
or
aas
ss
mov
packsswb
push
sbb
pop
cmp
js
cmp
scas
data16
pop
mov
adc
xchg
jnp
stos
aaa
stos
jno
and
lea
pop
jae
jns
scas
int3
sbb
jecxz
mov
jne
and
push
jl
pusha
out
sti
hlt
cmovge
sbb
push
mov
xchg
cld
out
adc
test
divb
fistps
inc
hlt
movsb
stc
mov
roll
cmp
xchg
sbb
cmc
xor
inc
jae
stos
jg
cmp
cmp
scas
sub
inc
and
imul
ficompl
clc
mov
dec
mov
je
shlb
mov
lcall
in
cmp
jb
mov
je
mov
xor
jg
xor
lcall
cmp
jmp
and
add
dec
and
cmp
cmp
loope
je
push
bndldx
lds
loopne
rorb
sub
ljmp
popf
sbb
leave
and
jmp
cmpsl
push
in
lret
cmpsl
xchg
jle
lret
or
cmp
cmc
jnp,pn
iret
movb
scas
sub
cltd
popf
int3
xchg
xchg
imul
mov
movsl
popf
pushf
or
jae
pop
test
fs
test
std
cltd
or
insb
shlb
mov
mov
mov
addr16
jne
out
sub
pop
pop
gs
repnz
bound
xlat
inc
lods
push
addr16
push
mov
and
cmp
or
and
movb
xchg
sub
mov
incl
push
jle
icebp
pop
jne
add
lock
inc
jle
sub
cmp
ja
dec
pop
add
dec
sbb
pop
lret
insb
pop
dec
nop
pop
mov
jbe
clc
daa
int3
in
or
jae
mov
push
call
pop
fidivrl
mov
stos
push
mov
sahf
push
insb
adcl
test
add
pop
sub
xor
pop
jmp
addr16
loope
rcrl
leave
subb
add
mov
mov
dec
stc
js
jmp
jnp
imulb
mov
cmp
xor
xchg
lods
les
xchg
xchg
lret
pushl
mov
jge
data16
in
fwait
dec
mov
ds
push
add
inc
or
jl
int
lea
sbb
jg
pop
xchg
clc
jecxz
test
addr16
push
push
and
lcall
cmpsb
int3
mov
aad
inc
hlt
aaa
mov
shlb
sub
push
fwait
add
adc
pop
hlt
pop
lret
cmp
cmc
aad
imul
out
clc
into
xorl
dec
add
lods
cmpsb
adc
pop
ss
lret
and
shl
inc
mov
je
push
jo
sti
or
add
push
vmwrite
cs
push
gs
lock
jno
dec
loope
or
push
xchg
test
hlt
inc
stc
pop
pop
sub
cltd
mulb
jp
xor
scas
sub
cs
lahf
pop
call
movsb
dec
pop
psubsw
and
jp
and
repz
mov
in
cmc
jo
jno
jmp
out
add
or
aam
insl
mov
ljmp
xchg
jl
test
xchg
jl
mov
mov
xchg
add
adc
leave
add
cmpsb
mov
movsl
or
movsb
or
push
aad
sti
pop
mov
jecxz
rolb
inc
insb
out
cmc
xchg
inc
push
nop
bound
inc
or
loop
mov
and
pop
adc
or
mov
enter
or
test
test
xor
dec
pop
test
imul
sub
cmp
fistpll
push
mov
imul
out
loop
repz
add
insl
stos
aaa
pop
fimull
or
xlat
mov
push
push
sub
fucomip
pop
ljmp
gs
mov
mov
jo
je
test
or
mov
push
ficoms
arpl
shll
add
rol
adc
sahf
cli
inc
aas
dec
add
push
cs
jnp
mov
push
cwtl
dec
mov
xlat
fbld
fucomi
sub
cmp
inc
push
sbb
mov
fildll
dec
fimull
notl
daa
push
rorb
adc
ret
pop
inc
dec
fsubl
jne
fs
inc
cmp
insl
sub
jmp
lahf
hlt
test
cwtl
outsb
dec
imul
insl
jns
rol
repnz
arpl
sbb
xchg
pop
jae
std
imul
int
test
ds
lods
roll
mov
push
push
fnstcw
add
hlt
jns
rorl
das
cmp
and
cld
jnp
mov
idivb
mov
out
cmp
mov
lcall
repnz
fidivrs
inc
xor
pop
jl
mov
std
jno
out
or
mov
sarl
mov
pop
fcoml
jne
aas
in
add
scas
add
jg
cltd
and
je
aam
push
ret
jmp
jo
cld
fiadds
js
xchg
scas
jnp
sub
mov
cli
sbb
pop
pop
xchg
push
cs
mov
mov
pop
cltd
test
pop
mov
mov
push
fwait
jae
pushf
dec
bound
sbb
jg
scas
jo
out
xadd
lock
subb
sub
and
and
leave
sar
or
je
sarb
loope
cmp
aam
js
psrlq
mov
dec
into
sysret
aaa
repnz
sbb
shlb
into
in
or
lock
dec
pop
mov
cli
iret
rclb
fwait
inc
movsl
mov
jbe
push
and
lods
out
pop
aad
nop
and
mov
sbb
stc
pop
mov
jno
mov
xlat
loop
dec
jecxz
push
adc
xchg
jp
cmc
and
mov
les
out
jmp
pusha
and
loope,pn
loopne
arpl
lcall
sti
shll
dec
stos
add
or
ret
sbb
mov
rcr
in
ljmp
fsubl
orl
mov
xor
xor
mov
adcb
xor
popa
fmul
inc
imul
loopne
leave
jo
lret
int3
rcrl
xchg
popa
xor
int3
stc
push
mov
jnp
les
push
jmp
dec
sub
xchg
fst
sub
clc
icebp
jg
jb
std
sbbb
or
lods
inc
dec
fistl
push
sbb
enter
arpl
fs
and
push
mov
sub
cmpsl
adc
rcll
cmpl
loop
lods
cs
into
mov
pop
and
ss
test
sub
cltd
lcall
or
dec
dec
icebp
push
push
ret
jb
in
add
fidivrl
rclb
out
xor
ss
cmp
mov
sbb
into
mov
xchg
inc
sub
push
aam
notb
inc
rorb
scas
std
push
sahf
js
jle
or
mov
xor
mov
cwtl
int3
xchg
imul
cmpsl
sbb
cmpl
pop
std
inc
outsl
lods
cli
mov
fwait
inc
sbb
test
fildll
imul
pop
sub
in
int
leave
mov
and
insl
outsb
xchg
scas
sub
or
or
pop
loop
and
or
es
add
cmp
push
les
sub
out
loope
push
lret
xchg
push
bound
test
dec
sbb
sbb
aad
dec
scas
sbb
in
out
jmp
imul
fists
cld
mov
jmp
ds
mov
sbb
pushf
dec
cmpsl
int
push
sub
fstpt
vpsraw
dec
in
nop
gs
outsb
jns
lret
add
xchg
iretw
loop
or
adc
sbb
push
mov
dec
xor
mov
aam
js
mov
sti
jbe
mov
mov
movsb
and
mov
add
cmpsl
sbb
cmp
adc
in
clc
loope
ret
fstps
out
pop
outsb
ljmp
dec
pop
repnz
sub
cmpsb
lahf
push
ret
fildll
loope
sub
maxps
nop
ret
add
imul
das
or
imul
fldl
or
dec
fs
adc
sti
call
aaa
sbb
xor
mov
xor
aaa
insl
jnp
and
mov
jp
mov
adc
push
fs
shrb
cltd
leave
enter
xor
mov
negb
enter
push
sbb
sbb
xchg
cmp
inc
fadds
push
push
into
dec
and
mov
adc
jbe
dec
pop
sti
add
sbb
jo
jmp
fdivp
mov
push
shll
mov
fsubrp
sbb
adc
adc
shl
mulb
lcall
xchg
ret
pop
sbb
jbe
imul
jmp
mov
mov
xor
jnp
or
pop
les
xor
xchg
dec
adc
xchg
pop
jg
fbstp
lock
mov
cltd
cwtl
cmp
lret
scas
add
fsubrl
xchg
call
shlb
mov
push
test
push
out
sbb
xchg
mov
icebp
ljmp
xor
pop
out
add
mov
loop
outsl
lret
jg
fs
aaa
dec
ss
out
inc
and
xchg
sbbl
sbb
sti
and
mov
in
jmp
xor
adc
test
inc
aaa
jo
test
mov
jg
mov
dec
or
imul
mov
ss
mov
jle
xor
mov
in
in
sbb
sub
insb
test
data16
push
sbb
mov
lods
fidivl
loope
push
sahf
sub
xor
xchg
xchg
shrb
xlat
add
daa
pop
fucomp
and
xchg
sbb
shrb
mov
cmp
or
jno
mov
xchg
mov
mov
xchg
mov
cmpb
call
sbb
dec
in
add
push
or
loop
loope
fiadds
mov
xchg
pop
xchg
jbe
mov
sub
inc
ret
enter
bnd
cmp
jecxz
call
lcall
out
fnstenv
push
pop
or
pop
aam
sub
shl
cltd
popa
add
and
mov
mov
hlt
inc
jge
cmp
sbb
inc
xor
mov
sbb
not
adc
int
popf
dec
in
out
dec
inc
mov
lds
sbb
hlt
push
and
cmpb
xor
dec
fcmovb
pop
and
jp
add
sbb
aas
rcll
or
cltd
cmpsb
add
add
inc
sti
enter
aas
icebp
push
int3
dec
aas
mov
sub
push
mov
or
xor
pusha
pop
sbb
repnz
enter
cmpsl
int
decl
mov
inc
das
iret
add
ret
fxam
std
std
xlat
lods
aad
sbb
nop
jno
in
aas
js
cltd
ss
cmp
in
xor
cwtl
addr16
mov
repz
movsb
sub
cmp
xlat
xchg
cmp
cltd
xor
sbb
idivb
insb
inc
movsb
and
mov
inc
ds
fwait
xchg
pop
jle
fldt
pop
lcall
pop
negl
sbb
add
fnstcw
xor
aaa
xchg
xor
lcall
int
inc
scas
mov
test
push
mov
shl
lret
arpl
mov
jl
push
jge
mov
test
cmp
int3
push
jp
mov
mov
mov
inc
or
mov
jmp
or
inc
ficoms
je
jns
pop
pop
dec
movswl
aad
mov
mov
out
sahf
das
cmp
pop
gs
and
push
lret
cmc
push
inc
je
js
imul
mov
inc
pop
fidivl
dec
ret
and
lret
add
icebp
sahf
push
lret
inc
out
xor
push
cwtl
bound
cld
mov
pop
imul
cmp
test
cmp
int
xlat
xor
pop
sub
inc
cmp
arpl
pushl
aas
inc
add
pop
movsl
sbb
adc
sbb
push
cltd
and
out
add
aad
sarl
add
lahf
adc
leave
mov
in
push
adc
dec
add
cmpsb
dec
popf
push
aad
xchg
push
xchg
xor
repz
test
cltd
xorl
int3
loop
call
std
nop
jecxz
adc
js
inc
jb
pushf
or
imul
iret
dec
scas
ds
lahf
es
mov
add
push
ds
hlt
or
test
scas
adc
jg
lcall
lds
fldt
notl
icebp
push
cmpsl
gs
stos
or
idiv
lods
jle,pn
clc
xchg
out
mov
xchg
adc
add
mov
ljmp
loopne
sub
sbb
test
ret
pop
mov
push
dec
scas
aas
ror
pop
imul
xor
outsl
inc
rcrl
ljmp
jae
inc
imul
add
and
rcll
sbb
test
fnstsw
idivl
call
cltd
call
xchg
adc
xchg
jmp
jbe
or
mov
ds
mov
subl
xchg
mov
iret
hlt
or
sbb
inc
mov
cmp
inc
pop
nop
add
sub
ss
hlt
movsb
xchg
cli
cmp
loop
in
loop
or
jecxz
xor
fnstenv
cmp
outsl
pop
sbb
push
xor
adc
inc
sbb
jecxz
and
pop
push
fiaddl
test
arpl
mov
mov
nop
sub
jp
aam
add
adc
xchg
pop
sub
lock
xor
popf
scas
ljmp
jbe
adc
enter
ficompl
mov
in
test
iret
popa
mov
nop
xchg
stos
enter
icebp
push
cmpsb
out
pop
sbb
shr
cmc
and
jno
pop
adc
ljmp
adc
lods
ret
mov
adc
and
loopne
stc
sbb
inc
fldt
cmpsb
xor
rcl
sub
adc
movsb
icebp
loope
enter
adc
add
xchg
dec
bound
leave
loopne
sbb
and
xor
cwtl
inc
xor
xchg
sahf
dec
icebp
aas
sub
ja
mov
sbb
inc
addr16
mov
xor
js
mov
int3
add
and
stc
stos
push
test
imul
clc
sbb
das
mov
imul
push
add
shl
faddl
imul
and
push
adc
mov
movsl
fwait
daa
cmp
xor
mov
int
lahf
cwtl
jge
into
lcall
fwait
lahf
pop
mov
loope
push
retw
inc
rcll
push
movsb
inc
add
out
negl
loop
scas
lret
or
out
add
in
xchg
arpl
gs
mov
xlat
movsb
fsubrs
aam
dec
jmp
int
xor
cmpsl
add
jge
ret
movsb
movsl
int
mov
sub
lds
jp
sbb
mov
lahf
ja
lods
cwtl
jne
mov
outsl
test
sahf
stos
icebp
pop
or
inc
fstpl
push
popf
cmc
push
sbb
xor
jns
mov
xor
inc
mov
mov
jbe
lret
cltd
push
lock
sar
dec
fadds
jbe
data16
cmpsl
les
dec
mov
incb
fmul
and
inc
mov
xor
ja
add
arpl
jmp
fwait
mov
mov
bound
testl
push
push
mov
cmp
xchg
mov
lcall
and
imul
push
mov
add
shll
in
ret
push
mov
fldt
cmp
ret
mov
xchg
icebp
lds
add
out
xchg
sbb
cmp
jo
je
or
gs
jae
cmc
stos
add
fcmovb
jg
jb
test
stos
and
pop
data16
xor
inc
mov
addb
leave
sti
pop
in
jp
or
inc
adc
mov
rorb
in
mov
cmp
or
inc
cmp
int3
mov
inc
inc
pop
ljmp
mov
jnp
jmp
mov
lcall
adc
movsl
loop
pop
pop
jl
jmp
mov
das
mov
aas
jnp
adc
loope
jmp
push
cltd
and
mov
sbb
cmp
dec
xchg
adc
mov
out
adc
sbb
jg
sbb
rolb
loop
shlb
rorl
cmpsb
testl
jge
pop
rcrb
lcall
pop
adc
mov
stos
or
dec
and
sub
insl
cltd
pusha
shlb
daa
push
inc
dec
push
outsb
out
cmpsl
xchg
sub
fidivrs
in
jbe
adc
sbbl
add
cwtl
rolb
sbb
sub
push
jb
clc
mov
push
inc
ficoml
xchg
push
stos
sub
sarl
lcall
and
insb
insl
mov
stc
mov
rol
inc
aad
sbb
pop
testl
inc
mov
mov
mov
in
cmp
xchg
dec
test
cld
xor
iret
fldl
xor
das
popa
ret
jle
pop
enter
popf
mov
movb
fidivrs
loope
jo
mov
in
stc
sub
in
add
roll
popa
cli
pop
in
fsubrp
mov
pop
pop
push
aaa
out
fnop
sub
sbb
adcb
testl
xchg
mov
cmp
pusha
inc
pop
dec
es
sub
jns
imul
out
or
or
jb
mov
push
cmp
pop
dec
jl
jge
ds
rorl
fwait
mov
gs
pop
pop
in
sti
xchg
fdivrl
bound
sbb
mov
mov
es
xchg
pop
dec
insl
adcl
jge
mov
loopne
push
rorl
inc
mov
jae
loop
push
aas
cmpsl
push
and
call
das
cmpsb
or
sbb
mov
jge
mov
mov
mov
loopne
fsubrs
lock
ds
jbe
or
icebp
mov
pushf
pop
mov
xchg
insb
arpl
decb
cltd
imul
push
aaa
pop
pop
in
repz
in
sub
hlt
xchg
loopne
jl
movb
popa
adc
sbb
sub
fld
cmp
sbbb
cmp
mov
or
sbb
inc
pop
sub
out
adc
icebp
mov
sub
mov
imul
pop
idivl
mov
sub
repnz
test
push
fists
add
out
sahf
push
aad
or
mov
fxam
incl
aad
add
sbb
adc
add
mov
call
inc
xchg
xchg
das
ret
shlb
add
scas
jmp
cmp
inc
mov
mov
int
and
cli
push
cmp
aas
out
pop
lock
mov
mov
xor
pop
rcrb
cs
sub
add
inc
mov
pop
xchg
adc
clc
or
call
add
test
mov
insb
iret
repnz
nop
ret
mov
in
mov
repz
dec
xor
and
into
cmpsl
xor
scas
mov
inc
popa
inc
sbb
sbb
cmp
cmp
mov
sbb
shll
jmp
into
sub
sub
mov
or
movsl
aas
or
ret
adc
fsts
pop
mov
sti
cmp
popa
orl
stos
mov
sub
in
mov
add
jmp
in
cli
jno
mov
cwtl
jnp
mov
mov
or
icebp
inc
dec
scas
lcall
mov
and
je
push
push
outsl
push
adc
xor
mov
jno
mov
adc
jmp
stos
sbb
inc
pop
fisubrl
mov
push
or
mov
aad
fistl
test
mov
arpl
inc
jne
add
or
xor
loop
ja
push
pop
and
cmp
sub
lret
adc
jo
dec
movsb
subl
rcrl
xchg
fists
mov
add
add
repnz
daa
lock
mov
std
data16
mov
lds
jnp
rclb
sub
mov
arpl
stc
push
lret
or
pop
scas
repnz
rorb
adc
div
pop
incb
mov
inc
xor
mov
das
inc
in
cmp
xchg
adc
jb
mov
inc
ficompl
imul
or
dec
iret
mov
xchg
push
inc
test
dec
mov
adc
mov
loop
mov
icebp
lock
xchg
testb
cmpsb
fidivrs
push
and
jb
pop
fisubrs
stos
or
lcall
jle
ret
jo
inc
dec
ret
push
out
jno
mov
std
jnp
insb
cmp
scas
mov
jge
in
lods
cwtl
xchg
testl
jae
mov
test
push
loope
jns
aam
xchg
xchg
push
fucomip
ret
sbbl
jmp
lods
and
pop
xchg
mov
or
orb
mov
mov
lcall
jnp
and
mov
mov
inc
into
xor
mov
inc
xor
shll
insb
fcmovbe
adc
mov
adc
hlt
sar
nop
or
outsb
lret
xchg
pop
lods
flds
rcpps
dec
setp
push
jns
rcr
pop
divb
aad
mov
xor
and
sub
lahf
add
add
dec
les
shlb
add
cltd
pop
sbb
lret
negl
arpl
pusha
add
loopw
fs
xor
repz
jl
pop
inc
cmp
lods
test
pop
or
int
stc
ds
cmpsb
insb
or
mov
das
in
adc
mul
out
lcall
mov
push
aaa
repz
mov
imul
and
jg
sti
mov
fdivrl
inc
sub
mov
orb
out
push
and
mov
addr16
cmp
add
lea
dec
xchg
add
mov
sbb
lods
mov
cmp
scas
and
mov
stos
testb
mov
daa
imul
inc
sbbb
ss
push
sub
test
mov
xchg
sub
imul
aam
out
aaa
sahf
fdivrs
push
push
popa
pop
mov
adc
lods
ficoml
jns
and
adc
aas
xchg
lds
sub
fsubs
loop
cli
shll
mov
icebp
sub
push
xchg
mov
mov
jecxz
mov
pop
mov
jecxz
cmc
inc
sub
lods
iret
adc
in
or
stos
in
jp
enter
xlat
and
ret
pand
and
das
or
add
ds
pop
inc
adc
mov
fwait
mov
scas
mul
inc
stos
inc
ret
lock
outsl
cmc
jb
outsb
sbb
cmp
insb
inc
pop
in
popa
dec
in
outsb
inc
adc
sub
out
mov
cmpsb
lods
adc
in
jne
mov
nop
and
and
lea
sub
jo
jbe
dec
xlat
mov
inc
iret
and
test
pop
cmp
mov
mov
sbb
push
jne
pop
shrl
pop
or
pop
and
fdiv
inc
das
push
test
cmpsb
cmp
or
pop
or
loop
and
aas
pop
mov
outsb
in
sbbl
bnd
push
rol
outsl
ds
and
sub
sbb
xchg
push
pop
adc
fldt
mov
int3
push
inc
inc
pop
in
enter
lcall
stos
pop
inc
xchg
cmp
jmp
loop
out
mov
imul
and
mov
shll
adc
adc
mov
out
je
icebp
push
inc
fcomi
xchg
test
cs
push
movsl
test
mov
sbb
rcr
daa
aad
xchg
cmpsb
repnz
mov
lret
pop
fistpll
xor
mov
movsl
mov
jae
mov
adc
sahf
mov
sbb
add
fcomps
icebp
enter
sub
jae
push
dec
inc
jb
filds
cmp
and
es
arpl
mov
and
and
or
fisubrl
scas
enter
pop
pop
loope
xchg
ror
movsl
sbb
test
and
push
insb
in
xor
push
andl
xor
repz
dec
xor
xchg
adc
xor
mov
sub
sub
pop
mov
popf
pop
pop
movsb
roll
mov
call
adcl
int
jmp
pop
jmp
dec
lcall
aas
xor
ret
fmuls
cmc
fdivl
push
fistl
or
std
daa
cmp
cwtl
mov
cmpsb
imul
movsb
or
sahf
push
aas
dec
fdivs
cmp
dec
gs
jnp
xchg
repnz
cmpsl
stos
push
cli
add
scas
mov
imul
insl
inc
adc
pushf
mov
xchg
sbb
out
inc
inc
das
outsb
dec
pop
cmp
lsl
adc
test
mov
inc
jae
fisubrl
pop
outsb
negb
loopne
unpcklps
sub
and
xchg
mov
pop
mov
mull
push
fistpl
or
into
jb
jecxz
cmpl
pop
mov
pop
ljmp
loopne
aad
xchg
sbb
xchg
jnp
mov
out
dec
pop
mov
arpl
mov
adc
pop
in
mov
iret
dec
jp
sub
xchg
rolb
or
mov
mov
movsl
xchg
outsl
shlb
adc
movsl
sbbl
cmp
nop
test
mov
or
and
int3
and
mov
fs
jmp
nop
sbb
adc
pop
cli
mov
sub
pop
call
sbbb
scas
gs
popa
pop
mov
mulps
inc
popa
cmp
or
je
aam
bound
dec
dec
shrl
popa
lods
iret
xchg
xchg
lret
xchg
push
push
imul
mov
sbb
cmp
dec
inc
mov
pop
cmp
fiaddl
aas
mov
icebp
ja
sbb
xor
jne
push
mov
filds
andnps
inc
add
loope
outsb
mov
hlt
fwait
mov
lods
inc
cmp
pop
movsb
push
orl
fs
mov
xor
sbb
mov
rolb
jno
pop
xor
mov
jne
xchg
mov
out
cld
ds
jl
sbb
xor
lret
sbb
popf
je
jle
imul
mull
inc
pop
ss
scas
dec
cmpsl
dec
pop
xchg
mov
xlat
jns
rcrl
and
cmpsl
and
iret
push
mov
popa
mov
pushf
sbb
push
pop
stc
bound
fnstcw
cli
ret
sbb
es
and
ljmp
bound
rorl
pop
aam
pop
fucomip
inc
hlt
scas
mov
lds
scas
push
sub
push
adc
and
inc
mov
inc
sub
fdivs
push
ss
add
leave
jno
xchg
sub
loop
cmp
and
sti
es
add
outsl
fidivrl
shr
add
imul
inc
fs
arpl
out
pop
mov
pop
mov
mull
mov
aad
mov
cmc
imulb
cmp
hlt
mov
sar
dec
push
dec
and
push
mov
aam
pop
movsl
ljmp
add
sbb
lret
xor
int3
jge
xor
push
dec
ja
mov
mov
cmpsl
or
mov
adc
mov
imull
scas
cwtl
pop
dec
inc
jle
jmp
in
sub
or
into
int3
std
mov
add
in
std
cli
and
cmpl
xor
fwait
pop
pusha
ret
push
add
push
jmp
fldenv
xchg
in
adcb
sub
cmp
notl
pop
fsubrs
les
ja
out
test
aad
mov
gs
rorb
or
sub
dec
push
cmp
call
jmp
and
iret
pusha
das
add
lret
jge
cmp
cli
jne
out
xor
fiadds
dec
adc
add
mov
jl
out
clc
ss
sub
xchg
call
push
test
lea
ljmp
mov
and
and
sti
adc
sbb
out
ja
add
ds
ljmp
loope
adc
mov
sub
pop
sub
mov
adc
pop
xchg
out
leave
lock
pop
pop
fsub
pop
repz
adc
jb
fisttpll
fildll
scas
inc
jb
addr16
insb
sub
push
adc
lahf
push
iret
xchg
mov
dec
sub
mov
add
or
out
xor
fldt
sahf
loope
mov
inc
jb
and
or
mov
cmp
cmp
sbb
mov
mov
fbstp
ljmp
pop
test
push
xlat
cld
fstpt
test
push
push
out
adc
test
add
es
mov
pop
insl
jns
inc
mov
sub
cmp
pushf
inc
adc
sbb
outsb
cmpsl
aam
repz
mov
push
cwtl
xor
loopne
shrb
clc
in
les
dec
arpl
jmp
jmp
loop
push
sar
jmp
cs
inc
xor
in
cmpl
pusha
or
lds
aas
xor
lret
scas
je
or
push
test
faddp
add
loop
inc
daa
push
xchg
cli
sbb
push
sar
jae
bound
sub
sub
shl
inc
test
jl
lret
sub
daa
jmp
add
push
and
in
fwait
in
mov
jne
sbb
pop
mov
lahf
insb
mov
fisttps
sbb
or
fcompl
push
or
push
push
jp
sub
sub
sarl
fldenv
pop
in
iret
lahf
ret
add
xor
xor
sub
lock
rorl
sub
notb
mov
lcall
fdiv
pop
in
mov
inc
mov
pop
inc
insb
fbld
inc
scas
aaa
imul
sbb
dec
ss
addr16
arpl
lods
pop
data16
rcr
xorb
inc
insl
mov
or
aad
dec
dec
xchg
and
add
and
lock
movsl
lahf
xchg
sbb
in
mov
in
test
push
cmpsb
and
fidivl
inc
cmp
inc
aad
aas
sbb
scas
push
shll
addr16
jmp
pusha
push
loop
mov
dec
push
insb
nop
adc
imul
icebp
mov
scas
icebp
inc
jmp
mov
mov
cld
xlat
xor
mov
sub
xchg
adc
adc
and
dec
aad
lods
and
mov
lds
add
out
adc
dec
repnz
pop
loop
aaa
sbb
cmp
lret
aam
insl
and
dec
xchg
test
jne
mov
stos
lods
mov
jo
push
fcoms
ljmp
jg
cwtl
lea
out
inc
mov
sbb
xlat
push
iret
cmp
push
loop
call
js
xchg
enter
jne
ret
test
mov
idivl
ja
xorl
pop
fsubrl
inc
pop
insl
inc
and
xor
mov
das
add
sbb
icebp
test
and
cmpsb
cld
xchg
xor
or
aad
or
adc
int
rcrl
cmp
mov
sub
adc
xor
cld
fcomps
std
cmpsl
or
xor
pop
add
ffree
frstor
fsubrl
cmp
jle
sbb
jne
cmpsl
jg
mov
dec
data16
xor
mov
xchg
jecxz
in
mov
imul
xor
or
jmp
push
sbb
fistpll
in
lods
cli
adc
scas
fwait
add
pop
lret
popa
mov
dec
mov
cvtdq2ps
sbb
lea
inc
xchg
xor
xor
lods
aas
mov
imul
ss
pushf
pop
cs
fstps
test
mov
cwtl
cltd
rcl
gs
enter
stc
jnp
fwait
out
sti
inc
cmp
sbb
rorb
fnstcw
inc
in
dec
repnz
stos
scas
insl
inc
adc
rorb
pop
push
loopne
icebp
data16
mov
test
int3
pop
xchg
jl
movsb
cs
mov
cmp
aas
push
pop
pop
jp
aam
loopne,pn
mov
sbb
loope
stos
or
mov
xor
mov
push
repz
sbb
pop
cmp
sub
inc
icebp
notb
mov
scas
insl
inc
lret
cmpsb
push
sub
ja
push
cmp
push
lds
cmp
nop
and
stos
repz
lcall
add
push
or
or
je
jge
and
cmp
pushl
add
add
dec
stc
push
fs
in
jno
lahf
xor
pop
daa
pusha
test
adc
push
lea
stos
pusha
sarb
dec
outsb
mov
pop
rcrl
sub
out
push
out
clc
cltd
insb
mov
pop
leave
sub
fs
pop
jecxz
cli
pushf
sub
cmpsl
sahf
lods
inc
jns
push
loopew
rep
jg
arpl
sub
call
mov
addr16
cld
imul
or
test
jnp
add
inc
fwait
adc
inc
cmpsl
xchg
cmp
into
stos
ja
or
cwtl
enter
and
mov
cmp
add
das
mov
mov
lea
shl
xchg
mov
pop
scas
jo
push
adc
loope
dec
sahf
stc
test
scas
mov
xorl
cs
mov
mov
add
mov
adc
push
imul
sti
loop
icebp
pushf
into
popa
leave
insl
scas
addr16
std
mov
push
mov
add
test
adc
push
cmc
mov
jnp
popa
cli
enter
je
xor
aam
sub
jns
out
mov
repz
pusha
sub
test
xor
mov
stos
pop
out
into
xor
lds
ret
sub
shrl
cli
insl
and
out
jecxz
dec
add
jne
testl
out
sub
hlt
testb
je
sbb
movsl
mov
test
and
mov
push
les
cmp
movsl
hlt
and
sub
pushf
cmc
mov
xlat
mov
add
cmp
testl
lds
jns
mov
sbb
mov
nop
lods
cwtl
and
pop
arpl
arpl
jl
add
pop
sub
hlt
add
or
pop
daa
and
sbb
xor
jg
mov
xchg
loopne
mov
sub
or
mov
imul
icebp
lret
iret
int3
sti
cmp
xor
mov
sarl
and
mull
or
lock
sbb
push
pop
in
ret
inc
ret
jmp
xchg
pop
dec
lods
gs
sbb
fadds
xchg
mov
loope
add
pop
or
add
pop
mov
push
call
mov
mov
adc
jb
lcall
cmp
daa
fnsave
pop
push
mov
popf
fists
fidivrl
out
mov
cmp
push
lcall
add
out
in
movsb
sub
stc
or
js
inc
call
sbb
adc
setg
into
push
pop
sbb
popa
jp
mov
int3
aas
nop
mov
sbbl
aam
jo
into
push
dec
movq
cmc
pop
push
pop
push
popf
xchg
adc
mov
scas
xchg
mov
inc
mov
jmp
sub
arpl
andb
adc
mov
mov
pop
dec
mov
ss
inc
xchg
xor
lahf
int3
cmp
scas
dec
jecxz
push
hlt
icebp
cmp
stc
aaa
push
test
mov
loop
test
arpl
sbb
ret
pusha
shll
push
dec
mov
imul
mov
cmpsb
cli
dec
sahf
outsb
fmulp
mov
cmc
inc
xor
jnp
dec
fwait
mov
pop
mov
jbe
mov
mov
pop
add
mov
fcoms
aas
mov
xchg
sti
leave
and
xor
or
inc
mov
xor
mov
xor
sbb
xor
mov
dec
call
jbe
fildll
inc
mov
jnp
pop
xchg
faddl
shll
mov
jp
and
xchg
mov
roll
iret
cld
fs
push
repz
sahf
aaa
daa
nop
pop
lods
or
xchg
sbb
and
mov
inc
mov
ja
jg
jno
push
outsl
inc
add
pop
out
rcrb
push
pop
sahf
xchg
and
pop
arpl
push
push
stc
jge
fdivp
ss
jns
not
mov
mov
mov
insb
in
int
jnp
ja
xor
in
inc
inc
in
xchg
and
loopne
sbb
cmp
sub
je
icebp
fs
sbb
cmc
out
int
and
push
sbb
push
jecxz
mov
sub
push
ficompl
or
push
mov
or
dec
mov
mov
sahf
and
rorb
dec
sbb
xchg
cli
imul
subl
dec
sbb
sbbl
mov
cli
and
lea
dec
pop
out
adcb
fildl
jnp
stc
push
sub
mov
cmpl
inc
add
nop
or
jp
insl
jbe
leave
and
xchg
nop
jge
mov
inc
inc
jae
add
pop
pushf
aas
icebp
xchg
add
push
pop
shrl
lods
or
add
mov
mov
push
sti
pop
pusha
mull
adc
inc
push
inc
sbb
mov
push
pop
stc
pop
mov
cmp
gs
push
dec
aas
jb
mov
addb
or
cld
in
inc
sbb
lret
xchg
sbb
adc
xor
stos
scas
add
jmp
push
mov
movsl
pop
insl
mov
mov
int3
adc
dec
dec
pop
dec
inc
mov
or
in
ja
jge
jp
adc
or
aad
sbb
ret
push
insl
mov
rclb
add
mov
ss
mov
es
push
repz
push
push
loopne
fimuls
xchg
call
loope
push
test
or
and
into
add
imul
xchg
aad
out
out
movsl
xchg
repnz
pop
jmp
mov
sub
pusha
xchg
mov
bound
mov
sbb
cld
inc
and
cmpsl
in
leave
pop
adc
aas
dec
mov
xor
mov
jle
fdivrs
in
push
outsb
or
shll
inc
push
jb
sbb
loop
out
pushf
aad
ret
mov
pop
pop
or
out
xchg
sbbb
mov
cmp
sub
push
sub
jmp
out
fisttpl
push
jns
aad
inc
cmpsl
daa
push
inc
orl
loope
mov
fiaddl
std
daa
push
jns
lret
jo
jg
inc
sbb
rorb
and
lret
scas
xchg
mov
jo
adc
xchg
test
addb
cmpsb
fists
icebp
subb
loop
dec
inc
jno
pop
cmc
mov
repz
addr16
jnp
or
das
enter
adc
xor
nop
hlt
in
mov
lock
mov
js
test
insl
rorb
lcall
enter
mov
sahf
ret
push
mov
sub
mov
mov
xor
movsl
in
es
and
sbb
shrb
mov
add
lret
imul
push
test
jae
shrb
pop
cmp
movsb
mov
in
xchg
add
mov
lock
mov
data16
mov
scas
sbb
jae
mov
sbb
aas
ret
popl
cmp
sbb
je
movsl
in
movsl
sub
je
enter
enter
rcl
inc
pandn
iret
out
fwait
mov
jle
or
jbe
mov
or
scas
dec
daa
mov
mov
int3
add
push
add
push
hlt
inc
clc
shlb
xchg
pop
jp
icebp
jb
shll
into
push
inc
sub
mov
xchg
scas
cmp
dec
xor
into
setge
xor
xchg
lret
add
and
clc
mov
aaa
dec
mov
xor
or
gs
adc
jmp
js
movsb
jns
add
push
lcall
add
ss
inc
fisubs
or
bound
ror
and
push
ja
mov
mov
jb
repz
sub
sahf
mov
xchg
mov
and
xchg
mov
mov
mov
cmp
aad
cmpsb
outsl
imul
and
es
push
es
mov
xchg
rclb
ja
cmp
cmp
pushf
jne
cs
push
xchg
or
popa
xchg
mov
insb
in
push
adc
fisttps
popa
jne
fs
stos
cwtl
mov
jle
xchg
or
push
out
xchg
cmp
sti
mov
sub
dec
add
out
jle
sub
or
xchg
xlat
loopne
push
cmpsb
int3
test
arpl
sbb
add
aam
fisubs
cltd
or
ret
jp
and
pop
push
stc
adcl
ret
pop
push
cmpsl
cmp
icebp
out
sbbl
jns
mov
xchg
fldl
insl
fidivrs
shlb
call
mov
and
and
icebp
icebp
add
pop
fmul
std
xchg
cltd
ss
iret
inc
cli
ds
mov
das
jns
shl
js
in
xchg
or
loopne
scas
add
pop
jge
jmp
fxch
lret
movsb
aaa
fwait
add
enter
mov
push
adc
push
or
cmp
sub
jns,pn
movsl
mov
roll
and
aaa
ljmp
sbb
fs
mov
sti
icebp
std
aad
push
leave
fistps
clc
outsb
mov
jns
cmpsl
cwtl
mov
sahf
shl
push
sbb
repz
int
dec
out
mov
sub
pop
aaa
sbbl
cmp
mov
push
les
push
cmp
orb
inc
jecxz
call
fdivrs
hlt
dec
xchg
aad
cmp
pusha
sub
xchg
cli
imul
mov
adc
xor
mov
inc
adc
rorb
cmp
sahf
mov
notb
aaa
in
mov
int
cltd
mov
mov
xor
fmull
push
loopne
aad
inc
mov
les
pop
pop
and
mov
xor
addl
insb
xor
xor
out
aad
repz
js,pn
into
and
xchg
ja
mov
into
jae
sbbb
xchg
test
or
popa
xor
dec
into
xchg
int
sbb
inc
mov
notb
jmp
lret
xchg
shr
and
xchg
push
sub
mov
inc
paddd
push
inc
pop
jmp
das
jnp
jg
mov
pop
popf
sbb
jbe
or
lds
gs
pop
inc
out
mov
push
adcl
and
push
fsubrl
add
and
mov
pop
cld
fimull
int
mov
and
pop
xor
cwtl
mov
cmp
jnp
cwtl
dec
mov
jmp
jmp
out
cmc
stos
rorb
mov
inc
into
ljmp
addr16
xlat
jno
xchg
icebp
dec
jge
sub
push
push
cmp
xlat
lret
ret
push
mov
mov
in
pop
adc
into
hlt
mov
jl
pusha
pop
bound
jns
xor
jnp
addr16
sub
mov
mov
add
jb
fisttpll
lea
sarl
jno
leave
pop
call
ja
dec
fcompl
subb
hlt
sbbb
popa
jnp
push
lods
mov
ret
cmp
data16
pop
mov
xor
push
pusha
push
fnsave
lods
cmp
inc
shrl
add
scas
inc
sbb
and
cmp
jnp
int
loope
or
mov
or
add
mov
sbb
adc
push
dec
cmp
les
inc
adc
out
mov
pop
psubq
xor
xchg
lods
lods
fcmove
push
mov
dec
pop
mov
aas
sub
sbb
stc
fsubp
sub
dec
add
inc
test
test
push
push
jecxz
cmp
xchg
cmp
mov
dec
addr16
mov
xor
sub
into
shrb
scas
fsubs
daa
repz
cmc
fisttpll
push
adc
mov
mov
vpsubw
lds
negl
mov
sbb
mov
push
pop
mov
jbe
andl
cli
jle
andb
sub
fsubr
xor
adc
sbb
leave
pushf
xchg
xchg
aam
inc
repz
imul
inc
mov
xchg
int3
dec
and
adc
into
inc
stc
pushf
mov
pop
add
adc
xchg
pop
jecxz
xchg
aam
jl
sbb
pusha
fcomi
cmp
sbb
notb
push
xchg
or
adc
testb
push
lret
mov
push
mov
and
lret
arpl
push
les
fistpll
pop
and
test
dec
fwait
sbb
pop
sbb
rep
jbe
lock
test
aad
mov
push
or
and
ret
imul
jle
dec
sub
adc
push
fdivrs
inc
pop
cmpsb
pop
push
pop
insl
iret
mov
lret
jle
js
pusha
repz
rolb
cmp
in
xchg
mov
mov
lret
stos
dec
vpavgw
pop
aas
sbb
push
out
lahf
add
mov
enter
js
xor
push
imul
ret
cmc
mov
add
jne
cmp
jns
add
xor
insb
nop
sbb
or
add
xchg
mov
clc
cmp
sti
insl
orl
fistl
add
mov
add
inc
jmp
mov
into
and
inc
mov
dec
rolb
sub
mov
int3
fwait
push
fwait
lret
lret
push
test
subb
add
pop
dec
fs
xor
int3
sahf
mov
scas
adc
outsl
das
iret
add
insb
pushl
cmp
pushl
lcall
arpl
jo
or
ffree
jb
mov
lret
sub
popa
adc
pop
das
inc
out
mov
adc
hlt
jo
outsl
subl
sbb
adc
jns
je
icebp
adc
fwait
sbb
data16
ja
ljmp
icebp
mov
push
mov
and
out
pop
cmpsl
fst
scas
in
sub
cmpsl
leave
cltd
inc
aad
setno
adc
ficomps
push
and
fwait
xor
test
iret
sbb
jnp
dec
btr
push
out
inc
pop
push
pop
stos
std
inc
incl
mov
cli
or
andl
mov
cmpsb
push
ljmp
arpl
mov
test
in
or
je
push
xor
push
dec
jnp
cmpsb
cmp
push
lock
dec
rcrb
arpl
mulb
and
test
xor
icebp
js
xchg
pop
dec
mov
lods
or
mov
mov
fldl
cmpsl
outsb
push
sbb
adc
int
sbb
adc
and
loopne
bound
mov
adc
inc
out
dec
scas
sbb
jg
loope
std
into
data16
je
out
jbe
fcoml
cwtl
pop
mov
mov
add
cli
mov
mov
in
dec
lret
orl
leave
in
mov
and
sti
cltd
mov
mov
lds
cwtl
adc
add
sbb
cmpsl
mov
xchg
out
outsb
arpl
fwait
int3
mov
jo
loop
das
or
dec
nop
inc
mov
rolb
sbb
jno
push
or
pop
sub
imul
xchg
or
or
loope
xchg
daa
xchg
popf
int3
sub
icebp
popa
fnstenv
sbb
dec
adcb
sub
push
xor
push
lea
xchg
les
mov
repz
mov
xchg
out
jge
fdivp
dec
loope
cmpsb
popf
add
das
mov
call
rolb
test
sub
popa
add
rcr
sbb
dec
out
orl
xlat
mov
mov
push
sbb
lcall
lock
jge
dec
fistpl
das
push
leave
stos
sbb
mov
icebp
data16
in
popf
les
xchg
outsb
lret
push
sbb
aam
test
lret
in
loope
xor
cmpsl
push
movsl
jmp
pop
shll
shlb
pop
add
jns
jb
lods
aad
mov
shlb
push
cld
dec
xchg
pop
cmp
pop
sub
and
or
rolb
xchg
adc
xor
sub
cwtl
loopne
mov
sarb
lcall
cmp
in
or
cmp
push
or
fstps
ficompl
cmp
or
mov
inc
sbb
xchg
daa
xor
fsts
xchg
sub
ljmp
xchg
ljmp
daa
mov
movsb
mov
inc
sbb
jns
bound
mov
test
aaa
add
lea
aam
mov
das
adc
sub
daa
mov
jo
divl
xor
adc
cltd
imul
push
dec
sub
pop
pusha
mov
test
jbe
pop
in
in
hlt
jl
pop
sub
push
sti
mov
cmp
jno
xor
movsl
xlat
shll
out
xchg
mov
and
ds
fwait
incb
push
xchg
mov
mov
js
popa
imul
mov
pop
es
repnz
inc
mov
xor
mov
jo
pop
jmp
adc
mov
movsb
and
add
leave
dec
cs
das
mov
mov
mov
arpl
mov
xor
dec
js
inc
add
add
add
or
pop
ja
xor
nop
jbe
sub
jo
sub
pop
lds
sbb
xchg
in
inc
scas
nop
xchg
rorb
cmp
mov
es
loope
jg
popf
aad
iret
fwait
pop
or
adc
test
pop
jecxz
xchg
mov
pop
test
stos
mov
ds
jp
iret
fisttpll
push
mov
jno
jae
xchg
je
jg
cmpsb
adc
mov
adcl
sub
imull
inc
lds
jo
jns
xor
mov
faddl
and
je
jo
lcall
adc
faddl
bound
out
into
mov
jl
push
sub
aas
in
icebp
push
push
stos
mov
pop
je
mov
sbb
ret
mov
sub
and
out
lea
ss
inc
add
jnp
int
push
mov
mov
add
push
lcall
mov
mov
fsubr
jecxz
xchg
mov
ds
popf
push
sahf
fidivl
iret
push
xchg
pusha
lea
inc
ret
push
mov
jmp
cmc
out
xor
rcrl
mov
inc
test
and
out
fcoml
addl
and
outsb
sahf
testl
and
out
adc
ss
pop
mov
pushf
leave
dec
loopne
out
cli
out
jge
cltd
cmp
push
stos
in
jp
test
pop
pop
inc
sub
testl
pop
mov
push
ror
xor
pop
push
sbbb
push
addr16
loope
das
pop
ret
call
incb
dec
leave
stos
inc
pop
mov
pop
into
dec
push
adc
call
pop
push
loope
jecxz
jg
fisttpl
sti
aam
fiadds
cmp
sarl
les
popf
adc
cli
push
push
lea
push
sbbl
push
xor
jmp
roll
roll
sbb
stos
adc
ja
cmp
xchg
or
insl
push
outsl
loop
sbb
push
or
and
gs
dec
push
inc
xrstor
clc
jmp
xchg
adc
stos
shr
and
mov
lahf
inc
lret
push
cmp
mov
std
sub
rcl
jl
pop
outsb
test
sbb
iret
stos
int3
push
scas
add
pushf
sbb
sti
mov
scas
cmc
jmp
out
popf
pop
insb
push
out
pushf
push
xchg
or
sub
das
xor
js
add
scas
xchg
add
fsubs
cmp
cli
cltd
push
int
dec
cmpsb
mov
sbb
xor
sbb
sub
rcll
jl
call
mov
push
xchg
pop
adc
sbb
jl
lahf
cmp
icebp
pusha
adc
push
cwtl
cmp
dec
jg
dec
jne
imul
mov
mov
shr
call
leave
int
push
cmpsl
sub
push
jb
lock
xor
pusha
outsb
sti
addb
adc
lods
cmp
add
test
aaa
or
inc
imul
cmpsb
imull
lret
fmull
sbb
jl
push
fiaddl
xor
aad
enter
or
mov
push
mov
dec
pop
xorb
pop
lahf
pop
jo
aaa
lods
pop
addr16
out
ret
adc
inc
out
ja
test
inc
js
loopne
mov
xacquire
aam
iret
lret
inc
ds
repz
in
ja
xor
repz
test
push
jmp
push
mov
daa
imul
sub
push
call
and
repnz
icebp
insb
xor
inc
rcrb
rcl
sti
inc
scas
xchg
pop
cmp
test
jle
xchg
xor
addr16
cmp
arpl
pop
sahf
rcrb
setbe
enter
adc
jae
jno
aam
fsts
mov
pop
cmc
push
rol
mov
or
movsl
xor
sub
xchg
repz
cmp
fs
push
cmp
push
mov
sub
jae
add
jecxz
xchg
jl
lods
pop
pop
imul
jle
test
test
gs
adc
pop
mov
xchg
loop
in
dec
daa
cmpsl
leave
outsl
jmp
cmc
into
mov
pop
loope
lahf
shrl
inc
decl
dec
icebp
fistpll
outsl
fiadds
imull
js
mov
mov
add
outsb
pop
add
or
shll
lret
sbb
clc
aad
sbb
insb
pop
xor
shrl
icebp
roll
fs
xor
ret
pop
push
push
out
push
je
movsl
cmpsb
add
or
jbe
mov
lcall
or
xchg
mov
bound
mov
insl
cwtl
adc
imul
mov
mov
xchg
leave
pop
adc
xor
dec
mov
dec
addr16
cwtl
into
insl
movb
iret
mov
jnp
shlb
mov
cmp
pminub
inc
and
sbb
sbb
mov
or
loopne
in
gs
stc
push
xor
and
rolb
gs
jo
add
jns
sbb
in
jl
or
lret
movsb
push
cmp
roll
cmp
imul
and
test
pusha
or
mov
mov
or
insb
mov
inc
mov
dec
iret
lods
cs
mov
imul
mov
adc
mov
psrlq
push
jmp
clc
add
cwtl
call
add
jg
outsl
fdiv
jp
cld
jbe
mov
or
ljmp
in
inc
mov
scas
repnz
out
inc
mov
mov
push
std
lods
fldl
push
xchg
fistps
stos
pop
push
pop
mov
xchg
jnp
incl
mov
xchg
fisubl
mov
xchg
orb
xor
jne
mov
imull
shrl
into
shll
adc
mov
loopne
das
fbstp
jbe
movsl
sub
das
mov
dec
dec
pop
pop
xchg
and
pop
arpl
cmpsl
pop
sbb
rcr
lock
pop
pop
aad
or
loop
fs
sbb
xchg
sub
sub
loope
subl
imul
cmp
ror
sbb
rcl
mov
fdivrl
scas
mov
mov
and
push
or
leave
outsb
shll
dec
add
fs
and
and
dec
inc
dec
mov
mov
mov
adc
push
test
jle
cmp
insb
inc
inc
xchg
scas
sub
out
adc
notrack
in
mov
popf
inc
in
mov
dec
mov
adc
cs
xchg
out
insl
hlt
add
repnz
aad
or
add
mov
fcomip
and
xor
sbb
pop
lret
dec
xchg
das
test
push
lea
popa
sub
sub
lods
mov
repz
jmp
icebp
mov
sub
dec
jno
pop
pop
sbb
sbb
adc
or
clc
jmp
jmp
test
lods
push
movb
rorb
sbb
fnstsw
jne
push
xchg
mov
inc
scas
shr
cmp
into
mov
popa
jbe
imul
das
fists
push
bound
int
pop
aad
and
jnp
inc
pop
cmp
icebp
cmp
inc
mov
cmp
mov
dec
iret
adc
dec
stos
sahf
insl
ds
mov
sti
xor
mov
mov
pop
push
xchg
pop
pop
mov
sbb
mov
hlt
sub
add
inc
pop
push
rcr
lock
divb
adc
shlb
repnz
jge
jle
leave
aad
hlt
notb
sahf
test
sub
loopne
inc
xchg
stos
inc
dec
pop
push
or
int3
xchg
cmc
sub
aam
adc
push
jne
mov
add
dec
xor
je
dec
out
ss
sbb
xchg
nop
pinsrw
mov
aaa
xchg
mull
jns
dec
cld
dec
fs
dec
xor
cmpsb
fisubrl
repz
lcall
loopne
inc
adc
inc
int3
xchg
out
adc
xchg
pusha
jno
xchg
lcall
jbe
aam
mov
dec
sbb
mov
jp
into
xor
jb
cmp
daa
jle
icebp
les
loop
add
xor
push
cld
xchg
out
orb
sbb
cmpsb
jmp
shlb
and
or
inc
clc
add
cmp
insb
xchg
mov
mov
cli
adc
iret
pop
or
mov
addr16
or
testl
aas
lret
dec
xor
mov
sbb
mov
cmp
mov
xchg
jg
ja
std
int3
xor
scas
test
mov
inc
mov
cwtl
add
ret
lahf
or
adc
fisttpl
lds
ds
mov
inc
mov
lret
mov
sbb
push
mov
std
dec
cmp
inc
stos
mov
lea
aaa
and
mov
or
mov
pop
int3
lret
into
cmp
jb
cmp
cli
stos
sbb
cmpsb
xchg
lods
in
sbb
jle
cmpsl
push
out
xor
push
xor
xor
adc
cs
and
dec
lods
pop
ljmp
fsincos
mov
push
fstp
mov
push
ja
ficoms
mov
test
mov
nop
call
es
mov
mov
pop
mov
lds
mov
mov
repz
mov
pop
mov
xor
pop
daa
jle
aad
mov
adc
popf
mov
lcall
sbb
dec
lds
mov
jae
or
fidivrs
fmull
mov
inc
rol
jle
sub
and
inc
or
repnz
neg
inc
sbbl
imul
scas
xchg
inc
cmp
inc
rcrb
repnz
xor
les
sahf
fcmove
fucomp
rolb
jecxz
xor
aas
sbb
mov
jp
sub
jae
rclb
enter
mov
mull
fwait
dec
jle
loop
pop
sub
adc
ja
loope
dec
jo
sub
loopne
scas
mov
push
test
ja
lret
add
xchg
mov
and
fwait
jno
xor
add
ljmp
inc
lcall
jp
push
push
adc
out
stc
mov
punpckhdq
dec
cmp
mov
outsb
outsb
add
test
sahf
mov
mov
adc
mov
dec
and
inc
cs
jecxz
xlat
loopne
mov
mov
jmp
jmp
std
xchg
in
aas
scas
mov
ret
dec
das
jp
enter
sub
fisttpl
adc
dec
jge
adc
mov
test
inc
mov
adc
cmp
lahf
arpl
mov
leave
dec
pop
add
sub
jl
mov
fcom
lds
gs
test
push
setp
lea
mov
xor
dec
mov
dec
daa
or
stos
shll
mov
sbb
mov
xchg
jl
popf
lret
sbb
mov
int
dec
fistl
dec
aas
arpl
cmp
push
push
xchg
inc
dec
mov
inc
test
dec
lahf
jae
testl
rsqrtps
stos
xor
fbld
insb
push
xor
xor
jne
mov
lcall
mov
mov
dec
or
xchg
jno
xor
test
js
sub
and
mov
add
mov
mov
subl
jge
xchg
mov
fwait
imul
sti
xor
push
mov
push
cmp
out
testb
std
jg
inc
and
into
std
push
andb
je
setl
iret
jo
mov
cli
mov
and
push
xchg
mov
dec
push
adc
cld
test
sbb
andl
lret
cmp
add
mov
loope
or
lea
cmp
ss
daa
jle
lods
test
sub
inc
cmp
jl
or
int
cmp
add
adc
ja
fwait
and
enter
popa
cmpsl
push
mov
cmp
stos
inc
pop
push
mov
lods
sub
pushf
ss
xor
jae
les
lret
xorb
fmull
and
sub
add
mov
mov
and
pusha
imul
jge
xor
jae
adc
repz
add
mov
pop
or
cld
pop
mov
fimuls
insl
and
andb
enter
out
or
sub
mov
push
fnsave
mov
xor
adc
sbb
xchg
sub
mov
sub
xor
pop
loope
adc
jg
popf
pop
xor
ret
dec
jg
xchg
add
cmp
pop
movsl
lods
lods
lods
mov
cmc
test
adc
cmpsb
fstpt
push
push
std
in
xchg
pop
pop
push
jb
and
mov
mov
pop
arpl
adc
inc
sbb
cmp
xchg
push
sbb
or
mov
stc
sbb
or
jb
mov
cmp
adc
and
scas
gs
mov
fisubrl
rclb
int
loope
mov
and
jg
jns
mov
fdivr
je
add
and
movsl
inc
xchg
ss
in
aas
jge
push
rolb
sahf
dec
orb
jg
cld
adc
shlb
lods
loopne
jns
pop
sbb
enter
enter
cmp
inc
ret
sub
pop
sbb
and
in
roll
mov
aad
mov
test
mov
in
sbb
xchg
aas
mov
sbb
mov
imul
jmp
lock
dec
pushf
andps
jnp
repz
loopne
or
push
jmp
out
sarl
xor
insl
jecxz
das
fdivl
ds
inc
jmp
jbe
stos
sbb
ret
mov
mov
cmp
sub
add
test
dec
lahf
xor
mov
inc
cmp
jge
adcl
mov
push
jne
mov
pushf
push
or
imul
or
cli
pop
mov
stos
rcrb
pop
cli
ret
pushf
rcrl
sbb
lock
lret
cltd
fwait
jecxz
xchg
rcrl
hlt
mov
in
dec
push
mov
data16
push
imul
popf
ja
sbb
ret
push
push
sbb
cmp
mov
imul
xchg
jg
loop
sbb
add
mov
enter
adc
gs
div
dec
rcrb
test
fstpl
or
insw
shlb
je
jg
jnp
fnstenv
call
imul
xchg
pushf
pop
stc
lret
test
div
bound
xchg
movb
jbe
popf
mov
lcall
pop
clc
pop
xchg
jne
add
repnz
mov
lret
or
jae
addr16
sub
xchg
mov
jle
or
inc
xchg
in
fcmove
xchg
imul
divl
cltd
neg
test
mov
ret
dec
cmp
mov
push
lcall
jbe
je
sub
jecxz
and
and
lcall
xchg
hlt
add
daa
inc
sahf
jbe
pop
hlt
lods
gs
fneni(8087
aad
cmc
roll
sub
lcall
mov
notb
xchg
repz
cld
push
jle
push
sbb
fistl
sbb
ret
outsl
and
lock
stos
and
pop
aad
les
cli
xchg
cmp
pushl
mov
das
jl
xor
int3
lods
jecxz
cld
inc
mov
mov
push
xor
mov
lods
inc
cltd
mov
jg
in
add
push
pop
dec
je
mov
lock
or
pop
mov
or
sbb
rorl
inc
adc
pop
and
push
and
inc
xchg
mov
sbb
add
sbb
push
pop
sub
xlat
jne
inc
sub
xchg
lods
adc
ror
pop
add
les
mov
into
cmc
cld
iret
jne
sbb
ja
cmpb
cltd
mov
push
or
inc
pop
dec
lds
cmp
push
cmp
dec
fldcw
sti
dec
xchg
xchg
addr16
hlt
fdivl
xor
cmpb
fnstsw
rol
pushf
add
mov
movsb
mov
xlat
mov
jle
or
jns
or
cmpsb
xchg
push
push
push
cmpsb
mov
je
frstor
mov
popf
push
repnz
cmp
in
and
xor
add
sti
cmp
lock
sbb
idivb
shufps
gs
scas
aam
xor
outsl
iret
push
mov
sub
pop
mov
out
add
lea
mov
mov
inc
shrl
push
jb
xchg
mov
flds
bound
stos
sahf
add
pop
inc
sbbl
or
sarb
das
out
imull
dec
cmp
loop
out
lcall
sub
push
dec
jecxz
inc
cwtl
daa
and
pop
mov
or
and
nop
adc
xor
mov
ja
dec
xchg
popa
call
std
mov
xchg
enter
in
jmp
pop
mov
stos
and
out
aas
sub
fidivrs
xchg
jmp
push
mov
cltd
mov
jge
cwtl
std
pushf
not
rorl
add
andb
clc
mov
mov
cmpsb
jg
testb
icebp
lea
mov
inc
or
ljmp
into
add
cmpl
call
and
inc
sahf
insb
es
adc
pop
shl
rcr
inc
insl
sub
mov
mov
loop
mov
loope
xorl
mov
fisubl
push
pop
adc
mov
jecxz
ss
pop
das
inc
scas
fisubrl
pop
xchg
dec
mov
adc
push
jo
dec
cmpb
adc
addr16
jnp
lods
xorb
xchg
adc
icebp
das
lahf
add
dec
mov
sbb
push
mov
idivb
lock
jb
fwait
sti
xchg
add
shll
aas
imul
enter
xor
cmpsl
jmp
int
stc
jl
dec
push
sbb
and
test
mov
addr16
cmp
and
lock
cld
fcoms
adc
in
push
idivb
sub
pusha
jge
mov
repz
dec
mov
xchg
and
and
xlat
lds
bound
hlt
hlt
pop
pop
xchg
xchg
add
insb
cmc
mov
jmp
adc
and
dec
xlat
push
jge
mov
dec
sub
xchg
jmp
into
jb
pushf
fs
pop
movsb
and
nop
inc
dec
rcrl
out
fnstsw
test
mov
push
aaa
jo
adc
or
mov
mov
jecxz
jge
aad
inc
cmpsl
cmc
clc
je
pop
je
xchg
insb
bound
loop
xor
cmp
mov
fs
call
and
push
sarl
aaa
jne
and
add
into
aam
jle
and
push
add
stos
aad
pop
out
in
jle
sbb
sti
cmp
or
cld
test
mov
dec
mov
iret
add
pop
push
fstps
popa
and
mov
push
add
cmp
jno
jo
jne
cmpb
hlt
pusha
or
popf
cmpsl
pop
dec
out
cmovge
mov
cmp
je
xchg
jbe
cmc
push
in
ds
jbe
sub
lods
nop
mov
lcall
pop
sbb
xlat
rcl
lock
xor
and
mov
movsl
xor
sub
cmp
push
les
out
aas
cmp
push
loopne
inc
adc
adc
cmp
daa
loop
sub
loopne
cwtl
cltd
push
mov
push
aaa
sub
in
xchg
sbb
xor
and
xlat
push
mov
fucomip
iret
lahf
push
xorl
inc
adc
cltd
jl
hlt
clc
mov
lea
sbb
and
dec
cmp
and
cmpl
cmp
sti
mov
inc
lock
imul
cmp
loope
lds
lea
rcrb
inc
mov
stc
mov
fmuls
mov
or
xchg
cmp
cmp
inc
jge
mov
in
jbe
inc
xor
int
xchg
mov
cs
imul
xchg
test
xchg
and
adc
shll
dec
push
push
bswap
sub
gs
cld
mov
fildll
sbb
adc
inc
outsb
int3
sbb
sub
push
ds
mov
je
xor
les
icebp
icebp
push
cmp
or
shl
push
nop
lret
cwtl
sbbl
lcall
leave
and
stos
adc
dec
or
nop
fcmovbe
mov
jle
jecxz
int3
fsubrl
xor
mov
ss
pop
jle
mov
cmp
nopl
push
push
loopne
cld
xchg
jbe
lods
jns
jl
lock
fmul
push
mov
fwait
hlt
mov
movsl
mov
je
or
mov
lds
fadds
or
enter
sahf
cmp
in
lock
and
xor
sub
ljmp
xchg
repz
cwtl
inc
bound
sbb
out
sbb
push
xchg
outsl
push
push
shll
lret
sub
aad
lock
loopne
shl
adc
cs
sbb
repz
lock
fisubrl
cld
dec
cmp
dec
sarb
cld
lret
mov
bound
jl
adc
out
shlb
mov
dec
inc
cmpsl
pop
sub
push
adc
add
sbb
mov
pop
repz
leave
pop
cmp
push
cmp
pop
popa
add
mov
movswl
ret
adcl
aas
lds
loop
dec
aam
or
pop
out
cmc
aad
xchg
jae
icebp
jb
push
add
dec
sbb
xchg
push
mov
xor
ret
imul
popf
jno
shrl
pop
pushf
cmp
bound
out
lock
adc
or
std
mov
adc
dec
jle
xlat
push
nop
push
testb
add
push
adc
fcompl
jo
adc
dec
inc
icebp
or
or
flds
loopne
ret
retw
mov
xorb
or
bound
jnp
cli
lret
pusha
mov
lods
mov
xchg
incb
xchg
mov
call
cmp
and
ss
mov
sahf
pop
add
in
popf
inc
testb
jg
out
int
jbe
and
stc
jo
test
push
dec
stc
test
mov
pop
imul
cmpsl
das
mov
xchg
adc
ss
dec
mov
imulb
pop
xor
repnz
dec
mov
pop
nop
lret
lcall
dec
cltd
pusha
cli
mov
outsl
int3
jne
adc
mov
icebp
or
or
sbb
cmc
pop
mov
sub
pop
stos
mov
or
and
divl
imul
icebp
ss
push
scas
ljmp
pop
mov
push
sahf
sbb
sub
mov
mov
push
sub
scas
dec
mov
cmpsl
dec
stc
xor
insb
inc
push
or
sbb
push
xchg
lods
hlt
mov
or
out
jne
xchg
repz
ja
jo
cs
pop
push
and
jne
fwait
cmpsb
push
adc
dec
icebp
and
cwtl
inc
or
and
lods
inc
pop
fsts
or
sbb
nop
leave
adc
push
jbe
adc
pushf
stos
test
les
rorb
cmc
lahf
shl
mov
lock
jp
inc
sub
test
into
xchg
lods
mov
shrb
cmp
cmp
sarl
outsl
ds
sub
mov
cwtl
bound
lds
pop
xor
adc
xor
stos
jl
test
out
lea
xchg
inc
mov
xchg
dec
adcb
movsb
sbb
ret
ds
ret
ficoms
jne
insl
xchg
sub
ja
add
iret
or
sbb
sar
inc
mov
pop
mov
cltd
test
ja
inc
pop
iret
pop
jp
mov
pop
and
sub
pusha
fadd
repz
cmp
dec
push
inc
push
das
and
jno
xchg
mov
std
cltd
xor
imul
int
enter
mov
fadds
xchg
xchg
fcomi
fcomps
mov
jns
sub
xchg
jmp
das
sub
leave
add
xchg
call
add
mov
push
es
inc
push
pop
popa
jnp
out
or
call
sbb
add
mov
pop
xchg
inc
dec
insb
inc
insl
arpl
movb
xchg
lahf
call
sub
les
orps
cmpl
jb
inc
popa
fists
cltd
arpl
sbb
or
imul
inc
cltd
rolb
pop
aam
push
mov
jb
aas
aaa
js
jg
and
mov
push
sbb
dec
push
mov
sahf
inc
mov
stc
fsubrp
xlat
loope
orl
or
loope
aam
adc
aad
movsb
pop
and
test
push
popa
clc
fbld
das
adc
sub
in
stos
inc
insl
ds
mov
sbbl
adc
mov
aaa
xchg
cmp
pop
push
dec
int
fldcw
jmp
ja
dec
or
adc
add
out
jo
jo
sbb
cmp
jno
mov
das
push
jae
jge
jne
jl
adc
inc
daa
mov
pop
rcll
lret
mov
mov
fmuls
test
shlb
test
jg
jge
sbb
rcl
in
pop
jecxz
sti
ret
bound
fsubrs
in
adc
negb
mov
icebp
xor
mov
push
imul
push
pop
mov
cwtl
icebp
and
das
dec
setge
adc
mov
sub
cmp
jae
lret
mov
jmp
fists
mov
add
rorl
ret
sahf
xchg
sub
pop
inc
or
mov
aam
jmp
pop
sub
in
lret
pushf
pop
mov
mov
cmc
mov
ljmp
or
inc
rorb
and
movl
jl
xlat
jno
xchg
movsl
icebp
inc
sti
loopne
add
test
imull
pop
fcom
and
mov
loopne
clc
jns
xchg
inc
sub
icebp
clc
sahf
cmpsl
aaa
xchg
adc
cltd
repz
jb
test
push
xchg
mov
and
mov
repz
mov
add
fwait
rolb
test
inc
data16
iret
and
jne
and
cmp
adc
push
xchg
test
int3
add
sub
inc
add
lcall
imul
in
pop
sub
adc
sbb
sub
lret
jo
adc
lods
pop
lea
dec
pop
xor
sahf
andl
stos
shr
aas
mov
jmp
jne
mov
int3
iret
mov
iret
inc
ret
jbe
add
jae
jle
movsb
mov
pop
jb
cmp
inc
mov
fistl
sbb
cli
mov
in
cli
mov
xchg
ret
stc
add
jl
andl
syscall
inc
inc
cmp
and
daa
cs
insb
and
pop
sti
dec
cltd
ss
or
popf
movsb
lcall
rcr
push
test
lea
out
or
movsl
mov
inc
push
int
xor
ds
repnz
int
lds
icebp
push
mov
jo
jmp
mov
mov
mov
test
xchg
addr16
jg,pn
adc
in
and
lahf
movsl
or
rorl
adc
stos
clc
inc
fwait
inc
adc
push
lret
dec
xlat
jl
aam
fdiv
daa
fstpl
aad
mov
mov
sbb
sub
fwait
leave
loop
mov
jb
stos
enter
out
stc
ds
inc
mov
cmp
ljmp
test
daa
cmp
popa
sub
fisubrs
lret
rclb
es
popa
mov
inc
xchg
andb
test
into
int
sbb
push
cmc
hlt
adc
xchg
dec
add
sub
fcoml
test
push
xchg
add
xlat
sub
adc
and
shrl
hlt
sbb
mov
ds
loop
dec
loop
mov
jl
cmp
mov
inc
inc
in
test
adc
repz
mov
add
pop
test
cld
mov
fnstcw
jg
push
es
mov
leave
push
and
shl
sub
out
out
addr16
push
and
or
or
pop
pop
out
dec
xlat
insl
fidivl
gs
push
imul
or
roll
in
add
xchg
insb
sub
or
or
pop
in
outsb
push
test
bound
aaa
jno
pop
add
or
pop
xchg
bound
loope
sub
daa
popf
rorl
xchg
push
push
or
sbb
leave
loop
sbb
sbb
cs
push
mov
nop
icebp
imul
cld
fnstcw
dec
xchg
stos
loopne
popf
xchg
cli
aam
jmp
cwtl
xchg
inc
loop
mov
add
or
mov
and
outsl
mov
sbb
jae
dec
jmp
fbstp
lea
jns
xchg
adc
ja
add
nop
jo
cmc
repnz
shll
mov
fsubrl
das
stos
je
cmp
mov
shrl
fisttps
lcall
aaa
lret
inc
sti
sub
push
nop
arpl
sti
movsl
or
xchg
frstor
xor
mov
and
jl
xchg
mov
lock
sbb
cmp
inc
call
mov
push
je
add
pop
adc
mov
nop
mov
xor
out
fldlg2
test
adc
push
insb
fstpt
dec
mov
cmp
int3
jecxz
inc
sub
push
mov
push
lea
stos
adc
loop
jns
popf
popf
test
js
xchg
loope
in
test
xor
jecxz
push
cmp
fs
add
jb
leave
inc
inc
stc
pop
cmp
fdivs
mov
cmp
outsb
xor
push
mov
xchg
push
mov
jecxz
gs
sub
cmovo
or
jmp
cld
and
dec
cmp
cmpsl
out
inc
fwait
mov
mulb
sbb
or
hlt
inc
mov
xchg
cmpsl
jge
into
pop
jl
pop
mov
inc
push
xor
js
in
std
pop
or
aam
push
arpl
dec
pop
ret
imul
jecxz
sbb
jnp
pop
jno
imul
jge
lods
or
add
sub
inc
or
ja
jg
inc
sti
dec
xchg
and
mov
xchg
pushf
je
sbb
or
nop
subl
xchg
stc
jp
sub
jmp
scas
aam
push
stc
cld
xorl
jl
dec
in
sub
subb
arpl
lret
shrb
add
inc
cmpsb
adc
push
outsl
push
imul
xchg
dec
stos
inc
add
jg
stos
add
push
mov
hlt
mov
lds
push
test
stc
push
pop
inc
cmp
jge
ljmp
out
stos
jmp
add
or
clc
cltd
cmp
pop
scas
fdiv
xchg
js
adc
in
push
cmp
cld
mov
shrl
dec
push
fmul
lcall
bound
add
repnz
pop
add
rcll
pusha
repnz
jb
dec
aam
mov
aam
shl
adc
adcb
fidivs
mov
push
sub
imul
shrl
jge
aas
data16
in
mov
xchg
mov
jne
jmp
or
repz
cs
mov
xchg
pop
and
sti
gs
adc
xchg
test
or
lahf
cs
sahf
cld
outsl
inc
pop
fsubl
or
xchg
call
push
clc
ret
fisubl
pop
in
cs
mov
cmp
jg
fs
xor
jmp
push
cmp
test
jne
andl
sbbb
mov
jmp
or
test
hlt
jno
lds
sbb
mov
sub
fistpl
adc
and
mov
inc
call
mov
ret
sub
stos
stos
nop
popf
jbe
test
shrl
push
cmp
and
pop
in
je
popa
mov
push
mov
add
int
cmpsl
cmp
movsl
in
lea
shll
jno
and
mov
xchg
push
insl
ret
sub
mov
push
xchg
and
mov
xlat
stc
dec
mov
cmp
push
scas
int
test
sub
js
push
hlt
cmp
push
cltd
mov
fs
dec
fistpl
pop
pusha
outsl
jns
mov
gs
or
fcmovnbe
je
mov
dec
or
sub
xchg
repnz
sahf
push
shrb
push
imul
imul
xor
ret
push
lret
pop
cld
sbb
inc
repnz
dec
stc
push
xchg
out
out
shrb
repz
arpl
adc
enter
insl
lock
addl
out
adc
shrl
in
fildl
jp
stos
sub
int3
loope
jle
je
in
mov
mov
xor
cmpsb
inc
arpl
xchg
sub
push
mov
mov
addr16
sub
cmp
jge
std
push
cwtl
add
sbb
adc
jl
mov
xchg
jp
xchg
fidivrs
or
fidivl
xchg
lea
divb
dec
hlt
into
adc
jne
mov
jb
dec
cld
popf
ficomps
cld
test
mov
add
into
into
mov
fldenv
arpl
lahf
loope
sub
and
sbb
jle
icebp
sub
out
mov
inc
or
and
test
mov
lods
pop
mov
cmc
dec
cmp
xchg
sbb
lcall
cwtl
dec
inc
neg
inc
negb
arpl
popa
push
mov
loopne
dec
pop
mov
in
rolb
push
or
cmp
mov
in
mull
fwait
push
cmpsl
jg
sbb
mov
inc
mov
jmp
and
ds
iret
sahf
leave
shlb
js
lret
sbb
ljmp
sti
add
test
test
adc
stos
xchg
lret
movsl
sub
mov
loopne
out
rol
xchg
leave
imull
xor
subl
test
loopne
lock
mov
das
lea
add
ficoms
or
mov
pop
rcrb
sahf
aam
push
lret
aam
stos
cmpsb
iret
mov
jle
fstpl
xchg
pop
rclb
movl
sub
leave
dec
nop
mov
sbb
jbe
fs
out
lock
sbb
mov
ret
enter
hlt
lahf
sbb
pop
sbbb
out
add
lods
aad
or
xchg
cmp
pop
add
mov
xchg
jle
mov
movsl
push
jns
test
mov
jb
sahf
sub
lea
inc
out
push
sub
push
das
pop
cs
cli
cmpsl
das
cmp
insb
xlat
idivb
ficoms
loopne
jb
xchg
mov
or
test
pop
push
movsl
mov
mov
xorb
mov
addr16
sbb
mov
and
scas
repz
paddusb
mov
jno
fdivr
pop
dec
cs
adc
in
and
jmp
setl
rorl
adc
jle
nop
jl
pop
jge
dec
lea
jge
push
push
and
pop
inc
adc
rclb
sub
sahf
les
lods
pushl
popa
mov
mov
mov
mov
inc
xchg
jge
and
aas
sbb
xor
stc
or
xor
bound
dec
push
popa
xorl
xor
mov
das
idivb
mov
mov
or
xchg
lahf
ljmp
inc
mov
lcall
imul
out
shll
jo
sbb
popf
jae
cwtl
daa
les
and
sbb
mov
xchg
out
dec
js
popf
faddp
jbe
hlt
scas
ss
or
aaa
pop
jg
xor
cmpsl
inc
call
loopne
dec
mov
push
pushf
dec
rolb
xor
out
stc
mov
push
xor
cmpsl
xor
jmp
jl
push
mov
loope
mov
inc
lret
sub
stos
sbb
insb
inc
adcb
inc
add
fs
or
jne
push
add
sub
fisubs
xchg
rcrl
incb
cmp
sbb
mov
pop
cmp
or
movsl
je
xchg
cmp
out
insl
push
push
mov
rcl
jecxz
rcrb
jp
orl
andl
push
jl
cmp
sti
sbb
push
in
lret
stos
pop
jb
push
lods
sarl
loop
clc
ret
test
fcmovnbe
fucomi
mov
scas
stos
sub
mov
mov
add
ficompl
imul
mov
movsb
gs
sbb
out
lahf
fwait
and
push
bound
and
mov
inc
fsubrl
imul
push
prefetchw
fists
push
pushf
fstpl
jg
pushf
or
repz
adc
jl
popf
dec
mov
clc
call
out
ljmp
jmp
imul
jecxz
fneni(8087
rorl
push
loopne
xchg
fcmovnbe
mov
xor
adcl
and
inc
test
movsl
aad
addb
insl
les
lahf
shll
add
mov
scas
push
or
cmp
mov
xchg
adc
leave
jecxz
test
and
out
mov
push
sub
in
pop
js
or
stc
sbb
inc
stos
loope
popf
adc
inc
popa
xchg
out
cmc
int3
fnstenv
or
or
cmp
lods
jno
cmpl
rcrl
addl
clc
in
xor
push
mov
test
pop
mov
jno
push
cmp
inc
ret
popa
nop
adc
ss
adc
fdivl
loopne
xor
pop
xchg
cld
xor
xor
mov
hlt
xchg
cs
mulb
out
dec
pop
mov
ret
das
jae
or
sub
mov
cmp
gs
inc
in
inc
nop
sub
in
inc
rorl
mov
sub
fs
push
mov
iret
xchg
rorb
std
out
mov
jns
lret
mov
fisttpll
push
insl
dec
icebp
mov
cmpsl
fldl
pop
xchg
cmp
mov
push
push
push
into
je
mov
jle
das
inc
and
sbb
das
lods
cmp
cmp
outsl
mov
dec
inc
push
sahf
shl
ljmp
mov
lds
lods
nop
push
pop
and
xchg
push
and
inc
cmpsb
pop
arpl
out
fbstp
inc
aas
cmp
sbb
sahf
pop
jge
or
sub
cmp
jge
popf
imul
mov
add
xchg
nop
push
sub
ret
clc
mov
maxps
cmpsl
ret
outsb
pop
popa
adc
xor
js
fldenv
clc
push
out
dec
inc
ja
pop
pop
mov
pop
ret
scas
inc
xchg
ja
test
lods
jo
fcom
movb
stc
pop
pusha
adc
mov
lock
ror
push
jge
jp
pusha
in
sub
and
lods
into
xchg
pusha
mov
adc
mov
pop
int3
push
push
loop
xor
sub
pop
push
adc
scas
out
mov
nop
cs
cmp
pop
in
daa
into
add
repnz
lods
fdivrs
jmp
cmp
stc
xchg
pop
popa
dec
les
cmpsb
in
rclb
xlat
nop
lret
sti
ds
into
sub
mov
lcall
int3
or
sahf
jg
push
imul
jl
mov
call
les
mov
icebp
xor
js
js
mov
and
mov
ret
shlb
xor
bound
pop
xlat
outsl
test
adc
cmp
push
sub
ret
xor
lods
inc
dec
std
insl
in
sbbb
ret
cmpsb
stc
test
in
cmp
rcr
and
lea
aaa
dec
xor
sti
mov
or
dec
xchg
or
in
leave
mov
jmp
mov
int
addb
test
sub
int3
inc
imul
adc
push
dec
inc
call
sbb
mov
xorb
fistpl
sub
stos
ret
rorl
loop
dec
or
mov
test
lock
sub
jns
mov
mov
push
xchg
mov
mov
mov
mov
int3
inc
mov
mov
gs
pop
mov
jns
push
adc
in
or
jmp
scas
cmp
pushf
and
aam
pop
lcall
scas
loop
loopne
and
lret
out
aaa
adc
adc
mov
call
sbbl
cmp
data16
push
jnp
lahf
add
xor
add
mov
popa
sbb
js
pop
loopne
mov
push
imul
jmp
xchg
sbb
cli
or
pop
jb
cltd
dec
sbb
repz
loope
in
aaa
repz
inc
popf
jp
aas
sbb
aaa
icebp
test
stc
dec
xchg
xchg
ficoml
fisttps
aad
test
fwait
rcll
loop
lods
lea
hlt
aad
outsl
jp
clc
cmpsl
inc
xchg
jns
inc
sahf
or
jbe
dec
insl
in
mov
lods
aaa
aad
roll
add
cli
sub
outsb
inc
loop
vpavgb
lret
ljmp
fadds
fnsave
ss
cmp
sbb
inc
pop
pop
lcall
leave
inc
pop
jae
sahf
ss
jnp
fstpl
sub
stc
cmc
loop
aam
push
xor
inc
dec
adc
jge
icebp
jns
cmpb
xor
pop
ljmp
test
lds
mov
lods
mov
mov
inc
dec
bound
push
rorl
pop
push
aam
xchg
in
xchg
in
mov
adc
insb
push
cmp
ss
pushf
dec
repz
mov
outsl
es
pop
int
adc
adc
push
mov
rorl
lods
jmp
cmp
add
aaa
or
lock
mov
xchg
push
add
jmp
add
ret
loop
sbb
dec
aaa
sbb
mov
push
clc
mov
popf
push
push
dec
rorb
mov
mov
in
push
cmp
push
data16
cmp
fsts
movsl
data16
popa
adc
repz
mov
pop
jo
cltd
fildll
push
inc
xchg
xchg
xor
fldcw
xor
movsl
sub
push
or
sub
enter
mov
and
sub
rcrl
and
mov
jge
fs
jp
mov
testl
enter
sbb
fidivrl
outsb
dec
push
jmp
xchg
sub
fs
lods
stos
stos
xchg
cmp
movb
dec
inc
inc
or
icebp
jb
dec
popf
movsb
ret
test
mov
insb
mov
jmp
sub
adc
xchg
int3
cmp
sub
push
ret
clc
xchg
jns
mov
dec
pop
mov
mov
mov
outsb
pop
pop
and
inc
clc
and
xlat
std
pop
lcall
dec
cmp
mov
pop
prefetch
or
mov
imul
mov
jae
pop
jnp
sbb
sub
loop
or
add
loopne
adc
sbb
fdivs
fisubs
vmwrite
xchg
mov
xchg
lret
out
out
pop
xor
icebp
jo
add
or
sbb
iret
mov
mov
cmp
xchg
push
inc
mul
sbb
or
pusha
sbb
mov
sbb
push
repnz
cli
aam
adc
cmc
pop
popf
inc
pop
mov
xchg
mov
lret
cmp
int3
push
inc
pop
xor
icebp
stos
pop
jg
outsl
test
cmp
into
sbb
ret
mov
in
push
stc
mov
add
pop
dec
js
jp
inc
and
ja
xor
test
xchg
push
mov
push
mov
lret
pop
sub
das
xchg
add
scas
cs
ret
and
lea
and
mov
push
mov
xor
cmc
cmpl
fsubrl
xor
andb
sub
jle
shlb
sar
bound
rcrb
cmp
movsb
sbb
dec
and
scas
fbld
mov
mov
pop
and
inc
add
dec
add
mov
xchg
xchg
xchg
xor
aam
and
sub
popf
bt
inc
cmp
mov
mov
mov
outsl
aaa
test
out
arpl
in
movsb
sbb
int
add
xchg
cwtl
divb
mov
or
lahf
dec
mov
push
inc
mov
add
cmpb
xor
sub
inc
int3
jbe
int3
dec
add
inc
loope
shlb
sub
mov
enter
adc
add
imul
out
push
dec
lcall
mov
in
div
repz
add
fmull
cmc
or
fst
mov
in
xor
in
out
les
decl
dec
pop
jle
xchg
ror
ss
jge
or
push
adc
jno
xor
sahf
enterw
cmp
mov
insl
fists
inc
cmc
out
and
notl
lods
mov
loopne
test
mov
adc
unpcklps
mov
dec
lods
dec
fcoms
push
push
add
cmc
popf
out
int3
adc
mov
or
outsl
inc
adc
mov
das
push
pop
xor
xchg
test
add
or
je
lods
xor
cld
add
inc
or
int
sahf
enter
or
sub
add
inc
and
popf
and
jecxz
cwtl
mov
mov
dec
popf
cmp
call
lods
sbb
cwtl
pop
mov
xor
mov
insb
jo
dec
dec
lcall
fwait
inc
xchg
fadds
loopne
aad
push
popf
mov
dec
arpl
dec
test
scas
mov
sar
sbb
data16
nop
fnsave
adc
xlat
or
xor
jge
mov
xor
mov
loope
jg
lods
or
mov
and
and
mov
inc
cltd
fildll
sti
in
push
ret
dec
mov
and
and
aad
notb
mov
sub
dec
call
bound
stos
aad
leave
push
loop
shll
into
pop
xchg
das
mov
push
pop
cmp
sahf
sub
jno
clc
lcall
into
pop
stos
or
in
mov
push
cmp
push
push
dec
xchg
fmull
or
pushf
jmp
dec
push
adc
pop
inc
sahf
enter
in
jns
inc
jb
sub
mov
dec
fs
mov
push
cmpsb
cs
dec
dec
or
call
cmpsb
daa
push
push
jg
les
jecxz
or
pusha
cmp
xchg
fistpll
lret
mov
leave
int3
pop
and
or
pop
mov
sarb
pushl
push
lea
cld
cmpsl
and
cmp
insl
inc
shll
cmp
in
push
mov
xchg
push
xchg
icebp
ret
aam
dec
and
adc
in
xor
xor
call
test
push
mov
add
pop
jbe
hlt
dec
cli
xlat
xchg
ret
and
imul
and
xor
les
inc
sub
outsb
xor
sbb
lods
fcmove
ror
mov
sbb
aam
inc
dec
or
cld
adc
jns
push
push
shrb
in
adc
es
aam
rclb
shlb
or
dec
inc
add
out
pop
cmpsl
mov
mov
push
jl
ficoms
xchg
push
xlat
pop
mov
int3
mov
roll
adc
adc
pushf
lret
movsb
mov
mov
shlb
lahf
jns
mov
xor
std
and
inc
call
adc
push
jge
daa
push
mov
decl
stos
les
enter
rcrl
cmpsb
repz
add
jnp
mov
iret
sub
hlt
mov
and
cmp
std
push
sahf
sub
push
stos
aam
pop
sbb
pop
dec
and
adc
out
leave
inc
inc
fidivrs
mov
lcall
fstps
out
inc
add
mov
push
mov
ds
jecxz
in
ficoms
aas
popf
mov
mov
jecxz
inc
push
pop
or
lock
add
repz
nop
sar
dec
iret
mov
out
push
nop
jp
and
lret
mov
sarl
lods
ret
ja
outsl
inc
out
inc
lods
xor
mov
inc
enter
inc
loope
ljmp
pushl
fcmovnb
and
push
scas
or
xchg
push
ret
xchg
sub
xor
popa
adc
cmp
xor
test
sbb
sti
ret
dec
sahf
xor
jno
dec
and
std
out
shl
mov
cmp
cmp
push
sbb
jp
daa
xchg
jmp
adc
jb
cmp
adc
int
push
arpl
lcall
sbb
xchg
mov
jle
inc
insb
gs
mov
lcall
ds
xor
mov
imul
stc
insb
cltd
adc
push
faddl
ja
les
mov
popf
int
inc
int
outsl
mov
rcrl
lcall
lds
loopne
js
pushf
sbb
repnz
push
imul
bnd
addr16
lea
mov
or
xor
jle
scas
mov
call
pop
ja
pop
out
dec
push
mov
dec
ficoml
daa
mov
enter
out
fcmovb
repnz
rorl
push
shll
xchg
mov
dec
push
dec
or
or
mov
dec
scas
cmp
jp
test
les
shrb
daa
ljmp
out
xlat
clc
insb
dec
cmc
jne
sub
push
lods
loopne
dec
dec
negl
incl
fidivrs
in
lahf
jne
mov
mov
mov
in
push
sub
ss
push
fwait
push
xchg
fildl
enter
mov
xor
shr
pusha
inc
out
call
rcl
orb
ret
lock
ljmp
adc
repnz
dec
jno
pop
imulb
push
dec
insl
lret
cld
lods
aaa
lahf
pop
push
push
popa
pop
pop
hlt
ficoml
mov
ljmp
xor
cmp
sub
popl
sub
enter
mov
loope
sub
mov
push
mov
mov
pop
sbb
jns
push
ret
cmp
fistps
mov
inc
and
fdivs
add
ret
leave
mov
jnp
dec
mov
jmp
outsb
ret
push
mov
adc
pop
pop
and
xchg
and
daa
data16
pop
xchg
into
je
sub
in
jb
in
enter
dec
inc
rcr
data16
fs
pop
ret
hlt
cmp
and
out
cmp
push
adc
addr16
cmp
add
sbb
popf
add
add
aam
js
lods
mov
icebp
add
ret
cmp
js
sahf
fnstenv
and
dec
les
gs
das
imul
mov
push
and
dec
stos
jae
stos
dec
cs
ror
xchg
add
pop
iret
ds
call
sahf
std
mov
cli
test
sub
push
sahf
fisttpll
std
and
pop
push
js
int
push
aam
adc
repz
int3
xor
aaa
loope
outsl
push
test
popa
jbe
out
inc
pop
movsb
aas
fstpl
push
stos
rcll
sub
fdivr
sbb
jnp
nop
mov
jge
aad
arpl
mov
mov
lret
or
lods
sub
insb
leave
xchg
pushl
ljmp
fisttps
cltd
stos
or
push
scas
xor
in
fsubrl
pop
test
lock
mov
testl
adc
fldcw
mov
pop
in
jnp
or
loop
sbb
divb
mov
test
cmpb
stc
mov
pop
adc
pop
jp
in
jb
inc
fcompl
push
dec
cs
dec
cmp
push
scas
jge,pt
loope
or
cltd
data16
push
xchg
jb
mov
test
enter
in
fidivrl
mov
xor
mov
pop
jle
cld
stos
or
out
and
popf
rorl
icebp
cmpb
adc
gs
inc
jns
lret
rcrb
mov
jle
jo
inc
lea
jb
jmp
jo
mov
cs
lret
jmp
std
push
inc
mov
jp
add
mov
sub
xchg
mov
out
cmp
xchg
xchg
les
mov
in
loopne
pop
enter
lret
mov
ret
mov
inc
inc
test
stos
xchg
out
or
sbb
mov
sub
add
push
aaa
mov
cli
pop
and
movsl
pop
add
push
ret
int
sar
dec
pop
inc
sub
stos
xor
js
or
ljmp
xchg
push
int
mov
fldl
mov
jb
sbb
sbb
jmp
sbb
cmpsb
ret
jmp
jle
push
cli
or
inc
push
fisubl
stc
fldt
push
push
jmp
stos
clc
mov
add
icebp
dec
mov
aad
sub
xor
adc
or
pop
jne
insb
arpl
icebp
lods
pop
sti
imull
repz
pop
xor
dec
pop
int3
cmpsb
enter
push
cmp
adc
inc
call
sub
fstpt
repnz
aad
addr16
stos
scas
inc
data16
shll
lahf
sub
jo
inc
inc
es
js
test
inc
xchg
fsubr
gs
and
test
pop
mov
pop
lret
stc
push
and
mov
repnz
push
jbe
or
fcomip
icebp
daa
nop
dec
movsb
call
sub
test
test
inc
adcb
jb
into
inc
lret
mov
adc
add
jns
sub
iret
mov
xor
ret
add
imul
adc
jle
dec
cmp
out
xor
cltd
mov
inc
add
push
flds
pop
mov
mov
les
bound
sbb
cmc
pop
xor
mov
cwtl
push
pop
and
mov
push
pop
movsl
xchg
jl
push
adc
push
jbe
in
mov
pusha
adc
sbb
cwtl
and
xchg
xchg
bound
insb
mov
dec
jbe
testb
mov
push
mov
imul
in
in
mov
jnp
in
pop
cs
mov
push
cmp
inc
ljmp
dec
push
xchg
mull
mov
aaa
mov
and
test
jmp
jle
arpl
icebp
sbbl
lea
cmp
cld
adc
pop
js
fs
scas
clc
mov
xchg
test
cltd
jecxz
insl
cmp
or
or
lret
cld
movsb
push
divb
adcl
out
mov
adc
xchg
dec
or
add
mov
or
inc
sub
dec
imul
rorl
xor
cmovbe
jle
push
sub
fcmovne
cltd
xor
fildl
mov
out
mov
outsb
xor
inc
divb
fcompl
push
addr16
cmpsb
add
cmp
incl
sarb
sub
add
cmp
mov
push
lods
in
cmp
or
pop
mov
pop
lcall
daa
push
icebp
sub
jae
cmp
push
mov
ljmp
loop
outsl
ss
adc
fstpt
inc
pop
xchg
inc
mov
testl
pop
cwtl
and
xchg
leave
pop
roll
xchg
mov
das
push
shl
mov
out
insb
les
arpl
test
sub
sbb
sahf
cmp
or
repnz
mov
jge
sbb
add
aaa
movsl
dec
push
dec
fisttpll
stos
test
add
aam
sbb
enter
dec
sbbb
pop
sbbl
xchg
cmp
iret
int
jns
push
mov
cli
stos
add
call
cwtl
imul
xchg
adc
xchg
sub
adc
mov
mov
ficompl
cli
xor
jle
out
movsb
bound
push
push
pushf
mov
mov
xchg
sbb
xchg
insl
ljmp
shlb
pop
dec
aam
inc
pop
xor
xchg
rorl
add
fwait
push
push
in
cmp
push
xchg
imull
lods
jb
in
das
fmul
inc
sahf
sarl
xor
xchg
mov
repnz
or
testb
fsubl
aam
jne
sbb
sub
push
and
adcl
or
push
jo
mov
jecxz
js
adc
or
xor
test
lcall
xor
and
test
pop
idivl
movsb
loope
arpl
ret
insl
mov
out
mov
je
dec
ja
or
outsl
sbb
fdivr
aas
sbb
stc
inc
and
dec
sbb
cmpsl
ds
rcrb
insb
ja
js
inc
fs
dec
jp
or
push
pop
or
call
dec
ja
enter
xchg
out
add
je
xchg
pop
fdivs
mov
pop
and
mov
roll
mov
imul
adc
xchg
sbb
add
dec
mov
sub
sbb
repz
sub
and
and
add
inc
inc
test
dec
ljmp
fisttpl
imul
dec
dec
lahf
jl
xlat
andb
adcb
xor
es
ja
outsb
cmp
cwtl
mov
inc
xchg
jp
in
mov
fs
cld
jbe
ja
and
outsb
repz
repnz
adc
orl
pusha
repnz
inc
fs
mov
mov
lds
out
lods
in
sub
and
mov
ret
icebp
cwtl
add
mov
or
cmp
fwait
inc
push
repz
push
jae
test
loopne
mov
adc
push
repz
inc
stos
dec
and
xor
xchg
adc
ljmp
movsb
enter
ja
dec
mov
bound
xor
push
gs
sahf
in
dec
pusha
pop
leave
ja
and
aam
and
jnp
mov
pop
and
xor
lods
pop
ss
pop
mov
or
sbb
sahf
hlt
pusha
cmpsb
cwtl
andb
sahf
sbb
adc
xor
popf
xchg
pop
mov
data16
mov
xor
sub
mov
in
push
jns
sahf
xor
adc
xchg
das
mov
sbb
jbe
cmp
adc
sbb
fcoml
cld
in
sti
call
cwtl
mov
int3
adc
mov
nopl
dec
add
aaa
ret
cltd
mov
xchg
je
movsb
cmp
scas
sub
or
dec
jns
fldl
sbb
jmp
xchg
outsl
jmp
adc
jmp
xchg
in
sub
pop
and
adc
jno
dec
shl
mov
iret
arpl
or
ret
mov
test
fildl
xor
add
jp
mov
gs
mov
inc
ss
dec
hlt
stos
xor
ret
std
fidivl
adc
loope
mov
push
leave
mov
jge
push
mov
cli
lods
push
jb
ss
pop
add
cli
call
mov
les
dec
xor
jbe
jae
cwtl
popf
jecxz
daa
pop
lods
mov
cli
push
ror
out
sub
out
jmp
adc
cmpsb
popa
push
mov
fs
cmpsb
pop
and
bound
xchg
and
jae
popa
adc
xchg
xor
lret
pop
pop
jle
ficoml
outsl
add
mov
mov
dec
cli
cltd
pop
xor
push
icebp
ret
mov
cltd
mov
stc
aam
jg
add
sub
xchg
sbb
mov
pop
xor
mov
xchg
test
test
lock
mov
fneni(8087
adc
mov
data16
ret
lods
pop
popa
iret
paddd
test
push
push
jecxz
push
and
mov
setns
xor
sbb
enter
jmp
cltd
sbb
jo
inc
jge
cmp
sahf
ror
add
imul
inc
call
outsb
out
adc
xor
cmpsl
sbb
mov
ljmp
add
pushf
aas
sbb
mov
mov
jecxz
insl
imul
lret
jle
adc
mov
sbb
lret
outsb
in
imul
in
es
inc
inc
inc
mov
jge
push
out
adc
aaa
mov
xchg
sbb
jne
loop
xlat
arpl
jbe
adc
sti
daa
neg
fcomp
inc
imul
mov
add
xor
movsb
xor
rcll
in
sub
xchg
sbb
push
int3
std
mov
push
adc
mov
out
mov
xchg
lds
repnz
and
daa
lret
fwait
xor
mov
popa
pusha
ret
call
and
mov
cld
ret
or
push
push
sub
and
push
and
es
jno
xchg
inc
arpl
mov
in
cli
cwtl
loope
idivb
fs
sbb
pop
adc
sbb
mov
xor
addr16
pop
inc
aas
cmpsl
mov
jae
mov
pop
jge
push
sbb
xor
jno
cli
xchg
cmp
cs
loopne
mov
mov
cs
or
mov
jae
cmp
leave
xor
add
xchg
or
into
mov
repnz
cmp
lahf
idivb
inc
cmp
lds
inc
iret
xchg
add
int3
mov
popf
je
cmp
mov
jns
sbb
mov
fbstp
cmpsb
or
inc
arpl
dec
pusha
cmc
push
enter
out
in
push
icebp
or
shl
and
xchg
rcrb
pop
mov
sub
andb
std
arpl
sbb
lahf
subb
xor
cmpl
mov
filds
sbb
iret
jle
rorb
push
loope
out
jp
les
xchg
mov
jp
stos
sub
and
cmp
test
test
sbb
daa
test
ljmp
ljmp
dec
or
cmp
in
cld
add
std
ret
in
arpl
dec
rol
scas
int
xchg
jle
cli
outsl
shrl
and
pop
icebp
sti
rcr
xchg
imul
jae
mov
jmp
imul
sbbl
add
adc
divl
xor
popa
add
mov
leave
es
sbb
and
mov
xchg
mov
pop
inc
or
fcmovbe
xorl
in
cmp
push
shr
in
mov
sbb
add
scas
pop
inc
mov
adc
mov
shll
push
popf
xor
int
xchg
pop
test
dec
xor
jnp
out
cli
xchg
pop
mov
adc
mov
repnz
movsb
flds
jmp
sub
inc
push
test
das
cmp
adc
xor
ret
mov
push
and
mov
mov
lcall
jnp
addb
cmpsb
adc
add
dec
jg
xor
daa
in
mov
jle
xchg
int3
cwtl
test
xor
mov
push
test
cwtl
xchg
fidivl
sub
repnz
cmp
adc
or
hlt
ret
pushf
hlt
push
mov
idivb
sbb
mov
outsl
push
mov
xchg
in
shrb
push
and
mov
sti
icebp
aam
xor
loopne
roll
push
and
in
push
data16
js
fmuls
sbb
dec
push
ljmp
gs
jns
add
jmp
mov
rclb
pop
dec
jmp
cmp
adc
push
outsb
jne
cmpsb
stos
or
lods
pusha
cs
out
shlb
ficompl
and
jecxz
popf
jo
sbb
mov
fs
cmp
ja
jno
fwait
sub
mov
dec
push
lcall
adc
xor
add
movsl
cwtl
mov
dec
lea
cmp
xchg
das
push
lahf
fldcw
or
ds
lock
mov
mov
jp
mov
test
fnstcw
test
shll
mov
or
jge
lret
pop
scas
ja
push
bound
push
adc
jno
push
jle
mov
mov
sti
pop
or
mov
jnp
sub
cmpsl
pop
mov
je
gs
gs
daa
notb
iret
mov
iret
repz
into
inc
add
pop
loopne
sub
cmp
inc
mov
es
stos
subl
ret
test
lock
in
fdivl
adc
or
push
clc
sbbl
rcrb
sub
fiaddl
xor
cmp
fdivrs
and
test
xor
aaa
pop
sbb
outsl
stc
bound
pusha
ret
or
mov
arpl
or
mov
aad
inc
popa
out
xorb
sti
out
pop
xchg
cli
ret
dec
pop
lahf
jle
loope
sub
das
adc
xchg
js
ret
in
jp
js
and
fnsave
notl
lea
dec
outsb
cmp
sbb
stos
or
mov
cmc
push
xor
popf
xor
mov
or
xchg
loope
and
stos
sbb
inc
in
dec
mov
loopne
jo
mov
jg
ss
cmp
sub
imul
or
cmp
je
pop
cmovp
shll
mov
jbe
sbb
leave
push
push
roll
sub
lea
mov
push
pop
mov
mov
lock
jbe
mov
loop
adc
jnp
cmp
or
or
sbb
or
test
rcl
push
dec
push
mov
decl
and
pusha
push
cmp
cmc
pop
jp
test
jg
add
into
push
cwtl
inc
xor
jb
cmpsl
lds
xor
ljmp
dec
in
insl
jae
ret
pushf
sub
push
mov
add
xchg
out
mov
or
jle
fucomip
inc
mov
add
cmp
pop
shrl
jo
cltd
fdivr
addr16
sbb
push
test
ja
lock
xchg
push
jae
jnp
jp
jnp
and
pushf
pop
xor
jno
bound
cmp
out
jne
movsb
inc
dec
ficoml
mov
pop
xor
mov
stc
pop
test
outsb
xor
push
scas
popf
insl
in
mov
jns
movsb
loopne
cld
adc
sbb
mov
jecxz
push
leave
rol
pusha
pop
rol
insl
jmp
inc
pushf
frstor
leave
cli
xchg
cld
mov
lahf
gs
add
pop
mulb
sbb
daa
sub
pop
jbe
cli
adc
and
loop
loop
rcl
jne
and
pop
push
scas
adc
add
into
movsb
aam
fnstcw
sub
mov
jge
adc
lods
daa
and
sbb
pusha
xor
xor
xor
rolb
in
arpl
cli
loop
and
push
cs
dec
in
sti
jg
xlat
stos
repnz
jmp
inc
popa
stos
xor
test
cmp
adc
cmpsl
nop
mov
cmp
popa
rcll
test
jge
sub
sbb
dec
xchg
iret
in
lods
adc
scas
xor
pop
loop
mov
adc
dec
add
mov
incl
iret
loopne
fs
or
test
and
out
sub
rcrb
lds
clc
gs
pop
push
or
lcall
xchg
dec
sub
pop
jg
xor
push
pop
addl
adc
test
rcr
and
cld
les
mov
cld
addr16
cwtd
rcrl
sbb
hlt
arpl
sbb
sbb
mov
dec
call
lods
add
pop
jns
in
dec
pop
xor
xchg
movsl
rolb
sbb
mov
jl
push
pop
inc
or
push
sub
mov
and
mov
xchg
cmp
dec
iret
movl
movsl
mov
sbb
and
sarl
fistpll
fwait
mov
cld
cmp
jnp
add
jne
shrl
pusha
fdivrl
je
jae
and
cmp
add
cmp
mov
mov
jns
mov
mov
sbb
rol
out
cmc
lcall
adc
sbb
mov
jns
xchg
cld
outsb
roll
sub
sarb
jl
jb
pop
stos
push
adc
mov
and
ss
je
jl
aad
push
and
dec
push
jp
xor
pop
cmp
adc
jp
mov
ljmp
sub
mov
mov
iret
insb
decl
mov
add
arpl
in
mov
adc
es
or
mov
or
out
adc
das
add
push
scas
in
fld
mov
xor
and
mov
pop
sahf
push
aam
popf
sub
arpl
mov
pusha
stc
mul
xchg
and
pusha
cmpsb
mov
arpl
clc
pushf
daa
in
movsb
das
test
push
incb
xor
icebp
jmp
movsb
shl
jl
addl
lea
cmpsl
mov
jle
flds
jmp
ljmp
jl
fs
mov
push
arpl
lock
scas
sub
test
mov
test
divb
jmp
adc
cs
and
dec
xor
jns
sub
adc
out
cli
inc
mov
inc
xchg
xor
fs
mov
stc
popf
dec
push
pop
daa
dec
cmp
push
clc
xchg
or
or
pop
pop
xchg
popa
loop
scas
cmp
or
jns
inc
aad
sub
repz
shll
mov
add
flds
rorl
es
cmpsl
cmp
lahf
daa
mov
or
aam
inc
jge
dec
inc
and
std
cltd
inc
mov
insb
ficoml
and
mov
sbb
push
add
sub
pop
popf
cmp
pop
daa
das
into
lret
cmp
test
pop
jbe
out
sahf
mov
mov
rorb
outsb
dec
sub
hlt
sbb
xchg
adc
fcomp
sahf
pop
daa
cmp
mov
and
je
sub
adc
lahf
jbe
mov
out
sti
lahf
mov
push
and
pop
add
xorl
ret
nop
lds
jno
mov
insl
iret
mov
fbstp
mov
sub
fmul
sbb
jl
adc
faddl
mov
xchg
push
or
sbb
test
das
push
cltd
cmc
add
or
pop
sub
sarl
insb
mov
out
mov
repz
out
lods
push
adc
xchg
mov
in
adc
insl
imul
jg
cli
out
push
or
adc
adc
xchg
repnz
add
mov
push
fildl
xlat
insb
cmp
dec
push
mov
push
fsubrp
scas
push
xor
sub
call
inc
mov
ss
fwait
mov
push
adc
test
ret
in
pop
cmpsl
decl
mov
mov
rorb
mov
dec
sbb
xor
add
and
aaa
cmp
pushf
lcall
test
inc
adc
add
jae
in
jnp
adc
dec
dec
sbb
pop
cmpsl
sub
fwait
adc
xor
mov
sub
cmp
cmp
scas
sub
filds
out
movsl
pop
and
add
mov
clc
fisttpll
or
shlb
and
cli
jl
imul
ret
push
xlat
jno
jo
push
dec
popf
lcall
xchg
dec
and
adcl
repnz
nop
pop
repz
push
enter
test
pop
iret
add
and
shll
clc
in
out
addl
sub
mov
mov
in
iret
test
in
imul
jnp
lds
inc
mov
int3
xchg
idiv
sbb
movl
jb
add
inc
jp
dec
mov
xchg
dec
mov
shl
lcall
dec
pop
mov
add
orl
pavgb
imul
ret
xor
gs
movl
or
stos
out
and
mov
push
aas
jmp
enter
mov
cmp
jmp
outsl
sti
xchg
leave
fwait
jns
test
jae
inc
and
mov
push
in
cmp
mov
test
inc
ss
inc
jecxz
popa
xlat
lods
and
popf
fs
adc
pop
xchg
pop
mov
fsubrl
outsl
stos
mov
or
shr
or
dec
add
imul
sarl
pop
lea
push
lods
or
imul
roll
sub
cmp
and
daa
andb
pushf
cmp
call
adc
movsb
inc
ljmp
out
fcomps
xchg
push
in
mov
lods
and
pop
inc
and
push
test
jp
push
imul
ret
push
call
xlat
sbb
test
xor
rclb
cli
pusha
sbb
cmp
sub
sub
shlb
iret
leave
xchg
mov
cmpsb
out
mov
xor
adc
in
sub
cmp
insl
mov
dec
pop
outsb
xchg
hlt
xor
in
sub
orb
jecxz
jle
jecxz
mov
adc
fadds
inc
out
jnp
std
mov
add
pop
scas
push
cmpsl
mov
hlt
loop
sbb
and
test
cmp
mov
fisubs
lahf
adc
ret
rcll
or
in
outsl
cmp
add
cmpb
pop
dec
hlt
mov
and
mov
arpl
icebp
mov
fmull
jne
cmp
jle
push
ret
into
lods
cli
imul
das
ret
push
ficoms
push
popf
ds
pop
cwtl
add
ret
add
sub
dec
movsb
mov
inc
cmp
fcmovnu
cmpsb
in
das
adc
mov
mov
cmp
jo
shl
push
pop
inc
or
outsl
dec
popa
jnp
push
jnp
and
cltd
in
pushf
jae
push
inc
imul
popf
insb
loope
insb
adc
xchg
lret
mov
mov
clc
ja
lods
pushf
mov
ror
into
enter
mov
xor
ljmp
mov
outsl
mov
shlb
loopne
cmc
push
dec
push
lods
ret
das
jp
cmpsb
and
xchg
fwait
xchg
adc
or
sarl
xchg
into
jns
or
mov
in
in
push
addr16
jb
lds
add
dec
jb
jnp
sub
nop
addr16
in
lret
mov
movsl
mov
sub
aas
rorl
lods
cli
daa
mov
dec
shlb
cmp
inc
outsl
inc
xor
cli
xchg
lock
or
xchg
and
fnstenv
and
mov
sbb
dec
loopne
xorl
idivb
dec
pop
idivb
xlat
xchg
adc
push
and
subl
xchg
negl
adc
in
fldt
loop
mov
aaa
adcl
mov
incb
xor
add
hlt
movsb
lahf
daa
and
ret
push
sbb
xchg
sti
decb
inc
sbb
iret
mov
call
add
lret
inc
xchg
xor
or
cmp
sbb
pop
outsl
pop
xor
loope
push
jp
imul
aaa
cmp
pop
mov
andb
in
je
push
ret
mov
and
gs
aas
xchg
gs
test
cmp
das
dec
leave
cmpsl
add
add
out
into
mov
repnz
sbb
lock
xchg
addl
jge
popa
pop
andl
lcall
xor
scas
mov
sti
iret
div
lret
cmp
ds
dec
dec
mov
sahf
mov
stos
mov
or
dec
dec
lods
test
xor
xor
xlat
xchg
mov
lds
cmpsb
fs
or
push
pop
outsl
and
inc
cmp
push
jnp
push
or
xor
sbb
xchg
pop
pushf
ljmp
xor
daa
shll
loop
movsb
mov
push
mov
ror
ret
lock
jle
fs
push
lret
mov
gs
cmp
repz
mov
jbe
and
or
pushf
lods
mov
int
sbb
cmp
das
shlb
and
movb
xorb
int
out
inc
jae
sub
and
in
test
mov
mov
mov
mov
jmp
mov
push
mov
repz
push
fstps
in
sti
xor
es
testb
push
mov
push
xchg
rol
jns
push
mov
mov
or
push
ds
or
and
ret
or
aaa
dec
push
add
mov
mov
fdivs
andl
add
and
add
mov
add
pop
xchg
pop
inc
aam
xchg
popl
insb
outsl
dec
dec
xlat
adc
nop
jns
or
pushf
mov
mov
adc
das
add
xor
icebp
mov
scas
pushl
xchg
jl
movsl
mov
or
gs
mov
push
in
jnp
inc
daa
stos
xor
out
pushl
push
cmp
icebp
cmp
rcl
xchg
call
inc
dec
lods
out
stc
push
and
add
mov
and
xor
jno
jp
dec
movd
into
mov
dec
mov
sub
repnz
inc
sub
jge
pushf
inc
out
into
aas
and
ret
insb
divl
mov
pop
push
add
inc
loope
lret
movb
cltd
add
data16
clc
test
jle
mov
and
mov
jle
scas
cld
adc
int3
adc
pminub
sbb
int
mov
popf
aad
dec
imul
xchg
loope
div
mov
mov
mov
mov
sbb
or
xor
lret
or
aas
scas
jecxz
add
or
jp
xchg
pusha
dec
push
fsubrl
loop
lahf
adc
mov
in
bound
mov
test
stc
fdivl
push
js
in
mov
popl
xor
es
imul
test
dec
sub
pop
addr16
iret
mov
jle
movsb
adc
mov
adc
jmp
fcompl
cmp
adc
lret
lods
mov
inc
add
stos
add
scas
adc
xor
jb
fwait
movsl
pop
or
mov
in
pop
fs
mov
imul
out
into
add
push
std
lds
lea
js
add
xor
das
dec
sub
arpl
in
fisttpll
mov
cmpsl
sub
enter
lock
ja
sbb
dec
mov
stos
in
mov
pop
mov
out
jbe
out
adc
pop
mov
sub
push
aas
pop
jl
push
in
mov
out
pop
and
hlt
shr
and
jno
jp
addb
dec
inc
mov
lea
push
cwtl
out
insl
std
popa
popa
pop
push
int3
imul
aad
xor
outsl
sbb
inc
cmp
cmp
mov
sub
push
sarb
popa
xchg
or
mov
psubd
int
mov
incb
or
push
and
sbb
sar
inc
daa
inc
push
xchg
shll
mov
loopne
fisttpl
outsl
and
jne
add
inc
xor
jg
inc
cmc
mov
mov
std
add
data16
cld
out
ret
pop
xlat
push
jge
pushl
fwait
sub
and
push
iret
or
dec
cmp
inc
fdiv
ret
mov
mov
cmp
int
and
arpl
lahf
lret
cmp
xor
icebp
hlt
testl
dec
movsb
or
xchg
xor
mov
or
push
push
or
popf
lret
out
dec
inc
imulb
xchg
cmpl
shrb
js
push
lods
fadds
inc
fst
rclb
mov
stos
cmp
jg
jp
cmp
cltd
fmull
in
mov
add
push
sbb
out
cmpsb
popa
cmp
cmpsl
out
jns
and
mov
sbb
cmpsl
add
xchg
clc
lods
ret
xchg
adc
enter
jnp
add
adc
in
lcall
lds
int3
xchg
clc
push
and
sarl
jmp
or
mov
mov
es
mov
sbb
adc
aam
cmp
int
mov
dec
add
mov
push
xchg
stc
repz
mov
push
or
into
dec
add
and
xor
cmp
add
call
decl
jbe
pop
fstps
sarl
jbe
ret
push
sbb
es
mov
out
xchg
movl
xor
push
jge
inc
arpl
int3
inc
mov
popa
aam
in
sub
lret
ljmpw
jmp
and
adc
callw
bnd
imul
add
push
cmpsb
imull
aam
mov
jns
dec
addb
inc
sti
popa
pop
push
stos
fnstsw
sbbl
inc
or
xor
push
cmp
hlt
loop
inc
shlb
jl
arpl
adc
pop
pop
jo
shrb
stc
mov
loopne
push
jmp
lds
add
pop
cmp
mov
out
xchg
call
xchg
aas
testb
cmpsb
cltd
mov
sbb
mulb
mov
jne
pop
sbb
inc
xchg
andl
lock
ss
mov
addb
jb
adc
daa
enter
sahf
sub
fs
repnz
outsl
test
cmpb
lcall
inc
inc
arpl
ret
outsl
fisttps
movsl
xchg
pop
jge
dec
cwtl
adc
es
mov
mov
insl
xorl
mov
or
jno
int
push
ret
xchg
aam
sbb
dec
xchg
cmp
adc
iret
push
das
mov
lret
push
adc
cmp
push
push
dec
sbb
mov
mov
xor
mov
mov
es
repz
fcoml
lcall
fwait
gs
popa
adc
dec
jb
lods
ss
mov
mov
dec
dec
cs
sbb
xor
xchg
call
pop
add
test
push
adc
call
test
and
bound
jle
mov
cmpsl
cltd
les
std
cli
js
push
popl
repz
sub
jo
pop
cmp
pop
adc
sub
aas
ja
outsl
ja
xor
mov
jecxz
push
ret
subb
mov
fsubrs
sbb
cs
mov
jne
jbe
xorl
adc
jle
dec
jge
xchg
stc
movsl
push
scas
addr16
in
les
movsb
imul
dec
xchg
jg
movsb
andl
dec
out
and
and
inc
dec
cmp
and
fwait
int3
push
and
loopne
and
out
jge
adc
dec
loop
push
mov
xchg
bound
std
les
jg
dec
lret
dec
cld
xlat
xchg
mov
adc
ror
jp
cli
mov
add
popa
fldl
mov
movsb
push
push
mov
imul
inc
push
xchg
sbb
test
sub
fdivrl
mov
rcl
xor
repnz
icebp
adc
nop
divb
mov
inc
ret
les
ret
jmp
arpl
out
enter
mov
push
xor
popa
fwait
sahf
dec
in
pop
in
push
sti
mov
cmpb
outsl
pop
dec
jae
mov
mov
adc
adc
inc
and
insb
cmp
lcall
mov
xchg
bound
je
out
icebp
sbbb
popf
jne
add
mov
sbb
lcall
stos
ret
mov
fisubl
jno
sarb
mov
xor
sbb
out
imul
repz
jp
pop
dec
xchg
adc
sahf
loopne
ret
or
arpl
push
xchg
xor
jp
dec
clc
out
pop
les
js
xor
iret
idivl
inc
sbb
add
and
das
add
cmp
repnz
xor
pop
mov
sub
mov
push
add
xchg
and
inc
or
out
pushf
pop
mov
jne
flds
adc
into
xor
or
or
outsb
add
pop
sbb
xor
test
lea
lods
jo
sbb
addb
inc
out
fsts
orl
adc
and
fsubrp
pop
imul
orl
int
pop
fcomps
mov
add
xchg
dec
adc
jnp
push
inc
nop
add
out
jp
lcall
push
fsubl
lds
gs
sahf
push
adc
jecxz
push
inc
and
pop
jno
adc
jns
pop
shrb
cmp
ss
repz
int3
lret
lods
fiaddl
les
out
mov
ds
adc
sub
sbb
mov
pop
jg
out
push
sti
imul
dec
dec
mov
xchg
stos
mov
jb
lods
mov
aaa
cmpsb
adc
mov
shll
jns
cmp
jo
lahf
sbb
adc
or
adc
stc
dec
jp
inc
mov
xchg
inc
call
rcll
cmp
push
mov
xchg
push
push
pop
jmp
loopne
push
mov
sbb
scas
notl
mov
xor
xchg
scas
xor
es
pop
imul
fs
mov
lret
idivb
mov
addr16
lock
faddp
mov
faddl
sahf
mov
lea
jmp
push
insl
jecxz
nop
fldl
mov
les
repnz
mov
cmc
bound
sub
imul
push
sub
pushf
outsl
mov
call
mov
pushf
fs
cmp
mov
pop
sbb
out
fwait
lods
and
dec
mov
pushf
xchg
paddsb
add
ja
test
adc
gs
iret
lret
adc
test
adc
fbld
push
dec
jo
sti
repz
mov
mov
push
and
ds
pop
out
int3
mov
pop
xchg
mov
add
ja
lret
xor
imul
sub
lea
lahf
jnp
xor
jbe
inc
jmp
sub
sbb
push
ss
cltd
jmp
aaa
xor
repnz
mov
xchg
jecxz
bound
or
jno
gs
dec
subb
or
sub
adc
dec
and
out
cmp
pop
jp
pop
mov
sub
psubusw
xchg
rcpps
xchg
jno
shlb
jmp
jbe
or
fisubrs
incb
pop
fcmovnb
imul
cmpsb
fs
xor
aam
inc
sbb
add
jg
dec
sbb
ret
jne
int3
pop
sarl
loope
add
in
popf
dec
daa
xor
xchg
adcl
gs
inc
adc
inc
aaa
arpl
xlat
add
mov
loopne
enter
dec
mov
sbb
sbb
addr16
add
cltd
or
lcall
fisubrl
push
movsb
pcmpgtd
inc
movb
xor
insb
bound
mov
sbb
adc
adc
and
pushf
inc
int
mov
arpl
or
inc
dec
pushf
xor
inc
shll
aaa
dec
sbb
cmp
jge
mov
sarb
adc
fdivrp
push
inc
sub
pop
pushf
push
or
push
lock
loope
dec
rolb
popa
inc
loop
mov
lret
sbb
sbb
pause
jle
scas
inc
sub
add
sbb
in
outsl
jb
pop
mov
adc
mov
jecxz
addr16
loop
into
cmp
shll
out
lea
cmpsl
lahf
or
das
rcrl
xchg
incb
sbb
adc
cmp
cld
mov
insb
call
add
ret
in
fwait
stc
je
aas
in
dec
inc
ret
je
repnz
push
or
sahf
in
mov
fsubs
arpl
rcrb
cltd
mov
loopne
leave
cltd
dec
push
daa
out
and
and
jl
mov
dec
sub
jb
icebp
lods
sbb
mov
push
or
sub
daa
xchg
cmc
jl
cwtl
repnz
lds
aas
daa
mov
js
or
sub
mov
sbbl
xchg
out
test
lret
dec
daa
pop
cltd
sub
sbb
xchg
sbb
lcall
in
xor
jmp
das
jae
inc
pusha
cli
add
push
test
aaa
das
movd
cltd
sbb
mov
dec
aas
mov
fmull
movsl
fisubl
xlat
xor
into
ljmp
ljmp
jo
push
mov
mov
fnstsw
and
cmp
int3
mov
aam
lret
add
leave
sahf
stos
inc
aad
sbb
cmc
out
jmp
xor
ja
mov
push
mov
imul
out
int3
cmp
push
shrb
icebp
xchg
jnp
or
mov
popa
cltd
fcmovu
pop
js
add
icebp
aaa
mov
add
fstps
ljmp
pusha
lods
inc
in
outsl
push
cmp
lcall
xor
cmc
loopne
out
sbb
gs
in
imul
lcall
pop
mov
mov
int3
in
es
mov
sbb
add
sbb
and
jmp
sbb
mov
push
xor
jge
daa
pminub
ds
out
into
and
in
loope
das
adc
pop
dec
ficomps
pop
adc
xchg
fisttpl
ret
add
loop
xchg
mov
sbb
popf
cmp
xchg
adc
cwtl
mov
mov
sbb
sbb
lret
cmpsl
add
sub
mov
stos
fs
clc
or
into
lock
mov
sbb
push
cmp
mov
mov
xor
bound
adc
xchg
dec
cmp
dec
push
jmp
stos
sub
fisubrl
or
push
xor
jp
mov
mov
sbb
xchg
pop
in
loopne
shl
das
sbb
pop
insl
test
jno
daa
enter
std
inc
outsb
mov
fucomp
inc
xchg
cmp
jnp
adc
outsb
aam
test
in
or
aas
cmp
pop
sub
xchg
pop
xor
mov
es
int
ljmp
sbb
xlat
mov
pop
push
push
xchg
cmp
mov
aas
repnz
ficomps
imul
dec
push
arpl
jo
dec
jg
or
inc
sub
popa
jle
jecxz
xchg
popf
sbb
jle
push
dec
cmp
shrb
pop
and
pop
mov
je
ljmp
mov
stos
out
cltd
pop
push
sbb
adc
mov
std
pop
int
ret
dec
int
jne
jb
pop
push
xor
cmpsl
aam
les
mov
mov
bound
addr16
adc
xchg
xlat
fisttpl
mov
jno
pusha
sub
adc
repz
push
stc
pop
sbb
or
outsb
mov
flds
out
cmpsl
or
cld
xor
jle
xchg
cld
sbb
decl
jo
ret
xor
and
adc
cmp
sbb
jp
mov
je
fnstsw
sti
push
gs
inc
adc
and
jnp
adc
mov
sbb
jns
jl
lret
jbe
fcmovu
call
mov
dec
repnz
rcr
mov
push
jmp
lcall
dec
push
loop
pushf
xchg
cmp
or
jmp
xchg
mov
push
mov
jmp
lret
or
int3
push
out
test
in
ror
rorb
inc
loop
adc
or
xchg
inc
outsl
lods
pop
and
adc
ds
jle
or
adc
inc
xchg
cwtl
leave
cmpsl
sti
out
icebp
mov
dec
add
sbb
sbb
fs
mov
xorb
dec
inc
aaa
aas
mov
fsubrp
mov
nop
inc
mov
xchg
or
cltd
lahf
and
sbb
cmpsl
dec
es
das
xacquire
fld
icebp
pop
mov
cmp
in
loope
mov
adc
out
outsb
lret
jb
out
imul
jns
fwait
test
and
xor
out
sbb
js
bound
add
cmp
jno
xchg
sub
cmpsb
out
ljmp
push
sbb
mov
mov
sbb
inc
test
adc
pop
in
ss
ret
inc
push
sahf
imul
pop
in
or
imul
mov
pop
cld
push
xor
xchg
add
pop
testb
and
xor
imul
popa
sbbb
arpl
mov
call
add
xor
jle
orb
stos
popf
jmp
insb
jnp
or
adc
or
mov
lret
mov
mov
or
cmp
in
mov
ret
scas
scas
pop
jle
ds
divl
pop
hlt
aas
xchg
jbe
mov
fnstsw
lret
adc
xchg
scas
das
movsb
daa
mov
mov
pop
add
rcrl
adc
insb
xchg
test
loope
pushf
fwait
in
xchg
fstpt
sarb
inc
inc
sub
cmp
cmpsb
and
cmp
mov
test
push
xchg
sub
rorl
fldt
insb
addl
mov
xchg
inc
repz
pop
push
dec
push
pusha
sbb
sbb
push
add
adc
divb
pop
inc
scas
cmpsl
fs
iret
icebp
repnz
ja
dec
ja
cmp
jbe
mov
ret
bnd
in
gs
sarl
pushf
jl
psubd
push
sbb
sub
fisttpll
xor
scas
jae
dec
xor
ds
mov
outsl
fistps
out
sub
es
fsubrs
xor
ss
inc
inc
fwait
out
pusha
fmul
add
fwait
push
outsl
call
sbb
mov
jns
idiv
shll
aad
dec
mov
dec
xor
cmp
or
ficoms
sub
cmp
mov
mov
adc
mull
sub
stos
in
mov
jp
mov
stos
das
not
test
mov
mov
pusha
xor
adc
pop
inc
cltd
push
dec
sahf
jb
lods
adc
adc
cmp
pop
insl
mov
lret
int
xor
sbb
or
test
adc
xor
sub
push
cmpsb
jle
jno
mov
jg
pop
jge
mov
sbbl
sub
std
repnz
jae
mov
mov
in
xchg
or
jne
out
out
mov
cwtl
add
and
xchg
stos
push
inc
jbe
outsl
adc
movsb
mov
out
sbb
aam
and
pop
xchg
scas
mov
stos
leave
jnp
mov
fdiv
and
mov
push
push
xor
mov
std
loope
adc
mov
sub
stos
add
mov
sub
movsl
or
adc
fidivrl
iret
inc
mov
cmp
xor
mov
push
into
outsb
mov
lret
in
clc
ret
bound
mov
mov
pop
xor
imull
shrl
ja
adc
xchg
sub
sub
inc
cmpsb
mov
movsl
adcl
xor
sub
test
push
addr16
es
jnp
dec
mov
shll
pop
pusha
xchg
incb
mov
push
lds
cmc
jecxz
mov
ret
cmp
lea
jbe
pop
sub
mov
jo
lea
mov
jbe
pop
clc
push
add
sbb
es
adc
sub
jge
mov
enter
stos
pop
test
int
scas
xchg
iret
aad
mov
sub
push
adc
insl
ss
pop
sbb
sbb
add
adc
dec
mov
sub
das
call
add
rclb
pop
or
dec
enter
or
mov
and
mov
push
rorb
shlb
jg
mov
mov
add
xor
xchg
adc
mov
pop
or
arpl
pusha
cmp
fists
jno
scas
out
fisttpl
sti
out
mov
sub
jle
enter
inc
cld
add
cmp
insb
xchg
cwtl
mov
scas
js
mov
imull
test
and
cld
xchg
lret
shl
lods
inc
xlat
add
sub
outsb
cmpb
mov
add
mov
inc
mov
test
mov
xchg
js
mov
mov
daa
jecxz
xchg
fs
push
popa
test
hlt
scas
les
vmread
mov
jo
dec
push
scas
mov
scas
mov
adc
addr16
out
cltd
mov
xorb
inc
jbe
stos
jmp
scas
cli
inc
sub
lods
repnz
negl
push
cmp
and
hlt
add
popf
inc
test
lock
in
orb
sub
sti
pop
adc
mov
mov
mov
cmp
dec
fcoml
cmp
add
add
cwtl
jne
inc
sbb
test
sahf
sbb
sti
push
movsl
insb
clc
add
and
jg
push
sbb
pop
std
or
jmp
xchg
pop
scas
leave
sbb
ja
mov
dec
int3
pushf
scas
or
subb
sbb
popa
pushf
mov
and
pop
lock
cmp
imul
lea
mov
fcompl
lcall
cmp
or
xchg
add
add
push
and
repz
pop
loope
lahf
cmp
ljmp
and
add
daa
popa
lret
push
or
adc
jle
icebp
loope
fdivl
nop
pop
or
fiadds
xor
and
and
pop
mov
jp
cmp
cmc
leave
xor
shlb
push
lahf
xlat
sub
sub
sahf
enter
stc
or
pushf
in
inc
mov
inc
popa
inc
adc
fndisi(8087
es
inc
ret
adc
outsl
sbb
in
fisubrl
jo
adc
imul
sub
jmp
pushf
test
sbb
scas
shll
pop
jge
mov
xchg
insb
stos
mov
push
cwtl
fucomip
into
rcrb
sbb
jg
lret
out
fmuls
sbb
add
add
fs
push
cmp
push
lods
add
push
lret
test
out
jl
lea
push
lret
inc
lret
ret
or
scas
mov
sub
dec
inc
dec
mov
scas
sbb
pop
jmp
clc
cmpsb
decb
push
jo
jbe
and
pop
rcll
sbb
pop
cwtl
sub
sub
or
lods
filds
push
aam
push
pusha
pop
rcrl
xor
fbstp
mov
cltd
push
scas
push
cmp
xchg
mov
sbb
movsb
or
xchg
lods
jns
mov
mov
mov
pusha
icebp
insl
push
cmp
fucomi
in
xchg
jmp
in
cmp
sub
shlb
mov
lcall
pop
cld
rolb
jl
and
and
rclb
mov
stos
push
and
adc
dec
notb
aad
clc
push
lret
sahf
stos
xor
pushf
cmp
out
lods
aas
and
jl
inc
insb
lock
inc
int
push
cmp
test
sbb
cmp
add
cmp
xor
push
in
daa
inc
or
insl
jle
test
mov
test
imul
cmc
stos
xlat
fcoms
push
fiaddl
ret
inc
cld
dec
fwait
fwait
and
das
mov
rcrl
mov
push
rcrl
cs
and
jbe
adc
and
jg
sub
popa
cmp
movsb
shll
and
into
sbb
fidivrs
scas
mov
dec
faddl
ja
cmc
push
std
inc
sbb
push
insl
ss
and
data16
cmpsl
mov
in
fildl
push
inc
je
sub
push
xor
leave
inc
pop
sbb
int
iret
cmpsl
jo
insl
in
mov
inc
adc
xchg
dec
cld
lahf
sub
push
adc
adc
xchg
call
test
jno
inc
pushf
jmp
dec
ret
arpl
xchg
xor
jbe
dec
aam
sbb
mov
fists
pop
jle
add
hlt
cli
sbb
xchg
rclb
cmp
lret
out
movsl
sbb
cwtl
add
addb
iret
xchg
inc
and
mov
das
or
mov
movsl
and
mov
xor
add
out
jle
push
js,pt
out
daa
lea
mov
adc
mov
imul
outsb
jmp
pop
data16
pop
es
jle
andb
push
daa
or
test
loop
pop
xchg
or
ret
sub
pop
cmpsb
cmc
aaa
and
add
xchg
inc
jge
inc
ficomps
sub
cmpsl
out
shrl
sub
fldcw
and
shrb
mov
mov
popa
sahf
xchg
push
sbb
push
push
cli
inc
addr16
or
aas
push
sbb
and
int3
mov
fidivl
adc
shlb
jge
mov
stos
cmp
lret
out
mov
lods
adc
and
add
test
sbb
cmc
jne
dec
cltd
aas
clc
add
xchg
jmp
in
push
dec
xchg
inc
lcall
leave
push
iret
stos
and
std
push
ja
sbb
inc
xor
mov
cld
push
cli
push
lods
and
lret
shlb
xor
rolb
dec
sub
dec
pop
mov
test
outsl
and
enter
pop
jne
js
test
jno
or
mov
jbe
cmp
aam
addb
and
xor
jne
rorb
pop
pusha
sbb
mov
test
or
jnp
jne
or
mov
mov
fildll
pop
mov
dec
lods
sbb
pop
fsubrp
add
cmp
pop
xchg
pop
test
xor
xor
cmp
testb
adc
fnstenv
cwtl
inc
sbb
iret
shll
out
xchg
mov
cmpl
lcall
cmp
push
mov
bound
adc
ds
or
inc
inc
xchg
call
mov
xor
ss
into
jl
jl
test
xlat
incl
pop
jg
imul
out
dec
outsb
push
loopne
jmp
in
cwtl
adc
pop
sub
inc
leave
mov
cli
cmp
push
mov
or
ror
mov
test
jp
sub
lods
adc
dec
jle
pop
dec
mov
shrb
add
sti
and
iret
mov
mov
shr
out
in
loopne
aam
adc
les
out
inc
movsb
adc
xor
ljmp
scas
shll
jmp
mov
ja
pushf
mov
inc
lret
cmp
divb
inc
add
hlt
enter
dec
aaa
cmp
xchg
jg,pn
js
les
cmp
pop
mov
pop
cli
sbb
inc
dec
adc
pop
data16
jp
adc
icebp
or
cmp
arpl
cmc
add
mov
mov
cmp
jns
popf
push
adc
pop
or
out
xor
shr
adcb
xchg
cmp
or
sbb
cmp
push
bound
mov
sti
cltd
fstpt
mov
push
das
xor
pop
movsb
cmpsb
shll
movsb
cmp
mov
fdivs
mov
lds
fsts
pop
and
pop
aaa
xor
popa
add
aam
sub
clc
inc
mov
test
mov
mov
stos
mov
push
add
sub
pusha
sbb
mov
adc
or
xchg
mov
shrb
jg
push
stc
int3
xchg
out
fwait
xchg
mov
outsl
lock
dec
mov
mov
cmpsl
add
xor
mov
js
or
mov
in
loop
insb
into
stos
and
movsb
jbe
mov
ret
rol
pop
inc
adc
mov
rcl
sahf
shll
xchg
je
mov
out
mov
insb
pushf
rorl
shll
jo
cs
xchg
mov
mov
inc
std
shlb
push
jg
outsl
mov
aas
pop
add
jns
sahf
or
push
js
clc
nop
cs
ljmp
xchg
sti
jp
mov
repz
mov
les
inc
pop
jp
jl
sarb
sbb
push
cwtl
sbbb
hlt
int3
addl
in
sti
fcmovnb
pop
pop
or
xchg
jne
pop
inc
shll
cmp
inc
xchg
in
fildl
mov
sbb
mov
arpl
and
mov
cmpsb
iret
mov
shrb
fwait
jecxz
jge
std
adc
add
clc
sti
std
fadds
jnp
sbb
jg
in
fimull
and
cmp
xor
lret
cwtl
fcoml
mov
scas
insb
gs
ret
mov
jns
dec
xchg
adc
hlt
int
dec
mov
rorl
in
cmp
into
add
aam
scas
xchg
sar
pop
mov
repz
flds
jae
movsl
jle
sub
movsl
pop
gs
lods
fiaddl
add
es
jmp
cld
jmp
inc
imul
mov
add
stc
and
lds
mov
cmp
xor
inc
mov
nop
addb
mov
outsb
or
inc
mov
jmp
mov
cs
dec
and
cmp
fadd
sbb
cmpsb
adc
jg
gs
adc
adcb
icebp
outsl
jne
jne
push
xor
dec
or
rcrb
push
lods
nop
fcmovbe
xlat
sbb
aaa
mov
sti
add
push
das
fistps
mov
inc
aas
cwtl
xor
dec
jno
cs
lds
sahf
test
stc
loope
nop
sti
dec
pop
inc
in
mov
mov
xchg
xchg
cmp
xchg
and
add
imul
mov
in
jb
sahf
push
dec
je
fisubrl
lea
in
jno
pop
adc
pop
push
mov
push
outsb
lret
hlt
sub
cmp
popa
cmp
or
addr16
jne
leave
and
or
jle
push
jl
roll
test
movsl
loop
inc
xchg
mov
movsl
pusha
rcrb
mov
cmpsl
push
ja
je
mov
sub
xor
inc
add
inc
in
mov
mov
stos
fldenv
sbb
cmc
and
test
sub
dec
and
andl
xchg
out
in
push
sahf
out
out
jnp
fisttpll
push
in
sub
aad
and
add
shlb
sbbb
sti
fcoml
sbb
subb
xor
cmp
or
arpl
or
mov
inc
call
jg
push
arpl
add
mov
mov
push
lods
or
mov
andb
outsb
fisttpll
jl
enter
push
add
into
loope
lods
and
or
dec
loopne
dec
insl
sbb
sbb
cmpsb
pop
clc
addr16
adc
fdivs
mov
stos
out
inc
cmp
repnz
daa
push
addr16
icebp
hlt
push
xor
cmp
xchg
lahf
icebp
mov
icebp
loopne
fisttps
pop
cwtl
jle
sub
sbb
pop
int3
dec
mov
cs
push
push
dec
daa
sbb
dec
mov
jl
jg
pop
inc
sbbb
mov
or
int
pop
repnz
and
sbb
sahf
cmp
nop
xchg
push
rcl
pop
dec
leave
pop
cwtl
dec
into
adc
fwait
test
sbb
insb
addb
stc
sarb
jb
outsb
and
push
jne
dec
lods
mov
ret
xchg
pop
cltd
xchg
imull
dec
es
cmp
mov
call
mov
ret
repz
adc
xchg
sti
rcrl
cli
aad
xchg
cmp
push
lret
cs
sbb
fsubl
mov
shr
jl
shrl
fwait
jmp
cld
pop
shlb
add
xchg
out
mov
out
sbb
mov
cmc
lret
inc
pop
or
bnd
add
pop
cmp
scas
sbb
or
push
test
xchg
mov
inc
in
xchg
inc
cmp
add
or
sbb
and
ret
lret
mov
push
adc
ljmp
pop
mov
mov
stos
xchg
xchg
jb
mov
lcall
and
dec
mov
push
inc
out
push
sub
push
leave
mov
add
ds
cmp
ljmp
sub
jno
cmp
das
mov
push
ret
xchg
sbb
mov
jns
adc
pop
or
je
mov
loopne
and
sarb
test
cld
push
add
sbb
add
jle
sbb
and
lea
in
xchg
xor
inc
lods
lahf
int
sahf
mov
inc
aaa
xor
inc
jecxz
aaa
insb
add
sbb
add
xor
add
js
pusha
enter
push
fldt
pushf
cmp
and
loope
in
je
rcl
mov
sub
cmp
call
mov
xor
mov
ja
pop
dec
mov
repz
inc
pop
and
push
in
jl
mov
mov
stc
mov
fisttpl
adc
shlb
inc
dec
mov
je
jne
inc
int3
arpl
ret
and
arpl
repz
insb
cmp
iret
ds
sbb
xchg
popa
push
or
je
and
push
dec
test
testl
shr
movsb
outsb
inc
dec
int3
and
iret
sub
add
ss
pop
push
sub
lea
and
xchg
mov
addr16
rcr
cmp
icebp
aam
inc
or
arpl
movsb
sbb
mov
push
shl
fists
nop
dec
das
pop
lcall
enter
out
jp
or
cltd
add
dec
pop
mov
fcomp
out
xchg
cmp
sbb
call
mov
fsts
xorb
jnp
push
insl
mov
jae
cmp
jae
outsl
js
rclb
dec
push
dec
mov
dec
loope
jmp
mov
test
push
cmc
and
push
sbb
aas
aas
push
repz
pop
add
dec
in
sub
cmp
scas
ret
xor
nop
data16
mov
subb
cmp
sbb
leave
adc
jle
push
repz
lds
pop
insb
mov
push
test
cld
gs
aam
shl
repnz
push
dec
push
aas
push
cmp
dec
mov
xor
or
cmp
jb
repz
pop
mov
fisttpl
mov
jne
xchg
pop
insb
push
js
push
pop
test
rclb
xor
addl
push
push
or
shll
lods
imul
ss
xlat
les
jp
scas
jo
cld
cld
aas
bound
cmp
bound
lock
or
pop
ficomps
xchg
jmp
lahf
mov
leave
adc
mov
inc
out
or
jmp
sti
jnp
pop
mov
and
inc
sub
sbbb
cwtl
les
clc
dec
int
jmp
cmp
cmpsb
cli
fldt
push
cmp
test
mov
mov
out
das
sbb
repnz
push
lods
and
shlb
xchg
pop
ret
mov
mov
lret
xchg
in
insb
and
mov
and
jp
adc
push
mov
push
test
imul
sar
pop
and
je
aad
sti
mov
in
mov
or
pop
xchg
jmp
sub
cmp
fistl
rorl
stc
ds
cmpl
dec
gs
inc
cli
cmpsb
xchg
push
or
scas
out
and
add
push
mov
or
cmp
lahf
lock
jne
rcr
outsb
push
jne
sub
dec
add
sub
dec
sahf
loope
imul
adc
add
mov
pop
movsb
out
push
xchg
cmp
jnp
out
insb
inc
push
test
adcb
aas
or
leave
push
and
imul
sub
jb
clc
and
sahf
imul
lods
filds
test
int3
push
ds
mulb
in
es
xor
fxch
movq
js
gs
mov
dec
cli
add
andb
add
push
pop
mov
mov
sbb
lds
loope
cwtl
lds
xchg
movsb
adc
lds
jnp
mov
push
push
out
icebp
js
adc
in
or
mov
ret
mov
mov
pushf
cld
cmpsb
jns
popa
adc
mov
xchg
and
lcall
in
shrb
pop
mov
out
adc
sub
notl
rcr
das
dec
mov
data16
pop
adc
ja
mov
dec
rcll
cmp
repnz
mov
xor
jnp
scas
adc
clc
mov
sbb
pop
fildl
push
popf
pop
orb
fisttps
xorl
icebp
sub
loop
rorb
mov
jo
sbb
mov
xor
outsl
call
fidivrl
cmp
test
fmuls
movsl
in
sbb
cmp
fidivrl
lret
mov
pushf
and
and
call
push
dec
dec
stos
frstor
ljmp
pop
jbe
pop
mov
lods
push
xchg
or
fiaddl
sub
pop
imul
push
loope
pop
cmp
add
fsts
test
insb
xchg
je
push
mov
notl
add
xchg
sbb
mov
cs
test
stos
dec
cwtl
out
aas
add
mov
leave
jb
cmp
call
scas
pushf
sbb
cli
push
ret
test
mov
sub
orb
ja
scas
and
pop
mov
gs
inc
pop
sbb
mov
int3
xor
sbb
jp
adc
xchg
repz
in
dec
push
cs
addr16
pop
nop
mov
sbb
sbb
mov
inc
sub
pushf
xchg
out
sbb
lock
xor
mov
repnz
das
inc
add
test
inc
adc
jb
cltd
enter
insb
sub
int3
pop
hlt
inc
push
fistps
jno
xchg
jmp
addr16
add
sbb
mov
xchg
pop
divb
cld
fnsave
iret
cmp
loope
and
es
out
jmp
or
cld
push
cmpsl
mov
mov
ficomps
ret
pop
mov
mov
push
lcall
cmp
cmp
pop
sbb
into
sti
test
fsubrl
jae
sbb
inc
inc
pop
jbe
daa
xor
adc
and
jns
dec
or
jbe
push
fildll
adc
dec
fwait
insb
les
int
rcll
adc
sub
imul
lock
inc
bound
or
shr
mov
idivl
mov
enter
jl
dec
lret
push
pushf
test
or
mov
cmc
loopne
mov
int
data16
stos
scas
enter
hlt
decl
lods
fsubr
sbb
push
lahf
loopne
cmpsl
test
xchg
int
and
pop
rclb
in
mov
nop
pop
sahf
sbb
xchg
mov
subb
cmp
adc
or
mov
js
test
inc
jmp
dec
push
icebp
div
sub
inc
inc
mov
mov
shlb
cli
int
movsl
push
rcll
xchg
or
andl
bound
rep
insl
dec
and
xorl
or
adc
out
cmp
int3
mov
fs
sub
test
movsl
sub
sub
pop
imul
xor
icebp
inc
dec
arpl
je
inc
in
andb
pushf
push
call
dec
dec
int3
sbb
jnp
imul
shlb
mov
adc
je
jae
and
mov
jge
dec
arpl
jmp
fistpl
xchg
pushf
imul
cmp
ret
push
mov
mov
lods
insb
push
shlb
and
in
jecxz
mov
push
jg
pop
cmp
or
and
or
pop
or
xor
sbb
mov
inc
inc
fsubl
mov
fs
std
jnp
dec
in
dec
mov
pop
notb
add
sti
sub
ljmp
sub
cmpsl
fwait
mov
jl
pop
push
jmp
mov
push
repz
cltd
lret
lods
pop
jbe
inc
pusha
or
mov
lea
push
les
adc
mov
ds
inc
lods
sbb
push
enter
cmp
push
ds
cmc
arpl
nop
hlt
cli
mov
bnd
loope
imul
or
push
pop
fwait
pop
or
lret
sti
xchg
aad
jno
aaa
test
aam
jp
mov
out
mov
or
movsl
fld
insb
sti
clc
adc
in
adcl
aad
xor
imul
xchg
mov
je
stos
inc
xor
adc
es
sti
and
inc
clc
inc
pop
jg
sbb
and
mov
add
fmul
dec
or
mov
jle
push
xchg
lcall
ret
push
gs
in
jns
pop
iret
adc
out
and
or
push
scas
rorl
sub
jmp
imul
in
mov
push
fimull
jbe
dec
repnz
data16
xchg
hlt
mov
mov
jg
lea
ret
insl
je
sbb
mov
scas
jno
cli
sbb
loopne
sbb
repnz
xchg
pop
cwtl
sti
jae
sbb
in
clc
jmp
int
xor
add
leave
fsubrs
lret
cmp
ffree
mov
sub
push
pop
jne
outsb
add
or
lds
pop
lods
fdivrs
and
add
sti
pop
sbb
loop
xchg
mov
shrl
lods
and
adc
pop
sub
inc
xor
or
movsb
cmpsb
xchg
mov
call
ja
hlt
or
lret
and
sub
fs
sub
lcall
shll
insb
incl
push
scas
pusha
fcomp
lods
aaa
mov
cmpsl
aam
inc
insl
push
int3
daa
or
pop
ret
repz
fnstsw
mov
jae
fbstp
push
push
das
nop
pop
movsl
or
repz
mov
pushf
clc
dec
and
xorl
push
sarl
mov
mov
lods
mov
or
push
clc
and
sti
mov
dec
daa
and
aam
js
xchg
aas
clc
adc
das
js
mov
inc
push
or
mov
dec
fldcw
mov
jbe
add
lcall
jbe
in
xchg
dec
xchg
mov
jmp
insb
sbb
mov
sbb
mov
popf
hlt
mov
out
cmc
jp
jmp
out
jp
mov
cmp
adc
dec
lret
add
jl
fldenv
adc
outsb
sti
push
jne
adc
addr16
test
fistpl
inc
notl
mov
les
dec
mov
inc
adc
mov
sbb
sub
mov
imul
nop
daa
mov
dec
mov
xor
loopne
add
inc
adc
jbe
mov
stc
jnp
mov
xor
rcr
pop
xchg
aam
xor
cmpsb
out
and
adc
imul
test
out
adc
inc
addl
ja
pop
outsb
ds
mov
lret
mov
add
test
jmp
sub
xor
dec
aad
std
push
lahf
jl
inc
loopne
xchg
dec
or
in
push
fwait
mov
mov
aad
xchg
js
xchg
das
pop
les
jl
add
lret
sbb
pop
xchg
inc
fimull
cmp
ret
cltd
repnz
ds
cwtl
xor
dec
js
adc
lret
lret
cmp
xor
pop
imul
out
or
sub
out
mov
shll
in
hlt
aam
xchg
adc
jnp
and
shll
mov
mov
or
and
inc
std
pop
sahf
adc
mov
jecxz
fnstcw
add
lods
mov
mov
cmpsl
add
cmp
lods
mov
stos
pop
out
cwtl
fistps
in
adc
pop
dec
ja
xchg
je
jns
fwait
sbb
sbb
xlat
std
cmpsb
stos
xlat
pushf
cmp
nop
mov
xor
mov
xchg
jge
sub
pop
andb
insl
pop
jne
insb
cmp
push
imul
pop
cmp
inc
jns
cli
imul
xor
shr
adc
dec
or
outsl
xchg
scas
enter
pusha
ds
ret
xchg
lock
sbb
pop
les
in
pop
ljmp
dec
mov
jl
cs
pop
push
push
mov
imul
leave
scas
mov
push
mov
jne
outsl
dec
add
mov
faddl
aad
pushf
out
movsb
inc
dec
outsl
pop
sub
dec
test
cmp
lahf
jae
mov
push
fdivrs
cmp
xlat
mov
xchg
adc
adc
mov
dec
ja
sbb
pop
and
mov
aam
mov
mov
pop
hlt
outsb
dec
frstor
mov
adc
xor
sbb
lods
das
or
insb
pop
push
sbb
dec
scas
push
mov
and
rep
rorl
push
sbb
popa
dec
add
mov
mov
in
pop
push
mov
xchg
mov
lret
idivl
cmpsb
push
insl
xchg
xlat
mov
mov
je
jl
aad
fsubrl
mov
dec
movsb
pop
xchg
cltd
sub
sti
lcall
add
lea
icebp
add
sub
dec
mov
mov
mov
popf
idiv
sbb
dec
adc
repnz
push
xchg
sub
les
in
shrl
mov
dec
xor
jge
pop
cmc
cmc
in
cmpsl
inc
xchg
pop
fwait
es
sub
ja
push
dec
adc
or
pop
stc
cwtl
mov
adc
pusha
lret
test
outsb
outsl
divb
fmulp
repnz
add
cmp
ds
xlat
inc
enter
push
inc
cltd
xor
sarl
cld
sub
push
xor
push
dec
insb
je
outsl
cmp
test
mov
cs
jecxz
xlat
in
adc
mov
or
test
jmp
push
insl
mov
movsb
mov
mov
mov
push
loopne
xchg
and
mov
and
jbe
test
aam
mov
push
push
pop
mov
xor
mov
hlt
loope
mov
fcompl
adc
fisubs
mov
inc
mov
in
jmp
xlat
rclb
jl
repz
loop
xchg
fimuls
lret
push
loope
push
mov
jl
xchg
fs
push
test
test
pop
cmc
fidivl
hlt
pop
out
cmp
dec
xlat
imul
test
or
mov
jge
scas
call
mov
hlt
cmc
loopne
hlt
mov
sub
dec
lock
mov
pop
imul
mov
jns
mov
repz
xchg
int3
or
pop
mov
sarl
sbb
inc
subb
or
into
xlat
and
or
xor
out
out
inc
inc
cltd
popa
mov
mov
dec
loop
sti
lock
loop
sbb
gs
cmp
movhps
inc
push
out
xchg
sbb
daa
arpl
add
in
scas
mov
cmp
adcb
xchg
pop
sub
in
pop
push
in
imul
int
ret
pop
xchg
iret
push
xchg
jb
stos
sahf
inc
lods
dec
cmp
shlb
adc
fidivl
cmp
les
mov
mov
fld
mov
cmp
sbb
jge
jno
pushf
sub
imul
lock
sbb
ljmp
mov
fdiv
aas
scas
mov
jge,pt
mov
movsb
cmp
or
pushf
sahf
and
adc
inc
xlat
shll
xchg
insl
lods
jle
push
loop
cli
aad
scas
sbb
xchg
lock
fidivl
xchg
ret
in
aam
cmp
push
sbb
leave
movsl
sbb
js
and
shlb
outsl
pop
adc
outsb
push
int3
lds
lds
jle
cs
repz
adc
ja
pushf
mov
aam
cmp
mov
sbb
push
lret
and
jb
inc
xchg
jns
imul
mov
push
dec
add
pushf
in
sahf
and
sahf
inc
xchg
jmp
dec
mov
inc
adc
or
in
and
inc
adc
xchg
sbb
jnp
lret
jno
lods
std
inc
or
out
ss
out
pushf
adcb
stc
mov
loop,pn
js
xchg
add
push
mov
mov
sub
ljmp
xchg
in
xor
jge
gs
daa
sub
stos
ret
adc
jge
push
cmc
jne
and
movsl
mov
mov
push
xor
adc
popf
adc
xchg
push
and
jg
jg
repnz
divb
inc
loope
xchg
imulb
out
pop
xchg
xchg
xchg
sbbl
push
sbb
in
jecxz
push
lret
push
mov
dec
sti
adc
cltd
movsl
add
incb
mov
sub
lock
fsubrs
dec
rcll
ss
leave
push
mov
sbb
fwait
dec
sbb
stos
or
and
clc
push
push
call
xor
orb
repnz
lret
hlt
sbb
cmc
out
enter
dec
pop
test
leave
scas
sub
iret
js
jne
dec
imul
lea
ficomps
jl
push
sbb
pusha
jnp
and
out
pushf
dec
sub
mov
cmp
in
xlat
adc
add
pop
mov
out
xchg
mov
loopne
and
and
or
faddl
adcb
jmp
lea
xchg
out
sbb
xadd
pop
fcompl
inc
add
fildll
jae
cmp
outsb
roll
or
jnp
out
daa
push
fidivrs
into
out
int3
lock
pop
lock
xlat
mov
mov
movsl
cmp
xchg
sub
add
es
xor
movsb
cmp
es
lcall
push
popa
lcall
jg
mov
movsb
pop
add
xchg
stc
outsb
mov
cwtl
hlt
jmp
push
sub
movb
mov
xor
adc
and
xor
cmp
lea
push
and
ja
push
pop
sahf
pop
xchg
cmpsb
mov
in
cmp
lcall
sar
int
lret
pop
mov
or
mov
ljmp
mov
repz
mov
mov
push
push
push
mov
cmp
lods
or
dec
gs
jno
jb
pop
adc
sbb
scas
xchg
mov
addr16
fiaddl
hlt
cmpsb
mov
or
add
stos
jns
sbb
lahf
enter
cmp
add
jno
lock
ljmp
push
imul
push
cmc
loope
sub
xor
out
movsl
mov
loope
arpl
dec
xor
mov
test
push
jl
ficoml
popa
out
xchg
ja
or
jl
ss
cltd
pushf
xchg
push
inc
fidivrs
jge
aad
imul
jmp
cmp
loop
notb
pop
push
cli
scas
imul
xchg
jmp
pop
adc
movmskps
push
mov
sbb
push
imul
in
jb
nop
jl
testl
jno
dec
adc
cmpsl
js
xchg
sub
push
inc
mov
dec
adc
sub
inc
sbb
fucomp
cmp
push
cmc
push
mov
xor
xchg
pop
xchg
ja
test
test
mov
stos
jno
inc
call
push
push
sbb
enter
out
js
mov
roll
cmp
pop
jno
cmp
pop
fdivrs
dec
dec
push
and
imul
ja
in
jb
add
jl
and
sub
out
ja
sbb
pushf
inc
mov
mov
sahf
test
push
leave
adc
jns
adc
sub
inc
xor
xchg
lret
jnp
aas
daa
cmpsb
push
fs
adc
cmpsb
sbb
into
bnd
jecxz
xchg
data16
push
shll
aas
jg
inc
lea
movsb
or
enter
adc
in
jb
bound
loopne
or
aad
jmp
int
test
ret
push
cmp
stos
cwtl
jae
ljmp
jmp
fdivs
addr16
and
dec
cli
push
pop
xchg
enter
adc
clc
out
aas
gs
arpl
push
sbb
or
xchg
aaa
push
push
sub
cmp
sbb
or
sti
jns
lods
movsb
je
icebp
add
and
add
aaa
mov
cmpsl
fwait
jno
leave
imul
mov
inc
dec
bound
adc
lock
dec
gs
xchg
jb
xchg
push
jl
rcrb
sbb
dec
dec
jp
pop
fstpt
jo
cli
adc
sbb
push
pop
sub
subl
ret
rep
xchg
xchg
fisttps
jnp
stos
stos
sub
sub
lret
pop
repnz
movsl
inc
pop
mov
xchg
and
xlat
ljmp
sbb
jl
ja
or
mov
out
sub
enter
or
inc
into
rcll
push
dec
mov
fisttpl
push
pop
adc
push
lea
pop
jecxz
and
and
jbe
push
mov
jle
xchg
mov
fistpl
mov
xchg
fiadds
or
jmp
pop
or
mov
testb
mov
not
xchg
xchg
loop
ja
add
xchg
clc
lret
std
ja
jnp
out
gs
subb
ret
jp
cmc
jle
lods
xchg
aad
gs
and
dec
pop
or
es
repz
or
mov
sub
cmp
cmp
fmull
sbbl
sbb
mov
lea
in
cmpsl
mov
shl
lret
adc
inc
add
in
mov
xor
pop
sbb
aad
adc
xchg
out
cmp
jecxz
das
dec
pop
cmpsb
outsl
je
mov
jns
cmc
out
mov
ret
lret
add
adc
iret
call
jns
cwtl
pop
mov
cmp
out
sti
add
or
push
sahf
repnz
mov
jge
loope
mov
cmovo
mov
sti
sbb
repnz
nop
mov
icebp
inc
pop
or
stos
roll
fwait
movsb
push
out
pushf
push
faddp
jle
nop
dec
outsb
inc
inc
loopne
lahf
imul
lea
iret
adc
cmp
inc
cmp
pop
push
fbstp
aas
pop
ja
or
pop
push
out
inc
mov
or
dec
mov
adc
iret
sti
mov
shrb
out
mov
fwait
test
ljmp
aad
imul
std
out
rcl
popf
and
cld
or
notl
notb
xchg
xor
nop
add
jmp
clc
add
aaa
out
dec
sub
dec
xchg
ds
add
xchg
push
and
dec
fistpll
out
das
adc
push
inc
dec
fsubrl
lcall
xor
in
pop
push
xchg
or
jae
sbb
pop
add
xchg
testb
in
and
popf
jae
ficoms
jecxz
es
xor
mov
mov
jo
pop
out
out
xchg
subb
stos
sbb
adc
or
mov
adc
lods
and
cmp
lahf
fisttpl
jbe
shll
jg
cltd
add
mov
pop
mov
ja
fistpl
cmpb
lret
or
dec
in
push
inc
pop
mov
sti
inc
fnstcw
mov
call
nop
jle
xor
mov
pop
lret
push
mov
js
xchg
cmp
mov
mov
sbb
fsubl
testl
inc
jns
dec
adc
int
test
mov
bound
xor
mov
addr16
and
cs
push
mov
movsl
mov
ds
sti
ret
lods
mov
popf
add
add
xchg
jmp
fcom
test
sbb
and
or
dec
push
inc
fimuls
das
and
inc
testb
cmc
xchg
add
and
js
push
jmp
add
jnp
xchg
rcrl
nop
test
push
aas
xor
rorl
mov
jp
sahf
add
dec
enter
mov
stos
stos
shrb
das
push
into
sbb
cmpsb
mov
mov
adc
jge
inc
imull
push
jbe
int
mov
jb
jne
imul
mov
daa
adc
mov
repz
jp
lret
push
push
lods
cltd
fwait
int
lods
push
outsl
mov
frstor
aam
pop
xor
fnsave
adc
add
sub
adc
fsubs
iret
cmp
inc
mov
nop
sbb
aad
push
sub
adc
add
push
ljmp
sub
jnp
add
out
cmp
mov
xchg
rclb
cwtl
mov
mov
vfrczpd
mov
sub
test
push
ret
js
xchg
mov
and
out
jmp
jb
lds
cmpb
cmp
cmpb
or
je
mov
test
or
dec
and
push
pop
push
mov
repz
and
test
push
mov
ret
mov
xlat
mov
or
lea
sar
int
mov
mov
roll
add
push
cwtl
pop
add
jp
sub
and
cs
mov
inc
mov
jmp
mov
adc
cmpsl
ret
adc
test
sub
sti
sub
pushf
dec
dec
adc
or
sub
jg
cltd
push
xor
sub
fists
pop
push
out
stos
cs
dec
pop
sbb
cmpl
fmull
daa
ret
push
fs
test
sahf
mov
pushw
sub
mov
sub
push
loopne
pop
jg
subps
jb
push
dec
dec
sub
stos
xor
xchg
pop
ret
test
cmp
ret
hlt
xchg
cltd
xchg
pop
leave
jecxz
incb
pop
stos
pop
mov
fldt
mov
push
mov
jmp
push
out
dec
in
jo
adc
pusha
mov
stc
add
inc
out
int
push
out
xor
and
insl
es
sub
loope
pop
xchg
iret
cmp
jno
mov
loope
int3
jns
jb
loopne,pt
and
int3
std
rcrl
dec
sub
inc
je
pop
cmp
ja
test
mov
out
lret
iret
mov
sbb
xor
rcr
cltd
mov
mov
out
sub
hlt
cmp
pop
les
lcall
repnz
cmpsl
es
negl
call
adc
dec
pop
add
xor
add
cmpsl
lds
push
sub
lock
out
dec
out
rolb
stos
cmp
aas
in
into
mov
xor
test
mov
push
mov
dec
pop
dec
mov
adc
fucom
lea
adc
mov
jno
or
or
scas
dec
mov
out
dec
mov
dec
mov
mov
fstp
inc
push
xchg
adc
into
mov
push
sarl
loopne
lahf
and
cs
ljmp
mov
lods
and
sbb
ja
pushf
fnsave
out
inc
mov
les
jno
in
sub
fisubl
rcr
inc
mov
lock
lods
fsubl
mov
out
jmp
out
add
rorb
push
dec
pop
cmp
cmp
push
push
jmp
xor
fldenv
push
fadds
mov
stos
fcoms
popf
ret
scas
mov
jle
cmpsl
inc
jl
sbb
xchg
mov
sarb
loope
push
mov
adc
dec
mov
mov
xchg
add
lret
cmp
cs
call
test
stos
cmp
xchg
mov
cmpl
inc
stc
insb
cmp
iret
or
adc
rclb
lock
lret
push
mov
sahf
into
cli
mov
pop
push
ljmp
pop
sbb
cs
inc
inc
ret
aam
push
ffree
jne
loop
in
lods
ret
jl
in
in
mov
lods
sbb
push
mov
insb
cs
test
or
add
add
sbb
cmp
arpl
mov
rcpps
shlb
scas
into
push
adc
aam
sub
pop
stc
out
scas
mov
push
movsb
in
pop
mov
movsb
jne
pop
repz
daa
and
rcrl
loop
mov
fimull
cmpl
repnz
into
xor
mov
inc
jne
pop
pop
push
cld
sbb
es
adc
pop
jno
mov
scas
add
aaa
push
shrb
pop
ja
push
loope
cmpsb
xchg
dec
add
or
gs
icebp
loopne
or
adc
stos
dec
ljmp
mov
adcb
pop
addr16
push
inc
roll
pusha
out
cmpsb
lock
imul
and
cmp
repz
mov
cli
or
adc
pop
jle
xor
push
jns
push
mov
data16
or
movsl
stc
pop
inc
jb
out
cmp
loop
ds
out
out
inc
jmp
shlb
add
xchg
inc
shlb
sub
lret
testb
test
mov
adc
or
insb
pushf
leave
sbb
jb
mov
sarl
test
leave
cmp
or
faddp
sub
dec
dec
hlt
cmpsb
jle
inc
subb
insl
loopne
or
mov
ret
xor
leave
ljmp
mov
clc
shrl
adc
mov
lcall
out
mov
xchg
icebp
scas
mov
mov
sbb
fmull
shlb
mov
xchg
push
mov
sarb
xchg
push
shll
inc
xorl
sub
adc
adc
call
jecxz
test
mov
cmpsl
arpl
outsb
mov
jo
in
mov
dec
and
jg
mov
mov
cli
fwait
jbe
mov
test
test
ds
or
mov
mov
daa
lret
or
jbe
inc
add
icebp
and
sub
add
push
cmp
pop
adc
scas
pop
addl
mov
loop
movsb
outsl
inc
push
and
inc
scas
jmp
ret
aaa
repz
data16
loop
xchg
fdivrl
add
mov
push
sub
out
int
jb
js
mov
sub
xchg
add
mov
pop
ss
fisttpll
mov
outsl
xor
sti
loopne
ss
push
lds
mov
mov
addr16
mov
test
xor
aam
mov
sbb
jmp
mov
call
xor
sub
ja
pop
pushf
or
adcl
sub
inc
adc
inc
mov
lods
mov
ret
xchg
mov
mov
pop
sbb
sbb
je
lahf
pop
mov
push
mov
nop
mov
sub
imul
dec
jl
push
lods
xchg
sub
lock
add
pop
sbb
jns
into
rcrl
xor
out
adc
test
lret
sub
pop
fwait
adc
fisubs
loop
xlat
and
fstps
inc
xchg
mov
fldenv
popa
jae
push
jno
in
jnp
push
pop
imul
cmp
stos
dec
in
xchg
push
add
push
or
lods
rclb
fdiv
je
mov
lahf
push
pop
mov
mov
dec
sub
sar
mov
sbb
adc
push
inc
add
mov
test
push
fs
fldenv
js
insl
leave
inc
int3
or
popa
std
push
imul
xchg
mov
bnd
loop
dec
cmp
jge
imul
icebp
hlt
dec
rcll
adc
mov
in
and
pop
add
jge
adc
jne
sbb
jmp
rorl
xor
iret
outsl
jne
mov
mov
scas
adc
pop
dec
iret
add
xchg
push
bound
cmpsb
push
jns
ljmp
shrl
cmp
mov
popa
xor
fistpll
cmp
inc
loop
lret
mov
in
push
es
cmp
pop
sub
movsb
mov
outsl
lock
push
out
outsb
stc
cmpsl
push
icebp
jmp
lds
sbb
fnstsw
jmp
nop
fisttps
mov
jae
jb
mov
mov
es
inc
mov
dec
push
push
mov
cld
mov
mov
mov
mov
adc
lods
mov
aaa
sbb
adc
push
cmp
inc
inc
subl
and
sub
test
mov
je
or
popf
aam
stos
adc
sbb
pop
pop
push
pusha
das
les
or
sbb
imul
xchg
jnp
cmp
xchg
scas
scas
jg
xorl
test
push
testl
jae
enter
dec
mov
sbb
pop
test
dec
pop
push
pop
push
jo
sub
jb
daa
mov
leave
pop
repz
mov
hlt
pop
ret
pop
sub
xchg
ljmp
sar
insb
dec
icebp
xor
cmp
inc
out
adc
push
mov
enter
sub
cltd
orb
lret
je
mov
push
into
insl
lret
dec
cld
mov
mov
sbb
addr16
and
jne
add
test
fdivs
or
test
pusha
addr16
sub
in
sbb
int3
and
sar
leave
cltd
push
sub
negb
ss
and
dec
inc
pop
movsb
dec
enter
jb
lock
ss
jae
jl
adc
cmp
mov
xchg
out
mov
dec
repz
hlt
mov
mov
lret
xchg
roll
mov
lea
mov
loopne
lea
push
popf
or
shrl
and
aas
mov
call
rol
mov
int3
fsubr
ds
lods
lret
or
dec
mov
mov
mov
repz
stos
ja
dec
cmp
ret
push
mov
inc
aas
xchg
add
adc
xchg
jns
ds
mov
mov
mov
mov
push
aaa
fisubl
jno
loop
fs
push
subb
add
les
mov
and
loopne
push
xor
push
adc
dec
or
jns
inc
cmp
in
push
mov
sub
imul
inc
dec
icebp
clc
out
cmp
mov
cmpsb
mov
mov
push
hlt
jg
jbe
sbb
cmp
cmp
sahf
push
dec
rorb
or
fs
and
xchg
inc
adc
mov
jb
movsl
cmp
pop
mov
sbb
or
pushf
psrlq
or
outsl
nop
push
sub
pop
dec
xor
pop
pop
xlat
jl
xchg
cmc
fistpl
pop
mov
sbb
xchg
lcall
sti
mov
loop
mov
mov
pop
iret
stos
sub
push
shl
dec
in
xchg
push
mov
push
ds
imul
dec
jp
addr16
test
add
mov
rol
mov
in
testb
xchg
or
xchg
dec
ss
dec
fwait
testl
movsb
lret
and
push
lcall
dec
pop
decb
test
lods
adc
push
jns
mov
mov
or
jp
mov
test
es
cmp
push
adc
cmp
xchg
pushf
outsb
adc
mov
push
adc
test
jl
push
adc
mov
sub
sti
arpl
dec
lods
jmp
cld
sub
sub
pop
ret
dec
hlt
cmp
push
sbb
push
leave
insb
sbbl
push
sbb
or
jb
cmp
cmc
jmp
mov
and
push
jmp
rcrb
pushw
pop
xchg
adc
xchg
icebp
hlt
or
shr
jae
mov
inc
loope
je
sbb
ss
jno
pop
shrl
das
test
mov
lods
dec
mov
cmp
cmp
movsb
or
pop
insl
test
mov
pop
test
lret
mov
jb
push
sarl
inc
pop
jnp
and
cmp
jg
xchg
mov
popa
inc
adc
ss
ljmp
lahf
push
xor
std
mov
aad
cmpsb
and
or
cmp
adc
jl
cmp
movsb
lret
lahf
mov
out
add
xor
test
inc
cld
mov
insl
mov
jp
adc
ficoms
in
add
fcomp
add
dec
xchg
scas
and
sub
rolb
sti
or
jecxz
ficomps
sbb
test
dec
es
cmp
add
xlat
pop
push
dec
and
addr16
pushf
or
cmp
mov
rcl
xchg
aas
je
fwait
and
mov
cmp
cmp
lods
es
push
sti
sbb
mov
inc
sbbl
jle
shrl
push
mov
das
loopne
ja
add
jg
xchg
jo
outsb
mov
cs
addr16
lods
sub
cld
je
data16
mov
fs
mov
jno
cmp
push
sti
clc
sahf
shll
jecxz
xorl
das
outsb
cmpsb
mov
jp
xor
repnz
xorb
push
aam
xchg
and
and
cmp
repnz
jbe
and
rcrl
jecxz
inc
test
dec
loope
and
rclb
mov
jne
mov
mov
outsl
push
or
adc
sbb
cli
js
mov
scas
std
test
rcll
lcall
subb
fiaddl
inc
subb
ds
mov
mov
push
rorb
lahf
lock
jnp
xor
mov
pusha
adc
jae
addr16
mov
dec
insb
xchg
or
cmp
xchg
push
popl
test
xchg
or
ss
cmpsb
adc
test
psllw
sub
jp
lret
out
jns
scas
mov
insl
mov
adc
dec
mov
lds
cltd
test
sbb
adc
cld
jp
cli
and
xchg
mov
mov
orb
pushf
outsb
fisubrl
add
adc
dec
ja
repz
lods
in
scas
dec
push
int
cmp
mov
push
mov
cmpsb
sub
push
prefetch
or
clc
insb
cwtd
inc
sub
std
mov
push
or
xchg
leave
mov
cmpsb
cld
ja
cmp
cs
in
jmp
push
testl
push
ret
popa
or
fildll
inc
repz
test
notb
dec
pop
les
mov
pop
sub
mov
repnz
dec
sub
mov
mov
push
fldcw
test
xor
test
fistpl
mov
mov
lret
je
and
and
mov
inc
sub
daa
call
movsb
jne
in
movsb
sahf
push
sub
in
push
frstpm(287
sbb
dec
push
jbe
inc
lcall
dec
jno
testb
cmp
imul
jno
jg
mov
out
add
out
push
shrb
mov
mov
pop
scas
sbb
clc
jmp
add
and
or
sbb
das
pop
or
inc
aad
and
cs
inc
push
cs
aaa
dec
or
mov
aad
stos
xchg
cmp
iret
dec
mov
cmp
stos
cmp
int
lods
inc
loop
xor
inc
ret
sub
movsl
push
mov
in
fldcw
mov
mov
aaa
loope
in
stc
pop
cmp
xchg
iret
neg
sub
subl
add
jp
aas
mov
cmp
adc
jg
push
jmp
xchg
sti
xchg
fcoml
mov
push
or
jecxz
mov
stc
enter
mov
ja
icebp
inc
cmp
les
sub
mov
nop
jbe
mov
cli
mov
adc
fmulp
cmp
hlt
xor
mov
int3
mov
test
xchg
or
and
pop
and
sub
pop
out
xor
dec
ficoms
loop
imul
xchg
in
pop
push
test
fwait
imul
xchg
push
sarl
ret
into
shrl
sbb
mov
xchg
call
in
imul
dec
lods
bndstx
dec
pop
lcall
aaa
arpl
pop
inc
inc
push
xor
imul
sbb
mov
aad
or
inc
sarl
add
lcall
nop
dec
sti
hlt
mov
stos
xchg
adc
xchg
adc
es
repnz
xchg
jp
repz
jno
divb
mov
sbb
sbbl
add
mov
add
jne
mov
add
test
pushf
cmpsb
jnp
mov
je
add
mov
lret
xchg
fs
fs
mov
push
mov
dec
fs
cmpsl
pop
dec
push
dec
aad
mov
arpl
std
xchg
lahf
sbb
popf
repnz
insb
xchg
stos
mov
cmp
mov
jmp
add
pop
inc
and
outsb
dec
push
or
inc
cmc
mov
outsb
rcl
rcrl
xchg
push
sbb
jbe
add
inc
stos
jb
jns
arpl
cmc
scas
push
mov
loopne
hlt
sub
fwait
cli
sub
mov
fdivr
sbb
add
scas
aad
pop
ja
or
mov
xor
enter
subl
xchg
and
pop
ja
scas
pusha
fistps
pop
jle
addr16
or
fidivs
dec
lods
adc
gs
lods
dec
mov
sub
mov
into
xchg
inc
jne
add
xor
xor
dec
fwait
jne
pop
rolb
das
loop
ficompl
mov
jle
dec
stos
repz
pop
jp
out
mov
ja
mov
cmp
adc
inc
das
sub
test
fnstcw
pushw
sbbb
jne
shrl
hlt
mov
adc
sbb
add
lret
addr16
out
mov
in
je
not
push
in
outsl
inc
sbb
or
mov
jo
xor
cli
out
mov
sahf
lock
sti
sbb
cld
dec
sbb
movsb
fidivs
or
dec
dec
jns
outsb
nop
adc
std
into
jg
mov
fcomps
test
sub
jno
or
jbe
xchg
lret
fisttpll
xor
fdivr
xchg
dec
scas
lahf
or
mov
daa
add
mov
xchg
int3
into
aad
pop
shll
add
xchg
aad
sbb
sahf
loope
or
cmpsl
iret
leave
add
sbb
repnz
push
jmp
xlat
lds
test
sbb
sub
cld
scas
inc
inc
adc
push
lock
andl
insl
mov
add
je
adc
mov
in
pop
jo
push
xchg
inc
cmp
mov
clc
pop
adc
ljmp
mov
out
lods
sbb
push
dec
and
test
xor
clc
popa
mov
cmp
inc
sub
inc
cmp
push
xchg
inc
xchg
jae
pop
nop
add
pop
cmp
dec
es
jecxz
and
xchg
cmp
mov
or
push
pop
push
xchg
and
loop
jbe
push
sti
icebp
int3
dec
lea
xchg
stos
pop
push
xor
lcall
sbb
xor
jns
and
nop
pop
or
and
leave
stos
push
roll
jecxz
inc
adc
push
mov
iret
mov
test
hlt
fildll
lret
sub
fwait
int
add
and
aaa
pop
jno
xor
mov
outsw
or
add
dec
mov
aas
mov
sub
or
xor
loope
jmp
je
je
sub
inc
and
call
push
scas
dec
movnti
loop
sbb
xchg
jecxz
adc
cwtl
call
insl
icebp
push
int
mov
cmpsl
sbb
mov
jbe
int
adc
xor
and
divb
sub
insl
and
cmp
sub
insl
cmpsl
and
addr16
inc
lret
xchg
or
ret
and
sbb
cmp
loope
xchg
inc
ret
jp
iret
imul
push
push
lea
add
mov
xchg
adcl
aam
mov
test
sahf
or
mov
mov
fcoms
mov
mov
int3
ror
adc
xchg
adc
sub
add
xchg
scas
scas
cmpsl
les
or
rcl
mov
jno
pop
push
in
sbb
shlb
mov
mov
mov
pop
pop
repnz
in
and
push
jmp
push
push
mov
arpl
pop
mov
stos
shl
jge
pop
mov
pop
mov
push
push
jge
in
xchg
or
sub
mov
add
xchg
mov
and
arpl
ss
dec
sbb
jno
ss
add
fdivr
xor
dec
push
sub
pop
jne
mov
and
mov
addl
movsl
int3
mov
jae
in
jo
insl
mov
mov
push
cmp
jb
mov
aad
lea
loop,pn
cmp
sub
xor
lock
into
inc
aad
loopne
and
into
jl
mov
flds
cwtl
in
pop
jae
fs
fnstsw
imul
or
mov
dec
sbb
aas
jbe
cmp
scas
roll
sub
leave
pop
add
mov
adc
leave
or
jle
out
or
xchg
xchg
xlat
xlat
outsb
aad
xchg
mov
test
test
push
mov
lods
or
insl
aaa
mov
jns
add
stos
cwtl
das
cltd
dec
or
xchg
mov
lret
or
jg
jle
loop
dec
dec
leave
dec
mov
cmpsb
jb
and
loopne
mov
push
or
add
jmp
and
leave
ret
pop
dec
mov
movsl
pop
mov
in
xor
sub
das
mull
test
es
lods
mov
inc
out
mov
cmpsl
and
or
pop
hlt
jbe
arpl
cwtl
test
cmp
inc
lahf
mov
push
imul
sub
push
sbb
cmp
cmp
pop
cmpsb
xchg
and
mov
rcrb
inc
add
inc
fistps
xor
stos
pop
ficoml
in
jmp
iret
imulb
icebp
iret
repnz
push
iret
xchg
jmp
push
lods
and
iret
adc
mov
adc
lea
fidivs
jo
fisubrl
idivl
sub
clc
push
aam
sub
sbb
lds
call
lret
inc
mov
add
pop
gs
movsb
sti
loopne
xor
sti
repnz
and
andl
jmp
in
jp
cmp
rol
mov
push
mov
es
push
dec
push
rcrl
sbb
jmp
rolb
lds
and
xlat
jecxz
shll
jp
or
icebp
adc
pop
hlt
ffree
xlat
dec
dec
pop
mov
idivl
xchg
push
mov
stos
or
mov
fs
aas
pop
nop
repnz
sbb
dec
xor
dec
sub
push
dec
sarl
push
pushl
push
scas
jae
sbb
ja
inc
sbb
jns
fldt
push
pop
into
dec
or
xor
dec
pop
mov
mov
pop
mov
pop
xor
jns
or
lcall
or
mov
jl
and
add
das
mov
stos
es
leave
dec
mov
sub
jno
cmp
inc
in
mov
imul
xor
sbb
mov
daa
adc
pop
cmp
into
rorl
mov
xlat
cmp
orb
aaa
ja
push
cmpl
shll
leave
jns
in
add
dec
lret
dec
jecxz
inc
add
aad
mov
out
repnz
push
inc
mov
push
insl
push
fistpll
xor
pop
inc
dec
cmc
out
push
out
cltd
xchg
bound
scas
arpl
jl
or
dec
out
mov
in
daa
xchg
sbb
sbb
add
adc
mull
ret
lret
arpl
jp
repnz
sub
cmpsb
mov
sbb
lock
aam
out
mov
push
sub
pop
lods
adc
jl
addr16
lock
push
mov
or
mov
out
inc
xchg
add
repz
sbb
xchg
les
add
mov
test
fisubrl
cmp
stos
push
push
aas
fimull
mov
stos
insb
adc
dec
mov
stc
inc
xchg
xchg
sbb
jns
iret
pop
dec
mov
pop
repz
shrb
jg
data16
gs
sbbb
jge
sbb
repz
loopne
sti
inc
shll
pop
or
xor
andb
or
in
stos
jl
xchg
push
or
lret
adcl
loope
mov
jecxz
add
stos
in
les
test
inc
shr
cmp
repnz
add
leave
jg
imul
cmp
jmp
jmp
leave
adc
loop
lret
ds
inc
lock
lock
jno
pop
icebp
movb
scas
iret
shrb
cwtl
jg
enter
cmp
loopne
mov
push
adc
adc
pop
push
push
xor
hlt
shll
xchg
push
jo
insl
cmp
xorl
in
xlat
push
pop
test
je
pop
jbe
mov
sbb
xor
in
lods
les
mov
sbb
cmp
loope
and
cmpl
adc
std
add
adcl
int3
pop
roll
ret
xor
inc
fistpll
shlb
add
shll
cmp
arpl
stc
out
inc
into
fldcw
ja
inc
into
mov
fldln2
leave
cld
pusha
cmpb
mov
or
jne
insb
xchg
cmp
je
push
jp
jle
add
inc
inc
out
stc
insb
inc
gs
idiv
cltd
lret
adc
xchg
xorb
stos
stos
pop
mov
push
stc
jno
test
cwtl
jbe
scas
adc
jle
adc
mov
sbb
iret
rcr
arpl
shlb
std
lds
xchg
inc
aad
jno
mov
addr16
jg
and
movsl
cmpsb
add
jb
cmp
out
mov
in
mov
add
mov
push
adc
sbb
es
push
add
sbb
fistl
sbb
out
xchg
stos
add
jmp
push
jp
or
adc
sahf
mov
shlb
stc
xor
outsb
adc
mov
sbb
mov
clc
sarl
int
gs
push
sbb
call
mov
xlat
and
cmc
lea
pop
mov
call
loop
out
movsb
das
das
in
lahf
and
push
test
pop
cmp
rcrb
mov
adc
sbb
adc
daa
test
sbb
jbe
push
arpl
mov
mov
cmpsl
cmpsb
dec
mov
and
aas
add
jo
jl
dec
mov
nop
sar
lahf
repnz
xor
mov
js
inc
fisubrl
or
lret
sub
in
jbe
daa
lahf
mov
into
jno
les
cmpsl
xchg
jnp
ds
orl
pop
lret
mov
inc
mov
addr16
jo
pop
out
add
sarb
lret
sub
jno
int
enter
outsl
fnstenv
lcall
mov
aad
sub
lock
in
dec
dec
mov
pushl
and
push
aas
jle
aam
inc
dec
mov
lock
inc
mov
push
xchg
icebp
sub
inc
cmp
arpl
and
das
shrb
jmp
lahf
fcoms
or
data16
push
decb
cli
imul
insl
push
mov
int3
inc
out
mov
fistpll
popa
leave
xchg
sub
and
and
and
add
leave
je
sub
cmp
or
xorl
mov
adc
dec
and
push
movsl
sub
pop
add
cmpsb
hlt
cwtl
jmp
icebp
loope
add
xor
outsb
enter
fisttps
dec
or
loope
push
rcll
or
aas
loope
mov
mov
pop
fcomps
sub
jo
inc
jae
rorl
aas
inc
adc
sbb
test
scas
and
popf
adc
scas
xlat
fcoms
jbe
xchg
imul
push
std
sbb
test
movsb
jns
lds
pop
jnp
bnd
int3
insb
sti
lock
stc
cmc
xor
fdivrs
xor
and
repnz
mov
pop
ret
scas
lods
cmp
lods
adc
jp
fidivrl
sub
dec
mov
data16
sti
inc
inc
dec
movsb
mov
cmp
sbb
xchg
sub
push
jg
sub
daa
fwait
bnd
mov
out
out
mov
pop
jbe
jb
enter
call
insb
jo
leave
arpl
mov
test
stc
iret
push
lods
out
pop
and
fistpl
movsl
fisttps
imul
out
mov
test
and
jge
out
fcoms
arpl
or
call
lret
sbb
scas
cmc
lret
ret
ja
jne
int3
xlat
push
fdiv
ficompl
scas
push
push
cld
sbb
push
test
mov
dec
ljmp
cmpsl
fbstp
js
xlat
sub
pop
cltd
popa
add
lods
jbe
fwait
push
sub
dec
or
mov
out
loop
sti
sbb
or
cmp
or
dec
movsl
push
mov
mov
inc
inc
push
fwait
cli
filds
lods
add
cmpsl
xchg
js
mov
jb
into
hlt
dec
jbe
mov
icebp
adc
in
repnz
inc
popf
sub
cltd
clc
sub
pop
push
daa
xchg
inc
inc
mov
pushf
imul
jno
and
mov
loope
lds
ret
pop
sub
ds
jbe
test
jg
jo
mov
rcrl
sti
loop
sbb
cltd
scas
mov
xlat
xor
xlat
push
test
xchg
sbb
pop
icebp
push
mov
sub
cmp
mov
cld
mov
add
inc
test
inc
testb
lds
xor
pop
push
out
inc
lret
pop
hlt
mov
cmp
mov
cmpb
rcll
push
inc
aaa
mov
aas
mov
pop
ret
mov
lret
loop
inc
pop
fdivp
push
mov
and
popf
cmp
fmuls
jmp
cmpsl
pop
push
add
fimull
insb
sbb
sbb
loopne
es
aas
dec
std
das
dec
xchg
sub
or
xchg
pushf
loope
xor
int
rclb
je
dec
lret
subl
loop
fsubrs
sti
lahf
cmp
incb
aam
mov
pop
shr
mov
enter
loop
inc
stos
adc
mov
scas
inc
repz
fnsave
in
jmp
pop
scas
int3
xchg
cltd
pop
cmp
add
cmp
and
mov
aam
add
cmp
ja
rcl
add
lret
sti
cmp
adc
or
jl
jbe
data16
repz
pop
fldt
mov
fistl
sti
insl
cli
rcll
inc
xchg
loop
iret
mov
mov
mov
movsl
sub
cmp
sbb
ljmp
and
dec
fdivl
leave
mov
js
popa
sub
lods
mov
aad
pop
cwtl
cld
scas
test
scas
push
cmc
out
aaa
shl
xchg
xchg
pushf
ret
dec
pop
dec
ja
mov
mov
jecxz
aas
cmp
inc
and
mov
add
iret
or
fwait
jne
in
lea
jno
sub
es
adc
pop
sbb
rorw
sub
ss
stos
aad
cmpsb
dec
enter
lock
int3
pop
xor
cmp
jge
scas
jo
sbb
pushf
ret
enter
cmp
stos
clc
pushf
cmpl
mov
bound
and
enter
or
popf
gs
xchg
js
clc
stc
pop
sar
dec
jns
add
mov
lods
pop
loope
inc
xor
add
lcall
sub
xchg
jmp
scas
adc
outsl
lds
int3
data16
xor
inc
add
lds
mov
sbbl
dec
inc
inc
divl
inc
fsubrs
fwait
cltd
or
sub
inc
pusha
xor
dec
mov
jmp
loope
mov
sub
ret
mov
sbb
inc
mov
pop
push
mov
fcmovne
mov
int3
ret
mov
imul
cltd
xor
add
out
lret
sbb
jb
test
jge
fisubrl
pop
sbb
dec
jle
loopne
cmpsl
js
mov
pop
xchg
leave
sbb
sub
sbb
lock
jmp
ja
dec
mov
xor
popa
rcrb
add
mov
fidivrl
lretw
dec
inc
xor
and
xchg
iret
out
or
aad
outsb
and
loop
pop
cmp
xchg
js
nop
dec
mov
lcall
lret
fimull
int3
enter
jmp
mov
mov
out
outsl
xor
sbb
call
pop
stos
push
push
pop
mov
scas
rcrl
dec
cmp
jmp
adc
ljmp
jecxz
cmovg
dec
xchg
lret
in
adc
cmovno
xchg
dec
lahf
cmp
dec
or
sarl
pop
inc
mov
cmp
xchg
stos
les
or
or
insl
add
and
inc
lcall
rol
mov
stos
lret
push
mov
pop
stc
and
ret
xchg
mov
pop
out
test
cmpb
mov
or
mov
je
push
mov
mov
lods
loop
push
mov
sub
mov
dec
fisubs
mov
fistpll
ja
loopne
insl
dec
sub
inc
xchg
fists
out
mov
pop
add
das
inc
scas
sahf
pop
in
shl
dec
xchg
aaa
mov
shlb
mov
stc
dec
mov
inc
scas
adc
icebp
cld
xchg
sti
lock
mov
mov
add
flds
adc
jle
jecxz
xor
cmp
add
inc
ds
or
mov
minps
pop
jb
jg
andb
lds
sub
pop
lds
add
push
pop
add
pop
jl
jg
dec
xchg
testb
les
in
loopne
pop
fdivrl
cmp
mov
inc
push
and
mov
cmp
cld
lods
das
adc
out
cmpsl
imul
shrb
sub
andb
call
lret
ljmp
or
add
add
mov
jmp
data16
jmp
and
clc
xchg
leave
push
xchg
leave
mov
sub
and
cmp
fbstp
sbb
fucom
dec
aas
rclb
jp
inc
or
xchg
das
xchg
dec
dec
dec
pop
jb
jae
mov
imul
clc
fdivl
imul
shlb
outsl
movsl
inc
cmp
out
lahf
xor
push
repz
cmp
cli
je
lds
jns
mov
jb
adc
cmp
loopne
dec
lock
push
xchg
push
lods
sub
mov
ja
pop
out
xchg
xchg
fstpt
mov
std
push
filds
dec
loope
mov
inc
imul
cmpl
int
jbe
fs
mov
adc
arpl
enter
xlat
xchg
test
insb
sarl
cld
xchg
pushf
adc
inc
jno
clc
cs
add
cmpsl
mov
push
jmp
or
adc
inc
jl
xchg
movsl
inc
push
pop
stos
call
into
xchg
xchg
out
xchg
add
dec
xor
cwtl
add
push
ljmp
punpckldq
in
mov
inc
sbb
fs
out
mov
sub
and
or
out
inc
and
sub
or
sub
fisttpl
sub
popa
fs
fwait
mov
test
add
xchg
in
sar
dec
in
jae
sub
mov
sub
pop
nop
cmp
pop
xchg
or
sub
pop
in
in
loopne
js
loop
lea
add
inc
cmp
leave
insl
aas
or
in
adcl
jae
dec
jno
test
in
fisttpll
call
dec
jge
sbb
pop
shrb
adc
sbb
sub
cmpsl
push
push
testl
in
mov
les
jecxz
leave
fs
shl
shl
add
jbe
cmp
pop
jnp
pusha
sahf
into
sti
pop
cwtl
ficompl
sbb
mov
xchg
data16
iret
ret
sarl
mov
repnz
dec
orl
xchg
ret
jl
sub
push
mov
iret
pop
xchg
mov
sbb
mov
mov
mov
sbb
and
xor
int
iret
mov
xor
xchg
aad
mov
outsb
jbe
stc
inc
imul
loop
jg
jmp
dec
out
orb
xchg
iret
inc
dec
lods
or
loope
popf
pop
and
mov
mov
scas
lahf
mov
or
xchg
movsl
iret
xorb
xchg
pop
pop
push
popf
hlt
fldl
js
bound
push
pop
pop
pop
fcomps
ja
in
clc
lock
pop
pop
add
frstor
andb
mov
sub
mov
jge
cmp
ja
mov
je
lods
cmc
cmp
loope
inc
pop
in
psadbw
inc
xor
aaa
in
or
ret
xchg
fwait
adc
mov
sahf
fsts
int3
jl
outsb
pop
sub
mov
push
mov
shrb
lcall
es
lods
imul
dec
mov
into
shll
xchg
rcrb
push
add
pop
and
push
cltd
pop
arpl
sub
popf
push
xchg
pop
push
jmp
fs
movsb
lock
push
addr16
fcmovnb
dec
xchg
in
testl
mov
xchg
lahf
iret
sub
les
lahf
loope
fiadds
mov
mov
xchg
sub
mov
in
fsts
jg
pushf
pop
aad
stos
inc
aam
pop
repz
mov
sbb
adc
fistpll
fsts
mov
lock
decl
mov
fildl
xchg
test
cld
inc
dec
gs
fwait
pop
sub
fadd
sarb
cs
fs
lds
std
mov
add
inc
jp
mov
or
repnz
dec
add
adc
sti
insb
jg
insb
xor
repnz
push
mov
jae
lcall
cmpsl
idivb
jg
lock
pop
lods
cli
sbb
addr16
aas
cli
jae
and
mov
push
jl
sub
loope
push
mov
cmp
out
loop
pop
test
pop
dec
pop
ljmp
lock
bound
sub
or
es
pop
dec
clc
repz
lcall
into
xor
push
pop
call
lods
orl
inc
gs
push
cwtl
popa
mov
imul
and
in
xchg
sbb
lods
add
push
in
ja
lret
and
mov
por
mov
mov
xchg
ds
push
in
sub
xor
inc
add
test
mov
cmp
xor
xorl
in
xor
sti
lods
lahf
xor
test
hlt
stc
adc
repnz
push
cmp
adc
jp
pop
ds
orl
jne
mov
or
in
clc
nop
ja
dec
dec
push
repnz
jecxz
xchg
outsl
sbb
mov
jg
repz
add
inc
fistpll
sub
loope
hlt
sbb
loopne
mov
pop
lret
jge
jle
or
inc
popf
and
fwait
jge
or
mov
fildl
test
jo
setb
in
mov
pop
inc
sti
lret
lds
mov
pop
int3
into
push
xchg
stos
sbb
mov
pop
fsts
les
push
ret
xchg
fsubrs
test
out
pop
push
mov
js
push
cmp
lods
ret
mov
gs
out
out
addl
or
cmp
pushl
les
or
lcall
add
push
in
lods
in
jbe
and
inc
jge
popa
add
or
loop
and
lcall
fdivl
cltd
inc
sub
xchg
pop
lods
pop
test
ret
nop
push
adc
les
jecxz
push
fists
repz
aam
lcall
and
out
arpl
xlat
fdivs
push
pop
adc
test
addr16
pop
aam
xor
push
lahf
jae
mov
inc
neg
push
aaa
cmp
mov
jnp
xlat
sbb
js
pop
push
rcr
andb
data16
sub
pushf
stc
push
pop
jb
sbbb
or
jmp
imul
pop
push
sti
ljmp
les
xchg
xor
das
cmpsl
lret
aas
cli
push
fisttps
add
stc
lea
mov
push
sub
loope
mov
mov
push
sbbb
or
rcl
xchg
out
pop
out
sbb
int
scas
xor
sarl
mov
push
scas
pop
lods
dec
fisubl
rcrl
add
jno
push
mov
pusha
xor
jbe
cmp
cltd
ds
dec
and
sub
sahf
cld
push
cmp
mov
dec
fcompl
jne
leave
roll
scas
es
mov
rorl
pop
pop
sbb
iret
add
cmp
lock
out
mov
jne
pop
sub
jne
icebp
or
jb
and
xor
xor
repz
jno
inc
sub
xor
rcl
jmp
mov
nop
mov
pushf
jle
jg
test
popf
xchg
test
pushf
add
sub
xor
xor
xlat
adc
pop
push
jne
push
ljmp
inc
mov
clc
pop
in
leave
jle
inc
dec
jmp
mov
pop
call
roll
mov
jne
shl
rclb
hlt
and
xchg
imul
sub
and
in
aad
push
and
dec
inc
jmp
out
popa
out
out
sbb
cmpsb
das
ja
das
push
sbb
push
xor
or
bound
pop
mov
ret
mulb
mov
and
push
or
fidivrl
es
push
imul
sbb
mov
ljmp
nop
lods
pushf
sahf
pushf
jo
popa
stc
jge
inc
hlt
mov
insb
dec
lods
das
cmpsb
jb
mov
lods
mov
mov
cmp
daa
outsb
das
mov
shrl
sbbb
test
incl
push
add
aad
scas
fidivrl
mov
leave
dec
loope
xchg
fildll
jmp
push
loope
mov
or
icebp
pop
push
push
jns
ret
rcl
lcall
jge
mov
xor
pop
push
les
dec
and
push
rep
adc
jecxz
mov
ret
popa
sbb
push
int
mov
mov
dec
in
and
sub
movsb
cmp
pop
int
adc
pop
mov
pop
mov
and
cmp
inc
frstor
dec
fwait
xabort
jo
push
inc
mov
mov
pop
add
sub
jg
inc
notb
shll
nop
cltd
in
sbb
xchg
push
data16
lcall
mov
cli
adc
adc
mov
loopne
mov
and
pop
and
in
ss
clc
jae
testb
ds
test
int
mov
loope
sub
sahf
sub
ds
cli
test
jmp
adc
rclb
shrl
cmp
dec
sub
xor
scas
popa
scas
xor
jnp
xchg
rclb
mov
pop
nop
mov
addb
xchg
push
jb
or
mov
scas
push
inc
push
mov
mov
push
jmp
pop
shrl
scas
sub
arpl
mov
add
and
pop
mov
cmp
sbb
xor
lsl
rorl
and
sub
ret
inc
js
add
mov
push
xor
xor
dec
mov
pushf
xor
insb
in
sub
xor
jg
shl
inc
roll
sarl
jp
add
mov
fisubrl
stc
and
dec
ljmp
adc
mov
cmp
and
orl
push
into
push
es
scas
scas
cmp
pop
leave
mov
stc
cli
push
dec
fidivl
test
lods
inc
sub
lock
dec
inc
mov
add
push
lcall
jb
int
nop
mov
idivb
imul
add
push
scas
cmp
fstpl
mov
jns
push
lea
cmp
jmp
adc
icebp
je
mov
mov
dec
icebp
das
mov
or
cwtl
aaa
ljmp
push
nop
jg
fildll
jle
int
ds
dec
and
cmp
xor
insb
pushf
movsl
les
loopne
lcall
push
cmp
js
ret
cmp
and
ret
lods
in
pop
test
repnz
imul
sub
jno
or
and
push
pop
outsl
mov
cld
mov
inc
lcall
push
sti
cmc
lock
push
sub
bound
int3
cmp
and
mov
mov
dec
fst
pushf
je
movsl
or
int3
jb
les
cmp
lock
dec
lea
imul
repz
aas
rcll
xor
dec
int
pusha
test
xchg
cmp
xor
mov
fstl
pop
xchg
insl
and
cmp
pop
sbb
fs
adc
xor
jmp
into
mov
inc
test
adc
cmp
icebp
lahf
ss
sbb
mov
insb
add
push
aam
lock
ljmp
push
cmpl
push
sbb
movsl
push
cmp
xchg
call
jbe
mov
mov
xor
xlat
sub
in
dec
stc
insl
lods
dec
insb
int
repnz
dec
sub
lret
rcr
jbe
imul
lret
push
loop
icebp
mov
mov
mov
push
sti
pop
fidivl
pop
jb
jmp
mov
mov
rcll
lret
adc
xor
aas
cmp
ret
push
scas
rclb
mov
or
insb
aas
add
popa
xor
mov
js
mov
aad
insb
cmpsb
push
inc
scas
sbb
out
push
shll
push
js
xchg
leave
mov
dec
push
aaa
ret
push
xor
dec
inc
mov
movb
mov
sbb
movsb
dec
lods
int3
push
loope
or
leave
inc
div
push
sbb
add
aam
xor
aam
adcb
mov
adc
scas
adc
int3
shlb
repz
xchg
adc
mov
inc
cmp
pop
repnz
out
push
add
fld
add
sbb
ret
mov
insb
cs
rol
je
push
push
scas
jg
ret
or
hlt
loop
pop
dec
shrl
mov
cmovp
jbe
into
jmp
and
movsb
in
push
push
and
cmp
add
test
loop
and
roll
in
and
push
mov
cld
xchg
pushf
sbb
jno
inc
adc
inc
test
adc
call
incb
dec
lcall
push
jecxz
cmp
add
jl
cld
repz
scas
iret
popf
stc
cmp
sbb
test
hlt
mov
mov
sbb
shll
andb
lret
pop
push
xchg
dec
mov
jb
mov
scas
lret
mov
pop
cltd
cmp
dec
shrb
lea
and
mov
fcomps
add
bound
mov
lahf
push
and
out
test
xorb
pushf
les
adc
add
sbb
xlat
and
xchg
mov
jle
dec
es
insb
outsl
das
jge
jo
sub
mov
and
push
out
es
dec
je
aas
cmpsl
loopne
jle
dec
out
iret
jb
outsb
int3
dec
cmc
inc
push
clc
mov
or
mov
and
js
into
enter
in
jnp
popa
mov
mov
xchg
sub
sub
es
jae
jge
lds
mov
loope
iret
xchg
xchg
sbb
mov
add
adc
movsl
scas
in
adc
push
addb
fwait
sub
xlat
je
jp
xchg
push
jb
loopne
mov
arpl
mov
mov
cmpl
lods
orb
dec
push
add
daa
or
xor
xor
int3
xchg
imul
sub
push
emms
shlb
mov
lcall
sub
rcll
sub
imul
lock
out
lea
xchg
and
xchg
std
xchg
adc
test
push
xchg
inc
push
cmpsb
in
ljmp
arpl
adc
bound
aam
push
out
push
loope
shlb
outsb
or
sbb
add
cmp
dec
mov
or
dec
repz
movsb
pop
adc
lock
jne
and
out
cmpsb
iret
hlt
shrb
das
adc
out
out
inc
mull
mov
or
imul
setb
sub
xor
and
xchg
ret
call
fsubp
movsb
sti
loope
loopne
shrl
adc
out
outsl
fs
repnz
movsb
adcb
sbb
dec
push
jne
pop
into
adc
xchg
lods
pusha
lea
inc
sbb
xor
stos
jle
pop
cmp
push
int
xchg
outsl
xor
dec
les
inc
outsb
inc
mov
imul
ret
mov
call
or
adc
sub
sbb
les
shrl
mov
jb
cwtl
aad
notb
imul
dec
add
inc
xor
inc
lock
sub
faddp
shlb
jle
leave
icebp
outsb
imul
inc
push
insb
adc
sub
pop
add
and
fsub
inc
cmpsl
jb
cli
sti
ds
fstps
push
mov
les
jge
outsl
out
ljmp
push
mov
mov
push
gs
jl
in
pop
jno
les
push
adc
iret
xchg
int
mov
push
cli
adc
lret
sbb
pop
xchg
nopl
ret
sahf
fcomi
sahf
fnstenv
push
dec
lahf
std
xor
fidivs
repnz
xor
sub
movsb
add
int
mov
jg
cmpl
cld
sbb
dec
mov
and
sub
cmp
outsb
and
lret
or
pop
popa
pop
lds
cmpsb
bound
out
in
or
push
popa
test
mov
mov
xchg
push
incl
cmp
aaa
ds
xor
sub
lea
imul
cmp
in
aas
pop
rcrl
ret
jp
adc
and
mov
lds
pop
cmp
mov
or
outsb
ret
icebp
nop
mov
mov
out
jg
addr16
icebp
jg
imul
rorl
clc
mov
or
xchg
xchg
loop
xor
and
sbb
test
insb
outsb
push
push
dec
lds
fwait
jno
cmpsb
js
pop
lds
icebp
stc
mov
scas
shlb
dec
repnz
jp
roll
into
imul
loopne
cmp
and
lahf
fwait
mov
int
pop
movsl
adcb
mov
fcos
inc
int3
pop
les
call
xor
mov
sbb
fistpl
stc
movsl
ja
popa
stos
loopne
lock
pop
dec
inc
cltd
mov
cltd
mov
ret
ret
lret
push
add
gs
inc
std
pop
push
add
pop
xor
lret
and
cwtl
scas
hlt
jb
sub
dec
out
ljmp
and
adc
aad
test
ss
jno
out
movb
lcall
inc
inc
jmp
lods
aad
aad
sbb
gs
sahf
leave
enter
into
lods
int3
sarl
call
and
push
cmpsl
or
sub
push
inc
adc
and
push
inc
adc
sbb
sbb
adc
fld
testl
jle
push
add
lods
lods
lea
dec
xor
jae
add
ljmp
out
dec
sub
xchg
inc
sti
jmp
repnz
inc
test
xor
mov
fs
in
imul
jge
repz
mov
test
mov
adc
push
addr16
pusha
xchg
pop
push
inc
repz
xorb
scas
lods
je
jg
nop
cmpsb
xor
sub
and
rorl
lock
mov
xor
fwait
repz
sub
mov
xchg
jle
add
testl
jmp
ja
adc
pop
jbe
adc
repz
mov
rclb
iret
in
dec
bound
adc
test
test
sub
adc
nop
pop
dec
fldt
pop
cwtl
jle
mov
rorb
addr16
mov
pushf
and
mov
jae
insl
jmp
fwait
xchg
and
stc
ffree
mov
scas
ret
and
and
or
adc
sti
cmpsb
xor
xchg
inc
pusha
les
lret
mov
imul
sub
cmc
cmpsb
sub
cmp
push
xchg
js
cwtl
fdivl
pop
jp
inc
outsb
mov
out
dec
bound
lcall
mov
sti
stos
adc
lcall
sbb
pop
fcompl
ljmp
push
xor
mov
notb
xchg
int
ss
ljmp
imul
movsb
jle,pn
jp
inc
clc
jne
add
xor
inc
mov
stos
in
inc
dec
push
movsl
ljmp
rol
cmp
add
sbb
loope
push
adc
fisubs
mov
inc
sbb
sub
movsb
or
lcall
dec
xor
repz
and
imul
adc
out
sar
fimull
enter
jno
lods
je
xchg
cmc
sbb
fmuls
mov
js
add
aas
sub
daa
stc
add
movsl
mov
adc
insl
adc
mov
sbb
scas
pop
cmp
mov
js
jae
and
sub
pop
mov
adc
inc
outsl
daa
out
and
push
push
je
ja
bound
adc
sahf
imul
movsl
cmp
inc
lds
scas
ret
xor
pop
mov
xor
imul
lahf
sbb
call
sub
into
push
lods
inc
cltd
iret
les
negl
repnz
sbb
mov
or
pop
jne
psubd
mov
pop
mov
in
or
rol
ret
sub
push
jmp
and
cmpsl
mov
sub
cmc
arpl
gs
popa
xchg
dec
outsb
je
inc
or
fnclex
mov
pop
lcall
cs
adc
testl
mov
jo
pop
dec
aas
xchg
fwait
inc
loop
adc
dec
inc
lods
stos
lods
sub
xchg
pushf
pop
mov
or
roll
test
pop
dec
in
add
clc
sarl
int
push
les
xor
xchg
inc
xlat
push
out
cli
pop
push
jnp
xchg
xor
mov
pop
mov
mov
loop
mov
mov
bnd
lahf
jge
popf
leave
adc
mov
stos
push
cmp
lahf
mov
xchg
mov
mov
cmp
outsb
leave
divb
sub
fstpt
sbb
jbe
cwtl
jbe
cmp
lret
repz
push
xor
sub
push
mov
pop
test
mov
das
int
orb
jmp
stos
pop
enter
push
sub
push
mov
test
cmp
cld
xchg
addr16
addr16
pop
in
mov
ljmp
cltd
push
dec
pop
stc
add
pop
lcall
outsl
fmulp
mov
movsb
sbb
int3
push
fidivrl
stc
stos
push
bound
aad
mov
mov
dec
mov
pusha
rorb
adc
stos
stc
bound
and
fwait
enter
pop
out
popa
outsl
outsb
cmp
push
mov
dec
das
lret
jle
push
pop
ja
test
sbb
into
inc
cmc
dec
imul
mov
ja
mov
xlat
andb
mov
out
btrl
adc
sub
pop
add
int3
xor
push
fldt
xor
mov
movsl
int3
xchg
out
lock
movnti
mov
pop
adc
mov
mov
out
lods
cmp
fwait
insb
xchg
test
je
adcb
xlat
fucomp
mov
dec
ljmp
loop
mov
adc
pop
xor
sti
push
std
cmp
testl
sbb
or
cwtl
ja
std
mov
dec
inc
orl
pushf
ja
sbb
test
mov
jecxz
sub
jb
jp
mov
sbb
dec
arpl
adc
rcr
dec
daa
data16
pushf
jbe
insb
xor
sbb
or
loop
or
fisttpll
mov
fcomi
fwait
sbb
dec
inc
jmp
xchg
ret
sbb
out
or
imul
jne
xchg
lods
fists
push
xor
mov
lret
push
and
dec
sbbl
sub
data16
rcll
mov
addr16
xchg
test
xlat
mov
adc
pop
cmp
push
or
fidivrl
push
xchg
outsl
rol
or
clc
aam
mov
pop
inc
loopne
xchg
lods
pop
enter
pop
loope
aad
mov
mov
adc
xor
mov
fld
leave
push
jno
sbb
mov
cltd
ficompl
pop
xchg
add
daa
cmp
pushf
xchg
pop
add
cs
test
shlb
aaa
icebp
insl
movsb
jae
dec
push
loopne
jl
cmpsb
adc
decl
pop
in
divl
test
add
lea
xchg
clc
cmc
negl
ja
mov
dec
pop
xor
test
lods
sbb
inc
outsb
leave
add
std
cmc
and
out
xchg
and
jnp
scas
adc
and
cmp
incl
fs
mov
hlt
xchg
xchg
into
pushl
pop
xchg
lahf
xchg
repz
cmp
insb
xor
add
shl
xchg
mov
sbb
cmpsb
lds
dec
xor
in
push
fcmovnu
outsl
out
dec
lea
cmp
pop
aaa
xchg
mov
dec
mov
sbb
andl
xor
or
push
cmp
push
add
mov
adc
pop
leave
into
mov
pop
lods
loopne
xor
push
mov
xor
test
movsl
sbb
xor
jmp
fidivl
cs
jnp
or
cmp
les
icebp
lods
in
or
mov
inc
push
xchg
push
mov
mov
inc
adc
lods
dec
jb
pusha
jg
lret
in
stos
or
daa
iret
addr16
jbe
fidivs
clc
dec
out
inc
pop
or
mov
and
cld
cltd
cltd
hlt
jg
pop
popf
iret
push
sbb
mov
add
cmp
lret
testb
movsb
mov
sub
lods
mov
out
outsb
lock
xchg
mov
test
xor
dec
int3
in
push
cmpsb
cmpsl
stos
stc
das
or
mov
push
mov
mov
push
clc
dec
sbb
scas
ja
fadds
xor
push
xor
mov
dec
adc
lret
jl
jg
fisubs
xchg
cli
mov
cmp
pop
sub
push
jo
xchg
xchg
rolb
and
push
mov
cltd
cmpsl
mov
sub
stos
out
daa
cmp
lods
cmp
jle
testl
fdivrp
fnstenv
mov
cmp
dec
sbb
mov
or
inc
or
mov
mov
sub
sbb
mov
mov
cmpsl
cmp
into
or
adc
dec
stos
pop
cs
add
sbb
xor
inc
imul
add
ljmp
sbb
mov
lods
add
fcmovnb
inc
arpl
pop
push
mov
mov
lret
outsl
ss
movsl
aam
test
std
xchg
das
cld
jl
repnz
inc
mov
cmp
mov
cmp
jle
mov
push
jnp
mov
loope
nop
lods
gs
and
addr16
lret
scas
pop
mov
insl
mov
mov
push
pushf
fnstcw
movsl
inc
mov
fidivs
dec
cmpsb
jmp
clc
ficompl
les
pop
jo
andb
add
into
sbb
dec
mov
test
in
test
mov
pop
lret
aam
adc
mov
inc
iret
xor
xchg
mov
and
scas
pop
add
inc
xchg
push
push
icebp
loope
sti
sbb
ljmp
sub
fisubs
mov
ss
std
mov
in
test
adc
cmp
and
shll
push
lds
mov
or
xchg
xchg
movsb
inc
sub
test
and
daa
outsl
clc
outsl
dec
es
add
sbb
jmp
call
inc
data16
mov
jp
adc
icebp
lea
shl
mov
dec
fsubrl
fidivs
loope
and
nop
push
testl
dec
shll
mov
push
cmp
in
mov
mov
push
out
je
ret
enter
add
or
scas
insl
mov
pop
mov
mov
rcrb
addr16
cwtl
mov
sub
mov
mov
sbbb
jae
sub
fwait
lods
sub
xchg
sub
xchg
and
std
imul
cmp
aas
or
cwtl
pop
jecxz
push
cmp
ja
aaa
inc
mov
sbb
mov
or
movsb
stc
pop
cmp
jno
lahf
mov
jo
xchg
outsb
jmp
mov
cmp
and
nop
and
jb
scas
push
mov
mov
adcl
add
into
out
jecxz
xor
sub
testb
or
pop
dec
xor
mov
addr16
jmp
insl
out
or
jo
pop
xchg
add
or
push
inc
sbb
inc
ds
sbb
cs
sbb
out
push
mov
xor
lods
xchg
or
push
inc
aas
add
and
or
fs
dec
xchg
lds
pop
das
rcrb
cltd
nop
push
jno
inc
stos
int
jp
cmp
mov
out
xchg
dec
push
inc
outsb
aad
rcll
lahf
rorb
cmp
pop
pop
pop
and
movsl
fs
and
div
aam
movsb
sbb
stc
mov
aad
or
cmp
lahf
pop
or
stos
sub
or
lret
aam
push
sbb
pop
sti
lret
jecxz
movsl
mov
sbb
and
rcrb
mov
xchg
arpl
rcl
or
mov
sub
adc
adc
mov
es
in
mov
rcrl
loope
nop
jp
and
outsl
add
sub
in
mov
push
mov
lods
in
xchg
frstor
pop
or
mov
sahf
into
into
push
bound
push
xchg
test
mov
jae
into
leave
cmp
test
loope
inc
push
mov
dec
repz
sub
aad
dec
in
jmp
and
cld
cltd
push
inc
sbb
ret
jae
mov
fmul
fwait
dec
mov
iret
outsb
inc
or
sbbl
ja
out
stos
fists
out
jo
ljmp
fadds
into
or
cmova
mov
jbe
cmpsl
inc
lahf
mov
in
mov
test
repz
jmp
in
mov
xlat
scas
mov
jno
test
add
testb
dec
cmp
xchg
cltd
sbb
lcall
mov
sbb
and
push
lahf
mov
cld
outsl
push
add
pusha
mov
stos
insl
fs
pop
pusha
or
add
in
fiadds
flds
lcall
jbe
push
fisubrs
imul
out
pop
fs
pop
mov
imul
pop
pop
call
daa
sbb
or
fadds
movsl
outsl
inc
cli
jno
aas
scas
popa
lea
cmp
xor
cmpb
sbb
bound
and
clc
aad
out
ds
mov
orb
daa
and
mov
pop
repnz
jno
popf
xor
sbb
lret
cs
mov
xchg
jo
imul
inc
pop
inc
outsb
jle
insb
pop
mov
cmp
stc
cmp
lcall
xchg
aas
xchg
test
mov
neg
shll
inc
push
outsl
jle
inc
mov
in
dec
bound
jae
sbb
dec
pop
stc
pop
cmp
push
mov
jno
jecxz
inc
push
pop
jns
fxch
je
push
inc
sub
push
sub
xor
and
mov
repnz
sub
inc
pushf
imul
stos
adc
push
lahf
aam
imul
fcmovnbe
inc
popf
ds
mov
loop
push
jle
stc
push
jg
inc
pusha
xchg
cmp
mov
jg
les
ss
mov
cmp
sbb
mov
out
int
push
mov
add
xor
xor
sbb
lods
test
aaa
in
call
ret
movswl
test
iret
nop
push
xor
mov
test
mov
aam
adc
inc
mov
pop
xchg
fidivl
out
and
icebp
mov
mov
inc
xor
push
adc
cmp
rclb
add
rclb
outsb
fnstcw
testl
push
pop
stc
andb
movsb
shlb
xchg
or
std
or
scas
push
xchg
cmp
xor
cli
jnp
loop
and
loopne
adc
and
daa
pusha
sub
fsubrs
popf
jne
xor
mov
movsl
fldenv
inc
jl
ficomps
dec
imul
ret
pop
dec
add
pushf
and
call
das
lea
lds
mov
mov
rcrl
int
out
bound
in
pop
push
es
fwait
lods
and
fs
inc
cltd
sub
neg
push
add
daa
int3
iret
rcrb
xor
adc
sub
insl
or
pop
mov
or
or
fisubrs
cwtl
jbe
pop
stc
stos
or
out
btc
push
clc
mov
and
cmpl
mov
leave
xchg
scas
lea
adc
add
clc
out
rcrl
dec
dec
lods
fstpt
xor
sbb
cmc
out
jae
pop
push
andl
addr16
cmc
or
lock
xor
shll
adc
imull
mov
sbb
arpl
je
jbe
sbb
mov
push
sahf
jae
idivb
and
cs
mov
jg
rolb
mov
mov
jle
in
lcall
mov
add
out
test
jnp
pop
fwait
scas
and
or
lret
in
popa
out
aad
sahf
pushf
sahf
or
and
arpl
pop
icebp
fwait
mov
adc
inc
jb
mov
scas
sbb
add
pop
stos
scas
lret
fsubl
jmp
sbb
aaa
xor
add
push
loopne
xor
xor
mov
sbb
les
imul
pop
cli
pop
adcb
dec
pop
popf
jp
push
scas
aad
incb
fnsave
data16
xchg
push
xchg
cmp
divl
scas
or
mov
inc
jnp
jmp
and
jbe
dec
stos
imulb
mov
mov
mov
pop
lret
lock
xchg
stc
les
enter
insb
jnp
xor
pop
jno
and
or
std
mov
adcl
push
fiaddl
sbb
aam
push
mov
out
cli
stos
add
mov
push
sub
aas
cmpsb
fdivrl
xor
add
jge
stc
les
stos
sahf
xchg
jo
sub
insb
cld
xchg
daa
das
loop
mov
pop
sbb
push
jb
popa
cmp
jecxz
or
sbb
stc
adc
inc
mov
sub
xor
xchg
sub
subb
xchg
dec
sub
mov
cmpsb
aas
mov
jnp
mov
je
lcall
xchg
inc
int3
xor
jnp
xchg
add
xor
cmc
fiadds
out
mov
loopne
fs
xchg
xchg
or
sub
sbb
orb
xchg
add
push
sbb
popa
aad
inc
int3
mov
push
xor
jno
ja
fwait
inc
popf
in
jp
cmp
mov
inc
adc
nop
inc
pushf
mov
inc
repnz
imul
sbb
jle
cmc
iret
jge
movsl
test
or
push
pop
jae
cmovb
popa
adc
gs
mov
aaa
movsb
mov
inc
lcall
sub
cld
pop
insl
scas
jno
leave
mov
movsb
push
cltd
aad
add
cmpsl
imul
dec
aas
mov
jnp
fimull
push
movsb
fwait
push
push
pop
mov
add
arpl
xor
lds
xchg
or
cmp
jle
mov
daa
nop
cmp
hlt
pop
xor
xchg
sub
jge
xchg
dec
call
dec
push
in
js
cmp
xchg
jns
push
popa
adc
sbb
divb
in
xor
cmp
repz
fisubl
gs
fwait
lods
or
and
xor
cwtl
test
mov
cwtl
or
mov
dec
push
mov
sbb
inc
push
mov
std
pop
cwtl
jmp
adc
lods
fadds
pop
bound
mov
mov
les
xor
out
sub
leave
fsubrl
or
dec
mov
scas
dec
js
inc
in
lea
xchg
outsl
mov
push
rorl
rolb
add
sbb
loope
out
sti
ja
xchg
adc
out
jb
fwait
rcll
mov
lock
xlat
int3
test
jge
fdivl
cmpsl
test
xor
cmp
arpl
mov
adc
push
add
popa
xchg
mov
xchg
mov
data16
pop
cmp
pop
scas
fisubl
xor
mov
mov
or
cmp
scas
ss
int
and
mov
sbb
xchg
aas
xchg
cmpsb
xchg
cld
shlb
inc
mov
fiadds
adc
std
addr16
gs
into
call
pop
daa
jnp
imul
ret
xlat
mov
mov
and
jae
shrb
push
test
mov
lods
pop
loopne
dec
lea
mov
fnstcw
mov
cld
pop
xchg
fwait
loopne
jae
cmc
xor
divl
push
lods
inc
cltd
push
cmp
push
std
sbb
sbb
push
inc
inc
lock
push
leave
cmpsb
and
jecxz
push
dec
cli
test
cld
insl
xchg
jl
pusha
mov
stos
mov
add
les
fsubl
mov
out
adc
dec
lahf
jge
divb
push
rorl
test
pop
cli
cld
scas
sbb
pop
iret
dec
inc
xchg
mov
addr16
pop
fildll
cwtl
call
sbb
leave
gs
mov
repz
les
adcb
cmp
rcl
push
mov
leave
nop
or
popa
faddl
andl
scas
sub
dec
push
xchg
daa
pushf
xchg
jo
cmp
hlt
jbe
mov
ljmp
icebp
leave
pop
stc
push
sahf
push
dec
push
hlt
xchg
rcr
and
sarl
jb
cs
out
cmp
xchg
mov
inc
dec
fnsave
ret
outsb
in
fistl
and
out
push
loop
js
call
sub
ret
rclb
jle
jge
dec
jno
xchg
pop
xchg
cmpsb
in
ret
cmp
mov
into
cmp
shll
and
enter
mov
pop
and
or
xor
jg
push
xchg
out
add
jns
inc
dec
push
gs
add
out
adc
xchg
adc
lret
leave
xchg
lods
clc
in
mov
pusha
push
add
arpl
mov
lcall
jo
in
inc
fldt
jae
ss
popa
cltd
insl
outsl
stos
adc
mov
jge
lcall
popf
inc
sub
pushf
shl
sti
mov
fwait
inc
sub
sub
in
gs
lahf
sti
push
pop
sbb
sub
out
popa
adc
push
xchg
lods
ljmp
xlat
jge
cmpsl
fcoms
push
cmp
jo
mov
ja
arpl
or
cld
in
scas
mov
or
dec
add
dec
out
loopne
test
dec
pop
js
unpcklps
inc
sbb
in
pop
repz
sarl
jge
adc
shrl
xor
sahf
das
mov
push
lods
jbe
fistpll
cwtl
pop
jnp
sarb
popf
pop
push
in
lods
lods
daa
ss
sti
mov
scas
sbbw
push
aaa
pop
fimuls
inc
test
mov
adc
and
lea
sbb
pop
cmpsb
jmp
xlat
call
pop
mov
cmp
nop
dec
mov
push
call
popa
inc
fldl
sbb
das
shl
stos
sbb
mov
dec
inc
hlt
xchg
lea
cs
mov
lea
pop
jl
movsl
iret
push
mov
sti
dec
or
sbb
sub
rcll
fwait
push
pop
xchg
adc
sbb
sti
jb
dec
out
push
sbb
icebp
cltd
mov
sub
or
sub
enter
push
adc
mov
dec
mov
rcrb
mov
sbb
xchg
por
push
inc
stos
arpl
push
push
sar
cmp
push
sbb
sahf
ljmp
add
dec
and
sub
pop
inc
es
std
or
loope
mov
psraw
mov
mov
aad
cmp
pushf
add
pop
xchg
das
fstps
cvtdq2ps
push
les
lcall
adc
inc
push
xchg
jecxz
hlt
aam
incl
outsl
popf
mov
xor
std
iret
push
sub
fildll
dec
ret
loop
xor
imul
mov
sbbb
push
mov
xchg
xchg
out
clc
jb
add
jmp
out
fst
xor
cmp
and
fsubs
repnz
rcrb
in
xchg
test
cmp
and
out
mov
push
fsubrs
sbb
cmp
std
xchg
nop
sbb
repnz
sbb
jge
add
and
or
fcmovnbe
lock
cmpsl
pop
or
lcall
aad
pop
stos
iret
jl
popf
pusha
dec
call
xor
push
lods
xor
dec
lea
lahf
mov
xchg
push
adc
js
fmuls
mov
lock
jno
scas
fcmovne
xor
out
push
dec
sbb
int
iret
xchg
and
fisubrl
adc
pop
pop
loopne
test
out
cmp
push
iret
cmp
dec
shr
mov
aam
stc
mov
fwait
pop
or
mov
mov
out
add
addr16
in
jmp
xchg
clc
btc
mov
jmp
sub
xchg
xchg
mov
shrb
dec
stos
push
shl
insl
not
divb
dec
and
sbb
iret
mov
push
push
xchg
movsl
cmpb
xchg
dec
aas
inc
repnz
and
inc
mov
sbb
mov
addl
sbb
mov
fwait
add
inc
push
push
cmp
jge
insl
addr16
mov
mov
push
pop
test
mov
fsubr
mov
hlt
adc
lods
adcb
pop
gs
dec
inc
out
movsb
aas
mov
outsb
add
mov
rclb
push
testb
or
dec
jge
mov
in
fldcw
cmc
popa
dec
outsb
and
fistl
testb
gs
add
jmp
in
cli
mov
push
add
pushf
xor
xor
aam
pop
repnz
add
mull
idivl
xor
imul
dec
stc
fwait
shlb
add
cmp
mov
push
pop
scas
mov
jno
nop
data16
addr16
lods
inc
sarb
jecxz
add
les
sub
mov
adcl
push
adc
lods
pop
sahf
mov
push
mov
jecxz
mov
mov
inc
daa
jnp
aas
adcl
cli
dec
mov
outsl
lods
mov
loop
push
aaa
mov
loopne
inc
and
cmp
sbb
pop
sbb
popf
js
push
jmp
pop
std
jecxz
sbb
cltd
push
xlat
imul
or
and
push
sub
xchg
insb
mov
mov
call
mov
xor
mov
jmp
mov
scas
cltd
aaa
loopne
adc
cmp
enter
sub
inc
in
ret
dec
jns
inc
movsb
push
xor
mov
inc
jnp
mov
lock
dec
cmc
jbe
orb
jbe
sub
cmpsb
adc
aam
out
fisubrl
and
push
pop
faddl
push
pop
jns
mov
orb
int
jle
stos
pushw
jno
and
pop
sahf
insl
or
and
jp
das
jecxz
or
jg
sub
dec
int
addb
cmp
pop
test
fcompl
xor
push
push
add
or
stc
inc
push
outsl
das
add
mov
fstp
rep
jecxz
pop
xchg
aas
fs
jns
xchg
mov
push
xor
lcall
cmpsb
sahf
aam
xor
sti
les
cwtl
mov
adc
ret
stc
or
and
jnp
lock
sahf
ds
dec
xorb
add
lea
std
imul
ret
orb
push
outsb
cmp
repnz
push
jnp
inc
cmp
imul
aam
stos
inc
jae
cmp
mov
cmp
jp
in
jno
imul
arpl
aas
fnsave
bound
jg
xchg
jge
mov
sti
roll
dec
add
test
inc
lock
outsb
push
fidivl
shlb
cmp
or
out
out
dec
fildl
outsl
lret
je
jae
mov
call
push
cli
addr16
push
sbb
mov
pop
das
andl
xchg
aaa
ja
dec
fdivp
jl
sub
repz
xor
jge
adc
or
int3
adc
pop
dec
int3
sti
std
mov
xlat
ljmp
sbb
sbb
push
xchg
fisubrl
and
test
addr16
aad
sub
into
daa
lds
ror
add
lcall
xchg
pop
repz
xchg
mov
add
jnp
push
in
mov
jno
mov
sbb
jmp
xor
bound
mov
cmp
rcll
ja
test
stos
icebp
mov
shlb
sub
cmp
push
add
icebp
mul
pop
pop
lds
jb
dec
xor
pop
xchg
mov
rol
push
mov
out
ja
mov
negl
fcompl
mov
mov
clc
std
xchg
idivl
jecxz
push
pop
push
stc
les
mov
sub
jnp
lods
jg
fincstp
roll
mov
xchg
out
mov
jb
in
jno
xorl
in
es
sub
jnp
ss
jle
push
stos
imul
cli
push
jp
sahf
xchg
in
repnz
imull
repz
add
jno
fldcw
pop
hlt
cmp
add
loop
je
mov
sbb
pop
jecxz
movsb
jne
jns
inc
mov
xor
mov
and
enter
mov
push
movsl
pop
dec
std
out
cmc
test
sub
leave
testb
mov
pop
sbb
mov
int3
pop
jmp
idivb
lret
dec
sub
leave
daa
mov
call
popa
mov
adc
movsl
and
jb
sub
push
pop
mov
push
xchg
jne
push
lret
pop
dec
std
mov
adc
jecxz
cmpsb
cmpb
out
scas
pop
xchg
add
jl
rcll
dec
mov
cmp
mov
icebp
popf
pop
sub
out
xchg
lret
fstpt
nop
or
das
out
test
data16
add
idivl
jno
incl
jle
xor
mov
rorb
add
jo
mov
inc
insl
test
arpl
and
jl
mov
mov
dec
dec
push
or
jne
xor
dec
inc
push
dec
sarb
aam
or
sub
enter
jp
outsb
inc
mov
add
add
test
mov
stc
pop
sub
adc
sahf
jnp
call
stos
je
into
add
inc
dec
lret
push
cmc
jg
jle
popf
je
loop
sub
jecxz
mov
fists
ss
or
clc
push
and
mov
out
leave
test
mov
lret
sbb
lcall
movsl
pop
xor
mov
aaa
out
test
cmp
inc
mov
rcr
or
in
das
adc
in
sub
and
sub
jns
push
fwait
sarb
or
xchg
xchg
js
outsl
divl
inc
bound
ret
xorl
xlat
fidivrs
in
lret
shrb
dec
xor
adc
ljmp
cmp
sub
sub
inc
sub
cmp
jb
insl
adc
lret
xor
xor
fists
cmp
mov
xor
jge
push
mov
inc
and
lcall
mov
and
sbb
fsubp
xor
insb
mov
ds
pop
stc
scas
jo
bound
mov
notb
enter
sbb
mov
int
pop
mov
pop
fldt
jb
pop
cmp
mov
inc
les
mov
rcl
mov
jae
or
pop
cs
je
dec
jnp
iret
pop
jno
movsl
test
pop
push
inc
popa
cmp
test
imul
adc
std
pop
mov
dec
cmpsl
mov
and
mov
xorl
mov
test
jmp
hlt
dec
imul
or
sub
cmp
jno
cmp
aad
push
dec
dec
pop
mov
xor
xor
cwtl
fldenv
pop
push
adc
cmp
andb
adc
in
sbb
insl
or
dec
fwait
shll
push
pop
cmc
enter
and
fdiv
xchg
fldcw
cmp
in
loopne
cmp
leave
lea
or
sbb
adc
insb
in
or
dec
out
fs
push
cli
cmp
psllw
aas
cs
xchg
out
fsubr
pop
ja
inc
sub
ja
mov
sbb
inc
dec
xchg
pop
or
repnz
mov
jb
scas
out
dec
mov
lea
lcall
adc
sbb
adc
or
adc
inc
mov
jb
stc
dec
jo
cld
xor
push
cld
adc
push
dec
jne
outsb
xlat
in
cli
jle
mulb
loope
or
ljmp
or
scas
jge
lret
iret
fisubs
push
pushf
cmpb
stc
cmp
cmp
call
and
mov
or
movsl
sub
imul
xchg
pop
iret
xor
in
lds
das
je
int3
sbb
and
cmpsb
popa
lds
stos
xor
mov
movsbl
sti
jns
imulb
cmp
xor
mov
loopne
inc
push
pop
je
sub
jp
outsb
mov
mov
mov
leave
cmp
jae
mov
popa
in
pop
dec
inc
adc
add
mov
inc
dec
sbb
push
sub
cltd
fcom
incb
cmp
dec
and
mov
fnstenv
mov
jg
into
push
call
cmp
inc
cltd
pop
or
pop
shll
mov
dec
push
jns
xchg
shlb
adc
adc
mov
inc
sbb
dec
jecxz
arpl
push
jge
sbb
adc
xchg
xor
stos
xor
in
adc
sbb
iret
fistpll
ret
jno
jns
jp
push
js
cmp
and
inc
aaa
imul
movsb
pop
inc
and
mov
aas
test
add
not
push
inc
or
dec
mov
push
cmp
push
push
es
adc
xchg
dec
popf
xor
or
aam
mov
push
in
sub
mov
repz
push
xor
adc
push
cld
gs
add
mov
stos
addr16
lods
push
mov
insb
repz
or
xchg
fsubr
out
repnz
fimull
jge
sar
jbe
lods
add
popa
xor
adc
outsb
mov
dec
xlat
jecxz
or
stc
aaa
lea
push
dec
add
lret
pushf
xor
cmp
int
cmpsb
push
and
jno
xor
add
loope
imul
inc
bound
shll
mov
push
aad
push
inc
xchg
stc
fcomi
sub
sbb
es
adcb
sahf
mov
sbb
hlt
fmul
out
iret
fwait
mov
mov
xor
mov
jle
dec
std
sbbl
xor
out
push
pop
repnz
xor
add
xor
out
cmp
in
push
mov
and
mov
fsubrl
xchg
push
lahf
jnp
and
pop
pop
in
mov
mov
std
push
divb
pop
fiadds
call
adc
aas
jmp
decl
lcall
ret
loope
and
dec
xor
sub
xchg
fiaddl
dec
sbb
xor
push
pop
lcall
in
pop
ljmp
and
call
sbb
jle
sub
adc
out
stos
and
pop
mov
adc
mov
mov
cmp
push
mov
cltd
stos
dec
fadds
loop
std
and
imul
dec
push
mov
sbb
imul
cmp
xchg
xchg
adc
push
clc
sub
xchg
sahf
fwait
test
inc
out
mov
and
pusha
pop
mov
mov
cmp
cltd
or
mov
nop
inc
dec
xor
lods
stos
xchg
jbe
sub
add
xchg
out
jecxz
xor
sbb
shrl
push
xorb
cmp
stos
sbb
cld
fistpll
mov
bound
push
xlat
push
mov
mov
add
jmp
rorl
mov
shr
inc
sbb
nop
stc
jne
jmp
sbb
and
mov
repz
nop
jbe
dec
or
dec
pop
jle
pop
cli
sbb
cwtl
fnstcw
fdivs
jbe
in
pop
sbb
ret
jge
push
or
lds
in
pusha
leave
or
pop
sub
sub
sub
in
arpl
int
mov
pop
xchg
jbe
or
js
cmpsb
and
push
pop
nop
pop
push
lds
icebp
mov
and
mov
iret
ds
ja
nop
cmp
dec
push
cld
insb
js
test
testl
jle
lret
das
mov
popa
and
add
mov
gs
fistpll
mov
lahf
adc
mov
mov
xchg
push
repz
insb
mov
loope
inc
or
insb
add
std
jb
jae
push
xor
std
je
and
in
mov
scas
out
inc
aas
nop
push
jp
cmp
call
or
clc
xchg
lods
in
fisubs
out
cmp
ds
mov
stc
cwtl
inc
test
mov
jne
pushf
sarb
xchg
cmc
aas
hlt
xchg
mov
jecxz
stos
lods
pop
add
leave
imul
push
cmc
mov
not
enter
les
icebp
jle
arpl
adc
mov
call
push
lcall
lea
lret
insl
je
xlat
dec
outsb
dec
movsb
inc
inc
je
sbb
sub
push
jecxz
or
fwait
stc
les
dec
add
inc
pop
addl
fcoml
dec
xchg
push
ja
shrl
ret
mov
gs
xor
and
insb
adc
ret
mov
push
imul
mov
sub
lods
pop
xor
inc
nop
mov
pop
and
pop
daa
cmp
cmp
test
scas
and
lahf
je
add
sbb
push
jno
xchg
stos
aas
push
jle
push
mov
adc
cmp
cmc
pushf
movb
xchg
xchg
xor
adc
sub
add
popf
xchg
or
dec
add
mov
mov
pop
pusha
xor
out
mov
sub
in
mov
adc
lock
fwait
jle
lea
inc
cmc
push
xchg
shlb
nop
jns
mov
ja
mov
in
icebp
push
push
push
xor
cmp
mov
and
xchg
or
dec
mov
into
cltd
or
outsb
hlt
cs
sub
mov
lret
aam
daa
in
pushf
int
icebp
bound
jo
dec
push
dec
sbb
push
mov
pop
ds
jae
gs
dec
xor
out
xchg
push
cmpsb
push
loope
out
push
pop
push
mov
sbb
in
xor
stos
daa
cld
xor
idiv
insl
div
hlt
loopne
inc
xor
pop
ret
fs
sub
fnstcw
repnz
gs
sub
ljmp
xor
cltd
sub
pop
cmp
jmp
xor
lret
mov
leave
add
dec
test
xchg
sub
repnz
jle
pop
pop
aam
inc
mov
outsl
mov
fbld
inc
sub
pushf
and
inc
aam
call
xor
lcall
aas
xor
daa
sahf
scas
mov
stos
imul
inc
sahf
add
push
mov
ficomps
adc
mov
data16
int3
jle
test
js
push
cld
sub
dec
jp
push
negb
cltd
cmpsl
orb
xor
push
les
fnstcw
xor
and
pop
push
std
call
hlt
dec
and
dec
gs
inc
inc
adc
cmp
lock
jmp
je
pop
pop
jge
mov
or
add
cld
jno,pn
iret
jne
xor
ficoml
mov
cwtl
jo
sub
mov
add
jmp
repz
fdivrl
xor
cld
cmp
adc
mov
or
sub
fbstp
push
push
add
dec
xor
cmp
mov
orb
pop
dec
jnp
inc
mov
nop
inc
aas
mov
pop
loope
ret
dec
jae
test
inc
in
mov
das
pop
out
loope
fimuls
inc
mov
xchg
test
jmp
pop
int3
or
bound
mov
in
push
sahf
jno
enter
push
jnp
lock
sub
std
cmpl
pop
mov
mov
and
inc
lods
and
inc
cmpsl
fnsetpm(287
aad
in
pop
cmp
shrb
les
mov
out
xadd
testb
outsl
xchg
icebp
int
shr
or
stc
or
push
dec
fstp
lods
aam
insb
push
insl
lahf
push
cmp
add
std
sarb
mov
dec
mov
mov
pusha
and
jnp
and
add
jmp
rcl
push
sarl
dec
push
mov
xor
adc
lahf
xchg
aaa
or
movsl
incb
mov
fimuls
stos
inc
mov
ja
divl
mov
leave
and
outsb
sahf
sbb
out
aas
aam
and
xchg
sbb
mov
mov
ret
mov
inc
shrb
jg
shr
aam
popl
je
lods
and
dec
mov
cltd
push
mov
mov
clc
lods
loope
cmp
cwtl
xchg
out
push
insb
mov
jecxz
push
loope
arpl
imul
sub
xchg
push
pop
std
sbb
aad
mov
and
cmp
pop
add
out
lret
jmp
pop
dec
xor
incb
dec
inc
fcompl
adc
fistpl
cmp
fistps
mov
cmpsl
add
andb
call
in
and
xchg
test
stc
out
mov
push
and
dec
cmp
scas
adc
js
pop
adc
clc
mov
sbb
dec
nop
pop
inc
decl
repz
xchg
and
addr16
pop
fstpl
ret
outsl
xor
cwtl
cmp
les
mov
jl
push
inc
ret
pop
adc
jmp
dec
push
insl
cmp
inc
pop
add
pop
fnstcw
mov
repz
sub
xchg
jne
mov
mov
bound
repnz
clc
insb
mov
inc
mov
jl
jne
ljmp
mov
cmp
mov
mov
pusha
repz
sub
idivb
cmp
test
repz
and
sahf
out
movsl
imul
outsl
cld
gs
push
fcoms
cmpsl
lcall
test
repz
push
out
cs
pop
adc
push
inc
jno
pop
stc
dec
push
mov
or
mov
call
push
bound
shl
push
rcll
add
fisttpl
test
pop
mov
jb
mov
test
jge
dec
adc
push
add
pop
pop
adc
mov
adc
aam
shll
les
lock
scas
xor
dec
into
insb
pusha
fisubs
aas
and
mov
mov
push
mov
xor
mov
ds
cli
scas
pushl
arpl
fmull
movsb
pop
je
in
sub
arpl
mov
jno
insl
enter
xchg
push
xor
testl
ffree
mov
dec
xor
lcall
or
add
jno
incb
push
sbb
pop
sub
mov
or
test
movsb
xor
outsl
push
loope
out
in
push
jns
inc
add
sti
aaa
insb
mov
push
xchg
dec
mov
inc
add
lret
push
push
dec
into
das
pop
gs
jecxz
and
push
sbb
sub
add
and
hlt
ss
pop
cmp
add
push
or
data16
aam
scas
mov
and
test
push
insl
dec
xchg
mov
leave
adc
repnz
movsb
add
lea
mov
jle
adc
call
adc
popa
push
fsub
inc
shll
adc
and
pop
lock
lret
mov
sub
push
adc
pop
int3
les
loopne
jnp
adc
xcrypt-cfb
cmpsl
in
dec
push
test
cmp
xor
cs
mov
rcll
arpl
mov
out
sub
pop
dec
enter
adc
pop
sub
jp
insl
cmpl
test
mov
mov
lret
inc
inc
push
mov
mov
fisttpll
sbb
cmp
sti
pop
mull
and
in
aad
incl
inc
xchg
pop
out
dec
cld
popf
or
jb
orl
mov
imul
sahf
xchg
inc
cmpsl
sub
out
adc
sarb
pop
cmp
mov
mov
jle
imul
mov
push
fcoml
adc
pop
mov
popf
cmp
or
adc
in
cmpsb
inc
mov
jmp
mov
and
arpl
push
hlt
push
add
cmp
dec
ds
aad
stos
addl
pop
divl
mov
mov
inc
mov
xor
cltd
dec
ss
std
jo
out
and
push
pop
adc
sbb
pop
fxtract
push
xor
xchg
pop
lock
mov
mov
dec
cli
fucom
adc
pop
loop
mov
out
fs
inc
or
mov
push
sahf
jbe
mov
mov
xchg
and
in
imul
jmp
inc
push
fldt
sub
mov
into
add
and
xchg
pusha
lds
push
sub
sti
sub
add
pop
and
mov
test
sti
pushf
push
lea
xchg
jns
push
lahf
pop
dec
imul
jae
dec
test
xor
mov
jge
ror
int3
and
sbb
adc
mov
inc
loop
adc
adc
pop
popf
jns
mov
loop
pop
dec
leave
jl
roll
xchg
testb
clc
dec
addr16
cmpl
pop
das
sbbl
cmp
arpl
mov
pop
jle
mov
insl
jecxz
pop
nop
add
dec
sub
setbe
cmpsl
dec
negb
imul
sub
push
sbb
and
jae
insb
andnps
push
es
push
add
push
jp
xor
add
in
mov
test
mov
jg
or
negl
sbbl
dec
faddl
out
in
xchg
xchg
mov
mov
jb
lods
sbb
enter
lods
push
fnstsw
xorl
add
stos
js
enter
test
lods
jecxz
push
and
mov
or
ss
fs
jg
sahf
andl
in
lea
lods
rcrb
xchg
paddsw
decl
sub
lods
mov
aaa
sub
add
mov
and
push
fwait
lock
loop
or
lcall
or
mov
jmp
aas
movsl
add
push
dec
fcmove
test
pop
inc
ja
pop
cmp
push
fldenv
outsl
ret
or
int3
int3
mov
cmpl
jmp
idivl
fnstenv
es
push
daa
ret
fcom
push
shrl
xchg
mov
cmp
inc
mov
aas
cli
jecxz
sahf
dec
pop
popa
lds
cmp
repz
pop
cmp
xchg
cmpsl
pop
movaps
sub
adc
mov
pop
cmp
dec
mov
jg
movsb
arpl
stc
sub
or
movsb
xchg
test
outsl
mov
outsl
jg
popw
cmp
sub
xor
adc
nop
data16
stos
scas
popa
sarl
dec
dec
xor
enter
pop
stos
aad
js
leave
sbb
repz
shrl
ja
scas
ret
xchg
xchg
xchg
and
mulb
int
int
stos
insl
std
sub
fldcw
jae
push
add
adc
adc
dec
icebp
loop
sub
sbb
lcall
in
outsb
push
pop
hlt
sbb
movb
scas
leave
out
insb
lahf
in
fdivrs
push
aam
sbb
mov
or
movl
pop
test
nop
hlt
add
and
push
fisubl
sarb
sub
lahf
add
xchg
add
pop
leave
lods
aas
pop
or
or
int3
inc
jl
ret
lods
fs
ds
cmp
cmpsl
inc
lcall
pop
out
pop
stos
pop
pop
loopne
jb
mov
mov
sub
inc
nop
pop
stc
push
push
hlt
call
aad
pop
push
fadd
xchg
cmp
cltd
inc
cmp
mov
nop
pop
jg
daa
pop
pop
xchg
in
jno
leave
push
fdivrs
stos
mov
inc
mov
jle
xor
in
lahf
pushf
mov
in
adc
jns
cltd
das
dec
jnp
cmc
shl
xchg
loopne
xor
sub
mov
dec
sub
gs
stos
jne
clc
call
leave
cmp
mov
ret
pop
popf
jmp
pop
mov
shlb
nop
inc
push
sbb
jne
aas
pop
jo
sbb
jle
insb
push
xchg
pop
xlat
lret
jg
jo
inc
xchg
sub
das
jbe
cmpl
push
inc
jne
bound
pushf
and
pop
subb
popf
lock
push
divl
adc
jns
mov
and
gs
stos
and
sub
xchg
test
ja
dec
pop
out
cmp
repz
pop
push
xorb
je
adc
shl
fwait
fs
pop
cld
lcall
cltd
test
push
sub
pop
mov
in
mov
hlt
mov
and
push
mov
mov
sbb
xor
rolb
jns
jge
and
push
dec
clc
test
aaa
loope
int
bound
sbb
mov
push
xchg
pop
add
fstpt
sbb
xor
pop
push
out
mov
mov
mov
jmp
sarb
repz
mov
adcb
cwtl
arpl
jns
xchg
adc
dec
or
adc
popa
stos
inc
cmp
jmp
inc
arpl
xchg
je
pop
mov
jae
cmp
ret
into
adc
shll
mov
rorl
mov
fldl
fcmovne
aad
iret
lds
jnp
lock
outsb
xchg
pop
loop
mov
data16
pop
mov
push
cmp
push
lahf
mov
leave
cmc
dec
add
imul
dec
out
pop
inc
push
icebp
dec
into
mov
xor
loopne
ror
divl
call
pop
arpl
hlt
cmp
push
mov
pop
fidivrl
push
loope
push
rorl
jp
dec
jle
cmp
loop
subl
sbb
pop
xchg
repz
jg
lea
jge
cmovnp
push
stos
and
ret
insb
mov
jle
mov
lret
and
fistpll
ljmp
mov
cmp
push
addr16
aas
cmpsb
add
ljmp
ret
push
jecxz
adc
pop
cmovs
popa
roll
fildll
cmp
in
adc
scas
mov
push
push
pop
adc
dec
loopne
lahf
sbb
bound
fisttpll
ja
mov
fdiv
jae
push
inc
inc
push
xchg
or
jo
jle
leave
test
fyl2x
xchg
mov
loope
scas
adcb
xlat
jne
sub
mov
aas
cmpsb
icebp
loopne
cltd
imul
imul
xchg
daa
sbb
jmp
add
cmp
out
lock
mov
pop
mov
or
jmp
cmp
shll
mov
out
dec
xor
push
or
sub
mull
mov
or
pop
fidivs
mov
dec
inc
mov
pop
or
mov
inc
xchg
scas
sub
out
rcl
pop
out
jns
movsb
out
lds
arpl
inc
pop
jnp
jae
pusha
pop
push
ja
push
lods
inc
ret
int3
or
aaa
xchg
mov
mov
mov
jmp
and
fdivrl
in
mov
fucomp
inc
push
sub
sahf
lea
addr16
mov
mov
xchg
data16
inc
lods
sub
sub
cmpsb
mov
das
fisttpll
push
dec
add
cs
xchg
int3
mov
nop
addr16
adc
inc
jecxz
outsl
insl
into
mov
pop
cmc
push
loopne
sub
pop
dec
fwait
mov
xchg
push
xor
pop
add
push
in
testb
xor
ss
rcr
out
jo
or
loop
inc
lahf
es
lock
mov
pop
xor
add
mov
push
jbe
add
inc
mov
xchg
insl
adcb
jp
out
cmpsl
mov
and
pop
cmp
mov
or
cs
mov
xor
jno
jbe
shll
push
pop
cmpsb
sbb
jp
dec
sbb
push
mov
int3
inc
sub
movsl
mov
mov
pop
xor
pop
js
pop
in
daa
cld
test
inc
xchg
inc
out
dec
xchg
push
lods
stos
shlb
sahf
push
mov
mov
dec
cwtl
xlat
pop
adc
shlb
addl
jmp
xchg
jae
mull
pushf
out
inc
push
dec
out
mov
ret
jne
mov
mov
test
xor
ja
cmpsl
out
cmp
das
jns
pop
data16
mov
dec
popf
roll
push
hlt
and
sahf
dec
stos
cmp
push
sub
mov
movsb
add
mov
and
sbb
mov
out
fbstp
insb
roll
jp
jnp
sbb
enter
loop
shrl
jge
test
pop
imul
jae
push
pop
mov
movsl
decb
sahf
mov
packsswb
jp
mov
movsb
loop
aas
mov
inc
cmp
push
inc
xor
xchg
movsb
rol
xor
cmp
push
and
mov
lds
jp
mov
lret
les
mov
out
dec
add
leave
in
loop
das
scas
sti
shl
mov
push
mov
bound
cld
push
mov
lret
add
ror
sbb
jmp
pop
pop
cltd
xor
fs
loope
pop
fcomi
inc
mov
cmp
lret
fadd
cmp
xchg
inc
insb
popf
pop
shrb
test
push
stos
sbb
stos
push
hlt
mov
bound
mov
adc
cld
lock
cmp
pop
popfw
out
jnp
adc
int3
rolb
dec
mov
pop
pop
sub
lea
fnstcw
outsl
mov
rcrl
imul
hlt
cmp
mov
cmp
imul
mov
xor
mov
je
mov
or
jl,pt
lock
inc
jb
xchg
xchg
int
lret
das
xchg
pushf
jbe
jo
cmp
mov
jae
mov
jmp
xor
out
enter
sbb
in
inc
cmpsl
add
fiadds
popf
jecxz
incl
gs
mov
cs
call
xchg
pop
or
outsb
pop
sbb
mov
cmpsl
test
aam
mov
inc
cmp
sub
in
pop
jg
and
xor
ret
in
mov
pop
nop
adc
and
push
cmpsb
inc
inc
cmp
pushf
mov
jg
aam
sbb
pop
and
pop
cli
ss
mov
ficoms
adc
cmp
cmpsl
loop
fcmovnbe
in
cmp
mov
or
daa
push
loopne
test
adc
loop
sbb
ret
mov
push
push
inc
iret
cmp
cmp
xchg
mov
int3
adc
mov
jo
add
xchg
test
test
pop
cmp
mov
sub
pop
dec
inc
cli
test
and
inc
dec
fidivs
mov
cmpsl
adc
loope
pop
fistpl
and
pusha
mov
inc
dec
push
repz
sub
ljmp
sbb
aas
dec
jmp
pop
je
vmovlps
call
add
test
ret
call
add
fs
dec
fcmovnb
cmpsl
cmpsb
push
repz
loope
push
dec
lods
xor
mov
pop
cmp
jns
nop
mov
iret
add
call
pop
lea
cmp
leave
das
sti
faddl
pop
les
test
mov
ss
aad
out
or
mov
adc
dec
sbb
pop
andl
pushf
data16
mov
adc
ret
pop
je
mov
call
dec
rcrb
fwait
rolb
clc
jmp
popf
cmove
push
test
inc
dec
dec
cmp
pop
cmpsl
xchg
lahf
sbb
lret
mov
ror
mov
cmp
sub
sti
cmp
mov
out
mov
inc
xor
push
cmpsl
out
xor
add
inc
or
loopne
rcr
scas
test
or
ljmp
dec
outsb
add
sbb
stc
stos
inc
lock
pop
aad
jbe
add
jae
and
pop
cvtdq2ps
add
sbb
shl
lods
mov
adc
inc
shl
fimuls
xchg
push
stos
xlat
dec
add
seta
pushf
and
gs
mov
ret
sbb
cmp
popf
mov
pop
pop
in
outsl
idivb
mov
int
daa
repz
fcoml
mov
loopne
pop
setno
imul
insb
pop
inc
cmp
pminub
out
push
test
cmp
mov
cmpsl
xchg
fs
aas
pushf
aam
jns
mov
or
xor
int
sbb
jne
setge
popa
pop
sub
pop
xchg
pop
jb
pop
mov
jecxz,pn
es
adc
cmpl
ja
imul
cmp
das
mul
jg
pop
cmpl
cmp
bound
hlt
push
aas
fstpt
test
cld
pop
iret
pushw
iret
popa
push
ds
jle
scas
adc
out
test
push
fs
cmc
test
out
xchg
scas
test
push
cmp
leave
push
repnz
imul
fxch
es
int
test
int3
xchg
adc
sub
fidivrl
mov
stos
mov
int3
cmp
imul
add
out
stos
lea
adc
repz
popf
sbb
pop
lods
and
xchg
sub
sbb
lea
imul
and
adc
or
shl
push
inc
xchg
add
stc
mov
push
scas
push
popa
cmpsb
or
and
mov
xor
pop
inc
add
and
ds
mov
out
mov
stos
cmp
rorl
test
in
fs
call
pop
mov
and
and
pop
scas
repz
mov
sbb
aaa
stc
push
mov
mov
pop
hlt
add
mov
mov
ret
arpl
jecxz
test
xor
cld
cs
aad
jno
fwait
imul
insl
add
add
or
cmc
or
aaa
or
cmpsl
xchg
es
dec
adc
fistl
test
mov
xchg
and
mov
outsl
add
jno
mov
push
mov
adc
pop
push
push
ja
xchg
dec
sub
loopne
inc
or
and
jl
and
xor
scas
mov
dec
pop
xor
ret
push
int3
add
lret
push
push
inc
add
and
and
pop
mov
cs
jecxz
add
mov
das
popa
xor
sarb
sbb
stos
add
sahf
mov
sub
mov
sub
popf
cltd
lods
dec
mov
mov
movsb
mov
cmc
inc
loop
inc
pop
notb
xchg
xlat
jp
cs
mov
std
cmpsl
outsb
std
ficomps
mov
les
jl
xor
lret
dec
dec
push
pop
pop
push
out
pop
add
pop
cwtl
jne
pop
out
mov
push
repnz
or
mov
xchg
cli
mov
mov
xchg
mov
cs
mov
inc
mov
enter
mov
sub
lods
jns
sub
xor
lods
mov
js
dec
frstor
ss
add
cli
sbb
popa
pop
jmp
ja
dec
jb
pop
pusha
or
fsubrs
jns
rcrb
mov
aad
pop
ja
dec
lods
dec
pop
inc
mov
andl
mov
cmpsb
push
push
jle
cld
xchg
bound
mov
inc
mov
cld
arpl
repz
test
jns
push
push
stc
mov
xchg
mov
xor
pop
mov
sahf
jbe
ucomiss
xchg
arpl
inc
mov
lahf
sub
mov
or
push
fs
xchg
cmp
xlat
ljmp
and
xorb
mov
mov
jl
sahf
lds
paddd
int3
push
sub
inc
mov
pop
mov
les
xchg
in
lret
xchg
es
aaa
jnp
sub
fildl
xor
xor
cmp
jae
lcall
lea
in
mov
repz
fcmovb
jmp
cmp
jge
xchg
push
dec
ret
sti
mov
mov
sub
rorb
int3
fwait
inc
test
inc
mov
sub
int3
sbb
in
cmp
cmpsl
sub
jbe
ret
jne
jle
stos
mov
xor
mov
fs
xchg
ja
xor
insl
sti
xor
andb
add
jmp
inc
imul
mov
jl
sbb
lret
push
xor
dec
cltd
in
or
mov
dec
icebp
mov
and
jmp
lcall
mov
repz
mov
jns
cmp
jo
lods
mov
xor
loopne
sbb
or
subb
push
inc
jbe
fmulp
cmp
popa
sbb
cmp
aam
pop
adc
enter
xchg
fwait
sbb
and
adc
lcall
testb
loop
fmull
push
mov
push
imul
xor
xchg
sub
and
lret
jg
pusha
push
fsubs
dec
int
inc
xor
out
mov
jb
dec
shll
cli
out
or
lea
dec
xor
call
sahf
cwtl
lcall
pop
data16
push
insl
pop
fdivrl
daa
hlt
fadds
cmp
adc
sbb
sbbl
ss
mov
rorb
dec
dec
and
popf
cmc
mov
xor
dec
fs
int
adc
inc
jge
div
addr16
jmp
mov
das
ficoml
add
and
inc
or
fstl
test
aaa
cld
jne
inc
pop
mov
adc
mov
jmp
cmpb
xlat
adc
mov
dec
outsl
push
les
inc
mov
xor
dec
add
fadd
mov
fcmovne
xchg
fstpl
loop
gs
test
aas
fistps
mov
stos
push
std
cmpsl
sbb
ja
or
loope
aad
flds
test
fwait
loope
testl
inc
add
leave
push
inc
icebp
cmp
arpl
ret
jp
xlat
sbb
mov
mov
aad
daa
subl
inc
jno
shrb
mov
inc
jbe
fs
adc
fs
jl
pop
mov
inc
cmp
mov
dec
jl
jmp
cltd
inc
lret
stc
enter
sti
sub
dec
in
inc
ds
test
mov
xor
sbb
lcall
mov
mov
xchg
or
push
sub
or
frstor
lods
sub
add
adc
shlb
and
sahf
jl
dec
xor
pushf
bound
adc
ljmp
fidivs
mov
scas
adc
subb
outsl
out
xor
fistps
gs
xchg
lods
rcrl
lcall
push
pop
and
ljmp
call
bound
mov
ficompl
add
dec
insl
push
int3
outsb
cld
popl
sbb
add
sbb
and
pop
ret
xchg
and
shlb
xlat
loopne
cltd
lret
inc
sahf
mov
loope
roll
cmp
pop
add
adc
test
cltd
xchg
push
mov
test
xchg
or
adc
sbbb
into
daa
mov
lcall
mov
mov
cs
mov
in
aas
ror
xor
sub
dec
stos
mov
outsl
jmp
outsb
mov
fcos
jp
shll
inc
xor
sub
push
xchg
imul
inc
xchg
push
push
jle
test
pop
lds
xchg
andb
pusha
loope
ds
jns
mov
frstor
movsl
lahf
movsl
jg
or
lock
fisttpl
jle
int3
mull
mov
es
inc
mov
mov
bnd
dec
js
rcrb
xchg
push
cmp
dec
scas
movsl
pop
cmp
das
shrl
adc
add
xchg
mov
mov
pop
dec
cmp
cs
sub
jns
or
pop
ror
xor
pop
jno
scas
outsl
pop
loop
out
add
nop
xor
arpl
dec
mov
dec
ret
xor
sbb
nop
stos
rolb
push
das
aam
fstpl
xchg
mov
cwtl
aaa
sbbb
xor
mov
and
jnp
test
ljmp
cld
pop
adcl
mov
adc
stos
mov
lea
push
push
aaa
negl
js
int
imul
or
or
push
xchg
sub
in
pop
mov
jg
mov
adc
ficoms
repnz
rolb
cltd
ficomps
or
into
pusha
jg
repz
je
sub
hlt
sub
pop
enter
lods
and
fadds
fidivrl
mov
inc
push
mov
xor
addr16
aam
and
sub
xchg
push
jb
sub
pop
stc
xchg
cmpsb
mov
push
cmp
add
push
xchg
xchg
mov
movl
scas
sbbb
test
mov
inc
xchg
out
iret
adc
cli
stos
dec
sbb
loope
xchg
mov
cmp
loop
push
rcr
insb
imul
leave
fwait
rcrl
push
daa
mov
mov
test
dec
sub
scas
xor
xchg
lret
xchg
and
std
arpl
or
pop
add
xor
mov
shr
scas
call
int3
cmovne
les
inc
jl
lock
adc
push
std
sub
jl
daa
jmp
sub
test
addr16
es
or
iret
adc
inc
repz
mov
in
pop
pop
jle
cld
stos
lods
sbb
sub
hlt
sbb
in
push
ja
inc
sti
mov
addr16
iret
xor
cmp
xlat
gs
nop
inc
mov
sarb
sbb
and
sbb
xor
jl
lds
inc
frstor
pop
jecxz
stc
xchg
and
cli
imul
jp
jbe
adc
loopne
insl
scas
sbb
out
popf
push
jl
in
idiv
mov
xor
jo
mov
aam
pop
mov
adc
pop
lret
add
leave
or
and
out
jp
sbbl
pop
stos
inc
push
ret
xchg
call
xchg
insb
mov
fstl
xchg
pop
jmp
lods
aad
popf
pop
jne
lds
cmp
subb
pop
xchg
nop
push
sahf
lret
cmp
in
mov
dec
imul
leave
imul
dec
pop
add
add
xchg
xchg
pop
pop
add
jo
mov
inc
rcr
push
int
imul
jno
loopne
rcrb
add
or
jns
mov
mov
out
sbb
jbe
lcall
dec
cmp
xor
xor
cmp
xchg
call
jecxz
inc
ror
cmp
lds
out
cwtl
dec
jno
push
and
test
out
rcrl
add
xchg
ja
ljmp
loope
or
movsl
add
jns
jne
fldenv
sbb
inc
enter
mov
jmp
outsl
xor
mov
fistps
push
pop
stos
mov
fists
data16
mov
dec
push
xor
push
pushf
aas
cmpsl
xorl
lea
inc
dec
xchg
push
mov
push
and
mov
xchg
in
scas
push
mov
jle
xchg
test
pushf
je
in
insb
or
in
cmp
popl
jmp
sub
aad
shl
dec
addr16
sub
ror
test
push
or
inc
stos
js
ja
push
shll
mov
hlt
icebp
fs
dec
or
pop
arpl
jp
dec
mov
sub
das
xchg
movsb
fldl
lret
aaa
imul
mov
rclb
leave
into
das
xchg
sub
movsb
mov
xor
cmp
sbb
mov
and
xchg
lds
enter
addr16
pop
aaa
pop
imul
repnz
sub
or
rorl
in
jp
and
cmp
imul
leave
aaa
push
lret
xchg
mul
mov
add
fs
stos
jl
rcrl
pop
outsb
xchg
test
add
orl
mov
pushl
pop
push
rolb
stos
stos
mov
pop
daa
or
mov
loop
daa
jo
push
lds
adc
jecxz
inc
xchg
sbb
xchg
sbb
push
sarl
adcb
mov
xchg
mov
xchg
mov
les
cs
leave
mov
icebp
xchg
and
das
mov
and
jle
ffree
push
adc
push
sub
adc
leave
xchg
pop
loope
or
xchg
enter
xchg
out
push
bound
enter
into
mov
arpl
jl
cwtl
mov
dec
or
pusha
dec
xchg
sar
xor
mov
or
sbb
push
scas
xchg
xor
push
mov
cwtl
mov
adc
or
adc
test
inc
mov
sti
lea
rclb
subb
mov
xlat
fists
sti
cmpsb
das
ret
ret
mov
jno
sub
adcl
aad
std
jb
sbb
pop
int
sbb
repnz
out
adc
and
or
out
jmp
cmc
jmp
jae
cmpsl
pop
movsb
out
js
arpl
xlat
cmp
aad
adc
xor
cmc
adc
cmp
adc
lds
pop
lods
push
idivb
aas
push
aas
es
std
or
mov
inc
shll
mov
pop
test
rclb
mov
and
int
mov
ret
cld
xchg
inc
xor
loop
add
jbe
popf
mov
cmpsb
fidivrs
mov
xchg
test
data16
outsl
inc
adc
pop
lahf
adc
ljmp
lods
cli
ss
cwtl
mov
inc
fists
push
mov
addr16
cmp
jge
icebp
loope
mov
inc
rcll
adc
js
and
dec
cmp
mov
jmp
or
mov
ds
mov
lret
filds
mov
shr
addr16
adcl
adc
sbb
fists
fldl
or
dec
push
cmp
push
jecxz
xlat
sbbl
jbe
pusha
scas
mov
fcoms
mov
pop
adc
popa
cmp
jl
ffreep
out
movsl
sti
insb
mov
jl
sar
mov
xlat
and
lea
inc
jne
inc
adc
push
ja
popf
jnp
sbb
es
xor
cmp
rolb
shrb
or
add
mov
cld
call
outsb
repnz
mov
mov
mov
mov
negl
dec
test
loope
sbb
pusha
cmpsl
lcall
mov
mov
int3
mov
sub
scas
push
aaa
call
xchg
loopne
call
sbb
sub
mov
out
xchg
subl
scas
xchg
inc
popf
jp
inc
jnp
aam
push
xchg
and
or
sub
or
int
outsl
in
sub
and
fisttpll
sbb
and
mov
mov
movsl
cs
rcl
cs
ljmp
mov
clc
xchg
jnp
mov
test
adc
mov
scas
mov
pop
rorb
enter
dec
lahf
aaa
mov
sbb
or
adc
nop
jne
mov
dec
movsl
lock
test
inc
add
fidivs
dec
es
mov
adc
add
inc
pop
pushf
out
xchg
sbb
outsb
mov
jae
mov
int3
add
ret
mov
cld
mov
fnstsw
cld
push
ljmp
jmp
loopne
push
cmp
cs
in
add
jp
stos
sub
data16
lock
iret
xor
pop
addr16
mov
addr16
cld
mov
mov
and
sub
dec
dec
add
pop
or
adc
cld
inc
insb
loopne
repz
mov
sbb
and
ja
sti
jmp
scas
js
dec
xchg
scas
shrw
sarl
xor
js
inc
shlb
cmp
sti
ror
xchg
add
cs
out
sub
lds
cmp
lahf
sbb
add
lret
pop
adc
mov
xchg
outsl
testl
rorb
stos
in
rclb
fimuls
fstpl
aas
fwait
dec
popf
jg
scas
or
imul
and
mov
enter
mov
xchg
cmc
mov
xchg
mov
pop
test
pop
daa
pop
xor
je
loope
dec
test
jae
add
je
data16
outsb
pop
aaa
or
jno
iret
test
mov
cmp
popl
shrb
es
cmp
stc
test
inc
mov
xchg
or
sub
add
xchg
daa
mov
ljmp
fimuls
mov
mov
shr
cwtl
cld
sub
insb
mov
and
lret
add
lods
ret
jne
das
push
mov
stos
fistpll
rcrl
jae
or
xchg
adc
inc
and
inc
js
mov
scas
and
xchg
fs
lock
insb
or
outsb
inc
lds
mov
imul
cwtl
or
dec
mov
sub
icebp
data16
arpl
test
jmp
repz
xchg
int3
in
out
pop
fwait
jb
and
ffreep
dec
es
xchg
mov
orl
jne
andb
jecxz
xor
or
stos
les
xlat
sub
mov
mov
loope
js
aas
inc
jno
ret
xor
lret
sbb
hlt
cmp
mov
adc
into
in
stos
fidivrl
lods
rcrb
push
jecxz
mov
or
out
aad
mov
sbb
add
jmp
push
mov
outsl
mov
test
or
mov
loope
mov
sbb
popf
jb
jns
rcr
sbb
sbb
dec
xchg
insl
mov
lcall
insb
mov
and
gs
fisttpll
repz
aas
mov
jae
sarl
adc
cmc
xchg
xchg
xchg
data16
xor
inc
lds
cvttps2pi
add
sub
push
dec
adc
sub
mov
mov
xor
cmp
aam
mov
mov
les
xor
lds
loope
mov
jg
stc
mov
hlt
xchg
mov
ja
out
loopne
cmp
imul
push
stos
loopne
sbb
stos
mov
push
or
jns
rcr
adc
mov
stc
icebp
jo
test
into
and
jp
and
mov
ret
sbbb
stos
sti
xor
cli
aam
or
clc
cmp
cltd
inc
test
daa
fwait
addr16
mov
mul
int3
mov
or
push
cld
jne
jae
ss
lods
sbb
nop
xchg
xchg
jmp
lock
outsb
cmp
ljmp
push
fstp
sub
dec
mov
inc
sar
mov
xchg
repnz
mov
sbb
repz
mov
adc
jbe
inc
aas
or
mov
cmpsl
push
mov
jmp
test
or
or
ret
repz
mov
in
outsb
mov
sarl
mov
sub
sbb
dec
ret
sbb
mov
inc
jge
mov
addr16
inc
mov
jo
mov
lock
aaa
test
push
push
cwtl
dec
xchg
cld
and
fdiv
push
outsb
outsl
mov
or
push
ret
mov
ljmp
call
and
push
rcr
lock
adc
fwait
and
hlt
fcmovbe
pop
xchg
mov
negl
cmp
jge
xchg
pop
pop
mov
rcrb
cmp
fldenv
out
sub
fidivrs
es
movsb
scas
orl
iret
shl
repz
ret
mov
xor
ljmp
xchg
out
loop
sti
cli
dec
or
test
stos
lea
rclb
movsb
or
out
stos
popf
cmp
lock
inc
dec
mov
or
inc
jnp
hlt
mov
rorl
jmp
ss
ljmp
mov
add
mov
mov
test
mov
into
pop
imul
outsb
jg
xor
frstor
mov
sub
pop
cmp
mov
lcall
adc
lahf
cld
inc
lods
lea
mov
sbb
stos
jp
dec
popf
pop
lock
sbb
lods
mov
push
sbb
hlt
inc
dec
pop
imul
lea
and
xor
ljmp
mov
pop
mov
or
das
push
ficompl
sahf
shll
sbb
jmp
pop
movsl
jmp
and
out
aaa
test
popf
push
test
cmp
inc
adc
test
scas
popa
or
fnstenv
out
scas
or
shll
scas
in
lods
pop
sbb
ret
jle
inc
imul
lods
hlt
xor
and
fisubl
push
sub
test
jo
or
push
jmp
sub
into
pop
xor
test
push
adc
sub
xchg
nop
dec
mov
loop
int3
xchg
stos
je
mov
mov
stc
es
jbe
cmp
mov
pop
repz
jbe
sbb
aas
nop
icebp
jno
sub
out
movsl
inc
roll
js
dec
pop
inc
jl
ret
adc
adc
lock
pop
js
mov
sub
es
mov
jo
std
js
mov
pop
and
int
or
mov
cmovp
push
ja
cli
mov
add
lcall
out
clc
push
adcl
add
pusha
and
cmpsb
or
call
inc
stos
cs
dec
push
dec
push
stos
shl
add
loopne
adc
push
es
push
pop
sub
jmp
scas
inc
rcl
js
cmp
pop
lahf
sbb
xchg
and
inc
push
insl
jb,pt
xchg
lods
in
loop
sub
sub
les
pop
cmp
imul
jge
sbb
shlb
bound
or
push
or
mov
in
sub
lahf
movl
lret
push
mov
cmc
xlat
outsl
ret
nop
push
test
mov
mov
mov
cmp
popa
mov
mov
jae
jne
adc
icebp
mov
mov
pop
pop
pop
shll
scas
andl
mov
and
sbb
fwait
sar
mov
jl
movsb
add
mov
aam
les
test
mov
adc
inc
sub
icebp
jno
pop
xchg
jo
adc
cltd
scas
mov
mov
leave
xchg
sti
mov
inc
in
leave
jmp
mov
and
pop
sar
aaa
jle
hlt
repz
or
or
iret
pushf
iret
sbb
pop
adc
jle
pop
xchg
pop
insb
dec
testb
jb
sub
icebp
test
scas
stos
out
mov
xchg
stos
jno
add
inc
test
shr
repnz
insb
cmp
xchg
fcmovnb
sbb
push
rorl
mov
pop
sub
fsubrp
mov
jnp
add
sub
jmp
mov
sub
pop
div
std
push
outsb
mov
push
fdivrl
or
sub
shl
insl
fildll
aad
add
aaa
lock
mov
stos
sbb
adc
and
das
mov
ja
cli
pop
repnz
in
pop
inc
vcvtsi2sdl
repnz
sbb
lret
jo
xor
lods
or
js
cwtl
cmc
and
dec
clc
call
mov
mov
fwait
cmc
dec
xchg
adc
aam
xchg
lahf
sub
xor
popf
inc
jne
lcallw
ffreep
lds
mov
fcoml
pop
in
cmp
fwait
lea
rorb
iret
inc
add
lods
rcrl
std
imul
sbb
popf
mov
adc
out
add
mov
lret
push
clc
pushl
aaa
lock
xor
cwtl
in
movsb
es
in
push
or
add
decb
inc
push
sub
push
fistps
mov
scas
aas
or
into
test
aam
add
mov
mov
push
jg
das
sbb
jne
inc
orb
fiaddl
aas
mov
or
pop
cmp
lcall
xor
scas
imul
mov
pushf
pop
nopl
mov
ja,pn
push
sbb
push
leave
stos
mulb
xor
dec
xor
out
sub
inc
jno
lock
mov
xchg
xchg
add
inc
cli
mov
test
and
sbbl
sahf
ljmp
cmp
call
je
pop
loop
jl
and
fldenv
fs
pop
ja
cltd
cld
pop
jp
bound
jbe
cmpsl
mulb
fwait
js
push
fisttpll
push
test
shrb
inc
pop
cmpsl
push
push
inc
imul
xor
pop
mov
js
sbb
ljmp
insl
popf
fs
std
out
iret
pop
lock
mov
lock
sub
xchg
sbb
sahf
jg
xchg
imul
jnp
fistl
push
in
inc
add
call
jae
and
fistl
popl
iret
pop
nop
mov
inc
fistps
int
das
and
stc
adc
xor
loop
pop
test
jg
pusha
daa
add
jb
push
mov
mov
mov
dec
dec
push
inc
push
xrelease
aad
push
jnp
test
cs
mov
sbbb
xlat
inc
repz
cmpsl
js
and
sub
xchg
movsl
and
cmpsl
sahf
inc
sub
cmp
arpl
pop
mov
fsubs
mov
cmp
cld
fwait
enter
data16
add
test
mov
mov
imul
and
xor
dec
test
lock
adc
push
xor
and
mov
cmc
push
in
inc
push
insl
mov
outsb
pop
sti
mov
dec
mov
das
hlt
sub
mov
dec
dec
iret
pop
xor
sub
insb
aad
out
xchg
nop
push
push
addr16
pushf
push
mov
lods
jno
dec
outsb
cmp
leave
in
mov
sbbb
movsl
pusha
adcl
adc
mov
aas
adc
mov
call
sub
or
out
push
fisubrs
and
mov
cwtl
push
out
out
jp
insb
inc
out
sbb
scas
fistps
je
sti
xchg
pop
dec
mov
pop
ljmp
add
flds
cmp
xchg
add
push
fcoms
stc
loopne
xor
add
and
out
sbb
mov
pop
mov
adc
inc
jle
hlt
pop
mov
orb
cmpsb
cmp
jmp
cmp
lods
stos
popf
dec
je
stc
into
in
fs
fsubrl
and
dec
jmp
cltd
out
cmp
pop
xchg
inc
and
orb
dec
cmpsb
nop
adc
test
push
nop
adc
ud2
adc
push
loop
cmp
test
inc
push
mov
hlt
push
push
cltd
out
xor
fwait
and
or
mov
sahf
outsl
cmp
out
lock
sbb
rorb
jl
fldt
adc
popf
in
jmp
xchg
mov
incl
jno
lods
leave
aaa
cmp
rcrb
push
adc
xor
xor
test
pop
fidivs
lcall
jae
lock
cli
sub
aam
imul
stos
xor
push
out
mov
jge
orl
outsl
lcall
lods
inc
add
inc
pusha
sbb
mov
loope
ds
jbe
rcr
pop
icebp
andb
stc
push
jl
mov
daa
pop
mov
lret
jg
test
sbb
push
jecxz
pop
push
ror
cmp
sbb
jecxz
push
mov
cmc
push
pop
xorb
jle
lock
pop
mov
orb
mov
jae
push
test
in
int
std
lret
dec
mov
xor
pop
int
push
lock
sub
popa
mov
jne
dec
aad
imulb
imul
pusha
cltd
push
and
cmp
add
mov
scas
fsubl
cmp
cwtl
loopne
les
test
in
jb
push
and
je
inc
push
jb
aad
xchg
outsb
xor
pushl
popf
dec
stc
cmp
sarl
push
and
mov
xchg
insl
ret
int
test
lods
or
inc
mov
iret
sbb
xor
push
sbb
push
push
fsubrs
pop
and
lret
fcoms
pop
push
aaa
inc
aaa
xor
xchg
xchg
test
adc
mov
ljmp
lods
add
add
push
dec
dec
ret
push
or
inc
push
scas
sbb
roll
js
push
shlb
leave
push
shl
das
mov
sbb
pusha
inc
jae
inc
test
orb
stc
loope
into
inc
jp
int3
jnp
push
sbb
mov
jl
in
push
mov
outsl
mov
push
push
cmp
and
and
jg
jecxz
inc
xor
cmp
xlat
jp
test
push
pop
lds
dec
mov
popa
insl
ds
and
add
xor
jl
imul
mov
or
push
sub
mov
jno
in
mov
cmpsl
push
xchg
or
push
pop
outsb
xchg
inc
jmp
out
mov
adcl
jp
fildl
sbb
movsl
pop
xchg
repz
push
mov
nop
sbb
xchg
cmp
jnp
jp
lods
mov
scas
cmp
adc
notb
in
test
int
inc
ja
sbb
mov
fs
mov
out
lock
aam
fisttps
ja
push
dec
out
ljmp
repz
jae
and
lock
gs
sub
inc
mov
repz
hlt
call
aam
cmc
pop
or
inc
jle
addr16
mov
fwait
xchg
int3
mov
in
iret
push
adc
mov
into
bound
xor
cmpsl
ror
fs
lcall
shrb
add
mov
fidivrs
movsl
loop
pop
jb
aam
xchg
adc
test
lahf
pop
dec
cmp
lret
imul
sahf
aam
xchg
adc
cmc
enter
dec
cs
dec
cmp
mov
fs
mov
xlat
mov
add
and
inc
and
lock
push
mov
cmp
mov
popa
mov
push
push
add
xor
rcr
iret
test
aam
arpl
in
movsl
adc
neg
gs
loope
mov
mov
stos
addr16
xor
sbb
lods
mov
icebp
cmp
fistpl
shr
dec
ljmp
outsl
sbbb
mov
insl
sbb
pusha
das
dec
out
pop
push
inc
push
push
sbb
lds
fdivrl
sbb
aas
sub
mov
mov
enterw
ret
movswl
arpl
xchg
push
insb
jo
cmpsb
cmpsb
mov
aam
adc
sti
sub
mov
into
dec
push
gs
dec
bndstx
iret
pop
sbb
gs
jns
adc
fwait
mov
xor
ljmp
push
push
cmp
and
mov
add
hlt
sbbb
mov
add
adc
jge
lods
aam
insb
xchg
adc
test
xor
dec
jl
jo
push
fdiv
dec
test
and
pop
dec
and
pop
ret
out
in
imul
jmp
sbb
cmpsb
aam
mov
outsl
bound
sbb
popa
dec
xor
jno
nop
inc
call
sbb
sbb
and
sub
fstl
xor
icebp
mov
inc
mov
lahf
stc
jne
movsl
fistpl
adc
inc
mov
xor
out
inc
push
adc
stos
mov
scas
orl
dec
shlb
aaa
dec
repnz
add
popf
nop
mov
divb
out
dec
dec
jae
lcall
in
rol
outsb
adc
dec
push
loop
jg
imul
push
jmp
and
repnz
jno
pop
mov
or
rorb
add
cwtl
jmp
jbe
adc
pop
enter
mov
sbb
daa
mov
adc
jge
pop
jb
mov
add
icebp
jbe
push
lahf
push
lods
push
mov
repnz
xor
ja
xlat
bound
out
pop
add
adc
dec
add
fcmovnbe
mov
xchg
mov
stos
jle
or
icebp
sbbl
sub
fstps
dec
push
add
leave
icebp
mov
inc
fwait
cmpsb
movsl
testb
pop
cmc
arpl
aam
bound
cmpsl
rcrl
add
ss
lcall
movsl
xor
xor
xchg
loope
adc
xor
addr16
lret
cwtl
push
loope
lahf
enter
push
repnz
std
push
push
sbbl
inc
pop
sbb
and
mov
roll
dec
dec
pop
mov
xchg
mov
rcll
mov
push
lret
jl
push
lock
popf
push
shrl
inc
daa
cs
cwtl
and
lods
shlb
mov
xor
fdivrl
sub
iret
out
nop
mov
test
push
pop
out
icebp
add
call
jb
test
testl
test
lret
mov
bound
add
pop
push
cli
add
sbb
mov
nop
testl
pop
jbe
push
movsb
and
jmp
jbe
enter
or
cwtl
cmp
je
lods
fisubl
jae
jg
gs
orb
adc
or
xorb
xor
adc
test
sbb
lock
cmpsb
sbb
and
xlat
nop
leave
push
ss
ficompl
mov
mov
insl
sbb
enter
xor
mov
fbstp
xor
push
cli
inc
jle
out
aas
into
test
mov
lcall
pop
pop
cmc
sub
pusha
addb
addb
add
xchg
add
adc
push
mov
xchg
mov
or
adc
pop
mov
test
dec
sbb
int
std
rcrb
xorl
int
fld
and
insl
orl
mov
and
icebp
jnp
and
xlat
test
mov
cmp
jp
scas
fnstsw
dec
jge
int
pop
dec
jno
mov
adc
outsl
sbb
mov
mov
pop
mov
xor
jp
inc
ds
adc
test
ret
pop
setnp
jo
inc
test
cmpsb
xor
and
shll
pusha
dec
xchg
adc
or
xchg
sbb
orl
cmp
fmul
sti
xchg
mov
ja
in
add
xor
out
or
mov
pop
sub
cmpsl
mov
popl
mov
jecxz
nop
stos
arpl
inc
dec
ret
fnsave
cltd
ret
jnp
cli
test
cld
cmp
jbe
inc
fmul
sbb
mov
xchg
pop
daa
outsb
xlat
xchg
ljmp
jmp
jl
xor
xlat
push
pusha
lret
sbb
adc
adc
sarb
pusha
ja
scas
fistps
adc
push
xchg
imul
out
test
sbb
jne
mov
inc
inc
push
scas
inc
jge
adc
mov
stos
and
mov
sub
sub
rclb
xchg
fs
cmp
xchg
xor
jbe
push
sbb
adc
xchg
xchg
sbb
fs
or
adc
adc
push
or
add
jle
push
shl
jns
test
ds
ffreep
lods
roll
and
push
fildll
inc
int
add
push
inc
push
jle
xchg
aam
add
cmpsb
add
xor
xchg
jb
mov
ljmp
js
sbb
stos
push
dec
xchg
xor
xor
jbe
add
adc
bound
je
rclb
adcl
aam
jne
dec
cld
loopne
fucomip
mov
dec
mov
mov
dec
fcoml
mov
int
pop
enter
inc
enter
stc
addb
stc
std
enter
stc
xlat
xchg
inc
mov
adc
in
sahf
xor
push
and
sar
push
test
pop
aam
rolb
je
dec
lock
fldcw
or
aad
fisttpll
xchg
xchg
mov
mov
mov
shl
test
cs
mov
mov
iret
popf
test
clc
pop
ss
nop
xchg
mov
ret
pop
sub
ss
mov
cmp
aas
and
pop
adc
sbb
ret
add
mov
dec
push
mov
push
adc
mov
mov
or
cmpsb
call
gs
shrl
mov
pop
pop
stos
into
pop
and
mov
lcall
sub
xor
mov
mov
in
mov
cmp
ficoms
adc
lds
adc
inc
movsb
adc
movsb
sub
jbe
adc
mov
lret
jae
mov
movsb
sub
into
push
or
pop
fiaddl
sbb
arpl
jne
adc
call
xchg
jg
movsl
push
clc
inc
clc
ljmp
jo
mov
sub
cmpsb
daa
lahf
xchg
push
fistpl
subl
jns
pop
xor
mov
add
push
scas
imul
and
mov
push
push
push
lods
in
pop
les
pushf
leave
push
jg
test
aad
frstor
sbb
out
test
hlt
sbb
leave
inc
or
jle
hlt
mov
mov
scas
jnp
shl
sub
clc
das
mov
fidivl
mov
mov
pop
cmp
push
icebp
inc
test
stc
scas
dec
mov
hlt
jb
jge
shlb
xchg
and
cmpsl
outsb
cmp
mov
dec
in
gs
inc
fs
imul
call
aad
jb
addr16
or
inc
push
inc
mov
mov
das
add
jmp
test
repz
mov
adc
hlt
arpl
mov
jmp
lahf
icebp
push
add
cld
dec
pop
test
jecxz
in
jb
xor
mov
cmc
outsb
test
repz
into
jg
int
jnp
dec
xor
push
xchg
aam
pusha
cmpsl
in
push
xor
sub
lret
lahf
and
notl
jg
push
cmpsl
mov
sbb
mov
bound
push
add
aaa
stos
pushf
ret
inc
dec
inc
inc
pop
ljmp
pop
es
push
sbb
sub
pop
cmp
iret
das
ds
js
outsl
xchg
cli
movsb
bound
jae
dec
jmp
sub
imul
and
rorb
mov
or
adc
add
push
lods
outsb
mov
or
test
iret
cmp
test
dec
xchg
sarl
dec
xchg
cmp
mov
xor
aam
test
pop
add
push
loopne
cltd
sub
mov
push
jl
pusha
cmp
movsl
js
jge
add
cmp
fbstp
rclb
data16
xchg
insb
in
xchg
mov
jne
aaa
xchg
pushf
rolb
sbb
pop
cmpsb
lods
fwait
cwtl
lcall
das
adc
sahf
stc
fisubl
fdivp
pop
flds
push
lds
stos
enter
add
int
stc
pop
cmp
lret
sbb
hlt
stos
mov
aaa
lret
mov
pop
repz
cld
mov
mov
xchg
clc
sbb
cs
xor
xchg
imul
loope
orb
jnp
or
test
lea
dec
or
and
dec
cwtl
stos
and
fs
hlt
push
cs
pop
scas
and
sub
enter
add
aaa
or
popf
dec
test
jns
int
push
adc
ss
mov
push
clc
mov
ffreep
in
fiaddl
cltd
out
lock
ljmp
popf
icebp
push
fsubl
stc
jbe
outsb
jno
jecxz
imul
insl
rcrb
jb
jge
inc
adc
push
and
sbb
frstor
adc
lods
xchg
xorb
inc
ficompl
push
fdiv
sub
jns
int
mov
xlat
pop
imul
add
jp
jg
xor
stc
dec
nop
in
movb
sti
push
xor
inc
fsts
and
imul
pop
jecxz
jbe
test
mov
test
push
dec
adc
lds
ret
or
inc
push
je
out
inc
mov
xchg
inc
add
dec
rolb
push
mov
mov
mov
mov
pop
dec
cmp
popf
jmp
addr16
stos
in
jo
jns
fwait
pop
pop
rorl
cmp
imul
and
loop
and
sbb
mov
shlb
iret
pop
clc
ds
push
or
add
jle
movsb
add
jmp
jmp
push
clc
in
dec
scas
movsl
pop
xchg
andb
push
cmpsb
adc
pop
jbe
jmp
enter
leave
in
lret
cld
xchg
lock
lods
inc
cli
pusha
sub
mov
mov
mov
mov
mov
call
push
stos
ja
out
and
and
imull
jg
fstl
jmp
gs
dec
pushf
repnz
fists
call
mov
jo
and
int3
subl
jp
insb
xchg
push
jge
adc
cs
jmp
sbb
lret
push
sbb
jle
sub
movsb
fstl
cwtl
bound
dec
out
jge
rcll
jns
mov
sbb
flds
push
pop
mov
xchg
out
push
inc
test
sbb
scas
sub
jmp
fistl
ss
xchg
aam
clc
push
xchg
push
cmp
cmp
dec
js
sub
test
mov
inc
test
inc
lret
mov
cltd
pusha
pop
sbb
gs
mov
adc
add
repz
jno
sti
cmp
xchg
jnp
mulb
jo
xchg
and
sahf
test
fdivrs
in
add
daa
mov
sub
cbtw
or
dec
fimull
xchg
cmp
mov
hlt
pop
loopne
push
mov
loop
cwtl
cmp
jae
adc
pop
insb
inc
ds
pop
test
or
lods
aam
and
movsl
bound
and
push
je
aam
cmp
and
in
jge
iret
in
push
pop
and
inc
cmp
fdivr
es
test
mov
jae
std
fidivs
sub
fistpll
and
xchg
and
test
fld
inc
cld
unpckhps
std
xchg
pop
data16
insb
scas
clc
push
sar
sub
insl
fldl
test
movsl
or
sub
es
lock
lcall
pop
fisttpll
and
rcrl
jne
xlat
inc
jo
insb
xlat
mov
mov
clc
ss
xchg
xchg
cmc
fcmovnbe
dec
add
push
mov
ret
outsb
repnz
jge
je
xchg
rcll
fdivs
in
push
sbb
and
imul
orb
in
dec
jbe
in
adc
inc
sub
scas
ja
mov
sub
movsb
cmpsl
pop
jo
dec
mov
and
jmp
push
into
ror
mov
dec
in
repnz
pop
lahf
inc
lcall
sbb
out
cs
hlt
pop
sbb
dec
in
push
sub
mov
lods
icebp
mov
pop
xchg
mov
sub
iret
ret
sarl
jl
dec
pop
xor
xrelease
jecxz
dec
mov
push
imul
es
mov
repz
mov
cli
out
cmpsl
adc
in
inc
stos
sub
jl
jbe
add
cmp
jno
and
cmpsl
jmp
movsl
jb
xor
lret
cmc
sub
faddp
movsl
xchg
sub
jp
andb
xlat
adc
mov
out
xchg
insl
jg
pop
sbb
push
jmp
inc
add
jle
mov
push
pop
es
addr16
jbe
xor
ds
stc
pop
push
cltd
jns
or
or
mov
mov
push
and
xchg
add
addr16
cmp
pop
ss
lods
xor
cmp
out
jp
fdivrp
rcl
pop
movsl
fildll
lds
add
push
cmp
dec
jg
shll
pusha
clc
in
xlat
pop
cmp
mov
dec
pop
orl
movsl
mov
mov
out
inc
sub
mov
loop
or
das
push
mov
lock
mov
addr16
xor
lret
test
in
mov
lock
outsb
push
push
xor
cwtl
mov
sub
loope
ret
insb
adc
clc
jbe
inc
call
out
std
stos
fimull
jno
and
and
shll
mov
mov
sub
call
mov
pop
std
ss
rcrl
pop
decb
jge
adc
mov
inc
sbb
adc
dec
dec
daa
mov
mov
std
push
movsb
cmp
repz
or
mov
rorl
dec
lods
push
or
pop
js
and
jecxz
out
or
es
inc
test
ds
or
cmp
lahf
xchg
shll
mov
mov
mov
or
out
xchg
add
in
outsl
scas
and
cli
xchg
aad
movsl
jb
lcall
movsl
aas
xchg
inc
push
or
sub
mov
call
add
fdivp
sub
mov
sbb
clc
js
xchg
dec
clc
xchg
jl
aaa
mov
dec
test
test
ret
or
inc
xchg
xchg
add
jge
ret
pushf
test
mov
mov
and
scas
push
xor
pop
mov
xlat
addl
inc
mov
in
out
cwtl
push
scas
ja
lods
in
in
fisttpl
xor
lcall
adc
jecxz
int3
cmovp
popf
sbbl
cmp
bnd
lods
bound
jp
xlat
xor
jecxz
push
xor
fists
out
mov
clc
jmp
adc
fstpl
pop
scas
mov
test
jl
ds
jge
inc
vmovdqa
push
adc
jp
ror
mov
jp
and
sub
lret
xchg
and
push
jno
sub
popf
xor
clc
adc
sub
inc
fs
fldt
fcmovbe
or
pop
fildl
or
pop
sbb
mov
push
mov
push
mov
inc
and
jge
dec
mov
add
push
jmp
push
add
jecxz
int3
mov
clc
les
jecxz
jle
push
jne
nop
out
xor
in
imul
pop
dec
testl
fcmove
nop
add
and
fwait
pop
aas
mov
pop
test
push
stc
push
and
cli
mov
cltd
or
loope
jecxz
ret
enter
ljmp
fs
add
add
push
aas
sub
add
push
pushl
mov
inc
rorb
mov
dec
test
ljmp
out
lock
dec
or
add
adc
jecxz
fwait
jb
mov
inc
insb
ret
and
sbb
mov
out
in
fst
mov
scas
xchg
into
jecxz
mov
inc
outsl
pop
and
mov
aad
and
aam
nop
fstpt
ds
mov
mov
jno
test
and
sub
dec
or
mov
adc
sub
push
cltd
out
bound
cmp
leave
xchg
push
jle
add
das
mov
xor
cmp
mov
movsb
xchg
sti
inc
adc
arpl
sub
test
in
and
mov
jne
mov
in
ja
mov
pushf
cmp
sti
sub
repz
nop
int3
xchg
fnstenv
aad
fldl
lret
mov
pop
mov
test
add
insl
push
or
push
xor
bnd
jo
daa
test
push
add
jnp
rol
daa
inc
add
jae
adc
jo
or
jno
adc
xchg
push
mov
cmp
movl
scas
in
xor
mov
les
movsl
mov
sbb
jae
pop
xor
imul
insl
mov
pop
test
add
nop
cmp
movsl
mov
or
mov
scas
xchg
ss
mov
push
mov
dec
xor
mull
test
sahf
jns
pop
test
stos
sbb
xlat
enter
mov
cmpsb
jp
xchg
repnz
idivb
push
pop
push
adc
cltd
loope,pt
inc
outsl
mov
jp
jae
push
fsub
pop
popf
adc
inc
test
sbb
out
mov
mov
and
push
dec
xor
aam
mov
sub
ret
fisttpl
js
sub
in
nop
enter
and
js
xlat
pusha
push
xor
stos
stc
lods
bound
mov
shl
xchg
sub
mov
push
fstp
dec
sti
mov
mov
sbb
inc
js
call
stos
mov
and
add
daa
jnp
mov
sub
leave
pusha
push
pop
jmp
ljmp
sbb
and
ss
lret
add
cmp
or
out
push
jg
test
jb
insb
push
lret
lret
jecxz
int3
js
pop
sti
inc
mov
dec
xchg
pushf
sub
loopne
sub
mov
pusha
pop
xor
in
cmpsl
and
pushf
adc
pushf
inc
out
jbe
sub
movsb
push
cmpsb
push
js
pushf
sbb
sbb
in
inc
inc
div
aas
jbe
lret
push
mov
sub
cmpsb
mov
aaa
bound
es
movsl
fwait
loope
cmp
ljmp
inc
mov
fists
repnz
add
int
addr16
aas
stos
and
mov
mov
test
in
jmp
sti
sbbb
mov
mov
int
xchg
aam
sbb
sub
sub
sbbl
scas
cmp
test
iret
sub
xchg
and
les
cmp
out
repnz
lcall
cmp
push
fmuls
and
pop
std
xor
pop
in
push
imul
std
lods
sbb
xlat
cmp
jbe
inc
sub
mov
add
cmp
sbb
push
in
sbb
jo
adc
and
jns
add
push
xor
push
js
int3
icebp
rol
test
xchg
sbb
add
scas
xchg
jmp
jb
xor
orl
test
mov
insl
xchg
or
inc
cmp
mov
pop
daa
mov
push
jecxz
sbb
mov
lcall
or
push
cmp
loope
and
xchg
lea
inc
mov
lods
loop
push
dec
inc
mov
and
mov
sbb
lea
pushf
jmp
mov
mov
push
push
mov
pop
adc
mov
lahf
pop
js
pop
hlt
push
stos
fs
mov
shll
push
int3
ss
shrb
andl
mov
loopne
lahf
lods
mov
nop
and
jmp
lods
pop
mov
mov
jae
adc
icebp
add
mov
jae
fistpl
or
cmp
sub
mov
adcl
adc
sub
inc
lahf
inc
test
pop
outsb
add
rorb
pop
xchg
sub
cmpsb
mov
cs
xor
mov
push
lods
sub
mov
or
jp
mov
cmp
xchg
out
aam
fistps
sub
adc
dec
rcll
sbb
leave
test
pop
jne
int
pop
in
pop
add
pushl
mov
pop
mov
inc
sahf
adc
pop
mov
xchg
sub
insl
lock
js
sahf
add
call
movsl
inc
lods
cli
mov
je
jmp
sub
pop
iret
imul
stos
lret
fldcw
inc
das
sub
pop
outsl
add
inc
jne
cmc
mov
movsl
push
imul
sbb
sbb
and
and
cmp
jnp
in
pop
cmpsl
imulb
dec
iret
pop
out
out
pop
and
pusha
cmpsl
test
or
mov
xor
fmuls
jmp
push
sbb
push
ret
sbb
jo
lods
frstor
pop
pop
add
add
popf
xor
add
outsb
mov
fs
int
adc
adc
cmc
enter
out
jmp
pop
cmpsl
mov
ljmp
loop
repnz
adc
xor
sub
adc
lds
lret
and
pop
iret
and
lods
add
push
jge
in
xor
mov
dec
rcll
fsubs
pushf
sub
repnz
mov
and
inc
jo
cld
add
popf
stc
xor
ds
sub
aaa
aad
imul
and
in
mov
decl
dec
pushf
insl
jecxz
dec
mov
cmp
jno
sbb
lds
ljmp
fsts
sbb
jmp
fistpl
lret
stos
xchg
ret
push
shlb
cmp
cmpb
movsl
out
mov
pop
in
pushf
sbb
mov
hlt
pop
test
push
fs
xchg
adc
repnz
cmp
fcomip
push
and
in
iret
add
aas
insb
inc
and
or
mov
mov
xchg
leave
adc
adc
mov
fdivrl
mov
mov
ror
adc
jl
scas
xor
adc
push
addr16
les
shlb
sub
jns
push
fmul
shlb
enter
aam
inc
iret
not
ret
fstl
movsb
test
cmp
out
push
mov
shl
cli
ja
xchg
sahf
das
adcl
fdivrl
int
push
and
inc
sub
adcl
sarb
xchg
scas
scas
leave
movsl
pop
dec
sub
push
popa
roll
xorl
incl
mov
sub
mov
call
sbb
das
pop
sbb
decl
jmp
sbb
push
push
adc
adc
sub
and
xor
push
rorb
sub
cwtl
scas
jle
sub
popf
pop
daa
call
inc
testb
mov
fisttps
pop
or
mov
pop
jne
cmp
dec
shlb
mov
adc
test
fimuls
mov
inc
cs
cld
bound
or
and
das
aaa
daa
mov
rcrb
xchg
fcompl
in
lds
cmp
pop
enter
mov
montmul
cmpsb
inc
mov
jb
mov
cmpsb
xor
orl
rcrb
add
stos
rcrl
jge
lods
cmp
sub
addb
ret
fistl
stos
popa
mov
mov
cmp
jg
or
imul
out
sbb
cmc
sub
rol
stos
loop
test
push
test
les
sbb
repz
dec
dec
aad
rorb
aad
fnstcw
int
aaa
lea
pusha
jne
pop
add
int
push
mov
je
lods
jl
negb
fldcw
lahf
cmp
jnp
sub
roll
add
jbe
lret
mov
sar
add
enter
ja
inc
call
adc
sub
dec
xchg
sub
mov
push
mov
mov
ficompl
xchg
cmp
cli
fcomp
dec
pop
mov
js
addr16
or
cmp
and
push
scas
xchg
cmp
shlb
add
lret
cli
and
xchg
pop
cmp
mov
fs
imul
mov
test
fstp
lods
and
push
xchg
xchg
mov
fcompl
popf
fwait
cld
popa
xlat
mov
fnclex
mov
test
xor
add
and
cmp
or
jmp
push
cltd
xchg
mov
xchg
test
outsl
push
test
mov
popa
sbb
call
mov
ss
mov
push
sub
xchg
inc
and
xchg
sbb
lcall
insl
addb
push
in
shl
push
jns
mov
repz
lcall
xchg
aam
or
or
mov
push
mov
repnz
xor
test
movl
repnz
xchg
lret
mov
faddp
cli
jmp
xor
cmpsl
xchg
pop
mov
pop
pop
js
mov
out
cmp
cmp
out
dec
jecxz
xor
xchg
mov
into
adc
ss
sbb
cmp
sbb
aad
xor
sarb
mov
sub
lods
pop
ficomps
xchg
push
dec
loop
xchg
aas
movsl
sub
jbe
and
add
loop
push
cmp
inc
inc
ss
cmp
leave
cld
cmp
push
dec
xchg
movsl
jle
mov
jnp
dec
out
lret
add
pop
scas
xchg
popf
aam
cs
inc
std
jno
xchg
push
int3
lret
sub
pop
pop
sub
xor
je
push
gs
sub
movzwl
sti
sub
lret
loop
add
cmp
cmc
lahf
push
insb
xor
sub
mov
mov
out
or
aas
lret
jle
add
push
pop
std
lar
mov
jle
jg
lods
or
and
fimull
push
in
mov
pop
push
fwait
addb
sub
mov
cli
fsubrs
sbb
js
sub
dec
adc
and
xor
pop
in
mov
sbb
cli
je
mov
dec
scas
int
mov
or
daa
add
movsl
pop
inc
dec
push
adc
mov
inc
add
push
in
test
imul
mov
mov
jmp
es
lret
mov
push
jg
sbbl
or
cmp
cld
jno
push
mov
or
cmp
or
jecxz
jle
cli
or
sbb
imul
lock
jecxz
jbe
adc
pop
je
in
ret
xorb
movsb
jnp
dec
mov
xor
testl
jle
or
push
pop
sarb
dec
insb
push
adc
add
cmp
pop
push
pop
xor
mov
movl
jo
push
jg
or
orl
xor
mov
adc
sbb
mov
fiaddl
and
mov
sbb
ljmp
jns
pop
les
cmc
adc
lret
jno
xchg
sub
xchg
adc
aas
rcrl
lods
jns
mov
loopne
jb
push
insb
shl
bound
adc
fcomps
or
mov
notl
std
nop
fldenv
cmp
ss
add
lret
xchg
shrl
jo
cmc
nop
cmp
out
xor
out
mov
mov
add
imulb
bound
cmc
pop
hlt
or
popa
sub
rol
stos
scas
cli
dec
jae
mov
and
test
xor
mov
arpl
sub
mov
sti
out
mov
rol
jp
sub
in
mov
sub
es
mov
fwait
push
mov
jmp
dec
shll
repz
xor
and
xchg
pop
and
inc
sub
inc
pop
pop
mov
fwait
dec
lret
cmp
enter
aad
mov
dec
clc
push
xchg
out
test
ret
pop
insl
outsl
cmpsl
cmp
mov
xchg
std
inc
rcl
push
aaa
cmc
xchg
mov
mov
subl
std
push
pusha
lret
pop
mov
jmp
fmulp
pushf
mov
jbe
sub
call
mov
int3
test
aaa
dec
pop
scas
inc
lret
dec
fstps
mov
xlat
lret
adc
mov
lea
mov
xchg
pop
insb
sub
push
jle
ljmp
cmp
out
jmp
sub
push
fmuls
mov
mov
xchg
lret
jns
imul
mov
arpl
loop
jo
xor
out
adc
dec
push
cwtl
mov
es
js
aad
or
lock
dec
pop
push
movsb
xchg
mov
imul
dec
fnsave
lcall
push
cmp
std
lret
cmp
fcom
test
mov
push
push
jnp
aaa
in
fadd
lods
out
push
cmovnp
adc
aam
adc
or
pop
jmp
loope
movsb
mov
pop
stc
and
push
cmp
fcompl
jne
sahf
or
xor
outsl
push
das
and
mov
push
nop
sbb
imul
cmpsl
sbb
xchg
repz
fcoms
push
cmp
inc
pushf
dec
dec
repnz
cmp
iret
push
test
cmpsb
repz
or
mov
mov
frstor
pop
or
data16
add
jae
jae
bound
pusha
pop
inc
jbe
mov
enter
adc
and
icebp
sbb
rolb
roll
jb
mov
in
negl
sub
fcomps
lret
or
jb
cmp
dec
ret
insl
cmpsb
add
test
cmpsl
mov
mov
lock
call
dec
mov
dec
mov
inc
adc
into
nop
xchg
xchg
inc
jp
jg
xchg
call
test
and
fcom
pop
jno
add
inc
out
add
sbb
andb
in
push
std
or
aaa
mov
push
inc
movsl
push
adc
add
ljmp
inc
daa
push
insl
adc
jb
aas
stos
inc
sahf
jno
pop
out
xor
dec
xchg
je
fistpl
dec
mov
pop
cmpsl
sbb
xchg
or
pushfw
and
push
fcoml
cwtl
aad
pop
pop
mov
xchg
jmp
pushf
aad
das
cli
shrl
hlt
adc
je
ss
pop
xor
test
pop
imul
cmp
lods
mov
shl
les
call
or
scas
inc
sbb
push
imul
icebp
pushf
add
imul
shl
push
dec
adc
push
enter
ja
inc
jmp
clc
adc
stos
mov
jp
pop
test
rclb
or
hlt
jmp
add
dec
test
stos
sbb
pop
insb
push
fst
test
or
insl
inc
or
push
lds
cmp
jnp
shlb
mov
and
mov
pop
cmpsl
cmpsb
imul
sub
and
imul
bnd
jae
fbld
stos
mov
in
xor
test
fs
pusha
push
imul
xor
inc
cmp
adc
sbb
jp
dec
lods
or
or
push
leave
inc
aas
aas
push
and
adc
push
lods
or
mov
cmp
or
or
and
fcomi
or
sub
sbb
jne
addr16
aad
cmp
push
dec
mov
mov
mov
or
int3
mov
pop
sub
push
lock
das
bound
xor
stos
test
in
js
xor
fs
clc
das
xabort
push
arpl
xchg
dec
in
imul
sbb
push
inc
cmp
sbb
shl
inc
addr16
sbb
sub
xlat
mov
mov
mov
sbb
rcll
fstpt
nop
add
sub
aas
fcmovbe
mov
sbb
es
addb
pop
leave
jb
dec
fisttpl
push
inc
sbb
je
mov
xchg
addb
out
cmp
or
icebp
mov
lahf
call
call
aad
cmc
add
mov
fildll
or
xor
stos
or
sahf
fildl
fcomip
es
push
adc
insb
imul
and
lahf
test
lods
xor
push
cmp
dec
rdtsc
adc
cmp
pop
mov
sub
sub
inc
push
mov
out
rorl
dec
xchg
shrb
inc
dec
aad
stos
xchg
popf
jecxz
rclb
jbe
adc
xchg
xor
fadd
or
cwtl
into
mov
pop
adc
aas
loopne
daa
xchg
mov
xchg
adc
dec
inc
imul
sbb
outsl
in
push
pop
cltd
adc
filds
rcr
xchg
fimuls
loop
cltd
mov
push
xchg
add
sbb
int
iret
repnz
and
data16
jbe
xchg
dec
cmp
fsubrs
xchg
enter
cmp
imul
xchg
aas
idiv
pop
inc
xchg
in
adc
in
std
inc
and
test
adc
sub
push
repz
mov
mov
cltd
jmp
dec
lods
and
inc
jecxz
jle,pn
sahf
loop
pop
negl
push
flds
push
mov
xlat
or
stos
pop
ret
test
gs
cltd
repnz
fisttpl
hlt
out
test
sub
repnz
cmp
sub
xchg
lds
mov
addl
in
mov
mov
mov
xchg
movsb
int
mov
pop
dec
es
es
jae
sbb
popf
test
jmp
les
sbb
sbb
scas
repnz
xchg
pushf
lods
pop
add
sub
in
incb
cmpsl
fcoml
pop
jae
sbb
pop
sub
and
jg
pop
mov
jle
ret
push
fs
test
imul
cmp
popf
inc
cmp
divl
xorl
fsts
lahf
movsl
test
jbe
adc
or
stos
cmp
aad
add
xchg
push
fidivs
int
mov
jp
add
in
ret
dec
jae
shrb
jo
push
xor
pop
xchg
push
xchg
mov
xrelease
and
loop
sub
sub
or
sub
repnz
cld
jle
daa
inc
repnz
pop
pop
mov
test
sbb
js
dec
inc
shr
mov
mov
ret
xchg
roll
xchg
jb
ret
xor
stos
add
lahf
and
sub
in
std
sub
inc
pop
mov
jb
pop
repz
in
push
movsb
mov
xlat
push
pop
mov
gs
fs
outsb
dec
mov
out
sub
dec
lods
mov
pop
pop
cmp
sbb
pop
in
or
mov
sbb
arpl
jo
loopne
dec
inc
js
lods
sahf
cmp
dec
and
sti
cld
push
jle
fs
push
lret
jmp
loop
ret
adc
leave
or
aam
inc
jge
xor
lds
mov
jecxz
push
jae
cmp
jl
sbb
cmc
mov
push
jmp
jno
sub
or
movsl
mov
add
shrb
pop
into
and
cmp
adcl
xchg
imul
outsl
popa
roll
rcll
lret
ljmp
andb
aas
xchg
in
mov
lods
adc
out
mov
jns
inc
mov
test
dec
jnp
or
cmp
sub
cmp
push
outsb
scas
jne
mov
mov
js
jne
pop
inc
xlat
sbb
pop
mov
push
rcrl
cli
leave
cltd
xchg
aam
jns
and
ljmp
inc
movsb
adc
jle
inc
das
fs
movsb
jge
lea
add
or
fbld
adc
mov
iret
sbb
xchg
clc
out
dec
movsb
mov
jno
xor
rorl
inc
clc
add
and
fimull
xchg
aam
jnp
push
mov
cld
cmp
jnp
mov
test
lret
aam
not
notl
je
sbb
mov
ret
push
push
test
inc
jl
sbb
ficomps
cmp
addr16
and
pop
lcall
es
cs
xchg
pop
test
cmpsl
orl
iret
cs
cmpsb
inc
hlt
push
mov
outsb
adc
push
cmp
push
hlt
mov
fistl
and
cmp
lret
mov
jp
das
add
pop
orb
fs
push
xchg
dec
push
jmp
pop
mov
xchg
fwait
je
sub
shrb
notb
jle
push
sub
mov
cmpsb
scas
pop
jecxz
mov
lret
sub
fdivrl
loop
xorb
jge
cltd
rcrb
dec
in
lods
outsb
jns
jecxz
call
pop
sarl
call
jge
sbb
inc
enter
mov
pop
push
adc
dec
test
mov
fbstp
negb
lahf
rcrl
iret
iret
out
bound
dec
insl
pop
or
jnp
mov
or
imul
cltd
mov
mov
cmp
negl
jno
sbb
fwait
stos
lods
lds
stos
pop
stos
cld
rcrl
dec
pushf
mov
adc
js
test
jno
cmp
mov
xor
pop
add
fistpll
clc
lock
xchg
sub
repz
xor
arpl
mov
arpl
and
imul
push
sahf
ljmp
aas
or
sub
insl
mov
push
in
mov
mov
pop
ficoms
cltd
aas
mov
sub
sub
sbb
repz
out
adc
in
push
or
shrl
mov
mov
loopne
jmp
cwtl
mov
testb
inc
int
scas
fldl
push
faddl
pop
adc
xor
mov
bound
clc
mov
add
push
sti
or
subl
mov
xchg
jno
lahf
and
dec
lea
dec
enter
shll
pop
adc
xchg
js
push
dec
mov
jle
repnz
jmp
xchg
adc
in
xchg
sub
mov
dec
movsb
adc
iret
aad
fs
xor
add
xor
push
dec
mov
cmpsb
fninit
imul
pop
test
mov
fs
jl
jae
insl
sub
cmp
cli
mov
andb
sub
push
cs
fldenv
aaa
mov
sbb
cltd
dec
and
sub
mov
les
lret
dec
lret
xlat
popf
jp
xlat
pop
jg
mov
pop
call
rcl
leave
add
add
in
and
subl
andb
scas
cmp
mov
xor
push
xor
xor
adc
inc
fwait
or
pop
fwait
pushf
notb
and
ja
mov
fidivl
test
aad
cmp
push
daa
aam
popa
xor
in
fisttpl
out
in
cmp
jbe
lods
mov
mov
fwait
sub
inc
fisubl
xchg
add
xchg
cwtl
pop
jle
pop
and
je
pxor
pop
call
jmp
mov
pop
lret
xor
push
and
in
stos
nop
faddl
sbb
dec
cmpsb
cwtl
lret
fnstenv
sub
jb
dec
adc
arpl
arpl
jge
lcall
xchg
subl
mov
aam
sub
push
outsl
fmul
and
fscale
and
lahf
inc
lds
pop
clc
cmp
jns
popf
sbb
push
pop
ret
daa
mov
mov
xchg
ret
pop
bound
pop
xchg
je
nop
inc
pop
jno
lds
ds
pop
jecxz
mov
inc
inc
dec
jbe
adc
shld
pop
mov
pop
jmp
push
sub
in
mov
or
sbb
push
int
pusha
jb
negl
mov
aaa
imul
dec
push
aam
mov
xlat
jb
pop
lods
mov
mov
sti
in
shlb
in
in
dec
les
cli
es
out
inc
rclb
xchg
mov
xchg
fwait
sub
mov
and
clc
imul
cmc
add
loope
xchg
js
mov
hlt
push
adc
popa
ss
pop
cmp
jnp
jg
pusha
push
out
or
enter
jmp
add
dec
adc
dec
add
mov
xor
adc
jle
ss
btc
xchg
icebp
or
sub
idiv
mov
mov
sub
aad
cltd
imul
xor
push
loop
mov
and
sbb
xchg
lret
xlat
cmp
jb
pop
lea
dec
shll
mov
push
mov
sahf
enter
xchg
inc
andl
lahf
out
mov
adc
stos
sbb
lret
ret
xchg
pop
pop
shrb
ljmp
stos
sub
inc
fcmovnbe
pushw
lods
mov
and
iret
cmc
sahf
dec
mov
or
adc
sub
inc
cvtps2pi
mov
or
stos
pop
popf
push
push
mov
add
lods
imul
inc
movsb
or
sahf
xor
stos
insl
sub
enter
pop
and
data16
dec
mov
or
rcrb
mulb
ds
cmc
jae
cmpsl
mov
fnstenv
sub
ret
xchg
push
dec
xchg
push
mov
add
jbe
mov
add
jae
stc
add
push
xor
adc
test
xor
fprem
ja
cmp
jge
jl
adc
jle
ja
fsubp
push
xor
gs
aam
pop
arpl
stc
mov
add
lcall
rorb
push
loope
in
ja
std
add
cwtl
fcoml
adc
nop
mov
adc
int
adc
sub
mov
cmp
xchg
neg
pop
sahf
xor
push
lods
jae
sbb
mulb
andl
imul
stos
xchg
dec
adc
pop
stos
sub
std
dec
loope
dec
out
xor
or
data16
sub
lret
inc
xor
push
pop
xor
sbb
add
add
inc
fistl
lds
fistl
inc
fidivrs
xchg
pop
jp
xor
xchg
enter
adc
cmp
fisubl
inc
lock
dec
xor
lcall
loop
lds
pop
add
or
sahf
rcr
les
pop
xor
or
out
mov
insb
pop
dec
jo
jnp
xchg
mul
mov
push
test
dec
cmp
rcll
iret
jmp
data16
fxtract
pop
fnstcw
fsubp
jbe
add
stos
test
enter
movsb
std
mov
push
scas
and
ss
ds
xchg
push
nop
dec
fsubrl
into
mov
dec
movsl
test
jecxz
xlat
xchg
adc
sbb
push
lea
and
adc
pop
loopne
sti
lods
pusha
shl
lret
iret
andb
test
lock
mov
jecxz
daa
sbb
dec
jp
inc
cmp
xor
xchg
xor
and
pop
or
jae
js
imul
xchg
fcmovne
aad
mov
fisubrl
lods
inc
mov
push
dec
add
das
div
adc
pop
xor
stos
push
or
ror
mov
xlat
call
aad
sbb
mov
lds
jmp
gs
jmp
neg
mov
dec
imul
add
xchg
and
call
std
int3
stc
and
jne
test
push
stc
sahf
aad
lods
and
mov
arpl
stc
sub
jle
scas
iret
lret
lock
xchg
push
adc
sbb
or
imul
negb
cltd
mov
hlt
gs
mov
or
inc
sbb
out
popf
daa
push
pop
leave
sub
mov
sub
pop
ret
divb
mov
inc
xor
aam
rol
add
dec
xchg
in
lds
mov
and
jne
mov
call
fmuls
cltd
dec
loop
sub
push
cmp
int
xchg
push
add
loop
mov
xchg
addr16
adc
adc
out
and
cmp
mov
add
gs
into
repz
addr16
sub
scas
lods
je
mov
mov
add
xlat
adc
mov
jmp
sahf
xor
xchg
mov
mov
imulb
adc
stc
popa
adc
cmpsl
cmp
cli
dec
dec
cmpsl
pushf
aas
jp
js
sub
popf
push
and
rcl
dec
pop
fcomps
add
sub
jge
cwtl
clc
nop
xchg
xor
jne
xor
frstor
add
dec
or
imul
jge
subl
pushf
xor
cmc
stos
aaa
in
fiaddl
xchg
imul
ret
ret
out
adc
popa
out
or
pop
sti
bound
sbb
or
lahf
mov
fstpt
lret
jae
pop
pop
bndstx
ja
dec
ljmp
and
sub
or
fisubrs
cmp
push
or
sub
inc
in
in
data16
cmp
mov
fwait
push
xlat
sub
scas
loope
jmp
cmp
aaa
aad
call
loopne
mov
adc
add
lret
std
jb
mov
out
das
add
sahf
add
repz
imul
inc
pop
dec
icebp
lret
pop
sub
push
int
gs
inc
sbb
jge
leave
andl
add
sub
adc
pop
arpl
loop
xlat
and
inc
repnz
in
enter
aas
in
loopne
pop
pusha
outsb
fidivs
popf
in
mov
jae
jno
outsb
jns
icebp
push
inc
lret
push
push
into
xchg
es
or
outsl
sub
sub
add
jp
rclb
and
addr16
inc
or
rcr
xchg
in
movsb
jg
notb
jecxz
outsl
or
fdivr
mov
test
xor
jne
xchg
and
mov
sub
jecxz
sub
cmp
mov
outsb
dec
xlat
pavgb
push
sbb
scas
pop
sbb
push
sbb
data16
sbb
rclb
sub
mov
adc
lods
sbb
dec
sub
lds
shll
ljmp
neg
mov
icebp
cltd
addl
mov
lret
nop
clc
mov
pushf
jmp
push
lock
int3
movd
imul
mov
xchg
je
in
movsb
lret
into
add
mov
ret
push
push
mov
cwtl
fisubs
imul
add
xor
pushf
cwtl
and
leave
adc
push
les
movsl
jno
mov
popf
xchg
rol
roll
test
sub
testb
fcompl
insl
cltd
lock
push
shll
addr16
jl
and
out
mov
adc
addb
push
pop
fistps
xchg
jecxz
xor
in
xor
arpl
mov
movsb
mov
inc
sbb
cld
inc
push
mov
mov
dec
cltd
lea
sahf
mov
adc
mov
fadd
dec
inc
fwait
enter
sahf
sbb
push
lret
pushf
fbld
jl
xor
fstpl
mov
add
in
call
jle
daa
pop
push
push
xorb
cmp
cs
xchg
pop
mov
xchg
loope
scas
imul
outsl
gs
flds
jns
inc
cmpsl
pop
cwtl
lds
scas
outsl
insb
mov
push
icebp
ror
or
loopne
jg
jae
popa
mov
repnz
sbb
loop
stc
mov
lret
sub
popa
test
add
mov
out
adc
mov
pop
jb
mov
mov
sub
ret
push
cmp
movq
dec
in
push
out
pop
divl
insl
sub
pop
fwait
pop
icebp
add
inc
hlt
jb
aaa
dec
dec
in
cmp
jo
mov
pusha
mov
push
enter
gs
out
pushf
push
clc
repz
xor
xor
and
and
cmc
ret
shll
scas
les
sub
or
xchg
push
mov
inc
inc
mov
and
or
leave
push
cmp
test
test
adc
cmp
leave
jo
push
adc
stos
jae
jg
fcompl
sbb
stos
call
fmuls
mov
cmp
and
mov
dec
mov
push
les
adc
mov
cmpsl
js
popa
daa
adc
or
cli
pushf
cmp
inc
jbe
insb
insl
cmp
sbbl
push
xor
push
mov
cmp
aam
add
mov
test
rol
cltd
xor
shl
lret
pop
fwait
mov
scas
jmp
outsl
sahf
xor
xchg
xor
or
and
pushf
in
or
shl
mov
into
fwait
loop
jl
popa
hlt
js
inc
lcall
mov
shlb
pop
pop
bound
add
sub
jbe
insl
xor
cmp
sbb
pop
mov
stc
jecxz
je
add
loope
insl
or
xchg
and
mov
sbb
cmp
orl
xor
daa
cmp
fsubl
jb
inc
add
femms
pop
scas
cwtl
mov
mov
and
jp
sbbl
xchg
mov
je
aaa
inc
fnstenv
iret
inc
mov
faddl
les
cs
mov
or
adc
mov
push
lret
enter
les
pop
inc
daa
clc
jle
or
aad
jge
sti
sbb
fisttpll
lods
mov
rcrb
mov
xchg
or
xor
in
les
lret
cmp
xor
mov
lcall
aaa
sbb
cmp
jo
mov
aaa
or
ja
pop
iret
lcall
scas
call
dec
mov
pop
out
add
cmpsl
es
iret
fidivrl
sbb
call
pop
dec
aam
inc
in
out
mov
cmpsl
ljmp
icebp
mov
mov
cltd
jecxz
test
in
mov
adc
xchg
mov
ljmp
adc
rcl
fcoms
pusha
out
stos
jp
add
jge
xor
adc
xchg
sbb
lods
popf
mov
mov
popf
pop
sti
ja
imull
into
mov
pop
mov
js
mov
adc
loop
pop
adc
mov
idiv
ss
stos
pop
outsl
cmp
or
jecxz
mov
add
push
mov
jge
sbb
mov
dec
mov
adc
icebp
fadd
push
hlt
push
dec
outsl
enter
xlat
xchg
int3
fnsave
sbb
fmull
cs
dec
jmp
mov
dec
mov
stos
sub
scas
pop
mov
push
rol
and
test
dec
cmp
or
xchg
rolb
repz
fistl
adc
mov
dec
sbb
rol
and
add
pop
mov
int3
call
in
push
mov
aas
jne
out
hlt
mov
adc
lcall
jmp
xor
xor
dec
test
jp
int
and
lret
call
pmuludq
es
sub
push
sbb
add
and
les
daa
sub
pop
cwtl
pop
push
mov
mov
cmp
jae
adc
in
fistpll
lods
jecxz
call
cmc
imul
loopne
xchg
leave
inc
in
inc
sbb
mov
push
pop
repnz
add
jge
push
push
sbb
lods
cwtl
jns
movsb
enter
shll
fildl
and
inc
pop
push
lret
jnp
mov
xchg
inc
xor
stc
mov
mov
xchg
fcmovbe
ret
dec
sbb
sbb
inc
jg
push
roll
pop
in
jno
push
mov
jbe
adc
test
xor
push
fsubs
pusha
mov
icebp
int3
sahf
xor
cmpb
sub
insl
cmp
fdiv
fdivrs
dec
jge
push
jg
adc
loopne
sbbb
pusha
xchg
or
lahf
insb
and
aad
dec
xor
mov
or
mov
out
push
dec
xchg
into
inc
mov
shll
pop
pop
cmpsb
jg
in
cld
jo
aas
mov
dec
in
add
jmp
leave
pop
mov
cmc
in
nop
data16
sub
imul
outsl
xchg
and
jl
rclb
hlt
fstpl
les
pushf
stos
out
fisttpll
jl
dec
dec
outsb
xchg
cli
xor
push
mov
fildll
mov
test
js
fisubrl
outsb
jecxz
sub
xor
sub
and
adc
cltd
cmp
sti
jnp
cs
dec
push
push
or
jp
cmpsb
mov
sub
repnz
idivl
shrb
ja
fdivl
ljmp
push
cli
mov
mov
pop
movsb
mov
pop
daa
xchg
je
jle
mov
add
mov
cmp
or
pop
and
imul
cmp
fidivrs
xchg
jge
jne
mov
jbe
lea
or
gs
imul
add
cmp
mov
push
pop
lret
ret
jmp
xchg
xor
xor
sti
negb
fs
inc
in
mov
lds
xor
ss
mov
push
adc
repnz
ror
mov
iret
loop
les
sub
std
xchg
addr16
sbb
arpl
lods
adc
imul
in
mov
lock
xchg
push
rol
das
out
mov
mov
mov
outsl
and
mov
adc
insb
jmp
dec
in
sahf
int3
aad
int3
xor
mov
movb
imul
repz
popa
lret
jmp
adc
and
mov
loopne
push
lahf
popa
std
imul
mov
jbe
sub
sarb
add
cs
pop
pavgw
and
rorb
sub
roll
mov
sub
outsl
icebp
push
jle
stos
into
mov
lock
jl
lahf
push
subb
fs
push
inc
cli
xchg
sahf
sub
int3
push
fists
ljmp
dec
sub
jge
push
sti
add
jp
dec
sub
loop
js
jl
cmc
push
dec
and
pushf
aaa
inc
lret
push
rcl
mov
pop
jmp
push
or
loopne
inc
add
scas
cmp
jg
out
ret
sub
stos
pop
in
pop
sarb
rclb
fucomi
push
adc
lea
mov
mov
cmp
and
xor
inc
pop
es
and
cmpl
ljmp
mov
fsub
sub
jg
mov
add
push
xor
mov
lcall
cld
mov
arpl
mov
mov
ficompl
lret
push
and
sub
imul
popf
dec
addr16
sbb
inc
mov
cmp
sahf
mov
push
fmull
repnz
xchg
xor
ss
sbb
dec
mov
std
ja
push
jge
inc
mov
into
mov
fs
pop
test
xor
lds
negl
push
stos
aaa
loop
mov
cltd
lods
les
sbb
movsl
lea
shl
jle
mov
lcall
mov
sub
and
call
cwtl
xor
sti
xor
jge
arpl
jle
add
cli
add
rcrl
fs
and
and
mov
shll
mov
pushf
cmp
subb
ljmp
push
iret
push
pop
jge
sbb
lcall
push
dec
scas
jb
xlat
or
fwait
cmpsl
into
and
jecxz
xor
xchg
in
stos
popa
cmp
ds
aas
out
push
add
popa
mov
push
add
sub
jmp
cmp
pop
cmp
dec
mov
push
pop
push
sub
out
out
loope
xor
push
ss
call
sarl
into
outsb
pop
cld
sub
and
inc
or
xor
cmpb
faddl
dec
inc
out
cmpsl
loopne
out
dec
fidivl
sbb
int3
outsl
dec
and
jmp
movsb
inc
stos
pop
cmp
mov
popa
or
or
and
cli
sti
jmp
add
fidivrs
jnp
jns
lods
fstpl
ret
pop
stc
in
shl
mov
and
test
sub
cmp
xor
out
inc
jo
popa
sbb
divl
and
shlb
ficoms
cmpsl
aaa
sub
sahf
test
or
aas
xlat
cmc
jb
sub
mov
std
dec
and
inc
stos
in
jge
gs
cmp
mov
enter
faddl
mov
or
add
leave
ffreep
daa
mov
mov
xor
fisttpl
pop
adc
js
mov
outsb
jp
adc
jbe
adcl
sub
in
and
rcrb
pop
push
mov
push
inc
nop
fbld
jge
adc
sbb
movsl
outsl
fdivrl
stos
imul
and
sub
mov
mov
cmpsb
stos
push
inc
dec
push
xchg
or
or
fninit
ss
xchg
mov
enter
sbb
push
les
pop
xchg
add
dec
mov
fcomps
pop
nop
sahf
pop
push
push
cmpsb
shrl
out
in
out
int3
flds
adc
clc
je
sbb
enter
ret
cs
or
cmc
mov
push
mov
mov
xchg
mov
push
in
rcrl
lods
jbe
push
pop
cmp
scas
sti
sub
cmp
adc
xor
lahf
aaa
in
pop
pushf
jbe
push
daa
sub
mov
sub
add
test
mov
inc
andl
cmpsl
fadd
jns
xlat
repnz
hlt
pop
imul
sbb
sbb
aas
ret
or
int3
arpl
cmp
out
lock
mov
xchg
imul
mov
push
inc
or
in
xchg
je
xor
and
lock
push
lcall
push
pop
rorb
fisttpl
pop
mov
mov
scas
mov
fs
repnz
stc
test
sub
ret
popf
add
dec
inc
sub
bnd
dec
mov
pop
push
mov
pop
xorl
or
in
jle
ja
xchg
lret
cwtl
lret
ja
lret
add
push
xchg
iret
push
pop
lahf
cmp
hlt
scas
les
mov
inc
loopne
sub
or
test
es
stos
sub
xchg
jo
sbb
push
je
or
in
mov
jbe
pushf
xchg
inc
in
fsubrs
leave
sbb
push
dec
and
and
and
repz
bound
ss
jge
and
addl
inc
and
inc
ljmp
jae
jge
adc
add
sahf
pusha
mov
andl
adc
mov
add
mov
ficoml
mov
js
sub
adc
test
adc
xchg
adc
stos
ret
sbbl
and
es
push
jbe
jbe
sbb
inc
inc
leave
pop
push
repnz
xchg
pop
pop
iret
lret
cmp
adc
push
fimull
sub
sbb
mov
loope
insb
xchg
imul
pop
outsl
push
je
repnz
adc
add
rolb
das
sub
jno
xchg
shl
ja
push
pop
mov
adc
stc
imul
daa
arpl
push
mov
idiv
popa
int3
scas
test
mov
xor
ret
jnp
cmpsl
repz
movsl
aad
jle
mov
adc
xchg
fnstenv
insl
dec
decl
scas
je
sbb
dec
sbb
lahf
adcb
xchg
jmp
push
test
je,pn
cld
sbb
pop
cmp
jmp
cmp
xchg
mov
stos
push
inc
pop
cmp
mov
add
ret
xorl
and
cli
cmp
mov
cld
repz
outsl
or
enter
shll
and
sub
addr16
addr16
adc
test
sbbl
nop
xor
adc
push
shufps
or
push
int
call
shrl
xchg
ds
jns
insl
fildl
dec
in
xchg
adc
push
and
dec
cmp
loope
call
int3
sahf
mov
adc
roll
insl
jne
dec
sub
adc
mov
pop
sahf
sbbb
push
and
adc
sbb
push
fisubrl
rorb
scas
lods
mov
sub
aad
inc
jo
test
loop
adc
xchg
rcrl
pop
push
outsb
divl
push
add
dec
dec
sahf
inc
lret
fidivs
and
cmp
pushl
jmp
ljmp
mov
mov
mov
aam
add
add
cmp
les
xor
dec
cmp
mull
movsl
inc
lods
lret
pop
ficoms
leave
adc
and
fs
jns
or
mov
and
cmp
mov
inc
fxtract
scas
dec
scas
movl
scas
push
imull
cld
mov
subb
jb
sbb
idivl
mov
and
push
imul
jle
addl
in
in
jmp
scas
sti
push
ffree
repnz
div
sbb
aad
sbbl
jge
addb
xor
mov
adc
pop
popf
and
or
push
mov
inc
add
sub
mov
movsb
and
addr16
push
dec
add
lods
mov
adc
shl
mov
addr16
sub
pop
insb
shrl
mov
cmp
adc
xor
xchg
rcrl
scas
inc
mov
jmp
dec
cmc
ret
xor
data16
sub
movsb
mov
cmp
dec
jmp
iret
sub
in
pop
das
jb
mov
cmpsl
xchg
cli
inc
push
pop
in
add
inc
out
test
test
inc
push
push
jbe
cmp
and
movsl
dec
iret
out
fcomi
jbe
xchg
cmpsl
dec
mov
loopne
ja
dec
mov
sahf
das
push
sbb
pop
orl
xor
pusha
push
movsb
cmp
mov
nop
movsb
insl
call
bound
mov
or
fbld
xchg
popa
pop
popf
or
test
dec
push
mov
mov
add
sahf
xchg
push
filds
cltd
pop
adcl
xchg
inc
jp
inc
push
rcll
push
pop
cld
stc
mov
mov
xchg
sbb
sub
cwtl
mov
fidivrs
dec
xchg
stos
xchg
rolb
push
stc
loop
cmp
fisttps
pop
pop
sub
cmp
push
jbe
aad
adc
loopne
pop
rolb
pop
pop
sbb
popa
sbb
push
mov
out
inc
jge
jg
cwtl
xchg
sar
clc
out
mov
repnz
pusha
ljmp
incl
mov
mov
adc
mov
je
mov
cmpsb
dec
mov
inc
jno
pop
cmp
stos
push
int
cld
inc
adc
mov
or
xor
mov
xor
rorb
push
ret
and
imul
push
cltd
into
loop
repz
cmp
repnz
add
xchg
cld
lea
rcll
int
outsb
test
push
jg
cmp
je
mov
jl
xor
cli
iret
sub
out
cs
fdivrs
xchg
dec
jl
xor
mov
mov
inc
loopne
std
inc
inc
insb
ja
add
std
in
inc
enter
pop
pop
push
ljmp
lods
mov
cltd
mov
bound
andb
mov
cmpsl
push
mov
stos
shrl
movsl
xlat
icebp
ret
jb
sahf
outsl
adc
mov
mov
xor
subb
js
repnz
out
jne
adc
popa
pushf
in
ljmp
sbb
or
cmp
mov
stos
jg
pop
xchg
jbe
mov
js
in
push
cmp
pop
jne
push
and
cltd
jecxz
test
adc
lods
push
push
inc
arpl
int
mov
adc
jg
adc
call
testl
mov
dec
sbb
mov
push
andl
mov
dec
add
in
out
add
adc
lcall
pop
sub
subl
xor
pop
push
add
xchg
inc
ds
mov
outsb
mov
ficompl
push
out
sub
das
lea
xor
or
mov
xchg
cmpsb
lock
popf
in
jge
pop
fs
stos
fstpt
roll
mov
int
mov
adc
call
aas
and
lods
in
iret
push
and
or
lret
les
xchg
enter
xor
jno
popf
mov
mov
shl
xlat
sbb
movsl
sub
add
or
jno
cmp
sbb
inc
sbb
int
add
jmp
aas
push
bound
fisttpll
jno
out
aas
dec
repz
jbe
addb
sub
out
imul
mov
mov
xor
popf
int3
pop
mov
jecxz,pt
pop
cmp
jno
xchg
add
shll
out
jb
push
test
sbb
mov
mov
and
testb
pop
xchg
popa
xchg
iret
push
leave
fmull
es
sti
movsl
xchg
nop
daa
lret
add
xor
out
lea
xchg
xchg
lret
dec
adc
movsl
sub
sbb
mov
mov
adc
out
or
sub
sbb
mov
in
xchg
push
xchg
mov
pushf
and
jg
xor
cli
jle
add
push
mov
mov
pop
or
and
pushf
push
mov
push
inc
inc
push
scas
daa
sub
sbbl
cmp
sbb
sub
sahf
dec
fwait
into
adc
xchg
mov
leave
or
pop
pop
divl
popa
mov
cmp
sbb
xor
es
inc
pop
and
mov
xchg
mov
call
lahf
lock
jmp
ljmp
sub
inc
dec
pop
xchg
pop
xchg
adc
cmp
mov
xor
dec
cmpsb
ret
test
popa
insb
std
mov
mov
repnz
and
cmc
lcall
scas
out
mov
ja
cmp
mov
and
dec
sbb
je
jp
test
push
cmc
push
jnp
roll
xchg
cmpsl
push
aam
lods
inc
stc
sub
in
shrl
ja
mov
into
or
jae
subb
mov
mov
hlt
xlat
jmp
bound
xor
fstl
lea
setnp
inc
mov
clc
mov
mov
and
scas
or
out
insl
sub
clc
mov
nop
je
aam
xchg
rcl
and
fstpl
or
aam
cmp
push
sbb
lret
cmp
bound
cmp
gs
fsubs
dec
loop
inc
xchg
fsqrt
mov
insl
fstps
pusha
stc
pop
andb
sub
cwtl
mov
xor
repz
addr16
movsb
mov
stc
fsubs
mov
xchg
mulb
mov
add
test
sub
test
sarl
movl
lret
pop
stc
aam
hlt
fsts
outsl
push
jb,pt
imull
cld
stos
pusha
enter
jg
mov
rorl
dec
mov
jp
lret
sahf
divl
jae
xlat
add
xchg
test
adc
divb
or
mov
cli
inc
push
pushf
xchg
pop
dec
jle
ret
mov
negb
sub
jae
imul
stc
fstpl
das
pop
cltd
in
lahf
dec
mov
mov
pop
xchg
sub
jno
repz
test
pop
sub
adc
pushf
xor
dec
sbb
ret
xchg
faddp
pop
in
add
pop
test
enter
in
in
push
sub
jne
jae
int3
fbstp
add
jno
inc
xor
sti
or
sub
cmp
clc
mov
xor
sub
pop
fistl
into
inc
or
int
lahf
jae
lods
mov
adc
out
dec
add
push
inc
je
fmuls
inc
dec
test
or
xor
nop
xor
es
ret
adc
ds
jl
shl
jle
mov
inc
pop
lock
push
jnp
xchg
call
cltd
int3
cmp
adc
add
fldln2
xchg
arpl
out
aad
xchg
jp
add
mov
lret
cltd
xor
add
nop
faddp
rclb
je,pn
add
pop
xchg
push
in
lods
pop
out
add
mov
xchg
sti
pop
faddp
pop
jle
push
add
lds
pop
ds
mov
hlt
adc
in
dec
pop
mov
or
sti
adc
mov
xchg
sbb
mov
mov
and
fdivr
decl
sub
and
mov
mov
adcb
and
test
add
jmp
jo
sub
add
push
or
sbb
or
rcrb
ja
and
pop
std
stc
mov
ret
outsb
and
sbb
movsb
mov
mov
pop
ljmp
jl
cmp
or
pop
push
adc
in
daa
jg
adcb
lods
pop
mov
jbe
imul
ds
imul
cmp
xor
test
daa
lcall
mov
xchg
pop
sbb
nop
jne
jl
mov
mov
jnp
mul
fstpl
mov
mov
aad
add
dec
ret
orl
pop
cs
mov
jne
cs
xchg
xchg
popa
mov
fnstsw
inc
lods
cmpsb
push
dec
mov
loopne
out
fadds
mov
popf
mov
dec
adc
testl
aaa
lret
stos
int
inc
stos
les
mov
xor
jecxz
je
sahf
bndldx
sbb
mov
add
leave
jbe
pusha
sub
movsl
mov
negl
icebp
jns
mov
icebp
push
stos
mov
idiv
out
std
add
test
mov
push
xor
dec
lahf
cld
sbb
cmp
pop
cmp
aaa
mov
push
sbb
les
into
cltd
push
int
push
clc
in
mov
jge
sub
cmc
push
mov
jmp
neg
add
mov
lcall
jl
jmp
xor
mov
loope
fmuls
or
lods
lods
ret
adc
nop
xrstors
mov
jns
in
mov
daa
fisttpl
pushl
rcll
mov
lret
push
rcl
outsl
or
pop
sbb
mov
fs
push
cli
push
jge
mov
cs
adc
push
lods
test
lods
jmp
or
repz
in
arpl
jle
cmp
ss
out
mov
jg
or
jl
and
test
lahf
loopne
xchg
or
div
aas
sti
pop
scas
in
shll
mov
out
mov
ljmp
movsl
jecxz
push
bound
jnp
jbe
xor
xchg
scas
clc
add
fcoms
jo
aas
pop
mov
insl
loopne
stos
adc
in
cmp
mov
mov
test
loope
add
jle
jae
inc
int
lock
shrl
lcall
jnp
cmpsb
jge
loop
mulb
pop
dec
faddl
add
jmp
mov
loope
pop
out
jecxz
dec
ss
and
mov
jmp
in
xchg
push
scas
pop
adc
and
mov
stos
push
mov
aad
test
cltd
leave
lods
and
popa
inc
add
xor
dec
sub
push
lods
xchg
mov
imul
push
das
mov
leave
dec
cwtl
sbb
push
repz
mov
mov
add
out
orb
mov
test
cmovle
cmp
lds
jle
icebp
enter
pusha
mov
jns
inc
aaa
cmp
or
test
insb
or
fdivrs
lds
mov
pop
jp
mov
loop
aam
sub
xchg
repnz
negb
prefetchwt1
sub
xchg
mov
or
mov
adc
jmp
in
adc
fnsave
testb
cwtl
mov
lock
test
inc
pop
je
mov
mov
mov
stos
pop
dec
daa
jns
xor
cmp
adc
mov
outsl
pop
test
fdivs
xchg
sahf
mov
fistpll
or
data16
in
mov
jmp
push
and
pop
insb
popf
bnd
cmc
xor
cmc
test
pusha
jns
sar
pop
or
xor
push
sbb
call
icebp
add
pop
mov
test
cmp
sub
in
rolb
cwtl
cmp
lods
mov
loopne
rep
push
and
mov
les
scas
in
ret
adc
or
mov
add
nop
cs
cmp
scas
repz
gs
loope
mov
lcall
pop
orl
aam
mov
pop
push
cmp
orl
nop
icebp
lret
aad
ror
lock
cltd
cmp
dec
popf
xchg
daa
aad
jmp
insl
cmc
and
movl
mov
mov
mov
cwtl
lret
jge
xchg
ja
inc
aas
sqrtps
je
pop
cltd
mov
shrb
push
adcl
mov
fabs
or
icebp
mov
sub
and
das
mov
pop
pop
xor
cmp
fst
mov
adc
cs
sbb
daa
aas
mov
movsb
xchg
mov
mov
rolb
movsb
lahf
inc
mov
movsl
cmc
and
jp
xchg
test
hlt
jmp
mov
cmc
cmc
int3
lret
jb
sahf
jb
test
push
std
push
aad
cmpsl
inc
sbb
lret
mov
insb
lea
jmp
xchg
add
rcl
jne
or
in
lods
bnd
pop
jns
xchg
repz
rcrb
inc
and
and
pop
clc
xor
int3
icebp
inc
leave
cmp
leave
mov
loopne
cmpsl
pop
lock
int
fnstenv
pop
mov
imul
mov
sahf
call
mov
jno
and
push
daa
out
daa
push
sbb
cli
mov
js
xchg
cmp
in
mov
mov
pop
movsl
sub
cwtl
sbb
je
pop
xchg
sarl
fs
lcall
hlt
or
aam
movsl
pusha
sbb
outsl
out
clc
fsubp
jnp
pop
movsb
fidivs
outsb
add
addr16
cmp
repz
adc
ljmp
xchg
sbb
pop
out
sub
rorb
or
aad
into
into
out
jne
cli
and
ret
jle
cmp
and
scas
add
rcrl
into
nop
adc
test
pop
in
xchg
in
outsb
xchg
and
rorb
adc
sub
leave
jae
les
mov
cltd
sbb
sbb
lcall
ficomps
test
push
and
push
pop
repnz
dec
pop
cmp
sub
scas
daa
shll
js
inc
xor
sbb
push
imul
jne
data16
cmc
sub
xor
pop
cmp
pop
nop
push
pop
mov
jae
cmp
mov
pop
jbe
mov
adcl
int
and
sarl
sub
adc
mov
pop
pop
xor
cmp
cmp
lods
jmp
adc
dec
push
pop
fs
dec
inc
pushl
das
lock
and
pop
mov
mov
scas
leave
sbb
jp
mov
mov
jg
cmp
mov
ljmp
lahf
outsb
jecxz
xchg
pop
add
daa
push
dec
sbb
int
dec
nop
inc
in
stos
adc
sbb
jne
xor
push
pop
pop
add
jb
cmp
mov
xchg
mov
inc
out
pusha
ss
cmc
aaa
sub
sbb
pop
push
insb
xchg
or
mulb
jg
add
xchg
xor
filds
movsl
shl
fcmovbe
lret
mov
or
aaa
ret
adc
and
loop
out
movsb
out
lahf
je
iret
mov
lods
push
xor
js
sub
in
int3
mov
mov
jg
push
mov
mov
stos
push
shl
je
xchg
in
pop
incb
scas
inc
sbb
je
inc
dec
sbb
mov
adc
cmpsb
jmp
jo
pop
add
dec
add
and
xchg
jp
bound
cmp
inc
jne
xchg
push
dec
es
daa
jb
jmp
jns
dec
jns
gs
xchg
lcall
push
mov
mov
into
js
jns
xor
inc
mov
or
in
xchg
push
test
rcll
mov
pop
fwait
xchg
in
sbb
les
jo
cwtl
or
jmp
sbb
bound
test
sbb
idivl
push
push
fisubrl
icebp
movsb
sahf
leave
loopne
cmpl
mov
das
or
xor
mov
daa
subb
outsb
add
dec
xor
cmc
sti
or
in
dec
mov
fdiv
or
pop
mov
cld
ficoms
sub
add
pop
xor
push
sbb
or
lahf
mov
xor
rclb
xor
outsl
aas
add
sub
shrb
xor
inc
add
mov
jb
inc
out
rorl
rolb
sub
sbb
sarb
cs
cltd
add
ds
sbb
xchg
loop
pusha
sbb
mov
mov
jl
shrl
int
xor
popf
in
adc
xchg
jae
cmc
dec
jo
lahf
outsl
or
test
inc
add
jno
mov
push
sub
rcrl
ja
pushf
pop
and
mov
jmp
adc
sbb
lods
movsb
fnstcw
lret
lock
lret
push
push
push
add
pand
mov
xor
pop
cmp
loop
fistpll
xchg
mov
and
dec
jne
das
jge
scas
mov
xor
outsb
in
push
test
cmp
mov
mov
hlt
iret
stc
test
lods
xlat
cld
pop
mov
sahf
xor
and
xchg
std
fisttps
mov
neg
je
scas
xchg
xor
adc
mov
out
je
jp
in
std
adc
jp
jmp
and
xchg
in
inc
lahf
pop
stos
cmc
inc
loop
stos
jl
inc
inc
jb
and
aad
inc
mov
ja
pushfw
add
mov
cltd
gs
or
mov
movsb
fucomi
add
sbb
int3
mov
add
test
incb
add
xchg
ljmp
jae
jg
movsb
roll
xlat
lahf
or
andnps
roll
xchg
stos
jne
popa
jecxz
mov
outsb
cmpsl
addb
mov
or
fsubs
adc
xchg
std
jo
pusha
call
rorl
push
xor
sbb
outsb
pop
pop
shr
fs
cltd
sub
mov
outsl
mov
cs
pop
add
data16
sub
jmp
add
pop
les
mov
pop
cmp
imul
add
and
xor
inc
sub
pop
xchg
cmp
push
mov
xchg
mov
enter
pop
rcrl
xchg
jae
cmp
add
and
cld
lock
xchg
pop
sti
ljmp
pop
mov
orb
loopne
adc
lock
xchg
sbb
fisubrl
xchg
xor
jle
ds
incl
dec
pushl
pop
add
add
scas
push
mov
jbe
sbb
cmp
int3
nop
mov
mov
scas
sahf
filds
jmp
fwait
xchg
hlt
mov
sbb
adc
es
mov
mov
mov
pop
push
fsubrl
lods
xor
pop
mov
fstl
mov
gs
cmp
ret
push
ret
jle
push
push
and
pop
notb
not
push
mov
nop
das
into
jle
rcrb
cwtl
imul
aam
xor
inc
in
or
sbb
push
in
push
push
inc
and
push
outsb
sbb
push
inc
leave
mov
and
push
test
js
mov
fidivrl
mov
scas
dec
push
fmuls
aam
repz
sub
add
push
jns
loopne
push
pop
sub
pusha
jne
dec
jmp
rcll
std
push
jns
shl
xchg
loop
scas
fstps
insl
aaa
roll
inc
xorl
pop
pop
cmp
push
xlat
lahf
jle
jecxz
jns
fwait
adc
int
xchg
adc
cmpsl
enter
in
inc
mov
icebp
mov
fnsave
stos
or
cmp
and
sbb
or
lock
cli
mov
pop
sub
dec
sbb
pop
inc
sbb
sbb
mov
lea
sbb
add
xchg
les
into
fadds
mov
test
mov
cmc
add
jns
sahf
pusha
mov
inc
xchg
scas
lea
ds
aaa
push
in
sbb
es
mov
and
shlb
cmc
mov
out
push
lcall
xor
out
lret
inc
movsl
fs
cmp
in
lock
loopne
cmpb
adc
cmpsl
cmp
xor
sbb
scas
pop
rorl
inc
xchg
pop
add
ja
adc
pop
leave
fistpll
test
ljmp
sub
ljmp
cmp
mov
andl
push
inc
shl
enter
push
sub
fwait
insl
hlt
sbb
out
dec
fwait
add
mov
lea
in
or
add
mov
dec
xchg
out
adc
popf
repnz
lahf
push
jge
imul
std
adc
adc
push
dec
adc
cmp
xchg
aas
call
ja
push
xor
ss
aad
mov
xor
stos
shll
dec
push
sbb
adc
jmp
mov
mov
xchg
imul
subb
stos
icebp
aad
popf
aad
mov
xchg
popa
xlat
or
in
push
lock
insb
xchg
in
popf
orb
add
sti
jg
data16
divb
push
xor
fdivl
enter
stos
and
mov
jecxz
and
shll
inc
cmp
fmul
mov
xchg
out
xor
movsb
mov
cmc
scas
xor
fistps
add
xchg
jns
inc
shlb
jp
and
loopne
icebp
cmp
scas
dec
ds
push
pop
sbb
jl
add
mov
nop
jae
shrl
push
aas
xor
jmp
jno
test
mov
and
les
sub
cmp
outsl
xlat
faddp
sbb
daa
shl
sahf
jecxz
push
mov
sarl
inc
inc
push
enter
nop
cmp
testl
push
aas
cltd
or
cmpsb
or
mov
stos
mov
pop
and
xlat
and
xchg
fisttpl
xchg
push
mov
jmp
xchg
jnp
pushf
mov
enter
clc
aaa
inc
imul
imul
mov
into
movl
popa
sub
into
lds
pop
jmp
cmpb
movsl
mov
sarb
mov
scas
in
loope
pop
add
sbb
pop
clc
fwait
and
inc
push
je
or
xor
call
mov
jnp
dec
test
mov
fisttpl
cwtl
inc
aad
pop
pop
pushf
mov
out
mov
mov
ret
dec
clc
sar
pop
ljmp
sub
push
in
sahf
mov
ss
pop
cmp
sarb
dec
cmp
add
or
repz
inc
mov
shl
add
push
jae,pn
shlb
test
out
cmp
mov
mov
mov
js
and
jmp
addr16
adc
sbb
mov
cmp
inc
notl
pop
pop
dec
jmp
jbe
insl
push
adc
mov
clc
and
inc
rcl
aas
add
insl
sahf
adc
mov
pop
sub
out
mov
push
stc
push
add
and
cmpb
mov
add
cmp
and
int
or
xchg
shlb
daa
outsl
subl
lock
and
ret
mov
repnz
jg
or
rcl
into
cltd
lahf
enter
push
pushf
adc
jb
cmp
cmp
pop
push
push
sub
xor
push
jecxz
in
add
leave
sti
lock
inc
inc
dec
fwait
jnp
movsb
jmp
cmpb
dec
pop
pop
enter
jae
shr
orl
jb
into
ss
inc
pop
mov
daa
ss
mov
psraw
insl
inc
outsl
into
scas
fwait
cmp
bound
push
shll
repz
andb
ucomiss
push
arpl
pop
fsubrs
pop
and
jbe
xor
lods
cmp
cmp
rclb
fsubrl
aaa
pusha
push
sbb
inc
test
mov
cmpsl
sbb
pop
loope
mov
lods
xor
add
mov
pop
push
xchg
insl
add
xor
mov
dec
and
fnsave
adc
aam
iret
cld
cmp
adc
xchg
fnstenv
and
icebp
test
xor
jle
lahf
das
sub
push
cmpsl
int3
push
push
arpl
sbb
inc
ror
jae
mov
inc
pop
jne
sub
mov
xchg
add
das
mov
add
stc
fsts
scas
jmp
in
pop
jl
mov
btr
xlat
xchg
andb
je
mov
pop
ljmp
mov
gs
sub
sub
pop
pusha
repnz
imul
cmp
xchg
cmp
dec
sub
pop
cmc
out
or
push
add
jo
mov
push
mov
les
or
setle
hlt
rcrb
decl
and
inc
cmp
pop
mov
popl
sub
add
popf
in
pop
sbb
ja
fistl
cmpsl
jle
jo
outsl
dec
sbb
dec
subb
push
add
mov
sbb
stos
mov
add
inc
and
jg
and
cli
lret
cmp
enter
into
mov
fs
lods
mov
js
mov
sbb
ret
inc
iret
in
sarl
push
cmp
pushf
stc
cld
sete
daa
das
add
nop
int3
or
mov
jle
xchg
fistpl
ret
xchg
push
sbb
lods
test
rcrl
mov
jno
sbb
jg
daa
lods
push
cmpb
xchg
dec
adc
push
sub
dec
mov
inc
and
movsl
xchg
and
jne
decl
shrb
adc
mov
xor
fistl
jbe
mov
dec
adc
jge
mov
lock
frstor
xchg
and
mov
cld
hlt
jno
sti
or
shlb
sbb
mov
stos
xchg
stc
imul
in
into
jp
sbb
lcall
jmp
adc
sbb
out
mov
sbb
xchg
sbb
and
pop
lret
fwait
cs
and
and
stos
ret
test
mov
cmp
sub
push
stos
std
aam
push
andb
adc
call
bound
and
in
pop
jle
xor
cmpsl
out
mov
stos
mov
dec
dec
adc
fsubl
ljmp
test
mov
xchg
or
dec
shr
ss
sub
mov
mov
mov
mov
rorl
popf
call
repz
out
cmp
dec
mov
mov
iret
mov
jns
sbb
push
lcall
cmc
add
fs
flds
xor
lock
je
sub
rcll
out
adc
cli
rcrb
cmpsl
mov
sub
fsubs
out
inc
out
rclb
inc
clc
xchg
stos
iret
xor
cmc
mov
push
pop
pop
mov
mulb
mov
mov
inc
and
fdivl
les
div
dec
sbb
mov
pop
scas
rcr
rcrl
jp
push
add
aaa
dec
add
sahf
xchg
cmp
orb
dec
adc
sub
mov
lods
mov
mov
cmpsl
cmpsl
inc
inc
push
ret
xchg
insl
jnp
sub
adc
dec
adc
out
xchg
orps
push
stos
fs
lret
push
stc
sub
into
stc
fisubl
xor
daa
fmull
mov
int3
je
mov
popf
sub
mov
hlt
sbbb
fnsave
or
dec
je
js
into
pop
das
std
or
mov
gs
dec
or
lea
movsb
xchg
inc
inc
sub
pop
out
push
mov
adc
jg
mov
push
jmp
enter
inc
std
scas
jge
sbb
jae
in
xor
aad
xlat
inc
stos
aaa
adc
sbb
call
dec
pusha
loope
cmpsb
push
xchg
pop
pop
loopne
rorl
jl
cs
dec
jbe
sub
fs
andl
push
adc
imul
je
adc
adc
adc
cmpsb
lds
rclb
testl
lcall
sbb
xchg
or
and
mov
mov
ds
out
cs
shl
in
or
ds
ja
sbb
xor
in
imul
js
in
aam
and
insb
sti
or
rcrb
mov
inc
lahf
sarb
sahf
lret
dec
sub
jmp
sub
scas
repz
int3
fcmovb
data16
adc
fpatan
shlb
daa
mov
daa
int3
xchg
mov
incl
add
call
push
cs
push
icebp
lret
add
mov
pop
and
pop
sub
pop
in
or
insb
fcmove
and
ret
xchg
js
cmp
cmc
add
pop
fistpl
js
push
pop
test
jmp
xchg
sahf
jl
and
cs
mov
decl
or
pop
lods
test
lea
mov
pop
sti
fcompl
nop
test
ret
fcomps
jle
mov
mov
daa
test
xor
incb
xor
hlt
in
mov
and
out
lods
jl
jmp
sub
xchg
push
aas
icebp
sub
repnz
shll
pop
cmpl
shll
push
push
mov
les
jo
push
xchg
push
pop
push
stos
std
push
js
scas
push
shlb
or
lret
mov
aaa
inc
push
mov
je
mov
jmp
sbb
out
shll
pop
mov
xchg
ja
xlat
adc
and
mov
call
sub
sbb
mov
jo
outsb
jnp
shlb
movsb
push
cmp
pop
enter
fsubs
push
mov
add
push
xchg
imull
lods
les
push
sub
add
mov
mov
int
out
jle
je
inc
lahf
xchg
leave
sbb
out
xor
in
xchg
sbb
aam
neg
push
loope
inc
cmp
inc
stc
lock
jecxz
jmp
out
test
flds
adc
xor
decb
addr16
rolb
xor
lods
inc
test
xlat
mov
jae
mov
sbb
xorl
or
rclb
and
mov
mov
lock
popf
pusha
shlb
inc
fnsave
jge
cmpsl
and
pop
cmp
imul
fs
xor
adc
scas
jmp
mov
mov
in
cwtl
js
mov
inc
nop
cmp
pop
dec
das
jne
loop
gs
aaa
pop
inc
leave
xchg
sub
and
adc
aam
insb
push
scas
or
xor
ret
mov
dec
xchg
cli
mov
mov
idivb
sub
loope
xchg
stos
dec
xchg
adc
xchg
pop
lods
and
loop
push
cmc
xchg
cmp
je
call
lretw
pop
push
pop
xchg
ret
adcb
pop
dec
loopne
jne
std
jbe
adc
mov
pusha
jb
xorb
mov
or
fdivr
js
jne
xor
cmp
pop
mov
inc
jecxz
push
cld
jp
int3
inc
rorb
pop
xor
jb
test
lret
stc
testl
sbbl
hlt
cmp
xchg
mov
adc
addr16
loop
aam
xchg
xchg
subl
ret
dec
js
jae
jmp
ja
jne
add
jmp
cmp
subb
sahf
pop
insb
lea
add
shrl
xchg
ficomps
loop
mov
push
sbb
out
aas
or
stc
and
int3
aas
dec
mov
add
fidivs
jo
iret
push
mov
jge
xchg
das
cmp
add
jae
or
std
pushf
cld
mov
sbb
ret
inc
shll
xchg
lea
nop
pop
pop
inc
out
fs
nop
stos
outsl
insb
or
insb
int3
mov
and
mov
lds
xor
lret
in
lret
xchg
pop
cld
pop
pop
decb
fldl
fisubl
idivl
jns
push
mov
dec
mov
out
lret
lcall
mov
jl
shll
dec
jmp
sbb
lds
je
incl
mov
mov
inc
into
hlt
jg
cli
dec
inc
aam
testl
notb
loope
sub
mov
sbb
inc
mov
dec
lods
mov
mov
xchg
arpl
push
loopne
xor
adc
stos
inc
call
cli
mov
sub
push
repnz
xor
pop
leave
stc
dec
sti
call
xchg
sarb
cmp
mov
fsubrl
stc
sbb
xchg
inc
ss
dec
in
inc
je
jb
cltd
aas
pop
and
cwtl
push
imul
andb
add
sarl
ds
sub
fisttpll
jl
xchg
and
pop
dec
notb
mov
cmc
dec
out
pop
std
pop
loop
dec
jae
push
mov
mov
jbe
lods
popf
cmp
rorb
je
xlat
repz
xchg
sub
inc
push
mov
idivb
ds
push
push
shrb
mov
cmp
xchg
cmp
ss
mov
cltd
jae
out
test
in
in
push
repz
hlt
push
mov
push
inc
mov
lods
rcll
pop
mov
mov
test
pop
sahf
stos
pop
inc
or
add
push
mov
mov
jl
adc
lcall
pop
outsl
imul
ljmp
add
sahf
sub
mov
jbe
pop
adc
arpl
sahf
out
aaa
xchg
rcrb
mov
dec
push
cmp
sub
dec
jbe
inc
and
adc
mov
stc
and
es
ret
cmc
xlat
rol
jo
jmp
mov
sbb
lret
daa
mov
adc
outsl
mov
lods
test
mov
pop
lock
adc
loope
rcrb
popf
pop
int3
cmp
cmp
or
inc
mov
or
test
adc
adc
test
and
cld
subb
xchg
js
and
push
test
aaa
imul
pop
js
lock
jb
cli
add
das
test
and
or
jns
mov
fistps
jmp
or
cltd
xchg
jg
clc
adc
minps
imul
push
fnstsw
jnp
inc
bsf
jne
fcmovne
or
stc
xor
test
inc
out
xor
aam
ja
sub
leave
aam
leave
ficomps
imul
je
sub
lret
sub
mov
cmp
inc
bound
push
jnp
jecxz
cmp
cmc
imul
fsubrl
lods
outsl
stc
cmp
lods
negl
cmp
movsl
or
clc
mov
sbb
ret
xchg
inc
shrl
jmp
pop
loope
xor
or
test
xchg
int
sub
andb
scas
and
inc
test
ret
insb
jg
daa
lea
xchg
push
das
mov
stos
lahf
pop
out
dec
push
fildll
mov
mov
arpl
xchg
std
fs
or
lods
imul
mov
movsb
fstps
xchg
ret
mov
popa
int
and
fnstenv
sub
add
call
adc
xor
and
mov
pop
leave
xchg
std
cmp
xchg
shlb
jae
dec
push
fcomps
push
xor
inc
mov
lods
push
sub
repz
scas
fnstcw
jae
jo
jne
xchg
xor
mov
adc
shlb
orl
push
jns
pop
mov
lds
cwtl
sub
stc
push
or
xchg
push
jae
and
add
shll
xor
out
push
inc
movsb
ss
pop
xchg
pusha
fwait
adc
shl
fisttps
fcomip
xchg
fcoms
lock
pop
rol
scas
lahf
xchg
rcll
cwtl
fucom
insb
lret
or
xchg
add
mov
mov
or
jmp
sbb
jmp
xor
repz
jg
mov
inc
stos
jbe
push
push
dec
idivb
in
nop
and
mov
test
data16
add
enter
cmpsb
push
or
mov
mov
fs
push
inc
in
mov
cltd
inc
rorb
cmpsl
filds
sbb
inc
jg
mov
jecxz
dec
sub
xlat
filds
loop
out
push
pop
mov
inc
mov
les
imul
pushf
push
cmp
decl
in
mov
and
inc
sbb
pop
pushw
inc
push
or
sbb
sti
mov
add
jecxz
std
jle
loop
cwtl
push
sub
std
or
inc
test
dec
out
xlat
sub
sahf
jg
sbb
jns
or
loopne
out
call
lods
mov
adc
push
or
push
negb
in
fisttpll
test
xor
mov
into
fiadds
gs
adc
fdivrs
cmp
aas
daa
sub
lods
push
and
dec
cwtl
ss
int
xchg
xor
out
xor
dec
mov
shlb
sarl
int3
imul
outsb
pop
int
leave
fildll
sti
nop
xlat
and
jbe
fbstp
aam
int3
cmp
repnz
or
ficomps
sub
push
repz
push
das
sbb
es
mov
in
mov
lahf
mov
in
enter
add
psrlq
mov
push
push
sbbb
test
fsub
imul
je
std
sbbb
sbb
inc
in
cmp
loope
pop
repz
shlb
icebp
ret
movsb
sub
add
sti
mov
or
jecxz
sbb
rorl
push
ror
clc
mov
lods
xchg
notb
sti
push
dec
negb
ja
cwtl
es
shrl
dec
scas
jl
lret
sub
cmp
add
inc
andl
push
adc
adc
cmp
inc
shr
in
push
mov
mov
jge
mov
xor
xor
jg
or
out
sti
dec
cmp
lahf
pop
and
inc
add
mov
mov
pop
les
loopne
jae
pushf
xor
jo
mov
iret
roll
cmc
push
dec
cmp
idiv
sbbl
nop
ret
stos
xlat
dec
and
mov
mov
movsl
mov
xchg
adc
gs
pop
frstor
dec
sbb
inc
icebp
pop
push
loop
arpl
sub
aaa
mov
in
loopne
js
ds
rcll
cmp
sti
bound
xchg
push
cld
xchg
dec
xchg
ljmp
pop
scas
repz
mov
testb
inc
pop
sbb
dec
std
iret
jo
insl
cs
lret
pop
aaa
data16
insl
pop
pop
test
sub
mov
sub
ljmp
jns
sub
push
xor
lods
test
mov
aas
test
scas
repz
mov
or
push
dec
pop
jmp
mov
xor
stc
hlt
int
pop
cltd
ljmp
lods
mov
ret
xlat
test
fnstsw
jns
adcb
mov
adc
shll
aaa
cmp
push
xchg
pop
stc
push
push
push
out
push
in
sub
pop
fimuls
pop
cmp
xor
pop
pop
sti
lret
test
adc
popf
mov
mov
add
jnp
daa
dec
jnp
outsb
test
xchg
jbe
ljmp
sarb
ss
inc
js
ss
subb
jmp
mov
iret
mov
ss
push
xor
sub
pop
lods
xchg
add
andl
mov
iret
stos
subl
subb
ja
aam
cmp
ss
sub
out
pop
mov
xchg
jle
dec
popa
sbb
dec
aaa
outsb
mov
and
sbb
popa
push
int
int3
push
xchg
push
push
ljmp
push
out
inc
scas
inc
dec
daa
and
jl
mov
cmp
aad
dec
outsb
add
ja
push
mov
out
out
lods
jge
stos
sbb
push
pop
in
pop
mov
testb
test
sbb
fidivl
and
arpl
sub
lea
xchg
cli
mov
dec
je
fidivrs
xchg
fisttps
add
jge
xchg
cld
push
push
add
adc
or
and
mov
xchg
test
test
sar
daa
int3
xor
bound
dec
aas
sbb
mov
lcall
sbb
xlat
rclb
test
icebp
pop
int
xchg
xchg
xorl
movsb
dec
pop
call
xchg
arpl
into
jnp
jo
fsubs
pop
push
mov
mov
and
pop
arpl
sbbb
arpl
jbe
and
push
push
cmpsb
fwait
push
xor
sbb
sub
cmp
xor
js
fsubs
je
fcomp
sbb
rclb
stos
or
push
jmp
dec
lahf
dec
add
enter
scas
xchg
jae
enter
popf
or
fiadds
loope
push
xchg
cmpsb
mov
pop
ss
pop
mov
sbb
es
mov
pusha
push
add
addr16
xlat
push
pop
and
int
incl
sti
mov
xchg
and
pop
pop
imul
mov
sub
mov
ret
aaa
mov
test
sub
movsl
sbb
sbb
jg
mov
out
xadd
push
es
scas
lret
jbe
pop
push
repnz
mov
jae
dec
cmp
mov
cli
mov
cmp
les
inc
xor
push
and
pop
rcrb
cmp
push
jl
and
mov
pop
or
sub
pop
sub
xchg
xchg
mov
fistpl
scas
movsb
fwait
ljmp
leave
clc
push
pop
sarl
adc
pop
dec
addr16
or
or
repz
cmpsb
movsl
out
repnz
mov
xor
xor
lock
mov
test
push
mov
cmpl
ds
loop
dec
xchg
cmp
dec
daa
cmp
jg
push
inc
stos
mov
nop
fidivl
out
rcr
popf
pusha
ficoms
popf
rcl
in
jne
xor
je
inc
pop
fbld
sarl
xchg
or
cwtl
testb
icebp
dec
scas
shll
jns
sub
jo
add
inc
mov
loopne,pn
jge
mov
je
mov
and
daa
and
imul
mov
test
and
int3
nop
ja
faddl
pop
mov
xor
adc
cmpsb
lods
xchg
nop
inc
mov
orb
fisubrl
jae
js
sub
enter
or
leave
in
addr16
jg
fildll
andl
jnp
jge
mov
cmp
insb
fwait
sub
mov
pushf
pop
fnsave
fdivrs
xor
xor
push
arpl
loop
ss
pop
dec
inc
mov
and
negl
int3
bound
cmpsb
or
clc
xor
fistps
cmp
pusha
cmpsb
adc
jmp
dec
or
cltd
mov
fbstp
arpl
xor
xor
sbb
loop
mov
loop
jae
inc
sbb
mov
and
jg
dec
outsb
cmpsl
pop
jae
or
sbb
negl
addr16
insl
cli
or
inc
aam
movsb
mov
inc
and
test
fidivl
push
dec
jge
push
xchg
hlt
rcr
sbb
ja
add
mov
shrl
mov
js
test
add
jge
shlb
mov
xlat
cmpsb
stos
and
repnz
xor
pop
std
aad
mov
mov
push
inc
mov
sbb
repnz
fsubp
jo
push
push
or
mov
arpl
and
addr16
jl
sbb
shrb
cmp
test
push
ret
lds
or
enter
ljmp
push
or
push
cmp
std
aaa
mov
call
movsb
push
lahf
aas
adc
add
sti
push
xchg
shlb
xchg
shld
jne
mov
inc
lcall
mov
sar
mov
pop
movsb
sbb
push
inc
arpl
cmp
je
and
scas
fcom
cmpsl
adc
push
popa
cmp
adc
nop
add
mov
mov
pcmpgtd
mov
add
mov
shlb
mov
stos
cmp
xchg
cwtl
arpl
ljmp
repz
movb
push
in
mov
mov
sub
or
mov
cs
mov
dec
xchg
pop
in
fldenv
cmpsb
arpl
popa
cs
inc
mov
pop
jbe
mov
lods
subb
in
push
cmp
fsubrl
cmpsb
jns
addr16
test
cli
fmuls
loop
or
and
es
add
mov
jnp
fidivl
fmull
fisubrl
shl
ret
adc
dec
fs
and
and
mov
and
das
mov
cmp
enter
out
iret
xor
adc
mov
xchg
sbb
mov
lock
add
or
mov
adc
mov
inc
in
pop
outsl
aam
sbb
ja
inc
scas
push
mov
ja
pop
enter
push
into
mov
lret
ret
fsts
pop
addr16
in
jbe
dec
xor
stc
jae
jns
jnp
mov
ffreep
les
push
lods
lcall
test
jmp
xor
notb
insl
out
inc
xlat
cmpsb
sahf
and
xor
xorb
arpl
jne
sahf
jl
movsb
adc
dec
pop
fsubrs
sahf
daa
stc
inc
das
jb
or
getsec
fistps
adc
bnd
push
adc
enter
out
pop
and
pop
out
movsb
lret
roll
mov
lods
fdivrl
cmp
ja
jmp
cld
adc
xchg
sbb
xlat
sub
mov
or
push
les
lcall
je
push
dec
pop
les
jecxz
mov
icebp
inc
inc
daa
sub
std
mov
test
pop
dec
pop
mov
and
cli
sbbl
sysexit
inc
inc
ljmp
xchg
xor
fbstp
dec
and
in
out
mov
push
jge
repnz
jl
push
repnz
xor
mov
mov
mov
arpl
arpl
imul
dec
xchg
xor
adc
pop
pushf
dec
aad
sub
pxor
adc
push
movsb
lods
inc
in
mov
imul
movsl
scas
mov
jb
push
mov
pop
popa
push
adc
es
jecxz
xor
sub
xor
push
adc
mov
inc
aaa
push
adc
dec
dec
sbb
popf
pop
repz
add
pop
insb
stos
lahf
stc
mov
into
pop
lahf
rcll
clc
and
mov
insb
pop
cmpsl
lds
xor
iret
sub
movl
mov
pusha
mov
cwtl
lea
data16
mov
pop
add
cmp
inc
mov
loop
insl
cmp
movsb
lods
mov
push
sbb
aam
loope
sti
or
rolb
subb
xchg
ljmp
test
out
neg
hlt
adc
sub
scas
xchg
lret
sti
pop
outsl
lods
pop
sbb
add
xchg
ret
inc
cltd
dec
dec
xchg
or
xchg
es
fiadds
inc
or
pop
cli
fisttpll
mov
cld
or
pop
lock
add
or
xchg
jno
mov
lea
pop
hlt
xlat
fcompl
sti
xor
mov
inc
scas
and
adc
jge
sbb
cmovl
jae
adc
mov
shrb
imul
xchg
xor
aas
loopne
xchg
leave
or
lods
loop
adc
pop
or
xchg
imul
xor
mov
orb
add
inc
xchg
js
fisttps
out
jbe
sbb
inc
and
dec
inc
jb
push
movsb
lods
pop
or
pusha
xchg
dec
and
add
push
mov
pop
cmpsl
mov
add
xor
jge
sub
pushl
jnp
in
es
scas
and
push
addr16
repnz
jle
mov
add
mov
xchg
pop
test
popa
imul
add
cmc
sub
inc
mov
shlb
cmpsl
std
mov
dec
pop
sub
sbb
aaa
loopne
out
adc
mov
mov
popa
stos
pusha
popa
loop
sub
jle
dec
mov
jecxz
aad
push
int
sbb
movsl
dec
add
adc
out
daa
ret
pop
jmp
out
lds
clc
in
std
xchg
xor
sbb
ret
push
xor
cmp
ja
movsb
inc
fildl
jecxz
rcrb
fsubrp
mov
jbe
lods
mov
jb
pop
hlt
leave
xchg
fildll
mov
pop
xchg
mov
out
mov
inc
xlat
sahf
mov
je
mov
mov
aas
inc
sub
inc
andl
lret
aas
not
lea
or
xchg
mov
test
repz
add
enter
xorl
clc
push
cmpsb
fidivrl
cmp
jecxz
ljmp
xchg
jnp
out
clc
ss
fsubrl
xlat
ss
dec
lret
or
jnp
xchg
pop
cmp
lods
cwtl
pop
ret
add
mov
and
pop
sbb
mov
ret
adc
xor
jbe
mov
inc
repz
push
sub
lds
sub
pusha
or
inc
rcrb
xchg
push
pop
cmp
stos
adc
push
lods
mov
iret
movsb
or
pop
inc
cs
jle
jo
pop
push
rorb
mov
push
sbb
pop
sbb
sub
bound
sarl
mov
lcall
or
pushf
or
jl
addb
push
ds
sbb
inc
pop
or
cmp
hlt
das
imulb
cmp
jg
push
mov
push
xchg
mov
rol
pop
mov
aad
shr
lahf
dec
and
or
test
mov
stos
sahf
into
inc
and
mov
mov
add
xchg
out
adc
xchg
sahf
cmp
mov
pushf
sub
push
imull
add
addr16
adc
inc
xchg
xchg
dec
ja
xor
je
add
imul
rcrl
imul
adc
pushf
lods
add
sub
jle
push
sbb
out
ror
dec
adc
adc
fists
push
or
fisttpll
call
xor
mov
xlat
push
stos
push
jmp
andb
enter
das
test
addr16
xchg
bound
adcb
rcll
mov
mov
mov
test
in
sub
mov
ja
or
nop
lcall
icebp
and
dec
or
xchg
das
in
xor
aad
imul
inc
movsb
dec
icebp
inc
mov
rcrl
mov
xor
sbb
movb
rorb
cmp
mov
pop
add
sahf
mov
loope
push
xchg
push
push
mov
or
mov
int
adc
flds
cmp
inc
fnstcw
sub
mov
outsb
mov
cmp
sahf
add
and
enter
aas
sbb
jo
xchg
mov
fidivs
hlt
mov
mov
lods
into
mov
jle
jecxz
xor
lea
dec
or
idivl
cli
pop
test
and
lods
xor
mov
inc
hlt
in
inc
and
gs
mov
pop
in
cmp
mov
outsb
ficoml
xor
mov
mov
insl
jg
mov
lahf
aam
ret
leave
sbb
jb
or
and
aam
cmp
insb
pop
ret
daa
push
sub
sbb
out
mov
pop
add
mov
mov
shlb
pop
push
pop
xlat
dec
in
mov
jae
scas
jge
cmp
repnz
call
ror
shll
shrl
outsl
pop
ror
mov
push
loopne
xor
push
popa
bound
movsl
addl
enter
mov
mov
and
cmp
fmulp
cmpsb
mov
adc
pop
push
das
and
out
sub
cmp
mulb
mov
and
ljmp
mov
popf
test
test
and
repz
xchg
cmpsb
mov
push
test
lock
and
xor
movsb
sti
lret
daa
xor
bound
add
orb
fistpl
push
adc
pop
xlat
jne
inc
sar
in
sub
sbb
lds
push
in
dec
push
jecxz
in
js
jg
mov
sub
insl
adc
jb
xor
sahf
movsl
add
mov
clc
dec
lock
sub
gs
daa
int3
rolb
pop
mov
shr
jne
mov
pop
lcall
aaa
int3
cld
mov
cmp
inc
enter
insb
into
lret
xor
sub
mov
mov
and
leave
sbb
inc
mov
stos
mov
mov
lock
insl
pusha
xor
mov
jmp
iret
inc
xchg
das
dec
jnp,pt
lret
jns
and
ja
xchg
out
inc
ds
cli
das
xor
les
xchg
cli
imul
popf
sbb
xchg
aas
mov
xor
pop
mov
mov
enter
cvtps2pd
dec
repz
xor
jg
lahf
mov
lret
testb
int
sbb
pop
mov
or
mov
stos
loope
mov
jb
sbb
in
int
rol
xchg
jb
aam
cmp
pop
mov
lods
xor
jo
mov
rclb
and
push
out
push
cmp
jno
jne
or
sarl
mov
pop
mov
imul
mov
dec
lock
xchg
lcall
inc
xchg
das
mov
or
or
in
dec
xchg
dec
cmp
icebp
xchg
sub
icebp
mov
pshufw
cmp
iretw
out
sub
repz
dec
ret
jmp
stos
xchg
cmp
push
push
mov
mov
movsl
mov
iret
cmp
rorl
dec
cmp
popa
and
mov
imul
cmp
testb
xchg
add
repz
sbb
lahf
mov
inc
jne
test
adc
clc
aaa
out
repz
and
test
lahf
call
aaa
rorb
scas
popf
xor
sbbb
mov
jns
out
movsb
pop
cwtl
jp
push
rsm
jecxz
mov
ja
in
les
movsl
scas
outsl
in
xor
mov
arpl
or
mov
and
fcmovbe
push
ret
xor
pop
sarl
mulb
mov
aam
in
inc
jg
lea
in
xchg
repz
data16
mov
inc
shll
das
add
and
pop
inc
inc
dec
shll
add
lds
or
das
jo
orb
add
push
push
xor
out
stos
mov
ds
shl
dec
xor
orb
rol
pushf
mov
mov
dec
insb
jb
enter
out
jno
inc
mov
arpl
cmp
or
pop
lcall
int3
mov
jns
rolb
adc
test
shll
and
lods
cld
xchg
repnz
cmc
sbb
test
sub
inc
daa
jge
pop
pop
jb
jns
xor
loope
inc
xchg
imulb
aas
mov
imul
jmp
fimuls
in
imul
mov
dec
inc
jg
and
push
lock
sarb
ss
jae
sbb
or
push
sub
xor
mov
cmp
jge
sbb
cmp
cs
xchg
sbb
das
jb
icebp
call
in
mov
jno
sub
sti
arpl
mov
shll
mov
jo
lret
addr16
adc
les
vpmacsswd
xor
push
push
push
loop
test
in
sub
push
loopne
dec
ret
ficompl
jecxz
dec
mov
adc
fisttpll
adc
cs
xchg
fisubrl
fstl
adc
mov
xor
jb
xor
rclb
or
pop
cli
rcrl
mov
movsb
xchg
mov
rorl
dec
test
pop
out
dec
aaa
or
sub
xor
aas
test
test
out
push
add
push
fs
push
icebp
pop
adcb
fbstp
mov
jbe
sahf
into
and
add
mov
inc
cmp
fsubrp
lret
icebp
sbb
cmp
xorb
pop
int3
and
sub
cmp
cwtl
sbb
xchg
jns
push
icebp
sbb
outsb
push
mov
push
outsb
aad
jmp
mov
loopne
push
icebp
loop
inc
sbb
push
cmpsl
aad
jbe
pop
sbb
mov
sbb
iret
mov
lcall
and
push
mov
sbb
inc
ljmp
push
jns
ljmp
sub
adc
jae
fwait
inc
or
das
xlat
jb
in
sbb
cmpsl
jae
mov
sbb
dec
jmp
movsl
fldcw
es
adc
cmpsl
jge
aad
jb
aam
sub
es
sahf
or
out
aas
mov
xor
fdivl
cmc
mov
dec
cld
sbb
inc
xchg
mov
jge
fildl
frstor
ret
inc
adc
adc
cs
sub
mov
or
adc
mov
push
call
sbb
fldenv
mull
fwait
sub
fmul
lods
mov
testl
xorl
jnp
fnsave
fdivl
mov
inc
lods
incl
stc
out
stc
and
xor
out
hlt
push
inc
cmp
sbb
out
leave
pop
jnp
lret
sub
xchg
inc
outsl
pusha
mov
mov
lret
sub
pop
jo
push
push
jb
aas
imul
insl
fdivl
push
mov
mov
popa
addb
insl
pop
push
pusha
jp
mov
inc
xchg
outsb
mov
inc
cwtl
cmp
mov
fidivrs
or
pop
es
jo
jnp
repnz
jo
pop
sub
push
inc
stos
push
jno
sbb
aaa
mov
test
mov
jmp
xchg
xor
outsb
hlt
xchg
in
je
aad
aad
cmpsl
xchg
mov
cmp
sub
sahf
mov
push
cs
mov
std
lret
aas
push
fnsave
clc
adc
pop
mov
std
jle
ret
mov
push
aam
pusha
rcrb
out
mov
repz
add
fstps
iret
pop
push
sbb
inc
add
ds
mov
sti
pop
shr
pop
lods
push
loop
mov
push
inc
icebp
xchg
push
push
lret
hlt
arpl
rcrb
fldcw
sbb
push
cmp
fbld
mov
bound
bnd
pop
adc
andl
lock
sub
lret
add
xchg
push
pop
push
cwtl
icebp
movsl
jo
mov
pop
sub
lcall
xor
lea
mov
insl
adc
movsb
pop
insl
sbb
scas
dec
faddl
fistpll
loope
int
scas
dec
lods
mov
xchg
sbb
or
push
pop
inc
pop
ja
rcr
cmp
xchg
jecxz
mov
ljmp
test
lods
xchg
dec
jb
push
cmp
sarb
jne
bound
shrl
cmp
mov
xor
es
mov
test
fsubl
rcl
mov
xchg
nop
push
int3
cltd
bound
repz
das
adcl
xchg
movsb
mov
repnz
gs
mov
push
xchg
mov
enter
movl
scas
in
sarl
in
jbe
jbe
in
jecxz
test
out
in
mov
shr
adc
hlt
out
dec
mov
paddusb
lret
mov
sbb
stc
add
push
xchg
icebp
das
out
cltd
out
push
out
push
ss
mov
je
cmp
jp
testb
push
pop
xlat
and
lret
jnp
inc
sbb
jns
cwtl
adc
pop
push
aas
out
repz
mul
imul
sub
mov
int3
dec
ja
sbb
sbb
inc
frstpm(287
cld
xchg
push
test
xor
mov
sub
and
scas
or
xchg
mov
inc
push
adc
daa
xor
leave
sub
inc
mov
xor
xchg
dec
sbb
xchg
in
cmpsb
xor
aam
dec
cmp
outsl
je
cmp
lea
dec
adc
pusha
ds
stos
inc
lock
ja
lods
scas
jae
cmp
shll
cmp
aas
mov
popa
call
or
or
adc
ss
ljmp
mov
mov
mov
cmp
and
clc
adcl
xchg
push
mov
and
adc
sub
mov
sti
sbb
push
out
mov
outsb
mov
mov
fdivs
push
mov
add
push
inc
add
pop
popa
push
push
stos
lods
push
mov
decb
fldt
xor
sahf
daa
rorl
cmp
cwtl
xor
mov
pushl
addb
sub
mov
sbb
add
inc
dec
pop
cmc
stc
pop
outsl
fs
mov
data16
test
lret
add
add
test
stos
loop
mov
mov
sub
cmpsb
and
pop
test
sbb
es
jle
jmp
sti
xor
pop
out
fmul
test
call
sub
ficoml
cmp
mov
popf
hlt
push
fs
mov
sub
jp
pop
dec
mov
rorb
push
xchg
jmp
pop
pop
pop
inc
push
leave
mov
imul
jbe
xlat
in
cs
push
loopne
fadd
mov
or
add
gs
ret
test
pop
stos
dec
or
or
push
mul
add
cmp
aas
sbb
in
stos
dec
inc
aam
dec
stc
lods
mov
adc
jle
add
addr16
push
dec
popa
push
dec
popa
jp,pt
add
dec
add
jb
cmpsl
xor
scas
dec
and
xor
dec
jg
jp
xchg
into
divb
push
adc
clc
jl
sbb
pusha
cli
mov
inc
jbe
mov
scas
out
fmul
imul
out
in
pop
mov
mov
ret
jmp
inc
push
popa
dec
xchg
enter
out
jl
adc
cltd
rcr
jecxz
pop
push
inc
gs
jp
pusha
hlt
push
sbb
std
repz
dec
sbb
scas
mov
fsqrt
mov
cmc
rcrb
lcall
xchg
popa
out
lds
std
xchg
shll
call
pop
fwait
push
jle
mov
scas
dec
jno
push
pusha
jb
in
mov
fs
lret
out
insl
mov
fisttpll
fdivrs
in
xor
sbb
xchg
mov
mov
ds
ss
cmp
sbb
adc
and
and
mov
test
enter
sti
sarl
cmp
push
imul
int3
ss
test
fnstcw
shrl
mov
add
movb
rcrl
or
cmp
sbb
cmp
xor
push
test
andb
decl
fidivl
mov
push
push
xchg
orb
xlat
and
xchg
into
dec
aaa
push
sub
loope
add
faddl
dec
hlt
mov
xor
adc
xchg
mov
xchg
into
adcl
pop
mov
pop
add
stos
fistpl
and
and
mov
lds
rol
jbe
jbe
lds
leave
or
ljmp
insb
add
cmp
pusha
add
sbb
fistps
or
ljmp
iret
adc
add
push
psrlw
add
sti
dec
adc
mov
lcall
cmp
inc
inc
into
and
leave
cmp
shll
fbstp
push
xchg
push
add
leave
adc
stc
insl
dec
scas
sahf
cltd
ficoms
sbb
js
cmp
lcall
sti
loop
cmc
mov
sahf
sub
hlt
mov
adc
mov
fsub
insl
xorb
mov
das
or
repnz
lods
cmp
outsb
imul
imul
outsb
ret
pop
mov
ja
push
mov
jecxz
push
sahf
xchg
in
dec
loopne,pt
popf
jle
inc
adc
jnp
cmp
mov
lahf
jg
fwait
shr
mov
bound
outsl
cld
add
push
negb
adc
jnp
dec
and
mov
ds
icebp
mov
inc
push
mov
inc
xorb
inc
add
es
mov
push
loope
out
xchg
sub
mov
in
pusha
xchg
push
and
or
and
pop
jmp
mov
lea
outsl
lea
fisttps
loope
mov
fildl
jnp
mov
xor
jnp
pop
or
xlat
fdivrp
fstps
cmp
rcll
add
sahf
stc
mov
cli
or
out
sbb
hlt
stos
outsb
push
repnz
stos
loope
mov
or
adc
lcall
stos
cli
in
loop
test
sub
add
mov
xor
add
stc
fimull
mov
lcall
push
mov
gs
mov
and
jnp
cmpsl
cmc
cmc
aam
scas
scas
mov
aad
or
sarl
jge
mov
xor
arpl
aaa
pushf
shll
in
push
jmp
push
inc
adc
fcmove
pushf
sbb
sar
cwtl
pop
xchg
bnd
lods
add
xor
test
aam
xchg
setnp
pusha
sub
push
dec
xor
notl
int
std
mov
imul
mov
inc
into
push
jle
mov
or
aaa
aad
and
cmp
shll
int3
xchg
les
jge
movsl
lahf
shlb
std
arpl
mov
pusha
cli
mov
push
mov
mov
mov
arpl
cwtl
push
push
inc
sbb
jmp
cvtps2pi
jecxz
cmp
inc
push
insl
xchg
pop
xor
cli
cmpsb
arpl
mov
and
xor
mov
cmc
rcr
test
subl
pop
xorl
pop
mov
repz
pusha
xor
iret
fldenv
inc
sbb
movl
imul
js
cmp
add
jo
mov
cmove
sbb
jne
jecxz
gs
test
cs
xor
gs
dec
push
test
cmp
pop
aam
push
cmp
jns
and
shr
cmpsl
mov
cmpsl
push
and
dec
mov
hlt
dec
and
mov
int
dec
add
int3
pusha
das
sub
outsb
popa
xor
jo
cmpsl
mov
mov
xchg
xor
fisubs
mov
pop
push
or
mov
aam
in
in
sub
jno
ret
and
mov
loope,pt
fcomp
mov
inc
aad
dec
sahf
add
hlt
adc
pop
or
icebp
mov
aam
or
nop
psrad
push
cmpsl
cmpsb
aas
aad
je
jb
mov
ds
xchg
inc
mov
mov
flds
andl
cmpsb
mov
hlt
push
jbe
mov
xchg
xor
fs
jne
jl
loope
cmpsl
nop
pop
or
jl
adc
repz
fcomip
mov
or
inc
mov
adc
cmp
mov
push
ficoml
jb
in
stc
sbb
push
outsl
xor
int3
pop
xchg
sarl
cmpsb
shll
je
repz
add
clc
inc
mov
sub
pusha
add
inc
outsb
add
xor
js
xchg
mov
loopne
clc
or
sub
jp
lods
cmp
inc
and
daa
mov
xor
iret
xchg
sub
repz
sub
inc
dec
jg
shrb
pop
sbb
out
jecxz
pop
lcall
mov
mov
xor
mov
call
cmovnp
adc
sbb
inc
loopne
mov
xchg
cmpsb
inc
cmpb
repz
test
add
and
or
popa
out
push
mov
xchg
insl
divl
cmp
jns
pop
movsb
or
frstor
and
adc
mov
mov
repnz
or
dec
mov
jae
mov
jp
push
in
imul
jp
aad
mov
dec
jns
out
popa
xchg
adc
cmp
mov
sbb
sub
jo
inc
mov
mov
push
data16
and
mov
jo
ret
xchg
mov
or
mov
out
fwait
jnp
fs
mov
and
scas
push
fisttpll
outsl
and
iret
push
lea
ljmp
dec
pop
pop
mov
add
adc
imul
scas
push
in
lahf
pusha
sbb
mov
mov
insb
sub
add
or
test
mov
xor
mov
push
add
ljmp
mov
pop
xor
sbb
dec
add
xchg
mov
mov
arpl
out
lahf
mov
mov
stc
inc
lahf
jns
je
jb
push
xor
ret
movsl
cmp
aad
insb
incb
insb
loop
sub
mov
dec
mov
pop
scas
outsb
fcoms
cmp
mov
jnp
xchg
addr16
sbb
xchg
mov
pop
pop
insl
jmp
mov
xor
push
adc
lcall
rorl
insl
fidivs
js
or
push
mov
fwait
push
cltd
mov
push
xchg
lret
push
adc
std
loopne
dec
xlat
pop
jle
cmp
ret
dec
inc
sbb
inc
test
jo
hlt
ja
jl
adc
movsb
das
mov
pop
outsl
push
sub
outsb
cmpsb
push
je
lods
sbb
cmp
mov
xor
inc
mov
lods
add
pop
and
mov
mov
xor
clc
push
adc
ror
pop
xor
mov
lcall
lock
and
sarl
adc
inc
jns
bound
adc
or
cltd
jbe
leave
sbb
cld
mov
add
addr16
inc
xchg
sbb
daa
test
mov
jle
dec
jae
leave
mov
xchg
push
adc
shl
clc
sbb
cmp
or
dec
push
push
fbld
push
mov
sub
fwait
stos
cltd
xlat
dec
filds
add
mov
mov
mov
lods
xor
mov
pop
cwtl
mov
cmp
xchg
and
cmc
test
cmpsl
sub
adc
push
jnp
push
cld
lock
xlat
cmp
decl
jnp
ja
xchg
insb
call
mov
pop
sub
sub
cwtl
sbb
lcall
xor
and
out
repz
test
das
popa
push
faddl
inc
add
sti
dec
lea
fdivrl
cmp
cwtl
out
mov
popf
call
fwait
push
ftst
das
ja
jne
pop
xchg
xacquire
in
movsl
mov
jl
push
test
int3
cmp
fwait
cmp
inc
xor
cmpsb
dec
decb
jns
pop
inc
sub
pusha
decb
in
rcll
clc
loopne
add
push
aas
std
xor
es
cmpsl
sub
call
cs
or
jl
repz
jg
xor
jl
xlat
and
iret
mov
add
incb
test
loop
lea
push
ficoms
mov
mov
fs
cmpsb
mov
cmp
sub
mov
js
int
jg
jg
sbb
pop
sub
adc
arpl
and
fadd
inc
popf
pop
push
push
test
inc
sbb
mov
xchg
sub
lret
stos
mov
in
call
and
imul
push
sti
or
idiv
xchg
rorb
js
inc
push
xchg
pop
aas
cli
mov
pop
and
std
scas
test
add
outsl
dec
xor
movzbl
aam
mov
ret
test
push
sub
or
add
addr16
add
jne
ja
pop
repz
push
or
sbb
lods
es
in
pushf
addr16
mov
popa
mov
push
xor
fildll
add
sub
fs
sub
mov
movsb
inc
iret
sbb
dec
push
and
and
roll
pop
pop
jle
push
les
fdivr
xor
push
scas
enter
std
push
dec
jb
ds
jbe
xor
idivb
sti
jns
push
mov
pushl
lods
inc
call
lret
lret
cld
sbb
mov
test
imul
add
bound
rorb
push
xor
jae
pop
sub
fstpl
xchg
mov
pop
pop
jecxz
in
jbe
stos
sbb
je
adc
push
sbb
cltd
inc
mov
fcom
adc
lods
push
adc
sub
xor
pop
add
out
pop
push
push
jl
push
xor
pop
push
pusha
outsb
lcall
push
pusha
mov
xor
jnp
sub
in
or
mov
lcall
cmc
mov
in
dec
inc
adc
pushf
add
adcl
xor
and
cmp
addr16
add
or
add
jo
jg
jge
lds
pop
or
pop
sbb
push
pop
and
add
stc
push
push
cld
and
fdivrs
dec
push
push
popa
fwait
std
out
rorb
loope
mov
aad
lods
into
fmuls
stc
push
or
and
cmp
pop
test
and
cmpsb
btc
js
jnp
gs
nop
mov
insl
sti
sbb
ret
push
mov
pop
cmpsl
pop
scas
xchg
or
imul
lea
test
pop
mov
inc
ja
icebp
xchg
not
xchg
add
into
inc
lock
out
std
cmp
loopne
aam
fwait
push
push
adc
cmc
jecxz
enter
mov
xchg
ficoml
repnz
jns
adc
aam
push
push
sbb
shlb
mov
addb
cmp
rcrb
scas
lret
xor
inc
mov
adc
scas
sbb
mov
cld
jmp
mov
jl
pop
mov
xor
gs
mov
mov
adc
fwait
clc
int3
cmp
push
mov
punpcklwd
cltd
xchg
xor
pop
dec
ja
jge
inc
or
mov
push
in
insl
ljmp
out
enter
push
loopne
stos
clc
fsts
aas
sub
divl
lock
dec
jp
xchg
jno
ret
hlt
pop
jmp
mov
cmp
sbb
xchg
mov
jbe
aas
lahf
add
mov
mov
bound
repz
icebp
repz
jmp
dec
mov
lret
std
xor
fwait
adc
imul
loope
jb
xor
push
push
and
adc
loop
fs
mov
mov
repnz
inc
xchg
test
mov
mov
jno
add
xchg
es
fsubs
mov
js
stos
and
dec
add
mov
mov
pop
jns
inc
push
dec
push
sti
fwait
pop
pop
insb
push
sbb
popa
xor
dec
scas
sbb
mov
push
push
cmp
dec
push
into
sbb
lret
jg
inc
jmp
dec
fucom
inc
inc
test
test
xchg
cmp
xchg
adcl
xor
aad
inc
xorl
inc
es
dec
or
adcb
test
or
int
xchg
xchg
ficoml
bound
and
mov
insl
jns
mov
mov
test
sbb
mov
mov
pop
mov
push
and
aas
push
test
mov
sbb
add
jne
ret
icebp
push
lcall
inc
data16
xor
xlat
in
lret
popf
lea
leave
adc
ret
jnp
fs
jae
dec
push
stos
cmp
jge
jmp
rcrl
pause
cmp
mov
rcrl
fistps
jp
push
push
mov
ret
in
out
xor
shll
sub
scas
int
pop
ret
xchg
fsubp
test
out
or
cmp
dec
les
or
lds
ret
mov
push
insl
pminsw
jg
std
mov
out
pop
rcr
fmull
cmp
cmp
addr16
cmp
mov
inc
mov
pop
and
lret
nop
test
push
test
pop
inc
mov
clc
out
push
sub
xor
js
sbb
pusha
je
sbbb
sbb
inc
sbb
lret
jle
stc
jae
push
je
cwtl
pusha
test
sub
in
fs
sbb
loope
and
jno
fpatan
out
mov
sub
stos
lcall
xchg
imul
pop
dec
and
xchg
jno
push
mov
imul
xor
lcall
push
jecxz
jne
fstpt
dec
rorl
xor
stos
fs
loope
ret
popf
cs
loop
in
pusha
lret
lahf
fistpll
pop
nop
sbb
mov
movsb
dec
pop
jnp
jno
ja
jae
or
andb
fldcw
or
dec
sub
mov
sarb
pushf
jp
into
cmp
test
jge
mov
inc
cltd
mov
add
inc
test
fiaddl
jg
push
xor
cmc
cmc
popf
js
imul
sub
xchg
xchg
aaa
stos
fiaddl
or
aaa
sbb
fildll
jge
movsb
mov
xchg
mov
xchg
ja
add
push
insl
icebp
leave
inc
fdivrp
fbstp
cmpsl
sti
dec
adc
test
push
xor
dec
stos
bound
or
push
sub
lds
jge
idivb
mov
addr16
mov
cmp
push
ror
loope
pop
xor
xchg
mov
xchg
iret
inc
es
loop
xchg
test
addr16
jnp
stos
dec
popf
je
push
sahf
inc
fsubrs
loop
xlat
stos
xchg
xchg
and
push
push
ljmp
pop
fsubl
add
lahf
pop
out
loop
sbb
mov
imul
adc
mov
lcall
or
lret
add
mov
sbb
int
push
mov
stc
loope
es
jle
test
jo
mov
xchg
movsl
dec
sbb
and
mov
test
jae
xorb
or
push
adc
add
pop
xchg
push
imul
or
add
jae
jg
mov
mov
scas
pop
addr16
popf
pop
push
sub
aas
add
cmpsl
jo
mov
xor
xor
inc
out
ret
ret
jbe
imul
lock
pop
xchg
push
jae
int
xchg
xchg
mov
sbb
lods
stos
incb
repnz
aam
imul
popl
cmp
lods
call
mov
dec
scas
lret
ret
sub
out
mov
dec
clc
inc
pop
xor
dec
or
jecxz
pop
dec
push
xor
jg
out
add
cmp
mov
or
ds
add
out
daa
add
xlat
hlt
and
test
pop
jo
and
xchg
fisubrl
dec
mov
sub
add
fxch
sub
fisubrs
fs
push
push
imul
push
adc
dec
or
loop
mov
pop
repz
lods
jns
arpl
dec
fsubrs
xor
call
mov
ret
daa
mov
loopew
and
test
stos
int3
ss
ret
mov
dec
inc
xor
push
push
xchg
mov
mov
xor
popf
outsb
fmuls
in
aas
xor
add
icebp
add
cmpsl
into
pop
sbb
adc
and
mov
xor
sbb
jb
pop
movsl
mov
in
mov
xchg
xchg
mov
push
mov
sbb
test
lods
push
fldcw
loop
das
testb
add
and
mov
or
add
inc
or
decl
stc
mov
jnp
dec
rclb
in
adc
daa
sbb
xor
sahf
jbe
lock
jae
jb
jo
cmp
push
test
fists
xor
jmp
mov
and
gs
shl
jge
int
stos
mov
in
xchg
ja
mov
push
movsb
leave
dec
ja
mov
fcompl
mov
ljmp
jle
mov
addr16
sub
push
mov
xchg
test
adc
arpl
fldenv
jmp
faddp
out
cmpsb
bound
lcall
shll
jmp
push
jne
xlat
sub
adc
add
cld
jg
xchg
fidivl
loope
add
xor
leave
cmp
dec
pop
movsl
out
xchg
loop
ljmp
jge
inc
lret
cmp
adc
ret
sbb
push
or
ds
lds
jae
outsl
mov
jne
pop
push
dec
cmp
jl
lcall
jno
bound
andl
dec
jno
test
inc
mov
mov
inc
jg
incb
push
mov
lret
pop
pop
sahf
xor
scas
pop
in
shl
mov
rcl
push
push
dec
xor
sub
popl
addr16
jmp
sbb
sub
stc
pop
stos
dec
lods
cmc
es
scas
sbbl
ljmp
push
mov
outsl
push
jp
jl
add
xor
in
push
or
insl
and
sbb
lcall
jle
insb
sti
xor
adc
shrl
mov
mov
xor
inc
fwait
pop
and
jae
jle
or
xchg
pop
xor
pop
call
or
cltd
call
mov
ljmp
test
jnp
or
js
mov
jnp
mov
xor
mov
ja
dec
jg
idivb
jno
idivb
add
ss
adc
aaa
push
std
rolb
mov
test
pop
xor
pop
push
mov
xchg
push
sub
in
hlt
mov
sub
cwtl
push
push
ficoml
sub
inc
ret
pop
ds
sti
push
jbe
mov
sbb
les
mov
mov
mov
repnz
sbb
jae
jne
xor
mov
fcmovnu
aas
call
test
sbb
cld
adc
add
push
pop
cmpsb
cmp
test
lds
pop
out
cmc
icebp
aam
jmp
xor
push
xchg
loop
jg
cmp
mov
jg
push
movsb
btc
inc
ret
insb
adc
mov
test
push
push
mov
sbb
mov
push
mov
and
xor
adc
sub
cmp
repnz
inc
mov
je
cmp
add
sbb
mov
lds
add
fldl
pop
or
xchg
sub
outsl
inc
bound
int
mov
jmp
dec
fs
fst
sbb
xchg
cmp
mov
rorl
and
incl
jbe
imul
ret
fnclex
notl
incb
and
pop
gs
pusha
push
je
mov
daa
outsb
adc
adc
std
jb
mov
lret
push
add
pushf
shlb
inc
push
inc
in
pop
push
rclb
cmp
adc
aaa
pop
mov
add
jae
loop
icebp
insb
fcom
lds
ds
or
fimull
pop
sbb
popa
fsubrl
js
mov
int
xchg
mov
jp
push
pop
scas
repnz
ficomps
sti
sarb
jp
pusha
add
pop
lods
cli
stos
frstor
fsts
mov
mov
adc
push
and
jle
sub
dec
jle
push
mov
push
js
mov
sub
std
test
sub
ficompl
jno
lods
dec
mov
jmp
jno
pusha
add
mov
xor
out
fadds
shll
inc
out
test
cmp
xchg
call
mov
in
add
mov
and
popf
lock
mov
hlt
cmp
aam
pusha
dec
cmp
jno
ds
fidivs
push
or
sbb
xor
das
clc
in
xor
xor
mull
adc
pop
mov
nop
mov
lahf
hlt
adc
sbb
adcl
sbb
cld
adc
mov
mov
jne
xchg
lret
fmull
insb
aas
cmp
pop
sbb
inc
xor
test
xor
cmp
int
and
and
orl
and
pop
xor
sbb
icebp
adc
imul
inc
dec
pop
add
mov
mov
mov
daa
xchg
xchg
into
mov
or
cmpsb
pop
jge
pop
xlat
mov
out
cmp
ds
jb
stos
and
push
push
cld
pushl
scas
pop
xor
mov
out
inc
push
dec
incl
out
dec
lea
lret
test
jnp
push
push
shl
sub
test
ret
cli
push
sti
pop
jmp
mov
mov
fiaddl
hlt
int3
fnsave
lret
or
push
cmp
aad
or
inc
xchg
mov
inc
xor
mov
cltd
mov
dec
shrb
mov
in
pop
adc
inc
shll
aam
sub
icebp
xor
cmpsl
xchg
sbb
out
and
mov
addr16
stc
adc
jge
xor
xor
sbb
loop
or
into
or
cld
test
add
ja
test
out
sub
lods
insb
shll
mov
lcall
sti
push
adc
sbb
ja
sahf
sbb
cmpsl
xor
rcl
and
push
imul
adc
sub
pop
add
lods
and
jb
xor
imul
aad
and
les
xor
mov
pop
add
and
in
sbb
cmc
rorb
fmul
pop
subb
jle
push
sbb
imull
sub
push
xchg
inc
nop
loope
mov
fwait
mov
aam
frstor
sub
test
movsb
lcall
out
nop
push
xor
insb
inc
cmpsb
jne
xchg
add
mov
inc
push
int3
or
dec
add
mov
aam
push
push
or
adc
xlat
push
mov
push
sbb
sbb
jnp
xor
frstor
ret
aas
sbb
xchg
addr16
or
cmpb
mov
jnp
push
and
cmpsl
ret
stos
ficoms
dec
das
xor
pop
mov
inc
xor
imul
aam
stc
and
xchg
imul
movb
inc
or
cltd
cmp
clc
fwait
lds
xchg
cli
push
mov
inc
ffreep
jge
xchg
je
int3
xor
sub
sbb
rcll
push
cmpsl
dec
int
lea
jp
lret
stos
mov
loop
fwait
pop
sbb
leave
sahf
leave
aad
loope
mov
dec
sbb
xchg
cmp
int
mov
pop
imul
leave
ret
ljmp
mov
rol
mov
adc
fnstcw
hlt
mov
dec
pop
jbe
mov
mov
pop
fdivs
mov
mov
fs
jnp
sti
popf
xchg
mov
je
stc
cmp
ret
pop
sbbb
lock
cmp
insl
mov
lahf
test
jno
pop
cmp
sbb
pushf
pop
ss
in
ds
jns
rorl
cmc
push
sbb
out
repz
shlb
mov
adcl
cmp
adc
pop
adc
vmovntdq
into
xor
xor
cli
repz
pop
pop
jp
sti
test
dec
sti
movsl
pop
jo
push
imul
push
sahf
fisubs
es
lret
das
or
inc
sbb
push
repz
stos
mov
aaa
pushf
sbb
icebp
dec
pop
mov
add
mov
mov
in
shlb
sbb
je
jbe
ja
out
xor
fstpl
enter
clc
xchg
pop
xchg
push
xchg
jae
mov
cltd
inc
dec
sbb
mov
inc
jp
pop
lret
pop
sbb
jnp
sarb
imul
fdivs
rclb
cmc
mov
cli
ja
pop
mov
mov
and
out
pushf
jns
test
inc
dec
mov
cld
sbb
gs
pop
jo
cmp
xchg
xor
fs
sub
inc
push
rcll
mov
mov
cmpsl
hlt
aaa
cmp
mov
add
jmp
lds
ljmp
xchg
sahf
imul
xchg
out
mov
mov
inc
and
add
push
int
mov
aas
jno
pop
adc
pop
sahf
imul
fildll
jne
push
das
lret
cmpsl
loope
into
fldenv
in
aad
adc
ret
mov
mov
fnsave
adc
mov
xor
movlps
inc
je
shr
aaa
mov
mov
xor
xchg
pushf
das
rcrb
test
push
inc
cmpsl
and
pushf
xchg
cmp
sti
sub
stos
lods
mov
adc
pop
adc
xor
fwait
loop
lock
and
shrl
rorl
imul
jmp
or
jno
fadds
or
or
xchg
leave
aad
cwtl
inc
mov
int
leave
adc
fldenv
movsb
jae
imul
lret
fstpl
test
insb
mov
faddl
movsl
pop
add
inc
xchg
mov
adc
out
lcall
jno
frstor
out
jp
xor
xchg
and
or
sbb
in
jns
sbb
addr16
mov
stos
inc
or
cmp
fs
in
xor
loop
xchg
mov
push
inc
inc
dec
xor
out
jne
and
mov
aaa
movb
pop
mov
xor
xor
popf
xor
sbb
mov
xchg
jo
jge
push
in
enter
int
sarb
mov
popa
pop
aam
xchg
clc
sub
inc
mov
lock
js
adc
sub
test
nop
leave
imul
fdivrl
test
loope
inc
pop
test
lret
cmp
add
mul
dec
adc
stos
lds
cmpb
mov
push
push
push
sbb
push
gs
add
push
cld
outsb
mov
cmpsb
xor
xor
loope
xchg
leave
adc
addl
in
addr16
mov
loopne
out
divb
outsl
cmpsb
inc
dec
dec
mov
sbb
or
or
mov
mov
dec
sub
and
pop
push
fisubs
gs
mov
js
jg
cmp
mov
push
mov
fmul
inc
sahf
cmpb
and
fucomip
test
sahf
xor
dec
fbld
or
jb
or
push
sahf
and
or
xchg
add
mov
xchg
adc
cmpsb
xor
lods
or
shlb
fcompl
mov
stc
enter
dec
clc
cwtd
les
cwtl
mov
push
xchg
and
gs
jne
testb
scas
pushf
lock
fcoms
and
shlb
subl
imul
jg
push
enter
js
xor
push
fcmovnbe
pop
push
imul
adc
popa
mov
jae
xchg
push
push
lock
push
adc
mov
jbe
mov
outsl
mov
in
fwait
cmc
roll
cmp
movsl
jmp
insb
mov
jo
mov
das
mov
into
lds
push
pop
jbe
cmp
dec
inc
out
mov
push
dec
decb
or
popa
daa
xchg
aad
mov
gs
cmpsb
dec
shll
sbb
test
hlt
es
cmp
jl
das
cmp
jne
xchg
cmp
jp
je
scas
mov
or
divl
jl
outsl
dec
push
xchg
xchg
fldl
outsl
sub
sub
outsb
xor
xchg
mov
pusha
insl
push
pop
jo
adc
repz
rorl
jmp
xor
test
addb
cwtl
xor
sbb
sbb
stos
jne
dec
stos
mov
in
xchg
xor
mov
jmp
cmp
sub
std
out
dec
mov
std
or
sub
mov
xchg
jmp
mov
cltd
or
clc
dec
rolb
into
cmp
or
cmp
je
push
sbb
mov
repnz
lret
or
xor
out
sub
pusha
clc
mov
stos
lcall
sbb
cmp
addl
mov
mov
mov
push
icebp
inc
jbe
and
jo
mov
shll
jmp
roll
push
add
movsl
push
xchg
data16
je
or
and
enter
push
and
add
repnz
iret
inc
jmp
in
sbb
xchg
xor
jne
push
dec
test
out
fisttps
loope
jb
iret
nop
xchg
inc
mov
mov
and
fs
jg
clc
lock
lea
es
cltd
or
lcall
repz
fnstsw
or
test
jg
fwait
cmp
mov
pop
mov
notl
cmp
sahf
mov
jo
sahf
imul
ret
loope
hlt
jbe
in
vinsertf64x2
push
mov
pop
test
test
cmp
push
aaa
les
xchg
mov
mov
pop
mov
xchg
adc
dec
popa
pop
movsb
mov
inc
lods
pop
add
lret
fucomp
dec
jmp
jo
xchg
in
cmpsb
and
aaa
inc
fcmovnu
inc
xchg
test
dec
dec
or
and
int
scas
push
jl
sbb
push
push
push
cmp
outsb
test
jp
sbb
pop
inc
dec
xor
lods
sub
xchg
inc
cmp
xchg
movsb
dec
loop
cmp
xchg
das
fs
fdivr
sub
fwait
sarl
mov
inc
push
xlat
mov
jl
jecxz
iret
mov
xchg
repnz
add
xchg
aad
push
test
mov
sbb
leave
loop
xor
pop
out
add
mov
mov
push
cmp
lock
mov
sbb
adc
mov
mov
mov
fisttpl
mov
fisubrs
jns
mov
sub
ds
inc
inc
dec
in
hlt
add
lret
cld
test
sti
popf
pushf
sbb
sbb
inc
ret
push
scas
mov
stc
push
add
dec
push
jmp
mov
add
mov
inc
in
fisubrl
andb
jb
add
xchg
shlb
pop
pop
fdivr
data16
dec
add
xchg
jl
cmp
cmp
ljmp
cmc
cmp
mov
loope
mov
cmp
jl
ret
inc
pop
ljmp
mov
es
test
sbb
ja
push
shlb
fadds
and
mov
stos
mov
xchg
sub
shll
aas
movsb
outsl
clc
jno
push
ds
xor
arpl
mov
loope
push
pop
aaa
sysexit
jnp
adc
lock
repz
mov
scas
test
stos
sbb
pop
xchg
pop
cmpb
test
clc
inc
add
movsl
xor
xor
cmc
loopne
pop
or
dec
inc
pusha
lods
xor
out
fistpll
mov
inc
mov
xor
iret
loope
push
icebp
dec
adcb
dec
push
pop
lret
lods
mov
addr16
call
xlat
inc
sti
adc
xchg
arpl
das
sbb
jne
in
int3
inc
sbb
and
ss
or
loopne
aam
lret
fucom
aas
fisubrl
arpl
imul
adc
sbb
cmp
rcll
push
and
add
sub
aas
mov
repnz
lods
inc
add
mov
cmp
stos
and
pop
push
jnp
pop
in
sbb
fcomps
or
pop
imul
xchg
mov
rorl
test
jnp
lds
repz
xchg
popl
test
mov
shr
mov
sub
movsb
or
nop
ficoms
lea
ja
cmp
outsb
lret
xor
scas
and
or
pop
push
dec
loope
and
lods
jns
lcall
dec
mov
test
pop
lcall
jp
push
or
jno
stc
mov
scas
mov
in
ljmp
std
sub
cmpsb
dec
in
sbb
imul
testl
stc
adc
mov
sub
mov
xchg
mov
xchg
or
mov
dec
sbb
dec
das
push
orb
dec
test
cmp
jmp
and
jae
jecxz
je
out
mov
inc
mov
pusha
stos
stos
mov
xchg
jg
pop
mov
xor
mov
lea
dec
xchg
adcl
pop
rclb
jb
sarl
sub
sub
rorl
bound
mov
mov
movsl
stc
movsl
int
roll
pop
adc
negl
cmc
in
into
mov
test
adc
vunpckhpd
push
jle
inc
mov
inc
fwait
sbb
lock
push
add
ret
ds
inc
sbb
fimuls
inc
xchg
call
icebp
repz
xchg
pushf
shlb
xchg
pop
mov
shll
and
out
or
mov
adc
cmp
or
divb
mov
sbbl
and
jle
int
nop
icebp
rolb
out
sub
ss
das
mov
shll
sbb
xlat
nop
cmp
mov
lea
lea
in
xchg
mov
or
add
enter
rcll
sub
clc
pop
sahf
pop
and
lahf
dec
mov
fisttpl
stos
sbb
cs
xchg
inc
and
sbb
decl
imulb
fsubrl
mov
or
cmpsb
fcoms
ret
cmpsb
cli
inc
scas
pop
pop
jecxz
cmp
and
ret
or
mov
sub
cli
repnz
mov
stos
sarb
jp
testb
jae
test
imul
enter
in
push
xchg
or
into
lcall
cmp
pop
fisubrs
jo
incl
popa
jmp
pop
inc
adc
xor
pop
rcl
addl
popa
mov
dec
fs
icebp
into
mov
nop
test
shlb
popa
adc
std
xchg
cld
pop
xchg
addr16
mov
mov
rorb
dec
and
mov
int
xor
aas
add
nop
jge
mov
push
call
fbld
mov
popa
dec
mov
cmpsl
js
fstps
push
add
pop
sub
in
mov
xchg
mov
push
hlt
stos
and
out
in
movsb
ljmp
inc
insb
jecxz
icebp
dec
fadd
sub
cld
xchg
mov
arpl
data16
repnz
shlb
mov
in
addr16
adc
loopne
xchg
jecxz
dec
insl
mov
sub
js
mov
aam
ret
add
cltd
loope
sub
movsb
xchg
xchg
fs
xor
dec
add
push
mov
mov
inc
pop
inc
add
pop
je
lret
stos
jo
pop
mov
test
mov
or
pop
out
inc
jp
fistpl
subl
jbe
or
cmc
outsb
ja
aad
push
mov
insl
mov
popf
dec
xchg
pop
test
mov
shlb
adc
xchg
repnz
or
ljmp
xor
xor
and
addr16
loope
stos
negb
cmpsb
frstor
inc
in
lds
mov
xchg
sbb
add
loopne,pt
imul
jne
mov
xorb
and
pusha
pop
cmpl
in
sbb
or
cmp
pop
movsl
enter
gs
mov
jecxz
aaa
in
push
leave
ds
pop
pop
mov
loop
pop
jp
idivl
jne
cmp
cwtl
add
sub
pop
jo
mov
pop
call
add
inc
in
into
pop
lods
cmp
xchg
push
cmp
cmp
xchg
mov
lods
inc
addb
idivb
mov
shl
sahf
cmp
inc
or
std
xchg
inc
fnsave
cld
and
je
cmp
lahf
push
int3
sarl
add
sub
bnd
push
cmp
pop
push
cmp
shl
lds
mov
pop
dec
ret
fidivrs
scas
pop
in
xor
jnp
cmpsb
icebp
cmpsb
mov
mov
push
sub
jl
dec
adcb
in
stc
push
stos
push
sub
xor
hlt
jg
fcoms
loope
aas
and
push
int3
add
mov
cmp
fwait
enter
xchg
lock
push
mov
f2xm1
test
in
mov
push
adc
inc
sbb
push
cmpsb
rol
cmp
xchg
dec
aaa
lcall
jo
fisubrs
ds
repz
jo
frstor
leave
mov
test
lds
or
mov
adc
call
mov
jl
test
cli
inc
lea
test
mov
jmp
or
mov
and
shl
or
adc
sub
loopne
leave
mov
dec
pusha
pop
clc
sub
jl
add
nop
mov
adc
jg
out
sbb
mov
addr16
rcr
adc
popf
push
push
in
test
mov
out
imul
xchg
sbb
pop
and
inc
pop
sub
movsb
popa
sbb
fsubr
push
and
adc
divl
fistpl
push
mov
xchg
repnz
and
inc
es
inc
rolb
enter
sub
mov
in
lcall
xchg
sub
leave
test
jg,pt
stos
jno
test
sbb
stc
cmpsb
out
jo
fldl
mov
ret
mov
lea
pop
cli
add
push
sti
push
dec
lea
ljmp
jae
and
mov
fwait
xorl
lret
cmp
inc
jge
ja
leave
sub
inc
add
pop
adc
clc
insl
cmp
mov
in
push
inc
mov
adc
dec
jl
out
push
jg
pop
xor
push
repnz
push
add
fcomps
mov
ljmp
lods
or
in
mov
or
inc
mov
cld
ljmp
scas
lea
push
insl
adc
outsb
orl
inc
jnp
cmp
sbb
jge
out
nop
iret
scas
dec
xorl
mov
mov
sbb
test
pop
xor
and
add
mov
inc
sub
mov
add
insl
xchg
sbb
mov
jnp
mov
inc
push
js
xchg
dec
out
sub
xchg
jns
cmp
aaa
ss
fisubl
rcrb
mov
ret
insl
inc
mov
jne
es
gs
in
aam
pop
pop
filds
andb
fstl
mov
jo
cmp
movsl
loope
mov
xor
sbb
add
cld
pcmpgtw
mov
jo
fwait
out
mov
inc
mov
sbb
cltd
sub
xor
mov
add
xchg
popa
mov
xor
lock
mov
inc
mov
pop
sbb
xor
mov
xor
fildl
and
xchg
test
jle
jae
aam
pop
inc
push
cmp
out
ja
push
sub
fldln2
jne
push
push
inc
mov
stos
mov
mov
lret
insb
and
jle
or
mov
push
subb
sbb
jmp
xor
aam
int
cld
iret
or
mov
jg
mov
or
push
lret
call
mov
inc
cwtl
xchg
lahf
insl
rorl
adc
das
bnd
int
in
les
or
popf
dec
pop
adc
lahf
or
adc
icebp
aas
in
scas
nop
pusha
pop
fdivp
dec
inc
push
aas
jae
pop
jo
push
push
negl
add
dec
jecxz
and
lea
mov
or
mov
push
and
mov
nop
nop
and
jecxz
jl
idiv
dec
test
jbe
cmp
fists
movzbl
lahf
and
movsb
test
dec
sti
mov
inc
mov
xor
and
pop
hlt
lahf
ljmp
pop
adc
or
out
iret
cmpsl
clc
outsb
out
stc
xor
xchg
mov
and
sub
repz
jle
dec
stos
stc
push
sbb
mov
pop
jns
cwtl
jge
repnz
loopne
sub
mov
xchg
nop
inc
mov
dec
jno
adc
cmp
adc
xchg
std
pop
ds
fiadds
cmc
cltd
mov
js
mov
or
rorl
cmpsb
lret
jecxz
pop
cmp
sbb
stc
mov
int3
repz
nop
ret
add
ret
fsubl
and
xor
adc
sub
and
cmovns
push
lock
cmp
aam
mov
mov
cmp
and
ret
repz
je
sbb
jle
pop
cmp
cmpsl
xchg
and
xchg
mov
lds
and
sub
jp
sarb
dec
pop
decb
int
mov
adc
dec
mov
adc
cmp
jno
adc
xchg
sub
or
jbe
pop
leave
scas
cmp
or
insb
out
jno
addl
xchg
and
push
mov
xor
out
mov
mov
push
std
adc
inc
jb
lcall
divb
or
leave
cld
out
xchg
jmp
dec
pop
jge
pop
leave
or
mov
mov
cwtl
iret
xchg
dec
add
pop
inc
roll
dec
sarl
mov
dec
test
into
rclb
mov
cmp
lods
and
and
lds
mov
sbb
clc
jp
popf
call
ljmp
or
into
repz
jbe
push
inc
in
add
mov
repnz
and
xor
ds
jmp
jl
xchg
sbbl
and
jnp
jecxz
cltd
fstp
arpl
cli
dec
arpl
scas
pop
push
jae
clc
sbb
pop
inc
sub
enter
jmp
divb
mov
mov
mov
xor
cmp
movsl
pop
sub
inc
xchg
pushf
adc
outsl
push
mov
aas
mov
push
in
outsl
cmp
ljmp
fildll
ror
roll
cmp
lods
std
push
int
orb
pop
nop
into
icebp
mov
ss
cmpsb
pop
in
cmc
add
shll
ds
test
int3
fincstp
mov
or
stos
into
es
mov
sbb
and
adc
push
int
mov
jge
ljmp
leave
xor
loope
xchg
sahf
inc
fiaddl
cmp
repz
fistl
mov
mov
and
repnz
sub
cmpsl
bound
cmp
rolb
arpl
orb
xor
lods
test
push
sbb
and
cmp
clc
outsl
pop
out
or
sahf
mov
and
dec
and
imul
rcrl
lret
scas
jns
push
into
adc
push
xchg
sarl
pop
mov
xchg
mov
sbb
jbe
pop
aas
xor
mov
or
mov
pop
and
push
cmp
andb
and
inc
cmp
lds
or
sub
insl
cmp
and
int
aam
aaa
xor
jle
and
int
sub
add
xchg
pop
js
rcr
les
push
fwait
pop
xchg
lret
insl
dec
mov
add
adc
cmpsl
lcall
inc
jne
sbb
pop
ljmp
std
pop
mov
pop
dec
ret
xchg
lret
xchg
jecxz
popa
pop
loope
pop
push
xor
adc
cmp
in
das
cltd
dec
push
dec
lea
inc
jns
and
push
add
jne
hlt
dec
mov
mov
jg
jge
xchg
cmc
sbb
jnp
mov
popf
ret
inc
mov
nop
pop
cmp
and
pop
icebp
push
add
sub
ja
leave
js
xor
adcb
out
xlat
pop
xor
notl
cwtl
mov
pusha
aam
inc
inc
push
sahf
pop
or
mov
mov
mov
in
clc
movsl
insb
mov
js
xor
mov
fcoml
xor
sbb
insb
xchg
pop
cld
mov
call
data16
cmc
pop
aad
dec
xchg
enter
enter
fistpl
fisubl
orl
sub
push
push
scas
sbb
imul
bound
dec
cmp
dec
aam
loope
lea
fisttps
leave
pop
pop
cmpsl
pusha
ss
fsubl
mov
push
lcall
fisubrs
jecxz
jne
push
jmp
ds
xlat
sub
pop
inc
push
push
mov
scas
ffree
xchg
out
andl
mov
push
mov
test
mov
outsb
ficoms
or
jne
sbb
adc
in
pop
mov
mov
jecxz
mov
pop
cmp
pop
xchg
adc
sbb
addl
cli
and
inc
cmc
xor
popf
mov
jne
xor
add
xor
rorb
repz
dec
imul
inc
add
mov
cmpsl
push
shrb
fldl
mov
or
xor
ds
xorl
roll
mov
test
lea
add
pusha
test
icebp
adc
icebp
loop
sbbl
pop
sbb
jbe
or
dec
arpl
shl
arpl
sub
adc
sub
pop
mov
lods
repnz
push
les
aaa
sub
test
ds
add
mov
stos
jecxz
cmpsl
inc
dec
or
aaa
mov
dec
daa
in
jmp
pop
mov
pop
push
hlt
mov
ficoml
push
lcall
jge
test
mov
mov
mov
and
cmpb
adc
cmp
mov
lods
mov
add
out
and
shrb
xor
lcallw
cmp
int3
mov
mov
dec
fnop
mov
dec
gs
or
pushw
or
ja
mov
cmp
lock
cmp
pushf
dec
popf
mov
xchg
aad
movsl
jge
and
dec
push
nop
scas
or
addr16
daa
push
pushf
xor
dec
lods
pop
fdivrl
push
pusha
or
leave
cmpsl
fcompl
ret
push
xor
pop
mov
sub
mov
stos
test
or
gs
cltd
mov
mov
xchg
lret
pushf
sub
decb
and
lcall
loopne
fwait
pop
inc
sub
popf
pop
mov
lahf
mov
xchg
fidivs
adc
cmpsl
mov
das
pop
orl
es
aad
lds
adc
push
mov
stos
mov
mov
aam
xor
mov
cmpb
jne
xchg
pusha
test
insl
test
inc
mov
jns
movsl
xor
cli
aas
in
rol
aas
shrb
sbb
nop
fwait
push
cmpsl
pop
jg
pushf
inc
cmp
enter
adc
ds
out
frstor
fsubs
cmpsb
pop
add
xor
pop
dec
jl
cmp
lods
mov
leave
mov
xchg
sub
dec
std
sub
sbb
filds
and
xchg
and
repz
xchg
pop
cli
sbb
push
popf
out
mov
arpl
push
call
je
je
fiaddl
daa
dec
xchg
xchg
or
mov
lret
popa
imul
mov
push
mov
mov
cli
cmp
in
push
dec
scas
or
inc
mov
aaa
cmc
stos
add
push
fs
lahf
sbb
mov
cltd
pop
sbb
leave
cmpsb
cmp
mov
ja
xchg
cld
mov
movsb
ds
inc
pop
lahf
ret
xchg
insb
inc
push
pop
leave
arpl
int3
test
push
subl
cmpl
loopne,pn
aaa
into
ret
sbb
pop
xchg
jb
pop
imul
mov
sub
data16
rcrl
das
fldl
adc
sub
in
mov
lods
pop
cmp
loopne
mov
adc
in
stos
enter
scas
repz
repz
push
mov
stos
nop
adc
int
cld
test
adc
or
or
imul
cmp
test
mov
movl
mov
cwtl
sbb
into
jnp
or
aaa
pushf
nop
push
ret
mov
adc
sub
or
dec
loopne
add
mov
fwait
lock
adc
aad
lods
adc
icebp
inc
loopne
jne
std
mov
adc
lcall
ds
mov
mov
pop
scas
inc
enter
decb
dec
dec
lret
dec
call
xor
out
fdivl
iret
sbb
cmp
jmp
movsb
imul
cmova
mov
hlt
jo
pop
adc
popa
xlat
out
add
ss
sbb
lods
xchg
cli
mov
jb
add
stos
jo
inc
mov
jp
jl
jge
push
mov
push
jnp
jns
cmp
js
mov
pop
dec
fcmovne
enter
js
pop
fists
lret
sahf
xchg
lods
dec
fistpll
jg
mov
jl
cld
sub
sbb
int
hlt
jge
pop
mov
lods
orl
pop
aad
sbb
out
js
lret
mov
shll
adc
pushf
xchg
frstor
dec
test
cmp
xor
cmp
cmp
cmpsl
pop
mov
push
mov
aaa
jl
popf
jp
adc
push
push
push
mov
ljmp
push
movsb
push
mov
mov
outsb
aam
repz
jne,pt
lods
mov
xchg
and
pop
daa
sub
popa
cmpsl
ljmp
and
adc
and
fisubs
push
or
cmpsl
lahf
dec
dec
add
xor
push
mov
mov
add
jg
mov
daa
cltd
dec
push
sbb
push
rclb
xlat
js
jne
push
jno
cmp
dec
xchg
inc
dec
xchg
in
and
sbb
in
nop
loope
mov
jp
fs
pusha
ficomps
inc
movsl
out
fsubrl
cwtl
adc
push
push
mov
mov
enter
sub
and
inc
xchg
sbb
add
in
stos
jo
sbb
inc
hlt
inc
pop
je
mov
ds
stos
mov
cmp
jnp
mov
ret
std
jns
xchg
int3
xchg
jb
mov
rcrb
fstl
push
mov
rcll
insl
repnz
push
pop
int3
adc
inc
pop
xchg
or
fldl
and
adc
lcall
cmc
pop
jae
icebp
divb
lods
mov
loop
lcall
push
xchg
cmpsb
jle
clc
adc
mov
test
enter
pop
sbb
jbe
jne
int
jb
push
push
subb
divb
fucom
test
stos
jne
test
ss
loope
cmp
in
aaa
jo
sarl
push
cmc
test
adcl
push
or
sti
mov
xor
xlat
jb
sub
hlt
pushf
or
imul
ljmp
and
mov
lret
or
push
mov
dec
lds
int
push
and
leave
xchg
cmp
enter
aam
pop
pop
ds
inc
jp
cmp
adc
mov
cmp
subps
pusha
xchg
jge
lea
jge
push
mov
or
push
mov
ret
mov
dec
pop
out
pop
cltd
lock
push
in
mov
pushl
or
insb
int3
pop
out
sbb
xor
pop
stos
test
xchg
push
jl
cltd
lahf
lret
or
and
pop
test
daa
mov
or
mov
dec
ja
lods
loope
loopne
iret
loope
out
adc
lods
fisttpll
cmc
jmp
mov
sbb
sahf
stos
pop
sub
flds
test
mov
sbb
pop
std
xor
dec
pusha
cmpsl
mov
dec
sbb
xor
mov
mov
mov
in
aad
add
subl
and
or
stos
push
shll
mov
dec
mov
out
js
or
or
sub
dec
inc
addb
out
popf
movw
fisubs
pop
sbb
push
call
rol
dec
stos
inc
out
testl
add
out
leave
dec
inc
arpl
sub
jg
inc
xchg
negl
cmp
sti
in
into
push
outsb
mov
adc
in
pop
in
shrb
push
xor
sbb
movsb
repz
jge
fistpll
std
mov
gs
or
enter
inc
in
xor
popf
jb
popf
or
push
inc
sbb
jbe
ret
shr
in
push
add
ret
arpl
cmp
add
push
mov
cmp
hlt
and
mov
imul
adc
test
mov
data16
xlat
sarl
test
in
jp
jle
and
inc
in
pop
subl
pop
loopne
dec
sbb
movsl
jp
mov
sahf
scas
push
mov
sti
dec
fsubs
test
mov
push
lock
fwait
or
sbb
mov
and
jae
xchg
cmpb
jp
in
daa
cld
movsb
xchg
cld
insb
sub
out
dec
mov
mov
add
pop
sub
or
lea
loop
imul
mov
inc
inc
aad
push
outsl
jecxz
xor
push
xchg
mov
add
leave
push
push
mov
push
dec
mov
divl
enter
bound
movsl
push
xlat
mov
xchg
fbld
int
xchg
dec
mov
mov
cmp
arpl
aam
sub
lret
out
mov
leave
sbb
cmpsl
or
adcl
arpl
cmp
add
jle
mov
jns
and
mov
gs
mov
mov
mov
mov
sub
mov
in
lods
mov
clc
sbbb
cmp
mov
insb
lret
xchg
lcall
push
and
jae
test
sbb
mov
sub
setnp
and
sub
ss
aas
mov
jno
ljmp
adc
mov
sbb
or
push
pop
lock
xor
mov
pushf
pusha
inc
lcall
jl
jg
mov
inc
mov
dec
out
stc
pop
sar
inc
lds
cmp
mov
pop
push
imull
xor
xor
mov
cmp
sub
loope
cmp
dec
xor
push
ljmp
divb
aas
loop
pop
test
push
pop
sub
adc
xchg
lds
adc
stc
xor
bound
mov
aas
xlat
out
out
mov
pop
jp
les
aas
inc
lock
das
cmp
fstpt
mov
ljmp
fdiv
jg
test
in
sub
dec
stc
push
int3
mov
mov
pop
mov
out
add
lods
and
in
or
stc
out
pop
out
inc
jp
pop
pop
movsl
dec
rcl
test
add
andb
les
xchg
sub
dec
cmp
leave
ret
std
shll
out
in
ror
and
shrb
pusha
and
pop
mov
clc
xor
rcrl
pushf
pushf
arpl
xor
push
daa
aaa
test
pop
cmpsb
mov
mov
and
test
adc
pop
popf
outsb
aad
sbb
push
adc
test
js
aas
out
leave
fwait
jge
inc
xor
sbb
and
jnp
pop
inc
roll
mov
pop
js
shlb
out
xchg
jo
mov
ds
es
imul
dec
xchg
pop
cwtl
mov
subb
dec
popf
and
std
adc
cmp
int3
cmp
pushf
dec
nop
mov
in
dec
aad
xchg
jnp
in
lea
xor
xchg
xor
sub
fnstcw
lcall
movsl
cli
xor
pop
arpl
insl
pop
cmc
dec
add
fucomp
insl
jns
stos
sbb
inc
inc
jo
or
hlt
mov
into
cli
dec
inc
sahf
sub
xchg
lods
and
out
inc
sub
cwtl
fld
push
push
jnp
pusha
test
lds
cmp
lods
call
les
rorl
scas
inc
mov
stos
cmpsb
out
rorb
fsts
push
movsl
mov
inc
rorb
mov
inc
stos
pop
add
pop
sar
mov
aas
notl
fs
mull
pop
fisttpll
in
fs
scas
sahf
sbb
shrl
sahf
cld
xor
or
pop
sahf
fiadds
mov
pop
ret
es
mov
outsl
and
lds
int
jo
int3
jb
shlb
pop
sti
je
and
aam
push
int
mov
ficoml
xchg
out
xor
bound
push
dec
std
mov
adcl
and
fistl
iret
hlt
pop
sbb
dec
out
mov
jnp
jns
in
daa
xchg
xlat
jno
push
movl
icebp
loop
in
shll
sahf
cmp
sahf
lds
lret
jmp
scas
jmp
xor
in
popf
mov
push
sub
cltd
nop
imul
mov
pop
pop
mov
popa
movsl
lods
jmp
mov
inc
and
stos
int3
add
dec
in
pop
aas
mov
scas
dec
rclb
lcall
pop
pop
xor
cltd
fldl
push
inc
in
cmpb
mov
jecxz
dec
insl
call
rcll
add
lcall
lret
pop
inc
hlt
dec
adc
cmpsb
push
jmp
mov
insl
inc
aas
sub
fbstp
scas
loopne
adc
lret
popf
xchg
adc
mov
in
or
push
cli
ss
ja
push
int3
xchg
daa
xchg
push
sahf
add
imul
jmp
cltd
test
xchg
cmp
jmp
lds
imul
push
xchg
fwait
movsb
jne
cli
roll
out
sbb
dec
inc
jp
cmp
cltd
mov
icebp
pop
aaa
xor
test
mov
out
xchg
jns
push
mov
or
mov
push
out
sbb
data16
dec
into
add
or
xor
jp
and
outsl
add
lds
insl
fadds
pushf
jo
out
mov
ret
and
push
pop
dec
mov
cmp
adc
in
push
sbb
pusha
cltd
cmp
cmp
jae
das
lods
sti
dec
es
jns
cmp
sub
fs
pmulhw
out
test
repz
stc
sbb
hlt
mov
pop
stos
ds
inc
repnz
mov
adc
cmp
subl
pop
xor
insb
push
vmwrite
out
mov
into
xor
les
inc
mov
pushf
arpl
cwtl
scas
inc
aas
jo
pushf
xchg
les
pushf
ja
jp
add
sbb
jb
scas
jle
mov
dec
mov
jb
fstpt
or
mov
ret
lods
mov
fldln2
jge,pn
sbb
pop
ret
or
icebp
cmp
mov
jg
cltd
mov
mov
gs
jbe
mov
out
sti
out
arpl
sbb
xor
shll
and
sub
push
ret
insb
inc
mov
cmp
lods
rep
pop
test
sub
ds
aad
pop
mov
or
pop
jbe
push
rolb
in
inc
push
adc
inc
add
inc
std
loopne
mov
and
pop
outsl
cmp
fdivrl
test
xor
std
mov
jle
out
push
jb
mov
hlt
mov
add
xchg
int3
lock
fisubl
sbb
in
cs
shrb
sahf
jecxz
ja
sub
imul
pop
adc
cmpsl
pushw
cmp
mov
adc
inc
aad
imul
pop
int3
push
push
rcll
push
adc
add
ret
xor
sti
sti
mov
hlt
lahf
bnd
gs
push
adcl
push
adc
data16
and
push
cmp
xchg
inc
push
ljmp
jno
andps
cmp
sbb
es
insb
jecxz
push
pop
cmp
pop
xchg
jmp
and
arpl
adc
jl
out
push
xor
sub
mov
adc
xchg
ret
int
movsl
mov
int3
inc
leave
out
ja
pop
and
xor
lahf
fucomi
roll
xchg
aaa
pusha
fildll
fadds
fstpt
cmp
and
mov
mov
mov
xchg
enter
cwtl
out
mov
insb
mov
mov
inc
or
pop
std
sub
gs
push
dec
pop
pusha
orl
inc
or
imul
rolb
sub
mov
in
inc
and
cmpsb
mov
pop
sub
mov
and
in
push
or
pop
cs
sarl
sbb
dec
add
in
xchg
repz
cli
mov
inc
add
push
dec
sbb
into
jl
or
pusha
iret
test
call
mov
popa
sbb
jnp
je
clc
mov
lods
lods
std
jmp
lods
int
insl
out
fs
cltd
xor
in
stos
jb
into
cmc
int3
and
mov
sbb
push
inc
test
push
or
fs
mov
and
jnp
jl
cmpsl
mov
out
popf
aam
cli
cli
pusha
cmp
sub
jb
xorl
pop
push
sbb
push
out
mov
cmovl
mov
xchg
xchg
loope
ja
inc
sub
mov
cmp
js
ffreep
push
sar
push
mov
cli
cs
lahf
jno
add
mov
mov
das
movsb
mov
les
insb
test
add
int
sbb
sbb
mov
movsl
jo
jbe
mov
inc
arpl
je
adc
xor
dec
xor
ret
or
lea
jb
std
pop
mov
test
mov
cmpsl
jno
mov
es
push
dec
cwtl
addr16
mov
clc
outsb
fwait
xchg
xchg
cmpsl
sbb
incb
repnz
sahf
push
inc
insb
mov
test
je
mov
and
xor
push
cmp
cltd
jo
cmpsl
pop
movsl
sub
lods
add
or
fs
inc
icebp
push
sbbl
jge
pop
into
imul
jb
or
inc
dec
sub
ja
repz
push
and
sub
adc
sub
or
mov
inc
jp
sbb
sbb
aad
or
leave
scas
xchg
in
shrl
xor
gs
or
lret
sahf
sub
sbb
mov
rcl
pop
xchg
ljmp
jle
les
rolb
cs
or
shr
inc
test
call
sub
push
dec
por
xchg
in
popa
push
mov
gs
divb
stos
imul
add
daa
xchg
pop
test
pusha
leave
js
aad
dec
add
stc
mov
xchg
jo
push
pushf
scas
cmp
cmp
inc
test
out
xorl
or
xor
into
and
mov
mov
rol
push
adc
je
jg
fcmovbe
pop
aam
and
pop
int3
popa
popa
test
ss
xor
inc
lds
mov
jo
sub
or
and
add
push
popf
cmp
mov
push
ret
fsts
loope
mov
adc
jo
sbb
dec
pop
xor
sub
cmp
jnp
loopne
push
scas
pop
mov
push
jge
mov
hlt
push
roll
xchg
aad
jle
add
mov
dec
andl
push
push
dec
xor
loope
fsts
imul
lahf
mov
cltd
push
test
aam
pop
daa
sbb
fiaddl
pop
cltd
jg
adc
push
and
mov
or
mov
add
cmp
leave
outsb
jecxz
rol
into
negl
rolb
mov
call
in
cmp
sbb
ud2
fidivl
add
in
daa
ljmp
imul
movsl
clc
push
mov
outsb
pop
adc
sub
es
rcr
fsubl
pusha
mov
mov
or
mov
jbe
xchg
xchg
push
aam
inc
sbb
and
lods
in
cmp
in
scas
hlt
pusha
call
enter
sbb
test
cmp
and
mov
cmp
xor
shld
xchg
xor
xor
or
jmp
xchg
lods
and
jne
adcb
inc
jne
sub
das
cld
js
mov
ss
loope
dec
adc
leave
sub
xchg
ds
cli
cmp
cmpsl
adc
xlat
and
jle
icebp
lea
or
bound
dec
icebp
inc
lahf
xlat
je
vpsubsb
add
pop
inc
stos
lcall
in
je
outsb
inc
enter
insb
dec
bound
outsb
sub
mov
sub
es
test
push
hlt
loope
pop
popf
int3
pop
jbe
dec
pop
mov
push
mov
test
and
fwait
jecxz
xlat
push
and
popa
dec
ljmp
enter
push
pop
push
xchg
loop
outsl
dec
sahf
cmp
shlb
imul
cmp
mov
pop
jae
or
stc
fistps
addl
arpl
aad
dec
dec
shll
mov
fdivrl
je
adc
aaa
inc
cmp
lea
push
sbb
inc
dec
in
mov
jo
mov
mov
and
add
dec
arpl
jns
sarb
popa
cmpsb
and
fwait
mov
inc
iret
dec
pop
pushf
sub
and
les
cmp
fnstcw
sbb
je
mov
ljmp
pop
out
jge
sub
jbe
cs
je
outsb
aad
adc
jge
in
xor
xchg
cmc
sub
push
jg
jb
xor
sub
rclb
jns
shlb
sub
ds
or
jns
xchg
push
xchg
int3
xchg
inc
ss
sbb
movsl
addb
pop
fs
sbbb
shl
add
and
push
stc
xchg
int
jmp
int3
dec
mov
jo
bswap
bound
jo
fstpl
dec
sbb
jne
pusha
xchg
lret
and
sbb
leave
xor
inc
gs
std
in
add
ret
dec
jle
add
lods
mov
les
shll
adc
xchg
adc
push
dec
outsl
sub
dec
mov
pop
jmp
stos
ljmp
clc
push
clc
adc
xor
mov
xchg
stc
idivb
mov
insb
and
dec
les
jmp
repnz
andl
cmpsb
mov
inc
js,pn
dec
pop
cld
mov
push
sbb
ret
int3
ljmp
fldenv
shlb
aam
jmp
cmp
cld
mov
xchg
call
jae
jo
jne
lcall
mov
adcl
lret
pop
sub
mov
fcoml
mov
in
das
cmpsl
xchg
fbld
lods
add
outsb
pop
test
cmp
jne
lods
inc
and
lds
lahf
loope
mov
aad
xchg
inc
cmp
pop
dec
insl
rcrb
negl
cmp
xor
jb
bound
fists
idivb
mov
fwait
insl
and
jle
and
adcb
mov
je
xor
jg
shrb
jnp
data16
es
cmpsb
std
lcall
std
stos
xor
lcall
or
lahf
xchg
aad
adc
rcll
popa
lea
push
shlb
add
sbb
leave
hlt
pop
dec
gs
mov
lea
filds
or
cmp
dec
fwait
ljmp
xchg
fldenv
pusha
and
popf
dec
cmp
rol
xor
jp
xlat
mov
imul
adc
dec
mul
imul
pop
xchg
fdivrl
aad
sahf
stos
ror
in
aam
mov
loop
mov
mov
dec
stos
jo
repz
or
pop
leave
es
sahf
xchg
adc
cltd
loop
clc
lret
loop
push
loopne
or
pop
rcr
cmc
dec
lods
mov
cltd
add
sbb
js
push
daa
push
pop
roll
add
jnp
dec
cmpl
sub
ret
cmp
and
fs
rolb
testb
dec
je
inc
or
inc
rcrl
fdivrl
mov
test
dec
out
shr
jl
or
adc
lret
lock
jge
xchg
rcrl
sar
sub
or
cmpsl
inc
pop
push
dec
add
fisttpl
lods
andl
push
cmp
or
push
lea
jo
lret
cwtl
ss
cli
gs
ficompl
shrl
repnz
das
rcrl
adc
stos
ret
pushf
popf
dec
mov
xor
mov
sub
outsb
rorl
ds
movl
in
jae
cmpl
sbb
adc
add
jp
push
cwtl
and
mov
mov
cmp
and
and
imul
dec
cmc
sub
xor
fildll
fiaddl
mov
nop
xor
daa
jecxz
testl
iret
push
mov
jmp
sarb
scas
imul
lds
lock
mov
jg
je
sub
mov
out
push
xchg
cmpsb
loopne
mov
sub
inc
jg
jmp
cmp
push
mov
inc
test
bound
sub
outsb
leave
lds
loopne
fwait
or
clc
add
bound
bound
mov
aam
or
test
inc
push
inc
out
cmpsb
test
shlb
out
idiv
mov
iretw
dec
mov
loop
cmp
mov
out
shlb
xchg
jbe
lods
mov
jns
and
inc
and
lahf
and
ret
addr16
xor
and
gs
add
jb
mov
or
add
sti
lods
paddsw
sahf
lock
es
mov
push
or
xchg
mov
sub
cmc
pop
dec
leave
add
xchg
xchg
addr16
jge
adc
push
sbb
into
xor
ror
fs
mov
jae
xchg
call
or
cmp
pushl
mov
jnp
fstl
sub
popf
sub
fistpl
add
mov
jbe
sub
fnstsw
movsb
cmovo
insb
mov
std
push
or
fwait
mov
inc
repz
mov
lahf
fst
ficoml
dec
dec
repz
fmull
mov
mov
push
xchg
data16
mov
xchg
push
push
std
sbb
sub
adc
or
pop
jno
popf
cmp
add
push
mov
mov
js
mov
shr
cmp
mov
pushf
dec
add
pop
cmp
enter
and
sub
sub
cmpsl
dec
xorl
inc
push
movsb
adc
shlb
and
enter
mov
cwtl
inc
imul
fwait
xchg
and
insl
mov
mov
mov
add
cmpsb
stos
imul
push
ror
loope
mov
lret
mov
and
idivb
sub
sarb
out
loop
sbb
or
fisubrs
pop
push
popf
dec
and
insl
out
inc
sti
lods
pop
pop
lock
fistpl
xor
stos
rol
pop
lods
dec
or
scas
test
adc
call
outsl
or
cs
out
sub
and
dec
jae
dec
and
lret
ret
insl
aad
lahf
ret
repnz
jle
mov
int3
push
mov
lret
sbb
hlt
mov
push
add
pop
sub
inc
add
mov
stos
push
daa
shlb
negl
out
out
push
pop
adc
pusha
lock
rcl
pushf
sbb
int
inc
xor
dec
mov
push
mov
jbe
aaa
loope
add
into
push
jnp
aad
flds
ja
mov
aad
call
les
sub
repnz
add
and
jns
or
leave
and
jbe
xchg
jno
add
jne
jno
dec
dec
jb
inc
test
mov
loope
iret
cmp
lcall
sbb
mov
lret
scas
daa
pop
or
imul
sub
add
je
in
test
in
repz
sub
add
push
add
cmp
jl
pop
and
push
rcr
xchg
pushf
dec
xchg
repnz
xchg
addl
shrb
mov
lods
pop
inc
xor
push
adc
insl
pop
xchg
fcompl
dec
xchg
sbb
test
shlb
lcall
add
push
mov
xchg
dec
outsl
mov
sub
pop
adc
add
insb
push
mov
pusha
daa
sub
add
jb
stc
push
test
xchg
jb
paddusb
push
adc
jnp
jp
pop
jl
cmpb
mov
push
pop
jg
ja
mov
stos
pop
and
addb
scas
cmp
fbstp
add
scas
dec
hlt
movsl
push
pop
mov
push
push
mov
add
loop
mov
lret
mov
dec
cltd
mov
mov
cwtl
sbb
mov
push
and
lcall
mov
mov
clc
faddl
in
jo
js
sub
outsb
xor
inc
dec
test
push
pop
loop
lahf
and
fisubrs
xor
xor
inc
ret
mov
es
dec
adc
pop
dec
std
int3
mov
lret
jne
add
push
mov
insl
jnp
or
fs
mov
in
pop
shlb
mov
mov
sbb
addr16
mov
and
mov
pop
mov
sub
fdivrs
out
arpl
aad
fucom
dec
push
jo
add
push
int3
pcmpeqb
iret
lret
mov
daa
daa
lret
movsb
cs
push
mov
or
push
mov
out
adc
fwait
jecxz
rep
lcall
inc
addr16
jl
jae
adc
push
out
xchg
pusha
mov
lret
dec
clc
ja
enter
or
repz
sub
mov
dec
popf
mov
int
inc
dec
jmp
imul
mov
mov
sbb
not
xorl
xor
lahf
jmp
enter
lret
pop
gs
sub
lds
mov
call
subb
rolb
xchg
std
mov
adc
ljmp
es
xchg
cmp
mov
testl
insb
push
fdivrs
cmpsb
jb
sub
sbb
mov
mov
fisubs
mov
jns
nop
fsubrs
gs
mov
adc
and
mov
shlb
leave
ret
jmp
push
es
lods
lods
jge
sahf
dec
scas
aam
rorl
or
adc
dec
sbb
dec
jp
sarl
ret
es
shrb
push
pop
mov
adc
shlb
out
xchg
sub
push
pop
lret
mov
and
movsl
in
jo
outsb
xchg
push
pop
ljmp
jae
das
sarl
jmp
loopne
inc
xchg
out
popf
cs
ljmp
lock
sub
sbb
sub
lcall
jle
push
fdivr
repnz
inc
inc
sub
std
out
mov
push
and
das
outsb
or
stos
lods
push
push
aam
outsb
mov
or
fwait
push
cwtl
ret
pushf
dec
je
repnz
out
xchg
cltd
jae
pop
cwtl
mov
daa
jle
sbb
jbe
cmp
movb
mov
mov
test
test
sub
dec
imul
mov
adc
push
inc
sahf
in
jnp
jne
out
insb
jl
rcr
lock
fmul
inc
arpl
cli
addl
outsl
addr16
push
out
scas
adc
mov
shr
fisttpl
in
cmp
fsubrp
adc
shlb
imul
xchg
or
stos
mov
push
out
push
and
mov
popf
inc
jge
leave
gs
xchg
pop
adc
pop
js
push
mov
sbb
mov
loope
stos
sbb
lahf
mov
xchg
jo
fdivrl
fcomps
cmp
fiadds
sub
aas
add
cwtl
dec
sub
test
sbb
pop
fs
mov
inc
dec
test
jge
mov
mov
test
iret
sub
hlt
or
jp
mov
adcl
sub
das
xchg
pop
and
cmc
loop
aaa
movsl
jg
sub
mov
xor
xchg
mulb
or
xchg
call
push
fbstp
inc
fst
test
xchg
mov
insl
cltd
jmp
pop
pop
cmp
xorb
adc
or
test
adc
lds
shlb
subb
loop
cmpsl
bound
or
dec
sub
add
xchg
je,pn
dec
es
in
outsl
das
call
or
dec
pop
sti
pop
inc
inc
hlt
jle
insl
out
mov
adc
xlat
js
lcall
lret
mov
cmp
das
add
mov
icebp
and
or
repnz
jmp
stc
iret
sahf
push
out
inc
cmp
subb
scas
pop
mov
fs
dec
xorb
ja
or
pop
call
sub
loop
mov
scas
addr16
dec
lahf
fs
sbbb
call
adc
jno
mov
and
add
xor
xor
loope
lahf
ret
lret
xchg
hlt
ds
xor
fldln2
push
sub
add
ds
jl
lret
xor
sbb
xor
mov
popf
or
stos
xchg
loopne
lret
popf
xor
cmc
outsl
das
into
push
movsb
cli
jmp
in
jle
shlb
xor
movsl
fsub
inc
divl
jl
mov
xchg
mov
xor
aam
cltd
fsts
aaa
or
pop
popa
lahf
push
movsb
add
pop
sahf
jg
pusha
test
out
out
push
fstl
out
sub
push
cmp
push
jbe
jbe
pop
mov
outsl
hlt
sbb
jno
or
and
sahf
add
or
out
cmc
loop
mov
push
pop
sub
mov
jo
mov
xor
stc
ds
xchg
xor
paddsw
and
mov
into
sbb
jg
sbbb
sti
xchg
inc
insb
bound
xor
mov
sub
sbb
aad
test
xchg
outsb
push
dec
adc
test
dec
movl
mov
cmp
ret
loope
jg
mov
add
cld
xchg
movsl
popa
rolb
xor
lret
lret
ds
xor
ret
test
bound
xchg
scas
inc
cltd
icebp
popf
test
xlat
leave
inc
jge
xchg
data16
jne
mov
in
push
sahf
das
xchg
pop
in
nop
jb
ja
xor
mov
dec
add
inc
in
roll
aam
dec
and
aam
int
xor
subb
adc
push
xchg
cmp
add
mov
je
xor
xchg
mov
shrl
jbe
adc
jbe
adc
jne
dec
adc
sub
ficomps
push
jp
xchg
dec
pop
ret
test
in
stc
nop
inc
dec
cmp
cltd
mov
mov
call
sahf
push
stos
fs
mov
sbb
push
push
popa
xchg
sahf
ret
testl
inc
fists
adc
movsl
sbb
push
inc
std
or
fdivrl
fsubr
test
xchg
lea
aaa
sti
inc
sub
mov
shlb
hlt
pop
in
lret
leave
dec
enter
and
or
cmpsb
mov
stos
hlt
imul
sti
push
movl
mov
sahf
xchg
fisttpll
mov
in
imul
cmp
fmulp
xor
mov
daa
sti
cmp
inc
lds
jp
jns
into
test
cmc
test
push
xor
mov
xlat
adc
push
sub
mov
pop
adcb
push
outsb
push
cmp
std
dec
lcall
fdivs
out
jmp
adc
mov
pop
call
les
cmp
mov
int
and
icebp
jecxz
cmp
test
and
mov
mov
stc
mov
pop
inc
out
mov
stc
cmp
dec
jp
jne
sub
ja
mov
icebp
test
xor
sarb
cmp
movl
in
out
mov
lea
xchg
in
xchg
in
stc
jno
mov
jg
sub
mov
scas
cld
mov
cmpb
mov
fisubl
clc
je
sbb
dec
and
mov
aas
push
dec
not
fisubl
lcall
loopne
icebp
push
and
inc
je
sub
dec
inc
push
and
sub
popa
pxor
cmc
aas
sbb
out
add
mov
xchg
mov
and
mov
lcall
and
shl
sub
jp
out
mov
jo
push
mov
andb
mov
cmc
push
sbb
inc
jmp
testb
push
push
roll
dec
fstp
aas
pop
int3
movsl
pop
sbb
jg
lret
loope
testl
insl
sub
cmpsl
movsl
mov
push
rorb
xor
icebp
sbb
lds
sub
adc
or
push
mov
in
jne
xchg
faddl
fs
cld
mov
pop
jmp
or
jo
inc
enter
rcrl
je
sub
popf
test
mov
mov
mov
inc
mov
movsl
sub
mov
pop
mov
sub
loop
ss
loope
mov
jge
lods
pop
scas
les
xchg
pop
out
enter
mov
sub
jmp
pusha
jb
push
add
mov
inc
xlat
rcl
push
jnp
movsb
ret
mov
mov
repnz
loop
push
inc
stc
jns
xor
in
iret
fdivrl
ds
or
mov
pop
movsb
stos
mov
mov
btc
jp
adc
pop
mov
push
mov
xor
shl
mov
cmpsb
dec
fs
inc
xchg
cmpsl
dec
loope
cltd
sbb
stos
push
or
pop
or
ficompl
pop
outsb
sub
push
jmp
inc
hlt
dec
and
push
jnp
in
jmp
cmp
push
xchg
out
dec
imul
pop
jge
dec
push
repz
or
xchg
push
cmp
cmp
sarl
mov
mov
sbb
scas
push
sub
xor
xchg
pushf
test
add
frstor
adc
sbb
xchg
imul
mov
loop
mov
neg
xchg
in
subl
ret
loopne
and
adc
inc
cs
into
mov
sub
pop
and
inc
or
pop
fcmovne
mov
fistpll
cmpsl
xorl
loop
mov
stos
xchg
ds
sub
int3
sbbl
mov
es
pop
sub
add
lock
sbb
ss
jns
pop
in
outsl
inc
ffree
jae
xchg
sbb
push
pop
fs
jns
inc
movsl
dec
repnz
xlat
scas
arpl
add
loopne
lret
cmp
popa
repz
pop
pmaxub
cmp
out
adc
push
out
or
mov
fwait
jmp
mov
hlt
cs
flds
sub
push
sub
mov
popf
fsubs
out
stos
rorb
repz
jnp
xchg
adc
push
subb
and
jle
icebp
pop
lock
cmp
mov
add
inc
jnp
fimull
or
call
clc
jge
into
inc
cmpsl
roll
mov
movsl
jns
out
cwtl
aaa
ja
and
lret
xlat
popa
je
mov
sub
sub
repz
mov
cld
mov
cmp
movsb
dec
les
shll
adc
cmp
dec
adc
pop
pop
loopne
movsb
outsl
insl
push
lods
xchg
and
loopne
push
push
push
sahf
arpl
and
sub
lock
mov
xchg
fwait
scas
xchg
or
pop
jmp
lahf
push
add
mov
jb
fistpll
adc
cmp
pusha
xchg
cwtl
rol
movb
sbb
add
xchg
orl
std
push
arpl
test
fnstenv
mov
cmp
insl
pop
stc
rorl
test
inc
sti
cmp
fsubrs
les
and
jo
cmpsl
into
jg
sahf
test
hlt
ret
jb
push
push
fstpl
jnp
stos
and
mov
js
and
mov
or
push
xchg
cmpsl
fmull
dec
sub
mov
pushf
cmp
and
xchg
insb
sbb
int
xchg
sub
mov
scas
add
js
mov
xchg
movsl
repnz
inc
dec
xor
adcl
ljmp
dec
push
xchg
jo
xchg
inc
dec
jp
iret
jge
cld
out
adc
push
fcomi
jle
jle
clc
sub
fs
xchg
pop
pop
jne
mov
call
or
jb
orl
lcall
aad
cmpsl
xor
bound
imul
or
jo
aam
xchg
fadds
ljmp
scas
pop
mov
call
cmp
gs
lret
add
clc
push
jae
je
dec
out
loop
add
jp
out
sbb
scas
push
cmp
adc
call
shll
add
inc
out
fwait
and
jae
xchg
mov
inc
daa
cmc
lret
inc
cmp
dec
std
push
dec
das
xorl
mov
mov
pop
lret
jb
inc
cmp
xchg
push
mov
insl
mov
sub
mov
gs
int
js
lock
inc
sbb
into
add
lcall
sahf
stos
inc
xor
or
jp
or
sarb
es
rep
out
addr16
out
ja
push
fisttpll
popa
in
push
mov
test
ret
and
ucomiss
inc
or
into
jl
mov
addl
sub
fmuls
ja
pop
mov
mov
imul
lcall
cmpsl
arpl
add
repz
fbstp
notb
cmp
es
in
mov
mov
inc
mov
xchg
mov
fmuls
jmp
xorb
dec
add
aam
pop
push
pcmpeqb
cmp
adc
leave
or
sub
lret
pop
adc
sbb
cmp
enter
add
xlat
imul
xchg
loope
jae
dec
and
mov
les
xchg
clc
or
mov
movsl
mov
and
sub
pop
dec
pushf
push
push
loopne
pop
dec
cmp
xor
in
or
ds
in
cmpsb
dec
xchg
push
xor
xchg
scas
inc
xchg
push
hlt
xor
imul
push
fiadds
gs
dec
ret
int
mov
leave
sbb
cltd
jecxz
mov
cli
out
sub
xor
popf
mov
dec
mov
or
or
jg
out
mov
je
cmp
ss
xor
mov
mov
pop
cmpsl
push
ja
dec
jge
adc
add
pop
sub
inc
jp
mov
lret
popa
in
mov
and
inc
pop
inc
testl
pop
push
dec
cmp
aad
repz
popa
jbe
jne
mov
push
test
inc
ja,pt
or
push
rcll
push
fnstcw
lret
mov
adc
mov
and
shrb
out
pop
testl
fcmovne
pop
adc
lret
mov
xchg
mov
test
mov
es
sbb
jmp
push
aad
sbbb
repnz
dec
int3
mov
frstor
pop
mov
in
push
cmc
ret
fistpl
testb
dec
xor
sub
jnp
ret
call
fsubrs
rolb
xchg
sub
cmp
jns
mov
mov
jns,pn
das
and
xchg
adc
push
push
mov
pop
loopne
mov
std
outsl
loopne
je
hlt
jmp
sbb
pop
hlt
and
add
jbe
mov
lret
mov
inc
sbb
lods
jle
add
in
jg
es
or
pop
jle
addl
mov
test
mov
orl
dec
xlat
dec
cmp
cmpsl
ljmp
pop
out
jae
fildl
sub
cmp
add
or
popa
iret
sbb
daa
pop
xchg
jle
outsb
mov
imul
ficompl
loopne
inc
in
dec
fninit
nop
scas
sub
dec
xchg
orb
adc
stc
xchg
add
test
pop
jge
jne
jbe
popa
test
insb
push
inc
sti
push
rcrb
xchg
fildll
test
adc
icebp
std
test
or
cmp
inc
xor
mov
cmpsb
pusha
push
ljmp
test
adc
mov
fidivs
jge
lret
loop
adc
cmp
frstor
sbbl
mov
clc
or
mov
leave
xor
inc
and
cmp
out
mov
cwtl
xchg
in
mov
add
in
pop
jle
test
sahf
repnz
cwtl
push
push
in
orb
cmp
lcall
mov
das
std
divb
pop
pushf
xor
dec
lds
cltd
inc
fcmovne
jg
movl
jne
pop
stos
je
insb
imul
mov
repz
loope
es
rcr
sub
jp
mov
pop
add
js
inc
dec
sub
dec
inc
fisubrl
data16
sahf
je
push
scas
push
lods
cwtl
cs
repz
and
sub
sbb
jne
lahf
adc
dec
repz
cmp
xchg
pushf
aas
xchg
sbb
push
xor
adc
jno
fimull
fisttpl
out
cli
fs
fbld
addr16
add
fwait
adc
cltd
mov
pusha
int
mov
lcall
pop
sbb
mov
or
les
int3
ret
pop
iret
scas
loopne
dec
mov
ret
lds
ret
sub
add
mov
sti
jns
xchg
dec
cmpsl
xchg
pop
mov
mov
push
adc
call
pushf
dec
es
aam
movsl
icebp
mov
cmp
adc
xchg
mov
ja
mov
cmp
and
test
jne
lods
loopne
mov
and
das
or
and
jbe
cwtl
sti
lret
pop
mov
add
shll
test
jle
shrl
shl
pop
inc
mov
dec
pop
outsl
lret
mov
fisubrs
cmp
ljmp
lods
cmpl
adc
mov
imul
and
adc
shl
jo
cmp
ret
mov
push
or
int3
gs
lock
lods
sub
popf
inc
je
ds
ficomps
movsb
iret
pop
cld
mov
adc
mov
call
push
cmc
lds
iret
sbbb
outsl
andb
test
test
imul
movsb
cld
cmp
sbb
sarl
repnz
or
push
repnz
sbb
pushf
push
xor
lods
mov
pop
adc
js
icebp
adc
aad
cld
xor
mov
push
fadd
jno
cli
adc
mov
pop
fcmovnb
mov
into
dec
xor
xchg
das
leave
mov
push
and
cmp
pop
mov
cld
add
pop
pop
adc
and
das
xor
lret
sbb
in
push
cmp
adc
pushf
lds
imul
pop
scas
in
xchg
ficoml
test
push
jle
nop
cmpsb
sub
xor
push
cmpsb
dec
and
pop
popf
in
fdivrs
adc
add
icebp
insl
add
arpl
js
daa
sub
sbb
rorl
testb
push
or
xor
std
adc
dec
or
std
into
scas
sbb
iret
jge
mov
xor
pop
shrb
in
mov
popf
mov
test
aas
inc
stc
int3
fstpl
mov
lcall
cmpl
mov
dec
popa
frstor
js
adc
sub
xchg
jecxz
cmp
notb
mov
xchg
sub
icebp
xchg
in
mov
mov
add
xchg
push
mov
cwtl
lret
je
outsl
or
pop
xor
push
hlt
fimuls
and
cwtl
mov
add
pop
ret
mov
adc
outsl
cmpsb
aam
push
lret
inc
jb
pop
dec
fldenv
mov
cs
jmp
imul
nop
mov
ss
mov
mov
mov
pop
jp
ljmp
push
xor
call
fsubs
xor
mov
inc
jb
and
bound
inc
dec
sbb
sbb
ljmp
stos
dec
mov
jbe
ret
pushf
mov
pop
xchg
into
pop
or
mov
fldenv
xor
xchg
fwait
jg
sub
adc
mov
mov
cltd
pop
popw
dec
decl
repnz
cmp
cmp
xor
mov
xor
lock
push
loop
fcomps
xor
icebp
fisttps
fildl
add
xchg
scas
lret
lret
popf
lahf
and
inc
lcall
lcall
sbb
and
pop
ret
add
jle
push
jbe
cmpsb
add
mov
cmpsb
xlat
sub
jb
sbb
mov
lahf
mov
je
lods
je
inc
fwait
inc
sbb
mov
subl
inc
xchg
orb
jbe
sub
hlt
mov
pop
jge
sbb
sbb
sahf
psllq
xor
xor
ljmp
sbb
dec
sbb
test
out
dec
ret
insl
int
adc
jp
pop
dec
jnp
cld
loope
or
jae
xchg
cmc
or
or
mov
mov
pop
mov
sbb
mov
outsl
lahf
and
fldenv
mov
lcall
test
adc
jae
xor
cwtl
adc
push
mov
fldt
stos
mov
jp
aad
xor
sbb
mov
lods
push
pop
test
xor
lret
fcomps
pop
cmpsb
aad
cs
pop
aad
inc
adc
push
or
push
hlt
rcl
inc
add
cmpsl
not
mov
pop
out
ds
jb
cmp
ficoml
dec
inc
out
jo
hlt
or
loope
insl
cmpsl
sbb
push
lods
lret
pop
ja
mov
icebp
jo
js
imul
in
int
mov
test
mov
jno
xorb
mov
add
sbb
sbb
les
fwait
xchg
dec
lods
testl
subl
out
xchg
dec
mov
out
nop
test
sub
sahf
out
pop
ja
addl
push
popf
cli
add
sahf
popf
lahf
push
popf
inc
push
sahf
mov
insb
flds
inc
jne
jno
mulb
jecxz
pop
fisubrl
int
add
pop
pop
loop
ficoms
dec
scas
cmp
adc
outsl
adc
dec
icebp
mov
mov
scas
negl
adcl
mov
inc
mov
orb
pop
imul
dec
jno
push
adc
mov
sbb
aaa
jnp
popa
imul
xchg
data16
stc
jns
outsb
mov
fucomi
pop
push
jo
xor
or
hlt
stos
mov
mov
cltd
dec
push
add
loope
imul
mov
lret
ficoms
sbb
std
add
test
pop
add
fildl
and
enter
enter
pop
data16
mov
and
jl
jnp
mov
lcall
aad
into
test
dec
orl
push
dec
pop
loop
scas
inc
shl
fdivs
jno
sub
movsb
into
dec
push
xchg
cmpsb
les
jg
outsl
xor
repnz
out
sbb
sub
out
dec
hlt
ret
shl
fcoms
neg
test
add
and
leave
ss
push
in
addr16
xchg
mov
roll
sbb
outsb
and
adc
ja
ljmp
jne
inc
or
dec
pop
pushf
arpl
pop
les
xchg
stc
pusha
mov
mov
shrb
push
mov
leave
adc
xlat
adc
push
xchg
mov
shrb
movsl
mov
cmc
fdivrl
or
mov
insl
outsl
fmul
xchg
and
dec
addr16
cmp
jo
xchg
sarl
push
repnz
adc
push
xchg
jge
out
test
jb
pushf
lret
xor
xchg
pop
or
sbb
lret
cmpsb
and
sbb
ficoms
cmp
enter
aad
mov
ljmp
xor
pop
add
outsl
xchg
clc
lods
dec
arpl
dec
pop
inc
jl
xchg
add
sbb
fxch
inc
inc
mov
imul
loopne
pusha
inc
lret
loopne
add
frstor
sub
mov
xchg
fmull
push
sub
and
lds
add
cmp
pop
jo
mov
sbb
bound
aad
movsb
pusha
mov
call
mov
push
cwtl
jo
add
bound
gs
out
std
adc
cs
mov
in
lods
mov
and
frstor
ljmp
jae
cmp
repz
pop
icebp
cwtl
mov
inc
popa
xchg
aad
or
dec
mov
loop
push
mov
mov
ret
rorb
xor
insl
jne
jno
daa
dec
fwait
mov
jb
jne
repnz
test
std
aad
and
sub
mov
push
mov
push
cmc
popf
mov
jp
jne
stos
test
add
outsl
sub
repnz
jb
cmc
data16
mov
int3
gs
xor
and
push
adc
fmull
popa
mov
mov
int
insb
mov
imul
dec
inc
dec
movsl
xchg
stc
test
sub
fs
add
pop
jae
ret
pop
pushf
insb
xor
jle
dec
push
sbb
or
cltd
test
and
xorl
int3
sub
or
pusha
mov
dec
pushf
repnz
loop
and
cwtl
dec
sbb
imul
xchg
mov
pop
nop
sbb
aaa
imul
cld
xlat
push
ds
mov
push
and
pop
ljmp
mov
arpl
pop
pop
pop
and
cmc
call
xchg
or
inc
nop
push
ds
ljmp
dec
and
push
cmp
out
adc
pop
dec
test
add
or
andl
imul
lahf
dec
dec
sbb
lods
push
in
decb
mov
inc
repnz
pop
push
mov
data16
int3
mov
idivl
sbbb
push
std
xor
add
and
pop
stos
pop
push
push
jnp
or
adc
jecxz
cmp
cmp
mov
lea
mov
loopne
inc
jns
in
xchg
push
jno
fiadds
ret
inc
add
and
inc
fistl
add
push
in
lock
leave
jnp
ret
sub
sbb
xor
push
addr16
gs
mov
out
push
testb
nop
lea
jmp
cld
xchg
rol
sub
in
ljmp
adc
sub
lcall
movb
jmp
mov
pop
test
cmpsb
sbb
inc
popf
bound
in
les
fnstenv
fldl
repz
dec
rcrb
in
ja
push
pop
rcr
or
adc
sub
mov
cmp
in
jbe
adcb
jge
mov
or
out
and
inc
or
pop
je
jno
mov
adc
push
idivb
ss
int3
mov
icebp
cs
cwtl
gs
or
iret
jecxz
xor
orl
das
sti
push
dec
sti
xor
sti
adc
adc
mov
mov
arpl
push
iret
cmp
inc
xchg
or
push
data16
fsubl
nop
fnop
lods
adc
lcall
aaa
scas
cs
add
pusha
scas
mov
imul
mov
fdiv
mov
in
lcall
outsl
rorl
push
mov
add
xor
mov
and
leave
mov
sahf
int3
enter
repz
out
stc
arpl
lcall
inc
fwait
dec
sarl
sub
mov
adc
cmp
xchg
ja
jb
mov
je
dec
push
xchg
jp
lcall
mov
aad
hlt
jmp
test
jle
cmp
and
jp
lcall
sbb
pop
mov
push
push
in
sysexit
cmp
mulb
or
aam
neg
mov
int3
lret
mov
inc
ljmp
mov
shll
or
and
mov
loop
aam
mov
cltd
jmp
clc
mov
out
dec
adc
sbb
sbb
cltd
mov
pop
shr
aaa
jnp
push
jl
scas
fmull
outsb
cmp
in
in
xor
scas
lcall
push
nop
fisubl
aam
pop
pop
sub
test
sub
in
lock
mov
shl
pop
test
and
mov
add
jmp
pop
fimuls
je
jmp
mov
sub
adc
push
jo
int
psubb
notb
xchg
into
jmp
ds
popf
rorb
aaa
mov
xor
mov
mov
hlt
jecxz
jmp
imul
repnz
aad
sbb
mov
mov
bound
movb
fmuls
loope
addr16
adc
or
std
int3
inc
rclb
cmp
or
stos
mov
lods
and
cmp
jg
ret
imul
inc
adc
aad
in
cmc
inc
jbe
mov
es
xchg
adc
cmpsb
and
sub
push
xor
cmp
bound
pop
jg
and
negl
data16
aas
mov
sub
out
mov
into
lods
in
mov
lods
xor
or
push
pushf
fdivrs
sti
mov
mov
jbe
addl
pusha
pop
sub
mov
repnz
shll
popf
imul
xor
inc
pop
jns
imul
mov
jno
mov
data16
frstor
add
pavgb
in
ficompl
xor
fidivl
sbb
pop
iret
mov
mov
mov
data16
icebp
adc
ds
jb
cltd
addr16
aas
jnp
in
and
lret
pushf
fcmovb
pop
xchg
sub
shlb
popf
or
fistl
pop
dec
ljmp
inc
adc
out
leave
jl
mov
test
or
icebp
dec
pop
int
scas
repnz
push
jmp
adc
ljmp
int3
int
pop
and
mov
subb
jmp
push
jnp
ret
mov
jp
sub
add
mov
je
pushf
scas
mov
mov
xchg
mov
pop
pusha
divl
lds
push
or
ss
sbbl
gs
cmp
jge
imul
cmpl
jne
cmpsb
leave
sbbb
std
jbe
les
fidivrl
loope
idivl
push
cmp
cmp
xor
xchg
push
or
lods
mulb
jmp
rcrb
add
adc
test
push
leave
pop
in
xor
cs
push
sub
xchg
push
loopne
or
jbe
jmp
lods
movsb
aaa
cmp
add
inc
pusha
inc
adcb
mov
or
sbb
mov
repz
stos
in
test
xor
mov
into
test
in
or
int3
mov
je
xor
fsubs
outsb
shl
int
ficompl
jle
sbb
repz
test
cmp
leave
repz
jb
push
out
dec
lahf
xor
mov
pushl
xor
lret
clc
xchg
jnp
push
lds
cmp
mov
inc
out
sbbb
inc
xor
fimull
xor
sub
mov
aaa
mov
push
cmpsb
test
or
in
jno
xchg
xchg
or
push
cs
aam
and
push
nop
mov
sbb
mov
and
sahf
test
test
fistpl
push
cltd
sahf
loopw
loope
mov
cli
xor
sub
pusha
data16
xor
pop
push
sub
sahf
sbb
xor
cld
xor
mov
fiadds
mov
mov
jge
add
and
inc
mov
movb
ret
lea
arpl
pusha
push
out
scas
inc
xchg
and
addr16
and
lock
mov
test
sub
stos
cmp
mov
pusha
mov
pop
mov
lods
add
dec
sbb
in
ss
es
or
in
mov
push
xor
int
out
fwait
xchg
sbb
ss
cmp
clc
jo
outsb
mov
outsb
nop
gs
in
jnp
or
ljmp
cmc
les
fimull
jbe
mov
inc
dec
ret
test
scas
lods
pop
mov
mov
lahf
adc
out
out
xchg
mov
jp
push
adc
test
clc
fstl
mov
sub
cmpsb
adc
mov
lcall
xchg
push
mov
inc
repnz
fnsave
mov
popa
call
mov
adc
je
sbb
mov
jl
mov
pop
test
arpl
lret
jno
fmuls
xor
icebp
cmp
addr16
fcoms
add
inc
sbb
cmp
add
adc
jp
lcall
test
inc
rolb
mov
ficomps
clc
pop
ss
stos
mov
mov
rorb
push
and
pop
stc
dec
or
jmp
iret
jecxz
pop
sahf
mov
shrl
sti
dec
or
xchg
xchg
std
fcomps
addr16
int
aad
lahf
outsl
int3
pusha
ss
push
daa
add
gs
lods
ljmp
lcall
cmovp
jbe
adcb
lcall
in
jge
aad
cmp
into
iret
jge
jge
adc
das
xchg
into
loopne
cwtl
addl
inc
lahf
mov
push
loop
bound
push
mov
test
add
sub
sbb
inc
mov
das
push
ret
mov
mov
mov
xor
lock
mov
and
lock
xlat
xchg
inc
pop
push
xchg
sbb
mov
imul
jle
xchg
js
xchg
cmp
adc
mov
push
inc
repnz
fdivs
mov
inc
aas
fldt
or
dec
mov
jno
mov
xabort
push
fstpl
scas
push
je
vmread
es
add
stc
dec
fsubs
stos
arpl
addb
inc
xor
or
sahf
xchg
add
sub
cmpsl
subb
daa
or
mov
mov
stos
mov
sub
addr16
test
jns
pop
or
pop
xchg
lea
add
xor
icebp
jns
jle
cmp
sub
inc
cli
fsubrs
mov
insl
pusha
in
pop
out
cmp
inc
out
jmp
dec
and
ss
cld
push
xchg
aas
jmpw
sbb
sbb
and
pop
xchg
iret
leavew
push
test
mov
sbb
jb
icebp
inc
cmp
xchg
adc
inc
pop
cltd
cmp
lock
cmpps
mov
inc
and
pop
out
push
mov
or
jl
into
and
jno
addr16
fisubrs
aam
fnstcw
lret
cmp
fs
add
data16
and
sub
lods
or
stmxcsr
adc
jp
mov
sbb
sbb
bound
dec
pop
or
sbb
jb
sub
nop
stos
push
inc
pop
jp
shrl
push
sub
xchg
add
clc
cs
incb
cmp
inc
inc
sahf
sti
loopne
and
xchg
cmp
mov
cltd
mov
in
dec
xor
push
fmuls
cli
scas
movsl
mov
dec
je
mov
jb
mov
mov
fmull
cld
cmp
cltd
leave
fdivr
ret
or
je
inc
mov
ds
fbstp
in
lods
add
pop
imul
lods
insl
sub
mov
inc
int3
pop
fsubl
test
mov
addr16
cltd
stos
dec
cld
jp
ja
gs
mull
lods
mov
addl
sbb
xchg
in
sti
jecxz,pn
icebp
inc
shl
pop
adc
sub
or
dec
test
mov
cmp
mov
lcall
inc
push
mov
out
push
xchg
out
mov
add
aad
mov
scas
mov
lret
andb
orl
in
add
inc
arpl
and
rclb
sub
call
adc
fiadds
jne
push
mov
and
int3
outsl
int3
dec
mov
out
std
push
mov
jnp
xor
in
jg
sar
pushf
inc
cwtl
push
and
or
in
sub
mov
arpl
mov
mov
je
movsl
es
lahf
mov
xchg
js
and
lret
mov
inc
inc
xor
mov
cmp
xchg
xchg
add
sub
jp
sbb
inc
jnp
cmp
mov
pop
add
and
add
in
ljmp
aaa
insb
aaa
sub
mov
xchg
or
dec
cmp
lret
sbb
lcall
and
mov
rorl
dec
movsb
pop
push
pop
pop
mov
outsl
rol
adc
adc
outsl
and
inc
sbb
sbb
cld
or
lret
icebp
in
cld
stc
loope
ss
pop
in
inc
cs
aam
ja
and
out
in
cld
xchg
cmp
pop
stc
xchg
jo
add
cmp
push
dec
pop
int
pop
pop
or
dec
cmp
popl
shll
mov
jae
xor
into
leave
dec
sub
dec
jne
push
mov
sarl
push
pop
push
insb
cmp
ja
and
push
js
shlb
or
push
aaa
into
push
jmp
loop
popf
adc
pop
sbb
push
negl
xchg
inc
mov
scas
lods
fiadds
and
jae
mov
fiaddl
jle
negl
mov
mov
enter
loop
mov
push
xchg
lret
cmp
push
lret
movl
jecxz
sahf
cli
test
iret
xor
jle
lahf
sbb
loop
movsb
sti
insw
push
stos
mov
sbb
jp
xor
fucomip
sahf
pop
xchg
xchg
cs
add
mov
xor
and
jno
cmc
ret
and
mov
mov
jp
push
jns
add
dec
push
cld
cld
jmp
test
in
dec
je
cld
insl
adc
adc
movsb
fs
or
addb
loope
push
inc
inc
mov
or
gs
stos
scas
aam
ja
subb
jmp
lea
lods
jns
hlt
call
add
scas
sub
pop
test
inc
inc
sahf
push
or
dec
movsl
cmp
sub
jp
pop
test
aaa
jg
es
repz
xor
cmp
jbe
and
enter
adc
add
repz
jmp
iret
sti
ret
andb
fsubrl
je
sub
sahf
xchg
push
adc
mov
scas
push
xchg
inc
pop
arpl
outsl
cmp
push
xor
in
or
pop
push
insb
inc
out
notl
dec
add
stos
cmp
mov
push
jno
psubw
movsl
mov
inc
repnz
dec
out
cmpsb
mov
leave
xchg
insl
mov
mov
push
dec
nopl
iret
loopne
pop
cs
std
or
fstps
mov
dec
xchg
sbb
sahf
mov
ret
js
jne
sub
push
sahf
pop
xchg
pop
xchg
cli
fwait
aad
sbb
jo
in
inc
lea
and
andb
mov
xchg
cmp
dec
out
xchg
jp
sub
ja
xor
xor
dec
mov
sub
fstp
inc
jp
xchg
pop
push
xchg
scas
mov
call
add
push
into
pop
loopne
jae
xor
and
int3
jmp
ljmp
adc
mov
lods
and
es
adc
rolb
notl
aam
cwtl
mov
mov
xlat
mov
pop
mov
out
mov
int
add
popf
insl
jecxz
mov
test
stos
enter
int3
inc
sbb
mov
and
push
jp
gs
mov
cmp
sub
stos
dec
outsb
mov
movsb
mov
rcr
fs
les
lods
lds
sub
in
and
jmp
inc
jnp
iret
mov
test
mov
jle
or
or
xor
dec
test
out
cwtl
fwait
adc
inc
in
in
lea
into
loop
mov
add
stc
jl
int3
and
andb
xchg
bound
imul
jl
mov
stos
jno
and
sti
mov
inc
mov
mov
push
stos
call
out
xor
jnp
push
adc
inc
mov
adc
pop
lret
add
add
lods
shll
subb
lea
sub
mov
inc
repz
xchg
push
int3
aad
movsb
loope
mov
cwtl
jp
jecxz
pop
data16
incl
mov
loop
pop
roll
addl
ss
ret
addr16
out
mul
lods
es
outsl
inc
aad
test
cwtl
roll
imull
xor
cmpsl
and
cmp
lret
xchg
or
lods
xchg
cmc
mov
aad
jb
outsl
clc
mov
leave
lret
test
decl
mov
pop
jo
add
gs
dec
or
outsb
ljmp
mov
mov
add
push
xor
xchg
cmpsl
push
aas
cmp
sub
shl
outsl
popa
inc
in
jbe
enter
movsl
rorb
test
cmp
adc
push
pop
aam
aas
push
shl
rolb
sub
jg
insl
stc
dec
fsts
xchg
and
adcb
push
dec
notl
rcl
ret
push
push
imul
je
add
xchg
jne
adc
clc
mov
mov
adc
lahf
inc
sbb
pop
adc
jb
mov
adc
das
mov
jmp
mov
lcall
dec
push
bswap
jne
aam
xchg
mov
pop
scas
mov
xor
cmc
roll
cltd
cmc
ret
cmc
mov
cs
sub
stos
rcll
fdivrs
inc
push
add
add
fstpt
mov
xchg
test
aaa
jo
das
lds
xchg
pop
sub
lret
movsb
pop
outsb
loope
mov
jo
pop
aaa
daa
outsb
roll
in
inc
imul
xor
sbb
xorb
sub
push
daa
xor
cmpb
jge
jo
stos
testb
in
ss
dec
and
sbb
movsl
js
xor
dec
xor
ja
push
mov
mov
insl
add
movsl
int3
pop
sbb
lret
not
pop
jbe
add
mov
test
push
cwtl
adc
or
test
inc
clc
push
dec
sarl
lea
data16
xchg
cs
cmpsl
sub
inc
ljmp
inc
push
xchg
shrl
je
es
fldl
jecxz
mov
sbb
xor
in
jb
push
pop
mov
mov
into
inc
push
movsl
fldenv
pushf
outsb
inc
loop
rol
push
fcmovnb
mov
xlat
scas
jge
shufps
lret
in
aas
mov
mov
stos
rcll
add
fstl
ret
cmp
xor
rcll
xchg
lods
rolb
push
jle
push
mov
rorl
ret
jecxz
ss
mov
outsb
pushf
lret
lahf
out
das
jge
jmp
insl
insb
aaa
das
dec
jns
sti
fcmovnbe
lods
ficoms
aaa
mov
std
pop
sbb
test
test
scas
cmp
xor
icebp
adc
push
lahf
adc
popa
xor
jle
das
adc
inc
sbb
push
mov
dec
pop
fidivs
pop
rolb
pop
out
fidivl
filds
lock
mov
mov
orb
push
pop
adc
aaa
stc
jmp
pop
movsl
nop
xor
and
jb
mov
and
inc
and
in
and
mov
or
add
mov
jle
inc
in
sub
sbb
mov
addr16
mov
push
subb
int
daa
and
push
fucomip
cmp
push
out
dec
mov
test
cmovge
enter
push
mov
repnz
mov
lret
sub
out
jns
xchg
sub
es
insl
clc
add
inc
int
insb
fdivl
jle
sti
jecxz
pop
jl
mov
push
add
lea
sarl
fidivs
sub
aaa
fadds
iret
mov
inc
or
repnz
xchg
sti
or
sbb
pop
insl
pop
fldcw
cmp
inc
stos
mov
push
mov
in
xor
add
mov
cmpl
mov
sub
jecxz
in
sbb
adc
aaa
movsl
mov
lds
xchg
int
into
cltd
aas
inc
push
or
sub
stos
stos
mov
mov
jbe
insl
sti
pushl
aaa
js
inc
mov
into
sahf
pop
dec
mov
push
cmp
mov
mov
mov
js
mov
fistl
push
fs
mov
test
push
ja
pop
sub
mov
adc
lock
sub
loopne
int3
or
stos
lea
inc
xor
jo
dec
xor
xchg
aam
push
test
add
lods
jne
ljmp
in
mov
or
xchg
sbb
add
orl
inc
ds
mov
mov
xchg
mov
sbb
ja
and
icebp
sub
daa
sbb
mov
inc
jns
xchg
and
pop
insb
es
js
mov
jbe
adcb
xor
cmp
or
aaa
fdivr
loopne
call
aaa
out
dec
cmp
insb
jb
mulb
pop
jle
or
stc
call
mov
or
fdivrl
xor
sbb
push
adc
mov
aam
add
ljmp
cmc
andb
arpl
popf
adc
pop
xorb
loope
jge
loop
inc
jmp
jbe
addb
stos
jb
movsb
mov
fxch
sub
sbb
xchg
mov
xlat
cld
pop
cmpsl
movsl
mov
push
sarb
push
fcmovu
cwtl
and
add
mov
cmp
sub
lret
fwait
push
adc
or
lock
test
or
dec
mov
mov
jo
fmuls
test
ja
mov
sbb
pop
sub
ja
mov
jo
adc
and
dec
mov
movsl
and
mov
jl
xchg
fldenv
xchg
jbe
pop
stc
test
inc
adc
outsl
rorb
in
dec
movsb
xchg
test
mov
in
jg
pop
in
pop
jne
lds
dec
push
jns
xchg
lahf
push
out
aam
xor
andb
mov
lahf
fsubs
mov
nop
iret
scas
jnp
mov
sahf
jno
jle
push
movsl
stos
push
pop
mov
xchg
jecxz
mov
stc
lea
cmpl
add
ret
stos
adc
scas
inc
or
mov
mov
push
mov
stc
mov
js
xchg
cmp
xchg
insl
fcompl
jl
cltd
sub
xchg
mov
pop
cmp
out
mov
rcrb
xchg
push
cmp
mov
and
sti
and
dec
and
adc
sbb
cmp
fisubrs
and
test
xchg
leave
mov
in
outsb
cs
bound
popa
or
adcl
add
je
stc
or
mov
insb
fnstenv
adc
test
and
sub
daa
inc
push
sub
mov
xlat
mov
addr16
push
daa
and
or
les
rol
es
cmp
sahf
inc
in
popa
ret
mov
cmp
popf
push
sub
pushf
inc
das
dec
push
repnz
sub
pop
sbb
xchg
push
add
enter
dec
sti
icebp
fwait
je
mov
ret
adc
in
je
lea
aas
jmp
lcall
xchg
cmc
inc
push
and
dec
fisubrl
notb
lock
cld
add
movsl
daa
adc
sbb
mov
xorb
mov
push
hlt
sarb
test
repz
divl
or
testb
js
cmp
gs
push
dec
sub
testb
insl
ja
adc
bound
pop
inc
jne
xchg
inc
pushf
popa
mov
add
push
mov
push
ljmp
xchg
cmc
inc
faddl
xchg
in
enter
lock
mov
cmc
cltd
adc
or
dec
fbld
and
fsubs
dec
dec
mov
fistps
push
jae
daa
mov
stos
mov
pop
aaa
jbe
cmp
scas
sub
movsl
mov
jnp
out
add
sub
mov
cltd
add
jno
sub
add
ljmp
repz
xor
jo
std
test
sub
dec
xchg
mov
icebp
or
imul
cltd
jbe
push
stos
int
xchg
inc
inc
pop
out
stos
lods
mov
outsl
scas
cmp
sbb
cld
mov
mov
add
mov
lcall
mov
cmp
aad
scas
ljmp
pop
adc
shrb
or
dec
inc
jnp
adc
sbb
mov
add
mov
pop
xchg
in
jmp
mov
xchg
out
mov
imul
pop
jg
lea
daa
std
lods
hlt
or
add
push
jg
vcvtdq2pd
das
js
dec
loope
shrb
cmc
push
push
mov
loop
push
jno
cs
lahf
xchg
xor
ljmp
adc
xchg
rcrb
test
xor
sub
out
mov
push
and
push
shl
arpl
xor
mov
out
push
in
adc
jmp
aad
movsl
sbb
xchg
xor
clc
cmp
fildll
cmp
push
inc
jo
addr16
adc
out
and
cmc
loopne
sbb
stos
cmpsl
decl
mov
mov
push
outsl
mov
sahf
pop
in
xlat
pop
das
pusha
dec
stos
adc
adcb
xlat
pop
jb
leave
in
mov
test
xor
loope
in
stc
mov
jae
pusha
es
sbb
in
jle
inc
in
loope
rcrl
jo
dec
adc
mov
test
loopne
mov
out
popf
cmp
cmp
enter
cmp
outsl
into
or
test
ja
lcall
jmp
insl
clts
das
lock
or
push
fcmovu
push
sbb
cmpsb
iret
loop
sub
sbb
or
imul
and
aaa
test
cmc
pop
xchg
enter
inc
dec
sub
rcrb
out
testb
mov
scas
xchg
aad
rcrl
into
fsubrl
ljmp
loopne
pop
mov
movsb
rcrb
andb
jg
aaa
dec
aam
sarb
sbb
or
jmp
mov
and
inc
adc
mov
sahf
add
es
mov
cmpsb
or
cwtl
pop
retw
push
cmp
pop
mov
outsl
inc
push
or
cld
dec
cli
mov
jbe
mov
push
cltd
movsl
jo
ret
push
out
mov
ss
lcall
mov
aad
call
inc
cwtl
push
jo
and
mov
scas
mov
adc
jmp
lods
mov
loope
mov
ret
cmp
fildll
fisttps
inc
iret
insl
pusha
mov
xchg
jmp
sti
mov
add
loope
jle
mov
mov
aam
es
sub
mov
cwtl
sub
xor
arpl
fbld
inc
ret
jecxz
ja
push
popf
mov
pop
shlb
clc
mov
test
lods
or
add
enter
cmpsl
out
lods
mov
decl
jno
cli
cmp
cld
lods
out
jge
lock
sbb
pop
es
mov
xchg
adc
repz
adc
or
mov
arpl
into
and
gs
cmp
add
sub
push
out
pop
mov
scas
test
test
inc
dec
sbb
add
pop
test
sbb
push
dec
inc
call
mov
dec
popl
fiaddl
shll
mov
jo
in
roll
repz
pushf
sbb
pop
sbb
mov
je
ss
inc
leave
jecxz
fucomp
jmp
fcomps
jecxz
add
mov
sbb
test
pop
ds
stos
out
jg
jg
test
mov
mov
scas
out
mov
fdiv
cmpsb
jbe
es
push
mov
mov
ret
cltd
dec
in
xor
inc
or
mov
ja
and
cmp
lcall
stos
scas
pusha
sub
pop
or
stos
sti
jge
pop
mov
pop
dec
cmpsl
inc
pop
rcll
push
add
adc
addr16
in
leave
scas
mov
pop
add
push
aaa
mov
jns
mov
sbb
std
jmp
and
jecxz
or
push
xor
adcb
xchg
in
mov
das
inc
lcall
xchg
mov
or
jne
xlat
mov
xchg
mov
jg
push
test
mov
fsubr
ficompl
jno
clc
daa
pop
xor
cmpsl
pop
xchg
sub
adc
adc
loop
mov
jp
packsswb
sbbb
mov
rclb
in
jo
inc
adc
cmp
push
push
insl
dec
mov
push
js
stc
add
filds
call
test
movsb
cltd
jne
mov
ja
in
fsubl
call
mov
repnz
inc
test
sbb
sbb
push
aaa
cld
sbb
std
or
leave
mov
jb
popf
pop
ficomps
ret
fistpll
cmc
dec
push
pop
and
xor
mov
mov
test
cmpsb
push
inc
in
lods
movsl
repnz
scas
cmp
sbb
sbb
cmp
pushf
lea
in
xor
cmp
inc
lock
pop
sbb
mov
xchg
lea
into
push
int
testl
xchg
lret
cwtl
push
jbe
adc
mov
inc
int
mov
nop
int
aam
insb
out
mul
jg
dec
icebp
push
cld
and
mov
add
add
inc
aad
push
loop
cmp
inc
mov
dec
jno
pop
adc
call
or
push
inc
add
sbb
bound
add
pop
aaa
sub
inc
jecxz
outsl
inc
ljmp
dec
aad
sarb
xchg
outsb
je
in
jo
mov
xchg
pushl
dec
sub
sbb
dec
in
mov
xchg
aas
sbb
stc
ret
cltd
gs
push
sub
loope
lret
and
rorb
jns
fwait
aam
dec
aad
cmp
adc
pop
int
push
sub
sbb
push
mov
cmpsb
popf
mov
sbb
pop
jle
je
or
fwait
xor
jbe
mov
pop
cmp
pop
and
mov
sbb
xchg
loopne
fnstenv
add
in
repnz
imul
lods
mov
fimull
test
sub
or
jno
pop
int
sub
lock
cs
test
mov
adcb
adc
lods
arpl
sub
loop
and
sbb
xor
fwait
jl
cltd
push
pushf
dec
dec
cmpsl
push
push
test
cmp
subb
pusha
leave
cmp
leave
sbb
stos
sti
mov
dec
loop
cmp
add
dec
push
outsl
mov
dec
mov
imul
cmp
mov
or
addr16
jg
in
dec
aas
std
mov
push
mov
cltd
sbb
loope
xor
lahf
jg
fiadds
fwait
jb
data16
dec
sub
xchg
mov
cs
ja
sbb
aam
inc
jp
stos
jmp
push
dec
pusha
mov
pop
cmpsb
call
ret
es
mov
pop
fdivl
lock
inc
sub
stos
mov
xbegin
pushf
test
or
aaa
pushf
sbb
jb
test
pop
and
loopne
mov
inc
mov
cmp
shrl
xchg
mov
aaa
and
negb
dec
mov
sbb
sarl
in
scas
cwtl
imul
cmovns
dec
sub
add
movsl
insl
fwait
aad
xor
jbe
adc
fdivrl
cs
arpl
mov
cmp
popf
pop
sub
pop
das
loopne
or
mov
inc
in
fs
stos
jle
sti
inc
push
ljmp
xor
add
mov
mov
and
bound
xchg
mov
fsubl
fadds
push
cmpsb
mov
push
sbb
dec
mov
pusha
cli
test
push
jne
decl
ret
push
cmp
jg
rclb
push
aam
or
jbe
inc
icebp
in
inc
mov
add
sbb
mov
es
xchg
add
dec
xchg
addr16
dec
push
lcall
outsb
xor
movsl
mov
xor
mov
jecxz
imul
jmp
pusha
mov
dec
push
popa
test
lock
sarl
dec
pop
repz
out
mov
inc
mov
jo
ret
xor
jb
mulb
pop
roll
lret
mov
movsb
pop
leave
add
or
xchg
jae
or
xor
push
push
std
jne
pushf
adc
pop
cmpsl
cmc
push
jp
push
xor
gs
xor
pop
mov
xchg
in
xlat
pushf
adc
inc
sub
mov
imul
dec
push
mov
add
jle
aas
into
test
clc
mov
adc
out
mov
imul
sar
les
inc
sub
add
sub
mov
add
add
icebp
fldz
inc
mov
or
dec
and
mov
xor
adc
and
dec
shlb
idivb
mov
mov
mov
sti
lahf
std
imul
cmp
bnd
sbb
stos
jl
xor
and
jg
sbb
pop
loop
stos
mov
icebp
int3
sbb
push
pop
jo
jnp
sbb
int
mov
xor
int3
cmpsl
mov
mov
push
sbb
xchg
and
daa
inc
and
jno
cmc
imul
push
stc
lock
cmp
adcb
xor
sub
mov
adc
sbb
pusha
xchg
or
psubsb
xchg
and
lahf
testl
xor
ror
outsl
mull
dec
lret
mov
clc
cmp
cmp
shrb
addr16
fnsave
cld
testb
stos
std
dec
bound
mov
pop
mov
jns
leave
outsl
mov
aam
jle
xor
xchg
out
inc
jbe
pop
jmp
divl
push
lret
sti
cmp
push
sahf
dec
mov
out
leave
sbb
jle
je
fnstenv
lock
mov
loop
scas
ljmp
jo
shrl
adc
mov
pop
inc
nop
pusha
xchg
jl
outsb
xor
clc
cli
stos
scas
andb
sub
jl
mov
mov
mov
add
xchg
clc
dec
cmp
jmp
shll
push
insb
jno
nop
lahf
xchg
lea
or
pop
mov
lods
dec
std
rcrb
xor
addr16
cld
clc
xor
cmp
test
jnp
mov
loope
fldt
jns
inc
sub
cs
mov
jo
cmp
push
jge
outsl
adc
cltd
arpl
mov
jo
jle
mov
pop
insb
das
mov
jge
lea
cmpsb
or
lcall
or
aas
push
fistpl
dec
pop
cs
cmp
xchg
test
push
icebp
lock
imul
addb
andl
push
imul
loop
xor
lcall
daa
xor
iret
xchg
in
adc
shrb
into
adc
sub
dec
out
add
int
scas
ret
les
imull
inc
test
mov
or
rorl
test
mov
les
jns
pop
bound
dec
scas
and
sbb
out
cli
pop
leave
ljmp
cmp
outsl
test
push
in
mov
jnp
or
add
loopew
data16
cmc
inc
aad
or
mov
sahf
sub
out
lcall
pop
push
cmpsb
ret
jg
pop
dec
mov
ret
loope
add
movsb
and
jmp
xchg
call
into
jo
push
pop
push
adc
sahf
xchg
jmp
pusha
mov
sub
lcall
loope
cmc
jbe
and
popf
sbb
sub
xlat
mov
sbb
in
aam
fcomps
jecxz
pop
into
push
cmp
mov
dec
ret
mov
cld
out
dec
ret
sbb
rolb
add
jge
xchg
not
in
mov
xor
mov
rcrb
sti
inc
je
adcl
cmc
mov
mov
or
les
mov
sbb
clc
sub
daa
dec
cli
add
cmpsl
mov
xchg
hlt
fs
pushf
lret
and
sbb
xchg
jmp
adc
push
and
mov
sbbb
mov
xor
mov
lret
leave
orl
aam
imul
sbb
xchg
mov
aas
dec
sub
gs
loope
push
mov
mov
jg
jne
imul
fdiv
sbb
imul
fisubrs
xchg
mov
loop
in
sbb
jnp
aaa
sbb
lods
push
add
out
inc
out
sbb
xchg
jns
cld
push
or
cmpsb
xor
add
xor
cld
lret
lds
or
lock
mov
movl
push
pop
and
test
jns
xchg
jmp
pop
jb
outsl
in
shlb
jns
cmp
xchg
jge
push
push
shr
xchg
cmc
ss
xchg
fistl
mov
cli
xchg
gs
push
imulb
dec
mov
sub
adc
imul
fstl
inc
scas
add
jg
fwait
xchg
imul
cmp
push
and
adc
push
aam
rorl
and
dec
popf
lret
in
pushf
cmp
les
add
faddp
mov
ss
sub
outsl
hlt
dec
or
cmp
mov
and
sbb
dec
andb
inc
jno
fiaddl
or
sub
jmp
adc
push
enter
ss
lock
mov
test
lods
mov
dec
xchg
xlat
xchg
ret
adc
shrb
dec
movsl
sub
cmp
xor
push
mov
push
pop
adcb
clc
sub
jo
mov
psllw
sbb
adc
mov
insl
xor
inc
out
dec
imul
cmp
stc
ret
in
mov
faddl
call
xchg
repnz
int3
bound
test
addl
add
jmp
outsl
lret
imulb
das
stos
mov
int
jo
dec
push
call
insb
xchg
insl
sbb
out
imul
subl
imul
jecxz
fisttpl
xor
cmp
faddp
ret
scas
mov
push
jg
lods
cmp
out
sahf
fcoml
adc
popa
mov
dec
daa
and
mov
mov
inc
lea
fmuls
mov
cmpsl
in
mov
or
rolb
aas
jmp
lds
mov
sbb
and
cwtl
jg
shll
loopne
in
dec
xchg
jo
adcb
xchg
call
leave
add
pop
cmp
dec
mov
mov
and
jae
scas
mov
aam
sbb
dec
mov
into
cmpsl
rcll
pushf
daa
xchg
and
xor
js
dec
and
xchg
int3
mov
movsl
jl
lods
xchg
xchg
outsb
cli
fdiv
jmp
popf
xor
mov
add
pop
ret
fistpl
das
mov
mov
fnsave
out
xor
in
and
ja
cmpsl
jns,pt
jo
adc
and
fisttpl
mov
hlt
pusha
jl
pusha
and
fsub
popl
xlat
sti
sub
test
mov
jle
shlb
fcomi
sub
sarl
into
das
dec
lods
pop
sub
or
cmp
sahf
stos
cltd
icebp
pop
addl
sbb
stos
popa
mov
cmpsl
ret
je
hlt
xor
xchg
ss
cmp
cltd
cmp
bound
mov
popf
jge
sahf
loopne
sub
and
xchg
pop
inc
mov
leave
loope
test
mov
jae
lds
je
cmp
ja
add
fisttpl
je
xor
push
ja
sbb
aaa
xchg
push
or
mov
es
incl
mov
test
ds
mov
inc
mov
and
notl
loope
fistpl
test
test
dec
xchg
icebp
test
insb
xchg
mov
testl
sbb
inc
xchg
mov
mov
enter
jbe
cwtl
ret
xlat
sbb
pop
cmc
loopne
pop
lods
aas
lods
ja
sbb
push
enter
loope
lcall
insb
mov
pop
push
jle
sbb
aad
mov
sbb
mulb
cmpsl
mov
push
mov
pop
mov
dec
pop
mov
adc
enter
aad
sbb
bound
add
aaa
movsl
push
pusha
in
aad
sti
sbb
sub
fs
mov
cmpb
cmpsb
inc
movsb
jmp
push
pop
mov
repz
fsubrl
cmpsb
pop
mov
nop
xor
jbe
mov
adc
jg
loopne
dec
xlat
hlt
das
and
lods
xor
lcall
es
sub
push
sbbl
fstps
sub
hlt
cld
sub
sub
ret
sbb
pop
rep
fbld
mov
mov
inc
lahf
sbb
lcall
shll
fildll
inc
adc
sub
lds
pop
pop
jne
aaa
cmpsl
inc
or
inc
subb
mov
imul
ds
pop
or
loope
or
fdivr
add
adc
int
pop
dec
xor
lods
xchg
out
aas
mov
shrb
imul
xchg
lcall
inc
adc
in
je
mov
test
cmpsl
cli
enter
add
out
enter
shr
jl
sbb
adc
cmp
jp
pop
xchg
xor
test
fwait
push
xor
iret
xorl
mov
mov
sbb
cmp
pushl
jmp
sbb
adc
lcall
imul
pop
aas
xchg
enter
mov
pop
pushf
int3
loop
in
ja
paddw
push
xor
fdiv
movl
xlat
fisttps
push
push
xchg
add
sbb
adc
out
insl
jne
sbb
in
in
jl
cmp
or
fwait
clc
fcomps
sbb
das
and
popf
pinsrw
fs
jg
ret
movb
fmull
cld
stos
xlat
stos
xchg
rorl
sub
xchg
orl
mov
mov
test
lret
movsl
test
cmp
mov
in
mov
aad
jns
xor
enter
sti
add
loopne
inc
mov
hlt
test
into
out
jle
inc
and
aas
stos
and
inc
sti
or
mov
jl
cmp
sbb
pushf
xchg
andl
xchg
insl
mov
nop
jo
dec
add
push
into
adc
add
inc
add
cwtl
adc
push
add
pop
inc
xor
jne
push
enter
xchg
hlt
pop
je
pop
xchg
adc
mov
jmp
dec
cmpsl
rorl
sub
push
jne
add
push
fdivrs
dec
xchg
or
inc
adc
ss
movsb
cmp
jle
insb
push
inc
nop
jnp
fstpl
push
divl
mov
adc
lcall
test
fld
packssdw
fwait
mov
dec
test
xchg
fs
xchg
push
sbb
jns
inc
aas
dec
inc
push
arpl
shll
roll
stc
mov
mov
pop
cmp
test
and
addr16
jge
xchg
ret
movb
mov
fldt
jmp
adcl
xchg
das
push
incb
shrl
jecxz
or
ljmp
fsubrl
out
out
mov
aaa
and
pusha
shlb
fs
xlat
std
aad
cmp
out
pop
mov
js
jle
push
repnz
test
insl
xor
pop
je
jp
nop
shrb
adc
inc
mov
sbb
popf
out
add
and
cmpsl
das
xorl
repz
adc
cmpsl
adc
and
mov
das
dec
sti
fildl
or
cmpsb
fs
jle
fs
mov
popf
bound
decb
les
icebp
ret
xor
popf
jge
sbb
aas
idivb
in
pop
popa
pusha
or
dec
sbb
outsl
int3
sub
pusha
fcmove
popf
je
mov
fisubl
repz
in
inc
push
push
ja
mov
mov
sbb
or
mov
xchg
and
xchg
xor
jmp
subb
repnz
sti
jnp
insb
mov
aas
lret
mov
xchg
lcall
sahf
jle
push
or
sub
shll
outsb
jo
fneni(8087
adc
shrb
psllw
fisubrs
cmpsb
or
mov
sbb
pop
cmp
push
in
adc
aas
mov
andb
lret
sub
rol
fsubs
stos
mov
inc
call
dec
shl
and
dec
fistpll
or
bound
dec
ret
mov
shl
xchg
cmc
mov
xchg
push
xor
jl
pmaxub
jnp
das
test
mov
mov
ljmp
outsl
mov
out
mov
enter
pusha
scas
xor
pop
fcom
and
sbb
mov
dec
testb
call
imul
dec
fwait
lret
jp
xchg
jns
sbb
data16
cmpsl
add
xor
push
test
push
cld
lahf
sub
inc
out
sbb
jb
pop
cltd
loop
popa
push
sarl
sbb
push
push
lret
pop
aaa
sub
jmp
stc
fldcw
enter
dec
in
sbb
out
out
aam
iret
adc
scas
inc
cwtl
dec
inc
add
push
fdivrs
call
lock
je
inc
test
int
ret
sub
fucomi
cli
dec
jp
add
outsl
jecxz
gs
frstor
das
adc
jge
dec
cmp
cli
test
lock
cmpsb
mov
scas
in
jle
jnp
sub
in
cmpsl
pop
or
mov
cltd
sbb
xchg
ficoml
mov
cmp
fwait
xlat
cs
pop
and
insb
stos
iret
jnp
mov
arpl
jge
lret
ja
or
test
ret
mov
xor
arpl
in
mov
xor
mov
sti
xchg
fimull
outsb
pop
sub
xchg
or
jmp
dec
jne
outsl
jnp
arpl
push
mov
cltd
pop
cmp
jmp
outsl
stos
incl
test
fsubr
push
mov
pop
mov
or
sarl
movsl
cmpb
jmp
push
cwtl
lods
outsl
leave
or
subb
out
outsl
fidivl
xor
cmpsl
std
insb
addr16
aaa
adc
test
in
repnz
push
inc
mov
and
cs
lock
cmp
cltd
arpl
push
lods
clc
fdivl
in
push
xor
cli
lcall
aad
push
icebp
test
xchg
lock
data16
push
stc
aad
jp
repz
lods
or
pop
out
cs
lcall
xor
or
data16
out
in
pop
imul
fnsave
or
fidivrs
shr
sahf
scas
jp
pusha
mov
pop
mov
mov
cmpsb
mov
sub
xor
add
sub
adc
fucom
cmpsl
bound
lcall
push
pop
push
cld
mov
lods
adc
int
aad
jmp
sbb
push
dec
cmc
cmp
sub
sbb
and
aad
enter
pop
outsb
roll
inc
mov
repnz
sub
ljmp
and
cld
or
jno
jmp
inc
cmp
stos
enter
lret
in
lock
xchg
stos
push
jmp
cs
xchg
mov
ljmp
loop
pushf
repnz
sub
add
pop
cmpsb
int
push
mov
lods
movsb
icebp
movsb
scas
loopne
pop
popa
sbbl
push
adc
inc
cmpl
aam
inc
es
stos
mov
push
dec
push
mov
mov
ljmp
sbb
sbb
popa
enter
ja
ja
pop
cmp
xor
sbb
mov
gs
jmp
xor
cmc
daa
and
pushf
in
mov
ss
dec
cmp
dec
cld
cmpsl
sar
jge
xchg
sbb
sbbb
out
test
ds
shrl
cltd
nop
push
xor
cltd
jno
fsubr
push
inc
insl
mov
xor
or
roll
dec
in
les
cs
or
mov
je
and
fistpll
aam
lret
jg
bound
fcoml
and
jae
pop
mov
repz
fsubrs
out
adc
movsb
test
mov
cli
enter
cs
mov
in
dec
mov
mov
fldcw
stc
adc
je
out
pop
dec
das
xor
popf
ret
push
divb
aad
mov
mov
sbb
in
push
negb
cmc
inc
push
ljmp
popa
pusha
fsts
test
adcb
rcl
mov
clc
xor
inc
stos
in
lahf
inc
loop
mov
xor
es
shrb
push
imul
insb
addr16
dec
repnz
sti
and
and
sbb
stos
daa
mov
test
loop
or
cmp
dec
sub
ljmp
pop
mov
dec
mov
xor
mov
or
in
and
and
ds
lock
pcmpgtb
subb
mov
imul
push
inc
cmp
mov
cmc
pop
add
pop
sti
xor
leave
enter
dec
out
arpl
test
jae
sub
ljmp
insl
ja
jge
dec
in
jne
loope
scas
sar
sahf
jle
jecxz
inc
fimull
insb
push
adc
and
fs
movsb
inc
cmp
jge
or
movsb
sarb
mov
or
cli
lods
jb
pop
inc
rorb
or
sbbb
hlt
aaa
push
and
lock
sbb
pop
cmc
insb
bound
test
icebp
and
mov
cltd
sbb
in
push
mov
loope
int3
cmp
pop
adc
cmp
shlb
insb
lret
test
loop
jecxz
out
jo
sahf
push
pop
in
xor
fnstcw
cli
jl
out
dec
jecxz
orb
pop
dec
mov
xor
cmp
jo
xchg
add
jnp
push
or
push
stc
imul
push
pop
cmpsl
mov
pop
and
cmpsb
pop
mov
add
mov
mov
jl
xor
shlw
push
push
add
fwait
or
lahf
std
ss
ret
insl
cmp
cmp
lods
jg
mov
pop
cltd
sahf
fidivrl
dec
push
mov
inc
sub
mov
jo
insl
cmpsb
or
mov
movsb
fistpll
or
je
fcmovne
inc
pop
das
adc
pop
je
push
sub
outsb
jns
fnstcw
inc
add
repz
push
add
dec
leave
fnstenv
lret
sbb
aas
dec
dec
mov
jmp
loope
stc
sub
adc
pop
dec
mov
push
adc
pop
js
add
xchg
jns
fimuls
mov
popa
push
stos
add
stos
xchg
cli
sub
stc
sarl
adcl
ret
shrl
sbb
roll
leave
mov
mov
fsts
mov
lock
xchg
mov
add
add
jb
xor
loopne
mulb
mull
xchg
push
pushf
push
xlat
pop
scas
and
aaa
je
mov
jno
xchg
out
push
sbb
cmp
lret
fisubrs
or
xchg
xchg
in
cmpl
sarl
test
scas
enter
sbb
stos
rorb
push
and
gs
loope
or
push
sbb
sub
cmp
ja
pushf
adc
loopne
les
mov
shrl
add
fs
xchg
or
jecxz
out
and
shl
adc
andl
je
scas
rcl
dec
push
cmc
push
xor
adc
call
out
ret
cli
jecxz
sbb
sbb
push
in
int3
lret
rclb
mov
orl
aam
hlt
sahf
test
jns
cmpsb
or
pop
adc
mov
pop
lods
push
lret
jo
push
fnstcw
das
dec
fldl
out
lret
sub
and
add
sub
mov
nop
lretw
inc
dec
cs
rcll
push
fbld
loope
scas
xchg
fildll
fstps
lock
into
pop
pop
jns
hlt
mov
ljmp
push
fcompl
aas
push
push
and
jl
or
stos
jge
faddl
pop
in
lret
push
push
lock
cmc
hlt
lds
in
inc
notl
data16
sbb
test
rolb
cwtl
cmpsl
jge
add
cmc
imul
les
ret
mov
nop
enter
fstps
cmp
aad
lret
lock
lcall
into
test
adc
xchg
movsb
xor
mov
push
adcb
push
and
jecxz
lods
fadd
xchg
push
icebp
dec
enter
dec
jo
sub
push
cmp
sbbb
cmp
scas
inc
xchg
shlb
loope
and
insl
dec
add
mov
pop
jb
mov
test
mov
fstl
xor
lcall
sub
or
and
call
rcll
mov
nop
pop
jo
subl
cltd
fstpl
addb
or
add
decl
imul
js
inc
sarb
dec
xchg
xor
adc
mov
sub
xor
lock
aaa
neg
lret
ret
sub
xor
stos
cmp
inc
fcomp
divb
add
scas
sub
xchg
pop
movsl
jae
jo
mov
mov
arpl
orl
fists
sub
js
ja
lods
mov
mov
mov
pop
outsl
push
leave
cmp
dec
push
push
imul
sbb
enter
mov
roll
xchg
rolb
loopne
mov
xchg
jecxz
ja
fistpl
aad
data16
mov
inc
mov
inc
xchg
cmpsl
xlat
inc
test
sti
jp
addl
loop
xchg
xchg
movsb
mov
adc
data16
adc
les
jb
ss
je
jae
pop
pop
mov
adc
or
sub
push
inc
data16
pop
popf
out
into
gs
sbb
cmpsb
mov
mov
push
ljmp
js
push
cli
or
xlat
fcomps
inc
xchg
notl
sbb
fwait
es
jns
filds
aam
lahf
cmp
insl
jp
inc
and
dec
dec
xor
idivl
mov
cs
and
sub
stc
enter
sti
and
rcrl
fwait
adc
jbe
cs
or
add
mov
jns
scas
jno
sbb
shll
jo
scas
lods
outsl
mov
cmpsb
cmpb
lods
pop
mov
fildl
pop
icebp
fsubl
arpl
push
xor
add
xchg
mov
out
add
jbe
ss
sbb
out
xor
xor
inc
sub
dec
pop
pop
cmp
or
movsb
mov
ljmp
js
inc
push
popf
out
push
popf
sbb
mov
add
cmp
ja
in
jnp
call
js
mov
sbb
mov
movsl
push
std
mov
adc
divb
mov
mov
scas
roll
aaa
pop
xchg
inc
push
test
icebp
pop
loope
mov
in
ljmp
xchg
rcr
popl
test
loope
data16
std
orb
adc
jo
pop
adc
inc
sbbb
sub
movsb
lea
int
in
push
into
repz
sti
mov
and
fidivs
sub
mov
mov
aas
mov
addl
cmp
inc
dec
jle
push
and
and
out
lods
in
rclb
add
sbb
mov
mov
cwtl
daa
pop
mov
mov
stos
fstl
lock
shlb
add
lea
add
into
into
arpl
cmp
daa
sarl
push
mov
daa
shrb
and
in
cmpb
mov
mov
das
pop
stos
iret
testb
or
jne
add
sti
fucomp
imul
lcall
adc
cltd
sub
and
lock
sbb
pushf
push
mov
push
negb
les
xchg
mov
cmpb
arpl
adc
rorl
or
mov
call
outsl
mov
idivb
ja
dec
jnp
sahf
mov
mov
or
mov
nop
inc
movsl
sbb
sub
sbb
push
ret
lcall
repz
out
negb
jbe
xor
test
jno
arpl
xor
je
mov
addb
mulb
cwtl
stc
xchg
push
mov
cmp
fwait
mov
push
dec
inc
push
idiv
mov
ror
enter
pop
pop
jge
cmp
in
ret
mov
in
pop
fs
jmp
cmc
cmp
data16
cmp
jnp
sbbl
mov
hlt
jl
shrl
sub
sbb
xor
dec
in
imul
movsb
push
into
adc
pusha
and
and
ljmp
mov
repnz
aas
or
mov
adc
lods
ljmp
sti
pop
insb
loopne
jge
popa
imul
daa
jns
jae
push
push
pop
loopne
mov
mov
pop
jbe,pn
and
pop
je
mov
add
sub
jl
shl
xor
scas
lret
cmc
pop
in
stos
or
cli
icebp
xor
cmp
sbb
jg
inc
bound
outsl
test
or
mov
jbe
sahf
and
int
mov
ss
in
and
test
es
je
jb
out
mov
dec
mov
enter
dec
aad
pop
jae
js
xorl
fstl
adc
xchg
add
cltd
bound
enter
popaw
insb
into
loop
and
xchg
mov
cld
dec
cmc
cmp
fcmovbe
mov
xchg
iret
bound
lcall
jbe
sbb
jecxz
jle
in
mov
test
repnz
ja
xor
clc
adc
rcr
fwait
call
jg
outsb
xchg
rcrb
dec
pop
cmpsl
cmpsb
in
xchg
loope
lahf
das
or
inc
mov
in
or
jle
rcrl
lret
xchg
daa
pusha
call
xchg
pop
std
cltd
push
cli
scas
sbb
push
cmp
jle
pushf
lret
adc
fwait
or
out
fstl
movsb
movsl
add
mov
dec
mov
add
sarb
xor
and
lret
push
add
std
cs
jecxz
call
test
jns,pt
and
ficoms
ja
divb
call
pop
lods
das
loop
scas
mov
or
lret
ljmp
addr16
dec
sbb
jns
aaa
push
xor
add
aas
mov
and
data16
inc
movsb
cmp
enter
push
sub
add
imul
fisubs
dec
sbb
cmp
pop
mov
dec
fwait
lret
or
dec
sbb
mov
xor
js
lahf
fcomps
popa
in
dec
loopne
cmpsb
jge
cmp
ficomps
arpl
cmp
cmpsb
int
pop
push
lret
pop
js
mov
ret
scas
jg
or
mov
sub
jns
xor
mov
xor
ret
adc
aaa
add
nop
or
mov
pushf
pop
xor
xchg
pop
sbb
js
les
int3
mov
push
test
dec
and
xchg
and
in
fdivs
inc
jle
adc
ds
inc
std
cmp
jne
add
jb
mov
ja
adc
xor
dec
sub
sbb
fs
testb
stos
subl
mov
mov
cwtl
xchg
aas
dec
lcall
push
cs
out
roll
insl
popf
dec
sarb
push
aam
out
inc
in
push
daa
clc
xchg
jo
jne
add
sbb
inc
xor
insl
aam
or
inc
jbe
jns
jnp
insb
cwtl
xchg
mov
sub
pop
pop
cmc
fcomps
jecxz
inc
clc
inc
cltd
scas
loopne
test
dec
cmpsl
loopne
mov
stos
xchg
xchg
mov
jp
in
sti
sub
dec
mov
xchg
jno
in
insb
int3
xchg
xchg
add
cld
add
jbe
mov
adc
ljmp
and
cmpsb
frstor
xchg
aad
push
dec
cli
out
mov
add
test
cltd
aam
add
cltd
push
out
loop
xor
mov
ja
outsl
sbb
add
in
push
push
pop
adc
fsubl
jbe
in
dec
inc
cmp
add
stos
movsl
aam
leave
stos
sbb
loope
mov
movsl
or
pop
addl
mov
icebp
xchg
shl
arpl
sub
fbld
bound
cmp
sub
inc
xchg
dec
lock
movsb
stc
in
adc
mov
mull
inc
stos
int
out
adc
stos
lcall
jp
sbb
ret
cld
xor
jge
outsb
jge,pt
push
push
jne
dec
add
xor
dec
jo
xor
push
sub
mov
addl
mov
rorb
push
xor
test
pop
pushf
cs
push
scas
cmpl
mov
daa
pop
push
or
je
or
sub
adc
or
pop
adc
rorl
fidivl
pop
pop
das
jns
push
cmp
adc
out
jl
enter
cs
test
test
ljmp
and
ficoml
lcall
filds
pushf
aas
cmc
sti
fsubl
xchg
adc
leave
inc
xor
popf
cld
imul
popa
sub
ror
jle
pop
adc
jae
add
imul
ret
cld
in
popa
mov
add
fistl
inc
jp
loopne
mov
cmp
aad
insb
aas
hlt
jmp
xchg
pushf
mov
shrl
scas
imul
inc
int
roll
mov
mov
push
data16
mov
out
mov
nop
lahf
mov
pop
sbb
cmpsb
in
stc
pop
pop
icebp
jns
in
sti
js
das
jne
sbb
sub
fbld
inc
push
fsubrl
adc
pop
xlat
inc
movsb
aaa
mov
xor
lahf
cmpsb
loope
pushf
in
xchg
push
mov
jb
ja
sar
stos
xor
inc
stos
pop
xchg
xor
add
jne
mov
pop
ret
cltd
xchg
pop
sub
or
mov
fsubrp
jbe
add
popl
dec
insb
cs
dec
push
pop
ds
jle,pn
inc
das
mov
ret
mov
syscall
adc
mov
sub
repz
mov
les
outsl
or
mov
xchg
push
adc
push
cmp
xor
ret
adc
mov
jo
int3
out
fdivr
out
in
pop
mov
cmp
imul
cs
lcall
ljmp
xlat
stc
lods
fistpl
repz
sbb
insb
popf
push
sub
idivb
leave
add
sub
repz
push
cltd
aam
sub
in
imul
sahf
aaa
daa
inc
jae
daa
test
cmp
in
jecxz
mov
cmpsb
push
xorl
and
popa
xchg
lret
popa
cs
adc
jp
dec
data16
mov
or
out
push
psrld
jmp
fidivl
lods
add
or
fwait
xchg
or
jmp
xchg
sub
in
push
shr
mov
stc
scas
addr16
mov
jb
int
adc
arpl
popa
out
sub
pop
cmp
dec
cmp
push
xor
in
out
decl
add
in
leave
in
loope
mov
cli
sub
daa
shlb
sbb
sbb
mov
das
sub
movsl
adc
iret
mov
sti
leave
xchg
cmpl
sub
sub
pop
es
cmp
popa
dec
aad
pminsw
sbb
sbb
inc
stos
push
out
cmc
jne
lahf
lds
adc
cli
jnp
cld
orl
ret
or
rep
adc
inc
rcrl
nop
jns
xchg
or
mov
push
stos
mov
pusha
mov
and
dec
rcl
hlt
jne
push
push
mov
insb
mov
adc
mov
popf
test
pop
call
sti
mov
mov
lret
stos
and
mov
fcmove
xlat
sub
sub
movsb
ds
lret
fsubrs
sbb
test
or
xchg
mov
push
rcll
addr16
dec
push
out
ss
aaa
subb
dec
out
sar
xchg
test
adc
addr16
outsb
popf
inc
or
das
pop
mov
xor
mov
adc
imul
dec
lcall
push
int3
aad
pop
xor
dec
lods
sbb
dec
fildl
popf
xor
sbb
inc
mov
sbb
sbb
push
test
sahf
xor
sub
inc
mov
clc
test
inc
mov
subb
hlt
pop
mov
outsb
add
ljmp
clc
add
mov
xor
adc
int3
add
mov
in
sbb
std
pushf
inc
lods
rcll
mov
mov
pop
sti
dec
dec
push
jno
popf
sbb
mov
nop
test
add
mov
loopne
pushf
arpl
rclb
fcmovne
in
movsb
cld
push
js
xor
xor
or
jecxz
inc
mov
hlt
ja
cld
call
addb
ds
sbb
mov
movsb
dec
out
add
pop
cmp
push
mov
jl
sub
xchg
jg
test
jb
sub
adc
xor
ret
in
pop
mov
adc
sti
jl
inc
outsb
outsb
aam
mov
test
cmp
mov
cmp
inc
decb
addr16
aas
ja
popa
enter
pop
dec
orl
sub
inc
xchg
popa
clc
and
xor
cmc
mov
dec
in
mov
das
lock
incl
cld
pop
stc
xchg
arpl
fnstenv
hlt
popf
repz
sti
into
je
jecxz
jb
jo
lods
repnz
push
and
mov
ret
jge
popf
add
popf
jo
sahf
daa
adc
mov
or
js
add
xchg
mov
icebp
rorl
sbb
movsb
xchg
iret
or
push
int
jge
idivl
gs
sbb
mov
sahf
fistl
fstps
xchg
xor
mov
ds
pop
in
into
or
sbb
imul
or
or
and
sub
jbe
lret
repnz
jl
cmp
adc
rcr
scas
sub
imul
adc
inc
test
xchg
outsl
into
nop
pop
sub
loope
fdivp
dec
loopne
cli
xor
push
sbb
stc
cwtd
or
adc
dec
pop
outsb
cmp
dec
inc
movb
add
or
jl
pushf
icebp
cwtl
add
fs
mov
pushw
fsubl
stos
xlat
cmc
aam
ss
shrl
inc
nop
push
pop
fiaddl
adc
sub
mov
mov
and
repz
adc
int3
movsl
fsubr
inc
and
mov
adc
mov
sti
xchg
xor
addr16
test
xchg
jge
out
mov
xor
mov
xor
xchg
xor
jge
aam
xchg
inc
mov
xchg
pop
dec
mov
push
and
xchg
xlat
inc
cs
and
xor
jecxz
repz
fwait
lods
mov
aas
xor
pop
std
xor
sub
adc
les
test
dec
xlat
je
jmp
repnz
lret
test
mov
mov
test
xor
stos
out
imull
out
inc
in
lods
fsubrs
lods
add
repnz
aas
jp
jle
push
jecxz
outsb
jecxz
adc
jne
bound
jmp
adc
dec
ljmp
out
ja
ds
imul
mov
dec
outsb
ljmp
ljmp
mov
into
pusha
xchg
cmp
dec
xor
mov
jae
sbb
xchg
pop
push
inc
or
bound
and
or
fdiv
lods
imul
sahf
cmpb
cmp
push
mov
test
add
jne
mov
adcb
out
push
dec
mov
and
adc
leave
mov
mov
inc
fmuls
pop
es
test
push
fisttpll
sbb
pop
loope
push
inc
lcall
push
add
out
sub
push
xor
or
xchg
or
repnz
fdivrs
dec
xchg
loope
dec
pop
pop
xchg
or
cwtl
mov
aaa
out
scas
sbb
sub
in
mov
pop
sub
lahf
mov
xlat
sub
test
sbb
cmp
mov
aaa
cmp
cmp
sub
bound
inc
lods
xor
and
push
mov
push
test
imul
leave
push
repz
mov
xchg
cld
sub
or
arpl
in
and
mov
mov
lods
std
ret
cmpsl
aad
scas
mov
repnz
cmc
sbb
stos
pop
xchg
mov
shlb
add
mov
xor
rcrb
movsb
rep
and
add
cmc
das
and
sbb
cmp
pop
cmp
mov
aaa
add
mov
fcmovnbe
inc
lahf
or
popa
sahf
icebp
les
sbb
aad
pop
mov
push
push
pop
and
jae
sub
fisubs
pop
jle
or
or
mov
lods
xor
negb
push
addr16
andl
jae
xacquire
out
xchg
test
divl
mov
xor
fmull
mov
mov
out
pop
ljmp
dec
xchg
cmp
je
or
inc
push
outsl
outsl
xor
xor
lret
mov
adc
lret
shll
das
dec
push
in
jle
nop
popf
push
mov
push
fidivrl
jp
inc
xlat
pop
jmp
cld
jns
or
inc
icebp
clc
push
lahf
sbb
call
lods
add
test
push
ds
loope
adc
in
cmp
push
mov
das
in
jge
decl
xor
int
jmp
in
shr
jno
mov
dec
push
stc
dec
int3
loopne
inc
push
push
into
test
testb
dec
lret
sbb
imul
insb
sbb
stos
xchg
add
inc
sti
and
in
dec
mov
movsl
sub
and
mov
mov
adc
movsl
insb
add
movsb
cmc
and
int3
mov
jae
fistl
icebp
test
icebp
stc
ss
mov
add
in
and
mov
loop
cmp
fldcw
addr16
cmp
lock
mov
lret
jno
sbb
pushf
les
outsl
cmc
mov
ja
repz
sub
jecxz
jmp
cmp
mov
imulb
roll
inc
fcom
clc
into
in
ja
adc
rcrb
push
mov
cmp
adc
addr16
prefetch
les
loope
sub
pusha
mov
add
xchg
sub
pop
adc
hlt
cmp
rorl
repz
or
add
popf
adc
mov
call
pop
bound
inc
ljmp
test
cmp
outsl
xlat
inc
or
test
cli
jg
and
ljmp
faddl
imul
ljmp
out
cmp
pop
mov
arpl
mov
std
xchg
and
mov
and
mov
loope
jns
inc
lret
inc
adc
scas
ss
fists
adc
add
xor
mov
aaa
mov
jb
fwait
mov
mov
in
add
jb
insl
jnp
repz
inc
mov
jmp
push
mov
pop
sub
sbb
sarb
cmpb
push
or
pop
xor
addr16
push
ss
repnz
clc
pop
xor
and
js
pop
push
bnd
mov
mov
xchg
adc
add
cmp
je
adc
push
mov
insb
repnz
mov
mov
mov
adc
out
fld
jl
xchg
ds
pushf
mov
cmp
and
inc
fildll
xor
and
pushf
mov
push
mov
jb
mov
xchg
dec
fisubrl
inc
jl
sub
inc
push
add
lods
sbb
iret
out
xor
ss
mov
jnp
pop
inc
out
push
adc
mov
jg
adc
cmpsl
inc
sub
jnp
push
add
icebp
mov
push
jl
out
add
and
out
mov
jo
dec
dec
lret
adc
sub
ds
and
cwtl
cmp
sarl
daa
xor
mov
sbb
cmpsb
fldl
xlat
dec
js
or
mov
rcrl
into
sti
jo
or
inc
jae
push
mov
outsb
pop
mov
inc
dec
xchg
xchg
movsb
push
insl
jae
adc
mov
sbb
sbb
dec
dec
dec
cmp
int
js
inc
in
shrl
jnp
jb
outsb
lods
sbb
jg
icebp
inc
mov
daa
mov
mov
rclb
ret
and
cmp
adc
jmp
add
arpl
add
inc
adc
aas
ljmp
xor
in
inc
jmp
int
ljmp
in
pusha
adc
outsb
addr16
je
mov
int3
pushf
mov
sbb
xor
pusha
lods
aam
push
jno
dec
xchg
stos
popa
pop
mov
gs
outsb
jo
popa
mov
les
loop
cmpsb
jp
cld
sahf
test
stc
enter
pop
push
mov
mov
sbb
das
mov
cltd
adc
dec
aam
adc
and
notb
enter
xchg
aas
jge
cmpsb
pop
ds
rclb
imul
pushf
jae
push
pop
in
into
sbb
mov
test
mov
out
inc
iret
pop
scas
xchg
xor
mov
or
mov
sbb
adc
mov
out
sti
jnp
ret
cmpsb
dec
dec
movsl
jge
cmp
mov
push
scas
sub
dec
sarl
testb
out
outsb
movsb
xor
mov
mov
sahf
add
jmp
xchg
dec
mov
xor
stos
push
loop
jns
or
mov
mov
clc
push
idivb
xchg
xor
inc
sbb
xor
cmp
orl
adc
xchg
into
lock
idiv
shl
or
cmp
fldcw
test
inc
enter
add
push
pusha
push
dec
test
jecxz
mov
fs
adc
push
sbb
and
subb
cmpsl
nop
mov
push
gs
nop
inc
add
xlat
pop
jno
test
cmpsb
sbb
imul
sti
pop
add
pop
sub
xor
flds
sub
xor
aaa
mov
iret
pop
xorl
sbb
mov
into
incb
inc
out
xchg
and
cmp
movsb
xchg
add
lods
cmpb
pusha
in
mov
decb
and
xor
or
push
mov
iret
inc
inc
pushf
dec
mov
jmp
enter
loope
cld
mov
mov
popa
cmp
sbb
hlt
mov
xor
add
or
push
inc
fstp
adc
and
dec
mul
dec
sub
jmp
sahf
cmp
cmc
cwtl
mov
pop
insb
lods
mov
adc
adc
popa
cmp
mov
push
and
or
xor
xor
add
jecxz
and
addr16
xor
mov
clc
dec
pusha
aam
sbb
jge
cwtl
je
leave
xchg
sarl
ret
mull
ja
gs
ja
aam
or
xchg
add
push
mov
xor
inc
pop
in
push
lds
lret
gs
sub
jns
xchg
test
or
and
jne
jmp
fistpll
add
fucomp
mov
mov
add
pop
test
rcrb
and
das
daa
js
sbb
push
in
and
dec
cld
pop
ret
mov
cmc
je
out
mov
lods
lock
les
mov
mov
rcrb
call
fimuls
test
out
inc
shlb
jo
dec
mov
shrl
xchg
mov
loopne
jnp
icebp
and
test
mov
cltd
incb
cmp
xor
insl
cmp
mov
cmp
sub
adc
sub
ds
sbb
popa
xor
sti
mov
or
daa
int
mov
dec
mov
mov
int3
inc
inc
push
cltd
scas
lcall
mov
cmp
xor
aad
imul
insl
jle
xchg
adc
adc
rcrl
es
cmc
idivb
test
dec
lahf
or
xchg
or
shrb
xchg
cs
nop
push
inc
in
test
mov
add
pop
xor
push
push
sub
fcomi
sbb
adc
mov
push
imul
xchg
imul
mov
sub
into
orb
mov
popf
cltd
pushf
loopne
xchg
out
out
or
cld
out
out
insb
stos
pushf
mov
imul
push
cmp
fcoml
je
imul
cli
and
cltd
data16
pop
ds
psubsb
mov
mov
mov
sub
and
clc
sbb
dec
push
dec
mov
pop
nop
imul
xchg
enter
vpunpcklwd
and
and
fwait
cmp
fwait
jecxz
not
mov
xor
rcr
fiaddl
and
jnp
add
jl
sar
filds
mov
shl
jecxz
jmp
notb
iret
pop
ss
ja
mov
test
and
lods
push
cltd
loopne
inc
lret
xchg
xor
xlat
fwait
shrb
xchg
aaa
jae
sbb
sahf
and
inc
mov
inc
hlt
cmp
mov
mov
mov
sbb
or
or
rcpps
cmp
and
test
scas
or
sahf
mov
out
sarl
xchg
jmp
sub
incb
add
inc
jo
push
scas
pop
ss
sbb
mov
hlt
mov
xchg
es
out
mov
sub
aam
push
inc
sub
lds
push
in
mov
mov
xlat
or
sub
jb
in
out
jge
shll
and
sbb
jg
test
cwtl
dec
mov
rcrl
add
dec
fs
inc
lods
arpl
stos
popa
xchg
into
aam
jp
or
jae
mov
xor
push
dec
mov
dec
sbb
or
mov
fstp
dec
or
pusha
cltd
add
cmp
pop
xchg
cmp
cltd
cld
cmp
fdivl
shll
sahf
adc
testb
sbb
sahf
push
pop
push
pop
call
test
adc
or
cmp
pop
aam
lcall
jne
sub
sub
nop
mov
int
adc
or
mov
pop
xor
es
test
pop
insl
test
imul
adc
repnz
cmp
cmp
mov
fcomi
mov
mov
scas
out
mov
cmpsb
loop
sti
mov
repz
repz
rolb
xor
fwait
inc
clc
in
es
rclb
pop
call
or
aas
cmp
int3
and
sahf
call
add
testb
or
aam
push
sub
push
jae
shl
shl
mov
pop
cmp
xchg
pusha
dec
icebp
gs
pop
arpl
push
xchg
cwtl
or
xchg
sbb
xchg
enter
ret
and
out
jge
jo
or
mov
popf
popa
fldt
mov
int3
es
cmp
stos
or
mov
loop
xchg
inc
jnp,pn
pop
push
rcrb
xor
aam
std
mov
stos
xorb
in
into
std
fcmovne
outsb
popf
add
negb
cmp
out
xchg
imull
into
push
repz
outsl
jp
cmp
outsb
jge
imul
rcr
daa
dec
mov
iret
adc
dec
add
mov
mov
xchg
cmp
jecxz
sub
jmp
cmp
icebp
lcall
out
cli
or
cmp
mov
int3
mov
cmpsl
jb
sub
popf
lds
sbb
cmp
fistps
insb
push
rcll
add
shlb
sti
out
and
sub
pop
or
addr16
cltd
lcall
xchg
imul
push
fisubrs
rorb
add
xchg
jne
stc
cmpsb
mov
cwtl
and
lods
aam
lock
andl
test
int3
arpl
sbb
stos
pop
fiaddl
in
roll
jle
xor
pop
imul
inc
popa
mov
divb
pop
pop
loopne
pusha
jb
jle
stos
cli
and
into
cmpsl
inc
scas
cld
mov
push
pop
lahf
sahf
jl
imul
out
lods
pop
aaa
leave
negl
fwait
pop
jae
sbb
aaa
mov
repz
test
and
test
mov
aaa
xor
insb
mov
lea
rcl
aas
fiadds
mov
mov
sbb
dec
nop
sub
fcmovne
sub
fwait
inc
xor
or
lret
inc
js
imul
repnz
add
out
sub
fxtract
out
daa
adc
xchg
mov
jmp
pop
jnp
jns
mov
xor
mov
cmpsl
jmp
mov
push
or
imul
mov
push
cmp
xchg
mov
xchg
outsl
rcrb
ret
and
imul
pop
pop
add
jbe
arpl
jle
dec
movsb
cmp
addr16
bnd
out
cs
int3
sbb
iret
fbstp
test
lret
hlt
xchg
adc
xchg
jmp
and
imul
out
adc
ss
inc
sub
mov
in
sub
mov
aas
and
dec
sti
ret
loopne
daa
jl
in
dec
mov
scas
mov
pop
cld
pushfw
into
fcompl
adc
xchg
jbe
xchg
into
imul
and
cltd
enter
shrl
inc
rol
ficoml
push
scas
dec
vpsadbw
lcall
repz
inc
mov
add
xchg
popf
xor
mulb
int3
jmp
xchg
jne
leave
jnp
cmp
add
iret
movsb
push
data16
mov
xlat
stos
dec
jg
mov
add
xchg
push
push
inc
inc
sbb
loope
sti
mov
jg
and
sbb
bound
outsl
loop
jbe
lods
sub
shrb
xchg
xor
push
std
mov
jbe
lret
scas
pop
movsl
out
test
adc
out
shr
xchg
jle
sahf
clc
sbb
jns
or
push
or
xchg
mov
je
xor
mov
scas
loopne
shlb
mov
cs
sahf
sbb
pop
clc
shll
cmp
leave
sbb
push
jnp
in
jle
ret
mov
lret
xchg
shrl
icebp
xchg
push
mov
jne
or
pushf
shrb
cmpsb
jne
cmp
xchg
in
ret
xor
sub
ss
lods
push
mov
inc
cmc
and
outsl
popl
and
and
rclb
cmpsl
sub
sbb
in
iret
xchg
add
lock
jg
test
out
jp
js
div
in
xchg
jno
or
ljmp
gs
inc
dec
mov
xor
push
add
insl
ret
push
push
add
xor
sete
pop
cmp
ret
test
in
add
or
sub
sbb
jne
push
or
test
and
sbb
mov
clc
imul
sbb
jp
pop
rclb
es
mov
aad
fidivrl
aad
sub
or
push
jp
xlat
cmp
mov
pop
ss
movsb
dec
sub
pop
and
xchg
pop
das
xchg
xchg
jne
jmp
inc
insl
mov
inc
mov
data16
imul
mov
mov
jmp
mov
push
bound
or
or
lcall
push
jmp
sub
stos
and
inc
inc
ja
pop
or
adc
ss
sub
mov
cmp
outsl
mov
inc
ret
cltd
xor
adc
push
inc
dec
dec
mov
mov
in
mov
inc
popf
xchg
adc
movsb
xor
push
decl
lret
mov
lods
std
mov
in
push
in
mov
scas
les
cmc
inc
loopne
xchg
sti
xchg
adc
pop
xor
test
ror
xchg
cld
xor
jae
mov
in
mov
xor
mov
add
push
pop
aas
cmpsl
aaa
stos
add
pop
pop
mov
arpl
out
bound
mov
mov
adc
dec
cmc
dec
push
and
mov
lea
xchg
test
stc
je
scas
or
daa
sbb
mov
fsubs
cld
mov
fiadds
dec
push
push
xchg
mov
mov
sbbl
pop
fxch
xchg
cwtl
cmc
add
pop
mov
mov
cmc
movsl
sub
outsl
mov
mov
filds
sbb
push
popa
push
mov
mov
cmpsl
loopne
mov
cmc
pop
fsubrs
inc
sub
mov
xchg
push
push
pop
xchg
pop
and
and
sub
jmp
mov
xchg
dec
or
mov
xchg
scas
dec
lock
lret
cmpsb
imul
sub
in
dec
popf
out
adc
aad
repnz
fsubl
dec
lcall
xor
sub
inc
test
stc
sbb
xchg
xor
je
jae
or
push
mov
aaa
mov
inc
test
sub
pop
sbb
or
mov
es
leave
fcomps
mov
mov
push
jmp
call
sub
mov
cmp
pop
testb
aam
jns
das
pusha
addr16
push
int3
test
and
repnz
cmpsl
in
push
xchg
jno
push
mov
xor
cmp
int3
aad
in
xor
mov
adc
and
incb
fisubrs
and
popl
ja
push
dec
push
test
mov
or
fdivs
jle
out
outsl
leave
insb
ret
cmc
pop
ret
cld
insl
jb
out
jge
mov
insb
or
inc
iret
inc
lods
xchg
dec
into
push
pop
jne
pop
cmpsl
pop
push
ret
call
dec
cmp
movsl
cmpsl
pop
sbb
movsl
xor
out
inc
push
push
and
sarb
or
bound
xor
stc
push
or
adc
pop
add
lods
inc
fdivrs
adc
test
fidivs
and
movsl
sbb
mov
outsl
insb
mov
mov
gs
fdivrs
sub
sub
fidivs
push
push
decl
xchg
ja
pop
mov
shrl
movsl
ret
fwait
add
mov
pusha
add
jns
outsb
cmp
loop
push
sbb
sbb
in
cltd
jle
inc
in
mov
cmp
cmp
sbb
mov
mov
or
dec
sbbb
mov
rcl
arpl
enter
insb
mov
out
fidivl
mov
cmp
mov
adc
xchg
and
scas
cmp
cmp
insb
std
lods
stos
mov
mov
jg
out
pop
xor
mov
test
nop
mov
cmp
ja
iret
mov
xor
pop
pop
pop
pop
dec
shrb
pop
push
stos
or
sbb
jae
pop
iret
inc
lret
pop
inc
dec
in
xchg
jno
cltd
lock
push
xchg
cmc
shrb
aaa
add
push
mov
mov
imul
jns
icebp
dec
push
mov
int3
in
out
xchg
xchg
and
cli
or
notl
enter
lods
xchg
push
popa
xor
mov
lods
popf
cmp
fwait
jl
movsb
cmp
sbb
inc
jne
or
icebp
sub
pop
jge
pushf
fcompl
push
sti
cmp
mov
lret
stc
paddd
je
mov
pushf
xchg
pop
sbb
and
hlt
cmp
adc
sub
pop
mov
xchg
xor
inc
iret
ja
enter
testb
ljmp
sbb
jmp
sub
dec
pop
stc
das
jbe
inc
push
mov
rcll
js
mov
dec
mov
push
in
xchg
shlb
les
pop
imul
mov
ss
xchg
xor
jno
cmp
sbb
ss
int
mov
jecxz
mov
xor
das
cmp
mov
lock
xlat
or
daa
lods
jbe
lret
lods
cld
ret
out
insl
loopne
out
jmp
subps
repz
or
insl
inc
aaa
mov
xchg
loopne
cwtl
sbb
mov
push
ljmp
ret
mov
jnp
rolb
mov
shll
insl
call
mov
xchg
test
leave
imul
jle
and
adc
sbbb
cmp
ds
mov
mov
movsb
inc
and
mov
cmp
cld
push
sub
push
mov
shrl
daa
fisttpl
movsl
and
rcrb
lahf
dec
jb
imul
dec
xlat
test
cmpsl
imul
lret
ret
sub
sahf
int
mov
xchg
rorb
incb
lcall
ret
add
shlb
fsubrs
cmpsb
dec
jp
mov
sbb
xchg
aaa
jne
pushf
adc
je
jl
stc
lcall
push
xchg
lds
fldt
subb
das
lods
and
fisubrs
lret
pop
sbb
pushf
ficomps
out
mov
into
fdiv
mov
dec
out
adc
sar
mov
repnz
out
movsl
jge
rorl
push
xor
movsb
andb
sbb
and
dec
subl
push
scas
fcmovb
mov
stos
int
lahf
mov
push
les
dec
mov
stos
jnp
out
jnp
decb
ret
shrl
push
mov
ret
hlt
mov
mov
cmp
mov
mov
stos
addl
cmpsl
mov
adc
int
cmp
xchg
mov
dec
gs
fs
dec
inc
sub
outsb
cmpsl
ret
mov
adc
ret
pop
dec
loopne
inc
mov
dec
push
inc
addb
pop
push
aam
mov
pop
clc
cmpsb
into
cmpsl
mov
clc
test
bt
dec
sbb
rol
dec
inc
push
add
inc
xlat
mov
ret
sbb
jmp
pop
xchg
mov
adc
call
inc
fiadds
dec
sti
pop
fidivs
insb
adc
in
mov
xorb
xchg
push
mov
lds
shll
mov
push
movsl
pop
or
iret
pop
pushf
push
ljmp
push
sub
sbb
mov
or
arpl
repz
and
outsb
aas
and
aad
sub
xchg
int
jge
pop
jae
sub
mov
and
dec
xchg
push
pop
ror
or
or
mov
sub
mov
push
mov
sub
add
jnp
repz
loop
and
cmp
inc
sbb
mov
xchg
sbb
mov
cmp
leave
inc
xlat
shl
adc
mov
div
dec
loopne
ret
sub
pop
xchg
shrl
lds
mov
xor
jp
aad
dec
inc
cmp
xor
mov
sbb
dec
inc
popa
jl
mulb
and
cmc
dec
push
dec
popa
sub
mov
or
inc
pop
and
push
adc
or
aad
enter
xchg
xchg
sahf
fstpl
mov
aaa
xor
gs
pop
fldt
movsl
sub
outsb
popf
insb
sub
xor
cmp
adc
pop
inc
fwait
pop
into
xchg
pop
divl
mov
scas
cli
rolb
mov
mov
jnp
xchg
push
xchg
sbb
jle
jmp
adc
mov
push
lcall
push
scas
ret
jo
lcall
cmpsl
popf
outsl
xchg
sub
shll
and
jp
sbbb
mov
and
jns
mov
leave
sbb
pop
dec
xor
test
push
push
es
push
inc
xor
and
insb
shrb
ljmp
int3
xor
xor
mov
es
mov
ret
xchg
add
adc
ja
push
les
jmp
fs
sub
cltd
lds
repnz
xor
sarb
sbb
sbb
mov
jmp
push
and
push
scas
mov
fdiv
mov
mov
push
xlat
mov
insb
ret
fsubrl
jg
clc
xchg
leave
sti
outsl
mov
daa
cmpsb
pop
mov
loope
inc
inc
xchg
imulb
adc
mov
andb
popf
push
mov
and
loopne
ljmp
cld
and
enter
adc
pushf
mov
jg
sahf
in
stos
clc
cwtl
sub
push
es
fcmovu
scas
adcb
test
jmp
das
test
lods
sbb
ret
cmp
jo
loopne
sbb
bound
int
ja
jo
test
pop
mov
imul
or
call
adc
cwtl
js
ror
cli
xchg
scas
test
push
push
jae
xchg
pop
and
dec
mov
sub
leave
notl
sti
test
and
cwtl
gs
or
mov
xchg
aad
lods
movsl
andl
mov
lods
pop
ja
test
add
add
xchg
mov
test
out
outsb
arpl
in
lret
mov
ja
pop
xchg
fdivr
and
sbb
push
push
jecxz
mov
mov
and
insb
insl
and
xchg
repz
cmp
push
aam
mov
mov
jge
cmp
xchg
cmp
cmp
in
int
mov
xchg
sbb
and
iret
rcrb
fadds
in
scas
sbbb
fldenv
mov
xchg
fwait
mov
lock
gs
dec
mov
sarl
pusha
dec
jecxz
adc
xchg
movsl
inc
sub
mov
pop
jmp
mov
mov
das
sub
cmp
mull
int3
jle
jnp
repz
add
dec
out
in
int
ljmp
dec
inc
push
xor
xor
out
arpl
push
into
aad
sarb
cmp
ret
bound
cwtl
push
jns
test
xchg
rcr
in
and
movsl
mov
mov
ds
hlt
test
pop
xchg
jnp
adc
addr16
aam
daa
ja
loopne
sahf
ret
ja
mov
mov
xchg
imul
aaa
jno
and
xchg
std
dec
mov
rcr
lods
shll
shrl
cld
inc
push
jge
sbb
jae
xor
dec
lods
aas
cmc
flds
and
push
xor
and
aad
cmp
pop
xchg
xchg
scas
scas
push
adc
jl
and
dec
cmp
dec
push
sbb
jge
nop
or
pop
jb
test
push
pusha
and
leave
dec
add
push
insl
jb
pop
fldl
adc
fs
inc
jno
mov
andb
mov
int3
sub
xor
outsl
iret
xor
adc
lods
jg
ss
dec
jle
xor
fidivl
xchg
or
xchg
jbe
int
mov
add
pop
out
xchg
je
pop
mov
xchg
mov
hlt
int
sub
dec
inc
movsb
jle
fstl
adc
xor
cld
sub
xor
out
scas
push
xor
out
insl
cmpsb
std
dec
popf
adc
jle
and
repz
mov
push
jl
stc
leave
pop
push
cmp
jmp
in
sub
out
stos
fiadds
push
imul
shll
cli
out
test
sbb
push
pusha
mov
jmp
dec
xchg
lea
mov
mov
pushf
cmp
sbb
adc
and
shll
mov
ds
push
mov
xchg
retw
mov
ud2
sub
cs
dec
cmpsl
loope
int
inc
sub
sub
int3
loopne
add
call
mul
dec
test
mov
pop
mov
sub
and
add
and
sbb
mov
testb
xchg
push
stc
insb
lea
push
jl
gs
xor
pop
lds
mov
xchg
testb
stos
cltd
aad
aas
jecxz
adc
out
mov
sti
sti
jle
sub
movsb
fwait
aas
out
dec
sbb
and
mov
pop
in
xchg
add
xor
xchg
xor
sti
pop
lret
test
add
jns
int3
cmc
inc
mov
rcll
cwtl
mov
mov
cwtl
out
sbb
stos
stos
ret
cwtl
pop
jmp
cli
xor
test
pop
jle
out
repz
add
into
jae
xor
and
dec
push
dec
jge
clc
pop
sbb
aaa
fldcw
imul
shrl
mov
js
leave
mov
inc
xchg
push
pop
mov
pop
push
push
loope
lret
fld
cmpb
outsb
sbb
incl
cmp
push
mov
pop
push
cmpsb
pop
out
jae
xchg
int3
jmp
xchg
sbb
inc
mov
sbb
cs
ret
mov
mov
frndint
push
shlb
push
lods
push
rorl
and
fistps
jb
in
push
mov
shl
sub
ss
ss
lcall
cld
repz
jl
btr
cmp
aam
fadd
stos
jp
push
or
sub
das
mov
push
xor
inc
adc
int
or
lcall
push
imul
sbb
sbb
mov
jbe
lcall
xchg
pusha
cmp
inc
dec
xchg
bound
xor
xchg
inc
stos
clc
inc
out
sbb
cmp
movd
sub
xchg
inc
cmp
mov
in
rorb
mov
mov
popf
add
jns
sub
out
pop
lret
jmp
int3
je
jp
loop
lret
xchg
daa
repnz
push
imul
mov
pop
pusha
xchg
inc
loop
inc
push
add
jne
sbb
add
popf
mov
mov
dec
sbb
cli
jl
arpl
cld
mov
sub
call
dec
ret
mov
sti
insb
inc
std
imul
pop
mov
leave
outsb
aaa
mov
add
ret
out
outsl
sbb
mov
cmc
out
sub
add
mov
add
mov
push
aam
xchg
stos
in
mov
inc
xchg
push
xchg
mov
and
mov
pop
arpl
fwait
or
fcompl
cmpsb
pop
popa
cmp
push
repnz
loop
push
add
fs
out
loop
fisttpl
outsl
fildll
aam
daa
outsb
fnstcw
xchg
and
jmp
push
pop
jmp
fcoms
imul
mov
jnp
push
clc
jmp
daa
fisubs
shr
outsb
adc
data16
fwait
scas
stc
sub
xor
pop
jmp
pusha
xchg
sahf
das
adc
pop
ret
shl
cs
aam
int
out
fwait
jne
adc
xor
mov
sub
stos
sbb
movsl
shld
pop
std
std
cmc
aaa
cmp
adcb
fisubl
xor
in
filds
push
sub
mov
jmp
test
icebp
call
push
inc
aaa
movsl
pop
push
pop
jns
in
out
aaa
fidivs
mov
cli
mov
cmp
xchg
mov
sarb
jb
outsl
or
imul
jae
cmp
push
cmp
cmp
or
xor
scas
mov
arpl
aad
ret
or
inc
pop
leave
lcall
xchg
shr
cmp
and
mov
sub
lret
jmp
mov
and
adc
sbb
cld
lds
ds
popa
cmp
mov
fisttpl
aad
leave
pop
mov
rorb
mov
es
hlt
scas
nop
mov
add
js
push
loopne
push
and
ret
rcrb
scas
lret
in
test
aam
inc
aas
je
sahf
sub
jns
cld
sbb
jp
sbb
mov
pop
cli
out
out
aaa
inc
mov
mov
inc
xor
mov
jno
enter
pop
call
sub
insl
rorl
pusha
mov
xchg
and
xor
subb
dec
pop
jge
xchg
push
lahf
imul
dec
je
sbb
pusha
push
lock
cmpsl
iret
stos
push
xchg
xchg
and
lea
xor
and
jp
jl
mov
mov
sub
pushf
je
cmc
hlt
insb
sbb
add
hlt
lret
add
lret
int
and
lcall
sub
test
mov
mov
pop
aas
push
push
xorl
inc
js
cmp
jp
gs
sbb
je
aaa
int
cmp
dec
add
enter
inc
mov
sub
xor
mov
push
jne
jns
dec
jb
sarl
leave
out
push
jmp
outsl
adc
pop
ja
andb
js
inc
test
lret
push
dec
push
mov
add
xchg
imull
sub
sbb
bound
dec
out
fidivrs
mov
cmp
pop
sti
mov
or
leave
mov
dec
push
pop
stc
mov
negb
jns
pop
push
mov
sarl
xor
adc
lahf
pop
sbb
mov
fldenv
fcmovnbe
push
fisubs
adc
repz
imul
dec
add
sbb
std
jo
in
daa
jmp
add
jmp
jo
movb
and
xchg
sbb
jne
fs
test
imul
jno
mov
fldenv
cmp
pusha
inc
cmpsl
push
daa
popf
push
sbb
lds
movsl
lods
arpl
shl
adc
incb
jnp
lds
pop
pop
in
inc
addl
in
and
js
hlt
loope
stc
mov
sbb
int
push
loope
pop
dec
mov
xor
shlb
sub
fnstenv
mov
push
add
pusha
lods
inc
rol
fnstenv
popf
out
fwait
and
push
jb
push
push
fsubrl
add
inc
push
xchg
in
popf
cmp
xlat
leave
inc
pop
pop
cmp
xchg
xchg
jb
pushf
mov
dec
fldenv
in
std
cli
pop
iret
test
mov
inc
imul
cmp
dec
add
sbb
andl
sbb
call
rorb
aam
and
dec
mov
scas
push
xor
movsb
sbbb
push
or
setbe
or
and
loope
andl
int
ljmp
or
mov
and
in
jbe
mov
out
mov
inc
push
ja
cld
mov
jmp
dec
add
daa
xlat
mov
dec
imul
popa
lods
fldcw
mov
mov
mov
lds
aaa
and
push
mov
loope
loope
iret
in
fistl
jg
jecxz
sub
shll
or
outsl
hlt
outsl
jno
inc
lcall
dec
in
lcall
pop
testb
add
inc
aad
movsl
in
inc
fisubl
mov
mov
shll
outsl
or
daa
mov
mov
loop
mov
fsubs
out
pushf
add
cmpsb
sub
mov
mov
cmpsl
aaa
jbe
imul
aaa
mov
bound
mov
popf
jno
gs
adc
mov
push
les
inc
mov
sbb
leave
xchg
gs
pop
test
jge
mov
enter
xchg
iret
repnz
roll
sub
add
scas
jns
ret
mov
out
lock
push
or
xchg
inc
loopne
cld
gs
in
fldpi
pop
jecxz
int
adc
pop
lret
sbb
fwait
and
adc
and
dec
and
jno
lcall
imul
movl
fsubl
loope
pop
and
fadd
xchg
sub
inc
sbb
test
xchg
cmp
lds
inc
mov
adc
popf
jge
loop
sub
lods
fdivs
dec
push
inc
fsts
lods
xlat
sbb
enter
xor
cmp
sub
scas
loop
add
mov
faddp
or
jl
bound
scas
cld
fdivl
sub
lcall
scas
testb
pop
or
notl
cmp
jg
dec
adcb
push
das
inc
enter
fiaddl
push
or
ss
outsl
push
cwtl
push
mov
fs
shll
cmp
ljmp
cmp
mov
scas
add
cmp
push
adc
dec
clc
gs
xchg
xor
cwtl
stos
ret
pop
jns
or
aam
in
jne
insl
mov
insb
subb
mov
dec
dec
inc
add
mov
bound
ror
add
xchg
mov
fs
or
cmc
xor
pop
mov
test
jge
ss
jp
data16
inc
je
cld
jnp
xor
shlb
enter
pop
adc
push
movsb
jnp
push
add
loop
xlat
les
leave
or
xchg
ret
in
pop
lret
out
pop
arpl
xor
stc
popf
sbb
lret
outsb
push
mov
stos
out
cmp
loop
stc
adc
pop
adc
rorb
ret
ljmp
fnstenv
dec
in
mov
mov
mov
cltd
mov
cmp
push
addr16
fwait
dec
fsubl
jecxz
jo
fwait
pop
sub
adc
xor
push
inc
scas
and
mov
nop
pop
xchg
dec
adcb
in
mov
popf
movsb
in
jp
imull
dec
sub
and
cmc
sub
sbb
mov
sbb
or
pop
in
or
xor
jp
xchg
jae
mov
stos
jae
lds
dec
add
push
mov
btr
rolb
xchg
push
andb
pushf
push
jno
add
jle
jnp
icebp
mov
loopne
loopne
mov
sahf
sbb
adc
scas
leave
cmc
push
in
pop
fisubs
mov
xor
call
sarb
test
in
sbb
xchg
cmp
inc
mov
leave
pop
jne
and
jmp
bound
push
dec
mov
aaa
and
and
xchg
cs
jne
inc
pop
shlb
jae
mov
xchg
xchg
or
lret
xor
sub
inc
je
and
lahf
aas
cmp
dec
or
mov
outsl
mov
shll
in
or
adc
fisttpl
shl
cwtl
xor
and
push
dec
xor
mov
dec
int3
xchg
hlt
testb
mov
mov
sub
jb
xor
mov
lods
je
sbb
pop
imul
mov
arpl
sti
nop
decl
rcll
mov
ja
sub
cli
out
fs
and
jmp
inc
pop
add
or
pop
sub
cmp
cmp
push
pop
cltd
pop
jmp
or
xor
ljmp
int
fisubs
or
fstp
pop
orb
dec
rorl
imul
scas
or
sbb
cld
cld
je
xor
imul
push
js
cmp
insl
inc
and
js
mov
push
push
daa
mov
pop
cmpsl
ficomps
in
or
push
or
jmp
inc
gs
lcall
repnz
push
pop
lcall
inc
or
inc
xchg
adc
test
mov
or
pop
dec
lret
xor
push
lcall
daa
push
xchg
mov
adc
cmp
lahf
cmp
and
outsl
mov
jg
pusha
es
mov
add
jmp
xor
mov
jge
mov
iret
mov
xchg
xchg
rorl
sub
jp
out
sti
push
mov
adc
xchg
cltd
mov
out
pop
mov
int
jae
fadds
add
adc
and
xchg
loop
clc
lret
and
lret
mov
jle
call
out
add
repnz
jnp
pushl
sub
inc
push
popf
popa
lods
sbb
ret
mov
loop
mov
sbb
or
xchg
mov
pop
ret
int
pushf
xor
sbb
test
hlt
pop
pusha
mov
pop
mov
mov
es
jne
les
cmp
add
inc
mov
in
vprotq
divb
aam
mov
and
sbb
sbb
fs
cltd
sub
fidivs
sbb
mov
or
dec
enter
or
push
sbb
stos
and
pop
dec
ret
ja
mov
jnp
pop
inc
ret
pop
push
adc
in
xchg
xchg
insb
fisubs
loopne
inc
mov
push
out
pop
sbb
daa
sbb
rolb
inc
jmp
cmc
jg
jne
mov
es
jg
push
or
test
mov
xchg
xor
out
ret
ret
or
cmp
ret
mov
lret
jb
xchg
sahf
movsl
btr
ret
stos
cwtl
jno
dec
cld
ret
mov
push
cmp
push
pop
dec
lods
add
dec
push
jle
je
popa
lock
insl
movsb
inc
jnp
hlt
pop
bound
jbe
pop
fcoms
sar
xor
mov
mov
mov
sbb
jb
mov
hlt
dec
rorb
les
sbb
inc
sub
adc
cs
test
imul
dec
fstl
inc
ret
shll
sbb
pop
ret
stos
mov
mov
sbb
xor
inc
pop
xchg
orl
sub
xchg
scas
insb
loope
imul
jns
pop
in
sub
mov
scas
cmp
jbe
sahf
mov
out
cmpsl
adc
sub
stos
int3
dec
cmp
pop
cld
rcrl
jge
ss
shl
add
ja
mov
sbb
pop
int3
inc
cld
out
popf
adc
aaa
lret
out
mov
lods
mov
mov
mov
jg
lcall
jecxz
push
sbb
jmp
in
rcrb
sbb
sub
jb
lock
xchg
hlt
mov
or
bnd
xor
add
pop
cwtl
aaa
pop
test
adc
lock
mov
adc
and
in
push
sbbb
sbb
arpl
jne
ja
xor
clc
stos
push
mov
or
int
sti
inc
pushf
movl
faddl
ret
cmpsl
mov
popf
dec
sbb
mov
repz
movsb
inc
sets
dec
mov
gs
push
js
add
push
sub
jo
mov
xor
movsb
cld
dec
loopne
movsb
mov
add
mov
cld
jo
jmp
out
xchg
push
imul
stos
arpl
push
lret
dec
mov
cmp
add
pop
pushf
jge
and
or
pop
push
cltd
sub
pop
push
mov
or
stc
push
and
imul
adc
xchg
push
addr16
aaa
push
sahf
out
push
leave
test
sub
leave
mov
sub
cwtl
inc
rolb
loopne
fs
and
jmp
mov
jbe
and
leave
xchg
sub
inc
divl
xor
or
push
dec
nop
mov
cld
push
loopne
sti
jb
and
sahf
mov
cmpb
movsl
je
js
ret
sub
loop
push
mov
repnz
aam
orl
daa
cltd
popf
adc
mov
inc
pop
xchg
or
xchg
jb
stos
mov
jle
mov
jmp
cmp
out
mov
mov
pop
add
adc
movsl
and
mov
mov
orb
inc
inc
mov
fwait
push
insl
std
or
out
mov
xchg
pop
cwtl
daa
and
adc
dec
or
lods
push
mov
cmpsl
lock
adc
dec
xor
push
sub
fwait
dec
leave
cmp
jmp
add
fadds
adc
cmpsl
pop
jnp
movsb
ret
nop
cmp
xchg
mov
jae
dec
sbb
xor
add
or
ficompl
call
rcrb
xchg
push
int
pop
sub
ja
loopne
or
sbb
mov
and
and
js
mov
dec
jne
push
mov
sub
es
cmp
and
pop
push
sub
xlat
stos
shrl
out
cs
adc
mov
add
cmpsb
movsl
stos
dec
dec
mov
notl
ficompl
idivb
addl
xor
das
xchg
or
push
xor
mov
mov
test
aas
dec
and
cmp
jge
mov
and
jnp
or
in
adc
flds
call
xor
mov
in
dec
dec
dec
cmpsl
ret
std
dec
outsb
mov
sub
pop
add
jo
lret
pop
fbstp
lcall
mov
leave
mov
mov
bound
dec
mov
popa
inc
in
cwtl
cmp
lret
adc
in
data16
cmpsl
out
or
pusha
shrl
sbb
jp
int3
fildll
mov
or
pop
test
mov
mov
jmp
bound
outsb
jb
sub
fiadds
jge
in
pop
jo
xchg
or
push
sbb
add
push
dec
mov
dec
pop
push
push
fs
mov
mov
lods
xor
mov
cmp
fcomps
jno
inc
pop
cmpsb
mov
sub
popf
cmp
cld
js
scas
mov
jns
sarb
in
dec
pop
call
adc
dec
mov
cmp
mov
je
cmc
fimull
adc
pop
or
pop
mov
cmp
lds
daa
das
cmp
xchg
mov
fxch
fwait
aam
scas
bound
dec
daa
mov
adc
loop
xor
movsl
mov
inc
fwait
inc
outsl
or
stos
jne
es
mov
cmp
pusha
popa
fbld
push
enter
or
call
clc
or
adc
icebp
das
and
enter
sub
push
mov
scas
cmp
popa
jae
dec
push
xchg
jle
subl
xor
mov
pushf
pop
cmp
mov
mov
inc
cmp
sarl
test
or
push
icebp
es
dec
mov
mov
arpl
sub
pop
decb
or
lock
movhlps
cmp
es
ret
lds
ret
je
xor
mov
movsl
fadd
repnz
or
dec
cld
lds
jp
xchg
lcall
adc
hlt
dec
mov
pop
and
inc
jns
imulb
push
es
repnz
adc
fistps
pop
test
cmc
mov
movsb
mov
xchg
or
int
cs
bound
shlb
or
shrb
and
bsr
iret
and
mov
push
cmpsb
out
sub
cmp
imul
shll
in
dec
xor
sti
pop
addb
or
ss
push
mov
xchg
popf
test
rcll
adc
out
cli
dec
shlb
xchg
inc
mov
mov
add
pop
xchg
sub
imul
jo
inc
add
mov
mov
ret
addr16
roll
add
sub
push
cmpps
test
je
mov
mov
inc
icebp
inc
push
xchg
jb
fiadds
sbb
lcall
hlt
mov
jp
sbb
mov
or
xor
stos
ret
leave
pushf
les
add
mov
mov
push
pop
imul
pop
test
andb
popa
mov
in
je
inc
or
aam
inc
sub
in
addb
mov
dec
pop
cmp
outsb
cs
sub
test
es
jle
fstpl
dec
adc
mov
cmp
int3
cmp
addr16
cltd
bound
cmp
pop
fistpl
inc
aam
jbe
mov
insl
jge
adc
test
xchg
mov
insl
mov
sbb
bound
add
scas
nop
imull
es
add
pusha
mov
dec
sub
cmp
ficoms
sahf
hlt
and
test
call
jo
int3
pop
loop
sub
xchg
add
jbe
loopne
push
nop
jmp
cwtl
leave
jno
xor
xchg
push
cmp
icebp
lea
pop
ds
mov
xchg
mov
incl
ljmp
mov
scas
jno
test
xor
push
imul
pop
in
sub
pop
repnz
add
dec
scas
lcall
push
jp
adc
jle
lods
mov
xor
add
cmp
mov
sub
jecxz
sbbb
cltd
cmp
pop
ffreep
sub
jno
pop
fbstp
sbb
mov
push
and
mov
mov
mov
std
adc
out
mov
xor
mov
aaa
push
sbb
fcompl
jo
and
adc
mov
lcall
cmpsl
stos
and
mov
repz
push
aad
sbb
mov
mov
cmp
cmp
rcl
cmp
out
ja
add
xchg
push
fisttpl
push
lods
cmp
repz
pop
adc
jbe
dec
aam
jae
xor
mov
std
mov
xchg
dec
or
xor
dec
movsb
jne
push
cmpsb
lds
pop
aad
inc
in
mov
mov
xchg
icebp
daa
clc
add
les
adc
movsl
lods
cmp
sub
cmp
dec
sub
bound
test
std
daa
call
jb
sub
cwtl
stos
add
test
adc
loopne
mov
inc
dec
or
inc
fwait
and
addr16
adc
pop
sti
ss
adc
adc
shlb
shl
dec
mov
inc
testl
lods
insl
lods
roll
mov
push
xchg
pop
push
jno
add
pop
lahf
sub
mov
negl
aas
enter
ja
mov
lds
std
or
faddl
orb
xor
les
jle
mov
aas
out
or
ljmp
iret
addl
add
push
push
sti
or
mov
and
in
icebp
out
inc
mov
dec
mov
call
addr16
inc
iret
in
lea
mov
sarl
fs
xchg
addr16
push
xor
jne
mov
add
hlt
mov
mov
mov
pop
test
push
decb
jne
ss
mov
pop
xchg
jns
arpl
out
inc
movsl
adc
stos
ja
rcr
jmp
pop
and
adc
addr16
enter
mov
aaa
bound
push
loop
cmp
push
insl
fs
addr16
mov
repnz
outsl
fnsave
sahf
or
stos
int3
mov
frstor
add
push
xchg
cli
insl
push
or
fwait
push
sbb
mov
fstps
cli
mov
int3
jg
sbb
jo
mov
pushf
inc
lock
inc
montmul
cmpsb
inc
push
adc
pop
adc
mov
cmp
xor
scas
sub
sbb
scas
mov
test
mov
icebp
and
xchg
cmc
mov
dec
or
icebp
call
add
push
cmp
outsb
cmp
sub
aaa
cs
mov
cmp
mov
rorb
cltd
mov
xor
mov
aas
xchg
scas
es
mov
in
pop
into
push
or
add
cmc
mov
leave
scas
cmp
push
mov
dec
ficompl
fs
lods
popa
dec
lahf
cwtl
inc
sub
lods
cmp
arpl
test
add
gs
stos
xor
mov
dec
dec
insl
mov
jbe
mov
xchg
jge
int3
xchg
add
popa
adc
pop
mov
out
and
xchg
in
cmp
js
or
or
movsb
and
je
sbb
jnp
add
fdivrs
lock
push
jo
mov
sbb
or
xchg
lock
jg
std
cltd
lods
adc
sub
xor
outsl
loope
adc
mov
and
inc
cmpsl
mov
or
jge
stc
jo
dec
orl
fcomps
push
test
jns
cmp
jo
loopne
clc
outsl
subl
and
shll
jge
dec
dec
stc
cmpsl
xchg
ret
shll
cld
movsl
cwtl
test
shll
or
adc
dec
clc
int
mov
mov
sbb
js
popa
cli
jl
dec
inc
push
fs
mov
andb
lods
cmc
dec
mov
adc
shrl
xor
shlb
push
mov
mov
es
cld
push
cli
sti
push
xchg
sahf
cld
jbe
push
cmp
cwtl
lea
insb
inc
aaa
in
mov
les
insl
add
or
dec
add
xor
mov
je
mov
fwait
jg
fildl
fucom
aam
movsl
mov
cvtps2pi
mov
inc
cvtps2pi
dec
shll
adc
cmpb
iret
in
mov
sti
mov
inc
addr16
popf
adc
xor
fs
dec
mov
jne
loope
repnz
add
xchg
xchg
mov
push
pop
lret
ficoms
cwtl
fisubs
mov
stc
lahf
xor
fisubrs
jmp
subb
cmpb
xchg
cmc
sti
ret
and
ljmp
mov
decl
mov
and
mov
in
mov
add
stos
xor
xlat
push
adc
call
pop
cmp
and
sahf
jo
inc
inc
push
sbb
inc
lahf
push
xchg
and
ss
cli
das
add
or
push
lods
es
push
mov
pop
mov
into
in
repnz
push
mov
inc
jno
jae
cltd
adc
loope
pop
add
ret
and
fwait
or
adc
jo
es
shlb
cmp
les
fsin
inc
jb
pop
mov
out
xor
mov
subb
subb
push
out
mov
and
dec
dec
addr16
fidivl
sahf
imul
lock
push
cmp
mov
jge
sbb
jo
aad
call
pop
xor
inc
dec
jmp
cmp
mov
repz
push
mov
cltd
adc
orb
test
leave
js
jmp
es
sbb
addr16
andb
jl
lods
adc
jmp
xchg
popa
test
fcmove
push
pusha
fcompl
pop
or
jnp
cwtl
cmp
xor
cmp
aas
xchg
lock
les
stc
nop
lcall
out
out
ljmp
inc
lret
rsm
or
cs
lret
and
dec
mov
nop
inc
test
jmp
rcrb
or
leave
add
cs
cmp
push
push
ret
cltd
sub
ljmp
xchg
adc
sub
subb
aaa
test
std
lahf
mov
inc
aam
aas
cmp
inc
inc
cmpb
add
ja
push
loope
jge
addl
jp
xor
js
lahf
push
ja
repnz
lahf
into
inc
sti
fcmovb
mov
fnstsw
push
push
mov
out
xchg
adc
shr
and
outsb
shl
fbstp
jo
inc
movsl
mov
ret
sub
fdivs
xchg
jecxz
int3
ds
outsl
push
ret
inc
mov
mov
insl
or
pop
aaa
icebp
mov
cmp
popf
cmp
add
push
adc
test
outsb
je
mov
sub
jmp
xchg
out
lret
lret
pop
mov
sbb
lods
outsl
or
adc
jbe
mov
cmc
cltd
dec
enter
or
cltd
jne
arpl
inc
inc
shlb
add
mov
enter
shlb
arpl
int
cld
jnp
adc
jbe
and
xor
inc
jnp
dec
aas
mov
jne
jle
pop
ja
ja
jo
inc
mov
pop
push
addr16
xor
xchg
daa
push
nop
outsb
dec
xchg
mov
push
push
mov
rorl
popa
fadd
sbb
stos
ret
and
xor
jnp
subb
sub
mov
jmp
loope
dec
xchg
pop
leave
mov
imul
mov
inc
shlb
add
add
dec
jecxz
ret
sub
stos
cmc
bound
sub
mov
mov
int
push
enter
imul
lds
je
lea
jae
or
add
cmpsl
mov
push
xor
nop
lret
cmpsl
sub
xchg
add
dec
stos
adc
in
mov
test
addr16
movswl
sbb
dec
out
cmp
dec
aaa
rcll
jo
fbld
shlb
fcoml
scas
addl
nop
stos
add
push
cmp
inc
scas
pop
repz
fld1
xor
daa
adc
mov
jg
adc
and
dec
xchg
cmp
inc
fisubl
aad
enter
mov
mov
mov
es
mov
pop
clc
cmp
shll
iret
popa
fidivl
push
div
jmp
push
add
gs
testl
jno
imul
fimull
je
mov
inc
and
sbbl
mov
pop
popf
leave
popf
cmp
stc
sub
fdivrs
in
movsl
aad
mov
add
adc
pop
mov
mov
daa
xlat
pop
lods
pop
add
out
push
repz
popf
inc
nop
int
out
mov
mov
jg
aad
test
jg
pop
iret
mov
inc
and
push
fwait
ret
pop
push
lock
xchg
xor
jge
faddl
jb
lock
fwait
inc
mov
scas
out
dec
aaa
sbb
mov
aad
jp
pop
inc
xor
call
lods
out
inc
test
stos
cmp
call
mov
pop
lods
daa
or
arpl
sbb
and
mov
and
cmc
flds
cwtl
lret
push
stos
lods
in
push
xchg
idivl
mov
into
mov
vpsubsw
daa
jno
or
stos
sbb
dec
adc
in
sbb
int3
xchg
inc
loope
dec
sbb
lahf
pop
mov
push
jnp
xlat
push
lods
or
int3
add
sahf
cmp
jae
in
xchg
repz
ja
repz
repz
xchg
out
leave
insb
out
aam
out
aad
dec
addl
jbe
addl
js
decb
adcl
dec
rolb
jge
jl
outsl
cmpsl
mov
jbe
adc
and
popa
imul
cmp
lret
sub
lock
pop
mov
jecxz
je
mull
sarl
mov
shr
out
push
add
push
push
cmp
mov
or
int3
insb
mov
jne
xchg
mov
and
jnp
loop
cmc
lods
adc
pop
outsb
pop
push
mov
lods
xchg
sbb
stos
mov
jecxz
sub
fisttpll
and
cwtd
ret
pop
test
mov
test
sub
outsl
arpl
jnp
mov
sub
fimull
xchg
cmp
jb
push
add
out
fbstp
and
fwait
outsl
mov
cmpsl
pop
ret
sbb
push
cs
mov
ret
ljmp
jl
int3
or
cltd
icebp
add
lcall
fdivrp
mov
cmp
fs
movsb
sbb
shll
adc
hlt
pop
inc
jle
jecxz
sub
jge
or
pusha
and
xchg
loopne
push
add
in
inc
cmp
pop
jg
test
or
mov
loopne
int3
sbb
movsl
scas
or
or
fwait
in
add
in
lahf
or
ss
loope
shl
and
mov
inc
mov
sub
sbb
lahf
inc
and
inc
mov
add
movsl
mov
lock
xchg
add
and
sbb
jbe
jmp
sbb
lods
or
imulb
inc
js
cmc
out
xor
cmp
fsts
sbb
inc
loopne
add
rcll
test
mov
movsb
rcll
mov
sti
fdivl
dec
aaa
cmpsb
push
imull
cmp
repnz
inc
rcrb
out
fstps
xchg
mov
popa
scas
mov
icebp
xor
jno
repnz
out
jno
aad
and
and
mov
jmp
movsl
pop
into
mov
psllw
addb
jecxz
mov
dec
out
iret
mov
mov
adc
inc
pop
or
inc
hlt
or
add
xor
pop
loope
aaa
dec
push
jns
test
shrl
mov
push
pop
fldcw
pop
cmc
xchg
lcall
mov
ja
test
adc
mov
popa
push
mov
iret
push
fs
push
or
pusha
sub
adc
outsb
jae
inc
push
push
mov
nop
and
mov
xchg
out
cmp
loopne
and
dec
dec
xchg
push
pop
jnp
adc
inc
inc
xchg
inc
and
adc
jecxz
inc
repz
and
fistpll
pop
cs
lahf
jne
sub
in
cltd
test
lcall
jb
ret
icebp
jae
pop
outsl
stos
pop
out
movsb
sbb
cmp
mov
not
mov
mov
sub
mov
jae
xchg
push
lret
jmp
sarl
mov
test
inc
inc
dec
lea
rcrl
sub
xor
dec
hlt
mov
mov
cmp
mov
stos
inc
mov
scas
das
sbb
push
out
sbb
sbb
mov
mov
inc
inc
cmpsb
ret
ja
jnp
mov
mov
push
loope
pop
mov
test
icebp
sub
pushf
out
mov
push
in
inc
pop
inc
popw
jg
popa
lret
pcmpeqb
xchg
jo
sbb
xor
imul
jge
in
jae
xlat
test
icebp
pop
scas
mov
mov
aad
or
xlat
ljmp
outsb
inc
popa
jmp
out
mov
and
xchg
daa
negl
popf
adc
pop
stos
pop
and
xchg
loop
inc
sahf
int3
xchg
lret
hlt
sbb
popf
jge
mov
jbe
cwtl
mov
sbb
mov
es
xchg
ss
fisubrl
mov
sub
imul
xchg
mov
xor
test
mov
mov
shll
inc
push
lahf
jns
jge
jno
insb
mov
sub
cmp
mov
stc
icebp
adc
add
arpl
jmp
jmp
mov
mov
xchg
int
lahf
out
das
pop
aas
gs
jns
push
popa
ficoms
lcall
stos
jne
lcall
mov
add
fcoml
sbb
lock
pushf
sub
push
cltd
test
push
fcoml
out
dec
push
push
cmp
pop
push
int3
dec
xchg
out
adc
cmp
sub
ret
ret
cli
mov
or
mov
xlat
popa
pushf
jo
in
pop
stos
push
push
cmp
and
jle
je
sub
bound
dec
scas
xor
and
mov
dec
mov
cmpsb
jns
sub
adc
in
mov
mov
mov
push
shll
gs
mov
pop
mov
push
repnz
sub
lods
mov
daa
xor
cltd
sbb
pop
orb
mov
inc
xor
xchg
test
xlat
xchg
pushf
jmp
test
xchg
jecxz
and
jno
test
mov
xchg
fwait
sub
rorb
mov
xor
cmovns
dec
push
enter
jecxz
cmpsb
cmp
cld
pop
fwait
inc
jp
mov
mov
or
setl
mov
mov
and
jecxz
pushf
rclb
adc
pop
push
sub
dec
add
sub
inc
sahf
das
push
mov
xchg
push
in
loope
jecxz
push
xor
sub
dec
adc
and
jle
das
adc
cs
adc
gs
xchg
pop
jmp
mov
cmp
lods
cmpsb
test
dec
popf
adc
pop
imul
mov
mov
fistl
insl
ss
mov
sub
aaa
dec
frstor
pusha
adc
cld
ds
div
xchg
mov
mull
mov
out
nop
ds
dec
lret
scas
mov
adc
and
jne
push
mov
dec
in
aaa
pop
in
dec
sti
ljmp
mov
mov
and
cmp
push
int3
and
repnz
sub
add
pushf
xor
scas
mov
fwait
pushf
addb
pop
adc
pop
dec
sbb
mov
inc
mov
and
adc
mov
ljmp
out
idivb
cmp
divl
push
sti
in
add
or
repnz
push
mov
sub
js
js
inc
mov
daa
xor
cmp
test
adc
xchg
or
arpl
loop
push
insb
stos
aas
jp
pusha
dec
js
dec
jbe
jb
out
faddl
ret
dec
leave
jl
cltd
gs
ljmp
ret
mov
ret
xor
mov
stc
pop
sbb
movsl
pop
pop
sbb
cmc
adc
mov
cmp
out
push
xchg
arpl
outsl
dec
mov
xchg
jne
iret
rcl
loope
lds
shll
lock
jo
shlb
mov
fwait
jge
call
test
mov
add
movsb
push
pop
into
adc
es
out
rol
mov
outsb
pop
push
pop
cmc
cmpsl
jno
sbb
lcall
mov
rolb
sub
ljmp
adc
and
daa
and
jbe
lahf
inc
loope
jae
subb
into
push
mov
pop
add
mov
imul
stos
sub
popa
das
in
jno
xor
popa
cltd
pop
or
dec
jecxz
sbb
add
fisttpl
cmp
push
jmp
outsb
add
and
std
mov
mov
dec
je
jecxz
decl
mov
mov
aas
sub
jp
cli
loopne
add
unpcklps
test
lea
cltd
and
pop
gs
enter
ficoml
sbb
and
adc
inc
xor
ja
pop
lods
jecxz
addr16
mov
push
sub
jno
cs
aaa
cmpsl
push
cmc
cmp
fmull
pushf
arpl
hlt
out
fmul
leave
and
repz
fbld
jnp
setg
sbb
jp
jp
fists
mov
or
mov
xchg
and
or
dec
mov
jg
adc
or
outsb
jo
pop
fnstenv
nop
popa
push
in
insl
inc
mov
pushf
pop
sub
dec
out
in
sbb
aaa
push
out
or
mov
mov
mov
or
push
and
jge
enter
or
fcmovnbe
push
loope
mov
adc
mov
or
or
mov
les
outsl
movsb
jp
adc
roll
fildl
bnd
in
push
movsb
aaa
dec
addr16
lret
aas
pop
mov
shll
pop
sub
xor
push
dec
imul
add
push
in
out
fcomp
inc
rcll
inc
notb
adc
pop
negl
not
inc
adc
insb
and
and
shl
fcmovnbe
and
add
xchg
xchg
sbb
aas
xchg
xchg
loop
stc
push
sub
push
adc
push
jbe
inc
mov
adc
jae
das
aad
pop
es
sti
andb
dec
xchg
pusha
mov
push
jmp
pop
adc
xchg
leave
inc
scas
pop
mov
int3
aaa
scas
dec
es
lods
jle
dec
inc
pop
mov
push
rcrl
movsb
lea
lret
pop
sub
insb
lods
in
adc
fldcw
bnd
pusha
xor
int
fucomp
sub
push
sbb
sub
inc
fsubrl
repz
cmp
mov
cmpsl
lcall
sub
fstpt
push
loop
push
xchg
mov
push
mov
xchg
push
adc
inc
mov
iret
daa
nop
scas
sbb
xchg
cmp
inc
outsb
out
and
out
lea
push
rorb
cmpsl
ja
hlt
xchg
sbb
pop
push
ret
or
jne
mov
pop
cld
inc
mov
pop
lods
out
sub
xchg
mov
push
xor
es
dec
cmp
jmp
sti
rorb
jl
mov
add
emms
xor
ds
push
cmp
push
jb
push
jo
roll
dec
pop
in
jecxz
lea
mov
or
lcall
sbb
movsb
ret
pop
or
cwtl
jnp
jns
jmp
mov
cmp
stc
fwait
push
cmp
out
sub
mov
add
pop
push
in
call
rorb
jmp
cmpsb
ror
ljmp
mov
lret
xchg
loop
lret
jne
fnstsw
js
test
pop
cltd
inc
add
or
dec
xor
mov
push
testl
xchg
pop
subb
test
iret
mov
pop
mov
and
ja
xlat
jp
testb
add
mov
dec
pop
gs
aad
push
jge
sbb
push
cs
daa
push
mov
cli
adcl
sbb
ss
jp
pop
inc
xor
aam
or
push
pop
push
clc
outsb
jg
lock
mov
pop
pop
xchg
mov
pop
pop
in
popa
loopne
jo
gs
gs
or
jg
adc
dec
sbb
lods
xor
push
inc
inc
add
push
test
mov
fs
cmc
shll
sbb
in
jno
loopne
push
push
adc
sbb
loopne
out
lock
bound
pusha
xchg
loop
inc
notl
imul
outsl
mov
sub
scas
arpl
push
int
adc
jo
push
loope
sub
xchg
mov
jg
andl
cmpsl
mov
std
roll
and
mov
int
addl
dec
mov
and
gs
dec
stos
in
jp
mov
ljmp
ds
je
add
push
scas
mov
add
ljmp
push
mov
and
lods
jecxz
std
cmp
add
push
out
pop
rcrl
push
jbe
mov
sub
orb
fcmove
xchg
sub
xor
mov
xchg
jge
inc
adc
sbb
and
push
adc
loopne
jl
rcll
mov
out
gs
data16
mov
push
jae
lahf
or
rol
pop
gs
cmc
cmp
xor
add
int3
mov
je
pop
push
xchg
dec
mov
jnp
inc
lods
and
and
icebp
shr
cmpsl
pop
push
out
pop
loopne
mov
clc
sub
loope
daa
jmp
mov
and
stos
mov
cld
das
lcall
sbb
dec
fistl
xchg
iret
cmpb
das
jg
fsubs
in
insl
mov
loope
jae
inc
nop
fstpl
sub
imul
and
jg
pop
dec
jae
sub
cmp
ret
pop
popf
mov
jg
pop
push
fcmovnb
test
test
cwtl
scas
mov
or
add
add
imul
cmp
and
cltd
icebp
cmp
loope
and
test
loop
push
rcr
jl
hlt
or
jae
xlat
insb
add
push
ud2
mov
stos
lea
cmp
mov
push
adc
push
imul
mov
or
sub
lret
xchg
enter
test
and
pop
cld
sub
mov
sbb
mov
test
imul
mov
dec
mov
aam
std
cmpsl
mov
xor
jl
cs
arpl
jne
cmp
xchg
sbb
inc
xchg
cmpsl
test
aas
mov
xor
pop
aaa
test
cmp
daa
add
pop
cs
xor
lea
shlb
mov
lods
nop
aas
xchg
ss
cli
ret
mov
inc
lret
adc
je
or
rorl
fidivs
mov
jae
les
test
cmpsl
cwtl
and
inc
test
sub
bound
or
sahf
xor
hlt
cwtl
sarl
push
out
mov
pusha
push
cld
jns
xor
jo
fcoml
in
lahf
inc
add
push
fmull
or
push
push
mov
pop
rcrb
sub
xchg
cmc
pusha
je
scas
xor
loopne
aaa
cmp
cmp
cmp
adc
add
cld
or
pop
jp
pop
inc
jecxz
nop
sbb
shll
and
pop
mov
std
ss
clc
sub
add
imul
negb
jge
cli
and
pusha
cmp
mov
mov
xchg
js
push
outsl
jbe
mov
pop
repnz
mov
sub
insb
pop
insb
sub
sbbl
xor
xchg
cmp
and
jmp
cmp
pop
andl
jge
mov
push
clc
fdivr
and
push
fwait
aam
cltd
push
jb
mov
or
adc
aam
lods
xor
pop
std
nop
pop
lods
cmp
inc
jmp
enter
loope
pop
sub
mov
mov
inc
cmp
lds
jle
cmpsl
sbb
mov
scas
sbb
scas
jae
data16
test
lcall
das
xor
jmp
mov
mov
fldl
mov
xchg
leave
int
xchg
pusha
mov
aaa
and
add
gs
arpl
movsl
outsl
adc
cltd
add
pop
mov
int
or
movsbl
inc
in
xlat
cmp
xor
push
faddp
ljmp
xor
iret
fisttpl
sub
inc
inc
testl
orl
adc
fidivs
dec
inc
loope
xchg
hlt
mov
mov
xlat
inc
sarl
gs
push
loope
xlat
int3
jp
loop
jmp
sbb
mov
decb
jp
icebp
dec
xchg
js
dec
das
out
std
repz
movsl
ret
cmp
test
loop,pt
pop
mov
addr16
push
enter
mov
or
add
inc
inc
inc
mov
xlat
xchg
dec
push
push
dec
dec
call
pop
cltd
aas
jb
lcall
add
insl
or
sbb
sbb
cltd
dec
fwait
cmp
cli
mov
jb
fidivl
cli
xor
add
pop
jecxz
inc
and
cmp
fldenv
loop
push
dec
and
inc
test
push
pop
loope
fcmovnb
jp
inc
and
pop
jmp
cmp
push
aad
fisttps
dec
loop
xchg
dec
add
lds
nop
loopne
pushf
mov
lods
aad
mov
xchg
mov
lea
lret
fdivs
clc
test
jl
push
xor
mov
pop
dec
cmp
mov
push
lock
fcmovne
mov
lahf
movsl
rcll
in
pop
cmpsl
inc
aaa
push
or
pop
jp
and
cltd
push
or
stos
push
sti
jb
imull
mov
pop
cmp
je
test
push
loope
idiv
inc
xor
add
cld
lret
lcall
fwait
push
push
xchg
out
xchg
lods
add
call
stos
rclb
call
outsl
outsl
imul
inc
add
sahf
add
sar
mov
je
insl
pop
push
les
adc
rclb
jmp
fldl
xor
cmpsb
out
fstps
mov
sbb
rcrl
popa
into
inc
push
push
test
mov
xchg
jp
stos
sbb
push
aad
lea
dec
xchg
jg
mov
adc
xchg
jno
lods
push
xor
cmp
dec
xor
xchg
insb
cli
in
insb
addr16
jecxz
stos
mov
add
pop
outsl
lds
jp
repnz
int
mov
sbb
inc
push
jp
inc
inc
loope
or
xchg
mov
sub
xor
test
popf
dec
mov
and
mov
jne
jle
push
fidivrl
push
mov
je
lods
in
push
push
pop
cmp
jbe
mov
sub
xchg
push
mov
ljmp
incb
testb
filds
ret
adc
pop
neg
mov
shlb
ss
repz
aad
mov
lret
xor
pop
push
push
outsb
pop
dec
and
andl
in
sbb
pop
call
add
sub
test
fwait
and
lahf
loope
fwait
jno
inc
add
mov
dec
inc
test
pop
into
adc
pusha
stos
dec
mov
add
cli
pushw
push
insl
fwait
and
and
xchg
pop
and
xchg
leave
mov
loope
push
sbb
add
dec
push
inc
dec
int3
stos
aad
or
mov
or
repnz
mov
jp
loope
or
test
or
xchg
cmp
movsl
stos
push
sub
push
dec
lret
shrb
lahf
and
hlt
das
sbb
jne
and
jg
test
jns
rcrl
push
into
xor
push
adc
shl
gs
inc
mov
aas
jmp
mov
dec
mov
fistl
dec
push
lahf
push
and
data16
cmp
adc
fucomp
mov
xor
or
pushf
stos
imul
sub
pusha
push
push
ret
ja
fdivrl
mov
cmpsl
lcall
jae
andl
aad
mov
xor
movsb
lret
pop
pop
mov
les
push
and
or
fidivrl
cwtl
push
push
mov
inc
xor
insl
xchg
cmpsl
mov
xor
mov
adc
xlat
push
mov
clc
jg
in
cmp
call
sbb
divl
lret
mov
ds
sbb
dec
addl
sbb
subl
or
scas
inc
add
push
loope
pop
or
lret
sub
pop
and
and
adc
popa
pop
dec
pop
cmp
dec
sbb
cmc
and
addl
pop
inc
mov
stos
icebp
out
mov
xor
sbb
in
mov
and
gs
aas
pusha
fs
dec
mov
mov
je
xchg
xor
das
jnp
rolb
movsb
dec
fs
je
test
xchg
sbb
test
mov
shll
fcomps
cmp
mov
arpl
mov
sub
ret
mov
add
xor
stos
dec
es
aad
nop
imul
xor
pop
int
pop
sub
es
popf
or
inc
sbb
fsubrs
int3
cmpsb
test
mov
aaa
jge
pushf
rolb
and
cwtl
dec
scas
mov
sub
lret
aam
pop
sbb
push
neg
repnz
scas
imul
dec
push
mov
cmp
push
jge
je
mov
mov
jne
sub
cli
rcll
pop
pop
jg
outsb
xor
cltd
dec
jno
mov
bound
mov
call
xchg
push
aad
push
push
insb
sbb
scas
lods
add
jg
pop
mov
add
cmc
adc
sbb
inc
es
cmpb
rcrl
in
jae
pop
xchg
pop
push
lea
mov
jmp
mov
xor
insl
je
adc
popf
cli
push
mov
fistpl
sub
xchg
xchg
xchg
scas
sbb
in
ficoms
mov
sbbl
test
fcmovne
xchg
xor
outsb
mov
or
adcl
fwait
std
clc
cmp
mov
pop
std
loopne
mov
dec
xor
hlt
push
sub
roll
xor
mov
fldl2t
sbb
mov
sbb
cmp
lods
fiaddl
push
shrb
jmp
int3
insl
inc
pusha
xor
into
mov
push
std
and
in
in
inc
cmp
jg
xchg
in
mov
jns
dec
add
xchg
cmpsb
es
sbbl
push
mov
testl
bound
cmpsb
negl
jns
xchg
imulb
in
push
imul
lock
lahf
imull
je
lea
xchg
nop
repz
test
jg
push
push
xchg
cmp
sahf
mov
mov
scas
cmp
pop
push
addr16
push
inc
cmp
hlt
and
mov
jle
or
clc
ficoml
xor
jo
iret
je
xchg
dec
mov
pushf
adcl
sub
cmp
jnp
xchg
mov
jmp
mov
inc
ss
cli
push
pop
mov
and
sub
push
jnp
ss
push
pop
jae
add
jmp
in
sub
add
fistps
jl
das
dec
lahf
inc
pop
mov
inc
lods
repz
lods
cmc
cmp
gs
int
xor
pop
sub
dec
sbb
in
lock
lret
lahf
lret
pusha
lcall
inc
subb
lock
outsb
xchg
pop
aaa
rcll
daa
mov
pop
loop
push
add
mov
out
into
inc
xchg
inc
mov
mov
pop
popf
cmp
mov
jo
arpl
inc
jbe
addr16
jl
mov
fdivs
insb
cmp
jmp
ret
jle
scas
mov
aaa
and
sahf
sub
ds
and
xchg
pushf
ss
enter
push
data16
and
xchg
fsubl
sbb
and
popf
xchg
sub
fidivrs
mov
xchg
in
push
pushf
ss
pop
xor
add
lods
sub
xchg
lock
lahf
mov
cs
divb
cmp
adc
scas
mov
pop
jnp
mov
fidivrs
mov
lods
mov
shlb
jno
mov
js
rcrl
ror
jbe
adc
cs
jo
mov
mov
mov
jnp
mov
xchg
stos
adc
jge,pn
lret
fcoml
inc
out
dec
push
mov
cli
int3
cltd
xchg
cmp
push
adc
mov
jnp
shrl
add
dec
ror
loopne
mov
or
jle
pop
add
cltd
mov
and
sbb
lahf
in
iret
addr16
aam
call
mov
sub
cmp
cwtl
scas
adc
and
lds
ficomps
leave
enter
lock
xchg
data16
xchg
mov
sub
mov
pop
sub
mov
cs
pop
sbb
add
decb
inc
movsb
fadds
mov
mov
test
push
xchg
xor
popa
pop
mov
pop
jo
mov
cmpsb
inc
dec
ret
lahf
jae
adc
mov
dec
xchg
test
xchg
cmp
cmp
xor
mov
cmp
inc
inc
cs
xchg
repnz
in
aam
les
jmp
mov
sub
push
cmc
lret
ss
xor
xchg
and
mov
lcall
mull
aas
aaa
jl
shlb
pop
and
pop
icebp
pop
add
jns
mov
mov
mov
jp
lds
sar
push
js
xor
xor
jp
shrb
popf
ja
icebp
es
push
jo
sbb
mov
into
ljmp
loopne
adc
add
dec
xchg
aad
lret
cmp
fs
cmp
jl
imul
into
add
push
test
fdivs
sbb
fiaddl
xchg
outsl
fwait
xchg
ja
push
enter
inc
stos
iret
sti
sbbl
xchg
data16
les
es
jmp
test
xchg
movsl
xor
iret
or
ja
sbb
mov
test
call
or
fisttpll
cmp
insb
je
cs
insb
je
clc
fdivl
cmc
les
push
xor
dec
clc
aad
jb
fwait
add
pop
cmp
mov
lock
and
fidivrl
adc
movsl
mov
mov
enter
popa
push
es
cmp
add
adc
inc
shr
xor
mov
cmc
mov
add
pushaw
ja
add
sahf
nop
mov
mov
lock
out
das
sub
xor
jl
dec
cmpsb
xor
cmp
cmp
cmp
mov
push
out
xlat
cmp
das
adc
mov
xchg
pop
movsl
int
icebp
adc
fldt
sti
cmp
sub
out
mov
pop
add
in
daa
push
cmp
or
push
mov
ret
or
test
xor
loopne
dec
mov
xor
aaa
xchg
shr
rcrl
int3
std
add
sbb
loopne
mov
int3
mov
sbb
fcmove
sub
mov
sbb
cmp
and
mov
les
sbb
pop
out
fsubrp
loope
scas
pop
jmp
insb
or
fucomi
fs
icebp
xchg
sub
pop
add
daa
sub
add
test
shlb
inc
mov
rcll
int
or
jns
jp
dec
test
dec
dec
ss
shrl
clc
push
ljmp
call
mov
movsb
mov
stos
lds
xlat
iret
loopne
das
and
inc
push
and
out
int
ljmp
shrl
es
fmuls
imul
push
xchg
cld
leave
xchg
and
test
insb
cwtl
pop
jnp
mov
adc
xchg
jbe
or
adc
jae
cmp
test
xor
popf
mov
fbld
push
sbb
loope
arpl
lret
sbb
or
data16
aaa
xlat
addr16
mov
fists
sbb
cmp
lods
push
sbb
fwait
xor
sbb
sahf
mov
pop
jo
mov
add
xchg
mov
in
mov
cmp
pop
dec
fsubrs
cld
cmp
addr16
bound
hlt
dec
and
ss
movsb
dec
in
aad
push
dec
inc
sahf
in
mov
loopne
jge
out
inc
arpl
fwait
xchg
cmp
popa
std
ds
ret
or
push
dec
scas
daa
add
mov
adc
dec
rolb
add
and
jb
inc
xor
cli
and
dec
add
mov
sub
cld
cmp
lret
jmp
sahf
push
xor
xlat
mov
jb
daa
lock
dec
iret
stos
or
pop
lahf
ja
lret
iret
cmp
push
sahf
shlb
jmp
jge
xchg
fs
data16
mov
les
outsb
inc
push
push
cmp
sbbl
jg
inc
gs
ret
popa
fnstsw
aad
lret
jnp
sbb
gs
adc
outsb
jns
lahf
jbe
push
loop
cld
mov
pop
popa
mov
push
cmp
hlt
pop
call
inc
push
mov
in
call
std
call
push
popa
mov
pusha
je
lds
xchg
mov
mulb
xchg
jae
and
or
aas
out
dec
out
out
pop
hlt
xor
add
xchg
cltd
into
or
lods
sub
jle
lds
cmp
pop
lahf
sbb
in
push
fldenv
rorb
stos
repnz
dec
xlat
scas
dec
mov
push
xor
mov
movsb
xchg
mov
pop
int
sbb
pop
aas
inc
push
mov
jbe
sbb
jbe
add
rcrl
lcall
push
add
and
mov
das
scas
mov
xchg
and
xchg
mov
jae
imul
xor
xchg
mov
shrb
fs
inc
les
cmp
or
inc
int
push
sbb
in
lock
mov
jle
scas
sub
popf
stos
mov
lods
dec
xchg
mov
in
jge
int3
xchg
sbb
data16
or
jns
jp
cmp
jecxz
rcrb
lods
cmp
andb
loope
fmul
xor
cmp
mov
cmp
add
jo
cltd
mov
or
mov
jno
fdivr
mov
push
daa
in
dec
add
loope
mov
cmc
pop
sbb
mov
ds
fcompl
insb
xchg
add
mov
pushf
xor
cmp
lcall
inc
popa
cmpsb
sub
sub
sub
lods
xchg
cmpsb
push
sbb
jno
scas
cmpl
stos
inc
push
mov
test
lcall
xor
add
sahf
push
xor
mov
mov
xchg
xchg
roll
scas
push
and
add
sahf
sub
vmovmskpd
jo
mov
sub
sbb
jb
fsubp
mov
ret
scas
xchg
fnstcw
xor
xchg
jo
push
aaa
test
into
mov
pop
roll
enter
mov
outsb
movsb
je
jge
jb
stc
xor
cld
cli
sub
int3
sbb
in
inc
xchg
mov
and
cmc
mov
insb
push
daa
or
mov
sahf
mov
pusha
stos
fistl
add
mov
scas
push
daa
test
and
inc
lds
sbb
gs
mov
out
adc
shll
out
ret
fucomi
inc
pop
jnp
mov
leave
loop
and
pop
aaa
xchg
xchg
inc
iret
mov
cmp
lret
mov
nop
jnp
adc
lret
int3
sub
add
sbb
aad
xor
or
ss
std
xchg
cld
rorb
pop
jne
rcrb
mov
cmp
xchg
xchg
or
or
cmp
hlt
and
test
lock
cmp
ja
xor
or
cmp
or
sbb
sbb
lods
shll
jno
int
push
in
add
jne
push
sbb
xchg
stos
xlat
dec
pop
add
insl
push
sub
cli
push
mov
dec
mov
xchg
add
xchg
xchg
sub
jl
adc
jne
push
out
inc
test
sub
push
dec
pop
orb
in
xor
inc
test
dec
ret
aaa
vpmulhuw
xchg
out
push
jge
mov
inc
jbe
ja
add
data16
inc
inc
sub
xor
stos
dec
jg
xor
sub
sahf
sbb
sahf
dec
insl
daa
mov
sbb
or
shll
sbb
outsl
push
sbb
aam
fisttpll
cmp
jle
cmp
jp
inc
mov
sub
scas
jmp
add
jo
jae
stos
adc
arpl
mov
ss
pop
lahf
xchg
scas
test
ficoms
imul
push
out
cmpsl
mov
xor
popa
pop
cmp
and
pop
cmp
dec
xchg
dec
call
sbb
cmp
stc
int3
lods
pop
inc
loop
imul
std
leave
lahf
scas
and
cmpsb
sbb
test
rorl
inc
sub
inc
pop
or
add
sub
push
add
fs
mov
arpl
or
push
mov
pop
jno
cmpsl
push
ds
pop
adc
pop
stc
cmpsl
aad
pop
push
aad
dec
jae
in
fadds
jnp
mov
lock
xchg
stc
shlb
cmp
jmp
out
sub
bound
test
mov
xchg
and
push
jnp
ds
pop
ret
or
test
mov
mov
jo
push
mov
mov
and
into
stos
aam
mov
in
push
mov
jbe
pop
xchg
or
xor
and
sub
andb
jne
jg
cmp
push
leave
jecxz
add
pop
adc
inc
dec
popf
mov
push
pop
enter
sahf
or
mov
or
insl
rolb
add
push
stos
aas
xchg
jle
add
push
adc
sti
jo
xchg
jo
cmp
dec
push
pop
xchg
pop
sbb
inc
sub
inc
sub
cmp
push
pop
mov
push
lds
out
js
sbb
daa
fcoml
xchg
scas
mov
insb
xor
sbb
adc
xor
jne
sub
clc
leave
int3
out
movsb
rolb
mov
cmp
or
lods
mov
scas
pop
stc
ss
and
push
cmp
movsb
push
ss
jl
cmp
xchg
add
pop
mov
addl
mov
out
out
xchg
pop
jnp,pn
rolb
xchg
or
xchg
pushf
mov
cmp
mov
adcb
bnd
pop
mov
mov
cmp
in
and
xchg
adcb
push
jge
mov
stos
mov
or
es
sbb
pop
xchg
sbb
clc
or
or
popf
divl
imul
ljmp
push
mov
lds
aaa
pop
jno
sub
mov
push
dec
or
rcrl
lahf
inc
dec
dec
xor
xchg
pusha
std
lret
aas
or
xchg
out
xor
xchg
jbe
or
pop
mov
aam
cmp
bound
addr16
lods
mov
xchg
jae
cmpsb
cmp
cmpsb
int3
inc
add
and
mov
push
or
gs
imul
jge
xchg
dec
push
push
cmpsl
mov
xchg
les
test
loopne
jmp
loope
add
xor
xor
insb
xorb
sub
push
test
cmpsl
test
or
pusha
gs
je
dec
sub
out
jnp
imul
fidivs
xorb
jmp
inc
push
fnstsw
aas
and
jb
xchg
xchg
xchg
mov
and
in
neg
sbb
xchg
push
dec
mov
and
mov
pop
mov
mov
fstpl
or
mov
xchg
mov
aad
dec
lcall
dec
js
or
push
push
js
mov
add
repnz
std
add
out
cmp
ret
push
ds
push
das
xchg
rcrl
test
inc
fmuls
imul
xor
jmp
bound
sbbl
mov
push
iret
jno
ljmp
mov
pop
adc
andl
lods
pop
rcll
mov
imul
jno
mov
gs
pop
xor
imul
cwtl
iret
pop
lea
imul
addr16
dec
test
repnz
xchg
ret
pop
push
fmuls
xchg
inc
rclb
push
mov
sub
ret
outsl
sub
insl
sbb
orb
xorl
dec
scas
addr16
cmp
rcr
mov
repnz
dec
xor
cmp
sbb
and
arpl
arpl
sub
add
jne
pop
fnstsw
xchg
adc
push
add
push
adc
add
cwtl
mov
sub
mov
das
and
push
xor
adc
lea
mov
sbb
cmp
pop
adc
mov
or
loope
sub
into
dec
mov
std
pop
addl
xchg
mov
mov
stos
mov
out
fsubl
or
fsts
xchg
mov
aas
pushf
jge
or
ror
incl
dec
jne
jge
mov
test
mov
lds
cmpsl
inc
std
mov
xchg
dec
stc
je
mov
mov
add
push
iret
movsl
data16
aam
inc
rclb
outsb
jae
cmp
sub
mov
dec
loopne
jne
mov
dec
into
dec
jo
in
test
icebp
in
adc
cmp
mov
mov
xchg
fimuls
cmp
popf
or
cmp
add
sbb
sub
mov
out
pop
or
scas
xchg
ljmp
mov
fidivs
mov
mov
iret
or
or
xor
xchg
pop
jno
mov
ret
xor
sub
mov
js
mov
stos
mov
arpl
iret
inc
dec
cmp
ja
mov
dec
imul
lock
pop
cmpsl
and
rcrb
popa
jne
jp
xchg
andb
mov
pop
sti
and
jb
add
int3
hlt
mov
xchg
in
and
dec
xor
sub
cmp
cltd
loopne
push
mov
xchg
mov
xchg
pop
sbb
outsl
int3
cwtl
rolb
pop
xchg
adcb
in
mov
loopne
pop
pop
je
mov
mov
inc
out
fsubrs
and
out
lret
jb
add
xor
mov
pop
test
adc
push
jg
aad
mov
icebp
cmpsb
mov
dec
sbb
imul
neg
inc
xchg
dec
xchg
push
imul
enter
cwtl
cltd
mov
pusha
addb
ffree
mov
mov
push
xchg
lcall
mov
inc
dec
in
inc
cmp
aaa
ss
test
xchg
mov
imul
lods
mov
inc
scas
mov
fisubs
or
pop
es
cmpsl
mov
loope
popa
and
mov
cmp
pop
add
sub
mov
sti
sub
mov
in
stos
pop
jne
xchg
mov
rcrl
cmp
arpl
dec
cmp
movsw
xor
out
sub
cmp
fistpll
paddsb
shlb
xor
push
sub
adc
cmpsl
imul
pop
xor
xchg
pop
add
shlb
scas
lea
cmp
ficoms
int3
inc
xor
add
inc
mov
add
in
insl
mov
popl
push
enter
sub
rcr
out
cltd
mov
out
jbe
mov
mov
in
pop
jnp
pusha
dec
mov
or
shrl
jmp
or
push
jge
inc
test
imul
mov
mov
sbb
subl
loop
lahf
mov
cmp
lret
xlat
adc
mov
inc
jns
inc
clc
in
test
adc
push
mov
cmc
out
mov
fldenv
pop
xor
xor
jo
aam
pusha
pop
andl
and
inc
mov
pop
sub
int
movsb
add
cltd
pop
in
fiadds
std
imul
outsl
test
xchg
mov
xchg
jmp
push
stc
popf
mov
jno
gs
mul
adc
mov
xchg
in
mov
popf
mov
mov
icebp
out
outsl
xchg
jbe
fisubrs
sub
lret
or
loope
and
lahf
add
nop
jns
xchg
lret
add
jnp
jnp
mov
jb
lods
cli
dec
push
mov
inc
subl
gs
outsb
fisubrs
push
ds
push
xchg
cltd
mov
mov
jo
add
pop
pop
push
mov
sub
imul
les
mov
xlat
xchg
andl
or
js
add
adc
mov
mov
push
mov
lock
cld
mov
int3
sbb
inc
xchg
sbb
ds
pop
adc
inc
jecxz
adc
mov
mov
stos
jo
aad
pop
pop
jbe
dec
jns
lods
into
fcompl
push
test
push
fsts
movsb
cs
push
and
mov
and
aad
lock
push
test
lcall
fisttps
fwait
repz
dec
addr16
inc
ljmp
addb
mov
cmpsb
jno
iret
jp
vcvtss2si
adc
adc
mov
jmp
ljmp
leave
mov
clc
std
icebp
mov
or
xor
sahf
sub
sbb
mulb
xlat
xor
out
lcall
xchg
mov
sbb
or
cmpsl
sub
sub
inc
mov
mov
mov
aam
loopne
push
stos
aas
sub
ret
lock
inc
shr
outsl
push
mov
push
xlat
mov
adc
out
or
inc
xor
mov
outsb
xchg
sub
lret
je
xor
xchg
les
jne
jecxz
mov
lock
push
in
and
mov
mov
int3
and
dec
rclb
or
iret
pop
push
ror
lods
xchg
aaa
sub
arpl
je
or
add
jp
mov
dec
push
out
add
ja
inc
pop
pop
sub
jp
bound
add
push
push
sbb
pop
cmp
dec
sub
daa
mov
lcall
xchg
ret
cmp
fldl
pop
push
mov
ret
sbb
scas
sahf
inc
or
pop
push
or
lods
shlb
add
xchg
test
shrb
jg
ret
and
jne
push
pop
sbb
xor
nop
stos
test
out
into
mov
pop
mov
mov
and
and
add
adc
mov
xchg
repnz
ret
cltd
cld
lea
mov
xchg
sub
sub
jecxz
fld
and
push
or
mov
leave
dec
movsl
adc
xchg
adc
dec
dec
dec
mov
jo
jns
xchg
or
js
sub
sub
jl
add
cld
arpl
into
stos
ret
idivb
mov
or
mov
cmp
mov
es
addb
iret
leave
enter
std
std
xor
add
cmp
test
arpl
mov
xor
xor
or
and
rcll
or
xor
insl
push
jg
xchg
pop
pushf
push
in
pop
pusha
dec
xchg
dec
xchg
scas
andb
dec
into
inc
jnp
test
inc
in
or
call
lret
fbstp
sbb
icebp
dec
dec
push
ljmp
dec
aad
aas
sub
outsb
fs
fdivrp
pop
add
push
out
mov
xchg
lds
inc
add
cmc
addl
mov
ljmp
hlt
add
es
jl
mov
or
push
and
lret
das
mov
sbb
push
xchg
mov
fcomps
cmp
jbe
scas
in
xlat
sahf
out
adc
sub
mov
out
fnsave
dec
jb
shl
adcl
cmp
pop
adc
pop
jo
inc
xchg
cld
fidivrs
cmp
movsb
fwait
shld
sub
cmp
ljmp
daa
and
inc
xchg
sub
loope
lret
push
xchg
out
fcoms
arpl
call
inc
or
adc
mov
dec
in
dec
ret
mov
movsl
sbb
dec
mov
es
gs
pop
imul
dec
add
xor
stos
sahf
mov
cs
xchg
lea
dec
out
sbb
xchg
dec
jns
cld
loope
mov
lods
ds
lahf
enter
hlt
xor
aam
ret
insl
mov
gs
jno
rcrl
icebp
mov
mov
lret
sahf
mov
cmp
lret
sbb
sbb
xor
and
cli
int3
xor
xchg
inc
push
ret
sahf
stos
lds
inc
orl
pop
popa
out
sub
adc
cmp
inc
cmc
shlb
mov
xor
pusha
or
sbb
imul
push
inc
nop
out
inc
mov
fists
mov
xchg
shll
xlat
shll
pusha
js
out
push
mov
inc
call
inc
shll
add
xor
adc
rclb
call
loop
or
dec
popa
pushf
xchg
lcall
dec
nop
aad
arpl
xlat
xchg
ss
mov
push
mov
sahf
inc
movsl
cld
or
scas
jmp
mov
xor
out
out
ret
mov
lret
add
stc
es
cs
or
repnz
repz
insl
scas
roll
pop
fcmovbe
jae
int3
lret
cli
test
or
dec
aaa
xchg
dec
aam
aas
jmp
mov
mov
leave
js
xor
dec
clc
stc
inc
shlb
inc
mov
jecxz
mov
lods
mov
pop
dec
dec
cmp
pop
xor
add
or
mov
jne
lret
arpl
leave
sub
jno
sbb
out
push
xchg
cs
insl
xor
mov
mov
jo
mov
add
xchg
adc
jo
pusha
out
insl
push
daa
push
mov
ja
xor
idivl
cwtl
jle
jle
nop
xchg
sbb
shl
scas
mov
pop
cli
pushf
inc
hlt
loop
call
out
stos
icebp
inc
ret
pop
cmp
fwait
push
mov
hlt
xor
jmp
sbb
ds
std
adc
and
mov
adc
add
inc
popa
test
mov
repnz
leave
aas
mov
idivl
dec
xchg
out
xchg
stos
mov
aaa
clc
xor
push
or
in
mov
in
dec
dec
or
mov
shlb
cmc
addr16
lret
sahf
hlt
pop
fiaddl
push
xorl
mov
in
lock
test
fisubs
aas
repz
out
mov
push
or
or
das
sahf
cmp
jl
stos
dec
dec
fwait
xlat
xchg
in
mov
aaa
std
in
pop
addl
aaa
cmp
push
mov
pop
mov
imul
push
mov
cltd
sahf
test
mov
fidivl
sbbl
lcall
pusha
mov
test
push
rolb
mov
std
cmp
mov
xlat
inc
mov
xchg
mov
push
pushf
or
pop
loop
inc
jae
adc
mov
out
shll
fnstsw
fbld
pushl
cmp
aas
das
popf
pop
pop
xchg
mov
dec
ljmp
dec
jo
call
out
loope
and
fbld
into
mov
sbb
int3
mov
or
test
cli
or
dec
xor
add
imul
push
or
popa
cmp
in
cwtl
fwait
test
outsl
loop
int3
xchg
adc
jle
insb
call
and
sahf
dec
or
int
test
inc
sbb
mov
daa
cmp
in
fcomps
ret
xlat
and
push
mov
clc
out
dec
fs
shlb
fstps
rcll
add
stos
das
into
js
sbb
mov
sub
and
jnp
mov
dec
sub
aas
sbb
inc
sbb
push
mov
outsb
cmp
push
fisttpl
cmp
push
sub
jns
mov
mov
into
in
test
jns
mov
mov
inc
mov
push
js
xchg
mov
decl
shlb
mov
std
sub
dec
push
pop
mov
push
hlt
cmp
das
push
xchg
shlb
rcl
cli
lretw
out
sub
push
enter
jecxz
sub
mov
shll
dec
mov
add
or
mov
add
daa
cld
push
aas
xchg
jae
push
or
or
inc
jg
cld
scas
test
aam
xchg
test
outsb
fcoms
into
jno
insl
mov
jmp
shrl
adc
sub
mov
lea
mov
sahf
cmp
cmp
mov
int3
divb
mov
mov
sub
cmp
xor
pop
lret
cmp
in
shlb
in
mov
sub
mov
push
or
jo
sahf
sbb
cmp
xchg
movsl
sbb
jnp
jne
aas
je
mov
xchg
pop
mov
jg,pn
dec
iret
push
rclb
mov
sbb
jo
decb
repz
movsl
xor
popf
sbb
int3
sbb
out
adc
dec
inc
mov
jb
sbb
inc
les
or
pop
dec
je
out
scas
insb
sub
insl
cmp
adc
pop
push
inc
pop
repz
in
in
mov
mov
mov
rep
ds
mov
jns
loope
test
push
mov
inc
sbb
imul
in
out
sbb
cld
or
fsts
mov
and
xchg
in
jb
add
push
add
push
mov
mov
inc
out
mov
in
in
das
inc
cli
pop
sub
xlat
rcll
scas
cmp
je
fwait
cmp
sbb
outsl
mov
repnz
pop
add
cld
mov
ljmp
mov
ss
mov
mov
outsl
or
and
aad
xchg
test
std
inc
or
sub
push
and
jg
lods
pushf
mov
and
ret
repnz
fnsave
push
cmpsl
jge
rcl
mov
mov
pop
jge
jae
lea
stos
testl
aaa
xor
dec
out
jno
ret
mov
shlb
cmp
in
negl
daa
gs
outsl
clc
jns
mov
nop
sbb
mov
dec
add
push
xchg
adc
mov
jle
jae
rorl
sbb
ficompl
in
sbb
mov
push
mov
aaa
aaa
and
shl
loop
adc
ja
insb
neg
iret
adc
test
cs
call
adcb
fwait
dec
ret
xchg
sbb
ss
mov
pop
popf
mov
mov
push
mov
mov
xor
cmp
lahf
xor
or
lods
insb
or
inc
or
fisubrl
adc
jbe
es
adc
pop
rolb
mov
sub
aas
add
arpl
jns
dec
popa
mov
mov
imul
bound
cmp
mov
jno
lahf
mov
add
push
and
sub
fidivrs
les
mov
in
hlt
mov
push
mov
mov
and
pushf
repz
fidivs
outsl
lret
roll
mov
add
xchg
sub
mov
movsl
shl
jne
jo
add
and
out
pop
mov
fwait
inc
fs
dec
cmp
push
mov
les
scas
jl
mov
jne
mov
ret
adc
ds
popf
lret
cli
cmp
sub
mul
xor
inc
sub
inc
push
imul
jns
push
test
sbb
mov
and
push
pop
out
iret
cmp
loope
xor
push
in
mov
clc
cli
lcall
rolb
shl
mov
ss
movsb
cmp
out
cli
ss
push
xlat
push
xor
aas
testb
scas
addl
addl
dec
xchg
cmp
inc
mov
jl
out
scas
imul
pop
in
mov
mov
pop
xor
inc
mov
loop
sub
filds
repz
adc
sbb
shll
or
and
rcll
mov
fnstcw
cmp
dec
fwait
ja
mov
push
ljmp
les
dec
mov
add
push
dec
sbb
mov
cld
mov
adc
dec
bound
mov
pop
mov
repnz
push
cs
ss
movsb
and
nop
mov
dec
test
sbb
rolb
xor
sbb
or
jecxz
sub
dec
inc
arpl
clc
cmp
xlat
and
cmp
sbb
movsb
cmp
minps
cld
divb
imul
loopne
mov
or
enter
inc
mov
mov
mov
mov
cmpsl
sub
xor
fwait
xchg
clc
pushf
out
fs
rclb
lret
testl
mov
shrl
pop
jae
out
add
test
pop
das
inc
stc
movb
add
dec
cmp
mov
pop
call
mov
inc
ja
xlat
arpl
dec
lret
push
call
rep
adc
xor
mov
lret
add
mov
aad
test
inc
rcrb
gs
mov
inc
fwait
adc
push
xlat
lea
adc
or
aas
ds
xor
jp
fwait
popf
xchg
mov
add
test
leave
or
or
adc
xor
sub
neg
rcrb
pusha
pop
mov
cli
add
ret
icebp
jle
dec
test
icebp
push
add
pusha
mov
push
lahf
mulb
arpl
cmp
es
idivl
dec
and
push
stc
lods
test
dec
and
push
inc
fndisi(8087
stc
xchg
jmp
cltd
in
dec
sub
ja
pop
in
popf
xor
pop
cld
jg
xor
sub
movsb
mov
es
or
cwtl
cwtl
add
dec
cmp
aad
xor
push
lds
adc
add
jl
mov
lods
dec
inc
out
xchg
out
dec
mov
mov
dec
inc
mov
xchg
sub
rol
inc
push
mov
stc
fsubrl
inc
out
sub
adc
in
shll
push
leave
stos
adc
inc
xchg
sub
inc
pop
movl
push
insl
imul
leave
push
or
adc
sarl
notl
jle
push
mov
sub
test
icebp
arpl
mov
xchg
and
ficompl
fnstcw
outsb
pop
imul
out
jbe
push
data16
lcall
mov
rcrb
sbb
sbb
adc
in
std
in
jnp
addb
sbb
ds
dec
mov
imul
jno
in
lea
aad
stc
ret
and
dec
fbld
xlat
mov
adc
scas
inc
adc
gs
or
push
out
shll
imulb
les
arpl
aaa
imul
scas
sbb
sahf
cmp
enter
popf
jne
dec
arpl
mov
out
aaa
lret
cs
jne
iret
push
vcvtdq2ps
xchg
out
jae
and
and
cld
outsb
mov
or
sub
in
sub
aas
or
xchg
dec
fstps
xchg
xchg
sbbb
jno
ror
xchg
jecxz
adc
or
pop
mov
adc
loop
cmpsl
cmpsl
ret
jmp
jmp
mov
int3
jo
subl
aam
push
or
ret
xchg
push
and
and
out
lock
add
dec
js
clc
push
mov
lea
lret
cs
pop
inc
xchg
fcomi
cmp
xchg
pop
insb
push
sub
lods
bound
add
pop
sub
mov
fsubr
xlat
jne
fidivrs
jle
insb
mov
nop
aad
push
frstor
cmp
sbb
xor
push
pop
lea
sub
aam
repz
xor
or
lea
push
sbb
addl
out
cmpsb
dec
sbb
xchg
mul
sbb
nop
pop
fdivr
inc
pop
je
ret
inc
adc
mov
fidivrs
lods
out
and
mov
roll
dec
jb
jg
stos
push
dec
lret
sbb
inc
push
sti
dec
inc
adc
fistps
push
lea
xrelease
movsl
sub
adc
popa
movsl
ret
outsb
gs
ljmp
orl
sbb
and
mov
pop
call
clc
pop
jae
lcall
loope
push
xlat
xchg
ja
push
bnd
jecxz
push
mov
cwtl
sub
fcom
mov
xor
shlb
repnz
ffree
sub
cld
push
push
pop
jne
incl
mov
dec
mov
dec
cmp
enter
stos
jne
popa
mov
jno
sbb
inc
out
fisttpl
push
negb
mov
xchg
dec
pop
jo
pop
mov
jns
pop
fucomp
inc
inc
pop
sti
add
sub
mov
adc
loopne
test
jb
pusha
jl
mov
cmc
div
shl
mov
out
jle
movb
hlt
mov
shll
xlat
fisttpll
fwait
inc
sub
das
push
fwait
mov
fstpl
dec
mov
inc
jp
je
mov
test
mov
decl
pop
je
jmp
xor
add
leave
or
imul
jg
out
sub
mov
insl
mov
ficoms
jl
cmp
adc
aam
stos
mov
movnti
data16
out
imul
outsb
lret
sub
test
dec
cmp
mov
or
cs
orb
rol
sub
mov
sar
sub
and
outsl
jp
popa
xchg
and
sub
sub
pop
add
inc
stos
jo
and
adc
push
negl
pushf
sbb
in
sbb
xchg
mov
cmp
outsl
int
pop
mov
jo
fisubs
xorb
or
push
enter
sub
xor
cmpsl
xorb
cmp
mov
or
mov
sub
fdivrs
mov
je
cld
xchg
add
les
lahf
adc
mov
xorb
or
pop
cmp
xlat
xor
test
sbb
lcall
push
adc
push
push
mov
adcl
mov
sbb
pop
in
mov
mov
stc
je
xlat
std
xchg
mov
shrl
sbb
mov
push
lret
fwait
add
pop
mov
clc
aas
jns
jns
repnz
rorl
add
jae,pn
loopne
aad
cltd
mov
fwait
mov
and
adc
std
or
inc
imulb
push
into
inc
insb
repz
inc
pop
shl
add
and
cs
mov
fsubr
add
fmulp
dec
pushf
inc
aas
pop
cld
pop
pop
cld
insl
add
cs
adc
nop
pop
push
popa
cmp
xor
pop
lahf
outsb
cmp
pop
std
es
popa
loop
aam
jg
xlat
outsl
pop
lcall
out
fsubrp
in
in
faddl
adc
jle
imul
das
jo
test
xor
pop
popa
sub
enter
cmp
pop
out
nop
jl
dec
push
ret
call
and
sbb
aad
lcall
mov
stos
loop
aas
subl
add
data16
jg
and
and
outsl
xor
pop
incl
xor
bound
jne
cmova
pop
cmc
jle
xor
jmp
pop
inc
mov
loop
xchg
and
test
fisubrl
pop
outsb
sbb
sarb
mov
stos
notb
mov
insl
gs
sbb
dec
mov
or
push
dec
mov
movsl
sub
loop
sub
xchg
in
push
xchg
cli
es
and
push
out
es
and
or
cs
jb
call
prefetchnta
loopne
lea
jbe
aad
jmp
lret
dec
jnp
cmp
mov
sub
data16
jb
sub
push
jno
xchg
das
jmp
fisubrs
jecxz
and
inc
mov
xchg
xchg
repz
xor
pop
jb
sub
fs
push
data16
xor
ret
into
pop
cmpsb
orl
xchg
rcl
jmp
xchg
mov
adc
mov
lahf
mov
dec
hlt
mov
xchg
xchg
xchg
jne
cmpsb
xor
gs
sbb
test
push
mov
adc
adc
pushf
call
or
cmpsl
insb
mov
and
xchg
cmp
in
mov
pop
pusha
xchg
push
and
rol
sbb
filds
out
push
repz
dec
pop
push
scas
sahf
lea
jb
das
jno
divl
jecxz
scas
add
cmp
sbb
sub
negl
fwait
ja
lret
leave
mov
xor
sbb
mov
loop
adc
mov
addr16
fstps
xor
int3
imul
inc
das
pop
insl
pop
fnstenv
xor
push
adc
dec
pop
shll
mov
ja
pop
mov
sbb
test
nopl
push
int3
mov
pop
mov
addr16
mov
dec
pop
rclb
decb
shll
fistpll
aaa
and
mov
mov
and
adc
ret
xchg
xor
sbb
jge
dec
repz
add
pop
imul
js
push
dec
mov
stos
add
and
cld
mov
sub
aas
add
das
adc
bound
sahf
sti
js
jne
cwtl
lods
jle
iret
sahf
out
mov
sarl
push
pusha
lcall
push
in
cmp
dec
mov
sub
imull
iret
insl
mov
iret
mov
fmul
int
jno
stc
jns
sub
adcl
dec
clc
inc
adcl
jg
pusha
dec
mulb
insb
mov
pop
aam
mov
push
shll
test
cli
mov
pop
inc
sub
sahf
mov
flds
mov
das
cmp
inc
sub
iret
mov
push
int
cmpsl
stos
dec
sbb
xor
mov
aam
out
popa
out
fld
dec
mov
xor
dec
push
vmulpd
fbld
xor
stos
lret
push
xorl
lds
dec
popf
loopne
js
mov
jae
clc
lea
pop
std
xchg
pop
push
xchg
sbb
mov
jb
push
sub
in
jmp
or
adc
xchg
aas
loopne
aad
jg
fisttpl
shl
jle
dec
lret
shrb
sbb
inc
cmp
push
xchg
cmp
movsl
sub
and
loopne
lods
repz
push
mov
inc
fwait
inc
sbb
mov
push
and
stos
mov
jns
adc
or
mov
fs
ret
and
or
dec
lcall
jo
dec
mov
lods
stc
cs
jg
cmp
es
fmul
dec
stos
into
and
in
or
adc
js
or
roll
enter
sub
xchg
jge
mov
adcb
bound
cmp
push
mov
push
ds
dec
mov
jl
cld
frstor
loopne
lods
scas
call
adc
lret
test
sahf
jns
inc
push
aad
add
sbb
aam
mov
addr16
call
int3
mov
rolb
sti
mov
nop
loop
jns
and
cltd
sbb
push
outsl
mov
test
test
sti
mov
cltd
pop
push
push
jge
es
gs
mov
loopne
jge
cmc
cld
outsb
sbb
les
and
cmpsl
sbb
mov
and
xor
push
cmpsb
dec
lret
push
sbb
lcall
cld
and
bnd
inc
lret
dec
test
scas
add
jae
mov
or
add
mov
or
xor
adcb
movsb
sub
mov
inc
ss
inc
push
test
repnz
test
loope
mov
jmp
or
imul
jne
pop
notb
sub
movsl
bound
test
push
imul
sbb
add
lcall
sub
xchg
xchg
out
xchg
mov
pop
lcall
sbb
lcall
dec
dec
jne
pop
mov
movsb
jo
addb
es
into
add
push
jns
jo
out
mov
nop
dec
cs
xchg
int3
mov
mov
cmpsl
icebp
ss
addl
cmp
call
inc
mov
out
jmp
mov
push
pop
jbe
cmpsb
jae
sub
sbb
xor
cmpsl
dec
cmp
push
add
lret
jmp
jae
repz
arpl
outsb
and
enter
pop
test
cli
or
xchg
loopne
push
stos
or
pop
push
xchg
popa
rorb
mov
incb
push
add
ret
test
lock
nop
out
push
xor
pop
pop
push
fimull
movsb
sbb
pop
xor
jne
xchg
lret
pop
in
lock
push
adc
into
push
in
fistpl
add
sbb
mov
adc
lret
repz
xchg
push
out
es
fcoms
mov
add
jbe
stc
aas
inc
xor
mov
dec
popl
jns
popf
fisttps
fstl
das
test
scas
loopne
aas
nop
sahf
dec
mov
leave
sahf
fstpl
jp
imul
sahf
mov
ds
adc
xchg
call
pop
fwait
cmp
add
xor
aas
sub
add
insb
mov
sbb
jle
pushf
pop
jl
lods
in
lea
imul
cs
jp
sbb
cmpb
xor
out
or
sbb
xchg
and
test
xor
xlat
cmpsb
lds
and
ja
enter
mov
in
xchg
push
cmc
sbb
jp
loope
push
mov
cs
lock
divb
popf
ljmp
inc
sahf
icebp
sbbb
or
ja
lret
dec
push
rclb
test
dec
xor
daa
pop
jno
lahf
in
stos
pop
push
test
add
xchg
mov
movsb
aad
push
js
data16
mov
xchg
sti
sbb
loope
popf
outsb
cs
popf
and
dec
pop
cmp
mov
add
xchg
dec
push
jnp
js
out
imul
out
sbb
cmp
or
frstor
std
fsubs
scas
add
xchg
test
outsb
cmp
xor
repz
or
ror
pushf
push
xlat
mov
leave
mov
cld
jl
mov
inc
pusha
int3
inc
mov
das
in
scas
fnsave
setl
loopne
fs
sbb
dec
inc
and
inc
fnstenv
jb
pop
mov
imul
sub
or
lods
lahf
pop
sub
es
lret
inc
push
loop
mov
mov
shrl
or
pop
repz
adc
loop
mov
loope
divb
js
lock
sbb
or
mov
add
jg
xchg
arpl
std
testb
cmpsb
pop
lods
mov
jae
loop
push
jg
cmp
adc
jne
loope
push
lcall
das
sbb
push
add
mov
push
xchg
jge
sub
add
xchg
movsb
jae
push
cmpsb
pop
popa
out
dec
mov
aas
inc
mov
and
sbb
jo
sub
mov
andl
adc
cmp
hlt
sti
pop
in
ror
lret
dec
jecxz
mov
xor
mov
xchg
mov
xor
sarl
xlat
mov
add
in
pop
pop
sub
add
fcoml
pop
icebp
mov
gs
fldenv
and
out
int3
pop
call
dec
mov
ja
sar
fsub
cmp
das
leave
movsb
sbb
aas
into
int3
sbb
pop
das
test
jns
sbb
fiadds
ds
mov
xor
fsubl
or
sub
ret
dec
cmp
cmp
aas
pop
inc
fnstenv
pop
add
arpl
int3
dec
add
sbb
fsts
sbb
rolb
ss
dec
orl
cmp
pop
push
orb
cwtl
push
mov
inc
fdivrp
nop
push
cmp
out
sbb
dec
in
mov
rol
mov
dec
or
das
adc
pusha
mov
jecxz
cmc
addr16
stc
scas
xchg
sbb
mov
xchg
and
or
sub
pop
arpl
xchg
fistpl
cmp
cltd
repz
jmp
dec
xor
pushf
jecxz
inc
test
pop
inc
xchg
and
pop
fdivrl
into
mov
inc
jne
fsts
enter
jae
fmul
pop
mov
stos
push
dec
xor
sarb
aam
loop
aad
mov
adc
addb
or
test
and
aas
std
xchg
jbe
xchg
lcall
mov
jecxz
push
rcl
sub
xor
sub
pusha
cld
mov
and
sbb
dec
sub
cmp
aaa
pop
loop
ret
cmpsl
xor
fcoms
inc
mov
cmc
bound
gs
cmp
pop
pop
fbld
xchg
xor
cmpl
mov
push
bound
xor
push
pop
sbbl
xor
clc
daa
mov
insl
test
mov
rcl
xchg
loop
enter
imul
les
lods
arpl
movsb
shll
mov
pop
cmpsl
inc
mov
aaa
stc
outsb
lea
rclb
adc
and
dec
fistl
insb
mov
stc
fcoms
sbb
std
push
mov
test
dec
mov
sbb
outsl
dec
loope
inc
and
jns
test
mov
inc
fcompl
sub
adc
daa
iret
jo
mov
lcall
pop
lret
insb
xchg
dec
mov
jp
mov
repz
dec
dec
mov
xor
inc
je
scas
push
pop
in
push
divps
pop
pop
rcl
xchg
clc
or
dec
imul
aas
ljmp
mov
mov
and
add
icebp
outsb
dec
movsl
int3
jo
jmp
sahf
cmp
imul
call
add
and
leave
out
rorl
insb
or
push
imul
mov
cs
xchg
mov
inc
int3
loopne
push
lret
xor
mov
cld
fcomp
or
ljmp
push
or
sub
cwtl
sub
call
outsl
push
xor
jno
es
imul
push
mov
imul
in
add
retw
repnz
xor
mov
test
inc
push
inc
scas
or
cmp
jo
and
lret
push
or
jecxz
jmp
jno
imul
test
mov
inc
fbld
inc
js
mov
xor
xchg
vunpcklps
xor
fbstp
add
mov
jo
jl
mov
add
mov
adc
rolb
aas
mov
push
add
orb
jg
and
cwtl
cmp
lds
add
popa
add
gs
jnp
imull
out
stos
aam
jecxz
mov
out
test
mov
push
mov
sbbb
ds
aaa
fisubrl
mov
inc
dec
mov
fwait
pop
jecxz
ljmp
fwait
cmp
adc
mov
sbbl
fs
mov
fidivrs
push
add
loopne
mov
push
pop
jle
sahf
ror
inc
js
clc
pop
or
fsts
pop
stos
dec
aas
int3
xor
sarb
sub
into
push
and
mov
add
aad
scas
es
cmpsb
mov
ja
cs
pop
daa
clc
dec
in
test
out
sub
xor
icebp
mov
faddp
cmpl
cmp
inc
mov
rclb
ja
cltd
mov
lea
dec
mov
rol
mov
les
in
cmp
insl
pop
into
add
cmc
mov
movsb
test
shll
push
sub
add
push
or
cmp
aas
loopne
pop
shrb
stos
jns
js
lea
imul
ret
xor
mul
es
push
xchg
sbb
call
sahf
jmp
and
xchg
stos
push
mov
xchg
sarb
adc
inc
xor
add
movsb
push
adc
popa
mov
inc
pop
jmp
inc
stos
ljmp
xorl
dec
inc
adc
dec
jp
push
mov
vcmppd
adc
xchg
xchg
arpl
or
jp
jo
xchg
lds
and
push
xchg
pop
cmp
xchg
lea
jl
and
xchg
outsl
or
popa
in
mull
xchg
les
inc
mov
sbb
push
repz
adc
push
cmc
iret
push
test
popa
jmp
or
pop
pop
adc
stos
movsb
mov
pop
adc
fmull
push
je
cmp
lahf
mov
fsub
and
aaa
in
fistl
mov
fistpl
cmp
sub
mov
jno
cs
push
xchg
mov
js
aad
stc
stos
cmp
rol
jecxz
mov
sub
xor
inc
or
xchg
inc
pop
push
xor
gs
mov
push
and
push
pop
enter
mov
mov
sarb
call
dec
mov
xchg
out
xor
mov
sbb
xchg
sub
adc
pop
push
or
sbb
mov
adc
mov
mov
in
adc
loope
fdivr
les
or
aaa
sahf
sub
les
mov
mov
stos
push
xchg
sti
inc
aad
inc
or
pop
cmp
pop
dec
pop
xchg
ror
addr16
or
adcb
insl
xchg
rcrb
arpl
xchg
cli
mov
dec
mov
push
add
lcall
call
add
call
out
and
daa
inc
arpl
mov
mull
dec
cmpl
into
and
or
test
mov
call
cli
fcmovnu
cmc
adc
jne
stos
jne
xchg
adc
cld
test
fisubrl
mov
push
mov
aam
scas
xor
icebp
mov
lcall
mov
iret
loope
out
roll
mov
jle
and
pop
hlt
hlt
and
cmpb
mov
jno
arpl
xchg
sbb
cmp
jg
lods
dec
loop
lods
aaa
dec
jne
cmpsl
lock
imul
pop
ret
cmp
cmpsb
mov
das
adc
inc
add
or
ljmp
sarb
cld
ret
cwtl
test
inc
sbb
fstpl
cmp
pop
cmp
outsb
and
popf
jle
stos
push
popf
outsb
cld
inc
pop
xor
or
xor
lret
or
pop
add
test
mov
cmpsl
push
push
xchg
cld
and
inc
cmpsl
pop
push
lret
test
das
mov
in
push
pop
cmp
fsubr
fs
and
and
stos
ficoms
mov
xor
jb
xor
stc
dec
xor
arpl
inc
stos
in
fiadds
sbb
pop
jmp
lahf
aas
test
cmp
daa
sbb
inc
xabort
mov
aaa
mov
js
das
aam
nop
loop
xchg
das
xchg
les
icebp
xor
aas
sub
imul
mov
insb
mov
xchg
out
xor
xchg
push
ficomps
cmp
mov
pop
push
adc
popf
enter
outsl
xchg
std
in
sbb
fidivl
scas
push
mov
inc
in
mov
add
dec
xlat
mov
sti
adc
outsb
push
into
mov
outsb
out
dec
mov
stos
sub
sbb
cmp
sbb
ja
sub
push
sub
loope
fidivl
addr16
mov
mov
xchg
scas
or
jbe
pop
cmp
in
mov
outsl
mov
push
popa
ret
loope
sub
nop
daa
daa
xchg
insb
push
sub
mov
cmp
dec
lock
ret
dec
inc
stos
inc
sbb
rcrl
xor
insl
and
icebp
jb
enter
push
sub
pop
pop
sbb
enter
xor
mov
ljmp
inc
fimuls
mov
push
pop
pop
push
out
cwtl
fldenv
dec
jg
and
les
cwtl
mov
mov
aam
xchg
adc
jb
mov
cltd
adc
sti
dec
aaa
cmp
mov
iret
les
repz
mov
pop
lds
sub
fstpl
fidivs
add
jl
cmp
shrb
sub
dec
stc
push
enter
ds
add
jno
xchg
cmp
mov
push
sub
mov
dec
idiv
jge
cmp
mov
adc
jmp
aam
mov
test
in
and
dec
hlt
sbb
push
mov
jb
dec
into
lds
sbb
fbld
xchg
mov
ret
test
dec
xchg
jg
sbb
mov
cmp
fcom
push
mov
iret
push
bound
fisttpll
pop
imul
xorl
mov
outsl
fildll
adc
xor
cmp
pop
cmc
sub
push
addr16
hlt
mov
rcr
jno
subps
xor
movsl
popf
jecxz
xchg
mov
inc
pop
stos
popa
mov
cmp
int3
fisubs
test
dec
xchg
test
add
adc
cmpsb
mov
ficompl
push
add
test
jnp
mov
cmp
mov
jo
leave
add
xor
add
in
frstor
cmp
mov
push
add
lock
cmp
test
cmp
aas
ss
and
cs
push
ficoml
mov
jno
add
popf
fs
outsb
sub
into
pop
rclb
jle
add
idivb
jecxz
sbb
mov
jo
loope
jbe
or
mov
jno
inc
push
add
push
mov
out
xor
imul
mov
push
mov
cmp
jecxz
lret
test
gs
out
test
js
movsb
xchg
daa
paddw
fisubl
test
rcl
subl
loop
mov
inc
test
std
hlt
sub
mov
hlt
xchg
and
loop
add
fwait
pop
jle
mov
test
enter
ss
sar
arpl
or
push
sub
lcall
sahf
aas
inc
aas
jmp
jns
pop
orb
mov
loop
movsl
and
stos
adc
shlb
iret
ja
pop
adc
pop
and
push
sbb
dec
fbld
mov
adc
loope
clc
divb
or
mov
pop
hlt
leave
and
gs
pusha
mov
and
jmp
or
sub
data16
call
push
divl
int
push
faddp
xor
mov
stos
js
mov
dec
ds
cmpxchg
mov
pop
mov
inc
ljmp
stos
jmp
out
popa
stos
std
movsl
fisttps
or
stc
sub
sbb
sub
jl
xchg
push
mov
inc
cmp
and
push
xchg
or
xchg
arpl
xchg
fwait
sub
xor
stc
mov
mov
cmpsb
pop
mov
pop
mov
fs
movsl
xor
xchg
call
xchg
fs
int
nop
mov
sbb
ljmp
in
repz
lods
movsl
push
and
int3
jg
mov
push
in
pop
ss
xor
flds
icebp
shlb
rep
sub
test
or
adc
loope
sbb
xor
fnsave
sub
shlb
xor
mov
pop
je
push
cmp
mov
push
test
mov
mov
insb
dec
or
jg
mov
leave
mov
pop
mov
test
cmp
jmp
pusha
jl
mov
jbe
icebp
out
outsl
inc
enter
ficoml
adc
sub
jae
out
pushf
xorl
dec
xor
test
xor
or
inc
scas
adc
iret
sub
aad
xchg
mov
sbb
lahf
movsl
addr16
xor
jbe
push
aaa
push
das
dec
xor
jle
jbe
fidivrs
sbb
add
dec
jg
in
pop
stos
nop
add
js
leave
dec
into
movsb
jbe
and
mov
mov
jmp
scas
fwait
pop
push
aaa
cld
jnp
mov
clc
daa
jo
out
adc
loopne
push
inc
ficoms
dec
dec
mov
dec
lret
push
cli
sahf
push
cmp
and
bswap
scas
pop
adc
mov
mov
add
aam
push
outsb
imulb
rolb
or
cmp
and
es
repnz
or
or
mov
jbe
xchg
sub
jge
cmp
clc
sbb
jb
sub
in
mov
or
pop
fcoms
sub
sbb
mov
jge
leave
int
testl
fmuls
adc
cmp
mov
add
es
or
jle
popf
data16
pop
add
adc
add
sbb
mov
test
aam
or
xchg
call
mov
inc
sub
xchg
outsl
mov
cli
jbe
cmp
xchg
xchg
cmp
gs
jbe
stos
aam
test
xchg
cmp
js
enter
cmpsl
mov
xor
scas
sbb
into
mov
inc
mov
rcrb
inc
popa
enter
mov
ret
pop
sbb
sub
pop
leave
xchg
aaa
adc
pushf
setns
test
mov
cltd
add
scas
std
leave
sub
push
in
sbb
pusha
aad
ret
or
jge
outsb
test
out
pop
mov
mov
pop
mov
shlb
pop
inc
add
cli
mov
and
stos
dec
pop
mov
inc
adc
adc
enter
jg
mov
ds
sbb
out
inc
fwait
xor
sbb
int
fists
adc
andl
pusha
xchg
pusha
xchg
cli
cmp
jnp
in
dec
pop
sub
inc
push
push
sbb
push
push
mov
jecxz
stos
mov
fwait
mov
popf
lret
inc
sub
pop
subl
out
mov
aaa
mov
shl
push
adc
shr
jge
pushaw
fldenv
sahf
push
pop
mov
xchg
into
out
jle
addr16
and
out
mov
and
cwtl
xchg
outsl
lret
pop
fildll
loopne
adc
imul
inc
add
ds
jmp
repnz
pop
inc
in
mov
or
dec
and
mov
repz
ror
dec
cs
pop
jl
rep
imul
gs
mov
mov
sub
jns
jmp
loope
out
sahf
sbb
xor
imul
je
mov
stc
adc
sub
pop
mov
mov
jmp
dec
adc
inc
repnz
mov
mov
arpl
dec
ret
pushf
mov
mov
mov
ret
es
in
in
mov
fcmovnb
add
sbb
dec
mov
pop
add
push
js
es
aam
test
in
test
leave
ss
mov
push
push
inc
stos
imulb
xlat
popl
dec
popa
push
nop
dec
sub
lods
in
sub
push
cmc
outsl
enter
xchg
fiadds
pop
cmp
push
or
icebp
pop
loopne
movsl
call
sbb
imulb
mov
in
pop
insl
xchg
push
mov
xor
imul
lock
iret
lds
in
arpl
repnz
mov
jb
insb
xchg
jecxz
test
inc
xor
mov
sarl
xchg
mov
mov
jo
inc
rclb
dec
scas
gs
pop
and
push
xor
inc
push
mov
ret
fcom
push
aam
mov
bnd
into
sub
cmp
jnp
inc
js
fld1
sahf
int3
push
lods
mov
into
jge
loope
ror
add
add
mov
pop
cmc
idivb
mov
aaa
pop
cmc
sti
test
faddl
stos
lods
lahf
movsb
test
je
lret
outsl
in
scas
push
sti
push
cmp
mov
pop
ror
xor
xchg
decl
add
aas
jecxz
mov
lcall
jbe
cmp
dec
add
sbb
pop
pop
or
add
pusha
xchg
lods
cmp
pop
leave
leave
in
in
mov
sbb
push
jbe
pop
dec
inc
je
and
test
shrb
push
mov
nop
rcr
inc
dec
mov
xchg
jnp
jne
aad
fwait
add
aas
cmp
imul
mov
js
iret
push
jb
fwait
lret
je
pop
push
dec
add
ret
xchg
ret
add
jb
cld
sub
xchg
and
push
leave
jno
outsb
mov
test
lods
mov
ds
cwtl
leave
mov
pop
or
push
mov
xor
sub
cli
push
xor
fistpll
mov
jle
inc
loope
outsb
jb
or
pop
sbb
mov
mov
test
adc
jb
sub
pop
pop
mov
fistpl
push
outsl
mov
idivl
xchg
lods
mov
xchg
std
dec
inc
push
out
cmpsl
dec
lods
repnz
cli
and
scas
enter
dec
or
or
out
mov
je
adc
xor
sti
jle
mov
int3
data16
push
pop
je
jle
loopne
dec
cmp
push
cwtl
sbb
repz
mov
adc
in
lret
dec
mov
sti
xchg
loop
movntq
out
pushf
fs
je
decb
mov
aaa
sbb
mov
mov
fdivr
out
sub
pushf
pop
dec
xchg
pop
shrb
push
mov
cmp
inc
and
dec
cmpsb
nop
mov
in
test
rep
dec
mov
gs
jl
loopne
iret
fs
jle
test
les
sbbb
aad
inc
outsb
push
stc
iret
jp
or
dec
inc
xor
mov
mov
sub
bound
ja
mov
inc
dec
jbe
movsb
lahf
jmp
aas
xlat
mov
fsts
xor
loope
xlat
add
nop
xchg
ss
pop
sbbb
sub
shrl
call
ret
cmc
add
rcr
scas
out
mov
xor
push
sarb
ljmp
jmp
add
insb
test
push
mov
jbe
xorl
sbb
mov
fnsave
clc
jl
inc
sub
jmp
sub
mov
cmpsb
idivb
dec
in
hlt
outsb
es
mov
inc
push
mov
sbbl
push
rcrl
adcl
call
inc
sbb
jp
inc
in
ljmp
test
inc
ret
cwtl
cmpl
in
xor
inc
into
push
sub
insb
dec
jge
scas
push
mov
rclb
cli
data16
or
inc
into
xchg
lea
jmp
addl
stc
xchg
jbe
mov
push
and
ficompl
fcompl
jmp
ss
adc
jmp
xor
cs
cmp
aad
sbbl
sbb
cltd
int3
xor
dec
mov
or
lret
es
adc
sti
or
mov
cmp
inc
inc
jmp
mov
iret
xchg
bound
je
loope
pop
pop
sub
inc
cli
repnz
imul
outsb
or
loope
rol
sahf
leave
dec
add
pop
int3
xchg
insl
imul
sbb
dec
sub
mov
mov
or
sbb
lods
imul
mov
decb
mov
cld
lret
mov
inc
pop
ljmp
mov
ret
lods
movsl
mov
ds
sub
push
idivb
in
outsb
repnz
into
fadd
repnz
sbb
pop
loope
sarl
cwtl
dec
mov
jae
cmpl
jnp
cmp
push
ror
inc
sub
mov
push
add
adc
fcmovbe
fs
cmp
sbb
mov
cmp
mov
ret
rorl
add
bound
dec
pop
push
ror
dec
jle
ss
dec
cli
push
sbb
dec
insl
mov
add
dec
pop
arpl
sub
enter
dec
mov
test
test
rorb
sub
les
andl
lcall
mov
push
popa
cwtl
fcoms
xchg
jnp
loope
xchg
add
mov
xchg
or
sti
jns
adc
ljmp
addr16
and
xchg
cmp
push
leave
sub
cli
push
mov
pop
scas
jmp
outsl
testl
cli
stos
pop
xchg
push
out
mov
cmp
sbb
aaa
add
push
mov
add
jecxz
push
movsl
xor
dec
xchg
mov
lahf
data16
jb
add
push
xchg
push
mov
in
xor
add
add
aaa
mov
fists
inc
mov
rorb
jbe
mov
and
sti
test
and
adc
mov
mov
cmpsb
aad
push
sar
loope
scas
jp
ret
aas
dec
mov
adc
rorl
jecxz
jmp
stc
mov
mov
stc
adc
or
adc
repz
andl
shll
push
push
sub
test
cwtl
pop
sub
adc
fists
sbb
jmp
dec
lret
inc
sub
outsl
push
fdivr
loop
or
mov
sbb
aaa
pop
sbbb
fstps
andl
gs
mov
adcb
pop
loop
sbbb
call
aaa
movsl
fs
add
mov
int3
pop
xchg
pop
pusha
int3
add
xchg
xor
add
fimuls
jecxz
pop
roll
dec
push
mov
pop
popa
fisubrs
pop
mov
out
add
out
or
and
and
clc
cmp
or
cmp
lahf
in
inc
das
insl
fucomp
mov
int
and
icebp
inc
cltd
lea
or
in
xor
inc
push
mov
jns
lret
repz
mov
sarl
jne
sub
pop
fsubrl
les
jp
adc
sub
mov
cld
ss
sbb
int3
jne
mov
mov
stos
les
in
or
cmpsb
ja
mov
shl
ds
add
insl
lock
push
test
cli
add
out
xor
and
bnd
popf
movsb
mov
mov
dec
cmp
scas
cs
mov
fwait
add
shlb
sub
mov
sub
or
int
lcall
cmp
loop
cmp
jecxz
push
and
cmp
dec
das
nop
mov
jmp
pop
cmp
xchg
inc
and
mov
mov
es
xchg
sbb
testl
shlb
cmp
pop
mov
divl
mov
lret
dec
cmp
in
pop
movsl
mov
push
cmp
sub
sahf
dec
pop
push
fnstsw
jg
ret
or
jle
jg
mov
into
add
mov
or
ret
outsb
mov
add
jl
cmp
add
loopne
out
inc
bound
add
add
inc
xchg
or
jmp
jnp
jo
nop
push
fisubrs
dec
out
ficoml
mov
mov
or
jl
inc
adc
sub
xchg
or
jecxz
cmp
ret
mov
jb
decl
in
pushf
shll
sub
or
jnp
inc
cmp
aaa
sub
mov
cli
mov
lods
sar
and
mov
stos
lret
add
fnstcw
outsb
outsl
pop
aad
push
jbe
rcrb
popl
xchg
aam
or
jno
jp
incl
loop
add
push
icebp
cs
sub
lahf
xchg
fdivrl
push
pop
mov
int3
xchg
nop
daa
jle
out
dec
jg
mov
or
push
xchg
mov
arpl
stc
dec
adc
add
mov
jo
xor
pop
add
imul
adc
pop
sub
cmc
mov
sbb
pop
mov
mov
insl
jp
fdiv
xchg
mov
sbb
and
rolb
pop
fwait
dec
cmp
jp
jle
sarb
std
cmpsl
mov
xor
inc
push
ss
stos
dec
adc
xchg
mov
mov
xchg
or
mov
jbe
ds
aas
dec
jmp
cmp
movsb
icebp
lock
lds
lahf
jg
inc
mov
and
mov
clc
push
pop
adc
adc
mov
ljmp
mov
ret
jmp
and
mov
scas
lea
mov
iret
jmp
fs
imul
mov
fisubs
out
xor
push
sbb
idivl
movsl
jl
ljmp
pop
sub
cmc
into
mov
mov
pop
in
pusha
sbb
int3
cmp
mov
jo
jno
dec
subl
loop
jmp
movsb
ds
mov
imul
jo
es
idivb
xchg
out
xchg
loopne
cmp
cmovae
jae
or
sbb
sub
aam
pop
fnsave
sub
cli
fldl
mov
or
das
mov
inc
pop
mov
jo
mov
xchg
pop
pop
push
aas
mov
sub
mov
into
sub
rcll
or
xor
cli
pop
insb
cltd
cmc
inc
and
mov
negl
mov
jno
mov
test
incl
movb
or
lock
test
cmp
outsl
insl
call
sbb
sub
cltd
inc
dec
pop
fimull
xlat
mov
stc
dec
insb
das
mov
xor
aad
mov
pop
aas
dec
pop
xchg
addr16
repz
sti
adc
sbb
pushf
and
in
adcl
jb
cmc
jp
pop
sahf
or
inc
push
xor
mov
xor
clc
push
adc
mov
dec
mov
fimuls
cld
push
push
pop
sbb
xchg
push
bound
or
sbb
push
push
and
mov
push
xchg
ja
pop
scas
cli
push
leave
mov
push
xchg
adc
pop
fisttpl
scas
cwtl
xor
testl
mov
test
imul
das
sub
pop
add
dec
jle
mov
cmc
outsl
mov
decl
and
sahf
xor
int
call
dec
leave
xor
xchg
lret
daa
sub
in
dec
je
addr16
mov
add
and
add
out
mov
mov
jg
adc
cwtl
inc
adc
push
mov
sbb
mov
enter
xor
cltd
jge
and
push
push
sahf
les
cwtl
xchg
nop
lea
les
pop
scas
lea
jp
jecxz
mov
nop
jo
int
sub
adc
mov
cli
dec
ja
mov
movsl
sti
int3
mov
inc
push
pop
leave
fdivrl
sbb
mov
mov
mov
xchg
jp
mov
pop
sub
mov
ret
sub
stos
out
js
fisubl
xlat
aad
sbb
pusha
mov
lcall
ss
cmp
mov
ret
shr
movsl
movsl
lahf
pop
cltd
out
pushf
sub
std
jg
add
push
mov
js
adc
sbb
mov
scas
sub
pushf
dec
add
mov
cmpsb
push
ss
fcmovb
imul
stc
jne
bndstx
mov
pop
jl
icebp
cmp
hlt
lods
enter
jge
faddp
leave
pushf
repz
fisubrl
cltd
adc
mov
pop
push
ss
cmp
push
aad
call
pop
in
xchg
gs
ljmp
pusha
dec
das
pushf
rcl
push
fiaddl
outsl
sbb
mov
xchg
adc
pushf
push
mov
lret
adc
xlat
lock
fwait
add
out
int
jmp
sub
mov
mov
jne
xchg
ret
mov
loopne
mov
jb
test
fisubrl
pop
xchg
lahf
jo
mov
adc
shr
aas
mov
lods
shrb
mov
arpl
fwait
add
lret
mov
add
add
push
sahf
fmuls
push
jns
mov
notb
fsubs
or
jp
and
es
je
shr
rolb
out
jle
sub
out
fwait
pop
ror
ret
mov
dec
xchg
loope
ret
dec
idivl
call
xor
into
inc
inc
dec
jge
push
lret
movsb
test
ds
inc
xchg
faddl
sbb
xadd
cwtl
das
sub
xchg
mov
sbb
lds
dec
add
or
loope
scas
mov
push
sbb
js
movsb
pusha
xor
add
mov
push
pop
adc
fiaddl
mov
sbb
xor
fs
loopne
push
mov
jge
dec
and
lret
mov
je
pop
imul
rorb
cld
lahf
mov
fisubs
pop
sub
jb
jno
jg
jmp
xor
nop
and
loop
adc
rcll
into
pop
mov
int
call
ss
cltd
xchg
mov
dec
mov
mov
movsb
int
and
dec
insb
push
mov
and
cld
dec
fmul
int
jo
cld
xchg
mov
push
test
scas
jae
call
loopne
pop
mov
addr16
pop
sahf
push
xor
jno
xchg
aas
add
ljmp
cmpsb
movsl
mov
dec
bnd
adc
lock
inc
ud1
es
pop
mov
mov
mov
and
mov
mull
aas
xor
push
add
in
repnz
cmp
push
mov
test
rcrl
mov
push
rclb
sbb
aaa
and
enter
add
lcall
jb
pop
mov
bound
mov
cmc
push
test
jae
push
pop
mov
or
mov
inc
pop
cs
iret
mov
hlt
mov
push
sub
mov
mov
xor
lahf
mov
add
data16
mov
stos
call
outsb
lret
fcomi
mov
outsb
mov
das
fs
in
cmpsb
and
aad
aam
dec
and
push
push
insl
or
in
and
adc
mov
enter
cmp
jle
cmpsb
adc
enter
or
icebp
enter
std
or
divl
add
das
test
or
test
sarl
nop
push
movsb
aaa
xchg
test
in
test
add
aam
mov
out
mov
inc
stc
in
adc
and
cwtl
movsb
sbb
lret
das
push
mov
jne
push
xchg
xchg
mov
loopne
stc
in
test
in
enter
mov
je
outsb
lcall
mov
push
into
out
mov
mov
cmpsb
enter
inc
subb
shrb
jae
mov
cmp
xor
lock
repz
call
or
cmp
ss
adc
mov
mov
pop
ljmp
hlt
bound
hlt
lcall
lahf
int
push
xor
or
mov
fadd
loope
in
cmp
in
nop
jno
jnp
dec
lret
call
stos
sbb
fwait
jbe
sbb
adc
sub
test
pusha
ret
repnz
mov
lock
jbe
pop
ljmp
out
jo
mov
xchg
push
sbb
push
jne
jno
outsb
pusha
jle
das
pop
mov
cmp
aam
loopne
jnp
inc
lahf
mov
push
negl
subb
adc
or
ljmp
ret
pop
jns
fdivs
popf
dec
iret
iret
testb
lods
mov
and
or
js
jecxz
and
adc
lahf
mov
pushf
dec
out
mov
lods
sub
xchg
cltd
sub
inc
enter
repnz
push
ret
inc
lcall
cwtl
inc
add
xchg
xabort
aad
mov
das
icebp
mov
fcmovnbe
and
stc
inc
xchg
iret
loopne
adc
daa
out
lcall
mov
rorb
bound
mov
popf
jns
mov
dec
aad
js
cmpsb
and
in
and
add
xor
ret
orl
push
sbb
lret
and
test
push
fs
out
sub
enter
out
sahf
cmpsl
repz
test
cmpsb
xlat
lods
mov
inc
push
cmp
lcall
mov
mov
test
call
pop
or
mov
lcall
xchg
idivl
test
sub
jno
xchg
popa
out
in
jecxz
gs
sub
or
inc
scas
movsl
out
inc
or
std
movsb
lret
neg
dec
jp
push
rcll
jnp
pop
jnp
addl
xchg
mov
mov
es
or
popa
mov
repz
mov
xchg
xchg
ret
mov
mov
mov
fsubl
rcrl
arpl
cs
add
std
pusha
mov
fidivrs
sub
leave
sub
mov
add
test
out
xor
push
int3
mov
hlt
push
adc
pop
mov
mov
add
fidivrs
cltd
sbb
jno
je
imul
lcall
sarl
add
imul
or
loopne
mov
movsb
mov
sbb
fists
jmp
xor
ret
enter
into
and
push
roll
roll
jmp
jecxz
xor
cmp
sub
sbb
test
rolb
push
popa
cli
and
idivb
lds
test
push
cmpsb
xor
push
lcall
shlb
mov
jne
test
das
pusha
lret
push
call
and
jo
pop
and
mov
popa
out
adc
and
xor
mov
mov
or
and
xchg
leave
loopne
push
call
cs
xchg
jp
mov
out
out
sbb
mov
outsb
repz
pushf
and
notb
mov
jo
shll
cld
push
sahf
loop
dec
inc
mov
das
xchg
mov
mov
nop
xlat
pushf
scas
cs
sub
add
lods
push
scas
mov
aas
and
sub
xor
pop
stos
xchg
mov
mov
insb
aam
inc
jnp
int3
xchg
push
loop
xchg
out
out
addr16
or
stc
in
cli
and
icebp
insl
cmp
dec
mov
es
add
ffreep
xchg
mov
sbb
xor
lea
imul
inc
push
popf
jle
jb
fcmovu
test
push
bound
aaa
mov
faddp
andl
mull
push
pusha
and
xor
fimuls
fcomip
adc
sbb
inc
and
push
cmc
std
std
leave
sbb
xor
ficoms
mov
jecxz
loopne
cmp
push
leave
shll
ss
pop
rcl
aas
dec
arpl
add
dec
popf
cmp
bound
jl
sbb
int3
jl
daa
shlb
shlb
sub
and
std
xchg
cmp
pop
aam
xor
sbb
loopne
hlt
inc
fs
daa
jmp
xchg
lcall
inc
addl
in
cwtl
enter
addr16
and
repz
or
xchg
jmp
sbb
pop
inc
lahf
dec
cs
loop
call
movsb
aaa
dec
and
fmulp
fidivrs
or
ss
icebp
mov
fs
sbb
dec
mov
das
ljmp
ret
cmp
add
add
jecxz
sub
int
push
int3
pop
mov
inc
ret
xchg
cmp
adc
ror
push
outsl
add
lods
popf
std
cmp
inc
xchg
adc
cmp
cmc
mov
add
cmp
faddl
push
adc
jnp
cmp
inc
xchg
and
popf
aam
jb
outsb
fistpll
jb
ss
or
or
xchg
fistpl
gs
mov
stos
dec
or
int
cmp
mov
roll
lahf
or
icebp
cmp
outsb
shl
popa
icebp
cmc
dec
pop
push
outsb
fs
lods
xlat
gs
mov
pop
sub
subl
sbb
test
cwtl
iret
and
push
cmpsl
cmp
jecxz
inc
or
scas
xchg
mov
lcall
xlat
in
popa
nop
lods
push
xlat
mov
int
or
int3
pop
push
and
xor
dec
outsl
push
or
incb
testb
sarb
cmp
fwait
arpl
add
mov
mov
cmp
ret
das
jno
push
ja
jnp
shl
pushl
pop
push
jbe
gs
daa
shll
scas
out
inc
add
push
jmp
xor
cmc
bnd
pop
xchg
mov
stos
dec
inc
pushf
or
pop
mov
pop
push
movl
adc
or
mov
or
mov
mov
adc
fstpl
xlat
nop
xchg
imul
idiv
cmc
sub
xlat
sbb
sub
lea
sub
in
scas
jmp
mov
addr16
inc
sub
addr16
push
pop
lret
xor
push
pop
lahf
sub
jl
ret
sub
movl
push
popa
push
mov
fneni(8087
fsubrs
push
insb
bound
sti
icebp
scas
pop
rcrl
jp
adc
pop
shl
pop
jnp
ret
push
add
add
sub
push
mov
imul
in
xor
xorl
pusha
mov
adc
fadds
cmp
mov
xor
loop
add
int
insl
mov
xlat
pusha
jne
shrl
mov
or
cmpl
mov
mov
cmp
xchg
xchg
sbb
clc
pop
mov
ljmp
xchg
jb
dec
es
sbb
stos
shlb
cmp
dec
pop
rcll
push
mov
pop
adc
lods
dec
add
sub
sub
mov
dec
test
or
in
mov
ret
mov
orb
stc
aaa
sti
jge
popf
xchg
xor
xor
rolb
xor
lock
gs
pop
pop
inc
in
ret
jbe
dec
sbb
or
cmp
mov
xchg
mov
cli
jg
pop
mov
xorb
jnp
jecxz
nop
mov
pop
cld
mov
mov
xor
or
lret
push
pop
cmp
popf
mov
jge
dec
mov
sti
addl
jl
push
push
mov
das
aas
iret
inc
mov
jae
enter
out
xor
cmpsl
cli
out
iret
fsubs
les
shl
test
sti
int
xchg
and
add
or
push
xchg
mov
jp
jb
in
popa
out
xor
or
inc
cmp
addr16
inc
cmpsl
push
repz
jle
adc
mov
jb
add
fldt
rclb
cmpsb
test
mov
fdivrs
inc
mov
xor
push
mov
push
mov
cs
aad
js
sub
fs
fisttps
adc
push
iret
ficompl
lods
mov
out
xchg
jecxz
iret
ja
or
fdivr
and
or
imul
pop
pop
and
pop
jno
or
mov
mov
inc
xor
add
test
stos
inc
mov
or
mov
cmp
lods
cmc
popa
sbb
addl
mov
cmp
adcl
loop
push
lcall
mov
mov
cli
mul
lcall
in
fwait
pop
adc
adc
and
leave
pop
push
js
mov
sub
insl
ret
cmp
cmp
lret
std
loop
adc
repnz
sub
mov
lret
xchg
sbb
mov
dec
and
adc
imul
insl
cmpl
cmp
lds
cmp
jle
ds
mov
jp
pop
scas
mov
addr16
push
adc
imul
mov
cmc
jb
and
push
or
fnstcw
xchg
addr16
js
mov
nop
incl
cmc
dec
scas
fsts
clc
pop
loop
cli
mov
pop
xchg
shll
cltd
mov
inc
mov
hlt
fstpl
jecxz
mov
mov
xchg
xchg
cmp
mov
lods
push
popa
in
add
and
xor
xchg
mov
cs
add
xchg
xchg
fldcw
mov
in
add
jmp
xchg
jmp
divb
pop
adc
push
int
sti
or
pop
mov
pop
lds
cmc
pop
jl
push
shl
imul
xchg
jg
xchg
fbstp
pushf
push
imul
push
in
shlb
dec
xor
fdivl
sbb
adc
aad
sub
jl
mov
mov
push
xchg
jle
clc
add
mov
xchg
loopne
adc
mov
int3
jo
shrl
inc
sub
xchg
outsb
adcb
mov
mov
or
es
incb
dec
or
pop
jecxz
xchg
and
ss
fs
clc
xor
jo
xlat
add
movsl
fnstsw
mov
icebp
leavew
fisttps
in
loop
inc
je
push
data16
push
xlat
mov
xchg
mov
mov
sbb
es
mov
insl
pop
ljmp
fisubl
cs
aas
sbb
inc
add
add
pop
mov
push
inc
imul
or
and
fdivl
jge
sub
mov
shrb
pop
inc
data16
scas
sub
testl
ret
push
rcrb
sti
popa
stos
incl
pop
lock
adc
js
scas
dec
flds
mov
mov
leave
add
pop
adc
xchg
mov
or
arpl
sbb
xor
rclb
mov
mov
mov
imul
pop
cmp
mov
adcb
mov
jmp
scas
pushf
mov
bound
outsl
push
in
xor
and
mov
sarb
mov
mov
xor
out
fs
xchg
das
xchg
push
jecxz
lods
loop
mov
mov
and
lret
xor
and
scas
hlt
ss
aad
enter
lcall
scas
or
icebp
add
popf
sbb
test
and
outsl
mov
out
xchg
in
adc
sub
xchg
int
adc
les
sahf
ret
test
jbe
imul
or
mov
or
insl
cwtl
lods
icebp
xchg
dec
add
loop
mov
ss
adc
pop
or
repnz
pop
jns
insl
jge
js
jae
rcr
lock
cli
aad
add
xor
cmp
loop
add
cmc
dec
sbb
mov
jle
cmp
daa
in
cmp
incl
jno
sahf
fsubl
nop
lock
pop
and
xchg
pop
mov
shll
dec
add
and
jmp
test
cld
cmp
jmp
or
mov
out
pop
cmc
loopne
out
ja
fistps
loop
ret
and
cld
ret
xor
mov
cltd
sbbb
xchg
mov
xor
mov
mov
mov
mov
add
xchg
aad
outsb
addl
pusha
aas
mov
and
fdivs
hlt
test
movsb
mov
mov
outsl
aam
out
cld
cmp
sbb
jae,pn
sbb
ss
insl
sub
inc
lock
push
mov
mov
stc
inc
aam
jmp
xchg
test
pop
out
lods
nopl
aas
xchg
pop
xlat
insl
outsb
das
stc
stos
xchg
lcall
mov
cmp
das
icebp
lcall
dec
dec
lret
in
rorb
fldt
outsl
mov
fcoms
std
xchg
mov
rcrb
sbb
lods
sub
adc
loopne
lret
sub
aad
shrb
add
ret
xchg
sbb
lcall
inc
dec
mov
rolb
xor
iret
push
scas
mov
dec
mov
les
cmp
pop
xchg
jno
nop
test
nop
push
imul
out
add
sub
ja
adc
jp
imul
aad
cwtl
or
jae
adc
push
adc
xor
xchg
dec
sub
and
jge
pop
pushl
or
mov
mov
mov
pushf
outsb
lds
ljmp
sub
aaa
push
jae
cmp
push
jae
mov
hlt
sub
imul
ja
mov
gs
fadds
imul
loope
dec
mov
aam
push
mov
xchg
addr16
xchg
in
xchg
int
pop
hlt
fcompl
push
lret
ret
lods
ret
out
repz
mov
xchg
stos
leave
aaa
jecxz
and
mov
stc
loope
and
lret
inc
add
xor
out
rcrl
lret
xchg
dec
sub
push
add
pop
mov
stos
mov
mov
mov
lods
add
push
xchg
or
out
sub
mov
ja
aad
adc
jb
dec
cmpsb
jp
dec
add
jne
je
lea
mov
mov
scas
jge
mov
addr16
mov
je
jg
and
sbb
adcb
inc
push
filds
mov
pop
sti
or
pusha
xchg
aaa
out
push
hlt
push
or
jnp
push
mov
test
aam
push
cmp
cmp
mov
jae
mov
shlb
cmc
cmp
test
call
xchg
fdiv
mov
push
or
insb
iret
mov
dec
repz
leave
lcall
jmp
cmp
dec
cmpsl
int
xchg
mov
mov
stos
rorl
in
in
dec
jbe
mov
mov
into
cmpsl
cmpsb
push
adc
sbb
xor
cmc
rolb
insl
clc
jge
pop
out
test
jb
daa
pop
adc
push
cmpsl
add
cmp
adc
push
pusha
dec
xchg
cmp
mov
jae
pop
arpl
sahf
insl
add
cs
xchg
fidivs
jbe
aam
loop
std
outsb
mov
aam
test
xchg
cmp
xor
jo
daa
out
leave
in
pusha
cltd
insl
outsl
mov
mov
fs
adc
fstl
pop
stc
pop
inc
push
call
jl
leave
cmp
and
sahf
adc
mov
cmpsb
pop
xchg
sbb
jl
and
fimuls
gs
dec
shlb
arpl
mov
mov
sti
pmaxsw
sarb
dec
mov
adc
push
lcall
pop
iret
xchg
fs
in
or
cmpsl
adc
outsb
outsb
inc
fisttps
xor
inc
jecxz
stos
mov
sub
lds
pusha
sbb
or
inc
jge
loop
scas
ss
sbb
jbe
addr16
add
mov
jno
enter
lret
inc
adc
or
sub
int
lods
lods
jge
cmp
pop
cmpsb
aad
add
mov
and
xor
mov
stc
lods
scas
sbbb
je
fistl
mov
jno
jge
jecxz
dec
mov
out
jns
fisubs
pusha
mov
lret
adc
rcl
ret
inc
shlb
je
jle
pop
xchg
jmp
mov
sub
pop
imul
pop
pop
dec
xchg
inc
fs
mov
adc
popl
std
pop
pop
stos
jl
lahf
outsl
sahf
pop
in
mov
fwait
mov
int3
sbbb
mov
in
daa
out
inc
sbb
rorb
out
mov
fmuls
sbb
mov
mov
fwait
and
lret
pushf
or
xor
daa
into
clc
pushf
mov
mov
les
mov
cmpsb
les
test
pop
adc
lds
push
das
dec
sbb
out
jae
mov
mov
or
sbb
sahf
fcomps
out
inc
xor
cmp
lods
mov
inc
pop
and
inc
jge
push
sub
xchg
fistl
inc
rcl
sub
cmpsl
outsl
cs
int
cmp
sbb
or
mov
orl
add
pop
int3
jp
mov
movsb
loope
bound
hlt
cmp
lea
arpl
mov
xchg
mov
dec
fwait
adc
inc
add
out
jmp
outsl
jg
xchg
or
and
stc
out
repz
ficoms
inc
divb
cmp
push
imul
popa
jns
mov
jbe
into
push
sbb
mov
xchg
inc
cmc
es
mov
sbbl
xchg
cmpsl
inc
int3
rcl
sbbl
jbe
ret
add
xorb
test
sbb
adc
adc
mov
sarl
add
pop
pop
jbe
out
ja
cmpsl
mov
ljmp
or
aaa
xor
adc
jbe
xchg
mov
jmp
repnz
das
xor
pop
lahf
inc
mov
pop
jns
into
scas
push
dec
leave
fadds
js
out
out
pusha
ss
ret
pop
test
push
or
pop
scas
xor
push
popa
stos
or
ds
int3
into
jg
gs
pop
cwtl
test
test
add
cmc
pop
pop
not
stos
in
jle
dec
ss
pop
scas
popf
add
bound
xchg
scas
mov
jbe
or
mov
dec
iret
js
sbb
cmp
ret
cmpsl
in
lahf
jo
fisubl
add
mov
bound
dec
cmp
jbe
ret
add
dec
dec
gs
pop
dec
and
sbb
mov
jle
inc
sub
lcall
bound
jns
dec
out
adc
cmp
jmp
xor
dec
mov
lods
dec
xor
enter
pop
xchg
push
outsb
jmp
jl
rclb
and
dec
inc
xor
mov
loopne
fcomip
lcall
mov
cld
daa
arpl
jmp
test
pop
scas
inc
push
cmc
sbb
je
mov
push
divl
or
inc
or
pushf
mov
or
subb
arpl
xchg
cmp
out
scas
or
fwait
jle
dec
add
dec
push
mov
loopne
adc
faddl
imul
lret
sub
inc
xchg
adc
test
shrb
sub
stos
adc
cld
popa
sti
add
idiv
mov
inc
es
mov
das
jbe
adc
mov
push
pop
add
addr16
cmpsb
pop
sub
inc
cmp
fidivrl
iret
adc
inc
jnp
cld
jle
fxch
push
adc
push
fistps
test
add
bnd
dec
push
push
push
and
xorl
adc
ljmp
inc
pusha
push
inc
sub
movsl
inc
jo
or
enter
mov
stc
cmpsl
test
add
push
cli
jp
mov
xchg
pop
inc
in
inc
lahf
scas
dec
pusha
movsl
xor
setl
xor
pop
je
mov
lret
stos
call
adc
cs
mov
mov
aad
adc
xor
leave
fwait
xchg
mov
jne
pop
jp
push
icebp
ds
imul
inc
frstor
test
jecxz
lock
jp
call
mull
stos
in
idivl
sti
adc
and
dec
js
call
mov
dec
mov
dec
adc
sbb
mov
add
sbb
mov
pushf
or
mov
cmc
leave
mov
cmpsb
aas
outsb
mov
dec
fdiv
lock
ss
pop
adc
pop
mov
faddl
hlt
sbb
push
xchg
mov
pushaw
xchg
mov
hlt
mov
js
inc
out
aad
sbb
int3
push
cltd
orb
test
xchg
sub
push
push
ss
jecxz
sub
loope
lea
cmpsl
pop
insl
sub
adc
cmpsb
jne
mov
dec
out
fstl
cmc
push
adc
fsubs
adc
xchg
inc
test
jmp
lea
shrl
lds
inc
inc
mov
cld
xor
dec
sub
movsb
cwtl
mov
mov
repz
adc
bound
jmp
jae
iret
in
adc
clc
ljmp
xor
adc
outsl
ds
arpl
xchg
scas
cs
ret
call
sarl
pop
adc
rcrb
test
push
pop
loopne
lods
sbb
ljmp
push
add
xorb
jnp
dec
dec
xor
pop
ja
sbb
cmc
adc
mov
add
lahf
stc
sbb
push
push
mov
mov
sub
inc
movsb
and
inc
pop
and
mov
test
mov
jl
out
mov
test
xor
adc
in
adc
mov
pop
pop
cmp
pushf
push
push
mov
int3
or
jmp
insb
pop
mov
fdecstp
and
mov
add
fwait
sbb
lods
or
push
pusha
cli
push
or
hlt
dec
fwait
out
mov
add
mov
ss
sub
test
inc
ds
dec
out
sbb
add
std
cmp
js
mov
sbb
mov
or
insl
jl
cli
pusha
adc
jnp
mov
lods
dec
scas
out
cmpsb
icebp
icebp
dec
lods
lea
jle
xlat
push
loopne
push
jb
insl
inc
mov
dec
stos
xchg
pop
mov
lret
popf
in
clc
rcl
jns
push
shl
add
iret
in
lret
orb
add
test
sub
push
sbb
cmpsl
aam
fucompp
push
inc
hlt
andnps
jle
cmp
push
mov
sbb
cmp
fnstcw
jno
mov
xchg
cmp
push
mov
sbb
jp
es
into
shl
imul
push
imul
mov
pop
loopne
movsl
sub
mov
movb
cld
mov
icebp
jl
jo
mov
in
int
and
adc
adc
jmp
fnsave
xor
add
int3
pop
xchg
stos
inc
aaa
inc
das
clc
pusha
sub
pop
dec
push
cmpsl
mov
sub
repnz
cmp
inc
and
lds
fistps
jg
popa
fldl
addb
ja
push
push
fiaddl
test
add
xchg
rolb
inc
arpl
das
dec
push
scas
mov
out
mov
xchg
sbb
inc
push
ss
ret
lods
les
xor
scas
push
fsubrl
loope
jle
scas
jne
adc
add
lds
adc
adc
scas
pop
leave
loope
data16
fcoml
push
mov
cmp
dec
or
jle
int3
lds
mov
in
push
fidivrs
push
incb
push
in
gs
lahf
lods
pop
cld
mov
mov
inc
push
pop
lock
pop
ljmp
mov
xor
daa
mov
inc
mov
dec
mov
ret
psubsb
jnp
adc
push
jecxz
into
cltd
sub
push
rorl
in
test
lcall
xchg
pop
mov
and
popa
pushf
dec
and
ljmp
pop
es
loope
sub
lea
gs
mov
insb
outsl
ja
jns
sbb
jmp
jno
leave
sahf
or
test
cwtl
pushf
aad
xchg
mov
dec
lds
lret
mov
xor
ljmp
repz
loope
loop
inc
xchg
sbb
movsb
jl
addr16
out
sahf
sub
inc
mov
sub
pusha
iret
mov
pop
loopne
add
sti
movsl
fwait
pop
and
mov
orb
ss
les
je
ret
mov
out
lea
mov
xor
jo
hlt
fs
mov
push
dec
rcrb
shrl
or
nop
clc
repnz
jecxz
enter
fwait
leave
movsl
es
sti
push
inc
cmp
add
mov
mov
aam
cli
push
jp
sbb
shlb
out
lods
icebp
xor
inc
test
aas
subl
cmpl
lahf
adc
ljmp
mov
fmul
lods
mov
sbb
stos
mov
xchg
dec
inc
emms
or
xor
pop
sub
push
inc
jecxz
cmp
fdivrl
xor
sub
pushf
xchg
leave
push
push
in
mov
cmp
sub
lcall
mov
inc
mov
test
sub
gs
cld
inc
sub
decb
cmp
jnp
push
insb
mov
jmp
inc
dec
popa
cli
pop
movl
jo
scas
push
push
fwait
movsb
sub
mov
jae
fidivl
inc
fimuls
cmpsb
mov
inc
das
jecxz
xchg
mull
xor
int
lods
data16
in
lds
nop
xchg
and
arpl
data16
jo
mov
push
les
xor
cmpsl
popa
mov
mov
lahf
or
faddl
and
pop
sbb
std
jge
cmp
stos
mov
add
xor
mov
jp
icebp
sahf
or
lret
leave
sbb
xor
pop
enter
xchg
xchg
cs
lock
push
test
lret
lahf
xchg
sahf
jns
aaa
mov
call
adc
jo
dec
outsl
inc
add
cmp
xchg
popa
aam
fadds
mov
push
dec
sbb
xor
scas
es
mov
aaa
popa
ret
cltd
mov
mov
jle
out
loop
adc
xor
xchg
enter
xor
jnp
fwait
add
xor
xchg
jne
bswap
iret
scas
add
mov
out
das
loope
cmpsl
fs
push
jp
push
sub
sbb
shll
cwtl
addr16
dec
inc
pop
dec
adc
mov
or
pop
pop
in
cmp
cmp
jge
fcomps
push
sub
mov
pop
mov
ret
mov
iret
mov
inc
mov
aad
mov
pusha
leave
mov
or
sub
dec
inc
aam
movsl
push
or
fnsave
sub
mov
jae
int
dec
dec
dec
mov
sbb
scas
int
inc
jge
sbb
inc
dec
cmpl
stos
and
xchg
mov
fcompl
mov
pop
jns
fists
fidivrl
and
mov
push
add
dec
div
push
scas
in
stos
int
jbe
xor
mov
adc
fldl
addr16
mov
les
out
jp
or
sub
mov
ret
decl
xor
xor
aaa
adc
lcall
sbb
sub
cmp
and
rcrb
jno
sub
pusha
jp
icebp
pop
push
ret
ret
jg
sub
push
pop
lret
add
ja
sub
rcrl
shr
inc
pop
loope
notb
jecxz
lcall
pop
and
sbb
int
into
loop
mov
inc
mov
lea
test
mov
inc
loope
jns
jne
xlat
or
js
cmpsl
clc
fisubl
xor
jns
clc
jb
and
xchg
test
jp
imul
push
jmp
mov
dec
pop
mov
mov
outsl
test
xor
je
stc
xchg
adc
out
int3
dec
pop
rcl
xlat
cmpsl
leave
int
stos
sbb
or
testl
roll
dec
cmc
cwtl
je
xor
sub
or
mov
xor
xchg
add
mov
pop
pop
sbbb
jo
and
loope
dec
push
mov
popf
lds
inc
dec
and
int
jge
rcrl
mov
add
fidivs
icebp
jns
cltd
sbb
shl
push
aam
sarb
inc
xchg
outsb
pop
daa
jnp
pushf
cmpsl
pop
in
daa
dec
test
in
repnz
pop
push
dec
sub
and
in
jmp
or
cld
mov
negl
and
inc
in
jae
cmp
and
pop
shrb
dec
test
sahf
adc
cmpsb
dec
push
fstpl
popf
stc
jmp
cli
sub
adc
shrl
dec
ret
and
xor
mov
and
sbb
mov
hlt
or
jnp
inc
es
mov
sarl
jno
mov
or
cmp
jb
lods
push
test
jl
std
bnd
push
nop
hlt
lret
bound
cmp
xor
mov
dec
ret
andb
aaa
stc
add
or
ja
inc
test
aaa
into
mov
data16
sbb
dec
or
int
push
lret
mov
icebp
addr16
mov
xchg
mov
mov
push
imul
outsl
sti
cmpsb
xor
jl
push
jae
push
pushl
jmp
ja
ret
sar
mov
psubb
rcll
hlt
insl
popa
cmpb
lret
pop
hlt
xlat
sbb
and
inc
lds
xlat
outsb
je
mov
dec
jno
jmp
sbb
mov
sbbb
or
mov
stos
lret
inc
mov
and
arpl
fstps
movsl
in
mov
adcb
outsb
or
push
mov
fisubl
inc
loop
pmaxsw
test
xchg
fdivl
leave
dec
jae
addr16
bound
sbb
push
jb
jge
out
je
addr16
ret
jmp
inc
pop
scas
test
ret
fwait
jge
lods
in
inc
or
push
jne
sbb
mov
adc
mov
xchg
iret
sub
adc
dec
xor
xchg
or
mov
pop
cwtl
fstpl
cld
and
xor
rolb
popa
test
out
mov
mov
mov
push
cmp
and
dec
mov
nop
nop
or
jg
cwtl
jnp
test
out
aaa
subl
iret
daa
data16
push
fnstenv
mov
jnp
data16
bound
add
arpl
jno
addl
adc
scas
loope
dec
stos
loopne
jmp
pushf
popf
movsb
sbb
add
pop
or
sub
cmpsl
call
push
inc
jl
xor
popa
pop
push
shl
les
data16
add
ret
movsb
xchg
ss
into
pop
push
push
push
mov
pop
or
test
enter
dec
or
push
lret
push
testl
inc
cmpsb
add
cs
mov
pop
mov
adc
mov
negl
push
rcll
pop
sbb
inc
ss
mov
push
out
cli
iret
dec
and
mov
push
test
lock
pop
mov
jg
add
ss
ja
ss
push
xlat
out
bound
movsb
in
dec
scas
sbb
mov
xchg
xor
dec
inc
inc
jne
jmp
das
mov
inc
adc
jns
xchg
ret
pop
adc
adc
xlat
mov
dec
push
or
cmc
xchg
fwait
push
cli
aas
xchg
push
rcll
mov
jbe
mov
inc
enter
dec
insb
xchg
pop
lock
pop
inc
imul
test
les
push
out
ja
jae
les
jmp
in
sub
and
sbb
loopne
mov
pop
xlat
inc
jnp
xor
mov
fdivrl
dec
stos
push
xchg
imul
into
xchg
aas
testl
jae
add
inc
inc
rclb
xchg
mov
lret
pop
push
or
orb
cmp
test
outsl
push
lods
js
sub
lret
xor
nop
movsl
ds
jmp
addr16
dec
into
mov
jmp
or
stc
jns
jmp
out
loope
xor
jo
push
popa
mov
xor
aam
dec
lods
jge
xor
add
in
test
push
cmp
iret
or
into
dec
add
mov
sbb
jl
repnz
jne
orl
xchg
jge
sti
pop
fnstsw
add
or
loope
scas
sub
sbb
cmp
out
dec
adc
add
in
xlat
inc
ret
lods
and
cmc
in
out
cltd
mov
inc
mov
int
pop
inc
insb
mov
and
mov
lea
push
lds
adc
call
ja
jle
shl
cmp
out
out
int3
sub
inc
lds
mov
push
sti
mov
lock
loopne
outsl
pop
stc
jno
sbb
lea
push
dec
mov
call
out
cmpl
mov
cmp
push
data16
scas
xor
xchg
sarb
push
dec
cwtl
inc
daa
popf
adc
sbb
nop
xchg
and
decl
pop
push
clc
popf
cmp
aas
pop
xlat
mov
dec
pop
cwtl
cmc
mov
push
add
nop
pop
ja
xor
and
xor
dec
push
cmp
push
pop
sub
scas
imul
lods
addr16
or
mov
fwait
enter
inc
sbb
dec
mov
gs
lock
lahf
dec
lahf
ret
jbe
jno
lret
jl
cmp
sbb
movsb
nop
outsl
daa
pop
mov
out
sub
mov
pop
adc
aad
fisttpll
mov
daa
mov
jge
xchg
or
or
xlat
iret
or
sub
aaa
pop
pop
and
addr16
or
divl
xchg
dec
into
push
pop
sub
xor
and
jns
jecxz
xchg
not
xchg
inc
mov
std
int
imul
aam
loop
jecxz
imul
add
adc
rcll
jno
loope
es
or
inc
add
xor
jo
divb
xchg
sahf
sbb
das
xlat
ret
es
lret
loop
push
ret
jp
gs
not
test
xchg
and
shrb
push
iret
data16
in
shr
sub
adc
sub
test
pusha
divl
push
adc
in
ret
xor
imul
adc
inc
jle
inc
or
dec
pop
cmpsl
unpckhps
jp
popa
jb
ficoms
jne
ds
out
push
rorb
xchg
movsb
out
aad
aaa
outsl
movsl
mov
adc
cmp
mov
xchg
icebp
pushf
in
jg
rcll
in
out
fisttpl
or
or
sbbl
xor
rorl
add
bound
in
inc
ds
xchg
fiaddl
pop
mov
sbb
add
fdivl
cmpb
add
or
pop
mov
testb
xchg
lret
aas
aam
add
popa
imul
jl
xchg
loop
xor
mov
dec
pop
mov
or
sub
xor
pop
into
mov
inc
jecxz
add
inc
pushf
push
out
xchg
aaa
test
and
lods
fstpl
jl
int3
fisttpll
and
inc
pop
mov
xor
jo
fimuls
xor
shlb
and
add
shrb
mov
loop
push
jmp
out
orl
jle
jecxz,pt
push
sbb
jp
lock
lahf
lahf
pop
fwait
adc
jb
and
ret
sub
pop
cmp
insl
pop
stos
lcall
data16
cwtl
adc
sbb
inc
or
jg
pop
xchg
nop
adc
leave
movsb
fnsave
insl
inc
das
test
or
and
dec
or
sub
adc
insl
mov
test
jmp
cli
ret
pop
push
mov
add
xlat
sub
and
jo
cmpsl
sub
pop
andb
and
sarl
push
out
insl
enter
cmp
inc
xchg
mov
mov
mov
mov
adc
cwtl
lods
sub
das
cmp
pop
lock
mov
push
xchg
shlb
ret
jns
nop
dec
adc
add
push
fmull
stos
aaa
mov
loope
shrb
xor
fcompl
xor
pop
adc
mov
popa
divl
in
sarl
sub
fs
adc
add
push
dec
xor
std
dec
daa
repz
jbe
mov
pop
inc
cltd
or
aas
cltd
pop
addb
lock
test
std
ds
insb
lret
inc
sub
cld
jle
dec
sub
adc
test
inc
fmulp
or
into
mov
test
enter
sbb
leave
pop
push
mov
xchg
lret
adc
mov
std
xchg
jg
sbb
jmp
insl
out
pop
or
and
lock
dec
test
push
sub
cmc
jae
adc
xor
insb
mov
sbb
sub
mov
jne
cmpb
in
sbb
sub
arpl
pop
pop
lahf
mov
stos
mov
test
scas
fidivs
stos
or
aaa
push
sbb
or
sbb
jo
jge
lahf
sbb
pusha
adc
or
push
pop
fbld
cmp
jl
arpl
dec
cmp
jmp
mov
push
dec
adc
fwait
xor
dec
rolb
out
mov
rclb
mov
push
jo,pn
cld
adc
adc
push
dec
popa
dec
lcall
lahf
sbb
dec
mov
jne
and
lods
push
adc
mov
lret
jns
pop
rcrb
testl
add
sahf
shrl
or
enter
push
das
mov
fistl
or
inc
xor
xchg
aam
mov
fldl
aad
movsb
ficompl
in
cmpsl
imul
in
shll
pop
scas
push
rolb
scas
insl
andb
in
xchg
mov
faddl
sbb
push
clc
mov
mov
arpl
stos
jmp
lods
and
jg
sub
popa
out
shr
and
pop
xor
sahf
into
xchg
or
jg
xchg
ret
insb
leave
mov
stos
fisubs
fmull
arpl
std
pop
add
cmp
xchg
mov
into
jb
adc
mov
cld
out
xor
shll
ficompl
mov
and
iret
xorl
and
cwtl
shlb
loop
fstpl
mov
fcmovne
test
xchg
ljmp
lds
pop
inc
jns
sahf
and
mov
arpl
test
inc
adc
rorb
dec
add
leave
fstl
cmpsl
notl
loop
xchg
mov
push
mov
lods
ret
sahf
jmp
cmp
bound
push
out
add
jecxz
pop
xor
add
aas
popa
fisttpll
in
jp
mov
or
push
cmp
mov
addr16
stc
pop
add
rclb
daa
xor
outsl
testl
ret
jo
ret
adc
mov
jne
insl
pop
aad
enter
pop
adcl
pop
push
xor
lods
and
mov
stc
jno
push
lea
pop
mov
jl
scas
sahf
pop
sbb
pushf
test
pop
in
subb
mov
jnp
pop
adc
les
push
pop
sbb
jecxz
jb
arpl
push
cmp
push
repz
push
pop
push
cs
pop
lods
and
andb
or
or
fnstcw
negl
push
xor
mov
setp
std
dec
add
outsb
sub
cmc
mov
pop
ficomps
jne
test
push
and
xor
arpl
arpl
push
and
lock
jb
pop
push
mov
jl
stc
or
cld
xor
in
test
xchg
shlb
repz
arpl
jno
dec
fdivrs
dec
insl
sbb
pop
popf
pop
shrb
gs
xor
movsl
mov
pop
test
xor
es
or
jl
js
add
cmp
pop
adc
mov
pop
fwait
push
adcl
add
cwtl
jl
hlt
subl
cmp
mov
and
popf
lcall
xor
fldt
shlb
adc
sbb
inc
xlat
push
enter
fs
dec
fwait
mov
add
push
movsb
jmp
push
pop
fidivs
mov
cmpsl
add
push
aad
sarb
push
push
jg
inc
mov
fwait
fs
repnz
add
movsl
nop
mov
out
dec
inc
adc
test
stos
faddl
inc
mov
inc
pop
inc
fsubrs
mov
push
mov
and
les
push
popa
popf
lret
in
pop
sbb
clc
lds
cltd
and
pop
mov
dec
mov
or
xlat
sbb
adc
add
add
lcall
adc
mov
insl
dec
fisubs
scas
pop
addr16
push
mov
pushf
pop
mov
cmpb
push
xor
sub
lret
cmp
inc
in
sbb
adc
mov
je
push
data16
icebp
test
pop
test
out
fsubp
mov
adc
nop
out
jp
cmc
popa
mov
outsl
dec
popf
out
xor
sbb
jnp
fwait
leave
clc
test
add
imulb
adc
mov
dec
or
mov
jge
mov
mov
mov
stc
out
cmp
sbb
in
roll
cmp
out
mov
ds
fildl
dec
lret
and
push
loope
push
or
xchg
or
rcll
insb
sbb
mov
das
fs
xlat
dec
ficomps
roll
jp
ret
mov
or
dec
jnp
xchg
xor
sbbl
std
sub
aad
mov
in
testb
das
sub
inc
add
out
or
cmpsl
sbb
into
push
mov
mov
mov
or
ret
or
loop
divb
insl
loopne
mov
sbbb
fildll
rcr
fs
lea
fwait
sarl
movsl
and
pop
ja
sub
lahf
addr16
fisttps
lock
div
lea
xchg
mov
mov
ds
adc
mov
vpminsw
mov
pop
push
ja
addb
mov
loope
and
dec
inc
or
sub
xchg
imul
aas
testb
dec
aam
leave
xchg
stos
pop
cmpsb
pusha
ljmp
int3
aaa
les
fs
cmp
loope
xlat
repz
or
shl
mov
pop
mov
rclb
rcrb
leave
jecxz
shlb
outsl
out
test
push
jl
jae
jle
xor
mov
enter
mov
shl
mov
mov
cs
int
cmp
hlt
out
mov
cmp
les
mov
adc
lods
mov
iret
inc
pop
sti
int3
jmp
nop
fcompp
and
mov
mov
lret
dec
fisubl
fsubrp
mov
sub
shl
pop
aad
xor
cwtl
xor
outsb
and
iret
andl
adc
std
mov
pop
push
mov
pop
addr16
inc
leave
pop
sub
ss
pusha
ljmp
or
inc
outsb
imul
cmc
mov
jne
dec
aam
pop
pop
fwait
rcrl
rorb
sbb
lcall
add
stos
sbb
out
pop
mov
inc
or
out
nop
rcll
pop
outsl
xchg
lret
out
pop
push
int
adc
inc
out
mov
lea
stos
clc
insb
dec
daa
lret
sti
push
ret
ja
jmp
stc
icebp
lea
sbb
cwtl
sahf
jne
js
stos
inc
js
cmc
in
or
inc
xchg
xchg
dec
xor
mov
in
dec
gs
push
sbb
cld
xorb
cmpsb
rcrb
dec
daa
imull
test
dec
out
fidivl
les
daa
mov
sbb
mov
mov
lret
cwtl
jns
xlat
sub
aad
jl
outsl
mov
movsl
stos
adc
sarb
mov
mov
jecxz
adc
iret
sub
pushf
cmp
lds
cld
and
push
push
mov
mull
sub
cmp
xchg
lret
movsl
lea
adc
rcrl
mov
mov
xchg
pop
jg
jecxz
or
push
fldt
dec
ljmp
jge
cmc
imul
scas
mov
mov
mov
outsl
lds
dec
sub
sub
cmc
jp
in
lds
xchg
lret
dec
div
mull
xor
sbb
cltd
lock
cmp
cmp
insb
faddl
hlt
dec
into
nop
inc
dec
scas
xchg
add
jecxz
push
and
and
xlat
lods
loop
xor
mov
ret
loope
add
in
aam
pop
fsubs
stc
mov
xlat
jle
xchg
adc
jle
sub
cmp
addr16
and
fs
or
loopne
js
xchg
enter
jo
pop
fildl
rcl
hlt
insl
xchg
and
pop
ficoms
push
in
mov
jg
or
push
mov
loop
arpl
inc
mov
xor
lcall
xchg
int
popa
xchg
out
in
scas
inc
fadds
sbb
sbb
lret
fcoml
xchg
enter
ljmp
mov
ds
add
inc
in
lahf
addr16
and
test
dec
or
loop
arpl
or
in
mov
mov
xlat
ret
pop
movsl
mov
xchg
leave
mov
out
clc
shll
xchg
add
sbb
lods
cld
pop
pop
push
adc
add
and
and
xor
mov
push
lds
dec
mov
sbb
xchg
mov
mov
jmp
fstps
ret
daa
cltd
loopne,pt
stc
repnz
test
aad
adc
and
cmpsl
and
addr16
push
inc
cmp
fadds
push
add
sahf
dec
xor
ret
and
sbb
xor
lcall
adc
xchg
int3
repz
into
sahf
add
push
mov
icebp
jmp
pop
fmull
sbb
xor
faddl
adc
push
jae
mov
dec
add
divl
push
popa
in
movsl
inc
xorl
in
ljmp
xchg
aad
lods
rcl
xchg
or
xchg
int
push
out
cltd
sahf
push
sub
push
pop
hlt
bound
hlt
dec
rcrb
arpl
movaps
aad
push
lahf
fwait
push
cmpsb
dec
daa
adc
adc
cmp
cmp
cmpsb
int
sarl
fsubrs
das
and
xchg
sbb
jns
push
jmp
mov
lahf
xchg
sub
gs
and
pop
enter
inc
mov
lea
test
sub
inc
popa
xchg
test
cmp
mov
mov
sahf
fldcw
sub
ret
stc
daa
mov
leave
jmp
notb
mov
sbb
flds
cld
sbb
pop
push
loop
fdivs
mov
in
imul
cmpsb
ret
dec
push
adc
dec
aam
dec
xor
push
imul
outsb
mov
xchg
push
les
nop
push
shr
js
dec
sub
push
or
dec
inc
inc
jp
outsl
and
mov
scas
cmp
lret
mov
aam
add
ja
dec
and
clc
ret
lea
sbb
jo
xor
xchg
insl
or
jb
bound
shlb
mov
inc
fldt
xchg
xor
sar
cmpsl
push
push
cmpsl
push
push
push
cmp
xchg
in
stos
pop
aam
sub
hlt
aam
mov
movsb
sbb
mov
hlt
ja
insb
jg
inc
mov
push
shrl
lahf
mov
orl
and
not
adc
or
cmc
xor
mov
add
push
imulb
xchg
adcl
inc
jecxz
fists
xchg
fadd
mov
add
pop
push
test
cmp
loopne
insb
fildll
repz
lods
in
movsb
jns
adc
aas
cmp
loopne
push
insl
xchg
or
gs
jmp
in
xor
shll
hlt
adc
mov
mov
test
and
or
mov
cmp
mov
jns
add
js
daa
inc
and
jecxz
data16
out
scas
pop
pusha
sbb
mov
add
sub
cmp
lahf
enter
ja
sub
push
adc
ret
mov
gs
push
cmp
ja
je
add
pop
xchg
and
fdivl
out
and
clc
bound
add
mov
xor
fwait
aad
pop
int3
cmpsb
push
xor
fs
xchg
xchg
call
push
dec
movsl
addb
dec
js
insl
mov
mov
mov
in
sub
sub
test
push
insl
stos
pop
push
int
pop
jmp
xor
fcmovnbe
gs
jg
aad
mov
pop
add
mov
xchg
loopne
xchg
dec
insb
in
sbb
inc
inc
stos
popl
shl
jnp
js
jp
dec
int3
xor
adc
mov
push
mov
sbb
jmp
add
test
and
jo
add
push
adc
add
ds
leave
xchg
mov
pop
sbb
push
cmp
adc
inc
cmpb
in
or
fistpl
jne
dec
aam
fs
push
loope
push
and
xacquire
dec
mov
push
int3
lods
nop
scas
xchg
sub
mov
ret
dec
push
into
jge
push
push
pop
jmp
sub
dec
mov
push
and
pop
xchg
mov
scas
xor
jle
inc
cmp
iret
xchg
fbstp
fadds
outsl
cmpsl
pop
cmp
sbb
xor
push
es
iret
dec
icebp
into
or
dec
mov
mov
add
int3
mov
mov
fiaddl
sbb
mov
es
test
push
mov
mov
in
roll
stos
and
popf
cld
fs
add
adc
xchg
pop
jp
cmp
push
jecxz
mov
stos
or
in
push
dec
mov
sub
mov
xchg
pushf
cmp
out
or
jmp
add
icebp
ret
push
ficoml
jbe
jae
xchg
pop
clc
adc
int3
lods
inc
loop
enter
dec
jno
sub
icebp
adc
nop
and
cmp
cmp
pop
in
leave
arpl
enter
push
or
pusha
add
pop
and
outsl
and
pop
mov
fsts
dec
mov
xchg
mov
in
pop
fidivl
fwait
sub
mov
push
add
repz
push
stc
aas
push
test
lods
jb
outsb
loop
jl
fs
aas
aad
pop
mov
cmp
lods
cmp
bound
mov
mov
mov
nop
icebp
adcl
sub
add
sub
rcrb
ja
fdivrs
popa
mov
sarb
and
jb
mov
mov
fmull
lock
es
adc
sub
int
aas
std
mov
mov
xchg
mov
or
out
jnp
ss
xchg
inc
jnp
dec
jl
les
sarl
push
xchg
adc
mov
push
add
leave
hlt
test
scas
test
call
int
jge
fnstenv
mov
cmc
push
js
mov
leave
repz
ds
ss
sbb
ret
mov
xchg
cmp
ret
cli
js
lods
xor
ss
repnz
adc
lahf
repnz
sti
sar
test
sbb
pop
aas
cmp
test
jno
jmp
es
inc
aaa
cmp
jbe
push
xchg
popa
jae
in
scas
rolb
push
inc
loop
sub
sbb
outsb
fisubrs
dec
call
insb
mov
loop
fs
adc
nop
aas
in
dec
lcall
pop
movsl
ret
cld
lock
mov
cmp
and
add
pop
push
dec
stos
adc
rcrl
adc
pushf
add
fidivrs
leave
xchg
push
xor
mov
stos
sbb
xor
fsubp
ret
jae
addr16
push
sarb
add
or
loopne
and
loopne
sub
push
mov
dec
mov
popfw
adc
dec
lret
je
rcrl
pop
inc
or
ja
aad
or
mov
sub
sbb
sbbl
imul
push
aaa
data16
pushf
mov
adc
mov
mov
mov
dec
jnp
popf
ret
mov
or
popf
stc
and
incl
fnsave
lsl
fcmovu
push
fmull
inc
std
sti
adc
inc
push
test
push
call
fs
cmpsb
movsb
es
xchg
enter
jno
sub
mov
cmp
stc
add
stc
stc
cmpsl
in
aad
inc
or
fwait
sbb
mov
jg
test
dec
cmp
mov
xchg
xchg
jp
push
pop
stos
pusha
xor
pusha
cs
mov
lret
inc
data16
es
repnz
pop
dec
xchg
pop
adc
jmp
ja
flds
xor
and
negb
ds
mov
cli
test
sbb
stos
cmp
test
call
imul
loopne
movsl
sti
add
loop
sti
xchg
push
and
int
nop
xorb
in
fcmovnbe
and
sbb
fld
test
pop
jns
jl
fwait
negl
push
and
and
pop
lea
cli
mov
add
lock
pop
stos
test
pop
cmpsl
in
test
xor
xor
inc
push
or
insb
mov
call
int
clc
dec
ror
add
push
movsl
fistpll
push
sub
cmp
mov
sarl
pushf
cli
sub
inc
repz
adc
cmpsb
or
pmullw
mov
outsl
mov
rclb
cli
lea
rcl
call
pop
pop
scas
std
jb
fldenv
test
sub
mov
xchg
sbb
sbb
ds
je
cmp
gs
test
mov
mulb
inc
cmp
shrl
cmp
xor
fnstenv
scas
pop
fildll
lods
cmpsl
lods
lods
repz
adc
aaa
push
stc
mov
pop
out
xor
stc
xor
out
xchg
aaa
jmp
mov
daa
fldenv
push
mov
clc
push
out
dec
mov
int
addr16
sub
pop
mov
pop
xor
mov
in
imul
xor
jae
js
sub
cs
and
push
dec
movsb
or
jb
stc
dec
mov
jmp
jbe
mov
cmpsl
pop
jnp
cmc
mov
mov
dec
xchg
es
mov
insb
arpl
pop
jo
aam
cmp
mov
ja
sbb
pushf
xchg
add
sarb
xchg
cli
inc
daa
mov
int3
push
mov
xor
and
sti
jmp
and
or
jbe
popa
or
imul
mov
cltd
push
xlat
and
sub
pushf
xchg
mov
mov
jp
rclb
aad
or
std
adc
std
sahf
clc
and
jne
lock
fsubrl
out
sbb
jle
les
mov
call
pop
scas
jb
je
lds
dec
aad
push
mov
push
sar
fwait
lods
sahf
nop
icebp
inc
and
add
push
lods
es
pushf
cmp
push
repnz
mov
aas
out
pop
call
scas
loopne
shll
icebp
rclb
stc
jns
fbstp
scas
cwtl
insl
ss
mov
sti
sbb
and
pop
mov
ds
mov
rolb
jecxz
sti
loopne
mov
xor
js
push
or
stos
imul
xlat
and
push
call
jge
pop
ds
jo
inc
aad
xor
cli
cmp
in
int3
pushf
mov
sbb
movsl
lock
jge
sbb
xchg
mov
mov
fistps
dec
repz
stc
push
es
mov
mov
cmc
mov
cs
into
movsbl
adc
jmp
adc
xchg
xlat
inc
test
int3
adc
and
dec
test
fnstcw
shrb
and
jne
xor
push
lret
daa
cmpsl
cld
mov
mov
subb
xlat
mov
mov
push
ljmp
cmp
clc
testb
cmpsl
or
fucom
or
add
or
and
fiadds
or
orb
test
adc
sbb
imul
jns
lods
shrl
mov
pusha
cmp
sub
daa
faddp
jns
pop
or
ds
jg
stc
pop
mov
addb
inc
dec
popl
aad
cmpsb
mov
movsb
pop
inc
inc
cmpsl
push
popa
jg
outsb
lods
scas
popf
lea
cld
jns
pusha
dec
mull
push
jmp
enter
out
dec
ret
div
out
int3
xlat
pop
cmp
push
sbb
sub
ss
push
cmp
pusha
out
out
lock
out
mov
gs
pop
out
cwtl
jp
mov
adc
mov
pop
fisttpl
jno
add
fldenv
cmp
mov
ja
jo
leave
and
test
shll
pop
je
add
xchg
xor
popf
push
adc
in
mov
fistpll
in
cmpb
loop
int
repz
push
mov
xor
cld
push
das
in
popa
jo
cmp
fisubrs
sarl
dec
mov
sbb
icebp
add
jmp
stos
adc
xchg
push
stos
sti
mov
sbb
pop
push
cmovge
push
lods
cmp
xchg
cmp
pop
push
jno
cmp
fs
add
lock
pop
sbb
sub
jecxz
scas
and
out
ret
xchg
jb
adc
movsb
inc
pop
bound
enter
jnp
cwtl
and
and
sti
movsl
push
pop
ja
or
cmc
push
fisubrs
pop
daa
pop
xor
loop
ss
std
push
enter
xor
rolb
adc
xor
push
ret
pop
sbb
adc
out
test
iret
sub
xchg
les
adc
rcrl
xor
xchg
cmpsb
jle
lret
and
xor
aad
pop
xor
outsb
pop
cli
cmp
cld
jnp
mov
pop
mov
stos
or
loope
cmp
cmpsb
push
ret
mov
sbb
sub
add
fstpt
mov
int
sbb
scas
adc
cmp
fisubrl
ror
sbb
jnp
sbb
jg
pop
add
in
sub
shr
xor
rorb
pop
adc
xor
aaa
xchg
lea
out
pusha
cmpb
mov
ja
scas
leave
or
lea
inc
sub
adc
ljmp
mov
ja
loop
imul
sub
pop
out
adcl
xchg
fimuls
or
mov
loopne
lret
xor
mov
pop
and
pop
sahf
xor
and
sub
daa
mov
dec
repz
cmp
in
rorl
xchg
mov
jb
jecxz
pop
push
sbb
or
jg
or
jnp
out
dec
push
leave
or
mov
ret
or
orb
andl
xor
sti
mov
ds
pop
xchg
inc
push
pop
dec
dec
xor
dec
lods
mov
xchg
jo
je
orb
out
adc
mov
push
mov
ffreep
push
sbb
add
je
out
pop
or
sbb
pop
movsb
jp
stos
test
push
adc
dec
stos
fptan
mov
outsb
int3
mov
fnstcw
incl
sub
inc
mov
cmp
mov
loop
lret
push
out
test
scas
and
icebp
mov
inc
imul
inc
es
pop
inc
out
ret
out
out
insb
push
das
mov
dec
mov
sub
push
mov
push
push
pushf
dec
or
push
dec
imul
cld
mov
jo
daa
or
cwtl
jecxz
outsb
rorl
inc
cmp
cli
adc
cmc
into
mov
jge
dec
mov
mov
fst
xor
dec
fbstp
cwtl
into
mov
cmc
pusha
mov
add
xchg
out
push
xchg
in
ret
in
pop
fstpl
mov
jp
lcall
int
shl
inc
rolb
test
scas
sbb
movsl
dec
lret
rorb
jecxz
jge
loop
jns
add
fsubs
mov
mov
sub
mov
mov
call
mov
add
dec
pushf
out
mov
sub
stc
xchg
and
inc
lods
ds
data16
fmull
test
or
sbb
inc
jae
adc
mov
mov
inc
lret
jne
push
testl
loope
test
pop
sar
pop
jl
maskmovq
imull
sbb
imul
dec
add
cli
gs
xor
mov
fstps
add
and
dec
or
dec
aaa
mov
std
dec
xchg
filds
pop
mov
movsl
adc
hlt
out
jno
dec
or
dec
push
ja
dec
sub
mov
stos
imul
sub
rcrb
iret
int3
std
test
mov
ret
jae
push
bound
cltd
faddl
lea
fs
add
xchg
in
mov
add
out
sub
xlat
mov
cmpb
pushf
ja
dec
mov
cwtl
xchg
cmp
push
daa
and
cli
jae
outsl
and
push
aam
adcb
js
rcll
xor
arpl
icebp
inc
push
test
cmp
push
xchg
sub
test
push
jns
mov
jmp
shld
stc
test
outsl
jle
mov
push
aaa
pop
push
icebp
out
icebp
in
sbb
lret
mov
inc
cmp
popa
mov
clc
loope
push
cmpsb
cmp
xchg
fcoml
lds
and
jle
push
cmpsl
lods
aam
cs
mov
or
mov
stos
push
mov
and
xor
cwtl
xor
pop
push
sub
jae
adcb
pop
xor
mov
test
daa
xchg
out
mov
aad
andb
push
inc
or
outsl
sahf
jg
lock
xorl
lahf
jp
xor
mov
pop
mov
sahf
jmp
push
fdivrl
push
imul
sbb
lock
push
loopne
push
push
int
push
pop
mov
push
adc
xchg
jmp
loop
xchg
cmp
call
fidivrl
or
jb
sub
divb
mov
lock
fsub
jecxz
inc
adc
jno
or
or
mov
pop
add
pop
test
xchg
sbb
cltd
cwtl
sbb
popa
leave
add
rcll
aad
xchg
testl
insb
iret
xor
xor
sub
mov
in
push
shr
xor
leave
xchg
jbe
pop
fmuls
in
daa
pop
mov
shrl
adc
cmp
and
shl
mov
mov
mov
push
push
dec
push
xchg
cltd
pop
sti
icebp
dec
push
mov
rcll
shrb
mov
mov
inc
pusha
jecxz
int
xchg
fcompl
xchg
cmp
mov
lcall
or
adc
out
pop
cmp
mov
clc
pop
xor
ret
sahf
insb
sbb
aad
mov
inc
out
std
xlat
andb
test
jg,pt
jp
in
or
add
xchg
jl
test
xlat
fildll
adc
dec
xchg
push
in
mov
xchg
add
ds
cmpsb
dec
jg
lods
and
jp
ja
or
sbb
or
pushf
ljmp
scas
in
jmp
mov
jg
push
shll
add
mov
inc
sbb
in
jg
ret
sarb
int
push
clc
arpl
test
jecxz
sub
movsl
mov
lahf
cwtl
sahf
lret
mov
hlt
in
cli
xchg
and
push
jno
xlat
mov
fsubl
jl
or
mov
jl
jns
out
leave
or
cli
in
mov
test
mov
and
push
mov
rcrb
loopne
pop
mov
mov
mov
nop
aad
pop
add
test
js
jmp
mov
add
dec
ficompl
mov
aam
push
movsb
sub
leave
pop
sub
mov
xchg
mov
xchg
or
out
inc
cli
push
adc
dec
arpl
mov
add
int3
or
cmp
sysenter
fistpl
rcl
or
ja
inc
mov
arpl
stc
cmp
sub
sar
jno
pusha
dec
fsubs
test
push
mov
mov
pop
mov
cmp
fdivp
xchg
aas
daa
xchg
mov
pop
arpl
dec
lea
push
lcall
inc
addr16
xor
mov
adc
mov
mov
lods
xchg
roll
sub
and
nop
addr16
mov
pop
sub
push
xchg
out
lret
mov
pop
mov
mov
mov
sub
cmp
cmp
push
push
sub
movsl
orb
jmp
out
shl
imul
lods
ja
ss
and
mov
mov
mov
push
sbb
adc
inc
push
iret
and
and
xor
out
lods
movb
pop
ret
inc
and
jg
pop
pop
ja
xor
mov
mov
sysexit
sbb
mov
out
sub
or
jns
negb
dec
xor
sahf
mov
mov
adc
cmp
adc
dec
jge
mov
adc
nop
pop
push
push
aam
pop
fdivs
pop
int
cmp
inc
mov
jae
push
push
sub
adc
xlat
sbb
jne
dec
lahf
repz
mov
nop
pop
mov
mov
call
pop
sbbb
int3
fs
js
push
cmpsl
push
jns
or
fnstsw
push
inc
imul
inc
jmp
fildl
inc
push
aas
mov
mov
mov
fldt
inc
sub
mov
cli
sbb
xchg
xchg
sub
out
int
pop
mov
popa
mov
jge
xor
icebp
sbb
das
or
ljmp
leave
inc
mov
jne
add
lods
mov
ds
lret
and
lods
cmp
hlt
scas
adc
sub
jecxz
fsubs
out
mov
or
inc
xchg
jp
add
or
mov
int
movsb
ljmp
jg
sbbb
mov
or
aad
or
jne
lcall
push
cs
xchg
sbb
ficomps
push
pop
out
mov
cmp
stc
xor
pusha
rep
pop
xor
mov
daa
mov
call
addb
inc
jbe
shll
sub
jmp
inc
and
dec
js
xor
frstor
fisttpl
cltd
data16
pushf
js
push
test
sbb
and
sarb
pop
pushf
je
out
insl
dec
mov
js
inc
das
pop
into
cmp
gs
pop
fcompl
sbb
nop
jp
mov
popa
add
ficomps
incb
in
mov
or
outsb
test
lcall
daa
dec
pop
repnz
dec
pop
in
or
or
shll
jl
dec
sub
push
dec
or
push
inc
outsl
xchg
imul
cmpsl
aas
mov
mov
add
shlb
gs
inc
pop
jae
jge
push
cmp
mov
and
int
jg,pn
push
inc
sahf
imul
push
notb
xor
xor
mov
fdivrs
or
stc
cs
arpl
lret
outsl
add
dec
add
cmp
loope
repnz
mov
imul
lret
setle
mov
push
jle
jno
mov
or
scas
cmc
inc
jns
and
add
call
nop
inc
push
cmp
push
mov
or
xchg
push
mov
pop
or
and
adc
pusha
sub
lcall
ss
fwait
xchg
lock
cmp
int3
iret
inc
sbbb
clc
aaa
stos
test
ljmp
rcll
cs
xor
jl
adc
rorl
xor
es
mov
add
cmc
daa
mov
pop
add
loop
imul
iret
mov
cmp
aas
cli
jnp
cmc
dec
sahf
icebp
inc
mov
inc
mov
mov
ret
orl
cmc
mov
xchg
xchg
shl
out
out
add
jnp
jg
movsl
add
rol
mov
add
cmpsl
or
pop
and
insl
insb
dec
sahf
outsl
mov
repnz
gs
or
lret
dec
fists
push
insb
cltd
add
xchg
xor
mov
push
xchg
adc
bound
pop
add
idivb
jecxz
mov
push
decb
sub
jne
ss
arpl
inc
mov
into
pop
inc
xchg
push
leave
shlb
pop
mov
lahf
xor
popa
add
sbb
lea
mov
aam
pop
dec
fwait
push
and
aam
mov
xchg
xor
pusha
and
xor
arpl
dec
neg
mov
mov
add
fcomi
cli
cmp
test
out
cmp
fcmove
pop
fcom
fmul
jb
inc
insl
mov
les
cltd
clc
xor
jno
pop
jo
pop
mov
jle
xlat
adc
xchg
mov
mov
cmp
fldcw
popa
insb
mov
aaa
pop
scas
dec
dec
and
jb
dec
lret
mov
adcl
and
pusha
xchg
ljmp
dec
mov
iret
testb
fisubl
inc
sub
dec
sub
lret
push
jo
mov
cltd
sbb
stos
jno
push
cmc
sarl
lock
mov
mov
ret
sbb
mov
pop
scas
aad
nop
jo
mov
frstor
nop
dec
push
or
or
xlat
leave
mov
and
shl
call
and
mov
fwait
stc
dec
add
clc
pop
popa
xor
stc
stos
dec
adc
fnstenv
ror
or
or
mov
cli
fbstp
inc
addr16
cmpsb
add
inc
stos
push
sahf
lret
neg
ja
loope
aam
shrb
mov
lea
or
jae
test
rclb
sahf
ja
nop
push
bound
out
sub
or
cmp
mov
lods
jnp
lock
xchg
sbbb
pop
xlat
push
cmpb
sub
insb
lods
xchg
lret
or
loopne
cmp
in
scas
les
loop
xchg
sbb
cmp
mov
xchg
stos
addb
pop
into
cmpsb
adc
mov
movsl
inc
pop
in
push
pop
mov
xchg
and
jge
pop
xchg
lds
imul
push
pop
dec
push
aad
or
jp
insl
mov
pop
rol
and
mov
outsb
stc
adc
push
ror
pop
push
aaa
push
arpl
push
loop
xor
mov
aaa
lock
in
cwtl
mov
out
mov
and
outsl
adc
lock
enter
mov
jb
cmp
xchg
xor
inc
lcall
mov
jle
sub
inc
sub
push
dec
daa
or
rcll
js
stos
pop
pushf
lea
sbb
out
and
popf
push
or
and
xor
sub
or
aaa
imul
popa
xchg
mov
pop
cs
pop
movsl
shl
cmpsw
in
test
ret
sbb
ret
nop
cmp
mov
jle
push
hlt
fs
dec
aas
cmp
lret
js,pn
fldenv
sub
cmp
mov
cmp
out
jp
fdivl
mov
or
leave
jae
and
add
jp
xchg
cmp
sub
jmp
xchg
loop
sahf
xor
push
arpl
sbb
gs
cld
stos
sub
pop
jecxz
je
ret
jae
mov
sbb
jbe
cmc
xchg
cs
adc
adc
dec
adc
xlat
xor
cmc
pop
pusha
pop
xor
fldcw
push
movb
jne
mov
out
lods
jns
xor
stc
sbb
push
mov
fidivl
into
in
cwtl
adc
decb
leave
xor
mov
lret
jbe
add
push
add
push
sub
mov
outsb
shrl
jno
cmp
mov
and
mov
mov
xchg
aad
loop
dec
in
roll
shl
imul
jp
push
cltd
lahf
adc
jecxz
xchg
mov
loope
adc
pop
jp
mov
or
insb
dec
scas
inc
xlat
push
dec
mov
push
ja
pusha
rcrl
jmp
les
out
mov
xor
ret
add
cltd
ja
add
fildl
push
cld
jp
inc
mov
mov
mulb
mov
scas
in
aaa
lahf
dec
repz
adc
fs
lea
mov
fiaddl
repz
loop
push
in
sahf
dec
add
or
xor
jmp
mov
adc
xlat
adc
ret
arpl
clc
xor
jne
jp
cltd
mov
incl
pushf
jno
gs
imul
and
xlat
cld
xor
test
dec
sahf
sarl
int3
lock
sbb
fmulp
inc
lea
lret
push
dec
dec
fidivl
sahf
lock
jmp
jp
mov
push
mov
mov
pop
idivl
je
fmul
es
and
call
popa
pmulhw
jle
ret
ds
mov
les
stos
int3
jnp
notl
cwtl
int
inc
inc
cmp
lcall
cmpsl
fists
xchg
filds
jno
lds
or
je
jae
cld
scas
shlb
les
jb
pop
sarb
dec
adc
mov
andb
sub
mov
push
push
sub
sub
leave
cltd
cmp
adc
jo
push
mov
mov
pop
inc
push
js
mov
or
pop
test
xchg
xchg
jo
xor
xor
rorb
aam
jne
lahf
inc
push
cmc
cmp
ret
aam
inc
je
fucomi
adcb
sub
inc
add
les
imul
jns
jae
fisubs
push
dec
jne
imul
shl
mov
or
fmuls
sahf
aaa
loope
enter
mov
popf
push
int3
rcl
pushf
ret
cli
push
or
push
es
ja
fwait
pop
cmp
jb
add
lock
pop
cmp
inc
rclb
mov
jmp
rep
das
mov
das
lea
and
cmp
mov
faddl
imul
mov
lret
adc
loopne
mov
mov
lea
mull
dec
jo
push
inc
insb
sub
push
mov
out
push
mov
sub
rorl
cmc
movb
push
cmp
sbb
xor
repz
inc
mov
lods
or
cld
mov
inc
cs
movsl
or
outsl
sahf
gs
loopne
jmp
fwait
cmpsb
loope
int
dec
imul
inc
jecxz
repz
sub
sbb
cmp
outsb
insl
lods
sbb
daa
push
xor
mov
push
xor
int
inc
shl
xchg
or
jge
adc
pop
add
out
xchg
cwtl
fcoms
cmpsb
xchg
loopne
orl
sbb
push
push
inc
xchg
roll
mov
aam
ud0
out
outsb
sub
mov
lret
adc
and
pop
outsl
sbb
push
aad
adc
adc
xchg
js
into
shll
cmp
out
push
xchg
lahf
add
dec
sub
int
mov
out
stos
lock
jo
inc
pop
push
loopne
push
daa
sub
scas
or
sbb
stos
fnstcw
call
pop
mov
bnd
rorb
popf
bnd
sarl
adc
mov
inc
push
addr16
testl
mov
out
imul
add
cmc
mov
pop
test
push
dec
jne
jae
or
ljmp
xor
lea
xchg
test
test
pop
fbstp
fs
mov
es
sbb
cmpb
pusha
sbb
push
insl
test
xor
imul
add
fwait
inc
in
adc
and
and
or
or
repz
mov
insb
inc
xor
mov
mov
pop
xchg
adc
mov
pop
pop
call
add
gs
cmc
in
sbb
fcomps
test
sti
cld
fcomi
lods
data16
iret
inc
sbb
repnz
xor
arpl
enter
push
cmp
daa
push
sbb
inc
orl
nop
ficoms
iret
sbb
xchg
dec
popf
or
sbb
add
enter
testb
pop
repnz
test
cltd
pop
cmpsl
js
adc
push
xchg
ja
xlat
dec
xchg
sbb
add
sbb
adc
sbb
pop
push
loop
into
mov
ja
mov
out
or
xor
leave
add
jp
movsb
adcl
cltd
xor
shl
pop
in
flds
inc
pushf
lods
shl
jb
aad
xor
or
push
clc
cs
cmp
add
lahf
in
repz
push
inc
or
sarb
gs
repnz
lret
aas
xlat
int3
inc
pop
cmpsl
in
mov
sub
mov
mov
loop
jl
pop
aaa
orb
in
nop
inc
jb
jo
mov
test
or
in
mov
dec
xor
pop
adc
jle
rcll
ljmp
pop
sahf
ds
mov
inc
fiadds
enter
jp
movsl
xlat
js
adc
cmp
lahf
push
sbb
inc
xchg
inc
ret
inc
xor
addr16
dec
in
or
mov
fstps
cli
inc
cmp
mov
aad
cmp
sahf
pop
mov
test
insl
ss
mov
iret
add
out
call
xchg
stos
cli
mov
loopne
mov
stc
fimuls
ja
cmpsb
pop
clc
pop
inc
mov
insb
pop
cmpsb
jnp
jl
in
lods
pushf
out
push
cmp
adc
push
icebp
xchg
inc
repz
frstor
rclb
fwait
pop
mov
pushf
push
ret
popf
dec
fists
aaa
sti
ss
orb
or
inc
incl
fsubs
aaa
xor
stos
xchg
push
push
mov
mov
add
imul
mov
mov
pop
xlat
jns
dec
and
mov
jle
insl
push
mov
ret
test
jmp
int
xchg
pop
inc
aad
mov
or
addr16
xchg
dec
adc
fwait
or
repz
jbe
ds
cmp
pop
dec
imul
cmp
loope
or
dec
ds
out
or
sub
push
pop
jb
das
ret
jo
or
cmpsl
loope
in
nop
inc
cmp
push
movsl
in
mov
lock
test
inc
inc
jg
jns
mov
or
add
xchg
insb
outsb
cmp
xchg
xchg
adc
ja
mov
ret
cmc
mov
ja
cmc
ss
pop
push
push
pop
mov
and
arpl
adc
insl
or
push
rclb
fdivs
xor
mov
dec
dec
push
lods
push
fcmovbe
je
clc
jmp
cmp
icebp
sbb
pop
mov
mov
mov
xchg
adc
lods
les
add
repz
jo
add
repz
imul
movsb
adc
xchg
test
test
scas
add
cld
imul
out
fidivl
mov
flds
mov
pop
popf
and
cmpsb
test
nop
rclb
jle
pop
loop
sbb
cmp
xor
xchg
xor
cmpsl
lret
gs
push
loope
mov
out
jl
popf
in
cmp
stos
outsl
aas
aad
nop
and
mov
and
adc
cmpsl
add
dec
push
shrb
jp
push
push
test
or
fwait
sub
push
push
out
mov
movsl
scas
out
movsl
mov
cmpsl
pop
stc
or
je
pop
jno
lahf
cmp
lea
adc
int3
push
repnz
loope
mov
cmpsl
outsb
pop
mov
jo
ficoml
clc
leave
int3
cmpsl
cmp
sub
mov
enter
outsb
fsts
rolb
in
jns
xlat
adcb
rorb
stos
mov
add
add
and
mov
push
or
dec
vunpcklps
scas
arpl
xor
lret
pop
xor
push
cltd
jbe
jge
stos
mov
jge
sub
fidivs
dec
push
push
loope
adc
inc
lret
lods
jno
ret
mov
nop
ljmp
dec
and
test
mov
and
inc
icebp
jb
xor
movsl
adc
lds
and
add
push
adc
jb
jns
out
mov
mov
movsl
enter
xchg
ljmp
sbbl
jl
int3
pop
mov
in
or
int3
jmp
mov
push
sub
ljmp
and
je
inc
rcrl
icebp
push
push
add
or
stc
out
pop
sahf
popa
adc
stos
push
out
jo
mov
mov
push
enter
xchg
jne
xchg
pop
or
and
cmp
adc
lcall
pop
jmp
ja
cltd
jno
add
call
mov
outsb
arpl
pop
push
stos
cmp
fildll
xchg
mov
rcl
loope
roll
pop
data16
mov
scas
popf
cmc
add
mov
mov
mul
inc
xor
shl
lds
insb
bound
dec
ds
cmpsb
xchg
inc
xor
aam
jne
xlat
out
push
push
cmp
out
popf
cmpsl
or
gs
cltd
ljmp
xlat
loope
stos
scas
cld
outsl
dec
ljmp
dec
xchg
outsl
repnz
and
sbb
xor
inc
sbb
and
pop
push
jmp
inc
push
mov
and
sbb
add
push
out
fiaddl
and
test
push
push
and
push
push
dec
popf
pusha
xor
sub
stc
test
xor
aad
push
or
les
sbb
cmp
and
jnp,pt
add
daa
cmp
stc
sbb
pop
inc
pushf
xchg
or
lret
outsb
orl
cli
icebp
sub
mov
jnp
imul
mov
sti
cmpsl
lret
mov
jge
mov
sub
test
push
dec
add
loop
fsubl
cmp
push
clc
jnp
nop
inc
xchg
inc
adc
dec
lcall
fs
and
outsb
std
filds
popa
cmp
jae
addl
sub
cmp
mov
mov
fsubp
fstpt
and
sbb
addr16
dec
or
loopne
es
movsb
sahf
add
mov
mov
outsb
in
mov
outsb
mov
stos
adc
push
xchg
xor
xor
aaa
jne
jg
insb
popf
ja
sarl
fcomp
std
and
shrb
cmp
fmuls
pop
cli
das
popf
repz
imul
out
xchg
mov
sub
jecxz
push
ds
lock
pop
pop
mov
nop
std
inc
sub
ss
pop
lock
ret
je
pop
push
inc
xchg
lods
les
mov
pop
arpl
fs
xchg
cmpsl
xor
mov
stos
ds
popa
lret
pop
test
icebp
or
mov
add
in
pop
in
data16
imul
push
and
stc
dec
xcrypt-cbc
cmpsl
push
adc
xor
sarl
mov
pusha
mov
inc
xchg
rcll
cmpsb
jae
lahf
mov
push
pop
out
loopne
in
add
repz
adc
movsb
mov
push
stos
cmc
das
push
push
sub
cmp
test
stos
add
jns
add
pusha
je
jmp
dec
outsl
int
xchg
xor
ja
and
cmp
pop
in
out
add
ljmp
cld
fisttps
jle
fwait
mov
inc
mov
negl
sar
push
cld
lret
movsb
gs
mov
jo
sbb
add
loope
leave
inc
cmc
mov
and
xchg
xor
pop
nop
lods
adcb
jp
mov
push
push
js
into
gs
iret
cmp
xchg
push
lods
aam
xchg
jns
pop
jae
dec
cltd
call
dec
mov
and
dec
fcmovb
pop
ss
jmp
movsb
sub
jg
xor
add
or
cmc
push
cs
or
jg
and
into
mov
outsb
sub
mov
cwtl
imul
fsubrp
add
subl
test
mov
mov
pusha
push
push
and
stos
mov
addl
jl
shl
add
mov
or
add
je
mov
mov
fwait
and
sbb
push
push
add
pop
push
shlb
out
jae
jge
scas
sbb
mov
cmc
test
movsl
cmp
xchg
cltd
clc
jl,pt
xchg
popa
sarb
pop
test
adc
shr
cltd
mov
xchg
or
lret
mov
inc
mov
test
xchg
xor
push
inc
mov
stos
jbe
jne
pusha
inc
in
and
inc
cmpsb
adcb
push
cmp
pusha
subb
mov
cmp
mov
aaa
xchg
inc
jb
ret
dec
in
aaa
adc
and
jle
push
push
rcr
repz
imul
dec
repz
out
loop
fsub
mov
test
enter
les
pop
push
adc
stc
mov
movsl
test
nop
out
sbb
push
insl
mov
flds
pop
and
jmp
roll
cli
out
int
out
lods
out
sub
clc
bound
shr
jbe
data16
mov
dec
push
cmp
adc
sub
inc
in
mov
fcmovne
sbb
lea
or
xchg
inc
inc
cs
sbb
dec
iret
xlat
xorl
inc
pushf
jb
push
lcall
lods
mov
cmp
push
inc
rclb
aas
sub
sbb
ret
push
and
rclb
add
and
or
mov
leave
inc
mov
push
and
cmp
in
rep
js
inc
jecxz
ret
cmp
repnz
mov
inc
sub
lods
addl
out
fs
push
sbb
dec
out
pop
shrb
dec
xchg
and
xchg
pop
push
adc
or
ds
mov
cmp
dec
sbb
fmul
sbb
and
sti
jo
cs
movsl
mov
inc
pop
lcall
jecxz
lret
rorb
sarl
mov
pop
xor
mov
test
xor
test
xchg
sbb
lahf
mov
jae
ret
out
sti
cmp
loopne
mov
jno
dec
xor
fstpt
repnz
repnz
add
ja
adc
cs
int3
mov
xor
mov
ss
mov
and
xor
and
pop
mov
jmp
es
fstpl
idivb
jo
fsubrl
and
cmp
pop
cmp
push
mov
aas
xorb
and
pop
push
std
rcl
repnz
sub
insl
push
mov
pop
sub
frstor
ss
add
jl
test
mov
add
in
fisttps
repz
push
push
bound
jb
in
ja
sti
mov
les
xchg
imul
dec
push
out
addr16
jmp
fidivrs
out
mov
test
out
shlb
sbb
and
pop
adc
cmpsl
and
fidivl
sub
adc
push
mov
loopne
xchg
bound
sahf
lcall
flds
dec
and
leave
arpl
aaa
jae
ss
popf
mov
mov
cltd
and
aaa
sbb
xor
das
adc
popa
mov
push
push
push
mov
data16
loop
das
test
jae
and
rolb
or
lock
pop
mov
mov
mov
jne
jnp
cmpsw
mov
aaa
into
xlat
mov
mov
mov
js
xor
icebp
pop
sbb
ds
clc
xchg
and
ret
dec
and
jno
push
fisubrl
in
rorl
dec
movsb
aad
stos
inc
jmp
shrl
push
jmp
and
cwtl
imul
sub
cmp
sbb
adc
sub
add
cltd
adc
mov
xor
add
adc
mov
add
mov
ret
insl
scas
mov
or
add
pop
or
jge
jmp
cmp
inc
sub
outsb
push
adc
xor
dec
fnstcw
sub
fidivrl
sub
pop
es
push
push
inc
subps
and
mov
cmp
out
jmp
in
sbb
int
dec
mov
push
mov
cmc
mov
jb
mov
mov
cmp
adc
mov
add
popa
nop
imulb
push
lods
pop
sarb
pushf
insb
push
adc
iret
sbb
cmpb
inc
das
cmpsl
imull
and
jnp
test
jne
ds
test
cmc
jmp
inc
in
jecxz
out
int3
cmc
xor
pop
test
xchg
sub
addr16
push
ss
clc
fbstp
jge
sbb
and
mov
arpl
fisubrl
lods
mov
or
sbbb
aas
scas
ret
cmpsl
rorb
stos
pop
jno
jmp
adc
jns
aam
sub
add
mov
mov
int3
mov
enter
les
xchg
lock
in
pop
xor
add
lds
rcl
cmp
pop
xor
push
sub
stos
jmp
mov
adc
inc
pop
and
lods
sub
cmpsl
or
mov
jbe
adc
ret
cmp
push
iret
or
inc
adc
sub
pusha
mov
jb
add
pushf
jb
jbe
jns
into
xchg
bound
mov
jecxz,pt
daa
mov
iret
or
pop
or
push
sbb
rcl
out
push
popa
push
add
xchg
pop
mov
cmp
mov
lds
sbb
push
imul
jae
fsubrp
xchg
adc
je
setl
repz
jae
pop
xlat
dec
mov
negb
repnz
add
stos
push
ss
movsl
push
rolb
or
xlat
push
insb
and
cmp
stos
xor
pop
fisttpll
stos
inc
mov
js
jecxz
ja
insb
mov
pushl
popf
lods
xor
sub
jbe
xor
cmpb
cmpsl
in
out
icebp
mov
xor
push
cmp
xor
mov
loopne
xlat
mov
mov
out
adc
je
outsl
out
in
icebp
mov
dec
xor
and
fs
inc
mov
das
or
sbb
mov
test
xchg
andl
gs
jecxz
xlat
imul
or
mov
adc
lret
out
cs
mov
inc
into
cmp
aam
fldt
sarb
xchg
lret
cmp
or
das
mov
hlt
cmpb
mov
mov
orl
jae
clc
fs
les
cmp
or
movl
xchg
dec
pushf
into
push
inc
xchg
fwait
push
iret
out
outsl
push
neg
stos
cmp
in
sbb
loope
in
stc
ljmp
jecxz
out
push
or
push
nop
setb
inc
sbb
inc
mov
pop
fs
iret
lea
dec
sahf
push
sbb
inc
lock
cltd
and
cld
fcoml
inc
inc
pusha
push
fcomps
or
ja
out
outsb
and
mov
js
hlt
or
imul
notl
cmp
cmpsl
ret
addr16
loopne
fwait
bound
dec
inc
mov
inc
nop
push
adc
inc
mov
popfw
push
add
add
jnp
into
cs
cmp
xor
jno
fisubs
je
pop
or
insb
add
imul
arpl
xor
jo
sub
mov
and
fst
mov
or
mov
inc
add
int
xor
dec
nop
push
sub
cs
mov
jle
adc
aas
vpshufd
mov
outsl
push
icebp
ficomps
push
adc
aad
fwait
xor
pop
nop
add
jle
roll
rcr
inc
xor
xor
dec
into
mov
dec
ljmp
jne
sahf
xor
lock
inc
or
out
out
jbe
and
cs
in
mov
xchg
fmul
test
dec
mov
sbb
bound
mov
dec
aaa
ss
push
inc
pop
add
fildl
jmp
sub
shrl
xor
pusha
pop
adc
xchg
es
jp
fs
fwait
mov
sbb
jle
cwtl
insl
sbb
out
or
xorl
mov
pop
xchg
fiaddl
cmc
push
int3
faddp
movsl
popa
out
push
or
mov
xchg
push
mov
pcmpeqw
xor
push
adc
in
jae
pop
dec
jmp
push
lods
shll
jnp
aam
inc
insl
adc
icebp
loopne
fwait
test
addl
movsb
test
mov
movsb
aaa
push
popf
shlb
jle
and
notl
repnz
push
fdivrl
ljmp
jl
adc
orb
in
mov
jbe
fdivrs
inc
cmpsb
cmpsb
xchg
jns
test
popa
scas
dec
out
sbb
gs
movb
leave
cld
cs
stos
imul
sbb
fsubl
jae
inc
popa
faddl
cmpsb
adc
inc
adc
lods
cld
sub
inc
and
ss
jmp
icebp
mov
mov
adc
mov
arpl
stos
mov
clc
int3
ret
aad
pop
inc
pop
push
insb
push
ja
adc
ljmp
adc
jg
pushf
pop
arpl
icebp
shrb
push
in
out
mov
dec
cld
ds
pop
fldenv
stc
sbb
cli
mov
sub
xlat
stos
mov
data16
out
cmp
push
jb
test
fisttps
add
sub
add
xor
vpackuswb
pushf
mov
push
mov
icebp
fists
adc
jecxz
jae
cmpsb
and
aam
adc
mov
xor
jmp
movsl
pop
mov
movsl
pop
inc
xor
cli
cmp
in
jmp
ss
pop
jnp
lock
inc
stos
add
add
and
sarl
inc
repz
scas
in
into
and
and
ret
inc
pop
in
cmp
mov
ljmp
jbe
push
and
pop
sbb
notl
dec
cmp
repnz
in
movsb
fstps
mov
mov
sbb
lock
subb
jge
mov
cmpsb
out
pop
inc
sub
jns
pushf
shll
xor
aaa
mov
pop
lcall
pop
cmpb
gs
hlt
sbb
test
mov
in
lock
dec
fmulp
mov
mov
cld
cltd
leave
push
lods
in
mov
cmp
pop
xor
pop
je
or
call
icebp
aas
dec
mov
fdivrp
std
dec
jbe
jle
push
inc
adc
cwtl
into
je
rorb
mov
fnstcw
mov
ds
enter
aaa
inc
pop
sbb
cmp
pusha
loope
mov
cmp
mov
push
jp
dec
shr
out
shrb
imul
mov
stos
push
pop
daa
clc
mov
mov
sarl
or
cmp
fmull
or
jg
inc
sti
lret
dec
mov
pop
and
sbbl
and
dec
add
lock
out
mov
xor
cmp
mov
add
cli
pusha
test
movsl
nop
stos
pop
push
in
sbb
movsb
cli
push
int3
cli
mov
cmp
hlt
or
xchg
pop
inc
dec
lret
scas
mov
push
cmp
and
nop
cmp
cwtl
dec
out
lcall
imul
scas
jb
sbb
arpl
std
inc
or
and
addl
lret
pop
lock
sarl
dec
and
dec
or
das
xchg
lret
fisubs
push
mov
ds
fwait
pop
in
cmp
stos
lret
loop
test
mov
hlt
mov
ret
lods
pop
cmpl
fidivrs
xor
xchg
mov
sub
sub
xlat
sub
push
filds
jae
int
fisubrs
lahf
sbb
xchg
test
sti
mov
xlat
adc
cmp
xchg
cmp
insl
pushf
adc
daa
lea
rol
mov
repnz
cmp
fstpt
adc
pushf
mov
daa
rcll
js
or
add
add
jb
xor
popf
add
andl
in
pop
nop
outsl
dec
jmp
lock
ret
daa
popf
mov
data16
lahf
adc
dec
loopne
in
movsb
loope
xchg
and
stos
lock
pop
test
lahf
and
cmc
xchg
xchg
int3
icebp
fs
int
cmpsb
xchg
pop
sbb
sbb
cmp
rcll
xor
mov
scas
pop
and
and
sbb
cltd
mov
jo
cmc
and
push
inc
sahf
call
aam
fldt
pop
inc
icebp
push
outsl
loop
ret
in
addb
cwtl
into
and
clc
xor
lahf
or
les
rorb
dec
dec
fisubrs
jnp
mov
xchg
ja
or
ja
int
std
add
lea
and
jo
ljmp
sub
cli
push
ja
jbe
ljmp
or
je
leave
mov
or
fucom
popf
push
repnz
enter
cwtl
xor
mov
repnz
add
add
repz
divl
cld
and
sub
inc
cmp
aam
scas
and
jae
mov
mov
ljmp
cmp
jnp
dec
add
jmp
loope
outsl
test
into
outsl
insl
mov
dec
scas
outsl
mov
imul
rorb
fsub
int
push
dec
ret
pop
leavew
xchg
xor
test
push
dec
and
pop
cmp
sub
inc
push
sbb
leave
jmp
sub
mov
sbb
inc
lea
xor
sbb
xchg
cld
scas
cmp
es
out
ficoml
push
xorl
cmpsl
mov
inc
stos
in
in
lret
movb
and
jmp
jecxz
add
xor
push
enter
xor
std
inc
loopne
repz
shlb
fildll
movsl
sbb
clc
adc
xchg
sub
sub
inc
ffree
cwtl
testl
mov
in
enter
in
cld
mov
js
out
cmpsl
jb
jl
ficoml
push
cli
cmpb
rorl
inc
mov
or
inc
roll
lret
lahf
pop
popa
pop
push
dec
dec
jnp
daa
mov
push
push
je
daa
add
mov
cmp
test
sarb
mov
lods
jge
adcb
push
lea
and
xor
ja
js
mov
sub
in
movsl
jae
lods
movsb
jne
outsl
in
lcall
rclb
out
mov
inc
in
cmpsb
faddl
xchg
xor
int3
loop
cmp
jecxz
lods
sbb
add
outsb
sub
lods
mov
push
adc
shrl
aam
push
fcoml
xchg
sub
push
xor
imul
int
enter
shll
pop
fcompl
adc
dec
cmpsl
in
repnz
mov
scas
or
or
pop
insb
adc
popa
sbb
adc
mov
test
clc
lods
push
fcompl
mov
outsb
outsl
sahf
scas
fs
repz
adc
jp
imul
dec
and
pop
push
pushf
lds
mov
push
sbb
xor
push
sbbl
idivb
jno
movsb
sbb
push
stos
jge
mov
dec
leave
or
pop
jne
mov
dec
imull
xchg
cli
fisttpll
cwtl
lcall
aas
push
mov
mov
add
dec
pop
mov
add
xchg
mov
popa
roll
xchg
push
insb
or
std
ljmp
sub
pop
pop
mov
stos
adc
dec
sbb
mov
inc
jge
movl
mull
push
andb
les
add
sub
mov
xchg
inc
or
lock
xchg
sbb
lcall
xor
cs
arpl
cmc
rcrb
and
sahf
popf
push
dec
rol
mov
sbb
arpl
and
xor
mov
mov
jg
sub
sub
fnstcw
inc
add
and
iret
xchg
std
sbb
pop
roll
scas
jb
pushf
outsb
scas
push
mov
ficomps
leave
and
out
aad
sbb
sub
adc
lcall
orb
ja
mov
call
jnp
push
addr16
je
jnp
mov
sub
sbb
pop
or
int3
cmp
daa
mov
mov
nop
in
rclb
jmp
test
adc
fisubrl
aad
jne
jnp
jmp
movsl
push
test
jns
pusha
jae
inc
pusha
or
inc
enter
arpl
pop
add
mov
cmp
out
xchg
cmc
leave
test
lret
int
stos
pop
inc
mov
sysret
je
xchg
jmp
das
xchg
sahf
sub
jecxz
push
xor
mov
pop
and
subl
cmp
or
or
lods
mov
das
xor
mov
push
mull
pop
inc
or
int
and
dec
mov
xor
mov
fnsave
jo
hlt
loop
inc
pop
cmpsl
test
ret
mov
cmpb
pop
mov
inc
jne
int3
add
mov
inc
jb
gs
loopne
mov
mov
loope
std
mull
aas
inc
fucomp
lahf
icebp
lea
push
push
or
xchg
push
std
stc
repnz
or
inc
jae
into
mov
add
int3
adc
and
and
dec
sub
stc
es
mov
fnsave
dec
sbb
mov
cmp
enter
sub
adc
adc
ret
imul
xchg
dec
daa
int3
cmpsb
and
jecxz
out
pop
mov
sbb
pop
cmp
and
dec
inc
pop
fcmovnu
cmp
dec
cld
lahf
and
adc
push
mov
cmp
cmpsb
nop
add
mov
sbb
inc
and
xor
adc
imulb
addr16
fbstp
adc
hlt
sub
adc
push
dec
push
sbb
mov
xchg
pop
pop
xchg
add
xchg
out
xchg
in
xor
dec
das
mov
pop
push
js
nop
mov
imul
mov
rorb
mov
cmp
cmc
push
sub
imul
insb
adc
scas
inc
outsb
js
hlt
jl
mov
lret
shlb
or
hlt
movsb
add
and
lahf
sbb
in
mov
pop
cmpb
mov
dec
mov
cmc
enter
jmp
mov
jge
mov
mov
sub
insl
aas
jnp
jl
mov
shl
rorb
sbbl
mov
inc
add
cmpsb
aaa
sbb
xchg
vmovhps
jo
or
repnz
xchg
subb
lock
or
addr16
sbb
inc
stc
pop
xor
pop
jge
adcb
push
mov
test
ret
mov
xchg
imul
pop
jns
sbb
adc
int
nop
and
add
lret
std
sub
mov
mov
jbe
sub
lods
xchg
cmp
je
out
or
mov
xor
mov
iret
jg
dec
and
adc
dec
cmpsl
aas
pop
pop
lahf
mov
add
pop
insb
jecxz
mov
lea
hlt
fisttps
ret
jne
adc
dec
xlat
movsl
xchg
xor
out
cmp
push
lds
decl
shr
push
jp
aam
fucomip
push
shll
push
pop
xor
int3
and
push
test
mov
push
mov
lret
xchg
jae
inc
jns
xchg
cmp
int3
pop
lods
dec
cmc
imul
mov
lahf
out
dec
xchg
xlat
jge
das
add
or
addb
sbb
add
inc
xchg
dec
mov
cmp
test
pop
pop
push
cmp
leave
jae
and
popa
pop
aam
push
sbb
in
sub
sub
cmp
dec
xor
mov
nop
cmp
inc
mov
jb
out
xor
jle
test
push
xor
cmc
iret
push
adc
sub
mov
fdivl
lea
push
and
cmp
and
in
addr16
sbbl
sbb
add
test
lret
pop
pop
cmp
ret
mov
xor
fisttpll
mov
mov
jnp
std
cmp
enter
aaa
enter
mov
lds
jno
xor
psubq
and
sarl
and
stos
js
pushf
mov
fs
imul
test
mov
cmpsb
cmp
push
lds
ja
lock
je
mov
jmp
add
loope
out
lea
xor
or
fcmovnbe
sti
push
pop
push
push
mov
xchg
js
and
mov
testl
jge
xchg
mov
icebp
or
lock
bound
enter
lret
push
jnp
daa
arpl
inc
add
loopne
fidivs
adc
in
xor
out
rclb
shrl
test
sub
add
add
cltd
int
or
pop
mov
test
mov
jnp
aaa
or
je
mov
xor
mov
loope
sbb
mov
jns
lea
insl
shrl
cli
test
push
daa
lds
gs
inc
jle
mov
repnz
ja
push
xchg
inc
or
in
clc
pop
and
push
std
mov
into
fcom
movsb
inc
xor
fs
js
push
inc
sbb
sbb
adc
adc
mov
sub
adc
adc
and
xor
into
es
ljmp
in
js
les
mov
inc
xchg
jecxz
cmp
fmul
push
mov
repz
insb
cmp
lahf
cmp
cmp
sbbl
adc
jmp
cmp
loop
push
incl
lret
test
dec
sub
bound
add
stos
adc
adc
lret
movsl
cmp
add
xor
into
movsb
je
push
mov
pop
cli
ljmp
mov
adc
lcall
cmp
adc
andl
mov
push
mov
sbb
dec
mov
sub
inc
adc
sub
repz
lcall
xchg
push
sbb
loop
das
in
in
add
cli
mov
xorb
mov
jl
sub
xchg
enter
cmpsl
xor
test
mov
cmp
aam
ss
aad
inc
inc
js
pop
ret
insl
cmp
or
fildll
int
add
jo
negl
pop
loopne
cmpsl
xor
dec
pop
in
mov
popf
push
or
push
mov
loope
xlat
aas
shll
int3
sahf
or
nop
fs
sub
adc
out
push
push
shrb
mov
dec
pop
dec
pop
xchg
lods
xchg
push
inc
sub
xlat
imul
stos
jae
loop
jb
popa
sub
add
fldcw
es
fdivrl
mov
add
lret
mov
nop
cmp
jbe
cwtl
sub
mov
stc
insl
in
pushf
and
lahf
in
jle
mov
pop
push
and
mov
aad
cmc
add
je
push
fidivl
test
jnp
mov
sahf
cli
adc
cmpsb
dec
fisttpl
fninit
push
inc
mov
cmp
mov
mov
mov
jbe
cwtl
push
arpl
stc
popa
fists
loopne
das
xchg
jns
jns
out
out
xchg
push
les
cld
xor
mov
jne
jg
pop
fwait
pop
inc
push
and
rol
pop
pop
xchg
ljmp
xor
test
push
pop
pop
push
loopne
out
in
movsb
sbb
push
pop
mov
loop
mov
push
add
mov
xchg
clc
cmp
mov
xchg
sub
sub
fs
xchg
roll
xchg
push
dec
push
mov
push
add
je
out
lcall
rolb
push
xor
and
pop
sbb
inc
int3
or
xchg
js
xor
fisubs
clc
ret
add
inc
shll
pushf
fcmove
push
mov
adc
cmp
hlt
nop
mov
pop
push
cmp
fisttpll
mov
sahf
and
ret
fisubl
ret
inc
mov
sub
ja
lods
mov
vcvttss2si
mov
adc
ds
mov
push
ljmp
movsb
shrl
push
aad
aam
adc
pop
popf
cli
pop
ret
inc
mov
mov
imul
daa
stos
push
push
sti
fmuls
lock
mov
mov
stos
pop
int3
lods
out
xchg
shll
out
cmpsl
rorl
dec
test
jns
ja
pop
stos
stos
ret
jo
mov
cs
ficomps
xchg
repnz
jbe
mov
decl
lcall
dec
jmp
mov
sub
cltd
lock
or
sbb
push
xor
xor
mov
xor
imul
pop
jne
dec
inc
sbb
fsubrl
pushf
sahf
mov
push
mov
in
sbb
xchg
pop
mov
aaa
fwait
push
aad
mov
jb
sbb
lret
out
loop
ret
cmpsl
test
sub
cmpsb
clc
mov
leave
pushf
xchg
repnz
jbe
xchg
jmp
cmp
mov
aad
cwtl
movsb
and
or
add
pop
lcall
sub
lcall
mov
mov
fwait
mov
sub
push
test
jecxz
cmp
jne
mov
gs
push
bound
jg
aaa
push
adc
mov
push
inc
push
adc
dec
les
cmpsl
adc
sub
in
stos
cmp
loopne
addr16
jmp
and
add
shr
les
cltd
dec
fs
pushf
out
data16
jnp
cmp
cld
imul
push
cs
mov
push
repnz
shll
fs
or
mov
push
xor
lcall
int3
sub
mov
or
cmpsb
bswap
sbb
jl
lahf
ja
pop
lea
xor
or
or
cmp
mov
lcall
pop
in
movsb
bnd
ds
xchg
test
mov
into
clc
das
popf
mov
sub
in
push
pop
pop
mov
nop
pusha
scas
inc
mov
and
push
and
ljmp
call
inc
rcrl
stc
fcompl
mov
incl
cmp
jp
scas
in
inc
pusha
and
inc
outsl
pop
cmpsl
pusha
subl
sbb
test
scas
pop
into
aaa
mov
outsl
icebp
adc
pop
call
mov
popf
sub
out
aam
es
adc
popf
mov
inc
sbb
test
outsl
pop
negl
xchg
lret
and
add
out
test
mov
bswap
int3
mov
pop
cmpb
movsb
jnp
andb
aas
xchg
adc
insb
mov
mov
shl
fistpll
inc
mov
bnd
cmpsl
scas
and
int
cmp
dec
mov
or
stos
int
mov
sarb
pop
sbb
das
cmpsl
outsl
fdiv
int
jbe
xchg
pop
jb
adc
int3
push
shlb
stos
push
jo
aaa
shll
pop
dec
dec
std
test
daa
cmp
sbb
bnd
push
xor
icebp
mov
cwtl
mov
add
out
mov
scas
push
nop
add
fucomi
and
add
pusha
pop
pop
adc
sub
out
repz
and
loopne
jge
cltd
movsl
push
lods
mov
outsl
into
mov
es
scas
imul
xchg
imul
jp
js
leave
pop
inc
add
jne
fcmovnb
out
xchg
call
movaps
stos
cmpsl
cmc
data16
xchg
loopne
subb
and
data16
dec
prefetch
pop
pop
adc
adc
icebp
int
dec
mov
or
adc
sti
lcall
cmpsb
sbb
nop
jle
shrb
mov
jmp
add
pop
mov
pop
push
pop
mov
inc
xchg
jl
pop
xchg
sub
mov
mov
xchg
int3
add
dec
push
pop
or
jg
mov
repz
stos
je
in
cmp
push
inc
dec
and
pop
xchg
out
test
xor
repnz
fwait
push
repz
jmp
push
adc
jecxz
pop
mov
sbb
je
rolb
adc
and
push
sbb
scas
lret
imul
mov
sahf
loope
sub
adc
sbbl
ret
push
dec
add
pop
in
add
push
mov
lret
stos
addl
cld
ljmp
or
sub
sub
scas
sub
daa
jge
mov
pop
pop
pop
imul
xor
mov
scas
push
scas
jp
sbb
adc
xlat
jae
jne
cmp
out
mov
jmp
das
out
rcrl
fadds
sub
repnz
fmulp
jb
mov
leave
imul
pcmpgtb
test
sub
insb
rcrb
lods
push
pop
popf
xor
jl
inc
push
std
cltd
test
mov
arpl
icebp
mov
ljmp
push
addr16
inc
aad
fdivl
jl
clc
push
cmp
in
and
das
call
cwtl
insl
mov
ss
pop
mov
daa
sahf
add
pop
clc
dec
pop
insl
jge
mov
das
xchg
adc
call
jmp
adc
rolb
xchg
addr16
cmc
dec
mov
scas
xchg
ret
inc
cwtl
adc
jo
pop
outsb
daa
add
cld
cmc
inc
lcall
and
push
ret
mov
lods
or
xchg
sti
in
mov
push
cmp
cli
popf
push
push
cs
int
xchg
test
sub
mov
dec
cld
and
mov
test
ja
int
mov
or
adc
shr
lret
test
push
imul
xor
test
inc
sbb
inc
loop
jge
rcrb
pop
add
loop
aas
insl
lods
shr
xchg
push
xchg
pop
dec
sahf
or
iret
xchg
or
jp
jg
fidivrl
js
fstps
xor
or
pop
pop
or
ja
mov
fisubl
jg
lea
push
mov
bound
sub
add
xchg
ljmp
and
out
arpl
mov
push
jb
ror
push
dec
pop
adc
arpl
bound
stc
sahf
xor
imul
lcall
sbb
push
pop
sbb
xchg
mov
movsb
jnp
mov
pop
fstps
insl
or
push
or
push
cmpsb
push
fstp
push
xchg
or
cmpsl
mov
lcall
mov
fbstp
cs
fmull
xor
fisttpll
rorb
pop
dec
fwait
inc
sbbb
xor
cmpb
dec
jnp
jp
cmpsl
lods
mov
or
and
in
pop
push
cmpl
push
leave
lret
data16
dec
sub
leave
mov
dec
fadds
push
and
jnp
in
or
add
cltd
ja
mov
push
in
lods
push
push
in
sub
imul
adc
xor
push
les
or
and
xor
xchg
movsl
cmp
adc
rolb
test
mov
and
and
stos
mov
mov
test
adc
lods
or
sub
out
and
mov
gs
sub
cmpsl
push
cli
jne
sub
push
or
lret
or
fs
imul
mov
out
movzwl
and
rorb
jg
in
add
or
xchg
cmpsl
in
scas
in
outsb
sar
xor
push
adcb
fsubrl
lea
andb
rcrb
or
jecxz
frstor
call
cmp
dec
and
sbb
mov
or
dec
leave
sti
cwtl
mov
sub
aad
pop
jp
roll
ret
mov
incb
or
inc
push
pusha
neg
adc
in
dec
jbe
scas
sar
dec
mov
ljmp
cmp
ftst
push
cmp
test
jno
xchg
popf
xchg
faddl
inc
scas
mov
jnp
push
xchg
jo
mov
or
sbb
jno
and
repnz
in
cmp
inc
xchg
pop
loope
lea
adc
out
push
jge
xchg
lods
pusha
pop
ret
xchg
mov
sbb
test
push
call
scas
dec
push
adc
push
lea
xor
jns
xchg
or
xchg
xchg
lods
pop
cltd
test
xchg
ljmp
adc
or
pop
lods
std
sbb
out
mov
ds
cmp
and
inc
cmpsl
aad
inc
test
pop
in
jecxz
sbbl
mov
shlb
aas
sub
clc
pop
insb
jno
out
setp
scas
repnz
pop
push
xor
pop
gs
inc
cs
push
adc
daa
xor
scas
mov
add
pop
or
lcall
dec
mov
data16
je
inc
ss
jnp
mov
jno
inc
aas
jmp
mov
pusha
iret
mov
test
rcll
out
xor
push
lods
outsl
jns
sub
adc
sbb
into
xchg
jns
lea
fwait
hlt
cmp
sti
and
pop
adc
cli
and
ljmp
cmpb
mov
rcll
push
fildll
adc
adc
stos
bound
into
in
mov
insb
lahf
scas
stc
jecxz
sahf
push
mov
and
loope
mov
out
out
popa
shll
iret
daa
stos
cmp
scas
adc
mov
dec
icebp
dec
into
test
xlat
add
out
push
inc
xlat
out
sbb
push
fnstsw
fisubrs
fmuls
push
inc
sti
js
dec
test
icebp
xchg
ja
mov
cmp
inc
xor
lds
xor
push
push
repz
jle
jne
mull
scas
sbbl
and
mov
sub
ret
adc
add
int
cwtl
mov
lods
fstl
and
add
int
dec
xchg
icebp
pop
mov
push
and
cmp
push
or
ss
scas
dec
or
xchg
push
pop
cmpb
adc
and
cmp
in
sub
into
jae
pop
inc
cmp
dec
cmp
add
ficoms
stos
mov
iret
mov
dec
push
push
lret
orb
ret
inc
cmpsl
fwait
sub
push
imul
ret
and
lea
mov
sub
or
mov
aad
mov
mov
fimull
int
pop
and
pop
andl
cmp
pop
mov
mov
ljmp
add
push
stc
fwait
arpl
in
push
and
pop
rclb
jnp
dec
es
jge
popa
dec
adc
fnsave
aad
test
xor
or
xor
addr16
lret
pop
cmp
mov
pop
loopne
scas
mov
out
cmp
shll
stos
inc
push
out
leave
add
ret
sub
iret
push
mov
not
jle
xchg
hlt
mov
mov
jp
push
movsb
sbb
pushf
and
mov
lods
dec
push
addr16
adc
cs
insb
cmpsl
daa
and
adc
adc
das
mov
pop
ret
jb
mov
jo
sbb
ljmp
icebp
mov
pushf
mov
mov
mov
push
stc
jb
xor
out
gs
cmp
lods
sbb
xor
or
dec
in
mov
lods
cmpsb
fisubrs
in
jae
xchg
mov
cmpsl
lods
jle
rcrl
imul
test
mov
xchg
sub
adc
adc
and
jne
mov
adc
and
pop
mov
or
and
dec
rcrb
inc
mov
xchg
imul
cmp
dec
sbb
popf
loopne
add
cmpsb
ud2
sbb
stos
insl
ljmp
mov
shrb
mov
push
jb
ja
or
sbb
cmpsb
xchg
cmp
push
pop
inc
icebp
lds
loop
icebp
jb
jo
test
xor
dec
cs
js
mov
push
addr16
mov
pusha
inc
in
daa
cmc
inc
xchg
ja
cmp
mov
movsl
push
mov
daa
push
loop
cs
dec
loop
jmp
stc
inc
mov
jp
fnstenv
jnp
xor
cld
fmuls
xchg
mov
add
xchg
jne
mov
xchg
dec
int3
sbb
mov
call
push
cmp
pop
outsl
mov
leave
xchg
out
jb
pop
jle
sbb
pop
mov
inc
jo
push
or
jo
aam
adc
mov
xchg
imul
jo
xor
hlt
adc
inc
clc
xor
pop
mov
xor
loop
dec
cmpsl
adc
mov
sub
aas
stos
cwtl
sub
push
push
cmp
dec
xchg
adc
adc
stos
cs
ret
mov
mov
filds
pop
mov
mov
imul
xor
mov
pop
daa
or
cmp
dec
jno
fcomps
outsb
add
mov
push
pop
faddl
cmpsb
pushf
call
mov
sbb
into
jns
cmp
outsb
xor
in
aas
sahf
mov
xchg
mov
mov
jne
rclb
fisubl
inc
push
mov
mov
push
adc
xor
in
leave
mov
mov
and
subl
ret
mov
jg
les
mov
out
out
inc
hlt
dec
jb
xor
or
std
loop
je
inc
pop
mov
orl
fsubs
andb
pop
repz
mov
push
imul
mov
ds
mov
add
xchg
test
icebp
int
cmp
sub
or
cmp
xor
mov
bound
decb
popa
cld
jge
ja
stos
inc
xor
cmp
bound
scas
out
adc
and
jo
ret
xor
push
pop
sahf
jbe
idivb
insl
sbb
jmp
jns
adcl
xchg
int3
sbb
pop
mov
and
jg
movsb
mov
int3
lods
ja
jg
push
add
sahf
mov
lds
mov
inc
mov
cmp
pop
lahf
stc
mulb
and
loope
adc
jno
cli
ret
cmpsl
outsl
aam
inc
shll
mov
hlt
and
scas
jno
mov
movsb
fwait
rcrb
dec
inc
inc
push
mov
pusha
lret
out
popa
cli
mov
jle
pop
fiadds
mov
cmp
cmp
mov
and
out
xor
mov
dec
mov
sbb
lds
xchg
stc
in
out
lahf
jmp
sub
push
adc
rolb
int
loop
mov
pop
jae
mov
mov
ret
mov
mov
repnz
clc
and
push
enter
into
mov
pop
int
outsb
sbb
mov
mov
out
test
dec
cmp
cmp
push
jo
mov
adc
xor
push
repnz
ljmp
movsb
pop
ljmp
push
fs
aas
int3
adc
mov
pushf
jg
lahf
jge
popf
sbb
xchg
arpl
mov
sub
xlat
insl
or
inc
icebp
mov
les
cli
es
sarb
movsl
ret
push
xchg
xchg
arpl
cli
shr
jl
xchg
push
std
fiaddl
jmp
sarl
sub
mov
test
inc
xlat
and
outsb
rolb
xchg
jge
or
fcoml
je
subl
aaa
loope
jl
pop
mov
pop
add
aas
push
lock
pop
add
in
in
test
rcrb
js
mov
jno
and
jp
or
clc
cmp
push
int3
xchg
mov
push
call
mov
fisubs
push
out
nop
jne
incb
lds
and
mov
fwait
cli
xor
arpl
addl
jp
jne
das
lret
mov
pop
add
std
cmpsb
sub
xor
xlat
pop
cmpsl
sub
jo
mov
add
ret
ficoml
bound
xor
push
aas
adc
sub
jg
ror
out
add
pop
loopne
loopne
aas
loop
test
xchg
pshufw
mov
mov
xor
xor
out
mov
sbb
fs
dec
inc
cwtl
lcall
test
mov
xor
add
and
xor
inc
aam
push
dec
mov
cs
test
arpl
insb
loop
les
inc
jo
mov
mov
aad
dec
push
or
cmp
or
mov
outsl
bound
loope
and
mov
sub
aad
in
inc
in
out
push
loope
or
xchg
cmpb
xor
popa
inc
inc
mov
jns
mov
or
aas
mov
arpl
sbbb
aas
bound
fcmovbe
mov
ds
cmp
jnp
fdiv
pushf
adc
enter
push
test
jnp
scas
out
dec
sti
dec
ds
or
aam
mov
pop
add
sub
dec
mov
movsb
jmp
xchg
jns
jl
in
add
mov
mov
mov
popf
mov
mov
xchg
lcall
sub
rcl
into
test
sti
add
stos
mov
sub
cmc
mov
sbb
or
cltd
test
adc
sbb
mov
orb
mov
cs
call
mov
fdivr
ffreep
sahf
clc
cli
movsl
jae
or
xor
loope
imul
dec
in
fstps
add
jbe
xchg
pop
loope
lcall
sbb
stos
out
lods
mov
repnz
and
pushf
out
fbstp
cli
adc
dec
int3
sbb
pusha
mov
outsl
shrl
mov
push
rorl
das
popf
cmp
fcmove
xor
imull
stc
call
mov
adc
popa
and
sub
and
sub
leave
aad
jo
add
iret
gs
xchg
jl
js
fsubrl
mov
or
jb
cwtl
lret
pushf
inc
lods
divl
test
add
arpl
pop
movsb
bnd
rorl
das
out
sub
jmp
fdivrl
hlt
incl
and
jno
dec
scas
sbb
mov
loop
in
ja
push
cmpsb
mov
stos
pop
add
rolb
xchg
xor
ja
xor
das
out
ret
mov
push
and
sti
inc
mov
mov
push
ret
or
adc
pmaxub
mov
or
mov
jno
stos
sti
dec
out
pop
js
sub
fisttps
ret
int3
ret
push
inc
mov
push
int
dec
idiv
sbb
data16
les
ds
test
add
dec
fiaddl
and
xor
mov
outsl
rclb
repz
xlat
jno
or
adc
push
pop
mov
fcmovnb
and
repz
push
sub
es
mov
push
cmp
adc
push
sar
add
cmc
sbb
stos
sub
xor
out
jns
or
jle
shlb
adc
cmp
xor
mov
es
pop
std
xor
repnz
test
or
mov
mov
clc
cld
daa
cwtl
mov
lods
jae
stos
adc
std
sahf
cmp
shll
inc
jge
mov
ljmp
repz
mov
adc
dec
test
in
sub
push
pusha
sub
add
enter
fadds
mov
mov
xchg
imul
cmp
sub
mov
inc
shl
sbb
inc
sub
sub
cmp
xchg
push
subl
inc
popf
ljmp
loopne
je
aam
dec
fxch
add
leave
add
dec
lods
outsl
test
mov
fnsave
pop
jbe
insl
stos
or
dec
insl
loope
rep
cmp
cmp
xor
pextrw
mov
jbe
sub
rclb
adc
dec
dec
mov
xchg
andb
in
mov
and
ret
aam
stc
pusha
pop
xorl
in
adcb
ja
mov
clc
fwait
shl
sub
cmpsl
out
xchg
mov
sub
pusha
fadds
scas
out
mov
add
cmp
mov
mov
dec
xchg
nop
arpl
les
mov
jp
mov
mov
fidivs
jb
ljmp
xor
sbb
sti
xor
xchg
scas
jae
das
add
xchg
fcmovb
cltd
cltd
pop
xor
add
pusha
sbb
mov
repz
gs
xchg
push
dec
jge
inc
cmp
movsb
lea
aaa
sbb
mov
insl
add
mov
mov
cmp
mov
mov
flds
sahf
stos
test
rcrl
int
cmpsl
add
add
jne
les
or
insb
loop
add
repnz
jnp
push
mov
adc
mov
push
add
sbb
pop
xchg
lds
cli
pop
jne
xchg
mov
lret
sub
pop
out
insb
inc
mov
mov
je
je
push
pop
pop
pushf
mov
push
fwait
or
mov
notl
incl
lahf
add
hlt
shll
outsb
outsb
pop
xchg
sbbb
jecxz
adc
and
lods
lret
outsl
lods
sub
adc
out
sahf
push
outsb
or
aaa
scas
jns
jl
fists
jnp
orps
fsubrl
sub
test
mov
xor
es
fdivs
sti
aas
xchg
lahf
xor
js
stos
out
xorb
imul
dec
lcall
xchg
in
leave
incb
jo
shrb
cmc
out
mov
xchg
mov
push
and
adc
ret
jb
mov
xchg
fldcw
jne
mov
in
pop
push
addr16
adc
and
adc
jae
cwtl
mov
cmpsl
movsb
jnp
xlat
pop
mov
mov
imul
iret
enter
add
adc
ficompl
paddusw
xlat
push
pop
or
dec
scas
xor
mov
jp
fnstcw
and
adcb
int3
lret
repz
xor
cmp
mov
imul
fcmovnu
aad
loop
adc
inc
mov
les
in
dec
loop
mov
lahf
in
cld
push
leave
fstl
pushf
std
or
repz
adc
push
add
mov
xor
xchg
das
mov
fisubs
scas
pop
mov
stos
pop
shlb
pop
test
stos
mov
mov
sbb
std
cmpsl
xchg
stos
out
and
inc
mov
jbe
in
cmp
mov
jb
push
cmp
inc
aam
jl
push
xchg
sbb
stos
pop
sbb
sbb
mov
hlt
iret
inc
fwait
ja
je
js
or
lds
fcmovnu
repnz
mov
sbb
mov
loop,pn
repnz
xor
ss
mov
mov
pusha
xchg
add
jb
fisubrs
dec
pop
orb
and
pop
xor
fnstsw
movsl
in
and
inc
mov
mov
pop
pop
dec
mov
sbb
mov
add
pop
fsubs
push
and
les
mov
sbb
add
sahf
push
mov
orl
mov
scas
or
rolb
pop
stos
inc
push
arpl
ds
sbb
or
push
out
sahf
stos
jle
popf
js
repnz
dec
xchg
shlb
inc
les
imul
aam
idivb
sub
in
dec
mov
sbb
and
or
cmp
int
outsb
jg
test
and
dec
push
pop
call
je
jecxz
sub
mov
sahf
dec
pusha
test
or
aad
push
or
in
sbb
mov
add
pop
add
rcrb
shlb
sbb
stos
sub
adc
pop
sti
lds
dec
insb
cmpsb
dec
xchg
inc
daa
dec
sti
clc
jl
les
sub
aaa
fisttps
xor
mov
or
sbb
push
sub
icebp
rclb
out
jge
cli
bound
in
mov
sti
jo
hlt
jle
dec
push
repz
sub
and
movsl
jns
mov
shll
shrb
adc
push
push
mov
inc
mov
adc
js
imul
dec
xchg
js
fldt
pop
mov
idivb
mov
fwait
add
push
add
loop
dec
jno
mov
lret
rcrl
lcall
mov
mov
sarl
ljmp
retw
cli
out
gs
cld
lods
dec
jle
insb
mov
insl
negb
mov
dec
out
push
adc
and
push
or
push
aas
adc
xchg
ds
gs
lds
dec
mov
cmp
sub
mov
rclb
jns
cmp
andb
jg
sub
inc
pop
enter
cmpsb
cmp
inc
adc
and
int
es
hlt
aad
into
push
push
inc
mov
imul
and
pop
mov
dec
arpl
jb
inc
repnz
lods
sbb
xor
lret
xchg
shlb
mov
fcoms
in
fildl
scas
push
pusha
mov
cli
insb
fcomps
pop
test
mov
scas
push
inc
ja
insl
dec
add
push
int
xor
scas
dec
xlat
and
popa
mov
icebp
mov
out
or
stc
sub
gs
int3
pop
or
xor
mov
dec
push
push
jb
pop
notb
or
cmp
push
adc
pushl
xchg
adc
int3
call
and
js
cltd
mov
adc
jmp
mov
dec
push
jle
sub
cld
cld
hlt
aaa
mov
es
pop
cmp
sub
dec
inc
aad
cmp
mov
push
and
mov
shr
lahf
inc
fwait
xchg
std
mov
mov
jge
movsl
das
scas
inc
imul
pop
mov
leave
inc
test
and
push
fdivr
push
sub
cs
mov
add
xchg
sub
shlb
push
jg
fbstp
data16
imul
fsubl
mov
rol
call
push
pushl
hlt
add
mov
scas
cmpsl
lahf
pop
xchg
mov
mulb
arpl
push
xchg
adc
push
dec
xor
das
pop
out
test
push
cmp
jecxz
jns
jb
and
jl
rcll
mov
sub
push
bound
out
test
mov
xor
imul
das
pop
and
insl
ljmp
sar
lea
push
cmp
insb
push
movsl
repnz
xor
fistl
sbb
and
fldcw
cmp
push
mov
dec
hlt
xorl
dec
in
xchg
iret
mov
test
in
imull
adc
xchg
pusha
pop
fld
addr16
pushf
test
adc
outsl
cwtl
movsb
out
cltd
mov
mov
xor
arpl
add
pusha
mov
lds
xchg
addl
popa
test
hlt
shrd
aas
xchg
in
mov
xor
in
mov
xor
mov
ljmp
into
ret
fnstsw
pop
outsb
push
mov
mov
scas
push
into
movsb
in
jmp
divb
mov
push
sub
add
or
cmp
push
xchg
pop
or
into
sahf
stc
pop
loop
push
pop
inc
or
aad
icebp
cmpsl
je
cwtl
sbb
gs
push
and
xor
sbb
jb
popf
daa
stos
jge
cmpsl
sti
mov
ss
fnstsw
push
and
inc
xor
lahf
sub
xor
bound
mov
test
inc
push
lret
xchg
cmp
call
not
xor
xor
sbb
ja
pusha
idiv
dec
xchg
or
inc
icebp
inc
pop
pop
dec
xchg
mov
pushf
stos
jns
out
ja
push
nopl
aaa
adc
sahf
push
les
je
icebp
push
xor
mov
jmp
mov
adc
mov
lods
dec
or
push
lea
mov
jbe
fistpll
js
adc
jge
or
sub
xlat
xchg
xor
es
xor
adc
and
jle
mov
test
les
cmp
pusha
fsubrs
and
gs
and
je
shll
xor
aad
test
fld
mov
mov
cwtl
push
jbe
mov
cltd
fwait
out
lds
shrb
xor
outsl
lret
cmp
insb
les
andl
movsl
stos
mov
ffree
lcall
loop
repz
mov
pop
insb
repz
xchg
shll
mov
cmpsl
iret
scas
pop
push
cmp
cmpsb
icebp
inc
push
jecxz
fcoms
inc
mov
adc
pusha
jg
sub
repnz
push
or
dec
mov
stc
xor
add
or
rcrb
mov
pop
insb
scas
ret
mov
pop
fcompl
sbb
les
cld
xor
add
in
enter
dec
test
dec
test
add
dec
cmpl
lock
and
cmpsb
and
xor
sti
push
adc
jnp
in
mov
addr16
mov
push
adc
adc
addb
push
jmp
mov
imul
push
negb
aaa
lcall
cld
pop
fwait
int
push
jno
push
lret
cld
or
jb
xor
cmpsb
cld
add
mov
mov
repz
lock
dec
adc
iret
mov
mov
mov
adc
negl
mov
out
out
push
es
insl
pop
mov
ret
push
iret
test
cmp
mov
inc
das
push
scas
xor
or
pop
cmp
fdivr
les
pop
xchg
pushf
cwtl
cmpsb
inc
hlt
add
daa
lcall
adc
mov
xor
jg
sub
test
js,pn
stos
add
adc
and
inc
ret
xchg
inc
cmp
js
aam
lods
push
push
lret
sub
out
lds
mov
lock
or
dec
mov
inc
addr16
add
or
push
orb
push
cmp
cmpsl
arpl
fcompl
mov
rclb
adc
mov
cmp
imul
xor
imul
add
inc
movsb
shl
lods
shlb
out
sbb
and
jmp
or
xchg
in
xor
lds
mov
loope
imul
movl
mov
vmovss
mov
jno
or
jl
inc
inc
and
in
into
inc
pop
xor
orps
mov
mov
daa
cmp
aas
imul
xor
aam
adc
xchg
bndstx
fmull
ds
xlat
in
aam
cli
sbb
lods
stos
jns
das
adcl
xchg
das
pop
push
cmp
add
mov
lods
jge
or
xor
int
icebp
sbb
outsb
cmp
or
mov
dec
mov
fwait
in
pop
lret
sub
fistl
mov
jo
push
dec
test
add
adc
mov
lods
lds
jg
in
pop
sbb
les
xchg
jmp
stos
gs
sbbb
sbb
clc
ss
lret
inc
sbb
sub
test
adc
dec
arpl
mov
mov
in
push
ud0
pop
mov
fucomip
scas
cmp
pop
shr
adc
jg
xor
aam
scas
incl
movsl
rcll
and
fcomps
xor
outsl
sub
mov
push
jnp
push
jmp
aaa
sbb
out
mov
inc
sub
jne
stc
sbb
adcb
in
ss
pop
mov
js
stos
cmpsl
pop
scas
mov
int3
adc
add
popa
and
mov
xchg
push
mov
lods
pop
xchg
in
mov
pop
scas
imul
cmp
pop
jmp
xchg
cwtl
in
sub
pop
fxch
or
cltd
or
mov
jge
rolb
fisubs
push
pop
sub
jg
test
sbb
fldenv
push
jge
stos
fistps
push
fbld
loop
repz
mov
jp
cli
push
test
adc
xor
adc
mov
mov
inc
push
cmp
out
and
and
in
dec
addb
cli
nop
ss
out
dec
subl
inc
mov
loope
cltd
and
cmc
xchg
sar
rorl
daa
data16
sub
stc
cmpsl
mov
inc
sbb
sbb
mov
loopne
ss
xor
fnstcw
dec
sub
or
jno
mov
enter
insb
enter
roll
das
mov
aad
ret
scas
mov
jmp
insl
loope
pop
sbb
adc
mov
mov
mov
xor
inc
mov
and
addr16
mov
push
dec
jmp
xchg
xor
sub
jno
sti
sbb
int
aam
std
mov
insb
mov
jmp
push
rcll
loope
dec
add
mov
shr
cmpsl
ret
pop
or
aas
out
pop
daa
dec
mov
nop
mov
fstl
lds
test
jno
loop
das
pop
nop
adc
mov
add
scas
dec
sub
dec
lcall
das
mov
cmp
fldcw
add
sub
js
pop
ret
xor
fnstcw
shrb
mov
imul
hlt
cmp
shrl
je
shlb
arpl
mov
sarb
test
mov
jnp
test
xor
cld
cltd
cmc
add
iret
jo
in
inc
xor
xchg
movzbl
push
jecxz
jg
das
stos
add
cmp
or
cli
jbe
pop
push
jae
or
xchg
xadd
idivl
pop
imul
xchg
mov
stos
jp
imul
int
popl
fisttps
inc
cli
ja
fidivrs
in
jge
jne
jne
push
les
daa
push
mov
int3
aam
adc
sub
test
dec
clc
test
inc
push
add
pop
imul
outsb
ljmp
mov
mov
fsubp
pop
sbb
daa
in
test
sub
fwait
inc
dec
sub
mov
pop
mov
in
mov
in
scas
mov
adc
loop
mov
mov
imul
or
push
out
hlt
bound
test
inc
sub
pushl
lret
cmc
loopne,pn
fsubrl
adc
add
and
loopne
inc
or
pop
mov
mov
pop
jmp
mov
sti
fwait
movsb
dec
in
addr16
add
out
xlat
mov
and
jl
outsb
ss
add
sub
shrb
fwait
repnz
adc
xchg
cmp
dec
and
pop
push
notb
fs
mov
inc
xlat
cmp
cli
movsl
lock
jbe
jb
shlb
inc
sub
xchg
fidivrs
addr16
int3
shrb
out
ja
pop
xchg
jns
add
pop
movsl
or
cwtl
mov
xor
movsb
fimuls
lcall
ficompl
js
nop
loop
iret
int3
cmpl
push
popf
or
xchg
dec
je
mov
jne
lahf
pop
test
ds
andl
inc
or
loope
push
andl
adc
mov
adc
aaa
addr16
shr
test
add
add
jmp
ret
xchg
xor
jae
stos
rcr
mov
idivl
push
or
aad
push
xlat
add
insb
out
jns
jge
out
sbbl
idivb
sahf
mov
jno
mov
mov
xor
test
js
out
dec
pop
loopne
xor
test
and
repz
dec
jnp
leave
out
mov
cmovae
scas
xchg
into
push
sub
insl
xor
sbb
jge
cmpsl
lods
outsl
mov
aam
out
cmp
scas
adcb
lret
call
and
cmpsb
and
pop
leave
dec
mov
int3
sbb
lret
aam
jl
enter
stc
push
sbb
lret
and
push
aad
lods
aas
in
xchg
push
mov
aad
stc
test
jmp
jne
adcb
add
movsb
pushfw
stos
dec
iret
mov
rol
cwtl
push
out
pop
pop
jle
into
stc
bound
mov
add
inc
cmp
fstp
bound
cmp
aas
sti
loop
test
inc
movb
push
dec
xorb
andl
enter
subb
sub
out
pop
mov
cmp
mov
cmp
cmp
mov
ffree
out
mov
inc
adcb
jo
jno
aas
mov
push
sub
and
inc
es
push
or
loop
ljmp
in
das
or
ja
or
mov
adcl
lods
shll
nop
fdivs
or
outsb
and
push
ljmp
cmp
repz
sbb
or
push
cmc
in
ss
mov
inc
fsubrp
dec
jle
push
lea
or
cmpsl
dec
ret
mov
ffreep
xchg
clc
dec
cmc
adc
mov
dec
sub
loope
xchg
inc
mov
push
test
add
out
fs
xchg
add
out
pusha
mov
gs
adc
push
inc
jnp
xchg
rorb
xor
push
lahf
jg
fcomp
das
cmp
mov
rolb
nop
out
jno
out
and
pusha
arpl
xor
stc
sub
inc
call
jo
inc
push
adc
repnz
arpl
mov
push
inc
pop
addr16
add
leave
dec
je
inc
mov
jg
jb
clc
inc
push
cltd
aas
leave
aas
aas
lds
add
pushf
lock
mov
shl
mov
jb
xor
jb
out
pop
adc
pop
cmp
cmp
add
test
pop
pusha
sbb
dec
push
add
movsl
scas
out
divl
mov
dec
sarl
lcall
adc
out
mov
clc
pop
pop
cmp
jecxz
sbbl
jecxz
adc
ljmp
pop
outsb
mov
xchg
test
aam
xchg
pop
xor
dec
mov
movntps
push
out
adc
lock
xor
mov
test
test
cwtl
lods
imul
inc
pop
inc
dec
inc
lret
mov
repnz
scas
sbb
sbb
fwait
or
into
cltd
xchg
bound
sub
jge
mov
sbb
sbb
ss
clc
daa
dec
imul
sbb
aas
pop
imull
hlt
jno
add
rcrb
mov
push
popa
and
sbb
xor
mov
mov
fimuls
pop
dec
enter
mov
inc
sbb
jns,pn
ja
xor
dec
xor
xchg
xchg
in
mov
cmpsl
cs
adc
loope
and
loope
cmp
aam
sbb
lods
sahf
or
pop
cli
ljmp
xor
data16
lret
jo
aam
fwait
outsb
mov
clc
inc
inc
dec
nop
jo
adc
lret
js,pn
jle
cmp
adc
sbb
xchg
ds
shlb
xchg
mov
push
mov
aad
into
mov
cli
test
cmp
xchg
in
sti
xlat
out
inc
insl
push
inc
mov
and
lds
mov
andb
adc
cmp
mov
aad
int
xor
inc
fldcw
add
push
adc
lods
int3
inc
outsb
mov
mov
mov
mov
push
sub
pop
jns
mov
mov
push
pusha
mov
xor
cmp
movsl
popf
stos
sbb
ja
gs
cmp
test
or
add
pop
test
xlat
movsl
push
sbb
or
jbe
aas
out
jmp
aaa
xor
push
cwtl
inc
mov
push
clc
bnd
nop
js
sub
pop
popf
lds
out
std
lcall
fists
pushf
shl
jne
sbb
pop
pusha
fdivrs
shr
sbb
movsb
and
push
pop
enter
sub
jae
and
push
int
mov
movsl
ja
push
jp
in
dec
ja
loopne
faddl
add
pop
cltd
dec
in
clc
adc
stc
mov
lods
mov
aad
xor
dec
mov
lods
xor
jp,pt
imul
aas
sbb
mov
repnz
or
lds
ds
push
add
mov
aad
and
xor
dec
jb
pop
or
mov
jge
mov
int3
mov
rolb
fs
insb
pop
xchg
xlat
scas
jno
jb
cmpsl
add
into
mov
sub
out
add
adc
clc
out
mov
pushf
cmp
out
jns
imul
xor
sbb
repz
xchg
xorb
aam
cli
add
clc
pop
aad
fsub
inc
aas
out
adc
mov
mov
or
scas
dec
mov
mov
inc
pop
add
xor
add
sbb
jle
inc
sahf
and
mov
adc
js
out
fisubrl
lahf
int3
dec
mov
call
pop
xchg
lock
fildl
adc
idiv
lcall
leave
mov
in
leave
mov
xchg
mov
sbb
dec
adc
pop
ds
repz
out
jns
xchg
jp
lock
lea
bound
lods
in
lock
mov
aas
call
stos
push
divb
js
orl
xlat
rclb
stc
push
jb
inc
pushf
imul
mov
or
inc
pop
push
push
mov
add
mov
inc
lcall
jp
sub
and
out
fstpt
insb
jmp
add
jbe
stos
pop
addr16
andl
cmp
adc
lahf
cli
in
xchg
jmp
dec
or
dec
test
push
sbb
and
or
pop
in
jo
pop
test
cmpb
mov
xor
xchg
iret
repz
subl
scas
push
lret
jle
lock
and
or
test
ret
mov
pop
xchg
je
xlat
adc
mov
xor
ret
mov
mov
les
cmp
and
adc
and
ds
jb
repz
arpl
pop
je
andb
and
out
int3
pusha
add
cmp
aaa
inc
test
adc
rorb
cmpsl
cmp
rolb
lahf
mov
and
repnz
add
mov
mov
stos
les
jle
aad
jp
js
mov
jmp
leave
fimuls
cld
xchg
pushf
adc
sub
dec
cmc
jmp
jecxz
cmp
xchg
loope
cwtl
pop
adc
mov
pop
cli
imul
sti
test
insl
pop
mov
sub
mov
int3
cmc
push
lsl
inc
jbe
cmpsb
jns
jp
cmp
fwait
cli
lret
mov
bound
lahf
mov
push
in
in
mov
sbb
pop
dec
pop
mov
fisubrs
mov
pushf
and
mov
xor
mov
jecxz
out
lea
sub
add
sahf
jge
mov
mov
sbb
cmc
jne
out
xor
xor
int3
inc
hlt
jbe
jecxz
jo
mov
sub
insb
add
call
fwait
loopne
and
jge
add
dec
shll
or
fsubl
loop
gs
jle
gs
xabort
je
and
push
jne
int3
fidivrs
in
push
in
mov
lret
sub
clc
pop
sti
sbb
jno
xchg
ret
mov
call
lcall
inc
dec
aam
add
jp
mov
jecxz
dec
adc
sbb
sub
push
jg
bnd
adc
fnstsw
pop
or
push
imul
mov
sbb
lret
inc
push
mov
xchg
imul
lret
sbb
jecxz
dec
fiaddl
dec
xchg
mov
pop
in
gs
fs
adc
inc
icebp
cmp
cmpsb
inc
mov
aad
xchg
adc
test
into
cld
incl
cld
sbb
aam
adc
push
iret
out
xor
and
insl
add
lods
sbb
int
xchg
adc
sub
je
xchg
xchg
loop
lahf
je
sti
loopne
mov
mov
dec
mov
mov
sbb
add
cmp
int3
in
xchg
test
into
mov
add
push
call
nop
out
int3
cmp
movsb
jp
repz
sbb
mov
push
mov
adc
adc
fmul
xchg
popf
daa
enter
push
inc
roll
mov
arpl
jae
mov
mov
imul
jecxz
ret
mov
cmp
icebp
imul
lods
mov
aaa
dec
xchg
bound
cmp
and
xchg
aas
push
hlt
dec
bound
sarl
pop
aas
mov
mov
ss
movsb
imul
movsl
cmp
jae
daa
jmp
fldcw
mov
cmpb
imul
stc
xchg
xor
divb
scas
fdivrl
sub
pop
bound
lock
in
xchg
adc
out
mov
rcrb
mov
test
lods
add
fs
or
pop
sbb
sbb
adc
les
push
jbe
sbb
mov
sti
in
adc
rol
scas
add
cmp
call
add
stos
mov
mov
test
ja
push
or
push
insb
push
testb
add
push
mov
loopne
aad
and
cmc
int
dec
bound
xor
mov
lcall
cmp
popa
or
test
pop
cmpsb
fsubs
popa
dec
xchg
and
imul
out
ja
roll
lcall
call
lods
push
xchg
je
and
adc
mov
pusha
shlb
xor
sub
pop
fwait
je
adc
sti
test
into
sbb
or
aad
popf
pop
push
ds
ret
out
leave
push
xlat
cmp
mov
bswap
sti
outsl
jbe
loop
js
hlt
sbb
fwait
xor
out
jle
nop
jmp
pushf
xchg
dec
mov
push
repnz
fldenv
sbb
fdivrl
lock
xor
xchg
lods
jae
imul
mov
lds
loopne
or
popf
adc
mov
jmp
sbb
xchg
pusha
notl
cli
xor
mov
or
in
cmp
push
jae
pop
xchg
inc
push
insb
or
push
pusha
andl
adc
push
sbb
inc
nop
ror
pop
sbb
pop
pushf
xchg
lcall
int3
sub
jno
dec
pop
pop
orb
inc
je
mov
pop
sbb
gs
das
arpl
inc
jns
cmp
arpl
lock
loope
xor
jne
fdivrs
dec
lock
lcall
lds
stos
mov
pop
mov
xor
nopl
adc
mov
pushf
cld
push
sub
roll
imul
cli
mov
mov
out
sub
pop
cmc
in
repnz
lds
adc
or
int3
mov
adc
cmpsl
call
rolw
clc
mov
cmp
je
sbb
in
lods
aam
sub
xchg
jp
sbb
pop
push
lods
out
aam
insl
sub
adc
xor
lea
ljmp
loop
cmpsb
xor
shl
movsb
into
mov
fdiv
jns
add
test
jo
imul
mov
mov
pop
es
call
shll
mov
or
mov
inc
stos
fisttpl
inc
mov
std
or
in
and
mov
add
cmpsl
sbb
or
out
lcall
in
fstpt
fistpl
nop
pop
imul
dec
jae
xor
cmp
pop
divl
jb
inc
cmp
mov
shl
jmp
out
mov
xchg
jae,pn
adc
cs
outsb
jmp
and
lret
cmp
push
stc
lods
dec
push
lea
jne
js
jo
lods
jmp
shll
test
pusha
cmc
push
popa
adc
lods
pusha
ret
dec
or
shlb
call
sub
imull
or
push
sbb
incb
push
sahf
cs
mov
shl
ror
mov
xor
icebp
sar
mov
add
mov
mov
mov
and
sbb
mov
mov
jnp
out
rcll
cwtl
mov
xchg
mov
adc
popf
das
lock
nop
out
cld
fs
pop
arpl
push
push
leave
lea
mov
pop
or
xorb
out
int3
cmpsb
lret
and
test
aam
jnp
cmp
mov
ds
or
xor
out
pop
movb
mov
cmp
xchg
pop
sbb
mov
fistps
inc
push
or
mov
scas
ret
pusha
cmpsl
jp
hlt
test
lret
xchg
push
mov
sbb
in
std
mov
sbb
mov
sti
inc
xchg
and
pop
fcoms
mov
es
imul
hlt
mov
adcb
cltd
inc
ficomps
xchg
cmp
lret
jae
push
or
lods
xchg
push
adc
push
fistps
add
adcb
dec
add
jle
addl
add
pushf
ficoml
mov
pop
nop
jnp
ror
mov
bound
loope
cmp
jg
icebp
subb
insb
cmp
add
push
cmp
sti
and
and
inc
gs
xor
nop
fwait
mov
mov
mov
mov
paddusb
cmp
sbb
push
dec
xor
sbb
xor
mov
addr16
fsub
shrd
into
in
xchg
call
jnp
pusha
sbb
out
cmp
jmp
les
pop
or
sub
stos
shl
sub
and
xchg
inc
cltd
stos
jae
sub
xchg
dec
mov
sub
bound
sahf
out
xchg
in
mov
cs
icebp
bound
sub
mov
xor
jns
movsl
push
fucomi
int
sub
loopne
shlb
enter
push
cmpsb
scas
inc
gs
int3
mov
push
jl
cwtl
ret
lds
add
ror
pop
add
or
fcoms
cmp
loopne
sbb
xchg
leave
push
add
xchg
jbe
dec
inc
mov
push
dec
rcr
inc
jecxz
push
loopne
sti
dec
xchg
ss
sbb
lods
popf
pop
adc
push
push
ret
out
ret
in
and
push
bound
jle
or
xchg
push
add
inc
fdivr
sahf
sub
mov
cmp
arpl
xchg
mov
loope
inc
fiadds
pop
sbb
aas
js
add
mov
and
divl
adc
pop
push
rorb
pop
insl
in
xchg
cmp
push
add
leave
mov
push
xchg
cmpsb
rcrl
pop
fbld
sub
stos
inc
pop
inc
in
lds
sub
pop
pop
xchg
pop
cltd
arpl
cmp
shll
stc
loope
mov
xchg
mov
dec
sbb
xchg
jbe
mov
push
adc
sbb
in
lods
ficoml
lods
pop
into
pop
movsl
test
jp
icebp
cmp
daa
lahf
gs
aaa
push
dec
push
inc
or
mov
and
sub
out
mov
jns
test
add
lock
rclb
sahf
jecxz
mov
stos
jno
dec
inc
cmp
adc
sbb
push
ja
xchg
dec
mov
mov
xchg
jp
jb
cltd
cs
mov
scas
xchg
add
adc
sbb
adc
or
in
push
bound
or
mov
loope
push
repnz
pop
xchg
das
outsb
dec
clc
mov
outsl
rorb
add
popf
xchg
out
cmp
inc
stos
jmp
mov
pop
jge
mov
rolb
and
xchg
xchg
call
movsb
mov
flds
dec
pop
call
imul
jae
mov
lock
mov
cmp
jg
xlat
pushf
stos
xor
inc
xor
cmpsl
mov
jo
jae
xor
xor
popa
adc
add
loop
jl
inc
test
xor
repnz
sub
mov
jae
neg
jg
xor
outsb
call
mov
adc
mov
loop
fidivl
hlt
add
lcall
in
out
dec
mov
cltd
stc
repz
or
jg
sub
ss
inc
jne
xchg
fdiv
loopne
lods
sub
jae
lret
adc
cmpsb
repz
sbb
push
inc
lahf
sbb
pushf
pop
mov
cli
mov
or
mov
dec
sub
cmp
loopne
fldenv
imul
call
popf
das
push
inc
mov
mov
lret
outsb
xchg
or
addr16
mov
xchg
push
or
and
test
sbb
pop
faddp
sar
je
fwait
outsb
lods
inc
mov
clc
repz
ficoml
jo
popa
stos
cmp
mov
pop
cmpsl
mov
inc
mov
hlt
or
aaa
push
nop
lea
inc
sub
xchg
cmp
xchg
mov
mov
lea
fcomps
jbe
lret
pop
adc
pusha
movsb
es
aas
aaa
or
xchg
test
adcb
cld
pop
roll
sub
lret
xchg
das
push
dec
repz
call
shrb
push
hlt
data16
js
movsb
cmp
lahf
mov
xlat
lcall
xchg
add
push
add
lds
test
jle
mov
aas
and
out
pusha
mov
xchg
adc
cs
mov
adc
scas
fs
or
out
stos
jmp
or
jns
das
sbb
lds
lock
out
jge
and
or
nop
pop
adcl
xchg
ret
and
pop
notl
sbb
insl
out
std
jb
xchg
mov
stos
das
sub
lcall
sbb
or
push
daa
pop
pop
sti
test
sub
incb
sbb
inc
shll
in
adc
jg
jecxz
mov
rcrb
sbb
popa
popf
rorb
lds
aas
addr16
movl
push
ja
test
mov
add
cmp
xor
cmp
ds
ss
rcll
cmc
and
inc
fmuls
xor
cmpsb
push
rclb
loopne
imul
cmpl
aam
pop
pop
mov
adc
sub
ljmp
inc
fidivs
sbb
repz
dec
dec
jge
and
leave
fnstcw
shll
mov
xchg
loopne
aad
je
fstpl
xlat
push
or
xchg
sti
data16
das
mov
arpl
push
scas
fdivl
mov
sar
add
out
dec
add
and
add
iret
out
mov
add
js
mov
iret
adc
ss
xor
inc
xlat
insb
shl
fstl
and
jns
insl
add
test
sub
shr
cltd
or
in
loope
xchg
jmp
pop
test
inc
mov
scas
inc
push
movlps
stos
gs
jae
push
fwait
xor
xlat
mov
in
push
cmc
pushl
jae
imul
xchg
ror
push
stos
jb
outsl
add
fdiv
lds
sub
sbb
stc
jle
mov
shl
shlb
test
pop
sub
test
fs
mov
dec
and
push
push
cmpsb
cld
or
mov
pop
mov
jnp
and
sub
adcb
roll
jo
push
inc
xchg
jge
push
jne
pop
sub
test
and
std
dec
xlat
mov
jns
pop
mov
popf
ret
into
push
mov
mov
in
and
xchg
cmpsl
hlt
fxch
pop
sub
repz
leave
arpl
divl
aaa
data16
mov
push
and
femms
js
mov
xor
adc
sarl
and
push
hlt
jns
rclb
shrl
pop
mov
add
jl
bound
test
cld
mov
dec
jp
mov
cmp
sub
mov
sub
mov
shrl
arpl
loop
jo
faddl
xchg
mov
mov
sbb
xorl
call
popf
inc
mov
xor
mov
int
es
ja
pslld
jecxz
in
fwait
push
movsb
loope
enter
xchg
mov
adc
inc
sub
sub
fwait
stc
xchg
leave
mov
inc
mov
push
and
shlb
repnz
add
lahf
es
loop
jle
mov
das
mov
fs
mov
sbb
loope
xchg
mov
add
sbb
push
xor
test
push
jns
pop
push
cmpsl
mov
inc
mov
sahf
lahf
xchg
lahf
inc
stos
jecxz
movsl
push
xchg
jle
fimuls
fnsave
or
xchg
jle
mov
das
jge
add
adc
sub
ffreep
mov
gs
cmp
addr16
cwtl
and
fs
or
add
adc
jb
fldenv
repz
dec
and
mov
mov
inc
hlt
mov
pop
add
pop
push
gs
sub
and
sub
sahf
roll
push
add
sbb
pop
mov
dec
loope
enter
imul
popf
adc
test
outsb
inc
lea
mov
mov
mov
out
loopne
sahf
pop
es
inc
and
stos
test
sbb
fsubl
jae
fdivrl
test
xor
mov
das
mov
es
popf
scas
or
cmp
or
xor
jbe
loopne
cmc
lea
mov
jl
out
mov
lods
mov
cmp
out
push
mov
lods
negb
add
or
jb
scas
into
lcall
push
mov
sbb
cltd
lea
leave
jg
push
andb
test
sbb
push
cld
fistps
jnp
jge
stos
sub
pop
adc
jo
call
ja
cs
test
mov
pop
inc
xor
mov
mov
sbb
nop
ja
and
ret
push
jmp
dec
mov
es
shll
push
std
aaa
push
hlt
push
cmp
sub
aam
sbb
sbb
rcrl
clc
int
shll
and
push
enter
jne
into
jle
je
push
add
jbe
push
mov
jmp
push
rcrb
jnp
xchg
cli
ret
sbb
push
jae
push
in
push
xor
inc
call
cmp
test
dec
in
daa
das
adc
jg
mov
lcall
mov
cmpsb
push
jg
cwtl
inc
fldenv
pop
pop
sub
mov
sahf
mov
jecxz
fmuls
xor
sbb
popf
test
sub
xchg
mov
stc
rcll
testl
mov
into
pop
inc
pop
cmp
lods
pop
rclb
jae
inc
rcrw
pop
mov
lock
addl
xor
push
daa
mov
arpl
dec
cmp
fsubp
sub
ja
ss
cmp
outsl
std
loop
add
pop
sub
inc
call
mov
sbb
mov
xchg
jbe
sbb
in
xor
add
pushf
fimuls
or
inc
mov
cmp
test
lret
dec
fdivrs
inc
imul
fs
and
mov
iret
rcll
mov
stos
shl
ret
adc
add
stos
or
stc
adc
or
jo
and
sub
pop
and
jg
int
dec
mov
mov
mov
jmp
adc
int
loope
cmc
add
mov
lahf
add
inc
dec
setne
jo
pushf
cltd
std
inc
mov
imul
inc
movsl
sbbb
test
sahf
jmp
and
cmp
dec
xchg
iret
add
lods
fcoms
shll
test
xor
int
sbb
sbb
and
test
je
cmp
and
cmc
icebp
ds
addr16
mov
mov
mov
in
pop
inc
jle
shll
sub
jl
idivb
dec
sub
xchg
out
movntq
out
arpl
in
fwait
fs
mov
div
sub
rolb
scas
sub
adc
incl
jo
and
arpl
data16
call
and
pop
mov
push
icebp
xor
xchg
loope
imul
inc
jnp
mov
outsb
repnz
fdivl
in
and
jl
fsubl
loop
jecxz
xchg
lods
xor
pusha
icebp
out
adc
enter
loopne
mov
sbb
mov
bswap
lcall
ja
jmp
notb
aas
fsubrs
call
jbe
push
or
mov
sub
lret
incb
mov
lods
push
xchg
stos
fs
hlt
mull
insl
lahf
inc
and
sub
enter
mov
stc
fldenv
dec
adc
or
outsl
cmp
loope
decb
lods
sbb
jns
mov
push
flds
les
add
rcll
xor
lret
outsl
and
sahf
mov
icebp
push
push
inc
mov
ficompl
pusha
mov
movsb
jno
repz
inc
and
nop
sub
bound
cltd
cmp
inc
mov
mov
ss
outsl
cmp
inc
mov
xchg
stos
inc
add
adc
and
cld
dec
mov
mov
adc
outsl
movsl
sub
jae
repnz
int
sbb
xor
addr16
fbstp
pop
ds
stos
stos
fst
xor
int3
lods
lret
mov
dec
cmp
pop
sub
cltd
push
into
push
in
lock
cmp
or
shll
loope
adc
xchg
pop
fildll
das
sahf
push
shrl
addr16
sub
fistpll
xor
loopne
in
test
call
rcll
scas
lods
hlt
repnz
mov
leave
sbb
inc
test
push
sbbb
jl
sbb
mov
mov
stc
pop
pop
fiadds
dec
enter
std
mov
mov
in
adc
dec
call
and
in
xchg
jle
fildl
push
xchg
adc
pop
sub
or
mov
push
lods
adc
sbb
push
fistps
outsb
pusha
jge
mov
loop
xchg
cmp
shlb
nop
in
in
shll
cmpsb
push
scas
xor
sti
mov
shll
mov
dec
jecxz
fdivrs
sub
adc
xchg
scas
adc
ljmp
jne
scas
push
std
mov
loop
mov
cs
pushf
push
jns
and
and
mov
pop
in
sbb
inc
and
rorb
pop
add
shlb
sub
push
and
mov
lret
jg
xor
mov
lock
imull
fadds
and
lahf
push
faddp
cmp
rcl
pop
mov
adc
icebp
dec
xor
fisubrs
cmp
add
mov
or
inc
popl
dec
push
mov
stos
mov
mov
adc
sti
pop
and
iret
and
pop
inc
push
in
daa
sub
sbb
sbb
jae
and
lea
pop
mov
push
lods
pushf
mov
push
ja
lds
mov
fdivrs
mov
push
fnstenv
add
scas
arpl
push
aam
lahf
xchg
out
test
jg
mov
xor
pop
aam
test
rcll
cmp
pop
mov
inc
stc
popa
push
std
mov
shll
sbb
enter
mov
jae
xor
shll
adc
fnsave
and
pop
cld
and
fildl
pop
and
pop
ficomps
xor
sub
jnp
sbb
call
inc
pop
pop
shl
ret
test
test
xor
cwtl
in
push
xor
mov
jmp
cmpsl
cmp
pop
xor
jmp
adc
jg
xchg
xor
mov
sbb
sub
cmp
pop
aam
loop
cmp
sti
inc
pop
sub
jg
loop
and
sbb
or
dec
ficomps
shrl
push
add
out
pop
jae
enter
out
hlt
xchg
mov
pop
int3
int3
ja
xor
dec
lea
shl
scas
inc
lock
or
xor
aas
push
jmp
dec
cmpsb
andb
push
and
dec
iret
cld
fidivs
in
movl
or
inc
and
mov
mov
bound
inc
cs
mov
mov
inc
mov
push
sub
loope
lock
rcrl
dec
jo
fdivrp
stos
jl
daa
aad
fidivl
in
lea
inc
xor
dec
lret
imul
in
or
push
addr16
inc
and
stos
das
xor
dec
inc
xor
ret
push
inc
in
mov
dec
add
mov
mov
ret
jne
cmp
mov
rorl
int
dec
or
push
pusha
ret
mov
inc
into
xlat
xchg
push
add
cwtl
mov
add
loop
icebp
sbb
mov
adc
inc
and
lret
xchg
mov
jl
xor
aaa
int3
in
aas
inc
push
push
fmuls
repnz
inc
push
scas
test
inc
pusha
add
hlt
xor
sub
push
push
mov
or
in
lods
mov
mov
arpl
mov
std
sbb
or
stos
rorl
jl
push
jbe
lret
std
sub
fistpl
lods
ljmp
pop
insb
sbb
in
jns
inc
and
dec
aad
mov
lea
mov
adc
lock
daa
int3
dec
lcall
dec
push
call
shl
push
out
push
sbb
leave
pop
cmp
lds
xchg
icebp
in
inc
dec
imul
jo
jnp
ret
insl
bound
and
push
mov
or
out
ret
mov
or
rorb
push
mov
push
rcrb
and
adc
and
scas
call
faddl
and
sub
gs
repnz
adc
xchg
call
jae
or
out
xchg
fs
sub
push
cli
imul
out
mov
call
and
into
add
nop
out
rol
scas
push
fst
cli
rcrl
nop
jl
cmp
addr16
popa
cmpsb
lret
call
dec
cmpb
aam
xor
aad
pop
add
pop
and
int
adc
push
mov
or
lods
cmp
or
and
pop
movsl
leave
dec
adc
stos
push
insl
mov
mov
mov
sbb
pop
xchg
jmp
cmp
lahf
out
lods
mov
cvttps2pi
sbb
fsubrl
pop
and
std
jl
add
xor
mov
imul
xlat
lods
inc
andl
dec
test
fcoms
roll
xchg
inc
cmp
outsb
negl
ds
dec
stos
into
iret
push
push
bound
sub
add
lods
xlat
jl
shr
add
sbb
aad
and
out
jmp
cmp
push
push
jns
cmp
les
sahf
lret
shl
xor
xchg
imul
push
adc
dec
xchg
fidivl
fs
add
mov
pop
xor
push
mov
mov
lcall
mov
nop
sub
imul
or
mov
mov
adc
les
idivl
pop
inc
mov
test
popa
dec
add
lods
sub
cmp
int3
nop
inc
adc
or
pop
xchg
and
arpl
mov
in
cmc
jmp
push
jp
and
stc
stos
rorb
pop
jo
add
adcb
popf
imul
mov
ja
pop
or
or
stc
inc
jl
pop
pop
pop
push
pop
cmp
imul
adc
push
push
fcomps
mov
cmp
mov
inc
or
fcomps
jmp
cmpsb
je
jne
lcall
shll
or
cmpsl
xor
inc
insb
getsec
in
outsb
mov
pop
push
inc
add
movsb
js
dec
dec
in
je
dec
shlb
jb
mov
movsb
push
int3
bound
xchg
mov
notl
decl
or
xchg
std
int3
pop
inc
cli
or
mov
xchg
fildll
mov
cli
imul
int3
loope
daa
lret
hlt
jp
inc
adc
mov
add
mov
and
stos
sbb
pop
lea
inc
pop
scas
xchg
cmp
cmp
mov
popa
mov
testl
clc
loope
fldcw
and
mov
sub
push
lret
mov
mov
mov
jp
movsl
lcall
jo
adc
add
iret
adc
pushf
das
imulb
push
out
sbb
inc
js
sub
xchg
sub
push
or
testl
mov
sbb
or
fcoms
ds
jns
mov
push
xor
daa
vmaxsd
les
adc
or
ficomps
js
lods
xor
adc
fsub
xchg
pushl
test
popf
rclb
cli
dec
or
adcb
int3
fwait
ret
rorl
pushl
inc
jbe
js
stos
sbb
not
xchg
das
jo
je
in
out
call
iret
and
dec
cmp
in
mov
fnstcw
pusha
and
jae
fs
dec
xor
mov
xchg
test
jp
aas
xchg
adc
mov
jno
outsb
daa
popa
cmpsb
aaa
jnp
mov
mov
mov
dec
sahf
testb
rolb
es
pop
jg
fnstenv
inc
mov
push
pop
dec
test
xlat
iret
push
stc
out
cmp
imul
hlt
fldcw
cmpsl
cmpsb
hlt
sbb
cld
cs
fsubl
and
fistl
dec
nop
jne
xchg
dec
mov
lret
out
add
clc
cld
add
xchg
add
dec
orl
mov
xor
inc
sub
dec
jns
mov
inc
test
cmpsb
rcll
jnp
sub
jne
mov
aad
dec
mov
sbb
stc
ror
and
xor
test
cmpsl
lret
add
cmpl
mov
xor
je
or
pushf
mov
repnz
mov
pop
mov
out
pusha
mov
sar
and
pop
mov
ficoms
jno
imul
inc
std
add
shll
xor
jb
iret
dec
aad
and
insb
int
fbld
xor
cmp
call
jno
jae
dec
mov
std
addr16
cld
jmp
or
mov
lret
jb
and
mov
add
out
add
nop
pop
push
dec
clc
fwait
mov
adc
sbb
sbb
mov
add
mov
lods
inc
pop
or
shrb
mov
lea
mov
mov
hlt
mov
jge
pushf
jae
sahf
rclb
lods
out
iret
and
add
jbe
scas
out
cwtl
imul
mov
lcall
xor
loop
mov
lods
daa
mov
cwtl
imul
sub
dec
mov
aaa
mov
pop
cmp
pop
xchg
fistpl
jne
fisubrs
and
or
jmp
jle
jecxz
lret
jp
jnp
adc
sbb
mov
cli
adc
dec
mov
rcr
pop
aaa
add
inc
xchg
xor
add
add
pop
hlt
sbb
jmp
repnz
mov
push
push
aad
pop
std
es
nop
dec
cmp
inc
sahf
popa
inc
rorb
cmp
mov
dec
outsb
cltd
adc
and
loope
jmp
mov
push
xor
xrelease
out
dec
gs
ds
mov
divb
rorb
dec
lcall
dec
dec
lods
push
dec
push
cmp
int
cmp
push
loope
mov
lcall
clc
cld
fsubrs
add
dec
lods
sbb
add
or
pop
out
jmp
pop
repz
and
loope
jecxz
sbb
ret
xchg
movsl
cld
out
adc
cmp
lahf
pusha
sbb
mov
inc
enter
rolb
cmp
js
inc
lahf
fbstp
out
push
add
pop
mov
mov
and
sbb
sbb
popa
add
pop
jno
jl
xchg
shl
mov
loop
cmp
xchg
fstpt
ja
fdivrs
mov
fcomi
fs
and
lods
jp
sbb
push
fs
xchg
push
add
roll
subb
sahf
and
push
xor
sub
sub
dec
int
push
add
pop
leave
pop
add
push
in
adc
jmp
js
int3
fs
jae
mov
push
into
fldenv
jo
out
mov
adc
xchg
pop
push
std
jge
and
xor
idivl
sbb
int
inc
xchg
or
dec
sbb
inc
lahf
hlt
test
jbe
or
mov
orb
hlt
inc
js
pusha
inc
addr16
jnp
scas
jns
sbb
std
dec
push
push
call
cs
push
mov
jae
jno
test
or
mov
sbb
out
lcall
xchg
jns
es
xchg
lock
mov
inc
inc
imul
fwait
scas
mov
jns
and
ret
dec
xadd
fsubrs
lcall
sti
mov
stos
fs
sub
rorb
or
cmp
outsl
and
lcall
inc
lock
sti
inc
arpl
mov
sub
int
sub
jns
push
cmp
dec
cltd
add
dec
clc
mov
inc
out
dec
mov
jo
lret
dec
or
and
clc
jns
icebp
cmpl
loopne
push
or
push
or
or
adc
inc
test
mov
lods
gs
int
daa
mov
xlat
sbb
sti
test
aas
sbb
jnp
arpl
sub
xchg
stc
frstor
dec
mov
mov
fs
mov
sub
add
mov
or
jb
jmp
fsubrl
movsb
call
push
inc
test
repz
and
pop
mov
fidivrl
lea
xchg
sbb
imul
lods
scas
pop
mov
fidivrs
imul
or
xchg
adc
xor
mov
cltd
mov
out
dec
divl
add
jae
jp
jg
xchg
adc
pop
insb
std
and
cld
sub
jmp
pop
int3
mov
inc
cmp
not
les
jg
fisubs
jle
and
push
xchg
pop
mov
mov
lahf
bound
mov
sub
or
es
jb
lods
xchg
mov
push
mov
jg
jns
jae,pn
add
jae
mov
andb
adc
ret
cs
mov
neg
mov
or
push
out
lret
ljmp
mov
jl
int
mov
nop
clc
popf
and
das
popf
mov
aaa
imul
cmp
in
or
push
mov
shrb
pop
mov
pop
push
ds
sub
jbe
xchg
gs
ret
test
mov
xor
and
test
inc
in
or
lret
mov
xchg
cmpsl
add
dec
adc
in
xchg
stos
or
or
outsb
sbb
mov
xor
sbb
bound
dec
cmp
lcall
xchg
in
jle
and
and
es
iret
inc
cwtl
popf
int3
dec
mov
test
xor
addb
inc
sub
sbb
test
lods
int
cs
lock
dec
pop
xchg
loopne
mov
in
adc
inc
jns
add
or
out
pop
inc
mov
lds
aad
mov
imul
xchg
out
adc
adc
imul
call
adc
push
jb
mov
ffreep
xor
inc
adc
dec
cwtl
outsb
leave
int
mov
mov
mov
jmp
mov
nop
jno
sub
testl
repz
iret
daa
adc
cs
cli
jmp
test
pop
push
mov
sub
leave
xchg
add
call
dec
mov
sub
pop
int3
jl
mov
jge
or
adc
aad
lods
jp
mov
xchg
inc
jge
mov
mov
mov
mov
insb
hlt
jae
ret
or
mov
dec
inc
imul
in
push
out
fsubr
aaa
or
das
sub
cmpsb
pop
dec
aad
insl
sub
test
pop
loopne
test
or
xchg
cmp
ret
mov
addr16
sbb
icebp
pushl
push
mov
cmpsl
popa
sub
push
into
lcall
fists
or
enter
test
and
or
mov
inc
xor
scas
fisttpl
out
sbb
mov
stos
popa
pop
mov
push
insb
inc
jo
add
lret
ss
dec
out
or
push
mov
dec
cltd
pop
ffreep
mov
dec
jl
fstpl
inc
and
hlt
jg
dec
lret
mov
loope
push
adc
sarb
xor
ljmp
mov
mov
js
arpl
stc
nop
mov
inc
loop
sbb
pop
loop
scas
push
pop
daa
push
xchg
dec
out
lcall
add
insl
inc
mov
sub
adc
xchg
lds
push
fidivrl
call
test
push
repz
xor
fsubr
mov
dec
and
push
mov
insl
in
mov
add
mov
mov
cmp
in
seta
sub
jl
sbbl
mov
pop
insl
mov
stc
add
jnp
mov
je
adc
lcall
mov
cwtl
std
sub
and
pop
cltd
pop
mov
stos
mov
or
xor
add
sbb
jmp
stos
stos
jecxz
cmp
lods
loope
nop
in
cmp
lahf
js
jg
in
pop
enter
imul
pop
mov
repz
push
out
ja
mov
into
and
or
out
dec
cmp
xlat
icebp
dec
daa
cmp
or
dec
pop
mov
xchg
popf
cmpsb
je
test
out
mov
lret
jle
adc
or
repz
dec
jns
push
mov
rolb
cs
mov
xchg
jne
inc
pop
lods
xor
popf
dec
add
testl
test
mov
pop
push
lea
and
mov
dec
aad
dec
icebp
repnz
ljmp
gs
out
xchg
cmc
xchg
cmp
xchg
adcb
add
mov
xchg
shlb
ret
cs
ds
jae
jo
sub
popf
lock
rorb
lock
iret
or
mov
test
leave
add
loope
cmp
mov
mov
sub
cmp
sahf
int3
fwait
mov
jecxz
rcr
pop
mov
xor
ds
sub
fs
push
out
popf
movsb
addr16
xlat
js
pop
jno
push
pushl
and
addr16
ds
into
mov
jle
mov
mov
call
test
xchg
or
push
popa
js
fimull
mov
pop
pop
add
stos
xor
xorb
pop
xor
jge
scas
ror
cmp
rcll
pop
add
cld
adc
add
mov
and
test
fnstsw
mov
fmull
mov
lods
cmpsl
testb
jecxz
or
fdivr
jbe
pop
faddl
add
test
and
xchg
xor
ss
insb
and
xor
cli
inc
dec
sub
sbb
xchg
mov
subb
adc
jecxz
divb
fiaddl
in
repnz
cli
test
or
add
mov
lods
sub
dec
push
dec
repnz
cmpsl
mov
dec
iret
in
out
push
push
incb
lock
pusha
pop
in
test
push
cli
sti
sbb
bnd
lock
rorb
loop
mov
je
lods
loop
adc
sbb
sub
mov
sbb
mov
xchg
cmp
jne
out
scas
and
mov
or
into
jnp
cwtl
into
jl
lods
cltd
ja
and
sbb
cld
jecxz
cmpsl
and
dec
rcrl
cmp
out
dec
dec
mov
cmp
lcall
xchg
cmp
sub
sbb
xor
add
mov
inc
xlat
mov
sub
push
dec
mov
push
lods
out
sbb
jl
jno
mov
ret
fidivs
clc
int
insl
mov
dec
or
jo
jns
dec
cmpsl
mov
xor
dec
std
enter
adc
je
insb
popf
sbb
sub
nop
ror
jo
jae
bound
sbb
and
aaa
mov
scas
jne
sub
popa
adc
lds
pandn
mov
dec
ret
mov
daa
pop
cmpsl
aas
or
addl
lock
jb
shll
loopne
jno
mov
subl
inc
mov
xor
bound
mov
out
add
xchg
mov
add
adc
push
loop
popf
push
or
shrb
stos
lcall
sub
mov
icebp
or
inc
lcall
ror
mov
xor
add
pop
adc
iret
jge
lods
fldcw
mov
ffreep
fdivl
int
push
xor
es
rol
push
xor
in
cmp
ss
or
rcll
or
mov
adc
stos
iret
sbb
loope
fsubrl
shl
mov
jmp
mov
popa
jb
cs
dec
adc
or
test
popa
jecxz
or
imul
lods
sub
pop
xlat
jb
xor
insl
test
loop
pop
clc
out
sub
iret
iret
fdivrl
movsl
rcrl
gs
and
aad
stos
rorb
fldenv
movsb
adcb
repnz
ja
les
stos
cltd
mov
mov
test
clc
mulps
pop
xchg
ficoml
push
lret
push
and
stc
mov
sub
out
sbb
rdseed
pop
loopne
pop
cmc
sub
jmp
orb
dec
pop
inc
cld
dec
out
inc
pop
das
and
das
add
ljmp
loop
adc
jne
shll
push
outsl
stos
sub
adc
loopne
stc
cmp
stos
inc
sub
xchg
sahf
pop
push
loopne
in
dec
mov
imul
jno
bound
sti
frstor
cmp
sub
ficoms
fimuls
jne
les
mov
movsb
sub
dec
and
cli
cmp
gs
adc
lods
and
enter
idivl
and
xchg
cmp
sbb
inc
movsl
pop
int
ret
push
xchg
mov
push
movsl
push
imul
shlb
insl
int3
mov
les
add
dec
push
ret
iret
and
lea
pop
xchg
mov
jae
xor
add
out
jae
adcb
fs
mov
lret
test
in
lock
and
aam
lahf
inc
jp
xchg
pop
movmskps
fmulp
mov
and
test
outsl
roll
insl
cmpsb
ficompl
cmpsb
lahf
ljmp
daa
cmpsb
jmp
cmpsb
push
cmp
outsl
and
mov
pop
dec
ljmp
loopne
or
lcall
fwait
add
mov
pop
shll
inc
jns
into
hlt
roll
adc
xchg
mov
insb
popa
xchg
cld
xchg
icebp
xor
into
xchg
shll
pop
inc
and
push
lea
and
add
xlat
daa
add
les
addr16
div
stc
add
test
fisubrl
lahf
fcompl
ret
dec
push
test
into
iret
fnstenv
pop
or
mov
push
cld
call
pop
les
dec
lcall
and
into
in
stc
notl
loope
jae
je
mov
fldcw
ret
push
push
xchg
mov
dec
int3
shlb
push
xchg
xor
jmp
test
add
dec
fwait
mov
jae
jo
pusha
ds
test
or
xchg
pop
jno
jmp
sbb
rcrl
ret
pop
or
inc
add
adc
sbb
xchg
sbb
pop
fwait
hlt
jns
scas
dec
ss
sbbb
mov
gs
into
push
aas
jl
jbe
sub
cmc
stos
ret
adc
pop
dec
push
adc
fiaddl
adc
arpl
call
jbe
push
dec
insl
jle
test
ret
and
sbbb
adcb
es
xor
jnp
repnz
pop
sbbl
fs
popf
cmp
cltd
inc
or
cli
cmp
fisttpl
test
sub
cmc
pop
dec
and
push
in
aaa
cmp
data16
cmc
repz
mov
in
jp
adc
xchg
xchg
mov
xchg
test
sahf
lahf
stos
and
and
push
lahf
test
or
pusha
jb
les
out
ds
xor
and
jmp
outsl
sarl
xor
pop
or
xchg
or
inc
int3
cs
xchg
shrl
mov
lea
subb
inc
mov
dec
mov
jo
movsb
lock
add
inc
ret
ss
loope
push
jl
fcom
and
fwait
inc
mov
movsl
sbb
cwtl
int
mov
bound
sti
push
and
pop
mov
jb
mov
mov
push
jmp
daa
jno
in
and
ret
jns
xor
jne
sbb
adc
fdivp
call
pop
insb
lahf
add
or
dec
loopne
jecxz
push
es
mov
mov
stos
cltd
xor
sbb
xchg
aam
and
loop
cwtl
pop
push
pcmpgtb
arpl
cmp
mov
shrb
arpl
adc
sub
stos
cltd
mov
jge
add
and
btr
stc
dec
lcall
xchg
mov
inc
sbb
mov
arpl
push
jno
pop
jb
enter
andb
imul
jp
lcall
ljmp
add
add
js
fbstp
in
pop
mov
dec
or
xchg
mov
inc
rolb
arpl
popf
mov
fmuls
inc
js
jecxz
divb
bound
push
pop
push
sbb
mov
pop
jns
adc
ret
clc
roll
int3
pop
pop
scas
in
pop
xor
sbb
cmp
pop
cwtl
cmp
push
mov
fsubl
sub
mov
repnz
addb
cwtl
xchg
hlt
pop
jnp
mov
movhps
sbb
cmp
mov
xor
pop
sbb
sbb
mov
rclb
fdivrs
add
add
or
xchg
adc
lods
adc
cmp
jp
sbb
loopne
mov
out
push
leave
push
add
inc
mov
xchg
fcompl
pop
scas
cwtl
sahf
loopne
scas
dec
ds
lahf
in
stos
mov
inc
call
sub
outsb
test
lret
in
jae
fcmovbe
popa
cmpsb
imul
movsl
cs
cltd
push
dec
shll
pop
int3
pop
jecxz
or
mov
sbb
mov
cltd
scas
pop
sub
inc
push
mov
les
xchg
stc
jns
xor
and
mov
ret
movsl
pop
std
sbb
adc
pop
andl
lcall
pop
test
push
and
fcompl
or
push
push
mov
fldt
cmp
sub
xor
sbb
dec
sbb
stos
dec
dec
hlt
mov
jns
xor
imul
adc
dec
test
inc
inc
add
fwait
call
xor
js
testb
clc
lcall
daa
stc
cmp
mov
popf
xchg
jge
cmp
mov
sub
sbb
cmp
or
dec
mov
pop
mov
mov
add
adc
pop
sti
and
ds
leave
sbb
movsl
bound
lret
daa
jbe
mov
cmpsl
in
dec
dec
xor
xchg
shll
int3
cmc
out
xchg
xchg
pop
daa
cmp
mov
mov
icebp
mov
cli
fwait
int
xor
lret
add
inc
sti
orl
jmp
xchg
pop
pop
mov
xchg
mov
push
scas
scas
fnstcw
mov
mov
bnd
leave
out
mov
dec
cwtl
jno
cld
negb
lea
add
ret
cmp
xchg
iret
inc
inc
aaa
mov
or
dec
jns
dec
stos
jne
push
or
dec
mov
lcall
push
sbb
sub
addr16
add
pop
divl
ret
cmp
sub
adc
push
fwait
fwait
jmp
mov
incb
icebp
jle
or
xor
les
dec
test
inc
or
mov
jp
jbe
lea
fdivrs
mov
pop
sub
js
fsts
dec
push
jbe
lock
int3
lock
mov
xor
sub
jns
adc
rolb
cmpsl
ss
ret
fdivl
bound
pop
clc
jno
pushf
or
dec
ja
es
inc
pop
add
sbb
imul
or
push
add
jo
cmp
scas
and
pop
repnz
iret
sbb
jp
mov
test
mov
rorb
lcall
sbb
out
pop
repz
cs
xor
pop
std
jo
in
xor
stos
mov
lahf
sub
pushf
pop
int
ljmp
push
jbe
pusha
mov
or
mov
arpl
inc
mov
or
inc
dec
pop
xchg
shll
mov
xchg
push
pop
push
pop
adc
add
mov
dec
pop
fs
sub
and
mov
les
add
cmp
shll
inc
test
jne
cmp
std
out
or
cltd
push
in
scas
and
dec
xor
test
adc
jmp
mov
add
dec
insl
fwait
pop
adc
cmpsb
pop
mov
push
test
in
sub
loope
xchg
dec
mov
cmpsb
adc
mov
js
mov
inc
outsl
dec
lods
xchg
dec
in
int3
popa
xchg
xlat
fists
adc
sahf
iret
xlat
fists
and
mov
repnz
jl
popa
push
dec
cwtl
xorb
pop
inc
mov
popl
daa
into
push
add
add
out
push
or
jns
adc
mov
push
adc
daa
in
push
mov
or
or
aam
dec
lds
nop
inc
loop
cli
xor
data16
or
add
jae
pop
mov
and
fiadds
add
sub
cld
call
leave
into
cmp
push
add
and
dec
jns
scas
in
jmp
sub
or
mov
ljmp
fbstp
cmp
lahf
xchg
insl
mov
daa
fcompl
push
lcall
inc
jno
insl
out
mov
mov
sub
sbb
mov
movsb
pop
btc
testl
jecxz
jnp
xchg
xor
mov
adc
pop
cli
pop
repz
xchg
gs
mov
pop
mov
ss
inc
push
sub
test
ja
lret
sub
hlt
or
xlat
mov
inc
mov
lods
add
inc
mov
xor
or
int
xchg
xchg
popa
scas
addr16
inc
or
loope
icebp
fdiv
pop
loope
mov
dec
sub
adc
dec
gs
and
xchg
mov
rclb
add
xor
mov
clc
jecxz
pop
pop
stos
sbb
aad
add
push
and
push
pushf
ss
je
inc
or
mov
pushf
mov
repz
xchg
cmp
je
addr16
nop
daa
addr16
pop
bound
in
add
ss
xor
inc
in
xchg
xlat
aad
push
xchg
jno
or
push
xor
mov
lds
dec
cmp
push
jg
stc
in
sbb
fs
or
xchg
add
loop
sti
cmp
in
aam
push
push
daa
addr16
push
outsb
ds
stos
in
phsubd
pop
mov
mov
xor
push
and
int3
xchg
test
push
mov
js
mov
mov
mov
aad
addr16
js
xchg
xlat
mov
push
or
cmpsl
mov
pop
and
mov
std
aas
dec
lea
addr16
stc
dec
mov
enter
mov
push
data16
out
and
ljmp
or
es
outsl
xchg
insb
jb
lahf
stos
lods
mov
enter
mov
daa
jp
loop
add
cld
repnz
jge
popf
mov
fwait
push
cmp
and
outsl
lret
hlt
pop
loopne
jbe
and
lods
test
push
test
fcmovbe
imul
mov
imul
fwait
jl
pushf
in
jno
adcl
mov
adc
bound
pop
sarl
or
aas
mov
lret
cmpsb
ss
add
push
mov
or
popf
xchg
sub
pusha
test
out
and
pushf
cmp
xor
mov
sub
jae
mov
in
adc
lcall
inc
cmp
pop
fsts
pop
es
pop
and
add
mov
pop
scas
sub
adc
adc
sub
push
fists
orl
pop
mov
xor
sbb
pop
lds
and
mov
add
into
nop
dec
sarb
mov
add
dec
or
gs
and
stos
int3
inc
xorb
push
dec
inc
ffreep
pop
dec
jno
xchg
and
insl
lods
push
cmp
jg
leave
lock
fsubrs
lock
pop
mov
pminsw
sub
daa
sbb
sbb
mov
rcrb
and
inc
clc
mov
sbb
add
stos
push
jnp
insl
and
add
xchg
sbb
imul
adc
pushf
or
sarb
mov
mov
cltd
add
je
pop
cmp
xor
lods
aam
inc
loope
pushf
xor
fidivl
addr16
stos
xlat
mov
pusha
loop
cs
xchg
clc
push
inc
movsl
stos
pop
pop
xor
jne
xor
and
sub
inc
pusha
movsl
shll
loop
jmp
mov
dec
arpl
inc
pushf
mov
push
push
add
inc
push
and
add
lret
fisttpl
movsb
push
mov
or
push
int
jg
arpl
out
mov
mov
out
push
das
mov
adc
test
daa
fidivl
loopne
push
jnp
and
inc
dec
fwait
ja
adc
cmp
call
or
push
fisttpll
rcll
jb
scas
inc
js
sbb
xor
call
jmp
rclb
pop
data16
addb
divl
das
sub
sub
sub
jb
aam
and
and
fsubl
sbb
dec
fucomi
jmp
cmc
xchg
imul
pop
sub
sub
jecxz
int
adc
stos
mov
sub
or
fstpt
fsubs
xchg
in
jnp
ret
fnstcw
jb
mov
idivb
add
inc
testl
push
inc
out
mov
push
xor
data16
add
xor
out
push
mov
sbb
xchg
sti
lret
lahf
lock
fistl
mov
cmpsl
ret
insb
insl
and
xor
adc
iret
outsb
push
enter
xchg
and
mov
push
popa
ljmp
movsb
mov
mov
adc
pop
jmp
cld
and
xchg
push
or
into
mov
pop
inc
jp
out
andl
mov
xchg
inc
jae
dec
xor
cs
xor
int3
gs
leave
sbb
ret
mov
jg
insl
fildl
lock
jb
div
adc
lods
add
mov
into
mov
fwait
mov
lds
pop
sbb
ret
jecxz
lods
adc
cld
pushf
lahf
ja
push
test
jbe
mov
aam
dec
ret
sub
in
and
jmp
dec
lock
addr16
cmp
mov
sub
fisubrl
adc
cmp
add
incb
mov
mov
ds
bound
xchg
addl
aad
ds
jne
ds
cmpsl
push
jne
pop
lods
mov
aaa
xor
xchg
sahf
jo
xor
cmp
subl
je
mov
out
cli
jnp,pn
sbbl
test
lret
sbb
and
xor
out
cmp
rcl
push
or
sub
push
icebp
imul
das
pop
imul
iret
adc
dec
fs
mov
sbb
aaa
test
mov
or
imul
xor
int3
jne
mov
cmp
push
cmp
nop
mov
fnstenv
push
cmp
stc
cwtl
mov
mov
divb
ja
mov
push
dec
mov
cmp
test
scas
dec
sub
flds
mov
loop
push
stos
subl
ret
rcrl
imul
loopne
ss
jg
cltd
divb
adc
test
int
sti
mov
pop
push
fnstenv
or
cmpsl
xor
sub
cmp
lret
push
mov
and
xchg
subb
loop
pop
jo
inc
ret
cmp
pop
leave
stc
dec
je
cli
sbb
lret
arpl
imul
push
insl
push
data16
aam
lods
add
jb
movl
pand
cltd
in
rcrb
mov
rcrl
or
lcall
or
mov
aam
flds
push
dec
fs
adc
lods
daa
jnp
mov
mov
int3
jge
xchg
or
daa
js
rcrb
loope
js
aas
or
das
mov
rorb
fcmove
mov
dec
in
orb
insl
jmp
sub
add
pop
pop
pop
or
leave
cmp
cld
push
loop
mov
aaa
inc
daa
lret
push
rorb
cmpsb
es
clc
ja
fists
out
insb
in
fsubrs
mov
imul
jne
ss
push
xor
testb
enter
adc
lock
mov
xlat
das
sbb
ja
cmp
test
les
xor
ja
xlat
cwtl
push
aaa
test
and
imul
add
xor
mov
nop
fisubrl
fildll
loop
aam
cwtl
adc
or
es
sub
jg
cltd
or
sub
inc
je
sbb
mov
hlt
sbb
loop
addl
adc
sbb
ret
pusha
hlt
test
mov
adc
jnp
push
jnp
inc
inc
cmp
jno
mov
mov
or
icebp
or
addb
inc
pop
imul
jnp
sbb
fldenv
flds
pop
ret
fs
fidivl
push
dec
sarb
adc
xchg
jns
pop
cmp
pusha
pop
xor
hlt
sub
rcrl
xchg
iret
lds
jbe
adc
cs
xchg
sub
push
aaa
mov
inc
cli
mov
imul
mov
enter
ret
bound
mov
sti
in
adc
scas
out
out
popf
jg
cli
xor
fwait
dec
cmp
fistps
adc
xacquire
out
movsl
ret
and
aad
push
and
and
adc
xchg
imul
mov
inc
xor
inc
js
inc
xchg
repnz
test
scas
mov
xlat
add
xchg
data16
out
in
repnz
aam
fwait
xchg
testl
add
inc
popa
mov
stos
mov
inc
sbb
xchg
loop
mov
push
sbb
sub
pop
or
cli
and
imul
or
push
movsb
and
pop
pop
xchg
adc
inc
mov
lret
sub
frstor
fs
mov
les
xchg
dec
insb
jae
pop
imul
or
and
fsubrp
das
in
xchg
int
mov
push
jg
inc
out
sahf
cmp
dec
ret
mov
test
cmpsl
mov
push
jle
jbe
out
add
and
jecxz
imul
sbb
jg
scas
mov
cmp
mov
dec
idivb
out
add
cld
push
ret
sbb
ja
mov
vpsrad
xchg
add
inc
dec
jbe
push
inc
jl
xor
dec
mov
sub
xlat
inc
fidivs
lock
inc
jns
mov
add
jae
stc
test
xor
jmp
sbb
dec
sbb
jae
gs
sahf
fstpl
xchg
fs
int3
mov
inc
idivl
aas
rcll
and
jb
xor
jo
pop
dec
mov
add
into
xchg
cltd
xor
jo
pushf
cwtl
mov
aaa
jae
pop
push
push
icebp
add
inc
jne
in
inc
iret
sub
lret
sub
aam
aaa
nop
testb
push
aam
out
int
mov
mov
imul
xchg
adcl
or
mov
xchg
lret
mov
or
mov
xchg
jae
xchg
inc
jns
sarb
push
insl
sub
mov
movsb
incb
into
pop
dec
dec
cmpl
jp
out
xchg
adcb
data16
lods
xchg
add
cmp
dec
adc
data16
negl
and
mov
sbb
pushf
jo
ljmp
test
dec
lret
mov
or
mov
jno
pop
sarl
sahf
sub
and
pop
push
imul
movsl
mov
nop
shll
je
lcall
sbb
dec
cmp
xchg
mov
sbb
push
jl
in
popa
stc
or
pop
or
pushl
fmull
clc
push
jecxz
pop
testb
jge
pop
mov
adc
fwait
xchg
sub
popa
call
jnp
push
lods
pusha
sub
adc
xor
jns
mov
lds
dec
test
clc
jg
int3
shr
aas
sub
in
icebp
jp
jb
sbb
je
dec
xor
or
mov
jne
mov
dec
mov
xor
notl
cmc
insl
dec
pop
pop
js
int3
or
lret
sub
xor
xchg
stc
das
xor
lods
in
pushf
js
mov
imul
or
push
push
sbb
jge
aas
mov
cmpsb
fstps
int3
sub
daa
pop
fsubr
push
dec
or
sub
inc
lcall
leave
in
adc
out
out
adc
cmc
out
out
adc
add
xor
sub
testl
adc
loopne
test
jnp
je
jecxz
push
mov
repnz
std
outsl
repz
ja
push
iret
pop
mov
push
or
inc
inc
jbe
int
ret
xchg
inc
cmp
sbb
inc
mov
fcoms
je
or
or
adc
scas
adc
andl
in
mov
aaa
xchg
cmpsl
push
ja
aaa
mov
mov
stos
adc
xchg
sar
or
cmp
add
lods
popf
cld
xchg
fcmovnbe
fnsave
xor
cmp
xchg
jl
jmp
lds
inc
lret
fimuls
scas
sbb
movsb
pop
sahf
add
mov
jle
mov
ficoml
gs
sub
dec
fldcw
jge
pop
lods
xchg
mov
pop
das
ljmp
or
and
out
or
hlt
mov
or
jmp
jnp
data16
push
ret
jns
lahf
aas
lahf
mov
lock
testb
hlt
push
in
mov
push
xchg
ret
lcall
pop
push
inc
inc
fldcw
pop
in
lock
mov
mov
jbe
dec
in
dec
std
inc
sub
push
push
sub
pop
and
jmp
mov
push
ret
lret
orl
xor
and
mov
cmp
adc
mov
call
cld
nop
mov
and
ja
aaa
in
xchg
sar
aad
cwtl
out
sti
dec
and
jge
cs
mov
je
mov
jle
ja
lods
stos
xor
pushf
movsb
dec
test
sub
lods
loopne
mov
xchg
aam
cmp
mov
xchg
daa
shl
lods
adc
pop
lods
ljmp
movsl
lods
dec
faddl
arpl
inc
mov
xchg
pop
pop
test
pop
rcrb
cs
test
push
pusha
mov
mov
out
push
dec
mov
cld
dec
pop
add
andb
mov
clc
sbbb
pop
mov
mov
push
movsl
imul
dec
mov
out
xorl
push
adc
cmp
dec
cli
sti
or
aas
daa
inc
add
cmp
jl
gs
dec
mov
xchg
jle
xlat
cmp
push
test
cmp
inc
ficompl
dec
and
or
sti
fistl
outsb
mov
lea
add
lds
push
mov
adc
ja
pop
xchg
cmp
push
sub
mov
shlb
cmp
in
mov
push
fisubrs
xchg
js
xchg
jge
and
or
or
push
inc
shrl
mov
xchg
pop
out
ja
add
jge
adc
testb
mov
mov
sbb
lahf
sbb
loop
mov
or
cmp
andb
jge
cmp
jae
lcall
iret
cmp
inc
inc
inc
mov
add
popa
rcrl
and
mov
mov
xchg
cli
ja
popf
xor
lret
addl
or
xchg
xchg
mov
sub
aad
dec
cli
sub
ret
push
fwait
call
xor
dec
imul
or
sbb
mov
lods
cli
dec
repnz
and
add
sarb
sahf
sub
and
mov
outsb
jns
lea
fcoms
ror
push
add
and
inc
fstpl
icebp
dec
test
pop
push
insb
sub
rclb
mov
lds
or
add
cmp
dec
fs
iret
push
sarb
imul
aaa
inc
mov
mov
into
mov
enter
lock
mov
lods
rcll
cli
push
pop
std
or
jns
out
jo
push
pop
cld
das
in
mov
mov
into
add
xchg
push
push
cmovl
clc
lret
add
and
in
test
sbbl
push
mov
mov
dec
jecxz
inc
or
sub
push
fisubrl
cmp
cmpsb
jl
sbb
dec
call
icebp
in
cmp
incl
dec
out
repz
ja
std
mov
inc
xor
xor
in
pop
push
movsl
adc
arpl
popf
push
push
decl
add
cli
ror
ficompl
or
mov
cmc
adc
aam
fimull
cmp
mov
ret
inc
add
cltd
ss
dec
pop
outsl
inc
dec
dec
add
push
movsl
enter
les
test
fiaddl
ds
fistps
mov
mov
out
adc
pop
adc
cs
mov
sahf
repz
xchg
cmpsb
movsb
mov
mov
mov
mov
mov
push
sbb
enter
or
sub
flds
popa
lods
xor
shrb
jns,pn
loop
dec
arpl
jo
fimuls
aas
push
popa
aad
push
jecxz
dec
or
stos
adc
adc
dec
pop
icebp
int
push
sbbb
or
or
dec
or
xchg
stos
xor
mov
std
aas
xor
scas
cmpsb
mov
insl
xor
clc
and
scas
hlt
xor
decl
insb
jo
jmp
xor
sub
ljmp
pop
in
pusha
insl
bound
cmpsl
movsb
jl
frstor
cmpsl
xor
test
lock
jp
leave
ja
add
mov
adcl
je
ljmp
cmp
add
lahf
gs
push
sub
mov
mov
fwait
cmp
mov
movsl
xchg
lods
mov
xor
xchg
js
mov
lds
repnz
inc
sbb
jb
lods
ljmp
out
push
loop
mov
jle
mov
sti
xchg
stc
fldl
movsb
and
loope
ljmp
rcl
xor
sub
js
pop
lret
fnstenv
mov
test
ds
rorl
inc
sbb
test
rorb
outsl
jg
or
lcall
dec
lcall
scas
xor
dec
adc
out
pop
cmp
ficoml
xchg
decl
and
dec
hlt
push
sub
adc
mov
push
ljmp
pop
sti
push
pop
test
sbb
inc
jne
inc
das
out
pop
popa
into
cmp
and
pop
add
mov
into
dec
jecxz
jl
std
mov
std
sub
add
rcl
das
subl
in
jp
sbb
andb
dec
sub
push
jne
dec
mov
js
xchg
stos
mov
jo
fiadds
add
clc
xor
test
cs
add
scas
sbb
adc
ja
popf
popa
stc
stc
dec
loope
adc
shlb
xlat
inc
xlat
cmp
adc
mov
pusha
je
ret
sub
aaa
push
sub
mov
and
dec
mov
mov
test
jge
hlt
xor
sbb
loop
adc
outsl
xorl
and
push
movsl
pop
push
adc
push
pop
adc
xchg
sub
in
mov
or
and
or
mov
mov
dec
jb
sub
xlat
mov
outsb
and
nop
sbb
sbb
mov
xchg
mov
ljmp
subb
sbb
jbe
or
add
scas
jmp
add
addb
mov
jge
mov
sub
push
dec
xchg
xchg
xchg
push
adc
jae
std
xchg
inc
xchg
sbb
jg
icebp
pop
or
fsubrs
test
cmpsb
jo
mov
mov
scas
mov
mov
lds
xor
sbbl
mov
scas
mov
push
push
xchg
jmp
adc
push
inc
dec
stos
mov
sbbb
rol
iret
jne
cmp
jle
mov
outsl
inc
or
sbb
lods
mov
mov
dec
mov
inc
adc
addr16
loop
fwait
movsl
out
out
rolb
stos
int
or
test
loope
scas
test
sbb
or
pop
jnp
and
loopne
arpl
call
pop
les
jge
adc
sub
xchg
out
les
adc
inc
rolb
testl
dec
fwait
mov
dec
xchg
stos
imul
scas
clc
push
xor
test
aad
mov
std
push
push
adc
hlt
insb
imul
sarl
mov
cmpsl
lret
jle
aaa
int3
andb
loop
push
out
xchg
lret
cwtl
js
popa
adcl
dec
add
movsb
arpl
iret
push
in
sahf
fnstenv
or
inc
xchg
shll
and
adc
adc
iret
mov
dec
call
push
mov
testl
cmp
and
in
cmp
out
jbe
push
addl
inc
push
aas
push
out
stos
adc
leave
and
jl
or
and
mov
mov
ljmp
sbbl
push
cmpsb
and
addb
subb
icebp
leave
or
inc
xchg
repz
push
fsts
jnp
mov
shlb
xor
loope
test
mov
jnp
mov
dec
mov
mov
pop
enter
movsb
pop
sbb
out
add
pop
jl
sub
popf
fcmovu
jnp
stos
xlat
lret
inc
sbb
push
in
pop
mov
int3
inc
negb
addb
lcall
inc
fucomi
mov
or
sarw
out
and
mov
mov
cli
mov
jmp
sub
cli
test
aad
mov
enter
jns
sbb
outsl
pop
xchg
nop
daa
fs
pop
in
xlat
cmovl
pop
ja
out
mov
lret
push
xor
int3
inc
cli
popf
scas
mov
sub
push
xchg
dec
es
pop
fsubrl
push
push
xor
jg
mov
jb
ss
jp
xchg
sbb
fcomps
aad
mov
stos
sbb
fwait
or
leave
pop
jp
xor
mov
faddl
inc
xor
adc
or
enter
sahf
sub
xchg
jmp
jo
aaa
sbb
mov
dec
popa
sub
sbb
insl
daa
cmp
push
sti
nop
bound
pop
inc
movsl
data16
pop
in
movsb
mov
fsubrs
jae
mov
mov
pop
nop
lea
xchg
rcrb
pop
stos
popa
sysexit
add
xchg
out
add
sbb
fdiv
xlat
mov
je
femms
xchg
mov
cmp
nop
push
out
sahf
jge
or
or
pop
cmpsl
sbb
jnp
jmp
jne
jnp
jecxz
or
adc
sub
xchg
add
add
popa
popf
jae
adc
xchg
xor
daa
or
push
or
es
mov
push
fs
mov
dec
mov
mov
rcrl
jno
mov
and
movsb
jge
jb
mov
popa
add
mov
movsl
test
jo
mov
cmp
in
mov
jne
push
ljmp
in
ret
jae
sub
mov
pop
outsb
pop
mov
jo
sub
aam
dec
push
scas
pop
shr
aam
mov
xor
jae
mov
add
mov
rcll
aam
xchg
fcomp
inc
push
imul
mov
repnz
gs
mov
pop
push
flds
mov
or
dec
mov
sbbl
mov
fsubl
jae,pn
jl
mov
adc
icebp
sbb
cmp
mov
mov
mov
repz
adc
stc
jno
jle
or
push
push
dec
add
test
ljmp
xor
repz
dec
daa
ja
idivb
pop
imul
mov
lods
inc
sbb
cmp
or
into
test
mov
mov
sub
inc
mov
hlt
xor
cmp
dec
push
pop
icebp
xchg
and
cld
adc
bound
sbb
xchg
mov
and
icebp
test
sbb
dec
jp
mov
jo
mov
jne
jne
dec
out
and
lahf
lea
mov
mov
rclb
pop
xor
leave
add
das
or
or
xchg
lock
mov
repz
aam
mov
add
mov
pop
sbb
pop
out
dec
imul
mov
xor
push
pop
rol
sub
xor
mov
clc
cmc
push
into
outsl
mov
fwait
sbb
jle
in
or
test
movsb
pop
out
movsb
mov
cmp
pop
mov
jbe
or
push
fsubs
push
in
movsb
je
push
push
hlt
lods
mov
lret
popf
lret
enter
inc
je
loopne
mov
aad
add
adc
pop
sub
xchg
ret
add
stc
inc
clc
in
scas
loop
outsb
dec
cwtl
sbb
imul
push
sahf
pop
ret
mov
cmp
fiaddl
jle
mov
pop
mov
cmp
insl
lret
inc
sub
orl
repnz
bnd
jle
insb
andb
xchg
add
xchg
sub
enter
ret
stos
lock
int
or
xchg
mov
dec
insl
ja
jle
inc
cltd
jl
mov
cltd
add
inc
dec
adc
mov
addr16
lods
pop
jp
mov
jno
imul
jmp
sub
sbb
mov
fs
xor
or
shr
xor
addr16
mov
add
aam
cs
ljmp
jno
jo
and
cwtl
push
clc
aad
stos
inc
dec
or
jmp
imul
mov
stos
pop
sarb
or
dec
stos
addr16
lea
add
lea
test
inc
or
imul
repz
cli
clc
js
ret
cmp
cli
sub
rclb
test
mov
xchg
adc
movnti
and
or
mov
adc
and
sahf
sbb
jle
or
push
int
sub
insb
orl
sbbl
dec
mov
aam
cmpsl
add
data16
aas
loopne
je
clc
jmp
jge
push
popa
and
insb
popa
dec
fsubl
fistpll
inc
scas
dec
xor
mov
sub
aad
in
imul
inc
jns
push
sbb
insl
adc
outsb
ret
inc
call
in
repnz
mov
fsts
sub
insl
sti
add
sub
mov
xorl
dec
jae
loope
je
divb
out
adc
stc
movsb
mov
pop
xor
scas
pop
insb
adc
xorb
xchg
popa
add
pop
fisubrl
cltd
mov
idivb
adc
xor
ficoml
adc
mov
testb
shlb
mov
jno
pop
enter
xchg
pop
jns
leave
dec
call
popf
push
clc
and
les
sub
pushf
lcall
imull
and
jp
lods
mov
ret
and
mov
pusha
test
movsl
push
dec
movsl
add
outsb
or
imul
orl
leave
mov
mov
dec
sub
mov
and
jne
mov
leave
jmp
ret
xchg
jg
iret
add
sahf
loop
ret
ret
inc
xchg
popf
shr
mov
sub
mov
jl
inc
xchg
test
mov
out
clc
mov
stc
data16
test
jmp
data16
subl
push
sbb
mov
sbb
mov
imul
shlb
das
mov
xor
cltd
hlt
xchg
negb
and
xchg
xor
sbb
push
shl
scas
push
arpl
cmp
popa
and
sti
addb
ja
xchg
in
fdiv
push
push
mov
es
aas
lods
sub
mov
movsl
sbb
popf
add
les
inc
or
adc
lcall
jl
enter
xor
sub
out
sbb
into
and
jmp
xchg
xor
xor
xchg
xor
xlat
push
cmp
aad
inc
add
mov
dec
movsl
cmp
dec
jmp
and
scas
jge
jge
mov
fsin
sbb
mov
and
mov
cli
sbb
mov
xchg
outsb
mov
inc
fistl
push
jl
or
dec
sub
xchg
int
or
mov
adcb
clc
cli
and
lret
loope
mov
cmp
push
push
in
mov
mov
xlat
idivl
scas
sbb
sbb
decl
out
push
sub
nop
add
clc
mov
lret
int3
out
dec
imull
popf
jae
xchg
int3
test
adc
ss
pop
jbe
lods
pop
or
dec
cmovno
sub
lods
cmpsl
dec
andb
inc
and
cmp
or
dec
daa
jp
mov
inc
mov
frstor
movsb
fistpl
out
movsl
jecxz
pop
in
fists
dec
inc
xor
xor
jbe
ja
and
adc
inc
cmp
aaa
test
cmpsb
cmp
jp
out
shrl
push
inc
jecxz
aad
or
cli
mov
lods
adc
jno
cmpsl
iret
cmp
mov
in
mov
lahf
out
inc
sub
inc
add
or
iret
jecxz
and
bound
xchg
jbe
mov
movsl
ljmp
jbe
lcall
sub
das
imul
js
inc
mov
pop
sbb
leave
xchg
dec
mov
sbb
dec
xor
insl
inc
dec
xor
sub
scas
das
shl
xchg
addr16
aas
stc
loopne
sub
inc
addr16
sti
push
pusha
add
hlt
push
hlt
mov
fidivs
sub
cs
aaa
inc
xchg
sbb
cmp
xor
scas
hlt
jbe
xor
scas
dec
stc
mov
sub
push
lods
jae
inc
outsl
inc
movsl
push
xchg
insb
inc
out
add
loope
js
lahf
into
orb
sbb
mov
in
and
or
lea
adc
dec
sub
dec
mov
pop
das
and
add
and
push
xchg
je
loopne
cmp
push
xchg
sub
pop
xlat
mov
adc
sbb
xchg
mov
push
xor
scas
inc
insb
fildll
mov
movsb
xor
push
test
mov
stos
jp
jns
xor
jo
mov
push
imul
sub
and
pop
push
mov
inc
add
or
inc
jne
insb
cmc
xchg
push
cmpsl
lcall
fisttpl
aam
or
cmp
and
mov
stc
dec
jno
xchg
sub
pop
cmp
and
in
lock
fmul
push
call
test
dec
push
and
ja
dec
mov
mov
add
lods
sbb
in
je
cwtl
out
loopne
icebp
clc
js
xchg
test
ret
hlt
jp
mov
jo
and
add
dec
lcall
das
ror
jle
jae
jnp
daa
mov
hlt
push
adc
imul
test
add
out
or
pop
or
mov
in
lock
js
in
dec
cmpsb
mov
push
push
add
js
shl
int3
jle
inc
cmovnp
int3
cmpb
testl
lock
mov
dec
test
dec
push
cmpsl
pop
movsl
mov
movsl
sbb
push
dec
ret
jl
lds
lahf
in
out
sub
push
dec
xchg
xor
xchg
or
pushf
insb
out
loop
clc
sbb
pop
jae
and
sub
add
and
mov
loope
or
pusha
cmp
sub
out
add
jge
dec
xchg
ret
insl
lret
mov
sti
inc
jmp
in
flds
dec
mov
jb,pn
jo
dec
js
pop
jno
in
jl
popl
repnz
repnz
push
icebp
jl
jmp
repnz
rcr
inc
sti
je
cmc
loopne
call
scas
pop
lods
dec
rcrb
mov
addr16
jmp
notb
xor
fldt
pop
dec
jbe
call
in
mov
add
loopne
xchg
into
pop
data16
cs
cwtl
test
pop
dec
out
sub
add
jne
push
inc
xchg
lds
and
cld
idivl
mov
repz
jno
mov
mov
xor
scas
jo
sub
cmc
pushf
mov
in
mov
int3
mov
leave
arpl
mov
leave
pusha
icebp
jmp
lock
idivl
jo
xor
jns
xchg
pop
mov
jo
mov
xorl
cmpsl
sub
arpl
lea
mov
or
lret
or
mov
shl
cmp
pop
jle
push
mov
cwtl
adc
insl
sti
and
in
sub
in
pop
pop
cmpsl
inc
andl
xchg
jno
or
sbb
cs
adc
lret
sub
iret
jle
push
subb
mov
push
mov
jg
pop
sub
mov
push
and
mov
cmp
xor
icebp
mov
pop
in
mov
jle
gs
cmpsl
data16
mov
and
ljmpw
cwtl
adc
add
cld
add
scas
negl
fwait
and
js
push
fcoml
enter
pushf
lcall
fisttps
mov
sti
xlat
xor
hlt
mov
test
fsubs
inc
orb
outsb
mov
in
cmp
lds
jge
dec
cwtl
movsb
icebp
les
pop
add
xchg
dec
push
shl
adc
or
mov
or
mov
push
notb
xchg
outsl
and
xchg
jnp
pop
add
jbe
cmp
adc
lds
scas
lahf
mov
call
cmp
subl
push
or
add
mov
mov
push
or
add
jae
sbb
jle
mov
mov
mov
fdiv
sbb
cmp
sbb
push
mov
sbb
sub
mov
sahf
inc
xadd
mov
shrb
popa
mov
pop
clc
xchg
imul
je
or
sub
out
out
pop
push
xchg
jbe
in
sbb
addb
enter
or
in
mov
xchg
incb
fmuls
in
mov
icebp
inc
mov
mov
jge
fs
sbb
cmc
dec
add
jecxz
push
out
cltd
enterw
rol
or
je
mov
ret
or
lods
movsb
aad
jno
mov
dec
cltd
sbb
sahf
test
nop
popa
ljmp
dec
xlat
dec
lret
adc
adc
or
adc
dec
fistpll
or
adc
clc
fwait
push
adc
out
fadd
sbb
pop
mov
sub
mov
pusha
mov
mov
cmp
rorl
in
aam
pop
xor
bound
add
cmpsl
negl
push
add
and
mov
dec
pop
mov
inc
jmp
das
mov
addl
outsl
stos
loopne
ja
jno
jp
and
aam
push
xchg
jae
mov
jmp
dec
imulb
popf
and
gs
sub
push
imul
or
xor
aas
cmp
js
cmp
outsb
sbb
sbb
ds
cmc
sbb
out
sbb
cmp
aam
cli
mov
adc
and
ljmp
jmp
cwtl
insl
mov
js
mov
movsb
and
fistpl
mov
xchg
sbb
int
xchg
pop
popf
mov
test
mov
mov
xchg
pop
mov
jae
inc
mov
ret
mov
nop
inc
and
out
daa
out
daa
imul
pop
xchg
push
ja
inc
and
cmpsl
arpl
sub
js
jmp
cmp
xor
cs
add
adc
dec
mov
jnp
pop
add
daa
vmptrst
lret
xorb
xchg
sbb
call
frstor
icebp
sbb
sub
push
mov
add
cli
dec
popf
aad
das
push
and
fdivs
out
lcall
mov
ret
push
cwtl
and
xchg
jg
jg
cmp
std
lea
sub
lock
fucomi
call
and
jecxz
es
in
int
mov
adc
jns
pushf
sbb
mov
mov
pop
cmp
inc
jo
jmp
aas
out
cmc
mov
icebp
push
insl
fcmovne
loop
lret
jg
mov
inc
cmpsl
and
rcrb
adc
stc
jbe
inc
cmp
push
mov
dec
and
pop
mov
fisubs
and
inc
pop
out
fisubrs
jmp
sbb
arpl
inc
add
sbb
test
pmaxub
out
gs
mov
in
call
out
push
movsb
gs
xchg
pusha
or
sub
push
pop
xor
and
push
ficomps
subl
iret
loope
sub
repz
sub
add
icebp
pop
outsb
mov
scas
mov
rcl
cmc
cli
or
jae
mov
daa
loop
in
shrb
outsb
outsl
jp
fisubl
xchg
into
clc
fildll
pop
dec
xor
cmpsb
aad
push
sub
cmpl
call
sbb
subl
sbb
xchg
lods
xor
mov
pusha
pop
sbb
inc
pop
pop
add
cmpb
push
mov
test
mov
push
jmp
loopne
pusha
jg
enter
aaa
xchg
xor
nop
aaa
je
ljmp
out
test
sbbl
sub
cmpsb
and
pop
xchg
mov
adc
rclb
repnz
sub
xchg
mov
push
jecxz
inc
cmp
jno
push
sub
and
loop
into
xor
push
mov
adc
mov
subl
sbb
inc
insb
test
repnz
test
fwait
in
and
ret
ret
sub
int3
push
add
sbb
sbb
xor
lock
repz
lods
pop
imul
repz
dec
test
fidivrl
ror
mov
adc
fnstsw
jg
adc
push
and
in
adc
or
test
shrb
add
js
out
push
imul
lds
lahf
mov
icebp
fidivrl
and
cwtl
and
and
hlt
mov
fsubs
ja
inc
rcrl
rcll
adc
inc
pop
push
xchg
hlt
xor
scas
sbb
cli
or
outsb
mov
loope
mov
add
les
stos
sbb
pop
nop
push
xchg
fmuls
add
imul
cmova
daa
outsl
lock
stc
push
cmp
sti
jo
arpl
ljmp
insl
sbb
lods
iret
mov
mov
mov
xchg
bound
add
mov
movsl
xor
jmp
inc
sbb
inc
popa
push
les
mov
sub
adcl
inc
ss
or
mov
in
std
or
enter
xchg
mov
fwait
xor
ret
je
mulb
cli
dec
cmp
imul
int3
insl
jle
scas
shll
pop
into
add
xor
test
mov
push
adc
call
cli
adc
leave
jmp
mov
out
pop
or
jl
icebp
pop
mov
sub
in
mov
cli
adc
pop
imul
out
movb
xchg
pop
xor
je
mov
daa
fs
mov
jmp
mov
jmp
jne
scas
and
test
or
imul
sti
lods
addr16
adc
or
loopne
push
xor
stc
mov
sbb
mov
js
repnz
cmp
xchg
out
fldenv
sbb
sbb
inc
pop
push
repz
and
fldl
in
stc
imul
unpckhps
mov
jnp
mov
jp
or
idivb
jae
xchg
jae
gs
xchg
cld
lds
add
pop
jne
shll
pusha
ljmp
push
shll
into
add
aad
fiaddl
hlt
adc
insb
leave
pop
in
xor
inc
imull
mov
out
push
xor
inc
lcall
inc
dec
push
cmpsl
jno
mov
push
add
mov
daa
xchg
sub
pusha
fcoml
push
test
adc
sub
or
orl
popf
jb
and
into
lcall
lock
add
sbb
arpl
mov
or
js
shrb
cmp
adc
pop
dec
adc
lds
in
mov
pop
pop
pusha
inc
shll
jecxz
xor
sub
sub
push
adc
jmp
mov
in
call
imul
pop
inc
scas
xorb
shlb
sbb
stos
inc
adc
jno
and
and
bnd
sbb
pop
lods
mov
sbbl
test
mov
lret
je
jl
mov
sbb
inc
add
add
xor
cmp
xchg
jns
push
ja
fdivl
leave
mov
pop
dec
out
xlat
cmp
inc
mov
in
mov
test
cld
ret
inc
adc
scas
test
inc
dec
add
or
pop
ss
fidivs
cmp
or
iret
mov
dec
imul
mov
or
imul
and
dec
jecxz
flds
in
nop
add
pop
sarb
and
ljmp
sbb
add
inc
bound
lret
cmpsl
ret
xor
sbb
arpl
stos
rcr
mov
push
out
inc
jae
test
rorb
mov
xchg
mov
cmpsl
leave
bts
pop
jl
lods
and
stos
push
repnz
hlt
mul
mov
iret
stc
lret
push
fwait
cmp
sbb
pop
mov
jnp
adc
adc
stos
scas
in
lret
xchg
sbb
dec
sarl
arpl
mov
mov
and
scas
psrad
pop
aad
fisttps
lahf
cmp
sbb
dec
jno
mov
sub
xor
sub
fnstenv
inc
iret
add
cmp
jl
loopne
shll
in
cmpsl
test
mov
mov
sbb
mov
push
jg
push
add
and
sub
rcll
fidivl
cli
inc
sbb
add
cmp
pop
lds
and
pop
ret
ret
test
mov
js
xor
pop
popl
jae
insb
xor
sahf
dec
sub
pop
adc
or
or
arpl
cmpsb
or
mov
rol
int3
push
push
adcb
or
ret
pop
ret
pop
push
pusha
aam
mov
sub
and
call
insb
movsb
stos
rcr
push
movsb
jo
ror
inc
int3
out
andb
cmp
push
jl
les
xchg
aaa
mov
out
int3
call
std
mov
and
jmp
in
cmpsl
fwait
and
and
push
aad
dec
and
stc
cmp
xor
fildl
jmp
sub
rorb
sub
lods
into
xor
pop
lcall
mov
mov
pinsrw
jno
repnz
int3
cwtl
mov
xor
fstl
jp
sub
ret
repnz
outsl
push
insl
jp
in
sbb
orb
insl
lods
sbb
cmp
cld
ret
imul
insl
out
mov
ja
fisttps
out
mov
frstor
mov
pop
add
sbb
or
jne
xor
inc
test
and
ja
mov
push
xlat
push
rcrl
or
loopne
dec
xor
insl
inc
insb
addb
inc
jb
push
mov
int3
push
cmp
sbbl
xchg
mov
xor
shll
sub
xchg
adc
inc
cmc
and
push
out
jno
gs
mov
mov
out
mov
js
flds
push
add
lcall
mov
push
and
shrb
cmp
cmp
ja
add
jno
fmul
pmuludq
imul
and
int3
push
push
cltd
sahf
cmp
nop
stos
add
sbb
adc
push
sub
in
fadds
cmpsl
ret
outsb
dec
jecxz
mov
mov
mov
sub
aas
cmp
mov
push
es
pop
cltd
mov
fdivrs
lods
and
pop
jns
sbbb
sbb
es
xchg
clc
mov
adc
pop
cld
out
outsl
repz
xor
das
mov
fsub
aad
push
dec
stc
add
xlat
mov
fadds
adc
jbe
pop
or
cld
cltd
adc
lock
adc
jg
mov
push
inc
in
dec
inc
dec
mov
jg
outsl
out
out
mov
in
mov
loop
rorb
hlt
or
sbb
jno
inc
jg
orb
mov
push
push
fstl
imul
lret
jb
loope
mov
sbb
jb
loop
into
sbb
jae
mov
xchg
imul
mov
ljmp
shll
pop
testb
sbb
inc
negl
gs
sbb
fildll
push
test
adc
enter
mov
adc
aaa
ds
loopne
lret
jecxz
cmp
es
fisttps
lahf
xor
data16
les
and
aaa
mov
dec
jmp
mov
dec
mov
out
mov
push
pushf
add
les
sub
jbe
pop
gs
das
dec
popf
adc
jne
fstpt
xor
mov
lods
fadd
pop
mov
shlb
jnp
subb
mov
push
push
pop
ret
movsl
mov
aas
and
lock
out
pop
xlat
ljmp
popa
xor
pop
pop
fdivs
xchg
push
xor
push
fwait
insb
mov
lret
imul
sti
xchg
out
sti
and
imul
icebp
push
inc
out
pop
rclb
pop
call
sub
gs
add
jb
test
jge
call
enter
popa
and
mov
ret
cld
jp
nop
sbb
xchg
adc
pusha
in
pusha
sar
repnz
daa
stos
fwait
dec
repz
fisttpll
je
mov
cld
jge
pop
ret
aad
jp
popa
lret
lock
lret
je
jge
add
push
aaa
dec
jmp
sbb
push
jl
dec
int3
mov
sbb
enter
push
in
or
cwtl
test
sbb
imul
ja
sbb
movsl
push
movsl
cmpsl
sti
ds
int
jnp
lret
mov
lret
jp
xchg
or
fbld
cltd
stos
pop
cmpsb
push
addb
js
cmp
xchg
ret
push
mov
lret
add
pushf
sbb
inc
out
fimuls
or
mov
hlt
and
inc
pop
sub
js
fstl
es
xchg
mov
inc
xchg
nop
pop
cmpsb
daa
popa
mov
mov
outsl
push
mov
repz
roll
cld
nop
out
or
aas
mov
repz
icebp
jmp
mov
enter
std
jle
hlt
sub
xchg
in
inc
rcl
rcll
jg
mov
xchg
lret
movsb
data16
mov
mov
lods
inc
cs
fdivrs
roll
jns
mov
sub
ret
adc
movsl
dec
sub
mov
stc
xor
out
cmp
xor
push
push
push
mov
add
xor
mov
mov
cltd
lods
add
and
pop
adc
xchg
je
pop
jg
xchg
mov
dec
and
mov
mov
xor
out
push
xor
popf
add
jns
xchg
leave
jle
call
push
xor
sub
shlb
mov
rclb
cltd
dec
jmp
xor
ret
dec
std
data16
mov
out
popf
dec
and
or
jmp
mov
and
cltd
mov
pop
jmp
aam
mov
insl
jo
mov
mov
add
inc
lea
dec
aad
jp
shl
sub
sti
pusha
lods
cli
dec
rcrb
shlb
loopne
sbb
xor
sub
decb
pop
mov
sub
xor
imull
pop
arpl
loopne
out
mov
or
in
les
xchg
xor
pop
sub
filds
in
xchg
dec
jne
pusha
into
jno
movsb
aam
xchg
dec
fwait
xchg
stos
std
jnp
out
push
add
stos
mov
push
xchg
mov
pop
mov
cli
mov
pop
loopne
xor
sti
imul
lcall
repnz
aas
add
xor
fnstsw
fmul
xorl
filds
jns
add
pop
push
add
ja
cmp
push
pop
inc
xchg
repz
cmp
leave
fs
mov
pop
cmpsl
aam
fsub
inc
mov
outsl
scas
jne
fistps
push
jno
push
xchg
dec
idiv
mov
and
or
jl
insb
adc
scas
gs
fld
or
lds
ja
subl
jo
mov
aas
ljmp
pushf
mov
fs
scas
or
mov
mov
pop
jle
add
sub
cmpsb
clc
jg
xchg
sbb
mov
scas
lcall
pop
sbb
faddl
mov
repz
xor
imul
adc
mov
fwait
cmp
cwtl
ret
imul
adc
push
rcll
mov
lret
sub
and
sbb
pop
xchg
shrb
sub
and
or
inc
cwtl
sbb
adc
xchg
adc
xchg
shrb
shll
add
lret
mov
adc
push
and
ja
mov
and
and
pop
rep
jnp
decl
nop
outsl
inc
movsb
loop
mov
and
shll
pop
sub
addb
push
es
push
cmp
sbb
xchg
and
insl
loopne
imul
mov
lods
mov
nop
ret
push
test
fs
rep
adcb
mov
loopew
mov
push
outsl
xlat
daa
or
ja
test
lods
cmp
outsl
or
sbb
lods
mov
mov
add
sub
xor
or
test
lods
add
fmul
js
pop
loopne
pop
jb
test
mov
pusha
mov
mov
stos
mov
jl
fldenv
rolb
aad
inc
cmpsl
sti
adc
xchg
jbe
xor
xchg
pop
hlt
shll
jne
cmp
ja
outsl
xorl
leave
ret
xchg
popa
testl
xor
and
inc
push
dec
insl
dec
inc
les
aad
ja
adc
xchg
pusha
pop
mov
out
xor
mov
mov
dec
mov
ret
mov
jno
jmp
in
out
push
test
popa
dec
sbb
stc
jae
cmp
xlat
pusha
sub
add
insl
mov
fnstcw
push
cmp
flds
mov
jg
orb
xlat
lret
inc
cmp
daa
pop
orl
daa
xchg
pop
fwait
jnp
jbe
xor
xlat
in
iret
mov
add
cmpsb
xor
pusha
xlat
inc
sub
andl
into
movsb
imul
aaa
xchg
stos
pop
and
out
shlb
mov
dec
or
out
loope
xchg
aam
or
pop
xchg
xchg
andl
stos
xchg
inc
add
jnp
lcall
or
jg
jnp
cmpsl
mov
lea
lret
adc
shlb
lock
pop
mov
unpckhps
lods
or
and
stos
sub
push
cld
cmp
lock
pop
lea
and
mov
push
pop
mov
xchg
loop
pop
pop
cltd
loop
mov
push
xchg
es
push
int
out
mov
inc
and
fldz
adc
into
adc
mov
out
mulb
shlb
sub
jae
call
sbb
push
loopne
pop
scas
rcrl
cmp
pop
ret
add
pushf
jo
push
add
pop
push
or
sub
es
stos
cmpsl
fstpl
dec
popf
lds
sbb
xchg
gs
inc
mov
mov
and
popa
arpl
lods
jo
fcmovbe
sarb
in
inc
jae
xlat
push
mov
lds
or
xor
dec
shr
inc
lock
je
xchg
xchg
clc
leave
and
sub
rcr
or
out
movsb
icebp
repz
in
adc
push
rcrb
sahf
and
push
leave
popf
int
fs
repz
xchg
lret
insl
sub
js
pop
push
push
xor
add
movsl
pushf
addb
jae
out
mov
or
aaa
fbstp
incb
jp
xlat
or
sbb
loop
jae
xchg
mov
or
pop
push
fbld
cmp
pushf
mov
std
pop
mov
and
and
sbb
adc
in
or
pop
mov
mov
pushf
xchg
cmp
inc
dec
sbb
and
xchg
int
dec
call
mov
test
iret
out
fstl
fimull
push
push
ror
push
insl
out
lcall
push
jge
pushf
xchg
dec
cmovge
xchg
push
pop
rcll
adc
and
cs
or
push
lock
out
xchg
popf
inc
dec
push
xor
stos
xor
pop
call
adc
push
xor
movsb
hlt
sar
je
insb
or
sbb
or
fidivrl
xchg
subl
mov
lahf
or
mov
inc
push
xor
fs
lds
pop
dec
add
jge
pop
mov
lds
out
jae
in
mov
jbe
cmp
push
xchg
dec
mov
mov
stos
mov
or
xor
or
adc
xor
jle
psrlw
pop
popa
lahf
fistpl
jecxz
and
in
mov
adc
add
sbb
sbb
mov
outsb
mov
xor
pop
jg
or
xor
dec
sti
repnz
xchg
scas
insl
pop
xchg
and
pop
icebp
cmp
jbe
fistl
xor
ja
sahf
shrb
cs
xchg
jg
lcallw
dec
adc
dec
jge
mov
movsl
dec
stos
pop
sub
lea
pop
mov
sub
cmp
movsl
sub
loop
aaa
lods
xchg
movsb
jle
sbb
sbb
xor
pop
fwait
or
aam
arpl
testl
sub
push
push
or
cmc
push
jmp
mov
push
ljmp
xchg
hlt
adc
insl
popf
int
int3
fdivrl
fnsave
je
jae
adc
nop
stos
sbbl
decl
daa
mov
inc
adc
ret
ret
pop
inc
pop
sbb
sbb
popf
je
jae
in
sbbb
imul
fistps
lret
mov
ja
idivb
push
mov
mov
test
js
stos
mov
xchg
mov
lock
cmp
sbb
cwtl
or
es
fimull
loope
cmp
mov
add
mov
in
loopne
cli
mov
insl
adc
push
cmp
mov
enter
decl
mov
out
gs
mov
pop
out
mov
lods
dec
inc
loopne
inc
push
icebp
js
int3
pop
mov
and
data16
push
xor
inc
jo
aas
lock
stos
jns
jb
orb
jns
mov
fcompl
cwtl
cld
bound
aaa
cmp
sub
es
xor
add
inc
cmp
sbb
mov
xchg
xchg
ficompl
pop
jg
int
jo
push
xchg
dec
cmpsl
popa
ss
push
mov
mov
pop
shll
ret
dec
daa
loope
outsl
std
mov
lea
push
mov
push
mov
dec
mov
mov
jo
aad
xor
repz
and
stc
dec
lret
rcrb
pop
mov
xlat
arpl
popa
lods
push
les
jmp
jmp
movsb
or
cltd
push
vpsrlw
add
into
sarl
int
mov
and
popl
jae
xor
jo
push
outsb
outsb
xor
bound
inc
lret
mov
in
push
leave
pop
cltd
les
and
and
popf
jp
int3
cwtl
imul
add
insl
cmp
cmp
add
xchg
cmpsl
cmp
rolb
mov
outsl
outsl
cmp
test
push
pushf
sub
jae
scas
xor
adc
lea
test
xorb
fstl
cmp
inc
mov
imull
mov
pop
cli
jl
ret
movb
imul
sahf
es
pusha
shlb
fs
ret
mov
adc
rorl
inc
insb
dec
mov
xchg
cwtl
mov
cwtl
mov
pop
in
flds
loopne
mov
and
push
mov
ljmp
cmp
inc
ret
rorb
jle
das
add
movsb
sub
push
cmc
add
in
test
jmp
pusha
jne
movsb
fsubs
repnz
or
xor
or
adc
jg
test
loopne
arpl
mov
mov
js
inc
or
mull
cmp
add
scas
mov
sub
mov
out
sti
jnp
add
lods
pop
decl
and
and
stos
test
push
sarl
repz
das
ljmp
and
push
xchg
xor
push
jbe
sarb
test
decl
in
push
xor
dec
mov
insl
add
mov
mov
test
cwtl
xchg
arpl
mov
out
in
inc
test
aaa
sbb
dec
jp
ja
in
test
sub
shll
mov
sub
orb
or
xchg
sub
cmp
pop
add
or
xchg
repz
sub
xchg
cwtl
sbb
aam
or
push
clc
xor
sub
xor
sub
out
ficoms
xchg
ja
xor
subb
xor
push
pop
mov
add
push
lea
popa
ss
pop
popf
cs
test
jne
negl
cmp
dec
cmp
sub
mov
xor
enter
pop
xor
or
fidivl
mov
dec
out
popw
ja
sahf
inc
inc
xor
ret
adc
cmp
das
in
xchg
pop
xor
shll
xor
xchg
push
xor
movaps
in
jnp
cmp
int3
adc
mov
adc
ljmp
clc
dec
mov
xchg
cld
or
repz
das
out
ret
push
add
stc
mov
out
jae
sbb
scas
mov
dec
inc
sbb
inc
movntq
mov
roll
jo
cmp
popa
push
adc
cmp
fdivrs
outsb
and
mov
xor
fistpl
cld
aas
mov
mov
loope
sub
stc
xor
in
scas
test
add
mov
mov
xor
dec
and
adc
and
stc
pop
cmp
shrl
sarb
in
scas
dec
es
imul
into
xor
pop
xor
scas
mov
xchg
and
jge
mov
aas
mov
jns
jns
sub
fdivl
hlt
mov
mov
fcmove
lret
add
mov
push
aaa
mov
lds
dec
pop
ror
addr16
pusha
pop
cld
imull
inc
or
cmp
addl
pop
push
adcb
push
sub
pop
in
pop
push
dec
pop
gs
in
cmpsb
adc
pop
mov
cmp
mov
adc
pop
pop
fwait
xchg
bound
adc
sub
cmp
fnstcw
movsb
dec
push
pusha
and
xchg
repnz
lret
cwtl
ret
and
push
push
xchg
call
xor
jne
loope
adc
int3
adc
movsl
fists
lock
mov
push
adc
jno
popf
cwtl
mov
lret
sbb
mov
mov
inc
in
daa
addl
cmp
lock
xchg
mov
xchg
xor
shlb
push
dec
repnz
ret
xchg
jge
js
mov
mov
jae
pusha
cwtl
ljmp
test
pusha
sbb
jno
ds
in
idivb
jg
in
dec
pop
mov
cmpsb
pop
leave
in
enter
pop
adc
test
push
push
lock
pop
sbb
xchg
lods
add
cltd
lcall
mov
aas
dec
xor
sub
xchg
xlat
xchg
mov
ja
xchg
add
dec
pop
cmpsl
movsl
out
mov
rclb
xor
jp
or
pop
and
mov
sbbl
mov
pop
aaa
hlt
cmp
movsl
pop
inc
ret
je
cwtl
push
adc
xor
lods
and
inc
pop
cwtl
cmp
jb
test
cmp
cmp
xor
cmp
nop
pop
leave
dec
sub
lret
insb
mov
xchg
notb
ret
mov
dec
mov
push
pop
out
adcb
incl
aad
and
xor
loop
add
out
mov
addb
and
into
mov
dec
sbb
in
icebp
dec
dec
rorb
add
mov
mov
or
call
mov
dec
pop
iret
jle
arpl
icebp
les
pop
dec
aam
es
dec
and
dec
std
aas
or
jns
or
mov
mov
pop
sub
stos
js
add
daa
mov
mov
repnz
imul
cmp
cltd
mov
push
and
ret
add
cmc
fistl
adc
pop
sub
fs
push
push
aaa
adc
aam
and
cwtl
mov
mov
out
outsl
adc
jecxz
xchg
jne
test
repnz
cmc
or
jmp
lret
inc
xchg
sub
mov
and
sti
loopne
stos
lds
test
inc
call
push
jge
out
or
aam
jg
mov
dec
mov
mov
push
cmpsb
sti
xor
xchg
aas
adc
add
shll
out
pop
fists
fstps
ret
outsb
mov
scas
call
adc
lret
cmp
jg
lds
testl
mov
adc
xchg
mov
mov
notl
out
lret
add
fs
push
int
xor
or
lea
sub
adc
ficoml
or
push
mov
jne
inc
movsl
dec
push
jne
sub
cmp
push
mov
push
or
je
ss
test
ds
push
sbb
cmpsl
pop
pop
fistps
int
stos
insl
sub
and
lock
fdivs
push
mov
icebp
fcmovu
imul
mov
jmp
or
ret
test
xchg
fyl2x
rorb
cmp
es
scas
mov
fwait
daa
or
push
jb
fcoml
test
xor
shrl
inc
insb
lock
pop
add
fsubl
push
jno
inc
xchg
aas
enter
dec
pop
js
sbb
mov
inc
push
cmp
lret
roll
mov
mov
add
push
push
test
aas
cmc
pop
aad
fadd
test
jno
pop
fs
out
jb
cmp
test
mov
pop
mov
repnz
cmpsl
arpl
fwait
pop
and
push
adc
imul
scas
jecxz
outsb
outsl
repnz
aam
cmp
inc
sbb
outsl
andb
dec
dec
xchg
aaa
test
sbb
jp
rcl
scas
sbb
xchg
cmp
push
div
pop
add
insl
das
or
stos
mov
das
mov
xchg
jbe
hlt
divl
ja
hlt
pmulhuw
inc
sub
pop
inc
loop
scas
xchg
inc
and
gs
pop
cmp
or
lea
jg
pushf
lret
pop
out
and
pop
test
xor
fistpll
cli
movsb
clc
les
inc
push
dec
js
mov
outsb
fildll
enter
xor
inc
in
imul
mov
inc
xor
xchg
es
sarl
enter
shrb
xchg
out
pop
cmc
jae
jge
jmp
loop
bound
jae
sub
xor
es
fldcw
inc
cmp
hlt
and
gs
pop
push
ret
fdivrl
lahf
clc
stos
inc
lret
cld
adc
loop
psraw
or
insb
cmp
mul
mov
icebp
popa
fildll
cmpl
xchg
out
or
jnp
and
dec
push
orb
stos
out
aaa
movl
dec
pop
mov
mov
inc
mov
sub
flds
and
addr16
in
pop
xor
or
test
out
repnz
xor
fwait
lds
sub
enter
fldt
xchg
gs
xchg
into
lock
out
xchg
shlb
jae
pop
pop
cmpsl
out
cltd
mov
pop
cmp
push
jg
lods
movsb
inc
inc
mov
cmc
xchg
shlb
ds
jb
sahf
push
push
adcb
bound
inc
ss
ja
nop
int
out
xchg
scas
dec
out
lods
data16
mov
and
sbb
mov
dec
imul
test
jae
adc
inc
push
mov
push
in
sti
cmp
xor
mov
and
ljmp
pop
popf
sub
inc
xor
imul
in
sbb
sbb
xchg
les
mov
jbe
jno
push
mov
lcall
es
jle
cmp
xchg
mov
mov
sbb
cli
mov
test
test
fcomps
xchg
xchg
and
push
dec
lds
arpl
sar
sahf
filds
aam
leave
mov
pop
mov
xchg
pop
sbb
stos
daa
out
mov
xor
scas
mov
outsl
scas
sub
xchg
mov
in
ds
cmc
inc
xor
test
push
test
push
xor
imul
lods
and
imul
xor
das
xlat
or
sbb
adc
xor
dec
add
stos
inc
into
lock
pop
cmc
enter
jbe
inc
jnp
xor
push
pushf
pop
daa
and
adc
sub
popf
adc
scas
jg
rcrl
jge
lock
jnp
pop
dec
aaa
xchg
lods
bound
push
mov
idivb
loop
dec
add
sarb
ljmp
jno
iret
and
jecxz
into
jnp
xor
xor
lret
repnz
jae
xchg
mov
add
sahf
xchg
cwtl
hlt
loopne
push
push
sti
jnp
xchg
js
mulb
push
add
insb
int3
out
add
sub
lret
lock
hlt
in
dec
push
xor
fbstp
adc
fisttpl
js
dec
fildl
out
sub
pusha
sbb
lcall
inc
and
pop
push
fsubl
jbe
rolb
shr
cmp
inc
add
repnz
dec
out
lods
es
gs
imul
lock
scas
xor
lods
push
cmp
mov
dec
ja
arpl
mov
adc
ret
push
je
cmc
cmpsl
mov
jle
inc
xchg
test
push
lahf
xor
iret
sbb
pop
je
dec
inc
and
and
in
std
outsl
lods
cmp
cmpsl
fwait
arpl
mov
test
jp
lea
cwtl
push
lret
push
inc
xchg
inc
arpl
div
push
cmp
adc
ja
xor
adc
mov
scas
inc
out
in
mov
cmp
fdivrs
mov
imul
mov
mov
aad
jecxz
mov
iret
loop
imul
jg
data16
cs
jae
inc
out
inc
imul
shrb
imul
jecxz
xchg
lock
inc
pop
sub
rclb
mov
mov
adc
jns
mov
dec
and
ljmp
xor
adc
mov
mov
outsl
std
sahf
addr16
les
mov
push
jno
sbb
pop
sahf
fsubs
cmp
adc
repnz
cmpsb
out
jno
mov
popa
jmp
jb
mov
push
adc
push
rclb
jle
cmp
push
xor
add
jg
stos
inc
and
ss
sbb
mov
sbb
xor
mov
push
add
rclb
dec
mov
mov
mov
call
pop
xchg
cmpsb
rcll
pushf
je
into
outsl
cmp
cmp
test
push
and
daa
mov
inc
je
stos
nop
xchg
adc
sbb
and
movl
aad
lea
pop
shrb
cmp
notb
daa
repz
arpl
mov
dec
xchg
xor
fcoms
pushf
out
cmp
pop
pushf
stos
xor
add
cltd
push
jb
mov
add
mov
loop
push
shl
lahf
xchg
sub
push
sbb
out
fistpl
pop
outsl
adc
mov
mov
inc
xor
pop
inc
sub
inc
mov
imul
fucomip
inc
mov
in
gs
xorl
stos
out
jg
repz
jle
inc
sbb
rorb
pop
mov
sbb
cmpb
jmp
add
jg
shrb
jae
cmpsl
jnp
jmp
adc
setg
fidivrl
xor
addr16
cmpsl
push
or
into
fidivs
inc
dec
cmp
push
lahf
inc
and
mov
inc
push
rcrl
int3
dec
js
loopne
rcrl
push
repz
in
push
inc
and
cmp
sarb
out
push
or
push
mov
mov
pop
call
dec
into
pop
pushf
push
mov
leave
xchg
ljmp
int
xchg
xor
popa
mov
push
fisttps
push
xlat
fcomp
jns
push
cmp
ret
sbb
jl
xor
sbb
push
dec
or
bound
cltd
pop
roll
xor
jno
in
arpl
mov
mov
aam
pushl
cmp
mov
lods
jmp
sbb
test
fdivrs
sbb
sbb
std
ret
cmp
mov
leave
jbe
repnz
cmpsl
mov
stos
aad
pop
enter
cmpsl
sbb
pop
and
push
fwait
shl
movb
jecxz
stos
xchg
cmp
mov
rorb
xor
out
shlb
jg
fsubl
mov
dec
repz
xor
push
ret
and
or
out
lods
lods
push
pop
mov
cld
mov
mov
cs
dec
cmp
faddl
inc
sbb
or
adc
mov
mov
inc
inc
cmpsl
jne
mov
imul
fstl
push
xor
fildll
test
push
sbb
push
inc
sub
add
or
lock
or
je
pop
and
jae
sbb
clc
mov
test
inc
inc
sbb
sbb
inc
sti
push
pop
adc
pop
xor
sti
outsb
pop
lret
xchg
jbe
lahf
cmc
xlat
stos
dec
ret
xor
out
sbbl
mov
fdivrp
jae
push
cmp
xchg
or
psrlw
sub
in
cmpl
dec
stos
mov
das
leave
jb
mov
mov
xchg
jo
sbb
inc
lret
lock
and
and
pop
rorb
out
sbb
jb
mov
jecxz
jne
repnz
call
and
sbb
mov
xchg
test
sbb
aad
dec
into
xor
dec
fnstenv
cmp
aaa
cmpsl
or
dec
aaa
and
push
clc
jge
test
ljmp
adc
jnp
jmp
daa
add
jl
jo
scas
jae
cs
mov
insb
rorb
jmp
imul
subb
out
mov
xchg
jge
test
push
sbb
mov
add
fadds
sbb
mov
sbb
out
movsb
mov
movsb
and
dec
xor
mov
test
sub
lea
jmp
dec
jge
jne
int3
daa
inc
jp
mov
cld
movl
sahf
dec
pop
std
cld
xchg
insl
das
jle
clc
fwait
lcall
hlt
mulb
sbb
sub
mov
push
xchg
sbb
dec
push
out
mov
adc
mov
mov
or
into
jne
sarl
mov
imul
xor
cmp
cmpsb
lahf
jne
fxch
xchg
outsb
adc
sbb
data16
test
or
inc
shll
cltd
mov
mov
inc
sbb
stos
aas
jl
cmp
roll
xchg
icebp
cli
mov
xchg
ja
and
repnz
adc
mov
rolb
and
mov
jle
adc
add
ss
pop
and
sub
sub
push
mov
sahf
stos
repnz
adc
jb
sub
jge
xor
iret
in
mov
pop
xchg
and
out
lds
fstpt
adc
adc
hlt
stos
addr16
ja
into
mov
mov
xchg
lahf
jge
push
stc
movsl
add
pop
outsb
dec
add
sbb
adc
sub
xchg
call
and
pop
je
aaa
negb
push
cmp
add
push
xchg
mov
push
jl
hlt
mov
mov
js
nop
pop
inc
pop
push
xor
psraw
mov
jne
testl
pusha
add
inc
pop
addr16
xchg
ret
jo
popf
inc
cmpsl
test
call
daa
jecxz
lods
mov
cmp
xorb
pop
and
lcall
jmp
pop
iret
cmc
fimull
ficoml
push
mov
push
test
push
pop
lcall
sub
adc
repz
idivl
fistpll
push
xchg
push
mov
leave
mov
xchg
sarb
nop
sbb
fstps
push
dec
cwtl
push
pop
sub
popa
push
cmp
add
xor
std
ret
shlb
add
xor
pop
addr16
xlat
mov
lods
or
sbb
jg
sub
inc
ljmp
addb
cwtl
test
push
loop
push
pusha
push
into
aaa
call
pop
cmp
xchg
jns
cs
pop
orl
pop
pop
movsb
mull
mov
ret
dec
pop
xchg
or
inc
nop
and
cwtl
add
dec
cmc
sahf
mov
fiaddl
dec
jle
mov
cmc
pushf
cltd
das
mov
fadds
sarl
and
mov
adc
aam
js
orb
les
xchg
inc
test
push
push
test
jg
out
push
mov
nop
pop
or
sbb
test
ror
popa
lcall
xor
mov
xchg
enter
test
stc
insb
mov
inc
ljmp
push
sbb
push
loop
enter
fiadds
int3
xchg
dec
pop
mov
add
in
xchg
hlt
test
fstpl
hlt
rcll
mov
inc
ss
mov
test
push
in
dec
sub
add
notl
fst
push
fsubr
pop
xchg
cli
xchg
ffreep
dec
sub
jns
cmp
rolb
sub
add
jge
movsl
push
add
dec
mov
xorb
mov
sub
cmp
xchg
jo
dec
adc
repz
adc
sub
xor
shl
pop
xor
or
add
stos
decl
mov
adc
push
and
cmp
ret
mov
jle
les
or
sub
inc
mull
sub
jns
inc
fcomps
xchg
xor
addr16
pop
jb
movsl
mov
push
shlb
inc
jnp
fldenv
and
mov
adc
cmp
jecxz
xchg
mov
dec
add
sti
inc
test
lods
mov
lds
inc
int
cwtl
xchg
mov
jmp
enter
jp
cmp
aam
xor
sub
jb
sbbb
push
imul
push
sahf
repz
push
xchg
out
ja
icebp
xor
icebp
loop
jmp
push
xchg
out
jae
xchg
ljmp
adc
sub
sahf
mov
dec
cld
sti
aaa
push
and
sbb
inc
lcall
addr16
ret
test
testl
ss
or
dec
inc
mov
or
jl
jecxz
jmp
pop
sub
mov
loop
lret
or
mov
shlb
cltd
lock
frstpm(287
push
cmpsl
jle
loope
xlat
mov
in
push
cmp
jecxz
clc
jo
mov
add
or
pusha
cld
xor
mov
cmpb
push
xchg
mov
dec
rorl
cs
daa
sub
push
test
jle
jg
int3
mov
sbb
xchg
js
fdivrp
movsb
sub
out
mov
hlt
sub
adc
xchg
pop
scas
stos
xchg
js
leave
mov
stc
lock
insl
jae
xor
adc
xlat
jb
cmp
lea
or
test
jge
adc
xor
xchg
sub
push
jnp
movsb
and
push
fadd
dec
sub
add
mov
xor
das
es
and
inc
pop
scas
mov
inc
inc
imul
stos
loope
sub
out
cli
scas
mov
mov
xor
test
adc
adc
data16
xor
dec
mov
loop
xchg
or
ficomps
popf
jns
or
xor
mov
sti
sub
dec
inc
lahf
iret
pop
sarb
pop
cmp
add
xor
lds
cmpsb
push
ds
int3
lods
xor
or
out
xchg
lret
mov
repnz
psrld
cmp
xlat
outsl
movsl
mov
mov
push
sahf
jbe
popl
notb
adc
stc
out
enter
inc
mov
sub
push
fisubrs
jle
cmp
jmp
frstor
repnz
mov
in
mov
lret
mov
in
insl
mov
jo
orl
mov
flds
mov
push
mov
iret
out
rcll
adc
nop
push
lcall
lods
pop
mov
ljmp
fwait
cmp
xchg
insb
fmuls
pop
add
sub
mov
xor
sahf
lods
lahf
pushf
push
pop
arpl
sub
cmc
xor
and
aad
stos
cmpsl
push
pop
add
cmp
xchg
ss
inc
mov
and
sbb
push
push
in
adc
xchg
movsb
in
movsb
jg
push
std
pop
xchg
pop
pop
jbe
or
push
test
scas
test
shll
push
fmull
mov
aam
outsb
clc
iret
jns
pop
ss
add
jo
into
jb
mov
shrl
xor
negb
xchg
pop
hlt
aad
sbb
adc
mov
push
xchg
mov
call
mov
popf
dec
jle
cwtl
fistpll
mov
xchg
lret
cwtl
pop
add
lea
lcall
mov
int
pop
scas
add
xchg
xchg
jb
ret
and
jb
jns
mov
int
cmp
dec
sub
push
jae
mov
jmp
xchg
lret
rcrb
cmpsb
popf
cmp
sahf
mov
or
inc
inc
jnp
aam
mov
cmp
xchg
add
mov
xchg
icebp
jns
subl
sbbl
cmp
repnz
mov
outsl
add
notb
cmp
loope
inc
das
cmp
scas
fdivrs
xor
fwait
inc
or
jno
imul
aas
add
cltd
pop
sbb
xchg
push
frstor
loope
inc
xchg
faddl
hlt
inc
pop
iret
xchg
rolb
cmp
popa
out
imul
sub
movsb
jo
cltd
in
cmp
pop
es
xchg
test
xor
lds
sub
lock
mov
push
mov
push
mov
mov
fistpl
and
jg
pop
push
mov
add
fwait
rcll
sbb
aaa
jne
cwtl
xchg
adc
push
mov
or
mov
push
out
fisubrl
fiaddl
add
adc
jne
add
clc
out
outsl
ja
push
push
addr16
adc
mov
add
and
mov
rolb
orl
or
mov
xchg
cmp
xor
fsubl
push
push
leave
fs
jns
loope
enter
lock
js
ljmp
arpl
mov
lret
dec
sbb
cwtl
test
stc
fpatan
not
loopne
cltd
jmp
xchg
imul
outsl
pop
rorl
popf
icebp
sub
adc
or
dec
pop
dec
inc
subb
mov
adc
add
nop
adc
adcl
or
inc
pusha
or
ljmp
xchg
std
cmc
push
adc
inc
mov
je,pn
inc
or
popf
pop
outsb
out
cmp
mov
fstps
or
ss
or
jnp
ja
rclb
lds
fbld
movsl
sbb
fsub
in
dec
mov
enter
je
jmp
add
dec
cli
jecxz
push
and
and
loop
aaa
cmpl
pop
pop
fcom
jmp
or
add
xchg
mov
fcmovbe
mov
clc
jnp
cmp
mov
popf
rorl
int3
sub
sbb
dec
ja
fsubrs
push
sti
xor
aas
or
clc
out
push
xor
inc
mov
mov
arpl
xor
add
and
cmpsb
popa
cmpsl
sbb
insl
sbb
iret
ss
xchg
push
out
fisubs
cmp
mov
xchg
clc
adc
inc
pop
or
mov
lods
jge
aaa
mov
xchg
xor
cs
fadd
sbb
fildl
ror
icebp
popa
ja
sbb
mov
inc
call
xchg
sbb
mov
sub
or
in
cltd
ds
fwait
in
hlt
cmp
lods
roll
mov
pop
adc
sub
inc
adc
pop
xlat
ds
xor
fwait
xor
fcomps
out
jo
jns
call
in
pusha
les
pop
cmp
push
mov
push
test
adc
sti
lods
pop
aad
pop
sbb
repz
sbb
pop
inc
fsubrl
into
or
repz
dec
popa
lcall
mov
add
js
fs
xlat
imul
sbb
out
cmp
int3
int
cmp
and
jecxz
shrb
mov
fmul
repnz
lds
mov
dec
inc
mov
jno
std
sub
icebp
imul
xor
cmc
dec
aaa
cmp
and
stos
movsb
pushf
inc
sub
pushf
push
sbb
in
adc
push
arpl
mul
ja
push
adc
mov
jmp
xor
arpl
stc
and
test
mov
movsb
cmp
shl
sbb
and
jae
iret
test
aaa
outsb
stos
mov
movsb
xchg
or
cmpsl
test
mov
shll
jbe
adc
stos
ficoml
cs
push
pop
sbb
jno
sahf
fdivrs
ss
mov
sbb
mov
mov
adc
pusha
out
outsb
ret
stos
les
sub
rclb
jnp
adc
inc
or
das
outsb
mov
fwait
jmp
sarb
cmp
mov
rcl
hlt
jno
mov
cmc
sahf
pop
rcrb
pop
jmp
pop
pop
addr16
das
push
xchg
xlat
pop
fstps
dec
push
testl
mov
cmp
cs
dec
push
jmp
jge
movsb
ds
dec
inc
mov
dec
cmp
int3
xchg
adcl
push
sbb
sbb
cmc
dec
leave
xor
push
inc
mov
cvtps2pi
adc
out
adc
push
sarl
mov
jb
cld
loopne
jecxz
insb
pushf
mov
sub
jnp
xor
add
repz
mov
xor
cmp
gs
fwait
iret
rcr
add
mov
lcall
imulb
mov
jp
ljmp
fistpll
xor
cmp
test
cmp
pop
inc
pop
fsubs
sbb
das
inc
mov
mov
jns
dec
int3
or
outsb
dec
xor
repz
data16
arpl
jo
add
xchg
jnp
sbb
pop
cmp
lret
sbb
rcl
gs
scas
cmp
das
xor
xor
or
in
jne
sahf
pop
mov
test
std
cmpsb
jle
popa
stc
test
fcompl
xor
fwait
mov
hlt
mov
mov
lea
fisubs
sbb
js
jmp
rorb
xlat
pop
lods
out
scas
sub
jo
sbb
sub
andb
cmp
xor
test
mov
mov
mov
mov
cmp
movsb
adc
xchg
sahf
call
jnp
xchg
sarb
lret
out
xchg
into
cmp
or
add
mov
rcll
in
pop
stos
rcr
push
sbb
mov
rolb
cltd
push
xchg
sub
movsl
xchg
fstpt
mov
cltd
stos
lock
sbb
push
jp
out
repnz
cmpb
adc
add
aas
into
out
scas
arpl
lea
and
roll
lea
pop
push
adc
int3
leave
jnp
jp
push
mov
sarb
stc
xchg
icebp
fiaddl
dec
movsb
push
test
jecxz
outsl
outsb
jne
jmp
jne
jbe
std
fimull
mov
pop
adc
sbb
inc
cmpsl
outsl
push
lahf
shlb
imul
dec
sahf
stos
add
data16
rcrl
imul
movsb
pusha
mov
shlb
cltd
or
jl
clc
std
pop
fstpl
pusha
scas
cmp
or
shl
jle
pop
xchg
sub
jmp
xchg
sbb
lcall
stc
and
or
mov
add
mov
pop
push
mov
jne
mov
xchg
lcall
mov
aas
push
bound
lock
xchg
inc
xor
dec
lahf
inc
cs
dec
pop
sub
scas
and
push
adc
jns
mov
orl
add
pop
jns
sbb
add
testb
cmpsb
cmc
pop
gs
pop
sbb
sbb
inc
and
jne
aad
cli
xchg
pop
xor
cld
shlb
xchg
mov
adc
iret
rcrb
pop
lcall
stos
nop
sub
mov
and
adc
mov
les
push
adc
sti
mov
and
and
stc
loopne
adc
ret
subl
xor
lcall
sub
jb
dec
negl
jb
dec
sbb
adc
ret
psrlq
ret
sub
or
xchg
andl
inc
push
xchg
bound
jbe
add
cmp
imul
lods
xor
lods
add
sub
lods
sbb
cmp
or
and
lods
jne
stos
add
push
mov
or
fldl
xchg
lea
iret
push
shll
cmpsb
xor
daa
push
and
and
push
dec
stos
and
cmp
lahf
cltd
push
adc
push
int3
inc
and
pop
jnp
stc
ret
adc
mov
pusha
push
dec
aaa
scas
es
xor
mov
push
outsb
and
pop
dec
and
push
repnz
in
clc
shll
cmpsb
inc
adc
icebp
imulb
and
xchg
mov
xor
imul
mul
xchg
jg
into
jmp
mov
sbb
add
adc
xor
jne
icebp
lods
mov
xchg
dec
pop
push
loope
jbe
dec
fidivrs
mov
int
mov
test
mov
and
std
fbld
daa
mov
aam
mov
dec
jno
fld
mov
test
push
ret
cmpsb
insb
movsb
dec
adc
mov
mov
ret
pop
ljmp
hlt
inc
pop
mov
cwtl
mov
mov
in
mov
push
pop
and
push
push
std
inc
mov
icebp
inc
xchg
imul
jmp
aad
ss
sub
inc
or
sub
xchg
add
sbb
out
icebp
je
clc
aaa
cmp
sub
out
mov
std
ret
and
pop
daa
pop
sahf
add
sub
add
mov
inc
or
and
adc
ds
push
movsl
inc
mov
xor
and
out
sti
int
and
pop
add
and
pop
mov
sub
mov
push
leave
mov
mov
loope
adc
ljmp
adc
popf
arpl
loope
lods
and
push
fldl
fdivl
sub
lret
shrl
cmp
dec
stc
dec
aam
add
test
xchg
pop
hlt
int3
fsubp
scas
jne
lods
sbb
fld
cmc
xchg
cld
imul
pop
mov
arpl
fstp
xchg
xlat
fdivs
in
pop
inc
push
push
out
pop
mov
je
cld
adc
popa
clc
xor
out
in
repz
divb
xchg
cli
mov
add
jae
addr16
and
ret
fnstenv
stc
nop
outsb
dec
aas
cmp
lods
int3
imul
out
inc
or
bound
cltd
ja
xchg
xlat
add
mov
les
shll
subb
hlt
xor
repnz
dec
jl
mov
push
loopne
imull
mov
outsl
js
in
icebp
or
filds
iret
push
add
jae
inc
inc
std
sbb
loop
les
xor
mov
mov
jno
mov
xchg
ficompl
scas
clc
jge
int
not
and
xchg
or
push
out
lahf
adc
xor
jg
mov
jb
sbb
jne
pop
pushl
iret
js
xorb
or
pop
dec
stos
dec
sub
imul
dec
mov
cmc
lock
sbb
push
jbe
inc
cli
pop
pop
dec
aaa
loopne
push
orl
test
or
adc
mov
mov
jno
add
push
push
lods
dec
sub
push
jb
lea
mov
jnp
dec
stc
add
mov
pop
mov
ret
pop
cmp
push
mov
addb
js
adcb
stc
cmp
cmp
xor
inc
adc
cmpsl
adc
xlat
fmulp
ret
pushl
mov
mov
scas
add
ja
dec
jbe
out
mov
lahf
and
or
out
out
imul
sbb
pop
push
xor
pushf
fiaddl
insb
cli
stos
loopne
dec
movsl
add
lahf
mov
pop
jmp
rclb
cmpsl
adcb
icebp
adc
or
loope
test
shll
pop
out
mov
fadds
mov
jg
fstl
or
jns
out
adcl
sbb
jg
adc
xor
mov
stos
xor
mov
ss
fs
jb
or
jmp
ss
arpl
mov
adc
vpunpckhqdq
jno
clc
pop
rorl
in
mov
sbb
mov
sbb
push
xchg
dec
addr16
cltd
nop
push
sarl
stos
leave
mov
jno
or
enter
cltd
or
push
outsb
dec
ljmp
js
dec
push
push
cmp
mov
dec
xchg
dec
or
mov
sub
stos
into
mov
enter
int3
std
daa
cmp
or
rclb
daa
ljmp
dec
fsubr
add
iret
lcall
add
adc
xchg
sbb
add
mov
xchg
jne
mov
pop
pop
das
subb
mov
cs
imul
lods
test
push
pop
in
out
cmp
es
add
pop
iret
js
xchg
loope
and
in
leave
popa
cltd
sti
jbe
int
push
cwtl
into
inc
and
mov
mov
mov
mov
sbb
fwait
inc
cmpsl
xchg
mov
sub
cltd
cmp
push
unpcklps
and
mov
cmp
inc
cs
bnd
inc
cmp
xchg
into
mov
inc
sbb
jp
push
inc
push
pop
aam
pop
jecxz
adc
sbb
into
mov
mov
andl
inc
push
dec
arpl
rcrb
add
cmp
or
adc
outsb
pavgb
cmp
js
jbe
sbb
lcallw
xor
mov
pminsw
loope
xchg
cli
mov
mov
sub
fistpll
xchg
shll
pop
dec
mov
xchg
inc
les
hlt
and
je
push
cmp
mov
push
cwtl
push
lahf
sbb
inc
adc
jns
pop
outsb
in
aam
sahf
pop
loop
xchg
sub
mov
add
int
es
lcall
popa
add
cmpsl
sti
mov
sub
lret
adc
dec
sahf
ret
pop
xor
lcall
aad
das
rorb
mov
lds
pushf
push
pop
mov
movsl
lahf
cmp
xchg
cs
dec
mov
popa
pop
pop
pop
je
aas
mov
pop
imul
es
push
xor
cmp
mov
addr16
adc
push
mov
in
xor
xor
xchg
xor
imul
and
push
out
cwtl
mov
das
adc
sub
shll
ds
jmp
jae
leave
lock
dec
xor
xor
fstpl
pop
in
xor
push
stc
jmp
dec
sbb
mov
push
scas
lcall
sahf
jle
mov
xor
mov
iret
pop
ret
mov
lcall
leavew
xchg
fbstp
into
adc
stos
icebp
les
push
lods
push
test
cmpsb
movsb
lcall
dec
add
in
mov
mov
in
push
jecxz
pop
in
lret
xchg
xor
adc
dec
sub
sub
fbld
pop
fidivrl
mov
mov
lock
filds
fwait
jmp
mov
lods
adc
or
lret
iret
dec
mov
mov
rcrb
xor
add
pop
xor
xor
xchg
fs
test
mov
xlat
es
push
cmpsb
pop
pop
jb
std
lret
xchg
jo
in
mov
out
pusha
sti
pop
addl
mov
inc
add
cmc
cmp
jae
inc
ss
in
roll
loopne
adc
iret
sub
add
adc
add
mov
mov
je
mov
mov
sub
dec
or
xor
xor
and
cmp
mov
cmc
xor
push
push
pop
dec
cs
pop
popf
xchg
and
adc
dec
pusha
mov
xchg
push
inc
ja
into
ficoml
leave
xor
jmp
mov
fnstsw
sbb
adc
xor
sti
daa
icebp
ss
xor
adc
and
adc
dec
je
lret
cmp
call
xlat
mov
icebp
add
jnp
test
dec
pop
mov
divl
mov
pop
daa
jbe
sbb
cmc
out
cmp
fiaddl
dec
jne
mov
pop
jbe
aas
add
das
adc
xor
mov
movsl
lods
mov
jb
fadd
or
xchg
sub
lcall
pop
xor
ret
xor
mov
cld
imul
pop
scas
dec
addb
in
adc
add
mov
push
in
lods
mov
pop
sub
sbbb
out
xchg
cmp
jns
outsb
call
mov
cld
pop
out
pushf
shl
mov
cltd
outsl
jbe
insl
add
inc
push
pushf
call
imul
cmp
daa
jo
push
mov
mov
sbb
or
scas
inc
pop
lods
daa
lahf
pop
or
sub
rcr
add
add
jns
inc
sahf
enter
push
pop
mov
int3
jns
pop
sub
pop
xchg
or
add
push
clc
sbb
movsb
jo
dec
cmpb
xor
xchg
jecxz
inc
lods
fstpl
js
cmp
lcall
add
sub
ret
push
scas
and
cmc
push
push
push
nop
pop
inc
sahf
subb
leave
addr16
loope
leave
orb
fistl
xlat
mov
rcll
sbb
push
cli
jle
out
mov
jmp
xor
or
jns
mov
divb
imul
popa
insl
mov
imul
pop
pop
add
push
out
and
sub
mov
into
stos
ja
cmp
js
or
cli
push
sbb
clc
fs
mov
pop
sub
mov
mov
dec
pusha
cmp
pushf
xchg
lret
jle
inc
std
hlt
mov
jne
xor
push
sbb
mov
inc
aad
lret
push
repz
hlt
repz
idivl
mov
pop
dec
lcall
addb
mov
mov
push
pop
in
out
sti
cmpsl
cmpsb
mov
rcr
movsl
mov
mov
add
xchg
cmp
jnp
push
scas
test
aas
rcl
pop
or
mov
xor
je
push
orb
sbb
sbb
mov
xchg
icebp
cli
sahf
les
push
dec
adcl
int
jecxz
and
mov
jmp
rorl
mov
jecxz
fdivs
insl
iret
mov
push
jp
adcb
xor
sbb
mov
dec
mov
dec
mov
inc
mov
sbb
jp
lock
ds
fs
or
jns
insl
cmp
mov
cmp
push
sbb
movb
fcmovbe
pop
sbb
cmp
pop
push
in
movsl
rol
xlat
ds
inc
adc
xor
mov
push
and
mov
dec
jl
cltd
leave
sbb
dec
push
mov
adc
cltd
ja
push
add
lods
shr
std
fistl
and
jno
popf
xchg
in
ljmp
adc
fnstsw
clc
sahf
clc
fbstp
popa
ja
fstpt
stc
dec
loop
imul
and
or
aam
sahf
dec
and
or
add
cmc
and
aad
shrb
fwait
pop
mov
clc
mov
cmc
dec
icebp
out
sub
fcmovb
mov
fwait
int
adc
sbb
and
cmpsb
cmp
dec
xchg
roll
xor
push
addr16
lods
movb
mov
cwtl
ret
dec
js
cmp
imul
push
movsb
lea
add
testl
cmpsl
mov
jg
pop
adc
bound
add
mov
ja
jne
sbb
push
lods
fnstsw
jne
cltd
jno
lods
ljmp
jne
iret
jg
test
lret
xlat
fwait
cld
sub
jmp
inc
fldcw
icebp
cmp
and
in
mov
es
imul
lret
rclb
pushf
stc
popa
loop
add
in
imul
ret
out
jae
mov
dec
shlb
dec
call
pop
adc
xor
jg
cmc
xchg
cmp
or
out
repnz
push
dec
pop
pop
mov
mov
subb
out
hlt
pushf
push
mov
jne
mov
push
cli
cmp
jns
clc
inc
pop
out
into
jne
lret
fmulp
sbb
outsb
push
and
sbb
inc
inc
xor
mov
mov
or
mov
shl
xchg
xlat
jp
outsb
es
mov
sub
and
cs
and
mov
cld
insb
or
mov
adc
pop
sub
sbb
push
sub
pop
cmpsb
mov
fisubrl
adc
mov
mov
xor
jl
mov
cmp
scas
pop
xchg
cld
mov
mov
int3
test
jecxz
int
mov
mov
cwtl
mov
int
xor
iret
pop
ds
daa
stc
xor
mov
xchg
xor
movsl
push
xchg
clc
popa
movq
nop
cwtl
das
daa
mov
out
mov
mov
pop
xor
lea
test
orb
and
dec
and
icebp
inc
popf
in
test
aas
mov
xor
xchg
lret
cltd
jle
mov
je
aad
in
mov
jbe
jbe
mov
scas
add
out
negl
mov
aad
int
adc
movsb
inc
cltd
and
lret
mov
sbb
cmp
mov
mov
mov
mov
or
aad
mov
in
stos
cmp
dec
sub
ja
je
jge
adc
mov
dec
jo
adc
mov
push
test
cmp
inc
movsb
cltd
and
movsb
push
std
mov
fmull
xor
mov
addr16
dec
push
mov
aad
insb
cld
adc
lds
jae
inc
or
sbb
data16
cmp
ja
sub
pop
arpl
adc
mov
push
fnstenv
mov
sbb
sti
test
dec
ljmp
stc
fildll
mov
jb
lahf
sbb
jns
xchg
adc
mov
rolb
lret
mov
inc
and
and
xchg
pop
cmpsb
push
mov
fdivr
sbb
push
jo
test
std
jmp
fwait
inc
fistl
xchg
push
in
movsb
cmpsb
and
sbb
jnp
cmp
mov
out
or
jne
out
jl
add
xlat
inc
subb
mov
adc
ljmp
mov
push
push
cltd
and
mov
pop
or
mov
stos
cmp
xor
and
push
xor
mov
xchg
xchg
repz
or
inc
push
imul
xor
push
add
jl
xchg
cli
aad
xor
push
das
call
rcl
mov
and
outsb
mov
jb
rcrl
adc
pushf
mov
imul
or
jnp
sub
hlt
inc
fs
in
sbb
cld
mov
scas
push
enter
lods
mov
inc
jno
pop
jl
pop
cmpsb
dec
push
jae
sub
push
pop
mov
out
bswap
cmc
icebp
fadd
orl
cmp
jp
pop
pop
push
addr16
in
inc
arpl
out
call
mov
push
xorb
xchg
jmp
and
push
push
sub
inc
cmp
in
mov
ret
or
push
or
test
inc
addr16
out
inc
jge
repnz
cmp
xchg
stos
loopne
stos
cs
and
jbe
fists
insb
xor
mov
enter
pushf
sub
dec
ret
imul
push
dec
xor
or
loopne
lea
aad
xchg
cmp
mov
add
jb
shll
sti
jp
push
loop
mov
push
and
or
sub
inc
add
ds
jnp
pop
stos
push
mov
cltd
pusha
imulb
or
das
hlt
sbb
shll
mov
sbb
test
xor
ljmp
mov
fstpt
xchg
sub
popa
mov
sub
add
in
mov
dec
gs
dec
sub
pop
or
cmp
xor
pop
cmp
fisttpl
inc
movsb
popf
mov
add
out
fwait
das
cmp
lret
mov
ljmp
ds
jecxz
xchg
insl
jge
dec
out
outsb
ficoms
pop
cmpb
cpuid
xchg
lds
cli
popa
scas
push
int3
and
and
fwait
mov
sahf
mov
jge
or
sbb
cmpsb
sub
xor
pop
adc
dec
es
fs
dec
sbb
mov
das
fdivrl
sbb
dec
je
mov
mov
shlb
xchg
sub
dec
adcb
shl
daa
mov
int3
insb
stos
xchg
out
xchg
dec
ds
mov
pop
movl
fucomip
cmp
sub
push
mov
int
sbb
fdivl
stos
pusha
xlat
loopne
push
ja
push
daa
pop
pop
das
mov
cld
stos
out
dec
mov
dec
popf
cmc
or
xchg
std
leave
xchg
sahf
imul
push
push
xchg
loop
sbb
sbbl
inc
and
pop
dec
test
inc
xchg
cmp
repnz
xchg
sbb
mov
pop
adc
fldcw
pop
hlt
cmpsl
cmp
jne
mov
fneni(8087
sbb
fstl
add
cmp
or
adc
add
loopne
bound
mov
fisttps
adc
jo
cmpsb
inc
xor
bound
inc
jb
fimull
lods
mov
jo
jbe
xchg
or
sbb
sti
jl
fldl
jne
cwtl
sbb
gs
sarl
mov
dec
gs
jnp
pop
mov
sub
xchg
adcl
mov
or
xchg
popf
outsb
es
mov
dec
mov
jl
insb
inc
xchg
iret
mov
pusha
cltd
lds
or
cmp
push
mov
popf
push
iret
imul
je
fistps
iret
repz
pop
gs
sbb
xor
sub
mov
mov
push
jae
loopne
jl
jge
push
xchg
mov
xchg
ds
cmpsb
movb
aad
ret
push
in
inc
or
or
scas
sub
gs
xchg
jle
jg
enter
sbb
inc
test
inc
fcmovne
movsb
or
ret
sbb
popf
in
or
hlt
pop
cmpl
dec
xchg
push
int
test
scas
mov
mov
xchg
ror
pop
sub
jae
xor
dec
int3
mov
dec
dec
mov
inc
ficoms
sbb
div
movl
aas
repnz
call
xchg
arpl
push
test
int
rcll
out
daa
dec
aaa
push
sbb
daa
movsb
insb
nop
popa
mov
in
jbe
pusha
loope
pop
add
sbb
fs
fsts
xchg
xlat
out
and
push
mov
sbb
push
pushf
pushf
lret
aaa
adc
sbb
hlt
or
scas
jmp
cmp
adc
fwait
pop
jae
fiaddl
inc
loop
xchg
jno
mov
jmp
fmuls
inc
rolb
rorl
or
xor
or
dec
pop
push
daa
adc
mov
adc
and
and
jbe
xchg
daa
lea
mov
xor
cmpsb
lock
aas
outsl
or
repnz
int3
adc
xrelease
adc
or
sub
or
inc
jmp
mov
jl
clc
sbb
xor
test
popa
aas
pop
dec
cltd
xor
xor
mov
push
out
mov
push
loop
cmp
iret
ret
mov
push
data16
out
scas
lods
adc
add
and
push
aam
iret
push
cli
mov
xor
and
mov
addb
mov
xor
lcall
cwtl
or
jno
push
into
inc
shll
cld
mov
scas
test
fidivrs
mov
xor
cmpsl
cld
and
jne
gs
cld
sub
inc
push
pavgw
mov
jb
out
adc
sub
or
scas
mov
dec
cmp
sub
dec
pop
push
repnz
adc
aam
into
aas
ret
xchg
adc
and
jae
ret
in
nop
or
lcall
add
jnp
xorb
in
cmp
mov
outsl
fwait
data16
xchg
lock
mov
aas
adc
rolb
add
movb
pop
add
mov
std
adc
mov
dec
scas
lds
popa
cltd
cmp
out
out
outsl
jno
or
test
test
in
dec
stos
push
add
push
lea
jg
push
pop
xchg
sbb
rcrl
jle
dec
or
outsl
or
push
clc
pop
or
push
pop
pop
mov
js
pop
stos
push
push
mov
and
test
sbb
out
adc
lods
fimuls
and
push
cmp
xor
je
es
xorb
mov
pop
gs
sub
push
cs
sub
imul
add
dec
mov
jne
jmp
pop
xor
sahf
in
aaa
mov
stos
int3
nop
test
jmp
mov
cmp
insb
or
mov
dec
sbb
repnz
jl
sub
aad
aad
pop
roll
mov
into
daa
popf
add
push
or
mov
mov
cwtl
pop
enter
aam
lock
jl
popa
cmp
lret
push
inc
add
sbb
mov
mov
jno
jmp
pop
xchg
adc
movsb
in
lret
imul
sbb
stos
js
cmp
mov
dec
jne
or
xchg
push
arpl
imul
sbb
jae
pushf
mov
sbb
cmp
pop
mov
aas
push
inc
repnz
sub
dec
repz
scas
mov
in
dec
fnstsw
cwtl
xlat
add
data16
jns
lea
shr
mov
fisttpl
sbb
in
mov
push
popa
adc
test
and
xchg
aam
jmp
sub
test
mov
sbb
lret
jp
out
lods
ret
in
cli
ret
mov
fadds
mov
push
sbb
ret
sbb
and
pop
jp
fmul
stc
fstps
insl
sub
iret
jge
mov
and
push
mov
inc
mov
mov
movsb
mov
js
sahf
movsl
xor
loope
add
mov
adc
test
pusha
push
xchg
mov
jg
ret
fdivl
insb
lret
jl
cmp
jo
clc
idivb
scas
sub
cmpsb
sti
cmpsb
add
push
pushf
lods
loop
xor
jno
cmp
lahf
push
jno
pop
outsb
leave
rolb
fwait
mov
fsts
mov
cli
imul
jecxz
stos
jne
jmp
ds
mov
popf
pop
dec
jnp
mov
out
cmp
or
mov
sub
sub
test
sahf
rcrl
push
scas
lods
mov
sub
enter
sbb
rol
cli
xlat
cmp
std
mov
xchg
jbe
jnp
scas
iret
jns
xlat
dec
push
lcall
cmpsb
add
fadd
cmp
pop
xchg
jbe
jg
cmpsl
jae
jae
sti
adc
jmp
cld
bound
mov
jmp
bound
repz
pop
or
and
subb
stos
mov
push
jle
xchg
pop
fs
out
scas
faddl
out
sahf
aaa
js
pop
dec
pop
jecxz
mov
icebp
sub
inc
or
clc
lds
addr16
xchg
aas
es
int3
xchg
mov
mov
adc
adc
ljmp
clc
xor
lcall
mov
jbe
xlat
push
out
sub
in
in
cwtl
imull
out
jno
out
xorl
inc
push
in
pop
lret
mov
xlat
adcl
dec
cmpsb
sub
add
movl
add
insb
fcmovb
xchg
call
lret
or
shll
push
adc
cmp
jp
cmpsb
lret
push
popa
inc
fdiv
xor
dec
out
push
aaa
jle
shlb
das
xchg
mov
repnz
scas
inc
xchg
and
sub
sub
push
in
or
stos
mov
mov
xor
or
test
mov
push
lods
testb
cmpsb
movsl
pop
insl
inc
xor
mov
popa
fwait
cltd
jmp
stc
and
push
paddd
and
es
push
ret
std
push
addr16
fs
lret
or
fsubs
fcomps
or
fisttpl
decb
arpl
aaa
cmp
inc
stc
outsl
pop
into
insl
xor
mov
jnp
xor
push
loopne
mov
jl
cmpsb
sbb
dec
jae
addr16
test
into
insl
hlt
test
iret
lret
push
loopne
add
push
inc
es
dec
xor
sub
mov
cmpsl
jmp
in
cmp
push
fldt
cmc
xorb
fs
inc
and
jecxz
mov
jns
rcrl
adc
ficomps
outsl
xchg
xchg
mov
rcrb
movl
cmp
push
jge
mov
pop
mov
push
ret
mov
adc
adcl
and
push
push
fs
aam
cltd
mov
arpl
fwait
dec
cltd
dec
dec
out
and
leave
ror
outsl
daa
cltd
pop
sbbb
inc
es
scas
lods
and
ror
sarl
shl
lock
dec
adc
arpl
test
sbb
or
shlb
inc
data16
mov
adc
sbbb
xor
sub
dec
testl
leave
lds
fistl
dec
idivl
mov
pop
test
popa
push
lock
sub
pop
cmpsl
fiaddl
mov
mov
fst
testl
enter
lea
inc
out
int3
mov
inc
movsb
sarl
and
and
sub
cmp
cmp
jecxz
push
ljmp
inc
mov
stc
int3
cmovp
add
sbb
fldenv
js
xchg
mov
mov
mov
and
aaa
scas
sbb
xor
xor
xor
adc
mov
cmpb
xchg
aad
sub
fimuls
mov
mov
sub
icebp
pop
in
aas
jns
movsbl
xor
imul
push
imulb
push
sarl
testl
sub
js
fs
and
clc
pop
push
addr16
adc
cmpb
pop
jmp
mov
mov
mov
or
adc
je
out
in
dec
pusha
and
mov
pop
adc
addr16
dec
dec
in
mov
mov
and
mov
aad
dec
pop
push
push
aas
adc
arpl
ss
call
faddp
and
scas
cmc
add
imulb
add
sbb
jmp
stc
int3
out
cmp
stos
jmp
xorl
sbb
lods
mov
and
int
push
movsb
stc
sbb
leave
gs
sti
sub
pop
popf
jnp
in
xorl
std
pop
cmp
test
lock
call
testl
les
mov
fldl
int3
adc
sub
scas
adc
dec
sbb
lods
pop
arpl
popa
loope
xorl
jp
mov
pavgb
push
pop
mov
out
je
sahf
int
mov
es
jne
sub
mov
add
pop
cmc
adc
or
inc
push
xor
xor
repnz
push
add
stc
adc
sarl
int3
jmp
and
rcll
dec
mov
fidivs
push
sti
push
inc
xor
js
xchg
das
inc
dec
mov
cmp
mov
jge
nop
lds
fisubs
inc
pop
addl
xlat
in
ret
dec
mov
aaa
mov
and
aam
sbb
adc
mov
data16
sbb
adc
cmp
sbb
mov
in
jle
mov
in
andb
xchg
xchg
sahf
mov
xlat
int
in
shlb
jmp
aaa
xchg
push
mov
fildl
dec
lea
mov
dec
leave
es
cmp
pop
sub
shr
cmpl
jb
aaa
add
cmc
add
sbb
or
testb
xchg
pushf
fidivl
xchg
jns
cmp
adc
out
popf
jmp
rorl
mov
pop
das
repnz
jne
push
js
out
push
xor
add
jns
call
xor
cmc
xchg
xchg
cld
add
outsb
imul
pop
xchg
jb
mov
imul
pop
jmp
pop
mov
daa
and
sbb
xchg
or
mov
xor
cmp
popf
inc
xchg
mov
xchg
mov
aad
mov
iret
ret
xor
lret
pop
jge
add
repnz
ret
mov
mov
fs
adc
adc
fcompl
jle
jb
ret
mov
bound
xchg
loop
scas
lods
sarl
sub
sub
call
mov
faddp
ficompl
xchg
push
enter
dec
aas
mov
imul
fnop
jmp
sub
xor
adc
pop
push
and
loopne
push
pop
test
inc
push
pop
lcall
daa
xchg
fprem
aad
fistps
sti
dec
data16
sbb
xor
ljmp
lret
lods
inc
fildl
pop
push
mov
add
stos
sti
sbb
xchg
pop
sar
ljmp
mull
and
test
pop
call
mov
pop
push
cmp
cmp
add
xchg
sbb
out
mov
or
lods
lods
test
pop
xor
loopne
pop
cmp
pop
in
outsb
inc
pop
adc
test
lds
in
inc
pusha
test
das
aam
negb
int3
roll
dec
testb
in
fisubrs
cmpsb
pop
lock
jae
jbe
cmp
arpl
paddq
cmp
fidivs
divl
xchg
sub
or
sbb
xchg
fwait
inc
mov
punpcklbw
cltd
mov
and
push
cmpsb
aam
push
gs
sti
hlt
and
fistps
nop
movsb
setg
icebp
cs
mov
mov
xchg
or
adc
cli
lret
insl
aad
out
jne
cmpsl
xor
int
lret
cltd
aam
push
cmp
xchg
sti
aas
shrb
xchg
adc
loope
xlat
and
mov
mov
xor
daa
inc
sub
pop
movsl
sahf
dec
ror
out
cmc
lods
test
xchg
sbb
bnd
sbbl
mov
cs
adc
into
fisttpl
in
and
call
arpl
fiadds
sub
dec
push
or
jno
sbb
xchg
mov
mov
add
daa
outsb
sub
xchg
adc
push
jle
dec
outsb
fisubrs
cmp
cld
and
mov
lret
dec
and
pop
loop
leave
dec
lods
push
mov
push
sahf
add
or
int3
je
mov
imul
pop
in
clc
jnp
ret
push
rcrl
shl
xor
dec
insl
adc
dec
xor
jp
mov
es
icebp
clc
addr16
mov
rorl
xor
cmpsb
test
imul
mov
outsb
adc
jg
cmp
sub
mov
sub
divb
mov
movsl
push
inc
jp
sbb
pusha
cmc
les
add
sub
lret
hlt
movsl
or
lods
icebp
imul
pop
or
stc
sub
jp
in
dec
std
out
mov
or
aaa
cmp
call
addps
pusha
jg
mov
mov
and
std
cmp
mov
jns
cmp
shrb
dec
rorl
cmp
cs
movsl
lcall
imul
sarb
repnz
cmc
aam
aad
mov
xlat
cmc
outsw
mov
and
jne
rep
adc
bound
movsl
and
or
and
orl
sub
lods
out
shrl
sub
stc
popa
or
repnz
stc
xor
lock
aam
mov
dec
xchg
call
sub
cmpsl
mov
cmp
xchg
sub
pop
jae
test
ja
ljmp
and
push
jle
lcall
dec
mov
sbbb
mov
mov
mov
sarl
cmp
ljmp
jne
pop
js
pusha
jge
pextrw
or
adcb
jo
jle
xor
pop
aad
mov
cmp
popf
mov
adc
hlt
fwait
or
pusha
mov
ljmp
inc
push
xchg
add
int
insb
sarl
xchg
insl
cmpsl
or
pop
sti
push
lds
sahf
push
mov
popa
in
pop
xchg
adc
jno
fwait
js
test
into
push
lea
pop
xor
hlt
fcoml
lds
cmpsl
out
popf
pop
pop
add
mov
jge
test
stos
add
dec
in
ret
cs
cmp
hlt
in
fcmovne
sbb
sub
push
scas
sbb
mov
mov
bound
push
leave
icebp
fucomi
cmp
mov
aad
aad
jmp
rolb
jne
ret
rol
mov
pop
lds
cmpsb
dec
negb
lcall
enter
scas
cld
mov
dec
inc
add
js
insb
cmp
mov
hlt
cwtl
mov
dec
xor
ljmp
je
fsubrs
shll
out
mov
lret
dec
adc
popa
sub
cli
negl
sub
ss
lea
movsb
fs
pop
mov
pushf
pop
cmpsl
fiadds
fbstp
sub
popa
jle
push
mov
inc
and
es
in
sti
mov
sahf
cmp
push
jns
adc
xor
sti
adc
test
cld
test
js
mov
sub
in
les
dec
sbb
push
and
iret
push
pop
xor
push
aas
test
cmp
sub
add
xorl
lds
sub
fwait
xlat
xlat
push
std
mov
icebp
pop
cmp
push
inc
pop
imul
fsubl
inc
pop
roll
out
mov
divb
push
cmp
pop
adc
aad
jb
ds
repnz
divb
pop
out
mov
pop
mov
xchg
les
imulb
fcomps
cli
out
lahf
imul
cwtl
insl
int
adc
mov
daa
cld
push
into
cmp
and
cltd
mov
fists
icebp
inc
gs
xchg
pop
shll
pop
xchg
and
js
mov
paddusw
sbb
ficompl
pop
push
andb
test
jp
je
or
jle
test
adc
mov
inc
cs
testl
or
rorl
lcall
cmp
cmp
into
push
mov
add
add
inc
adc
fyl2x
int3
add
bound
lds
jecxz
lock
adc
scas
fcmovnb
adc
push
in
pusha
ss
and
das
out
xor
mov
test
xor
out
ret
and
pushf
dec
stc
and
pop
ds
sub
add
xchg
sbb
mov
in
mov
or
or
sub
mov
and
pop
ds
add
pop
rorb
push
rorb
fdivrs
popl
fsubrp
xor
dec
push
jge
cmc
shrb
sub
iret
xchg
insb
fsubrp
pop
sbb
ja
imul
cmp
dec
aam
cmpsb
xchg
std
aas
inc
mov
mov
dec
imul
into
or
shrb
mov
add
movsb
cmpsl
movlhps
add
cmp
lcall
out
shrl
stos
xor
popa
jbe
mov
imul
loop
adc
fidivl
push
out
ss
call
gs
iret
lods
loopne
mov
mov
mov
dec
lret
add
adc
and
ss
in
lret
pushf
shrb
aas
inc
sti
lahf
sahf
and
es
mov
int
sub
mov
lret
ret
and
adc
test
fs
jae,pt
jle
sbb
inc
jg
dec
outsl
fbld
pop
sub
out
daa
popa
xchg
pop
inc
jge
jl
jne
scas
repz
cs
dec
fs
mov
iret
stos
sti
cwtl
adc
mov
pop
adc
sbb
add
js
lock
gs
mov
jne
pop
rol
popf
fdivr
adc
push
daa
add
stos
insb
rcl
in
sub
imul
lret
xchg
lock
adc
dec
fmuls
or
in
sub
jmp
ds
data16
jnp
xchg
mov
cmp
push
std
mov
ljmp
int
jecxz
cmpsb
fsts
inc
cmpsl
mov
icebp
scas
or
out
adc
inc
push
and
jae
xchg
mov
ret
mov
insl
outsl
push
jecxz
push
mov
and
fnsave
insl
lods
lds
loop
negl
in
jbe
xor
dec
adc
pop
stc
sub
bound
sahf
out
cwtl
or
in
xchg
jbe
jle
cmp
sub
jge
insb
dec
cs
add
loopne
cs
inc
xchg
push
lea
inc
mov
test
in
cmp
inc
sub
sbb
xchg
push
test
loop
scas
mov
lret
test
jl
test
cli
fwait
sbb
jmp
shrl
cmpsl
mov
mov
stos
mov
inc
icebp
add
mov
xchg
mov
xchg
scas
push
jb
or
push
xlat
mov
inc
add
sbb
scas
inc
addr16
insb
push
sbb
in
mov
call
stc
into
jg
xor
jmp
jge
fucompp
sub
jl
inc
lea
cmc
test
imul
imul
and
xchg
or
mov
and
pop
sahf
xor
dec
xchg
pop
cmpsl
xchg
xchg
cwtl
std
mov
fsubl
rorb
nop
mov
fldt
cmp
pop
or
je
push
adc
js
test
and
idivl
jns
lods
sbb
int
mov
push
cmp
bound
ja
xchg
push
dec
xor
pop
imul
and
addr16
popf
scas
jg
fdiv
aas
int3
push
imul
xor
shrb
or
push
xor
sbb
enter
push
cmp
orl
or
mov
sbb
or
push
lea
fcmovu
or
dec
cmpsl
das
cmp
iret
inc
mov
inc
adc
jnp
sti
adc
mov
cmpl
dec
push
lret
gs
mov
pop
jle
into
xchg
xor
or
xchg
das
xor
push
xchg
jae
sub
inc
or
jne
insb
add
pop
in
out
mov
or
mov
popf
les
mov
enter
jb
dec
cmp
pop
inc
adc
mov
jae
cmc
cmovne
adc
test
xchg
push
outsl
adc
scas
push
pop
nop
je
loopne
pop
xlat
out
pushf
mov
pop
enter
dec
inc
data16
push
cmp
push
mov
push
inc
pop
aaa
pop
and
xchg
arpl
daa
jae
sti
mov
jmp
gs
xorb
mov
outsl
cmp
subl
fists
dec
mov
cmp
mov
rolb
sbbl
lret
and
sbb
dec
jb,pt
xchg
mov
xorb
adc
sub
add
or
mov
mov
repz
fs
push
icebp
ljmp
fwait
mov
cli
xor
add
loope
std
mov
xchg
int3
xchg
sbb
push
lods
mov
ds
lock
sbb
sbb
popl
leave
in
lret
iret
pushf
and
jns
or
lock
mov
adc
clc
xor
lock
push
push
mov
xchg
jb
sbbl
adc
shr
out
pusha
in
sub
scas
dec
outsl
and
or
xchg
mov
in
mov
ds
pop
dec
loope
roll
cmp
aad
in
je
int
and
fmull
popf
pop
or
or
xchg
xchg
inc
and
data16
push
addr16
lahf
mov
dec
arpl
stos
jp
mov
pushf
sbb
rorb
pop
cmpl
mov
pop
jge
lds
std
add
cmpl
call
cmp
cld
mov
hlt
inc
cmpsb
inc
data16
xor
jp
pop
and
imul
fnsave
pop
movsl
arpl
dec
push
sub
fstps
push
insb
imul
inc
cltd
cmp
mov
cmpsb
adc
test
enter
popa
xchg
ss
sahf
jnp
jnp
fldt
faddl
pop
mov
xchg
nop
xor
std
lret
push
dec
dec
jg
push
mov
movsl
push
vmread
aam
xchg
cmpsb
cmp
add
ret
add
add
mov
dec
es
leave
dec
das
pushw
lret
fsts
inc
mov
loope
push
lret
shl
mov
adc
clc
ret
stos
cmp
movb
std
dec
incb
or
push
ret
and
mov
mov
pop
or
xchg
fidivs
or
das
in
adc
ja
scas
jl
dec
out
stc
sbb
roll
push
cltd
cmp
sub
cmc
push
inc
in
scas
test
xchg
or
shl
shlb
mov
fdivr
repnz
xchg
xchg
cmp
jbe
push
call
xchg
imul
jae
test
or
pop
xchg
inc
outsl
xchg
mov
sub
pusha
lahf
nop
pop
mov
xchg
testl
push
jl
cwtl
pop
insl
xchg
mov
dec
xchg
rclb
pop
int
aas
mov
and
test
enter
add
pop
int3
sbb
ss
aaa
or
sbb
cwtl
gs
stc
mov
pop
ret
xchg
imul
sbb
jns
arpl
mov
mov
aas
push
xor
mov
mov
cmp
mov
and
scas
xchg
sub
cmp
arpl
aas
lea
mov
lea
inc
mov
sbb
push
xchg
push
outsb
jmp
or
push
clc
pop
jne
rorl
lods
xor
mov
jae
cmp
add
mov
fidivrs
shrb
jae
das
add
insb
jnp
es
dec
fldcw
jmp
sahf
dec
and
lret
mov
enter
push
pop
mov
xchg
jo
mov
dec
insb
in
pop
nop
scas
mov
and
cmpsl
mov
add
es
dec
or
lds
outsl
sub
mov
jl
mov
xor
mov
xchg
scas
out
loop
push
jb
sbb
push
xchg
into
lahf
popa
lret
outsl
jmp
lock
lods
jmp
mulb
fsubl
sti
ds
sbb
mov
nop
rcrb
pop
mov
sub
fldl
pushf
fs
add
stos
mov
adc
and
pop
pop
push
cmc
lret
push
mov
hlt
push
jbe
xchg
iret
ficompl
push
insl
dec
fucomip
bound
out
pop
jno
add
mov
jecxz
out
add
fwait
jns
mov
and
xchg
or
cmpl
push
and
hlt
scas
in
scas
inc
cwtl
stos
jle
mov
movsb
test
scas
jmp
ljmp
shr
aam
popf
mov
iret
insb
jns
in
insb
sub
das
sbb
mov
out
lahf
out
mov
sbb
mov
in
pop
push
jmp
fisubl
xor
sub
aad
cmp
sbb
push
pop
mov
pop
add
std
push
and
or
lock
bound
sbb
jno
push
inc
xor
repnz
mov
mov
sbb
xchg
pop
push
stc
fwait
xor
or
sub
lea
insb
cmp
sbb
jno
addb
lods
ds
sbb
lcall
in
mov
lea
mov
cmp
add
push
pop
push
sbb
pop
jb
gs
rclb
sub
loopne
orl
rorl
cs
jo
or
lahf
xchg
mov
xchg
push
in
scas
xlat
pop
pop
push
dec
sub
sub
push
mov
jb
addr16
dec
fidivs
and
sar
inc
push
pop
pop
ficompl
loop
mov
push
lds
mov
pop
in
in
dec
das
sbb
out
insl
xor
cmpl
pushf
inc
and
imul
add
mov
cmp
inc
icebp
sub
test
jbe
add
nop
add
and
mov
movsb
nop
mov
or
pop
inc
jae
fs
add
or
pop
movsl
outsl
sbb
jbe
pop
repz
inc
push
xchg
mov
add
or
or
xor
add
jle
jmp
push
pop
imul
pop
xor
pop
les
jae
rcrl
out
jle
xchg
mov
sbb
movsb
mov
mov
jmp
fdivr
cmc
jae
stos
sub
repnz
repnz
and
inc
dec
pop
cmc
stos
inc
fisttps
lcall
mov
lods
test
cmp
mov
xchg
lods
sub
mov
fidivl
mov
lret
lcall
xor
xor
ret
out
sbb
lock
add
lea
xchg
fstpl
inc
fcmovnb
xchg
and
repz
jo
add
pop
fnstenv
jge
cmpsb
mov
cwtl
rcll
and
pop
inc
sbb
enter
adc
mov
outsb
mov
mov
scas
lock
lods
loope
add
xor
notb
out
or
outsl
inc
mov
test
adc
cmp
movq
push
pushf
xor
mov
mov
xchg
loopne
xor
scas
mov
sbb
adc
loope
or
mov
cmp
fadds
cmp
arpl
inc
pop
jmp
cmp
inc
pop
jg
jnp
and
dec
push
dec
cld
out
js
notl
add
mov
mov
imulb
fs
and
mov
enter
movsb
jne
cmp
sbb
rcrb
cmp
and
mov
add
xor
pop
out
clc
cmp
sbb
mov
jl
mov
inc
das
scas
mov
stos
imul
xor
pop
xchg
add
fisubrs
push
and
out
out
cli
jb
stos
xchg
sub
leave
cmpsb
ja
pusha
mov
imul
inc
out
fwait
test
mov
and
mov
pop
gs
push
pop
and
test
sbb
int3
loopne
adc
xlat
aam
outsb
sbb
clc
out
push
pop
inc
dec
fxch
and
fcompl
gs
dec
xor
ss
int3
or
adc
dec
insb
sbb
or
loopne
jne
inc
gs
dec
negl
pop
imul
sti
sahf
movsb
sbb
incl
or
iret
paddw
sbb
push
push
sub
int3
repnz
in
add
pop
push
cmp
pop
xchg
rcrb
or
pop
ja
inc
ljmp
sub
push
cmpsb
aam
pop
orl
sahf
scas
mov
push
and
jns
rcl
dec
in
js
mov
sub
das
fiaddl
cmp
xchg
jbe
sbb
insl
dec
movsb
add
add
jb
cmpb
ficomps
adc
xchg
sub
jl
sbb
and
inc
subl
fldt
sub
das
sbb
fwait
pop
scas
or
scas
mov
xchg
outsb
xor
dec
out
movsl
outsb
std
push
mov
push
add
loope
jl
xchg
and
inc
sbbl
mov
repz
je
cmp
sbb
enter
mov
adc
out
in
push
mov
pop
inc
cmpsb
sbb
sbb
ds
and
add
pushf
xchg
out
lods
fs
xchg
xchg
daa
inc
mov
ds
cmp
mov
mov
dec
sahf
and
ss
cmp
pushf
pop
mov
call
das
or
pop
lcall
incl
popf
int
mov
sbb
xlat
dec
fwait
mov
xor
rclb
lea
pop
loope
aad
cmp
push
cwtl
jo
jne
ffree
frstor
pushf
orb
lock
frstor
dec
cmp
and
dec
pop
out
lods
shrb
test
rolb
jecxz
ror
adc
pusha
call
data16
add
fwait
cmp
add
mov
xor
mov
fildll
dec
cltd
pushf
pop
add
shrl
aam
mov
stos
cmp
and
call
stc
sbb
dec
dec
sub
sahf
out
scas
adcl
xchg
pop
add
lret
scas
jmp
and
es
xor
jb
test
iret
negl
js
ja
mov
cmp
or
bound
dec
dec
lret
or
mov
leave
neg
mov
movsb
pop
dec
psubusb
xor
jmp
insb
jo
xchg
repnz
sub
in
mov
cli
test
mov
pop
mov
adc
fs
inc
insl
outsb
das
adc
xor
mov
sub
std
xchg
faddl
popa
xor
call
enter
xchg
lahf
xor
imul
sub
cmp
sbb
push
dec
dec
rclb
pushf
cwtl
mulb
repnz
pop
pop
sbb
fisubrs
sbb
xor
jecxz
mov
es
mov
insb
and
es
adc
pop
jmp
fprem
mov
dec
sbb
pusha
push
inc
sbb
push
dec
testl
clc
xchg
mov
push
int
xchg
push
jmp
cmpsb
jp
imul
push
out
mov
sub
pop
cmp
dec
and
addb
cmp
sbb
in
dec
inc
jb
add
sub
xor
out
add
sbb
mov
mov
bound
inc
ret
aaa
repnz
leave
sub
mov
xor
push
and
andb
sarl
in
lahf
jbe
mov
sub
pop
mov
xchg
ror
xor
xor
test
cmp
jl
and
sarl
xchg
and
imul
jmp
sub
es
arpl
jmp
jge
pop
arpl
mov
jo
sti
cmp
xchg
clc
stc
ficoms
lds
mov
outsl
and
push
dec
jns
lret
mov
pop
sub
pushf
add
cmc
shlb
and
adc
fbstp
mov
clc
mov
and
xchg
int
fnstcw
cmp
fisttpl
lods
and
ja
or
stos
out
cmc
jl
ret
cmc
andb
sub
out
insb
xchg
sub
mov
jb
dec
mov
mov
cmpb
jmp
clc
enter
push
push
cmpsl
xchg
and
sbb
les
dec
xchg
out
dec
rorl
call
das
mov
pop
loopne
jp
add
jp
xor
mov
orb
pop
inc
lock
push
loope
ss
inc
jae
mov
or
lds
pop
test
xlat
outsl
cmpsl
psubw
mov
arpl
or
pop
cli
push
xchg
pop
and
lods
into
sub
or
mov
sbb
mov
push
lcall
pop
mov
mov
cmp
popf
popa
lea
xor
daa
xchg
int
dec
jns
dec
dec
ds
jne
xchg
mov
pop
xor
sbb
test
add
js
int
out
add
fdivrs
mov
testl
mov
or
xchg
arpl
pop
push
dec
lods
iret
jge
jns
inc
sub
add
stos
fcoms
xor
pop
and
sahf
sahf
cs
cmp
push
mov
inc
icebp
ret
sub
je
movsl
dec
mov
dec
xor
xor
stos
into
sub
sarb
movsl
popa
adc
into
dec
stc
shlb
arpl
fmul
cld
add
and
daa
fsts
icebp
notb
test
js
int3
stos
ds
cmc
les
and
adc
mov
fsub
sub
mov
dec
mov
rcl
sub
aad
lahf
shl
xchg
xor
pop
add
stos
mov
negl
mov
jns
movl
mov
sbbb
fs
mov
outsb
frstor
mov
div
and
roll
ret
mov
out
mov
fdivl
out
insl
test
shrl
sbb
fwait
pop
and
sub
cmp
ss
inc
xor
mov
movsl
jo
cmp
and
sahf
xchg
dec
push
enter
rclb
sbb
std
pop
push
out
pop
xchg
or
mov
pop
adc
adc
xor
fdiv
arpl
inc
xchg
sbb
cmp
shrb
cmpsb
dec
addr16
sti
fmul
push
xor
outsb
xlat
mov
jnp
decb
aaa
dec
movsl
fs
push
subb
pop
cmpsb
es
push
mov
adc
xchg
push
popa
mov
mov
push
movsl
xchg
enter
adc
xor
in
sub
adc
mov
test
mov
stc
out
lcall
adc
xor
or
out
fnsave
xchg
xchg
insb
scas
jo
xchg
add
mov
lahf
icebp
adc
or
mov
int3
outsl
ss
dec
fmuls
jmp
pop
mov
and
push
xor
jl
xor
cmc
mov
or
imul
xor
cs
fldln2
xor
daa
add
stos
lahf
bound
jp
jp
mov
pop
xor
icebp
jne
out
les
sti
jmp
std
in
mov
rclb
aad
mov
jb
sub
andb
xlat
subl
pop
mov
fiadds
je
xchg
js
imul
add
cmpsb
stc
cmp
jmp
xchg
mov
lcall
xchg
lcall
jp
pusha
mov
popa
or
in
popf
ljmp
pop
dec
jmp
jle
jmp
pop
bound
xor
xchg
xor
lcall
insl
icebp
in
popa
jp
inc
dec
stos
push
add
xchg
pop
idivb
stos
pop
iret
fistpll
xchg
jle
adc
pop
out
push
pushf
insl
sbb
arpl
xorb
sahf
pushf
pop
in
shlb
xor
call
xor
in
sti
rcrl
xor
rcrb
inc
jnp
daa
xchg
inc
sub
fwait
push
push
roll
test
adc
aad
and
sub
into
iret
push
aam
test
hlt
pop
mov
incl
arpl
cmp
adc
jae
or
sub
inc
cmp
jno
imul
bound
jne
mov
in
daa
cmp
mov
adc
mov
ljmp
mov
lahf
pushf
sar
orb
ja
leave
lock
mov
or
cmp
cmpsl
popf
or
sub
test
push
je
or
adc
addl
punpcklwd
push
je
mov
push
nop
mov
lahf
mov
daa
xor
pop
jge,pn
push
mov
adc
pusha
sub
push
adc
mov
cld
and
xor
pop
pusha
and
test
adc
mov
mov
out
aad
cwtl
inc
movsl
xor
inc
cltd
imul
lock
xchg
std
lea
jle
mov
or
jecxz
out
mov
ret
fwait
sub
jno
test
into
decl
mov
test
xor
icebp
push
mov
stos
sub
dec
jb
mov
pxor
dec
jge
mov
jae
fiaddl
jge
inc
insb
xchg
dec
scas
mov
fldl2t
repnz
stos
bound
and
lods
cli
and
shrl
lret
mov
ror
dec
adc
mov
mov
and
sti
push
iret
dec
fstpt
xor
fmull
lahf
adc
xor
sub
mov
mov
in
adc
cmpsl
and
ret
lods
mov
mov
mov
xchg
mov
shr
ja
div
dec
aas
popf
popa
sbb
mov
repnz
rcr
lret
xchg
mov
xlat
call
mov
push
inc
es
and
cs
or
pop
popf
arpl
and
fwait
test
and
test
push
fs
push
sarl
pop
mov
cltd
xchg
mov
dec
mov
rcll
cmp
mov
dec
dec
mov
jle
push
or
xor
mov
mov
mov
rclb
cmp
negl
sub
cltd
cmp
jg
mov
testb
sbb
xchg
insb
sub
inc
stc
xchg
bound
jecxz
orl
stos
push
insb
ficompl
mov
mov
mov
testl
sub
sbb
mov
notl
mov
push
dec
adc
mov
adc
lret
inc
xchg
dec
fcoml
mov
cmp
jge
inc
or
mov
lret
testl
decl
mov
mov
cmp
aas
pop
test
add
xor
xlat
gs
fdivrl
cmpsl
in
sub
jbe
cmp
or
inc
lahf
mov
icebp
jno
stos
lea
repnz
std
jp
jne
scas
pop
aam
push
add
sbb
rcrl
iret
adc
or
add
xor
pop
cwtl
add
or
push
lock
test
imul
sar
push
sbb
lds
cmpsl
ret
data16
jbe
mov
xor
or
add
int
adcb
fucomip
dec
bnd
jge
xchg
mov
ret
bound
push
sahf
or
push
ret
mov
mov
stos
aam
icebp
sbb
sub
imul
lock
mov
in
jae
xchg
repz
pop
mov
es
cwtl
inc
fwait
std
and
or
xchg
mov
jmp
pop
jo
adc
loop
xor
inc
mov
cmp
adc
mov
ljmp
orb
mov
loop
imul
jbe
ret
frstor
mov
fs
cmp
nopl
outsl
jge
test
ds
push
sbb
loop
mov
xchg
jmp
mov
in
pusha
xor
mov
dec
clc
sub
imull
out
pop
ja
lahf
xor
cld
and
dec
neg
pop
pop
pusha
mov
mov
mov
xchg
sbb
adc
stos
outsl
out
out
jb
cld
enter
aam
sbb
cwtl
sti
pop
jl
lret
cmp
push
sbb
push
je
sbb
cwtl
ds
mov
sarb
popf
lahf
sbb
ret
xchg
out
insb
je
mov
pop
fnsave
lret
push
pop
push
std
cmp
sbb
inc
testl
add
imul
aam
adc
mov
push
jb
jno
mov
inc
icebp
push
xor
mov
mov
push
cmp
insl
xchg
insl
jnp
stos
movsl
mov
out
xor
cmp
adc
imul
xchg
lret
jmp
mov
sbb
mov
movsl
xor
xchg
popf
mov
call
jbe
jmp
and
adc
int
or
mov
rclb
cmp
rclb
inc
inc
in
add
shrl
push
adc
stc
sub
mov
loop
jo
mov
dec
push
aaa
pop
sub
jp
jle
popa
stos
inc
add
xor
adc
and
cmpb
rcrl
inc
inc
sbb
jle
imul
jns
adc
pop
out
inc
sbb
mov
clc
lock
push
xchg
je
and
mov
aam
mov
mov
leave
roll
push
mov
outsl
rcl
popa
jge
or
push
int3
out
loop
and
movsl
jnp
jmp
add
int
cld
inc
ss
and
cmc
adc
mov
inc
pop
inc
fmull
mov
shl
movsl
mov
je
jmp
cs
dec
dec
leave
and
addl
hlt
lods
mov
mov
pop
xor
lcall
rcll
adc
lret
jle
mov
dec
xor
dec
scas
inc
pushf
cwtl
mov
aad
dec
dec
cltd
fadds
aam
sbb
popf
dec
outsb
add
aas
mov
iret
jo
adc
xchg
aam
inc
sbb
sbb
in
fdivrs
add
mov
xchg
cld
pop
xor
punpcklwd
mov
lods
outsl
rcrl
loopne
xor
cltd
xchg
pop
mov
filds
dec
or
pop
es
jp
inc
push
jb
mov
mov
mov
in
fbld
subb
out
imull
cwtl
add
loop
imul
repnz
ret
push
pop
sbb
pushf
iret
add
cmpsb
mov
arpl
notb
adc
pushf
push
into
loop
xor
and
mov
idivl
ljmp
pop
jl
jae
sbb
mov
js
pop
jno
cmp
adc
addl
stc
pop
stos
int
or
cmp
cld
loopne
popa
mov
xchg
rcrl
jnp
sub
jae
sbb
cmp
mov
inc
sub
fdivs
add
and
cmpb
mov
fs
mov
leave
aam
dec
pop
add
test
pop
fs
adc
add
aaa
sbb
fsts
popa
push
mov
jl
xlat
fdivp
mov
jp
mov
pop
pop
inc
jp
rol
mov
rcrl
inc
pop
ficompl
cmpsb
add
lret
jle
inc
insl
pop
cwtl
outsb
popf
in
in
adc
shll
negb
dec
cmc
jl
orb
cld
xor
pop
mov
sbb
testb
enter
mov
popf
cmp
jg
les
imul
enter
mov
jmp
loop
sbb
push
sbb
sub
mov
and
insl
int3
inc
jg
loopne
adc
mov
dec
sbb
es
movsl
loope
xor
sub
es
jno
jge
aad
dec
ficomps
push
xor
imul
add
sub
dec
sub
pop
test
cld
enter
mov
fimuls
pop
into
inc
jbe
push
push
mov
xchg
imul
adc
xchg
fiaddl
mov
inc
cwtl
mov
scas
inc
mov
pop
mov
leave
outsl
test
xor
stos
sti
loope
enter
js
mov
push
lahf
adc
mov
push
xchg
rcll
push
neg
pop
stc
mov
and
xchg
out
ljmp
or
jnp
std
mov
es
aas
sarb
popa
es
in
pop
loopne
and
jne
adc
fs
add
inc
pop
jle
jae
pushf
sbb
enter
cmp
gs
je
aaa
cli
scas
lock
js
loopne
sti
sub
sarb
iret
popf
scas
mov
js
pop
sti
inc
mul
cli
push
push
inc
push
fwait
xor
mov
inc
jmp
inc
cwtl
jnp
inc
js
mov
jne
pop
adc
pop
icebp
xchg
xchg
xchg
call
cs
and
inc
dec
loopne
dec
iret
std
jne
cmp
jmp
jp
out
sub
aad
mov
aad
int
in
sti
pop
add
and
push
outsb
adc
imul
scas
ret
mov
lds
pop
sbb
mov
aas
add
loope
in
push
push
test
inc
subb
cmp
mov
sub
inc
daa
nop
mov
fstps
cs
test
repz
lods
jns
icebp
repnz
ret
add
sub
inc
cmpsl
pop
jle
mov
push
ds
or
pop
out
inc
into
cmp
or
aaa
repz
and
out
loopw
add
imul
mov
or
cld
mov
fstl
loope
sarb
scas
repz
movsb
pop
or
xor
mov
pop
jg
adc
cwtl
jmp
not
cmp
xchg
fsubrl
jnp
mov
push
mov
jp
sarl
jmp
hlt
sub
dec
in
jb
cltd
mov
jnp
jg
hlt
test
cmc
nop
xor
pop
ret
cmp
cs
jecxz
mov
jne
repnz
xchg
das
adc
stos
arpl
inc
das
inc
pop
or
cmp
addb
push
inc
mov
repnz
or
daa
dec
cmp
mov
addb
inc
mov
or
mov
mov
dec
mov
pusha
enter
cmpsb
sub
sarl
jle
sub
jb
mov
sub
ss
add
mov
sbb
out
testl
cmpb
sahf
mov
idivl
daa
or
xchg
or
loopne
outsl
jp
stos
mov
mov
jmp
nop
ljmp
jl
dec
movsb
mov
dec
cltd
xor
daa
jo
mov
mov
gs
mov
pop
xorl
xor
dec
dec
jae
cmp
mov
test
xchg
nop
xchg
in
cmp
jnp
out
sub
leave
loop
outsb
dec
adc
adc
xlat
leave
addr16
pop
pop
in
sub
inc
cmp
inc
out
lods
xor
aas
test
cmc
gs
sar
subb
loopne
xchg
std
scas
sub
cmp
lods
pop
popa
push
mov
es
lds
mov
push
in
jecxz
fnstsw
cmp
lods
insb
fidivl
pusha
jne
mov
test
popf
adc
clc
cmp
adc
dec
and
rorb
add
insl
mov
into
sub
mov
sbb
dec
sub
cli
mov
test
out
xor
push
and
pop
icebp
sub
mov
enter
sbb
mov
or
and
pusha
mov
rolb
mov
test
data16
mov
lret
pop
push
int3
mov
xor
dec
das
lahf
loop
das
int3
iret
mov
dec
stc
mov
js
gs
icebp
rclb
xchg
cmp
adc
insl
and
ljmp
lods
pop
shr
xchg
pop
and
mov
xor
xchg
and
loopne
ljmp
pop
cmp
ret
scas
mov
lods
in
cmp
dec
xor
add
out
add
fwait
lret
test
clc
sarl
fisubrs
or
ds
je
inc
js
repz
mov
arpl
rorl
call
mov
popl
xchg
ret
repz
xor
lcall
gs
sbb
orl
sub
adc
cmp
xchg
xor
aad
sti
and
sbb
or
stc
inc
jecxz
jg
aam
mov
sbb
je
cmpsb
mov
push
leave
mov
fldenv
or
lcall
aas
mov
and
mov
cmp
sub
mov
out
idivb
rcrb
aas
push
cmpsb
enter
mov
jbe
mov
adc
bound
pop
push
pusha
arpl
cli
or
lods
cmp
mov
in
cmp
dec
dec
loop
inc
jl
fwait
lods
repnz
adc
movsb
sahf
cmp
mov
jecxz
mov
call
and
mov
and
jmp
push
mov
aas
dec
imul
or
popf
jb
sbb
testl
push
mov
arpl
dec
cmp
cmp
ret
jle
jp
jle
pop
popa
cmp
adc
mov
push
mov
sub
std
in
jb,pn
ljmp
cltd
add
dec
xor
sbb
pushf
sbb
rcr
dec
lods
leave
fisttpll
push
les
in
jle
pop
xchg
lea
sbb
stos
popa
xor
test
stos
hlt
pop
xor
and
mov
pop
cltd
sti
mov
push
xchg
cmp
les
pusha
pop
aaa
and
insl
fidivl
cmp
cmp
mov
pop
inc
xor
scas
fcomp
xchg
jle
pop
jae
movsb
mov
outsl
and
mov
mov
xchg
sbb
mov
cs
xor
mov
lock
cmpsb
in
pushf
push
bsf
out
popf
and
insb
inc
xor
push
jns
xor
pop
mov
push
pop
or
xchg
lret
xchg
dec
xchg
lcall
push
inc
hlt
rcrl
adc
mov
push
dec
xbegin
and
inc
sbb
outsl
jnp
dec
scas
and
push
pusha
ja
sbb
xchg
cmp
sub
repz
inc
or
loope
jae
popa
cmpsb
stc
add
sahf
jecxz
cmp
daa
or
xchg
ljmp
cmc
xchg
scas
jne
xchg
push
rolb
movsb
andl
loop
frstor
cmp
int
test
dec
mov
mov
mov
ss
dec
push
iret
and
mov
lods
inc
repz
adc
or
add
mov
mov
iret
pop
xchg
and
ret
jne
push
cmp
test
add
jb
mov
lds
jge
adc
inc
dec
in
xor
xchg
jae
lea
push
and
stc
pop
in
div
jp
sti
stos
mov
xor
and
loop
and
sub
fdivp
jl
jb
xor
pushf
test
dec
outsb
jp
push
sbb
pushf
sub
xor
sub
pop
sbb
mov
sti
fidivrs
hlt
popf
popa
shll
mov
jnp
inc
xchg
xchg
sub
jle
psubusb
sub
scas
adc
test
cmpsb
cwtl
cmp
mov
fcmove
cmp
adcb
inc
inc
adc
jl
inc
aad
pushf
xchg
lds
jbe
fcomps
mov
mov
ss
mov
dec
pop
and
push
inc
cmp
scas
inc
xchg
stos
lea
xor
test
in
sbb
insl
dec
or
pushf
out
test
push
flds
jbe
cmpsb
pop
inc
inc
aaa
out
dec
cmc
sub
sub
sbb
jae
test
adc
movsl
js
dec
mov
dec
sub
sbb
sub
dec
jl
and
mov
fs
or
xor
das
ja
test
mov
dec
insl
cli
push
stos
mov
sbb
arpl
and
movsl
and
sbb
push
subb
inc
imul
jl
cs
cwtl
out
jl
push
and
and
xor
inc
pop
addr16
arpl
xchg
mov
mov
jne
sub
imul
push
mov
inc
sbb
pop
and
fs
stc
repz
dec
xor
jns
nop
mov
aad
pop
sub
mov
fnstcw
ss
jp
inc
out
pusha
clc
and
in
in
xchg
iret
push
test
fsubp
imul
sub
cltd
cmp
rorb
or
push
insl
or
je
mov
aas
popa
adc
pop
idiv
shlb
dec
out
sar
cmc
or
dec
push
and
loope
jle
test
mov
sub
mov
std
cmp
jl
mov
add
and
scas
int3
dec
cmp
roll
jle
call
xchg
dec
and
repnz
cli
aad
mov
rclb
outsb
sbb
icebp
fxch
in
cmp
jnp
push
sub
xor
cmpsb
mov
fsts
out
orl
int3
mov
test
bnd
jns
xchg
xlat
divb
sbb
push
repnz
mov
sub
adc
add
test
sub
lock
add
cmpsl
fs
mov
lret
xor
mov
cltd
mov
mov
or
test
and
inc
mov
in
jno
jno
scas
xor
adc
cmp
pop
add
push
movsl
sbb
loop
adc
or
push
and
xchg
std
stos
pop
lret
and
mov
push
mov
adc
outsl
cmpsb
inc
rcrb
lds
test
out
xchg
and
test
mov
or
adcb
lods
aas
inc
in
mov
add
fldl
out
dec
cmpl
outsb
inc
dec
adc
pop
jp
dec
jge
movsl
sub
fwait
push
adc
xor
mov
adc
pop
cmp
rcrb
cmp
xor
lea
push
out
mov
inc
mov
lret
mov
pop
push
jge
addr16
or
pop
pop
push
mov
cwtl
pop
loopne
scas
hlt
inc
icebp
mov
inc
push
inc
and
jno
mov
push
xchg
dec
adc
das
sub
jp
push
xchg
lods
es
push
or
xchg
cmp
cltd
aaa
mov
mov
add
cli
cwtl
andl
jmp
mov
pop
ror
jp
dec
pop
test
test
ljmp
mov
mov
xor
push
cmpsl
mov
pop
add
in
push
cmp
pop
xor
cmp
cli
cmp
insl
dec
jo
cmp
lret
out
mov
push
mov
pop
pushf
sbb
ds
jecxz
or
inc
jmp
jl
jmp
inc
mov
movsb
daa
pop
mov
popa
dec
stos
idivl
aas
push
dec
mov
pop
leave
inc
cmp
xor
jle
cs
mov
cmp
imul
pop
xor
sbb
xlat
jp
xchg
lds
inc
repnz
mov
loop
mov
fnstsw
dec
and
push
aam
or
push
adc
daa
fnsave
lods
jmp
pop
mov
fwait
scas
inc
mov
orb
imul
repnz
cs
into
lret
xor
xor
mov
and
aam
jle
popfw
dec
add
lods
sub
std
xor
pop
add
mov
pop
scas
test
and
arpl
inc
insb
pop
push
sahf
test
xchg
jge
into
mov
lea
cmc
cmc
sarl
pop
repnz
negl
mov
lds
call
mov
add
push
push
jnp
pop
and
push
xorb
fsubrl
shlb
das
xor
mov
cld
and
call
leave
mov
mov
and
inc
stc
pop
lea
or
xchg
clc
ret
or
lods
enter
aad
push
push
inc
enter
icebp
inc
insb
xor
mov
scas
pop
leave
in
movsb
leave
lods
loope
or
jno
jmp
cld
mov
adc
ss
mov
dec
fwait
scas
mov
pop
or
dec
popf
lds
cmp
jl
or
xchg
push
gs
subl
mov
cmp
inc
mov
inc
adc
inc
mov
shlb
enter
nop
aaa
mov
mov
pop
test
adcb
xor
sbb
scas
cld
mov
mov
pushaw
fisttps
rorl
incb
mov
cmpsb
xorb
adcl
xchg
cmp
mov
std
test
scas
xchg
pop
adc
test
pushf
and
mov
cmp
fmuls
fbld
cmpsb
ljmp
movsb
lret
outsb
mov
out
push
and
outsb
push
and
nop
mov
xchg
xor
dec
ss
out
inc
xchg
inc
mov
push
sbb
test
xor
sahf
add
adc
or
lahf
jo
les
mov
bound
xchg
shr
cmc
mov
adc
cld
mov
inc
cmc
xchg
jge
push
fldl
mov
lcall
bnd
xchg
cmc
pushf
jne
mov
inc
int3
push
push
das
mov
test
clc
xor
nop
cmpsl
rclb
xor
mov
jns
int
adc
and
test
decb
outsb
test
iret
test
push
or
mov
cltd
out
adc
insl
mov
psubb
mov
lods
jg
push
pop
cmp
or
lods
mov
cmp
in
or
dec
cmp
fs
inc
jb
adc
hlt
sub
adcb
addr16
add
xchg
and
clc
xchg
gs
mov
loop
jns
sub
jp
and
pushf
cmpsl
sbb
cmp
dec
repz
daa
movsl
mov
push
dec
hlt
movsb
addl
loope
test
mov
stos
daa
adc
xchg
adc
xchg
mov
out
insb
inc
and
shrb
sbb
mov
lret
aam
negb
dec
repz
push
push
push
nop
repz
xorl
xor
push
pop
dec
stc
pop
daa
mov
lock
mov
stos
into
inc
sub
aad
sub
std
xorl
out
paddq
cmp
xor
je
rorl
mov
cmc
shll
daa
jg
decb
test
jle
aas
push
out
mov
nop
xchg
or
lods
lcall
lea
and
mov
sub
xor
ljmp
in
ljmp
sub
push
repz
push
mov
ret
cmp
stos
mov
jb
sbb
bound
mov
orl
mov
cmp
test
adc
out
sub
imul
adc
lds
mov
cmp
xchg
jae
fistl
jle
in
divb
mov
out
lea
dec
inc
mov
jmp
jl
dec
xchg
ret
xor
cli
test
push
add
fmuls
or
aaa
fcoms
les
mov
scas
pop
stos
popa
adc
dec
add
lret
add
xor
fdivrl
inc
mov
mov
and
or
icebp
cmp
iret
into
shr
lret
dec
mov
inc
andb
adc
xor
lods
push
data16
cld
cmp
push
fwait
leave
int
loop
push
mov
sub
mov
inc
aaa
hlt
imul
mov
push
in
out
sub
pop
push
aas
inc
push
sbb
cwtl
push
jge
add
lock
push
es
and
mov
hlt
ror
ja
cmp
xor
out
xchg
or
adc
cld
bound
jl
pop
outsl
enter
repz
cltd
dec
iret
add
mov
lock
fstpt
jge
lea
test
aad
shlb
xchg
pushf
jne
push
mov
mov
cmp
loopne
out
rorl
pop
or
ds
jo
cmc
rorb
pop
test
orl
scas
scas
loopne
loop
cmpb
fistl
fmul
xchg
add
pop
cmp
jbe
push
and
in
push
std
and
ss
add
cmc
sub
lahf
push
jg
add
cmp
in
fwait
into
movsb
cmp
jns
add
xor
sub
mov
fcmovb
mov
mov
out
push
xor
lahf
lcall
and
repnz
lods
xor
mov
xor
out
ficoml
je
push
pop
test
arpl
add
movsl
xor
cmp
std
xor
stos
test
into
add
xchg
in
enter
js
xchg
test
lods
fisttpll
dec
shlb
jge
adc
add
ja
jns
cld
mov
mov
out
or
pop
pop
xorb
add
rclb
push
or
ffree
jo
andl
mov
dec
inc
insl
mov
pusha
xchg
mov
ficoml
pop
imul
sub
push
les
mov
cltd
aas
sbb
dec
adc
test
add
push
dec
cmc
dec
outsb
aad
enter
jecxz
mov
add
dec
mov
adc
pop
mov
repz
cmp
loope
into
dec
pop
mov
in
adc
pop
xchg
in
ljmp
mov
mov
mov
push
bound
imul
popa
lods
jno
pop
shl
jb
sti
mov
in
imul
add
in
jp
and
imul
scas
jno
out
or
xor
rorb
push
je
and
fyl2xp1
jae
mov
cmp
decl
out
daa
and
mov
push
fs
cmc
cmp
xchg
ficoml
xchg
cmp
mov
mov
sub
test
push
xchg
std
divb
cmp
popf
jb
into
dec
cmp
out
xor
mov
aaa
loop
adc
sub
xor
or
and
push
lock
inc
jecxz
pop
xor
fisttpl
mov
or
cmpsl
sub
mov
dec
and
sahf
aad
cmp
repz
pop
std
aad
shl
pop
xchg
orb
pop
ds
lods
adc
mov
jp
dec
or
push
xlat
rorb
es
jb
or
stos
ja
sub
pop
mov
popaw
xlat
je
mov
cmp
pushf
mov
dec
mov
cmp
idiv
int3
ljmp
fstp
pop
notl
gs
je
sbb
mov
pop
leave
movsb
jmp
nop
jp
mov
int3
push
aas
dec
mov
cmpsb
mov
pop
jg
inc
repnz
push
dec
ljmp
xchg
pop
cmp
sub
testl
sbb
xor
ret
fldcw
inc
test
lcall
jge
arpl
jo
ljmp
inc
add
adc
mov
insl
sub
push
sahf
cld
test
adc
inc
fcomip
fisttpl
dec
sbb
icebp
jp
icebp
xorb
sub
mov
pop
dec
cltd
mov
add
jns
icebp
xchg
jmp
dec
jecxz
in
mov
mov
inc
cmp
adc
xchg
or
cmc
xchg
lret
fcomps
xchg
ret
pop
mov
mov
hlt
test
push
test
or
subb
lret
mov
adc
inc
mov
sub
mov
pop
aas
fsubrs
jno
fwait
and
shll
mov
ljmp
orb
daa
sub
mov
adc
fnstenv
repnz
push
aaa
sahf
sbb
jne
pop
add
out
jb
outsb
inc
loope
sub
sti
push
pop
mov
idivb
inc
xor
es
pop
xchg
sbb
and
xor
outsl
xorb
mov
push
add
lcall
lret
cltd
ret
nop
clc
dec
das
xor
shll
jmp
std
or
and
clc
cmp
popf
sarb
aaa
sbb
xchg
fs
shll
movsb
test
js
sbb
mov
pop
sub
lcall
fisttps
push
movsb
fwait
dec
xor
sbb
sbb
in
jbe
out
fbld
es
mov
mov
and
out
push
sarb
sub
and
mov
div
xor
dec
out
adcb
mov
fisubrl
arpl
xor
arpl
shrl
adc
in
out
fwait
in
adc
pop
cli
fildll
or
mov
dec
inc
aad
pop
mov
cmp
xor
mov
push
in
test
xchg
cmpsb
into
xchg
outsl
mov
pop
into
mov
shl
aas
cmp
push
jg
mov
dec
insl
pop
inc
or
stos
sti
mov
sbbl
xor
subl
mov
xor
fmulp
mov
lret
adc
mov
data16
in
loopne
push
sub
and
cwtl
xchg
or
jb
pop
add
in
fs
or
std
inc
lods
das
jmp
or
xor
movsl
out
mov
pop
in
outsb
stos
dec
mov
icebp
mov
lcall
inc
or
sub
xlat
cmp
jb
pop
xchg
icebp
cmpsl
jbe
mov
xor
xchg
in
jnp
inc
push
or
jecxz
int
lret
cli
push
roll
inc
dec
lods
or
mov
nop
jns
scas
inc
add
adc
cmp
inc
je
inc
insl
push
xchg
sbb
pop
add
stos
pop
cmp
fstpl
les
iret
fcompl
mov
jmp
sarb
mov
std
cmc
movzbl
dec
out
sub
fmuls
loopne
cmp
cmp
into
scas
sub
je
push
push
ss
clc
rcrb
adc
xor
mull
pop
xor
cmp
ret
js
push
jne
jne
adc
or
inc
popa
jecxz
mov
sub
xor
mov
sbb
sbb
sbb
push
fs
cli
sbb
inc
call
xor
shl
fucomip
mov
xchg
jo
push
cmp
shl
iret
sbb
in
jne
ja
lods
es
add
lcall
cs
paddq
cltd
add
ljmp
cmp
andb
jnp
sahf
sahf
jnp
cwtl
jl
shlb
push
add
stos
in
xchg
cmp
rcr
xchg
xchg
int3
inc
lret
test
mov
and
cmpl
mov
fsts
daa
and
cmpsb
insl
jmp
sbb
mov
addr16
leave
fldcw
sub
or
leave
xor
sbb
ficompl
int
sbb
nop
shlb
sbb
add
add
out
sub
pop
repz
into
xchg
lcall
shlb
je
ljmp
xchg
push
loop
xchg
and
jmp
stc
mov
push
cld
ja
mov
out
ss
imul
mov
or
dec
aad
xor
cwtl
out
push
sbb
add
ds
sub
push
aaa
lock
cmp
jo
in
sub
jecxz
inc
jb
roll
xchg
mov
push
shll
push
mov
xor
adc
ret
and
setae
pmulhw
fiaddl
outsb
leave
mov
insl
jbe
add
and
mov
int
jo
repz
push
inc
adc
ficoml
fdivrp
mov
cwtl
shrl
rcr
ss
add
loope
pop
push
adcb
inc
dec
imul
or
pop
out
test
out
sbbl
push
or
fs
add
ds
sub
xor
pop
stos
insb
jecxz
or
xor
xor
shll
xor
mov
std
repnz
sbb
filds
mov
sbb
pop
dec
insb
pop
aaa
sbb
or
ret
sbb
pop
mov
xchg
dec
adc
andl
movsb
ret
ja
jp
outsl
lret
jae
mov
in
xlat
arpl
pop
mov
push
jle
mov
pop
ficompl
cmp
push
das
ds
dec
mov
cwtl
adcb
out
push
inc
dec
stos
jbe
push
xchg
or
popf
jo
hlt
loope
stos
out
aad
inc
adc
and
movsb
les
call
pop
faddl
xor
inc
dec
jge
mov
loop
rorb
mov
cmp
in
jnp
pop
mov
pop
out
cld
hlt
lret
and
jns
mov
repz
das
xorb
inc
jo
jnp
mov
xchg
divl
fs
icebp
jmp
clc
inc
in
jae
mov
test
scas
pop
cwtl
cltd
mov
cmp
inc
dec
imul
cmpsl
push
enter
cmpsb
inc
cmpsb
test
adc
add
int3
sub
jecxz
jg
cs
xchg
je
xchg
add
and
hlt
inc
mov
sub
cmp
cmp
xchg
mov
add
repz
sbbl
sbb
xchg
repz
cmp
push
sahf
jbe
push
inc
push
test
xchg
inc
mov
data16
and
dec
cli
add
movntq
cld
idivl
cmp
stos
data16
cmp
cwtl
xor
sbb
add
jge
cld
cmpsb
ds
xor
push
loope
and
shrl
or
push
xchg
leave
xor
aaa
stos
inc
sbb
jae
imul
dec
loope
dec
or
mov
insl
add
nop
inc
mov
cmp
iret
xor
cmp
xor
cltd
testb
xor
inc
andl
pop
aaa
mov
jecxz
mov
lods
cwtl
insl
imul
jae
mov
int
mov
pop
sti
mov
shrb
push
pop
push
or
or
in
int3
imul
sahf
sbbb
pusha
test
fildll
cmp
loope
mov
pop
loope
lcall
mov
or
es
repnz
xchg
xchg
loopne
cmpsl
and
mov
gs
sub
sub
out
add
jecxz
das
sub
push
mov
and
cmpsb
sbb
es
xchg
pop
cmp
add
inc
cmc
dec
cld
sbb
pop
or
rcrl
and
insl
enter
pop
adc
mov
or
es
add
and
outsl
xor
mov
dec
enter
stos
out
and
repz
jmp
pusha
shl
pop
xor
xor
xor
sub
cmpsb
push
dec
xorps
or
jl
fsubr
inc
aad
lea
or
inc
dec
cld
test
insl
inc
gs
sbb
or
lea
pop
mov
add
cli
push
dec
lcall
xchg
es
ret
and
lea
loopne
in
idivb
mov
xchg
xor
mov
out
js
dec
cli
lods
xor
mov
jae
lea
push
movsl
hlt
xor
mov
add
cli
cmpsb
xchg
and
xchg
jae
xor
push
mov
ret
sub
mov
or
lret
mov
dec
push
xchg
popa
cmp
adc
dec
sub
sahf
pop
xchg
dec
sbb
inc
test
ret
pop
push
mov
arpl
cmp
out
sub
std
pop
xor
sahf
ror
int
mov
and
xchg
mov
dec
stos
pop
xor
mov
xchg
cs
mov
addr16
dec
pop
xchg
lods
out
add
jmp
or
ficompl
mov
cwtl
mov
dec
xlat
fcomps
mov
out
cmp
pop
mov
movsl
and
or
mov
push
shlb
arpl
int3
fsubrp
add
imul
and
subb
xchg
loop
pop
mov
insl
arpl
fiaddl
mov
jl
xor
cmp
mov
ret
popf
nop
cmp
sahf
scas
imul
inc
mov
inc
or
gs
cmp
jbe
inc
cmp
stos
fidivs
mov
mov
lock
shrb
or
repz
sbb
shll
rcll
pop
and
sahf
push
icebp
cmpsb
pop
leave
push
stos
sbb
les
or
es
jmp
mov
rcl
mov
sub
sbb
jl
je
popf
out
ds
add
xchg
xchg
and
mov
jle
insl
adc
cmc
dec
jne
mov
repnz
ja
or
push
sbb
dec
std
das
dec
stc
xor
xchg
es
test
add
xchg
pop
mov
mov
mov
movsb
arpl
push
arpl
gs
xor
rcrb
adc
in
movsl
inc
scas
in
mov
jo
sbb
xor
push
or
mov
sub
add
inc
xor
js
fwait
dec
daa
adc
pop
add
aam
out
fs
repnz
mov
aam
pop
inc
cltd
ljmp
jge
lret
and
ljmp
and
fistps
dec
mov
xchg
xor
sbb
out
das
xchg
push
scas
mov
xchg
jne
test
cmp
mov
fs
add
jg
pop
aaa
ja
and
sarl
and
ret
stos
mov
inc
sub
arpl
adc
call
mov
sub
lds
mov
mov
mov
inc
sbb
dec
lods
repnz
pop
int
hlt
scas
mov
scas
imul
mov
jecxz
xor
loope
arpl
cwtl
xlat
or
imul
jns
mov
aam
mov
jo
jecxz
adc
dec
xchg
cmp
pop
pop
inc
aas
shll
repz
push
xchg
in
hlt
iret
dec
out
ds
xor
jbe
ficoml
ret
dec
int3
xchg
jns
xor
mov
fadds
xchg
data16
adc
movsb
jnp
mov
dec
mov
inc
aad
subl
aad
dec
jne
sub
mov
or
push
inc
fcomp
xchg
add
xchg
add
push
mov
pop
loopne
out
or
push
cs
sub
mov
or
dec
sub
ljmp
mov
outsl
mov
xchg
pop
cwtl
cmp
out
rcll
subl
jae
ret
xor
daa
or
jp
movsl
psubusb
inc
testl
ret
pop
xor
cmp
pop
push
frstor
aam
stos
loop
shrl
out
and
or
hlt
pop
icebp
lret
inc
sbb
cmc
mov
sbb
je
and
enter
xchg
movsb
xor
stc
lahf
or
mov
das
sbb
push
movsl
ljmp
cmpsb
notb
jmp
lahf
cld
mov
mov
test
jo
inc
xorb
push
mov
mov
scas
pop
xchg
mov
js
or
ret
lcall
sbb
cltd
mov
in
cmp
xchg
push
xor
aaa
xlat
jge
stos
push
push
shll
cld
jnp
inc
dec
sbb
jg
lods
push
aam
outsl
insb
lcall
dec
and
dec
push
pop
push
jecxz
int
inc
cmp
movsb
lea
jge
jge
mov
sbb
and
sub
mov
mov
mov
mov
insb
xchg
sub
jp
xchg
pop
lahf
push
xor
sub
inc
inc
cmp
or
inc
in
es
fmul
cmc
shll
aad
xchg
pushf
mov
js
inc
dec
sbb
xchg
xor
aam
push
fidivrs
mov
dec
dec
jns
add
imull
shll
xchg
adc
push
mov
out
pushf
in
and
repnz
sbb
add
adc
das
cmp
xchg
fisttpl
shll
cli
into
cld
lret
loop
leave
filds
call
jge
xchg
inc
loopne
lock
arpl
mov
xlat
adcb
loop
cmc
dec
and
das
mov
outsb
mov
and
pusha
jl
and
xchg
enter
js
iret
ja
adc
pop
dec
push
push
xor
fiaddl
lods
aad
aad
lahf
iret
pop
inc
mov
adc
pop
xchg
ret
daa
adc
addr16
sub
fistpll
orl
insb
sub
popf
and
clc
pop
iret
loopne
test
fsubp
bound
mov
jp
xlat
push
xchg
jp
adc
mov
xchg
rorl
loopne
std
cmp
sbb
scas
les
xor
sahf
into
fdivl
push
push
popa
andl
xor
mov
dec
outsl
push
fdivrl
pop
add
aam
mov
xor
jb
lahf
enter
cmp
push
mov
ret
xorl
cwtl
push
and
fwait
xorl
jl
mov
iret
xchg
mov
es
jns
int
xchg
shlb
aaa
dec
sbb
nop
stos
scas
lock
adc
or
aas
enter
mov
jge
dec
cli
jp
ret
pusha
cmp
add
repnz
jge
sbb
mov
pop
add
sub
aad
mov
mov
xor
jecxz
out
adc
ljmp
push
cmp
sarb
out
jg
lock
cmp
das
movsl
dec
or
jnp
jns
xor
or
pop
or
push
ret
inc
or
repz
inc
out
xchg
pop
rcrl
cmp
cwtl
ds
aaa
xor
les
subl
insb
add
jb
mov
mov
fdiv
movsb
xor
mov
shrb
sub
push
lods
pop
shl
xchg
sub
fnstsw
xor
lds
repz
sub
pop
pop
sbb
xorl
movsl
fwait
das
sbb
jno
cmp
push
stos
cli
cwtl
insl
popa
sub
out
xor
enter
ret
test
stc
movsb
mov
push
and
jl
lods
cmpsb
xchg
push
mov
negb
repnz
int3
lret
nop
dec
mov
mov
xchg
pop
lods
jae
xor
addb
in
cld
push
inc
clc
push
daa
sbb
cwtl
addl
add
lret
add
sbbb
xchg
mov
ss
out
xor
loopne
mov
std
dec
mov
xor
and
jge
dec
dec
pop
mov
fldl
add
sar
insb
movsb
cmpsb
mov
je
mov
pop
rclw
mov
mov
out
adc
jae
jns
test
cmpl
push
fstpt
xchg
jecxz
xchg
into
in
cmp
popa
or
in
andl
xchg
and
jo
jl
pop
jb
daa
pmullw
push
mov
mov
test
or
and
push
ja
and
std
push
fcoms
pop
movsb
mov
out
repnz
ja
gs
jno
lret
add
and
fs
add
mov
fld1
lret
pop
jbe
out
mov
adc
jns
xchg
inc
lret
scas
inc
pop
jp
int3
sbb
xchg
pop
loopne
adc
lcall
push
add
in
cmp
pop
and
mov
sahf
sub
test
cs
mov
xorb
es
int
jmp
mov
int3
push
sbb
push
ds
das
test
test
mov
std
add
lods
and
jne
pop
jae
push
mov
sahf
lcall
nop
cmpsb
xor
sbb
xchg
rcr
cld
mov
mov
movsb
add
pushf
xchg
and
test
pusha
lret
loope
int3
dec
int
adc
sahf
inc
add
sub
gs
pushf
mov
lock
mov
or
xchg
imul
movhps
inc
dec
add
addl
xchg
das
je
cs
sub
mov
stc
push
dec
outsb
data16
xor
loop
je
xor
int3
repnz
inc
mov
sbb
pop
dec
cmp
cmp
int3
icebp
jg
lahf
add
ret
pop
adc
test
push
xchg
adc
jg
inc
jns
inc
add
movsb
push
aaa
arpl
lret
shl
repz
stos
decl
btrl
lcall
out
std
test
leave
loopne
and
xorb
push
fnstsw
adc
shrl
aas
leave
inc
cmc
xor
adc
ljmp
add
and
mov
jmp
sbb
or
sti
or
aam
jge
sbb
xchg
test
cwtl
jge
cmc
pop
and
fstl
loop
iret
ret
add
pop
mov
cmp
popa
cmp
aas
mov
je
outsb
pop
mov
add
fcmovnbe
scas
adc
mov
je
insb
nop
cmpsb
incb
icebp
mov
cli
push
out
dec
push
pusha
mov
scas
stos
jl
fstpt
jmp
cmc
add
push
je
lahf
loop
inc
mov
pop
cltd
push
add
add
jno
lods
ficoms
push
sub
in
dec
aam
xchg
mov
inc
push
repz
and
jno
inc
hlt
pop
cltd
int3
jl
fisubl
mov
sbb
fs
mov
mov
fldl
adc
and
jecxz
gs
in
ljmp
scas
jl
enter
sub
lock
movsb
ds
jge
sbb
cltd
sahf
insb
mov
adc
sub
jle
cmp
mov
fwait
je
fcomp
dec
loopne
int
rolb
cmp
outsb
push
mov
and
test
ds
fidivs
sbb
pop
shl
push
or
mov
pop
xor
imul
loop
dec
push
adc
or
xor
lock
xor
loope
cmc
xchg
mov
or
outsl
push
jl
test
ds
sub
jb
add
jle
pop
xor
sti
mov
pop
jmp
wbinvd
stc
out
or
jne
push
lcall
rcr
and
repz
das
call
movl
mov
mov
test
cwtl
add
ficomps
in
lds
outsl
cmp
xlat
and
pop
inc
js
xor
mov
add
pop
ret
orb
std
mov
xchg
out
xor
imul
in
daa
mov
inc
jmp
push
inc
stos
shl
xchg
or
fnsave
mov
sti
imulb
dec
jg
or
lcall
mov
fs
mov
sti
lock
into
pop
pusha
jbe
mov
inc
vpmadcsswd
push
or
mov
or
enter
push
fmul
loopne
xchg
sub
add
arpl
rol
movsb
in
fld
negb
frstor
push
or
pushl
mov
into
xlat
adc
push
mov
mov
add
lea
fs
sub
loope
xchg
subl
sub
mov
lock
mov
xor
pop
adc
add
movswl
test
fnsave
daa
rcrb
shll
mov
push
push
push
jo
test
mov
arpl
fmull
xchg
push
cs
add
jp
xor
sub
pop
fiaddl
cmp
scas
imul
insl
icebp
ss
imul
dec
or
int
sbb
loopne
dec
int
rcll
and
out
ja
das
fwait
mov
xorb
push
pushf
xchg
lods
mov
test
enter
xchg
push
dec
add
sub
shrl
sbb
xchg
xlat
xchg
xchg
sbb
sti
mov
pop
aaa
sbb
lret
push
mov
hlt
pop
icebp
mov
dec
dec
xchg
push
outsb
dec
lea
fistpl
mov
lock
jl
fldl
jp
pop
sub
adc
cmp
add
out
cld
inc
sbbb
add
lds
add
int
adc
and
fs
pop
dec
or
xorl
mov
sti
iret
dec
sbb
mov
daa
xor
rcrl
push
cmp
mov
push
mov
aam
xor
in
xlat
mov
decb
mov
push
in
jb
jbe
lods
push
or
or
and
cmp
ds
inc
cmp
jle
lahf
in
jns
fldenv
inc
aas
jno
pop
adc
int3
jns
lcall
les
inc
adcb
lret
adc
orb
outsl
lret
pop
push
and
jecxz
add
insb
push
test
pop
fisubrl
fwait
add
in
inc
push
lds
pop
pushf
insl
adc
mov
dec
fisubrl
outsl
jno
inc
pushf
out
or
xor
sbb
sti
scas
push
pop
mov
inc
xchg
push
cmpsl
iret
pop
inc
lahf
fs
stos
out
es
xchg
pop
mov
popa
adc
xorb
int3
sub
mov
mov
jbe
push
sub
xlat
pusha
cmp
nop
ret
dec
outsl
jns
xchg
add
loope
mov
mov
mov
add
daa
xchg
sbb
push
mov
dec
pslld
mov
or
adc
scas
enter
mul
fbstp
cmpb
ret
mov
or
enter
mov
push
fnstcw
int3
mov
out
pop
pop
lock
jge
add
pop
jns
push
jl
rcrl
xor
inc
or
repz
test
push
lahf
push
loop
ds
mov
imul
bsr
jmp
cmp
fnstenv
sbb
hlt
out
pop
or
dec
movsb
es
cli
lea
xchg
sti
mov
push
imul
mov
daa
push
pop
pop
inc
rol
cmp
mov
pop
xchg
mov
sub
mov
inc
mov
cltd
jl
std
xchg
stos
rcrb
jbe
dec
out
xchg
jo
ds
mov
or
ficoml
mov
addr16
fmulp
add
adc
adc
rcl
add
mov
xchg
lahf
int
pop
pop
arpl
inc
mov
int3
loop
enter
imul
fadds
mov
and
jmp
mov
ret
add
out
xchg
pushf
sbb
ret
push
test
xchg
sbb
rcll
aam
lods
push
lret
sbb
push
movsl
adc
out
cmovl
mov
jmp
push
inc
mov
push
and
push
jno
ret
shll
sbb
jl
sub
out
addb
mov
mov
dec
sbb
xchg
xchg
xchg
cmp
dec
std
push
or
pop
inc
adc
mov
js
sti
sbb
jecxz
cli
mov
mov
mov
mov
inc
sub
lods
or
sarb
fldt
lods
push
cmp
mov
pop
stc
lcall
jge
in
ja
sbb
sbbb
out
std
lahf
pop
add
sbb
jo
pop
out
add
insb
xchg
sub
rcrl
jecxz
bound
jnp
pushf
adc
mov
aas
jae
cld
sarl
jecxz
popa
cmc
ja
fdivrs
xor
cld
cmovo
fwait
insl
int3
scas
rorl
mov
pop
sarl
cmp
cli
cli
mov
jl
repz
aad
fiadds
sub
je
fisttpll
mov
mov
xor
xor
in
dec
sub
es
xor
insb
lods
sarl
cli
cmp
imul
adc
aaa
fmul
repz
data16
inc
xor
mov
sahf
fdivrl
inc
nop
pop
xor
cmpsl
cmp
cmpb
xchg
insl
scas
push
pop
stc
lea
scas
movsl
hlt
mov
jb
adc
inc
xchg
inc
xor
das
dec
and
sbb
mov
dec
push
mov
mov
lea
mov
mov
rorb
inc
in
sub
stc
ss
xor
push
addr16
les
scas
adc
add
xor
or
jmp
lahf
inc
stos
ljmp
push
sub
cld
jp
pop
pusha
mov
clc
cli
loopne
xchg
movsb
in
dec
lods
dec
and
aad
pop
xor
iret
and
fdivrs
lret
sub
fstl
add
gs
js
xchg
hlt
add
mov
aas
push
dec
iret
cs
mov
xchg
out
lods
rclb
adc
adc
cwtl
cmp
sub
enter
cmpsl
test
lock
sub
ljmp
inc
sub
mov
pop
loopne
adc
test
adcl
std
add
shr
xchg
fbld
fdivrs
jmp
jp
push
outsl
push
cli
jle
icebp
mov
xchg
sub
stos
or
xor
and
or
bnd
push
and
adc
add
inc
adcb
mov
int
stos
test
dec
in
cltd
stos
mov
pop
jns
out
dec
ret
ss
and
in
push
fsubl
shrb
stos
pop
mov
or
test
mov
and
cmpsl
shrb
int
inc
push
adc
cld
ret
mov
pop
sbb
jmp
cmp
or
xchg
jp
mov
sti
sub
sti
mov
fstl
pop
push
in
mov
jnp
lock
fadds
loopne
lods
jge
add
out
cmc
xchg
mov
sbb
mov
je
popf
xchg
inc
pop
mov
mov
nop
or
pop
mov
nop
lods
push
test
adc
mov
push
clc
outsb
dec
fiadds
adc
cltd
add
cmc
test
cmpsb
popa
lahf
enter
call
mov
int3
ss
mov
aad
cld
dec
push
pop
aaa
xchg
enter
js
dec
cmp
xchg
pop
enter
push
jecxz
sub
xchg
push
fidivrs
mov
imul
inc
arpl
jge
jo
scas
sar
push
mov
popa
xor
out
sub
test
stos
xor
push
stos
les
lods
inc
leave
sub
mov
hlt
faddl
inc
ds
mov
sbb
fistps
jne
mov
add
in
cld
ffreep
scas
mov
xor
mov
xlat
ja
das
lea
pop
sub
xlat
fwait
rep
out
cmc
popa
xor
adc
sbbl
fidivrl
jae
mov
cmpsb
andl
or
mov
sbb
sub
jnp
pop
mov
ret
mov
incl
xor
sbb
cmp
daa
jo
jae
mov
mov
lret
clc
pop
movsb
jb
fldenv
pushf
jp
ja
mov
je
bound
push
iret
jnp
jge
xchg
test
cs
fucomip
or
xor
inc
sub
int
ds
insl
jo
mov
shlb
movsb
sub
les
fdivl
jge
rcrl
loopne
add
inc
push
addr16
or
loop
data16
adc
jle
pop
dec
in
mov
call
xchg
and
addr16
xchg
mov
xor
jmp
jl
and
roll
push
enter
popa
adc
mov
or
dec
xchg
scas
or
cmc
mov
adc
int3
stos
or
push
jl,pt
sarb
inc
cmp
adc
jmp
je
mov
fmull
jne
xlat
fwait
orl
ret
fnsave
mov
adc
movsb
out
test
sbb
cmp
js
mov
mov
push
inc
jae
dec
jbe
aad
loopne
and
jae
dec
cmp
jmp
or
jle
int
ret
mov
jmp
or
mov
push
mov
es
xchg
fstpt
lcall
push
or
sub
push
lcall
cmc
dec
cmc
mov
adc
out
push
std
test
loopne
scas
or
mull
sbb
test
push
mov
inc
jns
test
sub
and
mov
push
arpl
xor
aas
or
sbbl
sub
inc
clc
xchg
test
shr
pushf
jmp
nop
stc
lahf
test
das
xchg
add
js
cwtl
and
cli
xor
leave
xlat
nop
xor
inc
xor
icebp
adc
mov
mov
add
outsb
dec
call
inc
sbb
jle
or
xor
inc
adc
pop
shrb
mov
jne
jno
in
gs
dec
mov
jae
fdivs
dec
push
jmp
jecxz
xchg
out
aam
mov
aam
vcvtps2pd
je
xlat
inc
add
out
cmc
lea
ds
push
lods
mov
sbb
clc
mov
add
cmpb
movsb
adc
add
femms
sub
mov
dec
jae
cmp
inc
std
fisubrl
push
jmp
pop
push
mov
sub
mov
std
sub
or
sub
fimull
pop
xor
xlat
push
xlat
rol
or
jns
stc
sub
das
xchg
inc
mov
mov
adcl
xlat
xor
push
or
in
enter
mov
insb
icebp
scas
insb
xchg
push
adc
jge
jmp
cli
cmp
jg
or
xchg
mov
xchg
cltd
ret
jns
cwtl
pop
popf
addr16
or
cmpsl
stos
jno
pop
movsb
inc
data16
jb
aaa
hlt
xor
sti
add
jle
add
pushw
push
pop
cmp
pop
sub
and
ror
insb
sbb
out
adc
rcrb
mov
mov
scas
dec
aaa
into
iret
sub
mov
push
sbbl
mov
mov
into
mov
push
lret
pusha
add
arpl
add
loope
and
mov
jp
push
cmc
fstps
pop
lret
popa
out
movsb
xchg
mov
movsl
sub
stc
aad
mov
mov
add
inc
dec
scas
ret
push
into
std
cmpsb
add
sbb
add
xor
mov
and
dec
pop
pusha
or
mov
jns
push
das
and
in
xor
jns
in
arpl
std
adc
ljmp
dec
ja
jno
push
and
push
cmp
cmpsb
pop
iret
popf
add
pop
mov
inc
enter
xor
xchg
xor
jb
jne
dec
xchg
outsb
mov
ljmp
lcall
adc
in
pop
stos
jo
leave
aaa
aad
fsubl
das
mov
lahf
into
rcr
inc
popf
mov
sbb
orb
in
scas
inc
rcll
pop
pop
cmpb
push
mov
arpl
cltd
jbe
mov
xchg
stc
xchg
popa
sub
les
jnp
mov
sbb
and
push
mov
pop
cmp
cld
mov
stc
push
shlb
mulb
mov
pop
lcall
shrl
jnp
mov
add
stos
pop
push
adc
mov
pop
fsubrl
jg
jno
imul
jmp
ss
mov
subb
stos
mov
dec
jmp
jae
cwtl
add
test
xchg
fldenv
loope
push
adc
cmp
sub
add
sti
and
in
jb
add
fisubl
bound
or
lcall
orl
scas
dec
data16
lock
in
test
mov
dec
in
mov
jmp
pusha
inc
std
dec
out
cwtl
and
or
in
sarl
pop
jp
mov
dec
cs
and
or
pop
pop
or
sarb
dec
lods
xchg
inc
imul
and
fwait
sub
mov
lahf
ja
das
sbb
test
cmp
ffreep
mov
mov
push
push
int3
dec
lret
test
xor
push
test
or
test
sbb
or
mov
adc
imul
sub
add
enter
call
arpl
fsubp
jmp
mov
or
and
fldcw
pop
repnz
push
mov
sub
pop
cmp
call
stc
xchg
mov
and
pop
les
adcl
mov
push
mov
push
sub
test
lea
cmp
cs
sbbl
push
and
mov
mov
loopne
or
cli
adc
and
add
and
pop
outsl
fcomi
pop
imulb
mov
xor
fwait
les
out
sub
out
inc
xor
jle
xchg
fimull
sbb
fcoms
adc
inc
pop
call
jnp
mov
lods
lock
pop
lock
cli
icebp
cwtl
shr
inc
outsb
adc
dec
test
cmpsb
arpl
pop
xchg
sub
push
sub
jecxz
sub
xor
or
mov
pushf
test
pop
push
sbb
and
daa
xchg
int
mov
test
frndint
fcompl
je
fcomps
lcall
mov
pushf
inc
repnz
sbb
loopne
push
je
adcb
lcall
lret
aam
fildl
sahf
inc
mov
hlt
sti
mov
push
mov
mov
icebp
push
mov
add
mov
inc
xchg
popf
cltd
in
cwtl
mov
inc
and
xorb
xchg
aad
pop
nop
test
pop
xor
push
ds
push
ja
xor
add
cmp
xchg
pop
pop
pop
mov
iret
dec
push
jo
xchg
stos
mov
or
nop
pop
push
bound
mov
shr
mov
je
sbb
test
sahf
call
add
jne
adc
shll
bound
cmp
shlb
push
and
xchg
mov
sti
cwtl
lea
pop
mov
dec
test
cmp
aaa
sbb
mov
test
dec
pop
xor
mov
adc
add
add
pop
aam
add
lret
mov
adc
mov
mov
mov
adc
test
scas
dec
sbb
mov
dec
movsb
fcomp
pop
cli
cmp
add
fnsave
dec
mov
xchg
mov
pop
aam
or
jl
mov
xchg
mov
push
inc
into
push
rcrb
jl
xor
bound
sub
clc
fdivrs
int3
adc
pushl
rclb
cwtl
lds
test
ljmp
arpl
jmp
fwait
mov
push
dec
daa
faddl
add
and
dec
insb
push
in
repnz
inc
shll
xchg
imull
jb
testb
dec
shll
xchg
push
sbb
mov
insl
mov
jecxz
test
ds
cmc
jne
or
repnz
adcb
xor
daa
pop
shll
aas
adc
imul
test
call
mov
mov
int3
pop
mov
push
test
inc
leave
pop
pop
xchg
adc
adc
pusha
and
mov
fstl
mov
cmp
es
mov
into
out
xor
pop
push
das
push
lock
dec
add
in
push
and
test
clc
xor
sub
fstpl
fiaddl
lcall
popa
js
pop
cmp
inc
add
stc
cld
pcmpgtd
add
cmp
sub
iret
mov
sbb
sub
xchg
cltd
sahf
xchg
xchg
test
popf
fsubrl
test
in
rcrb
cld
sbb
inc
sub
xchg
pop
repz
mov
mov
fdivs
sub
ss
mov
mov
mov
popa
dec
lock
xchg
and
xchg
dec
sub
and
jns
push
movsl
into
jge
andb
stos
mov
ss
xor
push
lock
xchg
dec
xor
adc
sub
mov
ret
fsubl
xor
lock
mov
mov
popa
std
divl
sub
push
shrl
ficomps
xchg
sub
aas
ljmp
or
xchg
mov
dec
clc
xor
les
mov
aad
hlt
and
imul
faddl
stc
inc
lcall
pop
ja
popf
pushf
cmp
adc
lahf
out
lea
insb
inc
insb
jo
jno
and
into
repz
pushw
fistpl
aas
cltd
cmp
lea
es
enter
dec
mov
mov
xor
push
xor
movsb
cmp
repnz
inc
gs
mov
jbe
jl
outsl
and
xchg
xchg
ret
xor
push
jg
leave
cmpsb
sub
mov
push
push
rorb
lret
bnd
ss
gs
inc
inc
js
lods
mov
dec
and
lods
pop
mov
rolb
sbb
int3
movsb
sub
ret
rolb
popa
jmp
xor
imul
pop
mov
xchg
mov
mov
pop
adc
inc
push
pop
mov
cmp
leave
jo
dec
mov
pop
aam
notl
mov
push
in
inc
adc
pop
sub
add
sub
inc
icebp
shrb
out
shll
sbb
aad
push
push
test
dec
pop
jp
add
fmull
mov
sub
ret
call
cs
fwait
dec
aaa
mov
and
adc
add
xchg
mov
pusha
in
shlb
adc
rclb
ljmp
jns
or
test
push
xor
jge
cmp
clc
pop
push
add
out
cmpb
adc
mov
cltd
mov
arpl
fisubrl
shl
jae
lock
mov
call
sub
sbb
imul
mov
pop
add
test
xchg
in
sub
sbb
in
ja
loope
xor
and
ficomps
fidivrs
xor
push
fisttpl
mov
or
jmp
clc
flds
and
test
cmp
mov
inc
pop
lock
test
aaa
ret
mov
add
imul
dec
in
cmp
dec
adc
xchg
popa
outsb
lock
fs
ffree
es
xor
jge
int3
stos
es
lods
mov
test
or
jne
adc
fbld
xorb
repz
rorb
in
out
ja
mov
in
repz
shrl
movsl
jp
or
mov
cs
fisubrs
push
xchg
test
fnstsw
mov
scas
repnz
pop
sub
lahf
fisubrl
hlt
or
daa
jge
aam
bound
and
mov
fmuls
xchg
inc
mov
hlt
mov
fucomi
out
and
cmp
inc
mov
mov
mov
mov
in
mov
pushf
loopne
jno
sahf
jge
cmpsb
pop
mov
xor
xchg
inc
fimull
pop
mov
enter
dec
outsb
in
xor
mov
shlb
cmp
test
mov
enter
mov
scas
pop
pop
cmpsl
adc
int3
ret
ljmp
fbstp
iret
xor
aam
rorl
or
adc
cmp
sti
sbb
mov
and
out
mov
lods
cmpsl
dec
jp
pop
lods
cmp
cmp
mulb
std
outsl
fsubrl
pushf
stos
jg
shl
mov
scas
mov
mov
out
insb
and
fiaddl
dec
outsl
int3
gs
sub
rcr
mulb
pop
sub
pop
mov
adc
or
dec
rcrl
push
push
mov
xor
mov
mov
dec
push
dec
pop
cmp
or
cs
data16
sbb
add
xchg
sub
dec
aas
mov
dec
xor
mov
and
cmc
iret
sub
jno
pop
xchg
clc
loope
cmp
push
inc
adc
adc
clc
mov
mov
mov
cmp
ret
xchg
and
sub
sbb
and
dec
xchg
xchg
imul
jnp
push
cld
mov
pop
imul
mov
fadds
scas
shl
mov
pop
mov
insl
fsubs
push
jns
shr
cwtl
aas
sbb
xor
mov
pushf
inc
mov
mov
cmpsb
stc
dec
pop
mov
mov
imulb
testl
cmpsl
xor
add
dec
sti
notb
jnp
outsb
mov
nop
shl
xor
xor
loop
fimuls
add
scas
xchg
mov
mov
xor
jae
lods
mov
pop
jecxz
mov
bound
pop
mov
xor
insl
xchg
imul
fcmovnu
xchg
fwait
rcrb
jl
sub
sub
jae
lea
hlt
adc
outsb
sbb
call
sahf
mov
cmp
out
xor
in
push
jmp
cmpsl
movsl
lahf
xlat
int3
pop
cmpsb
xchg
cmpb
cld
loopne
sbb
inc
sahf
ret
mov
cli
aad
inc
push
ficomps
in
inc
cmp
sub
scas
outsb
sar
xor
push
xchg
push
fisttpl
xor
movsb
in
mov
jae
pop
int3
push
xor
pmaxsw
insb
flds
jmp
sbb
sub
xchg
sbb
in
push
push
movsb
mov
inc
dec
add
movsl
loopne
fadds
adc
das
mov
lret
sbb
xlat
jge
mov
adc
sub
dec
xor
mov
add
mov
inc
cs
pop
daa
xor
xchg
js
lcall
mov
xor
pop
mov
sub
mov
sub
inc
dec
addr16
popf
fldenv
pop
or
pop
lods
es
mov
inc
push
push
add
sarl
into
jmp
push
lea
mov
xor
aas
ffree
push
mov
add
nopl
out
test
dec
sbb
call
sbb
push
cmp
icebp
sti
pop
lods
cmpsl
jo
cmp
lcall
dec
pop
inc
ds
push
je
insb
mov
rclb
cmpsb
sub
adc
mov
sbb
cmp
jecxz
stos
sahf
inc
lods
mov
pop
out
add
mov
push
pop
mov
movsb
push
rolb
dec
fwait
bound
movsl
and
mov
adc
loop
xor
out
sbb
notb
cmc
ja
dec
and
cs
sbb
jae
jbe
dec
sub
out
sbb
rorl
mov
outsl
sbb
push
cld
mov
fidivrl
jns
pushf
sbb
into
jg
jnp
test
xchg
leave
mov
idivl
add
adc
out
jge
lcall
popf
loope
sub
mov
and
cmpsb
imul
add
test
insb
xchg
dec
das
jmp
mov
movsb
mov
out
je
push
cmpsl
sbb
inc
sbb
cmp
popf
idiv
push
fildll
push
pop
xor
xor
ss
fildl
mov
stos
jnp
ficoml
test
hlt
outsl
cmp
loopne
mov
jge
shll
adc
int
into
das
cltd
lock
push
or
mov
jo
bound
mov
sub
inc
cmc
lock
jne
inc
cmp
mov
sub
sbb
arpl
inc
out
sub
sahf
add
aam
out
popf
out
test
pop
mov
lods
inc
cmp
dec
fdivp
mov
cmp
pop
fidivrs
aaa
or
xchg
xor
mov
lret
and
aas
sarl
push
jle
rcrl
lds
mov
jmp
enter
add
stos
xor
leave
arpl
jno
orl
dec
es
js,pt
arpl
shl
clc
hlt
mov
mov
outsl
int
fsubp
jg
inc
or
xor
ret
daa
dec
sub
pop
sti
pusha
xchg
push
jbe
test
into
sti
inc
testl
sarb
dec
loopne
xor
loopne
cmp
pop
stos
mov
cmc
rcrl
imul
mov
push
xchg
push
dec
xchg
cmc
push
sbb
push
es
fcom
push
mov
sbb
adc
int
sbb
enter
scas
xor
cs
adc
mov
in
mov
xor
and
outsl
loopne
xor
scas
insb
ja
pop
test
loop
cmc
adc
dec
imul
push
jo
xchg
mov
lret
cmc
aaa
sbb
fsubl
pop
aad
call
movsl
fsts
adc
cmpl
jg
cwtl
enter
lds
inc
test
inc
ret
jge
sbb
lods
stos
pop
nop
push
jmp
jg
mov
xchg
jecxz
scas
repnz
jb
lahf
inc
fidivrl
mov
repnz
sub
stos
jnp
out
roll
clc
fidivs
xor
push
mov
lret
mull
mov
icebp
push
ret
lret
push
mov
sbb
sub
add
add
mov
dec
cmp
inc
pop
lods
xchg
leave
and
sahf
push
dec
sub
fcmove
fadd
or
mov
xor
add
xchg
movsb
dec
adc
sbb
lret
mov
xor
dec
dec
outsl
push
test
in
cmp
dec
sub
aad
mov
jle
js
sbb
mov
outsb
pop
out
stos
sub
aad
jne
jmp
xchg
mov
sub
ljmp
insb
push
dec
cmc
arpl
jne
imul
scas
pop
fs
xor
inc
push
loope
xor
iret
push
sahf
jmp
fwait
push
mov
or
jo
lsl
mov
mov
pop
mov
ljmp
sbb
out
daa
bound
out
repz
pop
in
xor
test
xor
fdivs
iret
pop
ljmp
imul
imull
mov
mov
sahf
aad
cmp
push
mov
in
and
popl
lods
mov
xchg
movsl
sbb
inc
repz
test
in
test
jg
scas
std
mov
sub
mov
or
inc
cmpsb
sub
fcoms
adc
loope
push
xchg
mov
adc
sbb
pop
fildll
xchg
loopne
mov
pop
add
or
shlb
cmpl
jge
sbb
pop
outsl
push
pop
cmp
sbb
sbbb
jp
in
push
mov
mov
dec
push
lds
push
xchg
jno
add
pop
lock
test
and
stos
pop
xchg
jb
vpcomuw
insl
lret
cmc
sbb
sub
pop
mov
scas
sub
icebp
xor
cmc
and
aas
mov
inc
and
xchg
mov
jg
xor
loope
shll
rclb
dec
into
pop
bound
mov
mov
in
dec
dec
imul
pop
test
shl
sbb
mov
push
std
test
daa
ret
aam
push
aam
adc
cltd
xchg
sbb
pop
js
ljmp
imul
cli
cmp
add
leave
mov
js
xchg
cmpl
sahf
es
add
inc
in
xor
cmpsb
in
cwtl
pop
es
add
xchg
cld
inc
stc
jmp
addr16
jmp
pop
jne
mov
xchg
or
xchg
daa
iret
pop
lods
movsb
loope
sub
pop
enter
adc
lahf
mov
mov
ja
lcall
mov
push
movsl
adcl
push
and
fld
hlt
insl
mov
mov
out
rorb
test
add
xchg
xchg
jno
repnz
decb
jl
shl
iret
mov
or
enter
push
cli
in
xor
repz
pminsw
daa
call
or
pop
sub
imul
shrl
icebp
in
fucomip
nop
sbb
lret
shl
inc
stos
or
push
mov
cmc
stos
insb
pop
pop
movsl
and
ljmp
test
dec
mov
or
dec
and
jbe
xchg
shr
lods
mov
movsl
inc
mov
mov
pop
push
fisubs
es
sub
cli
aaa
js
orl
fldl
jns
sub
mov
cmpsb
mov
ss
xchg
adc
push
sahf
not
mov
push
sti
mov
add
sub
mov
sub
mov
jb
xor
imul
cli
popf
lcall
push
pop
pop
stos
and
xchg
mov
in
in
ficoml
push
adc
xchg
adc
add
cmp
out
xchg
out
test
hlt
cmp
mov
insl
and
in
jmp
mov
sub
mov
xchg
not
pop
stos
sub
pop
jl
push
xor
push
cmp
aas
push
jnp
sub
lret
cmc
pop
leave
and
sbb
jnp
mov
and
mov
movb
aaa
mov
pop
imul
ss
and
push
imul
fbld
and
xchg
cld
push
test
mov
xchg
cmc
cmpsl
push
pop
dec
inc
jnp
and
pop
stos
test
lret
rcr
nop
clc
dec
mov
jmp
ds
push
jns
mov
pop
fsubrs
data16
pop
push
mull
fwait
push
bound
insb
and
dec
iret
xor
out
pop
xchg
dec
iret
dec
stc
xor
sbb
and
imul
push
aas
mov
pop
cmpsl
add
push
or
addr16
mov
fnsave
xor
xchg
in
sub
ss
sti
dec
or
xchg
jae
rorl
sub
sahf
icebp
jae
je
sbb
dec
fistps
mov
jmp
pop
scas
push
mov
lds
or
or
js
push
push
outsl
loope
ret
clc
jnp
addr16
mov
movsb
sbb
mulb
es
cmpsl
je
dec
sti
sbb
aas
test
int3
scas
daa
lods
cwtl
inc
cmp
xchg
push
jmp
adc
cmpsl
std
mov
adc
xor
xor
and
fisubl
push
push
mov
jns
push
sub
jne
mov
or
mov
push
mov
dec
fs
inc
dec
jl
js
ss
pop
scas
test
dec
and
cltd
cmp
add
sahf
mov
test
dec
stc
sbb
fs
dec
and
lret
push
das
subl
lods
cli
js
sbb
cli
pop
mov
sbb
lea
cli
sub
sbb
addl
mov
xchg
sbb
sar
sbb
insb
mov
shr
ljmp
mov
mov
testl
ret
ret
and
imul
lret
and
or
sub
dec
mov
xor
adc
xor
and
fsts
push
test
lods
mov
xlat
lret
imul
std
adc
lods
inc
dec
and
pop
int
repnz
pop
push
or
daa
shl
mov
cltd
add
push
ja
pop
add
mov
sub
add
sarb
adc
push
sub
adc
repnz
das
push
mov
insl
int3
jns
or
jl
cmp
xlat
xchg
mov
cs
mov
stc
mov
addr16
add
fisubrl
cs
lret
jecxz
movsl
inc
sub
pop
ja
popf
dec
sbb
js
xchg
pop
sub
lds
mov
sbb
adc
jp
daa
loopne
nop
xor
and
add
push
sbb
scas
outsl
lret
stos
cmp
daa
xchg
cmp
iret
jae
mov
out
or
mov
lods
jle
andl
push
mov
cmpsb
lret
push
call
and
test
dec
jns
sub
inc
mov
gs
aaa
in
aad
mov
cltd
les
insb
lret
xchg
mov
out
pop
loope
lods
ja
and
into
adc
sahf
es
fmul
add
je
orl
idivb
or
inc
and
sbb
sub
push
movsb
mov
xor
rolb
in
divb
fisubrs
cmpsb
je
out
cmc
sbb
clc
int3
popa
test
mov
je
mov
mov
shrl
mov
pop
je
fsubl
add
andl
sub
dec
mov
popf
xlat
add
jp
xchg
fstpt
pmaxub
test
jb
sub
cmp
ja
pop
bound
nop
or
enter
mov
addl
lds
iret
mov
es
dec
into
movsl
clc
push
jmp
and
insb
push
pusha
cmp
jg
in
icebp
dec
cmpsl
xor
push
les
inc
andb
test
or
es
std
mul
mov
aam
xchg
iret
movsl
mov
adc
sahf
adc
xor
in
and
fnstcw
push
xchg
xchg
sub
mov
iret
adc
in
cwtl
mov
cwtl
mov
stos
push
in
and
pop
outsb
sbb
loopne
inc
fisttps
ljmp
and
xlat
shll
mov
lret
mul
jl
pop
sbb
mov
bound
cld
mov
loopne
orl
pusha
fs
jns
mov
aam
sbb
add
mov
mov
cmp
sub
mov
jl
inc
mov
and
and
pop
scas
inc
adc
pusha
mov
jle
repnz
lea
add
jle
push
int
jns
movsl
jecxz
jae
mov
fstl
in
fistps
pop
push
xor
lahf
fisttps
mov
cwtl
mov
jns
orl
dec
sbb
stos
inc
adc
movsl
lock
mov
and
adc
imul
jmp
out
insl
mov
fmull
hlt
gs
jnp
fldl
gs
test
jecxz
sub
pusha
add
or
adc
scas
loopne
addr16
jle
mov
fwait
xor
insb
xor
sbb
mov
cli
dec
push
xchg
jb
push
jbe
lods
push
mov
cmp
sub
mov
pop
jns
dec
lods
dec
sub
pop
xchg
dec
inc
mov
inc
scas
mov
ficoms
and
fadd
ret
adc
mov
xor
in
pop
int
sar
fnsave
popa
mov
in
jnp
call
movsb
dec
jp
pop
pop
cwtl
dec
lahf
int3
or
pop
mov
shrl
icebp
das
fnstenv
lds
popf
push
mov
and
inc
mov
pop
add
dec
iret
xor
fdiv
sarb
mov
dec
enter
inc
data16
shl
add
call
hlt
imul
jle
fstpl
jle
in
loop
mov
iret
cmp
leave
jg
je
cmpsl
insl
clc
insb
sub
cli
movsl
inc
ljmp
lods
scas
jnp
bound
adc
iret
outsb
ficoms
xor
mov
mov
inc
and
inc
push
and
imul
dec
add
mov
fmuls
dec
xchg
movsb
ret
je
enter
pop
mov
push
sahf
inc
fimuls
hlt
cmp
pop
fistps
mov
aad
mov
inc
imull
inc
add
fnstsw
mov
push
sub
cltd
mov
addl
fidivs
inc
adc
incl
adc
jmp
adc
jecxz
cmpsb
insl
rclb
hlt
ficomps
push
or
and
sbb
jl
fsubrs
test
cmp
xor
fmull
mov
popa
lock
push
cli
fistpll
xchg
push
shlb
dec
inc
fnstenv
dec
xchg
loop
cmp
loope
xchg
push
inc
ds
insb
cwtl
ffree
xchg
insb
aad
push
or
or
adc
mov
loop
sbb
pop
enter
add
push
pop
sub
fstl
stos
mov
pop
shl
xchg
pop
dec
jae
mov
imul
sub
jnp
sbb
xchg
push
push
pop
dec
data16
sub
xchg
xchg
mov
test
add
leave
aaa
fiadds
inc
das
shr
lcall
fadds
bound
out
jl
out
addr16
ret
sub
xor
andb
mov
out
mov
mov
imull
xchg
jp
repz
mov
dec
lret
int3
test
and
das
xor
pop
mov
mov
mov
inc
rcrb
jns
insl
pop
rcll
mov
sub
out
sub
hlt
lods
mov
and
imul
lds
negl
sub
ret
lea
sti
inc
iret
faddl
mov
ficoms
mov
and
jecxz
call
mov
std
test
cmpsb
sub
jecxz
fldl
sbb
ja
imul
imul
out
cli
adc
cmp
and
rorl
imul
lock
frstor
test
cwtl
and
or
pushf
and
jae
test
cs
in
fs
test
movsl
and
divb
push
or
mov
in
mov
and
push
xchg
pop
test
cmp
jns
jns
mov
andl
test
ds
pop
dec
movsb
pop
lods
cmpb
cld
adc
xor
aam
rcl
fsubp
ret
xchg
mov
outsl
jl
mov
roll
mov
shrl
ret
xchg
aad
jmp
shr
xchg
scas
or
aaa
out
mov
pop
push
pop
mov
lods
jge
stc
ljmp
out
pop
adc
cmpsb
fs
sti
hlt
imul
call
pusha
loope
pop
xchg
movl
jl
adc
push
and
jo
and
and
add
dec
xchg
sub
fildl
lret
jmp
into
push
adc
pushf
and
test
cld
add
fnstcw
flds
scas
lock
aas
decl
and
test
cwtl
shlb
lea
inc
dec
pop
add
add
or
lea
and
dec
pop
daa
cld
mov
inc
jge
sub
dec
ja
add
es
js
int
pop
mov
mov
stos
stc
popf
setns
xor
repz
mov
out
mov
outsl
sti
cmp
dec
lahf
xchg
push
arpl
or
add
jmp
rclb
xchg
addr16
push
xchg
pop
mov
imul
imul
push
and
push
jecxz
sbb
jbe
fdivrl
pop
lods
cwtl
adc
or
inc
in
dec
cld
mov
cmpsl
push
aas
add
jnp
inc
insb
dec
ja
les
pop
mov
adc
push
and
ret
mov
cmc
in
mov
cmpsb
xchg
cmp
popa
lods
xchg
adc
xchg
bound
cmp
adc
lods
call
jecxz
popw
mov
mov
pop
mov
adc
pop
jg
push
inc
push
ja
addr16
cli
dec
popa
mov
inc
pop
call
jge
dec
sbb
outsl
fsubrs
jo
mov
adc
add
std
cs
test
add
fisubl
daa
cli
shlb
test
insl
cmp
mov
fimull
andl
outsl
pop
inc
jbe
add
aad
sub
rcrl
inc
cmp
pushf
mov
enter
mov
xorb
pop
pop
sahf
add
push
ljmp
repnz
sbb
outsb
mov
sahf
sbb
ret
and
xor
xor
jl
mov
fdivrl
sbb
and
xchg
popa
or
out
lret
aam
push
mov
movsl
out
and
cmpsb
jne
add
mov
fwait
xchg
hlt
push
mov
adcb
xchg
cltd
jp
xchg
clc
fbld
outsl
sbb
outsl
xchg
rcll
push
xlat
lcall
and
outsb
mov
jecxz
filds
or
ret
sbb
in
sbb
call
sarl
arpl
in
mov
mov
or
sub
xor
xchg
pusha
sbb
jns
sahf
test
lds
mov
jmp
lcall
jnp
stc
test
dec
jnp
std
movsb
xor
lret
sti
xor
imul
test
sarb
sbb
aam
push
mov
jmp
out
fisttpl
xchg
dec
out
mov
scas
or
ret
inc
and
ret
push
std
push
dec
in
and
fisubs
pop
in
add
mov
imul
addr16
sbb
mov
fists
test
lds
mov
pushf
mov
pop
pop
inc
int
test
shll
lods
sbb
lds
ret
push
xor
shl
jl
fwait
xchg
lods
out
push
outsl
cmpb
jns
add
mov
lret
mov
cli
popl
lahf
scas
subl
imul
dec
dec
scas
shlb
lfs
outsl
jecxz
xchg
dec
add
and
dec
inc
call
jb
and
jne
mov
imul
jb
clc
fiadds
mov
cmpsl
das
sbb
lds
daa
jo
cmc
cmp
test
sahf
cld
lret
sti
dec
popf
in
push
sbb
into
mov
jbe
push
cmp
xchg
jl
mov
fsubs
dec
pop
push
jge
pop
mov
jae
push
sub
jbe
gs
push
loop
clc
dec
jmp
ret
inc
call
sbb
cmp
fists
int3
icebp
add
cmp
cmp
jb
and
xor
mov
add
and
fwait
xchg
xchg
lods
loop
push
jecxz
ds
addl
push
mov
and
cmp
outsl
jecxz
dec
lcall
and
sub
sbb
cmp
xchg
xchg
scas
cmp
andb
nop
sti
pop
pop
push
xchg
sbb
inc
andl
lahf
cmc
pop
lret
sub
shlb
or
scas
mov
xchg
jne
bound
cmp
inc
fnstcw
dec
aad
mov
jle
and
add
mov
mov
hlt
mov
jns
jo
int3
mov
ljmp
or
lock
call
aam
ret
xchg
shrl
adc
push
xchg
sarb
pushf
xchg
or
fstl
test
fstpl
movl
fnsave
mov
outsl
fistps
xchg
addr16
mov
sbb
push
in
popf
pop
arpl
lcall
clc
inc
mov
mov
ret
xchg
aas
cltd
or
pop
cmp
pop
jmp
pushf
sbb
out
and
popa
fldcw
cld
adc
fwait
xor
mov
sar
pushf
add
mov
mov
adc
inc
mov
jmp
bound
ljmp
mov
jb
stos
sbb
or
cmp
mull
ficoms
movsl
or
out
aam
js
xchg
lret
or
sub
pop
sahf
push
rcrl
popf
cmpsl
sbb
xchg
popf
dec
mov
imul
gs
sbb
orb
js
cli
insl
or
cmpsb
inc
leave
or
mov
or
push
sub
lods
hlt
pushf
dec
loopne
fsubrs
xor
and
out
es
sbb
adc
leave
dec
out
sub
xchg
pop
or
bound
hlt
andl
inc
mov
cmp
dec
ss
in
gs
vpsubsw
dec
pop
and
xchg
scas
sbb
sbb
jmp
mov
addb
in
pop
or
fisubs
lahf
jmp
cmp
into
jp
jp
or
add
cmp
arpl
fistps
jp
or
pusha
in
into
lods
test
push
adc
jg
into
xor
cli
xchg
mov
push
clc
addr16
push
adc
push
shrb
pushf
xor
sahf
pop
dec
mov
sarb
fdiv
jle
xchg
fmull
dec
dec
es
insl
mov
mov
mov
jmp
cmp
jne
loope
add
xchg
jne
nop
mov
vcomiss
adc
xchg
mov
fsubs
cmpsl
hlt
pop
pop
xchg
sub
in
and
xchg
jae
mov
jae
add
jge
inc
dec
je
outsl
adc
stc
in
and
mov
push
les
shr
push
in
stc
inc
sub
cmp
xor
js
fnstsw
fs
rcll
sub
rcll
push
aad
cld
cmc
lahf
call
mov
dec
inc
inc
pop
pop
movsb
outsb
mov
inc
xor
sub
push
inc
dec
adc
push
dec
pushf
pop
adc
xor
cmpsl
shl
out
dec
notl
or
scas
xor
mov
dec
divb
sub
adc
clc
inc
daa
mov
fmull
ss
xor
dec
sbb
push
adc
cmp
or
notl
mov
dec
mov
jo
mov
xchg
stos
movsb
cmp
jno
ret
popf
inc
aas
jmp
loop
gs
xlat
cmp
pop
push
inc
pop
jg
ss
cmp
cmp
int
test
and
repz
fcmovnb
lret
jne
cmp
mov
testb
push
dec
pop
pushf
shll
sbb
pop
push
fdivrl
idivb
addr16
adc
sbb
insl
std
ja
rcl
in
adc
lock
lods
into
jns
loopne
test
xor
lock
sbb
dec
out
call
mov
dec
sbb
scas
mov
popa
loopne
jecxz
ret
fsubrp
lahf
fwait
dec
fdivr
xchg
ja
outsb
sbb
xor
sarb
and
inc
dec
sarb
mov
shlb
fnstsw
mov
pop
jns
pop
mov
int3
cs
or
mov
pop
imul
mov
adc
andl
js
sub
xor
and
push
movlps
jnp
aam
pop
jmp
nop
cmpsl
sti
loop
int3
pushf
cs
jae
imul
ds
mov
inc
lds
jae
mov
mov
add
lret
out
or
add
cmpsl
cli
sbb
dec
push
add
push
ljmp
out
test
int3
loopne
jmp
inc
mov
jb
arpl
mov
xor
mov
sti
cld
add
jecxz
inc
data16
cmp
pop
jp
popl
movsb
sahf
rolb
insb
or
stos
sbb
cs
push
xchg
imulb
xor
es
call
xchg
pop
jg
push
push
jae
mov
test
arpl
push
xchg
inc
sub
jle,pn
div
and
mov
inc
sbb
scas
imul
sbb
and
ss
rcrb
roll
xchg
ss
out
adc
ret
adc
out
mov
and
push
and
push
push
rolb
nop
xchg
add
test
or
fisubl
push
xor
xchg
jge
xchg
dec
sbb
cmp
ret
jb
jb
or
mov
mov
testb
xor
jo
jno
xor
xchg
cmp
mov
cmp
movsl
push
inc
mov
inc
clc
adc
dec
imul
out
lods
mov
sub
daa
dec
stos
testl
stos
xchg
scas
clc
dec
ret
arpl
sbb
repz
xchg
pop
mov
sub
and
hlt
in
xor
stos
add
push
std
push
push
cmp
ds
xchg
sub
out
jo
test
movsl
xchg
ret
or
ss
jmp
loop
jmp
data16
jno
imul
push
or
stos
fidivrl
cmpsb
ss
aas
cmc
add
loope
dec
test
ficompl
xchg
xor
stos
stos
xchg
dec
iret
stos
nop
pop
push
inc
loop
fisubrs
sbb
ret
push
pop
mov
or
jp
adc
fisttpll
push
mov
jecxz
dec
push
pop
jp
mov
mov
ficompl
jge
add
cli
push
add
cli
sub
divl
call
or
cmp
mov
std
inc
ja
or
std
inc
push
vmread
xor
xchg
xchg
push
mov
pop
lahf
mov
xor
cmc
stos
lock
je
into
test
mov
push
pop
pop
leave
dec
mov
and
bound
adc
loopne
xor
adc
mov
or
pop
jbe
add
xor
push
add
mov
xchg
mov
shll
cmpsl
loop
mov
sahf
adc
jle
xchg
int3
sub
push
xor
shll
mov
rol
imul
dec
mov
test
xchg
shll
idivl
arpl
fistps
mov
js
sbb
mov
popf
scas
ret
inc
push
std
hlt
cmpsl
sbb
mov
mov
outsl
repz
ds
adc
push
push
arpl
jecxz
sbb
testb
lods
popf
ret
cmp
sarb
add
test
and
mov
xor
jmp
pop
mov
mov
shl
icebp
jecxz
adc
mov
adcb
mov
sbb
inc
ljmp
cmpsl
lret
mov
fstpl
outsl
xchg
cwtl
cmpsb
or
push
jbe
jo
arpl
test
xchg
js
aad
inc
stc
scas
repnz
into
fstpl
mov
jmp
test
sarb
sbb
aaa
and
ja
sub
out
push
test
mov
mov
shrb
or
lds
xorl
pushf
inc
rcrb
push
adcb
movsb
cmp
ficoml
aad
sub
loopne
cmpsb
test
jo
insl
fstpl
in
shrl
mov
negl
jp
fsubrl
test
lahf
inc
mov
popf
cltd
pop
push
sbb
xor
dec
fsts
fucomp
lcall
imul
scas
imul
or
push
sub
shlb
aad
test
outsl
in
sbbl
decl
dec
das
cwtl
repz
jne
xchg
into
mov
jo
js
lahf
push
stos
aaa
push
in
add
pop
mov
hlt
push
in
xchg
sbb
lcall
mov
lds
cltd
sbb
loop
loope
sbb
cmp
mov
and
push
stc
mov
pop
les
dec
cmp
rorl
cmp
mov
ds
push
or
push
repz
test
adc
dec
repnz
jne
test
nop
jo
push
mov
xchg
adc
add
or
cld
adc
mov
inc
loop
into
aaa
sarl
adc
out
repz
hlt
mov
movsb
pop
inc
cmp
dec
push
inc
call
scas
cmp
out
or
clc
xchg
clc
js
out
lret
and
repz
inc
pushf
andb
out
fwait
cs
sub
inc
daa
out
ljmp
lret
and
add
idivb
loop
jno
pop
fisttpl
insl
aas
pop
sbbl
or
mov
loope
cld
and
scas
adc
lds
lahf
mov
bound
addr16
idivl
sub
lahf
sahf
cmp
push
and
inc
ret
inc
mov
scas
mov
jge
pop
cmp
push
add
mov
xchg
push
lret
pop
rcrb
mov
les
or
push
cld
mov
mul
ret
or
xor
das
inc
hlt
pop
sub
jmp
sub
inc
push
mov
sbb
xchg
adc
and
incb
out
inc
lds
push
adc
loop
mov
stos
sbb
inc
sbb
lea
mov
sub
loopw
fs
dec
repnz
inc
cmp
stos
cmp
push
push
dec
jge
xchg
mov
mov
repnz
dec
scas
mov
jae
push
sbb
test
cmp
sub
xchg
jge
shlb
fs
fisubrs
jns
xchg
imul
in
jmp
in
sub
fildll
xor
mov
ja
push
sbb
inc
mov
scas
xchg
fldl
in
in
inc
sbb
and
xchg
incl
fsubs
das
mov
test
imul
in
dec
push
fisttps
mov
adc
fsubl
sub
pop
jg
aaa
push
jno
das
xor
ret
out
shr
insl
fcoml
ficompl
xchg
xor
addr16
mov
jg
adc
adc
into
jns
lods
push
mov
xor
rcl
das
cltd
pop
xchg
dec
sbb
out
push
lret
or
cmp
xor
testl
cmp
push
pmulhuw
or
add
sbb
test
hlt
daa
xchg
mov
jno
lret
ret
aas
jl
mov
cmp
cld
or
out
jmp
jecxz
mov
sarb
add
mov
add
mov
jge
jl
sbb
jo
adc
jns
pushl
ss
loopne
popa
mov
leave
fists
std
out
andb
lret
outsb
xchg
in
cmc
pop
inc
jne
lret
stc
mov
mov
inc
push
pop
adc
jne
movsb
js
mov
aas
dec
cmp
insl
mov
rcl
or
jge
or
hlt
sub
movsb
popa
mov
add
jnp
add
xchg
mov
push
ss
test
insl
sub
outsb
lock
mov
xlat
push
cmp
dec
xor
jecxz
xchg
inc
adc
inc
xor
movsl
js
insb
test
jae
and
and
mov
or
sub
out
std
xchg
sbb
fnstenv
lea
jno
pop
roll
dec
fldcw
mov
outsb
loop
fcoml
push
mov
lea
add
lea
or
mov
icebp
pop
lds
mov
mov
bound
add
cmp
stos
cmpb
jae
fisubs
stc
mov
loopne
fisubrs
mov
push
shll
sbb
pop
cwtl
gs
ret
mov
lds
adc
mov
pop
in
and
jbe
stos
incb
int
pop
push
imul
or
sub
jp
adc
call
adc
popa
insb
inc
inc
or
insb
mov
arpl
sub
outsb
aaa
xor
xchg
cmc
test
jb
adc
jne
dec
or
es
add
daa
test
imul
lret
xchg
sti
and
jno
cmp
jecxz
ss
jg
call
sahf
js
lock
lods
subb
sub
xor
sti
ljmp
mov
lods
les
je,pt
pop
jmp
lret
sub
lret
and
cmp
out
test
sub
subb
pop
sub
fwait
mov
ret
and
and
jge
out
rcl
in
imul
idivl
inc
adc
rorb
push
pop
pop
push
das
mov
movsb
adc
js
cmpb
int3
xchg
std
sahf
fldt
cmp
inc
out
dec
or
mov
sub
call
dec
imul
xchg
aam
enter
cs
jmp
stc
pop
pushf
loope
fwait
jp
mov
pop
mov
push
xchg
push
mov
es
bound
adc
mov
out
jl
fimull
loop
andl
push
lcall
jbe
icebp
int3
push
jmp
or
test
inc
jne
lcall
push
or
pop
jbe
pop
aaa
pop
pop
mov
push
jne
popa
lcall
or
push
xchg
sbb
cmpsb
dec
push
xchg
push
mov
dec
sub
ljmp
adc
rorl
push
loope
scas
sbb
adc
in
sti
jmp
push
cmp
xor
out
sbb
pop
dec
cmp
out
jnp
rcrl
cmpsl
imul
pop
addl
sbb
mov
push
xor
into
outsl
aad
clc
ljmp
into
sub
jp
mov
mov
loopne
mov
out
push
ret
push
push
jns
push
jnp
ficoms
adc
cmp
insb
add
or
out
lods
jge
jmp
pop
xor
xor
sbb
mov
shl
outsb
movsl
dec
push
clc
push
inc
test
ds
mov
add
cwtl
sbb
repnz
int
and
or
jg,pn
outsl
inc
inc
pop
lock
inc
ficomps
cltd
dec
dec
fs
sub
test
xor
fs
cmp
jo
sub
fsubrs
adc
push
adc
push
movsl
jbe
cmp
ljmp
jo
cmpsl
das
xchg
mov
jno
pop
rorb
mov
pop
or
les
rcll
push
xor
cmp
dec
enter
mov
sti
mov
icebp
lds
add
and
sahf
daa
sub
je
mov
icebp
andl
sbb
ret
push
stos
adc
aad
mov
in
in
adc
sbb
es
ret
push
push
imul
pop
or
je
jge
fmulp
cld
iret
js
fnstcw
outsl
cmpsl
mov
jnp
fst
ljmp
push
cli
xorl
xchg
sti
and
or
cmc
mov
lcall
mov
mov
imul
decb
fldcw
fcmove
cmpb
js
mov
inc
push
xchg
jno
pop
out
popa
scas
fdivrl
es
jbe
cmp
mov
aad
push
pop
fistps
inc
mov
dec
inc
or
pop
cwtl
pushf
shrb
pop
mov
push
dec
xchg
bound
movsb
dec
xorl
xchg
mov
push
push
xor
xor
or
rcll
nop
fcoml
mov
push
outsb
pop
cltd
mov
dec
cmpsl
stos
mov
mov
ja
pop
cltd
int3
cltd
or
mov
xor
inc
inc
cmp
aam
clc
dec
notb
push
jge
xchg
cmpsl
mov
int
notl
sbb
in
sbb
test
jg
fisubrl
andl
stc
sub
push
jle
mov
mov
stos
push
pop
lret
rclb
jg
adc
lret
das
xchg
add
pop
clc
push
xchg
test
fs
test
mov
xchg
inc
mov
inc
cmc
mov
popa
iret
xchg
cmc
or
inc
push
les
mov
cmp
push
pushf
cmp
push
fnstenv
int
xchg
ja
jns
enter
xchg
int
in
lret
adcl
lds
fisttps
sub
jb
jl
or
inc
pop
and
testb
das
mov
clc
push
sti
sub
cmp
sub
mov
pusha
in
les
mov
daa
adc
shlb
sbb
stos
mov
or
test
cmp
clc
jge
dec
ljmp
and
jmp
adc
cmpsl
stc
fildll
arpl
sbb
jb
cmp
negl
jge
cmp
xor
divb
sub
daa
dec
mov
cmp
and
jle
fistpl
jbe
popa
ljmp
les
nop
ficompl
or
mov
bound
lods
cmp
pop
scas
in
jge
dec
mov
xor
sbb
dec
xor
fstl
xchg
jl
or
decl
lea
loopne
pop
pop
sbb
aad
mulb
mov
stos
jae
out
push
in
insb
xor
out
jb
inc
jno
mov
popf
cmc
fcomps
pop
lcall
lcall
sbb
or
ja
sysexit
pusha
es
mov
push
cld
cmp
and
sbb
mov
xchg
int3
pushf
mov
lret
cltd
cltd
in
push
and
pop
loope
scas
xchg
cld
sbb
in
mov
shl
lods
cmp
mov
inc
testb
and
call
cmpsl
mov
sahf
pushf
pop
lahf
jecxz
in
sbb
ret
and
xlat
repz
xor
aam
or
outsl
sbb
movsl
cmpsb
mov
fimull
mov
sbb
push
mov
dec
jae
or
or
fld
ds
aas
rol
pop
jae
jmp
sub
dec
dec
repnz
mov
pop
adc
fcoml
cmpsb
pop
int
ret
rcr
ret
lret
xchg
in
mulb
or
pop
je
lea
cli
repnz
ss
pop
mov
add
shlb
das
fimuls
push
rdtsc
aaa
lret
scas
lock
dec
hlt
pop
gs
mov
nop
mov
cwtl
inc
movsb
cmp
clc
pushf
fcmovu
cmp
push
mov
ficompl
pop
ja
xchg
and
inc
jae
jo
sub
xlat
imul
jbe
ljmp
mov
sbb
and
xchg
inc
cmc
mov
stos
xor
je
cs
clc
mov
xor
notl
or
push
jmp
call
in
cmpsb
inc
fsubs
test
xor
cmp
fidivrl
pop
mov
or
pop
cmp
inc
aas
lods
cmp
lret
mov
mov
push
push
popf
mov
dec
mov
adc
push
xlat
push
cmp
sub
lea
dec
xchg
mov
std
mov
lds
xchg
jo
pop
mov
icebp
jo
mov
xchg
mov
jge
mov
or
inc
leave
inc
enter
adc
mov
fadds
mov
pop
add
jl
cltd
pop
inc
mul
and
lea
cmc
ljmp
insl
jae
sub
orb
sarl
rcll
pop
fs
mov
adc
adc
add
dec
out
data16
lock
lods
sub
or
enter
sub
mov
icebp
test
testl
jne
test
pop
and
xor
mov
aad
fldenv
out
xor
test
and
scas
xchg
inc
data16
mov
mov
mov
cmp
push
push
or
gs
jmp
es
or
mov
mov
sbbb
nop
jb
dec
daa
push
xor
jle
add
mov
fcomps
clc
push
cli
sbb
mov
mul
insl
test
call
movsb
add
inc
ja
mov
mov
aad
test
cmp
fmuls
inc
lret
das
xchg
outsb
stos
cltd
mov
pop
popf
in
mov
and
sbb
outsw
aas
jns
testl
sub
mov
xor
scas
popf
or
lcall
push
sbb
fwait
sbb
cmpsl
cmp
or
scas
ljmp
xor
lret
daa
std
sub
xlat
push
add
add
repnz
xor
cmp
aam
jo
fst
pop
and
das
cmpsl
sub
int3
pop
ljmp
stos
mov
adc
add
cmp
mov
fs
icebp
jmp
xchg
dec
or
or
cmp
fcomps
pushf
sbb
lret
ds
out
and
add
xchg
enter
aaa
loopne
test
pop
mov
pop
or
test
inc
subl
ficoml
mov
stos
mov
dec
and
iret
iret
imul
adc
push
add
pop
mov
mov
and
cmpl
xchg
push
js
mov
adc
addr16
mov
push
fwait
jne
lock
mov
push
cmc
add
or
test
add
mov
add
lea
lods
xchg
cmpxchg
xchg
out
dec
nop
lods
pusha
fisttpll
lret
mov
insl
mov
or
test
inc
cmp
xor
push
inc
fistpl
xor
fucomi
das
pushf
dec
inc
cmp
sub
fwait
push
loope
sub
stc
mov
lock
ret
and
push
frstor
mov
dec
call
rorl
adc
test
inc
bound
jp
fs
add
mov
add
sbb
mov
add
adc
push
call
ja
or
sbb
imulb
stc
inc
dec
subb
movsl
into
cmp
mov
mov
imul
in
lock
and
or
mov
lds
ljmp
jnp
aad
mov
inc
movsb
sbb
or
mov
inc
outsl
inc
test
loop
xchg
and
out
in
insb
gs
lock
dec
pop
sbb
insb
sub
inc
mov
or
ret
andb
ds
out
je
arpl
popa
jns
fadds
fwait
lret
xor
call
pop
aas
jmp
xor
adc
dec
sbb
scas
mov
mov
loope
pop
es
jns
pop
stos
ljmp
sbb
loopne
loopne
shl
xchg
sub
lret
aas
dec
scas
sub
les
lahf
int
sub
xchg
mov
fidivs
add
cmovne
adc
lock
xchg
mov
dec
mov
and
lahf
in
cwtl
shll
jae
xor
testl
pop
and
push
das
jmp
xchg
mov
jns
mov
push
jae
and
dec
popf
lock
and
mov
xor
cmp
loopne
jae
leave
adc
es
dec
insl
sub
insb
lahf
jns
mov
icebp
push
repnz
insb
iret
xor
lock
scas
mov
stc
mov
adc
roll
push
stos
xchg
or
rclb
dec
loopne
mov
stos
fnsave
insb
inc
es
es
imul
enter
into
xchg
iret
lea
test
ljmp
test
pop
push
push
pop
sbb
dec
je
mov
jb
loopne
xchg
jne
insl
maxps
sub
xor
pop
fistpl
cmp
std
jmp
dec
cmpsb
lret
repnz
and
imul
iret
jnp
xchg
addr16
fldenv
inc
pop
add
scas
push
shlb
jns
and
dec
fsubrl
ret
mov
or
lods
mov
mov
call
add
ja
ret
daa
add
push
fs
or
push
push
xchg
cmp
xchg
bound
movsl
and
add
jg
pop
mov
push
and
aad
cmpsb
iret
jo
outsl
ljmp
dec
shlb
pop
mov
xor
push
adc
dec
orl
movsb
jns
dec
out
jp
dec
pop
shl
xlat
ss
mov
xchg
and
dec
fstp
xchg
xlat
sbb
mov
add
out
in
fcmove
test
cli
mov
push
sbb
sbb
sbb
jbe
sti
add
aad
cmp
jecxz
lret
mov
cmpsl
sbb
iret
loop
clc
inc
jnp
adc
sub
aaa
push
add
mov
and
out
addr16
mov
dec
jns
push
movsl
cmp
ret
cmc
rcll
cs
imulb
mov
dec
xor
cld
mov
daa
aam
push
int
mov
adc
push
mov
and
cmpsb
dec
cmc
loop
add
mov
jae
test
jp
xor
adc
sbb
out
test
ss
js
cmpsl
xor
push
sbb
fdivl
arpl
jne
loop
movsb
push
flds
test
add
scas
jge
dec
std
stos
sbb
jl
insb
dec
aam
jp
dec
mov
push
xor
xchg
lcall
mov
or
and
lret
loope
add
xorl
adc
mov
xor
rclb
jecxz
insb
xor
out
pusha
test
fs
lods
pop
add
in
xor
or
outsb
jecxz
cwtl
stos
cmp
lcall
notl
jnp
xchg
mov
nop
xchg
sbb
sbb
rolb
sub
pop
xchg
aam
loope,pt
int
sbb
sti
or
push
jb
dec
sub
stc
mov
cmp
jg
test
mov
adc
ljmp
inc
int
lcall
sbb
popf
fsubs
nop
aaa
mov
xchg
and
fwait
add
imul
cmp
stos
sti
fistpll
fildll
test
adc
mov
mov
or
stos
rcll
ja
pushf
icebp
cmp
es
push
jecxz
push
push
pop
cmpsl
les
mov
aam
mov
lds
jge
push
iret
stos
mov
jp
jb
mov
push
push
jmp
call
inc
dec
pusha
adc
jnp
xor
mov
ret
addr16
push
sub
aad
jo
cwtl
dec
mov
jno
xchg
cs
pop
loope
mov
fistpll
nop
cmp
and
mov
loope
and
lret
mov
lea
sub
add
adc
nop
aam
jnp
imul
test
and
lret
pushf
int
movsb
pusha
rorl
fdiv
das
jne
inc
sub
push
js
add
xchg
adc
pop
add
sarl
and
inc
jge
mov
xchg
jmp
add
bound
mov
xchg
shlb
lret
sarl
lcall
cmc
into
loop
mov
call
and
repz
adcb
sahf
lds
and
jmp
lods
ja
lods
ss
inc
int3
xchg
sbb
movsl
pop
push
sub
es
arpl
lock
push
movsl
int3
cmpsb
inc
mov
notl
sbb
dec
cmp
or
adc
push
int3
jo
jb
sbb
repz
push
nop
or
cli
adc
mov
or
push
imul
popa
ljmp
push
stos
jno
fstl
xlat
dec
sti
jmp
mov
mov
adc
repz
mov
cld
popf
mov
cltd
cmp
dec
inc
push
cmp
mov
sahf
inc
mov
fnstsw
adc
cmpsl
sti
out
outsb
adc
lcall
dec
pop
ja
mov
outsl
or
mov
inc
or
dec
adc
jne
cli
rorb
xor
int
rcrb
push
popa
inc
pusha
jno
sbb
push
insb
push
xchg
sbb
xor
rcrb
cmc
mov
xor
callw
sbb
ret
dec
iret
add
mov
rclb
fistpl
and
fnstsw
sub
js
loop
popa
mov
add
cmc
mov
enter
xchg
loop
xchg
lret
inc
or
cmp
jo
sub
mov
jne
daa
stc
movsl
loopne
fnstsw
mov
cwtl
inc
mov
scas
in
loope
and
dec
xchg
leave
test
imul
cmpsb
insb
pop
mov
xorb
movb
mov
xchg
mov
xchg
shrb
not
shlb
movsl
adc
aam
dec
inc
xorb
cmp
sti
xchg
lds
pop
and
jmp
mov
xchg
jmp
test
cmp
pop
mov
pop
sbb
fildl
mov
callw
mov
cwtl
jbe
outsl
ret
das
xchg
je
jecxz
out
adc
aad
adc
mov
imul
shrb
push
sbb
test
cld
push
pop
push
push
aaa
or
push
jno
leave
jle
ja
les
in
sahf
and
pop
leave
pop
out
imull
stc
out
sti
lea
mov
sbb
sbb
je
lahf
add
xor
inc
lock
jb
push
and
sub
aaa
jo
push
jp
adc
sti
mov
dec
sub
pop
in
jl
jno
inc
cmp
and
decb
dec
frstor
icebp
dec
aad
jnp
dec
insl
add
xor
cmp
xchg
xchg
or
shl
aaa
lods
mov
adc
cmp
adc
mov
decl
es
pop
fadds
mov
push
movsb
or
adc
inc
pop
fstpl
clc
xor
cmp
fisttpl
mov
sbb
popf
imul
dec
xor
fcmovu
adc
xchg
xchg
das
das
aas
jge
xchg
jle
fsts
pop
ret
jle
mov
push
pop
and
add
adc
rcl
popf
jge
mov
adc
sub
stos
xorb
stc
ss
jp
test
dec
inc
mov
pop
xchg
ljmp
ffree
cli
jecxz
shlb
adc
or
leave
in
mov
aad
jp
call
int
mov
push
nop
scas
fisttpll
mov
stc
out
mov
imul
xchg
xchg
add
rcrw
lods
pop
mov
xorb
sbb
pop
and
scas
sub
adc
xlat
xor
inc
in
push
inc
paddusb
cmp
xchg
sbb
test
repnz
mov
cmp
loope
push
fs
adc
mov
ret
mov
stc
cmpsl
xchg
mov
loop
jno
repnz
sub
aad
shrd
loop,pt
mov
jne
push
lods
daa
xor
clc
lret
out
mov
inc
xor
adc
push
pushf
pop
push
shl
mov
dec
inc
push
out
ljmp
imul
fbstp
push
sbb
mov
mov
dec
leave
mov
push
xchg
dec
push
je
mov
es
adc
jnp
cmp
xor
sub
or
popa
jg
lret
roll
cmp
add
mov
sbb
push
mov
push
mov
jmp
movb
and
ja
xor
or
mov
andb
sbb
mov
popf
aas
imul
jns
push
jb
stos
subl
popa
adc
fiaddl
imul
repz
sub
leave
je
iret
ss
pop
loop
daa
repnz
push
sbb
add
xchg
movsl
sub
xchg
mov
in
push
or
push
push
cmc
in
mulb
xor
mov
ss
jle
xchg
lea
lret
adc
sahf
jnp
or
jmp
jnp
pop
mov
fdiv
das
ss
test
shl
sahf
lahf
jl
gs
or
mov
dec
adc
push
stos
ja
push
cmc
ss
sti
xchg
je
cli
dec
xchg
dec
cmp
daa
ss
pushf
or
sbb
push
in
inc
pop
cs
sti
aaa
or
push
adc
adc
sbb
or
inc
xchg
push
shr
ss
xchg
pop
fsubrs
or
lcall
jl
and
fdivs
mov
rcrb
call
or
je
inc
push
out
mov
jae
or
and
dec
dec
push
jle
and
jge
leave
loopne
xchg
mov
insl
in
add
shr
into
in
sub
iret
test
insb
ds
sbb
mov
pushf
mov
fisubl
sarl
inc
test
fcoml
sbb
inc
cwtl
subb
cmpsb
mov
sub
mov
push
mov
jl
sub
cmc
in
sub
pop
loope
test
add
icebp
push
or
mov
adc
data16
ret
iret
sbb
mov
in
pushw
rorb
push
inc
pop
push
mov
push
nop
adc
ljmp
sub
lret
hlt
scas
stos
xchg
dec
or
jo
adc
or
jge
shll
jno
jo
mov
xchg
xchg
pushf
addb
cmp
mov
pop
jmp
inc
test
sahf
sbb
fsubr
jne
push
cltd
add
jg
push
cwtl
movsl
fimuls
sbb
fsubl
hlt
xor
sub
inc
or
out
jle
or
dec
inc
outsb
testl
cmc
push
fadds
pusha
mov
pop
sbb
mov
mov
and
bt
and
cld
lods
ret
dec
or
xchg
divb
mov
dec
inc
mov
dec
pop
int
adc
or
into
outsl
jge
sbb
sbb
cmp
fnstcw
es
daa
jnp
push
roll
mov
into
cmp
or
xchg
and
pop
cmpsb
adc
insb
leave
jae
popa
mov
insb
sarl
ja
push
out
test
cmp
sub
aad
sarb
scas
push
xchg
shr
sbb
popf
imul
cs
dec
test
push
or
lahf
daa
jmp
xchg
xchg
insb
mov
cld
addr16
pop
movsl
and
jg
push
inc
xchg
fidivs
orb
add
mov
mov
or
or
je
sub
push
jle
sbbl
inc
ss
repz
std
das
pop
xor
lahf
jbe
testb
mov
inc
repnz
mov
inc
fildll
jb
cmc
cmp
inc
in
sub
xlat
repz
jae
mov
jge
mov
xchg
ja
pop
lods
jp
jne
cwtl
iret
outsb
pop
cmc
sub
in
adc
dec
mov
repnz
mul
add
mov
push
mov
sub
pusha
cmpsl
inc
inc
mov
xor
xchg
mov
repz
xor
mov
and
mov
and
mov
sbb
shl
hlt
sahf
dec
mov
insl
pop
inc
loopne
pop
gs
dec
and
sbb
cli
jmp
jns
mov
xor
jbe
mov
mov
xchg
outsl
dec
ja
andl
xchg
sysexit
aaa
sub
ret
loope
cmc
fmulp
push
jecxz
adc
dec
shll
adc
fwait
ja
lea
or
pop
enter
add
jo
addl
shl
cmp
cli
push
jb
push
inc
dec
fstl
xor
inc
popl
push
mov
add
mov
loop
mov
cmp
iret
pop
inc
pop
insb
pushf
dec
jge
loope
imul
push
rorl
jns
movsb
pop
adcl
inc
pop
adc
mov
and
mov
xchg
lods
mov
cmp
push
mov
and
mov
add
xor
jne
jb
nop
test
sbb
cmp
and
lods
or
outsb
pop
movsl
rclb
ds
sbb
adc
xor
std
rcr
jg
jp
stc
and
jg
in
bound
in
lcall
xchg
cmpb
sub
jno
sti
push
dec
xchg
aad
sub
or
sub
mov
or
mov
cmp
rcll
jp
pop
ret
xor
pop
mov
ljmp
sbb
inc
jo
aaa
movsl
repnz
xchg
sub
popa
dec
test
lods
or
fs
lret
pop
addr16
sub
test
jmp
xorl
sub
inc
clc
add
cmc
nop
nop
sbb
adc
jecxz
stos
or
mov
inc
or
test
sarl
cmp
ss
push
negl
lds
aas
test
aad
rolb
fcmovnb
sbb
sub
jnp
inc
clc
pusha
jmp
leave
lret
int
and
push
add
or
push
cmc
xor
scas
inc
inc
cmp
dec
cld
out
adc
fsts
int
cli
dec
or
dec
add
adc
jnp
mov
dec
sti
fwait
push
cmc
daa
jecxz
jae
add
or
cmc
sbb
push
mov
lret
sbb
popa
addr16
jae
inc
xchg
mov
aas
dec
mov
mov
fisttps
sar
dec
cs
cmp
jg
inc
cmp
bound
or
clc
fistpll
sbb
das
mov
in
push
mov
fwait
xlat
in
add
out
sub
scas
mov
pop
mov
ljmp
jae
loopne
mov
rorl
shr
dec
clc
int3
movsb
dec
in
cmp
jle
call
lods
shll
lea
push
sbb
and
outsb
mov
in
lcall
xor
mov
sarb
inc
int
nop
push
and
xchg
push
xchg
adc
ss
rolb
sbb
movsb
ljmp
push
xor
testl
lahf
inc
push
xor
ret
iret
das
fisttpl
loope
fwait
push
pop
sbb
test
mov
fildl
sahf
jge
xor
stos
mov
fsubl
jb
adc
sub
mov
inc
or
inc
rcll
test
cmpsl
pop
pop
xchg
push
mov
sbb
aam
cmc
push
xchg
cli
jb
enter
fbld
std
fsubrp
push
dec
sbb
rcll
decl
imul
mov
push
mov
xchg
sbb
pop
mov
gs
lea
fimuls
push
out
cld
popl
in
jbe
or
shrl
xor
inc
dec
loopne
jbe
cmp
adc
sar
pusha
repz
push
push
lods
mov
pop
ficoms
or
sbb
mov
aas
test
nop
cmp
cmp
addr16
aam
jbe
xor
aad
mov
jl
add
test
call
pop
push
inc
push
daa
lock
je
sbb
and
pop
inc
roll
nop
icebp
adc
jl
mov
dec
loopne
mov
jge
int3
loopne
push
push
sub
sub
into
mov
ret
xor
mov
and
sub
leave
aad
lods
fwait
insb
inc
lret
xchg
xchg
aas
lds
push
test
rep
imul
cmp
imul
inc
mov
movsb
jmp
sbb
mov
push
or
fcomp
xor
jb
aas
jecxz
pop
setae
repz
test
mov
fildl
subb
mov
rolb
cltd
jae
cmpsb
mov
sub
test
push
sahf
or
testb
add
das
sbb
shr
or
fistpl
jge
in
call
je
lret
mov
popa
data16
and
test
or
jbe
xchg
repnz
sub
push
movsl
mov
popf
rclb
adc
mov
cmp
cmp
movsl
cmp
cld
sbb
xchg
ss
repz
xchg
adc
cmp
add
adc
int
add
fsubl
jmp
cmpsl
xorb
dec
arpl
aas
into
aad
inc
adc
adc
xor
xlat
mov
flds
jbe
push
cmpsb
adc
or
paddb
add
insl
pushf
mov
sbb
es
xor
rorl
cmpb
dec
or
fbld
push
cmp
mov
enter
mov
jg
stc
call
xchg
and
sbb
aas
cli
in
inc
fnstcw
fld
sub
adcb
or
stos
out
cli
push
adc
mov
mov
stc
insl
dec
mov
fnstcw
mov
and
sahf
push
jb
mov
fisubrl
xchg
push
xlat
xchg
cmp
mov
adc
mov
mov
enter
stc
loopne
sbb
jge
and
dec
outsl
cmp
pop
rorl
sbb
cmp
pop
mov
lcall
sbb
leave
xchg
divb
pushf
mov
lods
adc
notl
stos
pop
lods
lods
xchg
jo
cmpsl
ja
jg
add
or
add
cmp
ja
lds
lret
add
int3
sti
sub
int
sti
pop
stc
pop
inc
mov
mov
xor
or
add
mov
repnz
mov
mov
push
cmc
aad
dec
movsb
mov
imul
int3
aad
push
movsb
xchg
arpl
mov
mov
xor
aam
dec
aam
inc
aaa
ja
sub
jecxz
imul
sub
sbb
stc
hlt
xor
mov
aad
repnz
sub
jecxz
pusha
lret
mov
jnp
in
cmp
inc
aas
pop
cltd
pop
mov
inc
jecxz
test
cmp
sbb
addr16
lods
addr16
pop
push
test
mov
cmp
out
hlt
and
push
imul
or
lret
pop
adc
inc
je
mov
stos
xchg
jne
mov
clc
inc
push
int3
mov
add
cli
pop
xor
jp
mov
call
mov
adc
mov
aam
pop
mov
daa
pop
js
adc
adc
or
jae
add
inc
xchg
cs
lcall
jno
loope
test
lods
mov
imul
or
add
in
pop
jns
aaa
cmc
ret
cmp
xor
or
sub
push
jns
mov
add
mov
adc
data16
mov
inc
mov
leave
stos
jne
sbbb
add
gs
pop
cli
testb
dec
dec
mov
dec
sbb
jo
xor
aaa
add
iret
mov
aas
cmpsb
sbb
mov
in
pop
and
cld
cwtl
out
or
xchg
dec
xor
push
test
mov
push
push
cmp
aad
adc
call
push
mov
sarl
fs
cmp
fs
ficomps
pushf
into
test
mov
out
cwtl
cli
out
inc
jle
or
lahf
and
fisttps
repz
pop
dec
fwait
mov
mov
and
sbb
pop
xor
adc
scas
xchg
frstor
mov
dec
cltd
pop
jmp
push
idivl
sbb
loopne
loop
cmp
fs
sbbl
out
inc
imul
js
fwait
dec
sub
stos
loopne
adc
pop
or
movsb
dec
ss
into
push
xchg
pop
in
pop
std
in
inc
cltd
pop
loope
test
xor
push
xchg
jne
pop
in
fcmovu
pusha
cmpsb
shlb
call
roll
jb
test
inc
dec
out
rorb
call
sub
fidivl
or
jmp
xchg
int
pop
adc
mov
add
mov
das
jo
and
cli
std
cmp
lcall
js
pop
adc
inc
std
hlt
mov
pop
mov
push
rcl
inc
pop
pop
xchg
lahf
int
or
cld
mov
pop
and
and
bswap
xchg
xchg
es
cmp
frstor
mov
sbb
xlat
rolb
fwait
shl
addr16
mov
fimuls
mov
push
dec
xlat
pop
dec
loopne
aaa
ljmp
or
lret
or
adc
xchg
shrb
pop
jno
scas
fdivr
jbe
xchg
jae
sub
add
xchg
test
pop
sbb
and
mov
leave
push
dec
lahf
outsb
xor
fs
mov
sub
mov
imul
out
mov
ljmp
mov
daa
adc
adcl
bound
mov
dec
sub
xlat
add
test
inc
ret
out
add
adc
fstps
sub
or
addr16
xor
lods
out
imul
and
popf
xchg
mov
and
rcrb
cmp
scas
mov
push
push
clc
and
xchg
ret
pop
scas
push
sbb
pusha
sbbl
mov
or
mov
scas
xchg
sub
xor
sub
mov
adc
sti
mov
sub
lods
dec
fcompl
mov
adc
cwtl
fisubl
enter
rorl
decl
jle
vshufps
sub
jb
jae
mov
cmpsl
mov
lcall
jbe
add
fldcw
dec
pusha
cltd
or
push
jae
data16
lret
dec
dec
xchg
lret
ror
cli
mov
sub
in
out
es
loopne
ret
inc
push
out
mov
mov
jbe
pop
fmull
test
sbb
push
jb
clc
inc
mov
mov
inc
push
lahf
mov
mov
fisttpl
in
les
pushf
repnz
iret
pop
adc
adc
imul
roll
add
mov
inc
nop
mov
lret
cmp
fidivs
or
xchg
pop
adc
dec
lods
pop
fdivrs
fcmove
shl
rcrl
and
mov
call
test
cmp
jns
inc
lahf
mov
inc
test
shll
imul
mov
or
xor
ficoml
lds
cli
pop
push
push
iret
cmp
cmp
pop
xor
dec
jne
mov
pop
push
mov
subl
ljmp
dec
into
pop
sbb
int
test
ljmp
test
mov
and
movl
pop
lret
lcall
fwait
cmc
mov
xchg
or
and
mov
mov
xor
xchg
xlat
in
in
orb
arpl
xchg
stos
xor
pop
pop
fwait
imul
rolb
movsl
pop
test
xor
mov
sub
test
add
cs
ret
push
pop
jb
mov
aaa
jecxz
and
add
andb
in
aad
imul
nop
mov
and
dec
scas
jmp
or
sub
jp
or
insb
add
pop
in
jle
mov
pop
and
pop
scas
mov
push
into
or
sub
das
cmc
repnz
bound
div
mov
push
fstps
sbb
push
loope
add
scas
mov
scas
lods
cmp
pop
outsl
stos
mov
ss
out
je
xor
imul
scas
outsl
les
stc
sbb
rolb
pop
lcall
add
sub
jmp
adc
ss
outsb
fstps
mov
pop
mov
lcall
push
xchg
outsb
add
sahf
inc
pop
inc
faddl
in
loop
jl
mov
scas
push
and
aas
in
icebp
mov
into
popa
lret
push
rcl
pushf
mov
stos
mov
fucomp
cwtl
test
inc
mov
inc
mov
iret
mov
pop
adc
pop
mov
int
xor
es
in
sub
cmpsb
inc
mov
imul
ja
push
xlat
pop
mov
add
push
cmp
push
mov
jle
push
loopne
xor
mov
js
mov
popa
das
insb
rclb
mov
cli
cmp
jbe
inc
call
stos
sbb
xchg
lock
or
xor
pop
lret
fidivrs
out
cmp
jle
adc
push
lcall
int
int3
add
add
js
xchg
jmp
cs
mull
or
stos
and
jb
push
sarb
ffree
xor
ljmp
push
jecxz
aaa
rcrl
scas
mov
dec
xchg
sbbb
mov
push
sub
pusha
setnp
pop
dec
xchg
dec
fnstsw
dec
lods
ljmp
addr16
xchg
pop
dec
pop
and
outsl
jo
jno
lret
sub
sub
add
push
xchg
hlt
jno
xor
pinsrw
dec
adc
push
scas
rcl
add
addb
or
dec
ds
nop
pop
jns
mov
lcall
pop
ret
xchg
hlt
rcll
out
pop
push
test
mov
mov
rorl
out
das
or
stc
cmp
push
into
pushf
movsb
fucomip
jle
inc
sub
into
stos
sub
pop
push
jge
ret
dec
sahf
mov
loop
jl
mov
inc
icebp
lds
shll
scas
daa
cltd
aad
xor
aam
fst
lods
leave
ret
cli
sub
mov
hlt
outsb
pop
bound
test
mov
dec
rorl
or
subb
adc
aaa
xchg
gs
sti
pushf
fisttpll
outsb
shll
jnp
mov
inc
pop
dec
jne
push
inc
clc
sbb
ljmp
out
std
ja
popa
push
inc
push
jmp
popa
and
ret
out
call
push
push
xchg
fsubl
inc
mov
roll
outsl
das
repnz
mov
dec
push
mov
xchg
jmp
pinsrw
sbb
xor
and
test
push
mov
faddl
xchg
inc
loop
xor
add
fnstcw
inc
mov
adc
inc
and
xor
jp
pop
scas
fadd
add
stos
pop
inc
xor
shrb
push
dec
shlb
andb
push
jmp
sub
das
scas
xor
fstl
out
ljmp
test
pop
enter
out
movsb
dec
sbb
inc
pop
mov
ss
jle
add
daa
mov
jp
mov
xchg
inc
cmpl
xlat
and
push
sub
xor
mov
cld
lahf
xchg
push
push
jo
ss
and
repnz
scas
push
fmull
pop
arpl
mov
dec
push
lret
mov
shr
mov
jmp
xor
cmpsb
adc
push
pop
pop
and
cs
cmp
repz
testb
pop
mov
xor
cs
sbb
dec
xorl
sbb
mov
bswap
jle
ret
sbb
popl
nop
push
jle
orw
mov
sub
mov
and
fsubr
fdiv
push
jmp
loop
ja
mov
cmp
les
pop
andb
jb
inc
fiaddl
leave
sbb
sub
or
xchg
push
inc
cmpsb
jne
lret
add
mov
in
mov
fdivrl
push
mov
mov
adc
or
lahf
pop
arpl
inc
inc
arpl
push
mov
jno
lret
scas
pop
out
xchg
lods
pop
sub
pop
dec
arpl
or
mov
cmp
es
lret
add
xor
cld
jge
mov
mov
push
test
int3
mov
in
jae
dec
pop
adc
cli
scas
sub
stos
insb
xchg
mov
leave
scas
in
out
mov
pop
jae
add
int3
cmp
mov
push
cmp
push
dec
mov
pop
into
outsl
and
dec
jg
fcmove
push
push
fnsave
dec
aas
xchg
pop
mov
sub
cmc
dec
xchg
dec
mov
imul
or
pop
mov
sub
push
push
das
dec
add
fisubrs
adc
mov
cmpsl
negl
es
call
dec
xchg
fiadds
mov
sub
cmpsb
sbb
jno
xchg
mov
daa
shlb
mov
pop
jle
xchg
loop
lock
int
mov
pop
jg
pop
test
adc
inc
sar
sbb
inc
cmpsb
into
dec
sbb
mov
aas
sub
loopne
and
adc
pop
mov
pop
aam
lods
das
cmp
xlat
push
pusha
cmp
and
jecxz
mov
icebp
push
fimuls
push
or
mov
and
lock
outsl
cmp
mov
fadds
pop
mov
fcoms
or
fmul
mov
pop
test
inc
sbb
inc
push
sahf
xchg
and
inc
and
psrld
pop
scas
pop
mov
dec
or
cmp
jecxz
mov
divb
clc
pushf
xor
ds
and
sub
repz
sub
jbe
mov
jmp
mov
rcll
sbb
mov
lcall
lret
fimull
mov
add
into
sbb
xor
ss
xor
lret
jns
jecxz
cmp
test
ja
push
inc
repnz
sti
jge
cwtl
movsl
popa
lahf
add
mov
mov
sbb
cmp
push
or
or
jg
mov
mul
cmp
mov
cli
adc
shr
jbe
shll
test
ror
out
stc
adc
imul
inc
fbld
mov
loopne
xor
mov
fbld
mov
loopne
jne
lret
sar
je
mov
stos
sub
jl
out
jae
orl
shlb
jle
lds
xchg
mov
movsl
addr16
in
inc
inc
mov
rolb
push
xchg
dec
loope
add
fs
call
mov
shl
or
adc
or
lock
xchg
cmp
xor
push
xor
dec
xchg
xchg
fdiv
iret
dec
cmp
lds
subb
push
cmp
mov
mov
pop
cmc
mov
mov
jge
mov
call
ret
jnp
sbb
loope
dec
push
and
xchg
xchg
fidivs
lret
movsb
mov
xor
movsl
mov
jge
cmpl
xchg
cmp
and
nop
or
push
jp
addr16
push
push
xor
add
cmp
cmp
loope
push
ret
mov
outsl
cmp
dec
scas
repnz
in
or
xchg
mov
dec
jl
xor
lret
and
push
test
push
push
mov
rcl
out
add
movsb
lods
ret
adc
stos
jo
iret
or
stos
fmulp
inc
mov
out
cld
sub
push
mul
mov
inc
mov
mov
loope
out
dec
pop
hlt
jmp
les
add
addb
adc
jp
mov
cmpl
nop
and
push
mov
jno
clc
cmp
jge
or
adc
loope
or
or
aam
adc
and
fwait
outsl
hlt
mov
shrl
pushf
push
gs
mov
ljmp
jg
xor
movsl
shlb
adc
cltd
sarb
pop
in
push
jl
ljmp
adc
mov
test
inc
into
xorb
add
jmp
popa
icebp
negb
xchg
xlat
pop
xchg
jecxz
sbb
pop
jg
bound
mov
nop
jnp
test
notl
sub
stos
or
cwtl
dec
popf
sahf
push
mov
lret
cmpsb
pushf
fcoms
aad
xor
movsl
jb
sahf
cwtl
pop
dec
jns
mov
inc
mov
es
ds
fbld
adc
or
xchg
movsl
xor
daa
inc
or
mov
leave
fdivs
push
idivb
mov
in
popa
lock
insb
or
sbb
test
cmp
mov
jbe
or
mov
mov
dec
lahf
subb
sbb
inc
sbb
jecxz
pop
inc
fmull
incl
and
mov
mov
and
push
xchg
movsl
mov
fisttpll
mov
aad
xchg
jne
and
cmp
cltd
repz
mov
add
hlt
ljmp
aas
das
pop
pop
sub
inc
or
roll
cmp
xorb
mov
shrl
jns
mov
negb
or
rorb
sbb
sub
fst
aas
test
xchg
sub
rcrb
push
dec
popa
testl
aam
xchg
les
dec
dec
xchg
sub
gs
jno
mov
clc
ss
xchg
aas
mov
rcrb
push
mov
nop
aas
cli
hlt
pop
push
or
fdivrl
setns
pop
push
xchg
lret
sub
fisttpl
loope
in
lods
inc
adc
addr16
clc
xchg
inc
or
pop
in
shrb
lret
int3
sbb
adc
inc
pop
ficoml
jbe
addr16
cmp
push
mov
or
mov
loope
int
add
imul
adc
or
cmp
arpl
dec
cmp
mov
clc
mov
hlt
out
sbb
and
imul
mov
mull
lods
ds
lcall
inc
cmc
push
aam
mov
dec
enter
lock
jae
cmp
xor
lods
xor
icebp
movsl
jbe
fxch
xchg
lret
mov
jge
mov
adc
push
nop
pop
dec
lret
inc
mov
push
dec
jne
add
std
sub
mov
cmp
call
cld
seto
cmp
inc
rcr
and
or
repnz
cli
fs
stc
add
repz
lods
aad
push
sbb
jmp
xchg
ret
xchg
in
or
rcl
mov
mov
inc
ret
daa
inc
lods
sub
fisttpll
dec
arpl
add
sahf
or
mov
cmp
popf
pop
jbe
xlat
gs
pushf
dec
fld
pop
dec
mov
push
xchg
dec
xchg
pop
jg
daa
je
bound
or
sub
push
enter
jne
inc
sbb
mov
sarb
jecxz
mov
jg
mov
xor
cmp
bound
into
jnp
es
es
rorb
lock
in
aaa
rolb
sahf
jae
gs
mov
xstore-rng
cmpsl
pop
cmpsb
insb
repz
popf
inc
sti
sbb
ret
cmpsb
lock
xor
pop
shlb
je
stos
cmp
cmp
popa
insl
xchg
fsubr
ret
ret
loope
pop
mov
out
pushf
and
jmp
mov
fs
rcl
xchg
jbe
push
push
sbb
or
sub
aaa
enter
cmpsb
mov
sbb
loop
xor
and
jno
inc
pushf
arpl
scas
fbstp
test
xchg
cmpsl
aas
cmp
fisubrs
cmp
test
scas
push
cmp
jmp
jo
pushf
inc
lock
cmp
jnp
rcr
mov
aas
mov
cltd
bound
or
stos
dec
loope
aas
out
xor
jae
rcll
sbb
out
jae
roll
mov
xor
adc
lret
mov
sbb
cmp
xor
fistps
bswap
sbbb
lds
xor
push
mov
sbb
adc
aas
lahf
aaa
push
mov
test
adc
mov
ret
stos
pop
aam
je
cwtl
sbbb
bound
insb
inc
add
push
out
iret
enter
add
push
sub
push
push
or
jg
jnp
and
jecxz
xor
sub
incb
in
cmp
mov
leave
push
aaa
jns
sbb
jnp
addr16
mov
rcl
xchg
arpl
lret
or
add
insl
mov
cmpsl
or
dec
mov
incl
push
or
hlt
fcom
push
lret
sarl
xor
sbb
jmp
stc
dec
inc
test
lret
xor
adc
and
cmpb
sahf
and
std
sbb
sbb
add
xchg
sbb
aas
push
mov
vpavgb
push
cltd
ret
mov
aas
and
xchg
ss
in
push
sbb
jmp
push
mov
or
aaa
add
fiaddl
mov
fisubrs
adc
orl
xchg
sbb
cmc
arpl
sbb
iret
fwait
lahf
sarl
lret
push
inc
lds
add
fbld
stos
fadds
cmp
jecxz
in
mov
add
jge
add
jp
adc
hlt
imul
notb
in
or
push
ss
pop
add
hlt
in
mov
aas
sbb
jne
xchg
lods
je
sub
push
sub
and
xor
pop
das
out
sbb
push
sbb
scas
enter
test
push
inc
dec
add
cwtl
repz
les
add
mov
fsub
mov
notb
jecxz
adc
cld
adc
mov
mov
addr16
mov
ds
push
movsl
testl
cmp
xchg
in
xchg
lret
xchg
not
or
sub
dec
pop
or
pop
sbb
sub
loopne
sub
xchg
test
dec
pushf
cmpsb
cwtl
mov
mov
clc
sbb
inc
add
pinsrw
enter
add
xor
clc
ljmp
dec
in
into
in
cmp
pop
sbb
xor
mov
cwtl
ret
imul
jg
shrl
cltd
mov
jg
sbb
outsb
mov
mov
ljmp
iret
push
arpl
divl
pop
lret
outsl
out
sti
inc
ret
jge
icebp
push
enter
cmpsl
add
pop
call
pop
xor
test
fs
fstl
dec
fisubl
int3
mov
adc
rcll
push
sub
adc
mov
mov
jmp
iret
ss
movsl
lds
push
mov
dec
pusha
push
imul
mov
jg
roll
sbb
out
jmp
in
push
repz
outsl
adc
enter
scas
loop
fnstcw
imul
fdivp
xor
mov
das
mov
push
jge
push
cltd
and
push
imul
mov
mov
std
mov
ds
call
dec
shrl
adc
jae
fdivrp
dec
mov
loop
cmp
fcmove
icebp
lods
pop
jne
pop
arpl
push
lahf
push
xchg
push
pop
xlat
or
sub
ja
sti
std
cmpsl
push
push
pop
frstor
push
mov
int3
aas
iret
shl
jae
lds
sub
enter
lahf
jecxz
mov
ds
adcl
fs
xchg
std
cmp
shl
jae
xchg
and
add
cmc
mov
push
push
rcpps
leave
and
inc
lcall
sbb
sbb
mov
mov
rolb
sbb
cmp
jg
or
in
add
xchg
lahf
cmp
les
pop
adc
xchg
aas
dec
lret
adc
rorl
ss
test
cmp
rcr
adc
cmp
pop
lcall
addb
inc
fsubr
pop
loope
xor
dec
cmpsb
xor
insb
sarl
repz
push
mov
dec
xchg
adc
es
adc
in
mov
mov
fistps
push
rcl
sub
call
and
js
dec
jnp
adcl
fldenv
mov
jle
insb
sub
pop
jl
xor
mov
test
jmp
inc
and
cld
in
popa
jmp
aad
adc
lahf
mov
scas
das
sub
push
fistps
ficoms
and
sahf
ret
aam
pop
push
and
inc
loopne
jmp
fildll
xchg
leave
in
cltd
fs
mov
movsb
adc
out
orb
dec
addr16
dec
jns
fistpl
add
imul
insl
sbb
ror
and
inc
loopne
mov
adc
sbb
mov
and
xor
cmp
push
dec
std
scas
jne
arpl
out
stos
pusha
add
sub
fbstp
mov
dec
or
push
cmp
repz
lcall
mov
aas
jae
test
in
aad
push
add
ja
sub
xor
and
stos
shll
mov
ret
mov
inc
pop
mov
adc
aas
int3
pop
cwtl
cmp
in
and
ds
xor
dec
sbb
cmpsl
aas
and
jl
enter
jbe
lea
test
roll
pushf
scas
lods
and
cmp
inc
push
push
jl
aaa
loope
call
sub
js
enter
mov
test
xor
cmp
in
add
add
jne
pop
mov
popl
dec
negl
dec
cmpsb
test
mov
lret
dec
add
adc
xchg
in
pop
mov
add
sbb
out
jno
sub
jmp
or
int3
mov
cld
sbb
xchg
cmpsl
or
push
insl
sti
and
push
and
in
mov
xchg
roll
ret
inc
dec
fsubrl
cmpsl
stos
pop
ret
fsts
or
ds
mov
ret
push
or
loop
pop
add
pop
cld
xchg
mov
adc
sbb
mov
jmp
cmpsl
pop
lcall
dec
push
mov
sbb
daa
xchg
and
rcrl
outsb
cmp
push
daa
mov
aaa
imul
jp
imul
xchg
js
sbb
scas
std
ror
cli
test
aad
lds
cmp
mov
cmpsl
test
push
or
mov
or
mov
sbb
xor
add
or
jecxz
mov
jge
data16
sub
in
dec
jnp
cmpb
cmc
aaa
dec
xchg
mov
sub
sub
jo
add
in
push
inc
aad
dec
sahf
sbb
jne
cli
jl
dec
out
inc
stos
int
jge
pusha
and
mov
xor
cld
jbe
ja
xor
pop
and
lods
mov
jl
cmp
rolb
fsubl
dec
ljmp
pop
pushf
les
lcall
mov
stc
and
mov
add
in
or
call
enter
rcrl
repnz
stc
mov
aas
popf
daa
imul
test
cmp
test
push
push
pop
or
les
dec
push
call
movsl
decb
inc
test
movsl
cmp
push
arpl
inc
mov
jb
sub
sub
xchg
hlt
aam
mov
mov
mov
cmp
mov
push
stos
lahf
add
lea
lods
adc
mov
bound
push
movsl
mov
push
pushf
pop
mov
sub
cmp
pop
jg
imul
inc
in
clc
pop
gs
or
insb
pushf
lret
sbb
icebp
sti
shrb
clc
push
or
xor
inc
xchg
adc
inc
dec
push
sub
lea
movsl
push
das
push
inc
pop
out
inc
bnd
push
inc
jl
push
xchg
xchg
int3
clc
xor
jbe
ret
add
rclb
mov
dec
fsubrl
push
mov
shll
jno
sub
icebp
jl
cmpsl
mull
dec
pop
mov
ljmp
loop
cmp
test
xlat
pop
jp
inc
or
fcmovnbe
sbb
cmp
and
jno
mov
shr
cmp
ja
sbb
mov
dec
inc
dec
or
js
cld
gs
dec
inc
sbbb
mov
fs
mov
shrl
incb
mov
mov
or
stos
sub
arpl
xor
inc
fadds
pop
outsb
pop
sub
xchg
test
xorb
xchg
jl
jns
leave
xchg
movsl
inc
lahf
push
xor
add
outsb
rcr
or
stc
pop
add
mov
addr16
rclb
add
lret
lret
lahf
cs
imul
outsb
rclb
xchg
cltd
sub
mov
into
and
add
pusha
dec
add
add
leave
fwait
sbb
aam
push
jns
inc
stos
call
je
rcll
stos
push
fwait
out
jecxz
jle
popf
scas
arpl
or
in
mov
inc
addb
mov
cmc
mov
cmp
add
dec
or
sbb
adc
or
leave
sbb
xor
or
mov
cld
cmp
jecxz
push
sub
sbbl
inc
cmp
imul
inc
mov
repz
cmp
mov
jns
sub
inc
mov
mov
aam
xchg
dec
pop
xchg
mov
mov
xor
dec
pop
ret
jg
pushf
or
and
pop
mov
cld
sbb
ret
or
or
mov
mov
sub
push
ljmp
fdivs
pushf
push
mov
testl
push
shll
aas
mov
inc
jo
insl
pop
mov
int
iret
or
mov
mov
sbb
mov
lods
mov
stos
push
inc
jne
add
xor
and
test
xor
and
pop
jns
push
clc
int3
lods
sbb
aaa
lods
jno
push
jae
pop
pop
push
inc
daa
mov
fdivrs
push
dec
lds
mov
inc
decl
pop
fnstcw
aad
mov
mov
mov
arpl
jle
dec
loopne
jle
lods
orb
outsb
int
les
mov
das
mov
cmp
aam
std
loopne
movq
push
mov
fcomps
push
jge
and
add
pop
fiadds
sbb
bound
jae
sub
lock
xor
inc
sbb
addr16
gs
in
or
push
fs
aas
inc
js
push
rcll
push
fdivr
fldl
stos
dec
push
inc
mov
repnz
popa
cmp
lock
jb
test
jmp
sub
mov
add
adc
and
xchg
jge
cmpsb
paddsb
pop
or
mov
pop
addl
pop
mov
mov
int
lcall
cmp
cmp
jne
jnp
notb
lret
lahf
fisttps
int3
test
push
repnz
mov
cmp
sbb
jnp
call
xor
pop
test
sub
lret
mov
cmp
xor
cmp
hlt
ss
sub
pop
jnp
push
xchg
in
or
xorl
adc
mov
sahf
std
das
movl
adc
inc
jg
fisttpll
mov
push
dec
das
imul
jb
xchg
mov
addb
sub
xchg
and
mov
sbb
outsb
ds
and
jnp
xchg
and
jg
stos
push
mov
xor
or
hlt
adc
add
iret
xchg
mov
lods
jl
push
bound
out
out
sbb
bound
outsb
loope
std
sub
popa
addr16
out
xchg
mov
ss
dec
jle
movsl
andl
daa
xchg
aas
sbb
jo
cmpsb
stos
ffreep
or
pop
lea
or
mov
mov
dec
subl
std
inc
push
xchg
cmp
shrb
add
add
xchg
in
gs
lds
push
shlb
fimuls
sbb
add
mov
xor
out
and
xchg
movsl
inc
mov
and
adc
push
imulb
and
rcll
mov
dec
cmp
addr16
sbb
sub
mov
lds
std
testl
fidivs
xor
push
fiadds
ljmp
ja
fldenv
out
cmpsl
xor
mov
lcall
pop
and
inc
jb
inc
sbb
mov
movsb
enter
mov
fimull
inc
or
mov
inc
pushf
loop
insb
jl
outsl
adc
pop
jae
inc
test
jnp
stos
int3
lea
arpl
repnz
jecxz
xor
cmp
mov
jp
mov
mov
test
fs
fists
ds
cmp
push
or
loopne
jmp
dec
push
daa
test
cmp
je
scas
test
jne
push
mov
lods
into
lods
sbb
iret
in
out
jne
pop
mov
mov
lret
inc
loope
jne
dec
notb
push
insb
cmp
xchg
jl
lret
push
fidivrs
mov
xor
int3
mov
enter
jge
imul
cmp
fs
test
out
cmp
enter
jne
xchg
mov
test
ja
ds
pushf
shll
paddb
and
ss
test
sub
test
lahf
dec
or
lea
cmc
popa
xchg
test
pop
jge
scas
mov
cmpsl
ss
hlt
xchg
icebp
jle
mov
xchg
cmc
pusha
sub
push
adc
daa
adc
mov
jge
and
sbb
cli
add
or
dec
mov
jo
movb
lret
movsb
adc
or
dec
push
repz
popf
mov
dec
dec
movsl
mov
jle
pop
clc
inc
or
aam
inc
and
mov
sub
mov
insb
test
or
sub
or
add
cmp
xchg
aad
inc
es
into
outsl
inc
int3
gs
lret
in
popl
sbb
add
ret
scas
sti
std
loope
aaa
sbb
es
cmovns
lret
sbb
inc
es
les
adc
int
dec
pop
iret
repnz
push
mov
icebp
pop
jg
and
mov
movsl
aam
inc
iret
fildl
mov
mov
push
cmp
popa
sub
dec
stc
mov
int
adcb
push
pop
je
mov
scas
pop
cs
popa
pop
dec
mov
jnp
inc
mov
testl
and
shl
addr16
test
push
test
sbb
daa
repz
xorl
test
in
out
cmp
and
cltd
sti
push
xchg
mov
mov
call
lea
cmp
mov
insb
cmc
sub
pop
mov
bound
fucomip
ret
imulb
jle
punpcklbw
ja
movsb
push
mov
or
pop
sti
int
inc
sbb
lcall
push
es
push
jae
sarb
mov
lea
js
test
cwtl
adc
loop
cmp
xchg
jbe
fwait
pop
dec
mov
push
jl
xchg
add
lods
in
scas
lcall
inc
mov
jl
mov
iret
dec
sbb
inc
add
xchg
incl
adc
jo
leave
mov
or
cmp
xlat
sbb
sub
cwtl
and
ret
stc
mov
sar
add
mov
ds
xchg
xor
mov
mov
mov
add
xor
push
out
and
div
scas
in
inc
lahf
mov
xchg
and
dec
mov
testb
sbb
das
cmp
into
sub
cmpsb
scas
loopne
push
ja
add
jbe
mov
scas
loopnew
cld
dec
arpl
inc
in
cld
inc
pop
sbb
push
adcl
xchg
mov
lods
or
fwait
cmp
cmp
xchg
outsb
sarl
push
arpl
lret
xor
pop
jno
mov
or
mov
push
push
push
ret
jo
mov
jle
out
or
shrb
add
movb
pop
pop
iret
pop
mov
sti
call
push
js
sbb
frstor
push
adc
inc
into
in
mov
sub
mov
sub
xchg
mov
stc
mov
mov
jbe
dec
add
push
adc
scas
and
shrb
fildl
jnp
adc
and
cs
adc
repnz
shlb
sub
jmp
and
cmp
ljmp
add
push
fldcw
xor
mov
fmuls
xor
sahf
js
push
xchg
inc
add
xlat
adc
push
inc
rorl
out
cmp
add
rolb
inc
mov
cmp
or
cmpsb
add
sbb
xchg
adc
fs
mov
in
cmpsl
push
mov
mulb
dec
movsl
test
gs
scas
fwait
pop
jb
sbb
add
hlt
outsb
xor
fwait
dec
xchg
jae
div
push
cmp
jecxz
cmpsl
jno
gs
cmp
mov
mov
xor
pop
leave
pop
into
mov
cmp
sbb
xchg
idiv
insb
push
call
fcoml
repnz
imul
and
aaa
cmp
insb
rol
push
adc
push
jo
int
ja
xchg
pop
mov
sbb
mov
push
and
je
pusha
push
das
fisttps
lods
aad
or
repz
aas
out
jns
or
aas
lret
dec
sub
cld
mov
lds
jnp
stos
pop
adc
mov
or
js
fisubrs
mov
sbb
lret
test
repz
xchg
sub
xor
add
in
adc
les
pushf
xchg
movsl
pop
push
push
popf
int
mov
outsl
jb
push
outsb
adc
jecxz
cmpsl
sbb
add
xor
scas
dec
stc
arpl
jb
xor
or
lahf
xchg
inc
dec
out
hlt
ljmp
mov
inc
xlat
rcll
or
jne
jge
dec
xchg
cmpsl
out
cmp
push
and
mov
std
jge
mov
mov
add
and
aad
mov
sub
sub
xchg
mov
push
popf
add
mov
faddl
push
fsubrp
movsb
std
dec
pop
mov
mov
mov
roll
or
jae
inc
or
andl
inc
outsl
adc
loop
daa
mov
loop
push
je
sub
mov
push
push
mov
outsb
sbbb
leave
push
ljmpw
lret
in
dec
mov
and
repz
loop
pop
dec
sbb
in
xor
cmp
pop
push
mov
xchg
mov
fcomps
mov
int3
cmp
xor
adcl
fmuls
sub
mov
iret
aaa
xchg
fldenv
and
xchg
and
arpl
xlat
out
das
inc
add
adc
xchg
je
mov
mov
insl
lea
addb
lods
lahf
dec
or
or
push
stos
pop
jg
movsl
xchg
shrl
into
push
mov
lea
fiaddl
add
mov
sub
mov
inc
shl
out
mov
jle
add
push
and
mulps
xchg
test
add
and
mov
in
pop
repz
xchg
je
test
in
mov
adc
mov
mov
shl
mov
rcl
pop
adc
mov
mov
sub
mov
mov
sti
xchg
xor
fistl
xchg
xchg
ret
cs
fwait
data16
jp
cmp
fisubl
aaa
fcom
std
ds
mov
fildl
mov
jl
push
push
push
imul
inc
fidivrs
mov
loopne
add
push
cmp
add
and
decl
sub
in
repnz
cmp
out
xor
iret
sbb
arpl
daa
pop
pop
push
arpl
jle
and
repnz
sub
aad
push
mov
xor
xchg
adc
movsl
push
out
sbb
aad
dec
iret
cmp
mov
pop
in
aas
inc
test
data16
ss
jp
pop
xchg
cwtl
andl
cwtl
push
xor
inc
lods
cmpsl
jne
xchg
inc
pop
push
jmp
stos
sbb
jmp
popa
adc
add
pop
jne
sbb
push
or
pop
clc
je
into
bound
in
mul
mov
xor
or
mov
call
cmp
add
pop
inc
in
repnz
pop
leave
repz
pushf
inc
addr16
sbb
fs
inc
hlt
cmp
rcrl
adc
cmpsb
lea
movsb
in
out
xchg
sub
sub
clc
pop
out
add
imul
pop
daa
pop
and
mov
inc
dec
and
aas
add
sbb
sub
and
mov
fwait
cmp
repz
push
xor
push
pop
xor
scas
fdivs
sub
lahf
jns
cmp
jae
mov
stos
xor
leave
cs
push
mov
cmpsb
jnp
ljmp
sub
add
push
adc
cs
adc
test
pop
or
jmp
inc
or
add
jp
jmp
fcomp
arpl
or
enter
xchg
and
mov
sarb
pop
aam
out
hlt
loopne
mov
cmp
nop
mov
in
push
sbb
aam
push
lret
cmpsl
lret
iret
adc
cld
or
int3
or
sti
mov
dec
aaa
in
cwtl
loope
jle
mov
inc
dec
int
add
ficompl
aad
push
cmp
int3
inc
loopne
inc
xor
push
fucomi
test
iret
mov
ret
in
rcll
lods
je
es
fnstenv
test
pop
jmp
testl
sub
push
lcall
adc
sahf
mov
fwait
sbbb
sarb
mov
jp
inc
enter
dec
negb
fildl
notl
jge
subl
daa
repnz
xorb
mov
mov
loope
and
in
dec
and
push
push
sti
push
push
xchg
cmp
hlt
xor
push
rcl
dec
in
insb
jns
add
cld
mov
mov
imul
push
mov
cmp
aam
cmc
pop
bound
repnz
adc
outsb
inc
mov
pop
jge
std
xor
lahf
adcl
test
pop
out
push
and
sbb
outsl
jns
lods
out
popf
ljmp
xor
cmc
fsubl
sub
lcall
hlt
xlat
aam
inc
shll
in
cltd
lret
test
sub
ret
jne
cmp
bswap
data16
adcl
mul
jmp
inc
loopne
in
lret
loopne
lods
cmp
jge
pusha
adc
les
enter
ja
dec
xchg
pop
sub
lea
insl
mov
mov
add
lcall
sbb
jge
test
push
es
sbb
addr16
pop
mov
cld
in
and
sti
and
out
lds
mov
sub
xchg
fiadds
inc
out
jecxz
fwait
test
and
out
out
mov
mov
insb
outsb
pop
cmc
push
mov
popf
xchg
mov
mov
add
jbe
pop
inc
push
inc
popa
lea
int
jge
mov
mov
div
fiadds
push
xchg
sub
mov
pop
pop
push
adc
inc
mov
xchg
jo
mov
or
jl
mov
mov
and
jl
arpl
icebp
push
lods
jae
adc
cmp
in
cmpsl
lea
mov
adc
ret
pop
or
ret
sub
jmp
lods
mov
inc
jl
in
push
sub
es
xor
push
add
cmp
sub
in
or
mov
mov
push
or
aad
mov
pop
push
lds
xchg
jge
lock
sbb
jb
mov
cmp
inc
pop
daa
rcll
std
lcall
or
loope
in
mov
sub
js
or
lods
jo
out
jne
je
lcall
xor
loopne
in
xor
or
push
jl
dec
jno
stc
mov
sbb
push
push
sub
mov
outsb
push
ret
ljmp
arpl
shll
jne
pushl
insl
inc
and
inc
push
scas
sub
notb
leave
fbstp
xor
nop
adc
mov
mov
popf
cwtl
jle
dec
sahf
mov
push
cmp
insb
leave
rcrb
dec
and
sub
insl
push
or
testl
loope
sub
int
popl
sbb
ljmp
or
mov
mov
mov
out
pop
orl
das
ljmp
adc
push
jmp
xchg
ret
pop
js
cli
movsl
inc
adc
call
and
jnp
pop
fsubr
inc
mov
test
ret
cld
stos
and
pop
xor
jecxz
lock
dec
mov
xchg
jnp
lods
sub
bound
dec
js
xor
mov
ljmp
mov
sub
mov
loop
aas
xchg
or
outsb
cmp
jle
adc
mov
test
push
push
sbb
pop
pushf
divl
cmpl
xor
movsb
mov
or
fwait
scas
jecxz
stc
sub
in
mov
adc
fiaddl
mov
adc
xor
aam
or
xchg
jns
les
and
gs
lcall
mov
shlb
inc
xor
sub
movsl
aam
sbb
or
das
jle
add
leave
jg
dec
adc
cmpsl
call
mov
popa
push
pop
cmp
test
fistl
les
popl
mov
push
xor
xchg
dec
lahf
sub
sbb
push
push
out
sub
ja
pop
cmp
insb
fidivrs
adc
data16
mov
cmp
ljmp
jp
sahf
mov
sub
jne
mov
mov
and
jp
pop
out
push
mov
adc
cmp
lahf
dec
dec
dec
or
pop
ret
or
insl
arpl
pop
jns
imul
jne
repz
sti
inc
clc
enter
jmp
lds
pop
jne
fs
das
mov
add
les
in
arpl
adc
adc
data16
adc
xor
enter
out
inc
and
fstpt
xchg
addr16
ja
data16
les
test
ss
xchg
shl
aam
mov
dec
aam
repnz
test
cltd
mov
psrlw
jge
mov
adc
mov
xlat
adc
xchg
repnz
inc
xor
jp
mov
call
lock
test
out
mov
iret
and
jmp
jle
aaa
dec
and
out
inc
pop
mov
and
cmp
cmp
adc
cmp
xchg
ret
pusha
insb
pop
ja
aam
mov
aas
pop
in
in
lock
lret
jp
push
add
xchg
lods
pop
inc
sub
popf
cmpsl
jnp
js
pop
stc
add
adcb
xchg
cltd
cmp
jae
std
fsubl
inc
xor
cli
mov
icebp
arpl
insl
repnz
xchg
outsb
repnz
adc
pop
inc
push
movsb
inc
xchg
fsubrl
lcall
adc
ss
out
hlt
mov
push
ret
mov
and
call
ss
jl
inc
insl
bts
leave
push
xchg
pushf
das
mov
push
fcoms
jae
mov
mov
fisubrs
loop
aam
or
test
lods
sbb
xchg
lock
clc
aas
fldenv
xchg
je
push
pop
inc
nop
mov
imul
adc
std
cmc
mov
lahf
xchg
out
sub
ja
push
aaa
fs
ljmp
cmp
pop
cs
popf
push
mov
pop
bound
jbe
insl
cli
adc
leave
mov
mulb
sub
xor
jno
and
inc
lahf
sbb
mov
mov
push
xchg
xor
addl
xor
stos
xchg
in
mov
mov
pop
xchg
xchg
push
mov
push
arpl
nop
lock
decl
mov
repnz
mov
push
inc
sbb
data16
icebp
dec
pusha
or
out
dec
popf
insl
nop
xchg
insb
inc
insl
inc
pushf
out
repnz
inc
data16
cmc
sub
push
push
lock
lret
mov
fcmovnb
lcall
shrl
jle
outsb
test
pop
push
les
pop
int3
lret
inc
fdivrs
jg
inc
stc
movsl
push
das
in
cmc
or
out
xchg
imul
push
pop
sub
je
and
outsb
xor
and
loopne
mov
xor
add
and
mov
mov
mov
loope
push
scas
cwtl
idivl
sub
add
fwait
xchg
stos
or
xorb
pop
pop
mov
mov
rorb
int3
add
pusha
stos
pop
inc
lods
pop
mov
jae
testl
enter
jnp
push
in
adc
cs
pop
lock
addr16
movsb
inc
subb
mov
and
in
mov
inc
scas
sbb
jge
notb
outsl
cltd
jp
mov
jmp
and
mov
push
sahf
push
int
das
jne
stos
loopne
pusha
xor
je
rcll
xor
sbb
pop
dec
cwtl
mov
cmc
sbb
jecxz
sub
dec
mov
push
vmovntps
mov
roll
je
xchg
insb
enter
jge
loope
gs
lods
addr16
jge
shrb
gs
push
mov
xchg
jge
xchg
xor
jns
cmp
mov
enter
cmpsb
ret
mov
out
test
dec
inc
cwtl
xchg
inc
add
inc
sbb
or
mov
sub
aad
jp
cld
in
addr16
repz
vsqrtss
cli
nop
gs
out
adc
jg
aad
mov
ret
cmpsl
sub
out
fs
out
lahf
adc
ds
jns
adc
hlt
imul
inc
lods
mov
mov
aaa
das
push
icebp
out
hlt
lcall
in
lahf
sarb
pop
clc
add
xor
icebp
or
test
andb
mov
nop
mov
adc
sysenter
test
push
adc
push
cwtl
jnp
add
loope
xchg
out
hlt
push
adc
ret
cli
hlt
inc
dec
std
adc
ret
add
sub
cmpsl
mov
aad
in
jmp
in
ja
in
mov
fsubrs
pop
inc
xorb
repz
pushf
adc
fcmovbe
push
data16
mov
scas
mov
add
sub
in
mov
pop
out
fdivl
cmp
daa
in
in
jle
mov
jo
or
add
inc
loope
inc
sbb
mov
push
mov
inc
sti
lea
sbb
insb
lea
data16
cli
in
sub
movntps
ja
mov
shrl
and
mov
pop
dec
ss
cmpsl
or
pop
mov
mov
jne
lret
test
rorl
cltd
rcrb
mov
popf
stos
mov
add
mov
push
xchg
dec
lods
mov
mov
rcrl
or
std
popf
lcall
cwtl
les
leave
add
outsb
and
fistpl
jge
insb
rclb
addr16
or
cmpsb
jp
inc
inc
jg,pt
int3
and
addr16
pushf
dec
imul
loopne
jg
sub
add
push
sbbl
pop
iret
test
inc
les
outsl
nop
dec
xor
mov
loopne
jmp
enter
nop
sbb
add
pop
pop
push
mov
insb
push
push
xchg
xchg
inc
xchg
aas
cmpsb
lea
pop
cld
mov
add
mov
cmovp
xor
mov
cmp
pop
mov
xorl
pop
fidivl
jecxz
jns
and
inc
dec
push
pop
pop
insb
ror
cmpsl
aaa
push
insb
jl
push
mov
and
sub
and
push
adc
dec
ret
mov
cli
adc
gs
cld
and
cmp
icebp
dec
xchg
inc
jmp
ret
pop
sub
out
imul
xchg
adc
lods
hlt
aam
and
into
ret
das
push
push
fists
dec
jecxz
movsb
mov
loopne
nop
in
mov
lcall
mov
movsl
cmp
cmpb
insl
jnp
fimuls
pop
push
test
frstor
data16
inc
in
repz
inc
mov
hlt
out
mov
lods
add
lcall
pop
sub
insb
add
xor
or
test
inc
sub
add
mov
aas
pop
cltd
and
inc
xorl
dec
test
fcoml
dec
scas
movsb
ds
in
es
aaa
push
das
stc
cmp
rcl
pop
sbb
sub
push
xchg
sub
repz
mov
cs
fsubl
mov
stc
mov
xor
inc
ljmp
mov
add
jecxz
data16
movsl
je,pn
dec
fistl
sbb
jbe
cmc
adc
jne
dec
xchg
sub
popa
stos
decb
inc
bswap
call
push
xchg
push
mov
cli
cmc
es
jae
dec
push
mov
sub
lea
dec
icebp
pop
cmp
rcrb
cmp
pusha
or
stos
mov
lods
out
mov
cwtl
mov
cld
adc
mov
ret
adc
cmp
mov
lea
inc
cmp
les
ret
repz
cmp
or
push
push
popa
repnz
in
fstps
add
jne
inc
mov
call
mov
and
mov
jne
das
mov
mov
pop
pop
loop
pop
xorb
and
mov
lahf
mov
js
jmp
add
push
mov
and
stc
xchg
or
or
cli
jne
xchg
aam
int
in
jp
pop
push
das
in
sub
addb
test
call
call
or
scas
mov
addr16
add
pushf
sbb
repnz
mov
dec
int
inc
jecxz
lret
popf
cmpsl
int3
push
push
xor
push
mov
adc
es
aam
jg
pop
cmp
pop
es
push
imul
push
and
mov
xor
sti
popa
push
div
sub
xchg
push
or
add
loopne
xchg
mov
clc
movsl
jge
xlat
xor
inc
lods
xchg
movsl
xor
cmp
popa
cmp
adc
push
xchg
aad
xor
ret
jns
incl
jl
jnp
inc
xor
sbb
je
inc
inc
or
xchg
nop
xor
stos
bound
in
sarl
jb
fdecstp
les
mov
adc
adc
or
xchg
push
movsb
cli
dec
sub
cwtl
xor
sub
fwait
xor
insb
mov
push
mov
mov
das
and
pop
bound
fisubrs
sbbb
mov
js
push
std
enter
js
outsl
daa
push
inc
fnstenv
adc
fidivl
add
and
cmpsb
insl
or
das
cli
adcl
ficomps
mov
adc
xor
sbb
sahf
xlat
loope
push
leave
mov
aam
xor
repz
sbb
popf
inc
mov
xor
outsl
mov
lea
inc
imul
adc
stc
insb
lock
push
sbb
jge
lret
dec
loop
pop
sbb
inc
jo
sti
dec
sbb
inc
and
and
mov
aad
pushf
jg
inc
imul
stc
push
inc
in
lret
inc
fisttpl
push
sbb
xchg
dec
nop
xchg
mov
jle
insl
call
cwtl
cltd
fsqrt
push
test
and
xchg
inc
lea
pop
adc
mov
mov
je
popa
inc
rolb
sbb
xor
pop
xlat
or
mov
hlt
mov
xchg
add
stos
xor
pop
push
cmp
data16
fisttpl
dec
dec
shll
cmpsb
cmp
mov
repz
inc
dec
cmpsb
inc
rolb
inc
stc
ret
xchg
xchg
mov
dec
call
nop
outsb
sahf
add
cli
mov
fisubl
xchg
bound
sbb
shll
test
leave
pop
jle
cmp
inc
mov
xor
push
and
leave
xchg
sbb
fwait
xchg
pusha
push
pop
dec
icebp
jae
sbb
aad
int
lcall
cmp
mov
jo
and
push
cmp
mov
sbb
jecxz
pop
adc
insb
jno
aam
add
push
jp
adc
clc
and
mov
lahf
adc
enter
test
xor
fidivrs
leave
ror
fdiv
inc
and
inc
notl
adc
cmp
inc
fstpl
fldl
or
shll
nop
jmp
popl
xor
cmc
cli
fxam
daa
sbb
add
sahf
mov
lcall
mov
dec
jmp
enter
pop
stos
mov
repnz
orb
daa
xchg
mov
pop
dec
hlt
bound
jo
stos
push
sbb
inc
mov
imul
outsb
pop
xchg
pop
add
notl
iret
stos
dec
or
add
test
stc
mov
fiaddl
or
xor
insl
or
dec
rcrb
divl
push
popa
mov
sbb
aam
cltd
mov
test
pushf
in
mov
pop
andl
cld
jecxz
orl
andl
faddl
inc
out
push
mov
js
ror
int3
pop
inc
data16
add
loop
aas
lcall
int
rcr
test
sub
or
call
push
icebp
cmpl
add
dec
cli
aaa
pop
inc
mov
clc
adc
loope
adc
sbb
jmp
jne
push
add
dec
mov
pop
mov
int
pop
inc
xchg
fstps
mov
push
call
mov
sahf
jb
mov
sbb
push
sub
jle
ja
outsb
inc
push
fdivrl
in
sbb
or
scas
pop
test
sub
jns
ret
sub
ljmp
mov
add
add
ljmp
lea
aad
imul
out
xchg
mov
fucomp
add
xor
nop
iret
bound
add
cs
pop
or
aas
js
push
xor
pop
xchg
nop
push
clc
sub
cmp
mov
clc
in
push
mov
push
dec
add
enter
pop
cwtl
pop
fwait
xchg
dec
jmp
jge
sbb
xchg
xor
mov
or
lret
jb
pop
adc
popf
adc
aad
clc
iret
push
xchg
inc
pop
push
scas
inc
sub
pop
call
stos
mov
sahf
imul
jmp
ja
dec
frstor
cwtl
iret
inc
andb
and
xchg
mov
cmp
dec
push
daa
inc
push
push
testb
stos
ss
cmpsb
xchg
push
xchg
jle
pop
es
mov
and
ret
movsb
movsl
insb
in
aas
mul
pushf
outsl
test
or
or
mov
test
push
iret
sub
xchg
push
push
movsb
adc
xor
xchg
cmp
pop
push
adc
inc
xor
rcrb
into
cmpsb
sub
lods
mov
inc
fwait
repnz
push
push
mov
ret
jl
out
addl
push
loopne
les
adc
into
pop
push
je
icebp
icebp
cmp
cmp
mov
out
add
jns
jbe
idivb
mov
stc
fs
outsl
xchg
lods
pop
jo
rcrl
lret
popf
and
mov
adc
divl
lahf
stos
int
sub
faddp
jne
lea
mov
jb
push
inc
mov
repz
test
xchg
loop
lea
push
mov
enter
mov
cli
pop
test
outsl
jl
cmp
cmp
and
lds
adc
sub
add
jmp
mov
int3
sbb
push
imul
push
daa
cmp
insl
sbb
ss
fs
adc
push
mov
arpl
add
insb
insb
aas
sub
out
sarb
fs
lock
ret
xchg
adc
and
hlt
sub
and
pusha
daa
pusha
jbe
shrl
jg
inc
test
dec
mov
jae
or
add
and
cmpl
mov
ret
fidivl
cld
jae
negb
adc
pop
imul
cmp
das
stc
cmp
test
jns
data16
std
sti
popf
test
and
leave
adc
inc
subb
xor
cs
insl
mov
inc
in
add
rcl
and
sbb
add
in
dec
not
shrl
and
and
adc
ds
pusha
popf
lods
icebp
mov
push
mov
popa
sub
pop
mov
mov
jp
imul
loop
cmc
sub
or
cmpsb
xor
imul
repz
cmp
mov
into
push
pop
int
insl
out
push
jns
pusha
mov
cmpl
mov
inc
or
pop
inc
or
cmp
xor
ficompl
pop
aas
pushf
and
mov
dec
lret
hlt
or
movsl
out
adc
jbe
test
stc
push
std
lahf
and
cmp
sub
roll
jmp
add
mov
inc
sar
ret
lret
or
int
mov
xor
xchg
mov
sti
insl
mov
push
gs
frstor
negb
jge
insl
test
pop
dec
lea
popf
and
xchg
mov
rcl
cwtl
or
cmpl
jg
pop
das
adc
and
fistps
lods
es
push
sbbl
mov
in
dec
push
and
jl
aad
sub
mov
pushf
addl
sub
mov
push
adc
aas
adc
std
xlat
jns
or
lret
push
ret
cmp
xor
addb
mov
in
xor
clc
icebp
in
jge
lahf
mov
jmp
push
jg
pop
std
mov
mov
mov
aaa
xchg
sar
xchg
fcom
mov
push
stos
cmpsl
adc
pop
adc
insl
sbb
inc
cli
clc
jae
ficomps
push
imul
out
xchg
aam
stos
insl
pop
sub
and
or
jle
mov
mov
xchg
sbb
cmpsl
xor
clc
mov
pop
xchg
jo
mov
adc
inc
ficomps
je
shl
pop
jo
hlt
or
bound
add
rcl
mov
push
lret
mov
jecxz
jle
test
in
xor
mov
in
pop
inc
call
repnz
in
jg
outsb
inc
jnp
inc
test
jge
jne
sub
ljmp
icebp
sbb
stos
mov
pop
add
adc
adc
xchg
pop
and
adc
fisttpl
cmp
loope
mov
cmpsb
pop
repnz
fildl
fdivr
inc
jmp
ja
xchg
aad
sub
out
stos
mov
js
inc
in
rcr
dec
add
insb
pop
jnp
jl
jbe
js
imull
xor
sbb
xor
pop
inc
loope
ss
arpl
lret
out
aaa
ss
repnz
pop
mov
add
cli
jl
sarl
dec
aad
push
adc
mov
mov
sti
imul
jae
inc
xchg
xchg
xchg
jbe
cld
addr16
in
test
inc
call
xchg
repnz
fwait
add
hlt
push
ret
lods
andb
dec
mov
cmpsl
mov
add
sub
adcl
pop
xor
and
mov
mov
xchg
fbstp
jb
adc
xchg
aaa
dec
lock
xor
inc
aad
jo
pop
aas
cmp
cs
lods
into
sti
mov
adc
xlat
cmp
lret
cld
xor
jmp
mov
icebp
mov
add
dec
push
adc
pop
addr16
lcall
xchg
xor
out
adc
lds
sti
xchg
push
enterw
jae
mov
das
inc
sub
add
test
mov
iret
lds
sub
ja
mov
sti
and
jo
insl
sub
testb
shr
sub
mov
mov
xchg
aas
pop
jb
xchg
add
sub
cmc
cmp
pop
jle
mov
das
jo
jns
dec
mov
std
or
inc
cwtl
insl
outsb
loope
push
idiv
sbb
pop
dec
in
mov
js
sub
dec
ret
lods
dec
lret
jo
push
pushf
mov
ss
mov
and
push
dec
mov
cmp
movsb
ljmp
dec
addr16
sbb
popf
dec
fcoms
inc
movsb
jg
outsb
into
xlat
and
inc
popa
fs
enter
es
and
pop
out
repz
fwait
inc
xchg
lock
repz
cltd
push
cmc
hlt
jb
divb
mov
mov
mov
sbb
orl
dec
lock
aas
ja
cmp
repnz
fwait
cmpsl
insb
mov
adc
or
fabs
loopne
psubq
jp
xlat
dec
pop
inc
cmp
cltd
inc
inc
adc
add
sbb
or
add
popl
push
push
adc
jns
stc
mov
clc
dec
popa
ret
andb
add
insl
nop
icebp
jb
or
xchg
pop
sub
loop
test
repnz
sbb
lods
jge
sub
push
jno
nop
inc
push
pushf
bound
pop
std
jmp
jle
lret
and
xor
xlat
add
rcrl
in
mov
add
mov
cmp
subb
pusha
and
inc
or
rorb
aas
mov
popf
inc
lock
sti
mov
outsl
jecxz
scas
mov
test
sbb
xor
mov
aam
sub
mov
ljmp
out
cli
mov
dec
ret
call
aas
jmp
mov
push
ss
cmp
sub
dec
movsl
stos
enter
outsl
insl
and
dec
xchg
lahf
testl
outsl
inc
inc
push
mov
icebp
fistl
sbb
mov
add
lea
cmp
fldt
jle
xchg
add
frstor
cmp
aaa
imul
movsl
out
cwtl
sub
inc
je
leave
mov
mov
mov
adc
fwait
sbb
das
sbbb
push
fmul
ja
shlb
adcl
mov
pop
xlat
cs
fimuls
jo
adc
mov
andb
cld
or
fwait
cmpsl
int3
jge
mov
sub
mov
rcrl
leave
nop
push
xor
push
sbb
out
fidivs
inc
ret
jnp
aad
in
fcmovnb
cmp
jbe
fucompp
mov
in
and
jl
xor
mov
fmuls
cs
out
push
dec
adc
xlat
popa
pop
jecxz
lret
cmp
nop
or
nop
lahf
add
aad
push
pusha
dec
xorl
arpl
rcrb
add
leave
insb
mulb
repnz
xor
sub
xor
xlat
adc
iret
lds
cmpsl
xchg
jb
call
out
fucomi
iret
jecxz
test
movsl
add
push
mov
cwtl
or
shrl
xchg
rol
ret
bound
xchg
cmp
add
dec
lods
jb
fidivs
dec
je
rol
jp
daa
mov
stos
dec
into
xlat
pop
popa
call
xchg
mov
and
pop
scas
jmp
lret
sub
cld
xchg
inc
mov
xchg
xchg
xor
cmpsb
pop
scas
fildll
popa
mov
mulb
push
add
sbb
cmp
mov
test
sbb
jmp
cmp
cmpsl
inc
data16
jo
nop
test
leave
pop
mov
aaa
in
lahf
sahf
lahf
sarb
mov
stos
jmp
lret
aaa
pop
gs
cltd
push
shrb
loop
mov
mov
lods
stc
cs
ja
push
imul
movsl
xchg
loop
xchg
stc
adc
sbb
push
pop
pop
push
jle
xchg
inc
sbb
adc
jp
push
lea
mov
outsl
jne
in
ss
sbb
jp
jo
sbb
insl
loopne
jo
test
push
stos
iret
add
pushf
mov
mov
push
loopne
inc
mov
inc
jmp
ljmp
xchg
in
mov
in
cs
and
repnz
pusha
add
xor
push
imul
cmp
je
fs
cmp
xchg
out
pop
mov
mov
and
hlt
jl
scas
cmp
repz
out
gs
fwait
xchg
adcb
insb
add
push
push
inc
inc
or
cli
pop
jl
cltd
mov
pop
insb
or
imul
out
jb
sub
daa
xchg
and
mov
pop
jae
repz
ljmp
ljmp
mov
test
push
or
mov
and
imul
insb
loop
xchg
pop
and
jnp
dec
leave
add
mov
sub
dec
push
jmp
dec
int3
out
lods
sub
bound
jne
push
out
or
push
std
testb
mov
ljmp
and
ret
xorb
stos
aas
call
sbb
or
ja
nop
scas
xchg
std
jae
fimuls
cli
rclb
icebp
mov
fwait
jno
adc
xlat
sub
adc
sbb
sbb
cltd
sahf
rcll
loop
xchg
jbe
popa
mov
ret
add
push
inc
add
test
das
mov
je
int
push
jnp
idiv
sbb
mov
out
jmp
jmp
pop
outsl
ds
push
sub
xchg
aad
clc
dec
lcall
enter
and
mov
arpl
cmc
xor
shl
inc
into
cmp
add
xor
jmp
and
inc
push
xchg
jne
cmp
out
pop
xor
ss
mov
out
lea
loope
fsubrs
testb
lock
enter
mov
daa
mov
inc
je
addr16
dec
push
in
nop
out
lods
ffreep
sahf
add
test
sub
push
push
pushl
push
aad
mov
push
pop
mov
mov
loope
jae
stos
xor
fdivrs
sbb
std
xchg
in
movsb
hlt
icebp
adc
lock
lret
dec
popf
mov
idivb
or
out
leave
pop
movsb
in
hlt
inc
shl
push
mov
lahf
pushf
pushf
out
jl
and
fsqrt
cmpb
push
dec
mov
call
xor
sub
fadds
cmp
insl
iret
mov
pop
nop
aas
dec
xchg
std
ljmp
jnp
test
aad
inc
xor
add
dec
mov
imul
jecxz
pop
stos
or
push
jmp
jnp
loope
push
stos
xor
jmp
push
ret
xor
test
or
xor
cmp
into
push
and
cmp
lahf
iret
lcall
nop
loopne
paddb
test
stos
mov
push
lods
popl
rcrl
inc
pop
xchg
mov
arpl
fdivs
cmpsb
std
sub
sub
das
and
hlt
aas
sub
push
and
imul
jmp
cmp
pop
jmp
fwait
pop
jb
std
scas
mov
scas
push
mov
out
and
in
loope
sti
movl
leave
cmp
xchg
cs
mov
xor
stos
lret
xchg
or
inc
int
jg
mov
push
push
insl
stos
lods
push
fwait
sub
loop
insl
ficomps
imul
xchg
out
es
mov
push
call
inc
xor
mov
data16
push
fidivrs
ds
push
into
dec
xor
and
jb
ljmp
sub
loope
pop
loope
or
cli
cmpsl
mov
fbld
daa
xlat
xchg
inc
test
xlat
shlb
mov
push
xor
mov
sub
mov
and
mov
fimuls
xchg
in
jg
dec
not
xor
cmp
out
mov
popf
adc
or
aaa
push
sbb
ss
lcall
inc
outsb
jmp
jns
ss
xor
lea
jg,pt
mov
in
xor
stc
pop
xchg
sbb
gs
sbb
popf
push
or
or
and
div
vpunpckhbw
fs
dec
insl
cmc
addr16
fwait
movsb
in
dec
or
inc
jbe
cmp
inc
adc
ja
xchg
test
mov
push
popf
xor
pop
popa
add
das
adc
pop
dec
and
adcb
mov
adc
nop
or
frstor
repz
or
push
sub
std
fsub
loope
push
xor
and
adc
nop
rcll
add
adc
inc
repz
cmp
gs
pushf
insb
jne
xchg
mov
sbb
test
xchg
adc
pop
test
ds
cmp
and
aas
fdivs
loopne
jno
aas
cmpsb
mov
jno
add
cmpsl
xchg
cs
out
loope
mov
inc
dec
cmp
outsl
mov
fsin
mov
das
mov
stos
or
sbb
xchg
test
pop
idiv
lea
inc
sbb
imul
push
rcrb
add
clc
sbbl
push
bswap
adc
xor
sub
pop
xchg
inc
outsb
lods
ret
imul
push
jl
mov
in
popf
mov
push
mov
in
imul
repz
pop
jne
inc
int3
gs
xchg
and
rorb
xor
push
cwtl
bnd
dec
sub
cmpsl
daa
and
aas
xchg
pusha
and
adc
orb
adcb
lds
lods
iret
fisttps
and
jmp
push
lds
cwtl
test
ficoms
pop
push
imul
mov
sahf
and
adc
mov
add
xor
mov
push
fcmovbe
mov
lods
sbb
cmc
repz
lret
and
pcmpeqb
add
sbb
icebp
bnd
sahf
xchg
lea
or
stos
in
outsb
sbb
mov
xchg
insb
mov
mov
test
fs
popf
pop
lods
sbb
add
push
stos
cli
pop
in
in
stos
adc
and
lahf
ljmp
out
outsl
mov
or
lret
fbstp
pop
push
xchg
pop
out
push
in
stos
outsl
outsl
mov
rcrl
stc
mov
lods
in
sub
jmp
outsl
dec
sub
lahf
into
loop
sbb
in
fsts
dec
fdiv
popf
lret
iret
lahf
je
fsubrs
mov
mov
stc
rorl
repnz
push
jne
jae
fstl
mov
and
push
icebp
mov
sub
nop
inc
dec
cmp
sub
push
and
fwait
call
les
sti
jo
movsl
jb
dec
xor
mov
inc
or
sub
insb
repnz
cmpsl
mov
inc
push
adc
cmp
in
xor
pop
adc
test
repz
jno
cwtl
dec
xchg
sbbl
lret
jge
in
xchg
and
mov
push
ret
stc
data16
sub
xchg
fsub
mov
xor
fs
jnp
ja
push
jp
inc
mov
xchg
sub
adc
mov
xchg
adc
cmpsl
push
mov
ss
jno
lods
xlat
fbstp
addr16
lock
rol
outsb
dec
daa
xchg
cmc
ja
sub
pop
hlt
dec
sarb
jge
or
adc
mov
mov
inc
mov
push
mov
imul
out
xorb
pop
or
out
mov
and
int
negb
shrb
cmp
push
or
dec
push
adc
and
mov
pop
push
rcll
add
inc
repnz
jb
aam
pop
and
mov
xchg
fdivl
sub
and
jge
add
pop
push
loop
lret
leave
pop
and
dec
cmpsb
es
sahf
fchs
cltd
xor
aam
dec
cmp
fisttps
aaa
je
cld
stc
adc
mov
xchg
xchg
shll
or
xchg
mov
lret
adc
cwtl
adc
mov
sub
cli
popa
iret
aam
pop
popf
cmp
dec
movsb
push
rol
xchg
dec
or
mov
sub
xchg
pop
push
pop
mov
cmp
pushf
mov
lock
lcall
mov
ret
in
jae
push
ja
push
xchg
mov
pusha
test
adc
aad
leave
pop
add
dec
loope
aam
mov
pop
ljmp
push
mov
jne
sbb
cmp
push
push
pop
aam
push
in
dec
repz
xor
xor
add
das
cmp
test
and
dec
push
and
inc
push
int
lcall
pop
int3
fadds
dec
and
roll
sub
adc
outsl
pushf
sti
lods
add
jno
bound
or
pop
ret
stos
sahf
inc
call
jmp
pop
cmpsl
cmovge
xchg
jne
xchg
or
sti
pop
fiadds
mov
fsubl
inc
push
sub
lcall
fidivrl
fisttpl
jns
xchg
sub
inc
daa
add
jmp
inc
nop
popf
jle
and
jns
rclb
push
in
jno
sbb
scas
push
dec
cmpsl
pop
lock
fldl
mov
push
call
ds
push
add
and
xorb
or
and
xor
movsb
fildll
aas
and
pop
aam
jge
pop
inc
lds
out
ss
mov
push
inc
ss
cmp
cmp
xor
sub
pop
pop
out
inc
mov
es
sub
cmp
repz
das
push
je
push
sti
leave
cld
ret
aas
adc
ss
stos
sub
fdivrl
into
cmp
jle
inc
mov
in
fnstenv
dec
test
mov
sti
mov
nop
leave
ja
and
mov
lea
adc
add
rclb
jnp
enter
push
add
adc
shrb
shr
imul
xor
cmp
push
mov
xor
loope
or
inc
lret
pop
sub
pop
inc
iret
push
inc
dec
adc
dec
and
pop
cli
dec
sbb
xor
mov
and
dec
orb
into
mov
mov
mov
inc
mov
dec
xchg
shlb
push
into
gs
jo
fdivp
cwtl
jno
xlat
cmp
sub
xchg
inc
adc
cmp
movsl
xchg
js
ror
bound
add
mov
in
shll
add
roll
add
xor
sbb
sbb
daa
stc
in
andl
mov
outsl
cld
popf
and
shll
add
and
inc
cmp
movhps
loop
icebp
rcrl
or
lret
pop
pop
in
lds
or
scas
or
or
out
xchg
jne
sbb
push
cmp
jae
aaa
sbb
loopne
stc
shll
ljmp
dec
lahf
sub
enter
push
adc
inc
cltd
pushf
add
adc
nop
mov
ss
in
std
dec
push
lcall
popa
lea
mov
and
or
jbe
push
mov
mov
hlt
push
jns
jbe
dec
rol
xchg
lea
dec
or
repz
shl
je
popa
push
shlb
insl
addr16
into
sub
cwtl
es
adc
fisubrl
fwait
push
lahf
idivb
ja
push
icebp
jecxz
pusha
xchg
into
jbe,pn
and
outsl
jg
ja
xchg
aad
lds
pusha
xchg
or
ds
push
sbb
mov
ficomps
clc
xor
test
mov
cmp
mov
push
inc
fldl
sti
lds
fsubl
or
pushf
pop
lret
pop
xchg
and
inc
push
mov
data16
mov
cmp
add
mov
out
enter
jnp
test
lea
inc
push
push
enter
xor
push
insl
adcb
out
mov
mov
add
daa
lret
lret
lds
sub
pop
xchg
mov
pop
dec
or
test
push
jne
dec
lcall
xchg
mov
adc
xor
push
mov
pusha
test
mov
daa
in
cs
and
push
add
and
mov
mov
sub
mov
jecxz
mov
jno
fstl
and
dec
sub
out
adc
jle
sbb
arpl
jne
pop
data16
scas
imul
push
aam
lret
mov
mov
sahf
jg
in
lret
sbb
push
lock
dec
push
mov
mov
imul
lods
insb
cli
in
je
push
pop
cli
rorl
jge
mov
in
loopne
fincstp
imul
mov
mov
in
dec
loopne
cmp
cmp
shl
or
mov
sahf
sub
sub
adc
xchg
lea
sar
cmp
nop
mov
or
jno
aad
ljmp
testl
mov
repnz
ds
inc
sbb
in
cwtl
data16
pop
inc
xor
inc
fcoms
aas
lret
imul
cwtl
and
imul
insb
push
inc
pop
and
add
pop
mov
iret
and
pop
jecxz
out
mov
mov
xchg
and
xchg
mov
mov
pop
xor
mov
insb
subb
or
xchg
dec
cltd
aaa
fdivrl
pop
dec
add
sbb
shrl
dec
lea
divb
ret
inc
les
mov
adc
fildl
sub
adc
push
inc
lcall
xor
test
arpl
adc
inc
xlat
and
cmpsl
stos
dec
fcmovnu
aas
inc
sub
scas
js
sbb
jmp
adc
sbb
xorb
cs
pop
clc
or
in
add
xor
movsb
jno
pop
mov
dec
adc
push
rcr
pop
sti
adc
dec
inc
loopne
imul
fldcw
jnp
leave
jo
sbb
daa
es
adc
lcall
popf
xor
in
inc
es
cld
lcall
lcall
and
dec
xor
cld
in
cmp
mov
adcb
push
and
pop
addr16
sarl
dec
push
clc
adc
rorl
mov
xor
mov
mov
imul
lret
jne
nop
sub
or
test
pop
leave
mov
xchg
inc
inc
stc
ss
aad
lret
xchg
sbb
push
out
push
faddl
mov
mov
sarl
mov
dec
sub
fcompl
xchg
and
lods
pop
test
jb
add
addr16
push
gs
add
incl
push
mov
pop
movsb
test
pop
add
insb
dec
in
popa
xchg
addr16
gs
or
in
decb
push
mov
xchg
lret
scas
loopne
sbb
cmp
xlat
inc
mov
and
or
mov
adc
in
dec
push
xchg
or
push
leave
dec
dec
mov
mov
gs
jb
mov
xchg
mov
push
jbe
arpl
mov
xchg
cli
cmp
cmc
adc
mov
inc
aas
lock
xchg
insl
data16
xor
rorl
xorb
push
ret
pusha
rorb
pop
inc
pop
cmpsb
ret
popa
xchg
inc
sti
adc
inc
addr16
push
ret
rol
out
sarb
push
push
aas
fs
cltd
dec
push
xchg
and
addb
push
or
mov
push
pushf
push
dec
cmp
mov
pop
mov
cmp
push
out
lods
mov
jg
add
inc
loopne
xor
bnd
pop
into
dec
les
ret
jg
lcall
bound
pop
push
inc
and
add
mov
cmp
add
ret
popf
mov
out
mov
stc
and
push
nop
inc
loope
enter
cmpsb
js
pop
pushf
push
scas
xor
mov
or
imul
popf
xor
xchg
std
adc
imul
adc
test
jl
sbb
mov
test
sbb
cmpsb
adc
push
inc
scas
mov
mov
or
and
cmp
push
iret
add
test
in
imul
out
lds
ss
xor
xchg
int
imul
xor
fs
subb
subl
jl
cmp
xchg
mov
mov
pop
in
stos
jge
cmpsl
adc
mov
mov
cmp
fstl
out
or
mov
inc
repnz
xchg
cmp
js
lahf
mov
je
jnp
sarl
jnp
lds
mov
sub
push
ja
mov
add
cmp
out
lds
and
int
test
push
push
and
inc
mov
jns
dec
outsl
popa
fstpt
jge
pop
iret
in
imul
sbb
sbbl
sub
adc
popf
mov
imul
out
xchg
sbbb
mov
push
aas
jg
add
out
mov
repnz
jne
insb
lock
gs
dec
das
ja
mov
fstl
pop
push
cmp
aaa
jno
sbb
and
scas
xlat
movsl
jmp
fdivrl
mov
and
scas
flds
cwtl
mov
add
stos
adc
sub
sub
adc
push
icebp
mov
hlt
cmpsl
scas
mov
sub
and
btc
dec
test
loop
push
ret
idiv
cmp
fstps
or
gs
xchg
push
add
out
mov
jo
pop
fs
test
in
adcl
iret
movsl
test
orl
test
lods
repnz
xlat
pop
cmpsl
mov
pop
mov
es
dec
and
call
or
adc
xchg
std
fs
push
sbb
je
aaa
sub
jmp
lcall
cwtl
and
cmpsb
mov
pushf
iret
std
adc
pop
out
xchg
lods
or
hlt
test
push
fs
bound
imul
lods
stc
jne
fisttps
dec
push
inc
mov
inc
lods
sbb
pusha
xor
lock
dec
add
xchg
outsb
fisubrs
bound
scas
or
or
xor
outsl
nop
aam
mov
jne
cmpsb
jg
gs
orl
dec
or
rcr
or
and
imul
adc
mov
push
jl
pop
dec
xor
in
xchg
rclb
sarl
push
les
mov
lock
xchg
pop
out
and
fcomip
and
sbb
sub
jb
jmp
into
adc
adc
dec
popa
inc
adc
ja
and
pop
adcl
mov
cmp
aaa
out
adc
xor
cs
fcmovnb
push
daa
dec
lock
cld
push
mov
push
out
adc
int
fisubrl
cmp
dec
fs
xchg
lods
cmp
xchg
fs
adcl
jb
loop
cmp
mov
ret
dec
sti
lds
push
vmovupd
jle
xchg
cld
mov
in
mov
mov
loop
cmp
xchg
lret
test
jne
out
insl
jo
mov
stc
rcrb
fistl
outsb
loope
fists
adcb
test
sub
xchg
negb
popa
xchg
leave
ret
or
scas
ret
popa
test
stos
inc
in
mov
inc
pop
das
or
jmp
jno
mov
xlat
xor
clc
adc
pop
push
stc
outsb
pop
arpl
nop
jecxz
ret
push
ds
xchg
je
mov
sub
or
mov
mov
movsb
push
popf
cmp
jge
xor
pop
bsr
out
jl
inc
into
loopne
xor
lock
jge
sahf
faddl
imul
lods
lcall
int
inc
cmc
sub
push
test
in
mov
je
xor
iret
les
stc
aaa
lret
mov
dec
cli
sub
cs
lahf
shlb
addb
les
shr
pop
mov
es
movsb
mov
mov
jecxz
nop
and
fisubrl
mov
dec
out
mov
cli
xchg
dec
cli
loop
xor
inc
rorb
fs
jmp
in
daa
push
cwtl
pop
xchg
mov
xor
pop
faddl
cmpsb
call
jnp
cmp
push
data16
xchg
popa
ss
cmp
jl
cld
jg
add
test
pop
fistl
in
sbb
iret
sbb
jnp
and
repz
cltd
lea
mov
jnp
mov
jo
shrl
sbb
mov
adc
jmp
in
inc
bound
push
shlb
test
in
mov
in
or
or
lret
ljmp
and
push
sub
pushf
push
xor
arpl
insl
data16
or
into
ljmp
cltd
stos
sub
and
inc
call
in
jle
in
fucomi
hlt
mov
loopne
cltd
test
fsubrs
loope
test
shl
mov
out
and
je
xchg
xchg
sub
adc
test
orb
leave
dec
sbb
cmp
mov
xor
cmp
mov
or
js
in
dec
mov
push
cmp
pop
sarb
lock
sub
jb
lds
imul
cltd
add
dec
xor
mov
in
sbb
or
call
or
cmpsl
insl
rcrb
fstp
cli
jmp
pop
daa
dec
inc
push
test
stc
push
dec
lcall
sti
fimull
xor
jnp
subb
pop
add
stos
mov
leave
fidivl
in
pop
mov
jmp
rorl
push
jo
cmpsb
cmpsl
mov
jge
movsl
inc
aaa
push
jp
push
aam
and
xchg
jno
lea
ljmp
adc
xlat
cs
jl
decl
or
mov
xchg
adc
adc
cwtl
sbb
cmpsl
lods
int
mov
sbb
cli
fdivrl
cmp
pop
cmp
cmpsb
mov
push
jl
adc
sbb
mov
pushl
xchg
mov
push
cli
inc
lcall
push
inc
imul
xor
adcl
daa
ljmp
push
push
push
dec
push
push
aas
inc
ja
aas
test
xchg
sbb
ss
imul
in
inc
and
adc
mov
ljmp
add
sub
or
xchg
sbb
jne
incl
push
adcb
scas
out
les
popa
out
rcrb
add
out
sub
pop
inc
jnp
cmp
adc
inc
push
dec
mov
jp
add
jg
mov
ret
subps
mov
mov
in
in
or
ja
mov
leave
jmp
stc
and
push
pop
cmc
arpl
mov
movsl
xchg
jne
or
xchg
xchg
int3
jo
sub
cltd
div
push
lds
popa
cmp
jb
or
adc
xor
popl
loopne
scas
jo
jg
jge
inc
cmp
jae
jg
mov
fisttpl
pusha
or
mov
scas
in
add
lds
lcall
movsl
pop
enter
push
fsin
add
ds
inc
mov
std
shrl
faddp
addr16
je,pt
inc
popa
sub
push
fldenv
mov
mov
imul
orb
sub
lret
xchg
sbb
jge
cmp
jecxz
adc
push
pushf
lret
arpl
leave
or
loopne
xor
sbb
in
mov
mov
and
iret
movsb
ja
add
pop
in
push
or
or
std
into
cmp
xor
iret
daa
ss
xor
push
jp
jnp
daa
mov
sbb
jg
sti
cs
je
ja
outsl
icebp
sub
into
jno
fndisi(8087
push
push
cmp
stos
jns
mov
sbb
in
leave
mov
mov
sbbb
cld
test
dec
add
mov
sahf
adc
adc
ss
js
add
cmp
mov
fsubl
or
mov
into
andl
mov
out
or
adc
addb
xor
xchg
sub
ret
orl
in
out
je
int3
xor
mov
aaa
cmc
test
arpl
push
mov
scas
jnp
mov
fdiv
sub
push
dec
jl
push
xorb
outsl
xor
filds
rcll
dec
movsl
push
scas
cmp
shl
mov
stc
sbb
cld
xor
clc
mov
xchg
push
mov
mov
jmp
repz
xlat
outsl
out
test
ja
int3
mov
add
mov
sub
pop
pop
sub
outsb
fldt
ljmp
scas
sahf
add
add
mov
das
adc
jge
sub
testb
xchg
sbb
mov
aas
hlt
mov
inc
popf
lret
sbb
inc
mov
cli
fidivrs
clc
cmp
sbb
repz
mov
xchg
inc
push
push
out
cwtl
mov
xchg
cmp
mov
xchg
sub
and
or
fcompl
stos
leave
mov
test
cmpsl
sbb
data16
mov
movl
mov
push
aam
movsb
inc
jns
or
xor
mov
fldl
jecxz
test
push
inc
xor
iret
aaa
jmp
cmpsl
icebp
dec
push
mov
add
js
pop
cltd
pop
aas
fstpl
xor
jle
inc
addr16
adc
jp
test
stos
xor
scas
data16
mov
jle
stc
push
or
add
outsl
push
das
pop
jmp
mov
mov
js
adcl
je
in
jl
clc
shr
jle
leave
mov
mov
enter
lods
repnz
mov
jl
sub
pop
sahf
test
std
cmp
cmpsb
scas
test
inc
and
xchg
out
sarl
mov
or
and
mov
mov
dec
imul
xchg
xlat
je
idivl
daa
subl
or
dec
xor
out
mov
fldcw
pop
fbld
or
jne
sbb
sub
inc
call
cmpsl
cwtl
sbb
push
and
cmpsl
aaa
xor
mov
xchg
cmp
sbb
sub
dec
ja
mov
dec
outsl
bnd
test
push
inc
int3
roll
into
les
imul
cwtl
inc
cmp
add
stos
or
sbb
inc
push
daa
push
dec
cmpsb
lock
loope
and
cmp
xchg
inc
test
mov
enter
ror
imul
add
push
aad
subb
jle
add
adc
jno
fsubp
insl
adc
hlt
into
inc
pop
fnsave
cld
pop
push
ret
test
xor
and
subb
mov
push
push
jno
rolb
pop
pop
xlat
inc
inc
sbb
ljmp
xchg
dec
aam
bound
dec
sub
scas
or
repnz
xchg
push
iret
inc
loope
pop
mov
into
jmp
pop
test
faddl
sbb
lods
cmc
sub
adc
adc
cmpsb
pop
push
pop
fcomp
lret
rorb
xchg
mov
and
insb
inc
sub
jns
out
ret
mov
xchg
xchg
addr16
sub
aad
lret
call
out
mov
loope
jo
adc
pop
loopne
loope
or
and
subb
push
addr16
adc
adc
and
fimull
pop
push
iret
push
sar
sub
cmpsb
scas
lahf
out
pop
mov
cmpsb
rcrb
test
test
cld
imul
and
lds
cmpsl
mov
jno
outsb
mov
rclb
into
pop
sub
adc
xor
cmp
mov
push
cmp
mov
xchg
jno
sub
clc
ss
sbbb
pop
clc
and
gs
iret
mov
mov
jle
stos
or
fisubl
rolb
sahf
ja
test
cli
push
sub
inc
fcomps
sbb
fisttpl
xchg
mov
out
dec
jecxz
lock
cmp
cmc
mov
ljmp
into
lcall
jns
out
cmpsl
or
pop
lods
push
scas
jmp
mulb
out
mov
xor
subb
jbe
iret
pop
or
stos
lcall
jle
aad
or
test
sub
movsl
popf
push
js
inc
xor
loope
in
pop
mov
jmp
mov
dec
stos
mov
js
cmp
mov
fbld
fsubrl
fs
xor
leave
idivb
cwtl
push
data16
inc
xchg
aas
fucomip
xor
call
mov
jp
stos
ljmp
and
pop
mov
movsl
lret
ja
inc
mov
xor
mov
movsl
xchg
ret
xor
cltd
aas
das
stos
daa
loope
cmp
arpl
mov
inc
cmpsb
jb
mov
shll
out
popf
inc
clc
fstp
aad
loope,pn
jbe
jl
lahf
enter
out
pop
add
enter
bound
dec
pop
test
mov
mov
xchg
mov
mov
scas
outsb
inc
adc
pop
or
dec
jns
push
mov
mov
je
mov
pop
mov
sbb
cli
or
mov
lea
mov
fcmove
imul
mov
inc
jb
xor
movsb
outsl
clc
rol
or
or
dec
cmpsb
inc
lods
xorb
inc
pop
lods
cmp
aas
xor
bound
inc
cmc
test
clc
jne
movsb
sahf
je
mov
jl
jl
mov
adc
ret
hlt
or
sub
sbb
and
mov
xor
jae
inc
sub
mov
push
pop
push
xacquire
mov
popl
xchg
sub
sbb
pop
out
mov
je
inc
add
cs
ret
jnp
sub
fidivrs
or
sub
xor
adc
insl
daa
push
pop
aaa
lock
pop
dec
fs
dec
jnp
push
dec
test
call
push
dec
sub
rcrl
aad
mov
dec
shll
sub
stos
pop
push
mov
roll
loope
shll
mov
nop
imul
jl
or
mov
adc
hlt
or
cs
loope
arpl
xchg
jae
jo
outsl
pop
out
jge
mov
add
adc
sub
mov
jg
mov
js
jmp
and
movsb
mov
ja
inc
lcall
mov
je
loopne
rcl
sbb
into
js
pushf
cld
imul
xor
insb
mov
pop
stos
in
and
jle
or
push
push
and
arpl
xchg
pop
dec
gs
mov
and
sbb
mov
ret
adc
adc
sub
cli
sub
stos
mull
enter
jge
add
bound
jge
push
loop
mov
cli
or
sbb
imul
jecxz
cmpsb
add
repz
cmp
jmp
jge
xor
adc
shl
jo
pop
cmpsl
rcr
ds
arpl
lods
sti
aaa
dec
popf
mov
inc
cmc
push
aam
push
insb
jp
push
jl
fsubs
cld
out
inc
push
mov
adc
push
pushf
push
dec
icebp
fcoms
nop
push
xlat
repz
mov
clc
mov
jge
lret
jno
dec
in
mov
or
leave
fwait
int
xchg
pop
cmpsl
cmp
ret
inc
shl
xchg
pop
or
xchg
leave
out
cmp
mov
call
lds
pop
je
adc
push
dec
test
inc
and
addl
movsl
arpl
jo
pop
fs
stc
sub
stc
adc
push
popa
in
xchg
lahf
mov
lods
paddq
jge
in
cwtl
or
inc
gs
or
or
xchg
bound
mov
in
jmp
mov
gs
pop
push
out
sti
xor
in
mov
mov
fimuls
add
dec
pop
pop
lret
jle
divl
mov
mov
mov
push
mov
sbb
dec
dec
gs
jno
mov
cli
xchg
cld
fcmovu
pop
xor
pop
scas
ret
in
enter
jbe
sub
loope
or
adc
pop
mov
lds
sbb
je
std
aas
repnz
out
or
mov
out
add
fiadds
outsb
xchg
and
ret
sbb
mov
xor
addr16
pop
and
arpl
lea
in
popf
xchg
or
jb
sub
fs
mov
mov
xor
xorl
pop
jg
dec
cs
cmpsl
push
push
mov
inc
xchg
mov
test
dec
orl
adcl
adc
insl
xchg
daa
inc
push
pop
rcl
add
addr16
ret
xor
mov
sub
mov
push
stc
push
stos
and
jp
add
and
fmul
sbb
mov
fisttpll
sti
pop
jl
mov
xor
dec
or
ret
push
mov
out
leave
imul
sbb
cltd
push
test
sub
iret
mov
mov
and
lods
aaa
adc
pop
and
mov
sub
jns
jbe
fucom
stos
xchg
imul
lea
loope
jp
jmp
pop
lock
sbb
pusha
mov
nop
lret
ret
pop
rcll
sbb
imul
and
mov
sub
repz
mov
and
imul
mov
jae
push
outsl
add
ret
into
repnz
pop
dec
push
insb
add
mov
pop
ljmp
mov
adc
lock
stos
pop
cmp
leave
mov
cmp
jmp
add
add
cltd
xlat
cmp
hlt
sbb
pop
outsl
push
hlt
mov
daa
imul
stos
push
pop
push
mov
iret
pop
arpl
hlt
cld
rorb
cmc
add
ret
popl
hlt
out
mov
stos
insb
sbb
jno
xor
filds
pop
and
cmp
hlt
mov
andl
pusha
mov
dec
ret
insl
mov
mulb
mov
lea
jle
and
es
or
jne
mov
subb
mov
xchg
movsl
and
inc
shlb
inc
mov
out
mov
mov
and
mov
jb
stos
lock
ds
mov
aam
mov
push
insl
clc
gs
js
aas
je
mov
push
dec
pop
lcall
clc
sbb
repz
mov
or
xchg
xor
test
dec
inc
shll
push
scas
rolb
add
xchg
fstpt
pop
adc
mov
test
les
stos
dec
lcall
mov
mov
fisubs
inc
rcll
aad
dec
push
pushf
push
jo
test
jne
arpl
inc
aas
mov
jmp
inc
sub
arpl
xchg
xor
enter
adc
push
or
into
sub
cmp
sub
loop
iret
cmp
jne
xor
imulb
in
loope
lret
xchg
adc
mov
and
cmc
cmp
rorl
mov
xchg
pop
testb
cmp
sbb
std
inc
loop
cmp
jae
aam
xchg
mov
mov
mov
mov
divl
cmpsb
mov
pushf
xchg
je
push
loopne
loop
test
pop
pushf
leave
divl
mov
add
mov
insb
mov
cld
mov
sahf
dec
add
jp
cltd
ja
mov
jns
jae
push
jns
mov
fsubs
fdivl
adc
pop
inc
mov
int3
in
es
enter
shl
ja
pop
out
dec
lcall
and
enter
xchg
xchg
and
stos
push
push
das
fmul
push
xchg
sbb
push
and
push
jno
cld
popf
push
mov
mov
pusha
xor
inc
jno
int
mov
mov
mov
and
cmpsb
pop
dec
iret
push
movsb
or
xor
pop
and
in
fistpl
mov
pop
insb
pop
cld
movsb
imull
sbb
sbb
test
xchg
pop
je
add
lods
notl
jb
fsubrp
xorl
outsb
jns
es
xchg
aaa
xchg
in
fs
dec
lea
sub
xor
dec
xor
push
lods
mov
lcall
fdivp
or
mov
pop
cwtl
sub
addr16
or
out
lods
into
cltd
or
push
pop
lods
mov
test
enter
das
shl
aam
cmp
jp
and
nop
pop
xor
adc
js
and
dec
movsl
divb
mov
and
into
adc
mov
xor
push
inc
pushf
jp
mov
xor
xchg
movsb
sti
test
ret
and
push
or
pusha
adc
and
cld
push
xor
pusha
jg
xor
lds
decb
push
adc
sbb
push
push
enter
lods
or
xchg
pop
cmpsb
in
cmp
cmp
sarb
adc
mov
jp
aas
xor
push
in
adc
movsl
mov
fs
fwait
shll
sub
mov
cmp
sub
ss
iret
sub
dec
xor
orb
inc
lock
push
jmp
sub
mov
clc
int3
push
mov
int
in
xor
fdivl
dec
jb
std
cmp
jno
data16
sub
std
scas
adcb
mov
clc
bound
daa
sub
lcall
insb
cli
mov
pop
or
mov
rcl
lcall
aad
js
push
mov
xchg
push
loop
pop
xchg
xchg
sti
jmp
mov
or
jb
xchg
lods
adc
cld
stc
inc
js
xor
data16
mov
rcrl
push
shlb
hlt
pusha
sbb
jno
dec
in
cmp
loopne
sub
mov
out
jecxz
rorb
xor
jns
sarb
add
mov
stos
and
pop
xor
dec
adc
in
inc
mov
xchg
mov
in
jns
jnp
add
loop
in
pop
push
lods
cs
into
in
inc
xor
popa
cmc
mov
lea
cmp
xchg
sahf
jo
and
sbb
mov
jecxz
mov
stc
and
dec
or
inc
insl
push
fdivr
aam
inc
push
divb
pop
insl
test
insb
out
adc
jne
or
adc
push
ret
inc
jmp
or
or
call
ja
jne
icebp
mov
dec
mov
imul
nop
testb
subl
mov
add
movntps
inc
jg
inc
or
call
mov
jle
inc
icebp
mov
jecxz
add
xchg
sbb
push
inc
lock
push
aas
pop
aam
in
add
call
movsl
mov
inc
mov
ret
sbbl
jecxz
sbb
int3
cltd
gs
or
sub
in
ss
mov
scas
mov
add
rcrb
roll
xor
lods
xchg
xchg
add
rorl
mov
popa
enter
sub
scas
in
sub
sub
or
adc
sti
jns
or
outsl
insb
mov
andl
ds
mov
rolb
mov
scas
jmp
push
sbbl
push
aam
mov
jecxz
dec
xor
aam
adc
xor
dec
pop
pop
aas
jno
xor
movsb
xor
xor
loop
aam
and
xchg
jge
or
sti
mov
pop
lods
subb
inc
stc
inc
dec
push
mov
add
cmp
push
dec
xchg
mov
jb
bound
pop
xchg
sbb
mov
in
xchg
sbb
adc
stos
lds
xor
mov
movsl
sbb
mov
popa
jmp
push
add
mov
xchg
add
and
fwait
sbb
cmc
bound
xor
lock
pop
popf
daa
jae
add
aam
data16
popa
push
xor
mov
int3
cmpsb
jmp
push
nop
add
lea
outsb
rcrb
into
and
scas
fwait
aas
cmpsb
shll
adc
mov
imul
arpl
in
iret
push
sub
in
jb
fildll
ljmp
dec
es
jae,pt
and
push
lods
cld
mov
jne
sbb
dec
imul
add
repnz
enter
xor
mov
in
out
xor
xchg
in
xchg
cmpsb
xor
imul
mov
fisubrs
fdivs
loop
fdivl
ffreep
pop
pushf
je
out
popa
bound
mov
pushf
push
sub
loopne
cmc
scas
xor
jmp
xchg
pusha
loop
sub
sbb
and
mov
jge
dec
add
xor
pop
add
mov
lods
inc
jno
sbb
xchg
bnd
inc
mov
addl
shlb
dec
fadds
jne
jmp
loopne
aam
nop
dec
les
xchg
fwait
pop
stos
dec
xchg
push
rolb
sbb
mov
and
mov
repz
arpl
daa
mov
and
pusha
dec
jo
in
imul
fdivrl
cmp
les
push
mov
test
mov
negb
mov
test
aad
sbb
ds
xor
insl
stc
add
pop
addb
cltd
fsts
adc
mov
aam
ret
imul
or
popf
dec
test
cmc
inc
or
inc
and
push
lahf
addr16
iret
mov
push
mov
cwtl
jmp
pop
jbe
lods
jne
and
andb
pop
add
lods
ds
out
sbb
sahf
mov
movsl
fldl
push
push
outsb
addr16
push
and
adc
push
xor
enter
outsb
outsl
xchg
cvtps2pi
pop
mov
jg
nop
insb
xor
into
inc
xor
and
jmp
sub
inc
xchg
in
inc
and
inc
enter
jbe
std
add
and
subb
push
push
mov
repnz
lods
negb
jge
pusha
cmp
inc
or
loop
xor
int3
adc
cmp
subl
mov
pop
jae
cmpsl
movsl
mov
mov
adc
push
push
scas
add
bound
xchg
xor
push
xchg
lret
dec
or
lcall
lods
xor
stc
pop
add
xor
push
imul
mov
mov
xchg
mov
jns
and
outsl
sarl
mov
and
add
fildll
lret
pop
jecxz
into
jecxz
dec
add
imul
mov
movsb
inc
mov
out
cltd
scas
mov
into
test
dec
pop
pop
sar
and
push
dec
int3
sub
jo
scas
pop
aad
mov
jnp
or
fcompl
nop
xchg
dec
mulb
xchg
jnp
in
sbb
mov
incl
inc
jecxz
jmp
or
ror
push
jns
xchg
fnstsw
sbb
cli
xor
bound
mov
gs
icebp
les
es
icebp
fnstsw
shlb
lock
aad
and
outsl
push
jl
ss
call
jo
out
pop
mov
xchg
test
test
add
inc
pop
inc
js
push
mov
int
pop
das
enter
mov
pop
push
outsb
outsl
fdivl
shll
mov
and
andb
mov
pop
inc
fstpl
lret
mov
pop
xor
add
push
sub
mov
repz
mov
fimull
xor
inc
xor
mov
push
icebp
add
data16
pop
jp
inc
loope
pop
or
jne
push
sbb
enter
jmp
adc
addr16
or
dec
mov
ror
inc
mov
sbb
mov
addr16
push
adc
aas
and
cmp
jl
aas
lcall
and
jmp
jo
std
cmp
out
aaa
xor
nop
idivb
push
add
dec
xchg
adc
imul
inc
sub
lret
push
xorb
push
jnp
xchg
in
pop
and
les
inc
arpl
push
mov
cs
ret
data16
mov
cld
imul
add
jbe
add
iret
fnstenv
scas
and
lock
dec
aaa
gs
movsb
or
mov
int3
ret
xchg
dec
aad
sbb
sti
cmpsb
into
sbb
add
js
cmp
fidivl
leave
cmp
mov
push
pop
cld
stc
or
loopew
cwtl
mov
xchg
lods
pop
adc
lcall
jle
sar
push
nop
dec
and
jge
in
js
xchg
mov
inc
mov
xor
fildll
mov
shlb
mov
jno
inc
mov
loopne
lods
xchg
loop
int3
orl
adc
push
cmc
sub
sub
decb
mov
fldt
or
jg
test
pop
mov
shrb
orl
adc
inc
xchg
int
add
ret
mov
lods
rolb
call
fnsave
cltd
pop
test
lcall
roll
data16
ja
ljmp
popa
and
jmp
fsubp
mov
fstl
popf
cltd
gs
ficoml
scas
add
inc
dec
stos
stc
out
scas
gs
or
pop
pop
inc
push
fndisi(8087
cld
xchg
mov
dec
dec
mov
sub
sbb
jmp
inc
hlt
test
jbe
sub
out
push
in
mov
lds
lds
mov
lods
fnstcw
sub
rcrl
dec
mov
pop
add
adc
xchg
xor
in
outsb
and
mov
mov
mov
cwtl
dec
or
mov
ficomps
js
ret
push
jle
sub
mov
insb
sub
xlat
pop
xor
int3
mov
adc
jnp
sub
mov
push
adc
scas
xchg
adc
in
fstp
xchg
addr16
fadd
adc
or
mov
xchg
xchg
test
jb
in
lcall
lret
mov
jo
jmp
les
sbb
push
daa
data16
sbb
in
pop
jecxz
leave
push
insl
es
mov
fimuls
movsb
inc
in
std
or
pop
jo
mov
push
pushf
cmp
rcll
sbb
lret
les
push
xor
cmpsl
mov
ja
stc
cmp
xchg
cmpsl
ret
cltd
mov
aaa
std
out
lods
dec
inc
cmp
mov
addr16
jo
add
and
loope
sahf
stc
inc
push
sti
mulb
jnp
sub
inc
movsl
pop
call
pop
cmpl
mov
jg
in
xchg
mov
jbe
cwtl
aad
movsl
mov
cld
lret
loopne
in
and
bound
in
lea
push
lahf
arpl
jne
cmp
push
xor
add
movsb
jmp
imulb
fistl
mov
or
adc
or
fistpll
out
and
iret
cmp
in
inc
push
popa
push
test
add
dec
ja
sbb
out
out
inc
adc
sar
mov
rcrb
dec
xchg
dec
fsubrs
ss
aam
and
sbb
sbb
aas
cmp
jmp
mulb
sub
sbb
aam
dec
dec
or
adc
dec
mov
and
jae
loop
cli
cwtl
inc
or
push
mov
jmp
adc
mov
sub
loop
ror
loopne
sbb
adc
adc
add
mov
fbld
ds
rcrl
jmp
arpl
xor
loope
jnp
bound
in
inc
test
cmp
pop
stos
int
fistpll
jle
lret
adc
call
out
imul
movsb
mov
and
cmc
cmpsl
int3
jno
or
insb
jge
or
andl
fs
cwtl
add
repnz
jae
lahf
test
daa
sub
jnp
mov
sub
jle
push
aaa
sub
and
mov
in
aas
xchg
rclb
cmc
fiadds
js
jl
jnp
or
add
stos
mov
loope
iret
lods
fistl
pop
dec
jns
push
movsb
push
jp
subb
jecxz
and
scas
out
mov
xor
jge
xor
inc
insb
adc
push
sbb
pusha
mov
inc
mov
mov
ret
push
xchg
cmc
pop
scas
and
hlt
stos
insl
call
sarb
out
sub
int
iret
les
lods
out
cmc
test
outsl
mov
xchg
movsb
and
out
fcmovbe
jbe
in
out
movsl
xchg
test
pop
mov
pusha
jnp
rcrl
pop
mov
or
ja
ficoml
lock
pushf
test
push
std
mov
inc
std
cmp
pop
bound
add
xchg
test
and
inc
lret
add
movsb
arpl
je
xor
cmpsb
mov
xor
sbb
cmp
mov
cld
cwtl
sar
adc
out
pushf
test
or
ljmp
mov
bound
pop
in
add
dec
inc
cli
int
or
scas
mov
mov
shrb
movsb
push
mov
loopne
cmpsb
imul
sbb
fisttps
out
mov
orl
cmp
push
test
sub
xchg
inc
mov
xchg
enter
pop
sbb
fildll
or
cmp
lea
mov
sub
inc
repz
sbb
mov
mov
movsb
fadd
adc
mov
sbb
lds
jb
subl
lods
xlat
inc
mov
loope
push
lahf
jge
je
sar
pop
mov
es
push
rclb
cmpsl
lds
rcrl
addl
pop
pushf
fs
dec
cmp
jmp
ljmp
or
mov
or
repz
or
in
movsl
mov
sub
cmpsl
stos
pop
into
ja
lea
jo
test
xchg
in
popa
addr16
int
xchg
addr16
test
mov
popf
aas
out
test
std
mov
dec
in
cmpsl
sub
push
adc
pop
xchg
fsubs
pusha
fbld
test
jl
ret
jne
call
cmp
mov
push
repz
ja
add
icebp
pop
xorb
adc
fsubs
inc
bound
out
int3
fildl
xchg
inc
mov
test
divl
or
pop
pop
mov
and
dec
imul
and
inc
add
lahf
leave
xorb
lds
pop
pop
sbb
and
scas
ja
clc
ja
daa
add
mov
ficoms
mov
pop
and
mov
imul
into
or
popf
sbb
mov
xchg
inc
ljmp
in
push
in
in
fs
add
ror
lds
out
fcom
mov
cmc
dec
and
scas
and
ss
into
cmc
cld
imul
jno
lods
push
int3
push
jmp
fisubrl
xchg
push
sbb
or
push
test
sub
push
ret
cmp
xor
mov
sbb
or
loopne
push
in
mov
in
aad
cs
cmp
mov
jae
mov
jbe
mov
sbb
cmp
xchg
xchg
jns
popf
rcrb
aam
xor
jecxz
cmp
out
loopne
iret
xor
xor
dec
xlat
dec
xor
data16
icebp
ljmp
inc
das
call
adc
sbb
push
mov
push
jns
addr16
mov
mov
les
test
imul
test
inc
sbb
pop
clc
aaa
pop
jecxz
or
jmp
jno
sbb
dec
jecxz
mov
xchg
push
add
mov
inc
sti
sbb
sub
or
mov
or
pop
jl
lock
outsb
pop
loop
adc
fcomp
push
call
push
mov
scas
jbe
xchg
xchg
aaa
mov
ss
push
ficomps
sub
xchg
faddl
xor
lock
fidivl
inc
arpl
mov
out
aam
popa
sub
push
leave
inc
pop
pop
or
mov
movsl
cs
xchg
inc
imul
add
insb
je
dec
ljmp
sub
stos
sahf
or
aaa
add
or
xchg
push
add
mov
clc
sub
push
mov
sbb
sub
mov
mov
xchg
fwait
nop
fcoms
fistpll
loop
sub
ret
xor
add
rcrb
in
aaa
push
mov
jns
inc
push
ret
cmp
fcoms
nop
cmpsb
dec
jo
aas
out
sub
inc
jns
cli
mov
jg
rcr
sbb
lods
cmpsl
out
or
orl
fwait
lret
jl
adc
pushf
loopne
sarb
addl
sbb
inc
push
in
in
call
out
sbb
mov
fistpll
and
push
hlt
scas
popa
pop
or
js
mov
xor
mov
lret
adc
movsb
insl
inc
clc
imul
fistl
out
mov
xchg
outsb
pop
cwtl
je
and
fcoms
call
ret
sarl
or
jmp
hlt
inc
mov
and
imul
add
rolb
popa
call
mov
push
outsl
fistps
cs
lret
pop
xchg
inc
xor
xchg
mov
iret
lea
jo
mov
fidivrs
cmp
fisubs
test
loopne
jle
jl
lahf
fsubl
popa
pop
cli
sahf
clc
add
jge
sub
aam
icebp
daa
clc
and
lret
nop
jb
popa
ret
cmc
mov
sahf
mov
cmp
repz
lods
add
test
enter
mov
das
dec
jge
adc
inc
js
lret
jb
cmp
xchg
mov
cmc
push
adc
jb
and
pop
popf
pop
mov
inc
sub
test
cmpsl
cld
pop
mov
scas
push
popf
xor
fisubrl
imull
mov
xchg
xor
pushf
push
add
insl
and
xor
imul
lcall
xor
inc
stos
mull
add
adc
mov
dec
xchg
xchg
out
sub
add
jo
cld
fisubs
add
xchg
inc
les
jno
outsb
mov
adc
lds
cs
inc
push
or
mov
and
ja
and
cmp
jge
nop
push
cmp
mov
ja
arpl
js
mov
int
sub
stc
mov
inc
mov
xchg
dec
scas
sbb
adc
or
leave
xchg
mov
dec
lahf
movsb
out
addr16
imul
mov
pop
repnz
mov
in
fs
add
xchg
add
xchg
lea
leave
shr
pusha
lock
int
mov
cmpsb
clc
add
fnstenv
sbb
outsb
imul
movsl
push
sub
mov
roll
loop
scas
mov
inc
aas
shr
shlb
inc
ret
popf
ja
in
ljmp
sub
add
jp
mov
xchg
xchg
adc
mov
push
mov
adc
addb
mov
sbb
jbe
mov
sahf
stos
jp
outsb
push
pop
mov
and
int
aas
lcall
call
dec
mov
sub
xor
clc
jecxz
mov
mov
in
cmp
neg
inc
lods
xor
xchg
fwait
cltd
sti
addr16
xor
pop
xor
jmp
out
jbe
inc
xchg
pop
lea
dec
test
pop
jb
push
mov
addr16
mov
push
enter
lea
movsb
add
les
popf
scas
cltd
sti
not
mov
aaa
xorb
cmc
adc
jnp
mov
cmpsl
ret
sub
fwait
mull
xchg
dec
fstl
xor
movsl
cltd
stos
aaa
push
cli
add
sbb
and
or
jge
nop
sub
pop
rcll
mov
pushf
sbb
lret
loop
fcmovbe
mov
dec
push
ljmp
out
mov
mov
mov
adc
mov
sub
xor
inc
mov
inc
cli
in
jg
jmp
pop
and
jp
push
mov
movsb
rorl
xlat
lret
mov
rclb
sub
es
ljmp
sbb
loope
mov
jns
dec
je
les
pop
test
sub
mov
mov
ret
push
sbb
aaa
inc
sub
inc
shlb
jae
jmp
pop
xchg
mov
cmc
lcall
sbb
scas
or
mov
pop
or
mov
mov
xchg
mov
jne
inc
sub
gs
adc
je
sub
mov
imul
xchg
cmp
cld
lcall
orl
or
loopne
pop
xchg
into
xchg
push
in
or
pop
lods
lods
adc
and
add
mov
test
int3
popa
shlb
xchg
push
imul
cs
js
les
fisubrs
rol
jne
mov
jb
lods
in
jns
insl
dec
arpl
imul
scas
std
ret
push
ds
sub
clc
jle
lcall
sub
sub
and
or
pushl
mov
push
ljmp
dec
inc
jns
repz
mov
xchg
pop
aad
hlt
push
outsl
pop
or
or
inc
sub
or
xor
mov
mov
out
adc
clc
inc
push
icebp
mov
inc
push
int
push
int
mov
in
insl
add
popf
inc
sub
mov
aam
mov
ret
mov
daa
lea
es
push
xchg
jns
xor
shrl
pop
sub
out
dec
and
sub
ret
popf
mov
fistl
insl
addl
cmpsl
std
pop
les
push
jmp
mov
mov
ret
lods
add
repz
dec
fwait
imul
mov
mov
bound
stos
mov
or
push
and
sarb
daa
in
rolb
movsl
shr
out
jle
into
sahf
jnp
aas
sbb
pop
stos
stos
pop
jl
sti
pop
sub
imul
inc
dec
add
shrl
pushf
in
push
jle
mov
sub
jecxz
pop
inc
lahf
pop
sarl
push
jl
jg
or
imul
dec
push
cwtl
notb
cmp
jno
js
inc
movsl
orl
nop
clc
into
cs
xchg
lds
out
sbb
mov
orl
rorl
test
insb
or
xor
sub
cmp
adcb
lock
ret
popf
test
aad
test
and
stos
inc
lret
js
loop
bound
ror
or
push
add
mov
stos
inc
orb
mov
ljmp
sub
cmp
pop
sbb
mov
andps
jns
xchg
repz
adc
fwait
xor
push
divb
aam
popf
sarb
jmp
push
mov
pop
subb
leave
das
iret
loopne
lds
test
ljmp
sbb
andl
fsub
andb
mov
loopne
pop
cmc
add
ret
hlt
add
pop
pop
lds
cltd
or
and
in
divb
pop
nop
xor
fwait
movsl
sub
jns
outsb
hlt
ret
pop
daa
loope
sbb
ret
adc
xor
popl
pushf
loop
pop
clc
int
cmpsl
mov
pop
out
jp
fidivl
pop
or
mov
dec
or
dec
xlat
stos
jns
or
loopne
loope
push
ds
stc
fsubrs
jmp
stos
fnstenv
adc
rorl
test
jbe
mov
call
mov
sti
and
adc
sub
mov
stos
push
rcrb
pop
push
sub
push
fiaddl
out
pop
test
js
push
mov
in
mov
push
jnp
mov
int
es
js
push
rcl
mov
pusha
cmp
in
dec
xchg
rcl
or
mov
mov
mov
insb
mov
xor
inc
insl
mov
mov
scas
icebp
jp
xor
push
dec
imul
pop
xlat
jbe
sub
fcomi
pop
cs
sahf
pop
popa
jne
sub
imul
loope
sbb
int3
dec
push
jbe
and
adc
push
mov
leave
test
shl
out
rcll
mov
out
push
cmpsl
lods
jmp
loop
test
jnp
mov
jno
sbb
ret
pop
stos
jnp
pop
dec
test
outsl
stc
push
and
and
in
repnz
enter
ret
aaa
mov
sahf
xchg
adc
and
aaa
push
addr16
jmp
inc
fs
fisubrl
in
jb
mov
push
jae
xor
or
je
inc
inc
fnstsw
sti
fxch
popa
loop
call
and
mov
or
and
call
sbb
fistpll
dec
xchg
adc
ja
ljmp
gs
mov
pop
xchg
xchg
sbb
js
insb
dec
and
out
mov
fldcw
popa
jmp
dec
pop
icebp
lock
fs
adc
enter
inc
fsubl
push
push
popf
mov
pusha
shr
or
lods
lcall
mov
enter
cwtl
out
incl
mov
loopne
cmp
jp
addr16
pop
ret
dec
shr
push
cmc
inc
jmp
inc
add
aad
pop
cmp
enter
and
test
cmpl
aaa
divl
ja
les
jp
xchg
cmpsb
decl
loopne
lock
dec
add
xchg
dec
aam
pushf
cmp
jg
fisubs
inc
lock
arpl
or
lods
xlat
test
mov
sbb
xchg
pop
rorl
fs
add
xchg
mov
xchg
popf
adc
loope
rcll
dec
lock
mov
loop
dec
out
cmp
aad
sbb
popf
jnp
xor
jecxz
pop
inc
xchg
sbb
clc
stos
mov
les
dec
popf
shrl
or
out
push
mov
adc
push
dec
adc
cmp
sbb
cli
or
sub
rcll
pop
cmp
in
pop
lock
sti
and
mov
and
leave
jp
sahf
lods
xchg
xor
and
gs
mov
aad
test
in
xlat
and
nop
mov
imul
add
lret
pop
push
push
pop
and
cmp
jb
cmp
push
out
std
out
out
insb
int3
jg
int3
fwait
jno
mov
iret
jne
inc
mov
cld
dec
and
xor
popa
mov
or
dec
mov
enter
inc
stc
pop
xchg
popa
pop
or
fistl
rorl
cwtl
popf
jae
loop
dec
sti
adc
pop
add
push
imul
lods
inc
pop
pop
loop
mov
mov
xor
dec
jl
ljmp
mov
dec
push
pop
push
lods
mov
push
test
jp
icebp
hlt
mov
gs
push
sbb
stos
and
aam
mov
mov
pop
dec
cwtl
or
sub
cmp
ret
cli
loop
js
or
out
dec
jg
pop
dec
xor
adcb
xchg
leave
int
es
imul
sub
add
mov
adc
xor
inc
mov
sub
xchg
cmc
xchg
add
jb
or
push
mov
xorb
daa
rcr
inc
shl
add
enter
ret
mov
cmp
lret
repz
cwtl
fmull
mov
push
sub
jl
gs
loopne
movsl
mov
push
insl
out
dec
nop
mov
mov
xchg
in
cmp
xor
movsb
cmc
imul
dec
jg
jecxz
js
pop
push
stc
andl
adc
movsl
and
imul
pop
jp
out
sar
xor
int3
push
sbb
lret
xchg
sub
stc
jo
push
popf
or
jecxz
push
adc
idivl
and
dec
rolb
sub
mov
mov
imul
and
push
dec
add
fldcw
outsb
cmc
and
std
imul
mov
fs
lahf
out
cmp
aam
lret
jle
mov
lret
jle
and
pop
xor
pop
imul
test
movsb
inc
dec
stos
repnz
fstl
inc
and
pop
ljmp
inc
arpl
pop
test
shr
mov
orl
inc
mull
inc
shl
pusha
inc
dec
rcll
pop
cmp
mov
fisttpll
sub
add
pop
lea
sub
pop
mulb
jo
cwtl
aaa
xor
cld
pop
mov
lcall
jp
seto
outsl
sub
sub
adc
lcall
dec
pusha
pop
push
mov
push
adc
outsl
inc
pusha
scas
sbb
cmp
pop
pushl
fdivrl
stc
xor
lret
adc
in
cmc
cmp
inc
pop
or
jb
or
and
movb
xlat
sahf
cmpsb
call
adc
subb
sbb
xchg
pushf
jno
movsl
mov
or
hlt
test
cli
dec
xchg
mov
ret
aam
cmp
je
push
inc
cwtl
cwtl
adc
dec
stc
or
mov
pop
int
daa
mov
adc
enter
adc
leave
gs
fstl
push
and
add
jg
pop
adc
mov
push
add
enter
cmpsl
cmp
aad
scas
sbb
and
jbe
int
outsl
adc
cltd
test
xchg
jne
sahf
jge
lahf
adc
xorl
pop
push
jg
bound
xlat
fidivl
sbb
xor
mov
andb
int
sbb
inc
cli
out
mov
mov
ja
pop
test
jle
popf
jle
xchg
les
into
fldenv
adc
dec
or
jae
insw
sub
adc
fwait
movsb
sub
and
push
icebp
mov
test
jnp
mov
popa
jge
lods
mov
lods
dec
inc
and
sub
fstl
sub
adc
pop
ds
sbb
shll
roll
inc
in
fs
insb
leave
ljmp
adc
or
ljmp
xchg
mov
cmp
mov
mov
lea
loopne
jl
mov
mov
pop
push
dec
or
test
mov
adc
sbb
xor
fs
push
sbb
out
cltd
clc
mov
xor
push
ja
add
xchg
out
sub
jg
pop
pusha
nop
mov
push
xchg
or
out
and
push
mov
jmp
push
mov
aas
mov
lock
ret
xlat
sbb
cmpl
and
pusha
and
and
pop
sub
repnz
rorb
out
add
inc
nop
iret
test
rorb
mov
nop
xchg
pusha
push
and
push
es
adc
cmp
dec
add
lds
sub
into
and
mov
xchg
mov
mov
aas
icebp
jl
mov
mov
cmpsl
add
mov
je
insl
mov
pusha
out
lods
adc
scas
dec
mov
add
es
cli
enter
popa
arpl
lret
xor
pop
push
in
inc
mov
push
das
mov
aad
jnp
andl
push
sbb
out
pushf
jne
les
outsl
test
dec
pop
add
push
adc
pop
in
inc
lock
add
cmpsb
mov
pmovmskb
sbb
inc
xor
cltd
push
es
fdiv
imul
stc
mov
outsb
jne
xchg
test
cld
movsb
pusha
mov
inc
pop
and
pop
sub
shlb
or
enter
ret
cli
dec
lods
mov
mov
out
mov
mov
mov
inc
mov
or
jle
lods
loop
mov
xorb
mov
sbb
cwtl
cmp
jne
cmpsl
jmp
mov
xchg
sub
and
add
lcall
pusha
push
jo
loope
aaa
loop
xchg
cmp
push
xor
lods
in
pop
jecxz
shll
jl
cwtl
mov
ja
les
add
or
nop
mov
gs
shl
mov
mov
test
icebp
or
test
cmp
aam
lock
jmp
outsl
mov
lock
stos
lods
scas
add
xchg
and
sbb
std
scas
xor
stos
jo
cmp
push
lcall
push
std
nop
inc
pop
add
in
and
into
adc
xchg
repnz
xchg
jmp
aam
clc
mov
sbb
xchg
add
inc
lahf
aaa
jp
inc
int3
out
and
popa
mov
fs
or
or
jne
shlb
mov
sbb
sbb
cmp
pusha
sbb
jp
call
cmp
jno
cltd
and
int
imul
popa
dec
inc
push
jmp
pop
dec
push
or
jg
and
pop
dec
mov
pop
aam
add
or
push
push
shl
adc
loopne
lahf
pushf
sub
dec
push
jno
push
mov
shll
or
ffree
icebp
add
ret
mov
cmp
and
cmp
aad
pop
sub
movsl
add
add
pusha
arpl
mov
or
fldenv
cmpsb
sahf
xchg
mov
cmp
cmp
outsl
pop
cmp
stc
mov
lds
flds
das
adc
sub
inc
lods
jle
bound
add
mov
aam
ret
mov
sub
cmpsl
fldenv
stos
cmp
push
test
pop
lcall
jns
stc
js
dec
jb
negl
dec
je
mov
dec
leave
cmpsl
push
xchg
and
incl
ret
and
sub
lods
push
sbb
mov
inc
pushf
mov
ljmp
inc
xor
jle
insb
push
and
push
jb
pop
bound
jmp
popf
in
orl
pop
sub
fildl
call
in
mov
scas
loopne
fwait
or
setle
iret
pop
inc
pop
aas
add
jge
mov
loope
adc
aaa
xchg
add
fisubrs
popf
negl
sbb
cltd
or
and
inc
test
xchg
rorl
jl
pusha
mov
add
or
mov
xlat
xor
or
or
imul
lock
add
and
sub
push
inc
xor
popf
mov
imul
movsb
mov
xchg
lea
sub
jae
xlat
xchg
cmp
add
mov
je
scas
inc
outsb
or
sarb
adc
fisttps
adc
xorl
xchg
push
into
imul
arpl
loope
fwait
jbe
sub
push
sub
lcall
sti
pop
sub
pop
pop
shr
or
push
dec
out
std
test
ficompl
jle
addr16
mov
sahf
sub
test
jge
sub
test
test
negb
mov
dec
mov
add
dec
jae
lock
jne
or
add
pop
mov
in
ds
add
ds
fs
xchg
jge
les
cmpb
push
cmp
xor
and
sbb
jae
shlb
inc
pop
cmp
mov
repnz
xor
fnstenv
jbe
call
add
shll
lds
add
out
push
lods
in
xchg
sub
movb
aad
popf
loope
pop
push
mov
push
out
adc
cmp
xchg
dec
mov
xlat
call
jne
sbb
add
imul
xlat
rorb
adc
int
add
int3
pop
ficoms
xor
sti
pushf
and
mov
mov
mov
or
pop
adc
inc
add
xchg
mov
fcmove
cld
cmp
or
push
sti
push
in
xchg
sub
mov
aas
leave
stos
jnp
pop
cmp
and
add
out
nop
xchg
xchg
sub
jns
cli
mov
push
jl
das
mov
cmc
insb
jge
jp
cmp
jo
ret
inc
mov
inc
pop
sub
or
lret
repz
jmp
pop
sbb
pop
bound
pop
jns
imul
push
inc
rcll
mov
aam
jge
pop
out
pushf
cwtl
dec
add
jno
movsb
adc
or
push
aaa
mov
stc
sub
mov
pop
gs
outsl
lret
jne
add
jp
adc
cltd
cmp
inc
shlb
leave
and
sarb
sub
int3
in
jge
push
inc
in
out
push
jl
add
xor
push
inc
add
pop
idivb
lcall
adc
fs
lds
cmp
pop
mov
push
pop
cmp
cmpsb
push
fwait
push
cmc
fucomip
aaa
jmp
fucomip
pushf
sar
mov
bound
scas
mov
insb
bound
in
push
or
loope
push
addr16
out
lods
mov
push
in
in
mov
daa
aam
sbb
dec
jl
inc
mov
rolb
and
clc
sbbb
jecxz
mov
aaa
mov
movsb
cmp
sub
stc
pop
sbb
push
movsb
data16
sahf
xchg
jbe
or
ret
mov
cmc
adc
aaa
fs
aam
cmc
xor
test
push
mov
adc
mov
jnp
cmpsl
sarl
sbb
jmp
lock
lea
dec
imul
loope
fs
rcrl
push
aas
aaa
nop
and
fidivl
mov
test
aad
jp
in
xor
adc
lock
mov
lahf
ljmp
lret
imul
or
lods
mov
imul
aam
sbb
sub
ljmp
cmp
xor
jno
mov
fstps
cmp
adcl
std
mov
shrl
mov
xchg
out
arpl
out
into
out
mov
sbb
jo
or
adc
jp
mov
addr16
loopne
lret
sar
test
shr
es
mov
repnz
fidivrs
adc
fldl2e
mov
loope
out
test
lods
shll
xor
pop
add
sbb
dec
push
pushf
mov
mov
movl
daa
aas
jge
xor
jno
dec
jne
call
shlb
lods
cmp
mov
adc
shlb
in
shrl
dec
data16
mov
and
xor
popf
fs
add
rorl
pop
stos
mov
mov
int3
add
sbb
inc
xor
insb
xchg
add
insl
jb
arpl
push
repz
inc
jg
fstps
jns
sbb
jo
xor
fwait
rcrb
inc
test
movsl
loope
cmp
sub
das
or
jns
movsl
test
paddsw
pop
cmp
inc
jae
and
insl
xchg
ret
icebp
dec
push
mov
test
leave
jecxz
sub
add
popa
test
stos
imul
add
pop
dec
add
in
fcoms
mov
gs
ret
fdivp
lds
xor
pop
dec
xor
fisttps
cmp
jb
popf
inc
inc
cmc
cmpsl
mov
pop
mov
xchg
nop
jp
lods
lock
sbb
jl
jmp
xor
decl
or
mov
push
jmp
fsubs
and
jl
icebp
push
pop
icebp
adc
and
mov
cmpb
insl
jmp
std
pop
adc
mov
adc
loope
jnp
xchg
or
das
ja
adc
cmp
cmc
cmpb
add
xchg
cltd
jmp
mov
mov
stc
sub
hlt
pusha
mov
xlat
or
ffreep
test
icebp
or
insb
add
test
sbb
mov
fsubs
shl
add
rol
push
in
subb
divl
or
stos
sub
pop
negb
dec
in
es
or
lds
or
scas
arpl
in
into
test
or
outsl
iret
mov
mov
or
push
popf
sub
sti
cmc
xlat
jo
push
stos
cld
pop
mov
lea
out
in
push
adc
cmc
mov
jle
orb
shrb
pop
push
js
push
sbb
lock
pop
rclb
pushf
pusha
adc
sub
out
push
repz
leave
out
pop
jae
or
jno
inc
call
dec
jge
js
fsubrp
in
push
or
jb
aaa
negb
pusha
sbbl
sbb
in
push
dec
ja
lret
add
xchg
jl
call
xchg
nop
adc
in
fs
and
mov
cmp
push
mov
pop
adc
ss
add
inc
cmp
cli
xlat
add
and
scas
lods
cmpsb
ret
pop
into
jmp
cmpl
pushl
inc
push
pop
jecxz
outsl
pop
sbb
mov
sub
or
xchg
mov
out
cwtl
int
test
xchg
mov
push
jb
lods
cmp
cmp
fcmovu
fnsave
mov
jae
in
ret
into
nop
jp
js
add
mov
or
movsl
xor
xchg
cmp
cltd
leave
pop
or
cmp
std
pop
filds
push
in
push
lods
imul
scas
pushl
adcl
sti
dec
ficoms
push
mov
cltd
mov
std
popl
pop
jne
daa
shrb
sahf
sub
psubusw
test
mov
mov
sbb
sbb
or
lods
jb
xor
cmp
stc
mov
stos
into
pop
push
adc
stc
and
mov
orb
dec
sbb
dec
sbb
xchg
adc
sub
xchg
enter
imul
mov
push
or
call
loopne
jno
stc
adcl
mov
inc
cld
adc
push
mov
xchg
jmp
xchg
enter
adc
sti
adc
movsl
fcmovbe
mov
jmp
shl
sub
fs
xchg
les
dec
add
fdivp
ret
and
lret
rorl
pop
pop
fiaddl
decl
out
fimull
jecxz
xchg
in
mov
jmp
int3
mov
ss
ja
repnz
fisubrs
push
fs
jb
push
test
mov
mov
sub
cmc
loope
mov
or
neg
dec
add
pop
or
pop
mov
pavgw
cmp
or
and
mov
cs
cld
ds
jle
sbb
pop
jp
pop
rorb
push
pop
data16
cmp
dec
xor
push
sbb
ffreep
xchg
aaa
jne
dec
pop
sub
mov
xchg
rcrb
loope
fidivl
dec
adc
sub
shr
or
cwtl
lods
jae
pop
jge
mov
or
fnstenv
int
xor
sbb
jae
jmp
outsb
js
arpl
inc
cmp
fstps
push
or
int3
mov
jbe
mov
pop
test
cmp
pop
iret
push
sbb
pop
insl
jnp
lret
cmp
bound
cld
mov
xchg
jbe,pt
sbb
loope
out
mov
movl
cld
outsl
mov
jle
scas
jb
pop
leave
scas
dec
lret
add
mov
pop
loop
loopne
ret
clc
pushf
lods
dec
fsubr
jnp
test
int3
lret
scas
mov
imul
mov
or
xchg
fs
xor
dec
pop
xchg
mov
jl
inc
xor
jge
push
loop
and
push
pop
sub
adc
into
cltd
aas
xchg
out
jae
add
or
or
inc
pop
pop
xchg
xchg
push
and
and
and
stc
add
inc
and
in
cmp
sbb
adc
push
dec
adc
js
pop
cs
scas
fadds
push
mov
and
pop
xchg
movhps
push
rorl
jae
push
or
fdiv
fadds
jns
jmp
inc
dec
xchg
or
outsb
nop
das
scas
subb
mov
andl
call
sarb
in
in
das
mov
and
sti
inc
loope
push
in
pop
rcr
out
mov
cmp
loopne
push
fistl
repnz
xor
jmp
lret
jnp
add
xor
data16
test
call
mov
push
movsl
aam
pop
pop
sbb
push
cmpsb
lods
scas
mov
jbe
pop
pop
das
xor
inc
fimull
jmp
inc
pusha
dec
mov
sbb
rcll
sarb
stc
push
mov
nopl
xor
cmc
ja
outsl
sub
icebp
outsb
dec
cmp
add
les
jnp
adc
jmp
or
jecxz
mov
mov
test
xor
sbb
ljmp
test
xor
xchg
imul
xor
out
stos
cli
adc
cmpsl
jbe
xchg
and
jg
and
or
xchg
pop
xchg
fwait
mov
sarl
inc
outsl
xchg
cltd
add
lock
push
dec
in
jo
std
sbb
jo
sub
iret
xchg
addr16
stc
loopne,pn
jae
int
lods
popa
testl
xchg
nop
and
sub
cmp
jl
inc
xchg
fldenv
sbb
mov
ja
lcall
aam
arpl
add
dec
xor
out
pop
rorl
add
mov
fadd
push
lods
pop
mov
inc
jnp
xor
dec
call
cmpb
test
sti
aaa
movsl
mov
pop
popa
and
clc
repnz
inc
push
test
jl
xlat
addr16
inc
fcom
call
dec
adc
xorl
jp
dec
mov
inc
daa
push
and
aaa
dec
mov
pop
cmp
mov
xchg
out
sbbl
cmp
hlt
jmp
arpl
or
shll
and
xor
dec
pop
fisubl
loopne
dec
xchg
jne
rclb
js
xchg
lds
mov
je
lret
push
sbb
inc
xor
insb
rorl
jg
pop
xchg
add
shl
popf
xor
popa
pop
dec
mov
out
mov
dec
gs
inc
push
inc
shll
push
mov
xor
cmp
imul
mov
mov
adcb
out
insl
subl
cmp
adc
xchg
lcall
nop
inc
mov
cmp
xor
pop
cmp
and
jns
jp
inc
and
push
inc
jnp
sbb
jne
cwtl
fbld
sbbl
fnstcw
mov
in
cwtl
iret
inc
sub
cmp
mov
mov
enter
dec
add
imul
and
jns
stos
add
repnz
push
and
test
push
adc
pop
xchg
jnp
icebp
dec
dec
jp
or
mov
fnstenv
enter
xchg
repnz
dec
std
mov
and
movsl
adc
xor
scas
in
jo
sbb
cmpsb
aaa
dec
enter
enter
dec
and
ss
mov
mov
mov
jp,pn
and
mov
push
cltd
loopne
dec
mov
jle
lahf
mov
icebp
std
sbb
mov
inc
cmp
loopne
or
or
pusha
cmp
test
cmp
pushw
addr16
inc
push
mov
push
dec
mov
repz
loop
sub
add
xchg
add
and
insl
push
inc
sbb
test
xor
jp
sub
pop
rolb
lods
cltd
test
adc
push
add
sbb
add
pop
mov
xchg
dec
je
adc
sbb
iret
call
pop
mov
mov
dec
dec
mov
ss
dec
sbb
cmp
ret
xor
push
adc
sub
mov
jle
std
cmpsb
xlat
lahf
adc
jae
mov
mov
mov
lods
and
imul
notl
pop
stos
mov
notb
cld
ret
or
stc
pop
in
pusha
pop
push
mov
call
adc
push
xchg
pop
inc
ss
sbb
call
lcall
sub
push
xchg
pop
jge
out
sub
add
pop
lret
fmulp
vsubsd
into
xor
add
out
call
xor
pop
xchg
hlt
jnp
fdivrl
mov
into
lret
hlt
movl
mov
cltd
pop
pop
in
ret
push
jmp
mov
lret
addr16
push
dec
xlat
ja
sub
mov
mov
mov
mov
mov
mov
mov
mov
shrb
dec
adc
data16
push
sbb
mov
sub
into
pop
mov
xchg
pop
cmpsb
lds
leave
sbb
xchg
and
xor
fxtract
dec
dec
popa
sub
or
into
jb
fcoml
or
jp
adc
push
fnstsw
cmp
test
cmc
sbb
inc
xchg
mov
mov
jnp
out
pop
es
popf
or
insl
mov
repnz
fildll
sbb
dec
fdivs
mov
aad
and
adc
mov
daa
imul
adc
adc
mov
test
dec
rcll
and
shlb
pop
sbb
lds
in
jno
push
out
inc
add
sahf
cmc
cmc
shlb
pop
ror
dec
mov
gs
nop
or
mov
adc
sbb
mov
add
outsb
mov
sub
mov
dec
push
push
mov
adc
cmp
add
dec
xor
jbe
ret
movsl
in
dec
inc
aaa
clc
inc
and
inc
pop
jb
inc
inc
sbb
add
mov
enter
aas
aad
outsl
sbb
and
jl
jmp
dec
das
push
xlat
fists
mov
xor
pop
xchg
fcoml
push
and
fdiv
adc
inc
push
push
add
sub
fstpt
cmp
cld
mov
push
adc
rorb
sub
push
pop
pop
stos
mov
aaa
inc
jp
imul
dec
pusha
pop
cld
sub
pop
jo
jg
ret
mov
pop
pop
sbb
sbb
pop
cmp
mov
lods
call
cmp
mov
add
js
and
scas
rcll
movl
loope
sub
cmpsl
jge
xchg
stos
mov
daa
mov
dec
adc
repnz
lds
enter
ds
bound
loop
mov
xlat
lret
addr16
jo
scas
iret
in
mov
bound
mov
adc
arpl
mov
movsl
sbbb
inc
mov
testb
pop
mov
pop
fisttps
clc
sub
imull
adc
pop
add
push
das
out
and
adc
xchg
repnz
je
lods
mov
hlt
fmuls
out
sbb
mov
cmp
pop
push
out
scas
lea
stos
stc
sbb
jp
inc
mov
mov
ss
daa
fadds
leave
insl
mov
mov
push
or
mov
inc
pop
mov
push
adc
pop
inc
pop
add
nop
je
mov
or
lods
pop
fidivs
and
sbb
lock
clc
sbbb
mov
mov
dec
std
loope
push
fnstcw
frstor
and
push
sub
imul
mov
fldenv
sti
pop
pop
pop
loope
xchg
xchg
pop
cmpsb
mov
ret
pusha
addb
imul
out
mov
xor
sub
aam
dec
inc
mov
xlat
call
jbe
repnz
or
in
rcrb
mov
in
add
and
mov
mov
sub
call
mov
push
xchg
add
ljmp
fs
test
lods
movsl
cld
dec
clc
xchg
push
add
cmpsl
fs
xorl
dec
outsb
jp
jb
add
push
xchg
sub
inc
sbb
ljmp
jae
mov
dec
stos
xchg
fmull
and
pusha
xchg
and
movsb
fdivl
imul
test
in
jb
sub
or
jns
add
or
fnsave
cmp
inc
icebp
mov
mov
xchg
mov
out
jbe
mov
adc
enter
rcrb
es
add
mov
dec
dec
sub
adc
adc
mov
sti
int
sbb
sub
fildl
int3
sbb
mov
lcall
data16
xor
cli
cmp
jmp
and
mov
inc
outsb
xor
add
test
shlb
jbe
xor
rcrb
xor
fsts
mov
int3
pop
xor
gs
mov
or
xor
sub
cmpsl
sbb
add
scas
mov
lcall
fs
jmp
push
xor
or
adc
and
inc
cmovo
jns
loope
sub
xchg
mov
ja
or
cmp
mov
out
inc
xlat
out
or
insl
jle
inc
inc
stos
push
lock
mov
in
loop
push
test
inc
adc
or
add
jnp
cs
das
cmp
test
cmpsb
lret
bound
pushf
or
push
dec
xchg
ret
xor
or
std
xchg
jecxz
jne
out
mov
xlat
cmp
sub
cs
stos
mov
outsl
jae
mov
mov
aam
xchg
lds
xchg
inc
into
push
sub
inc
lret
test
add
clc
fmulp
mov
push
sub
aad
sahf
aad
repz
ja
fwait
sbb
mov
or
ret
out
cmp
inc
cli
jno
fcmove
inc
pop
add
cltd
fstl
insl
fstpl
or
inc
jp
lcall
and
xchg
mov
pop
sub
std
in
cltd
inc
xor
popf
mov
sub
cmpsl
into
push
push
adc
and
adc
xchg
xchg
aad
mov
or
fwait
idivl
cmp
lods
clc
jmp
int
mov
jne
pop
inc
sahf
fimuls
add
sti
jnp
push
icebp
xchg
test
imulb
mov
mov
fucom
jle
and
or
mov
scas
sarl
cltd
or
mov
addr16
sbb
mov
push
sarl
pop
ficoms
imul
idivb
out
test
inc
lret
insb
enter
std
jae
sarb
inc
test
xor
daa
adc
or
scas
and
fsubs
hlt
pop
int
ss
xchg
dec
cmp
mov
lret
hlt
pushf
movsb
test
cmpb
lret
mov
aam
push
adc
aam
mov
xchg
shl
or
fldcw
out
jnp
loopne
test
mov
jne
addr16
out
ljmp
andl
data16
cli
push
rsm
mov
xor
fstps
lea
dec
arpl
data16
mov
inc
clc
sbb
jle
subl
xchg
jg
es
rcrl
scas
aaa
cltd
cmp
out
pop
pop
movsl
mov
hlt
xor
out
mov
sbb
and
mov
mov
adc
call
jle
sub
jb
jg
outsl
cmpsl
es
sbb
scas
je
cmp
ss
xlat
test
stos
clc
js
in
icebp
xor
movsb
xor
in
mov
jae
leave
cmp
lock
aad
arpl
adc
int3
cwtl
and
dec
scas
imul
jmp
xor
in
pop
mov
sub
loope
ret
ja
xchg
push
pop
int3
push
lods
iret
gs
loope
aad
sbb
inc
lock
cmp
cmpsl
inc
xchg
dec
push
movsb
lds
fs
xor
loopne
movsb
lret
mov
xorb
aad
cwtl
sbb
std
inc
mov
jns
je
pop
adc
notl
push
and
xchg
rcr
dec
popf
dec
hlt
mov
mov
outsl
sbb
pushf
inc
lcall
inc
fwait
jne
cmp
popa
inc
mov
mov
insb
jle
mov
in
jg
xchg
jnp
sub
repz
outsb
mov
scas
call
xchg
push
sub
jno
js
dec
push
xor
adc
mov
ficomps
rorb
and
aas
cs
sbb
ljmp
xchg
jns
and
aas
push
jno
push
sbb
idivb
pop
xchg
add
clc
sub
lock
loope
xorb
movsl
mov
cmp
mov
cmp
mov
repz
xor
sub
mov
test
sub
xchg
and
add
fildll
cmp
mov
daa
enter
mov
cmp
int3
mov
push
orl
in
push
jnp
or
push
mov
jns
scas
clc
pop
fstl
cs
mov
mov
test
lds
insl
and
xchg
mov
cld
push
push
inc
sub
cmpsb
scas
fcmovnbe
pop
lahf
xchg
lahf
or
cltd
pop
push
stos
add
arpl
test
jmp
push
mov
xchg
test
test
insb
jb
mov
icebp
popa
sub
push
mov
sbb
and
sub
pop
add
cmp
lods
es
cmp
jae
movb
jle
pop
shll
mov
mov
jno
scas
arpl
repz
dec
test
mov
nop
inc
and
xchg
insb
ret
nop
stos
jne
xlat
arpl
out
lock
repnz
jmp
push
insl
cld
cmp
in
push
xchg
xor
dec
xor
fistl
lcall
repz
dec
shrb
fwait
jae
pop
xor
ljmp
sbb
lock
dec
fwait
mov
cmp
cltd
mov
or
shlb
lret
inc
xchg
aam
bt
xchg
fsubr
adc
xchg
in
mov
inc
push
jmp
mov
sahf
cwtl
test
adc
ja
sbb
push
push
adc
or
mov
push
pop
mov
mov
add
cmp
js
xchg
xchg
popa
jge
andl
jnp
rclb
sahf
xchg
outsb
mov
mov
fisubl
fs
add
rorl
js
mov
cs
testl
orl
pop
mov
ljmp
sub
inc
jle
add
add
jbe
push
test
xor
mov
ret
mov
mov
and
mov
cmp
pop
sub
or
aaa
les
mov
in
sbb
insl
scas
ja
test
iret
mov
pop
test
xchg
or
repz
mov
fcmovne
and
mov
and
sbb
jb
imul
push
stos
xchg
cmp
sub
or
sbb
xor
push
ret
aas
and
sbb
imul
push
ljmp
xchg
ficoml
ds
dec
mov
cmp
frstor
dec
jae
inc
icebp
loope
lea
push
fld
mov
rorb
test
inc
cmp
loop
mov
scas
ss
in
ficoml
insb
in
xor
dec
mov
clc
sbb
movsb
sub
pusha
mov
xor
dec
and
enter
sub
daa
cmp
mov
jecxz
loope
int
lcall
and
hlt
push
rcr
add
psrlw
push
int3
arpl
fmuls
pusha
dec
add
int
add
sbb
in
jmp
xor
shll
add
out
out
mov
xchg
cmp
or
mov
inc
sub
sahf
mov
cmp
test
adc
lret
sahf
stos
arpl
xchg
jns
jge
repz
cmp
cmpsl
xchg
push
inc
daa
pop
bound
xchg
mov
push
add
rcrb
adcl
andl
xchg
call
pop
dec
push
dec
jbe
pop
nop
fiadds
shrb
popf
jg
and
popf
movb
stos
jbe
stos
pusha
shll
andb
dec
nop
sbb
sahf
decb
push
lcall
mov
dec
testb
dec
out
inc
hlt
lahf
mov
out
push
xor
fistpll
add
add
mov
dec
add
in
xor
in
insl
ja
adcl
addr16
aad
jmp
cld
call
ret
fldl
fildl
fdivrs
dec
sbb
ljmp
les
push
ss
jp
inc
xchg
ret
lcall
jp
movsb
scas
add
test
or
lds
jmp
jnp
inc
shr
push
xor
mov
lahf
mov
hlt
push
lret
mov
lahf
ss
imul
add
push
push
pop
sbb
mov
cmpsb
xor
or
cmp
out
fstp
and
in
cld
gs
xor
xor
ds
jecxz
data16
push
sti
cld
and
and
sbb
inc
jl
sbb
movsl
mov
cltd
into
aam
lock
shl
pushf
sbb
or
sahf
icebp
into
mov
mov
pop
into
mov
jnp
cmpsl
pop
pop
pop
sub
mov
push
repz
mov
push
jbe
leave
push
add
mov
mov
sub
aam
ret
adc
xchg
pop
push
iret
add
lds
push
push
sbb
out
add
mov
pop
and
leave
adc
lock
ds
sub
pop
and
mov
push
fists
out
out
movsl
lcall
pop
inc
jp
repnz
mov
add
sti
jnp
idivb
or
scas
cmp
sub
insl
jmp
popa
sbb
jp
lahf
mov
mov
leave
cmp
mov
aad
dec
inc
xlat
or
xor
rcll
xchg
lds
ret
add
and
lock
pop
aad
mov
pushf
lret
adc
clc
xchg
cmpsl
xor
popa
out
xor
test
dec
dec
mov
pop
mov
inc
into
jnp
jle
mov
xchg
cmp
cmpsb
iret
pop
nop
xchg
bound
scas
pop
xor
mov
dec
in
push
je
ja
mov
andl
scas
sahf
and
adc
shrl
lds
lcall
mov
test
sbb
or
sbb
mov
test
stos
push
push
popf
xor
lock
dec
ficomps
xchg
or
inc
fldl
out
ljmp
popa
cmp
adc
pop
ss
pop
ret
das
lods
cmpb
test
cmp
ret
flds
mov
jl
pop
out
push
in
aaa
in
add
cs
mov
outsb
imul
add
gs
mov
dec
cld
repz
into
xor
cld
cltd
mov
mov
les
add
and
push
and
cmp
dec
andl
add
iret
push
pop
push
data16
sahf
js
xchg
scas
fcoml
out
xor
pop
pop
xchg
pop
push
das
dec
sbb
pop
nop
imul
rorl
xor
das
fwait
mov
mov
or
mov
mov
pop
sbb
xchg
sbb
mov
mov
nop
jl
mov
arpl
push
leave
sti
divb
jae
mov
mov
test
fs
scas
out
inc
mov
scas
lods
lret
or
xor
lahf
lock
inc
and
cmp
stos
or
add
das
les
and
mov
mov
xchg
mov
sbb
or
cmp
and
out
out
cmp
jmp
gs
adc
xchg
mov
movsb
js
mov
ds
repz
fsubrl
and
inc
adc
push
xor
int
push
or
nop
mov
mov
cmc
loopne
xchg
xchg
add
lret
fstpt
jmp
dec
sbb
gs
xorl
inc
nop
dec
push
adc
dec
mov
push
add
fcmove
mov
or
xchg
ds
mov
cmpsl
or
cmp
mov
fcmovnbe
cwtl
or
add
out
mov
arpl
mov
ljmp
push
es
sbb
mov
in
imul
sbb
pushf
push
ljmp
cmp
daa
and
mov
mov
icebp
je
movsb
into
jns
in
sub
loope
mov
pop
push
scas
jmp
push
cmpsl
in
sub
cmp
push
mov
insl
cmp
adc
sbb
sbb
push
aad
adc
push
add
mov
sub
push
sahf
xchg
outsl
xchg
inc
shrb
push
mov
push
xor
lock
push
push
es
push
inc
cld
inc
add
adc
cmp
xchg
or
xor
scas
imul
lret
pop
scas
scas
sahf
add
test
mov
imul
push
nop
pop
out
jmp
jno
ss
and
pop
repz
sahf
inc
jb
cltd
test
cmp
jecxz
push
std
mov
sti
dec
jg
addr16
in
pop
mov
lods
loop
mov
sbbl
mulb
fs
jnp
mov
cmpxchg
and
out
lahf
sti
sub
mov
jg
mov
xor
xor
repz
adc
adc
dec
lahf
and
pop
push
push
outsl
nop
js
jbe
adc
pop
mov
mov
lret
ds
imul
push
shll
cltd
pextrw
in
mov
test
mov
daa
fimuls
cmp
and
jb
popf
ds
xchg
int
cwtl
adc
xchg
xchg
insb
cs
jmp
jp
sarb
stc
xor
rcrl
mov
cmp
jno
out
fdivrl
xchg
or
pushf
bt
mov
dec
lahf
rcrb
xor
lock
mov
mov
push
movsl
mov
popf
mov
jae
xor
sub
lods
xchg
aas
fimuls
fildll
pop
out
sti
and
ret
mov
pop
pushf
push
adc
lahf
jecxz
sub
mov
mov
jnp
adc
cwtl
sub
jmp
lret
lds
add
add
repz
clc
mov
xchg
push
imul
outsl
mov
pop
sub
aam
aas
push
sub
repnz
test
sar
test
jge
xlat
movsl
mov
xchg
subl
roll
sbb
popf
lock
ja
jmp
and
cwtl
push
test
mov
jnp
jns
stc
sti
dec
repz
loop
cltd
mov
inc
inc
jg
daa
jns
sbb
and
and
aad
mov
leave
incl
pop
subb
insb
xor
inc
sahf
mul
pop
jns
mov
shll
jno
cld
mov
aaa
mov
jne
loop
sbb
ds
cltd
repz
decl
lock
mov
clc
fdivrl
mov
cmp
mov
mov
lahf
lds
sti
sbbl
mov
mov
int3
sbb
pushl
mov
loop
and
call
in
lahf
loopne
and
int
out
sarb
and
shll
pop
je
js
imul
test
scas
mov
les
stc
dec
call
fs
test
pop
in
scas
cmpsl
icebp
cld
adc
and
repnz
aam
xchg
sub
and
push
sbb
mov
fs
sbb
pop
add
shrl
stos
mov
push
iret
scas
in
test
mov
dec
shlb
adc
cmpsb
xchg
js
dec
out
loope
lret
adc
out
dec
mov
dec
push
jnp
nop
or
mov
xor
pusha
sub
mov
mov
push
cli
lret
pop
inc
das
sarl
jnp
cmp
stos
orb
movsb
sub
stos
sub
in
fwait
jecxz
jae
jmp
iret
adc
pop
mov
or
out
dec
push
inc
out
mov
rol
or
mov
ljmp
sub
xor
pop
inc
lcall
mov
cmc
addr16
adc
push
xchg
push
mov
rcll
call
outsb
sub
stos
or
aad
adc
movsl
mov
or
push
or
mov
xchg
sbb
xor
or
out
pop
jne
scas
sti
repz
sub
and
pop
jecxz
mov
jae
dec
push
movsl
xchg
sub
int
bound
roll
pop
push
inc
inc
lcall
rcl
arpl
sub
clc
shlb
jp
sub
outsl
js
jnp
xor
enter
push
outsb
arpl
mov
mov
xchg
frstor
sbb
add
and
pop
std
mov
cmp
cmp
push
bnd
and
hlt
cmp
in
adc
icebp
test
or
icebp
pushw
fmull
mov
fistpll
mov
mov
cmp
scas
sbb
lock
es
add
pop
mov
sarl
cmp
outsl
insb
mov
adc
push
mov
les
dec
pop
stos
rolb
fistps
daa
fists
push
adc
imulb
and
pop
out
test
in
inc
cmp
add
mov
das
add
cmp
fsubrl
inc
minps
inc
or
subl
clc
leave
into
popa
in
jecxz
lock
ss
inc
mov
out
dec
jbe
subl
gs
scas
push
add
push
out
shll
mov
adc
pop
xlat
push
jle
mov
xor
cs
dec
icebp
es
add
push
sub
ljmp
add
add
adc
and
mov
xchg
icebp
cs
mov
mov
jl
es
mov
into
inc
jecxz
arpl
cmp
lahf
imul
loope
cmp
push
adc
movsl
cwtl
xchg
mov
sbb
into
fs
les
sbb
push
scas
dec
or
dec
aas
pop
xor
jg
jp
pop
and
push
mov
into
mov
sub
aam
mov
sub
fwait
or
call
xor
mov
cmp
lret
stos
mov
cld
loope
xchg
xchg
add
sahf
in
sub
pop
fnstcw
pop
insb
cld
negl
pop
add
pop
mov
insb
lds
in
divl
add
and
rcl
jbe
lcall
sub
pop
fisttpl
mov
repz
adc
leave
into
lret
jo
cld
xlat
loope
mov
aad
push
lock
jae
in
lcall
sbb
and
sub
movsl
rol
into
mov
int3
stos
fldt
sub
cltd
pop
mov
mov
push
jno
dec
pop
dec
xchg
in
divl
rcrb
xchg
jmp
cmp
cwtl
es
adc
jmp
jb
iret
testb
bound
mov
dec
adc
cmp
or
push
sub
adc
push
mov
push
and
addr16
cmp
dec
arpl
mov
arpl
int
jl
arpl
shr
lret
mov
pop
lds
aad
scas
out
and
pusha
inc
add
loopne
push
cmp
pusha
push
dec
add
xor
push
movsl
pop
xchg
pop
fiaddl
inc
fnstcw
cmp
in
pop
cmc
mov
push
or
scas
jp
mov
aaa
adcb
xchg
pop
pop
adc
movsl
mov
dec
push
xchg
cwtl
lods
sub
negl
cmp
aas
bound
addr16
imul
movsl
inc
and
mov
lret
in
stc
test
insb
aad
mov
adc
and
je
push
push
jne
ljmp
inc
sbb
js
dec
and
push
jno
sub
sbb
addr16
subb
int
xchg
cmp
hlt
or
add
adc
xor
sbb
bound
cmpsb
enter
test
mov
fstpl
mov
mov
push
xchg
mov
jge
adc
pushf
jae
into
into
pop
sbb
movsb
dec
adc
mov
mov
jno
loope
pop
mov
fs
mov
push
jmp
in
pop
in
mov
jbe
or
ss
dec
popa
test
ss
mov
hlt
mov
sbb
loope
lret
push
aaa
mov
sbbl
mov
mov
xor
into
sarb
jmp
int
add
inc
push
pop
dec
cmpsl
inc
push
mov
stc
mov
mov
xor
jecxz
les
pop
inc
aam
arpl
add
int
cwtl
xchg
insl
out
roll
rcr
imul
sub
mov
imul
or
mov
pop
and
ljmp
std
jg
test
rolb
and
fs
shll
inc
orb
mov
mov
rorl
jbe
daa
scas
adc
add
push
ja
pushf
inc
outsb
inc
out
mov
jno
jo
xchg
nop
sbb
sti
mov
out
imul
adc
shrb
mov
or
and
mov
js
loope
add
xchg
nop
nop
lods
inc
cmc
pop
jge
jmp
inc
and
mov
je
int
shrb
fldt
aas
test
fstpl
test
and
lret
sub
sub
mov
push
mov
stos
mov
fisttps
add
test
xor
lea
loop
je
ret
clc
fs
test
fdivl
xorl
int
xchg
dec
mov
push
aas
repz
mov
jl
mov
mov
mov
adc
cmp
mov
inc
add
fcmovne
pop
clc
std
mov
daa
jne
outsl
inc
lock
push
lret
adc
mov
inc
cwtl
out
scas
in
es
push
enter
mov
or
mov
push
in
push
shl
in
and
and
test
lods
adc
mov
cwtl
andl
jmp
mulb
pop
or
cmovl
mov
add
dec
outsl
mov
adc
push
mov
hlt
push
add
pop
lahf
mov
mov
in
imul
add
outsb
cmc
or
and
add
xchg
mov
and
dec
icebp
test
outsl
xor
mov
es
jne
in
jmp
movsl
xor
cmc
push
js
hlt
ret
and
lods
sbb
out
ficompl
iret
pushf
jne
movsb
mov
push
ret
or
sub
or
xchg
addl
push
jmp
inc
shll
das
add
mov
or
pop
jbe
addl
out
cmpb
mov
adc
xor
cwtl
xchg
pop
jl
mov
and
testb
push
ds
movsl
repz
out
add
in
movups
add
and
push
cmp
push
scas
or
push
pop
sti
adc
lea
ror
cli
pop
inc
pop
lods
mov
nop
and
sbb
push
xor
xor
mov
and
iret
sub
scas
pusha
inc
inc
ja
xchg
push
push
dec
dec
xchg
cwtl
out
mov
lds
inc
cmp
sub
sub
cmp
pop
sbb
fisttps
fidivrl
push
sub
jl
dec
inc
les
adc
leave
fcoms
jb
push
insl
int
inc
lret
sti
sub
dec
outsb
cmpsl
push
loope
into
dec
pusha
sub
sub
adc
jnp
rcll
outsb
scas
adc
push
bound
cmp
into
mov
mov
sub
lret
jo
xchg
stc
sarb
sub
adc
inc
xor
or
negb
mov
dec
mov
pop
test
cmp
ljmp
push
ljmp
or
leave
pop
xchg
nop
in
stc
xchg
push
dec
push
popa
push
mov
fldcw
jae
call
out
cs
in
push
in
cmp
mov
stos
or
idiv
pop
add
push
push
xchg
push
lret
clc
pusha
pop
rcrb
fs
jae
mov
or
nop
in
inc
pop
pop
das
add
or
inc
shll
in
les
and
aas
cli
cwtl
cwtl
xchg
popa
cmp
xor
mov
outsb
inc
jmp
std
scas
adc
clc
fcmovb
xor
adc
sbb
xor
and
jb
add
stos
pop
pop
fsubrl
loopne
jb
jmp
mov
adc
mov
or
push
inc
shll
test
mov
xchg
addr16
pushf
push
ret
pop
jl
flds
push
sub
xchg
aad
jbe
scas
pop
fcmovnb
pop
xor
loop
xor
xor
pusha
push
mov
jge
mov
sbb
clc
inc
and
add
dec
mov
mov
stos
add
fwait
std
je
jg
imul
or
fbld
cld
nop
or
pop
arpl
xchg
and
mov
loopne
xchg
ret
mov
dec
push
cmc
cs
push
push
push
data16
dec
pop
and
call
in
cs
imul
inc
les
scas
lods
adc
out
push
push
inc
add
pop
push
leave
sub
repz
mov
cmp
jl
or
adc
add
hlt
inc
enter
mov
sbbb
es
ror
push
or
insb
mov
es
push
pop
in
lds
cmp
dec
sub
fdivrl
xchg
out
xchg
dec
fmuls
xchg
insb
dec
pop
loop
outsl
cs
push
pop
mov
mov
fdivrp
push
pop
mov
mov
push
or
aad
adc
mov
sub
fwait
xor
jge
cmpsl
popa
pop
clc
ja
xor
outsl
in
and
pushf
sub
adc
xchg
mov
mov
fidivs
call
leave
mov
iret
push
lods
movsl
push
mov
xorl
mov
mov
je
xor
fisubl
sub
js
sub
mov
adc
test
insb
sbb
stos
cmpsb
testl
inc
cld
outsl
fsubr
insb
std
xchg
fistpll
xchg
push
lea
mov
mov
out
and
in
lcall
jo
cmc
insl
mov
and
mov
sub
lea
mov
mov
mov
mov
cs
cmpsb
lea
push
scas
and
mov
lock
dec
js
dec
jg
cmc
clc
lock
sbb
xor
pop
out
adc
gs
jae
sti
mov
int3
sar
movsl
popl
xor
and
mov
jo
imul
jecxz
hlt
mov
subl
mov
loop
bound
leave
lret
popa
mov
add
cmp
test
inc
mov
ja
pop
mov
xor
xor
cmp
push
push
xchg
shrl
and
mov
inc
fsubrl
enter
aad
jb
pop
jns
add
or
loopne
daa
pop
xor
sti
dec
sbb
dec
insl
repnz
std
fldln2
ret
in
fstpl
es
lcall
pop
jp
repnz
ret
cld
aaa
insb
pop
dec
cmp
mov
xchg
roll
mov
cmp
xchg
mov
sahf
mov
pop
rolb
xchg
xor
pop
mov
jle
sub
pop
lock
jbe
cmpsb
sbb
sti
cmp
cltd
cmc
jns
inc
mov
addr16
ja
cmp
aam
or
lock
adc
icebp
int
xchg
sbb
rcl
xor
idiv
loop
adcl
xchg
das
sbb
mov
fnsave
jg
cmp
and
int
in
xor
fadd
in
ds
fdiv
icebp
sti
sub
insl
mov
or
dec
adc
les
gs
adc
insl
sub
jmp
inc
ljmp
repz
inc
xor
shrb
imul
into
leave
pop
and
rcll
addr16
es
test
popa
jl
jmp
mov
mov
pop
iret
testb
out
mov
ss
and
cmp
sbb
inc
in
push
xor
loopne
pop
data16
mov
or
pop
fwait
repz
mov
mov
pop
mov
jmp
sbb
and
jo
dec
in
ja
add
push
insl
and
pop
ret
les
add
iret
and
adc
scas
pop
jle
test
std
jno
xchg
clc
sbb
ret
cmpsb
xchg
das
pop
or
fmull
sti
out
stc
mov
pop
insb
cmp
lods
or
pop
insl
inc
push
cmp
cmc
and
fnsave
pop
sbb
inc
fidivrl
xchg
lods
mov
inc
shll
dec
int
xchg
mov
addr16
mov
fwait
dec
mov
lea
mov
fwait
dec
fisubl
push
mov
dec
stos
push
inc
xor
into
outsl
repnz
jmp
and
dec
popa
rol
mov
stos
enter
inc
xor
sahf
push
scas
ret
aam
sub
inc
cmp
lcall
inc
ljmp
xlat
sub
pusha
pop
lea
scas
lds
jae
pop
aas
push
push
rorl
fmuls
pushf
dec
jecxz
stc
cmp
pop
sub
lret
mov
xlat
lret
and
hlt
icebp
lods
or
inc
jnp
aam
add
lock
nop
icebp
xchg
test
pop
and
or
pop
fnstenv
cmp
bts
jne
cmc
int
push
sub
cmp
scas
outsb
bswap
stc
adc
out
outsb
les
shlb
loop
and
sbb
pop
xor
mov
sti
xchg
mov
sub
sub
gs
mov
ljmp
sahf
pop
fmul
xchg
sub
inc
push
inc
mov
or
sbb
sub
rcll
and
pusha
in
call
icebp
aam
loop
gs
jge
data16
loopne
inc
out
sbb
jnp
andb
imul
push
xchg
and
mov
or
sti
daa
lock
popa
mov
je
shl
xor
jl
testb
jb
movsb
jp
push
xlat
enter
push
mov
and
adc
iret
loop
mov
popa
add
in
push
sbb
leave
stc
fdivrs
push
push
dec
out
xor
sub
shlb
adc
mov
pop
aas
push
popa
lahf
daa
mov
das
jae
sbb
or
das
gs
adc
in
into
push
pop
adc
fsubl
sbb
mov
add
xor
jb
setb
aam
sbb
xor
mov
movsl
jae
stc
lret
push
fwait
mov
imul
push
inc
cwtl
negb
jmp
adc
outsb
jle
jb
pop
sub
lret
pop
inc
pop
sub
dec
scas
inc
sbb
xor
int3
repnz
cmp
adc
cmp
loope
aad
in
bound
into
movsb
cltd
push
dec
adc
inc
into
mov
cmp
push
jbe
ds
pop
repnz
mov
adc
ret
frstor
dec
cmpsb
cmpl
inc
ret
aaa
call
or
or
stos
inc
push
and
pushf
push
push
sbb
xchg
das
lds
push
cmp
fs
xchg
add
aas
aam
jne
std
pop
cmpsb
icebp
mov
icebp
adc
pop
sub
stc
repz
adc
mov
out
sbb
mov
xor
and
iret
mov
cmp
jae
nop
mov
aam
popf
out
cmp
sub
jl
ds
jae
rorl
in
insb
adc
mov
adc
fstl
test
or
cmp
xor
add
jne
xor
repz
and
sub
fwait
cmp
push
std
int3
jp
cmp
fildl
lock
add
loope
xor
fidivl
mov
sub
pop
stos
into
inc
mov
jge
adc
pop
add
sub
push
cltd
jno
and
lds
sbb
mov
imul
popa
imul
pop
shrl
movsb
rclb
jl
leave
push
adc
inc
flds
fldcw
or
test
xlat
aam
hlt
pop
bound
das
mov
rclb
ret
mov
push
gs
dec
shlb
shrb
push
outsl
dec
dec
sub
aas
jg
es
xor
roll
cs
xchg
std
aam
loop
push
ret
nop
and
mov
scas
in
fs
stos
js
jnp
rclb
or
add
mov
rcrb
lcall
ljmp
sarl
jmp
sbb
repnz
frstor
test
sbb
mov
hlt
mov
gs
and
sub
pop
iret
mov
test
adc
enter
add
xchg
fidivrs
je
inc
aaa
adc
cmp
js
dec
test
hlt
stc
arpl
dec
push
jecxz
push
fwait
lret
add
adc
mov
js
fists
sbb
imul
subl
sub
es
dec
cmp
cltd
adc
lahf
dec
cmpsb
addr16
xchg
imul
hlt
mov
or
pusha
pusha
ja
mov
out
mov
jb
mov
movsl
lods
div
push
inc
mov
into
pop
pop
mov
inc
jg
cli
scas
mov
in
or
pop
shl
jb
jb
leave
dec
imul
dec
rcrl
cmp
rclb
push
pop
jae
daa
push
or
xor
scas
pop
xchg
test
mov
jecxz
mov
sahf
xor
pop
daa
adc
inc
xchg
cwtl
jno
dec
and
add
fwait
mov
dec
clc
imul
loopne
in
pop
cltd
and
jns
je
pop
cmp
dec
dec
test
push
push
push
lret
fnstenv
sub
mov
movsb
or
mov
mov
fwait
push
jle
or
cmpsb
addr16
les
in
leave
or
and
or
mov
std
and
and
aaa
mov
inc
int
and
and
mov
mov
scas
or
or
xor
pop
mov
pushf
sbb
lcall
movsb
loopne
in
or
bound
cli
adc
cwtl
stos
or
cld
fwait
jbe
fcoms
xbegin
andl
test
into
and
or
jle
test
lea
cld
sbb
push
mov
and
mov
testb
int
inc
or
adc
jb
gs
mov
push
mov
ljmp
jnp
xchg
push
push
push
xchg
leave
mov
ljmp
out
push
cmp
sbb
movsw
mov
xor
mov
inc
fs
aaa
sbb
testb
sbbl
sbb
iret
addb
es
jns
lret
xor
jmp
xor
xchg
push
push
sbb
fwait
cmpl
adc
ret
movsb
pop
fstps
fwait
sahf
shll
or
mov
adc
lods
sbb
dec
pop
xor
mov
mov
in
jns
stc
ret
lcall
mov
ficompl
sub
xchg
mov
hlt
pushf
add
mov
adc
in
sahf
js
or
popl
daa
jns
and
fldl
pop
cmp
dec
jo
xchg
jecxz
stos
xchg
test
push
lcall
jecxz
call
sub
in
fchs
and
dec
enter
push
or
lahf
push
ljmp
mov
jne
jl
adc
mov
std
xor
pop
mov
and
jnp
arpl
add
jns
daa
mov
ror
jg
hlt
mov
push
fstps
outsl
xchg
bound
fisttpl
lea
sbb
fstpt
jb
or
cmp
cli
jbe
mov
adc
out
sub
pop
or
inc
cmpsb
jg
mov
out
dec
jae
clc
sbb
mov
xchg
mov
inc
cmp
jge
stos
jecxz
lret
cwtl
pop
dec
mov
gs
jmp
cld
xor
xchg
sub
outsb
sbb
btc
int
mov
sbb
cmpsb
push
aas
int
push
push
mov
or
imul
cld
addr16
dec
xor
icebp
and
aam
inc
pop
out
mov
xchg
xchg
jno
mul
icebp
push
call
cmp
push
mov
adc
imul
in
pop
fiaddl
ss
push
mov
movsb
pop
repnz
push
mov
insl
dec
mov
hlt
jnp
cmp
fmuls
push
sbb
pop
pop
pop
pop
sar
fmuls
cmp
lea
les
push
adc
adc
xlat
popf
addr16
cmpsb
and
das
int
stos
add
adc
int
pop
adc
mov
adc
repz
aas
sub
cmp
insl
test
repz
insb
repnz
lods
mov
add
ficomps
sbb
push
scas
xor
cli
std
sbb
inc
mov
pop
push
push
and
mov
mov
rcll
add
mov
fdivrl
push
shrb
dec
xchg
dec
mov
cmp
adc
mov
cmp
push
mov
mov
or
in
push
xchg
icebp
sbb
scas
mov
out
push
popa
es
sbb
pop
and
sti
mov
fidivs
mov
inc
pop
mov
mov
dec
les
cmp
inc
hlt
ja
ss
dec
inc
cmp
fcmovu
ficomps
imul
scas
out
push
aas
mov
pop
jne
sarb
mov
xchg
sahf
roll
and
jl
popf
jbe
or
pop
sub
insl
sub
mov
sbb
pop
das
jl
dec
jl
sub
xor
fimuls
int
lret
xor
mov
cwtl
inc
mov
test
in
lret
add
rclb
addr16
decl
sub
iret
inc
xor
std
fcompl
and
sub
adc
mov
and
and
pop
fisttpll
xor
hlt
inc
mov
das
adc
ret
push
movsb
addb
xor
outsl
xchg
outsl
jo
arpl
dec
in
dec
inc
pop
in
std
out
pop
in
in
or
xchg
xchg
inc
push
pop
jno
push
call
or
je
lods
xchg
gs
and
testl
add
push
repnz
push
pop
jmp
xorl
cmp
inc
and
or
mov
jg
adc
mov
incl
adc
cmp
clc
xor
push
adc
add
xchg
add
pop
scas
or
das
sbb
icebp
mov
fsubl
ljmp
movsl
jnp
lret
pop
sub
outsl
or
push
jp
lahf
dec
mov
int3
popf
mov
dec
xchg
movsl
call
mov
dec
movsl
cmp
mov
mov
adcb
add
aas
mov
pushf
mov
hlt
jae
js
sbb
push
xchg
add
lahf
dec
ja
push
aam
test
lods
and
subb
movsl
inc
push
in
fsubrl
in
iret
and
push
loop
lcall
and
or
movsb
lea
sub
fildll
scas
bound
jno
aas
aaa
lds
add
insb
dec
mov
lcall
inc
pop
loopne
fdivs
mov
popf
jae
shrb
frstpm(287
jle
call
insb
mov
jno
pop
enter
lods
cwtl
pop
mov
pop
mov
push
xor
xchg
sbb
out
inc
and
int3
les
add
sti
add
pop
in
inc
fsubrs
inc
mov
pop
sub
push
jp
shrb
xchg
jg
xchg
ljmp
rcrb
lock
movsl
mov
cmp
xor
mov
cwtl
movb
add
outsb
movl
outsb
sub
push
add
cwtl
rol
or
inc
cmc
add
sbb
cltd
arpl
dec
jg
sbb
pop
add
mov
push
aaa
push
pop
lret
or
inc
pop
ja
or
aas
bound
shll
xlat
mov
dec
or
cwtl
dec
xchg
lahf
mov
mov
call
outsl
rcr
in
mov
push
cmp
pop
fwait
cmp
imul
sbbb
into
mov
leave
jp
jns
ret
test
sub
cmpsl
mov
dec
jle
mov
cmp
and
mov
add
jmp
ret
imul
pop
in
dec
or
fdivs
cmp
fimuls
shrb
xor
ja
aam
mov
loopne
xchg
xchg
sbb
fsts
lock
and
sti
scas
ss
rcrb
iret
adc
pop
lcall
pop
dec
jne
jnp
xor
lods
cltd
enter
loope
and
lock
mov
jl
push
fiaddl
push
enter
add
rorl
push
fidivl
shrl
in
arpl
dec
or
pop
pop
lcall
mov
push
or
outsb
cmpsl
adc
cmp
js
gs
push
mov
pushf
insl
mov
out
aas
loopne
pusha
inc
scas
popf
dec
in
push
repz
mov
adc
test
mov
push
ljmp
movsl
or
clc
mov
testb
out
outsl
aaa
xor
add
jno
jns
lahf
lret
add
cmp
loope
test
push
adc
mov
sub
sub
mov
adc
add
mov
lds
push
ja,pn
push
jnp
in
push
add
mov
outsb
jp
rorl
sub
cmpsl
out
cmp
dec
dec
sub
inc
call
or
mov
add
movsl
pop
jo
lcall
bound
movsl
inc
out
mov
add
rolb
mov
in
pop
data16
sub
xchg
outsl
cmp
adc
inc
out
and
mov
pop
push
fdiv
jg
test
mov
xchg
pop
int
jae
pop
pop
testl
movsl
jno
outsb
dec
inc
add
ficoml
cmpsb
fiadds
loop
stc
dec
lret
jmp
sbb
mov
fadd
mov
xor
xchg
in
lcall
dec
or
push
imulb
sti
mov
ss
sub
dec
mov
xchg
icebp
jmp
cmpsb
mov
pop
push
gs
ss
mov
pop
nopl
or
jp
and
pop
adc
sbb
jl
xor
mov
push
pop
clc
aaa
inc
aad
pop
push
in
inc
stos
int
jno
aaa
subl
int3
push
test
sbb
cmp
push
push
lds
pop
or
push
enter
or
pop
or
rep
lret
fstpl
jl
mov
jnp
or
push
sbb
and
or
mov
sub
adc
divb
fs
cli
hlt
sbb
cltd
repz
add
xchg
in
xor
jne
ret
add
add
clc
pop
inc
xchg
popf
ss
xchg
rep
daa
push
inc
sti
push
mov
or
sub
sahf
jge
gs
test
inc
aaa
xor
out
int3
rcr
das
ss
mov
scas
jae
jbe
jo
jmp
imul
push
incb
sub
mov
and
xchg
mov
mov
mov
fnstenv
xor
push
je
orb
mov
sub
dec
xchg
js
mov
in
push
jge
cmp
insb
dec
xor
mov
jno
je
repz
xchg
or
sbb
fistps
and
mov
inc
jb
ret
roll
sub
movsb
adc
scas
icebp
pop
mov
pop
incl
sub
adcl
mov
dec
movsl
popf
mov
bound
scas
popa
pop
iret
cmp
xor
adc
xor
daa
pop
call
mov
mov
roll
ss
repz
mov
call
or
mov
mov
sbb
adc
sub
mov
cmp
call
mov
lahf
push
rcrb
push
clc
scas
xchg
lods
or
push
jp
sub
adc
ja
sub
xor
xchg
gs
dec
xor
mov
cmc
cmp
sbb
xor
sub
fsubs
stos
push
ja
jl
xor
hlt
mov
popa
jmp
mov
mov
xchg
cmp
adc
sub
dec
mov
mov
push
and
call
mov
mov
daa
push
mov
jbe
test
mov
aam
dec
mov
mov
in
xorl
cmpsb
aaa
push
fdiv
adc
popf
pushf
adc
adc
addl
xor
mov
pushf
dec
addr16
push
adc
and
jne
jae
mov
jl
imul
and
out
xor
sub
and
clc
fwait
pop
cmp
sub
mov
or
lock
mov
icebp
jmp
push
xor
test
aaa
lahf
div
ret
fisubrl
clc
push
test
cltd
and
xchg
popa
les
push
sbb
nop
and
mov
out
pusha
in
cmovp
imul
inc
ret
fistpl
in
cltd
fdivl
sbb
xlat
sbb
xchg
xchg
add
mov
std
fstpl
in
sub
aas
cmpb
sub
rcrb
or
push
and
mov
jle
mov
or
and
roll
je
sti
push
and
iret
filds
repnz
sbb
push
enter
fstl
fucomi
sti
ret
lcall
or
cltd
lret
cmp
rclb
add
out
popf
enter
mov
test
or
std
dec
or
stc
popf
cli
bound
es
pop
bound
fbld
cmp
push
jl
push
mov
dec
pop
jno
xchg
mov
dec
xchg
xchg
add
fs
push
mov
insl
lret
push
fisttpll
xchg
rclb
test
pop
lea
dec
cmpsb
xchg
inc
mov
fwait
aam
jbe
adc
ret
jecxz
mov
cmp
sub
aad
jle
cmpb
jb
xlat
adc
sbb
mov
jmp
daa
data16
pop
jae
subl
fistps
xlat
push
push
lods
pushf
push
jmp
push
sbb
adc
loop
sarb
push
sbb
dec
call
popf
mov
push
mov
jmp
push
pop
sbb
jnp
mov
inc
fneni(8087
mov
popf
movsb
xor
das
lods
mov
inc
xorb
sub
int3
xchg
cwtl
fsub
addr16
enter
daa
hlt
push
out
and
lock
popf
idivb
pop
inc
out
xchg
push
out
mov
ret
cmpsb
mov
or
int
mov
roll
shlb
stos
adc
cmp
xchg
xchg
xor
insl
dec
stos
push
ret
mov
ja
movsl
jno
jle
sub
xor
das
xchg
mov
sub
rolb
jb
mov
mov
xor
addr16
xchg
scas
inc
repnz
fdivl
orb
fistps
pop
in
pop
mov
dec
and
push
inc
repnz
subl
xor
xor
push
stos
dec
cmp
adc
dec
pop
sahf
cmc
cmp
xor
lea
in
sarb
add
or
stc
lock
sbb
add
sarl
dec
imul
push
fcoms
mov
stos
xchg
mov
and
adc
mov
in
dec
push
scas
call
add
add
jb
gs
cmp
mov
mov
inc
lahf
fs
aaa
add
push
sbb
pop
adc
in
inc
dec
mov
jae
in
mov
push
push
push
ds
xor
inc
shll
packsswb
insl
lret
jno
mov
mov
test
adc
cltd
and
or
insl
add
xor
shrl
cmp
mov
pop
addr16
push
xchg
enter
lods
mov
std
movsb
add
aad
sub
sahf
fistl
and
xchg
mov
xchg
ds
fadds
xchg
out
test
or
test
popa
add
out
and
leave
add
leave
jmp
or
pop
lock
push
scas
inc
mov
out
psrad
adc
fwait
xor
stos
imul
jo
and
fiadds
dec
call
xchg
add
pop
mov
xor
outsl
rorl
jge
insb
add
xor
rcr
test
push
iret
sub
addr16
or
xchg
roll
in
push
inc
cmpl
mov
cltd
mov
shrb
lcall
cwtl
and
jne
push
or
fs
jnp
enter
bound
rolb
dec
adc
in
std
scas
pusha
je
xor
and
fidivrl
adcb
nop
stc
fsubs
mov
add
fdivrl
pop
push
cmpsb
or
adc
xchg
shll
xor
adc
jnp
scas
add
in
bound
frstor
rorl
outsb
loopne
cmp
insb
outsl
dec
je
lds
pushf
andl
ljmp
xor
subl
add
or
addb
sub
loop
adc
lret
push
mov
xor
jecxz
dec
mov
cmp
daa
fiaddl
ret
iret
das
add
insl
jns
add
daa
aad
orl
arpl
jl
or
adc
jno
mov
js
xchg
pop
sbbb
mov
jns
inc
add
dec
pop
cmp
cmp
shlb
addl
js
jo
sarl
das
imul
call
jecxz
scas
scas
test
jge
xor
xchg
negb
dec
enter
mov
lock
mov
test
fadds
jo
out
push
jge
in
inc
iret
call
dec
xlat
and
mov
cltd
orl
mov
pop
jmp
addb
imul
shrb
xor
fndisi(8087
jl
shrl
sbb
push
cmpsb
adc
divb
pop
lret
filds
cs
or
and
mov
in
in
mov
xor
jb
cmp
pop
lods
dec
mov
cmp
cmpsl
mov
loope
fcmove
xchg
rcl
jbe
shl
sbb
out
pop
int3
mov
into
iret
or
cmp
sbb
pop
pushf
or
push
mov
insb
out
xor
jmp
add
xor
pop
jp
test
cmc
pop
shlb
xchg
fs
aam
in
or
pop
jle
pop
lcall
inc
cs
jno
sbb
or
cmc
lods
add
pop
inc
jno
aad
stos
pop
mov
jl
mov
arpl
jne
jno
cmp
mov
inc
mov
cmp
dec
sub
stos
jle
lret
push
lods
sub
mov
pop
bound
add
mov
jge
imul
sub
in
lret
mov
jno
push
mov
push
fstpt
push
cmp
fcoml
mulb
dec
mov
mov
les
inc
ret
loop
xorl
xor
pop
push
push
xor
mov
pop
icebp
gs
je
pusha
pop
add
int
fstl
mov
lods
rolb
into
push
test
sbbl
outsl
cwtl
ljmp
cmp
sbb
filds
cmp
add
mov
or
addr16
push
mov
adc
dec
adc
sub
pushf
daa
int
fstl
or
mov
xor
or
inc
fwait
ret
mov
rorl
in
stos
pop
push
cwtl
or
leave
andb
cs
insl
stc
ret
out
popf
sbb
jne
fwait
adc
mov
and
cmpsb
pop
clc
push
mov
rorb
pop
sub
push
loop
iret
jns
aas
fisubl
int
outsl
aad
enter
inc
negb
insl
bound
xor
ret
jb
dec
inc
and
jecxz
inc
rorb
aam
cli
mov
enter
cmp
jp
and
xchg
aam
jb
roll
push
mov
cmp
movsb
out
pop
mov
rorl
imul
movsl
mov
sbb
ret
fsts
lcall
xchg
fistpll
roll
popf
ljmp
pop
loopne
fadds
sbbl
aad
repnz
daa
insb
xor
or
punpckhwd
fcmovbe
gs
cmpsl
add
mov
mov
leave
jl
sub
mov
cld
js
test
xor
in
lods
movsl
or
dec
push
inc
cwtl
pop
add
in
pop
mov
mov
fistpl
cmp
adc
inc
sub
popf
and
sub
mov
dec
rcrb
pop
mov
add
mov
dec
scas
jecxz
push
pusha
mov
gs
fs
popl
dec
bnd
clc
and
adc
rcl
pop
stos
rcll
sub
aad
mov
and
sar
imul
sti
pop
sahf
in
sti
mov
int3
mov
lret
and
negb
add
bswap
push
inc
mov
je
ds
out
stos
sbb
ds
lea
dec
mov
ljmp
cmp
in
adc
sarl
add
and
gs
inc
ss
mov
shl
call
dec
sbb
mov
sub
or
aas
sub
dec
push
and
imul
insb
negb
scas
or
clc
pop
orl
adc
xor
fmull
loope
inc
sbb
lahf
adc
dec
hlt
insb
ja
call
jne
adc
ljmp
xchg
insl
adc
lods
lods
push
lock
sub
repz
out
loopne
cmp
sbb
rorb
lret
mov
notl
jmp
push
sbb
mov
lret
aam
or
pop
push
rcr
add
jo
jnp
sbb
push
mov
inc
hlt
roll
sub
insb
in
es
mov
push
push
push
lahf
push
pop
mov
movsb
add
leave
ret
sub
repz
mov
enter
test
inc
outsb
dec
mov
and
jp
xchg
mov
add
pop
push
inc
jecxz
test
lods
dec
pop
mov
push
xchg
dec
jb
ret
xor
andb
jnp
inc
mov
shlb
fs
mov
fiadds
cmp
mov
sti
or
jbe
in
dec
xor
aas
repnz
push
fbstp
push
and
mov
xor
lahf
mov
xor
aad
xchg
test
sub
cmp
xchg
or
mov
div
dec
pop
scas
sbb
or
mov
ret
dec
daa
xchg
lret
mov
ffreep
adc
cltd
pop
in
mov
js
mul
insl
scas
sbb
ret
xchg
in
test
lods
and
repz
dec
mov
mov
lods
repz
inc
xchg
mov
mov
mov
jae
and
inc
fstp
notl
xchg
push
lcall
push
adc
enter
sub
add
dec
ja
push
fadd
out
mov
adc
rcr
sbb
pop
push
insl
xchg
add
xor
xor
or
and
xchg
lds
test
mov
pop
inc
call
dec
fbld
push
clc
xchg
fcoms
sbb
or
lock
hlt
ret
mov
or
dec
or
mov
add
mov
lret
cmp
inc
jne
mov
pop
bound
data16
or
xchg
push
mov
sub
cs
mov
or
cmp
in
outsl
enter
addr16
push
dec
lock
test
icebp
sbb
mov
sar
inc
mov
jnp
add
fmul
ret
jno
adc
loope
jb
push
cmp
pop
sarl
pop
xor
ret
insb
add
sbb
imul
sti
fs
cs
mov
ss
mov
sahf
dec
insl
pushf
aad
push
jae
push
xchg
cmpsb
mov
addr16
cmp
dec
aam
andb
das
scas
movsb
notl
fists
inc
sub
add
xchg
pop
je
in
jae
les
jno
push
es
mov
adc
dec
jl
lock
or
std
icebp
pusha
push
pop
cmpsb
xor
fbld
cmp
xor
or
mov
add
xchg
or
push
or
mov
popa
sbb
imul
cli
subl
ret
in
mov
adc
cs
add
adc
push
pop
sbb
dec
pop
lahf
push
pop
loopne
mov
clc
call
lods
cld
jg
sbb
int3
pop
mov
jg
fwait
pop
stc
pushf
mov
mov
xor
and
dec
out
cmp
fadds
push
sbbb
mov
mov
xchg
hlt
xor
sub
idivl
ljmp
rcr
mov
test
add
cs
out
aaa
cmpsl
mov
lcall
cmpsb
fnstsw
jg
stos
xor
data16
sbb
and
sbb
je
xor
inc
out
ret
adc
fwait
push
xchg
mov
xor
xchg
cmp
cwtl
pop
inc
cld
or
dec
in
or
pop
stos
insl
jnp,pn
or
das
mov
sbb
mov
sbb
inc
aaa
push
outsl
das
dec
sbb
xchg
dec
sub
sbb
mov
dec
push
out
leave
add
mov
or
xor
fadd
xchg
lret
mov
push
sub
sbb
jmp
notb
ret
sti
cmc
fwait
cmp
iret
ds
sbb
pop
inc
ds
pop
jecxz
jne
mov
cmp
pop
sbb
iret
clc
out
in
enter
cmp
inc
jmp
sub
sbb
dec
push
xlat
and
inc
sub
or
jbe
and
fidivrl
test
out
dec
inc
out
lock
mov
aad
xor
and
movntq
jmp
mov
xchg
ss
call
pusha
sbb
int3
mov
scas
stos
hlt
inc
jb
pusha
jns
lods
std
inc
sub
iret
gs
lahf
ljmp
mov
lds
fiadds
or
pop
sbb
or
push
mov
test
pop
cwtl
xchg
outsl
imul
sub
stc
pushf
fistpl
pop
filds
inc
mov
lea
icebp
cltd
loop
xor
lds
lahf
stc
or
sbb
sub
xchg
cmp
xor
data16
mov
adc
js
jecxz
stos
dec
sbb
xchg
push
dec
icebp
lahf
loop
inc
cmp
pop
inc
mov
ja
rcrl
jp
in
cld
fwait
jbe
pushf
adc
mov
shll
pusha
and
stos
std
js
or
add
mov
and
pushf
outsl
addl
jg
mov
cli
sahf
sub
mov
mov
mov
jp
pop
and
fisubrs
fisttpll
arpl
mov
sub
xchg
cld
jbe
in
sbb
push
daa
int3
xchg
imulb
das
pop
mov
mov
jge
mov
and
test
lea
cmpsb
inc
lahf
pop
sub
nop
sti
jae
push
xchg
ret
mov
inc
inc
xchg
test
fisubrs
mov
das
sbb
jle
insl
inc
mov
dec
sahf
mov
dec
and
pop
cwtl
ss
and
push
lock
adc
test
out
xor
imul
cmpl
mov
mov
dec
xor
xchg
mov
popa
or
rorb
push
enter
sbb
push
cld
jne
add
in
stos
outsl
pushf
das
je
push
push
clc
loopne
inc
mov
in
hlt
mov
cmc
std
clc
scas
outsb
leave
pop
xchg
push
or
mov
movsb
aad
data16
dec
stos
lret
mov
test
popf
subl
xchg
lea
xchg
addr16
imul
loope
nop
rcl
jge
pop
pop
jmp
pop
add
jae
mov
adc
push
stos
jns
xchg
loope
out
aad
movsb
mov
rcrw
push
xchg
and
dec
sbb
cmp
jge
test
mov
lret
adc
and
imul
mov
jne
rcr
sub
cmp
pop
sub
test
jge
and
or
jmp
mov
jl
sbb
popa
cmpsb
inc
pop
movsl
cld
ret
pop
xchg
pop
shll
push
jg
xorl
xor
fcmovne
leave
cltd
sub
stos
or
fstl
lock
out
cmp
pop
mov
enter
add
mov
xchg
outsb
pop
fidivl
mov
cmp
iret
aad
sub
into
dec
test
scas
les
js
pushf
adc
xor
pop
sbb
ljmp
jmp
mov
mov
and
push
out
push
mov
add
rol
scas
shlb
shll
hlt
or
mov
mov
ror
and
sbb
mov
add
out
mov
dec
and
mov
cmpl
ret
xchg
aaa
sub
mov
jp
ss
adc
jp
pop
sub
arpl
das
fnsave
mov
mov
xor
xchg
jle
shlb
enter
xor
cwtl
repz
cmp
xor
loop
dec
xchg
jbe
or
jecxz
imul
lods
jge
jne
jle
or
mov
mov
pop
lock
jl
mov
daa
push
pop
inc
lcall
outsb
or
loope
movsl
bound
mov
inc
out
test
ficoml
pop
ja
stos
mov
pop
xchg
pop
lcall
cld
decb
aas
xor
shl
adc
loopne
fnsave
dec
mov
mov
push
test
mov
lds
adc
lret
cld
push
movsb
xchg
mov
int
aad
pop
mov
and
aad
cmp
mov
sub
push
pushf
fidivl
ds
or
and
xor
or
mov
insl
imul
jp
mov
jp
mov
out
push
and
inc
inc
js
jbe
ror
test
ret
mov
aas
gs
sbb
push
cmp
stos
mov
pop
or
push
jecxz
jge
xlat
pusha
das
xchg
cld
sub
mov
imull
sub
xchg
xchg
cmpsb
pushf
fiadds
or
xchg
adc
inc
sub
lcall
out
mov
aad
add
xor
push
lea
cmp
xchg
icebp
sub
subb
jle
pusha
jmp
ret
push
fldt
push
outsb
dec
faddp
sub
pop
mov
and
cli
xchg
dec
std
fildll
or
and
mov
mov
in
cmp
sub
xor
lcall
and
xor
fcoms
xor
add
out
aaa
arpl
mov
sbb
xor
jnp
mov
aaa
pop
cmp
sbbl
adc
cmc
and
pop
iret
stc
sahf
roll
sbb
out
loopne
and
xor
gs
adc
test
or
adc
pop
ds
jb
push
sub
ljmp
sub
dec
pop
mov
fistl
insb
pop
pop
outsl
fbld
mov
push
jae
andb
stc
outsl
fidivrs
stos
lds
in
cwtl
cltd
dec
fwait
in
lret
cmpsb
rcl
idivb
insb
add
mov
stos
repnz
into
loop
xchg
lods
insb
dec
fsubrs
sbb
pop
test
sbb
stc
dec
lds
mov
jbe
shlb
daa
mov
nop/reserved
aaa
mov
sahf
xchg
pushf
jo
rcll
adc
jns
orl
dec
enter
je
hlt
lock
push
fwait
push
fisubrl
imul
movsl
icebp
mov
idivl
aaa
jae
jbe
stc
lods
sub
and
popf
mov
xchg
fcoml
sub
adc
leave
sbb
aas
sbb
add
call
scas
sub
out
lods
rcrb
pusha
sub
push
fdivr
sbb
outsl
cli
mov
sarb
cmpsl
or
xchg
xchg
mov
mov
outsb
or
dec
out
cmpsb
mov
push
pop
inc
adc
fidivl
add
pop
cmp
mov
sub
fsubr
or
pop
adc
fisubrl
mov
daa
imul
jb
inc
xchg
xchg
outsl
cld
nop
int
es
outsb
pop
push
cmp
push
inc
mov
jmp
cmp
ja
ljmp
xchg
xlat
mov
sti
jo
and
in
out
out
push
ljmp
mov
pop
pushf
add
insb
push
inc
push
shrb
inc
mov
rol
out
outsb
and
pop
loope
dec
sahf
lret
fistl
aaa
or
call
jecxz
repnz
mov
sub
in
xor
stc
mov
adcb
int
mov
sbb
addr16
adc
xor
enter
push
sub
jg
cmpsl
in
pop
rolb
push
cld
sub
arpl
dec
mov
push
jbe
aad
xchg
xor
mov
push
inc
repnz
xor
push
pop
or
call
push
sbb
cmc
jmp
je
sbb
fidivs
jo
ja
incb
mov
je
mov
mov
jge
leave
cwtl
sub
sbb
pop
mov
add
xor
xlat
lret
iret
cld
pushf
insb
jb
call
pop
cmpl
sbb
mov
mov
cmp
and
lods
and
xor
mov
jo
and
mov
xchg
filds
jmp
mov
sbb
lret
test
push
imull
imul
sbb
shl
add
xor
pop
int3
ss
add
jp
arpl
shl
or
movsl
pop
nop
nop
and
xchg
adc
jecxz
pop
push
cwtl
mull
fnstenv
jle
cmp
push
sub
in
into
push
aad
out
lds
push
mov
push
mov
or
inc
fidivl
cmc
mov
mov
or
popf
mov
lods
sti
call
mov
repz
inc
lods
sbb
dec
je
arpl
xor
in
movsl
in
add
and
inc
outsl
push
pop
sub
jne
mov
ja
sbb
outsb
inc
aam
addb
xchg
jmp
enter
inc
mov
mov
cs
adc
xchg
pop
jbe
or
nop
das
and
stc
int
push
push
and
fistps
sbb
fucom
imul
sub
test
mov
mov
movsb
adc
js
nop
jae
in
cmc
out
mov
lods
or
xchg
sub
repz
into
mov
and
hlt
in
push
sbb
fwait
sbb
or
xor
cmp
ret
mov
fdiv
push
mov
bound
testl
cli
push
push
inc
sahf
outsl
les
xchg
into
dec
mov
aad
pop
cmpsl
in
aas
addr16
arpl
cmp
fwait
addr16
rcrl
ret
cwtl
leave
fdivl
mov
mov
cmpsl
cmp
add
xchg
jno
mov
cmp
adc
sub
testl
nop
mov
stos
xlat
add
stc
xchg
in
test
pushf
dec
movsl
hlt
jbe
xchg
xchg
adc
imul
adc
xor
popf
lret
sub
das
mov
mov
stos
js
xchg
pop
in
push
out
popf
push
mov
pop
sub
add
xchg
and
ret
dec
push
ret
loope
inc
and
iret
lock
or
mov
cmp
cld
lret
sub
cld
cmp
call
test
rcr
out
dec
jl
mov
lahf
mov
lcall
cs
inc
hlt
cli
aas
cmp
aam
xchg
test
jno
cmove
mov
fimuls
popf
cmp
loope
mov
test
popa
aas
adc
icebp
push
add
arpl
out
push
leave
cld
xchg
insb
into
imul
mov
push
mov
lods
ficoms
and
and
std
or
pusha
push
filds
add
loopne
dec
jae
fisttpll
outsl
in
bnd
testl
xor
add
shl
mov
adc
es
stc
aam
int3
jnp
add
pop
scas
pop
mov
int3
repz
mov
mov
daa
mov
xchg
mov
loope
fnstcw
mov
push
pushf
adc
sub
xor
xchg
xchg
stos
jns
push
adc
out
and
mov
les
cmp
mov
jb
insl
mov
hlt
push
push
fcmovnb
out
pop
sbb
out
pop
xchg
mov
push
mov
pop
lods
adc
pop
sbb
loope
xchg
rcrl
arpl
push
mov
jl
mov
addb
int3
push
test
lahf
mov
jno
es
xchg
outsb
push
in
inc
xor
dec
add
test
stc
ljmp
xchg
mov
inc
jae
push
fdivrl
adc
sbb
call
pop
push
popl
enter
jno
in
packsswb
push
fsub
push
jp
aad
xchg
dec
xchg
push
jbe
pop
ds
mov
sub
test
add
shll
jo
out
push
repnz
aaa
cmp
mov
std
mov
and
adc
loope
and
test
jno
pushf
sub
inc
or
push
dec
leave
and
cmp
mov
andl
popa
jbe
fldl
out
adc
dec
cmpsl
sahf
and
cltd
cmpsb
std
push
mov
adc
stos
rcr
pop
or
lret
adcl
js
ror
lret
add
ljmp
faddl
outsl
ljmp
int3
scas
rcr
pop
xor
pop
dec
jnp
pusha
cltd
and
push
and
sub
push
add
pusha
clc
in
push
je
sbb
rorl
push
add
les
int
fsubrp
add
xor
adc
and
mov
dec
ljmp
mov
divb
int3
test
cs
dec
xchg
in
aad
mov
int3
mov
push
inc
and
jne
cmp
cmpsb
jno
std
adc
and
test
sahf
pcmpeqw
jmp
sbb
push
add
push
mov
nop
clc
inc
xchg
addl
idivl
in
pop
stos
shll
mov
dec
cmp
cmpsl
mov
stos
outsl
mov
insb
in
cmpl
xchg
push
mov
insl
inc
pop
pop
mov
add
fdivrp
inc
fcmovnu
pusha
bound
out
aam
add
das
xor
adc
loope
movsl
push
jmp
fwait
or
sub
jne
ret
scas
mov
leave
cli
mov
push
dec
and
aam
out
repz
andb
fwait
mov
in
stos
fists
jecxz
mov
add
jne
outsl
imul
nop
mov
cmp
shll
and
imul
sub
cld
jle
push
fisttpll
rcl
fs
dec
xor
stc
loope
sbb
jae
icebp
push
xchg
cmpsb
jo
mov
inc
das
add
mov
in
mov
aaa
ds
jge
test
int
js
outsb
out
imul
orl
pop
inc
mov
scas
in
jmp
cli
xchg
dec
dec
mov
shlb
cmp
mov
mov
movsl
fmuls
jb
in
bound
incb
push
inc
jecxz
pushf
cmp
outsl
inc
iret
or
jnp
sub
pop
xchg
popa
mov
jae
es
es
cmp
fldenv
and
je
xchg
adc
lret
add
mov
das
dec
and
popf
jnp
cmp
lret
out
dec
mov
dec
in
cmpsb
sbb
push
lcall
cmpsb
pop
xchg
std
push
les
pop
xlat
lahf
out
and
or
scas
mov
test
push
lret
cltd
stos
push
cmpsb
outsb
sub
xor
xor
dec
loope
and
cmp
lcall
divb
xchg
lds
ds
dec
push
mov
test
mov
hlt
and
sbb
cltd
cmp
mov
pop
cmp
daa
cmpsl
jns
lock
cmp
push
adc
jp
aam
mov
inc
jmp
mov
decl
fcomp
test
movsb
js
pusha
xor
pop
enter
cs
push
jno
out
sbb
aam
inc
xor
pop
ljmp
pop
aad
sub
lods
fstl
loop
pushl
sbb
pop
ffreep
dec
loope
xchg
push
sete
push
jnp
rorb
inc
or
xor
or
adc
jne
inc
pop
mov
ret
sti
sbb
cmpsb
test
pop
mov
in
jp
cmp
outsb
xchg
cld
xchg
xchg
ds
test
sarl
sub
movsb
inc
or
add
xor
mov
inc
dec
pop
lret
xchg
jae
repnz
inc
sbb
js
ds
inc
and
or
adc
xchg
inc
mov
and
fists
cmc
jle
in
dec
push
insl
leave
lock
ret
inc
nop
fsubr
add
dec
mov
cmc
push
add
jo
adc
out
mov
not
iret
inc
in
cli
push
sub
adc
mov
fcmovne
or
jbe
dec
into
setae
sbb
cmp
es
pushf
mov
and
sbbb
mov
mov
test
mov
mov
popa
pushf
push
inc
out
sbb
iret
mov
dec
cmc
loope
scas
js
pop
popf
rcll
aam
stos
mov
mov
add
in
jno
push
stc
pop
sarb
and
inc
sub
les
cmpsb
mov
pusha
stos
mov
lods
xor
sahf
rcll
mov
xor
xor
and
test
jb
lds
mov
and
cltd
sahf
inc
test
ret
nop
and
push
arpl
sub
push
mov
mov
adcb
jmp
pop
lret
jo
dec
mov
xchg
aas
xchg
test
jbe
dec
xor
jbe
or
lret
and
test
push
les
pop
cmp
orb
add
xchg
adc
mov
inc
lods
fistpl
cmp
dec
loopne
les
scas
imul
iret
pop
mov
insl
testb
std
pop
add
mov
repnz
fstps
inc
adcl
std
nop
mov
sti
push
data16
nop
push
aad
outsl
mov
inc
inc
sbb
stos
pop
inc
mov
xchg
mov
or
xchg
rcll
mov
imul
inc
sbb
cmpb
inc
ret
repz
outsl
gs
cmp
sti
cld
enter
and
sbb
jmp
idivl
mov
imul
jge
sub
insl
ja
jno
out
rcll
jno,pn
in
jne
out
lahf
lock
jno
mov
lret
xor
cmpb
shlb
popl
repnz
ss
mov
or
clc
lds
inc
sbbb
fnsave
stc
add
cld
loope
daa
xchg
jb
dec
or
push
add
dec
add
rclb
loope
inc
icebp
aad
dec
arpl
push
xor
sub
pop
mov
cld
pop
adc
add
pop
lret
adc
lahf
xorl
push
pop
cwtl
xchg
cmp
movsb
arpl
jl
rcrl
mov
mov
in
loop
loope
rclb
stos
cmp
iret
cmp
jle
stos
jnp
adc
or
push
loopne
mov
push
test
mov
adc
test
ljmp
int3
rcll
test
jne
dec
fistpll
int
iret
sub
in
loopne
jl
xchg
sub
imul
jo
mov
adc
fwait
bound
outsb
push
dec
int
into
pop
cmp
sub
sbb
jbe
mov
xor
cmp
orb
data16
inc
in
mulb
lahf
or
pop
cmp
mov
mov
hlt
test
ror
jne
sbb
dec
sbbl
inc
test
ud0
sahf
mov
out
mov
mov
fildl
mov
fstpt
mov
pusha
xor
push
mov
addr16
lahf
test
or
push
cltd
in
xor
xchg
inc
mov
imul
cmp
mov
mov
call
sbb
aaa
hlt
cmp
push
incb
jns
pop
and
js
lea
inc
sbb
das
out
or
iret
add
jl
leave
mov
fsubrp
adc
inc
cs
sub
int3
xor
sarb
aaa
aad
into
jg
xchg
repnz
das
daa
je
mov
lret
mov
add
fadd
or
lret
mov
aam
repnz
fwait
mov
imul
lret
testb
pop
stos
xchg
sbb
dec
sub
pop
nop
lds
shll
xchg
pop
cmp
pop
mov
mulb
add
xchg
push
nop
jg
pop
scas
jnp
dec
popf
andb
lret
call
add
jns
pop
sub
stc
mov
les
bound
ja
xchg
loopne
outsl
sub
xchg
pop
adc
fldenv
data16
out
in
outsl
inc
sahf
not
test
fmulp
jg
adcb
pop
mov
dec
daa
dec
outsb
jmp
and
sub
jb
cmc
cmp
push
rolb
test
push
test
decb
and
mov
test
sbb
cwtl
push
and
in
push
fildll
jecxz
jle
aaa
sbb
cwtl
dec
jae
cmp
lds
cmp
inc
movsb
inc
mov
add
mov
xor
and
mov
xchg
and
xchg
shll
jo
pop
push
lcall
mov
jp
out
cmp
insb
sbb
jge
and
adc
scas
sub
sbb
mov
pop
addr16
sbb
fists
rcl
js
push
shlb
jno
adc
loop
test
adc
es
xor
jl
cmp
movsb
adc
imul
or
in
ja
out
out
push
xchg
sar
lods
mov
outsl
lret
ljmp
jne
jo
push
adc
xchg
pop
pop
ljmp
add
js
mov
lods
dec
mov
dec
insl
loop
jns
sti
into
xor
jae
mov
pop
adc
dec
add
mov
lds
das
clc
push
es
std
popf
movsb
add
push
pop
cli
outsb
mov
jne
jne
xchg
jb
and
idivl
mov
push
fs
mov
in
ljmp
out
in
sub
xchg
pop
and
popl
xchg
inc
sar
mov
add
out
push
inc
mov
jmp
mov
jbe
into
push
add
jae
xchg
and
pop
or
jno
sub
jge
insl
sub
jo
shlb
lods
aas
add
les
incb
lds
cmpsl
lret
or
xchg
lret
pop
js
jb
mov
ret
mov
cmp
xchg
xor
mov
xor
pop
ja
jnp
out
sahf
sarb
lods
in
bound
push
add
xchg
mov
or
call
in
push
sbb
sahf
pop
js
addr16
pop
icebp
xchg
sub
cmp
jns
cs
rcrl
pop
mov
pop
popa
and
pop
or
mov
sbb
inc
push
rclb
dec
pop
xchg
push
call
xchg
lods
fwait
add
pop
fcomps
jg
out
jnp
xor
add
dec
sub
xchg
mov
loopne
cld
repnz
sbb
and
jne
xor
das
mov
push
xchg
rclb
add
stos
dec
testb
pop
cmc
mov
mov
mov
andl
pop
dec
cmc
mov
mov
repnz
xor
mov
ret
sti
ljmp
das
jo
inc
sub
popa
imul
aam
adc
fldcw
jmp
test
mov
mov
jns
push
jbe
xor
jnp
js
xchg
cld
mov
sub
and
mov
mov
pop
andb
jo
test
aad
imul
pop
pop
dec
rcr
in
jge
mov
sub
lds
iret
pop
hlt
cmpsb
fdivl
xor
xor
push
stc
dec
inc
and
ljmp
push
mov
xor
pop
fwait
mov
push
ret
sbb
fists
cmp
push
movb
les
or
inc
std
cltd
mov
out
incl
sarl
mov
push
insl
aas
dec
jo
dec
fdivrl
decl
mov
outsb
loop
scas
xor
or
mov
mov
mov
ret
mov
dec
mov
lods
rcl
cmp
test
out
arpl
xchg
dec
shlb
sbb
jnp
xchg
cli
imul
jge
cmc
pop
in
mov
mov
aaa
sub
outsb
andb
push
repnz
jb
ljmp
and
sbb
arpl
je
mov
adc
xchg
or
insl
sub
xor
int
add
xor
xchg
xor
and
sbb
mov
push
jp
xchg
and
pop
int3
or
cmp
jnp
lret
mov
cmc
and
mov
icebp
imul
inc
out
cli
stc
int3
push
rcr
int3
cmp
lock
std
cmp
or
or
push
neg
and
daa
push
sub
int3
outsb
xor
je
call
jg
dec
cmpsb
mov
xor
cmp
fcoms
pop
jnp
das
cmp
mov
dec
loope
mov
adc
pop
lods
test
mov
pop
jp
hlt
cmp
mov
cmp
sub
pop
mov
jne
sub
inc
sub
xchg
adc
repz
pop
lahf
in
sti
scas
nop
mov
fiaddl
inc
sbb
int3
lret
popl
mov
into
mov
xlat
mov
inc
xchg
lods
pop
and
test
aam
decl
fs
adc
jb
dec
mov
sub
or
test
cld
aam
or
xor
jb
xchg
add
icebp
popf
pop
ljmp
pop
and
int
aaa
add
ss
dec
xchg
xchg
lds
cmc
cltd
lret
sarl
lods
icebp
mov
fidivl
ror
push
test
push
mov
sub
fdivs
xchg
inc
ret
cmp
or
mov
inc
aaa
cmp
add
clc
mov
push
pop
add
dec
xchg
enter
mov
test
xor
ror
loop
inc
sub
mov
xchg
mov
pop
or
dec
in
or
test
imul
or
or
xchg
xor
dec
add
jo
xchg
jnp
subl
jecxz
jmp
dec
mov
ret
arpl
sub
pop
nop
xchg
lods
pop
adc
sub
pinsrw
aam
data16
pop
loope
push
in
scas
es
dec
or
ret
and
mov
inc
daa
lcall
movsb
leave
lret
push
mov
mov
fsubl
push
cmpsb
dec
adc
mov
in
repnz
push
dec
mov
js
in
lods
mov
adc
mov
fists
daa
adc
je
dec
mov
add
xor
js
cmp
cltd
pusha
push
rorb
dec
and
push
lods
dec
movsl
mov
jmp
push
mov
and
adc
dec
cmc
cwtl
test
mov
sub
and
xchg
das
ljmp
add
fwait
sbb
test
jnp
adc
inc
sbb
testb
stc
mov
mov
jge
fdivrl
jmp
inc
popf
add
stos
in
lahf
dec
js
out
adc
cmp
mov
xlat
imul
fwait
sbb
push
jbe
push
pusha
pusha
jo
ds
ret
push
in
pop
cmp
scas
or
test
or
lods
outsb
xchg
gs
incl
xchg
xor
negl
dec
mov
and
daa
jecxz
mov
stos
push
mov
cmp
js
call
orb
xchg
sub
mov
out
xchg
clc
xchg
add
es
dec
xor
in
pop
push
or
mov
ljmp
xor
popa
inc
mov
sub
jno
test
inc
test
jnp
push
shl
cltd
jl
dec
push
orb
test
outsb
and
lret
xor
and
out
shrl
cli
or
xor
push
cmp
scas
aas
jge
loopne
jmp
pushf
adc
or
std
mov
mov
dec
mov
dec
cmp
cmp
or
sub
dec
xchg
adc
xor
push
fadds
call
je
cmpl
aaa
in
cmp
xchg
push
dec
jecxz
cld
push
sbb
test
add
faddl
adc
or
movsl
add
push
icebp
inc
cltd
movsb
scas
popl
cltd
aad
mov
popf
cvtps2pd
in
ret
aam
test
outsl
pop
mov
mov
xor
imull
inc
les
movsl
xor
xchg
push
xor
sbb
xorl
fstpt
rol
aas
inc
popa
fisubrs
lea
sub
ret
jle
and
xchg
loopne
jns
xor
push
adc
or
mov
mov
test
pop
je
andb
inc
test
into
adc
arpl
and
stos
add
mov
or
cmpsb
fucom
mov
mov
mov
ficoml
jbe
clc
xchg
pop
jbe
fmuls
push
icebp
aam
add
aad
or
cmpsl
lock
mov
sub
lds
sub
push
jnp
roll
fcmovbe
loope
mov
mov
mov
and
dec
push
add
addr16
cmp
daa
sbb
or
lret
andl
inc
inc
shrb
fwait
rorb
push
push
mov
into
lret
aaa
call
add
sbb
mov
sub
dec
enter
je
pusha
rcll
pop
and
lock
adc
mov
mov
int
rclb
ja
jo
mov
enter
sbb
stos
sbb
test
dec
pop
add
sub
or
dec
xchg
scas
int3
int
cmp
in
repnz
push
lods
das
jne
arpl
mov
dec
ja
jbe
jb
int3
in
sub
cmp
repnz
pop
xor
push
xchg
orb
inc
sbb
call
and
mov
shr
xchg
fs
and
mov
xchg
dec
ret
int3
es
ret
inc
out
testb
inc
daa
gs
sub
sbbb
das
out
jg
sbb
cmc
test
cltd
pop
repnz
jecxz
jl
xor
mov
loop
iret
adc
cmp
jno
jnp
push
mov
and
push
cmp
jo
out
popa
jge
mov
mull
ds
ja
jl
mov
sub
mov
jo
int3
cmp
lret
cmp
xlat
test
das
out
and
in
ror
dec
xor
mov
or
popa
cmp
mov
enter
inc
sub
xlat
in
mov
add
mov
jmp
ret
dec
into
das
pop
adc
scas
lret
mov
and
jle
pop
add
xchg
push
lahf
fnstsw
fiaddl
lods
and
sar
mov
sbb
xor
pop
jl
mov
loope
dec
hlt
xlat
sbb
lods
push
enter
jmp
mov
xchg
cmc
and
loopne
dec
pop
or
popa
mov
add
jg
mov
add
xor
lds
scas
sbb
sbb
xlat
out
mov
xchg
and
mov
bound
les
dec
lods
push
pop
scas
xor
pushf
adc
push
test
push
or
push
loope
inc
stos
xor
sar
mov
out
mov
add
testl
add
repz
dec
jne
loope
and
cmp
rclb
outsl
push
fstp
pop
sbbb
push
pop
jno
or
mov
ljmp
and
sahf
dec
arpl
and
repnz
add
cmc
push
sub
cmc
or
sub
mov
out
fnstenv
or
pop
xor
in
add
jb
push
xlat
aad
std
sub
arpl
and
xchg
push
mov
rcll
cltd
mov
mov
mov
mov
rcll
xchg
xor
mov
xchg
pop
inc
mov
pop
leave
inc
add
push
jo
leave
push
pop
mov
mov
adc
out
pop
fisubrs
dec
shlb
sbbb
push
lock
mov
xor
outsb
inc
and
movsb
dec
jp
aam
test
jmp
sub
lea
jb
ret
mov
cmc
clc
in
out
push
mov
push
mov
sbb
jp
std
push
dec
add
sbb
xor
shl
inc
ret
dec
pop
inc
xchg
and
cs
ret
and
and
iret
adc
sbb
loop
push
jle
jle
dec
les
sbb
mov
lret
dec
jg
xchg
pop
push
jmp
jmp
inc
sbbb
push
xchg
mov
shlb
fstpl
shll
sub
out
lods
in
rcll
add
int
mov
mov
fsubrl
cltd
and
pop
dec
fisubs
call
mov
ja
lods
loop
mov
movsb
xlat
xchg
lahf
aam
pop
es
mov
aad
mov
jl
push
pop
push
lea
pushf
imulb
test
cld
imul
cwtl
fnsave
sti
push
jno
out
test
hlt
aam
mov
nop
add
add
mov
and
mov
or
and
mov
das
in
ds
sbb
shlb
mov
mov
sti
inc
call
bound
popf
sub
mov
mov
in
test
daa
mov
sahf
add
arpl
scas
movsl
sub
inc
lret
ret
divl
mov
xor
or
out
andl
daa
dec
ljmp
cmp
mov
filds
sbbl
aam
jae
jae
adc
pop
ret
push
lds
test
jns
cltd
cmpb
ja
call
push
int
pop
lea
pop
stos
pop
in
lods
jb
xchg
mov
xchg
mov
xchg
cs
clc
or
jbe
push
mov
sahf
add
aaa
and
jg
lds
jo
xor
lret
jnp
push
mov
out
clc
cmc
inc
mov
xlat
sbb
inc
sub
or
push
adc
mov
fwait
jp
movb
js
and
jnp
jno
sub
notb
pop
jmp
ss
lahf
ret
mov
fldenv
xor
mov
adc
scas
xorl
adc
test
and
jl
xor
popl
out
in
xor
push
cmpsb
stos
aam
vmovd
imul
mov
sbbb
cmp
xor
mov
push
gs
pop
dec
fs
fdiv
stc
pushf
jnp
or
arpl
jae
scas
jle
adc
xchg
aaa
jb
test
jmp
inc
test
mov
sub
ja
adc
jmp
or
ljmp
dec
jae
pop
sub
movsl
fdivs
roll
loopne
pop
push
push
cli
ss
aam
push
adcl
sub
loop
pop
loop
pop
fbld
dec
or
sahf
sti
lods
in
jae
and
loop
xor
mov
sahf
cmpsb
pop
out
sbbl
ret
jae
push
jp
test
push
sbb
popf
push
ja
rcl
fistps
rcr
mov
fldt
inc
adc
rcr
int3
int
xchg
or
and
fwait
in
push
and
inc
push
or
xchg
imul
jb
jo
adc
pop
test
mov
enter
loop
inc
cmp
sub
outsb
mov
test
out
cmpsb
call
dec
int3
clc
negb
dec
daa
xchg
adc
lret
push
mov
mov
dec
jo
es
jno
xor
rorl
mov
and
adc
popl
jge
xchg
add
xor
and
xchg
push
push
jns
and
push
cmp
sahf
xor
jl
or
jle,pn
andl
mov
dec
mov
push
mov
jle
mov
cltd
daa
sub
cwtl
les
cmp
cmpsl
xor
icebp
out
adc
dec
cmp
data16
idiv
inc
sbb
push
and
lds
andl
testb
and
cs
out
xchg
push
aaa
adc
cmp
addb
stc
push
fisubrl
pop
fldl
inc
cmp
fimuls
scas
mov
pop
mov
fsts
outsl
sbb
out
push
mov
push
adc
ss
or
cltd
je
inc
repz
xor
and
add
push
movsb
and
push
inc
imul
sbb
lret
jo
ret
cmc
pop
push
adc
add
push
lret
push
jg
push
push
or
xchg
xor
sub
push
push
shr
jp
test
adc
in
sub
fistps
jmp
aad
pop
mov
push
mov
adc
adc
xor
jmp
lds
out
fmull
imul
mov
movsl
lea
or
test
mov
push
push
push
adc
adc
stos
pop
push
jp
addb
sti
ret
jo
sbb
leave
aas
sbb
push
outsl
sub
adc
xchg
xor
nop
sub
inc
cmpb
pop
cltd
mov
mov
jl
int
xorb
enter
aas
sti
push
lods
sbb
movsb
xchg
inc
stos
fisttpl
lcall
push
sub
repz
leave
xchg
push
into
add
sub
imul
mov
mov
push
test
in
addr16
xchg
or
cmpb
lcall
lcall
xchg
dec
pushf
mov
dec
loope
insb
loope
push
jmp
addl
push
int3
mov
insl
rcll
cmc
and
inc
xor
sahf
xchg
jae
in
xchg
and
fistpll
xorl
sar
repz
pop
or
fistpl
pop
cmp
mov
bound
arpl
pop
lret
shl
adc
or
clc
mov
decl
clc
pop
or
xor
sub
js
xchg
and
fs
mov
cs
xor
adcl
xlat
mov
xchg
add
cs
push
pop
jnp
pop
mov
aam
sti
xchg
sarb
pop
aad
ss
popa
sahf
mov
mov
pop
aaa
mov
push
or
lea
arpl
push
jo
sub
sbb
mov
xlat
mov
sub
mov
loop
repz
lcall
inc
sub
insb
jge
adc
in
dec
sarl
mov
fsts
dec
iret
mov
mov
int
sub
inc
add
push
repnz
cmp
stos
in
repz
shlb
popf
stos
sbb
stos
dec
pop
pop
sub
in
les
testl
testl
scas
xlat
repnz
insb
jno
ret
testb
out
jno
aam
call
xor
dec
dec
xacquire
mov
testb
outsl
je
cmp
adc
xor
popf
in
inc
add
neg
sti
fistl
stc
lea
in
inc
adc
das
adc
mov
mov
cmp
es
ja
popf
cmp
jno
movsb
rcl
add
jge
or
rol
aaa
push
dec
fisttps
cmp
cmpsl
inc
mov
mov
or
mov
and
adc
mov
adc
fldl
insb
mov
test
push
aad
sub
pushf
xchg
ret
stos
mov
inc
in
jns
lea
fcompl
dec
adc
ret
sti
sub
mov
or
or
jge
jno
lret
cmp
std
ss
stc
add
js
popf
add
mov
jae
out
cwtl
inc
ds
sub
imul
push
inc
test
push
lods
scas
out
rorl
sub
xchg
je
pusha
into
inc
pop
dec
and
dec
mov
mov
jmp
and
movsl
inc
jbe
movl
rorl
sub
inc
cli
gs
mov
sub
dec
sahf
icebp
sbb
ja
je
dec
add
inc
ret
xor
int
xchg
icebp
lahf
pop
out
pop
mov
insl
popa
sub
out
or
xchg
and
or
jae
adc
test
in
mov
sub
loop
jle
mov
lock
jne
mov
pop
push
jmp
mov
mov
xchg
daa
into
xor
popa
bound
dec
jbe
in
pusha
push
pop
mov
fnstenv
lcall
or
jne
sahf
ficompl
ljmp
adc
inc
xor
das
xchg
lock
insl
sbb
lea
mov
loope
jp
stos
das
jg
cwtl
adc
aad
jge
mov
int3
xor
movsl
arpl
jle
hlt
out
ret
xor
and
call
cmp
popa
dec
adc
test
xor
les
iret
sbb
out
in
cmp
adc
mov
insb
jl
cmp
fsubr
push
data16
in
hlt
add
sub
fistl
lods
aam
mov
sbb
ss
xchg
call
push
inc
lret
fcomps
jbe
sub
fsubrs
xchg
sub
xchg
mov
push
cmc
push
jg
aam
ja
mov
mulb
std
movsl
sbb
pop
pop
shlb
subl
out
stc
pop
sub
sbb
cmpsl
test
data16
rorl
pop
rcrb
ja
lods
sub
ret
stc
icebp
sahf
mov
dec
jb
shll
add
sbb
mov
push
cmp
scas
push
dec
fistpll
lret
shl
push
lods
insb
adc
jl
and
adc
adc
mov
push
cmp
rcrl
movsl
hlt
lret
fldenv
hlt
movsb
xor
sar
in
fldl
lcall
dec
std
mov
sarb
test
shrl
and
and
nop
cmp
js
and
mov
sub
imul
sub
jmp
cs
dec
jnp
xchg
call
xorl
and
cmp
lcall
pushf
jmp
movntq
call
cld
or
not
pushl
xor
jmp
fmuls
xor
xchg
push
shrb
xor
dec
mov
pop
mov
shr
jb
pop
outsb
dec
jne
lock
mov
add
mov
sbbl
sub
push
in
sahf
xchg
jo
fs
inc
ja
cmp
xchg
int
dec
mov
fucompp
jmp
sub
xlat
mov
cs
xchg
push
insb
clc
push
push
out
cmc
xchg
hlt
jae
ret
dec
leave
inc
sahf
xchg
lahf
cmp
pop
sbb
enter
or
mov
push
jmp
add
in
sbb
icebp
cmp
clc
push
cmpsl
sbb
mov
inc
fcomps
cmp
out
mov
daa
xchg
or
pusha
push
mov
loopne
je
scas
lock
xor
mov
ficomps
test
mov
xor
adc
or
popa
xlat
push
and
mov
pop
lods
leave
push
arpl
leave
movl
or
mov
push
dec
add
xor
pop
rorl
hlt
xlat
push
mov
loope
dec
addl
mov
sub
clc
and
push
push
push
cmp
add
jmp
mov
shrb
mov
imul
addl
or
xchg
pop
in
jecxz
clc
cmp
lods
jbe
nop
ret
inc
and
scas
push
pop
nop
fstps
ficoms
cmc
push
nop
stc
enter
rcll
mov
lods
cli
pop
shll
jge
push
mov
cmp
sub
sub
cltd
add
jb
fdivs
xor
imull
aaa
ficoms
push
dec
sub
xchg
jnp
pop
adc
sbb
cwtl
outsb
imul
movsl
data16
fildll
outsb
push
fistl
mov
xchg
push
xor
mov
sub
pop
jbe
mov
cs
mov
and
test
xchg
pop
push
pop
out
mov
sbb
lods
sub
mov
pop
roll
jmp
lods
push
sbb
test
cmp
shrb
mov
adc
loop
adc
pushw
cmp
xor
pop
jl
mov
test
adc
pop
add
cmovnp
cmpsb
fbstp
mov
scas
loop
enter
jo
in
out
adc
sbbl
pop
mov
cmpb
xchg
out
mov
adc
cmc
sub
dec
rcrl
xchg
sub
pop
out
ss
cmp
push
shll
xchg
mov
push
aas
cmpsl
and
pop
xlat
imul
shrl
sti
mov
fidivl
jnp
sbb
jbe
roll
pop
and
bound
ret
int3
int
mov
adc
sbb
xchg
js
adc
push
shl
insl
repnz
repz
sub
adc
lock
enter
rol
mov
add
pop
insl
jp
dec
jge
or
call
in
and
pop
inc
cmc
mov
cmp
mov
int3
test
jns
inc
mov
fadds
jle
add
test
mov
xlat
lea
and
pop
das
push
int
xchg
dec
fsubrl
mov
repz
lea
nop
mov
mov
dec
pushf
sbb
imul
test
rclb
inc
fists
ds
jp
decb
addr16
push
dec
outsl
ret
test
lods
jnp
in
xchg
es
cwtl
sub
into
cwtl
xchg
mov
sahf
sub
and
inc
test
jecxz
cltd
testb
pop
subb
adc
jno
mov
xor
pop
aad
cwtl
arpl
aam
lods
push
ret
jno
icebp
test
stos
in
xor
popf
loope
ss
aad
jbe
or
jmp
in
adc
cmp
and
adc
dec
inc
cmpsl
jmp
xchg
jno
mov
add
leave
cmp
dec
mov
jge
xlat
addr16
sbb
or
inc
push
jecxz
rolb
push
daa
sbb
sbb
mov
fcmovnbe
adc
imul
in
adc
insl
and
mov
sti
imul
ja
xor
ret
mov
push
cmp
jle
icebp
xchg
mov
mov
sbbl
lock
xor
popf
rolb
add
mov
pop
or
jg
imul
loopne
jb
mov
cli
test
setno
in
mov
out
push
jbe
aad
icebp
in
shrb
lahf
pop
lods
jne
jb
rcl
mov
cmp
mov
pop
xchg
pop
stos
pushf
repnz
jo
mov
push
outsl
icebp
adc
push
lea
ret
xchg
fidivs
orl
mov
rcrb
fmuls
cmp
sbb
pop
inc
mov
sub
movsl
lcall
shlb
or
sbb
jo
sahf
lea
mov
jecxz
out
shll
test
pusha
fwait
dec
jmp
nop
jnp
jg
mov
push
jne
cld
je
pop
or
insb
cmp
and
pop
inc
push
jae
inc
fcmovnbe
xchg
cld
lcall
cmp
test
or
mov
or
adc
cmp
mov
mov
hlt
mov
pop
ret
addl
std
sub
loop
sahf
xor
cwtl
adcb
push
xchg
lret
push
xor
inc
and
inc
call
mov
shll
lcall
cs
stc
rclb
push
cmc
je
stos
sbb
ret
add
dec
pushf
iret
xchg
and
mov
xor
push
push
sbb
or
jmp
inc
in
or
adc
xchg
xchg
pop
mov
or
scas
dec
mov
push
ljmp
jae
cmc
test
les
std
mov
xorl
test
insb
jmp
mov
jg
loopne
cwtl
add
pop
dec
jle
adc
push
jle
dec
and
sahf
js
inc
and
dec
movsl
popa
fwait
or
mov
gs
or
inc
jns
sahf
mov
push
clc
fbld
nop
scas
ljmp
mov
loope
scas
insl
imul
cmp
into
subb
clc
lcall
sbb
int
mov
xor
out
inc
jae
lods
sbb
popa
pop
in
lahf
stos
cmp
subl
mov
xchg
inc
sub
test
mov
out
inc
out
and
int3
iret
repnz
mov
daa
jge
dec
mov
outsl
jnp
repnz
fnstcw
dec
movb
das
scas
addr16
mov
mov
cmp
aas
mov
cltd
sahf
pop
in
sub
iret
rclb
push
mov
or
insb
aas
cmp
push
dec
inc
push
call
imul
lcall
cmp
sub
mov
mov
mov
pop
add
adc
ret
stc
fstps
sarl
adc
mov
sbbl
bnd
lret
ror
jnp
inc
ljmp
inc
stos
fbld
fidivrs
mov
cmp
int3
daa
inc
scas
xor
sbb
dec
mov
dec
xchg
push
in
xchg
or
es
js
pop
into
daa
ss
imul
push
lret
sub
cwtl
aas
roll
cmp
add
call
and
xor
xchg
and
sbb
hlt
mov
adc
mov
xor
jmp
pop
ret
xorl
and
mov
adc
movsb
mov
test
in
sbb
pop
lret
xor
pop
pop
mov
mov
cs
cmp
les
cli
daa
and
xchg
xchg
movsl
les
pop
loope
nop
dec
cltd
in
aas
cs
adc
jnp
mov
push
lods
xor
pusha
inc
stos
repz
jmp
aaa
aaa
push
mov
andb
ficomps
xchg
imul
push
ror
cmp
sbb
inc
mov
mov
mov
jge
mov
push
xchg
or
cmp
xor
jg
into
push
pop
movsb
or
lret
sub
stc
jge
jg
in
lcall
dec
or
pusha
loope
jg
cld
out
mov
xchg
jmp
xor
jbe
pop
arpl
cmp
bound
rorb
sbb
testl
jecxz,pt
sbb
hlt
orl
pop
mov
std
cmpsl
sahf
mov
test
psubb
dec
mov
pushf
bnd
mov
xor
sub
pop
or
test
call
cmp
mov
loop
insl
and
movsb
push
lcall
les
push
cli
sbb
xor
sbb
push
xchg
aam
fistps
dec
rol
xor
movsb
dec
lods
xor
int
das
add
fxch
lcall
dec
mov
mov
add
mov
andb
mov
and
dec
push
movsb
pop
push
xor
test
pop
adc
mov
sbb
lds
sbb
fucomip
rcrl
rcrb
xchg
lret
pop
negb
lret
xchg
mov
inc
xchg
pop
fnsave
leave
mov
inc
outsl
fs
hlt
xchg
jno
adc
vmovddup
pop
loopne
jecxz
pop
out
out
sbb
push
adcb
js
mov
fs
outsb
push
mov
mov
shlb
lds
fwait
push
and
adc
jo
movsb
scas
mov
pop
and
adc
adcb
sti
cld
sbb
mov
jge
or
push
movsl
insb
scas
xor
or
jmp
xchg
scas
push
in
movsb
ljmp
fisttpll
pop
inc
outsb
enter
adc
mov
lret
hlt
dec
mov
pop
sbb
mov
movsl
xchg
jns
sub
add
sbb
std
dec
loope
xchg
clc
cmp
jns
mov
jge
and
cwtl
addl
add
rorb
into
and
imul
push
jns
imul
and
jbe
inc
mov
cltd
into
push
cmpsb
xor
xchg
inc
popf
inc
mov
pop
add
imul
aad
fs
fmull
pop
aam
adc
nop
or
jns
es
mov
xor
or
add
or
mov
adc
jl
adc
test
in
test
mov
jae
sub
addr16
pop
xchg
div
add
jp
jne
enter
out
dec
pop
stos
rcrl
insl
loop
jno
xchg
subl
int
or
push
les
cmp
jb
in
push
frstor
bound
jmp
call
pop
mov
mov
dec
pop
sub
jg
vfnmsubpd
sbb
jmp
pop
sub
mov
mov
xchg
xor
jb
and
negl
push
jp
stos
push
and
push
sbb
add
mov
js
xchg
push
cmpl
sti
mov
dec
frstpm(287
xchg
and
outsb
sbb
push
shll
xor
pop
cmp
add
push
or
push
and
dec
loopne
cs
mov
andl
sbb
xchg
pop
xor
std
arpl
shlb
sbb
pop
jbe
add
and
sub
inc
das
jecxz
pop
or
sahf
imul
gs
aam
xor
icebp
xor
inc
ljmp
pop
sub
ljmp
shl
dec
mov
push
stos
out
imulb
inc
xchg
xchg
add
loope
and
out
notl
mov
in
mov
mov
sbb
sahf
jle
dec
divl
mov
and
push
jne
in
mov
xor
cmpsb
ds
aad
jle
ret
mov
add
mov
lods
fisubrl
sti
les
mov
in
add
sub
push
addl
adc
ds
bound
shl
cltd
dec
and
and
inc
nop
popf
or
mov
mov
mov
loopne
and
mov
lock
imul
dec
outsb
test
std
mov
setl
pop
dec
enter
jae
mov
ljmp
aam
out
xchg
mov
jnp
call
xlat
jecxz
jae
aaa
fwait
std
into
arpl
inc
push
dec
ret
test
mov
sub
mov
leave
inc
push
push
cmp
mov
je
push
jp
out
inc
daa
adc
or
fsts
popl
cld
sub
or
jb
popf
ss
mov
and
js
push
nop
daa
test
and
lahf
xchg
cmc
dec
dec
shll
je
push
cmp
stc
movsl
jnp
mov
mov
sbb
call
xchg
dec
mov
fs
fxch
sysexit
pop
sbb
mov
mov
cld
les
cmp
cmp
ja
pusha
bound
sbb
in
mov
loopne
pop
adc
mov
dec
pop
mov
xchg
mov
inc
xchg
sbb
xchg
icebp
shll
add
pop
jo
nop
outsl
out
dec
cwtl
xchg
or
add
dec
es
insb
insb
mov
int
dec
scas
sub
inc
shlb
mov
fdivrs
or
mov
aam
and
movsl
ja
mov
stos
mov
aas
sub
and
pop
sbb
loop
hlt
mov
dec
popa
jecxz
inc
in
fwait
push
mov
push
in
mov
mov
hlt
sahf
lcall
cmpb
bound
movsb
push
cmp
shlb
add
ds
add
jno
aaa
scas
lret
pop
insb
ja
sarl
rolb
xchg
mov
ret
inc
in
out
and
mov
cmpsb
rorb
mov
inc
mov
dec
leave
inc
pop
pusha
test
xor
push
das
adc
xchg
push
inc
mov
lret
scas
fadds
js
mov
fs
pop
or
dec
add
out
and
inc
jl
xchg
daa
jle
insl
jl
pop
inc
in
sbb
jne
jp
ja
std
ret
or
icebp
dec
mov
xchg
fidivl
mov
mov
subl
mov
pop
cmpb
xor
in
mov
adc
fildl
jp
jle
out
add
ret
jo
lods
add
or
call
mov
hlt
jnp
out
inc
sub
dec
outsl
loope
adc
inc
das
xchg
and
aas
imull
out
shlb
fisubrl
dec
add
add
jno
mov
mov
cmp
fbstp
pop
jmp
cmp
sbb
lea
nop
lcall
cmpsl
jp
xchg
andb
mov
push
mov
dec
inc
shl
test
dec
int
sub
sbb
pop
sbb
lret
fs
mov
mov
inc
mov
bound
push
scas
cs
clc
xlat
lcall
dec
shr
xor
je
xor
repz
xor
pop
jl
dec
xor
aaa
aas
jle
add
inc
jne
and
orl
push
mov
fbld
dec
xor
call
daa
and
scas
decb
dec
sub
loopne
dec
int
mov
mov
inc
andl
repz
and
cmp
stos
push
mov
and
leave
sbb
sbb
push
stos
add
jle
xor
into
jnp
jbe
push
push
xor
inc
mul
push
xchg
fadd
xor
sbb
xchg
repnz
xor
in
repnz
cmp
negb
mov
xchg
dec
cmp
push
inc
cs
xor
loope
rcll
mov
mov
or
mov
mov
cmpb
mov
fisttpl
jne
fwait
insl
jo
push
mov
pop
jl
sub
push
push
jge
sub
jg
dec
sti
pop
xor
adc
xchg
fld
aam
mov
cmpsl
push
dec
loopne
cmp
aad
or
pop
clc
es
adc
mov
lcall
fwait
testl
jb
lcall
test
cmp
jl
xor
je
push
lock
aaa
sbb
pop
pop
push
inc
jge
jp
dec
sbb
into
pop
aam
hlt
sub
cmp
repz
pop
data16
pop
pop
mov
and
test
dec
cpuid
imul
xchg
dec
inc
push
pusha
ds
mov
stos
mov
or
lcall
push
enter
clc
scas
jnp
dec
mov
andl
adc
addl
sub
aad
ror
jno
ljmp
movsb
out
lods
add
fcomp
je
cli
call
in
xchg
mov
mov
pushl
sbb
xchg
int
xchg
jle
shll
mov
outsl
mov
mov
mov
aad
js
or
int
flds
ret
xor
jle
fs
loope
testb
or
dec
jg
jg
ficompl
mov
inc
push
mov
sub
add
push
into
mov
pop
mov
inc
icebp
fsts
push
sbb
mov
jns
jmp
stos
jb
sbbb
sbb
cmp
cmp
dec
inc
lahf
or
in
push
jge
push
mov
or
lods
test
rclb
dec
inc
inc
lret
out
sbbb
jg
fldcw
call
repz
jp
or
das
enter
and
mov
push
and
pop
jg
lret
xor
mov
rcll
or
sbb
and
test
or
sbb
inc
xor
stos
in
in
jno
adc
push
nop
cmc
jle
adc
ret
rorb
test
scas
daa
mov
in
sbb
int3
imul
pop
mov
dec
stc
or
sti
sub
lret
cmp
inc
out
jo
aaa
sbb
jmp
jae
mov
add
in
mov
push
out
inc
xchg
mov
adc
push
and
or
xor
jg
je
shll
cwtl
mov
insl
xor
out
mov
inc
cwtl
sbb
cmp
lahf
fwait
lcall
fstp
xchg
repz
pop
arpl
mov
mov
xchg
xchg
test
cs
push
aaa
xchg
dec
mov
cmp
mov
cmc
insb
push
push
fstps
mov
jbe
cmp
jmp
dec
sti
aas
dec
cltd
add
fcomps
push
movsb
mov
xchg
mov
leave
xor
dec
out
push
sub
adc
mov
mov
pop
test
mov
push
out
dec
fstps
xchg
int
xchg
into
fs
or
frstor
pushf
jg
repz
into
subl
ljmp
sti
pusha
aam
sahf
add
fmuls
ret
out
ss
hlt
sub
sbb
cmc
dec
pop
add
stc
cmc
xor
cmp
mov
int
inc
enter
or
xor
adc
adc
lcall
movsl
mov
cmc
enter
adc
cmpsb
shrl
push
dec
popf
divl
out
pop
fidivrs
dec
les
mov
add
add
les
sbb
sbb
addl
inc
or
fsubl
sub
inc
mov
popa
mov
stos
xchg
sarl
rorl
aam
cmp
int
mov
aaa
lret
rcrb
or
and
mov
and
arpl
popf
jge
gs
idiv
sub
xor
cwtl
jo
push
cmp
jg
mov
pop
in
stos
push
sbb
push
out
fnstsw
pop
rcl
bound
push
dec
sub
ja
push
addl
or
jnp
mov
sbb
mov
in
mov
xchg
jl
sub
leave
pop
inc
push
fwait
inc
pop
dec
mov
lea
cli
popf
rcrl
pop
shll
scas
adc
mov
or
push
mov
leave
xor
adc
popf
pop
repz
movsb
mov
lock
xchg
cmpsl
cltd
sbb
imul
in
call
xlat
add
sti
fucomip
mov
leave
xlat
push
dec
loop
pop
stc
sbb
xchg
fsub
lret
pop
pop
aaa
push
xor
adc
inc
jne
inc
popf
sbb
iret
adc
mov
sub
add
mov
pop
pusha
addb
mov
mov
jecxz
inc
add
cmp
xchg
sub
cli
out
xor
push
mov
dec
push
cmp
fwait
mov
aas
jmp
mov
sub
adc
popf
arpl
ja
jle
js
insb
jno
jl
and
xor
mov
mov
mov
push
sbb
into
fdivr
mov
popf
push
dec
sbb
mov
rcr
adc
xchg
test
and
pop
test
popf
test
lock
mov
add
hlt
out
xchg
mov
rcrl
cmpsb
test
repz
and
sbb
mov
icebp
ret
js
inc
cmp
cli
jle
outsl
cmp
jg
push
scas
sbbb
jo
pusha
or
mov
in
inc
mov
push
jp
popl
fs
ds
arpl
movsb
or
in
mov
and
adc
outsl
inc
in
fidivrs
push
aas
dec
add
or
or
dec
xchg
dec
nop
cmp
ds
mov
in
enter
pusha
popa
lods
push
std
xchg
repnz
inc
inc
pop
cs
out
jecxz
arpl
outsl
andl
xor
cld
inc
arpl
or
xor
lahf
lcall
add
popf
sarb
ret
jae
xor
test
push
mov
pop
inc
mov
sbb
mov
out
jg
adc
pop
mov
inc
imul
mov
imul
mov
pushf
das
subb
sahf
popl
sbb
js
pusha
or
das
xlat
push
sub
inc
mov
push
dec
sbb
pop
loop
mov
cmp
jno
cmpsl
mov
data16
call
fildl
sbb
lods
xchg
pop
push
add
sbb
gs
add
enter
icebp
xchg
dec
dec
mov
insb
push
inc
push
push
popa
or
scas
test
fcomip
or
xor
cwtl
clc
xchg
xor
pop
push
adcl
icebp
in
movsl
jbe
push
loop
push
jmp
sbb
mov
cltd
cwtl
aad
shrb
add
mov
rolb
mov
xlat
enter
mov
loop
sbb
sbb
add
xchg
pop
sti
mov
icebp
sub
mov
out
std
sub
movsb
ret
adc
test
lea
and
imul
sbb
mov
push
insl
dec
inc
arpl
daa
and
jno
mov
adc
pop
mov
mov
pop
roll
push
jp
pop
loope
das
push
mov
jb
xor
out
insb
mov
in
ljmp
xchg
and
mov
ret
and
mov
mov
addr16
out
dec
sbb
push
push
mov
xor
int3
lahf
pop
je
lahf
int
mov
sar
and
mov
ret
mov
push
rcll
mov
or
xchg
sarl
das
dec
loop
push
and
mov
or
les
mov
xchg
xchg
or
shr
inc
inc
ss
pop
sub
mov
adc
add
xchg
leave
rcrb
dec
pop
xor
jmp
int
faddl
adc
inc
pop
sub
enter
pop
pushf
pop
cmpsl
and
mov
push
inc
outsl
or
sub
stos
cld
aam
mov
pushf
xchg
insl
cmpb
mov
mov
enter
mov
test
dec
sti
shrl
into
inc
sbb
sbb
push
xor
or
sahf
pop
shll
insl
or
pop
mov
xor
jns
push
lods
adc
cmp
in
cmp
ffreep
call
popf
mov
aam
repz
fbstp
scas
push
pop
ljmp
pushf
out
lods
fstl
xor
pop
mov
addr16
lock
and
and
fcoml
xor
sub
xchg
nop
cmp
dec
adc
ret
outsl
je
add
jl
mov
addr16
imul
mov
sbb
jp
sbb
push
add
mov
mov
daa
mov
enter
xchg
or
in
add
jne
sahf
adc
sbb
arpl
cmpsb
pop
xchg
mov
sar
and
repnz
push
ss
mov
add
dec
testb
lods
xchg
outsb
insl
mov
insb
jg
sbb
ffreep
pop
in
or
pop
or
cmp
push
jmp
xor
inc
sti
dec
outsl
mov
pusha
or
dec
add
jmp
cmp
gs
sbb
dec
movsb
xchg
mov
bswap
pop
loop
or
fs
cmp
or
dec
in
jo
inc
fisubs
loopne
xchg
repz
cmp
mov
jb
adc
jae
or
aad
mov
ds
popf
sub
js
inc
stc
or
insb
test
lods
loopne
icebp
mov
mov
add
xchg
ja
xchg
neg
and
loopne
cmp
and
push
and
jns
test
jae
push
xchg
mov
fdiv
jg
lret
les
or
aam
mov
lcall
jmp
sbb
aas
pop
pop
jmp
inc
insb
enter
add
inc
movsb
cmp
and
dec
into
lds
mov
pushf
mov
aam
in
jle
pop
ljmp
loop
xor
sbb
xchg
outsl
sbb
xor
movsl
xchg
xadd
xchg
jbe
divb
dec
jnp
mov
dec
stc
aam
inc
mov
mov
or
mov
arpl
cmc
and
xor
push
xchg
sbb
xor
sub
inc
sahf
out
arpl
inc
cli
lods
and
cli
push
lods
push
mov
imul
adc
loope
das
pop
sub
lahf
addr16
rorl
or
scas
sbb
and
xchg
aad
scas
jecxz
loope
xor
dec
cmp
cmp
rclb
xlat
jmp
add
push
mov
push
add
jmp
jmp
cmp
leave
push
jecxz
jno
lret
xor
mov
mov
xor
mov
jmp
dec
cmp
inc
xor
jl
cmpsl
sbbb
cmp
mov
fiadds
adc
push
sahf
test
ljmp
adc
in
aad
mov
test
push
not
ds
sub
jle
sbb
shrl
inc
add
mov
aas
or
jno
lea
add
dec
cmp
jne
push
dec
mov
xchg
lock
jl
fdivrp
in
jmp
add
das
fistl
andb
cltd
push
data16
jno
dec
xor
sahf
repz
and
sub
mov
xlat
xor
outsl
xlat
lds
sbb
mov
xor
cwtl
sub
sbb
cltd
dec
fadds
and
add
mov
inc
int3
xlat
dec
push
fwait
xorb
test
xor
fldl
mov
jae
mov
mov
int
or
xchg
mov
push
jns
div
aaa
cmp
fucomip
fmul
fsubl
jge
sbb
mov
cwtl
addr16
xchg
and
add
dec
add
xchg
lock
ja
cmpsb
ficoms
imul
jno
push
mov
xchg
clc
xchg
ss
add
dec
clc
stos
mov
int3
mov
insl
insb
mov
pop
mov
mov
mov
or
fimuls
lret
cmp
pop
xchg
dec
cmp
repz
dec
aam
adc
das
adc
jmp
push
aam
add
pop
push
and
and
shr
cltd
or
scas
sti
sbb
call
mov
popf
mov
lock
pusha
xchg
sbb
daa
cmpl
in
aam
cmp
scas
push
stos
nop
xchg
das
fidivs
mov
mov
and
rolb
out
pop
cmpsl
jno
adc
insl
int
sbb
or
add
aas
jp
mov
data16
xchg
xchg
sahf
mov
xchg
out
sbb
adcl
adc
outsl
push
push
mov
add
add
push
jne
je
xchg
js
lods
xchg
or
sar
pop
mov
loope
daa
fiadds
adcb
jle
xchg
xchg
outsb
jmp
fidivrs
jo
icebp
sub
fldenv
mov
hlt
loopne
mov
imul
ja
scas
mov
punpckhbw
or
movsl
sti
sub
roll
aad
in
sbb
xchg
mov
jmp
sub
add
ret
jg
sub
repnz
sbb
fcmovnu
push
loop
repnz
cmp
shrl
cmp
cmpxchg
in
jecxz
xor
sti
and
dec
test
mov
test
cmp
ret
scas
ret
testb
dec
and
or
hlt
adc
cmp
sbb
jns
xchg
mov
adc
or
or
dec
outsl
jp
mov
lcall
pop
cmp
cmp
gs
add
sub
orb
mov
lea
push
mov
pop
hlt
xchg
jae
pop
inc
out
mov
pop
jecxz
fistpll
pop
jae
dec
ljmp
xchg
pop
fstps
xor
cmp
pop
mov
jmp
jo
mov
sub
mov
mov
jnp
xchg
pop
test
bound
xor
iret
dec
int3
xor
test
cmp
sti
scas
leave
xor
daa
fsubs
leave
sub
imul
push
fisubs
pop
mov
stos
test
jp,pn
out
mov
sbb
stos
xor
mov
inc
jp
sti
adc
add
jl
mov
pop
sbb
jo
mov
call
push
fld
mov
ljmp
fdivrl
pop
sub
and
bnd
add
xor
jae
nop
sub
scas
mov
addr16
sti
push
xchg
or
das
jne
addr16
hlt
ds
push
jl
cmp
push
mov
aas
int
push
jbe
orl
cmp
out
daa
repnz
sbbl
stos
aaa
aaa
clc
cmp
sub
sahf
inc
dec
repnz
arpl
inc
dec
cmpsb
cld
xor
mov
subl
cmp
inc
push
cmp
push
push
shll
pop
mov
out
dec
fdiv
inc
inc
in
fadds
or
xor
dec
fldt
loope
jl
in
rorl
loopne
ljmp
push
inc
insl
iret
aam
pop
ret
xchg
jno
add
aam
rorl
push
daa
pushf
fldenv
call
das
mov
inc
aad
or
add
mov
ret
inc
add
jnp
mov
jp
faddl
sub
in
mov
insl
pop
andb
loope
push
subl
mov
push
test
jne
dec
mov
outsb
jns
aad
sub
pop
mov
xor
xchg
faddp
xchg
add
sbb
xor
lret
lock
push
or
and
popa
jne
add
stos
push
mov
pop
jmp
dec
loop
nop
xchg
cli
jnp
mov
call
add
das
shll
xchg
cmp
sahf
into
jp
repnz
dec
pop
clc
aaa
bound
mov
fisttpl
cmp
jae
inc
fwait
add
out
into
into
loope
scas
add
xor
movsl
jle
add
mov
scas
aam
arpl
es
cmp
mov
sub
outsl
pop
out
xchg
rcrb
idivb
fmull
xchg
push
xchg
addl
fwait
ljmp
mov
mov
xor
xchg
dec
sub
testb
push
decl
loope
lret
push
aaa
ret
cmp
adc
mov
fdivr
leave
ficoms
out
popf
jbe
mov
jno
inc
fistpl
inc
call
rorb
and
and
jno
xchg
push
jecxz
or
or
rclb
test
enter
loope
cltd
push
shrl
jmp
dec
cmp
popa
or
xchg
rol
mov
jp
and
jle
aam
insb
xor
sahf
push
mov
scas
test
cmc
push
or
std
sub
jl
jmp
and
rcll
mov
and
clc
pop
lods
mov
rol
jbe
add
or
clc
out
fldenv
sub
outsb
xorl
test
in
inc
dec
mov
insb
mov
push
inc
sub
xor
rclb
mov
xor
rcrl
cmp
mov
push
dec
push
fcmovnu
loope
xchg
add
add
sub
xchg
adc
cld
movsl
push
cmp
lods
sbbl
fcoms
xchg
imul
inc
ret
dec
pushf
push
stos
test
insb
loopne
daa
sub
adc
test
sub
mov
out
das
pop
outsb
dec
cltd
and
pop
mov
sbb
xor
lret
and
std
add
faddl
xor
es
xlat
shr
mov
call
stc
mov
push
sub
xchg
push
jl
pop
add
ljmp
ds
pop
xchg
sbb
push
sbb
xchg
movsl
inc
push
xlat
inc
inc
leave
or
xchg
imul
sarb
sub
int3
cld
movsb
mov
jp
push
adc
push
sub
cmpsb
arpl
push
jae
fstpl
movsb
cmpsb
or
cmp
ret
into
xchg
fisubrs
jmp
mov
pop
cmp
jecxz
jnp
sbb
xor
in
mov
jo
lcall
popa
cmpl
lcall
add
sbb
mov
cmp
int
jge
add
pop
sub
int3
pop
mov
repnz
add
xchg
cltd
pop
inc
dec
jl
mov
fistps
call
jae
jae,pt
lret
push
and
clc
out
out
and
movsl
cmpsb
sub
xlat
hlt
sbb
lret
mov
hlt
mov
inc
pusha
lock
mov
or
repz
ret
pop
fs
pop
lock
and
inc
push
imul
mov
mov
and
dec
mov
jl
in
pop
push
iret
mov
mov
pushw
movsb
mov
mov
mov
sbb
dec
sbb
dec
fidivrs
dec
rorl
adc
push
shll
jmp
lret
jb
sub
int3
cwtl
jp
int
pop
mov
sbb
test
scas
jnp
notb
in
mov
aas
test
sahf
lcall
fstps
inc
dec
pop
cmpsb
pop
les
jg
les
syscall
mov
mov
in
xchg
popa
outsl
hlt
xlat
push
ljmp
clc
dec
sub
sbb
stos
sub
inc
sbbb
loopne
sarl
mov
out
adc
pop
mov
imul
popl
test
out
xchg
ljmp
push
sub
or
xchg
in
rclb
orl
imul
sub
dec
arpl
mov
rcll
test
mov
jne
lea
sbb
dec
jns
bound
rcrb
and
lods
ss
cltd
xor
xor
imulb
push
out
inc
pushf
mov
mov
iret
cmpsl
xchg
and
es
out
dec
imul
rclb
mov
pop
sbb
test
xchg
int3
bswap
mov
dec
pop
adc
sahf
xchg
lea
pop
jb
adc
cmp
sbb
imul
xor
je
vpsubq
mov
pavgb
hlt
sub
pop
daa
xchg
mov
jg
inc
or
addl
out
mov
addr16
pop
or
jle
rcr
daa
jmp
testl
std
cmp
call
mov
scas
jb
mov
adc
mov
jge
or
xchg
add
jnp
aam
in
cmp
add
push
sub
icebp
jmp
pop
jns
in
loope
rcl
add
popa
scas
xlat
aad
cmp
sub
xor
ljmp
xchg
add
jno
ret
mov
push
dec
and
ljmp
loope
cltd
add
lods
imul
inc
jns
add
lret
mov
add
aaa
inc
int3
into
test
imulb
inc
scas
or
xor
fwait
mov
mov
cld
clc
mov
aam
sbb
mov
hlt
mov
and
dec
sub
jmp
pop
iret
fisubl
data16
sbb
fldenv
pop
or
aaa
aas
movsl
adc
loope
imul
xlat
ficoml
add
push
into
push
dec
push
mov
jl
dec
mov
stc
add
jp
jg
xchg
mov
add
add
cmc
loope
ret
jmp
loope
inc
mov
test
ficompl
cmpl
mov
ror
mov
sbb
adc
stos
cmp
cmpl
pop
and
pushf
lods
jno
scas
xchg
ficompl
mov
or
lock
mov
inc
sbb
jo
jl
ljmp
int3
pop
test
mov
icebp
push
push
jmp
inc
xlat
cmp
mov
xor
inc
dec
int
daa
gs
xchg
mov
and
test
push
xor
icebp
sub
int
pop
xor
jne
mov
insb
rorb
mov
push
cmp
jns
sti
xorl
sahf
movsl
inc
xchg
inc
test
or
aas
fmuls
cmpsb
cmp
pushf
xlat
es
pop
mov
dec
push
mov
adc
mov
stos
push
mov
out
dec
sub
adc
sub
popa
out
mov
loopne
inc
stos
add
clc
test
and
mov
fbstp
push
mov
mov
cltd
sarb
cmp
aaa
aam
xchg
push
subl
adc
mov
inc
mov
in
adc
dec
ljmp
xchg
lea
in
sbb
or
inc
jb
nop
mov
jl
push
jns
cs
ss
xchg
sbb
test
dec
data16
push
dec
fadd
int
jbe
pop
xchg
fcoml
add
daa
es
les
das
inc
xor
push
je
lods
lods
dec
bound
sub
cmpsb
in
ret
in
jnp
ja
mov
jmp
aam
fistps
imul
jg
pusha
sbb
or
push
adc
mov
fcmovnbe
fninit
ss
in
pop
adc
into
xchg
pop
sub
sub
les
addb
je
fildl
mov
sub
sub
test
roll
or
mov
mov
sub
sbb
xor
jg
mulb
pop
dec
mov
aad
pop
cmc
xor
fwait
stc
fcompl
jno
jns
std
je
test
dec
fwait
mov
loop
lods
pushf
imul
xor
pushf
mov
mov
out
jb
adc
push
xchg
dec
inc
insb
mov
aam
xchg
aas
stc
int3
push
xchg
adc
mov
inc
dec
xlat
test
or
push
mov
mov
push
scas
cmp
adc
mov
jae
or
insl
sahf
loopne
add
dec
negl
cli
dec
fistps
fists
pop
pop
mov
inc
pop
pop
cmp
inc
jge
pusha
cmp
addr16
lret
xchg
push
lret
pop
shlb
jb
stc
lahf
jge
cmp
add
aaa
addr16
push
xchg
sub
mov
cltd
in
stos
push
adc
mov
jns
cli
shrd
fsts
mov
ret
stos
xchg
jmp
dec
and
lahf
out
into
or
mov
loopne
ljmp
cli
dec
inc
cli
mov
popf
sbb
or
mov
fidivs
pop
mov
out
roll
push
mov
arpl
sub
mov
and
lods
cmpsl
or
pop
ficomps
jg
inc
sbb
lret
mov
rcrl
push
jecxz
int
cwtl
shll
orb
or
inc
xchg
add
mov
mov
or
addl
mov
lret
mov
int3
jb
sahf
mov
subl
pop
xchg
sbbb
ret
and
lret
daa
cmp
jge
push
fidivs
shrl
shl
fwait
push
xchg
xor
les
xor
sti
sub
jns
ror
hlt
or
push
hlt
adc
pop
adc
movsb
lret
aaa
leave
sbb
dec
lds
repz
dec
imul
xor
xchg
cmp
fidivs
mov
orb
lea
nop
dec
pop
repz
sub
jne
adc
loopne
pop
shl
in
in
add
dec
pop
cld
je
adc
mov
xor
adc
fcomps
add
adc
inc
lret
cmp
push
fstl
fwait
ja
mov
call
ljmp
sbb
or
mov
sbb
test
mov
or
dec
mov
inc
sti
das
cmp
cwtl
cltd
mov
in
mov
pop
sbb
dec
out
mov
lock
mov
inc
xor
fldenv
xchg
fists
lods
test
mov
out
fcoms
mov
push
xchg
sbb
cmp
sbb
fistps
sub
sbb
jl
loope
les
cmp
das
push
outsl
repz
repnz
movsl
int
js
pop
imul
jb
mov
movsl
dec
outsb
fisubs
mov
pop
cmc
movb
inc
xchg
xlat
repz
icebp
dec
iret
pop
dec
pusha
cmp
adcl
scas
cmp
lock
imul
xor
negl
adc
cli
aam
mov
mov
sti
mov
subl
pop
sub
outsb
mov
xor
xchg
repz
adc
jns
imul
inc
mov
insl
pop
pcmpgtd
mov
mov
mov
subl
mov
add
fbld
loop
stos
mov
test
lds
outsl
scas
cmp
mov
inc
xor
sub
cmpl
cmc
and
outsl
xchg
mov
fistpll
inc
mov
jo
xchg
aad
pop
das
jge
or
fildl
mov
cwtl
scas
adc
imul
js
add
add
cmp
pop
out
sbb
mov
sub
addr16
dec
mov
adc
out
outsb
dec
add
testb
mov
cmp
ja
jmp
and
adc
inc
repz
popa
and
hlt
imul
push
sub
adc
xor
cmpsb
xor
pushf
inc
fcmovnu
push
inc
out
inc
sub
in
ret
xlat
or
es
fs
pcmpgtw
mov
lds
aad
outsb
mov
sub
push
sub
cli
inc
fisubrs
fbld
xchg
test
pop
js
mov
inc
imul
add
les
cs
cmp
push
mov
inc
or
ret
or
sar
scas
movsb
scas
cltd
or
stos
mov
test
xor
repnz
push
xchg
rol
lret
adc
mov
mov
xchg
aad
sahf
out
shll
add
js
ret
jl
cmp
pop
cmp
ja
or
movsl
xor
add
cltd
outsb
jmp
cwtl
or
xor
cwtl
mov
sub
fwait
test
jecxz
or
divb
popl
and
loopne
dec
out
jnp
js
or
mov
push
or
cli
xchg
leave
and
mov
fsubl
push
outsl
xor
adc
jae
xchg
inc
mov
leave
lahf
mov
xchg
and
aad
out
out
int3
daa
xchg
xchg
sarb
mov
andb
lds
pop
pop
loopne
push
adc
movsb
push
cld
mov
scas
jne
add
mov
insl
in
or
stos
pusha
adc
imul
mov
or
addr16
cmp
dec
mov
test
mov
sbb
repz
std
in
out
dec
push
orl
test
sub
mulb
pop
push
imul
jge
imul
xchg
out
fcmovb
div
jne
scas
fimull
in
daa
je
jb
xor
pop
rcrb
xor
je
in
imul
mov
cltd
fistpll
cmp
mov
inc
in
enter
sub
es
in
pop
enter
mov
pusha
pxor
stc
inc
mov
fucomip
scas
push
out
sbb
sub
jecxz
into
xor
outsl
mov
aas
push
aas
xor
outsl
push
push
sub
out
shrb
mov
add
mov
lock
sbb
inc
inc
pusha
test
inc
jl
push
jge
jb
dec
sub
ficompl
add
mov
mov
imul
mov
ljmp
je
cmp
stc
pop
inc
outsb
pop
cmp
mov
imul
daa
adc
mov
cmc
fnstcw
xchg
pusha
jnp
dec
xor
testb
sub
repz
jns
stc
jg
jp
xchg
outsl
cmpl
sbb
in
jle
lods
adc
push
inc
and
in
push
mov
in
in
pop
dec
xlat
sbb
nop
mov
test
cli
sub
push
pop
clc
and
cmpsl
leave
arpl
mov
imul
fwait
jno
cmp
dec
and
sbb
or
mov
and
lret
stos
cli
pop
js
gs
andb
std
shlb
sbb
sub
jnp
adc
or
cmp
push
xchg
xor
cmpsb
xchg
dec
or
push
ret
cwtl
push
xchg
and
popf
mov
adc
jl
vpsubd
add
repz
add
mov
in
ffreep
xchg
cli
xor
ss
lea
popa
mov
push
pop
and
out
js
jns
push
pop
dec
add
repnz
add
movsl
xchg
ja
adc
shlb
dec
mov
mov
ret
int
sbb
lcall
xchg
stos
lods
rolb
call
fs
fistpll
pop
add
fs
mov
incl
dec
or
popa
mov
mov
add
jge
out
xchg
push
jno
iret
popa
mov
adc
and
add
lret
jb
hlt
fs
or
lret
jo
mov
xchg
mov
jo
leave
dec
jecxz
dec
and
fidivrs
push
add
pop
out
xchg
ret
cmp
rcll
xorl
cwtl
dec
lods
iret
sbb
subl
cld
adc
test
in
push
or
cmp
das
pop
daa
insb
sub
jbe
out
inc
cmp
rcrb
mov
add
or
mov
xchg
xorb
icebp
mov
pop
cmp
cwtl
lahf
dec
fsubl
xchg
cli
xchg
shrl
es
push
sbbl
or
sub
sub
icebp
daa
inc
jno
jns
ret
lahf
add
pop
lock
rorb
push
test
sahf
sub
sub
inc
jne
sbb
test
insb
insb
in
andb
jg
clc
aam
jle
cld
cmp
inc
cmp
inc
sub
pop
and
push
dec
out
sub
repz
movsb
fsubl
push
mov
push
push
pop
out
xchg
clc
lea
es
or
dec
divl
or
add
mov
sbb
addr16
test
nop
out
aas
inc
cmp
pop
and
clc
mov
ss
scas
adc
fwait
cmc
sbb
push
sti
lods
stos
notl
sbb
inc
sbb
jle
cmpsb
pushf
jns
and
lcall
call
jle
adc
mov
leave
outsl
rol
arpl
cmp
adc
mov
add
push
dec
jg
ret
cmp
xchg
sbb
inc
out
push
enter
sub
fcomp
or
push
add
sub
fiadds
lcall
nop
xchg
repz
push
xlat
xchg
pop
inc
lea
dec
cmp
push
cmp
mov
mov
push
cmp
es
hlt
cli
add
cmc
fldcw
pop
mov
sbb
cld
jmp
leave
sub
and
mov
cltd
mov
je
insl
push
cmc
dec
imul
fbld
out
xchg
sbbl
sub
pop
mov
mov
pop
lock
mov
sub
mov
std
stos
bound
or
std
xor
fistpl
jge
insl
push
loop
in
xlat
ss
mov
addr16
js
fnstcw
out
push
test
popf
ror
imul
push
jg
aad
std
xchg
fisubrs
pop
adc
cmpsb
jne
mov
shr
testb
push
jo
xor
nop
pop
inc
cmpsb
aad
pop
mov
aam
data16
xor
mov
push
or
sarb
inc
add
scas
lods
ja
gs
mov
sub
xchg
les
push
jne
jns
xor
pop
sbb
clc
push
inc
fimuls
jecxz
sbb
pop
xor
dec
frstor
fisubs
clc
adcl
adc
mov
or
mov
lahf
dec
fiaddl
ds
dec
int
jl
adc
mov
inc
ds
dec
or
gs
pop
mull
dec
jmp
nop
lret
mov
jge
jmp
arpl
cli
push
jo
faddl
add
pop
pop
movsb
pop
mov
push
jns
into
mov
push
dec
push
mov
iret
insl
shlb
jo
sarl
in
iret
fdiv
mov
loope
fidivs
jecxz
lods
daa
adc
push
and
lret
ss
lcall
xor
das
test
arpl
jno
and
sub
repz
sbbb
sub
push
imul
imul
or
movsb
push
fstpl
lret
popf
out
int
jnp
insb
and
mull
ja
or
lea
xor
addr16
pop
aaa
out
jecxz
shrb
std
iret
and
pop
stos
loope
cwtl
les
xor
je
sub
and
mov
xchg
leave
mov
xchg
daa
sub
inc
lods
out
fwait
pushf
adc
inc
lcall
push
cmp
icebp
ja
pop
mov
xor
mov
loope
repnz
jns
push
orl
loopne
sub
es
push
or
dec
int3
xchg
adc
cld
adc
jo
dec
add
scas
jne
adc
outsb
push
xor
daa
mov
cmc
test
inc
stos
ljmp
fs
sbb
and
in
loopne
insl
movsl
sub
xor
inc
pop
push
fdivrl
xchg
rorl
sub
inc
add
and
ret
mov
inc
sbb
movsb
and
xlat
cmp
pushf
xchg
mov
xchg
test
add
fdivr
in
int3
hlt
push
cltd
pop
loopne
test
les
mov
mov
stc
fs
sub
xchg
cs
mov
mov
adc
in
vmovss
inc
loope
repz
sbb
and
dec
jnp
xchg
mov
int3
xor
arpl
mov
fisubrl
jo
sub
mov
int
pop
pop
xchg
test
xor
mov
enter
scas
dec
mov
mov
dec
fidivs
in
lahf
inc
dec
add
pusha
fs
stc
shrl
les
sbb
mov
cmpsl
jge
out
lock
adc
orb
or
lds
push
lea
or
mov
mov
push
jg
addl
imul
mov
imul
ret
aam
and
loope
jo
push
fstpt
mov
lods
cmpsl
sbb
and
incb
outsl
mov
inc
scas
cmp
lahf
sub
mov
ss
and
leave
or
push
orl
stc
mov
into
cmpsb
clc
aaa
addb
cmp
and
sbb
jecxz
sbbl
xchg
jo
push
insb
and
dec
testb
add
xchg
pop
xor
negb
mov
xor
or
sarl
and
pop
add
adc
xchg
cmpsb
push
adc
mov
js
and
lcall
fs
cld
repnz
pop
xchg
xlat
rorl
cmp
sbb
les
or
and
mov
and
fsubrs
in
jne
jno
shl
fdivrs
xchg
mov
xchg
push
mov
cmp
imul
push
inc
push
push
ljmp
nop
adc
mov
scas
dec
rcl
add
push
adc
repz
push
movsb
loope
add
jecxz
add
ljmp
push
popf
and
and
test
cwtl
mov
dec
jmp
mov
jecxz
loopne
enter
pop
push
in
ret
out
inc
outsl
add
jbe
fidivs
imul
or
xor
mov
sub
inc
scas
in
movsl
pop
adc
es
popf
pop
stos
pop
push
push
popf
inc
lock
pop
scas
ljmp
imul
sbb
jae
jmp
arpl
imul
decl
push
cmp
mov
xchg
push
mov
adc
jg
inc
fnstenv
push
sub
pop
rcl
mov
add
sub
data16
push
mov
fstpt
jnp
js
rcrl
imul
not
xchg
lahf
dec
mov
stos
xor
jns
mov
add
sub
aam
in
add
fwait
push
dec
jnp
dec
and
jge
shrl
mov
es
loope
mov
pop
sub
insb
xchg
jo
or
stos
pop
sbb
push
ljmp
pop
dec
test
mov
mov
pop
test
daa
sub
lods
jmp
dec
lock
inc
cmpsb
pop
or
scas
rcr
sub
ljmp
repz
jae
pushl
mov
ret
icebp
popa
imul
adc
rorb
xchg
clc
mov
jno
scas
scas
pop
pop
sbb
lock
dec
sub
jnp
push
jecxz
fs
aam
push
push
aas
les
jne
sti
add
outsl
jmp
mov
andl
xchg
loop
sbb
outsl
stos
xchg
les
cmpsb
inc
negb
enter
in
int3
sarl
mov
es
pushf
xorl
and
in
jle
inc
fucom
movsl
lahf
cmp
lret
icebp
sub
test
mov
in
test
les
mov
inc
hlt
add
add
sar
clc
fldpi
movsb
xchg
aaa
lea
movsb
xor
dec
shl
popf
mov
fildll
fsubl
add
out
and
stos
mov
das
xchg
insb
push
cmpsb
fistpll
add
out
jns
pusha
leave
jle
lahf
scas
test
aam
test
mov
cmc
mov
call
or
sbb
stos
mov
pop
push
subb
pcmpgtd
mov
and
jnp
movsb
cmc
jbe
sbb
and
adc
sub
cwtl
push
push
sbbl
sbb
popf
aad
outsl
das
cmp
lds
push
fs
fisttpl
sarb
inc
sbb
sarl
xor
leave
in
stc
jnp
out
fwait
lahf
dec
aad
movsl
xchg
push
adc
sbb
cmpsl
mov
mov
je
popf
mov
inc
sbb
addl
mov
sti
in
sub
adc
in
scas
mov
mov
mov
fbld
ss
mov
mov
sti
rcr
lahf
cmp
int3
push
popa
inc
and
cmp
and
xor
cld
pop
scas
mov
add
jmp
xchg
scas
and
loop
rorb
cmp
fsubrs
out
push
mov
std
sahf
fistps
xorl
cmp
add
ret
rcrb
stc
mov
cld
and
mov
rcrl
repnz
mov
sahf
dec
ret
xchg
mov
xor
or
push
das
inc
cmp
gs
add
jbe
xchg
hlt
in
inc
pop
adc
cmp
jle
loope
inc
cltd
push
clc
in
sub
sti
arpl
sub
imul
fstps
mov
std
les
inc
inc
dec
shll
js
cmp
dec
jbe
incl
sub
clc
test
mov
sahf
outsl
lds
dec
or
mov
sahf
jno
mov
or
lcall
pop
pop
das
das
jae
push
leave
aad
xor
xchg
movsl
in
push
mov
cmp
cmp
sbb
jo
sarl
cmp
jge
jecxz
jb
icebp
mov
and
mov
rorl
push
andb
add
push
dec
lock
out
lret
sbb
adc
adc
push
adc
in
fdivrl
in
cmp
pusha
loop
pop
inc
enter
loope
jo
adc
out
insl
cwtl
pop
loop
dec
push
cli
add
lahf
adc
enter
push
push
push
xor
mov
xor
stc
test
cmp
lret
outsb
outsl
gs
cmp
lret
fnsave
add
or
sbb
pop
mov
sub
xchg
pop
cmp
notl
xchg
decb
sub
push
dec
cmp
imul
fwait
sub
outsl
pop
mov
or
adc
inc
cltd
cmpb
pop
adc
int
stos
and
enter
cmp
push
adc
sti
jnp
out
or
mov
mull
xor
sahf
add
stos
stos
jo
jbe
jmp
data16
popf
adcb
inc
push
mov
pop
iret
xchg
sbb
push
aam
or
mov
add
add
sbb
mov
xchg
inc
popa
pop
lea
cmp
loope
push
and
push
cmc
push
das
mov
ds
in
adc
cmc
xor
in
push
mov
jecxz
out
pop
cs
hlt
or
cld
cli
dec
xchg
mov
jle
sbb
imull
cmc
add
add
pushl
lods
jg
rclb
push
cmpsl
loop
int3
lret
push
dec
dec
push
push
insb
pop
lods
dec
cmp
js
decb
addr16
mov
dec
sti
rclb
shl
push
fs
jnp
pop
cmpsl
fsub
fistps
in
sbb
cmpsl
loopne
jmp
addr16
jmp
push
inc
or
sbbl
outsb
aad
and
js
gs
stos
push
jg
push
or
pop
hlt
or
enter
cmpb
cmc
iret
pop
pop
mov
inc
inc
fcompl
stc
ret
or
stos
arpl
dec
imulb
xor
test
jp
jno
lock
adc
add
cmp
jno
aad
fchs
fcmove
cmp
mov
aam
lcall
je
sub
enter
pop
jns
pop
ret
sahf
lahf
lret
xor
jne
xlat
xor
aas
loop
xchg
pop
push
sahf
jns
cld
pushl
in
subl
mov
out
adc
cmp
je
push
sbb
add
test
pop
pop
and
or
mov
push
push
enter
push
dec
daa
repz
jb
cwtl
xor
jle
sbb
loop
push
mov
push
adc
leave
mov
fisubl
cwtl
scas
cmc
mov
push
in
shrb
roll
pop
fdivl
stos
cltd
pop
mov
mov
push
inc
fistps
test
stos
icebp
add
jnp
frndint
les
and
loop
lret
inc
stos
push
cmpsb
jb
and
pop
into
push
cmc
ljmp
pop
test
mov
arpl
or
insl
and
outsb
add
cmp
jecxz
sub
adcb
xor
jno
dec
pop
sub
sub
and
sub
pop
mov
stc
daa
addr16
icebp
sbb
xchg
jae
adc
xchg
test
sbb
cld
dec
or
imul
add
mov
inc
iret
inc
repnz
jg
js
sahf
xchg
ret
insl
jg
pop
shl
lret
jecxz
out
lock
je
push
add
pop
adc
js
jge
ljmp
addr16
adc
mov
add
rclb
pop
dec
movsl
sbbb
fdiv
lcall
jne
sub
sbb
mov
inc
rcr
call
pop
jmp
sub
lret
push
jmp
ljmp
cltd
lcall
mov
aaa
and
pop
sbb
inc
rclb
mov
lcall
loop
sub
gs
adc
je
out
xchg
xor
nop
ja
mov
jge
add
push
jle
dec
mov
std
xor
fisttpll
or
stos
popa
cmp
jl
ret
and
fwait
rorl
cmc
push
pop
outsl
mov
cmp
clc
movsb
push
jecxz
xchg
test
xor
lea
cmp
xor
mov
mov
push
pop
push
inc
mov
pushf
mov
push
inc
add
xchg
and
mov
mov
lock
popa
xchg
jp
jne
xor
int3
xchg
jae
adc
mov
sbb
inc
fsubrs
in
lea
cld
fcompl
add
adc
faddp
movsl
out
pushl
cli
test
enter
loopne
push
adc
pusha
jae
into
xchg
sub
sbb
jns
pop
sub
je
mov
xlat
or
jnp
xchg
sahf
lods
hlt
cmpsb
iret
mov
mov
test
xchg
fwait
dec
lcall
cs
push
test
mov
test
xchg
out
in
and
insb
sub
outsl
mov
mov
inc
sahf
push
pop
js
cs
sub
mov
iret
lcall
outsl
sub
sub
rclb
sbbl
mul
cmp
lock
in
cmp
xchg
int
out
xor
lcall
add
mov
aad
pop
scas
daa
les
dec
js
mov
and
jp
add
pop
andl
or
jmp
push
jecxz
jae
test
mov
cmp
aad
testb
movb
leave
lahf
mov
leave
push
xor
sbb
mov
cmp
fdivp
outsl
call
lret
jle
xor
testl
scas
mov
es
xor
push
test
xor
aas
xchg
lods
mov
cmp
das
push
or
das
loop
xor
gs
jl
aad
jbe
sbb
mov
shlb
clc
loopne
rcrl
xor
mov
pop
inc
jle
jle
push
sub
sub
stos
mov
xor
test
test
gs
jne
cwtl
test
jmp
or
call
sub
sub
dec
shlb
add
lods
pop
cmp
add
sbb
fistpl
xchg
push
or
jbe
sbb
or
cmc
aaa
lock
mov
stos
insl
pop
lret
dec
pop
cmpsl
dec
mov
pop
out
push
jmp
popa
and
push
mov
iret
pop
aas
leave
push
xor
sub
cltd
xor
mov
fs
enter
inc
mov
xor
stc
ret
xor
jp
jo
dec
jae
fcmovnbe
cmp
scas
xorb
sub
aam
outsl
xlat
jge
or
dec
mov
filds
ficoml
xchg
push
sahf
pusha
imul
subb
xchg
mov
or
cld
dec
imulb
add
outsl
sar
push
aam
and
sbb
sub
adc
mov
dec
iret
adc
rcll
mov
decb
push
pop
imul
push
shrl
ret
out
arpl
icebp
jmp
repnz
es
sbbl
jg
fwait
scas
iret
pop
int
sti
pop
hlt
jmp
outsb
mov
cmp
in
jle
addl
add
adc
std
dec
or
push
and
xor
fcmovu
ss
insl
push
push
aad
cmp
mov
movsl
rorl
pushf
lods
ljmp
es
fdivl
sbb
jae
mov
jl
out
xor
adc
xor
xlat
sarb
xchg
add
xor
lcall
pop
jg
add
pop
or
in
sti
rclb
cmp
sub
js
stos
add
out
in
jmp
mov
bound
test
int3
fs
lds
inc
es
scas
xlat
leave
leave
in
mov
shl
roll
add
clc
push
push
push
ljmp
pop
insb
rolb
and
xchg
adcb
push
es
icebp
xor
sti
sub
cmp
add
jnp
gs
xchg
fdivrs
lods
out
xchg
aas
std
dec
adc
sub
push
sub
cwtl
fldcw
mov
push
call
mov
popa
loop
outsl
sbb
out
or
adc
movsb
add
in
addr16
xchg
iret
fucomp
mov
pushf
and
pop
rolb
jne
das
or
adc
cmp
into
repz
adc
push
lods
lods
sbb
or
pop
pusha
sar
xlat
add
cmp
iret
mov
and
xchg
pop
dec
nop
xchg
les
jnp
lods
icebp
sbb
jge
leave
ja
lock
sub
insb
jno
add
xlat
outsb
out
frstor
xchg
insl
jnp
jno
daa
lcall
jne
jle
out
in
mov
sub
jmp
fidivs
xor
cmp
adc
sbb
sahf
cs
rcrb
xor
mov
dec
add
movsl
push
stos
into
mov
jnp
add
adc
testl
cmp
adc
xchg
lahf
add
sub
clc
stc
stos
inc
sbb
push
push
xchg
sahf
mov
xor
int3
cmc
sub
cmpsl
inc
outsl
popf
push
mov
les
stos
clc
insl
jo
clc
ficoml
sub
jb
mov
and
aad
jae
sbb
xchg
pop
xor
mov
outsb
and
cmpb
loopne
neg
sahf
or
add
mov
push
std
mov
sahf
pop
push
jae
dec
xchg
lahf
or
xor
sub
jne
imul
movsl
or
inc
ret
push
xchg
cmpsl
add
les
aas
dec
mov
hlt
jb
xchg
stc
cmpsb
hlt
push
shll
mov
mov
roll
sbb
fisubrs
insb
and
xor
mov
push
xchg
in
inc
push
pop
dec
jb
pop
or
cltd
or
dec
cld
cmp
in
pop
or
or
out
je
out
int3
mov
mov
jnp
pop
mov
repnz
insl
pop
mov
test
xchg
cmpsb
jb
test
sub
js
dec
pop
jnp
mov
push
and
xchg
insl
aaa
lret
mov
sub
pop
jnp
xlat
mov
push
mov
rcl
jbe
aaa
adc
push
add
or
sub
in
repnz
sbb
and
cmp
icebp
lock
call
fwait
cmp
popf
mov
inc
jne
mov
sti
int3
movsl
xchg
and
sbb
mov
scas
loop
xor
xor
mov
jae
inc
daa
mov
mov
dec
mov
mov
cmp
jg
inc
ljmp
cli
xchg
out
jb
sub
arpl
mov
aaa
dec
fcoms
call
push
mov
mov
inc
inc
jne
push
es
outsb
dec
in
sub
pop
dec
pop
push
adc
push
aam
adc
dec
int
ret
fnstsw
loop
xchg
repz
ja
cmp
shrb
mov
test
push
lret
mov
mov
dec
mov
xorl
scas
xor
pop
dec
add
jecxz
bound
pop
rep
and
cmp
scas
lods
popf
mov
push
ret
push
push
xlat
and
cmp
lods
in
cmp
pop
inc
stos
pop
pop
mull
test
ja
lods
or
lods
jle
mov
mov
xlat
call
aad
aad
mov
stc
xchg
xor
dec
in
and
repz
xchg
sbb
jb
aaa
dec
sti
repz
dec
leave
dec
dec
mov
or
mov
xchg
aam
and
iret
cmc
xchg
cs
hlt
inc
sbb
into
in
leave
pushf
in
rorb
out
sbb
mov
insb
dec
or
ficomps
sub
cwtl
push
push
or
sarb
mov
xchg
addr16
jbe
inc
xchg
lahf
call
cmp
subl
mov
pop
inc
icebp
popf
push
or
adc
mov
clc
or
std
pop
cld
test
adc
xchg
aas
ret
imul
sub
sbb
repnz
pop
es
out
cmp
sbb
std
shl
mov
mov
adc
inc
jno
rcr
xchg
jmp
rolb
cmc
mov
dec
cmp
push
scas
into
xchg
arpl
das
sub
es
sub
scas
call
stos
adc
movb
push
jnp
icebp
and
mov
clc
in
dec
ficoms
mov
movsl
stos
aam
dec
xor
aas
inc
sub
add
inc
cmp
js
aas
cld
sbb
lcall
push
adc
sbb
leave
mov
adcb
mov
dec
xlat
add
sbb
cmpsb
roll
add
xchg
rolb
or
imul
lahf
or
sub
or
pop
dec
ss
add
cmpsl
icebp
iret
ffree
in
sbb
cmp
fcoml
fmull
test
cmp
mov
mov
pop
add
call
or
adcb
push
fcoms
xchg
mov
sar
int
movsb
pop
or
divb
mov
popa
or
out
js
xor
mov
aaa
pop
mov
pop
ja
or
push
into
inc
mov
bound
adc
sbb
lea
jo
xchg
loope
and
rcr
cld
sarb
xlat
jne
cli
jg
mov
in
push
inc
xchg
lods
out
lret
js
inc
jns
mov
jg
dec
dec
es
test
xchg
and
mov
adc
scas
arpl
cmc
loopne
jp
les
imul
cltd
js
faddl
jne
jae
add
in
mov
fsts
sbb
sti
xlat
arpl
sub
push
xchg
inc
mov
xor
insb
mov
int
xchg
std
das
adc
loopne
adc
fcmovnbe
jb
fimuls
xor
mov
dec
pusha
arpl
repz
bound
cmp
push
insb
mov
mov
lods
pusha
sbb
fcoml
lods
ss
mov
loopne
sbb
fdivrs
pop
lcall
insb
stos
pop
mov
push
push
lds
leave
xor
cmpsb
jle
div
clc
imul
dec
mov
fcomps
jmp
lods
dec
cs
ss
mov
jp
aaa
aam
push
lods
int3
cmp
in
xor
out
mov
cmp
das
loop
cmp
lcall
mov
sti
pop
imull
jo
pop
mov
fwait
mov
mov
call
ja
cmp
mov
test
jae
in
popl
sti
add
inc
cmp
push
lcall
inc
rclb
jl
pop
inc
popf
sti
shlb
movl
sub
or
cld
test
pop
fstl
dec
xor
outsl
pop
pop
cmp
nop
loopne
fstl
lcall
out
subb
pop
lds
out
mov
cmp
cltd
push
daa
sarb
subl
les
shl
xchg
test
and
cmp
xor
push
movsb
into
mov
or
popf
push
cld
cmp
cli
xor
rorb
test
cmp
repnz
sub
xor
jb
mov
iret
popf
xor
int
inc
popf
adc
dec
movsl
pop
dec
cmp
mov
cli
outsb
mov
sub
arpl
push
mov
shll
out
jns
lahf
push
shll
mov
shrb
mov
out
jl
cmp
sarb
xchg
jg
je
imul
iret
or
mov
mov
dec
pushf
inc
testl
pop
xor
mov
jl
scas
lock
movsb
movsb
cmp
cs
mov
jp
push
or
pop
cmpsl
inc
lahf
cmp
mov
leave
hlt
or
add
popa
sub
mov
sub
inc
js
ret
xor
aad
push
cs
push
jbe
add
xchg
js
test
fbld
sbb
testl
ret
add
insl
jge
lahf
sub
inc
jne
fstl
jae
pop
adc
fiadds
movsl
push
fs
aaa
jmp
dec
leave
add
out
fistpll
mov
inc
inc
das
roll
loop
cmp
out
adc
xchg
outsb
imul
mov
out
leave
test
mov
test
mov
sub
sbb
xlat
cmp
pop
les
repz
xchg
loopne
push
fsts
pusha
ret
inc
xor
mov
jnp
mov
push
dec
mov
mov
lods
mov
pop
sbb
xchg
and
in
sub
push
ss
xor
jno
cmpb
mov
call
sbb
sub
mov
or
fsubl
clc
shrl
pop
mov
loope
xchg
in
cmp
movb
cwtl
jae
or
std
inc
inc
test
and
incb
rclb
into
loop
or
cmc
or
push
lea
push
jns
sbb
fadd
aam
push
push
nop
jg,pt
fs
jl
add
out
cwtl
ja
push
sub
sbb
shll
add
xchg
mov
nop
jg
cmc
test
jnp
mov
addr16
push
scas
int
test
jae
mov
fidivrl
shl
aam
pop
or
push
jno
lods
inc
mov
cmp
cld
js
movsb
icebp
push
and
in
mov
push
sarb
popf
insb
int
je
or
rclb
scas
pop
cmc
lea
and
addr16
cmpl
mov
mov
push
fstl
xchg
pop
mov
add
cwtl
pop
push
push
mov
jne
outsl
jmp
pop
adc
mov
sub
adc
ret
jg
cmp
shlb
fsub
outsl
arpl
and
jmp
push
mov
inc
jae
inc
rcll
in
imul
inc
or
rcll
pop
je
cmp
pop
lods
add
pusha
pop
cmc
fcompl
imulb
jmp
cmp
les
adc
push
sbb
mov
lock
jl
push
jmp
push
cltd
push
mov
repnz
push
xchg
jmp
push
lret
jo
xor
inc
aam
cld
call
fwait
and
aam
xor
push
xchg
movsl
lea
aad
mov
and
add
fbstp
inc
cmp
and
dec
sub
rcll
xor
in
mov
and
repz
jbe
mov
lea
and
sub
jl
xchg
lods
test
adc
xchg
lahf
add
lret
notb
jle
fldt
sub
ljmp
leave
cmp
xchg
cmp
popf
lods
cld
test
imulb
inc
loopne
dec
imul
dec
out
sub
outsl
add
repz
enter
xchg
cmp
testb
fwait
ret
scas
jp
xor
fmul
subl
clc
push
sub
inc
jecxz
repnz
test
or
or
or
mov
cmpsb
mov
push
cld
fisubrs
push
mov
add
test
jmp
aad
shlb
jae
push
push
pop
mov
les
dec
test
lods
add
lahf
cmc
pop
push
outsl
rorb
mov
jl
fwait
xchg
fsubr
sbb
ja
mov
addr16
pop
std
daa
in
push
jne
sbb
in
pop
adc
sub
aaa
pushf
or
pop
xor
jnp
lods
jae
aas
dec
fiaddl
xorl
addb
jle
jbe
cmp
mov
cltd
and
ljmp
mov
mov
mov
test
add
mov
push
pop
hlt
pop
push
push
xor
rcll
xor
rolb
sub
in
cmp
mov
mov
fbld
add
mov
mov
mov
pop
push
jnp
stc
push
xor
cmc
sub
jmp
sub
repz
je
jmp
fists
lcall
jl
inc
loop
test
pushf
aam
push
clc
xor
fmuls
inc
pop
mov
add
leave
sbb
ret
aad
add
mov
sbb
mov
sahf
dec
lcall
jle
lret
xor
xor
scas
fcomps
stos
jnp
aad
addr16
loop
mov
lahf
dec
sti
aaa
nop
mov
dec
pop
push
test
je
jg
and
lods
scas
fisubl
insl
addr16
push
pop
push
rolb
ljmp
xlat
shl
ljmp
dec
aas
cmc
jg
or
xor
rolb
xor
adc
fadd
outsb
xadd
dec
mov
or
fdivrs
adc
mov
filds
out
cmp
out
push
in
or
subl
jge
inc
jno
push
xchg
jmp
or
or
cltd
das
stc
or
mov
jmp
add
movsl
cmp
xrelease
shll
jae
filds
in
mov
pop
add
inc
and
pop
movsb
or
aad
sub
out
cltd
addr16
test
cmc
sub
mov
sbb
add
lea
xchg
sbb
mov
pop
test
xor
jns
std
mov
pop
xor
les
popa
notb
and
pop
sub
arpl
shrb
outsl
test
outsl
pop
js
mov
leave
bound
or
mov
int3
lret
insl
dec
jns
or
dec
shl
sub
loop
stos
pop
add
in
push
jg
push
pop
in
into
dec
xchg
and
xor
popl
sti
mov
adc
jne
pop
lods
in
dec
pop
mov
sti
inc
popf
cmp
pop
shlb
xor
pop
movsl
xor
adc
adcb
lods
pop
inc
pop
std
pop
sahf
push
outsb
arpl
add
dec
dec
repnz
pop
sbb
ds
jno
and
dec
xor
sub
push
insb
sbb
ja
out
and
dec
pusha
or
xchg
cmpsb
sbb
and
mov
out
push
aam
push
cmp
add
insl
push
ret
jecxz
xchg
push
popf
adc
shll
ljmp
leave
addr16
or
insb
arpl
sbb
sub
dec
data16
push
add
and
les
jle
ret
in
cmp
cmp
popa
fwait
mov
mov
dec
daa
addl
xchg
jb
test
pop
dec
and
iret
lret
call
mov
jl
add
and
cmc
aaa
or
imul
into
dec
clc
jl
dec
scas
or
sub
pop
jmp
shlb
mov
sbb
add
pop
loope
movsl
scas
sub
mov
push
mov
mov
jmp
jg
clc
pop
xchg
cmp
inc
ds
sbb
ret
int
sub
ja
aaa
xchg
jno
mov
push
push
mov
rcrb
sbb
jo
andb
cmp
sbb
sar
pop
adc
vandps
cmpsb
sbb
stc
sub
addr16
dec
push
js
sbb
push
xor
pop
sbb
lea
iret
ret
mov
cs
addb
mov
fistpll
std
jmp
add
js
sarl
push
cmc
ss
fs
sbb
add
loop
cli
push
lods
lds
jl
mov
cwtl
sbb
mov
loop
nop
js
je
or
push
insl
sahf
dec
pop
jns
cwtl
push
icebp
scas
pop
cmp
sub
cld
or
loopne
cmp
cli
lret
dec
xchg
mov
mov
push
dec
test
or
and
pop
inc
out
inc
mov
dec
aaa
lahf
pop
mov
cmp
bnd
lret
cltd
push
sbb
lds
mov
psadbw
lret
pop
mov
mov
in
jbe
adc
enter
cli
add
popf
fsubrl
into
xchg
jl
adc
and
jecxz
loopne
rclb
cmp
cmp
pop
fwait
dec
jl
arpl
push
sbb
mov
pop
js
int3
inc
scas
pop
addb
andb
js
push
cmp
sahf
lret
cli
fmuls
daa
in
pop
sub
dec
sub
fs
aaa
and
stos
test
push
cwtl
ljmp
out
aam
xor
lods
mov
jp
in
in
mov
leave
lds
out
or
sub
xchg
pushf
insb
mov
rorl
fs
push
ds
pushf
test
sbb
lock
sub
mov
jno
xchg
out
pop
jbe
fcoms
pusha
pop
and
cmpsl
aad
adc
mov
cmp
mov
shlb
add
xor
xor
inc
jne
add
mov
add
cmpsb
or
test
mov
mulb
or
sbb
mov
sub
fnstenv
mov
int
movsb
xor
rolb
mov
int
or
aaa
xchg
push
adc
jecxz
into
add
mov
mov
push
test
rcr
fdiv
decl
call
mov
dec
inc
aam
aaa
push
mov
cmp
lock
iret
mov
add
stos
int
mov
mov
stos
cwtl
les
repz
jge
mov
mov
jp
push
cmp
out
jg
movsl
dec
push
stos
cmp
imul
cmp
mov
adc
aad
test
sub
mov
sar
js
or
in
aam
repnz
movsb
lcall
hlt
pop
cld
or
and
mov
inc
roll
call
mov
mov
das
movsl
call
sbb
test
push
cmp
push
xchg
xchg
out
inc
sbb
inc
loopne
movsl
aas
pop
xor
pushf
in
dec
jmp
jno
and
aam
jl
je
repnz
sbb
addr16
popf
ja
ss
mov
mov
lock
adc
mov
xchg
or
sub
mov
cmpb
sbb
push
pop
dec
pop
loopne
sub
cltd
adc
and
cmp
outsl
adc
sti
or
mov
inc
jecxz
loop
fldenv
je
les
xorl
ret
adc
enter
mov
inc
test
in
popf
sbb
leave
in
mov
push
pop
shr
movsl
mov
mov
jne
sahf
fidivs
xor
nop
push
and
clc
xchg
adc
lock
ret
xchg
push
mov
in
out
fildl
pop
or
and
sti
jne
jmp
jle
push
or
das
dec
fcompl
into
scas
rorb
std
aas
push
jmp
cli
cmp
loopne
popf
bound
jg
mov
jl
push
and
sbb
mov
das
jecxz
adc
push
inc
push
push
jno
cld
sbb
inc
lcall
lcall
fdivr
in
stc
das
cmp
rolb
or
int3
push
ficoms
mov
sahf
fisttpl
inc
sub
in
push
iret
pop
adc
inc
push
cmp
iret
sar
test
jne
adc
pop
repnz
jecxz
jecxz
das
stos
push
add
mov
xlat
or
fnstsw
xchg
jb
stos
xchg
movb
das
inc
add
sub
and
shr
inc
xor
and
cmpsl
loope
call
idivl
mov
pop
add
ret
popf
adc
mov
dec
xor
rclb
mov
jecxz
cmp
jmp
xor
sbb
xor
cmpsb
adc
lcallw
sub
xor
lret
cmc
add
cld
ret
mov
addr16
cmp
pop
fcoms
js
jo
xchg
and
xchg
out
inc
mov
mov
and
cmpsl
popa
and
mov
xchg
insb
call
aad
and
je
cmp
push
jecxz
sti
xchg
sti
and
out
adc
xor
xchg
xor
sahf
jge
push
mov
mov
sbb
out
int
std
leave
cmp
cmp
sub
dec
or
fs
jle
add
lods
push
iret
xchg
push
inc
mov
andl
adc
test
js
xchg
push
dec
test
mov
adc
movsl
imul
cld
push
and
xchg
sbb
clc
cmc
add
lea
mov
and
mov
mov
jmp
fidivrl
push
outsl
mov
inc
daa
xchg
xchg
add
fs
fcmovu
sub
jno
shlb
dec
gs
cs
dec
int
fisubs
or
fisttpl
add
in
int3
cs
inc
cld
mov
sbb
xchg
mov
dec
aad
or
or
fimuls
je
jo
xchg
pop
call
fnsave
xor
inc
mov
and
mov
cmpsl
mov
add
js
push
cld
test
int
insl
into
movsb
insl
push
out
pop
aaa
xchg
cmpsl
std
addl
stc
or
or
incb
insb
jns
subl
adc
xchg
add
pusha
and
sub
pop
sub
pop
in
test
xor
test
fs
hlt
inc
pop
xchg
and
fildl
fidivl
das
mov
and
jg
cmpb
int
in
add
sbb
push
addl
mov
fdivs
popa
loope
sarl
sahf
mov
xor
enter
mov
adc
sub
cli
add
dec
test
add
into
clc
in
in
sub
or
adc
inc
cltd
mov
sti
and
pop
xor
add
and
jno
cmp
fdivs
movsb
mov
pusha
into
sbbl
out
sub
jae
adc
pop
les
enter
push
mov
sbb
popf
lahf
je
cmc
sbb
lret
sbb
enter
cs
mov
cmc
jg
int
mov
push
rorb
or
inc
pop
jg
jmp
or
sub
mov
addr16
push
iret
sbb
icebp
or
or
fdivrs
lods
push
out
xor
ret
mov
lock
push
jecxz
and
lret
repz
dec
jb
inc
bound
mov
addr16
aaa
pop
fsubs
inc
mov
and
xor
movsb
add
lods
sbb
jno
mov
rol
cs
ljmp
xorl
es
les
aad
push
push
sub
ss
int3
pop
push
xor
repz
je
sbb
popa
inc
pop
lahf
movsb
mov
cmp
inc
push
andl
sbb
jns
rcrl
push
arpl
loop
decl
cmpsb
mov
xorl
dec
icebp
mov
enter
je
jmp
lds
adc
ds
stos
mov
adc
scas
mov
mov
imul
mov
es
or
enter
adc
mov
sar
mov
into
decb
mov
dec
cmp
mov
mov
push
inc
push
pop
fsts
arpl
add
nop
add
pusha
or
adc
mov
jbe
jle
xor
ret
fcmovu
stc
sarb
dec
test
xor
mov
jge
pop
jne
pop
add
sub
mov
mov
jle,pn
pop
push
enter
cs
inc
je
pop
std
out
sbb
lods
out
push
lods
or
in
fs
nop
xchg
or
mov
clc
fbld
mov
sub
pop
fbld
les
dec
insl
and
mov
mov
dec
rcrb
push
xor
adc
ret
mov
pushf
xchg
fs
fmull
das
scas
dec
push
push
jnp
push
in
movsl
arpl
and
lahf
les
xchg
fldenv
sbb
fwait
add
pop
loopne
in
in
sbb
pop
aam
jbe
mov
jmp
mov
mov
pop
push
cmp
pop
movsb
test
jnp
mov
cmp
pop
dec
pushl
enter
sub
test
insl
pushf
pop
cli
stos
test
lods
cmpsb
and
fs
mov
shrl
push
sbb
sub
fiadds
add
icebp
fisttpl
hlt
arpl
scas
call
cmp
xchg
popa
pop
push
filds
mov
pop
popf
repnz
stc
sbbb
push
test
dec
aad
fisubl
jecxz
xchg
jno
xchg
push
xor
mov
shlb
fxam
mov
out
mov
shlb
aam
lcall
pop
mov
or
test
test
xchg
fisubrs
addl
adc
rorb
mov
icebp
xchg
nop
mov
jg
push
xchg
sub
fucomip
js
or
rclb
mov
fs
notl
gs
aam
mov
clc
fldt
lahf
jle
andb
test
xor
mov
scas
lds
pop
scas
jb
sti
mov
sbbl
lahf
sbb
pop
add
inc
push
mov
adc
int
shrl
repz
mov
daa
adc
imul
mov
mov
cmc
pop
leave
jmp
in
stos
inc
pop
in
add
adc
repz
push
xor
test
sub
xchg
ficompl
out
jmp
and
adc
mov
mov
xchg
mov
sbb
ss
jbe
out
fcompl
add
mov
pop
adc
pusha
fcompl
jecxz
jne
mov
test
adc
aad
mov
sbb
bound
xor
cmp
inc
jp
mov
push
ds
push
pop
repnz
xor
ja
xchg
xchg
mov
cwtl
sbbl
jecxz
scas
lcall
adc
push
and
jge
xchg
add
ret
pop
xchg
lock
jge
jp
and
aam
imul
pop
push
rclb
sahf
orl
cmp
cmp
push
cmpsb
ja
or
sub
loope
mov
mov
mov
or
lret
orb
lock
or
mov
push
inc
fsubrl
inc
and
mov
ja
call
push
popa
or
inc
mov
dec
jb
cmpsl
xor
ret
icebp
and
adc
cmp
mov
sti
or
aad
push
mov
adc
filds
xor
lods
icebp
mov
sbb
arpl
sbb
mov
jmp
call
test
pop
imul
in
push
loop
dec
in
daa
dec
pop
out
mov
pop
movsl
in
xchg
jecxz
insb
sahf
sbb
pop
stc
mov
ret
push
lret
fnstcw
push
fdivs
push
notl
fyl2x
xchg
ds
iret
stos
cli
xlat
aaa
pop
jp
data16
ret
es
xchg
mov
sar
jp
shll
push
inc
in
xor
into
mov
sbb
rclb
das
js
hlt
fcomip
ss
int3
les
or
push
add
push
stos
xchg
xor
fucomip
and
push
adc
sub
mov
lods
xor
fcomip
lock
xorl
mov
pop
lods
mov
xchg
cmp
push
divl
outsl
push
xor
mov
jno
xchg
loop
enter
sbb
into
push
test
jnp
repz
xchg
insb
push
dec
ffreep
inc
mov
mov
or
negb
push
in
mov
pop
iret
add
enter
mov
rep
mulb
xchg
iret
inc
xor
shrb
xchg
push
pop
and
mulb
inc
mov
pushf
sti
mov
xrelease
fists
or
sbb
fs
cmp
xchg
or
sti
and
xor
leave
fisttps
or
test
fnsave
jne
xchg
mov
enter
push
mov
repnz
jmp
fdivp
mov
data16
bound
xchg
xorb
pushf
push
addl
sahf
je
lds
add
add
frstor
ss
jns
out
sub
and
xchg
ss
popf
sahf
pusha
test
das
js
aad
xchg
sbb
dec
lock
js
pop
mov
dec
dec
inc
out
cld
je
xorb
jl
mov
jmp
aas
xor
mov
and
call
stos
ficomps
jae
and
xlat
ljmp
mov
mov
pop
adc
xchg
dec
call
push
pop
push
mov
pop
insb
sbb
js
lcall
pop
cmpsb
fildl
add
outsl
inc
hlt
xchg
fs
jno
jle
dec
pushf
push
xchg
outsb
addb
pop
xchg
loopne
popf
fstpl
ja
add
int3
cld
xor
scas
sbb
test
cmpsb
sbb
xor
andl
jg
xchg
es
mov
pop
push
sbb
mov
sub
mov
mov
js
fcmovnb
push
xchg
shll
pop
pop
out
test
adc
xchg
faddl
add
out
into
jo
leave
sbb
mov
movsb
dec
lods
xchg
ljmp
adc
cmpsb
lock
loopne
fmulp
fdivs
mov
std
or
stos
fdivrs
test
ror
or
and
xchg
sub
push
insb
outsb
or
ss
lods
or
popf
outsl
and
out
pop
aas
nop
flds
push
test
mov
nop
je
push
inc
mov
dec
mov
std
loope
int3
daa
mov
xchg
inc
shlb
push
push
test
mov
dec
lds
fcoms
popf
dec
mov
lcall
sub
inc
lcall
aam
repnz
dec
out
js
int
jno
rorl
mov
mov
aad
push
or
and
jl
dec
dec
sbb
sti
xchg
into
mov
pusha
dec
sbb
loopne
aaa
lahf
xorl
rcl
mov
in
std
or
sahf
push
push
fs
faddl
xlat
jmp
push
xchg
fistpl
push
inc
stos
test
cs
fiadds
xchg
icebp
int3
js
cltd
sub
aad
xchg
add
shl
jecxz
adc
sahf
insb
pop
sub
mov
insb
push
lea
pop
es
cmp
sbb
aaa
fs
adc
imul
add
mov
pop
add
dec
sbb
repz
xor
pusha
push
inc
jecxz
mov
lea
pop
adc
mov
xchg
ficoms
std
or
xor
pop
push
mov
inc
out
dec
outsb
push
rcr
scas
jle
ret
iret
mov
xchg
inc
mulb
jle
in
sub
jno
popa
sbb
outsb
xor
lock
sbb
jo
loop
push
jbe
xchg
xchg
xor
fcomi
sub
sti
push
inc
inc
mov
xchg
pop
lock
mov
jg
jle
and
imul
add
repnz
shlb
xor
sbb
inc
ret
leave
std
inc
push
or
xlat
dec
sarb
add
out
inc
mov
inc
mov
movsl
pusha
xor
sbb
out
or
mov
xchg
popa
pop
inc
mov
jmp
push
adc
and
sub
mov
cwtl
sbb
mov
call
or
lods
pop
int3
push
sbb
mov
pop
setno
lock
outsl
fcoml
sub
sub
rcrl
andb
cmp
outsb
xchg
dec
stos
mov
dec
enter
nop
pop
rclb
inc
pop
sbb
sbb
push
data16
dec
mov
data16
xchg
ret
jl
xchg
push
mov
jmp
daa
mov
xlat
xor
mov
idivl
pmaxsw
jae
in
inc
adc
test
test
popf
sbbl
out
mov
inc
loopne
jb
jns
stos
adc
hlt
mov
jge
lret
out
add
and
imul
ds
jmp
fists
cmp
sbbl
stos
mov
inc
das
inc
pop
xor
push
lods
insb
fcmovbe
das
int
sbb
mov
and
jo
popf
mov
lcall
or
call
or
pop
scas
rorb
std
sub
cli
iret
inc
ljmp
cmp
orb
xchg
insl
fistpl
aas
mov
sbb
cmp
pusha
lods
xchg
or
xor
stc
dec
imul
dec
rorl
xchg
sbb
xchg
mov
dec
test
cmpsl
lock
fdivrs
push
mov
pop
mov
mov
or
mov
clc
jecxz
pop
xchg
sub
std
or
inc
adc
fcmovnbe
xor
fwait
sub
adc
or
mov
cmp
lock
inc
js
and
pop
fiadds
test
pop
inc
cmpsb
xlat
jne
xchg
and
mov
jae
mov
adc
mov
mov
je
mov
sub
out
in
nop
gs
bndstx
sub
ret
dec
fmuls
insl
fs
stc
shrb
shr
sti
shll
mov
cmp
sub
xchg
insl
outsb
and
pop
bound
fbstp
shlb
shll
xor
cmp
insl
sbb
jo
mov
clc
dec
orb
xchg
cmp
aas
hlt
push
clc
fcomip
sbb
fnstsw
scas
inc
out
pop
mov
rolb
cmpsb
mov
or
das
aaa
lock
jno
mov
cld
lock
jo
lods
mov
ret
mov
sbb
stos
push
xor
sub
dec
fcmovnb
lret
add
xorl
and
push
jecxz
xor
sub
adc
inc
jge
mov
sbb
or
gs
pop
push
mov
les
imul
jg
ja
in
outsl
das
loop
scas
sub
lret
adc
push
scas
pop
in
pop
js
call
rorl
mov
in
out
xor
pop
popf
test
es
sbb
mov
mov
cli
out
out
xor
ret
scas
aad
fcompl
jns
push
push
loope
mov
fisttpl
test
dec
lret
inc
jns
lret
cmp
call
or
stos
cli
mov
xchg
sub
or
fidivl
loopne
push
fnstsw
pop
dec
adc
push
or
cmp
mov
outsb
cld
popa
ss
cmp
fucom
jb
xor
clc
scas
cmpsl
notl
outsl
mov
shrb
dec
es
jmp
xchg
repnz
sbb
sub
or
popfw
inc
ss
int3
lret
sbb
push
rol
es
sbb
pop
push
les
sbb
adc
sbb
mov
mulb
adc
push
push
hlt
push
jnp
js
push
inc
pop
lea
cld
add
mov
mov
out
popf
push
jg
int
cmp
scas
scas
in
add
sbb
and
push
sub
dec
or
repnz
mov
outsl
out
popf
dec
ret
enter
mov
inc
pop
popf
mov
ret
mov
mov
mov
xchg
movsl
icebp
adc
shlb
outsl
adc
mov
popa
sub
pop
std
cmpsb
mov
and
or
insl
mov
nop
push
mov
mov
mov
push
scas
loop
cmpb
insb
push
cmp
pop
icebp
dec
cmp
fs
dec
movsl
fsubs
sbb
nop
push
aaa
xchg
pop
inc
push
xchg
dec
mov
xor
std
lret
mov
push
in
mov
in
loopne
push
shrb
stos
cmp
mov
cmpsb
mov
push
ja
and
mov
mov
shll
pop
movsb
sarl
push
pop
stos
push
mov
inc
mov
sub
test
mov
shll
movsb
or
or
lock
imul
es
xchg
xchg
dec
mov
dec
xchg
fadds
aad
dec
sbb
jl
push
leave
repnz
cmp
cmp
jmp
add
imul
int3
jecxz
outsl
in
mov
enter
in
dec
inc
push
adc
out
xchg
icebp
iret
and
mov
mov
gs
push
ficoml
mov
add
lods
ljmp
mov
movsb
movsl
divl
add
dec
insb
es
les
call
loope
insb
sbb
cmp
cwtl
popf
hlt
call
mov
cmp
xchg
out
icebp
out
sbb
adc
andl
arpl
repz
rol
fstp
jns
popa
add
xor
hlt
xchg
adc
xchg
inc
push
int
dec
push
hlt
addl
xchg
mov
xchg
hlt
mov
pop
movsl
out
ds
dec
dec
jmp
or
addl
mov
xor
mov
adc
adc
outsl
jl
je
imul
in
mov
int
addb
xor
jno
mov
dec
or
pop
adc
out
xlat
jg
jne
adc
rcrl
movsl
cmpsl
pop
cmp
icebp
mov
sarl
sub
xchg
cmp
pop
imul
mul
fsts
pop
push
sub
jp
dec
sub
sbb
push
inc
clc
lahf
xchg
sub
jecxz
clc
add
lock
sahf
mull
xchg
dec
int
fstpl
js
push
dec
sahf
inc
add
mov
repz
xchg
jno
mov
pusha
std
and
lea
sbbl
js
jp
or
data16
and
clc
lretw
xor
lods
jle
rorb
mov
lret
xor
pop
das
out
cld
sub
mov
sbb
mov
sub
mov
pusha
or
push
mov
lea
sti
pop
adc
repnz
fmul
loop
mov
dec
jmp
loopne
fwait
xchg
rorl
sbb
jecxz
mov
in
push
cmp
dec
mov
rclb
push
jnp
push
push
stos
aas
push
dec
xchg
cmpsb
xor
push
jle
data16
adc
cmp
cwtl
and
add
pop
adc
inc
aad
sbb
push
push
sub
xchg
jae
push
sub
xchg
test
dec
push
mov
inc
int3
mov
adc
cmc
mov
loop
fnstenv
mov
add
pushf
leave
inc
repnz
cld
sub
mov
fmull
dec
sub
outsb
rcrb
mov
or
fimuls
push
cmp
xchg
xor
dec
addb
jbe
stc
adc
mov
adc
push
or
pop
mov
or
loopne
xlat
push
pop
shll
jae
incl
jmp
cmp
dec
or
pop
hlt
xor
fnstenv
mov
add
std
in
mov
xchg
in
xchg
ss
pop
ja
rcl
dec
out
rorb
iret
pusha
jge
xchg
or
jb
mov
fwait
scas
xchg
jmp
sbb
mov
cmpb
ss
mov
pop
push
and
ret
out
stos
inc
mov
add
test
mov
or
test
aad
sarl
repz
add
ljmp
shr
push
jg
push
jb
add
fnsave
pop
jns
xchg
cmp
aas
lods
mov
jmp
inc
add
sti
mov
mov
mov
js
aad
mov
jnp
add
xchg
stos
push
mov
rcll
rolb
sbb
mov
mov
pop
repnz
popa
lock
mov
jbe
jno
test
xchg
fisubrs
aas
jecxz
mov
cmp
test
sarb
cmpb
popa
sub
adc
stos
in
inc
jle
inc
xchg
ja
into
pop
js
test
mov
adc
mov
mov
mov
pushf
rcrl
and
out
push
cmp
fnstsw
pop
or
ja
inc
xchg
push
pop
dec
add
shl
and
mov
pop
stos
les
insl
push
scas
cmp
out
mov
push
lds
cltd
add
cmpsb
out
mov
lahf
shl
or
pop
jnp
sbb
mov
inc
adc
das
pop
jecxz
popf
test
inc
mov
test
mov
add
shr
fcomps
mov
out
jo
pop
and
push
aaa
push
dec
negl
adc
cmp
cmc
mov
addl
fsubrl
pop
loop
out
mov
sbb
shrl
std
xchg
add
xchg
mov
aaa
inc
test
mov
fiaddl
std
xor
aas
jmp
xor
mov
jecxz
or
loope
arpl
mov
mov
jmp
ret
mov
push
lods
fldcw
addr16
dec
dec
or
pop
sbb
rcrl
movsl
mov
movsl
mov
into
loopne
xchg
les
rcrb
sub
loopne
mov
repz
cmp
daa
xlat
add
xchg
pop
push
test
lds
stos
stos
xchg
add
addr16
push
call
push
push
lcall
pop
ja
mov
push
push
dec
shlb
adc
mov
mov
orl
mov
or
es
cltd
pop
fimull
adc
pop
insl
sbb
leave
addr16
sbb
jmp
icebp
ljmp
sbb
jns
out
or
pop
out
push
mov
sub
sub
jle
cmp
mulb
cmp
ja
stos
adc
push
and
and
mov
add
add
or
sarb
out
std
sbb
dec
fxch
adc
and
sbb
loop
jns
pop
bound
push
imul
lcall
sub
sbb
movsb
inc
mov
imul
jle
nop
aam
mov
mov
outsb
jne
lock
mov
inc
push
scas
ret
cmp
cmpsl
fdivs
xor
cmp
pop
ljmp
orl
dec
pop
fbstp
lds
jl
shll
push
add
sub
fs
xchg
pop
xchg
dec
ljmp
inc
cld
inc
xor
fildl
repz
setl
xchg
cli
lret
xchg
adc
mov
xor
testb
xor
jl
fiaddl
sub
sub
mov
adc
inc
cwtl
push
les
mov
mov
scas
xchg
mov
mov
leave
inc
inc
inc
pop
cmpsb
cwtl
adc
outsb
jg
loop
insl
push
xor
mov
push
lds
test
mov
cld
popf
jp
test
adc
loope
mov
pop
or
mov
sbb
in
xor
cmp
sbb
out
cmp
call
xchg
jne
stos
cmp
sbb
int
mov
lret
nop
adc
inc
xor
fwait
mov
sub
push
in
xchg
lahf
in
loope
adc
pmaddwd
mov
xchg
ret
lds
add
jns
xlat
bound
adc
sbb
enter
movsl
push
push
jbe
pop
pop
mov
inc
mov
jg
outsl
pusha
mov
test
and
test
dec
pop
xlat
push
sub
push
mov
fwait
xlat
aaa
mov
jge
mov
fstl
insl
push
sub
aas
cmc
push
fdivrp
lods
jno
push
repz
dec
mov
int3
xor
fistpl
adc
mov
pop
mov
cmpps
push
or
cli
cmp
cs
push
cwtl
mov
adc
xlat
daa
imul
cmp
outsb
mov
sub
pop
push
scas
cmpsl
mov
pushf
jno
movsb
jecxz
sbb
sbb
hlt
mov
das
sub
ljmp
insb
test
fwait
mov
lds
or
pusha
pop
cli
imul
sub
loope
ja
jbe
xlat
cmc
cmp
or
pop
sbb
es
inc
pushf
mov
dec
mov
fdivrs
pop
mov
dec
sbb
icebp
int
lahf
jmp
mul
movb
nop
ljmp
in
nop
mov
mov
dec
leave
xor
xor
ljmp
ljmp
aaa
jmp
mov
jp
mov
inc
jno
aad
xlat
cmpsb
xchg
mov
in
mov
push
mov
cmp
push
xchg
xchg
popf
pusha
dec
and
adc
loopne
scas
lds
jbe
loope
jg
sbb
mov
sti
dec
sbb
mov
cs
ja
add
lcall
dec
adc
lcall
sbb
sub
pop
jnp
jmp
fnsave
and
add
cmp
addr16
insb
stos
cltd
negb
xor
sbb
inc
lahf
shrl
cmc
testb
jl
int
sbb
and
imul
jns
xlat
mov
lock
sarl
or
pop
mov
push
je
add
cmp
gs
test
test
clc
push
adc
dec
dec
adcb
movsl
mov
pushf
xchg
out
inc
lret
jbe
add
cld
push
fstpt
pop
inc
imul
mov
subb
mov
or
ret
adc
leave
adc
sti
inc
ja
push
mov
imul
out
dec
xchg
pop
je
mov
jl
jae
pop
ds
jo
js
testl
decl
ret
jg
or
fisttpl
enter
shll
or
xor
aas
mov
xchg
int
jle
iret
cmp
sbb
movsb
out
loop
ret
jmp
mov
leave
sub
fstpt
mov
jp
lret
or
mov
sub
lds
test
adc
inc
xchg
enter
mov
push
stos
and
aaa
sub
sarb
lods
lea
out
fsubp
sbb
sbb
dec
and
sbb
fisubs
pop
adc
mov
xchg
cmp
xchg
ss
ljmp
popa
mov
dec
jp
cmpsb
fnstsw
out
xor
adc
xchg
push
fisubl
jg
ret
or
mov
push
jnp
dec
and
mov
push
out
sub
stos
mov
jecxz
ljmp
ret
rcrl
nop
test
ds
mov
loopne
dec
cld
pop
push
loopne
sbb
cli
daa
ss
xchg
dec
and
repz
dec
stos
adc
imul
int
dec
mov
loop,pt
xor
or
mov
mov
jo
jne
mov
arpl
cwtl
push
sbb
push
pop
cmp
xor
enter
je
sbb
int
fldenv
jae
in
fsubrl
in
enter
fmull
pop
imul
bound
mov
mov
lds
lret
in
add
or
inc
mov
or
add
pop
dec
outsl
dec
add
popa
adc
push
shrl
rep
js
or
push
mov
mov
jle
xor
sbbb
adc
or
ljmp
mov
out
lret
mov
sub
std
repnz
outsl
fsubr
sbb
mov
int
mov
pop
mov
and
lcall
and
call
dec
ds
xlat
in
jle
and
and
fcoml
or
and
movsl
inc
xchg
dec
mov
jp
ret
popa
xchg
or
xor
clc
push
movsb
scas
imul
add
pop
in
ds
push
aad
xchg
mov
inc
xor
roll
lcall
lods
mov
or
scas
xor
sahf
push
push
popa
jle
repz
lds
adc
pinsrw
push
clc
mov
test
pushf
testl
mov
mov
inc
pop
mov
clc
insb
pushf
fcmove
xchg
dec
aam
into
mov
and
in
lahf
icebp
cmovns
out
pop
sarb
mov
ja
mov
lret
mov
mov
addl
mov
add
xchg
xor
xor
gs
jne
and
movsl
or
xchg
push
mov
inc
rorl
and
pusha
mov
pop
mov
jb
and
cmp
call
scas
mov
scas
int3
mov
jge
lock
mov
and
mov
push
jae
movsl
sti
or
mov
or
ja
sbb
jo
stos
outsl
dec
mov
adc
and
adc
jbe
push
loop
push
push
pop
xor
jl
mov
rolb
push
in
insb
mov
idivl
nop
push
mov
mov
xchg
dec
mov
inc
and
mov
scas
jbe
jbe
mov
inc
loope
clc
lock
xor
pop
stc
xor
push
push
jbe
fs
enter
mov
imul
add
mov
shl
jnp
jnp
in
scas
faddl
mov
jno
xchg
xor
sbb
int3
and
push
sbb
mov
popa
xchg
pop
mov
sub
out
ret
adc
xchg
js
in
mov
test
ret
xor
int
loop
pop
push
in
lods
filds
jl
xchg
xor
jle
cmp
popa
push
mov
sub
fisttpll
mov
sbb
sbb
shlb
shlb
fisttpll
sub
mov
mov
and
lods
mov
inc
xchg
sub
add
sub
add
js
xor
aas
dec
imul
sahf
ret
into
js
cmp
or
xlat
out
lods
movsl
rcll
loope
sti
adc
or
mov
mov
jge
push
or
imul
aaa
rcrb
jo
jnp
dec
movsw
pop
mov
push
sub
popa
mov
xchg
cmp
xchg
jb
ss
mov
ss
or
js
fwait
and
xor
out
dec
or
cmpsl
cld
iret
mov
mov
outsb
das
add
andb
inc
pusha
in
or
jo
stos
cli
fstpl
cwtl
inc
addb
rol
xchg
fsts
es
ds
sub
shlb
scas
sub
xor
insb
jns
pushf
ret
test
jne
je
pusha
push
push
lret
cmp
es
sti
jns
lret
jb
dec
jns
push
add
std
push
mov
xchg
jecxz
push
mov
stc
cwtl
fwait
push
movsb
xor
ret
fstl
je
adc
mov
fnsave
inc
into
inc
lds
sahf
mov
adc
je
cld
cmp
mov
pop
jbe
cmp
mov
popf
jecxz
mov
imul
xchg
aaa
mov
mov
cmpl
gs
ljmp
xchg
lea
je
cmp
push
mov
adc
xchg
mov
clc
and
test
cltd
xor
les
insb
cmp
ss
xchg
mov
les
and
loop
push
fimull
mov
push
nop
pop
pop
xchg
add
sub
gs
dec
pop
mov
scas
popf
push
es
sbb
xchg
insl
das
stos
xchg
sbb
repz
and
gs
mov
mov
cmpsb
mov
and
cmpsl
cmp
subl
adc
sti
or
sub
jp
imul
and
xchg
into
cmp
xchg
lds
js
xlat
sarb
loope
leave
lahf
pop
xlat
es
jmp
xchg
aam
js
out
inc
lahf
mov
adc
loopne
dec
cmp
imul
lock
xchg
dec
jb
icebp
or
jae
xchg
pop
sar
push
ret
xor
inc
sub
and
mov
mov
jb
jo
lods
sbb
mov
idivl
cmpl
sar
jb
and
mov
jecxz
pop
mov
push
jle
fidivrl
lcall
aam
enter
ret
add
inc
movsl
aad
jl
rcrl
jae
jge
or
xchg
push
movsl
mov
lret
jno
or
stos
adc
adcb
loopne
sbb
sahf
stos
jmp
popa
jb
sub
push
mov
mov
roll
stc
mov
or
adc
hlt
ret
mov
or
push
inc
adc
inc
sbb
movsl
pushf
sbb
or
add
int
fbld
mov
adc
bound
push
add
pushf
mov
shll
iret
xchg
mov
cltd
lds
mov
mov
jnp
mov
xchg
mov
dec
cmp
xor
jb
dec
insl
dec
cmp
add
cmp
mov
xchg
xchg
mov
ret
fiadds
popf
jo
mov
jo
push
jbe
pop
inc
imul
cli
cmp
dec
ret
and
out
mov
push
mov
cli
aas
dec
test
or
lods
test
aam
jecxz
mov
shll
lahf
cli
adc
stos
sub
mov
or
hlt
and
fsubl
mov
ds
int3
add
push
xchg
dec
fwait
jmp
push
mov
mov
cmp
push
jb
xorb
cmp
pop
inc
lock
pop
xchg
out
xchg
cwtl
stos
mov
repz
jp
sbb
cmp
push
shr
negb
cmp
or
insl
adc
test
push
push
xchg
pop
or
xor
movsl
ljmp
mov
in
or
sub
mov
pcmpeqw
sub
inc
inc
dec
cmp
mov
xchg
push
and
subb
imul
sarb
pop
movsb
pop
inc
lds
pop
xchg
sub
mov
mov
mov
movsl
ss
out
aad
add
and
dec
cmpsl
mov
dec
lcall
sub
nop
in
sbb
or
mov
rcl
mov
rorb
xor
out
mov
and
bound
pop
rorl
insb
imul
out
in
xlat
push
lods
dec
pop
das
mov
mov
jbe
xor
int
addr16
outsb
sub
lcall
xor
sub
nop
insb
dec
push
jne
sti
cmp
rcl
mov
push
xlat
int
mov
mov
pop
jb
stos
hlt
lds
mov
xchg
mov
test
mov
pusha
cmpsb
test
jne
aam
fnstsw
jbe
into
cld
lds
scas
hlt
andb
aam
imul
sub
dec
pusha
mov
mov
fcoml
daa
xor
and
mov
cmp
or
movb
icebp
hlt
push
lds
repz
stos
xchg
std
jmp
xchg
orb
cli
push
jmp
xchg
gs
jecxz
xchg
or
or
sbb
mov
or
mov
lods
push
pop
sbb
push
shlb
adc
fsubl
addr16
fstl
xchg
cmc
fucomp
int
test
pop
inc
sbb
cltd
xor
iret
imul
std
outsl
push
jg
adc
out
sub
mov
ficomps
pop
mov
pop
in
pusha
icebp
sahf
push
jne
enter
dec
xchg
jo
ja
movsl
inc
lods
push
mov
loopne
outsb
pop
pop
insb
hlt
loopne
shl
lret
dec
pusha
jmp
ficomps
iret
xor
inc
test
es
xchg
xor
repnz
je
inc
mov
repz
in
popf
cmpb
add
xchg
sbb
add
test
shrb
jae
mov
lock
in
mov
mov
inc
lahf
xchg
lret
mov
mov
shr
jns
sub
rcrl
mov
cmc
lock
lret
cmp
inc
imul
lods
xchg
arpl
stc
cmp
push
imul
negb
inc
test
xor
or
jmp
add
scas
push
push
test
repnz
insb
in
jmp
cmp
dec
ret
push
mov
stos
scas
sub
cmp
aam
pop
and
enter
andb
xchg
or
lods
xor
pop
inc
in
fiadds
mov
pusha
das
daa
lds
mov
mov
iret
mov
xchg
mov
imul
cmp
or
lods
gs
out
xor
sbb
cmp
popfw
cmpsb
jp
aam
data16
push
sub
mov
scas
insl
sbb
inc
or
cmp
jmp
mov
aad
out
pop
xchg
outsl
sbbb
scas
push
test
faddl
sar
sub
ds
pop
cmp
push
pop
sbb
mov
lea
inc
stos
or
push
lds
fsubs
push
cmp
xchg
pop
lahf
cmpsb
mov
popa
cld
jnp
mov
mov
jnp
int
cmp
popa
lret
xor
mov
mov
outsl
mov
ljmp
inc
xchg
mov
inc
sub
aaa
jecxz
push
dec
mov
fdivl
cmp
rcl
call
stc
mov
andb
mov
popl
mov
sub
rorb
lock
mov
aam
mov
ret
mov
dec
pop
and
mov
push
push
pusha
or
not
pop
mov
cmpsb
mov
push
xchg
xor
imul
lods
imul
andb
jo
movsb
or
nop
enter
ret
push
loopne
cmc
outsb
sub
push
in
inc
xchg
cwtl
stos
fcoms
out
sub
test
and
jp
mov
dec
xchg
and
imul
mov
push
loop
xchg
enter
push
sub
add
inc
adc
push
mov
jge
xchg
mov
out
jae
sarb
inc
jl
xchg
mov
iret
pusha
mov
lds
je
pop
jle
mov
dec
pop
mov
pop
lods
inc
dec
shrb
xchg
inc
bound
or
or
outsb
and
or
in
add
repz
in
pop
in
imul
push
jmp
test
pop
in
pop
inc
mov
xor
shl
mov
pop
scas
insb
jno
ja
les
lahf
loope
out
in
lcall
daa
es
negl
mov
mov
jge
mov
sbb
or
lea
lods
scas
mov
inc
sub
out
wrmsr
addl
je
popa
sub
pop
inc
sbb
out
inc
xchg
int
jp
add
push
fwait
sub
popf
mov
xchg
pop
mov
adc
jmp
sub
scas
pop
pop
notl
into
lock
out
jmp
das
mov
inc
xchg
jno
call
mov
sbb
lret
or
in
mov
test
repnz
shr
pop
loop
cmp
add
xchg
lcall
mov
outsl
mov
sti
loope
popa
push
pop
mov
lret
insl
pop
in
push
out
jns
pop
mov
and
sub
clc
sbb
sbb
subb
mov
xchg
mov
leave
repz
add
pusha
ret
movsl
pop
adc
cwtl
in
adc
lods
mov
xchg
xchg
mov
fcoms
fadd
int
adc
push
test
mov
arpl
jbe
out
cmp
xorps
push
mov
shll
dec
sbb
pop
aam
fsubrs
es
lcall
nop/reserved
idiv
and
mov
dec
outsb
mov
mov
stc
out
inc
arpl
or
mov
jnp,pt
aam
scas
call
or
jl
mov
stos
lahf
jb
loope
arpl
sub
negl
inc
mov
gs
orl
lds
jg
mov
xchg
dec
sbb
sub
sub
rclb
pop
movsb
cmp
stc
mov
getsec
pop
or
sarl
xchg
jmp
or
adc
gs
scas
mov
jl
in
ret
lret
mov
test
jb
sbb
enter
cmovb
lds
inc
xchg
jle
loope
sbbl
sub
sbb
or
stos
insb
or
xor
into
add
dec
enter
and
faddl
jae
gs
movsb
pushf
rorl
xchg
divb
add
dec
mov
cmpsb
outsl
jge
cmpsb
fucomip
pop
in
mov
mov
xchg
sub
jl
das
shl
lret
pushf
pop
pop
push
or
mov
sbbl
mov
and
outsb
sti
jns
cmp
or
xor
and
adc
daa
and
add
sub
jmp
out
ss
or
jns
movsb
iret
test
sbb
ret
daa
mov
inc
jns
lea
fsubp
das
rolb
loop
jge
mov
push
fwait
inc
shr
popa
fcomip
decl
mov
popa
outsb
mov
adc
pop
int3
stos
jp
or
sub
jne
out
js
xor
adc
jg
dec
xor
scas
in
cmp
mov
std
xchg
dec
int3
repnz
push
add
out
jp
pop
int3
sbb
shrl
js
adc
pop
mov
mov
xor
jmp
or
xchg
dec
xchg
adc
int
pushf
mov
in
xchg
mov
cmpsl
and
iret
lea
add
or
cltd
adc
call
dec
test
mov
lea
cmp
add
pop
and
adc
roll
sub
jp
insl
mov
or
call
fbstp
xchg
cmpsb
jge
ds
fnstenv
movsl
lcall
mov
cltd
xor
xor
out
subl
cmp
aas
push
rorl
push
imul
mov
jmp
pushf
lcall
and
or
or
xlat
pop
fisubrs
leave
sti
sub
cmp
push
push
in
pop
gs
jl
adcb
sbb
jo
or
sub
xchg
out
pusha
sub
add
mov
shlb
inc
add
pop
sub
loopne
test
sti
fs
andl
xchg
and
inc
jbe
sahf
jg
pushf
imul
jmp
dec
pop
cmpsl
dec
jp
adc
divb
pop
sub
mov
enter
fwait
xchg
or
jl
pop
mov
push
cmp
les
hlt
xchg
pusha
or
pushf
cli
repz
ja
loop
inc
mull
mov
pusha
outsb
sbb
dec
jmp
stc
mov
push
push
out
dec
dec
push
dec
cmp
insl
das
std
xor
out
shlb
in
aam
add
loopne
dec
lea
mov
clc
xor
in
ret
test
loope
fnstsw
popa
push
mov
shll
in
pop
mov
pop
fisubrs
sub
xor
stc
fwait
mov
inc
jp
js
cmc
xor
mov
adc
fwait
xor
movsb
data16
fistps
into
stos
imul
pusha
mov
aaa
sub
mov
scas
adc
xorb
in
mov
setae
lcall
mov
fstpl
imul
aaa
xlat
inc
cmp
cld
dec
pop
je
or
mov
cmpsl
mov
out
test
or
outsl
repz
scas
push
mov
addr16
xor
je
bound
fsubr
imul
add
adc
gs
xor
imul
xchg
out
test
stos
out
mov
dec
in
inc
popa
pop
imul
icebp
dec
xor
adc
inc
fldenv
stos
inc
jl
movl
hlt
inc
jmp
pop
pop
xchg
sti
in
and
push
add
les
sub
fldcw
stos
jae
push
les
push
test
inc
sbb
pop
fs
jne
sti
sbb
shrl
out
ds
test
pop
mov
mov
push
sahf
in
inc
mov
xor
lods
pop
push
sbb
fdivr
cli
fsubrl
lahf
stc
jl
repnz
fmuls
stc
insb
sub
add
scas
mov
add
out
jne
or
movsl
sbb
nop
dec
ja
fstpt
adc
lds
xchg
jmp
test
and
sub
mov
fisubl
sbb
fs
xchg
jnp
imul
inc
inc
test
inc
and
notl
shlb
fisubs
cmp
or
jns
add
mov
cli
push
cmp
stos
out
rcl
adc
adc
push
xchg
inc
add
enter
jne
mov
inc
rorb
xchg
adc
sti
xchg
mov
leave
jns,pn
jl
ss
sbb
push
lret
xor
push
xchg
inc
sub
jmp
pop
adc
add
cwtl
sbb
mov
ljmp
pushl
iret
das
fadds
leave
sub
jae
mov
sub
mov
sub
pop
mov
mov
and
ficomps
cmc
inc
and
xchg
xor
movsl
adc
cli
xchg
in
aas
mov
pushf
or
sbb
adc
lock
add
pop
imul
xor
push
sbb
and
and
out
xchg
dec
imul
sbb
and
push
loopne
into
mov
scas
lcall
fwait
lds
push
jb
push
sbb
iret
sub
lret
jg
sti
shlb
lds
and
arpl
jmp
dec
or
sbb
in
mov
pop
add
repz
outsb
xchg
xor
push
inc
pop
daa
movsb
dec
jecxz
mov
les
xor
add
xchg
xorl
sti
xchg
loop
mov
sub
jl
stos
adcl
gs
mov
push
mov
stos
sub
pop
and
testb
jns
or
mov
xchg
pmaddwd
addb
je
fsubl
xchg
jns
cmc
jne
pusha
push
aaa
jbe
xor
dec
es
mov
leave
lods
pop
pop
push
inc
jge
mov
in
inc
lods
into
mov
cmp
out
add
mov
imul
sub
decl
shl
pop
mov
or
addb
xchg
shr
pop
sbb
js
jmp
jnp
lods
pop
scas
push
dec
std
mov
xorl
mov
inc
push
cmp
sbb
or
jo
jo
imul
ret
mov
fs
iret
fwait
scas
leave
push
cmpl
push
inc
imul
inc
pop
rolb
adc
jge
rclb
icebp
out
mov
jecxz
imul
jmp
leave
jecxz
pop
mov
pop
sub
divl
mov
nop
cwtl
mov
xlat
sub
gs
push
movb
xor
xlat
or
jmp
out
sbb
shlb
les
push
dec
jge
cmp
test
mov
out
stc
icebp
inc
hlt
leave
or
outsl
leave
rolb
enter
hlt
call
ret
cwtl
lret
mov
lahf
mov
shl
sub
jmp
cmpsb
push
mov
cld
lret
scas
mov
into
adc
dec
out
cmp
mov
jns
xor
in
push
jl
shlb
sti
sub
jg
mov
into
xchg
xor
das
gs
and
inc
push
ljmp
mov
sub
push
repnz
test
or
ret
xor
je
loope
aas
pushf
subl
xchg
push
push
fstpl
pop
mov
fimuls
testb
push
jge
das
les
scas
mov
mov
xor
dec
int
mov
loop
cld
pop
mov
dec
cmp
leave
or
lahf
mov
fxtract
popa
daa
and
dec
mov
inc
xor
push
jae
push
out
sbb
enter
cld
and
dec
add
cmp
cmpsl
out
mov
push
loope
adc
int
shl
adc
jae
outsb
pop
addr16
insl
xor
mov
aad
popa
lret
outsl
shl
xchg
incl
push
adc
mov
inc
dec
or
sbb
stc
mov
aaa
jne
mov
inc
push
sub
or
add
cmp
xchg
dec
xchg
mov
push
xorl
add
fidivl
es
in
stos
movsb
adcl
les
xchg
lock
push
enter
lahf
inc
add
jbe
dec
das
pcmpgtb
bound
or
lahf
cmp
aaa
add
incb
dec
mov
mov
or
adc
cli
aad
std
lock
in
cmpsl
fdivrl
jp
in
fsub
out
add
mov
jp
xor
stc
das
cmpsl
lcall
in
sar
push
scas
frstor
sbb
cmc
pop
xchg
in
sbb
das
xchg
mov
mov
nop
popa
stos
pop
xor
push
sbb
pop
lcall
decb
mov
shl
popa
cmc
pop
pop
enter
iret
sbb
cmp
roll
jg
mov
jl
ja
xadd
jb
jecxz
insb
xor
out
cltd
sub
test
adc
test
loop
mov
dec
pop
inc
adc
xchg
movsb
and
mov
dec
push
int3
mov
cmp
cmc
or
mov
addr16
dec
fnstenv
enter
repnz
mov
mov
decb
scas
dec
clc
pop
insb
mov
and
pushf
or
mov
xchg
and
fisttpl
mov
xor
ss
inc
cmp
xchg
in
push
inc
gs
mov
jne
sub
sbb
pop
push
mov
dec
das
cmc
and
shrb
xor
dec
inc
jmp
cltd
cmp
shrl
and
push
add
xor
mov
test
icebp
jbe
push
add
shrb
cmpsb
xlat
hlt
shrl
pop
jecxz,pt
push
stos
mov
push
mov
or
aam
mov
dec
adc
xchg
add
add
stos
repz
mov
mov
hlt
cltd
inc
fmuls
iret
movsl
and
xchg
inc
sahf
inc
daa
pop
lret
loop
fucom
ret
daa
or
leave
add
enter
popa
lcall
fs
push
lea
adc
jbe
mov
push
es
ss
xchg
mov
adc
xor
icebp
xor
push
sbb
xchg
cltd
push
out
xchg
sbb
adc
cwtl
scas
lods
jl
sub
push
rolb
scas
push
loope
xchg
andb
xor
or
fisubl
pop
jnp
repz
push
cli
fidivs
pushf
fbld
subl
xchg
push
inc
shll
inc
xlat
js
mov
stc
out
out
aam
dec
fwait
sarb
jge
out
scas
xor
lods
stc
sub
stos
repnz
imul
sub
jmp
loop
mov
nop
inc
and
pop
jns
xchg
pop
jne
enter
xor
inc
mov
imul
adc
cmpb
sbb
jno
iret
adc
mov
daa
mov
cmpsl
jl
cmp
faddl
push
clc
lds
insl
xchg
fdivp
push
sbb
sar
sar
mov
mov
inc
dec
cltd
icebp
sub
sbb
addr16
push
popa
or
les
inc
push
and
or
into
aas
and
xchg
pop
sbb
mov
mov
or
fs
in
sti
mov
enter
mov
iret
ror
test
dec
out
mov
xor
cmp
rcll
lds
test
lcall
xor
iret
aam
pop
push
das
ljmp
aas
mov
pop
mov
push
jmp
mov
or
or
imul
lock
mov
pop
in
aaa
fstpl
lock
cmp
mov
fcomps
xor
ss
fldenv
and
jmp
fcmovne
int3
inc
leave
sbb
and
and
and
fnsave
or
mov
fnstsw
mov
lcall
mov
dec
popf
cmp
cli
and
jge
and
or
ja
mulb
cli
mov
xchg
or
movb
shll
push
mov
in
jns
xor
cmp
daa
mov
ret
mov
das
pusha
fisubl
inc
mov
jbe
push
mov
insl
imull
rolb
cmc
int
sbb
out
shlb
or
sbb
dec
and
testb
insl
dec
repnz
rorl
les
add
xchg
mov
stc
loop
rcl
call
jns
adc
mov
ret
notl
stos
and
stos
jge
daa
fs
movsl
hlt
imull
lds
mov
stos
pop
loope
lea
and
sti
rclb
repz
mov
sub
movsb
adcb
psubsb
add
pop
xchg
test
stc
test
fpatan
sub
insb
jno
add
or
movsl
out
cmpsb
cmp
fisubrs
push
mov
out
ret
push
mov
outsl
and
push
leave
outsl
popa
mov
sahf
cmpsb
sbb
mov
andl
fcoml
xor
inc
lods
adc
cmpsl
fsubr
sub
jl
sub
or
lock
lods
or
outsl
shrl
jne
fwait
mov
xchg
xacquire
and
adc
outsb
mov
sti
stc
aam
cmp
mov
or
pop
inc
and
push
push
sbb
test
aaa
into
sbb
jno
mov
aad
cwtl
mov
ret
or
loopne
jne
packuswb
clc
pop
jmp
pushl
add
sahf
mov
pop
mov
imul
dec
test
ss
sub
sub
mov
add
mov
xor
out
xlat
mov
or
and
pop
mov
jne
push
stos
lock
inc
popa
test
push
xchg
pop
push
jae
and
or
scas
jae
adc
jl
adc
stc
enter
mov
fwait
add
mov
sarl
push
fdivr
cwtl
popf
int
scas
imul
adc
add
inc
mov
out
mov
sbb
es
push
pop
js
test
insb
mov
add
adc
lods
lods
inc
outsl
jns
dec
popf
mov
adc
mov
inc
lock
ficomps
push
mov
dec
xchg
clc
push
xchg
cmc
xlat
jnp
dec
push
not
lock
movsb
ljmp
aas
push
scas
mov
leave
mov
sbb
lea
mov
lods
nop
xor
sub
sbb
filds
xchg
cmp
dec
fwait
xchg
inc
xor
jmp
pushf
mov
add
mov
fidivl
insl
movsb
scas
inc
mov
fisttpll
xchg
mov
add
push
jne
mull
push
adc
jg
es
in
add
adc
push
call
test
xlat
faddl
outsl
stos
nop
scas
jb
pop
cmp
int
cli
into
popf
loop
mov
aam
lret
mov
into
ret
bound
ret
xchg
andl
mov
adc
loope
in
aas
mov
out
fisubs
js
in
or
mov
fwait
jne
mov
pop
out
iret
push
xchg
repz
lahf
aam
lds
xchg
lret
dec
movsl
sti
mov
ja
lock
test
jp
dec
mov
pusha
jns
je
das
popa
lret
mov
mov
lock
cmpsb
xchg
mov
xchg
mov
sbb
adc
sbb
mov
cmp
adc
stos
sub
stos
and
test
mov
cmpsl
fwait
scas
jle
push
lods
add
rclb
jg
xchg
sbb
aad
xor
lea
iret
sbb
sbb
stc
pop
rcr
loope
mov
add
cmp
pushf
adc
fistpll
shll
repz
out
ret
inc
mov
fcmovne
or
scas
out
cmp
movsl
mov
push
lock
fwait
or
idivb
out
xor
push
inc
test
ror
mov
dec
clc
sub
ss
test
cmpsb
cld
xchg
loopne
mov
push
sub
std
andb
divl
pop
pop
sub
icebp
bound
jae
add
mov
int
jg
mov
xor
lock
fldl
imul
repnz
fstpt
fiaddl
add
ret
xchg
test
imul
dec
add
divl
insb
test
adc
ror
cmp
jl
sbb
stc
cwtl
xor
mov
jne
test
push
fcomi
shl
mov
mov
loop
call
aaa
test
shlb
dec
and
jge
test
sbb
inc
cvtpi2ps
nop
les
xchg
pop
popf
dec
xor
and
mov
dec
cmp
dec
mov
add
dec
push
push
cmp
lret
hlt
mov
stos
or
mov
stc
and
adc
adc
rcrl
push
fxch
push
insb
xchg
mov
es
mov
fstl
mov
mov
xchg
aas
add
cmp
xchg
mov
xor
cmp
adc
mov
enter
dec
lds
lahf
fisubrs
iret
clc
dec
push
sub
sub
adc
dec
jne
jmp
cmp
aam
and
lods
cmp
decl
les
sub
xchg
je
pop
imul
cmpsl
cmp
insl
push
cmp
mov
xor
xchg
stos
gs
add
fistpl
sahf
inc
mov
xorl
cmp
repz
bound
gs
mov
stos
fldenv
addr16
loope
aam
into
fcoms
rcll
rcrl
into
aas
rorb
or
push
xchg
iret
push
repnz
mov
divl
mov
lock
and
jbe
fstp
jbe
fists
mulb
xor
aam
out
adc
cli
neg
mov
icebp
pushf
outsb
add
mov
cmp
pop
xchg
sbb
neg
sahf
xor
shl
aas
push
and
fldenv
mov
pusha
insb
mov
sbb
push
or
xor
cmc
leave
pop
in
sbb
icebp
repz
xor
lcall
pop
push
lods
aad
jno
cwtl
fs
add
sub
mov
lock
sub
or
mov
cmc
pop
outsl
in
fwait
int
sbb
adc
or
xor
addr16
sub
fcomip
push
imul
push
sub
ret
in
xchg
xlat
mov
test
subb
jae
fwait
jl
fldcw
ror
fst
xor
and
loope
pop
movsl
push
mov
mov
insl
jp
jmp
sbb
pop
inc
pushf
and
mov
jmp
push
and
dec
stos
add
mov
pushf
jns
cmp
imul
sbb
fs
test
adc
add
movsl
das
cmp
fdivrl
add
out
repz
inc
xor
cwtl
push
push
xlat
mov
adc
jb
inc
enter
or
loope
ljmp
cwtl
cmp
sbb
sub
sbb
scas
push
loop
cld
xor
cmp
sub
ret
ljmp
fisttpll
adc
mov
pop
or
shrl
or
sbb
jle
xor
push
lea
daa
mov
dec
push
addr16
jecxz
push
cltd
add
out
es
pushf
pop
scas
outsb
pop
cmp
lods
mov
scas
xchg
movsl
cmpsb
and
xchg
adc
cmp
mov
jp
shll
je
loop
jle
lods
mov
push
pusha
dec
aad
in
xchg
adc
jle
jl
lret
mov
fstp
lret
scas
cwtl
mov
ja
in
adc
je
das
inc
push
push
mov
movsl
dec
or
cmc
mul
sbb
cmp
inc
jge
jmp
or
xor
popl
idivb
stos
cld
jno
icebp
mov
sbb
xor
mov
xor
fucomip
lock
orb
adc
insl
je
add
lods
mov
dec
lods
and
popf
push
outsl
bnd
jecxz
ljmp
loope
dec
mov
mov
nop
mov
xchg
inc
je
pop
jg
outsl
mov
cmp
pop
orb
cmp
ljmp
mov
mov
and
xrelease
dec
jmp
inc
fwait
rorl
cld
fwait
dec
fwait
andb
insb
fwait
push
js
addb
cld
mov
stos
jo
lods
fidivrs
sub
add
std
mov
bound
push
cmp
sub
cmpsb
cmp
pushw
ljmp
dec
jns
hlt
xchg
fwait
stos
pop
xor
dec
decb
mov
insl
outsl
loop
fcmove
sub
movsb
xchg
shrl
mov
sbb
jl
push
and
out
add
xor
sub
inc
in
jo
xor
in
xor
pop
pop
xchg
jmp
mov
xchg
mov
fdivr
inc
xor
cli
sub
mov
or
add
fsubrl
lods
fnstenv
mov
ljmp
ffree
dec
jmp
cltd
dec
push
add
and
push
loopne
xor
in
and
test
pop
loop
mov
mov
test
push
xlat
fsubl
add
cmp
outsb
icebp
mov
in
xor
push
jg
push
inc
daa
sub
js
pusha
mov
dec
fsubs
repnz
dec
cltd
ret
sbb
push
mov
and
mov
sbbb
pop
mov
inc
arpl
dec
cmc
lret
push
ror
jle
xchg
cmpb
aad
sahf
xchg
adc
cli
pop
aam
sbb
or
cmp
int3
call
test
inc
cs
test
inc
test
jp
iret
xchg
fs
lods
in
rcl
inc
pop
xchg
ss
mov
sti
or
sti
stc
mov
out
popf
jns
sbbl
xchg
fucomp
sub
sub
lahf
leave
xchg
std
inc
orl
jnp
mov
das
jns
jb
mov
ficomps
lret
xor
xchg
xchg
out
shl
and
popf
lcall
mov
pop
sub
das
and
pusha
lods
lock
mov
dec
stos
mov
jl
aas
xchg
fadds
sbb
jge
roll
pop
and
cmp
fidivrl
xlat
pop
jno
ret
sub
xchg
je
xchg
stc
into
push
pop
mov
mov
jmp
cmp
cmp
push
inc
data16
hlt
cmc
cmc
mov
mov
mov
pop
enter
mov
add
pop
pusha
test
xchg
push
dec
push
addl
std
push
std
or
adc
sub
in
jae
dec
cmp
in
mov
pop
sub
mov
mov
movsb
test
int
pop
push
mov
pop
pop
aas
jns
les
insl
test
add
pop
jmp
mov
push
cmc
loop
inc
push
mov
and
stos
xchg
cmp
mov
ret
mov
into
cmpsl
jae
loop
sub
push
xor
push
lds
or
push
repz
mov
dec
outsb
dec
int
mov
xchg
mov
andl
into
mov
mov
pop
xchg
mov
insl
adc
testl
adc
and
sbb
pop
pop
mov
pop
fldl
mov
sbb
stos
shrb
mov
jle
sub
fwait
into
out
mov
outsb
xor
xor
push
popf
dec
ret
es
fs
pop
inc
fnstcw
sahf
dec
insb
repnz
add
out
pop
push
imul
jmp
outsl
mov
jp
je
fnstenv
sbb
push
pop
data16
inc
fstl
xor
push
mov
and
mov
and
mov
lret
sahf
mov
std
jno
arpl
cs
pop
or
inc
sbb
or
add
mov
mov
jmp
repnz
push
or
sarl
gs
fs
nop
xchg
xchg
repz
xchg
dec
mov
test
les
jb
mov
sbb
inc
mov
push
hlt
ljmp
dec
ret
inc
cmp
or
aaa
pop
sti
out
xchg
ljmp
cmp
push
mov
inc
pop
dec
lea
jg
mov
add
cwtl
lret
or
inc
push
pushf
inc
mov
rcl
or
lods
adc
shrl
ficoms
cmp
popf
lret
int3
ds
rcll
lods
mov
mov
arpl
ja
movsl
or
xchg
test
ret
add
xchg
repz
jae
cld
xor
jecxz
test
cwtl
xor
ljmp
pusha
xor
xchg
xor
lret
dec
in
out
inc
or
xchg
insb
in
aas
mov
mov
cli
push
out
ss
sbb
movsl
js
ss
cli
push
jmp
cmc
xor
out
adc
jle
out
movsl
cltd
xchg
inc
leave
xor
sbb
lcall
cmpsb
adc
ret
data16
aas
clc
ljmp
xor
mov
cmpsl
cmpsl
outsl
cmc
cmp
xchg
adc
out
cmp
jo
mov
aam
mov
pop
ds
jl
push
loope
add
outsb
in
clc
js
out
jge
push
jp
fdiv
mov
dec
stos
leave
jmp
dec
loope
in
mov
inc
or
fbstp
xchg
sub
int3
fbld
arpl
sub
mov
fisubl
jg
jecxz
sbb
xchg
enter
push
pop
adc
scas
fisttps
pop
orl
add
cltd
arpl
in
dec
cmc
xor
arpl
pop
sub
into
xor
mov
loop
pusha
popa
push
lahf
sti
fdivrl
icebp
jne
rcl
jne
pop
scas
test
pop
gs
sbb
jbe
scas
in
xchg
jp
out
push
inc
sub
aad
and
or
xlat
addl
loop
or
cmp
sub
or
add
sub
inc
mov
or
mov
fucomp
or
cld
movb
fwait
aad
fs
fisubrl
push
fwait
jno
jg
jl
das
lret
sub
scas
js
or
nop
out
pop
adcl
aas
icebp
push
and
std
cmp
pop
cltd
push
bound
rcr
pop
ljmp
pop
mov
xor
jnp
cld
pop
and
jnp
fdiv
push
imul
cli
mov
jne
clc
jecxz
pop
mov
mov
inc
add
in
dec
or
mov
inc
popa
cmp
fistps
add
inc
jae
orb
rcrl
dec
hlt
pushf
out
adc
arpl
xchg
out
adc
xchg
pop
aaa
fstpl
or
mov
mov
sbb
fsubs
je
dec
into
imul
sbb
push
in
stc
push
xor
ljmp
lret
add
std
pop
jns
out
jns
es
pusha
push
pusha
test
lahf
adc
outsb
dec
aas
sarl
xchg
inc
movsl
in
and
mov
sbb
mov
dec
jge
adc
sub
popa
frstor
test
sub
icebp
mov
or
in
inc
out
push
or
ret
sarb
aad
fcoms
push
jg
insl
fs
rcrb
push
jle
gs
scas
ficompl
push
out
int3
insl
push
inc
int
push
jb
dec
mov
push
cmc
sub
add
adc
sub
jg
xor
nop
dec
test
pusha
dec
jl
xchg
push
mov
xor
dec
xor
addb
mov
and
add
or
repnz
les
mov
out
add
cmp
les
cmp
mov
mov
lock
mov
shll
arpl
stos
lock
pop
dec
push
jo
sbb
adc
mov
addl
inc
add
jae
js
mov
jne
xchg
pop
mov
pop
pop
pop
filds
std
sti
or
push
mov
xchg
lods
mov
nop
fldenv
jle
pop
mov
lahf
push
movsl
mov
lret
mov
or
xchg
pop
fcoml
or
dec
mov
add
mov
jge
out
push
pop
adc
add
push
push
push
loop
xor
movsl
frstor
sub
sub
mov
cmp
xor
nop
nop
shld
cmp
jmp
adc
cs
xor
inc
jb
sahf
inc
cmc
mov
pushf
bound
cmpb
aas
jle
popf
xchg
or
andb
xchg
enter
decl
push
sbb
or
test
cmp
or
push
les
popa
mov
jg
push
adc
shrl
cmp
mov
leave
sbb
imul
inc
repz
xchg
dec
or
cmc
aaa
dec
bound
movsb
mov
cli
int3
sti
rclb
push
add
std
data16
pop
xor
call
fnstenv
mov
rcrl
rorb
xchg
or
nop
push
xor
mov
aad
das
pop
mov
xor
mov
mov
dec
push
loop
pop
in
mov
imul
rorb
call
cmpl
or
int3
cmp
daa
loope
jl
xlat
cmpsl
xchg
test
xchg
clc
mov
jmp
ret
faddl
fdivl
pop
out
cmp
nop
xor
data16
and
mov
xor
cmp
nop
inc
das
scas
or
dec
aas
sahf
hlt
out
outsl
push
mov
mov
bound
mov
pop
or
sbb
sub
inc
sub
adc
arpl
and
pop
in
jbe
cmc
out
stos
gs
in
nop
mov
icebp
jo
mov
pop
loop
or
pop
adc
loope
add
bound
fldt
push
jnp
repz
inc
int
out
aam
leave
imul
aas
cld
outsl
les
push
cmp
cmp
cmp
mov
arpl
test
xor
outsb
data16
cmp
and
cmp
outsl
data16
insl
xor
test
mov
pop
mov
push
ja
lods
mov
sti
and
pop
add
fwait
call
adc
or
aad
mov
mov
ret
and
cltd
repz
lods
stos
jb
jno
xor
adc
repnz
insb
inc
push
addr16
lahf
into
xchg
push
loop
sbbb
scas
adc
insl
push
adc
repnz
mov
movl
cmpsl
and
mov
lret
mov
add
dec
jg
test
outsl
cs
cmp
ret
out
arpl
pop
test
test
fstpt
insb
out
mov
mov
xchg
inc
rol
fcoml
test
int
sub
inc
cmp
fldl
lods
jle
outsb
imul
jl
dec
call
pop
jl
outsb
or
jno
pop
mov
arpl
mov
fbstp
jns
push
jmp
mov
cltd
std
xchg
or
shrb
cmp
cmp
stos
push
popa
sbb
mov
push
xchg
pushf
and
jmp
dec
rol
push
pop
inc
fidivs
popa
sub
sub
jl
cltd
imul
jb
adc
cltd
scas
mov
mov
or
add
xchg
pop
das
mov
push
jg
jle
mov
xor
imul
inc
aaa
test
pop
xor
mov
sahf
scas
xor
sarl
js
pop
aad
mov
xor
outsb
lock
lods
mov
xlat
add
inc
jge
bound
push
icebp
cmp
inc
dec
xchg
shl
mov
test
xor
iret
xchg
fsubp
push
push
adc
rolb
adc
xorl
mov
loope
cmp
std
inc
pop
add
inc
or
or
push
enter
cli
sub
and
jns
push
int3
lods
scas
jl
adc
jae
pop
add
sub
leave
es
adc
add
fwait
dec
lods
jo
adc
scas
sbb
pop
scas
mov
and
xor
pop
mov
fsubl
dec
jnp
jp
lcall
inc
mov
mov
xor
insb
jge
insb
scas
push
dec
mov
ret
dec
and
in
lods
sbb
stos
mov
insb
add
and
jg
fadds
push
shrl
jmp
sbb
sahf
lea
mov
mov
jno
add
daa
ret
push
addr16
add
jp
mov
mov
and
mov
sbb
cltd
add
sti
push
cmp
pushf
jecxz
pushf
cmp
xor
mov
mov
je
insl
std
js
test
xor
lds
outsb
jp
adc
out
xchg
mov
stos
shll
dec
mov
jno
imul
js
adc
jp
call
and
negb
ds
pusha
test
outsl
stc
xor
bnd
dec
or
ds
sub
iret
pusha
sub
push
outsb
test
repnz
cmpsl
xor
ret
cmp
clc
ret
mov
dec
fwait
fwait
sub
pop
inc
xor
and
addr16
pop
mov
xchg
inc
int
aad
loope
jbe
ds
add
fnsave
imul
sahf
cld
and
pop
or
pop
add
dec
in
jne
lret
jp
popa
sub
enter
in
pushf
sub
dec
fwait
arpl
push
bound
jno
mov
add
or
jg
mov
jo
sbb
int3
push
pop
test
scas
shl
xor
aad
push
shl
jg
adc
pop
mov
add
icebp
cmp
jge
pop
movsl
pop
ret
mov
lea
jmp
jge
in
and
add
xchg
imul
inc
imul
js
mov
insl
aaa
cli
call
imul
jns
push
call
fptan
sub
push
mov
jno
dec
sarl
sbb
shll
push
pop
xchg
insl
stc
sbb
jb
sub
xor
test
pop
call
sbb
arpl
jg
and
jp
dec
and
add
push
push
lods
ds
jne
adc
cmp
lcall
lahf
cmpsl
sub
lret
idivb
es
out
or
subl
inc
insb
inc
pop
and
loop
mov
popl
inc
xor
shlb
add
imul
sbb
std
test
push
into
add
jo
pop
test
pop
imul
add
lret
mov
lea
mov
inc
add
cli
scas
lds
sub
sub
das
push
inc
xchg
mov
and
out
mov
xchg
aam
mov
jge
mov
dec
jmp
jle
scas
ret
and
lock
xchg
in
aad
or
subl
cmpsl
dec
lods
shufps
pop
lahf
fidivs
dec
movsb
lods
mov
push
xlat
mov
push
loopne
mov
inc
jp,pt
jl
cmp
inc
push
adc
jmp
mov
lret
jg
sbb
push
sahf
inc
mov
jno
push
jle
int
xor
repz
test
addr16
outsl
nop
int
pusha
in
arpl
jg
jecxz
xchg
sarb
pusha
jp
push
push
xor
add
push
andl
sbb
jbe
cmpsb
testb
repz
add
ljmp
scas
lods
mov
or
pop
es
outsl
jmp
pop
mov
enter
fdivrl
pop
fidivl
xchg
iret
jb
xorl
cmpsb
jo
bt
cmpsb
pop
jle
cltd
push
pop
inc
sbb
hlt
gs
insl
lods
cmpsl
sub
adc
mov
jge
mov
sub
mov
add
es
cmpb
outsb
pushf
or
into
bound
clc
add
clc
dec
stc
ja
pushf
sbb
ret
into
jbe
fs
shll
les
pcmpgtb
add
and
les
jge
push
dec
js
xchg
lods
daa
je
out
stc
mov
fdivrs
pusha
ret
sub
in
iret
mov
iret
mov
fwait
test
fimull
and
push
jl
push
pop
out
stos
mov
daa
push
mov
aas
sahf
lods
aam
xchg
xor
ficomps
sub
cmpb
sub
push
movsb
mov
cli
xor
inc
out
mov
adcl
clc
sub
scas
aad
bound
or
mov
outsl
rorb
ficomps
xchg
lea
repnz
scas
and
sbb
cld
out
test
xchg
pop
add
mov
in
test
inc
push
mov
repz
xchg
fsubl
sbb
movsl
mov
add
mov
inc
mov
lcall
adc
mov
push
cli
out
mov
sub
mov
fsubrs
and
pop
dec
lret
sbb
cmpsl
mov
xor
pop
outsb
inc
mov
movsl
popf
dec
push
je
adc
sub
out
sub
push
test
fstcw
jae
xchg
pop
scas
add
jns
dec
add
fisttps
lahf
xor
dec
and
ret
dec
clc
incl
cli
push
or
ds
enter
inc
jnp
and
mov
xchg
adc
mov
fwait
int3
loopne
fdivl
movsl
imul
jbe
jecxz
lds
test
sub
fisubrl
add
lret
xchg
mov
xor
lds
call
sbb
fsubs
ret
adc
popf
js
ret
leave
div
adc
rol
pavgb
fisubrs
inc
out
das
clc
dec
xchg
cmpsl
push
popf
test
in
or
test
mov
mov
xor
fsub
fidivs
fsubl
xchg
push
and
enter
ljmp
jmp
in
mov
adc
jne
mov
xchg
imul
lods
sarl
scas
popf
mov
add
das
xor
and
jg
and
stos
fnstsw
or
pop
xor
sbb
adc
scas
sbb
mov
xchg
jle
xchg
sbb
repz
in
jae
jae
mov
imul
mov
je
sbb
pop
mov
test
je
cmp
lcall
fcmovne
mov
adc
mov
and
sahf
pop
fildll
scas
mov
dec
rcll
xor
xlat
mov
mov
adc
push
and
outsb
pop
ljmp
xchg
rcl
push
push
iret
ja
mov
xchg
in
xlat
mov
jecxz
scas
mov
xor
fwait
in
rcl
leave
fldcw
int3
or
mov
push
sub
mov
mov
int3
lods
leave
xchg
ljmp
mov
push
or
in
fdecstp
mov
rorb
stc
mov
adc
mov
jbe
mov
popf
fisubrs
sub
jle
mov
ss
fdivs
mov
test
adc
mov
andb
and
sti
xor
and
and
cmp
das
mov
jmp
lods
test
mov
inc
and
clc
mov
arpl
clc
xchg
orl
fsubrs
cld
xchg
push
js
lock
push
add
fwait
mov
mov
jb
bound
das
sub
fists
dec
cmc
xor
cwtl
pop
jns
push
fnsave
vmovupd
ja
outsb
fcmovu
call
sarl
adc
imul
enter
adc
inc
clc
shrb
shll
fisubrl
dec
cmp
and
xchg
test
into
ret
pushf
and
daa
outsl
pop
push
xor
nop
rcr
icebp
in
pop
mov
loope
fmul
aam
arpl
inc
and
pop
mov
jnp
in
xchg
jg
aaa
lea
loope
leave
push
dec
jmp
out
shll
sub
insb
idivl
and
test
cmpsl
insb
xchg
xchg
inc
aas
mov
ret
adcl
sahf
dec
in
pushf
sbb
or
ss
push
daa
mov
cwtl
add
or
sub
cmp
or
addr16
subb
inc
jns
shlb
xor
arpl
mov
add
ja
mov
daa
in
in
xor
pushf
loope
and
test
movsb
orb
js
dec
dec
scas
adc
lahf
cli
mov
addr16
and
mov
insb
jno
mov
pop
xchg
sub
out
jecxz
xor
pop
sub
fiaddl
push
sub
ret
daa
lret
in
in
test
or
cli
stc
jnp
sub
hlt
mov
xor
aas
sti
jmp
std
and
sbb
jl
jnp
cmpsl
push
cmp
pop
and
xor
dec
setnp
mov
dec
dec
pop
sbb
shlb
sbb
aad
shll
xlat
lret
out
pop
fsts
sbb
neg
add
pop
adc
and
mov
mov
iret
cmp
cmpsl
jb
dec
inc
or
fdivp
out
push
mov
xchg
pushf
daa
int3
add
adc
jle
or
push
mov
jle
out
xchg
dec
test
push
test
pshufw
icebp
jmp
inc
rep
cltd
mov
cmc
aad
out
xchg
sub
add
mov
hlt
adc
add
pushf
bound
fs
dec
sub
addr16
or
lds
dec
dec
daa
push
cltd
jg
pop
jbe
push
in
shrb
in
xchg
shll
jns
lret
xor
add
shrl
fdivrl
addr16
xorl
mov
repnz
ljmp
mov
mov
pusha
cmc
lock
push
sbb
arpl
lock
cld
xchg
rcr
dec
out
add
aaa
xchg
mov
push
pop
jb
inc
hlt
stos
pop
lcall
pusha
pop
dec
idiv
push
cmp
xchg
inc
inc
xchg
test
je
xor
xor
pop
xor
testb
mov
mov
fs
sar
push
iret
popf
loope
lods
lcall
fimull
sahf
xchg
enter
sub
dec
xchg
or
pop
cmpb
xchg
xor
adc
push
mov
ret
loop
test
es
in
movsb
out
loop
cmp
sahf
mov
sub
sti
mov
in
lret
sub
popa
cmp
and
xchg
mov
fs
jle
icebp
lds
aas
push
pop
xchg
pushf
mov
pop
and
lret
xchg
jns
lret
out
sub
push
pop
leave
adc
sahf
push
mov
add
icebp
enter
or
fisubs
or
dec
imul
dec
and
sub
in
jge
fdivp
inc
inc
bound
test
out
arpl
xor
adc
out
out
ljmp
xor
and
dec
and
lcall
in
adc
mov
addr16
shrb
negb
hlt
push
or
jl
or
jns
dec
push
or
and
sti
ret
dec
sbb
pop
adc
lret
mov
fsubrl
out
jne
fldpi
cmp
jle
lods
mov
fucomp
pop
mov
insb
and
push
push
lds
jl
and
pop
jo
mov
cli
stc
fcomps
mov
movdqa
add
sub
lock
addb
push
das
lock
rolb
clc
xor
fcoml
cmc
push
rorl
scas
push
imul
imul
cli
adcb
mov
jnp
and
bound
not
push
jmp
sbb
ss
popf
push
and
mov
push
lea
add
pop
sahf
xor
ja
xchg
gs
mov
repnz
hlt
xchg
mov
divb
jb
lahf
mov
loop
cs
xchg
sbb
or
adc
notl
aad
mov
cwtl
stc
pop
xor
iret
hlt
mov
or
popf
inc
and
stc
mov
jnp
xchg
in
add
mov
pop
and
cmpsl
outsl
pushf
dec
js
push
dec
out
xchg
xchg
pop
lods
pushf
mov
mov
push
push
mov
lds
cmc
mov
outsl
in
mov
call
hlt
adc
sbb
pop
jl
jmp
ret
test
inc
push
fsubrs
dec
outsb
adc
xchg
dec
sahf
repnz
jbe
scas
scas
lods
sub
gs
xchg
lods
stos
pop
pop
std
rclb
xchg
arpl
sub
push
loop
out
cmp
jnp
aaa
popf
cmp
loop
push
fcomip
xchg
dec
outsl
aam
and
mov
push
adc
mov
sub
lods
cli
fmuls
mov
outsl
jnp
sub
notb
jns
mov
test
enter
xor
jmp
push
pop
xlat
sbb
fs
dec
popa
inc
mov
sbb
sbb
mov
dec
ss
xor
gs
or
push
subb
inc
mov
adc
call
adc
cmp
add
cmp
imul
std
add
test
lret
repz
push
dec
sub
mov
daa
and
and
sub
sub
lods
jg
sub
imul
xchg
mul
push
std
les
mov
add
xor
dec
or
mov
das
ret
lods
xor
mov
xor
imul
cmpsl
jecxz
dec
dec
addb
dec
insl
repnz
dec
xchg
aad
inc
mov
push
sbb
int3
subl
ds
and
repz
mov
aam
xor
adc
jl
or
mov
mov
xor
push
stos
jae
je
mov
imul
fimuls
loopne
xchg
pop
cmp
jno
sub
sub
movsb
in
icebp
pushf
sub
jns
ljmp
outsb
pushl
outsb
or
cmp
cmpsb
insb
cmpsb
push
jle
fwait
sub
push
je
and
xlat
or
cmpsb
push
lcall
adc
pop
xlat
push
rcr
mov
xor
mov
lret
jb
movsb
aaa
sahf
lock
int3
pop
sbb
dec
test
out
or
ja
je
in
out
and
aas
xor
xor
enter
mov
ficomps
mov
insb
movsl
popl
fisttpll
pop
cld
lcall
mov
and
cltd
xchg
out
xor
or
es
or
mov
loope
push
stos
sub
aam
adc
mov
xchg
inc
push
iret
imul
jbe
std
in
or
add
sti
clc
hlt
clc
mov
test
sub
push
mov
mov
test
into
or
test
cmp
nop
mov
lret
mov
xor
lds
adc
jp
push
xchg
dec
insb
sti
xor
outsb
push
jge
test
and
add
sbb
aaa
repz
cmpsb
mov
fwait
lahf
pushl
je
jl
push
ret
mov
ss
jmp
sub
inc
jecxz
pushf
stos
xor
adcl
lods
add
enter
push
js
je
lock
into
enter
sub
mov
mov
mov
insb
in
jns
jnp
xor
or
hlt
pop
dec
jo
cmp
xor
xor
jle
sub
cli
popf
adc
jns
scas
mov
xlat
je
in
sbb
out
andb
mov
adc
popa
and
aas
mov
add
insl
push
mov
dec
xlat
add
add
cltd
ds
outsb
cltd
xor
cld
cld
jb
mov
dec
test
ret
outsb
dec
cli
push
out
sub
jb
aaa
ljmp
std
cli
popa
icebp
or
hlt
adc
mov
fcoml
push
or
dec
arpl
push
pop
adc
push
es
adc
js
lcall
fsubp
rorl
cmp
js
fmul
push
dec
cmpsl
test
ret
mov
xor
fidivl
mov
pop
or
ja
sbb
ret
add
icebp
cmp
out
daa
addb
xor
lcall
fwait
sbb
int3
xor
rcrb
or
or
shl
cltd
inc
xor
cmp
leave
lcall
jmp
ja
repnz
dec
adc
lret
add
push
ficomps
aaa
scas
mov
sub
jp
and
pop
fs
subb
test
shl
in
inc
mov
pop
sub
nop
dec
mov
push
dec
pop
bound
arpl
mov
insl
mov
mov
push
outsl
push
xchg
hlt
add
repz
adc
xchg
sub
ja
lea
cwtl
dec
mov
hlt
or
xchg
push
mov
enter
sub
jb
xchg
aam
lret
xchg
xchg
cltd
mov
lds
mov
sub
shrl
test
or
push
fisubl
loop
dec
add
pop
push
push
in
shlb
or
lret
pop
cmpsb
ret
xchg
mov
pop
loopne
and
or
int3
loop
dec
sbb
mov
data16
pop
lods
pop
mov
jle
or
int3
pop
adc
rol
push
jle
mov
ret
jl
jp
movsb
pop
push
js
dec
cmc
ficoms
cmp
imul
push
inc
inc
sub
int
push
or
mov
inc
mov
nop
jmp
and
cmpsl
add
inc
cmp
or
ret
pop
pop
ret
test
pop
cmp
test
xor
enter
pop
push
nop
test
sbb
mov
jle
push
rcrb
jmp
sub
aas
lahf
pcmpeqw
dec
daa
pop
sahf
xor
les
jecxz
scas
cmp
aaa
push
adc
xchg
iret
add
adc
test
leave
pushf
iret
jp
jne
cmpsl
in
mov
out
outsb
arpl
pop
test
cmp
push
mov
mov
aas
xchg
out
bound
mov
pop
push
repz
mov
xchg
add
adc
scas
ss
clc
iret
inc
adc
gs
cmpsb
outsl
loop
movsb
in
out
push
push
mov
idivb
aad
mov
lods
add
xchg
jmp
xchg
add
xor
xor
in
jle
rcll
stos
sbb
loope
jecxz
jge
or
loope
bound
pusha
xchg
or
aas
mov
xchg
ret
cmp
fmuls
addr16
setno
addr16
mov
dec
imul
bound
pop
jne
in
aas
shll
cmpsl
fildll
mov
lahf
jmp
dec
notl
lret
sbb
pushf
cmp
cmp
adc
xchg
xor
and
push
mov
xchg
push
push
cmp
outsb
pop
aas
push
push
xlat
jecxz
jno
gs
pop
movsb
lahf
jbe
add
rorl
mov
xor
add
insb
mov
mov
out
and
mov
xor
adc
sub
cmpl
sbb
addr16
or
lahf
stos
ret
inc
push
lds
adc
fldcw
xchg
jo
daa
adc
stos
mov
dec
sub
fsubrs
std
adcb
adc
inc
jmp
dec
movsl
sub
rcll
mov
jno
pop
xchg
xchg
and
mov
jl
cmp
fs
mov
jl
cltd
sahf
fiaddl
jmp
psrlq
push
scas
mov
cmp
mov
inc
adc
mov
xchg
repnz
inc
jl
pop
dec
test
loopne
dec
sub
imul
pop
jne
ret
xchg
faddl
xor
bswap
push
addr16
mov
fdivrl
add
jge
or
inc
movsl
dec
jmp
lds
pusha
outsl
mov
in
cld
xor
popa
adc
inc
and
insb
push
stos
in
lock
enter
cmpsb
js
fldt
xor
xchg
jns
or
mov
insl
pcmpgtd
fdivs
xchg
aaa
cmpsl
push
sbbb
cli
dec
xchg
insl
add
fidivrl
loopne
fsub
sub
loop
xchg
push
ret
xchg
push
out
dec
jno
popa
jbe
pop
in
test
arpl
jne
add
jmp
jecxz
ljmp
sub
dec
or
push
mov
xor
add
push
or
cmpsl
xor
pop
mov
jmp
mov
cmpsb
adc
outsl
adc
jp
aaa
or
xor
and
and
call
mov
mov
adc
and
dec
pop
rclb
test
lods
les
iret
outsb
or
fcmovb
mov
jo
cmpxchg
xchg
xchg
push
push
push
loope
popa
aam
fs
sub
adc
fisubrl
scas
sbbb
popa
mov
lea
mov
sub
mov
sub
out
sub
dec
les
cld
push
movsl
mov
add
xchg
scas
push
scas
mulb
and
mov
push
jae
dec
push
or
sbb
rcrb
jge
iret
test
popf
add
or
daa
packssdw
movsb
push
sbb
enter
out
adc
jbe
jge
test
andb
xor
jmp
fisubs
mov
lret
sub
stos
fadds
jp
mov
arpl
xchg
mov
xchg
push
sub
scas
dec
mov
in
leave
xor
stos
dec
push
leave
call
fidivs
cmc
push
and
lea
out
dec
push
pop
mov
test
ret
inc
adc
adc
idivb
add
pop
push
movsb
adc
std
or
mov
mov
mov
inc
rolb
lcall
fiaddl
push
scas
mov
push
add
rorl
test
arpl
pop
or
lahf
xchg
mov
pusha
nop
inc
and
test
pop
outsl
inc
mov
add
mov
es
jl
xchg
insl
mov
ret
mov
xchg
stos
adcb
pop
aas
jne
stos
inc
int3
inc
cmpb
lcall
jp
push
push
inc
mov
imul
sub
fs
out
fwait
inc
mov
jl
repnz
popf
mov
int
jp
and
or
inc
dec
iret
mov
xchg
test
jnp
test
loopne
xchg
or
xchg
xchg
fldl2e
jle
lds
sbb
cmp
cmp
fcomp
cmp
loopne
xchg
ror
xor
outsb
mul
aam
pop
movsb
push
insb
sbb
dec
mov
dec
cwtl
pop
xchg
stos
cld
out
test
mov
cld
pop
mov
ficomps
lds
les
daa
pop
shl
sbb
test
popf
test
std
pop
int3
add
or
repz
sub
cwtl
xor
push
ss
inc
scas
or
das
scas
int3
xor
add
cmp
rorb
ret
loop
jp
push
inc
mov
fadd
xor
mov
pop
lcall
clc
iret
xchg
and
push
fsubl
dec
or
xchg
stc
and
sub
lret
pushaw
dec
pop
sahf
xchg
cmp
cmc
outsb
xchg
mov
maskmovq
cld
cmp
sets
xlat
adc
sub
sub
pop
stos
adc
push
pusha
fbld
xlat
sbb
adc
clc
jno
inc
jb
lret
sarb
pop
popl
or
adc
jle
pop
popa
ffreep
cmp
xor
lock
pop
mov
aas
lock
pop
sahf
pop
icebp
sbb
mov
adcl
dec
call
adc
fstl
jecxz
xchg
jb
sbb
js
data16
sti
call
sbb
cmp
cmpsb
or
cmp
pusha
lds
mov
or
xor
xor
in
dec
xchg
dec
add
or
test
sub
inc
adc
incl
pop
fcmovnbe
xor
ds
inc
inc
shl
lods
aad
or
into
pusha
adc
fadds
ja
jp
cli
fisttpl
sub
lret
add
loopne
es
into
or
in
add
push
jns
add
stc
push
dec
push
mov
stos
sti
add
dec
pusha
ss
je
add
cmp
pop
mov
xor
xchg
xor
outsl
inc
pop
dec
push
jg
sub
fldt
xor
cmpsl
je
cmpsl
lock
je
popa
stos
mov
call
or
out
mov
mov
and
jl
cld
xchg
push
inc
mov
jno
jecxz
inc
imul
push
jp
cmp
test
hlt
dec
sub
orl
jo
das
mov
jmp
cwtl
fs
mov
or
std
adc
insb
fildl
iret
icebp
mov
std
push
popa
sub
mul
scas
sub
cld
fcoml
shlb
jns
pop
lods
in
ficoml
push
sub
and
mov
ja
xchg
ret
xchg
dec
scas
dec
js
mov
in
inc
inc
fistl
dec
outsl
push
scas
mov
mov
add
pushf
cmpsb
adc
dec
mov
cmp
pop
or
fisttps
out
inc
cmp
sti
jp
rclb
sub
and
pop
add
ss
inc
mov
loope
mov
jmp
imul
mov
dec
iret
in
sub
jo
daa
pusha
adc
cli
adc
or
sbb
les
mov
mov
sub
out
xor
aad
jo
fstpl
js
call
dec
and
shl
jle
ret
lods
pop
jae
addr16
mov
jnp
pop
neg
lcall
pop
fadds
xor
sub
and
ja
add
call
loopne
cwtl
jae
push
loop
mov
mov
cmpl
mov
ret
sub
push
hlt
popa
xchg
das
dec
fwait
shlb
push
mov
daa
insl
in
or
add
mov
xchg
scas
repz
aas
lea
rcrl
cmp
push
stos
add
push
jo
cmp
scas
cltd
rcrb
les
imul
into
mov
inc
and
popl
loopne
fildll
and
push
sti
je
sbb
and
cmp
sub
fbstp
leave
or
lods
sub
lock
dec
xlat
subl
jl
sbb
cmc
xchg
sub
mov
pusha
xor
sbb
sbb
sbb
mov
cmp
or
jmp
mov
inc
scas
rep
rorb
mov
sti
sbb
enter
adc
aam
idiv
addr16
inc
int
lds
clc
sbb
dec
cld
jecxz
outsl
xor
sub
sarb
inc
movsl
insb
adc
push
int3
lret
adc
ljmp
lcall
iret
test
mov
mov
stos
adc
nop
fs
pushf
mov
cs
sbb
mov
outsb
insl
inc
mov
mov
cli
sbb
lahf
adc
mov
xor
pop
lds
and
xchg
lret
into
mov
jl
mov
stc
fadds
xor
cs
sbb
cs
add
cmp
sbb
lds
lock
movsb
push
push
and
xchg
xchg
push
sub
sub
daa
out
mov
cld
jmp
cmp
xlat
push
jbe
dec
sahf
pop
lcall
insb
jmp
in
rcr
mov
out
mov
and
loopne
mov
jg
loopne
push
idivl
ret
xorb
mov
sub
mov
jae
fisttpl
jno
insl
iret
xor
lds
mov
cmp
shl
test
inc
movsb
ja
push
inc
and
dec
push
or
sbb
mov
notl
out
in
jbe
inc
ss
fstps
jle,pt
push
add
movsl
sbb
jne
sub
lret
cmp
cli
jns
bnd
or
mov
mov
fsts
test
pop
push
lods
xchg
and
test
add
jnp
inc
inc
repz
sbb
inc
imul
rorb
xchg
push
imul
lods
cmp
cmp
mov
push
lahf
add
lods
lcall
cs
enter
lcall
aad
iret
dec
xchg
je
jg
les
mov
test
sub
nop
popa
mov
int
enter
pop
leave
push
sub
pop
shll
push
xor
outsl
int3
jge
out
cmpsb
pop
cmp
js
in
sub
rcll
sub
dec
dec
aas
ret
ds
enter
cmc
std
out
das
xor
mov
lahf
ja
aas
push
and
pop
push
jnp
clc
jne
outsb
cmpsb
add
pop
jmp
std
mov
jg
call
pop
jp
stc
push
push
ffreep
dec
mov
or
pop
out
jg
inc
sbb
lcall
scas
push
pop
das
ss
mov
pop
sub
dec
jbe
cmp
push
sub
mov
xchg
pusha
adc
out
cld
movsl
cmp
adc
push
aam
dec
jge
mov
push
push
jb
jo
inc
rcrl
fsubp
gs
adc
sarl
cli
or
popl
stc
sbb
popl
pop
out
add
sbb
adc
xor
movl
mov
cmp
lds
adc
or
xor
jg
lahf
xor
int
popa
inc
js
jmp
ljmp
aas
sub
int3
ss
or
pop
scas
mov
outsb
loopne
and
and
and
jl
mov
lahf
icebp
fstpl
sub
dec
mov
shlb
add
sbb
or
repz
dec
mov
and
and
push
mov
fcompl
pushl
loopne
and
pop
inc
mov
jle
cli
insb
cmp
lcall
ror
push
jbe
or
cli
add
jmp
je,pt
xor
xchg
pop
pop
and
jns
out
dec
pop
mov
cltd
pop
add
adc
sub
js
inc
sub
clc
pop
xor
movsl
repnz
xchg
movsl
inc
arpl
mov
add
insl
test
subb
and
shl
inc
jno
sbb
push
push
push
pop
sti
pop
outsl
shlb
iret
adc
add
lds
jmp
js
mov
das
aas
loop
mov
das
mov
or
es
lcall
aas
popa
mov
cmpsb
or
and
insb
or
cwtl
sarl
or
jge
cmp
jg
stos
push
std
or
sti
out
bound
cmp
mov
in
or
in
rdpmc
es
push
pop
xchg
adc
mov
iret
cmp
pop
sub
push
or
fcomps
lods
jno
xor
jae
xchg
int
sbb
add
cmp
mov
jnp
fs
jecxz
fldenv
sub
es
cs
xchg
push
pop
xor
dec
repz
pusha
mov
jecxz
fildll
fwait
add
xchg
push
out
push
fmul
out
mov
fcmovnb
dec
mov
out
pop
pop
ss
jg
shrl
xchg
lcall
xchg
mov
sti
pop
mov
ret
push
ret
out
mov
jl
push
std
outsl
sbb
or
and
clc
cmp
mov
add
jnp
cltd
push
icebp
or
in
add
loopne
adc
ret
clc
dec
dec
adc
xchg
call
cli
mov
pop
lahf
iret
inc
xor
stc
mov
xor
test
popf
imul
lea
sub
xor
add
lret
jl
dec
out
pop
push
and
fisubs
fidivrs
pop
stos
cmpsl
xlat
mov
sarl
mov
xlat
fwait
sahf
rolb
hlt
push
lret
jno
lods
push
dec
pusha
mov
cmp
xor
mov
adc
pop
and
mov
decb
push
hlt
sbb
cmp
popf
leave
sahf
ja
sbbl
bound
aad
mov
sbb
cmp
movsl
cmp
mov
aam
iret
xchg
call
pop
mov
scas
dec
ror
push
test
inc
loop
dec
adc
sbb
shlb
fwait
ds
inc
es
popf
test
xchg
dec
ss
ret
sub
mov
jg
mov
cmc
ja
mov
jb
icebp
ja
ss
pop
leave
jb
movsb
xchg
aaa
movsl
pop
push
sub
jns
push
cmc
mov
cmpl
movsb
dec
int3
jae
lret
sbb
pop
fucomi
and
icebp
cld
cs
sbb
mov
sub
sbb
mov
xor
hlt
inc
or
pop
cmpsb
mov
sub
out
cmpl
inc
mov
pop
inc
or
mov
push
out
inc
ljmp
mov
and
sub
xchg
xchg
ds
jle
jp
data16
aaa
imul
scas
aas
mov
lcall
clc
repnz
adcl
movsl
xor
loope
fs
mov
ret
and
pop
xchg
push
fcmovnu
jb
mov
or
cwtl
adc
in
jno
and
lea
enter
ss
pushf
in
stc
dec
cli
mov
push
mov
mov
daa
dec
xor
lods
jge
jl
push
lahf
mov
insl
and
cmpsl
fs
test
clc
mov
cmc
mov
push
add
ret
adc
and
xchg
and
push
and
pop
xlat
jmp
and
int
mov
jecxz
cmp
xorl
shrb
in
enter
xor
add
xor
in
mov
cmpsb
xchg
cmpsl
and
sub
enter
mov
mov
pusha
pop
mov
test
insb
dec
rcrl
stos
push
out
dec
pop
adc
outsb
es
vaddsubps
xchg
jne
or
mov
lret
outsl
mov
mov
test
sub
repz
lret
daa
stc
std
mov
push
lock
aam
xchg
loope
xor
pop
enter
xchg
pop
in
ss
mov
cltd
roll
clc
cmpb
mov
mov
adc
je
iret
in
lcall
dec
dec
cmp
jne
stos
mov
push
jb
cmp
mov
push
sti
mov
in
mov
push
pop
test
and
xor
pusha
jmp
cmc
sub
les
pop
dec
out
daa
xchg
das
lcall
mov
xchg
sbb
pushf
push
rclb
xchg
xchg
pushf
notb
inc
sbb
or
lret
insb
out
xchg
xchg
mov
loop
cltd
dec
pop
mov
lods
add
sub
fcmovne
arpl
jb
pop
cmp
les
jne
test
fistpl
hlt
mov
sbb
dec
push
fmuls
xor
inc
xor
add
imul
mov
enter
sub
mov
cmpsl
push
mov
dec
mov
pusha
stos
and
daa
cs
out
daa
jp
xchg
xchg
inc
sub
sub
lock
cld
imul
push
mov
movsl
and
roll
dec
int
out
mov
imul
sbb
ret
cmp
jmp
fs
jl
cwtl
inc
in
scas
mov
jb
rclb
dec
mov
cmc
or
cmc
in
xor
adc
mov
inc
dec
jge
ds
jl
test
jbe
int
cmp
cltd
sbb
in
jnp
imul
pusha
cmp
lcall
shrl
out
pushf
scas
nop
mov
mov
mov
movsb
mov
mov
and
rcrl
pop
loope
icebp
rorb
fwait
idivb
xlat
xor
bnd
jge
xor
in
sar
addl
jo
and
cmp
out
cmp
lea
aad
out
mov
es
in
mov
mov
js
sbb
sbb
mov
and
sbb
cmpsb
mov
mov
push
mull
flds
ss
mov
cmp
sub
pushl
or
scas
mov
dec
xor
lcall
xchg
xchg
add
cmp
pop
in
loopne
mov
push
into
aaa
dec
sbb
fwait
or
xchg
dec
mov
cwtl
xchg
imul
ret
movsb
mov
iret
rcll
sahf
mov
punpckhwd
cmp
inc
dec
jle
xor
push
iret
loopne
mov
mov
ljmp
testb
push
cltd
movsb
cmpb
push
test
and
sbb
mov
sbb
add
ret
mov
ljmp
aad
mul
xchg
or
lea
iret
addl
xchg
in
imul
dec
roll
mov
cltd
insb
xchg
or
jb
inc
xchg
sahf
push
loopne
add
in
mov
sub
movsl
call
xor
dec
sub
imulb
mov
fs
xor
and
pushf
lock
pop
sahf
push
xchg
push
add
loop,pt
sub
xor
xor
popf
lds
std
xchg
or
jns
mov
cli
insb
fsubl
and
shll
out
fcmovnu
test
mov
das
jle
pop
fnstsw
ret
jmp
scas
incl
inc
mov
mov
cld
aad
pop
dec
sub
jno
mov
shr
ja
cltd
mov
push
add
xchg
ss
mov
aas
imul
pop
inc
lods
aas
out
mov
push
aaa
test
cmpsl
inc
sbbb
repz
packuswb
rclb
cmc
adc
adc
inc
pop
xor
adc
leave
inc
and
sbb
lea
jg
push
mov
cmc
outsb
lds
pop
fs
adc
dec
push
inc
mov
hlt
inc
into
or
add
fidivs
push
sub
sarl
mov
into
insb
push
and
rolb
cld
and
int3
cld
dec
das
xlat
fmul
push
jge
sbb
cmp
cltd
mov
push
test
inc
pushf
pushf
and
rcl
iret
adc
stos
loop
pop
jne
gs
out
adc
cmp
pop
dec
dec
jns
cmp
in
scas
fwait
mov
rol
fsubrl
dec
aaa
or
push
leave
mov
jge
fwait
xchg
movsl
cwtl
in
cmp
cmp
lods
arpl
incb
jg
test
int3
ret
fdivs
cli
je
repnz
insb
adc
fcoml
mov
xchg
push
pop
test
nop
mov
and
fistl
leave
mov
pop
add
xor
filds
jecxz
mov
xchg
and
push
inc
sbb
inc
mov
sub
and
dec
mov
or
fldt
ss
shlb
stos
mov
popl
push
sbb
rcr
je
adc
pusha
fisttpll
hlt
sub
lds
push
mov
stos
xchg
lret
or
push
ffree
mov
bound
sbb
add
scas
cltd
adc
jnp
push
push
leave
mov
sbb
push
jae
mov
xor
pop
jecxz
aam
pop
mov
movsb
fnstenv
pop
out
fldenv
pusha
ret
popf
cli
mov
mov
jecxz
aas
cli
sbbl
iret
mov
adc
outsl
add
mov
mov
flds
xchg
aas
shrb
aad
pop
pop
mov
push
fildll
mov
xchg
imul
push
lea
sub
andb
aad
pop
xchg
sbb
cld
pop
jbe
sbb
mov
ljmp
test
inc
xor
xchg
loope
repnz
xor
dec
push
jb
xor
sbb
bound
stos
ss
jg
cmpsl
xor
sarl
in
jge
insl
test
les
jmp
cmp
testb
push
add
jle
loop
mov
es
push
lock
paddusw
mov
mov
xor
mov
fstpt
xor
sub
cs
adc
sub
inc
out
repz
outsb
mov
add
lock
fwait
adc
ljmp
pop
mov
mov
lea
outsb
aas
mov
lcall
popa
ljmp
mov
jp
jbe
adc
aaa
mov
lods
stos
mov
cwtl
push
hlt
int3
imul
inc
xchg
shll
push
mov
scas
inc
test
lret
push
adc
fdivrl
data16
xor
mov
adc
fimull
ror
sub
lret
ror
rcrl
das
ds
dec
or
mov
popa
lahf
lahf
sti
fwait
mov
js
fwait
xchg
lock
xlat
adc
lret
xchg
popf
sti
ss
movsl
push
in
jo
xor
lret
pop
out
pop
mov
lahf
and
dec
cmp
stos
push
inc
out
dec
fadd
ss
xchg
fistpll
inc
inc
aas
fdivs
push
stos
sbb
mov
scas
inc
or
push
movsl
js
dec
push
cli
mov
adc
jmp
scas
imul
sub
lahf
mov
into
or
add
cld
add
lea
xor
xchg
mov
push
xor
mov
aas
dec
popf
stos
popa
sbb
push
sbb
or
xchg
pop
lret
aaa
jb
test
lcall
mov
loop
lret
subb
sbb
out
test
sbb
shrb
push
pop
dec
lods
and
fnstcw
jo
shl
dec
sub
or
cmp
enter
push
adc
inc
push
cltd
fiadds
pop
clc
fwait
aaa
stc
rcrb
fwait
sbb
sti
mov
loope
mov
imul
enter
pushf
add
pop
arpl
shll
inc
cwtl
push
fildl
jg
and
scas
push
shl
roll
mov
sbb
and
or
test
in
data16
dec
orb
mov
cmp
cltd
sbb
sbb
add
sbb
inc
ljmp
or
pop
xchg
adc
filds
aaa
outsl
jne
adc
mov
dec
push
into
jmp
mov
mov
cmpsl
fistps
mov
out
xchg
bound
test
and
inc
push
xchg
and
lret
insb
pop
in
jno
daa
mov
aad
add
call
sbb
gs
scas
arpl
jb
xlat
ljmp
sbb
inc
add
adc
fisubrl
or
cmp
xchg
addr16
std
jmp
pushf
jmp
and
popa
lcall
stc
push
sbb
fldcw
adc
das
mov
or
inc
into
adc
or
push
fcoms
pop
or
imul
cmpsl
inc
push
sub
add
inc
sub
ret
mov
cmp
dec
cmp
outsl
mov
and
sbb
test
pop
bound
pushf
push
or
gs
daa
dec
out
add
gs
insb
pop
cmpsl
cmpsb
xchg
lods
test
pop
add
adc
add
stos
and
mov
inc
mov
xor
xchg
or
stos
cmp
cmpsl
sqrtps
cld
push
leave
sti
int
out
dec
mov
dec
sub
push
loop
xchg
dec
imul
push
cmp
jp
mov
in
test
fcoml
cld
mov
into
ljmp
xor
and
sbb
sbb
xchg
rcrb
roll
mov
fsts
das
lock
enter
pop
push
or
cs
psrad
dec
aaa
dec
and
and
les
dec
fs
call
cs
sti
and
mov
mov
cltd
jne
or
jae
jmp
jge
fbstp
mov
mov
cltd
adc
ficompl
int3
out
arpl
adc
mov
test
adc
std
adc
ljmp
int3
hlt
adc
gs
js
cs
gs
pop
lods
xor
dec
push
imul
add
fs
leave
xlat
mov
int3
cmpsb
adc
fbld
jl
pop
dec
pop
hlt
xchg
xchg
push
xchg
pop
sub
dec
dec
and
imul
mov
nop
stos
sub
shlb
jno
and
aaa
ficoms
and
mov
cld
iret
lds
cmpsl
orl
fsts
in
mov
mov
push
insl
ljmp
icebp
cld
push
test
lcall
leave
xchg
test
push
cmp
in
or
dec
dec
into
xchg
add
mov
scas
lahf
mov
xchg
xor
mov
test
jl
ja
shll
insb
mov
dec
jle
sbb
add
pop
mov
scas
mov
mov
sti
int3
lcall
leave
xorb
dec
jno
and
shll
adc
pop
fsubr
mov
push
pop
add
cmc
aad
fbld
js
inc
pop
das
daa
mov
aam
jno
lcall
adc
sbb
mov
cmp
mov
sub
dec
and
jb
out
addr16
arpl
cmp
aad
les
xchg
adc
adc
fs
scas
xor
stos
addb
ja
or
mov
pop
pop
dec
sbb
imul
xlat
pushf
push
fiadds
je
mov
int
xlat
frstor
dec
mov
imul
iret
cli
bound
insb
jl
jno
add
mov
adc
ror
jo
inc
sbb
jbe
repnz
lods
cmp
daa
pushf
cs
pusha
pushf
paddusb
insb
cmp
and
out
mov
ret
and
inc
ja
cmovb
in
mov
sub
orb
jl
jle
lds
mov
xchg
push
sbb
push
pop
push
sbb
mov
pop
add
and
xor
mov
fwait
andl
outsl
sub
lcall
adc
lods
lret
dec
push
nop
js
pop
sub
cld
pop
add
mov
in
sbb
arpl
out
int
scas
sub
es
and
cmpsl
sub
adc
imul
iret
jno
dec
vpaddsw
stc
mov
dec
adc
pop
jmp
out
pop
mov
int3
inc
jns
sub
faddl
and
inc
imul
loopne
mov
mov
jg
mov
clc
cltd
enter
or
in
iret
and
mov
cmp
inc
pop
cmpb
jno
xchg
negl
lahf
push
bnd
bound
pop
sti
push
or
enter
gs
dec
lcall
mov
inc
adc
gs
aad
adc
negb
jb
xlat
mov
xchg
mov
mov
or
adcl
in
jbe
aas
cld
lahf
cwtl
lret
add
push
pop
in
inc
shll
inc
inc
fs
int3
fnstenv
addl
fcoms
pop
sbb
dec
insl
mov
mov
test
cmp
push
or
mov
push
add
push
adc
imul
mov
lds
idiv
push
push
hlt
mov
mov
cli
and
push
ja
inc
inc
aaa
and
xor
xor
mov
negl
adc
cltd
or
pop
clc
ret
lcall
jb
insb
fistpl
sbb
adc
aas
xor
mov
rcr
xor
stos
xchg
jp
arpl
xor
dec
leave
lcall
pusha
fnsave
add
mov
les
dec
les
std
ja
in
fidivl
std
mov
jp
jo
mov
jnp
pop
outsl
push
sbb
mov
andl
popa
mov
xchg
fldt
addl
push
loope
or
push
repnz
add
mov
in
rol
jle
outsb
stos
js
lcall
js
test
pop
mov
fdivs
adc
scas
leave
inc
sub
movsb
inc
inc
mov
lods
mov
dec
and
daa
repz
fucomp
pop
arpl
icebp
mov
roll
pushf
and
jnp
pop
mov
push
fistpll
sti
ljmp
orb
mov
jl
pop
cmp
into
gs
cmpsb
sbb
inc
xor
repz
xor
push
cmp
xchg
imulb
lret
dec
jle
test
sti
imull
mov
mov
ja
or
push
scas
add
sarb
dec
mov
dec
dec
mov
sahf
stos
xor
mov
cld
or
or
jbe
xchg
les
add
jmp
sbbb
dec
xchg
outsl
xchg
adc
push
lcall
push
cmpb
lods
clc
stos
pop
pop
int3
insb
dec
jmp
out
jcxz
lods
lret
and
jl
pushf
or
popf
sarb
xchg
lahf
bound
pushf
fcoml
in
hlt
push
sbb
sbb
rolb
call
inc
jae
out
mov
fsubl
lods
popf
or
or
and
dec
dec
cld
int3
adc
pushf
xchg
sbb
adc
imul
sub
mov
shrl
and
push
and
mov
icebp
jb
jmp
push
mov
gs
fildl
sub
inc
pop
mov
rol
ss
jne
mov
push
push
stos
idiv
aas
dec
push
mov
leave
cmp
fadds
xor
sbb
fcmovbe
fsubs
sbb
jle
dec
les
pop
loopne
push
fwait
and
push
xchg
mov
cs
lret
pop
cmp
sub
dec
add
jo
subb
xor
test
repnz
mov
add
push
decb
mov
shl
or
es
insl
push
sub
insl
pop
repz
aam
and
push
aad
shlb
movsl
push
xlat
cs
test
hlt
cli
push
or
adc
outsb
sub
xchg
test
inc
vmptrld
out
push
mov
pop
dec
inc
adc
out
mov
pushf
mov
inc
test
ss
push
aam
push
inc
fistpl
out
sub
fisttpl
inc
push
lods
in
pop
mov
pop
sbb
shl
pop
mov
jns
out
add
dec
shll
jp
adc
sbb
jl
out
lock
hlt
out
fs
jns
stos
xor
jg
inc
push
jae
iret
sub
mov
xchg
jbe
or
out
adc
pop
adc
or
cltd
add
push
fldt
jmp
add
add
adc
in
dec
push
adc
inc
xchg
add
and
orl
ss
pop
pop
jp
sub
cli
scas
cmpsb
and
adc
xchg
adc
nop
lret
xor
pop
nop
rorb
dec
outsb
sbb
sbb
or
mov
ja
bound
pop
in
out
into
or
out
mov
out
cmp
pop
aas
push
xchg
aam
pusha
add
iret
shr
addr16
jb
fisubrl
mov
and
lods
das
and
test
popa
sub
aam
rclb
jo
punpckhwd
test
mov
or
push
mov
ljmp
in
push
fmull
cmp
sahf
xchg
movsb
sbb
mov
mov
imul
daa
xchg
xor
and
mov
out
jmp
daa
out
pop
les
pushf
lcall
aad
les
movsl
adc
mov
nop
iret
repz
and
cltd
andl
scas
cld
popa
rcrl
xor
aaa
repz
xchg
fldt
push
out
stos
sub
outsb
inc
xchg
push
adc
movsl
iret
movsl
decb
pop
fdivrs
or
mov
xor
in
xchg
idivb
pop
sbb
out
or
loopne
andl
dec
jno
mov
loopne
shll
out
dec
cmpsb
enter
mov
or
cwtl
popa
sbb
jno
mov
mov
mov
iret
mov
arpl
lcall
shll
mov
push
and
out
outsl
sub
lret
xchg
pop
inc
cld
pop
sub
lds
aas
xor
sub
adc
cmp
cmp
jbe
loope
mov
addr16
pop
in
sub
out
hlt
dec
and
popa
and
adc
movsl
inc
pop
nop
cmp
and
lcall
xor
inc
jge
mov
icebp
mov
fwait
lret
popa
jne
mov
push
cmp
sbb
cli
push
mov
cmp
aas
cmp
pop
addr16
push
dec
ja
lcall
inc
xchg
mov
mov
adc
inc
xlat
and
fs
repz
push
lret
mov
jnp
mov
jecxz
dec
cli
push
and
inc
ja
insb
cmp
out
and
loopne
cmp
bound
paddusb
inc
pop
jmp
orl
jge
hlt
add
add
mov
push
add
add
cmpl
rol
mov
mov
sub
pop
aas
pop
lahf
push
mov
loop
and
fisubrs
push
adc
movsl
shll
out
pop
pop
pop
inc
enter
insl
ja
sti
adc
ds
mov
addr16
out
loope
mov
daa
cmp
push
into
xor
mov
lcall
xor
cs
ret
in
ret
and
jb
psrad
jne
mov
push
adc
imul
sub
fsubrs
out
lret
jo
sbb
cmc
cmp
insb
test
mov
adc
mov
mov
movsl
cld
jne
sub
call
hlt
cmpl
int3
push
outsb
add
rorb
or
mov
lcall
test
sbb
push
jl
xor
pushf
mov
aaa
test
push
leave
inc
add
pop
adc
jle
sub
sub
ss
push
xor
out
outsl
adcb
inc
cmp
mov
loop
lret
mov
sbb
addr16
cli
and
sarl
push
push
imul
jo
mov
insb
sahf
popa
insl
lds
iret
pop
xchg
jnp
xor
mov
inc
cmp
dec
mov
rolb
popa
sbb
mov
pop
test
sub
filds
movsl
mov
inc
sbb
lea
out
add
icebp
movsl
idivl
in
or
fdivs
imul
insl
mov
out
pop
push
push
cmpsl
jmp
push
fcompl
shl
jmp
bound
cmp
mov
into
sarb
incl
aaa
push
dec
clc
test
fcmovnb
stos
fcomi
notl
pusha
sub
jp
in
setns
jge
mov
popa
ja
mov
out
loope
ljmp
mov
push
jge
adc
add
jmp
cltd
xchg
hlt
data16
add
sahf
mov
jmp
xor
pop
cmpsl
inc
loopne
dec
insl
push
add
aad
aaa
xchg
repz
daa
shlb
mov
jb
pop
icebp
inc
push
out
fdiv
push
sbb
psubd
fistl
push
pop
mov
adc
stos
pop
push
adc
mov
pop
pop
repz
nop
xchg
out
lods
scas
nop
mov
stos
and
inc
ljmp
popf
fisttps
lds
loopne
hlt
into
mov
dec
jp
jle
jp
cmp
jbe
mov
sbb
xchg
and
xchg
xor
out
xchg
inc
inc
dec
inc
loopne
out
xor
lret
mov
dec
mov
sub
xor
xor
cmc
gs
mov
or
pop
inc
repz
xchg
push
outsl
cld
pop
push
scas
jo
and
lahf
dec
enter
dec
bound
mov
mov
loopne
pop
addr16
inc
rcrb
shlb
jb
sahf
push
out
and
add
mov
mov
cmpl
imul
test
sbb
stos
fninit
mov
mov
fdivl
push
fnstsw
nop
add
cs
dec
mov
stc
inc
dec
stos
xchg
lods
imulb
mov
jg
aad
mov
addr16
mov
dec
int
lcall
mov
pusha
aas
leave
test
dec
pop
jge
cltd
inc
cmpsl
fwait
xor
inc
jecxz
dec
imul
dec
push
mov
inc
sub
dec
push
push
into
mov
insb
jp
test
ljmp
xchg
pushf
dec
and
add
pop
mov
stc
push
sbb
inc
sbb
les
call
and
sub
push
cmpsb
push
add
jne
lds
imul
push
call
fldl
pop
xchg
dec
jle
xchg
std
adc
outsl
sub
inc
das
inc
xor
xlat
loop
jnp
xor
les
cwtl
icebp
fidivrl
or
out
or
ss
inc
cmc
sub
cmc
jmp
cwtl
es
pop
adc
or
cmc
add
xlat
xchg
mov
in
leave
sub
push
outsb
jecxz
shlb
jns
rcll
sbb
sbb
cwtl
int3
dec
pushf
pop
ret
mov
cmp
push
inc
mov
mov
in
mov
sbb
and
icebp
jo
jg
pop
arpl
pop
repz
or
stos
mov
pop
ret
jl
movsb
rorb
xchg
sub
pop
aaa
fsubs
xchg
sub
mov
push
mov
mov
sbb
mov
mov
ljmp
push
es
stc
jge
loop
push
enter
fcompl
jb
or
push
xchg
mov
ficoml
inc
stos
imul
jmp
or
xor
sarb
cld
sahf
cmpsl
mov
jo
fwait
sbb
jae
xchg
mov
mov
mov
mov
dec
leave
lds
leave
cltd
les
xchg
adc
ud0
scas
ret
mov
sbb
outsb
out
lea
orl
jl
psubsb
sbb
xlat
popf
pop
adc
sbb
std
mov
dec
xchg
icebp
sarl
mov
into
dec
push
mov
pop
gs
add
and
leave
out
pop
mov
ja
cwtl
ljmp
cmp
pop
pop
mov
sbb
ja
mov
out
add
lods
cmc
and
movsl
mov
shrb
sarb
xor
les
in
cmpsl
adc
rcl
adcl
aas
test
shlb
test
push
jmp
pop
cmp
jno
push
xlat
or
out
sub
popa
andl
in
jmp
leave
cmp
cmp
inc
inc
in
xchg
sbb
dec
pop
cmp
stc
jp
popa
mov
add
pop
adc
sbb
and
sub
and
mov
jecxz
mov
rcrb
ds
cld
outsb
mov
sahf
and
jl
cmp
fdivr
sub
mov
mov
xor
repnz
inc
cli
sub
std
int3
cmp
jne
jmp
call
sub
dec
sti
dec
dec
lods
outsb
int
int
mov
out
lds
iret
filds
lret
aaa
dec
fiadds
mov
jnp
cmp
call
cmpsl
imul
mov
sub
xchg
cmp
jmp
cli
imul
stos
pop
ficoml
aas
mov
mov
enter
push
nop
jb
test
rcrb
loopne
fbld
xchg
imul
pusha
stos
adcb
sbb
pop
mov
inc
lods
out
mov
adc
pop
inc
int3
mov
test
les
pop
jo
cli
xchg
mov
dec
das
inc
cmc
inc
cmpsb
add
mov
or
xchg
ficomps
pop
or
mov
rolb
daa
dec
or
inc
inc
into
fcomps
outsl
inc
outsl
cld
cmpsb
jmp
xor
pusha
push
fistps
subl
mov
aam
mov
or
notb
xchg
fimuls
ret
clc
inc
and
enter
add
lret
push
jns
pop
sub
in
in
add
inc
lret
aam
push
xchg
cld
jecxz
sti
movsl
in
ss
incb
int
lods
ret
mov
push
add
push
and
or
inc
aad
loopne
jne
sub
xor
test
fisubrs
sahf
scas
shll
jnp
fsubl
jae
iret
in
pop
add
scas
push
ds
and
fldl
jl
mov
dec
aas
int
jecxz
hlt
js
xchg
es
loopne
repnz
xor
hlt
test
push
call
push
push
sarl
push
je
es
movsb
bound
imul
fs
jl
mov
xchg
mov
dec
xor
mov
mov
sub
or
loop
cmp
jmp
fcom
or
cli
ret
test
out
lods
pop
test
sbb
test
repnz
adc
push
push
pop
mov
fcoms
push
inc
add
mov
sahf
pop
stos
or
or
loope
rcrb
inc
cmp
add
mov
hlt
mov
fimull
mov
sbb
ljmp
js
mov
cmp
rorl
in
lret
fstp
or
pop
cmp
xchg
push
pop
cmp
dec
int
ljmp
bound
js
fists
push
pop
xor
imul
dec
nop
data16
add
lcall
jbe
fcmovbe
lea
leave
push
inc
sub
mov
mov
mov
cltd
pop
and
xor
shll
out
std
repz
mov
cmp
inc
lcall
push
imul
xchg
shll
jne
mov
test
sahf
pushf
mov
xchg
lcall
xor
pop
loop
pop
jg
cmp
lods
and
fadd
shrl
inc
mov
cs
jp
outsl
stos
sbbb
fcmovu
sti
jbe
dec
lods
lret
into
sbb
inc
outsb
es
mov
flds
jmp
push
adc
arpl
dec
daa
mov
test
test
jne
test
pop
dec
sub
daa
out
push
insl
and
jge
or
mov
cmp
xor
ss
mov
pusha
outsl
jno
lods
push
push
and
adc
cld
inc
xchg
pop
jns
cmp
sub
aaa
mov
pop
pop
and
mov
dec
xchg
pushf
xor
push
loope
lock
adc
in
pop
xchg
mov
cmp
adc
testl
inc
cltd
push
jb
gs
jg
mov
jp
xchg
xchg
xchg
ljmp
out
sbb
in
int3
xor
sahf
pop
push
arpl
jno
aas
pop
jge
add
pop
loope
dec
jg
jbe
cmp
push
lcall
pop
xchg
cmpsb
les
cmp
fstl
xchg
int
xor
or
es
push
cmp
sub
aaa
mov
inc
movsl
push
and
or
roll
add
mov
insl
scas
cmp
inc
dec
mov
cmp
push
jl
icebp
rcl
xchg
mov
mov
mov
add
or
lahf
rcrb
rcll
cmpsb
adc
mov
imulb
pusha
jg
xchg
sub
inc
and
ret
sbb
clc
dec
add
xchg
stos
lods
mov
fnstenv
pop
dec
xor
imul
stos
insl
scas
neg
into
das
push
pop
inc
sahf
ja
mov
lahf
sub
aam
enter
aad
imul
mov
sarb
xor
fwait
sub
mov
xor
aaa
mov
cmp
call
jne
movl
nop
sbbb
sahf
mov
rcll
push
xchg
lcall
loop
int
out
cli
test
arpl
add
lds
sbb
aad
shrb
aad
dec
xor
scas
lret
jp
push
mov
inc
xchg
mov
lock
xor
xchg
adc
lods
mov
xchg
xchg
sub
sbb
loope
mov
repz
pop
mov
lahf
jg
dec
aaa
xor
sbb
jl
sub
ret
cmp
ljmp
dec
sub
mov
and
push
insb
push
mov
nopl
mov
call
rorl
lods
dec
jno
xchg
xchg
outsl
mov
int
inc
xorb
xchg
daa
das
pusha
push
mov
es
adc
jp
por
insb
cmp
mov
in
sub
sbb
jae
fstl
mov
xchg
sub
mov
ljmp
int3
test
adc
mov
xchg
fs
mov
fs
pop
stos
xchg
cs
pop
sbb
ret
mov
add
inc
sbb
arpl
jae
pop
decb
dec
out
orb
negl
xchg
out
rorl
in
scas
into
test
roll
mov
adc
cmpb
jbe
leave
imul
outsb
sub
cmpsl
ret
mov
popf
sub
roll
sbb
jb
xchg
stos
adc
adc
mov
add
and
mov
das
xchg
mov
push
sarl
xlat
push
stc
sub
test
pop
mov
pop
call
lret
mov
inc
or
jno
mov
adc
test
push
mov
cmp
dec
dec
pusha
pop
sbb
mov
dec
sub
mov
dec
insl
pusha
push
mov
popa
sub
or
sub
stos
push
lea
or
fistl
jl
sbb
and
cltd
mov
and
or
jb
jo
mov
sub
jecxz
int3
dec
jno
shlb
xor
shlb
iret
lcall
xor
dec
mov
adc
mov
sbb
inc
jge
shr
stc
repz
or
xchg
dec
xchg
inc
xchg
mov
mov
cli
mov
mov
mov
add
or
adc
nop
jae
andb
shll
fnstcw
inc
pop
and
mov
lds
addr16
stos
pop
ret
jge
sarl
inc
gs
scas
test
iret
cltd
push
shll
adc
dec
pop
enter
pop
jo
push
adc
les
pushf
sub
leave
mov
js
sub
mov
inc
shr
imul
je
cmp
in
adc
push
arpl
jg
shufps
ret
sbb
test
dec
mov
negl
jno
adc
movsb
mov
adc
pop
sbb
push
lock
stc
inc
mov
mov
sub
lret
jecxz
dec
mov
addr16
dec
sbb
xor
lock
jle
aas
adc
out
inc
mov
xor
mov
subb
jns
mov
lret
enter
sbb
shl
ret
rcrw
push
enter
stc
movsl
jo
mull
popf
cmpb
mov
imul
pusha
inc
mov
sbb
out
or
cli
sbb
mov
pop
push
lahf
xor
jb
adc
into
pop
repz
ds
aaa
mov
cwtl
cwtl
cwtl
sbb
mov
in
mov
pusha
cmp
cmp
mov
adc
ljmp
inc
ret
xchg
movsl
repnz
xor
les
push
fstps
clc
xchg
movsl
cs
inc
test
xlat
xor
movsb
jbe
adc
sti
clc
popa
xchg
dec
gs
aaa
orl
push
add
inc
loope
push
pop
mov
push
orb
movsl
and
inc
mov
pop
push
sbb
movsb
inc
push
arpl
movsb
push
leave
addb
shr
push
adc
pop
xchg
jns
and
pop
inc
lock
sub
pop
ret
sub
dec
lcall
dec
jne
add
and
ficoml
xor
out
push
xor
mov
xor
pusha
fs
pop
mov
or
push
sub
mov
pop
jae
cmpsl
dec
lret
xchg
pop
repz
scas
adc
mov
mov
pop
jecxz
push
inc
pop
cmpsb
lea
inc
jp
adc
sarl
push
lods
push
ds
nop
mov
push
or
mov
add
sbb
jnp
aad
add
jne
pop
push
enter
dec
test
xchg
push
pop
sub
push
int
loopne
cli
mov
addr16
fsubrs
sarb
jp
jns
or
xchg
movsl
cmpsb
testb
xor
rolb
push
cmp
xor
mov
fabs
add
mov
cmp
hlt
mov
divl
push
add
addb
outsl
pop
fmuls
push
div
mov
dec
test
test
and
fwait
and
daa
cmp
test
push
andl
or
inc
lock
pop
pop
sub
out
xor
xchg
das
mov
je
sbbl
stos
pop
push
mov
lea
dec
bound
dec
mov
pop
rorl
mov
push
inc
cmpsl
stos
shlb
test
mov
out
idiv
scas
or
xchg
push
jne
imul
outsl
push
icebp
or
pop
in
lock
imul
loopne
jge
pop
cmpsb
shrb
inc
adc
jb
xchg
repnz
mov
ljmp
lret
jg
jle
cltd
les
mov
shrb
in
pop
pop
push
and
lret
and
sub
lods
ss
sbb
mov
or
add
in
ljmp
adc
cmp
fstp
in
sub
inc
add
iret
sbb
jmp
jnp
and
or
xchg
pop
add
iret
icebp
mov
fistps
dec
stc
sbb
sub
sarb
pop
imul
pusha
lea
fisttps
xchg
scas
jne
repz
jmp
push
pop
inc
ss
xor
or
fidivl
and
stos
jecxz
cmpsb
sbbb
push
and
cld
pusha
iret
push
mov
ret
mov
push
ret
int
bound
push
mov
leave
dec
inc
nop
arpl
mov
out
lea
pop
popa
mov
mov
clc
pop
cmpsb
push
popa
mov
push
repnz
negb
rcl
js
test
sub
sub
push
into
sbb
mov
enter
mov
cmp
stc
repnz
xchg
adc
jne
mov
mov
cmp
roll
mov
dec
int
mov
mov
jae
js
inc
jmp
rcrl
mov
ja
roll
fwait
in
mov
ja
and
icebp
in
clc
fildl
jbe
loop
hlt
xchg
nop
inc
lods
dec
mov
shl
ss
push
and
repnz
xor
mov
pop
push
fadds
and
mov
data16
inc
push
pop
and
adc
fsubl
mov
cwtl
mov
imull
mov
cmc
pop
jne
aas
cs
ficoml
jl
push
cmpsb
mov
jns
and
add
jno
adc
pop
enter
imul
sbb
fst
fnstcw
xlat
sub
ja
fs
adc
mov
inc
mov
ljmp
ss
jo
xor
shlb
fdivp
insl
inc
add
and
push
mov
icebp
inc
lret
inc
inc
adc
inc
lcall
test
xchg
cmp
jp
dec
lret
adc
out
scas
push
xchg
cmp
fisttps
sub
cmp
loopne
dec
and
cltd
push
cs
mov
test
loopne
jge
mov
arpl
inc
dec
fdivrp
inc
mov
icebp
sbb
xor
bound
or
sub
push
jne
jecxz
pop
lock
pop
int
lcall
dec
repz
data16
jno
negl
inc
jmp
in
sub
or
ret
sbb
inc
packsswb
sub
icebp
adc
jo
jns
fisttps
outsb
lea
cmpsl
subb
divl
or
cmc
xchg
arpl
std
inc
lahf
adc
je
xchg
cmp
mov
mov
sub
aas
and
mov
repnz
popf
enter
lock
outsb
mov
sbb
and
jp
xor
daa
jns
mov
mov
mov
xchg
sub
or
dec
loopne
pop
jno
xchg
mov
push
inc
push
arpl
jg
jecxz
sbb
mov
xchg
push
out
push
das
in
push
incb
jne
jp
push
rorb
fdivs
adc
inc
ds
push
sbbb
mov
push
popf
fwait
sub
cmp
xor
xchg
xchg
rorl
in
add
movsl
dec
int3
loope
popl
or
push
filds
outsb
std
pop
pop
xor
sub
orb
jne
sbb
mov
ljmp
scas
xor
jecxz
add
loope
rcrl
dec
cmp
dec
xlat
adc
xor
sub
ret
pop
dec
xchg
aam
push
jg
pop
jle
insb
and
jp
imul
nop
jbe
ljmp
jns
pop
loopne
mov
loop
pop
fstpt
enter
aas
sub
inc
mov
jecxz
sub
push
sub
xchg
fbstp
jl
ljmp
fistps
ds
xchg
ljmp
add
dec
in
sbb
jecxz
add
pop
lret
push
cmpb
lcall
fimull
clc
sbb
mov
and
scas
ss
sbb
push
push
ja
lock
daa
mov
shrl
mov
scas
push
add
xor
in
add
lcall
mov
dec
daa
std
jle
ds
fs
push
xor
mov
xchg
fbstp
fisubs
mov
aas
leave
adc
jl
mov
stos
sbb
out
inc
add
mov
lock
adc
jne
pop
adc
mov
adc
xchg
xchg
xor
inc
aaa
or
push
pop
je
jbe
mov
test
or
sbb
lret
test
push
outsl
mov
repnz
push
push
out
insl
dec
and
mov
adc
mov
jb
push
out
mov
adcl
std
cmp
call
or
pop
xor
scas
mov
js
aad
dec
mov
std
jecxz
mull
or
push
push
pop
dec
cltd
test
xchg
cmp
sub
lea
lea
xor
call
sub
and
seta
les
pmaddwd
in
xchg
xchg
cld
xlat
mov
jns
test
push
stos
mov
insl
in
out
cmpsb
xor
lds
movb
ja
cmp
sbb
std
pop
fcompl
or
outsb
cmp
mov
icebp
jg
mov
mov
mov
jmp
and
cld
xor
sub
cmc
movsl
add
mov
pop
adc
into
fidivs
inc
push
pop
clc
fs
jle
mov
insb
fs
cmp
or
icebp
je
dec
test
rclb
int
adc
notl
or
jae
ret
das
int3
cmp
cmp
push
cld
fldt
pop
xor
test
mov
xchg
jle
daa
popf
mov
out
call
inc
xchg
push
and
jno
out
lods
stos
cmp
xor
es
lret
movsb
lcall
lods
or
mov
into
xor
lods
xor
iret
jg
fs
mov
cmpsb
hlt
push
dec
xor
push
xor
jge
sub
mov
jno
pop
jb
ud0
mov
add
and
xor
inc
adc
inc
daa
xor
mov
enter
addb
out
jle
jnp
mov
pusha
xchg
mov
repnz
pop
das
adc
inc
lahf
fsubl
jecxz
lock
xchg
jbe
push
andl
inc
lret
cltd
std
loope
test
mulb
aas
inc
mov
adc
push
mov
fs
div
popf
inc
fwait
sbb
mov
mov
sbbb
outsl
or
sbb
add
mov
dec
inc
mov
jbe
loopne
push
repnz
nop
ds
aaa
mov
jb
pushf
nop
or
cwtl
dec
or
lret
mov
push
push
push
sbb
pop
mov
mov
mov
jmp
xchg
pop
lret
adc
mov
ja
popl
aam
add
fcoml
and
stos
aad
sbb
pusha
inc
lds
int
pop
ja
pop
cmp
out
lea
test
push
mov
sbb
cld
xor
cmp
inc
push
test
xor
sti
xor
shl
bound
cmp
fnstsw
pop
xlat
inc
push
or
not
mov
std
mov
or
pop
adc
xchg
xchg
lret
push
or
scas
push
pop
sub
jmp
jp
pop
jno
sbb
loop
inc
int3
minps
cmpsl
sahf
jp
mov
sbb
imulb
xor
aad
jp
add
aaa
xchg
test
and
loop
test
mov
dec
adc
stos
mov
pop
xchg
mov
inc
and
xor
jg
jnp
inc
jnp
dec
cli
adc
stos
dec
fs
cmp
shl
stc
adcl
pushf
adc
cmp
xchg
lods
repz
cltd
sub
sub
inc
addl
mov
negb
xchg
mov
and
xchg
cmpsb
call
sbbb
loope
into
cmp
mov
fisubrl
adc
or
jne
cwtl
subb
mov
enter
lret
mov
inc
aad
xlat
adc
loopne
pushf
jae
hlt
or
pop
pop
cmp
rclb
mov
adc
mov
popf
push
pop
idiv
xor
in
mov
sti
mov
adc
sbb
mov
mov
js
inc
pop
jp
ror
aaa
xchg
jno
sti
std
fucomi
add
sbb
test
mov
or
lret
pop
aad
add
xchg
jne
inc
aad
decb
cmp
fucomi
hlt
xchg
dec
cli
fdivs
sbb
mov
inc
push
hlt
add
mov
xor
sub
aas
jae
lods
in
loop
inc
and
push
adc
jg
fidivrs
jle
mov
xchg
sbb
fwait
fwait
xchg
and
stos
mov
incb
jmp
inc
mov
mov
sbb
sti
fsubs
sub
ljmp
push
xchg
and
adc
ljmp
test
jle
mov
std
lods
jle
push
lcall
add
imul
pop
xchg
gs
mov
addb
inc
lahf
ds
stos
cmp
sti
stos
push
mov
rcr
xchg
adc
xlat
ror
sub
fcmovbe
pop
mov
fs
mov
add
cmp
push
inc
pop
fdivs
push
mov
aad
jg
fsubr
pop
pop
repz
xchg
adc
mov
ret
stos
jae
outsb
or
stc
push
and
mov
adc
mov
popa
sbb
and
fistpll
int
inc
cmp
cwtl
mov
add
push
fwait
in
in
xlat
pusha
inc
jmp
pop
out
lods
pop
mov
sbb
mov
or
js
in
or
outsb
pushf
addr16
das
or
mov
dec
js
xor
testb
mov
sub
adc
sub
cmpsl
mov
lds
pop
std
icebp
in
jecxz
jnp
push
jns
int3
cmp
add
dec
dec
adc
aad
fdiv
testl
or
stos
cmp
inc
test
fldl2e
mov
or
mov
aad
fcmovne
adc
inc
jl
mov
call
or
hlt
repz
or
mov
sub
add
and
add
jne
fwait
sbb
adc
xor
push
scas
cmp
xchg
cs
xchg
or
xor
sub
sbb
cs
dec
popa
pop
jbe
lahf
adc
out
ljmp
push
clc
xchg
push
nop
rcr
sarl
push
cmpsl
xor
and
xchg
subl
mov
push
test
pushf
add
and
mov
sbb
xchg
jnp
je
fwait
hlt
cs
clc
inc
cmp
lock
icebp
xlat
scas
pop
and
addb
jmp
jb
pop
xor
pushf
int3
popf
aad
fs
mov
jae
int3
outsb
jp
and
inc
xchg
pop
das
adc
and
cmpsb
into
popf
popa
xchg
imul
scas
mov
lret
negl
pop
mov
cmp
dec
call
mov
subl
sub
mov
lock
jecxz
jne
mov
mov
dec
inc
mov
enter
test
imul
push
js
or
icebp
rclb
daa
out
jl
iret
sub
out
mov
or
fdivrs
pop
pushl
push
mov
push
sbb
mov
rol
or
movsb
adc
or
jg
lret
jb
popa
jb
mov
lock
inc
fwait
mov
dec
loop
cmp
mov
inc
addr16
xchg
mov
push
addr16
cltd
scas
insl
jmp
aas
lock
nop
mov
inc
xor
jae
and
out
sbb
sbb
pop
fsubp
push
clc
cld
mov
xchg
clc
pop
repnz
pop
adc
adc
mov
add
aaa
inc
lods
mov
test
pop
pusha
loopne
xor
lahf
sub
es
or
out
pop
rcr
jmp
mov
cpuid
push
jle
nop
loop
dec
loopne
cmp
mov
jle
sbb
dec
sub
movsb
mov
cld
inc
jae
push
cwtl
repnz
jl
fstpl
or
and
test
std
and
add
mov
inc
jmp
jnp
jg
and
outsl
dec
shll
mov
insl
xchg
sub
xchg
cld
data16
mov
push
inc
jg
cld
inc
cmp
sub
cltd
cli
mov
mov
iret
xor
jmp
movsl
stc
mov
aad
imul
jmp
sub
and
mov
fstpl
xor
out
add
movsb
in
push
mov
jle
leave
pop
lods
cmp
push
int
fildll
out
sbb
dec
mov
or
jbe
imul
adc
add
test
push
and
push
addr16
push
insl
and
scas
aaa
pop
sti
mov
scas
in
push
pop
shl
mov
add
sub
lcall
neg
das
pushf
rol
pop
xor
out
shrb
jnp
cmp
mov
mov
leave
stc
adc
jns
jl
insb
and
xor
data16
into
xor
mov
dec
mov
jecxz
repz
movsl
add
iret
xor
pop
rcr
sub
pop
push
repz
dec
push
xchg
add
add
mov
mov
call
imul
aaa
aaa
loope
cmpsl
or
cmp
ljmp
arpl
xor
lahf
out
adc
adc
jle
mov
jle
sbbl
lcall
mov
mov
orb
cmpsb
cwtl
repz
adc
out
xor
mov
and
and
adc
add
jle
push
push
lahf
pop
pushw
jns
in
dec
fsubs
push
add
and
cmc
or
or
mov
mov
jp
jnp
loope
adc
decb
ljmp
mov
loopne
mov
or
mov
mov
mov
jmp
mov
mov
scas
icebp
out
pop
or
sbb
sub
mov
gs
fnstsw
and
negb
fsubl
push
sbb
xchg
lock
lods
addl
mov
cs
arpl
js
lret
mov
cmp
mov
fmull
push
xor
out
jbe
leave
pop
dec
mov
sub
stc
out
pushf
out
inc
sbb
xchg
fisttpl
xchg
jbe
mov
ror
add
ds
rep
xchg
fs
lods
mov
xchg
dec
pop
aas
repz
ss
fisubs
cmp
in
enter
jb
lret
outsb
cmp
jae
dec
int
ret
mov
insl
lods
pop
jge
push
mov
loopne
push
fistps
nop
inc
cmpsb
shlb
xchg
inc
daa
scas
fisubl
movsb
gs
add
inc
enter
inc
ja
and
out
loop
cltd
mov
sbbl
stos
jmp
mov
cmc
jo
enter
pop
js
repnz
fisttps
adc
aam
mov
mov
dec
dec
dec
jle
inc
je
pusha
sub
int3
movsb
push
out
cs
push
dec
adc
adc
inc
and
jbe
sbbb
andb
test
aad
stc
dec
pop
out
pop
out
fdivs
test
outsl
mov
dec
add
sahf
jo
cmp
or
ss
scas
movsl
std
test
addr16
lahf
add
cmp
std
iret
call
pop
fs
int3
js
sti
bound
mov
mov
sub
sub
ret
xor
test
stos
ds
pop
cmc
pop
xor
int3
adc
cmpsb
outsl
mov
aaa
and
jmp
sub
cld
test
mov
lcall
xorb
pop
adc
push
mov
sbbb
rol
add
sub
add
inc
gs
lods
add
xchg
mov
fcoms
mov
xchg
loopne
jno
nop
cld
sub
mov
dec
mov
pop
aas
lret
or
repz
fsubl
xchg
inc
push
add
cs
lret
test
dec
aad
mov
sub
daa
dec
push
popa
repz
push
movsl
sub
jae
mov
mov
daa
icebp
fldenv
push
mov
sbb
ficompl
and
cmpsl
mov
cmp
and
mov
pop
sub
xchg
jo
jbe
xor
mov
stos
sbb
imul
xor
enter
clc
lret
ret
dec
fxtract
cmpsb
or
cmpsl
movb
add
adc
int
lods
xorl
mov
xchg
cs
mov
add
aaa
xchg
dec
pop
jl
mov
ffreep
repnz
xchg
icebp
test
cmp
call
call
xor
xor
xchg
insb
sub
mov
in
loop
idivl
mov
sub
pop
ss
dec
and
fstpt
stos
lahf
popf
outsl
decb
sbb
icebp
mov
jle
out
fwait
push
xchg
and
imul
sbb
cmp
mov
stc
sub
pop
or
xor
fxch
rcrl
popl
cmp
loop
push
jns
leave
or
mov
insb
mov
mov
dec
call
mov
xchg
inc
cwtl
mov
shrb
cmc
xor
push
out
inc
mov
dec
push
dec
dec
in
lahf
js
jnp
push
addb
ror
cwtl
adc
mov
or
and
daa
inc
rorw
aas
or
mov
xor
push
dec
gs
xchg
and
push
nop
sti
jnp
stos
and
dec
and
inc
in
dec
lds
mov
mov
loop
scas
push
jp
jo
jmp
pop
sub
pop
jmp
and
in
mov
push
and
ret
cmp
ljmp
jle
sbb
loop
mov
mov
mov
mov
inc
into
sbb
jmp
mov
sub
cmpsl
push
mov
addr16
out
mov
test
add
test
in
xchg
iret
sub
loopne
stos
adc
push
mov
stos
jmp
mov
sub
jge
mov
pop
movsl
test
test
dec
aad
out
jae
mov
dec
in
sub
and
cmp
idiv
mov
ja
iret
mov
inc
adc
addl
or
dec
addb
mov
iret
testl
xchg
daa
mov
int
and
cmp
mov
add
test
mov
cmp
int
ljmp
or
fnstcw
jmp
lods
cs
or
jge
js
adc
mov
movsb
mov
mov
sti
pop
fldt
mov
sbb
gs
pshufw
add
int
dec
add
cld
xor
cwtl
cmp
sbb
jp
mov
movsb
rcrl
push
xchg
fimull
in
jnp
mov
push
sbb
fistpl
pushf
dec
and
sbb
sub
je
arpl
stc
cld
out
jno
outsl
xchg
je
loopne
shll
mov
mov
int
push
push
pop
out
lcall
cmp
rcr
ret
jbe
jg
ja
xor
sbb
fldl
pop
sub
jl
mov
je
test
fsub
ret
repz
mov
mov
push
stos
cwtl
cwtl
mov
sbb
push
outsl
and
xchg
xchg
pop
cmp
xchg
jno
inc
sti
icebp
sti
adc
mov
ljmp
repz
movsb
sub
cmp
jle
jae
js
cmp
mov
in
cld
pop
scas
loope
push
push
dec
xchg
push
cld
rolb
std
shlb
orb
je
xor
fildll
scas
sbbb
xor
sub
push
adc
dec
fistps
ds
idivl
movsb
xchg
cmp
jle
xor
mull
icebp
xchg
daa
sub
xor
mov
sub
shlb
rcll
add
cmp
inc
and
cmp
aad
loope
call
in
std
mov
mov
cmpl
or
je
mov
repz
jmp
adc
xchg
movsl
or
mov
adc
cltd
sub
stos
bound
sbb
clc
fadds
mov
es
or
mov
lret
inc
sub
add
pop
faddl
int3
adc
shlb
mov
cmp
inc
add
lods
push
mov
cmp
lds
cmp
imul
mov
mov
dec
iret
aam
mov
jo
les
cmpsl
and
mov
dec
sbb
stos
mov
orps
adc
sbb
lods
es
push
xor
mov
mov
repz
push
add
cli
cmpsb
jbe
imul
aad
ficompl
mov
adc
jecxz
js
xchg
mov
cwtl
daa
cmc
jnp
jmp
enter
std
mov
les
and
push
std
dec
lret
mov
jns
adc
xchg
jle
xchg
bound
sbb
mov
sbb
or
int3
push
jp
add
sub
je
lret
daa
or
div
imul
or
aad
mov
jge
push
jg
out
adcl
or
cli
fdivr
shlb
fistps
loop
imul
add
push
fldenv
sbb
fxch
or
xor
xchg
mov
xlat
inc
mov
pop
sti
xchg
repz
or
fbld
gs
cmp
je
loopne
add
sbbl
rclb
jmp
jmp
jae
xchg
adc
arpl
popa
adc
adc
xchg
imul
fwait
sbb
test
hlt
cld
xchg
add
mov
fcompl
gs
in
cmpsl
dec
std
dec
dec
hlt
sbbl
xchg
stos
js
cmp
nop
xor
aas
sub
std
int
jnp
jmp
push
jnp,pn
test
ja
bnd
lods
scas
ja
fsubs
cmp
mov
and
or
testl
sbb
popf
mov
mov
lahf
xchg
mov
sbb
push
mov
fiaddl
fnstenv
inc
std
sub
mov
fldenv
call
inc
dec
dec
pmullw
stc
inc
jg
notl
lods
xchg
or
out
std
add
iret
aaa
test
out
cmp
adc
call
pusha
push
push
add
and
pop
pop
sarl
or
adc
adc
pusha
push
xor
and
aaa
rol
mov
inc
lds
sahf
movsl
mov
inc
shl
in
daa
cmpsl
push
fisubrs
push
cs
out
lds
into
fcomps
add
mov
xchg
mov
mov
pop
adc
sbb
dec
push
fcoml
mov
mov
cmp
jnp
test
les
negb
lea
jecxz
xchg
dec
push
adc
jmp
pop
xor
les
hlt
add
inc
xor
adc
pop
xor
jnp
adc
test
insl
fwait
push
sbb
dec
inc
xor
and
add
mov
push
ret
fildl
lods
inc
mov
xlat
repnz
shlb
xchg
das
or
stos
sub
adc
stos
cmp
xchg
pop
cmpsb
and
addr16
sbb
fwait
les
insb
aaa
xchg
fnstsw
je
icebp
mov
outsb
xor
adcb
push
sarl
push
ljmp
push
lahf
into
je
repnz
add
arpl
jg
bound
ljmp
mull
adc
subb
push
movsl
jl
ljmp
shr
insb
cli
das
push
mov
into
sar
cltd
push
mov
push
nop
jp
dec
sub
cli
int
or
adc
xorl
ret
sub
clc
incl
mov
jns
imul
xchg
sbb
lds
xor
or
aaa
jbe
and
stc
lcall
fsub
or
push
ja
lahf
in
sbb
dec
add
movsb
adc
and
pop
lods
jl
add
adc
cmp
pop
xchg
cltd
stc
jmp
mov
mov
test
pop
scas
push
loopne
pop
into
push
jle
sbb
int
movsl
pop
into
mov
fs
jbe
adc
sub
scas
and
cmp
cmp
imul
inc
int3
pop
sbb
sub
faddl
mov
mov
or
cmpsb
gs
test
fistl
jmp
mov
fbld
mov
sbb
shr
add
sub
insl
aad
jge
adc
leave
jl
cli
lods
mov
subl
jmp
dec
addr16
xorl
pop
movsb
jmp
mov
mov
or
out
pop
cmp
or
andb
in
cli
fstpl
push
or
add
xlat
hlt
mov
mov
test
pop
loopne
dec
outsb
mov
les
mull
in
inc
pop
fiaddl
in
push
xchg
or
mulps
inc
sahf
mov
sbbb
sbb
and
sub
cld
sub
icebp
dec
rclb
xor
fnstenv
dec
mov
pusha
cmp
dec
aaa
leave
iret
jne
xor
and
orl
scas
stc
ljmp
clc
inc
xor
inc
jnp
arpl
aas
jmp
imul
inc
imul
lock
push
sbb
out
adc
mov
int3
jmp
mov
lahf
adc
cmp
fwait
push
lret
into
mov
sub
aas
out
jns
cmp
inc
dec
aam
loop
sbb
fwait
ret
decl
ljmp
xchg
gs
leave
cmp
xchg
sub
inc
mov
inc
pop
sbb
repnz
mov
push
stos
mov
jge
out
testb
mov
mov
lahf
lods
adc
and
adc
xchg
adc
seta
cmpsb
outsl
lods
je
xor
ljmp
mov
gs
xchg
out
cs
insb
mov
jb
pushf
hlt
add
fildll
xor
mov
mov
add
shlb
inc
int
push
arpl
fs
shl
dec
fs
jmp
or
and
out
pop
mov
adc
push
push
int
or
xchg
jl
jg
jle
jecxz
pop
out
pop
hlt
mov
js
testl
out
mov
fcomps
push
shr
pop
outsl
mov
addr16
pop
jl
ss
dec
movsb
test
jl
and
and
mov
sbb
or
cltd
sub
sub
ss
test
out
sbb
mov
lock
jbe
dec
rclb
push
pop
loope
je
popf
sbb
das
xor
cs
xchg
shrl
jp
rorl
mov
mov
mov
ja
mov
pop
sbb
out
stos
xchg
lock
xrelease
imull
pop
jae
rcrb
ret
out
movsl
and
cmc
sahf
cmpsl
movsb
adcb
enter
push
sub
pop
stos
mov
aaa
fwait
aad
xlat
rcrb
inc
add
and
cmp
test
xchg
dec
jg
push
mov
in
xor
jge
out
cmp
fwait
sbb
in
sub
nop
test
mov
lcall
pop
lea
aad
les
cmp
out
fisubs
arpl
mov
mov
fisubrl
cltd
cmc
fsubrs
xor
and
fnsave
orl
mov
ret
ja
mov
int
sbb
lret
xchg
fisubl
sub
xchg
or
pop
stos
dec
fcmovne
xchg
imul
jo
mov
dec
add
pop
rcll
inc
jns
pop
mov
bound
fsubrs
movsb
push
push
lahf
pop
cmovns
xor
cmp
or
insl
sarb
and
fildll
push
ja
push
pop
outsl
mov
sbb
add
and
jbe
pop
lods
daa
insb
push
sbb
mov
inc
mov
loopne
inc
cwtl
push
inc
rclb
xor
mov
xchg
jge
ret
push
push
dec
in
cmp
add
hlt
cmp
xor
jge
xchg
divl
andl
loop
bound
les
cmpsl
add
test
jns
and
cwtl
out
setle
push
sbb
jge
scas
adc
mov
mov
inc
int
mov
fstl
push
dec
pop
cmpsl
inc
dec
std
dec
pushf
add
out
inc
pop
out
mov
cmp
ds
or
fcoml
jp
mov
or
daa
add
stc
xchg
ret
je
ret
xchg
test
loop
sub
push
pop
aaa
cmpsl
adc
or
orb
mov
mov
outsb
lcall
jmp
jp
sub
sbb
dec
cmp
cld
loope
js
fldcw
sbb
mov
jnp
cmpb
push
and
dec
mov
jbe
std
and
lock
and
es
orl
dec
push
jns
popf
mov
jg
adc
cmp
pop
xor
lret
or
xchg
fidivrl
fidivs
mov
xchg
outsb
push
sub
inc
in
test
call
or
push
mov
pmulhw
out
aas
ret
pop
ljmp
aad
ret
loope
rcrb
dec
jne
sbb
mov
sbb
ljmp
repnz
out
jb
and
movsb
das
xchg
rorb
mov
and
pop
call
push
push
fisubrs
xor
clc
mov
sbb
cwtl
test
or
icebp
js
push
std
cmp
repz
aas
int3
or
lret
and
xchg
sbb
adc
hlt
jo
sub
popa
xchg
cmpb
sbbb
dec
and
cmpsb
lahf
cltd
dec
loope
ljmp
jns
add
ret
cmp
outsl
bound
cld
push
out
out
jle
popf
xchg
fldl
sub
xchg
mov
mov
lcall
mov
insl
jmp
mov
sbb
into
out
mov
stc
jg
cmp
shll
add
lods
xlat
sub
xor
mov
or
aam
cmp
push
xchg
sbb
xchg
les
jle
push
leave
or
jbe
das
xchg
insb
lcall
leave
mov
testb
fidivrs
cmp
xor
out
xor
mov
lret
mov
clc
sahf
inc
imul
into
sub
sub
dec
lret
iret
sbb
dec
inc
mov
sbb
clc
dec
out
mov
mov
pop
and
jmp
jno
xor
xor
dec
or
leave
or
dec
mov
xor
mov
inc
mov
mov
adc
sti
jg
cwtl
jns
scas
cltd
movsl
sub
jb
sub
pop
jae
xor
push
shlb
xor
fadds
jle
adc
push
pop
aas
push
adc
add
int3
idiv
and
inc
out
ljmp
pop
and
gs
mov
fs
mov
data16
jns
add
mov
push
cli
sub
sarb
lds
mov
fsubrl
fwait
xchg
scas
inc
mov
jg
imul
dec
xchg
jo
jne
adc
adc
test
cmp
cmp
mov
mov
in
jns
or
dec
mov
xchg
adc
sbb
mov
add
jns
fidivrs
mov
lods
loop
sbb
stos
pushf
loop
mov
mov
mov
jno
fadds
fmul
dec
adc
fisubrl
mov
mov
push
movl
aaa
jo
inc
mov
ret
jne
popf
or
je
lods
shl
rolb
jnp
fcompl
pop
jae
in
mov
std
popa
cmc
int
xor
inc
stos
adc
mov
dec
scas
and
mov
pop
enter
into
jns
sbb
pushf
lret
inc
jo
cmp
cmpsb
sbb
cmp
sub
dec
and
cmp
int
mov
imul
bound
dec
fnstenv
xor
cmpsb
cmc
mov
xchg
leave
cwtl
jb
jg
lea
adc
cmp
jns
mov
push
push
adc
sub
push
mov
cmp
test
daa
popa
movb
jecxz
xchg
fstl
adc
fldt
jne
mov
sbb
cmp
out
repnz
inc
xlat
fsubl
ret
sub
loopne
xor
jp
and
les
and
xchg
pop
imul
test
pop
xor
adc
xor
mov
out
hlt
daa
xchg
push
pop
int
sub
mov
push
jbe
lret
or
aas
sub
fmulp
push
inc
xchg
cmp
push
nop
bound
adcb
add
xchg
xchg
push
sbb
leave
sub
adc
adc
mov
sbbb
int
mov
jb
mov
in
sbb
jl
push
loopne
es
outsb
loop
sbb
pop
insb
adc
or
push
jno
in
push
loopne
inc
pushf
popf
mov
hlt
sub
add
fdivl
out
xor
add
shlb
cld
push
lea
jo
add
pop
loopne
jne
inc
or
adc
mov
shrb
jbe
or
cmc
add
mov
push
pop
push
cmp
push
mov
lcall
sub
imul
std
cmc
pusha
mov
cmp
mov
insl
dec
sbb
xor
sarb
jl
int
hlt
lods
cmp
xlat
arpl
fwait
popa
or
nop
xchg
xchg
pop
and
jge
jge
xchg
addb
lods
push
pop
mov
cmp
adc
scas
mov
out
ss
sub
pop
rorb
xchg
loop
jge
mov
int3
cmpsb
jge
cmc
ret
pop
or
call
mov
push
imul
fwait
addr16
mov
icebp
cltd
cmpb
arpl
sub
mov
jmp
mov
repnz
je
mov
test
pop
gs
jne
test
mov
cmpb
pop
mov
das
es
arpl
popa
arpl
mov
sub
pop
pop
pop
lret
rolb
push
sbb
loop
aaa
inc
lret
dec
cltd
stos
push
adc
aad
call
fidivl
dec
dec
scas
std
adc
repnz
jnp
adc
rorl
cld
xor
push
dec
fistl
push
insl
cli
push
dec
jno
sti
pop
movsb
push
and
dec
sub
mov
xor
lret
or
xchg
xchg
push
mov
pop
lds
mov
push
cmp
ds
sbb
lods
lods
sbb
and
daa
jbe
ja
or
test
cmp
jnp
ficoms
int
leave
or
fimuls
loope
outsl
adcl
dec
insl
add
mov
lods
stos
inc
je
pmovmskb
mov
mov
mov
notl
jb
push
push
push
or
xchg
xor
dec
xor
popl
adc
push
xchg
rcll
ja
shr
cld
xchg
rcrl
dec
mov
loopne
cmp
nop
sar
cmp
in
andb
testl
xchg
push
cli
lahf
adc
hlt
mov
fadds
into
ret
pop
cmpsl
or
mov
add
adc
or
push
push
mov
movsb
push
cmpb
jmp
push
fcmovb
xor
rorb
lret
in
adc
lods
push
subl
sub
mov
pop
and
int3
dec
push
cmp
mov
fcmovb
inc
sub
cmp
jbe
jp
lods
lcall
cmp
push
ret
mov
push
cld
adc
jae
mov
or
js
xor
mov
or
stos
imul
bound
pop
mov
out
out
jmp
fadd
cltd
aad
pop
xor
or
popa
xchg
mov
mov
sti
cld
pop
mov
out
mov
test
inc
ja
rol
aas
mov
push
xchg
pop
jp
out
ret
popa
xchg
dec
mov
shl
mov
add
mov
mov
cmp
add
or
jae
sbb
cld
popa
nop
sbb
xor
inc
xor
ret
pop
icebp
fwait
push
repnz
nop
xor
loope
or
mov
mov
dec
add
stos
imul
xor
es
pop
divl
fstl
xor
jle
std
les
push
lds
pop
es
inc
nop
aaa
pop
mov
ss
xchg
inc
icebp
xor
mov
sub
bound
popa
add
in
dec
sub
clc
mov
nop
pop
jns
jl
rsm
inc
lods
sbb
mov
mov
inc
adc
mov
jb
mov
sbb
sbb
sub
fdivrs
xchg
jle
fcomip
jb
sub
push
cmp
test
das
inc
cmp
add
scas
jnp
lds
jmp
push
into
iret
addr16
outsl
xor
inc
mov
stos
dec
and
dec
and
xor
or
psubsb
push
mov
rcrb
push
in
loopne
leave
cli
mov
lar
push
pushl
dec
mov
push
and
jmp
into
cwtl
dec
pop
pop
aam
xchg
lea
mov
sahf
push
int3
mov
mov
ret
add
xchg
cmc
cmp
dec
aad
mov
dec
sahf
dec
loope
xor
cmp
xchg
jp
inc
decb
pop
add
jle
dec
rcrb
xor
lret
fbld
dec
out
pop
enter
mov
std
nop
shlb
add
fistpl
sbb
cli
ret
leave
mov
xor
and
inc
inc
cmp
sub
mov
movsb
and
inc
jnp
xorl
ret
movsb
es
fs
test
add
inc
push
add
add
pop
cmp
sub
les
cmp
and
jp
sbb
into
and
sahf
or
dec
lea
lds
cs
mov
dec
lret
lods
xor
dec
cmpsl
inc
stc
fidivl
cwtl
clc
push
fs
scas
sub
stos
bound
mov
lahf
leave
jecxz
cwtl
jl
outsl
lea
fcompl
idivl
mov
dec
das
sbb
stos
outsl
jmp
rorl
imulb
cwtl
sbb
xchg
inc
push
rclb
mov
add
cli
add
sti
fldcw
xchg
fldenv
in
push
xor
insb
mov
aad
dec
adc
mov
sub
and
fisttpll
loopne
sub
pop
fistl
js
movsl
sbb
arpl
daa
cmp
pop
sbb
jle
lods
xchg
in
jns
out
lods
mov
push
out
mov
pop
adc
je
cmpb
push
push
push
popa
cwtl
inc
mov
mov
mov
push
addb
and
dec
ljmp
loopne
sahf
in
test
sti
fldl
insb
test
pop
cmpsl
xchg
push
in
lret
shll
mov
pop
in
je
xchg
nop
insb
daa
mov
mov
cmpsl
icebp
jno
add
sbb
or
xchg
arpl
pop
loopne
xor
push
cmp
jb
push
movsb
xchg
mov
ret
lcall
inc
pop
and
dec
sub
dec
dec
insl
call
or
add
fnstsw
jns
jb
imul
jg
popa
push
out
adc
add
cmp
push
in
sub
fdivs
imul
xchg
emms
insb
ret
pusha
push
inc
push
inc
repnz
add
lock
pop
jo
and
dec
fidivl
adc
and
insl
sahf
xor
and
jne
leave
arpl
pop
push
bound
ret
dec
in
and
repnz
sahf
iret
ds
cmp
insl
lret
push
in
js
lock
negl
mov
icebp
gs
push
hlt
jp
xchg
cmp
dec
dec
mov
sar
sbb
push
lahf
push
leave
fcomip
mov
pop
and
dec
push
jnp
ret
add
dec
or
das
sar
xchg
shl
ret
scas
xor
adc
inc
or
int3
enter
mov
add
jo
and
or
mov
adc
or
add
pop
bound
adc
daa
addl
inc
je
push
in
jge
mov
aad
shl
push
out
aaa
inc
xchg
clc
cltd
sbb
pop
inc
les
iret
sub
lcall
out
cli
or
xchg
xchg
imul
xorb
ljmp
or
pusha
or
mov
loope
dec
mov
pop
notl
mov
leave
sbb
jne
insl
push
lret
loopne
pop
push
test
push
in
and
inc
push
stos
xchg
and
push
xchg
adc
push
cli
dec
or
sbb
sbb
cli
sub
jo
call
pop
mov
je
mov
pop
lret
and
pusha
inc
lcall
inc
xor
inc
jl
dec
cmpsb
hlt
scas
add
ds
mov
int3
mov
jae
cmp
push
adc
lock
out
lcall
jns
movhps
adc
adc
add
jnp
sub
shl
inc
cmp
addb
mov
mov
mov
aaa
push
cli
lock
scas
je
inc
sbb
cwtl
adc
addps
sbb
imul
scas
outsb
mov
mov
sub
enter
xchg
or
inc
stos
cmp
jg
mov
fistps
xor
popf
aas
rorl
insb
push
pop
cmc
adc
int3
adc
insl
out
inc
iret
jg
cmc
mov
cmp
repz
stc
cwtl
and
insl
xor
js
push
mov
rcll
sbb
je
jl
stos
add
out
mov
insb
scas
out
sti
sub
testb
sbb
push
inc
mov
je
and
xchg
jp
push
pop
jae
out
pop
loop
push
adcb
pop
popl
push
filds
mov
aad
mov
in
cmpsb
mov
loop
jae
cmp
mov
nop
xchg
mov
push
cmp
gs
add
iret
adc
adc
sbb
dec
mov
inc
cld
and
sbb
jmp
sti
push
or
inc
sub
mov
lock
mov
jbe
sub
jb
jo
fstps
push
sub
jp
icebp
inc
sti
insb
cmp
repnz
std
inc
cmp
cmp
ficompl
les
and
arpl
jbe
cmp
sbb
xchg
inc
in
push
lods
mov
iret
call
mov
mov
pop
aam
lods
sub
and
sub
popf
icebp
push
out
or
push
pop
mov
mov
pop
xorl
mov
sub
cwtl
xlat
stos
xor
mov
lret
dec
push
pop
mov
test
cwtl
loop
and
cld
je
repz
xchg
insl
out
mov
pop
mov
aam
lret
bound
cmp
movsb
and
mov
test
test
xor
aaa
test
pop
insl
test
sub
or
push
cmp
fwait
gs
ret
mov
sbb
cmpsl
repnz
shll
bnd
and
popf
or
call
stos
pop
mov
data16
xor
fstps
xor
pop
mov
xchg
inc
and
jb
add
mov
iret
test
jns
dec
dec
xchg
xor
push
jmp
inc
dec
ret
outsb
xor
jns
dec
fucomi
stos
shlb
dec
jno
data16
lahf
cmp
adc
jge
ret
pop
sarb
addr16
data16
aad
es
xlat
cmpb
mov
xchg
lcall
rcrl
fs
jbe
fistpll
pop
mov
pop
push
ss
daa
pop
add
out
mov
sbb
push
lea
mov
push
adc
or
push
pop
sbb
add
mov
lds
xor
pop
test
cmc
xchg
ss
pop
jp
mov
bound
jecxz
or
pop
add
cmp
fld
cltd
mov
push
call
mov
cmp
arpl
jl
fmull
fadd
fadds
clc
push
xlat
fxam
cmp
sbb
xchg
pop
mov
fnstcw
das
jns
inc
das
cmp
jmp
mov
loopne
mov
push
sbb
es
sub
insl
cmp
push
adc
xlat
push
pop
cmp
push
jb
lcall
and
idivb
xchg
cld
jo
sar
cmp
out
inc
pop
sub
sub
push
jmp
xor
pop
daa
jmp
mov
push
sbb
and
test
xor
add
cmp
xchg
repnz
std
scas
cld
mov
ljmp
xchg
xchg
int3
dec
inc
push
adc
adc
imul
xchg
and
cltd
jg
stos
mov
xor
xchg
sub
mov
inc
loop
jnp
inc
lret
push
test
movsb
sbb
adc
mov
pop
mov
popf
jl
sahf
sbb
sub
aad
out
inc
jnp
inc
mov
inc
arpl
test
xor
sbb
mov
mov
divl
mov
test
push
and
sahf
mov
push
lock
sub
push
fcoms
xlat
pop
sub
mov
fildll
pop
push
fidivl
sbb
sbb
sti
in
push
xor
sbb
int
outsb
fcoms
push
roll
xor
movsl
popa
mov
aas
das
pop
popf
out
in
lea
dec
and
popa
or
in
adc
xlat
mov
mov
stos
sbb
add
mov
lods
aas
in
mov
mov
enter
js
mov
adc
loope
daa
jnp
gs
ss
jg
push
stc
aas
das
lock
into
scas
out
in
test
xchg
fmul
dec
ljmp
jecxz
cs
mov
xor
lahf
sub
mov
mov
xor
add
ds
push
adc
sbb
iret
pop
jl
xor
ja
dec
adc
sub
aad
call
data16
movb
sub
pusha
clc
push
hlt
cltd
xchg
scas
stos
dec
leave
mov
add
in
push
int3
sub
inc
orl
sub
dec
push
pop
cmp
or
add
cmpb
js
jbe
jecxz
outsb
xor
enter
stc
in
imul
mov
les
inc
push
jnp
out
pop
jbe
stc
ret
jge
in
sarl
enter
inc
fstpt
repnz
push
roll
xchg
mov
pop
ffree
jns
xor
stos
bound
pop
dec
aam
lock
jne
xchg
sub
leave
test
xor
mov
or
shlb
jecxz
cmpb
stos
cmp
mov
scas
mov
xlat
ret
push
inc
push
sub
sbb
jl
into
test
repz
sbbl
or
xor
lret
call
mov
dec
adc
loope
test
pop
xchg
jecxz
adc
stos
cwtl
jno
inc
cli
in
jnp
push
sti
addr16
mov
aas
cmp
arpl
cmp
mov
lods
pushw
sub
or
js
jle
sarb
fwait
adcl
sub
adc
leave
xchg
sbb
mov
movsb
mov
scas
lret
or
add
inc
jo
mov
daa
adc
inc
pop
lcall
cmp
pusha
lret
test
inc
inc
jmp
mov
test
push
repz
jmp
push
sub
xor
imul
cmp
sub
lret
jmp
mov
xor
adc
or
push
jno
mov
jbe
in
addr16
jae
shl
adc
mov
sbb
sbb
outsl
stos
pop
fcoms
aaa
jecxz
xchg
jg
ja
into
cs
imul
call
rolb
cmp
lret
jns
dec
cmpsl
mov
cld
cs
xchg
pop
xor
dec
adc
into
ret
or
dec
push
ds
or
repnz
lahf
dec
or
pop
inc
dec
xchg
sub
les
xchg
out
sub
sub
ds
rol
addr16
push
out
bound
push
cwtl
std
mov
mov
xor
adc
jecxz
sbb
in
cmp
lods
and
or
sbb
pop
lds
mov
dec
adc
jle
mov
mov
aaa
pop
push
jge
cmp
cld
rcr
fiaddl
add
add
dec
aaa
lret
inc
out
cwtl
jg
int3
cmp
xchg
pop
cmpsl
and
xor
stc
outsl
mov
mov
add
xchg
fsubl
pop
push
xor
cmp
fimuls
xchg
out
out
inc
lret
test
imul
cmpsb
or
xor
bound
adc
cmova
adc
adcl
rep
bts
andb
pop
ja
jg
and
aas
mov
mov
dec
enter
sbb
pusha
mov
sub
mov
and
xchg
add
fcompl
xchg
out
ja
adc
jge
jno
shl
push
fidivrs
je
pop
jnp
cmpsl
cmp
daa
addr16
xor
mov
pop
pop
outsl
jmp
mov
stc
sbb
mov
cmp
add
dec
subb
jecxz
leave
and
aas
adc
jne
jo
jns
fwait
xor
fsubrs
fstpt
out
push
xchg
mov
push
fdiv
pusha
rcll
ds
pop
ret
mull
cmp
dec
push
jo
popl
mov
add
jle
je
loope
inc
popa
lret
fmulp
xchg
ret
cmp
fistpll
fwait
pop
fidivl
jl
xchg
or
test
add
and
les
sub
outsl
dec
xchg
inc
pop
inc
mov
pop
popa
aam
cmp
stc
insl
lret
xchg
insl
pushf
ds
pop
or
rcr
inc
jl
cli
mov
or
push
mov
nop
cld
subl
lea
mov
mov
sti
jae
lcall
out
cmp
mov
xor
loopne
dec
jg
push
dec
test
and
mov
mov
aam
cmp
mov
mov
bnd
fneni(8087
fcmovnb
xchg
push
jo
aaa
stc
sub
insb
pop
inc
fsubrl
push
jp
dec
lret
sub
insb
lods
stc
adc
push
aad
cmp
pop
out
mov
fcomp
mov
sbb
or
aad
mov
lret
cld
sbb
sub
out
add
jmp
pop
lret
cmpl
xor
or
aam
jbe
cmp
inc
out
lret
pop
cmp
adc
or
loope,pn
jns
push
mov
aaa
push
insl
lahf
int
inc
jp
clc
push
sbb
and
adc
cmp
aad
pop
in
popa
xlat
add
insl
clc
mov
pop
stc
pop
add
cs
adc
and
pop
xchg
push
lret
jp
xchg
leave
repnz
fldcw
mov
mov
cld
ret
popa
mov
and
mov
punpckhdq
popa
jo
jb
mov
imul
mov
push
sub
call
lahf
xchg
insb
mov
jo
fisttps
js
cmp
fninit
dec
mov
mov
fwait
je
sahf
xchg
push
mov
cmpsb
cltd
lahf
sub
sub
pop
lock
popf
dec
ret
mov
sbb
sarb
dec
pop
test
sub
adc
repz
cld
inc
clc
nop
mov
lock
inc
or
in
xchg
mov
add
push
adc
mov
das
and
mov
adcb
pop
and
aam
cld
inc
push
repnz
int3
pop
push
arpl
daa
cld
sarl
push
jmp
into
faddl
xor
cmp
fidivl
ret
sbb
ja
fnstcw
sub
lret
jno
pop
mov
gs
aas
roll
imul
jecxz
outsb
mov
sub
outsl
addb
jbe
cwtl
enter
dec
stc
pusha
add
push
mov
push
adc
call
add
inc
mov
push
arpl
sbb
mov
and
out
dec
movsl
fwait
sbb
les
cmp
adc
rclb
dec
cld
clc
test
or
cmp
in
movsb
int
mov
jge
shl
sbb
sub
jne
mov
pop
mov
xor
outsb
outsl
fistl
sub
out
sub
or
mov
repnz
aas
lods
scas
sub
xor
push
sub
adc
mov
pop
jnp
sbbb
add
pusha
aas
push
fimull
inc
and
fiaddl
mulb
cmp
xchg
jns
pop
xchg
add
outsl
dec
lret
daa
sbb
stc
mov
inc
xchg
insb
sbb
and
adc
pop
pop
test
cmp
in
xchg
and
in
roll
pop
jb
mov
cmpsl
push
test
mov
pop
sahf
dec
sbb
jmp
test
or
and
popa
add
scas
jmp
popf
inc
loope
inc
lahf
sbb
mov
push
or
xchg
icebp
mov
inc
out
or
aas
cmp
pop
add
aam
cmpsb
fwait
xchg
into
mov
loopne
dec
sbb
mov
push
lea
inc
xchg
shl
cmp
fbstp
jge
pop
cli
aas
or
repnz
mov
inc
aam
mov
dec
pop
inc
ret
lods
into
inc
inc
addr16
adc
repz
jno
mov
push
std
mov
xchg
leave
fwait
clc
jg
imul
jne
or
inc
adc
mov
in
push
cmpsb
scas
leave
hlt
das
xchg
sar
inc
push
in
sbb
shll
popa
jbe
int3
and
mov
sbb
pop
lret
das
fdiv
rol
clc
lret
dec
dec
leave
dec
sti
inc
adc
shll
fisubs
and
arpl
add
add
movsb
jecxz
add
mov
iret
mov
scas
xor
sti
idivl
mov
cmp
xor
adc
int3
pop
inc
sahf
push
rcll
cmpb
stc
jl
jnp
lods
fs
out
popa
repnz
pop
dec
xchg
dec
sbb
lcall
sbb
int
repz
jp
mov
idivb
call
or
loope
test
imul
xlat
pop
cmp
or
push
push
xchg
nop
in
outsb
sbb
push
lock
sahf
jmp
fcompl
insb
jg
dec
scas
gs
jg
xor
push
and
push
xchg
sbb
add
push
ret
xor
ljmp
arpl
cmpl
cmp
mov
bound
xlat
push
ja
and
inc
lret
mov
inc
ret
sub
jecxz
push
jnp
add
lahf
xor
xchg
xor
lds
and
fistps
mov
rorb
ret
mov
jmp
test
cmp
mov
mov
stos
jmp
mov
pop
push
test
cmp
into
cli
jg
shlb
fwait
dec
xchg
mov
add
aam
in
bound
pop
sbb
not
test
cmpsb
sbb
inc
int3
xchg
mov
movsb
stos
jge
cli
adc
pushl
mov
addb
mov
fnsave
sub
pop
dec
aaa
fsubr
mulb
cmp
jecxz
pop
add
dec
sbb
subl
test
in
and
ljmp
test
fdivrs
cmp
or
ja
pop
popf
inc
dec
and
jmp
jnp
jne
repnz
mov
pop
testl
xlat
mov
jmp
mov
mov
in
push
push
dec
testl
nop
xchg
and
ret
stos
xadd
out
loope
mov
jg
xor
mov
pop
int3
out
pop
pop
dec
push
cmp
aas
cwtl
ret
push
mov
pop
test
sbb
mov
test
jp
test
lahf
dec
imul
pop
into
push
ss
loop
mov
xor
dec
mov
jo
loop
and
pop
ss
dec
fcoms
in
call
mov
and
and
push
inc
int
nop
andl
sub
jbe
pop
adcl
insb
leave
mov
mov
mov
pusha
adc
or
es
xchg
push
jmp
das
into
lret
adc
pop
pop
jb
fildll
push
and
fstps
sar
sub
ror
jp
jl
jae
stos
jne
and
sub
repnz
iret
sbb
shrl
lods
jb
lret
or
test
popa
pop
ja
adc
stc
mov
inc
adc
out
ja
xchg
mov
or
push
cli
test
push
inc
cmp
scas
pop
push
mov
ja
mov
repnz
cmp
outsl
cmpsb
mov
sbb
fcomps
sbb
ss
aas
xchg
sarl
and
mov
or
pop
in
xchg
pushf
push
sub
lock
jnp
sub
mov
pop
and
int
je
pop
or
dec
mov
lea
out
ret
jp
sub
or
call
notb
popf
jnp
mov
mov
repz
jns
mov
fs
pop
lret
ficoms
mov
movsl
popa
loopne
nop
sbb
adc
and
cmp
adc
addr16
cmpsb
leave
or
mov
mov
aas
das
xchg
push
mov
xor
mov
ja
addb
shll
dec
aas
xchg
pop
jge
cmp
cmc
bound
mov
sbb
xchg
pop
cmc
pusha
scas
mov
adc
jns
frstor
jle
shlb
jecxz
push
scas
pop
pop
pop
push
jle
jns
fistps
jbe
jg
lcall
arpl
and
cmpsb
sti
push
loopne
test
xchg
lret
out
aas
adc
mov
jbe
outsl
and
mov
shl
inc
or
in
push
loopne
outsw
xchg
mov
or
mov
jge
in
mov
test
sub
and
jne
xchg
mov
aaa
lods
mov
imul
int
inc
and
push
sub
push
cmp
ret
loope
scas
or
data16
insb
sbb
movsl
scas
cwtl
mov
loope
sbb
fdivrl
cli
cmp
lods
xchg
jp
testb
out
into
xchg
lret
mov
ja
and
sub
jle
xor
lock
mov
pop
sahf
ds
sub
testb
mov
jmp
in
sub
mov
les
into
push
sbb
lds
aad
mov
aam
push
in
jae
loop
les
fisubl
fldenv
dec
fildl
mov
or
jle
jle
xor
hlt
pop
xor
add
icebp
and
cmc
sbb
loopne
mov
movsl
stos
les
inc
jno
cmpsb
aaa
add
sbb
xchg
xor
or
dec
out
loop
pop
jb
cmp
sub
mov
mov
das
adc
jmp
sbb
add
adc
cmp
out
add
xor
mov
adc
mov
in
sti
xor
ja
mov
data16
cmp
mov
loop
ja
xor
mov
imull
pop
push
and
sbbl
xchg
push
sbb
js
pop
test
movsb
sbb
xor
cltd
cmp
lds
pop
or
push
fmull
fisubrs
out
pop
lret
insl
pop
xchg
in
dec
push
or
std
xchg
inc
or
pop
mov
popa
adc
jo
dec
dec
fs
pop
mov
repnz
daa
adc
sbb
mov
xor
pop
into
mov
out
xor
jmp
aad
testl
sbb
stos
stc
adc
pusha
mov
push
mov
ja
mov
push
cmp
adc
dec
test
pop
cmp
lret
jmp
ret
and
neg
lret
push
mov
mov
and
fwait
push
aaa
sbb
inc
fs
xchg
push
int
pushl
lret
popf
scas
loop
movsb
adc
ja
test
pop
loop
insb
jecxz
popf
push
repnz
mov
xchg
xchg
xor
jbe
mov
adc
sub
mov
icebp
mov
ficompl
inc
jb
cmpsb
sub
mov
inc
dec
push
loope
movsb
mov
mov
inc
push
addr16
out
fidivrs
mov
jmp
and
xchg
pusha
push
nop
push
loopne
pop
shl
or
xchg
xor
mov
sarb
mov
and
mov
cmp
or
movsl
pop
xchg
aas
imul
sbbb
in
popa
fidivrs
add
xchg
jle
or
inc
mov
flds
in
xchg
or
cwtl
mov
mov
sti
mov
sub
mov
and
cltd
dec
sub
shrb
cmpsl
mov
cltd
lea
xchg
mov
je
cmp
ficoml
das
jmp
in
pop
pop
mov
mov
stc
ret
out
sti
cld
sub
lret
add
fcmovu
ljmp
xchg
dec
pop
sbb
int3
int
lret
sub
dec
dec
mov
movsb
pop
insb
cmc
sbbl
push
dec
inc
pushf
popf
push
pop
cs
add
inc
int3
test
inc
sub
and
dec
out
xlat
xchg
jp
mov
ds
mov
jno
imul
push
xlat
pop
aam
mov
adc
xorb
mov
sbb
jg
mov
or
push
cmp
roll
je
add
push
cmpsl
fs
fdivrl
lea
std
dec
cmp
popl
sarb
cmp
pop
daa
mov
sbb
pop
popa
arpl
mov
jae
xchg
loope
fsts
inc
hlt
mov
xchg
leave
lret
fdivrs
jo
insb
jl
jae
push
out
jl
daa
jns
out
out
jns
cmc
push
dec
adc
scas
aas
pusha
loop
or
xchg
or
out
jg
and
out
test
xchg
ss
addl
hlt
loop
cmp
mov
scas
enter
add
out
or
sub
fdivrl
add
sub
jb
fs
push
in
loopne
ds
arpl
push
cmp
cmpsb
mov
cld
or
mov
xchg
bnd
inc
push
insl
insb
out
leave
adc
mov
push
imul
add
inc
add
xor
mov
cmc
mov
xor
outsb
gs
mov
sarb
je
dec
fsubr
mov
jmp
push
mov
xor
sbb
dec
sarl
ret
or
sbb
mov
xorb
mov
pusha
mov
das
int
popf
movl
xor
xchg
mov
sub
sub
icebp
xchg
xor
lods
mov
push
push
mov
lret
mov
int
mov
sbb
divl
cmp
mov
dec
mov
sbb
andl
push
pusha
xchg
ret
cmp
pop
mov
mov
jg
cmp
xor
sub
xchg
cmp
add
repnz
bound
mov
popl
insb
in
lahf
pop
jns
popa
ret
dec
psrld
stc
aad
cld
and
repz
fiadds
fsubs
call
and
push
repz
push
jmp
les
ret
rorb
shrl
xor
fisttpll
add
out
mov
clc
pushf
xchg
ss
jp
jmp
int
aaa
imul
iret
add
lret
add
and
ds
stc
dec
sbb
leave
stos
xchg
pop
bound
mov
cmpsb
lds
pop
inc
jae
jp
xor
cmp
int
push
cltd
and
std
add
mov
sahf
fwait
add
lret
enter
fs
inc
loopne
lret
std
mov
mov
outsl
push
int3
loopne
sahf
lods
xor
add
sbb
scas
sbb
call
fmuls
xchg
dec
jo
ret
mov
push
into
lcall
arpl
sbb
xlat
jno
sub
ret
push
mov
jge
lods
jecxz
mov
fistpl
jae
rcr
insb
mov
scas
ljmp
pop
push
add
dec
cmp
mov
lcall
ret
cmp
add
aad
pop
mov
push
push
cmc
adcl
fld1
ds
repz
fstp
in
mov
imul
mov
jo
test
push
je
xor
jae
jg
ja
add
pop
fiaddl
addr16
pop
xlat
out
pop
stc
mov
ljmp
cs
out
cmp
xchg
lcall
xlat
mov
cmp
out
daa
pop
data16
xchg
sbb
inc
dec
jo
aaa
aas
mov
jae
hlt
cmp
js
aas
aas
xor
xchg
mov
xchg
pop
cwtl
loop
or
jns
in
push
roll
aaa
push
daa
pop
mov
mov
add
xchg
mov
push
lea
mov
addl
mov
sbb
cmp
cmc
hlt
sbb
ret
cld
adc
and
loope
shlb
idivl
dec
inc
push
popf
daa
push
loop
enter
aas
jle
inc
xor
xchg
ss
jmp
dec
xchg
mov
xlat
or
add
das
repnz
or
xchg
std
xchg
scas
aas
adc
daa
incb
fs
ds
ret
xchg
mov
test
cmp
addb
xchg
push
cltd
jo
pushf
sbb
fdivr
sbb
lock
xor
pop
in
int3
test
xor
mov
inc
xchg
push
sbb
dec
mov
xchg
call
sbb
dec
inc
jae
cltd
test
cltd
dec
mov
jnp
cmp
or
dec
push
add
ret
or
and
lret
fmulp
gs
divb
fs
rcrb
rorl
das
mov
jl
lock
ja
jle
adc
add
jge
into
mov
ret
xchg
scas
notb
leave
bound
notl
scas
scas
adc
inc
pop
ljmp
pop
test
xor
outsl
in
arpl
mov
cmp
push
test
pop
push
fidivrl
and
sub
test
cld
enter
adc
mov
inc
push
in
scas
enter
push
push
mov
popf
or
out
sbb
enter
insb
mov
sub
repz
mov
movl
dec
insb
xor
mov
idivl
xor
aam
pop
imul
loopne
mull
xor
mov
jecxz
adc
daa
dec
xchg
gs
push
adc
fsubrs
mov
pop
push
aam
mov
push
js
cmp
jl
imul
enter
lods
xchg
inc
or
and
aam
push
xorb
imul
imul
cli
cmpsb
push
loop
fs
cmpsb
push
jbe
xor
mov
or
inc
jge
add
xchg
jae
adc
cli
pop
ljmp
inc
pop
scas
js
stos
mov
and
add
pop
dec
repz
mov
fnsave
adc
sarl
mov
call
cli
in
movsb
pusha
pop
roll
sbb
add
inc
aas
mov
stc
jp
int
orb
rcrl
rolb
dec
cmpsl
jbe
in
rol
scas
sarl
cwtl
sbb
cmp
jne
ss
dec
nop
cmp
leave
dec
push
push
and
xchg
or
cmpb
and
inc
add
push
out
and
daa
xor
mov
out
ficoms
ds
mov
and
js
imul
inc
adc
push
dec
jnp
pushf
jg
aad
repz
movsb
mov
cmpsb
aad
push
or
ret
sbb
icebp
out
popa
lods
adc
push
jbe
idivb
sbb
aas
push
or
cmpsb
ljmp
in
out
cmp
clc
das
das
jg
dec
cld
cmp
mov
sbb
push
inc
test
sub
pop
out
sub
pop
leave
nop
shll
and
jecxz
jo
jbe
cmc
xchg
mov
or
dec
and
bound
out
popa
pop
out
xchg
clc
mov
scas
jmp
popf
lock
lcall
sub
fildll
pop
mov
es
roll
jmp
cmp
cmp
addr16
flds
xor
fcompl
mov
testl
ficoms
add
faddl
cmp
jmp
ret
mov
sub
insb
cld
cmp
lock
lods
call
xchg
xchg
jno
mov
adc
lods
dec
dec
jmp
fs
sti
cmp
cltd
lods
out
outsl
push
add
nop
xchg
add
add
iret
loopne
lds
cmp
add
in
sahf
insb
xor
inc
and
das
inc
mov
dec
mov
into
push
push
inc
rclb
bound
rcll
icebp
test
lahf
or
sub
push
mov
jmp
mov
or
mov
sbb
inc
pop
insl
push
sub
push
addr16
cltd
jmp
mov
sbb
shll
enter
and
into
stos
push
or
mov
les
mov
add
fsubs
push
and
icebp
lods
clc
pop
and
xor
out
sub
sub
cmp
dec
add
hlt
dec
xorb
cmpsb
or
push
add
xor
popa
dec
inc
sbb
and
adc
jno
push
and
je
das
pusha
xchg
push
add
dec
inc
mov
jnp
ret
sarb
xchg
push
fcmovne
adc
mov
inc
push
adc
cmp
shl
pop
or
mov
dec
jle
call
popa
leave
xor
repnz
adc
push
sbb
cld
sub
fisttpll
sub
hlt
lret
idivb
xchg
lods
aam
cmp
and
jnp
adc
rcll
xor
enter
stos
mov
insb
adc
push
cwtl
push
and
jne
outsl
xor
or
pusha
xchg
pusha
or
dec
lods
mov
mov
push
or
lahf
out
xor
adc
mov
cltd
lods
ja
cmc
sub
icebp
scas
mov
push
repz
daa
sbb
push
xor
xor
call
xchg
push
push
pusha
mov
mov
lds
xor
mov
mov
fstpl
in
fs
jns
sbb
jo
lods
xchg
fs
in
push
or
and
add
dec
lcall
xchg
cmp
dec
in
or
movsl
out
xor
or
or
out
ret
xchg
xor
xor
xchg
loop
push
insb
push
fwait
and
jge
xchg
stc
adc
push
lock
cli
mov
xor
cwtl
mov
cmp
mov
jmp
xchg
xor
int
repz
loopne
data16
adc
imul
enter
mov
xchg
pop
jbe
pop
hlt
dec
pop
cld
or
mov
mov
lahf
mov
cmp
push
outsb
insl
leave
inc
rcll
and
dec
pop
stos
and
in
aad
adc
ret
sbb
mov
and
call
fildll
mov
movsb
mov
js
addr16
je
jp
or
xlat
adc
ss
pop
and
lods
dec
jb
adc
push
bound
aad
ljmp
push
push
aas
push
push
enter
add
push
test
dec
sbb
les
popa
xlat
bswap
aas
clc
sbb
xchg
mov
leave
pop
movsl
mov
repz
push
leave
dec
adc
movsb
call
lcall
add
mov
mov
push
and
andb
movsl
daa
mov
pop
xlat
dec
ljmp
sub
imul
push
and
lcall
or
cmp
movsl
inc
sarb
loope
xor
lods
clc
xlat
call
jns
in
mov
mov
loope,pt
fcompl
dec
out
pop
mov
aas
sbb
xchg
cwtl
cli
aaa
or
cli
push
mov
test
sub
in
sbb
loopne
lcall
ret
filds
test
into
and
aas
xchg
cli
daa
and
dec
pop
addr16
cmpsl
ret
pop
jae
fcmovbe
scas
out
test
mov
mov
test
mov
daa
fwait
sub
inc
ret
and
jnp
xor
add
pop
insb
push
adc
lods
adc
fs
imulb
push
lea
xor
test
sub
sbb
sub
jge
sar
add
sbb
mov
xor
or
sub
mov
je
ficompl
inc
js
rorl
out
or
inc
ficoms
add
das
imul
or
test
push
push
sub
popl
inc
xchg
jl
mov
pushf
ljmp
jbe
sbb
push
dec
hlt
stc
dec
movsl
cmp
scas
pop
dec
add
lods
loope
inc
shlb
add
lds
decl
clc
mov
inc
popa
shl
mov
aad
popf
sarb
xor
sub
jbe
push
lahf
repnz
dec
dec
ror
or
mov
insl
stos
test
mov
add
mov
mov
adc
rcrl
mov
sbb
fwait
insl
sub
pop
hlt
mov
je
call
jb
in
push
add
pop
sbb
bound
and
arpl
pusha
loope
adc
in
xor
lea
adc
adc
mov
rorb
fcompl
xor
push
dec
roll
pusha
push
repnz
cmp
or
inc
and
cmp
lds
jne
jb
push
xchg
xor
pop
aaa
sub
inc
push
mov
jl
lock
inc
hlt
ror
or
inc
or
shl
ljmp
xor
mov
dec
les
sbb
adc
cmp
pop
in
ficomps
repz
repz
adc
pop
mov
inc
test
mov
push
stos
adc
and
je
jle
pop
xlat
imul
inc
jp
ret
lret
cltd
pop
mov
clc
and
xchg
iret
or
or
out
fsubl
pusha
dec
sti
out
adc
icebp
sub
push
dec
mov
mov
sub
cmp
or
mov
pop
out
sub
push
leave
sub
jmp
xchg
rorb
jb
pop
add
jg
aaa
cmpsb
shll
out
fnstcw
inc
pusha
xchg
or
mov
mov
lds
pop
daa
sbb
out
xchg
add
repnz
or
cmpsb
movsb
lods
push
out
inc
push
cmpsl
and
sub
mov
mov
or
lods
fwait
mov
dec
shlb
loope
fcoms
jns
push
pop
mov
mov
and
mov
stos
rorb
push
outsb
addr16
mov
pop
shlb
idiv
push
and
jo
fdivl
mov
cmpb
negl
add
mov
insb
enter
pop
loopne
mov
setl
orb
inc
push
test
lea
sbb
jbe
sbb
insl
repz
pop
fs
cltd
lds
movsl
dec
cltd
push
push
cmpb
es
das
daa
adc
mov
push
leave
push
inc
mov
rcl
add
ds
add
xor
mov
mov
mov
mov
pop
adc
lret
dec
dec
jmp
inc
adc
gs
or
into
fidivrs
aad
sub
mov
in
out
mov
fisubrl
enter
test
cmpsb
out
push
add
mov
add
sub
jae
int3
aas
enter
pop
pushw
lahf
sub
enter
ljmp
mov
popf
inc
or
out
in
or
repz
loop
rorb
push
mov
mov
mov
stos
inc
mov
xchg
push
mov
movsl
sbb
mov
jg
mov
cmpsl
sbb
xchg
hlt
inc
cltd
enter
pand
xor
xorb
flds
std
data16
add
push
aad
inc
out
xchg
mov
inc
xchg
pop
cli
shrb
pop
mov
test
xchg
pop
dec
fmul
mov
mov
je
outsl
pop
ja
clc
xor
aam
and
jge
lahf
cmp
stos
mov
cmp
lods
add
lods
loope
cmpsl
mov
sub
push
es
in
mov
xchg
sub
mov
cmpsl
fwait
xrelease
push
cmp
mov
and
and
or
mov
addr16
nop
push
lahf
lods
ljmp
dec
add
lret
ret
pop
pop
pop
sarl
sbb
cmp
or
xchg
or
push
cmc
adc
ss
xor
in
pop
pop
fmulp
cmp
fwait
mov
mov
icebp
and
dec
popa
dec
hlt
enter
sbb
push
pusha
roll
mov
test
out
xlat
inc
out
icebp
cmc
sub
or
and
mov
pop
mov
out
lret
jno
jns
mov
es
cld
std
loopne
or
dec
jp
inc
leave
in
inc
add
daa
insb
pop
adc
arpl
in
out
sti
loop
add
roll
cmpb
insb
mov
test
imul
test
dec
das
push
xchg
sub
pop
imul
and
fcomps
in
xchg
in
cmp
pop
movsb
or
or
popa
push
notl
popf
iret
stos
lret
jg
sub
loop,pn
and
xor
icebp
sbb
sbb
xchg
sub
xchg
inc
cmp
adc
inc
pop
icebp
sbb
outsb
and
out
es
mov
cmpsb
adc
mov
test
push
mov
mov
leave
hlt
int3
pop
and
int
jle
cmpsb
cmp
xlat
mov
xor
and
and
lcall
push
insl
xchg
repz
in
dec
mov
mov
jecxz
ror
sub
push
inc
ror
mov
hlt
pop
cmp
jle
jbe
into
dec
shlb
inc
das
lret
inc
push
or
lock
push
clc
ret
xor
mov
test
mov
test
jecxz
bound
mov
dec
test
adc
sub
loope
dec
std
shrb
js
pushf
cmc
aad
lock
stc
mov
inc
fmulp
inc
push
data16
imul
dec
out
iret
aaa
push
imul
popf
leave
push
and
icebp
dec
xchg
and
and
dec
jecxz
icebp
mov
push
dec
mov
mov
mov
pushf
push
pushf
outsb
sbb
sbb
imul
insl
rolb
push
jg
in
pushf
fisubrl
dec
push
stc
jl
int
mov
push
xlat
loopne
mov
jae
push
sub
sub
shlb
seto
mov
je
lret
pushf
jp
push
cmp
mov
jp
imul
push
push
pop
inc
loope
jo
push
push
add
mov
test
mov
jge
adc
outsb
xchg
push
cmp
pop
pop
in
jle
dec
out
xor
and
dec
mov
arpl
inc
adc
xor
dec
in
sbb
cmp
es
ficomps
dec
xchg
push
mov
lods
xor
jge
xchg
cmc
dec
jmp
faddp
sti
pop
aaa
cld
push
js
mov
dec
clc
mov
lret
sub
inc
add
xlat
cmpsl
loop
imul
ficoms
cltd
mov
jb
dec
pop
add
stos
jnp
jno
cmpsl
cltd
jnp
arpl
xor
lcall
push
out
lcall
pop
loope
sar
movsl
jnp
mov
mov
push
in
jle
xor
cmp
je
cmpsl
roll
aam
test
xlat
xor
gs
popa
xor
insb
pop
push
decl
pop
inc
mov
pop
insl
mov
jg
lock
in
adcl
imul
or
fdivrl
or
je
pop
sbb
and
mov
add
ljmp
ds
and
das
rorl
sbb
cli
stos
inc
repz
fstpl
inc
in
xlat
cmpsb
jg
hlt
insl
sub
jl
pop
int3
push
mov
repnz
pop
xchg
inc
mov
jle
mov
sbb
push
pop
mov
mov
xor
cs
jae
push
out
push
and
adc
stos
bound
int
es
test
or
push
dec
mov
ja
pop
or
xchg
mov
push
ret
xchg
jg
inc
lea
xor
push
and
pop
sarb
cmpsl
iret
dec
mov
push
pop
pop
dec
fnop
cld
lods
pushf
push
jo
movsb
cmp
xchg
insl
xchg
ficompl
jge
cs
cmp
xchg
adc
sub
loop
mov
mov
hlt
xor
and
sbbb
mov
and
dec
mov
je
imul
stos
xor
movsl
shll
clc
das
jne
in
add
mov
dec
sub
pop
mov
test
mull
and
popfw
sbb
out
push
in
repnz
inc
test
jl
xchg
dec
cwtl
loop
idivb
in
shlb
sub
sbb
jp
cmp
pushf
push
jns
fbld
insl
add
inc
in
and
jg
mov
adc
push
add
inc
add
push
push
sti
ljmp
je
pop
sub
xor
les
push
cmpsl
lahf
jae
call
push
testl
or
mov
loope
xor
es
aad
mov
aas
jns
idiv
aas
arpl
lcall
push
pop
dec
inc
scas
xchg
rclb
shll
cmpsl
stos
das
ja
out
fwait
push
mov
pop
loope
aaa
push
fnstenv
popa
add
push
mov
or
inc
cmpsb
mov
cmpsl
dec
xor
cmpsl
xor
dec
scas
popa
jnp
icebp
insb
sbb
mov
or
or
push
lock
xchg
lret
pop
or
push
jbe
pop
subl
out
enter
dec
cmp
add
cmp
lret
insb
inc
mov
xor
incl
in
es
sbb
inc
push
mov
test
sbb
mov
cli
fildll
and
lcall
scas
lcall
xchg
cmp
int3
push
stos
jnp
jl
jo
push
inc
in
loop
xor
test
aad
fcom
sub
mov
inc
cmp
call
stc
xchg
pop
xchg
jne
js
popa
mov
stos
sub
xlat
test
push
mov
pop
rcll
jmp
pop
pop
mov
mov
mov
cld
dec
std
pop
pop
cmp
inc
test
and
xchg
test
sbb
test
add
adc
out
and
pop
push
push
mov
inc
int
adc
dec
subl
mov
js
pop
push
jbe
loopne
lods
out
daa
mov
das
cmpsl
ljmp
out
sbb
iret
inc
sbb
xor
test
pop
int3
aas
lcall
shr
cmp
xlat
rol
add
sahf
jnp
movsl
aaa
cmc
or
fcmovnb
rcrb
ficoms
clc
shrb
ret
push
cmp
insl
shll
add
imul
sbbb
dec
mov
jns
or
call
add
jecxz
jo
movsb
stos
mov
xor
fidivrs
scas
mov
sbb
test
out
inc
mov
mov
decl
scas
mov
insl
repnz
jo
sbbb
cmc
dec
cld
mov
adc
or
jl
fwait
popa
mov
adc
outsb
outsl
sub
cmp
xor
pop
mov
inc
ja
movsl
jle
xchg
stc
mov
repz
in
push
xchg
mov
pop
cmp
jge
inc
xchg
mov
adc
aas
mov
jo
inc
scas
repnz
js
xchg
or
addb
sub
divl
push
jecxz
cmp
jl
shl
jne
push
jns
cwtl
add
jecxz
je
xor
inc
loope
dec
cmp
enter
in
or
rol
sbb
ja
movsb
movsb
push
es
mov
sub
pop
outsl
clc
lods
sbb
mov
out
pop
adc
push
fldenv
or
fnstenv
push
xchg
hlt
rolb
cmpsb
cmp
cltd
mov
pusha
roll
push
ja
mov
js
popa
dec
aam
or
add
mov
xor
jge
movsb
in
repz
and
aam
and
sbb
pushf
loope
adc
daa
mov
loop,pn
orl
and
dec
cmpsl
lock
mov
js
mov
or
andps
lahf
add
push
xlat
jecxz
loopne
inc
push
mov
pop
xor
inc
push
test
xor
enter
fmul
cmp
inc
pop
push
sub
adc
std
sbb
and
fiadds
mov
and
nop
lcall
mov
cmp
aaa
jnp
mov
mov
imul
andl
ja
shlb
sahf
adc
and
push
push
push
or
jb
dec
aam
clc
push
cltd
fdivs
outsb
arpl
mov
mov
fdivrs
pop
and
lahf
push
jnp
mov
adc
xor
fwait
shll
lds
mov
jb
mov
imul
xor
cmp
pop
sbb
out
add
mov
int3
push
out
fistpll
mov
rcrb
shl
js
mov
shl
lods
mov
xor
pop
iret
sub
loop
jne
cmpsl
push
fdivs
stc
add
daa
mov
cli
outsl
fcomp
and
mov
mov
cmc
repnz
mov
cmp
lcall
cmp
xor
xchg
ljmp
dec
mov
lret
pop
adc
mov
mov
cli
loop
cmp
fcomp
xchg
ljmp
mov
mov
sbb
test
cli
arpl
and
jno
rorb
inc
push
adc
dec
adc
ljmp
lock
lahf
inc
andb
bound
dec
jecxz
and
sbb
pop
or
fstps
sub
ds
repz
cmp
add
add
or
inc
pop
add
dec
outsb
jp
jg
jb
imul
mov
enter
shrb
xchg
cmpl
sub
lret
loope
mov
pop
cmp
fmull
call
lods
sbb
or
stc
sbb
je
cmp
inc
xor
inc
divb
aas
push
aaa
fisubrl
cmp
inc
test
pushf
jo
and
mov
ss
xchg
test
jnp
fidivrs
push
cmc
mov
mov
pop
in
xchg
movsb
jb
or
sbb
push
add
imul
in
sub
or
test
push
imulb
mov
sub
insb
nopl
dec
nop
and
mov
je
in
mov
lea
shrl
jae
repz
jp
add
add
pop
add
pusha
nop
mov
push
mov
mov
adc
sub
iret
jno
jmp
pop
bound
mov
pop
insl
jae
es
aas
cmp
ret
hlt
adc
test
fsubrs
push
xchg
mov
in
cmp
jge
xchg
out
icebp
push
ds
mov
xor
sbbb
ret
adc
imul
xor
cmc
sub
mov
stos
xchg
mov
add
aam
jecxz
insb
xor
or
ret
dec
jecxz
std
mov
add
pop
dec
out
in
mov
in
pop
out
aas
mov
cld
es
mov
outsb
andb
outsb
cmp
daa
mov
lret
loope
ss
movsb
or
xor
iret
jo
add
out
dec
std
inc
bound
lods
test
notl
mov
je
lods
stos
and
mov
xlat
push
adc
push
mov
xchg
repnz
jmp
addr16
cmp
sbb
mov
nop
incb
jo
add
test
cmp
leave
dec
jb
cmp
sbb
xchg
sbb
stc
dec
jmp
out
ret
push
push
sub
mov
xchg
hlt
dec
sbb
mov
imul
daa
mov
cmp
loopne
mov
lcall
outsl
popf
cltd
shlb
lods
pop
add
push
mov
es
seta
jbe
cli
xchg
outsl
hlt
mov
ja
xchg
ds
jns
pop
addb
mov
int
push
ret
xchg
rorl
roll
mov
lret
and
mov
xchg
arpl
or
out
test
cs
jb
xchg
cmp
push
imul
mov
es
ret
nop
ret
dec
jge
sbb
push
and
adc
push
out
sarb
jne
fbld
xor
sbb
xor
in
push
rcrb
int
or
lcall
imul
fldenv
and
jns
or
data16
test
js
push
in
shrl
adc
mov
pusha
les
mov
or
jne
jae
fildl
in
add
xchg
and
in
dec
xchg
jl
aam
and
movsl
xchg
imul
aas
add
out
pushf
jecxz
adc
xlat
sub
cmp
add
or
cmp
sub
xor
call
sub
lcall
xchg
and
in
lahf
pop
out
mov
fs
push
cli
in
rcrb
les
xlat
je
mov
insb
adc
dec
cmp
mov
pop
add
xchg
dec
push
loope
cmp
push
lret
sahf
cmp
xchg
adc
sub
mov
lock
fistpl
aaa
push
std
fs
fstl
ja
add
mov
inc
ljmp
int3
push
pop
push
cmp
cwtl
and
cmpsb
pop
mulb
jecxz
xchg
sbb
loope
sti
cltd
imul
ret
scas
mov
pop
mov
mov
or
out
push
and
aad
test
test
mov
out
pop
mov
adc
pop
ja
test
sub
xor
pop
cmp
or
cmpsl
add
add
cmp
std
mov
xchg
xor
jnp
das
mov
inc
aas
xchg
cltd
aas
jnp
dec
es
rcrl
jp
or
sbb
js
repnz
ret
out
icebp
cmp
xchg
leave
xchg
rclb
sti
mov
jecxz
lods
fidivs
int
xchg
pop
bound
in
sarb
xchg
lret
cwtl
fwait
rcr
xor
pop
sub
jbe
or
aad
push
push
ljmp
lods
adc
sbb
mov
mov
push
jl
push
pop
push
cld
out
mov
iret
inc
push
add
mov
cmp
jnp
mov
adc
pushf
jo
and
test
cmpsl
xchg
out
cmp
out
test
push
movsb
call
mov
and
push
shlb
add
sahf
sbb
fwait
inc
mov
pop
arpl
jge
aam
ret
inc
cmpsl
std
jp,pt
push
dec
sub
jno
movsl
add
adc
xchg
hlt
mov
aad
xlat
and
inc
xchg
sub
fs
mov
xor
into
pop
or
in
lea
std
int3
or
xor
bnd
daa
pushw
sub
push
out
cwtl
sub
pop
hlt
jno
cld
push
mov
arpl
mov
rcll
insb
pop
ret
push
push
jno
test
mov
mov
imul
sbb
inc
mov
sub
imul
mov
pop
test
ret
nop
scas
dec
int
data16
dec
push
dec
inc
lea
xor
add
imul
scas
cltd
jg
mov
jb
loopne
pop
enter
imul
outsl
sub
ret
sbb
andb
nop
mov
lret
jg
loope
mov
fistps
mov
js
imul
mov
js
inc
pop
cwtl
lret
mov
ljmp
rclb
pop
sub
repnz
mov
mov
aas
sub
mov
and
std
clc
lock
in
pusha
cmp
ss
lods
push
add
repz
stos
xchg
pop
fidivs
push
xlat
jns
cmpsl
leave
fcoml
int
movl
jae
inc
mov
mov
inc
jge
subb
aad
dec
xor
jbe
dec
mov
cld
push
jecxz
mov
rorl
xchg
ret
cmpl
inc
ffreep
rcr
in
sbb
ficomps
pop
or
lret
testb
insl
mov
int
iret
outsl
lds
jb
jnp
dec
add
cli
aad
in
or
fwait
mov
loope
mov
lods
xchg
push
jg
and
ret
mov
mov
xchg
jo
mov
stos
and
mov
fisttpll
push
or
sbb
sbb
jnp
pop
test
dec
shr
ror
insl
es
int
mov
dec
aaa
mov
mov
lcall
xor
inc
dec
stos
push
jg
sbb
aam
jno
pop
mov
inc
push
stc
sbb
adc
mov
mov
shl
xchg
adc
loop
icebp
fyl2xp1
adc
mov
cmc
jmp
mov
sbb
pop
adc
std
fadds
cmc
notl
movsb
out
sbb
aas
shlb
negb
test
sbb
cltd
push
andb
leave
or
xor
xchg
sar
dec
add
dec
stos
fdivs
int3
push
test
int
dec
dec
dec
scas
push
jle
mov
into
fisubl
je
xor
movsb
mov
js
inc
jecxz
popf
outsl
int3
cmp
jge
andnps
pop
and
test
sbb
jmp
test
jge
jl
or
jg
inc
neg
or
lcall
in
shrl
mov
data16
pop
out
notb
mov
lret
int3
adc
daa
mov
rep
imul
jecxz
jmp
jle
pop
test
inc
fdivs
adc
inc
fsubp
sub
hlt
lcall
push
les
jb
push
push
mov
push
aam
ss
mov
inc
lds
push
mov
xlat
out
mov
lret
clc
filds
xor
xor
inc
js
negb
cmpsl
loopne
push
xchg
xchg
xor
fmuls
icebp
jo
mov
scas
cmp
cli
fildl
cmp
jl
pop
mov
add
ss
cmp
fildl
lahf
add
mov
mov
cmp
jns
mov
jl
mov
or
mov
repnz
lea
dec
clc
inc
ffreep
out
pop
or
repnz
in
jl
mov
pushf
fwait
cmp
xchg
sub
cld
xchg
cmp
sbb
sub
aam
mov
sub
mov
mov
adc
dec
pop
enter
jnp
imul
sub
fimuls
stos
lock
int3
test
add
pusha
push
xor
mov
pop
push
shll
inc
jb
sub
imul
stos
cs
out
mov
sub
jp
mov
push
add
cmpsl
dec
dec
jg
outsb
out
jmp
bound
aas
push
jno
shll
pop
jmp
setb
cmc
add
add
enter
cmp
sub
adc
cmp
push
stc
shlb
rolb
sbb
nop
ss
aad
fcmovbe
addr16
pop
je
sub
dec
shlb
out
subl
push
mulb
jb
cwtl
push
int
fistpl
cli
pop
mov
cld
mov
mov
push
and
lcall
lock
mov
adc
xchg
xor
dec
pop
push
shlb
jae
loop
xor
scas
scas
lods
push
pusha
sub
pop
out
xor
test
fsubrl
data16
jmp
stc
sbb
clc
ss
ret
push
xor
mov
pop
mov
and
xchg
enter
jae
and
inc
add
imul
pop
cmpsl
jo
lods
aas
cmc
std
daa
call
cmpsb
or
mov
ljmp
mov
dec
xchg
pop
mov
inc
ret
mov
mov
jnp
aas
lahf
or
popf
and
add
mov
xor
and
fadds
jae
es
dec
pop
popa
mov
xrelease
in
je
xor
mov
push
cltd
aad
add
xor
out
ret
xor
lret
call
ficoms
adc
mov
dec
adc
out
xchg
or
icebp
insl
jl
cmp
repnz
jge,pt
mov
lret
fwait
imul
xor
xchg
jg
mov
inc
jns
arpl
aad
pushf
mov
mov
inc
mov
and
pop
xchg
popf
dec
pop
fdivrl
das
mov
int3
dec
xchg
dec
xlat
mov
pusha
subb
in
test
lods
pop
or
pop
insb
out
or
fisubrl
xchg
rcl
xchg
adc
lcall
imul
add
mov
xchg
lock
insb
cmp
nop
pop
inc
adc
int3
lods
int
gs
lods
dec
mov
adc
shl
add
dec
dec
xor
jg
shrl
mov
push
das
xchg
out
enter
neg
pushf
sub
jmp
mov
cwtl
mov
cmc
fdivs
push
ja
sbb
or
cmp
or
lods
sub
pushw
ds
outsl
aam
sub
sarl
idiv
aaa
jp
sbb
cli
sahf
jge
ficomps
mov
and
aam
jg
push
les
push
and
sub
inc
xchg
xchg
sbb
ret
push
int
pop
mov
andl
sub
es
rcrl
iret
jno
mov
in
jns
dec
sub
cmp
xchg
or
mov
mov
inc
hlt
or
in
sbb
addr16
test
fwait
cmp
or
enter
scas
xorl
stos
popa
stos
mov
mov
adc
dec
mov
or
pop
pop
xchg
stos
jb
scas
push
incb
aaa
cmp
xchg
les
mov
fisttpll
fsts
into
decb
outsb
sbb
arpl
adc
pop
fstp
lock
aas
adc
add
jnp
push
fnstcw
jno
jno
jg
push
js
inc
and
dec
xchg
rclb
sbb
pop
xlat
imul
dec
out
test
add
and
jb
loop
andl
enter
inc
dec
dec
cmp
stos
pop
cltd
pop
pop
mov
lods
xchg
je
fistpll
iret
push
or
in
push
out
mov
adc
icebp
push
xchg
pop
jnp
cmc
sbb
cld
shlb
aam
bound
push
fcompp
rep
push
stc
and
cmp
mov
test
sub
dec
rorb
mov
jge
mov
add
add
ss
mov
fisubrl
das
jecxz
cmpsb
and
div
sub
ficompl
jne
mov
or
cmp
je
mov
jbe
xor
add
cli
scas
sbb
les
ds
out
aas
pushf
test
adc
test
jnp
sbb
add
pop
dec
ljmp
jg
push
cmp
daa
add
push
inc
inc
sbb
js
xchg
jle
mov
clc
lock
pop
cmc
mov
lock
sarl
arpl
adc
fcmovb
xlat
inc
push
adc
jae
dec
push
and
or
inc
sahf
fwait
sbb
dec
dec
imul
jno
loopne
jno
mov
lea
out
inc
fdivs
adc
push
xor
jno
and
rcl
hlt
iret
stos
cltd
cmp
cmp
repz
fnsave
shl
adc
movsb
inc
stc
push
xchg
mov
add
leave
mov
jae
cmp
and
xor
cmp
dec
adc
adc
std
sahf
xor
adc
enter
jg
inc
xchg
push
xchg
adcb
jle
jle
lcall
cmc
push
or
cmpsl
cmpsb
mov
iret
adc
cmc
cli
mov
das
das
mov
sbb
push
icebp
daa
mov
add
and
cwtl
pop
inc
scas
inc
movsb
dec
adc
les
xchg
je
cmp
in
aad
pushf
scas
sub
test
stos
nop
sub
mov
ret
and
fs
popa
outsb
cwtl
scas
jno
aam
repnz
mov
xchg
daa
fxch
sti
int3
jl
xchg
cmp
test
enter
andl
roll
arpl
jo
inc
outsl
jl
in
or
sbb
mov
daa
andl
push
cmc
roll
ficoms
insb
out
out
lds
jge
inc
xchg
loop
lahf
popa
mov
jecxz
fwait
movsb
jne
cmp
aaa
ret
repnz
cmp
stos
je
lock
and
aad
xor
or
call
pop
inc
mov
ss
push
sbb
jge
inc
insl
mov
add
decl
mov
test
cmp
fstpt
or
out
xchg
enter
xchg
not
inc
loope
inc
xor
pop
in
lods
sbb
cmp
mov
movb
stc
mov
rorb
or
movsl
fdivrl
lods
lds
pop
sarb
loopne
push
rsqrtps
sbb
add
or
xchg
test
xor
xorb
bound
fwait
imull
into
in
cmp
sub
stos
cmp
adc
aad
push
dec
sbb
mov
mov
or
mov
pop
test
movsb
push
jbe
mov
or
pop
rcrb
pop
in
jge
add
pop
into
add
xchg
inc
aad
pop
ljmp
inc
jns
xor
pop
cmc
bound
dec
ja
movb
jl
movsl
mov
mov
xchg
stc
dec
clc
pop
popa
insl
movsl
subl
clc
rcrl
scas
inc
rcll
mov
loopne
adc
add
enter
std
nop
mov
adc
insl
aas
add
lret
push
sub
fdivr
sbb
lahf
mov
fstl
rorl
aas
mov
or
mov
enter
setp
dec
push
out
sbb
or
lcall
mov
lcall
das
push
gs
jmp
movsl
or
mov
insb
lahf
pop
ljmp
sbb
push
mov
mov
and
popf
imul
gs
das
or
dec
loopne
ficoms
cmpsb
adcl
sub
out
mov
nop
and
loope
mov
adc
mov
push
test
out
inc
imul
xor
lret
mov
pop
cmpsb
and
inc
jmp
xor
jnp
or
and
or
ss
xchg
cmp
mov
ss
es
loope
pop
sub
lods
jecxz
cmp
shl
stos
ss
or
vpmacsww
mov
cmp
push
outsb
js
xchg
lock
push
ds
add
arpl
dec
lock
test
mov
xchg
fs
cmp
fstp
repnz
insb
pop
xchg
jns
aaa
int
sbb
cld
das
loopne
aam
xor
push
sbb
xlat
or
into
mov
out
pop
xor
imul
sbbb
pop
imul
movsl
mov
int
or
and
insl
push
in
lods
and
test
and
pop
mov
cmpsb
std
pushf
dec
mov
push
pop
data16
mov
push
andb
sub
and
movsl
jle
xchg
out
and
cmp
test
stc
sub
push
in
cmpsl
mov
shll
movsl
or
push
fstl
and
xchg
sub
sub
in
jge
jle
nop
test
in
in
jb
das
push
xor
ja
mov
inc
int
les
and
insl
xchg
xchg
outsb
lds
movsb
test
int3
or
push
jg
add
mov
pop
mov
ror
and
sbb
xor
jae
out
leave
rcrl
xchg
inc
imulb
mov
xchg
and
movsb
popf
pop
mov
call
jae
and
mov
mov
push
ljmp
loop
sarb
pop
mov
shll
popf
call
mov
xchg
bound
sub
bound
mov
mov
adc
lock
push
fmulp
mov
into
mov
mov
jmp
je
mov
mov
leave
sbb
push
push
leave
jns
pushf
jne
mov
or
push
leave
sbb
push
imul
das
xor
jo
xchg
insl
mov
sbb
imul
adc
mov
inc
lea
and
dec
out
xor
in
or
pop
out
je
mov
pop
xchg
out
inc
mov
pop
stc
mov
ficoms
pop
mov
mov
sub
jnp
lods
mov
pop
pusha
daa
mov
cmp
cmp
out
adc
lcall
enter
sub
inc
pop
je
xchg
jp
jl
call
jle
xor
push
dec
xchg
xchg
popa
mov
adc
sub
stos
adc
dec
gs
push
lods
adc
fwait
xor
xor
and
scas
jb
mov
out
pop
adc
std
adc
data16
add
movsb
mov
cltd
push
jge
mov
or
popa
cmpsl
lret
cmp
repnz
dec
jp
sub
jbe
dec
push
mov
insl
hlt
mul
aaa
jo
stos
aad
mov
mov
mov
mov
cmp
xchg
mov
push
sahf
and
jge
pop
rorl
xor
lods
add
cmp
mov
bound
pop
adcb
cli
ss
mov
pop
mov
repz
pop
dec
lret
mov
das
inc
add
sbb
int
scas
xor
jb
into
imul
cmp
aad
mov
js
fldcw
scas
ret
xchg
add
and
mov
xchg
or
adc
mov
jo
scas
mov
flds
sub
insl
fnsave
movsl
adc
inc
inc
jae
pop
je
nop
inc
sbb
mov
out
and
push
cmp
mov
iret
mov
je
imul
cld
sbb
clc
add
aaa
push
movsl
pop
ficompl
adc
pop
sbb
movsl
mov
loop
bsf
fldcw
sti
ja
call
mov
popf
lret
xchg
jl
and
lds
push
das
mov
loope
cmp
and
mov
or
mov
inc
lods
shll
imul
pop
xor
and
add
and
adc
inc
push
cmpsl
rorb
movsl
push
cwtl
rorb
repz
and
pop
int
popa
xlat
in
mov
or
dec
push
mov
pushf
or
mov
imul
lret
inc
push
rcr
fisttps
frstor
dec
mov
sub
cmp
ss
lods
cwtl
cmc
stc
pushf
xchg
xchg
dec
inc
lcall
cld
or
xor
ficoml
dec
in
das
and
pop
test
xor
or
and
call
lret
jmp
jnp
cmp
das
push
out
add
fwait
xlat
add
lds
dec
into
add
repz
push
sub
mov
mov
add
ss
dec
sbb
mov
test
test
cmp
inc
pusha
imul
pop
ss
mov
mov
xor
aaa
test
inc
push
cmp
mov
or
movsb
ja
sub
cltd
jo
in
pop
jmp
sub
fisubl
lret
test
mov
add
or
dec
das
mov
sbb
into
pushf
mov
outsl
cld
ret
sahf
and
jp
filds
stos
adc
insb
push
push
fsubs
mov
sti
pop
shl
cmp
or
xchg
in
nop
adc
mov
shlb
jb
in
jmp
push
xor
je
inc
pop
mov
jo
add
inc
xor
jmp
push
aas
movd
out
aaa
mov
sbb
out
jecxz
incl
mov
sbb
int
dec
out
outsl
jp
jno
xchg
mov
in
push
enter
mov
adc
fsubr
lea
cmp
jle
xchg
xchg
push
jmp
cmp
jnp
stc
pop
add
leave
shll
and
adc
lds
ss
je
jnp
push
adc
jnp
mov
xlat
fcmovb
push
out
leave
mov
mov
shl
fistpll
sbb
lods
arpl
rorb
pop
cmp
mov
addr16
pop
adc
xchg
inc
add
dec
add
pop
dec
stos
jg
inc
decb
mov
sar
cli
ffreep
xor
mov
inc
push
sbb
ljmp
xchg
popa
sbb
ret
scas
js
push
push
orl
cld
ljmp
rcrl
mov
xchg
fwait
xor
cltd
inc
jb
outsl
xchg
mov
ret
and
cmpsb
in
and
push
lods
xchg
jns
jnp
shr
cltd
jb
daa
xchg
or
lock
push
push
outsl
xchg
js
jae
jmp
mov
movsb
xchg
or
pop
mov
add
sub
add
les
sbb
mov
add
sub
std
push
pop
imul
adc
and
incb
rclb
daa
mov
fidivl
mov
aas
ja
xor
ret
insl
xchg
subb
aaa
mov
dec
faddl
inc
sahf
mov
xchg
add
int
cmp
ja
and
lds
movsl
ss
aas
lods
adc
jp
nop
and
or
xchg
lds
sub
dec
inc
mov
aas
sbbb
js
sahf
xlat
and
dec
daa
mov
pop
dec
dec
or
cmp
movsl
pop
xor
and
or
dec
jp
and
sahf
leave
repnz
addr16
pop
mov
cwtl
stos
lahf
jne
clc
aam
mov
rcll
cmp
sub
ficoms
jge
xor
mov
mov
loope
push
ljmp
pop
cli
push
pop
cmpsl
out
pop
mov
clc
aas
sbb
xchg
cli
and
add
rclb
rolb
or
je
lea
sub
lret
negb
mov
incb
add
cmpsl
dec
or
out
test
adc
subl
icebp
mov
push
mov
mull
mov
jg
mov
addr16
xor
adc
inc
out
xor
dec
cmp
ss
rol
jb
push
into
mov
jge
xor
imul
leave
sbb
dec
pop
mov
push
mov
cli
mov
pop
mov
pop
js
sbb
dec
js
repnz
je
data16
out
fildll
out
mov
push
shlb
les
push
popf
inc
and
ja
fcoms
rol
repnz
lcall
jb
xchg
arpl
lea
cs
cmpsl
addr16
sub
and
cmc
mov
sub
mov
push
pop
and
popf
mov
aaa
mov
cmp
pop
clc
sub
test
pop
pop
xchg
push
stos
xchg
jno
or
in
add
or
fstp
das
daa
movsl
add
ja
dec
sarl
fs
into
out
and
inc
lds
sahf
mov
adc
out
stos
xchg
lea
andl
mov
aas
dec
std
mov
fidivs
adc
ja
je
mov
xchg
popf
test
xor
and
cmp
lret
xchg
loope
pop
mov
cmc
cmp
mov
mov
jno
cmp
pop
mov
insb
sub
inc
insb
and
sub
cli
cmp
fstpl
push
sub
bound
mov
cli
mov
andl
mov
ss
jmp
cmp
xor
xorl
mov
push
push
cmp
sub
aad
ja
mov
xor
mov
ret
mov
decl
lahf
mov
imul
adc
push
push
push
add
pop
rolb
rcll
loopne
fs
dec
mov
popa
cli
test
dec
inc
lock
aad
push
es
notb
mov
sbb
aam
int3
sti
or
xchg
repz
and
add
shll
inc
adc
sbb
xor
sbb
cmp
mov
sub
lods
ficoml
sub
nop
lret
shl
or
lock
in
fs
adc
into
popl
or
fs
out
lcall
loop
inc
cmc
xor
mov
mov
insl
pop
aam
xchg
or
ret
stos
cmp
and
mov
inc
jl
jl
jo
cmp
lcall
mov
mov
sahf
fisubrl
call
movsl
ljmp
fdivs
iret
jmp
subl
sub
mov
push
push
xor
or
je
adc
mov
sub
mov
call
mov
enter
dec
pop
add
pop
pop
pop
nop
add
pinsrw
or
push
ja
xchg
idivl
and
mov
stos
adc
lahf
aad
aam
xor
addl
mov
rcll
add
dec
ficoms
mov
movsb
sbb
mov
sub
dec
fnstsw
out
sub
into
std
stc
add
xchg
cmp
outsl
orb
adc
ret
movsl
pop
cmpsl
aam
push
mov
xchg
iret
mov
outsb
inc
inc
sbb
push
jg
js
or
loope
clc
ret
ja
fwait
mov
data16
push
cmpl
inc
cwtl
das
shll
mov
pusha
leave
pop
and
call
loop
add
sbb
push
gs
jp
sub
mov
int3
movsb
imul
xor
lahf
cmpxchg
ficomps
mov
das
xchg
fdivrl
test
movsb
inc
jne
add
pop
cmpsl
push
fnstcw
inc
lds
xchg
stos
push
ror
mov
daa
test
inc
movsl
in
inc
cmp
jne
hlt
stos
push
sbbl
ss
scas
push
cltd
dec
sub
addl
push
out
adc
incl
mov
xchg
dec
push
xchg
xchg
push
lea
notb
pop
les
jb
push
mov
add
mov
data16
xchg
pop
mov
ds
cmp
mov
mov
xchg
ss
ljmp
pushf
in
xchg
rol
cmc
mov
adc
imul
add
xchg
xor
pop
adc
push
lods
or
movsl
sbb
add
inc
scas
shrb
pop
fucom
aas
pop
outsb
shlb
cmpsb
in
jmp
sub
dec
cld
lds
jl
jp
pop
pop
pop
adc
push
das
pushf
adc
scas
jg
lcall
xchg
iret
hlt
pop
aam
sub
cmp
push
in
nop
pop
test
xchg
pop
jmp
ret
adc
jno
mov
mov
stos
adc
xchg
jno
sti
dec
sub
decb
adcb
addr16
popa
push
sbb
sub
and
dec
sub
stc
add
fdiv
movsl
ret
dec
inc
out
lock
or
and
jp
sti
jbe
adc
sub
stos
sbb
push
lcall
in
movsl
sbb
or
in
and
data16
sub
xor
cmpl
pop
sbb
or
mov
lret
mov
stos
leave
mov
inc
js
cld
and
xchg
dec
sbb
cmp
sub
data16
push
addl
xchg
pop
cmp
movsl
xor
sbb
jo
cmpsl
add
cs
sar
jnp
or
mov
add
pop
dec
or
push
lret
popa
xchg
push
mov
nop
hlt
mov
cmp
lea
sbb
push
xchg
push
push
stos
fwait
cmc
or
pop
inc
inc
lcall
test
outsl
inc
loope
movsl
test
fwait
std
cmc
mov
and
add
ljmp
pop
test
dec
lret
or
jg
jmp
add
sub
movsb
fisttpl
test
dec
or
call
pop
mov
out
ja
xchg
aaa
push
add
cmp
add
jge
sbb
cwtl
adc
int
xchg
sbb
xor
jle
clc
movsb
out
fnsave
pop
ficomps
cs
push
xchg
mov
jae
mov
test
fcoms
out
or
and
sbb
into
mov
mov
stos
push
push
and
cmp
cmp
and
mov
in
call
leave
jl
mov
xchg
jmp
dec
cmpsl
scas
fsub
fs
lcall
sub
push
pusha
les
fadd
push
mov
or
add
cs
outsb
dec
pop
pop
std
add
inc
pop
movsl
fstps
or
sbb
mov
or
push
mov
pusha
inc
orb
insb
inc
xchg
inc
xchg
mov
fcomip
out
push
dec
jmp
and
mov
clc
sub
or
ss
mov
aad
aaa
punpcklwd
pop
ljmp
pop
dec
lret
fistps
out
xlat
mov
rorb
shlb
loopne
jecxz
fdivr
inc
std
inc
fimull
push
inc
push
orb
push
pop
xchg
cmp
clc
sbb
pop
mov
loope
push
push
lret
mov
out
mov
ss
sub
xchg
xchg
mov
cmp
adc
scas
cli
lret
mov
test
mov
inc
cwtl
enter
lds
scas
add
cld
arpl
into
cltd
adc
enter
xchg
jo
dec
rolb
cwtl
xchg
jge
pop
mov
xor
movsl
stos
aas
fucomip
jne
clc
das
push
mov
std
xchg
sub
mov
popf
ljmp
popf
xchg
pop
jg
xchg
lahf
inc
or
xor
jae
dec
push
mov
lods
shll
xor
push
xor
addr16
sbb
mov
pop
repz
in
sbb
bound
push
inc
pop
jge
inc
pop
inc
sbb
add
cmpsb
sbb
dec
mov
call
inc
or
sbb
test
and
push
testl
jge
pop
imul
xchg
negl
dec
cmp
pop
sbb
xchg
shr
ret
mov
insl
mov
fwait
stos
mov
xor
pop
push
add
xor
cmp
lock
fisubrs
cmpsb
jecxz
dec
rcl
mov
in
xor
fcmovb
scas
shll
je
test
bound
mov
sarb
adc
sahf
mov
into
rorl
lahf
cmp
cltd
shrl
insl
cmp
mov
add
ds
inc
stos
xchg
ds
sti
push
sub
insb
push
je
orl
mov
mov
sbb
inc
xchg
pop
sbb
lahf
dec
hlt
inc
or
test
int
rol
push
int3
cmpsl
mov
xor
test
lahf
pop
aas
or
jmp
mov
fdivr
pop
fisttps
cmp
mov
das
pop
cmp
mov
xor
mov
adc
cmovnp
sub
mov
popf
cmpsb
inc
inc
scas
adc
les
out
je
hlt
imul
sahf
add
je
or
fimull
pop
push
mov
jl
dec
or
scas
repnz
cmc
hlt
or
xor
out
in
pop
in
imul
dec
les
int3
push
test
fnstsw
aaa
inc
loope
insl
push
mov
and
clc
jmp
push
push
and
inc
xchg
xchg
loop
jecxz
mov
mov
ret
push
cmp
popa
xor
mov
daa
mov
fnstcw
mov
test
sub
jns
cltd
call
jecxz
lret
jb
cmpsb
cltd
sub
repz
xchg
lret
cmpl
or
add
rolb
aaa
movl
pop
push
cmp
sbb
push
cmp
mov
mov
adc
mov
lret
jns
bound
pop
idivb
and
inc
in
inc
ds
clc
je
insl
dec
imul
sub
lea
add
popa
fldcw
mov
fidivs
mov
cmpsb
fincstp
push
nop
or
or
fsubrl
sbb
fnstsw
aas
jno
xor
stos
mov
cmp
add
cmpsb
cmp
fisttpl
jb
inc
adc
dec
out
mov
ss
or
addr16
loop
loopne
movsb
dec
fwait
negl
and
xor
lods
sub
daa
xor
repz
pop
inc
aad
and
lcall
sarb
cltd
dec
ret
out
xor
idivb
hlt
pusha
subl
fsubp
cmpl
pushf
cltd
jo
js
les
cmp
repnz
jns
ficompl
push
pop
ja
sub
push
push
in
and
pop
pop
or
js
pop
add
lcall
call
push
sub
and
jae
shrb
fstps
sarb
out
test
inc
pushf
add
cmp
dec
jp
sub
icebp
sub
sbbl
or
pop
push
aas
popf
pushf
and
imul
sbb
xchg
lcall
and
xor
scas
cmpsb
repnz
xchg
or
xchg
call
cmp
mov
lods
push
and
mov
movsb
xchg
inc
xchg
jp
aaa
mov
dec
filds
dec
mov
mov
mull
jl
pop
xor
mov
dec
xlat
jo
je
xchg
cmp
insl
mov
or
xchg
adcb
jmp
rcrb
or
mov
xchg
lods
jecxz
push
push
mov
shll
push
int
pop
cmc
popf
or
cmc
and
sub
cmp
push
lret
sub
outsl
or
mov
or
aas
push
dec
mov
das
loope
push
std
mov
xchg
rcpps
sbb
mov
gs
outsb
shr
dec
inc
pusha
test
adc
sahf
fistps
or
mov
mov
pusha
sarw
mov
in
arpl
xchg
aad
cmp
add
mov
out
xchg
hlt
dec
cs
adc
dec
mov
sahf
or
lock
adc
dec
pop
xlat
mov
imul
or
pop
repnz
mov
in
cltd
clc
mov
jecxz
lret
add
inc
xor
add
mov
stos
rclb
ljmp
testl
push
xchg
test
push
or
push
and
mov
push
sbb
xor
rolb
sub
mov
add
mov
insb
cmp
adc
inc
sbbl
lea
and
pop
mov
sbb
pop
cld
push
xor
icebp
cli
pop
pop
enter
dec
pop
or
inc
ss
inc
icebp
mov
aam
into
adc
jge
stos
mov
inc
pop
jmp
std
and
loopne
mov
ss
dec
loopne
fsubrl
cmp
adc
pop
jp
inc
xchg
xlat
mov
imul
dec
or
fwait
xchg
jo
jl
add
pop
lock
fldl
dec
add
dec
jo
insl
pop
imul
lahf
sbb
ror
pop
or
lock
jb
out
jle
pop
adc
jl
insb
inc
ret
int3
fdivl
push
jno
stos
daa
or
mov
mov
loopne
pop
mov
jnp
push
push
leave
or
or
or
sbb
popf
in
inc
leave
test
and
jbe
and
cmp
mov
cwtl
loopne
mov
mov
movsb
shl
add
or
or
ja
fidivrl
mov
stos
jecxz
cli
push
add
mov
and
call
push
popf
xlat
ret
push
andb
bound
jle
xor
in
mov
jns
in
adc
enter
in
add
lock
inc
popa
jmp
into
and
imul
xchg
push
push
repz
lea
and
nop
inc
ret
sub
rol
inc
jmp
mov
adc
andb
repnz
pop
mov
or
loopne
or
pop
out
jb
fstl
in
sahf
scas
mov
in
jb
mov
inc
insb
mov
pop
ds
sbb
fidivs
aam
add
movb
pop
xchg
int
dec
pop
adc
xchg
out
fcmovnbe
arpl
icebp
in
inc
or
insb
int3
fldl
xor
shll
out
jbe
subl
cmpsl
jb
lock
mov
clc
hlt
iret
push
sub
add
stos
or
mov
dec
or
push
arpl
pop
mov
lds
ss
inc
cltd
xchg
sbb
movsl
mov
iret
adc
pop
leave
frstor
test
loopne
sub
jns
pop
xor
out
add
ds
xchg
rcl
test
push
mov
cli
fdivs
fcoml
rol
scas
ret
sbb
xchg
xchg
test
sub
pusha
and
or
xchg
pusha
mov
pop
int3
push
cltd
xbegin
mov
jp
mov
test
pop
in
gs
xchg
inc
test
mov
incl
popf
divb
and
mov
xchg
and
xorl
adc
hlt
xchg
adc
push
dec
lock
cmpsl
jecxz
inc
cli
mov
mov
dec
lods
xor
dec
mov
mov
scas
in
dec
xchg
fstpl
add
fwait
push
push
out
add
les
or
xor
hlt
mov
push
stos
lahf
mov
sbb
sub
sub
cmovle
adc
lea
or
dec
cmp
inc
mov
xchg
add
adc
lahf
mov
pop
sub
mov
push
shr
add
cmpsl
jns
sbb
add
or
push
mov
cli
aas
dec
sbb
inc
aaa
js
xchg
or
inc
xchg
jmp
bound
das
push
xchg
mov
mov
test
mov
sub
lret
and
sbb
in
insb
pusha
lock
decb
mov
idivl
mov
imul
cmp
dec
fidivl
and
enter
or
repz
or
ja
loope
out
inc
nop
jl
cld
jae
pop
or
pop
pushf
xabort
push
enter
nop
lds
mov
jmp
popf
jl
divb
inc
lcall
shrl
sbb
sar
inc
xor
lret
mov
cwtl
cmp
mov
jg
adc
adc
pushf
movsb
adc
mov
jg
jbe
fisubl
mov
adc
rorb
dec
lds
sub
mov
mov
push
roll
ror
dec
adc
call
imul
sbb
test
scas
jbe
push
pop
inc
xor
xchg
lods
int
inc
xor
xor
sub
iret
adc
xlat
stos
ss
pop
mov
and
push
pop
mov
cs
cwtl
and
inc
fistl
mov
nop
out
mov
lret
xor
fnsave
sub
popf
std
push
lret
popa
add
testl
mov
dec
test
mov
dec
roll
fisttpll
inc
std
jge
and
mov
loop
int3
or
cmp
sbb
in
sub
cmp
adc
xor
jo
outsb
mov
sub
pop
ja
and
mov
out
loop
adc
inc
mov
cmc
sub
pop
jae
inc
call
pop
cmpsb
fnsave
push
outsb
pop
lock
cmpsl
pop
sbb
mulb
or
jb
add
add
sub
sub
inc
imul
scas
insb
popf
shll
mov
test
stos
and
xchg
dec
testl
gs
fisubrl
mov
mov
and
inc
popf
icebp
enter
push
dec
add
lock
insb
adc
and
sub
jg
in
fst
packuswb
repz
addr16
push
mov
add
sub
push
scas
popf
jno
mov
data16
jp
xchg
dec
into
scas
mov
add
sub
push
iret
aad
jecxz
lret
ffree
lods
into
sarl
iret
lods
pop
mov
sub
ret
and
push
mov
leave
test
sub
mov
test
sahf
mov
pop
imul
xor
dec
and
cmpsl
push
lea
lods
mov
inc
push
add
into
stos
xor
jnp
mov
out
mov
or
fcompl
pop
test
dec
mov
rolb
xchg
jmp
push
imul
xchg
loopne
jle
and
mov
xlat
xchg
mov
inc
push
icebp
inc
call
ljmp
cmpsl
cmpsl
outsb
jnp
ss
mov
mov
bound
cmp
pop
test
sub
or
fmull
and
stos
adc
xchg
jge
xchg
adc
cmpsb
outsb
sub
push
inc
sbb
and
cmp
iret
and
dec
mov
repnz
and
cmp
add
icebp
pop
pop
xor
jb
mov
lods
pop
stos
pmullw
cld
or
fiaddl
nop
pop
fwait
dec
adc
jae
notb
cmp
mov
mov
pop
pushl
dec
pushf
scas
mov
mov
sub
call
out
lret
mov
mov
out
movsb
cmp
pop
jl
ljmp
data16
roll
xor
adc
cmpsl
sub
ljmp
push
jbe
inc
sbb
inc
xorb
mov
arpl
arpl
lcall
cmc
rcll
test
bound
loop
stos
icebp
addr16
mov
outsl
aam
ret
jp
and
rcrl
jp
push
mov
subl
or
mov
xlat
jl
pop
pusha
xor
push
dec
idivl
sbb
pop
loopne
adc
xchg
lds
cmp
orb
fsubrs
adc
xor
pusha
leave
js
jbe
jp
daa
in
int
xor
lea
loopne
xor
jge
ret
rol
cmp
fistps
test
es
movsb
filds
insl
int3
ret
jbe
jae
sub
adc
popa
or
outsl
mov
mov
out
fisubl
clc
ficompl
or
aad
cmp
xor
int
xchg
mov
cmp
sub
jmp
sub
xchg
jge,pt
fcoml
pop
test
daa
out
mov
cmp
pop
jl
scas
hlt
lcall
sub
push
aas
cmp
push
andl
mov
lea
out
pushf
hlt
cmp
lea
mov
movsb
fcmovu
scas
repnz
mov
cmp
mov
sbb
inc
sbb
sub
enter
jg
sub
xor
add
adc
shr
ja
sub
adc
test
pminsw
inc
cltd
jnp
daa
xchg
mov
cmp
mov
hlt
addr16
xor
cmp
mov
mov
adc
int
adc
movsl
icebp
je
add
out
adc
xor
pushf
sub
cmp
and
mov
cmpsl
subb
mov
insl
gs
push
lods
cmp
xchg
fwait
into
in
push
jnp
int
xchg
scas
mov
out
rcl
xor
cmp
scas
test
rclb
xor
xchg
mov
cmp
pop
mov
divl
jnp
add
adc
xor
mov
pop
mov
ret
insb
or
lahf
mov
or
ret
idiv
sbb
imul
sub
repnz
push
int3
nop
push
dec
nop
loopne
inc
dec
jae
inc
cmp
inc
sub
mov
mov
dec
mov
ret
and
adc
fistps
aas
test
inc
lret
aad
stos
jle
int
sbb
add
adc
add
fcoms
roll
add
in
sbb
mov
stos
and
sbb
in
mov
xchg
div
mov
lcallw
push
imull
cwtl
loope
xlat
xor
cld
rcrb
or
dec
hlt
je
inc
je
lods
push
dec
cmpsb
scas
jae
or
pop
jmp
push
cmc
inc
lcall
or
aas
sub
mov
jp
push
out
fucomip
dec
pop
popf
fbstp
mov
mov
sub
jnp
pop
ret
add
lret
mov
loope
add
pop
cwtl
xchg
jns
and
loope
popa
mov
jae
push
repnz
pop
mov
push
scas
pop
das
ret
nop
iret
icebp
mov
lcall
es
mov
lods
mov
and
cmp
mov
jo
shlb
cmp
mov
addl
lahf
pushf
adc
xorb
shrb
loope
nop
push
pop
scas
ss
int
push
mov
add
adc
inc
mov
test
xor
add
pop
mov
dec
cmp
sbb
xlat
and
and
and
push
das
stos
js
int
xchg
lods
jle
push
adc
stc
scas
stc
mov
jns
out
xchg
add
cmp
sbb
syscall
or
lea
sub
out
mov
cmovbe
sub
mov
mov
or
sub
int3
sarl
mov
nop
jnp
ljmp
jle
add
and
push
aam
into
fs
testb
mov
sub
fnstenv
cmpsb
inc
cmp
adc
leave
lahf
sbb
and
jmp
testl
pop
mov
movsb
push
repnz
cs
lods
into
and
jnp
mov
jge
rcll
outsb
ficomps
sti
add
xchg
push
xchg
sub
out
sti
xchg
mov
enter
sbb
jo
iret
or
imul
repz
or
in
out
jg
icebp
xchg
adc
daa
jle
adc
sub
aaa
ret
dec
and
jg
es
jne
fnsave
pop
in
dec
fcoms
pushf
xor
mov
push
xchg
ret
inc
mov
mov
fdivl
repz
std
lahf
hlt
or
ret
shrl
mov
testl
fwait
sub
aas
cmp
pop
inc
arpl
mov
popa
jecxz
dec
cwtl
xchg
imul
enter
mov
lods
cmp
push
jg
push
fcoml
daa
xor
pusha
fisubl
mov
mov
movsb
popa
notl
xchg
mov
scas
pop
leave
jg
or
sbb
mov
mov
xchg
xchg
xchg
mov
pushf
xor
cli
dec
sar
mov
jl
jmp
sub
push
out
subl
test
cmp
repnz
movsb
xor
mov
clflush
mulb
cltd
pop
mov
xchg
sub
sub
jmp
mov
adc
jg
xlat
mov
sti
ficompl
fimull
and
lcall
popa
mov
hlt
jl
adc
nop
leave
sub
adc
or
cmp
jnp
mov
jb
out
movsl
add
cmp
jo
pop
loop
xchg
jge
sar
int3
add
jp
xchg
testl
pop
in
fwait
shlb
push
mov
jbe
cmp
psubusw
lret
ds
pop
and
test
add
loop
fidivl
bound
mov
sbb
push
jo
test
mov
lds
mov
sub
sbb
push
inc
mov
shlb
xchg
repz
push
push
or
mov
fnsave
sti
shrl
and
and
cmp
push
sub
movsb
icebp
cmp
and
sbbl
inc
lock
rorl
and
xchg
cmp
imul
insb
push
xchg
dec
fwait
sub
lahf
movsl
in
lock
clc
mov
push
flds
out
dec
mov
cltd
push
sbb
or
shll
xor
sti
dec
xor
ret
ret
and
pop
xchg
bound
cmp
mov
jg
enter
xor
xchg
jne
fnstenv
sub
lahf
dec
jecxz
sbb
cli
leave
sbb
dec
jbe
and
xchg
adc
and
testl
pop
and
inc
xor
xchg
inc
jns
lret
cmp
xor
add
push
cmp
mov
popa
test
adcb
out
or
cmp
ss
sub
sbb
sub
and
fadds
push
adc
xchg
lret
movsl
shlb
xchg
push
inc
mov
nop
in
ljmp
mov
add
fldenv
mov
mov
sbb
lock
test
mov
inc
cmpsl
cs
shll
pop
sahf
jmp
mov
mov
stos
lds
xor
lcall
outsl
fbld
pop
and
jl
cmp
adc
mov
sbbb
in
mov
mov
pop
jmp
dec
mov
test
jnp
jbe
addr16
ret
lahf
bound
rolb
sbb
in
jnp
mov
fcoms
jne
jno
mov
lea
add
sub
mov
fistpl
push
and
mov
xchg
push
subb
xor
nop
inc
or
jl
leave
jl
inc
adc
sbb
cmp
xchg
test
inc
push
xor
leave
cmc
xor
sbb
cmpsl
jb
cmp
pop
inc
mov
rorl
sti
daa
cld
pusha
lds
sbb
fwait
arpl
mov
insb
push
and
pop
pop
into
insb
jge
sub
mov
dec
mov
or
aas
iret
out
bound
jo
leave
aas
mov
addr16
xchg
addr16
mov
push
mov
jmp
push
and
xor
adc
jmp
je
mov
push
add
pop
push
lahf
das
adc
std
cmp
cmpsl
push
xor
mov
int
pusha
out
insb
or
and
fistps
mov
mov
leave
repz
push
jae
les
mov
cmp
jmp
sub
inc
bound
sub
lahf
jbe
mov
sub
jo
cltd
jge
mov
cmc
jmp
cs
and
mov
mov
pop
xchg
cmp
jl
dec
pop
and
and
lahf
xor
ds
lret
or
xor
push
cmpsl
subl
and
cmpl
cltd
aaa
int3
dec
aas
mov
sbb
push
cmpsb
jg
sbb
mov
mov
sbb
mov
adc
lahf
iret
ljmp
sbb
fnsave
or
out
mov
push
aaa
in
rcl
daa
loop
cmp
xchg
dec
stc
pop
sbbl
mov
fnsave
lea
xchg
dec
inc
xor
pushl
xchg
insb
fs
cs
lock
add
pushl
jge
cmpl
outsb
pop
out
mov
daa
aam
inc
shll
sti
dec
push
and
aas
lret
inc
clc
xchg
adc
or
jle
mov
and
ret
out
cli
enter
mov
ret
xchg
cwtl
sub
mov
cmp
popf
iret
sub
push
pop
add
stos
inc
ret
aad
into
sub
jg
push
mov
add
mov
and
jp
pushf
or
ret
ss
mov
or
dec
cmpsb
pop
push
lock
sub
divb
push
clc
mov
stc
mov
repz
adc
outsl
jmp
sahf
xlat
fiaddl
nop
sbb
add
lret
mov
ret
mov
rorb
enter
jp
mov
mov
std
or
xor
sub
dec
ficoms
xchg
loope
in
sti
jno
repnz
dec
pushf
dec
and
push
gs
adc
mov
jl
popf
mov
fldt
aas
xchg
nop
push
jbe
flds
cmpsl
sbb
or
out
subb
ds
sbb
sahf
xchg
push
inc
mov
push
test
sti
xlat
lahf
mov
jae,pn
xor
mov
mov
pushf
out
fistpl
aam
out
scas
ret
sti
addl
sahf
negl
daa
mov
xchg
inc
divl
adc
popa
nop
cmpb
adc
mov
filds
inc
std
outsl
mov
jnp
aam
cmp
xchg
adc
pop
or
repnz
inc
cld
inc
and
push
sbb
xchg
pop
lcall
mov
xor
push
or
test
ret
fldenv
insl
adc
outsl
jmp
jge
rclb
out
or
cmp
and
adc
mov
xlat
mov
jns
mov
adc
cs
cmp
fcomps
jg
adc
sbb
inc
or
mov
jle
repnz
fisubl
test
in
lods
push
jp
repz
mov
add
add
idivb
ret
lcall
push
out
nop
mov
ds
out
cmp
aam
insl
std
cwtl
imul
cltd
addr16
or
inc
sbb
sbb
push
push
or
sub
inc
aas
sar
pop
mov
xor
jge
mov
sbb
push
xlat
idivl
xchg
dec
jp
stos
pop
pop
or
ss
jae
inc
mov
je
sbb
push
push
js
inc
push
pop
fiaddl
pop
mov
fwait
push
cmp
inc
aad
sbb
cmp
xor
aas
jbe
cmpsl
int
daa
lahf
sti
dec
imul
mov
push
xor
mov
movsl
dec
inc
es
in
or
xchg
xchg
js
mov
adc
and
nop
ja
cwtl
mov
dec
add
test
pop
sahf
xlat
cmpsb
lods
fstl
insl
ja
or
inc
jge
xlat
pop
inc
pop
fldl
sbb
mov
out
data16
aaa
inc
std
inc
test
jno
stos
cltd
adc
inc
jae
push
mov
icebp
pusha
bound
push
out
dec
sbb
out
iret
push
pop
std
negb
or
addr16
sti
xor
fistps
jbe
dec
int
jbe
dec
or
and
outsl
jnp
or
stc
mov
fistps
pop
fists
inc
ss
dec
stc
clc
mov
pop
fisttpll
sbb
adc
mov
jge
adcb
mov
leave
jp
mov
sub
pop
jg
insl
push
mov
mov
into
mov
jae
test
testl
les
or
mov
pop
pop
out
mov
mov
xchg
push
sbb
outsl
mov
xor
mov
jo
and
pushf
and
pop
pop
mov
std
mov
or
mov
xor
popf
repnz
mov
mov
ja
test
in
enter
sti
mov
add
adc
hlt
pop
jbe
pop
cli
in
xor
cli
inc
sahf
imul
sarl
inc
inc
in
xorl
test
iret
mov
mov
push
js
jae
mov
in
inc
xchg
add
inc
clc
mov
les
ret
adc
xor
add
test
sbb
xor
inc
sbb
inc
jo
ss
jo
adc
jbe
cmc
call
loop
add
in
fisubrl
jecxz
outsb
fs
imull
xor
pop
xchg
or
ficoml
popf
insl
sti
push
int
inc
data16
sbb
and
mov
sub
lahf
inc
push
bound
add
pop
insl
push
out
cmpsb
add
sarl
pop
inc
idivb
outsb
rcrl
out
pushf
fbld
out
xor
andl
les
push
sbb
loopne
sbb
into
dec
push
push
js
jo
mov
pop
divb
pop
sub
std
and
daa
std
dec
jmp
cmp
add
pop
sub
mov
test
bound
ds
dec
rcr
mov
jmp
xor
mov
cmp
pop
mov
lds
cmp
mov
ror
pushf
fsubp
xchg
adc
cmpsl
pop
cmpsl
jbe
jge
inc
add
sub
cld
jb
icebp
in
in
sub
push
xor
jp
ret
dec
cwtl
mov
sub
ja
dec
lods
jae
nop
scas
cmp
out
test
pop
addr16
cmp
jnp
sbb
scas
push
cwtl
jecxz
addr16
sbb
mov
push
divb
xchg
cld
jno
add
divb
inc
xor
cwtl
mov
cmp
jnp
push
adc
push
sub
jmp
imul
testl
xchg
jno
and
cmp
scas
in
cmp
sub
aam
test
call
sub
cmpsb
mov
das
dec
das
inc
arpl
enter
push
test
insl
fptan
add
leave
pop
sub
or
enter
adc
push
mov
xchg
popa
adc
push
jno
or
jbe
fadds
fsts
leave
sub
lods
push
mov
xchg
cmpb
add
lds
out
mov
mov
mov
add
push
cwtl
push
pop
lret
popa
shlb
insb
shll
lahf
push
push
repnz
hlt
mov
clc
fistpl
inc
mov
push
or
cmp
insl
call
dec
gs
cmpb
pop
mov
sarb
mov
inc
sti
cmpsb
cmc
lret
and
adc
mov
lahf
mov
pop
in
jge
mov
sbb
jne
jle
pop
push
jl
mov
sti
imul
sbb
or
lret
test
mov
fwait
push
enter
mov
cld
enter
jae
sahf
push
adc
sbb
in
and
add
iret
pushf
push
mov
mov
pop
hlt
movsl
push
jno
cs
xchg
add
inc
mov
scas
mov
shl
sub
mov
inc
aas
cld
mov
xchg
hlt
or
test
inc
mov
inc
dec
cltd
xor
icebp
adc
mov
das
or
xor
jne
addr16
roll
pop
xor
aam
push
insb
pusha
mov
and
out
adc
mov
pop
and
xchg
fbld
dec
jmp
out
adc
lcall
fwait
pop
add
jae
lock
mov
aas
aaa
daa
inc
pusha
dec
mov
clc
je
xchg
bnd
sti
add
aas
jecxz
push
cmp
xchg
sub
fnstsw
lcall
jno
push
ja
jno
push
cmp
test
in
movsb
push
adc
test
dec
xchg
cmp
or
xor
mov
pop
ficoml
clc
pusha
mov
add
push
mov
mov
sbb
fmuls
lahf
mov
mov
stos
int
cmpsl
arpl
inc
dec
jo
add
jae
pop
push
mov
in
cwtl
push
fsub
inc
sbb
mov
in
add
push
or
or
sub
adc
inc
mov
shlb
out
test
fnstcw
jo
pushf
lret
ds
mov
out
scas
jno
std
call
fiaddl
jne
test
mov
pop
sub
test
fwait
sti
mov
ds
mov
aaa
cmp
sub
lret
lea
mov
inc
push
mov
pop
adc
xchg
pop
mov
fldcw
inc
mull
dec
insb
int
scas
and
mov
adc
out
mov
das
inc
fcoms
leave
xchg
sti
aad
imulb
and
into
pop
lahf
push
sbbb
push
push
iret
testb
aam
fidivl
cli
popf
adcl
adc
push
jb
gs
push
mov
dec
cs
je
or
jl
mov
test
jne
add
push
scas
out
add
mov
std
ss
sahf
and
dec
adc
xor
xchg
or
aam
test
xchg
out
adc
fistpl
and
prefetch
push
mov
mov
dec
mov
fisubrl
test
and
xor
out
lret
cmp
decb
int3
or
xor
cli
lret
aaa
jns
or
pop
inc
cmp
push
lcall
lcall
xchg
and
xor
mov
pop
inc
fs
lahf
inc
pop
daa
sub
push
adc
adc
hlt
xchg
jg
hlt
cmp
clc
pop
pop
adc
jae
mov
mov
sbb
lods
sbb
ret
cmpsb
movb
jg
fistps
or
addr16
lret
shl
shlb
pop
mov
dec
xchg
nop
pop
push
enter
mov
mov
xor
mov
pop
push
js
push
test
popf
shll
xor
iret
cmc
fdiv
pop
and
ja
inc
mov
subl
mov
aad
mov
mov
lcall
push
dec
es
in
add
xor
cmpsl
popf
cs
mov
mov
fsubrp
ficomps
insl
mov
pop
inc
subl
fs
test
insb
dec
xchg
xor
je
jecxz
jle
js
adc
sbb
stc
xchg
xchg
gs
decl
jo
dec
sti
inc
mov
int3
cmp
mov
lret
cmp
shll
enter
and
xchg
jge
mov
mov
imul
sbb
fiadds
mov
aam
roll
mov
jp
and
mov
xchg
je
rcll
push
fdivrs
cld
hlt
cwtl
in
mov
xlat
shll
andl
stos
push
hlt
cld
call
daa
lods
push
aam
cmp
dec
xchg
sahf
mov
movl
les
sbb
js
or
movsl
sbb
stos
push
rorb
mov
jecxz
jge
adc
add
inc
imul
pop
mov
sbb
outsl
adc
inc
cmp
push
pop
test
out
leave
lret
jl
mov
xchg
push
xchg
movhps
jno
inc
push
insb
add
pop
add
iret
jmp
lods
sub
cld
jae
pop
sbb
ret
out
popa
push
daa
jp
test
xchg
add
cmp
ss
movb
cmpsl
aad
insl
es
cwtl
adc
add
mov
test
mov
out
in
jb,pn
les
ds
lods
clc
ret
iret
push
xor
cmpsb
test
orb
je
push
aad
cmc
cmp
aas
push
enter
xchg
mov
lahf
mov
dec
gs
insb
sub
jb
mov
push
pop
stos
push
sub
adc
aad
out
or
inc
fcmovbe
push
shrb
in
imul
mov
mov
xorl
imul
cmp
adc
andb
imul
xor
fidivrs
dec
pop
mov
mov
negb
sub
push
dec
mov
mov
dec
jmp
sbb
or
fisttps
testl
or
mov
sub
add
mov
sarl
orl
pop
movsl
adc
in
ud2
pop
and
scas
enter
xlat
push
scas
pop
xchg
lcall
push
lock
js
xchg
xchg
loop
jns
mov
mov
cs
cmc
fsubl
sbb
add
arpl
in
das
fidivs
add
adc
icebp
push
mov
xchg
dec
push
xchg
mov
mov
or
aas
inc
in
call
scas
jne
push
push
loopne
mov
inc
add
push
jg
lods
xchg
pop
lret
adc
test
add
push
push
fnstsw
adc
sbb
js
enter
push
push
xchg
xchg
push
lock
cmc
dec
js
lods
cmp
inc
imulb
cld
and
repz
test
dec
and
das
lds
dec
sub
cmp
xchg
stos
mov
jns
stos
mov
jl
lcall
in
gs
fimull
pop
dec
sahf
lds
sub
cmp
scas
scas
mov
sbb
xchg
insb
mov
and
es
add
lock
jo
arpl
push
jnp
in
daa
sbb
mov
aad
lock
xchg
push
and
repnz
adc
leave
insb
pop
add
lds
mov
xor
mov
jle
cmp
sbb
in
or
adc
cmpsb
call
popa
cmp
push
test
xchg
adc
jl
adc
ljmp
mov
call
jmp
aam
cmp
and
sub
sti
or
es
lds
jo
xchg
pop
dec
push
mov
dec
adc
nop
cmc
mov
cmp
add
mov
sub
hlt
inc
or
lcall
jne
push
and
test
cmpsb
lret
xchg
or
fisttpll
cmpsb
jmp
pusha
imull
ja
pushf
push
cmp
fmul
lret
pop
int3
mov
dec
pop
rcrl
lea
cltd
js
xor
push
hlt
sahf
aaa
adc
push
jecxz
lods
gs
insl
adc
mov
push
jg
mov
xorb
sbb
addb
ljmp
push
sub
adc
sub
mov
adc
sub
xchg
cmp
out
mov
pop
dec
fists
into
and
insl
and
daa
out
cli
mov
roll
ret
fstp
xchg
add
fdivrs
lret
jge
inc
call
out
idiv
stos
mov
sub
out
sti
pop
xor
adc
sahf
insl
and
dec
jp
mov
punpcklbw
inc
sub
pop
inc
stos
movl
sbb
sub
out
subb
dec
mov
les
call
fdiv
clc
jb
pop
mov
stos
ds
mov
inc
sbb
int3
cmp
jl
jmp
jle
ret
pop
std
test
je
push
mov
rolb
jecxz
mov
push
lods
cmp
jmp
punpckldq
pop
pushf
jnp
movsb
pop
enter
cli
adc
sub
sbb
jb
push
ja
js
cmp
ja
or
jl
cmp
adc
ficomps
call
enter
sbb
jno
cmp
push
fdivrs
mov
mov
xchg
dec
jno
movsb
mov
or
xchg
jbe
push
scas
lahf
mov
inc
sub
lret
dec
int
call
lea
stos
je
aas
and
xor
adc
mov
dec
xor
sbb
xor
int
je
rolb
sti
inc
in
xchg
int3
mov
dec
adc
mov
jne
or
add
repnz
jnp
das
mov
mov
repnz
pop
push
fidivl
push
mov
push
daa
out
fcomi
fcomip
shlb
mov
aas
fwait
xchg
xchg
cmp
pusha
mov
pop
enter
jbe
mov
mov
jmp
jge
adc
xor
ljmp
fldcw
adc
adc
sub
mov
bound
push
das
push
scas
dec
cmpsb
cmpsl
lahf
sahf
adc
xchg
in
fidivl
dec
push
xchg
mov
into
xorb
repnz
jg
rcl
loop
testb
mov
leave
and
int
es
mov
loopne
sbb
outsl
mov
fadds
addr16
stos
cld
sub
dec
fstpl
vzeroupper
inc
iret
mov
cmpsb
jp
ret
sbb
stos
push
push
sbb
sti
push
cmpsl
rcrb
rorl
mov
mov
adc
mov
push
mov
in
stc
ror
xchg
insb
loop
jg
insl
mov
xchg
dec
dec
cmc
adc
pusha
and
ret
jns
push
jnp
or
rcl
or
xor
jne
jle
mov
xchg
jne
lods
imul
xor
pop
orl
sarl
cmpsb
pop
or
pop
xor
mov
lds
push
push
pushw
ja
inc
ret
in
ljmp
and
mov
cmc
cmp
in
shll
pop
loope
aam
out
inc
jno
and
test
movsl
mov
adc
adc
add
dec
dec
sbb
dec
add
jno
pusha
cmp
cmp
and
movsl
mov
movsl
mov
imul
pop
dec
rclb
test
ja
dec
bound
cltd
inc
popf
push
sbb
xor
sub
enter
push
lds
jmp
cmp
mov
mov
cmpb
mov
leave
ret
ret
sarl
mov
cmp
mov
xchg
xor
fldt
aas
jle
in
popf
or
mov
lods
sub
lods
adc
xchg
stc
pop
roll
cli
lret
mov
mov
jmp
inc
mov
cld
cmp
ljmp
adc
push
and
push
pop
and
jno
sub
inc
xor
orb
mov
notb
cwtl
aaa
cmp
jecxz
in
in
push
mov
add
and
and
les
js
push
cmp
in
mov
lods
aaa
addr16
ror
xchg
jb
lds
dec
sbb
sbb
fsubp
sti
ss
sub
jmp
inc
cli
xchg
xchg
mov
push
adc
sbb
lcall
daa
push
mov
popa
xchg
pop
dec
orl
jle
cmpsl
or
adc
aam
shrl
jmp
lahf
lret
mov
xor
imull
xlat
mov
lods
out
adc
xchg
xchg
lds
andl
mov
lret
rolb
fcmove
neg
cmpl
lock
sbb
inc
cmp
lods
jnp
ljmp
jbe
sub
pop
dec
or
call
ret
dec
in
cmp
lea
xchg
jmp
inc
pop
mov
ss
adc
dec
xor
jge
out
in
push
add
aaa
push
mov
pushf
std
imul
xchg
jo
das
cwtl
ljmp
jp
rcll
and
add
lcall
jno
xchg
lea
out
push
push
and
xchg
ljmp
lds
fadds
and
sbb
enter
sti
ljmp
fistl
out
jge
in
xorb
mov
pop
sub
pop
lret
rorl
mov
pop
xchg
ret
adc
out
jle
jmp
add
data16
xchg
mov
cltd
push
xor
out
mov
call
xor
fisubrl
xor
inc
clc
push
lock
fistpl
add
add
mov
mov
pop
sub
je
push
push
pop
push
insb
push
lds
les
pop
jnp
mov
mov
jns
xor
lea
enter
inc
and
jo
data16
sub
ret
sub
iret
lret
imul
xchg
lea
push
or
sub
or
cltd
int
jne
pop
notl
xchg
iret
push
ds
push
int
inc
pop
stc
sub
jecxz
iret
push
in
std
scas
cwtl
add
jae
scas
mov
jmp
test
sbb
out
aas
adc
dec
jns
and
inc
out
cli
orb
sbb
movsl
add
test
xlat
fwait
rcll
data16
stos
cmpsb
cli
sbb
inc
into
cmp
dec
mov
cmp
jnp
divps
mov
xchg
imul
mov
mov
adc
shl
sbb
pusha
pop
pop
push
daa
shll
xchg
xchg
lcall
mov
lcall
push
sbb
shl
aad
xor
xor
popf
clc
stos
dec
les
cmp
and
testb
sbb
pop
pop
clc
sahf
scas
int
idiv
adc
and
cmp
out
aaa
sub
mov
arpl
push
mov
xchg
lds
sub
sbb
cmp
fistps
std
lea
mov
xor
cmpsb
cmp
xor
mov
adc
shlb
sbb
xchg
aam
add
incb
int
and
decl
push
jne
xchg
dec
push
lret
and
mov
mov
gs
sti
mov
arpl
add
mov
imul
cmp
pop
or
ljmp
mov
dec
adc
fsubl
outsl
popa
sub
sbb
stos
dec
mov
pop
push
rol
iret
into
jno
sub
add
rorl
and
or
xchg
pop
and
fcomip
lret
or
cld
fmull
nop
fsqrt
daa
jnp
sbb
sbb
std
mov
aad
sbb
mov
adc
orb
dec
inc
imul
popa
divl
mov
inc
gs
js
incb
xor
lret
scas
and
shll
stos
jmp
xor
pop
lahf
mov
jae
arpl
jp
fmulp
or
jb
pop
jo
mov
gs
pop
fwait
cmovns
mov
cmp
aas
jb
and
or
repz
out
sti
pop
shll
scas
aaa
or
scas
ficoml
cmpsl
xor
mov
mov
mov
mov
shl
sbb
ror
outsl
sbb
ret
pop
add
push
loopne
fistpll
call
and
mov
mov
lcall
push
iret
mov
in
fildl
fildll
loope
cmp
dec
sbb
or
or
cmp
mov
jmp
jnp
cmp
lods
inc
dec
add
fsubl
testl
dec
cli
pop
mov
xor
push
xor
repnz
mov
pusha
push
or
xor
out
dec
fistps
lock
push
dec
sbb
xchg
adc
xor
repz
int3
xchg
test
adc
lret
mov
adc
fwait
or
dec
gs
inc
mov
jbe
es
jmp
adc
inc
fldl
stos
aad
jns
popl
stos
jae
ljmp
pop
mov
inc
aad
sub
rclb
push
test
push
je
out
adc
in
add
clc
imul
stc
leave
daa
pop
push
movb
loopne
mov
icebp
push
or
sbb
mov
jo
fsts
aad
push
es
sbb
out
cmp
sub
and
cmp
mov
fistps
jno
xchg
lock
pushf
xchg
repz
or
mov
in
cmpl
rorl
add
push
or
fdivp
or
or
insb
fs
pop
adc
loope
sub
mov
xlat
js
fldenv
lret
cmp
stos
js
and
outsl
pop
lea
bound
outsl
mov
xor
or
popf
cli
in
pop
imul
xlat
cltd
mov
mov
pop
xor
fcmovu
mov
mov
sub
sbb
jno
jg
lcall
loop
cli
cli
popa
xor
cli
cli
lahf
mov
fwait
push
push
aas
ret
sbb
mov
jecxz
sti
out
pop
ss
inc
pop
movsb
js
add
pcmpgtb
dec
in
lds
sbb
adc
push
push
addr16
sub
arpl
sarl
adc
push
inc
mov
inc
mov
sub
iret
jl
mov
xor
test
ljmp
push
pop
or
push
imul
decb
mov
xchg
sub
sub
sbb
or
lods
jbe
test
repz
jl
jle
dec
inc
bound
gs
shl
sbb
fisttps
popa
sub
cmpb
leave
adc
lahf
mov
mov
mov
push
inc
icebp
in
cmp
rcrb
insl
xchg
mov
js
and
inc
inc
movsl
test
rcrl
fnstsw
adc
popa
xlat
adc
aas
lcall
push
loopne
mov
sti
mov
sarl
cmp
and
mov
and
xor
stos
icebp
lret
fsts
jns
cli
pop
push
inc
cli
push
sti
jnp
cs
lcall
fcomi
sbb
pusha
js
popf
mov
add
adc
sbb
push
fcomps
mov
mov
jo
push
inc
jmp
or
sbbl
dec
jbe
or
sti
out
add
mov
add
push
sbb
push
ds
fistpl
push
sub
dec
fmull
leave
jno
cmpsb
int
jo
sbb
lea
gs
xor
es
ret
mov
daa
lea
orb
push
insl
and
or
xchg
outsb
mov
push
cmp
mov
and
jns
jl
cmp
push
inc
mov
jmp
sub
repnz
es
addr16
std
in
push
repz
xchg
push
push
rolw
inc
vpsrld
loopne
pop
mov
and
push
stos
in
inc
mov
dec
fists
xchg
fprem
in
jns
pop
neg
stc
lcall
outsl
aad
xchg
xor
scas
lock
js
jl
or
aam
int3
jcxz
xlat
mov
outsl
and
add
adc
sbb
repz
inc
out
adc
fs
das
fdivs
es
scas
testl
stc
add
lock
out
aad
and
fdivrp
sbb
xor
out
push
jbe
dec
and
mov
in
sbb
in
das
test
lods
iret
adc
call
xchg
push
cmp
mov
lds
mov
mov
jmp
sub
in
int
add
pop
pop
dec
mov
mov
lea
xchg
sub
sbb
divb
or
add
sbb
test
sub
fcoml
mov
insl
enter
emms
repnz
xor
xor
inc
data16
pusha
out
sub
mov
dec
mov
enter
xchg
stos
adc
mov
cmp
fstpt
int3
repnz
add
and
pop
pop
cltd
mov
sub
jl
into
push
sti
xor
or
sbb
out
mov
xchg
and
lret
xor
xchg
add
lret
outsw
or
mov
cmp
dec
jp
mov
divl
xchg
imul
insb
mov
imul
mov
lcall
orb
jnp
xchg
ffree
lcall
jns
jp
ret
mov
push
test
daa
jge
leave
jne
or
mov
dec
rol
pushl
xor
std
mov
sub
andl
mov
fidivl
xor
push
or
imull
lea
sarl
pop
iret
xor
lods
fsts
inc
shr
mov
jno
add
mov
stos
inc
jecxz
andb
daa
js
inc
and
mov
add
and
sub
push
arpl
ret
jbe
xor
mov
xor
pop
fildll
xchg
pop
pop
xchg
xchg
aad
ljmp
adc
popf
leave
add
rolb
cwtl
lcall
loopne
rcl
xchg
dec
clc
and
call
push
pop
lds
mov
jp
in
neg
fldenv
jl
loop
mov
into
in
cmp
mov
int3
mov
jo
mov
cld
imul
sbb
sahf
addr16
arpl
inc
mov
xlat
mov
xchg
jo
popf
fistpll
sarb
lcall
cmp
jge
add
in
push
and
orl
xchg
xchg
imul
decl
into
sbb
cmpsl
adc
inc
push
xor
ror
fwait
popa
loop
jge
xchg
xor
push
loop
mov
mov
test
and
mov
pop
addr16
rcl
dec
xchg
mov
jb
sub
push
lods
fcomp
pop
lret
cli
jnp
nop
cmp
arpl
sub
mov
daa
dec
adc
fisubl
jbe
fisttps
testl
pushw
gs
std
inc
mov
mov
nop
lds
dec
push
je
sub
out
es
sbb
sub
pop
les
das
jge
add
sub
mov
test
out
fwait
mov
dec
in
fbstp
xchg
fidivrs
cld
popa
fldt
cmp
mov
inc
pusha
aaa
mov
stc
leave
xchg
outsb
clc
mov
loope
imul
dec
pop
shll
aas
pusha
xchg
sar
push
cld
mov
sub
pop
sub
sbb
repz
adc
sub
in
mov
jno
orl
xor
and
lds
adc
inc
cmp
in
rcrl
jle
insl
mov
pop
lds
movsb
dec
pop
xchg
sub
push
negb
mov
xlat
loopne
add
mov
std
push
pop
sbb
jg
inc
es
pop
das
pop
loopne
mov
sbb
movzbl
or
pop
push
mov
fistpll
cmp
and
les
add
add
jne
xor
repnz
pop
inc
ret
fidivrl
sbb
push
mov
fwait
addr16
test
cmp
push
mov
mov
pusha
and
pusha
cmp
jecxz
mov
sbb
cmp
out
and
bound
les
sbb
cmpsb
or
lret
inc
sub
mov
cmp
push
mov
cmp
popf
test
push
mov
rol
mov
jae
mov
call
xchg
outsb
xlat
xor
sarb
jnp
adc
mov
push
ds
outsb
fimuls
movsl
jb
cld
adc
inc
mov
jbe
jno
mov
sub
insb
mov
in
jae
push
xchg
pop
aad
xchg
inc
mov
cwtl
xor
push
jae
add
addl
cmpsl
ss
in
ds
call
inc
into
shlb
fcmovbe
pusha
inc
xlat
lods
xchg
enter
cltd
pop
inc
pop
arpl
movb
mov
jge
shl
xor
push
cmpsl
fcomps
pushf
cmc
push
dec
shll
mov
and
sbb
mov
mov
xor
dec
cmp
or
adc
scas
xlat
sub
add
jg
fs
and
mov
fisubs
xchg
adc
mov
iret
addr16
std
fstl
into
lea
jmp
loop
pop
gs
scas
mov
cli
aaa
push
mov
test
insb
cs
inc
pop
xor
add
sbb
pop
loopne
cmp
lret
arpl
lahf
aaa
shrb
hlt
inc
jl
push
addr16
mov
shl
pop
mov
repz
push
and
rcrb
push
mov
dec
std
mov
sub
sti
bound
add
lret
in
sbb
stc
rclb
lods
or
mov
mov
aad
lea
cmc
ja
lods
nop
sub
xchg
add
cmc
sub
fsubrs
xor
xorps
inc
cwtl
sub
int3
dec
mov
loope
popf
lds
sbb
lods
lock
mov
pop
push
js
outsl
popf
xlat
xorb
sub
jg
adc
lret
cmp
adc
ss
cmp
test
mov
shrl
sbb
adc
mov
jp
jno
inc
popf
scas
bound
in
aad
push
mov
mov
je
lret
in
clc
or
test
data16
fidivrs
and
mov
scas
inc
int
mov
fdivs
das
jno
stos
cmp
push
pop
dec
mov
pop
in
andb
xchg
lahf
stos
insb
fistps
lods
adc
or
sub
xor
mov
imul
sti
add
sbb
pushf
or
inc
sarl
lcall
jecxz
add
das
gs
cmp
sti
loop
cmp
popa
lock
lods
pop
cmp
push
mov
imul
lahf
mov
fstpt
mov
push
dec
iret
and
fdivrp
test
mov
test
xlat
loopne
add
mov
bound
aas
stos
mov
popa
mov
jbe
push
fists
inc
mov
sahf
xor
push
inc
fs
and
xchg
or
and
cmc
jne
push
xchg
ja
jl
push
jl
mov
push
and
push
xchg
lods
mov
inc
mov
inc
lods
sub
enter
xchg
shll
call
jbe
stos
dec
sub
fisttpll
lds
std
sub
jg
out
adc
jmp
pop
lea
mov
lcall
rcll
mov
push
in
daa
jl
jbe
std
imul
fs
jno
adc
adc
jbe
fstl
pop
fldt
pusha
push
fsubl
adc
jno
cmp
arpl
rclb
mov
push
insl
test
in
stos
add
cmp
inc
sbb
sub
xchg
sbb
je
mov
jb
nop
add
and
pushf
lods
ds
out
mov
das
add
dec
pop
iret
mov
inc
ret
stos
inc
mov
pop
cld
cmp
xchg
fcomps
jge
scas
out
ficoml
fldenv
or
mov
bound
sub
sbb
jmp
js
xor
jle
xchg
mov
sub
and
rcrl
cld
in
push
cmp
mov
and
lret
jno
leave
mov
or
js
adc
sbb
mov
lretw
cmpsb
pop
outsb
pop
bound
sbb
dec
pop
xor
lahf
mov
fdivrs
jns
push
dec
sbb
std
repnz
arpl
test
addl
pop
rcrb
pushf
adc
mov
lahf
imul
outsl
cmp
arpl
mov
or
mov
adc
insb
push
adc
add
pop
mov
xorb
or
add
pushf
pushaw
inc
fs
xchg
hlt
xchg
std
pop
sbb
mov
or
and
mov
push
push
mov
add
pop
mov
lret
cli
push
lds
cmp
xchg
cmp
push
jecxz
inc
xchg
jnp
repz
xor
adc
sahf
jg
bound
jb
pop
and
addb
into
sub
push
pop
mov
adc
daa
js
sub
mov
filds
inc
mov
and
mov
in
test
xchg
sbb
jecxz
ret
sarb
mov
subl
push
pusha
aad
xlat
mov
call
cli
fidivrs
xchg
enter
push
gs
pushf
jno
jb
xchg
jmp
jnp
sub
js
mov
adc
stc
leave
jl
adc
out
in
lahf
hlt
jne
mov
ret
shll
dec
xlat
cmpsb
cmp
sbb
in
jo,pt
and
inc
cmp
je
jge
loope
in
add
mov
sbb
outsl
sub
inc
inc
cwtl
jo
lret
sub
out
pop
sbb
dec
xchg
inc
icebp
in
add
sub
push
popa
lcall
add
ret
sarl
ss
xchg
mov
jp
lahf
imul
and
fwait
mov
arpl
push
and
cmp
dec
jae
xor
mov
leave
pop
lds
mov
push
in
leave
out
xor
add
xchg
mov
jmp
dec
imul
dec
movsb
in
mov
push
mov
jb
adc
divb
mov
sbb
add
push
fs
sbb
dec
mov
add
jmp
daa
hlt
jp
fs
fisubs
mov
cmpsb
out
or
mov
lea
jb
push
popf
mov
jo
insl
xlat
push
out
xchg
lods
pop
mov
or
xlat
sub
sbb
loop
hlt
js
xchg
jle
or
jle
dec
mov
pop
jns
nop
aad
mov
cmp
clc
adc
inc
xor
ljmp
dec
fldcw
xchg
xor
push
lret
pop
aad
subb
sub
subb
dec
movsl
inc
mov
mov
push
outsb
dec
shlb
icebp
mov
and
insl
sbb
pop
mov
lock
popf
jno
and
sqrtps
inc
and
sub
inc
lcall
loope
jg
inc
cld
test
ljmp
xor
pop
enter
fs
lcall
test
add
dec
cwtl
push
xchg
icebp
add
loope
test
lea
js
jle
push
add
or
jne
jae
jge
sbb
cld
fdivl
stos
dec
push
pop
dec
jp
mov
adc
cmp
push
ret
out
arpl
and
inc
pop
push
cmc
jne
xchg
xor
pop
mov
dec
or
jno
das
add
scas
rorb
mov
pushf
dec
imul
mov
shll
mov
mov
dec
push
sbb
pop
aaa
add
sub
test
ljmp
push
sbb
add
nop
bound
or
mov
inc
add
jbe
cli
inc
sub
cmp
xor
fcmovne
les
jecxz
loopne
cmp
cs
aad
mov
or
testb
cmp
notl
out
adc
ljmp
das
add
inc
dec
test
lahf
lods
popa
test
addr16
outsl
mov
rcrb
dec
sbb
lods
adc
sarl
repz
lds
scas
loopne
inc
or
ss
mov
ja
mov
inc
gs
imul
les
ret
ret
and
shll
in
insl
inc
imul
jmp
repz
pop
dec
cmp
lahf
xchg
dec
cltd
outsl
mov
or
dec
push
aaa
push
inc
mov
jecxz
cmc
mov
pop
inc
inc
push
lea
icebp
ficompl
iret
mov
xchg
stos
data16
bound
or
sti
shrb
jne
sub
jbe
out
outsb
pop
pop
lods
pop
and
and
push
cmpl
ficoms
adc
pop
in
ficomps
sub
mov
dec
jne
lods
xchg
test
cmp
loopne
mov
sub
in
jmp
scas
repz
in
push
inc
jno
jbe
mov
fld
pop
pop
and
aas
xchg
pop
cmp
mov
jo
int
fimuls
add
scas
jb
mov
icebp
decb
cli
inc
call
icebp
push
popa
and
rorb
xchg
lret
xor
cltd
adc
popl
pop
in
cmp
mov
mov
fsubl
mov
std
sbb
jp
or
xrelease
nop
and
add
sub
ret
bound
jmp
lds
mov
xlat
and
xchg
das
jns
push
test
outsb
mov
clc
add
jmp
cld
adc
fwait
adc
fistl
daa
dec
cltd
push
jbe
lods
sahf
pop
mov
call
cmp
dec
loopne
in
mov
loop
daa
push
sbb
leave
pop
scas
mov
sub
jbe
ret
shrl
dec
mov
jmp
jns
gs
or
xor
insl
jecxz
sbb
xchg
mull
clc
les
cmc
jmp
fists
xor
prefetchnta
rcr
sub
cmp
xor
xchg
adc
scas
mov
xor
test
dec
push
fsubrl
insl
push
adc
pusha
mov
scas
pushf
out
cmp
mov
jns
out
sub
out
xchg
aas
sbb
out
adc
push
gs
ja
jecxz
jnp
sbb
cld
fisubrl
ljmp
jecxz
mov
xor
push
sarl
and
push
arpl
dec
and
insl
jnp
sub
xor
mov
sbb
dec
aaa
push
push
lds
add
mov
in
pop
sti
cltd
mov
lret
jl
std
adc
xchg
and
inc
nop
dec
pusha
sahf
aam
nop
fcomps
pop
sbb
inc
sbb
cmp
dec
mov
pusha
mov
in
clc
jge
sbb
imul
jle
mov
scas
int
jb
mov
fcmove
call
pop
xchg
popf
xor
push
push
push
sbb
mov
iret
xor
xor
jbe
push
std
mov
cmc
lock
mov
jne
adcl
jae
out
pop
sbb
pop
pop
jge
and
in
sahf
push
adc
ds
sbb
lea
scas
mov
dec
sub
dec
js
mov
add
or
fucom
das
neg
ljmp
and
roll
jae
imul
push
mov
and
cld
ja
movsb
jge
pop
mov
dec
mov
jns
pop
cmp
test
ljmp
cmp
hlt
jo
sub
inc
push
ds
movsl
gs
pop
add
mov
mov
sbb
dec
test
mov
lret
mov
push
lcall
out
xchg
mov
jns
or
push
stc
cmp
push
sar
loopne
and
or
js
arpl
into
stos
sub
cmpsl
dec
inc
inc
lods
jg
xchg
or
shlb
repnz
shl
outsl
out
or
xchg
fnstcw
mov
xchg
add
inc
adc
sbb
cltd
jae
push
fst
loopne
lahf
arpl
adcl
adc
jnp
adc
stos
js
shll
adc
ret
stc
add
loope
adc
fs
mov
xchg
push
add
adc
push
loop
jl
sti
lods
jl
aaa
das
imul
ret
xor
cwtl
loop
imul
pushf
sbb
pop
xchg
sbb
call
mov
xor
fs
test
lods
loope
mov
inc
in
cmpl
sahf
leave
push
mov
or
pusha
cmp
or
scas
filds
fadds
loope
cmpsb
scas
push
xchg
fwait
push
repz
push
inc
xor
cmpsb
add
fs
popf
cmp
insl
pushl
xchg
add
mov
cmpsl
sbb
js
out
fs
mov
ret
test
loop
xor
and
stos
jae
cmpsb
outsl
stos
movsl
cmc
dec
mov
or
mov
cmc
cmp
sub
push
std
jb
xlat
pop
pop
dec
sub
outsl
aaa
test
adc
sbb
cli
sub
sbb
mov
sarl
jbe
mov
mov
and
out
aaa
dec
insl
aas
scas
inc
cltd
mov
insl
sub
jae
mov
add
js
insl
inc
push
outsl
in
mov
or
sub
ljmp
stos
popa
adc
into
mov
das
cmc
stc
lods
pop
mov
adc
add
addr16
movsl
jmp
fst
mov
ret
daa
and
xchg
inc
mov
sar
aaa
insb
mov
and
push
cmp
stc
aad
inc
and
mov
cli
push
adc
or
xchg
pushf
dec
and
dec
xor
mov
xchg
mov
push
jae
jae
xchg
outsl
push
and
arpl
clc
jmp
rorb
enter
in
loop
lret
mov
jo
aas
mov
mov
push
xchg
js
loop
mov
dec
bound
push
cs
out
cwtl
jecxz
js
hlt
lds
int3
inc
or
test
stos
cmp
jnp,pn
dec
fimuls
push
adc
fwait
test
inc
mov
sub
sar
mov
xchg
cld
enter
out
push
jb
loopne
es
push
stos
cmc
push
sbb
xchg
jno
ret
push
add
adc
pusha
fisubrs
xchg
repnz
jle
xchg
jle
int3
mov
pop
adc
dec
bsf
adc
dec
push
mov
lods
and
mov
sub
fisttpll
cli
lahf
mov
lcall
jp
jl
pop
pop
in
mov
out
clc
loopne
mov
in
mov
mov
lock
mov
jno
insl
jl
mov
jnp
stos
mov
out
gs
fisubrl
mov
scas
cmp
inc
dec
icebp
mov
sahf
pop
scas
and
push
pop
outsl
push
jl
out
loopne
inc
inc
pop
rclb
mov
push
scas
and
lods
lea
inc
out
rcll
jle
jno
xchg
lret
sbb
pushl
pcmpeqw
inc
xchg
cld
mov
aam
in
jge
xchg
cli
nop
out
pop
lahf
mov
movsl
cmp
lock
mov
xchg
and
sahf
push
jns
and
push
jge
dec
lret
add
cmp
fdivrp
pop
xchg
jecxz
pop
lds
pop
mov
cmc
insb
ja
adc
stos
push
test
imul
cmp
jle
das
mov
or
int
xchg
jne
out
mov
test
mov
lods
cmp
push
xchg
sbb
je
iret
pop
and
mov
test
pop
scas
stc
inc
jg
int
aam
loopne
daa
pop
xchg
lods
orb
sahf
clc
lret
rcll
mov
push
pushf
pop
inc
imul
out
xor
int3
mov
dec
mov
add
jg
loop
push
inc
test
cli
jecxz
adc
xor
loop
or
icebp
xchg
push
cmp
cmp
cld
sub
cmp
sub
cwtl
mov
mov
sub
stos
sbb
sbb
mov
xchg
aaa
shll
iret
sarl
out
dec
divl
adc
lds
gs
clc
test
mov
mov
mov
xchg
icebp
inc
add
fsubl
mov
xchg
jecxz
mov
mov
fucomip
insl
leave
cmp
imul
aas
xchg
xor
into
mov
imul
sbb
lods
std
pusha
scas
pop
adc
mov
mov
jne
pop
or
cmp
pop
xor
insb
jl
xlat
leave
je
ljmp
cmpsl
cmp
and
sub
adc
pop
adc
or
mov
testb
dec
std
js
pusha
pushf
and
rcll
lea
loopne
ljmp
dec
std
negl
cmp
dec
cs
and
sbb
jmp
jo
xor
fiaddl
cwtl
adc
nop
pop
xor
fdivl
enter
pop
xchg
or
gs
insl
outsb
cmp
mov
xchg
pop
mov
xchg
js
and
imul
ds
fcomps
cmpsb
and
in
or
xchg
lds
pop
mov
or
push
add
out
jl
sub
adc
jne
fwait
mov
outsl
into
adc
nop
push
lret
in
popa
sbb
mov
lea
jns
je
popf
xchg
and
bound
pop
or
dec
insb
jecxz
sub
aaa
scas
cltd
sub
jnp
add
stos
xor
xchg
dec
jae
mov
mov
push
mov
mov
test
or
mov
and
pop
push
mov
mov
dec
ror
sub
jmp
mov
fs
push
jo
addr16
cmp
add
sbb
lret
inc
sub
stc
mov
lock
and
inc
ret
fstpl
lods
les
ret
mov
bound
mov
jle
cld
arpl
imul
mov
sbbb
cmpsl
cmp
ss
fistpl
daa
ret
inc
jge
pop
lods
mov
shlb
xlat
popf
sub
inc
test
add
shrl
push
cmpsb
pushf
cwtl
out
out
mov
call
aaa
mov
mov
cmp
ror
push
adc
jmp
push
lahf
jmp
lret
imul
setno
loopne
pop
or
fs
mov
or
and
xchg
lock
jnp
xlat
mov
adc
add
pusha
xchg
mov
xchg
mov
push
jg
inc
push
jb
dec
mov
insb
shll
int3
add
xlat
mov
repz
frstor
push
inc
stc
loopne
cmp
jno
inc
les
in
test
mov
push
jne
xor
xor
or
ret
shrb
inc
xor
js
xchg
mov
std
lret
adc
leave
lea
push
xor
mov
dec
mov
push
int
int
popa
scas
mov
mov
jb
push
ja
pop
mov
test
das
mov
std
test
andb
pop
lea
push
adc
mov
push
call
lea
call
push
dec
imul
mov
js
push
mov
call
ret
mov
xchg
cli
filds
push
int3
xchg
cmc
mov
or
xor
mov
mov
mov
cmp
shlb
adc
pushf
mov
loop
cmp
sbb
shufps
mov
mov
add
sub
cmpsb
push
jecxz
jae
jno
or
in
dec
insl
sbb
enter
or
lods
fidivl
cwtl
in
xchg
mov
test
popf
mov
out
or
mov
jl
pop
add
aad
mov
push
pop
and
lods
data16
jecxz
pushf
pop
sbb
cmp
shl
iret
cmp
push
rolb
adc
ss
out
push
jae
sarl
pop
loop
jne
out
fs
cld
mov
lea
das
mov
cmp
notl
push
push
inc
ret
incb
jne
sub
lcall
inc
push
outsb
fidivs
or
ret
add
or
loop
daa
movb
enter
add
adcb
or
or
stc
fisubl
inc
push
or
fstl
arpl
les
cmp
push
or
imul
mov
adc
icebp
adc
sub
es
test
dec
inc
sahf
pop
adc
sub
jl
shrb
daa
inc
pop
sub
call
jl
pop
push
pop
pushf
push
out
jo
cmp
and
outsl
shl
lea
clc
mov
ljmp
imul
lods
add
inc
adc
fs
repnz
inc
add
lcall
dec
jae
mov
and
cmc
mov
cmp
clc
sarb
mov
mov
add
lds
out
ljmp
pop
scas
cmp
adc
mov
mov
add
call
iret
adc
imul
rorb
sub
pop
pop
ror
sub
push
sbb
mov
mov
cwtl
sbb
jecxz
adc
mulb
stc
jno
mov
mov
js
lret
dec
and
mov
loope
dec
mov
sub
in
ljmp
mov
and
hlt
add
roll
pop
lock
inc
mov
add
arpl
pop
dec
dec
bound
sbb
push
adc
xchg
mov
jl
xchg
scas
sbb
adc
push
cmpsb
adc
push
in
dec
out
jmp
call
bound
push
les
dec
push
xor
mov
daa
sub
pop
xchg
xor
adc
mov
das
mov
mov
punpcklwd
xor
stos
and
imul
mov
mov
call
adc
stos
ret
ja
test
xor
adc
das
mov
aad
insl
lea
push
icebp
data16
and
jg
sub
cltd
stos
push
add
enter
aaa
cwtl
arpl
sbb
pop
mov
xchg
je
dec
cmpsb
push
hlt
cmove
jne
mov
cmpsl
int3
or
cmp
in
push
xor
cmp
pop
sub
loopne
push
lods
fidivrl
in
sahf
inc
rolb
pop
push
xor
xchg
and
jge
push
lcall
push
out
mov
cmp
jb
dec
push
popf
xor
mov
pop
mov
push
out
jno
mov
jmp
mov
xor
cld
and
push
insl
arpl
jns
or
pop
sub
inc
and
arpl
mov
js
sbb
js
pop
cmp
mov
xchg
je
das
lock
push
daa
xchg
jbe
js
dec
ljmp
jnp
lret
jmp
test
sub
enter
sbb
mov
insl
lods
ja
mov
adc
aas
xor
arpl
mov
rol
sti
or
jo
push
sbb
jo
jecxz
cltd
xor
add
ja
and
inc
imul
jl
dec
jl
cmp
xor
jne
std
pop
subb
cmp
mov
mov
mov
jle
cmpsb
shr
xchg
stos
in
mov
movl
gs
cs
or
or
mov
sahf
sbb
fcmovbe
xor
ss
popa
cld
loope
push
mov
out
int3
xorl
cmp
xor
add
push
push
loop
test
push
xchg
jge
cmpxchg8b
into
data16
icebp
adc
adc
mov
ret
mov
pop
insl
stc
or
dec
inc
or
out
gs
sbb
mov
fst
rcll
out
in
loop
xchg
and
add
cmp
adc
mov
stos
pop
sub
sub
dec
add
mov
sbb
dec
sbb
icebp
pop
inc
call
xchg
xchg
lahf
and
stc
lret
lock
mov
jp
imul
dec
and
mov
inc
std
inc
cmpsb
xchg
cltd
mov
pop
lret
into
inc
ljmp
aam
lcall
loopne
inc
fimull
mulb
dec
jns
inc
jbe
aad
xor
ja
jbe
and
test
lods
xchg
cmovns
icebp
mov
cwtl
xor
test
sub
enter
mov
mov
xchg
test
push
mov
mov
xchg
or
shr
loopne
mov
cmpsl
add
clc
sub
cmp
lea
mov
imul
adc
xor
loop
cli
jecxz
cli
jecxz
mov
orb
pop
xchg
sbb
inc
cmc
jl
addr16
call
scas
xor
fisubs
jne
aad
fmull
pop
xor
mov
lret
adc
loop
jne
fcoml
in
fadd
sbb
or
test
mov
jle
leave
dec
cmp
addr16
das
push
lods
mov
jecxz
jno
pop
std
or
mov
out
cmpsl
stos
call
stos
enter
in
int
cmp
jl
sti
outsl
xchg
xor
xor
imul
std
out
mov
jo
in
in
imul
or
mov
add
and
rcll
add
sub
or
dec
icebp
test
into
pushf
xor
and
mov
into
roll
lret
sbb
xchg
adc
mov
out
dec
xor
pop
pop
add
stos
stos
pop
movsl
push
test
cli
mov
icebp
adc
mov
pop
mov
int3
mov
out
cmc
lret
in
clc
pop
test
pop
push
lcall
fistpll
dec
andl
ret
or
roll
enter
mov
inc
jne
scas
jns
in
movsb
dec
lock
sub
mov
push
jp
dec
insb
sbb
cs
pop
popf
xor
loopne
mov
mov
pop
sti
jo
mov
sub
inc
jae
inc
push
push
pushf
mov
add
insl
aas
jp,pt
adc
ljmp
dec
mov
inc
aam
pushf
addb
fmull
mov
mov
gs
mov
out
rcll
dec
lock
into
fsubl
pop
leave
sbb
xor
push
negb
div
cmc
mov
mov
test
xchg
out
lret
pop
xchg
or
push
jae
insb
and
xchg
cmpb
ss
push
testb
test
lods
data16
and
aaa
mov
fwait
jb
sahf
gs
jae
push
jge
sub
leave
into
cmp
lahf
ljmp
faddl
jno
sub
lahf
push
push
fisubl
mov
and
pop
loope
inc
cmp
das
cli
ja
roll
pushf
fcomip
repz
inc
leave
inc
movsl
mov
popf
pop
sti
xchg
daa
icebp
bound
mov
and
loop
dec
xlat
xor
insb
and
imul
fistps
lods
cmpsb
and
add
pop
nop
jb
pop
xchg
mov
jbe
stc
sub
add
mov
jecxz
jns
pop
and
in
inc
cmp
pop
push
gs
inc
ret
jle
cli
adc
rolb
es
mov
dec
sti
lahf
fucomp
rcrb
cs
jae
icebp
sti
mov
gs
cld
test
inc
ret
jmp
xchg
pop
mov
and
adc
xchg
sbb
mov
aas
daa
or
jo
fbld
xor
dec
pop
cmp
inc
inc
or
inc
sti
add
out
jnp
sbb
jge
test
inc
stc
out
add
jns
sbb
push
pop
stos
mov
xchg
notl
mov
popf
lock
mov
decl
dec
jge
mov
adc
and
inc
xor
cmp
lods
in
lods
dec
cmp
dec
mov
test
and
pop
sbb
mov
cltd
js
cmc
sub
fdivl
pop
jno
add
sbb
call
mov
pop
jns
pop
pushl
dec
mov
push
lret
jg
mov
or
jle
cmp
aad
inc
and
rclb
insl
mov
push
and
popa
stc
add
stos
jbe
jmp
push
jmp
jne
jo
test
int
mov
repnz
xlat
loopne
rorb
shrl
aas
sbb
into
inc
xchg
pop
sti
pop
inc
rcll
mov
lea
in
sub
ror
lds
inc
jp
xlat
popf
test
inc
aam
incb
and
xchg
inc
inc
xchg
fcmovnu
repnz
adc
cli
push
add
adc
and
pop
dec
adc
xlat
mov
jg
mov
pop
notb
xor
addb
add
int
or
mov
cmc
sub
in
repnz
imul
xchg
and
sahf
jge
fdivrp
ret
jmp
out
mov
ret
mov
divl
pop
mov
leave
add
les
inc
cmpsb
mov
sub
mov
lcall
gs
inc
lcall
push
scas
std
lds
dec
pmulhw
es
ret
pop
jge
out
xor
jns
sbb
lock
sbb
shr
mov
pop
xor
adc
push
je
sbb
loop
addr16
cmp
test
or
inc
insl
xor
push
lds
adc
mov
addr16
sti
sbb
pop
xchg
mov
cmp
mov
aam
mov
inc
mov
mov
fisubl
push
sub
sbb
test
je
into
addr16
in
sub
leave
sbb
enter
icebp
push
mov
pop
jno
inc
push
cltd
inc
push
rorl
sub
pop
sub
lea
loope
stos
xchg
leave
js
xchg
mov
add
jno
push
push
adc
dec
iret
movsl
or
push
addb
xchg
and
mov
add
std
scas
pop
clc
dec
inc
or
add
fs
xor
mov
mov
push
jne
cmp
mov
fcompl
push
fs
lea
adc
add
daa
out
pop
xchg
add
outsb
push
nop
movsb
mov
sbb
xchg
add
mov
xchg
dec
div
sub
inc
addr16
cmc
outsl
fcmovu
stos
sbbl
ud2
into
movsb
push
clc
pusha
push
adc
sub
cmc
lahf
cmp
loopne
addb
mov
imul
icebp
xor
je
insl
mov
gs
and
mov
dec
popa
xchg
jle,pt
fcmovnbe
lcall
dec
lds
in
xor
mov
aam
into
mov
enter
sub
sub
arpl
or
pop
add
cli
mov
test
insl
adc
gs
pop
scas
lea
mov
mov
mov
sarl
sbb
outsl
cmc
add
repz
fs
pop
mov
test
ret
or
dec
jno
mov
xchg
shrl
sbb
dec
gs
push
fdivr
cmp
lahf
mov
sub
jne
pusha
pop
push
sbb
add
dec
or
pop
arpl
orl
cmp
scas
rcrl
cmp
aaa
int3
jg
add
std
jb
push
mov
out
inc
les
xor
pop
jge
add
xor
mov
mov
cli
iret
xlat
push
xchg
inc
xor
pop
xchg
es
sub
add
stc
aas
and
pop
adc
sbb
push
test
movl
mov
xchg
jne
adc
pop
pop
std
pop
pop
fsubr
sbb
mov
cmp
loop
sub
mov
sbb
imul
push
imul
pop
mov
mov
cli
mov
dec
sub
les
xchg
jb
ret
jle
outsl
pushf
fnstenv
adcl
xor
pop
call
movl
mov
cmp
pop
mov
sub
jmp
mulb
mov
out
divl
jge
mov
js
adc
sbb
ficompl
out
sbbb
std
mov
enter
sbb
adc
mov
scas
popa
into
mov
sbb
pop
repnz
shrb
arpl
fwait
lds
cmp
loope
lret
rcl
out
adc
dec
xor
or
subl
ljmp
test
inc
out
imulb
and
cmp
cmc
xlat
out
cmp
call
lods
pusha
in
bound
int3
push
pusha
pop
xor
arpl
adc
mov
jmp
or
xchg
sub
jl
in
push
adc
dec
call
cmpsl
jbe
mov
insl
mov
pushf
pop
sar
and
leave
xor
movsl
lods
sbb
inc
adc
push
dec
mov
int3
outsl
mov
movsl
fisubrl
ss
popa
inc
sbb
inc
pop
pop
jb
mov
cltd
and
icebp
sub
loop
ret
daa
aaa
xchg
test
mov
cmc
sbb
push
adc
jecxz
or
add
ljmpw
call
dec
xor
les
mov
push
push
insb
sbb
bound
jle
or
dec
outsb
mov
outsl
xor
sbb
pop
outsb
icebp
popf
pop
pop
push
xor
movsb
pop
push
aas
mul
or
and
lahf
sbbl
lods
lds
popf
push
and
mov
jmp
out
mov
in
pop
subb
ss
sbb
stos
xor
xor
gs
inc
pop
repz
jno
je
cmp
sub
jge
add
clc
xor
stos
mov
les
sbb
cltd
jmp
push
cmp
sahf
lret
mov
ja
cmp
aaa
loope
push
mov
cmpsl
inc
lcall
pop
fcmovbe
sbb
out
push
lahf
mov
daa
xor
cmp
dec
xchg
add
movsb
dec
cmp
enter
jg
cmpsb
cwtl
pusha
sahf
leave
xchg
imul
aas
outsl
mov
cmc
stos
mov
mov
je
inc
scas
ds
mov
jne
arpl
jp
lcall
scas
xchg
push
and
fidivrl
xchg
aas
mov
fadds
sbb
clc
and
in
cltd
mov
jae
push
or
add
imul
movsl
mov
pop
outsb
xchg
movsb
pop
pop
arpl
loopne
xor
es
cmp
into
test
push
and
dec
push
xor
dec
stos
iret
adc
dec
outsl
push
scas
out
mov
dec
movl
aaa
leave
mov
sahf
adc
in
sbb
mov
nop
pop
movsl
dec
ja
or
adc
cs
cmpsl
lods
adc
aam
pop
mov
add
inc
pop
jno
sub
xorl
outsb
test
das
adc
sti
int3
sub
mov
sub
jnp
stos
mov
fnstenv
out
jmp
fstpl
das
fisubrl
cmp
repnz
pop
jp
xlat
mov
dec
ret
adc
sbb
dec
cltd
in
arpl
and
lcall
stos
bound
pcmpgtd
push
add
iret
inc
inc
out
xchg
and
lcall
dec
sbb
pop
xchg
mov
mov
add
pop
ds
sbb
lahf
fistps
push
add
xchg
adc
dec
pop
lods
mov
cmpsl
clc
sbb
push
push
repnz
test
repz
or
jmp
iret
leave
lods
pop
inc
divl
jle
push
subb
ss
mov
and
mov
popa
xchg
xchg
push
push
pop
and
dec
out
xor
stos
in
push
add
sbb
icebp
push
lahf
pushf
jo
mov
and
jno
movsb
es
test
pop
dec
lahf
out
pop
shr
xor
cmpsb
xlat
inc
repz
inc
popf
xchg
add
mov
pop
xor
mov
dec
loopne
cmpsl
std
mov
lret
mov
out
repnz
mov
pop
js
out
ds
sbb
pop
dec
pop
ret
xchg
add
cmp
cs
data16
cmp
fbstp
add
adc
addr16
ljmp
outsb
or
or
test
rcr
adc
sbb
push
dec
push
sbb
dec
ret
mov
push
add
xorb
mov
mov
jmp
mov
negb
jo
clc
push
icebp
outsl
xchg
mov
sti
subl
and
sbb
popa
mov
roll
push
es
test
xchg
insl
cmc
mov
aad
mov
clc
ja
ljmp
push
jecxz
xchg
push
les
fldcw
mov
insb
pushf
add
iret
hlt
mov
loope
jl
add
ror
insb
inc
stos
daa
and
push
mov
pop
in
sbb
push
sbb
insl
fidivrs
mov
pop
adc
fidivrs
adc
ret
out
lods
loope
jmp
mov
lods
pmulhuw
inc
sub
loopne
aas
or
sub
loop
imul
rcll
sub
xlat
sub
or
dec
adc
xor
outsl
inc
dec
sahf
stc
hlt
test
add
cld
sub
dec
jo,pt
pop
jnp
jge
ds
dec
int
push
pop
inc
dec
mov
mov
sbb
aam
pop
add
inc
and
aas
aam
and
icebp
scas
enter
dec
movd
or
and
and
lock
and
cmpsb
test
test
and
sbb
cmp
add
add
sub
cmp
push
push
gs
pop
aad
add
into
in
xchg
mov
inc
xor
subb
mov
push
insb
movsl
shl
lret
jae
push
ljmp
mov
jmp
test
or
inc
lock
inc
adc
dec
push
fidivrs
out
xchg
daa
push
ror
adc
pop
popa
mov
mov
cmc
pop
sub
scas
imul
inc
add
in
cmp
aam
stos
mov
adc
inc
loopne
and
pop
xchg
inc
scas
sahf
mov
mov
cli
ja
push
out
mov
nop
popf
mov
push
cmp
lods
ja
lret
aad
cmc
sub
pop
stos
push
popa
push
or
xchg
mov
jge
mov
dec
je
mov
inc
or
inc
mov
inc
or
jb
fnstenv
in
inc
mov
js
push
xor
and
arpl
pop
adc
push
out
xor
sub
inc
scas
adc
xchg
jns
adc
roll
data16
dec
sub
sbb
cmp
adc
repnz
sub
xor
imul
test
mov
xchg
lcall
inc
jecxz
cld
inc
cltd
mov
int
mov
pusha
cmp
fbld
ret
outsl
or
in
xchg
rcrb
aaa
and
orl
ret
xor
cwtl
std
iret
xlat
sub
shll
push
mov
push
pop
inc
test
push
mov
mov
test
or
popl
adc
bound
cltd
shll
xchg
into
inc
lahf
dec
jmp
das
loop
loopne
add
and
mov
add
or
mov
sahf
jl
cltd
dec
xchg
rcll
in
out
std
leave
sub
mov
lods
hlt
ss
repnz
sub
cmp
movsb
mov
ljmp
mov
fimuls
shrb
jnp
xor
mov
scas
mov
imull
addb
xor
cli
xor
sbb
jae
jp
in
inc
insl
sub
sbb
mov
mov
out
add
outsl
sbb
dec
shr
sbb
push
sbb
int3
fcomps
inc
into
dec
test
int
popf
aas
movsl
daa
xor
jb
dec
in
mov
scas
arpl
pop
and
push
hlt
outsb
sub
sbb
sbb
sti
sub
into
xor
push
scas
or
cmc
add
in
mov
mov
int3
cli
test
jle
movsb
lcall
test
xchg
jecxz
adc
idiv
mov
and
mov
dec
test
lods
dec
imul
loop
mov
inc
jmp
adc
fimuls
or
inc
add
int
jne
xor
adc
pop
ret
push
and
pop
xchg
shr
lods
je
jns
sbb
shlb
and
repnz
sub
test
mov
cli
pop
addps
jno
pop
xchg
ret
ret
cmp
jp
add
in
int3
fildll
xchg
lret
out
mov
mov
movsl
push
mov
ss
or
test
je
cld
pusha
push
fwait
std
sbb
or
in
mov
xchg
mov
mov
mov
outsb
arpl
jae
mov
bound
push
test
sub
pop
push
push
xchg
sub
dec
lret
jne
fwait
push
scas
in
cmp
inc
mov
ficompl
xor
cld
mov
je
ret
cmpsb
xor
out
roll
out
mov
sbb
push
faddl
xchg
pop
rolb
lds
lds
mov
and
sub
push
mov
rcrl
push
lods
inc
enter
aam
push
inc
mov
push
cmp
outsb
push
frstor
sbb
mov
into
pusha
pop
and
int3
mull
scas
fidivrl
mov
mov
and
sub
xor
mov
and
dec
scas
and
in
in
test
add
adc
call
sub
mov
pop
gs
cs
cltd
test
jo
ret
rcl
data16
jecxz
jecxz
add
rcrl
jmp
xchg
jo
enter
lods
xchg
imul
gs
jecxz
movsl
repz
lods
cmp
inc
adcb
xor
jne
mov
push
inc
mov
and
arpl
out
outsl
sub
les
xchg
sbb
inc
jne
pop
mov
xor
clc
dec
int3
inc
push
add
ret
ss
mov
push
sub
cmpsl
cmpsb
int
xchg
xor
call
out
sub
ss
sub
push
xor
das
mov
or
imul
pop
adc
dec
mov
jp
push
mov
xchg
fiadds
jecxz
es
jnp
push
repz
int3
cmp
das
and
test
out
subl
dec
fadd
push
jl
mov
enter
movsl
mov
mov
pop
inc
xor
and
jb
cmc
imul
aas
aad
dec
jecxz
iret
scas
inc
shll
ret
movsb
push
lret
xor
sub
in
out
in
inc
stos
aaa
sbb
mov
icebp
lods
sub
mov
sub
add
sub
push
fwait
lods
test
test
sbb
rol
in
in
jp
imul
push
push
dec
sub
shrb
idivb
dec
imul
mov
mov
dec
in
dec
push
mov
hlt
lds
aad
movsb
imul
aaa
aas
mov
mov
mov
jbe
movsb
leave
push
mov
adc
insb
mov
push
roll
pop
pop
mov
mov
and
out
popa
adc
stos
dec
and
lods
push
jae
jl
lcall
sti
xor
mov
pop
inc
ljmp
mov
das
add
pop
ret
fstpt
shll
mov
imul
scas
or
call
push
cmpb
addr16
jne
mov
lret
hlt
or
stc
ret
push
mov
push
in
fsubr
or
lea
cmp
xlat
adc
adc
iret
rclb
imul
stos
xor
lea
mov
add
add
mov
roll
test
push
ret
add
push
jo
imul
inc
testl
xchg
adc
nop
push
es
jno
cld
inc
stos
jle
inc
dec
mov
push
xor
cltd
inc
shll
inc
fsubp
xor
jae
imul
xchg
js
sub
pop
mov
mov
dec
scas
and
xchg
jle
stos
mov
jp
loope
xor
jg
clc
adcl
mov
leave
xor
rolb
cmp
pop
cltd
fists
adc
cmp
scas
and
aad
xlat
mov
push
ficoms
pop
inc
cmp
test
dec
inc
imul
jbe
sbb
push
cmp
pop
mov
aad
sbb
hlt
lods
lock
fsubl
or
test
lock
in
pop
pop
lea
or
in
cltd
inc
movsl
push
ret
xor
ds
pusha
mov
mov
nop
cwtl
cmc
xchg
mov
add
sahf
xchg
add
add
mov
inc
mov
ret
loopne
sub
out
sarl
mov
push
aas
sub
push
mov
xchg
pop
push
leave
icebp
outsl
xorl
loopne
mov
add
xchg
les
add
loope
xchg
aaa
sbb
xor
mov
popf
xor
insl
test
lahf
mov
gs
xchg
cmpsl
push
cli
sahf
stc
je
mov
fidivl
ret
sarb
retw
icebp
sbb
jne
xchg
jbe
sbbl
rorb
imul
xchg
push
mov
inc
inc
pop
and
jne
popl
jnp
and
outsl
jmp
mov
jnp
loop
ja
push
ljmp
mov
cmp
cmp
int3
mov
outsl
jge
fcmovnu
adcl
lods
xchg
test
orl
pop
push
adc
outsb
out
incl
testb
cmp
enter
push
and
daa
lret
mov
mov
and
inc
and
jns
and
test
insl
pop
jmp
fildl
mov
insb
stos
xor
xor
fisttpll
js
dec
fwait
pop
test
mov
jae
cmpsl
jmp
inc
adc
jb
sub
fmul
jg
divb
xor
sub
mov
sbb
mov
adc
mov
icebp
arpl
or
cwtl
movsb
mov
dec
adc
stos
fcmovu
mov
pop
inc
jno
xchg
loopne
inc
vmovntps
es
adc
cltd
adc
jbe
mov
adc
loope
shl
dec
cmp
or
fildll
pop
mov
movsl
call
idivl
and
sub
pop
pop
inc
inc
xorl
je
orl
das
jnp
and
ja
out
jg
std
mov
or
outsb
adc
jb
mov
call
or
sbb
fsub
inc
stc
test
icebp
dec
adc
or
fbld
sbb
fstpt
pop
lods
sbb
push
jle
mov
adc
mov
clc
mov
pop
sarl
jns
mulb
jmp
jge
dec
xor
sahf
rorb
stos
or
sub
jp
bnd
sub
add
jmp
push
mov
test
out
and
lods
mov
push
out
push
xchg
mov
mov
ficomps
cmp
mov
mov
in
jmp
sti
push
push
cmp
xor
xchg
xchg
or
test
and
pop
xchg
repnz
inc
cltd
and
xchg
addr16
push
mov
sbb
adc
or
jae
xor
int3
xor
cmc
inc
es
outsl
sbb
lock
mov
popf
pop
mov
lahf
cli
popf
loope
mov
pop
mov
mov
jp
pop
add
cmp
dec
test
hlt
jmp
test
std
push
jnp
icebp
push
shr
push
jb
lret
out
add
sub
fisubrl
das
ficompl
mov
mov
pop
xchg
int3
scas
int
icebp
nop
add
or
pop
mov
push
inc
mov
es
orb
cmp
clc
enter
dec
lods
sbb
addb
mov
xor
inc
cmpsl
dec
test
pop
pop
das
xchg
cmpsb
gs
adc
push
popf
xor
test
pop
dec
in
into
push
jle
les
mov
push
mov
dec
insl
leave
adcb
jne
sahf
clc
and
fidivs
aam
xor
dec
pop
adc
out
iret
sub
test
jnp
call
scas
imul
inc
sarb
movsb
shrl
inc
add
outsb
sub
inc
pop
pslld
stos
sahf
inc
cwtl
stos
cld
or
sbb
mov
in
scas
in
in
inc
fs
mov
notb
sub
jnp
iret
sbb
aaa
cmp
aas
aas
pop
stos
rorl
flds
loop
loope
fisttps
xchg
dec
loopne
mov
jne
jge
jle
into
dec
xor
push
jno
adc
imul
dec
jae
mov
inc
test
testb
xlat
mov
cwtl
sub
jp
mov
sbb
dec
and
iret
xchg
test
std
inc
dec
ret
pushf
mov
leave
leave
repnz
test
subb
sti
pop
rorb
mov
lret
adc
in
push
lds
xchg
xchg
mov
in
aam
xchg
test
push
sub
and
daa
rorb
fwait
mov
pop
shlb
push
mov
xchg
xor
lods
add
lcall
in
xchg
or
inc
pop
jbe
jmp
bt
enter
cmp
inc
jnp
dec
dec
push
mov
mov
add
add
out
fwait
icebp
push
mov
pop
add
loope
or
arpl
pop
push
cmpsb
adc
scas
jns
xchg
xor
mov
cmp
xor
sub
push
jno
das
pusha
testb
aaa
ds
fcomps
call
outsb
mov
out
es
cmp
mov
je
in
cmpsb
inc
or
cli
xchg
out
push
jae
pushf
push
mov
lds
mov
mov
adc
ret
dec
arpl
decl
cld
mov
mov
mov
out
in
or
adc
sbb
dec
lods
lret
mov
dec
outsb
sub
lods
mov
arpl
les
jns
fsubrp
pop
mov
outsb
jbe
jmp
insl
aam
dec
push
add
mov
push
mov
fidivl
cld
ja
popa
ja
dec
xchg
sbb
and
movsb
jmp
mov
fistpll
fwait
push
mov
fisttpl
dec
std
sub
int
popa
clc
rorb
push
outsl
cmpsl
ficompl
inc
pop
scas
xor
jbe
xchg
sub
mov
repnz
inc
mov
add
adc
mov
cmp
mov
out
test
arpl
inc
add
shlb
lock
sbb
icebp
dec
movsb
imull
test
iret
outsl
orl
pop
in
and
push
jnp
stc
xchg
and
or
inc
mov
cs
jne
jge
xchg
mov
mov
mov
sub
xlat
lahf
inc
cwtl
jg
nop
cs
mov
xor
lahf
fiadds
repnz
rcrb
mov
pop
push
daa
shll
out
cmp
je
dec
push
push
mov
xchg
arpl
push
dec
insl
cld
cwtl
jns
int3
pop
cwtl
test
adc
and
xrelease
or
inc
pop
fwait
js
call
std
imul
cmp
scas
sub
lds
js
flds
aam
adc
repnz
sub
push
sti
movsb
das
imul
fisubrl
push
add
mov
jo
mov
mov
jb
lock
jbe
mov
dec
pop
mov
popf
hlt
sub
push
adc
and
cmpsl
sub
hlt
ds
enter
adc
repnz
addl
mov
adc
mov
repz
sbb
dec
mov
repnz
xor
loope
rcll
inc
in
inc
int
loopne
cld
mov
movsb
inc
test
add
in
and
popa
adc
orb
pushf
jge
xor
or
xlat
pop
adc
in
out
loope
hlt
adc
or
add
lret
push
inc
xchg
fwait
sub
out
andl
lds
jno
mov
push
mov
in
push
ficoml
jmp
add
js
lret
ljmp
push
pop
iret
and
push
jb
out
in
les
xor
xchg
lret
outsb
push
lods
and
add
fisttpl
aas
push
inc
dec
dec
cld
xor
movsb
mov
pop
push
push
inc
inc
mov
mov
lcall
scas
cmp
xchg
sub
lods
scas
cmp
aas
jae
adc
icebp
gs
es
cmp
out
lock
minps
mov
push
cs
mul
mov
mov
sar
ljmp
aam
mov
bound
scas
imul
lea
bnd
js
sub
xlat
dec
and
loope
inc
push
dec
repz
jg
repnz
inc
nop
lret
fistps
or
or
insb
pop
mov
xchg
aaa
lret
mov
mov
idivb
push
roll
cmpsl
std
leave
das
xor
jmp
lret
nop
mov
rolb
mov
adcb
mov
insl
xchg
adc
cltd
sub
jmp
repnz
mov
or
outsb
sub
shrl
pushf
imul
sub
push
shrb
pop
mov
push
fimuls
dec
dec
adc
xor
push
inc
sbb
mov
dec
mov
test
imul
das
lcall
xor
arpl
gs
mov
jae
pop
daa
in
fstpt
xchg
pop
scas
lahf
jmp
in
repnz
mov
inc
test
fisttpll
outsb
mov
mov
add
push
out
sbb
outsl
adc
popf
cmp
shlb
fcomps
and
mov
inc
adc
fucomi
mov
mov
add
pop
adc
cli
jne
test
scas
xchg
adc
cmp
ss
fmull
popa
out
jns
mov
or
scas
addb
xchg
fwait
loopne
sarl
ja
ljmp
lea
repz
and
jle
pop
mov
pop
clc
pop
rclb
push
negb
je
xor
in
xor
loope
cmc
mov
ljmp
enter
or
or
xor
push
shl
into
mulb
add
push
fstps
popa
cwtl
add
icebp
xor
dec
jae
jp
lcall
sbb
cmpsl
fs
xor
rcll
stc
cltd
test
enter
stc
lret
lret
rclb
dec
sub
je
fs
xor
pop
gs
outsb
dec
fisubl
loopne
mov
fimuls
sahf
in
add
cmp
push
xor
mov
cmp
mov
xchg
fwait
pushf
mov
addr16
std
and
mov
xor
fbstp
inc
lds
sbb
imul
cmp
gs
pop
negl
mov
lret
push
xchg
or
fsubrs
loope
inc
jmp
out
in
push
dec
pop
ds
lods
dec
mov
mov
mov
sbb
push
ficompl
insb
mov
adc
shll
fsub
repnz
dec
add
mov
xchg
xor
imul
mov
out
loope
cmpsl
cltd
add
repz
inc
daa
test
xor
push
push
xchg
and
mov
jae
jl
sub
add
mov
stc
stos
mov
sbb
pop
stos
or
jbe
pop
pusha
lret
lea
sbb
jl
sub
or
push
lods
dec
cmc
add
mov
jo
xchg
jns
push
fstpt
lods
gs
sub
lahf
jae
loop
pop
mov
fcoms
ljmp
incl
aas
jno
imul
push
rorl
push
mov
test
fstps
ret
sub
mov
dec
je
xchg
aad
je
pop
dec
dec
cmp
and
xchg
mov
outsb
and
xor
loop
push
mov
das
add
mov
mov
int3
add
cwtl
insb
mov
rclb
popa
mov
jle
add
cmp
aad
cmp
mov
gs
sub
sbb
xor
in
add
mov
jge
fcmovb
jno
jns
or
shl
and
dec
mov
insb
push
mov
push
out
ret
pop
push
ds
pmaxsw
in
cmp
shrl
or
inc
mov
sahf
and
jmp
aas
push
lcall
adc
rcr
dec
jg
loope
jl
in
stc
mov
hlt
jmp
jne
stc
fucomi
inc
icebp
add
cmp
push
std
xor
xchg
stos
xchg
cmp
mov
jb
push
ret
ret
in
clc
inc
addl
popf
mov
mov
mov
decl
mov
add
inc
jmp
je
test
cmp
js
fwait
inc
cmp
mov
mov
mov
mov
subb
popl
bound
rcr
pop
popf
lcall
mov
les
add
mov
jl
jle
sbb
pop
leave
in
and
push
fbstp
xor
pop
cwtl
jge
sbb
dec
mov
mov
mov
xlat
mov
mov
xchg
adc
xchg
orb
lea
pop
and
mov
sbb
les
test
cmp
mov
mov
push
cmp
or
loope
jp,pt
sub
jb
iret
sbb
jb
xchg
repnz
inc
mov
jp
sub
leave
push
cmp
push
and
ds
in
inc
sub
push
adc
mov
int
sbb
push
in
sarb
or
inc
cmp
fwait
iret
mov
arpl
fcom
jbe
pop
pop
fcmovu
jne
cmp
je
xchg
sbbb
cmp
and
jno
addr16
sub
pop
inc
scas
sarl
push
add
aas
into
mov
lahf
and
push
sub
aaa
fldt
mov
bound
mov
cmp
iret
xor
cmp
dec
sub
inc
pop
mov
dec
mov
lds
loop
daa
xor
sbb
add
divb
sbb
mov
jno
or
divl
fnstsw
jbe
imul
or
rcll
xchg
jl
mov
cmc
cmpsb
int
push
inc
cmp
out
mov
add
fistps
inc
and
cmp
loopne
shlb
out
lfs
call
loopne
cltd
mov
push
pop
pop
pusha
fdivl
cmc
rcr
adc
lock
sub
lahf
sbb
mov
pusha
push
imul
js
fucomp
test
call
popa
icebp
mov
repz
and
jecxz
mov
mov
movsb
ret
and
pop
adc
mov
xor
cli
add
adc
in
mov
aad
cld
jnp
leave
movsl
ljmp
lock
insb
xor
das
and
addl
out
mov
int3
fisttpl
rorb
mov
lods
ss
test
and
sub
fstps
test
call
scas
minps
cwtl
xor
dec
pop
inc
iret
out
sub
dec
lds
mov
daa
sbb
xor
ret
daa
dec
stc
sbb
xor
sbb
cmp
pop
xor
icebp
xor
adc
sti
inc
aam
dec
idivl
fwait
rol
pop
loopne
pop
rcrb
mov
dec
inc
jb
loopne
fistps
lret
shrb
loop
cmp
sbb
arpl
xchg
xchg
leave
fcoml
inc
dec
negl
sub
xlat
push
jb
and
sti
sbb
push
ss
fsubr
xchg
push
jno
jp
push
sbb
repnz
or
push
xchg
or
mov
test
fsubr
das
cli
adcb
jnp
jnp
lods
adc
test
pop
pop
pop
dec
dec
shlb
xchg
dec
xchg
mov
pushf
popf
mov
xchg
iret
mov
lret
sub
push
jmp
mov
out
cmp
sub
mov
dec
push
jb
mov
and
repnz
push
add
imull
mov
mov
and
insb
cmc
adc
in
xor
mov
jb
sbb
subb
shr
fimull
das
sbb
sahf
jo
pop
xchg
add
inc
lea
sbb
daa
add
adc
negl
insl
cmp
daa
push
pushf
enter
mov
or
sub
cs
ss
xorb
push
mov
ret
mov
es
xor
in
and
test
hlt
xchg
test
out
push
sub
mov
mov
lcall
cmpsb
js
push
dec
push
pop
push
aaa
push
aam
movsl
fldenv
loope
sub
ret
sbb
add
bound
add
inc
pop
in
or
loope
dec
sub
lcall
daa
insl
int
pop
dec
xor
rcll
pop
insb
xchg
cmc
leave
repz
popa
dec
sub
xlat
out
fsubl
jnp
mov
loope
pusha
cmp
mov
faddp
xchg
data16
cmp
loope
cmp
vcvtps2pd
mov
pop
popl
push
fstpl
andl
sar
sarb
rcrb
sti
pop
ss
cltd
fcoms
dec
pop
jmp
shlb
jmp
pop
mov
popa
aas
pop
sbb
pop
inc
and
cld
mov
cmp
imul
and
orb
xchg
stos
stc
aam
push
adc
movsl
adc
scas
mov
je
pop
push
ljmp
mull
dec
xorl
cwtl
xor
sbb
arpl
adc
test
in
popf
mov
mov
pop
ljmp
jno
mov
push
cmp
push
sbb
mov
push
mov
xlat
orl
xchg
jno
jno
iret
and
jl
fiaddl
push
mov
mov
bound
add
in
mov
notb
fcompl
pop
outsb
pop
mov
xchg
and
test
jge
or
mov
loope
lods
xor
fsts
lods
pop
add
add
cmp
mov
sbb
adc
pushl
in
push
inc
mov
shll
adc
call
mov
jne
int
xor
daa
jns
das
jae
dec
or
call
add
mov
inc
cmp
lret
inc
pusha
sub
movsl
pushf
pop
test
out
ret
jae
inc
xchg
rol
in
pop
mov
aaa
jmp
or
iret
lcall
dec
push
out
lds
jle
loop
xor
cld
notb
mov
lds
insl
mov
aam
adc
dec
jbe
ret
inc
jg
inc
outsb
cmp
pop
jnp
inc
and
fldl2t
dec
int
daa
mov
inc
push
sbb
jmp
pusha
mov
inc
test
test
lahf
or
push
mov
xchg
mov
loopne
fmuls
scas
or
clc
and
cmp
es
pop
shll
popa
push
js
cs
mov
fldt
mov
scas
mov
fbld
add
xchg
aaa
notl
int
push
pop
and
push
adc
mov
stos
ja
add
gs
das
sahf
outsb
in
jmp
dec
xchg
scas
divw
pop
xchg
xor
xor
xchg
es
sbb
es
mov
push
dec
ds
mov
sbb
scas
lahf
jo
int3
loopne
or
jmp
dec
xchg
mov
call
jge
pop
or
invd
mov
push
inc
sub
js
cld
out
push
into
imul
mov
into
push
pusha
cmpsb
scas
dec
fstl
leave
lods
and
lret
sub
pusha
movsl
inc
cmpsb
dec
push
movl
sahf
mov
addb
int
add
lahf
cmp
add
lret
divl
xchg
mov
sahf
sahf
fcoms
popf
or
pusha
mov
push
add
enter
lea
lock
into
jge
mov
fwait
call
mov
mov
jecxz
push
pop
repnz
dec
pop
pop
bound
shlb
mov
cmp
jmp
sub
aad
nop
das
jmp
clc
add
lock
and
aad
sbb
iret
ret
jb
add
imul
dec
xchg
jg
mov
scas
xor
leave
cmp
mov
mov
mov
and
js
push
push
lret
jmp
push
fwait
das
mov
xchg
sbb
fbld
inc
in
mov
sub
ds
push
lret
adc
push
push
das
inc
pop
mov
sbb
clc
add
mov
and
daa
pushf
std
mov
ret
xchg
xorl
jae
inc
xchg
xchg
decb
mov
filds
xchg
cwtl
inc
lods
jae
mull
nop
add
dec
sub
jl
push
rclb
mov
lods
mov
adc
int
mov
mov
movsb
test
lods
sarb
xor
add
sub
or
pop
mov
inc
and
orl
dec
les
jbe
mov
std
sbbl
mov
sbb
out
xchg
sub
push
dec
loope
ret
xchg
lods
adc
dec
fstl
in
js
push
popa
sub
scas
or
inc
add
or
xor
add
insb
sbb
mov
sbb
scas
dec
adc
dec
fadd
outsb
lcall
xchg
mov
push
iret
jae
rclb
shlb
rolb
stos
dec
add
mov
inc
fneni(8087
xchg
xchg
and
stos
mov
dec
stc
mov
adc
xchg
imulb
pusha
mov
mov
cmp
cli
dec
sbb
adc
and
adc
fbstp
adc
cld
sub
mov
jge
xchg
jmp
mov
xor
lods
mov
ret
aad
push
nop
outsb
push
pusha
scas
cmp
in
jecxz
int3
sub
or
sbb
dec
fisttps
xchg
shl
es
cmpb
ficomps
push
jecxz
leave
xchg
or
xor
push
and
pushf
mov
popf
sarl
sbb
mov
dec
lea
mov
jno
mov
pop
pop
hlt
notl
sbb
pop
fadds
test
xchg
repz
sbb
outsl
jmp
xor
rcrb
xlat
outsl
iret
into
aam
fs
nop
lds
scas
in
xchg
or
fcoms
xor
xor
mov
les
adc
cmp
movsb
mov
out
in
daa
outsl
cmp
cltd
scas
and
int
add
pop
lahf
cmp
pop
jp
lcall
shl
fdivl
into
adc
push
leave
mov
xor
mov
sbb
ljmp
test
data16
xchg
fisttpl
rcrb
mov
fimuls
incb
jno
mov
push
ss
int
push
xor
xchg
mov
clc
sbb
cmpsb
mov
xor
cmp
pop
in
fs
ja
xor
sbb
fldenv
pushf
std
js
lea
gs
ja
repnz
sub
incl
ss
xor
pop
ret
pop
lock
and
mov
pop
dec
imul
jnp
ds
jp
pop
test
mov
ret
mov
and
sub
jecxz
adc
pop
das
adc
outsl
fisubl
rol
repnz
scas
pop
aas
lret
and
dec
iret
mov
xor
dec
xor
je
dec
stc
jnp
push
mov
and
mov
xchg
mov
xor
pop
add
cwtl
lahf
xchg
les
dec
xchg
push
loop
cmp
jge
popa
fistpl
jl
dec
xchg
clc
movsb
push
bound
push
sub
push
in
pop
mov
jp
je
dec
mov
push
sbb
js
repz
adc
stos
les
lods
gs
out
add
sbb
xchg
and
fcomps
in
into
adcb
mov
call
nop
test
dec
pop
xchg
test
rorb
shlb
out
xor
addr16
adcl
pop
pop
inc
sbb
in
push
mov
ret
fbstp
or
cld
fisttps
sub
xchg
out
jnp
je
jmp
pusha
dec
xlat
push
add
into
mov
mov
dec
xchg
jmp
arpl
mov
push
sti
into
in
adcb
lret
sbb
adc
push
pusha
mov
xor
xchg
sbb
cli
arpl
testl
ds
ret
cmpsb
movsb
mov
int3
pop
cmpb
or
mov
iret
dec
cs
lret
mov
dec
test
pop
mov
adc
insb
lahf
ja
jecxz
push
icebp
inc
cmp
inc
mov
adc
push
mov
pop
or
push
mov
fnsave
push
mov
xchg
fdiv
jle
pop
mov
das
out
cmp
xchg
out
xor
loopne
sub
mov
in
jno
ds
mov
adc
mov
sub
bound
repnz
enter
dec
lret
jo
mov
in
js
movsb
hlt
inc
in
sbb
mov
daa
test
sub
lret
sub
xor
out
xchg
cmpsb
lods
or
inc
cwtl
inc
rcr
hlt
ret
cmp
xor
or
mov
cmc
shl
out
xor
push
pop
mov
or
inc
fstl
inc
adc
in
mov
outsb
inc
mov
mov
adc
stc
pop
cmp
lods
sbb
sub
inc
mov
pop
or
loopne
pop
cmpsl
mov
pop
ljmp
mov
xchg
mov
fneni(8087
sbb
inc
dec
repz
xor
fs
jo
dec
inc
push
sbbb
ret
inc
leave
xchg
int3
pop
ds
popf
jno
mov
outsl
mov
loope
lret
dec
nop
jle
push
jge
mov
sub
jae
lret
ljmp
mov
divl
cmc
sub
push
xchg
sbb
jnp
jne
mov
sahf
sbb
pop
aas
shl
lcall
popf
push
xchg
das
pusha
mov
stos
test
pop
dec
cld
dec
loop
dec
test
mov
stos
or
das
scas
pop
test
lahf
leave
sbb
testb
jo
jae
shrb
inc
jmp
xlat
jne
lds
xchg
lds
xchg
push
pushl
ss
je
xchg
fcmovnb
pushf
adc
imul
adc
pop
mov
movsl
push
cwtl
add
stc
sbbb
inc
test
cld
cmpl
jo
mov
mov
and
add
das
nop
hlt
mov
into
mov
push
mov
ja
add
outsb
pop
ret
xchg
push
imul
stos
int3
and
aaa
test
mov
xlat
push
lcall
stos
jnp
fwait
iret
add
daa
add
add
adc
iret
pop
clc
cld
and
mov
fcoms
das
mov
and
ljmp
subb
out
fistpll
xchg
sbb
aaa
xlat
push
movsb
jecxz
int3
inc
ja
test
xchg
sbb
mov
jmp
ret
stc
shlb
sarl
test
mov
addl
jecxz
imul
cmp
and
or
lods
xor
lock
hlt
adcl
inc
inc
pop
inc
adc
mov
inc
push
loope
cwtl
stc
xchg
stc
mov
jae
xchg
outsl
push
sbb
add
mov
pop
sahf
jb
mov
fs
cmpsb
cmp
movsb
mov
adc
mov
mov
jle
shr
mov
fidivrs
xchg
push
in
adc
push
adc
scas
lcall
or
mov
jp
jmp
dec
sbb
cmp
xor
jne
shlb
adcb
mov
pop
jecxz
jae
cmpsb
outsb
daa
leave
ret
mov
popa
mov
jo
fdivl
adc
cmpsl
jbe
dec
xchg
xchg
sbb
nop
add
test
daa
push
fwait
rcl
add
jg
adc
sti
cmp
sub
pop
xor
jae
aas
and
in
notl
inc
mov
frstor
xlat
js
add
in
mov
sub
xchg
pop
cmovl
aad
or
pop
adc
mov
dec
sbb
xchg
mov
cmc
movsl
jp
and
loop
and
out
xor
stos
inc
xchg
pop
aas
add
dec
fistpl
sub
pop
xor
push
jbe
xor
jg
cmp
and
sbb
mov
xchg
sbb
lret
sbb
aas
es
pop
jle
inc
jle
jae
mov
inc
int3
xchg
sub
outsb
pop
inc
inc
mov
jl
push
arpl
aaa
adc
inc
mov
or
xlat
shlb
fs
bound
shlb
enter
jbe
mov
adc
sub
cmc
test
xor
adc
or
mov
mov
icebp
lret
add
popa
or
out
subl
add
mov
sbb
or
cld
mov
in
inc
test
inc
pop
adc
push
lcall
or
pop
add
push
adc
stos
and
xor
add
add
push
adc
adc
es
cs
bound
lods
lcall
dec
fnstenv
cmp
mov
fsubp
or
test
movsl
xchg
int
cmc
out
push
loop
mov
insb
push
dec
or
fwait
mov
adc
in
xor
mov
xor
cmp
mov
enter
and
jl
fldl
xor
inc
dec
scas
hlt
fsubrl
dec
shll
xlat
shll
je
pop
gs
jno
pop
rorl
rclb
popa
add
clc
add
std
les
in
mov
cmp
fsubs
cwtl
and
into
aas
cmp
enter
inc
or
pop
js
jle
dec
sub
cmpsb
inc
fwait
inc
cmpb
idivl
neg
out
icebp
mov
lcall
insl
fcoml
sbb
ja
push
xchg
in
xor
das
jo
dec
cmp
inc
jge
fidivs
lods
icebp
or
fdivrl
or
or
inc
outsb
ja
sti
mov
or
sub
push
add
mov
adc
xor
dec
int
sarl
lock
aas
push
xor
ret
mov
sub
pusha
and
or
jno
sbb
xchg
add
js
mov
inc
scas
out
outsl
or
and
lock
jo
xlat
pop
push
insl
mov
gs
out
stos
pop
push
inc
cs
push
pop
orb
mov
mov
shll
or
jl
jmp
xchg
pop
outsb
mov
stc
mov
cmp
xchg
pop
push
and
dec
inc
mov
push
leave
loope
xorb
and
cmp
stos
xchg
mov
xchg
dec
mov
jne
test
push
sbb
shlb
andb
repnz
mov
jns
aas
pop
cmp
shrl
aas
or
mov
js
pop
fsubr
jno
cmp
jb
sub
ljmp
mov
adc
pop
repz
movsb
mov
lcall
mov
insb
and
adc
xor
inc
inc
pop
cmp
push
shrb
adc
cmp
mov
dec
fwait
mov
dec
mov
stos
xor
dec
xor
inc
icebp
or
mov
call
jp
dec
xchg
adcl
pop
fwait
or
pop
subl
fwait
mov
aas
iret
xchg
push
dec
add
push
pop
adc
outsb
or
nop/reserved
mov
sub
stos
cltd
shll
xor
rorl
sti
mov
push
mov
push
fiadds
and
fldt
ljmp
mov
into
pushf
jne
ljmp
pop
pop
jo
pushf
movsl
adc
dec
mov
mov
push
fisttps
jns
out
popf
cmp
fcoml
ja
int
imulb
repz
lcall
cld
pop
sub
xchg
ss
push
adc
es
out
loop
xchg
lods
lea
sbb
bound
int3
scas
lahf
addr16
fbld
sbb
cli
push
jno
subb
pop
inc
jge
sub
xchg
push
sbb
daa
push
jo
icebp
out
test
sti
stc
adc
adc
lcall
scas
cmp
pop
cmp
lea
mov
adc
repnz
xchg
cmp
ljmp
daa
leave
frndint
and
push
jmp
mov
jg
add
or
jae
enter
sar
xor
cmpsb
dec
jno
adc
fistps
fwait
pop
jge
fldenv
add
push
sbb
mov
adc
xchg
leave
jnp
lock
jnp
sbb
sbb
jno
xchg
push
pop
mov
mov
sti
and
xchg
lea
jl
fldcw
push
and
sbb
mov
mov
mov
jmp
or
cmp
add
mov
add
clc
cltd
test
pop
pop
or
popa
popw
xchg
jns
push
cmp
mov
inc
push
in
pop
dec
insb
pop
pop
mov
movsb
lods
jle
jge
jno
andb
in
testl
lods
push
les
cmp
shrb
aam
sub
sub
addb
pop
adcl
or
fnstsw
adcl
cli
cmp
repnz
push
mov
cmp
cmp
sbb
jle
sbb
mov
and
cs
sbb
sub
mov
push
subb
add
jp
stc
xor
pop
mov
or
mov
pop
std
push
dec
cwtl
and
adc
or
movsl
call
popa
out
shll
cld
inc
push
lds
xchg
int3
mov
pop
in
sub
cmpsl
mov
push
imulb
jne
mov
push
scas
ja
dec
mov
sbb
aad
xor
sarb
andl
cs
insb
scas
pop
stos
xchg
or
icebp
lods
dec
add
cmc
fwait
hlt
mov
pop
data16
sub
fwait
xchg
and
mov
inc
inc
out
in
xchg
push
xchg
adcl
popf
sub
pop
in
hlt
sub
int3
jno
or
fsubs
mov
nop
call
pop
add
sbb
jno
nop
daa
mov
in
leave
fwait
mov
scas
mov
mov
lods
mov
sbb
cmc
int3
out
mov
cmc
add
and
jno
cwtl
jae
mov
and
fdivl
imul
jl,pt
cmp
jae
sarb
cwtl
das
daa
rcrb
sar
arpl
pop
jne
mov
subb
dec
mov
push
loopne
in
xor
adc
inc
ja
scas
rclb
add
sbb
lea
fwait
cltd
mov
inc
mov
dec
in
and
cltd
jno
xor
xchg
inc
adc
xchg
iret
xchg
cmp
popf
movsl
cltd
insb
out
or
ficomps
pop
dec
xchg
aad
in
gs
test
jno
cli
iret
test
mov
in
ss
mov
or
jg
aad
sbb
in
aad
into
jnp
jmp
mov
and
mov
rcrl
shlw
cmp
xor
lcall
out
ds
xchg
pop
mov
lock
loop
movl
movsb
lea
je
bound
cli
pop
pop
adc
popf
pop
jp
dec
or
mov
daa
inc
mov
mov
lahf
xor
add
outsb
jnp
cmpsl
test
mov
cmpl
insb
jns
ds
imul
fcomps
pop
rcll
xlat
cmp
loopne
cmp
mov
mov
inc
xor
daa
mov
imul
xchg
cmc
sbb
dec
or
in
mov
jmp
adc
sbb
cld
insb
add
andb
dec
fidivs
push
jb
sbb
xchg
pop
movsl
pop
icebp
inc
mov
mov
das
dec
adcb
push
clc
dec
mov
movsb
push
add
xor
jge
int
pop
adc
dec
push
mov
out
pop
aas
or
add
std
dec
fs
sub
out
insl
shll
push
dec
dec
jae
mov
adc
mov
dec
shlb
push
dec
xor
negb
sbb
mov
je
push
dec
fmull
add
cs
pop
or
mull
xchg
mov
ret
lds
mulb
cmpl
in
rcr
xor
pushf
dec
cld
std
or
mov
cmp
lds
fld
gs
jb
push
mov
mov
fcomp
and
inc
andl
adc
leave
repz
pop
pop
ret
sub
add
dec
std
loopne
es
xchg
movsl
add
sahf
add
inc
dec
add
xlat
jbe
cwtl
rolb
jmp
das
dec
mov
lods
or
emms
sub
cmp
add
xlat
clc
dec
xor
insb
xchg
loope
data16
xchg
xchg
data16
sbb
lods
sarl
fisttps
jo
sub
push
mov
cli
leave
mov
shrb
jle
xor
or
mov
cmp
scas
lahf
mov
adc
sbb
jo
mov
es
adc
dec
jns
pop
insl
inc
popf
mov
pushf
pop
mov
sbb
andl
mov
test
cmc
lcall
test
ja
fs
mov
jo
add
xchg
or
and
cwtl
inc
push
pushl
scas
cmp
sub
fstp
test
mov
and
lcall
das
pop
pop
cli
popf
dec
push
xchg
push
pop
push
xor
das
pop
xchg
inc
xor
ret
bound
mov
shrb
xor
push
fisttps
outsl
lahf
xchg
gs
mov
xor
mov
push
loopne
hlt
rorl
loope
adc
clc
in
jns
fisttps
sub
aam
mov
shlb
scas
jnp
clc
ss
mov
jge
ror
lods
inc
xchg
adc
out
xor
pushf
pop
mov
stos
xor
dec
push
aaa
dec
outsb
clc
adcb
lods
out
cwtl
jecxz
jmp
pop
cmpsl
rcrl
adcb
int
mov
fnstenv
mov
iret
mov
clc
pop
sarb
fcmovne
push
out
jg
loop
cli
cmp
mov
addr16
aaa
inc
jb
dec
sbb
cltd
daa
shrb
jg
aad
xor
mov
pop
ret
in
push
into
mov
popf
clc
or
add
fs
inc
loopne
inc
cmp
push
add
xchg
inc
mov
in
movsl
push
movsb
add
dec
or
mov
test
mov
sub
mov
fwait
gs
xor
lret
aad
sarb
pop
mov
lock
pushf
xor
xchg
sbbb
stc
push
jo
xor
jno
pop
pop
adc
test
lcall
imul
push
out
xor
iret
js
jne
xorl
arpl
dec
loop
in
arpl
push
lock
repz
add
test
push
fs
mov
and
shlb
inc
pop
inc
aaa
cltd
adc
mov
pusha
push
dec
leave
push
hlt
lods
aas
gs
xchg
sbb
out
push
pop
mov
dec
test
in
loope
sub
push
inc
jg
and
out
push
enter
mov
push
sti
out
repz
stos
cmpsb
jecxz
orw
enter
xchg
dec
stc
cmp
mov
ficoms
mov
lret
mov
in
imul
pop
push
jmp
mov
sbb
sbb
das
push
out
pop
loop
sahf
lcall
mov
pusha
xchg
out
shll
push
dec
mov
fs
mov
cmc
mov
pushf
cmc
inc
pop
shll
clc
ds
xor
pushf
fcmovne
jecxz
adc
xchg
nop
mov
jp
mov
sbb
adc
leave
cmp
in
fcomp
mov
lret
out
cmc
pop
lods
mulb
sbb
and
clc
in
cltd
push
push
cmp
std
in
mov
call
cld
int3
push
push
dec
ret
lahf
mov
and
out
push
rcrb
push
les
in
sbbl
inc
adc
movsl
xchg
sbb
sti
mov
hlt
fwait
cmc
stos
pop
mov
xchg
and
loopne
loopne
cld
call
mov
ret
in
cmp
shr
pop
adc
arpl
sub
dec
mov
in
or
popl
jp
inc
push
rcl
jmp
push
mov
pop
jge
insb
lds
adc
or
lcall
pushf
andb
xchg
fidivl
daa
loopew
push
das
vmptrst
mov
cltd
mov
imul
dec
andb
add
sbb
jne
jp
push
inc
shrl
int
into
push
xchg
fistpl
lret
push
mov
mov
dec
pusha
cmp
stc
es
loop
mov
mov
int3
or
leave
mov
cld
push
push
out
sbb
ss
sub
lcall
mov
xchg
cli
mov
les
mov
dec
sub
adc
mov
sub
jnp
jecxz
insl
shll
fisttpl
repnz
or
inc
lods
movsl
fimull
ret
shll
or
mov
arpl
push
cmp
nop
cmpsb
clc
lods
arpl
cmp
les
leave
inc
sub
mov
push
cs
ret
nop
daa
jb
fdivrs
add
jne
pop
sbb
jg
push
jl
push
je
clc
stos
xor
mov
xchg
scas
or
add
clc
jns
leave
pop
sub
lret
xchg
test
mov
push
inc
mov
push
push
sahf
in
lcall
stos
in
fs
xor
nop
movsl
xchg
adc
xor
pop
sub
sbb
sbb
ror
shl
cmp
push
mov
ror
repz
xorb
pop
test
sub
lret
std
int
push
or
add
push
dec
cld
push
and
imul
mov
sti
lods
mov
in
pop
lods
push
xor
push
and
sub
pop
cmp
pop
mov
push
push
or
or
les
xchg
std
and
das
outsb
clc
mov
pop
add
push
jg
dec
scas
xorb
mov
or
icebp
clc
test
xchg
int
sbb
and
cmpsl
push
sbb
stc
push
adc
cmp
inc
push
test
test
mov
in
jb
xchg
in
dec
lods
and
push
jecxz
adc
jg
jno
or
pop
mov
mov
fdivrs
adc
mov
jmp
mov
add
mov
mov
xorb
adc
insl
jl
push
dec
xor
cmp
sbb
cmp
loop
ficomps
add
les
pop
std
popf
lock
ficoms
nop
enter
mov
cmp
out
add
or
dec
add
push
ljmp
push
sbb
pop
fimuls
popf
imul
jmp
pop
inc
mov
fiaddl
sbb
je
xor
mov
fcomps
lea
out
stc
mov
loopne
push
sub
mov
sahf
adc
lock
sbb
pushf
add
aaa
add
push
dec
pop
rcll
add
and
stc
inc
out
push
ljmp
bswap
push
insl
loope
sub
aam
cmp
mov
rcrb
jmp
cli
sbb
ss
dec
inc
fisttps
test
hlt
nop
aam
xchg
xchg
jne
dec
add
testb
fs
call
outsb
cmc
pop
cmc
fsubrp
shlb
mov
dec
mov
cwtl
add
sub
or
loopne
or
fs
xor
bound
sbb
push
dec
or
std
push
push
jmp
or
xchg
ja
stos
cwtl
jo
popf
fstl
inc
je
aam
dec
sti
jo
and
leave
pop
cmp
nop
ror
pushf
ret
cmp
lea
dec
fsubs
sbb
adc
xor
mov
shrl
push
xchg
stos
pop
scas
lods
outsb
cs
mov
xchg
and
xor
imulb
cmpsb
rolb
loope
mov
mov
mov
sub
inc
je
push
or
out
invd
jne
inc
pop
aaa
jb,pt
xchg
jge
les
ret
insb
orl
loopne
loop
jmp
loop
jecxz
sbb
in
mov
xchg
insl
leave
pushf
pop
dec
out
ja
popf
imull
push
xchg
dec
pusha
inc
rcl
push
xchg
sub
push
pop
js
nop
fmull
mov
ret
rcr
pushf
mov
adc
ret
jbe
nop
ret
mov
lcall
mov
cmp
mov
cmp
pop
adc
cmpsb
test
pop
xchg
adc
cmpl
roll
das
mov
fidivl
pop
cli
pop
fs
enter
and
dec
daa
cmpsb
ja
daa
push
pop
and
and
push
pop
add
adc
sbb
movsb
fsubs
xchg
mov
pop
sahf
cmp
fildl
or
pop
pop
adc
mov
bound
loopne
mov
xor
inc
fnsave
cmp
sub
jecxz
sbb
cli
fs
clc
mov
and
or
pop
pushf
and
outsb
push
shrb
outsl
fisubrl
xorl
aad
xor
or
pop
pop
adc
call
mov
ljmp
lahf
rcll
cs
add
rorl
stc
sub
ret
mov
testl
pushw
in
jle
xchg
enter
jecxz
pop
push
xchg
add
xchg
test
ss
or
aas
sti
rcrb
mov
pop
pop
or
hlt
in
and
xchg
xchg
ss
out
imul
rcrb
jo
out
ret
pop
in
aam
adc
pop
enter
sbb
scas
outsl
cmp
ffree
xchg
movsb
in
xchg
addr16
adc
outsb
xor
push
mov
xor
xor
and
pop
lock
dec
or
jmp
ret
shll
sbb
jmp
ret
test
mov
lods
or
nop
sub
bound
repz
jne
mov
movsb
stc
mov
sub
inc
push
test
mulb
cld
pop
dec
mov
add
movsb
hlt
vprotw
outsb
mov
nop
out
mov
mov
std
aad
adc
nop
inc
stos
pop
ljmp
dec
arpl
call
mov
loopne
mov
jmp
fimull
aad
xor
or
cmp
xchg
or
xlat
xor
outsb
pop
jmp
cli
mov
fnstcw
jne
repz
push
jecxz
stc
pop
mov
sahf
out
jo
or
cmp
jne
adc
in
xor
push
xchg
shll
inc
mov
jecxz
mov
and
jne
sub
adc
outsl
or
loopne
cld
mov
mov
push
call
jecxz
imul
loope
inc
cli
jle
iret
inc
fdivp
inc
or
mov
jnp
sub
pop
pop
push
push
xor
cli
and
jb
pop
sahf
mov
xchg
out
inc
inc
mov
frstor
jno
dec
push
mov
push
fxch
adc
out
mov
popf
mov
bound
lcall
lcall
daa
cmpsb
cmp
sub
and
cs
jecxz
test
pop
in
das
nop
jge
xchg
inc
adc
mov
aad
adc
and
xchg
cld
add
mov
sbb
mov
int3
xchg
pop
stos
pop
jmp
clc
stos
jne
xlat
test
loope
cmp
inc
in
clc
add
mov
je
inc
jo
outsl
and
dec
dec
jg
out
dec
and
jg
mov
push
mov
shll
mov
cwtl
mov
shll
xor
cmpsl
jns
inc
subb
jmp
outsl
int3
outsl
loop
jns
lock
icebp
das
testl
xchg
mov
fldlg2
xor
jg
in
sub
movsl
pop
and
arpl
sahf
pop
je
dec
sahf
test
adc
lret
inc
jnp
lods
adc
mov
hlt
cmovge
sub
cmp
mov
popf
aas
lods
or
in
mov
insb
mul
repz
adc
loop
iret
mov
movsl
nop
mulb
sbb
xchg
sarl
dec
mov
cmp
mov
pop
je
notl
js
xchg
sarl
xorb
xchg
cmpsb
jp
scas
aaa
ret
insb
pushf
dec
mov
or
push
adc
add
sub
and
inc
mull
cmp
jbe
fisttpl
lods
adc
sub
sti
fildl
dec
fucomi
movsl
js
inc
daa
push
loope
mov
stos
ret
xchg
push
fistl
sub
fisubs
insl
lock
test
ss
in
dec
loope
jle
xor
stc
faddl
fsubs
rcrb
rorl
xchg
dec
jl
lret
xor
dec
pop
mov
push
or
mov
mov
jo
stc
test
insb
cli
adc
pop
lret
adc
mov
mov
leave
mov
fstpl
mov
movsl
aas
sub
rcll
dec
xchg
pop
ds
mov
mov
mov
leave
out
incl
mov
inc
jl
fisubrs
out
enter
test
int
xchg
cmp
stos
jg
add
mov
and
mov
hlt
int
nop
jecxz
test
mov
push
sarl
lods
mov
pop
lret
out
into
lea
adc
out
imul
lods
cmpsl
jae
jecxz
nop
pop
bound
popf
fadds
fildl
sub
sti
scas
dec
adc
subb
ret
cmp
imul
jmp
dec
rclb
std
ljmp
insb
push
stc
ret
cmp
sbb
or
push
xchg
or
pop
dec
mov
fstl
aam
pop
popf
gs
stos
xchg
or
and
lret
lods
pop
movsl
xor
lcall
or
inc
push
sbb
dec
mov
stc
lcall
outsb
clc
lret
pop
int3
shll
ljmp
jecxz
shlb
pop
or
nop
aaa
es
mov
fsubl
mov
dec
subb
inc
cmp
adc
daa
xchg
lea
xchg
inc
pop
sbb
or
ss
fcmovnbe
ret
pop
add
fiaddl
pop
stc
rcrb
push
cltd
addr16
xchg
cmp
ds
mov
jmp
loop
adcl
mov
cmp
movsl
or
adc
cltd
cmpsl
mov
cwtl
sbb
xchg
jge
loope,pn
out
add
lcall
lret
pop
dec
xor
mov
jo
adc
repz
push
mov
repz
into
jne
and
sub
cmp
inc
shrl
xor
fs
xor
inc
mov
sarl
insl
cltd
mov
ret
ds
sbb
add
sahf
loopne
cld
cltd
imul
pushf
lock
pop
push
or
mov
push
inc
pop
jnp
arpl
call
mov
sub
stc
leave
pushw
mov
mov
mov
mov
push
xchg
lods
je
push
roll
jg
xchg
inc
pushf
fwait
adc
mov
jae
lds
cld
aam
xor
sbb
and
mov
dec
imul
dec
or
xor
pop
mov
mov
in
push
test
out
push
data16
mov
sub
jnp
mov
hlt
testl
push
or
sbb
sub
mov
push
js
mov
and
and
push
cmp
push
xchg
push
sbb
push
mov
bound
mov
ss
andl
lock
notb
sub
dec
mull
sbb
pop
xchg
clc
jnp
jp
or
rorb
xchg
or
dec
mov
nop
rorb
int
into
push
mov
dec
fidivrl
out
in
mov
mov
int
cwtl
xor
mov
shll
lds
cmc
fcomip
out
lret
sarb
xchg
inc
dec
sub
xor
sub
aad
movsl
cmp
or
jno
jae
mov
mov
xchg
pop
test
jns
addr16
fdivrs
test
lea
dec
xor
enter
cld
fisubrl
xorb
sti
mov
jmp
into
daa
lcall
inc
xor
pop
mov
outsb
call
fcmovnb
lods
iret
sarb
ret
lea
repnz
jae
movsb
mov
jne
out
adc
mov
pushf
stos
and
std
and
mov
dec
jmp
test
cmp
mov
mov
test
nop
js
in
movsb
mov
ja
lea
or
roll
mov
cmp
cltd
jnp
mov
in
mov
add
jnp
jle
lods
rcrl
push
sub
push
xchg
inc
popf
jne
test
pop
int
shlb
aaa
push
in
popf
daa
sbb
out
mov
movsb
ja
cmpsb
pop
dec
call
jbe
cmp
fcmovbe
cmp
in
xchg
in
loopne
rcll
in
xchg
ds
push
je
inc
les
les
sbb
jmp
int3
sub
das
lea
nop
in
fcmove
inc
sbb
mov
cli
adc
dec
or
mov
cmp
arpl
leave
mov
fwait
sub
shrb
cli
sub
test
data16
leave
lret
int
cli
lret
imulb
pop
and
sbb
mov
mov
jl
inc
dec
dec
jp
mov
fldenv
cmp
dec
adc
xor
scas
mov
adc
sub
gs
pop
sbb
add
repz
xor
loop
mov
cmp
adc
xchg
add
adc
dec
mov
cwtl
test
lcall
inc
jo
cwtl
xor
mov
mov
mov
out
mov
sbb
jbe
mov
or
outsl
mov
add
fwait
scas
jne
shll
repnz
inc
dec
cmp
flds
hlt
daa
test
push
inc
cmp
lahf
jle
sbb
dec
add
lea
movsl
pop
push
cld
or
mov
adc
mov
push
in
ja
jmp
dec
sbb
es
int
cli
sti
mov
sti
mov
mov
je
call
and
sub
lret
or
add
xchg
shlb
xchg
test
cs
xchg
loop
mov
pop
mov
add
xor
rorl
pmullw
xchg
xor
ljmp
arpl
ret
add
mov
xlat
cmp
pop
ss
dec
push
daa
lea
ss
add
jbe
in
mov
popa
sbb
jg
pop
pop
test
pop
imul
add
sub
shrb
scas
push
or
divl
inc
popa
fcmovu
enter
adc
pop
enter
popf
push
cmp
xchg
mov
aaa
mov
push
push
jo
ror
push
mov
ret
fdivrl
mull
fwait
push
outsb
cltd
mov
add
or
faddl
adc
lcall
mov
inc
hlt
lock
fs
nop
jne
inc
or
dec
lcall
inc
push
mov
jecxz
xchg
aaa
inc
pop
lods
lock
in
mov
and
outsb
sbb
mov
dec
fs
push
xor
adc
sbb
and
sub
call
iret
adc
inc
jecxz
xchg
push
jp
xor
mov
fwait
cmp
adcl
cmp
daa
mov
jno
test
cltd
push
dec
imul
jge
cmc
and
addr16
cld
push
cmp
mov
push
xor
xor
add
xchg
ja
sbb
adc
sbb
insl
sahf
lret
mov
xor
pop
xor
int
sti
aam
cmp
xor
jl
add
sbb
dec
loop
and
jl
adc
add
pusha
fs
lds
shlw
aam
aas
jecxz
and
jmp
inc
fwait
xor
out
gs
push
sbb
aaa
xchg
imul
mov
in
daa
xor
test
mov
mov
jmp
mov
inc
push
ret
sbb
sub
sti
pop
xchg
push
pop
out
aad
imul
fildl
pushf
stos
test
or
mov
inc
pop
mov
std
sbb
jae
jbe
or
jl
xchg
push
pop
cmp
mov
test
imul
push
mov
dec
leave
fnstcw
cltd
push
or
cmpb
jl
lret
mov
mov
jle
neg
jnp
xchg
daa
mov
or
daa
les
push
push
adc
cmp
jnp
jb
popf
sub
jmp
push
and
mov
shll
push
sub
adc
xor
and
leave
pop
rolb
cwtl
ss
xor
dec
nop
mov
mov
cwtl
push
sets
jns
push
dec
jns
xor
dec
hlt
xchg
add
out
inc
cmpsb
inc
aad
stos
aas
loopne
ljmp
outsb
adc
mov
or
jge
movsl
ds
jg
inc
movl
mov
dec
fisttpll
mov
push
test
sahf
xchg
lret
sbb
cmp
test
pop
sbb
jle
pop
push
mov
pop
jg
jp
les
stos
sbb
std
jns
sbb
loope
jle
cwtl
arpl
stc
mov
out
cwtl
roll
mov
addr16
cmp
xor
insl
sub
ret
add
out
jg
pcmpgtd
cwtl
stc
sbb
push
push
jle
sti
adcl
int3
shl
fwait
arpl
movsb
ja
call
out
pop
jp
jg
mov
imul
pop
mov
lret
mov
push
cwtl
push
icebp
adc
addl
mov
movsl
adc
subl
cmp
mov
and
in
stos
mov
push
fucomp
scas
or
stos
push
mov
lcall
sub
les
mov
push
cmc
ret
fisubl
sbb
scas
stos
pop
cs
pop
or
addl
lahf
in
mov
clc
outsb
shll
ficomps
int
loop
cs
bound
adc
and
pop
lea
xor
outsl
arpl
stc
clc
std
push
lods
clc
out
and
ljmp
push
lret
add
adc
iret
fbld
dec
insl
mov
ret
and
call
aas
mov
add
xchg
movsl
inc
aad
mov
je
out
dec
xchg
mov
sbb
and
lret
and
jbe
test
dec
ds
js
mov
pop
inc
test
mov
fisubrl
jns
cwtl
xchg
lock
bound
cmp
sbb
push
or
add
pop
push
adc
or
xlat
mov
in
clc
cmpb
dec
pop
pop
clc
inc
mov
mov
nop
mov
std
icebp
idivb
jns
xor
pushaw
shl
dec
adc
jno
inc
cmc
mov
test
mov
roll
test
daa
cwtl
xchg
dec
dec
inc
or
mov
js
sub
cmp
lock
insl
sbb
cmp
fisubs
add
adc
xchg
and
jnp
jg
fistps
dec
sarl
aas
in
pop
cmp
fistl
pop
test
outsb
aam
outsb
xchg
mov
and
add
das
inc
sarb
adc
add
daa
test
and
mov
sub
daa
stos
daa
fsubs
fbld
push
add
jmp
icebp
popa
mov
or
cmp
fisubs
leave
or
dec
jne
stos
cmpsl
nop
sbb
jmp
mov
mov
int
xor
mov
fisubrs
pop
push
or
js
mov
jb
pusha
adc
std
in
dec
xchg
mov
andb
and
dec
jl
loopne
or
jg
sarl
sbb
rol
mov
aad
or
xchg
cmp
mov
cld
mov
add
aad
dec
negb
inc
je
lahf
aam
mov
jecxz
popa
out
jbe
mov
and
fwait
inc
xor
mov
sub
pop
cltd
imul
jnp
sahf
push
inc
pop
mov
hlt
mov
pop
mov
mov
ffree
lea
fwait
jg
inc
add
mov
jle
cmp
pop
jmp
mov
add
or
repnz
xor
add
loopne
test
cmp
push
mov
mov
cs
lcall
pop
xchg
ja
and
dec
add
pusha
jno
add
or
rep
push
mov
pop
or
test
push
adc
lretw
cmp
jns
leave
fmuls
xor
cltd
fs
jne
pop
arpl
and
xchg
inc
push
dec
xor
mov
dec
lea
daa
push
pop
nop
pop
push
cmp
add
hlt
cmp
mov
cmpsb
fdivs
fldl
ljmp
scas
xlat
xor
jp
mov
add
jns
ljmp
test
dec
testl
xor
cmp
push
sub
mov
xchg
shl
das
lret
and
xchg
add
movsl
add
dec
adc
lods
addb
xchg
imul
or
in
outsb
inc
aaa
or
push
addb
jmp
or
adc
sbb
int
pop
movsb
inc
ret
fcompl
sub
jmp
cmp
out
push
push
cmpsb
mov
jo
iret
inc
push
cmp
jl
mov
cltd
shll
xchg
lods
mov
outsl
fsubrs
cwtl
sbb
mov
out
and
pop
movsb
jno
cmp
cmpsl
mov
xor
push
sub
and
es
shrl
add
xor
in
mov
fldl
fildl
pop
popf
mov
das
ret
inc
pushf
enter
js
cmp
fsts
push
lret
popa
lods
ja
jle
dec
sahf
es
mov
jle
jle
aam
sbb
movsl
sbb
pop
and
fnstsw
mov
adc
enter
cmc
or
add
or
adc
push
mov
jbe
mov
jg
daa
jle
fistl
mov
adc
hlt
add
ret
dec
pop
inc
xor
dec
inc
mov
shrb
cmp
mov
mov
jl
std
aaa
test
stc
scas
and
or
mov
ss
mov
pop
mov
pandn
push
jo
fldl
mov
push
mov
test
out
xchg
pop
pop
cmpsb
in
nop
mov
adc
sbb
arpl
jecxz
jl
leave
xor
iret
push
and
lcall
mov
mov
push
mov
mov
in
and
lahf
jae
mov
adc
sub
xchg
dec
fisubs
add
shlb
movsb
cmp
icebp
test
fwait
inc
dec
push
or
pop
mov
sub
ljmp
sub
jbe
pop
ret
jle
adc
xor
mov
jecxz
xorl
enter
clc
or
arpl
bnd
mov
popa
push
call
stc
cmp
loopne
int3
ss
adc
adc
icebp
pop
cli
xchg
popa
hlt
cwtl
mov
sub
dec
and
jg
jbe
sbb
inc
push
decl
xor
sub
int
xor
leave
mov
jg
pushf
jmp
aad
jno
insb
adc
orb
add
xchg
std
mov
dec
mov
lret
xchg
lahf
mov
mov
mov
ss
mov
roll
in
jecxz
mov
mov
pushf
mov
dec
andl
sub
andb
xchg
xor
cmp
cld
push
and
fwait
pop
pop
out
push
fwait
pop
or
xor
pushw
repz
push
mov
push
or
cmc
xlat
jl,pt
adc
xchg
andl
mov
out
cmp
cs
div
lods
test
je
xor
iret
inc
add
sub
cmp
pop
xor
pop
jo
jp
loope
clc
push
aam
dec
ja
cmpsb
nop
mov
imul
repz
push
outsl
push
pop
andb
mov
sbb
jmp
xchg
and
mulb
mov
jmp
and
cmp
xor
les
imul
je
add
pop
imul
addr16
arpl
mov
in
dec
inc
fs
cltd
xor
mov
jno
movsl
shll
cmc
negl
adc
testb
sub
fnstenv
push
xchg
repnz
dec
imul
push
push
push
cmp
mov
in
sbb
mov
fdivr
sti
stos
int
ffreep
lret
test
in
jns
sub
inc
mov
or
pusha
add
pop
pop
scas
out
and
mov
inc
les
pop
out
xor
call
sbb
in
pop
xchg
jmp
push
push
push
inc
push
fisubl
out
mov
mov
int
popf
pushf
or
xchg
pop
loopne
stos
xor
add
mov
adc
pusha
push
mov
pushl
inc
push
sub
push
dec
add
mov
jnp
inc
cmc
insl
arpl
mov
in
add
testl
insl
jp
xor
inc
in
cli
pop
sub
jg
fildl
jne
pop
or
gs
fcos
sar
add
call
addb
pop
fucomi
arpl
call
pop
mov
sub
cmp
sbb
je
jle
pop
int
inc
fisubrl
out
mov
sbb
inc
les
cld
push
scas
or
idivl
jno
mov
mov
push
sbb
sub
and
xchg
adc
int
nop
pop
aas
popf
inc
loope
xchg
mov
dec
fdivs
bnd
xor
sbb
pop
rolb
pop
cmpsb
jle
pop
lret
hlt
ljmp
mov
cmp
lahf
dec
inc
in
aaa
ret
mov
cli
mov
test
insl
in
popa
lcall
add
inc
adc
aad
lcall
sub
and
orb
adc
xor
out
aas
dec
popw
out
aas
add
dec
nop
mov
popf
out
pop
xlat
cmp
fcomps
lret
sarl
xor
aam
push
out
sub
mov
in
jae
mov
imul
push
stos
push
and
cmpsb
pushf
mov
dec
insb
cmp
inc
stos
mov
subb
adc
xlat
call
out
adc
mov
outsl
icebp
jbe
mov
pop
sbb
fldenv
sub
loope
mov
mov
mov
xor
shlb
xor
clc
fsubs
enter
push
leave
and
xor
cwtl
movsl
cmp
rclb
jmp
repnz
pop
loope
jmp
cli
ret
push
clc
jns
leave
push
xor
jecxz
push
sbb
pop
ljmp
sbb
adc
es
fs
stos
adc
pop
sub
js
jge
pop
cmp
sti
fidivrs
adc
test
or
into
mov
iret
jecxz
jns
hlt
jno
fldl
imul
das
jb
stos
test
push
push
repz
ret
add
out
sub
add
xchg
lcall
mov
hlt
int3
outsb
jg
cli
mov
stc
and
test
loop
cmpsl
push
cmc
xlat
fwait
sbb
jns
dec
loopne
adc
repnz
jge
jle
jl
lds
lret
pop
and
mov
or
mov
xchg
push
popf
push
sbb
add
les
fcmovne
test
pop
xor
add
sarb
aam
mov
xchg
insb
lret
lret
jl
notb
sub
mov
jmp
mov
bound
dec
stc
imul
pop
adc
push
pop
adc
sbb
and
xor
xchg
jns
call
lcall
jg
icebp
lret
aas
cmp
ret
mov
jg
icebp
jmp
ss
insl
pop
sbb
ljmp
ss
mov
sbb
inc
pop
sub
sub
negl
inc
lret
or
test
and
jbe
jns
cmp
loop
shl
xchg
jb
mov
leave
push
cltd
jp
mov
jns
pop
dec
shrb
into
adc
mov
sbb
or
sysenter
push
cmp
sbb
add
pop
jp
fists
lock
inc
aad
dec
movsb
adc
lock
mov
out
adc
xchg
adc
adc
xchg
shl
jns
fs
mov
test
dec
mov
mov
cmpsb
shlb
xchg
sbb
outsl
cmp
stos
hlt
pop
add
negb
push
mov
mov
jnp
pop
jp
in
sub
xchg
mov
out
cltd
add
mov
shrb
std
dec
or
dec
scas
sahf
mov
pop
lods
clc
mov
cld
sbb
mov
mov
sub
dec
pop
adc
nop
add
xor
jecxz
js
mov
sbb
sbb
inc
sub
cwtl
aaa
push
xor
and
and
rcrb
aad
inc
bound
std
popl
dec
mov
test
mov
sbb
prefetchwt1
cmp
mov
xchg
rcll
push
imul
sbb
test
lods
movsb
xchg
enter
mov
mov
aam
in
iret
sub
adc
xor
data16
repz
pop
push
jns
xchg
jge
stc
sbb
rorb
mov
mov
sbb
into
inc
or
sbb
xchg
out
lret
dec
xchg
mov
adc
sbb
mov
adc
mov
adc
pop
mov
pop
xor
fs
jg
cmpsl
cld
out
sbb
add
mov
jnp,pn
ffree
add
xor
push
push
cwtl
test
rorb
mull
vxorps
jmp
int3
cmpsl
cmpsl
xor
jo
ljmp
inc
pop
jne
xor
sub
push
cmp
pop
pop
and
dec
inc
repnz
adc
sbb
hlt
aad
and
dec
mov
mov
rcll
cli
outsl
into
cmp
pop
nop
mov
hlt
pop
leave
sahf
or
cmpsl
fwait
pop
mov
pop
rcll
jmp
test
xchg
adc
movsl
popa
cmp
mov
or
push
fwait
imul
incl
pop
xor
popa
sub
test
aas
enter
fistpll
dec
mov
jl
arpl
cmp
lods
data16
std
pop
jns
dec
xor
dec
inc
das
jo
mov
aas
lds
xchg
mov
add
jl
push
mov
stc
jbe
std
bound
mov
pop
mul
es
and
cwtl
test
pop
adc
fdiv
clc
loop
lock
or
cli
pop
push
cmp
dec
fidivs
jns
dec
and
arpl
push
aas
jno
adc
sbb
jnp
cmp
mov
scas
dec
mov
push
jb
adcl
fs
sbb
stos
or
push
sub
pop
pop
in
out
push
dec
or
rorl
inc
movsb
jb
add
jl
pop
mov
push
or
stc
jmp
fwait
mov
outsb
mov
ja
dec
jge
mov
adc
lcall
inc
data16
sbb
test
and
jl
cli
push
push
ds
dec
push
call
movsl
in
incl
xchg
notl
call
mov
ss
adc
pop
lahf
sub
adc
jmp
mov
push
mov
inc
or
sbb
push
sarb
or
dec
out
cli
jge
push
rcl
pushf
push
dec
cli
xor
and
mov
sub
repz
mov
xchg
scas
rcrl
inc
jb
xlat
push
jne
mov
pop
adcb
out
cmp
and
popl
push
cmpb
rolb
sub
push
inc
js
scas
add
mov
bound
repnz
or
and
add
cmp
mov
scas
cmp
arpl
mov
xchg
mov
xchg
nop
pop
add
sub
insl
imul
repz
sahf
arpl
pop
test
or
loop
jae
lahf
lret
stos
dec
psubusb
sbb
insb
xor
cmpsb
jns
push
mov
sub
or
aad
jo
xor
and
imul
out
add
call
or
scas
xor
bound
into
jb
lcall
icebp
mov
mov
xor
test
pushl
imul
add
aam
mov
out
cs
in
sub
jg
sti
jmp
out
mov
popf
adc
mov
dec
xchg
inc
jne
inc
sahf
lods
cltd
dec
or
in
jno
push
stos
xchg
stc
arpl
out
repz
push
mov
jo
pop
jl
cs
aam
imull
push
cmp
and
jmp
subb
cmpsb
stos
push
imul
pop
pop
or
and
or
fidivs
mov
inc
mov
mov
jne
ret
insb
cmp
cs
js
push
pop
enter
push
adc
xchg
sbb
outsb
clc
xchg
pop
adc
sarb
popa
in
xor
adc
jbe
std
imul
add
xor
mov
sahf
adc
jle
cmp
xor
imul
mov
mov
mov
adc
loopne
iret
mov
push
cltd
mov
sbbl
sti
pop
jae
orl
cmp
adcl
dec
pop
or
in
pushf
and
movsb
push
out
jp
add
pop
incb
mov
loop
inc
outsl
xchg
shrl
push
push
jae
jb
imull
and
fxch
and
out
push
mov
add
aad
sub
mov
dec
add
insb
push
xchg
pushf
les
cmpsb
das
cmpb
adc
fistl
xor
cli
xchg
xchg
push
pop
mov
pop
pop
test
or
sbb
icebp
cltd
xchg
pop
push
dec
into
pop
adc
jb
jno
adc
out
xchg
roll
stos
mov
mov
fisttpll
pop
les
cmp
flds
lock
pop
xor
repnz
lcall
ljmp
mov
sub
fcmovnb
xor
mov
mov
lret
jbe
or
pop
ret
jecxz
jge
sbb
je,pt
cmp
arpl
pop
jae
jo
jg
in
xor
xor
scas
push
xchg
add
push
or
cli
inc
lcall
clc
sbb
sub
in
push
cmp
xchg
mov
int
fiaddl
pop
lcall
loopne
jp
xor
and
jb
cmp
fstpt
cwtl
sbb
stos
gs
mov
xor
mov
dec
das
jns
aas
xchg
jbe
and
cmp
push
xchg
or
mov
xor
add
cs
xor
lcall
lahf
scas
jp
sbb
cwtl
cli
outsl
fmulp
dec
fiaddl
jmp
jnp
cmc
add
sbb
add
adc
xor
hlt
mov
das
xor
flds
mov
push
mov
in
jg
sbb
insb
testl
mov
pop
pop
mov
lcall
jecxz
add
xchg
mov
inc
mov
mov
lea
mov
pop
call
mov
sbb
cwtl
adc
mov
lcall
sbb
add
mov
push
loope
cmp
push
push
das
add
or
sbb
mov
sub
ds
adcb
jns
jb
and
mov
xor
add
call
mulb
pop
dec
sub
xchg
cmpsb
movsl
xchg
outsb
gs
or
rcl
ja
sbb
xchg
fs
or
adc
dec
iret
or
inc
push
mov
cs
fwait
jne
add
push
lcall
loopne
push
mov
jns
pop
adc
sub
pop
lods
push
test
iret
sub
shrl
popf
add
mov
sub
push
loope
fbld
add
adc
jae
jno
rcr
daa
jbe
popf
adc
lret
les
mov
ss
xchg
in
adc
addb
shrb
aam
push
aad
movsl
mov
lods
scas
ss
fcos
push
inc
mov
jne
sub
push
stos
rclb
mov
sahf
gs
mov
or
test
xlat
jne
xchg
loopne
pop
cmp
lret
push
sbb
mov
clc
out
lcall
push
enter
loop
popa
testl
scas
in
push
idivl
stos
xchg
adc
clc
enter
gs
cmp
mov
xchg
cs
rol
lea
cs
in
int
out
mov
sbb
cmpsb
adcb
xchg
mov
ja
js
cli
jl
xchg
imul
iret
or
ds
xchg
push
cmp
adc
xlat
inc
rorb
xchg
add
pop
sti
inc
repnz
sub
jg
push
adc
mov
dec
into
cmp
je
data16
cmp
scas
repz
ret
jge
cmpsb
mov
in
shll
sbbl
lea
ror
movsl
imul
mov
out
adc
push
rclb
sbb
add
leave
xchg
out
cmpl
imul
pushf
pushf
int3
and
shlb
pop
cld
add
pmaxsw
and
je
or
loop
pop
sbb
fistpl
cmp
sub
adc
xor
mov
outsl
and
jnp
call
mov
jb
sub
mov
inc
mov
xchg
scas
cmc
loope
into
add
out
gs
cld
xchg
pusha
imul
sbb
mov
xchg
or
imul
fildll
jl
faddl
loopne
sbb
and
std
jl
cmp
fwait
xchg
lcall
pusha
xor
mov
dec
or
pop
mov
mov
cmp
fimuls
adc
xor
es
adc
lods
repz
in
fwait
or
push
in
pop
icebp
sahf
mov
std
sbbb
ret
ljmp
fbstp
notb
outsl
ss
and
cld
pop
shll
push
cmp
aas
pop
jmp
add
pop
dec
push
shrb
rcll
imul
and
or
out
pushf
pop
mov
mov
xor
ljmp
push
adc
xchg
push
mov
out
hlt
sub
xor
in
lahf
cmpb
mov
les
popf
rcr
popa
sbb
pop
call
lods
xor
cmp
mov
ds
jno
out
pop
insb
jp
loopne
repnz
xor
mov
lods
enter
mov
les
sbb
stos
jge
dec
cmpsl
not
bound
shrb
sbb
mov
xor
pushf
and
sub
xor
insb
xchg
mov
xchg
push
shl
outsl
inc
subl
dec
pop
mov
lret
outsl
movsb
push
sbb
mov
inc
test
lret
scas
push
scas
jg
jb
mov
mov
xchg
data16
imul
mov
call
add
loopne
push
pusha
add
dec
call
int3
add
and
pop
mov
js
cmp
mov
ja
bound
push
inc
sbb
aam
sti
xor
push
or
es
mov
leave
outsl
and
jl
xchg
imull
in
mov
in
xchg
push
xchg
jmp
sbb
xorb
sub
xchg
mov
mov
daa
inc
mov
push
ds
rcrl
push
or
mov
xchg
ja
or
stos
add
enter
lcall
pop
int
mov
sbb
aam
add
bound
dec
and
jnp
mov
icebp
cmp
cmc
inc
mov
js
shrb
dec
loop
dec
pop
in
fwait
mov
daa
pop
sbbb
movsl
inc
xchg
fidivs
push
sbb
shrb
pusha
xchg
addr16
push
fs
pop
in
mov
cmp
leave
test
jb
cltd
mov
aad
mov
movsb
inc
xchg
push
lahf
fs
push
cs
mov
loopne
lret
jae
mov
rolb
enter
test
pop
jne
aad
add
into
stc
add
inc
push
jo
loope
scas
pop
or
fildl
mov
in
or
loop
adc
xchg
dec
push
lret
fisubrl
mov
scas
dec
or
or
test
adc
insb
jnp
jmp
sbb
jnp
dec
xor
mov
adc
xor
xchg
movsb
out
cli
pop
in
mov
jno
clc
xchg
and
icebp
iret
and
popl
popa
sub
push
incl
repz
stos
pushw
repz
stc
jmp
mov
sbb
in
cmpsb
testl
daa
bound
cwtl
push
jge
adc
fldt
call
movsb
test
lret
std
lods
pop
imul
adc
adc
xorl
divb
daa
scas
push
inc
xchg
iret
data16
mov
jnp
rol
loopne
or
mov
mov
mov
inc
cmpsl
dec
dec
imul
mov
adc
out
xchg
or
out
fs
jne
jmp
jp
fiadds
xor
clc
push
mov
icebp
add
js
sub
clc
fisubs
mov
adc
stc
notl
or
cmp
enter
mov
push
cmpsl
int
aaa
push
stos
scas
mov
loop
inc
or
mov
in
sub
mov
pop
ja
and
push
sbb
adc
mov
mov
popa
dec
negb
out
cmp
fildl
daa
dec
xchg
mov
loope
pop
xchg
mov
notl
or
js
sbb
and
int3
sbb
lock
addr16
add
andl
jo
or
xchg
out
xor
dec
xchg
andl
sub
lcall
xor
push
mov
push
mov
adc
aaa
sub
adc
daa
xor
mov
sub
stos
jp
pop
push
outsb
imul
jno
adc
iret
dec
or
test
pop
and
sbb
fbld
xor
mov
and
subb
insl
call
xorl
and
lret
fcmovne
add
sub
mov
mov
jno
cmpb
dec
mov
mov
pop
jns
ret
call
fs
inc
cmp
jns
xchg
and
xchg
test
repnz
ss
xchg
and
out
mov
fs
adc
aaa
pop
jne
loop
fcoms
daa
movsl
scas
xlat
xchg
or
mov
push
xchg
hlt
and
cltd
mov
pop
outsl
cld
das
fcompl
inc
popf
push
in
push
and
and
bound
mov
fbstp
in
bound
shlb
nop
mov
jmp
add
push
jne
jp
cmp
adc
push
imul
ljmp
mov
arpl
lcallw
sbb
cwtl
inc
or
sub
std
ljmp
test
mov
mov
push
pop
divl
popa
mov
cmp
aam
mov
call
dec
xchg
repnz
addr16
ds
jbe
or
push
in
imul
das
sahf
pop
clc
mov
outsb
scas
std
pop
adc
lods
out
cmp
inc
sbb
jnp
mov
inc
stos
in
in
pushf
jbe
xor
inc
adc
aaa
test
jl
push
test
push
push
scas
push
call
adc
pop
mov
fadd
dec
repnz
dec
mov
adc
or
pop
jecxz
jge
mov
push
sbb
or
ds
mov
pop
scas
lock
push
test
mov
test
ja
add
sub
mov
mov
into
inc
push
pop
cwtl
jmp
cmc
mov
or
out
sub
mov
inc
mov
dec
stos
xor
jo
repnz
aam
add
pusha
jp
mov
loop
sahf
lret
jbe
add
leave
adc
pop
pop
jb
pop
inc
pop
push
and
pop
dec
xchg
nop
lret
fists
cmp
lods
dec
call
push
xor
hlt
es
fwait
push
test
dec
stos
daa
shrb
stos
mov
sbb
adc
and
push
popf
mov
mov
lret
movsb
fucomi
notl
xor
lahf
arpl
jl
xor
gs
fcmovu
and
fcomip
imul
jmp
imul
test
out
xor
xchg
jge
fisubrl
and
sub
mov
jb
push
adc
sub
push
lret
rcrb
adc
inc
insb
pop
fisttpl
push
mov
ja
mov
xchg
inc
inc
or
sub
sbb
push
int
inc
loop
push
popf
inc
mov
ret
push
pop
scas
mov
icebp
mov
inc
lods
aas
into
push
loopne
mov
push
outsl
mov
and
mov
xor
shlb
and
les
addr16
pop
sub
outsl
imul
aam
xor
scas
mov
std
push
stc
jge
xchg
iret
mov
aas
xchg
pop
lcall
shrl
jae
imul
fildll
xor
sbbl
add
mov
subb
pop
in
jo
gs
cmpsb
mov
shlb
bsr
outsb
dec
push
cmpsb
rcll
nop
inc
call
pusha
pop
aad
loop
into
xor
cmpsl
pop
loopne
movsl
sbb
rcrl
jno
rorl
sub
shr
cmp
mov
jns
pop
xlat
add
lods
pop
divl
push
dec
xchg
jns
pop
lcall
mov
jg
pop
push
jl
ljmp
subb
popf
mov
sbb
pop
dec
add
add
les
or
aas
adc
int
dec
gs
jne
mov
cmpsb
push
and
mov
test
fdiv
imul
cmp
jecxz
xchg
movsl
lods
mov
cmc
jle
xor
inc
pop
sub
rolb
and
imul
int3
and
scas
jno
and
aad
lods
fsts
clc
push
pop
pop
arpl
dec
aas
cmp
pusha
push
and
in
mov
pusha
fstp
inc
loope
mov
or
cmc
sub
and
repz
dec
ret
mov
scas
mov
fcoms
mov
adc
cmc
shrb
mov
out
cmp
xchg
xchg
leave
fwait
pop
imul
rcrl
xor
jae
add
add
rolb
mov
push
sub
aaa
lahf
mov
pop
outsl
push
lea
lahf
jge
stos
xchg
loop
rcl
fwait
dec
sbb
mov
fbld
push
dec
int3
dec
mov
mov
sbb
xchg
or
pop
dec
and
jle
cmpsl
pop
call
outsb
lret
cmp
cltd
andb
cwtl
in
cmp
sub
add
das
adc
int
inc
cmp
call
mov
xor
in
mov
stos
pop
popa
push
popf
out
fadd
and
or
mov
ljmp
bound
adc
aad
xchg
mov
push
or
fimuls
popa
mov
jo
enter
loop
cmp
add
ljmp
mov
push
push
cmp
in
mov
cmp
cltd
in
aad
pop
outsb
imul
in
cwtl
jne
scas
push
mov
adc
adc
outsl
daa
dec
push
ret
pop
pop
xor
or
mov
inc
dec
mov
xchg
sbb
test
pop
leave
fcomi
sbb
xchg
push
cmp
icebp
cmpsb
push
xor
jbe
nop
adc
dec
aam
inc
testb
inc
pushf
add
imul
sbb
sarl
mov
mov
into
adc
inc
in
fsubrs
out
test
push
ds
mov
subb
std
sub
pop
adcl
push
sbb
add
jp
insl
mov
mov
sti
pop
sub
inc
loop
push
sbb
hlt
lret
push
les
fucomip
adc
test
jae
or
xor
icebp
add
jp
movsb
outsl
mov
push
hlt
pop
push
cmc
int3
dec
cmpsl
jge
hlt
stos
lds
jmp
pop
cmp
pop
rclb
push
loope
adc
das
xchg
mov
jne
xchg
pop
jl
js
mov
ljmp
jbe
sub
pop
je
cmp
mov
ja
dec
movsl
repnz
ret
out
and
lds
out
mov
lcall
xor
dec
sbb
enter
or
cld
push
xchg
mov
fdivs
movsl
xor
mov
inc
cmp
rcll
into
mov
and
or
sbb
mov
popa
pop
out
jg
add
xor
xchg
xor
lock
arpl
ss
mov
test
or
xchg
in
push
lret
ds
shlb
stos
out
xchg
arpl
sti
jmp
shrb
hlt
add
popa
push
aas
xor
fsubs
dec
adcb
mov
pop
push
mov
mov
dec
sbb
mov
cmp
testl
fscale
xorb
adcl
sub
push
dec
lcall
sbb
repnz
add
sub
insb
mov
push
inc
and
mov
imul
jle
adc
mov
mov
stos
xchg
inc
add
mov
mov
fsubp
int
cmp
inc
clc
or
iret
sbb
addr16
jns
mov
mov
push
push
lahf
arpl
push
pop
and
jne
xlat
jecxz
shrb
or
loop
xlat
add
pusha
cltd
dec
push
arpl
nop
movb
aaa
std
enter
mov
cmp
push
daa
out
rcll
mov
push
divb
cmp
loop
repnz
pop
faddl
cmp
cmp
push
mov
stos
push
dec
fldl
push
jecxz
fiaddl
push
push
cwtl
ficompl
jecxz
mov
lahf
call
jo
sbb
sbbl
xor
iret
jae
loopne
push
aad
inc
cmp
or
cmpsb
sbbb
jle
test
insb
push
cmp
bound
gs
outsb
lahf
mov
scas
or
out
jecxz
mov
and
push
push
aad
dec
into
andb
inc
insb
adc
xor
in
jae
cmp
aas
pop
mov
arpl
insb
out
aam
or
cmc
call
aaa
outsb
in
inc
push
ljmp
stc
mov
in
ds
mov
jmp
sub
mov
cld
sub
push
pop
jae
outsb
cmp
xchg
lcall
pop
mov
loope
cmp
loop
cmpl
shl
les
pusha
lock
dec
add
lock
push
add
and
pushf
and
inc
xchg
push
fsubrl
movsl
fisttpll
pop
repnz
das
mov
and
pop
aam
or
adc
inc
mov
stos
mov
and
push
mov
idivl
push
pop
ficoml
jp
cld
lds
add
pop
xchg
cmpb
push
cld
mov
mov
lret
mov
loope
popf
add
fsub
rolb
jno
jp
imul
dec
ret
push
cmpsl
sub
mov
ljmp
repz
sti
mov
mov
sub
add
js
inc
add
std
stos
add
cmp
add
std
mov
scas
mov
mov
push
push
mov
ret
adc
fiadds
out
jp
mov
fiadds
pop
ret
or
adc
sub
adc
rclb
inc
loopne
scas
pop
rcll
fiaddl
pop
mov
pop
outsl
xor
jecxz
movsb
arpl
data16
lahf
jae
inc
cmp
xchg
das
push
gs
movsb
fistpl
cmp
xor
pusha
ljmp
movsb
sbb
sbb
pop
mov
mov
cmp
adc
aam
in
fsts
xor
shrb
rol
add
and
jecxz
sub
mov
dec
sbb
fwait
mov
mov
mov
pop
loopne
add
pop
cwtl
dec
iret
xor
push
imul
xchg
mov
xchg
test
jbe
repnz
cmp
ss
dec
adc
xor
imul
adc
mov
test
and
mov
into
ljmp
xor
aam
pop
cmpsb
pusha
or
adc
test
sub
sarb
in
fsubrl
ss
dec
and
in
inc
xchg
fst
mov
and
mov
pop
int3
cs
lea
xchg
jns
shrl
mov
or
cmovo
testl
pop
xchg
mov
scas
xor
std
cmp
sti
pop
push
gs
jp
das
jge
dec
stos
mov
mov
push
or
imul
fs
std
mov
popa
testl
repnz
mov
pop
mov
test
sbb
adc
imul
jne,pn
mov
fcoml
mov
iret
clc
adc
add
sub
mov
dec
lock
in
fiaddl
xchg
adc
cld
sahf
pop
addr16
mov
lret
dec
pop
rcrl
outsl
fldenv
adc
xchg
and
mov
sub
mov
outsb
daa
mov
mov
sub
les
xchg
xchg
repnz
shlb
fnstenv
popf
mov
adc
mov
test
cli
mov
int
sbb
insb
out
andl
fiadds
push
or
xor
pop
push
mov
sbb
mov
ljmp
lcall
xor
mov
jno
sbb
or
sbb
mov
icebp
fcoml
cmp
push
mov
cmpsb
mov
ljmp
shll
push
out
lcall
or
ja
sbb
loopne
scas
pop
into
je
jae
push
mov
shrl
fisubrl
and
scas
dec
jecxz
mov
add
cltd
xchg
and
mov
inc
mov
jl
inc
lahf
jg
test
ja
lret
popa
or
adc
icebp
lods
adc
nop
popf
xchg
sub
inc
adc
dec
xchg
sbb
mov
mov
sub
sahf
je
push
lods
sahf
inc
lods
inc
xchg
popf
std
int3
movsl
pop
xor
mov
push
mov
jo
repnz
push
lahf
push
sub
sub
cmp
cltd
mov
sbb
loope
xchg
in
sub
mov
add
les
lods
insb
or
sti
xchg
push
push
mov
aad
cmpsb
pushf
sbb
mov
adc
cmpsb
xlat
loopne
jl
ljmp
stos
subb
daa
stos
cmp
push
add
mov
std
out
push
or
cwtl
ja
mov
bound
mov
div
pop
idiv
cmpsl
push
ss
pop
pushf
fstp
xor
pusha
stc
cmpl
xlat
es
mov
aas
dec
mov
pop
inc
test
sub
mov
loop
sub
pop
test
shl
and
test
arpl
cltd
stos
dec
adc
dec
or
inc
cmp
ja
inc
dec
pop
das
cmp
adc
xlat
rclb
shrb
push
pop
ja
stc
xlat
into
and
movsb
ljmp
cwtl
dec
jge
add
loop
sbb
add
cmp
jo
sbb
hlt
push
sub
sub
push
sub
xor
popf
out
mulb
mov
mov
out
xchg
aas
leave
cltd
sti
ljmp
pop
mov
or
imul
jg
push
push
iret
out
pop
dec
adc
rcr
into
in
daa
and
sti
or
loopne
or
shrb
cmp
addr16
inc
test
dec
dec
adcl
fcomps
pop
lret
cmp
dec
jecxz
imul
lret
pop
in
in
cmpsb
ds
es
cmove
adc
shll
in
cmpl
jmp
push
sbb
pop
andb
lods
inc
inc
pop
movsl
add
push
shrl
aas
inc
cli
lods
fstl
push
gs
add
pop
popf
dec
xchg
loope
push
mov
stos
repnz
movsb
jp
aaa
sbb
js
pop
test
push
adc
out
pop
xchg
ds
cmpw
sbb
mov
push
push
rcrb
fisubs
andb
fldt
inc
popf
cli
or
mov
lahf
leave
ljmp
test
test
cmp
or
fs
not
jnp
or
in
shrb
shl
mov
daa
adc
xor
and
enter
cmp
jae
jae
jg
mov
dec
push
stos
in
push
push
pop
js
mov
xchg
movsb
or
push
mov
or
jp
out
pop
sbb
stos
jne
arpl
lcall
pop
inc
inc
jp
or
fwait
inc
pop
xor
push
xchg
pop
sub
mov
pushf
pop
enter
lahf
add
push
push
cmp
lds
lods
mov
pusha
inc
les
fists
mov
sub
pop
lods
outsl
xor
sbb
lea
test
sbb
mov
ljmp
or
nop
shr
lret
adc
push
cld
lds
xchg
cmpsl
movsb
sbb
and
jae
cmp
lret
push
stos
lcall
lahf
jp
dec
out
jmp
dec
jns
xor
push
mov
addr16
mov
sub
cmp
shrl
add
xor
fisubrl
loope
xor
aam
dec
out
push
mov
adc
xchg
lret
lcall
stos
nop
xor
clc
imul
and
dec
repnz
outsl
lcall
mov
mov
sub
xchg
popf
fs
cmp
jle
stc
dec
jno
mov
sahf
jmp
js
les
jae
mov
adc
dec
mov
xor
test
inc
jg
pop
dec
mov
dec
scas
dec
mov
shlb
stc
push
jg
nop
cmp
add
dec
cmpsl
and
and
filds
or
sub
xchg
jl
jp
aaa
cltd
mov
or
sub
inc
arpl
xor
sti
decb
sub
into
push
sub
adc
insb
gs
outsl
add
popf
cld
lds
ja
xor
orb
mov
mov
dec
les
repz
mov
shl
and
stos
pop
frstor
dec
mov
pop
sub
je
out
sbb
push
cmp
adc
ljmp
shl
xchg
pushl
rorb
cmp
pop
cli
or
fwait
aas
and
xor
stos
or
int
loope
and
xchg
or
sub
rcrl
cmpsb
mov
mov
xor
pop
dec
pop
mov
jbe
mov
hlt
xor
clc
js
pushf
adc
repz
mov
cmpsl
inc
data16
pop
ja
mov
addr16
xchg
xchg
pop
lcall
ret
mov
int3
push
insb
bound
fimull
je
fwait
mov
orl
repz
adc
pop
dec
mov
mov
mov
jo
cmp
in
dec
cmpsb
test
cltd
lret
mov
fisttps
popf
arpl
pop
popl
and
push
pop
sti
cs
inc
mov
push
pop
jne
cli
fwait
shl
inc
pop
mull
test
xor
loope
outsl
arpl
mov
and
push
xlat
pop
shrl
add
mov
or
mov
pushf
loopne
dec
cmp
rorl
mov
mov
sbbb
jmp
mov
xlat
mov
mov
fisttpll
repnz
out
jbe
xchg
or
loopne
jbe
push
and
xor
add
pop
ret
loopne
loope
jne
mov
lods
jl
mov
jle
ljmp
ret
cwtl
jne
int3
fisubrl
add
stos
jecxz
incb
icebp
xlat
mov
shlb
pop
dec
flds
das
push
cmpsl
lds
out
push
iret
jnp
push
mov
or
pop
jno
lret
cmpsl
mov
pop
adc
xor
cld
dec
push
lods
orb
dec
negl
dec
mov
cmp
mov
stos
sub
mov
push
popf
jg
xchg
inc
imul
pop
stos
rcl
incb
cmpsl
in
cmp
add
cmp
mov
insl
xchg
mov
stos
out
inc
mov
sbb
push
cmp
xor
movsb
inc
cwtl
shrb
pop
mov
jne
jno
js
mov
pop
fcompl
jb
pop
mov
sbb
mov
ljmp
cmpsb
push
cwtl
cmp
std
int
mov
movsl
cmp
test
and
or
add
adc
pusha
xchg
stc
fstl
push
cmp
xchg
lods
xchg
adc
in
test
and
xor
add
lods
inc
sub
and
repz
or
xchg
negb
and
dec
cmp
divl
nop
push
aas
enter
dec
push
cmp
addr16
jo
pop
aas
sub
dec
inc
or
ret
dec
sub
popl
cmp
mov
push
inc
rcr
ret
jp
sub
push
push
fcmovbe
xchg
or
push
mov
add
sub
pop
jle
addr16
dec
insl
out
pushw
fstl
repnz
inc
mov
cmp
mov
add
les
add
rolb
mov
add
xlat
test
lods
sbbb
jbe
faddp
fnstcw
adc
js
test
add
cmp
aaa
pop
mov
stc
sub
in
inc
mov
pop
mov
adc
pop
dec
rolb
mov
add
add
push
pop
adc
lods
jecxz
lahf
ret
jae
cmc
clc
stos
loopne
dec
mov
sbb
fsub
inc
imul
shlb
jno
imul
and
dec
mov
mov
inc
aad
mov
xor
dec
ret
pop
inc
pop
fwait
stc
cmp
sub
jbe
mov
push
and
pushf
movsl
aad
filds
dec
cmp
in
test
addr16
sub
sti
pop
stos
fstp
fnstenv
adc
jno
mov
lahf
pop
rcrb
scas
sbb
cli
sbb
bound
sbb
xchg
ds
xchg
mov
cmpsl
or
dec
test
decl
orb
xchg
mov
je
test
inc
adc
lock
lods
lods
push
and
inc
sub
push
cld
scas
jno
mov
jne
xchg
xchg
test
shlb
mov
adc
jg
mov
dec
push
dec
and
or
adc
jo
xchg
arpl
mov
push
cmp
pop
aad
movsl
arpl
pushl
adc
pop
inc
cld
nop
mov
sbbl
push
cmp
mov
leave
mov
sbb
mov
pop
and
or
jg
dec
cmpl
cld
pop
js
mov
jmp
rcrl
inc
and
out
adc
push
push
scas
xchg
mov
sahf
push
bnd
movsb
jecxz
roll
xor
sub
sbbl
xchg
clc
jl
scas
es
push
mov
mov
mov
mov
daa
cs
or
xchg
pop
in
fstps
outsl
mov
test
je
ja
les
test
sub
ret
icebp
dec
cmp
test
in
mov
xchg
arpl
adc
adc
mov
mov
fdivs
add
sub
xchg
insb
fptan
ret
lcall
add
ja
push
pop
fisubrs
rol
jecxz
adc
push
addr16
xchg
mov
cmp
mov
jo
sarb
sbb
pop
push
ljmp
inc
stc
fiaddl
pop
adc
pop
imul
pop
sub
mov
sub
mov
xchg
fistpl
stos
cmpsl
lahf
dec
scas
stc
and
lret
xchg
loopne
mov
pusha
daa
in
cwtl
fwait
push
test
jno
dec
and
ss
or
inc
sbb
xacquire
or
adc
dec
repnz
push
or
sub
fstps
mov
aaa
lahf
mov
mov
mov
xchg
fidivrl
sbb
mov
or
cmpb
scas
sub
movsl
pop
sbb
popf
fs
rolb
mov
aaa
mov
push
fldl
in
sub
inc
dec
mov
sbb
popa
adc
push
fcomps
inc
xchg
arpl
or
test
popa
pop
push
pushf
fwait
idiv
add
fcmovnu
nop
rcrl
cmpsl
jae
sahf
pop
cmpsb
addr16
fsubs
cltd
push
jp
inc
mov
idivl
add
hlt
out
movsl
push
mov
testl
cwtl
mov
insb
sbbl
mov
sub
cmp
fldenv
sarb
push
in
cmp
mov
je
std
data16
sbb
mov
pop
xor
push
sbb
jb
in
insb
sub
iret
mov
nop
and
pop
arpl
inc
sub
cmp
lahf
xchg
or
lock
mov
mov
fnstenv
or
in
imul
and
jecxz
and
les
ja
xchg
fisubl
sub
lcall
cmp
scas
loop
mov
inc
pop
insb
inc
into
jmp
mov
lret
lds
add
jmp
add
loop
lds
or
roll
aad
inc
pop
in
pop
movsb
and
test
pop
leave
mov
stos
adc
out
sbb
mov
mov
leave
inc
cli
cmc
pusha
adc
push
push
fists
add
iret
in
adc
dec
in
or
or
shrb
pop
jl
xor
out
dec
or
xchg
es
das
cmp
je
xchg
or
int
cli
sub
aad
inc
dec
cmc
shl
mov
lret
sbb
loope
jo
loopne
lods
lret
test
addb
pop
jge
sbb
mov
adcl
fs
xchg
fwait
sbb
sub
mov
out
jle
push
xor
mov
mov
mov
pop
popa
das
ret
add
mov
dec
imul
pop
mov
cmp
dec
xchg
movsb
ret
incl
loopne
es
int
adc
dec
push
add
fidivl
xor
dec
shl
ret
cmpsl
mov
ret
inc
fistl
loopne
mov
mov
pop
imul
nopl
xor
in
int
pop
sub
stos
cmpb
into
decl
test
mov
daa
mov
mov
xchg
push
inc
or
jbe
sbb
cmc
out
sbb
filds
in
mov
mov
xchg
les
jmp
add
retw
sub
sbb
lcall
jecxz
dec
out
or
mov
push
fldcw
mov
xchg
int3
or
nop
dec
test
sub
sub
mov
aam
or
inc
mov
aaa
sbb
mov
stc
fiadds
andl
cmc
cld
jo
xlat
push
push
push
or
jge
xor
js
sub
jmp
mov
mov
cmp
push
fsubr
mov
and
ja
sahf
mov
data16
pop
cmp
xchg
call
rcrb
mov
dec
lods
pop
push
fs
mov
lcall
xchg
out
push
repnz
or
popf
stos
hlt
cmp
dec
jnp
insl
sbb
pushf
adc
mov
lea
fwait
out
incb
mov
and
push
and
sub
sub
add
fildl
inc
xchg
dec
popa
aas
loope
dec
movsb
adc
sbb
jno
ds
sbb
push
push
inc
push
mov
dec
mov
out
ja
lods
loope
push
shl
push
les
or
sbb
sbb
stos
xchg
add
push
mov
insb
push
xor
std
mov
pop
ret
loopne
mov
aad
loopne
pop
scas
call
jne
pop
outsb
sbb
inc
arpl
mov
cmp
nop
cmp
andl
add
push
xor
inc
dec
inc
in
jg
dec
testl
lret
js
ret
sub
dec
mov
lahf
repz
inc
cmp
mov
mov
or
je
hlt
fcoml
adc
mov
mov
jp
sbb
push
mov
pop
dec
jl
hlt
imul
jne
or
jecxz
mov
bound
lods
imul
dec
popf
dec
sub
rcrl
cmp
lds
push
into
lea
and
iret
lods
ja
xor
jl
push
pushf
pop
cltd
std
daa
cli
out
sub
pop
jne
stos
adc
xchg
repz
call
rcl
add
nop
int3
adc
movsl
lahf
ja
int3
jge
add
sbb
imul
jno
jnp
jmp
aam
arpl
mov
add
mov
adc
adc
xchg
cwtl
mov
iret
out
xchg
dec
loop
mov
push
mov
sub
icebp
add
addl
stc
lea
mov
dec
dec
xor
adc
test
jne
les
imulb
std
lds
into
xor
xor
pop
inc
push
cwtl
cmp
test
pop
sbb
popa
xchg
loopne
or
jb
mov
push
add
and
dec
test
daa
in
ja
and
inc
push
push
cmpsb
and
aaa
sbb
mov
or
jno
repnz
fistpl
or
mov
xor
dec
insb
inc
lea
cld
pop
mov
shlb
or
loop
bnd
aam
cltd
lcall
test
pusha
mov
sub
cmpsl
inc
xchg
lret
dec
pop
jge
sbb
sbb
inc
inc
add
add
cmpsb
mov
leave
in
pop
sbb
in
movsb
andb
sbb
lods
pop
pusha
pop
fmul
xor
scas
jb
addr16
pop
sti
loop
dec
insb
rol
int3
mov
fcompl
loope
scas
lods
test
nop
xor
mov
jl
mov
stos
xor
add
mov
dec
push
daa
jmp
or
cli
or
sbb
sub
mov
enter
hlt
dec
jle
mov
sbb
mov
iret
cli
push
xchg
fisubrl
mov
xchg
loope
xlat
jns
mov
sbb
imul
push
test
cmc
pop
cmpsl
lea
lcall
pop
xor
jecxz
loop
jge
mov
or
pop
jne
cs
mov
add
aas
aas
mov
ja
sub
sbb
or
sbb
fistpll
and
or
loop
mov
std
dec
xchg
notl
jmp
xchg
fbld
xchg
out
in
mov
ja
add
int
inc
lods
out
insb
imul
addr16
cwtl
loope
icebp
ds
test
fdivrl
pop
cmc
inc
iret
adc
push
sub
jl
int
sub
stc
jp
pop
pop
cmp
push
add
arpl
jbe
jg
sbb
push
int
clc
lock
xchg
push
xor
mov
out
lret
inc
in
adc
sbb
aad
xor
jecxz
bound
in
mov
jb
popf
jmp
hlt
cmp
loop
dec
cmc
sub
sbb
xchg
mov
lds
and
stos
adc
test
mov
enter
arpl
push
pop
fdivs
in
loopne
or
lcall
push
adc
mov
push
dec
pushf
push
inc
inc
sbb
fsubrl
fidivrs
pop
mov
lcall
mov
scas
add
repnz
pop
fidivrl
in
xchg
and
addb
push
mov
pop
and
cmp
dec
sub
and
xor
xchg
sahf
cmp
mov
mov
cmpsl
pusha
push
jnp
pop
push
hlt
fxch
push
lock
dec
pushf
shl
popa
fcmovbe
mov
dec
js
jnp
lock
mov
jbe
sbb
dec
sbb
sbb
mov
lret
cmpsw
neg
and
rorl
sahf
test
mov
shrl
inc
sarl
xor
pop
pop
or
insl
inc
fs
cmp
sub
pop
cmpsb
test
cmp
inc
xchg
gs
xlat
inc
movsl
int3
add
imul
repz
sub
sub
fimull
inc
xchg
pop
pop
ss
rolb
adc
and
pop
lods
sti
stos
mov
je
push
repz
fcompp
aaa
fnstcw
add
rorb
and
cmp
fiadds
xor
add
xchg
jns
lahf
rorb
xorl
jmp
adc
cmp
add
mov
mov
push
jbe
push
mov
push
pop
mov
repnz
out
imulb
inc
dec
push
mov
or
es
ret
daa
xor
fmulp
add
xor
popa
sbb
mulb
mov
and
mov
fucomi
sub
ret
out
rorl
popf
adc
std
sar
test
std
mov
lock
addl
cmp
sahf
and
xchg
push
sbb
addr16
rcr
jmp
mov
test
std
iret
mov
dec
dec
call
in
mov
ja
push
mov
or
adc
lret
arpl
lods
fdiv
and
sahf
lock
loop
leave
push
sub
jbe
mov
pop
lret
repz
mov
xor
push
mov
pop
and
pop
arpl
jp
cld
add
call
fildll
outsb
push
lcall
pop
repz
jge
loope
jo
jg
xchg
push
xor
bound
sub
divl
insb
pop
mov
enter
loope
push
xorl
shr
fwait
je
rol
pop
fdivl
loope
shl
mov
jne
xchg
cs
rcl
mov
add
rcr
mov
loop
hlt
adc
stos
fdivr
test
sbb
pusha
and
and
subl
mov
call
adc
hlt
loopne
aad
pop
cwtl
adc
shll
repnz
or
pop
sahf
xchg
inc
negb
or
sub
mov
pop
shl
out
call
mov
mov
movsb
es
push
push
add
mov
sti
es
lods
out
xchg
ret
leave
aam
in
pusha
or
pop
and
stos
mov
cmpsl
add
das
xor
push
ss
add
inc
mov
jle
std
sbb
lds
arpl
mov
jne
test
mov
jp
in
adc
cs
and
ja
movsb
iret
jae
push
into
out
ret
mov
arpl
cmp
aaa
lret
mov
add
fcoml
jecxz
sub
mov
mov
loopne
and
xor
bound
pop
mov
sbb
cli
bound
ljmp
arpl
adc
or
cld
testb
and
xchg
push
pop
mov
xchg
or
pop
mov
cmc
push
inc
daa
and
fs
fnstcw
test
sub
or
leave
out
icebp
jmp
push
push
and
movsl
movsb
dec
push
pop
fcmove
mov
sub
repnz
jp
jmp
cmp
pop
and
xchg
hlt
push
mov
out
inc
int
jge
lock
jl
pop
cmpsl
pop
popf
push
dec
jmp
addr16
jg
jb
push
test
push
imul
or
lret
loope
adc
shlb
pushl
cmc
pop
cmp
jo
lret
call
adc
data16
pop
inc
std
sub
fiaddl
push
stos
push
and
pop
sarl
jns
mov
mov
xadd
stos
or
push
sub
jp
xchg
pop
js
stc
mov
outsb
pushw
jnp
jae
jae
adc
jg
cmpsb
decb
xchg
daa
popf
jcxz
xchg
mov
icebp
adc
mov
sar
dec
leave
sub
mov
cmp
mov
add
fwait
sbb
out
addr16
add
add
mov
fldl2t
dec
imul
xor
xchg
cmp
jbe
mov
push
roll
lahf
outsl
insl
sarb
or
ret
jle
jl
gs
cwtl
je
dec
roll
aad
sar
lods
pop
fcmovnu
roll
in
mov
pusha
lret
lret
mov
test
xor
rolb
stc
mov
pop
sar
std
addr16
cld
rclb
adc
xchg
daa
std
ficoml
iret
jo
jg
adc
lret
cli
clc
xchg
push
jge
jo
aam
inc
mov
jge
fdivl
or
fiadds
sahf
ljmp
mov
aaa
push
cmp
pop
xor
sbb
imul
addl
cmc
push
adcb
cmpsl
jl
adcb
pop
and
push
mov
adc
daa
es
cs
fisttps
push
fisubrs
aaa
jg
iret
push
je
mov
add
into
aad
std
mov
inc
add
inc
jl
pop
push
cld
fsubrp
lock
movsb
mov
pop
leave
fucomi
jae
push
mov
jmp
push
stos
enter
xchg
inc
aas
ljmp
sbb
into
push
cmp
push
dec
orb
lahf
push
cmp
or
adc
xchg
fmul
lods
xchg
lock
and
mov
mov
popf
xor
fcomip
or
inc
fistpl
or
push
rcrl
std
sub
inc
sbb
popf
out
jmp
xchg
and
xchg
les
pushf
lods
cmpsb
enter
into
outsb
pop
outsl
scas
enter
mov
cmp
pushf
jl
lret
rcll
inc
js
test
movsl
push
jo
gs
je
pushf
dec
and
bound
cmpsb
pusha
js
dec
inc
stos
jne
xchg
shlb
orb
shrb
inc
incb
jbe
sbb
or
je
inc
lock
add
ret
fcomi
loope
sbb
int3
xchg
adc
loope
push
jo
inc
pushf
inc
hlt
in
dec
and
and
push
pop
adc
mulb
imul
dec
jne
push
jae
inc
xchg
lods
xchg
jo
sub
sbb
pop
loope
int
imul
xchg
in
data16
jp
out
pop
addl
pop
sahf
sbb
cmpsl
mov
into
add
sub
or
push
mov
inc
add
inc
sbb
sbb
into
loopne
mov
lea
loop
jne
test
mov
push
popa
filds
dec
mov
mov
lret
test
cs
insb
jmp
divl
mov
push
xor
inc
sub
sbb
aaa
mov
jno
lret
cmp
lods
cli
sbb
xlat
jo
xchg
test
arpl
das
inc
mov
push
movsb
adc
xor
test
insb
xor
dec
jnp
cmp
and
push
push
shll
cs
push
jne
fildll
sub
shlb
in
movsb
and
and
pop
dec
arpl
loop
mov
popf
insb
jno
call
and
lahf
pop
cmpsl
pop
or
jecxz
mov
pop
gs
sub
repz
sbb
push
xor
das
xchg
das
aad
aad
imul
psrad
xchg
aaa
push
out
decb
jge
lret
int3
scas
mov
add
out
jecxz
out
fildl
stc
pusha
lods
mov
inc
lock
flds
adc
add
in
lret
jns
scas
call
dec
out
idivl
lret
mov
frstor
std
iret
les
jl
adcb
mov
add
jge
jmp
roll
pop
ja
scas
sti
faddl
cli
jns
sbb
ffreep
push
push
adc
ret
jmp
addr16
cmp
dec
stos
pop
pusha
jmp
push
push
aas
test
sarl
pushf
pushf
jl
dec
fcoms
in
dec
pop
rorb
add
lods
addl
int
test
cli
icebp
imul
inc
sub
popf
outsl
pop
lds
shrb
enter
pop
aad
lret
adc
enter
negb
fsubrp
mov
dec
outsl
test
ljmp
push
xchg
cld
add
xchg
rcll
dec
mov
sub
in
addb
mov
sub
pop
and
dec
cmp
aas
push
jns
and
pop
adc
dec
imul
dec
mov
push
mul
mov
fmul
stos
mov
pop
xchg
adc
mov
lock
fisubrl
push
dec
xor
hlt
push
dec
dec
dec
and
jp
mov
sbb
sbb
repz
lret
sub
pop
mov
int3
adc
je
adcb
mov
jl
xorl
dec
popf
or
leave
and
repnz
je
push
loopne
mov
pop
sarb
xchg
jno
mov
mov
ret
rorl
sbbl
ljmp
mov
mov
les
sub
dec
pop
cltd
mov
testl
scas
cmp
rcrb
lret
jge
sarb
cmp
aas
mov
xchg
xor
ret
mov
jmp
cmp
sub
or
and
movsl
pop
push
js
pop
stos
roll
popa
mov
dec
cmp
dec
or
and
mov
inc
lods
pop
bound
into
mov
or
je
ret
mov
mov
mov
das
push
add
ret
outsb
sti
std
in
adc
sbb
sub
lcall
jns
mov
sarl
iret
ficompl
rcll
add
pop
imul
lahf
mov
leave
jp
and
jp
or
in
icebp
dec
adc
lds
mov
je
sbb
jmp
addb
mov
mov
outsb
aad
mov
lret
jle
inc
ret
add
sahf
or
data16
push
stos
or
add
aaa
add
pop
mov
cwtl
leave
jg
and
enter
loop
lret
mov
ss
jns
nop
ficompl
icebp
dec
jo
xor
jnp
mov
xor
xor
lret
add
movsb
daa
jmp
shl
or
jb
cmp
insl
mov
sbb
push
stos
sbb
fistpll
xchg
loope
pusha
insb
mov
xchg
jnp
mov
fcmovu
mov
push
out
pop
push
ret
ds
lock
sbb
ljmp
mov
sarl
cmc
insl
jnp
inc
sbb
or
sub
popf
adc
sbb
mov
nop
mov
pusha
lret
loop
push
mov
xorb
scas
out
aas
rcll
into
xor
bound
fstl
ret
jl
push
ja
cmpsl
jbe
dec
repz
rcr
mov
fsubrs
shll
rcrb
push
jnp
cmp
fmuls
cmpsb
shrl
adc
or
loop
notb
fimull
sbb
test
or
in
insb
movsb
xchg
repnz
push
loop
aas
pop
inc
lret
outsl
popf
mov
loop
dec
or
cmp
in
dec
or
and
xchg
cmp
incl
ret
gs
stos
adc
sbb
rcl
dec
and
lret
popa
and
fstpl
inc
add
adc
lahf
fistpll
jp
ds
call
inc
push
pop
jae
cld
enter
lock
insl
pand
mov
push
cwtl
cmpsb
movsb
fcmovnbe
xchg
push
add
rol
mov
xor
adc
movsb
pop
lods
ja
insl
sarb
dec
jo
cmp
fstpt
adc
xor
movsl
adc
ja
jl
push
sarb
jp
sbb
in
loop
imul
mov
mov
lea
jle
fdivl
jne
adc
rorb
dec
out
nop
cmp
fwait
mov
adc
xchg
lock
scas
stc
loope
shrb
arpl
sahf
sub
jl
mov
out
inc
and
mov
mov
pop
or
ljmp
or
cmp
dec
int
push
bnd
push
fstps
push
adc
insl
xchg
imul
shr
cmpsb
or
ror
loopne
xchg
lcall
mov
aas
push
push
adc
outsl
repnz
outsl
lods
mov
jle
aas
add
add
scas
mov
nop
dec
sbb
jbe
xchg
cmpsb
std
mov
fdiv
addb
es
mov
das
mov
aam
add
std
dec
rorl
notl
jl
mov
mov
xor
adc
and
jne
out
mov
hlt
stos
cld
icebp
rolb
jecxz
gs
mov
in
fldl
movsl
xchg
mov
sbb
repz
adc
ret
jne
orb
popf
es
adc
cli
push
mov
jns
sub
shrl
cmp
mov
shll
dec
xchg
xor
es
mov
cmpsb
jnp
fiaddl
test
xchg
aad
add
adc
xor
fucomi
adc
or
fwait
push
test
dec
shll
fstpl
stos
adc
push
xchg
dec
pop
inc
sub
and
pop
mov
sbb
push
out
cmpb
int
jns
jge
add
lret
cmp
xor
jle
adc
ficompl
outsb
xchg
cs
push
insl
or
popa
jae
jbe
std
mov
rol
lea
icebp
cld
adc
mov
aas
inc
xor
sub
xchg
mov
push
and
sub
xchg
jecxz
fadds
and
je
mov
fwait
adc
sahf
in
pop
xchg
xor
xor
nop
lds
test
mov
sarl
fsubs
lea
dec
dec
xchg
cmp
mov
inc
loope
movsb
xchg
sahf
insb
xchg
dec
inc
imul
lcall
dec
mov
cltd
push
popf
pop
fwait
jge
outsb
and
rorb
dec
cmp
push
pop
xor
loope
test
add
mov
data16
pop
gs
jae
xchg
mov
enter
int
pop
sbb
push
jb
test
addr16
jmp
in
adc
in
xchg
mov
or
jno
adc
jle
movsb
pop
push
xor
sub
jne
cmc
int3
scas
sub
xorl
addr16
mov
rorb
rorb
sbb
mov
loope
sub
rcrl
rorl
insl
or
xor
adc
push
mov
dec
cwtl
cmp
pop
add
pop
mov
aad
push
lcall
and
cmpsl
xchg
lahf
jno
xchg
in
mov
mov
cmpsb
out
adc
je
das
lea
js
mov
and
xchg
inc
push
data16
xor
outsb
dec
aaa
hlt
mov
data16
leave
push
sbb
cltd
aaa
pop
push
ftst
clc
xchg
ja
inc
jo
push
push
inc
insl
xchg
movsl
or
fsubrl
rcll
sbb
jns
sbb
in
mov
jns
imul
testl
insb
sbb
enter
push
mov
scas
sbb
sahf
mov
jb
aas
rcl
push
test
movsl
in
mov
shlb
negl
rcrl
dec
dec
jb
pushf
or
lods
test
dec
mov
imul
inc
fistpll
push
outsl
fs
mov
repz
es
dec
imul
andl
packuswb
lods
loopne
jae
dec
ljmp
and
push
cmp
pop
addb
movl
and
or
xor
lret
test
popf
sbb
lods
mov
int3
sbb
xchg
fnstenv
clc
and
jns
ds
addr16
mov
movb
sbb
jae
jmp
sbb
adc
stos
pop
sub
loop
in
mov
inc
inc
addr16
mov
mov
xchg
std
jg
and
je
pop
fs
ds
ss
test
dec
in
dec
fwait
sbb
cmc
in
mov
cmp
outsb
mov
pop
cmpsl
sbb
xchg
dec
stc
cmp
push
ja
in
ret
add
out
pop
loop
push
push
jns
jg
push
ljmp
fcomps
jmp
sub
ret
push
mov
jl
loop
cmp
jnp
jmp
repnz
adc
jbe
adcb
xchg
divb
adc
out
cmpsl
inc
icebp
mov
jle
adcb
lcall
xor
push
and
mov
sub
scas
push
lock
mov
fwait
leave
mov
adc
or
cmp
mov
jl
push
out
aaa
fwait
loop
les
enter
jns
push
jg
add
setae
jne
repz
xchg
in
enter
test
jne
bound
mov
rcr
xor
dec
test
lods
inc
das
mov
jae
mov
in
pop
add
call
and
nop
test
inc
out
xor
loop
xchg
hlt
in
scas
push
out
ds
sahf
imul
js
push
jp
xchg
ficoms
add
sub
or
sub
in
inc
ljmp
gs
pop
xor
enter
movsb
mov
gs
sub
ss
hlt
push
push
mov
dec
xor
lds
cmp
sbb
out
and
mov
sub
xor
xchg
inc
repnz
or
in
addr16
js
sbb
bnd
jmp
sbb
movsl
mov
push
cmpsb
bound
sbb
mov
pop
push
int
mov
sub
inc
or
roll
mov
lcall
or
lcall
lret
gs
jbe
les
or
mov
ja
cmp
and
xor
fistl
adc
and
push
movl
inc
jmp
dec
add
rorb
add
jns
rcrl
movsb
xchg
loop
imul
rcll
sbb
stos
fnstcw
dec
xor
mov
mov
aam
je
dec
jecxz
xchg
push
in
mov
sbb
mov
enter
outsl
rorl
mov
into
lret
fisttpl
adc
add
leave
and
test
mov
inc
and
in
and
cli
std
mov
fwait
xchg
mov
out
out
xor
sti
das
mov
jle
sbbb
rclb
push
test
lock
aad
orb
dec
and
dec
fstl
idivl
push
roll
or
andb
mov
and
mov
and
xchg
mov
mov
and
mull
mov
aad
rcr
xchg
push
cmp
or
and
push
lock
jge
in
fcmovne
ja
pop
pop
xchg
and
xchg
jle
loop
cmc
fidivs
cs
inc
cmc
repnz
loopne
ss
cli
cli
jno
mov
ljmp
sti
movsl
jne
jae
adc
inc
inc
push
rcll
cmc
xor
add
jbe
pop
push
mov
movl
in
mov
stos
aaa
mov
andb
rcll
test
fdivl
aam
data16
sarb
fbld
mov
orb
clc
cwtl
push
addr16
push
sbb
lds
mov
pop
cmp
pop
insb
pop
lods
jmp
cmpsl
add
jecxz
mov
outsl
arpl
mov
inc
jmp
cmp
test
or
cmp
nop
stc
push
movsl
cmpsb
ljmp
fnstsw
roll
adc
mov
ljmp
out
aas
in
stc
mov
imul
pop
jnp
leave
ds
mov
xchg
pop
pop
out
loopne
ljmp
iret
out
adc
cld
push
lds
and
inc
mov
mov
sahf
jbe
ss
adc
add
lcall
jne
in
in
xchg
out
loopne
inc
xlat
loope
movsb
fs
jno
cmc
nop
lods
testb
aam
and
insb
aas
mov
rol
icebp
push
push
outsb
test
popf
mov
push
mov
push
es
add
xor
push
aad
adc
shl
sbb
mov
push
in
jno
orl
popa
or
xchg
cmp
jge
scas
rcrb
mov
lods
xchg
xor
leave
dec
mov
test
mov
in
xor
inc
push
xor
les
bound
leave
lods
cmovo
cmp
aad
xor
mov
lret
mov
ss
iret
outsb
je
idivl
mov
mov
mov
mov
call
mov
push
mov
dec
imul
hlt
adc
loop
popf
aaa
xchg
ds
mov
fadd
cmp
cwtl
je
xchg
jp
ja
mov
aam
inc
sbb
inc
lret
inc
add
cli
repz
ljmp
jne
jp
or
in
aad
xchg
push
cmp
loop
cmc
jle
jo
lahf
jmp
xor
push
hlt
and
lods
add
cmp
cmc
mov
incb
xchg
push
pop
xor
in
repnz
ret
inc
inc
sub
xchg
xchg
mov
nop
fsubs
lret
cmc
pop
jae
sub
movsb
ja
iret
push
xor
pop
lret
arpl
push
sub
inc
lods
jnp
mov
pop
enter
push
inc
inc
int3
bound
and
out
ds
outsb
or
pusha
xor
out
adc
jp
dec
dec
popa
das
into
loopne
sahf
fxtract
sbb
cmp
pop
dec
mov
and
lahf
mov
adc
mov
cld
movsb
loope
aaa
inc
xchg
jge
js
push
loopne
adc
or
mov
enter
jne
inc
adc
jge
stos
mov
sbb
sbb
or
mov
dec
pop
cmp
jns
push
fldl
rolb
jo
das
and
lock
cmc
dec
rol
ja
das
xchg
fisttps
sub
add
cmp
mov
je
push
push
pop
dec
mov
bound
push
pop
movsb
sti
hlt
and
xor
xor
pop
fs
mov
inc
fcmovnb
mov
cmpsb
pop
shlb
mov
in
mov
push
adc
roll
cld
popf
dec
jle
mov
xchg
jns
into
mov
or
sti
dec
mov
pop
enter
push
mov
or
bound
adc
jecxz
or
rolb
inc
inc
xorb
cltd
adc
fwait
mov
test
push
mov
and
and
arpl
jp
lods
in
loope
cmp
pop
dec
sahf
jl
jbe
cmpsl
sub
sahf
imul
pop
jno
mov
adc
mov
mov
fsub
js
dec
xchg
inc
mov
out
fildl
movsl
shrl
popl
sbb
movsb
cld
sub
mov
add
fwait
popa
cmp
xchg
mov
cld
shll
mov
lret
daa
or
xor
pop
mov
xchg
pop
or
jle
mull
cmp
mov
jg
js
jl
push
test
mov
dec
popa
jmp
push
fs
cs
push
test
jno
add
aas
jg
pushf
sbb
in
data16
dec
loope
and
cmp
in
shr
lods
data16
out
ficomps
adc
mov
dec
ljmp
cmp
fstl
mov
mov
or
adc
jns
fwait
lahf
enter
scas
sbb
xor
add
in
add
and
push
xchg
stos
lret
out
imul
insl
lock
push
aad
pop
jmp
pop
dec
adc
rcrl
and
and
cwtl
inc
shll
repz
decb
sub
repz
mov
cltd
xchg
xlat
rclb
mov
pushf
pushl
ficoml
in
and
jle
mov
sbb
movb
ret
mov
push
push
mov
push
ljmp
sahf
xchg
add
mov
ljmp
in
mov
jmp
movsl
mov
dec
in
hlt
mov
mov
dec
int
mov
adc
and
icebp
inc
rclb
push
jnp
and
stos
decb
out
and
sbb
pop
mov
mov
push
cmpsl
inc
push
cld
mov
cmp
fs
lds
or
mov
mov
imul
into
sub
gs
test
jbe
les
add
pop
ret
insl
add
ret
roll
rcr
lea
pop
fstps
cmp
push
lret
cmp
push
fsubs
or
cmp
jle
adc
mov
and
std
sub
pop
pop
pop
aaa
mov
nop
adc
cs
push
cld
dec
jnp
inc
arpl
pusha
or
or
jns
stc
inc
cwtl
mov
call
dec
shll
imul
pop
movsl
add
xor
xor
cltd
pop
and
pop
sub
jmp
out
ss
aaa
jecxz
in
clc
fidivs
inc
popa
xchg
cmp
bound
insb
cmp
and
xchg
leave
std
imul
xlat
xchg
push
sbb
add
and
sub
cmp
ret
ret
popl
sahf
push
jle
inc
rclb
mov
mov
push
sub
sahf
jne
inc
and
cmp
cmc
pop
stc
mov
test
mov
mov
out
pushf
test
xor
arpl
sub
lea
xlat
pop
push
daa
ds
rcrb
pop
cld
inc
stos
pop
int3
dec
xor
push
or
push
outsl
mov
lret
repz
xchg
bound
cmp
inc
and
sbb
and
inc
mov
lock
pop
xchg
ja
xchg
sub
jecxz
rorl
or
mov
cmpsb
mov
jmp
ss
sub
sub
in
sub
lea
stc
mov
pop
outsl
in
test
fists
add
es
jnp
add
or
jae
jl
or
push
out
mov
sbb
mov
dec
fldcw
xchg
and
sub
outsb
push
mov
sub
mov
sub
mov
imul
std
pop
push
movsb
sbb
add
outsb
scas
pop
fcompl
icebp
cmp
xor
cmp
mov
or
mov
pop
int3
and
fnstcw
lock
adc
imul
sbb
mov
xchg
dec
inc
mov
mov
enter
fidivrl
adcb
movl
cwtl
cmpsb
lcall
sbb
call
jne
jb
dec
ss
push
jo,pt
mov
bound
test
sub
js
push
pop
cs
sub
repz
popf
adc
fwait
outsb
pop
ds
repz
cmc
aad
and
add
mov
xor
xor
sub
cwtl
fbstp
mov
pop
inc
mov
mov
sahf
loopne
push
dec
push
xlat
lods
data16
xor
loopne
xchg
pop
addr16
mov
adc
dec
inc
jne
lcall
and
repz
fimull
xlat
jne
and
stc
aam
sub
xchg
sbb
test
jle
or
inc
pop
xor
dec
mov
in
sub
push
dec
iret
mov
inc
aaa
pop
xchg
lret
dec
subps
pop
addr16
nop
cmp
mov
or
dec
add
lret
dec
js
jg
xor
jbe
xchg
aam
push
mov
xor
in
pop
inc
push
adc
mov
popf
sub
das
movsl
lahf
jp
pop
mov
repnz
push
bound
xor
pop
dec
push
lock
ret
dec
ds
lahf
pushf
jbe
iret
xor
xor
adc
andb
ja
fs
movsl
fimuls
ret
jl
fiaddl
mov
ss
push
in
mov
sarb
pushf
jp
addl
aad
cmp
inc
jge
call
or
jne
sub
test
jecxz
aaa
inc
fmul
data16
push
adc
pop
jne
ret
rcrl
mov
dec
aas
or
imul
push
into
or
sub
push
sub
or
xor
imul
inc
cmp
stc
dec
add
cmp
sbb
mov
out
or
cs
fwait
jp
adc
add
mov
outsl
mov
cmp
dec
push
pop
outsb
xchg
cwtl
xor
mov
movsb
sbb
push
mov
pop
fwait
sub
notl
pop
out
lea
icebp
insl
lds
loopne
stos
cmp
leave
push
popf
fstl
mov
mov
loope
aas
add
and
xor
and
lcall
pop
aad
aad
pop
adc
mov
xchg
mov
sub
repnz
mov
inc
dec
dec
xor
xchg
test
push
mov
jecxz
xor
stc
bound
out
sti
dec
and
ret
add
daa
sbb
addb
jno
cltd
jg
mov
add
add
add
stc
mov
test
cmpsb
lds
mov
xchg
inc
fstpl
sti
ret
pushf
inc
mov
lret
lahf
lcall
pop
int3
aam
adc
sbb
aam
jmp
sbb
xor
fs
mov
mov
or
into
outsl
test
enter
jo
clc
in
ja
pop
push
pop
push
mov
pop
mov
in
dec
in
xor
fwait
in
clc
dec
xor
lds
fidivrs
push
xor
ret
rcrl
out
add
xor
fucomip
push
lcall
dec
repnz
add
adc
and
or
fstpl
mov
push
ret
xchg
std
in
dec
jle
sbb
adcl
js
fstl
push
mov
push
fs
push
pop
into
xchg
sub
loope
jb
lahf
mov
out
mov
ficoml
cli
pop
and
xor
mov
outsw
mov
adc
adc
into
aam
sti
adc
cmp
xchg
push
add
ds
ret
xchg
lods
test
or
fisttps
pop
xchg
pop
subl
imul
jge
wrmsr
imull
push
push
cmpsl
mov
sbb
jmp
inc
dec
sbb
faddl
test
cmpsl
sbb
mov
in
stc
mov
cmpsb
imul
mov
cs
xchg
fs
push
pop
aam
xchg
xor
iret
or
iret
cs
outsl
bound
cs
mov
into
adc
int3
mov
cmc
jp
jnp
addr16
inc
mov
xor
rcrb
mov
push
xor
mov
pop
adcb
mov
aad
mov
int
mov
jp
jbe
aas
lret
jecxz
sahf
hlt
leave
push
jns
lcall
cmp
aaa
sub
xchg
sbb
dec
cmp
cmp
push
push
pop
lods
faddp
ss
mov
mov
adc
push
mov
and
fsubl
inc
or
scas
jp
mov
les
hlt
fdivl
cltd
mov
sbb
push
jne
mov
popf
dec
jl
mov
subl
lcall
mov
cmp
std
shlb
dec
push
inc
cmpsb
orl
hlt
mov
mov
mov
jmp
jl
pop
dec
xchg
and
and
je
pop
sbb
pop
or
cmpsb
or
inc
pop
cmc
jg
xor
es
loop
call
xor
sbb
sub
ja
inc
divb
stos
inc
mov
add
pop
fdivs
pop
int
mov
imul
adc
cmp
inc
and
xor
lds
jae
push
cmp
mov
mov
fcmovu
adc
jl
je
daa
push
rclb
bts
push
mov
insb
cld
sub
sub
incb
int3
mov
lods
push
imul
repz
rcll
dec
ja
push
cltd
faddl
popf
sub
mov
pslld
insl
inc
in
sbb
mov
aad
scas
mov
jbe
push
mov
lods
outsl
lock
mov
mov
out
fldl
fsubl
cwtl
dec
mov
pop
rcrb
push
loope
dec
sahf
mov
and
icebp
sbb
inc
mov
xorl
push
sbb
jg
es
or
scas
jge
xchg
fldl
and
jp
ljmp
pop
xor
pop
push
cmp
xchg
mov
jo
jge
xor
inc
cmp
movsb
notb
jno
mov
pop
clc
jae
mov
xor
push
fxch
mov
fcmovnu
push
movb
sbbb
adc
sbb
sti
jb
mov
mov
lds
xor
jb
ja
nop
mov
adc
jae
shlb
mov
cmpsl
pop
lods
out
test
inc
pop
outsl
cld
push
sub
xor
push
cli
mov
daa
push
and
lods
cmc
test
or
addb
mov
inc
hlt
imul
push
or
stos
xchg
pop
hlt
push
inc
sbb
push
add
arpl
pop
push
pop
fucomip
pusha
repnz
je
test
mov
and
mov
sub
cmp
in
mov
and
add
xchg
ror
mov
mov
and
js
xor
push
loop
fcoml
aad
shlb
sbb
fs
mov
shrl
ffreep
cwtl
sbb
mov
cmp
or
mov
gs
mov
rcl
jp
jle
mov
mov
xchg
jge
arpl
sub
cmp
enter
xor
aas
popf
nop
mov
ja
gs
pop
mov
add
jns
push
rclb
fstpt
and
cmp
in
push
std
xor
aaa
pop
fstpl
into
inc
pushf
ljmp
cwtl
mov
jo
mov
loopne
xor
inc
and
mov
jecxz
pop
jae
jle
not
inc
sub
xchg
scas
cli
lock
cmc
mov
das
mov
push
das
stos
ret
int
dec
mov
xor
ret
jle
xchg
dec
inc
inc
rcrl
je
cmp
mov
cmp
cs
xchg
add
sub
fistps
mov
nop
add
sub
push
sub
int3
bound
pop
mov
pop
sbbb
jae
out
fcomps
mov
xor
mov
sbb
jg
add
repz
push
test
add
mov
add
push
les
cs
jb
jb
icebp
mov
sub
pop
insl
mov
lcall
and
adc
sub
cmc
clc
outsl
dec
stos
mov
lods
push
aaa
mov
jmp
dec
ljmp
out
notl
mov
dec
lret
mov
sbb
add
lods
fsubrs
std
xor
jp
inc
mul
pop
mov
jb
inc
cmc
xor
stos
hlt
imul
mov
lock
nop
mov
notb
mov
push
fcmovnbe
and
cmc
xchg
leave
mov
mov
inc
add
je
pop
lods
push
push
pop
shll
lods
gs
dec
mov
enter
cmp
std
ds
cmp
push
dec
dec
mov
out
gs
and
lock
jp
hlt
cmc
mov
xchg
mov
push
jb
out
sub
push
icebp
shlb
jecxz
imul
push
push
xchg
cmp
add
push
pop
inc
pop
sub
ret
xchg
jp
lds
movsb
adc
outsb
jb
cld
test
xor
add
sub
setb
mov
mov
testb
and
adc
cmp
cmc
inc
cmp
push
xchg
or
push
popf
mov
cmp
sbb
test
inc
pop
iret
mov
stos
jnp
xchg
cs
sarb
popa
lahf
cwtl
cmp
imul
gs
push
cltd
mov
push
ss
adc
fstps
inc
cwtl
dec
movl
mov
push
pop
jg
pusha
and
jnp
insb
in
adc
cmp
xchg
pop
in
lods
or
fchs
adc
cmp
push
pop
mov
push
int
pop
mov
int3
in
pop
cmp
push
cmp
ljmp
sub
ds
stos
mov
and
popa
inc
sbb
or
popa
push
push
shlb
xchg
jge
or
aam
and
pop
push
cmp
ss
test
fstpt
cmp
clc
incl
mov
add
mov
data16
push
in
bound
cmp
hlt
cmp
xor
test
add
jp
pop
cmpsl
movsb
pop
outsb
lods
add
pop
sarl
outsl
mov
mov
sub
lods
in
and
fisttpl
ljmp
out
sub
test
cld
ret
jne
sbb
xchg
xor
outsb
outsl
and
pop
push
lods
xchg
xorb
push
and
mov
pop
clc
adc
dec
cmp
hlt
cmp
je
push
inc
and
aaa
es
sbb
lahf
cmp
lcall
ss
sti
popa
lds
jae
jp
dec
mov
pushf
mov
push
mov
jg
jae
ja
pop
mov
add
je
jecxz
andb
cmp
mov
in
je
mov
pushf
sbb
in
rcrb
mov
jecxz,pt
mov
les
add
sahf
lds
xor
mov
das
stos
jo
das
inc
jne
xchg
cmpsb
addr16
push
out
ret
insl
fidivrl
lret
es
scas
xor
sbb
rol
pop
mov
gs
push
enter
enter
add
and
hlt
add
push
push
adc
pop
or
cmp
testl
testb
lahf
cmp
cmp
lods
fsubrs
testl
imul
mov
std
pushf
or
fidivrl
inc
fwait
imull
ror
adc
adc
push
sarl
mov
jecxz
push
int
jle
idivl
dec
mov
lret
inc
mov
data16
or
addr16
sbb
sub
fldenv
imul
movsl
adc
sub
stos
aad
rcr
cmp
pop
mov
sbb
in
cmp
sbb
mov
cs
mov
fs
lods
push
int
cmp
mov
sar
lods
aaa
push
mov
mov
xor
call
insl
fistps
outsb
add
and
imul
sub
call
mov
std
js
scas
pop
or
movsb
mov
jno
sub
cmp
mov
int
je
jo
stos
xor
cwtl
cli
push
xchg
mov
sbb
cmp
xchg
inc
and
inc
mov
into
shlb
xchg
sbb
movsb
cmp
out
movsl
adc
push
lods
std
mov
pop
jae
je
dec
repz
in
sbb
push
push
lret
jg
dec
add
mov
and
xor
das
inc
movsb
jg
push
aaa
bound
call
aas
fbstp
movsl
jecxz
in
es
jb
enter
jbe
sbb
mov
ljmp
cmp
test
xchg
and
sbb
dec
dec
repz
mov
rorl
shl
push
icebp
jp
dec
aas
enter
jge
popf
sbb
dec
sbb
mov
outsb
imul
fs
sbb
lds
out
int3
fs
and
mov
jge
movsl
or
adc
add
add
arpl
mov
mov
adc
pushf
jg
int3
sub
je
sbb
test
cmp
jno
push
jo
xor
movsl
movsb
lods
pop
adc
bound
lret
cmpb
add
sbb
mov
dec
ret
nop
cmp
xchg
mov
cmp
push
mov
adc
xor
jg
popf
je
loope
insb
pop
mov
adc
xchg
imul
incb
jecxz
pop
adc
inc
repz
in
xchg
add
or
xchg
push
out
fdivrs
lods
lret
pop
add
jns
shr
stos
cmp
add
pop
push
inc
sti
pop
roll
cmp
jp
out
jl
jnp
mov
leave
jnp
dec
in
orb
xchg
ret
movsl
loope
mov
inc
sbb
test
out
push
adc
sub
dec
ljmp
pop
pop
fidivrs
jge
pop
mov
sarb
push
add
cmp
daa
fdiv
mov
xchg
mov
mov
or
add
xor
popf
cmpb
ss
jmp
sub
fistps
rcl
andb
ret
fdiv
adc
rcrl
jl
ds
addr16
adcl
repz
mov
add
inc
sub
inc
fwait
cmp
and
jmp
das
fwait
mov
scas
add
pop
pop
pop
adcl
in
sti
in
mov
lcall
mov
sub
xchg
xor
push
and
cwtl
jecxz
repnz
icebp
cmpsb
mov
jl
push
jno
and
in
int
sub
and
mov
or
push
insb
loop
imul
cmpsb
stc
daa
add
int
lahf
ficompl
dec
dec
pusha
push
shll
and
dec
add
pop
out
add
or
stc
dec
push
jno
adc
xor
das
push
jae
in
imul
das
jg
sbb
sbb
mov
mov
sbb
inc
pop
popa
or
jo
add
mov
sbb
iret
fwait
sbb
jnp
xor
jns
js
outsb
fidivrl
enter
cmp
mov
jmp
mov
lret
sbb
xchg
and
ret
jl
mov
loopne
jl
repz
dec
push
faddl
inc
es
xor
insb
cmc
cmpsb
fimuls
insl
loop
loope
outsl
mov
mov
lods
hlt
xor
sub
movsb
adc
ficomps
aas
xchg
push
inc
mov
xor
aaa
stos
pushf
ss
xchg
pop
sahf
fucom
xchg
data16
outsl
shrl
int
mov
aad
test
jb
mov
lret
testb
lcall
jge
sbbl
nop
fwait
lea
mov
push
ds
pop
add
sbb
vunpckhps
les
repz
imul
mov
lret
and
xor
inc
cmp
sub
out
incb
mov
and
enter
dec
mov
sbb
aas
sti
dec
insl
lds
and
inc
jle
test
aad
sbb
add
mov
fcoms
shll
adc
fsubrl
adc
or
xchg
js
inc
cmpsl
clc
xchg
fdivrp
sub
rorl
push
ds
imul
sbb
adc
icebp
jge
outsb
pop
lods
jecxz
aad
pop
jle
les
xchg
pop
test
xchg
scas
les
jbe
loop
and
jno
jp
and
jp
scas
or
xchg
adc
inc
movsl
popf
js,pn
xor
xor
rolb
inc
sti
fldl
inc
cmp
jne
jecxz
pop
xchg
mov
sar
test
dec
and
dec
inc
mov
push
push
xchg
pop
adc
fsts
inc
add
ja
insl
in
sarl
out
pushf
xor
aam
packssdw
cli
scas
sub
jo
jbe
mov
out
inc
pop
leave
addr16
xlat
sub
repz
cltd
mov
push
adc
mov
xchg
cmpb
mov
mov
lret
insb
inc
dec
and
shrl
xor
into
push
testl
orl
pop
fcoml
push
xor
jge
fs
popl
mov
sbb
loop
ret
pop
xor
or
push
cmp
push
push
push
testl
arpl
ljmp
sti
xorb
pop
sbb
mov
xchg
movsl
popa
mov
fcmovnb
push
jno
cmpb
or
leave
call
pop
addr16
daa
adc
nop
jnp
enter
inc
push
or
stc
mov
pushf
cwtl
lea
xchg
jnp
scas
scas
in
ds
lods
adc
cmp
leave
inc
les
ss
iret
jnp
xchg
adc
clc
or
ds
mov
mov
inc
fiadds
xor
mov
cmp
pushf
cli
hlt
stos
rcl
adc
mov
or
imull
mov
or
int
and
sti
mov
fcomip
jge
push
in
add
and
ffree
test
arpl
push
sbb
dec
dec
stos
addl
jge
int
add
out
lods
inc
sub
pop
mov
out
pop
call
xchg
inc
jg
inc
je
add
or
pusha
cs
mov
lods
mov
int3
popf
dec
daa
mov
mov
sti
cmc
stos
sbb
loop
jge
out
aas
popa
xchg
leave
test
test
dec
shlb
lea
fsubs
cmp
jno
jmpw
fs
inc
mov
stos
lahf
pop
mov
dec
pop
fs
jo
lock
cmp
jne
jne
dec
flds
shrb
and
xchg
sbb
pop
jae
decb
inc
pop
sarb
push
ja
and
out
pop
cld
movsb
mov
add
shll
mov
outsb
push
mov
cmc
outsl
fwait
xor
scas
push
add
out
or
fcomip
mov
mov
inc
hlt
jg
movsl
xchg
sbb
dec
mov
stos
lahf
or
inc
dec
and
pop
mov
pusha
lds
or
bound
xchg
sub
pop
and
or
sbb
sti
xchg
scas
mov
sbb
jle
mov
pusha
push
mov
and
cltd
rorl
mov
mov
aad
mov
xchg
xor
aas
mov
mov
je
push
sub
push
popf
xor
mov
xor
fstps
mov
xlat
xor
xchg
ds
pop
mov
pop
mov
push
dec
sbb
loop
mov
out
rcll
roll
fildll
js
lods
sub
lods
clc
ss
cltd
cmpsb
and
pop
jo
repz
mov
inc
insb
dec
sbb
pop
or
int
clc
mov
cmpsb
fidivl
lcall
xchg
arpl
shlb
outsl
gs
or
jl
pop
sub
sub
loopne
lretw
sbb
loop
mov
pop
xchg
insb
sbb
fwait
jp
add
aad
cld
stos
jb
xchg
dec
mov
push
arpl
in
mov
sbb
jge
inc
or
xor
stc
and
mov
push
shrb
cmpsl
push
sbb
daa
fistl
sbb
icebp
repnz
push
mov
mov
outsb
dec
cld
lea
cmp
mov
mov
xchg
inc
repnz
add
or
inc
mov
pop
sti
lock
xchg
out
xor
jbe
lea
sub
enter
add
mov
sub
out
outsb
cmp
mov
mov
fchs
popa
mov
jbe
xlat
or
xor
lods
call
dec
shll
adc
orb
push
mov
or
ret
test
imul
fisubrs
lea
pushf
addr16
les
mov
sub
push
fisttpll
scas
xchg
mov
dec
cltd
ret
sbb
jecxz
xorl
adc
jo
int3
xchg
xchg
mul
push
nop
xor
jle
or
inc
xor
dec
sar
mov
pop
lret
enter
xor
fisttpl
icebp
loop
les
pop
scas
lret
lahf
aam
cltd
cmp
cmp
imul
sarl
decb
outsl
mov
xchg
xchg
jg
xor
jge
sub
les
mov
add
popa
dec
ret
mov
add
arpl
scas
dec
dec
int3
cmp
inc
adc
xor
push
xchg
inc
add
mov
xor
push
and
arpl
xchg
dec
jecxz
aam
push
lahf
mov
cld
cmp
mov
cmp
mov
imul
mov
loop
gs
rcrb
pop
es
out
js
inc
jge
pop
mov
les
inc
test
mov
pop
dec
inc
rcrb
in
sti
mov
sub
jae
test
adc
std
adc
inc
xor
pop
fistpll
xlat
hlt
mov
cmp
xlat
mov
cmp
ror
popa
xchg
inc
das
push
cmpsb
in
lret
fwait
daa
stos
jb
jne
insb
repz
icebp
inc
pop
mov
jmp
ficoml
sub
das
in
add
test
mov
mov
pop
shl
rcl
and
inc
out
ja
xor
aam
ljmp
imul
or
push
add
jl
dec
cmp
das
out
jmp
das
xchg
lock
pushf
add
ret
push
test
outsl
test
adc
sub
bts
fdivs
jne
call
cmpl
adcl
es
ss
jns
adcb
aam
xchg
add
mov
ss
je
out
sti
mov
into
lds
lds
in
jo
jo
or
daa
iret
aaa
adc
pusha
aam
stc
cmpsb
out
fst
mov
fisubrs
push
inc
mov
sbb
cltd
clc
call
mov
xchg
in
mov
pop
in
repz
cmp
xchg
pop
mov
mov
mov
lahf
jns
jmp
in
inc
loopne
sub
sub
adc
or
sbb
out
aas
daa
idivl
popl
mov
repz
or
pop
pop
push
jle
push
jg
aad
shll
push
call
cmp
inc
or
push
fldl
sarl
cmp
clc
arpl
lcall
aad
sbb
mov
out
fdivs
addr16
testl
mov
cmp
or
ja
cmc
imul
addr16
sub
xchg
sub
loopne
sub
mov
inc
scas
shl
loope
test
test
outsb
push
cli
inc
imul
dec
sub
adc
fisttps
dec
dec
lods
dec
mov
imul
inc
jg
rcrb
push
xor
push
xor
lods
sub
pop
xor
idivl
test
jp
out
es
mov
sbb
cmp
and
idivb
mov
fisubrl
das
scas
xor
dec
mov
inc
cmpsb
loop
into
mov
add
adc
dec
cmp
rep
fs
inc
sub
out
jl
sbb
add
jne
jecxz
jle
xor
aas
loope
push
or
mov
int3
dec
mov
test
pushf
lcall
sbb
je
adc
or
mov
bound
xor
loope
mov
scas
push
mov
and
push
jmp
cmpb
rclb
pop
push
daa
jbe
sbb
mov
movsl
mov
out
fwait
mov
and
aad
dec
lret
js
imul
cwtl
jmp
mov
or
ljmp
xlat
adc
or
lds
mov
out
movl
jg
out
add
repz
inc
cmpsl
jecxz
push
sarb
push
cs
test
jns
xchg
cld
es
loopne
dec
sub
cli
gs
sarl
xor
in
sub
je
jae
gs
push
adc
shl
int3
dec
push
ret
insb
in
cmp
loopne
mov
adc
imul
iret
arpl
fmuls
jge
in
cmp
in
or
push
stos
loope
sub
outsb
shll
xchg
xchg
imul
fiaddl
pop
adc
mov
sub
test
or
or
mov
mov
or
ja
inc
mov
inc
bound
xchg
inc
jp
push
xchg
das
push
xor
fwait
xor
loopne
push
lds
sbb
cmp
imul
lods
or
inc
sub
or
rorl
test
je
cwtl
divb
lods
push
ret
jnp
push
mov
sub
mov
lock
mov
mov
and
lret
or
out
mov
fldt
xor
lods
push
mov
push
jecxz
fwait
pop
ja
dec
mov
jb
push
xchg
and
das
pop
fisttps
lret
outsl
xchg
imul
jle
cltd
and
mov
adc
es
pop
mov
insb
sahf
mov
test
imul
call
xchg
out
loopne
pop
dec
cmp
out
adc
jo
mov
cmpb
fmull
push
in
push
or
or
and
add
pusha
jb
sbb
adc
pop
in
jge
ss
or
sbb
mov
mov
out
cmp
mov
outsl
xchg
pop
mov
pop
inc
xchg
fs
scas
xchg
jb
sub
push
shr
ja
mov
cwtl
xchg
or
push
popl
lahf
lret
flds
mov
lods
shrb
or
out
jne
pop
ss
push
nop
sbb
cs
lcall
sbb
in
cmp
pusha
xchg
out
scas
addr16
lods
inc
push
sbb
cmpl
add
stc
lret
bound
pusha
nop
sets
stos
jbe
loopne
add
push
cmp
pop
mov
sub
or
mov
jbe
gs
fnsave
cli
dec
inc
lock
sti
pop
lea
inc
scas
xor
pop
in
fildl
test
in
sbbl
pop
sub
cwtl
and
outsb
mov
insl
inc
imul
enter
cmpl
add
addr16
ret
jecxz
in
adc
add
ret
add
pusha
rorl
shlb
or
outsb
cmpsb
daa
xchg
lock
fwait
aad
cmc
rorl
stos
or
hlt
adc
sbb
xor
mov
outsb
jge
dec
jl
dec
and
scas
fcmovnb
inc
ret
loopne
and
pop
lods
cmp
mov
mov
ds
add
xchg
mov
mov
push
arpl
and
addr16
cmp
std
sub
insb
shrb
inc
xor
adc
daa
cmp
arpl
xchg
ret
and
dec
mov
rorl
jmp
in
adc
sbb
iret
pop
jo
dec
in
fisubrs
inc
pop
aam
add
jnp
inc
int
mov
push
stc
sub
mov
loope
or
dec
fbstp
xchg
xchg
andb
push
xlat
mov
mov
dec
outsb
adc
leave
in
in
cmp
xchg
cmp
lret
lcall
faddp
mov
ficomps
add
jg
frstpm(287
mov
mov
inc
das
les
push
out
popa
lahf
jl
xchg
out
repz
movsl
in
ljmp
xor
mov
sbb
push
addl
and
hlt
out
jmp
jno
mov
into
std
faddl
frstor
sbb
sbb
inc
add
idivl
stc
xor
loop
cs
outsb
xor
fisubl
adc
add
or
test
imul
xor
pop
nop
and
mov
inc
pushf
mov
aaa
dec
adc
aad
out
filds
mov
sbb
cmpsl
mov
pop
mov
jmp
pop
nop
inc
adc
jl
push
cmp
ljmp
cld
and
shr
sub
fdivrs
leave
lock
fildl
pop
enter
add
jl
call
repnz
push
lea
shlb
in
aad
xchg
aaa
jnp
mov
out
lahf
pop
add
pop
into
pop
mov
sub
jno
add
mov
add
enter
jp
push
push
pop
jno
into
mov
popa
sarl
xchg
test
fnsave
pusha
stos
pop
sti
sub
inc
pop
add
ds
xor
push
pop
mov
xor
out
xor
sbb
lret
xlat
add
jnp
aad
es
dec
inc
ss
addr16
popa
mov
xor
adc
jne
adc
leave
jmp
add
xchg
mov
dec
js
mov
divl
and
jp
mov
gs
mov
repnz
lret
jo
lds
sbbb
int
fidivl
dec
dec
repnz
rorl
shrl
adc
add
lds
xchg
lret
fs
aad
unpckhps
adc
inc
xchg
stc
xor
jmp
stos
outsb
push
mov
cs
sub
mov
mov
xchg
rorl
scas
fbstp
cmpsl
add
fwait
cltd
mov
mov
pop
xor
adc
push
fisttps
dec
adcb
sbb
out
add
jmp
cltd
xchg
icebp
inc
scas
bnd
adc
add
push
enter
mulb
pop
lret
bound
push
orb
jno
xor
xchg
idivl
es
push
jne
test
sbb
insb
repz
mov
cmp
fiaddl
pop
jg
dec
out
stc
stc
fstl
sub
or
xor
das
mov
add
mov
les
rcrl
inc
pop
adc
fwait
loope
cmpsb
add
hlt
pop
inc
xchg
mov
jnp
nop
sbb
fnstsw
jle
loop
mov
sbb
mov
xchg
leave
rcl
pushf
sbb
decl
mov
subl
imul
sar
push
jae
pop
push
push
shrl
int3
and
inc
scas
dec
sahf
cmpsb
leave
dec
pop
bound
cmp
aaa
push
fld
mov
movsb
lods
xchg
push
cmc
out
loopne
jne
mov
mov
shrb
and
std
arpl
sti
push
mov
cmpsb
cwtl
jb
outsb
cwtl
dec
pop
cmpsl
imul
or
add
cmpsl
in
push
push
mov
scas
adc
gs
ret
jne
movsl
dec
pop
lds
inc
in
add
in
sbb
add
daa
incb
cmp
jp
xchg
cltd
inc
push
adc
nop
mov
push
xorl
xor
mov
fcomps
dec
pop
and
in
push
sub
mov
adc
mov
jle
xor
data16
mov
pop
pushf
arpl
adc
mov
ljmp
sub
mov
bound
mov
mov
shl
ret
pushf
lds
pusha
insb
je
pop
sahf
fcomps
jmp
stos
cld
leave
sub
or
and
arpl
xlat
mov
mov
push
cs
mov
and
sbb
pop
std
out
hlt
cmc
mov
push
lods
in
mov
or
pop
sub
sbb
out
ja
scas
movhps
sar
and
jnp
mov
sar
repz
scas
push
dec
sub
sarl
gs
imul
loop
dec
sarb
add
xchg
call
dec
in
add
or
push
mov
fstpt
sbb
jb
ja
push
rcrb
adc
dec
int3
out
ret
mov
push
sub
das
mov
pop
int
fnstenv
add
mov
adc
mov
cli
mov
je
lret
lcall
xchg
dec
popf
cmp
out
test
dec
sbb
arpl
js
int
out
lock
cli
mov
cli
cmpsb
inc
ja
imul
push
loope
fnsave
xor
fisubs
fcoms
out
dec
adcl
adc
sbb
xor
gs
cwtl
cltd
push
mov
pop
dec
xchg
outsb
testb
lods
push
mov
mov
lods
push
rorl
data16
push
mov
test
xor
lret
or
sbb
cmp
xor
out
inc
push
pop
test
repz
ret
jl
mov
adc
pushf
popf
jnp
popf
lds
out
mov
adc
and
insb
je
sub
jo
dec
xchg
push
jb
lret
sub
imulb
inc
or
ficomps
push
outsb
fcompl
fwait
push
push
adc
and
fisubs
fs
cmc
or
cmp
mov
shlb
mov
ffreep
js
or
cmovl
dec
mov
fs
mov
js
lods
mov
pop
ret
pusha
movsb
sub
arpl
rcl
add
jp
jmp
cmpsl
lret
dec
inc
mov
andb
int
mov
dec
dec
xchg
xchg
jmp
adc
or
fisttpll
xlat
push
into
imul
lret
add
sbbb
repz
push
into
xchg
repz
adc
sbb
lea
arpl
jmp
mov
inc
jge
data16
outsl
gs
adc
xchg
out
add
inc
push
push
nop
stos
push
fwait
or
dec
in
out
subb
xchg
fwait
into
out
hlt
xor
hlt
notb
and
xchg
add
xchg
or
scas
and
mov
repnz
cmp
xor
mull
movsl
insl
pop
mov
ja
aam
mov
add
pop
sbb
xor
aas
imul
repnz
inc
mov
les
cmpl
jb
xchg
daa
aad
int
and
ficoms
int3
cli
sti
push
push
pop
xchg
push
ret
cs
repz
stos
push
js
xchg
or
cmp
lcall
in
cmp
pushf
jp
loopne
push
popf
imul
lcall
jno
mov
sub
divb
les
decb
stos
xor
mov
loope
cltd
fwait
hlt
xorl
lea
add
mov
xchg
add
rcl
push
lods
fmuls
nop
inc
pop
push
inc
inc
ficoms
sbb
scas
shll
in
sbb
pop
scas
jae
into
hlt
ljmp
mov
xchg
fldz
push
mov
daa
clc
mov
sbb
dec
adc
xchg
fwait
in
in
nop
or
jmp
pop
dec
ljmp
outsb
add
xchg
sub
outsl
jle
jl
pop
dec
cld
push
jmp
and
cmpsl
mov
mov
out
push
inc
ficompl
test
popa
fmuls
lea
cmpsb
lds
dec
in
cmc
push
mov
mov
in
inc
lock
repz
mov
call
dec
pop
mov
and
add
mov
and
mov
scas
push
jle
dec
pop
loope
mov
push
mov
and
mov
icebp
xchg
mov
notb
ret
inc
leave
cmp
sub
popa
es
sbb
jmp
adc
outsb
xchg
roll
xchg
insb
xchg
mov
popw
push
jb
es
dec
mov
test
fiadds
sbb
aam
mov
adc
aad
and
cmp
push
js
xchg
in
inc
lods
cmp
mov
in
pop
pop
stc
sub
xchg
pop
sbb
pop
stos
dec
fdivl
pop
mov
fwait
add
xchg
adc
mov
jmp
add
xchg
aam
mov
or
lock
dec
cmp
das
aaa
stc
rcrb
sub
call
dec
hlt
and
mov
push
mov
cs
jmp
cmp
add
sub
inc
outsb
lods
movsl
js
push
and
xor
das
mov
stos
xchg
sub
or
add
sub
push
aad
jb
inc
enter
cmp
gs
adc
xor
pusha
popa
adc
pop
idivb
nop
iret
add
daa
out
cltd
lcallw
sbb
das
arpl
test
dec
outsb
xchg
xor
addb
mov
scas
xlat
fists
gs
std
push
data16
rorb
add
pop
add
fidivl
sbb
ret
outsl
pop
jge
test
mov
jmp
xor
icebp
push
xor
lods
outsl
sbb
add
push
js
and
mov
mov
pop
mov
lret
fisttpll
xchg
xchg
outsb
mov
mov
inc
push
lret
jne
mov
sbb
push
sub
gs
and
int3
xlat
xchg
orl
push
and
add
fs
cmp
mov
movsb
out
jns
mov
cmpsb
call
sub
and
fnstenv
pop
mov
jge
add
subb
out
mov
push
mov
and
pop
mov
cli
jo
out
jb
into
and
fnstsw
push
pop
cmp
inc
pop
testl
ret
add
push
mov
xchg
scas
jo
inc
mov
xchg
jecxz
fcoml
xchg
mull
cmp
xchg
jae
dec
push
les
inc
lret
ss
jae
outsl
xor
xchg
bound
add
aas
mov
and
xchg
out
and
faddl
ficompl
mov
lret
sbb
hlt
jnp
and
sbb
or
jp
je
test
mov
cmp
cmc
or
xchg
invd
pushf
pop
jge
jo
loopne
add
and
call
arpl
loope
clc
sahf
push
xor
lret
dec
lds
push
icebp
push
xor
mov
lahf
in
pushf
test
mov
xchg
cmc
mov
movsb
mov
and
dec
fdivr
fst
lds
stos
mov
shrb
sub
test
xchg
xchg
es
and
pop
mov
mov
push
mov
dec
les
popa
mov
dec
sub
xlat
js
mov
out
xlat
call
sub
push
xchg
add
cltd
nop
jl
sub
xor
mov
adc
mov
ss
lcall
test
std
add
nop
and
push
add
and
iret
add
aam
jno
rol
xchg
dec
mov
outsl
jo
dec
add
insl
pop
jl
ja
les
loopne
lret
cld
sub
arpl
rcl
out
in
test
lea
stc
jg
and
rorb
lret
not
jmp
movsb
repz
cmp
ret
add
lret
dec
outsb
rcrb
adc
mov
mov
mov
xchg
rol
pop
das
imul
insl
imul
jmp
fidivl
or
mov
dec
test
ret
gs
mov
shll
sbb
sbb
xchg
aad
mov
jae
movsb
fmulp
dec
adcl
bound
test
ret
into
sub
and
scas
arpl
inc
cmpsl
jnp
pop
adc
xchg
lods
jnp
and
pusha
pop
ret
into
loopne
dec
test
or
popf
or
cmpsb
and
cld
imulb
and
hlt
mov
sahf
pop
ja
cs
xor
xchg
lods
pop
adc
stos
pop
adc
enter
arpl
pop
xor
dec
insl
das
jnp
cmpl
test
test
imul
icebp
push
test
cmp
bound
cld
fsubrp
add
aaa
xor
mov
push
pop
jge
hlt
cld
dec
cli
inc
jle
mov
jo
ret
inc
call
popa
lret
fcoms
addb
push
xchg
xchg
rcrb
ljmp
pop
repnz
lahf
add
push
lcall
lds
add
mov
pop
inc
ror
lcall
dec
lret
xor
aaa
mov
sbb
out
mov
arpl
or
jae
mov
roll
loope
decb
jnp
or
sub
bound
mov
pop
pop
sbb
pop
or
into
jmp
mov
mov
cmp
cs
sub
xor
xchg
orb
int3
or
or
jl
xchg
addb
add
clc
fstpl
add
pushl
mov
je
jnp
xchg
cmp
xchg
shrb
push
lret
ret
outsb
xor
xor
and
cltd
sti
movsl
aaa
dec
fisttps
popf
hlt
lods
fwait
push
xchg
sti
xchg
sub
inc
dec
mov
sbb
mov
roll
sarl
pop
mov
xchg
daa
rol
gs
jb
pop
push
imul
dec
bound
repz
or
mov
fstl
rol
jmp
mov
xor
xor
test
rcrb
mull
das
je
jle
ja
push
pop
xchg
pop
sub
xchg
lret
jo
rcll
sub
jb
pop
or
jns
push
mov
shl
ds
and
out
mov
mov
jp
dec
lods
pop
mov
xchg
es
add
jmp
insb
rclb
xorl
fwait
jmp
and
stos
les
push
aas
jg
mov
pusha
jecxz
cmc
push
movsb
xchg
ja
addb
lea
xchg
cmp
mov
jecxz
dec
mov
xlat
cmp
roll
test
mov
sti
push
push
leave
aam
into
cmc
pcmpgtw
sarl
into
dec
cmp
and
out
je
xor
inc
adc
in
dec
ljmp
jg
sbb
clc
mov
jne
fstpt
or
in
xchg
test
test
sbb
push
jmp
cmp
shlb
mov
cmp
fwait
adc
xor
jno
add
pop
fsub
pop
mov
mov
push
loop
mov
test
mov
pop
in
adc
lds
adc
xchg
sbb
mov
mov
xor
lods
inc
or
inc
sbb
sbb
and
push
fidivl
popa
lcall
push
xor
out
push
insb
je
add
jnp
dec
lret
or
push
xor
aad
shlb
adc
gs
stos
inc
push
pushf
out
push
cmp
out
add
stos
push
push
dec
pop
mov
sbb
sbb
dec
jbe
sbbb
xor
scas
jp
flds
push
fiadds
fildll
dec
fiaddl
sahf
sub
lds
push
stos
data16
aad
stos
rcl
nop
lds
add
jg
sub
mov
cmp
adc
jne
shl
xchg
popf
stos
jnp
fsubrl
mov
adc
loope
fnsave
mov
and
repnz
les
pushl
or
adc
mov
xor
mov
lcall
mov
sub
and
jnp
cmp
fiadds
gs
fcmovnbe
push
push
or
ficomps
sub
fbstp
xchg
shrd
push
sub
lock
jo
mov
dec
bound
mov
shrl
push
das
into
fldcw
inc
cs
mov
mov
cmp
rcl
cmovge
arpl
dec
fsubs
sbb
sarl
clc
mov
iret
les
js
mov
pop
xor
das
or
outsl
addr16
xchg
mov
test
in
pop
sbb
jo
scas
push
adc
cmpb
mov
inc
dec
or
repnz
pop
cwtl
push
xchg
and
and
test
dec
mov
imul
jbe
inc
lds
repz
push
pop
cmp
lret
sbb
lock
lock
ss
call
outsb
adc
nop
pop
sbb
xor
out
pop
fdiv
in
in
push
je
adc
enter
scas
shlb
mov
notb
sbb
sahf
push
rcll
decl
iret
cltd
lds
cmp
mov
cmpsb
cld
ljmp
repz
mov
mov
mov
xchg
data16
mov
lods
and
dec
js
or
movsl
xchg
mov
jns
mov
xlat
jb
fsub
cmp
push
js
xor
adc
and
inc
sub
lock
fbstp
add
pop
adc
mov
je
orb
lret
pusha
inc
rorb
jmp
inc
test
test
cmpsb
lret
adc
fwait
push
jae
add
rclb
xor
pop
dec
repnz
cmp
mov
mov
push
fdivs
sbb
sbb
sbb
movsb
movsb
popa
xchg
movsb
mov
aas
scas
mov
cli
push
mov
cmpsl
movsl
in
insl
in
in
push
lcall
les
ljmp
cmp
xchg
pop
lcall
iret
std
mov
lret
xchg
icebp
fadd
inc
fisubs
mov
sarl
fisubrl
sub
sti
fwait
in
xorl
xor
pop
mov
add
andb
inc
and
jle
pushf
insl
pop
jmp
sub
test
pop
lret
scas
sub
xchg
pop
push
push
test
dec
cmp
push
pop
out
mov
sub
mov
movsw
subb
jmp
push
jg
repz
in
push
std
sbb
add
test
shrb
repz
cwtl
jo
test
mov
mov
jo
repz
and
addr16
xor
push
fwait
push
mov
cs
pop
push
fsubs
xlat
fistl
push
jmp
mov
repz
adc
rclb
cmp
sub
fidivl
cwtl
lret
sub
popf
pop
in
pop
imul
repnz
inc
mov
js
mov
sbb
push
jns
sbb
ret
pop
aam
lret
jge
sub
jge
xchg
xchg
dec
pusha
jg,pn
lahf
sarl
in
shll
popa
jp
sbb
jb
jae
or
adc
dec
sub
gs
nop
bound
push
icebp
fwait
adc
iret
cltd
leave
out
insb
daa
pop
cld
and
pop
sub
mov
imul
push
out
jp
mov
mov
adc
out
mov
push
dec
mov
fwait
add
adc
cld
dec
imul
push
test
ljmp
arpl
test
mov
mov
mov
pop
stc
popa
mov
cmpsl
dec
leave
adc
outsb
fs
and
fucomi
ljmp
icebp
dec
clc
push
mov
cmp
add
xchg
imul
roll
push
mov
popf
cmp
popa
mov
sar
out
loopne
jecxz
jns
pop
mov
cli
stos
xor
mov
xor
pop
dec
insb
in
js
jecxz
jp
add
and
xchg
arpl
push
shl
inc
ret
jae
inc
mov
outsl
lock
xchg
inc
inc
push
cmpsl
sbb
add
out
mov
add
push
ljmp
push
test
aaa
jns
fstps
mov
stc
aaa
mov
cli
iret
pop
xor
jo
pop
testb
jmp
push
in
add
and
xchg
arpl
dec
mov
xor
inc
sbb
adc
inc
cmp
jnp
inc
sarb
push
push
push
repnz
bound
inc
je
cmc
jb
enter
mov
adc
and
pop
and
push
pushf
jo
jle
hlt
in
mov
cmpsb
mov
jbe
cs
and
ds
daa
cltd
in
loop
mov
std
and
outsl
xchg
pushf
dec
dec
adc
aas
sbb
sbb
test
fidivs
jno
xor
xor
dec
pop
fisubrs
push
ret
lea
stos
inc
rol
mov
negb
std
mov
mov
xchg
push
inc
mov
xchg
and
stos
je
loop
cmpsl
fldenv
pusha
aam
jae
int
aam
ret
adc
insl
sub
mov
adc
cmpsb
stc
outsl
cmp
dec
push
call
ja
xor
cmp
mov
pop
daa
pusha
mov
repnz
cmp
add
sub
jp
jg
aam
lods
mov
fistps
rolb
shlb
mov
lods
sbb
push
xchg
add
adc
cmp
repz
and
mov
add
or
push
enter
adc
jb
inc
pop
out
cmpsb
movb
mov
bound
clc
jae
jnp
xor
cli
adc
add
cmp
out
mov
and
movsl
sbb
pop
cwtl
fs
pop
sbb
mov
fbstp
clc
ja
mov
push
inc
sub
cmp
repnz
fdivr
shl
jb
add
popa
incl
mov
cmp
insb
jmp
dec
call
sar
setle
leave
cmpsl
jne
dec
out
jl
shlb
fbstp
out
cltd
pusha
xor
pop
call
lods
mov
push
stos
mov
lret
mov
sbb
xchg
fisubrl
mov
outsb
loope
lds
sbb
rcll
sbb
inc
mov
jecxz
cwtl
or
pop
in
or
lods
loopne
inc
mov
call
xlat
fiaddl
or
or
inc
repnz
pusha
jne
rol
ss
push
outsl
je
out
mov
cmp
and
or
stos
loop
lcall
lret
xor
in
orl
in
test
imulb
adc
loope
jnp
test
pop
or
test
mov
xor
loope
sub
add
sub
fists
dec
into
out
cmp
adc
sbb
clc
xchg
xchg
adc
cmp
xchg
and
loop
pop
pop
scas
imul
jp
test
lret
idiv
shr
popf
dec
xchg
lret
push
mov
xor
pop
test
repnz
daa
lea
add
cmpsb
rcrb
mov
fiaddl
out
pop
cwtl
mov
jmp
cmp
stc
test
sbb
jno
mov
les
imul
test
xor
sbb
push
adc
cmp
xchg
lret
xchg
das
adc
add
aas
lret
xor
insb
sbb
aaa
loope
xchg
xor
es
sbb
cmp
sub
out
sub
jbe
adc
xor
nop
lods
and
enter
push
adc
dec
mov
adc
movsb
sbb
test
adc
mov
add
jae
mov
add
jns
popa
andb
std
xchg
aad
xchg
sbb
clc
lret
out
xchg
dec
out
insb
nop
or
pop
dec
adcb
sub
xchg
dec
rolb
out
cmp
subl
sub
outsb
cmp
divb
nop
mov
out
xor
out
sub
xor
pop
repz
mov
adc
mov
or
inc
mov
scas
add
xor
test
movsb
repnz
push
fsub
mov
inc
ja
or
andl
mov
das
insb
mov
fistps
jp
mov
sti
jl
mov
push
mov
push
jmp
int3
nop
fmul
xor
cltd
adc
insl
xlat
push
and
dec
rcll
xchg
push
enter
das
push
jae
cmpsl
adc
xchg
inc
lods
test
mov
mov
jl
int
mov
stos
adc
das
lahf
push
repnz
and
inc
xor
push
jecxz
sbb
dec
stos
sub
or
icebp
cmp
push
je
mov
jne
xchg
mov
int
sbb
jmp
adc
out
shl
or
test
jae
sub
sbb
jmp
or
subl
push
mov
fmuls
sbb
clc
stc
ja
mov
xchg
add
mov
sbb
and
xchg
pop
loop
imul
fcmovnbe
or
mov
rcl
sti
outsl
pop
aad
aaa
mov
test
xlat
movsb
pop
imul
xor
or
inc
and
out
mov
cmp
jns
mov
sub
cmp
rclb
adc
inc
movsb
jp
add
jne
div
mov
test
xchg
jo
xlat
dec
test
or
adc
dec
setp
stc
scas
ljmp
mov
lcall
jl
pop
outsl
and
dec
inc
outsl
lret
ret
js
xchg
push
adc
xchg
je
and
call
ret
xchg
test
lds
sub
pop
pop
xchg
mov
jge
push
loope
loop
and
pop
adc
or
neg
cwtl
cmp
ret
cltd
push
rcrb
xor
jns
adc
pop
and
mov
out
sub
mov
lea
sti
cs
jle
inc
and
dec
pop
or
xor
test
mov
pop
je
or
cmpb
mov
orb
add
cs
jbe
stos
loopne
imul
sub
xchg
daa
stos
inc
push
ja
cmp
pop
mov
shlb
cmp
aam
jg
inc
mov
fucomi
adc
mov
in
cmpl
inc
lods
mov
sub
out
or
pop
int
cmp
mov
xor
lods
iret
sub
push
ret
lcall
stc
fcomps
jns
push
out
mov
mov
ret
fmuls
pop
sar
lods
mov
movsb
mov
sub
jno
out
cmpsb
lds
pop
mov
lahf
add
jg
inc
orb
pop
fistl
out
daa
insb
loop
nop
and
dec
sub
mov
sbb
fwait
lret
xchg
fistpl
aas
test
pop
dec
cmp
andl
shl
aad
pop
pop
out
fldl
fisubs
inc
push
fstpl
push
sbb
and
mov
iret
push
push
inc
fisubs
add
sbb
push
sarl
and
pusha
jge
xor
lds
xchg
into
aas
test
jbe
inc
sbbb
inc
shrl
jns
sub
movsl
sub
jecxz
cmp
cwtl
push
dec
mov
outsl
sub
jno
sbb
cmp
sti
push
pop
pop
js
sub
dec
jo
mov
pop
pop
fs
adc
or
add
cld
mov
test
shl
push
lret
lcall
orb
or
cmp
inc
lods
pop
ds
sbb
jne
scas
push
inc
xchg
jnp
sbb
repnz
fdivrs
shlb
jo
testw
pop
sub
push
xor
aaa
stc
incl
mov
sbb
lods
pop
cmc
jns
xor
sti
stos
mov
push
repnz
xchg
jb
addr16
mov
xrelease
lea
mov
mov
dec
nop
repnz
sbb
sub
mov
sbb
lcall
cmc
sbb
xchg
push
push
sbb
mov
js
mov
je
push
sub
or
into
test
imul
rol
pop
scas
lds
lret
or
pop
add
inc
adc
pop
andb
pusha
aas
lods
add
lock
stos
fadd
lods
icebp
push
pop
int3
daa
lods
dec
test
ficomps
mov
or
sbb
int
dec
fmull
or
push
mov
pop
repz
or
movsb
or
mov
dec
xor
dec
andl
lock
adc
and
mov
dec
cwtl
cmc
int
sti
jg
adc
out
sub
xchg
cmp
push
les
aaa
sbb
push
arpl
and
xchg
cmpsl
aam
xlat
adc
xor
mov
mov
cltd
xchg
push
cmp
icebp
rcrb
jl
mov
mov
adc
fwait
loope
push
add
inc
or
out
cwtl
fwait
and
test
mov
or
inc
cmp
adc
dec
out
stc
push
sbb
xchg
imul
push
push
data16
mov
mov
cmpsl
in
mov
sub
mov
scas
jns
bound
xor
xchg
mov
pop
mov
ss
dec
pop
push
sahf
xchg
dec
fnsave
dec
in
jg
push
mov
jbe
mov
push
inc
pop
mov
out
xor
nop
add
mov
clc
adc
sahf
push
stos
fs
jle
test
mov
pusha
cmp
test
cmp
sub
push
add
mov
scas
inc
mov
fdivs
or
jp
adc
pop
loope
sub
sub
loop
xlat
in
in
inc
mov
fisubs
add
popa
mov
inc
dec
mulb
mov
jo
cmp
subb
test
es
sbb
and
out
mov
popa
xchg
xchg
xor
dec
jg
stc
lcall
jae
imul
xchg
mov
repz
cmp
and
inc
pop
out
inc
and
inc
pop
jmp
sahf
mov
sbb
orb
push
mov
cmovno
push
pop
dec
or
rorl
dec
loopne,pt
jmp
jbe
in
jne
scas
add
mov
jns
dec
arpl
mov
insl
mov
add
fidivrs
out
jne
dec
leave
sub
movsb
pop
adc
push
push
cmp
sbb
outsb
pop
fimull
out
mov
data16
jge
mov
call
sub
call
push
bound
movsb
jae
xchg
jp
shrb
push
xor
test
addr16
clc
mov
push
fistps
jns,pt
mov
add
mov
test
xchg
lea
outsl
and
sbb
clc
lret
test
movsl
rcr
ret
jl
add
mov
add
in
outsb
test
movsl
cs
sub
aas
addb
cli
sahf
adc
xor
arpl
flds
push
fnstsw
jne
inc
pop
mov
sub
sub
popf
shrb
es
xchg
dec
out
adc
dec
sub
in
dec
neg
mov
adc
dec
rorl
gs
fdivrs
inc
jno
loope
lahf
xchg
and
imul
xor
inc
pop
or
pop
inc
cmpsb
jne
sub
push
adc
jmp
mov
scas
push
mov
jle
add
scas
loop
insb
outsb
add
addr16
cmp
dec
mov
nop
sub
pop
addr16
sbb
xchg
fwait
cld
xor
shl
cli
xchg
icebp
mov
sub
rcrl
sub
hlt
pop
jecxz
fsub
push
pop
repnz
adc
inc
jbe
pusha
inc
outsb
fimull
add
xor
lret
xor
jbe
or
xlat
into
pop
jle
outsb
jbe
push
pop
mov
mov
dec
jl
aaa
cmpsb
das
ljmp
rolb
push
push
out
inc
test
pop
adc
pop
andb
cmp
add
jp
cmp
sbb
imul
addb
bt
and
mov
push
fldl2e
dec
cmp
pop
pop
xor
bound
scas
mov
cmp
pop
mov
jle
and
and
dec
jmp
aad
shlb
add
out
mov
push
xor
mov
xchg
fsubl
jge
sub
xor
or
loop
xchg
mov
xor
xchg
loopne
aas
pop
sbb
fidivrs
in
in
xchg
xchg
std
cmpsl
lahf
repnz
popa
scas
fistpll
dec
push
adc
adc
sbb
pusha
cli
cmpsb
das
xchg
dec
scas
dec
sbb
xor
add
pop
daa
in
xchg
mov
mov
pop
inc
pop
xor
ds
xchg
std
sub
cmp
inc
rcl
push
lods
addb
adc
lds
mov
rcrl
sbbl
cwtl
sub
ja
add
sbb
popf
or
fidivs
cmp
adc
testl
sub
push
jae
je
cmp
sbb
fldenv
test
loopw
jae
fsubrs
xchg
gs
mov
push
push
je
jb
sbb
push
mov
cwtl
roll
xor
aas
clc
dec
or
push
lds
and
lea
mov
mov
dec
add
mov
adc
iret
movb
add
cmp
dec
scas
push
or
mov
fnstsw
fistps
inc
and
jnp
sbb
cmpsb
enter
testb
mov
inc
sti
mov
add
dec
in
pop
push
add
in
cmp
and
cwtl
cmpsb
adc
jne
mov
jecxz
test
lahf
movsb
pop
test
xchg
jb
test
or
xchg
sahf
clc
in
mov
mov
mov
daa
pop
iret
or
iret
cli
icebp
shlb
loope
xor
cmp
mov
sub
sarb
decb
cmp
ja
mov
lods
movsb
jb
icebp
xor
ss
movsb
sbb
ja
jno
stc
pop
and
fcomps
or
push
push
mov
inc
cmp
shrb
mov
xor
mov
dec
cltd
stos
sbb
fldenv
leave
clc
fwait
das
out
mov
xor
aam
int
int
outsl
jae
cmp
jb
dec
psubsw
das
and
mov
jl
ret
in
inc
push
cmp
push
fsubl
aas
out
call
lds
addr16
aad
jns
ss
lock
add
cmp
out
ds
repnz
filds
out
inc
and
dec
mov
or
mov
xchg
pop
mov
iret
call
or
xor
xor
mov
or
inc
add
jns
mov
mov
xchg
lds
repnz
add
xorl
push
cmp
sahf
loop
jne
ret
cmp
push
movsb
jle
in
mov
push
out
xchg
xor
or
icebp
jecxz
std
roll
scas
ds
es
outsb
int3
fwait
and
ljmp
mov
in
popl
ds
mov
xor
aaa
ja
lods
insb
adc
and
sub
sbb
out
lcall
mov
xchg
fists
popf
test
add
push
fcmovbe
jle
mov
je
out
or
clc
js
adc
into
xchg
cmp
add
ja
sub
add
lods
daa
pushf
push
and
pop
mov
gs
fdivl
xor
in
loop
dec
mov
inc
loope
sub
out
mov
cmc
mov
push
in
cmp
xor
push
push
decl
or
and
mov
arpl
cmp
movsb
mov
xchg
ret
sub
mov
or
cmpb
jmp
mov
sbb
xchg
jle
and
subl
popf
push
mov
add
dec
es
cmp
jbe
js
cmp
xchg
add
hlt
cmpl
mov
sbb
scas
mov
std
cmpsl
test
xchg
jg
hlt
pop
ret
or
ret
push
loope
and
sub
and
push
sbb
add
loopne
or
inc
jmp
push
loope
sti
ds
xchg
cmpsb
je
jo
js
adc
fisubs
xor
iret
adcl
jle
aam
out
ds
push
xor
loop
push
into
test
hlt
mov
out
lret
repnz
and
and
mov
in
das
popa
fwait
mov
mov
jecxz
sbb
and
iret
fcomi
xchg
cmp
insl
out
adcb
in
clc
pop
and
add
push
loope
clc
bound
imul
repz
and
sbb
daa
out
mov
pusha
in
pop
adc
inc
std
jmp
scas
push
push
sub
and
mov
jle
push
daa
adc
fwait
jne
sub
movsl
idiv
xchg
xchg
jnp
sbb
mov
mov
imul
mov
xchg
insl
cmp
xchg
xchg
mov
cs
outsl
mov
repnz
sbb
leave
xor
xor
sub
pop
lock
and
mov
movl
data16
aam
xchg
add
or
mov
in
mov
mov
push
xchg
lock
jnp
test
add
jecxz
adcl
push
push
jno
ljmp
popa
cmp
out
xchg
in
pop
repz
ja
dec
xchg
cwtl
sti
fwait
inc
pop
test
xchg
ret
xchg
xor
loop
xor
mov
gs
lahf
xchg
ret
mov
mov
ljmp
popa
adc
jns
pop
mov
fmul
loop
les
cmp
sbb
mov
cmpl
xchg
movups
cld
scas
std
fldenv
xchg
xchg
xchg
ljmp
lret
jo
leave
fists
fbstp
add
loopne
push
push
xchg
dec
repnz
push
sub
movsl
push
sbb
outsl
and
test
addb
sbb
mov
push
hlt
sub
dec
dec
imul
inc
pop
scas
addr16
xchg
sub
dec
ret
cmp
movsl
jb
lods
mov
test
pop
loopne
iret
insb
sub
aad
xor
pop
sbbl
mov
clc
push
add
in
sbbb
scas
jne
add
mov
push
and
mov
imul
fisttpl
rep
bound
and
pop
cwtl
je
mov
add
outsb
daa
jmp
int
pop
cmc
lds
test
hlt
daa
jns
sbb
mov
cmpsl
cli
and
in
sahf
sbb
adc
shrb
rolb
sbb
mov
aad
mov
aas
not
aas
cltd
push
or
js
adc
dec
xchg
mov
in
adc
jno
xor
orl
es
pop
and
jno
lahf
add
cmpsl
add
push
movsl
push
inc
jl
gs
hlt
fcomip
push
push
mov
iret
jnp
fidivrl
push
sahf
decl
jle
or
stos
xchg
hlt
sbb
iret
lret
push
mov
xchg
not
test
clc
popf
add
cli
out
movsl
shr
fcoms
jne
sub
push
ss
fiaddl
fwait
dec
jns
enter
in
inc
in
sahf
roll
pop
rcrl
fidivrl
jecxz
jg
in
dec
popf
mov
or
stc
mov
jb
mov
xlat
mov
mov
pop
pop
nop
out
lods
mov
into
xchg
mov
loope
jecxz
pop
inc
out
movsl
push
dec
push
mov
int
mov
test
pop
mov
int3
xor
xchg
sahf
fdivrp
addb
les
pop
pop
and
xchg
ljmp
fimuls
mov
ficoml
in
out
mov
xchg
xorb
add
and
cli
jl
pusha
dec
inc
mov
lock
inc
cmpsb
mov
shlb
mov
push
mov
int
inc
cmpsb
mov
push
adc
xchg
dec
test
cmpsl
sbb
sbbb
lods
pop
cwtl
dec
lods
loopne
lahf
xchg
imul
imul
movsb
add
enter
andb
ja
loope
mov
dec
cmp
or
mov
shrb
cmp
inc
dec
sbb
addr16
testl
ret
pop
mov
sub
jno
dec
push
aam
xchg
push
pushf
fadd
gs
or
das
dec
jge
fnstsw
xlat
negb
lds
std
stos
stos
adc
add
out
je
sbbb
out
test
pop
in
pop
mov
xor
fcmovne
ds
mov
pop
mov
jo
ret
sti
cli
add
mov
fs
lds
adcb
addl
stc
dec
and
sarb
adc
out
test
out
cwtl
movsw
jl
scas
adc
popf
movsb
fwait
movsb
adc
pop
mov
cmpsl
lahf
insb
enter
jmp
addl
aaa
mov
add
rcrl
pop
sbb
sub
lods
adc
and
adc
pop
jmp
and
mov
test
mov
or
fistpll
inc
mov
enter
mov
and
into
nop
sbb
test
lahf
jnp
inc
in
pop
xor
imulb
jl
or
mov
ret
adc
flds
sbb
inc
xor
movsl
xchg
rol
mov
xchg
imul
inc
push
dec
lds
test
jns
mov
cmp
fdivl
neg
out
ja
dec
insb
repz
pushw
push
cmc
stos
cli
lods
cli
lahf
ds
cs
movsl
jmp
mov
mov
inc
cli
push
movsl
sub
test
pop
push
sbb
add
mov
pop
mov
jle
jbe
add
es
xor
add
ds
sub
cmc
icebp
rcl
dec
shr
jb
loopne
orl
sahf
add
sbb
cmpsb
xchg
jl,pt
jge
xor
jno
mov
leave
jo
faddl
jb
xlat
jb
push
loop
sbb
lret
mov
insl
test
aam
insl
std
jmp
or
inc
xlat
addr16
cmpsb
ucomiss
cmp
inc
inc
push
dec
rorb
lahf
lods
cmp
dec
jg
and
mov
insl
insb
stc
test
mov
ss
push
pushw
test
adc
push
fsubr
mull
sti
lds
mov
cmpsb
xor
add
lods
mov
and
fcoms
fstpt
sarb
cmpsb
mov
aas
sbb
sti
dec
cmp
sub
xchg
inc
xor
scas
sbb
ret
inc
jo
mov
sarb
loopne
out
cld
sub
and
gs
sub
imul
mov
adc
nop
jle
imul
xchg
mov
enter
pop
mov
cmpsl
call
scas
cltd
aam
je
std
fists
das
sbb
pusha
add
leave
pop
sahf
dec
xchg
xchg
mov
add
jecxz
dec
sbb
test
subl
les
inc
roll
inc
ljmp
fs
jp
ss
push
sti
jecxz
push
paddw
enter
sub
int
stos
call
jle
push
outsl
addr16
pusha
jp
icebp
sahf
cmp
out
sub
push
lret
cmp
repz
jae
adc
sarl
int3
push
mov
pop
pop
pop
xlat
nop
jnp
inc
stos
lret
imul
mov
sbb
pop
addr16
pop
outsl
mov
ds
sub
mov
stc
cld
push
call
ret
mov
hlt
es
imul
mov
loop
call
movb
add
xor
int
dec
xchg
aas
push
dec
and
jnp
xlat
popf
cmc
mov
cmc
insb
push
cmc
int
and
in
push
jge
mov
sbb
scas
sbb
and
push
adc
push
xchg
xchg
push
gs
jae
pop
add
out
add
and
outsb
into
mov
jg
sbb
shll
add
fs
inc
ljmp
and
fs
rcll
mov
mov
xchg
insb
push
shll
cld
addl
pop
in
push
divps
iret
sbbb
rcrl
or
xor
ficompl
inc
xchg
lea
orb
xchg
adc
fstpl
decl
push
je
into
dec
add
xchg
push
mov
xchg
idiv
push
and
adc
and
xor
dec
hlt
or
arpl
jb
imul
adc
pop
xchg
mov
sbbb
ja
mov
imul
and
mov
fwait
mov
pushf
inc
dec
mov
fcoml
lds
cli
xchg
adc
test
movsb
addr16
js
mov
pop
test
pop
adc
dec
shll
pushf
mov
int3
xor
test
xor
iret
push
dec
sbb
push
adc
shll
push
mov
pop
mov
aaa
lret
les
test
insl
dec
shlb
andl
scas
adc
pop
cwtl
mov
jb
mov
into
outsl
cli
inc
insb
dec
loop
mov
test
out
inc
cmp
testb
and
daa
jo
popl
and
popa
imul
gs
inc
fistps
inc
cmpsl
xlat
mov
sahf
pop
mov
popa
fstl
popf
cmpsb
dec
pop
cmpsb
addr16
mov
xchg
mov
popa
stos
leave
dec
dec
jp
addr16
inc
jmp
arpl
enter
jae
mov
lods
pop
jl
fwait
xchg
jmp
inc
or
jo
xor
inc
mov
out
mov
and
cmp
fwait
outsl
divl
cmp
mov
pop
data16
shlb
dec
jl
mov
inc
movb
mov
insb
stos
gs
call
xchg
call
adc
int3
pop
mov
add
in
lcall
dec
fldl
cmp
xor
out
mov
lcall
pop
sbb
lods
xor
mov
sub
lods
pop
pop
xorb
sub
ret
test
pop
pusha
jp
xlat
icebp
dec
pop
test
and
pop
nop
pop
jae
lods
push
sahf
xchg
out
inc
ds
outsl
out
mov
jle
mov
arpl
mov
jp
mov
lock
add
stc
ja
lret
outsl
in
pushf
lret
sahf
add
into
pop
repz
sbb
pop
ds
dec
subl
sar
add
sbb
xchg
jb
dec
stos
dec
sub
sti
lods
mov
lods
mov
out
leavew
adc
mov
adc
xlat
xchg
test
cmp
movlps
xor
sub
adcl
sbb
sub
xlat
pop
inc
or
jo
jo
sub
mov
stos
jle
sbb
pusha
je
jnp
inc
cmpsl
and
mov
push
and
mov
add
inc
jns
xchg
push
add
jl
mov
cmp
ljmp
or
xor
into
mov
imull
xchg
insb
push
test
mov
lcall
pop
mov
out
and
jo
adc
push
lods
bound
adc
sub
push
cmp
jae
push
xor
test
enter
fdivr
push
movsl
push
xlat
or
test
mov
cmpsb
jg
in
pop
loopne
xchg
add
in
add
dec
fsubl
ds
mov
sahf
push
push
or
loop
push
test
test
pop
out
loope
cld
cmp
mov
sbb
repnz
or
ds
mov
pop
or
imul
das
lds
movsl
and
push
test
jb
fs
adcb
aaa
mov
or
sahf
adc
jmp
add
mov
les
add
mov
call
div
imul
push
into
inc
adc
clc
dec
or
rorl
mov
push
add
pop
add
jns
push
mov
lods
leave
adc
dec
or
imul
insb
xorb
getsec
jmp
mov
add
loope
jae
inc
shll
test
inc
pop
push
out
ss
ret
lcall
cli
and
adc
rcll
adc
push
jge
mov
movsl
movsl
push
pop
mov
hlt
movsl
pop
test
add
mov
imul
lods
pop
add
pusha
in
rcll
and
subl
fildl
lods
call
lcall
xor
and
out
pop
movsb
rcrl
enter
scas
dec
xchg
loop
jmp
sbb
adc
sar
nop
and
jmp
push
cmp
jne
xlat
ret
int
pop
in
into
add
in
mov
imul
adc
and
call
jo
sbb
hlt
pop
aam
adc
ds
cli
add
inc
jns
add
and
int3
stc
inc
testb
mov
faddl
insb
and
pop
sti
cmp
cmp
jbe
into
push
sub
fcmovnu
add
loope
push
inc
dec
pop
aam
mov
xor
sub
push
push
out
push
repnz
idiv
xlat
sub
int
jmp
mov
inc
out
scas
mov
sbb
fldl
dec
mov
outsl
inc
cmp
mov
jecxz
cld
lret
sub
mov
pop
lea
and
scas
mov
addr16
jmp
in
dec
loopne
push
push
mov
cmp
loope
mov
mov
jb
test
xor
cmp
sub
test
lea
sub
fld
inc
pop
xchg
fs
cmpsb
push
pop
jne
xor
jae
dec
and
jae
lods
pop
adc
jae
das
mov
xchg
lds
jl
xor
ljmp
lret
cmpsl
movsb
pop
adc
inc
dec
mov
cmpb
jnp
fldcw
out
xchg
mov
mov
cmp
mov
in
pop
jecxz
mov
jb
adc
iret
xchg
mov
push
fldt
jnp
movsl
clc
xchg
mov
call
xchg
xchg
pop
lcall
mov
jmp
insb
fsubrl
sub
je
inc
lret
mov
lcall
add
xor
ss
popa
nop
in
bound
in
pop
jae
mov
pcmpgtb
rclb
out
and
xchg
aaa
inc
jmp
ljmp
loope
adcb
inc
ret
dec
push
xor
xchg
outsl
jmp
dec
mov
pop
mov
add
int3
out
xor
mov
xchg
ret
push
push
adcl
jle
sub
and
sbb
push
inc
popf
imul
or
test
dec
arpl
push
mov
push
andb
aad
dec
in
loop
dec
pushf
push
pop
mov
cmc
pop
jge
inc
jo
lret
es
xor
insl
pop
and
jne
es
hlt
call
jp
imul
sbb
cld
xor
jecxz
imul
push
jge
loop
inc
sti
and
sub
adc
xor
cmp
or
adc
mov
int
repnz
mov
inc
scas
cmp
pop
lods
pop
jge
pop
retw
push
lds
shr
adc
cmp
cltd
push
cmp
sub
fcompl
ret
bound
dec
jne
jbe
adc
pop
test
fadd
enter
lea
mov
mov
into
adc
xchg
mov
inc
sbb
jecxz
add
loop
fiadds
imulb
int3
mov
in
and
loopne
pop
push
fists
shrb
xchg
clc
ficoms
sti
mov
inc
sub
pop
jae
xor
repz
out
std
xchg
or
imul
jne
mov
hlt
aad
mov
fwait
push
jae
lret
xchg
mov
movsb
js
xor
pusha
sbb
insw
xchg
lahf
lods
push
jno
cli
aam
stos
xchg
popf
adc
leave
outsl
mov
in
mov
mov
stos
add
rcrb
or
fwait
enter
ja
lret
and
jb
push
mov
dec
mov
pusha
arpl
inc
cmp
cli
pop
in
push
jg
xor
scas
jne
test
fs
unpckhps
leave
rclb
dec
imul
adc
push
out
lds
gs
jo
ljmp
dec
pop
popf
inc
js
dec
stos
add
dec
pushw
test
sbb
bound
imul
mov
xor
adc
mov
sub
and
pop
mov
int
xchg
push
jg
inc
es
and
pop
mov
sbb
enter
outsl
push
pushf
in
lcall
gs
mov
sub
or
clc
mov
xchg
aad
or
xor
into
mov
bound
in
mov
mov
mov
xor
gs
mov
lret
stos
inc
leave
std
pop
sarl
adc
cmp
sub
push
xchg
push
sub
int
leave
add
ds
pop
mov
mov
stos
jecxz
push
mov
or
mov
push
xchg
or
xor
dec
into
shll
lock
inc
das
bound
orl
adc
jp
add
movsb
imul
mov
test
test
mov
movb
xchg
mov
push
xchg
dec
inc
inc
push
sbb
pop
sub
stos
push
mov
jno
jecxz
push
testb
xchg
out
mov
stos
sub
pop
mov
das
movsl
das
mov
sub
mov
and
inc
out
pop
jmp
inc
fcompl
sarl
ljmp
jp
xchg
xchg
jne
adc
mov
push
sti
fstp
jg
cmp
mov
out
jno
inc
or
adc
inc
or
icebp
dec
sub
push
add
push
cmp
lret
mov
cmp
lcall
inc
sti
fld
scas
lea
in
pop
mov
incl
or
cltd
pop
insb
and
xor
out
push
imul
sbb
push
inc
es
pusha
repz
add
out
shll
jo
int3
clc
xor
aaa
int3
inc
sbb
jbe
outsb
xor
fcom
mov
insl
stos
and
hlt
icebp
lahf
fimull
scas
inc
add
test
mov
xchg
ja
or
pop
in
out
pop
stos
repz
ss
lock
shrl
in
mov
push
sub
and
out
jp
ljmp
mov
mov
xor
outsb
aas
xor
jmp
add
aaa
jno
icebp
add
out
imul
cmp
sbb
dec
pushf
std
dec
cmp
xor
xlat
mov
fcmovu
or
js
aaa
sbb
jecxz
stos
xchg
jmp
or
or
pop
lods
loopne
stos
test
or
xchg
push
int3
aam
xchg
xor
dec
clc
fsubrs
xchg
das
das
pop
dec
js
push
loope
mov
inc
cmp
jl
pop
movsl
xchg
dec
push
aam
loopne
jecxz
fcomps
xchg
mov
sbb
sbb
ljmp
push
mov
push
cmpsl
out
dec
mov
dec
lret
and
push
iret
jnp
inc
imull
xchg
inc
add
inc
mov
iret
and
jb
jp
cld
rcrb
sub
pop
inc
lods
outsl
pusha
movsb
ds
clc
leave
and
in
stc
pusha
pop
xor
cmp
cmp
mov
jae
aam
call
push
mov
stc
push
loopne
sahf
jmp
and
inc
sub
pop
lods
or
stos
inc
mov
fbstp
cmpsb
and
cmpsb
sub
std
jo
frstor
push
and
out
sub
test
lahf
rcrl
cltd
mov
ret
lods
orb
ret
inc
pop
fcomip
cmc
lret
adc
pop
add
aas
es
and
fldl2t
xlat
in
lods
or
sub
imul
xchg
mov
out
nop
or
push
daa
sbb
sarb
cmc
inc
enter
mov
add
insl
adc
into
pop
jae
mov
mov
adc
leave
mov
cmp
les
dec
pop
mov
or
dec
mov
mov
stos
das
repz
test
test
aaa
xchg
xchg
sub
pop
mov
aad
jmp
stc
mov
inc
les
pop
outsb
shrl
ret
mov
push
rcrb
nop
and
ljmp
jl
xchg
xor
add
sbb
ja
aam
dec
popa
sbb
push
enter
in
sub
scas
jg
mov
out
or
movsl
lcall
dec
mov
loope
cltd
fdivrs
cmpsl
pop
std
jae
dec
or
pop
dec
bound
adc
push
xchg
pop
jle
mov
ja
ror
imul
mov
pop
xchg
jp
mov
int
addr16
lahf
lods
pop
je
cs
adc
xor
insb
jecxz
jmp
xor
jne
lret
inc
mov
jg
cli
push
int
icebp
in
sub
sub
or
sbb
inc
es
pop
stos
mov
or
std
in
xchg
loop
addl
and
cmp
sahf
push
or
jno
rcrl
push
add
xor
xlat
jae
cmpsb
sub
in
int3
lods
aas
sahf
das
test
jae
pop
arpl
sbb
rclb
push
xorl
ljmp
fdivs
lret
dec
into
sbb
fmul
jmp
jl
stos
add
lds
xchg
xchg
imul
xchg
inc
xchg
sbb
cmc
jg
mov
cwtl
or
repz
mov
arpl
shll
sbb
bound
rcll
cmp
jp
cs
inc
push
and
loop
or
adc
fwait
fs
jo
lods
sbb
cmp
mov
data16
jg
adc
push
fisubrl
into
popl
scas
push
sbb
and
mov
sub
dec
jb
and
ds
xor
cmpsb
sub
enter
in
outsb
andb
insb
cmpsb
movsb
enter
stos
lds
sub
adc
movsb
mov
dec
xrelease
stos
stc
aaa
inc
fistpll
bound
push
dec
fbstp
ret
cmc
out
cli
pop
inc
and
or
cmp
push
scas
out
icebp
mov
repnz
add
jecxz
das
test
adc
lds
jge
lea
sub
mov
mov
sub
add
test
subl
addr16
sub
dec
and
in
imul
insb
sub
in
push
or
push
leave
jnp
lahf
stos
popf
rcr
inc
mov
xchg
or
mov
sub
in
fs
fildl
movsl
shll
cmp
and
xor
and
sahf
out
mov
shl
pop
in
aas
mov
dec
mov
cs
and
push
repz
into
xor
rorb
or
leave
mov
mov
cmp
pop
pop
insl
rorb
pop
data16
add
stc
imul
popa
adc
ljmp
subb
mov
bound
hlt
push
outsb
int3
popf
dec
ret
fidivl
in
dec
and
cli
hlt
push
lods
insl
pop
cmp
lahf
roll
orl
sbb
push
mov
out
jl
sbb
dec
lret
inc
xor
pop
stos
lahf
sub
in
add
das
and
mov
jo
mov
xor
sbb
mov
aaa
test
sbb
push
mov
push
mov
pusha
mov
out
cli
lods
ss
jmp
fwait
cmpsl
jo
adc
in
fsubrs
cmpsb
jnp
mov
xor
jns
jle
mov
pushf
data16
cmp
fcomi
shr
jl
jle
xlat
scas
push
out
cmp
rcr
arpl
dec
xor
mov
cmc
ja
xor
loop
push
test
rcrb
lcall
in
orb
lock
inc
mov
popf
ret
pop
aam
cs
xor
mov
lock
fidivl
scas
out
inc
cltd
mov
sub
jno
add
loope
ret
out
push
mov
push
sti
dec
push
cmc
or
inc
icebp
mov
arpl
lea
cmpb
pop
enter
inc
or
adc
mov
adc
add
push
fs
scas
rorb
das
leave
bound
push
dec
adc
or
cmc
test
hlt
mov
xchg
ds
mov
repz
jae
jae
mov
aad
cmp
dec
xchg
dec
push
popf
into
xor
push
fstl
jge
pusha
xor
out
mov
sbbl
jb
sub
repz
xlat
jl
xor
mov
call
jecxz
xchg
pop
xchg
in
pop
cld
andb
jns
mov
sbb
dec
mov
int
jb
jne
jae
and
scas
repnz
popf
add
lahf
ret
or
and
lret
cmp
pushf
jle
fsub
pop
les
in
std
push
xchg
shrl
sbb
shll
nop
popa
das
sarb
jle
aaa
mov
dec
test
or
bound
fxch
popf
mov
int
fs
fcompl
movswl
lret
xor
mov
inc
adc
test
pop
sub
int
jg
outsl
push
and
mov
dec
xchg
adc
icebp
jmp
lcall
sbb
pusha
or
fadds
cli
inc
push
pop
jle
data16
fistpl
cwtl
jmp
jmp
leave
es
leave
sub
mov
mov
lahf
pop
and
adc
movhps
adc
xor
dec
loopne
push
test
add
jl
mov
call
aaa
add
mov
pop
arpl
dec
stc
adc
or
popf
sub
aas
xor
fadds
mov
adc
shrl
jnp
or
fdivrs
push
bound
xor
mov
out
in
mov
js
sbb
fsubl
lods
sbb
inc
fsubrs
or
call
test
xchg
fidivrl
cmpsl
std
addr16
or
jne
std
je
inc
lds
jl
dec
outsb
push
lret
or
and
pop
mov
cmp
inc
movsl
int3
clc
enter
fwait
xchg
jg
push
jns
fstp
arpl
fcomp
fdivrs
add
movsb
je
xor
xchg
xchg
xor
sub
das
add
push
cmp
mov
pop
cli
dec
loop
add
out
adc
imul
leave
sbb
lahf
sqrtps
out
pop
int3
pushf
push
js
mov
push
cli
push
xor
xor
nop
xor
xchg
push
mov
ss
dec
mov
out
inc
in
loope
pop
icebp
stos
insl
xor
rorb
and
pop
inc
pop
sti
test
dec
std
inc
mov
out
mov
dec
add
mov
addr16
addl
adcb
pusha
in
out
fsubr
cmp
cs
lea
ror
mov
pop
push
and
insb
hlt
in
mov
jb
sbb
fdivrs
rolb
sahf
push
mov
pusha
fldl
pop
rcr
insb
xchg
out
loope
ljmp
mov
pop
imul
enter
push
or
add
pop
cmp
adc
sbb
fdivrp
in
out
ljmp
fisttpl
cmp
mov
push
sub
xor
ret
jnp
adc
mov
add
or
cld
jp
pop
inc
jp
mov
sbb
jb
mov
nop
outsb
loop
shll
inc
pusha
decb
in
xlat
loope
imul
jmp
jl
mov
std
idivb
aad
sub
outsb
jae
jge
inc
pop
cmpsl
scas
clc
mov
ficoms
cmp
dec
xor
jmp
mov
mov
jecxz
xchg
lea
or
adc
push
jg
daa
imul
cmp
mov
sarb
iret
ret
jne
xorb
adc
stos
repnz
push
sbb
pop
sbb
sub
addl
dec
stc
xchg
jno
pop
and
fnstenv
mov
mov
xor
jnp
scas
shll
sbb
fwait
pop
fsubrs
aam
cmp
push
xlat
loope
and
xchg
in
or
das
dec
xlat
std
mov
sti
mov
stc
push
loope
lcall
cmp
jl
jle
dec
inc
adc
sub
mov
add
repz
mov
mov
jmp
dec
nop
adc
xchg
nop
jmp
push
push
lods
fnstsw
imul
enter
cld
dec
fs
mov
jb
mov
mov
xchg
sub
pop
mov
mov
xchg
dec
and
jl
xor
mov
dec
sbb
cmp
idivb
data16
inc
stos
push
and
mov
jle
test
adc
lcall
ret
shlb
inc
cmp
cli
pusha
fistl
jnp
jno
push
sbb
test
clc
inc
push
mov
cmp
out
test
cmp
push
test
jno
adc
push
mov
sti
shlb
push
mov
dec
ss
addr16
xchg
push
popa
fistpl
int
fs
or
gs
or
jl
xlat
sti
or
je
or
les
mov
fwait
test
test
dec
jbe
rcl
pop
out
adc
in
fsubrp
lock
pop
xchg
push
jle
mov
mov
mov
insl
jb
sub
repnz
addr16
ljmp
jmp
nop
push
test
enter
rorl
jge
push
cwtl
mov
popa
orl
mov
jp
jg
add
jmp
inc
js
adc
cmp
icebp
pop
push
in
int3
and
mov
arpl
in
test
push
add
call
adc
pop
and
dec
in
test
cs
nopl
imull
testb
shr
jmp
nop
cmp
in
stos
addr16
imul
push
pop
mov
int3
sbb
lods
jno
arpl
jmp
sub
ja
mov
mov
call
loopne
sub
xchg
pop
push
fistpll
jp
mov
jge
push
loopne
in
mov
sub
xchg
cs
stos
vmovsldup
cmp
sub
cwtl
pop
cwtl
in
pop
les
out
stc
sbb
ja
sbb
les
dec
lds
push
mov
out
or
mov
adc
xchg
jp
xchg
inc
xchg
xchg
inc
in
inc
ret
lret
loopne
add
sbb
sub
orb
je
icebp
ds
xchg
es
jecxz
push
subb
test
je
sbb
pop
xor
loopne
jns
mov
js
and
out
std
jno
mov
fst
mov
nop
js
dec
dec
psrlq
enter
mov
sub
mov
xchg
mov
add
cmp
shll
pop
pushf
inc
lods
out
test
packuswb
dec
rorl
xchg
cmpsl
mov
fs
out
fisubrs
mov
cs
pushf
lods
xchg
xchg
push
sbb
stos
in
clc
mov
les
inc
jmp
xor
xchg
adc
xchg
and
add
xor
cld
xchg
xor
mov
mov
sbb
nop
sub
outsb
xchg
jp
jp
and
ljmp
and
xchg
sti
push
inc
out
or
out
dec
mov
mov
leave
inc
mov
xchg
mov
jne
out
mov
ljmp
mov
sbb
movsb
testb
xchg
mov
and
dec
mov
aam
push
js
out
pop
rorl
hlt
ficoml
xchg
hlt
movbe
cmp
fdiv
jbe
cmp
pop
push
das
or
test
popf
out
add
mov
stc
mov
mov
das
scas
mov
leave
add
std
in
mov
sbb
inc
xchg
or
cmp
sbb
add
imul
arpl
int3
jb
cmpsl
or
ss
cmp
jns
and
jge
xchg
and
pushl
add
mov
mov
push
sarl
addr16
addl
xor
mov
xchg
movsl
int
insl
xor
mov
xor
sbb
push
adc
mov
psubusw
mov
leave
xchg
test
fsubs
jle
neg
mov
rcll
int3
cmp
xchg
int
mov
cwtl
outsb
inc
mov
dec
mov
sub
sbb
xor
insl
in
pusha
ljmp
add
lods
jns
lock
movsb
inc
enter
test
test
pop
out
xlat
sahf
push
adc
adc
mov
nop
mov
push
add
je
mov
sub
xchg
aas
pushf
fmull
push
xlat
or
cmc
std
dec
add
xchg
test
lret
imul
sub
movsb
jecxz
jns
mov
adc
aam
sub
outsb
cmp
push
and
jbe
std
inc
ret
mov
cmpsl
inc
jae
addr16
push
rcll
nop
adc
ja
sub
lds
into
adc
jo
jb
and
mov
roll
mov
inc
call
es
mov
mov
mov
ljmp
scas
pusha
loopne
mov
jecxz
mov
insb
jg
dec
mov
movsb
fwait
outsl
popf
ss
dec
inc
aas
xorb
cld
movsb
sbb
xor
xchg
iret
cmp
mov
cmp
iret
test
pop
test
scas
push
movsb
mov
rcrl
data16
dec
sbb
inc
insb
aad
pop
cmc
cmp
lahf
in
mov
iret
sbb
sbb
xchg
mov
or
adc
sub
fbld
and
mov
fisubl
clc
and
mov
test
outsb
xchg
mov
sub
mov
inc
mov
xchg
sub
les
cmc
and
rcll
subb
and
jne
das
mov
mov
sbb
mov
push
mov
ds
sti
test
aaa
mov
sub
xchg
jmp
xchg
adc
xorps
mov
fsubrl
pop
daa
nop
pop
mulb
movsb
outsb
inc
pop
inc
fs
fnstsw
add
test
int
adc
push
cli
inc
lret
sbb
loope
xor
aad
aaa
adc
cmpb
add
insb
lahf
lods
cmp
adc
cmp
cltd
dec
test
imul
adc
push
cmpsb
scas
negb
jno
or
push
jge
orb
and
pop
ss
jae
ja
jl
js
lock
xor
cltd
cmpsb
pop
xchg
xchg
pop
adc
fiadds
arpl
dec
inc
lcall
pop
push
leave
push
in
xchg
jno
dec
dec
rorb
ror
or
pop
insl
push
push
lret
movsl
test
movsb
mov
dec
xor
stos
mov
insl
jae
xor
pop
jp
loop
inc
xor
xchg
mov
fidivs
call
inc
mov
jnp
and
mov
pop
xchg
call
in
adc
es
sti
in
cmp
mov
das
in
jge
cmp
mov
xor
adc
arpl
adc
bound
cmp
pop
lret
or
sbb
dec
scas
shrl
ja
ds
cmp
xchg
mov
inc
loop
mov
js
xor
iret
push
filds
push
inc
fdivl
pop
mov
push
or
pop
dec
push
xchg
out
test
and
xor
in
testl
add
cli
cs
inc
add
int3
lret
adc
xor
test
pcmpeqb
mov
pop
cmpsb
test
scas
movsb
push
sub
out
filds
pop
movsb
sub
scas
sbb
scas
mov
adc
or
int
shl
lods
pop
ret
mov
shll
push
xor
pop
add
xchg
addb
rcrl
xchg
push
out
inc
cmp
lock
cltd
jecxz
test
nop
cmp
xor
mov
popf
and
add
cmpsl
pop
in
daa
in
cmp
divb
mov
out
sub
mov
add
lods
xor
mov
push
adc
adc
push
hlt
jle
scas
mov
sub
cld
pop
fadds
cs
aam
xor
xor
jne
sahf
cmp
fistpll
mov
push
push
test
jnp
test
shr
iret
movsb
enter
jge
dec
cs
lock
out
aam
stos
sbb
loop
adcb
pop
inc
mov
xor
mov
int
test
or
out
jno
sub
adc
push
xor
insb
jno
ds
mov
repnz
and
or
lock
fmull
clc
mov
fs
lock
xor
sbbb
pop
pop
push
addr16
push
ret
add
dec
popa
push
adc
mov
and
push
jl
dec
shlb
out
lcall
cld
sub
xor
data16
sbb
or
js
repz
iret
mov
daa
push
stos
mov
scas
mov
dec
push
inc
jg
xchg
push
xor
pop
shrl
push
inc
fsubs
or
insb
imul
cmp
call
sub
stos
sub
mov
mov
mov
les
movsl
and
cmpsl
jnp
and
ljmp
push
lret
and
dec
adc
mov
adc
clc
dec
jle
add
out
mov
test
cmc
xlat
nop
repz
adc
mov
cmpsb
sti
mov
mov
ja
push
rorb
lds
sub
pop
mov
adc
js
fcoml
cld
shrl
es
test
into
lea
mov
mov
pop
fidivrl
inc
sbb
jle
out
mov
inc
xchg
std
mov
je
pop
inc
add
in
or
aas
mov
xchg
mov
bound
pop
aaa
and
shll
adc
hlt
or
pushl
sbb
ds
mov
adc
int3
pop
cmp
in
insb
lret
shll
mov
icebp
sub
fidivrl
movsl
cmpl
pop
sub
cmp
xor
push
xchg
stos
jns
xorl
mov
cld
inc
ret
loop
fs
push
testl
xlat
jle
add
cmp
pop
addb
test
aad
int3
and
testb
push
jge
notl
or
ss
or
adc
xchg
test
in
into
sbb
add
sbbb
into
loopne
dec
divl
mov
add
es
jb
jno
inc
aam
and
sub
mov
aas
mov
or
inc
negb
enter
pop
xchg
mov
sbb
les
sti
inc
inc
push
orb
jno
inc
push
fiaddl
mov
mov
push
xorb
notb
sbb
sub
mov
lcall
push
xchg
sbb
repnz
repnz
pop
fs
hlt
or
bound
jno
out
jmp
or
sub
das
movsl
ds
rorb
dec
pusha
mov
pop
adc
mov
cmp
cmp
pminsw
or
nop
dec
mov
or
mov
lret
andl
pop
ret
or
push
xchg
push
mov
loop
push
add
jbe
pop
movsb
jno
xorb
inc
inc
fdivs
mov
and
andb
push
ljmp
popf
xchg
dec
xor
mov
insb
push
popf
insl
cmp
xlat
jecxz
gs
andl
cmpsb
push
push
add
outsb
mov
cwtl
pop
cmp
inc
push
es
cwtl
adc
popf
int3
dec
out
das
push
outsb
cli
cld
or
cmpsb
outsb
inc
inc
sub
lret
mov
dec
in
gs
rcl
cmc
pop
test
inc
fdiv
jne
pop
cli
pop
push
aad
mov
cmp
jle
pop
lds
sbbb
pusha
shlb
sbb
and
inc
push
add
lds
cwtl
out
clc
add
insb
movsb
sbb
mov
test
cltd
outsl
ja
pusha
lcall
loop
sub
insb
les
iret
sbb
jae
xchg
jb
mov
shlb
xor
sbb
push
pop
test
pmaddwd
test
lcall
mov
fsubl
leave
pop
xchg
test
and
aam
iret
xchg
adc
subl
jmp
adc
add
lea
jg
xor
mov
dec
test
jl
push
stc
mov
testb
lret
dec
fbld
mov
cmp
lahf
negb
daa
fidivl
mov
call
jge
shlb
test
addb
aad
pop
mov
sbbb
xchg
cmpb
jle
sub
pushf
dec
fdivrp
xor
xor
loopne
arpl
in
lahf
pushf
shl
xchg
or
adc
push
gs
repz
lds
dec
dec
in
fstl
add
imul
cmp
pop
xchg
sbb
dec
mov
add
sti
dec
xchg
dec
or
pop
loope
inc
cmpsb
lret
pop
leave
daa
insl
enter
and
xchg
xchg
push
cld
and
loop
into
add
aam
jle
into
in
in
js
jmp
out
add
loopne
and
jns
sub
jno
sub
pop
popa
fstps
mov
les
add
jg
mov
add
push
dec
jp
out
rcrb
mov
sbb
sub
xchg
or
mov
sahf
rcrb
jbe
inc
nop
es
inc
lret
mov
aam
into
iret
scas
push
pop
push
das
repz
clc
rolb
dec
loope
jmp
cwtl
add
jno
pop
inc
stc
fistps
dec
adc
sbb
jl
into
cmp
xlat
enter
mov
das
cmpsl
mov
jl
pop
xchg
mov
dec
rcll
loop
cwtl
jl
loopne
scas
jp
xor
sbb
in
int3
xchg
mov
jg
xchg
scas
pop
xchg
pop
dec
cmp
push
cmpsb
rcll
sub
mov
or
roll
add
add
and
and
mov
inc
inc
ss
testb
jge
xchg
outsb
icebp
sbb
nop
add
adc
ret
or
jl
sbb
fildll
mov
jg
lods
ret
push
mov
inc
test
mov
xlat
mov
mov
mov
adc
mov
lds
sbb
xchg
ljmp
xor
mov
out
jne
fsubl
inc
adc
sub
sbb
cmp
add
loope
mov
pop
adc
cli
adc
shl
int3
lret
aam
add
aas
sub
xchg
ror
out
dec
stos
inc
push
and
add
ret
or
jp
ss
pop
addr16
sbb
divl
lods
add
mov
adc
pop
mov
sub
cmp
pop
dec
in
sbb
andl
aas
mov
loopne
xchg
dec
xchg
mov
jo
sub
sub
add
bound
fdivl
aad
ja
xor
sub
lods
arpl
xor
fxam
int
lahf
divl
xchg
mov
pop
cmp
lcall
jg
fwait
cmp
cmp
idivl
xor
sarl
cmpsl
jae
outsl
gs
dec
in
xchg
xchg
push
imul
fldenv
sub
lea
ret
bswap
mov
mov
jmp
mov
imul
sub
jae
aam
test
sbb
xchg
adc
and
sbb
mov
nop
push
loop
xor
popf
les
mov
cmp
shl
mov
mov
call
lcall
sbb
loope
out
stos
sar
in
imul
and
jae
pop
movlps
incb
cmp
jl
call
outsb
sbb
out
mov
inc
movsb
in
inc
lcall
ss
aaa
int3
daa
addr16
mov
scas
jl
enter
adc
int3
lret
push
test
es
popa
fisubrs
dec
adc
and
stc
add
mov
cltd
clc
rep
cmp
or
jo
insb
shrb
rcrl
data16
cmp
and
aam
test
popa
sbb
cmp
lods
stos
cmp
out
aaa
jle
out
add
hlt
fstpt
int
add
sbb
js
es
ret
xlat
jae
jmp
push
test
xchg
jmp
adc
outsb
sub
outsl
js
mov
dec
ror
xor
iret
jb
lea
roll
mov
sub
inc
sbb
jg
cwtl
mov
jp
mov
mov
add
sbb
push
bound
in
fdivrl
test
jg
or
pop
push
rcll
std
dec
add
pop
and
mov
into
cli
cli
jbe
clc
push
adcb
xlat
mov
sbb
fmuls
je
sub
cmc
mov
dec
popf
push
imul
inc
inc
stos
pop
enter
out
add
xchg
out
in
mov
rorl
aam
push
push
and
leave
pop
push
scas
imul
adcb
add
call
mov
cmpb
scas
or
les
scas
movsl
call
shrb
mov
repz
jle
dec
inc
in
scas
out
sub
pop
pop
inc
shll
push
out
cwtl
jb
sti
mov
sbb
ret
mov
addr16
xchg
aas
adc
rcr
pop
push
cmp
ss
push
pop
dec
scas
insb
lahf
iret
pop
xchg
lret
out
xor
mov
lea
sbb
shl
add
jl
notb
mov
ljmp
scas
into
push
rorl
stos
call
push
mov
adc
insb
jp
movsb
add
psrlq
jp
sbb
add
add
push
lea
push
adc
enter
xor
popf
jmp
loopne
dec
sti
bound
cs
enter
pop
dec
pop
jb
dec
rorb
cmp
aam
nop
test
mov
insl
movsl
cli
mov
fchs
in
jno
sbb
dec
leave
push
icebp
cmp
test
mov
cmp
jle
insb
pop
jnp
jne
sbb
fmull
adc
lds
out
pusha
dec
mov
lahf
lret
test
lret
pop
bound
dec
xlat
nop
or
cmpsl
jno
mov
jbe
pop
call
mov
adc
lods
cltd
jb
outsl
mov
jecxz
test
ja
bound
imul
nop
jmp
mov
clc
fwait
fwait
mov
lock
xor
mov
adc
bnd
inc
push
test
inc
xor
jne,pn
sub
push
das
add
inc
or
xor
je
fs
and
and
adcl
xchg
mov
sbbb
push
or
and
int3
pop
cmpb
cmc
repnz
les
icebp
xchg
lods
dec
imul
popa
or
repz
and
adc
mov
mov
dec
pop
bound
fdivrs
pop
jae
cli
pop
jne
add
gs
push
jmp
movsl
fstpl
or
dec
jbe
sub
add
jp
leave
sbb
sub
ja
mov
call
call
push
sub
cli
ficoms
sbb
out
dec
dec
inc
ds
roll
pop
inc
push
ss
loopne
xchg
nop
int3
int3
cmp
inc
ret
fs
repz
fnstcw
pusha
daa
enter
jns
out
icebp
sub
lahf
lret
or
push
adc
push
leave
pop
mov
out
rclb
dec
pop
int3
jl
xchg
icebp
and
stos
mov
cld
xchg
call
cmp
inc
das
jae
loope
mov
and
or
or
stos
mov
mulb
out
xor
sub
xchg
lcall
mov
cwtl
pusha
insl
js
pop
imul
sub
pop
add
or
inc
outsb
mov
fsubrs
sahf
mov
xchg
ljmp
stc
xchg
sub
loopne
out
imul
adc
mov
ss
sbb
dec
mov
xchg
jmp
movsl
les
adc
shll
lock
jne
jge
std
call
aas
pop
insl
pop
lods
jp
ds
lds
cmp
fnstenv
in
sub
or
and
inc
mov
fsts
jmp
pop
add
loop
add
stc
mov
sbb
and
pop
rcll
pop
and
sub
cltd
pop
mov
mov
lods
ss
test
jg
movsb
push
xor
aaa
xor
mov
inc
scas
lret
jmp
leave
jns
push
das
pop
cmp
jb
gs
imul
jae
jecxz
dec
fisubl
setge
dec
in
int3
pop
sbb
or
insb
lods
xchg
ret
xor
dec
ret
sbb
jle
inc
or
subl
and
jo
mov
imulb
xchg
add
adc
inc
data16
int
xor
xchg
adc
push
cld
jns
dec
bound
lahf
aaa
rorl
push
test
bound
xchg
cmpsl
push
mov
out
lea
lcall
xchg
push
dec
push
push
jmp
xchg
inc
and
mov
mov
jnp
mov
cmc
xor
test
push
and
xchg
or
fdivs
out
cmc
mov
test
mov
jno
movsb
ret
cmp
xchg
pop
popfw
xor
mov
loope
mov
xor
loopne
mov
in
push
add
xchg
clc
sti
imul
pop
js
pop
aam
xchg
cmc
rcrl
dec
adc
xchg
add
jb
jmp
movsl
add
cmp
dec
cmp
cwtl
add
dec
dec
mov
loope
xchg
repnz
stc
jne
pop
push
enter
cmp
aaa
ljmp
aas
repz
xor
negl
pop
cmp
lods
or
dec
dec
enter
movsl
outsb
xchg
imul
push
or
movsb
in
sti
hlt
outsb
inc
movsb
push
jae
shrb
inc
sbb
adc
cmpsb
or
push
sub
mov
jl
fadd
mov
dec
scas
mov
mov
xor
and
out
mov
lods
inc
int3
adc
out
xchg
lea
imul
inc
das
inc
lods
inc
dec
and
aam
mov
inc
repz
lahf
cltd
test
addl
jge
out
aad
fnstcw
test
popa
push
rdmsr
sbb
mov
mov
insb
stc
in
ret
enter
aas
test
jo
dec
xchg
push
cmp
outsl
popa
rclb
sbb
pop
xor
rclb
cmp
es
rorb
inc
pop
cmpsb
pop
jne
push
mov
addr16
sbb
mov
jle
push
jae
cmpsb
adc
push
addr16
es
mov
or
stos
jle
testl
mov
push
xor
test
lock
scas
jno
fcoms
sahf
test
push
hlt
inc
jl
ja
lret
inc
ds
inc
std
sub
adc
pop
push
sub
lods
inc
int3
mov
dec
or
jle
js
mov
jbe
or
sub
shl
pop
xor
call
sbb
daa
xchg
pop
inc
mov
loopne
movl
pop
cmp
in
cmpsb
pop
jl
fildl
jle
pop
jbe
mov
nop
cwtl
notl
adc
cmp
mov
jo
jo
mov
in
stos
inc
mov
sbb
stos
pop
outsb
shll
inc
jae
dec
dec
insl
sbb
fldenv
mov
sahf
sub
and
loopne
sbb
insl
lods
fisubrs
incb
dec
subb
call
insb
pushf
das
daa
outsl
inc
aaa
cmp
lcall
push
jo
es
mov
push
pop
mov
loopne
pusha
cld
imul
sahf
add
mov
xor
scas
nop
jmp
orl
aam
dec
or
mov
xor
dec
stos
into
dec
add
fidivrs
xor
arpl
stos
mov
repnz
cmp
jmp
cvtps2pi
inc
jae
test
dec
pusha
popf
popf
push
adc
lret
dec
hlt
add
test
lock
dec
push
pop
scas
sub
ds
and
jp
push
movsl
sahf
cltd
pop
push
and
or
pop
cmp
dec
movsb
cmp
push
mov
movsl
addb
jbe
dec
push
ljmp
xchg
insb
sbb
ret
pop
push
inc
imul
mov
sub
xchg
xorl
push
imul
ja
sub
add
cmc
or
rclb
mov
xchg
adc
sub
das
cmp
cmpsb
out
dec
movsb
xor
sub
lcall
lods
pop
lds
adc
add
lock
lcall
adc
mov
adc
add
movsb
and
cwtl
dec
sbb
adc
cmp
in
aas
adc
cmp
into
bound
jg
adc
push
dec
sbb
pop
pushf
or
mov
mov
pop
cmovno
imul
repz
jb
jge
cmp
fwait
adc
ja
arpl
lahf
loope
lea
enter
fcomip
xchg
loope
in
and
in
jno
ljmp
lods
es
dec
repz
xlat
jmp
mov
or
mov
add
lds
scas
push
jnp
stc
cwtl
jecxz
dec
and
mov
sub
popa
mov
pop
lods
std
pop
xchg
in
lock
mov
mov
dec
pushf
jbe
sub
mov
rcrb
inc
pop
repz
popl
xor
mov
sub
subl
jae
inc
pushf
roll
incl
jg
mov
adc
mov
adc
negb
mov
xchg
outsb
cmc
cli
test
cmc
pop
or
mov
cli
add
mov
fnstenv
sub
jnp
hlt
fs
cmpsl
shl
mov
inc
push
pop
pop
push
mov
push
popa
and
xlat
fildll
ja
loope
jns
adc
add
roll
mov
pop
sub
inc
push
xchg
ret
out
push
shl
mov
mov
push
insl
dec
icebp
jne
or
or
sbb
push
int3
ds
push
mov
jbe
jl
das
int3
test
lret
sub
pop
add
or
loop
ss
test
sahf
lock
fisttpl
or
popa
stos
das
cmp
fimuls
pop
mov
lods
or
dec
mov
adc
dec
mov
jne
in
mov
cltd
and
stos
cli
in
adc
in
mov
test
jmp
sub
call
inc
pusha
scas
imulb
sub
cmovns
jb
and
adc
sub
or
pop
dec
gs
push
xor
push
or
jl
lea
and
inc
push
not
add
jb
out
mov
mov
xchg
mov
mov
nop
fstps
ret
aas
jae
push
cli
cmp
dec
fnstsw
push
movsb
ror
inc
inc
pop
lods
loopne
mov
mov
insb
stc
mov
int3
adc
dec
mov
mov
lock
lds
negl
mov
sub
fimull
xor
fstpl
movsb
fnsave
out
xorb
cmpsl
jbe
out
jbe
ss
or
cld
pop
rcrb
pop
inc
inc
mov
push
pop
sub
fiadds
cmpsb
iret
push
mov
xchg
addr16
mov
xchg
sahf
adc
cs
push
mov
cld
repnz
mov
and
sub
mov
adc
lret
xchg
jecxz
movsb
jmp
lds
shll
push
and
scas
fmul
pop
ret
mov
xchg
jne
cmp
jnp
hlt
out
xchg
cwtl
icebp
mov
inc
pop
push
jae
lret
cmpsb
inc
sbb
mov
repnz
jb
mov
jecxz
int3
gs
outsw
sysexit
clc
inc
test
test
call
in
xchg
test
push
movsb
cmpl
or
aas
rcrb
pop
movsb
pop
loope
xchg
sbb
popa
sub
imul
cmp
out
push
cmp
xlat
xor
pop
add
mov
mov
sbb
lea
adc
decb
sub
cltd
adc
fwait
sub
push
fidivs
fimuls
imull
jne
mov
push
jmp
cmc
mov
lret
clc
push
std
mov
stos
js
in
rcrb
rcrb
jnp
push
sbb
mov
jo
adc
out
push
nop
xchg
pushl
orb
mov
mov
sbb
push
clc
test
jns
sbb
xchg
jl
lcall
mov
mov
mov
fs
jl
stc
and
inc
rorb
mov
dec
sbb
cmp
mov
jmp
pop
scas
mov
icebp
lret
rorb
loop
fcmovb
pop
stos
adcb
mov
jae
xor
pop
pop
outsl
popa
fisttpl
xor
and
push
jle
xchg
gs
or
pop
repnz
mov
and
mov
or
rcll
arpl
into
and
das
adc
jecxz
adc
push
ds
jae
mov
pushf
dec
add
call
adc
xchg
out
mov
xchg
fdivl
ret
push
fbstp
in
stos
scas
sbb
jecxz
ret
lcall
stos
enter
fsubrl
std
ss
ror
loopne
cmpsb
in
data16
xchg
cli
jge
xchg
or
add
cmp
push
cmp
mov
leave
fidivrs
mov
inc
imul
out
inc
out
jns
cmp
sbb
jnp
les
lea
fldl
roll
xchg
sbb
sbb
into
sub
xchg
sub
cmp
js
lret
rcr
sbb
jp
or
pop
add
js
sbb
pop
insb
negl
dec
cli
and
mov
ficoms
dec
cs
pop
dec
mov
jle
sahf
add
loopne
sbb
push
movsb
test
mov
sbb
mov
dec
fistpll
dec
jg
aam
xor
sub
lds
mov
sbb
lods
add
pop
mov
push
icebp
push
pusha
jno
pusha
add
adc
mov
out
div
mov
xchg
sbb
rol
mov
lods
out
inc
adc
wrmsr
popa
cmpsb
lahf
and
into
fs
jl
pop
dec
cwtl
mov
sub
popf
push
into
in
xor
faddl
movsl
cmp
addl
sub
in
clc
or
mov
mov
sahf
movsb
cmp
in
jmp
xchg
and
push
data16
in
and
dec
sub
pop
jne
xchg
dec
stc
dec
mov
loopne
in
lea
adc
add
jns,pt
mov
pop
add
mov
fmull
push
aam
fnsave
cmpsl
stos
stc
mov
sbb
xchg
adcb
inc
push
stos
dec
loope
inc
adc
add
aaa
push
addl
rcrb
out
inc
aaa
push
xor
sbb
lret
enter
add
xor
cltd
repz
jmp
xchg
mov
and
call
iret
outsb
in
cmp
aas
pop
cmp
dec
mov
mov
mov
inc
imul
push
scas
out
pop
shrl
js
sub
ja
jge
pop
sub
nop
mov
push
orps
jnp
mov
xor
pop
outsl
testb
push
mov
mov
popa
xor
inc
arpl
xor
and
aaa
stc
lret
mov
hlt
pop
pop
jae
and
ffreep
out
mov
mov
mov
mov
mov
push
test
push
subl
xchg
fisttpll
pop
out
jl,pn
jg
add
imul
pop
in
mov
xchg
fwait
dec
and
aaa
sub
mov
cltd
aaa
pop
and
mov
or
jmp
add
xchg
mov
stos
mov
jecxz
inc
mov
adc
adc
inc
cld
or
arpl
or
stos
or
mov
cld
popa
cmpsl
test
data16
inc
sbb
pop
cmp
adc
and
adc
and
jo
arpl
cltd
xchg
pop
pop
xchg
scas
pop
adc
xchg
loopne
push
test
test
shll
xlat
xchg
xor
pop
xchg
sub
jle
dec
pop
inc
sub
mov
cltd
push
pop
clc
xchg
jbe
repnz
push
mov
psadbw
les
imul
xchg
repnz
push
dec
push
or
mov
cmc
fnsave
jno,pn
dec
outsb
pop
icebp
sbb
jnp
mov
jmp
mov
push
scas
fiadds
mov
push
cld
icebp
loop
nop
add
pop
movsl
mov
pusha
icebp
rolb
lea
insl
and
arpl
js
and
ds
stos
ds
test
mov
add
mov
dec
xcrypt-cbc
cmpsl
nop
cltd
out
aam
std
pusha
cld
adc
fs
inc
int
hlt
data16
cmp
push
mov
or
aas
test
pop
call
jbe
push
xchg
enter
jl
insl
or
inc
addb
mov
xchg
dec
out
sbb
mov
popl
xchg
into
fistpll
aaa
ret
or
adc
lock
or
ss
mov
dec
or
int3
adcb
dec
cwtl
imul
cmc
sbb
aaa
add
lahf
xchg
mov
jg
and
mov
pusha
mov
mov
sub
lcall
or
xor
jbe
js
cwtl
cltd
movsb
mov
outsb
je
loop
and
fistpll
rcrl
les
js,pn
rcl
sub
jecxz
ljmp
mov
cmp
cmp
hlt
int
std
jg
loope
in
inc
fstps
aas
xchg
enter
sbb
push
cmp
nop
and
mov
stc
xchg
dec
in
push
xor
lret
jg
mov
fwait
pop
aas
popa
and
sub
or
bound
shlb
or
add
int
out
test
hlt
out
push
lods
pop
and
outsb
and
cmpsl
xor
lret
jns
roll
xorl
outsl
lock
pop
inc
cwtl
mov
iret
sbb
fincstp
arpl
das
add
dec
sub
dec
int3
pusha
mov
fsubs
mov
popf
mov
mov
bound
rcll
clc
mov
fbstp
lret
scas
cmpsl
sub
test
push
xlat
lock
in
loopne
repz
xchg
xchg
mov
out
daa
pop
add
cld
rorl
dec
jmp
out
inc
shll
mov
out
push
dec
dec
inc
pop
ljmp
negb
jae
rclb
jo
mov
ljmp
fisubs
popa
testb
mov
xchg
sbb
push
rorb
pop
aas
mov
data16
push
xchg
mov
in
outsl
pop
lods
jecxz
movsb
xlat
js
test
mov
pop
sahf
arpl
test
cmp
int
cmp
mov
adc
clc
rcr
movsl
nop
dec
sub
add
inc
add
cmovle
shll
rol
fs
aad
add
nop
dec
test
cmp
pop
ret
cwtl
cltd
mov
dec
shll
pop
xchg
inc
aad
inc
dec
or
jbe
test
pop
mov
imul
mov
or
pop
movsb
add
sub
pop
sbb
mov
scas
loop
cmp
je
pop
xor
lcall
stos
xchg
loop
ss
fwait
cmpsb
in
sbb
jb
push
leave
pop
loop
loopne
sub
test
sbb
cmp
sub
mov
or
or
insl
push
popa
add
mov
icebp
xlat
mov
xor
inc
dec
adc
ds
sub
mov
xor
fwait
incl
ret
jno
sub
and
cmp
or
xchg
mov
andl
sub
dec
inc
push
dec
addr16
popf
pop
divl
push
mov
dec
outsl
inc
xor
xor
decl
xchg
icebp
xchg
mov
sbbb
and
pop
or
push
adc
frstor
push
xchg
add
sub
cmp
jmp
and
pop
divb
push
int3
scas
rcrl
ljmp
or
add
mov
jp
xor
jnp
sub
inc
test
jge
stc
lods
mov
jl
adc
or
pop
ds
imul
mov
out
ss
int3
flds
mov
adc
jg
fiadds
ja
popf
imul
jae
nop
mov
or
stos
idivl
nop
ret
jg
shrl
jnp
add
ret
ret
sbb
cltd
inc
insb
mov
pop
gs
mov
cmpsl
sti
pushf
mov
int
mull
push
add
scas
push
cmp
outsb
dec
outsl
mov
in
sub
push
mov
popf
cmp
std
jo
pop
inc
lds
pop
mov
sbb
or
push
mov
sub
fiadds
aad
in
inc
lock
adc
xlat
loope
mov
xor
loop
lret
call
out
push
test
cmp
fcmovnu
xchg
pop
pop
jle
add
fsubrs
pop
stos
test
mov
dec
scas
mov
pop
add
add
sar
fnstenv
in
imul
add
cld
adc
aas
inc
das
and
and
add
mov
pusha
sbb
mov
xchg
ret
out
cwtl
mov
std
ret
int3
and
testb
sahf
mov
imul
xchg
and
sub
pusha
in
movsl
cmpsl
fsubrs
add
or
jg
push
dec
sub
pushf
jp
addr16
ret
arpl
push
loop
shll
nop
xchg
std
and
jno
jnp
push
pop
and
nop
mov
mov
shrl
das
jge
fldl
and
lcall
adc
js
jmp
das
xor
ret
xchg
mov
andl
in
cmp
lahf
cmp
into
push
enter
and
int
ljmp
ja
fsubs
mov
push
out
andl
pop
ror
dec
outsb
aad
add
pop
fistl
jle
pop
mov
test
stos
mov
pop
mov
mov
push
adc
shl
stos
fisubl
pop
in
ja
adc
test
cltd
lods
das
jne
and
mov
push
test
cmp
bound
mov
sbb
cmc
sub
imul
jecxz
jbe
pushl
sbb
aas
dec
jbe
push
mov
dec
cmp
add
stos
inc
sub
mov
cmc
ficompl
mov
orb
imul
mov
stc
push
inc
pop
lods
mov
imul
sbb
std
cwtl
jns
jmp
cmp
pop
lret
out
call
jp
loop
js
inc
and
pop
jg
inc
pop
in
xchg
xchg
stos
mov
int3
cmp
add
pop
mov
mov
pop
jg
add
cmp
and
lahf
cmp
cmpsb
movsl
mov
inc
insl
test
arpl
shlb
xchg
dec
mov
xchg
and
aaa
out
ret
and
test
inc
add
lahf
pushf
js
arpl
das
xor
or
mov
xchg
leave
mull
gs
lahf
jns
inc
push
pop
loop
imul
or
insb
shrl
xchg
jecxz
bound
int
mov
xor
out
mov
ljmp
mov
mov
addl
imul
sub
out
cmp
xor
xor
adc
cs
sbb
mov
outsb
mov
mov
push
aad
xor
push
or
inc
dec
aam
scas
imul
or
and
test
jmp
jle
sbbb
xchg
pushf
mov
fs
inc
cmp
leave
je
or
mov
lcall
or
lcall
inc
push
es
and
mov
dec
test
sub
add
sub
cmp
arpl
mov
adc
xor
mov
dec
dec
sub
inc
nop
and
mov
scas
add
sbb
mov
subl
sbb
mov
adc
mov
jnp
inc
mov
mov
mov
aad
ret
xchg
cmpsb
xor
dec
add
cmp
push
scas
fsts
sub
push
push
fcomps
arpl
xchg
in
fiadds
imul
test
xchg
add
xor
aad
push
lcall
loope
xchg
mov
xlat
mov
ret
mov
jae
and
push
cmp
fs
sti
pop
xchg
push
add
jb
repnz
inc
jne
xchg
sbb
leave
aam
add
cmp
xor
pushf
fisubl
xorb
sub
jle
pop
dec
mov
pop
dec
vmulsd
addr16
jne
jnp
dec
push
mov
sahf
dec
call
dec
lahf
ljmp
mov
sbb
ljmp
sbb
insb
and
push
xchg
jmp
int3
das
adcl
hlt
dec
xchg
mov
out
dec
aas
scas
inc
push
je
push
xchg
test
and
in
and
stc
inc
pop
and
mov
aad
pop
subl
and
shlb
sti
sub
loope
dec
mov
rclb
adcb
loopne
scas
add
or
pop
mov
push
xor
out
xor
xchg
xchg
pop
pop
cmp
cmp
and
pop
add
jle
je
insl
dec
sbb
movq
jmp
addr16
mov
ret
movsl
xor
mov
rclb
int
push
dec
push
out
sub
mov
dec
cli
adc
insl
mov
cwtl
test
push
mov
daa
dec
xorl
mov
xor
xor
jecxz
cmpsb
and
or
sbb
sbb
add
sbb
adc
pop
test
cwtl
out
in
mov
out
ljmp
in
sub
fsts
iret
loopne
cmpsl
jp,pt
push
dec
pushf
scas
dec
mov
andb
fidivrs
jo
and
push
outsl
test
imul
and
out
dec
shll
jle
fcom
jge
sbb
mov
into
pop
sbb
inc
ror
mov
mov
or
adc
mov
in
dec
fldl
xor
pop
cmp
mov
imul
cmp
mov
push
push
negb
dec
dec
clc
sbb
sub
jecxz
mov
fildll
cmpb
inc
push
push
xchg
sbbb
mov
in
mov
int
rcrl
imul
fwait
dec
add
push
or
or
mov
int
test
jne
aad
sbb
xor
es
mov
in
push
imul
test
pop
addr16
jno
call
mov
push
cmp
je
xor
cltd
sbb
pop
jg
push
inc
and
mov
add
lds
or
jg
xchg
pop
inc
pop
shlb
lods
xchg
xor
add
cld
pop
enter
test
jge
xor
faddl
add
mov
dec
test
popf
push
lods
xor
scas
dec
sti
sbbl
push
mov
cmpsl
pushf
scas
lods
repz
jge
in
push
cltd
inc
aam
leave
int
rcll
jle
test
sbb
or
pop
and
bound
adc
pavgw
add
xchg
stc
divb
loope
inc
inc
es
popa
into
push
mov
cld
aam
jecxz
shll
sbb
cmp
inc
int
test
or
xlat
ret
add
loope
cmp
mov
and
pop
dec
inc
fimuls
in
mov
imul
inc
adc
pusha
mov
xor
loop
mov
pushf
movsl
mov
ja
in
std
push
orb
jbe
lea
mov
mov
jle
xorl
push
in
pop
jl
mov
or
adc
push
in
dec
sbb
mov
xchg
inc
popf
push
in
out
mov
in
aas
in
iret
test
mov
or
decl
and
scas
add
dec
punpckhwd
scas
push
arpl
pop
xchg
mov
adc
out
mov
stos
or
sbb
ds
push
addr16
repnz
sbb
lret
insl
dec
cmp
pop
in
cmpsl
xor
mov
insl
pop
idivb
add
cmp
into
sub
fisttpl
fiadds
xor
std
sahf
stos
imul
push
lcall
push
pand
in
repz
pop
lcall
sub
inc
jne
dec
inc
mov
and
mov
testl
mov
xchg
dec
and
data16
test
jle
push
xchg
add
xchg
add
or
sub
push
aaa
inc
test
pushf
sbb
testb
sbbl
in
loopne
and
ljmp
xchg
jg
fadds
roll
dec
mov
icebp
add
jmp
pop
out
pop
ja
movsb
loopne
cmp
mov
mov
inc
fstpt
int3
mov
adc
roll
lock
je
dec
sbb
loope
lds
pusha
fildl
insb
ret
test
jge
cmp
mov
lret
outsb
es
add
mov
nop
adc
jno
cmp
cmp
imul
xchg
and
or
add
xor
pusha
in
xchg
daa
pop
inc
push
mov
push
inc
adc
push
lret
pop
add
idivl
pop
pop
adc
outsl
xor
lods
shll
lea
pop
add
mov
andb
sbb
xchg
insl
cmc
inc
outsb
add
push
in
add
xor
mov
iret
add
outsl
aad
mov
push
scas
sbb
mov
mov
or
out
jns
xchg
loope
ja
daa
xor
sahf
gs
xor
sbb
cmp
scas
icebp
inc
inc
test
out
xchg
lahf
xchg
in
lahf
loope
popf
adc
mov
or
fstpt
rcrl
sub
repz
fdivs
sub
sbb
mov
cld
ss
sti
pop
sub
cmp
testl
ret
ficompl
std
inc
xchg
adc
push
into
jo
sbb
cwtl
inc
sarl
ja
or
or
cmpsb
and
xor
ret
jnp
add
test
inc
bound
cs
pop
das
ja
loope
xor
mov
loopne
push
mov
jnp
dec
scas
xor
int
sub
mov
pop
int
in
mov
pop
mov
in
icebp
push
pop
ss
lods
add
cmp
sub
out
das
xor
xorl
xchg
xlat
push
cld
sub
sbb
das
loopne
leave
and
push
jns
cmpsl
pop
lea
lock
sahf
out
xchg
lret
fadds
fcom
sbb
bound
mov
cs
movsb
aam
ss
xor
jno
adc
in
lods
arpl
lods
cmovb
and
add
pop
insl
mov
sub
or
mov
jl
sub
adc
lret
dec
test
add
xor
popa
sbb
lcall
mov
dec
xor
adc
scas
pop
push
adc
inc
scas
orl
mov
in
loope
jmp
mov
push
daa
stos
cli
lcall
jo
pushf
add
aaa
add
les
insl
lods
xchg
leave
mov
push
inc
dec
adc
cmp
adc
test
ljmp
add
mov
adc
mov
test
test
fidivs
mov
push
mov
dec
sbb
lea
divl
fcomip
cwtl
mov
int
je
inc
ficompl
sahf
cmc
add
pop
arpl
outsl
ret
inc
in
adc
leave
cmp
aas
mov
mov
or
daa
adc
ss
jb
push
loopne
pop
loope
test
fnstcw
and
mov
push
jl
sbb
xchg
arpl
cmp
rolb
sbb
gs
jp
repz
out
das
movsb
ficoms
dec
dec
cmc
xlat
pop
sub
pop
fmuls
push
ljmp
repz
pop
jbe
andl
cmp
gs
mov
mov
scas
push
addb
inc
popf
pop
or
int3
jmp
aam
jge
pushf
mov
pop
xlat
dec
stos
sub
insb
xor
pop
inc
xor
adc
shrb
ja
mov
cltd
arpl
test
lds
inc
mov
arpl
lret
movsb
push
add
cmp
and
mov
push
jle
lods
outsb
adc
lahf
jo
les
mov
cmp
cmp
bound
dec
adc
jl
nop
adc
lock
mov
ret
es
bound
popa
mov
mov
in
mov
dec
add
imul
push
dec
stos
aam
push
mov
lahf
fbld
ret
rorb
pop
icebp
push
adc
jecxz
mov
push
mov
das
push
inc
push
pop
fisttpl
outsl
movsl
xchg
and
in
je
mov
xchg
add
lds
cmp
sub
xor
repz
jnp
loop
xchg
adcb
xlat
add
push
push
rcrl
insb
jle
sub
mov
fadds
xor
dec
xor
insl
mov
shl
jmp
push
test
xchg
lcall
jle
mov
pusha
inc
inc
xchg
leave
sbb
sbb
xchg
sub
push
out
xchg
addb
dec
mov
mov
or
add
push
or
cmp
jno
insb
shr
jmp
test
xor
inc
nop
enter
inc
ficomps
jge
pop
lret
fwait
push
push
sbb
out
sbb
xor
enter
notl
js
and
add
xor
and
fs
cmp
xchg
aas
ss
or
repnz
push
movsb
insl
pop
lret
cld
cmp
adc
push
and
xchg
insb
int
fiaddl
cmp
adc
jae
icebp
jns
mov
adc
mov
dec
sbb
imul
inc
mov
and
into
adcl
add
push
inc
inc
aas
icebp
inc
arpl
mov
decl
mov
dec
rcrl
lret
mov
fwait
stc
data16
shrb
hlt
cmc
xchg
adc
pop
inc
lock
adc
fisubl
cs
push
xchg
jne
pop
jl
jae
hlt
push
scas
and
add
or
div
cltd
negl
add
je
frstor
pop
loopne
mov
pmuludq
fldl
mov
fdivl
hlt
jae
popf
cltd
pop
out
pop
xchg
sahf
les
fcompl
mov
jg
mov
jp
int3
mov
ret
inc
adc
fistps
cmp
mov
push
cs
dec
push
mov
in
ljmp
mov
lret
push
std
cmc
mov
mov
addl
xor
push
leave
ret
push
push
or
movb
jbe
cmp
std
bound
adc
xor
fsubrs
sahf
push
test
loope
cmp
loope
pop
cli
sub
inc
in
sub
pop
dec
ficoml
adc
push
stc
jge
daa
xor
outsl
jno
pop
sbb
das
jmp
cmp
cmp
mov
test
iret
out
stos
mov
inc
inc
xor
xchg
imul
push
rorb
fcom
out
and
lods
shr
aam
sub
pop
je
int
add
inc
push
shlb
mov
mov
mov
in
aaa
and
imull
lock
push
mov
fmulp
and
xchg
lods
cmp
push
fmuls
std
mov
jmp
cltd
jge
adc
subb
stos
pop
test
ret
addb
into
andb
loop
aas
pop
lods
xor
jns
loope
pop
inc
pop
push
mov
lcall
aam
repnz
test
cmp
mov
mov
jns
pushf
into
add
movsl
jge
jb
mov
arpl
in
mov
in
std
clc
adc
ja
test
sbb
mov
enter
testb
cmc
inc
push
sbb
jbe
sub
sbb
push
test
loopne
int3
das
ficoms
aaa
mov
pop
dec
push
shrb
outsb
ret
mov
cs
sbb
test
mov
xor
out
sbb
jg
add
imul
jmp
inc
mov
daa
aad
push
sbb
fldl
or
push
mov
add
jae
aaa
lcall
mov
test
pop
movsl
or
push
xor
lds
ss
add
or
inc
cli
inc
call
fldcw
xor
sbb
pop
adc
and
stos
xor
testb
in
lret
lea
mov
fwait
adc
pop
cmp
sub
push
lock
aam
xor
mov
cmpsb
ja
lahf
and
dec
mov
mov
rol
mov
jo
jno
aaa
push
pushf
mov
pop
addr16
jns
int3
fcmovu
and
fsubr
test
pop
push
fstpl
push
mov
inc
cltd
xorb
mov
ret
jb
jno
pushf
mov
jecxz
int3
cmpl
mov
daa
incl
add
repz
clc
sub
mov
ret
pop
out
sbb
int3
fs
xor
call
dec
jbe
xchg
inc
aas
add
mov
fcompl
push
pop
adc
lock
orb
or
dec
mov
inc
and
xor
push
mov
sbb
shrb
and
jge
leave
bound
inc
add
mov
mov
clc
fisubrs
insb
or
mov
std
jae
mov
push
outsb
pop
fsubs
loop
dec
xor
call
stc
cmp
sbb
stc
gs
mov
mov
cmp
xchg
pop
inc
push
out
xchg
loop
pop
adc
aad
mov
imul
mov
sahf
sbbb
std
adc
mov
fldcw
push
jo
xchg
dec
jp
push
imul
mov
pop
push
pop
test
push
mov
fmull
ljmp
dec
sbb
dec
pop
inc
adc
hlt
mov
clc
jp
jae
dec
pop
ficoms
rcl
add
fiadds
and
mov
leave
sbb
sub
test
lret
les
adc
push
add
fisttpl
xor
push
bound
outsl
push
mov
adc
cmp
int
ss
enter
in
out
andb
pushf
repnz
jbe
frstor
adc
sub
push
aas
insb
enter
aas
or
push
or
fistpll
lret
test
push
xlat
or
mov
or
cltd
and
xchg
mov
cmc
mov
ja
cmc
shll
arpl
sub
xor
aaa
pop
jae
rcrb
push
ror
ficompl
and
xor
push
mov
jae
xor
loopne
movsl
mov
lahf
cld
xlat
ljmp
les
iret
mov
mov
pop
mov
shrb
mov
scas
or
or
rcrb
pop
dec
or
xor
jge
int
adc
pop
jbe
lds
push
inc
loope
or
inc
cmp
scas
pop
xchg
jmp
aam
ss
lods
in
add
add
push
jae
jnp
test
inc
or
mov
dec
ret
xchg
lcall
aaa
push
mov
fsubp
shrl
inc
iret
arpl
xchg
sbb
sbb
sti
mov
push
shl
cwtl
out
loopne
push
push
cmpsb
js
xor
and
jae
mov
movsl
mov
jbe
ja
push
jae
xchg
and
rcrl
pop
mov
or
hlt
repz
repnz
or
or
aam
fmull
add
cld
lea
insl
push
ja
push
js
je
lods
jo
mov
xchg
push
xchg
dec
mov
xchg
les
fwait
rorb
call
bnd
jb
mov
cli
xchg
fidivrs
pop
push
icebp
sbb
add
xlat
cmp
loopne
icebp
rcrl
adc
out
sbb
jns
mov
mov
or
push
pop
inc
adc
mov
imul
jg
lret
movsb
or
ret
inc
out
stos
test
dec
push
mov
loopne
dec
dec
pop
clc
shll
inc
cli
ja
push
aad
andl
mov
dec
ret
sbb
test
sarb
out
inc
js
sub
adc
dec
sub
add
iret
xchg
jle
addr16
or
aad
clc
mov
pop
stos
mov
adc
lcall
xchg
jo
xchg
stos
mov
fs
mov
sub
mov
nop
jne
push
dec
xchg
repz
iret
mov
mov
mov
rcll
pop
mov
dec
and
das
movsb
insl
clc
xor
pop
mov
orl
insb
push
nop
test
faddl
stos
es
dec
cmp
sbb
mov
daa
imul
mov
mov
popa
sahf
mov
cld
les
pop
addr16
adc
cmp
iret
add
jo
push
loope
mov
js
stos
fiadds
sti
mov
mov
xchg
stos
add
inc
repz
popf
jno
clc
and
mov
pop
shrl
mov
aas
mov
lds
je
test
and
pop
mov
shll
jp
outsl
xchg
fnstsw
lahf
stc
ljmp
inc
cmpsl
mov
aas
sub
shlb
in
stos
dec
in
int
jmp
std
movsb
inc
mov
int3
xor
imul
mov
sahf
fimull
xor
imulb
dec
fcompl
addr16
push
pop
ficoms
ja
sbb
subb
cmc
dec
add
adc
xor
idivb
in
cmp
dec
sbb
shlb
mov
arpl
aad
pop
dec
ret
push
mov
and
push
cwtl
sbb
aaa
aam
pusha
mov
mov
or
out
sbb
cli
lea
xchg
cmp
xor
fchs
push
clc
xor
jge
rclb
cmc
je
push
sahf
mov
jecxz
jle
mov
xor
xchg
add
jbe
inc
jae
or
cmpl
cmp
shrb
mov
or
sub
pop
dec
bound
xor
inc
sbb
mov
lahf
ja
dec
push
scas
das
push
fwait
ret
xchg
test
and
and
jne
pop
mov
push
movsb
jl
mov
cmovne
dec
cmp
dec
inc
cwtl
pop
lret
inc
mov
iret
cli
push
xor
popa
xor
or
fnstcw
fcom
mov
mov
cmp
std
mov
jge
lahf
and
pop
mov
popl
ret
pop
andb
or
jb
mov
mov
sub
int
mov
in
outsl
push
adc
push
pushw
fwait
je
cli
mov
xchg
inc
mov
sti
mov
cwtl
xchg
mov
push
mov
inc
xor
dec
cmpsl
xor
xorb
xchg
jg
sub
sarl
push
mulb
mov
arpl
mov
in
iret
roll
mov
mov
jb
test
push
mov
xor
adc
call
dec
out
insb
int
leave
sbb
or
add
dec
add
shrd
mov
push
fwait
popf
sarb
xor
jmp
and
xchg
enter
ds
in
push
mov
sbb
and
push
xchg
insl
movsl
inc
mov
outsl
and
js
std
mov
sbb
nop
lcall
out
lods
sbb
notl
xchg
out
dec
popa
das
shlb
pmulhw
fnsave
xlat
mulb
sub
movsl
das
jmp
cli
lods
cs
pop
push
leave
push
or
mov
loopne
fwait
sub
pusha
xchg
xchg
cld
cmp
sbb
add
mov
leave
xchg
cmc
xchg
fcoms
xchg
sub
push
pop
push
push
adcl
mov
cli
jne
leave
xchg
je
stc
adc
cwtl
fstl
push
jbe
push
xor
dec
lods
dec
fsubrl
addr16
ljmp
ds
jge
push
imull
nop
icebp
xor
imul
stc
mov
sbb
ret
lahf
lock
cmp
sbb
inc
jl
add
imul
fldt
iret
mov
or
adc
and
push
add
ljmpw
movsl
out
mov
pop
inc
ss
arpl
scas
outsb
or
ss
test
xor
mov
jecxz
sbbb
stos
adc
test
cs
es
cmp
fldenv
sub
sti
pushf
and
or
in
mov
jle
cld
ret
push
dec
dec
push
dec
dec
xchg
iret
jno
aad
push
sbb
jno
sub
and
adc
and
fiaddl
lret
mov
mov
ds
xchg
mov
pop
jmp
lret
mov
add
ss
adc
testb
fisttps
pop
or
mov
cmp
mov
lods
lcall
cld
dec
in
pop
dec
xchg
cld
test
lods
sti
enter
insl
cmc
jg
int
imul
fnstcw
xchg
push
jle
stc
jmp
inc
sahf
mov
push
cmp
mov
inc
lods
mov
dec
xchg
in
movsb
push
lods
ret
notb
cli
mov
ret
fistps
and
lret
sqrtps
mov
jle
push
xchg
xchg
das
mov
sbb
movsl
mov
int
or
leave
lea
outsl
push
cli
sbb
jo
out
mov
int3
add
in
lods
loope
inc
jns
aas
pop
and
fisubrs
sbb
jne
ljmp
xchg
movsb
fdivl
mov
in
repz
outsl
sub
mov
mov
push
sub
stc
std
lock
sub
add
aam
loopne
xchg
lcall
add
int
push
jp
and
jo
and
dec
lret
add
push
pusha
inc
movsb
orl
inc
pop
test
jle
mov
out
jns
fisttpl
cld
cli
pop
fsts
stc
xor
cmc
or
addr16
shlb
int3
nop
fisttpl
jne
pushf
loopne
enter
bound
in
and
es
in
sub
ret
jp
rcl
sti
adc
lds
mov
gs
jno
fs
jp
pop
jno
rcl
sahf
and
dec
shl
or
imulb
nop
pop
addr16
and
aam
sub
inc
push
pop
xor
jecxz
push
dec
stos
xchg
sbb
cmp
lea
push
cmpsl
lea
xchg
das
push
cmpsl
into
imull
mov
or
test
push
std
fisubrs
fidivrl
ja
lods
shrb
adc
adc
aam
push
xchg
jge
cltd
imul
ret
loopne
sub
cmp
imul
outsb
jg
jle
out
sahf
lds
stos
mov
addr16
jne,pt
pop
push
pop
sti
inc
clc
fnstcw
jp
out
ljmp
daa
stos
jl
mov
xchg
mov
mov
mov
push
jne
clc
dec
in
std
jns
or
adc
lock
ss
push
pop
push
jle
push
add
sbb
sub
es
fsubs
mov
jo
push
add
and
mov
sbb
mov
cmp
inc
dec
push
test
data16
xchg
lcall
sub
mov
push
aas
inc
sbb
lret
xchg
outsb
pusha
fsubs
aad
mov
sub
mov
pop
add
mov
adc
and
in
pop
test
fdivrs
jle
imul
or
cs
mov
mov
mov
in
xor
cli
movsl
pop
ficompl
ja
test
pop
and
sub
xorl
inc
fs
insl
aam
shld
js
mov
les
sub
gs
jmp
in
nop
cld
sbb
push
pop
insl
mov
xor
ret
sar
push
jno
aad
aam
push
push
xchg
cmp
outsl
and
add
add
sub
dec
lds
mov
jp
hlt
xlat
mov
shrb
sbb
lret
dec
adc
scas
les
and
cmc
pusha
es
outsb
hlt
push
jge
adc
jb
lods
lods
sti
ficomps
xor
mov
mov
mov
in
mov
leave
rcrb
jae
cld
lock
pop
and
idiv
jbe
xchg
ljmp
fildl
lret
xlat
push
fsubrp
lock
or
test
xor
pusha
les
mov
pop
dec
lock
pop
nop
mov
pop
lods
test
addr16
ret
addr16
adc
incb
repnz
push
lret
aaa
push
mov
cmp
cmp
rorb
shr
xlat
fdiv
repz
cs
inc
sub
lret
imul
outsb
add
or
xor
pop
push
mov
ret
lods
dec
lods
or
lahf
or
and
jmp
pop
lahf
fs
mov
hlt
int3
scas
xlat
cmp
add
enter
cld
pusha
jmp
dec
add
jns
orl
addb
cli
sbb
fnstcw
fcmovnb
loop
adc
sti
out
popf
call
shll
xor
dec
lock
inc
icebp
or
jl
ds
subb
cli
outsl
sbb
and
test
sub
push
cmp
pushf
in
mov
push
les
xchg
pop
scas
sbb
negb
mov
lods
cltd
fisttps
pop
imul
mov
out
mov
inc
aad
cmp
aad
aas
lds
xchg
xor
repnz
inc
mov
sbb
lret
or
lds
ret
add
addr16
testl
in
pusha
adc
mov
jae
lea
cmpsl
imul
lods
scas
adc
es
pop
sub
ljmp
xchg
sbb
repnz
scas
mov
in
test
sub
out
fsubs
sbb
inc
jp
add
in
jae
sub
pop
les
inc
pop
bound
filds
out
pop
pop
cmpsl
mov
mov
mov
jnp
mov
inc
popf
xchg
in
popf
cld
mov
sarl
dec
add
push
scas
xor
cmp
xchg
sbb
mov
push
push
paddusw
sti
push
sti
fs
enter
jg
sbb
or
or
jnp
pop
sbb
scas
jns
addr16
leave
jb
movsl
iret
push
fs
xor
in
jbe
leave
cmp
lea
xchg
sbbb
jmp
mov
pop
ja
mov
dec
call
xchg
dec
pusha
pop
jg
mov
mull
ljmp
inc
lret
sbbb
inc
pushf
out
in
out
xor
or
sub
das
sbb
stc
jno
xor
js
mov
lcall
inc
in
mov
lea
std
pop
sub
or
or
mov
sbb
insl
rorl
aaa
js
fucomi
outsb
in
cmp
jno
pop
loop
mov
jp
fstpl
dec
ljmp
das
xor
cmp
ret
dec
icebp
add
lahf
sub
push
movsl
push
add
and
push
cmp
aad
fadd
and
js
in
sub
sbb
xor
or
sbb
stos
mov
pop
jno
cs
repnz
mov
xor
lret
lcall
dec
mov
inc
out
add
negb
inc
imul
mov
ljmp
pop
mov
xchg
add
xchg
dec
sti
loopne
add
cld
xor
xor
mov
inc
dec
push
std
push
cltd
inc
enter
push
stc
sbb
dec
sbb
js
push
pop
pop
push
ficoms
inc
out
cld
lock
mov
push
mov
cmp
inc
inc
hlt
mov
in
push
mov
lds
pop
mov
sarb
push
add
leave
adc
sbb
mov
cmp
push
jl
jae
xor
lods
std
daa
adc
and
nop
mov
jmp
sbb
jb
jl
cmp
loopne
outsb
xor
aam
cmpl
push
sbb
add
jb
mov
cli
mov
jle
mov
test
adc
stc
js
inc
mov
ds
xor
stos
repnz
adc
insl
mov
popf
ds
enter
les
scas
repnz
loop
mov
movsb
andl
sti
imul
fisubrl
les
jge
addr16
mov
cmp
jp
mov
cmp
pop
popa
push
out
and
xchg
rcrb
adc
jecxz
and
lock
xlat
dec
fldenv
pop
sbb
incb
adc
cmovns
pop
scas
pop
sahf
ret
jno
les
sbb
xor
fsubrl
arpl
xor
sub
in
pop
scas
mov
cmp
out
sbb
push
dec
mov
lods
inc
lock
and
jl
mov
and
loopne
pop
push
cwtl
cmc
pop
inc
subl
jge
jecxz
outsl
and
inc
cwtl
pop
xor
lahf
or
arpl
shrl
daa
mov
sahf
leave
out
pushf
jae
loope
iret
push
pop
shll
jge
or
sbb
dec
jno
ret
orl
aad
int3
enter
pop
aas
add
xor
in
adc
pop
dec
out
xchg
lcall
pop
int
in
dec
test
jle
jl
sbb
pop
adc
cmpsl
icebp
cmp
jge
push
popf
jbe
enter
lcall
sarl
mulb
jb
push
xchg
rclb
inc
daa
pop
mov
insl
pop
das
cmp
add
sub
inc
push
idiv
xchg
mov
inc
aas
or
jecxz
inc
lds
add
imul
lahf
dec
cli
xor
or
and
aas
lahf
test
shrb
mov
icebp
leave
mov
in
daa
add
xchg
jno
dec
jl
push
dec
scas
scas
imulb
out
jg
pop
xor
out
xor
adc
xchg
les
movsb
xchg
in
test
adc
add
leave
stos
out
call
std
xor
sahf
gs
mov
xchg
adcb
jecxz
adc
dec
gs
pop
into
ficompl
dec
cmp
daa
jp
jp
fdivs
ljmp
mov
dec
addr16
xchg
adc
cmp
sbb
popf
push
mov
mov
mov
add
mov
mov
mov
rcr
cmp
mov
sub
mov
adc
loop
ret
ficoms
cmpsl
loopne
lea
clc
mov
aam
popf
pop
dec
arpl
push
dec
push
sub
mov
imul
and
mov
rcrl
push
icebp
movsb
push
out
pop
xchg
pop
add
cmp
inc
push
addr16
mov
aas
push
inc
and
mov
std
dec
mov
adc
xor
xor
cmc
add
push
or
jno
sbb
sbb
hlt
out
push
pop
xor
rclb
dec
xor
mov
xor
jecxz
aad
test
inc
cltd
mov
add
fists
cmpsb
ret
dec
mov
fsts
scas
pop
push
xchg
fnstenv
loopne
mov
sbb
xor
es
or
dec
xchg
imul
push
jle
inc
out
or
mov
mov
gs
pop
test
xor
insb
xor
cmc
jne
mov
es
cli
inc
push
jnp
push
das
fistps
stos
stc
into
arpl
ret
push
mov
pop
fistl
je
in
pop
mov
sub
bound
mov
popa
insb
push
bound
or
arpl
pop
cld
push
int3
lock
leave
pop
push
fnstcw
sarb
or
test
jmp
or
jae
mov
outsb
hlt
iret
jle
cli
add
pop
jbe
xchg
pop
outsl
popa
orb
mov
out
jo
pop
dec
cmpsl
in
cmp
xchg
or
fsts
sub
inc
out
incl
and
lods
popf
fdivs
mov
cmp
test
push
inc
inc
clc
or
cltd
cltd
add
sbb
aas
and
push
add
hlt
cmp
push
lcall
insb
push
imul
add
mov
xchg
sbb
popa
sbb
mov
jmp
stos
in
cltd
cvtpi2ps
nop
insb
or
imul
add
fbld
xor
pop
into
sub
jns
sub
inc
daa
and
mov
js
in
xor
dec
scas
loope
shrb
mov
in
iret
aas
daa
out
pop
sbb
jns
addl
mov
shr
std
cmp
cmp
repnz
sub
je
nop
add
xchg
dec
fisubl
sbb
sub
add
jge
sub
jns
pop
fldenv
loope
dec
fcomi
or
int
roll
lea
lods
shll
lock
imull
addb
shlb
fisubrs
push
push
cmp
and
and
stc
cmp
adc
cli
fildll
cmpsb
pushf
xchg
inc
lret
xor
cmpsb
in
push
imul
or
clc
test
cld
lds
and
cwtl
call
sub
jnp
mov
inc
xchg
lret
sub
rclb
xchg
repz
cltd
pop
cmp
mov
adc
out
popf
sbb
insl
and
cmp
hlt
sbb
test
lods
out
xor
add
inc
das
fwait
imul
sub
inc
inc
mov
outsb
sahf
fwait
jb
sub
mov
insb
jmp
cmp
pop
test
inc
jno
ret
mov
cs
adc
lock
and
aas
jmp
mov
pop
mov
add
xor
cmc
lods
sub
jle
fsubrl
je
out
add
scas
aam
leave
jbe
and
pushl
adc
jne
jp
jle
mov
inc
or
dec
iret
popf
clc
xchg
mov
push
insb
stos
inc
and
mov
mov
clc
jne
mov
insb
adcl
data16
enter
sbb
cmc
mov
push
jo
les
sub
mov
int3
stos
cli
jg
fwait
jmp
decl
int
inc
jle
xor
sahf
repz
cmpb
xchg
cwtl
incl
int
cwtl
movsl
inc
cmc
fdivr
xor
loopne
jp
cmpsl
lods
xor
xor
dec
shlb
mov
add
cmp
call
out
xor
loop
mov
insl
mov
ficoms
or
mov
ja
xor
test
xchg
sbb
rcr
mov
jl
jae
sbb
ja
mov
test
ret
xor
pop
jmp
imul
int3
mov
leave
loope
xchg
arpl
mov
iret
fnstenv
js
lret
add
outsb
pop
fisubs
ss
jbe
and
roll
dec
adc
fstpl
cmp
cs
fistpll
inc
mov
jae
jge
dec
mov
rolb
sbb
mov
notl
dec
jecxz
pop
mov
xchg
rclb
pop
outsl
push
mov
insl
cli
loopne
sbb
sbb
push
iret
inc
dec
mov
fldt
mov
and
pop
mov
pop
push
mov
sbb
insb
fiadds
shrl
xchg
mov
daa
gs
mov
out
mov
cltd
insb
jne
push
fucomi
or
sti
sar
push
mov
nop
imul
adc
sbb
shrl
cld
sub
xchg
jmp
data16
inc
movb
pop
sbb
adc
test
cmp
mov
inc
mov
test
mov
adc
pop
xor
lods
xchg
leave
leave
jg
xor
test
lea
loopne
mov
jno
clc
mov
in
xor
pop
push
repnz
push
jmp
add
xchg
test
jo
mov
push
loop
pusha
popf
roll
sbb
push
sbb
test
dec
mov
jp
mov
inc
ds
sub
xor
fstp
sub
ret
enter
hlt
pop
sub
push
mov
aad
sbbb
fstpl
sub
pop
fwait
jne
or
mov
dec
dec
aad
outsl
scas
sbbb
push
out
lea
jb
gs
xchg
pop
iret
cmp
sub
xor
mov
ljmp
in
lock
call
arpl
pop
xor
pop
aad
ret
icebp
cmp
cld
cmpsb
icebp
xchg
repz
push
pop
xchg
cmp
sub
or
pop
pop
repnz
xor
jne
stos
pop
mov
test
mov
sbb
add
pop
adc
xchg
adc
enter
jae
daa
mov
adc
lds
fildl
or
fwait
imul
pusha
andl
ret
cli
sbb
xlat
out
jle
leave
repz
lcall
daa
xchg
cmp
stc
or
push
lods
jbe
in
sti
jmp
mov
filds
cmp
adc
lods
mov
jae
loop
mov
in
fsubrs
hlt
and
cmp
pop
imul
mull
loopne
adc
xchg
mov
lds
push
mov
sub
cltd
cwtl
mov
mov
adc
push
sub
sub
push
push
pop
scas
fldl
stos
adc
push
fldcw
aad
jne
dec
adcb
fcmovne
xchg
popf
and
dec
aas
jbe
pop
add
sbbb
sbb
or
mov
int3
mov
sub
pop
xchg
pop
lret
sbb
stos
jge
lock
xchg
jecxz
ds
xchg
xchg
sub
into
popa
mov
push
or
push
inc
out
xor
push
shll
dec
sbb
outsl
dec
jge
and
pusha
pop
nop
into
sub
xchg
je
test
imul
loope
mov
push
lahf
in
stc
pop
dec
adc
jmp
js
repnz
add
clc
lock
inc
and
push
out
jb
imul
das
stos
push
roll
loope
mov
test
mov
aas
xchg
mov
pop
test
fmuls
sti
das
xchg
lods
adc
aas
dec
je
incl
pop
xchg
xchg
xor
mov
popf
xchg
sti
xchg
mov
test
jae
mov
pop
push
xlat
in
inc
aaa
ja
insl
or
fstps
add
arpl
push
inc
pusha
repnz
testb
mov
or
mov
gs
subb
adc
push
movsb
xchg
sbb
pop
lock
sti
cmc
pop
dec
push
in
pop
pop
ds
sbb
jnp
gs
pop
or
xchg
xor
inc
and
shrb
push
rcrl
flds
icebp
pop
test
pop
xchg
inc
popf
test
mov
fadds
ss
pop
ret
nop
test
daa
lret
shlb
mov
jp
add
jnp
mov
xchg
pop
xchg
pop
fimuls
loope
in
mov
dec
notl
cmpsl
push
fs
jge
addl
xor
iret
cmp
aaa
sahf
fisttps
lcall
inc
pop
fldl
and
jmp
inc
rorb
enter
cltd
cmp
ljmp
in
pop
mov
jl
movb
bound
hlt
jecxz
out
test
iret
push
mov
fdivrp
push
mov
adc
inc
loope
mov
mov
jnp
cmpsb
in
nop
je
fimuls
sub
or
lret
sti
cmpsl
ljmp
and
out
xchg
cmp
jl
inc
cli
or
jne
xchg
and
sbb
or
jl
inc
cmp
pop
clc
out
shlb
insl
sahf
test
out
insb
sbb
sbb
mov
cmp
adc
and
ret
dec
mov
cmp
pop
fiaddl
popf
lock
sti
shrb
cld
xor
ds
pop
clc
xchg
pop
pop
inc
into
inc
mov
mov
and
pop
pop
in
ljmp
notl
inc
call
idiv
mov
mov
cmp
lods
pop
repnz
pop
sub
mov
jge
ljmp
into
mov
and
add
mov
lods
ss
jge
inc
data16
lahf
daa
js
jb
sbb
add
dec
push
iret
mov
push
pop
mov
fisttpl
push
mov
push
mov
or
push
lods
inc
into
sbb
push
dec
filds
jp
or
sub
cld
jae
adcb
aaa
mov
rorl
xchg
nop
and
lods
jns
jbe
pop
stos
sbb
repz
andb
add
cmpb
ret
sbb
sub
andb
aas
sub
in
mov
mov
or
lret
push
and
xor
push
mov
lret
cmp
xchg
mov
fisubl
in
test
fbstp
xor
dec
push
xor
adc
or
mov
fistl
lods
fstpt
movsb
loop
and
xchg
mov
and
push
out
push
aaa
jl
mov
popa
aad
pusha
add
js
mov
int
push
mov
xchg
adc
sahf
mov
popa
jo
inc
or
imul
movsb
jecxz
stc
arpl
scas
mov
stos
shll
fs
adc
aas
jg
das
imul
in
push
pushf
js
jl
popl
cltd
inc
cld
sub
xchg
rep
dec
inc
pop
pop
adc
cmp
sarb
and
je
mov
fnstenv
cli
sbb
pop
addb
mov
ja
popa
add
and
push
and
mov
sub
xchg
fisttpl
icebp
popf
imulb
adc
js
push
adc
mov
lret
lret
dec
pushf
jns
dec
jbe
sti
and
imul
ds
sahf
xor
mov
sub
push
inc
dec
jge
in
imul
shll
xchg
aas
ret
aas
dec
scas
mov
or
loop
inc
loope
lret
lock
mov
shrl
jmp
mov
dec
mov
sarl
jno
xchg
inc
fistps
sbb
and
cs
dec
subb
js
lds
mov
xchg
loop
xchg
shll
fldenv
cmc
fdivp
mov
adc
jmp
jns
inc
ret
out
cmp
mov
xor
stos
test
cmp
jge
sub
rcrl
sbb
fwait
orl
pop
adc
sub
lret
negb
mov
fisubrs
enter
xchg
xor
mov
jmp
into
xor
cmp
lret
andl
in
sahf
lea
inc
mov
jae
inc
test
rcll
arpl
fstpt
adc
ds
xchg
lahf
cmp
mov
dec
push
loopne
stos
inc
out
sub
scas
cmp
push
mov
cmp
mov
sub
cli
fbstp
xor
xor
inc
sub
stos
cltd
hlt
out
sub
lea
aas
or
pusha
add
mov
xchg
rcl
push
andl
adc
cmp
sub
loopne
adc
lods
cmp
movl
movb
hlt
clc
adc
aaa
mov
or
add
adc
inc
adc
jne
dec
ficomps
lret
hlt
pinsrw
dec
fdivl
subb
pop
jo
cmp
mov
ret
arpl
dec
test
lret
push
mov
pop
xor
jnp
hlt
pop
leave
aas
fwait
test
gs
cmp
xor
push
mov
add
scas
mov
bound
aaa
mov
xchg
es
lods
dec
popa
cli
jo
daa
ficomps
mov
add
add
lret
in
test
popa
xchg
fcmovne
aam
and
pop
hlt
loope
loope
fistpl
mov
jg
into
imulb
mov
push
fisubs
fnstsw
test
int3
es
sub
pop
cmp
dec
popf
outsl
lcall
lcall
mov
addr16
cwtl
or
push
mov
roll
push
mov
std
sbb
dec
inc
ficomps
imul
fwait
sbb
mov
fcmovnb
or
out
cmp
xchg
aaa
jae
mov
jne
ret
out
inc
imul
sbb
int3
mov
pop
js
jnp
repnz
push
cmc
jle
pop
ret
inc
add
js
cs
sub
xor
rcll
mov
loopne
pop
jp
inc
int3
psllw
mov
test
fst
sbb
push
shlb
gs
rcr
std
inc
xchg
les
or
inc
lods
aam
mov
cmc
stc
xor
ljmp
cmp
pop
roll
pop
inc
push
mov
push
mov
repz
hlt
or
cmp
scas
jnp
jo
cmp
mov
fldcw
mov
bound
xor
stos
cs
mov
xor
ljmp
xchg
pop
or
pop
add
mov
jae
jo
add
or
inc
dec
xorb
mov
dec
inc
dec
push
pop
push
jmp
iret
xchg
mov
adc
jae
insb
push
int
xchg
loop
ret
cmp
mov
rol
lcall
pop
sbb
sub
dec
stc
pop
in
and
inc
enter
mov
fimull
gs
xchg
mov
popa
int
jno
repz
pushf
xchg
jnp
sbb
sahf
pop
add
jle
jnp
daa
lea
mov
pushf
and
mov
repnz
inc
push
sub
cwtl
out
pop
popf
imul
push
adc
rcll
sbb
xlat
jb
mov
dec
mov
xor
arpl
push
mov
bound
lds
mov
xchg
dec
in
jae
stos
cmp
pop
outsb
fimull
bound
inc
stos
sbb
or
inc
jno
pushf
and
mov
dec
xor
xchg
xor
pop
loopne
fildl
fmull
dec
push
mov
pushf
jae
cmp
xor
int3
mov
call
insb
enter
adc
push
lahf
rorl
mov
lods
xchg
jmp
dec
adc
ret
in
mov
mov
push
into
inc
mov
std
repz
adc
xor
js
push
sti
inc
ret
bound
popa
pop
rcl
or
xor
jnp
nop
fstl
adc
das
dec
lods
lds
rcr
cmp
push
rcr
push
jp
flds
mov
adc
pop
data16
fmulp
jno
push
sub
stos
mov
cmc
cmova
cmc
sub
dec
xor
insl
test
es
adcl
aad
jne
aaa
cmp
mov
pop
sub
adc
jmp
mov
addr16
lds
popa
cmpsl
dec
xor
repz
adc
rcll
lret
or
aad
les
or
es
fcmovbe
jbe
xchg
or
pop
in
aas
add
nop
ljmp
jmp
pusha
das
adc
fs
out
sub
cmpsb
sub
test
idivl
or
icebp
and
xchg
test
cltd
xchg
jecxz
inc
pop
pop
sub
mov
dec
in
inc
negb
cmpsb
ret
adc
pop
sbb
mov
hlt
out
lods
xor
pop
pop
popa
jecxz
out
les
mov
or
xchg
leave
shlb
cld
xor
incl
test
sub
arpl
push
push
loope
fnstsw
mov
cli
ret
adc
mov
and
jl
insl
and
outsl
mov
addr16
adc
pop
in
and
enter
je
or
cmc
xchg
push
out
loopne
cmc
stos
inc
ljmp
inc
sub
and
pusha
inc
mov
lods
in
mov
and
mov
dec
ja
sbb
xchg
pop
icebp
mov
jae
into
jbe
ret
bound
pop
jecxz
cmc
cmove
adc
pop
and
xchg
mov
adc
mov
push
dec
adc
and
lcall
imul
aam
jge
stos
xlat
and
pusha
jge
sub
inc
nop
jb
mov
lods
leave
inc
pushf
mov
stos
or
inc
and
repnz
aaa
popa
mov
sub
cltd
pop
jg
dec
inc
ret
sbb
in
leave
loopne
clc
push
jns
lret
mov
and
cs
jbe
inc
lret
aaa
fcoml
cmp
pop
sbb
and
enter
movl
and
lds
cmp
repnz
sbb
push
dec
int3
popf
push
pop
xchg
test
add
inc
mov
or
aam
push
and
pushf
fcoms
mov
lock
sub
popa
jmp
mov
ss
jge
jae
sbb
cmp
stc
xor
xchg
inc
clc
aaa
push
sbb
push
imul
mov
mov
subl
loopne
fcoms
addl
pop
pop
clc
lret
mov
push
xor
jbe
movsl
push
pop
fidivrl
inc
add
clc
jp
cmpsb
pop
add
lods
das
shll
pushf
cmp
or
push
shlb
enter
out
cmp
fmull
adc
mov
push
cmp
xor
mov
mov
jb
int
push
cs
dec
popf
mov
pop
or
testb
cmp
jecxz
data16
shl
sbb
clc
jae
flds
push
imul
sbb
insl
stos
cwtl
insl
pop
pop
xor
mov
push
xchg
fwait
repnz
testl
push
inc
ffreep
in
les
mov
xor
mov
dec
sahf
inc
push
loopne
hlt
or
test
and
add
cmp
int
mov
testl
loop
pop
insl
inc
scas
mov
jmp
mov
fsubrs
cmp
cmp
pop
les
pop
scas
lods
and
push
push
push
stc
adcl
cmp
mov
jg
test
add
push
sub
and
inc
mov
shll
das
out
std
leave
mov
jmp
sbb
mov
xor
jle
dec
jo
mov
idivl
pop
inc
lods
xchg
pushf
lahf
ret
cld
xchg
and
fcompl
daa
shr
nop
jmp
stos
cvtps2pi
dec
sub
add
sub
ja
js
mov
filds
push
xchg
adc
inc
inc
lea
mov
xor
dec
add
bound
xor
mov
inc
and
mov
xor
fdivrs
inc
inc
cmp
or
mov
push
out
xor
int3
fst
enter
or
pop
add
jbe
mov
inc
loopne
sti
pop
stos
or
int
inc
sbb
jnp
jp
xorb
aam
pop
jno
add
xor
pop
cmp
xchg
xlat
xchg
push
sub
in
ss
popf
cmp
adc
jbe
add
aas
or
ss
xor
add
push
outsl
push
cmpsl
fldcw
iret
rcr
push
mov
sbb
adc
pop
test
mov
lock
idivl
dec
imul
add
push
loopne
mov
mov
scas
or
pop
cmc
imul
inc
sbb
fbld
xchg
push
mov
lods
mov
inc
ljmp
stos
lahf
push
mov
shll
rorb
sahf
outsb
es
mov
mov
push
mov
add
pop
inc
sub
lcall
jno
jg
lds
test
mov
add
push
or
cs
mov
fnstcw
sub
dec
inc
mov
cwtl
adc
and
cmp
jne
lods
rclb
dec
xchg
ror
std
test
aaa
shll
cmpsl
pusha
pushf
push
jge
int3
add
addl
pop
adc
cmp
push
cli
sbb
lods
mov
ret
xchg
push
sub
in
mov
adc
jmp
pop
gs
ja
call
shll
idivl
popa
mov
dec
pop
insl
fidivl
pusha
pop
mov
cmp
mov
xchg
mov
in
loop
xchg
or
push
pop
inc
xor
ljmp
push
mov
pop
hlt
arpl
fwait
pop
mov
sahf
js
dec
add
lods
xor
push
add
mov
push
incb
mov
jl
mov
fidivl
fnstcw
mov
pop
dec
jnp
push
outsb
scas
dec
lods
testl
je
aaa
xchg
loopne
jno
inc
xchg
cmp
push
jno
fsubrs
ljmp
jbe
xorb
mov
and
adc
test
sub
dec
int3
aaa
pop
xor
jecxz
stos
push
dec
mov
fidivrl
jb
cmpb
cmp
xchg
fwait
je
and
test
sahf
into
adc
cmpsb
pop
cmc
xchg
out
sbb
mov
sub
jp
sbb
test
ret
and
les
test
movsl
rcl
insl
lret
push
jmp
pop
add
nop
pop
dec
shll
cmp
jbe
cs
xchg
mov
adc
stc
scas
pop
addl
cmp
mulb
lock
mov
stc
mov
and
pop
push
and
bound
addr16
test
mov
xchg
enter
inc
std
bound
xchg
call
add
call
mov
jb
add
rol
cs
cmp
sub
mov
sbb
mov
xchg
pop
dec
orb
out
jno
pop
int
shld
cmp
sub
aad
cli
ljmp
xchg
mov
mov
in
popa
pop
xor
mov
and
mov
sar
loope
loopne
adc
sti
sbb
pop
stc
loop
orl
sub
pop
xor
pop
lock
enter
test
mov
xor
xchg
xor
fisubs
mov
setp
jno
pop
inc
or
jns
xor
pop
mov
xor
std
and
push
ds
and
xlat
adc
cli
mov
xchg
nop
imul
inc
xor
xor
repnz
stos
adc
xor
jnp
push
mov
sti
pop
mov
pop
cmp
js
adc
adcl
cmp
gs
ret
inc
inc
icebp
jp
xchg
xchg
enter
pushf
into
dec
push
pop
and
mov
sbb
lret
les
insl
xor
jno
and
cltd
mov
std
mov
mov
adc
aaa
add
neg
mov
adc
fsubs
clc
sarb
ret
loopne
gs
into
pop
aas
pop
enter
clc
inc
lcall
aaa
sub
sarb
push
cmpsl
lods
mov
lea
mov
xor
push
fbstp
sub
or
sub
and
jns
add
test
test
pop
adc
adc
or
movsl
hlt
jg
test
adc
dec
push
mov
leave
fidivl
sarl
ret
movb
outsb
dec
add
rcr
xchg
inc
add
dec
xor
jnp
test
xchg
adc
pop
add
lret
cltd
push
imul
pop
stos
fiadds
adc
ficoml
jp
mov
cmp
sbb
pop
xor
sahf
rcll
scas
sbb
lret
xchg
push
mov
into
mov
lds
in
mov
ljmp
addr16
sahf
push
not
pusha
fdivl
test
jbe
push
jg
add
rol
bound
fisttps
lea
call
pop
or
outsb
loope
mov
mov
iret
pop
outsl
enter
push
sbb
or
jmp
xor
pusha
xchg
mov
push
mov
and
inc
push
cmp
cli
scas
jbe
push
test
jmp
enter
les
popf
pop
mov
mov
pop
lock
jns
ret
rclb
mov
mov
les
popf
mull
mov
in
out
push
out
subb
test
ror
in
jp
dec
or
jb
push
cs
mov
mov
sbb
cwtl
lret
idivl
ret
sti
push
mov
inc
dec
xor
mov
andl
dec
add
aaa
loop
rcll
in
fstps
push
dec
ret
mov
lahf
cld
cmpsb
fwait
mov
ret
mov
jno
or
push
adc
fstpt
xlat
or
xchg
push
sti
loopne
xchg
outsl
cmp
pop
pop
shlb
push
sub
incb
mov
push
sbb
add
push
clc
rorb
cltd
movsl
lea
lahf
hlt
or
jl
xchg
repz
push
jmp
and
sbb
pop
adc
ret
mov
jno
or
cmc
xchg
insb
sbb
push
sbb
aaa
cmpb
sub
push
add
sbb
adc
stc
xchg
arpl
dec
je
bound
or
adc
popa
jmp
xchg
scas
cmp
adc
mov
pop
mov
sub
into
xor
out
mov
subl
cli
arpl
mov
imul
sti
inc
cmpsb
out
sbb
or
lcall
add
xor
cmpsb
ffree
and
sbb
scas
loopne
inc
aam
mov
mov
int
and
xchg
lock
daa
jmp
loop
mov
ret
inc
mov
shlb
cwtl
shll
inc
cmp
stos
sub
test
aas
mov
mov
and
sbb
or
cmp
test
mov
sbb
sub
sub
push
pusha
jge
in
sar
outsl
mov
xchg
mov
sub
je
push
mov
incb
mov
into
cmpb
pop
mov
fildl
and
mov
mov
cli
mov
addr16
sub
cmpl
or
imul
int3
fs
and
lods
cs
pop
addr16
daa
jl
and
addr16
int3
fdiv
cmp
aaa
adc
out
cltd
xchg
addb
pop
andl
mov
dec
push
data16
cwtl
mov
mov
aaa
cltd
dec
jb
fcoms
addr16
sub
adcb
pop
xchg
mov
xor
mov
cld
test
push
adc
out
outsl
jns
jne
xchg
sbb
lgs
inc
shll
ret
divl
leave
push
cs
xchg
add
jb
ss
sahf
xchg
mov
jo
fistpl
and
cmp
je
lcall
inc
repz
loopne
mov
pop
shlb
push
sbb
fcoml
out
sti
mov
dec
mov
rol
or
jp
sub
cwtl
flds
sub
les
cs
addb
loope
outsl
sub
test
cltd
push
mov
inc
sbb
xchg
mov
fxch
cwtl
mov
or
or
and
mov
bound
sub
test
push
hlt
mov
subb
add
adc
das
ss
mov
mov
std
mov
add
push
in
mov
test
xor
or
xchg
sub
inc
push
or
push
fsub
xor
pop
push
sub
inc
out
jle
fs
mov
adc
mov
push
inc
or
es
lock
pop
sub
push
xor
cmc
popa
push
mov
lods
xchg
sar
jl
sbb
mov
add
inc
imul
add
dec
push
mov
push
decb
aaa
ficomps
lods
jecxz
shll
jp
sbb
jge
xor
xor
movb
push
lret
mov
and
daa
adc
inc
add
jecxz
stos
mov
loope
xchg
mov
fidivl
scas
outsb
arpl
pcmpeqb
jge
inc
das
daa
mov
add
mov
sbb
push
arpl
test
popf
stos
mov
test
insb
xor
testl
mov
scas
xor
cmp
push
mov
adc
inc
sahf
jbe
repnz
mov
push
jge
mov
scas
gs
stc
mov
and
sbb
nop
test
inc
sub
jb
repnz
pushf
shr
dec
fsts
cltd
test
fwait
std
cmp
enter
dec
sub
push
sub
imull
out
dec
shll
mov
fs
jnp
add
jns
cs
loop
dec
jl
mov
leave
sbb
adc
jbe
insl
inc
jne
cmp
out
fsubrl
jg
aaa
jbe
jo
fs
mov
test
cmp
adc
dec
xchg
sbb
das
fildll
in
ljmp
into
sbb
sub
jnp
sbb
icebp
and
dec
sub
or
mov
mov
roll
sbb
pop
sti
cs
dec
mov
cmp
arpl
pushf
add
addr16
jb
js
and
mov
mov
ljmp
xchg
cmp
sbb
jle
imul
loope
ss
aaa
push
ja
gs
mov
flds
pop
pop
ja
adc
fimuls
sub
adc
data16
adc
subl
mov
jge
ficomps
add
jns
adc
test
out
das
outsb
adc
div
jle
loopne
std
out
add
pop
out
cmp
ljmp
xor
stos
push
add
jns
jge
mov
pop
test
jge
in
jmp
cmp
addr16
inc
cmpsb
loopne
add
sar
jb
in
call
divps
inc
lods
adc
jl
pop
cmp
lock
lahf
mov
and
cmc
jg
repz
dec
int3
into
test
cmpsl
test
fsts
aad
mov
cmpsb
and
jnp
fwait
int3
cmp
pop
jge
pop
packuswb
lea
cmpsb
leave
das
or
loopne
aas
nop
and
mov
addr16
ror
xorb
shlb
lcall
sbb
add
or
not
insl
lock
test
in
dec
mov
add
aaa
enter
pop
mov
mov
adc
sub
pop
push
push
cmpsb
cmp
jl
xor
add
xchg
mov
inc
ud2
jae
inc
pusha
mov
xchg
ret
mov
lock
int3
inc
jl
cmpsb
or
pop
js
jno
sub
adc
in
arpl
add
push
loop
pop
andl
cmp
dec
je
adc
mov
daa
xchg
xor
stos
mov
stos
ss
jo
repnz
jge
pop
jo
or
jne,pn
jge
mov
add
lock
push
pushf
jge
push
inc
jns
lret
test
lret
sti
repz
ss
call
adcl
into
ret
lds
call
xchg
in
mov
pusha
mov
aaa
mov
jmp
dec
pop
jbe
mov
iret
dec
js
mov
pop
daa
and
cmp
ss
outsb
lret
stos
lahf
fnstcw
adc
sbb
movsb
pop
subb
or
xchg
sub
adc
cs
aam
clc
pop
dec
pop
icebp
mov
test
jle
xchg
movsb
gs
imul
aaa
push
outsb
mov
cli
and
push
add
punpckhdq
mov
sub
add
pusha
jne
cmp
int3
mov
lods
aad
xchg
stos
mov
inc
hlt
jecxz
xor
sbb
ror
scas
xor
sbb
fsubrs
and
cmpl
push
mov
dec
inc
jge
out
jae
clc
mov
enter
xor
pop
aam
out
inc
push
outsb
sub
testl
loope
adc
shll
xchg
stos
mov
xchg
dec
pop
movsl
ds
add
gs
push
inc
loope
jb
mov
out
imul
pop
push
stos
mov
mov
mov
mov
pop
mov
mov
stc
fldenv
in
mov
jo
or
test
mov
cld
out
mov
daa
scas
adc
mov
xchg
cli
mov
sub
in
ds
rorb
mulb
xchg
dec
fidivs
je
mov
data16
pop
and
mov
sub
test
sahf
mov
mov
sub
adc
cli
out
leave
ret
sarb
mov
xchg
add
aad
pop
mov
cmc
in
sub
ret
jbe
xor
ljmp
jmp
into
push
icebp
pop
adc
cwtl
ret
imul
movsb
fcoml
sub
in
mov
sub
mov
mov
out
jmp
inc
sbb
lret
rclb
pop
push
pop
jns
xchg
out
in
and
push
and
stos
mov
sar
ljmp
pop
call
jl
cltd
adc
dec
pop
sahf
sbb
das
inc
lds
into
push
mov
push
push
cld
and
insl
jecxz
leave
mov
dec
fsubs
mov
test
inc
dec
pop
sbb
inc
xor
idiv
cmc
mov
adc
fwait
cld
cwtl
in
mov
pusha
xor
ficoml
sbb
lret
pop
out
push
aad
inc
lcall
arpl
xchg
push
sub
lods
mull
sbb
inc
or
jnp
adc
shll
in
mov
adc
adc
sub
es
push
mov
cld
in
pop
sbb
js
inc
movsb
fstps
pop
push
mov
sub
push
push
fwait
mov
xor
pop
rorl
dec
sahf
ljmp
cltd
shr
push
repz
fldt
and
ffreep
in
leave
sub
and
push
into
xchg
mov
push
xchg
jecxz
incl
jmp
std
mov
in
push
out
cltd
push
aad
decl
loop
stos
push
test
fiaddl
lahf
jns
imul
stos
inc
xor
nop
and
aas
movsl
pop
jp
sahf
cmp
mov
or
std
and
arpl
pop
shlb
mov
aaa
jbe
hlt
test
hlt
adc
mov
xor
shll
js
and
fldl
adc
jmp
lods
jl
push
out
fucom
mov
mov
movsl
push
xor
fisubs
mov
inc
mov
pop
jg
lock
dec
or
adc
test
adc
jae
push
ds
inc
ret
sbb
lahf
push
mov
xchg
push
divl
mov
out
pop
into
dec
cmp
addr16
std
lods
cmp
and
fisubrl
mul
test
ds
jbe
repz
cmp
popf
mov
push
test
insb
mov
or
bound
clc
fsub
mov
fwait
cmp
imul
imul
cmp
lods
mov
pop
cmp
xor
adc
mov
mov
out
or
lock
mov
xchg
imul
pop
dec
out
sub
cltd
add
sahf
insl
sub
inc
lret
sbb
nop
inc
sahf
in
sub
jbe
add
stos
dec
xchg
in
jg
push
fcmove
pop
push
xor
mov
sub
es
iret
in
inc
pop
mov
pop
or
stos
sbb
aaa
and
out
cli
mov
sbb
jb
insb
dec
scas
adc
mov
sbb
in
shll
outsb
rcl
out
in
adc
ljmp
push
notl
mov
sar
adc
mov
dec
dec
push
imul
fisttps
sbb
and
jnp
push
hlt
stos
mov
mov
mov
mov
loopne,pn
jb
adc
cmp
push
in
mov
notb
rorb
pop
or
sbb
outsb
mov
shll
dec
jg
add
xor
adc
and
std
pushf
or
push
mov
xchg
pop
cmp
leave
movsl
or
add
lods
or
add
mov
in
inc
or
dec
xor
aas
pop
cmp
or
mov
stos
xchg
stos
mov
clc
cmp
inc
cmp
mov
cwtl
aas
pop
sub
cli
jns
cmp
sub
sbb
andl
ja
and
inc
shr
inc
inc
sbb
push
push
mov
shlb
fldt
andl
add
dec
pop
dec
fisubrs
adc
fstpl
or
add
mov
or
repz
movsb
mov
inc
outsb
sbb
in
xorl
orb
aas
or
daa
xor
das
pop
and
cmpsb
lcall
push
rcll
fcomps
dec
mov
jnp
hlt
addr16
cmpsl
xor
fdivs
push
xor
cli
lret
addr16
mov
addr16
int3
xchg
adc
dec
sbb
loop
loope
adc
xchg
das
adc
jl
jmp
rorb
jmp
sbb
mov
outsl
pop
inc
pusha
adc
mov
cli
push
pop
or
pop
mov
addr16
out
xchg
cmp
mov
ror
clc
jle
test
mov
add
adc
movsb
ficompl
sub
mov
or
test
inc
pushf
add
or
ja
pusha
lds
add
das
push
mov
sub
jecxz
xchg
or
xor
adc
into
push
push
in
push
ret
xorl
loop
jle
into
mov
out
repz
and
insb
inc
das
add
dec
into
sbb
mov
cld
in
add
mov
adc
xchg
call
mov
and
jge
mov
test
out
shlb
stos
adc
call
add
mov
cmpsl
fdiv
in
pop
adc
add
test
push
subl
jb
scas
shll
idivl
adcb
mov
and
lock
sbb
cmp
loop
into
lods
fdivr
sbb
pop
cmpsb
and
pop
pop
xor
in
aas
sbb
daa
int3
xor
inc
and
add
aad
mov
stc
jns
aad
jge
sub
dec
push
int3
mov
fimuls
movsl
out
ds
and
inc
mov
pop
lret
xchg
in
stos
cwtl
jp
js
sub
inc
scas
push
imul
mov
daa
inc
dec
shr
or
mov
cmpsl
mov
mov
add
lahf
mov
fwait
aam
cmp
shrl
out
xor
cmp
inc
cmpsl
xchg
pop
push
stos
int3
inc
es
les
sti
mov
xchg
dec
xchg
lods
mov
xchg
cmp
xor
mov
repnz
popa
loopne
dec
imul
or
mov
rorl
sub
or
dec
and
or
arpl
inc
gs
fstpl
mov
sub
les
push
pop
pop
sbb
add
loope
push
pop
xor
lret
pusha
jno
pushf
test
xor
leave
jg
aas
stos
adc
les
and
test
outsl
sbb
lcall
inc
jb
divl
scas
xor
scas
pop
lcall
cwtl
inc
mov
cmp
jbe
mov
mov
pop
jo
push
rcll
push
sbb
jg
and
ss
add
in
push
andb
cmpsb
xor
bound
jno
filds
inc
ja
or
mov
stos
mov
cld
loope
cmpb
ret
sbb
xchg
lock
add
leave
xchg
push
inc
mov
aad
scas
sbb
lock
shll
xchg
mov
sub
outsb
loopne
les
mov
push
test
pop
repz
add
mov
imulb
mov
cmp
pop
mov
loop
push
or
and
xor
mov
subl
das
mov
mov
or
push
add
push
mov
pop
cmpb
setae
inc
movsl
inc
inc
xchg
lock
mov
or
fistpl
sahf
sbb
inc
aam
aam
mov
pop
lods
cmp
in
inc
leave
andl
pushf
xchg
or
outsb
test
mov
cmpsb
out
cltd
mov
push
push
xor
mov
sub
xor
xorl
cmp
push
jns
add
xchg
mov
repnz
cs
popf
sbb
enter
sub
into
lock
push
stos
cli
pop
pop
dec
in
or
cmpsl
xchg
gs
push
leave
dec
aad
xchg
cmp
and
fildl
addb
push
mov
push
das
add
rcr
es
jbe
adc
div
and
mov
cmp
jns
inc
testl
sub
insl
sbb
or
mov
jno
fldl
and
cmpsl
mov
pop
xchg
xchg
xor
clc
ret
push
inc
icebp
dec
jmp
pop
into
enter
clc
jae
imul
inc
cltd
push
sbb
cmp
jbe
aad
sbb
push
or
inc
mov
rcrl
inc
inc
push
out
xor
mov
add
pop
out
ljmp
das
pop
adcb
add
dec
je
jo
inc
popf
sti
adc
adc
outsb
cmp
fwait
jmp
pop
fcoml
out
push
jmp
shll
pop
pop
jmp
cmp
xlat
scas
das
cmc
std
rcll
icebp
adc
data16
mov
sub
xlat
pusha
dec
inc
push
push
or
pop
pop
mov
xor
mov
es
addr16
xorb
mov
je,pn
mov
pop
rcrb
aad
pop
push
pop
sub
enter
adcb
or
ret
rcll
xorl
push
leave
cmpsl
push
mov
stc
add
inc
push
adc
dec
test
add
cld
xchg
mov
xchg
or
fsts
and
pop
rclb
xchg
add
gs
add
push
rcrl
mov
aad
out
out
out
sbb
sbb
inc
jno
xor
mov
jmp
xchg
cmp
jle
jo
ffree
idivb
jl
adc
aaa
movsb
divl
stos
cmp
dec
dec
stos
test
mov
rolb
inc
adc
sub
imul
ficoms
repz
inc
loope
je
mov
inc
mov
sbb
push
mov
ret
xor
mov
xchg
jbe
pushl
pop
out
pop
and
push
in
mov
mov
stc
cld
push
push
mov
xchg
icebp
repz
in
or
mul
loop
mov
loopne
data16
rcrb
lds
cmpsb
shrl
jle
add
stos
rcl
sub
jge
imul
imul
leave
or
inc
popa
jae
aam
lods
sub
dec
xor
aad
sub
xchg
lahf
rolb
inc
mov
inc
scas
xor
fwait
xor
gs
cmpsl
push
or
jo
xor
stos
pop
jnp
cli
mov
insl
push
scas
fildl
cwtl
mov
and
add
xor
inc
xchg
add
push
push
sahf
adc
adc
imul
jno
mov
loope
int3
call
mov
pop
or
test
dec
pop
lea
inc
out
into
hlt
in
mov
insl
mov
pusha
mov
push
adc
dec
mov
mov
add
es
mov
or
sub
adc
mov
xchg
lods
sbb
mov
fidivl
out
movsb
sub
jp
jne
les
arpl
jmp
add
jno
fdivs
adc
mov
mov
sbb
and
movsl
mov
mov
xchg
loope
jecxz
mov
xlat
sahf
inc
pop
sub
out
add
fldcw
xor
stos
cmp
mov
cmp
stos
in
and
pop
inc
mov
outsb
xchg
stc
and
lea
cmp
adc
js
mov
mov
xchg
test
rolb
jae
lret
mov
lcall
cmp
ljmp
sbb
cli
test
movsb
add
mov
rdpmc
jmp
cmpsl
enter
icebp
jg
cmp
aas
std
jo
inc
push
lret
mov
push
stos
dec
pop
xlat
dec
sbb
fs
jl
xchg
lcall
mov
push
frstor
hlt
xor
pop
inc
fmull
pusha
push
sarl
cmpsb
mov
in
mov
pusha
loop
inc
cmpsb
inc
mov
sbb
mov
cmp
fcmovnbe
push
mov
es
dec
int3
push
lods
ret
gs
lea
sub
push
or
sbbl
nop
dec
mov
xchg
and
push
push
out
jo
jne
dec
in
lret
mov
fidivs
cmp
movsl
out
dec
stos
sub
fldt
imul
imul
inc
mov
cld
mov
pusha
fistps
sbb
jp
ja
dec
ja
movsb
cmpsb
aas
dec
dec
hlt
sbb
push
push
mov
gs
test
push
jmp
ret
xor
test
dec
lds
imul
rcrl
xchg
pushf
popf
pop
rcr
xor
or
div
lea
orb
inc
inc
lea
sbb
out
inc
mov
cld
fwait
cs
aas
cld
jae
sbb
dec
sub
mov
ja
cmp
mov
fistl
int3
dec
push
repz
push
sbb
and
sti
out
xchg
xchg
es
pop
add
cs
jle
cmp
lahf
sbb
inc
adc
push
das
cmc
mov
add
in
popf
mov
xchg
shlb
push
out
jne
rorb
xchg
cmpsb
ds
fs
fisttpl
dec
std
pusha
pushf
int
movsl
add
mov
pop
jo
in
sahf
push
or
xchg
jl
sub
movsb
jae
push
fildl
and
dec
and
fdivs
imul
cmp
dec
sub
cmp
aaa
sbb
mulb
movsl
xchg
shll
cmc
push
sbb
lods
mov
inc
or
or
xchg
inc
dec
movsb
sbb
jne
lcall
mov
js
jno
arpl
jg
mov
fwait
dec
test
jmp
jle
cltd
pop
push
cmp
iret
and
jno
mov
cmpsb
mov
outsl
cmp
sbb
push
imul
pop
subl
cmpsb
je
mov
pop
mov
popa
loopne
inc
sub
test
fsubp
lret
cltd
fsubl
hlt
test
fs
in
inc
sub
jecxz
mov
or
clc
sub
pandn
sbb
xchg
out
cmpsb
lret
roll
cltd
lcall
mov
xlat
sarb
xchg
movsb
jmp
into
fwait
dec
mov
lods
test
testb
inc
lock
cwtl
jo
ds
add
lock
sub
arpl
or
sahf
fwait
mov
movsb
nop
adc
push
push
hlt
mov
sahf
push
out
mov
sahf
sbbl
mov
test
push
test
jns
pop
pusha
movsb
lcall
mov
cmp
rcll
cmpsl
mov
dec
jp
iret
addr16
sbb
mov
xchg
nop
popa
pusha
dec
mov
inc
aad
sbb
cmpsl
add
sbb
push
or
add
add
shl
inc
xor
push
cmp
fs
les
sarl
mov
rolb
out
fsubr
movsl
or
mov
fsubs
cmp
jo
in
testb
push
jmp
xchg
cld
in
sarl
push
push
imul
aas
adc
andl
adc
addr16
scas
push
sub
mov
xchg
or
push
mov
inc
in
shl
fsub
pop
xlat
and
mov
add
cs
fwait
or
das
rclb
aad
add
cmp
xchg
fsub
aaa
add
inc
ja
in
jecxz
fs
repnz
lods
in
loop
and
push
aas
mov
repnz
or
sbb
scas
mov
insl
lret
xlat
xchg
inc
das
mov
std
cltd
insb
push
xor
divb
dec
fistpl
xchg
add
mov
call
hlt
push
rol
int
out
jl
sub
out
add
xchg
in
xchg
shl
outsb
mov
push
loopne
cmp
out
jecxz
xor
sbb
sbb
popf
dec
jl
call
negl
lock
test
in
sbb
xchg
iret
scas
jno
sbb
mov
mov
test
in
mov
popf
test
dec
cwtl
rcll
cmpsl
lock
outsb
jg
ss
inc
out
ficoms
xchg
test
mov
decl
ja
rclb
pop
push
cmp
push
repnz
mov
je
push
push
in
aaa
imul
push
lock
mov
xor
push
and
pop
pop
pop
addr16
mov
pop
add
adc
dec
xbegin
jp
lahf
std
aam
xchg
push
insl
push
faddl
dec
test
mov
push
mov
xor
xchg
ss
rol
inc
cmc
test
cmc
scas
adc
mov
and
ljmp
insl
adc
in
pop
mov
pop
and
dec
sub
or
int
xorl
stos
mov
pop
and
insl
out
mov
out
shrb
loope
mov
xchg
jns
push
shrb
sbb
push
outsl
pop
pop
push
mov
and
into
lret
ret
push
push
outsb
xchg
test
iret
imul
dec
aam
mov
jmp
mov
xchg
add
nop/reserved
mov
fcoms
adc
lret
xchg
mov
test
in
out
add
ds
fwait
movsb
mov
shr
mov
sbb
pop
cli
mov
outsl
pop
ret
test
lock
roll
and
add
mov
push
mov
jns
jne
cmp
mov
adc
in
cwtl
sbb
dec
dec
pop
mov
jmp
sub
cmp
ror
cmp
movsb
jle
adc
rcrl
mov
push
cld
push
xor
aam
mov
mov
mov
addr16
testl
inc
jnp
mov
repz
fcomi
mov
int3
pusha
call
add
jne
fincstp
pop
cld
mov
or
leave
sbb
mov
xor
subb
das
lahf
add
adcl
push
movl
add
mov
cmpsb
pop
inc
adc
inc
stc
cmp
stos
or
cmp
mov
cmp
pop
jb
cmp
iret
push
fildl
aaa
dec
pop
js
push
xor
sahf
fsubrl
xor
fwait
or
int3
mov
sub
into
ja
xchg
inc
xchg
cs
mov
jmp
pop
mov
sub
jo
sbb
out
mov
call
jge
inc
pop
jmp
xor
je
in
push
rcrl
pop
cmp
push
out
popf
in
jo
xchg
out
in
sti
xchg
sti
push
or
insl
clc
mov
frstpm(287
scas
js
and
icebp
mov
cmp
mov
movsl
inc
pop
xor
pop
mov
xor
aaa
cli
mov
dec
lods
or
int
and
jg
shl
or
call
sbbl
cli
imul
lock
lods
jnp
or
push
pop
sub
clc
lret
mov
fiadds
and
and
popa
stos
out
push
lahf
mov
or
xchg
cltd
pop
mov
idiv
mov
add
or
xlat
inc
jnp
mov
fwait
and
inc
xor
idivl
fisttps
lcall
mov
mov
or
jns
subl
jp
inc
ret
lds
add
pop
sub
inc
fs
mov
fstps
fxch
mov
dec
fwait
jecxz
adc
jo
mov
and
lret
jbe
dec
and
mov
mov
or
jae
dec
aam
jge
or
jle
jl
add
out
lods
sub
outsb
push
mov
in
dec
sti
mov
lock
or
add
lds
inc
xchg
sub
mov
scas
xchg
mov
mov
rorb
pusha
fsubrl
cwtl
adc
pusha
pop
aaa
aam
adcb
movsl
popf
insb
shr
lea
xor
or
push
in
xchg
in
ljmp
push
lea
inc
dec
repnz
addb
movsb
repnz
push
test
popa
gs
xor
push
das
push
xchg
cli
fldl
mov
sti
mov
nop
lods
aaa
jge
int3
pop
addr16
add
or
add
clc
lret
inc
fldt
mov
ja
cmp
arpl
icebp
and
pop
rol
mov
cmp
test
or
sti
dec
adc
es
adc
rcll
sbb
mov
mov
scas
adc
pop
xchg
xor
sbb
fwait
adc
xorb
fdivrs
dec
cmp
addb
stos
pop
add
mov
pop
fcmovnu
inc
lods
jl
stos
cmpsl
in
sar
out
sub
cmp
mov
mov
mov
aam
xchg
xchg
mov
std
jle
cmpsl
pop
xchg
and
mov
dec
adc
cmp
mov
mov
sbb
push
cmp
push
cmp
adc
jne
movsl
out
fbld
mov
adc
je
data16
inc
pop
and
and
push
mov
push
add
mov
out
popl
sti
test
out
movsl
add
lgs
cmp
mov
movsb
ja
adc
call
push
xor
cmp
lods
scas
adcl
add
mov
and
or
jg
repz
ljmp
ja
mov
add
imul
test
out
lcall
pushf
jg
ss
add
mov
js
mov
pop
jle
pop
adc
cmc
rorl
idiv
fidivl
cmpl
negb
sub
mov
push
lea
testl
mov
push
ret
mov
addr16
incb
fsubrs
jp
lods
mov
mov
sub
mov
adc
lock
jle
aad
ret
mov
push
push
testl
data16
rcrl
loop
in
jg
imul
mov
fstpt
test
mov
add
mov
test
mov
fs
cmp
mov
sbb
and
adc
shrb
scas
stc
loopne
xchg
pushf
jp
sbb
jne
pop
movsb
pop
xor
jbe
rdtsc
sub
ds
jo
loopne
sub
movsl
mov
mov
insl
and
inc
popf
repz
cld
or
shll
jl
rorl
outsb
imul
sub
pop
fmull
sub
outsb
clc
jmp
or
movsb
and
andb
es
je
xor
std
movl
sub
test
in
repnz
ljmp
dec
mull
mov
or
inc
inc
mov
pop
out
cld
gs
pop
xor
sarb
adc
mov
popa
sbb
pop
les
xchg
in
xchg
gs
arpl
add
push
imul
jp
nop
dec
sub
cmp
nop
lea
inc
lret
imulb
in
lcall
push
xchg
xchg
push
cs
aas
push
or
leave
jnp
cmp
add
fnsave
in
rclb
fcmovnb
cmp
cmpsl
mov
div
and
orl
sub
in
jmp
pop
or
scas
mov
dec
mov
push
dec
sbb
lods
xlat
jle
shlb
icebp
adc
lea
add
adc
and
push
xchg
add
enter
push
insb
inc
iret
popa
rclb
cmp
shr
negl
cmp
sti
xor
sub
std
jo
sbb
dec
fisubl
enter
cmpsl
test
jl
xchg
mov
rcl
lds
cltd
inc
jp
pop
rcll
pop
in
mov
mov
jno
jns
rcl
scas
push
lods
jmp
popa
mov
inc
sbb
stc
jg
mov
xchg
mov
fs
jae
sbb
les
push
lret
push
leave
stos
mov
std
xchg
mov
push
cmp
stos
and
pop
and
scas
pop
mov
mov
jmp
xchg
ss
add
mov
imul
insb
xchg
out
lahf
mov
add
das
jnp
mull
pop
popf
xchg
mov
imul
add
iret
gs
cvttpd2pi
jg
out
cltd
scas
mov
xchg
sahf
dec
jmp
in
cmp
lea
push
nop
out
lcall
add
push
ret
mov
ss
and
mov
mov
movl
xor
adc
pop
ret
lds
lods
and
imulb
nop
movd
mov
jno
sbb
mov
iret
push
mov
sti
fisubs
int3
xchg
clc
inc
mov
iret
jns
mov
inc
jl
ror
xchg
mov
dec
xor
push
ret
and
cld
jmp
inc
rorl
testb
dec
ja
gs
stos
or
dec
xchg
loopne
mov
inc
sub
xchg
mov
clc
adc
stos
and
xor
loop
adc
cmp
lret
clc
mov
jp
push
or
inc
jmp
or
scas
adcb
in
in
push
cmc
out
out
xchg
aam
mov
inc
dec
je
or
popa
sub
iret
inc
cmpsl
les
sub
std
or
sbb
pop
incl
pop
mov
das
add
scas
rclb
push
in
push
xor
test
cmovnp
js
adc
pop
and
sbb
movsb
and
push
fbld
xor
scas
mov
push
mov
int3
pop
fwait
cld
jbe
xchg
mov
push
xor
mov
xchg
sub
push
lods
push
or
push
inc
jno
xchg
outsl
xchg
icebp
les
aad
adc
pop
add
ds
and
fildl
lret
arpl
push
xlat
test
inc
push
scas
cmp
in
xchg
pop
movhps
daa
cmpsl
xchg
data16
xor
dec
mov
lret
mov
mov
out
jmp
cmp
aad
leave
je
inc
rcrl
jns
lcall
in
cmp
xchg
xchg
gs
int
jge
lret
inc
cmp
push
pop
push
inc
add
cmp
adc
and
mul
fs
adc
or
add
movsb
sahf
fcomps
or
ja
cmp
xor
or
xor
xlat
roll
ja
xor
add
rclb
bound
and
fdivp
sti
fmull
fcmove
clts
xchg
pop
leave
mov
inc
insb
lret
std
aam
clc
add
pusha
lahf
xchg
dec
adc
sbb
pop
test
cmpsb
push
insl
stos
push
and
push
mov
xor
and
mov
cli
lock
scas
pop
pop
jae
ss
dec
dec
pop
test
shrb
outsl
add
or
stos
add
adcl
inc
mov
mov
xor
jge
and
in
mov
test
lahf
mov
shrb
jns
test
xchg
aas
inc
mov
dec
jb
jb
int
divb
push
inc
mov
popa
mov
pop
dec
and
adc
mov
add
pop
call
jnp
insl
int
sbb
lock
cmp
idivb
mov
adc
pop
mov
xor
push
xchg
mov
dec
cmp
mov
xlat
jno
xor
sbb
dec
int
ja
cmc
sbb
mov
adc
dec
test
stos
sbb
jle
jns
rorl
mov
test
scas
mov
addr16
or
inc
es
mov
arpl
pop
stos
cmp
jg
imul
push
mov
fcmovnu
in
xchg
inc
lds
in
mov
xchg
jae
or
pop
sbb
add
xchg
sub
cmp
fidivl
pop
or
sub
popf
or
stc
or
cmp
test
lret
mov
sub
fidivrs
loop
loopne
call
jg
cmp
sbb
jecxz
mov
shlb
sbb
clc
and
fs
bound
cwtl
sarb
ljmp
scas
jne
cs
mov
inc
fwait
daa
add
out
sbb
jmp
sbb
stos
hlt
push
mov
jne
nop
and
jge
in
mov
pop
push
dec
hlt
xor
or
inc
int3
jmp
imul
mov
jo
mov
rep
adc
dec
jnp
pop
sbbl
add
pop
jb
out
aam
dec
dec
enter
ss
mov
mov
leave
push
push
pop
lods
mov
xor
in
dec
call
mov
testb
sarb
xchg
enter
test
pop
push
jne
pop
ss
jg
test
pop
jp
mov
fmull
mov
push
sub
sbb
shl
adc
jge
loop
sbb
jb
and
mov
sbb
cmpsb
stos
adc
mov
xor
mov
sbb
pop
out
push
inc
mov
fiadds
cmp
mov
int3
xor
push
adc
push
xor
pusha
movsb
or
shlb
mov
movsl
hlt
aam
sub
outsl
test
mov
int3
loop
hlt
movsb
mov
mov
hlt
and
mov
mov
ljmp
repnz
mov
fcmovb
jb
xor
push
movsl
mov
or
mov
movsb
fdivs
dec
xor
jle
pop
cmp
test
xchg
xor
cmp
leave
movsb
popl
fwait
pop
sahf
fnsave
lcall
outsb
xchg
addr16
js
lret
aam
shrl
in
xchg
jg
sbb
adc
addr16
add
add
dec
pop
push
loopne
sub
loop
lret
sbb
sbb
pop
mov
push
cltd
repnz
adc
filds
scas
xor
jno
or
dec
adc
cmp
push
xor
dec
dec
adc
inc
pusha
inc
xchg
shrl
or
nop
orl
dec
sbb
pop
jns
cmp
int3
mov
fwait
push
cltd
icebp
flds
push
lahf
dec
in
dec
push
outsb
sti
imul
pop
cmc
cmpsb
sub
dec
pushf
xchg
mov
xor
lret
imul
enter
adcb
jle
xor
add
lahf
jle
fsub
inc
test
jnp
test
mov
loope
push
lds
out
jp
stos
cmp
cmpb
pusha
push
in
in
pop
and
dec
mov
xchg
inc
cmpsb
jl
out
pop
and
shr
rcl
mov
inc
clc
add
popa
jns,pn
repz
dec
sub
fidivs
aas
mov
cmp
mov
jmp
xor
ss
test
loopne
and
push
lods
inc
into
and
adc
xor
out
or
inc
out
mov
adc
jbe
mov
add
mov
jg
adc
jge
mov
pushf
cmpsl
out
rcrl
gs
jne
imul
xchg
push
out
out
xchg
loop
aas
ret
push
mov
or
jmp
xchg
xchg
xor
push
inc
push
daa
test
mov
mov
sbb
dec
cltd
into
call
mov
aad
lea
test
iret
fldenv
nop
xlat
xchg
lods
adc
lods
mov
mov
inc
ja
adc
mov
pushl
sbb
es
dec
cli
sbb
jp
xchg
ret
mov
push
jo
rorb
idivl
fistpll
lock
test
shrl
xchg
imul
xor
sub
ret
ss
sub
loopne
push
bound
mov
dec
push
push
add
sbb
fnstcw
mov
cs
sar
jno
sarl
sub
and
mov
cmc
out
push
ss
jl
or
sub
pop
adc
jl
lret
jmp
adcb
mov
inc
clc
test
xchg
push
and
mov
mov
push
jp
jb
dec
pop
add
jno
pop
in
xor
repz
pop
fistpll
mov
add
sub
push
loop
movsl
mov
aad
icebp
xor
enter
cmp
movsl
mov
cmp
ret
insb
dec
ss
out
bound
push
loope
loop
pop
push
int
pusha
jge
test
stos
imul
xor
jecxz
sbb
shrl
jmp
rol
inc
jl
cli
sub
adc
push
clc
push
in
loopne
mov
adc
add
inc
cmp
inc
hlt
sub
je
jl
pushf
jno
add
push
pop
adc
mov
sarl
cmc
jo
mov
fwait
rorb
mov
dec
sub
roll
test
xor
xor
xor
stos
shlb
into
arpl
ss
and
pop
inc
in
gs
jae
cmp
jae
sub
push
and
sbb
dec
xor
mov
mov
loopne
popf
pop
mull
adc
xor
mov
mov
push
test
add
xor
mov
dec
fisttps
fsubrs
arpl
aam
inc
push
push
push
das
dec
clc
ret
cmp
pushf
ss
fdivp
testb
stos
dec
adc
and
js
fwait
adc
aam
ljmp
stos
repnz
xor
jle
popf
pop
outsb
xchg
ret
xchg
lret
repnz
cmp
mov
cwtl
pop
jg
or
and
outsl
inc
gs
xchg
lret
hlt
xchg
daa
cmpsb
dec
adc
out
fisubrs
fstl
mov
pop
mov
adc
leave
mov
xchg
dec
mov
pop
lret
sarl
inc
xchg
hlt
mov
icebp
fistpl
mov
add
inc
or
mull
andl
mov
cmpsb
add
xor
stc
pop
bound
push
xor
lock
cmpsb
jbe
movsl
dec
das
cmc
int
lods
mov
sbb
in
roll
mov
inc
stos
mov
std
fsub
jge
xchg
mov
aaa
mov
adc
enter
std
outsl
adc
hlt
cmpsl
dec
rolb
add
lods
jb
sbb
insb
mov
call
adc
xor
in
mov
xlat
xchg
ret
push
adc
aas
pop
mov
frstor
and
lock
pop
push
dec
sbb
rcrb
or
leave
sub
lahf
cltd
cmp
mov
es
aaa
test
loopne
aaa
mov
push
sti
jne
lahf
push
cmp
lret
adcl
enter
test
xorb
add
mov
jo
sbb
stos
mov
xchg
inc
jl
sbb
cmp
dec
js
mov
fsubp
iret
nop
jbe
push
and
sbb
xor
push
inc
mov
je
fmulp
sbb
xor
cwtl
and
dec
jmp
jo
add
addr16
repnz
lods
or
in
xchg
jl
out
cmp
pusha
orb
or
sbb
shll
movsb
xor
das
jecxz
shlb
xchg
and
push
adc
daa
add
insb
push
lea
push
aaa
out
rcrb
push
fwait
mov
and
mov
add
pop
jo
dec
mov
jp
outsl
enter
pop
mov
lcall
aaa
push
mov
and
pop
insl
cld
shlb
mov
jb
das
int3
mov
mov
sub
aaa
adc
addb
call
shlb
cmp
xchg
imul
xchg
push
cld
cld
mov
ds
sub
and
lahf
mov
mov
mov
sub
mov
loop
jb
push
icebp
sub
sbb
add
aad
push
pop
push
jb
aad
imul
shrl
cmp
cmpb
mov
mov
push
hlt
insl
outsl
cmpsl
xor
and
jg
pop
pop
inc
loopne
sbb
imul
pop
jl
mov
mov
xchg
lret
cld
jbe
mov
xor
mov
jb
sub
test
jnp
or
nop
mov
xchg
jecxz
js
sbb
lods
mov
pushl
pop
pop
enter
test
xlat
dec
jmp
mov
pop
push
jecxz
mov
data16
or
and
inc
lock
sbbb
xchg
dec
jb
xchg
addr16
xor
mov
mov
inc
fld
adc
rcrl
daa
lea
cmp
cmpsl
inc
ss
rorl
sub
insl
stos
scas
out
add
mov
mov
dec
test
dec
mov
scas
xacquire
xchg
fwait
ja
dec
cmc
fwait
add
or
add
mov
xchg
icebp
inc
imul
adc
dec
mov
fnstcw
xor
push
mov
jo
xor
mov
popf
sbb
sbb
push
mov
pushf
cmpb
aas
andl
sbb
sbbl
mov
add
push
add
sar
jl
js
dec
daa
inc
mov
aaa
add
mov
in
inc
xor
fidivs
and
test
in
cli
fldl
pop
rclb
jns
push
lds
subl
adc
out
adc
imulb
sbb
aad
cld
enter
fistl
adc
push
push
test
arpl
adc
in
mov
fstl
sub
inc
or
sub
add
jne
cmpsb
dec
pop
dec
lds
fimuls
lret
inc
pushf
mov
out
push
mov
inc
ror
std
in
pop
jecxz
stc
lret
cmp
fbld
ret
fldcw
fnstenv
popf
arpl
inc
xchg
adc
lods
sar
add
sub
loope
cmp
or
orl
adc
sub
lret
xchg
std
or
inc
mov
jbe
mov
jmp
add
adc
popa
test
push
int
jmp
loopne
push
dec
mov
scas
mov
mov
sar
negb
jo
test
xchg
int3
dec
adc
mov
outsl
adc
add
mov
xor
mov
out
rorb
push
ret
mov
mov
lret
mov
dec
jecxz
inc
out
int
sbb
dec
js
aas
outsb
mov
fcmovnbe
nop
scas
jp
xchg
dec
subl
dec
sti
add
int3
outsb
pop
push
pusha
or
xor
adc
lods
mov
and
adc
xor
out
in
push
outsl
gs
daa
push
imul
inc
lods
stos
and
pop
hlt
or
add
pop
gs
enter
ficoms
repnz
dec
cs
sub
push
xchg
jp
push
frstor
push
pop
add
ret
pop
mov
ds
orl
sti
fstpt
xor
and
je
jp
sub
push
pop
sbb
es
mov
push
sbb
add
dec
icebp
cmp
fsubl
sbb
movsl
icebp
into
xor
sub
arpl
sbb
cmp
in
lods
bnd
imul
pusha
mov
add
fwait
mov
mov
lahf
jbe
iret
push
aaa
jge
fnstcw
push
sbb
dec
inc
sti
push
jb
sub
addl
test
xor
fisubl
sahf
fisubs
push
inc
sbb
push
push
fs
icebp
dec
jl
or
push
add
rolb
xchg
test
xchg
aas
inc
mov
enter
or
lds
xchg
stos
leave
xchg
arpl
daa
pop
mov
repnz
incb
pop
rolb
sub
loope
lret
scas
fnstcw
mov
mov
mov
ss
mov
mov
fpatan
fisubrs
into
arpl
imul
dec
mov
ja
jecxz
aas
sbb
push
cmp
push
mulb
scas
push
setae
lret
int3
cmp
xchg
dec
jo
loope
xor
mov
sub
mov
pop
xchg
mov
pushf
and
das
in
inc
mov
xor
mov
jae
push
cmp
outsl
les
notl
xchg
xor
stos
imul
pop
in
icebp
aas
pop
or
testb
dec
and
popa
adc
mov
pop
sbbb
mov
jmp
adc
mov
ficompl
pop
fdivp
ds
loope
cltd
popa
lret
mov
lea
in
and
scas
aas
sbb
jle
sbb
inc
add
add
daa
inc
jae
fistl
mov
or
mov
pop
mov
mov
inc
dec
lcall
adc
cltd
and
ret
stos
sub
adc
sub
andb
leave
test
mov
fistpll
pop
mov
scas
cmpsb
jg
pusha
inc
popw
and
cs
fisubs
push
dec
out
jns
pop
outsl
nop
jmp
and
icebp
gs
dec
fsubs
and
out
les
pop
sbb
mov
pusha
inc
stc
cmp
fcmovu
shll
aad
or
lret
and
push
shrl
jg
popa
sarb
cmp
int3
shl
js
push
rolb
rclb
mov
adc
push
dec
push
jns
lcall
sbb
je
test
nop
movsb
xor
xchg
add
repnz
add
adc
fisttps
shl
adc
es
xchg
aad
push
push
push
clc
pusha
addb
sub
push
cs
ror
mov
xchg
testb
rorb
sbb
push
jne
sbb
in
negb
pop
mov
xchg
inc
sbb
js
cmpsl
int3
rcll
mov
push
sub
sbb
pop
jb
mov
pop
sbb
jecxz
shll
mov
adc
lcall
add
xchg
sbb
popa
aad
fs
lret
addl
add
sbb
add
push
or
repnz
popa
std
ret
pop
jmp
inc
fwait
lahf
repz
jns
pushl
ret
out
push
mov
aam
and
jge
push
mov
dec
push
outsl
or
in
test
daa
repz
and
push
sub
jns
sub
popf
popl
call
dec
mov
push
bound
mov
xorl
test
sbb
and
mov
aaa
push
mov
std
sbb
inc
mov
loope
push
adc
add
imul
xor
adc
test
insl
test
sbb
mov
inc
out
jp
add
mov
orb
test
mov
jmp
jo
stos
dec
jle
je
xor
icebp
pop
mov
cmpsl
test
mov
xchg
dec
xchg
das
xchg
xchg
lods
pop
xchg
pop
jbe
dec
xchg
stos
out
sbb
jno
imul
dec
push
arpl
add
pop
jmp
sbb
repnz
pop
iret
xchg
add
outsl
mov
cltd
jl
sbb
mov
dec
sub
loope
sub
mov
test
int3
lret
sbb
xor
jge
das
jp
or
daa
mov
enter
xor
cld
or
orb
stc
bound
sbb
int
cmc
aad
push
push
pop
mov
adc
xlat
push
push
push
and
andl
and
cs
outsb
xchg
add
out
or
sub
std
cmp
adc
and
xor
cmp
sahf
xor
sarl
mov
push
push
mov
imul
cmc
xchg
call
testl
or
pop
mov
mov
xchg
inc
mov
mov
push
dec
and
add
pop
xor
mov
ljmp
cmp
aam
sub
sbb
inc
jnp
popa
cmpsl
pop
push
inc
mov
mov
jge
add
xor
xchg
mov
ss
jne
mov
imul
or
push
cmp
pop
movups
push
mov
mov
mov
mov
dec
popf
sti
shrb
loope
aad
push
stos
popf
adc
cld
sub
int3
sahf
fstpl
sub
dec
or
lret
cmc
sbb
hlt
out
aam
testb
movsl
test
or
xchg
call
les
cltd
push
lahf
sahf
jb
cs
push
xchg
in
or
lret
incl
in
sbb
loopne
push
add
aam
hlt
scas
cs
inc
xchg
ficomps
dec
and
repnz
test
or
repnz
jne
shrl
rorl
aam
and
les
prefetch
or
je
hlt
sub
sbb
imul
xor
jb
sub
scas
ret
push
sahf
popa
lea
enter
out
inc
pop
in
fucomip
jnp
sub
ret
ss
icebp
adc
sub
jmp
mov
sahf
jne
gs
jmp
dec
mov
out
enter
fadds
repnz
in
xchg
cld
sub
push
cwtl
stos
mov
push
mov
xor
scas
push
mov
jp
adc
iret
add
int
hlt
xor
popa
ror
hlt
out
test
jae
pop
ljmp
adc
jge
rorl
mov
xor
cmp
fcomp
mov
adc
lods
shlb
jbe
aad
xchg
outsb
fsts
sub
insb
fsts
or
add
fwait
movsl
mov
lahf
fmul
push
shll
insl
mov
sub
test
mov
ret
fimull
out
add
leave
test
arpl
dec
aas
cmp
xor
jmp
stc
rcll
mov
jno
and
pop
adc
movb
ret
fisttpll
decl
inc
lret
outsb
dec
xor
sub
loop
push
arpl
cmp
jno
inc
ljmp
jne
pushf
mov
inc
stos
dec
lret
pop
divl
popf
jb
mov
mov
aaa
rolb
bound
ljmp
pop
fbstp
add
leave
lods
or
xchg
pop
emms
es
stos
mov
or
xchg
mov
test
mov
daa
sub
cmc
pop
pop
push
lret
pop
cltd
inc
inc
outsb
push
mov
mov
enter
pop
jmp
les
sub
adc
imul
mov
mov
mov
mov
scas
cmc
arpl
or
call
cmp
addr16
or
jle
fistps
xchg
push
das
movsl
hlt
and
xchg
pop
and
es
push
test
dec
cmp
enter
sub
imul
out
ret
leave
xor
and
inc
fidivrl
mov
sbb
loop
add
fwait
sbb
shlb
inc
cmpsb
jno
scas
mov
les
pushf
xor
dec
call
pop
push
jmp
cli
inc
aas
adc
xor
jmp
inc
add
pushf
scas
lds
mov
or
arpl
pushl
jmp
ljmp
ss
lret
mov
sub
inc
shl
mov
add
jmp
jne
cwtl
dec
push
int3
push
leave
pop
jmp
into
addr16
jo
in
outsl
and
xchg
lods
lods
pushf
cmp
rclb
fstps
push
aaa
jb
adc
lcall
push
inc
jp
xor
ja
jl
and
lcall
jge
adc
or
push
outsb
or
out
cmp
xor
in
add
scas
mov
fidivrl
insl
mov
mov
xor
sbb
adc
lds
xchg
xchg
test
xor
add
add
inc
add
mov
aad
scas
outsl
enter
aas
add
pusha
cld
and
mulb
test
xchg
sub
cmp
jns
jne
fcmovu
or
push
std
sbb
cmp
in
dec
iret
mov
or
xor
cmp
mov
cmp
jmp
inc
subl
xchg
adc
cli
pusha
test
jb
jecxz
fldl
mov
outsb
pop
lret
cvtpi2ps
or
mov
cmp
out
and
mov
js
mov
jl
sub
push
or
jne
shll
mov
pop
roll
mov
out
ret
fwait
sarb
inc
movsb
add
jg
lods
rcr
clc
xchg
mov
cmp
add
aas
push
mov
ja
enter
push
mov
mov
stc
fcoms
aam
xor
insb
loope
dec
out
sbb
mov
lods
cld
jge
call
repnz
sbb
dec
ret
sub
mov
pop
jp
bnd
dec
int
daa
ficoms
pop
push
out
arpl
push
pop
cltd
mov
js
or
push
adc
imul
xchg
push
push
mov
insb
in
stos
push
sub
popf
daa
add
mov
sbb
fwait
in
repnz
stos
fstl
movsl
ret
mov
mov
cmp
aaa
mov
or
int3
pop
outsb
jecxz
pop
mov
rolb
xchg
cli
test
or
fdivr
cld
xchg
push
xor
mov
mov
mov
dec
hlt
mov
fldenv
mov
mov
dec
mov
sbb
pop
call
sbb
mov
jnp
stos
stos
or
movsl
rorb
jl
lds
jb
add
repz
inc
cmp
sbb
xchg
pop
and
mov
int
mov
xor
jno
dec
daa
xlat
pop
cmp
jp
inc
in
xor
cmp
xchg
test
shl
xor
lahf
mov
pop
xor
and
andnps
and
jb
leave
daa
pop
sar
addr16
xorl
sbb
jno
dec
pushf
mov
add
xchg
decl
test
adc
sbb
jmp
jmp
add
imul
mov
mov
add
insl
jge
jno
dec
jns
cmpsb
inc
mov
jp
cmp
push
in
jecxz
xor
pushf
notb
pop
inc
jg
xchg
push
jle
jno
ret
daa
pop
push
repnz
lahf
lcall
xchg
dec
cmp
clc
xchg
mov
mov
inc
rcrb
push
push
popa
mov
xchg
fistpll
enter
cmpsb
ret
mov
lock
dec
imul
lret
mov
mov
or
or
sub
dec
ljmp
rolb
fwait
inc
push
insb
jno
cmp
dec
xor
outsl
mov
push
mov
imul
push
outsb
jge
push
fisubrs
fmuls
cmp
es
sbb
stc
sbb
jnp
and
adc
cmc
inc
hlt
les
mov
jp
fidivl
fiadds
jmp
loope
int3
cli
repz
rorl
je
mov
divb
push
scas
lea
jbe
xchg
pop
pop
bound
out
movsb
nop
fidivl
in
xchg
sbb
adc
movsb
xor
add
pushf
gs
add
pop
lcall
xchg
xchg
cmp
mov
xlat
xor
fst
stc
fbstp
andl
out
dec
incb
mov
add
je
std
pop
scas
imul
enter
and
jnp
jb
shll
imul
iret
imul
cmp
fldenv
decl
outsb
sub
dec
testw
pop
repnz
mov
xchg
pop
out
leave
cltd
in
int3
cmpsl
cmpl
iret
inc
cmpl
add
dec
cmp
arpl
fs
ret
adc
inc
popa
mov
xor
not
stos
jle
js
jo
cmc
jae
lahf
js
aaa
mov
ds
scas
sbb
add
gs
dec
jl
cmc
push
push
mov
add
int
rolb
scas
xor
xchg
mov
mov
repnz
xchg
out
mul
hlt
xchg
shl
pop
in
push
lock
pop
fs
imul
sub
mov
mov
inc
cmp
fcomps
or
sbb
add
jg
cwtl
testb
pop
push
popf
xchg
mov
xchg
jmp
jne
pop
mov
popa
mov
mov
xor
xchg
les
icebp
js
xchg
test
in
push
in
shlb
cmp
pushf
pop
cmp
sti
outsb
dec
or
inc
xor
shrb
mov
pop
mov
arpl
add
out
cs
ret
jnp
xchg
pop
loope
push
rcl
sbb
je
test
pop
cs
scas
pop
push
cmpsl
cld
or
insb
push
adc
dec
dec
mov
push
shl
int3
cld
inc
rcll
cld
mov
lock
xchg
jb
adc
sub
mov
sahf
xor
in
popf
stc
test
add
leave
fsubrs
mov
out
cmp
js
jns
sbb
or
sub
leave
mov
mov
xchg
xor
data16
jbe
test
scas
xchg
inc
xorb
mov
and
aad
int3
xor
or
int3
push
sbb
sub
fcoms
lcall
dec
push
fidivrs
loope
mov
sbb
adc
ffreep
xor
xor
xchg
addl
and
loop
or
shll
sbb
lret
loopne
mov
outsb
hlt
loopne
popa
xchg
add
mov
xor
add
xchg
cld
sub
sahf
mov
inc
dec
sub
mov
inc
mov
popf
dec
adc
es
outsl
test
outsl
stos
shll
cmp
repnz
adc
lock
lods
cmc
mov
ja
xchg
mov
push
adc
dec
cmpsl
popa
xlat
fs
rcrl
imul
lods
mov
xor
loop
mov
gs
enter
dec
insl
shlb
cmp
push
xor
sbb
cmp
fs
adc
mov
and
cmc
aad
mov
push
cld
in
mov
dec
arpl
stos
lret
mov
push
cmp
xchg
stos
fsubrl
or
pushf
inc
push
or
push
fsubs
adc
sub
mov
out
stc
xlat
in
xchg
push
inc
mov
popf
insl
cltd
icebp
shlb
push
popa
jae
dec
test
push
sub
sahf
and
jg
cmpsl
or
cld
in
sub
leave
out
push
mov
test
in
stos
mov
mov
add
mov
lods
shlb
pop
mov
std
xorl
and
jb
outsb
cltd
in
pop
jmp
and
pop
scas
rolb
sub
les
out
push
jle
fstl
imul
and
lret
sbb
ljmp
pop
sub
insb
add
push
loope
dec
cs
mov
cwtl
imul
push
xor
loope
imul
ss
adc
jae
stc
cmp
sbb
pusha
adc
adc
mov
sbb
sbb
shl
icebp
jecxz
cltd
pushf
jecxz
pop
cli
cmp
jp
xor
popa
pop
pop
scas
aam
adc
fisubrs
fidivl
cli
sbb
pop
inc
addr16
adc
stc
push
call
sbb
subb
jno
push
push
mull
mov
jne
stc
and
xor
sub
xchg
fisttps
lcall
push
push
iret
dec
andl
pop
push
xchg
mov
fstpl
enter
inc
fsts
inc
bound
pop
cs
sub
mov
dec
mov
in
pusha
movsb
jne
cmc
bound
lods
push
testb
cwtl
dec
cmp
fs
out
or
ds
sbb
imul
push
pushf
lret
test
test
bound
rclb
cmp
xchg
loopne
push
mov
sbb
xchg
xchg
sub
out
cld
cld
pushf
adc
das
stos
xor
jp
outsl
imul
or
and
jbe
adc
stos
mov
cmp
fnsave
mov
insb
mov
lret
fcomps
fcoms
rcr
jbe
subl
adcl
movsl
movsl
dec
pusha
or
pop
inc
and
or
fmull
jecxz,pn
loope
pop
bndstx
jg
pop
add
sbb
sbb
jmp
dec
rcrb
out
cmp
enter
mov
sub
and
and
mov
pop
sbb
mov
in
fldt
leave
inc
inc
jmp
jge
jg
inc
dec
mov
int3
dec
pop
clc
cli
test
lea
cmp
negb
jecxz
js
xchg
icebp
jnp
xchg
xor
sbb
ficomps
and
push
arpl
rorl
pop
mov
test
hlt
hlt
lret
inc
loopne
lret
sub
out
lea
lea
adc
fcoml
adc
sbb
mov
lock
popa
mov
fwait
adc
dec
xchg
mov
push
out
mov
mov
sbb
dec
ret
cltd
js
loope
mov
ss
in
mov
cmpsl
cmp
cmp
bound
adc
pmaddwd
lcall
adc
lock
imul
rcrl
fsts
jge
iret
pusha
inc
sub
test
push
and
mov
sub
cmpl
cltd
shrl
jo
in
dec
gs
rcl
mov
push
in
mov
xor
and
push
jmp
mov
fcmove
add
rorl
jmp
adc
es
clc
mov
sub
outsl
xor
rclb
insl
aad
push
xchg
popf
das
das
das
sti
cwtl
or
popa
cmp
aam
andl
add
inc
and
frstor
iret
dec
mov
adc
xor
inc
push
mov
inc
loop
das
add
adc
cmp
imul
rcrl
lahf
adc
xor
lock
divb
ss
mov
mov
sbb
dec
mov
xchg
or
xchg
insb
and
outsl
call
dec
push
aad
sahf
data16
add
or
leave
cmp
cld
xor
movsb
enter
icebp
loop
cli
aam
push
mov
int
or
mov
sbb
test
out
xor
pop
pop
mov
stos
and
mov
sarb
sub
stos
js
cltd
daa
bound
mov
popa
mov
je
jnp
inc
mov
ljmp
shlb
aam
loopne
movsl
mov
mov
sbb
in
fdivrp
fnstcw
fstpt
orb
or
push
dec
mov
jne
sbb
pop
cltd
sub
lds
stc
imul
jbe
pop
clc
dec
fdivrs
repnz
mov
flds
sti
int
dec
jge
mov
arpl
dec
sub
ljmp
loopne
and
pushf
pop
orl
fstps
std
add
mov
call
in
lds
lcall
pop
mov
sti
jo
lahf
pop
fsubs
mov
in
mov
mov
or
sbb
mov
lret
loop
jle
lds
mov
push
push
ret
jp
cmc
cmp
insb
push
aas
icebp
mov
ja
add
jg
xor
xor
fsubs
imul
jne
cmp
jae
inc
inc
stc
mov
in
add
enter
mov
stc
xchg
aaa
ljmp
movsb
mov
cmp
sbb
les
inc
repnz
dec
insb
add
xchg
cmpsb
out
sbb
test
subb
leave
or
mov
pop
pop
in
loopne
std
sahf
sub
pop
or
jne
jl
sti
aam
pop
into
jmp
pop
leave
clc
fistl
sti
xchg
jns
sbb
in
or
cs
sbb
fimull
pushf
fidivrs
aas
adc
pop
mov
aad
cmpsb
or
lret
in
push
push
das
fcomps
out
push
mov
mov
repz
lcall
mov
das
and
lahf
cmp
mov
adc
and
insl
fisubrs
mov
push
mov
dec
inc
out
in
mov
pop
push
adc
aam
mov
mov
push
cli
enter
lcall
popf
es
cmp
sub
ss
addr16
ret
pop
pop
std
xor
sub
cmc
ljmp
mov
fldt
clc
neg
push
mov
sub
ret
dec
fisttpll
bound
daa
sbb
in
mov
outsl
insl
xchg
cld
arpl
outsb
or
adc
filds
fidivrs
lea
imulb
and
rcll
in
ds
xor
xchg
push
xchg
je
pop
mov
add
pop
mov
nop
fadds
int
aas
push
xchg
dec
add
push
mov
xchg
cld
call
adc
jno
add
push
mov
sbb
andl
cmp
xor
xchg
ljmp
in
and
daa
xor
adc
sub
cmp
lock
pop
adc
push
aam
addr16
add
decb
or
loop
iret
daa
or
dec
leave
lret
mov
mov
and
inc
mov
imul
xor
jb
mov
mov
pop
jp
lods
add
jne
push
pop
dec
xor
add
jge
cmp
popf
and
idivl
adc
test
sbb
aaa
jle
mov
popa
lods
jmp
sarl
jne
push
cmp
jae
data16
jae
lock
dec
inc
loope
fidivl
pop
js
rorb
fldl
imul
into
adc
idivb
shlb
imul
iret
fisubrl
lods
inc
in
daa
pusha
sbb
pusha
sub
adc
loope
inc
add
addl
out
adc
scas
fwait
mov
lret
mov
cwtl
sahf
cli
or
fucomip
popf
inc
mov
lahf
inc
adc
sbb
fwait
outsl
mov
dec
mov
jne
je
cld
pop
idivb
hlt
lea
test
mov
lds
xor
in
test
fs
lret
push
negl
cmc
and
arpl
fucomi
aaa
push
aam
mov
add
sbb
adc
push
push
or
add
into
add
out
in
mov
mov
mov
addr16
cmc
sbb
aaa
and
mov
inc
sub
pusha
imul
sahf
inc
adcb
or
pushf
xchg
ror
out
pop
sbb
or
inc
mov
inc
icebp
fidivl
lods
inc
lahf
push
neg
je
jns
fs
push
les
subl
sbbl
sub
pusha
xlat
mov
pop
pop
ja
cwtl
push
xchg
push
imul
out
inc
sbb
or
sbb
xor
int
stc
cmp
roll
rorb
dec
out
dec
pop
sbb
or
lds
pop
mov
scas
arpl
in
mov
addr16
lcall
cwtl
mov
mov
cld
repz
cmp
cmp
inc
cmp
ret
shl
xor
cli
mov
cwtl
test
test
shrb
neg
andl
or
lret
push
or
jp
sub
icebp
aas
mulb
in
push
sub
das
pusha
repz
ret
test
fisubrs
push
xchg
hlt
xor
jecxz
ret
dec
mov
ret
push
mov
sahf
imul
mov
lret
sub
je
dec
cld
or
movsb
add
shrl
pop
push
fsubl
push
and
jbe
add
push
fisubrl
and
sub
movsl
inc
xor
push
xchg
push
push
sub
jne
into
daa
mov
xor
adc
xor
out
or
inc
jnp
test
push
enter
xor
fsts
push
xor
subb
pop
test
imul
fdivrl
and
jb
push
incl
inc
cld
jne
pop
mov
xchg
push
fiadds
add
in
inc
push
and
inc
mov
call
je
add
repz
jmp
mov
aam
outsl
rclb
mov
adc
mov
push
jae
scas
imul
sarl
mov
addr16
adc
mov
inc
int3
je
mov
xlat
jnp
in
jae
fstpl
and
fs
jne
push
and
aad
filds
mov
mov
pop
arpl
xchg
iret
jae
inc
xlat
jno
push
cltd
sbb
cld
jg
shlb
lret
out
stos
mov
mov
pop
lahf
cmp
inc
in
push
cmc
jne
sub
movsl
mov
mov
arpl
inc
mov
dec
push
or
leave
in
adc
std
cmpsl
mov
arpl
bound
dec
aas
and
loopne
test
je
jle
sbb
fldcw
dec
jge
pop
mov
sti
out
shrb
push
dec
ds
nop
jle
cld
mov
lods
jl
cltd
jnp
push
cmp
add
nop
imul
int3
xchg
in
mov
stc
repz
repz
jns
xor
xchg
cltd
fldlg2
dec
jle
lods
sub
scas
and
and
out
mov
jo
cmp
sbb
xchg
lcall
and
push
mov
push
stos
test
scas
mov
push
das
lods
inc
ret
loopne
or
int3
inc
in
pop
push
pusha
jl
adc
rcrl
inc
mov
sbb
pop
pop
daa
fs
outsb
mov
cwtl
or
daa
mov
incb
adc
xor
icebp
shll
jl
add
dec
out
mov
cld
lods
aaa
frstor
mov
lea
sub
sbb
fimuls
sbb
pop
pop
outsl
sub
or
push
mov
sub
mov
push
notl
pop
xor
movsl
notl
call
or
push
adc
in
fiadds
dec
testl
stos
sub
fsubl
mov
dec
pop
clc
xor
mov
subb
idivb
jmp
insl
in
stos
cmp
sub
repz
sub
sarl
addl
mov
dec
gs
adc
test
push
mull
pop
and
mov
mov
jp
push
pop
sub
call
mov
rclb
and
mov
das
adc
add
jp
cmc
sti
or
movntps
jno
cltd
xor
mov
sub
mov
jp
add
and
push
adc
sbb
rclb
xchg
jae
psubd
iret
incl
lods
rclb
jns
leave
cli
sarl
mov
clc
mov
sub
repz
ljmp
dec
imul
orl
sti
push
and
and
pop
fwait
mov
xchg
mov
mov
jl
shll
pop
in
jle
inc
stos
les
inc
out
dec
sub
mov
popf
int
aam
pop
lock
gs
jmp
inc
adc
pop
repz
inc
mov
sub
rcrb
mov
sub
fstl
lea
pop
out
rolb
xchg
int
call
loop
jnp
xchg
sahf
loop
xchg
push
sub
inc
jb
pop
fwait
shrb
push
fcmovnb
xor
and
rcr
and
scas
xchg
xor
jo
out
cmc
mov
cmp
lret
in
sahf
sub
aas
push
arpl
mov
jg
imul
xchg
cmp
pop
and
popf
ss
adc
stos
sub
xlat
movsl
sti
add
pop
sub
lret
jecxz
sub
std
xchg
push
loop
icebp
lods
stc
sub
scas
push
cmpsl
aam
push
cmp
push
xlat
mov
and
cmp
cmp
int3
mov
and
imul
xor
lds
or
cmc
and
cmp
mov
fistl
aad
push
cmpsl
xchg
outsl
iret
mov
mov
stos
fistps
xchg
xchg
adc
push
mov
mov
sub
mov
mov
aad
xor
lcall
xchg
xor
popf
and
cld
roll
push
xor
adc
dec
adc
cmpsl
orl
pusha
xchg
ja
pop
push
sub
int
sub
sbb
frstor
jecxz
xchg
popf
into
or
popa
outsl
cs
ror
pop
inc
and
leave
arpl
mov
das
push
pop
scas
cmp
insl
jl
ja
cltd
xchg
movsl
mov
mov
add
negl
and
and
orb
cmp
mov
sub
std
cmp
sbb
jmp
fcmovne
add
push
inc
dec
mov
ret
and
or
cmc
jns
xlat
gs
jg
jl
cmpsl
arpl
mov
xchg
in
jns
mov
xlat
sbb
mov
sbbb
sub
dec
out
fucomip
mov
dec
mov
xor
push
mov
mov
and
adc
ret
push
mov
shlb
lea
ss
inc
ljmp
jno,pn
cld
xor
and
mov
jb
ret
cmp
jne
add
test
mov
dec
call
test
mov
mov
fstps
pop
rcl
add
or
mov
xchg
in
cli
mov
imul
aad
iret
push
imul
pushf
and
shll
ret
inc
jo
stos
mov
adc
lea
or
mov
aam
out
and
and
add
pop
sbb
enter
jne
fcoml
sub
mov
dec
push
lcall
roll
mov
es
dec
mov
lahf
das
sbbl
adc
adc
mov
adc
mov
adc
ret
into
lock
aaa
sbb
scas
jmp
in
in
js
fists
aad
out
pandn
aad
les
mov
inc
stc
fiadds
mov
jl
lds
ljmp
xchg
fimull
pop
aad
dec
into
xchg
pop
mov
clc
pop
cmp
inc
mov
mov
inc
dec
xchg
sbbl
xchg
add
push
jo
mov
je
mov
pop
call
icebp
sbb
sbb
movsl
dec
jnp
imull
or
sub
das
mov
loopne
sbb
inc
scas
pop
jae
push
mov
inc
sub
popf
push
dec
cmp
or
lret
push
clc
ret
dec
hlt
or
lods
jns
jmp
mov
and
push
xchg
mov
aad
push
xor
pop
rorb
mov
loope
in
push
push
out
xchg
mov
sbb
xor
push
mov
pop
cs
inc
xchg
dec
push
pop
sub
gs
xchg
xchg
ljmp
xor
lret
repz
clc
pop
sbb
pop
dec
add
push
add
insl
lcall
add
mov
cmp
xchg
cs
push
sbb
sbb
add
js
popa
jno
pop
insl
and
sub
pop
ret
je
cmp
aam
jo
repz
mov
leave
pop
loop
mov
mov
push
push
testl
xor
xor
push
xchg
rcrl
cwtl
and
cs
cli
repnz
ficomps
pop
aas
stc
inc
push
mov
mov
rcrl
mov
scas
jecxz
rorb
xor
scas
aas
and
movsl
in
xor
and
dec
sti
cmpsb
jg
xchg
mov
nop
and
lahf
pop
inc
adc
mov
out
sbb
lea
sub
aam
dec
cmp
jecxz
pop
pop
test
int3
popa
xor
roll
pushf
xchg
outsb
in
les
mov
xchg
cwtl
inc
dec
cmpsb
cli
popa
mov
lcall
lret
daa
int3
notb
fsts
push
jno
push
in
cmpsl
jp
cmc
out
mov
daa
cmpsb
pop
fnsave
push
in
test
mov
ljmp
add
push
lret
adc
inc
and
push
jb
jecxz
fstps
lock
mov
push
shrb
aam
mov
les
mov
addr16
sub
leave
or
inc
imul
jb
xchg
or
repz
test
mov
ret
dec
out
dec
mov
xor
in
adc
jmp
jnp
sub
ja
rcl
dec
enter
and
repz
mov
testl
dec
or
ljmp
test
in
popf
jo
or
rcll
or
fiadds
jle
mov
sbb
xchg
jg
push
lcall
push
mull
sub
mov
push
insb
mov
mov
push
testl
adc
mov
faddl
test
rcrl
push
decb
mov
pop
rcl
inc
and
sbb
nop
es
dec
adc
mov
movsb
push
in
xor
test
ljmp
cli
fbld
cmc
mov
fisttpll
scas
bound
out
fdiv
enter
mov
aam
push
out
xchg
xchg
dec
into
mov
push
test
fmull
popa
stc
loop
jl
adc
loop
pushf
sbb
ffree
push
scas
cmp
xchg
xor
or
cmp
lods
imul
sub
sbb
xor
lret
push
cmp
push
add
or
pop
fidivrl
fists
pusha
sub
test
hlt
es
mov
lock
jp
fucomip
cli
leave
js
mov
jbe
pop
in
arpl
lds
out
push
xchg
loop
cmc
loope
cmc
sar
aaa
xchg
out
imul
mulb
xchg
dec
mov
sbb
fwait
mov
mov
dec
jmp
ss
sahf
rorl
cwtl
cltd
lock
sbb
jae
fs
add
sub
inc
cmc
mov
sub
imul
addl
xchg
call
imul
mov
xchg
pop
inc
xchg
xchg
inc
add
lret
movsb
mov
mov
sub
push
push
pop
sahf
pop
fisttpl
test
sub
faddl
ja
xchg
push
roll
cvtpi2ps
icebp
sub
mov
aas
and
adc
adc
cwtl
ret
cmp
mov
std
xchg
cld
pusha
mov
pushf
dec
or
loopne
scas
shr
push
sbb
mov
fisubs
cmpb
aaa
test
inc
aas
fcompl
test
in
cmp
addb
fcmove
and
mov
fwait
xchg
xorb
out
xchg
test
push
loop
fs
jmp
jae
jecxz
cwtl
push
loopne
cmp
sahf
dec
dec
push
repnz
aas
mov
shll
push
clc
jp
fdivl
mov
push
push
and
mov
add
data16
ret
inc
jnp
inc
lea
mov
insb
sti
jg
pop
sub
xchg
stc
repnz
jo
icebp
sub
outsl
loop
fdivrs
into
xlat
and
or
mov
xor
mov
lret
push
leave
mov
rcrb
sub
inc
sub
dec
fstl
jns
data16
aas
mov
add
dec
imul
imul
add
lret
cmp
mov
ret
or
jnp
movsb
pop
or
sub
xchg
cmp
mov
jle
or
call
xlat
sub
sub
or
pop
cmp
xchg
sub
int3
dec
andb
mov
sub
das
and
in
push
xor
jg
inc
mov
jl
nop
inc
jle
je
sbb
sbb
mov
ja
sbb
sarl
push
and
mov
cmpxchg
out
notb
int
sub
push
pop
loop
int3
pusha
inc
mov
mov
mov
cs
outsb
ds
pop
cmc
adc
dec
aam
xlat
push
jns
int3
sbb
out
pop
mov
xchg
sub
pusha
mov
mov
jle
int3
int
rclb
and
int3
mov
dec
ret
jae
cwtl
or
dec
hlt
lahf
fimuls
cltd
cmp
out
mov
mov
jb
fisubrl
push
dec
jl
sub
cmp
jmp
mov
inc
dec
shll
movsb
xor
pop
push
add
jae
out
mov
cltd
cltd
aas
testb
inc
sbb
adc
mov
xchg
mov
out
dec
hlt
icebp
mov
and
xor
mov
cmpsl
push
xchg
sahf
xchg
dec
push
shlb
mov
lcall
add
push
adc
xchg
mov
xor
sbb
ret
mov
add
loope,pn
dec
mov
dec
mulb
std
push
cmp
arpl
mov
mov
movsl
dec
es
mov
mov
sub
adc
xchg
push
pop
mov
sub
sbb
or
jnp
nop
test
sbb
sbb
in
enter
adc
cltd
enter
outsb
ret
lcall
lcall
pusha
cmpsb
fiaddl
int3
cmp
jbe
push
cmp
or
std
into
mov
aaa
sub
add
sbb
xchg
daa
lcall
out
jae
addr16
fxch
mov
sti
mov
pop
add
imul
mov
cmp
jecxz
and
dec
xchg
push
sub
inc
rcrb
ret
adc
js
shll
pop
jmp
inc
inc
arpl
mull
mov
add
popf
bound
sbb
fisubrl
xor
pop
out
jmp
sub
ret
inc
sahf
data16
mov
sub
or
jb
aaa
mov
xchg
sbb
imul
pushf
in
add
test
sub
cmpsl
sub
iret
adc
mov
pushf
nop
bound
iret
pop
lret
dec
stos
jnp
into
hlt
addb
or
push
iret
mov
in
pop
push
movsl
addb
xor
xor
fldl
push
pop
pushf
xchg
inc
subb
pop
test
test
dec
sbb
repnz
push
inc
rcrl
push
mov
add
fiaddl
push
mov
popa
cmpsb
inc
add
xchg
mov
xor
push
jge
and
enter
cs
mov
push
cwtl
mov
ljmp
pop
add
push
push
iret
dec
test
jecxz
sahf
fmull
jmp
push
mov
dec
push
or
fistpl
test
nop
popl
add
mov
insl
fldln2
or
fadd
cmpsl
popa
loope
repnz
imul
outsb
aad
adc
cmpsb
push
insl
mov
cld
mov
in
call
test
and
jmp
sbb
int3
cli
fwait
jns
ret
xchg
out
inc
and
out
sub
mov
add
stos
cmp
add
rcrb
rolb
adc
pop
out
inc
les
test
push
mov
in
pop
mov
adc
loope
jge
xor
out
aaa
dec
lds
pop
cmovo
test
in
pop
add
aam
fucom
addr16
and
pop
in
mov
fdivr
push
dec
call
jnp
lcall
lret
adc
sub
mov
lret
aad
and
imul
hlt
sarb
incl
pop
push
jg
push
sahf
adc
lea
stc
mov
das
inc
rcll
add
fildl
popf
mov
jp
or
mov
jle
pop
lods
push
shll
pop
inc
in
shll
sti
cwtl
bound
scas
push
lret
aam
out
arpl
and
push
mov
rcl
bound
sub
fdiv
push
xchg
insb
lret
fstpl
or
sub
or
add
int3
cmp
jge
ds
xorl
ret
jae
test
push
cmpl
mov
insb
xlat
push
addr16
fwait
inc
jp
mov
xor
sbb
and
out
cltd
fnstenv
sub
mov
ds
sbb
push
xor
jbe
push
movsb
push
push
enter
cli
mov
jbe
mov
test
jnp
push
mov
add
sti
scas
leave
les
out
push
cmp
fildl
and
mov
mov
ret
inc
mov
lahf
pop
mov
cltd
dec
cld
or
lea
jae
push
lea
adc
xchg
les
add
mov
js
push
fsubrl
sbb
scas
ds
sarl
fmul
jne
cmp
inc
adc
mov
adc
shrl
icebp
and
jbe
cli
xchg
lcall
mov
mov
xchg
dec
imul
cmp
mov
and
mov
pop
mov
imul
lods
out
test
sbb
xor
sub
enter
jno
sub
mov
jge
inc
inc
inc
mov
loopne
mov
jle
jl
mov
orb
pusha
inc
int3
loop
xor
or
inc
test
lea
outsb
iret
xor
xchg
inc
and
mov
push
adc
inc
cmpsl
inc
mov
adc
lea
add
pop
mov
pushf
in
sbb
sub
adc
mov
xor
sbb
out
or
pop
push
cs
mov
sbb
sub
in
xor
bound
fwait
or
je
out
int
mov
sub
scas
fistps
jbe
data16
pop
aad
fs
jo
or
mov
loope
aad
sub
add
aaa
aad
dec
xor
push
push
jge
jno
jne
shlb
fnstcw
add
fadd
into
das
push
sti
inc
sub
insb
fstpt
inc
add
pop
pop
test
mov
push
jno
push
in
mov
or
dec
je
jae
sbb
arpl
in
pop
es
push
push
subl
or
add
mov
ss
sbb
aam
jg
mov
inc
add
hlt
mov
icebp
push
pop
inc
shlb
pop
aas
leave
mov
or
jnp
sub
inc
jmp
lcall
ljmp
and
mov
cmpb
mov
mov
pop
scas
scas
dec
ja
shl
test
adc
enter
fldcw
int
mov
sub
in
push
dec
or
or
outsb
sub
arpl
subb
mov
divb
je
dec
rcrl
pop
mov
mov
jns
push
jb
loop
jbe
inc
repz
loope
aam
addr16
ficoml
sbb
cwtl
inc
and
sahf
fisttpl
leave
and
inc
or
mov
lret
rorb
shll
adc
imul
idivl
mov
sub
sbb
test
test
mov
mov
push
es
cld
icebp
icebp
push
and
in
mov
add
mov
mov
clc
or
mov
adc
notb
in
dec
int
pop
shlb
cli
das
ds
imul
rcll
inc
mov
cli
jp
shlb
mov
sarl
xor
aas
inc
jecxz
repnz
xchg
or
inc
ror
mov
mov
aaa
jno
call
daa
cmpsl
inc
pop
jns
stc
out
adc
iret
push
push
mov
adc
mov
sti
test
iret
sub
fisubrl
xor
popf
sub
dec
addl
stc
cmp
jno
and
add
pushf
dec
fcompl
out
int3
aad
int
push
js,pn
cmp
scas
pop
jp
negb
fisttpl
pop
lock
jns
jns
loope
shlb
mov
mov
mov
cltd
clc
shll
scas
out
or
cli
repz
out
push
ret
mov
mov
mov
stc
or
pushf
lock
ret
lret
in
push
cltd
icebp
xor
test
sub
dec
mov
fimull
adc
adc
xchg
jbe
jns
pusha
call
rorl
cmpsb
jae
cwtl
mov
ret
push
mov
in
in
bound
popa
adc
daa
xchg
mov
sarb
push
imul
inc
adc
stos
cs
inc
adc
sub
cli
sti
leave
mov
dec
popf
fsubl
jb
add
mov
xchg
call
movsb
dec
and
mull
in
filds
ja
jmp
loop
jmp
inc
inc
ljmp
jb
mov
fwait
ja
push
rcr
mov
lods
lock
outsb
sbb
adc
ljmp
gs
popf
stos
jl
in
push
and
jge
lods
adc
ljmp
or
jmp
mov
cmp
inc
mov
mov
push
adc
insl
sub
xor
dec
adc
dec
push
outsb
sbb
and
adc
mov
ret
dec
int3
popa
lret
orl
xchg
jb
pop
hlt
loop
shll
sbb
cltd
mov
fs
lcall
mov
stc
icebp
test
cltd
xor
cmpsl
xchg
jnp
cld
dec
sub
adc
test
push
repz
dec
jle
out
es
inc
jns
mov
add
sbb
pusha
add
iret
jecxz
xchg
into
lret
dec
push
pushf
adc
test
jg
sub
pop
mov
rcll
int3
test
xor
loope
lcall
out
gs
ret
fdiv
outsb
and
sbb
push
jmp
dec
mov
shl
sbb
xor
pop
xchg
pop
xor
mov
sub
lds
pop
push
mov
arpl
cmp
and
outsl
mov
sub
sub
lods
int3
sub
lcall
sub
sub
inc
out
lret
movsl
jae
dec
mov
jns
sub
adc
mov
push
rolb
jmp
out
stc
mov
scas
push
pop
xchg
insb
loope
fwait
out
push
shll
stos
inc
mov
gs
mov
out
add
ror
insl
xchg
fdivr
adc
icebp
sub
mov
pop
loope
xchg
rcrl
filds
mov
test
outsl
add
jb
jns
xor
and
adc
repnz
mov
mov
or
mov
mov
aas
scas
pop
xor
ja
movsb
data16
or
mov
pop
push
sbb
stos
fidivs
mov
out
push
mov
fisubrl
movsl
cmpsb
subb
xor
sbb
scas
or
loope
cmp
push
shlb
sbb
sbb
jle
mov
or
ret
mov
cmovo
cmpsl
in
adc
cmp
ss
push
dec
mov
in
ja
dec
jno
filds
jns
in
inc
xchg
and
cld
cwtl
and
cmp
popa
jb
or
and
clc
lock
dec
mov
mov
jbe
jnp
xchg
xor
add
ret
cmp
into
pushf
or
adc
andb
dec
xchg
lock
inc
in
push
lods
in
or
add
jns
jl
fs
out
repz
enter
inc
jo
int
sbb
dec
jae
int
les
in
mov
in
rcll
push
push
loope
sub
test
sub
add
xchg
ljmp
jne
dec
rorl
pop
ss
pop
in
call
xchg
mov
hlt
add
mov
lods
mov
sbb
movsl
push
sti
cli
mov
aam
mov
or
jp
xor
out
loope
aas
or
and
ja
push
repz
jge
dec
sbb
push
test
add
jmp
int3
xchg
push
xchg
pushf
mov
mov
shll
push
mov
sub
jns
cmc
push
xchg
outsl
sbb
hlt
nop
mov
add
or
outsb
inc
push
xor
pop
fwait
jbe
fsts
sbb
xchg
je
js
dec
lret
mov
out
sbb
dec
stc
ja
shl
sbb
cltd
daa
jl
fsubp
add
or
int
out
mov
xadd
movsl
test
rorl
into
out
rolb
into
loop
sahf
outsb
sbb
rclb
cmp
addr16
mov
outsb
jno
push
or
mov
pop
movsb
cmp
inc
mov
mov
xor
sub
xchg
or
lds
cmp
outsl
bnd
mov
aam
xlat
dec
mov
idivl
jecxz
outsl
jne
pop
clc
lods
sbbl
xorl
andl
fsts
dec
int3
sub
and
cmpsl
test
add
daa
inc
xor
fs
es
out
fneni(8087
push
push
push
pop
pop
mov
sub
sub
jmp
jb
in
sti
in
fisubrl
ss
dec
jl
push
cmp
loopne
ret
bound
clc
fcmovb
add
mov
add
pusha
sub
mov
jmp
xchg
popa
or
mov
xchg
sub
push
fisttps
ljmp
mov
jbe
test
mov
push
xchg
sbb
sbb
scas
sub
scas
xchg
mov
xchg
mov
fsubrs
clc
clc
or
movsb
popl
stc
inc
pop
push
xchg
inc
pusha
add
mov
xor
ljmp
test
sahf
inc
or
shll
xchg
cmp
arpl
and
test
inc
mov
and
sbb
mov
add
inc
test
bound
push
xor
in
push
pop
out
add
sti
rorl
xchg
aaa
movsb
add
fldcw
jo
sbb
call
jae
stos
ja
jmp
jle
repnz
adc
insl
andb
cltd
jnp
mov
pop
sbb
imul
jge
adc
test
mov
bound
inc
pop
aaa
mov
mov
xchg
mov
jg
repz
popa
lea
out
dec
cld
mov
or
aad
add
mov
add
dec
or
jne
jle
adc
lret
xlat
cmp
cs
push
push
loope
inc
and
jb
push
adc
imul
in
mov
mov
idivl
daa
pop
pop
xor
mov
in
jmp
mov
push
cmpsl
push
pop
cld
cmp
xchg
loope
mov
lods
out
lods
adc
mov
adc
mov
push
adc
ljmp
rorb
sahf
push
shlb
jb
stos
cmpl
pushf
shr
cmp
mov
and
in
daa
cmp
xor
inc
jae
add
clc
sarl
imul
or
sbb
push
loopne
popf
ret
push
clc
mov
mov
ss
shrl
icebp
repz
clc
xor
lcall
icebp
out
push
fs
gs
pushf
jl
aam
scas
jae
push
cmc
mov
mov
jb
jg
test
dec
cltd
sahf
in
les
lcall
jecxz
pop
or
jns
ja
jae
jns
std
pop
int
dec
inc
lods
pop
and
or
jmp
or
sbb
mov
jbe
subb
and
push
movsb
cmp
push
push
push
cmp
into
outsl
in
mov
addb
push
inc
push
addb
xchg
xor
decb
push
xor
pop
adc
xchg
out
and
sub
mov
sub
and
scas
or
adc
loope
pop
cmp
unpcklps
mov
mov
sub
dec
int
mov
test
mov
out
dec
pop
xchg
inc
pop
rcrl
js
iret
leave
mov
out
std
out
fisubrl
fildll
sub
pop
faddl
pop
pop
rclb
and
mov
xchg
lret
xorb
push
and
dec
cs
and
mov
ss
mov
cmp
mov
orl
pop
mov
add
push
mov
imul
int3
out
data16
popa
daa
inc
and
pop
sub
js
sti
jbe
fstpl
rolb
lods
jb
xor
fcoms
sub
ja
xchg
gs
test
aas
xor
hlt
and
dec
aad
push
call
xchg
enter
in
aas
push
xor
popf
mov
test
sbb
lods
stc
add
cmp
jl
ljmp
pop
xchg
jl
arpl
lea
nop
lock
sub
lds
xor
cmp
and
test
push
dec
and
call
pop
dec
jae
mov
push
cld
jb
mov
push
or
dec
shl
in
cltd
stc
aam
or
inc
xor
cmp
jmp
mov
mov
subl
enter
xor
xor
fbld
xchg
push
insb
jl
inc
out
cmp
mov
mov
push
movsb
in
or
ficoms
imul
adc
dec
cmpsb
aad
or
xchg
aaa
sahf
lock
lea
cwtl
idivb
sub
or
jp
cmp
insl
mov
mov
or
xlat
pop
mov
jecxz
jmp
jl
dec
enter
pop
xchg
push
push
xchg
lds
pusha
fsubrs
jg
movd
repnz
pop
orl
lds
scas
lcall
xlat
shrl
push
jl
sub
in
inc
sbbl
repz
jp
test
xchg
push
cmpb
shrb
push
inc
sarb
idivb
aad
xor
sbb
inc
cmp
cmpsl
lahf
push
xor
test
or
mov
mov
nop
mov
repz
xchg
int3
repz
dec
jbe
pop
lock
inc
lahf
cmp
xor
push
test
arpl
imul
mov
jbe
out
out
push
mov
xchg
mov
std
jno
loopne
cmpl
icebp
sbb
jg
jb
sbb
ret
mov
test
xor
inc
push
jp
xlat
test
push
loop
cmp
xlat
stos
es
in
mov
decl
aad
xor
or
jle
rcr
push
jl
ficompl
push
and
fwait
ds
lret
icebp
call
pusha
paddb
rcl
insl
ficoml
inc
shl
jle
push
orb
adcl
cmp
leave
pop
jo
sbb
subb
adc
dec
mov
or
push
hlt
cltd
roll
mov
ljmp
push
jg
repz
jle
iret
cld
mov
mulb
hlt
xor
cmp
sub
ds
sub
inc
mov
pop
dec
sub
xchg
add
das
jbe
xor
movsb
sub
fdiv
jl
dec
shlb
cmp
mov
daa
xor
adc
pushf
call
sub
aam
cmc
stos
psubsb
mov
pop
jnp
pop
fbstp
das
pop
dec
push
dec
hlt
push
test
xchg
int3
jg
aaa
aad
clc
add
or
mov
fsubrs
or
pop
or
aam
movsl
repnz
mov
cs
mulb
nop
push
mov
xchg
inc
mov
adc
jle
sub
and
xchg
lcall
mov
fstps
jo
dec
leave
test
cmp
inc
outsb
ja
fistps
and
add
lods
loopne
xchg
dec
sbb
add
xor
jbe
and
pop
lds
mov
fimull
mov
push
mov
mov
adc
das
decl
mov
or
xlat
xor
xchg
sarb
cmp
loope
cmp
popa
inc
xchg
daa
sub
xor
dec
pop
inc
mov
clc
fcmovu
inc
sub
ret
fidivrs
add
and
and
out
mov
in
inc
in
jne
icebp
test
mov
into
jl
imul
mov
dec
push
and
jno
mov
adc
aad
outsl
xor
xor
pop
shrb
jbe
and
mov
push
js
xchg
xor
cmpsl
in
push
cs
fistpll
ljmp
push
lahf
mov
and
cmc
sub
inc
mov
lcall
jns
jae
inc
cmpsb
push
push
mov
and
inc
test
cmp
lock
les
les
cmc
shlb
cli
outsl
sti
cmc
xchg
or
stos
cmpsb
in
insb
dec
mov
xorb
out
pop
pop
out
nop
push
andl
push
fmull
push
push
in
pop
push
loop
and
cwtl
sub
data16
and
loope
gs
sti
cltd
fisttpll
stos
and
and
cmp
push
mov
mov
dec
inc
push
xor
and
add
pop
movsl
mov
inc
pop
imul
scas
mov
jb
cmp
jp
or
jae
in
gs
mov
mov
loop
nop
jo
pop
add
dec
and
iret
mov
mov
lahf
add
dec
test
adcb
lret
xor
push
cltd
fdivrs
vshufpd
lret
cmpsl
pop
imul
aad
mov
lds
adc
mov
mov
arpl
sbb
mov
xor
pop
movsb
lret
sub
xchg
jnp
pop
mov
push
movsl
xchg
inc
xchg
jge
and
stos
cmp
inc
dec
into
adc
outsb
or
add
xchg
xor
push
xchg
jae
mov
fdivl
sub
and
ja
xchg
xchg
ss
and
fidivrl
and
out
mov
nop
aam
inc
push
jb
ror
and
and
push
jno
or
lret
add
sbb
filds
ret
sbb
test
shll
cmp
or
daa
jo,pt
xor
mov
cmp
add
add
cli
fcomps
inc
jo
add
imul
dec
ss
ret
outsl
insb
jge
or
das
stos
cmovb
fwait
ljmp
repz
jle
lock
lock
pop
sahf
arpl
push
lods
imul
js
jg
xchg
stos
mov
pop
mov
shrl
loop
pushf
add
rorl
dec
push
insb
das
sub
es
push
mov
pop
popf
inc
das
mov
int
xchg
std
imul
inc
cld
or
push
xchg
movsl
inc
lds
aam
lods
push
cwtl
dec
inc
xchg
or
mov
inc
testb
aaa
jmp
notb
popa
push
enter
jo
lods
mov
adc
mov
fstpt
mov
dec
add
pop
jb
pop
out
aaa
inc
sub
cmp
pushf
fsubs
inc
popf
jo
mov
push
add
jb
lods
and
clc
sbb
fsubs
inc
jmp
in
jmp
sbb
mov
das
inc
jnp
nop
insb
std
lods
cmpsb
lods
fistpll
or
dec
loope
and
or
sub
cltd
inc
cmp
push
std
sar
test
sbb
and
fstpt
cmpsl
dec
xor
mov
loop
or
stos
cwtl
mov
mov
add
mov
add
call
out
pop
inc
repz
or
cmp
xor
add
push
gs
stos
imul
cld
pop
dec
lock
or
mulb
adc
lahf
adc
scas
push
add
cmp
xchg
push
movsl
mov
push
jb
popf
in
mov
addb
scas
or
adc
mov
xchg
jge
movsb
jp
inc
push
xor
cmp
xchg
mov
mov
sti
push
ja
stos
fisubrl
scas
push
mov
aaa
shll
sbb
or
repnz
mov
sbb
mov
xor
xchg
pop
mov
xchg
mov
in
dec
inc
pop
pop
inc
test
cmp
jp
int
bswap
push
pushf
ret
out
jae
pop
dec
mov
repnz
andl
mov
xor
mov
mov
xchg
es
fwait
es
popa
int3
lahf
add
dec
stos
add
gs
pop
into
sbb
fisttpl
jbe
out
cld
push
pop
and
jne
inc
mov
add
movsl
ds
mov
add
fisubs
cli
notb
jns
inc
push
inc
pop
sarb
lcall
cmp
adc
push
xchg
sub
jg
cmpsb
aas
scas
adc
out
ss
cmp
inc
fistpl
mov
jp
pop
stos
out
push
mov
aad
xor
or
cld
ds
ljmp
in
into
mov
lcall
mov
pusha
xor
pmulhw
sub
jns
adc
cwtl
inc
add
clc
jl
cmovle
xchg
xor
fnsave
mov
addr16
sub
fwait
pusha
mov
shl
pop
dec
mov
imul
sbb
les
pop
cmp
xchg
cmp
divl
pusha
xchg
cmp
nop
or
xor
xchg
pop
shll
ja
rorb
jae
aaa
mov
pusha
loop
and
add
cmp
stc
xchg
xchg
xor
add
in
fucomip
rorl
jae
mov
cmp
and
mov
xchg
and
mov
outsl
cmp
or
in
dec
sti
jb
sbb
xor
add
xchg
sub
fwait
shr
pop
cmpl
sbbb
mov
mov
or
sbb
fisubrl
pushf
or
idivl
cmpb
pop
sub
pop
pop
dec
dec
sub
outsb
mov
mov
and
and
scas
xchg
jge
adc
add
cmp
lods
push
test
pop
call
je
nop
xchg
push
pop
jne
add
mov
add
or
adc
dec
cs
pop
sbb
push
lret
sbb
pop
clc
push
pop
and
repnz
cs
das
jecxz
fbstp
mov
lahf
jmp
stos
push
cli
or
out
les
or
pop
insb
mov
sbb
lods
xor
cli
inc
or
iret
call
out
cmp
mov
je
or
jno
shl
mov
ss
out
hlt
mov
repz
inc
cmp
xchg
pop
adc
imul
cmp
adc
fisubrl
jle
xchg
or
mov
arpl
data16
sbb
lcall
das
nop
push
aam
or
push
fisubs
ficomps
mov
inc
hlt
test
cmp
testl
cs
xchg
adc
xorb
divl
cld
sahf
shrl
inc
mov
sar
push
pop
aad
lret
or
jae
nop
in
call
mov
and
jmp
push
in
add
mov
xchg
aad
xlat
dec
push
add
push
jmp
outsl
add
jnp
inc
xchg
or
jnp
mov
push
cs
sub
add
jle
dec
arpl
dec
mov
mov
int3
daa
pop
cmp
cmpsb
jl
dec
xchg
popfw
pop
test
dec
hlt
jecxz
mov
mov
add
shrb
or
movsb
movsb
addr16
jecxz
insb
and
push
sub
jae
daa
ss
call
push
push
xor
push
adc
test
jmp
loopne
in
imul
push
inc
pop
add
scas
scas
pop
icebp
inc
push
jnp
ljmp
mov
or
shll
jno
decl
dec
movsb
pop
add
inc
movsl
cmpsb
out
inc
pop
cmpb
mov
in
dec
mov
pushf
inc
popa
jge
fidivrs
lahf
dec
in
into
cmpsb
icebp
sarl
push
lods
mov
ret
cwtl
add
inc
mov
pop
lahf
dec
jle
nop
fldt
push
sub
bound
mov
ret
sub
es
fincstp
lods
push
fnsave
jmp
mov
or
jae
dec
insb
imulb
fstl
aam
sarl
dec
jne
and
inc
cmpsl
mov
or
ret
ret
xor
push
pop
jecxz
push
xlat
xor
mov
push
imul
inc
jae
mov
mulb
push
mov
xlat
pop
outsl
sub
or
test
cli
mov
mov
jbe
clc
jne
fninit
outsb
imul
arpl
or
lds
sub
lock
das
fisttpll
ss
sub
and
inc
out
jno
call
out
decl
fnstsw
dec
lcall
pop
add
les
adc
daa
pop
lock
xor
sarl
xchg
rolb
jo
inc
shrb
xchg
sti
mov
add
dec
rclb
push
inc
inc
leave
push
gs
sub
dec
adc
sarb
fistpll
ret
or
push
bnd
scas
outsl
xchg
or
test
std
jge
repz
push
mov
pushl
lds
jmp
sbb
ds
shll
push
push
repnz
mov
sbb
jbe
sti
stos
je
or
fmul
pushf
in
sbb
push
inc
push
js
sbb
add
mov
xlat
sub
pop
and
cltd
ret
movsl
insb
fnstsw
lds
out
test
xor
inc
fistps
pop
aam
stos
xor
or
push
dec
pop
mov
or
jge
pop
pop
push
jae
mov
push
test
das
fs
inc
ds
xchg
fstp
sub
mov
pavgw
inc
out
and
pop
mov
mov
shr
and
dec
jne
test
hlt
lret
imul
pop
insb
push
or
aas
mov
push
xor
or
jo
daa
int
add
nop
sub
mov
imul
movsb
xchg
outsl
aas
mov
aad
pop
add
fstps
mov
bound
push
movsb
shll
push
je
adc
xlat
pop
jmp
rcr
or
add
dec
sub
insb
mov
jg
add
lods
movsb
and
repnz
scas
add
repnz
clc
push
out
ret
ds
lods
jecxz
movsl
js
mov
mov
arpl
loop
jmp
cmp
dec
inc
cwtl
add
rorb
xchg
mov
mov
mov
xchg
ja
call
sbb
fdivl
cmp
in
into
test
aam
fs
sbb
sub
mov
mov
fbld
jne
push
fs
out
out
idivl
fisttpll
clc
lds
imul
sbbl
lods
cmpsb
push
mov
mov
aam
popf
xlat
ret
repz
push
outsl
xlat
movsl
dec
cmp
es
dec
jle
in
push
loop
pop
mov
sub
inc
dec
into
js
mov
adc
sbb
bound
out
lcall
test
roll
push
xchg
nop
das
ret
or
lock
outsl
or
dec
dec
loope
mov
in
fldcw
das
stc
fwait
cli
daa
jp
lock
push
repnz
icebp
inc
sub
jae
fs
pop
pop
pop
cmp
push
jbe
int
mov
xchg
jp
push
jae
cmp
inc
lock
outsb
psubd
cmp
push
add
cmp
pusha
dec
xchg
jae
shrl
test
jbe
enter
jae
mov
sub
dec
aas
das
lods
stc
insl
lea
sbb
sub
cmc
or
or
sub
outsl
jbe
jnp
or
test
mov
jecxz
fsts
mov
cwtl
xlat
push
and
pop
pop
fadd
pop
inc
test
fcoms
adcb
sbb
cmp
inc
sub
sbb
adc
jmp
mov
mov
loop
dec
mov
fistl
mov
cmp
hlt
cmc
jne
push
or
mov
pop
adc
mov
stos
ja
lods
lods
insb
xor
hlt
mov
inc
xchg
cwtl
lods
xchg
fsubrs
gs
add
mov
out
and
in
push
popl
add
cmp
sbb
mov
inc
ficomps
dec
mov
sahf
fst
push
seto
ret
pcmpeqw
test
fnstcw
loop
fdivl
mov
mov
fmuls
fmul
xor
out
xor
ffreep
inc
lods
pop
daa
cs
xchg
cmp
stc
push
pop
out
or
popa
fnsave
jb
xchg
sbb
jns
test
lea
lret
sarb
jle
ffreep
pushf
dec
enter
nop
sarb
dec
mov
fiaddl
mov
mov
xor
into
or
imulb
adc
or
arpl
push
cld
jo
mov
pop
push
mov
pop
jo
mov
mov
dec
or
adc
xchg
test
jl
sub
adc
mov
mov
scas
enter
fmulp
and
and
jecxz
push
and
pop
jbe
cmp
movsl
sub
xchg
push
mov
jecxz
in
lcall
inc
daa
mov
sbb
lret
notl
imul
cmp
icebp
lret
cmp
in
insl
jmp
xor
jp
mov
push
or
inc
loope
mov
push
and
dec
push
push
mov
jecxz
xchg
dec
xchg
out
outsb
mov
add
mov
jmp
inc
pushf
sub
or
inc
cmc
xor
leave
jge
pop
in
push
jno
dec
ds
scas
xor
xor
or
or
mov
mov
fnstenv
in
loop
inc
in
sub
sub
mov
movsb
or
cltd
aas
lret
adc
aam
mov
pop
dec
cmp
arpl
imul
sub
xor
bnd
leave
jne
or
std
aad
cmp
and
push
sbb
stc
xchg
mov
imul
dec
rol
push
outsl
pusha
or
dec
cmp
stos
sbbb
lods
xor
ret
inc
je
or
sbb
mov
insb
imul
andl
std
insb
test
fisubs
inc
fldl2t
jne
mov
cmp
out
mov
jae
aas
xchg
pushf
cli
fisttpl
push
pop
outsl
push
adc
shll
outsl
cmp
fisubl
pop
push
sahf
or
xor
cmp
cmpsb
or
js
xchg
lds
pop
dec
es
repz
xchg
and
jnp
mov
fcmovu
mov
jecxz
insb
mov
pop
inc
xchg
leave
xchg
data16
push
sbb
push
adc
mov
nop
mov
push
fdiv
clc
xor
and
scas
xor
jbe
mov
std
xchg
lds
push
xorl
jb
mov
fsts
sbb
jge
test
cltd
mov
fldenv
push
push
pop
xrstor
sbb
movsl
or
outsb
sbb
ficompl
pop
jmp
add
bound
and
jp
dec
jge
xchg
dec
call
enter
inc
jl
push
into
dec
mov
adc
cmp
inc
shll
cli
dec
and
and
mov
imul
js
inc
push
jae
xchg
movsb
sbb
xchg
lret
into
pop
leave
mov
and
adc
loopw
xchg
mov
add
inc
jo
test
rolb
jl
and
sub
incb
push
aad
lds
inc
jb
adcb
sub
mov
daa
pop
shll
dec
imul
sahf
adc
jnp
cmp
cmp
in
fiaddl
sub
pop
pop
shl
add
shll
je
cmp
int3
mov
insl
lcall
arpl
push
adc
loop
call
fidivrl
movsb
in
ja
adc
lcall
pop
and
jbe
mov
push
mov
mov
mov
test
out
andl
sbb
call
mov
aaa
jns
cli
cli
andb
push
dec
bound
or
push
and
pop
fmuls
xchg
lret
adc
jecxz
shrl
cmp
inc
inc
add
mov
push
xlat
aam
cli
xlat
sub
std
test
inc
test
sbb
call
popf
pop
dec
pop
loopne
fsubs
test
xor
test
xor
mov
aaa
add
int3
dec
sahf
inc
arpl
jl
rcrl
inc
dec
pop
std
loop
shll
lret
pop
push
push
mov
lahf
dec
out
sbb
dec
push
jecxz
push
adc
cwtl
xor
jg
inc
jmp
sahf
inc
push
call
shrl
inc
sbb
push
mov
or
rcll
cltd
push
data16
and
orb
arpl
clc
mov
data16
inc
pop
jg
sbb
adc
cmp
ret
sub
mov
sbb
test
addl
movsb
lret
or
and
push
data16
push
dec
sub
adc
cmp
or
adc
mov
fiadds
adc
mov
in
ljmp
mov
adc
inc
dec
out
icebp
jg
aad
push
add
test
jp
jmp
push
sbb
push
add
sbb
or
push
test
aaa
mov
mov
xor
dec
jecxz
lahf
pushf
inc
testb
mov
push
jno
roll
add
jno
ljmp
mov
add
and
ret
dec
dec
cs
mov
lea
mov
jb
outsb
sub
and
mov
test
sbb
into
ljmp
inc
sbb
sbb
sub
cmp
divb
pop
jmp
and
mov
mov
mov
xchg
test
mov
inc
inc
stos
mov
insl
cmpxchg
int
pop
pop
pop
imul
adc
out
mov
push
push
cmpsl
mov
mov
cs
fmuls
cmc
mov
and
mov
inc
sub
mov
daa
in
add
mov
nop
imul
mov
mov
repnz
ffreep
aam
cwtl
pop
fcmovbe
mov
subl
jae
inc
push
lock
leave
dec
jecxz
imul
ss
je
test
stos
pusha
sub
aaa
pop
arpl
sub
iret
into
sbb
leave
dec
dec
xchg
fwait
or
in
pushl
mov
push
call
pushf
xchg
and
add
movl
push
inc
pop
aaa
dec
lock
adc
xor
dec
xor
jge
inc
push
outsl
lret
shlb
sub
fs
mov
stos
loope
dec
add
icebp
sub
in
jae
ss
jmp
in
xor
cs
pop
inc
jl
xor
jl
dec
xchg
mov
imul
scas
add
int
inc
mov
sbb
push
inc
orl
cld
pop
add
enter
lods
enter
mov
imul
dec
arpl
sar
push
mov
mov
cmpsb
add
test
icebp
insb
sbb
mov
and
sbbb
jb
out
or
xchg
scas
inc
imul
test
jns
jmp
xchg
cmp
push
cli
lcall
pop
hlt
jne
pop
jne
fdiv
js
notb
in
imul
jae
xchg
sbb
mov
sbb
pop
mul
call
push
scas
je
push
aad
mull
or
cmp
fbld
movsl
cmc
jecxz
mov
jno
idivl
je
jb
adc
dec
lods
pop
adc
sub
movsl
jnp
fiadds
xor
cmp
enter
loop
mov
push
mov
ja
arpl
or
in
mov
ljmp
insb
adc
int
movsl
or
add
in
xor
pop
xchg
mov
mov
es
push
add
xchg
add
sbb
pop
pop
inc
mov
cmp
fadd
movsb
add
psubb
add
pop
push
xor
out
clc
adc
cld
mov
jnp
dec
push
movsl
fstpt
icebp
mov
sbb
or
sbbb
inc
pop
fmull
xchg
adc
fstpl
sbb
push
inc
les
xorl
inc
loopne
fsubrp
sub
nop
lods
dec
xchg
mov
das
lods
enter
fstpl
and
in
popa
ja
push
adc
in
add
insb
mov
push
xor
xchg
fdivr
nop
repz
sub
and
sbb
cmc
or
dec
mov
lods
into
or
lods
sti
sarl
cmpl
sub
mov
xchg
mov
jl
pop
ljmp
xchg
sbb
bound
dec
cmp
stos
jge
pop
fistl
mov
pop
pushf
dec
dec
add
aas
lret
mov
lcall
jnp
daa
add
pop
cmc
ficoml
and
subl
insl
dec
je
jp
ljmp
jo
and
out
mov
repnz
cmp
mov
mov
dec
in
loop
sub
sbb
mov
lcall
mov
out
stos
pusha
mov
pop
inc
cli
cld
xchg
fidivrs
and
outsl
scas
mov
nop
leave
push
jge
fildl
idiv
adc
lret
sbb
insb
mov
dec
daa
mov
or
xor
es
insb
mov
scas
mov
add
mov
mov
lret
adc
or
aam
je
lea
and
mov
mov
add
xor
and
jp
out
cmpsb
dec
or
xchg
in
sub
jb
cld
xchg
out
mov
sub
and
inc
rolb
sbb
adc
mov
inc
mov
fucomip
mov
mov
mov
or
xlat
rclb
or
pushf
push
push
bound
int3
pop
shll
add
or
sub
mov
lret
repnz
pop
insl
hlt
push
lods
aas
sbb
mov
pop
mov
in
arpl
dec
das
leave
jmp
sub
in
enter
nop
out
or
lock
adc
jb
jo
add
xchg
test
lcall
ljmp
inc
dec
test
add
mov
mov
repnz
je
lahf
rep
dec
push
cltd
fdivr
xor
lods
xchg
cmp
ljmp
andb
cmp
xor
mov
adc
pop
push
lahf
mov
stc
mov
scas
mov
pop
adc
adc
push
add
xor
cmp
mov
xor
sarb
negl
xchg
pop
inc
fisubl
icebp
sub
cmp
mov
mov
mov
cmp
lods
cmp
xor
js
xchg
addl
mov
mov
aad
pop
or
ss
xchg
mov
sbb
aad
mov
dec
into
and
jb
gs
pop
pop
not
and
push
loop
ljmp
jge
and
ficoms
mov
xrelease
mov
mov
les
loope
cmc
jg
movsb
into
mov
mov
add
dec
fidivrl
aas
fisttps
lock
aaa
xchg
cmpsb
leave
pop
test
xchg
xor
imul
movsl
rorl
or
rcll
into
in
pop
ret
jo
in
add
pushf
ljmp
psubusb
lock
ljmp
sbb
bound
add
xchg
outsl
ja
mov
pop
pop
mov
in
mov
sbb
es
shll
iret
leave
inc
lods
dec
aad
jge
sbb
sub
scas
push
cmp
daa
push
add
push
xor
les
lock
fs
add
leave
lds
pop
sbb
push
inc
ret
cmp
fs
lods
stc
getsec
loop,pt
subl
push
sbb
inc
xor
push
sbb
icebp
jmp
jle
push
test
call
sub
pusha
jbe
xchg
mov
fs
test
das
push
aaa
fstpt
cmp
xor
cmp
cmp
lret
jnp
adcl
lcall
fisubl
inc
xchg
rcll
mov
hlt
inc
outsl
add
dec
inc
loope
mov
xor
push
mov
mov
mov
int
mov
out
or
frstor
xchg
mov
mov
mov
lea
ljmp
xor
cmp
xor
mov
cmp
lds
sti
sbb
cmp
mov
add
pop
insb
mov
jne
out
pop
cmpsl
and
pop
std
les
stos
shl
xchg
jo
jle
pushf
dec
insb
fists
ds
pop
sahf
xchg
jnp
lahf
fidivrl
cmpsl
fisttpll
outsl
test
outsl
pop
xchg
mov
es
mov
in
adc
or
xchg
stos
push
scas
sub
shll
fwait
xchg
push
push
fldenv
sbb
mov
aam
pop
xor
dec
out
in
cmp
les
lcall
and
pop
adc
stos
mov
xchg
call
mov
push
scas
jnp
insb
leave
jmp
test
inc
cmp
mov
xchg
movsb
subb
in
mov
mov
jb
sbb
sub
inc
mov
pop
pop
fwait
clc
fcomp
and
and
stos
scas
inc
cltd
mov
xchg
ret
lea
push
push
or
push
xor
jns
sahf
xor
leave
sbb
or
jbe
inc
test
test
in
aam
pusha
sahf
repnz
out
jnp
cmp
push
cmpsb
in
mov
unpckhps
ficomps
mov
cmpl
cli
cltd
push
add
mov
sub
cmp
lds
mov
loope
cltd
std
mov
adc
mov
sbb
adc
adc
or
inc
ljmp
add
xchg
dec
lahf
insl
or
iret
cmp
lea
adc
fsubr
push
into
and
notb
cmp
mov
mov
ja
lret
xchg
sbb
adc
int3
ljmp
mov
sbb
shll
incl
add
cwtl
repnz
dec
mov
int3
lret
iret
sub
pop
push
jl
leave
add
push
in
mov
jne
add
sub
xchg
icebp
jmp
inc
sub
out
pop
les
fbld
adc
mov
adc
sbb
mov
icebp
inc
lods
mov
data16
jmp
fidivrs
jle
pop
pop
nop
outsb
enter
jl
pop
out
sbb
sbb
test
add
cltd
data16
aaa
jnp
jmp
cwtl
aaa
adcl
insb
stc
leave
cmp
xchg
mov
fs
call
out
sbb
fisttps
mov
or
or
xchg
add
repz
push
scas
ljmp
pop
xor
lds
js
ret
lret
adc
inc
jb
pop
push
cmp
test
and
data16
and
ds
fmull
lea
xchg
and
jnp
cvtpi2ps
xchg
sub
pop
and
insl
insb
cmp
dec
sub
jecxz
movb
xchg
lods
pop
js
ficoml
loopne
mov
lahf
repz
ljmp
inc
inc
jg
stos
xchg
jb
inc
mov
jnp
sub
rcl
dec
jnp
add
sbb
push
push
mov
xchg
and
mov
rolb
xchg
inc
push
out
fisubs
push
insb
push
mov
or
in
nop
mov
andb
xor
shll
inc
lret
js
sub
aad
xor
inc
adc
lds
jnp
scas
cltd
cmpsb
es
mov
sub
inc
aas
dec
ds
pop
sahf
or
jl
cmp
and
sbb
aam
jl
dec
xchg
lret
xchg
sub
adc
push
movsw
fwait
pop
insb
mov
push
xchg
aam
adc
mov
mov
add
add
add
fcoms
in
ds
jg
ja
push
pop
lcall
out
orb
jl
dec
stos
dec
in
push
jl
add
push
aas
inc
scas
mov
jle
mov
xchg
dec
sbb
mov
mov
mov
lret
inc
cwtl
push
xchg
out
or
pop
xor
rcrb
jle
push
mov
loop
pop
dec
sbb
das
cs
fistps
xor
ljmp
in
les
aad
outsb
cli
push
adc
cltd
lcall
pop
movsl
lret
xlat
jl
hlt
std
loope
inc
adc
sbb
cmp
lret
xchg
cmp
rcl
notb
addr16
mov
sub
lcall
adc
addr16
add
push
in
js
pop
ljmp
test
jns
lret
add
pop
cmc
jecxz
xor
sub
cmp
mov
rclb
sub
notb
pop
xchg
rcl
and
push
dec
dec
push
inc
gs
sbb
mov
cmp
fadd
lock
repz
fsubs
ret
addr16
mov
fld
aam
lea
outsl
lret
mov
mov
jge
js
ret
movb
push
stos
outsl
mov
dec
data16
mov
popa
sub
dec
aas
or
sarl
iret
adc
fwait
push
into
xchg
insb
add
pusha
test
sub
mov
iret
ret
enter
mov
in
lods
popf
fidivrl
cmp
lahf
push
xlat
ret
aas
xchg
lock
mov
ljmp
sbb
push
inc
aad
mov
rcl
inc
test
xor
jne
push
push
mov
adc
xchg
mov
jns
cli
xchg
add
sub
cli
loope
xchg
js
aas
repnz
aam
clc
test
mov
add
mov
jecxz
popa
fidivs
cmp
mov
gs
xor
mov
or
movsb
cmp
cli
xchg
inc
push
aas
leave
loopne
jb
fsubs
repz
scas
pop
dec
addr16
jne
movsb
clc
push
lods
into
mov
sahf
sarl
cmpsb
pop
stos
movsl
cmp
in
ss
testb
out
jg
cwtl
repnz
ds
mov
pop
xchg
xchg
inc
pop
jo
cwtl
jge
or
loop
ds
das
sar
push
lcall
loop
into
mov
jno
jge
cld
jp
in
mov
jle
rolb
sub
inc
xchg
mov
int
sub
push
or
sub
cmc
xor
jg
adc
xchg
push
pop
imul
mov
pushf
arpl
subb
fildl
and
insl
xchg
es
out
sbb
or
stos
int
lods
loop
and
and
jae
sbb
and
rcr
mov
loop
jns
cmpsb
jb
mov
mov
mov
je
cltd
insb
enter
inc
jg
pop
or
and
mov
out
adc
add
dec
mov
incb
test
xchg
xor
js
push
repnz
cmp
in
leave
jge
sarl
push
mov
xor
adcb
out
testb
mov
test
cmp
jae
test
cmp
mov
enter
xchg
cmp
out
and
stc
fs
jo
lret
imul
or
cltd
lock
jbe
add
mov
dec
lods
fs
pusha
jmp
mov
cwtl
cld
jne
rcll
xchg
inc
inc
cwtl
orb
cmp
lret
jb
icebp
jbe
mov
shll
push
and
daa
or
daa
out
or
xor
mov
push
aad
dec
enter
andps
jbe
leave
jb
ret
dec
in
int3
fcoms
rcr
rcrb
testb
sub
idiv
dec
pop
push
dec
xchg
outsb
test
pop
inc
into
leave
push
ret
out
pop
pop
cwtl
clc
nop
xchg
mov
ljmp
or
cld
xchg
mov
clc
adc
cmp
and
fsubrs
sarl
jmp
pop
mov
sahf
xor
pop
cld
cli
test
js
icebp
test
jg
inc
and
mov
lods
pop
stos
mov
in
cmp
fildl
stc
jns
dec
jne
add
lods
fucomp
pop
lea
mov
pop
int
lretw
cs
mov
mov
inc
sub
pop
test
push
mov
insl
add
xorl
xor
test
xor
dec
jmp
dec
and
mov
ss
jmp
stc
xor
xchg
into
push
inc
mov
imul
mulb
es
jbe
repnz
inc
repz
xchg
loop
shll
push
cli
lock
jne
adc
push
stos
fcmovnb
ja
push
les
dec
cmp
shlb
arpl
cmpsb
inc
xor
add
jp
test
ds
push
mov
loopne
xchg
xor
adc
xor
in
push
adcb
lods
jnp
adc
mov
sbb
jge
sbb
gs
inc
cmc
mov
or
inc
cmc
shll
sub
lock
jl
divl
popf
mov
test
andl
pop
adc
sub
and
xchg
sub
pop
jmp
scas
test
cltd
sbb
mov
inc
cmp
mov
dec
xchg
ja
inc
mov
adc
or
add
iret
jo
test
test
cmp
mov
arpl
adc
aad
popa
sbb
add
sahf
enter
repnz
mov
mov
jne
jmp
movsb
adc
repz
enter
imul
enter
flds
sbb
dec
push
mov
ljmp
xor
pop
bswap
sub
negb
popf
bound
leave
ss
sbb
pop
pop
ret
hlt
hlt
lret
test
pop
cmp
fwait
sub
sub
test
mov
nop
pmulhuw
xchg
mov
cmp
stos
call
push
sti
xorb
rclb
push
lock
inc
jp
inc
test
push
clc
and
outsb
push
shll
xor
or
mov
ret
rcll
dec
les
adc
push
stc
add
dec
and
lahf
mov
xor
dec
mov
inc
pop
xorb
and
sti
adcl
adcl
pop
jo
sub
push
out
jno
in
push
mov
out
xor
cld
shll
sbb
dec
pop
xor
shll
add
hlt
shll
aam
push
push
lods
rclb
xchg
or
inc
aaa
test
movsb
lods
adc
jp
pop
addr16
push
loop
ret
fsubrl
add
mov
adc
cs
imul
mov
xchg
mov
cmp
iret
aad
cmp
add
in
mov
nop
fsubrl
ljmp
test
jg
mov
mov
xchg
pop
cmp
stos
mov
testl
ja
pop
cmpsl
mov
or
pushf
ret
push
pop
mov
sbb
or
lret
arpl
sahf
mov
adc
mov
inc
mov
jae
arpl
xor
mov
addr16
daa
aaa
cld
test
lods
inc
push
test
sbb
std
int3
imul
in
movsb
enter
aam
cmp
out
mov
lock
mov
jno
dec
fucomp
shll
jecxz
into
mov
gs
sbb
cwtl
mov
into
addr16
out
fs
dec
cmp
aad
dec
add
mov
cmp
jo
dec
jg
push
cmp
cmp
cwtl
cmp
loop
xchg
divb
adc
dec
das
mov
pop
mov
or
test
data16
arpl
dec
mov
xchg
cmpsb
jnp
or
test
xlat
sbb
bswap
sar
or
out
xchg
mov
jae
add
inc
and
stos
or
std
outsl
cld
mov
clc
push
lret
pop
mov
push
in
insl
cmp
fldl
sub
sub
call
gs
int
daa
add
fs
adc
sbb
into
xor
insl
push
sbb
scas
mov
cmp
mov
aam
inc
or
cmp
jecxz
pushf
dec
mov
inc
xchg
fsubrl
fnstcw
xlat
ja
ljmp
gs
cli
lods
mov
jnp
mov
fstpl
dec
testl
ljmp
mov
mov
in
xchg
mov
pop
xchg
mov
das
jne
sub
movsl
lahf
mov
push
leave
out
xor
or
data16
aaa
pop
push
xchg
jle
shll
inc
in
fs
dec
sub
movsb
cltd
loopne
iret
add
aam
cld
stc
insb
pop
aam
adc
and
sub
les
pmaxsw
jne
mov
mov
imul
outsl
repz
loope
xchg
cmp
inc
adc
push
pop
lods
xor
push
into
mull
jge
mov
dec
dec
insl
std
push
lahf
fs
add
cmp
fst
fcmovb
jnp
fdivl
mov
ja
add
xor
add
punpckhwd
out
jg
or
push
rcll
ret
xchg
cmc
lock
xor
fnsave
sbb
ds
push
xor
fisubl
pushf
lods
cmp
push
fbstp
mov
rolb
sti
mov
cmp
jb
fdivl
test
jno
xchg
lret
sbb
pop
mov
or
sbb
mov
xchg
jo
addr16
ds
sub
jl
jle
mov
pushf
sbb
sti
adc
inc
or
mov
lret
sub
jns
and
push
js
cltd
inc
mov
push
dec
aaa
push
mov
adc
pop
adc
fwait
mov
nop
loopne
cmpb
ss
les
subb
cmp
push
sbb
mov
xchg
mov
lods
mov
mov
mov
pusha
stos
rorb
inc
mov
sbb
enter
dec
aaa
jnp
and
or
fs
mov
mov
int
xchg
or
lahf
pop
rorl
call
sub
xor
mov
loopne
push
out
mov
jnp
sub
jno
fidivl
dec
ja
lahf
xchg
enter
dec
test
jg
jo
cmpb
xlat
cmpsl
sahf
sbb
mov
lods
sbb
push
xchg
popa
ror
xchg
mov
mov
es
mov
mov
push
jmp
add
inc
repnz
daa
jbe
sub
dec
cmpsb
fmul
imul
inc
jp
add
mov
xchg
cltd
pop
cmp
or
daa
and
fwait
push
cmp
lret
dec
pop
add
fldl
std
pusha
xor
outsb
sbb
int3
dec
and
jb
lcall
repz
aaa
add
sbb
rcrb
mov
cwtl
and
icebp
in
sbbb
xchg
lahf
call
nop
cmc
fcoml
pop
pop
jne
add
and
dec
movb
xlat
in
int3
push
push
inc
mov
lods
dec
rol
mov
mov
xor
stos
ret
js
pop
int
scas
inc
pop
out
scas
xchg
imul
mov
push
aam
stc
scas
lods
mov
cmp
ljmp
adc
popf
sbbb
jo
mov
xchg
testb
mov
inc
pop
test
sub
cltd
movsb
xchg
cs
push
popf
or
pop
inc
aaa
sbb
popf
test
sub
incb
outsl
push
imul
lea
jb
scas
cmpsb
jl
xor
add
fucom
je
push
int3
ds
dec
loopne
insb
inc
inc
mov
mov
rolb
repnz
into
sub
cmp
lret
dec
addr16
pushf
pop
or
shll
mov
mov
add
mov
pushf
cs
xor
dec
loop
inc
fs
outsb
mov
xor
fdivs
arpl
ret
xchg
and
xor
cmp
jno
xchg
divb
and
mov
adc
hlt
or
stos
xchg
mov
adc
rorb
leave
jle
push
xchg
cmc
out
push
int3
sbb
sahf
imul
push
nop
daa
pop
enter
fsubrs
or
repnz
loop
subl
pop
cli
fsub
aad
mov
and
test
xchg
sub
cmpsl
pushf
jg
mov
push
stos
or
jmp
mov
xor
stos
std
dec
mov
or
loopne
inc
and
imulb
shl
gs
lods
inc
inc
add
sbb
add
push
xchg
xor
cmp
int3
push
mov
mov
shl
ret
aas
inc
push
add
fadds
arpl
mov
mov
pop
scas
popf
push
xlat
or
mov
out
fsubp
adc
xchg
pop
mov
mov
ret
jecxz
push
inc
out
pop
xor
daa
push
shl
scas
popa
sahf
sbb
add
pop
inc
stos
push
bound
cld
test
pop
push
loopne
push
adc
loopne
mov
int3
fwait
mov
cmpsl
mov
push
ds
mov
int3
add
bound
pop
cmpsl
ret
inc
pop
lret
outsl
or
mov
add
ja
xchg
out
xchg
imul
ss
stos
inc
mov
dec
cmp
pop
add
dec
inc
fs
jg
adc
mov
jbe
cmp
inc
repz
nop
xchg
cld
sti
or
jo
imul
lea
in
pop
sub
outsb
cmc
push
xchg
mov
push
js
out
gs
push
sti
rep
insb
imul
cld
adc
movsl
xchg
sbb
fiaddl
or
arpl
pop
fidivs
mov
push
stos
es
sbb
sub
jle
mov
sub
and
pop
jmp
in
sbb
in
iret
push
das
xlat
or
xor
icebp
repnz
sbb
ret
out
sub
out
addb
std
cltd
lea
or
adc
add
push
fdivrp
fidivs
lods
dec
stc
int3
push
popa
sub
jae
push
dec
mov
inc
fisttpl
pop
loop
jno
out
sub
inc
rorb
cmc
cmp
imul
daa
add
insb
sub
into
ds
faddl
inc
xor
jae
push
pop
mov
test
inc
or
mov
xorl
aam
lret
xor
push
xchg
mov
mov
outsl
pushf
push
ss
scas
lahf
xor
sbb
adc
add
dec
shrb
imul
pop
jle
jg
push
xchg
paddsw
sub
inc
nop
jb
mov
int3
dec
xor
mov
xchg
jge
sub
push
push
fisubs
arpl
push
pop
or
shll
or
fld1
mov
mov
adc
sbb
ffreep
lcall
xor
mov
cmc
cmp
and
sub
data16
stc
sahf
stos
adc
scas
or
xchg
insl
fxch
adc
jl
jg
mov
out
lcall
out
push
sbb
cli
iret
stc
stc
push
sarb
lret
pop
int3
pop
pop
xchg
ret
push
mov
cmp
sbb
fninit
shll
push
and
shll
rolb
into
mov
jnp
cmp
push
jne
lea
mov
ret
stos
and
add
aas
mov
cmp
fdivl
mov
push
mov
sti
sub
adc
mov
jno
into
cmp
xchg
and
mov
ret
stc
fimuls
add
cmc
call
das
add
loop
aaa
in
inc
jns
sahf
leave
fldln2
lods
cmp
mov
sbb
out
cmp
movsl
mov
inc
sbb
xor
pop
daa
dec
mov
sub
fwait
pop
ss
lds
outsb
xchg
es
loop
ss
jl
jle
add
xor
sub
xchg
adc
out
lret
cmp
sub
call
xor
mov
pop
sub
pop
cs
fcompp
sub
or
movsb
xor
or
push
add
test
mov
sarl
fs
fimull
mov
xorl
fsubrp
leave
stc
sub
adc
lret
jl
sbb
adc
mov
mov
pop
rol
push
pop
adc
fs
scas
int
and
enter
test
test
or
push
aam
in
stc
mov
xor
xchg
in
jb
xchg
mov
xor
in
jne
adc
outsl
testb
jecxz
in
jg
or
pusha
jp
dec
leave
mov
int
add
stos
cli
mov
lods
outsb
aaa
daa
popa
testl
push
sbb
loopne
xchg
ja
outsb
mov
bound
sti
sub
xchg
sub
cltd
imul
jecxz
int3
xor
jae
je
imul
cli
data16
es
add
icebp
pusha
adc
nop
and
lret
push
call
clc
call
adc
mov
fidivl
xchg
and
push
ficoms
mov
lods
jp
push
andl
jmp
orb
add
pop
fidivl
enter
xchg
ficoml
sub
movswl
aas
push
xchg
mov
je
stos
push
xchg
mov
and
jbe
inc
mov
dec
mov
aad
pop
lods
pushl
fsubs
popf
lds
repnz
jno
jns
daa
lock
push
cwtl
push
xchg
stos
dec
xor
lahf
out
cmp
outsb
dec
inc
jp
xor
leave
adc
jle
stos
dec
sbb
call
je
ret
adcb
test
ret
iret
pop
call
jge
cmpsl
cmp
mov
out
loop
sub
lcall
adc
outsb
ss
shrb
fmuls
sub
inc
adc
test
jno
jp
xchg
and
hlt
dec
subb
xor
movl
inc
mov
repz
in
cmp
sub
jno
call
jmp
add
insb
fwait
sub
je
in
aad
mov
inc
test
xor
fisubrs
ret
mulb
inc
sbb
xor
and
sbbl
daa
or
mov
cmp
xor
dec
in
sbb
scas
sarb
pop
cs
sbb
jo
fdecstp
stos
jns
scas
shr
xor
add
push
or
lret
sub
fiadds
jp
push
pop
fidivrl
jne,pn
imul
xor
push
jmp
push
sub
leave
shrl
cmp
mov
icebp
add
sub
repz
sbb
and
xchg
cltd
fnstcw
cmpl
rclb
ficoml
mov
sub
lea
shr
test
sub
push
and
into
xor
in
and
popf
mov
std
mov
jl
clc
jl
fstps
lret
orl
push
aad
rorb
sub
add
scas
pop
dec
lods
sti
push
ret
pop
lds
jne
gs
inc
movl
hlt
les
mov
xchg
fwait
mov
mov
jg
shll
mov
movsb
inc
cmp
sub
dec
icebp
lds
mov
dec
arpl
and
lret
jp
outsl
lret
pushf
mov
daa
sbb
ja
xchg
rolb
dec
rorb
movsl
outsl
aam
cmpsb
scas
stos
in
xchg
sub
es
movsb
mov
pop
int3
jmp
es
repz
dec
js
gs
push
aam
mov
repnz
movsl
pop
add
pop
shlb
adc
int3
pop
idiv
loop
and
inc
pop
ret
or
lock
insl
xor
jmp
pop
inc
lock
shrb
dec
jo
adc
movsw
xor
push
adc
repz
scas
or
mov
sbb
pop
mov
dec
dec
mov
das
xchg
daa
mov
sti
mov
xchg
xchg
dec
adc
xor
cli
fsubl
ror
and
mov
sub
imul
mov
sub
jnp
jp
into
pop
getsec
xlat
sti
leave
cmp
xlat
add
jp
das
adc
aas
sbb
lret
jnp
mov
sbb
out
insl
ja
pop
add
movsb
lea
lods
imul
cmp
jb
subl
fwait
insl
ss
fdiv
es
mov
xchg
pop
dec
sub
mov
push
mov
iret
imul
mov
shll
jnp
fcoms
sbb
enter
leave
in
cmp
into
dec
ljmp
jmp
je
cmp
mov
test
not
lods
mov
inc
cmp
jg
and
insb
sub
ret
je
or
push
inc
subl
scas
js
mov
mov
daa
pop
adc
ret
test
jg
xchg
test
jmp
or
sbbl
sbb
icebp
imulb
divl
clc
cmp
adc
cmp
xchg
cmp
jle
movsl
insl
xchg
mov
xchg
push
push
inc
es
in
xor
addr16
in
sub
cs
movsb
adc
jp
fwait
loope
hlt
repnz
fs
pop
jp
loop
addb
dec
outsb
xchg
cmp
loopne
push
sub
push
inc
xchg
imul
dec
shrb
cs
pop
dec
sbb
push
in
ret
das
call
and
xor
int
ja
xor
clc
push
sbb
insl
inc
jb
divb
cli
inc
lcall
push
mov
or
in
or
sti
add
lret
ss
xor
loope
fisubrs
lcall
dec
mov
outsl
in
pop
jmp
into
aas
pop
rcr
jne
std
dec
rorl
cli
cld
cmp
arpl
movsb
adc
nop
inc
or
clc
addr16
mov
xor
xor
daa
push
jbe
cmp
mov
das
lods
in
add
fwait
mov
mov
dec
xchg
lock
movsl
mov
xor
clc
aas
ds
add
ret
cltd
enter
inc
add
out
rolb
andl
jl
inc
push
jg
dec
mov
arpl
inc
repz
sbbb
pop
inc
jmp
jnp
pusha
loopne
pushf
pop
iret
pop
jne
test
and
xlat
sub
mov
lret
insl
inc
fimull
push
fucomip
push
out
jge
push
sub
pop
push
lret
jle
inc
pop
sub
mov
shlb
mov
mov
lods
pushf
sub
or
sbb
add
test
rcll
xlat
arpl
cmp
imul
movsl
rcll
call
rcl
sub
dec
test
gs
and
push
aas
shrb
jecxz
jnp
xlat
pushf
cmp
nop
pop
pop
into
sub
jge
subb
cmp
pusha
dec
out
push
loopne
jg
mov
mov
push
in
in
fistpll
js
jbe
sahf
icebp
jl
sbb
push
dec
push
mov
fadd
repnz
daa
subb
pop
add
jecxz
mov
xchg
xor
loop
fcomps
cmp
test
xlat
js
imul
jno
pop
adcb
add
jp
push
push
push
add
xchg
jp
fnstenv
adc
jle
mov
dec
cmc
mov
pop
sbb
cwtl
cmp
lds
sbb
lods
add
xor
pushf
xchg
mov
test
mov
adc
push
ss
movsl
push
cltd
mov
push
jno
stos
insl
loope
and
popa
xchg
movsl
cltd
lods
pop
sti
jge
fs
sub
scas
sbb
fs
sar
enter
inc
and
loop
mov
xchg
mov
xor
lock
sarb
outsl
mov
lret
mov
rorb
aaa
mov
push
xor
in
dec
ret
fidivrs
add
pop
pop
pop
push
movsl
fdivp
mov
mov
or
adc
pop
cmp
and
dec
clc
out
stc
adc
mov
test
enter
or
imul
sub
enter
sub
out
clc
test
xor
ret
out
lods
les
xchg
test
jge
repnz
in
inc
or
jmp
and
bound
outsl
sarl
mov
adc
xor
insl
pop
fmul
xchg
pop
inc
outsl
pop
in
rcll
adc
icebp
cld
sahf
xchg
cs
xor
or
out
cmp
jbe
mov
sub
movsl
push
iret
cs
inc
sahf
test
push
lcall
xchg
int3
pop
sarb
clc
sub
das
lret
imul
int3
ja
orb
sub
cmc
lret
mov
jns
cwtl
movl
and
and
in
xor
jge
add
sub
and
jo
out
cmp
movsl
lea
and
xor
mov
inc
scas
mov
cmp
pop
dec
test
xchg
loopne
pop
push
das
lock
out
or
fs
push
adc
cmp
mov
je
xlat
sub
mov
fs
cs
int3
cmp
decb
or
sahf
lret
xor
mov
adc
test
das
push
dec
jbe
adc
jg
popa
mov
test
cli
dec
or
adc
push
fcmovb
popa
pop
lock
pop
loope
cmp
sub
orl
xlat
in
add
mov
out
js
in
gs
pop
int3
insb
hlt
inc
data16
imul
lods
push
adc
int3
incb
xchg
push
lods
push
dec
mov
pop
mov
mov
or
insb
rcrl
push
mov
pop
imul
cmp
sub
repz
movsl
js
mov
repz
push
jmp
cltd
push
rcrb
push
nop
and
xchg
pop
xor
mov
jmp
pop
enter
push
mov
cmp
sti
iret
xchg
mov
inc
mov
mov
push
iret
sbbl
in
mov
sarb
rcrb
cmp
test
sub
in
add
dec
ret
push
dec
jnp
pop
mov
add
dec
adc
ret
orl
js
int
jle
xchg
mov
jno
cmp
pop
adc
jg
addb
fwait
lds
cmp
sbb
fdivrl
and
les
repnz
or
jne
loopne
pop
fbld
es
mov
imul
pop
bound
jae
dec
sub
mov
push
ja
and
test
mov
popf
xor
xchg
dec
daa
add
cwtl
pop
addr16
or
arpl
lods
cwtl
lods
push
sahf
pop
pop
out
fdiv
out
xor
fs
or
into
sbb
loope
cmp
shrl
in
or
nop
ret
call
jb
aad
or
push
add
incl
mov
push
jns
or
inc
or
test
xchg
movsb
and
jns
add
sub
cmp
aad
or
sti
or
std
mov
aas
pop
mov
jno
jns
xchg
dec
inc
add
popf
mov
mov
cltd
cmc
mov
mul
repz
add
lock
es
mov
jmp
scas
pop
cmp
idivl
jbe
lret
jl
xchg
outsl
stc
push
aam
inc
push
mov
pop
icebp
jno
cmp
addl
jmp
or
xchg
loop
rcl
daa
cmc
aam
jge
push
or
push
iret
push
lret
pop
xchg
push
lock
in
pop
xchg
xchg
jmp
filds
jns
add
aas
imulb
jns
cwtl
add
dec
in
fadds
push
push
jge
ss
xor
mov
movsbl
mov
pop
int
pop
not
xor
fimull
jne
dec
fnop
fisubrs
les
sub
psllw
loop
and
mov
outsl
sub
pushf
shr
test
in
jo
mov
cli
sbb
ss
int3
push
mov
adc
iret
push
pop
sub
pushf
out
fimuls
mov
and
mov
aad
mov
mov
mov
in
add
ror
add
xchg
add
push
xchg
jno
and
jle
adc
xor
pop
adc
fsts
lret
and
jle
mov
iret
repnz
lods
clc
clc
outsl
fldl
mov
fists
sub
xor
jecxz
addr16
dec
scas
loope
popf
out
stos
xchg
jnp
mov
pop
inc
xchg
adc
push
jbe
fmuls
lcall
leave
pop
out
cmp
jmp
add
mov
sbb
test
jmp
mov
lock
popa
lret
mov
stos
and
fs
cli
out
jl
sbb
loop
pop
idivl
mov
ja
push
scas
and
cwtl
jmp
or
lret
mov
adc
and
pop
or
inc
scas
xchg
mov
xchg
lret
lahf
scas
loopne
jnp
cmp
imul
mov
int3
sbb
rclb
push
adc
and
push
jne
adc
fucomi
mov
cmc
in
and
js
xchg
les
or
mov
je
outsl
pop
mov
pop
sub
inc
mov
imul
rcll
ja
mov
gs
xor
pushl
mov
mov
in
mul
inc
push
mov
and
pop
push
inc
in
or
decb
adc
into
es
pop
fldt
mov
pop
aas
and
loope
in
enter
add
bnd
jl
dec
xchg
jmp
dec
ds
inc
pop
ljmp
mov
repz
adc
sahf
pop
test
pop
shr
or
ret
insb
bound
aaa
movsl
jo
adc
out
std
test
mov
rep
loop
stos
push
cmc
mov
call
mov
push
pusha
aam
nop
and
xor
ffree
sbb
fldl
lea
push
cmp
mov
xorl
xor
fmull
jg
test
sbb
adc
iret
jo
mov
aam
call
movsb
mov
mov
iret
push
add
scas
push
in
fsubrl
les
inc
xorl
push
clc
mov
push
scas
jp
test
out
outsb
mov
add
daa
nop
rol
xchg
test
add
leave
jae
ja
repz
mov
adc
mov
mov
xchg
repnz
es
mov
in
inc
outsl
imul
mov
xchg
xchg
insl
dec
jl
insl
or
jmp
loop
push
mov
cmp
push
movsb
aam
mov
imul
std
stc
mov
in
jmp
ret
pop
ret
loop
cmp
int
rorl
clc
clc
mov
ss
mov
mov
mov
stos
sbb
sub
int3
push
jle
pop
popa
es
stos
and
cs
arpl
or
push
sbb
inc
xor
xor
addr16
cld
sub
scas
enter
std
xchg
mov
pop
out
lock
sub
sbb
movsl
cmp
lds
popf
out
mov
push
lods
inc
outsl
mov
mov
jo
orb
dec
popa
xchg
pop
lds
das
sti
ret
and
sub
dec
adc
icebp
arpl
insb
in
xchg
jle
or
push
cmc
add
and
insb
jbe
mov
sub
std
leave
stc
jb
in
push
loope
xor
cltd
popf
cmp
arpl
out
out
sub
push
lds
lahf
add
dec
pop
test
daa
mov
ret
dec
idiv
into
in
roll
jns
mov
addr16
lock
jmp
cmp
movsl
xor
stos
pop
mov
insl
and
ret
inc
stos
mov
scas
push
pop
fdiv
ja
inc
jmp
aaa
fs
dec
jno
scas
into
ja
or
in
add
inc
cmp
xchg
inc
orl
jp
or
jnp
jmp
push
int
imul
mov
test
xchg
pop
sti
ja
or
mov
clc
mov
pop
sqrtps
imul
jge
jp
ja
sbb
cmp
jns
ja
pop
push
jge
daa
repz
jecxz
inc
cmp
rcr
shrl
mov
aaa
iret
inc
cmc
xchg
ret
dec
and
xor
fsubl
sbb
or
leave
pop
nop
and
adc
sbb
mov
cwtl
fstpt
add
dec
add
in
jb
daa
mov
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
ficomps
inc
dec
subl
in
movl
xor
lret
mov
pop
loop
mov
dec
ret
cmp
psrad
sub
fadd
sbb
push
pop
sbb
ljmp
jl
por
xchg
lea
sbb
pop
fstl
mov
out
dec
pop
aam
fmuls
adc
loopne
pop
ljmp
push
dec
mov
aad
add
stc
fistps
lods
add
jg
cltd
add
mov
cmp
aad
repz
mov
outsb
xor
and
inc
pop
mov
add
sbb
jno
push
int
push
test
dec
push
mov
dec
or
shrl
in
push
in
js
inc
push
mov
dec
into
inc
lret
xchg
dec
arpl
push
adc
cmp
sbb
cmp
addb
imul
or
xchg
rcrl
xor
imul
pop
out
sbb
out
call
mov
dec
pop
pop
nop
xchg
inc
and
aas
or
aad
push
outsl
or
fs
add
pop
dec
adc
dec
gs
adc
ret
jl
xchg
sub
cmp
xor
push
rol
subb
jae
test
sub
imul
jo
cli
push
stc
dec
cmpsl
push
imul
cwtl
fadds
jge
or
nop
mov
push
add
push
shll
imul
mov
stos
scas
test
xor
jbe
push
push
add
js
pop
xor
lods
sbb
out
popa
js
stos
mov
mov
lahf
inc
pop
fisubrs
push
call
daa
pop
jg
push
loopne
sbb
popa
ret
xchg
gs
jo
outsb
sahf
out
push
pop
inc
mov
pop
or
inc
fs
dec
xchg
mov
cmc
xor
mov
fcmovb
movsl
sbb
js
mov
lods
lea
outsl
inc
je
jmp
mov
jbe
es
pop
addr16
ret
add
push
inc
scas
inc
aas
clc
mov
add
inc
aaa
dec
outsl
mov
xor
mov
add
mov
lret
push
mov
pushf
xchg
push
lahf
sub
lods
imul
jp
mov
cmpsl
adc
jbe
sub
inc
popf
xchg
fcoml
shll
pop
adc
inc
jle
lcall
ret
bound
inc
sub
jl
aam
xchg
pop
rolb
jae
push
arpl
cmpsl
mov
dec
xchg
jnp
fwait
fwait
push
lods
push
in
cli
mov
and
stos
pop
sub
aaa
movsb
jmp
leave
in
out
lds
insl
pop
lods
xchg
lret
out
pop
aam
sub
outsb
jns
jo
ljmp
pushf
inc
fiaddl
lret
aam
jnp
call
jle
sub
outsl
imul
in
pop
adc
mov
loop
enter
push
dec
adcl
inc
dec
push
lds
movsb
sahf
sub
and
or
add
and
call
popf
jg
xchg
sub
mov
sbb
lret
std
test
ss
push
idivl
cmpb
je
shll
outsb
dec
stos
ficoms
jnp
jecxz
mov
inc
xchg
cli
sarl
mov
pop
jo
inc
add
mov
test
and
xor
mov
in
push
push
out
cmp
dec
mov
push
inc
cmp
push
aas
dec
out
leave
jbe
cmc
in
sarl
mov
roll
into
adc
in
lock
ffree
movsl
bswap
dec
je
test
loop
and
sub
lret
aaa
cmp
loope
mov
cmp
movsb
enter
aas
mov
mov
cmp
dec
pop
and
cmp
mov
cli
in
add
testl
lcall
ljmp
cmp
loopne
sub
out
sti
mov
arpl
arpl
mov
das
dec
adc
repnz
mov
inc
roll
and
inc
push
aas
pusha
std
ret
int
subb
lcall
dec
add
jns
pop
outsl
fs
out
push
lods
decl
and
mov
gs
xchg
test
ja
repz
inc
movsl
sub
addr16
jmp
or
in
test
add
add
fwait
mov
mov
xor
aas
inc
gs
ljmp
movsl
fldl
in
into
push
cmp
mov
sbb
sbb
adc
jp
and
les
movsb
jmp
ret
movsb
sarl
lock
in
cmp
jne
mov
dec
mov
add
pop
pop
mov
add
add
lea
or
arpl
fs
test
mov
xchg
pop
add
mov
inc
imul
fadd
xor
jae
mov
push
out
jecxz
fwait
cs
adc
jno
add
push
mov
push
cltd
mov
push
nop
dec
jo
in
les
inc
lods
dec
inc
test
andl
jno
cmc
jle
add
and
imul
sub
scas
daa
pusha
push
or
add
xchg
and
loope
sub
addr16
loope
mov
scas
ljmp
pop
pinsrw
cmp
js
ret
inc
gs
pop
sarb
inc
fadds
lock
dec
pop
bnd
icebp
or
xchg
mov
in
adc
add
in
mov
sub
sbb
xchg
lods
into
aaa
pop
jo
lahf
roll
and
mov
push
aad
add
jo
std
imul
and
mull
adc
outsl
imul
jb
imul
jle
adc
aam
fs
pop
jns
insl
fsubl
adc
inc
aas
dec
shlb
repnz
sarl
enter
nop
xchg
pop
jmp
xchg
rclb
outsl
jecxz
or
js
cmp
sub
pop
sub
dec
jno
add
pop
ss
push
pmaxub
cltd
int3
ret
or
cmp
adc
loope
or
out
inc
scas
rcrb
and
jl
aaa
mov
cmp
in
adc
hlt
inc
sub
cmpsl
in
mov
stc
lods
jne
lahf
xor
mov
jp
bound
push
xchg
ror
mov
ljmp
mov
mov
movsb
xchg
mov
imul
push
pop
cmp
jmp
dec
hlt
jo
pop
shll
push
inc
add
pushf
outsl
pop
dec
mov
mov
push
pushf
inc
adc
fldcw
inc
inc
add
mov
xor
sub
pop
mov
xor
repz
leave
dec
addr16
mov
adc
ljmp
mov
stos
aam
movsl
pop
stc
jbe
popa
cmpb
dec
pop
xorl
loop
mov
in
dec
or
cmp
dec
test
fs
xchg
lcall
fdivrl
and
mov
adc
and
sub
mov
sbbl
loope
or
cli
jae
pop
and
pop
or
inc
push
cmc
xrelease
scas
fs
sbb
daa
inc
js
sbb
test
stc
xchg
out
dec
push
fsubl
ds
sbb
jl
in
rcrb
inc
aam
sub
cmc
mov
or
pop
aad
ret
dec
int3
popa
test
mov
aam
inc
iret
lcall
dec
lock
daa
sub
mov
jb
rcl
testb
lret
lcall
stc
or
data16
rorb
loope
arpl
jge
cltd
repnz
pop
stc
mov
hlt
testb
bound
xor
cltd
pushf
popa
mov
sub
inc
ret
push
stos
lods
je
xchg
jmp
es
jne
inc
add
mov
cmpsb
mov
inc
insb
pop
stc
mov
or
xchg
test
movsl
imulb
in
arpl
mov
push
in
mov
mov
xchg
xor
push
andb
mov
stos
inc
cmp
push
pop
pop
mov
add
loopne
sbb
ja
mov
mov
push
sbb
push
repnz
xchg
js
xchg
dec
jmp
lods
mov
or
mov
les
fdivrs
call
or
inc
rcll
pop
mov
adc
in
jnp
sbb
mov
cwtl
out
js
popa
or
stos
cmpsl
jp
pushf
sbb
add
or
cli
aad
sti
cmpl
xchg
dec
cwtl
out
mov
stc
or
leave
push
push
addb
fiaddl
into
mov
jbe
mov
and
sbb
adc
cli
hlt
lcall
jns
push
and
repnz
push
sub
cmp
inc
pop
fs
test
mov
mov
jns
cwtl
xchg
bound
loop
movsb
mov
xor
xchg
popl
push
jecxz
stos
xchg
cltd
push
and
nop
lods
inc
les
xchg
std
pop
pop
movsl
test
sub
mov
fstl
lret
mov
and
icebp
bound
dec
jle
ficomps
repnz
outsb
dec
xorl
les
add
shlb
ja
fistps
cmp
shll
inc
lcall
xchg
lret
cmp
das
pop
ja
sub
dec
add
addr16
mov
inc
xchg
and
arpl
xor
rclb
inc
push
rcl
fwait
dec
cmp
lock
adc
push
xchg
repz
jg
inc
xor
repnz
jp
pop
xchg
sbbl
das
cmp
jle
mov
imul
jg
scas
cmpsl
pop
insl
lret
stos
adc
and
ss
and
xor
adc
nop
mov
mov
xchg
sub
push
ret
ret
cmp
inc
jo
pop
adc
jp
mov
add
mov
add
rorb
mov
ficomps
mov
xor
lods
mov
mov
mov
mov
adc
test
and
fprem
loope
sbbb
dec
fucomip
lock
lock
mov
loope
cmp
dec
cmc
rol
sub
lcall
xor
sbb
aaa
mov
xchg
lret
cmp
jge
test
test
mov
cwtl
and
or
add
sub
stc
dec
and
int3
jg
pop
mov
pop
out
sub
xlat
cmp
call
xor
aas
nop
xlat
cs
mov
divb
loop
popa
add
cltd
dec
stc
scas
inc
and
sbb
mov
xor
push
cmpsb
mov
enter
jmp
in
inc
mov
popa
pop
pushf
xchg
std
es
adc
dec
sub
imul
xchg
sti
lods
pusha
test
dec
inc
push
stos
out
mov
jmp
sub
mov
outsl
inc
iret
test
inc
mov
pop
xchg
shrl
or
decl
xchg
jnp
xor
inc
test
jns
lds
movsb
subl
in
inc
inc
in
push
notl
jae
fwait
and
jne
xchg
mov
in
ret
ja
xor
cld
mov
movsb
daa
mov
stc
loopne
fsubr
call
mov
sbb
sub
add
dec
int
aaa
dec
jle
push
mov
and
les
popa
add
jp
hlt
ljmp
cmp
jmp
inc
scas
and
ljmp
adcb
xlat
add
hlt
mov
adc
fcomip
lock
pop
sub
mov
test
aas
adc
aam
push
sbb
inc
movl
or
daa
mov
in
inc
iret
mov
xor
mov
sar
push
bound
rcll
sbb
mov
and
dec
scas
mov
fistpll
mov
sbbl
ficomps
add
ja
leave
dec
add
mov
jae
jmp
push
dec
arpl
mov
dec
mov
cmp
cld
sbb
pop
insl
enter
push
cld
pop
stos
and
xchg
or
dec
aam
ss
add
inc
dec
jp
adc
mov
in
repz
vpaddq
sbb
in
mov
popf
xor
aas
hlt
into
les
ss
loope
sub
lock
xor
mov
or
je
out
mov
ds
adc
test
mov
fildll
mov
in
mov
sub
movsb
adc
dec
mov
add
add
outsl
aad
ret
fsubs
add
add
lea
xor
or
push
mov
sub
fbstp
cmp
roll
rorb
jge
cli
dec
xor
push
or
dec
ret
movsl
hlt
addl
cmpsb
mov
ljmp
push
or
shll
in
add
pop
push
pop
lret
jnp
sbb
inc
fimull
xlat
sarb
xchg
sbb
jb
imul
mov
sbb
idivb
mov
rorl
push
shlb
sub
xchg
test
mov
frstor
ljmp
in
lock
or
mov
in
lods
mov
ja
rcll
jl
xor
roll
or
pop
mov
mov
and
jne
movsb
cltd
add
mov
pop
dec
dec
mov
xchg
rcrb
outsl
incb
in
rcr
add
pop
adc
fdiv
fs
jle
fstpt
push
xchg
loop
add
loopne
adc
xchg
rclb
push
test
mov
inc
loopne
jg,pn
and
hlt
cltd
fcmove
push
xor
mov
push
shll
lods
stos
jecxz
out
jnp
adc
imul
dec
shll
nop
nop
xchg
jp
jnp
mov
bound
add
pop
or
and
push
lret
add
dec
mov
out
add
add
adc
imul
mov
jecxz
pop
out
div
mov
mov
fadds
xchg
pop
pop
call
lfs
cmp
mov
in
gs
notl
sahf
pop
and
mov
adc
out
fadds
outsb
add
scas
pushf
iret
iret
sub
mov
push
adc
pop
fs
mov
insb
xlat
or
lock
insl
fimull
je
push
cmc
jmp
jg
pop
mov
inc
in
adc
jle
jno
sar
fs
lea
xchg
push
pop
cmp
loopne
sub
data16
fisttps
jmp
xor
sub
mov
jo
sbb
jae
cmc
xchg
in
push
mov
xor
fists
mov
fwait
scas
movsb
or
ret
jb
cmp
sbbb
mov
mov
push
int
xchg
cmc
addl
sarl
subb
push
pop
jne
cmpsl
adc
das
insl
pop
popf
fnstcw
sbb
jb
and
jecxz
pusha
pop
cmp
faddp
cli
fnstenv
or
lret
xor
push
mov
lret
fistps
sub
inc
xchg
cmp
frstpm(287
dec
ror
sbb
lea
xor
and
adc
adc
pop
jo
andl
mov
cmp
xchg
jg
adc
into
mov
lea
pusha
cmp
loope
adc
inc
sbb
push
dec
lods
lret
pop
std
cwtl
test
pop
adc
out
xchg
test
lcall
add
adc
or
xchg
inc
mov
scas
mov
and
mov
int3
xor
movsl
xor
xchg
push
hlt
mov
sub
xchg
and
sub
loop
lods
sbb
lea
push
stos
inc
and
dec
mov
leave
rcrl
xchg
lret
xorl
push
data16
cmc
mov
sahf
aad
cltd
int3
fldt
test
into
sbb
sbb
mov
sbb
jmp
pop
jne
jno
add
mov
xchg
rorb
pushf
out
pop
xchg
dec
jno
jmp
pusha
sbb
xchg
and
sti
mov
stos
and
orl
mov
xchg
data16
cmp
ret
dec
xor
shl
mov
xor
xchg
dec
adc
fsubs
call
cmp
mov
add
xor
test
mov
stos
mov
or
pop
jecxz,pn
cs
loopne
cmp
adc
mov
jmp
sar
scas
xchg
cwtl
add
mov
jg
movsl
xor
push
or
cld
movsl
lret
pop
rclb
dec
test
mov
adc
push
push
cmp
xchg
pop
xchg
xchg
push
push
out
xchg
in
pushl
sbb
idiv
sub
leave
mov
ljmp
xlat
mov
fidivrs
test
or
xor
push
xchg
mov
cmpsb
ljmp
pop
aad
insl
sti
add
lret
ljmp
aam
mov
jae
mov
jo
jno
scas
mov
mov
icebp
in
xchg
jbe
cld
mov
je
dec
es
ds
cmp
inc
xor
jae
test
mov
inc
hlt
jns
nop
inc
sbb
insl
sarb
lock
xor
fcoms
insb
std
test
fildl
pop
push
mov
mov
push
es
imul
jo
or
nop
add
cwtl
cmp
popa
cmp
in
pop
int
sub
pushl
enter
int3
push
iret
xchg
pusha
fistps
sub
fdiv
cmpsl
jo
shlb
jae
repnz
movsb
icebp
rorb
stos
xor
arpl
xchg
stos
stos
test
loopne
stc
cmp
negb
mov
adc
inc
mov
fwait
jmp
lods
icebp
xchg
test
sti
cmpl
rorl
add
cmp
mov
mov
out
jns
inc
mov
mov
data16
ds
or
movsb
cmp
nop
mov
rcll
pop
mov
cmpsb
inc
jg
or
push
test
or
div
daa
ds
add
mov
flds
jp
mov
xorl
into
mov
je
cmp
xor
sub
mov
imul
mov
jecxz
cltd
aas
sahf
mov
xchg
lret
negl
shr
pop
pop
icebp
adc
ffreep
negb
push
mov
scas
out
stc
fiadds
test
popf
imul
loopne
dec
fistl
dec
push
and
and
fcoms
int
outsb
stc
scas
outsl
lcall
add
ret
pop
frstor
add
jg
fwait
and
inc
or
test
and
lock
mov
push
push
and
jmp
cmc
insb
dec
mov
push
shlb
dec
add
cmp
outsl
stc
fisttpll
xchg
dec
mov
adc
sbb
mov
cli
leave
es
mov
push
cmp
push
mov
jne
fstpt
out
ds
pop
jne
cmp
xor
jo
out
mov
xor
imul
xchg
cs
xchg
shr
adcb
cli
cmp
loope
add
shlb
roll
dec
fsubs
pushf
mov
add
das
jmp
popf
imul
mov
cmp
push
xchg
test
pop
popl
add
ss
mov
orb
mov
jno
sahf
jo
push
lret
cmp
adcl
cs
lods
fcoms
fiaddl
xor
int3
loop
filds
leave
ljmp
cmc
xor
mov
mov
xchg
fdivr
loope
xlat
out
sbb
pop
roll
push
fdecstp
orl
stos
nop
test
pushf
int
jl
ja
xlat
fisubrs
sbb
leave
jno
lcall
inc
lea
add
and
les
mov
add
inc
imul
in
sbb
sbb
test
inc
adc
or
xchg
mov
dec
sub
inc
mov
cmp
mov
jecxz
sbb
push
fcoml
movsb
and
lods
inc
lea
in
notb
sahf
mov
js
je
mov
dec
jp
pop
and
dec
cmp
cltd
pop
fstpt
ds
cmpsl
fmul
push
into
out
pop
stos
clc
push
sub
call
jne
out
pop
popf
repnz
lds
fwait
sbb
add
inc
in
dec
cltd
mov
dec
inc
addl
insb
push
shrl
ds
stc
xchg
test
fsub
clc
fiaddl
inc
pop
push
cmp
or
mov
dec
sti
cmp
arpl
push
pop
mov
fwait
xchg
pushf
aad
cmc
and
leave
fldt
es
mov
mov
scas
push
xchg
sbb
push
lcall
mov
cmp
and
mov
pushf
jmp
rorl
ds
scas
inc
inc
inc
jl
or
adc
out
aam
cmc
and
mov
inc
aaa
rorl
je
popa
mov
aaa
popf
repz
stos
xor
jo
lds
test
jge
cmp
mov
test
ss
arpl
xchg
leave
and
int3
cs
shll
jno
sbb
or
popf
jno
shrl
rcl
pop
mov
cmc
lods
adc
fsubr
xchg
int
fistpll
or
sbbl
mov
jp
push
in
pop
stc
cmpsl
lret
xchg
popf
rcrl
mov
mov
divl
leave
mov
iret
push
cmpsl
scas
lods
bound
pop
pop
sbb
inc
mov
stc
sbb
pop
pop
ret
dec
or
mov
mov
xor
test
sub
ret
out
push
fildl
movsb
jecxz
mulb
ja
jb
jne
pusha
pop
psadbw
inc
fnsave
dec
arpl
xchg
ret
adc
sbbb
cmpb
push
in
stos
imull
lea
cmpb
mov
pop
call
repnz
fstps
or
sub
pop
fisubrs
mov
push
adc
iret
scas
lods
xchg
insl
xor
ds
sub
add
stos
ror
mov
insl
lret
and
cld
cmp
mov
mov
icebp
sbbb
popa
in
shlb
lds
out
add
loope
jp
pop
arpl
pop
fldt
in
aas
dec
add
sbb
sub
jp
sbb
mov
xlat
inc
jb
push
inc
cld
rcl
push
cmp
xchg
enter
xchg
cmp
add
pop
jns
out
dec
mov
stos
push
and
jbe
sub
jge
mov
movsb
jb
or
movsl
movsl
mov
and
push
in
inc
fsubrs
xor
push
add
dec
gs
ljmp
mov
mov
mov
scas
imul
stos
sbb
lea
repnz
xor
call
ds
or
mov
std
pop
cwtl
pop
cmc
push
adc
add
add
daa
jmp
lcall
int3
push
mov
in
mov
sbb
rcrl
add
mov
sbb
clc
inc
push
nop
inc
add
mov
shlb
cltd
push
and
fiaddl
mov
es
mov
jge
pop
sbb
sub
aas
xchg
xlat
mov
fistps
cltd
xchg
test
adc
cmpsl
jns
je
lds
mov
rcr
cmp
imul
add
xchg
xchg
cwtl
jecxz
or
loopne
pop
test
inc
xlat
test
rclb
ficoml
sbb
pop
enter
or
icebp
rcrl
sub
clc
fsubs
push
inc
jae
mov
mov
sbb
mov
popa
scas
pop
hlt
jne
pop
stos
shlb
iret
and
mov
or
shl
and
xlat
repnz
mov
mov
inc
into
inc
aam
inc
rclb
jge
push
adc
scas
jp
sbb
enter
cwtl
add
outsl
pop
mov
iret
pop
jecxz
roll
aaa
mov
mov
rcl
ret
sub
in
out
cmp
adcl
pusha
mov
push
xor
out
push
js
and
push
fldt
out
xchg
pushf
popf
aam
push
sub
sbb
pop
add
mov
mov
or
iret
inc
prefetch
cli
jno
scas
mov
mov
xchg
enter
push
add
fisubrs
inc
cmp
sub
sub
fldenv
loope
or
and
out
sub
sahf
shlb
adc
cs
les
sbb
iret
jnp
lock
in
int3
int
arpl
cmc
ja
jbe
das
and
dec
mov
push
pop
or
out
movsb
sub
and
and
xchg
mov
movsb
jle
lret
movsb
sub
xchg
rcll
dec
fbld
icebp
sbb
pushl
push
cmp
aas
and
xor
je
sub
lods
test
rorb
sub
push
sub
fdivrs
mov
mov
aad
gs
mov
scas
leave
sub
cmp
in
jo
pop
mov
pop
xor
loopne
test
cmpsl
out
int3
jne
mov
scas
lea
xchg
test
jbe
enter
and
xor
adc
insl
push
sub
push
out
pop
xchg
in
mov
aas
inc
shl
add
fs
push
std
adc
jge
iret
jo
ret
cmp
call
or
jae
inc
bound
fnstcw
test
push
or
cmp
insl
cmpsl
mov
mov
sub
add
push
ret
push
xchg
sti
bound
jl
jnp
mov
fiadds
mov
inc
pushf
xor
or
push
mov
jnp
in
and
fscale
push
nop
inc
stos
cmpsl
bound
mov
arpl
das
pop
mov
scas
dec
popa
jae
xchg
jae
in
mov
lea
jo
and
push
adc
xor
inc
push
sub
in
movsb
jmp
or
ja
adc
in
mov
clc
mov
dec
adc
sub
pop
sbbl
mov
add
push
add
xchg
sar
arpl
xor
sub
or
lret
push
in
mov
xor
mov
cmp
loopne
outsb
icebp
loope
pusha
sub
xor
aas
roll
mov
inc
je
xor
jmp
mov
scas
jge
jle
fs
lods
out
popa
hlt
or
cltd
lds
aad
adc
pop
aad
scas
jnp
mov
mov
mov
or
out
adc
popa
mov
cld
xchg
popa
test
test
pop
int3
cmp
fnsave
ljmp
cmpsl
lods
and
ret
pusha
adc
insl
pop
jmp
lret
mov
test
add
cli
addr16
outsl
mov
pop
dec
inc
cwtl
jb
mov
xor
ror
insb
jns
xor
sub
out
mov
pop
cmc
rorb
xchg
add
pop
inc
dec
adc
mov
pop
repz
xchg
rolb
stc
aas
out
and
and
enter
xchg
xchg
push
imul
cld
mov
add
push
and
sub
add
adc
xchg
inc
jp
and
icebp
mov
push
imul
mov
pop
cld
push
inc
stc
pop
sub
mov
mov
lea
push
pop
and
jne
ja
xchg
and
out
mov
sub
nop
dec
inc
mov
sbb
push
fsincos
sub
aas
adc
lret
xor
scas
lods
mov
jp
out
push
jecxz
arpl
sub
pop
out
enter
and
popf
mov
mov
sahf
movsl
or
or
xchg
pop
clc
insl
sub
test
loopne
inc
fildll
or
jge
fmul
xchg
sub
pushf
adcb
iret
xor
xchg
mov
sub
push
fstps
test
pop
cli
cwtl
push
iret
push
pop
std
call
daa
movsb
or
pusha
jmp
push
xchg
mov
dec
inc
sbb
pushf
dec
mov
mov
and
dec
loop
outsl
test
jns
mov
daa
cwtl
xchg
ret
sbb
popf
in
into
dec
inc
cmpsl
jmp
adc
or
push
stos
es
and
aas
push
sbb
int
insb
nop
dec
inc
es
and
out
mov
or
push
cmc
xchg
fistpl
arpl
repnz
rol
nop
xchg
stos
movsb
mov
ret
sub
arpl
pop
xchg
mov
mov
dec
mov
clc
arpl
pop
inc
dec
lahf
stos
mov
adc
jl
cwtl
jnp
xor
lret
adc
pop
sahf
xor
jle
insl
cli
jecxz
cmpsb
sub
pop
jmp
dec
std
sub
mov
ljmp
in
xor
into
add
fsubrl
sahf
fst
pop
inc
pop
xor
pop
mov
pop
shl
push
movsb
push
icebp
mov
fsubs
js
add
add
pusha
in
lods
xor
and
push
mov
xor
inc
rcll
jns
cmp
fcmovne
rol
cmp
pop
fmulp
int
stos
jno
xchg
outsb
dec
xor
sbb
fs
xchg
push
jne
stos
call
loop
sahf
scas
pusha
mov
xchg
mov
shll
mov
adc
add
int
mov
mov
ss
pusha
fwait
jmp
fwait
stc
and
lcall
ss
mov
and
paddusb
iret
adc
or
fmuls
jle
xor
dec
jmp
dec
test
sub
shlb
subb
lahf
mov
lcall
and
jo
pop
dec
jl
and
or
or
mov
popa
ljmp
cmp
mov
test
in
pusha
js
or
xor
lods
jne
xlat
mov
cli
inc
inc
and
jmp
cmp
test
cmp
sti
subl
ret
push
mov
icebp
das
repnz
push
sbb
pop
cltd
inc
rcrb
sub
cmpsb
idivb
sub
add
loopne
imul
and
icebp
in
dec
push
int3
push
imul
in
int
jbe
loopne
imul
test
cmp
sar
andl
adc
arpl
add
add
cmp
cmp
mov
loopne
add
mov
data16
fdivl
mov
les
cmpsb
test
arpl
scas
popa
js
mov
sbb
jno
ss
addps
jp
cmp
mov
push
dec
sub
fsubl
jmp
adc
mov
add
push
pop
shrl
dec
push
cli
mov
addr16
mov
mov
iret
into
mov
stos
fidivl
repnz
outsb
inc
in
iret
mov
adc
int3
or
out
inc
lods
and
inc
js
xchg
das
mov
test
mov
ret
push
jbe
dec
jne
inc
inc
xchg
and
test
xor
xor
stos
out
repz
clc
jmp
pop
push
outsb
mulb
add
popf
mov
xor
in
jns
jp
xchg
pop
fwait
test
lret
repnz
sub
aaa
std
cwtl
pop
cmp
xor
xor
lret
mov
es
push
rorl
sub
and
cmpsb
jne
xor
ss
test
movsb
inc
fidivs
pop
inc
sarl
jo
xchg
inc
xchg
out
addl
mov
and
adc
test
cmp
mov
xchg
fcomps
xchg
lods
sub
mov
aaa
movsl
pop
xchg
idiv
xchg
stos
in
sub
ljmp
sub
cmp
data16
popa
inc
nop
pop
inc
insl
out
xchg
xchg
pop
inc
sub
jb
xor
lds
jns
sbb
jae
out
cmpsb
leave
pop
push
idivb
cmp
out
shl
jg
sbb
add
hlt
and
jecxz
shll
add
and
repnz
or
pop
lds
add
xlat
mov
in
mov
lods
mov
loop
or
pmaxub
js
int
and
push
mov
or
pop
shrb
sub
inc
loopne
int
rol
push
inc
sti
xor
push
shll
repz
pushf
subb
in
out
shlb
int3
push
cmp
std
sbb
ret
dec
data16
cmpsb
std
lret
and
cld
or
loop
inc
mov
imul
xchg
adc
je
sub
dec
mov
or
mov
ja
jo
pop
sbb
mov
add
push
cmc
inc
push
or
mov
lds
cli
lahf
stos
jo
out
std
pop
movsl
or
jg
test
fisttpll
enter
iret
mov
inc
insl
fisttpll
jnp
lods
add
sub
fistpll
rcrl
xor
mov
xor
loopne
in
pop
lcall
fwait
and
push
jae
scas
and
hlt
cs
int
or
inc
fistl
stos
jns
pusha
lods
outsb
mov
cwtl
jne
loope
out
jle
dec
push
jl
pushf
imul
xchg
pop
jbe
loop
jns
sub
xor
shrb
mov
ror
add
jbe
jno
and
cmp
adc
ss
sub
sbb
dec
inc
lock
js
and
ljmp
adc
test
mov
das
lds
dec
or
xor
cmpsb
mov
inc
pop
pushf
or
sbb
add
sub
jae
mov
test
sbb
push
icebp
mov
outsl
popf
adc
or
xchg
bound
cmc
ljmp
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
adc
ja
dec
sbb
xchg
jnp
